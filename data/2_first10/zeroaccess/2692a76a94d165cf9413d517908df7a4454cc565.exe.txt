push
mov
sub
mov
mov
jmp
adcb
shrl
lds
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
xor
cwtd
jg
pusha
pop
sbb
mov
roll
aad
lods
pop
out
cmc
test
dec
and
push
ret
cmp
scas
lods
divb
popa
outsb
cwtl
push
lock
push
sub
lods
fisubs
mov
fwait
ljmp
scas
aaa
stos
or
out
clc
push
andl
mov
popa
xchg
sti
push
stc
mov
popa
fmul
jl
push
and
aas
out
dec
xor
es
sbb
pop
jae
cmpb
jmp
mov
in
adc
xchg
inc
dec
dec
or
mov
xchg
jg
pop
mov
scas
ljmp
cwtl
push
add
aaa
or
dec
ret
stc
das
aas
lds
cmpsl
cmc
push
sbb
inc
sbb
push
pop
sbb
push
pushf
sbb
push
or
dec
out
loope
std
mov
imul
dec
lods
daa
add
push
jno
loope
or
jnp
mov
inc
stos
cmp
mov
xor
aad
mov
pusha
pop
rclb
pop
jecxz
add
cmp
mov
cpuid
enter
cltd
cmp
test
repnz
pop
repz
pushl
ficoml
adc
inc
fiaddl
imul
push
or
cld
jp
xchg
mov
or
mov
cs
inc
inc
arpl
jbe
mov
ds
aad
pushf
out
aam
push
push
cmpsl
xor
xchg
sub
add
insb
xchg
add
jl
jp
inc
adc
jecxz
mov
repz
and
aas
movsb
mov
push
addr16
scas
clc
adc
fs
mov
add
movsb
fcoml
fwait
stc
int3
pop
int
jle
cmp
dec
scas
in
sub
shll
add
or
sub
xor
jle
mov
xor
loope
out
sbb
xchg
addl
rcl
adc
loop
fimull
sbb
and
das
xor
xchg
in
adc
sub
mov
lcall
pop
or
mov
sub
pop
xchg
ret
xor
rcrb
inc
jp
jo
mov
sbb
popa
fsubs
add
imul
jecxz
cmpsb
nop
mov
lea
loop
adc
pop
inc
scas
dec
add
daa
mov
movb
jb
dec
lret
mov
xor
and
push
test
dec
xor
out
nop
jb
sbb
cmp
cld
jmp
xchg
lock
rorl
aaa
xchg
dec
xchg
in
jp
ds
lods
adc
loope
imul
push
mov
adc
xlat
and
test
loop
cmc
add
loop
movsl
ja
or
pop
out
push
and
pop
pop
clc
jge
mov
xchg
mov
les
in
sub
test
and
das
sbb
mov
mov
pop
les
mov
jnp
xchg
es
adc
mov
ffree
insl
jge
mov
test
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
mov
xor
jle
outsl
jge
jle
cmp
shr
adc
insl
neg
mov
loope
sbb
sub
std
aas
xor
dec
loopne
adc
push
lods
and
bound
mov
stos
sahf
and
push
pop
repz
mov
sbb
popa
adc
add
or
mov
push
daa
leave
add
fiaddl
lahf
call
mov
mov
cmpsb
sub
sbb
sahf
leave
test
cmpsb
cltd
rolb
stos
scas
mov
xchg
mov
sbb
cmpsb
lret
jmp
mov
mov
mov
pop
shrb
std
bound
nop
je
cmp
pop
jo
and
push
jg
test
lods
jmp
push
jbe
lahf
fadds
mov
notl
test
test
inc
loop
cmp
arpl
popf
push
xor
pop
in
dec
cmp
lea
pop
test
cli
mov
push
mov
cmpsb
and
subl
pusha
out
movsb
andl
andb
dec
or
dec
rolb
pusha
jns
xor
leave
adc
sub
scas
or
aas
push
ret
jne
clc
leave
das
aam
push
jnp
sahf
push
popa
aad
adc
xchg
ficoms
adc
push
add
cmp
fstpl
mov
or
adc
mov
jb
inc
push
stc
out
cmp
push
shrb
push
xor
lods
sti
fimuls
xchg
xor
stos
addl
inc
xchg
aaa
dec
fwait
xor
mov
clc
lds
jnp
movsl
xchg
mov
ss
push
movsb
push
add
faddl
cmpsl
xor
add
jecxz
pusha
sbb
mov
inc
in
int3
rclb
cli
adc
and
out
jnp
jae
stos
orl
in
lcall
push
out
ficoml
ret
sub
inc
dec
je
mov
out
insb
testl
lcall
mov
cwtl
daa
inc
fimuls
jge
ja
pop
push
or
mov
stc
cld
fbstp
sti
loope
addb
pop
in
repz
les
and
out
rolb
lea
in
mov
mov
sub
mov
fildll
in
push
stc
ret
dec
or
pop
int3
xchg
and
mov
sub
movsl
cmc
pop
dec
pop
ja
adc
sti
or
add
push
leave
jbe
cmp
add
inc
addr16
push
loope
push
pop
jmp
lods
pop
ret
in
test
jae
inc
cmp
in
mov
add
xor
mov
lods
std
scas
mov
popf
lods
pop
loopne
ds
mov
inc
int
xor
push
dec
cmpb
sbb
xlat
loopne
sub
fsubrl
neg
and
inc
aaa
and
test
push
cmp
fs
sub
fiadds
mov
add
lahf
xor
repnz
dec
fimuls
adc
es
adc
push
mov
sub
cmp
or
cmp
sbb
das
dec
add
mov
pop
sub
jmp
andl
xchg
mov
int3
xchg
mov
mov
dec
pop
in
data16
test
ret
xor
mov
cmpsb
jnp
cmp
cmp
clc
ret
clc
inc
stos
iret
cld
in
xlat
mov
inc
mov
out
cmpsb
mov
fwait
dec
mulb
adc
mov
mov
sbb
into
adc
icebp
jge
jbe
jbe
lahf
shll
lret
rorb
es
enter
stos
sub
cld
xchg
add
hlt
cld
lea
in
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
inc
jbe
pop
jns
jle
jge
jle
push
int3
fadd
mov
dec
sub
push
fisubrl
bound
lret
adc
cmpl
sahf
cmp
loopne
imul
out
push
mov
lock
sbb
and
fadd
ljmp
aas
or
mov
or
dec
lret
or
mov
into
cmp
cld
mov
push
movsb
hlt
pop
addr16
mul
movsl
pusha
push
enter
or
add
xlat
mov
mov
sbb
dec
cmpsl
test
jge
insl
hlt
ret
test
sub
int3
lret
cmpsl
pusha
clc
push
push
addr16
jmp
jge
pop
fmul
scas
std
adc
icebp
xchg
test
aas
jo
jp
mov
ret
ljmp
lahf
imul
mov
mov
out
mov
out
jo
push
lret
shrb
popa
cltd
xor
sbb
add
pop
cli
mov
push
dec
les
lahf
sbb
dec
or
roll
adc
pop
stc
ret
shll
mov
cmpsb
push
imul
lods
mov
sbb
repz
mov
rorb
mov
xlat
cmpsl
cwtl
addr16
add
dec
test
gs
dec
cmp
into
inc
repnz
jmp
lods
xor
xchg
lock
cld
mov
iret
pop
out
jnp
fistps
xchg
dec
scas
addb
mov
notb
xorb
sbb
sub
ror
insb
cwtl
into
stos
insl
mov
loope
aaa
mov
push
mov
dec
mov
inc
add
cmp
push
push
mov
inc
adc
jnp
cwtl
xor
test
into
and
sbb
push
add
and
cmp
dec
nop
push
es
and
xor
inc
test
mov
es
int3
mov
mov
dec
inc
movsb
cwtl
dec
inc
sarl
pop
push
aad
push
xchg
xor
repz
loopne,pt
cmc
xchg
push
push
xchg
loopne
dec
out
clc
push
dec
addr16
push
test
push
adc
insb
sar
sub
inc
mov
test
xchg
sub
pop
rclb
aas
scas
jnp
cs
add
mov
mov
dec
ss
stos
add
ret
push
dec
sbb
dec
xlat
in
ja
push
outsb
mov
gs
jo
pusha
xchg
icebp
dec
pop
push
inc
cmpsl
cmp
aam
cmpsb
jo
mov
imul
cmpsl
push
xchg
jmp
sti
pushl
aas
mov
or
cli
pop
in
fcoms
rcll
xchg
and
push
mov
int3
out
popf
xor
mul
cmpsl
imul
mov
inc
or
add
iret
and
inc
repz
lods
test
adc
add
fisubl
and
add
movsl
scas
sub
outsl
xchg
dec
or
lock
mov
jl
jne
or
es
and
dec
mov
test
popa
xchg
pop
lds
xor
cmc
js
jle
sbb
loopne
insl
out
or
notb
xchg
xor
fs
cmp
and
sti
add
outsl
fcomps
cld
adc
fcompl
mov
push
adc
pop
decl
rcrl
xchg
aad
add
or
add
fwait
mov
adc
mov
mov
idivb
push
jo
add
and
pop
shll
dec
inc
shll
xchg
aad
pushf
mov
sbb
inc
cmp
xchg
jne
jnp
dec
movsb
adc
cmpsb
arpl
and
gs
lds
into
inc
fwait
cmc
push
jp
xorl
cmp
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
xor
dec
add
jle
leave
push
dec
imul
cmp
test
pusha
add
out
scas
inc
jp
nop
arpl
repnz
nop
xchg
inc
pop
decl
dec
inc
loope
test
jecxz
pop
or
xchg
xor
dec
push
inc
push
dec
push
push
xchg
test
mov
daa
stos
popf
jae
inc
push
aam
in
cli
sub
jg
or
adc
mov
jp
mov
das
in
xor
movsb
int
mov
movsl
xchg
test
pusha
push
shll
pusha
sbb
or
hlt
fwait
mov
aad
push
stc
or
leave
inc
dec
xor
out
stc
inc
and
cwtl
movsl
aad
repnz
jbe
push
xchg
xchg
sti
cld
fbld
jmp
inc
pop
xor
push
outsb
mov
mov
adc
or
test
into
xor
decb
orb
pop
test
mov
lahf
lret
push
lahf
or
gs
mov
lock
xchg
or
or
add
clc
sbb
inc
fdivp
imul
in
test
and
jle
stc
mov
leave
sbb
fs
popa
sbbb
or
ds
mul
or
imul
js
mov
pushl
lds
jnp
ss
push
or
xor
or
adc
popf
mov
pop
jne
xchg
pop
or
and
xchg
jg
dec
bound
dec
mov
loop
dec
cmpsl
push
cmp
add
mov
inc
mov
jmp
adc
fisubs
fcomi
mov
das
pop
loop
push
add
or
xor
pop
pop
mov
adc
or
adc
inc
fmull
adc
adc
or
mov
push
int
fnstcw
pop
jge
inc
mov
ljmp
adc
sub
es
ror
insl
mov
fwait
mov
cwtl
pop
add
adc
mov
push
jno
test
jmp
jmp
xchg
lock
mov
pand
and
mov
jecxz
push
xor
dec
imull
insl
push
ret
iret
ret
addb
push
sbb
ds
pop
data16
jmp
stos
fs
dec
and
popa
sbb
and
cmp
dec
fcomi
daa
pop
pop
ss
mov
and
cmp
gs
lret
int3
stos
mov
lds
push
sub
mov
xor
or
jbe
inc
add
mov
jno
icebp
xchg
mov
stos
adc
movsb
jo
mov
cmc
sub
aad
inc
and
daa
mov
notl
jbe
movsb
leave
push
out
int
shlb
pop
and
mov
adc
mov
pop
xchg
push
insl
and
ret
daa
dec
in
adc
push
lret
jp
cmp
lahf
out
and
imul
adc
mov
mov
inc
movsl
inc
mulb
sub
aad
sahf
jmp
aam
sbb
mov
fisubl
mov
mov
and
call
xchg
lea
das
mov
sub
out
addr16
nop
and
lods
int3
xlat
je
xchg
xlat
jns
icebp
jmp
testb
adc
dec
and
add
repz
push
mov
mov
or
in
rolb
and
hlt
cs
cmp
mov
pusha
jge
fistpl
push
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
pop
ljmp
jle
add
je
iret
push
xchg
lahf
pop
pop
xchg
aad
jge
jmp
lret
popa
fyl2x
jecxz
xchg
pop
sbb
add
add
cmp
sbb
cmp
mov
or
cs
sub
inc
or
jg
cmp
xchg
mov
jo
ret
fidivl
pop
in
mov
sarb
fstps
jmp
push
sbb
mov
inc
int3
insb
push
dec
xor
mov
jb
jl
sti
addr16
push
stc
test
cmp
fs
fisttpll
inc
gs
ficoms
rclb
fpatan
push
notl
cmp
add
sti
lret
addr16
incb
ss
inc
dec
fldcw
add
je
mov
dec
bound
aad
out
adc
rcrb
aaa
cmp
aas
cltd
mov
push
and
jg
or
inc
leave
ja,pt
in
daa
xchg
out
lds
rcrl
cld
aas
fs
pusha
pop
lods
fmul
frstpm(287
mov
outsb
iret
jmp
stc
push
inc
lahf
aam
pop
lock
out
test
jge
jbe
shl
shlb
je
xabort
push
outsl
mov
repz
add
popf
pop
mov
push
push
ret
orb
fs
inc
test
fs
cltd
lcallw
test
mov
pop
dec
mov
dec
aad
in
and
out
mov
push
xor
pop
mov
xor
push
cmp
aad
jp
enter
xor
into
leave
push
je
xchg
mov
xor
add
or
insb
cli
and
ja
xchg
dec
fisttpl
scas
mov
pop
arpl
or
sub
out
xor
push
jae
lea
and
mov
xor
in
in
push
je
jnp
sbb
data16
push
push
xor
xor
pop
mov
mov
xor
cmpsb
sbb
jecxz
sub
shll
sub
adc
mov
inc
jmp
jne
pop
sti
push
aam
divl
cmp
cltd
jns
ss
sbb
neg
lods
cmp
and
in
lods
aam
xor
lahf
pop
jnp
roll
add
dec
dec
push
sub
scas
xor
mov
and
xlat
int
ss
aaa
clc
add
sbb
sbb
popf
cwtl
es
fadds
ret
ficomps
inc
repnz
adc
into
add
pop
xor
imul
ja
xor
jno
jnp
xchg
cmpps
pop
xlat
inc
loopne
rcrl
sar
icebp
push
outsl
jae
mov
xchg
rclb
adc
mov
aad
or
xchg
dec
and
cli
add
test
inc
mov
enter
test
out
dec
loop
jo
frstor
mov
sub
ret
and
jge
mov
push
xor
nop
cmp
mov
in
data16
out
fwait
and
lods
jl
sub
int3
lock
lods
rclb
xchg
pop
addr16
dec
lods
cmp
lods
xchg
mov
xchg
jns
loopne
cmpsl
dec
mov
and
jne
mov
pop
insb
adc
fadds
inc
mov
add
fs
stos
adc
inc
cmpl
enter
test
imul
fcmovb
pushf
pop
rorb
rolb
rol
inc
fdiv
out
dec
inc
fadd
jo
cltd
xchg
jb
sbb
fwait
push
or
push
out
shll
mov
jmp
decb
or
jl
andb
test
or
into
popf
push
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
shrl
loope
test
aam
dec
inc
gs
inc
cmp
lods
loope
jmp
or
sub
sarl
mov
fnsave
jno
das
shrb
cmpsb
xlat
enter
mov
jbe
push
jb
ss
mov
jl
pop
fstpl
pusha
sbb
jns
push
fs
cmp
aaa
fwait
int3
xor
shrl
ja
shrl
je
mov
or
dec
lcall
rorb
and
jmp
pop
aad
aam
pop
rcrl
ss
inc
mov
cltd
pop
xor
mov
out
and
xchg
leave
jl
int3
sahf
gs
leave
les
lret
pop
push
icebp
loopne
data16
jnp
test
and
clc
cs
test
int3
sahf
pop
sub
jg
out
icebp
mov
push
jne
daa
push
aas
loope
mov
add
lods
mov
cmp
cltd
in
sahf
repz
adc
hlt
lods
mov
jbe
pushf
and
sub
lcall
rcll
pop
and
mov
and
mov
fnsave
stos
mov
fildl
xor
mov
jb
subl
int3
cltd
mov
mov
and
mov
cmp
mov
inc
fwait
mov
insb
test
cmp
pop
adc
subl
mov
fninit
push
imul
lahf
test
xchg
sbb
popa
push
jp
call
pop
ficoms
test
push
push
or
xorb
clc
inc
imul
aad
pusha
or
das
jno
mov
mov
pushf
xchg
lods
adc
out
ds
sbb
shr
test
add
xchg
pop
or
lcall
les
inc
in
inc
aaa
aam
push
call
or
cmp
hlt
fsubrs
or
out
jge
cmc
movsl
or
add
pusha
popf
cmc
js
lea
pop
cmc
lahf
js
arpl
hlt
mov
adc
and
xchg
push
inc
dec
cmpsl
sbb
mov
fdivp
out
adc
cld
xor
mov
xchg
js
out
mov
cmp
cmp
lock
ret
in
sbb
jecxz
addr16
xchg
mov
or
jge
shrl
inc
out
adc
mov
lahf
cmp
lret
stc
out
mov
xor
lods
xchg
xor
sbb
mov
sub
pop
xor
mov
in
pusha
mov
rcrb
dec
aam
or
mov
xor
movsb
popf
ret
lds
int
out
daa
dec
xor
or
mov
divl
push
inc
push
cmp
cmpsl
xchg
sbb
popf
js
lock
mov
in
shlb
mov
sub
xor
into
sbb
addr16
xchg
push
sbb
xlat
inc
scas
mov
or
enter
xchg
and
jl
shrb
out
or
out
sbb
into
add
or
and
call
jbe
mov
dec
and
fstps
jne
push
mov
sahf
imul
int3
lcall
xchg
sub
insl
insb
and
movsb
jle
cld
fiaddl
lret
jne
aas
test
lea
push
out
cli
mov
incb
pop
in
adc
adc
xchg
fldenv
adc
adcb
in
ljmp
iret
std
lahf
push
push
lret
fistpll
jno
mov
pop
dec
xchg
popa
std
insl
scas
and
addr16
ror
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
push
add
cwtl
or
outsl
jge
jle
pop
or
xchg
loop
ficoms
dec
or
popf
outsl
push
xchg
rcr
ljmp
and
xchg
jecxz
inc
mov
daa
scas
or
jp
stos
jae
or
mov
fildll
xor
xor
loope
inc
cmp
mov
je
jecxz
mov
sbb
repz
dec
dec
or
mov
arpl
sahf
pop
xor
arpl
pop
sbb
cwtl
ja
lods
mov
sbb
inc
into
adc
repnz
mov
lds
sarl
fwait
adc
jp
out
mov
jb
add
nop
ud0
fs
ds
in
cwtl
pop
pop
push
adcb
outsb
data16
and
mov
daa
mov
or
stos
stc
or
outsb
leave
mov
js
pop
ret
push
addr16
sbb
push
ror
iret
aad
outsb
arpl
sub
and
xchg
pop
jp
push
pop
xchg
xor
popf
jmp
addr16
xchg
pop
nop
jle
loopne
or
xchg
ret
inc
rolb
sub
orb
pop
pusha
adc
pop
pop
cmp
rcl
cmp
add
mov
jg
inc
movsb
xchg
adcl
push
cld
sub
mov
mov
mov
popa
sbb
inc
test
xchg
aas
jle
jg
and
pop
sbb
pop
es
ret
cmpsl
insb
or
inc
sbb
fiaddl
insb
sbb
xchg
adc
mov
lahf
mov
and
pop
iret
out
sbb
mul
or
scas
sti
inc
pop
cs
ffree
mov
and
mov
outsl
jmp
insb
push
xor
lods
push
cmovbe
mov
daa
pop
push
cmpsb
inc
xchg
mov
cld
shll
jp
jg
icebp
push
jl
aad
jl
pop
jmp
arpl
xor
pushf
aad
aad
mov
mov
call
dec
and
test
loopne
or
scas
dec
and
or
repnz
movsb
push
loop
or
pop
fildl
cmp
test
pop
sbb
pop
daa
cltd
add
dec
cltd
inc
sub
jns
jmp
mov
out
daa
xchg
sub
negl
icebp
adc
pop
inc
xlat
divl
mov
push
push
fmull
scas
xchg
icebp
fsubrl
stc
test
jbe
jmp
jnp
in
test
fwait
jecxz
push
out
inc
loope
in
inc
mov
xchg
sub
adc
sbb
test
rorl
test
pop
movsb
in
pusha
icebp
and
dec
dec
lret
arpl
push
outsb
mov
pop
mov
loop
aam
jno
or
dec
stos
test
dec
xchg
sbb
stos
xor
mov
sub
sahf
push
add
popf
mov
js
addb
cmp
outsb
or
and
test
das
fucomip
jg,pt
enter
jecxz
lcall
dec
movsl
push
pop
test
sbbb
icebp
lds
into
stos
mov
xchg
push
pop
in
push
mov
pop
movsl
or
cmp
fs
insb
les
fcomps
mov
movsb
daa
push
sti
cs
pop
pop
or
into
xchg
jp
shl
es
fnsave
jnp
ja
pop
xchg
add
fs
shrl
scas
lret
and
cmp
jnp
jp
push
push
adc
pop
out
leave
sarl
add
movl
aas
jl
mov
ret
sub
add
cmp
jns
inc
adc
push
fsubs
ja
cmpsl
test
in
notl
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
jnp
mov
outsl
jge
jle
add
sub
mov
cs
jno
sub
jne
repnz
xlat
pop
adc
imulb
add
pop
xchg
add
std
loope
mov
mov
mov
sub
sub
push
inc
outsl
and
sti
adc
testb
call
pusha
movsb
xchg
dec
int3
inc
mov
mov
xchg
jno
test
inc
or
pusha
pop
aam
inc
mov
bnd
pusha
or
or
dec
push
test
xlat
mov
nop
jns
pop
push
pop
subl
or
push
lcall
push
adc
sarb
bnd
mov
rcrl
call
fsubrs
jl
lods
fwait
push
dec
jnp
jl
mov
mov
xor
lcall
cmp
in
add
xchg
ds
dec
loope
pop
lods
mov
mov
inc
or
mov
or
mov
popa
xor
pop
mov
add
jl
int3
and
xadd
jmp
loopne
mov
xor
jmp
add
or
lds
and
fistpl
mov
out
ss
inc
insl
icebp
mov
inc
ret
and
inc
xor
xchg
fsubrs
sbb
inc
dec
scas
and
mov
mov
leave
inc
fisttpl
xor
arpl
aad
clc
fisttpll
lea
push
rorb
xor
sbb
push
iret
nop
jno
xchg
ss
add
test
mov
popf
repnz
push
fiaddl
xchg
pop
stc
and
test
das
leave
mov
ret
iret
jge
pop
jbe
ret
nop
pushf
sahf
mov
lods
cltd
pop
sarl
sarb
add
sub
lock
sbb
lods
mov
cmp
or
dec
leave
cmp
sbb
jnp
adc
mov
lock
push
ffree
sub
add
mov
dec
ror
loope
loop
sti
jge
jp
adc
and
aaa
pop
pop
adc
jno
xchg
imul
adc
mov
add
inc
je
nop
loop
test
loopne
test
ficomps
xor
jbe
pop
mov
jbe
push
in
loopne
div
add
adc
movsl
push
mov
clc
mov
jecxz
clc
icebp
rclb
mov
push
xchg
jmp
movsb
xor
inc
outsb
cli
xor
xchg
ljmp
sub
push
xor
cmpl
cmpsb
mov
mov
sub
pop
fstpl
or
shll
adc
add
cwtl
or
pusha
in
leave
inc
mov
lea
int
loop
xlat
cmpsb
cld
shl
push
test
and
jle
sahf
mov
jae
mov
decl
dec
std
add
xchg
dec
lret
insb
add
and
cmc
pop
repnz
test
dec
dec
pop
out
mov
mov
adc
pop
mov
mov
decb
inc
inc
or
cli
test
push
shrl
sub
iret
sbb
adc
jmp
add
xor
sti
jmp
stc
roll
adc
rorb
cli
aam
in
push
or
nop
fwait
add
popa
cmp
out
imul
mov
movsb
stc
push
push
sbb
add
pop
in
or
jae
cli
les
enter
pushf
mov
popf
mov
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
sub
fbstp
outsl
jge
jle
xor
pop
ficomps
loop
out
fiaddl
mov
pop
pop
pop
int
pushf
xchg
call
aam
test
mov
mov
mov
test
or
cs
sti
sbb
movsl
inc
aaa
xor
scas
pop
ss
stc
xchg
sbb
aaa
aaa
in
mov
mov
inc
adcl
movsb
pop
pop
push
dec
pop
cmp
sbb
add
xchg
cltd
cltd
jne
repz
mov
sarl
dec
pop
jp
push
popa
out
xor
mov
xor
test
aam
pop
idivl
adc
sbb
imul
jl
or
lret
xor
mov
mov
lea
push
pop
push
mov
xchg
dec
or
xor
jno
push
mov
icebp
dec
or
movsl
inc
mov
outsl
lods
mov
cwtl
mov
mov
les
jb
ja
pop
movsl
arpl
pop
sbb
xchg
push
cmc
inc
sub
movsb
mov
dec
cmp
cmp
fdiv
jp
stos
mov
inc
xlat
nop
pop
adc
cmp
sarb
adc
lods
jle
dec
sarl
lret
outsl
ja
xchg
xlat
sar
fucomip
jbe
push
xchg
insb
push
mov
xchg
shll
lock
pop
sbb
xor
and
cmp
dec
ffreep
fisttpl
cmp
int3
and
inc
xor
dec
push
aaa
mov
test
push
mov
lea
cmc
cltd
sub
mov
mov
cli
and
dec
mov
mov
pop
sbbb
xchg
es
fisttps
pop
test
mull
repz
cmp
adc
sub
jne
xchg
js
dec
sub
cltd
iret
leave
mov
ffree
es
call
push
sub
loopne
icebp
inc
pop
nop
cmp
mov
or
in
cmp
popa
test
xlat
xchg
lds
insb
adc
adc
bound
lret
adc
ret
rcr
data16
mov
push
xor
pop
sub
scas
ja
adc
insl
dec
arpl
push
xor
outsl
lret
xor
lock
mov
out
add
jp
loop
add
add
test
xchg
sbb
psllq
imul
loope
sahf
cmp
jle
pop
cli
out
jne
jl
and
rorb
ficompl
xor
push
mov
push
xor
sbb
or
pop
lret
js
pop
insb
push
mov
inc
testl
icebp
or
push
sub
mov
loopne
pop
lret
jo
bound
popa
outsl
negb
arpl
movsb
and
add
stc
cmp
shrb
test
lret
mov
popa
xchg
inc
in
loope
xchg
mov
mov
xor
jne
xchg
or
data16
lcall
test
xchg
mov
push
out
adc
out
fs
xor
mov
xor
lret
shlb
dec
mov
sbb
jne
clc
js
cmpsb
inc
mov
pusha
xor
int
jno
sbb
movsl
int3
jg
imul
jp
mov
scas
fwait
mov
xor
adc
pop
cmp
sub
ds
dec
out
in
jbe
adc
cmpsb
insb
fldcw
pmovmskb
mov
fisubrs
or
fucomi
shrb
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
jmp
sbb
jle
pusha
pop
inc
inc
fcmove
je
mov
pop
bndldx
test
sbb
mov
cmc
lcall
divl
jns
mov
daa
test
xor
inc
cmp
into
add
leave
sbb
mov
push
inc
pop
gs
out
dec
dec
mov
mov
inc
dec
stos
orb
cld
es
das
mov
mov
mov
js
sub
shlb
or
scas
or
shrb
lock
cld
test
mov
adc
mov
mov
das
je
scas
movsb
cmpb
rclb
nop
pop
cwtl
xor
jne
scas
ficompl
lret
stc
xor
out
xor
dec
das
mov
pop
das
scas
pop
mov
dec
hlt
push
push
mov
out
pusha
aas
loopne
aam
sti
mov
add
gs
add
stos
inc
fwait
int
leave
sub
mov
clc
test
xchg
or
scas
mov
jp
jp
mov
addr16
dec
fwait
sbb
mov
inc
pop
xor
rolb
sub
loope
hlt
roll
js
jmp
cmp
nop
sbb
ja
cmp
sub
cmc
dec
ljmp
imul
filds
jge
sbb
pushf
xchg
push
dec
ret
sbbb
pop
repnz
or
lods
fidivl
jg
and
pop
sub
fistpl
pop
shll
lret
mov
dec
lahf
or
xlat
xchg
test
inc
xchg
lods
pop
fsubl
sbb
dec
add
cmpsb
mov
mov
lds
mov
xor
sub
pop
pushf
int
sub
shr
test
nop
sub
cs
sbb
pop
outsb
sbb
decb
std
push
outsl
mov
imull
lahf
iret
inc
pusha
push
loope
or
lods
dec
or
sub
loopne
icebp
test
sti
mov
jo
subb
pop
cmc
mov
out
imul
push
mov
cmc
push
fs
pop
xchg
mov
inc
or
add
inc
pop
push
pop
push
lcall
dec
movsl
int3
cwtl
jnp
insl
adc
cmp
sbb
adc
push
or
or
xchg
inc
out
or
mov
push
loopne
rcl
push
shll
repnz
cmp
out
stos
jle
lahf
dec
add
cs
aas
stc
ljmp
nop
clc
xchg
mov
sbb
in
sarl
mov
pop
mov
cmpsl
and
mov
dec
movsbl
cmpsl
dec
ret
ret
loopne
pushl
das
inc
fldl
fadds
imull
iret
int3
or
mov
sub
nop
ds
imul
dec
sbb
subl
inc
xor
cmp
in
inc
add
pop
lahf
hlt
filds
imul
mov
mov
dec
ljmp
aas
sbb
push
sbb
pop
popa
jp
in
in
xchg
dec
stos
aaa
push
xchg
cmp
outsl
repnz
gs
cmp
dec
jb
or
fisttpll
fistpll
dec
lcall
mov
lret
icebp
lods
xor
lock
repnz
adc
or
sar
inc
xchg
cmpxchg
mov
loope
cmp
dec
adc
frstor
add
ret
push
ja
or
pop
jp
sbb
adc
out
in
sbb
dec
sbb
cltd
jmp
ret
xor
clc
push
jo
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
jbe
jo
sbb
outsl
jge
jle
xor
jg,pn
sbb
ljmp
xchg
loope
in
sbb
inc
sbb
cwtl
movsb
mov
xchg
or
mov
les
inc
add
push
pop
pop
lods
inc
push
or
dec
mov
shr
daa
add
loop
repnz
cwtl
jle
aaa
fwait
test
dec
inc
dec
xor
rcl
mov
add
and
ror
sbb
jo
cmp
ljmp
repz
mov
cli
shll
jmp
dec
push
scas
sub
push
mov
sbbl
pop
daa
jle
jg
push
in
int3
or
mov
ret
cmp
dec
sbb
mov
push
clc
loopne
push
ret
inc
lret
add
dec
jo
jae
jno
lret
sti
xor
inc
iret
daa
sub
mov
fadd
push
or
or
sti
fmuls
stos
mov
loopne
adc
cmpsb
movsl
and
add
repnz
flds
sarl
loope
push
aam
and
dec
dec
or
out
lods
mov
sub
decb
adc
xchg
loopne
push
ret
jmp
dec
jns
fnstenv
xorl
push
or
scas
dec
xor
clc
jp
lretw
pop
mov
inc
scas
mov
fstpl
movsl
mov
push
pushf
adc
jno
and
and
sbb
and
repnz
out
sbb
inc
leave
enter
test
int
adc
adc
sbb
daa
rcrb
es
and
jecxz
pop
mov
insb
xchg
sbb
test
scas
sub
jnp
sub
arpl
out
cmp
rorl
arpl
inc
adc
add
and
jns
scas
outsb
aas
mov
jmp
leave
ja
adc
cmp
jae
jmp
mov
adc
sbb
pusha
push
call
sub
faddl
adc
notl
mov
push
jb
ret
inc
pusha
or
mov
dec
loop
xor
lods
mov
sub
movsl
lock
xor
imul
xor
adc
dec
or
push
movsl
loopne
pop
pop
push
scas
pop
in
mulb
jns
xchg
push
fcomp
mov
or
addl
mov
jecxz
jno
mov
xchg
pushf
cmpsb
dec
scas
pop
stc
jns
into
inc
movsl
fimull
xor
dec
je
imull
mov
xchg
xor
data16
out
ss
pop
xor
mov
outsl
mov
fstpl
jb
xor
push
or
ret
outsl
repz
in
adc
cli
xor
pop
popf
and
test
push
jns
pop
push
jnp
push
in
push
jns
ds
xor
cmp
jmp
xor
test
pushw
mov
das
out
test
pushf
loope
add
lcall
jmp
xchg
mov
mov
sub
adc
push
lock
movsb
mov
jmp
lods
sub
mov
decb
push
adc
pop
cmc
ljmp
jae
pop
jg
jmp
ret
movsl
movsl
dec
popa
sub
push
push
jo
in
dec
ret
outsl
cmp
xor
pop
cmp
fdivrs
loop
xchg
inc
pusha
mov
lock
insb
insb
test
imul
mov
push
imul
subl
outsb
ljmp
jo
cmp
pop
mov
adc
xor
jns
or
mov
sbb
mov
mov
adc
outsl
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
fidivrl
and
jle
das
jmp
jp
sbb
add
in
loopne
sub
xchg
dec
adc
bound
dec
out
std
orl
mov
into
mov
dec
fsts
and
data16
dec
mov
jp
into
fcomip
dec
and
dec
pop
les
add
mov
int3
mov
movsl
mov
pop
out
dec
jbe
mov
leave
repz
pop
sbbl
adc
jg
and
mov
mov
push
push
fldcw
cmp
xchg
cmpsl
not
mov
fstl
adc
xchg
xchg
dec
or
stc
shll
inc
adc
inc
cmp
add
stc
mov
cltd
fmulp
fimuls
mov
cmc
jmp
test
bound
jnp
iret
int
clc
and
xchg
out
mov
aas
in
inc
jo
loop
xor
pop
pop
xor
jecxz
inc
mov
dec
dec
out
sub
pop
adc
jnp
ja
js
cmp
pop
add
sbb
inc
gs
jge
fstp
dec
ja
rcl
outsl
popa
mov
filds
test
fiadds
movsl
pop
stc
jmp
repnz
fidivrl
or
xor
add
loop
cmc
test
pop
xchg
adc
xchg
or
inc
cld
lock
mov
scas
add
adc
dec
int3
repz
stos
mov
inc
ret
xchg
aas
test
and
add
int3
mov
jo
daa
dec
cld
aad
adc
or
loop
shl
add
and
add
xor
pop
dec
test
nop
push
lods
xchg
icebp
in
enter
outsb
mov
dec
push
push
outsb
inc
mov
sub
aam
test
mov
mov
mov
cmc
pusha
xor
dec
rol
data16
jno
out
add
outsl
iret
sbb
cmp
push
dec
xchg
jle
js
pop
xchg
sbb
jno
sub
repnz
xchg
mov
or
mov
xchg
mov
in
add
inc
data16
in
xor
pop
xor
pop
sbb
mov
das
lret
sarb
adc
sbb
dec
out
jg
adc
lds
sub
inc
call
mov
push
daa
movsb
cmp
or
lock
and
mov
adc
cwtl
les
jae
mov
fimull
inc
out
je
cli
out
repz
push
xchg
nop
roll
jo
and
xchg
xchg
pop
lods
roll
in
or
out
jno
dec
mov
sub
out
cli
xlat
ljmp
mov
loope
outsl
cmp
imul
sub
push
sub
mov
cli
stc
mov
sub
xor
loope
adc
mov
add
pop
mov
mov
loopne
adc
movd
adc
mulb
out
cwtl
test
xchg
js
clc
jnp
pusha
xchg
ljmp
sub
add
push
rorb
sarb
adcl
ds
rcrb
xor
test
into
xchg
lcall
fildll
sbb
es
test
push
sbb
ret
cs
into
add
adc
dec
and
dec
cmp
ret
sbb
jae
and
cmp
mov
dec
push
mov
iret
loopne
andl
pop
fnstsw
mov
pop
pop
hlt
cs
shlb
jae
lock
jo
inc
mov
xchg
push
jae
push
pop
fcmovnbe
push
mov
adc
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
in
ret
jle
jge
jle
pop
sub
or
jmp
shrb
es
sub
enter
xchg
fwait
pop
xrelease
xor
test
mov
mov
and
xchg
popf
push
cmp
adc
int
xor
xchg
mov
mov
jecxz
jnp
mov
jge
lock
stos
rol
rcr
xor
scas
pop
lret
xchg
jge
shll
and
inc
sub
fadd
mov
les
out
fldenv
and
mov
and
jnp
in
push
pusha
scas
pop
mov
stos
xchg
xorb
push
mov
push
inc
movsl
loope
jg
push
mov
ret
jp
sbb
push
fisubrl
jb
pop
jge
out
mov
pop
inc
dec
ds
testl
xchg
scas
sbb
cltd
cmp
mulb
loope
mov
xchg
push
imul
gs
sbb
push
adc
cmp
out
adc
pop
pop
mov
icebp
push
das
add
inc
mov
jl
adc
push
jle
outsl
mov
loop
or
movsb
outsl
cmp
and
loop
lods
jnp,pt
flds
outsb
push
and
rclb
jne
inc
or
insl
mov
stos
loope
inc
sub
mov
sbb
jo
enter
dec
or
inc
push
cwtl
outsl
ret
and
addr16
lahf
in
add
adc
adc
mov
jmp
nop
les
pop
movsb
and
or
loop
sbb
std
leave
std
call
adc
ss
lock
stc
aad
adc
sub
aad
lcall
fnstcw
and
addr16
scas
rcl
mov
jnp
sub
sub
out
negl
jg
mov
shrl
pop
inc
aam
pop
jo
dec
mov
push
push
sub
push
setle
dec
xchg
subl
add
jne
sbb
mov
call
enter
adc
mov
lret
or
addb
lret
aas
xlat
sbb
fists
leave
xchg
mov
add
xor
lret
mov
cmp
pop
lcall
sub
jle
outsl
popa
pop
pop
and
fwait
je
mov
xor
stos
pusha
add
xor
nop
jle
jb
mov
cmp
pushf
dec
negl
ja
cmp
scas
or
xchg
neg
dec
xor
inc
lods
shll
mov
add
mov
test
pop
mov
rorl
orb
xor
dec
int3
sub
xor
out
leave
stc
dec
xchg
inc
dec
add
add
sub
outsb
sub
shll
out
hlt
imul
or
adc
test
dec
cmp
sbb
shr
pslld
push
and
adc
mov
lahf
adc
mov
push
scas
or
outsb
call
dec
jns
jecxz
mull
jae
push
int
mov
ret
push
push
cli
movsl
out
xor
dec
adc
or
int
sub
outsl
push
jg
movb
je
cmc
sarb
ret
xor
das
cmp
jp
jle
psrlw
das
mov
ret
and
or
fnstsw
jmp
movsb
and
loopne
xchg
lret
or
data16
dec
jecxz
and
push
push
jecxz
sbbl
xlat
and
lock
add
mov
inc
int3
fisubl
xchg
mov
xchg
push
into
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
or
sub
push
scas
iret
mov
stc
sbb
fcoml
pop
fadds
fisubs
or
cli
or
mov
sub
hlt
sarb
pop
pop
mov
mov
xchg
xchg
outsb
bound
cli
cmpsb
xchg
and
mov
daa
dec
or
test
out
xchg
lahf
es
leave
cmc
das
pusha
loop
test
jne
or
add
adc
test
fs
mov
push
mov
aaa
mov
mov
mov
pushf
decb
mov
pusha
push
push
loopne
scas
jg
andb
inc
inc
in
inc
jmp
les
sub
jne
pop
lret
mov
mov
push
scas
out
daa
mov
cmc
out
mov
xor
addl
out
fmull
call
fidivs
rolb
lcall
mov
mov
out
iret
lods
push
add
std
inc
repnz
sbb
cmp
mov
adc
pushf
and
and
jb
xchg
adc
jle
sbb
rclb
xchg
pop
inc
inc
inc
movsl
test
in
arpl
cmpsb
inc
stos
pop
bound
cmp
push
popf
xor
mov
out
or
test
popf
pop
xchg
xchg
jbe
lock
xchg
and
and
mov
lret
pop
out
mov
adc
scas
out
add
cs
mov
mov
and
jge
and
cmpb
xchg
dec
imul
addr16
mov
repz
stos
icebp
and
mov
jge
test
pop
cmp
sahf
lret
xor
inc
nop
adc
out
adc
xor
les
mov
add
xor
xor
jae
dec
inc
clc
mov
ret
pop
andl
movsb
rcl
pop
inc
cmpsb
outsb
push
rclb
jb
mov
fistl
hlt
cwtl
sbb
jmp
xchg
jmp
lcall
lds
and
ljmp
dec
push
mov
lret
mov
sub
mov
sbb
xlat
xchg
cmp
dec
nop
in
ficoms
jno
inc
shlb
pop
cmp
xor
inc
xchg
or
sub
insb
sahf
inc
out
stos
and
cmp
xchg
push
clc
in
sub
rorl
dec
rcrl
or
jne
jnp
loop
add
sahf
sub
jge
pop
imull
call
stos
or
adcl
popa
les
je
mov
pop
jbe
dec
mov
ss
mov
sbb
push
ret
int3
xor
dec
xor
scas
ret
in
xor
out
imul
xchg
ss
insb
add
pop
push
test
mov
mov
mov
fs
pop
cld
stos
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
adc
std
stos
hlt
sub
xor
jle
adc
loope
xchg
adc
cmp
jecxz
lods
sub
sbb
xchg
mov
js
or
mov
mov
adc
mov
stc
fwait
sti
xchg
cmpl
data16
call
mov
jp
iret
dec
xor
xor
add
mov
xchg
cmp
mov
aam
xor
popa
sbb
sbb
fistl
sbb
stos
js
scas
mov
aas
repnz
sub
fwait
mov
sub
xchg
mov
bound
mov
jl
jg
xchg
cs
scas
int
push
aad
test
pop
stc
call
pop
lods
add
jge
test
xor
jge
sbb
repnz
and
pop
mov
aam
jmp
notl
rorl
inc
ds
sbb
inc
loopne,pt
into
jmp
pop
sbb
mov
lret
fstpl
xchg
dec
jbe
leave
popa
cltd
mov
fimuls
pavgb
cmp
jnp
jae
daa
sub
in
jo
popf
out
sti
mov
and
fdivrs
popf
sub
xlat
adcb
adc
popa
push
jo
sbb
call
cmp
test
hlt
lcall
leave
or
loope
lret
addr16
and
incl
dec
stos
fldl
pop
jb
push
hlt
fdivrs
insb
sub
or
sahf
stos
mov
push
nop
decl
in
lcall
cmp
pop
sub
lock
cmp
in
mov
pop
aam
fs
mov
push
les
aad
idivl
repnz
pop
sbb
mov
shlb
arpl
in
out
mov
sidtw
pop
gs
jne
pop
stos
outsb
shr
and
and
mov
mov
xor
stc
pop
mov
test
or
push
mov
data16
cmp
jae
push
mov
daa
jp
insl
adc
push
cld
jmp
adc
into
iretw
repz
sbb
imul
test
int
mov
lcall
pop
out
jmp
push
jne
add
subl
lret
mov
push
loopne
xchg
clc
out
pop
sub
add
cmp
add
push
inc
std
and
cmpsb
cvtdq2ps
push
in
pop
pop
or
hlt
es
test
mov
or
dec
cmp
push
inc
mulb
in
lea
cmp
lahf
js
push
in
mov
aas
inc
pusha
es
enter
adc
cli
push
pusha
fcmovnbe
lods
ret
lcall
xor
jnp
out
inc
call
pop
ss
jp
push
addr16
inc
addr16
lahf
cltd
in
xlat
pop
in
jl
sbb
push
lea
inc
popa
xchg
cltd
imul
xor
jle
mov
shr
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
nop
lahf
cs
arpl
cli
sub
inc
jmp
lret
or
push
icebp
rolb
lds
daa
pop
clc
and
inc
adc
insb
repnz
ds
ds
jl
lcall
push
pshufw
lock
leave
cmp
xchg
push
ljmp
inc
in
les
enter
or
pusha
adc
xchg
in
xchg
in
inc
push
xchg
leave
jecxz
aad
jl
loopne
adc
movsl
jle
and
or
adc
jmp
xorb
dec
lret
nop
or
push
sbbb
aad
cmp
out
push
stos
stos
nop
test
inc
std
gs
aas
push
ret
or
in
lret
sti
mov
clc
bound
pop
mov
inc
add
aaa
pop
mov
scas
mov
mov
inc
into
fs
ja
pusha
and
xor
inc
jnp
xchg
jecxz
pop
lock
jmp
movb
testl
cmp
lahf
cltd
jo
inc
adc
sub
stos
xor
sbb
xchg
inc
jecxz
sub
popf
out
loopne
mov
cs
movsl
arpl
or
mov
in
mov
mov
cmpsb
xchg
mov
mov
stc
jns
pop
push
int
mov
push
stos
lret
mov
dec
leave
xor
pop
mov
dec
out
ret
pop
sbb
sub
push
push
push
mov
mov
push
mov
in
rolb
xchg
mov
sub
and
cmpxchg
xor
pop
xor
fwait
xchg
lret
mov
jo
push
sahf
insl
add
xchg
xor
jge
insl
in
popa
push
repz
jmp
xor
inc
icebp
mov
inc
sub
or
out
sub
fdiv
add
imul
sub
or
dec
cmc
inc
mov
arpl
xchg
sbb
scas
fildll
jg
loopne
xlat
xorl
bound
jb
adc
into
bound
ret
clc
and
jle
mov
outsb
adc
jb
dec
pop
push
repnz
jb
js
rcrb
dec
lods
mov
fdivrl
lcall
leave
mov
adc
ljmp
pop
cmp
into
sub
jne
repnz
jg
enter
xor
cmp
in
mov
jmp
push
push
sub
jl
les
cmpb
sub
cmp
ds
mov
adc
add
dec
cmp
jns
xchg
lock
iret
add
das
pop
int
cmp
test
jl
test
test
fidivrl
cmp
das
addr16
in
fisttpl
sub
repnz
inc
stos
or
adc
leave
and
sahf
pop
mov
out
aad
xchg
je
pop
push
arpl
out
pop
pop
mov
roll
insb
or
ret
push
mov
aad
icebp
xlat
add
xchg
or
leave
sti
pop
pushl
bswap
in
imul
dec
loop
sub
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
push
cltd
out
push
jle
xor
jle
enter
stos
aad
stos
add
lods
clc
data16
push
int
push
loope
sbb
inc
shll
fwait
cmpsb
push
outsl
jmp
cmpsl
mov
in
jp
jmp
ret
ja
in
dec
in
rorb
dec
fs
lret
aam
in
xchg
mov
mov
xchg
jno
aad
stos
es
repz
in
mov
inc
cld
jno
sbb
cltd
and
daa
int
popa
mov
mov
mov
je
shlb
cmp
mov
mov
insb
jp
push
sar
out
sub
mov
movsl
push
adc
movsl
add
movsl
cmpsl
insl
and
out
outsb
jno
xor
loopne
aaa
cmp
jmp
lahf
cmp
add
adc
daa
sub
insl
mov
aas
mov
xor
fld1
and
sbb
std
sbb
shll
sub
xchg
or
xchg
roll
xor
mov
sbb
xlat
push
mov
arpl
push
mov
sub
clc
and
push
or
aas
ss
rorl
loop
pop
mov
and
xor
rcr
pop
ja
mov
jns
pop
addr16
jle
cltd
sub
js
lret
icebp
jne
iret
add
cld
out
or
outsb
mov
repnz
adc
cli
lock
jno
push
data16
pop
rcrl
adc
inc
scas
mov
push
push
pop
insb
push
enter
in
pop
imul
mov
jbe
mov
fldl
sbb
xor
pop
hlt
movsl
fs
sarl
daa
int3
leave
mov
test
xchg
aam
cmp
xor
sub
jbe
aaa
push
dec
sbb
gs
out
dec
imul
mov
adc
stos
mov
and
fwait
push
or
insl
popf
push
loope
xchg
xor
out
decb
jg
adc
shr
loop
and
xor
and
arpl
movsl
data16
mov
xchg
es
sahf
shll
jmp
cmp
xor
in
fldenv
sbb
push
ret
test
mov
scas
cmpsl
push
jbe
push
sbb
fwait
or
popa
cmp
jns
jl
mov
scas
xchg
data16
fadds
sbb
inc
andb
fimuls
xchg
and
and
jp
hlt
mov
cmpsl
dec
xor
cmc
jl
mov
inc
jnp
clc
std
dec
mov
icebp
repnz
sub
sahf
or
lcall
cwtl
lods
call
and
push
jl
adc
sbb
jmp
imul
or
mov
xchg
imul
test
xor
fimuls
je
and
sub
mov
inc
aad
push
mov
and
rcll
stos
xor
push
inc
cltd
mov
pop
pop
fimuls
incl
mov
popf
dec
pop
mov
icebp
mov
clc
bound
push
out
push
mov
bound
dec
sbb
cmpsb
sahf
mov
sub
xchg
fildl
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
in
xorb
xor
jle
adc
mov
test
inc
outsb
mov
add
loop
jae
ss
ficompl
ss
cs
ficompl
push
nop
mov
stos
or
data16
icebp
xor
jl
sub
test
sub
fisttpl
in
sarl
lods
inc
xor
add
shl
and
mov
mov
add
cs
xor
nop
ss
jno
aaa
dec
mov
jns
dec
leave
lea
sub
mov
pop
pop
shrl
out
loope
fldl
cmpsb
rorb
lods
adc
orl
cli
xchg
cltd
mov
xor
xchg
jns
addr16
inc
sahf
stos
push
ror
in
jecxz
lret
imul
jbe
es
add
mov
add
arpl
gs
xor
inc
into
xchg
js
cs
push
enter
mov
stos
nop
push
mov
loope
dec
scas
cmpsl
xchg
shll
lock
adc
lods
sub
test
orl
dec
pushf
mov
xchg
xchg
shlb
jae
in
scas
xchg
add
push
aad
out
pop
movsl
or
sub
int
push
sub
adc
call
test
sub
jmp
loopne
xchg
fldt
and
jnp
push
movd
push
xchg
sbb
mov
xchg
fld
dec
mov
mov
fs
lea
push
stos
dec
xchg
or
lret
mov
cmpsb
mov
dec
bound
mov
out
push
popa
inc
xchg
mov
jge
in
lds
andb
add
loopne
mov
in
ret
xchg
mov
xchg
jne
xchg
outsb
pusha
mov
lods
std
test
lahf
push
push
into
mov
loope
jnp
outsb
leave
pusha
aad
mov
idiv
aam
push
xor
imul
je
jge
les
pop
ja
lods
dec
adc
mov
mov
mov
sub
xchg
cwtl
add
je
rclb
pop
sti
mov
push
mov
pusha
loopne
lret
jb
sbb
add
lcall
cwtl
sub
imul
sbb
dec
testl
sbb
and
jp
jp
adc
jo
loopne
jo
pop
int3
xor
push
sub
arpl
cs
adc
mov
lds
in
inc
aam
xchg
filds
scas
mov
rorl
dec
adc
inc
push
imul
mov
outsb
add
pushf
iret
xchg
sti
test
or
test
imul
bound
aas
scas
fs
movb
mov
sbb
jno
dec
adc
push
dec
fcmove
ret
gs
or
jb
mov
stos
sarl
mov
inc
ret
add
lcall
js
sub
insb
cmp
push
shlb
nop
dec
and
fdivr
mov
mov
jmp
test
jno
ja
shrb
fmull
jle
jge
jle
mov
je
mov
in
outsb
sub
add
jb
sub
cmpsb
inc
jne
pop
or
push
lret
je
jno
cli
jae
sahf
push
jge
shrb
enter
push
xchg
jo
xor
mov
adc
add
imul
adc
mov
mov
sub
xchg
testl
loopne
lahf
dec
es
mov
mov
test
jle
cmp
stos
cld
frstor
dec
xor
cmp
cmp
fcmovb
clc
add
out
icebp
cmp
outsl
pop
fwait
sbb
int3
inc
pop
pusha
mov
and
jo
push
jb
sbb
mov
lock
inc
pusha
sub
stc
xor
cld
stos
push
scas
sub
pusha
jno
pop
lsl
mov
lcall
insl
test
sub
daa
cmp
jp
mov
sbb
bound
dec
push
sahf
clc
mov
xchg
adc
dec
cmp
daa
rcll
jl
in
adcb
out
rcl
push
arpl
repz
and
xor
stos
mov
shl
and
mov
mov
fprem
inc
outsb
cmp
fstpt
jne
or
xor
ss
cmp
int3
mov
xor
aam
out
into
jnp
inc
lock
lea
fcoml
sbb
pop
mov
imul
pop
lock
or
push
in
ror
lods
les
adc
inc
lods
std
out
not
cmpsb
mov
call
xchg
mov
adc
push
xor
mov
add
add
pop
xchg
dec
pop
notb
lret
mov
js
ds
in
jg,pn
inc
ja
adc
jns
add
dec
popa
cltd
jp
repz
jl
sbb
or
jno
inc
adc
sub
cmp
mov
outsl
stc
xchg
push
add
ja
aas
adc
mov
cmc
daa
sub
jnp
cmpsl
insl
fbstp
dec
jno
xor
enter
and
xchg
in
dec
xchg
inc
shlb
out
add
ds
add
jns
mov
sbb
rcrl
bound
out
mov
mov
movsb
xchg
mov
ret
ret
pop
push
jmp
movsl
sub
mov
rcrl
cmc
rolb
in
jne
dec
mov
pop
ja
adc
xor
xlat
popf
mov
cs
mov
into
scas
mov
xlat
jo
dec
sub
jge
repz
js
dec
mov
movsl
jae
dec
daa
es
inc
out
xchg
adc
pop
pop
push
fisubrl
sbb
push
imul
popf
or
push
xor
dec
push
sub
arpl
xor
insb
pop
adc
cmpsl
xor
in
out
add
mov
stc
push
or
pop
mov
pop
test
fildll
sub
push
jle
aam
xchg
loopne
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
inc
jnp
mov
xor
jle
mov
int
jb
inc
out
mov
mulb
cmp
push
jnp
jne
lret
pop
dec
fists
pop
mull
pop
mov
or
push
mov
add
out
xchg
xchg
or
mov
inc
cld
fnstenv
adc
mov
xchg
daa
incb
in
dec
hlt
push
cmp
lahf
cmp
xor
mov
rcrb
mov
ljmp
sbb
mov
inc
xor
orl
cmp
lahf
fldenv
sbb
cmpsb
fstl
cmpsb
stc
cld
push
lahf
sarb
imul
shll
jne
cld
sub
neg
pop
jns
push
rclb
arpl
lcall
test
mov
lds
js
cmp
xchg
xchg
mov
lds
aaa
push
fists
mov
and
dec
shr
je
js
pusha
loopne
lahf
sbb
das
aam
jp
jnp
rcr
mov
xor
mov
outsb
sub
xchg
mov
or
inc
mov
sub
inc
popf
cmpsl
push
cwtl
in
mov
in
push
rcrb
cmc
pop
inc
cmp
push
xor
mov
or
dec
aas
sub
jne
adc
imul
mov
add
and
and
pop
jl
and
push
rcrl
mov
jge
imul
jp
pop
imul
roll
cmc
adc
pop
mov
test
repz
lods
std
pop
lock
dec
dec
loop
mov
mov
or
sub
cmp
mov
loop
out
jp
push
lret
rcrl
xchg
sub
popl
inc
scas
inc
mov
or
xchg
popf
loopne
imul
fcompl
fs
addb
mov
sub
push
adc
jp
adc
adc
jns
sti
or
pop
adc
repz
or
out
inc
shl
or
jl
repnz
inc
and
enter
ljmp
push
and
push
dec
out
xchg
fisttpll
imul
pop
mov
fyl2x
ja
cmp
loopne
adc
add
rep
repz
jns
cltd
addr16
in
fldl
xchg
or
jmp
shll
int3
dec
fisubs
popa
xchg
int
scas
xor
sub
sub
pop
dec
in
sbb
cmp
cmpsl
iret
xchg
mov
mov
loope,pt
cmpsl
dec
push
je
adc
xchg
sub
push
cmp
and
dec
pop
dec
push
fldcw
arpl
push
push
fimull
pop
dec
dec
mov
cmp
inc
xor
das
not
mov
popa
popa
dec
xchg
pop
mov
mov
cmp
mov
lds
shl
mov
cmpsl
pop
test
test
js
out
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
popf
ror
jle
fistpll
xchg
dec
jbe
mov
cmp
daa
rclb
dec
mov
mov
subl
xchg
cmpb
clc
pop
pop
ja
testl
js
inc
cmp
mov
ja
sbb
repnz
mov
icebp
mov
jl
orb
cmp
lods
cs
and
and
js
xor
les
jbe
adc
mov
lock
pop
sbb
cmp
add
sbb
icebp
lock
out
lea
xchg
xchg
push
pop
sub
jl
movsl
add
pop
js
cmp
jl
out
adc
scas
mov
pop
loop
ss
out
cmp
in
int
sbb
dec
dec
add
adc
pop
popf
lea
mov
pop
cmc
ljmp
jle
inc
dec
adc
cld
in
cltd
pop
lea
adc
xchg
push
push
jne
push
and
mov
pop
out
subl
aam
inc
mov
xchg
pop
leave
push
mov
sarb
mov
rclb
aaa
jo
in
les
sub
jb
std
inc
imul
shrl
das
mov
xchg
mov
add
pop
fstps
inc
repz
cwtl
leave
push
push
push
jne
mov
sub
sbb
push
pop
push
flds
xor
mov
inc
ljmp
mov
arpl
pop
adc
scas
in
gs
sbb
pop
ja
imul
xor
fldl
ds
pop
xor
adc
mov
fmul
jb
and
rorl
es
icebp
mov
clc
mov
lods
sbb
xchg
test
fcomps
mov
sti
mov
or
movsb
in
xor
xchg
pop
into
jns
xor
jbe
mov
stos
pop
dec
popf
mov
jne
fs
movsb
xlat
mov
push
sbb
into
ds
insl
or
sbb
cwtl
push
xchg
xchg
dec
xor
adc
rcll
xor
fbld
xchg
fstpt
fldcw
les
adc
rcrb
cmp
push
leave
sbb
dec
inc
xor
iret
shlb
loope
mov
pushf
add
add
xor
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
jmp
mov
jle
in
push
mov
mov
stos
sahf
testl
shrl
mov
leave
rorb
popa
sub
mov
ret
jnp
push
test
xor
push
sub
test
jae
sbb
mov
jne
pop
mov
stos
pusha
sahf
push
out
jae
xor
jnp
pop
loop
aaa
add
or
lcall
loope
repnz
pusha
lcall
pop
lret
lcall
leave
mov
mov
loope
mov
pop
repz
out
mov
movsb
mov
dec
outsl
xor
xchg
ljmp
into
xor
popf
ficoml
fdivs
cs
fsubrl
fdivl
stc
push
add
push
loope
pop
mov
add
stc
inc
lret
sti
aad
jo
fwait
ret
mov
popf
stos
cli
push
push
fs
jns
lods
xchg
dec
and
out
cmp
fistps
pop
push
pop
inc
cmp
mov
sub
ja
add
mov
aas
int
ret
dec
jbe
sbb
or
cmp
stos
lcall
mov
dec
and
xor
int
imull
fwait
pop
add
nop
push
mov
mov
popa
pop
adc
shl
xor
mov
popa
add
cmp
mov
cmpsl
fsubs
les
pushf
sahf
xchg
mov
fstl
sbb
jae
xchg
sti
fcoms
dec
sub
mov
mov
inc
ret
fiaddl
jl
adc
jo
inc
hlt
pop
and
xchg
mov
xor
inc
enter
cmpsl
stos
push
push
jl
inc
mov
mov
cld
insb
mov
fwait
and
insl
and
inc
jl
inc
jl
jns
push
pop
or
loopne
pop
mov
push
sbb
dec
sub
out
add
cmp
xor
or
repnz
pop
in
or
pop
xlat
cmp
rolb
wbinvd
pop
iret
in
std
cmpsb
pop
sar
mov
iret
in
sub
in
cmp
cmp
mov
mov
adc
or
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
daa
aas
int
movsb
sarb
jge
jle
jnp
jecxz
mov
cmp
and
mov
and
cmp
cli
out
jp
cmc
fwait
pop
push
xchg
cmp
loop
mov
and
outsl
sbb
in
sub
imul
aas
mov
sub
push
xlat
in
cmpsb
xlat
mov
es
adc
jmp
or
pusha
pop
cmp
sbb
or
xchg
cs
jae
jno
shrl
scas
mov
push
cmp
rolb
out
mov
push
inc
and
xchg
lods
scas
loop
dec
or
repnz
daa
orl
push
inc
cmc
inc
cld
mov
cmp
imul
outsl
popf
or
or
into
inc
pop
popa
mov
sbb
imul
frstor
jbe
fnstcw
mov
cmc
lret
sbb
pop
mov
mov
pop
stc
dec
add
cmpsb
arpl
sub
test
lahf
xchg
insl
push
mov
or
and
aas
dec
and
aad
fistpl
decb
mov
pop
jno
adc
nop
dec
shrl
pop
cld
pop
stos
int
sti
stos
and
arpl
xor
push
or
mov
sub
nop
dec
bound
bound
loopne
mov
popl
fwait
mov
inc
cli
into
xor
stos
sub
loop
cmpsl
imul
out
cmpsl
icebp
scas
std
movsl
cmp
fwait
lcall
out
and
fbstp
mov
sbb
clc
xor
xlat
sbb
sub
dec
sarl
push
cltd
sub
sub
jecxz
imul
test
leave
pop
inc
dec
and
rcll
lea
push
mov
imul
stos
mov
cmp
xchg
mov
adc
inc
cmp
cmc
pop
pushf
sbb
xor
enter
mov
in
scas
inc
fstpl
xchg
push
adc
add
aas
dec
xor
mov
lods
mov
ret
pushf
mov
fdivp
dec
shlb
or
pop
cmpsl
adc
mov
pop
add
mov
and
lods
daa
mov
jnp
loop
bound
stos
xchg
and
push
pop
loopne
call
mov
rcrl
leave
fistpll
jno
rcrb
mov
mov
lods
ret
add
iret
mov
out
inc
cmp
jp
dec
pop
insb
inc
ss
and
scas
rcrb
pop
jle
sahf
roll
sarl
insl
dec
mov
cmp
mov
sub
clc
jge
cwtl
fadd
lret
mov
jno
jle
mov
jno
jo
push
fcoml
ret
push
icebp
xor
push
loop
fimull
leave
shlb
pop
push
add
xchg
sbb
incb
movsl
loopne
mov
fildl
push
mov
or
or
sbb
nop
adc
cld
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
imul
jle
jge
jle
ja
mov
loop
sbb
sub
jbe
lea
test
and
fbstp
cltd
stos
stos
and
or
cmp
jae
shlb
imul
push
mov
lret
push
xor
mov
jb
push
add
ss
sbb
xchg
xor
pop
aaa
push
cmp
dec
in
xchg
xchg
leave
std
scas
inc
pop
into
dec
inc
push
dec
clc
mov
adc
xor
push
xchg
sub
dec
fisttpl
jecxz
scas
dec
pop
popf
jp
sub
pop
mov
push
cwtl
mov
mov
push
repnz
adcl
push
imul
pop
shll
js
inc
insl
xchg
lods
stos
lret
xor
sbb
pop
xor
leave
lea
cmpsb
ds
cmpsl
pop
cmp
pop
jne
std
push
ja
push
lret
fsubrp
add
cmp
in
jecxz
ds
cs
in
fucom
cmp
out
fcmovne
jmp
cmp
add
pop
popf
loop
and
push
inc
jecxz
pushf
stos
add
ds
xchg
incb
lds
mov
std
adc
mov
xchg
add
imul
jg
xchg
mov
dec
lcall
sbbb
cmp
xor
nop
nop
dec
sti
jmp
xchg
inc
loop
xor
out
cs
out
sbb
mov
pop
test
sbb
outsl
xchg
leave
cmp
addb
fisttpl
outsl
and
testl
loopne
xchg
cwtl
mov
repnz
test
mov
jl
cmpsl
add
mov
insb
sub
mov
mov
mov
jmp
adc
xor
mov
roll
add
or
pop
dec
scas
jecxz
stos
test
jmp
jecxz
andb
pop
fcoml
pop
pop
adc
xchg
jns
add
or
push
out
mov
push
xor
mov
stos
mov
mov
fdivrl
lods
fldenv
push
jp
xchg
int
mov
loope
mov
stos
adc
push
add
jl
add
xor
push
scas
sar
movsl
stos
and
and
mov
adc
into
mov
movsl
add
push
xor
sbb
jge
xor
movsl
lock
dec
or
pop
sbb
rorb
lret
cmp
jp
lret
pop
xor
sahf
mov
cmp
cwtl
xchg
subl
arpl
adc
cld
les
push
les
fidivrs
fst
cmp
and
jmp
push
lea
insb
mov
insl
mov
arpl
ljmp
fildl
jne
lods
adcb
lret
xchg
sub
popf
and
jo
rol
jae
jle
in
cmp
or
shlb
push
iret
inc
or
mov
bound
fistl
cmp
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
dec
es
js
jle
and
jle
aaa
or
test
sub
test
std
fsub
mov
pop
out
scas
dec
jne
pop
shll
mov
or
xchg
insb
insb
enter
rolb
xchg
dec
xor
pop
adcl
loop
xor
push
sub
sbb
sbb
jl
test
mov
cmp
xchg
xor
aaa
xlat
sub
dec
pop
xchg
sbb
addr16
enter
fistl
cmpl
sbb
cld
fiaddl
and
push
andnps
ds
fildl
adc
loop
addl
int
mov
sbb
call
xor
pop
sub
cli
popf
call
xchg
jle
std
mov
adc
js
test
in
arpl
cmpsl
fwait
and
ret
aam
aad
nop
scas
shr
sbb
mov
cmp
stc
imul
loope
lods
dec
loopne
inc
jl
jo
stos
into
das
clc
arpl
sbb
scas
or
leave
sbb
hlt
rcr
std
mov
dec
cmp
pushf
sar
xchg
jo
adc
push
movsl
pop
push
js
inc
leave
out
cld
dec
jbe
sub
xlat
mov
in
ljmp
ja
jmp
dec
enter
test
lahf
push
movsl
xchg
add
outsb
addl
push
xor
ds
iret
sbb
mov
xor
pop
xor
fbld
rclb
add
and
jns
mov
push
cmpsl
push
sbb
xor
inc
cmp
cmpsl
mov
jle
cld
mov
jns
sub
or
add
aaa
fwait
jne
xor
andl
shll
mov
xor
ss
jle
xor
xchg
xor
sub
sub
lret
ljmp
mov
pop
in
add
push
push
inc
fldl
aam
inc
jecxz
dec
and
insl
sahf
push
fildll
cmpsb
nop
push
sub
lret
ds
xchg
sub
dec
push
dec
adc
sub
mov
aam
stos
add
sub
mov
xor
iret
sahf
incb
shrl
push
sub
ljmp
pop
shrb
mov
rcr
outsl
jg
fwait
add
mov
dec
repnz
scas
mov
lahf
addr16
lods
daa
pushf
jns
xor
scas
test
out
push
sbb
fucom
into
and
or
pop
and
cld
cmpsb
push
out
pop
cwtl
jae
push
movntps
dec
and
inc
cmp
pslld
adc
js
or
push
iret
pop
jmp
adc
in
dec
sbb
mov
push
xchg
mov
xor
mov
sbb
and
leave
mov
loopne
int
outsl
divb
push
xlat
mov
ja
xlat
jmp
mov
dec
jge
test
sahf
adc
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
ss
inc
ja
jle
in
jle
in
aas
ljmp
dec
inc
adc
sub
out
fistps
jnp
fwait
push
cmp
xchg
inc
cwtl
pop
inc
jg
jno
xchg
sub
ret
xor
sub
std
dec
lods
test
xchg
xchg
push
andb
inc
and
xchg
dec
sahf
in
movsl
ja
jo
jno
mov
lcall
mov
popa
jae
in
int
std
or
and
arpl
inc
jg
and
sub
add
lock
outsb
xor
insl
and
jg
loope
popa
sbb
fwait
cmp
sbb
repnz
data16
call
aam
addr16
outsl
mov
and
popa
lods
outsb
pop
fnstsw
push
cltd
sub
add
int
add
mov
fidivl
fidivl
out
xor
add
in
cmp
push
icebp
repz
fistps
mov
cmp
push
jp
pop
cld
enter
adc
push
mov
fildl
fisubl
mov
and
inc
jmp
pop
xor
popf
xchg
mov
rcr
cmp
xor
jno
bound
sub
movsb
xchg
push
and
sahf
fcomps
mov
xor
xchg
bound
push
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
movsl
nop
xlat
jle
in
jle
dec
mov
jge
pusha
ret
pop
ds
xor
shll
incl
sbb
or
xchg
mov
das
sub
and
out
pop
jo
jl
pop
test
jecxz
jae
push
xor
push
mov
inc
das
pop
sar
stos
jbe
cmpsl
sbb
and
rcl
andl
push
aaa
inc
js
adc
cmp
dec
lcall
adc
dec
xlat
repz
or
sub
cmc
adc
call
sub
iret
aaa
scas
iret
sahf
ljmp
int3
addl
mov
sub
cmpsb
lods
popa
popf
jae
out
negl
mov
dec
stc
scas
arpl
push
xor
xchg
mov
and
mov
cmc
dec
mov
add
ljmp
lds
push
cld
and
mov
insl
xchg
dec
movsb
mov
addr16
sbb
fmull
insl
loopne
in
dec
mov
hlt
dec
dec
fs
sub
push
mov
fucomp
jae
test
mov
scas
icebp
dec
and
cs
adc
or
ja,pt
jmp
jmp
xor
cmp
push
push
dec
jb
sub
sbb
sub
mov
inc
or
imul
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
lods
rolb
ljmp
push
shl
aam
fstl
arpl
insl
add
cmp
mulb
cmpsl
adc
pushf
and
fdivl
movsb
cmp
jns
ss
lret
sbb
std
dec
mov
dec
out
ds
add
fsts
xor
xlat
mov
fisttps
daa
scas
leave
mov
cli
movsl
lds
cmp
stos
pop
dec
push
mov
pop
and
sti
cmpsl
stc
outsl
adc
sub
loope
fmul
fstpl
jl
inc
mov
mov
mov
cmp
jl
jmp
into
repnz
gs
xor
mov
push
pop
jne
lret
inc
and
xchg
nop
fldt
cmpsl
xchg
test
mov
rep
add
outsl
mov
and
std
jns
xchg
jb
leave
inc
mov
call
or
lea
sbb
push
mov
pop
outsl
mov
lds
hlt
pop
enter
lahf
sub
ret
inc
add
jge
bound
rcrl
rcrb
dec
mov
mov
xorl
test
aas
jae
jnp
sub
rcl
popa
pop
insb
iret
jg
stos
jno
xor
je
fwait
cmpb
pop
hlt
push
push
ret
add
pop
bound
je
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
std
dec
or
in
sarb
in
jle
gs
popa
and
in
mov
ret
imul
push
jmp
jnp
xchg
mov
sarl
push
cwtl
mov
insl
pop
fs
mov
ret
inc
out
xor
pop
lret
cmp
mov
dec
mov
fisttpl
mov
xchg
loope
pop
dec
xchg
popf
mov
int3
dec
jecxz
jno
in
stos
jp
jl
loope
hlt
pop
gs
rolb
or
sub
lret
pop
stos
loopne
cmp
mov
sbb
add
jnp
mov
idiv
mov
xchg
mov
leave
mov
mov
mov
repnz
out
push
sbb
push
rcrb
in
and
cmp
fcoml
arpl
movsl
xchg
pop
mul
pusha
gs
repz
lods
out
push
xchg
andb
dec
mov
mov
xor
loope
add
ret
dec
add
fldt
sahf
test
mov
clc
xchg
sbb
lahf
bswap
mov
xchg
xchg
movsb
je
sbb
push
sahf
cmp
mov
lret
xchg
je
and
jne
std
xchg
jb
jbe
out
fdivrl
fisubl
clc
xor
add
jmp
adc
test
or
lea
jle
jg
jle
mov
dec
jp
fsubrl
sahf
pop
rcll
or
xor
pop
in
fiadds
cmp
add
fcomip
scas
imul
dec
sub
jge
push
jb
sbb
insb
fldenv
sbb
xchg
leave
imul
outsl
out
aas
lods
pusha
inc
adcb
hlt
cltd
add
mov
and
dec
popa
cmpsl
mov
rclb
mov
ljmp
xchg
xchg
mulb
pop
lea
test
std
sub
cmpb
dec
adc
dec
shl
imul
idiv
out
mov
clc
xlat
lret
call
roll
mov
cmpsl
cmp
inc
stos
fcomip
mov
adcl
icebp
clc
popf
cmc
xchg
imul
mov
cmp
mov
ja
stc
in
or
imul
out
hlt
cmp
imul
scas
push
xchg
insl
push
jnp
es
mov
dec
mov
adc
mov
faddl
add
std
movsl
in
push
push
pop
scas
fcompp
data16
jl
fcmovbe
pop
mov
sbb
and
push
add
sub
mov
mov
push
clc
fimull
mov
mov
fisttps
outsb
in
xor
mov
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
scas
xchg
sarl
in
jle
fdivl
loope
sbb
sbb
test
cmp
sub
lock
inc
jecxz
inc
mov
shrl
mov
lods
iret
loopne
mov
pop
pop
cld
out
dec
fldenv
xchg
mov
mov
call
repnz
pop
jns
lock
jp
call
pop
inc
add
leave
movsb
or
nop
lock
adc
fucomip
dec
adc
loope
xchg
sub
mov
or
rclb
cmp
dec
mov
push
cmp
push
repz
mov
mov
std
movl
mov
sti
mov
fists
andb
sub
ret
sahf
push
mov
ret
int3
sbb
push
cmp
outsl
lods
sbb
sub
cmpsl
adc
loope
dec
test
xchg
daa
or
in
fs
out
movsb
sub
xchg
xchg
xlat
shl
jg
mov
dec
mov
push
ljmp
xor
and
inc
std
test
and
xor
or
and
imul
jmp
xor
mov
push
lahf
outsl
and
hlt
fwait
test
push
cmp
arpl
cmpl
lcall
sahf
insl
je
fadd
cwtl
sbb
or
add
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
test
les
in
jle
fldenv
xor
fdivs
lea
lret
data16
mov
rolb
cli
imul
lcall
std
inc
dec
int
dec
lds
push
sbb
add
pop
cmpsb
ret
cwtl
test
les
cmp
mov
pop
lcall
das
aam
scas
push
out
sub
dec
lods
shll
mov
inc
xor
sub
adc
aas
iret
movsb
and
scas
add
fwait
xor
gs
call
lret
aas
xor
dec
not
xchg
push
lahf
repz
adc
push
cmpsb
xchg
adc
icebp
xchg
ljmp
xor
lret
xchg
sub
cmp
call
jae
inc
mov
push
cltd
test
mov
cld
push
es
mov
mov
call
mov
fwait
cmovnp
es
out
movsb
mov
les
push
jecxz
sahf
adc
jecxz
push
jne
jns
test
add
cld
pop
ret
lea
daa
in
call
data16
fnstsw
leave
add
int
in
sbb
xchg
stos
push
sub
xorl
xchg
push
mov
cli
jg
mov
jge
sti
and
js
pop
lds
scas
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
pop
jnp
sbb
fdivrl
in
jle
push
push
push
shrb
push
rorb
cmp
ja
inc
daa
pop
push
addb
fcmovu
fwait
jbe
pusha
mov
jle
jnp
loope
fsubrl
icebp
adcb
jo
jp
xlat
cmpsb
push
lcall
shr
push
pop
push
pop
cmp
fisubs
test
js
test
cli
sahf
cmp
movsb
sub
jge
lods
divb
orb
and
adc
xchg
mov
or
out
mov
xchg
sbb
mov
inc
jae
stos
je
popa
sti
fs
subl
out
gs
popa
ja
daa
or
jns
add
xchg
sarb
cmp
sahf
jp
jmp
sbb
sar
outsb
sahf
xchg
xor
lods
popf
mov
in
sbb
push
rcll
jo
sbb
mov
add
scas
mov
imul
mov
mov
in
mov
mov
pusha
xor
cmp
pushf
push
mov
jb
imul
addl
mov
call
mov
mov
dec
cmpsb
ja
mul
pop
ds
fbld
or
scas
xor
das
ds
fwait
push
test
mov
or
jp
test
decl
add
idiv
decl
add
add
xchg
xor
jmp
cli
fnstsw
in
jle
repz
xor
xchg
cs
xchg
mov
push
daa
and
dec
mov
push
pop
pop
les
mov
pop
inc
aam
movsb
fldt
xchg
enter
xchg
inc
cmc
daa
add
mov
pop
inc
cld
jbe
jmp
fisttpll
sbb
in
test
movsl
xor
cmp
enter
sub
scas
or
leave
fldl
mov
pop
repz
add
adc
pop
sysenter
push
imul
or
mov
jae
nop
pushf
pop
jge
add
inc
inc
int
mov
out
inc
xor
adc
pusha
xchg
daa
cmp
mov
and
pop
shl
add
pusha
dec
stc
icebp
add
in
repz
leave
push
mov
xor
das
test
imul
and
into
pop
outsb
pop
int3
shlb
sub
push
mull
push
or
add
test
and
or
xchg
mov
mov
loop
in
xor
cmp
cmp
stc
jp
pop
push
dec
or
xchg
jmp
xchg
xor
rcrl
addr16
aad
stos
popf
sbb
shrb
and
daa
pop
sub
adc
incb
lods
mov
add
shl
lret
ljmp
aaa
fdivp
lahf
cmpl
cmp
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
pop
fcomp
frstor
jle
jp
jle
sub
mov
jle
xchg
jne
push
imulb
adc
out
jp
mov
mov
adc
test
mov
xchg
xchg
test
dec
pop
addb
add
add
xchg
subps
nop
out
addr16
mov
mov
loopne
sbb
xlat
cld
jge
push
jbe
ror
sbb
outsb
mov
ja
push
setge
sub
movsb
ficomps
test
push
lods
sub
sub
mov
iret
pop
stos
mov
push
pop
sahf
fistps
imul
xlat
lods
mov
sti
jp
repnz
push
jl
clc
xor
push
lret
xchg
mov
or
scas
sub
cmp
das
insb
dec
inc
cmpsl
inc
test
fistps
mov
lods
loop
inc
jmp
mov
sbb
nop
mov
xor
sbb
mov
mov
lcall
sub
pop
mov
shll
dec
hlt
insl
pop
inc
jno
cwtl
sbb
int3
subl
mov
ja
lods
ss
lds
jp
cmpsl
outsl
mov
pop
out
in
fisubrl
jns
jge
pop
ds
in
nop
inc
cmp
mov
adcl
or
xchg
pop
dec
push
jp
mov
add
insb
jns
js
scas
ret
xlat
sbb
hlt
xchg
dec
hlt
jnp
test
add
out
xchg
inc
inc
popf
gs
add
pop
es
orb
jle
or
mov
cld
ja
sahf
shlb
gs
inc
pop
lcall
adc
fwait
icebp
jo
test
jp
clc
cmpsb
add
shr
or
adc
sub
outsl
lret
or
cmp
frstor
inc
add
popf
mov
mov
pop
call
xorb
cmp
jp
jl
scas
xor
and
push
lea
imul
xchg
jbe
jmp
enter
push
push
movsl
or
sbb
notl
xchg
xor
cmp
cmp
xor
arpl
mov
add
push
mov
bound
push
pop
mov
add
repnz
aas
test
xchg
adc
mov
sahf
xchg
into
cmp
out
pop
and
or
jnp
arpl
or
mov
lea
mov
aad
inc
jmp
in
jb
dec
popl
out
xchg
jb
cmp
ss
shll
sbb
sbbb
dec
call
sbb
push
and
das
rclb
arpl
aad
imul
aas
mov
je
add
fwait
or
ret
inc
inc
add
adc
or
inc
into
jns
pop
js
enter
popa
movl
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
jle
jge
jle
jge
lret
dec
into
xchg
and
pop
mov
rcrb
mov
cmc
inc
mov
movsb
mov
in
or
dec
pop
aaa
jb
xor
fists
or
notb
sbb
sub
or
push
gs
adc
mov
test
js
sahf
adc
sahf
iret
rclb
rcl
test
repnz
aaa
int3
lcall
or
mov
xchg
mov
subl
lret
jb,pt
cmp
push
mov
mov
sub
sti
dec
nop
xor
imul
into
jne
xchg
push
and
mov
pusha
mov
les
dec
inc
mov
dec
arpl
subl
mov
pop
mov
das
mov
cmp
mov
stc
popf
add
sarb
pop
in
push
mov
fiaddl
lock
aam
cmc
and
push
xchg
fstpl
ja
js
adc
in
jge
jne
jmp
addr16
mov
push
js
pop
inc
jb
cwtl
stos
scas
inc
fcoml
push
and
les
push
jp
mov
inc
mov
jno
ljmp
or
jl
and
or
jmp
icebp
std
jno,pn
movsb
or
or
out
outsl
mov
mov
xchg
movsl
sbb
xchg
in
loope
jo
add
pop
cmpsb
jo
sbb
pop
movsb
int
pop
and
movsl
cmpsb
ret
icebp
neg
mov
jno
lcall
inc
sti
sub
mov
std
sbb
inc
fidivl
mov
cmp
cmp
mov
mov
push
js
and
shlb
and
mov
stos
out
les
fidivrl
pop
mov
clc
les
xor
aas
lods
dec
and
in
adc
xor
loopne
inc
xor
mov
jnp
rclb
xor
xor
bound
lock
enter
xchg
sbb
unpcklps
sbb
je
or
es
popa
dec
jle
push
std
mov
rorb
sub
fldenv
fcompl
mov
cmp
mov
mov
lods
pop
fmul
push
repz
repz
sarb
subb
clc
and
repz
adc
pushf
cmp
pminsw
sbb
dec
dec
fbstp
jl
xor
lds
adc
sub
and
lods
mov
fcoml
cmc
xchg
popf
test
scas
or
in
roll
sti
mov
add
cld
pop
lcall
pop
inc
stos
imul
test
loope
int3
rcrl
mov
orb
add
movzwl
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fidivs
in
jle
jge
jle
das
dec
cmp
cmpsl
mov
gs
repz
cmp
sub
xchg
mov
stos
jbe
ljmp
pop
addl
fisttps
andb
push
xchg
jbe
and
je
sbb
adc
imul
add
js
cmp
pusha
imul
lret
int3
fs
lahf
cli
fwait
lock
mov
out
jns
call
out
outsl
jbe
jecxz
dec
sbb
mov
imul
loopne
rclb
jge
push
stc
into
rol
jg
pop
sub
gs
out
xor
test
jb
jmp
out
push
aam
call
scas
push
pop
or
ljmp
stc
sbbb
in
jb
jmp
bound
ss
jg
ss
rorb
stc
jne
aad
mov
popf
jle
hlt
lret
sbb
jne
pop
sti
ret
sbb
jmp
mov
pandn
push
ficoms
xlat
add
gs
out
mov
cld
xor
fstpl
shr
xor
xchg
into
fwait
aam
adc
or
mov
inc
xchg
repz
adc
xor
or
lret
dec
dec
mov
jle
dec
movsl
push
inc
xchg
lods
pusha
or
dec
or
out
add
addr16
or
mov
inc
sub
movsl
or
movsb
out
xchg
arpl
jl
pop
daa
insb
mov
nop
cwtl
les
hlt
ja
cmp
or
or
dec
adc
movb
inc
nop
inc
pushf
test
or
les
ss
aad
dec
fisttpll
mov
mov
fcompl
xorl
cmc
sar
mov
sub
outsb
or
push
lcall
adc
sahf
imul
dec
sbb
ss
xchg
rorb
and
mov
lcall
push
int
aad
inc
loopne
clc
add
imul
data16
push
mov
clc
iret
sbb
add
pushf
or
movsl
mov
xchg
mov
dec
addr16
scas
lmsw
sti
call
loopne
jmp
add
cs
scas
cmp
mov
fadd
sbb
cmp
test
popa
stos
das
dec
add
scas
loopne
push
mov
out
jns
lahf
xor
movups
ljmp
je
pusha
mov
scas
ret
inc
cltd
je
inc
std
xor
add
int3
std
sbb
xor
xchg
fisttps
imul
xlat
and
stos
popf
mov
cmp
mov
cmp
cmpsl
adc
add
inc
lock
test
push
add
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
sarb
xchg
lret
je
jle
jp
jle
lret
cmp
mov
jno
add
loope
push
stos
movl
inc
xlat
jmp
jno
cmpb
rorb
lcall
push
dec
mov
mov
fimuls
cmp
or
std
enter
roll
mov
and
xchg
mov
shrb
lret
mov
mov
xlat
push
stos
ffree
cmpsl
dec
jo
clc
dec
fistl
cmp
jecxz
xor
adc
dec
and
repz
mov
in
imul
daa
sbb
addb
leave
push
les
imul
dec
es
cwtl
aad
cmp
lock
jb
fwait
sub
adc
test
and
mov
or
jae
js
xchg
pop
pop
movsb
adc
jle
out
insb
mov
mov
insb
cli
pushf
iret
cwtl
cmp
dec
ss
sbbb
inc
push
inc
cld
mov
xor
ljmp
push
add
mov
cmp
cltd
addr16
push
push
cmp
mov
jge
xchg
push
inc
mov
cltd
es
mov
mov
je
popa
mov
out
shll
and
sub
inc
inc
aad
xchg
or
bnd
jne
sbbl
fcom
add
lcall
jmp
inc
es
jmp
jbe
leave
dec
pop
aas
add
into
or
sbb
outsl
cmp
lea
pop
daa
ficoml
dec
into
push
or
jnp
fs
fidivs
xchg
sahf
inc
inc
andb
into
jge
mov
loopne
mov
mov
insb
sub
mov
out
gs
sbb
fnstsw
and
sahf
repz
or
and
outsb
push
in
fcoms
call
inc
out
sbb
adc
fbld
mov
mov
xchg
js
xchg
jae
inc
rcl
mov
ficompl
jnp
pushl
xor
sbb
pop
push
test
or
xchg
arpl
cs
popa
lock
cwtl
cli
push
scas
in
dec
pop
pushf
in
mov
add
xchg
ret
pop
sbb
dec
mov
push
sti
mov
xchg
sub
lods
push
pop
cld
movsb
sub
push
lahf
mov
or
push
out
pop
push
push
jns
pop
pop
nop
push
repz
xchg
pop
cwtl
imul
mov
addb
push
xlat
gs
pop
xlat
movsb
xchg
mov
es
sbb
or
push
dec
mov
sub
mov
mov
subl
stos
je
lret
sub
cwtl
mov
xor
xor
cmpsb
pop
push
int
into
or
pusha
or
push
sub
sbb
mov
xor
add
mov
mov
mov
jmp
enter
enter
sbb
mull
and
into
jo
jle
jp
jle
add
cmpsb
xor
sbb
dec
ficompl
and
cli
dec
lahf
push
push
xor
pushl
addb
mov
movsb
adc
add
mov
fs
jmp
xor
call
cmp
hlt
rcrb
or
test
shl
jge
std
int
ljmp
xchg
push
xchg
add
fldt
inc
leave
push
int
push
mov
das
inc
mov
aam
out
sub
mov
cmp
pcmpeqw
add
in
dec
inc
call
sti
lcall
in
pop
pop
add
xchg
test
pop
pop
mov
je,pn
or
mov
jo
push
pop
cmpsl
sbbb
mov
aad
lock
leave
or
or
xchg
fs
xor
hlt
enter
mov
mov
inc
lret
push
stc
jno
jg
and
les
inc
nop
hlt
mov
or
test
jle
jnp
sbb
ja
pop
mov
lret
lods
xchg
and
or
ljmp
js
in
jae
dec
les
pop
lret
jle
dec
inc
inc
push
mov
sti
xchg
sub
jg
cmp
sub
int
mov
cmc
stc
mov
mov
add
mov
xor
test
movsb
sub
arpl
hlt
cltd
adc
dec
sbb
cmpsb
mov
je
jecxz
clc
mov
enter
scas
xchg
cmpsb
jl
movd
pop
repnz
push
mov
and
mov
ja
daa
adc
xor
lock
mov
loop
mov
inc
sti
add
data16
inc
in
sbb
or
mov
mov
int
lock
xchg
in
fdivrs
cs
cli
add
add
cmp
notb
push
ret
push
mov
repz
arpl
insl
cmp
in
pop
cmpb
sub
arpl
add
cmp
ret
sti
cltd
rcr
add
push
sbb
mov
mov
in
jp
mov
ljmp
pop
pop
mov
ror
roll
xchg
mov
shr
mov
arpl
ror
push
push
add
mov
daa
cwtl
cltd
ret
cmc
or
adc
fadd
dec
mov
ljmp
jge
pop
push
sbb
pop
mov
fdivs
xchg
add
mov
ljmp
cmp
or
test
dec
jge
lret
sbb
jl
adc
les
mov
insl
data16
dec
sbb
pop
aaa
jg
or
and
dec
adc
lret
mov
loope
jo
repnz
loopne
xchg
aad
aas
data16
test
inc
xchg
xchg
xor
jb
rcrb
xor
inc
push
cmp
stos
out
xor
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
dec
in
outsl
jl
jle
jp
jle
xor
inc
subb
xlat
xchg
xchg
push
shll
clc
int3
outsb
cld
push
xor
inc
dec
insl
aaa
jo
pusha
jmp
jg
hlt
cmp
aam
imul
call
dec
lcall
adc
jb
int3
push
jbe
inc
dec
mov
mov
test
mov
sbb
loopne
mov
sub
loop
push
push
xchg
leave
scas
test
adc
ds
jle
shlw
sbb
mov
test
push
inc
jp
in
adc
daa
mov
mov
xchg
lea
in
and
jno
addb
mov
xchg
or
push
loope
insl
mov
aaa
ljmp
lds
inc
aaa
lea
fists
sub
pop
ds
adc
bound
cli
imul
test
cmp
pop
mov
lods
and
push
iret
mov
sbb
pop
jge
aaa
jbe
mov
aam
movsl
stos
out
mov
sbb
mov
mov
stos
js
subl
fstp
cmp
add
mov
pop
sub
xchg
cltd
cmp
adc
push
andl
mov
xor
cmp
out
test
mov
clc
or
fdiv
popf
adc
jo
rcl
push
xchg
mov
jmp
into
jnp
push
mov
outsl
jbe
decl
pop
dec
mov
fwait
xor
data16
push
and
lret
sbb
sub
xchg
push
pop
imul
hlt
lcall
shlb
sbb
lods
out
or
push
scas
stos
loop
sbb
out
xor
push
nop
mov
push
ds
jle
int3
das
jno
mov
mov
enter
imul
jmp
repz
lret
xlat
les
and
xchg
in
mov
ror
mov
stc
repz
in
lods
mov
push
sbb
lret
sub
dec
aaa
mov
sub
or
negl
jp
setb
cmpsl
loope
push
inc
sbb
jb
push
jecxz
cmpb
dec
cmp
int3
mov
jno
mov
cmpsb
xchg
jmp
dec
sub
loop
cmp
adc
xor
in
cli
iret
push
test
sahf
mov
sub
movb
push
jge
and
mov
imul
inc
sti
enter
xor
ljmp
or
fisubrs
lahf
push
les
or
xchg
push
clc
and
dec
mov
xchg
insb
inc
jbe
and
ss
lea
jl
sahf
xchg
or
cmp
add
test
filds
aas
adc
lods
cld
leave
insl
inc
pop
or
add
jmp
in
notb
sub
sub
sarl
jle
jp
jle
xor
pop
cwtl
jmp
mov
aaa
cli
jle
mov
jge
cmpsl
jle
das
icebp
rcll
aas
fwait
adc
xor
nop
adc
out
iret
mov
cmpsl
dec
mov
lret
jp
or
and
adc
out
dec
dec
push
xchg
dec
ret
cmp
mov
mov
ljmp
cmpl
xchg
mov
subl
repnz
xchg
loope
and
orl
imul
cmc
and
dec
mov
adc
clc
xor
int
adc
jbe
subb
jge
mov
sbb
dec
adc
add
repz
sahf
test
inc
lret
je
je
sbb
in
sub
subl
jmp
adc
mov
or
add
je
adc
xchg
stos
or
and
jmp
jecxz
imul
pusha
ud2
adcl
xchg
mul
xchg
xchg
call
add
cltd
xchg
pop
push
mov
sbb
cmc
sbbl
imul
sub
jl
loope
add
mov
push
imul
jnp
pop
adc
cmp
roll
repz
adc
out
xor
movsb
cmp
insb
xchg
test
fidivs
inc
bound
testb
cmp
pop
jnp
jge
mov
cmp
xchg
xchg
add
add
repnz
lods
lock
shll
mov
jne
push
pop
push
push
outsb
inc
fs
jb
es
lods
inc
and
hlt
shl
add
mov
jo
icebp
in
subl
leave
std
mov
dec
ret
cwtl
push
lea
stos
movsl
nop
sahf
pusha
xchg
mov
mov
rcrb
jae
and
addr16
les
or
pop
xor
js
fsubr
mov
enter
sbb
rcrl
lahf
leave
and
ja
dec
addr16
sub
xor
jg
std
xor
cltd
fbld
bound
stos
mov
notb
aam
arpl
sub
out
lods
cmp
ja
mov
fs
popa
mov
and
out
pop
hlt
push
popa
mov
xchg
lock
lock
in
jmp
inc
mov
mov
stc
jo
roll
mov
les
add
mov
jecxz
push
daa
leave
jnp
ret
js
add
mov
repnz
mov
aad
jmp
test
hlt
or
insl
ret
sbb
out
sbb
js
out
dec
pop
test
or
pop
pop
out
repnz
mov
and
clc
pop
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
pop
fldl
jle
jp
jle
stc
shlb
push
fxch
scas
push
mov
inc
inc
mov
xchg
jbe
mov
inc
lods
mov
mov
add
jns
push
lret
js
xchg
nop
add
or
jge
clc
cmovbe
mov
incl
outsl
inc
xchg
icebp
das
fstl
or
cmp
sbb
mov
gs
cmpb
push
imul
jnp
in
stos
xchg
pop
pop
out
out
xlat
test
and
and
mov
ja
push
adc
lods
or
fdivl
mov
or
aam
or
mov
add
xchg
test
mov
imull
inc
xor
xor
sarl
sub
add
xchg
clc
push
ja
std
popa
add
sahf
add
mov
cmp
dec
mov
sbb
ret
aam
xchg
xor
push
jle
stos
sub
push
and
cs
xor
jmp
push
jmp
dec
jl
imul
fsubs
push
imul
es
cmp
and
dec
ret
jmp
and
push
js
gs
mov
xor
mov
mov
in
stos
out
mov
mov
jmp
neg
mov
dec
add
lock
push
rclb
mov
pop
lahf
inc
mov
pushf
xchg
push
xor
cmp
imul
sub
imul
pushf
and
add
out
sub
push
out
lret
inc
ss
adc
jge
sub
sbb
dec
out
jne
sbb
adcl
xor
sbb
mov
add
jmp
mov
lods
icebp
ret
push
push
fs
fs
mov
mov
or
cmp
sarl
insl
mov
mov
imul
add
jl
sahf
out
clc
jne
or
push
xchg
dec
adc
arpl
xor
repz
stc
loopne
ds
clc
add
cmp
cmp
ds
add
xchg
or
add
cmp
movsb
pushf
add
fistps
mov
push
lahf
adc
mov
imul
lret
xchg
or
sub
xor
xor
mov
mov
adc
into
mov
adc
das
addb
int3
inc
pop
aam
daa
and
push
xor
xchg
in
sarl
add
scas
or
xor
negl
ret
cwtl
je
lds
xchg
ljmp
pop
inc
adc
lds
add
iret
es
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
inc
add
jle
jp
jle
shlb
jp
push
test
xchg
sbb
imul
mov
aad
adc
rol
jecxz
xchg
std
je
cmp
mov
inc
push
lds
jnp
out
xchg
xchg
lret
mov
pop
jp
lahf
and
dec
or
adc
jo
xchg
or
push
cwtl
pop
adc
stos
icebp
mov
cwtl
aam
out
inc
test
stos
adc
push
movsl
mov
aam
loop
sub
push
push
sarl
xchg
push
cld
add
pop
shrl
and
shll
aad
les
shlb
lret
mov
les
xor
imul
mov
stc
stc
adc
ficoml
dec
cmp
inc
imul
xor
jnp
popf
imul
mov
mov
fcomip
out
push
iret
mov
repz
jmp
inc
arpl
in
subb
call
testb
sbb
dec
mov
jno
push
cld
jae
inc
loope
adc
adc
fwait
push
mov
fs
ficoms
fists
dec
jno
cmp
mov
or
in
dec
jle
rorb
aaa
and
ret
sbb
mov
adc
jns
inc
cmpsb
adc
mov
sbb
js
mov
sub
fwait
cmp
xor
repnz
gs
or
push
xchg
sbb
roll
fadd
dec
mov
dec
or
out
lods
clc
rolb
or
inc
les
mov
nop
fidivl
mov
int3
add
or
mov
mov
xchg
jnp
pop
cmp
dec
mov
sarb
lock
test
stos
adc
js
cmpb
push
mov
popa
push
pop
loopne
aam
pop
lret
inc
mov
jle
mov
dec
xor
in
repnz
inc
add
dec
mov
mov
pop
cmpsb
xchg
push
insb
fistps
mov
insl
sub
daa
add
push
aaa
popf
fs
int
dec
cmp
sbb
repz
inc
xor
cld
inc
add
pop
pop
int3
pop
push
ds
jbe
pushf
add
sbb
call
jl
rolb
fs
mov
push
push
mov
loopne
push
lcall
xchg
cmp
insb
test
add
sub
inc
fsubrp
test
lods
push
leave
out
mov
test
pushl
push
jo
jl
je
popa
cmp
fwait
mov
jne
ja
jmp
inc
inc
jmp
jns
sbb
cmp
sub
adc
lcall
sti
add
lret
xorl
stos
cltd
jecxz
addr16
mov
pusha
in
ret
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
or
jle
jp
jle
incb
pop
cmpsl
dec
stos
xchg
dec
jnp
or
das
inc
fwait
inc
loop
ret
push
or
xor
sbb
xorl
mov
xor
cmp
inc
adc
push
aad
push
pusha
fisubl
xlat
stos
call
out
xor
cmpsl
xchg
cmpsb
xor
pop
gs
mov
rcr
aad
das
data16
adc
nop
or
loopne
mov
sub
addr16
mov
mov
mov
aad
jle
aas
ja
outsl
mov
pop
cwtl
or
ss
leave
cs
jge
rclb
cmp
shrb
dec
inc
pusha
xor
nop
sub
push
xlat
insl
dec
push
fisttps
test
adc
addb
mov
lods
gs
aam
cltd
mov
xor
xor
mov
insl
popf
mov
or
or
adcl
jge
xchg
dec
and
adc
add
lods
jg
aad
sbb
mov
sub
jmp
pop
jns
test
scas
aad
inc
push
adc
inc
lcall
push
mov
mov
shll
enter
and
inc
and
mov
sahf
and
add
icebp
xor
and
dec
mov
insl
jg
mov
insb
pop
test
xor
leave
subb
cmp
pop
fmuls
mov
test
arpl
fsubrl
push
aam
loop
fucom
jg
test
cmp
sub
fmuls
cltd
addb
and
outsb
in
jno
loopne
mov
jp
push
or
int
jecxz
mov
lcall
push
sub
push
cs
dec
enter
dec
push
xchg
pop
or
inc
inc
mov
addr16
loope
jecxz
xor
js
stos
pop
adc
and
cmp
add
cli
arpl
and
inc
ds
stos
imul
mov
cld
es
rcll
inc
sub
inc
inc
ss
test
scas
nop
xor
gs
push
lea
push
js
cld
fnstcw
and
mov
cmpsb
sub
add
loopne
mov
mov
and
outsb
dec
dec
aas
push
jb
pop
or
subl
aam
mov
rcrb
mov
xor
into
xchg
ss
add
cmpsb
lret
inc
call
addb
fists
jbe
or
inc
scas
sbb
jbe
pop
push
jne
imul
push
jmp
pop
stc
gs
xchg
cmpl
test
fstpt
cmpsl
push
outsl
inc
dec
lahf
pusha
shrb
in
cwtl
cli
repz
mov
cld
adc
outsb
mov
sarb
fsubp
sahf
iret
push
cmp
hlt
add
ds
inc
add
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
in
push
mov
enter
jg
popf
or
pop
dec
int
sub
xor
mov
push
mov
mov
sbb
mov
aad
sbbb
test
or
mov
scas
mov
sbb
dec
xorb
jge
lds
pop
xchg
add
xor
jle
cmpsb
mov
insb
inc
sub
jmp
ss
fucomip
in
imul
dec
push
stos
or
movsb
xchg
and
pop
cs
jno
outsl
mov
inc
sub
mov
aad
dec
xchg
call
xor
adc
sti
dec
leave
and
nop
mov
adc
loope
and
cltd
inc
lock
flds
mov
rolb
jl
rcll
lahf
ds
mov
jp
push
mov
es
pop
aas
outsl
mov
mov
or
imul
inc
cld
sbb
push
mov
adc
test
jne
push
ja
inc
bound
repz
adc
cmpsb
cmp
arpl
push
push
outsl
stc
xor
mov
mov
add
push
aaa
fwait
ss
daa
inc
mov
es
and
int
xchg
push
lahf
add
sbb
stos
mov
or
out
sub
mov
ss
inc
imul
test
ret
setae
add
jne
sbb
mov
pop
in
out
inc
xorb
cltd
shll
stos
jg
loope
lcall
imul
popf
stc
lods
out
arpl
push
leave
mov
mov
xlat
xchg
imul
xor
stos
mov
sbb
movsb
mov
or
mov
out
out
inc
clc
push
imul
cmp
pushf
adc
fidivrs
and
push
inc
inc
adc
xchg
jmp
fldenv
and
mov
mov
ret
dec
scas
outsb
rolb
mov
adc
lock
pop
mov
mov
lret
lcall
mov
imul
faddp
out
andl
sbb
cmp
cs
mov
test
jmp
ret
or
mov
repnz
fdivrl
call
wbinvd
mov
adc
loop
xor
insl
xlat
shl
aam
filds
push
xor
aad
push
leave
lods
icebp
mov
imul
loop
jne
push
insl
fnstcw
mov
cmpsb
movsb
incl
hlt
inc
pushf
clc
and
stos
mov
pop
mov
sbb
xor
stc
dec
outsb
test
jne
jno
pop
fstpt
push
lea
sub
jne
test
sarl
aas
and
imull
xchg
add
test
or
mov
xchg
add
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
clc
jle
jp
jle
in
shll
loopne
stos
mov
stos
mov
xor
and
sbb
pop
js
mov
xor
mov
repz
iret
roll
decb
mov
test
cs
test
fisubrs
mov
int3
pop
cltd
cli
push
sub
pop
cwtl
mov
cmp
xchg
outsl
inc
scas
popa
icebp
xchg
sub
bound
shrb
std
jns
pushf
stos
xchg
inc
add
sub
xor
add
daa
push
stos
das
push
icebp
dec
add
and
aad
outsb
jae
cmp
pushf
dec
sbb
sbb
es
test
jecxz
mov
and
or
add
arpl
jecxz
adc
subl
nop
mov
mov
xor
icebp
xor
jb
fiaddl
fiadds
test
jp
or
imul
xchg
rolb
loope
roll
faddl
pop
mov
sub
sub
gs
mov
lods
pop
jno
jne
inc
xchg
popa
test
pop
cmp
inc
pop
or
test
xor
ret
pop
shlb
fistpl
outsl
test
mov
jnp
sarl
cmc
call
mov
and
push
mov
adc
aas
cli
loop
popa
or
xchg
sbb
faddl
jnp
mov
stc
out
imul
mov
mov
dec
fidivrl
sti
addr16
push
addr16
ds
js
imul
xlat
jne
mov
xchg
call
fs
ljmp
lds
lods
ds
outsb
leave
jne
out
repz
and
xchg
test
inc
pop
cmp
repnz
cmp
fsts
call
sub
lret
imul
shrl
iret
mov
incl
mov
mov
fisubrs
dec
jae
cmp
mov
and
mov
xchg
ret
mov
in
dec
lods
push
dec
or
std
js
mov
test
or
sub
int
js
jecxz
cs
ja
mov
sub
stc
aaa
movsb
mov
data16
inc
ja
sub
pop
lea
dec
push
movsl
insb
and
and
ljmp
jae
mov
sbb
aas
scas
hlt
movsb
and
cmpsl
jmp
pop
dec
sbb
jns
mov
mov
sub
sbb
xchg
push
lods
out
fldenv
and
test
loop
pop
ja
mov
jno
push
andb
jecxz
inc
and
mov
rorl
xchg
xor
adc
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
pop
xchg
adc
jle
add
inc
dec
mov
test
cmp
lods
mov
dec
inc
cmp
pop
lods
add
push
jns
and
jmp
jmp
mov
push
lahf
xor
test
or
imul
out
mov
repz
adc
mov
cmp
inc
ja
jmp
sbb
dec
jmp
pushf
inc
movsl
out
or
pop
stos
jmp
daa
packuswb
enter
lods
and
vpmulhw
cs
loop
fcmovnbe
pusha
inc
clc
inc
fnstcw
inc
or
sti
cmp
add
fsts
xchg
xchg
lock
cmpsl
cmp
pop
pop
dec
out
and
lock
in
inc
shlb
movhps
inc
mov
inc
push
mov
mov
xchg
icebp
hlt
sbb
xor
push
push
jmp
mov
mov
test
in
pop
jmp
hlt
add
pop
scas
pop
push
sbb
rolb
ds
sti
shr
xor
mov
nop
cmp
jne
mov
ret
mov
rcl
xchg
xor
sbb
cltd
daa
popa
xor
mov
das
test
sbb
lret
scas
fucom
scas
push
out
nop
sub
mov
sbb
jg
xorb
pop
fs
push
fildll
push
pop
add
inc
icebp
or
dec
aas
cmpsl
push
daa
sti
sbb
sbb
or
loopne
mov
jg
inc
mov
imul
xlat
and
outsl
iret
jecxz
lret
push
mov
or
addr16
cli
and
es
mov
adc
and
adc
push
cmc
xor
sbb
pop
mov
cmc
sbb
adc
pusha
jno
sub
adc
pop
into
out
arpl
bswap
pop
sub
jp
in
pop
stos
popa
int
cmp
insl
pop
ja
pop
xlat
xlat
out
mov
lret
inc
lods
add
sbb
xchg
xor
sbb
pop
call
cli
pop
jge
das
push
push
dec
sbb
jmp
inc
aam
cmp
sbb
in
push
mov
loope
sub
subb
cmpsb
aad
push
fidivrl
jge
pop
mov
icebp
and
sbbb
je
xchg
xchg
stc
popa
xchg
lret
mov
xorl
ret
rcll
push
mov
mov
xchg
or
dec
push
lds
cmp
jne
mov
aas
pop
add
xchg
int3
xchg
cmp
rol
jge
hlt
or
or
xchg
bound
outsl
jns
lcall
aas
fildl
mov
movsl
or
stos
pop
clc
fidivl
inc
cmp
or
sbb
add
out
xor
mov
loop
into
xor
xchg
xchg
jle
jge
jle
scas
mov
mov
pop
adc
cmc
ja
ss
hlt
sub
pop
stc
fstps
imul
and
pop
push
and
adc
out
bound
xor
sbb
jbe
fisubrl
mov
out
sub
repnz
xor
mov
push
loop
sub
fmul
cs
mov
ret
sub
mov
test
call
jle
fwait
daa
push
adc
daa
ficoml
inc
dec
adc
push
xchg
xchg
xchg
jno
enter
incb
mov
in
cwtl
or
popa
sub
pushf
push
insl
mov
mov
stos
push
adc
sti
inc
lret
dec
sti
sbb
and
cmp
loope
je
fwait
inc
pop
sbb
push
add
sub
sub
xor
dec
decl
lock
sbb
xchg
aaa
dec
adc
lods
mov
pop
std
jge
push
xlat
nop
mov
jbe
test
inc
pop
jbe
jecxz
shll
pop
cmpsl
test
iret
or
pop
movsl
vaddsubps
sbb
cmp
imul
nop
shlb
pop
jae
lea
insb
jns
sbbb
mov
clc
pop
lods
mov
push
ljmp
fwait
cmp
gs
jnp
or
cmp
hlt
mov
roll
pop
lds
stos
ret
xchg
lret
and
adc
cmp
imul
ficoml
jbe
test
mov
adc
gs
sub
sbb
and
xor
or
xor
xchg
out
sbb
aad
inc
mov
fldenv
push
xlat
rsm
adc
xchg
cvtpi2ps
push
out
test
out
sbb
sbb
mov
and
or
push
int3
stc
scas
icebp
push
rcl
lahf
mov
cld
pop
add
call
cmp
scas
test
cmp
jge
sarb
mov
stos
mov
frstor
mov
jns
adc
sbb
pop
cld
xchg
loope
cltd
mov
push
fldl2e
cmp
les
pop
push
push
leave
add
dec
aam
es
clc
xor
loop
mov
idivl
sbb
mov
mov
jmp
scas
aaa
and
das
dec
sti
inc
pusha
add
xchg
mov
inc
xchg
adc
lea
pop
xor
mov
cwtl
loope
mov
mov
andl
lock
fcmovnu
mov
imul
inc
sahf
int
or
imul
push
push
ljmp
jno
data16
xor
repnz
xor
xchg
clc
mull
pop
xor
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
mov
sbb
jle
dec
out
movl
jae
data16
mov
test
sahf
push
outsl
mov
cmp
into
popa
daa
sbb
mov
cmpsb
push
std
mov
aas
sarl
inc
out
lahf
std
sub
xchg
repnz
sbb
mov
mov
out
movsb
int3
stos
xor
mov
lret
insb
mov
add
fwait
stc
aad
pushf
aad
adc
fs
scas
fs
rcrl
lahf
add
sub
std
sub
cmp
ds
fiaddl
push
dec
and
mov
mov
xchg
ret
ljmp
in
push
xchg
scas
jle
fwait
mov
fldz
fcompl
and
in
mov
mov
out
in
jns
fwait
push
call
dec
bound
in
fcmovu
adc
jo
fidivrl
outsl
mov
push
xor
ljmp
and
push
cmp
fsubrs
in
adc
dec
addr16
sub
and
jo
xchg
pop
pop
cld
aad
les
pop
xchg
iret
adc
rcrb
test
enter
pop
dec
cltd
push
in
fs
jno
sbb
mov
xchg
leave
bound
les
push
popa
test
ljmp
sbb
fwait
push
sbb
sti
xchg
in
outsb
jne
xor
outsb
ja
outsb
xor
repz
jae
shrl
frstor
jge
sub
cmp
dec
mov
and
outsl
notb
adc
sbb
adc
outsl
adc
rorl
cmp
test
jl
dec
or
int3
mov
jb
xchg
enter
push
push
and
push
pop
sbb
jl
mov
or
sub
push
dec
sub
sub
xchg
xchg
xor
mov
mov
dec
dec
and
loope
sub
mulb
enter
lods
cwtl
mov
pusha
cmp
mov
xor
xchg
ss
addb
int
iret
add
ret
xlat
jg
pop
ret
fcoml
push
inc
push
fnstenv
or
xchg
scas
cmpsb
cmp
mov
aad
cltd
push
out
ficompl
jno
leave
das
fsqrt
cmp
dec
sub
jmp
adc
aaa
out
pop
jmp
popa
jae
scas
rol
xlat
cmp
pop
adc
enter
lock
mov
xchg
rcrl
fistpll
popf
cld
sbb
jg
adc
jne
rorb
enter
push
push
add
xchg
clc
ss
jbe
icebp
je
int3
add
dec
iret
imull
jecxz
in
push
xchg
push
inc
jg
xor
addr16
xor
scas
push
jge
hlt
sub
push
dec
imul
in
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
push
stc
subps
mov
jge
jle
and
and
movb
jb
sbb
insb
jp
cwtl
out
outsl
lods
jae
shrl
std
lret
mov
xlat
stc
notl
xor
push
cwtl
jl
fbld
push
cmp
data16
xorl
imul
mov
mov
jno
sub
jbe
mov
dec
ljmp
pop
and
inc
and
sub
push
inc
loopne
and
out
sarl
out
or
pop
sti
mov
aas
cwtl
inc
mov
movsb
add
inc
inc
loope
enter
push
xchg
out
push
repz
scas
sub
and
sti
mov
lods
fstp
out
cmp
sub
mov
push
sbb
or
mov
mov
mov
rorb
adc
jmp
ss
fisttps
outsl
inc
in
inc
and
fwait
movsb
imul
fs
mov
and
xchg
xor
lret
pop
leave
leave
sarl
jmp
push
lock
adc
inc
cmp
pop
out
cmpsl
add
jmp
xor
sub
push
shrl
ffreep
xchg
push
push
aam
loop
outsl
icebp
cmc
ret
push
js
das
fs
imul
mov
mov
pop
inc
jb
mov
pop
in
js
movl
adc
rorb
lds
jno
test
or
mov
inc
cmc
sub
mov
pop
jle
fildll
add
cwtl
test
inc
call
mov
pop
xchg
pop
mov
push
sarb
pop
pop
mov
pop
shll
mov
mov
test
mov
pop
add
pusha
loope
cmp
iret
outsb
mov
pusha
dec
divb
pop
xlat
lahf
outsl
mov
int
sbb
pop
push
fdivrl
mov
push
out
inc
repnz
shrb
jge
nop
or
mov
inc
jp
xchg
lods
jmp
sub
js
and
sbb
mov
neg
mov
pop
xor
addr16
ret
xchg
mov
xor
ret
mov
pop
fldenv
inc
inc
push
scas
clc
push
push
push
jmp
jecxz
orl
cmp
sbb
mov
call
mov
inc
mov
mov
bound
mov
les
inc
orb
pop
in
lret
outsb
mov
xor
cmp
leave
jl
je
add
cmc
scas
or
aad
gs
gs
xor
fwait
sahf
stos
add
push
inc
aas
sbb
push
cmc
aas
scas
and
out
stos
ds
stc
jmp
sbb
out
jns
pop
mov
xor
adc
int3
add
rolb
fstps
test
pop
gs
hlt
pop
loope
fdecstp
xchg
jne
xor
jne
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
cmp
das
and
sarl
nop
mov
sbb
cmp
lea
lods
arpl
les
jbe
lea
inc
out
and
xchg
bound
jo
fisubrl
sarl
push
jns
in
dec
inc
xchg
mov
nop
jmp
frstor
rclb
test
mov
sub
and
mov
arpl
adc
mov
mov
fcoml
push
mov
sbb
mov
lods
mov
inc
mov
insb
imul
jg
cltd
dec
enter
out
push
pop
scas
ds
fiadds
in
loope
mov
mov
ret
ljmp
enter
dec
pop
js
push
sbb
test
xchg
adc
clc
clc
pop
out
mov
mov
sbb
push
scas
stos
lods
orl
fnstcw
orl
or
and
inc
xchg
shrb
lds
fnstsw
icebp
jmp
and
inc
push
std
or
les
xchg
inc
das
jmp
or
jecxz
loop
sub
fdivp
jbe
stos
in
shrl
or
jo
std
xchg
lahf
daa
cs
xchg
fadds
add
pop
hlt
mov
inc
std
je
inc
andl
push
lea
mov
test
adc
ret
mov
lret
rolb
daa
inc
mov
rcrb
insl
into
je
pop
push
jp
cmp
xor
leave
xchg
sub
xchg
fst
or
fmul
scas
out
mov
call
es
popf
push
pop
xor
pop
idivb
sub
lods
fisubs
lods
and
mov
add
mov
hlt
dec
out
jbe
out
popa
ss
cltd
inc
fisttpll
sub
xchg
fucom
test
repz
das
jo
cmpsb
add
popa
sub
xor
fdiv
sti
sbb
and
inc
xchg
sub
and
ss
mov
insb
cmp
cmp
dec
cmp
add
imul
mov
cmp
xor
fwait
pop
jmp
iret
jns
lock
inc
popf
les
add
fiaddl
les
sbb
jno
cmp
ss
shl
xor
xor
stc
sbb
xlat
enter
xchg
sub
fldenv
cmp
cmp
push
mov
jb
clc
mov
sub
out
nop
dec
test
imul
inc
mov
mov
cmp
fistps
mov
daa
inc
test
orl
js
fsub
adc
bound
in
mov
adc
mov
popa
jmp
movsl
mov
xor
mov
adc
subl
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
mov
mull
xchg
jle
jge
jle
xor
insl
stos
cltd
subl
push
or
adcb
mov
xorl
inc
cld
decl
in
mov
cmpsl
insb
ljmp
dec
arpl
jbe
cltd
das
inc
cwtl
aad
mov
test
inc
cmpsl
repz
jne
jl
add
inc
xchg
in
stos
xchg
push
into
int3
jge
push
push
push
mov
pusha
mov
popl
mov
and
xchg
leave
inc
lods
xchg
jle
xchg
cwtl
fstpt
hlt
sarb
xlat
cwtl
and
gs
sbb
inc
je
jae
jns
mov
enter
stos
inc
aas
inc
lahf
imul
lcall
int3
gs
les
jmp
lahf
out
je
mov
xlat
mov
adc
adc
xchg
int3
in
mov
push
fiadds
mov
std
test
out
sahf
mov
lods
lods
cmp
or
sub
jle
scas
shlb
movsl
mov
faddp
std
push
shlb
inc
pop
jg
xor
fcomps
mov
cmp
fldt
lret
pop
sub
xor
in
and
and
mov
sbb
gs
fstp
int3
loopne
xchg
mov
xchg
lahf
mov
add
lea
jmp
pop
je
out
out
add
mov
repnz
dec
dec
adc
clc
cmp
jle
cmp
push
jne
bnd
pop
mov
sub
aaa
insb
sbb
int
cmp
loop
cmp
mov
repz
xchg
push
shr
inc
btc
rolb
js
les
insl
ss
cmpb
push
add
and
mov
test
inc
mov
pusha
mov
insl
ljmp
push
sahf
pop
or
sbb
shll
inc
xchg
insl
scas
stos
mov
sbbl
ja
movsb
sbb
fnstenv
test
mov
mov
adc
push
iret
push
push
pop
dec
push
in
mov
fwait
adc
iret
jo
fwait
jp
jbe
mov
shll
rcr
fld1
sbb
insb
adc
fwait
xchg
scas
sbb
arpl
fcomip
ret
sarl
lds
pop
les
cmp
test
orl
xlat
xor
das
testb
rcr
cli
scas
push
hlt
mov
test
inc
arpl
dec
test
test
loope
push
in
inc
mov
mov
mov
negb
mov
insb
data16
frstor
insl
cltd
jge
arpl
or
rcl
or
sbb
into
xchg
aam
or
pop
outsl
stos
push
cmp
or
cmp
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
insb
flds
jle
jge
jle
ja
xchg
cs
sbb
xor
and
mov
dec
sub
addr16
cwtl
popf
fldl
or
testl
test
in
jnp
clc
rorl
sbb
xlat
cltd
clc
sub
add
rorl
add
mov
jnp
mov
arpl
sub
push
or
add
fsubl
cmpsl
inc
les
jns
cmp
cmc
and
cltd
call
mov
dec
pop
hlt
mov
pushf
mov
sub
nop
and
inc
popa
mov
insl
movsl
or
cs
je
pop
pushf
test
xor
popa
jns
repnz
loop
daa
push
push
in
test
cmp
inc
sbb
popa
push
xchg
rcrb
insb
xlat
pop
aas
push
jo
setle
xor
aaa
adc
add
xchg
mov
call
aaa
mov
daa
push
mov
mov
in
cltd
mov
lret
jmp
outsb
lds
clc
adc
xchg
and
sbb
dec
in
inc
lock
mov
jne
clc
dec
and
inc
clc
sti
pop
or
jnp
dec
rcrb
xor
or
push
nop
daa
aaa
aaa
je
xor
xchg
jmp
sbb
daa
xchg
pusha
jne
xor
jge
jg
adc
pop
cmp
mov
arpl
dec
sbb
and
add
arpl
sbbb
adc
scas
stos
imul
cmpsb
insl
int
inc
enter
jge
xchg
stos
inc
scas
jns
icebp
add
xchg
je
ret
pop
dec
cmp
into
scas
adc
test
xchg
das
xchg
mov
inc
sbb
scas
xchg
out
cmp
adc
xor
dec
imul
std
aaa
cmp
jnp
frstor
lahf
xor
add
cld
lods
pop
mov
ja
jecxz
dec
test
xchg
out
mov
mov
xchg
shrb
inc
dec
cmp
pop
roll
mov
outsl
arpl
stos
mov
divb
daa
andb
sub
test
add
je
lea
sti
xchg
adc
sarl
jle
mov
loope
fstpl
out
jbe
das
sub
lahf
loope
add
jmp
stos
dec
dec
adc
les
int3
jno
mov
inc
sub
enter
xlat
cmp
mov
add
js
sbb
aas
hlt
sub
add
cmpsb
push
xor
push
xor
pop
ds
fiadds
imul
xlat
fildll
cltd
mov
mov
addr16
or
mov
ja
stos
cmp
sbb
cmc
inc
and
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
and
jle
jge
jle
jnp
lods
call
js
pop
mov
roll
imul
push
cmpsb
mov
mov
mov
negb
mov
rorb
out
lret
mov
test
repz
add
mov
bound
ja
inc
movsl
mov
pop
pop
ret
in
rcrl
fstpt
push
jmp
pop
fnstcw
dec
mov
mull
bound
sub
mov
inc
mov
sub
or
inc
adc
xchg
ljmp
data16
mov
xor
js
jne
add
sbb
xor
cmp
gs
xchg
imul
adc
xchg
xor
push
jecxz
jae
pop
sbb
jecxz
addr16
lret
dec
mov
dec
insb
ret
stos
and
data16
push
shlb
inc
sbb
iret
jne
icebp
jecxz
and
lods
inc
out
xchg
in
inc
mov
fdivrp
loope
iret
add
cmp
sahf
lcall
je
scas
xor
insl
pop
imul
ds
mov
loop
dec
popf
in
arpl
cmpsb
inc
lods
mov
outsl
lea
mov
dec
lahf
mov
mulb
pop
ret
stos
enter
jecxz
icebp
push
pop
in
je
ficompl
and
mov
ljmp
jo
jns
add
je
in
mov
lahf
mov
subl
fnstcw
sub
gs
dec
add
leave
fidivs
ret
dec
inc
outsb
insb
sub
push
dec
aam
push
dec
pop
aas
mov
mov
xchg
test
jg
mov
repnz
jecxz
mov
popf
mov
and
push
sbb
loope
mov
aam
lahf
sbb
sbb
sbb
lret
pop
mov
push
mov
cltd
xchg
stos
aad
inc
ret
decb
jo
jecxz
hlt
sbb
into
mov
in
push
jge
in
jbe
push
fnstcw
mov
cltd
sbb
push
jb
jne
push
add
pop
test
push
push
push
in
pusha
rcrl
inc
into
xchg
pop
aam
lea
es
in
sbb
loope
dec
out
pop
and
das
sub
stos
jb
imul
in
pop
mov
dec
mov
in
push
cltd
lock
pop
xor
push
std
inc
rol
lcall
int
add
jecxz
push
pop
push
sbb
js
add
aaa
add
in
push
enter
aad
mov
pop
pusha
cmp
hlt
fwait
pop
inc
or
jp
xchg
int
lcall
cmp
cmc
mov
out
sub
flds
call
xor
jmp
and
sbb
rcrb
xor
lea
jmp
das
subb
mov
xor
femms
ja
ss
jle
jge
jle
lahf
cltd
jne
dec
lret
jge
xor
pop
mov
push
popa
mov
and
mov
rclb
pop
xchg
push
jp
and
repz
in
push
inc
pop
push
xchg
or
cmpsl
jo
cmpxchg
out
in
sub
sahf
test
jge
jnp
jns
jmp
jne
lcall
mov
lret
xchg
loope
sub
and
adc
mov
lea
add
popf
idiv
pop
daa
mov
inc
xor
push
sbb
call
pop
test
mov
mov
adc
push
pop
jns
cmp
hlt
and
out
std
aaa
aaa
in
mov
iret
xchg
dec
mov
mov
lds
idivl
popa
scas
int
inc
cmp
cmp
psubb
sub
push
pop
mov
and
cltd
outsb
imul
push
sub
jle
fisubs
fists
sbb
cmp
mov
jb
xchg
lahf
or
lock
out
adc
add
and
ja
jne
lcall
shll
mov
loop
mov
les
dec
push
jae
notl
cmpsl
movsl
cli
pop
adc
mov
je
mov
mov
mov
aas
jge
mov
popf
out
cmp
add
int
xor
imul
into
adc
adc
repnz
and
cbtw
pop
mov
xorl
gs
emms
xchg
sarb
jb
stc
add
pop
jno
push
daa
pusha
lret
int3
jbe
and
add
mov
in
cmp
or
pop
lods
jle
dec
sub
iret
inc
xchg
xchg
adc
arpl
push
and
adc
push
jo
shr
push
mov
sti
jae
jg
lds
mov
jmp
dec
jns
std
xchg
das
push
je
sub
jecxz
mov
cli
aaa
sub
xchg
inc
test
push
cmp
xchg
push
popa
jmp
xchg
adcb
arpl
mov
jne
or
les
jo
leave
fs
out
dec
out
pop
mov
int
pop
xor
inc
movsb
adc
stos
xchg
fidivrl
aad
add
fstpt
dec
repnz
xor
rcrl
cmp
jmp
insb
jns
inc
cmp
int3
inc
cli
mov
jmp
lods
sbb
ds
or
negl
ret
lcall
pop
push
sti
sbb
pop
out
sar
shlb
sub
test
ljmp
lret
mov
pop
in
fisubrs
pop
cmp
jbe
loop
in
clc
sets
leave
mov
jnp
sbb
arpl
test
sub
sub
out
sub
imul
je
push
lea
push
or
add
add
cmp
adc
aad
fcoms
in
xor
jge
jle
mov
cmp
cmp
movsb
fnstcw
lret
jl
int3
je
inc
fcmovnu
inc
push
ja
pushf
mov
add
adc
add
pop
add
mov
jg,pn
push
and
xor
insb
test
aam
dec
shlb
lret
popf
pop
inc
jae
pop
lds
stos
jb
xor
mov
lods
mov
out
ret
and
loopne
cltd
or
or
sbb
test
cmp
push
orb
or
scas
repz
mov
add
push
mov
imul
out
jg
mov
mov
sub
popf
mov
xchg
loopne
out
jnp
jg
inc
loopne
mov
xor
jo
enter
add
mov
cmp
es
xlat
sbb
outsl
mov
mov
xchg
fildll
addr16
ja
jno
inc
xchg
in
cltd
rcrb
pop
sbb
cld
pop
sarb
mov
and
push
inc
xchg
aam
outsb
enter
sar
xchg
js
push
jnp
mov
test
das
fs
test
inc
or
add
out
inc
sub
dec
sub
xor
mov
mov
lods
clc
sar
and
dec
lea
js
xor
pop
mov
add
addr16
imul
pop
sarb
leave
push
and
push
and
repz
sti
xor
dec
mov
repz
cmp
inc
and
add
mov
mov
adc
mov
sbb
xchg
mov
pop
inc
lret
ljmp
insb
xchg
mov
enter
js
xor
outsl
fsubrl
das
stc
outsb
xor
fldt
jp
or
add
mov
pop
adc
cmp
and
cmpb
sub
pop
push
or
jecxz
pop
cmp
pop
out
int3
sub
lcall
pop
sub
pop
fistpl
shrl
adc
nop
mov
scas
out
mov
jle
arpl
scas
call
and
sarb
je
inc
pop
add
sub
dec
jecxz
jo
or
mov
andb
clc
int3
or
xchg
mov
lret
mov
push
add
popf
pop
pop
lcall
ja
lahf
and
cmpsl
dec
xchg
pop
xor
or
add
mov
std
dec
pop
xor
mov
and
sbb
shl
dec
mov
xchg
pop
insb
mov
cmc
adc
mov
and
xor
jno
std
inc
es
leave
imul
pop
es
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
imul
jge
jle
dec
mov
pusha
mov
or
out
dec
push
xchg
int3
sub
outsb
mov
mov
test
movsb
cmp
or
adc
push
adc
pushl
cmp
or
repz
sbb
in
mov
push
jg
mov
lret
frstor
xchg
xchg
pusha
je
enter
ja
int3
cld
jl
fstpt
add
sbb
pop
inc
shlb
call
cs
std
jae
mov
xor
int
push
xor
mov
cltd
test
cs
loopne
sbb
mov
in
sub
adc
pop
dec
and
pushf
add
pop
clc
popf
mov
rcl
cmp
inc
push
xchg
ret
fidivs
or
iret
shl
xchg
pop
fwait
scas
xchg
sbb
mov
dec
cmp
or
mov
addb
xor
jecxz
cli
and
outsl
addr16
jge
ss
das
pop
and
lea
shrb
jg
hlt
fmulp
orl
mov
mov
cmp
or
and
dec
xor
xor
mov
xchg
out
push
sub
lret
push
cltd
jecxz
les
jno
sub
xchg
jg
in
adc
aam
aam
std
test
push
cltd
out
add
xchg
and
mov
out
or
sbb
ja
wrmsr
shlb
push
mov
pop
test
dec
and
movsl
push
mov
out
popf
jnp
cld
sub
mov
out
jmp
xchg
sub
in
movsb
mov
xchg
jbe
lcall
xor
xchg
lret
adc
sbb
int3
lcall
mov
push
jle
dec
sbb
sbb
mov
or
mov
adcb
xchg
nop
rcrl
mov
add
push
sbb
xchg
bswap
int3
sti
insb
outsl
es
sbbl
or
xor
scas
mov
insb
xchg
mov
call
xchg
gs
inc
or
pusha
negb
add
dec
xchg
in
push
movsl
cli
pop
fwait
or
jns
adc
outsb
nop
hlt
add
lcall
mov
imul
cmpsb
push
lods
fwait
add
pop
mov
mov
adc
fistpll
push
call
push
aas
repz
loop
cld
cmp
push
cs
sub
jo
or
fs
cmpsl
jnp
test
ss
lods
repz
inc
pop
icebp
stos
loopne
mov
stos
and
daa
push
rcr
push
cld
lock
call
lds
notl
xchg
mov
pop
cmp
inc
enter
testl
dec
jg
in
or
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
out
push
lret
movsb
jle
push
jg
jle
dec
xor
xorb
popl
push
aas
into
inc
add
es
hlt
rorb
jp
or
lahf
dec
adc
and
lret
push
and
xchg
mov
stc
push
movsb
sbb
add
xchg
addr16
les
pop
andl
xchg
pop
cmpsl
jp
cmp
hlt
pop
test
or
dec
mov
std
cs
pop
sub
dec
scas
push
jle
dec
call
xchg
int
sbb
sub
adc
sub
in
fmull
adcb
jmp
loope
mov
xor
sbb
ret
daa
nop
leave
adc
dec
xlat
ficompl
dec
bound
cmp
shll
cmpsl
push
fsubrl
outsl
or
pop
mov
fnsave
push
mov
mov
mov
pop
jne
aaa
stc
push
dec
movsl
loop
stos
ret
push
testl
shll
jnp
test
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
cmp
jle
jg
jle
in
sahf
shrl
adc
and
leave
push
sbb
int3
fstpl
loop
pop
lods
push
negl
stc
dec
push
inc
mov
bswap
test
push
aas
and
lcall
sbb
jb
add
mov
mov
das
pop
xor
rcr
xor
clc
inc
out
mov
cmc
mov
mov
adc
fcoml
xchg
cmc
cmpsl
mov
imul
jo
add
jle
and
mov
mov
aaa
mov
fists
imul
mov
inc
in
cli
lret
cwtl
mov
movsb
jns
shll
arpl
jb
and
adc
sbb
cmc
insb
idivb
add
jge
lcall
inc
jno
je
jb
pop
inc
lahf
jno
loopne
roll
xor
xor
rcl
movsl
ficoml
fsts
mov
mov
add
and
scas
pop
jecxz
inc
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
cmp
fbld
jle
stc
push
or
mov
mov
and
lea
inc
repz
lods
pop
shrb
pop
mov
jmp
out
out
ljmp
and
mov
fcom
inc
test
dec
mov
or
out
or
out
jne
je
cmpsb
jne
jne
in
das
aad
outsl
inc
dec
test
imul
sbb
mov
sbb
into
into
clc
push
jmp
hlt
jno
cmp
pop
cmpsl
xlat
mov
addr16
push
inc
cltd
push
in
jne
in
push
imul
mov
fistpll
and
adcb
xchg
mov
in
insl
repnz
sub
sub
cmp
and
xchg
mov
dec
popa
sahf
loope
push
mov
inc
lret
mov
cmc
pop
mov
mov
xlat
iret
jmp
dec
mov
mov
push
jns
jg
bound
add
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
mov
add
push
jl
jle
add
imul
jne
jbe
test
or
dec
bound
adc
jns
mov
shrb
mov
jmp
popf
push
mov
pop
xlat
ss
sub
add
xlat
je
cmp
xchg
cld
push
xor
sti
mov
lret
mov
lock
jnp
cld
mov
rorb
dec
mov
jbe
pop
je
sub
mov
dec
insb
scas
pop
push
mov
or
movsl
xor
addr16
jb
add
xchg
cmp
jge
sbb
test
push
mov
mov
inc
mov
inc
pop
lock
mov
add
shrl
sahf
mov
mov
sub
lahf
sar
adc
jae
out
pop
outsl
mov
xor
jp
pop
mov
mov
xor
cmpsl
ljmp
xchg
mov
push
lds
les
inc
pop
jle
sub
push
fs
cld
hlt
xchg
in
mov
add
push
das
gs
adc
dec
das
out
dec
and
popa
mov
shrb
subb
push
aas
lret
add
push
repz
xchg
fxch
fwait
and
sub
or
fnstenv
fdivs
cmp
dec
nop
in
clc
inc
in
sub
fwait
mov
imul
ljmp
sbb
mov
stos
imul
adc
in
and
mov
push
inc
sbb
les
pop
aaa
lret
and
ficompl
xor
arpl
xlat
les
mov
outsl
lret
fdivrs
mov
aaa
andl
pop
lcall
mov
in
hlt
bound
or
add
fistl
popf
aad
pop
jmp
cmp
dec
loop
lret
mov
jmp
aad
dec
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
call
dec
movsb
mov
pop
les
ljmp
das
dec
aaa
sbb
add
dec
aaa
dec
popa
loope
ret
adc
in
popa
sbb
and
add
movsl
cmc
insb
mov
sbb
xchg
sarl
test
jnp
scas
push
scas
inc
push
mov
icebp
fs
xchg
sub
dec
push
xor
divl
jl
adc
push
adc
std
sbb
pop
fisttpl
call
pushf
aad
push
int3
iret
fldl2e
inc
lea
and
mov
nop
out
stc
lock
repnz
xchg
xor
jp
in
stos
jbe
enter
daa
stos
in
aam
dec
cmp
push
orb
fs
mov
xchg
xor
inc
and
adc
repz
test
push
mov
pushf
pop
cli
cmp
inc
scas
pusha
xor
mov
sbbl
aad
adc
adc
dec
lds
es
xorl
leave
mov
inc
dec
adc
xor
sbb
lcall
or
fdivs
mov
push
cs
loopne
mov
in
mov
daa
pop
test
hlt
js
ficoml
stos
sbb
or
jmp
cmp
xchg
jo
bound
dec
bound
scas
das
mov
aas
dec
and
mov
adcb
pop
lods
fs
mov
mov
mov
or
fsubrl
jp
mov
shll
mov
jge
inc
test
loop
or
loop
imul
je
fisubl
mov
nop
gs
je
arpl
aam
out
inc
lock
clc
insb
stos
cmpb
icebp
add
adc
push
shr
mov
cmpsl
push
jne
mov
shr
xorb
add
sbb
cmp
ret
call
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
pop
dec
push
test
inc
pop
push
mov
out
movsb
pop
mov
cltd
xchg
mov
in
inc
sub
loopne
and
mov
xchg
les
je
sbb
xor
dec
bound
and
movsl
add
inc
in
mov
xchg
nop
mov
test
mov
jecxz
sarb
lock
pop
sbb
int3
add
sbb
movsb
or
es
inc
rcll
dec
inc
push
or
inc
ljmp
aam
aam
add
cmp
xor
and
dec
jl
mov
aaa
repz
jecxz
sub
add
leave
adc
pusha
pop
jle
fisttps
adc
push
push
xchg
lods
lret
inc
cld
into
in
mov
je
dec
outsl
and
aaa
cltd
xchg
ffree
xchg
insb
mov
dec
cltd
jecxz
in
mov
sbb
xchg
gs
flds
or
mov
cmp
aas
and
in
or
arpl
inc
mov
mov
cmpsb
add
scas
xor
lret
dec
or
mov
sub
fmulp
push
add
or
out
push
scas
movsl
rorb
iret
cmp
jb
pop
leave
push
mov
mov
outsl
lock
adc
mov
and
xchg
lret
cltd
movsl
jmp
xchg
fnstsw
popf
mov
pop
popa
pop
cmpsb
ljmp
jle
pop
mov
insl
mov
xchg
sti
xor
inc
insl
icebp
and
xchg
cmp
and
pop
test
loopne
and
push
lods
outsl
or
scas
cli
mov
out
mov
bound
jmp
imul
test
repz
or
gs
mov
add
sub
imul
xor
add
test
add
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
and
mov
enter
hlt
dec
testl
aas
mov
push
mov
rolb
mov
rolb
and
push
cmp
mulb
stos
jae
fistpl
std
add
xor
cltd
xor
fsubrl
or
sahf
mov
dec
repnz
hlt
jae
cmp
fdivrl
int3
dec
pop
bound
add
imul
jo
xor
sub
push
add
or
sahf
int3
jmp
jne
jbe
or
mov
push
mov
or
scas
divb
popa
mov
pop
add
pop
sub
bound
daa
cli
dec
ret
lods
or
loop
nop
cmpsb
push
jae
sar
ljmp
out
neg
loope
xchg
in
aaa
iret
jle
sub
pop
xor
jl
mov
cmp
push
inc
mov
push
xor
pop
cltd
jae
mov
aad
fcomps
xchg
shll
sub
cltd
add
jns
hlt
cmp
mov
sbb
sub
add
inc
pop
mov
push
dec
ljmp
aas
sbb
pop
bound
into
ds
xchg
xchg
push
cmp
mov
pop
movsl
outsl
fists
jne
mov
ja
and
xchg
pop
lds
xchg
sbb
xor
cmpsl
sarb
addr16
xor
test
push
pop
xor
dec
fnstcw
test
sub
adc
adc
imul
pop
dec
xchg
or
mov
outsb
rclb
add
xor
mov
add
pusha
mov
pop
push
pop
mov
jmp
dec
mov
add
jbe
push
push
adc
mov
push
cld
and
test
mov
cmp
xor
xchg
mov
scas
or
movsl
lret
or
xchg
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
cwtl
and
lods
jl
jle
lods
push
mov
mov
pop
loopne
lret
out
jo
add
pusha
jne
cmpsb
push
outsl
aaa
jmp
enter
jo
jle
test
inc
mov
repz
mov
mov
das
mov
out
xchg
mov
insl
or
imul
daa
pushw
jmp
push
xor
adc
out
cmpsb
push
test
filds
dec
rolb
andb
insl
lock
pop
andl
push
mov
fs
pop
loopne
jge
sti
stc
pop
pop
xchg
test
cli
out
insl
add
lahf
fdivs
pop
test
xchg
push
and
cmp
dec
pushl
sbb
out
scas
cld
sub
arpl
dec
xchg
sbb
jo
out
push
je
mov
push
movsb
add
gs
xchg
inc
xchg
push
mov
mov
xor
addr16
ret
mov
adc
xchg
inc
test
adc
add
lahf
adc
ja
mov
je
in
ficompl
rorb
xorb
fs
stos
lahf
fstpt
dec
stos
je
mov
sub
repz
iret
ljmp
imul
and
adc
test
test
xor
or
fmuls
jge
pop
lahf
jle
push
dec
xchg
and
jg
les
movl
jne
rorb
inc
xchg
repnz
jmp
mov
sub
mov
jmp
test
sbb
sahf
jl
rcll
and
out
mov
dec
add
cltd
fs
in
pusha
ss
bound
cli
and
lock
jmp
push
pop
jbe
test
lods
mov
sub
dec
test
or
cmc
fldt
sub
xchg
jb
ret
push
popf
jnp
pop
mov
push
aaa
out
out
xchg
cld
flds
data16
pop
ds
push
ja
sahf
nop
lods
inc
xchg
pop
ss
cmp
sbb
loope
push
sbb
dec
dec
sub
push
adc
mov
clc
xchg
je
jle
push
mov
popa
inc
imul
sbb
pop
xchg
sub
cmpsb
inc
hlt
daa
nop
mov
fisttps
stc
loopne
loop
out
dec
cltd
pop
js
pop
dec
arpl
in
adc
aaa
mull
mov
xchg
inc
mov
inc
cmp
add
outsb
xchg
lcall
cld
xor
daa
cmp
jb
add
mov
addl
jmp
insb
xchg
xchg
in
or
xor
ret
mov
jle
jl
jle
add
clc
pop
xchg
andl
mov
jge
dec
cltd
iret
sub
testl
sbb
lods
ja
out
in
push
push
xor
pop
cs
orb
lcall
adc
addr16
inc
adc
adc
mov
inc
or
dec
movsl
lods
scas
sarb
jge
ds
cmp
dec
fld1
popa
test
mov
negl
into
add
mov
addb
sub
xor
jg
cmpsl
outsl
push
sbb
arpl
push
mov
sub
arpl
loop
push
repz
push
add
mov
sahf
popf
xchg
gs
mov
mov
dec
add
popf
cmpsb
jge
jmp
cld
and
xchg
ret
test
jbe
mov
lret
lock
jp
out
in
sarl
in
adc
lret
cwtl
into
push
movsl
mov
imul
pop
jb
fimull
pushf
mov
cmp
popa
aas
adc
les
pusha
call
sbb
cmc
mov
aam
cmp
mov
inc
dec
jbe
mov
add
out
pop
push
and
ficoms
pusha
mov
pop
arpl
adc
cmp
jno
call
fs
icebp
fisttpl
stos
int3
clc
jge
mov
pop
adc
cmpsb
rcll
iret
daa
xchg
or
adc
push
rorl
xchg
xchg
cld
icebp
fisubs
into
push
lds
add
jno
clc
push
in
gs
add
adc
jp,pn
adc
lea
loope
and
mov
out
sbb
mov
adc
dec
scas
add
inc
out
dec
stos
ss
je
xchg
cld
inc
je
lock
sub
mov
fcmovnbe
adc
cmp
sub
or
add
mov
orl
std
adc
ja
adc
popa
mov
movsl
dec
outsl
orl
ffree
pop
int
std
imul
dec
stos
mov
jecxz
mov
xchg
or
gs
iret
jecxz
push
les
leave
das
pop
clc
arpl
adc
aaa
sub
pop
iret
jmp
pop
je
scas
xor
dec
sbb
adc
repz
scas
sub
cmpsl
lods
push
push
inc
pop
loope
gs
jno
xor
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
addr16
or
jle
icebp
movsl
push
ds
test
cmpsb
xchg
mov
push
pop
mov
cmp
mov
mov
add
sarb
bound
fcoml
jge
lock
es
fdivrl
push
or
add
sub
ret
jne
add
jge
mov
int3
or
fwait
hlt
or
xchg
or
push
cwtl
sti
nop
xchg
push
in
xchg
lret
jnp
bound
fbstp
cld
jbe
xor
dec
cmpsl
outsl
mov
negl
mull
call
popa
lret
stos
mov
mov
es
sub
fimuls
jp
fstpt
or
ss
and
push
sub
paddusb
arpl
xchg
cmp
mov
fwait
xchg
mov
in
repz
jae
shll
or
mov
and
pusha
xlat
ljmp
movsl
pusha
pop
lcall
stos
cs
push
addr16
mov
mov
or
addr16
xor
mov
lods
sub
sbb
shr
aaa
mov
mov
out
mov
mov
cltd
insb
mov
or
inc
int
loop
es
push
jbe
popa
xchg
rorb
pusha
in
pop
sub
repnz
mov
cmpsb
fsts
mov
jmp
jns
imul
ss
mov
insb
addb
orl
loopne
jnp
sbb
or
pop
mov
cmp
push
les
ss
fwait
cmp
pop
popa
jp
sbb
leave
add
scas
dec
inc
mov
fcompl
rclb
lock
idiv
idivb
icebp
cmp
repz
pusha
inc
or
mov
cmp
xchg
lock
push
jnp
int3
mov
wrmsr
shll
addb
or
shlb
dec
jnp
jmp
addr16
das
mov
insb
fildll
ret
fstps
das
mov
pop
mov
push
nop
mov
les
add
mov
movsl
xchg
rorl
cmp
mov
xlat
mov
loopne
out
int
add
xor
mov
jl
cmpsl
test
inc
loope
popa
or
xor
je
jl
scas
dec
cmp
push
mov
and
jae
mov
ss
imul
test
addr16
out
jno
or
aas
movsb
ds
in
fwait
insl
lahf
imul
pop
push
inc
cmpl
lret
add
sub
arpl
sub
scas
ret
shrl
sbb
mov
jl
jle
ds
sbb
dec
loope
add
xchg
jge
pop
aam
jnp
daa
pop
std
cltd
fldcw
adc
pushf
fildl
shl
jae
pushf
rcr
push
ret
cmpsl
pusha
fidivrl
or
cs
call
inc
mov
bound
test
in
sub
popa
hlt
and
sti
mov
lret
sbbl
adc
insb
mov
jae
inc
jnp
jle
jae
loope
lea
lcall
jno
and
fdivl
ja
out
xchg
aaa
xchg
in
ljmp
cltd
pop
mov
fs
xor
cmp
imul
test
jp
pop
dec
jge
jae
mov
test
cmp
fldenv
jno
or
pop
lahf
pop
adc
dec
or
shl
cmc
cmc
cmp
addr16
add
push
lcall
sub
hlt
stos
stc
ljmp
sbb
enter
xor
jg
arpl
ret
into
ss
pop
mov
jb
dec
jle
push
loop
mov
dec
mov
mov
xchg
push
or
call
and
sbb
shll
mov
xor
add
aas
mov
mov
cld
mov
mov
test
xchg
add
loope
jae
adc
cs
sub
pop
push
cltd
cmp
test
arpl
mov
lret
mov
aas
in
rcrb
inc
in
je
sbb
scas
fsub
shrb
leave
in
movsb
dec
shlb
and
push
adc
add
ret
stos
adcb
adc
push
cltd
movsl
mov
test
fmuls
add
mov
mov
nop
std
push
cmp
int3
xchg
jne
sub
notl
sbb
pusha
add
push
cmp
pop
or
sub
call
in
shlb
jp
aam
mov
and
imul
sub
les
mov
jno
ds
repnz
inc
sub
outsl
pop
enter
insb
shlb
mov
jbe
das
inc
and
dec
add
adc
mov
jmp
mov
xchg
nop
and
roll
bound
add
and
sub
mov
push
sub
xor
jo
or
adc
inc
pop
call
cwtl
push
repz
pop
xor
mov
jne
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
hlt
dec
idivl
jle
cli
inc
cmp
add
shrl
push
pop
lods
sbb
xor
xchg
divl
fldl
and
ljmp
add
shll
xchg
mov
inc
rcl
movsl
negl
push
sub
pop
int3
mov
sub
jo
ret
nop
sti
jae
stc
testl
rcrl
and
push
push
imul
dec
lods
mov
inc
add
lret
cmp
jge
cld
mov
mov
pop
pop
sub
xchg
push
mov
mov
jno
int
fdivrs
push
pop
dec
jno
sarl
xor
ret
inc
fnstsw
cmpsl
repz
dec
cmp
or
or
mov
mov
mov
sarl
push
sub
dec
pusha
pop
inc
ss
leave
xlat
rolb
mov
mov
mov
cmp
ljmp
pop
lds
stos
ret
pop
rcl
push
sub
jl
clc
sbb
jbe
and
xor
leave
not
sbb
cmp
add
lds
add
in
jbe
sbb
push
sub
fsubl
lret
push
sub
ljmp
rolb
mov
daa
mov
ret
shrl
xchg
sub
push
adc
lods
lock
insb
sbb
add
pop
and
or
sbb
xlat
jno
scas
neg
mov
dec
jnp
sbb
pushf
cmp
addr16
adc
ja
xor
jl
outsl
dec
adc
pop
jmp
cltd
jnp
adc
mov
es
insl
sbb
dec
mov
call
cltd
addr16
pushf
push
add
mov
stc
cld
call
add
fs
cld
insw
shrl
in
mov
lahf
cmpsl
mov
cmp
push
je
cmp
pop
cmp
xchg
es
cs
and
xchg
fs
xor
adc
mov
int
jns
popa
mov
fnstenv
add
xor
aad
ljmp
xchg
pop
arpl
add
daa
out
scas
je
push
adc
ficoms
movzbl
inc
add
fimuls
iret
subl
into
push
sarl
test
out
xchg
xchg
mov
mov
popa
loope
test
stc
add
nop
test
aas
and
jp
int
jecxz
mov
test
dec
leave
stos
pop
pinsrw
fdivl
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
aaa
imul
xor
cmp
add
sbb
in
mov
xchg
in
mov
orb
ljmp
cmc
jp
jmp
ret
cmp
mov
call
inc
popa
hlt
add
add
lret
popf
mov
push
repnz
daa
es
hlt
mov
out
fnstcw
pop
add
je
sbb
stos
sbb
aam
cmpsl
in
test
ret
rorb
inc
or
push
dec
xor
imul
add
cmp
lcall
in
sub
or
jg
pop
shll
mov
popf
int
clc
in
ljmp
inc
mov
push
cmp
imul
lods
pusha
xchg
popa
xor
fsubrl
jp
add
ss
mov
jnp
sbb
push
fwait
jno
cmc
sbbl
orl
fdiv
adc
inc
fcmovnb
jge
add
jecxz
or
dec
stos
test
jle
jg
outsb
in
cli
jbe
dec
mov
jecxz
push
cli
mov
push
aam
add
cwtl
sbbl
sarb
sub
roll
int
test
lds
repz
xchg
sbb
imul
push
adc
stos
pop
or
cmp
test
jne
mov
or
mov
sbb
addr16
pop
addb
push
ret
or
xor
adc
insb
mov
das
pusha
cmp
adc
nop
leave
inc
loop
lret
jb
add
ret
mov
push
and
mov
xchg
and
pop
int3
mov
lahf
inc
aad
or
cltd
fidivl
arpl
js
fidivrl
subl
js
cmp
sahf
jne
lock
sub
xchg
jae
int3
mov
jge
ljmp
daa
jne
xorb
outsl
ret
pop
pusha
ja
repnz
pop
or
insl
jle
xchg
cltd
addr16
adc
lods
shrb
cmp
jnp
pop
cli
fidivrs
sbb
cmp
pop
jle
bnd
cmpsb
inc
cltd
ffree
inc
cld
xor
adc
inc
add
add
add
add
adc
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
stos
xchg
jo
xchg
mov
jle
jmp
or
leave
jg
lret
mov
add
scas
aad
push
cmp
pusha
sbb
dec
das
mov
xchg
test
mov
mov
and
mov
popa
mov
mov
dec
add
cmp
jbe
or
outsl
in
inc
scas
aas
fdivr
scas
inc
dec
out
dec
xchg
mov
mov
push
aad
sti
push
mov
pop
loop
divl
imul
mov
jne
jbe
ja
xor
lods
pushf
xlat
in
lock
sahf
xchg
and
aaa
or
push
cwtl
push
push
mov
xchg
mov
std
cld
pop
test
jo
xchg
data16
pop
mov
mov
jmp
movsb
jecxz
and
addb
and
ss
add
xchg
mov
jnp
push
pop
and
arpl
jge
sub
xor
jo
xchg
xchg
dec
and
mul
mov
push
ds
lcall
jno
xor
dec
mov
fildl
sbb
cmp
icebp
enter
xchg
inc
outsl
add
dec
in
bound
jg
fistpll
push
nop
ds
pop
mov
pop
popf
mov
sub
dec
lods
jne
lock
aaa
sub
jg
jg
or
cmp
lds
lret
outsl
adc
cmp
dec
jge
shlb
cmc
loope
push
adc
stos
push
mov
pop
sarb
push
dec
cmc
popf
xor
jmp
xor
jae
inc
fldt
cs
ss
dec
jae
into
lods
call
cmpsl
lahf
lods
fwait
dec
inc
pop
adc
hlt
adc
fcmovnu
scas
sbb
les
aad
and
lods
mov
mov
cld
orl
mov
enter
push
sub
pop
xorb
cli
and
sub
dec
ficomps
mov
jmp
shl
mov
sub
nop
jb
lods
cmpsl
daa
call
cmp
jge,pt
xor
inc
jno
adc
out
lea
xchg
adc
fisubl
jp
adc
cmp
ljmp
mov
push
xor
sbb
outsl
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
sub
inc
jle
icebp
jg
jle
mov
xchg
mov
sbb
lods
add
popf
mov
in
cmp
cmpsb
test
cmpsl
stc
cmpsb
add
stc
pop
mov
es
mov
adc
jg
pop
pop
test
ljmp
and
inc
or
mov
xor
repnz
fistpl
jbe
mov
flds
xor
pop
push
and
stc
out
fnstenv
mov
sbb
imul
sbb
fstp
or
fwait
jne
hlt
std
mov
adc
std
push
jnp
cmp
pusha
mov
cld
sbb
outsb
sahf
scas
push
test
dec
dec
adc
mov
dec
stos
sub
cld
enter
jmp
adc
cmpl
stos
xchg
jle
mov
jecxz
mov
nop
xor
iret
push
inc
push
cltd
int
add
int3
add
lahf
int
iret
jg
cmp
clc
push
xor
ja
dec
rcrb
dec
mull
mov
push
js
ret
adc
push
negl
jle
sbb
and
inc
mov
jae
fs
adc
mov
sahf
fisttps
jecxz
mov
or
aas
leave
scas
adc
xor
loope
aam
xor
jecxz
adc
lahf
mov
aam
data16
push
std
orb
mov
xchg
popf
ds
in
pusha
push
mov
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
jne
jle
adc
data16
insl
loopne
and
fidivrs
adc
jp
xor
les
mov
test
jge
or
mov
pop
xor
mov
sub
outsl
frstor
inc
cwtl
mov
lock
enter
or
popf
movsl
sbb
xor
cmp
js
enter
mov
mov
xor
sub
xor
jecxz
test
dec
out
push
xlat
sub
int3
and
insl
add
xor
and
loope
inc
mov
xchg
cmp
push
orb
test
rclb
pop
cmp
pusha
std
sub
add
and
imul
andb
sar
mov
cld
push
rclb
dec
es
sbb
mov
negl
sub
pop
or
fdivrs
mov
lods
shlb
cs
roll
fildll
push
jns
xchg
jecxz
lcall
es
push
iret
mov
xchg
adc
dec
out
out
repz
xchg
inc
and
sbb
repnz
sbb
sti
sbb
lret
push
mov
add
cmp
cs
int
or
xlat
gs
xchg
or
cld
push
out
or
mov
fisubs
repz
lods
jecxz
lock
test
add
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
int3
and
mov
icebp
jg
jle
mov
xchg
rclb
aad
inc
push
adc
push
xchg
cmp
xchg
icebp
enter
dec
push
aas
xchg
in
dec
xchg
cmpb
lock
scas
xchg
cli
insl
in
push
push
dec
fnstenv
cmc
pop
loopne
lret
ja
adc
sarb
add
cmp
sbb
pop
lret
mov
fisubl
jno
fs
xor
call
sbb
mov
adcb
clc
nop
or
nop
and
push
inc
add
xor
sahf
in
test
into
fs
xor
sbb
aad
nop
dec
pushf
leave
pop
shrb
mov
jecxz
vcvttss2si
test
es
pushf
mov
scas
mov
imul
sub
xchg
mov
pop
sub
outsl
mov
cmp
xor
jb
xor
je
xorl
sbb
in
out
loopne
push
sub
daa
mov
data16
sub
xchg
nop
pop
sbb
sar
xchg
dec
jge
jecxz
subb
imul
cltd
jle
shrb
ss
gs
popl
rorl
adc
inc
fs
call
and
jmp
jns,pn
rcrb
xor
cmpsb
inc
xor
push
xorb
jmp
xor
dec
and
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
pop
insb
sub
inc
jle
icebp
jg
jle
cmp
adc
push
push
fdiv
aaa
shll
xor
adc
jge
hlt
psubusb
lock
insb
mov
xor
or
cmp
mov
icebp
rolb
sbb
dec
adc
dec
sti
inc
shll
stos
mov
sbb
cltd
roll
xor
fadds
aad
enter
cltd
jl
inc
mov
mov
push
jmp
dec
push
add
rorb
out
cmp
pop
mov
cld
push
loop
test
iret
shlb
lret
mov
bound
sub
dec
sub
fdivrs
pushf
mov
stc
sub
inc
sub
cmp
and
jecxz
insl
mov
and
lods
ja
mov
nop
in
pop
lds
dec
fimuls
lods
in
jecxz
dec
or
mov
mov
fprem1
jb
or
inc
data16
cmp
xchg
add
int3
nop
lods
ret
push
sar
in
sub
nop
inc
push
push
icebp
push
cmp
shl
or
subl
and
push
aam
jge
mov
jne
insl
cld
dec
sbb
sub
into
hlt
mov
adc
pop
add
xchg
jnp
aaa
ficomps
xchg
push
je
sahf
hlt
popf
test
loopne,pt
cld
add
out
gs
mov
push
jle
aad
stos
add
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
popa
add
jle
jg
jle
jbe
adc
mov
lahf
xchg
xor
sbb
bound
cltd
or
xlat
rorb
jne
mov
push
mov
jge
lods
cli
push
aad
rcr
lock
arpl
js
js
fsubrl
sbbl
hlt
nop
cmp
pusha
push
jmp
or
and
xor
gs
incl
lret
xchg
pushf
jl
imul
in
pop
cmp
out
or
out
test
adc
fs
and
psubw
mov
in
mov
pop
mov
sbb
and
cmp
lods
popf
sub
add
dec
or
mov
xor
inc
add
std
sub
lock
cmp
out
dec
idiv
sub
mov
cld
ret
xor
sub
sti
inc
mov
lahf
cmp
iret
adc
dec
popf
add
mov
jns
cmp
in
push
shl
divb
dec
pop
sbb
in
jo
orb
xor
add
fbstp
nop
sarb
loopne
add
int
test
and
sbb
js
roll
inc
test
jmp
sbb
shlb
in
ds
cmp
pop
mov
arpl
sub
bound
arpl
icebp
push
cmp
pop
lds
ret
or
pop
cld
decl
jmp
ljmp
jo
fidivs
jle
pop
sbb
jg
jle
mov
pushf
ret
mov
xor
in
lods
negl
xor
pop
outsb
mov
adcb
adc
bound
clc
xor
dec
cltd
adc
xor
ds
dec
imul
xchg
sub
cmp
arpl
imul
xor
notl
mov
push
sbb
sub
sahf
inc
repz
ficoms
lock
inc
pop
ljmp
inc
pop
stos
mov
jle
fwait
nop
fimull
add
addr16
jnp
xchg
adc
cmp
mov
xor
jne
dec
pop
das
scas
jle
fdivl
fcomp
or
jne
pop
pop
in
sub
mov
sub
jne
push
sbbb
iret
enter
pop
mov
mov
stos
adc
fidivrs
and
sub
push
lea
js
sbb
pop
mov
je
cmp
mov
popa
nop/reserved
sbb
negl
inc
loop
decl
outsl
xchg
sahf
pop
adc
xlat
mov
add
into
dec
mov
mov
xchg
jle
push
mov
outsb
cmpsb
fs
in
pop
dec
inc
sbb
adc
or
dec
ja
mov
sub
push
mov
sub
fldenv
xchg
push
ret
jecxz
xor
cmp
jmp
fucomp
rorl
jns
and
pushf
mov
dec
adc
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
call
add
loop
lahf
or
mov
scas
push
insl
and
popa
sbb
mov
push
std
dec
int
out
faddl
pop
or
lods
outsl
dec
data16
test
cltd
repz
add
pop
data16
sbb
or
cmp
frstor
repz
push
mov
insb
test
test
inc
jns
sbb
jbe
cltd
jnp
add
das
pop
adc
jmp
lea
mov
mov
cmp
jmp
jl
scas
adc
into
sbb
je
fnstcw
xchg
mov
or
inc
inc
out
test
push
push
inc
leave
mov
xorb
fisubs
bound
mov
inc
outsb
ja
or
ficomps
roll
loopne
shrb
out
out
mov
call
es
adc
xchg
psllw
js
or
mov
stos
mov
push
inc
mov
dec
testb
mov
cmpsb
les
mov
imul
jecxz
lods
sbbl
sbb
sub
fsubs
jns
dec
fdivp
or
pop
push
lret
outsb
jg
xchg
std
je
daa
arpl
xor
mov
and
push
adc
pop
or
dec
loopne
or
mov
mov
sbb
mov
pusha
imul
mov
out
sub
push
mov
aaa
inc
dec
js
mov
scas
xchg
add
js
xlat
rolb
xchg
jo
jno
jmp
std
mov
or
xor
inc
es
test
imul
or
lea
lock
inc
nop
push
jle
nop
js
jns
xor
ret
cmpb
add
and
pop
add
jge
jl,pt
es
nopl
jecxz
mov
push
ret
ds
cltd
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
dec
xchg
adc
adc
in
jmp
sub
push
testl
dec
stos
xor
mov
filds
int
popf
and
pop
mov
or
daa
push
dec
shlb
or
outsb
jo
adc
js
fimull
sub
out
jmp
cs
aas
aad
mov
adc
push
cmpl
lret
or
pop
pop
inc
sub
mov
mov
fnsetpm(287
jle
jmp
pop
test
div
test
repz
cmpsb
add
jmp
or
xchg
xchg
jns
scas
pushf
fcoml
mov
jns
inc
inc
loope
sbb
push
add
out
add
imul
int
mov
adc
int
jl
inc
and
int3
or
fwait
test
and
fistps
pop
sti
sbbl
mov
mov
das
dec
sub
mov
hlt
ret
push
lods
into
outsb
ljmp
mov
sbb
roll
push
mov
xchg
sub
xchg
mov
fadd
leave
sbb
adc
push
inc
jl
pop
dec
out
sti
cmpsl
loope
pop
loope
dec
jbe
out
cmc
or
jo
xlat
ror
dec
std
lods
out
jl
or
outsl
shr
cmp
pop
add
and
insb
fcompl
mov
dec
push
test
sbb
sbb
es
leave
ds
stos
lods
pop
xchg
in
fucomi
mov
jns
iret
sbb
cmp
xor
jnp
lds
loope
jp
repnz
mov
enter
and
dec
pop
mov
mov
adc
mov
mov
daa
orps
out
test
pop
loopne
xchg
icebp
loop
push
clc
xchg
pop
xchg
and
icebp
in
scas
pusha
mov
push
fbstp
or
les
enter
fcompl
mov
xor
cmp
and
mov
ret
lret
and
ret
jne
mov
add
jmp
mov
imul
xchg
jle
jl
jle
mov
pop
jb
rcrl
dec
xor
xor
lret
add
ret
mov
cmpsl
dec
cmp
sbb
dec
int
mov
xlat
gs
xlat
shr
roll
sbb
xor
push
loopne
popa
and
pop
sbb
jg
or
adc
mov
xchg
add
sub
inc
jb
shl
cmp
arpl
sbb
clc
cmp
in
lahf
sbb
push
push
out
pop
aaa
add
testl
inc
add
add
out
mov
mov
mov
movsb
xor
movsb
xchg
mov
push
into
mov
shll
mov
iret
lods
and
sbb
cli
cmp
sub
jmp
clc
in
mov
sar
jg
inc
ss
aaa
dec
pop
add
addr16
fdivrp
popa
jle
push
inc
fldenv
mov
mov
mov
cld
sarl
inc
push
xlat
bound
bound
test
mov
aaa
mov
push
rorl
sbb
lock
jmp
xchg
xchg
js
pop
adc
or
scas
mov
ss
rcrb
jle
out
mov
aam
addr16
movsl
cs
fiadds
hlt
adc
and
adcb
or
ret
xor
fcmove
mov
pop
xchg
xor
sbb
and
sub
nop
pop
ret
sti
mov
jne
scas
push
addl
push
xchg
cli
das
jo
ffreep
fists
jmp
adc
repz
dec
into
xchg
cld
add
jmp
repnz
push
pop
icebp
push
mov
jmp
pop
push
and
repnz
out
sbb
jnp
ss
ret
js
gs
or
ja
ja
test
inc
fisttpll
les
dec
sbb
push
std
gs
jl
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
sbb
pushf
mov
add
add
add
cltd
and
rcrl
es
imul
xchg
mov
xchg
int3
mov
lock
cmp
mov
jle
fadds
out
mov
sub
loope
dec
mov
ficompl
xchg
inc
test
roll
stos
jo
fsubrl
jb
cmpsb
sbbb
mov
ja
inc
fisubl
sbb
iret
sub
and
or
xchg
ljmp
lret
mov
loope
lret
jns
mov
fs
or
or
out
sarb
ljmp
test
shrb
arpl
inc
and
les
inc
ljmp
call
loope
mov
out
iret
movsl
mov
aad
jb
std
outsl
cmp
imul
scas
sub
dec
or
pop
ficoml
in
jle
lcall
lahf
fadds
add
add
add
inc
aad
jns
inc
xchg
addr16
jne
ds
mov
xor
out
xchg
fldt
addl
cmp
inc
dec
push
aaa
aas
jp
pop
inc
sub
dec
push
cmp
mov
enter
out
leave
and
and
aaa
rolb
loop
mov
cltd
sub
call
xchg
dec
iret
jl
push
push
fstpt
orb
test
ret
jge
shr
out
insb
pop
fld
call
inc
fdivs
push
cmp
sub
psrlw
fnsave
leave
rcll
push
scas
clc
xor
repz
push
jmp
push
inc
push
push
repnz
pop
jns
xor
mov
std
int3
shll
mov
jbe
out
xchg
mov
adc
pop
movhps
imul
into
mov
sahf
add
add
mov
push
int3
xchg
es
add
add
mov
call
fcoml
pusha
into
push
mov
mov
sub
sbb
mov
leave
js
xchg
mov
push
out
lods
in
out
jne
js
push
cmp
adc
mov
push
dec
fs
xor
xchg
repz
push
aaa
inc
lahf
pushf
xchg
dec
and
fildll
ljmp
in
notb
loop
pop
loop
sub
sahf
inc
pop
lods
dec
push
das
mov
mov
xchg
insl
sub
mov
leave
sub
aaa
outsb
aad
add
int3
insb
mov
jge
int
xchg
cwtl
mov
js
push
das
sbb
outsb
sub
add
sbbl
sarb
arpl
test
mov
push
xchg
test
push
and
sti
push
mov
and
add
mov
roll
in
mov
fiaddl
add
add
add
xchg
add
data16
clc
cmp
imul
loope
and
xor
int3
jno
xchg
leave
adcl
int3
mov
jb
or
popa
addb
ds
adc
xor
inc
rcrl
and
nop
pop
call
cld
pop
pop
sub
cmpsl
fwait
or
jo
sub
mov
das
mov
pop
sbb
loope
pop
clc
stos
jecxz
xchg
cmpsl
sbb
or
repnz
dec
push
jecxz
push
jb
sbb
push
rcrb
mov
movsb
cmp
inc
cmp
imul
and
jnp
or
shll
mov
jne
xor
xchg
je
inc
pusha
xchg
loopne
inc
pop
leave
cwtl
mov
push
xor
or
in
lcall
mov
or
imul
aaa
outsl
sbb
xchg
sub
mov
mov
add
pop
jae
or
pop
dec
or
int3
pop
and
add
add
cwtl
repnz
sub
dec
xor
test
cld
in
mov
dec
cmp
push
aam
fs
mov
jno
stos
push
icebp
mov
ljmp
lods
vfrczpd
inc
lods
jne
push
xchg
add
xchg
adc
ficoms
aam
movsb
addr16
cmc
or
push
add
dec
dec
and
or
insb
fmulp
sbb
hlt
inc
xor
mov
and
sub
or
mov
xchg
jp
ss
cmp
add
or
sahf
add
enter
mov
fisubl
es
out
dec
push
push
add
xor
cmc
into
lods
fcoms
sbb
jae
test
adc
or
jmp
jae
add
ljmp
nop
ss
fadds
call
cli
add
inc
xchg
fnstcw
mov
inc
adcl
add
jg
cmc
insl
cmc
out
lcall
enter
pop
repz
add
add
or
daa
repnz
xor
shr
lds
outsl
pop
stos
pop
mov
stos
loopne
ret
xchg
mov
push
in
leave
xchg
push
bound
xchg
aad
lea
jecxz
jbe
mov
mov
jns
jge
pop
rorb
pop
inc
out
mov
cvtps2pi
std
mov
sbbl
jle
mov
xor
movsl
leave
add
aad
xchg
push
dec
repnz
inc
seto
in
clc
movsb
ds
les
cli
jmp
lea
pop
mov
sahf
out
mov
xchg
pop
mov
pop
sub
jae
dec
adc
fwait
xchg
jp
sbb
jp
pop
sub
out
xchg
fldt
scas
fucomip
fidivl
loop
xchg
mov
shll
rclb
addl
push
dec
or
push
out
fildl
add
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
cld
lcall
and
jp
inc
loopne
add
xchg
pop
sub
adc
pop
aad
sarb
push
pop
test
mov
xchg
jbe
dec
mov
adc
fisttpll
out
in
and
hlt
pop
imul
imul
lret
inc
mov
jmp
fldcw
pop
scas
ret
mov
mov
mov
mov
ljmp
and
jnp
sub
scas
and
add
out
sbb
daa
in
adc
mov
xor
sub
insb
pop
test
push
int
jecxz
or
add
cmp
insb
adc
les
fdivp
outsb
push
test
adc
mov
call
push
inc
sbb
jge
add
cmp
imul
mov
ret
and
mov
aad
add
xchg
sbb
loopne
mov
je
lods
push
arpl
mov
pop
loopne
add
add
jle
and
scas
sti
jle
pop
push
pop
test
fiadds
add
add
add
lods
shr
push
lock
add
aad
in
daa
sbb
loope
pop
xor
fdivr
shl
leave
dec
cltd
lcall
xor
les
jno
add
push
inc
into
push
or
dec
add
test
sub
push
ret
stos
out
lea
adc
or
aaa
imul
lret
je
push
cltd
mov
fadd
pop
mov
mov
mov
or
loop
sbb
pop
and
repnz
inc
dec
cmc
xlat
clc
cmp
dec
imul
add
inc
and
mov
sbb
add
stos
and
cmpsl
push
leave
nop
adc
jle
or
test
add
push
or
jno
adc
das
cmp
dec
fs
call
mov
popl
inc
rorl
push
mov
movsb
movsb
pop
jno
fldt
inc
ret
cmp
add
add
negl
arpl
dec
notl
add
add
cltd
daa
pushf
incb
xchg
test
or
clc
loopne
xchg
call
insb
jbe
test
push
es
push
fbld
mov
push
lcall
pushf
inc
xchg
fcmovu
scas
out
jp
iret
xor
mull
mov
nop
dec
xchg
mov
or
xor
dec
iret
repz
mov
inc
jb
jl
dec
push
push
rcrl
ds
jge
jg
sbb
addb
orb
push
dec
shll
lock
fisttpll
xor
sti
fimull
lret
push
jbe
stos
imul
in
rcrl
inc
scas
sbb
cltd
push
testl
mov
sub
mov
loopne
sti
sbb
jnp
push
inc
outsl
sub
mov
je
pop
mov
outsl
cld
jae
pop
add
dec
mov
dec
xchg
mov
adc
fxch
mov
add
add
push
jl
jle
insb
out
adc
mov
add
add
add
push
ret
adc
xor
rcrl
lock
mov
inc
jl
jno
jo
je
pop
sub
stos
scas
insl
adc
inc
xor
enter
iret
fdivrl
pop
clc
lret
lods
in
mov
pusha
popa
loopne
dec
bound
std
ljmp
cmp
inc
es
loop
cmpsl
add
sbb
ds
pop
sbb
testl
jl
in
loope
mov
xchg
shll
stos
jno
in
in
cmc
mov
xchg
dec
je
add
and
fstpl
stos
and
and
out
add
daa
jno,pn
push
lock
xor
ds
mov
mov
lcall
pop
sub
iret
ret
dec
arpl
jnp
test
mov
neg
sub
jg
mov
inc
lods
test
daa
addr16
ret
sub
sbb
rcrl
sub
jmp
sub
mov
adc
in
xor
adc
loopew
add
add
add
cwtl
dec
push
in
lret
les
nop
addb
scas
aam
dec
call
es
add
mov
mov
add
pop
xchg
or
and
test
push
inc
jl
es
and
xchg
mov
adcl
movsl
jle
test
movsl
mov
rcr
mov
gs
push
cmp
enter
mov
vmovaps
pusha
jno
mov
scas
and
jg
jl
sub
jp
mov
sub
ja
lcall
sub
std
lcall
adc
push
stc
sbb
push
mov
adc
xchg
jne
scas
inc
adc
lret
test
ret
pop
mov
push
jmp
mov
movsb
mov
mov
push
jg
int
repnz
xchg
dec
and
stos
rorb
push
loope
in
fistps
push
xlat
xchg
add
add
add
data16
jne
mov
lcall
add
add
add
movsb
shl
repz
and
mov
sar
mov
sub
push
push
dec
adc
data16
mov
lods
and
mov
sar
dec
cmp
sub
xor
cmp
aam
mov
push
xlat
mov
shrl
jno
or
repz
mov
dec
mov
xchg
shll
loope
stos
ljmp
dec
in
lcall
std
jno
jmp
pop
jns
ljmp
pop
sahf
repnz
shr
xchg
mov
mov
sbb
push
test
sub
out
addr16
enter
xchg
add
js
repz
jbe
push
or
push
test
dec
push
insl
xchg
sti
int
insb
cmpsb
cmp
fwait
lds
insl
gs
repz
movsl
pop
pusha
mov
je
sub
cld
jns
sti
dec
push
pop
ficomps
xor
add
add
add
jnp
sti
xchg
lahf
mov
in
xchg
add
add
add
dec
fstpl
aad
insb
frstor
fbstp
ss
xor
add
adc
mov
lcall
sub
sbb
std
repnz
sub
mov
pop
push
addl
stos
inc
lcall
lock
shlb
neg
sbb
jge
push
xor
pop
js
clc
jb
push
add
lea
inc
je
pop
pop
inc
pop
bound
test
pusha
jl
jb
sbb
push
test
scas
and
sbb
cmp
cmp
push
sbb
xor
insb
roll
ret
pop
dec
idivl
or
pop
jnp
push
jecxz
das
dec
loope
sub
data16
adc
inc
shlb
cmp
dec
mov
pop
sub
push
stos
cld
xchg
jmp
shll
adc
cmpsl
and
mov
outsl
dec
rep
and
insb
jge
pop
jl
jge
stos
pop
addr16
and
add
add
pop
sarl
mov
in
in
add
add
add
ret
pushf
xor
ret
sbb
or
mov
daa
adc
mov
sti
fs
push
stc
mov
sub
lahf
sbb
adc
mov
cmpsb
imul
nop
or
movsl
test
test
les
out
imul
push
add
sub
jns
shlb
mov
push
cmp
cmp
mov
push
addr16
or
xchg
and
pop
leave
loop
loopne
inc
les
dec
or
xor
mov
mov
cmp
push
fidivl
loop
loopne
dec
mov
in
jg
push
jle
test
scas
pop
adc
jns
fcoms
rcll
xchg
shlb
cld
out
repnz
dec
push
andb
insl
lock
std
repz
adc
mulb
add
add
add
xor
adc
cmp
scas
outsl
xlat
and
and
es
push
aaa
cmp
xchg
fildll
pushf
loope
cmp
repnz
cmp
add
test
xchg
lods
add
subb
fcomip
movsl
stos
sbb
insb
mov
mov
mov
scas
faddl
iret
shrl
inc
test
add
pushl
shrl
je
mov
mov
adc
sub
xchg
int3
push
mov
push
and
cltd
lds
cs
mov
dec
mov
test
pop
repnz
std
std
pop
fwait
into
sub
ss
iret
sahf
inc
and
pop
mov
push
adc
mov
mov
and
mov
cmc
test
mov
mov
mov
add
xchg
add
out
das
test
test
push
les
adc
dec
in
sub
cmp
arpl
je
sub
addr16
add
add
add
xchg
push
cmp
inc
push
fldl
mov
mov
nop
mov
adc
jecxz
stos
cld
mov
and
lock
jb
cld
sub
dec
push
jecxz
lods
out
dec
icebp
ret
out
mov
loop,pn
or
mov
aad
push
add
xor
icebp
pop
js
xchg
rcrb
add
out
lods
inc
ds
mov
std
pop
sub
inc
push
jp
push
push
enter
cmp
inc
dec
mov
nop
and
negl
call
push
add
pop
xchg
adc
mov
icebp
jmp
xchg
xor
imul
xlat
cmc
insb
xchg
das
nop
aaa
cmpsb
add
push
mov
jle
andl
mov
adc
pop
sub
push
aad
xchg
ss
cli
loop
mov
aas
ds
or
dec
lret
pop
insl
lcall
mov
inc
sub
adc
add
add
add
mov
aaa
inc
pop
pop
lods
test
xchg
jb
cmpsl
jb
imul
out
mov
dec
out
add
add
and
xor
fstpt
or
cmpsl
stos
fcmovnbe
xchg
push
loope
xchg
mov
inc
pop
xchg
pusha
mov
sbb
rcr
sti
mov
mov
dec
mov
inc
scas
xchg
lods
cmc
cmp
bound
test
fists
jno,pt
in
nop
stos
into
and
cmp
mov
mov
jno
xor
daa
into
fisttpl
and
cmc
cmp
cmc
or
popa
jnp
rcll
insb
fs
add
push
mov
cmp
xchg
mov
sbb
mov
imul
add
cmpsb
inc
test
hlt
xchg
imul
lds
in
lret
sar
adcb
push
mov
cmc
xchg
add
add
xchg
in
mov
incl
rcll
in
inc
addr16
add
les
cli
push
scas
lcall
mov
mov
push
sarl
test
jg
pop
mov
add
and
das
and
cmp
pop
push
xchg
add
fs
xchg
fsubrs
aas
pop
ret
fisttpll
stos
daa
xchg
ret
sbb
popaw
jge
dec
aad
ja
dec
int
mov
push
orl
andl
incl
in
cmpb
jmp
divl
int
sarb
imul
xor
pusha
fucomip
icebp
xchg
mov
in
inc
fwait
ljmp
out
jo
int
adc
fisubl
and
push
mov
jl
or
in
aaa
sar
clc
fdivrs
jmp
inc
jle
fcmovu
mov
adc
xchg
mov
stos
or
flds
sbb
inc
mov
in
negl
sub
movsb
insb
and
daa
addr16
add
ret
sbb
popa
push
scas
testl
xchg
out
negb
jp
mov
in
xchg
or
pushf
jbe
iret
out
insb
fsubrs
ja
clc
call
dec
adc
fcoms
push
shrb
jo
test
fdivl
jbe
nop
xchg
sbb
sbb
andl
adcb
add
call
inc
push
or
std
fistpll
and
incb
mov
xchg
aaa
repnz
jnp
imul
jae
and
xchg
jbe
pop
rcrl
mov
bound
aaa
movsl
frstor
xchg
aam
mov
lcall
hlt
mov
dec
jg
and
sbb
push
jnp
and
jmp
or
scas
jb
dec
std
fadds
push
dec
xlat
add
je
dec
leave
jge
cmp
lods
dec
lods
outsl
sub
or
ficoms
add
add
mov
stc
dec
push
fdivrl
loop
sub
add
add
add
push
add
jnp
mov
jmp
nop
lods
jb
in
shrb
aad
lods
cmp
int
push
pop
fmulp
outsl
cmp
nop
scas
sbb
push
sbb
cmc
mov
push
out
mov
out
push
push
sbb
dec
adc
push
adcl
outsb
jnp
inc
mov
leave
mov
or
cltd
insl
clc
xor
sub
pop
imul
inc
sub
sub
add
cmpsb
das
aaa
xchg
sahf
lds
or
mov
adc
mov
xor
shll
push
push
sub
dec
push
comiss
fidivrl
pcmpgtd
mov
sti
aad
imul
xor
dec
out
mov
sar
jnp
test
jb
mov
push
xchg
lahf
pop
push
loop,pt
test
mov
lcall
rcr
lock
cli
pop
cmp
mov
push
push
push
mov
jne
jmp
add
add
add
inc
test
out
sbb
push
sub
gs
push
adc
sub
sub
xchg
scas
mov
or
mov
int3
icebp
xchg
mov
push
mov
aas
in
inc
outsl
addb
int3
nop
ss
clc
add
js
in
push
lods
xchg
dec
mov
lock
lahf
inc
sub
out
jl
popa
mov
out
sub
sub
mov
cmp
push
into
in
jl
push
jmp
bound
sahf
mov
sbb
mov
mov
fdivs
test
inc
jne
imul
sbb
outsl
lods
adc
sbb
mov
lahf
adc
ret
test
xchg
repz
xchg
mov
xor
pusha
popa
clc
or
insl
in
dec
inc
dec
pop
lea
jmp
jbe
hlt
gs
jge
push
mov
cmc
insl
shll
xor
adc
out
repnz
add
pop
lcall
les
push
xlat
popf
addr16
add
add
add
sahf
leave
scas
or
push
inc
push
into
enter
cwtl
icebp
sbb
loop
push
add
xchg
mov
stos
adc
cmp
add
pushf
rolb
lods
mov
in
dec
in
hlt
mov
add
xor
bound
pop
pushf
mov
dec
rorl
mov
mov
loop
fidivl
dec
push
sbb
ja
jg
or
inc
jmp
mov
cmpsb
lret
pushl
or
xor
test
movsl
adc
sub
inc
and
xor
add
ljmp
sub
ss
js
mov
add
mov
or
out
outsl
mov
shl
jle
add
pop
insb
testb
xchg
popa
pop
and
or
pop
xor
mov
les
cwtl
daa
pop
shl
dec
inc
ss
sahf
jnp
into
stc
cmp
dec
and
movsb
test
jp
mov
add
add
mov
push
decl
jecxz
or
addr16
add
add
add
lahf
sbb
in
xchg
mov
rclb
popa
pop
imul
sub
mov
cmp
inc
sbb
repnz
and
adc
cmpsl
xchg
loopne
clc
sub
test
jae
jmp
movsb
movsb
push
mov
cmp
in
xor
test
jnp
adc
call
pop
mov
inc
test
fisttps
adc
adc
fildll
mov
jge
jb
or
pop
push
lock
adc
and
fnstsw
js
cltd
jmp
adc
jno
out
pop
fcomps
pop
dec
repz
enter
int
std
add
pop
es
out
mov
into
inc
add
or
imul
cli
repz
in
cmc
pushf
insb
cmp
push
pop
fucomp
shll
leave
rorl
out
or
outsb
les
pusha
inc
insb
sbb
call
sub
rcrb
xchg
les
add
in
add
inc
outsb
and
cmp
sti
fsubp
inc
push
sub
fsubs
add
add
add
push
and
xor
xor
aam
fmuls
and
data16
xor
stos
and
mov
add
xor
jl
inc
inc
insl
xor
jge
pop
push
fidivrs
xchg
je
aam
xchg
loop
push
sub
inc
push
mov
jp
pop
stos
sbb
push
xor
xcrypt-cfb
cmpsl
sub
jbe
cmp
sbb
cmp
mov
enter
mov
dec
jge
mov
vmulsd
aam
inc
lock
rcll
xchg
dec
fnstenv
enter
data16
pop
xchg
clc
aad
fs
fcmovnb
into
imul
push
outsb
in
jge
fisubl
out
mov
xor
xorb
arpl
sub
add
flds
out
push
fnstcw
into
negb
mov
xor
data16
push
paddq
movsl
fsubrs
xchg
and
and
mov
lcall
out
add
add
add
gs
pop
int
test
sub
xchg
test
and
aad
sub
inc
mov
push
ficoml
xchg
adc
incl
push
sbb
inc
mov
mov
mov
cmpsb
outsb
or
and
adcb
sub
mov
gs
push
ffree
mov
ja
adc
push
cld
imul
cmpsl
bound
dec
pop
lods
jmp
pop
inc
or
xchg
out
bound
fdiv
mov
ja
and
test
mov
sub
movsb
add
sub
xchg
sbb
dec
sub
add
rclb
out
mov
cmp
fidivrl
pop
leave
pop
cmpsl
bnd
repz
sub
jb
stos
std
xchg
leave
push
fstps
sbbb
mov
aad
or
das
mov
repz
cld
mov
repz
ror
lock
jnp
xor
xchg
sub
lock
add
add
pop
inc
rorb
cltd
out
mov
pop
aas
repnz
adc
xor
out
aam
add
add
mov
xor
push
adc
repnz
mov
inc
jg
sub
jnp
xchg
jp
arpl
mov
sub
daa
cmp
jae
push
push
xchg
fs
sahf
into
gs
sub
jl
sub
push
mov
xor
pusha
sbb
mov
in
ror
cmp
fwait
sbb
mov
call
adc
push
cld
or
jle
add
cmc
mov
add
bound
js
addb
jle
jmp
or
mov
popl
aam
cmp
sbb
nop
jns
mov
addr16
ljmp
rorb
loope
or
scas
mov
scas
subl
mov
add
add
add
repz
fisubs
js
adc
add
add
add
xchg
adc
mov
and
fidivrs
ret
push
iret
xchg
mov
xchg
repnz
push
out
sub
pop
mov
repnz
ss
fiadds
xchg
lret
lds
in
popa
jbe
push
push
es
dec
pop
mov
cli
mov
rcrb
inc
cmp
aas
mov
pop
push
push
mov
iret
xchg
or
imul
mov
aam
aam
mov
add
sbb
mov
lret
repz
pop
add
jmp
daa
ljmp
inc
aad
dec
mov
dec
out
test
ja
add
orb
push
sti
pop
fistpl
repz
and
cwtl
mov
in
push
pusha
aad
pushf
pop
cwtl
ror
ficomps
add
jge,pn
mov
sbb
push
add
add
out
sbb
push
jl
repnz
add
add
sbb
test
mov
negb
sbb
out
in
in
lahf
cmp
testb
push
in
in
and
jl
leave
or
fisubs
xchg
jmp
pop
shl
jb
dec
mov
mov
jae
loop
mov
push
xchg
nop
mov
mov
mov
data16
int
pop
push
push
push
sbb
test
test
or
push
add
in
jb
fidivrl
aam
push
adc
xor
mov
out
xor
mov
mov
into
mov
imul
adc
xor
das
std
push
jb
adc
mov
and
jnp
and
imul
mov
int
fidivl
push
test
cwtl
mov
mov
ret
sarb
push
lock
gs
xchg
jbe
jne
pushf
add
shrl
cmc
scas
sub
mov
repz
add
add
adc
xchg
mov
sbb
xchg
jl
inc
jmp
xchg
xchg
xchg
and
rolb
sbb
dec
lds
prefetch
cli
xchg
inc
cmp
jge
sbb
fimull
ds
filds
je
lods
cli
jnp
in
bound
out
mov
fnstenv
mov
jmp
xor
arpl
aad
ds
ret
fs
and
roll
mov
fwait
test
ret
jl
std
out
pushf
mov
call
inc
iret
mov
sbb
push
pop
addl
and
sub
add
mov
inc
scas
push
jmp
pop
loopne
xchg
xchg
pop
and
lcall
shlb
scas
out
es
loop
out
dec
pop
or
pop
popf
cwtl
pop
scas
icebp
adc
pop
in
dec
inc
pop
jecxz
pop
sub
andb
add
lret
pusha
rorb
cmpsb
mov
inc
fs
add
add
add
je
adc
popf
dec
inc
daa
and
mov
cmp
aam
je
lret
xor
movsl
shll
lcall
pop
lret
imul
jg
dec
ljmp
fisttpll
mov
cmpsl
lods
into
pop
rorl
add
dec
sbb
gs
loopne
paddw
sbb
and
in
pop
mov
fcom
imul
mov
pop
jne
jge
adcl
loope
jl
hlt
orl
mov
xchg
cwtl
mov
inc
loopne
mov
xor
rorb
jo
xor
das
sbb
shll
fs
loope
xchg
pop
aas
adc
mov
stc
inc
cmp
sub
mov
mov
sub
xor
lret
cmp
jns
and
jecxz
push
testl
xor
add
add
add
mov
xor
mov
adc
lret
popa
mov
icebp
sub
movsb
stos
mov
jg,pn
xchg
test
ja
sarb
cmp
xchg
dec
lret
jne
adc
xchg
loopne
cltd
dec
mov
xor
int
cmc
enter
mov
loop
jnp
ljmp
imul
loop
cmp
push
jns
popf
push
inc
xor
int3
mov
pop
or
dec
and
jmp
xor
push
bound
lds
fs
je
dec
pop
and
fnsave
xchg
pop
cmpl
hlt
cmpl
sbb
cmp
dec
mov
movsl
jb
and
adc
add
pop
mov
mov
in
xchg
sub
push
jae
add
jbe
aaa
lods
mov
pop
movsb
sub
data16
clc
mov
add
add
xchg
mov
mov
pop
das
xor
testb
add
add
lods
push
fmul
outsb
lds
rclb
dec
pop
add
jb
jbe
rcrl
pop
fmul
loop
std
mov
pushf
jge
sub
test
sub
cli
cmp
sub
mov
test
test
xchg
lods
inc
insb
testl
shlb
jle
cmp
popa
rcll
xor
mov
pop
orl
int3
cmp
ds
popf
out
outsl
sbb
adc
cmc
inc
lods
inc
imul
and
add
lcall
add
shlb
dec
lret
jmp
mov
stc
ret
not
in
mov
loope
das
mov
hlt
flds
hlt
mov
lcall
out
sbbb
out
inc
mov
lods
je
mov
lea
out
jno
mov
cmp
pop
or
gs
jl
cmp
gs
ds
mov
fucomi
xor
dec
xchg
add
add
add
or
pop
pushf
push
clc
enter
fnstsw
lret
jmp
push
cmp
cmp
in
into
daa
jg
or
adc
xchg
push
push
addr16
negl
jbe
or
mov
xlat
rorb
and
inc
dec
out
pop
int
jo
cmp
pop
testb
jecxz
arpl
sbb
xor
dec
xor
add
xchg
push
bound
xchg
pop
push
data16
mov
fmul
xchg
decb
int3
inc
pop
mov
jns
xchg
popa
mov
pop
sbb
cmp
jle
push
inc
lea
pop
xor
in
cli
push
scas
mov
and
sbb
pop
or
loope
jns
std
push
and
or
add
jecxz
scas
sub
arpl
arpl
ffree
ret
hlt
ja
dec
cmp
pop
daa
or
nop
jno
scas
xchg
fbstp
fstps
add
jbe
push
inc
pop
jns
aas
loopne
sub
aam
addr16
add
add
add
sbb
dec
ss
sbb
add
clc
cmp
mov
push
lret
icebp
in
rol
fwait
and
jno
jmp
repnz
pushf
repz
mov
mov
les
pop
add
or
jns
hlt
je
dec
in
js
cmp
aam
cli
inc
sti
xor
arpl
add
test
mov
test
pop
jnp
pop
leave
fwait
loop
lahf
arpl
xchg
cmpsl
dec
clc
xor
shlb
xchg
jge
add
daa
mov
push
jb
insl
fwait
jno
push
cmpsl
adc
or
mov
bound
enter
push
js
dec
sahf
mov
xorl
jo
dec
push
cmp
dec
imul
lcall
xor
in
mov
inc
cmpsl
insl
mov
pop
push
rorb
imulb
push
xchg
pop
cmp
loopne
test
add
add
jnp
mov
dec
inc
pusha
adc
add
add
add
out
scas
adcl
ret
insb
mov
pop
push
aas
xchg
lock
sub
push
pushf
dec
xor
punpckhbw
pushf
aad
jg
mov
insl
in
mov
or
pusha
or
fsts
outsb
push
ficoml
push
mov
lret
lock
push
mov
dec
and
jno
pop
jle
add
jns
push
lock
inc
cmp
mov
inc
outsl
jmp
out
cmp
clc
in
or
test
adc
test
sub
jmp
pop
push
add
aam
xchg
lods
mov
jp
mov
mov
adc
mov
fists
pop
lret
stc
stc
scas
jb
mov
pushf
push
fdiv
jmp
fcmovnu
pop
shlb
cmp
jns
out
in
cs
xchg
cmp
roll
push
daa
pushf
add
sub
push
imul
gs
cli
add
add
add
lret
into
loope
fucompp
mov
cmp
icebp
fwait
adc
xor
shrb
fs
aas
outsb
pop
out
cmp
dec
mov
dec
dec
int
sub
xor
ss
gs
jp
pop
push
mov
jle
int3
cmpsl
and
mov
jp
pop
jno
out
mov
jns
das
sbb
cmp
sbb
lods
outsl
cmpsb
int3
push
xchg
fwait
in
sub
jg
push
xchg
mov
add
popa
decl
pushf
ljmp
dec
ja
cmp
iret
sub
dec
mov
nop
out
or
inc
sbb
hlt
pop
dec
fcomp
test
add
cmpsb
sbb
pop
push
sub
lock
and
insb
bound
push
sbb
jns
mov
shr
pusha
addr16
inc
xor
mov
mov
jg
and
ss
loop
loope
call
pop
sbb
ret
mov
imul
mov
xchg
aaa
insl
enter
sub
xchg
mov
idivl
xor
sti
add
add
add
pop
adc
cmp
testb
jb
ja
hlt
push
push
cmpsb
in
mov
lods
mov
push
jnp
loopne
sahf
out
mov
lahf
rcrl
jle
xchg
movsb
xchg
js
dec
add
inc
cmp
pop
test
sbb
lods
in
enter
lcall
int
dec
mov
adcl
mov
movsl
inc
sti
shll
jp
xor
icebp
mov
xchg
fistl
dec
mov
and
adcl
dec
and
add
pop
in
dec
push
cmp
and
mov
cmp
arpl
insl
jae
test
js
sbb
lahf
shrb
cmp
loop
cli
mov
fnstenv
mov
sbb
inc
cmp
ja
mov
and
insb
fcmovb
stos
sti
fcmovnbe
xchg
testb
xor
fidivl
inc
jb
jns
inc
mov
sarb
xlat
aad
lea
sbb
pop
in
cmp
fistpll
add
mov
ficoml
add
mov
add
add
sbb
cmp
or
jne
orl
push
bound
xor
pushf
ret
cmpsb
sbb
or
mov
pusha
mov
mov
xchg
sub
fldcw
enter
mov
inc
cmp
adc
insl
adcb
xor
int
mov
xchg
or
add
cmp
daa
mov
push
jo
dec
loope
xor
cmpsl
sbb
arpl
call
push
test
cltd
and
loope
pushl
repnz
sarb
sub
sbb
jbe
fcmovb
js
gs
xor
icebp
pop
pop
jno
lret
adc
and
sub
mov
pop
aam
fwait
mov
in
into
mov
sub
ficoml
orl
add
xchg
idivb
scas
fidivrl
repz
xchg
jmp
imul
lahf
repnz
mov
loop
addr16
add
add
add
xchg
cmp
xchg
clc
outsl
inc
push
or
xchg
into
xchg
stc
out
div
test
cli
push
popa
lret
dec
out
push
arpl
pop
mov
sbbb
xor
insl
cmpsb
xor
cmp
lock
or
leave
jg
sahf
fstp
mov
inc
shr
and
fnstcw
movsb
and
and
and
rcl
imul
ljmp
into
pop
jbe
outsb
push
idiv
and
jae
xor
adcb
pushf
jns
cmp
std
pop
ret
xor
idivb
inc
adc
clc
inc
push
dec
adc
or
fs
imul
jmp
js
cltd
jns
inc
lcall
and
jmp
cmp
add
jnp
push
mov
jp
mov
in
mov
adc
aas
ja
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
dec
inc
and
incb
add
add
add
in
imul
jne
xchg
shl
dec
push
or
sub
adc
xchg
jp
mov
pop
in
xchg
sbb
jnp
iret
aaa
push
cmove
loopne
jl
mov
adc
out
cld
pop
mov
les
nop
cmc
mov
pop
sbb
hlt
pushf
loop
jmp
fadds
cli
push
mov
add
cmp
push
mov
sbb
popa
popf
adc
test
pusha
movb
les
fdivl
adc
sub
jp
leave
sbb
cmpsb
adc
fldcw
or
pushl
mov
aad
mov
push
sub
xchg
rol
fidivl
mov
jbe
adc
mov
outsl
mov
push
lods
das
scas
das
inc
clc
insl
xlat
push
and
pop
xor
add
lsl
pop
pop
andl
add
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
adc
sbb
mov
out
sbb
mov
in
or
add
inc
popa
inc
ljmp
dec
andb
test
sub
add
cmp
jge
imul
stos
ret
out
jg
dec
sti
inc
rclb
fwait
insl
push
in
mov
nop
lcall
clc
test
testb
aad
nop
cwtl
divl
mov
xchg
movsl
outsl
aam
push
in
add
xchg
add
lds
out
push
in
xor
pop
cs
push
sbbb
call
or
inc
mov
lods
sahf
cmp
fisubl
sub
bound
test
and
gs
stc
adc
add
hlt
xlat
pop
cmc
arpl
popa
in
mov
notb
movlps
mov
mov
jecxz
mov
lret
int
mov
nop
test
aam
int
aaa
das
aam
sbb
cmpsb
add
add
add
add
add
xor
xor
inc
inc
inc
add
addr16
mov
lods
pop
adc
jle
adc
mov
mov
pop
incb
push
mov
mov
into
fsts
mov
rclb
xchg
pop
push
and
in
jns
adc
mov
jge
cmpsb
fisubrs
call
mov
cmp
push
adc
xlat
int3
loop
in
xor
sahf
or
mov
hlt
loope
adc
aad
xor
sti
xchg
aaa
and
test
and
and
jbe
dec
lcall
outsb
in
xchg
push
or
jecxz
pmovmskb
lods
push
cmp
in
stos
push
fs
daa
jno
shrb
mov
outsl
jb
fldcw
pop
or
fcomp
cmpsb
loopne
cmp
dec
call
outsb
lret
dec
aad
inc
ret
push
jno
mov
cmp
inc
pop
arpl
addr16
sub
push
xor
add
add
add
insb
lcall
outsb
mov
stos
xchg
or
jmp
push
push
jbe
or
lea
pop
xor
test
and
inc
lret
repz
into
push
scas
pop
stc
adc
popf
cmp
leave
aam
lock
out
and
add
xor
cmp
mov
jecxz
test
sbb
mov
mov
adc
jmp
inc
adc
mov
outsl
cmp
ja
les
ss
daa
xchg
jp
mov
jge
pop
outsl
mov
push
pop
into
push
cmp
inc
mov
sub
adcl
hlt
aaa
push
or
cwtl
or
and
cmp
xchg
inc
pop
es
xchg
addb
inc
and
inc
into
les
leave
xchg
jnp
popf
sti
jge
sub
mov
jge
mov
pop
and
add
add
out
out
pushl
xchg
xor
dec
or
add
add
add
loopne
push
jnp
sbbb
mov
mov
fs
sbb
sahf
mov
addr16
sbb
outsb
xchg
jnp
sub
movsb
xchg
repnz
cmp
pop
lods
cmpsl
out
sti
cmp
jecxz
std
add
adc
jo
mov
xlat
pop
dec
adc
or
sti
mov
add
bound
lods
enter
mov
jnp
push
mov
mov
clc
call
pop
clc
insb
push
scas
leave
leave
stos
mov
add
push
repz
out
xor
ljmp
ja
adc
push
pop
xchg
loop
leave
pop
push
mov
dec
mov
add
mov
rorl
xchg
mov
xor
lahf
movsl
xor
or
xchg
out
jo
into
idivl
mov
pop
int
mov
addr16
or
pop
mov
jg
xchg
addr16
mov
add
test
push
scas
mov
cmp
add
add
add
daa
mov
decb
int
ret
fwait
pusha
mov
call
scas
push
nop
imull
inc
mov
orb
adc
testl
push
rcrl
inc
xchg
push
add
mov
inc
sbb
lods
adc
repnz
add
pop
or
shll
test
and
xor
mov
dec
sbb
fsubrs
cli
fistpll
add
ljmp
and
lahf
aaa
sub
pop
outsb
lcall
adc
mov
cmp
jbe
inc
aas
xchg
test
in
and
push
xor
das
aad
clc
xchg
hlt
inc
mov
cmp
and
adc
std
dec
jg
dec
in
lret
xchg
cltd
icebp
out
dec
inc
clc
data16
dec
and
push
aaa
push
adc
jae
mov
mov
movsb
cmp
push
aaa
xchg
and
movsl
mov
mov
mov
aaa
lock
add
add
add
xorb
pop
sub
cmc
dec
clc
fcoml
out
repnz
das
ja
add
sarl
gs
add
adc
sar
aaa
movsb
xchg
mov
ss
pop
movsl
out
push
js
push
das
sbb
sbb
and
lock
fld
std
imul
in
or
iret
leave
inc
or
nop
sub
lock
cwtl
lock
push
in
mov
clc
pop
aas
dec
dec
jb
cmp
and
xchg
fnstcw
outsb
jns
mov
or
in
pop
mov
gs
insl
or
fs
jl
cmp
or
add
mov
fwait
adc
sbb
jo
testb
or
repnz
bound
cmpsb
movsb
in
cmp
mov
fdivrp
loopne
jb
movsb
repnz
jge
pop
in
or
jbe
jno
bound
call
fnstsw
inc
mov
lcall
cmp
add
add
mov
push
jg
mov
icebp
push
dec
addr16
add
inc
test
xor
mov
jns
cmp
pop
fildl
std
jge
mov
push
int3
sahf
stos
dec
lea
adc
or
push
in
mov
lret
jbe
mov
dec
pop
xor
imul
and
mov
mov
ret
mov
cmp
pop
fistpl
aas
xorb
notl
cmpsb
addb
shrb
bound
pop
cs
mov
cmp
pop
lods
mov
cmp
filds
nop
dec
xchg
mov
orb
dec
rcll
addr16
fsubrl
push
subl
jecxz
mov
lahf
and
cli
push
lods
pop
xchg
and
adc
addr16
clc
je
sahf
push
mov
jmp
int3
mov
xchg
jmp
fstp
push
in
dec
push
and
xor
sbb
or
lods
repnz
rorb
pop
cwtl
fstpl
xor
and
roll
inc
stc
mov
mov
lods
imul
icebp
cmc
insb
loopne
push
add
add
add
mov
sbb
leave
sahf
sar
notb
mov
xor
je
outsl
cs
rcl
movsl
ret
jecxz
sbb
dec
bound
inc
xorb
xchg
or
sbb
ljmp
psubusb
fs
sbb
add
jge
test
std
cmpsl
cli
push
mov
adc
xlat
sub
mov
lock
sbb
outsl
lret
push
inc
xchg
add
in
fdivrl
nop
mov
test
pop
pop
mov
add
jae
dec
int3
cmpsb
mov
or
pop
imul
lods
jo
repz
adc
mov
adc
inc
in
mov
mov
jb
sub
push
fisubs
sub
in
jb
fmuls
popa
cld
in
icebp
sub
add
xchg
ss
xor
call
xor
or
jecxz
movsb
cmpl
add
mov
cmp
cmp
jo
addr16
add
add
add
jecxz
sbb
repnz
cmp
shll
negb
xchg
sbb
lea
ret
jne
test
xchg
push
jecxz
frstor
jle
add
xchg
cmpsl
dec
mov
sti
push
add
jecxz
addr16
or
or
pop
mov
mov
pop
scas
jno
in
lea
mov
and
daa
in
pop
sbb
iret
nop
dec
test
dec
pop
and
clc
mov
jns
push
sub
mov
movsl
enter
cld
leave
sub
push
addr16
jo
and
ss
aam
aas
or
repnz
inc
fsts
iret
mov
fsubl
cs
rclb
jecxz
jg
jnp
lods
cmpsl
mov
mov
fidivrl
mov
mov
pcmpeqb
das
xchg
push
in
rcrl
sub
in
imul
push
inc
add
add
xchg
enter
push
fbld
call
add
add
add
fimuls
ss
mov
sbb
jle
mov
inc
push
loope
xor
dec
in
mov
lahf
xlat
mov
mov
cmpsl
jnp
add
push
test
cmpsl
inc
mov
add
out
iret
add
mov
stos
adc
popa
jecxz
loopne
push
jle
push
addb
js
lods
push
aaa
pusha
cmp
or
outsl
stos
out
push
pop
outsb
pop
aam
jno
mov
loope
pop
adc
push
sti
fnstenvs
add
pop
insl
mov
add
add
jne
popf
hlt
icebp
xor
xor
sub
adc
inc
shll
adc
push
call
jecxz
add
sbb
in
push
orb
popa
push
push
mov
sbb
subb
and
iret
mov
vpunpcklbw
test
addr16
lcall
in
sub
add
add
mov
into
fwait
add
mov
into
or
add
add
add
mov
cmp
dec
mov
jle
stos
fwait
out
lcall
or
sarb
mov
sub
push
lea
sub
adc
sbb
mov
das
repz
dec
ret
xchg
mov
push
stos
and
pop
in
xor
je
shrl
lock
loop
sbb
push
testb
mov
scas
es
sar
jp
jne
mov
dec
dec
dec
sbb
xor
sar
jae
mov
faddl
push
mov
aaa
sbb
lock
repnz
mov
mov
rclb
push
stc
adc
repz
xor
adc
mov
jno
sbb
rorb
fldenv
push
bound
fsts
orl
jecxz
call
xchg
pop
imul
jns
and
enter
push
jl
test
out
mov
pop
sarb
in
les
hlt
or
add
add
add
mov
mov
or
or
mov
ret
jge
pop
hlt
push
cmp
mov
test
or
out
fistl
and
mov
fdivrs
sbb
cmp
dec
sti
xchg
sub
xchg
sbb
mov
jmp
sbb
pop
outsl
dec
inc
fucomip
push
fimull
push
ja
loopne
pop
dec
and
xchg
cmc
push
loope
ljmp
pop
dec
scas
mov
das
out
add
adc
or
adc
pusha
inc
push
cmp
xchg
imul
clc
dec
loop
in
jg
int
or
adc
adc
xchg
inc
cmpsb
xor
das
add
xor
call
adc
js
cmpsl
ret
pop
fcoml
add
or
or
cld
push
mov
test
push
in
xor
and
negb
xchg
lahf
cmpl
jl
icebp
sbb
push
mov
jge
pop
sahf
jno
mov
into
mov
mov
lock
add
sti
inc
out
aas
mov
rolb
and
sbb
add
add
add
xchg
insb
out
jo
adc
mov
inc
stc
mov
mov
pop
and
jle
in
repnz
mov
fs
std
aaa
lds
xor
nop
cwtl
pop
je
add
push
int3
xchg
xchg
dec
mov
lahf
xchg
add
leave
iret
lret
mov
stc
mov
scas
mov
lret
les
lds
mov
pop
das
push
dec
clc
aaa
sbb
xchg
lcall
outsl
nop
loope
ret
jmp
push
in
and
cmc
mov
cmp
xor
das
ret
fs
cwtl
lods
popa
and
pop
stos
or
cmp
fadds
jle
dec
sub
jbe
shrl
repz
push
xchg
call
imul
or
adc
in
aam
mov
mov
call
orb
ljmp
lcall
add
push
bnd
dec
leave
and
or
add
add
add
mov
jo
adc
sub
movsb
adc
shlb
and
mov
ret
in
das
in
pop
icebp
inc
xchg
das
repz
shrb
jecxz
popf
push
rcl
or
jp
cltd
xchg
jo
sub
sub
dec
lret
pushf
loop
xor
push
mov
or
mov
jae
in
jecxz
ret
in
mov
lahf
pop
pop
inc
or
jno
sahf
mov
mov
pop
out
cmpsb
and
insb
lret
jle
jno
xor
imul
nop
inc
and
mov
insl
xchg
das
xchg
add
xchg
mov
adc
ret
fsubs
cmp
add
adc
add
out
mov
mov
push
adc
add
scas
mov
pop
icebp
icebp
fdivs
sub
mov
into
mov
fadds
test
pop
lret
sbb
stc
adc
jecxz
aaa
xchg
incl
add
add
in
out
ja
filds
or
add
add
add
sbb
loop
push
add
push
test
movsl
jbe
addr16
jge
jne
mov
ja
dec
sbb
mov
mov
mov
or
mov
fimull
and
lahf
jle
cmpsb
lds
aas
adc
imul
pop
sbb
jmp
imul
adc
push
pop
xchg
nop
ret
mov
out
mov
out
enter
cli
and
xchg
mov
push
movsl
cwtl
scas
test
int
push
pop
lods
lcall
jmp
xchg
test
loopne
lret
push
jnp
aam
push
loop
mov
mov
sbb
mov
sub
into
sub
aam
gs
adc
mov
xchg
inc
pop
push
mov
add
leave
add
loope
dec
or
push
notb
data16
jecxz
push
jnp
pop
pop
push
jne
and
adc
push
dec
scas
test
in
inc
push
or
xchg
mov
add
add
add
nop
adc
mov
stos
push
pop
in
cmp
cmp
mov
not
idiv
cmp
sbb
out
rcrb
sbb
sub
cli
into
cwtl
adc
fmull
xchg
arpl
or
ret
in
xorl
out
mov
test
stc
cmp
add
jne
js
cmp
jg
adc
lods
pop
xchg
add
nop
sti
sbb
mov
sbb
test
and
xchg
xor
enter
inc
xchg
mov
mov
mov
sbb
ret
outsb
mov
cmp
pop
xchg
xchg
sti
dec
out
push
mov
push
mov
shll
adc
and
sbb
dec
mov
jno
fs
pop
sahf
cli
fwait
inc
cmpsl
lret
jbe
lea
ds
cmp
sahf
sub
leave
adc
add
mov
jg
neg
pop
daa
inc
push
dec
test
sgdtl
add
add
aaa
pop
jno
dec
mov
fwait
adc
mov
scas
jo
inc
xor
test
lahf
sub
lcallw
out
std
add
in
movsl
mov
cmpsl
inc
inc
dec
xchg
lods
mov
add
sarl
sub
push
notl
cmp
dec
in
inc
push
test
pop
push
push
adc
ficomps
inc
mov
jle
push
rorl
fidivs
int
daa
jp
scas
js
daa
jmp
xor
mov
inc
and
push
mov
scas
mov
mov
and
push
push
or
cmpsb
in
mov
inc
mov
arpl
out
mov
popa
aam
or
jg
ja
jo
push
nop
sti
aaa
push
mov
pop
js
or
test
cmpb
in
push
add
add
sti
jg
cmp
je
push
rolb
adc
add
add
add
and
push
aaa
xchg
pop
xor
push
dec
or
mov
push
add
rorb
fsubrp
xchg
adc
mov
push
mov
pop
adc
jae
dec
shlb
gs
cmp
out
mov
dec
testb
mov
push
or
pushf
sbb
xchg
imul
repz
inc
and
daa
test
jns
cmp
cmpsb
lea
inc
loop
sbb
sbb
push
fdivrp
je
jae
xorl
in
mov
in
xchg
mov
lcall
cmp
push
movsb
mov
andb
mov
lahf
rcl
push
jo
xchg
xor
and
push
mov
movsl
xchg
lods
pop
push
or
out
shl
lret
repnz
xchg
das
out
iret
mov
adc
or
mov
inc
sub
mov
add
jnp
fstp
fcompl
cld
fs
push
adc
add
add
add
xchg
add
mov
andl
inc
push
xor
xchg
xor
stos
or
xorl
add
lahf
xlat
mov
xor
test
mov
fistps
iret
das
jmp
adc
jl
cmp
int3
into
jns
or
aad
scas
sub
lock
cmpsb
es
sbb
push
xlat
mov
sbb
fsub
and
push
rcr
insb
and
cmpsl
push
imul
push
sub
lds
out
imul
or
adc
jo
or
subb
inc
mov
mov
pop
xchg
fisubs
imul
or
mov
scas
push
repz
jg
dec
mov
xchg
fwait
enter
stos
sahf
jno
jnp
sbb
and
fdivrl
jb
insb
mov
xorl
or
jmp
int
inc
popa
or
inc
movsb
mov
jno
std
outsl
mov
add
lret
adc
add
add
add
cmp
xchg
jle
mov
dec
lea
adcl
mov
negb
lock
xchg
and
fimull
stc
sti
mov
loope
in
dec
jmp
fisubl
add
nop
movsl
fadd
scas
icebp
mov
mov
out
inc
inc
pop
pop
loopne
and
sub
loope
add
mov
lret
pop
jnp
lods
clc
push
jo
into
xlat
repz
sarl
add
add
mov
mov
adc
test
das
pop
push
dec
pop
aas
mov
sbb
sbb
inc
cli
jo
adc
xor
push
loope
push
repnz
mov
cmp
fisubrs
or
addr16
sub
icebp
jge
jle
jp
cmpsl
les
fs
daa
scas
mov
jmp
jb
scas
std
mov
inc
lret
inc
push
xorb
sbb
pusha
aam
cmpb
or
sbbb
loope
jmp
fnsave
adc
add
add
add
clc
sbb
pop
jnp
das
pop
push
xor
scas
stos
and
sub
push
push
push
jl
sub
ljmp
pop
je
out
call
out
jo
push
or
into
add
js
mov
adc
movsb
mov
jge
cmc
mov
mov
mov
sbb
cmp
gs
add
scas
cs
xchg
add
stos
sub
ds
pop
mov
mov
out
sub
cmp
push
or
inc
mov
adc
iret
into
mov
aaa
mov
addb
cs
dec
cmpsb
aam
and
xchg
jno
cs
fildll
cmp
xchg
fisubs
sti
dec
call
adc
add
popa
cmpsb
cmp
int
xlat
aam
pop
mov
xor
adc
fistpl
sti
sbb
or
xor
xchg
lds
rcll
sbb
add
add
add
add
cmp
fbstp
jecxz
mov
es
repnz
je
scas
test
ja
adc
iret
mov
jno
fucomi
mov
inc
or
xchg
jmp
cmp
mov
pop
call
and
push
sbb
mov
jg
loope
aaa
add
test
xchg
jg
sbb
movsl
hlt
sub
sbb
dec
mov
dec
push
jnp
mov
mov
pop
adc
cltd
fbstp
and
cmp
cmp
mov
out
push
test
jl
leave
or
fs
shr
xor
mov
bound
adc
pop
adc
sbb
sub
push
std
rcl
xchg
xchg
cmp
dec
aad
inc
xchg
lcall
cmp
sub
lock
cltd
and
lods
or
ja
mov
packsswb
ss
xchg
xchg
jns
repz
add
dec
cli
inc
jg
int
xchg
lods
or
and
addr16
add
gs
mov
testb
jns,pn
inc
call
sub
pop
in
xchg
xchg
test
push
sbb
ficomps
aaa
mov
mov
adc
in
int3
jo
lahf
stos
ss
gs
lcall
xor
push
subb
mov
push
pop
mov
sbb
jnp
jne
dec
dec
cld
sbb
jbe
xchg
xor
hlt
imul
mov
ds
inc
adc
xor
pop
out
lods
aaa
daa
test
jecxz
mov
adc
mov
inc
int3
aad
and
icebp
or
aam
push
test
xor
push
sub
movsl
mov
les
loop
dec
jbe
inc
out
push
xchg
loop
lods
bound
mov
sub
sub
cli
jae
int3
insl
mov
sub
and
mov
add
add
lock
std
cmp
jle
fistpll
ss
add
add
add
add
gs
mov
popf
push
dec
push
in
sub
dec
popf
add
rcll
push
into
lahf
mov
mov
inc
xchg
push
push
fiadds
add
push
clc
test
enter
jecxz
popa
leave
pop
fwait
daa
fisubrl
hlt
testl
or
jae
popa
mov
jae
xor
insl
mov
stos
pop
lds
add
mov
sbb
dec
aad
pop
sbb
mov
jo
insb
subb
sbb
ret
sbb
jmp
pop
adc
push
mov
jbe
mov
cmp
sarb
stc
or
pop
test
jno
mov
mov
jbe
pop
repz
jns
xor
inc
out
xchg
jno
xlat
cmp
ss
je
cld
pop
roll
and
jmp
jae
mov
push
rcl
lret
inc
clc
fs
push
insl
cli
jg
push
mov
or
xchg
xchg
pop
lds
xlat
ficompl
inc
push
pop
popa
les
add
add
add
repz
repnz
shl
pop
sbb
aam
mov
fbstp
mov
iret
shrb
dec
xchg
jge
aam
sbb
add
stc
inc
loopne
dec
lods
inc
mov
imul
sahf
cmp
loopne
mov
jg
sub
lret
inc
mov
pop
popa
fimull
nop
dec
fdivl
daa
ret
fwait
lock
sarl
push
sbb
test
addr16
ds
inc
shl
in
push
lock
jbe
flds
mov
es
and
add
fwait
push
fst
jge
rcrl
jmp
dec
fwait
aaa
das
or
adc
cld
mov
insb
dec
testb
aaa
out
xor
and
leave
sub
jp
or
dec
aas
sbb
and
gs
mov
cmp
out
xchg
cvtps2pi
add
add
sub
iret
outsb
jmp
push
test
push
add
add
add
xor
ss
ret
push
cmpl
ds
ret
ds
in
out
pop
lret
mov
test
js
jp
aam
sub
pop
sbb
lock
mov
data16
and
and
adc
push
fnstcw
loope
and
iret
xchg
bound
clc
mov
decl
pop
inc
out
jo
outsl
outsb
out
out
mov
cmp
push
pop
leave
les
cmp
ficoml
addr16
jne
xchg
mov
ljmp
pop
sbb
mov
push
mov
push
shlb
xchg
test
mov
enter
faddp
mov
sub
cli
inc
sbb
push
test
scas
popa
pop
and
sbbb
xchg
int3
aad
ret
pop
xor
hlt
dec
mov
xor
fsubrl
xchg
pop
inc
sbb
std
sbb
stc
cld
or
mov
sbb
add
add
add
ficomps
call
arpl
pop
nop
xchg
xchg
cmp
and
mov
mov
cmp
pop
jo
mov
hlt
sub
icebp
lock
push
cwtl
das
fisttps
leave
and
xlat
xor
add
adc
shl
xor
sbb
push
inc
adc
add
rolb
scas
pop
fs
sub
inc
faddp
rol
in
mov
andl
outsb
lcall
pop
and
mov
mov
jne
xor
cmp
in
imul
jo
daa
lods
dec
stc
mov
testb
gs
pop
testb
jne
js
lods
add
out
test
jno
mov
push
lahf
adc
add
cld
inc
or
jnp
int3
imul
xor
mov
std
call
push
negl
adc
pop
xchg
cmpsb
or
add
add
add
pop
out
call
mov
and
jecxz
mov
pop
or
or
in
je
pop
scas
sub
dec
or
fistps
sub
cs
mov
inc
ds
and
icebp
insb
adc
xchg
std
rol
js
jo
fisttps
shlb
stos
push
ret
fsts
push
push
pop
inc
aas
xlat
pop
adc
sub
jg
xchg
ret
aaa
jbe
cmpsb
ljmp
hlt
xor
dec
pop
inc
adc
sub
push
mov
mov
imul
std
pushf
icebp
subl
decl
insl
aaa
jns
out
imul
aad
int3
xor
into
mov
outsb
mov
xor
xor
lret
out
int3
enter
jns
pushf
push
push
dec
push
leave
inc
adc
cld
mov
aas
ret
cmc
scas
in
jae
ljmp
fildl
inc
call
outsb
mov
dec
sbb
or
mov
dec
pushl
mov
dec
outsl
sbb
add
add
add
dec
or
or
xor
insb
jb
sub
rep
test
cltd
push
mov
xor
push
mov
ja
les
xor
cmp
test
dec
lret
pop
imul
ljmp
and
rcl
sub
clc
test
xchg
mov
imul
xor
scas
je
lds
aad
pop
adc
cld
xor
cmpsb
mov
clc
sbb
ljmp
fistpll
and
iret
mov
lea
int3
inc
mov
sti
xchg
imul
fcomip
popf
jbe
pop
scas
lds
xor
aam
xor
or
cmc
xor
fistpll
arpl
scas
lret
das
jbe,pn
fsubs
loop
clc
mov
pop
sahf
fs
ret
lds
int3
popl
mov
add
add
inc
ja
pop
aas
dec
push
pop
jno
sbb
add
add
add
and
ret
cmpsl
repz
aam
inc
cld
lret
adc
jo
dec
stos
pop
pop
jmp
inc
pop
rcrl
lret
and
loopne
push
push
sahf
cld
sub
movsb
in
xchg
out
into
mov
cmpsb
outsb
push
xchg
sbb
sub
jecxz
push
and
faddl
repz
test
and
jae
xor
mov
popa
fisubrl
repnz
jnp
inc
xchg
je
dec
icebp
ret
dec
out
adc
mov
jns
jl
stos
mov
mov
mov
aaa
out
mov
mov
pop
sbb
add
adc
std
out
xchg
aad
adc
sbb
scas
aad
addr16
sbb
lock
xor
and
addr16
sbb
jno
loopne
cmp
inc
add
sahf
insl
out
cmpl
je
ljmp
add
repz
jae
ja
div
mov
test
addr16
add
mov
jge
xor
repnz
inc
fcmove
lods
pop
fdivrl
in
cmp
dec
fstp
movsb
sahf
mov
out
mov
movsb
lcall
xchg
push
and
mov
pushf
xchg
je
inc
aaa
inc
pop
pusha
sahf
imul
adc
ljmp
cmp
mov
mov
cltd
fmuls
lds
sbb
sub
mov
sub
hlt
add
mov
fcoms
inc
jne
idivl
iret
jle
js
in
popf
cmpsb
inc
aad
loope
mov
and
test
adc
test
xchg
rorl
setnp
insl
xchg
lods
loopne
stc
lods
and
ret
fadds
push
movsl
shrb
lret
lcall
adc
lcall
hlt
rorl
add
push
pop
in
insl
inc
fsubs
xor
cli
std
jg
push
pushf
dec
cs
packuswb
add
add
add
push
lods
icebp
mov
push
jae
sbb
adc
xor
dec
and
lods
push
cmp
adc
inc
lahf
dec
sub
push
and
icebp
loop
lea
push
sub
aam
sub
push
or
adc
pop
mov
lret
and
adc
sub
daa
daa
icebp
xchg
outsb
mov
fidivrs
adc
enter
push
in
push
aas
dec
cmp
add
nop
mov
int
push
jge
dec
mov
leave
cmpsb
push
or
mov
cmp
add
rcll
or
movsl
movsb
and
call
inc
mov
mov
scas
nop
cmc
adc
cmp
sub
fmull
jbe
pop
inc
or
outsb
lea
sub
scas
imul
popf
psubsb
stos
jbe
xchg
arpl
sub
testl
incl
sbb
les
or
add
add
add
addr16
cmpb
lods
pop
mov
push
in
fcoms
add
jecxz
es
test
repz
mov
aas
aam
hlt
sahf
fidivrs
aad
mov
out
mov
jbe
pop
cmp
scas
jne
jno
mov
xchg
aad
jge
or
xchg
hlt
aam
test
inc
mov
or
mov
stc
lahf
adcb
loopne
sub
outsl
xor
aad
test
mov
push
popa
cld
push
dec
fdivrl
shlb
xor
fucom
push
rcrb
or
and
dec
test
or
call
inc
outsl
cld
out
push
xor
push
stos
cmp
pop
movsb
pop
adc
push
inc
pop
mov
jb
rcrl
test
push
lock
scas
fistpll
mov
das
xor
mov
inc
ljmp
daa
mov
xchg
repnz
xchg
arpl
add
add
es
jg
pop
or
xor
mov
and
add
add
add
or
pop
pusha
mov
xchg
aaa
lods
decb
push
sbb
cmp
imul
xlat
sahf
dec
ds
scas
mov
mov
mov
jl
xchg
xor
mov
aaa
or
int
lcall
adc
jb
cmp
cmp
pop
sub
add
out
pop
jl
into
fiadds
cmpsl
pop
jle
or
lahf
xchg
mov
cmpsb
fidivrs
mov
xlat
dec
cmp
nop
lahf
push
mov
rcll
xchg
xorl
push
or
mov
js
mov
mov
or
and
test
cmc
and
jp
sub
jb
call
dec
loope
jp
pop
mov
push
push
sub
push
repnz
pop
jbe
loope
repnz
int
cmp
mov
mov
rcr
push
pusha
push
clc
or
dec
push
cmp
and
add
add
add
pop
movsl
mov
or
or
push
divl
js
into
dec
jge
sub
sub
shll
daa
push
in
sub
test
dec
stos
stc
popa
js
divl
fs
jp
add
arpl
adc
frstor
cld
fldl
jns
add
imul
sub
stos
jge
int3
jb
sbb
pop
leave
jnp
sub
pop
fidivrl
insb
outsb
mov
xor
adc
xchg
loop
add
lcall
clc
xor
xor
pop
jo
data16
loope
outsl
setnp
lea
cmp
mov
shl
addl
adc
xchg
xor
std
mov
inc
jmp
call
enter
and
test
rorb
jb
into
inc
xor
sub
add
ss
inc
mov
mov
sub
xor
mov
insb
mov
add
add
stos
jl
jecxz
imul
nop
xchg
xlat
cmp
dec
or
jne
nop
int
pushf
inc
flds
add
push
push
pop
jno
cli
outsl
push
lds
jl
jle
imul
pop
cmp
into
mov
int
inc
sbb
js
xchg
mov
mov
xor
inc
add
into
daa
jbe
add
jne
mov
sbb
xchg
dec
iret
jns
cmpsl
sub
data16
inc
push
cmp
in
add
loopne
cmp
push
push
repnz
pop
popa
jle
int
pop
mov
fwait
cs
ror
sub
aaa
dec
pushl
fstpl
in
adc
scas
rorl
mov
int3
and
repnz
aaa
ja
push
push
out
sub
sbb
stos
popa
jl
fists
pop
push
lods
push
lods
xchg
movsb
push
in
mov
xchg
mov
push
dec
call
ficoms
stos
sbb
call
mov
and
add
add
add
negl
jmp
into
push
roll
fwait
mov
jmp
cmp
fisttps
cltd
das
push
dec
add
xor
and
in
xchg
cltd
sub
mov
icebp
stc
mov
mov
cmpsl
jnp
mov
cmp
sarb
inc
int
cli
imulb
mov
mov
ljmp
arpl
fcomps
push
int
inc
pop
nop
sbb
test
jo
and
push
mov
cmp
data16
mov
and
in
out
mov
stc
fmuls
std
or
test
xchg
out
adc
lahf
bound
xchg
test
pop
fwait
xchg
cmp
xlat
out
sbb
mov
push
mov
lahf
leave
sub
clc
cmp
mov
mov
xor
inc
sar
int3
ret
fcoml
pop
pcmpgtd
adc
sbb
push
push
pop
mov
xchg
outsb
mov
out
stos
jge
or
dec
adc
and
add
add
add
and
fucom
and
add
aas
push
ss
pop
mov
xchg
jle
xchg
daa
lods
mov
scas
ljmp
jae
ret
fdivrs
outsb
add
xor
fistl
sti
ret
cmp
pop
cmc
mov
mov
pop
pop
mov
cmc
shl
loope
lds
mov
roll
popf
loope
cld
mov
fs
xor
lret
cwtl
xor
insl
cli
xor
mov
js
push
daa
fmuls
adc
stos
hlt
mov
lods
and
int3
mov
jmp
imul
cld
jmp
adc
bound
sub
inc
and
test
or
mov
adc
xchg
mov
orl
imul
out
jge
js
push
loope
in
sbb
test
jbe
add
add
sbb
out
xchg
iret
push
aas
mov
add
addr16
add
jmp
scas
pusha
cli
subl
xor
mov
arpl
jnp
jbe
and
or
push
pop
lds
movsb
inc
inc
addr16
and
push
mov
push
push
sub
hlt
mov
mov
mov
cmpsb
imul
sub
shll
cmp
int3
cmc
cmpsl
mov
cmpsl
mov
mov
in
mov
cmp
je
mulb
movsb
inc
call
mov
fisubrs
iret
in
cmp
jno
mov
out
dec
aas
pop
xchg
xchg
sub
and
aad
xor
lcall
mov
lret
jmp
push
push
mov
dec
and
mov
cmp
outsb
jg
xchg
ret
adc
adc
cmpsb
xchg
and
xor
ftst
shrb
pusha
sub
sbb
addr16
sub
xor
xchg
sbb
add
add
add
in
add
cmp
out
loope
jns
lret
sbb
jo
add
add
add
subps
mov
dec
into
sbb
inc
fdivrs
pop
pop
jecxz
sub
mov
xor
je
gs
xchg
dec
jb
sub
scas
adc
sub
xor
aam
xchg
push
push
jb
pop
in
mov
add
daa
ljmp
fs
pop
pop
dec
push
mov
mov
ja
pop
xchg
sbb
mov
push
pop
aaa
and
dec
inc
xchg
fisubrs
cmp
or
es
sub
xchg
jo
dec
lods
fimuls
pop
int3
or
jecxz
loope
fwait
inc
insb
jns
outsl
shlb
lret
ret
jnp
xchg
adc
stc
cmp
sbb
pop
dec
aam
mov
pop
cmp
jnp
pusha
fwait
dec
mov
xorb
sub
clc
ljmp
lahf
lret
inc
test
add
test
sbb
sti
push
mov
sbb
sbb
add
add
les
or
sub
add
mov
xlat
sbb
or
mov
out
cmp
nop
movsb
mov
aam
sti
sbb
in
dec
in
xor
stc
mov
jns
mov
mov
test
ret
std
or
jg
pop
xchg
mov
pop
mov
cmp
sbb
shrb
cmp
and
xchg
roll
sbb
bound
mov
les
popa
pop
gs
js
in
rorl
xchg
jge
cmpsl
cld
ss
mov
inc
loope
insl
adc
pop
cmp
scas
mov
xchg
lret
dec
arpl
sub
imul
arpl
inc
stos
insl
push
cmc
push
pushf
call
shrl
jp
mov
data16
mov
scas
push
ljmp
push
cltd
stc
aam
push
sub
leave
jae
and
cs
add
add
jg
cld
ret
add
or
add
add
add
int3
xor
idivb
test
and
int
fmulp
and
cs
pop
inc
scas
jl
cltd
je
fwait
in
repz
sub
cmpsw
enter
mov
jmp
xchg
adc
sub
int
or
jl
arpl
jp
mov
adc
gs
insb
shlb
mov
lods
cld
jae
push
fimull
mov
lods
vmovdqa
scas
std
mov
test
pop
pop
out
movb
hlt
inc
mov
xlat
adc
jae
mov
mov
xchg
cmpsl
pop
adc
pushf
lret
or
mov
stos
inc
out
xor
jno
test
test
add
or
jne
movsl
and
sbb
mov
inc
add
cld
inc
shrb
push
cmc
test
pop
xlat
nop
push
out
xlat
in
iret
stc
enter
out
pop
xor
ret
mov
iret
mov
dec
aaa
hlt
test
add
add
movsb
xor
in
pusha
adc
stos
sub
fbld
add
adc
cmc
mov
cld
jle
adc
leave
dec
fcoml
mov
bound
fdivrp
movsb
and
int
add
jae
inc
jae
fcoms
jno
insb
or
popa
or
pop
push
jne
cwtl
in
sub
ficoms
aam
movsb
mov
movsb
jnp
hlt
pop
aas
sbb
pushf
call
sub
lret
jecxz
or
fcomps
sub
push
or
or
jmp
mov
test
clc
xchg
add
rorb
cmc
mov
adc
push
lods
sbbl
hlt
pushf
pop
jecxz
push
lret
ljmp
cs
rcl
mov
cmp
inc
dec
cltd
jl
das
popa
and
sarl
cmp
cmp
sbb
sub
adc
add
add
mov
jg
arpl
push
mov
add
add
add
xchg
jne
popa
inc
xchg
lret
data16
nop
ljmp
push
jg
adc
dec
iret
cmpb
outsl
sub
inc
and
and
inc
jno
pop
pop
cltd
jl
fmul
lock
xchg
xlat
pusha
scas
mov
fwait
loopne
das
aad
xchg
jno
jmp
jno
lcall
dec
push
and
sub
ret
ret
push
out
pop
lea
in
xchg
adc
imul
lods
test
lods
mov
pop
lods
jmp
and
sub
or
mov
xchg
test
fdivp
push
fistps
lods
jg
stc
mov
cmp
imul
jmp
inc
sbb
push
out
push
mov
pop
sub
gs
lcall
mov
aam
cld
pop
cmp
std
add
push
or
pop
popa
rcll
or
mov
ja
xor
add
add
xor
clc
cli
clc
sarb
sti
mov
sbb
sub
add
add
add
push
pushf
add
mov
mov
mov
scas
lods
std
mov
cmpl
dec
adc
cmpsl
push
shrb
dec
xor
aad
clc
push
aaa
fcompl
push
pop
or
call
lock
mov
scas
leave
pop
icebp
rolb
cmpsl
mov
xor
scas
mov
or
add
add
and
sahf
push
cmp
addr16
loopne
add
inc
mul
push
scas
cld
in
test
repz
mov
fs
mov
mull
jns
repz
fisubs
clc
clc
ljmp
mov
mov
popf
pop
fbld
fs
ljmp
xchg
pop
pushf
lret
jmp
insl
lods
mov
xor
dec
nop
jmp
out
mov
dec
dec
mov
loopne
adc
fidivrs
push
cmpl
mov
test
test
sahf
jbe
inc
push
jg
test
imul
mov
add
addr16
add
add
add
lret
dec
or
mov
nop
mov
adc
sub
sbb
and
repnz
mov
add
mov
icebp
lret
sub
cmp
jecxz
mov
or
xchg
push
test
dec
mov
xchg
sbb
imul
adc
int
mov
sbb
push
lods
cmp
scas
cmp
int
push
mov
cmpsl
scas
mov
mov
fs
dec
loop
scas
pop
jb
imull
jg
sti
push
decb
cltd
xchg
filds
jp
data16
adc
inc
push
xchg
adc
int
push
pop
mov
push
mov
mov
out
inc
ljmp
lods
sub
dec
cwtl
jb
push
cwtl
test
pop
out
mov
rolb
aaa
and
dec
inc
scas
dec
stos
ret
pushl
les
es
mov
cltd
xchg
cmpsl
fidivrs
lahf
mov
dec
pop
es
fs
es
data16
insb
daa
mov
lods
fdivrl
add
add
add
shll
outsb
out
scas
test
jo
sub
ss
shlb
push
popf
xor
mov
ret
push
cmpsl
xor
inc
xchg
dec
mov
in
sbb
js
hlt
icebp
inc
out
fs
dec
xor
xchg
icebp
lahf
xchg
aad
pop
pop
andps
pushf
fsubrp
mov
cmc
xchg
push
je
aam
sbb
push
fisttps
or
pop
and
aad
pop
adc
lods
dec
sbb
jnp
into
and
out
test
xlat
push
pop
jp
jo
mov
sbb
nop
xchg
fiaddl
test
lds
stos
lea
mov
js
adc
daa
mov
adc
add
lock
les
neg
pop
mov
enter
fwait
cmpsl
mov
mov
dec
dec
or
nop
jnp
loop
and
unpcklps
ljmp
dec
adc
or
pop
arpl
add
add
dec
mov
imul
or
add
add
add
sub
ds
ret
out
push
mov
and
push
mov
into
das
cmp
sbb
xor
cld
dec
cmpsl
pop
mov
xlat
fadds
arpl
adc
insl
andl
mov
jle
hlt
aas
aad
in
pushf
mov
scas
adc
sahf
push
scas
or
roll
test
lds
mov
jg
cld
jnp
pop
sbb
sub
mov
cli
inc
arpl
cwtl
mov
push
test
pop
je
or
je
mov
icebp
outsb
ja
fsubrs
xor
sbb
ret
lahf
dec
sbb
or
xor
jno
cmp
mov
mov
or
adc
push
or
jl
mov
test
mov
fprem
mov
xchg
mov
lds
add
fcmovne
testb
out
mov
addl
push
lcall
add
add
and
push
sti
cmpsl
enter
jecxz
addr16
add
add
add
xchg
mov
fstpl
push
sarb
push
imul
dec
push
icebp
pop
ja
imul
push
mov
push
inc
addr16
in
aam
pop
fimull
outsl
sub
and
mov
push
jecxz
mov
adc
mov
cmpsl
push
cmpsl
je
imull
js
adcl
clc
pop
addr16
dec
fiadds
loope
sub
lret
fsubp
nop
push
aaa
clc
ljmp
repz
sahf
test
cmp
and
pushf
sbb
in
mov
movsl
imul
sub
inc
mov
add
sbb
cmp
ret
fcoms
pop
clc
dec
int3
mov
push
jae
sbb
and
adc
push
mov
stos
and
pop
mov
movsl
call
lahf
adc
pop
xor
fdivrl
in
inc
pusha
mov
lds
sbb
lds
add
add
mov
std
mov
dec
push
cwtl
test
data16
add
add
add
cli
xchg
shrb
in
mov
popa
ret
inc
push
inc
push
or
pop
pop
mov
je
call
mov
sub
cmp
js
loopne
loopne
fxtract
shll
xor
jbe
out
and
inc
jbe
xor
movsl
call
xor
mov
adc
fs
push
pop
ret
mov
shl
cld
dec
sub
inc
xor
sarl
clc
stos
inc
lock
jle
push
repz
mov
insl
arpl
lcall
stc
mov
fucomp
test
pop
movsl
push
xlat
imul
sub
sbb
aaa
inc
add
movsl
sub
shlb
es
cmp
sbb
fmuls
or
jp
xchg
rclb
clc
mov
ja
add
adc
out
adc
cmp
inc
jbe
add
add
and
jecxz
and
lcall
add
add
add
jno
repz
add
adc
addl
in
adc
les
push
cmp
outsl
xchg
cmpsl
popf
orl
adc
popa
adc
mov
add
and
loop
sub
dec
push
and
test
mov
bound
jb
dec
cmpsl
mov
xchg
out
pop
loop
adc
int
clc
push
mov
imul
arpl
lret
jns
aaa
pop
and
int3
aaa
jo
sbb
ds
and
adc
xor
inc
cmp
fwait
mov
icebp
add
jns
mov
sbb
and
push
fcomip
mov
sub
movsb
pusha
fnstcw
pop
enter
pop
dec
sub
pop
mov
lods
jnp
fsubs
je
cli
imul
test
pop
clc
loopne
orb
push
cld
cld
pop
std
out
pushf
gs
loope
adc
jp
mov
mov
scas
jmp
js
sub
add
fiaddl
ret
ficomps
cmp
lahf
addr16
frstor
add
add
add
pop
cmpsb
dec
sub
aas
mov
mov
cltd
fwait
cltd
add
push
push
ds
das
jge
push
std
add
mov
mov
outsl
or
clc
out
popa
inc
imul
cld
xchg
or
jg
dec
subl
mov
scas
cmp
dec
call
mov
aam
sbb
pop
ljmp
adc
arpl
adc
jecxz
or
cmpsl
dec
bound
inc
add
jmp
push
cmp
out
adc
daa
adc
mov
cmp
int
push
sti
roll
test
pop
xchg
stc
push
stc
or
xchg
cmp
jbe,pn
adc
pushf
push
adc
aas
dec
test
or
mov
or
pop
in
mov
aad
or
cmp
or
add
lods
xor
mov
cmp
adc
add
add
add
xchg
dec
sub
sub
popf
loope
faddl
divl
dec
adc
jge
mov
push
mov
mov
inc
xchg
and
popa
pop
popa
push
lahf
and
xor
push
jbe
addl
mov
cmp
add
gs
sbb
or
sbb
sub
adc
add
adc
in
sbb
dec
push
jp
add
jg
fmull
fsubs
xchg
repz
push
jbe
out
mov
adc
lret
add
hlt
cli
lcall
cmpsl
es
xor
pop
xor
mov
rcrb
mov
jno
mov
sbb
adc
jp
pusha
adc
and
sbb
out
jo
cmp
push
mov
arpl
pcmpeqb
mov
outsb
std
movb
jge
jge
lock
mov
or
call
add
add
add
mov
ret
xor
jno
popf
aas
shll
push
repnz
xor
inc
sub
push
iret
or
rorl
jp
sbb
jo
xchg
sub
popf
lret
stos
sbb
lods
pop
and
cmp
push
and
mov
loopne
xor
sub
cmpsb
pop
pusha
mov
into
mov
cld
sbb
add
rolb
xor
sub
enter
addb
mov
icebp
ror
mov
mov
loop
lea
cmp
mov
pop
shrb
pop
adc
mov
sar
dec
mov
dec
clc
push
mov
mov
xchg
push
inc
movsb
or
mov
or
mov
and
std
decl
adc
cmp
pop
jge
repz
sub
inc
push
mov
dec
pop
bound
arpl
pop
adc
add
add
sti
pop
jge
neg
hlt
add
lahf
addr16
add
mov
jge
repz
ret
fwait
lcall
adc
fimuls
cmp
cmp
insl
push
dec
pop
cs
jns
mov
ret
out
iret
out
les
rorb
fistl
adc
xchg
test
repnz
or
add
adc
ret
pop
and
pop
sbb
andb
int3
mov
lcall
push
add
pop
fnstsw
pop
and
dec
aas
test
ficoms
inc
push
inc
adc
pop
jg
sti
or
add
push
push
fwait
cmp
call
mov
jecxz
mov
cmpsb
jecxz
cmpsl
pop
fldt
pop
lods
pushw
xor
shlb
fiadds
js
fs
out
loop
cmp
adc
push
call
test
ljmp
test
and
mov
incl
add
add
fsub
std
in
popf
in
stc
jmp
jecxz
outsl
andb
add
add
add
rcll
lea
iret
adc
call
mov
pop
sbb
js
mov
lret
dec
adc
stos
loop
or
int
icebp
loope
daa
sbb
cmp
push
loop
inc
cld
shrb
jge
imul
nop
add
adc
pop
sub
divb
inc
cmpsl
xor
dec
movsl
jno
xchg
mov
icebp
lock
orb
in
and
fsubr
or
inc
jle
ljmp
push
mov
orb
clc
and
mov
inc
imul
mov
fwait
and
jmp
jg
cwtl
rclb
repnz
push
add
jne
inc
dec
aad
das
inc
lods
inc
test
mov
daa
fcoms
dec
xor
jge
shll
test
testl
addr16
lcall
pop
jp
jnp
sti
xchg
jle
jp
lods
and
aaa
add
add
add
dec
sub
pop
pop
cmpsb
push
adc
fidivrs
xchg
mov
cmpsb
pusha
imul
mov
incb
aaa
inc
out
in
sub
mov
and
out
arpl
mov
cmp
pushw
jg
sub
add
push
decl
in
push
pop
js
loopne
xchg
pop
cmpsl
orb
je
dec
fs
out
adc
fxch
ja,pt
add
xchg
imul
mov
lods
sbb
push
inc
pop
cmp
push
and
in
xor
sbb
cs
popa
lods
sub
mov
cld
shll
cmp
inc
in
ds
testb
int3
cmpsl
icebp
and
xchg
outsl
mov
mov
sub
sbb
shll
movsb
aas
sbbl
sub
ja
mov
mov
popa
xchg
mov
rcll
mov
dec
pop
mov
xchg
jae
jecxz
daa
mov
mov
push
sti
decb
mov
pop
cmp
add
add
add
lcall
gs
cmpsb
sbb
mov
mov
mov
sub
test
and
xor
cmp
rcll
loopne
jp
xor
adc
push
xchg
insl
mov
loope
cmp
imul
mov
imulb
mov
es
mov
popa
nop
bound
outsb
insl
mov
pusha
cld
pop
lods
cmc
pop
js
or
loopew
push
aam
cwtl
aam
xchg
mov
mov
adc
mov
cld
cmp
pop
std
andl
jnp
ror
jno
in
adc
movd
lods
mul
jecxz
loop
jmp
ret
fwait
repnz
cmp
mov
xor
in
mov
and
ljmp
push
mov
mov
ss
lods
mov
das
push
xor
mov
push
mov
enter
or
cmp
orb
push
ret
cmp
xor
hlt
mov
gs
add
add
mov
adc
and
push
shl
lcall
jno
fcomp
ja
add
xor
lret
dec
and
cmp
xor
sbb
xor
push
dec
shlb
mov
inc
lret
sbb
dec
xchg
push
cli
push
or
ljmp
and
in
xchg
aad
jg,pt
orl
xor
in
cmp
mov
test
loope
les
out
inc
mov
test
loope,pn
outsb
sbb
jae
das
test
push
loop
add
mov
and
mov
in
repnz
cli
icebp
ljmp
mov
mov
cmp
data16
mov
mov
add
lock
std
inc
fisubs
js
ljmp
adc
push
fsub
arpl
loop
shlb
test
add
add
cmp
jge
stos
lea
shrb
xchg
fldenv
add
add
add
sbb
outsl
and
sbb
sub
jl
inc
push
mov
sbb
addr16
mov
push
mov
mov
out
pop
jne
xchg
inc
sub
inc
sub
xlat
mov
ljmp
pop
aad
mov
mov
leave
cs
arpl
and
jg
lcall
lret
lret
xchg
cmp
add
jb
mov
or
jp
lock
mov
pop
jl
insl
xor
dec
int3
xlat
mov
outsb
in
jmp
jb
aam
iret
pop
ss
mov
push
mov
jl
fcomps
int
arpl
sub
mov
sbb
cltd
dec
xchg
pop
jmp
ret
pop
pop
sub
xchg
fs
js
add
and
xchg
insl
ja
pop
mov
inc
lock
push
mov
leave
and
into
sub
loop
sbb
adc
add
add
rclb
nop
lcall
cmp
add
add
add
sub
xchg
and
mov
cmp
lds
andl
mov
and
loope
into
sub
mov
pusha
xchg
movsb
pop
mov
lret
in
jecxz
and
dec
lahf
sbb
fwait
shrl
jmp
or
xchg
push
push
adc
dec
mov
sarl
add
dec
or
and
mov
inc
cmovle
mov
push
ret
jns
in
out
mov
rol
fisubs
and
mov
divb
daa
pop
fidivrl
adcl
xchg
out
and
repz
int3
cmpsl
scas
adc
enter
fstps
fwait
aaa
and
subb
fidivrl
in
btc
sbb
fdivrs
aam
es
bound
adc
inc
mov
shl
rcrb
enter
or
testl
in
cwtl
lods
and
cs
inc
mov
add
jbe
idivl
or
mov
in
cmp
add
add
add
cs
jp
pop
mov
jle
int3
mov
pop
popf
aaa
pop
push
cwtl
sarl
xor
mov
dec
mov
sti
adc
lret
add
fwait
rcrb
xchg
outsb
or
jg
push
cmpsb
inc
mov
insb
leave
popa
hlt
sarl
sub
mov
cmp
inc
dec
movsb
popf
lret
xor
jge
loop
sbb
cmp
call
imul
push
ret
fidivrl
test
push
nop
cmp
cld
xchg
xchg
les
int
xchg
or
ret
lods
cmp
xchg
adc
lea
mov
add
std
mov
test
jnp
fdivl
sbb
push
mov
push
mov
or
fwait
xor
mov
cmp
pop
cld
xchg
scas
test
std
les
loopne
sbb
mov
cmp
pop
scas
mov
lods
dec
sti
jp
sub
push
push
dec
dec
lock
sub
add
add
outsb
sub
stos
fs
jmp
leave
aas
mov
out
addr16
add
cmpsl
mov
sbb
outsl
js
imul
or
and
inc
js
xor
cmp
xchg
in
jo
cltd
or
pusha
repz
jae
lcall
shlb
sbb
cli
mov
fwait
cwtl
mov
std
and
pop
testb
xchg
xor
clc
jnp
mov
mov
or
movsl
out
sbb
adc
in
loopne
test
roll
dec
out
andl
pop
jmp
dec
loopne
xor
jmp
int3
mov
sti
insb
xlat
inc
aas
fisttpl
xlat
mov
cld
lcall
add
inc
and
decl
enterw
fimuls
pop
push
jmp
xor
pop
pop
std
cmp
cmpb
mov
and
jp
shr
in
cmp
inc
cmp
insb
mov
inc
dec
xchg
adc
pop
sub
push
rcr
daa
test
sahf
les
scas
fistpll
outsl
gs
out
mov
add
add
add
mulb
mov
mov
ja
mov
imul
mov
add
and
in
xchg
inc
mov
push
cld
xlat
and
enter
cwtl
into
mov
and
or
shrl
pushf
sti
xchg
out
scas
sub
mov
push
mov
cld
fisubrl
aam
in
add
das
pop
cmpsl
fwait
mov
stos
fstl
lcall
sahf
or
dec
roll
xchg
fsubr
addr16
out
das
stos
std
and
inc
pop
int
repz
add
out
jnp
adc
in
imul
push
sbb
adc
adc
sahf
and
pop
pop
jg
mov
sub
les
or
movsb
push
sarb
adc
sub
pop
xor
stc
jnp
shl
shl
jecxz
std
jnp
dec
pop
jmp
cmpsb
adc
jecxz
addr16
adc
xor
sbb
jnp
jnp
cmp
movsb
push
sbb
xor
and
aas
add
add
add
fidivrl
and
mov
mov
js
xchg
cmpsb
pushf
aaa
jle
dec
pop
imul
mov
push
mov
push
xchg
adc
cmp
inc
cmpsb
jp
pop
mov
ja
pop
inc
jecxz
fisttpl
ret
repz
push
cmp
add
push
mov
cmc
add
xchg
dec
add
adc
aam
push
fidivl
insl
xchg
insl
push
push
fsubrs
icebp
cmpsl
inc
push
inc
inc
test
push
loopne
adc
test
cmp
mov
lret
or
insb
popf
add
ficoml
out
pop
push
leave
rolb
jle
pushf
ss
fdivrs
std
mov
inc
cmp
bound
cltd
enter
das
adc
mov
out
in
jmp
add
cmc
fs
xor
in
xor
imul
leave
sbb
nop
outsl
lret
mov
out
jmp
test
sub
add
add
add
cmp
sub
push
mov
int
int
movsl
jecxz
fdivp
in
mov
and
sub
sbb
mov
mov
aas
pop
gs
std
je
mov
cld
aam
pop
bound
adc
mov
fs
add
sarb
sub
push
xor
out
sbb
xchg
pop
and
xor
das
jg
das
xchg
push
pop
data16
std
std
shl
std
or
jg
sbb
imul
mov
dec
inc
sti
or
movsl
pop
movsl
or
xor
test
lea
jmp
mov
repnz
xor
shl
out
push
imul
mov
stos
cli
aam
repz
jne
andb
fwait
mov
sahf
dec
fisubrl
das
pop
and
and
das
cmp
lods
repz
mov
mov
inc
add
add
add
and
cmpsl
sbb
push
cmp
fsubrs
decb
cld
les
adcb
xlat
cmp
dec
pop
cmc
pop
push
icebp
xchg
xchg
test
mov
jae
dec
mov
mov
in
sub
xchg
push
cmpsl
outsb
adc
sub
pop
sub
and
lock
je
xchg
test
or
out
mov
aam
sbb
dec
mov
daa
je
add
imul
aad
or
add
pop
inc
shll
jecxz
dec
decl
push
xchg
jb
lret
add
pop
lret
add
pop
enter
rorl
add
enter
add
out
scas
or
in
rcrw
cmp
or
cmp
repz
inc
and
push
dec
mulb
shr
cmp
or
dec
cmpsb
sub
add
aas
daa
push
cld
push
std
jmp
dec
push
call
inc
add
add
add
enter
imul
dec
push
enter
cmpsb
push
inc
adc
test
fxch
mov
xchg
inc
jecxz
jbe
inc
cwtl
aad
popf
aaa
imul
repnz
adc
shrl
sbb
push
iret
cmpl
add
xchg
fs
mov
repnz
in
outsl
repz
dec
push
les
test
cli
xchg
inc
gs
jg
cmp
sub
aas
mov
sti
aam
jl
push
sbb
arpl
lahf
cmp
test
rclb
push
push
cmp
fisttps
aam
lock
pop
jne
cmpsl
jo
nop
xor
lock
pop
push
cmp
push
mov
dec
fldt
push
repnz
in
mov
xor
popa
out
mov
push
mov
neg
int3
xchg
lret
sbb
sbb
int3
sub
xor
imul
add
dec
push
add
sbb
dec
push
out
aad
aas
or
add
add
add
push
not
and
lods
clc
mov
and
xor
test
inc
movsl
sbb
cmovns
and
ds
clc
push
divl
in
dec
mov
xchg
sbb
loop
sub
mov
xlat
inc
dec
imul
into
xchg
fldenv
or
xor
test
andl
outsl
sub
je
fists
aam
movsb
aad
mov
pop
dec
rcrl
and
je
push
xor
cltd
mov
adc
ss
mov
push
sub
mov
add
xorl
cmp
dec
cld
scas
and
shrb
xchg
push
idivl
sub
or
in
imul
push
sub
pop
in
mov
xor
lods
mov
outsl
mov
fsubs
mov
inc
bound
add
stos
add
push
mov
or
std
arpl
addr16
add
add
add
arpl
ljmp
mov
in
out
imul
jo
out
sub
xor
packuswb
mov
clc
jb
ljmp
mov
je
adc
mov
mov
mov
out
push
cmpsl
sub
rorb
aad
mov
xlat
popa
fildll
fstps
pop
or
sbb
adc
int
mov
ret
add
xor
sub
add
jl
je
scas
leave
rcrb
cmpsb
imull
cmc
loop
sbb
inc
rcl
loope
out
mov
cmc
aad
scas
bound
ret
pop
int
mov
sbb
push
in
out
shlb
jmp
testl
sub
ret
sbb
std
mov
rolb
cmpl
lods
xor
aad
mov
mov
ja
jg
xchg
orl
and
inc
add
add
add
fidivl
ret
add
xchg
xchg
jbe
dec
popa
add
or
cltd
ret
pop
inc
jp
and
hlt
push
push
call
cli
mov
and
or
rcll
inc
jbe
and
je
repnz
scas
sub
mov
aam
and
aam
adc
fadd
push
sub
adc
cmp
push
nop
xor
in
int
jo
hlt
sarb
mov
xor
cmp
push
xlat
cmp
insl
push
push
adc
dec
jno
pushf
nop
rcll
jl
outsb
cltd
adc
push
rolb
inc
loop
cli
jne
mov
lret
inc
ja
xor
std
jmp
fnsave
repz
daa
iret
push
enter
aaa
stos
xchg
mov
mov
and
call
es
mov
mov
pop
repnz
pop
dec
pop
test
stc
mov
mov
mov
sub
repnz
add
and
dec
lret
jmp
imul
aaa
je
xor
add
add
add
cmp
adc
lds
cmp
cmpb
sub
clc
movsl
adc
jp
not
cld
pop
movsb
inc
out
mov
dec
xchg
in
xlat
sti
push
add
inc
sbb
adc
ficoms
adc
imulb
out
ret
xchg
outsb
and
mov
adc
ja
jg
ret
scas
subb
xor
movsl
aad
xor
mov
or
inc
add
cmpsl
outsb
add
mov
sub
xor
lods
push
dec
out
xor
loope
add
adc
into
ficomps
pop
xor
popa
or
movb
inc
es
pop
mov
push
jno
sub
jae
loope
adc
cmp
sbb
dec
les
lods
sahf
lea
addb
arpl
ss
mov
xor
add
lds
cmc
cwtl
xchg
push
sub
test
add
add
add
scas
cmpb
mov
test
leave
and
inc
addl
dec
pop
mov
dec
jge
adc
push
xor
jp
rcrb
fst
jno
push
andps
and
lods
jo
movsl
rcr
inc
loope
sbb
jle
cwtl
pop
jns
notb
mov
push
je
sti
sbb
das
push
xchg
push
das
fistpl
lock
into
mov
jge
in
cltd
inc
movsb
subb
pop
adc
movsb
lcall
dec
and
aas
add
inc
mov
jb
stos
pop
sbb
test
sub
fcmovnb
mov
mov
xchg
faddp
cld
pop
add
aas
jle
mov
sahf
cmpsb
or
shll
sbb
add
cmp
jle
sbb
pop
das
adc
sbb
cmp
fiaddl
push
mov
lret
cs
cmp
loope
insl
pop
cmpsb
add
loope
jne
adc
dec
mov
sarb
inc
add
sbb
add
add
jns
xor
jg
lahf
push
daa
addr16
add
add
add
lock
jb
push
and
pushf
jne
test
out
jg
arpl
or
popf
and
out
stc
icebp
xchg
jnp
mov
fldl
pushl
lods
mov
jbe
mov
loopne
mov
jmp
cmp
and
icebp
movsb
sahf
pop
leave
test
mov
ret
into
imul
cmpsl
mov
std
adc
push
or
xchg
sub
ret
jne
mov
arpl
fistpll
or
mov
int
bound
inc
dec
mov
xchg
sahf
adc
imul
cltd
mov
adc
scas
movsb
inc
sbb
pop
push
mov
test
adc
std
in
cmpsb
ret
inc
adc
nop
sti
je
cltd
mov
mov
mov
inc
jle
inc
push
out
mov
daa
cmpsb
jne
div
es
jne
js
ret
jg
decl
rol
lcall
add
add
add
mov
test
out
lds
or
insl
cmc
lret
nop
repnz
or
push
cwtl
sbb
pop
mov
push
nop
pop
lcall
xchg
imul
add
xchg
push
sbb
add
and
lret
test
imul
cmp
roll
mov
cltd
repz
stos
out
pusha
xor
push
out
jp
movsb
fyl2x
loope
inc
xor
cmpsl
scas
or
aad
sbbl
fwait
gs
fwait
xor
lods
pop
inc
mov
or
inc
xlat
dec
push
loope
adc
pushf
into
and
out
sub
fwait
xchg
jne
ret
lret
testb
mov
pusha
push
jae
cmp
lea
or
cmp
fsubl
cmpsl
leave
mov
or
inc
sub
pop
pop
fiadds
add
add
das
mov
out
aad
mov
movsb
addr16
add
add
add
or
loop
add
inc
pop
and
std
jmp
mov
cmp
mov
mov
data16
mov
mul
dec
insl
sahf
cmpsb
inc
jbe
das
xchg
dec
jg
pop
or
sub
jno
dec
or
lretw
add
jecxz
fists
push
xor
ds
lods
mov
pop
enter
ja
loopne
sub
push
imul
jle
sbb
loop
add
enter
dec
pop
mov
pusha
pop
adc
andl
lods
fsubl
andb
or
ret
jb
xor
mov
mov
xor
fnstsw
fisttpl
ret
scas
mov
xchg
mov
add
xchg
clc
loop
mov
jne
ds
mov
push
mov
iret
in
sub
aam
adc
jle
aam
loop
addr16
pop
pop
popa
mov
jae
jae
jle
pop
out
hlt
sub
inc
icebp
hlt
gs
dec
adc
sbb
addr16
add
add
add
call
sub
lds
bound
outsb
je
icebp
xchg
mov
bound
push
das
pop
gs
cwtl
fstps
int3
aam
in
jno
dec
fs
mov
lcall
sti
xlat
mov
dec
pop
std
cli
cwtl
fwait
and
adc
adc
xor
inc
add
xchg
repnz
add
mov
adc
mov
fadds
in
add
push
or
outsl
aam
cmp
or
repz
mov
into
jo
mov
stc
xor
inc
push
xchg
out
push
xchg
and
bnd
stc
sbb
push
loopne
les
fsts
xchg
scas
addr16
ret
out
hlt
xlat
iret
bound
push
stc
pusha
lds
push
je
icebp
and
jg
add
outsb
push
cmp
push
adc
push
cs
dec
inc
stc
scas
clc
inc
rolb
mov
sbb
add
add
aas
gs
pop
repnz
dec
add
add
add
xchg
cmp
in
sar
jg
dec
popf
je
shl
cmp
movsb
adc
sbb
inc
inc
mov
dec
dec
int
addr16
shrb
mov
je
lret
adc
jns
add
out
xchg
dec
add
fwait
mull
scas
cmp
adc
push
jne
rorb
adc
loop
or
or
imul
and
addr16
xchg
xor
inc
dec
sbb
fcoml
jg
sbb
jae
xor
out
stos
mov
cmp
incb
stc
push
shrl
hlt
test
in
sbb
adc
orb
fstpt
fdiv
filds
push
dec
mov
or
and
scas
gs
mov
push
mov
repnz
sub
mov
sarl
push
sub
repnz
sbb
inc
or
mov
add
add
out
fisttpll
lock
loopne
addr16
add
add
add
mov
ja
xor
pop
mulb
mov
in
int
movsl
cmp
or
sbb
add
xchg
jle
push
sarl
dec
adc
mov
add
fnstcw
jle
cwtl
fldz
nop
in
adc
mov
bnd
aas
mov
loope
sti
roll
pop
mov
jp
cmp
mov
in
or
andl
pushf
pushf
mov
mov
dec
sahf
int
jle
fcomps
int3
mov
invd
inc
xchg
mov
or
fldenv
ud1
mov
inc
mov
xlat
push
fnstsw
dec
mov
loope
shrb
push
jns
dec
jo
lea
jp
pop
mov
rclb
test
xor
in
adc
mov
shl
pop
add
push
dec
insb
push
sbb
jne
mov
and
xchg
dec
les
add
add
fildll
mov
ljmp
add
add
add
icebp
mov
jl
out
int3
mov
mov
int
mov
ja
sti
into
and
push
mov
pusha
out
push
test
js
insb
andb
xor
mov
jp
inc
xor
sarl
cmp
lahf
mov
ja
cld
inc
aas
mov
popa
js
roll
faddp
pop
mov
rorl
clc
out
jl
imul
jg
ret
ljmp
push
stc
icebp
xlat
xchg
or
aam
das
cmpsb
pop
loope
pop
sbb
jo
jge
pop
hlt
jp
dec
push
push
fimull
pusha
dec
daa
test
aas
clc
inc
inc
or
jecxz
sahf
mov
adc
fst
imull
les
pop
xchg
test
pop
sbb
and
cmp
les
cmp
jno
bound
enter
push
repz
test
subl
add
add
jmp
out
aas
jo
sahf
jb
push
pop
addr16
add
add
add
aam
rorl
mov
push
lods
and
pop
mov
ret
sbb
xchg
add
mov
out
or
pop
cmp
xor
lods
xor
mov
adc
cmp
inc
inc
add
stc
or
sarb
adc
test
test
out
loopne
push
pop
and
mov
push
fmuls
jle
mov
clc
insl
loope
fisttpll
adc
push
mov
cmp
insb
in
push
sbb
mov
pop
jo
push
cmp
and
cmp
clc
mov
popa
ja
sub
push
mov
icebp
and
stos
adc
fimuls
inc
jecxz
sbb
xchg
jecxz
mov
jb
lahf
xor
leave
int3
xchg
cs
xor
add
test
xchg
outsb
inc
dec
jl
mov
imul
or
add
add
imul
out
mov
mov
cmpsl
mov
addr16
add
add
add
cltd
xor
push
dec
ljmp
or
loop
es
rcrb
mov
movsb
shlb
xchg
dec
sub
and
ss
fcmove
mov
inc
pop
mov
sti
imul
clc
lds
push
cltd
fmull
dec
cmp
push
out
and
jp
add
cmp
fcmovnbe
fs
dec
enter
loop
fdivrs
dec
push
dec
js
sub
mov
imul
pop
ljmp
addr16
je
mov
insl
push
lahf
pop
enter
mov
repnz
lret
mov
jge
into
nop
mov
test
scas
mov
imul
sbb
pop
loop
pop
faddl
xor
mov
dec
mov
xorl
push
mov
enter
cmp
and
or
pop
add
stos
sub
xor
shr
push
js
add
dec
stc
mov
ljmp
addr16
add
add
add
leave
xor
xor
loop
jnp
sahf
lods
sbb
and
lods
jg
or
dec
jp
jae
xor
imul
dec
mov
rol
jle
push
in
mov
xor
dec
mov
sub
mov
mov
adc
cmp
inc
push
fldenv
push
fldt
shr
mov
cmp
inc
aad
or
mov
jle
mov
mov
ret
imul
and
daa
inc
repnz
aas
jge
jne
and
push
in
adc
aaa
xor
lret
and
bound
das
xchg
out
mov
adc
loope
stc
outsb
lea
test
and
push
mov
in
loop
arpl
icebp
dec
xor
sbb
cmp
arpl
dec
or
imul
pop
xchg
cmp
xor
mov
cli
jbe
inc
addl
add
add
jg
cld
lcall
lret
add
add
add
in
mul
jns
jmp
pushf
in
out
shll
out
dec
jle
scas
dec
and
or
xchg
call
fnstsw
xchg
dec
ss
sbb
pop
bound
or
imulb
es
xor
mov
cmpsb
sub
mov
jne
push
fiaddl
pop
add
jnp
mov
pop
das
xchg
and
adc
mov
or
and
xchg
sbb
mov
mov
ss
loopne
cmp
inc
ljmp
xchg
push
hlt
dec
xor
cmp
imul
pop
pop
cmp
test
mov
xor
cmp
and
push
xor
jnp
jge
and
lcall
popf
aam
push
stos
lods
pusha
push
add
rcr
sub
mov
das
dec
ret
sbb
popa
xor
jmp
mov
xchg
mov
pop
inc
push
addr16
add
add
add
out
sub
jmp
rclb
xor
jg
sub
mov
jno
mov
sti
cmpsb
das
or
cwtl
sbb
push
jecxz
inc
inc
pusha
pop
clc
jno
test
psubsb
shr
adc
push
xchg
mov
sub
sbb
movsl
rclb
arpl
test
popf
js
fs
adc
inc
insb
sbb
push
and
mov
popl
xchg
adc
sahf
inc
cmp
ss
mov
add
or
repnz
xor
push
pop
in
lea
xor
mov
cmp
jnp
jle
add
xchg
iret
popa
cmp
xor
mov
xorl
bnd
out
cmpsb
movsl
dec
dec
stos
inc
sub
cltd
push
leave
xchg
decl
jo
fmull
jecxz
iret
inc
fadd
out
mov
dec
or
mov
and
adc
addr16
add
add
add
cwtl
adc
and
mov
xor
dec
mov
cmp
dec
xchg
mov
insb
sub
orb
mov
sahf
xlat
mov
lock
fwait
pop
int
stos
les
repnz
outsb
jp
jo
jle
pop
pushf
xor
divb
mov
sbb
jmp
inc
add
and
movsb
push
mov
clc
add
xor
pop
sti
jb
xor
inc
and
in
std
rolb
mov
movsb
insl
add
adc
adcb
bound
repz
fstps
mov
xchg
sub
push
and
sets
hlt
mov
daa
addb
adc
inc
push
sbb
pop
sbb
sub
inc
pop
shll
les
pusha
leave
mov
jne
rcrb
cmpsl
ds
add
imul
shlb
xchg
frstor
adcl
clc
xchg
add
fsubrl
mov
out
cmp
ret
or
mov
daa
repz
add
add
add
outsb
fdivrl
loope
adc
scas
ja
test
test
pop
jg
arpl
cmp
lahf
shll
fistpl
vmovhpd
ds
push
pop
push
or
out
mov
jmp
addl
rorl
repnz
movsl
jle
outsb
jmp
inc
popa
pusha
add
lret
call
or
sti
jbe
jl
push
out
mov
mov
gs
pop
into
push
fcompl
push
int
or
jge
sub
pop
push
pop
dec
leave
and
inc
lods
push
pop
mov
ja
xchg
adc
jmp
xchg
inc
inc
mov
jge
adc
push
xor
jno
test
sbb
xchg
andl
mov
test
cmpsb
and
cld
hlt
cltd
push
stos
ret
mov
xor
cmc
and
inc
ret
jle
dec
cld
sti
cli
adc
aad
outsb
clc
aam
mov
mov
mov
stos
shl
sbb
std
or
push
shll
out
pop
pop
pushf
push
addb
and
add
add
add
mov
pop
fsubrp
inc
fcomip
std
xchg
in
imul
jecxz
cmpsl
inc
mov
sub
jb
insl
daa
inc
and
and
into
adc
xchg
mov
stc
mov
mov
xor
jbe
jno
push
mov
push
inc
clc
cmp
cmp
pop
cld
dec
push
lds
cmp
fmull
mov
imul
adc
mov
mov
xchg
jmp
mov
sub
lds
loopne
jg
test
pop
xlat
leave
fadd
xor
or
and
cmpsb
mov
das
lcall
pop
pop
out
inc
pop
xchg
inc
je
pop
mov
out
pop
movsb
xchg
pop
mov
add
jmp
xchg
mov
lods
mov
fwait
jae
cmc
inc
fisubs
mov
and
pushf
add
es
sbb
dec
cmp
sbb
stos
push
lcall
hlt
mov
dec
xor
push
add
add
add
push
repz
divb
inc
sbb
or
and
jns
fdivl
sbb
xchg
xchg
xchg
xchg
cmp
cmc
dec
sub
scas
shlb
jge
xor
push
sub
pushf
and
add
dec
fldenv
movsl
call
jns
add
mov
iret
pop
cmc
or
mov
add
add
dec
mov
push
push
xlat
in
mov
inc
xchg
aam
xchg
cmc
or
push
pop
sub
pop
xorb
add
push
dec
and
xor
adc
xchg
jl
cmpsb
add
mov
jg
das
scas
lret
addr16
pop
jo
pop
or
mov
push
inc
sub
push
pushf
push
out
cmp
fidivl
sbb
fbstp
stos
int3
adc
or
or
mov
mull
xchg
scas
lods
xor
les
xor
shl
dec
pop
cmp
mov
leave
and
roll
add
bound
imul
loope
popa
addr16
add
add
add
xorb
stc
mov
or
and
pop
icebp
dec
pop
dec
ret
int3
fsubl
sbb
and
in
pop
dec
fsubrl
cmpsb
adcb
arpl
es
xchg
mov
andl
xchg
shrb
xor
jle
dec
xor
hlt
push
mov
shll
cltd
mov
sub
inc
pop
add
mov
jns,pn
pusha
loop
jb
mov
stc
lret
movsl
add
repnz
bound
jge
addr16
jns
cmc
pop
rcrb
insb
repnz
jbe
mov
imull
mov
xor
ror
sarb
xor
aam
dec
ds
jg
je
scas
jle
and
jl
mov
pushf
xchg
lods
or
divl
mov
push
pop
lahf
mov
jl
int3
daa
insb
mov
scas
xchg
int
add
add
fwait
cmp
stos
sarb
addr16
add
add
add
inc
ja
cmp
fstpt
loopne
arpl
or
repnz
addr16
ss
rclb
out
ds
dec
sbb
imul
in
loopne
inc
pushw
jnp
mov
dec
or
pop
mov
sti
and
and
dec
pushf
dec
mov
popf
adc
or
inc
mov
dec
cmp
ja
fnstsw
clc
and
jno
push
adc
sbb
mov
xchg
jmp
xchg
push
dec
clc
xor
jge
lea
test
jecxz
cs
out
adc
mov
cld
pop
inc
prefetchnta
sub
sub
or
out
jo
xchg
cmp
xor
lahf
ret
fmull
out
mov
dec
add
xchg
inc
popa
pop
std
and
pop
fucomp
push
push
icebp
ljmp
sbb
push
ror
mov
dec
ret
mov
leave
xlat
pop
pop
shr
mov
addr16
add
add
clc
mov
and
hlt
fs
cli
addr16
add
add
add
div
enter
lods
out
push
in
int
cmp
pushf
xchg
pop
xor
sbb
xor
push
mov
stos
dec
mov
iret
outsb
test
setnp
ret
and
push
in
xchg
aam
jg
dec
in
out
lods
stos
std
xor
xor
pop
loopne
test
pushf
sahf
inc
xchg
add
pop
stos
out
pop
iret
mov
sbb
jp
test
jno
xchg
ficomps
movsb
sbb
cmpsl
inc
jb
dec
ja
add
imul
mov
fstpl
sti
out
in
dec
rcrb
movl
clc
mov
int
push
cld
je
mov
push
push
xchg
out
cmp
fs
and
xchg
mov
inc
adc
pusha
movsl
push
dec
popa
cmpsb
fwait
jmp
mov
pop
push
mov
xor
add
add
shr
mov
addb
addr16
add
add
add
shll
and
inc
lret
test
lahf
fwait
pop
mov
sbb
jle
dec
xor
jge
push
mov
stc
push
ss
sub
ror
and
jne
cli
mov
adc
dec
mov
pop
sarl
mov
mov
nop
or
pop
ds
inc
imul
stos
fnsetpm(287
aad
lret
jb
inc
fistps
scas
jnp
stc
inc
dec
inc
sarl
pop
pop
ret
sub
rcr
out
lahf
pushf
adc
shrb
inc
test
push
lods
pop
add
jno
mov
rcr
mov
jns
sub
cmp
mov
test
sub
push
fisttpll
mov
xor
fwait
in
fidivl
stc
rclb
pop
aas
adc
cli
add
movsl
int3
aas
es
int
shll
push
jmp
popf
test
or
fdivs
mov
pop
add
add
add
test
je
fstp
xor
sub
imul
jl
sar
mov
adc
popf
enter
dec
sbb
mov
leave
cmp
mov
adc
dec
mov
pop
loope
inc
pop
inc
mov
out
jne
mov
mov
ret
insl
sbb
push
mov
cmpsb
sti
mov
in
push
test
imul
jecxz
mov
icebp
movb
jecxz
roll
cmp
jmp
fcmovb
add
lods
push
mov
inc
jbe
xor
addr16
dec
ja
imul
dec
dec
out
push
push
mov
scas
push
pop
popf
inc
add
out
jl
stos
je
push
and
testl
cmp
push
mov
cmpsb
sub
inc
stos
mov
fs
loop
jbe
shl
rclb
and
fistps
inc
mov
and
das
cmp
pusha
pop
push
and
pop
add
add
add
fiaddl
stos
leave
popl
les
and
sbb
or
outsl
test
mov
stos
mov
insl
jge
inc
pop
jnp
in
repnz
insl
cmp
lods
and
in
sbb
sbb
out
jns
adc
or
pop
add
or
cs
or
sub
cmc
and
lcall
pop
subb
call
pop
jae
dec
mov
push
frstor
and
cmc
xchg
shll
pop
inc
popf
clc
mov
jmp
xor
fmull
jmp
xor
out
inc
push
imul
adc
cld
mov
shrl
cmpsl
lret
lock
gs
pusha
in
pop
js
mov
pop
dec
pop
push
mov
repnz
dec
add
push
push
ss
push
xchg
adc
push
aas
lods
fsubl
mov
ja
mov
add
add
add
add
sub
sahf
inc
cwtl
out
xchg
xchg
jle
mov
arpl
mov
pop
xor
adc
ds
mov
scas
int3
out
jge
int
cmp
mov
imul
clc
sbb
inc
sti
cmp
fcompl
sub
xor
jo
xchg
repz
pop
roll
aam
xor
xchg
mov
or
cs
dec
mov
out
lret
nop
jmp
mov
repz
xor
enter
inc
mov
xlat
inc
rorb
fwait
aam
out
mov
shlb
es
ljmp
mov
in
mov
xchg
cmc
repz
sub
or
cwtl
daa
in
loop
inc
dec
push
out
pop
mov
sub
xor
jmp
aas
xlat
jmp
and
dec
idivb
push
imul
pop
stos
push
push
pop
int
repz
fstpl
push
popa
in
dec
or
adc
test
into
mov
add
xor
xlat
out
cld
iret
inc
mov
add
add
sbb
loope
daa
cld
push
mov
notb
cltd
jno
sbb
loop
mov
sub
out
inc
sub
jbe
push
or
pop
call
jbe
loope
cmpsb
idivl
sbb
jg
test
fildll
mov
stc
sub
jne
daa
inc
mov
dec
notl
push
insb
lret
pop
fsubrs
inc
jb
sbb
daa
int3
addl
xchg
inc
hlt
adc
ja
mov
adc
rcrb
inc
or
mov
insb
add
or
imul
into
test
cmp
or
push
lcall
push
pop
pop
cmp
push
mov
dec
or
fucompp
mull
fistps
aaa
lods
push
ja
push
arpl
ds
loope
jle
outsb
push
loope
fnstsw
pop
xor
insl
arpl
dec
pop
pusha
sarl
shrl
add
mov
mov
in
stos
repnz
addr16
add
add
add
adc
jne
mov
mov
mov
push
xchg
mov
jp
scas
icebp
adc
lcall
jg
xchg
nop
enter
lret
cmp
fdiv
cmpsb
pop
lahf
in
xor
jmp
mov
dec
dec
dec
xchg
add
jae
addr16
test
adc
inc
add
cmc
jne
pop
dec
mov
mull
stc
add
xchg
add
pop
fmulp
or
outsl
and
bound
pop
or
sub
insl
out
in
pop
inc
sahf
bound
xchg
into
cli
add
dec
sub
aad
test
xor
leave
cmpsl
sub
scas
xchg
add
adc
adc
or
push
out
in
or
sub
mov
mov
aad
xor
dec
scas
test
add
andl
mov
jb
out
addl
add
add
push
into
push
push
inc
lahf
mov
addr16
add
add
add
fldcw
lock
cmpsl
leave
pop
inc
jns
cmc
int3
mov
mov
mov
sub
outsl
jle
and
push
ret
pusha
idivl
stc
repz
fbld
inc
mov
mov
dec
adc
scas
test
sub
aaa
into
std
and
jae
scas
cmp
jb
dec
mov
lods
inc
adc
scas
adc
add
mov
inc
cwtl
push
cmc
sbb
cmp
mov
rol
push
cli
repnz
into
and
dec
xchg
xchg
cltd
into
scas
popa
mov
jnp
cmpsb
add
xchg
cmp
fstl
push
dec
popa
mov
packsswb
pop
push
inc
cmp
add
decl
mov
cmpsl
jo
mov
jno
xor
pop
pop
adc
jge
movsl
sbb
orb
sub
sar
sbb
and
pop
mov
ss
clc
in
push
and
mov
add
xchg
inc
shl
xlat
mov
jg
or
bound
add
add
add
lods
pop
adc
pop
sbb
xchg
dec
ds
ss
stos
jb
add
cmp
or
movsl
inc
lret
add
notb
push
scas
leave
sub
jg
cmpb
sahf
xchg
inc
sub
cmc
mov
cltd
popf
out
add
lea
adc
lea
xchg
push
sahf
aad
fnstsw
and
pop
leave
sub
sub
cmpsb
std
mov
mov
aaa
dec
jns
push
cmp
mov
or
fstpt
or
js
xor
add
dec
push
mov
sbb
push
pushf
dec
add
mov
int3
pushf
test
xor
jne
mov
mov
test
jle
out
sub
or
pop
dec
mov
xor
push
sub
insb
mov
ds
pop
cld
mov
mov
xor
sahf
sub
pushf
dec
les
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
arpl
add
add
add
push
cwtd
fisttps
popa
pop
mov
test
jge
adc
and
add
mov
lahf
cmpsl
movsl
test
xor
pop
inc
inc
inc
sahf
imul
push
push
mov
stos
push
stos
lods
pop
jmp
xor
repnz
xor
insl
jp
jmp
pop
cmp
mov
sub
rorl
dec
aas
push
outsl
xchg
inc
sub
add
xlat
lea
and
jo
outsl
fldcw
lods
test
push
mov
test
mov
add
push
or
jmp
add
loopne
mull
or
pop
xchg
mov
mov
sbbb
push
jle
cli
popf
or
aas
mov
aad
mov
inc
fsts
cmc
dec
fists
xor
mov
and
mov
test
mov
fisubrs
lods
std
repz
mov
add
idiv
jg
sub
lea
add
add
lods
imul
pusha
ja
and
int3
cmpsl
enter
sbb
cmp
pop
sbb
fdiv
push
pop
lock
test
mov
sub
sbb
mov
hlt
in
dec
fs
mov
mov
and
jge
mov
push
sbb
testl
jp
mov
xchg
adc
cmp
xchg
jns
and
adc
sub
push
rorb
jno
sbb
add
mov
test
outsb
outsl
ret
les
imul
bnd
cmp
stos
inc
mov
pop
mov
or
andb
inc
fdivl
jle
cli
repz
aam
cmpsl
jge
xchg
pop
les
and
insb
pop
pop
scas
cltd
lahf
cld
jmp
sub
dec
mov
sbb
lret
in
xchg
cmp
add
je
mov
loop
stos
fs
lods
add
lcall
add
pop
mov
fstps
and
add
add
add
mov
mov
addl
add
stc
sbb
lds
jp
xor
cmpsl
and
add
jno
pop
cmpsl
jecxz
mov
cs
icebp
outsb
scas
leave
movsl
lds
insb
out
ja
pop
enter
push
lcall
pop
pop
jecxz
stos
call
orb
inc
adc
incb
fisttpll
push
pop
popa
fnstsw
lret
aad
jmp
repz
xchg
out
cmpsb
inc
mov
and
dec
es
scas
jl
jge
or
ret
xor
sbb
fwait
xchg
dec
sbbb
xchg
fildll
pop
stos
out
nop
or
dec
xchg
or
jp
test
sub
add
imul
push
adc
out
pop
pop
jmp
inc
add
sbb
push
dec
sub
add
add
repnz
movsb
jle
arpl
xchg
fsubs
add
add
add
rorl
add
mov
lret
inc
mov
lcall
frstor
movsl
cmpsb
aad
out
jnp
ret
adc
jle
push
insl
pop
xchg
popa
fsubrl
inc
adc
fbld
jle
negb
mov
mov
daa
xchg
push
in
jmp
or
sub
and
call
cmp
xor
push
lcall
jle
aas
ret
xchg
and
sub
sub
cld
jle
loop
and
and
xchg
out
and
stc
sahf
cmp
aaa
xchg
imul
xor
jl
and
cmp
mov
push
cmp
mov
out
xchg
fcmovb
sub
xor
popa
or
sub
loop
popf
or
mov
adc
add
or
scas
jle
mov
or
mov
add
stos
sub
stos
out
jmp
sub
dec
or
add
add
add
mov
std
jg
ss
into
xor
dec
leave
lret
push
mov
addb
cmp
inc
jmp
ss
mov
dec
jp
mov
xor
out
pusha
xchg
das
mov
inc
mov
les
inc
inc
or
loopne
push
out
fbld
lahf
call
fs
in
xor
arpl
push
pop
cmp
int3
cld
pop
fldl
cld
in
nop
cmp
mov
or
inc
push
shll
adc
sub
cli
mov
ror
pusha
and
push
clc
inc
xor
mov
ds
cmp
dec
adc
cs
das
mov
shl
inc
testl
push
pushf
out
inc
popl
xor
mov
faddl
jne
dec
inc
and
mov
data16
mov
shll
fnstenv
inc
les
addr16
add
jle
mov
pop
loope
pop
imul
sbb
mov
sahf
dec
xor
dec
sub
add
inc
pop
fwait
mov
mov
aas
out
pop
xchg
out
arpl
xor
cli
mov
insb
ds
pop
mov
jo
push
cmp
in
out
add
movsb
jnp
loop
jecxz
inc
test
and
sub
lock
jle
mov
test
pop
or
ret
jg
mov
out
pop
loope
mull
call
inc
cmp
loop
scas
std
jp
lods
add
data16
cmp
xor
mov
sahf
imul
imul
add
loope
fdiv
movsb
js
in
cmc
pop
or
mov
std
mov
pop
dec
dec
insb
js
mov
cmp
repz
fdiv
push
mov
lods
pop
js
xchg
cmp
lds
sub
cld
je
jbe
jns
sbb
cmp
add
add
add
add
movl
pop
icebp
cmp
adc
xchg
fidivl
dec
xor
push
push
xchg
sub
dec
add
jl
lods
and
xchg
sub
mov
xor
loopne
popa
xor
pop
dec
pop
daa
xchg
dec
adc
shll
lods
js
sbb
mov
lods
std
nop
add
adc
cltd
les
or
pop
idivb
ljmp
loope
filds
loopne
inc
rorl
rolb
arpl
or
dec
cli
sub
fwait
test
test
add
mov
pop
clc
and
push
dec
into
jns
cmp
gs
aad
inc
arpl
sub
lods
mov
scas
dec
lds
mov
mov
mov
mov
xor
pop
dec
clc
pop
mov
push
push
xlat
mov
rorb
add
cltd
jmp
fildl
or
and
add
add
ficomps
icebp
dec
aam
lret
sub
daa
loop
das
test
adc
stc
add
in
fisubrs
fwait
mov
adc
push
pop
mov
sbb
ja
mov
mov
or
int
popl
jno
lcall
or
sbb
movsb
shll
movsb
mov
movsb
xchg
rorl
outsb
sub
dec
movsl
repz
sub
or
callw
test
ret
adc
insl
fcoml
mov
mov
mov
add
scas
mov
xor
rorb
sbb
mov
xchg
xor
sub
adc
mov
xchg
inc
dec
sarl
in
mov
push
gs
testb
push
sbb
dec
jg
push
jne
jo
push
push
cmp
cmpl
mov
mov
push
jg
dec
xchg
dec
aaa
xchg
inc
hlt
imul
add
add
fnstcw
xchg
hlt
fists
mov
das
xchg
jno
gs
popf
mov
cmc
mov
je
pop
mov
jo
in
icebp
inc
nop
mov
lret
aad
push
cmpsb
sub
jecxz
and
jmp
in
outsl
push
jno
movsb
or
mov
xor
mull
popf
cmp
cld
xor
jb
pop
pop
mov
sahf
repz
xchg
stc
add
les
shl
ret
mov
inc
mov
adc
pop
pop
out
sbb
adc
dec
jbe
xor
add
sti
adc
dec
repnz
ljmp
imul
or
aaa
pop
mov
maxps
push
stos
xor
daa
hlt
cmp
insb
xor
daa
cmp
jb
pop
pop
js
xor
pop
nop
fs
and
inc
aad
lds
or
xchg
inc
fistl
cmpsb
and
bound
divb
jns
pop
fistpl
push
fsubrp
shll
pop
data16
and
iret
mov
fucomip
push
insb
xor
dec
cmp
cmp
add
add
add
rorl
shr
sbb
dec
mov
icebp
xor
inc
movsl
cltd
xchg
inc
adc
jno
loop
in
xchg
lret
adc
cmp
jg
ud1
popl
and
imulb
sar
lea
iret
mov
sub
mov
aas
xchg
sbb
dec
pop
ror
mov
sbb
std
lods
add
xchg
fld
dec
lret
xchg
adc
aas
sub
sbb
xchg
mov
cmp
test
movsl
inc
insl
jge
push
pop
lret
dec
out
shlb
and
sbb
cmp
xchg
xlat
cmpsb
and
clc
adc
ja
and
lods
addl
jbe
xor
movsl
pop
pop
adc
push
cld
test
adc
mov
adc
fwait
add
and
mov
fs
sbbb
pop
mov
out
mov
add
dec
out
iret
jmp
aas
in
push
xchg
das
insl
add
add
add
mov
lahf
fdivr
punpcklbw
mov
fimull
enter
lods
test
mov
mov
test
movsl
cmpsb
into
stc
shlb
cmpl
popf
js
xor
rcrb
or
adc
mov
adc
mov
loop
imul
jo
jl
lret
loop
gs
lods
out
mov
fs
jnp
nop
std
in
xor
cmp
xor
sbb
incl
mov
xor
int
movsl
xor
jecxz,pn
pop
xchg
sbb
xlat
or
loope
xchg
inc
adc
push
and
mov
xor
enter
ret
or
inc
xor
fsts
mov
loope
pop
aas
cltd
or
pop
int
mov
mov
fsub
mov
clc
dec
jg
xlat
mov
xchg
and
ljmp
inc
lret
and
pop
sub
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
outsb
add
add
add
aas
stos
push
cmp
sbb
pop
cmp
shrb
out
cmpsb
pop
dec
mov
mov
jecxz
loopne
inc
sub
lea
xchg
stos
enter
jo
push
xor
pop
and
cwtl
mov
out
lahf
pop
inc
sbb
push
cmpsb
jo
test
mov
arpl
int
cltd
pop
test
es
pop
add
scas
sahf
fwait
jmp
adc
mov
iret
push
scas
testl
mov
cwtl
lods
stc
stc
lcall
fsubs
xchg
inc
mov
mov
leave
pmulhuw
out
ret
out
adc
add
das
pop
cltd
sar
movl
or
inc
xchg
fcmovne
fwait
daa
dec
das
add
add
in
sub
clc
dec
push
pop
xchg
pusha
xor
flds
cmc
and
stc
push
inc
inc
icebp
loope
repz
cwtl
in
lods
imul
neg
std
sub
dec
or
cmp
add
add
add
jno
mov
mov
addr16
push
daa
inc
dec
sbbb
adc
clc
icebp
and
fistpll
ja
pop
data16
sarl
add
fs
aad
jl
pop
roll
into
dec
daa
push
or
stc
or
cmc
lret
push
addr16
and
pop
mov
xchg
lea
add
pop
xor
sbb
ljmp
push
pop
outsb
fisttpll
jno
orb
sarb
mov
enter
or
mov
push
out
xchg
faddl
cmpsb
clc
js
push
jno
sti
push
test
inc
je
icebp
mov
mov
push
jmp
nop
jl
into
fimull
pop
mov
adc
xchg
es
call
xchg
add
fldt
sub
in
jne
fmull
jle
lock
xchg
push
mov
arpl
add
add
cs
xor
cltd
and
test
add
add
add
add
inc
nop
xchg
nop
cmpsb
mov
daa
xor
sub
in
lock
xchg
xor
fldenv
jle
xchg
in
out
jecxz
sub
jl
pop
addl
push
mov
mov
sti
jnp
fistps
dec
add
cwtl
mov
into
std
out
inc
and
sbb
cmpl
jae,pt
sub
call
pusha
pop
mov
inc
pop
sbb
out
movb
jns
or
popf
xchg
push
jecxz
imul
es
fiadds
repnz
bound
addl
out
rsqrtps
enter
jmp
or
ror
xchg
insl
pop
pop
push
pop
jmp
lret
jnp
pop
cmpsl
hlt
fsubs
mov
in
adc
or
loopne
xor
icebp
add
loope
jo
push
int
sahf
ss
adc
pop
mov
add
add
ja
out
sbb
fadd
addr16
add
add
add
clc
icebp
jecxz
dec
movsb
pop
gs
mov
fiadds
subl
int3
sbb
ljmp
and
jbe
xlat
sub
mov
sbb
push
lcall
imul
pcmpeqw
push
mov
sub
decl
mov
xchg
xor
clc
int3
xor
dec
adcb
aad
and
sub
sti
js
jp
pop
mov
sbb
dec
sbb
fidivrs
out
mov
mov
rclb
cmp
mov
mov
sub
jb
adc
test
arpl
mov
test
sbb
mov
xor
push
adc
push
out
or
stc
inc
mov
sbb
fiadds
cwtl
imul
xor
push
xor
lds
stos
js
scas
pop
enter
cmp
rorl
pusha
decl
push
js
push
xchg
and
lods
repz
sub
add
sub
ja
mov
jnp
dec
addr16
add
add
add
stc
in
out
in
jbe
stos
outsb
xchg
outsb
cmp
pop
fwait
mov
inc
pop
fnstenv
and
rorb
addr16
sbb
xor
dec
sbb
and
popa
xchg
xchg
cmp
cmp
and
jo
sub
lcall
cmc
lea
add
popf
mov
lds
adc
push
cld
cltd
xchg
cmp
rorb
or
and
mov
sbb
and
call
insl
and
sbb
cmpb
dec
dec
cmp
das
insl
inc
cmp
push
lahf
adc
mov
call
push
stc
aam
icebp
fnstsw
mov
aaa
or
les
xor
test
and
les
or
jns
push
sub
xchg
les
std
xchg
mov
popa
pop
shrl
push
sub
clc
fbld
xor
push
or
xor
int
mov
jnp
outsl
cmpsb
loopne
std
mov
add
add
add
push
sub
sbb
lea
mov
leave
sbb
inc
dec
cmc
or
or
adc
xlat
fcompl
loopne
push
mov
or
adc
imul
test
outsb
mov
mov
push
addr16
stos
dec
out
cmc
mov
shrl
sub
and
push
jb
shlb
cmpsl
cmp
and
lds
or
sbb
mov
jmp
xchg
loope
into
or
insl
pusha
loop
and
cmp
mov
push
cld
outsl
gs
cmp
in
fstl
cmp
enter
gs
pop
or
mov
mov
adc
sub
push
or
mov
in
push
push
cltd
dec
daa
mov
sbb
sbb
add
cli
lds
add
add
cli
xchg
jle
push
je
jecxz
out
addr16
add
add
add
push
and
sbb
or
inc
push
push
xor
lret
mov
dec
xor
jg
fdivp
daa
pop
or
dec
dec
incl
hlt
stos
adc
hlt
mov
mov
pop
jae
rorl
push
sbb
pop
mov
inc
lahf
cmp
dec
out
in
jbe
gs
jno
push
sbb
push
mov
stos
push
dec
xor
pop
jnp
xlat
mov
mov
lahf
dec
cmp
enter
dec
dec
mov
dec
cwtl
out
push
inc
imul
lea
cmp
inc
popa
mov
pop
sahf
mov
mov
mov
lods
dec
ljmp
mov
jne
xchg
inc
ret
and
adc
cs
or
mov
test
sahf
sti
push
or
dec
je
push
in
rol
mov
pushf
stc
in
inc
aaa
dec
fwait
jnp
aad
sbb
mov
add
add
add
stos
call
mov
std
pushf
ret
in
xorb
out
or
addr16
lcall
mov
lods
push
dec
scas
call
mov
mov
lcall
enter
imul
pushf
sub
aaa
mov
adc
lahf
imul
push
scas
push
lret
jnp
mov
in
es
cmpsb
clc
adc
inc
js
fdivs
mov
pop
dec
lods
push
sbb
fsubp
xchg
xchg
stc
and
hlt
add
push
out
xor
shrb
pop
pop
xor
inc
and
xchg
push
dec
fcoms
xlat
jae
imul
cwtl
es
jge
movsl
test
jge
sti
mov
mov
adc
cwtl
pop
dec
dec
das
xor
pop
imul
jmp
ficoms
fidivl
popa
ret
add
push
hlt
aad
idiv
or
jno
xchg
jno
data16
aas
fcomps
daa
pop
fidivrs
jo
add
add
std
mov
sub
add
add
add
or
pop
xchg
pop
add
add
mov
insl
xor
mov
outsl
push
test
cmp
mov
repnz
inc
in
dec
loopne
lret
inc
dec
adcl
scas
fldenv
test
adc
inc
fsts
inc
fsubp
fisttpll
add
mov
jb
or
adc
out
xor
leave
pop
cli
sbb
xchg
add
mov
xor
inc
fmull
enter
es
lret
mov
sbb
fdivrs
adc
push
out
push
sbb
push
cmpsb
or
imul
gs
adc
or
jmp
mov
mov
testb
inc
fsub
mov
clc
jp
mov
dec
and
mov
les
rcrb
sbb
movl
arpl
add
add
fstl
lret
vmread
add
add
add
hlt
push
adc
lods
adc
test
and
pop
fcmove
loopne
push
or
xchg
adc
je
in
adc
sbb
call
icebp
insl
and
sbb
lods
xor
push
jg
shll
push
aam
mov
lods
dec
fmuls
push
popf
or
mov
lds
or
sti
add
mov
out
adc
push
daa
dec
jo
outsb
jge
jg
mov
cltd
jae
xor
mov
pop
test
adc
andl
mov
ja
dec
arpl
pop
push
add
or
sbb
pop
aas
out
sub
cmpsl
nop
pop
jge
adc
push
push
sub
aas
lds
clc
push
int3
ss
out
adc
ret
cmp
popa
in
pop
repz
repz
test
add
inc
in
mov
mov
out
sub
sbb
js
add
add
add
xchg
dec
push
sbb
dec
fbld
mov
lahf
js
xchg
rol
pushf
ret
rorl
pop
je
mov
mov
fsub
fnstenv
fdivp
pop
call
xchg
sarb
or
rclb
mov
dec
mov
outsb
bound
stos
push
fstps
cmp
xlat
ljmp
lea
push
negb
stos
pop
les
xchg
push
inc
sbb
add
js
leave
cmc
dec
or
in
test
fs
jnp
hlt
rolb
push
pop
mov
mov
add
cltd
das
push
rcrb
cli
inc
shrl
xor
mov
cmp
push
rorl
fs
icebp
insb
jp
dec
int3
mov
testl
or
push
popf
nop
imul
idivl
flds
and
inc
pop
pop
jne
ror
and
clc
sbb
adc
add
add
divl
in
sub
addr16
add
add
add
scas
lods
adc
push
ret
push
or
insb
shll
dec
lods
into
xchg
xor
jbe
mov
add
test
lock
daa
mov
mov
mov
mov
xchg
jne
ljmp
cli
sub
inc
mov
fdivl
call
push
repz
sub
sahf
cmp
cmpsb
aas
mov
adc
and
mov
add
mov
repnz
arpl
dec
dec
mov
cmp
and
repz
gs
xor
std
jb
dec
push
xchg
add
addr16
in
cmc
pop
sarl
insb
sbb
in
add
push
jg
adc
in
sbb
insb
and
pop
mov
xchg
xchg
test
xlat
xchg
fcoms
daa
call
je
cmpsb
aaa
adc
cltd
jecxz
aas
pop
insb
ror
sub
mov
fsts
add
clc
fisubs
mov
mov
lods
addr16
add
add
add
jbe
sub
gs
cmpb
lcall
push
movsb
sub
mov
out
sbb
test
xchg
sahf
addr16
mov
hlt
dec
mov
dec
push
sahf
scas
aad
adc
fsubr
loope
insl
cmpsl
sbb
xchg
adc
inc
rclb
jne
loopne
add
lock
aad
inc
xchg
jbe
fistl
insb
mov
mov
jbe
mov
mov
ss
or
dec
mov
test
stc
adc
je
adc
xchg
and
mov
jg
icebp
pusha
add
cld
outsl
in
pop
aad
popa
int3
lods
xor
sub
sbb
jmp
cmpsl
xchg
add
sub
rcr
or
popa
mov
jno
adc
jns
enter
push
in
push
sub
add
sbb
jae
mov
movb
mov
add
shlb
mov
push
nop
push
addr16
add
add
add
xchg
int3
jge
cli
add
xchg
cmc
and
lods
pop
cwtl
jbe
xor
add
jmp
jp
xor
xchg
fnsave
and
shll
stos
fcmovnbe
xor
xchg
xchg
notl
mov
jp
sbb
iret
lret
sub
les
or
push
ret
xor
cmp
mov
lret
leave
je
push
push
xchg
jge
xchg
out
sbb
je
sbb
jp
mov
or
shl
sbbl
mov
cmp
repnz
repz
sub
imul
out
enter
aam
mov
sbb
jnp
add
push
push
inc
negl
add
dec
mov
test
mov
inc
sbb
push
fcmovbe
mov
dec
sub
leave
xchg
inc
xchg
adc
pop
jbe
hlt
jae,pt
bound
inc
cmp
add
add
testl
mulb
add
add
add
and
fistpll
scas
dec
or
and
jp
or
test
sub
lcall
xchg
adc
cltd
push
negb
adc
daa
popa
mov
sub
push
mov
xchg
fistpll
pop
mov
cmp
int3
xchg
xchg
pop
pushw
jl
and
or
inc
adc
pop
js
fiaddl
jmp
addl
lea
pop
lcall
xchg
dec
std
jo
and
les
mov
clc
xor
xlat
mov
pop
inc
lods
shrb
push
inc
mov
aad
sbb
jmp
jle
jo
push
insl
test
xchg
loope
mov
and
xor
call
inc
or
mov
mov
fistpll
and
xchg
dec
fisubs
sbb
popf
cmp
mov
pushl
insl
push
pusha
je
in
fmuls
add
ljmp
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
iret
mov
mull
lret
add
sbb
test
loopne
hlt
inc
in
mov
ror
or
fldt
push
or
inc
lods
test
sub
jp
mov
clc
mov
aam
imul
pusha
sahf
cmp
sbb
je
and
sbb
sbb
subb
sahf
ljmp
cmc
or
cmp
pop
in
fwait
loopne
jg
jno
jmp
or
rcl
sub
jbe
test
adcl
fst
pop
sahf
dec
inc
adc
insl
add
pop
int3
in
xchg
movsb
clc
add
out
les
xchg
mov
clc
ljmp
sbb
ljmp
orl
push
je
or
xor
daa
ficompl
and
xchg
push
sbb
roll
xor
push
insl
rcll
inc
cmp
pop
sti
push
mov
add
cmpsb
push
sbb
lods
mov
add
add
add
loope
push
xor
ret
sbb
mov
dec
popf
adc
dec
inc
notl
inc
out
icebp
daa
cmp
add
popf
sahf
jmp
nop
mov
jns
lahf
mov
add
mov
adc
movsl
xor
push
lret
imul
sbb
jl
sub
dec
jmp
push
inc
jecxz
iret
cmp
cli
xchg
mov
mov
and
shlb
mov
push
cmp
xchg
imulb
fisubrs
mov
lcall
aaa
fsub
faddl
lahf
lods
xchg
xlat
xor
dec
data16
mov
xchg
arpl
pop
adc
inc
cmp
dec
cmp
bound
fsubrl
dec
and
test
repz
lcall
lods
sub
out
fsubrs
outsb
mov
clc
lds
jns
lret
roll
jbe
cmpsl
popf
mov
sldt
add
xor
cli
mov
icebp
and
add
add
add
into
add
mov
dec
fwait
addr16
lods
pop
enter
jb
repz
cmpsw
add
cltd
sub
or
addr16
xor
push
push
xchg
fs
stos
mov
push
and
pop
sbb
cmp
xorb
mov
das
popa
out
imul
adc
cmp
or
lret
sbb
xlat
xor
cmp
je
mov
jno
add
mov
add
mov
jle
fidivrs
stc
mov
cld
jg
lahf
push
jmp
cs
xchg
lds
cwtl
pop
pushf
mov
mov
pop
call
icebp
popa
cmp
mov
mov
xchg
push
repnz
or
popa
scas
loope
in
ja
inc
lock
addb
push
jge
fisttpl
fs
cmpsl
movsl
mov
cltd
leave
sbb
sahf
push
movsl
jb
jl
push
add
jnp
aas
out
std
test
lcall
sbb
addb
add
add
fldl
ret
movsb
lcall
insl
and
xchg
das
test
shll
cli
or
mov
scas
pop
mov
int
sbb
adcb
xor
subl
cmpsl
dec
cmp
jno
nop
or
pop
mov
jg
repz
push
sub
dec
int3
aad
fimuls
pop
dec
insb
fwait
enter
mov
or
lahf
and
popa
jb
xchg
pop
ds
push
jmp
stc
pop
lock
inc
inc
jnp
pop
add
mov
test
stos
loop
out
movsl
sbb
sarl
mov
movsb
jle
xchg
xchg
pop
push
mov
aas
cmp
sub
fcoms
enter
cmp
inc
cmpsb
push
scas
daa
movhlps
pop
mov
rorl
pushf
mov
push
insl
adc
inc
cwtl
cmp
testb
daa
mov
hlt
addl
add
jb
test
inc
inc
aad
cmc
and
in
jo
mov
xchg
loopne
push
push
gs
loopne
scas
xor
cmp
adc
sar
cmpsb
jmp
ss
mov
xor
movsl
aaa
dec
aam
push
pop
inc
movsb
ret
inc
jne
pusha
sahf
cmp
push
or
ret
jg
test
scas
sahf
dec
sbb
jge
icebp
mov
bound
jp
out
loopne
mov
or
mov
cs
nop
pop
jge
rorb
cmp
add
jae
shrl
add
push
add
repz
push
push
xlat
push
mov
outsl
loop
mov
mov
call
scas
dec
mov
stos
lret
lret
fs
lcall
int
add
or
xlat
jp
adc
lock
sub
jb
jp
cli
inc
sbb
cmp
inc
movsb
or
push
mov
scas
lcall
adc
sbb
aas
shrl
push
addb
add
add
jl
icebp
pop
or
jo
mov
andb
insb
pop
adc
stos
andb
xor
pushf
loope
loop
das
popf
cmc
inc
leave
xchg
fisubl
mov
in
js
ljmp
inc
cwtl
mov
outsb
xchg
sub
add
cmp
gs
xchg
cmp
and
pop
data16
iret
or
cwtl
cs
push
cmp
xchg
scas
aam
push
mov
add
xchg
aad
outsl
xchg
outsl
fstpl
xor
jnp
movsb
test
fdivrs
and
in
insl
sub
int3
add
popa
cmp
add
mov
mov
fisubs
inc
pop
dec
mov
push
xchg
push
pop
mov
das
lret
or
adc
dec
leave
lock
test
add
call
jb
nop
xchg
fmul
adc
or
jg
cmp
add
mov
idiv
jne
iret
std
mov
add
add
add
leave
andl
aaa
sub
ds
mov
iret
outsb
les
xchg
pop
lret
sbb
je
dec
cmpsb
pop
stos
push
cmp
int
sbb
mov
scas
xor
lock
sub
sub
xor
dec
dec
decb
adc
sysret
inc
adc
xor
pop
jno
mov
push
bound
cwtl
mov
int3
mov
mov
xor
inc
xchg
mov
call
addb
sub
pop
or
sub
lahf
aam
bound
xchg
out
test
pop
hlt
in
enter
mov
cmp
shll
mov
jae
add
mov
push
test
pop
fadds
les
xorl
sbb
sub
mov
xor
jp
or
movsb
mov
add
inc
es
orb
add
pushl
sub
mov
negb
add
add
push
xchg
lea
mov
loopne
add
sbbl
adcl
inc
jmp
mov
shll
in
sub
jne
pop
rolb
iret
cmp
addb
es
sub
xor
sbb
pushf
fistl
test
outsl
inc
sarl
cmp
cld
out
mov
inc
mov
or
push
mov
sub
fwait
cmp
sub
inc
add
daa
into
mov
fwait
adc
adcb
or
das
cmp
mov
jae
outsb
add
out
xchg
fwait
sbb
lahf
fstpl
in
ror
sarl
xchg
mov
addb
popa
adc
std
add
cs
jmp
cmpsl
inc
imul
fldt
adc
push
xlat
adc
test
sub
cld
les
jecxz
adc
add
add
sti
iret
ss
push
jno
sbb
dec
test
add
add
add
mov
or
movsb
add
pusha
jbe
ret
sub
pop
sub
pop
hlt
mov
cmp
pop
mov
xor
adc
mov
push
adc
mov
iret
data16
stos
pusha
sahf
adc
xor
xchg
rorb
sub
lret
cmpsb
push
sub
or
sbb
ss
cmp
loop
inc
pop
jp
and
and
leave
scas
mov
jo
xor
bound
int3
xlat
mov
in
sbb
cld
jns
and
or
xchg
jbe
loop
mov
hlt
sti
cmp
and
scas
addl
and
jge
pop
mov
jo
cltd
pop
sarb
push
adc
add
push
jmp
inc
mov
push
cld
jle
fs
hlt
dec
into
or
iretw
aad
in
xor
xor
jecxz
imul
sub
repnz
cmp
mov
mov
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
rcll
xchg
add
add
add
or
int
in
mov
gs
int
imul
cs
pop
sub
sbb
shl
pusha
xchg
into
pop
popa
shll
push
lds
out
xor
stc
sbb
mov
add
cmp
test
filds
stos
push
push
xor
jae
add
pop
push
hlt
mov
stos
lods
mov
sub
sub
addb
into
mov
or
push
jge
pop
inc
lret
adc
sti
outsb
add
cli
addr16
dec
fists
clc
sub
jne
xor
jne
or
add
jge
cli
push
and
js
xor
and
mov
les
aam
popl
push
addl
adc
push
fst
ja
sbb
mov
xor
pop
pop
push
or
outsl
fsubp
scas
pop
fs
insb
dec
pop
ss
xchg
jns
sub
nop
or
js
pop
popa
inc
cmpsl
pop
xchg
mov
mov
mov
mov
add
add
add
int3
push
popf
cmpb
jb
or
dec
xlat
sbb
jp
or
repz
push
lods
popf
out
mov
addr16
inc
push
icebp
popf
ret
call
nop
xlat
inc
jmp
dec
inc
add
or
jle
ror
jbe
outsl
pop
or
dec
jo
push
stos
jbe
mov
enter
dec
and
push
cmp
movsb
cwtl
mov
lock
adc
adc
or
aad
cli
cld
jae
les
pop
jo
loopne
xor
sub
cwtl
mov
sti
mov
sahf
cmp
testl
or
loopne
stos
out
cmc
or
jl
popa
fwait
adc
gs
fdivl
ljmp
jns
lahf
jno
jno
std
xchg
dec
test
pushf
popf
cwtl
or
test
cmp
jl
outsb
jp
popa
inc
sub
or
and
cmp
add
and
out
ljmp
lock
xchg
cmp
add
mov
add
add
add
push
adcb
mov
loop
mov
adc
jmp
pop
and
add
bound
xchg
aaa
inc
out
xchg
icebp
enter
clc
lds
mov
push
jecxz
out
les
xor
inc
daa
fistl
imul
jp
adc
adc
sti
push
sarb
cmp
or
push
sbb
push
cmp
pop
inc
dec
lds
lds
sbb
aam
xchg
adc
daa
adc
iret
and
scas
push
xchg
adc
push
mov
add
mov
cs
scas
or
jns
pop
iret
das
mov
xchg
cli
inc
mov
xor
sub
leave
sbb
dec
gs
jecxz
test
lahf
mov
faddl
aad
fmull
cmpsl
out
xchg
inc
int3
sub
mov
mov
ret
in
fsubr
enter
cltd
popf
sub
pop
std
mov
imul
push
jnp
sbb
push
xor
enter
mov
add
add
add
outsl
jecxz
jne
mov
imul
fsubp
lahf
pushf
cmpsl
hlt
cmp
enter
cltd
pop
sub
lods
fcompl
push
stc
mov
jne
sub
loop
outsl
dec
mov
sbb
call
stos
push
jle
mov
dec
adc
xchg
enter
dec
xorb
add
inc
outsb
cmp
sbb
adc
cmpsb
pop
inc
imulb
xor
scas
sbb
dec
xchg
and
sub
inc
nop
je
sbb
or
mov
xorl
leave
push
mov
repnz
cmp
pop
dec
test
or
xchg
xor
adc
loopne
cmp
imul
aam
add
push
lcall
pop
cld
lds
inc
mov
insl
int3
and
fwait
in
cmc
mov
movsl
push
sbb
test
js
xchg
add
aas
sbb
cltd
andb
mov
ljmp
add
push
aas
or
mov
frstor
inc
mov
add
add
add
pop
stc
sti
popfw
jp
push
testl
jl
cli
pusha
loop
mov
cmp
cmp
repnz
mov
fisttpll
jmp
pop
dec
sbb
fldcw
repz
cmp
jnp
and
xor
insb
xor
mov
out
aad
daa
out
mov
call
pop
inc
xor
adc
cwtl
xor
shrl
lcall
inc
xor
loopne
fistps
mov
fsubs
roll
icebp
outsb
movsl
insb
jbe
push
popf
mov
dec
sti
dec
cld
dec
push
call
loopne
or
xor
dec
push
mov
xchg
addl
sbb
xor
adc
dec
mov
out
or
sbb
mov
push
pop
inc
adc
inc
addr16
iret
cmp
or
leave
lock
add
insb
fidivl
bound
jle
mov
add
add
add
leave
sarl
test
xchg
xchg
sub
mov
inc
sub
dec
mov
xchg
mov
jnp
sub
ret
rcrb
jmp
test
jbe
je
mov
jb
roll
sub
idivb
push
scas
push
xchg
dec
test
cmp
repnz
push
push
jb
int3
xor
sahf
jns
mov
test
or
pop
sbb
adc
sti
int
push
clc
lea
clc
and
push
loop
mov
ljmp
call
and
shrb
sarl
adc
mov
and
inc
pop
mov
adc
adc
test
ret
stos
movsb
or
cmp
pushf
dec
fistps
addr16
push
movl
movsl
inc
andl
mov
leave
imul
add
cmp
mov
jns
das
jl
mov
add
add
add
cwtl
leave
subl
fsubrs
adc
in
xor
ss
ret
xchg
cmp
add
push
inc
mov
add
xor
cwtl
sbb
movsb
mov
cmpsl
push
dec
fnsave
or
pop
not
push
add
pop
xor
jb
pop
push
les
xchg
test
movsb
inc
das
lock
iret
inc
scas
in
fnstcw
aas
mov
imul
std
sbbb
inc
lea
adc
sub
loopne
int3
cmp
or
jg
ret
pushl
lock
leave
and
or
jecxz
adcb
mov
push
sub
mov
mov
push
test
addr16
test
add
mov
jl
jmp
iret
jae
sub
inc
pop
inc
movsl
sbb
sub
or
stc
xchg
push
pop
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
clc
adc
add
add
add
cmc
or
in
xchg
mov
scas
jp
in
push
mov
mov
fisttpll
xor
test
inc
mov
sub
aas
inc
xchg
pop
leave
pushf
push
cmp
push
scas
and
mov
jo
jo
mov
std
ja
sbb
mov
sbb
xor
mov
scas
push
bound
mov
inc
mov
pop
mov
test
stos
pop
pop
shlb
ffree
cmpunordps
sbb
rcrb
rol
or
add
mov
jmp
and
push
xor
mov
int3
faddl
str
repz
icebp
add
sbb
cmove
fndisi(8087
aaa
pop
and
divb
cmp
xchg
jge
xchg
dec
pushf
mov
test
mov
pop
out
mov
jge
pushf
xchg
push
add
insl
test
add
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
push
pop
addl
lret
push
and
pop
lea
repz
lods
add
jae
loopne
xchg
data16
dec
or
cld
or
cs
frndint
rolb
xchg
pop
pop
scas
test
mov
scas
xchg
loope
rcr
jge
jnp
pusha
jge
mov
dec
xor
rol
call
ss
out
adc
pop
push
in
jno
xor
jns
push
push
loope
lea
roll
lret
leave
mov
mov
in
cmp
add
xchg
pop
sbb
int3
mov
xchg
and
roll
fsubp
pop
mov
loopne
sbb
fnstenv
mov
std
pop
sub
mov
cmpsb
popf
xor
or
jg
insb
cmp
jge
cs
cltd
je
out
xlat
xchg
sbb
xchg
or
dec
xor
jae
fstpl
aam
imul
pop
aas
xchg
inc
out
jp
fildl
add
add
mov
icebp
lods
push
add
add
add
in
dec
mov
in
or
add
cmpl
jl
sub
mov
jne
jmp
jo
jle
xor
lods
or
jo
lods
push
jl
push
or
mov
sub
mov
test
bound
flds
jg
xor
je
aas
push
mov
decb
fs
gs
sub
mov
or
add
test
rorl
fistps
pop
inc
daa
add
jne
lea
xchg
push
stos
mov
fcomps
imull
sub
ficoml
std
push
adc
mov
dec
pop
mov
stos
insb
jns
add
ret
fnsave
push
mov
lret
xor
and
adc
xchg
movsl
xchg
jge
int
sarl
jns
shlb
mov
lods
push
lock
dec
sub
inc
or
test
fcomps
add
lods
pop
das
addr16
add
add
add
fsts
fwait
rcrl
insb
sub
lods
mov
sub
mov
add
andb
mov
cltd
mov
xchg
fisttpl
loopne
das
pop
or
repnz
cmp
pop
jno
btr
mov
xchg
bound
in
add
dec
dec
fchs
mov
sbb
or
push
fildll
and
mov
out
out
sub
jecxz
cmp
imul
push
popa
dec
test
adc
mov
and
gs
mov
dec
push
sub
dec
and
pop
xchg
jg
test
mov
ret
mov
xor
cmp
mov
dec
jl
and
into
inc
in
mov
sarb
xchg
arpl
scas
or
and
cmp
repz
scas
adc
ljmp
dec
mov
rcrb
xchg
add
add
add
add
cmp
or
adc
sbb
int3
dec
cmp
jmp
push
sti
dec
jbe
xchg
fdivl
lea
mov
aad
loopne
shll
outsb
xchg
xchg
rol
ret
sbb
js
shrl
scas
adc
fcmovnbe
movsb
outsl
push
xchg
aad
leave
and
repnz
imul
daa
sub
jno
mov
dec
xchg
movsb
bound
push
mov
mov
insl
jae
mov
dec
lods
jmp
jmp
fmull
enter
inc
sbb
add
cmp
jmp
jl
inc
jae
orb
mulb
push
jp
ror
mov
mov
mov
lods
jnp
sub
mov
jle
insl
ja
pop
gs
xor
aas
xchg
sub
nop
ds
imul
les
shl
mov
stc
dec
cltd
cmc
rcrl
add
add
aaa
shlb
cmc
div
testl
mov
add
add
loope
inc
cwtl
loope
or
test
data16
xchg
hlt
lock
pop
ficoml
in
rcll
pop
ret
arpl
xor
jmp
movsb
cltd
xor
pop
mov
shr
inc
lock
adc
pop
inc
lods
rolb
xor
mov
jbe
mov
mov
adc
mov
and
cmp
sbb
insb
imul
dec
push
dec
mov
inc
mov
shll
aam
cmc
mov
cmp
out
movsb
stos
adc
push
fstpl
adc
fnstcw
fisubrl
jnp
repz
in
cwtl
popa
push
lods
aam
insb
arpl
pop
add
insb
jmp
xchg
out
xor
insb
repnz
aas
cmp
and
add
lds
rorl
bound
jnp
andb
jbe
int3
jne
jge
mov
sarb
cmp
pop
push
nop
push
sahf
rcr
pop
adcb
sbb
mov
addr16
add
add
add
mov
dec
xchg
push
rorb
cmp
fstpl
scas
test
add
mov
test
daa
out
mov
test
jecxz
mov
nop
ja
scas
pop
push
in
push
or
and
dec
mov
inc
sub
jno
into
rorl
int3
fisttpl
ss
sti
enter
repnz
push
lret
xlat
xchg
push
mov
call
sbb
mov
cltd
cmp
int
cmpsb
imul
mov
fisttpll
xor
and
andl
sbb
loopne
fdiv
fchs
sbb
jb
mov
outsb
test
pop
push
fidivl
lea
jns
jle
lret
fdivrs
pop
fsubp
and
clc
pop
test
cmp
movsl
or
movsl
dec
js
jg
push
mov
xor
mov
add
shll
cmpsb
jcxz
fimull
addr16
add
add
add
ja
push
jnp
mov
jle
mov
sub
xchg
cmp
xor
in
sub
xchg
push
push
stos
inc
insl
ljmp
cltd
mov
out
mov
jb
fcmovne
jp
iret
xchg
push
lock
jnp
in
xchg
cmc
sti
add
push
shlb
aas
inc
lods
pop
test
hlt
mov
add
ljmp
rcrl
ss
lods
xchg
adc
mov
mov
xor
ljmp
cmp
mov
sub
sbb
fbstp
std
cmp
sub
fnstenv
cmpsl
rcrl
push
aaa
sbb
mov
sub
xor
das
xor
xor
clc
sub
cs
stos
loopne
enter
fistpl
shlb
imul
jmp
mov
ror
in
jmp
xor
clc
jnp
jg
in
cli
enter
das
aam
popf
addr16
add
add
add
pop
out
ljmp
mov
mov
out
dec
sti
inc
or
pusha
cmpb
mov
and
jmp
mov
sarl
idivl
sti
mov
icebp
add
push
cmp
mov
dec
pop
dec
xchg
cmpsl
jl
mov
inc
mov
shl
ljmp
repz
push
lret
mov
pusha
add
shl
xor
rolb
fists
ret
into
test
sub
xor
shr
and
pop
outsb
lods
fimuls
dec
jnp
inc
loope
jl
jg
cs
lcall
stos
pop
mov
dec
fsub
scas
cs
mov
or
je
repz
dec
movsb
cld
jb
imul
sbb
and
lcall
inc
jne
lods
xchg
ret
fistpl
outsb
push
decb
repz
pusha
xchg
xor
sbb
fwait
js
jl
mov
sbb
xor
xorl
add
lods
faddl
fbstp
cld
gs
mov
addr16
add
add
add
add
mov
dec
mov
mov
out
and
out
push
std
fbld
lret
imul
daa
add
add
cld
stc
call
aaa
fdivrs
mov
inc
or
std
mov
int3
lahf
dec
movsl
test
mov
addr16
outsl
cwtl
icebp
inc
jmp
mov
mov
cmp
dec
add
incl
imul
daa
ficoms
xor
aaa
mov
test
mov
pop
daa
movups
sbb
mov
mov
aam
adc
cs
aam
jmp
in
pop
mov
repnz
or
sub
jmp
mov
push
jmp
sub
in
push
movsl
es
add
inc
mov
call
sbb
shlb
outsb
dec
mov
pushf
push
xchg
push
xchg
jecxz
add
add
jl
sar
std
jle
pop
popf
scas
pop
push
sbb
xchg
add
add
add
pop
lret
lcall
push
out
xchg
clc
nop
mov
jae
hlt
add
pop
add
inc
jmp
sub
or
shl
mov
cmp
push
inc
inc
xor
js
jnp
stos
mov
insb
nop
stos
pop
adc
push
and
scas
push
clc
cmc
sbb
dec
out
pop
hlt
fsubl
mov
stos
inc
jns
pop
sti
jmp
stos
movsb
and
and
cwtl
iret
idivl
push
dec
mov
idivb
int3
mov
mov
push
mov
xor
mov
pop
jno
pop
inc
push
jl
std
cmp
cwtl
out
leave
xor
dec
sbb
into
cmp
scas
lods
pop
dec
stos
loopne
push
sub
push
jle
gs
sahf
sbb
adc
mov
insl
xor
dec
insl
and
lret
out
push
stos
push
sub
cmp
cmp
in
mov
repz
addr16
add
add
add
xchg
js
lock
outsb
xlat
mov
aam
or
ret
daa
or
int3
rorl
sarl
mov
lea
hlt
icebp
scas
sub
inc
outsl
cmpsl
cmp
out
push
imul
xchg
mov
mov
dec
iret
out
fcmove
jno
xchg
jp
push
mov
xor
sub
pop
mov
test
sti
imul
loope
xor
inc
movsl
adcb
test
pop
stos
cmp
jns
pop
js
pusha
jne
pop
mov
and
in
lea
out
add
sbb
fwait
lahf
std
push
and
loopne
fsubs
mov
addb
fistpll
js
dec
xchg
mul
lahf
xchg
sub
flds
mov
fidivl
pop
lcall
push
pop
mov
xchg
mov
scas
ret
add
fwait
and
popa
mov
xorl
addr16
add
add
add
gs
inc
inc
stc
xchg
loope
mov
inc
xchg
pop
fs
xlat
sahf
aam
pop
pop
adc
scas
je
push
xchg
rorb
mov
xchg
mov
and
lret
fcomps
and
imul
mov
loop
push
mov
hlt
add
dec
add
adc
ja
sub
or
and
and
push
sub
lret
pop
icebp
push
icebp
sbb
pop
adcb
sub
push
jle
mov
loope
das
dec
inc
xchg
stos
in
jle
mov
push
fstps
into
push
test
inc
mov
ss
or
sub
sbb
xlat
pop
xlat
adc
pop
jmp
mov
cmp
call
inc
outsl
fs
in
xor
or
cmpsb
pop
call
lock
je
mov
mov
push
in
aaa
in
mov
pop
pop
shll
add
lret
movsb
xorb
jne
push
and
xlat
aas
dec
sbb
or
addr16
dec
addr16
sub
lods
out
mov
push
mov
enter
push
mov
mov
icebp
jo
or
jl,pt
ss
rorl
sub
push
daa
push
push
sbb
or
jnp
push
lcall
pop
test
cmp
cli
mov
sbb
cmp
xchg
fcomps
ljmp
pop
mov
mov
and
aaa
jmp
xchg
cmp
dec
gs
ror
jle
std
insb
and
add
in
cs
and
sahf
std
stc
mov
push
mov
xchg
cwtl
cmp
adcb
inc
push
mov
call
or
dec
filds
aas
jle
stos
mov
mov
push
add
push
imulb
cmpsl
fcmovb
mov
lret
cmc
ja
loope
stos
aam
out
imul
outsl
vmwrite
fbld
add
add
add
cli
add
adc
mov
in
mov
and
or
jg
sub
inc
jo
pop
dec
adc
push
pop
sub
inc
adc
inc
sub
adc
aam
rcrl
jmp
cmp
xchg
lret
das
or
push
lods
mov
jnp
inc
inc
xchg
pusha
out
imul
je
das
enter
movsl
scas
adc
aaa
push
add
test
xor
iret
jl
cli
sahf
out
fldl
sub
stos
mov
push
adcl
xchg
and
adc
push
sub
mov
mov
cmp
xchg
mov
dec
js
xor
addr16
or
and
in
aam
mov
jb
icebp
push
call
popf
dec
loopne
rclb
enter
sub
rcll
add
gs
inc
xchg
push
ret
scas
out
fwait
out
repz
jnp
enter
jno
add
add
lret
sbbl
popl
jae
addr16
add
add
add
jb
and
or
xor
pushf
dec
pop
imul
push
mov
or
xlat
daa
xor
xchg
inc
sbb
and
loopne
in
mov
mov
pop
ror
dec
fidivl
or
mov
test
addr16
pop
inc
stc
out
fcomps
outsl
add
mov
cld
clc
les
fwait
sub
cmpsb
movsb
pop
cmp
pushf
std
or
push
xor
mov
dec
sahf
mov
lcall
fldenv
sub
in
cmp
push
ljmp
mov
pop
cmc
loop
in
mov
inc
dec
fwait
sbbb
je
mov
inc
daa
lret
ds
xor
adc
sbb
inc
aas
subl
sahf
sbb
sub
nop
or
pop
aas
or
loop
add
add
imul
movsb
and
xchg
outsb
js
addr16
add
add
add
pop
les
push
popf
or
fisubrs
xchg
adc
mov
jmp
or
mov
fmul
lods
or
xchg
aad
fisubs
adc
adc
das
aam
out
pop
cmp
mov
movsl
ljmp
addr16
sti
inc
jne
add
or
push
adc
xor
lcall
adc
xchg
inc
jnp
jl
and
les
lock
insl
rcl
pop
pop
les
or
push
ret
mov
and
add
jg
lret
xchg
cmp
lcall
aaa
cmpsb
mov
aaa
adc
push
push
add
xor
cmp
push
icebp
inc
or
xor
dec
mov
insb
fiadds
cmp
pop
lret
cli
dec
push
imul
xchg
daa
dec
push
js
cmp
lret
movd
bound
test
sti
sub
mov
jge
jg
ljmp
in
lahf
mov
sahf
add
add
add
xor
and
dec
sbb
adc
decl
nop
jae
lea
and
ja
push
filds
mov
adc
test
mov
mov
mov
adc
aaa
sbb
or
sub
dec
movsb
add
cltd
mov
sti
xchg
out
mov
add
out
mov
gs
mov
xchg
lret
mov
inc
cmp
outsl
pop
push
out
and
sahf
shll
dec
xchg
cmp
mov
andb
pop
ljmp
or
fisubl
orb
sub
ja
mov
xor
push
dec
call
mov
fimuls
sarl
ljmp
mov
data16
jp
xor
insb
pop
rcll
pop
xor
inc
jg
and
clc
or
or
inc
pop
stc
sub
inc
cmpsb
out
negl
xchg
sbb
or
sub
icebp
adc
xor
add
add
ja
out
inc
sub
or
loop
mov
add
add
add
cmp
or
pop
or
sbb
pop
or
xor
or
rcr
test
rep
imul
sti
pusha
jp
fucomip
fisubrl
xchg
dec
mov
lret
das
rol
ret
fcomp
inc
ret
lahf
sti
sahf
scas
rcl
pop
aaa
cli
repz
loop
daa
int3
add
ljmp
in
dec
out
cltd
test
ss
stc
movsl
outsb
jbe
sub
xchg
jge
repnz
movsl
pavgw
les
aad
xchg
jmp
push
out
sbb
pop
daa
inc
jmp
and
jnp
pop
pusha
into
cwtl
and
pop
rclb
push
inc
cmc
je
ret
adc
adc
lret
sub
sbb
fsts
int
pop
pusha
scas
xchg
cltd
out
push
test
mov
push
sub
cmc
mov
push
imul
add
fcmove
sbb
divb
pop
loop
test
mov
cld
mov
addr16
add
add
fisttps
popa
mov
loopne
jne
out
cmp
fcomp
mov
into
cmp
push
cmp
push
jo
shlb
std
mov
inc
dec
inc
pop
dec
mov
sbb
and
lea
and
cs
stos
loope
movsb
jmp
cmc
nop
mov
loop
daa
mov
jecxz
stc
sbb
andb
movsb
sub
mov
cmp
enter
sbb
add
lock
lcall
popf
jmp
sbb
iret
daa
xchg
jno
dec
push
es
les
mov
insl
js
dec
fnstenv
jmp
pop
mov
push
movsl
out
push
mov
in
aad
xor
aam
in
es
pop
xchg
sub
pop
and
fildll
fdivp
pop
movsb
push
inc
lods
rorl
mov
mov
iret
movsl
lock
sub
or
lcall
es
add
add
add
pop
dec
fnstenv
das
test
fsts
dec
notb
sti
popf
mov
xchg
int3
sbb
imul
imul
sbb
call
xor
repz
das
popa
test
pop
ret
sbb
aas
fcmovb
mov
mov
sbb
mov
pop
and
shlb
cmp
fpatan
lret
jae
xor
out
fcomps
pop
mov
inc
mov
xchg
jns
inc
inc
cmc
hlt
pop
in
or
addr16
add
jo
mov
lret
add
aam
and
test
rcrb
jnp
push
cmpl
adc
dec
in
repz
dec
int3
push
sbb
repnz
sub
dec
sub
insb
mov
inc
fistpl
xchg
es
cmc
movsl
lea
movsb
mov
mov
inc
inc
add
mov
add
inc
and
aas
mov
fimuls
push
aam
outsb
out
aam
adc
out
daa
ds
xor
or
arpl
pop
testb
mov
add
out
xchg
daa
ds
ss
sbb
les
cmp
cli
movsb
in
ds
mov
adc
outsl
ret
mov
mov
and
mov
pop
scas
adc
mov
xlat
incl
daa
mov
jg
mov
leave
add
jmp
xchg
pushf
jp
dec
cmpsl
push
xchg
cld
das
xchg
clc
andb
cmp
push
xor
push
loopne
fldcw
or
and
shll
mov
inc
clc
imul
push
adc
inc
addr16
repz
xlat
jno
pop
rorl
shll
lods
add
pop
stos
cmc
cs
sub
or
test
mov
imul
xchg
aam
fbstp
add
std
inc
mov
xor
add
add
and
cmp
jp
ret
subb
daa
cmpsl
sbb
hlt
inc
clc
cmpsb
jp
or
jle
push
int3
fcoml
imul
es
lahf
aaa
jbe
je
mov
push
push
adc
push
rolb
test
xor
fnstenv
mov
cwtl
push
inc
popf
loop
clc
xchg
cli
inc
outsl
add
test
popf
mov
sbb
lea
add
push
mov
cld
repnz
hlt
test
shll
adc
jne
insl
scas
add
dec
pop
sahf
xor
and
xchg
inc
mov
mov
push
ret
mov
aaa
xorb
mov
bound
xchg
jg
sub
jnp
xchg
lds
icebp
cmp
std
add
xchg
flds
push
test
lds
add
push
xchg
cld
jo
fisubs
fprem1
repz
out
add
push
lods
fldl2e
mov
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
xor
cld
pop
lcall
stos
xchg
cli
mov
push
adc
int3
mov
push
fadd
ja
jecxz
int
scas
pop
fnstcw
mov
xchg
cltd
pushf
xchg
xor
sbb
in
add
xlat
inc
push
sub
xor
pop
icebp
outsb
push
or
fdivp
lea
xor
das
iret
or
or
enter
leave
popf
jno
ret
mov
sti
add
add
xor
ret
inc
mov
mov
out
shrl
mov
rcl
inc
pop
ljmp
in
xchg
cmpsb
repz
pop
mov
jl
mov
fdivrs
sub
lods
jmp
mov
push
addr16
dec
xchg
ds
xor
jp
push
test
inc
repz
int
insb
out
int3
rcr
outsl
and
or
out
stos
movsb
mov
stos
fwait
mov
xlat
enter
pop
outsb
or
add
add
sbb
mov
sbb
movsl
add
add
add
push
cmpl
jno
pop
int
popf
into
push
mov
enter
add
call
push
popa
test
push
and
sub
in
test
add
aaa
xchg
xchg
inc
push
sub
cmp
push
xor
xlat
ljmp
jge
xor
cwtl
jecxz
mov
pop
clc
jo
lret
stc
cld
pop
jbe
repz
ficoms
pop
test
rcll
clc
sbb
aaa
icebp
scas
push
xchg
ja
push
dec
lods
lahf
pusha
cld
push
inc
mov
add
mov
pop
test
int3
add
out
ffreep
sub
rorb
xor
mov
in
rcrl
cmp
ror
sub
pop
sub
sub
leave
jne
stos
out
pusha
js
stos
or
fsub
js
clc
lret
aas
or
addr16
loop
fldl
jecxz
roll
scas
je
lods
addr16
pop
pusha
in
add
add
pop
test
stos
hlt
jmp
cmp
jbe
mov
cmpsb
add
add
add
cmpsl
or
inc
ljmp
xor
cmp
ja
cs
adc
mov
cmp
pusha
mov
divb
popf
stos
pop
mov
mov
imul
mov
ds
jge
jecxz
inc
xchg
fistpl
pop
ret
mov
or
dec
in
pop
lds
out
in
xor
and
sbb
cmp
fisubl
sbb
add
lcall
adc
mov
and
enter
addb
popf
sub
sbb
jns
std
mov
mov
push
in
lret
lea
jmp
movsb
mov
jmp
or
adc
inc
mov
testb
add
ds
shll
mov
int
or
inc
inc
iret
mov
sub
push
movsl
jne
std
imul
fcmovu
loope
jbe
dec
stc
jb
dec
cmp
stos
es
leave
in
enter
into
aaa
pop
xchg
xor
movl
add
add
push
nop
out
xlat
out
jg
in
xor
fnstcw
cmpsl
add
add
add
iret
mov
insl
pop
cwtl
cmp
xchg
mov
test
movsl
mov
cmpb
push
insl
jmp
and
and
dec
cmp
xor
cmp
inc
jnp
sti
adcl
sbb
sub
mov
arpl
cmp
call
inc
xchg
adc
jle
rcrb
negb
push
adc
cmp
pushf
insb
mov
popf
mov
pop
arpl
test
scas
sub
ror
sub
inc
push
incl
lock
inc
mov
jno
jne
std
mov
push
sub
mov
aaa
mov
cmp
rolb
sbb
add
mov
jns
push
lods
lds
or
bound
mov
imul
mov
mov
aam
fisttps
inc
mov
and
mov
mov
xchg
daa
jl
ja
sbb
clc
cmpsl
xchg
sbb
add
add
mov
inc
fwait
lds
jo
fldl2e
ret
ret
sbb
addr16
add
add
add
inc
cs
fcmovbe
pop
dec
sub
sbb
mov
xchg
inc
repnz
push
lds
mov
imul
xchg
xor
mov
mov
test
shlb
rorl
test
outsb
js
cmpsl
popf
sub
mov
adc
push
lret
pop
sarl
aad
mov
stos
and
pushf
cmp
sub
mov
jmp
jne
ljmp
push
xchg
add
fldcw
cmp
popf
jmp
pop
sbb
stos
sub
mov
jl
pop
pop
adc
cld
cltd
sbb
pop
lock
lock
call
pop
cltd
clc
repnz
sahf
xchg
sub
iret
dec
imul
pop
mov
add
pop
push
add
and
bound
lahf
in
fwait
mov
in
adc
jp
inc
push
bound
lcall
and
insl
adc
repz
lcall
std
inc
jne
cmpl
enter
add
add
add
xor
dec
arpl
ss
dec
lds
enter
cmp
dec
sub
xchg
test
ret
add
cld
push
jp
add
icebp
out
shll
repnz
orb
cmp
adc
mov
mov
jg
loopne
jns
or
inc
mov
pusha
xchg
jo
adc
sbb
adc
dec
js
or
inc
stc
mov
nop
dec
sbb
sbb
repnz
popl
jnp
bound
stc
mov
cld
cmpsb
push
cmp
scas
pop
mov
inc
sti
sbb
cwtl
insb
dec
add
mov
sti
push
xchg
xor
mov
sub
adc
loopne
nop
arpl
mov
lahf
add
push
icebp
pop
imul
outsb
and
dec
cmc
loope
dec
add
and
xchg
lahf
jg
mov
loope
gs
mov
and
add
add
mov
push
sti
jmp
push
mov
testb
add
add
add
clc
aaa
jecxz
rorb
outsl
iret
jae
push
aam
sub
cltd
cld
push
cmp
rorl
test
cmc
sarb
sub
sti
out
mov
mov
mov
cmpsb
pop
mov
mov
xor
cmpsl
lea
mov
sahf
pop
stos
jbe
and
lds
cmc
or
push
repnz
push
pop
or
insb
sub
sbb
or
mov
ret
lods
sub
dec
dec
fsubr
sarl
xchg
fwait
notl
hlt
imull
popf
inc
decb
loope
pushf
inc
repnz
xor
xlat
add
fsub
xor
jbe
sbb
in
dec
pop
imul
xchg
xchg
mov
outsb
push
and
stos
cs
cmpb
and
xchg
sbb
ret
add
jo
into
daa
pop
mov
inc
adc
xchg
fiadds
sub
movsb
scas
mov
push
out
inc
repz
in
xchg
insl
das
int
je
xchg
mov
adc
lahf
mov
jecxz
lock
mov
stos
add
add
add
mov
mov
scas
sub
pushl
jge
push
and
stos
cltd
inc
or
in
out
mov
shrb
pop
negb
mov
ja
xchg
out
add
cli
push
testb
mov
mov
int
xchg
jno
popf
jl
lcall
pop
add
add
sub
sarb
push
dec
ja
stos
pop
sysenter
push
mov
loopne
out
imul
fbld
pop
jp
xor
call
lods
cmp
lds
xchg
or
mov
fwait
xchg
movsl
in
jge
pop
pop
test
adc
aam
int3
fidivrl
dec
aaa
cld
dec
shll
inc
test
pop
xor
jecxz
xchg
sub
pop
bnd
mov
insl
sub
jg
adc
mov
xlat
sbb
adc
stos
xor
adc
loopne
in
push
dec
inc
leave
xlat
hlt
sub
mov
inc
mov
cld
mov
leave
mov
lods
add
add
add
out
int3
out
mov
push
jmp
test
fwait
add
mov
dec
or
in
enter
dec
addb
xor
sub
mov
xchg
loop
lods
faddl
icebp
das
push
sti
mov
flds
into
and
xor
cld
dec
inc
vmovapd
xchg
ret
sub
out
sti
adc
pop
add
jp
jecxz
fstpl
push
scas
push
cmp
cmp
pop
lret
das
outsl
cmp
popf
lret
jle
mov
das
xchg
in
pop
dec
test
mov
subl
add
insl
mov
test
xor
dec
ror
lcall
cmpsb
call
lahf
fstpl
adc
lds
loop
sbb
adc
addr16
mov
adc
jnp
test
mov
repz
sub
repnz
aas
daa
jmp
mov
dec
das
pop
out
cmc
mov
inc
sahf
flds
add
add
add
jl
adc
mov
dec
add
push
pop
popf
fstpt
sub
cmc
repnz
mov
stos
insb
fstpl
sub
inc
and
fcomp
add
divb
sub
andb
lods
fdivrl
mov
loopne
dec
call
xchg
dec
call
dec
daa
loop
push
cld
in
out
stc
cmpsb
je
into
cwtl
shlb
xor
pop
xlat
adc
mov
xchg
ret
lods
xor
adc
inc
or
sub
fmuls
js
rolb
ja
xchg
cmp
and
cmp
cli
xchg
mov
xlat
mov
int3
cld
lahf
mov
int3
cld
imul
fdivrl
ljmp
test
mov
xlat
lret
shll
dec
cmp
xchg
loopnew
mov
add
out
std
dec
std
pop
lcall
xchg
pop
push
int
push
add
add
add
lods
add
fs
add
pop
ret
fistps
mov
fcoms
imul
mov
jns
inc
add
mov
scas
add
inc
mov
rclb
inc
ror
pusha
xchg
mov
mov
movsl
les
pop
sbb
fs
xchg
aam
xchg
lcall
sahf
and
mov
mov
aad
cmp
pop
mov
inc
xchg
pop
in
mov
cmp
cmp
ds
out
js
lahf
sbb
subb
inc
or
aad
cs
lahf
mov
mov
scas
in
xchg
sar
xchg
mov
rclb
loopne
test
adc
sbb
cmpsl
pop
ret
adc
ret
bound
xor
negb
jb
xor
and
les
fidivs
loop
ljmp
movsl
imul
xchg
scas
add
add
add
cli
cs
or
dec
pop
mov
popf
popf
adc
mov
push
xchg
xchg
add
sti
push
push
imul
gs
adcb
fimuls
cmp
out
and
hlt
int
mov
leave
cs
kmovb
inc
or
hlt
mov
sti
jns
mov
lcall
xchg
ret
add
push
cmp
adc
mov
mov
mov
pop
faddp
push
subl
loop
mov
clc
in
adc
pop
jl
sbb
lret
je
rcl
mov
sbb
add
pop
pop
sub
cmp
and
popa
sub
sbb
stos
push
subb
or
ret
mov
dec
out
mov
pusha
add
push
clc
leave
ss
mov
jmp
jle
clc
sarl
mov
filds
add
add
xchg
jg
jmp
std
mov
shr
les
add
add
add
lret
sub
cmpsb
cwtl
addr16
popa
out
push
call
xchg
jl
das
and
pop
mov
int3
push
xor
push
stos
add
mov
push
and
ret
xchg
icebp
enter
xor
int
ja
into
jae
xor
pusha
mov
inc
pusha
push
popf
inc
pop
insb
jb
adc
pusha
sub
es
lret
ret
mov
push
pop
lea
mov
movsl
lahf
mov
subb
jle
xchg
xor
imul
add
testb
fwait
lods
cltd
aam
pop
xchg
mov
testb
xorb
cmp
add
add
xchg
lretw
adc
fucomp
cmpsb
pop
mov
cmp
inc
dec
scas
adc
into
rol
cmp
cmp
lcall
dec
xchg
mov
push
and
push
lret
mov
fs
cmp
push
divb
inc
mov
mov
add
add
add
fwait
cmp
inc
push
push
jp
or
pop
add
stos
aam
fsubrl
add
add
jb
push
jge
fsubrs
outsb
stos
call
daa
jne
pop
out
sti
or
xchg
pop
shlb
fs
daa
pop
xor
sub
test
or
lahf
sbb
fisttpll
leave
or
js
mov
mov
xchg
stos
outsl
imul
fs
loope
fisttpll
inc
testl
mov
mov
daa
mov
dec
xchg
data16
mov
mov
dec
inc
xchg
sub
dec
jb,pn
mov
mov
repnz
sub
es
jae
pop
dec
pusha
test
stc
add
xchg
stos
sbb
nop
and
loopne
mov
mov
shll
popa
and
rclb
mov
push
push
ret
arpl
movsb
mov
es
push
pop
sahf
nop
mov
add
xor
cmp
inc
call
aas
addr16
add
add
add
mov
pop
and
stos
nop
jl
and
jb
test
mov
out
mov
xchg
jnp
hlt
adc
push
cld
mov
lea
mov
inc
nop
mov
lods
addl
daa
jns
mov
mov
or
jp
mov
imul
pop
gs
sub
rolb
push
gs
lods
adc
testl
addr16
fdivl
sbb
jle
cmpsb
sub
jbe
iret
out
sbb
loope
flds
xchg
int
mov
js
dec
test
test
scas
adc
enter
int3
mov
ja
xchg
dec
sahf
mov
inc
xlat
pop
lea
xor
test
fnstcw
int
jp
repnz
js
cmp
dec
xor
adc
outsb
mov
sti
xor
movsb
inc
adc
lea
out
cld
ret
repz
dec
xchg
data16
or
add
es
les
mov
arpl
cltd
andl
add
add
add
dec
js
loop
adcl
mov
xor
and
jnp
daa
push
xchg
mov
xlat
jle
jp
out
in
mov
cwtl
cmp
addr16
pushf
rcrb
sub
inc
popa
mov
push
mov
lret
leave
lahf
xchg
es
pushf
cmp
lcall
bound
lods
subb
sub
jb
sub
pusha
fiadds
jg
jecxz,pn
das
and
out
sub
or
and
pop
stc
movsl
pop
pop
push
pop
loope
xor
loopne
push
sahf
loope
out
icebp
pop
ss
test
aad
cmpsb
mov
inc
ud0
fs
fcoml
into
sub
rorl
aad
imul
test
mov
call
xchg
iret
pop
out
xchg
stos
mov
pop
sub
stc
fwait
mov
sbb
jno
cmp
sub
add
add
clc
pop
stc
out
push
pop
bound
out
mov
add
add
add
or
jnp
lret
js
test
mov
mov
sub
out
bound
repnz
test
add
daa
sub
imul
mov
ss
xor
pushf
inc
mov
int3
pop
stos
data16
movl
pop
ret
mov
and
push
testl
dec
jl
fisubrl
push
pop
or
sarb
ret
adc
sub
fs
insb
mov
jb
call
adc
sub
cmpsb
mov
lods
or
scas
fdivp
push
stos
cmc
adc
movhps
push
mov
pop
fldcw
scas
jnp
int3
mov
aad
pusha
outsb
xor
xchg
scas
inc
push
jns
dec
add
aas
idivl
and
inc
adc
xchg
and
xorl
xor
pop
jmp
cmpsb
mov
xchg
adc
add
add
push
mov
lcall
push
addr16
add
add
add
arpl
fdivl
mov
dec
dec
xchg
mov
movsb
call
loope
gs
xor
mov
or
jg
mov
cltd
cmc
xchg
cmp
cmp
int
xorb
cmp
mov
test
jne
out
fucomp
dec
fwait
mov
push
loope
jp
push
arpl
fisubs
and
dec
jle
or
adc
imulb
out
or
xor
push
or
iret
xchg
test
adc
mov
mov
in
inc
sti
or
xchg
and
xchg
sub
pop
mov
std
movsb
scas
xchg
mov
addl
dec
mov
sbb
mov
jl
cmp
xchg
mov
jle
mov
bound
cmp
clc
rcrb
imul
stos
or
and
add
add
jne
mov
int3
insb
lret
pushf
pop
addr16
add
add
add
mov
sarl
mov
pusha
arpl
jecxz
sub
stc
fcmovnbe
fwait
scas
mov
adc
dec
dec
roll
sbb
pusha
sub
lock
inc
dec
lahf
jnp
popf
in
jle
les
jno
sbb
ds
dec
mov
add
lds
movsb
cmpsl
shlb
sbb
imul
lea
out
ficomps
push
movsb
stos
loop
mulb
mov
inc
test
into
iret
jmp
aaa
sti
xchg
sbb
dec
pop
mov
xor
add
dec
cmc
pop
lret
and
pop
int3
add
xlat
sbbl
pop
sbb
jl
sarb
call
jno
aas
adcl
xchg
adc
nop
dec
mov
mov
or
mov
in
dec
mov
adc
ljmp
into
div
cwtl
les
inc
xor
inc
sub
push
and
dec
pop
pop
sbbl
fstp
rorl
cmp
daa
addr16
add
add
add
inc
inc
sub
stc
inc
or
fcmovb
cmp
push
push
adc
insl
xorl
minps
add
pop
sahf
and
cmc
ffree
fnsave
cs
stc
fists
gs
mov
mov
inc
roll
andb
ficoml
jbe
inc
lret
ficomps
jne
jnp
cmpsl
and
int
scas
addr16
or
jb
cmp
int3
or
rcrl
jb
sub
sub
gs
es
pop
cmp
ficomps
pushf
repnz
xor
nop
jnp
cwtl
outsb
das
push
inc
dec
inc
aad
xor
insl
pop
push
jne
sub
rcll
push
sub
iret
and
shlb
mov
and
nop
imul
das
cs
xor
and
push
sub
dec
or
pusha
sbb
mov
add
sbb
repz
mov
mov
loope
mov
jecxz
out
mov
mov
mov
add
add
lcall
movsl
mov
mov
xor
insl
or
xchg
shld
add
cmp
cmp
mov
cmc
xchg
mov
sbb
and
cmpsl
mov
pop
mov
shl
bound
mul
adcl
mov
or
mov
out
movsb
psadbw
shlb
jmp
jle
shrl
insl
pop
or
sbb
js
push
pop
adc
mov
nop
ja
mov
mov
addr16
dec
xorl
pop
pop
jbe
dec
push
out
xchg
icebp
or
aam
mov
js
call
insb
js
or
movzbl
inc
decb
jp,pt
pop
das
inc
in
clc
mov
stos
sbb
and
xor
mov
adc
xor
mov
push
xchg
test
jg
into
lret
orl
add
add
push
ljmp
cmp
inc
jb
fbld
fdivs
xor
stos
pop
popa
xor
test
popf
mov
int
cmp
push
movsl
insb
pop
adc
add
sbb
ret
push
sbb
mov
xor
cmp
inc
sar
into
mov
add
scas
adc
xchg
mov
xor
adc
sbb
push
xor
pop
and
ja
es
push
push
sub
sub
jle
xor
shl
leave
jl
mov
repz
xchg
out
pop
testb
scas
xchg
ljmp
lods
out
idivb
push
inc
repnz
fs
dec
mov
bound
hlt
out
or
les
mov
dec
xor
popf
lret
and
leave
mov
es
incl
push
sahf
jge
and
out
cmp
les
sbb
add
lock
in
lcall
jae
dec
mov
testb
add
add
adcl
jae
add
rclb
mov
dec
pop
mov
dec
hlt
out
mov
outsb
push
jecxz
repnz
jg
adc
dec
test
mov
adc
push
add
movsb
mov
inc
mov
add
pop
and
sbb
push
scas
call
cmp
inc
nopl
xchg
int
mov
aas
sbb
sub
and
stos
or
push
pusha
lret
rcrl
xor
lret
subb
adc
imul
mov
mov
add
cli
shr
sub
int
in
xchg
dec
cmp
sarb
sbb
mov
and
xchg
dec
pop
int3
int3
scas
pop
pop
pushf
rcrb
jnp
mov
arpl
sbb
divb
pop
push
repnz
int
and
push
mov
sub
es
mov
dec
or
jg
dec
arpl
and
mov
add
xchg
lahf
sub
stos
mov
inc
and
into
or
lret
push
dec
mov
push
je
jno
pushf
jl
sar
push
pop
or
pushf
cltd
bound
mov
ret
aad
pop
pushf
mov
mov
push
ficompl
sub
add
in
imul
pop
push
adc
add
insb
mov
cmp
test
push
xchg
xchg
mov
scas
add
dec
or
inc
movsl
add
add
jg
aas
inc
psubd
pop
push
loop
inc
mov
cltd
mov
or
xor
out
mov
mov
mov
mov
lahf
or
inc
push
mov
in
xor
mov
aad
sbb
gs
xor
mov
out
sbb
popf
iret
mov
aas
pop
push
stos
mov
leave
mov
push
jg
insl
sbb
outsl
mov
rclb
addr16
add
add
pop
fsubrs
cmpl
dec
sub
out
pop
leave
and
inc
out
imul
lods
xchg
rcr
stc
das
or
push
mov
push
mov
fnstenv
adc
ds
lcall
std
inc
andb
cmp
ret
jbe
pop
out
jl
jae
inc
ret
adc
mov
loopne
inc
jns
or
hlt
cmpsl
fsubl
sbb
loop
icebp
push
in
int3
xor
and
lret
mov
cmp
and
fstpt
mov
add
sbb
ljmp
into
mov
js
mov
mov
lock
and
push
pusha
pop
dec
divb
push
ss
sti
daa
jmp
adc
dec
pop
mov
adc
jae
push
test
xor
es
enter
add
mov
mov
inc
icebp
sbbl
mov
insl
bound
mov
jmp
add
inc
fbld
mov
pop
add
add
add
add
and
out
bnd
in
sub
mov
test
ret
pop
sub
pop
inc
and
pop
ss
and
je
cmpsb
inc
fisttpl
pop
repz
xor
scas
push
and
mov
mov
test
lds
sahf
cmp
js
mov
push
mov
cmpsl
popf
fcoml
lahf
xchg
cmp
fdivrl
movsb
adc
test
testb
popa
lea
in
rol
aam
push
jno
enter
lret
pop
loope
or
xor
mov
lcall
xor
cli
in
icebp
or
jne
jae
inc
adc
jecxz
dec
or
jmp
or
mov
mov
and
push
js
pop
and
mov
pop
fsubrs
jge
inc
jae
xor
add
sarb
int3
fnstcw
dec
std
xor
add
add
fistpll
call
cmp
and
add
add
add
pop
xchg
pushl
fdivrs
mov
imul
fldenv
data16
std
xor
arpl
stc
and
fiadds
stos
mov
mov
sbb
add
sub
xchg
ret
leave
leave
repnz
jecxz
pushf
rclb
push
pusha
data16
sbb
push
cmp
subl
dec
cmovbe
pop
inc
loope,pt
add
int
movsl
call
sub
pop
push
push
popf
fildll
push
stos
fiadds
xor
mov
notb
or
xchg
adc
cmpsb
into
mov
push
jns
stc
jp
or
pop
lret
popa
movsl
scas
lock
orb
inc
xchg
jb
scas
cld
jne
movsl
sbb
dec
push
leave
jo
stos
jne
dec
ret
sub
sahf
sub
movsb
sbb
sbb
cltd
xchg
xchg
je
jno
mov
mov
mov
adcl
xchg
jne
adc
mov
adc
add
std
sti
leave
sti
iret
jmp
lret
addr16
add
rcrl
daa
pop
int
and
sub
xchg
or
out
mov
or
lea
mov
add
orl
push
cmp
gs
sub
es
inc
sahf
or
add
insb
jecxz
sbb
sti
jp
in
icebp
lcall
pop
push
imul
jmp
imul
adc
inc
jne
add
sub
loop
push
jne
mov
fnstcw
imul
out
mov
test
fwait
imul
xchg
mov
cmp
mov
pop
xor
inc
test
imul
adc
les
icebp
or
and
mov
testl
mov
notl
and
pop
nop
fadds
clc
cmpsl
push
mov
sub
inc
mov
jle
cmp
outsb
inc
pop
das
ret
or
fimuls
cmpsb
lds
add
add
mov
xor
ret
rolb
add
add
mov
mov
mov
xchg
push
xor
pop
and
test
and
xor
inc
and
cmp
cmp
pop
mov
out
imul
mov
mov
sbbl
jge
mov
test
sahf
ss
aas
xchg
out
pop
mov
insb
cmp
outsb
mov
cmpsb
sbb
and
lods
add
mov
sub
lods
shlb
cltd
mov
sarb
mov
add
mov
popa
cmpsb
cmp
mov
mov
clc
imul
inc
inc
add
or
jno
inc
test
mov
inc
lock
xchg
testb
jb
xchg
cwtl
prefetcht2
xor
je
xor
inc
fmull
addb
xchg
cmc
test
cld
enter
add
fwait
mov
or
jg
mov
sahf
loop
and
add
add
add
xchg
test
int
test
xchg
dec
push
add
sub
push
out
scas
add
fnop
xor
mov
add
or
jns
dec
les
loop
out
shll
mov
data16
dec
or
bound
pop
mov
fwait
cltd
lahf
fidivrl
pop
mov
lock
leave
outsb
cmp
cli
lcall
jbe
gs
pushf
push
jbe
xor
in
gs
mov
dec
cmp
and
mov
add
shrb
stos
jae
lahf
out
mov
js
popf
xor
aaa
or
cld
insb
xchg
mov
test
push
insl
cmp
leave
sub
xor
js
push
je
rorb
xchg
cmp
daa
lods
fadd
pop
cmpsb
or
jmp
jg
ja
aad
aad
inc
shl
repnz
pop
cwtl
sahf
nop
sahf
in
mov
add
inc
enter
pushl
cld
sbb
addr16
add
add
inc
lods
sarb
sahf
mov
enter
daa
int
js
inc
push
dec
mov
fdivrs
push
adc
jno
jp
push
sbb
int3
orb
mov
pop
dec
mov
pop
in
addr16
int
xor
std
mov
out
jo
mov
pop
sbb
outsb
out
dec
cmp
xchg
cltd
push
pop
in
jle
inc
jnp
jbe
insl
shll
js
jl
push
mov
and
inc
in
xorb
dec
jecxz
and
fucomp
mov
xor
pop
jmp
lds
mov
pop
xor
sub
lcall
pop
inc
pop
and
stos
pop
xor
cli
and
dec
leave
nop
jo
mull
ret
or
int
mov
push
bound
mov
jb
sbb
pop
repnz
and
pop
and
test
or
or
xlat
pushf
shrb
lcall
cmpsl
addb
addr16
add
add
add
jle
adc
loopne
outsb
mov
adc
lret
stc
mov
je
jg
push
lcall
push
jae
mov
idiv
xor
sti
cmc
sub
js
fs
icebp
pop
shr
xchg
ret
out
jp
nop
sub
test
add
lods
js
imul
aas
movsb
push
lods
into
or
enter
out
mov
xchg
data16
sub
fistps
and
lahf
std
stos
jmp
pop
sbbb
inc
rcrl
and
jns
loopne
xchg
stc
add
push
inc
rcr
imul
mov
fimull
xchg
ss
shrl
mov
int
lea
jecxz
jns
out
pushf
add
mov
sbb
std
adc
mov
and
rcll
fs
and
mov
mov
rorb
jns
test
int
inc
ljmp
sub
scas
mov
aas
scas
popf
sbb
add
add
add
mov
mov
imull
loop
xor
in
cltd
push
dec
cltd
aam
add
pop
daa
lret
fnstenv
ljmp
jnp
push
xor
cli
sub
mov
sub
mov
stc
add
cmc
stos
xor
shl
dec
iret
lret
pop
movsb
je
jp
mov
out
into
out
out
ficomps
movsb
push
out
leave
arpl
xor
sub
adc
jbe
mov
outsw
jb
es
in
setb
dec
hlt
pop
mov
xchg
push
jecxz
mov
daa
push
cwtl
mov
lods
sbb
in
push
sbb
and
fiaddl
sub
or
in
shlb
int
inc
jle
mov
mov
jmp
inc
gs
xor
mov
mov
mov
adc
mov
data16
mov
loope
jns
inc
jg
jne
jne
jg
loop
mov
inc
lds
add
add
add
push
call
outsb
das
add
xchg
lock
push
or
aaa
add
fstl
add
sarl
mov
popf
out
shll
pop
das
and
jl
adc
adc
mov
xor
push
or
popf
mov
jecxz
adc
adc
addr16
lds
cmp
int
arpl
cmp
mov
jno
xor
xchg
push
aad
inc
mov
jl
outsb
xchg
inc
xor
fwait
xor
dec
imul
popf
and
push
stc
xchg
pushf
daa
pop
sbb
xor
gs
push
sbb
inc
jae,pt
dec
jb
negb
mov
gs
xchg
pop
xchg
adc
imul
insl
faddl
push
mov
pushf
pop
push
dec
leave
ds
cwtl
and
cmp
and
cmpsb
ljmp
adc
test
adc
out
mov
sbb
mov
cmc
mov
add
movb
add
add
es
cmpsl
shlb
int3
fnstcw
ret
add
nop
repnz
and
stos
popa
push
jns
dec
pushf
fwait
sbb
testb
pushf
xchg
cmpsb
adc
xorb
or
and
xor
out
and
push
add
sbb
lock
push
insb
mov
roll
dec
filds
mov
inc
imul
pop
xor
push
jl
cwtl
mov
adc
imulb
int3
cwtl
movsl
pusha
ja
dec
add
add
push
dec
mov
aam
or
mov
lods
test
sahf
push
jne
or
push
fnstcw
or
fsubl
imul
cmp
push
movsl
sbb
pop
movsb
sbb
pop
jns
outsl
lds
push
and
push
mov
cmc
negb
or
xor
cmc
or
push
out
cmp
xor
das
push
scas
out
dec
cmp
mov
pop
mov
rol
popf
and
outsb
jle
lods
testl
movl
add
xchg
cmp
xlat
jmp
das
add
inc
scas
imul
cmpsb
dec
roll
inc
orb
jne
pop
gs
dec
push
in
loopne
es
pop
pop
mov
cld
in
out
adc
cmc
xchg
mov
iret
sbb
js
inc
shrb
fdivl
in
sbb
dec
sbb
mov
int
push
iret
rcrl
push
adc
int3
cmp
xchg
jp
jae
adc
test
jne
cmp
push
rorb
int3
mov
add
xchg
adc
jg
jno
sbb
or
ds
pop
shll
sub
sub
sbb
pop
mov
xor
push
adc
incl
mov
add
hlt
xchg
dec
scas
jno
dec
adc
aas
sub
pop
sbb
mov
sub
cmp
repz
cmp
in
lock
sub
add
add
mov
xchg
insb
je
mov
add
add
add
push
add
cld
mov
das
mov
in
adc
rclb
ret
mov
int3
icebp
sbb
and
pop
ret
loope
pop
addr16
clc
and
mov
int
lock
mov
mov
stc
jp
push
imul
push
xor
mov
or
adc
nop
xor
lds
jmp
dec
inc
iret
and
push
add
sbb
jae
idivb
jg
cli
call
repz
jmp
test
outsb
dec
jmp
popf
bound
dec
dec
mov
pop
int
lods
push
lret
xchg
mov
or
repz
mov
call
loopne
lret
out
xor
js
ljmp
iret
dec
cmpsb
sti
lcall
mov
mov
ret
popa
popf
rorl
or
adc
lcall
out
test
sbb
xlat
in
aad
jnp
lahf
addr16
add
add
add
lods
rol
fnstenv
cmpsb
pop
jnp
xchg
push
xor
add
push
cld
test
ret
jl
add
mov
adc
push
lcall
shl
sub
sub
mov
out
lret
pop
stos
inc
data16
insl
mov
pop
push
mov
push
sbb
add
mov
scas
xor
lret
push
aam
stos
cmpl
cmp
rolb
or
jmp
mov
pusha
pop
movsl
xchg
sti
fiaddl
xor
adc
pusha
or
mov
loop
jbe
xchg
push
adc
sbb
pop
pop
push
std
inc
mov
bnd
or
add
or
push
lret
push
shrl
adc
pop
or
in
push
int3
add
xor
lcall
fstps
xchg
ds
sub
cmp
jg
and
mov
mov
xor
addr16
add
add
sarb
aaa
adc
sub
inc
pop
iret
fisubrs
pop
std
sbb
dec
scas
enter
jmp
stos
insb
lret
push
pop
push
pop
xlat
rolb
cmpsb
scas
int
leave
out
sti
in
adc
adc
or
aad
xchg
push
and
rolb
lcall
dec
test
cmc
stc
cltd
sub
jg
add
enter
add
les
mov
test
addps
popa
or
jno
lcall
idiv
int3
dec
or
lcall
dec
cmp
dec
inc
movsb
in
cmp
sbb
in
outsl
mov
sbb
pop
sbb
cld
test
jno
pop
aas
cmpsb
inc
sbb
ret
sub
pop
mov
mov
mov
outsb
mov
sub
jp
iret
rolb
lahf
imul
imul
ret
insb
or
add
add
xor
fistpll
out
repz
fcoms
sti
mov
add
add
add
mov
add
mov
ss
cltd
rcrb
or
and
mov
pusha
cmp
call
in
or
mov
std
and
mov
lods
into
mov
lock
sub
mov
xorb
addl
mov
add
fstpl
std
imul
mov
push
popf
cs
cmp
stos
out
lret
cli
scas
dec
cltd
xor
aam
loopne
dec
lods
jmp
dec
adc
les
rep
shll
adc
dec
or
xchg
jp
xlat
scas
rorl
pop
xchg
push
in
scas
sub
pop
mov
jo
cmp
jbe
daa
pop
int
lret
pop
sub
mov
lods
fwait
sub
pop
popa
fwait
ret
js
and
inc
pop
cwtl
insb
jmp
inc
cwtl
push
inc
mov
ja
sahf
iret
push
mov
fdiv
xor
mov
subl
mov
mov
mov
scas
pusha
int
int3
add
add
add
notb
mov
mov
mov
adc
pop
js
ds
pop
sub
popa
xor
pop
mov
testl
sahf
jbe
lock
iret
sbb
or
repz
xchg
out
subl
call
stc
and
cwtl
icebp
push
adc
sub
inc
out
and
cmp
mov
jge
lahf
cmp
imul
jg
into
add
push
fistl
sbb
ds
loop
mov
xor
xchg
lea
jns
loope
xor
lods
xchg
mov
jnp
mov
mov
mov
push
ret
in
pop
mov
mov
fcomps
xor
icebp
imul
sti
les
in
fmul
xchg
mov
outsb
es
popf
add
pushf
pop
add
test
push
pop
out
cmpsb
repz
add
stc
enter
in
sbb
push
inc
jb
loopne
addr16
add
add
add
nop
xchg
stos
repz
stos
jmp
mov
cmpsl
std
mulb
pop
xchg
icebp
mov
lret
dec
lods
icebp
fmuls
dec
daa
and
pop
add
repnz
xlat
dec
ja
add
dec
jmp
xor
inc
popf
cmp
call
imul
xor
push
and
xchg
lret
in
test
jmp
sub
sbbb
mov
jge
rcrb
inc
scas
fs
sti
ret
mov
in
stos
sbb
and
push
cld
fwait
out
mov
sbb
in
lods
daa
mov
mov
lret
dec
add
fcmovu
cmc
hlt
push
das
xchg
xor
xchg
xchg
adc
daa
arpl
xchg
cmc
sbb
in
mov
or
outsb
push
lret
cmp
and
lods
out
lods
mov
xor
inc
js
std
shll
jne
imul
cmc
call
inc
push
popa
and
jbe
addr16
add
add
add
scas
jg
lds
movsb
lods
lea
jne
dec
insb
daa
sub
icebp
push
fs
clc
push
subl
mov
mull
js
mov
or
mov
data16
hlt
and
cmp
or
mov
jmp
cli
aad
mov
xlat
aaa
lods
pop
inc
out
bound
or
jnp
fdivp
ret
add
cwtl
sbb
sub
xor
scas
movsb
fisttpll
ss
mov
bound
fisubrl
push
mov
pushf
and
scas
pop
mov
xchg
and
jns
data16
inc
popa
inc
inc
xor
mov
cltd
push
daa
inc
stos
lods
push
jb
mov
cs
fiaddl
and
loop
and
movsl
dec
xchg
add
mov
inc
xchg
out
ds
mov
add
movsl
mov
iret
sub
xor
add
add
add
lods
aas
iret
sub
xchg
push
push
jg
and
or
push
add
fs
bound
xor
ja
stc
imul
insb
xchg
dec
frstor
mov
sbb
fstl
aas
test
cld
push
aad
les
scas
subb
test
jae
dec
add
jl
dec
je
pop
fldcw
pop
shlb
push
fs
scas
jecxz
jnp
and
sahf
es
ljmp
sbb
mulb
pop
ret
lret
fs
cmp
lods
sub
adcl
aas
les
pop
xchg
jmp
test
pop
xchg
and
call
cwtl
lahf
push
push
hlt
pop
dec
bnd
in
popa
pop
fs
jmp
dec
xchg
cmp
movsl
dec
cmpsl
ja
dec
pop
add
and
loopne
andb
test
outsl
das
push
lret
dec
andb
scas
or
jne
clc
xchg
imul
xor
pop
test
jg
and
sub
add
out
into
gs
cld
test
gs
rolb
add
add
add
maxps
add
xchg
jle
xchg
pop
mov
aad
enter
aad
call
mov
arpl
rol
mov
push
lods
mov
jl
fdivl
icebp
fnop
push
cmpsb
cmp
pusha
pusha
scas
mov
and
shrb
dec
imul
mov
test
jo
aam
repnz
push
inc
ss
or
dec
cld
mov
out
mov
rclb
shll
dec
movsl
aas
lds
push
stos
jae
imul
outsb
int
cwtl
jb
lds
sarl
jmp
bound
or
cmp
inc
out
inc
mov
xor
std
mov
fistps
xor
test
aam
push
stos
adc
xacquire
fwait
or
fdivp
pop
popa
push
arpl
cmp
lods
adc
stos
inc
adc
adc
add
add
xchg
and
je
out
mov
adc
roll
add
add
add
push
ljmp
mov
pop
mov
dec
jnp
gs
aas
subl
repnz
xchg
loopne
insl
repnz
fdivr
imul
add
mov
scas
icebp
js
sbb
test
lcall
fcoml
xchg
lods
mov
test
mov
push
pop
stos
mov
pop
repz
and
and
adc
cmp
inc
pop
out
push
xchg
aad
sub
push
jno
movb
cmp
sbb
rcl
mov
mov
push
invd
or
ss
jmp
xorb
xor
imul
test
mov
pop
test
mov
fldenv
jp
dec
stos
xor
push
pop
inc
push
test
and
arpl
mov
and
shrl
pop
test
cmpsb
jp
fisttpll
mov
add
add
dec
daa
dec
das
outsb
imul
push
xchg
push
js
inc
rolb
add
add
add
daa
pop
mov
test
and
scas
cmp
pop
sbb
sub
les
mov
push
push
fwait
popa
pop
mov
cmpsl
xor
mov
insl
pusha
dec
clc
sbbb
push
push
out
aam
nop
and
insb
sarl
sarl
cmp
into
aaa
aaa
decl
aam
stos
cmp
add
and
push
les
fcomi
rcrl
mov
test
stos
test
dec
dec
mov
lahf
int3
adc
movsl
jns
pop
mov
and
dec
adc
stos
mov
daa
or
aas
nop
and
sbb
pop
mov
pusha
dec
outsl
in
push
imul
jg
mov
jne
mov
in
jl
or
insl
jne
popf
hlt
andb
and
xor
shl
pop
mov
loope
mov
inc
in
popa
adcl
sbb
lret
push
shl
mov
out
jecxz
stc
cwtl
mov
xchg
xchg
call
out
lahf
ret
or
adc
roll
add
add
add
repz
or
mov
xchg
out
push
push
or
dec
out
add
add
xchg
sub
loopne
pop
cmpsb
fdiv
mov
arpl
lahf
loop
inc
inc
push
out
jmp
or
repnz
cmpsl
pop
mov
jne
inc
sbb
push
hlt
or
pop
add
xor
fisubl
dec
loop
std
adc
dec
cmp
fcomp
jb
enter
daa
arpl
fsubs
test
cmp
jns
icebp
movsb
cmp
jg
pop
cmp
inc
cwtl
rep
mov
sub
xlat
sub
jp
push
mov
pop
mov
push
scas
and
test
pop
jmp
imul
jae
mov
pop
sbb
mov
jle
arpl
sahf
pop
out
mov
mov
popf
lret
addr16
push
lea
jge
xchg
shll
nopl
add
add
neg
outsl
push
xchg
or
add
add
add
pop
add
add
add
sti
push
arpl
pop
push
xor
inc
sarb
jns
cli
jg
inc
fsts
xlat
data16
stos
push
jno
aad
push
repnz
xor
jb
cmp
loope
lahf
fmulp
add
jne
in
mov
xchg
inc
mov
jbe
adc
inc
lea
in
inc
jle
xchg
jmp
sbb
mov
jae
jns,pt
xchg
xchg
inc
add
push
dec
pop
dec
ss
or
icebp
les
cmp
popf
adc
push
das
pop
xor
and
in
xchg
mov
push
xchg
ljmp
in
out
stc
addr16
test
or
pop
gs
adc
pop
rcr
int3
mov
lcall
jecxz
sub
dec
mov
xchg
jne
adc
push
int3
push
fistpl
push
insb
mov
cli
xor
add
sbb
sub
dec
std
fcompl
fisubl
add
add
add
lock
xlat
jl
dec
mov
lods
add
in
stos
mov
ljmp
loop
icebp
inc
js
dec
xorb
cmc
fidivrs
lcall
dec
int
mov
ja
imulb
mov
lods
and
addr16
xor
mov
aam
loopne
repnz
lock
inc
call
add
iret
sub
and
insl
dec
cmp
ds
jne
lods
iret
or
push
stos
clc
rorb
sub
mov
loopne
das
pop
into
mov
insl
mov
push
movsb
cld
mov
cmp
lock
push
cs
sti
repz
imul
pop
pop
faddl
cmp
out
xlat
testb
jns
push
pop
dec
push
or
ljmp
imul
sub
push
jmp
std
or
dec
dec
inc
cmp
push
jge
test
mov
pushf
adc
ds
jae
adc
cmp
add
add
add
hlt
mov
xor
jbe
repz
les
and
xchg
xor
or
sbb
imul
xchg
xchg
imul
ud0
outsb
sub
adc
lods
jmp
mov
gs
xorb
jge
cld
ret
or
push
adc
stc
stc
stc
icebp
xor
adc
add
out
adc
mov
push
lock
scas
lcall
ret
iret
fadds
cwtl
testb
push
cld
ss
clc
xor
mov
jno
add
cmp
xor
adc
jmp
ds
pop
fsubrs
addr16
push
fsubl
cwtl
rcrl
daa
dec
scas
fisubl
fs
je
pop
repz
add
stc
adc
js
dec
or
jbe
xor
into
pop
leave
rolb
pop
outsl
dec
push
mov
pushf
jge
jbe
jne
mov
push
xchg
and
idiv
lahf
insl
mov
test
add
add
add
into
or
in
lds
lods
icebp
dec
mov
call
icebp
hlt
popf
cmp
test
dec
mov
daa
fcomps
in
fs
movsl
dec
sub
push
xor
cmovne
arpl
mov
sub
inc
inc
mov
hlt
cltd
scas
push
mov
pop
mov
popf
cwtl
sbb
dec
das
jne
dec
jnp
fildll
or
in
cmpsl
lods
and
js
jge
sbb
add
pop
out
push
sbb
jne
adc
mov
imul
mov
aad
xchg
and
mov
lcall
dec
sbb
dec
ds
int3
mov
jl
cmp
stc
popf
jp
mov
loope
test
mov
xchg
dec
lods
sbb
negb
popa
xlat
insb
cli
fcomip
in
push
or
ret
mov
sub
push
rolb
dec
sahf
cmp
jg
leave
or
inc
movl
add
add
sbb
xor
jae
cwtl
mov
mov
clc
clc
mov
pop
stc
pop
mov
add
sub
jnp
pop
mov
and
rcrb
push
aas
in
inc
aam
mov
icebp
push
xchg
imulb
adc
nop
adc
outsl
leave
clc
adc
or
les
stos
cmp
push
xchg
enter
add
inc
cmp
xorb
addr16
fstl
mov
addl
mov
dec
fsts
pop
ds
mov
add
repz
negb
cmp
sbb
mov
sarl
jnp
dec
das
mov
test
hlt
dec
sti
jnp
mov
push
mov
js
dec
mov
insb
test
repnz
out
xchg
fistl
mov
sbb
cmp
imul
xchg
movsb
test
add
add
add
insl
xchg
xchg
cmpsl
mov
lock
dec
leave
xor
sub
stos
mov
or
mov
jp
jb
bound
out
xchg
scas
sahf
arpl
in
mov
or
daa
inc
movsl
sti
push
into
fnstsw
sub
test
adc
pop
dec
or
outsb
aad
test
arpl
stc
cltd
aas
pop
iret
add
lret
icebp
dec
and
imul
mov
les
pop
pop
xchg
dec
adc
fwait
pop
mov
or
shrl
test
inc
mov
out
add
sub
add
and
imul
sbb
gs
out
jge
xchg
fwait
mov
mov
pushf
inc
mov
mov
dec
cmp
fmuls
mov
das
add
pop
cmp
cmc
jno
std
mov
data16
pop
pop
sti
aaa
add
ficoml
insb
mov
lock
push
sbb
into
out
fldcw
push
in
sub
cmp
add
add
in
out
sbb
fldt
repnz
push
call
or
testb
into
xchg
rcr
mov
jb
jg
mov
pop
xchg
cmpsl
mov
jb
test
lods
jo
sub
lahf
add
iret
mov
or
lret
mov
fimuls
lock
cmp
dec
mulb
mov
jnp
sub
xchg
push
xchg
push
pop
roll
inc
jle
out
orl
cmc
mov
jns
sbb
in
fwait
pop
mov
fsubrl
xlat
dec
ret
xchg
push
popf
pop
cmc
cmpsl
rcrb
and
popa
mov
scas
sbb
sbbb
push
jo
lahf
dec
dec
mov
shrb
cmp
int3
mov
and
push
mov
shlb
jg
xor
jne
jae
clc
push
sub
xchg
into
aaa
xor
ret
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
xor
fildl
add
add
add
icebp
mov
xchg
xchg
xchg
and
out
aad
inc
pop
hlt
mov
fs
adc
outsl
pushf
cmp
mov
adc
jb
xor
jae
outsb
mov
hlt
xor
imulb
and
jo
in
insl
mov
movsb
test
and
mov
cltd
stc
mov
inc
orl
andb
leave
cs
and
bound
xchg
add
jne
push
adc
cmp
jo
aad
pop
dec
das
fwait
pop
adc
xchg
xchg
sbbb
stos
pop
test
pop
aaa
stos
insl
push
mov
pop
rclb
iret
mov
outsb
notb
out
push
loop
leave
mov
pop
rclb
push
and
test
data16
lods
in
cltd
sbb
mov
mov
hlt
inc
cs
sub
push
lods
fwait
lds
cli
movsl
dec
pop
dec
jle
jg
std
fstpt
sub
faddl
add
add
add
cs
fs
xor
and
and
jg
mov
mov
cmp
inc
movl
stos
or
out
pop
inc
lea
push
fcomps
ljmp
nop
xor
dec
sbb
add
cs
outsb
jp
jbe
movsb
cli
push
or
jno
lea
inc
pop
sub
lods
pusha
jo
add
shlb
aam
lods
repnz
sub
push
jle
mov
inc
popf
mov
rolb
scas
jnp
sub
fwait
cli
loopne
mov
outsl
jmp
pop
and
std
rclb
push
outsb
pop
cli
out
xchg
mov
mov
lock
pop
rcrl
sub
sub
pop
xchg
dec
cmpsb
loopne
stos
popf
sbbb
xchg
ljmp
mov
fimull
mov
push
xchg
repnz
add
cmp
ljmp
push
lret
pop
fldl
add
add
add
ret
outsl
or
sbb
xchg
pop
lds
stc
dec
int
mov
mov
call
hlt
mov
and
fcmovb
popa
rcrb
mov
inc
es
xchg
cmpsb
sti
jg
aam
out
sbb
xchg
cmp
nop
movsl
loopne
inc
cmpsb
mov
js
xor
xchg
aad
jo
imul
or
inc
mov
add
insb
aam
nop
out
mull
jp
daa
inc
sti
rcl
arpl
and
mov
pop
push
and
sub
movsb
out
out
jmp
push
adc
jo
pop
ds
stos
jp
lock
sub
les
popa
js
lcall
and
lcall
popa
adc
aad
in
sub
and
orb
hlt
iret
cmc
adc
cmpsb
movb
add
adc
leave
jmp
scas
inc
call
fiadds
add
add
add
fstpt
xrelease
sarl
pop
xchg
adc
in
jnp
xchg
sbb
sbb
fisubrl
mov
shl
xor
dec
out
add
subl
or
add
fcomps
testl
fidivs
pushf
dec
sahf
addr16
inc
sub
div
and
and
pop
in
push
sub
jo
lcall
fisubrl
mov
push
inc
mov
loop
das
cmp
mov
xor
movsl
stc
call
mov
fs
mov
das
mov
pop
ficoms
test
inc
xor
xchg
popa
daa
inc
cmp
ds
mov
mov
mov
or
fs
and
loop
loopne
loope
inc
mov
lret
fwait
notl
insl
jg
xor
loope
subl
je
pop
fiadds
fstps
fldt
sub
cmpsl
fimull
faddl
arpl
filds
add
add
add
fdivp
mov
outsb
lcall
out
into
and
push
mov
add
mov
dec
mov
aad
mov
testl
aaa
sub
mov
test
jno
cmp
aam
out
ljmp
or
jmp
dec
test
cs
fsubl
fisttpll
xchg
sti
out
dec
adc
aad
inc
xchg
lods
outsl
pop
aad
cmpsb
je
pop
cmc
addl
sub
popa
enter
call
decl
pop
xchg
daa
dec
in
cmp
ljmp
lods
scas
or
dec
ja
pop
data16
mov
imul
loope
ja
pop
xchg
add
mov
adc
pop
stc
jae
mov
add
jae
daa
sbb
or
lods
and
sahf
sub
sub
pop
fmulp
or
cmpb
das
add
jg
mov
lcall
fisttps
or
loopnew
add
add
add
pop
push
stos
push
inc
sub
stos
inc
shlb
gs
sahf
shll
call
jae
push
and
mov
repnz
mov
fldenv
out
es
out
lock
cwtl
mov
in
jae
mov
adcl
sub
out
and
push
imul
add
dec
addr16
test
test
jecxz
leave
mov
or
push
int
jl
mov
rcll
push
xchg
imul
cmpsb
jbe
dec
or
test
lret
xchg
cmp
push
movsl
xor
in
imul
cmpb
xchg
xor
lods
mov
stc
int3
mov
sub
mov
incb
imul
sbb
daa
sub
fnstsw
mov
cmp
mov
hlt
aam
adc
hlt
outsb
sbb
jns
xchg
xchg
mov
xchg
xchg
test
add
add
or
jbe
jb
fdivs
cmpsb
ret
imulb
mov
mov
mov
xchg
sbb
and
jmp
shr
lea
popf
push
iret
repz
popf
out
lret
and
jae
cmc
add
je
repnz
int
jg
test
arpl
or
scas
pop
mov
dec
aad
inc
bound
xor
add
lret
sbb
cmp
xorb
movsb
pop
mov
adc
les
or
enter
imul
jne
out
sbbl
insl
xchg
push
sbb
dec
mov
cmpsl
fldcw
nop
jle
or
and
xchg
repz
orl
shl
pusha
xor
sbb
xor
push
stos
out
push
test
jo
js
sbb
fildll
lea
push
fidivl
add
imul
add
jae
fadd
fsubp
jnp
or
cld
les
mov
add
add
add
aas
push
jnp
push
rol
jbe
scas
xchg
movsb
cmpb
cltd
adc
xor
sub
js
jb
mov
xchg
sub
cmp
add
jb
xor
pop
xchg
pop
mov
mov
push
bound
or
test
test
mov
fiadds
xor
ret
lret
insl
mov
jb
inc
idiv
pop
jae
jae
cltd
pop
and
jbe
pop
fdivrl
or
out
jl
aam
lret
repz
mov
shll
clc
test
mov
xchg
jno
js
aas
insb
int
pop
int3
aas
ss
or
hlt
push
mov
mov
jmp
stos
imulb
shll
sbb
mov
and
mov
and
inc
dec
cmp
push
or
fwait
sbb
jb
xor
popa
jl
push
sahf
aaa
xorb
cmp
fadd
sub
test
add
bnd
arpl
mov
movsb
das
pop
push
cmp
sub
cld
cli
jle
dec
nop
xor
rcrb
jcxz
add
add
add
mov
sub
mov
add
ss
mov
lahf
aad
adc
xchg
pop
int
mov
mulb
xchg
sbb
stc
sub
jmp
mov
and
pop
add
inc
jne
sbb
loope
lcall
js
jne
sti
xor
xlat
movsl
in
in
mov
jno
mov
mov
pop
jge
push
mov
sbb
inc
frstor
fdivl
push
std
add
cmpb
jne
clc
lahf
insl
adc
cwtl
fisttps
je
lock
jge
pop
xor
xchg
mov
jge
repnz
movsl
jns
or
xor
and
cltd
add
pop
cmpsl
les
ja
pushl
adc
out
cltd
cmp
loopne
fcmovne
jb
xchg
movsl
mov
pop
mov
xchg
fdivr
push
shll
and
pop
jns
inc
push
clc
pop
cli
insl
popf
notb
lds
pushf
mov
lea
pop
jbe
ja
sti
aaa
out
ja
xor
add
add
add
inc
sar
repz
mov
xchg
push
cmc
pop
inc
push
push
mov
jo
pushf
imul
add
flds
int
sbbl
sahf
sarb
adc
out
sbb
mov
dec
movsb
lahf
je
jne
leave
cmpsl
test
adcb
int
mov
or
test
cmp
sub
pop
jp
push
and
outsl
xor
jmp
sub
lahf
pusha
test
push
dec
imul
jmp
sbb
outsl
adc
test
lea
pusha
clc
rcrb
rcll
imul
aad
and
lcall
clc
mov
std
fists
movsb
push
inc
loop
sub
fistpl
mov
push
cld
jnp
insl
sbb
outsb
push
jae
add
test
add
inc
pop
rolb
in
std
push
pop
roll
insl
mov
shll
xor
ror
cltd
outsl
mov
aaa
pushf
dec
jp
popa
addr16
add
add
add
cmp
lea
push
push
cmp
ret
jbe
push
pop
sahf
push
lret
scas
arpl
nop
xchg
push
dec
in
inc
jg
jb
or
mov
jle
cld
push
stos
xor
push
mov
dec
aaa
adc
popf
stos
stos
cmpl
aam
fldcw
and
cli
fsubrp
pop
cmp
sub
loop
ficompl
mov
sub
std
out
mov
mov
in
leave
shll
into
lcall
movsl
aad
clc
and
cmpl
jge
shl
xor
dec
outsl
jns
or
ljmp
push
cli
xchg
sub
xor
fcomp
mov
inc
nop
or
or
daa
sub
xchg
test
push
not
rcr
push
test
lock
xchg
mov
pop
push
add
cltd
cmc
adcb
fcos
pop
mov
sti
addr16
add
add
add
or
loope
xchg
lods
rcrl
fcoml
xlat
lods
stos
inc
sbb
ja
jne
enter
jo
ja
iret
pop
insl
pusha
popa
sub
cwtl
inc
ret
push
push
jg
pop
push
dec
testl
xchg
add
test
pushf
out
lahf
cmp
ja
fwait
xor
mov
test
fisubs
mov
orl
mov
insl
sub
inc
lcall
pop
es
mov
lods
inc
movsl
les
dec
xchg
clc
jb
push
xchg
inc
aam
cmp
adc
shl
jae
test
cwtl
add
ja
scas
adc
jl
cmpsl
pop
jbe
xorl
xor
mov
add
in
dec
cli
int3
inc
fiaddl
add
adc
fstpl
insb
xorl
fistps
mov
add
sbb
jbe
xor
rol
and
xor
mov
repz
lock
jg
in
and
test
add
add
add
jmp
test
sahf
and
into
xor
leave
out
pusha
dec
in
shll
inc
adc
sub
pop
dec
stos
lret
pusha
ret
sub
dec
pop
popf
xchg
jae
mov
pop
sub
ret
cltd
add
sub
add
imul
or
xor
testb
and
and
ds
mov
sbb
icebp
mov
mov
cmpsl
push
pop
jae
pop
adc
and
mov
mov
stos
imulb
jp
sub
dec
icebp
sub
mov
inc
in
sub
inc
cmp
sub
mov
cltd
rcrb
loope
inc
sbb
in
pop
mov
or
test
push
imul
and
xchg
push
mov
ja
push
lods
xor
jb
jg
and
mov
mov
sbb
mov
pop
cmp
rcll
add
add
pop
xlat
fistpl
out
add
add
add
add
push
mov
pushl
jg
dec
sbb
adc
dec
inc
rorb
daa
xor
aas
xchg
or
dec
adc
out
std
dec
pop
sub
cmp
and
pop
dec
lahf
lock
adc
sbb
sub
cmp
into
pop
loop
add
icebp
in
inc
adc
cmpsl
divb
cs
cmp
scas
pop
add
sbb
push
adc
mov
fstpt
nop
ja
leave
cs
bound
rcll
lds
stos
add
xchg
and
pop
pop
test
xchg
pusha
sub
fcmovu
sub
push
mov
push
enter
fsubl
ljmp
adc
sbb
sub
pop
hlt
sahf
lcall
push
jo
push
aam
aaa
jp
into
sub
out
and
inc
pop
or
inc
xor
dec
es
jb,pt
push
sbb
or
cmp
mov
add
stc
mov
dec
js
stc
mov
dec
int
and
pop
daa
addr16
add
add
or
and
sbb
inc
mov
push
out
js
sbb
out
das
ss
popa
cmp
ljmp
sub
mov
lods
sbb
out
xchg
mov
js
hlt
add
cmp
cli
jb
leave
push
mov
sahf
sub
movsb
pop
es
cltd
imul
mov
cld
adc
jo
and
sub
fidivrs
fstl
loop
sbb
adc
addr16
cmp
sbb
xor
adc
popa
adcb
inc
dec
mov
push
push
and
fistl
lods
mov
addb
and
jge
out
ds
mov
or
mov
icebp
jg
out
and
mov
mov
outsb
inc
mov
or
jl
jno
xorb
popf
movq
ret
sti
mov
mov
ljmp
mov
mov
pop
insb
fildll
fwait
jns
jns
repnz
mov
in
sbb
cli
cld
sarl
ficoml
inc
mov
mov
mov
popa
test
fidivl
dec
gs
add
bts
jne
cmp
cmp
fisubrs
mov
adc
sbb
cmp
inc
inc
ud0
dec
fcomp
fs
dec
mov
xlat
mov
xchg
push
test
cwtl
sbb
ds
int
lea
arpl
ds
inc
mov
sub
loopne
jecxz
mov
cmpl
icebp
add
or
mov
mov
in
les
int
or
shrl
push
movsb
mov
scas
xor
movl
lret
xchg
fists
divb
inc
xchg
loop
cwtl
ja
jl
push
sub
mov
or
push
out
cmp
jae
xor
and
add
add
mov
pxor
jnp
adc
jne
jp
testb
add
add
add
push
ret
int3
pop
dec
out
lahf
aam
mov
sbbl
sub
lds
aaa
test
cs
jb
insb
pop
lds
adc
test
xor
cmpsb
jge
cmp
out
mov
into
imul
xorl
push
sbb
cmp
iret
daa
sarb
in
fdivrs
pop
or
lods
stc
test
out
or
ljmp
fimull
sub
cs
jp
inc
fisttpl
les
jo
push
mov
mov
loopne
ret
les
xchg
and
lahf
notl
daa
ljmp
add
neg
xor
adc
rclb
lods
stos
shlb
xor
pushf
jno
mov
shrb
fwait
ret
ljmp
mov
sub
divl
ja
ss
xorl
sarb
jo
les
or
add
add
subb
fistl
das
mov
mov
add
add
add
out
adc
inc
in
and
adc
inc
mov
cmp
add
leave
movsb
mov
enter
dec
filds
notb
imul
popf
in
push
mov
pushf
jp
adc
add
sti
cmp
or
sbb
popl
pop
xor
sub
add
pushf
pusha
clc
ss
fcoms
and
leave
cmp
shl
adc
push
jp
and
push
xchg
in
mov
repnz
push
decl
push
mov
in
je
mov
std
cmp
lea
cmp
ffree
ljmp
in
fucomip
add
rcrb
pop
add
sbb
hlt
jl
mov
mov
out
cmp
loope
popa
popa
sbb
pop
push
mov
lret
sbb
sbb
cs
add
jb
scas
decb
fisttps
sub
add
add
add
push
mov
clc
pop
or
pushf
lock
mov
mov
int3
in
fldenv
sbbl
cwtl
lret
push
lea
sbb
inc
pop
in
mov
push
inc
scas
cltd
pop
dec
mov
sub
je
cs
jo
mov
inc
lock
push
ss
mov
ret
dec
pop
xchg
fwait
xor
fsts
call
test
rorb
mov
popa
mov
enter
outsl
push
pop
shrb
mov
aam
js
popf
sahf
inc
lea
pop
bound
pop
nop
out
lret
ret
rol
nop
std
ret
loop
ja
stos
jl
push
push
adc
inc
sarb
mov
divl
ljmp
fadd
push
pop
lret
cmp
ret
sarl
pop
icebp
leave
xorb
shlb
or
xchg
mov
mov
pop
movsb
lret
dec
out
inc
shrb
out
fdivl
outsb
mov
push
mov
xlat
mov
xchg
dec
xchg
decl
out
add
add
add
popf
cli
test
xchg
in
xor
pop
push
adc
stos
test
mov
sbb
out
xchg
loope
clc
daa
lcall
push
fmuls
cmp
jbe
dec
pop
mov
sbb
imul
jge
and
push
scas
loop
fists
ret
jle
pop
mov
add
mov
clc
mov
push
mov
jle
xor
shlb
push
cwtl
sub
xchg
mov
cltd
pop
pop
stos
shlb
mov
jle
movsl
mov
xor
aas
inc
lock
mov
push
push
hlt
repnz
adc
add
outsb
sti
sbb
andb
js
js
and
scas
add
imul
hlt
push
push
or
lods
xor
pop
cmp
ds
outsl
dec
jb
leave
test
pop
xor
loop
jl
xor
add
add
mov
aas
mov
xlat
add
addr16
add
add
add
gs
lods
es
inc
data16
mov
cmp
push
sub
gs
push
pop
bound
icebp
jg
pop
repnz
and
rorb
les
jmp
leave
dec
icebp
cmp
or
push
push
adc
orb
shll
stos
mov
clc
pop
cmpsb
dec
iret
ds
xor
adc
mov
cmp
jns
pop
jno
lret
jne
cltd
push
dec
jl
xor
push
jno
xchg
pop
arpl
jmp
dec
aas
scas
jg
pop
movsb
test
imul
mov
adc
mov
movsl
fdivs
je
push
xchg
dec
cltd
out
add
push
xchg
xchg
loopne
push
lds
sti
cmpsl
sub
jg
or
loop
jbe
and
or
jo
cmp
add
jl
cs
or
and
loop
fadd
sti
mov
mov
lock
add
add
imull
and
aam
pop
sbbl
repz
inc
sub
movsb
lret
xor
call
in
push
fisttps
mov
das
notl
sbb
lret
inc
ds
aam
or
fstpl
cmp
sbb
dec
xchg
jb
vpcmpgtd
push
popa
pop
push
ret
addb
addr16
xlat
cmp
add
gs
test
mov
inc
cltd
push
pop
pop
decb
adc
clc
add
jg
xchg
ret
and
pop
mov
jl
mov
pop
and
shr
mov
iret
ss
and
dec
pop
icebp
mov
cmp
mov
mov
inc
mov
dec
mov
inc
lret
sbb
sub
xchg
add
add
into
adc
neg
jge
xchg
jns
jo
pop
frstor
add
add
add
es
jge
push
cmp
cld
outsb
add
outsl
dec
aam
shrb
sbb
fwait
pop
mov
lea
xorb
xor
inc
sarb
and
mov
and
popa
aam
sub
sub
test
inc
push
sub
cmp
adc
xchg
ret
lahf
jo
notl
mov
adc
iret
cwtl
aad
cmp
sub
xchg
inc
outsl
negb
fcomps
in
inc
shll
jns
pop
addr16
mov
push
arpl
and
notb
jno
mov
lods
pop
mov
or
outsb
and
cmp
rep
aaa
sbb
and
sahf
in
scas
nop
enter
or
dec
js
adc
cld
leave
jb
fbstp
push
dec
ja
psrad
and
inc
dec
mov
and
jne
je
sub
push
xor
insl
shl
add
add
dec
sub
sub
fidivl
repnz
add
add
mov
pop
stos
push
cmp
mov
add
push
jle
push
adc
iret
push
sbb
dec
pop
test
loop
lret
and
cmpsl
adc
mov
pop
mov
ret
fiadds
mov
pop
scas
fbstp
mov
cmp
cltd
adc
repnz
sbb
mov
fldcw
aas
jns
negl
test
ficoml
into
mov
cmc
xchg
pop
jae
lods
jo
lods
add
xor
fdivrl
rolb
adc
cmpsb
aas
into
cmp
jno
dec
imul
and
addr16
test
or
icebp
out
stos
stos
pop
dec
mov
insl
in
cmp
sub
and
xchg
outsl
testb
add
dec
adc
daa
outsl
pop
sub
or
nop
outsl
fmuls
cwtl
add
repz
cmp
mov
xor
outsb
jp
loop
insl
xchg
add
ret
ja
and
aaa
divl
cwtl
jo
repz
add
add
mov
bound
adc
rcrb
dec
loope
sub
mov
pop
lods
and
movsl
addr16
jno
cwtl
inc
mov
xchg
ja
andb
sahf
inc
xlat
loope
scas
mov
jns
cmp
or
dec
push
xchg
mov
pop
jg
out
dec
pop
sti
cmp
aaa
pop
mov
adcb
cmp
shrl
rcl
fdivrs
dec
jno
mov
das
mov
jb
in
pop
sbb
inc
mov
ja
xchg
sbb
jmp
fsubl
pusha
xchg
sub
push
fistpll
push
sbb
mov
mov
push
mov
les
pop
arpl
outsl
aas
mov
push
insb
and
icebp
inc
and
adc
push
pop
jge
rclb
test
imul
push
mov
mov
push
imul
and
push
imul
add
in
xchg
jecxz
jmp
mov
iret
inc
cltd
xor
add
add
add
dec
arpl
sbb
fisttpl
fnsave
jl
pop
add
xchg
insb
fstl
test
daa
enter
mov
outsl
mov
int
inc
inc
int
dec
xchg
out
sarb
mov
pushl
cmp
sahf
fistps
push
dec
dec
shll
mov
add
enter
or
stos
or
xchg
test
jae
pop
push
jns
adc
xlat
sub
ret
sbb
loopne
mov
ds
movsl
mov
push
dec
adc
outsb
xor
mov
jle
mov
aaa
test
pop
cmp
pop
cltd
rclb
arpl
and
xchg
out
sti
outsl
andb
jbe
push
and
cld
aad
xchg
jle
dec
mov
fwait
mov
mov
lcall
jmp
xor
rorl
sub
sub
sbb
rcrb
jle
jne
pusha
popf
pop
cmp
cmc
add
add
add
fnstenv
ds
inc
rcl
ja
in
fsubrp
cmp
pop
loop
dec
jg
call
rorb
xchg
adcl
mov
add
pop
push
out
insl
or
aas
repz
lret
push
mov
bound
das
sbbl
jle
mov
inc
subl
imul
inc
sub
dec
sub
xchg
mov
lahf
pop
out
xor
popf
fidivrs
and
add
dec
test
inc
hlt
adc
mov
in
outsb
sti
sub
jnp
in
imulb
hlt
xor
pop
jmp
xchg
dec
mov
jns
std
sbbl
fcoml
push
cld
dec
inc
les
out
lahf
setg
ss
test
and
mov
rcrl
stos
cmp
jp
jns
pop
aas
mov
add
add
imulb
mul
xor
mov
add
add
cmpsb
jecxz
loop
dec
scas
sarb
or
xor
std
dec
ds
adc
xchg
jbe
insb
loop,pn
cs
add
test
sub
or
xchg
orl
arpl
fadds
jle
adc
movsb
pop
pop
adc
cmpl
aas
push
push
jne
mov
cmpsl
mov
xor
mov
sbb
div
les
mov
inc
dec
not
loop
insb
divl
mov
cmpb
lock
aam
and
jle
mov
sbb
dec
inc
xchg
mov
fisttpl
mov
push
aas
pushf
add
test
adc
push
cmp
mov
mov
fiadds
adc
dec
test
daa
hlt
lods
orb
dec
dec
pushf
sub
sub
and
cs
aaa
repz
repnz
in
dec
inc
sub
lahf
fcomps
jno
or
ret
add
xor
jb
jae
jle
test
testl
add
and
clc
xchg
cltd
mov
adc
sub
lods
repz
adc
out
mov
xor
sarb
test
sub
pop
pop
clc
push
outsb
adc
sub
dec
inc
testl
mov
or
cmpb
fdivs
cmpsl
pop
mov
je
xor
movsb
adc
xor
lods
cmpsb
jmp
sarb
add
push
out
xchg
fdivrl
jl
in
notb
xchg
ljmp
cli
mov
cmp
sbb
push
negl
fwait
aad
rolb
sahf
xor
jmp
stos
repnz
imulb
or
adc
mov
in
jp
and
popa
js
je
xor
dec
out
ss
insl
mov
fdivr
fwait
and
mov
cltd
fisttpll
or
fcmovne
xor
pop
divb
aam
into
cltd
int
sub
shll
add
add
ds
in
idivl
js
mov
fs
push
dec
addr16
add
add
add
xor
js
mov
jl
bound
shl
sahf
mov
or
lret
xlat
xchg
shlb
test
xchg
out
add
mov
imul
jmp
mov
bnd
add
jnp
adc
not
fidivl
pop
subl
cmp
jno
test
push
xor
jp
into
dec
jmp
pop
icebp
mov
cmpsb
pop
sbb
add
test
push
and
dec
mov
jmp
sub
or
aas
ret
inc
sub
cltd
pop
sub
or
pop
roll
cmp
xchg
add
call
xchg
add
or
sahf
mov
mov
scas
mov
repz
out
pop
rcll
into
clc
mov
push
dec
addr16
xor
in
mov
xchg
inc
adc
out
fs
sbb
and
pop
es
inc
cli
aas
into
lret
bsf
add
add
add
movsl
lret
mov
push
ffree
xor
lods
ficoml
cmpxchg
test
cmp
xchg
and
lcall
cmp
cwtl
xchg
in
lcall
push
dec
sbbb
pusha
cs
jnp
orl
mov
inc
test
repnz
adc
rcrl
in
dec
arpl
and
xchg
ja
insl
mov
xor
pop
mov
aaa
out
imul
repz
jmp
sub
in
in
xchg
sbb
fs
xchg
jle
mov
out
pop
repz
and
sub
mov
push
ja
jmp
decb
mull
inc
test
mov
mov
orl
push
fsubrs
cmp
cltd
mov
bnd
mov
lcall
leave
pushf
fadd
addr16
add
add
add
fwait
xchg
call
mov
repz
popa
lds
mov
dec
test
mov
out
or
mov
shll
or
jo
pop
sahf
mov
fcomps
mov
out
jae
cmp
jo
shrb
or
inc
cmp
inc
sbb
ss
popfw
int3
test
add
sbb
int
sahf
adc
sub
shll
sti
fsubs
call
stos
in
dec
hlt
sbb
xor
add
repnz
inc
ja
cs
mov
out
mov
and
push
mov
inc
minps
fdivl
loopne
roll
mov
test
int3
xchg
aas
movsl
add
fnsave
sbb
clc
lds
repnz
or
push
out
jb
cmp
pop
cld
mov
test
mov
xlat
mov
xchg
mov
aaa
jecxz
or
add
jae
cltd
dec
mov
jno
and
add
add
add
adc
mov
inc
fiadds
movsb
lods
xchg
adc
mov
fbstp
sbb
leave
mov
dec
sbb
push
mov
enter
lret
mov
sub
fldenv
pop
cmp
mov
sbb
cld
lcall
in
pop
lods
sub
lea
jno
inc
daa
fs
jnp
icebp
movsl
mov
fmuls
sbb
cmpsb
lock
lcall
popl
lea
push
pop
lds
pop
fnstcw
xor
pop
push
xchg
addr16
adc
dec
mov
orl
lcall
cli
and
jnp
rorl
sarl
aas
stos
jge
xorb
sti
test
dec
mov
out
in
cmp
adc
and
rorb
arpl
je
xor
jae
xchg
mov
push
jecxz
xor
bound
adc
jge
ds
into
nop
out
cwtl
jle
push
sub
dec
push
aaa
lret
add
add
add
testb
mov
sub
mov
fcomps
and
ss
pop
aas
push
push
int3
lods
sarl
mov
and
add
mov
popf
lcall
out
jno
sahf
lds
dec
pop
scas
and
mov
imul
in
sahf
sbb
loopne
sahf
lods
js
daa
mov
cmp
call
std
mov
popf
adcb
dec
sub
jecxz
pop
enter
ret
push
js
inc
iret
jne
push
into
inc
sub
scas
insb
pop
setno
loope
jg
mov
fsubp
rolb
out
out
pop
enter
pop
stos
mov
icebp
fisubrl
lret
adc
pop
clc
sbb
xor
arpl
xchg
dec
add
mov
mov
sbb
ljmp
mov
in
fidivrl
pop
imulb
shl
jno
test
jg
push
pop
push
mov
addr16
add
add
add
js
imul
xor
sub
jmp
push
test
stos
mov
mov
in
push
lds
imul
dec
imul
stc
xchg
insb
xor
xor
dec
adc
in
out
fadd
xor
push
sbb
je
xlat
and
inc
push
rorb
pop
repz
mov
jg
bound
adc
mov
jne
xchg
aad
imul
push
mov
lret
mov
es
push
cs
cmp
adc
jns
cmp
in
mov
roll
repz
jno
imul
dec
and
mov
aas
pop
or
add
mov
jmp
sub
outsb
fmuls
mov
test
or
jge
pop
and
mov
pusha
add
mov
cld
inc
xchg
lock
aas
jae
inc
dec
dec
icebp
filds
xor
push
out
scas
gs
in
orl
push
rcll
adc
movsb
push
in
cmc
jne
sbb
js
jmp
add
add
add
sub
mov
and
add
fcomi
in
or
xorl
jbe
insl
fistps
push
call
les
daa
jp
daa
cltd
push
and
fcompl
pop
outsl
mov
or
or
inc
sub
adc
outsb
push
sbb
jp
mov
mov
fnstenv
sub
mov
xor
push
and
jnp
and
push
push
lahf
add
push
cmp
ret
push
leave
ss
lods
xor
mov
repnz
mov
mov
roll
pop
sbb
push
add
fsubs
jecxz
lods
adc
xchg
mov
lahf
lea
pop
call
movsl
mov
jle
xor
sbb
jge
xor
push
sbb
stos
fcomp
hlt
sub
into
inc
mov
aas
incl
push
push
ja
pop
jns
mov
add
out
shlb
aas
out
int3
mov
mov
incl
add
add
add
movsb
and
fs
mov
push
fucomip
push
xchg
jle
movsb
orb
dec
mov
notl
push
test
sub
pushf
xchg
xchg
cmp
jl
and
gs
push
mov
and
mov
and
xchg
imulb
call
mov
cs
mov
faddl
jnp
sub
sub
lret
or
jp
cmp
iret
lahf
add
adc
movsb
aad
fmuls
scas
push
inc
ja
fstl
cmp
test
dec
push
push
sahf
fnstcw
inc
in
mov
jnp
jmp
push
sbb
sbb
je
mov
clc
int3
add
add
pop
dec
cmp
lock
addl
or
add
adc
mov
arpl
pop
inc
push
or
mov
lds
rorb
scas
mov
and
cwtl
mov
add
add
or
mov
and
aam
xchg
add
add
add
popf
mov
sbb
add
adc
aam
jnp
loope
icebp
or
sub
xchg
jbe
xor
sbb
jmp
test
ja
int3
push
mov
in
int
test
int
stos
pop
mov
pop
mov
dec
adc
fs
clc
push
test
nop
loope
dec
sbb
mov
xor
dec
daa
sub
adc
fwait
mov
pop
or
and
jl
out
dec
jl
jae
cs
pusha
cmc
lret
jle
dec
cmpsl
push
movsl
cmpsb
pop
dec
ja
cmpsl
clc
mov
dec
out
mov
rcl
dec
int3
sub
lock
inc
mov
sbb
sarb
aam
mov
add
add
xchg
mov
decb
lock
cmp
in
aam
ss
clc
mov
lea
stc
loopne
add
test
sub
xchg
xchg
call
add
dec
rol
lret
clc
cmc
inc
stos
repz
add
add
add
fcoms
bound
mov
xor
jo
inc
in
movsl
fdiv
sub
fs
scas
and
in
and
scas
and
cld
call
xchg
jge
bound
dec
fisttps
insl
lahf
push
sbb
jne
mov
lds
dec
and
adc
outsb
arpl
sti
dec
dec
mov
lahf
mov
ret
mov
mov
js
cmp
shrb
mulb
fbld
mov
push
mov
lock
push
push
popf
push
sahf
mov
add
lock
test
or
lahf
mov
imul
jnp
xchg
push
lret
imul
out
arpl
or
mov
stos
inc
fwait
dec
jge
jge
lea
insb
add
and
jne
into
movsb
inc
je
mov
cmp
fucom
loope
rcr
add
std
aaa
mov
shll
outsl
add
add
add
add
cmc
mov
call
add
lret
aam
and
cwtl
gs
das
fwait
bound
pop
mov
add
jge
repz
sbb
and
push
sub
jle
es
dec
inc
pop
jmp
lods
push
movsl
mov
scas
aas
clc
mov
jns
int3
dec
pop
mov
cmc
pop
xor
stos
lods
fsubp
aas
fimull
add
stos
xor
push
mov
inc
or
ret
subl
sahf
xor
int3
xor
xchg
fwait
jbe
mov
xor
aas
cmpsb
mov
dec
repz
push
test
movl
out
enter
lret
loope
aaa
push
jne
ja
es
shrb
gs
shll
ss
outsb
sub
xor
leave
mov
and
stos
lods
mov
cwtl
aas
dec
and
lods
fildll
xor
mov
insl
aam
mov
scas
add
or
add
adc
add
out
sbb
insb
ja
movsl
cmpsb
icebp
dec
cmpsl
cmpsl
push
cmpsl
test
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
jle
out
orl
or
xor
push
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
