push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
mov
adc
int
adc
xor
xor
lea
push
repz
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
popf
mov
notl
enter
repnz
aam
sbb
fldcw
fnstcw
push
pop
fstpt
arpl
mov
cld
and
inc
jno
sbb
jns
sahf
or
scas
sub
cmp
mov
push
xor
xchg
and
add
push
loopne
sbb
mov
ja
xlat
fidivl
stos
push
lods
pop
fistpl
adc
xchg
out
in
xchg
xor
add
add
mov
imul
cmp
xchg
add
and
test
shll
mov
rolb
jecxz
into
xor
lret
pop
sbb
push
js
repnz
pop
test
or
mov
lret
cmp
mov
imul
in
stos
lcall
and
pop
cmp
scas
sbb
pop
es
out
in
dec
jl
pop
sbb
jns
js
push
roll
ljmp
xchg
aad
jp
mov
int3
dec
popa
jl
push
adc
push
shll
dec
push
jle
mov
fidivrs
jae
jne
mov
sub
mov
xchg
test
dec
ss
push
cmpsb
ret
jae
lock
cld
aam
adc
and
scas
push
push
sub
loope
xchg
mov
add
into
pop
pop
call
ret
jle
popf
insb
js
in
add
xchg
xchg
movsb
xorl
jae
in
push
mov
xor
mov
pop
mov
int3
xchg
ja
jb
rcl
leave
jle
dec
testb
xchg
pop
lcall
test
iret
insl
push
lcall
stc
inc
mov
or
fisttpll
out
cmp
es
dec
clc
scas
mov
hlt
pop
and
jl
movsl
mov
loope
stos
test
gs
int3
add
fldenv
pop
sub
pop
sub
push
inc
fcomip
xchg
loop
pop
jo
jecxz
fiadds
mov
cmpsb
movsb
mov
inc
xchg
xorb
mov
cmp
test
je
add
push
cltd
popf
fldt
hlt
pop
mov
and
add
or
xchg
out
mov
dec
inc
std
ds
fnsave
xchg
mov
sbb
mov
pop
ljmp
lcall
add
mov
adc
sbb
xor
andb
jp
insl
cwtl
clc
inc
jle
out
xor
flds
cli
sarb
xor
add
or
cld
dec
fstps
mov
fs
or
cmp
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
popf
add
adc
adc
adc
inc
jae
mov
repz
fisubl
loope,pn
ret
adc
cld
idivb
sbb
enter
scas
xchg
sub
jp
jno
mov
ja
cld
sbb
and
add
xchg
insl
push
fistl
mov
push
push
cmc
push
dec
arpl
xchg
in
sub
fs
in
inc
incb
mov
lds
jmp
es
notl
loope
pop
xor
mov
or
shll
cmp
adc
aad
xchg
sti
das
mov
or
and
stc
add
or
std
lcall
add
imul
cld
adc
jg
sahf
cmc
lret
cmp
xchg
mov
call
fwait
cmp
mov
nop
enter
mov
pop
sub
orb
neg
xchg
push
sub
jnp
ljmp
repz
push
push
adc
jnp
mov
icebp
mov
sbb
xlat
rclb
mov
jbe
mov
and
aad
dec
insb
pop
jnp
into
inc
add
mov
xchg
addr16
jbe
inc
push
js
ffree
std
mov
gs
enter
in
cmp
fdivs
sbb
mov
push
sbb
sbb
mov
ljmp
push
inc
rorl
cltd
test
shrb
push
mov
pop
sbb
xor
das
mov
scas
negb
jp
mov
lds
orb
and
cmp
out
add
xor
mov
xlat
cmp
add
xchg
arpl
mull
mov
imul
pop
mov
repz
and
in
xor
js
into
mov
clc
xor
daa
sahf
push
jbe
movsb
cli
and
cmp
mov
xchg
movsl
push
gs
pop
out
imul
inc
dec
lea
sbb
pop
jbe
loopne
jae
icebp
out
loop
pop
jnp
mov
fidivs
fnstcw
gs
iret
cld
dec
cltd
push
adc
mov
std
cs
push
jmp
mov
jns
leave
lds
jge
addr16
adcb
gs
sub
jb
inc
add
cltd
and
adc
fnstsw
or
and
and
dec
jl
jecxz
cli
aaa
and
leave
pop
daa
or
movsb
cmp
leave
fsubrl
mov
xorl
or
xchg
and
sbb
mov
loop
pushf
fwait
xor
add
fnstcw
sbb
bound
xchg
jecxz
out
inc
cmpsb
popa
lret
jno
repz
mov
cld
or
mov
cmc
cmc
movsl
dec
sbb
cmpb
mov
add
mov
xor
adcb
neg
mov
jle
cltd
mov
icebp
xchg
sub
inc
aad
dec
sub
mov
xor
mov
sbb
mov
imul
push
shl
xor
out
adc
decl
cltd
loop
ds
and
lock
clc
fcoms
rol
test
out
sbb
test
loop
bound
cmpsb
pop
cwtl
inc
cmp
negb
dec
jg
jne
shll
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
jle
jle
orb
adc
adc
adc
push
xchg
das
sbb
mov
add
sahf
dec
inc
jecxz
jge
cmc
dec
call
push
in
orl
or
leave
sbb
lcall
adc
and
ljmp
or
dec
xchg
xor
inc
out
lahf
es
push
lds
rcll
jne
or
dec
stos
sub
fidivs
adc
or
cs
sub
sbb
jbe
mov
fimull
xor
shll
ds
cmp
cmp
push
mov
stos
out
add
testl
lods
or
jno
inc
aaa
mov
test
cld
idivl
or
jns
mov
cmp
and
sub
mov
in
mov
lret
ret
dec
outsl
xchg
pop
dec
lock
push
cmp
push
mov
mov
aaa
xchg
and
lods
sbb
jle
shll
fucomi
fsubrl
sbb
sbb
cmpb
loopne
cmp
imul
cld
clc
sbb
stos
dec
inc
rolb
sub
lods
pop
push
dec
lcall
sbb
jp
mov
jmp
push
mov
cmp
inc
mov
inc
hlt
idiv
cmp
sbb
shlb
les
pop
pop
scas
xchg
scas
std
mov
mov
xchg
clc
and
imul
loopne
push
adc
fisubrl
pushf
leave
inc
scas
inc
out
inc
mov
ss
cli
repnz
leave
mov
cli
outsl
repnz
sub
rcrb
loop
shrb
push
jmp
pop
nop
clc
xor
outsl
mov
inc
xchg
filds
pop
cmp
xchg
jg
mov
xchg
pop
ja
je
or
adc
lea
lcall
mov
dec
repz
addl
cmp
inc
repnz
or
mov
jbe
lea
cwtl
aad
adc
jecxz
pop
out
mov
in
mov
pop
mov
popf
sbb
es
popa
mov
fldl
mov
shl
add
jne
sbb
or
nop
dec
mov
push
sub
push
push
jno
lret
mov
cld
sub
in
sbb
jbe
in
jb
sub
pop
sar
ffreep
pinsrw
lcall
fildll
nop
or
bound
xchg
jne
cmpsb
mov
pop
aad
mov
cmp
push
jl
push
dec
insb
movsl
dec
mov
dec
cwtl
sub
pop
inc
fstl
scas
or
mov
mov
shll
xchg
pop
call
mov
dec
into
call
xchg
lret
adc
sub
bound
mov
sbb
mov
rcll
or
rolb
mov
roll
ret
sub
dec
inc
xor
or
cmpl
inc
lock
sbb
cmp
out
lahf
repz
sub
mov
lret
data16
mov
imulb
das
popa
sub
or
push
and
cmp
imul
add
dec
cs
jl
dec
test
stc
xor
xor
mov
adc
jae
push
loopne
imul
nop
les
xor
fisubrl
dec
mov
mov
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
stc
push
call
cli
nop
imul
iret
lcall
je
loope
das
xor
pusha
cmp
lret
dec
pushf
test
pop
ficoml
inc
cltd
xchg
add
int3
cwtl
jns
sub
jae
idivb
jns
sbb
idivb
dec
repnz
jmp
stos
inc
clc
out
mov
cld
fidivs
pop
test
clc
mov
in
call
pop
int3
mov
xor
jnp
lret
scas
cwtl
fwait
negl
fmuls
out
pop
push
mov
push
jo
sub
out
sbbb
data16
dec
jge
out
fstpl
ret
mov
jg
sarl
ljmp
xor
xor
test
jge
scas
out
mov
bound
mov
lods
rcll
arpl
cmp
jns
ret
mov
sbb
outsl
das
sbb
rolb
or
sbb
cmpb
test
inc
push
sbb
pop
inc
dec
mov
inc
push
mov
popa
sub
or
out
add
dec
outsl
push
add
jnp
stos
neg
rol
or
inc
out
xor
movsl
iret
addr16
mov
lods
addr16
ror
mov
push
add
aas
add
xchg
dec
or
mov
pop
xlat
or
clc
jb
inc
adc
daa
loop
mov
insl
push
add
inc
insl
mov
in
mov
dec
mov
lret
add
push
test
sub
dec
dec
sub
cltd
dec
ljmp
jle
sti
in
shr
mov
add
mov
or
adc
jno
mov
lods
xchg
outsl
fsubrs
loopne
scas
std
cmc
lea
jno
mov
je
inc
in
pop
sub
mov
sub
jno
mov
push
and
cwtl
out
mov
add
idiv
inc
or
mov
sahf
loope
call
inc
andb
push
xchg
fwait
movsb
clc
ljmp
mov
dec
xor
iret
and
mov
out
pop
xor
scas
das
std
loopne
jne
aad
nop
shlb
fldl
enter
adc
or
xchg
adc
fcoml
or
lahf
sub
rolb
add
and
stc
push
jle
lahf
data16
pop
jno
aaa
dec
ficoms
popf
fistpll
idivl
push
int
fwait
cmp
cwtl
addr16
cmp
push
leave
push
cmc
and
adc
sub
pop
out
push
jne
sub
loopne
out
test
std
ret
push
nop
adc
sbb
test
movsb
push
out
jp
cmp
mov
jae
mov
xor
cli
mov
mov
adc
add
in
mov
and
je
inc
mov
mov
into
imul
mov
and
add
ljmp
push
lret
jle
mov
and
mov
add
lret
xchg
in
jle
stos
adc
xchg
inc
loop
xor
jno,pn
imul
and
rcrl
jl
fildl
and
fisubrl
jge
mov
pop
mov
adc
or
dec
cmp
je
xchg
dec
sub
and
add
jl
hlt
inc
jl
inc
into
adc
sbb
ret
or
cmpsb
adc
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
push
mov
adc
adc
add
arpl
jno
cmp
lahf
addr16
or
dec
movsb
test
jo
je
inc
mov
xchg
filds
aas
pop
enter
jo
arpl
mov
into
pop
mov
xor
loopne
icebp
mov
or
or
mov
data16
insb
mov
insb
mov
adc
mov
push
pop
ret
out
pop
call
xchg
movsb
adc
ficoml
inc
xor
cmp
stos
popf
fnstcw
arpl
xchg
or
cltd
int3
leave
ret
dec
loopne
in
mov
arpl
xor
and
dec
jmp
add
sub
jno
cmp
mov
stc
clc
test
cld
data16
cmp
jge
xor
sub
push
sbb
adc
xchg
mov
loope
mov
add
shrb
das
fldenv
pop
mov
or
push
scas
lret
cmc
orl
xchg
push
data16
lahf
ja
inc
push
pop
shrb
and
scas
xor
xchg
ror
add
sar
in
std
push
push
cltd
inc
push
repz
xchg
and
cld
add
xchg
sahf
outsl
rclb
out
cmp
mov
add
inc
frstor
cmp
call
xorb
insb
mov
shrb
insb
loopne
movl
dec
dec
mov
push
in
xor
add
sub
cmp
outsl
pusha
popf
and
icebp
jmp
mov
inc
frndint
xor
test
test
jecxz
dec
lea
stos
popf
cltd
mov
sahf
in
sub
pop
mov
xor
sti
out
adc
test
xchg
ret
imul
rorb
leave
add
scas
aad
je
repz
stos
xor
mov
pushf
stos
adc
inc
sbb
hlt
bsf
push
int
mov
gs
lds
add
inc
mov
int3
or
xchg
insb
mov
add
add
pushf
lds
out
inc
xchg
or
inc
pop
lcall
arpl
or
dec
sub
aam
push
mov
test
add
popa
xchg
mov
arpl
fisubrl
cmpsl
shl
sub
iret
rorl
repnz
xor
cwtl
mov
push
scas
repnz
mov
js
dec
in
sub
sub
fsubrs
adc
stos
aas
shll
and
cmpsb
sbb
cmp
ret
pop
aam
pop
inc
jo
outsl
mov
inc
popa
sti
je
jno
fistps
xchg
popfw
push
xor
sub
pop
jbe
dec
sti
xchg
cwtl
sbb
pop
out
push
fld
int3
and
mull
push
shr
xchg
ljmp
jae
mov
lret
lds
pushf
xchg
xchg
push
pop
xchg
mov
pop
int
out
inc
mov
mull
mov
sbb
pop
push
mov
out
in
jmp
js
mov
mov
stos
sbb
pop
je
lahf
popa
ret
insl
movsb
mov
sbb
jg
sarb
sub
fnstenv
jle
jae
push
push
sbb
add
push
mov
adc
inc
shrb
cli
mov
enter
mov
test
test
jo
int3
xchg
adc
inc
inc
add
pop
clc
outsl
xor
cmp
not
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
fnstenv
adc
int
adc
dec
fs
push
lock
repnz
add
and
jnp
loop
orb
mov
cmp
xor
aad
or
pop
imul
orl
or
fstpt
xor
out
jge
out
adc
aam
imul
xchg
or
repnz
nop
fnstsw
xor
ret
not
push
stos
insb
or
mov
out
cs
mov
and
test
inc
stos
adc
xchg
cltd
mov
jno
dec
fsubl
pop
lret
test
push
mov
dec
and
es
dec
ficoml
add
lcall
mov
in
add
fldl
jg
jns
jns
ret
pop
imul
ret
add
xchg
add
sub
mov
pop
les
mov
aas
out
jl
or
sbb
inc
inc
push
xlat
lods
inc
jns
sub
mov
mov
loop
adc
jp
and
mov
adc
fwait
test
mov
sub
mov
notl
insb
lcall
mov
mov
push
mov
stc
into
adc
cs
jns
insl
mov
mov
push
push
mov
inc
jb
pushf
dec
lret
sub
mov
cltd
iret
or
and
xchg
mov
repnz
mov
cld
inc
clc
dec
add
imul
push
daa
fdivr
data16
out
les
jns
outsl
rcrl
fs
or
test
pusha
pop
inc
cmpsl
xor
mov
int3
xor
and
shrl
fistpl
mov
and
mov
jl
cmp
jp
leave
loope
mov
lods
dec
inc
mov
xor
insl
mov
dec
inc
lock
stos
xor
outsb
popf
leave
movsl
fadds
je
xchg
xor
lds
pop
adc
push
sbb
aaa
jmp
outsl
les
jae
and
pop
xor
sub
push
aad
clc
call
push
aas
cmp
cmc
clc
mov
inc
pop
mov
xor
das
mov
out
and
in
hlt
sbb
loope
mov
mov
push
pop
xor
test
fucomip
mov
mov
add
mov
ljmp
sbb
and
shrl
push
sbb
fwait
push
fistpll
aad
xorb
or
clc
in
sub
shl
std
fidivrl
out
jg
push
jmp
ss
inc
gs
xchg
and
std
out
sub
test
mov
xchg
lds
pop
fs
int
aam
in
pushf
adc
or
ja
cmpsl
dec
cmp
aas
adc
sbb
mov
sub
lock
outsl
mov
push
push
dec
in
subl
xor
fbld
mov
movsl
mov
mov
mov
pop
fadds
add
xchg
jecxz
adc
psubusw
add
lea
mov
push
push
aas
mov
mov
stc
mov
andb
in
movsl
sbb
and
add
dec
loopne
insl
inc
sbb
nop
clc
bnd
xor
add
xor
sbb
jnp
adc
xor
mov
int
jo
cmp
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
or
in
adc
int
adc
add
xor
icebp
fdivl
aad
inc
add
fsubrs
imul
dec
mov
sbbb
ficomps
pop
pop
orl
push
out
xchg
jl
push
or
imul
sahf
scas
inc
dec
in
out
cmp
inc
sub
xor
lcall
popf
mov
jmp
cmp
mov
inc
aam
mov
cmpsl
loope
stos
jnp
lret
xor
sbb
dec
xor
mov
shrl
sub
pop
daa
lahf
xchg
int3
mov
cmp
inc
push
out
in
add
je
cmp
push
xor
movsl
dec
pop
push
push
fs
sahf
cmp
push
cwtl
or
xlat
xchg
fs
jmp
dec
push
cmp
in
aam
in
add
fistpl
cmp
sbb
iret
sub
out
enter
imul
dec
inc
jo
xchg
sbb
jnp
sub
pop
in
or
icebp
pop
nop
or
sub
jecxz
push
sub
je
inc
repnz
sub
aas
ja
lcall
ret
gs
fwait
cmc
lea
mov
notl
dec
inc
std
push
test
lcall
pop
rclb
or
gs
dec
test
push
mov
out
push
in
ds
test
rorb
push
stos
cmpsl
cmc
fadds
fiadds
jmp
popf
push
adc
sbb
inc
test
pop
scas
aam
mov
pop
sub
and
faddp
ja
int
stos
ja
nop
iret
inc
pop
cltd
jae
push
ljmp
pop
xor
sbb
cli
push
push
mov
loope
loopne
mov
adc
pop
jle
pusha
in
sub
add
xlat
lahf
adc
outsb
ret
hlt
xchg
lcall
pop
jp
in
ja
cmp
out
call
rorb
pushl
pop
das
sbb
adc
pop
xor
sbb
hlt
js
cld
xchg
xchg
rorb
mov
xor
ret
out
mov
push
sbb
xor
mov
int3
call
push
jb
out
add
cwtl
push
or
mov
cltd
fwait
xchg
ret
lock
cmp
fsubr
add
fs
rcrb
jnp
int3
sbbb
popf
xor
add
add
leave
push
out
jae
les
fisttps
imul
stos
cmp
adc
pusha
call
xor
mov
push
imul
mov
scas
mov
sti
dec
adc
push
and
mov
stos
pushf
cwtl
push
cwtl
sar
mov
adc
das
clc
and
iret
xor
mov
mov
negl
movsb
sub
repnz
lods
push
shrl
imul
flds
xor
sbb
lea
pop
pop
sbb
jp
jae
pop
es
inc
out
sbb
leave
push
add
cmp
movsl
dec
lcall
pop
mov
push
jnp
sbb
jne
push
cld
inc
js
push
mov
or
cmpsb
push
jae
cltd
fimuls
stos
fldenv
mov
xor
mov
push
sub
mov
repz
xor
lods
dec
mov
cmpsl
pop
inc
sahf
push
jae
stc
fimull
or
aaa
mov
lds
lea
jo
xchg
add
jl
inc
repz
jmp
sub
push
jo
inc
jle
fwait
adc
jns
aam
inc
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
ds
js
out
adc
adc
adc
and
fistpll
mov
xchg
push
std
inc
jne
lcall
push
mov
test
jns
sub
bound
mov
pop
xchg
repnz
mov
jg
mov
inc
cmp
sub
int
je
jne
lods
mov
mov
lret
fwait
add
mov
add
call
dec
loopne
xchg
and
mov
inc
and
movsb
ret
lds
or
or
in
popf
pushf
push
bound
xchg
xor
dec
adc
sub
cmp
imul
loopne
lret
addl
movl
jg
dec
push
push
imul
arpl
add
clc
scas
inc
xchg
adc
pushf
push
filds
in
xchg
stos
insl
mov
xor
movsl
xor
push
cs
push
fisttps
andl
dec
adc
icebp
in
mov
popf
mov
xchg
and
add
iret
sahf
and
mov
push
sub
sbb
mov
imul
inc
push
pop
out
dec
test
jp
stos
xrelease
and
xor
add
ljmp
sahf
or
push
loopne
jae
and
xor
popa
aaa
push
test
push
cmp
lret
loop
adc
adc
ljmp
in
les
dec
inc
fwait
mov
insl
or
fs
out
mov
xor
hlt
fcmove
into
and
aas
cmp
jp
pop
movsb
popf
cmp
and
xor
sbb
and
or
mov
pop
adc
in
dec
lods
jns
mov
xlat
cmp
mov
orb
xor
jle
ja
inc
lods
mov
mov
mov
lea
inc
movsb
cmp
sub
dec
aaa
std
lods
push
jmp
mov
jnp
push
mov
insb
insb
ficoms
in
push
add
hlt
cli
fcmovu
sahf
jne
stc
out
sbb
mov
and
lods
sub
cltd
adc
xchg
movsb
mov
jp
cmp
xchg
add
dec
movsb
and
or
out
lret
push
or
push
push
data16
inc
insl
sti
xchg
jmp
arpl
inc
jecxz
scas
fadds
repnz
xlat
lret
das
jb
rorb
ja
fcoms
arpl
jne
mov
sbb
add
sub
loop
adc
mov
lea
test
mov
lcall
mov
jb
rcll
insl
orl
iret
jae
popf
ret
nop
xchg
clc
mov
or
enter
dec
mov
ret
mov
push
test
out
neg
ffree
aaa
jnp
push
mov
sti
scas
sarb
xchg
sbb
sbb
sbbl
ja
fisubs
test
push
push
outsb
pop
scas
xor
shl
and
in
insb
mov
in
mov
cmp
fnstcw
cmpsl
lahf
iret
sbb
cmpsl
inc
cltd
xchg
sub
fisttps
xlat
cmc
sub
inc
cmp
pop
pushl
clc
aaa
and
dec
add
adc
jbe
pushf
xor
mov
mov
jb
mov
mov
push
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
lret
scas
mov
ficoms
adc
adc
adc
test
imul
fisttpl
or
ljmp
jns
gs
movsb
dec
repnz
or
cmp
inc
jne
mov
or
jmp
fiaddl
cld
ss
inc
mov
pop
mov
int
add
xor
sub
shrl
andb
hlt
mov
jg
xchg
rcl
xchg
pop
gs
aam
pushf
adc
test
jb
mov
xchg
nop
aaa
push
mov
pusha
inc
sbb
ss
or
push
mov
cmovle
push
stos
fdiv
mov
gs
gs
sub
sub
push
jg
or
jne
push
sahf
mov
imul
mov
adc
mov
push
mov
pushf
pop
in
mov
xchg
push
inc
out
add
lea
in
sub
pop
in
adc
fwait
scas
add
dec
gs
cmp
jmp
and
lret
jno
rclb
pop
sbbl
push
xchg
ss
add
mov
shl
divb
fsubrs
jo
xor
fdivl
test
out
adc
cmpsb
cmp
or
cs
jne
rol
filds
mov
and
xchg
xchg
cli
adc
outsb
lock
cmp
lea
or
adc
and
adc
fstps
xor
sbb
test
jge
pop
mov
mov
les
out
mov
mov
jg
mov
add
gs
dec
cmpsb
stos
inc
dec
dec
mov
movsb
and
mov
outsl
test
dec
mov
mov
inc
jbe
negl
out
cmpl
add
scas
inc
sub
jne
pop
adc
jmp
pop
into
or
xchg
xor
add
pop
fisttpll
ljmp
lods
sub
arpl
add
arpl
les
arpl
stc
mov
xor
test
outsb
daa
call
mov
inc
and
adc
lcall
xor
jge
gs
inc
inc
je
mov
orb
fdivrl
inc
push
aaa
mov
push
push
push
shll
xchg
mov
jg
ss
pop
pop
xchg
dec
jns
and
lock
shr
jnp
inc
cmp
push
pushf
mov
xchg
push
bound
outsl
xchg
ss
push
lods
xchg
ljmp
pop
lahf
mov
sbb
pop
xchg
push
or
ja
imul
xor
sub
pop
dec
stos
inc
and
mov
mov
jle
push
jp,pt
stos
int3
mov
or
into
popa
lret
dec
out
lods
inc
xor
sbb
mov
xchg
xchg
insl
jmp
mov
js
pop
lods
pushf
jmp
scas
into
and
push
and
lea
cmp
mov
loop
das
and
push
inc
aas
add
adc
jae
cmp
and
mov
xchg
int
sbbl
pop
movl
test
push
int
rorl
ret
cmp
scas
or
sub
call
sub
icebp
mov
adc
add
call
popa
mov
dec
ljmp
add
in
loope
jmp
fmuls
sbb
sub
adc
int
adc
mov
mov
cli
icebp
cmp
inc
out
add
cltd
loope
mov
test
and
setp
daa
mov
mov
xchg
in
jmp
and
cld
add
adc
aad
xchg
cli
xchg
lods
mov
jae
add
pop
mov
cld
aad
popf
orl
test
jne
daa
sub
sub
lods
pop
dec
aad
mov
adc
or
fldl
movsb
jns
pushf
or
and
cli
or
xchg
xchg
pop
lds
in
xor
mov
in
es
or
dec
lret
sub
repz
popa
imul
push
movl
mov
out
dec
sub
push
push
out
sbb
fdivrl
xchg
xchg
andl
test
mov
or
cmp
mov
cmp
xchg
ss
pop
push
xor
movsb
cltd
roll
jmp
xchg
ljmp
mov
shr
mov
cli
xchg
rorl
xchg
push
dec
movl
loope
mov
mov
jne
lret
rcrl
in
subb
out
jp
push
push
pushf
leave
xor
jmp
out
testb
mov
sti
mov
dec
test
bound
lahf
cld
add
aas
pop
dec
cmp
push
lock
or
mov
sbb
in
xchg
jo
push
movsb
xchg
jo
mov
lret
or
movsb
jb
lods
xor
ret
mov
in
stos
in
add
shlb
je
cmp
repnz
and
adc
and
or
xor
fisttps
out
rolb
jl
xor
xor
add
and
je
mov
nop
pop
adc
lret
add
or
sbb
and
aad
aad
ss
data16
int
js
gs
cmp
insb
aam
scas
push
push
mov
cmpb
sub
dec
test
stos
mov
cmpsb
sbb
fcomps
and
jl
fnstsw
jb
and
les
sahf
shr
add
jnp
lcall
push
mov
pop
xor
cmpsl
pusha
push
fnop
xchg
repz
xor
js
inc
outsb
xor
inc
hlt
inc
test
pop
out
dec
dec
outsl
xorl
cmp
clc
mov
dec
iret
movsl
stc
adcl
gs
mov
xor
inc
das
movsb
cltd
dec
lods
outsb
sahf
imul
mov
iret
lock
jb
jle
test
ja
mov
pusha
fildll
popf
xchg
xor
fisttpl
lods
add
ret
loop
enter
sbb
ja
icebp
lds
cld
cwtl
repz
xor
inc
adc
lahf
or
jecxz
mov
shrb
scas
clc
stc
pop
xchg
shl
or
or
rcll
add
sub
xchg
in
add
lret
or
xor
pop
lds
addr16
mov
lds
mov
leave
test
lods
mov
shl
xchg
leave
int3
xor
movsb
mov
adc
cmp
dec
out
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
mov
nop
js
int3
adc
int
adc
jb
sbb
inc
xchg
adc
daa
cmp
fisttpll
mov
iret
mov
xchg
in
mov
lahf
sub
mov
push
repz
adc
or
nop
emms
in
xor
lods
fnstenv
push
sbb
sbb
pop
push
daa
xchg
jae
sti
sub
adc
dec
push
xor
push
repnz
mov
add
fwait
xchg
adc
shl
adc
lock
pop
lcall
cmp
fwait
inc
mov
out
loopne
leave
fcoml
mov
aad
test
mov
jecxz
inc
cmp
xor
add
cmp
loop
flds
into
push
hlt
out
pusha
insb
loopne
ret
shll
mov
sbb
sub
mov
out
sub
notl
arpl
push
mov
and
lret
aaa
mov
pop
or
movsb
push
push
in
clc
nop
xor
int
sbb
jmp
inc
sbb
out
inc
scas
in
add
scas
incb
sub
jg
and
cmp
add
cwtl
repnz
xlat
dec
aas
mov
mov
mov
int
aaa
shlb
pushf
cmp
gs
push
outsb
ljmp
jle
cld
pop
aaa
test
test
dec
pop
ja
jg
stos
push
cmpsl
insb
dec
int3
int
or
mov
arpl
sbb
xor
lods
sti
stos
int3
cmp
cmp
subl
sbb
jmp
and
fistps
and
test
jnp
xlat
jl
cmp
xchg
mov
imul
adc
sti
imul
mulb
mov
pop
or
mov
and
jne
jl
aaa
rcrb
pop
outsl
and
inc
rcrb
repz
xchg
push
mov
sbb
int3
adc
popf
xlat
xchg
sti
sbb
pop
lret
addr16
addr16
mov
lahf
push
mov
mov
sub
frstor
add
in
mov
cltd
ret
call
cld
ffreep
inc
xor
into
loopne
and
pop
shll
shrl
js
mov
pop
lret
int
mov
in
xchg
cmpsb
loope
aad
sbb
jae
sub
sub
popf
pushf
pushf
cs
les
pop
negl
cs
divb
push
jns
aad
push
pop
outsb
fwait
xor
movsl
add
jne
daa
add
loope
jle
ljmp
add
daa
dec
mulb
and
adc
dec
add
outsb
pop
push
adc
stos
inc
pushf
into
mov
dec
xchg
sbb
sub
jbe
mov
cmp
into
and
xchg
rcrb
addr16
insb
push
ljmp
fcoml
push
or
out
bound
sbb
adc
mov
add
in
fistl
cwtl
pop
dec
push
and
ror
popf
call
ret
mov
xor
add
jne
imul
addb
cltd
insl
imul
ss
pop
jnp
test
sbb
or
and
sbb
dec
sub
out
push
shr
mov
or
mov
and
das
mov
inc
add
push
leave
push
cltd
mov
xchg
xor
divb
mov
out
arpl
mov
xchg
cmp
int
jmp
push
sub
gs
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
scas
pop
punpckhdq
les
adc
adc
adc
sbb
xor
cmp
sub
and
mov
in
xchg
out
mov
jmp
jnp
mov
mov
in
test
jo
and
dec
pop
stos
pop
ret
mov
fisubl
push
mov
jne
xchg
jle
push
or
push
mov
pop
or
fisttps
pop
stos
out
or
mov
cmp
aad
data16
aas
out
pop
or
lcall
outsb
icebp
call
fdivl
xor
fsubl
shlb
mov
add
cmp
shlb
insl
loopne
add
sub
test
push
call
data16
jae
push
test
dec
out
icebp
leave
lods
shlb
hlt
ds
lods
dec
dec
int
lds
icebp
lock
xchg
sbb
cmpsb
push
cmp
jl
stos
jg
cmpsb
jnp
and
sbbb
daa
inc
mov
or
or
dec
xchg
or
xor
imul
xor
dec
xor
sub
xor
dec
jle
xor
dec
test
lahf
mov
shll
jmp
xor
jns
adc
fimull
inc
repz
mov
repz
rolb
daa
push
gs
mov
sbb
std
out
mov
sub
test
mov
call
pop
sahf
int
push
jo
pop
add
pop
add
sub
mov
dec
lret
inc
mov
movsl
popa
mov
fs
and
jbe
js
daa
scas
dec
jmp
ret
xchg
push
push
and
rcrb
cmp
inc
ja
cmpsl
jp
dec
sub
xchg
or
fimull
mov
jmp
test
pusha
xchg
test
insl
fwait
imull
in
shl
lret
and
pop
lahf
aam
mov
xchg
test
std
pop
sub
xlat
lret
push
pop
cmp
or
and
mov
sbb
cld
jns
call
ret
repz
nop
pop
movzwl
aaa
pop
out
in
or
les
cmp
xchg
es
fadds
rclb
cmp
mov
inc
sbb
mov
push
cmp
push
shrb
cmp
imull
stc
and
sub
sbb
dec
sahf
ss
popf
pop
inc
lods
test
inc
jg
inc
iret
loop
ret
xor
adc
or
mov
and
repnz
gs
out
push
lods
out
test
cmp
testl
cmp
jae
cmpsb
cmp
cwtl
imul
xlat
cmp
xor
mov
pusha
mulb
and
repz
mov
ret
lret
stos
or
xlat
shlb
stos
mov
jp
xor
out
xor
cld
pop
xchg
es
jmp
add
inc
jae
ljmp
pop
sbb
test
ljmp
jo
adc
test
shrl
xchg
shll
push
push
es
daa
adc
fsubl
jecxz
daa
add
sahf
inc
test
dec
add
movsb
lret
xor
push
das
adc
das
test
fiaddl
and
or
out
cmpsl
mov
daa
shll
cmp
mov
push
sbb
jp
mov
mov
shlb
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
push
loopne
fwait
ret
int
adc
jmp
push
push
push
stos
out
dec
mov
add
xchg
sti
fnsave
push
mov
cltd
fs
testb
xchg
sub
mov
cmp
std
xor
in
sbbb
loopne
adc
sub
mov
lds
arpl
xlat
jmp
ja,pt
pusha
test
pop
test
pusha
sahf
push
pop
lret
sub
movsb
pushf
dec
jns
movsb
or
hlt
inc
bound
or
or
test
xchg
std
and
js
jl
or
test
sbb
dec
stos
or
push
mov
mov
xor
rorl
xor
dec
rclb
pop
daa
sti
dec
mov
out
lret
insl
jge
jne
insl
push
repz
dec
popf
xchg
test
push
shl
lret
out
xchg
dec
mov
or
pop
int3
or
cltd
sub
jle
push
scas
repnz
shrb
inc
jg
cmpsl
clc
ja
inc
xor
adc
adc
ret
in
mov
stc
aam
rclb
push
xchg
push
fsubs
lcall
xor
add
repnz
out
xor
mov
sbb
mov
mov
aad
dec
clc
rolb
iret
scas
movsb
ret
fs
inc
ds
gs
das
xor
mov
fmulp
aaa
movsl
sub
mov
mov
mov
xchg
fidivs
push
pop
arpl
cs
cltd
jne
fldt
shll
mov
dec
mov
fiaddl
mov
adc
or
out
dec
mov
test
lret
and
add
xchg
cmpsb
dec
adc
gs
pop
lcall
in
dec
mov
aaa
cmc
dec
repz
xor
mov
arpl
pop
shr
movsb
lahf
and
jle
adcl
movsl
jb
aas
in
cmp
loopne
popa
dec
outsl
add
and
cltd
sahf
push
xor
or
lea
lds
rcl
lods
xor
dec
cltd
loopne
sub
gs
aaa
mov
movsb
jg
xor
and
hlt
jb
add
mov
push
push
mov
sti
lods
rcr
cmp
and
xor
xchg
lock
mov
push
jno
and
out
das
and
xchg
inc
shl
jns
dec
outsb
lods
cld
inc
pusha
mov
cmp
cmp
shrl
test
es
sbb
jmp
xor
out
xchg
add
test
cld
xchg
pop
xor
lods
mov
pop
icebp
cmp
jae
jno
inc
clc
push
cmp
cmpsb
xchg
fstpt
xchg
cmc
add
call
bnd
out
int3
das
mov
popa
cmpsb
pop
dec
push
and
jecxz
rol
insb
popa
es
dec
sub
roll
scas
add
cmp
lods
xchg
std
es
and
insl
cmp
push
mov
push
inc
mov
push
cwtl
ficomps
nop
jmp
cli
dec
mov
js
lret
lods
mov
xchg
stos
lds
cs
lock
in
mov
jne
fists
push
ret
xchg
adc
cwtl
std
mov
ss
hlt
pop
add
lods
in
lods
xchg
sub
js
xchg
cs
lret
add
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
or
adc
int
adc
mov
data16
pop
fistpl
gs
xchg
sub
mov
imul
bound
mov
jns
stos
dec
cli
arpl
jns
dec
fwait
cmp
imul
xchg
sbb
xchg
adc
repz
and
pop
push
cmpsl
or
les
sub
aas
lahf
push
xchg
sbb
jbe
jnp
dec
imul
pop
add
dec
mov
cmp
mov
mov
stos
pop
cmp
cmp
inc
pop
cmp
in
out
mov
lahf
loop
add
or
test
sub
sub
fs
aam
lea
add
mov
jle
mov
sti
lds
or
push
mov
mov
push
lods
in
shll
lret
imul
ret
jnp
dec
cmpsb
jg
xchg
cmpsb
pushl
fldt
jo
push
adc
cli
xchg
dec
daa
faddl
in
dec
ds
lods
arpl
add
jmp
push
call
jnp
lds
pop
pusha
repz
out
leave
mov
andl
lret
jb
shl
adc
inc
adc
sti
ds
xor
mov
insl
cmp
mov
ss
xor
cltd
subl
icebp
loopne
ror
jge
testl
inc
fadd
das
les
mov
test
mov
and
xor
pop
xor
arpl
out
repnz
shlb
jno
insb
cmp
sub
jae
in
pushf
inc
sbb
in
cmpsl
dec
lcall
lods
das
faddl
pop
pusha
mov
inc
in
sbb
pop
ficoml
inc
outsl
cli
pop
pop
xchg
add
aas
add
decb
sbb
xchg
inc
test
nop
dec
add
fbld
push
xchg
jne
xlat
xor
and
mov
mov
sub
imul
jb
cmpsb
test
dec
lret
out
test
cld
jecxz
cmpsb
ljmp
mov
push
scas
mov
sbb
das
outsl
icebp
xchg
jmp
xchg
clc
jae
jb
adc
adc
sbb
test
dec
out
or
loopne
inc
and
pop
pop
pop
pop
ja
aam
lods
lods
out
shll
pushf
mov
popa
mov
je
adc
sti
add
es
fs
cmp
faddl
sub
enter
je
fstl
imul
push
xchg
sub
cmp
test
mov
sub
jge
daa
aas
es
ret
popf
movsb
dec
xchg
sbb
mov
out
pop
out
sbb
adc
mov
aam
int3
inc
cmp
enter
adcl
mov
cmc
pop
repz
mull
xchg
or
mov
cmp
dec
mov
mov
out
aaa
push
or
jle
add
dec
sti
lods
mov
xor
jmp
iret
les
rorb
xor
sarl
scas
and
push
sbb
js
and
cmp
pop
add
lea
mov
push
out
movsb
ret
cmp
inc
icebp
pop
pusha
repz
pusha
jno
cmp
sub
push
ret
fdivrs
pop
sbb
push
and
mov
addr16
stc
fxch
lahf
sahf
mov
lock
sbb
fdivp
dec
sarb
push
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
ret
stos
pop
mov
adc
adc
adc
shrl
push
dec
ljmp
out
push
loopne
ja
stc
sbb
in
pop
cmp
arpl
xor
sahf
js
xor
hlt
lret
jecxz
inc
mov
sub
pusha
lods
push
in
dec
outsl
inc
dec
fildl
pop
mov
cmp
icebp
cmp
and
or
test
xchg
pop
outsb
mov
subl
nop
jmp
js
div
jge
push
in
testl
inc
in
pop
mov
sub
pusha
and
xchg
xor
dec
ret
pop
adc
mov
sbb
arpl
shrl
cmc
sub
adcb
stos
out
mov
push
stc
mov
or
int
incl
test
mov
repz
cmp
pusha
in
arpl
out
nop
sbb
adc
ss
je
lret
inc
test
mov
mov
sbb
sbb
outsl
inc
lock
push
repz
sbb
or
clc
enter
mov
dec
mov
cmp
xchg
cmpl
jl
aas
std
into
pop
movb
cmpsb
dec
cmp
inc
sub
in
aam
xor
arpl
into
iret
mov
sbb
lea
push
mov
movsb
adc
cltd
in
or
aas
lret
insl
mov
stos
inc
cmp
rcll
xlat
jne
sub
cmpsl
xor
out
inc
mov
adcb
jle
xchg
xchg
cmp
cwtl
sub
pop
inc
faddp
addr16
icebp
xchg
inc
sbb
out
js
out
aad
lret
into
lock
push
ljmp
bndldx
aad
stos
popa
mov
cmp
push
dec
add
dec
adc
ss
pop
std
lea
mov
mov
mov
xor
pop
mov
sub
pop
xchg
in
xor
cmp
adc
js
in
je
lods
push
in
xchg
xchg
jo
lcall
pop
andb
imul
inc
fcoms
call
pop
sub
xor
mov
js
mov
xor
hlt
and
loop
data16
lds
clc
adc
or
mov
add
aad
pop
sub
addr16
push
add
cmp
jecxz
add
repnz
pop
inc
outsl
mov
mov
pop
in
sub
push
mov
into
daa
andb
add
jb
in
mov
xchg
scas
sub
insb
jmp
adc
fcomi
iret
dec
repz
xor
sbb
push
ljmp
push
cs
xor
push
psrlw
mov
sub
push
rorb
cmpsb
or
dec
movsl
sub
mov
xor
in
dec
loop
pop
fsubrl
out
mov
subl
lcall
sbb
loope
xor
into
push
adc
jecxz
ret
pop
loope
scas
les
lea
test
pushf
sub
fcoml
movsl
xor
add
xchg
adc
loopne
dec
scas
sbb
test
leave
lcall
pop
mov
aam
push
das
shlb
add
xchg
scas
cmp
or
xchg
xchg
sahf
jae
xorl
and
imul
sub
inc
in
bound
mov
add
fdivrs
adc
dec
mov
jp
or
dec
ja
push
mov
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
adc
shrl
adc
hlt
jnp
dec
dec
inc
jecxz
cmp
jno
lea
mov
inc
mov
xchg
mov
cmpsl
lahf
push
ljmp
add
pop
cmp
jg
outsb
and
sub
inc
push
int
jle
adc
add
and
jne
loop
adc
aas
imul
leave
adc
aam
inc
and
pop
cmpsb
mov
mov
pop
loopne
js
xchg
ret
das
pop
arpl
insb
inc
jo
and
fisubrl
clc
add
stos
pop
pop
jl
icebp
jno
cld
cmp
lahf
cli
scas
pop
popf
push
xchg
in
pop
sysexit
cmp
or
mov
sub
cld
mov
loop
scas
loope
mov
cmovae
notl
xor
xchg
popf
mov
hlt
mov
jl
and
nop
xchg
xlat
and
xchg
jl
idivb
mov
push
sbb
scas
xor
add
clc
bndstx
fdivrp
call
mov
push
dec
scas
loopne
or
sub
lea
jo
mov
jg
addl
roll
mov
aad
lcall
adc
lods
in
test
fildl
xor
push
stc
arpl
and
out
push
orb
lock
jb
lret
sbb
pop
push
and
nop
popf
or
push
jg
aaa
xlat
jns
pop
jecxz
sbb
dec
cmp
dec
lcall
add
ficompl
hlt
add
mov
xor
push
fiadds
fcoml
lahf
fdivrs
dec
add
out
fcmovbe
sti
std
and
sub
jne
mov
fs
lret
icebp
add
imul
xor
mov
and
pop
sub
jmp
ds
mov
neg
mov
lea
mov
lods
stos
es
cmp
in
or
pop
mov
jo
sbb
mov
and
iret
arpl
inc
inc
addr16
adc
repnz
sahf
cli
jmp
cmp
rcrl
cmp
imul
jnp
je
adc
xor
das
inc
push
sbb
cmp
sbb
push
dec
fsubrl
xchg
sub
mov
jmp
mov
sub
and
push
mov
inc
adc
jmp
int
add
push
xor
in
xlat
mov
add
mov
inc
pop
lret
test
stc
imul
or
out
outsl
lret
int3
repz
clc
jo
in
test
leave
cmp
jmp
scas
add
jne
outsl
or
pop
test
mov
lods
dec
adc
rolb
pop
mov
mov
sbb
out
repz
jl
add
or
imul
jne
mov
nop
cmp
xor
popf
ret
call
loopne
push
jge
outsb
rcll
xor
inc
or
les
mov
insb
sbb
adc
out
or
insb
cmp
fstl
clc
push
add
xor
jle
sub
jbe
nop
fcmovnbe
xchg
sbb
jns
andb
and
js
loop
adc
mov
insl
xor
or
and
ss
xchg
push
arpl
divl
mov
orb
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
add
mov
je
adc
int
adc
xchg
dec
mov
mov
or
mov
xchg
adc
add
je
aad
pop
push
mov
arpl
in
sbb
fs
cmpsb
lret
pop
add
and
fmul
sarl
aaa
pushf
pop
movsl
mov
ret
xchg
frstor
negl
in
xchg
pushf
pop
lret
inc
pop
shll
shll
out
cld
das
lahf
cmpsb
test
in
aad
loopne
dec
jo
ja
in
hlt
ss
stos
mov
pop
out
pop
push
push
inc
lods
xor
sub
pop
add
lret
lock
cs
cmp
adc
aam
out
insl
and
adc
inc
or
lods
js
sub
mov
sbb
aas
mov
lods
call
push
or
shlb
insb
stos
cmp
incb
sti
fists
stos
cli
jbe
nop
lock
mov
movb
push
pop
push
call
cltd
pop
cmpsb
test
push
andb
ds
jl
mov
dec
cmp
dec
lea
push
imul
xlat
rcrl
mov
mov
mov
test
mov
loope
and
or
out
xlat
icebp
loopne
mov
and
sub
mov
push
xor
xchg
mov
dec
inc
sbb
adcl
push
jmp
cltd
and
cmp
push
push
insl
orl
mov
loop
cmp
jmp
inc
mov
xchg
pop
std
lds
inc
sahf
xchg
inc
test
mov
push
xchg
push
loope
dec
adc
shll
push
iret
fldl
cmp
xchg
xchg
ja
push
fmul
mov
lea
les
sbb
icebp
mov
xchg
lds
repnz
jae
cltd
add
xchg
inc
imul
mov
push
dec
fldenv
sub
sarl
aam
imul
dec
xorl
fldcw
loop
loop
xor
dec
imul
adc
jo
fadds
nop
call
push
xor
mov
aaa
cmp
xchg
repnz
xor
push
lods
ja
jbe
xchg
clc
movsl
mov
pop
push
and
jnp
or
mov
jmp
iret
pushf
xchg
dec
mov
or
mov
jg
sub
mov
inc
hlt
push
xor
inc
test
bound
lods
or
xlat
pop
lcall
xchg
sub
fistps
ljmp
ljmp
jg
les
popa
add
push
loope
fsubs
test
mov
jge
mov
cld
jg
push
push
aad
scas
adc
hlt
fwait
lods
or
inc
pminub
lahf
nop
xchg
and
addr16
aad
xor
sub
mov
push
and
adc
dec
cmpsl
cmp
mov
fimuls
adc
out
cli
mov
push
or
push
sarb
enter
loope
std
les
xor
cmp
andb
xchg
jmp
mov
arpl
fbld
cmp
adcb
mov
out
cli
adc
push
cmp
mov
jmp
faddl
pop
ss
and
into
jno
sarw
arpl
xor
mov
jge
jecxz
adc
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
mov
adc
int
adc
adc
push
loopne
sbb
sbbl
dec
or
add
mov
test
lds
lahf
std
arpl
rorb
scas
popa
xor
cmp
inc
popa
add
cmc
sub
daa
jle
filds
mov
xchg
std
popa
cmp
repnz
push
push
and
jbe
and
pop
faddl
fldl
mov
icebp
testb
lcall
dec
adc
mov
mov
add
pushf
sbb
cs
in
fldl
imul
jns,pn
ljmp
xor
fucomp
cmc
je
jle
dec
or
mov
mov
ljmp
jnp
shlb
out
cmc
out
lcall
data16
ror
inc
mov
in
test
mov
test
xlat
test
popa
ljmp
cs
xlat
dec
sub
dec
add
mov
insb
push
jno
shlb
testl
push
dec
es
xor
dec
push
mov
aas
cmp
dec
shl
add
into
xor
loop
mov
or
inc
enter
mov
movsb
fldenv
into
test
ljmp
ret
mov
push
test
cmp
data16
fistps
pusha
dec
dec
push
adc
cmpsl
in
mov
fstl
fstpt
aas
andb
and
sub
leave
sub
outsl
adc
jge
inc
sbb
push
xchg
lret
and
lea
hlt
mov
add
dec
xor
cwtl
out
dec
sarb
enter
add
xchg
mov
ficoms
scas
outsl
pop
ss
mov
in
ljmp
arpl
fucomip
push
in
and
jno
ds
pop
cmpsl
iret
sarb
jbe
mov
sbb
sarl
lock
mov
sti
sahf
ja
mov
xlat
cmpl
pop
outsb
mov
dec
aam
repz
aaa
cmpsb
fstl
cmp
out
stos
push
push
daa
sbb
popa
mov
iret
add
iret
stos
sbb
movsl
jl
scas
ret
test
cmp
out
jae
xchg
and
cli
and
sbb
test
and
xor
out
add
pop
sti
test
pop
imul
sub
shl
or
pop
imul
fwait
xor
fadd
out
movsb
ret
mov
sub
out
aas
icebp
loop
dec
rolb
gs
das
xchg
das
pop
out
shrl
xchg
cmpsl
add
xchg
gs
sub
imul
jo
mov
fwait
in
aam
test
jg
popf
dec
sbb
xchg
aad
in
call
mov
push
cli
xchg
xchg
leave
fisttpl
inc
cmc
sbb
fildll
sub
test
jle
pop
jl
push
shl
cli
sbb
fdivr
add
nop
add
pop
xchg
ss
es
fs
test
inc
cmc
push
jle
and
test
push
cmp
insb
mov
out
push
pop
into
adc
aaa
outsb
sub
push
cmpl
jno
lahf
push
jno
push
repz
arpl
mov
mov
pushf
adc
or
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
ljmp
or
and
in
adc
cwtl
dec
xor
aas
les
mov
in
dec
lret
daa
cmc
imul
fwait
lret
fisttpll
ss
jp
jle
int3
inc
jmp
fwait
idivb
xor
sub
sub
push
ret
jecxz
andl
hlt
sub
popf
les
inc
mov
repz
mov
and
push
lods
shl
xor
mov
nop
int
loope
pusha
mov
ljmp
push
imul
je
stc
je
add
faddl
xor
push
mov
and
hlt
pop
xchg
ffree
jno
imul
ret
mov
jne
xor
out
stos
jne
jmp
cld
pop
movl
sub
mov
sub
rcrl
xchg
pop
xchg
repz
ds
pop
lds
or
stos
out
jne
psubusw
loope
mov
xchg
pusha
dec
lds
mov
fucomp
jbe
xor
and
xchg
pop
xor
cli
faddl
call
insb
in
jmp
lahf
jle
jae
jge
popf
xchg
mov
mov
jae
sub
inc
or
mov
dec
xlat
push
sub
pop
add
roll
or
jmp
sahf
inc
mov
jns
lret
movsb
test
repnz
xlat
xchg
or
jbe
and
xchg
or
push
cmp
scas
lcall
dec
clc
lods
jne
aad
iret
sub
xor
enter
mov
jecxz
adc
jbe
or
mov
addr16
sti
pop
inc
mov
clc
and
lock
test
movsb
pop
or
int3
mov
inc
and
add
aas
add
lods
cmpsl
sub
movsl
mov
lods
lahf
xchg
iret
cmpl
mov
add
fistl
ficomps
subb
imul
outsb
xor
sarl
fstpl
inc
fwait
lret
lahf
fwait
mov
jecxz
push
push
insl
and
adc
xor
add
push
mov
popf
cld
push
xchg
jge
xlat
aam
or
repz
mov
xchg
out
cmc
imul
aad
dec
lods
loop
push
push
xchg
and
xchg
lahf
clc
cmpsb
sbb
mov
mov
stos
in
lcall
loopne
mov
xchg
ftst
add
jg
pop
pop
mov
lods
pop
pusha
mov
mov
jp
lahf
mov
dec
sbb
dec
xchg
adc
jl
cmpsb
jg
inc
mov
sbb
arpl
dec
mov
mov
sbb
adc
lcall
insl
jbe
cld
push
inc
mov
frstpm(287
push
and
push
ss
aaa
cmpsl
sbb
ret
mov
mov
enter
mov
and
sub
dec
inc
ret
xchg
test
pop
xor
and
cmp
nop
or
popa
cmp
jecxz
or
push
fidivrl
cmpsl
enter
out
stc
mov
insl
dec
lahf
add
out
imul
cmpsl
pop
or
push
mov
sbb
mov
cld
lock
sti
sbb
inc
in
xchg
stos
mov
jge
cmc
ds
pop
mov
inc
fmuls
cld
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
dec
mov
int
adc
dec
add
adc
push
and
or
cmp
dec
scas
push
insl
stos
orl
xchg
xchg
int
push
out
inc
movsb
and
movb
sbb
pop
sahf
pop
push
push
add
adc
stc
add
sbb
je
jb
sub
in
mov
jmp
in
out
and
sbb
hlt
fdivrp
xchg
mov
mov
cs
sarl
push
mov
div
jge
jmp
xchg
popa
add
mov
setg
roll
sbb
lret
sub
sbb
jecxz
lret
push
fs
es
mov
adc
push
cmp
mov
lds
jecxz
gs
mov
pusha
and
aas
and
jbe
test
or
push
or
arpl
ret
add
lea
cmp
mov
push
inc
and
push
mov
sarl
or
std
in
adc
mov
cmc
dec
push
mov
push
lahf
mov
lahf
jp
bound
pop
xchg
std
ja
cmp
jp
mov
push
fs
xchg
aas
out
lret
mov
dec
cwtl
lret
jne
cmp
sub
xchg
sbbb
in
outsb
xchg
int
call
dec
stos
cmp
sbb
adc
sahf
bound
cmpsl
xor
pop
inc
push
pop
mov
cmp
cmp
push
jne
dec
lds
cmp
cmp
mov
xor
lret
rcrl
adc
hlt
and
das
jne
dec
cmpsb
aaa
ljmp
ret
adc
push
mov
int3
adc
in
lock
xchg
sbb
push
je
test
dec
cli
push
and
xlat
xchg
out
mov
inc
mov
push
push
jno
mov
mov
sbb
xchg
mov
int3
add
push
dec
or
das
stos
xchg
xorl
push
stos
repz
gs
mov
jg
inc
inc
popf
popa
mov
push
mov
cmp
add
xchg
lret
lods
shrb
push
lahf
jns
sub
idivl
dec
pop
lods
clc
dec
testb
add
lods
mov
pop
or
fidivrl
insb
pop
and
push
sbb
jle
addb
jmp
lret
aas
jae
sbb
mov
add
adc
stos
xlat
jb
xchg
mov
jns
adc
pop
loop
push
inc
or
call
push
loopne
ret
ret
push
cmc
mov
xchg
pusha
pop
cmpb
adc
jae
cmp
push
pop
inc
or
add
sub
mov
or
xchg
insb
sub
xlat
icebp
adc
jns
dec
cs
daa
fistl
xchg
bound
sbbl
pop
pop
popa
mov
lcall
jg
arpl
aam
jl
mov
mov
fsubp
loope
mov
negb
sti
jmp
xor
aad
sbb
into
scas
mov
lods
inc
or
and
outsl
jne
sti
lret
insl
out
repnz
hlt
mov
in
add
fwait
dec
dec
fwait
in
cmp
dec
cmc
cli
pop
out
daa
sbb
xor
cli
dec
imul
mov
adcl
xchg
inc
mov
mov
cwtl
insl
pop
loopne
sbbl
cmp
lahf
lahf
sub
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
jl
dec
mov
int
adc
mov
dec
call
pop
xor
adcb
or
sub
or
lock
arpl
inc
dec
outsl
xchg
adc
inc
dec
std
sbb
sub
sbb
js
xor
pop
adcb
das
int3
testl
and
sbb
mov
cmpsl
outsl
push
add
cmp
aad
sbb
xor
inc
ret
aaa
ljmp
mov
es
adc
adc
stos
ss
xchg
insb
push
cltd
leave
mov
daa
out
rol
imul
outsl
in
jbe
mov
mov
pop
dec
int3
fcoms
ds
inc
xchg
loope
das
adc
pop
pop
xchg
in
mov
negb
bound
mov
jo
pop
ror
loope
jecxz
xchg
iret
pusha
and
clc
or
jmp
in
mov
addr16
pop
cs
pop
not
xchg
ret
mov
out
xlat
and
pop
mov
jae
aad
xchg
mov
push
mov
ret
jge
outsb
js
xchg
call
xor
test
xlat
add
dec
sbb
fbstp
fdivl
fdivrl
adc
mov
shlb
hlt
inc
mov
inc
test
stos
int3
ffree
ds
ss
imul
mov
rclb
cmc
in
fsts
jo
xchg
and
xchg
imul
mov
inc
xchg
fists
mov
adc
mov
insl
adc
movsb
sub
cs
test
cmp
ret
mov
fstps
lret
punpckhwd
fcoms
dec
bound
in
mov
cmpsb
mov
fdivl
inc
xor
mov
outsb
ret
fstpl
push
xchg
mov
in
adc
inc
cmpsl
fistps
mov
inc
push
cltd
daa
sbb
stc
test
dec
xor
dec
outsb
adc
movl
jle
xchg
imul
enter
mov
shlb
cs
shrl
cmc
ror
inc
mov
test
test
cli
addl
mov
push
dec
cmp
push
negb
mov
adc
cmc
daa
fcomps
int3
ret
stos
push
mov
cmp
sbb
adc
inc
mov
inc
add
cs
stos
and
test
mov
leave
inc
or
icebp
jp
shl
sti
cmp
push
fsub
jge
cltd
add
adc
filds
cmpsl
sbb
mov
sub
mov
mov
pop
out
cs
add
daa
jge
pusha
jmp
fildl
push
cld
insl
adc
lods
xchg
cmp
jle
mov
lret
mov
push
ficoml
out
ret
and
outsb
and
dec
and
jmp
loopne
dec
ja
adc
pop
aas
das
loopne
in
outsl
arpl
loopne
or
xor
mov
xlat
jne
jle
jae
xor
es
xchg
lahf
outsl
rcll
jnp
js
loope
and
iret
fs
xchg
add
out
and
cmp
xchg
and
or
into
sbb
mov
imul
pop
mov
inc
push
jnp
lods
add
push
mov
jmp
test
das
inc
mov
out
inc
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
outsb
sub
mov
int
adc
jg
push
ljmp
pop
inc
xchg
adc
add
sbb
mov
sub
xor
add
ret
jecxz
cwtl
imul
bound
inc
mov
mov
cmc
loope
jb
or
cmp
pop
dec
cmp
hlt
or
comiss
cmc
dec
movnti
push
lcall
add
adc
push
movsb
mov
mov
test
xor
xchg
jae
lahf
jg
insl
xchg
pop
adc
mov
ret
xor
and
ret
pop
sbb
nop
push
jp
mov
add
jmp
push
xchg
test
outsb
sbb
scas
dec
xlat
pop
mov
into
les
testl
rorb
inc
in
int
cli
out
pop
mov
lcall
or
test
push
sub
or
iret
cmc
push
mov
xor
outsb
push
mov
dec
inc
imul
sahf
imul
pop
jnp
adcl
inc
pop
sbb
push
scas
xor
mov
pop
dec
movsb
jl
and
mov
lahf
cli
outsl
cld
inc
jb
sub
addr16
dec
sbb
xchg
xlat
dec
adc
mov
mov
dec
sbb
sbb
out
fldenv
xor
jbe
cmpsl
lret
pop
in
push
cmc
and
pop
lret
push
in
fstpt
inc
or
and
idivl
sbb
cmp
movsl
jae
gs
jg
xchg
jb
lods
cwtl
add
frstor
lea
or
mov
in
inc
notb
aas
sbb
in
cmp
jle
xchg
lea
lods
sbb
or
xchg
push
mov
push
adc
jg
adc
data16
orl
sub
movsb
pushf
cmp
lcall
xchg
pop
out
adc
mov
jmp
nop
dec
mov
rorl
ds
imul
xchg
jnp
je
mov
xor
xchg
test
es
lods
mov
cs
mov
cwtl
sahf
test
adc
int3
stos
push
jle
sub
ret
mov
cmp
sbb
test
aam
sti
in
fmull
stos
fbstp
jns
stos
imul
mov
out
cmpsl
xor
in
push
pusha
xor
add
push
das
jae
ret
dec
test
in
xchg
mov
pop
clc
fwait
xor
xchg
pop
xchg
scas
leave
decl
cmp
mov
adc
sbb
lock
mov
mov
fldl
xor
sub
sub
xor
orb
push
jnp
sbb
pushf
fists
jl
mov
mov
xchg
fldl
sub
subb
repz
xchg
fwait
imul
inc
xor
out
push
into
push
popa
sahf
adc
cmpsb
jo
or
fs
jns
add
jl
je
cld
filds
mov
mov
mov
and
mov
push
scas
out
jge
test
xchg
ret
cmp
jns
imul
jecxz
je
sub
mov
fcomps
xor
mov
xchg
fstps
stos
sub
sbb
scas
aad
cmp
dec
in
pushf
or
loopne
and
das
mov
jecxz
shlb
push
and
mov
je
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
xchg
push
push
je
adc
adc
adc
and
jns
mov
fldenv
adc
jge
int
pop
mov
jl
sbb
fwait
aas
movsb
rclb
xor
inc
cmp
imul
dec
mov
add
sub
jbe
insb
lret
xor
pop
lcall
mov
fdivrl
cmp
jbe
and
xor
jp
jae
add
imul
imul
int
mov
inc
sub
sbb
cwtl
sbb
icebp
sbb
cmp
push
lcall
jle
push
fistpll
icebp
or
jb
fldt
sbb
ficomps
dec
lahf
out
rcrb
push
cmp
mov
xchg
adc
ret
pop
loopne
bnd
jle
pop
aad
mov
xor
les
adc
cmp
sub
xorl
mov
inc
loop
pusha
pop
adc
out
jp
lods
in
popa
inc
mov
jp
setb
jecxz
and
leave
cmp
xchg
shr
rolb
call
stc
pop
sar
mov
push
scas
mov
movsl
loop
fsubl
jae
mov
mov
lock
ret
std
aam
mov
dec
iret
mov
in
negl
push
shrl
inc
stc
xchg
add
bound
fcmovnu
add
xchg
movsl
cld
sub
repz
fsubl
or
testl
movl
cmpsl
sar
xchg
pop
inc
sub
loope,pt
mov
daa
sub
mov
xorl
push
xor
jae
cmpsl
incl
pop
sub
lret
and
inc
lahf
ljmp
aad
dec
mov
cs
loop
sbb
cmpsb
jae
fdiv
adc
jnp
push
outsb
jg
xor
dec
scas
sbb
lret
lret
loopne
enter
das
push
mov
in
xchg
inc
cli
lcall
in
xor
jmp
dec
ret
sbb
cmp
dec
or
adc
nop
in
repz
in
xorl
imul
add
pop
mov
mov
das
mov
xchg
pop
and
pop
cmc
fucomip
xchg
fcmovnu
jp
adc
daa
sbb
cmp
in
aaa
push
mov
xchg
push
test
xchg
lods
add
loopne
rol
sti
cmp
std
sbb
lods
loopne
mov
fsubr
mov
jecxz
push
outsb
shrb
mov
add
notb
push
fadd
mov
mov
sti
repnz
mov
aaa
sub
hlt
adc
das
stos
push
dec
sub
test
ds
push
pop
or
mov
dec
inc
mov
shlb
ja
paddw
jmp
dec
lret
push
outsl
fists
pop
sbb
push
aad
xlat
pop
or
lret
pop
add
stos
adc
mov
test
lea
dec
daa
ss
mov
push
dec
adc
in
cmc
fisubl
dec
in
add
je
mov
into
jae
ds
sub
rep
xchg
mov
xor
mov
enter
or
fwait
mov
out
inc
out
scas
and
cwtl
jecxz
loopne
pop
lret
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
pop
fwait
inc
stos
jno
adc
int
adc
aaa
ds
push
jno
jnp
and
add
cmp
or
ds
push
mov
jnp
mov
or
add
push
jl
mov
jnp
fwait
and
call
push
cltd
inc
clc
sti
cmp
xor
jns
mov
mov
inc
je
jo
out
jne
in
xlat
sbb
in
iret
fninit
push
sub
gs
inc
shll
js
stc
and
mov
mov
or
out
fwait
or
push
xor
call
int3
rcrb
mov
addr16
lds
pop
dec
sub
mov
mov
xchg
mov
out
test
fs
or
push
data16
test
adc
aad
dec
sbb
cmc
sbb
dec
mov
push
push
repnz
pop
cmp
enter
xor
aad
lahf
lock
imul
add
testl
mov
xchg
mov
pop
icebp
loope,pt
arpl
pusha
jne
push
andb
call
sbb
cmp
cmc
scas
jmp
xchg
sbb
add
ss
jp
inc
pop
jne
ds
arpl
pop
sub
push
cld
mov
mov
sti
fadd
jmp
xlat
xchg
movsb
negl
dec
fwait
add
rclb
hlt
ss
push
mov
pusha
rcrb
jo
rorl
add
xchg
outsl
call
push
pop
out
repnz
scas
xchg
cmp
mov
aas
jb
hlt
mov
mov
xor
sbb
rorb
xchg
dec
xchg
pop
lods
cmp
rol
mov
and
pusha
xchg
jle
leave
not
and
lea
push
push
fsubrs
aaa
fcompl
cmp
jns
push
add
mov
pop
fsubrl
sub
inc
pop
outsb
loopne
lods
outsb
test
ds
and
pushf
and
mov
pop
mov
push
fiadds
push
dec
xchg
xchg
xchg
lahf
pop
pop
scas
stc
addr16
push
xchg
mov
int3
repnz
xchg
pop
icebp
sbb
mov
cmc
ret
int
add
fwait
pop
daa
adc
or
movsl
fbld
xchg
pusha
imul
add
mov
jge
cs
mov
fisubrs
fbld
shlb
pop
in
pop
aaa
fwait
repz
enter
push
repnz
fdivrs
lahf
inc
push
jle
inc
mov
push
lock
jg
out
lcall
or
sub
in
ret
daa
push
mov
or
sbb
cmp
sub
dec
or
cmp
imul
ljmp
icebp
sti
pop
test
jmp
push
call
sub
cld
lea
lret
add
xchg
test
mov
in
pop
mov
mov
xchg
out
loope
mov
adc
mov
jmp
mov
and
arpl
add
mov
jb
mov
jp
jbe
xchg
stos
loop
pushf
dec
aad
pop
test
or
leave
sub
adc
lahf
mov
int
push
sub
push
add
or
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
dec
mov
insb
and
adc
int
adc
stc
jbe
das
dec
mov
lcall
lret
clc
je
xchg
mov
orb
jg
repz
pop
mov
scas
dec
stos
cld
mov
mov
xor
inc
subl
adc
ficoml
and
push
les
addr16
loop
mov
stos
jns
lret
sub
inc
das
xchg
lds
scas
or
pusha
cltd
jb
test
xor
jmp
es
mov
lods
push
inc
and
inc
dec
icebp
sub
lock
pusha
loope
xor
stos
test
dec
cld
out
roll
sub
sub
test
inc
and
push
fidivl
adc
aad
mov
add
mov
pusha
push
xor
ret
js
lds
test
push
mov
lods
inc
push
jb
into
loopne
ja
in
xchg
and
repz
das
test
loop
and
cmp
inc
inc
mov
cmpsb
cmpsb
leave
mov
pop
subl
test
inc
xlat
insb
fisubrl
outsl
fisttpl
pop
push
outsl
arpl
test
ffree
rcl
sub
or
pop
or
mov
cmpsl
and
icebp
cmp
pop
or
xor
popl
xchg
add
pop
xchg
push
fptan
aaa
mov
sub
cltd
inc
pop
call
sbb
sbb
in
dec
pop
mov
xor
cs
xchg
frstor
pop
mov
lahf
jge
or
inc
cmp
mov
push
popa
mov
lods
hlt
dec
pop
xor
in
hlt
xchg
loopne
mov
cwtl
xchg
dec
jne
ljmp
fiaddl
hlt
jbe
ja
fsubrl
lds
add
mov
std
or
inc
lods
cli
popf
mulb
mov
adcl
jae
inc
jo
cmp
xor
xlat
lods
dec
xchg
inc
xlat
dec
jbe
sbb
loope
ss
std
mov
iret
mov
cltd
lcall
pop
mov
lock
inc
hlt
mov
ljmp
popa
dec
aas
jg
push
nop
test
sub
sbb
adc
inc
sbb
das
fs
xchg
addr16
icebp
addb
stos
loopne
mov
mov
pop
scas
mov
jge
loope
out
jg
inc
movl
mov
iret
or
push
mov
test
aas
aas
or
xlat
cmp
add
sti
bound
ret
pop
shll
mov
sub
push
mov
pop
xor
loopne
insb
inc
stos
mov
insb
mov
adc
mov
xor
clc
pop
repnz
cli
push
push
flds
test
lahf
mov
dec
cmp
nop
xor
out
or
push
sub
sahf
scas
mov
mov
mov
mov
xchg
cmpsl
ja
int
fnstenv
movsb
mov
or
push
mov
mov
inc
adc
xchg
lock
adc
lds
popf
insl
jl
pop
cmpsl
enter
pop
fdivrp
imul
push
stc
jle
loopne
jge
push
push
adc
xchg
push
daa
add
out
lods
xor
mov
lcall
ret
xchg
in
addr16
mov
rorl
and
daa
inc
cmpsb
inc
and
xchg
pusha
mov
and
sahf
shlb
rolb
add
movsb
ret
push
adc
loopne
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
daa
into
mov
adc
adc
mov
imul
adcl
jae
test
sbb
int3
adc
xor
outsl
int
xchg
mov
sub
pushw
lods
gs
pop
push
std
aad
frstor
add
adc
push
lds
arpl
sbb
xlat
push
popl
mov
jbe
pop
xlat
dec
mov
inc
mov
adc
shll
out
push
adc
scas
or
mov
xorb
xchg
or
leave
fldt
sahf
cmp
cmp
cmpb
push
mov
test
pop
sahf
cmpsl
cmp
xchg
mov
call
cmpsb
xchg
mov
mov
cmc
insb
xchg
loope
dec
mov
pop
inc
leave
imul
int3
int3
setae
stc
loopne
daa
popf
mov
sbb
mov
adc
push
push
in
inc
cmp
cmp
jle
mov
gs
sub
insb
out
inc
xchg
imul
and
pop
pop
mov
add
insl
outsb
cmovge
inc
stos
mov
lcall
and
cmp
aaa
push
xor
imul
lret
cmp
inc
popa
dec
jae
sub
ss
mov
xor
inc
loope
adcb
orb
out
int3
adc
hlt
popa
jge
hlt
lcall
in
stos
cmp
sarl
fwait
sahf
fsubrl
outsl
insb
roll
insl
idivl
sbb
mov
stos
enter
push
hlt
jle
xchg
push
add
int
push
ficoms
dec
mov
mov
ret
clc
push
mov
add
data16
xchg
lds
and
nop
cmp
outsb
jbe
jbe
xor
and
mov
mov
and
push
or
cltd
and
sub
pop
lret
into
jl
mov
mov
add
mov
push
adcl
lea
mov
xor
loope
push
pop
pmulhuw
stos
sbb
and
push
pop
and
xor
fistps
adc
xor
mov
imulb
aas
les
jbe
cs
adc
fmul
leave
decl
or
lods
jns,pn
xchg
lret
dec
imul
mov
jmp
ss
int3
outsb
fisubl
subl
jl
hlt
mov
xchg
inc
push
add
imul
sbb
sarl
and
and
xor
xor
int3
into
or
shll
inc
movsb
rolb
dec
dec
adcb
sbb
in
pushf
nop
push
rcr
fwait
outsb
hlt
pop
loope
shl
pop
insl
ds
mov
add
lock
push
sbb
mov
push
pop
dec
push
xchg
sarl
ret
pop
lds
adc
or
jno
push
cmpsb
inc
pop
fstpl
pop
fidivl
push
or
xchg
pop
push
jl
gs
fnstcw
inc
add
clts
cld
imul
out
and
lock
loope
dec
sbb
cli
jmp
pushf
pop
sbb
cmp
fldl
or
enter
pop
sbb
loopne
iret
popf
mov
sub
hlt
pop
sub
inc
test
pop
lahf
je
and
inc
sub
ss
movsb
test
leave
xchg
sbb
jo
dec
lods
test
cmpsl
jno
sub
mov
fwait
and
std
pop
dec
aam
inc
or
xor
and
push
dec
enter
sahf
mov
sbbb
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
adc
adc
xor
adc
out
dec
ljmp
ret
cltd
jl
jle
je
mov
mov
mov
xor
aas
push
mov
scas
fildll
icebp
outsl
fmul
or
out
es
adc
rclb
arpl
leave
lcall
dec
add
lods
lcall
nop
lcall
sub
pop
adc
mov
orl
mov
aas
rol
pop
sbb
jbe
adc
call
int
dec
or
insb
repz
mov
push
cmpsb
push
mov
adc
mov
xor
cmp
fstpt
mov
cmpsl
xor
jns
or
test
test
aam
inc
add
mov
icebp
adc
sbb
push
out
and
icebp
das
sub
and
inc
fs
mov
mov
mov
sub
jle
mov
out
or
lds
mov
mov
outsl
dec
enter
addr16
repz
fbstp
fisubl
mov
push
lret
push
mov
dec
jno
jnp
pop
sub
mov
cmp
loopne
cwtl
inc
ja
cld
jecxz
mov
adc
cmp
aam
ret
loop
fwait
add
jb
and
shr
mov
sahf
sub
dec
das
cmp
mov
test
jnp
addr16
jle
or
push
ficompl
sub
arpl
and
rolb
push
fs
xlat
inc
xlat
or
xor
dec
jecxz
out
out
mov
and
in
xor
adc
mov
cltd
cmp
and
divb
lds
push
and
addr16
arpl
pop
into
mov
mov
and
stc
jnp
mov
iret
cld
inc
pop
subb
outsb
xor
iret
mov
pop
lahf
cmp
lods
clc
mov
fwait
outsl
xchg
cwtl
mov
inc
pop
inc
ret
test
repnz
adc
mov
in
mov
push
pop
fmull
bound
fmulp
movsb
outsb
leave
inc
jb
out
stc
sarb
dec
test
pop
cmp
adc
sbb
dec
sub
movsl
mov
rep
fidivrs
loope
repnz
jnp
imul
popa
les
adc
call
sahf
icebp
rcl
movd
pop
pop
mov
push
jbe
mov
cmpsl
push
cmp
int
mov
or
or
in
pop
gs
insl
int
dec
neg
stos
mov
and
xchg
popa
filds
clc
xor
out
repz
stc
iret
in
push
jae
mov
lcall
outsl
push
and
mov
jnp
lahf
cwtl
mov
xorb
push
les
roll
add
add
adc
push
xor
jecxz
add
adc
sub
stos
sahf
xlat
jp
loop
scas
jns
lahf
daa
jbe
in
ja
jmp
lea
adc
ljmp
pop
xlat
jmp
jp
pop
xor
rol
mov
imul
lds
xor
dec
insl
jmp
es
fsubrs
and
fwait
scas
xor
sbb
pop
loope
gs
dec
and
sbb
ljmp
jp
inc
repnz
xchg
mov
into
imul
lock
loop
cmpsl
cwtl
iret
or
cltd
mov
xchg
push
aam
push
push
cld
xchg
sbb
jns
pop
mov
add
sbb
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
ljmp
xor
adc
enter
mov
bound
push
sbb
add
cmp
push
out
mov
mov
xor
dec
jnp
jecxz
or
mov
cmp
mov
pop
out
add
or
push
dec
cmpsb
cmpb
repz
in
xchg
dec
stos
cs
jp
mov
xchg
int
aaa
test
dec
gs
xor
in
mov
sbb
dec
cmp
mov
cli
xchg
lods
fstpt
mov
xlat
dec
imul
or
push
sub
xchg
cmp
sbb
cli
lret
aas
cmp
dec
mov
pop
daa
pop
cmp
cltd
loopne
cwtl
movsb
sbb
int
push
pop
mov
jg
and
hlt
cmp
popa
sbb
adc
lods
adc
mov
xor
jnp
add
pop
mov
rol
cmp
lahf
dec
mov
cmpb
xor
mov
lds
cwtl
aaa
lods
gs
jg
push
mov
fistpll
pop
in
fnstenv
dec
es
aaa
loop
cmpsb
pushf
inc
inc
sbb
out
push
mov
inc
xchg
mov
daa
jmp
sbb
lock
mov
xlat
dec
add
arpl
mov
jne
dec
pusha
pop
dec
insl
dec
and
jmp
sbb
xchg
jno
lcall
or
test
jns
loope
rcrl
jne
loop
jl
mov
sub
addr16
movsb
xchg
iret
inc
cltd
jns
xor
ret
dec
cwtl
cmpsl
jge
pop
imul
rcl
clc
test
dec
and
mov
push
ret
pop
push
jg
or
repz
and
mov
sub
add
sbbb
push
xlat
ror
lea
mov
sbb
js
cli
mov
fmulp
popa
fildll
xchg
loope
push
aam
jge
jge
mov
sbbl
sbb
iret
xor
aaa
mov
add
sbb
add
xor
mov
sbb
scas
add
mov
mov
xchg
sbb
adcb
pop
mov
jne
outsb
inc
je
popa
add
cmp
or
test
sbb
push
mov
in
jns
push
cmp
cmpsb
insb
fstp
dec
lahf
test
stos
repnz
movsl
stc
icebp
xor
sbb
cmpsl
mov
add
sbb
add
pusha
out
sub
sbb
dec
clc
jl
aas
jl
dec
out
adc
xor
out
fmull
hlt
jae
xchg
push
xor
inc
sti
xchg
lods
or
xchg
cwtl
lret
mov
dec
add
pop
xchg
loope
out
loopne
clc
js
jbe
mov
mov
enter
xor
dec
push
and
or
orl
sbb
push
push
jmp
aad
inc
stos
pop
je
stos
hlt
shrl
and
in
mov
push
dec
ss
repz
rorb
shrb
push
push
in
enter
dec
cmpsl
icebp
dec
pop
mov
cmp
push
mov
insb
lods
adc
or
pushf
mov
adc
sub
add
mov
mov
mov
int3
dec
sub
test
mov
test
icebp
sti
mov
jle
pushf
ret
insb
pop
ret
jle
lcall
inc
mov
lret
jge
fwait
pop
stos
cmp
test
and
inc
into
inc
or
addb
stos
loop
decl
je
or
jno
sub
mov
or
or
out
jmp
ja
add
sti
push
testl
lcall
cli
sbb
xor
jne
gs
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
pop
push
mov
xor
adc
test
adc
cmp
dec
cmp
inc
outsl
dec
push
lds
das
pushf
dec
xchg
aad
ds
iret
xchg
fdivrp
dec
mov
sub
out
mov
out
incl
scas
xor
std
mov
push
ror
mov
scas
jle
push
nop
adc
cli
mov
adc
cmp
or
sub
cmp
fimull
divl
jae
add
adc
inc
jge
pusha
outsb
mov
push
mov
mov
xchg
xchg
out
inc
ret
xor
in
hlt
in
loope
movb
rclb
xchg
dec
hlt
push
loopne
lock
or
filds
fdivp
push
inc
movsl
test
mov
aad
dec
iret
inc
subb
shll
gs
jge
cmpsb
push
nop
mov
es
hlt
sbbl
stc
sbb
arpl
mov
push
lods
or
sti
xchg
and
add
dec
xchg
out
out
jl
add
sbb
les
and
xchg
ffree
fidivrs
push
fists
inc
ds
rcl
arpl
clc
xchg
aaa
jno
mov
add
add
aas
icebp
push
xchg
stos
decl
mov
ja
mov
mov
adc
mov
loope
pop
and
xchg
ljmp
add
les
mov
or
std
rcr
jne
cmp
xchg
iret
in
pusha
mov
mov
lods
loop
add
arpl
aam
aad
movsl
stos
scas
inc
add
fsubrl
lcall
adc
mov
rorb
and
es
or
icebp
out
test
pop
sub
inc
xor
aas
out
or
and
leave
ljmp
adc
cmp
out
xor
repz
jno
xchg
arpl
cmp
adc
out
shrl
xor
sub
mov
pop
xor
stos
stc
idivl
cmp
lods
leave
mov
pop
lods
js
rcl
adc
insl
cmp
mov
outsl
mov
aad
or
pop
shl
adc
sub
push
dec
or
pop
loopne
mov
dec
int3
into
clc
arpl
pop
inc
outsb
or
adc
xchg
scas
loope
mov
jbe
lods
mov
sbb
and
testb
mov
dec
out
pop
mov
mov
andb
pop
inc
push
iret
jo
dec
cmp
adc
aaa
cs
xor
mov
mov
add
out
shr
and
cmpsb
incl
cmp
xchg
xor
dec
xor
and
add
mov
sbb
nop
mov
clc
fnstenv
push
arpl
scas
in
mov
cmpsb
jl
test
daa
inc
lret
subl
mov
adc
adc
ss
repz
insl
add
xor
or
outsl
bound
mov
sahf
sub
iret
push
int3
sbb
push
xchg
adc
jmp
leave
das
sbb
mov
xchg
repz
in
dec
and
idiv
arpl
pushf
cmp
gs
lds
mov
repnz
icebp
popf
sub
adc
jg
lcall
imul
popf
fcoml
fmull
aad
and
and
popa
daa
das
cwtl
cltd
je
repnz
sti
xor
test
pop
push
push
fimuls
out
adc
jge
mov
push
and
dec
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
inc
loope
sbb
xchg
test
jo
scas
xor
sub
pop
ficompl
pop
mov
push
inc
add
popf
call
repz
fsubr
pop
cs
jmp
push
xchg
fs
jo
scas
sub
cmp
add
push
popl
in
test
or
jno
stc
iret
inc
sub
js
push
loopne
imul
push
adc
pop
and
jbe
or
xor
ret
sub
sti
pop
mov
icebp
aas
inc
xchg
ret
insb
test
jmp
jnp
or
inc
and
inc
and
mov
xor
imul
sub
xor
cmpsb
loopne
faddl
jb
pop
je
js
adcl
mov
sti
fsubs
xlat
nop
clc
jg
outsl
frstor
lret
jne
ja
push
loop
pop
add
push
inc
ret
cmp
jle
lds
sub
mov
inc
cmp
or
out
mov
out
in
jb
and
add
add
add
mov
loop
mov
cmpsl
sub
mov
gs
xor
mov
xchg
mov
adc
sarb
out
mov
push
lea
cmp
repnz
mov
insl
sub
xchg
xor
mov
mov
cmp
push
js
fildl
mov
call
jmp
pop
sub
lock
out
add
lock
testl
adc
jp
mov
push
cmp
scas
jle
hlt
or
insl
xor
cmp
sbb
dec
mov
das
xchg
xchg
sbb
daa
push
adc
cmp
mov
jecxz
clc
loop
push
push
pop
or
mov
add
mov
loope
in
jnp
iret
stc
rcrl
dec
lock
imul
xor
inc
push
jno
jo
add
andl
dec
mov
les
clc
popa
divb
es
scas
push
mov
call
imul
les
push
pop
cld
push
and
mov
add
mov
lahf
ljmp
xchg
aaa
out
dec
shrb
imul
dec
jns
divb
out
lret
daa
test
ret
pop
or
scas
push
adc
mov
mov
inc
xor
jno
iret
sub
ret
jl
int
stc
mov
push
and
cmpsl
arpl
push
insb
ja
pop
ret
fnstsw
sbb
mov
push
xchg
scas
pushf
push
mov
lcall
gs
jne
lret
pop
ficomps
inc
loop
rorl
sub
pop
aaa
call
fs
ljmp
inc
arpl
jp
aaa
and
mov
and
stc
cmpsl
stos
push
or
cmpsl
sub
inc
push
test
xchg
addl
out
and
add
xchg
jbe
scas
mov
mov
cmp
out
popf
xchg
mov
and
add
scas
xor
icebp
add
fwait
popf
push
cmc
dec
pop
push
dec
popl
jge
jbe
daa
and
xchg
or
bound
add
and
das
add
push
pop
mov
je
scas
adc
xor
and
xchg
cmpsl
cwtl
xchg
in
and
mov
push
clc
jl
daa
mov
ds
or
push
mov
lret
push
sbb
mov
jecxz
scas
dec
dec
cmp
test
adcl
lods
hlt
mov
shrb
cmpl
inc
sub
fwait
lods
dec
aam
fwait
xor
movsb
push
addb
or
das
gs
add
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
pop
lods
jnp
adc
xor
adc
das
es
xchg
loop
sbb
rol
mov
ret
xchg
dec
mov
pop
and
mov
movl
fbld
jnp
mov
dec
push
mov
or
mov
add
adc
pop
cmp
scas
dec
mov
cmp
xchg
ja
ds
addr16
lcall
icebp
or
in
xchg
inc
adcl
xor
stos
data16
pop
mov
cmpsl
mov
and
lods
mov
dec
test
stc
fidivrs
sahf
mov
aas
sahf
stc
fstl
outsl
aas
js
mov
rcrb
and
lret
xor
ss
cmp
xchg
mov
sbb
cmp
rcrb
xchg
test
dec
mov
adc
aaa
jbe
test
jg
mov
pusha
ret
sbb
xchg
adc
iret
or
gs
pop
push
mov
sti
mov
inc
lret
rcll
cmp
data16
ljmpw
or
fwait
push
in
sbb
testb
aas
or
shrb
ret
push
outsl
insb
mov
cmp
lret
mov
or
aaa
lret
xlat
add
lret
loopne
sub
sti
and
fmuls
pop
add
dec
jge
add
push
add
dec
cmp
ret
mov
push
inc
mov
and
shll
in
lahf
std
inc
test
int
mov
call
pop
cmp
lcall
push
stos
xchg
xchg
push
sbb
push
inc
and
pop
cwtl
inc
insb
mov
je
xor
bound
jno
aad
scas
xor
pushf
dec
mov
test
push
insb
and
mov
mov
sub
cmp
pop
pop
mov
or
mov
stos
fimuls
sub
sbb
jae
pop
fbstp
gs
add
jp
xlat
out
gs
pop
add
mov
test
enter
push
cmp
pop
mov
mov
lret
call
pop
shlb
adc
push
test
push
and
xor
fs
mov
repz
and
xchg
bound
repnz
push
sbb
jecxz
loope
rcll
popa
pop
lea
aad
loope
add
sbb
data16
pop
mov
dec
std
fdivl
js
imul
dec
cmp
dec
jmp
insl
add
xor
lock
outsb
jecxz
mov
cli
iret
aas
jnp
cmp
sub
add
cltd
ret
ds
mov
les
fcoml
jg
es
and
push
xchg
jmp
in
rcll
jecxz
inc
lock
pop
and
loop
or
dec
out
push
test
push
inc
out
push
rclb
ljmp
movsb
js
xor
jnp
or
jge
loop
popf
push
push
stos
test
test
mov
xchg
fwait
stos
or
in
xor
jbe
mov
addr16
stos
mov
inc
jle
rcrl
and
pop
mov
and
lret
mov
in
jo
push
mov
out
ret
data16
and
mov
lds
sbb
fsubs
fstl
pop
push
inc
int
cmc
fldl
jmp
pop
lret
xchg
sahf
repz
fptan
sahf
adc
cmpsl
mov
test
fcmovne
xor
inc
leave
xchg
cmp
out
mov
add
jae
mov
cmpsl
std
cs
adc
mov
pushf
xchg
stos
mov
dec
push
xchg
sub
add
inc
adc
sbb
fs
mov
sub
stos
push
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
repz
xor
std
xlat
pop
mov
xor
jns
adc
rolb
es
mov
xchg
pop
sub
fsubs
sbb
push
lods
std
xor
out
pop
adc
test
pop
jns
sub
mov
pop
das
push
add
hlt
sub
gs
ret
mov
sbb
sbb
push
popf
in
mov
pusha
sti
inc
cmp
out
sub
push
mov
push
inc
pop
dec
cmpsb
fwait
mov
push
push
arpl
cld
or
in
sar
jnp
lods
xor
testb
decb
scas
push
pusha
cli
cmp
pop
xchg
pop
xchg
push
inc
hlt
rcl
add
adc
je
inc
or
jecxz
in
scas
add
in
out
push
test
mov
fiaddl
lods
add
mov
mov
mov
sbb
cmp
ss
xchg
popf
sub
and
inc
rorl
call
dec
ret
sbb
add
test
dec
adc
push
jmp
out
fdivrs
fidivl
fsts
decb
in
cmp
int3
ja
and
ja
lcall
mov
ja
and
mov
adc
pop
and
adc
call
int3
dec
or
mov
rcrl
loop
ja
shrl
je
out
lret
pop
inc
add
mov
dec
xor
adc
pop
mov
dec
incl
jge
popa
pop
and
push
fistps
fs
lcall
loop
orl
sarb
jecxz
xchg
xor
mov
xor
out
mov
mov
in
bnd
adc
mov
cmp
jo
jae
mov
lods
dec
in
outsb
sarb
enter
pop
loop
fsubr
jns
sub
jmp
xchg
scas
xchg
push
sub
ljmp
or
pop
push
inc
cmc
aam
mov
mov
notl
mov
js
loop
and
test
call
scas
test
dec
out
adc
rcrb
push
add
enter
outsb
mov
dec
in
in
fistl
jno
xor
mov
inc
iret
gs
adc
xor
test
cli
cmp
adc
dec
test
lock
das
mov
fs
mov
inc
xchg
rcr
insl
sub
ficompl
fwait
in
cmp
cmpsb
out
cmp
or
xor
jnp
sti
ret
lods
roll
jle
push
int
mov
lea
in
pop
lods
fsubrs
mov
jge
std
jbe
push
pushf
add
flds
jecxz
test
in
and
lds
lods
insl
pop
das
mov
push
dec
addl
invd
jge
rdtsc
mov
mov
jecxz
leave
jp
shll
idivb
or
add
in
add
xor
aam
or
pop
sub
enter
sub
jnp
xchg
pop
and
js
mov
cmp
jb
mov
daa
or
imul
jne
jmp
mov
clc
test
lods
mov
xchg
and
scas
std
ss
cmc
jl
push
push
loopne
fists
sbb
mulb
or
pushf
movsb
sar
jle
insl
push
dec
subl
ss
dec
jbe
mov
sub
cmp
repnz
popa
jg
mov
inc
sbb
mov
into
lahf
mov
shrd
xor
jmp
mov
popa
lcall
imul
adc
adc
adc
xchg
sbb
sbb
dec
pusha
xchg
xchg
inc
inc
inc
pop
xchg
add
jmp
sub
flds
mov
pop
dec
pop
out
or
insl
ficoms
fs
leave
mov
dec
jnp
sub
or
inc
shlb
loopne
mov
fldl
aad
insl
aad
test
in
adc
sub
outsb
jl
int
mov
shlb
xchg
sbb
mov
out
aaa
insl
cmp
iret
pop
adc
into
movsl
inc
outsl
push
daa
cmp
scas
xchg
push
cmp
incl
repnz
or
ds
jbe
repz
adcb
rcr
mov
das
and
lret
loop
xlat
fucomi
add
int3
fs
mov
cmp
adc
imul
mov
test
cs
sub
sub
adc
addb
addr16
jne
inc
mov
mov
imul
pop
push
ljmp
and
js
add
inc
loope
xor
shr
mov
sti
sub
sti
jae
jnp
mov
mov
cld
hlt
inc
testb
push
shlb
or
pop
inc
lods
in
das
mov
cmpsl
outsl
imul
arpl
inc
inc
ds
lods
xchg
cmp
sbb
add
rolb
or
lods
xor
xor
fmul
fs
cmp
pop
lcall
or
je
sbb
push
xchg
iret
push
decl
out
jmp
out
dec
shl
mov
jnp
pop
xchg
loopne
pop
repz
mov
sub
dec
fnstsw
rclb
stos
repz
or
cmp
mov
jg
lret
lcall
das
ficomps
and
out
lea
stc
mov
in
pusha
sub
mov
scas
push
cmpsl
imull
aas
fsts
stos
inc
pop
daa
sbb
xor
sbb
cmpl
cwtl
mov
and
aam
inc
int
push
jno
popf
jge
sbb
xchg
imul
push
mov
data16
aaa
int
add
in
xchg
xchg
repnz
das
lock
xor
gs
js
and
pop
mov
sub
sub
xlat
adc
fsubl
jne
or
aad
repz
insl
add
test
lods
xor
push
and
cwtl
or
or
and
imul
lret
xchg
pop
ret
mov
mov
mov
adc
popa
sub
mov
jle
dec
sbb
sar
data16
add
ficompl
xor
insb
lret
adc
shrl
sbb
xchg
or
fidivl
mov
adc
mov
enter
nop
mov
jge
outsb
fwait
out
es
adc
clc
mov
fsubr
aam
jp
and
jnp
inc
lahf
jno
es
cmpsb
or
cmp
repnz
inc
hlt
push
lea
nop
mov
xor
das
pop
movsl
pop
aas
sbb
scas
push
ss
leave
fsubs
lret
push
nop
gs
or
cli
cmpb
movb
mov
imul
adc
inc
lock
mov
dec
fmulp
sbb
and
xchg
mov
cmp
stc
and
sbb
daa
mov
popa
inc
adc
adc
xor
insl
into
inc
lahf
or
lcallw
sub
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
dec
jbe
int
adc
fmull
adc
pop
adc
loop
cmpsb
sar
add
add
shll
push
ret
add
in
jmp
inc
pop
in
mov
inc
ficomps
outsl
mov
inc
aam
and
orb
mov
lcall
mov
nop
mov
loope
dec
pusha
adc
dec
pop
int3
sub
pusha
leave
pop
xor
add
cmpsb
arpl
cmp
mov
inc
pop
add
or
fildll
inc
or
cmp
push
or
daa
hlt
div
ret
mov
loope
mov
imul
les
cmpsb
mov
shl
push
dec
fiaddl
mov
das
pop
lea
aaa
mov
xor
stos
std
pop
subl
sub
cmpsl
jnp
jecxz
add
insb
ss
shl
adc
hlt
and
adc
xchg
loopne
sbb
sub
shlb
sbb
dec
aaa
jp
xlat
xchg
push
push
jno
xor
dec
test
mov
mov
pop
dec
fsubrl
cmpsb
dec
sub
hlt
adc
ljmp
jmp
xor
mov
push
fisubrl
ds
insb
repz
adc
jl
aaa
fs
xor
jmp
adc
mov
inc
ds
xor
shrb
cmp
std
jp
mov
mov
jno
jb
xchg
xchg
adc
jmp
bnd
xchg
lret
fiaddl
inc
pop
sahf
int3
es
mov
vxorps
aam
push
insb
xchg
cmp
adc
mov
mov
xor
and
dec
stc
mulb
cltd
rcr
icebp
movsl
mov
jno
adc
push
lahf
pop
dec
mov
mov
fldl
xor
dec
cli
jnp
pop
mov
mov
jecxz
into
ds
inc
mov
test
into
push
ss
push
cmpsl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
cmpsl
movsb
sub
xchg
sbb
adc
movlps
mov
out
cmp
cmp
mov
sarb
push
and
stos
shlb
in
and
inc
movsl
leave
loop
jg
xchg
mov
lea
adc
out
pushf
fimuls
jns
insb
fldl
movsb
test
cs
or
scas
xor
je
aaa
adc
inc
or
cmpsl
dec
jb
adc
add
adc
xor
dec
mov
jne
or
movsl
repnz
rcrl
clc
sbb
pop
mov
cmpsb
ss
sti
mov
sbb
fcmovnbe
adc
xor
jle
pop
inc
cmc
popa
pushl
inc
adc
or
cld
and
mov
testb
inc
xor
and
add
test
fnstenv
add
rcrb
cmc
in
add
cwtl
sti
out
out
popf
fwait
iret
push
lock
out
adc
cmp
ja
outsb
mov
pop
jno
cli
pusha
mov
lock
pop
les
mov
pop
sub
mov
outsb
sti
add
sbb
xchg
dec
adc
jl
out
mov
cmpsb
adc
ret
sbb
call
call
xor
hlt
mov
loope
xor
mov
jmp
add
test
iret
scas
mov
aaa
rcl
lods
aas
push
mov
xchg
gs
leave
mov
or
inc
jns
pop
xchg
mov
fld
nop
subb
iret
lods
inc
faddl
test
fstpt
rorl
iret
cmp
das
and
xor
shll
sbb
dec
popa
cmp
and
loop
test
daa
notb
xor
mov
mov
clc
mov
test
fldl
ud0
sbb
and
jl
repnz
sub
push
pop
inc
es
das
orb
jae
js
pop
xchg
addl
out
mov
scas
sub
fwait
mov
nop
cmpsl
or
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
push
ljmp
fmull
adc
test
pop
sbb
psraw
ja
ja
insb
icebp
lret
imul
mov
mov
jbe
fisttpll
push
rcll
pop
aad
lret
ljmp
js
mov
out
inc
mov
insb
movsb
fadds
fnsave
or
ljmp
push
repz
mov
jae
mov
cmp
or
mov
push
xchg
test
mov
hlt
movl
lret
or
ljmp
data16
fisubrs
mov
mov
push
lods
imul
xor
push
mov
push
mov
xor
xor
mov
xchg
pop
outsb
out
add
icebp
pop
push
dec
dec
mov
mov
std
stc
pxor
inc
pop
pop
mov
stc
nop
mov
pop
in
sbb
pop
or
popf
andb
mov
jno
lcall
sahf
mov
sahf
rep
out
mov
sbb
inc
arpl
push
bound
mov
mov
dec
dec
outsl
sbb
mov
mov
push
hlt
push
lahf
dec
mov
inc
fdivl
insl
xchg
pop
js
and
mov
int3
out
imul
scas
lods
cmp
popf
cli
popa
test
push
jno
jb
insl
inc
lock
popf
pop
push
jns
sub
xor
pop
rcrb
fwait
push
out
sbb
in
xchg
mov
sbb
sbb
loope
ret
push
add
cmp
cmp
jle
imul
pop
ret
sbb
add
dec
mov
dec
sbb
mov
mov
js
shrl
lret
mov
lock
jmp
sbb
insb
lea
pop
inc
idiv
test
fstpl
mov
push
jns
lret
pop
cltd
ds
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
cmp
push
adc
adc
movlps
push
lret
daa
gs
lret
xor
mov
adc
jnp
out
inc
in
adc
nop
shll
scas
jl
add
pop
dec
in
cs
sub
or
std
pop
ja
and
lahf
cwtl
stos
dec
int
mov
inc
jmp
hlt
and
mov
mov
mov
pop
and
push
into
imul
pop
inc
test
mov
lods
push
cmpsb
cmp
je
pusha
mov
adc
push
mov
xor
xlat
pop
push
aaa
mov
notb
xor
add
xor
or
dec
xchg
jg
push
test
fbstp
or
push
cmp
and
pop
leave
mov
xor
pop
cmpsb
sub
sbb
aaa
add
lahf
pop
or
sub
adc
adc
mov
mov
add
xchg
jg
js
pop
xor
sbb
xor
mov
clc
pop
xchg
add
add
inc
pop
xor
cmp
pop
les
es
and
xchg
xorl
push
jmp
call
movsl
loope
inc
and
mov
int3
lcall
das
es
fs
in
je
mov
pop
lea
lods
mov
and
sbb
test
push
addl
leave
sub
mov
cmp
int
xchg
inc
cmp
xchg
sbb
pop
sub
rcl
mov
cwtl
inc
js
movsb
adc
and
add
pop
in
lods
in
test
filds
sub
lods
iret
pop
sub
and
outsb
mov
scas
pushf
fldcw
mov
data16
xchg
sbb
lea
mov
adc
push
and
add
dec
mov
sbb
add
and
mov
inc
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
jmp
stos
in
adc
adc
movlps
pop
ja
sbb
mov
stc
les
adc
arpl
sbb
xchg
ss
mov
push
test
sub
mov
addb
sub
shl
popf
dec
insl
jl
pop
cmp
jno
les
pop
jg
and
enter
sbb
pushf
clc
lahf
ljmp
sbb
mov
sti
add
mov
pusha
idivb
mov
das
pop
dec
or
xchg
xchg
sbb
mov
push
repnz
lock
sub
mov
pop
push
cmpsb
dec
inc
lret
enter
daa
pushl
mov
mov
fldcw
ret
aas
insb
add
std
xorb
inc
mov
jnp
test
lock
sbb
mov
cmp
push
dec
out
in
and
out
cmp
fisttpll
sbbb
jns
mov
in
jbe
mov
cmp
mov
fdivl
jbe
subb
inc
insl
jp
jle
aaa
or
mov
ss
jp
jbe
jo
mov
es
movb
pop
pop
mov
jecxz
sar
rorl
push
xlat
mov
jno
jne
mov
xlat
sahf
sub
ja
or
and
lods
stos
or
int3
mov
es
ficoml
adc
push
inc
adc
inc
mov
xchg
stc
and
dec
pop
jb
or
push
add
xchg
pop
sub
scas
lods
adc
cli
pushf
cmpsl
inc
jnp
mov
inc
sbb
lahf
mov
div
fbstp
icebp
xor
mov
stc
scas
insl
cmp
or
mov
mov
outsb
je
push
sub
flds
fimuls
mov
push
jg
shl
mov
jle
or
arpl
cmpsb
cmp
mov
gs
add
mov
and
add
xchg
sti
inc
or
mov
cmc
je
lea
imul
test
pop
sbb
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
mov
xor
mov
jns
sub
mov
or
inc
jle
jle
mov
outsb
pop
xor
jnp
push
imul
in
inc
mov
add
mov
mov
stos
test
adc
adc
jl
pop
aaa
hlt
pop
dec
inc
data16
push
jae
dec
repz
jge
or
dec
cmp
subl
imul
adc
sbb
dec
dec
push
sub
fsincos
repnz
fwait
data16
cli
and
gs
jmp
insb
xchg
mov
or
lea
fcomp
jge
arpl
gs
sti
sti
fnsave
cmpsl
cltd
jle
sub
mov
std
push
dec
repz
jg
in
data16
test
xor
les
jl
mov
jne
mov
hlt
gs
pop
push
test
mov
out
or
std
adc
dec
rol
jmp
loope
or
cmp
fcmovbe
out
ljmp
sbb
dec
aas
push
mov
in
aam
ja
pop
mov
push
push
sub
out
inc
test
push
lods
repnz
repz
inc
xor
push
jecxz
cmp
lock
ds
mov
xchg
pop
iret
add
push
insl
and
sub
adc
xchg
mov
rcll
imulb
adc
into
sbb
xchg
pop
cwtl
sbb
push
gs
ret
mov
movsl
sub
pop
xor
push
push
dec
scas
popa
movsb
mov
push
ficompl
mov
cmp
pop
fld
into
sbb
mov
pop
mov
xor
gs
rclb
adc
xor
aad
jno
sbb
cli
daa
popa
add
dec
mov
ja
hlt
loope
mov
mov
in
sub
inc
out
mov
ret
dec
icebp
push
sbb
jg
or
rcr
jecxz
std
test
scas
stos
and
movsl
aad
inc
mov
repnz
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
jns
js
or
adc
movlps
ror
fildll
int
int
les
test
lret
xchg
mov
jnp
cmp
sub
jge
js
jg
sbb
roll
sets
sbb
outsb
idiv
push
and
sub
movsb
push
xlat
or
in
cmp
out
mov
shll
push
aad
xor
imul
out
jp
fwait
sbb
jp
sbb
mov
jb
mov
scas
mov
clc
sahf
fcomp
subl
or
nop
fidivrs
mov
lret
loope
imul
mov
push
in
xor
jae
hlt
arpl
insl
mov
test
mov
je
pop
cli
mov
inc
mov
mov
sub
mov
movb
lahf
mov
xor
xor
mov
sbb
les
lods
arpl
adc
mov
aam
hlt
shr
inc
hlt
and
jbe
das
cmp
push
stc
dec
lods
in
out
xorl
aad
add
jl
mov
sbbl
cwtl
sti
mov
dec
sbb
and
xchg
mov
adc
sbb
jmp
in
xor
lret
cld
into
fcom
pop
clc
jge
and
sti
mov
push
dec
dec
mov
roll
lock
lcall
adc
stos
sub
jo
or
sub
adc
pop
jbe
dec
pushf
fs
ficomps
jns,pt
cmp
in
jmp
stc
movsb
jae
les
xchg
test
aaa
mov
loop
adc
or
push
lret
push
movsl
pop
push
xchg
pop
dec
jp
mov
jmp
pop
xor
mov
aaa
stos
int3
jg
pop
and
dec
out
das
int
aam
add
mov
mov
lcall
sbb
inc
dec
test
sbb
xor
stos
addl
imull
mov
mov
dec
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
or
mov
in
lods
clc
sahf
jns
adc
cld
fidivrl
mov
mov
cld
or
mov
and
fnstenv
fistpll
rorl
je
iret
dec
addb
out
subl
test
stos
jmp
push
shlb
push
loop
mov
test
jnp
lret
in
and
pop
sbb
push
adc
loope
inc
test
addr16
adc
jle
gs
push
pop
mov
push
or
lea
sbb
fdecstp
dec
sbb
cmp
pop
cmp
lret
rorl
sbb
inc
sbb
jns
lcall
jmp
xchg
mov
mov
ret
cli
popa
imul
popf
sub
push
push
std
rclb
popa
push
in
push
fnstcw
cld
cli
cld
insb
movsl
push
and
xchg
add
mov
sahf
xchg
add
cmp
add
adc
inc
xchg
rolb
outsb
mov
imul
pusha
sahf
mov
and
cmc
inc
popa
lret
jns
pop
add
inc
bound
pop
insl
jp
dec
sbb
mov
pop
aaa
data16
addr16
pop
mov
ret
jmp
or
push
lock
mov
in
popf
add
cmp
aam
mov
mov
faddl
pop
addr16
sbb
cwtl
cld
cmp
push
jp
adc
cwtl
pop
loope
mov
das
stc
sub
mov
inc
sahf
cmc
xchg
in
cmp
jp
in
add
sti
lret
adc
jl
cli
add
push
scas
inc
clc
sub
adc
shl
test
sbb
pop
setb
std
mov
push
movsl
ja
pusha
cmp
stc
ret
sar
cmp
fwait
jl
dec
enter
stos
nop
xchg
or
pop
push
pop
jg
add
fs
mov
pop
es
mov
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
das
imul
popf
imul
mov
and
pop
iret
adc
mov
ds
mov
gs
lret
fists
cmp
cmc
lds
inc
movsl
and
fstpl
or
adc
iret
fwait
xchg
cmp
fldenv
xchg
sub
mov
dec
jno
iret
call
lret
cmp
cmp
inc
jp
mov
mov
ficompl
mov
lods
pop
cli
loopne
xchg
cmc
inc
gs
adcl
adc
add
adc
push
aas
adc
in
inc
addr16
adc
xchg
xrelease
icebp
jne
loopne
scas
cmp
cwtl
xor
xor
inc
sti
jnp
add
mov
arpl
xor
inc
xchg
jge
adc
add
aas
xchg
xchg
loop
push
add
out
jae
insb
fldl
out
push
ss
inc
mov
scas
mov
jbe
icebp
mov
nop
lahf
jg
jl
jmp
mov
gs
adc
xor
subb
or
jno
xchg
int3
lods
push
dec
dec
popf
aad
mov
xorl
test
scas
sbb
xchg
push
mov
xchg
pop
negb
leave
das
xchg
das
pop
fnsave
lahf
in
sbb
repnz
xor
movsl
lret
push
fwait
xor
popa
fwait
mov
scas
sub
dec
mov
xchg
jl
and
cmp
stos
lret
mov
les
idivl
inc
popf
dec
pop
jae
inc
xchg
into
sbbl
fldcw
cmp
sahf
cmp
push
mov
pop
lods
ret
xlat
jge
inc
push
arpl
sub
nop
add
das
cmc
rcrl
jge
fcmovbe
and
jecxz
mov
dec
setae
loop
int3
add
pop
or
mov
adc
push
xor
mov
mov
test
push
push
add
not
out
pop
scas
fldl
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
pop
mov
insb
aad
adc
fmull
adc
sub
xor
xchg
or
mov
dec
mov
hlt
test
lahf
mov
shr
divl
into
mov
mov
gs
mov
and
dec
and
xchg
xor
lods
les
mov
inc
inc
js
xchg
push
inc
in
or
sbb
jnp
pop
sbb
cwtl
cmpsb
pop
xor
jne
sbb
pop
mov
test
rcrl
stos
lea
push
jl
loopne
cltd
jl
shl
jae
mov
cmpsb
push
lss
movl
sub
inc
test
jge
fistl
and
jnp
mov
fcompl
add
pavgb
aad
into
xor
or
inc
or
cmp
xor
inc
add
lahf
jns
clc
pushf
jp
sbb
xor
fnstsw
push
pop
inc
sub
gs
icebp
xor
js
orb
adc
mov
cmpsb
inc
mov
cmp
xor
xchg
adc
xchg
nop/reserved
orb
push
ret
jp
pusha
fldenv
mov
in
lcall
das
mov
pop
push
aaa
in
gs
pop
push
mov
adc
inc
inc
push
fnsave
hlt
cld
and
mov
int3
push
jle
xchg
icebp
xchg
adc
jne
jmp
cmpb
xchg
pop
mov
pushf
jp
sub
ret
push
les
repz
sub
adc
fstl
and
pusha
ja
jo
adc
mov
sti
aas
pop
mov
arpl
xor
out
inc
mov
cld
and
mov
lcall
fs
ret
cmpsb
xchg
push
popf
aad
pop
sahf
sub
adc
mov
mov
jnp
ret
and
mov
cmc
add
mov
in
sbb
fcoml
inc
movsb
aad
dec
scas
loope
out
ret
gs
adc
fwait
int3
pop
jge
imul
inc
or
or
add
inc
or
pop
loopne
inc
fmull
inc
fmul
popa
add
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
popa
cld
inc
stos
popf
cli
adc
fmull
adc
das
mov
add
sub
sub
out
push
or
dec
and
add
popa
sub
enter
stc
sbb
mov
mov
fldl
xor
lds
dec
das
in
inc
sub
mov
sbb
fmuls
test
add
sti
icebp
sub
xchg
pop
insl
cmp
and
cmp
or
mov
xor
adc
dec
dec
jg
cmp
int3
or
inc
pushl
sbb
pusha
repz
sub
and
dec
mov
dec
push
ficoms
push
outsb
ja
sbb
cs
stos
seto
mov
xor
cmp
lahf
into
jae
subb
adc
repz
pushf
mov
mov
xchg
addr16
ficompl
mov
popf
adc
out
nop
adc
push
inc
imulb
scas
in
xor
add
mov
rcr
rorl
xor
cld
iret
adc
fildll
das
sti
cmp
push
sbb
je
xlat
xor
xchg
xlat
movsl
or
popa
xor
push
fstpl
sbb
pop
push
cmp
mov
orl
pop
cmp
aas
mov
jo
pushf
movq
hlt
data16
push
cmp
icebp
js
cmp
scas
pop
ja
popf
mov
and
lock
repz
sarb
iret
lcall
inc
loopne
inc
or
pop
hlt
outsb
mov
out
mov
and
inc
push
daa
and
and
repz
push
sbb
sub
adc
es
pop
mov
jo
jg
jecxz
jmp
dec
lock
scas
or
lret
insl
repnz
inc
cltd
out
out
lcall
in
xor
leave
add
mov
cmpsb
or
cmp
or
insb
rclb
mov
insb
jbe
inc
lods
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
mov
notb
adc
movlps
rcrb
data16
dec
notl
and
adc
sti
jne
xor
aaa
andl
sbb
lret
adc
and
cs
cmpsb
push
sbb
lret
cmpsl
out
stc
xchg
cmp
cmp
scas
ficompl
mov
fwait
loop
scas
jge
loopne
mov
adcl
lock
mov
pop
mov
cltd
xchg
add
outsb
iret
js
mov
pop
loopne
cmp
popa
pusha
xor
fs
and
add
mov
fistl
mov
out
test
jg
or
inc
xchg
gs
mov
sbb
cmpsb
insl
xchg
pop
ss
adc
mov
push
cmpsl
fidivs
test
in
stc
mov
shlb
sahf
lahf
and
movsb
pusha
xchg
lcall
push
aam
int3
jae
sahf
push
jge
out
jns
pop
jecxz
lret
sbb
cmp
adc
xlat
lret
mov
hlt
adc
add
and
pop
xchg
xor
xchg
xchg
sarl
outsl
out
lds
cmp
pusha
int
daa
push
and
popa
fnsave
sbb
pop
clc
xchg
inc
jle
jne
sbb
fistpll
cmpsl
or
insb
push
imul
lds
mov
jg
daa
jg
push
push
or
notb
and
dec
sbb
and
enter
xchg
pop
icebp
les
jne
jle
jle
jecxz
sbb
jg
scas
adc
mov
test
xchg
sbb
mov
movsb
ret
cmp
push
jmp
das
inc
out
pop
in
xchg
loope
xchg
das
fstl
scas
mov
adc
loopne
call
pop
mov
adc
or
icebp
or
xchg
xchg
and
inc
mov
std
fbld
mov
pop
movsb
or
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
hlt
mov
mov
or
inc
std
and
mov
cmp
mov
ficoml
pop
jno
inc
jmp
cmc
xor
mov
or
xchg
icebp
and
xchg
pop
into
imul
fmuls
xchg
rcrb
adc
es
jl
fcoms
adc
cwtl
xor
inc
loop
dec
push
inc
cli
cmp
aaa
push
jo
push
je
rcll
fsubs
xor
xchg
xchg
hlt
or
in
scas
adc
mov
cmp
icebp
pop
bound
sbb
sbb
sbb
push
dec
xor
inc
push
mov
cltd
fwait
adc
test
or
sar
or
insb
arpl
in
sbb
stc
mov
pop
xor
push
xor
inc
and
xchg
cmp
notb
xchg
jecxz
clc
sbb
pushf
cld
clc
sbb
pop
out
xor
sbb
mov
insl
cli
pushf
dec
cmpb
mov
pop
loopne
xchg
jne
fildl
mov
mov
arpl
in
jns
adc
adc
adc
mov
push
ss
xchg
mov
lahf
mov
jnp
jle
pop
jns
push
cmp
popf
pop
dec
jp
mov
lret
or
and
leave
jl
data16
cld
mov
jmp
mov
fs
mov
out
mov
cli
pop
addr16
fbstp
stos
pop
cmp
loop
arpl
adc
cmc
shrb
mov
xor
cmp
insb
jecxz
outsl
mov
hlt
xchg
mov
loop
add
stos
and
and
lcall
and
or
jbe
mov
pushf
sti
add
inc
jnp
iret
jo
mov
jnp
sub
sbb
inc
adc
stc
push
mov
mov
xor
fmull
lds
in
enter
out
push
mov
int
gs
subl
mov
out
sub
rolb
adc
pop
ljmp
in
push
push
out
stos
and
jmp
in
adc
push
imul
out
and
dec
pop
xchg
aaa
testb
xchg
push
ret
aas
pushf
push
mov
shll
out
cs
pop
xlat
loopne
xchg
or
mov
cmp
mov
sub
inc
cmpsl
fwait
out
sub
mov
or
aaa
pop
mov
mov
pop
add
inc
mov
repnz
pop
cmp
cmp
xor
lods
push
repz
pop
xor
xorb
push
mov
pop
mov
pop
cmp
mov
xchg
imul
lods
inc
lock
xor
cmp
mov
mov
cmpb
xchg
sbb
xchg
xchg
ret
sbb
pop
mov
loope
xor
pop
dec
addr16
pop
lods
push
jg
xor
add
les
push
test
out
jl
jb
sbb
mov
dec
push
lret
mov
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
push
dec
mov
jo
adc
inc
in
call
adcb
out
mov
lret
mov
call
int
jp
cmpsl
xchg
add
xor
cmpsl
lods
jne
js
cltd
cmpsl
sti
jbe
mov
and
cwtl
pop
enter
mov
cli
cmc
movsl
mov
sbb
test
gs
jb
xchg
cmp
push
or
loope
dec
aas
or
jae
pushf
push
xchg
fistpl
xchg
and
xchg
lds
lea
dec
xorb
mov
mov
rol
jp
js
sub
or
dec
xor
aam
pusha
out
fstl
inc
loop
out
das
pop
push
add
int3
sub
out
lds
xchg
inc
leave
out
xchg
and
gs
lock
pusha
lods
fbld
mov
fld
xchg
dec
outsl
adc
int
psubb
xor
insl
fwait
cmpl
push
aaa
add
jne
jg
jb
inc
in
fwait
xchg
rol
repnz
adc
movsl
pop
insb
mull
mov
ss
mov
sbb
cmp
aad
xor
xlat
jo
aaa
gs
adc
inc
sbbl
fsubs
scas
adc
sbb
cs
dec
and
cmp
mov
jnp
ja
mov
and
jg
lea
iret
xchg
fisubrl
divl
test
add
fistpll
adcl
popa
push
add
ret
adc
dec
lret
sbb
jbe
mov
cmp
es
repz
sbb
cmpsb
popf
mov
loop
fidivrl
stos
dec
and
pop
lods
pusha
cmpsb
or
into
aas
mov
test
aaa
add
lods
lods
mov
sbb
out
inc
mov
mov
cs
inc
leave
lods
js
nop
jle
sbb
or
inc
push
cmpsl
xchg
jns
mov
rol
add
loopne
pop
mov
xor
adc
insb
adc
push
iret
adc
and
sbb
xchg
push
xchg
jno
imul
mov
cmpl
add
ja
fwait
mov
inc
pop
test
pop
int
pushf
dec
shlb
ror
sahf
inc
dec
mov
aaa
cmp
xchg
int
addl
adc
sub
ficomps
and
add
data16
stc
adc
cmp
and
jb
ds
mov
lea
jp
inc
and
push
xor
cltd
jae
mov
cmc
mov
mov
mov
xchg
fwait
add
lcall
cmpsb
dec
mov
inc
mov
and
stos
or
adc
push
in
imul
mov
and
in
adc
add
jp
xchg
in
leave
enter
fcmovne
fs
rclb
xor
loop
cmpsb
jbe
inc
jnp
or
loope
mov
unpcklps
mov
lods
imul
cmp
xor
adc
xchg
test
rolb
xlat
cwtl
push
outsb
xchg
xchg
add
ret
lahf
mov
sub
push
mov
cmovs
fdivrl
repnz
les
jmpw
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
or
mov
jo
adc
inc
pop
loopne
cld
sub
cli
sub
fwait
sar
out
push
xor
test
sub
pop
xchg
inc
and
mov
out
lcall
mov
jmp
dec
mov
ljmp
fwait
test
inc
cmp
je
ss
push
add
sub
xchg
js
in
or
in
sbb
xor
xchg
push
pop
and
xchg
jb
mov
lds
ret
popf
out
in
jl
imul
test
push
movsb
push
inc
jle
pop
pop
gs
mov
and
les
push
lock
sti
imul
loop
adc
cltd
mov
inc
data16
cmpsb
cmp
stos
loop
in
xor
stos
mov
xchg
nop
sahf
call
mov
sub
lea
out
and
push
jb
jne
mov
push
or
fadds
dec
hlt
es
cmp
or
aaa
mov
sbb
into
adc
inc
push
jmp
cltd
loope
dec
cs
xchg
in
bound
or
pop
enter
push
int
mov
iret
fildl
and
call
pop
pop
lds
jmp
inc
xchg
dec
outsb
and
cmp
addr16
push
add
into
adc
cvtps2pd
daa
gs
mov
push
mov
adc
stos
or
rorb
std
movsb
movsl
pop
nop
out
orb
inc
icebp
push
lcall
call
mov
sub
lock
movsl
insb
fadds
inc
jb
mov
mov
cmp
sub
inc
xchg
dec
ljmp
cmp
lret
jmp
xor
xor
test
int
cltd
adc
cmp
mov
inc
dec
outsb
jmp
aas
stos
imul
dec
js
into
lods
movsb
xchg
pop
ret
cmp
adc
sarb
test
mov
dec
mov
and
mov
or
sbb
cmpsb
js
scas
inc
mov
or
jns
cwtl
xor
aad
mov
adc
jg
pop
mov
mov
int
stos
inc
mov
push
push
scas
xor
jl
push
add
dec
fisttps
iret
push
sti
pop
pop
shl
sbb
cmp
mov
loopne
and
int3
imul
pop
mov
pusha
dec
lds
fmuls
jno
push
add
cld
mov
les
mov
imul
ja
lds
stos
ja
arpl
cmp
clc
and
mov
add
in
mov
iret
sub
xchg
lods
inc
movlps
int
xor
xchg
aaa
jp
push
cmp
inc
seta
addr16
inc
cmp
adc
sbb
cmpsl
test
lret
pushf
int
bound
jmp
xor
jmp
int
call
and
insl
add
xchg
push
arpl
jne
and
cli
mov
es
push
enter
subl
xchg
je
jge,pn
imul
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
jbe
mov
jo
adc
pop
arpl
ljmp
xchg
rorl
cwtl
lea
adc
lods
cmpsl
test
insl
mov
daa
pop
xchg
xchg
fidivl
inc
pop
andl
test
les
mov
push
lock
dec
jbe
adc
lret
sbb
out
push
sbb
push
xchg
mov
and
xchg
xchg
shll
lcall
out
daa
rcrl
outsl
fdiv
pusha
ds
cmpsl
ret
cli
xor
std
adc
xor
jb
sbb
xchg
lcall
daa
lahf
je
adc
dec
adc
aas
ret
sbb
dec
and
sbb
xor
lock
mov
in
sahf
sbb
call
xchg
icebp
pop
scas
lret
sbb
stos
das
fs
add
ret
je
inc
inc
push
sub
cmp
imul
fdivs
inc
mov
lea
mov
xlat
push
sbbb
sbb
mov
mov
mov
dec
fstl
and
push
cmp
data16
or
inc
scas
mov
push
inc
mov
sub
pop
xchg
js
ljmp
aam
mov
rolb
cmp
aam
add
cld
mov
cs
int3
mov
pushf
rcrb
xchg
cmp
add
loope
imul
mov
adc
stos
or
sbb
std
and
cmpsl
adc
adc
mov
rol
clc
clc
repz
scas
adc
pop
xor
stos
sbbl
fildll
decl
stc
lcall
lods
mov
ljmp
jnp
mov
es
push
outsb
ja
jp
add
mov
ficomps
mov
add
dec
pop
cmp
or
ds
fs
leave
jmp
outsl
jo
int
test
insl
stos
pusha
push
inc
mov
pop
insl
push
iret
lods
lahf
idiv
je
jbe
repnz
pop
and
dec
icebp
pop
xor
std
add
xchg
cmp
dec
cmpsb
dec
push
mov
mov
scas
jb
sbb
mov
fwait
adc
adc
push
addr16
addl
mov
incb
dec
je
enter
cmpsl
idivb
ficompl
pop
sub
dec
jge
pop
dec
pop
jnp
jb
dec
out
add
idivb
aaa
mov
push
lcall
push
add
aas
cmp
xchg
cwtl
mov
lret
aad
fisttpl
into
push
push
data16
pop
int
xor
sbb
sbb
enter
xor
adc
add
xor
lea
sbb
sbb
or
rorl
loope
push
jg
pop
mov
movsl
ds
add
dec
test
ret
es
rcll
mov
mov
icebp
ljmp
cwtl
mov
push
ds
into
xor
or
stos
sub
dec
cltd
shrl
je
lods
cmpsb
mov
scas
in
aas
fdivrp
xchg
xorl
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
aas
incl
stos
sahf
aad
adc
adc
test
sbb
int
rol
cld
inc
xchg
mov
call
inc
pushf
jge
out
movsl
dec
dec
pusha
test
prefetch
push
outsl
mov
mov
xchg
xor
pop
in
js
into
cmp
adc
pop
cmp
icebp
xchg
sub
add
inc
bswap
std
loop
in
testl
inc
adc
xchg
mov
fcoms
cmp
add
mov
adc
cmp
or
add
popf
pop
lret
mov
bound
or
jnp
outsl
push
sub
lret
mov
mov
adc
and
fs
outsl
cld
mov
sbb
ljmp
push
mov
inc
and
arpl
mov
mov
repz
jns
cld
mov
push
xchg
push
out
or
push
cwtl
mov
pop
push
mov
push
lret
sahf
xchg
push
jo
shl
or
and
aaa
push
xchg
daa
out
clc
or
pop
push
outsb
iret
idiv
scas
mov
int3
pop
mov
jb
pop
std
or
popl
into
xor
aam
loopne
xchg
adc
lahf
jbe
and
mov
mov
mov
sbb
lea
das
mov
xchg
js
pop
fsts
je
pop
stc
ja
shr
jecxz
push
cmp
in
jno
fisttpl
mov
inc
int3
xchg
mov
je
cli
ljmp
or
dec
and
aaa
fs
xor
cmp
xchg
insb
mov
push
in
lcall
xor
aas
adc
outsl
test
push
jns
subb
imul
loope
and
stos
push
shlb
aam
and
mov
loop
inc
add
out
repnz
xorl
dec
sbb
xor
push
ja
pop
add
pop
pop
push
push
xchg
mov
je
shll
cmp
adc
xor
sarl
sub
test
jmp
mov
xchg
fwait
jbe
int3
pusha
and
int3
popf
aas
sbb
inc
filds
lock
jae
mov
mov
pop
mov
mov
popf
inc
ljmp
fisubrs
push
cltd
notl
mov
inc
pop
incl
dec
jge
lods
add
mov
cmpb
jge
cmc
hlt
xchg
pop
pop
cmpb
fs
fsts
jo
xor
mov
outsl
mov
inc
adc
dec
imul
cmp
push
rorl
dec
mov
ret
imul
mov
mov
fsubs
push
mov
sbb
into
push
push
xor
push
mov
negl
pop
dec
mov
xchg
xchg
fmull
pop
and
sbb
add
test
in
adc
test
je
scas
lcall
xlat
xchg
and
mov
mov
mov
cs
xchg
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
scas
dec
bound
lret
adc
jo
adc
push
in
and
jne
push
les
cmpsl
inc
sbb
pop
cmp
add
sub
add
or
adc
sub
adc
loopne
xlat
std
inc
fwait
hlt
push
xchg
pop
mov
adc
sahf
out
scas
mov
in
xchg
mov
lods
clc
add
adc
in
and
mov
or
nop
lods
jbe
je
mov
into
fisubl
mov
insl
imul
xchg
dec
rorl
fisttpll
js,pn
and
dec
xor
cmp
aas
ret
pop
das
jmp
pop
sbb
mov
dec
sub
imul
pop
inc
lahf
or
add
adc
ret
aaa
rcll
cmp
pop
jg
push
mov
mov
jg
push
daa
icebp
test
jmp
je
adc
pop
iret
push
fwait
pop
sbb
mov
fstpl
scas
jle
mov
ljmp
das
out
xchg
iret
mov
loopne
mov
mov
iret
pop
ds
jp
ret
fisubl
je
jge
inc
out
pop
xlat
sub
mov
cld
dec
call
fdivrl
push
xor
popf
imul
ds
xor
and
jae
scas
imul
rol
jne
daa
stos
in
out
cwtl
jb
adc
pop
ja
xchg
adcb
scas
mov
sbb
push
pop
inc
divl
dec
in
mov
adc
pop
dec
les
sbb
aam
out
cmp
clc
stos
nop
push
ljmp
dec
adc
xor
xchg
sahf
push
or
xor
push
dec
subl
xchg
in
mov
push
inc
sti
or
icebp
bound
mov
jg
enter
cwtl
in
sub
xchg
daa
push
push
jae
addb
in
push
loopne
test
sub
in
sarl
add
mov
testl
popf
xchg
int
or
cmp
test
push
mov
add
sbb
mov
clc
insb
jnp
mov
sub
or
stc
jae
and
push
mov
cli
ja
sbb
jb,pt
mov
mov
adc
out
inc
int3
pop
iret
push
push
push
popa
aaa
pop
sub
push
aaa
sbb
negb
movsl
les
inc
pusha
popa
cmp
mov
or
cmpsl
dec
pusha
jmp
inc
xchg
pop
jo
stc
insl
mov
cmp
mov
xor
cmp
out
push
mov
shrl
movw
mov
sbbb
test
sti
mov
dec
sahf
cmpsl
sbb
adc
jge
scas
mul
adc
and
fstl
push
mov
ss
push
test
incb
addl
push
push
nop
sub
ss
mov
aam
daa
fst
jae
sub
loope
adc
out
pop
mov
sub
lods
aaa
call
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
add
mov
lock
loope
sub
xlat
ljmp
lret
lret
jb
loopne
mov
dec
sub
pop
mov
shlb
xorb
pop
mov
sub
stc
jecxz
push
push
pop
jcxz
dec
xchg
add
clc
fstpl
int
push
lods
jl
inc
cmp
dec
pop
or
cld
ljmp
adc
popf
out
pushw
into
adc
filds
cmc
jg
int3
scas
je
aas
adc
sub
and
movsb
inc
inc
jge
sbb
or
sahf
int
ret
cmpb
xor
mov
dec
push
addr16
dec
jmp
mov
aaa
xchg
cmp
push
dec
mov
sbb
mov
adcl
sub
jne
jo
movsb
inc
xchg
mov
pop
cli
ret
dec
jbe
xor
lods
andl
inc
cmp
mov
das
pop
shrl
cwtl
sbb
sbb
shl
movsl
mov
fsts
ss
xchg
xor
and
mov
mov
jns
jo
iret
lods
and
shll
test
das
adc
into
out
and
lret
dec
ja
add
xor
out
adc
adc
sub
inc
mov
or
xchg
and
insb
xchg
mov
into
imul
dec
cwtl
push
adc
and
enter
fisubs
or
leave
rorb
mov
testl
fsub
mov
pop
xchg
jno,pn
es
into
fisubs
sub
cmp
into
in
iret
cmp
cmpsb
pop
push
sub
andl
pop
mov
std
loope
es
mov
cmp
into
icebp
out
mov
adc
sbb
xor
in
mov
inc
jg
sbb
jg
icebp
push
dec
push
mov
fwait
popf
ss
add
js
xlat
outsb
scas
xchg
push
clc
sub
adc
aas
xor
inc
mov
jae
lret
mov
int3
les
mov
xchg
test
xor
bound
gs
stos
mov
add
popa
out
outsb
mov
inc
mov
gs
cmc
pop
sbb
inc
ss
psadbw
shl
jecxz
arpl
fsubrs
in
mov
mov
xchg
cs
scas
scas
dec
out
jae
mov
frstor
shll
jle
or
fstl
inc
adc
cmpb
push
lods
and
push
rclb
popf
xchg
ja
adc
cmp
movsl
push
dec
add
mov
jge
pop
mov
sub
inc
ds
cmp
xor
popf
dec
or
and
push
push
cmc
xchg
in
add
jle
sbb
or
jecxz
out
imul
int
sbb
sub
xor
std
fistpl
repz
sbb
mov
add
xor
decb
jo
cltd
inc
jb
out
mov
sti
push
repnz
rorl
sti
outsb
ljmp
int3
mov
call
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
popa
fwait
jle,pn
rcll
jo
adc
xor
aam
aam
imul
xorl
jecxz
fstl
xor
outsb
aam
pop
imul
sub
loope
jp
iret
dec
lds
scas
mov
xchg
adcb
or
mov
jae
addr16
xor
add
mov
xor
xorb
mov
ds
fmull
push
adc
jp
into
mov
in
test
lahf
sbb
mov
xor
rol
adc
orl
bound
add
test
out
xchg
loope
ja
cwtl
mov
jbe
mov
loope
outsl
or
stos
pop
push
fwait
out
rol
dec
loopne
gs
xchg
gs
jp
dec
inc
mov
mov
inc
jns
stos
mov
push
jo
lods
scas
rcll
push
xor
mulb
cmp
mov
adc
sahf
jg
or
nop
or
mov
dec
addb
stos
pop
call
add
pop
fdiv
jg
test
sub
and
pop
push
shlb
pop
loopne
push
and
and
inc
sbb
xchg
out
jmp
popa
ljmp
stos
mov
out
fdiv
cmp
xchg
rep
sbb
jnp
es
lock
stos
and
jmp
sub
pop
inc
repz
mov
inc
push
mov
xchg
popa
ds
cmp
aad
xlat
bound
and
movsb
mov
mov
dec
ret
inc
orb
das
repnz
jl,pt
mov
int3
cmpsb
push
loope
add
jge
dec
stc
jecxz
push
lds
xlat
cmp
fcomps
loope
sub
in
sub
or
or
mov
or
cmp
jmp
orb
ret
inc
js
xor
and
sub
cmp
gs
lds
dec
imul
testb
out
xor
push
or
adc
mov
jge
mov
xchg
ljmp
or
ja
loopne
subb
arpl
push
or
aaa
xor
mov
aad
nop
dec
jo
pop
jp
cmp
cmc
mov
dec
cmc
dec
add
lods
sub
dec
and
mov
hlt
das
push
jge
or
push
or
iret
dec
rclb
sbb
jbe
sbb
gs
jns
xchg
or
dec
mov
mov
push
push
inc
movsb
in
or
push
outsl
cli
adc
mov
jge
mov
scas
data16
pop
iret
add
sub
rcl
adc
loopne
pop
inc
inc
clc
imul
cwtl
cmpsb
lds
sub
fnsetpm(287
mov
push
xor
or
jbe
sub
dec
cli
jmp
arpl
add
pop
push
adc
orl
pop
lock
nop
arpl
imul
js
mov
mov
or
push
sti
test
sbb
in
mov
jmp
mov
test
push
xor
sub
add
or
shr
sbb
jnp
fnstcw
inc
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
inc
xchg
inc
stos
push
mov
adc
adc
cwtl
imulb
pushf
sbb
jecxz
popf
xor
mov
jmp
mov
inc
or
add
jmp
sti
loopne
jae
pop
cmc
jg
loope
push
dec
lods
dec
out
mov
icebp
pop
dec
pop
adc
outsb
push
mov
ljmp
push
in
lea
imul
shl
sub
cltd
lods
jmp
lea
cltd
test
mov
inc
in
es
adc
jns
js
add
or
aas
adc
lret
cld
fcompl
fcomps
jecxz
js
or
fabs
sub
jns
fs
pop
push
ficoms
mov
lods
inc
pop
push
or
xchg
sbb
imul
imul
movb
xchg
jg
test
add
enter
cs
cmpsl
xchg
lcall
xlat
nop
mov
dec
leave
add
inc
fwait
inc
call
or
jnp
mov
mov
push
ficompl
inc
cmpsb
call
lcall
pop
and
inc
stc
lcall
push
shlb
inc
xor
pop
inc
imull
in
test
sub
leave
in
dec
dec
sbb
outsb
repz
in
pop
or
shll
xor
es
mov
add
xor
mov
pop
pop
mov
mov
test
notl
movsl
mov
fcomip
fwait
repnz
sahf
jmp
inc
mov
sub
pushf
pop
ss
dec
ljmp
fwait
sub
call
sub
sbb
xchg
jecxz
mov
mov
mov
cmp
sarl
add
sub
mov
add
or
cmp
or
pop
frstor
bndldx
scas
js
pop
loope
je
sub
cs
out
cmp
mov
sbb
cmc
jo
loopne
out
xor
aad
out
mov
sub
pusha
xorl
jecxz
sbb
or
sbb
xor
xlat
push
push
sub
jbe
outsb
dec
test
sti
cli
test
push
xor
cmc
mov
shlb
imulb
add
xchg
inc
add
rclb
cmpsb
mov
sub
xchg
insb
jmp
sbb
adc
insb
add
aaa
xchg
cmp
movsl
call
sti
ds
inc
cmp
mov
out
xchg
je
aaa
adcb
jae
xchg
das
inc
push
cmp
in
dec
dec
mov
dec
xchg
stos
xchg
and
pop
sti
enter
adcl
out
shlb
call
fisubrs
mov
orb
mov
and
xlat
xchg
test
shll
dec
jge
jo
movsl
mov
scas
sub
std
xor
xor
push
outsb
mov
add
insl
fcmove
push
stc
cwtl
mov
divb
mov
dec
loop
ss
and
mov
mov
shr
inc
cmpsl
lea
mov
or
rorl
cld
and
xchg
arpl
adc
icebp
dec
inc
jp
inc
divl
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
mov
xor
xchg
or
sbb
fwait
xchg
pop
mov
cmp
ljmp
xor
xor
insl
cli
adc
push
push
mov
jmp
mov
scas
repz
sarb
jp
inc
sub
cmp
pushf
hlt
sbb
mov
add
lock
mov
outsl
addb
mov
fisttpll
dec
enter
sub
push
cmp
pop
pop
jae
movsb
pop
dec
adc
mov
call
fistpl
daa
pop
xlat
loope
cmpsb
rcrl
mov
in
pop
out
mov
xor
cmp
inc
insl
mov
add
lahf
pop
xor
jnp
pop
xchg
push
ja
add
int
sahf
or
dec
adc
mov
sub
sahf
out
imul
pop
ds
mov
adc
mov
xor
pop
imul
mov
pop
pusha
cmc
jnp
mov
lds
cmp
inc
incb
shl
outsl
or
xchg
adc
mov
jg
testb
xor
aam
dec
cmp
bound
idivl
decb
mov
xchg
sub
mov
sbb
insl
xor
jo
imul
bsf
mov
mov
and
lcall
icebp
in
cli
jo
cmp
aaa
push
mov
push
mov
mov
jo
mov
or
xlat
imul
pushf
dec
test
or
les
xchg
and
in
outsb
jae
xor
into
andl
and
push
popa
sar
inc
popa
xchg
lcall
test
push
sbb
shlb
xchg
push
addr16
popf
lock
mov
adc
push
lahf
test
mov
cmp
data16
push
je
xor
imul
rclb
pusha
jns
insb
ficomps
addl
les
add
in
rorl
push
add
push
jmp
push
pop
push
js
out
lods
imull
adc
decl
andb
arpl
bound
and
mov
or
mov
inc
imul
das
mov
mov
out
jge
std
xchg
sub
scas
push
push
in
mov
xchg
sub
mov
les
or
or
scas
or
xchg
addb
lret
ja
mov
jmp
inc
cld
jae
test
inc
cwtl
imul
push
inc
fwait
push
out
and
addb
scas
jl
es
push
fiaddl
pop
mov
je
rcl
sbb
jl
sti
push
out
sbb
pop
sub
ss
xor
mov
lret
iret
cs
loopne
aaa
lock
scas
jmp
icebp
mov
dec
mov
add
adc
leave
xchg
sbb
or
leave
pop
jbe
lret
andb
pop
mov
and
mov
xor
call
or
mov
push
stos
pop
fldenv
out
fcoml
into
xlat
xchg
pop
and
adc
sub
jb
sbb
fs
add
mov
jns
cmp
sbb
es
jbe,pt
inc
mov
cmp
aas
cmp
xor
jmp
xlat
jecxz
fdivl
pop
inc
pop
xchg
xchg
jle
outsl
es
xchg
add
mov
inc
in
test
sbb
add
jmp
imul
pop
cs
pop
rolb
push
mov
outsl
fcompl
loope
mov
fistpl
fucomp
lahf
xor
jns
add
sub
push
or
pop
cltd
add
pop
pop
ja
xchg
dec
notb
and
cli
stc
aam
cmp
sysenter
xchg
jecxz
mov
scas
mov
inc
inc
mov
icebp
cmpsb
mov
fsubs
or
das
sahf
mov
jo
popf
cs
lcall
repnz
lds
dec
push
not
scas
inc
test
dec
pop
bound
out
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
xor
mov
adc
clc
push
loopne
jmp
fsts
stos
add
or
outsb
pmaxsw
sti
adc
jl
push
or
and
add
adc
iret
push
and
mov
repnz
xchg
inc
das
xchg
jge
adc
cs
cld
test
scas
push
xor
rep
jno
scas
or
sbb
aad
lret
push
and
shll
dec
xlat
imul
lahf
and
sub
sbb
clc
jmp
or
jb
jne
mov
pop
dec
mov
loope
cmp
sub
cmp
cwtl
and
mov
insb
js
cmp
pushf
cmpsb
add
inc
scas
cld
or
imul
into
or
xchg
or
in
fadd
pop
push
movsb
xor
addb
clc
out
jne
sbb
in
mov
or
ja
out
test
xchg
add
cwtl
push
jns
mov
pop
sub
jle
bound
mov
pusha
je
out
ja
loope
fst
mov
nop
sbb
jbe
negb
push
push
cld
mov
mov
and
mov
pop
ret
push
jmp
sbb
cmp
cmpsb
push
jbe
js
jg
inc
frstor
push
mov
inc
add
mov
test
push
push
or
xor
inc
push
or
mov
mov
sti
sti
mov
dec
ja
je
jo
dec
mov
sub
dec
incl
mov
dec
bound
in
jmp
mov
cmp
aaa
pushf
dec
popf
dec
fstpt
jnp
loopne
xor
sar
and
mov
or
movsl
scas
jmp
push
add
out
and
cmp
mov
cmpsl
push
aaa
out
mov
out
mov
daa
daa
test
dec
out
xor
fdivs
add
sub
dec
add
or
add
cmp
stos
sbb
aas
insl
lods
push
cwtl
push
stos
mov
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
xlat
call
js
mov
adc
dec
stos
sbb
cmp
jmp
lcall
outsl
es
mov
mov
push
bound
inc
push
mov
popf
imul
jle
stc
aam
aas
xchg
xchg
add
cmp
cmpl
adc
inc
xor
sbb
testl
adc
fwait
adc
jmp
fidivrl
aaa
cli
and
enter
mov
or
mov
pushf
xchg
jge
orb
or
pop
pop
ror
mov
dec
xchg
lahf
or
add
ja
sbb
inc
ficomps
stos
jecxz
rorb
and
push
leave
sahf
sbb
lahf
cmp
push
mov
pop
fsubs
cmc
in
and
sub
jge
clc
sbb
lock
test
movsb
or
pop
insb
stc
pop
push
xchg
cmpsl
les
jp
jbe
adc
faddl
or
divl
or
adc
mov
test
xor
cld
mov
test
test
xor
adc
inc
dec
pop
aam
mov
imul
in
arpl
movsl
shll
dec
movsb
shll
push
cmp
stos
stos
jae
sbb
xchg
movsb
sub
and
xchg
add
scas
and
and
cli
mov
add
jae
outsb
cmp
pop
and
aam
jae
mov
xor
in
sub
out
pop
push
mov
pop
imul
add
and
popa
nop
pop
aad
adc
cli
popf
jb
outsl
pusha
mov
test
xchg
mov
jb
mov
xchg
stos
imul
jge
sti
lret
mov
and
ret
push
aaa
cli
push
jecxz
gs
fildll
fstl
loop
int3
xchg
daa
imul
add
std
das
lods
cmp
in
test
mov
push
pop
or
ss
sub
test
and
sbbl
xor
sbb
or
outsb
mov
mov
testb
lahf
sbbl
push
rorl
adc
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
mov
stos
insb
mov
adc
stos
movlps
jb
xor
xor
movsb
fwait
push
push
dec
mov
sbb
clc
jmp
or
push
push
je
cld
mov
cmp
fstl
sbb
xchg
pop
jmp
push
scas
imul
mov
lods
sub
dec
mov
sarl
push
hlt
inc
add
lods
pop
mov
test
xor
sub
leave
inc
mov
cmp
das
jne
pop
loope
cmp
xchg
xchg
popf
scas
not
addr16
fsub
add
push
mov
test
xor
push
mov
and
movsl
add
mov
cld
mov
xchg
adc
ds
fwait
shrb
and
icebp
das
js
ret
and
movsl
movsl
cmp
in
loope
xchg
iret
sbb
nop
sbb
or
inc
mov
lods
fbld
mov
mov
push
jbe
cmc
pop
pop
jg
shl
ljmp
pop
or
es
out
xchg
cmp
and
sti
lds
fdivrp
inc
or
mov
mov
jno
inc
push
mov
ret
push
out
sub
jns
cld
outsb
fidivl
gs
ficomps
mov
addr16
lret
rcrb
cli
mov
sbb
loopne
and
and
call
mov
inc
jb
jp
repnz
mov
es
cmp
or
xchg
fidivs
bound
lret
sbb
insb
mov
jne
adc
mov
inc
jecxz
sub
roll
ds
cmp
sahf
and
xor
pop
or
add
lret
cmovns
lret
imul
cmp
pop
rcl
pop
pop
loope
fldt
push
insl
push
lcall
mov
das
movsb
jecxz
inc
sbb
in
jecxz
cltd
or
lea
into
cmp
in
xorl
sbb
mov
cmp
loop
jbe
or
cltd
mov
out
mov
repnz
adc
mov
lea
xchg
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
sbb
out
jbe
mov
sbb
fadd
jo
push
mov
xchg
loop
and
sbb
mov
imul
lret
movsl
push
daa
dec
dec
stos
mov
xchg
inc
je
insb
mov
repnz
pop
imul
push
int
jae
jnp
cmp
es
int
mov
stos
push
lock
push
adcb
mov
fwait
shlb
push
scas
mov
adc
lcall
mov
mov
leave
push
movsl
and
mov
adc
or
nop
mov
ret
fs
pop
push
ds
notb
push
cmp
cmpsb
ja
cwtl
or
pushl
out
push
jle
insl
ficomps
add
sub
in
dec
mov
mov
adc
jno
cmp
cmp
and
mov
xchg
test
dec
lods
ret
xor
xor
popf
jge
pusha
cmp
outsl
and
xlat
xchg
shrb
in
fwait
pop
mov
sub
mov
sbb
dec
sub
and
mov
pop
pop
fstpl
jo
sub
mov
int3
aad
lcall
mov
push
inc
or
dec
mov
lods
push
xor
and
xchg
xchg
adc
into
pop
push
push
hlt
adc
shll
adcb
mov
pop
orb
sahf
pop
and
adc
gs
imul
pop
dec
outsl
and
xchg
icebp
cmp
loopne
jno
stc
repz
push
gs
pop
adc
je
lcall
push
inc
loope
rcrb
shl
or
cs
sarl
xchg
mov
xor
jg
pop
ja
mov
in
inc
mov
pop
jmp
fmull
shrl
mov
add
push
sarl
pusha
xor
orb
add
js
lcall
sub
fcomps
or
popf
adc
insb
jno
repnz
mov
jge
outsb
jb
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
loope
sbb
dec
imul
lret
and
ffreep
mov
lahf
sbb
addb
jbe
mov
cs
fsub
int
jno
add
loop
xchg
mov
jns
cmc
inc
or
movsl
push
je
xlat
sbb
out
xor
cli
cmp
rorl
adc
pushf
jne
push
lret
xor
mov
cmp
add
sarb
cmp
cmpsb
and
mov
pop
cli
push
add
sub
incl
mov
ja
cmp
inc
xchg
mov
pop
idiv
sub
enter
rcll
int
pop
test
push
push
sbb
stc
into
stos
mulb
in
inc
add
ss
clc
jb
repnz
shl
aaa
lods
lea
pusha
jne
adc
pop
movsb
mov
sbb
inc
scas
xor
push
jg
dec
nopl
jns
mov
sub
aaa
jae
xchg
andb
enter
xchg
daa
and
roll
mov
mov
jns
xor
test
dec
enter
repz
dec
inc
cwtl
push
outsl
dec
or
dec
sub
aad
add
lret
xorb
inc
xchg
shlb
push
pop
cltd
dec
and
sub
adc
lods
push
inc
test
dec
lahf
cmp
shlb
stc
jecxz
xor
or
mov
bound
mull
push
jge
cmc
dec
in
mov
lret
test
sub
lret
popf
dec
scas
loope
orb
jae
cwtl
mov
in
mov
mov
and
insb
arpl
out
add
mov
dec
divb
sahf
dec
in
sub
cli
cld
xchg
ficoml
lods
push
inc
add
mov
in
sarl
xor
test
iret
sbb
mov
jge
ret
and
mov
xchg
scas
lahf
dec
xchg
insb
push
call
decl
sbb
mov
fists
add
nop
int
push
add
xlat
and
push
dec
push
mov
push
aad
adc
pop
add
jns
sub
out
mov
loope
jmp
mov
fwait
pop
popf
int
loop
add
ss
inc
ret
mov
mov
in
es
lahf
test
cmp
pop
push
cmp
sahf
cli
or
and
clc
mov
inc
and
ds
ret
push
push
mov
sub
xor
mov
maxps
mov
pushf
sahf
push
popa
fnstenv
outsb
pop
pop
dec
xor
mov
inc
inc
jbe
aad
jl
fucomi
and
mov
pop
pop
int
jecxz
push
inc
fsubs
loop
mov
mov
cmpsl
cmp
jb
pop
lock
stos
jns
rorb
or
dec
bound
mov
adc
pusha
cli
pushf
push
pop
ss
push
mov
xchg
orb
jp
cmp
xchg
jp
jmp
xor
mov
out
mov
push
addb
xchg
xchg
cmp
mov
cmovs
mull
mov
insl
xchg
cs
jo
mov
scas
mov
and
mov
mov
aas
cltd
inc
outsl
into
lcall
mov
push
mov
jo
jg
jmp
out
movsl
sahf
xchg
sub
mov
shl
cld
enter
fldenv
je
adc
jecxz
fcompl
mov
pop
xchg
ficompl
xlat
insl
or
sti
loope
mov
mov
push
nop
enter
xchg
push
outsb
shll
jne
sub
add
adc
ret
ret
loop
inc
ds
jno,pt
xchg
adc
jmp
and
in
sbb
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
dec
pop
lods
loop
adc
pop
adc
adc
xor
xor
cmp
divl
mov
sbb
iret
outsl
int
add
mov
cmc
insl
shlb
xchg
cmp
mov
and
sub
pop
inc
movsl
mov
fildll
jae
cld
jae
xchg
jle
sub
jbe
inc
in
and
xchg
inc
add
pop
push
movsb
loopne
movsb
pop
cmp
lea
or
ret
in
jg
outsl
loope
sub
cltd
lcall
mov
xor
repnz
jge
cmp
pop
push
cmp
jl
stos
inc
pop
or
cltd
outsb
gs
jmp
mov
dec
stc
dec
lea
out
lret
mov
shll
pop
adc
ret
in
inc
idiv
dec
cmp
jae
dec
adcb
scas
adc
arpl
fisubs
inc
aam
mov
js
pushl
jb
ret
dec
mov
nop
jbe
shll
inc
jo
mov
aas
iret
int3
aam
popa
or
cmpsb
imul
xchg
data16
rcl
lahf
adcb
xor
or
pop
xor
or
xchg
fs
addr16
rolb
cs
push
cld
mov
les
out
mov
data16
xor
dec
cwtl
xchg
inc
ljmp
cmpsb
jno
and
stos
jle
add
sbb
push
nop
rolb
out
mov
mov
adc
jl
cld
lds
and
insl
stc
mov
repz
movsb
adc
pop
cmpsb
adc
sbb
imul
bound
shl
out
popf
iret
aad
flds
sbb
pop
decl
xchg
mov
mov
push
jmp
dec
fstps
addl
mov
mov
adc
sbbl
xor
xlat
jge
lds
roll
fnstsw
or
sub
aam
fidivrs
or
and
xlat
sub
and
arpl
or
dec
xlat
push
push
pop
cmp
fiaddl
pop
movsl
push
mov
bound
cmp
xor
push
in
add
inc
dec
mov
xchg
cmp
lock
and
outsl
dec
cmpsb
dec
xor
leave
negl
lret
adc
adc
xchg
cltd
mov
sbb
cmpsb
mov
dec
cmc
int
test
jmp
pop
and
mulb
dec
jmp
pop
insb
int3
mov
sbb
aas
arpl
xchg
cmp
mov
sahf
addl
inc
pop
mov
cmp
pop
loopne
or
out
add
mov
cmp
int3
mov
das
mov
sub
clc
sbb
icebp
jnp
shl
ror
in
push
push
repz
or
xchg
pop
int3
cmpsl
xor
and
nop
leave
cwtl
shrl
imul
xchg
call
addb
popf
xchg
bound
inc
loope
add
pop
cs
stos
adc
adc
fcomi
outsb
lret
xchg
add
jb
xchg
inc
mov
pop
inc
sti
and
jnp
stc
mov
loope
mov
pop
enter
cmpb
stc
inc
mov
push
popa
in
mov
xor
aaa
mov
dec
mov
mov
pop
add
pop
data16
push
add
xchg
imul
sbb
adcl
filds
dec
mov
jb
push
mov
jge
cs
mov
lods
push
inc
int3
adc
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
test
mov
and
adc
mov
jbe
movsl
ljmp
xor
push
push
xor
shrb
dec
inc
inc
das
cmp
out
cltd
out
sti
les
popa
ja
rcll
les
jb
ds
add
jl
add
aad
andl
repz
xor
es
gs
call
lods
inc
test
xor
sbb
into
mov
dec
dec
inc
pop
xchg
mov
imull
das
fmuls
pop
dec
mov
lods
push
pop
repnz
out
jno
sub
xchg
dec
add
addr16
ret
jmp
repnz
xchg
sub
jl
jg
mov
inc
outsb
inc
ja
das
rorb
lea
sahf
mov
pop
sub
mov
out
repz
jecxz
shlb
sbb
mov
stos
mov
pop
lret
dec
sahf
dec
xor
mov
ficoms
lcall
fdivrs
jle
lret
push
pop
jl
xor
enter
clc
xchg
adc
scas
fstl
xor
mov
push
sahf
sarw
in
push
xchg
ljmp
or
inc
push
cmp
push
xchg
pop
xor
outsl
rcrl
data16
mov
push
jmp
iret
dec
scas
cmp
jb
pop
cmp
add
les
fistpl
xor
jns
scas
mov
fucom
into
insb
push
sub
and
mov
mov
leave
xchg
popf
lods
sbb
imul
cmp
add
movsl
push
xchg
cmp
rclb
pop
jle
repnz
mov
repz
daa
xchg
adc
lds
inc
fwait
lds
inc
fs
xchg
pop
adc
pushf
shll
xor
shlb
shr
xchg
icebp
mov
jg
sbb
shrl
pop
xchg
rorb
lods
jl
iret
or
add
dec
mov
mov
add
dec
inc
test
test
popa
das
lahf
fcmove
dec
scas
adc
subl
es
aas
movsl
xlat
xchg
and
cmp
adc
lods
js
jae
xor
sbb
cmp
jns
cmp
mov
scas
xor
cmpsl
pop
cmp
movsl
dec
int3
ja
gs
hlt
mov
lcall
dec
jb
pop
jns
and
mov
test
jle
or
test
and
mov
in
sti
inc
in
cmpsl
xor
mov
in
or
stc
out
stos
movsl
push
mov
decb
cmp
sbb
test
enter
dec
adc
push
adc
jbe
adc
idivl
cwtl
cmpsl
nop
mov
outsb
mov
jl
sub
jns
push
mov
xchg
fwait
jg
sqrtps
repnz
xchg
enter
or
in
mov
sub
enter
shll
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
pop
adc
movsl
ljmpw
mov
mov
je
sub
cltd
es
push
popa
mov
scas
clc
and
das
mov
jnp
sbb
in
test
push
xor
jmp
jmp
dec
aad
int3
mov
out
insb
je
inc
add
test
aad
mov
aad
and
mov
sub
pop
push
dec
xor
jne
faddl
nop
in
sbb
pop
lds
sub
stc
test
xorl
sbb
mov
mov
jo
cmp
mov
cmp
or
cli
inc
pop
lods
movsl
fidivs
push
xchg
aaa
cs
and
ja
scas
inc
push
stos
mov
or
leave
fs
jge
mov
jbe
jle
lock
push
xchg
pop
jne
popf
inc
repnz
cmp
sub
adc
cmpsb
add
filds
mov
jl
in
xchg
mov
mov
data16
int
adc
iret
cmpsb
cmovge
mov
mov
mov
movsl
data16
loope
testl
les
or
add
sub
insb
cld
mov
cmp
lret
jnp
fiaddl
push
or
adc
jo
dec
lods
in
xchg
dec
cwtl
xchg
dec
imul
lcall
int3
jecxz
sub
aas
or
inc
jle
pop
pop
mov
call
test
fbld
out
ss
enter
ss
cmp
enter
and
or
iret
cld
jnp
cwtl
js
fwait
cmp
pop
outsl
pusha
aad
sub
inc
inc
xorl
mov
mov
adc
aas
leave
in
das
pop
or
dec
test
mov
insl
xchg
stc
dec
mov
xchg
shrb
mov
sub
inc
and
pop
ds
fimuls
fistl
in
loope
xlat
jle
sub
pop
push
call
lret
aad
and
in
cmp
push
inc
xchg
xchg
push
dec
movsb
xchg
fwait
mov
push
pop
dec
and
dec
mov
mov
jnp
iret
lods
adc
out
lahf
mov
jg
inc
gs
cmp
sub
dec
bound
hlt
ss
sub
push
pop
xchg
loop
push
cmpsb
and
push
fisubrl
sbbb
iret
sub
imul
lds
cmc
data16
aad
sbb
sub
xchg
pop
rcr
mov
movaps
mov
mov
mov
loop
lret
lods
jnp
cs
jo
shr
jmp
cmp
lds
mov
cmp
xlat
clc
xor
pop
bound
out
sbb
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
pop
lods
add
adc
movlps
push
push
jge
or
data16
stos
enter
cmp
sti
test
pop
xchg
xor
incb
fs
das
loop
xorb
dec
js
adc
repz
dec
ds
cmc
sub
outsb
loope
xchg
inc
pop
adc
stos
aad
sahf
std
ljmp
inc
mov
insl
int
xor
pop
mov
sub
addb
adc
idivl
imul
pop
ret
ja
divps
shlb
pusha
pop
test
in
icebp
aad
and
xchg
test
mov
or
adc
sub
pop
out
xor
jg
stos
mov
call
pop
inc
clc
out
test
insb
xchg
and
mov
push
pusha
ficoml
jmp
gs
pushf
xor
stc
cwtl
mov
lcall
dec
movsb
fsubl
push
jb
xchg
push
adc
xchg
out
adc
adc
mov
sub
js
fcmovne
jg
pop
mov
lods
and
push
jp
insb
cmova
xlat
std
notl
into
xchg
lret
lcall
aaa
mov
mov
push
lcall
push
test
clc
test
jle
mov
addr16
mov
repnz
dec
rorb
add
bndstx
sbb
cwtl
aaa
daa
or
or
call
mov
jmp
mov
and
cli
test
das
fcmovne
push
jb
xor
pop
and
cld
popa
aam
jmp
jl
test
jmp
add
fidivl
mov
int3
xchg
xchg
push
aas
faddl
or
fbld
data16
scas
mov
movl
dec
mov
mov
cmp
lods
lcall
outsb
ret
cs
push
adc
test
scas
inc
xchg
or
mov
inc
cmpsb
jae
mov
shll
xorb
mov
push
jo
sub
mov
add
lret
lods
outsb
push
std
jbe
ret
xchg
and
mov
sbb
sub
rorb
sti
pusha
xchg
dec
xlat
mov
and
nop
insl
lods
mov
pop
adc
push
je
orl
cwtl
data16
jg
lds
aam
jno
cmp
stos
push
frstor
pop
ficomps
cmp
aaa
mov
add
xorl
adc
lock
cmp
popf
clc
aas
fucomip
loop
dec
inc
dec
xchg
jbe
das
sub
std
mov
adc
push
push
or
stos
loope
push
fsubl
ja
sti
cmp
and
push
clc
and
sarl
test
fsubrs
popa
add
gs
or
repnz
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
xor
push
jae
adc
cmpsb
fstpl
das
and
scas
mov
and
ds
inc
sub
jle
sahf
push
in
fcomps
mov
in
pushf
sahf
jp
add
subl
cmp
mov
repz
add
inc
or
clc
and
jb
push
std
mov
mov
jecxz
repnz
and
jle
sub
movb
mov
jle
iret
mov
sbb
dec
cmp
negb
mov
xchg
iret
loopne
push
shl
outsl
in
sbb
and
xchg
les
notb
xlat
jo
inc
jb
int3
loop
nop
push
into
sbb
pusha
push
mov
in
mov
cmp
jnp
mov
mov
fdivrl
inc
dec
ja
cmp
mov
dec
xchg
dec
xor
jne
pusha
scas
sub
xchg
test
sbb
mov
xor
stos
outsl
cmp
lods
jecxz
aas
push
push
idivl
sbb
test
or
repz
push
gs
and
out
dec
mov
jp
pusha
int
mov
and
ficomps
out
mov
cs
jl
jg
lods
and
es
dec
fxch
or
push
test
xchg
xchg
pushf
push
dec
insb
fs
fiadds
mov
outsl
test
xchg
movsb
loope
negb
jnp
scas
xor
mov
dec
add
lret
mov
gs
sbb
inc
dec
dec
leave
jno
icebp
mov
xchg
dec
sub
jl
xchg
imul
orb
sub
inc
int3
pop
mov
lods
or
dec
insl
push
mov
scas
nop
lock
mov
jo
dec
push
aam
add
out
xchg
repz
or
mov
rorb
dec
scas
mov
xchg
xchg
mov
mov
stos
mov
dec
icebp
in
and
jae
fwait
aam
or
pop
mov
int
sbb
ret
mov
inc
adc
inc
push
adc
popf
jge
add
into
or
sub
mov
dec
cwtl
fiadds
pop
out
xchg
cmp
std
adc
mov
popf
fildll
lea
fnstsw
cmp
pop
bound
sti
mov
adc
out
rcrb
in
jmp
sbb
mov
popa
outsb
lods
cmpsb
arpl
je
mov
movsl
xchg
les
mov
psubsb
scas
cmp
mov
inc
jmp
jae
sahf
aad
js
ret
jp
push
push
mov
cmpxchg
loop
push
in
jno
adc
icebp
inc
and
sbb
addr16
std
ds
aaa
sbb
fldt
fists
add
clc
add
int3
cmpsl
mov
mov
sub
lds
cltd
shrb
iret
mov
lock
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
es
ljmp
and
adc
mov
cmp
inc
addb
insb
xor
push
imul
pop
popf
dec
fdivrp
xorb
mov
lds
js
jbe
dec
insb
push
adc
out
frstor
rcrb
jbe
in
xor
adcb
inc
mov
jne
xchg
mov
aas
insl
movl
mov
icebp
cs
mov
sub
test
loop
std
cltd
xor
add
pusha
ja
hlt
cmpl
fisttps
mov
mov
pusha
and
and
pop
add
int3
out
jns
cs
adc
ds
stc
insb
clc
aas
cs
in
adc
mov
push
aaa
nop
jp
push
sti
outsb
ret
cld
push
sbb
pop
aas
mov
inc
xor
sub
cmpsb
sub
popl
mov
cmp
fdivrs
pop
dec
fidivrl
mov
sbb
cmp
fwait
and
fcmovne
inc
mov
nop
mov
push
add
push
ja
push
insb
and
movsl
dec
jne
pop
cmp
in
sbb
and
int3
test
lahf
xchg
movsb
mov
dec
dec
decl
sub
mull
test
sub
fnsave
jmp
mov
call
dec
jns
push
or
cmp
lahf
inc
popa
scas
lcall
mov
jae
imul
fwait
sbb
xor
push
pop
std
and
ret
xchg
les
or
popa
sub
add
enter
arpl
out
jecxz
test
int3
push
xor
pop
xor
xchg
out
pusha
outsl
fwait
add
mov
jge
data16
xchg
push
paddsw
mov
mov
mov
and
adc
mov
movsl
fistps
pop
jo
ja
repz
mov
push
jle
aam
adc
adc
jbe
gs
and
push
stos
mov
cmp
adc
test
ja
push
xchg
mov
mov
add
inc
stc
xor
xchg
push
jge
and
and
and
mov
aas
and
divl
fwait
mov
outsb
sbb
xor
aaa
pop
push
test
or
dec
jg
jge
inc
xchg
dec
rolb
arpl
pushf
mov
xchg
divb
cmpl
push
ljmp
lods
js
add
jmp
aam
pop
pop
adc
dec
mov
movsl
jb
pop
or
fwait
js
fisubrs
lds
pushf
mov
ds
sti
xor
insb
pop
jnp
push
pop
dec
popf
mov
clc
test
and
xchg
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
inc
push
lret
adc
or
fiaddl
xchg
mov
pop
out
lods
sbb
and
cmp
xchg
adc
jge
fs
add
loope
mov
xchg
pop
jo
ss
js
cmp
sbb
mov
test
out
shlb
dec
push
pop
add
xor
pop
xor
pop
cmp
jb
outsl
notb
inc
inc
fisttpl
sahf
cli
mov
int
addl
xchg
add
jmp
lea
paddsb
lds
mov
imul
fimuls
ljmp
fimuls
leave
mov
jae
movq
popf
fsts
sahf
mov
pop
mov
jg
lret
fadd
pop
jl
je
push
clc
push
popf
sbbb
or
inc
cli
mov
add
mov
and
and
cmp
outsl
cmc
loopne
inc
mov
mov
aaa
lahf
push
add
fsubr
sbb
gs
xchg
sub
jecxz
out
nop
inc
ret
pop
xchg
sbb
daa
outsl
jl
out
sbb
sar
ds
sahf
test
outsl
mov
adc
pusha
adc
jle
test
jbe
push
in
lods
and
lods
out
lret
mov
push
or
xchg
std
nop
sbb
jmp
es
mov
mov
movsb
dec
lret
testb
xor
sbb
daa
xchg
pop
test
std
sub
lods
aad
mov
xchg
cmpsl
and
push
mov
je
push
and
xor
ljmp
sub
pop
cmp
and
lret
add
test
xchg
mov
test
test
or
push
ljmp
adcl
shrl
dec
int
jmp
outsb
add
int3
xlat
lahf
add
insb
cli
int
jbe
jg
push
mov
adc
pop
mov
lret
cmp
xor
test
pop
int3
xchg
dec
jns
pusha
xor
sub
jne
adc
rolb
inc
mov
cmpb
sbb
add
sahf
iret
xor
fstpt
cld
pop
jecxz
jae
repnz
xchg
xchg
cld
mov
add
mov
adc
out
lds
mov
insl
pop
into
insl
out
stc
push
dec
cmp
push
mov
push
in
cwtl
cmp
xchg
adc
bound
sbb
xlat
and
mov
xchg
cmp
test
mov
jbe
hlt
add
aaa
fwait
jge
mov
repz
jae
add
sub
xor
mov
vpminsw
push
lea
dec
push
ret
sbb
clc
sahf
add
out
lea
js
mov
insb
movsb
push
mov
and
stc
lods
jae
add
loopne
stos
leave
sbb
cld
pop
movsb
int3
dec
decb
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
bound
rclb
pop
cld
js
cltd
mov
jno
imull
stos
lret
sbb
and
xchg
repnz
les
xchg
sub
div
idivb
clc
movsl
ss
and
adc
stos
jae
fs
or
adc
inc
cmp
or
test
xchg
ret
leave
mov
outsl
mov
hlt
push
mov
jnp
lahf
and
out
iret
test
ljmp
add
stc
bound
pop
shrl
stos
mov
fcmovnu
loop
dec
sub
jno
pushf
dec
test
loope
inc
inc
jecxz
test
fsubl
jo
jecxz
fs
mov
sbb
mov
int3
lds
sbb
mov
mov
add
jp
xor
in
sub
pusha
outsl
repnz
jne
dec
lock
mov
mov
movntps
inc
hlt
data16
test
test
dec
add
lahf
pop
imul
das
jnp
xchg
xchg
inc
push
lahf
mov
test
push
sub
fldcw
dec
stc
adc
sub
pop
jl
sbb
mov
sbbl
iret
js
out
rcrl
and
jmp
mov
add
testl
fwait
arpl
cmp
jo
and
adc
ret
in
xchg
lds
ret
inc
aaa
or
es
je
ret
jge
ljmp
push
cmp
fdiv
push
dec
cmp
inc
cmc
lds
pusha
push
icebp
mov
addr16
and
dec
xchg
test
and
xchg
jns
mov
pop
adc
stc
and
lods
inc
pop
pop
pop
mov
cmp
mov
pusha
cli
push
sarl
sahf
xor
roll
pop
ds
mov
and
push
inc
jns
nop
imulb
or
ret
in
mov
lds
fistpl
in
or
jns
outsb
lds
xorb
clc
stos
mov
pushf
imul
push
push
sbbl
movsb
rolb
mov
and
decl
add
dec
and
out
out
daa
mov
or
ret
jnp
jmp
add
mov
xlat
shrl
sub
outsb
add
addr16
mov
xchg
sbb
cld
lock
push
dec
shr
ja
insb
gs
fistl
xchg
std
mov
fidivrs
xor
pop
mov
data16
mov
inc
fstpl
sub
xor
js
mov
cmp
in
cmp
sub
inc
mov
mov
leave
addr16
jl
call
pop
lods
mov
loope
repz
push
inc
pop
fbstp
push
or
stc
ret
sbb
push
jnp
mov
and
sub
and
jle
incl
dec
dec
call
pop
sub
stc
popa
gs
dec
lods
push
mov
pop
shlb
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
fildll
mov
jp
adc
daa
xchg
outsb
loop
inc
sub
xchg
add
call
cmp
ss
adc
rorb
pop
xlat
mov
test
push
xchg
rclb
bound
mov
jge
or
mov
or
pop
nop
imul
mov
lret
je
lahf
lods
std
mov
dec
in
clc
rclb
pop
xchg
cmp
fwait
jmp
mov
push
mov
inc
xchg
mov
inc
out
add
repnz
leave
mov
xor
fwait
out
test
sbb
push
mov
or
inc
sbb
popa
mov
rcrl
jmp
mov
jno
js
popa
je
mov
jb
sbb
stos
pop
dec
sbb
mov
sbb
out
push
sarb
js
adc
lods
aaa
into
cmp
mov
aas
cltd
inc
jns
jle
jne
xor
jns
lds
stos
and
push
adc
outsb
pop
fwait
les
mov
inc
mov
push
aaa
shlb
in
ret
iret
push
testb
outsl
outsb
subb
and
bnd
inc
rolb
loop
push
repz
ret
mov
loope
aaa
pop
es
mov
jae
inc
xchg
pop
inc
les
ret
or
adc
cli
jg
stc
add
pop
xchg
shl
mul
mov
out
inc
lock
aas
or
mov
sub
cwtl
jp
mov
or
pop
xor
xor
or
bound
shlb
push
xor
push
cmc
inc
icebp
adcb
arpl
xorb
cld
mov
or
cmpsl
and
out
jo
or
fstpl
popf
lods
xor
cmp
pop
dec
mov
and
and
cltd
xor
subb
incb
nop
inc
inc
ss
push
xchg
outsl
mov
and
stos
mov
pop
shrw
or
hlt
lods
test
add
pop
fwait
xchg
fwait
mov
icebp
movsb
lods
xor
mov
out
and
lea
shrb
idivb
imul
cwtl
sub
adc
into
in
fisubrl
in
bound
mov
lods
iret
mov
fldl
inc
adc
sarl
add
inc
popf
into
jae
adc
fsubrl
pop
xchg
aad
fcomip
cwtl
insb
push
inc
addr16
inc
movsl
ds
out
imul
mov
sub
cs
xorb
push
xor
jmp
sbb
movsl
scas
xor
insb
mov
and
xchg
inc
jp
lock
sub
sub
jae
scas
scas
dec
push
mov
add
push
cli
add
sub
movb
imull
push
xchg
popa
push
or
es
loop
rcrb
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
rclb
test
adc
adc
fdivs
fcoml
inc
xor
jecxz
stc
xchg
sbb
add
loop
outsl
scas
out
leave
and
mov
adc
xchg
xlat
outsb
push
lcall
mov
aas
mov
xchg
pop
nop
jbe
ret
fstpl
cwtl
jb
push
dec
jmp
xchg
insl
xor
pop
adc
cmp
insl
pushf
dec
sbb
pushf
jne
push
cwtl
ja
and
ljmp
outsb
daa
out
dec
push
je
fucom
insl
sahf
add
test
outsb
jnp
mov
sarb
cmp
add
pushaw
mov
sahf
lahf
mov
push
hlt
out
mov
jmp
popa
xchg
gs
shrb
stos
sub
add
push
aad
sbb
xchg
fwait
push
mov
push
xchg
mov
fists
sub
push
xchg
lea
or
ror
mov
sti
inc
aaa
inc
loope
lcall
mulb
inc
add
xchg
rorb
dec
je
and
test
scas
lret
cmpsl
cmc
loopne
rolb
and
cmp
loope
rcrl
test
mov
push
adc
mulb
mov
rol
xor
jnp
bnd
inc
xchg
test
jmp
lds
imul
lea
pop
cmp
dec
fiadds
gs
fisubrl
or
and
out
push
in
hlt
cmp
mov
sbb
imul
out
pop
stos
dec
adc
data16
pop
cli
fildl
lods
and
sbb
lret
into
cmp
jl
xchg
fldl
nop
cld
mov
jle
shl
inc
frstor
pop
sub
neg
cmp
test
pop
sub
jmp
insl
pusha
ret
negb
adc
push
lret
sbb
std
mov
jg
push
jns
cmp
inc
adc
xor
fstpt
mov
out
sub
cltd
lea
fs
mov
pop
dec
mov
jne
aas
lds
fld
adcl
shll
ljmp
jg
sub
add
mov
sbb
data16
jp
or
mov
xor
lods
ss
and
out
sbb
rclb
lret
loop
testl
pop
xor
pop
inc
call
shll
stos
lds
shll
fisubrl
push
mov
fcmovu
or
mov
fdivs
pop
adc
incb
popa
pop
jb
pop
xchg
in
lods
mov
inc
jle
stos
jp
jae
dec
inc
shr
pop
fcmovb
jge
into
insb
xchg
addr16
shrb
inc
xchg
push
sub
scas
call
jne
das
rcrb
stc
lods
sahf
ljmp
inc
insl
dec
dec
ds
les
jle
test
insb
test
sub
pop
jp
jo
cs
repz
mov
push
xor
aam
loop
sub
add
decl
or
mov
jmp
pop
pop
mov
push
fisttpll
and
push
adc
jp
adc
mov
test
jecxz
cmp
out
xlat
inc
cmpsb
mov
inc
pop
push
rcll
cmp
lcall
and
dec
and
cmp
sbb
stos
push
addr16
icebp
andb
dec
pop
clc
jmp
push
push
xchg
es
mov
mov
gs
mov
xchg
sbbl
fidivrl
call
cmp
leave
std
mov
je
push
out
dec
dec
rol
push
mov
iret
pop
inc
hlt
aaa
pop
adc
push
mov
in
nop
jo
add
dec
or
dec
jge
pop
mov
pushf
cmp
imul
and
dec
lcall
jle
ljmp
adc
pop
mov
xor
iret
mov
fdivs
shlb
jno
clc
lea
clc
jne
leave
imul
dec
sbbl
lret
lcall
test
cmp
fninit
push
xor
dec
xchg
add
add
mov
or
and
ljmp
or
fcmovne
in
jmp
vorpd
mov
movnti
fwait
ja
ds
push
in
and
popf
push
push
iret
iret
fs
cmp
cmp
inc
xor
cmp
ret
fcmove
xor
inc
ja
and
inc
gs
xchg
mov
mov
das
xchg
add
sarb
jo
xchg
loope
inc
mov
xor
mov
scas
and
test
mov
sbb
sub
ss
push
and
test
test
push
test
in
dec
mov
or
pop
rorl
jecxz
nop
xchg
mov
add
scas
pop
dec
dec
repnz
bound
cmp
add
jbe
pushl
dec
inc
stc
aad
jo
jbe
mov
inc
fists
push
stos
in
or
sub
jecxz
jmp
push
rol
in
xchg
pop
xchg
movb
add
scas
lods
push
test
je
cs
notb
fnclex
lcall
adc
mov
push
enter
pop
repz
add
icebp
imul
mov
sub
sbb
push
test
aaa
mov
pop
jecxz
or
repnz
xor
sub
icebp
add
dec
stos
rclb
call
das
lods
inc
pushf
in
jl
jb
fistpl
repz
out
mov
sbb
iret
mov
syscall
mov
mov
lret
xchg
lea
ret
adc
sbb
test
lods
xlat
test
and
scas
in
icebp
pop
sub
in
test
jecxz
mov
mov
stos
pop
pop
sbb
pop
mov
xor
and
cmp
cmpsb
psraw
ss
cwtl
clc
ja
jae
movsb
mov
mov
dec
dec
mov
push
cmpsb
imul
mov
cmpsl
out
repnz
outsl
movsl
ja
sbb
mov
jge
addr16
push
popa
cli
push
and
cmpsl
aam
xor
mov
inc
pop
pop
sub
ja
pop
ret
cwtl
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
pop
push
push
inc
adc
lea
adc
orb
and
pop
mov
fsubp
addr16
dec
shll
in
push
jae
adc
loope
cmp
pop
into
jo
jl
int3
adc
and
add
pop
imul
inc
movsl
loope
test
xlat
jne
lahf
dec
mov
in
mov
pop
inc
pop
dec
dec
cmp
mov
mov
sub
test
shll
lea
stos
push
mov
inc
push
push
push
cwtl
cmp
fisttps
mov
icebp
jne
jb
mov
adc
xchg
fdiv
lds
lahf
aad
fadds
push
stc
fstl
leave
negl
lods
cltd
outsb
lret
lret
sbb
jb
push
add
sub
inc
fstp
xchg
xchg
dec
add
sbb
cmpsb
das
loope
andl
dec
dec
ss
fcompl
pop
fs
mov
push
mov
ljmp
sub
mov
scas
rol
sti
movsl
aaa
andb
push
dec
in
je
jns
mov
hlt
fstp
es
mov
imul
jno
jne
js
mov
movsl
adc
scas
adcl
xchg
fstps
xchg
cmp
mov
push
aad
fiaddl
shrl
inc
decb
pop
cmp
iret
dec
push
aaa
scas
out
outsb
push
lahf
repnz
fdivs
jg
repnz
dec
sub
test
xorl
push
push
add
and
mov
jge
sbb
outsb
mov
xchg
aaa
test
aaa
jmp
orl
fstpt
fildl
pop
test
sbb
jl
jnp
out
dec
cmp
movl
cmp
jge
jbe
nop
or
jne
pop
jg
aad
test
sbb
sbb
dec
int3
inc
sub
jb
adc
imul
ljmp
mov
xor
sbb
jmp
jp
clc
pop
add
dec
inc
lret
push
lock
movsb
in
mov
iret
imul
jo
and
pop
sbb
ljmp
jle
or
mov
lods
js
xchg
jl
push
adc
or
jne
adc
push
xor
in
cmc
cmpsl
mov
hlt
ja
jmp
sbb
dec
dec
stos
fmuls
fbld
xchg
stc
daa
nop
sub
out
jno
insl
inc
inc
mov
xor
inc
push
lods
lahf
adc
sbb
pop
adc
sbb
cld
jmp
xlat
xor
outsb
inc
add
cmc
in
outsb
sbb
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
lcall
push
jbe
jno
or
push
repnz
xlat
cld
push
push
addl
mov
inc
data16
push
and
in
out
inc
push
mov
cli
push
lret
ja
scas
scas
and
test
and
mov
test
setge
loop
in
imul
and
ja
hlt
push
in
inc
ss
bswap
push
sub
daa
dec
dec
and
mov
iret
xor
pushf
imul
jle
aad
mov
ret
lcall
and
xchg
out
fwait
loop
aam
outsl
mov
fbstp
add
outsb
sbb
call
sub
fwait
orl
out
add
into
in
fistpll
cmp
icebp
push
adc
or
pop
lret
xchg
mov
adc
and
outsl
incl
pop
cld
dec
pushl
in
aaa
xor
lds
leave
insb
test
popa
lds
mov
aam
and
mov
cld
sbb
push
sub
push
jge
movsl
sahf
fbstp
or
inc
xor
mov
xorl
inc
jnp
aas
int
mov
mov
sti
imul
pop
test
push
xor
popf
or
inc
add
sbb
mov
test
loopne
sbb
jmp
pop
jl
daa
negb
testl
mov
xor
mov
cmc
and
sbb
cmp
jg
notl
adc
jecxz
aas
add
sarl
xchg
or
cmpsb
rclb
fldenv
cmp
mov
lods
stos
pop
cld
inc
out
mov
loopne
push
das
mov
rcrb
fcomps
push
or
inc
cmpsl
sub
sbb
icebp
adc
cmp
sub
loopne
push
ja
in
dec
sub
sub
shll
adc
push
pop
lds
dec
out
xchg
jo
add
shr
sub
lret
pop
dec
xchg
jmp
imul
decb
mov
pushf
pop
mov
or
cmp
rorb
btr
pusha
xchg
push
pop
dec
or
jmp
jo
out
mov
mov
xchg
ret
adc
cwtl
movsb
iret
cwtl
pop
int
dec
test
push
dec
push
int
push
and
cmp
jp
dec
push
ja
inc
xor
push
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
loopne
inc
call
xchg
jmp
xchg
xor
ss
sbb
mov
cmp
and
fcmovnb
frstor
jno
lods
stos
jbe
dec
and
cmpb
or
xor
and
call
out
or
out
cmp
into
sahf
ret
jns
push
adc
jp
std
rolb
push
in
sub
push
sbb
pop
nop
stos
push
pop
gs
stos
dec
pushf
jecxz
stos
negb
mov
jno
cs
aas
rol
mov
xor
sbb
push
mov
mov
xor
mov
lcall
jle
fadd
mov
mov
lcall
push
loop
xor
mov
xor
in
sub
cwtl
xlat
test
jecxz
icebp
fdivrl
and
inc
mov
inc
and
push
pushf
mov
push
cmp
pop
cwtl
pusha
push
cmp
pop
iret
loopne
adc
repz
xor
jge
ja
mov
in
loop
sbb
loopne
std
push
in
icebp
hlt
mov
xchg
loope
lret
int
hlt
dec
addb
outsb
inc
test
movsb
daa
repnz
repnz
shrl
push
jge
push
mov
xor
pop
fcmovnb
daa
lahf
dec
sub
adc
sbb
outsb
inc
loope
ret
jno
sub
sub
call
xchg
cmp
sub
xchg
repnz
pushf
inc
dec
and
jecxz
xlat
xchg
push
fmul
cmp
adcl
jecxz
and
icebp
inc
adc
push
mov
push
pop
push
in
pop
psubsw
ds
xor
icebp
fdivs
cmp
sbb
inc
sub
mov
pop
mov
clc
or
data16
mov
push
or
aas
pop
rcr
mov
les
cwtl
data16
scas
lods
test
mov
cmpsb
cli
pushf
push
and
das
lods
jle
jns
es
mov
mov
lret
lods
and
outsl
xchg
xchg
shlb
inc
inc
lods
rcll
out
and
cwtl
pusha
and
gs
and
and
jne
xor
mov
scas
loop
adc
pextrw
stos
adc
inc
inc
popa
imul
jp
jo
pop
pop
in
fwait
mov
leave
push
shll
jge
push
push
popf
sbb
cmp
jns
test
call
mov
mov
dec
jo
pop
enter
jl
jmp
mov
cmp
les
lock
xchg
sub
fcmovne
add
cmpsb
cmpsl
sahf
and
adc
shlb
ret
loope
sbb
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
jecxz
inc
stos
lret
aaa
adc
lea
adc
pop
imul
addr16
jle
outsb
insl
mov
jge
cmc
test
push
jno
push
fnstsw
dec
mov
scas
push
cmpsl
dec
mov
jo
xor
das
fcoms
out
fisttps
xchg
mov
pop
insl
pop
in
cli
xlat
xchg
imul
push
inc
dec
mov
mov
cli
jmp
in
mov
in
fs
gs
adc
mov
cltd
dec
ds
jns
jns
int
cwtl
lea
ss
movsl
movsb
or
add
ficompl
out
stos
pop
cmp
jno
pop
xchg
push
gs
sub
mov
out
cmpsl
decl
lea
fucomip
sbb
hlt
sub
cmp
aad
les
inc
fimuls
ret
pop
stc
lods
idiv
popl
cmp
xchg
int
es
cmp
xchg
cmc
push
in
test
fstl
sti
lods
fnstenv
andb
and
xchg
jp
cmpb
jl
arpl
loope
add
adc
pop
pop
mov
outsb
decl
outsl
fdivl
push
mov
ds
sbb
mov
mov
test
clc
mov
std
push
divb
or
enter
fnstsw
xor
test
xor
sub
aad
add
fldl
testl
cli
and
jecxz
in
out
push
subl
and
out
test
pop
je
in
mov
mov
fcmovnb
gs
xor
inc
pop
xor
and
push
sub
sahf
pop
adc
or
push
add
shll
mov
loop
mov
fsub
xor
lds
jl
in
fwait
out
pop
inc
mov
mov
adc
mov
mov
lret
push
sub
xor
sub
das
and
cltd
dec
popa
sub
scas
aad
dec
popa
or
clc
nop
push
ss
add
and
mov
sub
and
ds
mov
add
test
add
adcb
shlb
stc
inc
cmp
out
ror
scas
push
js
ljmp
inc
adc
stos
sub
aas
xor
aaa
cli
sbbl
das
popl
movsl
pushf
jmp
sub
aad
xor
ss
je
fwait
xchg
sbb
data16
jb
or
sub
roll
cld
jae
and
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
xchg
mov
lea
adc
shlb
subl
je
pop
jne
xor
sti
fmull
push
mov
int3
je
mov
inc
lret
push
int3
pop
lods
cmp
sub
sbb
cwtl
dec
icebp
test
or
mov
aaa
cmpsb
insb
sub
mov
mov
add
inc
lods
out
addr16
gs
imul
cwtl
push
ret
push
cmp
insb
and
pop
lret
das
in
sbb
dec
jl
lret
xchg
scas
mov
aad
ja
xchg
xchg
xor
test
xor
adc
dec
push
movsb
add
pop
inc
or
inc
pushf
rcll
sahf
out
cltd
add
popa
push
outsl
jecxz
lds
sarb
scas
xor
add
mov
stc
sub
nop
pop
xchg
popf
xchg
outsb
sbbl
into
gs
pop
cmp
sar
fneni(8087
jmp
xor
add
mov
cld
nop
push
xlat
mov
js
cltd
fistps
cmp
pop
jp
xchg
pop
sbb
psubb
or
push
xor
mov
shll
sub
sbb
andb
mov
addr16
aas
and
sub
mov
xor
lods
nop
inc
out
roll
mov
cmpps
repnz
js
cltd
cs
dec
aas
jg
mov
sub
insl
iret
decl
iret
or
stos
push
push
test
push
imul
mov
std
lret
movsb
fcompl
adc
sbb
fstp
js
lods
fldcw
jae
clc
mov
aam
push
sub
inc
push
mov
incb
in
pop
mov
lahf
cmp
mov
loope
es
add
sbb
hlt
mov
mov
fwait
mov
xlat
shll
and
mov
in
pop
cmp
mov
mov
sub
add
pushf
mov
scas
cmp
out
jbe
pop
xchg
mov
aam
ss
js
jge
xchg
fidivrs
icebp
add
aaa
pop
xchg
je
pop
out
decl
cmpl
jo
inc
pushf
shll
jo
sbb
xlat
push
mov
out
pop
jbe
inc
fwait
out
pop
pop
push
jmp
sub
rol
roll
repnz
imul
test
jge
add
into
or
dec
adc
pop
ja
push
jno
dec
mov
or
and
jl
jns
jp
es
push
jno
in
mov
ret
pushf
adc
js
sbb
fsubrp
test
mov
jl
hlt
pusha
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
shr
jle
sub
adc
cmc
lret
jmp
jno
sub
jo
fldl
and
xor
daa
into
ljmp
lods
mov
cmp
sti
xchg
jmp
cmp
sub
jmp
xlat
movsb
cmp
ds
or
sbbl
popa
xor
mov
push
out
rcl
lcall
addr16
mov
mov
jmp
push
xor
bound
arpl
icebp
sarl
in
cmpsl
xor
xchg
lcall
clc
std
and
dec
xchg
repz
mov
rcrb
stos
or
in
lret
lea
pop
es
loop
cli
mov
cmpsl
or
jge
mov
and
lods
out
or
adc
out
dec
outsl
fistl
outsl
lds
imul
xchg
shll
jne
iret
push
pop
cmp
jl
jns
lods
and
mov
enter
idivl
push
call
push
into
adc
xor
jb
test
sub
stos
fmull
xor
and
fnsave
jl
sbb
jo
cmpsl
xor
cltd
push
or
jmp
xchg
test
fists
divl
pop
or
outsb
mov
dec
push
inc
lods
shl
into
inc
out
pop
je
test
fcmovbe
outsl
inc
mov
in
ljmp
jle
lcall
mov
cmp
neg
mov
outsl
enter
cmp
push
mov
dec
lock
pop
sahf
packssdw
push
fstpl
int
imulb
pop
pop
dec
lret
and
lods
inc
add
adc
lcall
jnp
or
shr
cmp
dec
movswl
cmp
cltd
jne
adc
xchg
jge
add
xor
das
sub
cmp
shr
xchg
ss
stc
in
xor
xchg
ljmp
enter
es
inc
fidivrs
push
dec
addr16
pop
mov
js
cmc
adc
and
sahf
jl
int3
inc
jecxz
cwtl
out
mov
xchg
test
mov
in
mov
xchg
frndint
popf
mov
lahf
pop
pop
and
imul
inc
ljmp
icebp
mov
mov
out
inc
cmc
fsubrl
enter
jecxz
loope
daa
sub
in
leave
pop
test
add
repnz
out
sbb
push
mov
aas
xchg
jb
pop
loop
mov
daa
fsubr
inc
mov
mov
inc
push
mov
lock
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
in
int3
lods
xor
adc
lea
adc
cwtl
jns
xor
test
ss
push
gs
mov
in
imul
inc
out
xor
adc
int3
pusha
add
jecxz
je
cmp
add
inc
mov
fildll
scas
sub
xor
sbb
mov
push
lahf
cli
mov
mov
jle
add
xor
jb
cs
adc
mov
jecxz
lock
pop
xlat
lea
xor
insb
push
cmp
jnp
sub
fwait
sbb
mov
rorl
jecxz
aas
pusha
ss
loop
call
sub
out
data16
stc
lock
xor
mov
push
pop
out
cmp
lret
adc
add
lea
movsl
rorl
dec
shl
leave
cmpsb
in
pop
mov
jns
popa
pand
xchg
mov
add
fidivrs
repz
jge
mov
cs
jg
push
add
sti
inc
mov
fstl
sub
cmp
mov
lds
pop
inc
mov
jecxz
cmp
jns
cmp
sahf
hlt
int3
dec
jp
addr16
fists
jmp
pop
mov
fucomi
mov
not
sahf
cli
nop
out
add
dec
jp
xchg
xor
pusha
sarl
dec
sahf
pop
lahf
ja
sub
xor
fwait
popa
lahf
sbb
cmpsb
les
repnz
rcrl
xchg
add
jo
testl
mov
sub
pop
sub
mov
jge
and
xor
dec
imul
pop
cld
push
cld
ds
mov
stos
test
jb
push
divl
lret
xchg
shll
out
cli
cld
push
inc
ret
dec
insb
test
pusha
sub
repz
inc
outsl
push
dec
push
jmp
stc
mov
mov
ljmp
cwtl
mov
movsl
cmp
pop
xor
add
push
adc
jg
xchg
pop
jno
cmp
pop
clc
ss
inc
xor
mov
jae
cmp
mov
sbb
inc
add
repnz
and
xor
xchg
insb
pushf
adc
pop
push
cmpsl
mov
and
mov
and
movsb
dec
scas
cld
inc
mov
hlt
test
popa
cmp
and
add
test
cmp
or
ds
fs
jnp
imul
pop
xchg
sti
adc
dec
enter
push
jle
stos
or
or
jae
dec
mov
in
cld
cmp
sarb
outsl
pop
sbb
sub
in
or
cmpsb
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
inc
fisttpll
adc
bound
test
mov
sub
imul
push
stos
xchg
out
jge
in
push
sbb
mov
mov
push
and
fcomp
dec
shrb
or
xor
clc
jge
xor
outsb
jl
add
fcmovu
dec
mov
outsb
or
pop
dec
hlt
sbb
int
dec
dec
add
add
out
inc
and
ficompl
out
mov
popa
xchg
loope
scas
iret
add
or
xchg
mov
and
cmpsl
xor
sti
sub
sub
add
out
scas
addr16
sub
movsb
lods
jae
xchg
xor
imul
loope
mov
pushf
lahf
xlat
subl
xchg
mov
test
and
mov
pop
inc
shlb
decb
xor
stos
aaa
dec
in
jl
mov
outsl
xor
int
jmp
inc
fmuls
xchg
popf
mov
nop
pop
mov
test
outsb
adc
mov
adc
out
mov
xor
icebp
mov
mov
adc
xor
les
stc
enter
cmp
cmpsb
mov
mov
adc
repz
cwtl
call
mov
pop
add
xor
cmpsl
pop
das
and
xlat
out
add
cmp
sbb
bound
dec
pop
je
and
cmp
das
adc
and
xor
sbb
cmp
repz
or
or
dec
adc
lods
mov
out
fdivs
addr16
sbb
loop
push
push
icebp
nop
scas
lret
push
outsb
dec
dec
pop
jmp
fstpl
cmp
sbb
mov
sub
add
addr16
pop
pusha
and
cmp
or
or
mov
fwait
push
mov
sar
add
aas
nop
add
cmpsb
dec
push
push
std
pop
mov
add
enter
clc
pop
push
hlt
adc
and
mov
cltd
lods
add
shrl
mov
in
test
pop
nop
or
out
nop
mov
lret
cmpsl
cmp
pop
sub
push
pcmpeqw
pop
xchg
outsb
ljmp
mov
xchg
inc
or
std
or
pop
aas
aaa
mov
or
ffree
scas
pop
movl
cmc
xor
icebp
nop
inc
mov
lods
or
inc
loop
lahf
out
add
mov
xchg
cmp
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
lcall
movlps
inc
int
xor
cli
ret
mov
mov
repnz
mov
jns
les
mov
lahf
sbb
shrl
cwtl
mov
hlt
mov
mov
scas
jp
aas
mov
push
stos
push
movsb
add
mov
leave
inc
sbb
adc
mov
jo
jge
push
jb
repz
mov
div
shl
mov
cmp
mul
and
ja
and
xorb
push
pop
jp
sarb
cs
xchg
add
dec
ret
cltd
in
push
int3
loope
push
cmp
loope
push
add
es
mov
lods
jmp
adc
nop
sbb
add
dec
pop
cmp
mov
loope
xor
testb
cmp
stos
xchg
mov
sub
xchg
or
daa
cmp
ret
push
jmp
cmp
push
adc
and
hlt
pop
rclb
fucomi
or
call
add
cld
test
scas
hlt
sarb
aam
das
stos
cmp
std
bound
movsb
aas
pop
xchg
jmp
add
pushf
bound
sub
xor
ficompl
popa
dec
lods
insb
xor
and
cmp
mov
mov
sbb
stos
in
dec
call
pop
mov
jae
mov
fwait
repz
pop
cmpsl
mov
imul
cmpsl
add
pop
xchg
sub
ret
dec
cld
rorb
jae
outsl
cmp
add
mov
loope
or
inc
out
cltd
mov
or
push
mov
jp
stos
jnp
or
and
pop
push
test
sub
enter
cmp
add
sub
jge
inc
or
xchg
mov
insl
xlat
je
xchg
ss
push
mov
xchg
mov
push
jmp
xlat
out
popf
bnd
inc
xor
xchg
and
cmpsl
lahf
addb
pop
mov
popa
sub
mov
push
mov
in
mov
scas
jnp
dec
sub
cmpsb
pop
mov
sub
pop
add
inc
ljmp
mov
cmpsb
mov
andb
adc
fs
mov
out
insb
outsb
ret
jbe
xchg
dec
out
xchg
loop
and
xor
loopne
dec
jmp
ret
xchg
and
out
dec
scas
out
mov
adc
xlat
notl
push
fsubl
test
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
sub
mov
mov
pop
add
adc
call
bnd
adc
or
aaa
movsb
adc
leave
enter
adc
popa
addr16
push
js
lea
xchg
or
popf
mov
addl
or
push
push
lret
fmull
or
mov
mov
mov
clc
pop
xor
lods
push
hlt
sbb
hlt
cmp
xchg
inc
cmpsb
push
xchg
add
fnsave
test
call
xchg
enter
pop
insl
mov
out
movsl
xor
push
enter
ret
lock
movsb
sub
cmp
sbb
gs
push
fisubl
cmp
xchg
jne
orb
inc
fwait
sti
push
jmp
cmpsl
jmp
aad
cld
push
inc
test
andl
es
lods
daa
aam
pop
add
int
mov
clc
sbb
dec
loope
xchg
test
std
pop
jl
lods
popa
or
add
psubsb
insl
pop
xor
mov
sub
inc
mov
movsl
and
adc
inc
lahf
mov
decl
mulb
sbb
xorb
sbb
aad
add
mov
shll
pusha
in
pop
fidivrs
pop
pop
stc
xchg
stc
xchg
mov
cmc
inc
stos
enter
add
aaa
or
and
inc
fwait
jmp
push
dec
xor
push
and
enter
enter
add
mov
stos
or
xor
test
cwtl
xlat
lret
push
in
mov
fisttpll
adc
stos
push
adc
popa
sarb
outsb
inc
pop
bound
les
sbb
fnsave
cmp
cmp
sbb
aad
mov
hlt
das
loop
push
fldz
loop
aas
and
xchg
pop
xchg
and
out
sahf
pop
sub
mov
push
stc
not
dec
lret
pop
mov
xchg
fs
icebp
rclb
and
int3
aam
push
ljmp
iret
xlat
sub
xor
ja
adc
jae
jbe
sub
movsb
push
mov
test
sbb
sub
cli
jmp
fs
lahf
loop
jo
mov
dec
xchg
test
andb
sbb
inc
clc
test
mov
lahf
push
sub
sub
adc
mov
or
shlb
nop
nop
mov
nop
add
pop
shll
mov
inc
or
jp
insl
or
sub
arpl
inc
aas
in
shrb
jl
inc
nop
pop
pop
xchg
lea
inc
test
xor
popa
into
insl
mov
leave
repnz
jg
fisubrs
mov
in
clc
xchg
fistl
out
rclb
push
into
push
dec
cmc
in
cmpsl
dec
rcll
aam
into
xorl
mov
and
shrd
sbb
icebp
add
mov
mov
mov
fisttpl
das
or
mov
mov
mov
pop
push
add
push
popa
inc
cmp
adc
jmp
addr16
cmp
lahf
je
mov
mov
rol
movsb
sti
inc
test
ja
push
fiaddl
leave
sahf
in
inc
push
jbe
rol
xchg
addr16
cmpsb
pusha
mov
lcall
cwtl
xor
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
repz
lods
aaa
unpckhps
mov
pop
pop
xor
enter
lret
sub
jo
shrl
pop
xorl
and
sbb
sbb
or
cs
repz
pop
fwait
icebp
out
subl
xchg
add
add
repnz
aad
cmc
mov
pop
pop
sub
inc
mov
movsl
cmpsl
pop
or
in
xchg
es
pop
hlt
mov
pop
xchg
add
sub
sub
sbbl
push
cli
mov
aas
loopne
pop
xlat
outsb
enter
sub
sub
and
imul
mov
dec
scas
jne
sbb
jp
push
bound
cmp
js
jg
int3
mov
in
or
mov
decb
fld1
add
insl
dec
mov
sub
jl
sar
xchg
into
arpl
xor
inc
mov
cmp
scas
or
outsb
jecxz
adc
or
shll
mov
xchg
mov
jae
popf
cwtl
cmp
xchg
mov
inc
inc
mov
ss
dec
mov
daa
fs
fdivrs
popf
add
add
lock
divb
decl
lods
sbb
jno
sahf
pop
add
mov
cmpsb
add
xchg
js
and
xchg
inc
es
inc
xchg
cmp
rcl
insb
and
test
adc
lcall
sbb
rorb
orl
loopne
mov
int
test
push
imul
aaa
sub
sub
outsl
xchg
cld
sarl
fistl
inc
xchg
enter
mov
enter
xchg
outsb
and
push
lods
cwtl
jno
inc
in
add
or
dec
xchg
mov
shll
cmpsb
cmp
sbb
pop
inc
inc
cs
or
out
cmp
and
fcomi
testb
nop
test
sub
js
insb
in
gs
fistl
repz
and
add
xor
jns
xchg
push
stos
push
in
shrl
push
js
outsb
and
inc
or
adc
or
aaa
outsl
out
push
xchg
xor
arpl
mov
or
adcl
lock
cmc
pop
inc
add
jae
jmp
sub
call
ficompl
call
adc
fnstcw
fisttps
mov
push
ret
cli
fcmovu
cmpsb
jge
movsb
inc
xchg
dec
cmp
jns
in
sbb
and
push
mov
mov
js
and
jb,pt
lds
push
cmpsl
cmp
jge
out
sbb
popa
lea
mov
test
sbb
and
rolb
mov
test
das
orb
mov
mov
orb
in
adc
xchg
push
sub
cmp
and
mov
and
inc
int3
lock
mov
push
push
push
mov
scas
push
mov
jb
mov
mov
cmpsb
cmp
test
lret
push
fstl
adc
jbe
and
xchg
movsl
sub
or
stos
lds
ljmp
xchg
pusha
ret
sub
lcall
enter
sbb
repnz
inc
std
in
push
sbb
mov
mov
pop
rcll
out
pop
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
out
adc
lods
test
mov
lret
popa
es
sbb
jbe
sbb
mov
pushf
pop
push
jbe
sub
imul
fisttpl
scas
dec
lret
jnp
daa
gs
pop
xor
add
clc
push
cwtl
movsl
dec
fsubs
arpl
cmc
jnp
aaa
dec
inc
inc
xlat
insb
mov
aad
idivb
cwtl
inc
jo
inc
mov
sub
fisttps
sub
mov
add
push
andl
mov
test
sub
jge
add
xchg
imul
xchg
imul
ret
and
xchg
jae
sbb
sub
or
insl
mov
sti
stos
lret
out
xchg
cmpsb
sbb
jp
mov
mov
outsl
rcr
mov
and
in
sub
dec
das
dec
jg
fdiv
leave
shrl
jp
push
xor
cmp
sti
mov
lods
sbb
mov
into
sbb
mov
clc
add
mov
xchg
pushf
hlt
repz
cmc
xor
xor
jmp
repnz
stos
icebp
scas
xor
dec
mov
clc
sarb
jns
and
push
push
xchg
pop
lahf
leave
xor
push
jl
sbbl
cmpsl
dec
push
arpl
lea
popa
xchg
daa
mov
inc
jmp
test
mov
pop
jge
test
jb
xchg
fld
std
adc
pop
push
leave
mov
pop
inc
jnp
sub
cmpsl
mov
mov
jo
or
jecxz
adc
push
inc
sahf
mov
or
push
cs
loopne
cld
and
pop
push
adc
jno
inc
pop
xlat
and
cli
adc
fsub
je
in
jae
in
loop
ret
cmp
aam
lret
or
mov
sti
fstpl
lea
out
je
jmp
sbb
mov
mov
mov
scas
sbb
test
xchg
add
cmp
jo
add
fwait
loopne
lret
cli
jae
mov
shll
ds
adc
dec
inc
pushf
add
pop
jae
clc
pop
mov
xor
mov
mov
cmp
adc
gs
lret
pop
xor
jecxz
aas
push
adc
mov
lea
rcll
jecxz
stos
stos
cli
xor
mov
pop
push
pop
aad
jns
sbb
loop
push
stos
aad
call
dec
mov
in
mov
dec
inc
jle
bound
repz
dec
or
je
fs
and
stos
mov
mov
mov
or
push
and
out
dec
mov
fldl
jne
cli
push
sub
mov
scas
fldl2e
mov
daa
sub
std
push
mov
out
das
cmp
push
dec
add
sti
push
mov
sbb
xchg
mov
lret
jnp
das
imul
shlb
xchg
pop
jle
hlt
sarl
bound
ret
int
imul
jmp
cmpb
aas
mov
push
xchg
fxch
ds
adc
mov
jmp
sahf
gs
aam
xchg
xlat
pop
mov
sbb
ljmp
cmp
stc
add
or
lds
cld
shr
mov
mov
stc
adc
xchg
push
cmp
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
mov
push
push
call
adc
lret
mov
decl
out
cmpsb
aam
ljmp
sbb
scas
mov
add
sbb
repz
pushf
cmp
xchg
es
mov
mov
jmp
int
punpckldq
fwait
mov
out
sub
lcall
movsb
ficompl
or
insb
dec
dec
or
jp
test
sbb
sub
mov
jne
push
loop
pushf
shll
adc
xor
mov
adc
stc
insb
add
call
into
icebp
shl
sbbl
loop
cmp
sub
and
inc
cmp
out
pop
lods
stos
pop
sbb
loope
sbbb
rolb
inc
mov
ret
dec
xor
movl
push
pop
adc
in
cltd
popa
mov
sub
jge
sbb
repnz
mov
xor
dec
xchg
dec
daa
in
ret
mov
mov
outsb
loope
cli
and
ja
xchg
pop
out
mov
outsb
scas
pop
shll
sub
jp
xor
pusha
dec
xor
pop
sub
pop
leave
sbb
sub
cli
gs
sub
jo
mov
sbb
lcall
movsb
out
xlat
ljmp
fcompl
outsl
jmp
dec
jg
mov
and
inc
in
jnp
cmp
xchg
add
js
cld
and
sub
and
fwait
testl
fcompl
bound
dec
in
icebp
cmpsl
jae
xor
mov
fld
aaa
xor
lahf
or
pushl
cmc
addr16
xchg
sbb
inc
movsb
xor
jge
add
stos
repnz
adc
inc
dec
mov
adc
xchg
adcb
and
repz
filds
adc
xor
gs
aas
push
xchg
pop
pop
int
push
js
xchg
gs
pop
cmp
fldl
push
ja
data16
cmpl
lret
adc
ret
mov
mov
push
jnp
clc
ss
lret
insl
outsl
or
sbb
call
out
inc
cmpsb
inc
sub
or
stc
xorl
rclb
lahf
stc
mov
fstps
dec
das
sub
dec
ss
or
scas
loope
lods
aad
fnstsw
mov
sub
and
push
jno
adc
sbb
addr16
add
or
adc
sahf
adc
lods
dec
add
pushf
adc
add
inc
and
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
ljmp
xchg
movlps
aaa
cmpsl
push
sbb
xchg
dec
mov
mov
jns
cs
bound
std
inc
cmp
call
inc
popa
rcrb
fwait
cmc
mov
inc
dec
shrl
stc
dec
in
in
ror
cmpsl
pop
mov
jge
sahf
or
fsubrl
iret
push
ss
mov
or
jmp
jne
cmp
cmp
push
jne
or
mov
and
test
call
hlt
enter
adc
and
add
add
inc
add
xchg
mull
cwtl
repnz
xlat
push
inc
fwait
mov
rol
pop
cmc
mov
aaa
repz
xchg
aas
dec
enter
lretw
idivb
mov
dec
xchg
repz
pop
or
cmpsl
test
rorl
out
xchg
daa
or
dec
push
add
push
mov
ficomps
lret
xor
fstpl
xchg
jne
fmuls
sbb
cmc
dec
push
enter
ficoms
jno
int3
in
xchg
jl
xchg
inc
mov
call
bound
mov
ret
pop
movsb
int3
mov
push
daa
lock
xchg
lcall
in
popf
gs
mov
movsl
mov
lret
out
mov
mov
imul
cld
xor
das
repnz
outsb
xchg
mov
xchg
mov
sub
mov
stos
jmp
leave
vpsubd
shll
xchg
mov
cmp
int3
cmp
call
mov
outsb
dec
fstps
cltd
movsl
ss
mov
push
sahf
addb
jne
adc
popf
into
loope
mov
add
push
cmpsl
jns
adc
les
movsb
int3
and
nop
pushf
xchg
inc
ja
jnp
mov
scas
push
sub
fidivl
mov
pusha
test
dec
movsb
pop
dec
add
inc
lcall
push
jbe
mov
cltd
addl
jbe
std
sarb
shrl
pop
stos
test
pop
cmp
gs
out
hlt
data16
imul
add
jnp
xor
popa
mov
hlt
mov
dec
push
fiadds
pop
jl
in
mov
je
adc
pop
mov
test
mov
cmp
jle
and
push
push
add
hlt
js
push
adc
push
push
sub
cmp
leave
sbb
sub
dec
nop
jecxz
mov
out
lahf
leave
pop
pop
addr16
adc
insb
add
in
lods
inc
or
rorb
andl
movsb
popf
imul
push
call
mov
adc
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
dec
movsb
js
stc
adc
adc
or
mov
and
into
cld
mov
stos
stos
adc
push
jbe
scas
jl
adc
sbb
mov
sub
iret
sub
out
pop
pop
or
imull
mov
dec
sub
sbb
jle
test
push
int
add
insl
and
jmp
push
xchg
adc
and
shll
sbb
xchg
repz
imul
mov
fstp
out
add
stc
jo
lods
mov
mov
or
sahf
pop
shll
sub
fsubrs
inc
dec
mov
push
mov
or
imul
or
inc
mov
pop
div
and
push
addr16
subb
dec
and
sbb
cmc
aad
xchg
inc
repz
cmp
testl
fildll
icebp
mov
gs
ljmp
divl
cmp
cmpsl
jae
daa
insb
in
movl
aam
adc
jl
xor
stos
cmp
push
xchg
sub
dec
stc
or
call
mov
push
cs
jbe
js
xor
lret
fldenv
mov
jp
jge
sub
loopne
fnstenv
cmp
in
mov
clc
and
adc
push
mov
mov
add
and
das
cmp
test
xor
xchg
bound
outsl
repz
lret
mov
sub
push
divb
jl
pop
pushl
add
jecxz
sbb
xor
dec
dec
add
rclb
leave
and
jl
adc
int3
sub
outsb
xor
out
xor
addb
pop
jmp
lret
inc
inc
in
mov
xor
bound
out
pusha
cld
jecxz,pt
mov
ljmp
or
and
push
xchg
loop
in
xor
insb
sub
mov
push
xlat
aaa
pop
movsl
js
add
jnp
jae
jmp
mov
lods
sbb
push
mov
push
push
sbbb
and
mov
mov
out
inc
mov
fildll
sub
cltd
lds
lret
in
sbb
pop
and
add
jns
jle
jae
cmc
shll
mov
imul
lods
aad
fwait
or
stos
stos
mov
mov
clc
arpl
sbb
mov
push
dec
mov
push
push
xchg
ljmp
dec
lcall
std
popf
xchg
stc
call
sahf
fnsave
adc
adc
ret
imul
push
or
test
and
ret
add
mov
add
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
cmp
jle
out
adc
adc
into
shl
dec
add
xor
pop
sub
fucomp
popa
out
fistps
lock
sbb
in
sub
pop
cmp
leave
mov
into
push
xchg
jmp
cmc
sahf
outsb
xor
js
push
sahf
dec
fdivrp
mov
test
sbb
mov
xchg
test
mov
mov
sub
inc
les
push
cmp
lret
sahf
pop
aam
jg
fisttpl
cltd
sbb
insl
ds
ljmp
adc
in
adc
lds
push
pop
adc
leave
mov
cmpsl
lret
fistpll
shr
adc
cld
sub
lods
and
dec
adc
push
fnstsw
inc
mov
pop
and
jo
mov
icebp
push
adc
aad
out
push
cmp
mov
repnz
add
jns
fwait
stc
push
push
push
cmp
mov
sbb
jg
test
lock
sub
jg
out
cld
mov
in
enter
rorb
xchg
push
fsubp
mov
mov
fimuls
mov
push
inc
sub
xor
into
sub
and
mov
jno
movsb
inc
jo
insb
sahf
enter
adc
movsb
in
ljmp
mov
pop
js
sbb
xchg
loope
enter
mov
jbe
fwait
je
rol
xor
gs
add
jo
jae
popa
or
or
mov
aaa
sub
cwtl
sbb
xor
addr16
je
xchg
fisttps
fisubrl
lock
fcompl
cmpsl
icebp
or
clc
pop
out
push
dec
sub
popf
push
dec
cwtl
jl
xor
decb
push
mov
or
adc
ficoml
enter
push
pextrw
jno
stos
or
inc
xchg
xchg
sub
iret
jmp
stos
push
fwait
xor
aas
testb
pop
pop
mov
pop
sbb
imul
cmpb
sbb
aaa
adc
mov
pop
out
sbb
jg
hlt
and
fdivrs
xchg
outsb
leave
lret
xor
lret
ljmp
ret
adc
outsb
dec
inc
mov
xchg
or
cwtl
test
out
adc
out
xor
rcrl
xlat
cli
add
sub
pop
pop
fistpl
xlat
sub
sub
mov
mov
out
dec
aam
loopne
sub
jbe
inc
sub
adc
jg
dec
dec
aaa
pop
addr16
xorb
mov
test
mov
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
lea
loopne
sub
adc
pop
fstpl
inc
sub
xor
std
or
pop
cmp
shr
adc
add
test
stos
mov
jmp
into
pop
push
lods
xor
pop
fisttpl
jmp
cmp
fists
lds
push
pushf
out
push
roll
xor
mov
pusha
mov
sbb
sub
dec
fistpll
daa
mov
call
sbb
sub
iret
jnp
dec
lahf
pop
lret
xchg
out
xlat
mov
movsb
rorb
mov
or
sbb
sbb
push
loop
data16
mov
call
fs
xchg
mov
rorl
call
cmp
data16
and
adc
jne
jl
cmp
push
pop
int
sub
jo
test
bound
outsl
mov
imul
rorl
push
mov
test
pop
dec
loopne
mov
movsb
mov
jae
push
dec
lret
xchg
cmp
pushl
jno
xor
test
loopne
pop
lret
les
sbbb
test
fs
cmp
das
mov
jle
test
out
stc
jb
fdivl
push
add
dec
pop
inc
les
cld
push
push
and
mov
mov
push
jge
fbstp
adc
xchg
bound
mov
cli
mov
add
test
xchg
pop
inc
aas
ja
lret
add
xor
jbe
mov
fildll
jae
add
cmc
inc
xor
fists
pop
cmp
test
mov
ljmp
jne
notl
add
movsb
out
int
xor
xor
cmp
movsb
out
xchg
ja
or
jp
mov
aad
add
or
out
rcl
sbb
into
sahf
add
movsb
shrl
rol
mov
cmp
aas
pop
mov
cmpsl
gs
dec
push
xchg
int
insb
xchg
loope
xchg
mov
arpl
popf
mov
inc
mov
cltd
test
fisttps
jle
inc
inc
jae
mov
enter
daa
fiaddl
or
out
xchg
mov
dec
cltd
je
pop
orl
leave
popf
push
fmull
push
dec
ljmp
ret
imul
mov
rcr
sub
jecxz
cmp
xor
lods
in
loope
mov
sub
push
jne
lods
mov
imul
adc
pop
mov
dec
inc
mov
out
test
shlb
int3
adc
pop
outsl
arpl
add
and
ret
sub
pusha
cmp
shll
and
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
xor
nop
js
in
adc
mov
cmpsb
add
cmpsl
sti
xor
lret
nop
lahf
mov
inc
outsl
pop
lcall
add
mov
in
fidivrs
fisttpl
out
mov
roll
jns
sub
xchg
push
cmp
mov
test
mov
imulb
arpl
adcb
xchg
call
pop
jbe
jae
push
icebp
inc
pop
inc
pop
dec
adc
pop
adc
test
add
jns
pop
out
xchg
dec
adc
mov
jb
aaa
push
cmp
sbb
lahf
push
cmp
mov
mov
mov
sub
jecxz
or
pop
fimuls
jae
stos
hlt
lret
pushf
dec
adc
aaa
cmpsl
push
sbb
popf
sub
mov
lahf
scas
daa
inc
cmp
dec
fwait
icebp
ret
js
mov
addr16
add
mov
fldenv
fcmovu
mov
rcrw
addb
cli
leave
stos
pop
or
lret
push
loope
push
pop
push
sbb
lret
fs
push
enter
mov
shll
mov
sbb
stos
dec
lds
pop
call
jbe
subb
movhps
movzbl
fidivrl
pop
iret
stos
aad
notb
fwait
insb
mov
mov
inc
fstpt
cmp
int3
test
loopne
fistpl
and
ret
xchg
outsl
outsl
or
sarl
loopne
adc
aas
pop
dec
push
push
mov
dec
roll
adcb
test
movsb
stos
call
adc
mov
fisttpll
cwtl
sub
movsl
sub
movsb
lret
xor
ljmp
xchg
xchg
lea
in
call
push
fldt
pop
pop
jge
iret
or
xor
loop
aad
out
mov
je
fnstsw
jg
mov
jge
and
mov
xor
stos
test
mov
daa
stos
mov
jo
xchg
mov
inc
leave
loopne
push
out
sbb
dec
xor
xchg
imulb
test
lods
sti
movsb
push
pop
fldl
aam
lcall
push
scas
xchg
stos
mov
jg
pop
push
and
or
les
lods
flds
cmp
sub
mov
sbb
jge
icebp
xchg
fsubp
stc
inc
hlt
mov
es
sub
inc
orb
mov
outsb
lock
insl
xor
dec
mov
lret
mov
adc
cmp
loope
js
push
or
js
negb
inc
cs
lds
jae
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
fiadds
jnp
adc
adc
inc
pusha
sbb
addr16
aam
adc
loopne
jbe
jecxz
aad
cmp
adc
xor
add
mov
add
xlat
repz
in
cltd
lahf
mov
sbb
pop
and
lahf
lahf
movsb
push
mov
mov
jmp
stos
fidivs
stos
roll
xchg
cmp
mov
add
daa
loopne
fisubrl
test
inc
out
jnp
shrb
jno
scas
push
aam
pop
adc
loope
roll
std
dec
sbb
xchg
mov
cmp
in
mov
sbb
sahf
fwait
gs
xchg
cmp
jle
mov
lds
mov
aas
addr16
push
cmc
jge
lahf
and
rcrb
push
iret
addr16
mov
push
xor
dec
fsubs
push
les
sbb
fs
shll
popf
inc
lods
dec
ret
ja
movsb
jo
rclb
push
arpl
dec
xchg
and
mov
in
loope
dec
in
sqrtps
arpl
xor
cmc
sub
sahf
dec
lahf
std
out
xchg
jl
jne
pop
dec
sarl
jae
in
rcll
cmp
push
ljmp
imul
inc
push
movsl
jno
sub
cmp
shl
sub
pop
aam
sbb
fwait
cmpsb
or
test
sti
lahf
loopne
imul
cmp
or
or
ja
out
dec
das
movsl
js
pop
and
fisubs
sarb
cld
mulb
mov
loope
icebp
cmp
xchg
into
sub
mov
mov
lahf
popf
mov
aad
sub
mov
cmp
sbb
cwtl
icebp
inc
adc
mov
ficoml
cli
std
push
jp
jns
adc
stos
xchg
popa
test
shld
stos
add
insb
mov
nop
aaa
cmp
in
cld
push
nop
xchg
add
mov
cmpsb
daa
loopne
dec
repz
xor
cmpsl
pop
sbb
inc
inc
mov
in
mov
mov
push
inc
mov
pop
pop
mov
sbb
fidivrs
mov
mov
xchg
pushf
push
xorl
jbe
mov
ss
inc
insb
sbb
dec
dec
inc
mov
push
mov
repz
je
jg
rorl
dec
fnop
ret
ss
or
xchg
mov
mov
iret
adc
inc
jbe
rorb
sub
dec
aam
sbb
movsb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
cmc
loope
dec
mov
cmpsb
inc
mov
sbb
or
mov
xor
cmovg
xlat
mov
stc
cwtl
or
adc
sbb
jbe
cmp
push
sbb
lods
rolb
stos
ret
xchg
adc
hlt
or
mov
adc
cmpsl
pop
mov
popa
sub
out
and
xor
adc
adc
out
pop
mov
test
mov
ret
sbb
das
jmp
push
fistpll
and
sub
xchg
bound
jnp
adc
cwtl
ds
imul
stos
adc
in
jmp
lret
sbb
jne
cmp
imul
add
cmp
adc
les
ja
add
jge
ja
xlat
jecxz
jmp
sbb
out
fxch
pop
je
cmp
or
inc
xchg
pop
mov
push
xchg
adc
orl
dec
bound
js
fmul
push
lock
push
loop
jbe
jbe
popa
adc
and
outsb
cmpsb
add
sbb
cs
pushf
fsubl
cmp
jle
out
lods
dec
xchg
inc
mov
lods
adc
dec
iret
push
sub
pop
es
xor
and
inc
inc
xchg
sub
shrl
outsb
add
xchg
and
lahf
push
lds
fiadds
ja
cmp
popf
fbstp
sub
sub
push
fisubrs
rcl
std
stos
xor
loopne
dec
xor
jp
push
mov
push
out
mov
add
mov
sbb
shl
lea
cmp
mov
out
xor
into
cmp
cmpl
add
adc
jae
mov
lock
cmp
flds
adc
cmp
jae
clc
jecxz
add
jmp
mov
fs
push
andl
jp
int3
insl
jno
in
shll
sub
lret
repz
add
cmpsl
jecxz
cmpb
add
cmpsb
pop
das
or
pushf
dec
cltd
jnp
pushf
mov
mov
push
lea
jmp
scas
inc
sub
rcrb
fldt
hlt
cmp
xchg
add
xchg
out
mov
or
ja
outsl
dec
jl
push
sub
das
sbb
sub
leave
dec
pop
pop
push
iret
dec
fidivl
inc
stos
cmp
mov
popa
add
aad
in
xchg
cld
push
sbb
in
popf
inc
jae
lds
push
popf
repnz
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
imul
adc
adc
jge
pop
lods
cmp
pop
pop
sbb
xor
pop
nop
xchg
lods
mov
sti
aam
test
xchg
sub
adcl
mov
stc
loopne
loopne
jae
outsl
out
push
nop
outsl
testb
xchg
mov
xor
pusha
mov
cli
jecxz
jg
push
fwait
int
cmp
and
ret
out
and
pushf
outsb
fwait
jl
lods
mov
pop
loop
leave
out
mov
into
lea
loope
pcmpeqd
mov
sub
jmp
sbb
outsb
aad
rol
in
sbb
lcall
cmpb
lea
mov
xlat
mov
sub
icebp
scas
push
fwait
xchg
push
les
pop
stos
loop
cmp
shll
stos
hlt
sub
cmpl
rep
jmp
in
push
cmp
cmp
movsl
scas
mov
push
xchg
sub
xchg
test
and
adc
lret
test
mov
hlt
das
jmp
xor
xchg
push
jecxz
jno
xor
std
mov
or
push
arpl
popa
shll
mov
arpl
ds
cmp
inc
inc
sbb
clc
xor
mov
push
push
rcr
sub
sbb
cmp
mov
add
jne
lds
xchg
movsb
push
addr16
add
js
sub
je
pop
and
cld
decl
icebp
inc
data16
in
hlt
pop
or
cmpl
mov
leave
mov
xor
mov
xchg
fwait
stc
mov
sub
mov
lods
in
popf
insl
dec
lahf
sbb
mov
or
xor
mov
dec
std
mov
xor
mov
sbb
mov
mov
jae
pop
les
add
in
inc
pop
push
push
push
ljmp
xor
outsb
roll
cltd
lahf
cmpsl
arpl
imul
inc
sarb
add
inc
jno
into
sub
scas
lock
inc
mov
mov
sbb
and
pop
xor
mov
in
repz
xor
cmp
pop
aas
push
das
sbb
outsl
mov
imul
movsb
pop
std
cli
sub
adc
hlt
icebp
aaa
inc
inc
fcompl
psubusw
xorl
jne
movsl
lahf
fisttpl
and
jle
push
call
inc
adc
inc
add
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
out
in
xchg
and
in
pop
push
cmp
jge
loope
aaa
std
out
add
jp
std
xor
lods
mov
xor
test
mov
inc
pusha
aas
rcll
lods
push
insb
cmp
cmp
mov
push
push
xchg
fdivl
sub
sbb
aad
xchg
sub
mov
ficoml
mov
add
pop
push
lahf
or
mov
mov
sub
pop
in
mov
out
mov
aaa
xor
out
or
lahf
adc
arpl
cwtl
pop
arpl
jne
test
jl
xchg
xor
push
imul
lahf
and
inc
pop
fwait
jnp
inc
or
dec
cmpsl
ret
scas
cli
lcall
outsb
test
and
fstps
pop
and
adc
arpl
fsin
jbe
pop
sub
mov
xchg
mov
fcompl
cmp
inc
fs
push
mov
les
scas
repnz
add
and
add
int3
repz
sbb
inc
add
in
add
test
and
inc
fcoms
and
sbb
mov
movsl
fldl
arpl
mov
mov
je
dec
sbb
inc
mov
aas
cld
or
xchg
in
aad
pop
cs
stos
mov
push
hlt
dec
mov
xchg
inc
push
xchg
adc
enter
ficoml
sub
xor
ret
mov
shlb
xchg
out
sti
sbb
mov
push
fwait
inc
mov
lods
pop
test
jecxz
adc
mov
lret
jbe
ljmp
cs
inc
loopne
xchg
mov
cmpsl
pusha
inc
pushf
aaa
fildll
shrb
das
push
push
gs
inc
out
xor
mov
mov
mov
pop
iret
pop
mov
dec
es
dec
mov
push
and
add
push
jmp
cltd
repz
push
cmpsb
icebp
push
xchg
jl
mov
outsl
sbb
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
stos
in
jle
into
adc
adc
iret
jmp
roll
sahf
cwtl
mov
cmp
ret
fcmovnb
outsb
sub
mov
hlt
xor
in
daa
or
loope
cmp
add
outsl
inc
adc
sub
push
out
jge
pop
inc
ret
fbld
rolb
fcmovu
or
mov
fs
cmc
pop
mov
dec
popa
lods
xchg
cmp
jbe
xchg
dec
mov
cmp
outsb
stc
loope
out
dec
fisttps
frstor
mov
sbb
push
mov
mov
xchg
mov
pop
cmp
fmull
stos
xor
xchg
stc
repnz
sub
nop
push
fiaddl
inc
in
std
jmp
cmc
jo
rcll
hlt
clc
mov
or
dec
dec
xchg
xor
inc
enter
xor
jecxz
outsb
shlb
lret
iret
or
js
ret
aaa
lock
adc
test
pop
lods
push
push
xor
dec
sub
cmp
leave
rorl
jp
rcrb
cmp
mov
ficoml
push
repnz
repnz
negl
adc
leave
inc
ss
rolb
cmp
mov
cmpsb
adc
pop
inc
inc
push
lahf
adc
pop
cmp
rcrb
cmp
mov
lods
orps
in
loope
mov
push
xchg
in
inc
pop
lahf
add
in
daa
std
ja
out
and
outsl
pop
push
dec
inc
jns
aas
xor
loope
orl
fdivrl
mov
sbb
xor
pop
arpl
jge
cld
jge
test
lock
inc
sub
inc
in
aad
mov
pop
imul
nop
loopne
into
sbb
movsb
std
fistpl
nop
cmp
push
aas
stc
jmp
sub
aaa
mov
pop
add
cmp
nop
push
loop
aas
adc
jmp
repnz
pop
in
inc
rorl
loope
xchg
jl
bnd
xchg
cmp
adc
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
xor
xor
enter
push
insb
push
and
inc
stos
sarb
mov
xor
dec
sub
stc
insl
mov
fst
sbb
dec
icebp
and
xor
mov
stos
cmpsl
fisubrl
dec
jg
push
mov
jbe
test
xor
push
bound
add
popf
mov
push
sub
aaa
gs
stos
rol
out
and
into
jg
pop
test
sbbb
outsb
loope
roll
fsubrs
jg
and
add
bound
jp
sub
xchg
scas
ljmp
popf
jae
xor
ds
repz
mov
add
mov
cltd
cwtl
sub
stos
add
xchg
dec
sub
sti
int
and
shl
fnstenv
out
adc
cmc
mov
adcl
ljmp
repnz
out
xchg
xchg
arpl
adc
mov
dec
into
mov
add
sbb
scas
inc
lret
push
add
jle
inc
or
incb
xor
xor
mov
mov
adc
and
jle
sbb
aad
mov
or
jle
dec
jae
and
jns
mov
mov
ja
in
pcmpeqw
sarl
das
sub
mov
scas
outsl
repnz
sahf
xor
scas
or
jnp
dec
repnz
push
idivb
jle
xchg
ds
mov
sub
cmpsb
fcmovne
inc
loopne
insl
rcll
adc
cltd
mov
in
push
cmp
cmpsb
push
test
sar
or
and
sbb
in
add
jge
or
dec
mov
fwait
cli
cmp
xchg
jb,pn
add
clc
mov
adc
mov
lods
js
or
mov
andl
dec
fistps
sbb
xchg
stc
mov
das
cmpsl
sbbl
stos
jmp
and
outsb
xchg
fst
iret
out
sbb
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
dec
xor
enter
rolb
ret
jp
lods
lea
mov
cltd
sbb
test
dec
subb
push
xchg
fidivrl
addr16
mov
add
sbb
xor
ljmp
insl
aam
call
inc
loopne
daa
sti
sbb
mov
or
rolb
push
clc
xlat
ljmp
push
out
cmc
dec
nop
loop
pop
sub
es
push
cwtl
fstps
adc
inc
fsubrs
jo
jnp
rolb
sti
mov
and
fadds
mov
mov
hlt
jp
clc
roll
push
jl
aas
ljmp
sbb
insb
aaa
cld
push
out
jp
mov
mov
sti
xlat
lahf
pop
xchg
scas
shrb
pop
fnsave
add
jns
mov
push
push
ja
pop
sbb
aad
out
cmp
in
pushf
ds
call
xchg
mov
jbe
and
out
imul
addr16
xacquire
out
lds
loope
test
subl
push
jmp
add
or
fstpl
mov
outsl
pop
xor
pop
popf
mov
fs
dec
mov
jne
jecxz
adc
mov
int3
add
cmp
imul
insb
mov
cltd
icebp
test
setns
push
repnz
xor
xchg
add
or
sbb
xchg
in
frstor
pop
push
adc
sub
sbb
dec
jo
push
jmp
add
mov
mov
cmc
sub
jnp
repz
jge
addr16
int3
lods
in
ja
mov
xor
adcb
scas
iret
les
test
adc
mov
stos
scas
and
xlat
mov
jae
xchg
cmc
lret
aam
push
mov
stos
test
inc
int
add
cmp
imul
loop
mov
negb
aas
shl
push
rolb
mov
jo
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
lret
sarb
ret
enter
sub
and
mov
in
in
loope
rcrl
mov
and
loopne
jb
mov
sahf
lcall
fdivrl
and
bound
loope
and
das
dec
pop
inc
fsubrl
lret
mov
sbb
lret
fs
fidivrs
jnp
adc
fdivl
sbbl
add
inc
idiv
xorb
add
and
adc
into
xchg
ret
fisubrs
in
andl
sbb
fcomps
lds
cli
ljmp
cmp
ja
xor
loopne
jne
jecxz
or
mov
scas
ret
scas
notl
idivb
jo
sbb
imulb
push
daa
into
sub
jo
loope
bound
ljmp
fldl
cmpsl
in
or
sbb
jmp
scas
notl
and
daa
lods
push
in
cmpps
repz
in
mov
xlat
inc
in
addr16
sbb
fs
xchg
dec
cmp
loop
cltd
fbstp
test
mov
iret
and
push
dec
inc
movsb
mov
sbb
dec
sbb
jp
nop
stos
ljmp
xchg
lock
sbb
xchg
in
je
test
in
or
shl
jns
add
test
pop
xchg
pop
mov
es
repnz
hlt
jb
neg
mov
iret
addr16
sarb
insb
jmp
scas
inc
and
and
test
push
bound
into
and
mov
dec
in
mov
mov
pop
jl
mov
data16
mov
repnz
xor
push
jl
fisttpl
inc
jne
or
cld
pop
and
ljmp
push
stos
sbb
inc
std
jnp
daa
sarb
push
bound
cmp
inc
or
inc
mov
imul
push
shr
das
and
mov
gs
xor
ljmp
xor
inc
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
xchg
jmp
jge
adc
adc
test
in
and
sub
ffreep
fcompl
leave
stos
xlat
jmp
shrl
or
cwtl
shll
and
mov
push
bound
pop
add
pop
inc
mov
push
cmp
cmp
cmpsl
xchg
in
or
mov
repnz
gs
orl
mov
mov
jns
fnstenv
aad
popa
bound
xor
imul
cwtl
cli
sub
mov
enter
add
das
pop
int3
das
xor
popa
movsb
lds
mov
sub
dec
out
xchg
sub
in
or
push
mov
sub
jl
pop
js
negb
out
mov
repnz
cmp
adc
xchg
pop
notb
sub
adc
or
stc
xchg
pop
jp
push
jo
imul
fildll
fwait
and
addl
push
inc
imul
pop
mov
pop
pop
sbb
mov
aam
push
jge
mov
mov
add
sub
inc
pop
sub
jmp
pop
cmp
in
sub
sub
ret
jns
cltd
push
jne
scas
cmp
xchg
or
call
mov
inc
js
mov
mov
int
add
sbb
sub
test
sub
adc
loop
movaps
aad
mov
dec
hlt
mov
inc
cmp
addr16
mulb
std
imul
stc
pusha
inc
pop
jge
das
adc
adcb
inc
pop
push
stos
jns
icebp
sbb
add
rcrb
ficoml
jg
pop
xor
mov
xchg
in
pusha
rcl
xor
and
mov
sarb
sbb
xchg
mov
pushf
loope
pusha
jmp
inc
rorl
xchg
xor
xchg
test
dec
push
push
lods
and
lods
js
imul
test
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
or
enter
test
aas
ljmp
pop
fcomps
push
sub
jg
sti
sbb
in
aam
xchg
or
sahf
pop
mov
aaa
adc
stc
mov
push
shll
sti
imul
cwtl
loope
daa
ret
inc
and
and
insb
add
ds
sub
or
pop
mov
repnz
lret
inc
cmp
test
and
jecxz
jne
pusha
rolb
lahf
mov
addr16
jno
mov
mov
icebp
gs
jle
or
jle
sub
sub
xchg
aas
jb
inc
mov
or
jbe
xchg
mov
dec
dec
aad
jle
daa
mov
sahf
roll
lock
cli
sbbb
xchg
ljmp
ja
outsl
lcall
jg
std
sbb
mov
out
sub
jmp
sbb
pusha
out
mov
and
jge
imul
fimuls
stos
sbb
faddl
test
scas
aaa
xchg
inc
repz
fidivl
lods
fcomps
bound
pop
popf
or
nop
pop
pop
sub
lods
fsubl
push
mov
pop
pop
dec
mov
sbb
imul
fisubrs
sahf
xchg
enter
xor
shlb
xor
and
shr
xor
das
xchg
dec
shll
mov
cmp
stos
and
int
push
adc
in
xchg
and
mov
xchg
mov
or
pushf
daa
mov
movsb
test
ljmp
adc
push
ljmp
jbe
fldcw
loope
adc
pop
test
or
mov
sbb
fs
rclb
mov
loop
push
mov
cwtl
stos
loope
mov
daa
fidivl
jne
es
gs
lahf
test
pushf
sub
fdivr
loope
jo
jmp
dec
sbb
les
fcmovnbe
fwait
in
dec
adc
adc
pop
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
es
out
adc
adc
sarl
outsl
repz
sti
lcall
lret
addr16
cmp
gs
stc
cld
mov
sahf
jne,pt
les
push
imul
push
add
jnp
mov
shrb
push
int3
jnp
aaa
les
lock
and
daa
sbb
lret
xor
inc
mov
xor
adc
call
jne
jmp
out
mov
mov
data16
mov
and
mov
shll
push
pop
jno
add
pop
xchg
or
sbb
or
lods
outsl
mov
in
idivb
sbb
fs
shlb
pop
and
mov
or
xchg
cs
xor
cmovle
mov
xor
out
int3
into
int
popf
fcompl
test
cltd
adc
push
fdivr
lahf
cmc
push
mov
imul
fisubs
cmp
loop
mov
jbe
inc
stos
mov
add
adc
fists
pop
nop
push
or
push
shrb
inc
cmpsl
cmpsb
pop
lods
xor
je
aas
cltd
xchg
jno
push
push
pop
mov
scas
mov
inc
push
and
pop
pop
add
addb
push
movsl
push
mov
into
leave
ret
mov
dec
repnz
adc
pop
push
pop
fldcw
pop
mov
lcall
test
dec
sub
adc
mov
bound
bndstx
push
imul
xchg
mov
dec
es
cmp
insb
cmp
stc
outsl
inc
dec
pop
jno,pt
jg
inc
rclb
cmc
mov
rcll
shlb
cmp
scas
and
mov
int3
movsb
push
enter
popa
dec
lcall
inc
xor
xchg
sub
fstpt
or
sub
test
sbb
mov
aad
gs
repz
jge
popf
test
fiadds
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
ja
inc
stos
lcall
adc
sahf
pop
sbb
mov
shrb
jbe
push
adc
add
jl,pn
shl
jmp
js
inc
popf
sub
lret
lds
jg
mov
imul
push
lods
push
inc
lea
xchg
hlt
call
and
stc
bound
scas
pop
jns
out
out
sbb
xchg
ljmp
push
xchg
xchg
mov
mov
dec
scas
adc
in
test
jo
imul
mov
stc
mov
sbb
mov
adc
mov
mov
xor
jl
sbb
add
outsb
xor
mov
test
ret
hlt
mov
push
iret
scas
jl
imulb
and
and
decb
add
dec
test
jmp
outsb
and
shll
push
jb
dec
cld
clc
or
dec
mov
pushf
cmp
sbb
aas
int
xor
loop
mov
out
fwait
mov
sbb
ret
js
pop
dec
ret
into
cs
jge
sub
xor
push
test
lcall
ficompl
sbb
xlat
mov
mov
aaa
repz
adc
lods
lahf
movsl
dec
clc
mov
out
lea
movsl
or
sub
add
sub
dec
and
inc
dec
shrb
dec
inc
xchg
add
dec
fildll
jne
sbb
das
test
xor
mov
out
sub
mov
cld
push
lods
pop
inc
stc
jne
cmp
jne
fiadds
push
imul
pop
mov
inc
lock
cmp
mov
and
mov
inc
cmp
jnp
gs
das
push
movsb
test
fs
int
insb
aas
in
push
xlat
shr
adc
outsl
cmp
loop
add
fs
outsb
addl
into
mov
inc
stc
lods
je
fisubrs
sti
lods
aad
pop
add
push
jg
ja
mov
push
daa
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
xchg
insb
dec
test
adc
movlps
mov
cwtl
cmpsb
or
add
or
push
add
cld
and
pop
and
push
pop
add
sbb
ret
arpl
jb
dec
imul
push
test
adc
call
inc
movsb
jno
pop
jb
ljmp
outsb
xchg
clc
outsb
loop
xor
mov
sub
fimuls
jp
mov
ret
push
xor
mov
xlat
aaa
insb
in
imul
jne
xchg
jge
push
out
sarl
cmp
or
xchg
icebp
push
fbld
jge
jl
mov
cltd
sbb
rcrb
jae
xor
xchg
pop
mov
and
mov
test
aad
sbb
xor
mov
outsb
jb
cmp
mov
addl
pop
loopne
mov
andl
sbb
mov
aam
adc
ja
js
das
fdivrs
jo
dec
sti
mov
in
in
dec
leave
mov
fndisi(8087
dec
aad
ja
push
adc
jl
push
sub
inc
filds
or
sub
fsubrl
push
jge
xor
dec
in
jo
pop
add
jp
bound
push
int
loop
pop
xor
or
mov
jo
add
cmpsb
out
sti
scas
scas
sbb
test
pop
loope
enter
adc
out
aas
mov
pop
add
mov
bound
push
mov
and
dec
fdivs
inc
pop
ret
xor
rorb
push
divl
das
addl
test
cmp
add
fcmove
jae
out
and
shrl
adc
filds
add
push
add
bound
and
push
mov
sub
pop
xor
out
hlt
pop
cwtl
lods
ds
pop
inc
push
add
sbb
insb
push
mov
aaa
cmp
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
jle
mov
enter
enter
jno
out
push
in
arpl
aad
movsb
jne
scas
pop
rcrb
sub
jp
or
xchg
lahf
das
dec
stos
test
mov
pop
add
fucomi
gs
xor
sbb
mov
adc
imul
rorl
adc
sub
cltd
push
jge
mov
iret
mov
xchg
mov
pop
in
push
bound
cli
add
jnp
jbe
sub
cmp
jle
inc
or
mov
imul
jg
leave
mov
fcompl
inc
xchg
lock
enter
dec
pop
or
fwait
test
sbb
xchg
xchg
dec
mov
stos
test
rol
lods
aam
mov
pop
mov
ja
lcall
scas
pop
sbb
adc
in
pop
add
mov
das
xor
sbb
inc
xlat
loop
pop
in
sbb
pop
cmp
std
fimuls
xor
stos
xor
decl
sub
mov
cmp
inc
inc
mov
lock
sub
cmp
cmc
daa
pop
adc
imul
shll
fwait
jno
pop
jge
add
sahf
mov
mov
jle
test
mov
jle
ficoms
add
adc
cs
rcr
mov
loopne
inc
add
loop
je
mov
insl
out
scas
in
hlt
lock
xor
pop
mov
sbb
add
icebp
inc
decb
xor
pop
arpl
jmp
js
adc
cmpsb
sbb
and
repz
shlb
xor
push
daa
cmp
sbb
gs
dec
lahf
inc
mov
push
pushf
adc
insl
sbb
mov
inc
mov
add
test
jae
xchg
sub
and
lret
dec
into
fsubs
shrl
jecxz
into
and
aas
gs
lds
mov
mov
inc
add
int
pop
mov
and
test
repnz
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
loope
mov
enter
clc
xor
ljmp
dec
icebp
fld
loope
and
mov
jl
shl
sub
imul
mov
adc
jp
clc
pushf
dec
mov
fdivs
sub
jns
pop
iret
popf
mov
movsl
or
repz
stos
mov
aad
repnz
sahf
pop
popf
inc
icebp
sarl
mov
mov
mov
bound
insl
ss
pop
fnstsw
aad
dec
pop
mov
adc
call
call
in
repz
push
and
dec
dec
je
lret
sbb
sbb
daa
mov
clc
lods
daa
mov
inc
mov
xchg
xchg
mov
add
mov
rolb
xchg
or
out
mov
rcrb
mov
add
in
jns,pn
add
jo
lods
xchg
lods
jmp
pop
push
pop
stc
jmp
sub
arpl
jno
aas
xchg
mov
add
push
lock
mov
jmp
pop
jge
lahf
cmp
sbb
cli
sub
cmp
adc
jb
pop
push
pop
push
movsb
shll
repnz
aam
xchg
xchg
orl
lahf
push
js
jle
mov
mov
and
jmp
icebp
mov
mov
popa
into
xchg
add
rol
imul
dec
loop
test
cmp
dec
adc
das
test
into
dec
stc
mov
jno
mov
icebp
flds
rclb
iret
sub
xchg
sbb
sbb
outsl
insl
rcl
outsl
adcb
jp
adc
in
and
mov
mov
mov
cmpsl
das
dec
repz
push
push
inc
fsub
ja
push
inc
jl
xor
mov
or
sub
cmpsb
pop
jmp
adc
mov
ss
cmp
jge
sbb
inc
movsl
aam
mov
pop
addr16
push
fstl
and
sub
mov
in
mov
pop
popa
dec
push
mov
decl
test
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
lods
imul
xor
fdivs
jnp
mov
sub
push
xor
mov
xchg
sub
lods
adc
mov
sarl
sub
pop
mov
push
dec
jmp
pop
cmp
sub
fcmovb
add
mov
into
jmp
or
xor
xchg
clc
rol
mov
mov
test
cmp
ljmp
daa
fimuls
mov
inc
add
out
adc
dec
sbb
push
sbb
push
sbb
jp
jmp
lods
fs
lock
mov
movsl
in
movsb
frstor
add
int
pop
or
lods
out
lret
dec
pushf
int
outsb
jecxz
das
loopne
sub
imul
sub
test
in
cmp
arpl
insb
inc
mov
jne
push
lcall
cld
pusha
xchg
mov
aad
jle
roll
xchg
pop
aas
fcomip
dec
test
jg
sar
mov
out
cmp
out
cmp
mov
sub
mov
idivl
test
mov
sbb
add
popa
out
mov
or
sahf
and
push
cld
popf
out
aad
jl
or
arpl
mov
nop
mov
hlt
or
add
xor
and
scas
dec
lods
inc
sub
jne
test
decl
and
movl
mov
fstps
cmp
popa
and
adc
or
inc
aaa
loope
jle
mov
jmp
dec
mov
sub
add
sub
inc
sub
ljmp
jnp
lock
scas
mov
and
lock
adc
pop
test
sbb
pop
and
mov
xchg
es
lahf
push
adc
insb
adc
sbb
adc
scas
lds
xor
div
shlb
push
xor
enter
mov
movsb
or
das
stc
xor
test
push
test
ss
xchg
xor
inc
adc
mov
das
adc
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
jp
lods
sbb
movlps
test
cmp
pop
xchg
call
arpl
popa
arpl
std
mov
scas
mov
mov
js
mov
test
pop
idivb
jg
pop
imul
imul
movb
cmp
test
cmp
mov
fmull
xor
adc
xor
test
pop
popa
movsl
shrb
dec
rclb
dec
xor
rcll
sbb
inc
adc
cmp
test
dec
out
mov
add
fwait
pop
shlb
sub
or
bound
stc
es
aam
mov
jp
cltd
loopne
lock
cld
mov
sarb
jne
jnp
imul
test
shl
rorb
sbb
daa
aad
pop
aad
mov
xor
or
leave
cltd
xor
cmp
cmp
ficoml
cli
add
sti
inc
mov
in
add
test
das
lds
lds
aam
inc
and
mov
sbb
scas
and
lcall
fstpl
outsb
hlt
cmc
mov
jnp
mov
cmp
popa
into
xchg
das
popf
and
data16
lret
or
lahf
std
es
ss
in
in
imul
adc
add
dec
out
pop
sahf
inc
sub
mov
and
js
push
out
std
imul
call
pusha
cltd
fs
ret
mov
cmp
dec
arpl
std
pusha
dec
insb
test
pop
clc
in
mov
mov
sub
and
adc
mov
cmp
add
mov
push
repz
xor
popf
dec
mov
out
or
es
sbb
mov
std
xchg
mov
faddl
fwait
aas
aaa
push
mov
sub
xchg
xor
or
out
out
dec
hlt
cmc
insl
imul
sti
je
outsb
or
jg
dec
and
js
out
stc
xor
xchg
test
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
inc
and
xchg
adc
adc
cmpsb
ficoms
in
jmp
or
dec
subl
sbb
pop
jnp
popf
movsb
mov
pop
jns
xor
push
inc
scas
test
out
or
mov
dec
lods
punpcklwd
into
inc
pop
or
pop
sti
and
push
jl
lcall
and
test
push
les
mov
and
push
cs
dec
push
dec
cli
xchg
mov
mov
test
mov
cmp
loop
cmpsb
lahf
xor
gs
xchg
enter
mov
clc
cmp
mov
xor
or
jge
inc
add
fidivs
icebp
lret
push
outsb
ret
mov
mov
ror
add
insb
cmc
push
pop
pop
jmp
sub
mov
decb
lret
jnp
test
jl
aad
lea
cltd
shlb
push
inc
xor
mov
pop
test
jae
ret
inc
jno
push
pop
fsubrl
jg
ljmp
pop
adc
pop
fildll
jmp
std
mov
mov
out
rcl
jp
iret
xor
je
jbe
js
icebp
mov
xor
lret
popa
jns
push
sbb
aas
xor
movsl
enter
xorl
js
data16
sbb
hlt
stc
loopne
push
ss
pop
jmp
bound
es
ja
cmp
hlt
lea
inc
mov
js
mov
in
test
in
lea
pusha
dec
add
enter
push
roll
xor
jns
jne
add
aad
scas
aam
sbb
adc
push
sbb
nop
mov
sbb
in
jg
imul
in
or
jg
jge
sbb
loop
jo
mov
outsl
push
in
xorb
xchg
xchg
jmp
adc
inc
mov
stc
and
and
loopne
mov
or
lods
in
lods
mov
cltd
push
sub
aas
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
cmp
push
xchg
adc
adc
jge
sti
adc
in
das
mov
lret
adc
or
lahf
push
push
jp
clc
test
xor
pushf
sub
lock
mov
enter
movsl
out
push
inc
dec
bswap
cmpb
sbb
add
sti
decb
in
push
mov
sbb
mov
leave
push
pop
xchg
lock
mov
loop
ljmp
cld
inc
adc
stos
addb
aam
out
pop
iret
jp
mov
mov
fldt
adc
push
ljmp
mov
sbb
sub
push
xchg
cmp
cmpl
dec
pop
push
negb
outsl
mov
mov
call
mov
popa
mov
mov
sbb
hlt
sbb
pop
pop
pop
stc
cmp
aas
lcall
aad
or
add
mov
jns
sbb
xor
dec
loope
xchg
in
out
mov
jmp
test
push
cmpsb
scas
mov
pop
rclb
push
sub
test
and
test
fmulp
rorl
pop
shrl
or
pop
cmpsb
addr16
mov
push
scas
sahf
xchg
imul
bound
jne
jae
int3
repnz
dec
add
push
iret
xchg
aaa
mov
jo
in
daa
outsl
sti
xchg
cld
bound
mov
xor
and
fcomi
pop
mov
mov
leave
dec
jmp
xor
jg
cmpsl
loope
jns
jp
lods
pop
inc
jae
stc
pop
nop
icebp
in
mov
out
xor
push
repz
sub
invd
popa
push
jbe
mov
js
cmp
je
pop
push
push
adc
sti
add
insl
xchg
sub
test
cmp
xor
inc
xchg
jo
push
leavew
rorl
pop
or
mov
cwtl
push
shll
pop
fsubl
or
pop
push
inc
and
mov
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
mov
mov
adc
add
cltd
or
sbb
pop
stos
xchg
pop
inc
cmc
cld
cli
mov
or
and
je
cwtl
jecxz
push
stc
pop
mov
hlt
mov
push
dec
orl
jg
xchg
cmpsl
cmp
adc
jo
hlt
inc
mov
repz
xchg
popa
loopne
sub
imul
dec
fcmovbe
jb
fists
rep
or
int
lret
mov
adc
into
dec
xlat
jp
shlb
in
mov
leave
add
cmp
or
inc
es
out
mov
xlat
bound
mov
xor
aaa
lahf
bnd
rclb
sbb
pop
shl
stos
pop
mov
fdivr
mov
iret
loop
leave
sub
adc
ficompl
pop
jnp
mov
jb
sbb
cmp
sbb
gs
jb
add
xchg
lds
cmp
rcr
ds
sub
cli
push
movsb
push
aaa
jbe
out
mov
out
aad
or
out
mov
psllq
push
stc
fwait
dec
out
lret
pop
jb
mov
cmp
ja
fidivrs
inc
jge
jg
or
pop
xlat
mov
jnp
mov
or
mov
int
fldenv
xchg
inc
cmp
pop
push
inc
sub
lds
in
call
mov
jo
cmc
pop
or
roll
in
out
aaa
shll
mov
test
mov
gs
jo
nop
lahf
outsl
fbstp
mov
push
and
inc
in
cwtl
push
cltd
stos
jne
lock
stc
cli
and
sub
mov
scas
aas
adc
into
jno
push
xor
shll
add
mov
pop
subl
add
fsubs
std
fstpt
push
cli
or
xor
push
or
ljmp
push
push
cli
test
jne
outsb
mov
fstps
call
je
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
cwtl
aad
sbb
push
add
out
lods
add
iret
in
xchg
sub
ss
enter
mov
fldenv
scas
adc
jae
hlt
outsl
outsb
std
cld
aam
ja
imulb
loopne
cli
sbb
enter
inc
in
outsl
push
jne
and
add
les
cld
jns
pop
xchg
dec
xchg
mov
dec
scas
xor
aas
scas
int3
sbb
dec
push
adc
add
mov
sub
sarb
idivl
and
ja
xchg
or
mov
xor
dec
dec
in
stos
mov
dec
jle
out
mov
fdivrs
jbe
adc
pop
cwtl
sub
lret
add
add
lods
idivl
ds
xchg
xchg
lods
xchg
mov
mov
or
push
psrlq
sti
stc
mov
ret
cltd
dec
dec
inc
or
scas
movsb
pop
and
bound
inc
pop
sub
sahf
push
andl
pop
adc
scas
xor
mov
lds
push
call
cmp
fisttpll
dec
leave
rcll
and
sbb
lock
sub
repnz
jmp
lds
dec
lahf
cwtl
inc
dec
push
jb
sub
sub
popf
pop
xchg
add
inc
and
xchg
int
adc
dec
iret
cmp
fldcw
dec
imul
in
outsb
and
sbb
adc
clc
pusha
push
pop
mov
movsl
scas
cltd
vmovlpd
inc
push
mov
cld
and
and
outsl
mov
sub
push
imul
imul
in
insl
pop
inc
cmc
ficomps
lock
out
icebp
shr
lods
shll
jno
xor
mov
and
lret
mov
push
hlt
mov
push
inc
lea
cs
mov
dec
hlt
bswap
xchg
and
xor
daa
popl
mov
loopne
call
and
test
insl
xor
or
cmp
insb
ja
das
test
je
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
fsubrl
adc
adc
cmpb
pop
mov
popf
cwtl
push
decl
xor
push
jb
sbb
div
cmp
xor
pop
sti
jne
jp
mov
int3
adc
sarb
mov
xchg
sbb
and
outsb
icebp
test
sahf
pop
arpl
bound
ja
mov
add
dec
sub
cmc
fdivrl
jae
or
add
mov
add
shl
repz
mov
cmpb
pop
int
loope
into
je
or
mov
adc
push
or
jl
push
push
or
fs
lcall
jg
adcl
cmc
xor
add
cmp
ds
mov
pop
sti
add
mov
lods
push
sbb
jae
pop
test
add
xchg
xchg
nop
mov
adc
xor
aad
js
insl
xlat
out
xchg
jg
push
mulb
cmpsb
in
inc
add
adc
sahf
int3
jns
xchg
dec
add
lret
data16
adc
loop
lds
divb
or
lds
test
cmp
inc
pusha
pop
xlat
das
push
inc
je
mov
ds
ret
mov
mov
shll
loope
cwtl
push
test
adc
lods
in
dec
push
add
adc
dec
jecxz
push
in
nop
mov
push
cmp
nop
jmp
out
int
or
add
aas
xor
add
xchg
adc
cmc
xor
data16
add
jns
push
in
sub
adc
sbb
sub
pop
les
mov
push
push
adc
push
enter
sti
es
cld
cmp
jb
adc
out
stos
mov
pop
aam
daa
push
push
pop
and
mov
or
mov
in
pop
xor
int
mov
lods
bound
adc
sahf
loopne
add
stos
pop
fnstsw
sbb
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
push
adc
adcb
loope
sub
lea
repnz
add
fsin
std
cmp
test
addr16
push
push
outsb
adc
imul
mov
add
add
dec
inc
stos
int3
jo
mov
mov
ss
outsb
cwtl
in
enter
in
adc
mov
lods
sbb
hlt
inc
lret
push
cld
sbb
fisttps
ja
xor
push
and
mov
jmp
lds
movsl
popf
rcrb
lods
or
ljmp
add
mov
loope
mov
test
add
out
mov
xchg
fcompl
icebp
add
lret
das
pop
lods
sub
pop
pop
jmp
into
lds
data16
jns
pop
sbb
iret
rclb
rcll
ja
lock
js
lods
lcall
pop
out
in
mov
cmpsb
cmpsb
in
lahf
aad
jbe
lds
adc
xchg
mov
mov
repnz
and
sub
aad
cwtl
sbb
pop
dec
and
add
pop
jmp
in
xchg
test
xchg
and
cmp
ja
roll
pop
push
mov
sahf
inc
addr16
jg
xchg
sbb
mov
xchg
jb
push
and
cltd
xor
cltd
dec
popa
adc
sub
loop
xor
mov
pop
cmpsl
popf
jae
pop
outsl
fsubrp
cmp
andl
sub
cmpsl
jle
add
out
mov
ja
icebp
push
int3
push
pushf
ret
loop
in
and
icebp
pop
push
cmpsb
sub
cmc
in
insl
fistl
cmc
outsb
std
xchg
imul
add
loopne
jge
and
inc
mov
jno
or
fmull
xchg
daa
adcl
mov
xchg
and
adc
inc
adc
out
lcall
mov
leave
adc
dec
pop
mov
mov
mov
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
mov
pop
lods
or
adc
movlps
pusha
push
pushf
subl
dec
and
int
mov
sbb
int3
or
push
add
push
ret
fildll
int
je
xor
sub
and
repnz
fnstsw
orb
adc
repz
in
pop
nop
test
dec
negl
sub
fidivrl
arpl
imul
cs
cmc
iret
push
call
repnz
mov
inc
jnp
xorl
call
adc
pop
test
imul
dec
les
in
outsl
push
dec
popf
fnstsw
data16
sbb
inc
push
pop
adc
addr16
sub
adcb
lea
cli
sub
icebp
add
xchg
push
xor
xchg
clc
sahf
loop
prefetchwt1
or
mov
mov
scas
adc
dec
pop
in
xor
dec
repz
jmp
push
into
mov
and
or
test
mov
fiaddl
xchg
insl
add
imul
testb
or
mul
imul
mov
shlb
arpl
hlt
mov
push
jge
push
nop
int
push
sub
jbe
popa
cwtl
lret
mov
leave
add
pop
or
stc
or
movsl
add
xor
loopne
call
mov
push
inc
call
idivl
data16
jne
fdivr
hlt
adc
shrb
mov
outsb
jbe
ficomps
adc
mov
pop
cld
popf
mov
pop
jbe
subl
inc
xchg
sub
xchg
xchg
mov
push
rol
mov
aam
shlb
adc
xchg
in
and
adc
jge
push
je
xchg
pop
inc
incl
jnp
out
je
pop
insb
xor
and
sub
lods
es
push
mov
pusha
mov
xchg
mov
lods
push
cmp
and
jns
push
insb
inc
or
dec
addb
xchg
cld
pusha
loopne
push
cltd
pop
pop
shrl
sti
out
jg
dec
cwtl
jns
ret
cmp
push
lods
dec
test
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
and
je
adc
movlps
pop
sub
dec
data16
cmpsl
cmp
sub
mov
test
insb
test
add
pop
mov
lret
or
loop
inc
mov
mov
sbb
idivb
fwait
sahf
sbb
push
cwtl
xchg
mov
int
xor
cwtl
pop
fst
sbb
shlb
sahf
ds
sbb
test
jns
loop
adcl
jp
cmp
jne
scas
sub
lock
popa
aad
gs
jmp
xor
movsb
sbb
cwtl
cmp
cmp
pop
sbb
xor
and
mov
in
sahf
inc
pop
mov
push
cmp
ud0
ss
pop
adc
add
xor
cmp
jae
cmpsl
sbb
cwtl
jne
dec
loope
or
inc
sub
cmp
cmp
daa
push
mov
shrl
jbe
repnz
mov
push
jno
lea
fisttps
cmp
xor
les
aaa
sbb
dec
das
jne
cmp
xchg
add
xor
in
mov
hlt
add
sbb
test
out
pop
pop
divl
adc
nop
dec
mov
sahf
sbb
sub
jp
fiaddl
or
mov
push
inc
lcall
lock
fsubl
xor
xchg
shl
add
dec
xchg
test
and
popa
mov
mov
imull
dec
dec
push
push
pushf
xor
cmpsb
jg
cli
out
or
adc
lods
xor
cmc
mov
push
inc
pop
jnp
stc
icebp
mov
popa
call
xor
jb
ljmp
stc
lods
arpl
adc
xor
pushf
jmp
sti
in
pop
xor
adc
out
cmpsb
fisubl
mov
gs
sub
or
test
xor
xlat
sub
xchg
pop
dec
mov
popf
lahf
in
mov
movsl
loopne
pop
sub
iret
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
and
jle
jo
adc
movlps
mov
pusha
sub
pop
or
mov
andb
push
push
jle
xor
and
stos
popf
adc
ljmp
ja
mov
xchg
sbb
or
sub
leave
fcompl
or
dec
in
push
add
bound
xor
adc
dec
mov
into
sub
sbb
je
cltd
aas
dec
adc
mov
into
jne
sub
gs
add
mov
lret
mov
sbb
jmpw
mulb
jle
push
xor
sahf
pop
repnz
lret
adc
iret
sarl
inc
add
cltd
stos
mov
fcompl
rclb
mov
cmp
lret
push
push
xor
mov
inc
test
repz
mov
dec
cmp
cmp
xorl
dec
add
ds
fnstcw
outsb
js
sbb
adc
adc
loope
sbb
lods
aas
pop
adc
shll
xchg
insb
xchg
je
test
sbb
clc
jp
dec
sub
sub
rcrl
or
xchg
cmp
stc
jae
data16
and
jb
jns
sub
in
cli
jl
fidivrl
cld
push
iret
dec
jp
fisttps
jmp
aam
mov
loopw
rcr
push
lret
aas
pop
dec
dec
negb
loop
sahf
les
mov
mov
adc
xor
mov
jmp
out
clc
test
outsl
cmp
add
int3
nop
cmp
outsb
int
js
sub
jmp
fdivr
jns
fadds
xchg
mov
out
push
cmc
push
stc
mov
push
and
loope
loope
in
cmpsb
insb
push
pop
pushf
xor
ds
in
movsb
jbe
popf
xlat
xchg
dec
xor
lods
test
movsl
adc
mov
pusha
out
dec
mov
jge
xchg
in
imul
int
loope
sbbb
mov
sahf
adc
in
loop
mulb
sub
pop
call
lahf
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
adc
cmp
insb
adc
adc
js
out
adc
jno
in
shrl
mov
mov
sub
je
pop
lds
movsl
mulb
and
xchg
add
sarl
jbe
dec
jae
push
ljmp
adcl
aas
add
jmp
inc
js
stc
cltd
mov
and
out
nop
jne
push
in
popa
sti
jbe
test
jg
cmp
push
rolb
aad
leave
jne
std
sbb
push
lods
das
sbbb
mov
mov
inc
ficompl
int
mov
cwtl
or
scas
cwtl
or
pusha
xchg
outsb
ficoms
lret
xor
in
xchg
hlt
mov
add
pop
in
jne
and
push
imul
popf
push
cltd
lock
pop
push
dec
dec
ss
shrb
adc
cwtl
in
addl
and
push
lods
xchg
mov
sahf
test
xor
xchg
push
pop
push
test
sub
xor
popa
mov
pop
sub
cwtl
mov
ss
popa
mov
add
push
push
push
jle
mov
ljmp
add
push
jb
dec
test
nop
xchg
adc
xlat
mov
test
addr16
bound
mov
xchg
std
push
jecxz
test
int3
je
cltd
lret
or
mov
mov
ja
movsl
pop
sti
pop
jo
adcb
int
lock
pop
sub
mov
push
mov
iret
xchg
pop
lods
fwait
sti
push
das
rclb
jp
inc
lea
in
and
xor
mov
and
ss
mov
push
inc
mov
popf
mov
in
xor
in
xor
cmp
pop
push
mov
cmc
mov
loop
pop
sbb
insl
mov
pop
inc
xorl
add
nop
fucomi
mov
and
in
sub
or
sbb
sbb
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
rcll
insb
fldcw
adc
movlps
icebp
in
xor
pop
leave
xor
cld
cld
into
cmp
inc
mov
mov
mov
mov
cwtl
pop
addr16
cmp
aas
mov
add
sti
out
imul
mov
lcall
jge
adc
adc
mov
stos
sbb
das
cs
xchg
jb
push
push
jbe
xchg
jae
sbb
pop
xchg
mov
cmc
xchg
sti
subl
aas
dec
pop
mov
inc
test
push
xchg
int3
xor
rol
stc
sub
push
insl
mov
rolb
xor
sbb
stos
jnp
ds
fisttps
call
mov
outsl
mov
je
std
jnp
pop
xor
push
sti
xchg
stc
aad
enter
rep
ds
inc
lahf
cmp
jl
movsl
insb
jno
lods
imul
pop
xchg
sahf
pusha
mov
sub
das
xor
cltd
pushf
push
test
arpl
daa
xchg
mov
mov
mov
das
data16
lock
insl
jg
mov
daa
mov
rorl
outsl
inc
repz
fmul
dec
test
outsl
addr16
pop
add
pop
out
cli
sti
add
adc
imul
fsts
jne
pop
lea
dec
shll
xchg
ret
xchg
aaa
std
movsb
out
mov
pop
scas
test
dec
xchg
mov
sub
stos
xchg
mov
or
outsl
push
inc
adc
xor
pushf
adc
fidivl
mov
scas
arpl
cmp
int
iret
push
aam
sarb
psrlq
push
std
mov
pushf
sub
jne
dec
cmp
ror
int3
jg
adc
dec
or
ret
inc
shr
mov
sbb
add
jl
lea
test
out
fsubl
dec
enter
cmp
cli
test
push
xor
dec
jb
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
outsb
insb
lea
enter
xchg
out
das
xor
add
ja
lret
jge
jmp
mov
mov
out
nop
shufps
dec
push
fidivrl
sub
call
push
sbb
push
cmp
repz
mov
cmp
pop
shl
rcrl
stos
jae
jns
inc
and
hlt
in
lods
xor
mov
test
sbb
push
jecxz
in
into
sbb
xor
pusha
inc
mov
sub
jno
xchg
daa
rolb
es
in
pop
dec
cs
stos
stos
shlb
add
pop
or
or
inc
xorb
mov
push
xor
lods
xchg
cmc
jb
jb
cmpsb
daa
add
cmp
cld
movsl
movsl
dec
sarl
les
outsl
jg
pop
sbb
xchg
xchg
bound
test
enter
insb
add
dec
pusha
mull
mov
pop
ror
mov
loop
and
mov
sbb
movsl
mov
pushf
sbb
leave
xchg
pop
xchg
inc
lcall
stc
in
notl
fiadds
inc
mov
jnp
ljmp
mov
xchg
jne
add
inc
mov
inc
mov
mov
xor
sbb
pop
xchg
les
jg
add
xor
mov
cmp
push
aaa
dec
or
test
sahf
mov
scas
jno
jno
jecxz
add
cmp
clc
pop
adc
push
into
int
xor
test
push
mov
movsb
sub
or
mov
jae
push
rol
dec
xchg
imul
and
xchg
jno
sub
loope
fdivr
sahf
cld
jns
inc
jbe
push
push
push
fidivrl
and
icebp
rcr
es
pop
ffree
pop
mov
cmp
xor
insl
dec
fisttpl
push
jl
in
xorb
pop
dec
lahf
cli
mov
pop
repnz
jae
xchg
pop
push
shlb
xchg
mov
outsl
test
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
les
in
sub
and
pop
dec
sbb
test
jecxz,pt
imul
fbld
push
loop
cmpsb
xchg
sub
pop
adcb
aad
pop
and
test
push
jbe
aad
xchg
nop
inc
push
popf
mov
cmp
sbb
inc
cs
sub
inc
out
in
xchg
jns
xchg
dec
jmp
arpl
jg
test
loope
loope
xor
loopne
test
xchg
mov
sub
enter
xor
lock
icebp
inc
pop
orb
xor
lea
mov
fcompl
inc
jp
enter
push
add
scas
lods
sub
insl
and
aad
int
lret
aas
xchg
push
mov
clc
xchg
dec
divb
outsl
cmp
xor
xchg
add
push
repnz
fsubrl
ja
jp
mov
dec
stos
mov
movsb
mov
jp
jg
ret
iret
push
adc
xchg
daa
adc
mov
xor
leave
int
daa
and
jecxz
sub
daa
xchg
jecxz
add
stc
add
clc
mov
jns
inc
je
test
xchg
mov
push
cmp
cmc
xlat
or
in
iret
mov
push
cltd
repnz
gs
cld
add
sub
mov
cmc
loope
sub
shl
cwtl
lcall
xchg
mov
sub
in
rcrl
lret
aaa
and
push
mov
push
cmp
loop
loopne
lods
add
jne
pop
mov
lods
sbb
mov
and
out
cwtl
sbb
add
mov
jecxz
adc
mov
les
adc
arpl
shl
mov
flds
fs
shrb
insl
test
or
fbstp
lret
cwtl
data16
stos
mov
mov
inc
mov
cwtl
adc
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
ljmp
adc
movlps
push
add
jbe
mov
in
mov
in
dec
shrl
adc
hlt
mov
into
pop
push
or
js
push
loopne
cmp
sti
fwait
mov
mov
xor
xor
repz
rcrl
push
ret
push
jg
xchg
xchg
push
loopne
shll
xlat
in
jl
cmp
out
pusha
in
pop
jns
mov
aaa
shl
xchg
cli
push
mov
sbb
dec
inc
add
and
sbb
mov
mov
sarb
loopne
inc
stc
fndisi(8087
and
jl
dec
negb
jbe
mov
xchg
mov
push
or
fisubrs
inc
and
add
xor
jmp
cltd
adc
jp
fwait
xor
inc
sahf
xlat
inc
mov
ljmp
in
sub
mov
repnz
lods
icebp
insl
xchg
dec
outsb
adc
int3
cmc
mov
mov
cmp
adc
mov
fisttpl
pop
loopne
jecxz
int
jno
lahf
lock
xchg
xchg
aaa
pusha
movl
out
bound
jmp
push
xchg
xor
daa
sti
sub
out
mov
jmp
xlat
add
sbb
je
stos
ret
ds
fstl
cmp
cli
mov
jno
insl
jb
mov
adc
inc
adc
pop
ja
lods
xchg
or
xlat
mov
push
int3
push
sbb
mov
and
or
mov
pushl
jno
andl
jg
xchg
mov
jg
lahf
push
sbb
lret
ficoms
xchg
inc
fdivs
cmp
aas
mov
pop
enter
pop
nop
out
sarl
jnp
push
and
cmp
mov
push
adc
or
lods
cmc
xlat
insb
pop
lahf
iret
roll
ljmp
cmp
js
gs
test
int
jb
mov
jae
data16
push
adc
or
adc
mov
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
jb
sbb
ficoml
adc
outsl
call
aam
and
ret
mov
rclb
pop
pcmpgtw
divl
adc
dec
jge
scas
sub
pop
repnz
pop
mov
je
pop
mov
int
les
popf
mov
xor
fyl2xp1
shll
dec
mov
cli
cs
fwait
aas
test
mov
ss
pop
pop
icebp
push
add
mov
repnz
sti
push
jne
data16
outsb
push
sub
or
sbb
inc
dec
adc
xchg
les
out
adc
movsl
mov
xor
fildl
loope
pop
pop
sbb
rclb
cmp
in
jg
cli
test
test
jno
cld
xchg
xor
cmpsb
stc
mov
ja
cli
shl
mov
and
pop
sahf
out
lods
inc
movsb
pop
push
xchg
ds
sub
inc
dec
mov
sahf
mov
sbb
mov
lods
or
pusha
pop
sub
popf
or
cmp
cmpsl
imul
daa
mov
sub
mov
dec
inc
sbb
push
inc
inc
lret
inc
test
aad
iret
jge
inc
sub
test
xchg
mov
xchg
add
sti
dec
pop
add
inc
sub
mov
xor
rol
icebp
fwait
inc
loop
cmp
or
mov
inc
sbb
push
lea
lahf
mov
mov
sub
lds
jo
imul
arpl
mov
test
lods
mov
push
rcl
lods
xor
pusha
mov
divb
gs
xor
and
in
insl
jl
pop
in
lods
cmp
xchg
pop
cmp
pop
nop
pop
jp
fcmovbe
dec
mov
add
into
fcompl
fbld
mov
add
and
insl
xchg
cmp
push
adc
jbe
add
incl
popa
cmp
gs
enter
fistpl
inc
pop
xchg
sbb
dec
scas
je
push
cmp
mov
push
cmpsl
lods
shrb
sub
aas
mov
and
pop
cli
dec
das
sub
add
fdivp
shrb
push
mov
out
mov
mov
addl
loope
std
xlat
sub
mov
ja
jb
cli
sub
dec
sub
or
jae
fisubrs
cld
xor
mov
dec
es
or
lds
dec
nopl
mov
loopne
mov
test
dec
push
push
add
jecxz
cmpb
fs
dec
mov
mov
shlb
rcll
pop
xchg
sahf
ss
jbe
fildl
push
in
pusha
jbe
popa
mov
popa
loop
scas
std
cmp
sarb
inc
pop
pop
jbe
push
fcmovb
pop
jns
push
out
mov
loope
push
andb
jmp
mov
ret
cs
enter
gs
mov
cmp
lds
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
stos
push
adc
adc
xor
mov
mov
xor
jge
sahf
cld
popf
mov
lcall
jl
loop
cmp
std
popf
pop
movups
or
cltd
push
int
sub
xor
or
test
popa
push
push
aad
lds
jbe
mov
jge
test
jnp
or
fildll
les
mov
dec
scas
out
fnsetpm(287
mov
cmp
jmp
mov
inc
adc
mov
sbb
jbe
int3
sti
and
out
pop
clc
jg
push
mov
outsl
iret
dec
sub
cmpsb
out
ret
insb
inc
and
rcr
jl
sub
xlat
fwait
sbb
dec
xor
and
stc
gs
push
sub
out
dec
xor
push
les
sbbb
add
add
sti
sub
popf
mov
daa
mov
sbb
mov
bound
jl
add
inc
mov
mov
dec
mov
adc
int
cmp
test
movsl
pop
data16
jmp
xlat
xchg
jbe
jle
rclb
inc
jmp
pop
pushf
loop
addr16
dec
movl
cmc
cmpsl
dec
sbb
inc
fs
pushf
cs
inc
bound
outsl
lret
dec
jns
jp
adc
stos
mov
mov
mov
pop
ds
or
out
shrl
sahf
mov
lods
xor
ja
fsubl
or
rcll
shlb
jge
cwtl
aad
xor
lods
lret
das
inc
push
rolb
inc
and
iret
sub
in
es
leave
iret
pop
popf
fs
or
xor
xlat
mov
mulb
leave
add
jge
inc
test
inc
sub
leave
sbb
dec
mov
and
fucomip
cmp
adc
out
xor
inc
repnz
dec
cmc
sub
mov
test
sarl
pusha
loop,pt
dec
pop
inc
adc
and
stc
cmp
sub
or
pop
inc
push
in
cmpsl
add
dec
inc
int3
addl
imul
cld
roll
mov
adc
mov
xor
int
mov
cwtl
dec
not
mov
lcall
sub
lahf
jle
push
test
dec
dec
xor
jp
dec
imul
lea
jns
add
inc
xchg
leave
fldt
push
inc
jl
sub
dec
mov
into
dec
mov
movsb
adc
mov
in
test
add
dec
or
int3
xchg
or
popf
sub
ficompl
or
mov
enter
push
pusha
test
mov
fdivrs
push
mov
scas
mov
fwait
rclb
jecxz
inc
mov
cld
sub
lahf
mov
gs
jg
out
mov
cld
sbb
lods
addl
fs
loope
inc
xlat
lcall
or
test
pop
imul
inc
inc
fnstenv
test
dec
out
repnz
add
enter
inc
pop
pusha
mov
orb
mov
cli
dec
dec
fistpll
adc
add
fldl
ljmp
neg
mov
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
