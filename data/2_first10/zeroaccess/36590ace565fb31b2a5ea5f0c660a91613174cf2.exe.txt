push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
out
pop
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
daa
into
fists
mov
mov
push
movsb
inc
xchg
test
subb
aam
movsl
popf
aas
sub
add
ss
sub
mov
test
test
mov
xchg
insb
int
mov
bound
jne
jno
pop
insl
repnz
mov
popa
push
mov
test
imulb
sub
mov
and
xor
jecxz
lock
and
push
dec
dec
roll
js
mov
jno
jns
xor
inc
in
mov
loopne
or
pop
inc
lahf
cld
mov
mov
cli
fcmovnb
dec
sahf
nop
mov
movsl
adc
dec
shrl
xchg
push
sbb
inc
pop
xor
sarl
jmp
pop
pop
mov
xor
popa
jno
inc
fsubrl
xchg
mov
add
pop
in
and
test
push
iret
mov
adc
out
int3
mov
shlb
mov
test
fcompl
aaa
aas
mov
mov
push
add
gs
jns
or
js
movsl
sbb
lret
clc
shrl
add
mov
repz
pusha
cmp
dec
mov
mov
mov
or
mov
aad
push
dec
sbb
jno
lea
mov
in
psrlq
or
xorb
xor
push
pop
cld
and
push
test
gs
pop
cs
xchg
jecxz
mov
mov
cs
hlt
test
rcrl
es
mov
mov
cmpsb
push
sub
cmp
sbb
push
ja
pop
mov
lret
cmpsb
or
pop
int3
mov
nop
xor
pop
push
data16
loop
inc
std
and
push
icebp
pop
pushf
stos
xchg
cld
arpl
jo
das
dec
inc
cmpsl
mov
dec
ror
adc
cmp
fbstp
movsb
roll
add
xchg
outsb
mov
fidivrl
mov
out
sub
adc
imul
scas
mov
xchg
adc
adc
mov
xchg
outsl
mov
jo
xchg
xchg
lcall
xchg
mov
test
mov
jns
call
xchg
pop
jle
mov
dec
movsl
add
dec
imul
push
pop
bound
call
repz
fcmovnu
aaa
xchg
aaa
aam
pop
or
aaa
imul
repnz
std
jae
xchg
jno
insl
jne
inc
cmc
aad
icebp
or
cwtl
sbb
stos
jb
je
xchg
scas
lods
and
xor
sub
xchg
adc
xchg
es
jae
dec
fmull
outsl
je
cmc
and
insb
es
or
and
push
imul
popa
pop
fistps
mov
mov
in
and
stc
xchg
leave
outsl
out
pop
sbb
outsb
into
aam
sub
mov
mov
ret
rcrb
repz
gs
movsb
clc
and
mov
movsb
ja
sbb
inc
dec
ja
std
sti
rcll
sahf
push
sub
mov
in
lret
bound
imul
mov
pop
lret
cmpsl
in
push
fimuls
mov
lock
in
cmpb
xchg
scas
aaa
js
mov
adc
sub
pop
and
xor
push
fildl
dec
sub
push
jg
xor
adc
outsb
fldl
lods
mov
sub
in
adc
inc
jp
adc
stos
sub
push
pop
adc
xchg
mov
or
mov
xchg
mov
mov
adc
mov
outsl
xor
stos
or
add
cmpsl
push
xchg
push
mov
adc
cmp
loopne
fiadds
push
push
pop
xlat
add
out
inc
pop
lea
pop
and
cmp
lcall
jno
nop
mov
cmp
xchg
mov
int
es
data16
adc
in
pop
daa
dec
push
push
mov
iret
adc
fstpt
sub
pop
pop
xchg
movsb
jns
mov
mov
orb
add
and
daa
jae
add
sub
jnp
add
dec
sarl
cmp
sbb
lds
lret
mov
int3
dec
pop
fadds
add
movsb
imul
cmpsb
jns
cmp
xchg
inc
adc
cmc
es
shrb
jg
arpl
pusha
push
mov
loope
mov
mov
cmc
jmp
add
nop
dec
aas
mov
adc
icebp
cltd
jl
cmc
xchg
adc
mov
lods
cltd
jg
in
pop
lahf
push
mov
adc
push
xchg
pushf
test
dec
out
adc
xlat
and
loope
and
xchg
add
pop
cmp
pop
xor
xlat
repz
push
outsb
xor
adc
push
adc
jecxz
ljmp
fstpt
mov
mov
cs
fcoms
imul
xchg
mov
hlt
outsl
jl
shlb
dec
hlt
xchg
inc
jbe
cmp
jne
lret
in
sbb
test
mov
adc
xchg
mov
dec
mov
sbb
popa
mov
sub
dec
push
dec
mov
xchg
mov
out
pop
xor
mov
imul
xchg
jno,pt
and
mov
mov
xchg
adc
dec
filds
adc
push
outsb
ja
aaa
test
jnp
test
cmp
jmp
fs
jne
sub
or
jne
mov
insl
pop
adc
mull
xor
mov
popf
push
inc
mov
ffreep
stos
mov
gs
push
pop
scas
clc
mov
mov
test
mov
add
dec
add
jae
mov
jp
sbb
xchg
inc
lock
shll
jp
and
sahf
lods
in
jns
and
push
cld
sub
mov
lock
mov
shll
roll
or
sub
jle
sahf
dec
push
leave
lcall
pop
mov
xchg
xor
dec
aaa
out
cwtl
mov
xchg
daa
insl
movsl
xchg
in
js
lds
out
mov
mov
xor
adc
movsb
lahf
cwtl
mull
mov
dec
data16
in
loope
dec
xor
notl
mov
cs
fwait
cmp
push
jo
xchg
ja
aam
cmp
out
cmpsl
jle
jg
push
lods
int3
jge
mov
xchg
insl
aam
scas
jecxz
xchg
test
push
testl
mov
fcmovbe
or
fmull
cli
cmc
adc
sub
andl
mov
les
inc
mov
cld
stc
fsub
jmp
cmpsb
pop
lods
pushf
fwait
jo
inc
aaa
daa
mov
cmp
shrl
xor
fldcw
insb
jbe
hlt
mov
hlt
into
push
and
clc
mov
mov
or
scas
adc
mov
mov
sbb
push
arpl
pop
dec
lahf
outsl
dec
bound
add
ret
pop
ret
jge
movsb
mov
mov
xchg
sub
jmp
data16
rcr
addr16
or
add
repz
jg
out
jae
ljmp
mov
jle
pop
or
add
out
shll
ds
pusha
mov
arpl
insb
in
sbb
div
out
lds
and
inc
cwtl
and
notb
sub
imul
mov
mov
arpl
sbb
mov
xor
out
mov
xor
in
lds
scas
popa
mov
lret
scas
sub
add
xor
inc
or
lods
cmpsb
jge
lea
xor
lcall
mov
jns
cli
push
mov
mov
cpuid
mov
addl
mov
jae
inc
div
fidivs
mov
dec
aas
cmp
das
dec
jno
test
add
leave
retw
sti
add
stos
inc
and
scas
adc
jg
rcll
test
mov
mov
xor
shrl
ljmp
int3
sbb
repnz
loope
xchg
fidivl
lds
ds
repnz
ret
add
cmpsb
push
pop
dec
mov
icebp
push
sahf
inc
stc
fwait
sub
xlat
or
out
add
adc
inc
out
dec
nop
or
mov
sub
fists
jae
fidivs
cmp
and
out
push
sub
test
add
lds
push
mov
insl
pop
inc
xchg
ljmp
lods
dec
repnz
xor
stc
inc
mov
ds
data16
sbb
fistl
mov
iret
imul
mov
in
ret
in
pop
stos
aam
stos
call
sbb
loop
scas
mov
mov
xchg
movsb
push
dec
xchg
mov
adc
cmp
jle
arpl
dec
sub
add
enter
iret
js
mov
fprem
push
cmp
lahf
mov
adc
mov
fisttpl
push
add
push
add
cmpsl
mov
scas
push
jle
jg
push
add
std
jl
aaa
sbb
jle
mov
mov
es
movsb
clc
jmp
cmp
add
xor
pop
cld
jmp
and
dec
xchg
mov
mov
sbb
in
sbb
fcmovne
sahf
or
test
loop,pt
push
push
xor
and
std
mov
jo
mov
pop
repz
xor
testl
mov
pop
mov
and
sbb
xchg
in
dec
xor
ret
or
or
xchg
xor
popf
outsl
bound
dec
enter
es
push
pop
inc
ss
loop
sbbb
cs
cmp
mov
mulb
sbb
sbb
jnp
roll
mov
cmp
push
lret
inc
sub
aas
andb
outsl
xchg
dec
fcomps
pop
subl
fucomi
lock
stc
in
cmp
call
lcall
cli
repnz
repz
scas
mov
lahf
sbb
mov
lock
mov
push
jge
sbb
dec
das
call
push
mov
push
xchg
mov
jmp
push
shll
out
or
sbb
mov
pop
and
add
jo
out
push
lock
sbb
inc
jge
mov
push
out
loop
dec
cmc
sbb
aas
dec
inc
nop
sarb
loop
push
lahf
xchg
jg
and
inc
stos
sbb
push
push
and
inc
sub
incb
int
inc
mov
pop
adc
rcrl
and
stc
fldl
jmp
stc
dec
xor
and
lcall
lret
lcall
je
in
dec
ds
and
pop
mov
jle
rcrb
enter
xchg
mov
int
aad
into
loopne
push
mov
notb
fsubs
push
jmp
push
xor
cmc
sub
mov
ret
push
call
scas
cmpsl
mov
push
aas
aas
lcall
mov
in
cmpsl
leave
arpl
cmp
add
test
jo
sbb
iret
pop
in
and
jne
push
call
pop
jb
lret
add
xor
aam
cmp
adc
inc
pop
push
sub
push
out
sbb
not
push
test
mov
jae
cmp
into
mov
cld
pop
adc
or
add
xchg
xchg
popa
test
sahf
pop
mov
or
push
xchg
mov
in
mov
stos
insb
imul
pop
movsb
push
jmp
out
ljmp
rcrl
fwait
insb
imul
lahf
jbe
mov
aas
xlat
enter
popa
cmpsb
call
mov
mov
orb
test
add
das
cltd
xor
std
cld
push
jg
rcll
jae
xchg
push
and
and
in
add
mov
addl
ficoml
ret
or
sbb
addr16
push
dec
or
push
xchg
jmp
cmpb
sub
or
mov
repnz
sbb
mov
jmp
add
cmpsb
aaa
in
jge
cmp
das
fadd
jne
aas
iret
push
mov
movb
out
mov
sbbb
xchg
dec
push
mov
jecxz
mov
test
inc
ror
dec
cmp
test
jnp
outsl
and
mov
daa
mov
arpl
and
xorl
std
push
or
and
pop
in
xor
jecxz
sarb
mov
scas
loop
rcll
push
imul
jmp
sti
pop
lds
mov
mov
lret
pusha
sub
fildl
sub
add
xor
dec
pop
rolb
adc
inc
cld
stos
ret
lea
mov
xor
jecxz
stc
popl
int
xor
loop
stos
lods
scas
pusha
push
dec
arpl
mov
fstl
lds
inc
popa
ljmp
mov
insb
jnp
filds
nop
arpl
cld
scas
test
cltd
iret
pushf
sti
sbb
mov
xor
mov
cmp
jle
pop
or
pop
pop
sti
ljmp
sub
jne
pop
andl
mov
xor
mov
dec
out
hlt
jns
inc
push
adc
xchg
fmuls
daa
aas
int
pop
jns
mov
les
xchg
jb
insb
cmp
or
iret
mov
les
push
push
lods
shrl
fdivrl
in
negl
movsl
mov
mov
shlb
jmp
lock
cmp
mov
push
clc
mov
fmulp
xchg
jmp
les
sbb
repnz
arpl
push
dec
push
test
fbstp
arpl
mov
sbbb
pusha
stos
loope
jge
hlt
adc
xor
ficomps
test
loope
hlt
add
leave
mov
rorl
sub
mov
idivl
cmp
aas
mov
inc
dec
int3
adc
mov
add
adc
fs
mov
xor
movsb
or
popa
fsub
shrl
mov
push
insb
aad
movsb
fmull
push
std
dec
mov
rorb
stos
push
mov
mov
sub
test
stos
pop
dec
mov
ljmp
mov
add
js
dec
call
gs
inc
pmaxsw
mov
xchg
jne
cmpsb
mov
mov
clc
jg
adcb
or
lods
jae
push
xchg
test
call
das
ja
sbb
inc
cmp
xor
insl
xchg
mov
lock
nop
lock
cwtl
push
cmp
dec
cmp
mov
faddp
pop
add
push
xchg
loop
mov
inc
fldl
leave
lret
mov
xor
lods
addr16
icebp
xor
sub
jns
xlat
daa
std
icebp
mov
ds
push
push
mov
lock
push
mov
adcl
lret
inc
shrb
mov
pop
push
fwait
int
mov
adc
das
sub
test
cld
lret
in
push
inc
add
sahf
lds
adc
mov
popa
sbb
lcall
pop
pop
pop
cli
sub
jmp
stc
enter
test
cmp
fsts
add
test
movsb
inc
jge
movsb
xchg
mov
or
addr16
dec
insb
jae
rcrl
inc
ds
dec
shlb
inc
xorb
xchg
cmp
mov
or
or
jle
outsb
add
lods
rcrb
aas
cmp
mov
inc
mov
js
sbb
pop
icebp
lea
fbld
mov
and
cmp
xlat
cmp
or
call
xor
xor
dec
lds
dec
mov
mov
sbb
pop
idivb
fnstcw
inc
dec
xchg
jns
jp
mov
aaa
lret
sub
push
fstl
inc
dec
jge
jb
and
jecxz
mov
ds
sarb
mov
jp
mov
xchg
orb
jbe
stos
sbb
inc
xchg
jg
es
rcll
enter
addr16
mov
jns
dec
xacquire
cs
pushf
outsl
filds
sub
cmp
cwtl
sbb
lcall
imul
inc
sub
inc
repz
sub
cmp
or
je
cmpsb
and
sub
pop
aas
jbe
mov
jl
lcall
xchg
fildl
adc
cmp
add
clts
cmc
mov
inc
mov
jecxz
sub
dec
outsb
es
xchg
or
loope
and
repz
push
mov
loope
cmp
jns
xor
pop
out
icebp
cmpsb
lock
in
pusha
sbb
fsubs
stc
push
sbb
into
daa
out
rol
or
shrb
jns
jae
mov
push
ljmp
fistpl
push
mov
bndstx
sub
push
inc
jecxz
repz
ret
call
push
mov
outsb
sub
adc
cmpb
pusha
xchg
mov
call
push
push
push
es
lods
js
jno
mov
jle
xor
and
in
mov
inc
xchg
cmpb
sub
mov
in
and
lea
jbe
cmp
sbb
dec
call
mov
cld
test
mov
pop
fs
inc
into
push
ret
cmpsb
out
sub
push
testl
push
xor
dec
test
push
jne
lods
andb
jne
aas
xchg
inc
out
and
sti
push
mov
int3
lret
sbb
arpl
pop
cmp
fwait
popf
and
test
sarl
jbe
into
movsl
fcmove
xchg
mov
iret
repnz
sahf
sbb
gs
xchg
cs
frstor
xchg
icebp
scas
xchg
cltd
pop
iret
jp
popf
stc
dec
ret
cmp
xchg
stc
push
repz
out
sbb
xchg
pop
lea
add
and
stc
push
fwait
mov
mov
xor
dec
test
das
imul
popa
push
cmp
lea
mov
inc
fcomi
rolb
jb
sub
rcrl
sar
pop
add
aad
shr
pop
jge
and
gs
pop
fsubp
cmp
sbb
dec
cmp
sub
inc
sbb
and
mov
es
add
out
and
push
loop
inc
xchg
cmp
mov
jle
int
mov
movsb
adc
pop
dec
cmp
test
jle
fstp
inc
movsl
cli
jmp
adc
mov
ds
or
pop
imul
xchg
inc
cmp
cli
push
adc
es
lcall
dec
pushf
sub
xor
imul
enter
push
insb
sbb
loopne
adc
insl
addr16
pop
shll
pop
xchg
or
bound
bound
stos
loopne
sbb
cmp
fsubs
or
cmpsb
add
cmp
fdivl
jns
loopne
lcall
sbb
mov
mov
out
loope
hlt
data16
mov
cld
add
cld
sti
test
dec
cmpsb
mov
sub
mov
xchg
ficoml
mov
pop
mov
sarb
imulb
sub
out
jp
dec
jle
rorb
inc
cltd
lds
and
mov
sub
jmp
std
cmp
loopne
cmp
filds
fldl
jno
fwait
cltd
fnstcw
test
mov
jbe
push
xlat
and
pop
adc
ret
dec
or
pop
shrl
or
sbb
and
in
icebp
mov
and
in
jle
out
pop
add
popf
test
stc
mov
jb
hlt
mov
ja
cmp
mov
in
and
mov
mov
pop
cmp
mov
pop
adc
mov
cmp
ljmp
xor
in
lds
push
js
dec
out
xor
dec
lock
ret
mov
dec
std
adc
test
aaa
sbb
lea
je
push
ret
imul
jb
push
sbb
adc
jno
sbb
fwait
jnp
lret
jbe
cmp
and
cs
cltd
movsb
mul
fsubl
and
loop
mov
sbb
inc
jmp
inc
sub
lock
inc
push
pusha
and
lahf
sub
adc
inc
xchg
sub
popa
addr16
arpl
scas
test
add
pop
popa
adc
arpl
xor
into
sbb
sbb
sbb
jecxz
fstpl
movsb
push
adc
addb
mov
jne
andl
mov
jecxz
sub
jge
sbb
int3
lret
mov
sbb
mov
stos
dec
test
add
xchg
enter
sti
lock
pop
adc
ficoms
dec
adc
stos
push
sbb
sbb
sbb
lret
fldcw
in
test
aas
mov
imulb
push
sub
and
xchg
xor
cmpsb
fidivrs
xor
inc
repz
jle
imul
rcrb
imul
lods
mov
daa
gs
enter
sbb
dec
addr16
mov
popa
mov
movsb
sub
sub
inc
movsb
mov
rol
lds
sbb
ret
xchg
fistps
mov
and
mov
ret
testb
aaa
dec
mov
add
cmc
pop
aas
push
xor
xchg
int
rorl
and
jp
cmpb
ja
vpmacssdd
jo
repnz
test
or
mov
bound
xchg
out
xlat
daa
unpcklps
aam
xor
push
adc
inc
js
lret
outsb
fldl
testb
fidivrs
dec
jecxz
mov
jle
enter
outsb
cmp
out
loope
adc
push
ss
inc
pop
add
out
int3
divl
aam
jp
adc
cmpsl
fidivrs
pop
dec
mov
mov
pushf
inc
mov
insb
sbb
mov
fbstp
iret
lret
mov
cs
je
xor
lret
cmp
out
inc
jae
enter
addb
sub
test
push
bnd
call
dec
mov
cs
es
add
sbb
je
add
cmp
les
mov
int3
std
neg
dec
adc
jmp
inc
mov
fldt
cld
out
int
ds
pop
andl
bound
out
leave
xchg
sub
jns
popa
push
xchg
icebp
inc
ljmp
loope
pop
inc
in
cmp
popf
xchg
xorps
mov
mov
adc
mov
mov
push
mov
mov
je
inc
xchg
arpl
add
test
jecxz
shll
bound
lea
out
xchg
jae
jg
fbld
mov
jae
pop
or
scas
cwtl
mov
sahf
dec
shl
inc
arpl
dec
sbb
loope
cmpsl
cmp
adc
adc
cmpsb
cmp
xchg
orl
popf
mov
mov
testl
mov
lret
gs
les
and
xchg
xor
or
mov
ja
mov
fidivs
jb
lds
dec
xor
inc
dec
std
adc
and
addr16
call
cmpsl
push
jecxz
negl
push
and
xchg
lds
xor
icebp
xor
pop
adc
cmpsb
push
in
sbbb
inc
je
repnz
cmp
jne
jp
nop
out
arpl
dec
jno
sbb
cmp
xchg
jnp
loopne
fimuls
xchg
imul
jmp
lds
call
mov
lahf
cmpsb
xchg
loope
cmp
cmpsl
lods
shlb
stc
in
push
in
and
jne
mov
cmp
sbb
mov
cs
ror
jbe
sbb
fdivrl
in
int
push
cwtl
sti
jmp
xor
ret
dec
aas
inc
push
mov
xchg
adc
jae
dec
inc
outsb
pop
ja
mov
pop
jecxz
adcb
push
xchg
mov
pushf
fidivrl
push
outsl
push
adc
aam
in
jg
aas
filds
xor
xor
jns
pop
cli
push
pop
and
icebp
inc
outsl
mov
jns
das
dec
pop
or
xor
adc
ret
sub
sub
rcl
pop
add
popa
mov
and
popf
pop
adc
jb
add
inc
lret
or
les
xor
lock
xchg
xchg
xchg
scas
mov
mov
clc
leave
and
filds
and
sahf
inc
fdivl
ficoml
lar
sarb
jge
mov
sbb
insl
lcall
dec
repz
es
xchg
cmp
aad
scas
cmp
movsl
mov
pop
sub
hlt
xlat
stc
lods
jmp
adc
mov
pop
in
adc
cmp
mov
and
test
mov
lret
xchg
in
mov
inc
fmuls
int
fildll
push
push
and
pop
out
data16
sbb
imul
ret
test
shl
test
xchg
xor
loope
clc
xchg
int3
insb
pusha
jmp
pop
addr16
in
sbb
sub
rcrb
cmpb
sbb
dec
inc
jb
inc
lret
mov
jbe
movd
push
out
insl
dec
shll
pop
sub
mov
adc
sbb
or
or
push
mov
scas
paddb
cmp
flds
sbb
jg
mov
mov
xor
dec
cli
cmp
sbb
out
lret
mov
aas
sbb
xlat
roll
pop
dec
addr16
fisubl
mov
lods
jmp
loope
into
jmp
inc
xor
insb
jp
les
sub
xchg
mov
push
dec
pop
mov
lods
movsb
inc
inc
push
je
rcrl
out
movsb
fistps
mov
pusha
mov
jo
xor
pop
sti
lock
cmpsl
lock
dec
out
cmpsl
imulb
clc
cwtl
aam
push
mov
jecxz
notl
pop
ficomps
dec
stc
cltd
js
stc
pop
inc
imul
pop
int
mov
cmp
test
sbb
ljmp
adcl
ret
cld
mov
stos
decb
pop
jae
scas
cmpsb
mov
mov
push
pop
ret
lcall
pop
test
addr16
out
repz
push
and
pop
mov
dec
fcom
out
shrl
push
call
dec
arpl
sbb
dec
lcall
push
inc
xor
xor
ret
sbb
mov
shl
dec
aam
testb
repnz
gs
hlt
mov
leave
xlat
andl
xchg
push
mov
push
push
icebp
lods
aas
pop
mov
push
adc
jmp
jp
inc
hlt
add
aas
inc
sbb
xor
fwait
jecxz
cmpsb
dec
jecxz
inc
cmpsl
pushf
push
popa
fimull
dec
popf
rol
incb
pop
rcll
fisubl
call
ret
cmp
adc
sti
rcl
xchg
repz
nop
aad
test
int3
jle
push
pop
popf
aam
mov
xor
inc
add
out
js
popf
cmp
pop
xchg
clc
cmp
mov
xchg
cltd
sti
xor
test
stc
adc
hlt
xor
cltd
add
inc
xor
lret
lret
dec
int3
ror
insl
pop
in
into
xor
insb
xorb
repz
loope
jbe
add
pop
adc
or
in
mov
ss
xchg
add
insb
pop
mov
fisttpl
lret
loop
pop
roll
lret
sub
dec
inc
shl
test
insb
cmpsl
sbb
mov
fbstp
dec
push
push
in
imul
add
pop
pop
das
adc
test
xchg
xor
dec
adc
idivl
ss
sbb
daa
push
jb
add
cmp
mov
jns
inc
mov
mov
push
sbb
inc
js
nop
fldl
push
roll
sbb
xchg
cld
lods
lahf
mov
int3
bound
sub
sub
adc
nop
xchg
xchg
dec
mov
push
pop
xchg
int
mov
inc
jge
pop
mov
leave
push
sbb
adc
xor
scas
xor
dec
clc
cmp
sbb
test
dec
add
stos
stc
pusha
cmpsb
out
mov
mov
loop
or
inc
sub
test
pop
imul
jle
out
mov
lods
cmp
je
mov
mov
das
sub
jns
xor
test
push
fcmovnu
je
fcmovnu
add
cmp
mov
aad
sub
xor
dec
and
xchg
enter
and
into
sbb
pop
pop
mov
andl
push
scas
ret
inc
sub
out
mov
rcrb
popa
and
popa
mov
addr16
and
sub
or
lahf
loop
push
sub
jo
and
mov
or
xchg
mov
mov
xchg
fldenv
test
push
and
mov
lret
mov
sahf
push
cltd
sub
or
call
jo
out
ds
adc
mov
lret
insb
jl
das
in
pop
frstor
ret
push
cmc
jle
sbb
lods
movsl
sbb
or
rorb
pop
push
imul
mov
roll
test
adc
cli
xor
and
call
sub
push
addl
inc
mov
pushf
iret
or
or
xlat
dec
inc
jbe
mov
stc
xchg
push
lods
sub
mov
pop
pop
je
shr
jnp
ljmp
imulb
xchg
les
add
in
lahf
inc
cld
mov
dec
adc
pop
ret
out
in
jmp
dec
sbb
imul
aad
popf
xor
xchg
icebp
ret
mov
inc
adc
jnp
pop
inc
decb
aas
dec
imul
xor
sub
cmpsb
in
ja
stos
std
mov
push
popa
or
or
inc
or
stos
addb
mov
stos
loop
cli
inc
or
cmpsb
adc
dec
das
xchg
out
mov
das
iret
outsb
fistps
stos
xchg
sub
mov
lret
jo
pop
pushf
sbb
out
xor
dec
mov
xchg
bound
jnp
sub
data16
das
stos
xor
pop
lahf
xchg
lahf
jle
rcrb
xor
cmp
sbb
xor
or
adc
and
aas
mov
dec
lock
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
jno
mov
pushf
jnp
hlt
pushf
jnp
cs
loopne
jb
jge
sbb
test
push
into
imul
mov
add
syscall
enter
rclb
xlat
fists
es
out
mov
dec
xchg
or
sbbb
ror
pop
dec
jge
ds
lret
movsb
jmp
es
inc
loop
jmp
fstp
push
or
jae,pt
int
add
jmp
or
pushf
mov
lahf
movsl
ja
popa
adc
repz
rcll
add
inc
int
and
fwait
stos
push
sbb
xchg
movsl
cmpsl
adc
sar
or
aaa
pop
mov
std
add
aaa
xchg
dec
sbb
test
pop
push
adc
xchg
dec
sbb
push
xchg
pop
mov
loope
or
sarb
fmull
cli
dec
xchg
in
aas
imul
xor
xor
sub
add
jns
icebp
nop
dec
xor
xchg
stos
ljmp
imul
jmp
popl
subl
and
sbb
mov
mov
test
out
xor
or
repnz
bnd
cmp
inc
and
stc
adc
hlt
adc
lods
sahf
mov
xchg
inc
lock
cmp
mov
bound
fisttps
stos
jns
jnp
shll
movl
div
das
call
xchg
push
or
cltd
cltd
pushf
les
out
sbb
and
in
loope
mov
mov
dec
int
mov
in
mov
xor
loop
cmp
xlat
sarb
ds
sub
test
cmc
into
mov
sbb
mov
bound
sbb
pop
cltd
je
push
shrb
insb
mov
movsb
jle
push
shl
mov
jae
push
cmp
shr
out
mov
movsl
pop
lock
sub
push
daa
mov
nop
jb
and
sub
shlb
jns
xor
xchg
jae
shrb
jp
cld
push
pushf
in
inc
sbb
mov
mov
pop
xchg
movsb
pop
push
fld
sub
lods
or
decl
push
out
inc
ret
pop
xor
dec
and
bound
jge
dec
je
mov
shlb
loope
test
pop
ret
mov
ja
cmpsl
test
data16
repnz
rorl
dec
dec
roll
push
dec
add
in
pop
jecxz
xchg
movsl
xlat
rep
pusha
aas
push
or
adc
aaa
inc
pop
xlat
xorb
scas
pop
adc
insb
inc
sti
insb
sub
cwtl
shl
out
sti
daa
int3
daa
cmp
inc
and
cmp
sbbl
cmp
mov
xchg
xor
fcomip
pop
daa
cmp
nop
std
cmpsl
mov
inc
add
mov
mov
jmp
cmp
popa
cld
rol
add
das
pushf
cld
jns
sub
mov
xchg
aaa
inc
sahf
sahf
add
push
cmp
sbb
movb
pop
gs
and
sbb
adc
push
test
in
mov
lret
pop
pop
iret
loop
pop
pop
mov
outsb
mov
outsl
sub
loopne
push
or
mov
rclb
add
sbb
mov
into
std
ret
add
pop
and
insb
xchg
leave
cmp
xchg
push
iret
mov
or
pusha
push
outsb
loopne
inc
cmc
dec
cwtl
or
pop
popl
das
or
xchg
and
cltd
outsl
push
arpl
mov
sbb
xlat
xor
icebp
lds
aad
xchg
push
pop
mov
mov
mov
push
and
pop
aam
repz
jbe
mov
xchg
aas
leave
in
fdivrp
sti
repnz
loopne,pt
push
sbb
xchg
fidivrl
xchg
and
out
jno
sub
mov
inc
mov
aaa
mov
stos
js
test
jbe
pushf
cmp
in
sub
daa
mov
movsb
rcl
repnz
cmp
or
mov
xchg
or
mov
rcl
repnz
enter
mov
daa
adcb
sbb
xor
int3
dec
mov
xchg
ja
jns
dec
push
test
imul
mov
clc
dec
sbb
mov
mov
ret
pop
push
mov
or
mov
push
xor
cmp
push
xchg
out
mov
mov
imul
nop
pop
ret
aaa
push
jae
mov
xchg
jno
daa
mov
sbb
and
mov
fwait
pop
push
jmp
jecxz
test
popf
fistpll
xlat
pop
mov
inc
call
sahf
xchg
gs
pop
mov
dec
mov
fdivp
push
and
sub
imul
loop
lock
imul
cmc
inc
mul
xchg
cmp
enter
addr16
and
sbb
dec
fdivs
jg
push
in
cmp
repz
pop
mov
aas
xchg
sub
div
sbb
xor
jg
mov
mov
or
loop
sub
insl
mul
neg
cmp
sahf
mov
fisubl
xor
lea
cmpsb
and
mov
push
cmpb
xchg
cmp
test
arpl
repz
push
sbb
in
lret
mov
jnp
dec
pop
push
stos
mov
popa
dec
pop
leave
sub
push
mov
ja
adc
js
in
movsl
pop
cli
push
xchg
xor
inc
and
jae
stos
shll
jle
sub
sub
test
cmp
jle
pop
push
ret
fldenv
add
inc
movsb
mov
sahf
inc
mov
stc
mov
push
push
shlb
shll
test
in
mov
mov
xor
arpl
ds
cmp
lock
push
subl
jle
cltd
adc
stc
dec
nop
ret
test
cmpsb
pushf
push
rcr
and
adc
aam
xor
mov
jle
aas
repz
dec
stc
xor
mov
add
pop
sbb
xor
mov
mov
outsl
mov
dec
xor
xor
icebp
xchg
inc
jp
xchg
jo
repnz
dec
cli
fnsave
std
jne
jp
dec
test
and
fwait
dec
dec
inc
int3
rorb
pop
fistpl
in
push
icebp
pop
dec
push
ret
xchg
loopne
sarb
pop
pop
mov
ljmp
sbb
xor
cmp
cld
ss
and
jns
sbb
leave
sti
cmp
or
scas
scas
mov
jge
adcl
jmp
dec
jmp
dec
cmpsl
outsb
sub
xchg
or
scas
pop
push
test
ret
fldenv
adc
gs
ja
inc
faddp
pop
push
dec
loopne
dec
jbe
stos
pop
add
pop
leave
int
xor
xor
xor
mov
sub
push
imul
out
pop
imul
mov
in
je
inc
jb
enter
aad
mov
sub
ss
negb
mov
jnp
dec
out
inc
lds
sbb
cwtl
jmp
mov
pop
or
add
sub
fbstp
jmp
incb
lahf
jns
stos
hlt
fisubrl
mov
fnop
pusha
xor
dec
push
xchg
adc
push
popa
jo
out
or
imul
scas
push
sti
arpl
out
cs
call
mov
mov
scas
lret
js
mov
and
sub
sbb
in
push
xor
xor
pop
add
mov
inc
out
mov
sbb
dec
fildll
outsb
add
out
mov
dec
sbb
mov
jecxz
out
daa
cmp
mov
movsl
jl,pt
mov
xchg
add
gs
push
mov
push
xor
push
jo
popf
lods
adc
inc
mov
sub
arpl
mov
push
cmc
rorl
pop
icebp
pushf
testl
jge
hlt
xchg
xor
fstl
inc
mov
push
jae
jge
sbb
inc
or
lods
sahf
idivl
and
lods
lea
adc
xor
fwait
aam
into
std
add
pop
pop
cmpsb
sahf
pop
pop
dec
and
mov
or
loop
jle
fs
jnp
insb
cwtl
pop
mov
leave
jg
aas
pop
mov
cwtl
fisubrl
adc
mov
cmp
loopne
repnz
sbb
add
and
dec
mov
push
fidivl
mov
add
lahf
stos
cmp
cmp
sub
and
add
popa
mov
mov
fistpll
or
mov
call
dec
rcll
mov
pushf
dec
and
ljmp
or
in
leave
jg
sub
jns
iret
sbb
loopne
cltd
aaa
push
pop
aas
xchg
outsb
imul
repz
pushl
cmpsb
cltd
insl
push
inc
fdivp
add
pop
jb
adc
sbb
fisttpll
pop
dec
stc
sbb
outsb
insl
mov
lahf
in
stos
mov
xor
sbbl
dec
mov
push
xlat
mov
push
hlt
test
sti
mov
pushf
mov
addr16
sub
loop
xor
xchg
mov
xor
push
sub
xor
dec
cld
js
sarl
xchg
add
jae
or
loope
xor
test
nop
push
sbb
cmp
lret
pop
inc
pop
js
aas
shll
divl
pop
sub
inc
sti
add
inc
mov
pop
sub
sbb
mov
je
repnz
in
dec
aad
push
or
icebp
les
mov
jo
pop
aaa
cli
fs
test
pop
mov
sub
inc
sub
imul
fisttps
stos
or
aas
push
lock
cmc
clc
mov
iret
jno
scas
or
mov
add
sub
dec
sbb
inc
in
les
mov
cli
out
dec
imul
or
ljmp
push
fists
popf
mov
sbb
add
shlb
addr16
movsb
sub
mov
mov
loope
rolb
pop
sbb
add
ds
mov
add
dec
adc
push
adcb
mov
and
pop
adc
cltd
aad
les
adc
adc
cmp
inc
pop
scas
icebp
fwait
scas
push
in
mov
jno
mov
adc
jg
es
xchg
sahf
mov
aam
or
cmp
ror
xorb
pop
xchg
lock
mov
jp
insb
lcall
pop
lcall
addl
inc
xchg
cld
cwtl
fisttpl
loope
cmc
pop
add
sbb
dec
popf
sti
xchg
or
and
leave
popa
int3
xchg
adc
inc
idivl
dec
in
cltd
es
jne
fsubs
xor
imul
inc
outsl
imul
aaa
dec
mov
movsb
or
mov
repz
call
orl
les
repnz
push
mov
aaa
push
pop
add
or
lcall
mov
insb
lret
xor
cwtl
popf
fnstsw
cwtl
sbb
cmp
adc
xchg
push
insb
std
mov
jmp
fldt
jne
ret
je
pop
pop
push
dec
out
cmp
add
and
inc
inc
pop
jo
dec
pop
or
adc
cmp
in
mov
or
xor
sbb
inc
sbb
push
cmpsb
dec
fs
pop
shr
ror
adcl
adc
adc
cmp
xor
push
and
xor
add
and
push
mov
mov
aam
mov
mov
jmp
fidivl
cmp
scas
ret
in
sub
mov
jmp
lds
lds
out
xor
xchg
call
pop
dec
out
int
popf
mov
ret
mov
sbb
dec
js
lods
pushf
int3
repz
lods
lret
mov
xor
push
sub
or
in
mov
insb
inc
cmpsl
ret
xor
into
scas
cmp
or
xor
in
inc
xchg
sub
loope
fistl
xor
xchg
subb
dec
dec
and
ljmp
test
add
push
cld
imul
lcall
insb
stos
inc
andps
push
or
out
xor
lret
aaa
lds
xchg
add
mov
xchg
int3
cs
mov
inc
into
and
inc
sarl
sbb
fnstenv
cld
adc
mov
xchg
cmp
jle
ja
mov
jmp
cmp
sbb
xchg
xchg
pop
push
xor
pop
jbe
or
ss
inc
add
push
and
popf
mov
mov
xchg
jnp
and
mov
test
jne
nop
mov
adc
loope
sbb
cmc
out
andl
stc
mov
outsl
pop
fs
mov
enter
ficoml
mov
stos
add
or
outsb
testl
sbb
sub
mov
cli
pop
or
mov
aaa
push
mov
dec
pop
mov
inc
hlt
scas
in
mov
dec
xorl
je
adc
jmp
test
cmc
xchg
jbe
and
mov
inc
in
pop
sysexit
cmp
add
dec
dec
imul
bound
addr16
cmp
rcrl
repnz
sub
test
push
jmp
dec
jmp
cmp
iret
pop
push
pop
adc
out
pop
jnp
lds
icebp
mov
std
dec
rorb
lret
jle
mov
inc
jmp
sbb
dec
pop
push
test
js
jle
xchg
aam
int3
data16
sub
cwtl
repz
int
ret
adc
hlt
ret
adc
jmp
sub
adc
imul
pop
ljmp
cs
lahf
xlat
sbb
dec
movsb
inc
mov
in
jnp
dec
push
ret
or
xchg
add
inc
xchg
xchg
sbb
outsl
popf
repnz
test
mov
add
or
lret
xlat
cs
cmovle
test
repnz
and
and
inc
sbb
sub
fwait
adc
jae
jo
daa
inc
fwait
divb
popa
xor
fs
xchg
imul
cmp
mov
xor
pop
std
arpl
mov
mov
stos
xchg
sbb
sub
jno
push
mov
pop
popf
and
decl
sbb
pop
arpl
call
xchg
lret
hlt
std
xchg
sbb
and
jg
pop
xor
bsr
inc
mov
in
inc
mov
mov
test
std
cmp
dec
adc
or
push
mov
pop
and
enter
xchg
adc
pop
xchg
test
mov
adc
mov
imul
fisttpll
push
rolb
loope
fiadds
cmc
sub
sbb
shl
push
xchg
addr16
daa
jae
imul
orl
in
jg
xor
adc
in
mov
push
xchg
int
jecxz
or
add
xor
inc
mov
sti
jb
daa
ret
xchg
leave
mov
jl
push
jns
jne
inc
hlt
ljmp
sbb
sahf
mov
mov
mov
das
hlt
loope
xchg
mov
es
xchg
lods
add
xchg
inc
out
add
loop
popf
xlat
into
adcb
jo
andb
cwtl
mov
rcrb
cld
mov
in
lea
cmp
nop
push
ror
dec
pop
ja
and
addl
mov
nop
sub
iret
xchg
cwtl
in
sbb
loope
dec
lahf
push
mov
cmc
or
repnz
xchg
dec
pop
sti
jge
mov
mov
and
stos
inc
and
sub
mov
push
jb
push
ljmp
push
pop
das
mov
lea
fs
sbb
aaa
cmpsl
jbe
popf
mov
ja
pop
out
adc
pop
mov
mulb
mov
pop
ss
rol
pop
cld
je
xor
add
dec
outsb
dec
push
mov
js
or
push
out
mov
xchg
jnp
jp
aad
pop
mov
int
mov
std
outsl
das
adc
sarb
jns
inc
scas
mov
out
sub
pop
mov
push
mov
and
push
jns
push
and
inc
push
add
mov
sub
enter
scas
scas
adc
ud2
das
ljmp
push
aaa
in
push
in
pop
mov
test
mov
dec
mov
mov
push
sbb
out
push
les
out
sarl
add
dec
and
push
jmp
mov
loopne
push
inc
sti
test
aad
std
divb
insb
cmp
and
xor
push
dec
in
mov
arpl
jae
jmp
mov
push
out
xchg
fidivs
push
sub
lahf
sbb
pusha
outsl
adc
call
adc
mov
add
add
sbb
shl
xor
and
std
xchg
in
aas
and
inc
push
dec
fidivrl
pop
lahf
lods
lock
cmp
ret
inc
ret
shll
stc
sti
fisttps
and
pop
cs
mov
and
cmpsl
lock
out
and
in
pop
lods
test
sti
push
add
jl
sahf
add
int3
ret
adc
pop
mov
js
add
mov
ss
dec
scas
mov
int
lods
cmpl
jns
push
and
adc
mov
jo
loop
push
ds
das
ljmp
clc
in
das
jp
or
int
push
xor
in
lea
movsl
push
mov
sti
jl
push
mov
inc
adcb
lcall
push
stos
or
in
insb
jo
scas
or
lcall
imul
out
adc
push
or
add
add
push
add
inc
test
or
cmp
jp
lods
pop
mov
and
adc
xor
dec
add
lea
daa
pop
jmp
pop
pop
imul
fmul
leave
lcall
jb
fs
jbe
and
outsb
sub
adc
cmpsl
push
jg
jbe
dec
cmc
orl
xchg
mov
pop
push
es
jmp
rcrl
sub
sbb
imul
mov
movsb
push
sbb
mov
add
push
popf
mov
subb
and
push
stos
repz
sti
lcall
imul
cmp
add
lret
mov
cmp
in
imul
and
stc
das
jnp
jnp
int3
dec
mov
cmp
repnz
insb
cmpsl
cmp
add
xchg
insb
sub
add
cmc
and
out
rcl
icebp
dec
in
push
inc
or
ljmp
das
in
out
js
in
push
out
rclb
in
repnz
mov
aam
cld
lret
mov
adc
lods
and
int3
xchg
aam
mov
sti
and
or
stos
jg
mov
mov
jg
push
ret
push
and
fwait
add
xor
inc
xchg
add
fistps
ret
mov
cmovbe
sub
test
js
add
xor
popa
in
test
loopne
loop
xchg
push
cltd
aas
mov
xchg
and
in
fimuls
sbb
addr16
into
cmp
jle
and
jl
pop
jmp
inc
add
sub
mov
mov
cmp
pop
cmp
push
or
xchg
inc
cld
enter
sub
push
sbb
ds
std
or
jne
mov
adc
imul
jg
imul
orl
inc
in
testl
push
pop
mov
lret
inc
sub
fld
iret
lock
js
mov
lock
das
imull
push
bound
pusha
pop
movsb
pushf
xchg
fcompl
dec
mov
add
push
lret
cwtl
ret
jmp
add
jns
jo
xchg
pop
fidivs
rcrl
xor
or
push
cwtl
dec
sbbb
data16
insl
divb
movsl
jl
aad
inc
loop
jae
adc
out
mov
add
push
outsb
iret
js
roll
ljmp
int
add
push
cmpsl
pop
fcomps
sub
mov
inc
jmp
popf
cmc
nop
sar
jae
dec
int
cmp
xchg
adc
sub
in
xor
lcall
dec
cs
call
movsb
and
adc
out
movsb
mov
orb
sti
xchg
xor
and
rclb
dec
pminub
inc
pop
mov
fisubrs
cld
jnp
add
jecxz
fistl
pop
movsb
in
add
dec
adc
mov
jo
xchg
bound
sahf
scas
xor
fsts
pop
loope
push
lret
and
cmp
xor
pmulhw
mov
shrb
scas
lods
push
verr
jbe
dec
push
jmp
adc
jl
pop
mov
inc
lcall
loop
adc
hlt
push
xchg
sub
xor
test
movsl
enter
clc
xor
mov
idivb
int3
sub
hlt
fucomi
test
in
mov
push
xchg
push
push
add
or
bswap
roll
jne
push
push
test
or
test
iret
jae
cli
cmp
mov
jae
pop
test
xchg
ljmp
cmp
cmc
push
rcll
sahf
fdivp
sub
dec
xor
ljmp
mov
jbe
fsubrs
call
pop
mov
xor
push
xchg
in
pop
jns
jns
addr16
jge
mov
mov
xor
cld
or
pop
dec
mov
cmp
pop
js
pop
gs
sub
sub
xchg
sbb
cmpsl
into
fistpll
dec
mov
dec
jns
sbb
adc
pop
loopne
add
adc
and
mov
mov
in
or
dec
insl
mov
mov
cmc
pop
cld
cld
xlat
sbb
inc
mov
push
outsb
clc
cmpsl
cmp
test
int3
ja
jecxz
xchg
pushf
xchg
xchg
or
and
repnz
bound
testb
mov
out
cmp
push
in
mov
mov
fcoms
mov
fs
mov
cmp
orb
mov
repz
fistl
mov
mov
xor
cltd
xchg
mov
adc
loop
movsb
dec
mov
sub
mov
and
mov
mov
cmp
incl
mov
movsl
add
inc
xchg
cmp
shr
bnd
fsts
lods
sub
and
repnz
sub
jp
pop
test
sub
mov
mov
lods
mov
cmp
mov
int3
dec
test
xor
pop
xor
lcall
ror
imul
sbb
add
lock
leave
aad
insl
sbb
ljmp
rcr
inc
mov
cltd
pop
pop
pop
xor
or
shr
pop
push
stos
pop
cmp
in
and
mov
scas
mov
mov
imul
in
incl
sbb
and
inc
rolb
stos
push
das
stos
mov
jne
iret
lahf
mov
bound
jo
jg
xchg
xor
inc
pop
mov
jmp
adc
pop
xchg
mov
fdivl
xchg
aaa
dec
cmp
testb
sarb
aad
add
fbstp
adc
mov
or
inc
lods
jl
jno
sti
int
addr16
mov
push
into
lock
xchg
shll
flds
dec
sti
mov
mov
sbb
movsl
mov
jae
jl
ja
adcb
fstpl
lret
jae
sar
push
pop
push
clc
push
and
xor
pop
rol
or
ret
stos
xor
mov
pusha
mov
stos
test
cmpsl
push
popa
rcrl
pop
cmpb
lods
stos
stos
popa
inc
stos
movsb
mov
mov
inc
push
mov
adc
inc
inc
cld
ret
es
outsb
pusha
pop
jmp
mov
push
push
popf
movsl
jecxz
pop
or
dec
pop
fisubrl
sarb
dec
sub
dec
xchg
aaa
cmc
mov
inc
pop
sub
popf
aas
push
cmp
aas
push
mov
xchg
leave
sarb
mov
xlat
xchg
or
icebp
or
aad
insl
pop
gs
lock
bound
jb
push
mov
push
or
mov
sar
fsts
push
mov
jno
dec
leave
mov
sub
mov
jmp
jne
push
push
ss
js
jne
mov
jg
iret
xchg
dec
ficoms
mov
xchg
cmpsl
mov
mov
in
repz
jns
addr16
sub
xor
test
jg
dec
test
cmp
mov
jmp
lea
scas
lock
adc
jo
pop
shl
push
das
mov
push
shrl
jae
mov
shlb
xor
dec
jp
cmp
inc
jecxz
das
jne
adc
mov
out
mov
cmpsb
stos
add
mov
int
mov
mov
cmp
aad
repz
nop
jo
inc
bound
dec
xor
rcll
cmpsl
lret
rcrl
inc
dec
pushf
int3
rcll
push
dec
push
fisubl
mov
sti
inc
aam
in
mov
je
cmpsb
sbb
insb
ror
mov
xchg
insb
push
xor
sbb
adc
jno
cmp
mov
lock
hlt
sti
addr16
mov
sbb
push
mov
push
in
xor
sbb
xor
xchg
pushf
incl
xor
ret
cld
icebp
push
and
adc
mov
adc
adc
negl
mov
out
incb
movsb
jmp
xor
lods
cmp
or
mov
add
adc
int
push
jno
mov
cmp
and
adc
xor
and
jnp
lret
mov
lds
dec
adc
inc
and
out
jbe
sar
mov
rol
dec
jmp
inc
sbb
jle
in
lds
out
add
jo
push
cmp
mov
and
cmp
sbb
dec
cld
adc
leave
and
mov
xchg
adc
jmp
xchg
xor
pop
jo
push
cmp
shl
sbb
mov
je
push
std
jae
or
scas
pop
sbbl
xor
into
mov
push
movsb
dec
stc
adc
lret
call
xchg
lahf
mov
add
pop
xor
out
ljmp
xchg
insb
pop
jno
push
popa
out
lret
sub
nop
pop
sbb
in
fcmovu
add
fnstenv
dec
inc
or
mov
adc
xchg
popa
loop
sub
arpl
cmp
addb
and
dec
push
inc
dec
pop
cmp
rcrl
int3
pop
sbb
jge
push
sbb
xlat
lods
mov
cmpsl
out
pop
or
repnz
mulb
mov
pop
pushf
popa
test
jg
int
sti
mov
jmp
xchg
or
mov
pop
sarb
icebp
notb
jge
popf
sbb
push
push
mov
adc
sbb
dec
out
sbb
call
sbb
cmp
cmp
jl
in
cmp
cmp
ja
sarb
call
xor
jb
daa
sub
fcomps
aaa
or
loope
mov
jae
outsb
xor
xchg
jns
mov
in
jb
movsb
sbb
call
pop
bound
ror
cmc
push
cmp
nop
nop
lret
mov
jmp
fimull
lds
insb
pop
fimull
dec
jl
iret
jmp
xlat
mov
sub
shr
addr16
int
xchg
push
cmc
nop
rcll
dec
push
int3
xchg
mov
loop
pop
mov
jno
lods
test
mov
or
mov
sbb
mov
pop
cmp
jns
hlt
or
jne
sub
pop
mov
push
mov
jnp
jl
mov
lcall
arpl
repnz
sarb
sbb
popf
mov
mov
cwtl
sbb
push
lea
test
arpl
push
xor
jno
or
xlat
mov
sti
ret
cs
mov
int3
jno
and
in
pusha
jge
cs
std
sarb
add
pop
adc
lods
xchg
js
test
cmp
add
adc
jg
push
inc
or
sbb
inc
push
lds
cmpsl
test
inc
dec
and
push
cmpsl
mov
mov
aad
imul
das
push
fsqrt
mov
jl
sarl
lea
data16
lods
fnstcw
sbb
sub
rcr
dec
fwait
xchg
cli
dec
mov
scas
repnz
add
dec
sbb
jno
fdivrs
xchg
jge
push
inc
push
aad
cmpsb
ret
or
push
pop
or
or
add
lret
or
mov
rcl
pop
test
stos
mov
fwait
shll
mov
popa
pusha
pop
cli
pop
add
xor
rolb
outsb
sub
shll
cmc
test
psrld
sub
test
fistpl
iret
gs
test
jp
lret
pop
lock
mov
pushf
mov
mov
stos
pop
aas
fdivs
push
in
ja
and
insb
pusha
pop
rolb
jbe
push
jno
enter
outsb
jno
in
lock
repz
cmp
push
dec
jne
xchg
push
mov
pusha
jb
mov
jl
pushf
push
pushf
pop
mov
sahf
xchg
inc
and
cwtl
dec
pop
jo
lods
repnz
idivb
jnp
icebp
mov
rcrb
insl
fsubl
fiaddl
daa
xchg
sbb
les
subl
push
mov
test
cld
fsubs
adc
mov
and
insl
cmp
clc
imul
bound
inc
cltd
jge
pop
loop
inc
sbb
loope
add
stc
add
loop
xchg
sbb
push
mulb
or
adc
jbe
and
pop
shll
stos
sahf
ffreep
icebp
adc
nop
xchg
fsubr
test
aas
adcl
dec
dec
sbb
jnp
data16
jmp
loope
sub
movb
ljmp
jl
pop
leave
or
repnz
lret
lret
pusha
out
incb
in
sbb
mov
jp
jmp
inc
bound
into
adc
lods
xor
fwait
popf
lods
add
repnz
xchg
jae
add
pop
xchg
or
pop
push
arpl
and
outsb
add
mov
cmpsb
test
add
lock
push
mov
mov
shlb
dec
dec
jno
or
outsl
jl
dec
jns
lahf
mov
add
cmp
fcompl
aaa
idivb
xchg
arpl
xchg
pop
popa
add
inc
aad
pop
stos
out
pop
jle
sbb
lods
pop
ja
xor
cwtl
mov
xchg
mull
aad
pop
lahf
out
jb
sti
cmp
mov
iret
ret
sahf
fnstsw
cmp
rclb
xor
jmp
add
xor
pop
sub
cmp
push
sub
stos
and
addb
push
lds
int3
xor
aad
rcrb
shrl
jb
daa
xorb
add
mov
cmp
std
or
jecxz
cmp
or
aas
fists
sbb
sub
or
inc
xchg
aam
xor
jns
mov
xor
inc
cs
out
movsb
adc
test
mov
pop
or
or
aam
inc
test
rorl
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
daa
shlb
shll
jnp
hlt
pushf
jnp
clc
popa
xchg
jg
fsubrs
js
mov
inc
ds
fiadds
add
push
pop
ds
fcomp
push
addb
jno
jp
mov
pop
addr16
pop
push
idivl
stos
aad
mov
ljmp
jns
mov
das
add
or
push
inc
loopne
cmp
xchg
ret
cmp
scas
jo
add
and
mov
jge
into
xor
outsl
rdtsc
jp
mov
jl
add
ljmp
out
jns
pop
sti
insl
pusha
cli
mov
js
in
jb
das
push
mov
imulb
push
adc
add
add
adc
push
shl
dec
in
or
outsl
pop
adc
mov
dec
fstps
jg
in
push
jbe
sub
dec
fsub
sub
fcom
xor
xor
mov
xlat
popa
dec
xchg
mov
repz
dec
cs
ss
mov
cmc
bound
int3
xor
ljmp
add
fidivrl
fcomp
dec
adc
add
fdivl
cli
movsb
movl
sub
mov
mov
dec
clc
push
xlat
add
shrb
mov
shr
popa
out
hlt
ja,pt
mov
aas
cmpsb
cmp
mov
iret
mov
xor
stos
repz
ret
cmp
xchg
sbb
pop
jmp
fldcw
out
adcl
xchg
rcrl
jbe
mov
jl
mov
and
lock
divb
mov
rclb
ret
sbb
or
add
pushf
or
orl
mov
mov
int3
fs
mov
xor
push
pop
and
add
or
jg
jbe
or
jne
mov
mov
jmp
ja
loope
mov
stos
fimull
imul
push
dec
ret
es
inc
mov
inc
inc
mov
imul
sbbl
xchg
les
xchg
add
repz
dec
test
mov
pop
push
subl
cmpsl
pop
ror
js
into
fs
adc
xor
repz
inc
jmp
pop
mov
fnsave
iret
mov
int3
mov
mov
jo
or
sub
cli
dec
insb
pop
xor
pop
popa
bound
je
adc
push
mov
mov
aas
mov
rolb
dec
into
fmul
das
pop
lea
loope
fcomi
outsb
test
mov
mov
lahf
shlb
jb
fmulp
xor
lret
js
push
xchg
cmp
xor
push
pop
les
outsb
fisttpll
pusha
hlt
sbb
adcb
mov
and
mov
test
ss
inc
rcr
mov
cmpsb
push
and
popa
xor
xor
cmpsl
xchg
sbb
and
cmp
ret
pop
stc
pop
cwtl
pushf
add
ret
daa
inc
xor
enter
jle
ret
shrl
push
pop
add
mov
inc
pop
icebp
cmp
repz
insb
xchg
or
hlt
fimull
scas
push
test
pop
cmpb
into
or
lock
adc
aam
leavew
sub
mov
ss
push
jge
testl
mov
jo
mov
lcall
imul
and
hlt
js
mov
or
mov
cmp
jno
imul
and
getsec
adc
ss
repnz
mov
push
adc
lods
add
inc
aas
dec
pop
adc
ror
hlt
sub
stc
test
test
lret
cmpsl
jl
movsb
push
dec
fisttps
in
jecxz
xor
aas
repnz
inc
jp
shlb
vmulpd
jb
push
popf
pop
jg
mov
mov
movsl
in
pop
lret
sbb
xor
xchg
xchg
inc
in
push
and
rol
aaa
ds
inc
or
vpunpckhbw
fcoms
mov
inc
ss
imul
sub
arpl
pop
repz
mov
sbb
sti
pop
ja
pop
xchg
hlt
push
repz
mov
loope
jo
mov
mov
push
pop
dec
divl
scas
ljmp
scas
les
mov
sbbl
cmp
nop
shll
pop
loop
cmpsl
int3
xchg
xchg
push
loope
insl
dec
or
sbb
jno
mov
sub
mov
fmuls
mov
add
int
std
pushf
iret
nop
into
push
or
aas
stos
jo
adc
and
ss
lret
in
lret
adc
rol
pop
push
sub
sbb
enter
sub
rorb
dec
cmp
cmp
lods
shlb
repz
push
pop
xchg
sbb
fistpl
nop
fldt
push
out
pop
xor
ljmp
rorb
test
pop
insb
mov
mov
or
icebp
sub
fmull
popf
xchg
iret
in
lret
aad
bnd
sub
aad
popa
mov
add
xor
ret
adcl
fstpt
clc
dec
sbb
int3
lret
pop
and
stc
nop
pop
icebp
dec
and
push
mov
mov
lret
lock
outsb
mov
mov
pop
push
stos
ficoml
jae
mov
imul
xor
in
cmpsl
fbld
loop
push
loopne
aad
cwtl
into
mov
inc
test
fsubl
push
cltd
lret
dec
and
jge
mov
sbb
pop
cmp
imul
fs
cmpb
in
jle
mov
dec
ret
mov
cmpsl
xchg
cld
or
incb
mov
fcomps
cld
pop
pop
pusha
scas
aad
ja
mov
ret
aas
dec
test
je
jecxz
sub
mov
lret
adc
push
cli
out
mov
sub
or
or
mov
dec
loop
xor
mov
inc
fstps
cmpsb
inc
pop
mov
xorb
and
fxtract
cmpsb
or
adc
lods
insl
lods
ljmp
jg
xchg
mov
xchg
int
lret
fstpt
push
popa
add
push
mov
int
in
xor
movsl
adc
add
pop
gs
repnz
outsl
dec
sub
mulb
rorl
adc
sbb
ds
jge
icebp
and
fs
insl
int3
dec
cmpsb
test
nop
addb
sbb
push
adc
repnz
popf
js
fisubrl
insb
lcall
mov
pop
inc
fmuls
pop
cltd
cwtl
mov
or
mov
xor
repnz
inc
sbb
imul
stos
sbb
or
in
mov
mov
es
test
lret
mov
aam
ja
fsubl
repz
stos
and
jmp
cmp
mov
enter
fimull
jmp
sbb
fidivrl
sbb
pushl
dec
enter
data16
icebp
adc
xor
cmp
mov
outsb
daa
aaa
dec
sbb
mov
lret
xor
mov
sahf
dec
and
rolb
insl
push
xchg
mov
test
mov
push
pop
out
loop
adc
lods
jp
ret
call
loope
or
sar
inc
cmp
adc
adc
inc
cmp
pop
or
sbb
mov
ss
mov
mov
popf
fstp
sbb
popl
mov
inc
loop
jb
cmp
push
loope
push
and
js
lds
fisubs
mov
inc
mov
and
fstpt
aaa
add
xor
scas
or
push
mov
mov
mov
pop
xchg
cs
cmp
sub
iret
inc
outsb
fstps
xor
adc
ret
in
jne
imul
add
enter
lods
and
insb
pushf
cwtl
adc
sahf
pusha
imul
int3
cmpb
or
mov
xchg
sbb
movsb
xchg
outsl
pop
inc
xor
xchg
adc
sub
test
and
aad
xlat
jo
dec
and
push
cmpsb
pop
add
or
mov
hlt
cld
shrb
xchg
dec
xor
je
sub
xor
xchg
mov
jl
mov
mul
adc
iret
jne
inc
cli
dec
dec
jnp
ret
imul
xor
mov
sbb
int3
mov
lods
es
daa
or
pop
fists
pusha
xchg
lea
push
jbe
jp
andb
gs
pop
fidivrl
inc
std
push
shl
mov
adc
push
sub
fisubrs
jmp
jnp
push
xor
mov
daa
shlb
scas
shlb
jbe
sbb
inc
stos
push
dec
push
mov
aaa
arpl
xlat
scas
and
decl
xor
popa
dec
or
aad
and
mov
add
subb
sbb
push
into
int
or
or
fidivrl
ja
mov
xchg
mov
iret
repnz
and
icebp
jle
jb
out
mov
insl
push
lods
aam
insl
sbb
mov
dec
jp
adc
xchg
lret
lock
add
sbb
imulb
cli
push
xor
in
es
push
xchg
xchg
iret
iret
testl
mov
shrb
sbb
push
cmpsl
mov
sub
hlt
xchg
push
adc
xchg
imul
cmp
ret
and
pop
orl
cmp
in
jp
mov
std
data16
xchg
dec
in
repnz
test
jb
sbb
push
shrb
pop
fldcw
sub
jns
mov
pop
je
xchg
push
hlt
xchg
adc
fwait
inc
push
inc
add
and
push
ja
inc
cmp
xchg
xor
jne
pusha
xchg
in
jnp
mov
xchg
rcrl
cmp
lret
push
push
mov
add
ljmp
int
lods
pop
push
xchg
popf
mov
sti
adc
push
jne
sub
fistpl
stos
aam
vcvtpd2dqy
sub
jecxz
add
mov
mov
hlt
or
stos
adc
stos
jns
jb
je
mov
in
jae
aaa
test
xorb
xchg
mov
xor
mov
jmp
pop
mov
outsb
aas
loope
mov
aam
lea
mov
fdiv
adc
idiv
jns
dec
mov
mov
pop
repnz
out
in
outsl
xlat
subb
jge
cmp
mov
push
pop
sub
in
imull
leave
xchg
jle
sbb
rcll
push
imul
pusha
cmp
adcb
stos
cmp
xchg
das
mov
mov
out
push
inc
outsl
xchg
imul
adc
sbb
sahf
add
and
fmul
andl
lea
lret
and
jae
bound
fs
imul
nop
xor
fildl
jecxz
insl
pusha
cmpl
sbb
movsb
lret
xor
mov
jge
sahf
mov
mov
testb
or
dec
das
inc
xchg
nop
push
pusha
stc
dec
jge
add
xchg
xchg
adc
dec
shl
cwtl
int
add
jbe
jle
lock
dec
mov
adc
sub
dec
aaa
dec
ret
enter
inc
popa
fnstsw
repnz
sub
cltd
std
rol
ss
sti
push
ss
ret
dec
stos
test
fimuls
xlat
jg
lret
mov
ficoml
cmp
insl
pop
or
in
xor
mov
jge
jmp
fisubrl
es
into
xchg
fstl
sub
std
lret
sbb
pop
mov
gs
push
sub
or
push
xor
addr16
mov
push
or
movb
sti
or
mov
loope
test
shrb
fsts
aaa
xorb
sub
xor
lea
cmp
dec
pushf
imul
insl
pop
jmp
cltd
xor
mov
orb
adc
mov
sub
mov
push
in
add
ret
cmp
lods
dec
std
jae
mov
dec
insl
loope
lret
jo
lds
dec
sub
pop
cmp
pop
inc
dec
aam
test
decl
push
bound
sbb
or
mov
daa
shrl
add
mov
mov
rol
sbb
aas
shrl
out
je
sar
pop
data16
mov
mov
idiv
addb
and
jne
jns
sub
adc
inc
push
sub
add
scas
push
adc
scas
jmp
fcomps
out
ret
pop
jge
cs
stos
stos
fldl
and
les
outsb
or
aad
aaa
push
stc
bound
or
fs
or
fsubl
fdivl
mov
jle
std
lret
mov
jl
lods
outsb
rcrl
arpl
nop
dec
test
inc
mov
in
push
mov
fsub
sub
test
adc
xor
mov
mov
dec
jns
and
stos
sbb
stos
dec
sbb
arpl
pop
xlat
jge
outsl
mov
and
mov
shrb
nop
popf
xchg
lea
push
adc
or
or
fbld
pop
mov
cmp
lds
popl
mov
pop
xor
sbb
xchg
sub
pop
cmp
jb
das
lret
pop
sub
cltd
iret
aas
xchg
inc
mov
pop
arpl
jnp
or
xchg
les
mov
jae
fwait
cmpsl
inc
push
lahf
xchg
jge
adc
int3
enter
test
cmpsb
test
je
and
sub
inc
xchg
and
std
outsb
push
dec
jle
or
mov
jl
adc
fldl
ret
outsl
mov
scas
outsl
cmp
stc
pop
in
sbb
dec
movsb
dec
push
cmp
mov
xchg
in
ret
mov
jns
inc
out
notl
int
out
pop
stc
mov
pop
pop
int
aam
push
sbb
xorl
adc
mov
push
icebp
in
mov
or
jecxz
mull
xchg
clc
fists
add
mov
lods
jle
pop
push
arpl
adc
scas
push
outsb
rcrl
xchg
ffreep
adc
pop
imul
mov
inc
out
aam
test
jb
push
cmp
out
pop
lods
cmp
mov
sub
loope
into
pop
push
nop
sbb
pop
sbb
push
push
cmp
push
ret
leave
in
aas
jp
cmc
cmc
in
cmp
je
pop
add
shl
fwait
add
ret
sbb
push
fildll
pop
pushf
mov
mov
sub
cmpsl
sbb
fwait
out
cli
or
lret
nop
sub
sbb
sub
repz
icebp
sub
pop
adc
mov
pop
stos
fldcw
pop
fistl
shll
aam
movsb
and
adc
fistps
push
leave
movsl
jecxz
adc
xlat
popa
inc
ljmp
or
mov
popf
fs
add
pop
or
and
stc
xlat
push
adc
dec
mov
jl
inc
pop
xchg
push
dec
pop
gs
fmuls
and
or
jle
addl
lods
cs
pop
je
cmp
jl
test
lret
pop
dec
mov
pushf
add
out
out
stos
insb
xchg
and
pop
cmp
sbb
out
mov
push
sbb
xchg
addb
mov
es
mov
pop
sub
stos
and
add
ret
lea
xchg
aas
pop
mov
out
and
repz
xor
pop
loope
shl
popf
aad
pop
and
sub
mov
mov
mov
aam
pushf
push
xor
loop
enter
dec
mov
push
cmp
mov
pop
shll
jns
in
adc
dec
or
or
or
push
mov
lret
test
outsb
les
dec
aam
push
xorl
push
cs
dec
adc
mov
popa
mov
push
cmpsb
pop
cmp
scas
adc
jl
lahf
int
dec
mov
or
mov
xor
call
jl
cltd
shll
sub
mov
popf
rorb
mov
inc
bound
cltd
mov
sbb
jbe
inc
xor
mov
mov
lock
pop
jbe
lds
mov
pop
pop
or
sub
and
sub
pop
ret
aaa
jge
mov
adc
sti
pushf
mov
std
inc
sbb
lahf
clc
roll
aaa
mov
aaa
or
or
cmp
sarb
mov
or
ret
push
pop
outsl
aaa
mov
add
cs
hlt
jno
in
sub
lds
dec
fcmovb
popa
pop
xor
ljmp
scas
rolb
out
int
xchg
push
pop
pop
clc
dec
xchg
dec
in
nop
inc
add
add
jne
mov
lds
cmpl
mov
test
xor
and
inc
add
shlb
jno
xchg
mov
fstpt
sarb
inc
rorl
jmp
jmp
out
fscale
fcmovnu
das
mov
test
in
cmp
jae
shl
stos
lock
dec
stos
ja
rcl
jo
pop
fisttpll
out
pop
in
repz
cmpsb
inc
pop
or
dec
in
inc
mov
pop
sub
mov
leave
in
inc
xor
ds
cli
jns
test
jae
in
dec
jmp
pop
add
add
imul
test
divl
mov
and
fldt
jmp
or
mov
lock
cmp
adc
mov
shl
cmp
call
ficoml
xor
inc
loop
mov
scas
mov
mov
in
inc
imul
psubusw
adc
andl
xchg
inc
dec
mov
outsb
rcll
sti
mov
mov
pop
dec
jle
mov
xor
sub
dec
jp
jl
scas
adc
lods
inc
movsl
sarb
cmp
neg
gs
cmp
insl
inc
ljmp
pop
fidivl
rcrl
xor
popa
filds
add
pop
lret
mov
pop
mov
add
cmp
xchg
lea
jecxz
cwtl
inc
pop
shll
gs
fwait
pusha
mov
cs
bound
add
cmp
das
filds
hlt
icebp
test
cmc
paddb
inc
cs
pop
loopne
lods
popl
lods
hlt
in
mov
sub
mov
or
inc
sbb
mov
cmp
xor
add
jno
dec
and
clc
pop
dec
xchg
out
shrl
jge
les
xlat
sub
sahf
cmc
cmp
jle
shrb
push
pop
cmp
gs
scas
cmpsb
cmpsl
insl
xchg
pop
mov
cld
cld
mov
inc
jl
pcmpeqd
cmp
pop
jmp
pop
mov
loopne
clc
enter
ss
icebp
aaa
mov
jmp
or
out
cli
sbb
jmp
leave
sub
fnstcw
shll
or
js
pop
fcmovnbe
or
cmp
lds
add
ja
adc
ret
mov
movsl
jg
or
mov
incb
xor
popf
and
xor
jmp
mov
cltd
jo
clc
mov
sub
incl
daa
rcrb
dec
sbbl
loope
adc
dec
or
loop
push
cmp
mov
sbbb
cli
cmpsl
mov
inc
cmp
jp
je
pusha
push
mov
fsin
push
mov
movsl
inc
movsb
cmc
lods
les
pop
or
jno
shl
and
divb
pop
cmpsl
lret
xchg
inc
sub
in
cs
addr16
enter
add
lods
sub
ja
std
mov
cli
cmpsl
mov
sub
push
push
jnp
bound
push
mov
and
mov
pop
stc
pop
xchg
cwtl
jne
cmp
fisttpl
les
popa
test
pop
ds
insb
jb
inc
add
orl
les
in
je
sub
and
ja
shr
push
jg
push
sbb
fmul
mov
add
rclb
ss
mov
gs
jb
push
cmc
xor
les
fisttpll
test
pop
test
jg
pusha
cmpsl
fwait
sub
mov
add
loopne
fiadds
and
sbb
jmp
cmp
pop
push
inc
jne
xchg
mov
mov
lret
rcr
jns
jg
shl
and
inc
adcl
or
inc
dec
mov
repz
push
addr16
arpl
scas
in
sbb
in
mov
and
test
outsb
mov
bnd
push
inc
pop
push
shlb
sbb
mov
ja
dec
fistps
sbb
or
mov
push
in
mov
and
add
pop
stos
cld
dec
mov
in
cmpb
outsb
mov
mov
push
loop
dec
and
movsb
push
addr16
out
jg
ss
adc
sub
aam
hlt
ljmp
icebp
dec
adc
ss
lods
jmp
adc
mov
std
ret
cli
repnz
hlt
inc
mov
cltd
or
cmp
int
lret
jo
dec
lods
xchg
inc
mov
inc
pop
xchg
dec
iret
cmp
push
movl
stos
aam
pop
stos
push
jns
jge
sub
js
lds
cwtl
adc
out
jge
jg
orb
dec
xchg
jno
in
mov
popa
and
ror
ret
jno
enter
cmp
sbb
arpl
cmpsb
jmp
jmp
sbb
mov
cs
mov
incl
mov
ret
data16
fildll
jo
mov
fcoms
sub
icebp
shl
push
clc
cmpsl
xchg
and
stc
xlat
inc
cwtl
mov
pop
daa
fnstsw
add
jmp
popf
push
push
mov
out
fcomp
leave
fldln2
xor
and
lock
std
cmp
add
cli
leave
or
xlat
ret
das
in
lods
dec
add
gs
jns
xchg
dec
and
mov
roll
dec
xchg
stc
ret
out
les
and
pusha
call
push
rorb
insl
and
out
ja
into
test
xchg
jge
je
push
lea
jbe
ljmp
lods
push
mul
rcr
mov
fs
in
popf
popf
add
mov
inc
mov
mov
adc
loope
lock
cld
pop
and
mov
mov
addr16
rcrb
repz
lcall
push
push
icebp
in
mov
imul
xor
mov
jb
movl
lods
fisubrl
mov
mov
into
dec
mov
sub
ret
mov
testb
ret
push
mov
outsb
shrb
call
xchg
loopne
scas
or
loopne
iret
sub
leave
scas
xor
ss
rclb
adc
rol
dec
sti
lret
xor
cmpsl
arpl
pop
and
out
cwtl
arpl
or
mov
adc
sub
lds
in
sub
inc
mov
adc
xor
outsl
mov
xor
cmp
int
dec
pop
repnz
or
jl
insl
cld
ljmp
push
nop
clc
call
mov
je
sub
adc
adc
mov
mov
scas
pop
loop
mov
jne
mov
cmp
xor
divl
std
test
js
sarl
mov
repz
pop
rorl
out
mov
int3
or
ret
and
mov
push
aam
lods
hlt
sbb
or
fdiv
out
ss
imul
pop
and
ret
xor
cmp
sub
popa
test
andb
sbb
fsubp
add
shlb
and
cmp
xor
ljmp
mov
push
lods
sbb
cmp
in
addl
in
jmp
fdiv
negl
popa
pop
pop
dec
imul
fnsave
pop
push
in
xor
rolb
dec
jns
imul
lcall
dec
sub
into
ror
aad
xor
loop
push
jne
pop
mov
pushf
ja
jnp
xchg
sub
dec
sbb
popf
xchg
xchg
sub
in
push
adc
sub
lahf
cmpsb
jl
mov
mov
sbb
mov
mov
popa
repnz
pavgb
imul
sti
fstpt
in
or
popa
outsl
mov
std
das
jmp
add
mov
inc
je
arpl
jo
shll
xor
in
loope
pop
loop
ljmp
stos
push
sar
sbb
cwtl
clc
call
movsl
sub
xchg
into
jl
mov
sahf
rcrb
les
mov
out
out
insl
xchg
pop
mov
xchg
and
mov
add
inc
xchg
push
int3
mov
jmp
pop
jl
scas
lahf
gs
sbb
testb
push
dec
push
cwtl
out
out
movsl
addr16
popf
mov
gs
sub
lods
pop
adc
mov
or
scas
fstps
ret
imulb
inc
sbb
add
jg
mov
add
cmp
push
cmp
adc
pop
or
subl
in
xchg
jmp
mov
les
call
int3
gs
mov
pop
les
inc
mov
test
jmp
shl
xchg
cs
pop
add
lods
push
lods
or
aas
add
mov
scas
mov
adc
je
dec
sbb
cmp
mov
movsb
movsb
sub
sbb
jb
cmp
push
mov
jle
xor
sub
std
or
aaa
in
popa
sbb
jae
inc
xor
insb
aaa
jae
adc
push
pop
or
mov
adc
push
sub
jp
xchg
pushf
sub
sbb
adc
test
jno
jl
shll
loopne
cs
sbb
loope
pop
lcall
shll
xchg
mov
cltd
aad
adc
xchg
jmp
add
jb
out
push
in
outsl
jp
xchg
scas
rcll
subl
dec
mov
popf
in
mov
loop
das
inc
xor
xor
cld
movsb
nop
jo
pushf
lea
mov
xchg
fucomip
es
shrb
fmul
jl
ss
sub
js
mov
ljmp
lods
add
push
jle
mov
add
in
imulb
mov
add
loopne
mov
movsl
xor
out
subl
test
and
cmpsb
xchg
mov
cli
xchg
in
lcall
test
mov
mov
mov
fimuls
and
ret
pop
pop
pop
mov
dec
xchg
sbb
sub
mov
or
xchg
ss
int
loop
jns
rorb
fs
xchg
pop
clc
out
cmpsb
js
xchg
pop
sahf
outsl
jle
into
jo
fisubrl
xor
xor
cmc
gs
pop
pop
loopne
daa
mov
lods
in
stos
arpl
stos
cwtl
out
rorl
sbb
pop
je
mov
in
loop
xor
mov
mov
add
inc
icebp
mov
pop
clc
out
in
int
cli
scas
loope
mov
inc
mov
sbb
jae
or
ja
xor
cmc
popf
divl
stc
es
stc
iret
movb
jmp
xchg
sub
and
pop
je
fbld
dec
fisubrl
jmp
inc
stos
adc
sub
xor
adc
fnstenv
adc
shlb
inc
loop
cmp
pop
sarl
xchg
pop
mov
imul
and
push
rcr
or
or
ret
adc
gs
adc
push
fsubrs
inc
dec
lret
jns
xchg
enter
rcrb
adc
lods
mov
leave
faddl
cld
xchg
negb
out
stc
lods
ret
loopne
adc
dec
sbb
in
jp
adc
addr16
cmc
or
or
and
adc
cmp
cmc
sbb
insb
sahf
jmp
fldenv
sahf
hlt
jae
jne
das
repnz
xchg
or
mov
insl
lea
cmp
sub
lock
popf
jb
or
push
mov
lock
xchg
lea
dec
lock
fimull
inc
inc
mov
xor
xchg
mov
cld
andb
aam
sbb
in
and
sub
push
into
pop
movsl
push
fisubrs
push
xor
pop
push
cmc
lahf
adc
std
pop
mov
fcomps
in
or
jecxz
sti
xor
add
sub
add
ret
xchg
pop
dec
mov
or
pop
stc
push
mov
adc
aaa
or
ja
push
mov
test
rorl
mov
insb
pop
xchg
jno
xchg
loopne
inc
jo
jle
mov
mov
ss
jle
out
or
in
test
or
aam
lds
push
push
cmp
xor
xchg
movsl
call
dec
add
lret
or
nop
sub
dec
inc
cli
push
lea
cmc
inc
inc
es
loopne
cltd
inc
pushf
inc
push
dec
mov
fsubr
pop
addl
insb
xchg
cld
sub
mov
xchg
mov
js
pushf
sti
sub
xlat
xor
cltd
cmpsl
lods
add
rol
pop
inc
mov
in
lods
dec
push
fidivrl
lret
mov
daa
mov
sbb
loope
imul
mov
dec
xlat
mov
push
leave
cvtdq2ps
dec
int
xchg
mov
dec
xchg
aam
jge
and
andb
push
mov
and
dec
mov
enter
cwtl
or
dec
dec
xor
dec
inc
push
sbb
push
push
adc
jle
pop
mov
jbe
in
jbe
cltd
outsb
push
adc
movl
push
pop
and
outsb
fimull
jno
cmpsl
ret
in
fucomi
mov
repz
mov
cmc
jno
loop
add
inc
pushf
fistpl
or
adc
arpl
std
push
jle
cmpxchg
fnstenv
push
push
enter
icebp
xchg
xchg
lea
xchg
cmp
pushf
xor
aad
mov
ss
mov
pop
imul
lahf
jo
mov
inc
dec
andb
mov
pop
push
in
das
fistpl
idivl
push
divb
inc
push
cmp
shll
cmp
xchg
xorb
dec
sub
mov
push
fisubl
in
bound
mov
lcall
ret
push
int
int
test
ja
sahf
jmp
xchg
sbb
das
push
push
ljmp
popa
lcall
mov
ret
adc
fdivp
pop
mov
shll
mov
jl
cmp
iret
ret
sbb
adc
cmp
fsubrp
dec
or
movl
mov
mov
jb
fndisi(8087
rclb
cmp
sbb
rclb
sbb
sub
dec
sub
add
mov
sbb
ljmp
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
mov
in
jnp
pushf
jnp
sbb
pop
leave
inc
mov
loop
jno
into
jecxz
pop
cli
push
loopne
xor
shr
inc
and
ljmp
je
rorl
aam
outsb
or
sbb
ja
sar
sbb
sub
xor
sbb
xor
push
loopne
mov
sub
mov
jns
rcll
adc
sbb
orb
cli
xchg
and
fisubs
mov
push
repnz
aad
jge
sti
hlt
pop
and
and
mov
jb
sti
incl
aad
cmp
insl
push
gs
pop
cmpsb
hlt
popa
jns
mov
das
popa
into
test
xchg
jno
pop
jb
xor
or
imul
out
ja
lock
pop
ret
inc
jmp
mulb
les
add
mov
mov
mov
addb
leave
push
and
jecxz
mov
jo
push
and
inc
push
daa
mov
cwtl
add
ljmp
scas
mov
inc
js
and
sub
and
dec
int3
fdivr
mov
ret
out
push
cmp
and
fcoms
mov
fwait
mov
xchg
aaa
ss
jmp
pop
push
notb
lds
sbb
outsb
jge
cmpsl
cmp
add
mov
insl
cmc
icebp
and
stc
lock
lea
and
add
xchg
outsl
pop
mov
repz
add
push
loop
movsb
int
out
adc
test
fldenv
repnz
test
movsl
sub
sbb
imulb
push
adc
xchg
cmp
adc
dec
sub
ja
sbb
sub
leave
out
or
mov
pushf
out
sbb
xlat
repnz
cmp
push
pop
push
mov
fs
cmpsb
pop
filds
pop
ss
dec
leave
sbb
pushf
das
push
loop
dec
leave
into
mov
idivl
fsub
popf
les
inc
cltd
dec
shll
sbb
outsl
pop
fimull
enter
pushf
test
out
lcall
push
pop
jmp
or
and
nop
adc
sahf
imul
jg
movsb
xchg
mov
fwait
jo
push
lock
out
mov
mov
inc
lcall
sub
mov
mov
frstor
imul
lret
xchg
jge
jne
and
xor
jb
ret
push
mov
mov
int
and
pop
out
out
test
mov
jo
or
add
clc
std
aad
cmc
in
add
enter
mov
and
sbb
and
mov
jg
mov
xchg
cmp
stos
lea
jl
cmpsb
sbb
popa
xchg
arpl
sub
push
inc
sub
sbb
imul
and
mov
mov
xorb
aam
scas
in
int
cmpsl
pop
add
mov
inc
inc
rcrl
or
pop
jp
mov
dec
xchg
in
lahf
loopne
fs
mov
ret
lods
mov
js
test
xor
jge
js
add
test
sbb
cmpsb
lcall
sahf
xor
lods
dec
mov
and
repnz
cmp
mov
in
inc
and
push
pop
sbb
jle
mov
xchg
aaa
adc
int3
call
mov
push
out
fbld
subl
push
gs
ja
div
sub
xchg
movsb
cmpsl
pop
xchg
stos
das
insl
mov
stc
and
notb
add
mov
negl
add
imul
sbb
cmp
sub
lock
push
mov
mov
mov
mov
mov
imul
xchg
pop
jae
or
add
xchg
jge
xor
cmp
imul
adc
cmp
test
xchg
imul
and
popa
mov
iret
adc
dec
push
stos
pop
xchg
test
sbb
lret
push
xor
fidivrs
lcall
inc
insl
scas
bound
fwait
inc
stc
xor
clc
cmpsl
mov
rcr
mov
mov
adc
dec
jnp
dec
fdivp
jmp
rcll
aad
xchg
cltd
in
movzwl
push
mov
out
sbb
mov
fs
push
push
nop
and
or
inc
push
xchg
test
inc
pand
aad
add
push
shlb
mov
jp
test
xor
pop
mov
mov
dec
inc
fiaddl
in
add
inc
aam
mov
enter
fsts
jl
arpl
mov
iret
adc
pop
inc
add
repnz
add
sti
pop
outsb
jecxz
cld
popa
ds
jb
pop
cmp
jge
pop
das
aaa
xchg
xchg
test
pop
adc
stc
jbe
sbb
adc
jg
scas
and
scas
or
add
mov
fiaddl
lds
add
test
js
sub
mov
mov
inc
add
push
xchg
sub
dec
pop
xchg
mov
jge
shrl
cwtl
xchg
jg
cmp
pop
push
push
xor
pop
test
mov
outsb
xchg
sarl
push
outsb
jnp
lret
mov
mov
add
imul
int
adc
rcl
mov
mov
inc
fst
pop
dec
add
pop
mov
xor
cmpsl
mov
stos
scas
dec
push
lods
cwtl
lcall
jp
adc
fists
clc
test
adc
dec
outsb
rclb
dec
add
mov
mov
lock
in
dec
push
pop
push
popf
stc
adc
or
mov
sbb
adc
out
test
mov
stc
clc
adc
sbb
xchg
dec
icebp
lahf
or
ds
sub
shlb
cmp
push
ja
shll
lods
ss
out
push
test
js
sahf
xor
mov
int3
jne
cmp
mov
in
cmpsl
test
outsl
clc
movl
or
je
std
adc
inc
jmp
adc
fldl
imul
dec
mov
xchg
in
lock
stos
or
xor
mov
scas
rcr
push
rcrl
xchg
or
inc
jne
js
sti
jp
out
mov
mov
hlt
mov
test
rcrl
fucomip
sbb
fmulp
inc
inc
nop
or
xor
pop
inc
push
cli
sbb
xchg
adc
stos
ror
add
fs
mov
orb
mov
sti
and
stos
fs
add
fildll
jl
push
lds
bts
pop
sbb
push
ret
call
arpl
fwait
sub
mov
out
cmp
pop
jp
jl
sbb
jp
lock
add
stc
inc
jbe
mov
adc
cmc
sbb
std
xchg
push
pop
pop
fstpl
sbb
fisttps
imul
pop
jg
sbb
inc
xorb
jl
mov
ret
rcrb
outsl
inc
rcrl
dec
outsl
scas
das
bound
adc
and
test
fst
leave
pop
jns
rcrl
out
out
adc
sbb
in
nop
filds
fisubs
xor
clc
imul
add
xor
leave
jo
push
mov
sub
sbb
ja
dec
lock
jnp
dec
test
xchg
rcrb
scas
fstpl
dec
cmpsb
pop
mov
fidivl
cld
lock
mov
fistl
sub
xchg
jnp
insb
and
in
lods
notb
arpl
inc
mov
aas
enter
stos
lods
daa
or
loopne
mov
out
inc
xchg
inc
inc
cmp
pop
mov
mov
mov
pop
lahf
sub
xchg
test
cmp
push
or
jg
adc
pop
sub
adc
inc
xchg
outsb
and
xor
sbb
shll
inc
jg
fisttpl
cmc
or
cmp
push
xchg
sti
roll
push
je
lods
add
ja
arpl
fwait
mov
or
sbb
clc
sub
pop
rorl
mov
xor
call
pop
cmc
jae
xchg
jo
js
xchg
inc
stos
movsl
dec
push
in
cmpsb
fists
dec
lret
and
xor
xor
cmp
mov
cmp
sbb
cmp
idivb
push
push
jae
pop
cmp
mov
sub
sbb
aad
test
mov
jae
lods
adc
mov
js
or
push
lret
ficoms
mov
push
in
pusha
jg
jnp
pop
rolb
leave
or
push
rcrl
ljmp
lock
or
pop
pop
pop
adc
subb
adc
test
mov
dec
pop
cmp
xchg
push
aam
mov
sub
sbb
sub
mov
inc
xchg
adc
push
xchg
ds
lds
push
js
scas
xor
pusha
outsl
arpl
and
sahf
cs
push
mov
pop
mov
rcrl
int
mov
popf
adcb
test
addr16
adcb
jmp
outsl
push
and
les
inc
call
cmp
movsb
add
push
add
add
stos
out
in
xor
adc
mov
sub
loopne
xor
cli
clc
inc
dec
adc
mov
mov
mov
pop
es
mov
ret
xchg
inc
cltd
fwait
push
push
idiv
test
push
jp
or
inc
cltd
imul
adc
lahf
push
push
add
std
mov
lods
jle
pop
aad
push
inc
std
mov
push
or
gs
pop
push
insl
cmc
and
outsb
add
pop
repnz
and
mov
stos
dec
pusha
sub
mov
xchg
jo,pt
add
pusha
xor
insb
push
and
lods
sbb
mov
jmp
int3
faddp
popf
mov
movsb
jecxz
aam
add
cmp
cs
jle
imul
lcall
lcall
sbb
aam
pop
test
sub
sbb
dec
lds
pushl
xchg
xchg
xorb
rorl
jg
inc
int
out
cmp
push
pop
or
mov
and
pop
pop
mov
jge
popa
clc
inc
ret
inc
jge
or
lock
mov
pop
lods
mov
jl
cli
xchg
mov
hlt
push
lods
cli
mov
out
adc
cwtl
dec
mov
sub
sbb
sbb
jle
aam
int
loop
fcomps
adc
aas
fsubr
jno
dec
cmp
imul
stos
aad
xor
lods
or
fbstp
leave
push
pushf
lock
in
sub
mov
or
leave
xor
pop
push
jo
push
mov
mov
divb
mov
sti
pusha
mov
sbb
jnp
adc
or
stos
or
xor
arpl
xor
jne
fcmovnbe
hlt
shl
out
outsl
sub
sub
sbbl
stc
sub
mov
or
cmp
or
jns
jbe
test
cmp
mov
testb
adc
cmp
shr
pop
pop
and
cli
sbb
push
fisttps
stc
hlt
xchg
lret
mov
inc
jo
fidivl
or
les
mov
inc
sub
dec
and
addr16
dec
adc
jmp
int3
inc
lcall
mov
adcl
and
vmptrst
jecxz
xor
inc
add
xor
scas
outsl
movsl
mov
jns
incb
inc
adc
lcall
stc
and
xorb
sub
pop
jle
xor
ja
jle
pop
xchg
das
leave
or
cmp
sbb
sbb
fwait
push
stc
subl
or
pop
mov
nop
mov
xor
je
mov
inc
push
test
mov
hlt
xlat
adc
arpl
mov
repnz
aam
adc
inc
mov
or
jne
in
mov
arpl
icebp
jne
repnz
lret
icebp
dec
insb
mov
leave
push
out
addr16
cli
adc
xor
lds
rcrb
test
jecxz
leave
arpl
sub
cmpl
insl
or
fdivr
dec
jns
ss
or
cltd
into
sahf
push
mov
push
imul
scas
pop
hlt
stos
sub
pusha
sub
add
mov
xchg
repz
cs
out
mov
cli
inc
fwait
sub
adc
mov
test
inc
out
outsb
inc
mov
aaa
imull
xchg
lret
jns
and
adc
jg
jo
in
in
in
mov
add
lods
xchg
sub
icebp
xchg
hlt
adc
int3
adc
dec
cwtl
repnz
shlb
and
in
or
mov
adc
in
jl
movsl
xor
sahf
push
outsb
and
aas
pop
nop
push
fsubs
lock
mov
int
insb
loop
mov
sbbb
mov
or
jle
testl
ja
mov
pop
pop
xchg
fistl
mov
dec
push
xchg
xchg
mov
fstpt
lahf
lds
std
jne
out
add
and
mov
and
inc
maskmovq
testl
or
xacquire
jno
mov
aad
pusha
push
fldenv
testl
mov
cmp
outsl
cmp
or
or
pop
xor
pop
out
xor
mov
jnp
and
dec
out
mov
xchg
shl
cmp
lea
or
hlt
cmc
push
inc
mov
mov
adc
aad
lods
add
adc
sub
aaa
jne
daa
imull
nop
xor
testb
rcrb
ret
mov
sbb
orb
push
cld
mov
adc
mov
mov
sbb
test
mov
das
lcall
inc
inc
push
loop
pop
xor
xchg
xchg
push
jg
mov
add
add
data16
push
and
mov
in
scas
sub
adc
inc
repnz
sbb
push
rol
popf
lret
push
pop
adc
in
or
clc
sbb
inc
xchg
pop
out
sbb
mov
in
pop
jb
ret
push
or
divl
jle
clc
dec
dec
out
sarb
sbbb
sbb
sbb
add
jmp
push
aad
fadd
xchg
jbe
fcomp
jns
jmp
mov
test
jbe
out
jecxz
imul
cmc
sub
mov
ficomps
cmp
out
addr16
jecxz
adc
cmp
imull
scas
test
aad
inc
fs
mov
xor
sbb
lret
dec
jge
iret
xor
rolb
aad
ds
mov
sbb
jg
or
xchg
push
jo
repz
into
jmp
jge
daa
jg
and
mov
inc
neg
aam
and
rclb
gs
dec
gs
cltd
mov
loop
add
sub
sbbl
jp
stc
add
fdivp
dec
inc
adc
mov
ret
dec
enter
and
sti
xchg
iret
push
movsl
lods
pop
jae
imul
jne
jmp
dec
in
rorb
fsubrl
pop
xchg
and
adc
jnp
cwtl
flds
inc
mov
out
pop
aam
mov
pop
nop
mov
enter
cmp
pop
push
cmc
dec
adc
pop
mov
push
in
mov
fcoml
mov
scas
movsl
lods
rolb
lret
xor
adc
iret
inc
mov
repnz
cmp
insb
mov
lea
xchg
and
mov
add
xchg
into
add
xchg
repz
ja
aas
aad
popf
js
pop
fcompl
js
scas
sub
mov
xchg
gs
enter
jg
pop
test
lds
pop
push
test
or
push
xchg
in
and
jl
add
dec
faddl
mov
call
pop
push
shlb
out
mov
inc
fs
dec
inc
and
sti
cmp
sbbb
loopne
and
ret
xchg
mov
mov
pop
add
inc
or
lods
js
dec
fidivrs
dec
cld
das
push
loope
push
push
xchg
cmpsb
inc
fadds
sbb
in
icebp
outsl
cmp
adc
rorl
mov
sarb
and
ret
mov
mov
and
dec
and
stos
add
cmpsb
les
xchg
sahf
pop
add
daa
enter
test
rorl
sub
mov
fmuls
adc
les
mov
push
stos
xor
fisttps
xchg
cmc
jns
daa
push
aad
notl
aad
loope
cmp
lret
andb
mov
aas
insl
sub
mov
test
mov
lcall
push
sar
jb
scas
out
cmpsl
or
addr16
mov
cli
fdivrs
test
add
jge
xor
in
jnp
dec
pop
fstpt
inc
mov
stos
xchg
pop
insl
xor
mov
stos
cs
in
pop
xor
fisttps
roll
inc
inc
faddl
xlat
loopne
cmpsb
lahf
sub
mov
jns
push
push
jb
out
jo
pop
jp
add
out
lds
sub
mov
imull
jp
push
outsb
in
mov
mov
shlb
pop
out
sbb
sub
xchg
jns
repnz
inc
in
imul
jge
cmpsl
cmp
push
ds
aam
push
rep
mov
mov
lret
rclb
out
add
fadds
and
mov
shl
push
jecxz
pop
pop
fsubrs
push
push
mov
aam
add
xor
arpl
xchg
cmp
push
movsl
fidivrs
lahf
mov
sub
repz
push
gs
pop
cwtl
sbb
mov
pop
adc
hlt
mov
cbtw
mov
popa
pushf
rclb
repnz
or
outsl
jb
cmp
pop
je
mov
push
in
cmp
inc
scas
dec
sub
std
sbbl
xchg
mov
nop
jp
jbe
add
mov
fwait
nop
fs
lret
cmp
add
mov
std
dec
outsb
cld
jnp
hlt
test
gs
push
xor
adc
add
xchg
fimull
jo
pop
adc
mov
cmp
data16
jbe
popa
cmp
push
mov
jnp
mov
jnp
arpl
out
push
adc
cmpsl
jnp
cmp
inc
dec
pop
pop
mov
dec
out
xchg
cmp
pop
and
aad
adcl
lods
add
jge
nop
push
test
inc
in
lcall
in
mov
movntps
cmpsl
cmp
pop
adc
push
pop
inc
cmp
testb
cmpsb
movb
pop
jae
pop
aad
mov
push
popa
mov
gs
movsb
push
sub
in
js
cmp
cltd
mov
sub
into
or
push
cmp
add
adc
rorl
or
or
inc
and
stos
and
add
and
adc
lret
orb
push
dec
xor
xchg
jno
xchg
mov
and
int
push
adc
mov
shll
xchg
out
arpl
das
cld
sbb
ja
cmp
mov
or
and
adc
xchg
test
aaa
dec
adc
fsubs
jge
dec
out
and
int3
js
ss
sub
hlt
adc
or
bound
xor
test
stc
mov
pusha
dec
scas
test
adc
or
aam
adc
dec
xor
ljmp
sbb
adc
movsl
push
ret
push
mov
hlt
mov
push
testb
stos
leave
inc
cmp
pop
scas
out
mov
and
lahf
jg
imul
lods
inc
das
pop
int
das
aaa
popf
fidivs
or
pop
cs
and
or
movsl
pop
js
mov
dec
dec
add
sbb
jo
pushf
add
and
mov
movzbl
mov
nop
loop
out
rorb
push
sub
repnz
pop
jns
jns
test
shrb
or
mov
cli
outsl
pop
lods
or
repz
inc
arpl
mov
sbb
add
mov
in
fcmovnbe
flds
adc
inc
or
sbb
xor
dec
pop
jmp
std
inc
int3
les
incl
sub
movsb
sub
sbb
jp
test
or
jecxz
mov
pop
es
pop
fmull
leave
lret
popa
outsb
dec
push
int3
mov
pop
sarl
cmc
test
push
mov
or
int3
sbb
push
fldenv
push
push
adcl
js
adc
sbb
and
and
cmpsb
cli
pop
adc
jb
jno
mov
mov
push
adc
mov
cmp
loope
ja
mov
and
mov
dec
pop
push
adc
sbb
fisubrs
in
loopne
stc
sbbb
int
out
mov
push
sahf
push
in
in
nop
or
cmp
xchg
mov
sub
clc
cwtl
mov
gs
sub
sub
push
fcmovnbe
sti
adc
mov
out
pop
xlat
mov
push
scas
and
mov
xor
pushf
stos
dec
imul
jnp
push
pop
pusha
adc
inc
and
pop
lods
mov
cmp
in
jle
imul
mov
adc
pop
fwait
mov
popf
inc
test
sbb
out
lock
mov
push
jle
add
insb
lods
lcall
add
out
sbb
mov
jle
mov
fnstsw
push
call
mov
xor
and
fdivs
jno
cmp
pusha
stos
int
fs
pop
jno
xchg
cmp
push
mov
fisttps
push
lods
and
dec
dec
mov
imul
mov
xchg
gs
loopne
cli
sub
mov
nop
dec
into
repnz
testb
and
cmc
mov
shr
inc
out
pusha
ret
mov
pop
repnz
clc
dec
and
jg
scas
stos
cs
inc
ret
les
aam
popf
scas
inc
and
push
and
pop
mov
mov
mov
pop
rorl
inc
push
lods
hlt
xor
xchg
movsb
inc
push
xorb
in
jbe
jp
mov
ljmp
adc
dec
xchg
or
bound
dec
jb
jns
vpcmpeqb
test
out
lods
push
cld
inc
push
in
mov
les
je
xchg
or
lods
inc
sahf
pop
mov
ds
mov
and
dec
nop
mov
push
mov
mov
and
cmp
sub
mov
es
pop
test
test
dec
sti
aad
ret
pop
lret
sarl
jecxz
mov
mov
icebp
add
jb
jne
shll
dec
and
pusha
stos
int
stos
rolb
stos
ror
gs
rorl
in
sbb
xchg
pop
or
pop
mov
sbb
int
xor
cld
cmpsl
adc
sub
xchg
cwtl
movsl
insb
push
dec
xor
dec
movsb
and
js
jae
mov
jno
mov
dec
inc
mov
cmc
adc
fwait
jge
in
xchg
stos
and
pop
cmpsb
gs
std
mov
pop
jmp
xchg
jnp
xchg
nop
faddp
lret
mov
gs
pop
loopne
jg
mov
std
aaa
or
paddq
sub
outsb
movsl
test
xchg
inc
out
nop
cld
xor
sub
pop
xchg
push
xor
or
out
mov
popf
dec
and
hlt
push
lods
or
push
div
dec
ja
aas
jo
mov
bnd
andnps
jl
fstpl
iret
push
mov
dec
lods
inc
xlat
pop
mov
lods
les
sahf
mov
iret
or
and
jnp
dec
adc
jge
mov
fldt
cld
in
adc
imul
test
sub
ljmp
push
push
sbb
lcall
inc
pusha
pop
dec
fs
mov
jnp
adc
fs
pop
inc
not
in
mov
stos
push
xchg
xor
outsb
cmpsb
push
dec
lahf
bound
adc
stos
inc
jnp
sar
fnsave
push
in
ret
idiv
pop
and
pushf
rcrl
sub
inc
adc
sub
mov
test
lcall
xor
push
fadd
insl
xchg
test
lcall
cwtl
push
push
mov
fdivr
pusha
mov
lods
fcompl
je
jp
sub
add
xor
mov
addl
mov
mov
sbb
inc
pop
xchg
sub
mov
es
cmp
test
cmp
aam
cmpsl
xchg
push
or
and
adc
test
scas
pusha
inc
xor
mov
jb
ret
es
adc
push
or
dec
jns
inc
out
js
adc
pop
mov
cmp
jns
stos
mov
dec
mov
rcl
sti
push
out
add
pop
or
shll
cmp
mov
cltd
fdivr
push
inc
stc
sub
fnsave
lea
cltd
testl
mov
cmpb
in
dec
aaa
push
mov
jmp
shll
mov
in
lea
mov
and
cmp
lods
xor
mov
mov
inc
bound
inc
dec
or
pushf
jge
cmp
sub
jns
in
negb
popf
clc
xlat
sti
ds
pop
pusha
inc
gs
mov
fwait
pop
shl
lock
frstor
dec
inc
xchg
push
mov
sti
inc
cmp
insb
imul
dec
cmc
popf
jne
mov
jns
cmp
pop
pop
test
pushl
mov
sub
adc
inc
insl
xchg
mov
sbb
sub
jp
stc
pop
dec
cmp
popa
scas
lret
cmp
jno
xor
jns
xlat
pop
push
adcl
scas
inc
out
pusha
dec
jmp
std
inc
cmpsb
and
daa
ss
sbb
cmp
mov
xor
inc
call
jp
sub
popf
lock
jae
mov
cmc
sub
mov
out
icebp
adc
repnz
insl
cmp
xchg
lods
call
ja
lock
shl
sub
sub
or
mov
sub
sbb
popf
repz
scas
int3
push
inc
movsl
lds
cwtl
leave
pushl
popf
popa
fsubrl
inc
cmp
shlb
mov
cmp
cltd
pop
xchg
loope
test
cmpsl
or
sub
pop
movsl
int3
mov
ret
sub
jne
imul
movsl
mov
jg
push
or
cmc
dec
or
xor
leave
sub
inc
aaa
jnp
aad
dec
les
fstpt
insl
xchg
mov
pusha
and
mov
fstps
push
and
pusha
mov
enter
dec
cmp
pop
enter
xchg
repz
push
shl
and
std
dec
repz
stos
push
dec
xchg
outsl
adc
lret
insb
ret
pop
xor
scas
aas
jp
add
jae
jle
xor
mov
call
jge
sbb
inc
mov
aam
dec
adc
sar
jb
imul
cmp
loope
aaa
movsb
sub
add
loop
xor
sbb
test
xchg
pop
xchg
mov
cmc
xor
push
xchg
pop
xor
ret
mov
subl
lcall
stc
jl
and
xor
adc
jo
xlat
inc
add
sub
es
adc
adc
inc
ss
mov
or
or
sub
inc
mov
mov
in
mov
stos
dec
push
mov
mov
or
out
sbb
sbb
xchg
mov
xor
cmp
dec
rcrl
into
fldt
scas
ret
and
push
sub
dec
pushf
out
cmpsb
sub
cmp
inc
les
out
popf
xchg
in
adc
fcoms
mov
sbb
dec
sbb
push
fisttpl
inc
ljmp
xor
mov
ffree
sbb
inc
movsb
ror
xchg
cmp
icebp
aam
jns
stc
xor
jl
and
pop
in
cwtl
xorb
stos
cmp
pop
popf
pop
cltd
rclb
mov
loop
mov
add
or
les
xorb
mov
mov
lahf
sub
pop
dec
lds
push
aas
mov
push
push
mov
outsl
adcb
leave
mov
rcll
insl
jne
sub
fisttps
out
cmp
lret
jns
repz
mov
cmp
cld
xchg
shrl
or
dec
sbb
jae
mov
add
ficoml
mov
push
ficoms
mov
subb
and
sub
leave
shr
icebp
dec
js
popf
pop
bnd
loop
mov
les
push
xchg
notl
jmp
mov
shlb
xlat
sub
xor
mov
lds
adc
sbb
mov
xchg
cwtl
dec
pop
into
insl
lea
sbb
ror
mov
mov
and
push
push
jg
in
imul
sbb
hlt
and
and
int3
nop
fcompl
jl
ljmp
insl
mov
insl
jbe
or
out
lret
in
aam
jo
mov
push
stos
imul
iret
lret
sub
es
in
int3
push
icebp
mov
mov
xchg
in
adc
ret
pop
push
sti
lds
into
and
push
jg
jo
je
xor
or
pop
mov
ss
add
je
inc
jmp
inc
and
push
jne
xchg
jl
icebp
mov
and
lock
cmpsb
in
sub
cltd
or
cmpsb
xor
mov
push
xchg
ret
ljmp
pop
xor
push
dec
ja
es
add
inc
fistl
cltd
cmc
pop
arpl
and
pop
sub
pushf
dec
pop
jl
push
test
xor
dec
sarb
addb
mov
pop
push
xchg
add
jl
adc
clc
or
das
iret
mov
push
into
addb
in
test
scas
adc
push
pop
mov
xchg
in
gs
pmaxub
add
stos
and
rolb
jge
std
orb
imul
sbb
repz
mov
add
mov
clc
hlt
dec
mov
lods
dec
mov
push
out
push
pop
jp
xor
xchg
adc
jne
sbb
sub
lds
mov
jno
and
cmp
or
mov
xchg
or
shrl
pop
mov
or
pop
jo
mov
jle
cli
mov
add
mov
mov
mov
dec
pop
in
hlt
ret
inc
add
sbb
mov
sbb
insl
mov
insl
rolb
int
and
and
sub
xor
add
scas
imul
lret
inc
mov
data16
adc
loope
push
xor
ja
inc
sub
js
mov
lret
sbb
xor
stc
out
push
fwait
xorb
jne
lods
popf
cmp
fadds
int3
leave
fiaddl
in
xchg
mov
mov
decb
mov
push
and
ljmp
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
lock
orb
jnp
pushf
jnp
sub
out
cld
push
sbb
mov
shrl
mov
jmp
add
push
incl
lods
sbb
push
pop
call
push
mov
lods
and
out
into
data16
pop
jge
subb
outsb
lock
and
loope
cmpsl
icebp
or
mov
int
mov
mov
add
imul
sub
mov
xor
addr16
dec
sbb
cmc
sahf
adc
scas
xlat
sahf
out
fs
ja
fldt
loopne
cmpsl
dec
or
dec
or
movsb
shrb
test
stos
pusha
mov
cmp
push
jmp
lret
pop
aas
shll
mov
subb
fs
pop
dec
xchg
out
or
cwtl
sbb
and
push
dec
pop
mov
sub
pop
adc
into
xor
adc
ss
mov
nop
imul
mov
mov
cwtl
lahf
mov
and
xor
jg
popa
push
fnsave
cmp
das
fstpt
or
xor
lds
test
or
int
mov
dec
xchg
outsl
push
jecxz
sbb
out
mov
mov
push
sub
mov
mov
or
aaa
insb
pop
loop
lea
and
pop
aaa
inc
pushf
sbb
ja
push
lds
inc
mov
cwtl
xchg
ret
imul
inc
fidivl
jl
repz
aaa
or
inc
xchg
and
inc
sub
xchg
and
dec
std
lahf
subl
imul
xchg
xor
pop
xlat
fdivl
sbb
fs
stc
and
cltd
or
sub
fisubrs
imul
push
fisubl
test
inc
lret
jle
dec
and
movsl
xchg
push
pop
fidivrl
fidivrl
or
adc
imul
xor
lea
inc
mov
adc
rcll
jmp
sti
push
pop
into
jl
mov
mov
clc
fdiv
mov
xor
push
cld
out
ret
and
add
mov
push
pushl
cmp
out
aas
out
inc
or
cmc
shlb
lret
inc
adc
sbb
xchg
lahf
in
or
insl
xlat
inc
bound
pop
gs
ss
jp
test
pop
outsb
xchg
bound
out
je
mov
mov
int
mov
insb
out
fmull
call
cmp
mov
sarl
jae
ljmp
ds
adc
clc
pop
loopne
push
push
pop
inc
push
scas
fs
inc
fidivl
fxch
dec
mov
adc
adc
jb
or
or
add
aaa
sbb
sbb
loopne
popa
mov
cmp
jbe
jg
stos
ds
sbb
add
out
loope
mov
test
xchg
mov
out
mov
dec
xor
test
loopne
sbbl
gs
jne
test
xchg
stos
mov
mov
mov
aas
mov
xor
mov
dec
mov
jl
mov
dec
jge
mov
lret
ja
jnp
xor
push
jmp
test
xorb
int
cmp
cmpl
cld
pop
sub
jge
inc
js
idivl
sbb
dec
push
outsl
je
mov
imul
adc
call
fnstenv
xor
repz
jno
sub
jge
cltd
sbb
xchg
add
sbb
mov
cmc
iret
mov
lea
sbb
ret
mov
mov
jnp
stos
mov
xor
xor
cmpsl
push
push
fs
rcr
test
out
dec
sahf
cs
rclb
xchg
mov
daa
mov
aam
bound
cld
and
add
ja
mov
cmp
pop
dec
mov
add
test
rcl
push
dec
int
shll
imul
jmp
jge
push
pop
xor
jle
lea
mov
jl
repz
mov
mov
push
out
aas
adc
jno
dec
aas
push
push
jno
jae
and
imul
add
push
and
push
cli
xchg
call
pop
pusha
and
jns
mov
ja
fldt
out
or
hlt
pop
lods
out
inc
push
loop
icebp
stc
test
in
push
mov
call
mov
or
das
pushf
les
rcl
add
adc
inc
push
iret
neg
mov
mov
mov
jo
ror
cmp
sti
fisubrl
cmpsl
scas
lea
imul
xchg
test
hlt
out
pop
int
idivb
mov
fnstenv
inc
sub
test
xor
shr
iret
jecxz
sarb
js
sub
add
les
sub
jo
in
inc
and
in
shll
add
cmp
int3
js
add
or
mov
xchg
mov
mov
mov
test
out
sub
xor
sub
mov
adc
adc
andb
subb
enter
in
cmp
mov
mov
and
xchg
in
mov
stc
adc
sbb
dec
add
jecxz
adcl
mov
inc
jmp
dec
xor
cld
rclb
mov
pop
mov
inc
or
inc
mov
mov
mov
test
cmpsl
push
xor
mov
push
pop
fcoml
push
das
out
arpl
lahf
outsl
push
fnstsw
stc
sub
mov
xchg
adc
mov
clc
adc
lret
push
lods
adc
daa
cmp
fbstp
or
add
mov
pop
mov
in
dec
inc
test
aad
out
fdivrl
xor
pop
mov
loopne
and
loopne
loop
popa
fildl
mov
sbb
not
mov
xchg
js
inc
mov
movb
sub
dec
enter
push
jle
repnz
cli
jp
orb
inc
mov
and
std
test
in
pop
cmp
sub
sub
std
mov
das
jns
inc
sahf
jmp
mov
inc
pop
fbstp
dec
inc
shrl
mov
mov
xor
push
popa
into
cmp
mov
jge
adc
dec
adc
imul
repz
mov
rorl
lret
xchg
aas
dec
push
bound
jns
jp
sbb
sbb
jp
mov
fdivs
add
jb
stos
movsl
mov
popf
xchg
and
dec
jns
sub
mov
cli
insb
and
pop
test
mov
insb
es
vcvtpd2psy
into
push
das
test
lock
imul
pusha
movsb
mov
mov
fstp
xor
adc
out
pop
jle
xchg
imul
jb
ficoml
push
scas
xlat
icebp
lret
jge
mov
cld
aaa
rorb
inc
and
cmpsb
movsb
out
aam
mov
jno
insb
rcrl
lock
push
inc
int
sbb
cmpsb
lds
xor
repnz
iret
mov
pop
adc
mov
lods
outsb
add
lds
sub
sbb
push
mov
jns
in
jmp
mov
cmp
mov
xchg
jle
pop
mov
adcl
ljmp
pop
pop
lock
lock
xchg
popf
testl
or
out
fdiv
je
adcb
and
test
ljmp
int
test
cmc
sbb
sbb
inc
pop
fbstp
pop
into
jle
data16
mov
mov
xchg
or
jge
sub
sbb
cmpsb
cltd
stos
pop
addr16
in
jns
mov
xor
add
test
jne
icebp
mov
test
dec
sbb
shr
enter
test
ljmp
mov
mov
lcall
and
ror
jecxz
push
dec
jno
adc
push
or
mov
cltd
fsubl
std
mov
push
std
cld
pusha
pop
aas
and
push
jl
and
or
add
mov
stos
xchg
mov
or
enter
sahf
jle
xor
or
imul
pop
jb
out
mul
jmp
xchg
mov
and
in
inc
mov
mov
jge
inc
inc
push
xor
mov
and
xor
dec
xor
pop
clc
add
in
mov
adc
mov
sarb
scas
stos
sbb
test
dec
aam
aad
mov
lea
jge
cmp
inc
xor
test
ljmp
cmp
add
and
daa
cmp
sub
ret
js
sbb
rclb
mov
rorl
or
cmp
add
cltd
xchg
cli
or
insb
push
dec
lods
dec
mov
add
mov
in
and
fcomps
adc
cmpsl
mov
lock
lret
xor
mov
push
xchg
mov
das
bsf
enter
test
int3
es
jmp
cwtl
push
ljmp
jbe
pop
xchg
xlat
std
pop
rclb
sbb
pop
insb
rorl
cmp
adc
dec
pop
jnp
mov
out
mov
pusha
and
sahf
inc
insl
xchg
fld
dec
add
test
xchg
pop
mov
push
loop
mov
or
into
push
mov
adc
push
out
dec
test
mov
mov
inc
je
mov
stos
aad
cmp
repz
inc
jmp
mov
or
cmpsl
xor
cmp
xchg
das
and
xor
and
mov
jp
shlb
or
in
jp
and
cmp
outsb
mov
sub
mov
add
xor
test
aam
mov
lahf
insb
mov
push
push
mov
aas
fisubrl
cwtl
movsl
les
xchg
clc
inc
adc
xchg
push
stc
inc
jmp
jns
cmp
mov
test
jno
mulb
fwait
jge
les
mov
rolb
lret
xor
in
ret
cmpsb
mov
ljmp
loop
lea
add
cmp
jmp
sub
inc
and
cmp
jle
xchg
sub
movsl
dec
pop
sbb
push
push
les
loop
mov
setne
push
cld
jle
lcall
int3
xchg
jp
adc
in
sbb
shl
push
cmc
movsb
cwtl
lock
clc
adc
adc
xchg
sub
cld
xor
or
mov
daa
sbb
cmpl
push
or
cmpsb
or
push
adc
push
imul
movl
ucomiss
loope
mov
xor
popf
and
scas
scas
fs
out
aad
int3
mov
pop
pop
inc
das
popa
jbe
lock
cld
daa
or
lahf
idivb
and
pop
repz
xlat
mov
sub
inc
and
add
xor
outsl
ret
lahf
movsb
mov
mov
push
imul
dec
sahf
ss
push
add
cwtl
pop
jp
dec
jb
sub
out
stos
add
lea
xchg
push
ret
aaa
mov
or
xor
pushl
sbbl
and
add
jae
imulb
xor
xchg
test
into
cmp
sbb
fstpt
xrelease
push
jbe
mov
pop
mov
push
sbb
sub
cld
rorb
xchg
cld
sbb
shl
notb
mov
push
jnp
pop
sbb
jo
cwtl
popa
test
shr
jo
or
sbb
xor
sbb
cmp
repz
rcl
xor
aad
orb
test
push
fisubl
jns
nop
es
xchg
sahf
aad
lahf
add
js
fldcw
jbe
or
arpl
lods
scas
loopne
mov
lods
push
push
mov
cmpsb
jge
xor
scas
push
push
pop
jp
mov
fists
jge
jne
add
adc
je
sub
shlb
mov
adc
sbb
ja
and
add
mov
lcall
mov
out
test
mov
push
add
jp
leave
jecxz
sbb
xlat
jmp
shll
nop
fadd
lods
lds
dec
imul
cli
in
and
mov
mull
gs
ror
std
fiadds
push
pop
into
pop
push
adc
daa
mov
divw
lods
es
stos
cmp
cli
jbe
jo
pop
test
lret
bound
mov
inc
cmp
sbb
imul
push
ljmp
add
and
mov
xor
fstl
add
std
pusha
jecxz
add
xor
popa
lret
push
pop
lcall
into
push
popf
cmp
scas
push
popf
xchg
lea
xchg
js
jp
inc
dec
jbe
xor
pop
mov
fsts
lahf
add
cmpsb
in
mov
fsub
pop
push
pop
mov
xchg
sbb
aad
sahf
add
dec
push
and
lock
sbb
sub
mov
mov
das
in
sahf
push
add
push
sbb
pop
or
pop
add
cmpsb
lcall
xchg
pop
mov
push
pop
push
dec
add
pop
xorb
and
pop
mov
jb
mov
inc
dec
push
mov
ds
pop
pop
jl
push
dec
or
cmp
xchg
fwait
xlat
jp
xchg
mov
js
mov
lret
repnz
test
pop
xor
cmp
pop
xchg
fcoml
sbb
in
or
mov
cltd
xchg
sbb
fldl
insl
mov
sahf
inc
pop
push
jmp
sub
in
push
adc
repz
cmp
fsubs
sbb
or
or
mov
lret
outsl
mov
mov
adc
je
xor
push
cmp
dec
enter
test
enter
and
sub
mov
mov
lahf
dec
in
mov
mov
cmp
lods
stos
ss
adc
sbb
pushf
cmp
adc
int3
movsb
adc
sbb
sbb
cltd
add
test
fcomp
pop
inc
stc
aas
fcoml
mov
outsl
es
imul
pop
iret
pop
dec
jb
pusha
cmp
xchg
addb
xor
mov
mov
xor
popa
sbb
inc
cld
decb
cs
test
dec
movsb
decb
js
jo
mov
xor
call
add
sub
jl
fldcw
mov
pop
sbb
imul
std
leave
mov
dec
insl
popf
mov
mov
sub
hlt
jmp
ficoml
sbb
mov
sub
sub
clc
mov
dec
cli
mov
iret
inc
je
icebp
enter
jo
dec
add
mov
inc
add
ret
popa
repnz
xlat
xchg
cmp
rcrb
icebp
cltd
out
pushf
or
push
sti
cltd
dec
add
rsqrtps
addr16
xchg
lock
push
loopne
sub
imul
ljmp
js
into
mov
sub
push
lock
fs
push
xchg
push
dec
stos
pushf
and
into
mov
xchg
lock
int3
inc
add
xor
cmpsb
fisttps
push
sbb
clc
or
jg
pop
xlat
push
mov
jo
sbb
mov
gs
cmp
outsb
inc
int3
jns
stos
sub
lahf
insl
add
aam
mov
dec
divl
iret
sarl
lds
int3
test
dec
xchg
ret
pusha
int
pushf
into
mov
loope
sbb
add
push
sahf
pop
or
hlt
inc
mov
mov
and
cmpsb
and
cs
arpl
int3
xor
outsb
cmpsl
adc
test
pop
push
sub
mov
icebp
out
xchg
adcb
mov
ljmp
adc
stos
in
add
cmp
xor
adc
scas
js
in
repnz
jnp
xchg
mov
sbb
mov
aam
push
loop
mul
xchg
mov
jne
push
mov
or
clc
dec
nop
in
push
dec
push
xchg
lock
push
fucom
xlat
and
xchg
fsubs
xchg
aam
ja
inc
popl
bound
inc
or
jno
add
sub
data16
xchg
cltd
or
xchg
sub
test
call
inc
pop
lahf
gs
dec
mov
scas
in
mov
jl
or
jl
out
mov
pop
ja
or
xor
popf
or
push
pop
and
cs
push
xchg
pop
jecxz
ficomps
int
sbb
adc
sbb
imul
push
sub
mov
inc
es
sub
je
mov
aad
shll
ds
xor
test
movsb
adc
xchg
int3
sahf
lods
xchg
ret
sahf
cld
jecxz
mov
cmc
mov
mov
inc
sarb
icebp
dec
ljmp
hlt
fcomip
aad
sub
adcl
cli
cltd
jbe
lret
loopne
xchg
mov
les
jle
mov
add
mov
pop
stos
loopne
adc
xchg
sub
lea
fidivl
and
nop
or
je
xor
mov
scas
jecxz
mov
mov
push
js
adc
and
cmp
sbb
adc
jne
add
cmovo
mov
ret
out
mov
pop
insb
lods
stos
dec
in
mov
cmp
call
in
adcb
dec
rorb
rcrb
fsubrp
adc
lods
jmp
test
loope
pop
mov
and
stos
scas
clc
fwait
mov
lea
jns
ret
les
jge
mov
cli
mov
pop
fdivr
pop
mov
xor
push
cwtl
mov
mov
jg
adc
xchg
lods
pusha
pusha
aam
clc
cmpsb
stc
fstpl
push
in
aas
out
leave
xor
push
mov
cmp
sbb
in
xchg
arpl
je
jae
inc
loop
in
aam
rep
shrb
scas
mov
mov
movsl
out
or
imul
insb
xchg
les
cli
jp
lea
pop
das
mov
mov
outsl
pusha
inc
dec
insb
stc
sbb
jb
call
push
inc
ret
adc
mov
loop
sbb
dec
inc
adc
jb
pop
repz
enter
lds
stc
xor
xchg
jge
mov
ljmp
je
add
or
add
xlat
dec
js
mov
cmp
mov
movsl
xor
sub
leave
fdivl
adc
cmp
pusha
popf
sbb
rol
pop
lea
icebp
jno
cld
pcmpgtw
inc
sub
jp
push
cmp
dec
mov
push
push
xchg
jne
lcall
inc
ret
insl
les
inc
addb
mov
cmp
mov
ret
pop
cwtl
xor
popa
adc
mov
je
add
pop
xor
or
cmpsb
outsl
insl
sbb
mov
sbb
fmuls
and
pop
inc
xchg
in
jns
into
mov
in
sti
addb
dec
ljmp
pushl
divb
lods
pop
rdtsc
ret
xchg
adc
mov
inc
push
cmpsl
into
loopne
mov
inc
or
jmp
fdiv
std
enter
mov
pop
cmp
push
rcrl
xlat
js
xchg
mov
pushf
or
sub
add
faddl
fucom
push
enter
testl
cmp
inc
add
cmc
mov
lcall
lret
int
movsl
and
shlb
push
pop
push
iret
iret
mov
ret
cld
inc
stc
jmp
scas
xchg
popf
sahf
pop
je
lods
sbbb
jmp
cmp
add
ficoms
xchg
add
mov
movsb
jecxz
add
into
inc
scas
je
lods
push
cmp
sub
xchg
xchg
call
add
enter
or
sahf
or
popf
xor
dec
inc
push
daa
pop
call
in
mull
into
sbb
sahf
jl
int
rcll
lods
pop
scas
mov
bndldx
rclb
xor
push
sub
add
xor
leave
in
pop
mov
pop
stos
mov
push
cmp
leave
nop
sub
pop
cmp
ret
inc
inc
mov
or
xchg
fs
mov
fdiv
and
pop
ret
jbe
add
je
push
ds
cmp
inc
mov
iret
fisubl
dec
jge
sub
in
cmpsl
idivb
test
and
sub
jmp
add
or
divl
push
pusha
pop
dec
jnp
mov
push
mov
cmp
ljmp
ret
jno
mov
je,pt
or
jbe
insb
mov
into
inc
filds
adc
lods
add
jge
sbb
inc
xchg
sbb
or
fstps
jge
jl
inc
dec
dec
loop
imul
dec
es
lods
sbb
push
push
mov
jbe
or
stos
dec
dec
mov
mov
out
xchg
jmp
push
mov
inc
mov
test
push
mov
lock
xchg
push
or
mov
pop
jmp
xor
lcall
inc
jle
pop
or
jo
fiaddl
mov
fildll
xchg
dec
lds
and
lea
push
xor
xchg
pop
imul
hlt
cmp
dec
aaa
push
mov
add
inc
ret
adc
xor
adc
or
xchg
or
push
mov
test
stos
jbe
xchg
xchg
lods
movsl
cmp
leave
or
mov
adc
aam
movsl
pop
pop
pusha
jo
mov
cmp
nopl
or
ds
popf
or
push
sbb
jle
and
mov
mov
dec
in
das
cmp
xchg
ret
rorl
inc
repnz
jle
push
insb
sub
push
cld
dec
dec
addl
pop
hlt
out
lods
mov
jecxz
push
out
int3
cmp
jmp
sbb
pop
xchg
sub
cs
data16
je
mov
jb
xchg
testb
push
lods
into
cld
or
loop
nop
gs
je
push
dec
daa
sbb
popf
sub
sbb
imul
lcall
icebp
aad
push
xchg
sbb
out
push
inc
icebp
outsb
lods
sub
fisttpll
fdivrl
lods
push
out
sub
stos
pop
aam
and
inc
mov
addr16
sbb
push
scas
std
sub
int
xchg
loop
jbe
int
mov
push
mov
jle
and
pop
mov
or
imul
cmc
lds
cmp
in
test
lahf
repz
cmp
sub
cltd
out
jle
add
jnp
and
sarb
das
loopne
enter
mov
js
in
insl
clc
outsb
push
jge
pusha
mov
mov
outsl
mov
mov
jg
xor
cmpsl
rorl
push
js
and
mov
rorb
in
loopne
das
in
add
inc
aad
cltd
sbb
mov
mov
xchg
repz
sbb
xor
jmp
mov
adc
jmp
pop
pop
lret
xor
dec
mov
jg
je
mov
ljmp
insb
fiadds
fdivrs
push
push
bound
outsl
mov
xchg
test
push
jmp
pop
enter
pop
mov
mov
cmpsl
iret
iret
sub
das
out
std
jnp
popf
push
jmp
sub
mov
add
loopne
cmpsb
and
aas
pop
jmp
and
mov
icebp
dec
adc
adc
mov
push
aaa
mov
pop
stos
jnp
mov
vpunpckhwd
insb
mov
imul
inc
dec
add
jge
mov
jb
xchg
xchg
repz
mov
xor
adc
pop
pop
lret
add
push
imul
mov
cmp
mov
fldl
jge
loop
ss
or
arpl
mov
rorl
xchg
and
jo
pop
scas
aad
fnstsw
xchg
dec
lret
bound
or
loopew
out
inc
inc
dec
gs
fwait
mov
mov
adc
movsl
mov
xchg
sbb
mov
loopne
push
cmc
xchg
out
test
and
rcrl
mov
add
sti
pop
mov
in
out
lret
dec
cmp
sub
pop
addr16
fdivrs
xchg
xchg
in
fstpt
stos
push
mov
add
and
insl
or
mov
mov
paddb
iret
inc
pmulhw
sbb
xor
xchg
pop
and
xor
rclb
jb
test
iret
xor
or
and
mov
bound
pop
inc
ret
and
dec
push
adc
int3
pop
add
repnz
mov
sub
sub
addr16
stc
pop
pop
out
nop
push
add
adc
rorb
xor
push
bound
or
imul
cmpsl
sub
rclb
test
jno
subb
sti
das
dec
fistps
fimull
les
cmpsb
add
sahf
cmc
sbb
mov
subb
cli
pop
fildl
mov
fstpl
cwtl
jecxz
mov
fld
loope
icebp
mov
sub
dec
or
lahf
mov
fnstenv
lock
lcall
mov
mov
push
mov
jecxz
inc
insb
or
adcl
pop
imul
adc
repnz
jmp
pop
xor
es
jge
lock
fisttpll
in
sbb
js
cmp
push
mulb
jno
sbb
sbb
mov
cwtl
sbb
add
sbb
push
jg
inc
addl
clc
sbb
sub
andl
pop
jecxz
mov
lea
mov
rcr
fistl
popf
out
push
repz
pop
dec
cwtl
loope
push
lods
jl
repnz
addr16
jge
or
push
cmp
sbb
jo
icebp
push
mov
push
dec
in
int
add
push
sahf
stc
iret
jecxz
and
mov
ret
jbe
xor
xorb
sub
add
outsb
jo
inc
insb
pusha
insl
clc
std
pop
xchg
cmp
xchg
jmp
push
jle
je
es
or
adc
roll
pop
dec
sub
addb
sbb
cmpl
mov
aaa
push
dec
jle
ret
and
mov
loope
std
dec
repz
xor
lea
pop
test
sub
not
sub
lret
sub
roll
mov
hlt
ss
jnp
fimuls
ds
test
add
or
in
jb
mov
in
and
or
inc
dec
cmpsb
arpl
ret
out
dec
je
xor
pop
cmp
add
popa
adc
xchg
adc
cld
jns
and
pusha
push
cmc
push
lahf
adc
rsm
jae
in
test
add
mov
inc
dec
sub
lcall
inc
add
and
mov
cwtl
and
leave
jbe
pushf
push
lea
jb
ss
mov
js
movsb
and
add
mov
jge
mov
rcll
pop
mov
shrl
fbld
pop
sub
mov
cs
dec
mov
xchg
push
inc
cmp
and
push
repnz
or
stos
mov
rorb
jl
or
enter
sub
pop
mov
push
push
gs
in
lahf
test
pop
mov
ret
in
add
je
cmp
in
mov
jb
pop
or
cmpsb
insb
cs
scas
dec
testb
mov
rcl
movsb
and
jge
pop
adc
lcall
adc
arpl
adc
xchg
push
out
add
sti
dec
xor
cli
lret
push
cld
xchg
lcall
push
lods
movsb
out
pop
sub
push
movsb
mov
cmpsb
movsl
xchg
inc
fidivrs
pop
add
daa
jmp
inc
popf
inc
pop
leave
pop
sahf
push
cmp
and
lea
ss
sbb
add
push
mov
add
lock
cmpsl
out
loop
xchg
std
enter
cmpsl
mov
cwtl
jne
push
nop
xchg
sub
jge
xlat
dec
in
ffree
or
jb
inc
ja
mov
lods
cmpsb
inc
sbb
cmp
outsb
shrb
js
dec
pop
test
mov
push
lahf
lock
mov
lods
cmpsl
xchg
out
mov
sub
test
jp
mov
mov
pop
cmp
adc
mov
inc
inc
cli
aaa
mov
cli
into
pusha
fistpll
iret
rclb
in
mov
and
aas
mov
mov
mov
sub
shrb
andl
jle
cwtl
add
js
lods
push
cmp
js
pop
iret
lds
je
pop
or
mov
add
lahf
test
bound
xchg
jbe
sub
mov
sti
xchg
popf
xor
fadd
fs
in
arpl
scas
addl
adc
mov
cmp
in
jne
xor
and
cmpsb
fsubs
and
repnz
mov
or
ror
add
aad
xchg
iret
push
rol
jbe
cmp
scas
push
addr16
inc
test
out
sub
jle
mov
out
clc
addr16
cmova
lret
pop
lret
mov
std
dec
rcrb
repnz
push
add
dec
mov
mov
insl
mov
mov
inc
shl
inc
in
stos
lea
pop
mov
popa
xchg
imul
in
add
rorb
popa
lahf
sbb
jle
cmpl
mov
adc
mov
icebp
xchg
mov
lds
adc
mov
in
jecxz
hlt
stos
subl
push
mov
push
repz
lcall
mov
cmp
sbb
in
ret
cmp
xchg
dec
cmpl
jp
stos
and
fs
sub
push
pop
in
ss
jns
ljmp
xchg
cmp
popa
ss
dec
jns
inc
mov
adc
sbb
aad
std
push
pop
inc
sub
test
xor
jno
out
out
push
push
jle
lahf
mov
bound
ret
lds
push
push
and
mov
mov
call
mov
cmc
sbb
jo
ret
lock
stos
xchg
outsb
cmpsb
cs
jmp
xor
loop
jno
rorb
cmp
xor
cld
jmp
popf
mov
jno
sub
je
in
gs
imul
push
inc
lods
loop
stc
movsl
stc
or
push
push
out
lods
xchg
push
adc
sbb
aad
fcomip
push
sub
xor
ror
jge
out
int3
pop
pop
icebp
call
push
es
movsb
andb
imul
sbb
cwtl
stos
outsl
test
add
inc
push
in
bound
divb
fwait
into
lea
gs
maskmovq
notl
pop
jecxz
setl
fsubrs
mov
lods
xor
xchg
loop
or
xlat
xchg
jl
mov
cli
out
ss
jle
lret
add
lock
mov
mov
push
xchg
sub
xchg
pop
mov
xchg
pushf
pop
xlat
dec
data16
in
test
xchg
cli
lods
sub
inc
mov
je
push
ret
push
adc
inc
jl
inc
cmp
pop
daa
enter
xor
mov
xchg
imul
insl
pushf
mov
ljmp
pushf
mov
loopne
fdiv
imul
xor
mov
sub
jnp
jnp
pop
push
in
rorb
xchg
add
add
inc
loopne
add
add
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
sub
imul
jnp
clc
pushf
jnp
and
push
ret
push
xchg
or
lds
call
incl
sbb
push
pop
sub
cmp
imul
fldl
in
lods
popf
fwait
adc
lret
cmp
inc
jl
or
cwtl
mov
jp
bound
ds
xchg
mov
out
int
popl
mov
and
push
xchg
xchg
sbb
inc
out
or
push
push
movsl
mov
pusha
add
aad
jae
mov
cmp
push
stos
cmp
ja
add
inc
movsl
mov
adc
jae
pushf
out
movsb
adc
xor
push
cwtl
mov
dec
addr16
in
repnz
scas
int3
sbbb
sub
roll
mov
and
jg
or
test
inc
lret
push
fwait
test
ss
push
jle
lret
pop
in
enter
dec
jae
js
push
adc
arpl
mov
mov
scas
cmp
jb
mov
cmp
jae
jmp
push
pop
in
adc
ss
fdivrp
and
mov
daa
dec
inc
pop
adc
dec
in
push
sub
out
sub
cmpsb
mov
fcomi
pushf
movsl
mov
and
mov
push
movsl
lock
mov
push
dec
stos
push
xor
jle
dec
add
cwtl
cmp
mov
inc
lret
enter
insl
lods
ret
push
imull
mov
ja
aas
and
pop
mov
pop
xchg
aam
pop
mov
scas
mov
fmul
mov
test
pushf
jb
pop
cmp
adc
dec
mov
icebp
jmp
fnstenv
inc
jge
stos
test
mov
movsl
dec
cmp
fcmovu
sbb
mov
je
cmp
hlt
loope
push
inc
sub
inc
jg
xchg
sub
lcall
adc
xchg
and
in
dec
lods
mov
xorb
inc
xchg
sbb
jecxz
outsl
or
call
aam
rcl
xchg
scas
and
and
sub
lret
cmp
sub
pop
je
js
clc
fadds
pop
xchg
in
add
bnd
xchg
arpl
imul
ret
movsl
scas
jbe
gs
push
add
sbb
push
mov
enter
lahf
push
dec
cmp
inc
xor
roll
loop
lcall
test
sbb
jo,pt
push
mov
dec
imull
nop
adc
sti
or
add
xor
loop
sub
sub
insb
mov
jmp
je
or
int
jl
rorb
push
addr16
mov
jl
aas
fsubr
xchg
fdivl
or
xchg
int
call
ds
mov
leave
sbb
dec
cmp
adc
mov
test
mov
push
in
and
imul
inc
loopne
mov
mov
jl
sbb
daa
push
sbb
daa
mov
flds
push
xchg
cmc
imul
dec
dec
pop
outsb
leave
sete
xor
cmpsl
xchg
int
shl
fwait
sbb
sbb
pusha
mov
cmp
leave
pop
shlb
outsb
in
sub
inc
imul
inc
je
mov
or
xchg
xchg
inc
dec
mov
out
sub
jns
push
mov
rcr
stos
rcrb
inc
cwtl
xchg
ds
lods
out
mov
and
in
dec
ffreep
jl
adc
sti
loopne
icebp
test
xchg
pop
leave
dec
ret
jo
std
sti
jo
ret
pop
push
pop
jnp
mov
mov
add
push
inc
out
pop
outsb
sub
aas
xor
fs
and
mov
or
push
loope
xchg
call
and
in
push
jge
aas
push
add
xor
loopne
jns
test
lret
adc
mov
jns
loopne
pop
and
push
negb
outsb
adc
sbb
repnz
sbb
fisubrs
lea
aam
mov
pop
aam
mov
mov
lea
icebp
repnz
cmp
jle
sbb
pop
jl
sbb
jg
xor
mov
in
cs
fcomps
jo
cmp
xchg
lods
ljmp
rcrb
lcall
punpckldq
xchg
cs
fwait
adc
arpl
push
enter
inc
mov
ficoml
or
jbe
ss
sub
jl
lret
xchg
push
sti
test
push
cmp
xchg
xor
add
scas
test
stc
push
insb
jno
aad
pmaxsw
adc
sahf
aad
sbb
xor
adc
test
scas
xor
push
dec
mov
ret
pop
xor
sbb
pop
loope
dec
jae
cmc
xchg
mov
dec
push
sahf
jp
mov
hlt
mov
push
int3
lock
mov
mov
aad
lahf
mov
jl
pop
hlt
outsb
mov
insl
fsubrl
imul
int
jmp
cmp
testb
cld
ret
adc
sbb
jge
cwtl
inc
dec
or
fisttpll
sub
in
rcrb
jmp
pop
rol
insl
test
rcrb
or
push
ljmp
lahf
mov
lahf
sub
jne
mov
mov
seto
shl
les
and
imul
cmp
inc
mov
adc
dec
pop
dec
out
lcall
insb
sti
sti
pop
andl
mov
lds
les
xlat
loop
fsubl
cli
rorb
fdivp
xchg
ret
inc
in
jne
movl
ss
xchg
in
outsb
sub
cs
xchg
pop
cwtl
dec
or
pop
fidivl
jne
or
out
add
cmp
mov
mov
popa
outsl
mov
and
ss
cmp
jecxz
jns
xchg
ss
hlt
jge
mov
push
jl
cmp
jo
lods
into
aaa
cmp
pop
jle
cs
popa
fcmove
test
rcrl
jo
jbe
aaa
mov
sahf
test
mov
mov
sbb
pmullw
push
cli
repnz
add
adc
push
call
fsubrl
outsl
mov
inc
arpl
cltd
xchg
sbb
jge
jg
scas
addr16
and
fstps
into
cmp
iret
ljmp
inc
ret
pop
mov
lahf
xor
std
inc
enter
outsb
jns
cmpsb
xchg
dec
mov
lret
mov
jae
jle
dec
pushf
aas
call
xor
scas
push
jecxz
test
xchg
jg
adc
ja
mov
mov
icebp
js
enter
lret
push
lds
mov
adc
or
popa
bound
in
test
jnp
cmp
cmc
js
or
dec
ja
mov
gs
icebp
cmp
icebp
scas
iret
xor
pushf
cmp
add
push
mov
pop
imul
mov
push
lods
jg
mov
pop
scas
dec
insb
cmp
loope
lret
pushf
sbb
adc
xor
xchg
or
mov
ds
jno
jp
addr16
or
call
hlt
sub
jo
xchg
mov
dec
xchg
mov
push
mov
pop
scas
pop
adc
dec
sbb
pop
inc
jo
push
add
push
pop
inc
iret
push
mov
popa
jp
test
xchg
pusha
daa
icebp
loop
push
mov
jb
pop
sbb
sbb
mov
dec
cmpl
jne
lret
cmpsl
mov
mov
imul
adc
xchg
sar
cld
sahf
xchg
fistpl
jo
sbb
pop
imul
nop
scas
fnstenv
shrl
adc
clc
pop
cs
outsl
cmp
mov
add
sti
adc
pop
loop,pn
push
xchg
mov
out
sbb
xor
aam
cwtl
xchg
ss
int3
sub
pop
sub
add
push
lret
test
test
out
std
push
addr16
lock
loop
fs
or
jp
mov
add
es
cmc
int
push
outsl
negb
fadds
jnp
pushf
rcrl
loopne
addr16
cmp
rorb
cltd
sarb
aas
pushf
push
xlat
out
mov
testb
adc
pop
xlat
lds
icebp
xor
pop
cmpsl
or
mov
add
cld
dec
into
insb
stos
fldenv
or
xchg
notb
mov
add
pop
popa
mov
loop
pop
xor
mov
out
fs
xor
inc
shll
lock
sbb
mov
mov
in
mov
pop
insb
adc
stos
jecxz
imul
mov
arpl
clc
pop
andb
sbb
call
adc
les
mov
add
xor
repnz
std
frstor
fcompl
mov
sbb
dec
pop
add
out
int3
push
push
jae
push
mov
mov
cld
leave
icebp
xlat
or
es
mov
jmp
mov
lds
out
sub
add
bound
fst
adc
sbbb
or
jmp
shll
into
test
mov
iret
stc
aas
cli
pusha
push
add
dec
mov
jae
shll
lcall
sub
enter
pusha
inc
setns
xor
jnp
mov
jne,pt
rcl
cmpb
out
popa
mov
bound
dec
loopne
or
or
cmp
testb
test
sti
mov
sbb
xchg
and
nop
pop
or
shll
jbe
cmp
jmp
jg
jmp
sbb
xor
das
lds
ss
push
out
lret
push
fstl
sbb
cmp
in
lods
add
inc
outsl
xor
pop
int3
jb
cmp
std
mov
xchg
push
les
sub
outsb
lret
loopne
xchg
push
shlb
mov
mov
ficoms
sub
ja
imul
push
loope
push
dec
jmp
pop
mov
lods
loopne
out
in
popa
jo
addr16
sbb
js
sahf
shll
xchg
adc
cmp
sub
imul
sub
mov
xor
mov
sbb
icebp
mov
dec
mov
out
xor
mov
jle
aad
fmul
shl
xor
and
mov
repz
stos
cmp
scas
aad
popf
int
add
mov
xor
ficomps
sbb
das
adc
mov
sti
add
arpl
mov
es
lahf
xchg
jg
sub
mov
or
ja
push
mov
pop
mov
jmp
push
iret
jo
sub
mov
inc
push
mov
into
pop
xor
mov
filds
les
mov
and
jne
push
test
jmp
sub
dec
jp
insb
roll
push
lods
xchg
fstpt
sti
xor
adc
adc
xorl
mov
mov
mov
pop
xchg
ja
jmp
sbb
and
adc
in
jo
jb
scas
repz
or
int3
mov
or
das
add
dec
xlat
sbb
inc
mov
jns
ficoml
xor
fildl
js
xor
repz
enter
xchg
xchg
pushf
idivb
in
outsb
outsb
xchg
icebp
test
jg
cmp
insl
pop
ss
jne
jne
lcall
sub
int3
scas
jmp
in
cwtl
arpl
xchg
mov
or
leave
mov
adc
cmp
in
leave
xchg
scas
les
pop
mov
pusha
xor
outsb
adc
ss
sub
push
in
pop
in
es
or
and
push
aaa
sub
test
add
outsl
mov
shlb
jle
jnp
jnp
pop
fisubs
jne
stc
in
call
rorb
int3
inc
rorb
fldcw
mov
shrb
push
addr16
shlb
clc
jmp
iret
aad
in
mov
dec
movsb
cmpb
call
cmp
rcrb
push
test
inc
jns
xchg
cmp
adc
fsubs
arpl
add
das
andb
jge
scas
jecxz
push
cmp
or
movsb
pushf
leave
jne
mov
inc
dec
fwait
mov
hlt
pop
js
or
xrelease
lods
out
pop
stos
addr16
enter
out
mov
sbb
outsl
mov
test
inc
in
dec
xor
sbb
mov
or
mov
fldt
jl
inc
jne
inc
jno
jle
mov
sti
jge
cmp
sub
xchg
vpperm
sub
sahf
aas
inc
or
xchg
and
fbstp
ljmp
pop
fs
insb
sbb
inc
cmp
push
icebp
js
popf
cmpb
adc
or
xchg
xchg
add
mov
and
adc
cld
jne
xchg
xlat
loop
dec
xor
jg
cs
mov
xchg
jp
lea
xor
adc
pop
pop
push
or
ss
inc
imul
inc
pop
mov
hlt
je
hlt
sub
sarb
imul
aas
pop
mov
das
daa
push
into
add
pop
dec
aad
sub
clc
sub
push
xlat
shrl
ja
and
stc
ljmp
push
fsts
jle
dec
dec
mov
adc
jbe
cmp
jns
popa
dec
mov
or
mov
dec
mov
push
mov
test
sbb
cs
les
data16
cld
adc
inc
ret
push
sti
jae
push
pop
xchg
mov
je
inc
push
into
xor
and
pop
mov
rcll
cmp
xor
cmpsb
int
xchg
shl
lds
adc
les
pop
cltd
fsubrl
push
aam
leave
mov
mov
xchg
pop
fldcw
mov
xchg
aaa
adc
mov
rcrb
dec
push
shr
adc
in
imul
pop
pop
add
cltd
stos
xchg
jne
mov
sub
clc
sbb
sub
dec
inc
dec
enter
and
adc
push
jl
enter
cmp
imul
inc
mov
std
call
dec
xchg
sbb
lock
mov
es
dec
outsl
adc
shl
adc
xor
push
push
jns
dec
cli
mov
loop
addr16
inc
push
fwait
add
inc
add
ja
outsb
push
les
rorb
loop
sbb
push
in
jmp
mov
loopne
lods
test
sbb
cmp
mov
xchg
inc
mov
and
movsl
ljmp
mov
and
xor
jecxz
lea
je
push
testl
jge
and
call
shll
fdivr
pop
adc
cmp
out
pop
rolb
add
mov
pop
xchg
stc
jns
insb
mov
int
cmp
lret
adc
and
movl
mov
fwait
lcall
add
popf
mov
int3
pop
daa
dec
ret
scas
popf
mov
add
jp
sub
push
ret
xchg
testb
adc
mov
add
repz
inc
les
sub
nop
out
les
push
shr
cltd
inc
test
push
ret
cmpsb
sbb
mov
aad
test
data16
call
mov
jl
pop
cmp
pop
popa
mov
or
pop
das
mov
sbb
leave
rolb
sbb
in
sub
xlat
dec
repnz
sub
sub
stos
cs
mov
jmp
fdiv
jo
xchg
stc
or
ljmp
cli
mov
pop
pop
fcomi
adc
xchg
adc
mov
push
sbb
and
mov
inc
mov
pop
out
hlt
sbb
jecxz
push
adc
js
sahf
push
and
add
imul
and
pop
sahf
aas
ret
mov
lret
or
xor
scas
hlt
mov
or
push
cmp
rcll
cmp
std
xchg
mov
imul
dec
push
popa
test
cs
xor
push
test
scas
sti
jmp
stc
and
stc
cmc
xchg
jle
jge
pop
test
or
mov
scas
shll
pop
jno,pn
pop
out
pop
and
call
xor
stc
fwait
aaa
xchg
es
fldcw
in
iret
xchg
xor
scas
xadd
add
cmp
fs
inc
data16
mov
xor
mov
ret
push
cmpsb
stos
sub
inc
sub
int3
xlat
push
sub
dec
xchg
mov
sub
sbb
sbb
push
dec
adc
push
dec
cmp
and
sbb
test
sahf
or
ret
push
fwait
mov
sub
inc
xor
inc
cld
or
cmp
cmovne
mov
xor
orb
dec
inc
cmp
mov
mov
ffreep
pop
jnp
pop
or
test
push
pop
mov
jb
outsb
pop
fdivrl
sarb
push
mov
sahf
mov
ja
mov
pop
adc
insb
pusha
pop
out
xchg
dec
add
in
mov
pop
aas
notb
inc
inc
fistpll
ficoms
out
or
shlb
jnp
push
cltd
pop
add
dec
stos
aas
shlb
jne
loope
arpl
jne
dec
xlat
shlb
pop
inc
cwtl
sub
shrb
aaa
je
data16
cli
push
xor
mov
ret
sub
test
psubq
fisttpl
and
dec
inc
or
insl
jne
push
mov
jge
adc
loope
push
loope
mov
sbb
dec
out
xor
fs
fucomip
movsb
mov
jmp
mov
pop
sub
loopne
aad
addr16
fldenv
pop
cmp
jbe
fcoml
icebp
mov
push
mov
mov
sub
arpl
mov
mov
cmp
mov
in
mov
inc
scas
imul
js
or
loop
fs
fs
addl
nop/reserved
add
jp
add
push
dec
mov
pop
test
divb
fimuls
test
add
and
mov
mov
inc
rcr
fwait
push
int3
lods
imul
jns
xor
pop
in
sub
aaa
mov
ficoms
popa
lahf
mov
xchg
dec
mov
xchg
xchg
cmp
mov
int3
dec
jg
xchg
fcomps
pushf
adc
dec
dec
add
cmp
pop
fisubs
push
orb
and
test
sarb
stc
mov
fs
scas
push
dec
les
xor
mov
sbb
sbb
cmp
xor
and
dec
clc
jb
sbb
jne
fwait
cmp
lret
jne
outsb
movsl
jae
mov
or
dec
cwtl
dec
dec
lds
and
xor
repz
mov
sbb
inc
dec
fbstp
add
cwtl
lret
aad
sar
mov
leave
fcmovnb
or
call
outsb
ret
xchg
jmp
shll
je
hlt
mov
into
scas
imul
cs
das
push
test
js
dec
mov
into
lcall
xor
and
mov
xor
xor
pop
inc
imul
cmc
dec
outsl
mov
dec
in
in
test
xchg
xchg
nop
cmp
dec
rorb
lea
sbb
add
mov
and
mov
fcomps
lock
jp
inc
inc
enter
sub
dec
shrb
cmp
loop
iret
sub
sti
inc
imul
cs
cmpsl
aas
mov
and
movsl
ljmp
sbb
xor
movsb
aad
jl
push
pop
insb
daa
mov
dec
xchg
sbb
push
jns
xchg
mulb
out
rolb
push
lret
xchg
xchg
test
lods
stos
movsb
sarb
cmp
insb
test
or
pop
jbe
cmpl
pushf
outsl
add
lods
mov
aas
lods
shr
inc
out
js
gs
jl
inc
add
jg
sbbl
mov
jnp
push
cmp
add
xor
push
and
rorl
and
inc
add
inc
mov
xor
test
mov
mov
jmp
je
repnz
jge
lret
cmpb
xchg
outsl
mov
nop
xor
and
icebp
rolb
test
jmp
pop
pop
dec
ja
icebp
shll
push
lcall
mov
sbb
push
push
xchg
out
inc
psrld
dec
aaa
pop
test
adc
int
leave
sub
pushf
jecxz
outsl
into
push
jge
push
adc
call
push
sbb
stc
and
add
push
inc
xchg
mov
test
add
sbb
icebp
pop
pop
cltd
pop
mov
popa
cmp
leave
mov
stos
xchg
mov
cli
adcl
or
cmp
and
dec
mov
mov
dec
insl
push
add
aam
in
push
cmp
cmp
popf
jb
in
repnz
stc
les
mov
nop
mov
jo
test
sub
mov
ss
pop
ret
stos
mov
and
add
clc
lret
jae
cmc
aas
sbb
test
add
into
shlb
push
ss
add
cmp
mov
lods
rcll
popa
ljmp
inc
sbb
mov
xlat
mov
sbb
mov
pop
fsts
shl
xchg
add
repz
ss
jno
inc
je
fcmovu
xchg
arpl
xchg
pop
sbb
jb
xchg
nop
jmp
mov
inc
out
mov
sbb
or
iret
or
sti
mov
xchg
jge
fisttpll
or
std
gs
mov
shlb
flds
sbbl
std
cmp
ret
add
mov
xchg
insl
and
push
das
add
out
push
mov
sub
repnz
and
arpl
or
add
and
sbb
imul
cmc
and
ficoms
sbb
inc
pop
rorl
movsb
rorl
cmpsl
jae
pop
in
sbb
insb
mov
inc
jmp
pop
dec
loopne
daa
pushf
xchg
xor
dec
ret
mov
test
inc
sub
lds
and
jnp
mov
inc
sbb
fsubrl
push
sub
inc
fcomps
aas
mov
dec
add
sub
out
push
out
jbe
outsl
mov
mov
cmp
and
cmpsl
mov
pop
adc
outsb
loope
fcompl
sub
adc
sahf
daa
pop
jmp
fiaddl
push
hlt
leave
push
and
shl
xchg
inc
push
inc
mov
push
pop
mov
inc
sub
roll
mov
lock
jae
or
jne
cmp
push
mov
mov
adc
test
mov
add
cmc
in
xchg
jno
addr16
icebp
out
stc
or
add
ds
cmp
popl
push
pusha
cmp
add
xlat
jg
movsb
xchg
fsubl
xor
lret
cmp
adcl
das
pop
lds
cmp
notl
xor
pop
out
mov
xor
es
mov
cmp
flds
xchg
pop
ror
xchg
mov
cmc
das
sub
loope
pop
test
pop
lret
inc
jne
inc
in
and
subb
das
cli
mov
adc
sub
hlt
shll
mov
cmpsb
jno
and
mov
push
movb
dec
int3
pop
pop
add
scas
bound
enter
lods
cmpsb
aad
ror
ja
xor
js
mov
push
in
pop
fiadds
xor
xor
push
jnp
xchg
inc
dec
jmp
xor
push
mov
sbb
and
mov
stc
adc
fs
jmp
scas
into
mov
insb
lock
std
pop
or
mov
mov
jecxz
push
xor
loope
and
mov
push
ja
jecxz
adc
push
cmp
and
jmp
cmp
gs
pop
lret
shll
push
mov
faddl
pop
xorl
repz
sbb
in
mov
fnstenv
imul
cmp
sti
xchg
add
adc
leave
js
in
mov
cmp
xchg
xchg
popf
leave
xchg
fwait
mov
fstpt
jle
lahf
pop
add
pop
inc
lahf
jne
cmpb
insb
pop
scas
add
aaa
push
pop
je
lea
out
movsb
shl
in
dec
pop
lcall
fisubl
shrl
xor
mov
insb
pop
add
mov
loope
popf
mov
popa
or
rcrl
xchg
pop
roll
mov
stc
push
jg
push
mov
ret
flds
das
outsb
insl
stos
out
in
outsl
xor
lods
inc
ja
jp
enter
das
lods
into
cmp
aad
ljmp
aaa
ds
popa
jle
das
and
push
ret
dec
sti
xchg
ja
insl
push
push
xor
sub
dec
leave
ds
ja
gs
pushf
mov
xchg
dec
bound
lea
scas
xor
push
cmp
fdivrl
xor
iret
imull
gs
inc
rcr
push
lods
rclb
imul
out
pop
ffree
lock
fmull
mov
pop
push
gs
pop
or
mov
stos
aam
or
inc
cs
hlt
std
jno
jmp
fs
loop
loop
cmp
xchg
ljmp
dec
jecxz
xor
aaa
sub
out
aad
cmpsb
pushf
mov
ja
and
mov
lds
inc
xor
insl
xchg
in
xor
lahf
cs
out
rcr
in
mov
ret
cs
mov
test
and
push
pop
addr16
and
jbe
sub
mov
push
add
cmpsb
pop
and
lret
pop
adc
fldcw
mov
xor
sub
cmc
add
xor
cmp
and
cs
lea
dec
xchg
mov
scas
ror
mov
in
psubw
jmp
xor
lock
lcall
je
inc
movsb
mov
push
adc
pop
cmp
mov
int3
sub
sub
xor
test
pop
pop
mov
pop
in
rolb
adc
push
jg
add
cmp
not
test
loopne
std
jl
imull
lret
add
push
inc
dec
sub
sbb
rsm
xchg
mov
pushf
jp
sbb
jge
js
js
loop
jle
jno
add
lea
arpl
pop
bound
mov
push
mov
dec
mov
out
pop
xchg
lret
cmpsl
cs
sahf
adc
aaa
push
in
push
lahf
fs
xchg
xor
mov
mov
bound
xchg
xchg
push
xor
push
push
jno
std
fsubs
xchg
lahf
ja
sub
out
daa
xchg
int3
test
pop
fstpl
fldt
int3
mov
inc
mov
add
cmp
sbb
dec
adc
idivl
insl
inc
pop
pop
cmp
mov
mov
test
addr16
sbb
lret
testl
or
das
or
and
adc
pop
mov
test
xchg
shr
push
cs
test
jge
ljmp
popa
das
fs
sbbb
sahf
sub
hlt
or
or
xchg
jb
loope
and
shl
jne
sti
xor
mov
jmp
mov
lret
dec
sbb
inc
insl
sbb
sar
in
enter
scas
outsl
jge
lds
push
lds
jns,pt
dec
mov
scas
cmp
aam
dec
in
andl
xor
bnd
scas
aas
mov
inc
adc
mull
cmp
push
imul
inc
dec
or
adc
mov
mov
jbe
fcmovbe
mull
rolb
cmp
cmc
data16
sar
cmp
inc
in
sub
popa
sub
sbb
in
nop
jnp
lods
jg
rorl
push
imul
into
dec
sbb
adc
xchg
sub
data16
int3
ljmp
int3
jmp
mov
incl
cmp
sbb
mov
loopne
inc
cmc
out
arpl
pushf
pop
push
mov
loope
xchg
sbb
dec
scas
mov
add
fimuls
push
dec
xchg
roll
pop
lea
in
fs
cli
adc
fucomp
fisubl
adc
jb
adc
xor
xlat
mov
inc
outsb
out
mov
stos
or
xchg
xor
jno
lock
scas
push
bound
xchg
ja
test
mov
xor
cmpsl
push
fldt
push
mov
lahf
stos
pop
aad
stc
rolb
cli
push
cmp
pushf
fidivs
mov
adc
and
dec
push
cwtl
fndisi(8087
iret
or
or
fnstcw
sarl
push
mov
jle
out
fsubrs
test
inc
jb
inc
dec
sbb
push
push
sbb
jmp
nop
add
mov
mov
adc
sub
popf
aam
sbb
das
cmp
inc
inc
push
push
mov
leave
mov
outsb
fimull
fsubr
lods
sub
cmp
push
jl,pt
xchg
push
sub
jp
lea
inc
jb
cli
mov
in
arpl
xor
jp
ljmp
xchg
push
mov
pop
int3
pop
and
pop
mov
andb
or
mov
adc
xor
out
js
sub
iret
dec
pop
ja
mov
jne
leave
dec
jo
xchg
cld
mul
out
xchg
mov
cmp
add
mov
out
and
shlb
mov
sbb
mov
and
out
xor
and
ror
push
jnp
sarl
dec
repz
outsb
je
sbb
subl
jmp
ljmp
add
inc
std
dec
add
fsub
cmp
ret
les
jb
cmc
sahf
lcall
pop
mov
enter
aam
dec
mull
mov
mov
and
adc
testb
in
stos
xor
dec
xchg
add
mov
jno
xchg
sub
xor
lcall
sbb
and
mov
fs
adc
andl
xor
ret
xorb
lcall
pop
and
call
stos
dec
dec
shrb
pushf
ret
or
pop
mov
aam
push
les
shll
and
sub
insb
and
add
les
enter
shr
pop
ret
aas
jecxz
mov
ds
xchg
movsb
and
lods
cmc
dec
call
mov
or
jle
nop
gs
sbb
stos
imul
popf
adc
neg
adc
out
cmp
mov
hlt
lods
cmpsb
pop
mov
loopne
push
negb
les
sbb
bnd
sbb
mov
xchg
pop
mov
jl
or
mov
daa
repz
iret
mov
xchg
lea
xor
aam
aaa
mov
cli
lret
icebp
pop
adc
xchg
jnp
or
push
in
mov
sar
mov
cmpsl
aam
sbb
mov
mov
inc
push
mov
in
scas
lret
inc
dec
add
dec
push
stos
das
lret
cmpsl
shr
xchg
sub
sub
out
jg
divb
leave
lret
adc
jmp
add
cmp
lret
repz
push
inc
jno
and
mov
aaa
sbb
or
mov
sbb
mov
into
jp
jb
xor
or
or
ret
add
sub
sbb
mov
ret
test
xchg
push
mov
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
xor
loop
icebp
idiv
xchg
xchg
testl
mov
pop
or
jg
mov
pop
scas
andb
out
mov
mov
mov
outsb
rcll
add
xchg
xorb
mov
subl
and
adc
mulb
aad
enter
popf
stc
out
loop
insl
movsb
and
test
mov
xor
adc
xchg
int
mov
cltd
test
mov
and
mov
test
pushf
dec
or
mov
popa
sbb
adc
dec
dec
jns
in
pop
rclb
mov
sub
or
enter
mov
mov
adc
and
fwait
inc
ret
adc
mov
mov
js
xchg
adc
jmp
jg
shlb
sbb
xchg
mov
xor
out
push
pop
add
pop
gs
fdivl
xchg
aas
adc
leave
or
ret
andb
popf
xchg
int
jnp
xor
repnz
data16
sbb
sbb
sarb
pop
mov
sub
daa
movsb
adc
push
push
shll
test
xor
scas
xlat
ds
shlb
movsb
psrad
shl
ficomps
mov
into
jg
inc
pop
mov
popa
push
pushf
ss
stc
call
stc
shlb
roll
push
ret
repnz
lods
std
or
test
lret
popa
lahf
adcl
out
mov
out
ja
lods
pop
xchg
dec
add
adc
out
push
mov
xchg
inc
push
mov
call
push
jae
mov
cmp
or
sub
mov
pop
jno
pop
sahf
jae
inc
mov
jo
mov
mov
es
incb
mov
xchg
fsubs
cmc
ficomps
loope
dec
fcoms
lods
mov
pop
jbe
imul
ds
sahf
mov
js
mov
or
jae
in
jp
or
inc
lret
xchg
push
jne
into
fwait
rcrb
cmpsl
add
xchg
sbb
cmp
xchg
test
dec
out
jnp
insb
adc
pushf
xor
pop
mov
xchg
aas
std
mov
adc
mov
sub
das
jg
loop
or
sahf
movntq
shr
jno
cmp
inc
call
test
mov
inc
push
jns
cmc
ret
aad
pop
aas
adc
jne
sub
lock
icebp
cmp
cld
pop
mov
icebp
sub
or
add
or
out
add
out
cmp
nop
iret
mov
and
jnp
add
je
pop
push
inc
mov
push
mov
sti
mov
inc
negl
mov
pop
dec
in
out
bound
mov
aas
xchg
inc
mov
jecxz
stos
bound
sbb
add
cld
hlt
addr16
les
andb
xchg
cli
sub
cs
push
jg
test
xor
movsb
stos
clc
addr16
jno
cld
pop
lods
sub
fcompl
insb
mov
mov
sbb
aad
adc
and
lds
rcl
cwtl
xor
cmp
xlat
adc
sub
sbb
jbe
pop
jle
loopne
xor
movsl
cmp
ss
in
mov
cld
jp
push
fs
jmp
iret
inc
hlt
not
xor
pop
clc
push
ffree
xchg
mov
mov
notb
xchg
mov
dec
arpl
enter
inc
xor
insb
gs
ret
xchg
pop
or
cwtl
testb
repz
test
out
shlb
cwtl
shll
les
jg
or
call
pop
in
int3
sbb
or
adc
sub
sub
out
cmpsl
mov
repz
movsl
test
sbb
inc
inc
sub
mov
test
xlat
sub
add
fsubr
mov
movsl
adc
nop
das
and
repz
repnz
test
sub
xchg
push
enter
int3
cmp
and
subl
roll
jmp
popa
jecxz
sub
and
cli
adc
leave
push
jo
cmp
stos
inc
clc
adc
inc
push
pop
sbb
xchg
popa
ss
and
pop
mov
mov
lds
scas
pop
mov
lret
adc
pop
stc
divl
xor
call
xchg
aad
cmp
add
test
sub
icebp
xor
mov
bound
push
mov
imul
xchg
push
cs
add
mov
pop
mov
pusha
push
mov
sahf
push
cmp
mov
or
dec
pop
pop
and
mov
xchg
lea
mov
mov
push
inc
add
je
lret
mov
inc
into
inc
insb
pop
enter
int
mov
lcall
xor
pushl
test
ljmp
jbe
cmpsb
add
or
mov
pop
xchg
sbb
sub
xchg
sub
shlb
outsb
popa
mov
mov
mov
sarb
push
icebp
dec
adc
cmp
sub
cmc
sbb
cs
push
mov
jns
lcall
and
test
ret
fld1
xchg
es
cwtl
add
and
mov
dec
jns
int3
dec
enter
push
icebp
jmp
out
outsl
mov
daa
inc
jbe
lcall
jne
inc
inc
mov
pusha
xchg
hlt
fisubrl
and
sbb
call
jbe
mov
aam
sarl
xor
in
xchg
jnp
pop
mov
xchg
push
clc
js
scas
cwtl
lahf
pushf
dec
es
push
push
fisubs
push
pop
and
int
call
sbb
call
das
icebp
jbe
xor
loopne
shl
repnz
mov
popa
xor
cmp
negb
xor
add
jno
pop
push
stos
into
cmpsb
hlt
mov
adc
out
jl
stc
sarb
inc
ja
lret
lds
xchg
in
fmull
popa
xor
imul
shlb
pop
jno
addr16
xor
jmp
leave
mov
nop
imul
dec
testl
or
dec
mov
nop
pop
and
enter
jno
fidivrs
jl
add
in
push
pop
outsl
ja
adc
pop
fsubs
test
lea
js
push
push
aaa
xchg
divl
adc
mov
or
cmp
imul
enter
iret
xchg
addr16
dec
dec
sahf
pop
movsl
mov
pop
roll
fstl
mov
lret
loope
inc
mov
mov
add
bnd
jbe
jmp
aam
popf
mov
pop
inc
ljmp
sub
negb
sbb
jmp
aad
jbe
jle
jns
leave
loope
jmp
pop
push
shll
mov
mov
shl
cmp
add
push
clc
cli
and
lods
sbb
das
into
gs
pop
pop
frstor
xchg
xchg
mov
push
adc
imul
mov
cs
test
enter
push
out
je
hlt
pushl
sarb
add
imul
out
xor
dec
adc
std
pop
jno
notb
lods
inc
adc
push
adc
xchg
je
icebp
sahf
pop
fiadds
nop
cmc
rclb
in
aad
push
jb
lods
cld
loop
jle
pop
mov
push
ja
cmc
fidivs
pop
std
sub
mov
mov
or
adc
fcmovnbe
lret
notb
cmp
xor
mov
cmp
mov
push
fdivrs
aad
call
push
insb
leave
test
xor
sbb
pop
pushaw
lcall
es
fnstsw
mov
mov
aad
pop
add
adc
xchg
pop
or
out
in
jl
cmp
scas
push
dec
pop
pop
ficomps
pop
outsl
xchg
mov
insl
ljmp
jno
jecxz
int3
sahf
shll
lcall
mov
lods
dec
push
inc
ret
pop
dec
or
loope
xor
fsubs
mov
imul
adc
lret
pusha
outsb
fidivrs
inc
repz
in
adc
push
sbb
sub
adc
pop
add
and
and
pop
test
lods
fistps
add
xchg
stos
rol
sbb
adc
push
cld
adc
dec
hlt
ja
add
dec
enter
jecxz
add
pusha
adc
jb
ljmp
push
push
mov
add
cmpsl
cli
mov
push
fmulp
adc
push
push
mov
dec
add
push
into
stc
inc
bound
popf
or
jmp
addr16
sti
imul
cmp
jle
push
fdivrl
sti
test
les
daa
or
pop
mov
orb
pop
sbb
stc
outsl
fs
lea
add
mov
repz
arpl
aad
nop
sahf
dec
repnz
mov
and
and
adc
xlat
adc
jae
mov
mov
lret
push
push
test
mov
clc
jb
jp
lcall
mov
out
fcompl
mov
pop
jl
out
push
adc
gs
ds
mov
hlt
fcompl
inc
pop
push
mov
call
in
or
xor
push
jg
lock
scas
lcall
out
pop
cmpsb
push
cmp
sub
or
aad
sub
sub
cmp
cmp
mov
aam
imul
int
call
clc
sti
add
stos
lods
xchg
sub
jne
fcoml
mov
lea
xchg
ss
mov
cld
arpl
pop
sub
bound
imul
push
jbe
ljmp
xchg
or
sti
sbb
aaa
rclb
xlat
daa
mov
js
push
es
cmpsl
loop
sar
lods
inc
fistps
fists
or
push
cmp
mov
fnstenv
xor
in
mov
or
xlat
aad
push
rcr
cltd
dec
xchg
jmp
mov
in
iret
inc
or
xchg
and
dec
scas
adc
mov
call
pusha
xlat
adc
cmp
inc
popf
dec
js
shlb
xor
iret
sub
mov
dec
daa
mov
mov
in
push
fyl2x
cmp
scas
pop
je
test
pop
test
pop
sbb
push
rcrb
mov
mov
xchg
jbe
cwtl
scas
mov
xor
je
shll
pusha
and
ds
imul
arpl
cmpsb
daa
push
mov
orl
sub
scas
push
inc
pop
cmp
mov
push
mov
xchg
fisttpll
loopne
outsl
or
lock
push
hlt
jnp
fildl
negb
pusha
sbb
or
push
stos
sbb
out
mov
out
pushf
pop
xchg
dec
cmpsl
pop
jno
dec
sbb
movsb
jecxz
or
adc
cmp
fildl
ja
les
int
inc
lods
sub
inc
sub
mov
sbb
insb
cmp
and
out
lahf
insb
lock
cld
test
push
jo
xchg
loop
and
or
jae
sub
lods
mov
ror
xchg
mulps
imul
xor
adc
insb
pop
push
dec
push
or
leave
mov
mov
jg
call
mov
add
adc
movsl
dec
jle
fimuls
repnz
lret
int3
in
lahf
xor
dec
add
xor
sahf
cmc
mov
jb
dec
jl
and
sub
dec
push
jnp
icebp
dec
xor
mulb
sub
cmp
mov
stos
add
je
popf
pushf
lods
mov
ss
fcmove
mov
aam
xchg
mov
ret
pop
cmpsb
mov
adc
jbe
leave
mov
or
shlb
stos
inc
fstpt
mov
sbb
mov
insl
xor
pop
push
xor
cmp
ret
repnz
mov
mov
mov
movsl
mov
stc
fdivr
imul
push
cld
movsl
int
dec
adc
mov
and
cmp
movsb
and
cs
and
daa
dec
arpl
xchg
outsb
adcb
or
stos
dec
or
mov
cwtl
xlat
fwait
or
mov
pop
or
xchg
jb
sbb
nop
cmp
pop
cmp
pop
push
rcll
enter
xor
call
jnp
or
cmc
mov
or
mov
movsl
fidivrl
pushf
push
data16
fidivrs
loopne
push
ja
pop
mov
imul
adc
sub
rcll
sbb
outsb
or
in
or
aaa
cmc
xor
imul
jne
leave
cli
loope
lods
clc
dec
pop
jg
adc
scas
jmp
add
pushf
and
pop
rcll
add
and
icebp
cltd
ja
dec
loope
lret
push
push
jg
loope
jge
dec
movsb
cmpsl
js
xchg
call
push
lret
cmp
mov
xor
call
inc
scas
andl
pop
and
ss
das
loop
loope
in
lret
and
lahf
sub
in
ljmp
call
movl
repz
cs
scas
sahf
and
mov
repz
mov
imul
mov
in
aam
lret
ds
out
dec
sbb
pushf
addr16
pop
mov
int3
add
dec
xchg
add
mov
inc
jbe
test
lock
ret
and
mov
lret
mov
adc
call
pop
test
outsb
xchg
mov
loope
add
sbb
jl
aad
xchg
push
pop
pop
loop
push
daa
pop
and
fists
sub
mov
inc
gs
and
movsl
or
mov
arpl
out
adc
outsl
cs
cmp
mov
lods
ja
xor
and
arpl
test
dec
imul
add
jle
daa
xlat
pop
inc
ljmp
lock
test
mov
mov
leave
fcmovne
sub
pusha
pop
pop
in
outsb
or
jl
and
outsl
into
dec
sub
aad
jmp
push
dec
lret
add
lods
imul
orb
test
push
xlat
fs
iret
dec
dec
adc
scas
out
inc
inc
jno
mov
dec
ffreep
divb
xchg
mov
mov
int
ss
xchg
inc
fadds
jb
xchg
mov
push
mov
mov
dec
xchg
popa
aam
jmp
mov
dec
aam
push
pop
add
hlt
enter
push
xor
mov
push
idivl
dec
pop
loopne
add
popa
add
dec
pop
pop
ret
lret
pop
cmp
cmp
jl
out
pop
or
mov
adc
and
push
mov
mov
andl
into
xor
test
sub
dec
out
mov
imul
adc
leave
out
jns
ljmp
push
in
es
mov
and
shll
xor
mov
add
xchg
mov
push
jecxz
popf
pop
jnp
ret
inc
jns
dec
jmp
stos
push
cwtl
xor
cmp
or
fwait
inc
xor
ds
push
sub
inc
mov
dec
enter
mov
adc
popf
push
sub
out
imul
outsb
in
or
scas
mov
sub
cli
mov
test
adc
icebp
outsb
inc
lds
stos
test
lret
stc
and
or
xchg
xchg
test
pop
adc
rcrl
scas
sub
or
or
shl
test
sbb
in
lods
stos
bound
cmp
icebp
pop
xchg
push
cmp
or
dec
jae
jnp
add
dec
pop
aaa
imul
dec
lret
std
and
inc
cld
stc
mov
mov
scas
cmc
fidivrs
and
pop
fcompl
add
rcl
and
les
cmp
stos
fstps
test
jo
movsb
xchg
pop
push
les
imul
outsl
out
xor
pop
inc
mov
pop
add
adc
lret
cltd
mov
push
test
outsb
mov
jle
inc
int
sub
push
rcll
add
fs
clc
es
lcall
movsb
cmp
sub
sbb
cmp
fcmovnb
pop
imul
mov
and
arpl
push
jl
inc
push
mov
add
push
out
adc
and
scas
loop
imul
xchg
xorl
insb
cmc
xchg
imul
sub
mov
mov
fucomp
imulb
or
stc
out
and
mov
addb
add
or
gs
xor
push
les
dec
fstpt
add
std
jmp
mov
fwait
pop
mov
mov
ds
dec
jge
clc
push
cmpsb
decb
int3
mov
out
add
mov
xchg
adc
add
sub
stos
outsb
pop
and
out
mov
dec
das
push
mov
dec
outsl
cs
mov
sbb
cmp
lret
cmp
pop
idiv
pop
out
imull
or
sbb
lea
hlt
dec
je
sbb
mov
jnp
ss
mov
xchg
xor
push
mov
and
aas
rcll
mov
sub
lret
cs
leave
out
fisttps
push
leave
cmp
sarb
cmc
shrb
cmp
ret
jbe
call
add
test
movsb
jae
dec
ret
jl
pop
ljmp
in
sbb
jge
es
dec
xchg
enter
cs
mov
xchg
jb
rcr
sub
cmpsb
cmc
inc
xchg
xchg
dec
and
negl
scas
imul
data16
test
shlb
inc
xor
adc
call
mov
xor
cmpsl
inc
pop
and
call
in
es
xor
dec
into
add
stos
fsqrt
aad
pop
or
ds
loope
mov
adc
loop
ficoms
sti
adc
leave
xchg
stc
aas
sub
test
in
lcall
movsb
fsub
in
je
pop
les
movsb
mov
mov
jl
out
lods
mov
enter
push
jo
scas
or
lods
xor
cld
mov
adc
cmp
sbb
push
call
and
hlt
or
nop
subb
cmc
jae
mov
mov
cld
inc
cmp
jno
lods
imul
push
imul
ret
mov
sbb
xchg
fistpl
cmpsl
mov
mov
es
scas
mov
sarl
jb
mov
in
mov
idivl
enter
xor
mulb
sbb
add
test
clc
ss
nop
enter
pop
sub
in
lret
cmp
lret
dec
push
push
cmp
gs
popf
xchg
push
sbb
in
aaa
leave
dec
pushf
cmp
xlat
int3
fdivrs
jae
imul
mov
pusha
fstp
cmpb
cmp
dec
lods
push
push
enter
cmp
test
loopne
xchg
or
push
pop
mov
pop
outsb
loopne
inc
or
test
add
mov
sub
sbb
push
repnz
repz
sub
inc
add
jmp
dec
and
fcmovnu
insb
repnz
lcall
mov
or
xor
into
xchg
aad
aas
push
adc
fidivs
xor
xor
sub
mov
nop
lret
testb
or
adc
sarb
fs
ljmp
ja
push
call
sub
ljmp
iret
and
aas
js
scas
adc
aam
data16
push
in
push
aad
test
lds
gs
lahf
push
inc
and
cwtl
mov
xor
mov
sub
cmp
stc
rcll
dec
cwtl
cmpsb
adc
outsb
imul
jnp
in
int
clc
fldcw
jecxz
push
mov
ret
mov
int
and
gs
inc
inc
and
nop
insb
in
fs
mov
out
push
es
int
inc
test
add
xchg
pop
ja
call
cwtl
std
mov
sbb
mov
push
fldt
or
sbb
ja
hlt
mov
scas
in
inc
or
sub
push
jbe
cltd
aas
jne
mov
pop
js
and
jo
pushf
inc
sbb
dec
js
mov
lret
cld
aad
ss
xor
sar
stos
add
sbb
cmc
add
sbbb
jne
jnp
sub
imul
xchg
les
fwait
shrw
and
aam
cmc
and
outsl
xchg
gs
lods
lret
lods
es
ljmp
dec
add
inc
pop
ret
or
daa
pop
or
lods
aad
sub
mov
mov
xchg
dec
aaa
jbe
loopne
rorb
and
push
xchg
and
sbb
dec
jae
scas
xchg
xchg
cmc
mov
mov
int3
dec
ljmp
stos
mov
shlb
lods
and
je
fsubr
sarl
push
and
lcall
dec
sub
data16
popa
xor
dec
lret
and
lea
std
adc
js
mov
not
push
je
dec
sbb
pop
cwtl
into
mov
xor
cmp
outsb
pop
cmp
jle
pop
test
mov
in
and
mov
ret
mov
mov
fists
add
push
push
outsb
cmp
dec
sbb
ja
movsb
repz
fdivrp
outsl
jbe
push
sbb
cltd
push
pop
pop
sub
ficoml
xor
pushf
mov
aas
jne
shlb
and
sub
push
mov
jge
and
sbb
xor
inc
mov
sub
xor
cmp
jl
dec
mov
ja
sub
sahf
lret
repnz
push
ds
jne
push
jecxz
adc
js
xchg
andl
imul
sbb
or
dec
cmp
push
iret
sub
aas
jne
cmp
enter
pop
push
xor
add
es
pop
inc
xchg
adcb
lret
test
push
mov
adc
dec
sbb
adc
imul
pop
pop
sahf
mov
pop
push
stos
and
inc
lcall
lds
fistps
cmp
xor
mov
push
out
lock
sub
jns
hlt
or
xor
sub
and
sbb
ss
fxch
push
ljmp
lcall
mov
paddb
cmp
mov
leave
push
add
nop
push
sub
pop
stos
xchg
adc
iret
mov
std
or
pop
xchg
clc
jecxz
sub
dec
dec
rol
add
pop
mov
rcr
test
push
cmp
loope
xchg
insl
jns
xor
hlt
aas
pop
dec
sti
push
pop
xchg
lds
mov
cmp
xlat
lcall
adc
sbb
mov
mov
push
scas
cmpl
popf
enter
jns
arpl
ljmp
sub
into
das
in
shll
pusha
mov
jle
in
push
int
fnstenv
shll
cwtl
mov
inc
or
stc
insl
mov
out
stc
or
roll
pop
mov
sbb
xchg
inc
mov
jns
shr
bound
nop
inc
add
lahf
xchg
mov
into
cmp
mov
in
out
sbb
ja
cmp
movsb
jmp
push
divl
cmpsl
pop
push
rcll
or
pop
push
and
mov
stos
xchg
push
dec
push
pop
cmpsb
js
jle
add
mov
xor
repnz
push
test
cmp
mov
pop
stos
fisubl
fnsave
scas
aam
push
push
mov
lret
shlb
les
int
push
insb
mov
jmp
sub
cmp
arpl
mov
loopw
not
xchg
jle
clc
xchg
rcrl
pushf
sbb
jmp
sbb
adc
jecxz
es
out
jnp
pop
pop
fiadds
fs
xchg
std
xchg
pop
enter
ljmp
lods
sbb
inc
sub
ficomps
xor
sbb
xchg
das
sub
or
push
repnz
mov
or
mov
icebp
jge
dec
mov
invd
jp
leave
xchg
jle
jge
arpl
sub
daa
mov
les
sti
sub
cmpb
or
xchg
pushf
ficompl
ret
inc
out
and
push
mov
jne
shll
mov
decb
sub
push
mov
cmpsl
adc
lcall
lea
push
mulb
adc
out
mov
scas
mov
nop
xor
xchg
mov
jmp
mov
adc
mov
pop
outsb
jb
clc
dec
loope
push
aaa
mov
out
inc
loope
int
dec
sub
scas
int3
jle
sub
es
insl
pop
out
out
cli
sbb
dec
sbb
in
add
fdivrp
xor
js
out
mov
iret
inc
arpl
mov
dec
dec
sub
cs
incb
jns
scas
and
in
test
inc
sub
cmpsb
stos
int
mov
loope
sub
xor
test
xor
adc
sbb
dec
loop
test
repz
inc
loope
shlb
in
jge
dec
xchg
in
lods
jge
clc
xchg
add
ljmp
inc
and
mov
push
lea
pop
adc
add
jno
xchg
add
xlat
es
in
out
adc
lahf
dec
mov
add
test
not
andb
mov
mov
clc
fiaddl
cld
ljmp
jae
aaa
ret
cmpsl
ljmp
mulb
nop
xchg
int
or
jne,pn
dec
mov
xor
lods
pop
push
inc
or
mov
addr16
mov
dec
mov
xor
fcompl
fcomip
jp
jnp
hlt
xchg
lcall
call
add
mov
scas
popa
adc
lods
cmp
mov
fwait
mov
leave
sub
adc
cli
xlat
mov
xchg
aas
test
inc
sbb
arpl
arpl
lret
cli
stc
out
int
movsb
push
ds
repz
arpl
aad
sahf
xchg
sti
pop
xchg
add
cmp
jl
jno
dec
out
xor
sbb
jg
addb
imul
xchg
xlat
movsb
xchg
sub
jns
pop
or
and
xchg
cmpsb
push
mov
pop
jmp
lods
pop
mov
jge
dec
popf
pop
imul
sub
insb
mov
adc
mov
mov
sub
je
jle
sbb
fmull
and
or
andl
dec
insl
xchg
aad
sub
cs
push
pop
xchg
test
pop
loop
pop
popa
out
push
in
jno
jmp
fwait
aam
mov
fwait
ds
pop
mov
int
mov
xor
push
sbb
mov
sbb
daa
xchg
cltd
mov
pop
ja
xor
jle
icebp
insb
add
into
arpl
rorl
add
lods
and
mov
fdivs
cltd
xchg
sub
rorb
ret
das
sub
sub
sub
std
push
and
fcompl
cs
push
xchg
rol
shlb
into
shrb
mov
fnsave
pop
js
das
stc
push
movsl
jle
testb
xchg
fadds
jnp
iret
fnsave
sub
fmuls
das
mov
aas
test
scas
inc
fildl
mov
sbb
pushl
mov
or
push
xor
shrl
jnp
and
mov
cmp
ljmp
addb
rorb
push
xor
pop
push
outsl
pop
adc
ficoml
jmp
mov
stos
push
orl
inc
pop
mov
lcall
test
pop
sub
addl
fcomip
jno
std
stos
push
fmull
test
jp
mov
rolb
push
add
call
ret
mov
shlb
out
cmp
sbb
cld
js
shll
or
pop
popf
insl
push
mov
cmc
lret
push
cwtl
rclb
inc
mov
clc
inc
xchg
dec
sbb
mov
pop
mov
push
xchg
sbb
aad
test
pop
add
hlt
rorl
cltd
leave
data16
xor
aad
xchg
mov
stos
and
repnz
xor
aam
out
dec
jbe
or
js
sub
jmp
add
inc
mov
fdiv
aam
outsb
popf
mov
push
and
nop
push
insb
stos
iret
lret
imul
xor
xor
cs
cltd
fwait
push
mov
jl
enter
nop
xchg
in
sahf
stc
mov
mov
inc
rorl
mov
fwait
mov
test
out
cmp
inc
clc
xor
loopne
push
or
or
mov
push
xor
insb
sbb
or
mov
xlat
stc
aaa
mov
out
sub
dec
insl
cmp
fs
ja
push
and
shll
stos
imul
subb
dec
cmp
sub
jo
xchg
rolb
xor
mov
aas
fwait
or
cmpsb
pushf
fdivr
dec
sub
imul
in
das
in
adc
fidivrs
dec
push
dec
sbb
fldl
scas
xchg
add
iret
mov
sarl
lahf
shlb
adc
or
cmp
mov
mov
mov
insb
enter
in
inc
mov
lock
mov
push
push
jg
mov
mov
mov
pop
inc
cs
iret
inc
mov
cmc
mov
pop
cmp
test
jnp
push
mov
scas
pushf
pushf
mov
xchg
pushf
jg
scas
sarl
out
arpl
or
mov
fnstenv
sub
sbb
fnstenv
adc
adc
dec
push
jb
cs
adc
inc
cmc
inc
xor
rcrl
xor
mov
cmp
xchg
stc
jno
pushf
mov
dec
and
add
stc
cli
leave
shll
add
xor
lret
fnstcw
mov
push
outsl
cltd
scas
inc
mov
xchg
into
nop
mov
icebp
pushf
mov
xor
mov
xchg
push
inc
jo,pn
mov
or
cmpl
push
mov
scas
mov
xchg
or
sbb
sbb
dec
pop
fcomps
cmp
stc
movsb
aas
les
mov
and
adc
push
repnz
mov
call
adc
cmp
jmp
outsl
stos
fisubrs
xchg
fmuls
cmp
sbb
push
lret
mov
orb
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
and
sbb
jnp
pushf
jnp
bound
out
xchg
das
insb
or
stos
jne
sub
lock
push
jo
out
and
lock
cmp
cmp
es
les
lea
decl
cmpsl
fwait
mov
mov
jge
fsub
pop
xchg
push
int3
shrl
les
mov
es
xor
fdivrs
adc
stc
stos
pop
inc
std
mov
or
sub
sbb
hlt
das
rcrb
js
or
cmc
fdivr
frstor
iret
pusha
xor
and
aam
mov
xor
fcmovb
xor
and
out
insb
loopne
mov
shll
mov
dec
scas
jae
jnp
or
lods
cmp
into
clc
mov
std
adc
mov
in
push
andb
fdivs
sar
sbb
cmpsb
push
bound
ljmp
xchg
or
dec
jmp
and
jg
in
imulb
mov
imul
sbb
dec
imul
out
iret
rol
mov
mov
push
inc
fcom
push
out
push
and
sub
pop
insl
pop
into
cmpsb
and
loope
pop
cmp
and
xchg
add
push
movsl
and
mov
sub
or
mov
ljmp
dec
icebp
jp
jge
mov
sbb
rcrl
add
sbb
inc
lock
inc
mov
fistl
test
roll
enter
dec
jge
mov
and
loopne
sbb
sbbl
push
pop
outsl
subl
loop
jecxz
mov
fisubrs
or
or
mov
cld
lods
out
push
into
fiaddl
push
inc
xchg
pushf
ljmp
pop
pop
xor
out
jno
repz
pop
xor
test
add
pop
xor
xchg
jb
movsb
int
js
lds
ds
push
clc
iret
dec
mov
mul
lea
and
pushf
cld
mov
xchg
or
jne
fwait
aad
psrlw
dec
not
push
test
lods
mov
push
jno
pop
or
je
jmp
cmc
ficoml
pop
pusha
push
and
add
add
ljmp
xor
push
stos
pop
orb
mov
fbstp
cmc
dec
repz
sbb
rcrl
adc
push
mov
inc
insl
movsb
shl
lds
sub
sbb
pop
inc
mov
add
leave
in
inc
mov
dec
and
arpl
andb
es
ljmp
sarb
mov
popf
dec
mov
lret
lcall
std
fisubrl
inc
cld
dec
jns
xchg
push
cmp
xchg
or
mov
cli
icebp
mov
mov
test
dec
dec
in
cmc
lret
aam
fidivrs
sbbl
in
xlat
lds
jns
cmp
cmp
sahf
aad
sub
push
mov
loop
cmpsb
out
xchg
cld
pop
pop
xchg
lret
xor
icebp
sbb
adc
and
sbb
mov
shrb
sbb
and
adc
fisttps
cwtl
jge
into
jecxz
mov
leave
imul
pop
pop
in
push
sbb
mov
stos
es
add
push
jb
mov
gs
dec
mov
dec
fldcw
les
jle
mov
xor
test
nop
pop
scas
mov
dec
adc
push
mov
and
fistl
push
iret
jae
inc
xor
std
sub
imul
rolb
inc
cmp
xor
rorb
jmp
mov
add
inc
ja
in
ja
icebp
ja
sub
imul
push
sbb
mov
jge
jb
outsl
and
sti
or
mov
fisttps
iret
mov
mov
leave
mov
pop
fdivrs
notb
xchg
jnp
mov
mov
inc
pusha
in
or
fxch
outsb
das
add
jge
mov
mov
jb
mov
or
aaa
sub
andb
cmpsb
js
js
out
lret
outsl
jae
in
mov
int3
lcall
lds
outsb
mulb
mov
into
and
sub
in
push
ret
jle
jnp
shlb
cmp
dec
dec
cltd
ds
mov
int
inc
sbb
ret
mov
sbb
xchg
pop
int
and
and
cld
bnd
addr16
xchg
aad
sti
fstl
add
sbb
arpl
mov
inc
shll
push
sbb
pop
jnp
mov
dec
push
push
cmpsl
rep
dec
popa
test
xor
outsl
out
bound
std
dec
popf
jae
mov
mov
je
ss
daa
push
xchg
mov
mov
and
out
inc
xchg
and
fwait
dec
stos
jecxz
imul
pop
pop
and
fcoms
jle
bound
mov
mov
pop
pop
subb
jns
jg
int
idiv
xor
mov
sub
or
add
pop
negl
cltd
lds
mov
mov
fistpll
test
ret
adc
jno
xchg
mov
sub
arpl
in
lret
sbb
test
xor
jge
rcrl
pop
in
sbb
pushf
mov
xchg
aaa
shll
push
rorb
pop
fnstsw
or
jmp
movsl
mov
mov
ja
inc
ret
cmp
out
mov
rol
je
add
mov
mov
mov
jg
sti
sub
cmp
jge
cmp
push
or
pop
push
aas
add
push
in
lds
inc
sbb
push
daa
push
out
fistps
ret
mov
movsb
adc
iret
movsl
or
add
pop
jp
mov
leave
lods
add
inc
inc
jg
or
mov
sbb
push
hlt
sbb
cmpsl
test
lret
mov
bound
ret
push
in
aas
ret
xchg
nop
iret
jl
ret
jns
adc
mov
mov
jbe
add
inc
cmp
add
testl
push
jo
sub
dec
aam
mov
pop
jecxz
repnz
jo
mov
adc
std
pop
jne
dec
imul
in
fwait
loope
or
xchg
notl
mov
dec
lcall
stos
aad
loopne
jne
ss
cmp
push
xor
imul
mov
xchg
lret
loope
lret
loopne
das
enter
cld
cmpsb
sub
sahf
int3
pusha
jnp
test
mov
jno
cli
cmpsb
fsubrs
cmpsb
jns
xor
call
adc
mov
jno
adc
hlt
je
loop
sbb
dec
out
fdivr
gs
imul
rcrb
sbb
mov
xchg
fwait
inc
jmp
xorb
inc
fidivs
es
mov
adc
lahf
lea
ljmp
bnd
add
pop
aas
jp
cmp
loop
int
test
cltd
shrb
cmp
and
cltd
test
cmp
icebp
mov
mov
clc
ds
push
xlat
add
in
mov
sbb
fs
cmovl
mov
lds
adcb
fidivrs
sub
dec
pop
cmp
lret
mov
mov
pop
xchg
mov
lods
pop
pushl
mov
add
mov
roll
push
stc
jnp
lock
mov
out
mov
fnstenv
ja
loopne
adc
xchg
mov
lds
negb
and
test
mov
or
stos
movsb
xlat
dec
sub
iret
xor
out
cmp
into
lds
mov
pop
cwtl
nop
mov
imul
pop
push
push
mov
stc
popf
pop
movsb
mov
dec
lods
pop
jle
inc
lahf
push
inc
pop
leave
or
add
push
ret
pop
jae
mov
pusha
jns
push
shr
xchg
stos
lds
push
pop
loopne
pusha
movsb
push
mov
repz
fs
nopl
push
int3
ret
xchg
xchg
decb
inc
shrb
inc
push
jae
cltd
mov
nop
mov
add
lods
sub
icebp
add
sbb
and
mov
adc
movsb
dec
xor
test
jp
and
imul
push
xchg
adc
scas
xchg
push
loopne
adc
jg
xor
dec
or
mov
gs
add
loop
int3
jmp
pop
sub
test
xchg
insl
mov
jg
cmp
outsl
dec
das
pop
cmp
jmp
xchg
pop
mov
xlat
imul
or
push
mov
ss
push
scas
jnp
adc
pop
je
pop
cltd
addl
mov
fwait
lea
scas
mov
and
mov
xchg
sbb
je
mov
inc
incl
lds
addl
push
sub
sub
and
ret
loopne
mov
cmpsb
test
aam
push
sbb
or
sub
aas
inc
adc
shrl
dec
fldenv
mov
adc
sub
je
xor
mov
int
sub
add
jmp
insb
mov
xchg
push
lret
int
ret
mov
loope
aas
fidivl
aaa
add
xor
mov
jne
push
inc
mov
mov
ret
jl
pushf
cmpsb
insl
hlt
js
dec
lds
inc
test
cmp
rol
hlt
push
int
dec
mov
fstpt
add
movsb
lea
adcb
repnz
jbe
lds
enter
xor
jge
int3
xchg
adc
mov
stc
fdivr
stos
and
or
lock
jle
pop
sub
cwtl
int
mov
add
dec
movsl
add
rol
push
iret
mov
xchg
mov
mov
adc
sti
sti
rcl
inc
cmpsb
inc
push
mov
dec
or
stc
sub
shr
aad
daa
in
xlat
decl
repz
push
cmp
sub
cwtl
sbb
rolb
or
rorl
lods
xchg
nop
std
fstpl
cs
out
xchg
and
out
fnstenv
mov
fucomi
fsubrs
or
cmp
mov
push
mov
js
movsb
test
outsl
pop
out
or
out
iret
push
aad
sub
add
adc
stos
repz
insb
fidivrs
dec
jne
mov
add
xchg
fistps
cmp
and
ret
pusha
pop
loop
push
xchg
clc
lds
fsubrl
daa
cmc
mulb
jmp
mov
sub
inc
nop
push
dec
or
and
xor
and
xchg
sbb
cmp
scas
sub
aam
pop
sub
ja
push
add
cmpsl
inc
andb
pop
pop
jmp
push
mov
out
and
call
stos
fcomp
pop
fdivl
lods
aaa
mov
lcall
cmp
rclb
jno
outsl
cltd
std
scas
push
lcall
testb
inc
inc
pop
rolb
xchg
xchg
or
pop
std
outsb
call
ljmp
dec
sahf
mov
adc
push
negl
inc
fstpt
and
push
mov
popf
test
jbe
fmull
mov
adc
pop
mov
add
js
lret
es
adc
mov
inc
leave
andl
cmp
xor
fs
lods
lds
stc
cmp
pop
dec
sub
mov
in
es
in
cmpsb
inc
rolb
je
xor
add
pop
enter
pop
mov
bswap
mov
cmpsb
rolb
jne
push
and
pop
ret
push
jns
mov
or
dec
rcr
adc
in
mov
cld
dec
dec
jbe
xchg
mov
popa
dec
and
xchg
inc
xchg
cmpsl
insl
mov
mov
icebp
push
mov
add
push
adc
sub
or
mov
idiv
and
arpl
push
push
cltd
pop
cmpsl
repz
jmp
push
shll
rol
popf
inc
in
inc
stos
sub
data16
lods
pop
roll
mov
lock
fs
xchg
push
jmp
rclb
lea
add
inc
hlt
pop
mov
xor
cli
daa
dec
mov
mov
mov
imul
inc
sbb
aad
loop
jae
or
dec
adc
gs
inc
push
insl
sbb
xchg
lret
mov
sti
movsl
push
lcall
cmp
clc
bnd
mov
dec
je
adc
out
or
mov
hlt
push
out
punpckldq
daa
mov
out
xchg
adc
fcompl
pop
dec
sub
aam
mov
inc
cmp
arpl
aam
shll
or
mov
adc
add
ret
pop
sbb
std
inc
int3
sbb
out
cmc
adcb
loopne
pop
push
xchg
xor
mov
xchg
call
testb
imull
sbb
push
cld
jmp
aam
cmp
test
mov
adc
in
cwtl
push
in
repz
sbb
scas
in
jae
sub
cmp
or
inc
add
aas
xor
or
lea
or
out
popa
push
push
cmp
jo
rcrb
inc
imul
dec
adc
inc
mov
stc
fdivrl
insl
mov
ret
cwtl
sub
xchg
outsl
xor
popf
mov
ret
lret
push
shll
mov
dec
aaa
in
sarb
std
mov
sahf
lcall
cltd
int
shlb
int
movsb
lret
aam
fdivrl
jge
mov
push
mov
sub
inc
lcall
cli
lret
movsb
scas
push
fisubl
shlb
aas
stos
andl
addr16
xlat
lahf
ror
mov
xchg
imul
or
nop
cltd
lea
adc
adc
xor
and
fcomp
push
clc
and
inc
push
adc
test
xchg
vmwrite
mov
fwait
test
daa
outsb
mov
bswap
orb
movsl
mov
xchg
das
repz
stos
mov
dec
stos
mov
dec
sub
jbe
movsb
mov
sub
xchg
mov
popa
aam
fimuls
xchg
movsl
cmp
in
push
idivb
es
mov
aam
stc
or
mov
xchg
scas
andb
pop
fidivrl
notl
xor
cli
loop
push
jno
test
or
call
cltd
push
test
mov
js
icebp
mov
leave
add
cmp
lahf
xlat
out
adc
xchg
inc
cmp
and
je
mov
inc
jae
push
jns
jae
shlb
in
imul
pop
xchg
int3
sub
pop
inc
sub
test
cmp
fwait
outsl
addb
stos
ret
mov
ljmp
scas
push
lret
cwtl
cmp
fs
fisttpl
pushf
cwtl
pusha
push
mov
push
daa
cmpxchg8b
push
add
xor
add
jp
call
adc
push
sbb
cwtl
adc
sti
mov
pop
lock
pushf
dec
dec
jne
pop
aas
cltd
mov
aad
jg
sbb
fstps
lock
sub
sbb
cmc
sbb
xor
add
jns
push
jl
fdivs
outsb
and
mov
xor
and
and
xlat
jb
iret
sub
aam
xchg
shlb
bound
fwait
repz
inc
shl
lahf
in
call
rcl
ss
sub
jo
loop
int
shll
lahf
aaa
aaa
push
push
mov
mov
int3
jne
aam
rcrl
xor
mov
and
mov
add
dec
std
in
cmpsl
pop
inc
mov
mov
and
test
outsl
xor
mov
stos
adc
lcall
shll
jne
imul
jecxz
add
push
out
sub
push
fisubs
leave
rcr
aaa
push
popa
inc
push
cli
or
das
inc
xorl
mov
add
movsb
iret
in
inc
cwtl
or
hlt
loopne
cmp
push
lods
jno
orl
imul
inc
lods
sub
jns
push
jne
test
ficomps
rol
add
sbb
inc
jno
pop
inc
pushf
adc
jg
push
xchg
adc
scas
ja
pop
lret
mov
adc
xor
xchg
invd
shrl
xlat
stos
das
inc
fs
sub
xor
arpl
push
sbb
xor
push
cmp
push
adc
jg
std
adc
loop
call
sahf
aaa
dec
aas
insl
iret
or
and
das
popa
roll
jbe
in
sbbl
add
sbb
sti
into
sbb
cld
ret
mov
sbb
loop
jae
in
loopne
scas
shll
nop
inc
mov
pop
add
in
stos
cmp
adc
pop
xchg
loop
or
pushf
sbb
notl
or
cmp
pop
push
cmpsb
mov
sahf
jo
mov
mov
test
xchg
mov
decl
arpl
es
inc
ja
sub
out
in
mov
insl
daa
xchg
adc
repnz
mov
mov
mov
fisttpl
pop
stos
push
pop
imul
out
add
sub
inc
pop
push
pop
pop
outsl
leave
mov
and
or
sti
or
imul
aad
shlb
cs
dec
rolb
psllw
xor
clc
in
out
mov
xchg
push
in
test
insl
popa
or
sub
loope
mov
push
leave
xor
roll
mov
push
dec
xchg
pop
aad
call
shlb
scas
out
cmp
into
ljmp
xor
arpl
pop
adc
adc
loopne
inc
test
mov
xchg
into
mov
loopne
cmpsl
fisttpl
popa
std
sub
andl
movsl
sbb
je
adc
test
jbe
sti
mov
lret
adc
je
in
fisubrl
jno
sbb
pop
or
push
fildll
mov
sub
xchg
jns
push
cmp
sahf
or
sarl
add
lods
jb
push
inc
push
dec
mov
test
sbb
xor
dec
push
mulb
out
pop
int
addr16
push
je
pushf
outsl
mov
or
clc
aam
mov
insb
clc
pop
or
sahf
es
out
adc
in
mov
jae
testb
out
xchg
popa
stc
sbb
push
out
orb
scas
dec
jbe
iret
insl
lods
addr16
xchg
pop
jo
std
dec
les
leave
pop
mov
aaa
push
and
adc
jnp
and
lret
and
jo
test
cmc
jg
loopne
neg
xchg
add
mov
push
leave
jae
push
sbb
push
sbb
lret
nop
pop
cmp
and
jge
adc
int
arpl
push
lret
fstp
add
sub
jo
lods
pop
inc
addb
dec
or
sbb
je
test
push
mov
mov
cli
mov
lahf
mov
div
push
repnz
inc
or
fidivl
rorl
mov
xchg
mov
cli
mov
cmp
shlb
push
push
adc
push
andl
je
out
push
insb
mov
and
lret
dec
pusha
mov
ds
mov
in
cli
or
inc
lret
xchg
adc
arpl
call
mov
sti
iret
or
add
pop
push
or
mov
add
ds
sbb
shrb
int
lds
movsb
fbld
fmull
fs
add
test
lret
mov
inc
int3
data16
cs
adc
lret
js
push
fnstcw
jle
xchg
lds
push
mov
jbe
inc
jno
testb
push
cmpb
sbb
neg
fstpt
fcoml
inc
inc
pop
dec
jecxz
int
jl
mov
xor
add
jl
loope
mov
imul
mov
and
jns
sub
cld
lret
testl
lds
movsb
xchg
xchg
xor
lods
xor
fiaddl
aad
jno
nop
pop
stos
xor
sub
mov
js
adc
sbb
mov
push
xchg
pop
mov
loop
lahf
out
outsl
adc
cmp
loopne
sub
sbbb
stc
int
repnz
daa
adc
and
and
dec
mov
push
lods
lea
adc
jbe
dec
xchg
dec
das
jge
shll
mov
jo
ret
and
insl
mov
sbb
jae
cmp
lahf
add
cli
mov
jge
fcompl
xchg
gs
je
outsl
insb
lods
cmp
loope
cmc
push
cmp
shrb
sbb
xor
xor
mov
and
cmp
ffree
les
scas
jne
inc
pop
dec
push
sub
mov
xchg
cmp
mov
or
mov
mov
lock
out
jmp
xor
test
mov
adcl
cmp
je
stc
add
ret
jp
sbb
lret
inc
ret
cmp
jl
ret
dec
cwtl
mov
mov
cmp
test
xchg
mov
pusha
xor
push
mov
xor
sbb
popf
push
dec
pusha
jo
cmpsl
dec
pop
mov
iret
addr16
bound
or
sbb
loop
sbb
stos
pushf
popa
fs
pop
push
xchg
mov
sar
repz
sbb
pop
xchg
call
or
out
imul
cmp
sub
or
loopne
sbb
cmp
mov
dec
mov
push
popf
push
cmp
dec
stc
cmp
push
jo
repnz
pop
and
add
jmp
sub
into
popa
sub
fs
xor
imulb
loop
icebp
in
pop
sbb
insl
je
jge
push
dec
ljmp
dec
add
adc
xor
mov
add
mov
fs
add
jbe
stos
mov
rcll
or
jns
add
cmpsb
jne
cmp
rol
jo
and
jns
in
jae
fisubl
xor
call
fcmovbe
fistl
ja
popa
pop
push
ret
push
xchg
gs
sbb
lea
add
dec
pop
mov
pop
loop
lods
outsl
shld
sub
test
pop
dec
xor
outsl
ficompl
shll
push
jge
lock
jno
les
dec
mov
addb
subl
in
add
cli
rolb
pushw
insb
sbb
mov
adc
jo
fistpl
adc
adc
ret
mov
lods
aam
dec
jl
es
xchg
out
mov
add
xor
sbb
lods
xor
aam
mov
dec
sbb
jnp
pop
lcall
xlat
into
rcl
and
leave
and
pop
pop
jle
lods
notb
shlb
jl
pop
shlb
push
dec
mov
das
mul
add
int
lret
cmp
icebp
xor
bound
mov
addl
stos
jl
orb
loop
out
jg
daa
cmp
andl
aas
inc
sti
lock
inc
fdivl
popf
fsubl
cmp
and
dec
add
imul
xchg
lock
loopne
pop
shrl
cmpsl
imul
stos
jge
adc
mov
inc
jl
data16
jle
or
cli
jg
sbb
popf
jns
insl
xlat
dec
lock
data16
les
mov
mov
dec
out
pop
pushf
or
push
aas
sbb
push
or
adc
push
dec
adc
test
mov
popf
lock
dec
sbb
sbb
inc
test
mov
std
fs
imulb
and
cmp
xor
out
mov
call
jmp
cmp
xlat
mov
inc
out
ljmp
out
movsb
or
fldenv
xor
sbb
dec
push
idivl
cmpsl
pop
out
mov
dec
mov
daa
ds
int
dec
jmp
das
push
cltd
dec
push
xor
loope
movsb
or
xor
or
cs
mov
mov
arpl
popa
and
adcb
scas
mov
sbb
loop
scas
and
dec
xchg
cmp
xchg
fstpl
sti
sbb
xchg
xchg
leave
mov
arpl
pusha
xchg
fnstenv
subb
push
stos
pop
jmp
fstp
outsl
or
popf
push
or
mov
jecxz
push
sub
dec
into
xor
in
clc
mov
cmp
mov
xchg
rep
xor
push
xor
mov
push
push
dec
aas
inc
addr16
fidivrl
pop
popa
jle
dec
in
pop
stos
jecxz
xor
pop
xor
dec
push
ljmp
stos
cmpsl
test
testl
lds
shll
rcr
cmp
pop
inc
pop
inc
jb
sub
jl
int3
push
je
andl
adc
xor
ja
or
xlat
nop
cld
adc
outsb
push
dec
dec
int3
addr16
ljmp
stc
jecxz
rcll
pop
jbe
imul
push
jnp
hlt
and
aad
xchg
scas
add
cld
pcmpeqw
ret
xchg
repnz
and
and
in
and
dec
mov
or
in
jp
ret
cwtl
mov
fisttpll
mov
xchg
pop
xchg
xor
test
outsb
xchg
sbb
and
rcll
pop
jecxz
lds
mov
cmpsl
lret
pop
sub
xchg
lret
lea
mov
lods
in
mov
add
push
jne
testb
mov
dec
mov
test
jo
stos
sbb
jp
jae
pcmpgtb
xchg
xchg
mov
ret
xor
in
or
mov
ss
pop
push
nop
dec
jle
lock
jmp
test
lret
lds
xor
dec
xor
mov
xcrypt-ofb
cmpsl
outsl
xchg
loop
inc
cmp
sbb
xlat
pusha
mul
rcrl
cmp
push
out
sbb
insl
pop
shrb
jo
sub
sarl
or
fwait
enter
pop
push
pushf
sub
pop
xor
or
out
lahf
pop
out
jmp
outsb
cmp
mov
out
sarb
jne
je
rolb
mov
jo
push
or
sahf
insl
out
sti
pop
rcll
dec
std
pop
dec
xchg
sub
and
cmp
aas
mov
repz
scas
jmp
dec
add
jo
sti
jmp
and
enter
gs
cmp
jb
repz
mov
xor
cmp
push
or
shll
add
inc
cltd
outsb
aam
loop
xchg
pop
mov
xchg
test
or
mov
imul
add
sub
mov
testl
pop
pop
mov
jmp
jo
insl
sbb
mov
and
jne
mov
jne
iret
adc
pop
addl
fdivrs
inc
sub
and
test
jp,pn
push
inc
pushf
xchg
cmp
cwtl
icebp
and
cmp
pop
addr16
adcb
jb
in
cmpsb
sbb
lret
push
gs
xor
jns
cmp
adc
dec
xchg
test
cmp
fistl
adc
push
ja
push
dec
int3
mov
into
cmp
sarb
loopne
aad
mov
jnp
repz
push
aas
cmpb
jle
xchg
add
xor
jge
cmp
inc
pop
adc
aas
addl
test
cmp
or
dec
mov
aam
stos
push
iret
and
hlt
push
aam
mov
pop
ljmp
sub
mov
pop
add
or
test
push
jecxz
int
mov
clc
mov
scas
in
jl
jg
mov
stc
into
aaa
add
xchg
mov
call
dec
cmp
lahf
push
push
roll
fs
insl
cwtl
pop
pop
push
mov
test
out
mov
leave
call
sub
fwait
dec
testb
lea
jnp
sub
imulb
pop
notb
stos
imul
fistpl
jmp
sub
mov
dec
push
fsts
pop
cld
stc
pushf
jbe
sub
outsl
pop
inc
cmp
bound
stos
dec
fisubl
and
int
aaa
push
mov
cmp
jne
pop
inc
lea
push
xchg
divl
mov
hlt
ljmp
xchg
imul
mov
adc
pop
ret
push
insb
xchg
xchg
dec
pop
push
shl
test
lods
mov
bound
jl
addb
mov
loope
in
rcrl
sub
mov
in
and
xor
add
andl
inc
sub
imul
ret
push
mov
lahf
pop
cmp
loope
xchg
push
xlat
outsl
test
cmpsl
cwtl
sbb
add
movsb
cmp
inc
and
pop
jne
cmp
pop
mov
es
out
push
mov
mov
cs
cmp
enter
lret
enter
xor
gs
stos
cmp
mov
cmpsb
sub
sahf
cmp
inc
inc
out
sahf
mov
insb
or
pop
or
pop
pop
and
mov
ljmp
sub
ds
bound
jae
outsb
sbb
bts
cmp
cmp
xor
idivb
jno
ljmp
inc
pop
sarb
pop
xchg
push
mov
adc
jle
cmpl
pop
push
pop
aas
addr16
sub
dec
mov
pop
loopne
mov
jnp
dec
pop
inc
aam
cs
dec
jae
sbb
lea
and
lock
hlt
xchg
inc
or
pop
mov
inc
rclb
cmpsl
dec
mov
dec
and
sub
xchg
mov
lret
xchg
add
stos
xchg
xor
jmp
and
mov
cs
mov
not
cwtl
fs
or
fisttps
popf
imul
nop
cmpsl
mov
xor
ret
andl
loopne
out
roll
xchg
iret
out
sbb
jo
fstps
inc
adc
cmp
clc
test
fiadds
fwait
out
cmp
insb
push
loopne
mov
lods
lcall
xor
call
out
nop
dec
pop
pop
or
pop
push
ljmp
inc
mov
mulb
and
dec
stos
add
jmp
push
inc
cmp
cmpsl
and
pop
fxtract
xor
icebp
mov
lods
push
loopne
xor
pop
mov
hlt
sbbb
dec
sub
test
adc
in
xor
mov
lcall
xchg
push
std
mov
lret
fdivr
push
je
dec
loopne
push
push
and
stos
aad
gs
leave
and
sbb
aad
test
stos
inc
mov
aaa
pop
push
fcmovu
outsl
dec
mov
cld
aam
fnstenv
rol
bound
cmp
xor
mov
sbb
cli
pop
sbb
cmc
jge
jnp
or
sub
jbe
cmp
cmp
ljmp
add
test
call
mov
into
nop
inc
fistl
inc
or
jb
push
jp
cmp
call
mov
cmc
mov
loop
sbb
shl
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
dec
pop
dec
xchg
jp
mov
jnp
xchg
dec
sbb
sub
mov
outsl
in
mov
test
mov
xlat
mov
pop
pusha
mov
fimull
jne
add
jle
dec
pop
mov
or
movsw
add
andl
and
sub
fdivl
fdivs
xor
push
ljmp
adc
push
xor
imul
outsb
jbe
daa
loopne
inc
xor
sub
pop
lea
lahf
cmpsl
inc
jle
mov
and
shll
lea
jno
insb
pop
or
in
aaa
out
into
fadd
fs
push
add
push
bound
mov
lea
sbb
lea
leave
lahf
lods
out
roll
mov
push
sbb
mov
js
xor
mov
add
mov
xor
shll
xor
ret
mov
in
cs
push
sbb
jnp
mov
cmc
or
push
popf
out
fisttpl
fisubrl
in
lret
pop
jl
jbe
popf
icebp
aas
in
cmp
push
ret
stos
dec
adc
mov
sub
xor
add
aas
add
sbb
mov
inc
out
mov
jmp
mov
cmp
jecxz
or
mov
imul
mov
adc
xchg
loop
in
andnps
mov
push
dec
jno
jae
cmpsl
sub
fadds
js
xchg
mov
iret
or
xor
jbe
mov
inc
xchg
test
inc
scas
push
push
ficoml
push
pop
adc
imul
push
hlt
test
aad
lret
fidivrs
jmp
lahf
xor
imul
mov
jne
xor
sbb
cmp
int3
mov
xor
xchg
outsl
jae
scas
lahf
push
and
ret
xchg
mov
cmp
outsb
ss
rcll
and
inc
das
pushf
add
and
mov
lds
mov
shll
xchg
sti
jns
lahf
ret
cmp
mov
orb
sbb
mov
rcll
inc
imul
push
jns
out
adc
inc
dec
jp
fadds
push
stos
cmpsl
fadds
pop
faddp
add
cwtl
sbb
inc
int
int
inc
test
xor
std
adc
or
jns
gs
or
sbb
or
xchg
fnstenv
push
mov
arpl
in
mov
call
pop
lahf
push
movl
sub
sbb
popa
imul
fisubl
ss
jne
pop
jbe
aam
xor
insb
add
aam
pop
aad
daa
mov
cmp
dec
bound
int3
test
xchg
mov
in
sbb
dec
jnp
pop
mov
out
inc
data16
loope
hlt
imul
fstps
rorl
xchg
sti
scas
dec
lods
scas
dec
cld
inc
stos
clc
xor
mov
sbb
fld
lds
lea
popa
push
xchg
scas
bound
sub
sub
jge
lahf
repz
aam
mov
adc
push
push
movsl
add
iret
mov
xchg
js
sbb
incl
es
dec
loope
or
lods
add
fiaddl
bnd
xor
roll
sahf
dec
jno
push
sub
stos
add
mov
das
sub
subb
add
sub
xorl
and
mov
lods
int
or
and
nop
test
pop
aad
push
fildl
push
ret
and
and
outsb
mov
or
in
mov
cli
and
add
dec
je
and
addr16
in
jo
inc
sbb
rclb
and
inc
test
xchg
sbb
adc
mov
mov
sarl
and
dec
stc
icebp
hlt
push
push
imul
and
inc
hlt
arpl
stc
xor
sub
and
test
andl
lret
aaa
jne
cmc
jg
lds
fwait
mov
out
sbb
faddl
cltd
sub
aas
xchg
ljmp
cmpsl
mov
in
iret
jbe
fimuls
mov
test
sbb
cmp
cmp
movsl
les
inc
jge
mov
mov
fs
xchg
repz
lret
fsubrs
cltd
pop
call
inc
out
jnp
sub
mov
push
mov
clc
jp
fs
cld
insb
mov
add
shlb
jnp
and
sbb
xchg
std
fs
jp
fdivrp
mov
popa
xor
stc
xchg
lahf
sbb
movl
inc
xchg
inc
rcl
mov
jne
push
cmpsb
leave
or
adc
push
push
pop
push
subl
sbbb
xor
xchg
adc
addr16
mov
pop
dec
adc
fstl
scas
mov
ljmp
rcl
fisubrl
fwait
pop
xchg
cltd
in
add
xor
std
cli
incb
inc
into
loop
or
sti
icebp
mov
pop
mov
popf
mov
mov
stos
xchg
int
js
xor
mov
adc
or
and
stos
pop
into
sub
pushf
xchg
mov
xor
dec
xchg
mov
sub
imul
pushf
in
movsb
jl
in
and
jle
adc
or
mov
popf
js
cmpsb
vpunpcklqdq
inc
scas
pop
neg
jg
das
int
aam
jl
jle
sarl
and
xlat
push
push
addr16
scas
lahf
outsb
int3
rclb
popa
or
popf
in
pop
xchg
xchg
sub
cltd
jae
dec
dec
inc
loop
rcrl
xchg
repnz
popa
dec
psadbw
lcall
sbb
jo
jo
push
jo
mov
js
jecxz
adc
or
lds
stc
hlt
add
xor
mov
xchg
insl
or
cltd
ds
mov
adc
inc
jmp
add
lods
je
inc
pusha
into
cmp
mov
aas
adcb
shl
packsswb
pop
dec
xor
mov
ficoms
xor
dec
xchg
outsb
ljmp
cltd
imul
push
imul
pop
adc
aas
sub
test
pop
and
or
mov
ljmp
loope
adc
pop
scas
rorl
iret
xchg
enter
rolb
jo
xor
pop
sub
jo
dec
push
mov
add
je
lock
ds
call
outsl
inc
dec
xlat
fbstp
xchg
jbe
mov
nop
rol
ficoms
pop
out
out
insl
mov
dec
jns
pop
lret
mov
data16
jne
or
out
mov
in
cli
adc
mov
mov
pushf
fstpt
repnz
ljmp
mov
repz
in
xchg
mov
pop
jge
mov
call
fimull
insb
or
jne
add
xor
and
ret
inc
dec
or
dec
dec
pop
cmp
dec
lret
out
sahf
sahf
xchg
iret
roll
push
aad
inc
or
ret
cltd
xchg
addb
and
imul
or
or
ret
adc
test
xor
stos
xor
popa
mov
fsubs
lds
lea
cmpsl
push
stos
rorl
mov
aam
sub
popa
adc
sub
jg
arpl
daa
test
mov
jne
pop
out
out
or
mov
outsb
or
adc
pop
mul
push
ret
movsl
and
xor
popf
and
iret
out
lret
and
mov
cmp
ds
cmp
cmp
into
les
imul
sbb
mov
fisttps
ss
pop
sahf
adc
xchg
mov
add
pop
leave
and
lcall
ret
dec
sub
inc
bnd
inc
test
dec
js
out
ja
insb
popa
xchg
pop
push
lahf
push
fidivrl
and
cmpl
shufps
sbb
std
or
arpl
jg
mov
add
xchg
sbb
fldl
cmp
fs
inc
jae
push
in
push
orl
cltd
sahf
daa
push
mov
ds
stos
push
push
cmp
push
mov
inc
adc
hlt
mov
mov
aad
sub
mov
sub
push
pop
mov
dec
push
cld
xchg
into
sub
xchg
lods
test
es
lret
push
or
push
xchg
adc
xchg
push
nop
lret
mov
dec
hlt
es
xchg
mov
mov
or
lods
dec
dec
inc
leave
mov
popa
ret
add
add
xchg
loopne
mov
mov
fmulp
jb
out
repz
ljmp
jg
cli
popf
xor
ss
xchg
or
push
inc
loope
jmp
insb
cltd
ficomps
add
insb
and
fwait
bound
pop
add
int
outsl
bound
scas
or
jl
psllw
jp
imul
mov
add
and
lahf
rcl
mov
jns
cmp
xchg
sbb
les
call
and
adc
or
cwtl
adc
inc
rorb
rcl
rcll
clc
shlb
mov
jg
or
adc
or
inc
sub
out
test
jge
aam
call
inc
dec
dec
xchg
push
stos
mov
fwait
and
or
hlt
lods
push
cmp
xchg
inc
jmp
mov
or
and
gs
fs
push
push
ds
aaa
out
jecxz
das
xchg
adc
sub
or
xor
cmp
lahf
xchg
jl
jge
sbb
out
mov
ror
sar
push
arpl
adc
push
test
mov
popf
xchg
pop
xlat
mov
or
scas
nop
pop
jb
jp
mov
dec
xchg
lea
or
cld
cmc
jne
jns
call
jno
push
fmull
pop
repz
in
lock
sbb
push
dec
iret
out
pop
push
sbb
js
pusha
push
or
roll
lock
movsb
jmp
loop
gs
cmp
scas
addr16
jg
outsl
sub
cwtl
lret
je
mov
dec
and
fistps
pusha
rcll
push
popa
ds
cld
icebp
in
pusha
ss
mov
mov
xchg
int
shlb
xchg
fst
inc
adc
pop
dec
ja
aas
test
int3
stos
dec
icebp
push
xorb
cmp
xlat
ss
inc
or
ficompl
pop
test
and
cmp
mov
xlat
xchg
popf
xor
lcall
frstor
mov
movups
xor
loop
cli
mov
push
xchg
movsl
pop
rolb
out
out
leave
add
cmc
and
adc
cs
xor
jecxz
mov
and
popa
inc
inc
fs
iret
test
adcb
imul
push
test
hlt
or
add
cmc
push
fiaddl
icebp
inc
mov
data16
daa
xor
sbb
fcom
dec
mov
int3
inc
fsubrp
xchg
arpl
pop
jns
jmp
shl
jbe
mov
test
fimull
test
out
inc
cld
dec
addb
xor
mov
lret
and
ljmp
pop
dec
cmp
inc
push
push
stos
or
mov
imul
std
clc
adc
adcl
out
rorl
into
sbb
pop
mov
adcl
test
jmp
mov
push
pop
outsb
lds
ret
aam
mov
mov
mov
dec
popa
int3
jne
jo
fucomi
enter
stc
adc
jb
inc
xor
lret
adc
xchg
push
icebp
adc
test
andl
jp
rorb
test
xchg
loopne
mov
and
lret
cmp
mov
xchg
ret
ja
popa
cld
out
lahf
adc
push
add
mov
out
das
cmp
in
mov
addr16
stos
sti
repz
fisubl
in
pop
mov
aaa
pop
mov
popa
fsubrp
fwait
add
testb
mov
mov
cmp
inc
cmp
xor
mov
hlt
loop
jle
movl
adc
adc
addr16
mov
pop
mov
mov
adc
mov
xor
pop
ds
mov
push
jno
push
mov
or
sub
adc
or
or
lcall
pop
add
adc
xchg
adc
inc
and
xchg
push
xor
rorl
cmpsb
pop
stos
popf
xchg
add
xchg
test
shrb
stos
movsb
stos
adc
shll
xchg
fcomp
adc
test
and
or
sub
mov
cmpsb
mov
sub
ret
outsb
int3
cmp
mov
add
ficomps
fmul
sub
sbb
push
dec
jne
hlt
pop
mov
cmc
sub
lods
pop
inc
ljmp
push
jbe
fists
push
cmpsl
iret
mov
push
into
pushf
int
mov
push
dec
and
adc
adc
je
jns
sbb
sbb
sbbb
and
fcom
inc
xor
outsb
mov
call
mov
cmpxchg
pop
jbe
je
in
xchg
jmp
sub
cmp
jno
jmp
jl
pop
scas
sbb
rcrl
cmp
out
push
pop
cmp
pop
mov
ja
adc
mov
push
mov
mov
mov
in
dec
out
adc
enter
aad
ljmp
push
add
mov
inc
stos
pop
in
test
jp
jmp
test
cltd
aas
imul
dec
and
pop
cmpsb
jmp
ss
xor
mov
out
test
cmp
mov
es
inc
fwait
mov
fstp
icebp
mov
inc
cmpsb
pop
jnp
sar
mov
pop
mov
cmp
xchg
push
lret
or
int3
mov
sbb
sub
cmp
jae
jns
lret
pop
stos
in
icebp
data16
push
jmp
inc
push
push
cmp
sub
pop
sahf
in
int
lret
test
or
xchg
hlt
push
sub
jle
push
sub
xchg
cld
stos
sar
mov
cmp
pop
jl
rorb
add
rcll
popf
testl
notl
mov
mov
push
jmp
pop
push
jle
loop
test
stos
fisttpl
or
cmpsb
sbb
in
mov
aad
cmp
xor
scas
sub
ja
push
imul
idiv
scas
sbb
cmp
dec
xchg
fnstsw
ja
cmp
shlb
popa
dec
adc
cmp
in
hlt
repz
leave
mov
sub
dec
jb
xchg
or
daa
cmp
mov
pop
jns
lcall
push
xor
push
adc
sub
cmpsl
push
jmp
mov
mov
mov
movsl
inc
jbe
fimull
mov
pop
loopne
dec
call
sub
inc
pusha
fstpl
inc
lea
mov
push
shr
into
jnp
adc
in
xor
jno
addr16
cs
ljmp
call
je
push
mov
mov
ja
aam
jae
pusha
mov
ss
mov
popf
out
push
push
jbe
mov
push
sbb
jbe
add
fsts
ds
mov
loopne
addl
fwait
jb
sarb
les
mov
sbb
and
push
in
rcll
xor
mov
add
sbb
out
aam
cmp
sub
xor
mov
ja
pusha
ljmp
addr16
adc
mov
dec
push
xor
repz
cmpsb
xchg
addr16
xchg
fldl
push
push
push
jmp
int
pop
fdivr
and
es
pop
dec
movsl
in
inc
xchg
mov
push
or
cwtl
or
dec
mov
jno
sbb
stc
adc
ds
fcoms
cmp
leave
add
ja
pop
sti
push
xor
mov
rcl
adc
les
mov
ss
out
mov
push
dec
lcall
xor
popf
inc
and
out
fwait
cmp
jl
mov
out
jns
push
mov
iret
cmc
fs
cltd
cmpsb
mov
call
jne
stc
sbb
insl
iret
mov
mov
push
into
dec
int
fwait
call
idiv
je
and
or
fs
and
mov
pop
dec
fsubr
push
call
enter
int
sahf
fstl
cld
add
ljmp
xchg
outsb
lds
cltd
pop
ja
pop
push
adc
addr16
sub
test
divb
lock
xor
movsb
push
pushf
out
rclb
movsb
jecxz
lret
jg
cmpsl
push
or
add
mov
sub
jmp
lods
subb
test
call
testb
cmp
lret
popa
divl
stos
pop
pop
aad
lock
ss
movsb
in
lahf
sbb
stos
mov
lods
pop
jmp
mov
and
pop
and
das
nop
lahf
jns
pusha
pop
cmpsl
stos
cmp
sbb
sub
cmp
add
push
push
scas
sbb
adc
push
in
shl
dec
jp
mov
ljmp
sbbb
int
inc
xchg
mov
imull
mov
pushf
pop
jae
in
in
jno
fiaddl
inc
push
adc
mov
jg
or
daa
jp
and
xor
leave
pop
inc
xchg
or
push
in
mov
rcl
lock
pop
test
aaa
andl
lods
inc
push
loopne
movsb
pop
xor
and
jp
mov
mov
fstps
sub
in
ret
cmpb
outsb
xor
ret
insb
or
adc
pop
xchg
arpl
jae
mov
mov
popf
test
incl
or
dec
aas
add
and
lods
sbb
imul
clc
shll
inc
inc
lret
add
jle
lds
sbb
xchg
loopne
jmp
cmp
cmp
leave
fdivp
rorb
and
cmp
cmpl
icebp
pop
js
dec
ja
adc
push
test
xchg
fdiv
or
arpl
and
mov
movsb
xorb
negb
dec
loop
ret
jg
adc
pop
jbe
mov
mov
mov
cmp
lcall
jmp
lods
sub
int3
pop
jb
mov
sub
hlt
cmp
cmpsb
xchg
fdivrs
or
aad
or
cltd
addr16
dec
cld
movsb
cmp
in
jne
popf
decb
push
mov
and
outsl
aam
push
lods
aaa
repnz
stos
mov
and
mov
fdivl
xchg
cmp
movsb
addr16
lcall
movsb
loop
adc
sar
sub
pushf
sub
cmpsb
mov
std
lret
or
add
push
push
outsb
dec
lret
or
aaa
jb
loope
xchg
sub
jl
jne
adc
xlat
mov
lea
sbb
mov
js
aas
out
and
inc
shl
mov
mov
hlt
ds
pop
xchg
xchg
insb
pop
cltd
inc
fwait
sbb
inc
inc
push
mov
and
mov
fiaddl
lret
lret
adc
add
inc
jl
fucomi
bound
loopne
fwait
sub
pop
dec
xor
ret
pop
inc
jnp
aam
lock
test
push
adc
lret
aas
mov
sub
mov
inc
and
lods
call
icebp
adc
icebp
mov
out
popa
push
adc
pop
imul
insl
int
out
rcrb
xorl
out
ret
mov
repz
mov
adc
dec
loope
lods
jmp
cmp
pop
sbb
cmpsl
jnp
imull
sub
addr16
pop
leave
cmp
bound
and
aas
mov
rol
gs
out
mov
mov
rcll
call
aam
or
mov
jae
stc
cmp
adc
fs
pop
inc
call
js
aas
mov
pop
aaa
rcl
xchg
pop
jae
bound
push
jo
dec
and
data16
pop
push
out
mov
mov
inc
jne
pop
stc
imul
movsl
jg
imul
mov
mov
pushf
pop
in
loope
aad
ds
sub
les
jg
shlb
rcll
lcall
std
cmp
outsl
sbb
lret
fidivl
pusha
ja
jmp
adc
pop
jno
and
mov
ja
mov
outsl
test
enter
push
xor
cld
adcb
enter
ds
xchg
loop
add
test
mov
mov
jno
sub
inc
sti
or
jno
cmp
out
push
xor
in
rclb
stc
pop
inc
rol
nop
inc
mov
insb
icebp
rcr
mov
and
xor
fimuls
mov
rorb
jno
or
loopne
int3
dec
cmp
js
xchg
sub
loope
xor
push
stos
jp
mov
sahf
rorb
imul
lods
xchg
add
ret
dec
iret
pop
xchg
xor
rorl
mov
or
fwait
or
jb
dec
inc
mov
scas
gs
stos
xchg
add
mov
loopne
fimuls
jns
push
lcall
inc
add
sub
ret
repnz
fs
sub
cmpsl
stc
sub
sub
sbb
push
cmc
arpl
mov
xor
adc
sbb
imul
pop
xchg
mov
into
cli
cmp
sub
and
mov
dec
mov
jnp
mov
repnz
inc
data16
dec
adc
popa
pop
jno
pop
data16
xor
leave
aam
sbb
push
or
mov
mov
and
out
adc
cmpsb
outsb
mov
add
mov
xor
shlb
inc
jne
loope
das
in
ljmp
lock
mov
aaa
or
xchg
in
pop
lds
loop
sub
mov
xchg
test
pop
decb
popf
scas
adc
cmp
divb
dec
sub
dec
mov
or
inc
fiadds
and
push
sti
out
mov
mov
out
mov
mov
data16
js
sti
cmp
pusha
ds
mov
inc
mov
mov
dec
sbb
xor
adc
dec
inc
das
loop
jle
pop
xor
divb
andb
stc
push
pop
mov
popf
daa
push
inc
mov
or
mov
push
jo
cmpsb
scas
lods
xor
or
push
cmpsl
or
psrad
fsubs
add
jg
sub
jp
adc
inc
xor
insb
adc
sbb
adc
cmc
in
mov
cmp
mov
xchg
iret
and
ljmp
push
fdivs
cmpsl
addr16
int
jnp
and
mov
icebp
dec
mov
imul
xor
and
add
pop
dec
dec
gs
dec
add
movsl
je
pop
pushf
adc
push
scas
fs
cmpsb
lds
mov
lods
fcomps
roll
dec
test
jg
inc
mov
jg
dec
jl
push
mov
jne
dec
xorb
pop
inc
loop
mov
cld
in
in
sbb
add
jbe
push
std
push
xchg
into
pop
sub
sahf
scas
jg
andl
addr16
int3
vmwrite
adc
cmpsb
int3
test
xor
mull
in
lret
push
xchg
pop
push
add
pop
dec
insl
inc
mov
jg
pushf
jae
test
push
int
cmp
sbb
and
sub
jnp
dec
cmp
pop
fs
incl
in
pusha
pop
mov
fstpl
sbb
jno
not
nop
push
loope
popa
popa
or
mov
ss
lcall
or
mov
scas
mov
pop
sub
push
mov
jmp
adc
xchg
xor
int
jp
imul
add
push
scas
test
fisubl
cltd
adc
arpl
sahf
sub
out
out
xchg
cld
xchg
xchg
xchg
js
cmp
rol
test
shlb
sti
or
stos
jl
cwtl
mov
mov
pusha
dec
negb
and
inc
stos
mov
aas
dec
out
out
jnp
adc
sub
sub
cli
pop
mov
inc
sub
jp
mov
loopne
pop
xchg
out
sbb
jbe
inc
int3
les
xor
jecxz
push
cwtl
mov
jle
ja
repnz
cmp
loopne
pop
stos
jl
dec
jne
mov
sti
in
fwait
out
sub
xchg
mov
das
add
xchg
popf
adc
in
push
jmp
jp
pop
pusha
or
testl
add
repnz
mov
push
mov
adc
rorl
lea
mov
xchg
aas
lret
adc
pop
ja
fcompl
adc
scas
lods
xor
addr16
pop
pop
jae
outsb
push
fidivl
es
adc
push
mov
dec
pop
jp
add
cmp
mov
mov
je
movb
into
addb
jnp
loope
mov
jmp
mov
daa
and
mov
movsl
ret
lahf
and
nop
out
dec
leave
arpl
out
adc
outsb
adc
cmpb
pop
add
loope
int3
jbe
pop
push
push
sahf
fwait
push
cmp
adc
faddl
mov
and
imul
cmpsb
repz
adc
cltd
mov
adc
adc
pop
lret
xchg
cmp
idivl
lcall
jae
dec
ret
mov
fisubrs
sbbl
adc
andb
mov
adc
pop
xor
ret
ss
aad
xor
sbb
lea
test
movsl
fcmove
adc
sub
xchg
add
call
add
cmc
push
xor
repz
fldcw
and
mov
mov
and
dec
or
adc
leave
test
fmull
stos
or
mov
fcmovnbe
push
icebp
shrb
mov
cmp
push
sbb
push
mov
rcll
hlt
sub
imul
mov
jae
pop
mov
pop
push
in
stos
mov
nop
cmp
xchg
aas
mov
arpl
dec
inc
sub
into
pop
xchg
xchg
out
push
cmpb
adc
in
loopne
out
pop
lds
ja
dec
addr16
cli
fs
insb
fcoml
test
pop
lret
insb
sbbb
xchg
mov
leave
fwait
punpckldq
cmp
addr16
or
cmpsl
cld
ret
addl
ret
movsl
sub
jno
mov
cmp
xor
mov
or
sub
mov
xchg
bound
and
nop
lcall
push
fsubl
pop
mov
push
ret
xchg
cmpsb
fninit
out
and
insl
aaa
cmc
cmp
and
inc
cmp
mov
ret
fwait
mov
push
push
out
dec
mov
sub
aam
lock
lods
sbb
es
divl
int
sub
dec
sbb
dec
enter
pop
sbb
pop
and
dec
pop
std
xchg
lods
fcomps
int3
dec
dec
cmc
mov
dec
inc
push
int3
scas
mov
mov
or
jle
sub
stos
push
push
sbb
call
lcall
in
mov
insb
jb
jmp
add
jns
ret
xchg
std
xchg
scas
repnz
fcmovnbe
loopne
gs
mov
lock
adc
push
addl
outsl
sub
stc
mov
add
dec
push
lods
into
outsb
stc
lods
push
mov
insb
jae
lret
lods
lahf
fistps
rclb
xor
push
mov
mov
or
adc
mov
outsl
cwtl
arpl
pop
inc
gs
inc
and
bound
lds
ficompl
mov
push
fcmovnu
data16
mov
mov
cld
js
scas
test
mov
add
inc
xchg
inc
test
addr16
addr16
leave
or
rolb
arpl
ds
push
inc
xor
or
jbe
fidivs
jne
ja
enter
push
cmpl
scas
inc
pop
add
inc
stos
sbb
dec
xor
and
fnsave
leave
jg
xlat
push
adc
cmc
fisttps
xchg
mov
inc
shlb
stos
jmp
pop
in
pop
loopne
push
sub
rcl
notb
test
sbb
cmpsb
xor
push
fwait
enter
loopne
and
divb
push
int3
pop
stos
in
sub
mov
mov
cmp
push
lods
push
pop
xchg
jns
mov
sti
nop
cwtl
jbe
imul
in
out
cmp
jmp
mov
sbb
push
call
lock
inc
scas
insb
add
setb
pop
add
add
dec
movsl
test
pushf
mov
scas
sub
ljmp
xchg
jnp
adc
jmp
push
and
outsl
xchg
mulb
jmp
push
jecxz
xorl
mov
jmp
cs
in
pop
pop
mov
pop
push
in
jle
and
lret
xlat
cmovl
pop
fildl
das
or
pop
cld
or
pop
push
mov
jl
jb
out
nop
xor
sub
sarb
loopne
leave
cmc
mov
add
pop
push
pop
sahf
sbb
popa
jbe
cmp
or
xor
loope
icebp
dec
and
and
lret
mov
sbb
mov
and
pop
or
addb
mov
enter
stos
or
sbb
xchg
pop
pop
lods
sbb
adcb
int3
mov
xorl
push
lds
xor
xor
jl
mov
bound
mov
fs
aad
push
push
mov
roll
xor
test
jne
xor
test
mov
or
and
cmc
int3
inc
add
into
pop
arpl
subb
fs
icebp
inc
gs
jns
and
fcmovne
inc
jl
and
push
sbb
inc
outsl
rcrl
xor
or
adc
fmuls
xor
pop
jp
mov
jmp
push
out
push
sub
je
dec
mov
lahf
xchg
or
inc
mov
out
and
sub
xor
mov
idiv
shll
push
into
mov
ss
mov
call
mov
mov
cmp
daa
inc
outsl
cmp
test
nop
dec
pop
xchg
fstpl
insb
add
pop
pop
test
inc
push
push
in
add
jge
mov
xchg
sub
test
repz
movsb
push
push
pop
cld
stc
enter
cmp
mov
cmpsb
and
leave
sub
pop
orb
test
leave
ljmp
push
mov
clc
mov
push
out
adc
push
js
stos
inc
mov
mov
int
xor
lret
negl
stos
pop
inc
and
adc
xchg
test
scas
and
sub
mov
imul
mov
mov
movsl
mov
insb
adc
pushf
adc
repnz
fsubl
popf
adc
in
nop
pop
repz
mov
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
mov
jnp
lahf
lret
cs
js
orl
sarb
sbb
jbe
lods
sub
mov
iret
sbb
bound
imul
rcl
xchg
lods
mov
jae
push
pop
outsb
fisttpll
pop
faddl
mov
or
push
fsubrs
out
mov
dec
or
or
or
mov
loope
fistpll
pop
mov
push
ds
leave
test
jecxz
test
movsl
pop
out
inc
dec
sub
cmc
mov
pop
imul
cs
push
and
pop
sbb
dec
lods
repz
enter
adc
xor
repnz
add
push
flds
daa
mov
cmpsl
paddsb
testl
data16
mov
lds
and
fldenv
push
pop
lcall
test
fs
ljmp
cmp
mov
xor
or
xor
adc
lea
and
or
xchg
cltd
shlb
mov
jl
or
xchg
pusha
cwtl
sub
inc
push
inc
sbb
loop
sbb
mov
icebp
push
testb
jecxz
or
sub
pop
out
incl
sbb
scas
subl
mov
mov
add
dec
push
adc
data16
test
xchg
stc
inc
aas
shlb
lea
xchg
jge
lret
int3
fcmovbe
movsl
inc
sub
adc
stos
repz
adcl
xor
push
iret
rorl
push
into
jmp
stos
lahf
inc
sbbl
ljmp
mov
push
mov
jno
adc
fwait
xor
mov
jp
dec
mov
jmp
and
xlat
xchg
add
sub
in
mov
ljmp
lret
pop
add
cmp
fwait
test
fs
nop
jg
sub
imul
test
pushf
lock
xor
insb
or
cmp
in
mov
jl
insl
ret
inc
lret
xchg
cmp
femms
loopne
cmp
and
and
jecxz
das
test
iret
stc
test
sahf
xchg
loope
cs
xor
fistpl
es
add
imul
mov
xor
push
clc
js
adc
pop
sbb
push
int
inc
xchg
xchg
mov
pushf
lcall
mov
xchg
lds
cltd
lea
jno
lcall
pusha
fisubs
pop
jno
xchg
adc
dec
xchg
add
adc
inc
inc
sbb
fnstenv
test
jns
jno
mov
push
out
imul
and
cwtl
sbb
jnp
jns
push
adc
push
push
xor
pop
arpl
addl
out
jecxz
push
repnz
rclb
adc
imul
or
mov
cmpsb
or
mov
xorl
cmovns
hlt
pop
test
xor
or
outsb
jg
inc
hlt
and
push
in
nop
lods
jle
or
pop
clc
mov
mov
push
jecxz
outsl
insb
and
lret
sub
hlt
mov
mov
aad
or
psubw
das
xchg
jg
add
scas
xchg
scas
and
iret
cltd
stc
mov
xor
scas
mov
test
push
jl
and
inc
ja
or
cmp
push
imul
insb
stc
xchg
xchg
xlat
inc
jle
imul
insl
mov
das
add
dec
movsl
inc
imul
test
push
or
mov
daa
lea
push
mov
cmp
and
push
aad
mov
jecxz
fildl
loop
mov
inc
les
mov
fiadds
daa
out
fsubs
xor
repz
xor
aad
jmp
outsl
mov
rol
sbb
jno
sbb
fsubrp
ja
mov
or
fwait
test
inc
test
mov
nop
add
push
ret
movb
sub
push
fsubl
or
push
cmp
inc
and
fisubl
pop
xor
movsb
jo
cwtl
pushf
push
jbe
test
sbb
mov
lret
lea
iret
sarl
pushf
stos
sbb
push
jge
push
fdivp
es
push
out
ljmp
push
inc
push
add
dec
pop
or
and
dec
add
je
lods
lahf
add
dec
mov
fiaddl
mov
cltd
jmp
add
jge
mov
dec
cmpsl
repnz
jb
dec
popf
xor
cmpb
imul
fstpt
loope
ja
push
cld
cli
mov
inc
ljmp
push
mov
xchg
cs
cmpsb
fbld
mov
js
cmp
inc
aad
add
push
outsl
mov
pop
sub
dec
stos
sbb
and
pop
movsl
push
int
pop
mov
push
sbb
int3
push
arpl
andb
xor
insb
mov
cld
dec
shlb
loope
mov
mov
nop
adc
cmp
movsb
and
outsl
sub
sub
adc
adc
enter
vmwrite
bound
push
fistpll
int3
leave
out
jge
jle
loop
push
clc
mov
cmpsb
stc
pop
cmp
sub
lahf
pop
adc
jle
lcall
inc
and
jmp
mov
rclb
or
adc
sarb
sub
and
jo
xor
xchg
pop
mov
push
sarb
push
push
sbb
jmp
xchg
jl
aad
fs
inc
int3
loop
loopne
xor
pop
or
push
mov
cmpl
jne
adc
stos
jmp
push
repnz
push
push
loopne
loop
loope
enter
cld
mov
dec
sbb
icebp
sarl
faddl
push
out
xchg
xchg
push
pushf
dec
imull
xchg
cmp
mov
lea
and
pop
sub
shlb
ffree
jb
mov
pop
sbbl
mov
xlat
lods
mov
pop
dec
xor
cltd
add
adc
xchg
shll
jne
fsubs
sbb
jo
addr16
test
xchg
pop
lock
add
push
scas
leave
ss
push
out
lods
or
incb
mov
pop
sub
add
movsl
jle
mov
xor
adc
and
sbbl
xchg
inc
jne
in
pop
sbb
int
mov
lret
adc
in
fwait
xchg
inc
mov
loope
pushf
inc
outsl
subb
mov
mov
in
in
or
mov
mov
je
and
fsubs
jecxz
sbb
sbb
inc
cmp
test
pushf
sbb
aam
fimull
dec
inc
arpl
sub
push
xchg
push
icebp
add
icebp
and
mov
insl
add
int3
sahf
cmpsb
jb
pop
sar
icebp
outsl
sub
and
xor
pusha
gs
repz
lret
clc
mov
mov
sbb
loop
mov
ss
in
jge
clc
xacquire
push
loop
test
stos
das
roll
add
aad
xor
sub
and
mov
outsb
and
imul
xchg
call
in
jmp
cmpsl
inc
fdivl
mov
cmp
cltd
mov
mov
xchg
pop
rorl
das
icebp
or
sub
sbb
je
aam
adc
pop
and
and
xor
repz
divl
mov
arpl
xchg
push
inc
adc
mov
cmp
rcll
repnz
dec
jne
hlt
xor
add
inc
int3
mov
adc
out
inc
outsb
cmpsb
je
testl
ret
cmpsl
inc
int3
cltd
sub
pusha
subb
test
nop
bound
push
test
cmp
jns
mov
enter
addr16
ja
out
lret
sbb
test
mov
mov
mov
push
mov
pop
sub
sbb
cltd
clc
and
xchg
mov
push
into
inc
popa
sub
lcall
or
aaa
push
xchg
test
push
sbb
aad
xchg
or
pop
cmpsl
xor
pop
out
test
fmull
lret
xor
jg
mov
test
inc
dec
mov
jle
sbb
aam
dec
lock
jl
pop
fcmovu
lods
mov
sub
imul
cmp
popf
inc
cmp
cmp
xchg
negl
push
fcoms
lahf
inc
xor
mov
shr
sbb
adc
pushf
lret
iret
push
movsb
dec
pop
inc
ja
inc
int
mov
adc
jmp
or
mul
adc
cmp
in
mov
repz
sub
movsl
mov
or
repnz
and
add
cs
sbb
test
and
lods
mov
add
jae
mov
mov
in
popl
in
mov
movsb
scas
xchg
mov
jo
jo
mov
dec
shrl
pop
mov
aad
jnp
mov
inc
jg
xor
push
in
cmpsb
movsb
jo
test
xchg
adc
sub
out
xchg
movzbl
xchg
or
and
mov
imul
pop
xchg
dec
add
outsb
add
push
ja
aad
xor
add
imul
mov
mov
outsb
stos
aad
add
jmp
fisttps
mov
mov
jmp
xor
shll
adc
ljmp
sub
sbb
popa
scas
push
sub
lret
push
out
cmp
sahf
xchg
cmp
daa
add
and
repz
inc
jae
aaa
xchg
into
inc
cwtl
ret
mov
ret
ss
out
sbb
movsb
ljmp
or
push
dec
cmpsl
rolb
jge
je
fnstsw
test
add
sub
mov
cli
push
loope
push
int
xchg
cld
jmp
xchg
xchg
push
mov
lahf
fimull
mov
and
stos
push
cmpsb
insb
inc
inc
dec
push
rcrl
clc
scas
mov
sbb
push
hlt
jecxz
inc
jg
sbb
pusha
mov
hlt
out
aaa
lea
cmp
or
scas
pushf
dec
mov
mov
adc
jns
jb
repz
push
push
xchg
loopne
mov
inc
in
dec
ss
lods
ja
aam
test
sbb
ficomps
cmp
les
mov
sub
sbb
dec
mov
scas
dec
dec
fisttps
sub
mov
out
lods
std
mov
loopne
cs
imul
inc
outsb
push
jae
daa
pusha
push
sar
imul
test
pop
das
push
pop
adcb
inc
loop
push
xchg
mov
cmp
mov
js
out
add
int3
sbb
mov
mov
loop
stc
cmp
mov
dec
pop
call
sbb
sub
stos
popa
jo
icebp
sahf
mov
add
leave
hlt
jl
cltd
jns
push
jmp
sbb
into
inc
lea
test
push
arpl
cwtl
sbb
sub
dec
out
mov
cltd
in
dec
gs
push
mov
and
jno
cs
xor
xor
jge
imul
jae
adc
aaa
and
inc
fmuls
push
dec
shl
mov
pop
sub
mov
icebp
mov
mov
rcl
into
lahf
cltd
pop
pop
mov
out
sbb
jmp
mov
lock
or
fwait
imul
adc
outsl
jbe
sbb
aam
pop
push
lret
jb
pushf
mov
cmpsb
mov
mov
xchg
mov
xor
in
lea
xor
out
repz
sub
mov
push
jmp
loopne
dec
jae
sarb
or
dec
dec
clc
mov
and
push
jb
xchg
pop
mov
lock
sbb
sbbl
rol
jb
mov
push
pop
xchg
inc
std
or
pop
xor
mov
dec
mov
pop
sub
push
aam
pop
das
pop
push
icebp
push
iret
aam
xor
and
fildl
mov
adc
lods
pop
int
jb
and
inc
adc
mov
xor
xor
mov
aaa
lcall
pusha
fs
fistl
cld
cmp
addr16
rorb
lea
jae
cmp
lcall
hlt
into
mov
sti
lea
mov
imul
sbb
iret
dec
jmp
mov
lret
cmp
enter
test
push
stc
dec
decb
mov
enter
add
xchg
or
imul
mov
dec
lods
inc
aad
into
dec
out
push
ss
mov
aam
adc
cwtl
and
or
jnp
pminub
mov
aad
or
xlat
arpl
dec
dec
ljmp
sbb
jg
cmp
or
adc
sub
push
lods
ret
pop
push
rcrl
call
cltd
dec
test
adc
call
lcall
cli
lcall
inc
aas
fdivrl
push
in
sbb
outsl
shll
pop
shlb
jmp
test
add
repz
and
repz
pop
clc
xlat
test
pop
sbb
in
sbb
pop
push
and
in
roll
pop
or
popf
inc
pop
aad
pop
lret
cmp
stc
in
aad
lock
mov
pop
sti
adc
clc
fisttpl
inc
and
filds
sarl
std
aas
cmpb
fs
xor
enter
imul
loopne
dec
push
leave
movsl
xchg
jge,pt
mov
outsl
adc
jmp
test
push
test
or
test
std
mov
sti
fstps
mov
cld
out
test
xor
clc
aad
lcall
push
push
aas
daa
add
push
jg
jp
pop
jmp
sub
out
testb
inc
push
movl
stos
cmpsb
xchg
movsb
or
xchg
sub
xor
cld
clc
ret
adcb
andb
fmuls
int
scas
pushf
insb
lods
pop
lcall
xchg
rcll
jne
cmpsl
daa
pop
movsl
fwait
testl
push
mov
xor
push
sbb
cmp
mov
mov
fldcw
mov
cmpsb
jb
xchg
stos
idiv
rclb
mov
xchg
adc
cltd
mov
cmc
sub
cmpsb
movsb
aas
cmp
inc
scas
xlat
decl
aad
cwtl
dec
mov
iret
push
out
scas
in
fnstsw
andl
xchg
adc
mov
repz
sub
and
inc
clc
add
and
push
xchg
pop
mov
stc
push
xor
xchg
stos
out
das
lods
ljmp
add
idiv
mov
cmc
dec
pop
and
xor
sti
mov
or
xlat
subl
xchg
sub
cwtl
dec
mov
cmpsl
sarl
mov
mov
stc
mov
popf
mov
and
imul
mov
push
mov
mov
negb
add
or
add
add
mov
add
loopne
jg
xchg
int
cmp
jp
jo
cs
sti
ds
leave
sub
push
push
fcmovb
mov
pop
push
les
mov
subb
sar
pop
xor
xor
fists
stos
popa
sbb
or
push
inc
cmpsb
stc
and
dec
xlat
cld
dec
mov
push
mov
test
enter
or
aam
and
lret
in
sbb
cltd
cmpsb
out
jmp
jecxz
sub
sub
pop
add
int
movsl
cltd
insb
loop
mov
ret
mov
xor
sahf
adc
pop
sbb
dec
jns
mov
or
test
rorb
sahf
outsb
movsb
imul
into
cmpsl
out
cmp
lods
cwtl
jge
bound
icebp
into
xchg
negl
popa
cs
and
mov
inc
push
ss
out
inc
mov
jecxz
pop
pop
shrd
pushf
in
mov
imul
dec
roll
inc
es
insb
stc
es
sub
movsl
icebp
rcrb
cs
iret
jle
daa
or
std
jg
cmp
les
jle
aad
imul
scas
sub
adc
sub
inc
cmc
mov
idiv
mov
push
movsl
in
ret
insb
mov
push
leave
inc
adcl
scas
pop
test
aas
aam
mov
movb
insb
push
shll
les
int
fs
sarl
pop
rcr
push
subb
sti
rcl
push
lahf
fists
outsl
jb
inc
lahf
mov
or
or
lods
int
mov
out
xchg
cld
add
jmp
dec
mov
cmpsb
mov
sbb
sub
in
dec
cmpsb
cmpsb
pcmpgtb
repz
mov
add
ffree
xchg
movsb
mov
jecxz
into
stc
dec
leave
sar
sub
xor
and
mov
add
fsubs
lea
push
subb
add
sbb
loope
insl
xchg
jns
add
pop
mov
enter
std
loope
add
pop
lock
mov
fiaddl
dec
int3
in
jg
mov
jp
cli
xchg
pop
shrl
repz
mov
loope
jp
mov
xor
xchg
and
inc
sbb
pusha
mov
ret
test
push
and
insl
pusha
sbb
jne
inc
hlt
add
dec
std
jo
mov
mov
jmp
push
cmc
mov
scas
mov
mov
mulb
loop
fbld
gs
aad
loopne
adc
mov
xor
movsl
xchg
pop
cmp
pusha
andl
add
out
sbb
inc
cmpsb
rcr
or
xchg
nop
sbb
mov
ds
adc
dec
das
xor
or
outsl
stos
mov
and
je
pop
out
loopne
cmp
lret
lret
daa
je
popf
mov
jge
out
call
shl
pop
out
repnz
scas
push
ficomps
aad
outsl
inc
stos
lods
mov
xchg
insb
jecxz
enter
aad
std
in
push
mov
pop
ss
aas
add
loopne
cmp
inc
mov
fcomip
dec
jmp
xor
cmp
cmpsb
js
rcr
orb
scas
jnp
push
repz
pop
lock
sbb
dec
pop
jl
imul
mov
es
mov
cmp
mov
mov
stc
or
sub
sti
mov
js
insl
in
xchg
scas
insb
insb
pop
mov
shl
sbb
das
out
inc
jne
pop
arpl
popa
cld
cmpb
mov
pushf
mov
mov
loop
jae
fiadds
ja
lcall
jle
sbb
xor
subl
fimuls
stos
daa
icebp
repnz
mov
cli
mov
sub
scas
int
pop
pop
mov
stos
mov
stos
mov
jnp
mov
xlat
ds
mov
or
popf
cmp
push
stc
fs
sub
repnz
xchg
push
addr16
cs
fistpll
imul
clc
dec
xchg
mov
add
add
sub
xchg
mov
addr16
das
sahf
pop
dec
pop
mov
stc
inc
inc
jge
xor
inc
push
icebp
dec
push
xchg
mov
xor
inc
jmp
pop
lods
sbb
mov
out
clc
add
push
nop
pop
mov
shlb
add
sbb
xchg
fdiv
push
lahf
push
lret
sbb
pop
sbb
jl
pop
cmc
dec
jbe
into
mov
rorl
mov
push
adc
lahf
stos
xchg
mov
pop
cmp
adc
incb
or
mov
dec
ja
es
negl
ret
xchg
add
loope
xchg
sub
hlt
movsl
les
fisubrl
mov
in
aad
dec
sub
add
sbb
mov
pop
lods
lods
pushf
dec
jg
jl
xchg
dec
adc
loopne
or
cmpsl
push
lods
jne
imul
pop
lahf
inc
popa
or
int3
test
out
jb
lahf
loope
in
fcmove
sbb
sbb
cmpsb
cmp
mov
fwait
pushf
in
push
fcoms
rcl
and
cmp
sarl
mov
sbb
cmp
mov
jbe
push
int3
in
jmp
dec
inc
sbb
mov
cld
ja
fistl
les
outsb
pop
xchg
imul
mov
adc
dec
aaa
nop
jae
xlat
pusha
sub
inc
xchg
jl
mov
popa
sbb
adc
jae
lods
clc
loope
outsb
xor
sbb
xchg
push
or
shrl
mov
adc
stc
add
and
cmp
pop
adc
or
mov
test
lret
jg
inc
pusha
in
cmp
mov
out
sbb
nop
daa
mov
push
mov
lahf
divl
sub
fiadds
mov
add
in
push
sahf
sti
das
sub
xor
cld
out
fidivrs
jbe
repz
xor
dec
pop
inc
sbb
adc
and
xchg
in
test
popf
mov
bound
lahf
push
add
mov
inc
jmp
or
cmpsb
js
mov
pop
outsb
inc
stos
sub
or
jns
or
lds
add
js
inc
scas
xchg
aaa
or
test
cltd
imul
movsl
jae
dec
repnz
imul
lods
lahf
xchg
clc
mov
mov
out
mov
and
or
cli
fwait
inc
lds
lcall
xchg
in
xchg
or
add
nop
xor
sbb
loopne
add
mov
popl
insb
xor
das
ja
and
mov
fdivrl
mov
adc
mov
sbb
dec
imul
mov
fcomp
jle
and
test
dec
sti
push
fs
shll
lea
movsl
xor
jmp
std
cli
ret
adc
mov
push
pop
lods
imul
lret
mov
inc
aaa
inc
xor
pop
inc
loop
aaa
arpl
lret
fimuls
jo
add
addr16
mov
mov
fadds
push
repz
sub
std
out
jle
into
mov
sar
mov
push
in
push
or
cld
ljmp
cmp
xchg
cmc
scas
jl
cmp
cwtl
mov
mov
sahf
loopne
jg
add
cwtl
dec
and
sbb
pop
or
sub
in
mov
cltd
call
cltd
aas
mov
ret
jae
sarl
inc
mov
xor
push
and
insl
xchg
test
add
das
sahf
xchg
push
icebp
arpl
loope
push
in
aas
and
cmc
cmp
mov
lds
inc
push
xor
cmpsb
imul
and
and
inc
xchg
xor
pop
xor
cmp
cmp
dec
roll
insb
fmulp
out
mov
jno
mov
stos
jl
adc
cs
fbld
push
das
or
ss
lcall
cwtl
ret
mov
ret
ljmp
xchg
rcll
xchg
push
sub
ja
movsb
cmc
sti
pop
push
jge
test
js
stc
cmc
jmp
scas
stos
aaa
leave
aaa
test
or
ljmp
push
cmp
outsb
aaa
sub
dec
add
xor
mov
loope
les
ja
cmc
add
call
xchg
outsb
arpl
mov
andb
jns
gs
or
in
inc
sub
stos
scas
ret
dec
add
inc
inc
sbb
leave
iret
and
or
test
inc
mulb
and
test
lahf
mov
fnsetpm(287
jne
loop
daa
into
add
sub
push
jne
push
dec
leave
cmp
std
mov
mov
ficoml
lret
inc
xchg
fs
jl
or
and
aad
or
bound
shr
int3
jo
xchg
xlat
fs
mov
inc
jmp
inc
add
pushf
hlt
or
push
or
mov
cld
mov
in
adc
xor
push
sbb
aad
mov
mov
cmpsl
dec
ret
mov
shlb
push
adc
mov
lret
repnz
into
jp
xchg
repz
mov
sbb
cmp
dec
clc
sub
imul
jmp
cli
popa
push
imul
inc
lods
lret
push
mov
dec
enter
mov
ljmp
imull
fsts
and
mov
mov
xor
or
lret
fstpt
sbb
sub
sbb
sbb
jbe
push
cmpsb
je
xor
mov
xlat
add
sbb
dec
bound
mov
inc
add
in
mov
stc
rcll
ficoml
dec
xchg
jp
cmp
sbb
add
std
push
dec
mov
ret
mov
mov
push
mov
popf
and
xchg
xchg
test
test
rolb
es
daa
push
sbb
nop
jmp
add
cmpsb
int
int
int
js
imul
lahf
lods
xchg
movsl
jmp
sub
fnstcw
inc
adc
dec
sbb
and
mov
push
cwtl
sbb
hlt
dec
clc
xchg
lea
stc
sbb
jne
aaa
mov
jp
fists
outsl
sbb
cltd
andl
fldt
push
sbb
test
adc
pop
shrb
and
inc
lcall
jne
rcl
jno
jb
pop
jne
imul
bound
sub
imul
bound
push
jg
out
out
std
insb
aad
loope
fcmove
adc
push
fnstenv
addl
xor
xor
xchg
push
mov
push
cmc
sub
fsub
aas
and
cmpb
lea
movsl
mov
fadds
addr16
mov
ret
fs
adc
mov
lds
sub
add
dec
mov
pop
jl
sub
xor
jbe
hlt
out
dec
xor
mov
pop
or
xchg
adc
test
imul
lock
out
and
xchg
into
xchg
xor
add
sbb
mov
jg
loope
xchg
out
jmp
cmc
mov
test
punpckhdq
adc
repnz
pop
push
jb
add
dec
cld
stos
sbb
jl
scas
dec
jne
int3
decl
sbb
xchg
pop
jl
gs
mov
aas
loope
pop
jl
stc
dec
movsl
iret
pushf
out
out
pop
pop
inc
iret
pop
loop
sti
mov
int
adc
jns
std
cmc
out
iret
and
sub
fdivrp
cmp
ret
inc
lods
add
adc
add
lds
dec
sub
xor
test
test
roll
das
cmc
sbb
xorl
sbb
and
push
shll
pop
enter
mov
pop
mov
ret
jo
jl
and
imul
cmpsl
mov
jp
pusha
test
repz
xor
fsubrl
pop
cltd
clc
pop
mov
es
pop
movsl
dec
mov
fwait
inc
ficoms
jmp
mov
rcr
or
xchg
sub
in
and
sbb
test
jno
roll
fdivs
ss
ds
adc
add
or
imul
sub
and
sbb
xchg
sbb
in
inc
mov
shlb
pop
mov
aam
xor
jmp
sbb
adc
and
fidivrl
cmp
inc
outsb
dec
fbld
pop
sbb
mov
fimuls
sti
jbe
pshufw
stos
iret
outsb
xchg
cmp
scas
cltd
f2xm1
mov
aaa
sbb
and
and
in
cmp
and
pop
mov
lea
outsl
pop
xchg
sub
pop
fldcw
les
mov
jb
mov
xchg
into
xor
sub
ror
sarb
mov
iret
int
pop
movsl
add
jae
cmp
xchg
cmp
ljmp
sbb
add
dec
xorb
movsb
and
inc
pop
and
or
fstpt
sbb
add
cmp
in
shrl
jae
jecxz
out
cmp
pop
inc
addb
mov
jbe
or
subl
mov
fwait
mov
lds
rcll
push
mov
mov
loop
int
push
adc
outsb
xor
jp
andb
loopne
push
mov
xchg
outsb
xchg
inc
in
sub
cmc
mov
addb
adc
mov
xor
mov
push
add
int
cs
jle
or
and
mov
adc
sbb
js
aaa
xlat
adc
aaa
or
mov
aad
mov
mov
and
into
call
addr16
shld
sub
xor
out
push
aam
xchg
popl
push
scas
adc
ret
push
adc
je
xchg
or
test
pop
inc
cli
icebp
mov
mov
lcall
jl
outsb
ds
xor
dec
out
sub
and
notl
fstps
fistl
xchg
fcoml
jae
jecxz
lock
ret
push
push
jbe
push
jecxz
es
xor
out
das
sub
ljmp
int
int
push
and
sarb
and
movsb
jns
pop
in
sbb
cld
in
arpl
mov
pushf
test
push
fcomps
pop
fnstenv
lahf
insb
test
in
inc
outsb
out
jae
mov
fcoms
mov
mov
in
mov
repnz
mov
cmpb
push
outsl
pop
sub
aad
lods
dec
adc
inc
pop
aad
cmp
icebp
push
ds
dec
add
leave
ror
lahf
sbb
pop
jb
fucomi
mov
jbe
jne
leave
repnz
loop
push
sbb
cmp
dec
test
outsb
pop
jecxz
cmc
pop
mov
inc
push
enter
mov
cmc
outsl
add
enter
repz
scas
pop
mov
add
cltd
sub
adc
aad
mov
lds
xor
dec
inc
adc
insl
in
leave
cmpsl
insl
push
pop
jne
add
movsl
cld
cmc
inc
ss
lea
rorb
xchg
pop
pop
repz
cmpsb
imul
scas
jecxz
iret
pop
movsb
cmp
jno
sbb
std
or
push
dec
push
clc
sbb
xor
leave
repz
pop
es
pop
icebp
lds
fistpll
mov
adc
adc
mov
cmp
adc
cli
test
add
lcall
mov
imul
adc
jl
mov
dec
loop
mov
mov
orb
dec
fs
mov
sub
cltd
cs
push
cltd
repnz
dec
out
xchg
sub
cmp
mov
sub
mov
loop
xlat
mov
fdivl
adc
test
into
cld
adc
pop
jne
ret
cmc
in
mov
jae
sahf
dec
dec
test
scas
cmp
das
jmp
jg
jl
xor
subl
lods
pop
loope
add
adc
and
mov
nop
mov
cmpsl
mov
jne
inc
mulb
outsl
jno
mov
inc
mov
mov
inc
add
dec
mov
cmpsl
cmp
adc
sub
cmp
push
mov
icebp
orl
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
pushf
cwtl
add
call
addr16
sub
add
and
push
and
xchg
insb
mov
push
out
sahf
push
sbb
adc
repz
xor
push
adc
jne
cmpsb
cltd
addr16
mov
push
sub
fsub
shll
xor
fstpt
nop
in
scas
outsl
xchg
cmpsl
lds
cmp
mov
push
into
nop
test
inc
fisttps
mov
inc
outsl
lds
xor
icebp
pop
mov
pop
inc
mov
addb
ret
and
imul
push
sbb
mov
stos
xchg
cmp
scas
fs
sbb
inc
popl
lahf
mov
mov
and
outsl
mov
lret
adc
or
ja
daa
pop
mov
push
sub
nop
jno
je
testl
movsb
clc
roll
pop
je
mov
dec
sub
xchg
add
or
jg
jmp
mov
imul
aaa
inc
cli
jg
mov
sub
insl
out
lret
nop
mov
sub
cmpsl
test
les
iret
fs
mov
inc
pushf
push
inc
test
mov
xchg
mov
push
inc
icebp
mov
mov
mov
aam
and
out
sahf
jns
ds
aad
dec
out
mov
scas
scas
es
dec
rol
mov
cmp
push
rep
pop
sarl
xchg
ret
push
fldenv
data16
jg
adcl
paddusb
jp
xchg
shlb
icebp
stc
stos
jbe
pop
insb
iret
jecxz
repz
fcoms
or
mov
mov
shrl
incl
rcr
dec
add
out
push
aam
mov
ret
int3
cmpsb
out
mov
mov
in
xor
sbb
push
std
lcall
jp
push
hlt
and
lods
mov
push
fcmovne
dec
push
mull
je
test
stos
inc
xlat
mov
ljmp
mov
fdivrl
pushf
inc
aam
xchg
movsl
jnp
test
cmpsl
addr16
ret
push
and
pop
xor
iret
adc
js
ret
or
and
test
push
scas
emms
mov
fisubrl
dec
addl
jb
cltd
rorb
and
cltd
xor
xor
cmp
dec
sub
out
fldl
add
jge,pt
fs
int3
and
lahf
pushl
dec
lods
movb
jae
jp
fnstcw
pop
sbb
mov
mov
aaa
jmp
sti
enter
dec
push
mov
aam
sbb
lds
test
jne
pop
ds
nopl
xlat
cmp
enter
cld
pop
jl
xchg
jo
xchg
push
js
inc
fs
pop
jl
aas
cwtl
nop
cmp
mov
mov
xor
jbe
aam
repnz
js
mov
pop
ret
fwait
and
dec
inc
fcmovnu
xchg
pushf
filds
shrb
cmp
dec
mov
incb
aaa
mov
ret
pop
out
hlt
mov
movsl
sbb
ss
dec
clc
adc
cmpsb
addr16
xchg
jns
or
fcmovnu
cmp
js
popf
inc
cmp
daa
xchg
rcl
in
in
lcall
movb
pop
cmpsl
cld
lret
arpl
mov
jbe
push
imul
pushf
aad
adc
sti
push
adc
pushf
push
xchg
lds
push
jg
iret
mov
mov
xchg
xor
mov
mov
mov
and
addr16
lret
cmpsl
and
push
xchg
adc
mov
and
inc
scas
mov
sti
jge
cmp
out
xchg
rclb
stc
ja
xchg
jge
js
pop
sbbl
push
bound
in
inc
pop
xchg
mov
not
popa
scas
scas
push
out
xor
rcr
mov
testb
pop
ljmp
ss
lods
and
sub
les
fsubr
mov
js
jno
sub
adc
push
cmp
lods
jmp
loope
shlb
pop
cmp
hlt
mov
mov
xchg
xor
fxch
and
dec
lret
add
lods
dec
sti
or
pop
testb
sbb
in
mov
bound
cs
jbe
dec
pop
movsb
int3
xchg
add
push
out
add
cltd
dec
js
dec
or
push
ljmp
ss
sbb
or
aaa
cmp
jno
jns
out
enter
cmp
cwtl
ret
mov
inc
stc
test
daa
cli
out
xchg
ljmp
lds
dec
xlat
fimull
rorb
cs
out
sbb
and
test
icebp
jmp
lret
add
and
mov
insb
xchg
jne
mov
clc
aas
clc
test
sub
sub
xor
adc
ja
pop
and
movsb
or
gs
sub
dec
xlat
xlat
sub
insb
scas
sub
gs
push
adc
mov
imul
mov
insb
das
mov
mov
test
mov
push
dec
pop
pop
mov
lods
sti
mov
jnp
xlat
aam
stos
xchg
inc
shl
movb
xchg
mov
pop
in
push
mov
fbstp
or
pop
pop
mov
test
cmp
sub
lods
xchg
test
enter
incl
movsb
dec
mov
sti
mov
es
and
xchg
pop
sub
popf
arpl
in
push
or
adc
testl
dec
scas
xchg
adc
push
push
std
add
mov
nop
xchg
push
int
inc
mov
shl
xchg
rcll
ret
adc
jne
fnstcw
frstor
mov
mov
mov
mov
mov
mov
jge
adc
mov
dec
sub
jg
ret
ljmp
fcoms
push
xchg
push
sub
pop
jne
sti
rorl
inc
xchg
or
xchg
or
mov
push
insl
push
adc
cmp
cwtl
add
mov
js
in
ja
xchg
test
daa
push
stos
add
adc
pushf
ret
xor
test
out
aas
mov
inc
iret
jne
sub
pop
xlat
mov
insb
pusha
iret
sbb
dec
pop
adc
jae
enter
cmp
pop
stos
dec
rol
test
aam
cmp
push
loopne
aad
mov
inc
popf
lds
fisubl
into
add
dec
push
push
push
push
cmc
jbe
jae
sahf
lds
adc
pop
xchg
pop
jb
dec
insl
scas
mov
pop
add
add
aas
popa
pop
gs
xlat
lahf
popf
movsb
pop
pop
loope
mov
push
mov
jp
in
sbb
jae
daa
jecxz
or
pop
iret
vmovupd
push
in
clc
faddl
movsb
mov
inc
xchg
fs
add
ror
stos
fucompp
int3
mov
xchg
call
sub
xor
sub
flds
orl
mov
cmp
xor
mov
or
xchg
push
mov
rcrb
aam
mov
popa
repz
adc
ja
jnp
rcr
add
out
ljmp
mov
aas
cmpsl
mov
test
push
into
inc
gs
aad
mov
cmc
push
push
in
test
or
xchg
xchg
and
or
loop
aad
arpl
cld
outsl
ret
inc
insb
mov
sub
test
in
jl
movsb
and
orl
lret
out
xchg
and
in
push
imul
sub
iret
loope
rcrl
int3
jnp
mov
ret
lds
dec
and
dec
out
mov
das
push
iret
je
fiadds
hlt
pop
test
lret
cmp
mov
jnp
inc
jae
mov
pop
mov
xchg
push
or
bound
xchg
lret
out
es
or
paddq
test
mov
pop
call
mov
cmp
outsl
ret
insl
lret
push
fisubs
push
outsl
sub
or
aas
lret
add
pop
jecxz
lods
or
iret
lds
out
mov
dec
out
jns
xchg
sti
mov
call
mov
sub
mov
jae
cmp
mov
dec
or
out
mov
rcl
pop
pusha
rcll
leave
fs
xchg
dec
shll
mov
and
xor
arpl
mov
sahf
mov
insb
mov
lret
cli
mov
push
lea
xchg
xor
jnp
stos
xchg
xchg
mov
xor
mov
mov
shrl
xchg
sbb
xchg
sbb
mov
inc
stos
ffreep
lods
adc
xorl
leave
aam
imul
iret
pop
cltd
jb
es
sub
sub
test
and
adc
sbb
fstps
out
incl
add
shlb
xchg
push
inc
data16
jp
clc
imul
xchg
or
in
setne
dec
jmp
int
aam
es
jno
and
fs
xor
mov
jne
pop
push
ss
shll
pop
fwait
lods
int
lea
nop
and
jbe
pop
or
ret
das
mul
inc
adc
lods
icebp
out
pop
in
mov
pop
push
je
es
cld
mov
jno
adc
aaa
add
mov
bnd
xchg
inc
rcll
sahf
cmpsl
adc
jecxz
push
dec
inc
bound
xor
adc
and
movsl
mov
and
mov
mov
scas
ljmp
sub
jb
add
sbb
lea
es
arpl
jbe
push
sahf
ret
clc
aad
sub
loope
and
inc
pop
cmc
les
inc
rolb
push
scas
pop
loopne
insl
movsb
adc
data16
or
jle
mov
repnz
outsb
addl
cmp
cvttps2pi
mov
icebp
cwtl
mov
and
clc
xor
jmp
jns
ss
push
dec
xor
ret
fsubrp
pop
push
test
test
enter
test
ljmp
push
add
mov
mov
mov
inc
ror
adc
pop
ret
sub
inc
mov
add
or
push
cmpsb
pop
jbe
rcrb
xor
out
aam
repz
sarl
xor
adc
cmp
daa
or
aaa
call
inc
notb
cmp
test
adc
add
aad
stos
add
in
cmp
adc
cli
jp
cmp
sbb
and
pop
jle
test
frstor
and
push
ds
int
dec
sbb
test
or
cwtl
lret
pop
xchg
test
out
cmc
jo
das
cmp
stos
call
mov
cmp
xor
sub
add
xchg
dec
or
fsubr
cmp
adc
es
cmp
inc
mov
loopne
cwtl
xchg
dec
popf
movsb
xor
ss
jecxz
mulb
ds
push
into
aas
stos
js
outsb
movsl
shlb
inc
orl
push
andb
push
xor
test
xchg
ja
out
xor
adc
mov
adc
pushf
insl
pusha
test
push
ss
cmp
sbb
push
jg
add
imul
shl
xchg
mov
push
cmp
daa
xor
jl
arpl
pop
push
cmp
jl
xor
sub
nop
arpl
test
pusha
xchg
dec
xchg
cwtl
nop
data16
pusha
add
add
xchg
adc
dec
mov
lea
and
xor
stos
repnz
mov
pushf
or
lods
cmp
xor
aam
repz
shll
scas
icebp
negb
arpl
repnz
add
insb
mov
ja
inc
movsb
ficompl
fsubrp
in
test
aad
pop
xor
dec
daa
addb
and
test
cmp
push
dec
fsubrl
pop
mov
sbb
xchg
mov
mov
je
and
pop
int3
pop
xor
xchg
dec
out
xor
ljmp
daa
lcall
xchg
aaa
or
loope
pop
sub
sub
lods
movsb
jns
icebp
dec
cli
rolb
movsb
icebp
test
shlb
add
test
jno
push
jg
std
lahf
lret
inc
sub
ja
fstsw
jmp
data16
push
push
ret
aas
mov
sub
outsl
xor
jb
lds
xlat
fstpl
popa
rcr
sti
jae
dec
bound
push
shrl
jne
sbb
std
sahf
jb
cltd
pop
jns
adc
sub
push
lods
out
hlt
dec
or
or
adc
mov
int
ret
mov
mov
sbbl
pop
xchg
lods
arpl
mov
out
sbb
xor
out
fsubrl
push
into
aas
negl
sub
sbb
out
push
dec
xor
jp
xchg
lods
adc
sbb
insl
rclb
fwait
dec
or
push
jns
mov
stos
push
enter
cmp
cmp
shll
sbb
dec
bound
in
aam
mov
pop
int
xor
inc
jne
popf
in
pop
inc
jp
mov
aad
jle
call
aam
push
adc
inc
pusha
mov
arpl
shlb
mov
cmc
adc
loope
fisttpl
pop
push
dec
clc
dec
jb
xor
xchg
xchg
pop
movsb
data16
clc
or
sub
lret
adc
popf
mov
sbb
sub
rcrb
push
mov
add
in
mov
add
into
rorb
add
mov
cltd
mov
leave
cli
xor
xchg
dec
int3
mov
add
in
sahf
stos
add
subl
xlat
jge
test
clc
orb
sbb
add
icebp
xlat
pop
stos
mov
popf
sub
xor
jbe
jae
adc
and
adc
inc
clc
cltd
dec
push
mov
jns
div
inc
hlt
mov
test
test
mov
inc
xchg
insb
mov
dec
ja
jbe
aaa
scas
mov
loopne
ja
repz
jmp
mov
mov
mov
xor
mov
mov
clc
int3
mov
fstpl
movsb
daa
ret
fildll
fidivl
lret
pop
sarb
aas
jb
ss
jg
gs
mov
mov
push
inc
sti
lock
mov
add
test
mov
stos
in
and
sub
in
cmpsb
out
sbb
inc
jecxz
jecxz
cmp
loope
or
cmp
add
hlt
aad
and
pop
pushf
mov
scas
js
mov
popf
js
pop
mov
and
mov
jecxz
mov
cmp
jne
and
mov
ds
push
ret
inc
jmp
int
imul
xchg
outsb
inc
aad
pusha
ret
push
es
mov
test
adc
stc
mov
jge
dec
xchg
or
jno
adc
lea
out
ljmp
jge
rorl
add
push
fwait
imul
add
and
cwtl
fsubl
insb
fwait
andl
cmc
dec
and
ds
lahf
lds
and
jp
insb
nop
rolb
cmc
loop
dec
add
in
out
cmpsb
into
out
jbe
jp
rclb
xchg
adc
scas
ret
pop
lock
aas
sbb
lds
sbb
fwait
repz
pusha
imulb
cwtl
lock
std
pop
xor
cmp
push
pop
xchg
lahf
pop
faddl
cmpsl
adc
notb
int
xchg
scas
push
lock
xor
shrb
pop
lods
loope
cs
jnp
test
nop
iret
sbb
cli
add
xchg
popf
jae
imul
add
and
dec
sub
lret
test
sbb
in
dec
or
stos
fs
pop
test
sti
mov
pop
icebp
jmp
fcomps
add
in
scas
std
mov
mov
mov
adc
mov
sbb
loop
addr16
testb
mov
dec
bound
lcall
mov
test
mov
outsb
lods
in
and
jns,pt
scas
pop
adc
mov
xchg
push
in
data16
aam
scas
mov
adc
push
addr16
jecxz
in
cmp
psubusw
movsb
pop
mov
sub
sub
jnp
js
mov
stos
mov
mov
dec
cmp
and
pop
ret
pop
jp
sbb
in
xchg
sti
bound
ret
js
push
dec
fnstsw
loop
mov
fcmovu
cmp
imul
cltd
push
jae
cmpps
xchg
aad
sarb
xlat
arpl
push
stc
jns
jbe
push
dec
push
mov
clc
sub
addl
cmpb
mov
sub
push
sbb
jl
jnp
insb
xchg
psraw
mov
fnsave
sub
popfw
pop
out
xchg
mov
push
aas
mov
dec
mov
ss
sbb
mov
cli
and
pop
js
jbe
mov
pushf
roll
imul
leave
mov
jmp
ss
xchg
jno
xchg
sub
popf
and
cmc
or
pop
pop
dec
mov
mov
push
outsb
cmp
push
lock
and
mov
or
pop
in
and
ss
xchg
aas
stc
fs
or
pop
inc
lret
test
movsb
ret
fucom
jnp
jnp
mov
insb
xchg
add
outsb
enter
xchg
pop
xor
adc
dec
lods
ja
aaa
xor
push
sub
pop
mov
sbb
inc
in
jg
sarb
out
mov
cmp
mov
sbbb
in
rcrl
xchg
jle
stos
pop
shll
aas
imul
pop
sbb
jmp
cmpsl
dec
movsl
cmp
and
xlat
data16
lds
cmc
rol
popa
and
gs
and
dec
scas
lods
xchg
xchg
xchg
xchg
popf
push
xchg
ret
or
stos
jnp
lahf
push
stc
loope
fwait
ljmp
or
fs
mov
data16
aad
jecxz
icebp
test
or
jge
pop
jae
jmp
jmp
pop
scas
push
jle
jmp
xchg
std
adc
mov
xchg
cmpsb
mov
xchg
jmp
xor
and
add
rcrl
arpl
push
inc
dec
push
ret
cmp
or
and
lds
pop
insl
xchg
fisubrs
cltd
mov
push
ror
dec
rclw
add
pop
adc
push
dec
test
lock
fs
pop
stc
push
mov
xor
mov
or
andl
push
mov
xchg
inc
inc
imul
pop
popf
inc
roll
bound
jp
es
cmp
adc
aam
mov
xor
loop
adc
inc
test
lret
sti
jne
lcall
out
lret
mov
push
fsubs
lods
and
add
dec
lock
test
cld
sbb
cmp
ljmp
ljmp
xor
js
out
ljmp
xchg
lea
cmp
dec
addr16
pop
dec
cmp
sarb
sti
int3
xor
mov
imul
and
js
and
push
xchg
dec
fsubr
rcr
adc
shlb
mov
xor
push
lods
lret
test
push
xlat
sub
out
jge
loopne
out
push
adc
test
leave
mov
push
mov
lret
repnz
aam
cmpsb
adc
mov
jle
fdivs
pop
lods
pop
sbb
push
cmpsl
das
jo
shll
adc
xor
in
sub
in
popa
jb
push
out
xchg
orl
xchg
test
sub
aas
mov
test
dec
leave
push
jmp
jne
ds
sbb
dec
clc
jnp
cmc
mov
jae
push
sbb
mov
mov
pop
add
repz
sub
addb
mov
add
mov
inc
adc
das
out
fstp
jle
push
sbb
fwait
int
out
mov
aaa
int
or
mov
mov
sarl
gs
and
mov
dec
sahf
xchg
pop
xchg
pop
jno
xchg
rclb
and
fidivrl
outsb
pop
inc
das
pop
fnstcw
popf
mov
and
out
sbb
jmp
xchg
into
push
push
push
ja
mov
mov
add
jecxz
leave
mov
xlat
int3
jno
mov
sub
xlat
pop
pop
jnp
imul
add
xchg
das
aas
rclb
cmp
test
ret
cmp
xchg
fwait
mov
mov
arpl
lock
mov
add
pop
js
je
or
xor
lea
dec
adc
leave
inc
cmc
dec
xor
sbb
mov
dec
dec
xlat
imul
int
js,pn
mov
mov
in
inc
inc
push
dec
mov
scas
lds
pushf
adc
in
lahf
adc
std
dec
out
mov
out
mov
push
pushf
pop
das
in
mov
inc
dec
aaa
inc
fcompl
mov
out
pop
cmp
jle
adc
movsl
stc
js
jmp
push
fstps
mov
xchg
shll
or
cltd
sahf
sub
mov
adc
js
push
shll
pop
imul
pusha
test
and
movl
ja
pop
rcl
jbe
cmp
ds
imul
dec
dec
cmc
movsb
push
xchg
or
inc
aad
pusha
xchg
es
fmull
add
dec
push
mov
push
adc
jnp
adc
aas
lods
std
cwtl
dec
sbb
or
insl
pop
inc
mov
mov
mov
das
arpl
rcll
inc
adc
inc
pop
or
pushf
repz
jl
xchg
out
out
push
push
xchg
leave
leave
dec
das
sbb
ja
push
inc
push
in
jecxz
int
mov
cs
jns
push
pop
stc
enter
mov
stos
add
jecxz
stos
stc
xchg
outsb
sbb
lahf
scas
and
in
pop
adc
xor
jns
les
push
loop
cmp
push
mov
dec
cmp
iret
cmp
cld
mov
idivl
mov
mov
mov
xor
inc
shll
mov
pusha
ret
sub
repz
outsl
mov
loope
rorl
aad
jmp
fwait
jbe
filds
rorl
inc
mov
lods
in
std
sub
and
popa
mov
push
push
sub
cmp
add
inc
int
xchg
icebp
mov
out
loopne
lock
cmc
lahf
jbe
js
pushl
push
pop
pop
imul
icebp
xor
fcmovne
mov
je
lret
lahf
pop
pop
imul
add
push
loop
mov
stos
xor
or
xor
mov
dec
sbb
popl
or
scas
dec
lds
push
jb
inc
mov
push
xorl
dec
jp
es
pop
sbb
mov
xchg
popa
outsl
fdiv
decl
adc
js
fldenv
adc
xchg
jg
cmp
popa
movsb
xor
mov
mov
leave
mov
mov
mov
lods
cmp
sub
jle
mov
or
fiaddl
cmp
mov
xchg
cli
or
fiaddl
sti
enter
shrl
pop
inc
push
insl
push
in
test
daa
andl
data16
sub
xchg
push
pshufw
adc
imul
hlt
mov
mov
inc
dec
adc
push
movsw
mov
push
enter
stos
or
aam
mov
scas
push
aam
cli
xor
xlat
in
mov
jnp
scas
xor
xchg
std
sub
or
leave
cmp
push
cs
pusha
roll
pop
cmpxchg
xchg
out
ret
push
or
shl
out
sbb
dec
cmc
js
mov
stos
sub
shrb
xchg
aam
push
idivl
or
pop
ja
shrl
cmp
pop
sub
inc
dec
xchg
dec
push
cmp
inc
stos
pop
adc
add
add
sarb
add
in
iret
mov
adc
insb
movsb
lods
push
lret
mov
lret
test
out
sbb
fwait
jp
dec
inc
push
push
test
adc
cwtl
xor
pop
xchg
andb
xor
add
repz
pop
ret
push
ljmp
push
gs
sub
mov
lock
pop
loopne
fs
xor
repnz
cmc
push
adcl
arpl
sub
iret
cli
js
mov
pop
mov
xchg
xchg
push
in
iret
into
stc
lcall
jo
movsl
sbb
cmp
dec
jnp
push
jge
cwtl
mov
stos
sbb
stc
mov
out
xlat
add
pop
mov
or
sbb
aas
loop
and
cmp
ret
push
pop
sub
xor
sbb
les
daa
fidivs
inc
call
pop
add
push
mov
push
shlb
enter
hlt
bound
xchg
xchg
cmp
cmp
adc
sahf
in
cmp
pop
mov
jns
int
fwait
lret
enter
enter
jb
mov
xchg
cmp
lcall
or
mov
in
mov
pop
jbe
or
popf
sub
sbb
pop
daa
or
mov
out
mov
jns
lods
mov
lock
je
add
jno
adc
push
cli
jp
scas
popa
lcall
sub
xadd
dec
add
add
jbe
out
pop
mulb
inc
adc
out
data16
add
mov
ds
sub
adc
inc
jp
cmp
lods
jp
add
sahf
jmp
add
xor
mov
jne
insl
mov
inc
pop
inc
shl
or
test
repz
aad
mov
mov
lock
adc
or
popa
neg
xchg
fldcw
pop
mov
push
add
mov
xor
in
sub
fnstcw
int3
mov
out
pop
orl
cld
add
adc
pusha
imul
out
jnp
out
cmp
mov
push
or
pop
sub
jnp
popf
shlb
scas
iret
sub
sub
lcall
fstp
inc
cmp
ja
and
or
lea
pop
outsb
sub
add
les
test
push
gs
and
fcompl
cmpsb
xor
lahf
movb
sbb
push
aas
sub
pop
mov
fs
sti
push
loope
adc
mov
mov
lret
jg
pusha
lret
dec
mov
mov
ja
lock
jl
push
imul
aaa
jl
leave
nop
notl
test
ret
mov
movsl
and
lods
loop
xchg
xor
jbe
popa
adc
popa
stos
ds
push
dec
xchg
adc
test
scas
sub
icebp
adc
sahf
inc
call
mov
flds
xchg
cmpsl
cmc
inc
mov
push
sub
aam
push
mov
pusha
scas
lcall
nop
mov
cmp
push
lahf
mov
popf
adc
adc
adc
xor
xor
xchg
out
mov
xor
je
push
mov
loopne
out
rcrl
arpl
mulb
nop
scas
cmp
jns
push
jb
std
pop
popf
jge
and
repz
pop
mov
mov
ja
shl
dec
cli
movb
add
ficompl
fwait
inc
loopne
mov
js
cmovne
mov
dec
xor
mov
jg
or
or
test
ficoml
xchg
mov
xchg
pop
lock
sbb
or
es
mov
sub
rclb
pop
and
aas
fsub
inc
xorb
das
sbb
movsb
imull
outsl
and
dec
add
sub
add
mov
jg
cmc
addr16
subb
inc
jno
mov
mov
push
sbb
mov
dec
xor
adc
push
stc
aam
fs
movsl
push
lds
cli
lock
mov
gs
out
rorb
cmp
stos
sub
lret
fisttpll
xchg
int3
mov
orb
iret
jl
adc
or
fwait
icebp
imul
xchg
pusha
aas
mov
out
pop
cmp
or
roll
dec
aam
loop
mov
adc
push
addr16
je
sub
jg
notl
js
loopne
test
cmp
xchg
cmpsb
mov
mov
loope
movsl
mov
cwtl
pop
dec
or
in
iret
xchg
sub
imul
repz
xchg
adc
arpl
ds
cmp
inc
bound
jnp
pop
into
int
cmovae
xor
inc
dec
mulb
orb
pop
rorb
cmpsl
and
pop
inc
or
bound
pop
imul
pop
inc
and
inc
lock
data16
push
arpl
sbb
ficompl
in
shlb
cmpb
into
add
popf
adc
adc
loopne
lahf
dec
leave
push
add
jno
mov
addr16
push
add
sub
mov
loopne
sub
nop
push
mov
inc
mov
push
mov
cmpsl
mov
pushl
pop
mov
mov
add
out
ret
mov
into
or
out
xchg
push
mov
push
movsl
push
ficoml
inc
mov
ret
iret
outsb
and
js
into
ds
xchg
sbb
jbe
das
aad
xchg
pop
stos
aaa
lret
inc
jge
dec
jb
test
jne
mov
inc
push
fs
aam
je
xchg
in
pop
loope
and
sahf
jnp
imul
inc
jg
xchg
xchg
out
xlat
mov
mov
sbb
and
gs
dec
jno
or
into
cmp
scas
imul
scas
mov
out
pop
mov
push
jbe
pop
push
xchg
leave
outsb
lea
lods
fldt
rclb
mov
mov
add
cmp
inc
xor
out
push
shrl
pop
and
cmc
insl
iret
mov
popf
pop
mov
mov
pop
outsb
sub
mov
push
xchg
pop
push
in
sbb
and
outsb
int
popa
jge
rolb
in
ret
sub
cmpsl
xchg
aaa
pusha
sbb
mov
xchg
or
ljmp
rcr
xor
mov
and
lods
arpl
popf
xchg
mov
insl
adc
aaa
jae
int
in
pusha
out
repnz
stc
test
push
std
xor
dec
jae
pop
or
or
int
out
cmp
jl
mov
dec
cmp
mov
dec
sbb
lds
pop
sarb
rclb
or
cmp
dec
push
das
cmp
or
xor
xchg
xchg
test
aas
add
lret
add
fcmovne
std
hlt
outsl
and
lds
inc
xchg
xchg
pop
sbb
lret
nop
repz
arpl
out
cmp
cltd
jo
push
lods
cwtl
loop
sbb
loop
and
add
jmp
jno
add
imul
adc
out
or
fs
daa
and
push
and
xchg
int3
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
jp
rcrl
enter
pop
push
xor
cmp
sahf
mov
das
outsl
rolb
pop
xchg
mov
jecxz
jmp
fldenv
pop
std
insl
inc
or
out
pop
push
pusha
sti
cwtl
std
mov
push
aam
or
icebp
iret
or
cmc
mov
xchg
sub
shlb
cmc
push
adc
ss
push
bound
shlb
cld
faddl
dec
ss
or
dec
dec
push
mov
jno
adc
sbb
mov
enter
sub
hlt
push
sbb
iret
cld
pop
mov
dec
xor
hlt
mov
adc
je
xlat
fwait
mov
pop
mov
mov
cmp
lcall
cli
data16
aam
and
inc
les
mov
hlt
add
imul
out
fwait
leave
fucomip
or
sub
dec
mov
aas
sub
sub
pop
jp
fdivs
jno
pushf
popa
mov
mov
pop
enter
ret
lods
fnstcw
sti
pop
sbb
cmp
push
jno
jae
or
std
or
mov
adc
fnstcw
push
cmp
hlt
inc
inc
test
pop
xor
enter
mov
xchg
out
subl
xor
jge
or
repz
iret
add
ret
orl
or
test
ljmp
adc
jle
jns
fcoml
clc
mov
jmp
test
hlt
add
dec
ret
in
stc
add
and
aam
or
mov
popf
jnp
in
filds
or
je
and
cmp
dec
incb
xor
sar
push
fldcw
push
xor
out
sub
inc
fcmove
test
sub
push
call
pop
cmp
pop
rclb
pusha
cld
jne
in
sub
dec
out
adc
cltd
roll
mov
ret
sub
xchg
int
pop
adc
cmpsb
jle
std
in
jl
jp
xchg
xchg
dec
fisttpll
mov
out
lahf
mov
incb
mov
push
aaa
repnz
lea
loopne
mov
sbb
fldt
fldcw
stc
hlt
push
sub
sti
jge
in
fstpt
out
in
mov
sub
push
test
and
rcrl
push
jns
outsl
lcall
out
or
xor
test
aam
or
ds
and
insb
push
pop
out
test
sbb
dec
jecxz
or
stos
xchg
ljmp
rcll
or
mov
aad
into
fstp
xchg
pop
mov
or
or
ffree
dec
rorb
mov
test
jbe
jnp
add
or
sub
lods
mov
in
repnz
jae
xchg
lods
sub
cld
inc
pop
and
lahf
add
add
test
xchg
cltd
pop
pop
push
sub
push
sbb
sbb
sub
addl
jns
adc
sub
push
dec
ja
xor
adcb
mov
sahf
jl
repz
mov
adc
mov
test
in
inc
push
xchg
rorb
mov
fdivl
nop
loop
lods
mov
add
pop
mov
xchg
sahf
adc
notl
std
adc
int3
sub
outsb
stc
repz
iret
ret
mov
clc
push
sub
movsb
lock
scas
cmp
add
jp
inc
bound
adc
pop
add
or
xchg
add
pushf
movl
jae
out
mov
pop
cmc
dec
mov
aaa
jo
jecxz
aas
push
and
sub
scas
sbb
in
xor
bnd
sarl
xor
xchg
testl
cwtl
pop
dec
mov
xorl
mov
clc
les
mov
rcll
lahf
jne
movsb
aas
fisubrl
mov
out
testl
shrw
sub
test
add
fdivs
out
dec
dec
push
aaa
mov
mov
clc
pand
xchg
pop
push
aas
add
cmc
into
xor
or
xchg
call
ret
arpl
inc
pushl
pop
jge
mov
cmp
dec
pop
xor
xchg
cmpsb
movsl
fisubrs
stc
dec
push
daa
fldln2
outsl
daa
js
ds
xchg
xchg
xor
sbb
add
outsb
pop
jp
push
in
dec
xor
imul
gs
xchg
xchg
aad
inc
clc
stos
adc
mov
fwait
test
and
fsubr
sub
mov
je
insl
mov
dec
inc
popa
or
fisubs
mov
fmull
mov
push
iret
dec
loop
adc
xor
femms
or
xchg
sub
std
lret
bound
and
pop
push
out
mov
inc
bound
add
mov
movsb
in
in
fs
shll
and
lahf
ret
cli
sub
xor
outsl
or
push
mov
clc
mov
loopne
popl
inc
sbbb
cmp
and
pop
rcl
fs
jo
sti
out
rorb
add
lcall
pop
pop
xchg
and
mov
pop
sbb
cmp
and
inc
mov
or
popf
mov
or
mov
testb
cmp
add
stc
movsb
mov
and
cmp
cli
adc
fwait
jp
push
cmc
roll
outsb
adc
adcl
adc
ljmp
hlt
mov
fcompl
pop
scas
movsb
sbbb
imul
push
loope,pt
insb
jle
inc
insl
stos
or
dec
bound
sbb
pop
lcall
sbb
mov
fwait
jmp
xor
and
cmp
incl
mov
sbb
push
adcl
adc
cmc
rcrb
inc
add
push
shll
in
cmc
out
jb
cmc
fiaddl
shl
mov
fisttpl
xor
mov
sbbl
inc
or
mov
dec
mov
lds
sarb
fimuls
clc
jp
sub
mov
rorb
pop
pushf
jecxz
in
data16
lock
pop
sbb
jmp
xchg
sub
mov
add
xchg
xchg
push
testl
mov
sti
cmpsb
icebp
mov
int
popa
sub
clc
jne
lea
and
mov
test
push
jo
sti
jp
in
or
sbb
inc
insb
pusha
pop
cs
dec
xor
cs
add
popf
push
cmp
xchg
das
rol
and
jnp
mov
or
into
sbb
jle
data16
jne
xor
out
ret
dec
testl
push
dec
sbb
or
cmp
push
arpl
sbb
jp
loope
cmp
or
pop
push
sbb
mov
and
push
aad
cmpsl
test
sahf
arpl
xchg
sub
data16
push
jg
mov
ret
push
mov
bound
out
xor
jbe
cmc
outsl
ret
or
fisttpll
pop
aam
popf
flds
or
addr16
cmpsl
ret
aaa
mov
xor
lcall
lock
sub
and
jle
push
scas
xor
mov
mov
dec
out
jb
mov
mov
fwait
ja
sbb
rcll
or
lods
mov
out
mov
hlt
dec
mov
mov
xchg
mov
mov
xchg
ret
out
xlat
ret
sub
dec
rorb
testb
add
filds
sub
in
pop
xor
popa
push
fstpl
xchg
jmp
mov
repz
mov
mov
xchg
pop
inc
sub
pusha
data16
out
bound
mov
gs
movsb
jg
aam
addb
lock
xchg
daa
cmp
idivl
fsubrl
lcall
dec
sub
sbb
lea
pop
cmp
push
movsl
mov
cmp
fidivrs
or
pusha
pop
insb
jmp
xchg
pop
int
nop
bound
fisttpll
ret
fadds
mov
xor
mov
dec
arpl
add
cld
add
mul
cmpsb
push
sbb
xchg
xchg
test
and
and
xor
fadds
mov
sbb
out
cmpsl
pop
sbb
insb
jnp
push
dec
cmp
mov
es
outsl
pop
pop
inc
loope
xor
outsl
add
lods
das
dec
push
int3
push
and
xlat
out
lock
or
out
test
sub
dec
cmp
sbb
test
push
xchg
lods
push
enter
insl
xor
adc
sub
aad
aad
daa
jne
xor
ret
jg
fisubrl
add
sub
aam
fistpll
lea
int3
sbb
mov
sbb
jb
jo
js
mov
mov
mov
cltd
jae
idivl
fmuls
pop
out
lock
fldt
xchg
xchg
jl
sub
gs
dec
repz
xchg
pop
sbb
jne
insb
xor
mov
and
push
stos
cltd
xchg
addl
sub
repz
nop
stc
add
mov
outsl
lock
sbb
hlt
aas
ret
fwait
cmp
leave
jle
out
xchg
cmp
pop
loopne
jl
jge
or
jmp
test
notl
pop
xchg
sub
sbb
in
fwait
sub
lock
aas
jmp
mov
cmp
mov
xor
in
addb
pop
mov
dec
ja
out
std
sbb
aas
mov
cmp
fistpl
xor
insl
mov
adc
add
rcrl
imulb
pop
jmp
aad
ljmp
pop
xchg
mov
sbb
and
lea
xor
sbb
mov
pushf
call
mov
jp
pop
mov
in
jle
dec
dec
push
or
xor
xchg
inc
enter
sti
and
notb
xchg
imul
div
hlt
jl
inc
push
roll
pop
adc
mov
mov
out
add
xchg
pop
jbe
lea
ja
mov
mov
push
adc
jl
jle
jns
imul
push
popa
xorl
aas
lcall
dec
push
mov
test
pop
jl
mov
out
dec
dec
or
inc
xchg
out
push
cmp
popf
pop
outsb
icebp
lret
push
pushf
dec
arpl
sbb
mov
loop
pop
xlat
xor
sub
xlat
jp
sub
adc
xchg
mov
mov
sub
add
jmp
sbb
mov
lea
out
mov
xchg
test
xchg
negl
repnz
dec
xchg
push
pop
jbe
mov
xchg
test
lret
or
adc
xchg
push
jle
bound
adc
push
push
ljmp
lods
inc
mov
fnstcw
add
mov
xor
addb
inc
pop
fcoms
cmp
jle
in
fstpt
clc
ret
fnstsw
shll
pop
mov
stos
adc
mov
xchg
push
xor
sub
jns
push
adc
ljmp
xchg
push
sub
int
sub
std
adc
jle
xchg
jecxz
pop
mov
mov
insb
and
push
sub
addr16
loopne
in
xchg
arpl
xchg
cwtl
dec
test
cmp
or
mov
cwtl
cmc
stos
jle
test
rolb
test
push
or
add
je
outsb
cli
gs
inc
or
test
lods
scas
and
inc
adc
xchg
ret
rcrb
jecxz
push
int
jno
push
sti
outsb
lret
sub
push
cmc
mov
push
xlat
push
or
sbb
js
mov
mov
fs
sbb
xor
add
pop
das
or
out
mov
enter
mov
out
lcall
push
cmp
orb
cmp
nop
out
jae
lods
nop
mov
insb
in
lahf
sahf
sbb
cli
sbbl
divb
imul
out
xchg
xor
adc
and
sub
scas
sarb
and
mov
xchg
rcll
mov
mov
xor
sub
clc
popf
stc
call
jl
sbb
jbe
mov
xor
fwait
shlb
lock
in
push
dec
and
cmp
cmp
add
aam
xor
pop
adc
les
and
jne
pop
lret
cmp
add
push
roll
jo
int3
push
test
jp
sbb
icebp
fistpl
cmc
in
add
pop
or
nop
fmul
je
nop
adcb
lret
stc
lret
sbbb
je
add
gs
popa
icebp
inc
negb
shll
nop
inc
push
stc
ret
popa
arpl
imul
stos
shlb
daa
adc
test
xor
fs
stos
or
or
lcall
sbb
dec
jb
mov
cmp
push
stos
insb
push
sbb
stos
hlt
pusha
clc
jnp
sub
call
mov
cltd
push
in
sahf
dec
push
sbb
fnstsw
sbb
gs
xor
push
sbb
loopne
aam
sbbb
pop
rolb
enter
dec
mov
or
or
sbbb
out
hlt
js
push
out
mov
dec
inc
cmp
inc
jmp
push
cmc
loope
lret
push
jno
loope
out
sahf
orb
stc
mov
leave
or
shlb
mov
adc
xchg
pop
lret
mov
jecxz
mov
push
daa
out
push
cmp
cld
fucomp
or
lods
hlt
mov
cmp
in
jns
sbb
mov
stos
outsl
sbb
incl
mov
jns
sub
mov
test
outsb
mov
lock
and
mov
scas
mov
test
in
sbb
mov
add
loope
cmp
mov
or
xchg
idivl
inc
pop
inc
cmpsl
cmp
shl
mov
movl
and
subb
xor
jl
dec
lods
shll
and
aam
js
daa
lea
mov
cs
fwait
shlb
sbb
das
adc
mov
fcoml
jl
xlat
pop
and
cli
push
or
adc
push
ret
jne
lods
outsl
push
pop
loope
hlt
insl
test
test
push
xor
mov
jecxz
xor
hlt
aas
cmp
mov
scas
sahf
aaa
aam
rorl
jne
push
jp
sub
xchg
inc
cmp
scas
in
push
cli
insb
jno
or
xchg
mov
shl
inc
push
inc
or
lahf
daa
pop
ret
inc
out
das
es
loop
out
and
inc
add
lods
jecxz
das
mov
sbb
movsb
aam
dec
and
xor
sub
enter
ret
inc
xor
mov
lret
lock
jle
mov
adc
adc
rcrb
cmp
jecxz
sub
inc
ja
xchg
cltd
cs
adc
dec
pop
or
cmp
pop
daa
mov
xor
rcrb
sbb
ret
sub
sbb
hlt
xchg
add
insl
icebp
aad
loop
imul
sbb
xchg
and
fistpl
push
adc
insb
stc
je
sub
pop
jge
fstp
ds
xor
scas
pop
sbb
out
sti
stos
stc
cmp
inc
mov
push
pop
test
movsb
cld
jge
adc
inc
lret
jbe
movsl
dec
cwtl
mov
cmp
std
jmp
cmpsl
in
push
sbb
mov
ficoms
cmpb
lahf
adc
or
push
lds
push
dec
ljmp
les
mov
out
add
adc
lods
xchg
std
outsb
pop
dec
scas
mov
rol
lds
movsl
ja
fistl
and
add
sbb
fs
dec
sar
repz
mov
sub
push
sbbl
dec
movsb
lea
mov
lret
ja
sbb
cmpsb
dec
or
ljmp
add
dec
call
pop
in
mov
push
mov
and
mov
cmc
sbb
fldenv
and
fdiv
les
dec
jae
fadds
fadd
sub
push
push
xlat
xchg
or
mov
pop
cmp
in
xor
test
xorb
loop
cs
mov
sbb
mulb
push
fldt
add
mov
popf
aad
repz
leave
xorb
cltd
adc
pop
insb
into
aas
test
aad
mov
mov
dec
ds
aam
lahf
in
dec
sar
jne
in
incl
mov
insl
leave
fidivs
mov
mov
rorb
andb
cltd
inc
leave
divl
mov
fstl
mov
mov
adc
out
cld
push
jecxz
sbb
add
call
rolb
popa
push
test
and
dec
cmc
push
in
adc
or
insl
lret
mov
repnz
sbb
nop
inc
ret
es
add
sub
mov
and
sti
dec
push
push
jle
sub
or
mov
xchg
lds
movsl
mov
fldenv
outsl
xchg
les
mov
stos
in
das
adc
movsb
sub
push
push
repz
lods
push
outsl
push
pop
mov
dec
sbb
add
mov
push
push
rcrb
or
sub
subl
jne
mov
int
sti
mov
xchg
lds
aaa
dec
and
les
jle
repnz
adc
and
push
adcl
popf
movsl
imul
or
andps
test
xor
mov
cmp
repnz
sbb
jg
fists
test
es
mov
xor
mov
imul
andl
enter
outsb
lds
dec
cmp
xchg
ja
lea
cli
into
aaa
lods
sub
sub
into
jns
ret
lahf
fs
pusha
aam
mov
add
ficoml
jle
outsl
xor
pop
cmc
dec
adc
push
xchg
jb
es
jno
mov
xor
adc
pusha
mov
mov
mov
mov
lahf
outsl
xchg
mov
enter
nop
xchg
mov
out
pop
addr16
and
push
icebp
mov
cmp
cmp
divb
xchg
out
inc
mov
in
xor
mov
lret
jnp
pushf
jne
mov
arpl
cmp
lea
ja
and
enter
dec
add
dec
xchg
daa
push
xor
cld
insl
adc
int
and
add
sti
add
xchg
cli
div
mov
lret
imul
cmp
mov
std
jle
sub
lock
mov
fistps
out
lods
jae
repz
lcall
out
nop
aam
jae
pop
cmpsl
fmuls
test
or
cwtl
movsb
mov
mov
mov
in
sti
jo
insb
add
fs
xlat
subb
adc
into
mov
cs
mov
add
xlat
add
mov
lret
fs
std
mov
testb
in
out
lock
imul
fistpl
test
mov
ja
int
pop
stos
xchg
mov
ljmp
mov
mov
inc
jmp
stos
jg
cld
pop
or
cmpsl
pop
and
lcall
int
mov
xor
xor
sub
fdivrl
nop
js
adc
call
xchg
add
sub
adc
mov
push
sbb
jg
shll
jbe,pt
lret
dec
int3
das
icebp
mov
jle
loopne
sub
inc
imul
in
adc
cmp
xchg
add
sub
fwait
arpl
cmc
mov
std
cmp
dec
mov
jbe
xor
lods
test
jmp
lret
add
mov
xlat
popa
jecxz
std
inc
inc
dec
or
fsubrs
test
lods
sahf
push
jae
pop
cltd
mov
mov
orl
imul
cmpl
pusha
popa
mov
adc
mov
mov
rcrb
es
movsl
pop
movsl
imul
mov
rorl
push
lahf
test
es
pop
fistpl
leave
and
imul
dec
push
pop
stos
sbb
aad
dec
test
jp
pop
out
out
cmp
sub
int3
adc
lock
sub
andl
sbb
leave
jmp
in
lods
xorl
sub
loop
mov
mov
testl
cs
add
pop
push
testl
or
mov
xlat
int3
cli
shrl
inc
pop
arpl
lea
pushf
cli
sub
imul
std
or
mov
push
inc
mov
and
sahf
in
movsb
mov
jno
es
iret
aad
std
cmp
lahf
dec
or
adc
push
cwtl
adc
bound
shrb
mov
rcr
hlt
adc
out
sbb
jmp
inc
or
mov
ficomps
hlt
jne
adc
mov
stc
sub
push
and
pusha
mov
mov
mov
jl
dec
pop
getsec
loopne
xor
pop
clc
cmp
movsb
lds
insl
mov
dec
or
jle
jp
js
fldl
ret
into
xchg
push
dec
and
fcmovnb
cwtl
inc
pop
aas
js
pop
pop
xor
jns
gs
addb
fwait
test
rcll
shll
gs
dec
mov
fstps
stos
mov
mov
dec
imul
dec
ret
adcl
loope
into
mov
and
cmp
mov
aaa
fisubrl
fidivl
push
mov
movsb
dec
enter
adc
mov
adc
and
daa
rolb
add
mov
and
jns
shlb
data16
add
imul
push
in
mov
xchg
sbb
adc
cmpsl
pop
popa
movnti
jne,pn
cmpsl
adc
add
xor
mov
inc
outsl
les
mov
push
in
bound
repz
jl
inc
aas
or
push
add
subl
aas
adc
jnp
xor
jne
or
lret
adc
mov
lods
mov
dec
pop
sti
xor
inc
sub
or
inc
lea
xor
fdivrl
adc
jmp
test
fiadds
mov
icebp
push
scas
test
cld
xlat
and
push
push
mov
mov
divb
mov
pushf
test
call
lea
hlt
add
pop
imul
mov
sub
and
out
lret
dec
ficompl
loop
loopne
jnp
inc
cs
into
icebp
xor
movsl
adc
adc
int3
cld
dec
adc
mov
loopne
pop
add
lods
insl
out
test
xchg
andb
fcmovnbe
outsl
enter
outsl
out
jo
stc
jp
aad
inc
mov
cmp
jp
sbb
push
aad
jno
jns
push
stos
bound
mov
cmp
mov
cltd
adc
mov
xchg
mov
and
gs
or
mov
cmp
iret
jns
out
pop
and
mov
jecxz
scas
mov
imul
lock
mov
xchg
fcoms
dec
inc
rclb
outsl
or
aas
sbb
ja
dec
pop
cmp
inc
and
lods
mov
ret
inc
cltd
test
inc
in
push
fldt
xchg
pop
nop
int3
mov
insl
add
push
push
addl
mov
push
cmp
stc
mov
test
movsb
ds
in
and
xchg
imul
fcmovu
test
push
mov
out
mov
push
sub
jns
push
out
jne
dec
jg
andb
outsl
icebp
lock
or
inc
push
and
push
pop
lret
ds
mov
addl
sti
js
repnz
push
dec
dec
sbb
jno
or
stos
and
cmp
jmp
out
icebp
mov
push
cwtl
rcrl
adc
jne
inc
jne
out
jb
lcall
out
lcall
pusha
mov
dec
les
test
cli
add
xchg
sahf
xchg
loope
cmp
xor
ret
pop
adc
std
push
sbb
imul
rcll
sbb
rorb
pop
jnp
xor
sbb
xchg
addr16
sbb
pop
fsubr
addr16
jge
out
cmp
jo
add
std
jle
inc
lods
xor
dec
mov
dec
xor
loop
mov
or
and
cmpsl
xor
enter
test
insl
xchg
dec
sub
jle
sti
lods
sub
ljmp
popa
mov
aam
filds
push
andl
cld
sub
push
sub
jecxz
rcrb
lds
fiadds
sub
out
push
insl
xchg
push
clc
xlat
dec
in
mov
aaa
cmp
inc
dec
xor
inc
lds
pop
push
pop
fcmove
jns
ss
ja
mov
in
sub
mov
dec
sbb
or
movsl
imul
add
fdivl
push
jmp
scas
jle
or
scas
movsl
sbbl
scas
mov
push
add
xor
das
cs
stos
jge
in
mov
or
inc
rorl
add
pop
and
or
lahf
pushf
cltd
fwait
cmp
orb
adc
mov
cmp
or
cld
dec
and
out
mov
xchg
mov
and
popa
adc
add
out
andl
lret
movsb
sbb
pop
out
pushf
nop
xor
jno
sub
testb
shll
jae
dec
loopne
popa
or
xor
imull
sahf
cmp
xchg
test
bound
jp
mov
or
insl
pop
xchg
inc
lcall
lock
jp
stos
fimull
in
jp
add
fwait
xchg
sarl
add
xor
repz
sbb
push
sub
sbb
mov
jae
addr16
sbb
push
push
jnp
push
or
pop
add
incb
inc
sahf
jno
ss
lcall
cmp
lds
cld
cli
adc
fstpl
mov
jae
movsb
push
sbb
inc
push
cmpb
aam
insb
pusha
and
inc
mov
mov
pushf
movsl
sub
cmpsl
push
outsb
ret
mov
mov
daa
scas
hlt
fisttps
dec
mov
stos
enter
test
xchg
mov
xchg
adc
js
mov
jmp
push
pop
flds
lock
repnz
lcall
cmp
jo
sub
or
xorb
pusha
xchg
mov
jmp
or
and
push
pop
mov
add
and
movsb
mov
arpl
pop
sub
in
fiaddl
cli
xor
jmp
cwtl
xor
loopne
inc
mov
mov
stc
lcall
cmpsb
dec
jb
mov
sub
std
mov
scas
outsl
xchg
sbb
call
pop
std
fimull
popa
jae
inc
xchg
iret
cwtl
stos
adc
fldl
bnd
push
ja
mov
fsubs
jne
sahf
mov
roll
fisubrl
push
xlat
mov
xlat
adc
jbe
hlt
sbb
cmpsl
flds
rolb
inc
mov
xchg
dec
xchg
data16
and
int3
jge
xor
fisubs
inc
into
aaa
adc
inc
add
mov
insb
imul
add
fbstp
dec
xor
jo
pop
repz
stos
or
sub
pop
mov
scas
aaa
std
adc
jge
dec
les
mov
pop
jne
aam
mov
or
jle
dec
pop
sub
in
push
bnd
mov
add
jnp
lret
adc
mov
mov
in
dec
mov
repz
mov
or
mov
movsb
or
jmp
lret
loopne
mov
add
pop
jnp
je
sbb
dec
dec
sti
js
scas
jb
fnstcw
xor
flds
mov
push
push
mov
dec
cs
data16
fwait
outsl
ret
adc
adc
pop
inc
int
daa
test
or
push
dec
pop
fistps
or
sbb
push
xchg
pop
xchg
js
jne
fcmovnbe
adc
into
adc
sbb
pop
sbb
or
pusha
xor
cs
dec
dec
sarl
dec
cmp
xchg
lods
lret
fiadds
imul
add
xchg
es
and
pop
daa
mov
pusha
mov
popf
gs
mov
nop
adc
cmp
test
dec
scas
xchg
jmp
aas
dec
scas
mov
xchg
mov
out
sbb
mov
mov
push
cmp
add
fists
xor
gs
jne
jle
xchg
pop
leave
jns
shlb
inc
push
or
shl
das
adc
clc
lret
sbbl
jne
movsb
fcmovnb
jns
les
pop
adc
pop
leave
iret
xchg
mov
push
inc
add
imul
inc
mov
lahf
insl
arpl
mov
add
mov
mov
repz
call
or
fisttpl
jo
cltd
add
add
mov
lods
cmpsb
mov
push
xlat
inc
scas
push
push
inc
stos
lcall
adc
sub
mov
cmp
adc
call
in
sub
push
adc
lods
xorl
ud0
push
and
add
pop
scas
adc
mov
push
in
andw
ficompl
xchg
dec
pop
ss
inc
in
jle
testb
testl
xor
mov
jne
pop
jge
lcall
or
sub
xchg
fptan
push
mov
push
shrl
cmp
jno
add
mov
xchg
lock
movsl
stos
cli
test
nop
pusha
outsb
inc
in
test
iret
arpl
pop
dec
mov
loope
and
pop
mov
lods
scas
inc
ja
repnz
pop
push
push
pop
divl
fiadds
xchg
cmc
dec
popf
das
imul
inc
mov
cltd
push
dec
mov
bnd
pop
stc
outsl
cld
xor
pop
popf
sbb
rcrl
pop
inc
push
lret
inc
jns
jo
adc
mov
cmp
pop
decl
stc
jnp
dec
xchg
rorb
xchg
sub
cmp
pop
jbe
jo
in
ret
inc
popf
mov
mov
divl
cmp
outsl
mov
rcll
push
out
xor
imul
mov
and
xchg
push
push
scas
mull
sbb
dec
sub
mov
mov
into
bnd
lods
in
adc
cmp
mov
mov
shl
aaa
adc
adc
xchg
je
push
dec
dec
or
adc
add
in
imul
imul
cmc
rorl
ret
clc
adc
adc
xchg
fcoml
adc
xchg
ss
cmp
mov
jecxz
iret
cli
lods
lock
cwtl
shll
pop
jo
leave
std
push
je
add
jno
popa
daa
fdivl
inc
or
adc
pusha
in
sbbb
in
out
loop
inc
sub
mov
outsb
cmp
int3
xchg
mov
outsb
mov
xchg
mov
out
adc
arpl
cmp
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
cmp
imul
and
mov
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
