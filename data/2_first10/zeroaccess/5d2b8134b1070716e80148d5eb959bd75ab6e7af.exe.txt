push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
pop
decl
jle
jle
jno
jle
xor
xor
ja
or
enter
bswap
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
xor
xor
sub
push
cmp
adc
icebp
inc
adc
xchg
mov
mov
xor
or
test
cmpsb
mov
pop
push
and
mov
sub
rcrb
lcall
adc
mov
sub
int
ficoms
fmul
jnp
ljmp
push
pushf
inc
sbb
mov
int
outsb
rcrb
cmp
mov
mov
pop
stos
push
push
dec
xlat
inc
fcom
andl
adc
cmp
sahf
loopne
pop
stc
mov
mov
sub
sub
sbb
sbb
cmp
xor
push
add
scas
ja
adc
xchg
je
test
insl
xchg
cmc
mov
jnp
adc
je
iret
and
stc
or
fsubrs
or
jno
mov
shrb
lret
mov
fsubl
fwait
xchg
and
mov
jb
movsl
mov
ret
aad
push
stos
mov
sti
punpcklbw
xor
mov
hlt
or
std
xlat
jp
adc
inc
insl
and
push
xor
and
cwtl
aaa
push
into
lea
shll
stos
cmpsl
sahf
or
sbb
push
mov
ljmp
aaa
iret
popf
and
push
push
in
fisttpll
sub
push
divb
dec
dec
push
push
mov
ja
pop
adcl
cltd
jp
jl
jb
mov
sub
mov
aad
pop
xchg
ficoml
fldt
xor
push
pop
mov
add
mov
outsl
pushf
stos
xorw
push
add
xorl
scas
int
push
es
into
clc
mov
clc
aad
sub
cmp
test
dec
sbb
lock
push
pop
cmp
jae
test
jmp
dec
xchg
adc
lahf
xchg
stos
adc
popf
cmp
call
lahf
push
loopne
pop
jle
mov
dec
js
js
jmp
adc
bound
push
mov
shl
in
fs
dec
cmp
lret
imul
negw
jmp
jmp
lock
jnp
scas
push
gs
adc
xchg
lahf
push
in
xor
sbb
pusha
cmp
pop
pusha
insb
mov
push
pop
xchg
jmp
push
fcomp
inc
dec
mov
fstl
dec
sarl
cwtl
bound
lods
fimull
mov
out
dec
xor
movsb
fdivrs
fsubrs
hlt
or
xchg
pop
push
lds
xlat
insb
cmp
adc
fwait
mov
mov
sub
lret
and
push
push
jle
add
pop
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
lods
imul
jno
jle
jno
jle
dec
jb
mov
sub
pop
lret
test
pop
add
pop
lock
stos
in
adc
loop
add
imul
lea
adc
or
lret
clc
into
inc
push
stos
mov
and
sub
adc
jl
lcall
jmp
and
fwait
iret
leave
push
out
dec
in
add
push
cmpsb
mov
fmul
imul
sbb
fdivl
mov
loopne
pop
clc
sub
aas
scas
fldl
sbbb
sbb
testl
add
adc
fdivrl
inc
sbb
enter
lcall
mov
addr16
lods
add
cmp
stos
les
aas
test
xor
inc
mov
int3
ficomps
or
push
inc
outsb
pusha
mov
pop
inc
xlat
pop
xor
in
lahf
in
les
cwtl
or
lahf
fucomi
jo
add
adc
call
xor
xlat
cmc
lcall
or
das
and
mov
mov
mov
xlat
mov
les
sub
pop
add
scas
add
ds
sbb
push
fcoml
pusha
mov
leave
lods
push
lret
jbe
mov
out
pmuludq
mov
xchg
and
scas
jmp
cmp
and
mov
adc
dec
mov
aad
xchg
jb
cmp
cmc
adc
mov
sub
lcall
repnz
test
pusha
imul
inc
jno
scas
mov
cmpsl
js
loop
je
mov
lds
negb
inc
xor
imul
push
mov
and
or
pop
inc
loop
movb
mov
push
adc
loopne
aaa
fwait
mov
jg
or
ds
inc
pop
add
pop
or
sarl
push
lds
clc
out
repz
scas
into
jle
jg
jmp
mov
das
mov
adc
pop
and
or
iret
and
xchg
mov
jle
fisttps
lea
test
pop
xlat
inc
lods
loope
sbb
mov
push
cmc
cmp
mov
pop
movsb
sbb
pop
and
test
push
lods
test
xchg
and
bound
fistpll
inc
lahf
jb
xchg
fimull
shlb
and
add
call
in
out
ret
adc
add
jge
enter
je
repz
std
dec
pop
fsubrs
adc
mov
and
bound
adc
mov
sbb
inc
jle
cmp
jbe
fnstcw
in
dec
ss
mov
inc
pop
ljmp
dec
sbb
hlt
jge
mov
jns
dec
pop
jle
push
daa
cltd
xor
mov
pop
jno
xchg
cmc
push
dec
cmp
ljmp
add
ss
mov
sbbb
push
add
jnp
add
add
rcrl
fcmovb
push
imul
pusha
jle
mov
jns
mov
sbb
out
ljmp
xchg
add
inc
call
inc
add
in
icebp
jbe
add
leave
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
out
dec
pop
in
push
jne
jle
jno
jle
mov
mov
jae
xchg
push
arpl
cwtl
ror
les
testl
movsl
sarl
xchg
dec
or
ret
cmp
stos
int3
cld
push
adc
dec
call
dec
aam
jl
cli
push
aaa
mov
pop
out
cli
sub
imul
or
orb
stos
xor
je
xchg
or
movsl
jmp
lds
dec
lret
push
sub
aam
fucomi
loop
out
ret
ja
lods
mov
aam
call
mov
sub
or
into
sub
loop
xorl
jno
int
loop
cmp
aas
mov
push
shlb
xor
push
shll
lods
orb
lcall
ds
lods
ret
xchg
shrl
and
sub
loope
mov
loope
mov
jno
and
jb
call
in
dec
mov
mov
jne
test
cmp
pop
dec
es
mov
cmp
pop
nop
test
shr
cmp
jecxz
xchg
mov
xchg
inc
adc
lcall
pop
test
in
js
dec
ljmp
lret
push
inc
pop
mov
push
add
cmp
cmp
mov
add
mov
pop
inc
cld
adc
cmp
ss
mov
mov
sub
outsb
in
dec
add
mov
cli
subl
jecxz
pusha
dec
jbe
push
push
dec
pop
scas
or
andb
cwtl
mov
lret
mov
orl
test
inc
pop
mov
es
pop
ror
sti
fnstenv
inc
push
xor
mov
jo
mov
mov
rol
adc
pusha
in
out
push
add
in
add
outsl
xor
adc
movsb
int
fwait
xchg
data16
cmpsb
sub
aas
sbb
cmp
rorb
or
adc
imul
cmp
pop
es
nop
sub
cld
js
imul
cs
mov
ss
xchg
sbb
call
stos
imul
ds
lods
fwait
pop
jb
jae
test
sub
cmpsl
adc
pop
ja
aas
xor
fists
mov
mov
or
push
and
fiaddl
in
aad
or
std
jb
push
ljmp
jmp
in
pop
cmp
pop
fldl
push
fs
ss
xchg
cmp
mov
popa
lret
push
push
mov
lahf
sbb
int3
icebp
outsl
mov
lcall
mov
or
push
out
and
push
lret
add
mov
dec
ret
fs
mov
pushf
jne
enter
adc
aas
and
pop
arpl
mov
pop
popf
lea
pop
ljmp
mov
ret
xchg
inc
mov
test
pushf
xchg
imul
inc
xchg
stc
lods
shll
push
mov
mov
and
cmp
xrelease
jmp
pop
nop
jl
jge
and
jns
add
mov
jno
jle
fisttpl
xchg
or
fisttps
test
and
sbb
aaa
dec
les
stc
xchg
cmp
push
mov
stos
cs
push
mov
pop
or
in
movsb
sbb
and
jb
mov
jg
sub
loope
or
xchg
or
mov
mulb
sbb
add
push
cltd
dec
push
xchg
or
mov
pop
pop
popf
sahf
xchg
lret
sbb
pop
or
imul
mov
psubusb
sbb
xchg
jno
filds
pop
mov
dec
xlat
add
pop
xchg
jl
and
subl
scas
dec
jne
mov
aad
lods
iret
push
inc
fildl
add
and
ss
push
cld
sbb
sub
xchg
lret
mov
andb
hlt
xchg
in
or
lds
rcrb
adc
insb
add
push
push
in
arpl
sub
aas
adc
bnd
inc
movsl
imul
push
mov
xor
xchg
or
mov
out
cmp
adc
data16
jae
ja
stos
adc
xchg
push
int3
fimull
sub
data16
add
xchg
adcl
cmpl
jl
ret
pushf
jmp
rcr
pop
inc
lds
pop
push
sarb
add
adc
mov
js
decl
add
adc
or
xor
sub
scas
inc
push
mov
iret
insl
rcrl
xor
mov
add
mov
pop
outsb
mov
inc
mov
aas
imul
xchg
ljmp
mov
sbb
push
ror
lahf
push
jg
adc
mov
sbb
ret
push
lret
mov
jl
mov
mov
add
rcll
inc
mov
and
clc
pop
fldl
call
cmpsb
call
pop
rcll
divl
mov
or
sub
test
jp
cmpsb
sar
iret
icebp
nop
bound
pushf
pop
in
xchg
mov
std
shll
push
pusha
cmp
cmp
insl
inc
out
sub
shrl
jp
dec
or
popf
insl
popa
jmp
xor
dec
fmuls
in
roll
loopne
push
xor
mov
xor
mov
or
addb
mov
mov
std
dec
adc
je
xorl
cmp
pop
push
or
xchg
aam
xlat
and
into
jmp
sti
adc
cmp
cmc
inc
jp
xchg
ds
adc
mov
mov
xchg
outsb
jns
paddsw
movsl
out
mov
jnp
das
mov
sbb
or
ret
cmp
orl
jl
add
sbb
cmp
and
jmp
out
dec
je
and
inc
xor
enter
adc
test
jmp
cmpsl
in
adc
test
sbb
sub
inc
pop
out
inc
sub
xchg
mov
loope
adc
mov
sub
bound
insl
std
jg
data16
inc
push
mov
mov
sbb
xchg
rcrb
daa
cmp
sub
fisubl
push
fcmovne
call
pop
mov
int3
fwait
push
mov
test
push
inc
mov
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
xor
incl
cltd
test
adc
insl
faddl
jno
in
sahf
mov
xor
sub
mov
test
mov
dec
test
fwait
inc
sub
in
mov
or
lods
jecxz
cmp
pop
adc
fstl
cmp
pop
mov
xchg
int
and
xor
xor
sarl
imul
loopne
xchg
xor
std
cli
bound
fadd
inc
shll
mov
inc
mov
mov
das
stos
pop
out
dec
mov
xchg
sbbl
decb
fbstp
jl
jne
push
mov
dec
popa
mov
outsb
sub
xchg
xorl
stc
and
add
filds
in
mov
fiadds
push
add
sar
out
push
pushf
jnp
stos
mov
mov
cltd
push
cmpsb
in
dec
mov
push
dec
adc
in
stos
mov
mov
cwtl
sbb
dec
lret
mov
iret
push
add
pop
subl
insb
sbbl
out
xchg
mov
xor
insb
dec
test
addr16
mov
mov
sbb
and
adc
stos
sub
orb
sub
sbb
and
je
in
lret
cmp
rcl
es
xchg
mov
ss
mov
mov
pop
and
sbb
inc
scas
sbb
xor
mov
xchg
lds
gs
add
cmc
jae
add
or
imul
mov
mov
into
out
mov
fisubs
out
cmpsl
in
aam
mov
inc
mov
ret
fistpll
insl
mov
std
cmpsb
lock
sub
push
xor
movsb
push
arpl
out
or
mov
out
lods
cs
mov
pop
cmp
mov
and
mov
nop
xor
jmp
mov
jg
lret
inc
lcall
ja
and
rcl
pop
nop
pop
mov
pop
es
cmp
nop
cmp
and
jmp
fucomip
mov
movsb
outsl
fnstenv
mov
xchg
adc
xchg
sub
std
ss
inc
aad
insl
xchg
ss
jno
mov
in
orl
pop
push
sbb
cmp
arpl
mov
push
xor
push
hlt
cs
dec
inc
xchg
dec
sub
rclb
ljmp
repz
dec
ret
and
in
in
jg
mov
xchg
cmp
jl
fs
adc
cmpl
mov
and
ljmp
sub
mov
sbb
pop
sub
lock
pop
jmp
sarl
outsl
xchg
mov
mov
mov
or
mov
cwtl
ljmp
insb
add
in
push
arpl
push
sarb
addl
es
lock
inc
inc
mov
inc
rclb
movsl
mov
pop
xor
jp
mov
push
dec
inc
mov
sub
push
jmp
mov
jmp
jno
jmp
pop
inc
mov
imul
mov
daa
pusha
push
dec
jmp
loop
xchg
xlat
jb
fimuls
test
inc
push
inc
add
add
add
add
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
add
jne
push
movd
jno
jle
pop
jmp
ds
out
sarl
lahf
addl
sahf
mov
fcmove
and
xchg
cmp
add
roll
jne
xchg
mov
sub
ds
in
push
jp
mov
adc
testl
push
dec
or
adc
xchg
rorl
int3
push
sahf
sbb
sub
cmp
xor
insl
xchg
stos
ss
inc
jo
mov
pushl
movsl
sub
fstps
stos
pusha
rcrl
jne
mov
orl
push
ficoms
adc
sub
push
mov
arpl
adcl
neg
ljmp
push
xlat
shlb
sub
cs
xor
adc
jge
adc
cmc
mov
cwtl
dec
aad
sbbb
jno
hlt
arpl
cmc
sbb
ret
mov
mov
inc
shrb
or
push
or
adc
pop
pusha
or
add
and
mov
es
ljmp
xchg
jmp
aad
inc
add
ja
aam
sbb
test
leave
and
and
push
add
ud0
jo
jp
jno
mov
inc
leave
ljmp
inc
cli
cs
mov
xchg
rcrb
cmp
enter
mov
xor
sub
xchg
es
sbb
dec
dec
inc
xchg
add
lods
mov
jp
std
popa
mov
movd
lods
pop
or
push
lcall
and
scas
ljmp
mov
scas
mov
aad
fucom
inc
inc
test
insl
outsl
jmp
mov
sarl
in
inc
xchg
inc
sub
mov
mov
push
jl
adcb
or
add
loope
cwtl
sbb
cmp
lret
mov
decb
loope
ss
xchg
xor
std
sub
lea
sbb
ss
inc
and
lcall
lods
ret
or
and
mov
mov
popa
pop
pushf
test
push
inc
int
mov
mov
jecxz
sub
or
sahf
cmp
or
add
inc
lock
lret
iret
js
dec
mov
xlat
inc
outsl
std
pop
mov
jns
aad
or
pusha
pop
xchg
lret
xor
dec
insl
mov
xchg
mov
frstor
sbb
je
sub
pop
int3
inc
xor
jmp
mov
pusha
shll
pop
adc
cmp
pop
iret
scas
inc
iret
jne
subb
dec
and
fisttpll
push
lods
ja
adc
and
mov
xor
push
fsubrl
pop
inc
inc
pop
movsl
dec
xorl
and
pop
test
pop
aam
mov
ss
push
je
stc
fistps
mov
cwtl
int
lea
dec
cmp
std
dec
sbb
sti
jbe
mov
lods
and
dec
out
pop
imul
sbb
lahf
ljmp
jecxz
jbe
test
jo
ret
jp
push
icebp
addr16
cmpsb
push
jno
pusha
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
fcoml
jle
jno
jle
fdivl
jp
ljmp
mov
pop
shl
jno
sbb
fiaddl
scas
sbb
mov
movsb
shll
jg
js
mov
bound
xchg
push
dec
inc
aad
call
inc
dec
cltd
push
mov
adc
mov
cmp
mov
lcall
pop
sub
in
cmc
lock
push
clc
jmp
insl
mov
daa
ret
insl
clc
push
sti
mov
sub
and
popa
mov
fs
cmpsl
ror
nop
lret
ss
sahf
pushf
push
push
sbb
add
push
cmpsb
sub
xchg
fldcw
or
sahf
mov
addl
push
adc
fidivl
cld
push
push
ljmp
int
clc
pusha
fsubl
sub
push
sti
add
mov
in
dec
mov
pushf
daa
shl
or
push
adc
loope
push
out
aad
mov
mov
lcall
call
rclb
rcr
fwait
cli
push
sbb
sahf
push
insl
xchg
lcall
inc
das
rorb
das
push
pusha
iret
mov
dec
dec
mov
pop
sbb
push
or
xor
aam
pop
out
mov
jge
mov
pop
cld
adc
outsb
dec
xor
into
add
mov
cmpsb
rolb
loopne
mov
lods
lods
mov
dec
cwtl
sub
adc
in
pop
mov
xchg
mov
testb
push
push
into
repz
ss
fwait
adc
pusha
add
fstpt
dec
xor
cmova
add
push
mov
test
insl
fisubrl
push
mov
mov
repz
push
pop
arpl
xor
jae
xchg
jecxz
or
int3
add
imul
mov
movsl
inc
jnp
movsb
lods
lock
arpl
arpl
xor
jmp
int
insb
mov
push
mov
movsl
lods
stos
insl
addr16
adc
into
push
jb
jns
inc
cmpsb
rep
std
or
imul
pop
es
mov
cs
jno
aas
shrl
inc
push
out
pop
iret
repnz
jae
jle
xor
addr16
and
lret
lods
stos
sub
mov
out
pop
out
sbb
jg
adc
aaa
test
adc
xchg
push
mov
push
test
mov
push
repnz
roll
mov
inc
jbe
mov
xor
mov
pop
inc
mov
out
ret
dec
popa
int
sbb
dec
push
adc
loope
xor
mov
inc
xchg
xor
jmp
lock
lods
sub
inc
out
mov
push
fldl
dec
out
fisubrs
pop
mov
inc
ret
jb
adc
sbb
loope
leave
popf
sub
mov
sbb
sbb
sti
pop
fidivrl
or
sub
sub
xchg
mov
jb
mov
test
lret
nop
or
lods
imul
loope
cli
dec
or
inc
pop
push
and
popf
dec
mov
jne
mov
add
lods
sub
dec
mov
shl
jp
enter
gs
adc
addr16
ja
add
inc
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
pop
out
cs
or
jle
xorb
mov
pop
incb
data16
jnp
and
sti
lret
cmp
jmp
nop
or
cwtl
mov
movsb
lahf
xchg
fnstcw
sbb
inc
icebp
jns
repz
cmc
adc
jbe
lret
loop
scas
es
sbbl
popf
pop
sub
stos
and
adc
cmp
aad
mov
add
xorb
mov
push
enter
stc
lcall
data16
push
cwtl
fsubs
repz
fs
xor
stos
rclb
pop
push
pop
mov
rcrl
jo
xchg
jae
or
cmp
inc
mov
orb
fildl
dec
aas
inc
sti
iret
sub
jae
xchg
adc
imul
inc
fs
sarb
repz
ror
shlb
or
stos
inc
pop
adc
pop
xchg
sub
dec
fmull
aas
lahf
mov
jp
sbb
dec
sbb
sub
icebp
pop
mov
fadd
xchg
jle
lods
and
pop
sub
les
lods
cmp
dec
mov
subb
sbb
push
and
push
cmpxchg
ret
arpl
dec
shl
mov
cmp
mov
bound
and
mov
xor
sbbb
out
jb
rcll
mov
incl
stos
mov
iret
lods
movsb
push
dec
xor
int3
fsubrl
push
adc
dec
cs
pop
loope
mov
loopne
jg
sub
ss
frstor
daa
loopne
vphaddbd
fstpt
loopne
pop
out
cs
jno
hlt
or
inc
nop
fmul
dec
js
lods
sub
xlat
xchg
mov
ret
js
les
mov
dec
lcall
mov
inc
pop
or
mov
repnz
shl
orb
cmp
arpl
add
jg
hlt
xchg
push
inc
test
mov
add
sbb
mov
sti
fs
fdivrs
or
lock
outsb
fwait
mov
sub
sub
enter
rorl
loopne
dec
adc
sub
scas
mov
push
push
xchg
cmp
push
int
aas
add
sbb
jecxz
mov
mov
jg
sarb
sbb
inc
push
xchg
imul
and
inc
inc
test
jle
cmp
pop
inc
push
lods
fsubs
inc
xlat
fnstsw
arpl
ret
mov
and
addr16
cmp
in
rolb
cmpb
jecxz
mov
adc
aam
fs
ja
push
xlat
loop
cmp
push
inc
cmp
mov
xor
and
mov
stc
push
inc
or
cwtl
in
add
sub
sub
adc
fldenv
lods
jmp
and
push
adc
mov
stos
ret
adc
inc
mov
lods
push
dec
mov
xor
push
sbb
lea
jae
inc
pop
push
flds
xor
or
pop
cld
pop
xchg
andb
mov
xchg
fsubrl
cmc
adc
jecxz
adc
cld
fimull
nop
xor
dec
push
cmp
push
cli
sub
inc
cld
jmp
jl
sub
jge
jge
inc
sbb
fldt
sbb
xorb
mov
jmp
data16
inc
in
add
add
jnp
push
aam
les
movsb
into
xor
jne
and
int3
fs
negb
mov
fmuls
sahf
and
cmp
or
mov
fstl
push
add
dec
cmpb
filds
xchg
in
in
out
cmp
sbb
sub
xor
inc
add
push
movsb
or
add
sbb
movsb
pop
sub
inc
sub
outsb
xor
cli
and
loop
adc
inc
xchg
pusha
es
insb
int
bound
jmp
adc
into
cmp
popa
push
pushf
divb
pop
xchg
insl
or
add
cmpsb
lock
push
aaa
cmp
into
fbstp
cwtl
fmuls
and
xorl
dec
and
fildl
cli
gs
xchg
addl
mov
out
fwait
push
call
popa
mov
or
pop
xor
jb
xchg
push
dec
fnsave
mov
sbb
mov
xor
xchg
in
cmpsb
rcrb
or
sti
or
pop
push
cmp
mov
jge
mov
sti
dec
inc
addr16
mov
pop
arpl
lahf
xor
rorb
outsl
dec
pop
mov
xorb
std
ds
xor
mov
mov
sbb
or
decl
mov
adc
add
jbe
dec
sbb
mov
or
lret
push
leave
mov
ljmp
dec
jno
rcrb
pushw
out
jo
icebp
shrb
jns
dec
psubd
xchg
and
in
sbb
or
dec
dec
das
push
cltd
cwtl
sbb
stos
andb
out
pop
mov
cli
xchg
and
inc
es
test
cmpsb
aam
xor
sbb
or
pushf
or
mov
lcall
push
movsb
sub
push
insb
push
std
pushf
les
jg
add
rcrl
out
dec
fisttpll
lahf
mov
lds
inc
or
lock
and
arpl
and
sarl
xchg
call
pop
je
push
xor
add
jb
cltd
addb
adc
lock
daa
adc
xchg
divl
push
mov
inc
test
jmp
fstps
je
pop
sbb
inc
pop
mov
test
jns
push
bound
jns
xchg
jmp
fcmovu
push
push
in
sub
test
xchg
ret
pushf
mov
rolb
xchg
jg
inc
cmp
mov
fimull
mov
loop
stc
jmp
inc
jg
fsubrs
lods
push
lret
call
sub
jbe
jb
movsl
scas
xchg
pop
jbe
test
lahf
out
xlat
cmpsl
fwait
jmp
pop
mov
dec
and
xchg
insl
int
in
fcoml
es
xchg
insl
mov
mov
pop
out
shrb
ret
and
mov
mov
mov
and
testb
subb
cs
mov
and
cmp
pushf
out
cmc
push
lods
add
lret
pop
bnd
sbb
jl
movsb
rorl
mov
adc
into
push
stc
ret
outsb
dec
popa
push
jge
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
mov
xlat
movsl
and
jle
xorb
mov
mov
and
dec
push
mov
push
dec
or
ret
bound
xor
sub
adc
rcll
mov
sbb
cmp
in
daa
outsl
lock
mov
outsb
mov
test
mov
mov
into
add
mov
xor
ss
adc
adc
nop
xchg
stc
jmp
pop
inc
adc
add
popa
lar
push
mov
or
adc
inc
test
jle
mov
sarl
jmp
into
push
mov
mov
jb
pop
jnp
gs
lret
sbb
shl
lea
popf
adc
iret
xlat
mov
gs
jg
xchg
or
frstor
cmpsl
and
shrl
mov
lock
pop
and
dec
push
xlat
imul
mov
scas
jo
in
adc
push
cmp
dec
daa
and
adc
adc
test
sbb
pop
or
mov
repz
divb
lret
dec
fbld
mov
add
jns
ljmp
mov
add
nop
add
mov
addb
adc
shll
cwtl
int
insl
out
mov
push
sbb
cmpsb
dec
repz
xor
and
mov
jb
mov
stos
jecxz
fsub
inc
sti
mov
into
mov
pop
pop
sub
std
xor
xor
fs
fldt
push
sub
ds
xor
repnz
mov
sub
adc
sbbb
jmp
loope
xchg
mov
push
inc
dec
in
rcr
decl
add
fmulp
rolb
lcall
loopne
adc
hlt
dec
out
mov
cmpb
gs
push
xor
call
shlb
inc
xlat
repz
push
adc
enter
lock
dec
push
push
push
mov
add
adc
iret
lahf
outsb
mov
sarl
mov
into
mov
jo
int3
jmp
cmp
popf
fs
dec
sbb
scas
stc
mov
outsl
leave
hlt
in
insl
adc
mov
das
sbb
or
int3
or
mov
int3
push
ror
mov
and
and
xor
repnz
dec
cmpsb
imulb
shlb
inc
andb
and
cmpl
les
ret
mov
repz
ja
lcall
js
ss
gs
cmp
push
call
and
shrb
pop
cld
dec
adc
pop
test
sbb
push
out
test
xchg
mov
inc
int3
push
scas
xchg
sbb
push
test
add
sbb
mov
mov
mov
scas
mov
push
fdivrl
dec
adc
frstor
sub
jge
orb
jb
xor
xchg
pushf
inc
gs
lock
or
xchg
sti
cwtl
sbb
xchg
addr16
sub
in
or
test
jns
scas
aaa
jge
ret
mov
bound
dec
mov
or
aad
subb
dec
sub
xchg
cmp
xchg
and
fdivl
inc
cmp
aam
mov
imul
add
jecxz
pop
in
sbb
je
inc
test
or
fidivrs
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
push
mov
jle
mov
jle
in
mov
stos
fldcw
lock
fisubrl
add
xchg
cmp
stc
out
xor
fildll
cli
jge
lahf
mov
fildl
pop
sahf
push
jb
xor
inc
jno
sbbl
cmpsb
iret
pusha
dec
sbb
adc
adc
jmp
insb
xchg
sub
out
loop
insl
cs
scas
jne
jg
ror
jb
xchg
sbb
sub
cmp
add
or
pusha
cmp
int3
and
cmp
outsb
inc
xchg
xor
fs
je
pop
loop
shr
mov
mov
movsl
push
cs
push
xor
and
xor
sbbb
ss
fcoms
jmp
movsl
lret
test
fs
xchg
mov
push
repnz
or
mov
pop
repz
cmp
mov
jbe
test
xor
lock
stos
std
pop
push
xchg
jne
mov
int3
jecxz
mov
out
adc
test
or
push
test
sub
push
arpl
fisubrl
add
sub
addr16
test
sub
xor
cmc
data16
fucomi
aas
int
test
xor
popl
and
mov
xlat
and
mov
nop
pop
call
stos
adc
fstl
xor
dec
mov
cmp
mov
das
sbb
cld
sti
mov
xor
sub
into
fwait
enter
fsubr
dec
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
fnstenv
jle
jg
jle
pop
inc
mov
mov
add
cmc
xor
imul
icebp
jnp
ss
into
out
sub
inc
std
or
insb
jmp
js
mov
ljmp
add
inc
popa
ds
test
int
pop
int
inc
pop
dec
jb
adc
push
aam
or
cli
push
setne
add
dec
mov
sub
imul
imul
or
cmp
add
in
bound
push
pop
adc
aaa
insl
jno
sbb
loop
icebp
mov
out
or
xor
jecxz
sbbl
std
mov
aaa
lret
and
push
pop
mov
mov
push
in
cmp
sub
dec
xchg
and
push
xor
adc
jno
sub
fcoml
and
subb
cmp
lods
test
push
pop
out
xchg
cmp
movb
clc
cmpsb
clc
sahf
cmp
ss
pop
or
lods
into
outsb
shlb
inc
jae
mov
push
push
mov
ret
push
cmp
out
das
sub
jle
pop
cmp
dec
mov
xchg
lret
pop
pop
dec
mov
xchg
mov
inc
mov
pop
lret
scas
mov
nop
or
lock
inc
int3
repz
les
sbb
xchg
ret
and
push
jns
hlt
ja
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
ret
cmp
loop
nop
inc
cwtl
pop
outsl
aaa
test
cmp
cmp
sbbb
inc
jae
aad
stos
ja
aas
xchg
mov
push
sub
mov
stos
jae
pop
sub
jne
adc
pop
js
xor
test
jle
imul
divl
sti
push
cld
hlt
inc
jae
test
sbb
xor
les
add
sbb
nop
mov
mov
test
mov
dec
lods
pusha
dec
into
xchg
notb
and
fs
jb
jecxz
or
in
shrl
adc
cld
xchg
mov
std
push
pushf
mov
xchg
sbb
xorb
aam
aas
cmp
mov
push
insl
sbb
fisttps
outsl
sbb
mov
jnp
dec
std
xchg
sub
cmp
and
inc
mov
aas
mov
mov
mov
or
stos
sahf
pushf
loop
cs
jo
rcrb
mov
movsl
orb
fiaddl
out
add
adc
scas
dec
push
sub
and
add
xor
jge
xor
and
lahf
xchg
mov
inc
adc
inc
adc
fwait
sahf
je
fnstsw
gs
pop
loope
lea
adc
or
sbb
fidivrl
push
ret
aaa
fidivl
xor
xor
jmp
xchg
push
int3
jns
imul
jb
std
nop
in
push
jle
mov
jle
fstpt
cmp
sub
or
push
cmp
cmp
and
xchg
ds
jle
lods
jge
or
inc
arpl
insl
fwait
lods
add
stos
mov
test
imul
and
pminub
arpl
jle
ja
jge
dec
fstps
aad
sar
ret
and
das
jl
das
and
sbb
test
repz
xchg
into
sub
jbe
mov
pushf
jg
push
jle
fstl
fisttps
sub
mov
xchg
sbbl
clc
cmc
int3
or
test
sub
push
cmc
sbb
cltd
dec
mov
or
rcll
jo
inc
stc
mov
xchg
nop
test
xor
sbb
or
in
inc
loope
lds
add
or
push
and
mov
gs
push
sahf
jecxz
mov
mov
sub
push
negl
das
clc
pop
lods
push
jno
fimull
mov
pop
popf
inc
loopne
bound
sub
adc
push
lock
cmp
sarb
lods
mov
or
int3
movsl
lds
icebp
test
sbb
ljmp
xchg
jecxz
push
arpl
addl
std
adc
repz
push
jbe
sub
pop
test
inc
jns
cwtl
sub
cli
out
cmp
adcl
arpl
icebp
add
adc
lret
cmpsl
mov
add
push
pop
lods
jl
jl
jge
inc
ds
fists
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
cmp
jle
mov
jle
daa
add
cmp
mov
or
lock
xchg
push
pusha
sbb
cmp
and
jno
pop
xchg
mov
add
lea
and
mov
icebp
mov
lret
aam
inc
adc
leave
jge
rcrl
int
pop
inc
sub
lods
sti
xchg
gs
stc
and
pop
subl
push
cmpsb
cmp
rorb
push
jo
fnstcw
or
add
xchg
xchg
mov
out
ret
loopne
bnd
push
flds
jg
adcb
mov
push
fs
xor
and
lods
dec
and
xor
and
pop
es
mov
add
mov
mov
xor
or
lret
dec
dec
enter
js
inc
sub
repnz
push
push
mov
mov
ret
in
std
fldcw
aam
inc
jne
lea
pop
ret
je
or
lods
xchg
inc
mov
xchg
jg
js
push
xor
lcall
xor
push
xor
xor
push
fiaddl
bound
jmp
mov
push
adc
loop
xchg
fdivl
xchg
jp
and
fisttpl
mov
orb
mov
cmp
xchg
cmp
out
out
imul
adc
jmp
rcll
xchg
enter
mov
push
lahf
inc
cld
xchg
push
push
adc
mov
push
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
or
mov
jle
push
jl
fsubrl
lret
fsts
cs
mov
cltd
inc
ret
jo
clc
jg
pop
leave
pop
mov
cmp
adc
xchg
pop
push
mov
sbb
xor
dec
add
lea
dec
dec
pop
dec
xchg
cltd
cmp
or
lock
mov
xchg
adc
popa
xchg
add
inc
mov
xchg
dec
cmp
and
mov
push
fxch
fisttps
and
sub
or
leave
je
cmp
xchg
subl
repz
mov
jg
pop
loop
xchg
push
xchg
test
stos
cmp
scas
cli
lcall
fildl
inc
inc
dec
xchg
or
sbb
subl
sbb
cmp
popa
popf
sub
push
mov
nop
mov
adc
add
sub
clc
mov
push
insl
sub
aad
jne
scas
add
push
pop
leave
or
sbb
out
lods
adc
loope
stos
inc
mov
and
or
addr16
stc
icebp
adc
loop
sarl
or
sbb
pop
mov
or
vpshad
dec
movsbl
in
push
and
inc
js
mov
leave
movsl
rolb
push
inc
lahf
das
pop
ds
mov
mov
ret
inc
adc
ficoms
je
in
ja
outsl
jae
push
repnz
sub
rolb
push
in
mov
mov
mov
mov
jmp
andb
addw
add
jle
mov
jle
fistl
adc
hlt
popf
xlat
pop
jge
or
mov
das
arpl
test
xchg
popf
sti
mov
aad
sub
inc
and
pusha
mov
mov
lea
jg
pop
test
push
lcall
mov
js
icebp
das
mov
push
and
fsubl
sahf
arpl
imul
fiadds
xchg
incb
neg
in
or
fwait
jno
adc
sahf
mov
mov
xchg
mov
push
fcoml
mov
inc
and
or
fwait
in
jno
jns
lcall
fnop
lret
rolb
push
push
mov
jg
jnp
ret
xchg
jp
ss
pop
pop
insb
push
push
aam
inc
dec
sahf
loope
outsl
nop
xlat
mov
sarb
add
aaa
sub
outsb
test
pusha
cltd
shll
jnp
push
ja
push
lds
push
mov
aad
xor
outsl
mov
mov
push
push
pop
pop
or
or
or
jmp
outsl
adc
in
xchg
orl
xchg
arpl
stc
ret
xchg
rorb
xchg
cmp
sbb
mov
lea
adc
test
cli
jno
dec
fwait
add
cwtl
xchg
rcl
out
sahf
popa
je
arpl
fildl
mov
dec
or
dec
pop
sub
fndisi(8087
jns
adc
nop
xor
add
jmp
test
xor
push
mov
xor
cltd
mov
mov
jle
fiadds
rol
and
sub
or
fidivrs
pop
loope
scas
jmp
out
jecxz
mov
rolb
repz
movsb
mov
add
je
inc
hlt
ficomps
testl
sbb
and
jmp
pop
je
mov
jecxz
fcmovu
pop
addl
or
jo
cmp
aas
add
inc
loope
stc
adc
or
icebp
pop
lret
adc
fimuls
shll
sub
or
xchg
outsb
lcall
incl
mov
xchg
xor
ficomps
mov
cltd
push
daa
fsubrl
enter
and
xchg
iret
xchg
cltd
jmp
test
aas
into
inc
cmpsb
test
jmp
nop
mov
outsl
jl
dec
cmpsb
fldl
sbb
cmp
ss
cmp
outsl
xchg
jae
mov
inc
adc
out
mov
fmull
sbb
xor
jmp
mov
add
pop
mov
mov
pop
cmp
lock
leave
add
addl
mov
xchg
xchg
cmp
xchg
int
mov
pop
mov
das
loope
nop
scas
in
sbb
xchg
aam
sbb
jge
pop
xor
stos
or
sub
je
js
aaa
repnz
cmpsl
std
das
inc
xchg
cmp
not
inc
scas
jle
sbb
and
cmp
out
ja
mov
push
sarl
nop
push
push
leave
jb
jmp
pop
ja
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
imul
jle
jmp
mov
xor
out
outsl
mov
cmp
or
out
bound
xlat
pop
cltd
sbb
sbb
push
adc
daa
mov
inc
das
mov
lret
pop
nop
mov
arpl
or
push
stos
push
inc
jns,pt
mov
test
pop
mov
push
pop
fimuls
lret
pop
fwait
sub
bound
add
xchg
shll
mulb
sar
cmpl
mov
les
mov
lcall
mov
and
mov
test
stc
fimull
sbb
pushf
inc
cmp
int3
shrl
pop
adc
rcrl
pop
sti
test
cmpsb
sub
rorl
mov
outsl
fscale
test
es
jns
mov
arpl
sti
sbb
add
or
hlt
cwtl
es
cli
ret
cmp
pop
and
cmpsl
mov
pop
ljmp
lret
imul
fistpl
lea
hlt
push
push
sbb
stos
pop
cmp
pushf
add
jge
mov
dec
out
lret
pop
and
fs
es
sbb
lods
add
push
outsl
ljmp
jb
cmpsb
movmskps
add
push
mov
shlb
sti
cmp
sub
aas
cld
ror
lret
dec
shll
jl
inc
sub
and
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
adc
jle
mov
jle
pop
xchg
lods
stos
mulb
or
stc
adc
push
sbb
lea
dec
loope
inc
arpl
nop
lock
rep
out
arpl
sbb
pop
pop
add
mov
cwtl
mov
in
dec
cmp
mov
mov
lods
push
cli
add
ss
cltd
stos
mov
mov
or
leave
mov
iret
insl
sbb
repz
pusha
out
ja
jmp
mov
push
mov
mov
mov
pop
fsubrs
lds
enter
push
add
lds
jp
adc
xchg
daa
jge
addr16
push
in
fdiv
sar
push
in
filds
add
push
mov
jbe
cmp
inc
cltd
divb
push
or
bound
xor
in
shrl
mov
sub
lcall
push
ljmp
lods
jns
in
mov
xchg
inc
loopne
test
lods
inc
int
mov
jb
std
mov
mov
cmp
sub
add
sbbb
stos
out
xor
dec
xchg
scas
add
scas
cmpsl
dec
mov
jo
icebp
orl
xor
cmc
ljmp
sub
adc
push
jg
dec
pushf
aaa
loopne
lret
fadd
mov
cmpsl
or
and
jp
cmpsl
lea
clc
add
imul
jmp
mov
jns
dec
mov
mov
mov
mov
jle
ret
lcall
jmp
test
or
cmp
std
fiadds
pcmpeqd
enter
enter
outsb
pop
jae
out
xchg
mov
dec
push
clc
lock
loope
inc
xor
mov
xchg
xlat
push
cmp
xor
adc
and
and
loopne
ret
ja
dec
das
iret
popf
mov
lret
push
mov
inc
cmpsl
adc
inc
xchg
inc
mov
stos
adc
jns
bound
xorl
jmp
jbe
add
aaa
aas
xchg
push
mov
cmp
jnp
imul
rcrb
push
cs
adc
inc
adc
push
sahf
les
mov
push
push
aad
pusha
in
arpl
testb
mov
ret
lahf
pop
cmpsb
mov
addr16
pop
sub
sub
loop
cli
pushl
inc
fdiv
sbb
pushl
sub
cmp
popf
stos
imul
enter
lods
and
xchg
pop
testl
adc
je
cmpsl
pop
rolb
sub
shlb
fldl
jbe
popa
std
lods
adc
cmpsl
xor
iret
lods
aam
push
test
xchg
pop
pop
xchg
insb
adc
push
ljmp
shrb
addr16
aaa
ret
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
outsl
push
mov
mov
jle
scas
push
or
fidivl
adc
add
sbb
pop
pop
test
fsubrl
sbb
cltd
cmp
arpl
xchg
add
ret
and
loopne
cwtl
jge
lcall
sub
daa
mov
gs
push
mov
ss
pop
fildl
je
shlb
push
movsb
adc
cmpsb
inc
jbe
test
cmp
std
lcall
mov
mov
addr16
jmp
xchg
mov
xchg
sbb
test
push
mov
sub
mov
mov
jmp
sbb
jl
je
and
add
and
ret
enter
xchg
pop
xchg
xlat
dec
jnp
js
add
xor
xchg
in
std
fdivs
pop
mov
bnd
je
rcrl
xor
jbe
pop
cmp
int
mov
add
andb
pop
add
aaa
jns
jb
push
pop
push
dec
dec
jge
jle
jbe
gs
fisubs
dec
mov
xchg
mov
aaa
xor
insl
mov
stc
sbb
fildl
scas
scas
and
mov
mov
and
cmp
mov
lcall
sub
xchg
xor
xchg
in
bound
call
xor
ret
xchg
jge
mov
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
fst
and
jle
jno
jle
mov
sahf
cmpsl
mov
xchg
mov
sarl
jb
add
xchg
mov
imulb
arpl
in
mov
mov
dec
and
into
cmpsl
insl
mov
out
or
les
adc
int
jne
xchg
jb
mov
and
stos
mov
scas
adc
and
adc
dec
or
test
aam
inc
inc
pusha
jno
scas
outsl
andb
sub
mov
leave
js
xor
and
mov
sub
sarl
pop
push
and
mov
xor
inc
cld
outsb
into
cmpsl
inc
jle
adc
ds
pop
ret
gs
cmpsb
iret
inc
dec
ss
cli
lahf
mov
stos
jno
pop
adc
imul
or
sbb
mov
pop
cwtl
movsb
add
sub
out
shr
push
cld
sahf
pop
flds
add
inc
rclb
jecxz
add
ljmp
lods
loope
jecxz
fldl
pusha
call
imul
ss
adc
push
or
cwtl
and
push
jo
in
inc
sub
pushf
cli
and
mov
mov
stos
push
push
lds
imul
fidivrs
inc
movsl
cltd
mov
dec
inc
ja
addr16
dec
sbb
ret
lods
cmp
out
sbb
fbstp
shll
rcrl
daa
imul
jnp
mov
cmpb
aad
in
iret
fs
daa
adc
jno
mov
xchg
stc
mov
lret
int
mov
fdivrl
dec
stos
out
nop
jl
and
insl
int
inc
mov
dec
xlat
jo
push
clc
mov
pop
cmpsl
ret
sarb
jbe
add
ljmp
add
int3
test
mov
jmp
mov
dec
adc
ljmp
xor
mov
and
inc
iret
hlt
cld
das
pop
lret
push
icebp
in
fistpll
xchg
ret
sbb
data16
rcrb
bound
add
gs
adc
cwtl
and
leave
dec
jnp
aad
cld
and
test
shlb
shl
nop
mov
dec
enter
lock
jg
jnp
add
rcl
fcmovb
mov
xor
push
rcll
xor
jge
stc
pusha
lahf
pop
enter
xchg
clc
add
mov
leave
sub
mov
pop
add
mov
test
les
and
daa
mov
sbb
lcall
inc
shrl
jmp
or
shll
and
sbb
pop
loope
pushf
adc
add
add
xor
xchg
push
aam
jae
dec
hlt
pop
in
lods
add
das
mov
addr16
jnp
or
cmp
adc
inc
jb
mov
jecxz
filds
sahf
sahf
js
stc
ret
mov
lods
cwtl
fdivrl
fistpl
dec
adc
ja
push
dec
mov
movsb
cmp
in
inc
loop
jp
je
add
cmp
inc
arpl
icebp
faddp
jmp
ror
test
daa
ljmp
mov
cltd
sbb
pop
dec
rorl
mov
and
sub
sub
jb
std
jge
int3
dec
mov
dec
insl
icebp
jae
mov
xor
fnstsw
pusha
cmpsl
sub
nop
clc
cs
pop
test
pop
mov
das
jnp
loop
jp
mov
addl
xchg
cmp
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
sub
cmp
mov
fimuls
cmp
fmuls
jbe
and
fwait
jge
popa
arpl
ret
add
pushl
mov
clc
movsb
inc
or
bound
add
jle
pop
dec
cs
in
mov
jb
rorl
cli
fisubs
pop
dec
movsl
push
jmp
cmp
rorb
sub
data16
subb
mov
sahf
add
imul
add
gs
or
daa
xor
cld
cmp
std
xor
xchg
loope
and
iret
outsb
scas
inc
and
shll
sahf
pop
sbb
lods
pop
cmpl
leave
dec
insb
cmp
dec
mov
sbb
sub
xor
push
out
cli
test
push
pushf
sahf
cmpsl
or
ds
mov
add
push
mov
daa
dec
outsl
stc
aam
repnz
adc
movsb
cmp
mov
insl
push
sbb
add
cmp
cmpsb
jnp
ficoms
jecxz
icebp
dec
leave
aam
cmp
or
icebp
ja
insl
push
or
jb
jmp
sub
movsb
sbb
mov
cmp
mov
scas
ror
rclb
cmp
std
sbb
movsl
notl
dec
shll
fistpl
dec
sahf
lock
cwtl
dec
hlt
scas
out
mov
push
popa
mov
lds
and
and
shl
movsl
sbb
push
sub
std
cmp
xchg
push
dec
fidivs
das
arpl
lea
nop
sarb
ds
add
or
xchg
ljmp
push
or
mov
xchg
cs
mov
popf
or
fwait
lcall
and
inc
shrb
jnp
jmp
ds
mov
xchg
ljmp
sbb
test
or
stc
add
scas
sbb
orb
cltd
xor
stos
sbb
pusha
pop
notl
insl
cmp
je
dec
and
insb
divb
add
test
sub
mull
pop
insb
mov
dec
sarb
fsubl
fisttps
mov
adc
fdivp
ljmp
popf
jge
hlt
shl
fimull
sarb
xlat
mov
movl
cld
xor
xor
out
cmpsl
inc
jl
cmp
sub
adc
xchg
stc
push
loop
add
stos
dec
push
dec
insb
push
movl
jne
outsb
out
jno
and
xor
loopne
loop
add
lods
int
add
inc
xchg
push
std
int3
push
push
cltd
push
mov
and
mov
mov
jnp
xchg
jnp
iret
lret
xor
mov
cmc
adc
addb
cs
and
mov
push
divb
cmp
xlat
lods
lahf
notb
adc
in
xchg
jmp
and
jle
lret
xchg
sbb
fsubl
out
mov
fcomps
inc
loopne
jl
out
mov
sahf
outsl
fcoml
popf
adcb
popa
sub
repz
mov
fbstp
xchg
push
stos
dec
out
adc
divl
push
loope
sbb
lret
popf
xor
mov
pinsrw
imul
fcoms
cmp
fdivrs
mov
push
sarb
lea
bound
cltd
push
cmpl
aam
scas
and
push
sbb
cwtl
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
repz
and
jle
mov
in
sbb
jmp
inc
scas
mov
test
push
dec
out
xchg
arpl
inc
inc
aad
adc
insb
jecxz
pop
std
shrb
inc
test
and
loopne
add
repnz
mov
mov
jg
fwait
cmp
lods
dec
js
mov
xchg
xor
pop
int
inc
cmp
dec
cwtl
or
push
jp
popf
sub
mull
mov
popa
xchg
mov
jmp
aaa
mov
and
xor
inc
or
sahf
pop
lret
lret
movsb
call
lods
jg
inc
mov
fbld
ret
and
xchg
fsubs
fld
cmp
push
popl
pop
pmaddwd
jno
jmp
jnp
xor
aam
inc
mov
scas
out
pop
adc
lds
and
mov
sub
add
in
enter
cmpsl
pop
mov
imul
scas
lods
or
cmpl
xlat
insb
xchg
xor
jno
cmpsl
icebp
push
xchg
daa
aas
mov
jbe
repz
cmp
mov
cltd
lret
add
shr
pop
mov
std
inc
push
pushf
mov
rcr
mov
mov
jg
sbb
mov
push
pop
dec
mov
jb
xchg
cld
adc
arpl
mov
mov
clc
mov
sbb
xchg
sbb
or
mov
out
out
sbb
xor
push
add
test
jnp
sub
sbb
popf
xlat
ret
aad
scas
inc
call
aam
dec
aad
mov
or
dec
cs
stos
imul
popf
jle
in
add
sbb
pop
mov
imul
mov
pop
repnz
add
xchg
dec
outsl
mov
fwait
into
xorb
mov
mov
fadd
aaa
lds
jp
mov
lock
cmp
mov
or
sub
das
jl
lret
scas
adc
ja
jnp
mov
mov
xchg
pop
pop
pop
mov
mov
lock
mov
jbe
test
xchg
addr16
cltd
dec
inc
sub
sbb
or
popl
es
and
and
add
sbb
or
ds
sub
lea
das
cwtl
enter
arpl
xchg
orb
inc
pop
adc
xchg
imul
lods
lods
adc
repnz
push
xchg
mov
cwtl
adc
dec
pushf
mov
lock
sarl
das
cli
popf
xor
pop
fldcw
add
dec
jae
stos
add
mov
jecxz
push
fxch
fldl
lock
mov
stos
jge
cwtl
cmpsl
add
xchg
cmp
pusha
testl
sbb
push
mov
push
into
iret
pop
pushf
jg
or
in
xchg
or
sub
jbe
je
loope
mov
gs
xlat
imulb
and
pusha
add
data16
out
sub
jae
mov
xchg
mov
into
sub
cmpsb
mul
outsb
lahf
testb
out
dec
pop
call
popa
mov
insb
arpl
or
leave
sahf
pop
and
xor
cmp
dec
cli
fstps
in
adc
test
add
sbb
int3
xchg
adc
push
mov
pushf
lods
pop
or
mov
pop
push
popf
push
in
fldenv
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
mov
pop
std
lahf
aas
jle
mov
dec
negb
cld
dec
je
sub
int
stos
sbb
lret
jle
sbb
shll
scas
adc
lods
jnp
push
insb
pop
mov
sbb
stos
mov
or
aad
sub
cltd
inc
add
push
out
lret
ds
pop
into
or
int
sti
push
shll
mov
pop
inc
popa
mov
xchg
clc
cmpsb
fbld
jne
jo
fcoms
call
push
xchg
push
jle
push
in
xchg
aad
pop
addb
out
test
dec
push
inc
aaa
and
pop
cmpsb
cmp
data16
mov
pop
xchg
sbb
xor
aas
dec
stc
mov
xlat
fwait
cmpsl
add
xor
cmp
sbb
enter
mov
lahf
ret
lods
sub
iret
xor
in
fnstcw
rcrb
aad
notl
xchg
add
cmp
shll
xchg
fs
into
in
mov
fstps
incb
push
adc
imul
mov
mov
sub
lahf
insb
sub
mov
push
outsl
xor
scas
mov
mov
push
call
sbb
add
xchg
lods
cld
add
mov
dec
fdiv
xor
mov
dec
sbbl
push
sub
xchg
int3
jno
push
and
mov
sbb
jbe
jns
bnd
pushl
or
mov
lea
push
xchg
hlt
jb
and
mov
or
mov
dec
cld
ds
ret
fld
ficomps
dec
rcrl
jmp
push
jb
dec
and
enter
fistl
fcoml
bound
fwait
sbb
pop
mov
popf
je
xor
push
mov
jne
fisttpll
mov
mov
dec
aad
and
dec
cmpsl
jp
mov
dec
imul
and
negb
inc
pushf
xlat
xor
adc
addb
mov
adc
add
gs
cmp
add
jns
imul
mov
pop
adc
pop
jl
lret
mov
scas
clc
in
es
loope
out
pop
mov
pop
cmp
arpl
movsl
and
xor
lcall
aas
mov
in
jge
repnz
sbb
push
cmp
xchg
or
test
pop
add
sub
sub
jle
adc
xchg
std
imul
dec
in
mov
mov
inc
aad
dec
sahf
andl
or
in
add
ror
add
sbb
pop
out
cmp
mov
loop
mov
sub
jp
cmp
xchg
mov
and
arpl
lcall
fcmovnbe
sbb
mov
lods
dec
xor
pop
mov
rorl
das
push
out
repnz
xlat
xlat
jbe
fildl
sub
daa
add
sbbb
stos
pop
ja
xchg
aas
inc
and
xchg
mov
xchg
js
pop
add
mov
stos
pop
or
pop
repnz
je,pn
insb
sub
mov
mov
dec
repnz
and
fldt
xchg
jp
jl
mov
mov
ss
and
xchg
test
xchg
idiv
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
and
dec
enter
fcomps
add
cltd
test
push
je
xor
stos
push
xor
push
sbb
jns
jge
int3
xchg
push
push
rol
pop
add
jnp
jb
cli
jp
repnz
retw
push
stc
mov
and
push
mov
in
jle
sbb
das
aas
adc
jecxz
cltd
pushf
and
das
or
add
jl
add
xlat
gs
enter
xor
mov
or
add
imul
or
inc
mov
sub
dec
jno,pn
push
fildll
jg
dec
mov
xchg
sub
cmc
movsl
or
dec
cmpsb
mov
in
mov
or
test
nop
imul
lret
push
inc
aas
imul
xchg
xchg
and
imul
push
sbb
and
nop
in
jnp
leave
leave
cld
cmp
or
dec
lods
adc
sub
mov
inc
pop
aad
push
mov
inc
pushf
xchg
rolb
jne
int
xlat
orl
sahf
roll
leave
and
bound
rcll
insl
lahf
jecxz
in
scas
jne
cmp
rol
lcall
xchg
jle
pop
ljmp
neg
mov
cmp
pop
into
sub
cli
jne
xor
lahf
cmpsb
inc
adc
hlt
add
jl
mov
cld
push
movsl
or
outsl
jmp
xor
pop
mov
mov
fwait
mov
sub
inc
mov
shrb
lods
sbb
pop
ss
xor
dec
repnz
add
mov
fidivs
out
int3
sub
rclb
pop
dec
push
addl
push
sub
fs
jmp
imul
inc
mov
clc
fdivr
stos
mov
dec
repz
dec
lods
ds
sub
arpl
test
icebp
fadd
pushf
fstl
test
movsl
lret
mov
xchg
push
cmp
pop
push
ds
xchg
loop
sbb
adcl
jb
into
jb
in
mov
and
in
out
aad
and
add
and
mov
mov
jge
in
std
aas
and
dec
sbb
imul
xor
dec
xchg
andl
add
popa
std
add
xchg
sahf
pop
movsl
mov
adcb
cmp
fisttps
in
enter
push
mov
in
les
loop
stos
xchg
ds
imulb
fbstp
sti
punpcklwd
dec
or
hlt
lods
mov
lds
mov
and
xchg
iret
pop
std
mov
jmp
aas
movsb
mov
mov
cmpsb
pop
enter
mov
push
mov
cmp
jmp
out
test
push
dec
jp
js
out
sahf
in
inc
rorb
pop
sub
inc
push
push
scas
dec
xor
cwtl
sub
mov
adcl
cld
pop
and
insb
shrl
rcr
push
fisttpl
je
dec
sbb
adc
rorl
xchg
and
dec
pop
in
add
mov
xchg
sbb
jo
push
or
insb
bound
and
inc
add
ret
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
xor
stc
das
dec
ss
jmp
jle
mov
add
push
add
xor
fbstp
xlat
dec
fwait
std
insb
dec
es
mov
add
les
fmuls
scas
fs
pop
aad
les
ficoml
lds
mov
pop
cmp
es
test
mov
clc
jl
out
das
mov
bound
dec
or
push
sub
sahf
fcmovnb
or
push
mov
push
inc
xor
icebp
addr16
into
mov
test
dec
or
jge
adc
cmpsl
mov
or
mov
mov
stos
push
mov
mov
push
ja
enter
test
add
repnz
test
pop
push
jle
inc
sarl
sbb
mov
inc
les
mov
je
push
cmpl
pop
and
mov
movaps
dec
sub
in
push
dec
sbb
stos
xchg
out
push
imul
dec
inc
shlb
jp
pushf
cmpsl
sahf
xchg
xor
jne
push
inc
dec
dec
stos
int
pop
int3
push
push
les
ficomps
inc
sbb
mov
push
popf
cmp
dec
paddq
sti
and
mov
pop
xor
add
imul
jno
dec
ja
fmul
cmp
stos
out
loop
enter
popa
repnz
fstpt
out
ret
aad
pushf
add
xorl
jg
and
lret
or
push
sbb
hlt
andb
cmp
loopne
test
je
sahf
arpl
push
cmc
dec
imul
test
stc
fnsave
push
rcl
int3
inc
ljmp
cmp
int
xor
mov
push
mov
cmp
xor
mov
sbb
cli
jae
outsl
and
mov
mov
inc
enter
xor
dec
or
mov
bound
nop
xorb
test
insl
loope
fidivrl
sub
or
xor
lret
loop
push
std
aas
mov
jno
scas
pop
stos
fcomp
clc
xor
xor
repz
and
std
int3
pop
inc
lcall
loopne
aaa
push
mov
insb
addl
jo
bound
push
adc
orl
push
fldcw
pop
add
mov
add
inc
jle
pop
test
inc
push
lahf
inc
sbbb
les
cmp
and
push
push
fs
xchg
fmulp
movsl
add
out
stos
xchg
and
push
pop
mov
add
dec
fstl
inc
movsb
add
imul
popa
lret
data16
sub
xchg
adc
cmpsb
jbe
daa
out
cmp
ljmp
fwait
scas
push
sub
and
cld
inc
push
inc
push
mov
add
ficomps
cmp
mov
or
xchg
cmp
sub
stc
fs
sub
dec
arpl
aam
loope
mov
jle
push
cmp
xchg
and
jno
sbb
or
cmpsb
aam
pop
cmp
push
es
xchg
punpcklwd
lcall
xchg
sub
fs
mov
jle
xchg
or
pop
mov
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
leave
nop
xchg
sub
lret
jmp
jle
movsb
pop
sub
mov
xchg
inc
daa
shrb
sar
shlb
mov
mov
and
and
scas
dec
mov
pop
es
cmp
push
jns
testb
xchg
mov
pop
imul
fisubrl
adc
aad
mov
mov
and
and
out
cs
mov
jno
mov
int
cli
stos
mov
adc
add
cmp
sub
lret
mov
outsl
xor
xor
pop
xchg
enter
enter
lock
push
mov
ret
fcmovnb
sbb
sub
xchg
sbb
fldenv
dec
pop
inc
cmp
mov
mov
sbb
and
mov
fldl
jbe
cmpsl
popa
data16
orl
mov
fcompl
icebp
push
fidivs
movsb
insb
loopne
andl
aas
xor
pop
lods
cmovb
ss
sbb
cmp
aam
adc
or
cltd
ja
push
test
loope
xchg
lods
jne
pusha
xor
xchg
je
out
loop
jb
scas
mov
inc
clc
and
lcall
ja
inc
add
xchg
out
sbb
fists
mov
lock
inc
cmp
mov
push
dec
je
aad
mov
sub
xchg
loopne
cli
pop
mov
imul
subb
pop
ror
add
rolb
rcrl
push
stc
cmpsb
lds
iret
xchg
sbb
add
lcall
rorl
lods
int3
mov
loope
cs
and
call
popa
iret
pop
cmp
mov
int3
pop
xor
dec
lds
hlt
std
icebp
pop
jae
cmp
xor
push
insl
and
mov
aaa
push
xchg
mov
shl
jmp
sub
les
int3
pop
pop
inc
jbe
dec
repz
push
pop
aam
enter
jns
clc
mov
xorb
add
popa
out
repnz
ja
mov
or
inc
mov
fisubrl
scas
xchg
pop
fisttpl
data16
mov
pop
dec
movsl
and
mov
cmpsb
out
es
inc
sti
sub
ret
mov
daa
cltd
mov
adc
in
dec
jl
iret
cmp
addb
or
push
xor
or
test
cld
addb
cmp
iret
addl
inc
adc
mov
loopne
or
cmp
cld
and
test
mov
ret
stos
pushf
mov
fcmovne
scas
mov
mov
pushf
xor
mov
cmpsb
arpl
testl
rclb
and
sbb
cmc
loope
and
and
push
mov
jns
push
dec
das
dec
add
fcoms
push
push
hlt
loope
sub
ss
fwait
lods
dec
cmc
iret
jg,pn
mov
mov
popf
or
je
mov
adc
xor
pop
outsb
push
push
adc
jl
ljmp
sbb
cmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
inc
imul
out
mov
fs
int
hlt
mov
add
mov
sub
iret
mov
cmp
dec
mov
xchg
lds
sar
arpl
imul
mov
and
aam
cmpl
sbb
jmp
mov
test
shll
jmp
enter
mov
imul
mov
push
seto
push
xor
stc
and
aad
xor
je
cmp
pop
das
stos
ljmp
repz
push
in
dec
dec
dec
xchg
data16
clc
push
cmpsl
adc
lds
push
out
xor
aas
mov
cmp
push
mov
aam
popa
int3
aad
jl
andl
push
sub
add
inc
das
in
outsb
cli
cli
ret
test
xor
mov
push
ret
test
jo
sub
aas
xchg
loop
sub
mov
xor
jle
adc
fstpt
mov
adc
imul
mov
mov
xchg
pushl
xor
cld
pop
scas
pop
jmp
push
insl
adc
out
dec
fistpll
jne
mov
or
push
roll
loope
add
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
xchg
jge
or
jle
sarb
jle
lret
push
jge,pn
mov
mov
adc
imul
movups
pop
data16
mov
hlt
lret
xchg
jnp
or
and
jo
and
lret
mov
repz
fdivl
and
fwait
xor
aas
xchg
xlat
mov
lret
and
mov
ror
push
mov
lods
mov
add
icebp
xor
popf
adc
lea
mov
inc
scas
orl
xor
lret
inc
scas
inc
jge
rep
hlt
jp
mov
cmp
mov
push
push
insb
or
mov
inc
push
sti
sahf
adc
or
arpl
lock
mov
repz
sbb
xchg
hlt
orl
adc
cmpsb
cmp
fidivl
repnz
call
aas
shlb
fcompl
cmc
out
jb
test
cld
sbb
sbb
cmpsl
mov
sbb
jo
icebp
mov
mov
je
out
js
mov
enter
out
bound
ja
cmp
dec
sti
dec
sub
cmp
sub
push
enter
or
out
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
sahf
jge
mov
sarb
jg
jle
in
jbe
jmp
loope
sbb
testb
aaa
leave
loope
orb
and
arpl
adc
jmp
cmp
or
adc
je
imul
scas
test
fsubl
out
pop
mov
cmp
pop
in
mov
inc
iret
incb
mov
sub
enter
outsl
sbb
jg
mov
xchg
popf
sub
sbb
xor
shr
push
call
into
cmpsl
push
sbbb
or
mov
and
out
mov
lods
inc
fadds
jnp
lods
std
cmp
and
movsb
adc
pop
jo
arpl
mov
lret
mov
sub
or
xor
adc
mov
pop
ds
lea
sbb
mov
bts
leave
int
or
inc
stc
ja
pop
addr16
xchg
lock
mov
scas
and
lret
popl
shr
cs
inc
stc
push
jmp
mov
aas
sbb
fildll
fsubl
jmp
sahf
rclb
icebp
mov
mov
mov
mov
lcall
cmp
push
sbb
push
mov
movsb
cmpsb
out
sub
push
insl
mov
jge
jmp
jae
cmp
cli
vpaddw
incl
mov
sarl
jg
jle
icebp
in
inc
sbb
lds
inc
sti
divb
mov
ret
mov
xchg
rol
dec
inc
jl
scas
hlt
pop
cwtl
insb
xor
insb
aad
mov
mov
xlat
push
in
mov
movsb
arpl
lea
aaa
cltd
jmp
sub
mov
mov
inc
pop
xor
std
or
push
sub
mov
dec
sub
mov
dec
sbb
inc
xor
xor
mov
xor
pop
mov
sub
int
loop
mov
clc
and
pushf
adc
mov
or
fisttpll
mov
xor
xor
gs
and
pop
jnp
cmpsb
cmc
xchg
scas
popa
popf
jmp
rcl
mov
and
inc
ss
popl
les
out
and
and
jb
mov
stos
je
mov
loopne
in
fsts
lds
cmp
dec
lods
subl
iret
jle
lods
cmc
pop
pop
js
and
cli
jmp
inc
and
insl
pop
movsl
or
sbb
aad
xchg
pop
test
mov
sub
mov
dec
repnz
xchg
sbb
fisubrs
lods
stos
xchg
stc
push
cmp
pop
jge
adc
inc
mov
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
inc
mov
aam
ret
jle
sarb
jle
bound
ret
das
jp
inc
scas
mov
mov
jo
add
sbb
pop
lcall
shlb
repz
subps
sub
sahf
test
jnp
xor
inc
arpl
data16
rcrb
inc
sub
out
test
pop
std
dec
push
mov
push
lcall
das
dec
arpl
bound
enter
sub
les
jae
in
sahf
xor
jmp
gs
jp
ret
in
or
iret
fbld
jg
pop
imul
scas
and
mov
lods
pop
movsl
imul
mov
pop
orb
mov
jbe
sbb
mov
movsb
ffree
jp
stc
popf
xlat
pop
outsl
in
rorl
mov
sti
aas
pop
rcrb
push
sti
decl
insl
sbb
xor
pop
mov
in
mov
mov
add
stos
jbe
inc
jle
sbb
dec
pop
and
lahf
les
jns
stos
add
sub
jno
sub
cmp
scas
mov
int3
je
fs
jmp
jns
rcll
jecxz
cli
mov
dec
out
mull
push
bnd
xchg
mov
enter
jecxz
aaa
icebp
xor
lret
popf
jbe
mov
adc
popa
testb
rorb
add
xchg
sbb
cmp
inc
push
cwtl
pop
mov
les
sarb
jle
cli
in
jge
jl
rclb
jmp
data16
push
cmpsb
xorb
xor
and
mov
push
add
cwtl
int3
push
xor
out
jle
push
fld
icebp
cli
and
mov
aam
push
mov
cs
pop
fdivrl
fs
and
repnz
add
mov
xchg
adc
jae
add
fbld
mov
dec
movsb
adc
mov
hlt
and
sti
call
pusha
sbb
xor
fisubs
cmpsb
jmp
and
das
popa
cmp
popf
popa
jmp
mov
add
popf
stos
jmp
pushf
cli
sbb
cld
and
clc
mov
scas
test
sub
jnp
jmp
daa
loope
xchg
pop
adc
and
dec
clc
push
add
mov
adc
bound
scas
rcl
pop
mov
pop
je
mov
lahf
xor
arpl
or
leave
jl
and
xor
test
sub
cmpb
fldt
insl
stc
outsl
lea
cmp
fidivs
popa
insb
jecxz
movsl
addl
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
pop
sbb
push
lds
sarb
jle
or
push
cli
stc
popa
jle
divb
int
inc
mov
jae
cmpsb
repnz
pop
dec
bound
cmc
mov
outsl
push
stos
mov
inc
xor
adcb
je
stos
or
jg
mov
pop
jo
imul
ss
fprem1
sub
shll
jge
xchg
mov
repz
sbb
stos
mov
push
jb
fadds
jge
and
or
test
or
sub
mov
sbbb
pop
rcrl
rcrb
std
jno
jmp
imul
adc
vorps
shlb
movsb
out
push
and
bnd
repz
stc
rolb
dec
xchg
jo
ret
adc
xor
in
xchg
xor
out
pop
push
lock
inc
lds
insl
out
adc
lods
sub
movsb
ljmp
inc
rcrb
adc
or
mov
push
fdivr
arpl
testb
aas
mov
add
push
fcmovne
xchg
fistpll
sub
sbb
jl
scas
mov
sbb
dec
icebp
adc
mov
inc
lret
push
in
fsubrs
pop
scas
pop
jl
fldenv
pop
icebp
push
jnp
and
inc
cwtl
cmpsb
pop
iret
pop
or
mov
popa
test
pop
stos
jl
and
out
insb
push
mov
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
or
inc
rol
jle
sarb
jle
test
sti
adc
mov
pop
in
mov
in
repnz
sbb
jno
cmp
jb
incl
adc
inc
pop
xchg
pop
mov
int3
cmc
xor
fnsave
push
mov
or
dec
dec
mov
outsb
mov
call
mov
stos
and
addr16
aas
mov
inc
push
sarl
or
inc
or
push
inc
cltd
icebp
test
xchg
xchg
rol
pop
jp
stc
xchg
and
out
dec
cmp
and
and
sbb
xor
mov
movsb
or
fwait
aaa
mov
setno
fimuls
pop
and
push
add
push
add
lock
or
and
dec
mov
mov
mov
mov
and
add
jo
out
sahf
cmp
inc
push
stos
test
jp
shl
xchg
mov
scas
push
pop
roll
jo
add
push
lods
mov
or
mov
push
adc
in
inc
sarb
repnz
mov
push
mov
mov
inc
xchg
int
std
outsl
or
in
mov
in
or
vorps
in
cltd
mov
sub
dec
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
mov
jp
fdivrs
sarb
jle
xlat
adc
lods
jle
fs
stos
movsl
push
mov
pop
mov
mov
enter
push
adc
mov
cwtl
sbb
and
add
insb
dec
mov
das
les
lret
mov
jae
cmp
shlb
popf
sub
pop
out
enter
ljmp
inc
daa
insl
inc
cmp
push
xchg
sar
pop
push
push
mov
mov
mov
fmulp
pop
xor
pop
lds
testb
pushf
push
sub
jge
sbb
push
inc
mov
xor
repnz
shll
jne
insb
cmp
hlt
addb
stos
movsb
mov
or
js
cs
ret
adc
sahf
sbb
lahf
or
clc
push
insl
sahf
stos
xchg
lahf
es
add
sbb
out
jo
jbe
jnp
fstpl
lret
in
push
mov
xchg
pop
aam
fstl
mov
add
jmp
jbe
mov
insl
daa
imul
out
sub
cmp
add
rolb
lds
pop
cmpsb
popf
imul
sbb
arpl
inc
pop
js
and
mov
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
push
push
fadds
jns
jne
lahf
pop
xor
mov
or
sub
into
shll
in
rclb
pop
cmp
lods
ret
out
push
scas
mull
mov
dec
xor
inc
or
or
ret
jbe
inc
ret
mov
fsubl
pop
adcl
jb
xchg
movsb
popf
jno
jo
xor
mov
in
cld
add
sti
sub
shrb
push
sbbl
add
shll
addr16
loope
jge
inc
imul
cmp
pop
bndstx
lods
adc
fcoms
outsb
movsl
sar
sbb
fs
or
clc
or
push
outsl
pop
mov
adc
sarl
push
sahf
and
push
dec
push
sahf
imul
movb
inc
jne
dec
leave
pop
dec
repz
lret
jnp
rclb
sub
jg
insb
xlat
cltd
lret
leave
ss
lcall
jle
out
enter
mov
push
cld
mov
js
fidivl
push
jo
dec
xchg
inc
cmp
xlat
lds
push
jge
inc
fcompl
loopne
inc
lock
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
jle
fstpt
sarb
jle
or
adc
test
sbbb
in
adc
mov
xchg
ds
push
cmpsl
lock
mov
bound
sub
fldt
pop
xchg
or
cs
jge
in
inc
and
rcll
xchg
clc
decl
xor
aas
cmp
jmp
std
mov
mov
jbe
clc
nop
pop
push
bound
decb
dec
push
das
cmpsl
nop
add
mov
xor
xor
and
mov
jmp
mov
mov
jge
mov
repz
cmc
nop
inc
rcrl
or
stc
adc
mov
cmp
pop
pop
xor
in
lods
sub
xchg
fidivrl
mov
shlb
xchg
sbb
mov
sarb
das
test
adc
ljmp
mov
jg
mov
dec
scas
inc
ret
jb
xor
xchg
insb
jb
inc
test
je
ret
pop
popaw
inc
push
pushf
jno
adc
or
das
mov
std
jge
cld
pop
and
dec
jecxz
mov
sbb
inc
sbb
inc
leave
sbb
push
pop
mov
ljmp
in
push
adc
mov
mov
adc
or
pusha
or
fs
enter
test
popf
jb
add
or
adc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
mov
fdivrl
push
jo
jle
adc
pop
xchg
ret
adc
and
mov
stc
jae
aam
icebp
inc
addl
movsb
leave
popa
cld
add
out
jecxz
orb
out
jns
fidivs
sti
div
push
mov
out
jge
mov
xchg
repz
out
fldl
cmc
test
push
adc
sub
popfw
loop
inc
lds
icebp
aam
aaa
lcall
inc
sahf
mov
sub
xacquire
mov
aas
pop
adc
cmpsl
push
je
fisttps
sbb
sbb
sub
cs
mov
pop
fisubs
cmp
inc
fwait
push
adc
popf
and
bound
mov
xor
daa
les
mov
inc
hlt
outsb
cmp
and
in
popf
lea
fwait
cmp
int
dec
inc
testb
cmp
pop
jmp
enter
xchg
out
mov
and
stc
mov
leave
andl
subl
inc
push
je
je
mov
and
mov
adc
int3
mov
or
pushf
lcall
arpl
ja
cmp
loopne
cmpsl
push
mov
and
mov
test
dec
sub
movsb
push
aad
ds
scas
popf
adc
and
aad
mov
add
inc
cli
int3
jle
cli
pusha
test
xchg
pop
loop
adc
clc
pop
test
leave
sub
ljmp
mov
in
clc
mov
push
inc
xchg
push
xchg
scas
xchg
and
sub
sti
rclb
mov
mov
divl
mov
sbb
jns
jnp
mov
mov
dec
lea
adc
sbb
out
or
cmp
cs
sub
iret
jp
hlt
mov
je
ljmp
fcmovnu
jno
cmp
repnz
mov
xchg
mov
std
pop
cltd
inc
imul
pop
ja
cmp
dec
movsl
test
jae
push
and
inc
scas
sar
or
dec
aam
int
aad
out
jno
js
inc
dec
data16
inc
jecxz
mov
out
sub
ss
rcrb
jecxz
lock
sahf
jg
dec
sub
pop
mov
adc
mov
dec
lret
jp
lret
lea
xchg
shl
negb
pop
ja
mov
dec
inc
fsub
in
mov
es
jo
ja
or
adc
mul
sbb
into
popa
fsubs
cltd
cmp
cmpsl
push
sarl
jnp
jge
int3
mov
or
xchg
jb
int3
ds
sub
adc
fsts
nop
jecxz
sbb
hlt
lock
ss
mov
cld
fs
icebp
mov
and
jmp
out
xchg
imul
std
decl
stos
inc
fistpll
push
jo
jle
fcom
mov
push
mov
inc
jns
jmp
or
sub
mov
movsl
mov
add
imul
or
hlt
xchg
cs
push
lcall
cmpsb
jb
adc
push
sub
xchg
push
test
mov
mov
xor
cmp
adc
push
cmp
or
xchg
cmp
pop
xchg
es
idivb
aaa
in
cmp
adc
cmp
mov
daa
inc
xor
sti
mov
jno
mov
mov
mov
pop
cltd
sub
mov
xlat
jmp
imul
aad
scas
push
adcl
or
repz
pop
ficompl
sub
add
fstl
mov
movsl
inc
cmp
or
push
lock
lret
mov
std
or
mov
xchg
ja
mov
mov
sbb
lret
das
popf
lods
call
fldl
sub
outsb
popa
cld
enter
mov
mov
insb
lret
ds
leave
mov
push
jle
mov
add
sub
stos
out
cmp
xor
adc
xor
es
sub
jno
push
pop
xchg
jmp
sub
lods
out
out
add
cmpl
es
sub
push
shlb
pop
mov
cltd
ljmp
jge
mov
jge
test
pop
fsts
mov
lea
es
cli
loopne
xchg
insb
xor
xorl
ja
cmpsl
scas
xor
sbb
sahf
pop
mov
xchg
sub
pop
sub
mov
cld
test
sar
mov
mov
adc
test
dec
xchg
cmp
xor
push
cmpsb
insl
outsl
add
loopne
xor
and
imul
xor
jne
sahf
or
imul
movsb
fdiv
lods
inc
es
dec
movsl
push
sysexit
push
mov
je
test
mov
add
push
push
jmp
stc
lds
addr16
xor
add
or
push
pop
sbb
pop
sbb
add
shll
mov
mov
push
adc
cmp
arpl
mov
out
shll
and
mov
push
in
jbe
je
int3
sub
add
fwait
movsl
xor
int
jle
addl
push
ret
js
push
sbb
sub
loop
push
mov
sub
shrl
rcr
pop
out
mov
int3
xchg
call
leave
sbb
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
es
jg
jle
xchg
jbe
sub
decb
sbb
fistl
testl
leave
xchg
add
xchg
mov
inc
or
mov
hlt
rcll
sbb
sbb
cwtl
inc
sbb
add
push
jo
mov
lods
sub
shl
inc
test
out
insb
inc
sahf
dec
cmpsb
imul
outsb
fidivl
dec
or
ss
scas
xchg
pop
adc
clc
adc
mov
or
sahf
jge
cmpsb
repz
lret
cwtl
movsl
adc
enter
or
ljmp
shll
dec
sbb
dec
out
push
sub
jle
add
stos
push
pop
int3
xchg
or
fisttps
pop
adc
mov
jge
and
cs
ljmp
cmp
cld
movsb
lods
es
std
icebp
test
cmpsb
dec
pushf
jnp
stos
push
push
in
ds
lret
lock
negl
mov
int
jbe
stos
add
ja
push
movsl
inc
iret
pop
mov
scas
test
mov
sbb
pop
cmp
fdivs
jl
jns
sti
jnp
into
pusha
cmp
sub
and
aam
and
lret
ss
xchg
enter
pop
mov
shlb
mov
mov
adc
imul
push
out
cmp
or
call
imul
scas
sub
push
jecxz
or
mov
cmp
pop
mov
and
test
jns
insl
adc
inc
add
pop
das
jl
movsl
aam
and
fnstsw
clc
pop
lret
jl
add
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
jnp
in
mov
jle
inc
jg
jle
or
dec
sahf
shlb
xchg
or
sahf
sub
adc
mov
hlt
xor
loope
rcr
or
pop
sub
cli
mov
mov
inc
ficomps
push
movsb
pop
mov
movsl
pop
fmul
push
mov
and
adc
lret
das
hlt
pop
imul
lea
fwait
dec
inc
shl
jp
or
xchg
add
mov
fiaddl
pop
fdivs
out
cmpsb
loopne
sbb
ds
scas
mov
inc
sub
and
adc
cmpb
mov
cmp
rcrl
repnz
inc
cmp
push
loopne
imul
mov
insb
cwtl
ret
jo
pop
inc
idivb
sahf
cwtl
push
int
jnp
cmpsb
aad
mov
push
sub
inc
add
xchg
push
je
add
pusha
xor
pop
call
mov
jno
jle
sub
inc
or
inc
pop
sub
sub
push
xor
adc
or
mov
aaa
lods
mov
in
mov
loope
rclb
iret
pop
mov
adcb
mov
cmp
clc
mov
xchg
sti
mov
xor
stos
fwait
mov
dec
mov
fs
xchg
push
push
call
sub
bnd
mov
subl
jbe
sbb
push
addr16
call
lods
hlt
out
leave
andb
push
and
rorl
scas
mov
mov
sarb
pushf
sbb
mov
stos
insl
mov
inc
nop
cld
dec
out
call
mov
fisubs
sub
cmc
xor
add
leave
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
ret
stc
xlat
xchg
push
xchg
pop
mov
popa
sub
push
jb
xor
add
fs
lcall
mov
pusha
adcb
call
mov
lock
popf
inc
push
stos
fxam
popa
insb
test
inc
in
daa
cwtl
jno
pop
ds
in
je
cltd
push
sbb
sbb
inc
stc
inc
xor
sub
imul
stc
in
sbb
mov
jns
inc
sbbb
fs
icebp
clc
arpl
lahf
sti
popa
push
adc
sahf
mov
mov
pop
lcall
pop
xchg
jbe
and
push
test
adc
fisubrl
xorb
sub
daa
push
mov
jnp
xchg
ss
out
cmp
pusha
mov
push
cwtl
adcl
dec
sub
in
cmp
enter
sbb
fsubs
arpl
in
adc
push
xchg
and
insl
fwait
data16
xchg
addr16
repz
mov
nop
mov
or
xchg
ficomps
pusha
pop
lcall
or
insb
mov
es
notl
cmpsb
adcl
std
arpl
sub
addl
or
stos
repnz
mov
sub
cmp
and
jmp
js
sti
scas
outsb
mov
cld
sub
add
imulb
xor
mov
xchg
or
cmp
loope
add
jno
sub
and
lock
mov
mov
pop
ret
int
lods
imul
lods
xchg
or
shrl
aam
fs
jge
lret
add
aas
outsb
and
mov
aam
inc
mov
xlat
jns
cmp
and
div
jbe
test
lret
pop
les
add
popf
sbb
xor
cmpsb
mov
add
jecxz
notl
scas
dec
insl
paddw
xorb
xor
sub
in
cmp
mov
mov
and
jnp
int3
inc
xor
push
leave
movsl
and
ret
dec
punpcklwd
cmp
cmpsl
push
popa
outsl
xchg
test
sub
inc
or
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
sbb
fbstp
jle
fwait
mov
pop
xchg
sbb
in
in
cli
mov
das
loop
push
or
lods
fnstsw
cwtl
xor
mov
pop
inc
fidivrl
inc
push
fstps
jecxz
out
ret
sub
jae
jbe
std
xchg
mov
cld
mov
jg
pop
leave
je
imul
cmp
or
sbb
mov
test
push
or
xor
push
xchg
cwtl
enter
pop
pop
test
rcrb
mov
cmp
nop
xchg
fstpt
aaa
push
loop
dec
jnp
sarb
subl
aad
or
adc
in
jg
cmp
mov
scas
and
and
mov
fcomps
dec
and
lret
sbb
push
push
loope
push
iret
xor
sbb
or
hlt
aad
stos
xchg
pusha
es
cmpsl
and
shrl
cli
lock
lret
mov
insl
rolb
inc
cmpsl
xchg
add
jns
xchg
inc
fisttpll
stos
out
xchg
sahf
movsb
es
int
cmc
push
inc
pop
sub
addr16
sbb
jo
popa
cwtl
outsb
or
into
lcall
mov
mov
ret
xchg
mov
mov
mov
inc
out
int
inc
shlb
stc
clc
mov
jb
sbb
std
pop
pop
xor
and
mov
jle
arpl
sti
mov
sub
lcall
aad
jp
inc
push
jo
test
int3
sbb
mov
push
stos
es
jbe
sub
cli
mov
pop
fstl
lods
adc
xchg
or
mov
into
xchg
pop
and
jecxz
fistps
ret
add
cmp
dec
mov
je
lcall
mov
cmpsl
xor
push
and
push
out
ja
ss
push
popf
popa
aas
adc
jle
sarb
imul
jno
call
and
cmp
int
jle
dec
imul
lds
cltd
data16
mov
scas
aas
in
ret
mov
std
sub
xor
leave
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
and
fcoms
jg
jle
xchg
andl
mov
xchg
dec
push
imul
mov
mov
fwait
jb
js
sub
cmp
xor
mov
and
cmp
iret
ret
cmp
inc
or
adc
imul
jae
jge
imul
push
sahf
stos
add
cltd
xchg
add
jns
cmpsl
insl
mov
inc
mov
pop
shlb
cmp
jecxz
into
push
fnstsw
jb
jb
mov
jb
push
ss
and
jne
sti
icebp
fcompl
inc
repz
push
cs
mov
cmp
inc
scas
add
cmp
pop
in
cld
pushf
ja
cs
lds
subl
pop
inc
sub
pop
pop
jns
cwtl
and
push
dec
decb
iret
js
push
cmp
inc
jg
pop
or
or
jb
mov
pop
xchg
and
pop
xchg
push
and
stos
lcall
sub
and
gs
mov
push
dec
pop
mov
repz
push
pop
insb
mov
pushl
mov
push
fst
add
cld
into
mov
aas
out
lahf
cmpsl
inc
sbb
dec
and
fmull
lds
lock
inc
cmp
push
fs
or
es
jb
dec
mov
loopne
ret
inc
pushf
xchg
jge
mov
xchg
push
mov
cmpsb
xchg
enter
jp
test
pushf
xchg
cltd
add
lods
mov
bound
pop
scas
rcl
cmc
pop
adc
das
adc
push
xlat
cmc
loop
add
mov
lds
stc
push
pop
sbb
pop
fnstcw
mov
outsb
ffreep
inc
mov
aaa
jb
shlb
cmp
mov
inc
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
push
pxor
jle
pop
jg
jle
inc
inc
gs
xor
insb
je
pushf
cmp
clc
std
outsl
lds
fnstcw
jnp
mov
mov
inc
cmpsl
mov
test
enter
popf
add
sarl
adc
outsb
lret
cmpsb
cmp
xchg
cmp
cwtl
push
incl
cmp
mov
mov
mov
fbstp
jmp
jg
jg
dec
xchg
adc
cli
dec
hlt
xor
pop
cli
xchg
into
mov
dec
test
mov
lret
mov
negl
sub
jg
sbb
jae
add
mov
jmp
sbb
inc
sbb
adc
push
fsubp
aam
ret
mov
out
pop
bound
xchg
mov
adc
add
adc
cmpsb
mov
jle
loop
xchg
out
sahf
ds
call
ss
dec
ret
or
xorl
xor
or
xchg
inc
mov
shll
outsb
mov
stos
add
ret
mov
lods
insl
cmp
sub
ror
fsubr
loopne
nop
pop
js
shrb
mov
jnp
aam
stc
lock
mov
icebp
lret
dec
aam
cmp
orl
sbb
fcompp
ja
pop
and
into
cmc
mov
adc
adc
add
jp
mov
sbb
xor
test
ret
jmp
gs
dec
shr
movsb
push
xor
es
jns
push
leave
inc
fmuls
mov
std
xor
loope
mov
subl
icebp
fcmovu
bound
aas
pop
or
faddl
js
mov
cmp
xor
clc
xchg
xchg
mov
imul
mov
daa
or
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
outsl
push
out
jle
pop
jg
jle
test
push
or
pop
and
push
leave
ljmp
lods
fs
insb
test
pop
xchg
mov
xor
mov
ja
mov
fcomps
jnp
cld
xchg
mov
xor
clc
lds
push
fisubrl
jmp
fidivs
ret
push
out
jo
and
cwtl
xchg
mov
push
mov
mov
outsb
jge
lock
xor
sbb
xor
push
or
jl
mov
adc
incl
xchg
rcr
arpl
xor
mov
addb
lods
dec
aaa
ja
xchg
pop
sub
adc
out
decl
mov
rcrl
insb
nop
rcll
out
mov
cmc
mov
mov
mov
and
jae
sbb
movsb
call
mov
adc
inc
loopne
and
movsl
iret
sub
jno
pop
daa
cmp
pop
adc
scas
adc
sbb
popa
data16
rcrb
lods
scas
push
dec
sti
int3
nop
sbb
mov
popa
mov
loope
dec
jno
fabs
scas
adc
inc
mov
movsl
into
push
sub
lret
inc
cmp
pop
dec
push
push
add
xor
incl
or
popf
pushf
scas
rolb
imul
dec
push
pop
loope
or
ret
fisttpl
out
jnp
push
adc
insb
or
inc
cld
nop
add
negb
jmp
icebp
movl
int
aam
sbb
loopne
jae
mov
addr16
js
xor
arpl
mov
jle
add
stos
mov
inc
arpl
xor
fcmovne
rclb
lock
out
leave
sahf
lret
movsb
pushf
fldcw
scas
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
fbstp
jle
jg
jle
rcr
fsubrp
loopne
or
adc
inc
imul
mov
inc
or
inc
or
mov
imul
mov
sti
jecxz
xchg
cmpsb
xor
daa
or
or
push
mov
add
ss
ret
inc
lret
fildll
xchg
pop
aaa
add
jle
arpl
cld
je
lret
push
andb
xor
xchg
out
dec
repz
xchg
cmpsl
ret
push
fisubrl
loopne
outsb
pop
sub
dec
lret
mov
push
pop
hlt
js
cltd
fbstp
dec
jns
dec
sub
push
jge
dec
insb
cmp
pushf
push
dec
fnstcw
sub
cmp
or
clc
sub
popa
or
insl
inc
mov
lea
add
push
or
pop
testb
inc
js
xchg
shrb
js
aas
lret
xor
push
outsl
sbb
in
sbb
ret
insb
xchg
sub
into
or
or
jo
insb
insl
dec
jb
sub
rclb
lods
inc
or
movsl
pop
out
cli
or
push
cmpb
jl
int3
das
loop
and
out
xchg
jp
mov
jecxz
xor
add
repnz
and
push
aam
aad
jns
jb
lret
leave
xor
rol
push
pop
pop
xlat
adc
hlt
xor
ljmp
negb
and
sbb
mov
xor
out
or
pop
and
pop
cli
cmp
out
lock
mov
push
pop
ss
xor
out
add
sub
cld
fs
cmp
notb
add
jmp
push
and
mov
mov
and
xor
call
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
shl
popf
loop
jle
jg
jle
pushf
xor
rol
stos
sbb
xor
out
mov
or
movsl
and
sub
inc
test
push
and
loope
mov
ret
pop
fcoms
jb
push
notb
push
mov
cmp
shll
lea
mov
mov
sarl
xlat
adc
out
jp
call
or
mov
std
sbb
scas
xchg
clc
jmp
mov
rcll
lds
imul
ficomps
mov
jno
xor
aam
or
mov
std
imul
out
sbb
enter
mov
mov
mov
leave
adc
xor
mov
cltd
loope
cmp
sahf
dec
lahf
and
cwtl
lods
cwtl
movsb
push
out
push
fdivrs
sahf
in
mov
and
int
xchg
ds
jae
sub
lods
cltd
dec
ljmp
in
cmpsb
inc
mov
cmc
jbe
jne
imul
xchg
repz
das
ss
push
pop
stc
xchg
inc
fs
dec
outsl
inc
cmp
cld
cmpsb
xchg
pop
sbb
push
adc
jo
pushf
shll
dec
inc
or
adc
xor
push
ret
xchg
cld
inc
aaa
call
imul
loope
fiadds
cmp
arpl
sar
aam
pop
sbb
loop
sbb
int3
dec
mov
jno
or
lret
loopne
cmp
push
nop
add
cmp
incb
jge
push
sbb
std
mov
leave
scas
in
mov
mov
mov
xchg
es
or
mov
pop
sub
jecxz
movsl
pusha
xchg
in
sub
add
xlat
lahf
cmpsl
es
mov
movsl
sub
inc
xchg
push
pop
popf
mov
pop
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
enter
sti
in
jle
jg
jle
inc
and
and
xor
jl
mov
arpl
mov
jecxz
pop
xor
das
testb
imul
jle
out
pop
pop
std
xor
enter
negl
lock
sub
mulb
test
clc
push
xor
xchg
cmp
scas
sub
cwtl
xchg
cltd
inc
fbld
jmp
loop
sbb
fcomps
gs
pop
imul
leave
arpl
lahf
sarl
push
adc
dec
jl
jbe
clc
ficomps
inc
outsl
lea
test
mov
in
xchg
out
and
fdivs
inc
mov
insb
or
push
je
imul
out
sub
mov
mov
add
ret
or
mov
in
scas
pop
pop
int
and
imul
cltd
cmp
lds
shlb
mov
adc
icebp
dec
shl
push
sahf
jne
mull
or
lea
cmpb
sub
cmp
outsl
xchg
in
add
rcll
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
sbb
aas
jg
jle
jmp
imul
out
roll
outsl
xchg
fists
jbe
mov
fisubrs
shl
add
mov
fdivr
inc
ss
jbe
hlt
repz
int
mov
and
lock
jnp
repz
fstpl
scas
mov
xchg
inc
fnstcw
fldcw
fs
jne
and
pop
add
cmp
imul
or
push
dec
gs
inc
clc
xchg
fmul
js
push
push
push
xor
pop
pop
and
loop
out
leave
xchg
pop
fsubl
mov
mov
outsb
mov
out
jbe
xorb
or
push
or
shlb
push
repz
je
repz
fsubs
jl
int
push
mov
and
fcom
imul
mov
imul
cs
pop
fdivrl
mov
cmp
pop
in
and
add
movsl
frstpm(287
in
pop
sbb
bound
xchg
imul
arpl
fs
mov
and
outsb
idivb
inc
ret
outsb
cwtl
sub
mov
inc
add
inc
push
inc
add
pop
add
add
xor
pop
xchg
lods
mov
out
jge
jle
aas
jg
jle
insl
cmpsl
movsb
push
sbb
xchg
loop
cmpb
dec
imul
push
cltd
pusha
hlt
and
mov
sub
adcb
lcall
mov
loopne
aad
gs
rolb
clc
gs
sbb
jbe
aad
mov
loope
dec
subl
jl
add
jecxz
lods
dec
mov
in
pop
xor
in
jle
dec
imul
push
and
mov
lcall
xorl
adc
jmp
lret
icebp
mov
xor
add
dec
repnz
adc
movsb
popf
ljmp
mov
pop
pop
mov
push
outsb
ror
mov
movsb
cmp
mov
inc
lret
add
jmp
push
fbld
push
xor
mov
outsb
jmp
push
repnz
mov
loop
cltd
in
sub
push
lcall
pop
pop
out
sub
adc
mov
mov
mulb
inc
arpl
pop
pop
cltd
test
jecxz
in
fnstcw
jne
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
adcb
mov
clc
jle
aas
jg
jle
addr16
scas
addb
fisubs
addr16
sub
mov
cwtl
addb
outsl
fiadds
xor
aas
icebp
push
lods
mov
icebp
sub
in
test
call
ljmp
popa
mov
out
loop
fs
xchg
jl
cmpsl
nop
mov
scas
adc
inc
dec
jae
cmpsl
sahf
mov
scas
add
jge
inc
adc
lock
adc
mov
popa
push
ljmp
ljmp
lahf
xchg
xor
fcomps
xchg
cmp
addr16
jg
pop
cmc
adc
dec
clc
pop
mov
sahf
iret
std
cmpsb
mov
movl
mov
xlat
add
pop
jge
fldenv
push
roll
faddp
repnz
pop
idivb
gs
pushf
add
sub
es
int
cmpl
icebp
test
into
mov
in
out
mov
cli
movsl
push
push
jns
jb
dec
adc
sub
lret
popf
std
enter
lods
push
js
je
or
je
mov
popa
pusha
call
jle
aad
pop
inc
pusha
jecxz
mov
nop
call
cmp
ret
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
push
stc
jle
aas
jg
jle
lds
mov
pop
sub
lods
push
jne
pop
push
stc
xchg
sub
mov
mov
lcall
ret
adc
pop
ds
stos
or
add
push
sbb
mov
push
jbe
add
cmp
out
inc
outsl
vaddps
and
inc
into
pop
in
rcrb
xor
jbe
and
scas
inc
pop
icebp
cli
inc
outsl
fiadds
loopne
sarl
mov
aas
pop
xor
push
sub
lds
jno
call
push
in
and
mov
push
lcall
inc
add
cmpsb
int
lock
sbb
inc
dec
push
add
test
das
paddb
push
cwtl
xchg
mov
in
cmp
add
mov
xor
mov
je
push
sbb
popf
insl
adc
stos
test
lret
shlb
xlat
cli
notl
aaa
stos
xor
icebp
shll
xchg
jns
insl
jp
jl
pop
imul
cmp
sti
lcall
movsb
jge
mov
scas
repz
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
or
jle
jg
jle
mov
ret
inc
pushf
push
std
das
adc
rorl
dec
decl
or
push
gs
lods
sbb
fucomp
loopne
or
lret
sub
cli
popa
or
shlb
call
in
hlt
cld
sbb
push
inc
cwtl
sub
and
and
sub
aam
pop
mov
fisubl
insb
lret
adc
mov
aam
push
aaa
adc
movsl
mov
mov
sbb
sbb
aam
mov
cmpsb
adc
sarl
adc
in
lods
or
daa
popf
mov
iret
pop
jne
inc
inc
pop
sbb
mov
jecxz
push
jb
cld
lcall
int
mov
aad
xchg
imul
xchg
push
xchg
dec
jmp
stc
pushf
aaa
push
mov
mov
xlat
arpl
in
push
icebp
cmp
pop
pusha
push
xor
addl
or
inc
mov
call
cs
mov
stc
arpl
into
sbb
inc
xchg
fs
dec
lcall
addr16
mov
test
xchg
push
push
jecxz
mov
out
dec
mov
mov
sbbl
jmp
fmull
cld
popf
mov
scas
out
push
push
jno
jle
aas
jg
jle
pop
dec
lock
loop
cmp
jbe
mov
push
arpl
jnp
cmp
cmp
pusha
push
test
xor
icebp
mov
push
mov
mov
bt
inc
xchg
popa
mov
lret
ret
addr16
sub
data16
jl
mov
mov
repz
in
fucomp
mov
sahf
sub
scas
sbb
xchg
mov
push
frstor
iret
addb
mov
dec
inc
and
or
sub
push
call
fs
iret
or
std
iret
loopne
hlt
add
dec
mov
fdivrl
cli
push
xchg
xchg
push
sub
push
mov
mov
fildl
ljmp
das
add
push
test
fpatan
cmpsl
nop
pushf
mov
idivb
repz
in
xchg
mov
sahf
sbb
xchg
lahf
inc
ret
shlb
jnp
xchg
and
mov
int3
mov
cmpsl
mov
fistl
push
mov
in
pop
int3
or
stc
xor
imul
shlb
inc
xchg
dec
aas
inc
jmp
int3
cs
insb
push
add
mov
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
into
push
mov
xor
jle
aas
jg
jle
mov
nop
jne,pt
aaa
mov
out
pop
mov
jne
push
je
shll
cmp
xchg
pop
push
in
push
rcl
enter
les
mov
push
pop
mov
push
les
mov
mov
scas
cmc
ret
out
cltd
dec
call
sbb
nop
mov
ds
das
inc
das
daa
push
jge
std
pop
popf
jo
push
icebp
xor
or
shlb
movsl
and
fidivrs
mov
adc
jmp
fld
cmpsl
loope
aaa
sub
mov
xchg
testl
dec
lock
dec
cmc
xor
addr16
mov
fsub
xor
pop
fwait
mov
fidivrl
and
filds
ja
dec
je
xchg
cmc
cmpsb
push
jno
cmc
sbb
outsl
dec
int
jecxz
movsl
xchg
or
inc
or
jae
loopne
pop
jns
cmp
jmp
imul
int3
scas
movsl
adcl
inc
cmpsl
rorl
mov
inc
sbb
dec
test
mov
lds
pop
mov
sbb
lret
aas
sub
add
loop
adc
pusha
inc
js
test
dec
in
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
mov
fsubs
notl
push
mov
sahf
popf
or
pop
clc
lds
mov
xor
in
scas
lds
xor
sarl
xor
cltd
sbb
cs
add
int3
fadds
push
mov
lcall
mov
out
leave
xchg
push
mov
sub
popf
add
xor
adcl
jge
jmp
dec
test
dec
notb
test
push
push
loope
in
adcl
dec
jo
iret
popf
mov
jge
daa
push
cmp
sub
cmp
xchg
xor
pop
lds
or
mov
mov
or
pop
fadds
es
push
cmpsb
sub
cmp
fnsave
pushf
ljmp
stc
aam
mull
in
ljmp
xchg
insl
shll
scas
sub
xchg
push
clc
lock
adc
mov
rcr
insl
pushf
push
outsl
hlt
add
insb
xor
test
mov
pop
xor
imul
daa
int3
mov
das
push
mov
push
xchg
int
xchg
in
and
sub
push
insl
or
lea
jmp
and
and
sti
jae
fdivr
mov
jle
aas
jg
jle
fs
inc
mov
movsb
xchg
insb
lahf
stos
ja
dec
add
ret
lahf
incl
leave
ret
lock
js
cmpsb
lcall
jns
lahf
imul
outsl
out
sbb
jne
jnp
push
push
data16
push
xchg
xchg
daa
hlt
mov
es
lret
mov
inc
hlt
adc
jo
jbe
mov
insl
jge,pt
imul
sub
in
fidivrs
adc
inc
push
in
jge
cld
inc
repnz
xchg
sub
jl
leave
mov
addr16
ficomps
outsb
adc
cmp
stos
out
dec
xchg
pop
shlb
fsin
iret
inc
cli
adcb
mov
dec
sub
mov
or
jle
daa
inc
loope
loopne
lret
fidivrs
std
das
int3
in
std
sti
es
movsl
and
fwait
add
mov
bound
jae
xor
add
fwait
sub
out
xchg
nop
fs
lcall
cmp
ret
loop
cltd
pop
add
ret
cmp
fiaddl
add
push
into
insl
das
mov
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
out
data16
fsubr
push
addr16
and
mov
xor
clc
adc
testl
sahf
adc
mov
push
jo
pop
sub
adc
jno
add
xor
repnz
addr16
mov
mov
aam
pop
sbb
and
xchg
lea
lods
xor
mov
sbbl
mov
mov
enter
xchg
or
mov
inc
and
xchg
add
enter
sbb
call
notl
inc
arpl
mov
xchg
fbstp
add
fstps
push
sub
pop
into
mov
les
mov
pop
xchg
jl
add
or
mov
sub
jge
jmp
cmc
sbb
add
inc
ss
sti
mov
or
int
std
les
insb
lods
cld
sub
daa
fnsave
bts
pop
jl
rcrl
lods
inc
and
sbbl
sti
mov
sahf
loopne
sbb
je
fbstp
inc
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
sbb
jo
ss
aas
jg
jle
sarl
lret
sub
outsb
sbb
leave
cwtl
cmp
or
mov
xchg
jle
push
xchg
adc
ja
pop
inc
aad
xorl
rcrb
es
shrl
xchg
pop
push
fsubp
arpl
pop
sbb
fadds
push
int3
pop
cmp
dec
ret
push
mov
mov
cld
adc
push
sbbl
in
sti
movsl
adc
pop
dec
push
stos
jo
mov
lea
mov
in
xchg
imul
mov
jle
bound
jle
pop
mov
push
cmp
and
fsubp
in
rorb
popf
stos
dec
sbb
pusha
mov
call
into
clc
sbb
js
ds
jmp
repz
insb
inc
xchg
rorb
aad
scas
sbb
cmp
je
mov
std
pop
mov
mul
and
cmp
sub
jb
xchg
mov
lock
mov
movsl
adc
inc
mov
jg
inc
and
cmpsl
xor
jg
push
inc
mov
lcall
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
adc
icebp
hlt
inc
jae
dec
push
jg
pushl
lods
cmp
lcall
and
mov
movsb
mov
fldcw
lods
aas
fimull
dec
repz
xor
imul
mov
fsubr
rcrb
xchg
mov
insl
push
mov
xchg
rcrb
or
pop
adc
push
mov
addb
mov
std
imul
lahf
fwait
push
fcompl
mov
je
insb
cld
or
adc
xor
add
out
push
inc
rcr
xchg
mov
movsb
mov
jmp
gs
popa
dec
icebp
std
push
ret
and
or
push
dec
sbb
mov
dec
ror
xor
idivl
xchg
push
int3
mov
imul
sbb
sub
mov
in
cmpsb
jp
sbb
push
movsb
out
mov
faddl
arpl
mov
and
cmp
fadds
push
test
rcrb
leave
add
dec
out
sbb
lret
shlb
aam
das
cmp
sub
cld
enter
add
add
xchg
inc
sbb
lods
lret
movsl
sub
movsb
dec
hlt
jle
aas
jg
jle
cs
pop
jns
enter
push
inc
cmp
dec
outsl
push
idivb
rcll
and
add
mov
negl
cwtl
mov
ret
stc
popf
addr16
cmovb
push
sbb
xchg
sbb
inc
push
inc
pusha
xor
jnp
pop
pushf
enter
mov
in
syscall
ret
loopne
push
mov
xchg
testl
lds
mov
fs
cmp
adc
cld
pop
push
imul
pop
test
push
sbb
mov
xlat
dec
pop
sub
out
sub
mov
xchg
repz
dec
add
stos
nop
lret
inc
arpl
mov
cmpsb
cli
mov
shll
insl
fsubl
mov
add
out
std
jo
notb
call
inc
mov
xor
and
or
pop
cmp
popf
nop
push
inc
add
inc
movsl
test
sub
xchg
inc
ja
adc
shlb
cmp
push
jno
les
inc
notb
lea
clc
ja
add
adc
insb
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
aaa
inc
fs
jle
aas
jg
jle
cmp
xchg
cwtl
cmp
mov
jg
sbb
sub
inc
jb
jbe
movsl
enter
mov
popa
imulb
or
fdivrl
sarl
pop
leave
mov
or
incb
test
add
ljmp
pop
jo
inc
inc
test
push
mov
pop
inc
pop
push
and
or
in
dec
cmp
adc
jae
leave
in
jecxz
mov
ss
push
fwait
test
mov
push
stc
mov
sbb
das
mov
hlt
xchg
mov
push
mov
lret
xor
dec
fwait
test
fisubrl
push
xor
ret
mov
inc
inc
call
xor
lods
mov
fimuls
pop
outsl
pop
std
mov
mov
or
std
insb
in
push
lahf
insb
adc
mul
cmp
lods
jle
fsubr
cli
iret
pop
jl
in
fbstp
or
lcall
cmpsb
clc
push
adc
push
dec
jl
icebp
sahf
xor
repnz
repnz
fs
mov
das
mov
push
or
jmp
test
test
jge
cmp
mov
jle
jg
jle
popa
imul
cmc
sbb
add
les
and
push
out
sbb
jnp
bound
insb
gs
notl
xchg
mov
inc
imul
adc
dec
or
aam
xor
jb
test
dec
in
or
in
ret
lock
cwtl
sub
pop
loop
or
push
mov
in
aas
frstor
jae
inc
xor
mov
cmp
leave
sub
in
je
dec
xor
jmp
jp
repz
inc
jnp
adc
mov
pop
xchg
popa
add
xor
xchg
mov
cmc
in
ljmp
adc
mov
aas
sub
jnp
ret
xchg
add
push
fldt
xchg
dec
out
dec
and
in
loopne
bound
sub
xlat
fs
lock
dec
xor
sub
add
add
in
test
jl
adcl
mov
mov
orl
mov
jne
movsl
cmp
roll
xchg
testb
adc
cwtl
push
xor
mov
add
jmp
mov
or
lods
jge
out
mov
push
decb
jg
jle
pop
adc
cli
stos
mov
shrl
adc
test
jne
adc
call
lcall
jne
shlb
jns
data16
lock
cmpsb
js
dec
scas
mov
loop
mov
mov
mov
scas
jg
dec
ffree
push
xchg
fdivl
mov
mov
dec
fldcw
ss
or
fnstcw
inc
mov
pop
sbb
mov
push
sbb
jbe
imul
push
sub
test
icebp
cwtl
and
cli
jbe
jmp
inc
xchg
dec
jns
popl
popf
dec
gs
popf
inc
stos
or
bndstx
nop
or
dec
aad
test
scas
jne
fdivrs
push
es
cmp
fs
jecxz
mov
adc
std
fidivrs
fcompl
mov
inc
add
rolb
cmpsb
mov
scas
mov
cmp
add
mov
and
dec
mov
test
in
jno
sub
fwait
pop
push
pop
pop
add
cmp
push
lahf
xchg
inc
call
mov
imul
mov
jmp
inc
sbb
gs
jae
push
jb
add
mov
aas
jg
jle
cmc
jne
ret
mov
mov
idivb
stc
stos
or
cmpsl
mov
stos
aam
push
fisubrl
fdivrs
mov
mov
cltd
mov
inc
dec
stos
pop
jl
add
sub
imul
inc
add
jne
popa
sub
mov
sbb
ja
loop
adc
mov
adc
xor
fwait
xchg
rcll
or
idivl
push
stc
xor
mov
aad
dec
dec
mov
out
rolb
jno
loope
dec
jmp
add
add
inc
test
push
push
test
xlat
and
dec
push
nop
push
dec
fptan
in
mov
jp
shll
sbb
add
sub
nop
dec
pushf
pop
push
int3
movsl
push
xchg
inc
mov
inc
and
xchg
out
inc
test
mov
lods
cmpsb
jl
pop
addr16
push
in
out
mov
inc
xor
fdecstp
pusha
sahf
xlat
jmp
ficomps
outsl
or
in
adc
daa
jecxz
jp
dec
dec
xor
das
add
xlat
into
push
adc
pushf
mov
pushf
pusha
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
addb
fimuls
jg
jle
cmp
fcmovu
pop
mov
divl
in
push
cmp
icebp
cltd
aaa
and
fstps
pop
les
repz
scas
popw
jo
shlb
shlb
add
imul
mov
jno
fildll
sbb
push
in
cs
jae
add
push
sbb
sbb
push
enter
jmp
movsl
sbb
ja
adc
add
clc
hlt
xor
lds
in
xor
cs
add
scas
sub
mov
movb
jle
xlat
jl
repz
mov
jg,pn
mov
push
pop
cli
loope
lret
xchg
dec
sti
pop
ret
cmp
adc
ret
push
out
loopne
nop
pop
imul
pop
popa
jbe
jg
xchg
pop
jg
adc
sub
push
or
mov
fmul
jno
push
mov
adc
xchg
xchg
jnp
and
xlat
xchg
xlat
mov
stos
cld
xor
arpl
scas
stc
jo
mov
sarb
out
stos
and
jle
shl
xchg
mov
inc
ffree
mov
jb
add
fmull
call
rorl
add
call
add
adc
jecxz
jnp
aad
lock
in
mov
into
mov
aas
jg
jle
shlb
dec
add
rclb
test
cmp
mov
cmp
cld
and
add
aaa
jmp
test
aad
and
jae
pop
or
dec
aaa
mov
cmpsl
lods
push
cltd
jg
jle
ds
stos
shrb
nop
loopne
in
dec
aaa
jno
dec
jmp
sbb
cmp
mov
repz
sbb
push
jne
xor
mov
and
ret
stc
outsl
pop
clc
jb
clc
pop
mov
pusha
xor
xlat
and
xchg
jg
jb
pop
iret
fnstcw
cmp
lods
imul
icebp
adc
out
mov
stos
cli
dec
inc
add
pop
std
daa
outsb
mov
xchg
or
jmp
fstps
sti
pop
insb
js
jle
xchg
bound
and
cs
fsubr
mov
movb
cld
insb
mov
jg
and
int
or
notb
sbb
cmpsl
push
stc
fisubs
adcl
pop
or
shlb
addr16
cltd
cmp
ljmp
dec
sub
jno
mov
mov
pop
xchg
out
subb
call
sbb
mov
lods
cli
adc
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
notl
jle
jg
jle
mov
icebp
cmp
and
es
fdivrp
push
mov
dec
jle
fmuls
outsl
mov
cmc
psadbw
or
repz
cmp
xor
mov
cmp
loope
sbb
clc
mov
dec
mov
rclb
pop
nop
push
mov
les
stos
sub
fstpl
mov
xchg
loop
adc
lret
push
cmp
xchg
test
dec
jb
test
mov
enter
imul
sub
cltd
aas
and
pop
jns
xlat
cmc
cmc
mov
sub
lea
shrl
or
fsubrs
scas
add
xchg
sbb
push
repz
dec
jno
cli
aas
aad
or
or
dec
pop
push
mov
pop
pop
sbbl
es
movsl
aad
inc
push
fucom
jb
mov
pop
enter
push
xchg
mov
sbb
ret
sub
push
repnz
xor
dec
cmp
pop
sub
xorl
lahf
cmp
loope
div
in
pop
dec
jae
fmull
in
jne
xchg
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
jp
inc
mov
aas
jg
jle
pop
cmc
adc
xchg
push
inc
lcall
loope
or
xchg
fisubs
movsl
movsl
pop
out
adc
mov
and
test
call
repz
cmp
scas
out
jb
add
sub
sarl
das
adc
aam
sub
cmpsb
repz
jo
mov
xor
iret
xor
mov
mov
xchg
incb
pop
lahf
or
or
addr16
pop
adc
ds
mov
sub
or
inc
push
sti
cmpsb
mov
inc
mov
mov
and
and
or
inc
jl
ja
adc
pop
pop
xor
test
and
mov
lods
das
pop
icebp
shll
data16
push
lret
mov
jns
std
inc
dec
iret
xor
imul
push
adc
mov
enter
sub
aam
cmp
cmc
mov
in
mov
cld
mov
xchg
cmp
cmpsb
jno
outsl
jmp
push
loop
sbb
jl
push
fwait
mov
add
scas
xchg
fwait
mov
xor
mov
inc
push
or
sbb
jp
cs
ret
std
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
jnp
test
add
jle
xchg
cmc
scas
icebp
das
mov
mov
rcll
or
pop
test
lods
or
out
adc
out
dec
cld
cmp
inc
stos
cmpsb
sbb
cmp
insl
mov
push
mov
or
lea
xchg
sbb
mov
xchg
mov
inc
test
bnd
fnstcw
cltd
lods
jb
or
or
mov
int
lods
jne
outsb
or
addr16
mov
test
or
dec
das
pop
in
sarl
sti
jge
lea
mov
dec
rol
mov
lods
test
xchg
adc
xlat
sub
orb
dec
cmpsb
mov
clc
pop
pusha
bound
fstpt
dec
inc
push
js
pusha
shl
xor
adc
nop
gs
ljmp
xor
lahf
adc
pop
dec
mov
pop
push
outsb
push
repnz
sbb
sbb
mov
into
popl
adc
out
jb
and
xchg
pop
xchg
sahf
cmpsl
ret
mov
gs
push
dec
daa
sub
aaa
fwait
enter
and
imul
and
call
shll
fucomi
pop
add
add
arpl
imul
mov
cmp
aas
jg
jle
mov
mov
push
loop
inc
xlat
fsubs
and
popf
adc
mov
nop
sarb
sub
dec
inc
jge
loop
loop
mov
fiaddl
call
repz
push
mov
popa
mov
sub
test
sbb
fimull
stos
mov
ja
cmpl
stos
mov
stos
in
test
decl
xor
push
sti
xorl
test
xchg
ja
scas
fidivrs
loopne
push
cmpsb
dec
sbb
shrb
sub
inc
ds
xlat
adc
fwait
outsb
jbe
mov
mov
pop
test
inc
out
cmpl
cmpsb
jle
insb
std
fs
test
insb
psrlw
les
dec
in
xlat
ljmp
div
shl
incl
rorl
fldt
inc
xor
fbstp
xlat
inc
adc
jae
inc
pop
xor
cli
sahf
outsb
andb
popa
sbb
mov
push
cmc
cmp
in
or
dec
andl
sub
push
pushf
sbb
push
inc
jmp
jae
aas
mov
cmp
jecxz
lcall
jg
jle
mov
mov
shrl
in
pop
cltd
sub
ja
out
test
aad
loope,pn
fdivrp
clc
sub
mov
ret
lret
cld
std
scas
adc
xchg
mov
pop
ljmp
xor
negl
lds
inc
dec
adc
int3
or
loope
mov
jb
hlt
sub
jge
push
movsb
push
xchg
push
xchg
pop
dec
xor
and
clc
adc
fs
in
enter
and
jns
js
test
lret
sbb
dec
xchg
sub
lods
jecxz
scas
cmp
sti
mov
fwait
and
jb
scas
lds
fnsave
repz
fnstcw
inc
dec
sbb
cmp
shlb
dec
loope
inc
test
ret
push
mov
pop
testl
mov
fisttpl
xor
sahf
test
xchg
mov
mov
xor
mov
hlt
inc
outsl
aas
dec
xchg
jge
push
xchg
jb
add
enter
fwait
aam
add
pop
mov
mov
arpl
mov
pop
cmpsb
sbb
or
jns
shrl
cmc
mov
adc
inc
cmp
je
jmp
xchg
mov
mov
sbb
cltd
out
cmpl
jg
jle
push
xor
pop
mov
movsl
imul
pop
ret
lea
inc
mov
out
imul
xor
mov
test
and
aad
fwait
mov
out
mov
jo
data16
fwait
std
add
in
addr16
adc
test
xor
sbb
mov
lahf
jmp
lds
mov
lret
sbb
shl
insb
int
xor
add
outsl
mov
popa
rclw
ds
inc
push
cmpsb
roll
bound
cmp
adc
lods
dec
add
ss
jmp
insb
fnstsw
jecxz
loope
ret
or
paddq
mov
inc
enter
fstpl
and
xchg
pop
test
mov
mov
movsb
das
scas
mull
or
or
cltd
cmp
ja
out
in
mov
jle
mov
mov
cwtl
addr16
sub
ljmp
adc
in
add
ja
mov
adc
xchg
adcl
xor
pop
add
movsl
orl
pop
add
add
sti
lret
jns
rclb
pop
call
aas
jg
jle
sub
mov
push
xchg
int3
rcrb
pushf
and
mov
sub
out
jne
xorl
int
dec
ja
lret
push
pop
sahf
fiaddl
and
es
adc
lock
repnz
xchg
sub
movsb
dec
pusha
pop
and
add
and
lahf
idivb
nop
push
pushf
sub
movd
enter
xor
ficoml
lea
aas
cmpsb
mov
adc
repnz
repz
mov
enter
or
cltd
mov
inc
jb
add
and
or
popa
inc
popf
insl
cld
sub
roll
mov
out
pop
xorl
shrb
aad
test
push
xchg
cld
mul
imul
cmp
xor
scas
lods
pusha
ds
xor
mov
xchg
jne
lods
xchg
rcl
jp
fisubrl
negb
xchg
out
mov
mov
jge
dec
rcll
adc
sub
cmpsl
push
jb
out
stc
add
sbb
fmuls
sarb
in
mov
cmpsb
movswl
mov
mov
imul
push
pop
inc
xchg
jmp
ss
or
mov
jmp
add
xchg
aas
jg
jle
dec
scas
repz
or
jns
dec
xchg
lds
dec
jno
rcrl
rorl
adc
sub
adc
jns
call
mov
loope
in
andl
mov
mov
mov
mov
ret
cmp
insl
dec
icebp
cmp
es
loopne
adc
lock
sahf
mov
in
jle
add
jl
je
call
cmp
xor
jmp
push
jbe
push
sub
and
ljmp
xchg
inc
loopne
cwtl
adc
add
lret
in
inc
push
jmp
pushf
cwtl
dec
fsincos
cs
mov
je
cmp
cmp
mov
mov
mov
jns
jnp
loope
mov
int
out
mov
cltd
cmp
outsb
jle
inc
test
test
bound
pop
push
test
in
test
into
lds
inc
movl
test
and
push
adc
mov
outsl
out
dec
push
cmpsl
fstpl
addb
mov
pushf
mov
jecxz
inc
or
xor
sarl
sbb
movl
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shl
dec
in
lahf
xchg
jle
loop
and
and
fdivrl
test
aaa
pusha
sub
cwtl
xor
add
inc
sbb
push
jge
bound
add
sub
sub
hlt
in
push
add
loopne
push
loopne
jae
inc
mov
jmp
enter
lea
push
push
mov
xchg
adc
das
into
push
mov
push
jae
adc
or
push
movsl
das
adc
cmp
push
pop
test
mov
mov
add
ret
xor
sbbb
ljmp
sbb
in
mov
xor
push
push
pushf
jecxz
nop
imul
push
sbbl
and
stos
orb
cmpsl
jne
mov
je
mov
imul
jecxz
sahf
mov
les
pusha
jns
mov
cmove
or
into
cld
mov
add
xchg
mov
inc
fsubp
lret
add
dec
jg
adc
add
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
