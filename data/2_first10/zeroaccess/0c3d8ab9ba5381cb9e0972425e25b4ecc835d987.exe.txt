push
mov
sub
push
addl
mov
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
add
adc
mov
xor
or
sub
or
mov
mov
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
dec
mov
mov
xor
sub
sbb
not
xor
xor
mov
mov
mov
mov
mov
movl
jmp
popf
add
xor
pushf
adc
inc
daa
mov
jnp
jnp
mov
jnp
ror
sarb
or
xchg
lcall
decb
dec
jge
xchg
sub
pusha
ja
stos
js
insl
inc
js
inc
mov
clc
xchg
sti
mov
or
int3
pop
fs
call
lock
loope
out
sti
aad
jmp
dec
int3
sahf
loop
clc
push
cmpsb
les
and
jne
jl
push
cwtl
fs
arpl
insb
in
lret
mov
xchg
cld
sub
sub
mov
mov
in
mov
dec
movsb
sub
sbb
xchg
inc
testb
not
fsubrp
std
scas
outsl
out
mov
mov
cmpsl
dec
sub
jecxz
subb
jle
clc
je,pn
adc
push
jge
xor
push
inc
inc
cmpsl
pop
inc
iret
cmp
sub
in
fcompl
dec
xor
sar
int
lods
dec
lds
jae
add
fs
inc
adc
mov
mov
jecxz
cwtl
adc
adc
add
aaa
xchg
or
aad
mov
and
sub
mov
cmp
arpl
xchg
scas
sti
jge
cmpsl
pop
dec
pop
out
sub
or
icebp
inc
push
xor
loopne
pop
ljmp
aad
xchg
sbb
push
rcr
je
out
sbb
mov
dec
lret
popf
fsubrl
jns
in
stc
jo
and
inc
cmp
lret
push
or
cmp
mov
mov
xorl
mov
scas
jns
xor
lds
push
mov
xchg
pop
cmp
outsb
aaa
jo
mov
test
arpl
test
js
jmp
aaa
dec
mov
sbb
pop
dec
inc
imul
lock
sahf
jnp
mov
je
aas
ljmp
arpl
add
rcll
xlat
movsb
mov
xchg
mov
les
popa
into
loop
adc
xor
sbb
sub
mov
inc
dec
xor
inc
pop
mov
fsubl
xor
push
lea
dec
push
iret
pusha
popa
imul
das
or
mov
or
inc
dec
fs
repz
test
lea
jg
and
inc
icebp
int3
icebp
repnz
push
int3
popa
push
jle
mov
mov
sahf
push
scas
stc
xor
pop
fbld
dec
pop
sbbl
icebp
jne
pop
jge
xor
fxrstor
mov
fnstenv
loopne
cmpsb
lret
mov
std
imul
test
xchg
add
mov
or
loopne
cli
fists
bound
aas
je
test
and
loope
push
leave
adc
cmpl
repz
pop
hlt
jecxz
push
add
dec
pop
dec
cwtl
jp
inc
cli
std
addr16
sarb
repz
or
push
xor
ret
inc
call
xchg
push
xor
cmovo
sbb
pop
mov
fs
pop
shlb
inc
dec
fildll
pop
int
test
addb
daa
xor
or
jno
mov
xchg
and
push
adc
mov
pop
fldl
into
cmp
cli
rcrb
popa
ret
das
dec
sbb
cwtl
lods
out
adc
imul
std
out
insb
leave
jo
xchg
arpl
cmp
push
test
test
mov
pop
mov
and
jnp
cmp
xor
aas
adc
mov
movl
cmpxchg
dec
sub
cwtl
add
cmpsl
xlat
pop
outsb
push
adc
lods
std
loop
cmp
pop
inc
cmpsb
flds
fisttps
mov
cli
das
pop
insb
push
jno
mov
push
sahf
adc
les
mov
sub
lods
in
or
push
push
in
inc
or
sub
or
mov
cltd
push
add
enter
or
cltd
lds
and
mov
das
push
pushf
xchg
stos
loope
lods
add
sahf
add
cltd
push
jp
addr16
cmc
push
shrl
pop
mov
dec
adc
fldl
in
push
xchg
js
les
in
js
loop
arpl
std
push
push
repnz
xchg
sbb
push
jmp
adc
subl
sub
sub
mov
push
mov
inc
sbb
stos
adc
iret
scas
aad
mov
xchg
jg
sahf
sbb
sub
jge
imul
xor
negl
dec
icebp
push
ljmp
xor
mov
xor
push
jae
sub
push
ljmp
popf
inc
fdivrl
cwtl
mov
out
sub
push
repnz
cs
test
mov
int3
xor
push
dec
lcall
adc
sub
or
insb
dec
inc
jbe
inc
lods
int
add
cmp
mov
jge
xor
mov
dec
sahf
cmpsb
pop
daa
loop
jmp
ss
stos
mov
push
add
cmp
aaa
pop
pop
ds
repnz
cs
in
lcall
inc
arpl
dec
push
sub
mov
sbb
out
in
orl
sbb
insl
and
dec
out
lahf
xchg
dec
roll
and
or
outsl
test
pop
pop
leave
inc
xchg
into
subb
or
xorb
cmp
aam
jae
clc
fs
and
adc
out
icebp
adc
mov
xor
rcll
aaa
cmp
loop
pusha
repz
push
push
mov
arpl
inc
push
je
pusha
outsb
lret
mov
jno
ficomps
sahf
daa
xchg
stos
sub
adc
push
in
mov
lahf
je
sbb
mov
popf
add
mov
stos
push
lret
pop
fincstp
outsl
idivb
add
push
mov
rorl
inc
xor
clc
sbbb
sub
pusha
add
inc
jne
pop
aad
or
imul
bound
into
and
repnz
xchg
lcall
outsb
cltd
xchg
cwtl
dec
sbb
jbe
sub
fwait
mov
jp
negl
ljmp
xlat
mov
mov
jmp
shll
gs
jo
inc
insl
mov
outsb
in
sbb
fisttps
sbb
enter
cltd
and
pushf
and
sbb
mov
mov
repz
push
cli
cmp
cmpsl
testl
sub
lahf
test
stos
push
push
jns,pn
add
jmp
cmc
fwait
or
mov
jecxz,pn
sti
mov
xchg
filds
clc
inc
dec
lret
push
ret
pop
jnp
mov
add
and
push
loope
adc
push
hlt
cli
mov
jb
in
add
fmuls
sub
and
push
push
jmp
xor
xorb
xchg
jae
lcall
add
cld
push
shr
out
adc
xor
sub
jo
jle
leave
jb
push
mov
mov
mov
ror
dec
lret
cli
std
mov
std
out
fsub
fs
scas
movsl
inc
mov
test
jae
mov
sti
mov
leave
sbb
dec
pop
daa
dec
pop
push
pop
jg
or
in
scas
lock
daa
or
ret
jl
cmpsl
adc
jge
mov
cmpsb
enter
adcb
clc
pop
sub
mov
cltd
test
add
mov
adc
sub
les
dec
sahf
ljmp
pop
xor
cmp
mov
xchg
cmp
xor
clc
pop
or
fwait
mov
insl
lahf
fisttpl
pusha
sbb
clc
cmp
idiv
mov
mov
jecxz
lods
push
rclb
out
nopl
out
cmp
cmc
add
rcrb
mov
mov
adc
mov
fwait
mov
scas
aam
sbb
daa
int3
cmpsb
xchg
fsubrp
lahf
pop
inc
push
jp
ljmp
mov
lret
dec
pop
jnp
lds
aaa
std
jge
inc
jg
sbb
shlb
dec
scas
adc
shll
jl
andb
sbb
mov
cmp
xorb
and
lret
stos
mov
test
insl
mov
or
sbb
or
pop
mov
cmp
je
push
xchg
bound
adc
mov
jle
iret
lods
dec
stos
sbb
fcmovbe
pop
jp
testl
mov
nop
fcompl
in
mov
adc
aad
xor
das
xchg
cmp
in
shrb
cmp
mov
aad
xlat
push
fsubrs
push
xor
pop
outsb
sbb
out
popf
sbb
jb
adc
sub
roll
lret
mov
outsb
movsb
xor
daa
mov
adc
push
push
dec
sbb
fistps
in
mov
mov
scas
jle
mov
xor
mov
dec
jnp
adc
imul
jmp
arpl
lret
mov
push
jle
sbb
ljmp
fisubs
or
cmp
sub
les
adc
xchg
dec
inc
int
cmp
js
pusha
lds
inc
imul
stos
mov
cmc
or
roll
lahf
cmp
pushf
mov
nop
stos
int
sbb
lahf
or
imul
jge
adc
loop
pop
cltd
xchg
and
xchg
lods
dec
and
clc
push
mov
lods
jo
cmpsb
jle
push
mov
add
lods
loop
out
push
push
fwait
adc
cmp
loop
sbb
sub
loopne
aas
imulb
out
in
push
and
jnp
push
inc
repnz
dec
das
or
insl
out
mov
xor
repnz
es
xlat
mov
cwtl
rcll
outsl
movsl
shlb
xchg
pop
sbb
fildll
adc
lahf
xchg
xchg
mov
ret
arpl
loop
mov
pop
push
imul
scas
and
mov
sub
scas
add
jle
jno
shll
inc
xor
testb
popa
cmp
and
and
mov
add
jnp
and
mov
jne
mulb
dec
loope
sbb
or
mov
out
pop
das
or
enter
ja
insb
add
fsts
jbe
jae
les
sbb
pop
push
cmp
xor
push
inc
std
nop
and
jecxz
mov
jo
xor
xchg
imul
mov
cmpsl
mov
in
daa
test
js
jbe
inc
mov
inc
push
aad
repnz
inc
rcr
fnsave
loopne
jle
call
mov
xor
inc
aam
iret
ffree
cli
in
sub
cmp
push
sub
pop
lds
cmp
xchg
hlt
mov
add
jle
jge
testb
sbb
jno
jl
stos
dec
jb
push
test
call
pusha
inc
loopne
or
mov
cmp
add
sbb
dec
or
lds
pop
pop
push
loopne
ret
jb
lods
push
jno
ret
loope
pop
xor
ret
pop
cmp
xor
movsb
or
insb
lret
xor
mov
jmp
insl
push
jge
jmp
orb
daa
add
int
call
jo
repnz
lcall
sub
mov
mov
sarl
ss
iret
movsb
scas
mov
or
sbb
jnp
sbb
pop
or
cld
andb
std
sbb
xchg
clc
sub
cmp
lds
cltd
pop
push
xor
lods
jge
data16
jno
into
push
nop
repnz
adc
loop
icebp
movsl
push
xchg
pop
enter
jp
push
or
loope
cwtl
fcomps
test
jl
jecxz
xchg
cmp
inc
inc
jge
push
sahf
pop
push
mov
lds
imul
push
dec
mov
enter
mov
pop
aam
mov
push
mov
aas
dec
fistps
mov
mov
pop
jg
enter
lods
and
pop
inc
cmpsl
and
ss
push
roll
pop
or
fwait
and
mov
cmpsl
cmp
pop
lret
cmpsb
out
push
or
dec
cmp
cmp
dec
lods
ret
xchg
mov
and
mov
inc
pop
loope
in
int3
mov
cmpsl
xchg
jbe
test
popf
and
cmc
mov
or
loop
popf
mov
popf
ljmp
shrl
in
inc
mov
fdivs
lahf
xchg
adc
jne
xchg
sub
adc
cli
xchg
and
adc
inc
xor
push
cmpsl
aas
out
cmp
mov
push
xchg
mov
into
fcomps
ja
adc
ret
mov
dec
inc
inc
or
sub
xlat
outsl
lds
aad
xchg
mov
jle
xor
icebp
add
loopne
jge
enter
jmp
cwtl
or
sbb
mov
xchg
lea
or
pop
add
cmp
mov
imul
fbstp
pop
cs
ud1
sbb
outsl
or
mov
add
mov
call
aam
mov
out
int
lret
ds
idiv
xchg
jno
fldenv
mov
xchg
jle
xchg
or
jns
cmpsb
mov
test
adc
notb
ss
repz
mov
lcall
lock
movsl
jnp
jecxz
aad
fdivrs
sbb
lods
scas
in
sbb
xchg
push
pop
insl
and
int
mov
lahf
jb
sbb
sbb
xchg
mov
mov
mov
mov
mov
cmp
push
push
pop
lcall
iret
sbb
cld
lods
mov
xchg
es
mov
fs
ficoml
cmp
test
or
inc
and
add
cmp
jecxz
mov
dec
inc
add
ficoms
inc
fbld
pushf
daa
jle
shlb
jb
add
icebp
mov
aad
fadd
arpl
aam
sbb
int
repz
sbb
add
mov
and
adc
push
addb
xor
ss
adc
push
inc
insb
scas
stos
fsts
pop
sarb
lret
jecxz
std
addr16
mov
psrld
jnp
out
push
cmp
mov
inc
mov
stc
xchg
imul
sbb
in
pop
cmc
mov
rorl
pusha
pop
xor
sub
mov
cwtl
push
inc
inc
jbe
out
jmp
popf
fstl
mov
arpl
js
pop
adc
aam
xchg
push
pop
out
sti
and
mov
push
adc
imul
pop
fisubl
jg
ror
pop
pop
sti
mov
iret
or
cmovnp
pop
sbb
mov
mov
mov
mov
je
ljmp
sub
mov
pop
pop
lret
inc
insl
cmp
out
mov
jnp
add
fmul
lahf
mov
and
ret
insl
lcall
sub
data16
dec
inc
cwtl
mov
punpckhdq
shl
es
fisttpl
pushf
in
dec
jp
sbb
cld
ret
add
push
fcompl
or
pop
mov
daa
out
lea
mov
cld
imul
scas
mov
mov
push
mov
jbe
push
dec
ja
xor
cmc
push
jl
out
or
adc
mov
jbe
jge
xchg
adc
inc
push
fdivrl
jb
loopne
push
aaa
inc
or
call
clc
push
es
jb
sbb
adc
aad
arpl
addr16
icebp
enter
out
mov
mov
fcomps
pop
stc
xor
outsl
fdivrs
cmp
add
insb
lret
stc
push
add
mov
insb
push
pop
xchg
fidivrs
arpl
sbb
js
mov
das
test
ret
cmp
cmp
icebp
fists
stos
pop
push
test
jp
mov
cmp
pusha
bnd
in
add
insb
jmp
mov
leave
add
sub
cmpl
cmc
adc
push
inc
dec
or
pushf
bound
cld
push
pop
je
adc
fdiv
and
jl
cmp
mov
rcl
rcll
mov
cmc
stc
cmp
push
mov
clc
js
idiv
aad
jl
mov
xor
ljmp
sahf
jb
xorl
or
push
iret
push
adc
mov
cmpsb
pop
ror
mov
pop
scas
mov
xchg
dec
in
addb
js
notb
push
sbb
in
sbb
mov
popa
fsts
mov
pusha
sub
xor
stos
xchg
loope
pop
daa
lods
mov
pop
xchg
xlat
and
ljmp
or
inc
cld
or
jle
xor
pusha
or
and
fdivrp
ljmp
xlat
push
leave
jno
push
loope
mov
push
int3
mov
subb
push
jns
xchg
push
cmp
popf
cmc
push
notb
imul
mov
in
aam
add
mov
cmp
sub
or
das
std
scas
cld
push
push
scas
js
mov
mov
mov
into
mov
push
cmpsl
add
push
xchg
mov
mov
or
fmuls
xor
pop
mov
insb
loop
out
shr
pop
push
jge
fcompl
or
adc
dec
add
aaa
cli
mov
shrl
and
popa
push
cmp
sbb
sbb
xchg
jg
cld
xchg
cli
cmp
jno
and
sbbl
outsb
mov
mov
mov
mov
add
dec
cmp
add
add
xor
jmp
inc
mov
call
pop
mov
cmp
fdivrl
inc
fwait
and
sbb
and
divb
pop
mov
inc
popf
dec
mov
cmp
rolb
outsb
enter
sarl
in
lods
ja
adc
gs
outsb
jmp
test
or
mov
inc
cld
cmp
xchg
add
and
in
lods
data16
jo
push
ss
and
jmp
test
stos
mov
jmp
jge
adc
loopne
inc
jns
mov
jg
add
push
sub
pop
or
mov
test
inc
xchg
mov
flds
adc
jmp
mov
sbb
test
pusha
cs
outsl
pop
mov
inc
fisubl
pop
int3
adc
insl
inc
adc
xchg
loope
ret
adc
jp
mov
jo
jbe
aam
out
repz
mov
pop
out
imull
sbb
out
push
stos
jmp
mov
adc
mov
dec
jl
push
mov
mov
inc
mov
loope
push
outsl
sub
bound
xchg
loope
stos
test
out
jle
shll
fmuls
adc
hlt
inc
dec
sbb
jecxz
aad
cs
stc
adcb
push
dec
mov
adc
imul
cmp
call
xlat
lods
dec
inc
jne
insl
movsb
adc
mov
xor
jge
stc
or
in
and
cmp
fdivs
dec
jo
mov
sub
cld
pop
adc
leave
sti
enter
mov
faddl
add
xor
or
movl
and
subl
xchg
out
call
jns
sub
fwait
lea
push
std
arpl
sbb
dec
xchg
mov
test
test
mov
pop
lds
iret
je
mul
mov
sub
dec
lret
fiaddl
xchg
mov
pop
xchg
mov
daa
jmp
cmp
pop
lods
hlt
pop
aas
or
pop
mov
jl
ja
pop
ret
shll
std
outsb
mov
sbb
pop
xlat
mov
push
test
sub
sub
jno
int
cltd
imul
imul
and
cmp
je
jns
jl
dec
pop
xorl
aaa
push
mov
jl
je
int3
push
or
mov
loope
das
ret
and
sahf
jne
mov
jl
movsl
sub
xor
roll
adc
cmp
dec
or
xchg
ficomps
stc
xor
popf
sbbb
enter
mov
stos
dec
movsl
jl
rol
xchg
in
adc
or
xor
je
cmp
xchg
add
imul
xchg
or
xchg
push
dec
mov
mov
scas
inc
xor
mov
push
lock
jg
mov
mov
into
orl
popa
pop
ret
mov
push
shll
jmp
sub
mov
or
sub
pop
xchg
es
imul
roll
out
out
or
in
loop
icebp
lret
lods
inc
mov
xchg
out
popf
std
and
jo
add
xchg
cmp
adc
pop
cld
aas
inc
mov
sub
add
sbb
push
pop
dec
pop
add
xor
inc
mov
adcl
mov
repnz
aas
and
fsubs
fcmovnb
movsb
arpl
cmc
cmpsl
fmull
push
cs
aaa
push
add
xchg
sub
nop
stc
insl
scas
xchg
jle
mov
lcall
int
lret
mov
test
dec
lcall
cltd
jg
mov
or
mov
dec
mov
or
pop
jl
call
cmpsl
mov
test
jl
into
pushf
aad
push
cs
mov
shrb
or
jbe
popa
mov
sbb
mov
call
mulb
out
dec
hlt
sahf
pop
lods
jnp
sub
js
sarl
imul
pop
add
inc
lret
xor
fldcw
mov
icebp
gs
mov
xor
outsl
daa
dec
shl
push
mov
outsb
fdivp
push
sbb
sarl
jge
lahf
xlat
xchg
pop
inc
mov
test
addr16
jnp
ljmp
inc
adc
jo
leave
repz
daa
pop
xor
adcl
clc
clc
clc
in
test
mov
push
mov
mov
jle
jb
xor
xchg
mov
test
iret
mov
int
aam
inc
loopne
jmp
or
xor
inc
fldenv
pushf
sub
adc
cmp
jmp
loopne
out
out
push
xlat
out
out
and
push
sub
push
jmp
mov
movsl
ret
mov
lock
movsl
xor
and
adc
and
push
test
jne
adc
fwait
lods
nop
aaa
nop
cld
pop
repz
xchg
sarl
mov
popf
sbb
mov
fildll
xchg
jg
xor
push
push
add
sti
mov
ret
xchg
mov
nop
dec
inc
rcrl
andl
inc
das
in
xchg
test
fsub
push
jae
jnp
jl
test
nop
mov
xchg
movsb
cli
repnz
sub
cmpsl
xchg
das
mov
push
pop
fidivl
mov
jns
popa
or
xor
and
mov
sub
enter
in
loope
or
test
das
mov
data16
cmp
inc
lds
pop
mov
test
stos
sbb
addl
out
mov
jmp
ficomps
xor
cwtl
push
mov
jl
mov
stc
fisubl
cmpsl
pop
and
mov
cmpsl
xchg
and
pop
loopne
inc
sbb
iret
add
sti
cmpsl
cmpsl
pusha
xchg
pop
test
push
jnp
or
xchg
fwait
in
fimull
mov
enter
sub
imul
mov
adc
lods
fcmovne
sbb
ret
sarl
movsl
sub
int
cmpsb
mov
pop
rcll
or
pop
lods
out
cs
ret
js
dec
or
xchg
cmpsl
inc
xchg
pushf
scas
dec
mov
jbe
mov
int3
testl
mov
mov
sbb
insb
add
dec
pop
imul
push
inc
push
in
lods
mov
jae
push
dec
xor
adc
sbb
fldl
push
mov
xor
insb
notb
xor
rcl
mov
adc
into
fwait
dec
push
test
ss
int3
jmp
mov
out
insb
daa
hlt
mov
insb
mov
or
add
pop
jmp
test
outsl
xchg
inc
mov
lds
jns
test
inc
inc
cmp
xchg
jl
and
lret
inc
outsb
lods
mov
xor
jne
insb
pop
mov
ficompl
or
mov
add
inc
ljmp
ret
xchg
pop
and
ljmp
adc
push
sub
sarb
insb
inc
mov
xchg
lock
xchg
pop
sti
pop
icebp
lea
in
xor
imul
xchg
fsubs
aas
mov
xor
mov
mov
fstl
sahf
nop
jnp
sub
add
sub
push
decb
jae
in
fst
pop
stos
push
xrelease
xchg
sahf
lods
xchg
imul
lret
sbb
shrl
sbb
mov
dec
dec
and
add
push
lret
hlt
cld
int
loopne
mov
cmp
push
and
add
jae
fildll
jg
jl
lret
lahf
shrb
gs
add
or
rorl
xchg
mov
mov
lea
mov
mov
jp
int3
dec
in
popf
push
mov
push
push
xchg
decb
movsb
jp
dec
and
sar
push
xchg
fimuls
out
xor
fidivrl
mov
lock
dec
pop
cs
xchg
sub
pop
ret
ret
test
mov
cmc
es
cmp
mov
or
shrl
xchg
repz
push
dec
dec
inc
fcom
push
es
sub
mov
add
mov
shrb
jbe
aam
xor
lahf
push
lret
out
movsb
cmp
std
adc
push
test
or
push
icebp
pop
movsl
mov
lcall
js
jle
lods
mov
add
sti
repz
inc
push
or
xor
out
jo
push
push
inc
cmc
pop
ds
xchg
lret
push
pop
mov
int
sbb
cmp
std
lret
int
xchg
fldt
add
cmp
jne
pop
das
lock
ljmp
cmp
cltd
mov
or
xchg
scas
movsb
xchg
and
jnp
mov
xor
xor
in
push
int3
mov
adc
aas
push
adc
mov
and
loope
popf
pushl
push
pop
push
out
pop
rcrb
sub
arpl
mov
jecxz
fisubrl
inc
iret
inc
push
jge
add
unpcklps
mov
imul
or
jno
add
ss
add
in
loop
divl
push
pop
jmp
push
and
xor
cmp
stc
or
fisttpl
sbb
cli
push
insl
fildl
adc
test
fldpi
xor
bound
stc
leave
in
std
psllq
icebp
jg
dec
cmp
call
ds
test
lahf
lret
ficoml
and
outsb
lcall
data16
lods
insl
push
add
sub
insl
outsl
xor
sbb
stos
mov
xor
xchg
addr16
push
or
push
out
lods
sarb
adc
sbb
insl
rorb
push
cmp
leave
movsl
insl
rclb
push
test
push
subb
daa
mov
sub
jp
out
pop
call
loop
idivb
stos
orl
pop
cmpsb
fisubl
mov
or
das
sub
idivb
mov
cld
fdivs
dec
cs
mov
sub
test
imul
and
das
inc
imul
fs
in
cwtl
inc
push
aas
fists
mov
cmp
sub
mov
js
ret
lcall
stc
aaa
out
lea
sar
std
or
in
cli
fisubl
shll
and
xchg
or
dec
sbb
rolb
in
or
inc
or
adc
test
mov
pop
and
lahf
cwtl
or
fcompl
mov
mov
jb
push
xor
pop
push
and
pop
flds
and
mov
mov
jbe
mov
loop
cmp
imul
sbb
movsl
outsb
roll
push
push
pop
adc
cmp
into
mov
adcl
cmpsb
fdivrl
inc
jl
cmp
mov
idivl
jl
hlt
pop
sbb
pop
fcoml
mov
daa
inc
ret
sbb
lods
ja
jnp
sub
aad
out
arpl
mov
pop
fistps
aas
inc
and
xchg
and
mov
pop
push
arpl
inc
stc
cmpsl
sbb
inc
jbe
cwtl
cmpsb
push
out
jge
in
mov
jae
jmp
rol
adc
mov
clc
and
dec
insb
lods
repz
pop
inc
enter
std
mov
out
loopne
ror
cmc
das
dec
cmc
scas
dec
mov
dec
lahf
clc
mov
sub
std
popf
mov
cwtl
aam
xor
push
fadds
pop
fwait
xlat
pop
mov
sub
negl
pop
mov
or
fsub
shlb
fsubrs
stc
into
andb
dec
pop
testb
jg
dec
pop
sub
fcomps
clc
mov
xor
pop
popf
loope
into
pop
rcrl
push
xchg
xchg
sbb
push
ljmp
test
add
cmpb
cs
ss
pop
jge
push
jb
push
out
ret
orb
fstpt
xchg
lods
aaa
dec
incl
out
mov
ror
gs
in
push
icebp
mov
and
lds
fistpll
cld
sbb
leave
out
int3
pop
mov
data16
loop
and
mov
jns
jecxz
sub
jg
inc
stos
cmp
ret
dec
loope
loopne
sbb
scas
scas
mov
movsl
enter
and
push
popf
sbb
cmc
mov
fimuls
aam
or
cmp
addb
popf
jl
push
pop
jns
out
mov
push
cmpsb
nop
add
leave
xor
js
jbe
jl
jg
je
outsl
es
cmp
aaa
sub
cmp
leave
push
cwtl
test
adc
rorb
sbb
popa
mov
outsb
clc
out
xlat
inc
adc
mov
or
sbb
lret
bnd
push
adc
jmp
push
loopne
mov
dec
fmul
sub
ret
stc
dec
jo
sbb
push
aaa
aam
mov
je
fwait
xchg
addr16
add
or
adc
and
xor
xchg
xor
hlt
sbb
lret
mov
mov
imulb
xor
dec
pop
lret
loop
stos
jmp
dec
pop
sub
pop
fs
std
insb
or
not
add
xchg
popf
sub
cmp
icebp
mov
popa
add
sbb
sub
xor
push
lds
inc
gs
cwtl
pop
clc
add
xchg
push
pop
lret
lcall
jg
lds
decl
jmp
testl
mov
sub
mov
cwtl
jnp
mov
jnp
mov
les
dec
xchg
mov
push
sub
test
das
sbb
daa
or
jbe
or
icebp
pusha
adc
in
dec
xchg
xchg
push
fnstenv
loope
sub
sbbb
in
sbb
cwtl
loopne
lea
mov
pop
pop
jle
push
iret
lret
addr16
jb
ss
sbb
push
xchg
push
push
in
mov
mov
mov
push
dec
dec
pop
pop
dec
mov
pop
push
adc
das
out
fs
fsubr
nop
sarb
je
addl
popf
nop
lret
imul
lock
rcll
and
pop
xor
ret
pslld
lea
shll
repz
bound
xchg
lods
cltd
mov
mov
arpl
xchg
mov
loopne
out
pop
adc
data16
lret
push
jmp
xchg
imul
mov
or
sbb
test
popa
daa
inc
inc
nop
fwait
enter
in
add
rolb
orb
mov
mov
push
add
push
sti
and
repz
or
scas
push
movsl
clc
js
jne
xor
mov
ret
cltd
push
jmp
nop
ficoml
cwtl
clc
mov
push
xchg
mov
push
adc
and
in
or
lock
test
cmp
pop
adc
mov
std
nop
cmp
push
inc
lret
lods
xor
roll
bound
aaa
cmp
mov
or
fstcw
adc
cmp
movsl
jle
mov
mov
xor
pop
jb
and
or
dec
and
cmc
stos
arpl
movsl
dec
xor
and
cmpxchg
insb
mov
test
jle
or
push
fdivs
push
aas
mov
xchg
inc
or
push
xor
in
xor
cmp
mov
lods
std
movsb
inc
dec
test
addr16
mul
add
stos
jae
pop
jg
cmp
inc
loopne
repnz
dec
imul
sbb
mov
or
pop
lcall
mov
cmpsb
iret
shll
jae
cmp
das
mov
cmpsl
fwait
nop
shll
push
dec
jge
xor
in
xor
stos
or
outsl
bound
gs
ljmp
cmc
and
cmp
mov
mov
leave
pop
scas
push
inc
and
inc
xor
pushf
jle
in
add
shll
mov
fwait
out
push
mov
mov
aaa
scas
inc
add
cmc
dec
cmp
std
aam
shll
cld
mov
and
fwait
xlat
cmp
js
incb
scas
leave
push
test
js
mov
imul
sbb
movsl
xor
in
repnz
fiaddl
loope
negb
ljmp
aaa
xor
sahf
stc
in
cmp
lods
cmp
gs
adc
jno
int3
in
adc
mov
mov
dec
lret
adc
pop
test
test
pop
or
push
cmp
inc
out
sbb
movsl
out
pop
scas
jmp
sbb
addr16
xlat
sbb
adc
push
test
pop
hlt
lods
sub
pop
out
mov
ss
in
popl
inc
and
pop
orb
jno
out
scas
dec
dec
pop
fwait
pop
xor
repnz
icebp
fisubl
imul
sub
stc
adc
mov
cs
or
xlat
add
out
inc
inc
and
lods
repnz
fnstsw
movsb
dec
pop
xchg
imul
jbe
xor
dec
fcompl
pop
insl
or
sbb
lock
loop
pop
test
aad
sub
ficoms
int
mov
sbb
imul
mov
push
jmp
and
movsb
ja
xchg
repz
sbb
fs
inc
mov
movsl
out
and
push
pop
mov
lahf
adc
sbb
push
xor
or
test
and
mov
stos
and
pop
or
hlt
jns
loopne
lret
test
mov
frstor
and
int3
or
movsb
popa
push
daa
jnp
js
jbe
addr16
inc
pop
faddl
iret
add
in
fcompl
add
and
mov
rcrb
js
fs
mov
movsl
stc
lods
mov
mov
loop
pop
add
imull
xchg
inc
sbb
test
pop
xchg
mov
jae
repz
sub
icebp
push
jmp
pop
mov
mov
jl
rcrb
pop
iret
lods
stos
test
pushf
mov
aad
inc
pusha
xchg
scas
roll
in
sbb
subl
mov
jge
aad
xor
js
jmp
sub
repnz
cli
incb
sbb
xchg
add
loopne
les
dec
xchg
int
mov
sbb
hlt
jg
inc
cmp
and
cmp
inc
jae
inc
mov
xor
cmp
inc
mov
pop
and
sub
jae
lret
pop
frstor
dec
mov
nop
out
jmp
rcrb
jmp
in
out
cmp
scas
sub
jmp
fidivrl
call
out
mov
pusha
jg
push
cltd
mov
nop
or
sbb
fildll
add
xchg
movsb
fimull
incb
rcll
cmp
sbb
dec
dec
ljmp
ds
jb
xlat
add
adc
adc
xchg
jmp
add
sub
sbb
rolb
or
jbe
cmp
fidivrs
jae
aas
push
rol
shr
and
jb
lret
fistpl
fidivs
pop
lret
mov
test
adc
inc
cld
decb
mov
adc
pop
inc
mov
xlat
xor
popa
nop
push
mov
test
xchg
adc
jno
ljmp
insl
jb
out
jle,pt
mov
fiadds
fstp
fstpl
hlt
lret
lods
and
jge
fsubs
imul
lods
pop
dec
out
xor
rcll
cmc
add
sbb
je
jb
xor
adc
pop
pop
pcmpgtw
cmp
or
cmpsl
jbe
mov
jns
imul
into
ficompl
cld
adc
es
mov
jno
pop
mov
jmp
into
add
outsl
lods
mov
mov
testl
mov
inc
jmp
cmp
lds
test
push
cmp
jo
xor
sbb
lock
in
cmp
shlb
repnz
mov
sbb
xlat
mov
ror
xchg
in
inc
jne,pn
xchg
jecxz
xor
mov
and
cmp
test
popf
ret
dec
mov
jbe
pusha
andb
fsubrl
aas
push
pop
inc
add
fimuls
jne
sub
mov
inc
into
or
aad
pop
dec
scas
stc
shll
or
jno
mov
sar
dec
aam
jb
cltd
lret
fwait
in
cmp
mov
dec
add
inc
pop
mov
dec
dec
ljmp
arpl
mov
fcmovnbe
movsb
cmpsl
jmp
cmpl
fldcw
mov
xorl
cmp
mov
inc
or
insl
pop
jno
les
mov
mov
jmp
jecxz
loopne
xchg
lcall
insl
add
mov
push
gs
call
sbb
inc
jbe
out
cmp
ficompl
jl
ljmp
addr16
arpl
mov
icebp
jo
and
cltd
xor
push
mov
adc
add
jmp
pop
push
imul
jl
dec
inc
xor
pop
roll
adc
dec
push
push
jo
inc
adc
jae
xor
xchg
add
and
jp
cmovge
out
dec
jp
sbb
adc
out
fs
and
dec
lock
das
jne
adc
idivb
arpl
inc
lret
mov
push
cmp
xchg
xchg
mov
hlt
push
rol
gs
arpl
push
inc
outsb
pop
aaa
dec
or
inc
lods
and
and
cwtl
insl
sbb
leave
cmpsl
rol
xor
jo
scas
cmp
stc
pop
loope
sahf
dec
fisttpll
xor
ja
and
mov
inc
mov
sub
fsubr
add
stos
pop
out
dec
pop
lcall
lret
inc
pop
movsl
sbb
pop
daa
lds
icebp
sbb
icebp
mov
fbstp
mov
aas
cmp
dec
or
xor
cmpb
or
ret
xor
divps
xchg
repnz
rorl
adc
in
daa
out
mov
add
leave
or
sbb
push
les
cmp
lret
push
psubb
es
mov
pop
repnz
cmc
mov
jge
push
mov
add
ss
lods
pushf
and
jae
dec
jb
scas
sub
dec
int
inc
jl
rcrb
cmp
xchg
pop
mov
sbb
test
pushf
jecxz
mov
dec
xor
pop
out
and
enter
mov
push
inc
cwtl
repnz
add
mov
xor
lock
mov
jno
imul
subb
je
aas
sub
lods
lds
dec
jnp
xchg
inc
and
or
mov
syscall
fsubrs
inc
adc
sub
je
andb
adc
call
sahf
mov
jle
aad
add
pop
roll
dec
mov
xor
mov
lahf
in
stos
xchg
scas
mov
xchg
inc
jge
xlat
mov
inc
cltd
sbb
inc
std
inc
loopne
mov
fcmovbe
mov
and
mov
stos
icebp
bnd
ret
mov
aad
les
icebp
loopne
jg
push
inc
test
icebp
pop
add
cld
pop
jbe
xchg
mov
cld
sbbb
adc
push
jecxz
mov
adc
xor
sbb
in
adc
test
mov
mov
inc
xor
rorl
out
and
push
push
add
mov
mov
imul
js
or
rcr
fs
mov
shlb
mov
cmp
out
hlt
call
aaa
daa
in
xchg
int3
inc
daa
icebp
dec
nop
fisubl
imul
outsb
mov
pop
orb
add
xchg
stos
inc
or
arpl
mov
xchg
xchg
scas
lea
adc
jbe
and
dec
icebp
sub
fwait
xchg
mov
mov
sub
mov
shll
mov
sahf
xchg
and
push
xchg
xchg
mov
jo
cld
ret
rclb
dec
add
or
ret
inc
lock
cmp
cs
out
mov
jp
lds
xor
sbb
sbb
jns
cmpb
push
std
test
nop
xchg
inc
mov
add
mov
sbb
jge
xlat
dec
push
and
pop
outsb
ror
push
or
mov
cmpb
mov
stc
sub
mov
loop
mov
adc
cs
fcoms
add
sub
sbb
dec
gs
repz
pop
fildll
cmp
mov
sub
adc
jecxz
mov
mov
pop
mov
inc
jge
mov
mov
lahf
and
jns
push
xor
sti
es
std
iret
sbb
xchg
ds
ljmp
popa
test
sti
sarb
pop
mov
movsl
je
add
xchg
fisttps
add
xorl
push
daa
icebp
cmpsb
cmpsl
ja
jnp
inc
pop
cmp
pop
mov
fmulp
in
jmp
jnp
mov
sbb
fadd
push
loop
lcall
xchg
add
mov
loop
sbb
stc
es
fs
jno
or
inc
out
and
out
xchg
push
xor
cmp
xchg
mov
sbb
jg
out
xlat
jmp
add
scas
xchg
clc
scas
pusha
lea
jbe
iret
loop
jns
inc
xor
mov
enter
jb
mov
mov
mov
loope
inc
push
xor
sub
mov
adc
into
out
sub
add
fimull
or
cwtl
or
dec
adc
dec
or
loope
aam
int3
adc
mov
push
mov
and
addb
insl
lds
pushf
int3
test
push
repz
fildl
xchg
mov
flds
jno
out
xchg
dec
dec
movq
loopne
push
out
mov
dec
and
aam
sbb
sbb
icebp
xchg
cli
inc
or
out
js
ret
mov
std
rcrb
repnz
mov
daa
add
lahf
push
mov
cmp
test
mov
xchg
dec
testl
jle
fmull
aas
pop
mov
enter
stos
imul
scas
dec
cmp
test
cmc
call
xor
mov
dec
jbe
jl
push
jo
loope
lret
and
mov
mov
sub
in
andl
fs
pushf
js
adc
mov
sbb
xlat
xchg
or
push
xchg
mov
insl
adc
cmp
insl
jmp
pusha
mov
or
inc
loope
inc
jne
sti
andl
nop/reserved
lods
loop
jae
xchg
js
xchg
pop
sub
cs
and
fistpll
test
adc
lock
pop
xor
jb
jge
jmp
jmp
push
sub
aas
adc
out
sub
mov
mov
sbb
addl
mov
dec
inc
pop
in
inc
mov
pop
ljmp
mov
jnp
icebp
pushf
aas
jo
push
push
inc
lods
fs
sahf
cmp
iret
scas
aad
sbb
shlb
mov
sbb
jae
loope
mov
fidivrs
jbe
push
push
shll
int
ret
cmpsb
xorl
sbb
daa
jecxz
scas
scas
lret
push
lock
xchg
cmp
enter
xchg
cmpsb
adc
inc
rorb
jbe
shll
ja
sbb
jge
sbb
daa
leave
push
pop
pop
js
lahf
das
imul
mov
lods
mov
daa
mov
aaa
pop
js
andl
shlb
mov
mov
xchg
call
out
dec
sbbl
lret
ss
paddusw
push
adc
lods
cltd
mov
inc
mov
int3
inc
mov
cli
push
jge
mov
sub
pop
ljmp
mov
xchg
addr16
mov
out
jb
cmp
in
mov
add
ljmp
pop
dec
iret
neg
adc
dec
bound
mov
out
inc
mov
and
inc
out
dec
insl
sahf
rcrl
inc
mov
ja
clc
cmp
cld
test
pop
push
dec
out
fists
mov
sbb
inc
jecxz
adc
inc
push
add
stos
inc
imul
dec
insl
mov
loope
adc
and
mov
cs
push
mov
hlt
and
dec
pushf
add
jl
jnp
jle
fldenv
inc
cli
or
pusha
lds
pop
or
pusha
or
xchg
cmp
mov
dec
insl
xor
js
fisttpl
mov
xor
mov
mov
or
jb
mov
adc
push
mov
mov
xchg
jno
jno
loope
aad
xor
outsb
idivb
and
push
fsubrl
xchg
mov
scas
xchg
inc
stos
mov
lds
int
mov
in
mov
push
jecxz
dec
scas
ja
jl
lret
lods
push
fwait
in
jbe
and
jmp
inc
xchg
cmp
int
sti
stc
into
cld
lcall
add
call
or
push
xor
mov
int3
shl
xor
jnp
shl
in
shll
cmpsl
pop
push
adc
mov
btc
mov
js
sbb
pop
add
imul
rcrb
rorl
adcl
and
iret
hlt
inc
ret
or
dec
pop
lock
loope
or
fdecstp
mov
in
daa
scas
bound
xchg
sub
xchg
lcall
jg
push
mov
xchg
cmp
mov
movsl
dec
outsl
cltd
pop
fcoml
neg
mov
sub
xor
pop
mov
and
loop
pop
add
or
rep
push
push
inc
fidivl
sbb
dec
xor
loopne
cmc
inc
mov
fimuls
push
pop
ss
lcall
mov
jecxz
push
scas
sarl
insl
adc
adc
testl
gs
lock
fwait
out
cmpl
cmp
stos
push
mov
mov
mov
fcmovnb
mov
je
imul
dec
lahf
out
mov
add
cs
push
call
dec
cmp
xchg
and
or
cmp
xlat
outsl
add
into
inc
mov
push
lret
xor
cmp
clc
pop
sarl
call
mov
mov
scas
iret
mov
mov
int
mov
cmp
xchg
mov
in
dec
cltd
dec
dec
adc
in
jmp
jge
test
mov
pop
js
out
adc
ror
dec
mov
sub
outsl
lahf
cmc
fwait
or
mov
out
inc
sbb
xchg
cmp
jo
pop
adc
fildl
add
dec
scas
stc
sub
cwtl
in
out
inc
js
jo
ja
dec
es
in
inc
mov
jecxz
enter
jmp
sbb
shrl
sbb
cmp
pop
shrl
mov
mov
push
dec
push
orb
xchg
imul
mov
inc
add
fwait
and
mov
mov
mov
sbb
mov
daa
in
adc
push
fs
jno
jp
jb
mov
lahf
arpl
cmp
pop
xchg
pcmpgtw
gs
or
aas
sub
jne
into
sahf
xor
lret
ret
mov
xchg
mov
push
aam
imul
ljmp
push
and
inc
sub
aam
adc
sub
jp
incb
in
and
mov
loope
cmp
data16
cmp
jmp
pop
jmp
mov
xor
mov
adc
enter
push
cld
push
add
adcl
jbe
sub
lahf
push
rcrb
pop
cmp
loopne
loop
lret
out
repnz
ret
mov
mov
and
ds
push
arpl
pop
pop
dec
clc
stc
and
inc
adc
jnp,pn
jl
data16
fdivl
fisubrs
xor
xchg
ljmp
push
insb
jl
es
jecxz
leave
insb
dec
into
lea
and
leave
mov
movsl
jg
add
push
incl
ljmp
jnp
idiv
xor
outsl
aam
repz
cmove
insl
push
rcrb
in
in
pop
cmc
pop
adcb
inc
scas
push
mov
cmp
loope
dec
loopne
jne,pn
dec
xchg
jg
outsb
fdiv
jns
pop
mov
jne
fwait
call
or
rcrb
mov
jns
imul
cmp
ss
mov
jnp
jge
mov
fcoml
sbb
sbbb
mov
shll
lcall
pusha
outsb
cmpsl
jae
push
xchg
in
mov
cs
xchg
cwtl
fsts
out
sub
sbb
push
dec
in
xchg
push
mov
into
ror
jp
stos
sub
or
and
xchg
xchg
gs
cmp
jo
js
pop
cmc
sub
loopne,pt
call
mov
sbb
dec
cli
inc
xlat
jne
xor
sbb
fwait
cmc
pushl
push
dec
mov
push
out
xchg
lds
test
jbe
int3
mov
fcoms
and
faddl
cmp
cmp
dec
dec
xor
mov
out
and
or
and
scas
jbe
mov
inc
insl
mov
cmp
xlat
aam
sub
imul
jle
fidivrl
packssdw
jns
xchg
hlt
or
or
adc
jo
push
movsb
pushf
insb
outsb
mov
rcrb
arpl
test
test
fmul
sub
mov
pushf
push
cmp
hlt
aas
push
add
cmpsb
arpl
pushl
pop
outsb
cmpl
aas
stc
lret
cmpsl
inc
mov
stos
mov
dec
frstor
scas
mov
mov
fidivl
lahf
mov
push
lods
mov
push
or
call
xor
lret
dec
add
push
rclb
iret
jno
or
ljmp
or
push
insl
mov
mov
push
stc
subb
std
cli
clc
outsb
lahf
jecxz
push
jae
mov
fldenv
ljmp
jp
xchg
pcmpgtw
jl
mov
mov
icebp
ret
inc
xor
pop
ja
pop
add
push
rcll
mov
mov
out
lods
push
add
sbbb
loopne
xchg
xor
aad
sbb
inc
repnz
adc
test
push
xor
cs
jae
jnp
fisubs
push
jnp
sbb
xchg
mov
loopw
mov
scas
cs
push
mov
add
push
fldl
cld
lods
je
sbb
mov
dec
or
fwait
sbb
out
mov
cli
out
ret
mov
call
daa
std
xchg
and
sqrtps
jg
mov
mov
dec
xchg
gs
sub
ds
add
sbb
ljmp
inc
int
adc
cld
mov
icebp
push
cltd
xchg
lahf
and
mov
jne
dec
xchg
jnp
mov
xor
pop
mov
pop
outsb
divl
js
mov
scas
push
mov
test
xchg
inc
movsl
mov
pop
scas
dec
push
mov
xor
repz
out
bound
lods
in
push
nop
imul
push
inc
mov
addr16
test
xchg
or
addb
inc
stc
or
int3
add
repnz
jge
inc
xor
dec
or
fwait
add
adc
inc
or
or
adc
sub
push
shll
sub
sbb
dec
mov
sub
sub
mov
inc
cli
lea
icebp
xchg
lods
scas
lret
negl
loope
lret
hlt
push
cmc
pop
mov
jg
lcall
inc
stc
xor
mov
cmp
cli
inc
sbb
adcl
stc
pop
ss
push
jno
cli
ss
add
sub
sarl
inc
test
fldt
add
sbb
inc
inc
mov
jle
cmp
dec
push
cmc
lahf
jnp
pop
mov
testl
testl
pop
xchg
mov
inc
xor
pop
or
addr16
aas
jecxz
sbb
sbb
nop
out
das
jae
or
mov
sbb
outsl
jl
pushf
aad
test
daa
in
fisttpl
inc
enter
fsub
push
out
mov
jo
fsubr
add
cmp
cmp
dec
mov
jle
ds
lds
mov
loop
xor
sarb
les
dec
mov
lea
push
prefetcht0
int
cmp
jmp
push
jne
or
push
int3
dec
xor
fadds
jnp
add
sub
popf
cltd
cli
gs
lahf
push
dec
or
mov
setle
jecxz
mul
ljmp
mov
vpmulhw
adcl
fisttpl
push
mov
adc
or
add
mov
movsl
mov
pushf
ljmp
fsubrs
in
xchg
sub
dec
cmpb
gs
push
xchg
stc
ret
lea
lds
addr16
test
and
movsl
and
movsb
dec
stos
push
sub
xchg
pushf
divps
lret
push
stos
pop
repnz
inc
movsl
shlb
push
sbb
das
sbb
mov
div
jle
cmpsl
adc
je
in
std
pop
sbb
sbb
test
push
fidivrs
xor
xor
int3
rclb
lock
or
cmpl
push
lock
icebp
xchg
xlat
call
scas
fstpl
daa
or
je
dec
mov
ret
mov
fimuls
and
mov
pmulhuw
or
add
addr16
insl
mov
or
scas
or
push
repz
inc
push
mov
leave
mov
or
inc
xchg
sbb
push
add
jbe
jmp
call
push
add
xchg
arpl
mov
or
and
orb
pop
ljmp
test
pop
iret
pop
test
pop
fidivs
xchg
mov
and
lods
xchg
aaa
jg
das
pop
pop
je
xchg
sti
fs
lods
popa
xchg
subb
imul
clc
xor
aad
cmp
sbb
mov
pop
xchg
notl
adc
xchg
jnp
add
pop
dec
test
rcr
cmp
flds
or
mov
cmpsl
dec
adc
mov
lret
ret
gs
and
outsb
sbb
sub
inc
or
inc
call
stc
cmp
js
jmp
xchg
fmulp
insl
inc
inc
jg
scas
mov
stos
subl
rcrb
dec
repnz
and
lds
push
fs
filds
inc
cmp
xchg
dec
test
decl
pop
cmpsl
in
push
insl
lds
pusha
mov
std
push
daa
add
or
mov
add
add
je
in
in
jmp
jb
adc
and
jl
sbb
rol
xor
mov
insb
std
and
adc
dec
xchg
in
test
cltd
fmull
ret
xor
push
adc
insb
mov
xchg
into
sbb
xchg
or
js
jae
pop
cmp
cmp
mov
test
popa
mov
aad
int
or
push
dec
negl
inc
dec
fldl
jno
mov
mov
jle
pop
jg
pop
pushf
jg
xor
jecxz
out
mov
dec
dec
popl
jg
mov
popa
xlat
or
test
lcall
cwtl
in
pop
aas
mov
xor
gs
ljmp
adcl
call
lret
hlt
dec
jp
mov
loope
and
lds
jmp
addr16
jl
nop
mov
int
cmp
sbb
or
mov
push
cmc
jp
push
cmpl
ja
pop
jle
int3
repnz
jg
jle
shrl
push
outsl
mov
dec
push
push
pop
cmpsb
mov
notb
jno
arpl
cwtl
mov
fs
pop
or
adc
add
fdivp
pop
addl
aam
mov
add
mov
xchg
lods
xor
cmp
lret
xchg
push
cmp
xchg
es
fnstsw
push
jle
xchg
mov
cltd
std
jns
hlt
dec
jno
mov
sbb
aaa
xchg
mov
pop
ds
or
or
dec
mov
int
xor
or
pop
or
xchg
add
test
mov
jecxz
xchg
loopne
add
loopne
hlt
jnp
sub
mov
pop
mov
in
popa
aad
ja
je
or
mov
or
fldcw
lret
loopne
nop
jp
xchg
cmp
nop
sub
push
xchg
mov
arpl
jge
fisttpll
mov
aad
rcrl
add
mov
sub
sbbb
jae
pop
or
jmp
dec
imul
dec
setb
mov
xorl
dec
pushw
push
nop
les
jg
data16
negl
daa
sub
repnz
or
jno,pn
adc
push
ror
popf
lods
inc
dec
in
sahf
ds
loopne
sahf
nop
or
cmc
and
test
and
scas
and
in
fnstenv
adc
test
mov
dec
jmp
sub
xchg
inc
js
xor
loopne
dec
xchg
push
aas
xchg
push
and
fdivrl
pop
lcall
and
and
push
mov
in
sub
and
pop
mov
add
mov
es
push
lds
mov
or
pushf
lret
mov
outsl
push
jecxz
das
pop
cmp
popf
inc
bound
jge
mov
cltd
jl
ret
sarb
push
scas
addb
sbb
bound
sarb
cmp
jle
jns
lods
push
in
push
mov
mov
lods
inc
inc
inc
mov
pop
pop
cs
add
and
cmpsb
xor
cmp
xchg
sarb
std
out
inc
mov
out
add
sbb
ret
pushf
test
sbb
bound
sarl
arpl
aaa
gs
mov
test
sub
cmp
mov
daa
test
pop
cmpsb
iret
mov
pop
lods
loop
pop
xor
xor
out
fsub
addr16
call
add
movsb
xchg
dec
movsb
stc
out
lock
cwtl
cmp
out
mov
pop
xchg
pusha
sti
mov
add
imul
push
xchg
stc
jp
fs
push
es
cld
ss
sub
xor
dec
popf
in
push
and
data16
sub
aaa
jae
das
bound
js
xchg
xchg
fbstp
cmp
out
jp
stos
in
jne
dec
mov
repz
or
xor
lss
fdivrs
cli
and
and
cltd
xlat
rcrl
mov
mov
adc
mov
fidivl
ss
jge
das
lahf
lea
pop
adc
sbb
jge
push
sub
inc
imul
in
lods
daa
mov
mov
jge
inc
cmp
jl
ss
test
mov
jg
cltd
inc
inc
sahf
pop
and
and
jbe
add
jo
sub
outsb
nop
nop
ret
cmp
sbb
js
jb
fidivrs
jno
popf
jmp
test
inc
xchg
mov
imul
push
xchg
imull
mov
push
std
pushf
jnp
fs
aas
sub
cli
imul
mov
adc
pop
xchg
cmp
je
movsl
mov
hlt
jp
shll
or
pop
add
pop
push
pop
repz
inc
push
push
outsb
popl
inc
push
addb
xchg
inc
outsl
addr16
adc
outsb
jmp
popa
clc
or
ss
jecxz
stos
loope
data16
mov
or
repnz
add
mov
popa
sti
adc
jle
and
test
sbb
orl
decl
test
add
add
inc
add
shrl
add
cmp
movl
je
mov
sbb
xor
sub
sbb
xor
xor
sbb
mov
xor
mov
xor
or
sub
or
xor
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
xor
add
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
add
mov
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
push
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
add
sub
mov
negl
sub
sbbl
mov
movl
mov
mov
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
call
jmp
mov
xor
add
mov
xor
or
mov
sub
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adc
xor
add
movl
cmpl
je
cmpl
jge
jmp
push
pushl
pushl
call
mov
dec
mov
jmp
mov
lea
movl
push
incl
mov
mov
and
mov
mov
andl
xor
notl
xor
adcl
add
movl
adc
addl
push
mov
sbb
push
movl
cmpl
je
cmpl
jb
jmp
push
push
call
xor
or
dec
mov
jmp
mov
andl
pushl
xorl
call
movzbl
sbb
mov
subl
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
call
cmpl
jne
xor
add
dec
mov
xor
or
dec
mov
jmp
mov
orl
jmp
xchg
dec
cld
std
inc
dec
xchg
push
scas
ret
mov
hlt
icebp
jmp
jnp
mov
jnp
add
push
insl
sub
add
xchg
aad
out
cmpsb
add
in
bound
or
jp
push
jmp
imul
sub
cwtl
lea
das
sub
int
jle
cld
dec
dec
int
inc
ss
movsb
jnp
mov
jp
cmp
cld
ja
add
mov
gs
sub
out
int
aas
push
test
cs
pushf
sub
xchg
and
adc
or
dec
sbb
stc
jb
push
hlt
lods
mov
cld
shl
aad
xchg
xor
push
scas
push
xor
inc
ss
loopne
sarl
aam
add
jne
dec
sub
jmp
and
enter
dec
lock
push
dec
test
push
pop
sbb
leave
or
dec
xchg
jl
add
in
or
jo
clc
data16
shlb
add
sbb
add
test
ficompl
repz
sarb
cmc
daa
daa
std
loopne
push
sub
cmp
or
and
cs
cmpsb
pop
push
xor
sub
adc
ljmp
inc
sbb
xchg
cwtl
mov
sbb
push
or
xor
hlt
xchg
jle
add
movsb
pop
inc
adc
fwait
inc
cmp
adc
ss
xor
aad
pop
in
addr16
push
mov
pop
jns
mov
pop
inc
insb
and
jno
and
push
add
adc
sarl
dec
out
and
loop
aam
push
outsb
push
sub
addr16
jnp
call
jp
adc
adc
jl
xchg
mov
xchg
das
pusha
stos
add
neg
outsb
test
test
jge
push
lea
xchg
xchg
dec
repnz
cvtps2pd
cmc
data16
rorl
aad
push
rcrl
add
dec
stos
and
push
repz
and
jb
xchg
mov
fbld
icebp
add
fdivrs
shlb
jno
les
fucom
loope
mov
insl
xor
roll
inc
int3
dec
push
pushf
movsl
and
jns
inc
scas
ffree
ficoms
mov
inc
sbb
dec
repz
repz
inc
es
push
in
xor
xchg
cmp
push
or
aaa
or
pop
mov
popa
mov
or
lds
fwait
and
imul
jo
inc
inc
mov
iret
cmp
test
loope
or
inc
das
mov
stc
pop
pop
and
loop
adc
out
cmp
xchg
out
fnstcw
jg
push
inc
out
daa
sub
jae
sbb
xor
mov
push
pop
xor
push
pop
imul
adc
repnz
outsl
jg
inc
inc
cld
fisttps
ret
xlat
xor
lock
sbb
or
nop
cltd
scas
imul
imul
in
test
enter
inc
pop
je
mov
stos
test
pop
push
mov
in
movsl
jge
call
repz
mov
sub
lock
lahf
and
dec
cwtl
pop
push
test
mov
inc
jbe
adc
mov
lods
sbb
inc
ja
enter
imul
mov
pop
mov
lret
fs
ret
xor
lcall
xor
out
std
pop
or
mov
inc
mov
stc
jb
out
xchg
xchg
fstp
cmc
popa
data16
xor
ljmp
fsubs
or
rorl
cwtl
mov
sbb
ds
imul
cmpsl
and
mov
jl
fnsave
ret
aaa
ficompl
shlb
mov
pop
aad
mov
xor
loope
jne
lods
inc
inc
sarb
sub
repz
cld
push
aam
imull
int
ljmp
popf
push
test
mov
mov
pushl
xchg
mov
ffreep
or
mov
cmp
jle
mov
jb
jbe
movsl
xchg
jbe
jmp
rorl
cmp
pop
xchg
or
ret
int3
cmp
repnz
xor
jl
jecxz
xchg
adc
popa
jge
adc
lock
pusha
scas
jecxz
enter
push
lock
aas
pop
ds
popf
mov
add
in
lcall
scas
cltd
lret
aad
or
icebp
jns
jp
xlat
enter
push
cmp
pop
addl
sti
mov
pop
mov
call
cmc
xorb
dec
pop
iret
xchg
pop
sarl
pop
pop
repz
xor
fsubs
lods
pop
mov
xchg
addr16
icebp
push
stc
mov
pop
fnstsw
mov
pushf
jge
insl
cmpsb
enter
or
test
ret
hlt
push
push
mov
sbb
sbb
sahf
lods
fcmovu
mov
and
out
xchg
inc
outsb
jnp
jnp
icebp
xor
popa
aam
into
mov
or
or
push
mov
jl
call
cmp
cmpsb
sub
xchg
jo
or
call
stc
or
cmp
shlb
ja
fcompl
jne
add
subb
pop
sti
cmp
inc
push
cmp
fistl
es
divl
das
inc
xchg
xchg
repz
xchg
aad
scas
int3
fcompl
lods
mov
imul
ljmp
stos
fstpt
mov
gs
fs
roll
jl
adc
add
jmp
loop
jg
gs
mov
popa
cmpsb
or
fisubrs
sub
into
lret
fmuls
ret
popa
in
test
dec
mov
int
movsb
sbb
xor
sub
inc
push
insl
jne
loope
jne
pop
inc
cwtl
or
daa
pop
sbb
or
jo
xchg
popa
add
push
jmp
xchg
adc
pop
movsl
jb
ret
inc
rcrl
push
int
imul
fcoml
push
push
xor
lcall
insb
fbld
test
add
xchg
cmp
arpl
mov
stc
cmpsl
lcall
or
out
jo
scas
repz
ror
lods
popa
push
mov
fidivs
sbb
testb
fnsave
push
mov
mov
mov
push
xor
adc
out
sbb
gs
stos
std
add
xchg
imul
int
add
std
dec
lret
shrb
xor
mov
cmp
sahf
aas
fs
adc
dec
cmp
add
sub
cmpsl
pushf
mov
jns
lock
add
jmp
test
mov
clc
pop
fbstp
mov
mov
fldl
xchg
xor
pop
push
ret
and
jne
rorb
inc
mov
lds
push
test
mov
daa
adc
or
lds
insl
jae
add
jle
in
stos
enter
adc
inc
lea
inc
xor
sbb
and
mov
push
xchg
daa
arpl
stos
mov
and
cwtl
btsl
pop
inc
xlat
insl
cmpsl
sti
mov
stos
lea
jo
sub
in
out
ljmp
mov
xchg
xchg
std
xor
mov
bound
aaa
jle
repnz
xlat
imul
push
inc
jbe
shr
jnp
cmc
fstps
sar
mov
ret
push
repz
cmp
push
daa
cmp
ficoml
stos
fsubs
mov
adc
test
imul
push
mov
adc
leave
adc
sbb
mov
repnz
dec
sub
dec
and
mov
lcall
ret
add
in
xor
mov
or
or
mov
daa
pop
and
scas
mov
out
mov
adc
xchg
push
xor
push
fldt
mov
add
dec
jnp
ja
filds
inc
sub
xchg
push
cmp
psubusb
arpl
inc
out
in
cmp
dec
mov
cs
dec
enter
jge
scas
cmp
add
pop
pop
addb
sub
dec
add
mov
inc
iret
lock
int3
dec
xchg
pop
std
push
jbe
je
enter
fidivs
je
jge
loope
inc
popa
jp
and
mov
or
mov
xchg
mov
mov
fldl
cmc
mov
mov
enter
dec
sti
lahf
fmuls
adc
fnstsw
or
inc
lahf
push
loop
aaa
adc
mov
rol
mov
sub
add
fistpll
pop
mov
sbb
mov
ds
loop
xchg
flds
mov
enter
out
mov
mov
cmp
jne
insb
cltd
lret
xor
lock
and
and
cmp
lods
push
pop
jmp
lock
idiv
or
lea
mov
pop
inc
hlt
out
imul
aam
pop
inc
adc
ljmp
or
nop
lahf
push
es
jg
loopne
inc
dec
sub
cmp
std
pop
shlb
fnstsw
call
bound
mov
orb
add
aad
pop
in
or
popa
sbb
ret
sub
push
test
xchg
mov
js
flds
jmp
or
dec
jge
sbb
cs
xor
gs
push
add
mov
xlat
lahf
adc
lock
jg
adc
sbb
out
inc
lods
adc
idivl
add
cmpsl
push
sub
je
mov
sti
mov
inc
loop
push
stos
in
dec
mov
add
push
and
xor
xchg
add
or
sub
enter
xor
push
pushf
mov
jl
mov
push
loope
les
int
hlt
in
cmp
xlat
mov
test
ret
aaa
sbb
jl
add
daa
pop
pop
sbb
xor
and
addr16
mov
imul
ret
int
mov
mov
dec
and
jge
pop
outsb
fs
mov
rorl
xor
test
je
inc
fists
das
sti
add
shlb
mov
pop
push
mov
and
jnp
pushf
sbb
mov
movsl
loopne
xor
push
sti
xor
pop
not
cmp
push
sbb
fnsave
enter
sub
dec
std
push
jbe
mov
aaa
hlt
dec
push
gs
dec
repnz
mov
mov
fwait
fisttpll
mov
popf
or
loopne
mov
or
or
enter
xor
mov
pop
outsb
stos
and
dec
aas
inc
push
adc
dec
pop
add
or
cwtl
in
xor
mov
sub
push
scas
adc
push
xor
sub
outsl
cld
xor
out
je
cmp
sub
inc
enter
shr
call
in
ret
mov
cmc
fildl
push
mov
jg
les
sbb
rclb
incb
sbb
dec
inc
cld
sbb
dec
movsl
pop
mov
sub
adc
pop
pop
pop
hlt
movsl
fwait
dec
ss
sub
mov
test
scas
xchg
push
rcll
aas
xchg
cmc
lock
jp
push
inc
das
push
and
leave
xor
lahf
stos
es
push
pop
das
fs
das
test
sub
pop
cwtl
jl
stos
cmp
sub
loopne
sbb
add
int3
and
pop
adc
lods
mov
mov
sub
cltd
jmp
push
cld
jnp
mov
adc
js
fnstsw
dec
and
xor
jg
jl
aas
xchg
insb
jb
dec
or
add
push
ficomps
loope
jge
dec
xchg
mov
push
movl
mov
cmpsl
push
sub
pop
sub
fdivl
sub
add
popa
mov
cld
cmp
divb
sub
pop
pop
test
cmp
fwait
fs
jne
mov
sub
test
stos
vpminub
cmp
push
jns
pop
in
push
inc
test
mov
push
ret
xor
xchg
std
dec
gs
dec
movsl
xchg
mov
mov
lock
fwait
or
xor
jns
mov
je
or
push
sbb
roll
nop
mov
xchg
or
jmp
ret
mov
mov
pop
xchg
cmp
leave
lock
add
and
or
sbb
rcl
add
inc
out
aaa
repnz
xchg
cmpl
addr16
push
xchg
aad
testb
pop
popa
gs
push
add
xor
out
pop
cwtl
pop
sbb
mov
xchg
cld
in
jg
inc
mov
mov
hlt
loop
and
adc
mov
pop
scas
out
and
sub
fnclex
jge
inc
std
xchg
sahf
cld
outsl
pop
pop
ja
mov
fwait
add
push
or
arpl
jecxz
pop
dec
sub
test
fisttpl
push
test
or
cmp
adc
ret
push
inc
lock
popa
enter
scas
mov
pop
push
mov
decl
xchg
jmp
xchg
subb
lock
faddl
mov
inc
add
movsl
movsl
test
in
stos
rol
std
out
jne
pop
je
ret
cs
xor
jecxz
loop
xchg
fdivs
dec
adc
pop
in
cmpsb
iret
mov
mov
mov
xchg
mov
mov
mov
adc
sti
mov
cmp
fadds
fstps
cmpsb
pop
fstpt
xor
push
xchg
fdivrl
ret
popa
pop
stos
iret
dec
mov
outsl
sub
pusha
xchg
lret
mov
push
mov
adc
es
sbb
push
adc
dec
in
push
mov
roll
and
mov
inc
repz
into
dec
pop
jmp
pop
addl
inc
adc
sub
sub
jg
aam
pop
repnz
int
ljmp
mov
add
inc
push
nop
xorl
sub
push
or
jns
jne
pusha
mov
ljmp
xchg
arpl
scas
mov
fbld
push
mov
mov
jae
test
pop
add
adcl
popf
dec
out
cmp
std
xchg
shlb
jle
sbb
adc
mov
inc
in
and
or
xlat
mov
mov
jnp
adc
push
push
or
jne
sbb
jmp
imul
xor
mov
mov
mov
xchg
or
cmp
jmp
leave
push
int
jb
jecxz
push
cmp
fcoms
xor
das
insb
sub
add
in
sub
or
pop
fbld
or
lds
sub
inc
jns
cmc
mov
sbb
aas
pop
out
out
loopne
bound
rolb
adc
xor
mov
insl
inc
mov
jbe
cmp
out
aam
mov
test
scas
push
insb
inc
ja
or
cwtl
lods
mov
dec
shrl
xlat
js
into
push
in
adc
xchg
loop
shl
in
pop
out
jl
clc
in
or
xor
dec
stos
sarl
and
fiadds
jo
pop
fmull
dec
cmp
cltd
jl
sbb
mov
add
mov
inc
jmp
lods
lret
jae
popf
imul
call
rcl
adc
into
sbb
lcall
outsb
push
mov
fstps
inc
mov
in
jmp
dec
ds
ds
xlat
lahf
xchg
lahf
and
jne
je
rclb
enter
push
out
es
sti
sbb
xchg
push
fistps
int
lock
push
xor
mov
lcall
cli
and
in
adc
call
cmpsl
pop
mov
mov
int
mov
movsl
out
mov
stos
lods
add
ficoml
dec
xchg
xor
mov
pop
movsb
lea
and
mov
push
xor
scas
int
push
xchg
push
sti
arpl
jecxz
cmp
lods
jnp
mov
ljmp
rcr
mov
imul
sbb
and
lahf
int3
mov
in
test
ret
cmpb
push
scas
pushf
cmp
adc
inc
xor
arpl
adc
jns
into
cmc
push
adc
xchg
les
test
mov
bound
sub
hlt
jg
pop
mov
dec
mov
dec
mov
jbe
das
les
inc
popa
sub
cmp
aas
ja
cmp
cmp
inc
lret
in
lock
loop
cwtl
lahf
pop
hlt
mov
into
add
jae
sub
inc
xor
mov
das
jl
mov
xor
std
and
shlb
popf
inc
outsl
mov
push
xor
lods
test
addl
sbb
rcrl
adc
mull
mov
cs
jbe
pop
dec
enter
and
jg
jge
mov
incb
adc
xchg
push
ss
lock
scas
adc
ss
pop
into
push
fcomi
inc
insl
xchg
jbe
shll
jne
cli
int3
aas
xor
mov
js
mov
xor
push
clc
cli
sbbl
test
sub
frstor
dec
movsb
jbe
in
and
xor
and
addr16
add
or
mov
adc
sbb
cmp
shrb
test
jecxz
sbb
js
roll
xchg
sub
or
mov
cmp
jne
xor
cld
movsb
cld
adc
jbe
dec
push
dec
adc
xor
dec
ss
fwait
aas
aas
mov
inc
std
xchg
cmp
mov
loope
pop
pop
cmp
lods
jne
inc
fstpt
xor
hlt
sub
das
mov
mov
inc
or
or
int
fadds
adc
mov
mov
inc
enter
cmp
loop
in
imul
lock
jns
lcall
inc
sub
andb
fadds
pop
xlat
inc
rolb
lret
lods
or
test
ja
and
popa
cmp
pop
add
add
pop
imulb
cmp
in
in
mov
dec
sbb
xchg
out
or
xchg
cmp
mov
ds
xor
popa
and
fiadds
cs
mov
lea
jecxz
pop
out
shll
dec
mov
ja
adc
dec
out
lret
test
out
push
lret
test
fildl
dec
pop
in
or
dec
daa
jno
in
or
add
jecxz
lcall
lea
cmc
or
sbb
push
loope
mov
add
mov
jmp
cmp
mov
mov
aas
jl
imul
jmp
arpl
data16
insl
jb
imul
movsl
jp
in
cmpsl
rcrb
stos
jge
mov
jo
test
and
daa
lods
aad
push
scas
test
pop
in
mov
lods
test
popa
dec
jae
aaa
sbb
add
inc
in
out
notl
sbb
pop
jg
sub
mov
add
in
lret
cld
cltd
xor
mov
cld
push
pop
rorb
push
test
sbbb
jl
aaa
mov
jecxz
jno
nop
pusha
ficoms
dec
push
or
les
nop
es
outsb
data16
push
dec
scas
push
leave
mov
pop
aas
mov
jp
int
lock
sbb
dec
aad
icebp
cwtl
fcompl
xchg
sbb
lods
or
xchg
pop
xchg
loopne
pop
mov
subl
aaa
or
cmc
dec
pop
push
add
stos
out
in
movb
scas
add
push
aaa
cmp
jae
mov
out
xchg
mov
jns
mov
adc
out
std
popf
jecxz
and
mov
shll
test
repnz
mov
popa
cmpsl
jnp
sahf
js
add
push
das
xor
push
aad
mov
jb
add
xchg
arpl
add
adc
aad
cmp
or
mov
jl
push
cmp
sub
pop
in
gs
xor
hlt
add
sbbl
and
rorb
xor
leave
ret
notl
lea
xchg
push
cwtl
mov
mov
sbb
inc
push
xor
fidivs
bound
jbe
mov
and
jns
mov
cltd
jno
jg
call
cmp
in
nop
in
or
push
lds
xor
repz
gs
das
mov
popa
nop
cmc
sti
scas
lods
pop
or
out
addr16
mov
push
mov
sub
jo
das
mov
sbb
fwait
sbb
adc
push
jne
subl
or
int3
inc
xor
adc
add
in
mov
fidivrl
repnz
and
pop
sbb
pop
xchg
mov
mov
ss
mov
sbb
adc
jo
add
xchg
xchg
lods
sbb
mov
jmp
je
dec
inc
pusha
loopne
leave
push
dec
cmpsl
jl
and
inc
insl
add
test
pop
push
mov
mov
imul
push
aam
cmpsl
fimuls
dec
int
aas
mov
mov
push
movsb
in
jg
mov
jo
xchg
xchg
sub
xor
xchg
imul
jge
add
aam
cld
jb
add
or
cmp
je
or
fimuls
pop
jle
les
mull
imul
jge
fsubs
sbb
jmp
bswap
cmp
and
jae
pop
sbb
cmpsb
mov
lock
hlt
scas
jmp
enter
push
fs
push
in
cmc
jnp
jg
and
dec
stos
aas
stos
addr16
push
mov
jns
data16
mov
bound
xor
cli
dec
jno
addr16
daa
sub
xor
push
mov
xchg
je,pt
pop
data16
rcrl
pop
inc
sbb
cmp
push
jb
push
cmp
aaa
stc
mov
or
push
mov
aad
pushf
rorb
pop
dec
mov
pop
stc
add
cwtl
xchg
outsl
std
push
inc
je
sahf
sbb
shl
idivl
pusha
jnp
cmp
push
mov
lea
paddd
test
mov
adc
jb
flds
gs
orb
and
inc
or
jne
and
ret
push
ds
shl
out
adc
int
dec
sub
aam
lret
and
fs
out
mov
call
ss
shl
lea
ds
push
ret
jmp
rclb
cmp
adc
out
mov
test
aas
push
adc
cmpsb
stos
adc
mov
cmp
push
dec
or
ss
pop
call
adc
bound
mov
push
mov
imul
outsl
lea
mov
mov
dec
test
cs
xchg
cmp
mov
leave
dec
or
jge
stc
sub
mov
mov
es
mov
scas
idivb
jnp
cmp
or
subb
out
cmp
mov
test
pop
int3
xor
sub
jp
iret
pop
es
lcall
sbb
stos
lds
and
inc
lods
adc
push
jp
les
mov
inc
dec
add
cmp
loope
and
dec
cli
jp
lahf
dec
xchg
mov
and
adc
mov
cltd
lret
ljmp
ret
push
adc
cmc
cltd
faddp
push
movsl
adc
push
sub
mov
sti
jmp
pop
push
shl
push
pop
push
xor
add
mov
and
ret
pop
cmp
jmp
fstps
test
mov
mov
movsl
pop
mov
mov
ret
xor
dec
mov
movsl
pop
stc
inc
mov
cmp
xchg
jnp
nop
mov
add
and
jo
cmp
jl
add
int3
lods
push
mov
xor
xchg
pushf
pushf
sub
dec
stos
mov
lahf
add
jp
jne
push
dec
and
push
xlat
jo
insb
and
fidivs
push
lods
inc
jl
test
mov
out
fwait
push
hlt
mov
mov
dec
out
dec
fisubs
les
fsubrp
and
jl
insb
je
xor
mov
jb
sti
add
cli
shll
mov
jle
push
and
rol
mov
dec
out
divb
repz
mov
push
test
pop
sarb
into
andl
mov
or
push
fstpl
cmp
mov
add
leave
icebp
and
ror
cmc
sub
or
pop
in
aaa
mov
lcall
pop
add
nop
xor
xor
scas
xchg
adc
mov
push
inc
or
cld
test
movsb
adc
test
outsb
cltd
dec
pushf
push
test
sbb
inc
sahf
clc
pop
loopne
sbb
dec
nop
jbe
and
dec
lret
adc
imul
push
mov
or
or
outsb
mov
dec
sub
push
dec
mov
mov
sbb
int
dec
push
adc
scas
ja
test
scas
inc
dec
cmp
insb
mov
ret
mov
mov
inc
sbb
pop
dec
xor
sti
dec
faddp
push
faddl
push
scas
pop
adc
repnz
or
dec
mov
cmc
push
xchg
shrl
cmp
adc
rcll
adc
pushf
cmpsb
push
pushl
jmp
dec
leave
fnstcw
push
jge
bound
jns
cmpsl
insl
sbb
inc
fsts
int3
mov
mov
in
xlat
push
out
cmpsl
icebp
int
mov
cld
pop
sub
sbb
out
test
movsl
scas
je
addl
dec
imul
cmp
icebp
mov
sbb
jp
xchg
cwtl
out
lahf
aam
lods
mov
addr16
lcall
and
jp
lahf
das
outsb
iret
dec
push
add
fnsave
mov
mov
push
jbe
sbb
pop
mov
adc
cmp
ficompl
push
xchg
pop
lds
sahf
xlat
aas
adc
fadds
sub
adcb
lcall
pop
sti
or
dec
add
je
shlb
daa
mov
mov
cmp
mov
add
test
push
push
into
sub
cli
sbbb
dec
cmp
mov
mov
adc
pop
sbb
sub
sbb
lahf
mov
cmp
pop
push
inc
xor
stos
imul
mov
aaa
rcr
mov
int
sub
push
lret
outsl
or
sbb
bound
fstps
xor
sahf
icebp
jbe
xchg
push
mov
mov
xchg
movsb
push
ret
repz
cmp
xchg
orl
loope
mov
xor
cmpsb
mov
mov
repnz
arpl
and
xchg
xchg
ds
mov
pusha
pop
insl
inc
popa
adc
repz
movsl
lods
and
cs
es
imul
mov
dec
outsb
mov
and
mov
movb
sub
ret
ret
mov
shr
jg
mov
jb
notb
data16
mov
lds
inc
fiadds
mov
lock
cmp
pop
cmp
pop
mov
fdivrl
or
sub
std
cmp
jg
out
xor
jne
int3
orl
mov
jl
aas
sub
sub
outsl
leave
or
lods
xchg
rorl
jae
add
dec
enter
cmp
movsb
lds
inc
mov
jmp
jbe
and
inc
data16
cmpsb
adc
push
scas
xlat
xchg
sbbl
sub
jns
add
sub
arpl
xor
jmp
sub
addl
arpl
mov
dec
rorb
inc
cmp
push
jae
in
je
ret
cmpsb
sbb
adc
inc
inc
shrl
dec
xchg
push
bnd
sti
adc
fs
aam
mov
dec
sbb
mov
push
lret
mov
mov
cmp
cs
mov
or
inc
je
fisttps
into
decl
jmp
aam
mov
mov
frstpm(287
lret
xchg
ret
aam
movsb
sahf
notb
adc
push
jae
mov
xlat
mov
push
mov
outsb
fsubr
ds
addr16
stos
add
mov
dec
clc
iret
pop
xor
in
and
es
mov
push
je
cmp
inc
sbbb
test
cs
jae
and
int3
leave
mov
lock
mul
repz
mov
or
push
or
sbb
jmp
inc
lahf
dec
scas
test
cli
cli
xchg
mov
mov
adc
int
test
xchg
adc
sub
sub
daa
into
lock
xor
add
and
pop
sub
data16
rorb
pop
xchg
add
mov
sub
or
mov
add
sti
xchg
jno
and
insl
out
xchg
out
cmc
sub
push
addr16
add
xchg
mov
pop
jle
adc
cmp
subl
add
addr16
mov
push
jmp
loope
sbb
jns
xor
iret
add
es
movsl
sbbl
sub
cmpsb
xchg
in
stos
mov
pop
in
mov
aaa
xchg
outsb
xorl
orb
adc
mov
mov
mov
or
leave
jp
inc
dec
incl
and
mov
sbb
jmp
sub
mov
jp
jnp
jbe
cmc
inc
xchg
jne
lcall
pop
mov
mov
pusha
imul
repz
scas
xchg
pop
xor
iret
push
mov
pop
stos
dec
iret
movsl
xorb
iret
imul
enter
outsl
sub
or
popa
jo
lcall
mov
pop
mov
mov
or
rol
mov
sbb
dec
pop
sbb
adc
nop
and
inc
jle
fwait
mov
lahf
out
imul
inc
xlat
pop
push
adc
push
je
insl
and
mov
jno
cld
xchg
popf
jl
inc
outsb
int3
or
je
lcall
jbe
pop
faddl
add
push
sarb
lcall
das
test
loope
stos
pop
fidivrs
inc
into
mov
mov
ds
cli
push
push
cmc
jle
mov
push
std
dec
mov
push
mov
iret
stos
sbb
push
inc
jae
mov
lahf
mov
jne
stos
in
leave
dec
mov
lcall
repz
daa
cs
xchg
adc
add
jle
popf
mov
and
cmpsl
shll
enter
les
sti
test
lret
jecxz
push
pop
sub
xor
das
push
inc
inc
inc
adc
arpl
and
ljmp
jbe
push
orb
xchg
cmp
rclb
jp
jmp
ret
sti
mov
mov
es
jb
and
sub
add
mov
test
daa
orb
movl
sub
sbbl
xor
cmp
movl
jne
adcl
xor
movl
jmp
mov
mov
sub
add
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
and
movl
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
adcl
mov
movzbl
add
mov
xor
add
mov
and
mov
mov
movl
sub
mov
movl
movl
cmpl
movl
je
mov
add
xor
mov
adcl
xor
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
push
pushl
pushl
pushl
pushl
call
jmp
mov
addl
xor
sbbl
div
sub
mov
xor
addl
add
decl
mov
jmp
shl
call
rclw
shlb
loop
jnp
cwtl
jnp
out
loopne
cmp
jg
pop
and
jns
push
dec
ja
scas
xor
sahf
xchg
cmpl
adc
test
jae
xor
mov
bswap
sub
lds
xor
xchg
cmpl
movsb
ljmp
out
push
roll
push
jmp
shr
daa
mov
fwait
clc
dec
fs
dec
adc
xor
addr16
push
nop
les
mov
jae
jl
jns
aam
jnp,pn
lret
notb
repnz
or
sbb
addr16
imull
xchg
pop
sub
mov
outsb
fistpll
mov
mov
pop
push
mov
add
add
and
pop
mov
sub
popf
frstor
mul
cltd
js
sbb
cli
aaa
add
sub
cmpsb
enter
sbb
dec
ljmp
xchg
mov
test
test
and
arpl
sub
popa
add
inc
push
sub
int
xchg
ljmp
and
out
add
mov
mov
repnz
aas
pop
adc
xchg
or
scas
shll
in
les
pop
mov
sub
adc
or
mov
stos
xor
cmp
lods
ds
movsl
aam
adc
aam
stos
jno
push
push
inc
pushf
pop
jnp
inc
mov
ret
mov
xchg
cld
dec
fidivl
push
pop
push
mov
or
out
clc
mov
popa
jbe
es
and
movsl
cmp
inc
rorl
sbb
ja
sbb
xchg
jge
ja
cmc
jl
lahf
aaa
sub
sahf
test
adc
test
inc
inc
xor
movsl
inc
cmp
das
adc
mov
out
add
stos
insl
iret
sub
loope
ret
sbb
sub
or
jg
enter
jge
inc
jns
lock
sbb
xor
insb
add
data16
in
subb
or
testb
add
inc
pop
push
sub
decl
cmpl
icebp
iret
jne
add
enter
lcall
adc
xor
xchg
cwtl
xor
aaa
adc
ss
loope
inc
inc
loopne
fs
lret
xchg
icebp
jne
dec
sbb
and
fstpt
inc
lock
jmp
xchg
pop
jo
jg
call
int
in
cmpsb
movsl
mov
xor
mov
cmc
xchg
lahf
test
xchg
mov
adc
aas
jmp
mov
cmpsb
add
jns
stos
push
fstl
popa
cmc
cmc
call
jl
in
aam
loopne
sub
rcll
push
lret
int3
rclb
mov
inc
pop
dec
mov
mov
test
mov
jmp
and
xor
in
dec
mov
icebp
lds
adc
outsb
cltd
sub
je
je
push
scas
sahf
popf
mov
mov
sub
add
pop
pop
jbe
movb
xor
push
push
mov
dec
aaa
push
dec
aas
loope
in
pusha
mov
nop
inc
out
lret
loopne
lock
mov
pop
fbstp
inc
sub
jns
inc
adc
lods
jns
andps
cmc
pop
xchg
add
push
aad
pop
sahf
jmp
xor
pop
or
decb
loope
mov
loop
xchg
ret
insb
xchg
sub
pop
cwtl
das
pop
and
ror
push
ss
mov
mov
dec
fbstp
jnp
in
add
sub
push
jecxz
clc
pop
and
jmp
or
cmp
sbb
fcmovbe
js
in
bnd
fld
arpl
scas
aad
in
shl
lods
lret
hlt
xchg
lahf
repnz
inc
addr16
scas
ja
fwait
jmp
add
outsb
rcrl
mov
leave
mov
mov
mov
or
pop
jl
stos
icebp
mov
mov
sub
sahf
jge
pop
cmpsb
or
mov
pop
push
sbb
mov
xor
les
lods
add
xchg
sbb
adc
add
arpl
add
jle
ret
fists
add
jo
loope
in
enter
fs
movsb
arpl
and
xchg
fs
hlt
mov
sbbl
sbb
mov
lret
add
xor
adc
push
jns
jecxz
pop
js
push
adc
inc
sti
aaa
push
add
sub
cld
enter
into
jp
ror
std
insb
ss
std
sbb
cmp
jbe
repnz
jo
sbb
lods
sarb
test
mov
aas
mov
cmp
inc
push
pop
adc
pop
push
mov
nop
jb
xor
sub
movsb
cmpl
ss
repz
or
out
loope
out
lret
faddl
mov
sub
inc
cmp
push
cmpsb
jbe
imul
and
and
mov
movsl
or
adc
dec
dec
or
js
fwait
inc
mov
pop
mov
insl
imul
push
ffree
imul
mov
in
xchg
test
out
mov
adc
aas
push
dec
jo
out
lock
jo
mov
jbe
pop
popa
std
sub
leave
mov
mov
sbb
icebp
adc
adc
test
pop
inc
cld
mov
cmp
hlt
insl
mov
ret
fmull
xlat
or
ja
dec
loopne
mov
outsb
in
push
mov
push
inc
mov
flds
sbb
jecxz
cs
adc
arpl
adc
in
dec
outsb
push
scas
lret
movsl
cmpsb
cli
xchg
pop
lock
sbb
fcmove
mov
add
inc
fmuls
xchg
scas
inc
inc
push
push
and
pop
sub
std
in
dec
and
dec
test
ret
arpl
mov
push
push
cmpsl
and
outsb
jbe
xchg
ss
adc
sub
add
outsb
inc
dec
dec
stos
or
mov
sahf
or
and
inc
push
aas
imul
push
jmp
sbb
pop
mov
sub
js
jb
nop
sbb
xor
mov
sbb
in
sbb
clc
jp
push
sbb
hlt
sub
xlat
inc
xor
xchg
test
fnstsw
out
decb
pop
or
inc
imul
aaa
int
lds
std
mov
dec
test
pop
dec
sub
cmp
jmp
cmpsb
outsb
rcrb
mov
add
pop
loope
xor
lret
int3
es
rolb
outsb
shrb
push
pusha
into
scas
sub
cmp
dec
jmp
sub
pushf
jmp
dec
fs
fimull
jecxz
mov
dec
shlb
les
sbbb
lret
mov
les
cmpsb
outsl
into
cmpb
out
push
sub
mov
and
xor
and
in
jmp
sub
push
fsub
dec
jp
mov
add
push
fisubrs
xchg
sbb
or
xchg
enter
fwait
sub
das
xor
leave
cmp
dec
xor
jle
mov
insb
dec
mov
fs
cltd
inc
push
lahf
sub
lds
insb
pop
jp
ljmp
add
jbe
ja
jns
pop
cmp
outsl
push
arpl
int
pop
in
dec
xchg
cmp
sub
ret
sbb
inc
loope
gs
cwtl
addr16
das
inc
cwtl
mov
lahf
sbb
add
lret
sarb
jle
gs
or
cli
xor
lret
int3
sbb
dec
popf
sub
adc
aam
inc
pop
adc
lret
jno
cltd
push
out
jmp
sbb
movd
sub
mov
in
cmpb
add
xor
fbld
out
lods
add
mov
in
sub
andb
cmp
stc
aad
inc
or
movsl
cmp
scas
pushf
fcoms
lock
lea
mov
sti
test
xchg
jo
xchg
repz
aaa
xor
cmp
int3
xchg
push
dec
aaa
cmp
rcrl
shlb
test
mov
mov
add
push
hlt
div
or
loopne
push
aam
fsubrl
sbb
aaa
inc
fistpl
cmp
push
and
push
je
mov
fidivs
dec
xchg
ss
xor
cmp
pop
or
mov
fildll
push
shl
mov
das
dec
mov
jmp
and
dec
jo
lret
sbbb
stos
xor
pop
add
jns
add
rclb
fwait
stos
fstpt
lods
je
push
mov
pusha
enter
stos
adc
adc
stos
lock
stos
std
add
xor
orl
popa
hlt
in
loop
ret
js
jmp
xor
xchg
dec
pop
pop
hlt
pop
imul
push
xchg
adcb
stc
hlt
je
ret
paddsb
dec
jae
scas
dec
lcall
pusha
cs
pop
mov
xor
imul
lock
ja
mov
xor
jge
in
lods
cmp
inc
cmp
mov
sub
jle
popa
pop
dec
push
xor
pop
push
inc
sbb
xchg
lds
or
cmp
aaa
push
add
dec
xchg
insl
pop
xchg
mov
das
mov
mov
push
pop
sti
mov
jb
in
sub
cmc
mov
ds
loop
loop
push
cmpsb
sub
jg
mov
into
es
xchg
divb
mov
mov
jo
adc
jnp
mov
mov
sub
insb
inc
cmpsb
xchg
xchg
notl
lods
fldenv
xchg
das
scas
fsts
lcall
insl
fs
test
enter
and
jno
cmpsl
movsl
mov
or
dec
jmp
rcrl
jns
sbb
cltd
or
pop
add
fldt
mov
mov
jnp
pop
rol
dec
jmp
movsl
out
stc
and
pop
sub
lea
xchg
push
ss
cs
insb
inc
jle
jbe
int3
pop
mov
dec
cmpsl
xchg
adc
adc
mov
out
jmp
fwait
xor
rcr
sbb
cmp
mov
int
mov
out
mov
shrl
jns
mov
xor
adc
pop
push
mov
cmc
mov
das
mov
xchg
dec
push
jl
dec
mov
test
clc
divl
lods
sbb
jp
xor
fisttpll
aas
xchg
fldt
lds
loopne
ret
je
xchg
xchg
and
in
ss
xor
jl
pop
loop
call
xchg
inc
dec
and
fisubrs
jae
orl
fmull
cmp
sub
dec
inc
sbb
add
mov
ss
mov
xor
aaa
mov
cmp
mov
cmp
cmp
pop
repnz
push
lahf
adc
mov
jmp
int
push
jns
adc
popf
cmpsb
aad
xchg
ficoms
inc
rclb
jp
or
adc
sub
xchg
jmp
mov
inc
dec
ret
pop
push
jecxz
pop
cmp
xlat
stos
sbb
cmpsl
xor
sub
jecxz
loopne
lods
jmp
adcb
jb
push
lret
dec
out
pop
lock
lods
mov
test
dec
xor
cmc
add
clc
rolb
mov
jp
pop
mov
xor
stc
xor
mov
mov
jo
dec
pop
inc
sbb
jle
mov
cli
pop
adc
xor
lcall
or
cmp
cmc
add
sti
fldcw
sbb
fisttpl
sti
fistl
adc
inc
inc
cs
ja
test
and
xor
fmul
mov
mov
jb
enter
xchg
pop
fistpl
push
fstpt
dec
or
incb
mov
scas
std
adc
stos
test
xchg
inc
fstpl
fnstsw
push
sub
pop
push
push
or
jl
scas
cmp
adc
sub
lods
mov
xchg
ret
cmc
aas
inc
mov
adc
adc
dec
mov
sub
out
pop
test
adc
int3
outsb
sbb
and
out
fisubrl
jns
fwait
imul
clc
mov
adcl
cs
mull
daa
movsb
fidivs
mov
mov
jge
push
aam
mov
pop
cli
xor
inc
in
int3
sub
ss
shlb
inc
jecxz
pop
add
lcall
or
cmpsl
adc
mov
icebp
les
push
ret
sahf
inc
inc
pop
int
adc
pop
ja
mov
cmpsl
popa
icebp
mov
add
data16
push
mov
pushf
push
hlt
pop
fadd
add
scas
test
shrl
cmp
sub
shlb
loope
inc
scas
jmp
loope
xor
sub
nop
add
imul
stos
adc
mov
sahf
cmp
int3
addb
cld
inc
insb
in
add
add
xchg
lcall
push
addr16
mov
dec
mov
popf
mov
test
push
ja
repz
insb
sbb
mov
frndint
pop
xor
pop
lret
push
imul
xor
jp
mov
mov
int
hlt
jo
adc
aad
sub
xor
mov
cli
inc
fsts
cmc
adcb
shrb
mov
xor
vmovdqu
sbb
and
stos
jno
sbb
jp
mov
cld
cmp
add
mov
push
push
fimull
jne
stc
sub
mov
fimuls
mov
xor
je
loop
add
inc
imulb
lods
imul
insl
adc
xor
jge
sbb
mov
daa
xchg
jo
mov
inc
in
inc
xchg
mov
addb
les
aad
scas
or
mov
dec
aad
ljmp
add
outsb
and
or
mov
and
cmp
loopne
loop
xchg
mov
jmp
sbb
or
mov
cmp
loopne
out
pop
jb
lea
inc
test
ficompl
add
mov
mov
stos
cmove
push
cmp
inc
pop
daa
jns
lds
ja
int3
test
cltd
filds
adc
dec
mov
push
movsb
out
pop
jmp
and
int3
call
mov
push
xor
arpl
xchg
mov
int3
cmp
test
push
pop
fst
cmp
inc
sbb
es
mov
or
cmp
xchg
sub
iret
or
aaa
inc
and
test
mov
adc
sahf
mov
clc
lods
inc
dec
cmp
pop
xchg
loop
scas
push
xlat
addr16
shll
jmp
dec
pop
popf
xchg
roll
pop
xchg
mov
sub
rclb
push
inc
addb
std
outsl
mov
add
cmp
outsl
sbb
mov
rcrl
es
jmp
icebp
std
xchg
loopne
mov
loopne
sbb
cmp
push
cmp
xchg
mov
and
inc
mov
outsl
add
mov
mov
jecxz
out
xor
mov
xor
dec
inc
push
xor
adc
jmp
jae
jnp
bound
stos
cmp
xchg
inc
fnsave
mov
push
repz
sahf
in
jo
push
stos
jns
inc
cmp
shld
out
cmp
mov
mov
mov
repz
dec
jb
cmpl
sbb
adc
in
jnp
sti
insl
inc
mov
icebp
pop
jbe
cltd
repnz
shlb
or
jecxz
stc
test
lods
rcrb
mov
or
xchg
fdivrl
cwtl
jae
ja
push
call
jo
jecxz
je
cmp
mov
aad
and
mov
rcrl
shlb
ja
pop
lahf
lea
or
push
mov
pop
cmp
mov
int3
outsl
loope
push
push
lock
xchg
push
shrl
sbb
mov
sbb
sbb
js
movsb
lcall
xchg
push
cmp
mov
hlt
int3
les
test
orb
adc
out
repnz
xor
pop
xchg
inc
sub
cmp
mov
fcoml
aam
mov
cmp
and
add
xchg
cmp
xchg
jo
inc
mov
inc
add
or
xor
pop
lret
and
add
test
dec
mov
pop
adc
sbb
pop
fcoml
test
iret
pop
xchg
cmp
push
pop
and
fbstp
push
ss
cli
ljmp
lods
decb
add
mov
and
mov
or
in
dec
jg
push
pop
mov
pop
fsubp
cvtdq2ps
repz
adcb
jmp
lods
cwtl
cmp
mov
xchg
xlat
pop
mov
jnp
ds
shlb
cld
and
jmp
sub
daa
sbb
cmp
mov
addr16
enter
popa
daa
sbb
mov
stos
sbb
pop
sub
cwtl
mov
cmpsl
orl
push
xor
imul
ret
mov
push
outsb
cmc
xchg
fdivrl
jns
rolb
xchg
mov
insl
sub
mov
out
daa
dec
mov
xchg
pop
mov
sti
mov
jp
insl
mov
iret
and
mov
xor
dec
mov
jp
std
xor
xchg
loope
js
sbb
xchg
scas
xor
aaa
ret
pop
push
ficoml
sbb
xchg
pop
sbb
cmpsb
mov
sti
lcall
sbb
pushf
sub
xor
xchg
iret
sbb
mov
int
add
adc
jl
mov
mov
sahf
int
fxch
popa
or
fiadds
aaa
cltd
stc
scas
fiaddl
leave
frstor
mov
push
aaa
mov
push
faddl
test
sub
stos
jbe
mov
rorl
mov
popf
cmpsl
out
mov
test
mov
jge
gs
mov
into
inc
leave
lahf
push
pop
mov
lock
pop
push
pusha
mov
jne
leave
sbb
mov
sbb
and
xor
loope
in
inc
movsb
sahf
lcall
mov
movsl
add
mov
mov
roll
mov
adc
dec
fwait
sahf
out
lods
stos
lods
adc
pusha
cmpsl
aad
mov
mov
mov
or
cmp
outsb
cmp
cmp
les
inc
into
push
into
rcll
leave
not
inc
iret
mov
mov
ret
lods
xor
inc
scas
scas
xor
adc
inc
arpl
sub
data16
gs
aas
sub
aas
push
pop
shrl
cmpsl
pop
shlb
in
ljmp
orb
dec
mov
cmp
push
loop
adc
ss
insl
add
out
or
stos
ret
fs
cmp
pop
insb
lret
aaa
scas
into
push
jo
adc
push
pop
and
xor
mov
mov
jp
xor
pop
pop
rorb
bound
sbb
xchg
rcrl
pop
push
fldt
cmp
push
arpl
ror
push
jle
add
cwtl
adcl
pop
repnz
call
stos
or
push
mov
add
cmp
clc
roll
aad
jmp
js
pop
cmpl
or
in
dec
jb
in
pop
dec
mov
add
jbe
orl
adc
sub
fs
or
rcrb
adc
stos
roll
shll
pop
sub
in
xchg
nop
inc
fs
stos
and
insb
or
push
cltd
pop
fwait
cmp
jle
adc
xchg
repnz
mov
dec
jbe
ss
loop
outsb
sbb
hlt
popf
and
jmp
lock
or
or
insl
popf
and
movsl
test
jbe
repz
sub
or
clc
jo
sti
xchg
or
jbe
mov
xchg
cmp
cmc
adc
inc
xchg
xchg
icebp
push
js
mov
adc
push
jbe
jp
out
jmp
or
addl
push
pop
out
fwait
inc
xchg
hlt
insb
mov
push
mov
lds
fstpl
mov
dec
cmpl
in
in
out
mov
out
scas
push
incl
stos
jge
test
outsl
loop
cs
mov
dec
lods
stos
mov
loop
xchg
loopne
xchg
xor
fisttps
and
mov
loop
dec
fnstcw
iret
adc
cmp
lock
inc
add
adc
into
ljmp
lock
push
int3
sbb
push
imul
xchg
cmp
mov
inc
fdivrp
jns
mov
xor
push
out
in
add
fdivrl
adc
in
inc
test
sahf
aad
sbb
jp
lret
pop
mul
add
jne
imul
push
mov
sbb
adc
cmc
repz
xor
shll
mov
jbe
push
out
outsb
dec
test
and
jno
mov
in
imul
cld
inc
nop
daa
mov
fwait
shlb
mov
xor
push
ret
adc
ds
dec
lcall
lea
jae
fisubl
mov
gs
mov
or
pusha
ficoml
add
inc
inc
jecxz
in
and
or
les
les
scas
cmpsb
push
int3
add
push
lret
mov
or
std
dec
mov
movsl
loop
loopne
adc
push
or
inc
jg
push
sbb
push
sbb
fcoms
fmuls
daa
mov
add
inc
adc
cmpsb
repz
push
adc
push
or
cli
jne
mov
sbb
dec
fisttpl
pop
push
jno
xchg
inc
cmpb
and
xor
mov
test
pushf
push
cld
cmp
icebp
in
mov
fcmovbe
stc
pusha
filds
rol
push
lahf
cmpsb
sub
into
inc
inc
mov
adc
inc
mov
wrmsr
mov
stos
jecxz
sub
add
orl
mov
jno
out
push
and
scas
ljmp
jge
push
rolb
jp
ds
nop
nop
pop
mov
out
roll
gs
test
mov
sub
sbb
xchg
jno
clc
mov
in
mov
ret
push
sub
pop
sub
or
leave
inc
ljmp
lds
jl
jle
sub
aad
into
inc
pop
jl
pop
lods
mov
sbb
aad
lcall
xor
inc
adc
sarb
movsl
mov
aad
faddl
lahf
push
mov
loopne
out
or
mov
in
xchg
cmp
sar
xchg
into
sbb
sbb
out
rorb
test
addl
ja
icebp
stos
xchg
mov
dec
popf
rcrl
test
push
sub
adc
xchg
loopne
mov
fwait
adc
fistl
cmp
pop
jp
out
sub
sbb
divl
cmp
mov
jecxz
jge
pop
ret
jo
iret
clc
sarl
push
jae
popa
fadds
cmp
pop
int3
xor
mov
std
adc
add
pop
dec
fwait
push
lods
sarl
mov
test
add
push
jne
out
loopne
xchg
mov
lods
stos
jl
out
ljmp
jns
fsubr
sbbb
call
in
mov
inc
repz
and
mov
fadd
in
jb
jne
fstp
push
inc
ja
loope
cs
jo
jl
arpl
and
lods
pusha
mov
sbb
pop
jae
out
testb
movsb
test
push
cmp
shlb
out
negb
imul
and
subb
mov
outsl
cmp
mov
loope
mov
insl
adc
aad
ljmp
inc
imul
push
xchg
sub
hlt
xchg
movsl
sbb
mov
sub
and
cmpsb
or
iret
sbb
cmc
scas
outsb
mov
mov
xor
lahf
test
pop
shrl
daa
inc
je
es
xchg
je
mov
cli
imul
lea
scas
mov
adc
loope
jmp
pushl
jno
jl
push
cwtl
ss
repnz
sahf
adcl
scas
xchg
and
repnz
and
jb
popf
nop
pop
xor
loop
sbb
movsb
repz
loopne
aas
imul
shrl
push
hlt
mov
mov
sbb
int3
jle
jae
fmulp
add
movsl
call
mov
loopne
inc
pop
xchg
push
in
dec
dec
imul
arpl
insl
add
outsl
pop
add
inc
mov
daa
das
faddl
jae
addr16
pop
mov
push
in
sub
adc
xchg
sub
out
testb
mov
es
in
jp
in
cltd
push
mov
pop
fsubs
xchg
dec
pop
and
int3
and
push
dec
cmp
pop
mov
out
inc
addr16
jmp
dec
inc
mov
mov
xchg
mov
test
cmp
data16
push
daa
pop
fwait
mov
mov
das
into
cltd
dec
shll
sahf
jp
dec
mov
jg
and
jae
jmp
mov
pop
xchg
adc
insl
xorl
into
test
cmpsb
adc
mov
test
ret
cmp
lret
rorb
mov
cmp
in
cltd
imul
jnp
fs
add
sub
int3
mov
in
scas
push
add
das
dec
fstpl
lret
mov
pop
int3
add
mov
mov
jo
enter
test
call
insb
mov
test
sub
fcmovnu
lahf
add
dec
arpl
pop
popf
std
add
test
add
test
popf
xor
aad
jecxz
cmp
mov
das
hlt
cmc
mov
sbb
cmpsb
jge
pop
loopne
cltd
or
cmc
lahf
call
arpl
jb
fs
push
in
sbb
jb
gs
loope
mov
sub
orl
xchg
sbb
mov
and
aam
mov
push
and
in
cmc
pop
push
mov
ret
daa
push
stos
out
fdivp
pop
out
and
inc
mov
ret
insl
pop
sbb
xchg
cltd
pushf
stos
fwait
imul
dec
or
nop
stc
fmull
repz
jo
xor
push
pop
repz
outsb
lods
mov
out
ror
xchg
inc
jae
xlat
rcrb
sub
xchg
mov
dec
fdivr
mov
imull
arpl
push
dec
in
and
dec
scas
std
ds
push
pop
ret
mov
pop
subb
add
aas
hlt
out
adc
mov
fwait
or
out
outsl
xchg
aas
call
cmp
cmp
mov
cmpsl
pop
add
sub
ficomps
add
repz
mov
mov
jg
cmpsb
hlt
in
scas
into
cmp
cmp
out
fisubl
dec
aas
inc
inc
test
scas
push
xor
pop
les
pop
or
inc
and
or
jg
imul
adc
pop
or
aaa
mov
lds
mov
fcomps
mov
es
clc
dec
push
or
dec
mov
out
sub
fcompl
cs
mov
jns
mov
inc
xchg
daa
dec
lahf
dec
test
dec
sbb
pushl
cmc
lods
mov
dec
popf
lock
mov
clc
dec
ljmp
dec
cmpsb
xchg
daa
roll
mov
inc
push
dec
pop
add
outsl
stc
cmp
dec
in
inc
bound
in
and
cs
xchg
adc
xor
cmp
out
in
adc
dec
adc
cs
stos
ds
and
inc
cmpsl
or
fstpl
cltd
icebp
dec
repz
aas
mov
movsl
insl
xor
dec
adc
out
mov
mov
popa
adc
rclb
sbb
leave
adcl
push
cmpl
test
imul
mov
jg
mov
push
mov
pop
ret
jno
das
in
mov
rorl
popf
and
rcrb
jo
xchg
or
xor
movsl
inc
fs
add
jmp
mov
lahf
mov
bnd
cltd
lds
xchg
pop
pop
and
mov
sbb
pop
out
scas
mov
test
mov
mov
icebp
in
sbb
add
movsb
rcll
lea
in
out
ret
pop
mov
aad
inc
cmc
bnd
xchg
repz
push
mov
in
and
sub
leave
push
xchg
add
pop
xchg
decb
mov
xchg
jl
stos
xor
sub
lds
insl
int3
sbb
mov
cmpsb
xor
mov
lock
cmpsl
lods
jmp
repz
and
rcrb
out
outsb
stos
inc
mov
jge
frstor
test
push
push
sti
and
aam
pop
dec
push
cmp
dec
push
sub
xor
xchg
ds
cmc
clc
inc
or
or
insb
or
movsb
cmp
mov
or
fwait
mov
cmp
xor
imul
repz
pop
dec
mov
push
pop
and
fdivs
repnz
dec
mov
mov
sbb
mov
stos
repz
or
popa
in
xchg
pop
push
pop
push
es
dec
in
dec
cmp
in
decl
xor
xor
pop
dec
xor
test
inc
jne
js
out
in
cltd
xorl
xorl
fucom
pop
lds
shlb
adcb
andb
mov
lea
mov
pand
lods
mov
mov
xchg
dec
mov
scas
shrb
add
cmp
xchg
inc
xchg
mov
cltd
inc
addr16
mov
inc
pop
cwtl
aaa
add
push
idivb
add
pop
int
xchg
cmp
clc
stc
sbb
pop
stos
cmp
sub
jnp
lock
fidivrl
mov
jl
adc
cmp
cs
inc
cmpl
push
push
outsl
push
mov
scas
mov
push
and
popa
push
stc
xor
lret
repz
outsb
arpl
mov
loopne
fucom
dec
or
shlb
incl
lods
cmp
push
mov
push
lock
push
cwtl
jmp
mov
sub
bound
push
xchg
adc
sub
cmp
add
adc
inc
or
pop
es
fs
fisubs
sti
das
xchg
movsl
int
repnz
lret
sbb
sub
mov
mov
pop
decb
js
pusha
dec
sbb
lea
popa
mov
ds
pusha
and
daa
mov
jge
pushf
pusha
fnstsw
and
loop
inc
fimull
adc
pop
mov
jb
imul
and
daa
flds
div
add
pushf
aad
sahf
jp
ja
cli
ret
stos
push
enter
xchg
iret
jle
call
icebp
mov
adc
xor
sarl
add
aaa
sub
movl
cmp
jne
or
mov
movl
add
andl
mov
addl
mov
not
mov
addl
xor
addl
add
movl
mov
jmp
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
inc
mov
sbb
mov
xor
orl
add
movl
cmp
jae
mov
inc
sub
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
mov
dec
mov
jmp
xor
add
mov
mov
mov
mov
movl
cmpl
movl
jbe
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
call
cmpl
jb
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
or
add
mov
movl
mov
movl
jmp
xorl
xor
jne
adc
movzbl
addl
xor
add
movl
mov
movl
jmp
or
mov
xor
or
add
adc
movzbl
adcl
sub
subl
mov
mov
xor
add
mov
ror
mov
movl
xor
mov
add
mov
mov
sbb
mov
sbbl
sub
xor
cmp
jne
and
mov
xor
or
sbb
xor
add
adc
mov
xor
xorl
add
addl
sub
not
sub
xor
mov
and
mov
xorl
xor
add
mov
sbbl
sub
mov
movl
jmp
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
jmp
add
sub
mov
sub
mov
jmp
mov
or
mov
movzbl
sbb
mov
movl
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
mov
dec
mov
jmp
movl
neg
movl
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
xor
add
mov
sub
mov
movl
cmpl
je
mov
xor
mov
xor
lea
mov
xor
div
mov
xor
add
mov
xor
add
sub
cmp
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
jmp
cmp
pop
push
pop
push
je
arpl
movsl
rcrb
mov
pop
pop
jnp
mov
jnp
lds
or
lcall
dec
insb
dec
sbb
int
and
int
xchg
aas
cmp
xchg
addr16
mov
mov
jmp
xor
sahf
mov
in
lretw
inc
sub
jbe
movsb
jb
popf
lahf
aas
pop
or
cmp
sbb
and
mov
test
loopne
cmp
mov
cmpsl
int3
adc
stos
jno
cmp
mov
pop
mov
lcall
sub
push
dec
shr
gs
stos
pop
ja
sarb
divb
in
daa
movsb
call
fwait
mov
push
mov
sbb
out
xchg
mov
mov
out
in
cmp
aad
sahf
sub
int3
popa
fmuls
jo
or
pop
aas
or
mov
sti
sbb
push
or
test
clc
and
stc
out
sub
pop
cmp
cmp
lods
pop
cmp
shl
xor
xchg
inc
add
pop
fsubrl
movsb
xchg
lock
sub
or
push
jns
imul
jp
mov
ret
stos
in
je
mov
aaa
stc
pop
scas
xor
int
and
repz
mov
adc
outsl
out
xchg
add
xorl
es
lret
xor
pop
movsl
mov
dec
insb
insb
out
inc
jecxz
aas
and
ret
pop
sbbb
inc
inc
rol
shlb
sbb
es
aad
xchg
push
cltd
sub
adc
cltd
or
xchg
lcall
leave
aaa
mov
jnp
cmc
or
push
lcall
ljmp
xchg
sub
sub
idiv
out
loopne
xchg
jg
xchg
sub
sub
dec
hlt
rclb
das
cmpsb
outsb
pop
pusha
int
popf
int3
add
cmp
mov
dec
out
cs
sbb
jno
hlt
stos
xor
aam
lahf
push
push
ja
push
je
loop
mov
std
into
addr16
int
cltd
int
dec
js
sub
jl
inc
pop
aas
jmp
js
cmp
pop
xchg
test
sbb
add
notb
xor
add
cltd
pop
arpl
stos
inc
push
mov
xchg
xor
or
jns
jge
jl
mov
xchg
aad
fwait
sbb
pop
mov
jae
int
arpl
aas
int3
jns
inc
aad
sub
aas
jb
shrb
lret
dec
or
push
ror
notb
sbb
push
xchg
xchg
cwtl
stos
cmp
or
jns
out
pop
insb
in
bound
incl
push
scas
jbe
mov
cmp
cs
imul
adc
pop
pop
push
xchg
dec
mov
jae
cmp
jmp
insl
xor
sub
fbld
push
push
or
mov
cmp
ja
add
insb
add
adc
fdivrp
adc
adc
shlb
lret
adc
pop
jl
adc
lcall
and
mov
or
xchg
adc
ror
add
inc
in
add
test
mov
sub
dec
xchg
xor
inc
cld
add
test
sahf
lret
lock
sub
or
or
mov
addr16
jmp
fstp
insb
das
jae
in
stos
ret
addr16
bound
push
add
arpl
mov
sbb
es
cmp
dec
lret
sub
scas
inc
push
cmp
mov
xchg
add
xor
cmp
dec
and
cmp
out
leave
jb
add
fisubl
adc
fwait
pop
cmc
sbbb
cld
push
sarl
push
pop
adc
call
dec
popf
jg
fwait
mov
je
ret
outsb
dec
movsl
push
mov
lds
and
push
cmp
sbb
mov
loope
or
sub
inc
movl
lret
fiaddl
imul
push
fndisi(8087
bound
loope
xor
pop
shrl
adc
add
sub
cmp
cli
cld
push
cmc
pop
dec
imul
xchg
sub
arpl
mov
fisubrl
or
insb
inc
loop
push
pop
enter
pop
pop
mov
rorb
sbb
sub
inc
mov
xor
cmp
test
mov
xor
sbb
jo
out
and
xor
jns
xchg
sbb
dec
inc
outsl
mov
push
jne
cmp
fmull
test
jnp
jl
sti
jmp
dec
inc
cmp
repnz
cmp
xchg
test
xchg
fidivs
push
test
arpl
and
sbb
insl
xchg
out
adc
test
sbb
sbb
add
jae
ret
les
pop
ret
jne
test
jbe
inc
aas
pushf
ret
jno
cmp
lock
iret
in
dec
push
cld
sbb
ds
bound
adc
sub
insl
sbb
enter
push
sbb
pushf
shll
stc
arpl
movaps
cltd
cmp
xor
into
inc
xor
loope
add
jl
pop
punpcklwd
shll
mov
or
inc
adc
les
leave
mov
pop
jecxz
data16
xor
jb
sbb
mov
pusha
insb
push
stos
rorl
push
out
mov
ret
pusha
inc
loop
sarb
push
imul
sub
mov
cmpsb
mov
jmp
out
cmc
jg
push
mov
test
pop
jnp
out
dec
adc
adc
dec
or
mov
daa
and
test
pusha
sbb
jo
jnp
inc
sbb
pop
fwait
fsts
cmpsl
mov
or
enter
insl
pop
xor
push
sbb
mov
add
adc
push
les
xlat
inc
dec
add
mov
sti
and
push
sbb
sbb
sub
mov
push
call
fdivs
jp
sub
mov
fldenv
test
shrb
ret
inc
mov
pop
aaa
aas
sub
mov
pop
movsb
pop
stos
aad
loop
mov
sub
adc
and
mov
lods
mov
or
add
sbb
fsubp
sbb
cmp
out
cli
or
pop
outsl
adc
fwait
and
push
add
mov
push
sbbb
add
sbb
jae
xor
pop
pop
push
sbb
pop
cmp
dec
dec
cmp
xor
cltd
das
fldt
testl
adc
and
iret
xchg
imul
push
xchg
cmp
xchg
jle
cli
pop
pop
lods
inc
xor
movntq
xchg
xor
jno
mov
test
jle
push
lock
aas
insb
sbb
xor
popa
lods
idivl
orl
out
jge
xchg
sbb
xchg
mov
loope
in
and
repnz
imul
les
mov
jns
push
shrb
ficomps
iret
adc
loope
stc
inc
or
push
pop
push
mov
aam
inc
gs
sub
sti
mov
lahf
xchg
neg
popf
pusha
mov
and
push
jg
shlb
jle
sbb
test
push
popf
adc
inc
xchg
xor
and
jecxz
xchg
pusha
into
jp
or
pushf
mov
pop
loop
adcl
imul
in
enter
fsubs
pop
mov
fwait
mov
lret
xchg
adc
icebp
cmpsb
or
pop
sbbb
loope
cmpb
pop
xorb
xchg
addr16
pushl
subb
pop
movsl
mov
inc
test
stos
bound
push
test
sub
pop
push
xchg
pop
mov
cmp
insb
test
xchg
outsl
mov
outsb
add
sbb
arpl
xlat
in
sbb
sbb
lea
push
mov
imul
shrl
xchg
mov
jl
cmp
out
add
lds
notl
dec
mov
mov
dec
pop
mov
sub
push
jbe
lds
mov
xchg
sub
arpl
xchg
stos
mov
xchg
cli
movsb
inc
dec
jecxz
pushf
mov
dec
or
mov
jg
pop
je
imul
sub
ret
or
and
sub
pop
gs
lods
mov
sbb
lret
stc
loop
xchg
and
cwtl
lock
mov
inc
or
mov
or
mov
mov
cmp
cmp
fmul
fs
ret
mov
adc
dec
fwait
ja
xchg
pushf
mov
dec
arpl
popa
stos
mov
hlt
cmp
rcll
mov
push
mov
cmp
mov
mov
push
aas
mov
mov
pop
jmp
pop
mov
inc
adc
lahf
fadds
or
mov
xchg
lds
push
inc
lret
dec
insl
aad
movb
jl
or
inc
repnz
ret
arpl
mov
aas
xor
test
outsl
mov
jno
jl
cmp
push
aas
je
mov
popa
pop
icebp
mov
lods
pop
mov
inc
fwait
inc
enter
inc
lock
mov
add
cs
test
imul
fxtract
inc
call
int
cli
pop
pop
dec
or
loop
daa
sarb
cmp
mov
shr
sub
mov
loopne
stc
mov
xchg
loope
jle
pusha
xchg
js
lcall
fidivrs
gs
cmp
imul
cli
and
add
sub
mov
pop
out
inc
movsl
adc
rcll
pop
mov
fs
imul
inc
inc
aaa
pop
jmp
lods
adc
xchg
cmpsb
pop
dec
dec
out
mov
fbld
sbb
les
mov
fstpt
out
loop
stc
lret
pop
shrb
lret
push
pop
mov
call
cmp
jl
jp
mov
cmpsl
pushf
addr16
or
push
inc
or
test
shlb
ja
mov
jno
sub
push
sbb
jl
fcoms
lock
pop
sbb
xchg
dec
test
mov
mov
rcrl
inc
jg
decl
adc
loope
in
mov
mov
hlt
jo
cmp
scas
ss
js
lret
aam
mov
pushf
inc
mov
adc
outsl
adc
in
xor
lock
js
cmp
xchg
jmp
mov
pop
push
mov
nop
xchg
lods
push
in
cld
and
push
jbe
mov
subb
mov
mov
push
sbb
repz
sub
cs
xchg
mov
dec
sub
lock
idivl
daa
add
in
xor
xchg
repz
pop
xchg
pop
shll
push
mov
mov
popf
js
cmpl
loop
dec
mov
mov
ficompl
jnp
jo
add
fstps
xchg
xor
dec
clc
test
inc
popa
shl
xchg
test
adc
mov
repz
mov
out
jmp
es
xchg
xchg
seta
int3
push
dec
jle
call
fisttpll
add
mov
jbe
aas
jno
pop
sub
int3
pop
add
lods
outsb
mov
test
repnz
lahf
sub
xchg
pop
mov
addb
mov
fdivl
cmpb
call
push
aaa
sarb
and
jnp
in
loop
mov
jno
fidivrl
iret
jae
push
mov
aad
cmp
movsl
mov
movsl
or
ds
pop
outsl
and
mov
and
ss
and
out
call
outsl
ret
out
in
sahf
js
jge
mov
je
sub
shr
ret
cmp
adcb
xchg
bnd
pop
out
pop
lcall
jl
dec
insb
rcll
rclb
in
mov
std
xchg
cli
movsl
sbb
xor
fisttpl
xchg
es
ja
fcompl
adc
fwait
pop
fdivs
jecxz
sub
cld
pop
mov
scas
dec
jmp
out
dec
cmp
jge
insb
in
jecxz
mov
sti
sub
push
test
lret
inc
xorb
xchg
mov
aas
mov
jecxz
loopne
pop
adc
test
repz
in
and
int
or
add
xor
xlat
repnz
sbb
inc
push
push
hlt
mov
gs
mov
jbe
mov
cltd
rclb
setge
test
adc
push
sub
mov
sbb
movsb
sbb
mov
dec
xor
adc
lods
mov
xchg
and
sbb
xchg
jbe
loopne
mov
loopne
add
sbb
fucomi
xchg
mov
loop
stos
into
clc
mov
fidivl
ret
dec
rcrb
mov
fcmovb
sub
xchg
stc
push
test
sbb
and
into
pop
jnp
add
sahf
scas
out
sub
xor
lods
adc
std
ds
pop
xchg
push
loopne
iret
lods
insb
test
cmp
push
fisubs
dec
pop
cmc
rol
xor
and
mov
sbb
mov
stos
aad
jp
cmp
mov
dec
push
xor
mov
cmc
out
mov
inc
or
push
loopne
dec
cld
cli
popa
fwait
pop
cmp
imul
and
fwait
xor
gs
leave
push
lods
xor
xchg
pop
inc
jo
adc
repnz
mov
mov
xor
stc
sub
sub
jge
arpl
ds
shll
cmp
rcrb
addr16
ja
pop
loope
dec
mov
lahf
mov
or
xchg
or
test
cld
lods
sbb
imul
jle
push
or
adc
test
xchg
adcb
cmp
jl
out
inc
push
popf
ss
xchg
mov
les
and
fiadds
fbstp
mov
cmpsl
dec
inc
xor
cltd
xchg
lret
je
inc
jb
or
and
xchg
mov
mov
jg
cmp
enter
out
lods
sbb
or
aaa
push
dec
mov
fildl
xor
and
push
and
add
lahf
cmp
aam
or
jnp
fistl
add
jbe
hlt
aam
enter
data16
mov
sbb
imul
push
mov
pop
cmpsl
sti
jnp
pop
cmp
loop
das
pop
jmp
inc
and
pop
shll
jno
out
fidivl
std
test
icebp
mov
in
sub
adc
mov
xor
hlt
or
je
and
xchg
push
mov
imul
jns
les
mov
xchg
out
inc
mov
arpl
or
mov
pop
xor
pop
and
push
ret
jg
lcall
shr
inc
gs
icebp
inc
add
or
hlt
push
mov
cmpsl
add
popf
pop
ds
push
fmull
addr16
les
mov
jne
ja
fcompl
mov
inc
loop
sub
lahf
sbb
push
lcall
and
leave
data16
or
test
movsl
mov
inc
or
and
or
lret
iret
stos
adc
jne
icebp
inc
sub
and
mov
fs
sub
mov
pop
imul
insb
xor
in
in
cmp
xor
push
mov
inc
daa
lcall
xchg
mov
ja
jns
mov
lods
xor
sbb
js
test
jmp
scas
sub
jge
test
das
mov
push
and
imulb
ljmp
les
ss
push
cmp
mov
add
pushf
xchg
mov
imul
xor
cwtl
jle
call
cmpsb
jb
mov
jle
jle
fcmovbe
js
mov
repnz
popa
push
leave
jae
xchg
adc
add
imul
int3
out
xchg
cmp
adc
lahf
mov
cmp
pop
add
and
sahf
xchg
xor
sub
movsl
and
cld
inc
in
je
test
out
lret
adc
call
or
push
and
inc
es
ficoms
mov
sahf
mov
pop
pop
push
add
mov
add
sbb
mov
scas
lock
push
jnp
aad
ja
sbb
adc
stos
mov
out
adc
mov
popf
ja
pop
jmp
push
inc
cli
int
pop
pusha
mov
mov
icebp
mov
jo
nop
push
jle
jge
mov
data16
cmp
pop
mov
lods
dec
repz
test
sub
in
stos
add
adc
scas
cmpsl
jb
mov
shlb
ficoms
adc
xor
test
loop
aaa
xor
dec
and
testb
cmpsl
add
mov
mov
testl
lahf
je
repz
int
stos
dec
xor
cmp
adc
push
mov
clc
xor
and
popa
xchg
adc
popa
xchg
cltd
jns
dec
and
jbe
mov
inc
iret
sbb
fs
mov
rcr
dec
pop
test
sbb
adc
cmpsb
out
push
lods
fnstsw
test
cli
test
jecxz
push
cmp
xchg
adc
sbb
mov
jne
test
add
inc
add
jp
scas
jmp
aas
fnstenv
inc
ljmp
aam
in
test
dec
jmp
cltd
push
mov
mov
add
jb
movsl
pop
cwtl
dec
mov
add
cmp
jo
sbb
imul
xor
dec
cmp
xchg
arpl
outsl
xchg
int3
pop
out
mov
push
int3
mov
cmp
mov
shll
gs
outsb
xchg
sti
jbe
mov
repz
dec
ret
and
arpl
fwait
jbe
shll
and
cmc
push
sarb
inc
dec
jge
xchg
lock
push
scas
jle
adc
movb
mov
das
pop
cltd
mov
cmp
in
dec
jle
in
mov
stos
xchg
into
dec
addr16
outsb
enter
int3
stos
dec
push
stos
xor
fdivrl
dec
leave
sub
sbb
mov
out
aam
add
jo
in
xor
inc
sbb
jbe
and
adc
imul
popl
pop
or
lcall
fisttpll
pop
jne
sub
jl
mov
out
lea
ljmp
fsts
cmpsb
push
cmp
lcall
mov
inc
inc
mov
sti
mov
aas
cmp
or
pop
mov
xor
stos
cmp
xchg
rcrl
movsb
jle
repz
sub
out
ja
pop
mov
addb
push
jp
out
repz
mov
not
outsb
fiadds
inc
or
xor
mov
xor
inc
mov
jge
add
ficoml
jae
fcomps
aam
pop
nop
and
mov
jge
adc
imul
pop
inc
cmp
xor
pushf
cs
je
neg
daa
xor
jbe
xchg
outsl
add
sti
sub
pop
fistpll
jae
subl
or
rorb
mov
mov
xor
mov
out
ffreep
nop
jne
mov
and
jno
lcall
jae
push
sbb
repnz
shl
test
negb
or
inc
pop
mov
xor
testb
pusha
jmp
movsb
push
jne
xchg
and
mov
int3
shll
xchg
push
addr16
out
sahf
jnp
mov
cmp
push
lret
and
cmp
jo
or
in
pcmpgtb
rclb
stos
insl
mov
push
xor
cmpsl
popa
ljmp
clc
sbb
inc
push
and
and
aas
jo
leave
dec
pop
imul
cmp
push
cmp
pusha
cmp
dec
aas
sub
push
mov
aaa
cli
push
pop
mov
adc
fisubrl
popf
ss
cmpsl
mov
add
adc
sti
pop
js
mov
pop
jbe
in
xor
sbb
shrl
fwait
cmpsl
sub
pop
sub
xchg
mov
cli
push
xchg
les
aam
neg
mov
lcall
into
fstpt
and
inc
add
call
ja
or
sbb
fwait
shl
xchg
push
das
out
ss
adc
pop
sbb
inc
jp
xchg
cld
or
push
cli
cmp
rclb
into
pushf
mov
sbb
fistpll
cmpsl
pop
lods
ret
ret
push
push
and
adc
mov
add
mov
sahf
je
pop
sbbb
add
cs
test
adc
xor
sbb
lds
and
aas
inc
sbb
insl
movsl
inc
pushf
cmp
xchg
pushf
fldcw
gs
xchg
mul
sti
das
cs
stc
jg
ss
push
ret
mov
xchg
lret
fstpl
in
sti
test
subb
jge
aaa
enter
imull
stos
nop
leave
adc
outsb
jbe
bound
mov
xor
fs
rorl
mov
jae
and
cwtl
fnsave
sub
divb
xor
sub
xor
cld
mov
inc
flds
or
ret
mov
lods
xchg
mov
scas
cmpsb
cmp
xchg
test
mov
push
pop
mov
push
add
xor
and
jecxz
push
popf
frstor
mov
xor
pop
adc
push
call
xchg
or
cmp
rcll
mov
cmp
jmp
mulb
lret
pop
xchg
cmp
and
push
imul
stos
movhps
add
or
inc
mov
jnp
insb
mov
cltd
sbb
dec
lret
ret
dec
shrb
int
test
aas
leave
sub
dec
aad
push
sbb
and
test
leave
rclb
add
push
inc
pop
shlb
adc
in
mov
cmpsb
mov
mov
mov
pop
imul
out
cmp
or
xchg
bndstx
lret
and
leave
sub
adc
cmp
sub
mov
and
adc
or
push
push
jbe
push
dec
in
imul
push
icebp
adc
out
jne
mov
pop
mov
sub
xor
imul
test
mov
test
int
jbe
push
adc
dec
fcmovne
mov
mov
xor
dec
xor
int
jne
fbld
push
ja
das
push
add
mov
mov
stos
xchg
mov
mov
cli
mov
dec
movsb
pop
sub
movsb
aam
push
test
lds
int3
and
push
movsb
fdivr
mov
jns
fsubl
inc
mov
xor
xchg
fisubrl
inc
push
imul
hlt
lock
or
psrlw
xor
push
fs
cmp
cmp
fwait
cmp
xchg
jmp
mov
push
mov
insb
sbb
sti
sbb
inc
aad
adc
mov
aam
lods
add
std
leave
nop
inc
dec
xchg
inc
mov
push
adc
insb
out
mov
lock
ja
mov
or
cmp
in
xchg
push
mov
lods
cmp
mov
outsl
inc
add
movsl
cmp
fildl
repnz
cmc
cmpsl
cs
bound
into
push
test
clc
sub
ret
aaa
jns
mov
mov
cltd
mov
jne
fxch
xorb
add
lret
cmpsb
mov
push
fdivrl
sbb
bound
pop
mov
mov
inc
mov
in
or
inc
pop
aaa
js
sub
xor
add
pop
iret
cmp
sub
in
mull
test
mov
mov
or
cmp
int3
push
daa
cli
jne
loop
cmp
pop
lods
pop
es
les
bound
sub
mov
aas
and
xor
or
lahf
sahf
xor
pop
lock
insb
xor
or
daa
cmp
sub
sbb
shlb
mov
movsl
lods
and
dec
out
pop
lahf
cmpsl
push
xor
movsb
cmp
push
cmp
fwait
rorl
lods
aad
into
and
lods
push
jle
ds
pop
jl
imul
mov
insb
shl
in
pushaw
jge
fstps
mov
inc
rorl
fimuls
out
jbe
pop
and
lcall
mov
daa
push
jo
xchg
jl
iret
insl
dec
push
mov
adc
enter
imul
jg
mov
roll
dec
mov
sbb
mov
je
fistpl
and
dec
or
andl
sub
cli
rcr
cmpsb
cmpsl
sbb
push
repnz
fmull
mov
aas
mov
scas
mov
shrb
js
push
cmc
add
inc
mov
and
mov
sti
cmpsl
add
and
mov
xchg
pop
outsl
addr16
in
mov
enter
sub
pop
mov
insl
sbb
mov
sbb
enter
xor
popa
sbb
ljmp
adc
sbb
sub
outsl
sub
xchg
int3
fidivs
jns
test
dec
pusha
jno
pusha
cmp
jnp
cmp
lds
les
mov
out
mov
cltd
mov
into
jns
mov
js
scas
adc
cmc
dec
fbstp
iret
xor
lahf
push
inc
in
jns
insb
repz
cmp
dec
ljmp
icebp
cmpsl
inc
pop
jno
pusha
xor
jbe
xchg
repnz
int
push
mov
or
rcl
jo
je
std
mov
pop
popf
pop
mov
xor
cld
out
cmp
jp
dec
aad
fs
mov
pop
je
pop
sub
jb
test
lea
and
loope
jbe
fldcw
insl
shrl
rolb
dec
xchg
push
add
fnstenv
mov
adc
or
mov
or
add
xor
subb
push
push
ds
inc
pop
sarl
cmp
inc
addl
out
fcomp
push
outsb
out
ja
test
hlt
cmp
data16
sub
gs
aam
sti
xor
jmp
daa
jno
test
mov
push
mov
sbb
ss
rolb
add
lret
mov
mov
orl
push
xor
push
fisubl
fisubrs
xchg
push
fs
xchg
cmp
xor
lea
stos
testl
jle
aam
and
sub
mov
and
xchg
nop
cmp
jnp
sbb
push
cmp
imul
into
lcall
cmp
aad
and
insl
mov
add
jge
sbb
ss
mov
add
mov
sub
add
aas
mov
mov
pop
xchg
cmpsl
aaa
shrb
inc
or
int
daa
ljmp
and
or
pop
cli
lods
std
jb
jns
push
dec
test
lcall
lcall
int3
push
xor
stos
lcall
cmpsb
popa
movsb
and
mov
mov
push
mov
loope
sbb
cwtl
incb
cmp
cmp
adc
add
cld
mov
push
arpl
std
gs
cmp
pop
xchg
mov
filds
inc
icebp
in
outsb
pushf
and
icebp
inc
push
or
daa
addr16
sbb
lods
cmp
dec
inc
insl
shl
je
sbb
imull
xchg
or
test
cmp
test
les
repnz
sbb
icebp
xchg
out
movb
hlt
insb
and
setge
pop
sub
sbb
add
pushl
or
mov
ljmp
xchg
shll
xor
xchg
and
pop
adc
add
mov
fcmove
hlt
mov
add
dec
push
jle
jmp
fs
xor
xchg
fiaddl
sbb
scas
shl
sub
mov
jbe
push
icebp
adc
fs
mov
xlat
sbb
push
cmp
lea
cmc
repnz
dec
and
pop
jp
jno
mov
push
sub
sti
xchg
jns
inc
test
fsubl
stos
lds
out
adc
out
or
pop
dec
or
xor
test
add
inc
test
test
clc
ret
and
push
clc
pop
or
dec
xchg
mov
insb
adc
dec
cmpsl
data16
imul
sub
subb
cmp
call
out
fistps
in
clc
lret
xchg
jle
push
push
andl
jns
pop
inc
adcl
mov
int
test
repz
clc
fnstenv
arpl
movb
cmc
pop
pop
jae
push
loop
pop
jno
int
push
lds
jl
inc
icebp
into
push
sbb
cmp
xor
mov
roll
jns
mov
push
xchg
sbb
enter
add
xchg
pop
jbe
loope
sub
mov
lds
inc
cld
out
ds
out
or
cmp
fwait
int3
jbe
mov
jb
mov
and
fcompl
idiv
jle
aaa
adc
add
mov
push
xchg
aad
inc
or
mov
out
mov
les
sub
or
mov
clc
xchg
xchg
subl
xor
out
mov
push
das
adcl
cli
popa
sub
mov
pop
mov
cmp
or
ljmp
rorb
bound
cmpsb
and
mov
pop
cmp
out
adc
xor
js
ds
and
das
decl
call
or
shll
pop
and
jnp
and
outsb
aam
test
arpl
lds
add
mov
fnstenv
iret
cmp
out
dec
pusha
aas
out
xchg
pop
icebp
xlat
mov
out
inc
incb
lret
cld
pop
mov
shl
jmp
inc
out
aad
mov
cmp
xor
mov
scas
cmp
xchg
and
lahf
fdivs
sub
pop
mov
aas
jbe
lret
mov
add
test
cmpsb
dec
nop
out
outsb
jp
xchg
dec
xchg
xchg
adc
push
std
pop
icebp
imul
aas
les
add
push
fcmovb
imul
test
enter
loop
xchg
hlt
scas
add
int3
lret
jbe
push
lods
loope
cmp
test
bound
add
bound
or
inc
xchg
jecxz
xor
hlt
jl
or
sti
test
scas
or
inc
and
sub
movsb
das
cmp
ja
adc
xor
test
jnp
mov
cwtl
fbld
mov
or
lods
or
or
and
imul
dec
daa
ljmp
cmp
in
and
rol
movsl
cmp
out
xchg
cmp
jae
mov
sub
xor
add
mov
jmp
sbb
clc
outsl
pusha
jbe
aam
in
inc
xor
les
xchg
sub
mov
jnp
outsb
in
dec
subl
imul
mov
imul
mov
push
das
aaa
cmc
xor
mul
sub
dec
popa
adc
outsl
testb
out
les
lahf
cld
std
fistps
mov
sbb
inc
xchg
lods
popa
sub
test
aad
adc
std
into
in
pop
test
dec
mov
lock
lret
push
mov
add
lods
sub
mov
cwtl
je
push
mov
ficoms
repnz
imul
in
data16
cmc
xchg
sbb
xchg
mov
xlat
in
and
mov
and
aad
pop
lret
inc
nop
pop
mov
sbb
pop
sub
into
xchg
leave
and
adc
pop
lds
into
push
sub
cld
dec
jbe
sbb
es
sub
mov
out
push
cmpsb
stc
and
lcall
js
hlt
or
stos
aam
mov
add
or
in
rol
sub
mov
mov
lds
mov
cmpsb
adc
mov
adc
lcall
pop
pop
cmc
clc
add
cmp
cmp
in
mov
pop
and
loopne
add
jp
int3
sarb
fs
daa
push
dec
mov
cmpsb
pop
lea
andl
imull
ss
push
cmp
push
mov
pop
dec
inc
and
mov
fcmovb
out
out
insb
and
jns
sub
ja
sbb
stc
lret
clc
cs
loope
cmc
fisttpl
jbe
addr16
mov
sbb
mov
push
aad
ds
sti
inc
xor
stc
sub
xchg
sbb
jb
mov
jnp
xchg
add
outsl
jnp
mov
add
insl
jo
popf
out
in
insb
arpl
or
jg
ret
mov
inc
push
stos
pop
fildl
mov
imul
ds
sub
dec
sub
js
inc
and
pop
pop
jg
push
insl
jo
fildl
push
push
push
mov
cs
adc
xchg
mov
xlat
mov
or
hlt
adc
and
mull
test
push
movsb
xchg
stc
repnz
in
mov
or
lahf
dec
mov
dec
notl
into
xchg
das
bound
test
mov
inc
in
adc
dec
cld
bound
cwtl
or
or
out
xchg
stos
mov
rcrb
adc
ss
stc
and
mov
push
fcoml
cmp
and
xor
inc
sbb
add
push
cmc
mov
mov
pop
je
fucom
xorb
mov
adc
das
dec
inc
repnz
loopne
lea
xor
ret
sbb
sarl
mov
mov
test
xor
fmuls
std
sbb
stos
dec
sbb
jge
ffree
dec
test
pop
jo,pn
mov
mov
pop
in
loope
mov
and
mov
mov
mov
sbb
in
leave
lcall
loop
mov
mov
jnp
lock
das
ret
push
dec
and
xchg
faddl
mov
fists
cwtl
xor
push
xor
push
adc
movsb
call
xchg
mov
es
iret
and
mov
rcrl
pop
cwtl
add
ficoml
jno
add
enter
pop
xlat
ljmp
pop
das
xchg
ss
adc
popf
jb
xor
pop
outsl
mov
jge
imul
push
mov
inc
push
into
and
repnz
dec
out
insb
arpl
jno
sbb
icebp
ja
cltd
adc
lret
cmc
sbb
and
loop
inc
je
mov
xchg
pusha
mov
scas
enter
push
setp
movsl
jmp
fcmovbe
mov
popa
in
mov
adc
jns
fdivr
insb
xchg
enter
fisubl
mov
ss
jnp
sub
dec
enter
pushf
out
jg
cmpb
xchg
aaa
filds
jmp
popf
mov
test
inc
das
xchg
jnp
dec
mov
or
lret
daa
mov
pusha
call
fisttpl
stos
dec
lods
pop
imul
xchg
mov
hlt
push
sub
pop
mov
loopne
movl
jne
jae
pop
xchg
mov
out
adc
pop
push
push
cwtl
jo
in
pop
pop
gs
outsl
cmc
lahf
lods
inc
and
lock
jne
mov
pop
mov
jne
push
xchg
icebp
insl
bound
int
dec
pop
cmp
mov
scas
mov
sbb
push
cltd
mov
outsb
das
dec
mov
mov
arpl
push
enter
test
sahf
mov
clc
loope
xor
xchg
movsb
xor
mov
mov
loopne
sbb
icebp
scas
mov
incb
aaa
adc
cmc
or
imul
mov
rol
cwtl
ljmp
cmp
mov
mov
ret
sahf
cmc
cmp
bound
shll
negb
int3
sbb
jl
xor
dec
and
mov
add
jmp
jge
mov
mov
xchg
or
xchg
pop
arpl
sbb
mov
push
jl
xchg
jb
jge
cmp
dec
pop
push
nop
sti
mov
mull
fldenv
sti
int3
dec
jns
push
cmp
cwtl
ss
aaa
je
sarb
sbb
cmpl
sub
out
lock
sbb
or
mov
out
push
jne
sarb
sub
jne
movsb
lret
fisubs
ds
jp
and
stc
in
lods
cmpsl
std
mov
out
loop
fwait
neg
cmp
lahf
test
add
dec
jno
xchg
jno
lods
shlb
jl
jle
push
iret
cmp
divl
rcrb
ret
and
imul
stos
nop
arpl
imul
push
add
mov
mov
mov
xchg
ljmp
push
mov
out
xor
out
lahf
cwtl
mov
add
sbb
inc
ret
jl
dec
pop
push
mov
inc
xchg
add
or
pop
mov
adcb
xor
sub
ret
dec
pop
or
dec
inc
scas
xor
cmc
nop
xchg
out
in
inc
rorl
das
xchg
daa
mov
xor
sub
cmp
cli
mov
sbb
stc
dec
idivl
aas
insl
andb
shlb
cmc
in
cmp
mov
lods
pop
push
lods
punpcklwd
pop
mov
xchg
lock
xchg
repnz
push
jns
fwait
mov
in
mov
loop
add
loope
dec
sarb
inc
mov
sbb
mov
hlt
dec
sub
loop
pushf
cld
aaa
sub
mov
fwait
mov
cmp
ds
ret
popf
push
dec
jle
inc
fwait
jge
lret
mov
lods
nop
lahf
aaa
mov
sub
fsubrs
dec
lret
jge
jnp
stos
mov
inc
cltd
lock
push
lea
into
jbe
jno
aaa
repz
mov
push
out
test
jl
mov
popa
jmp
dec
dec
lds
or
dec
popa
call
js
push
aam
mov
js
sub
xor
adc
stc
inc
mov
push
fisubrs
dec
shll
mov
lods
cmpsb
in
outsb
add
sub
leave
cmc
sahf
scas
mov
mov
cmp
popl
mov
sbb
lcall
xchg
jecxz
cltd
push
sbb
xor
fmuls
adc
inc
mov
sub
test
sub
cmp
mov
add
cli
je
dec
gs
or
sbb
inc
cmp
in
ja
xchg
out
adc
hlt
data16
test
sub
add
pushf
fwait
mov
pop
dec
aam
mov
cmp
in
mov
cmpsb
aam
out
cltd
lcall
mov
test
xor
cwtl
push
dec
call
pop
lods
adc
dec
and
pusha
mov
inc
mov
aad
push
cmpsb
jl
adc
filds
xchg
repnz
nop
xor
xchg
jecxz
xor
inc
push
bound
outsl
mov
ret
adc
cmc
jnp
push
loope
xlat
push
and
icebp
jmp
xchg
daa
rcll
push
jbe
push
cmp
jg
inc
imul
loop
rclb
paddsb
mov
ficompl
mov
inc
sbb
jle
test
inc
aam
mov
loope
inc
xor
lea
roll
testl
aad
cli
push
repz
mov
rorl
icebp
sarb
inc
xchg
xchg
adc
lock
or
mov
js
imul
mov
lahf
and
fsubrl
mov
and
into
push
popf
dec
adc
push
repz
or
je
and
pop
es
and
mov
mov
sbbl
rcrb
mov
imul
dec
inc
xor
push
stos
scas
dec
sti
idivb
lods
cmpsb
or
or
adc
jmp
and
pusha
int3
mov
and
mov
mov
outsb
es
push
hlt
push
xchg
out
add
jmp
pop
mov
das
xchg
and
out
adc
nop
imul
leave
xchg
shl
shrl
rol
daa
iret
lock
shl
jbe
add
aad
adc
add
jp
leave
adc
push
inc
jno
pop
es
adc
xchg
push
adc
lods
aad
imull
jg
popf
push
inc
sub
orl
std
inc
sbb
popf
fxch
lret
nop
insb
ds
and
mov
mov
sbb
rcll
shrb
hlt
popf
insl
push
adc
mov
push
or
dec
gs
push
out
adc
gs
inc
clc
dec
cs
frstpm(287
imul
add
push
and
xlat
pop
addr16
gs
sbb
aas
cmp
jb
sub
lcall
ret
cmp
js
sub
jns
dec
fiadds
push
xchg
int3
push
add
lods
inc
add
pop
push
sbb
aaa
loopne
fbld
mov
push
inc
outsb
jge
sbb
sbb
push
divl
in
jmp
or
lret
es
imull
push
mov
je
into
lods
lret
jmp
inc
cmc
and
sub
or
push
movsb
into
int
jle
jmp
cltd
adc
push
ffreep
test
mov
add
push
mov
ret
xchg
xchg
in
lret
or
sub
rclb
notl
sub
pop
loope
mov
mov
add
pushf
jl
sub
pop
test
test
xchg
aaa
jns
mov
aaa
jb
jb
incb
cmp
dec
cmp
aaa
leave
or
int3
icebp
loope
push
pop
arpl
inc
mov
das
mov
jnp
loope
or
faddl
nop
cli
xor
iret
xchg
mov
jmp
insl
lock
jb
xchg
ja
loop
mov
xor
jb
push
or
lret
in
adcl
lds
push
insl
pusha
or
sbb
xchg
insb
inc
pop
fistl
lods
xchg
xor
mov
pop
xchg
xchg
mov
mov
jb
aam
ret
rcrb
neg
fcoms
mov
xchg
pop
add
movsl
inc
add
sbb
lea
cmpsb
xor
test
std
lcall
cltd
enter
fists
or
mov
aas
jbe
push
lret
je
in
add
mov
stc
stos
add
test
mov
stos
dec
mov
lds
jbe
lock
ja
out
std
pop
or
fisubs
mov
movsb
into
push
xor
mov
mov
fmull
and
jmp
push
push
lea
neg
enter
inc
addl
pop
imul
or
leave
decl
xor
push
dec
mov
cmp
lcall
jmp
vshufps
mov
iret
je
js
rol
mov
fcompl
scas
iret
sub
or
adc
sub
xchg
incb
scas
imul
loopne
mov
cmp
add
mov
mov
pop
out
lods
nop
ljmp
jne
cmp
mov
arpl
data16
xor
daa
add
les
add
aas
imul
fisubl
fwait
lock
inc
mov
or
js
icebp
dec
rol
dec
add
jp
movsl
das
mov
imul
mov
aas
mov
mov
flds
imul
xchg
lahf
inc
mov
addr16
cmp
and
adc
fistl
std
mov
das
jbe
aas
mov
pop
inc
cli
enter
cli
mov
sub
cld
in
pop
iret
shrl
or
sbb
mov
and
push
je
iret
and
clc
mov
and
fadds
inc
gs
pop
addr16
dec
cmpsb
insb
mov
mov
inc
das
les
lcall
cmpsb
mov
mov
mov
add
or
lea
flds
or
fldenv
frstor
lds
fadds
add
or
and
jb
inc
cltd
jp
mov
mov
mov
xor
cli
xchg
ja
or
pop
nop
jg
imul
jmp
rorl
and
daa
cmp
es
ficompl
idivb
xor
jae
add
fcomps
sbbb
add
jne
pop
push
mov
call
jmp
jg
fwait
divl
pop
cmp
stc
test
sbb
mov
sub
xchg
lret
daa
mov
jns
add
leave
fs
push
dec
dec
mov
dec
insb
sub
das
imul
cmp
movb
out
cmpsb
adc
xorl
lds
sbb
cmp
push
and
cmp
xchg
jb
fucomip
cmpsl
enter
ret
test
call
test
inc
mov
dec
jnp
popf
jl
or
push
and
pop
xchg
push
bound
leave
mov
push
mov
pop
mov
jne
mov
repnz
cld
add
adc
cmp
sti
mov
xchg
bound
pop
pop
sbb
loope
fdivl
movsb
sub
xchg
push
cmpb
xchg
push
adc
ljmp
dec
in
pushf
dec
lcall
mov
mov
ret
test
loopne
push
cs
pop
and
jmp
adc
dec
mov
insb
push
sbb
mov
and
pop
cmp
pushf
dec
xor
mov
es
pop
and
into
and
loopne
cmp
lds
addr16
idivb
jae
stc
pushl
jg
stos
aas
fnsave
xor
nop
adc
pop
aaa
out
xlat
jbe
es
mov
dec
xchg
mov
sbb
pushf
and
stc
jmp
or
fwait
aaa
lcall
in
lcall
add
stc
in
lret
aad
inc
aad
das
mov
or
mov
adc
hlt
inc
cmp
outsl
xor
fidivrs
sub
sub
mov
add
adcb
lock
call
jmp
lock
pop
sbb
mov
mov
jne
inc
rorb
nop
sub
and
out
rcrl
addr16
add
mov
sub
push
sub
cwtl
movsl
jnp
iret
xchg
addr16
pop
adc
daa
cs
mov
loope
adc
xor
test
pop
sbb
sarb
mov
hlt
daa
sahf
pop
xlat
ror
jo
test
dec
addr16
lods
nop
out
lret
or
imul
lcall
adcb
cmp
push
jmp
in
sbbb
pop
pop
scas
pavgw
dec
scas
cwtl
pop
xor
push
mov
arpl
cmpsb
shll
mov
cmp
out
arpl
popf
pop
add
call
mov
aad
inc
sub
pop
jg
inc
jne
mov
loope
add
cmpsb
in
cli
or
mov
pop
lods
inc
and
cmc
stos
cld
cmp
movsl
mov
sti
lret
push
inc
scas
cmc
or
pop
les
sub
mov
movsl
add
jge
push
cmp
push
push
sbb
cmpsb
or
ja
pop
sub
add
inc
fidivrs
out
or
jge
in
ds
sbb
xchg
push
inc
mov
das
pop
int3
xchg
loope
xlat
outsl
mov
adc
or
test
mov
mov
loopne
mov
cmpsb
xor
into
clc
ljmp
push
call
pop
add
movsb
idivb
subl
cltd
inc
movsb
js
mov
clc
or
adc
sub
inc
and
dec
out
movsl
dec
and
mov
rcrb
inc
cmp
repz
cmc
pop
repz
adc
and
mov
mov
call
testl
mov
movsb
pop
test
xchg
xchg
pop
jne
cmp
jae
adc
mov
sbb
gs
pop
mov
pop
dec
or
imul
mov
hlt
mov
push
sbb
cmpb
subb
inc
push
orl
lods
cld
dec
sbb
jge
dec
sub
sub
outsb
into
cmp
xchg
dec
hlt
and
sahf
xlat
aaa
mov
shll
push
jo
mov
add
inc
dec
xchg
idivl
mov
xor
aas
subl
pop
inc
mov
std
sub
clc
sub
ljmp
divl
mov
and
mov
lea
mov
push
jne
push
scas
les
jge
ja
xchg
push
jo
mov
sbb
jne
mov
fdivrl
adc
ret
in
fstpt
and
xchg
or
pop
ficompl
jp
popa
cmc
add
shrl
add
leave
je
mov
pop
clc
push
adc
fs
xor
sbb
gs
inc
ljmp
jne
adc
or
mov
into
mov
gs
fdivs
sub
ffree
in
scas
les
js
cmpb
push
mov
mov
push
xchg
iret
dec
imul
daa
pushf
jns
cmpsb
mov
and
mov
movsl
int3
cld
mov
rorb
inc
mov
inc
stos
fsubs
sub
cmp
lock
jnp
rclb
mov
movsb
lahf
mov
dec
or
test
iret
negb
jl
jecxz
lret
ret
adc
sbb
jnp
mov
sub
loopne
inc
or
xchg
pop
and
xchg
ljmp
xor
mov
das
cmp
jo
adc
xor
push
aad
cltd
and
outsb
enter
mov
cmc
pop
and
les
and
mov
adc
cmpsl
push
xor
scas
bound
mov
inc
out
jb
sub
dec
fidivs
mov
mov
arpl
mov
inc
jne
ljmp
mov
cmpsl
cli
mov
arpl
cmp
jo
iret
or
sbb
sub
daa
nop
jmp
pop
dec
loop
lea
push
inc
jl
fistl
mov
daa
jp
cmp
jno
jge
dec
jno
xchg
int3
add
adc
dec
mov
push
sbb
mov
or
inc
xlat
mov
cmp
inc
sub
add
push
xchg
clc
mov
xlat
mov
enter
lods
int
jge
mov
add
adc
push
xorb
cmp
jle
sub
out
fwait
enter
loopne
sub
imul
pusha
in
push
sub
push
movsl
ja
fldl
ds
sub
xlat
jp
out
cmp
das
xor
and
sbb
stos
pop
inc
mov
js
dec
inc
xchg
jmp
push
insb
lock
dec
aam
out
sbb
bound
xor
sbb
icebp
pop
pop
inc
push
into
mov
adc
daa
xor
cwtl
sub
sti
add
add
fsubr
lahf
mov
bound
cwtl
fwait
push
sbb
dec
xchg
sbb
sbb
sbbb
and
dec
sub
mov
pop
and
push
cltd
aam
inc
pusha
aam
xchg
pop
xchg
sbb
cli
adc
stc
jo
pushf
xchg
xchg
repz
movsl
jle
std
stos
es
pop
mov
ficomps
jecxz
mov
test
movsb
or
mov
aaa
lods
fs
push
add
xchg
es
sti
xlat
psrlw
adc
push
inc
sti
out
negl
dec
stos
xchg
push
push
inc
sbb
lret
and
push
int
loop
or
mov
inc
stos
push
xchg
mov
lret
loopne
bound
sub
mov
xchg
add
call
fcmovne
ret
mov
jns
mov
rcll
xor
lds
and
cli
mov
mov
lret
lret
xlat
fcoms
add
inc
fwait
out
incb
dec
xchg
cmp
ud2
xchg
jb
inc
test
hlt
movsb
mov
pushf
cmc
xor
add
sbb
xor
pushf
jae
stc
jno
mov
and
push
fsubrl
ds
int
cmpsb
sbb
sbb
lods
dec
repnz
negl
push
cmp
fisubs
stos
jb
xchg
sub
ret
xchg
dec
jl
ret
add
jge
or
xor
in
mov
je
pusha
push
mov
je
dec
sub
outsb
xor
mov
xor
js
test
xchg
outsb
leave
jnp
cmpsl
jns
repnz
in
in
add
jmp
push
jns
dec
mov
xchg
outsb
ljmp
lods
leave
ja
les
aam
mov
stos
mov
sbb
add
cmp
scas
cmp
xchg
mov
in
shlb
stos
mov
sarl
xor
jnp
ret
pop
imulb
mov
insl
jle
js
iret
iret
jmp
imul
lcall
cwtl
addr16
pop
int3
and
hlt
in
repnz
inc
push
xlat
dec
jecxz
add
xchg
je
push
mov
cmp
xchg
jg
sub
xor
lock
cltd
sub
mov
or
mov
jge
cli
orl
push
mov
in
mov
loope
mov
popa
xchg
dec
mov
push
and
lret
push
ljmp
data16
das
dec
mov
sbb
xor
enter
fcoml
jg
stos
sahf
ret
mov
dec
push
xor
out
xor
mov
push
jbe
mov
jp
cmp
jl
pusha
fstpt
jecxz
and
sbb
mov
and
cli
or
add
fcmovnu
mov
sub
xchg
xchg
mov
scas
mov
mov
cmp
rclb
fs
adc
dec
push
dec
mov
pop
adc
dec
inc
xor
aaa
fsubrs
pop
test
mov
out
bound
push
inc
dec
and
in
fwait
in
sbb
and
jl
lcall
fisubl
add
jmp
fistl
mov
xchg
sbb
pop
ds
push
dec
mov
xchg
mov
inc
je
xchg
xor
subb
sbb
mov
mov
add
inc
pop
pop
or
pop
scas
inc
or
bound
mov
movsb
xchg
jecxz
fwait
mov
xor
gs
sub
lods
push
pusha
enter
orb
icebp
fadds
pop
test
mov
sub
fnstsw
mov
inc
mov
or
pop
test
in
pop
je
xchg
and
aad
jg
jmp
dec
or
jge
sahf
in
ss
cmpl
mov
out
jg
pop
mov
popf
imul
std
fcoml
push
xlat
dec
movsl
xor
gs
int
xchg
rcrb
repnz
lcall
int
jmp
nop
mov
mov
outsb
stc
imul
mov
mov
and
and
cmpsb
js
loopne
mov
or
mov
enter
scas
enter
mov
xor
aam
in
inc
push
call
jbe
mov
xchg
xor
pop
sub
cmc
jg
cld
xlat
or
push
adc
adc
test
cmc
les
unpcklps
pop
sub
mov
pushf
sub
sar
outsb
outsb
jns
in
ljmp
inc
testl
fidivrs
iret
adc
imul
gs
mov
mov
fwait
std
jmp
or
mov
xchg
adc
popa
dec
jp
shlb
fiaddl
add
bound
adc
add
fidivl
adc
inc
rorl
idivb
fmuls
and
ret
add
push
ja
or
sahf
inc
add
enter
addr16
mov
cmp
cmp
repz
aad
stc
lods
lcall
sub
push
inc
push
inc
cmp
dec
lcall
enter
popa
adc
mov
subb
push
xchg
sbb
adc
loopne
jns
sbb
xchg
mov
roll
test
lods
or
test
inc
in
sbb
icebp
lock
lods
popf
test
fistpl
sub
divl
fwait
icebp
insb
js
aas
or
add
dec
adc
push
mov
insl
jns
xchg
stos
cmpsb
adc
push
out
clc
push
sahf
pop
jle
ja
insb
or
dec
adc
push
mov
and
jns
popa
pop
sbb
lahf
push
rorl
imull
pop
pop
mov
leave
jl
aaa
pop
aaa
xor
in
adc
mov
std
gs
sbb
sbb
fistpll
shl
cs
loopne
lods
fwait
cmpsl
jbe
ja
cmp
sub
adc
pop
enter
jecxz
pop
test
test
push
pop
cwtl
or
cmc
clc
mov
adc
push
dec
cmc
push
mov
inc
jp,pn
jmp
movsl
mov
icebp
cmp
fistps
test
shlb
loop
stos
call
jb
movups
jnp
cmp
iret
out
data16
out
mov
xchg
cli
adc
sahf
xor
ds
mov
jnp
out
shrb
movsl
nop
xor
das
jne
in
push
push
jecxz
sbb
and
test
stos
pop
dec
dec
shl
sbb
and
int3
in
sbbb
cs
jne
push
add
mov
ja
movsl
clc
outsl
sub
cmpsb
cmp
aas
sbb
sti
sbb
push
and
add
cmp
sarb
pusha
add
bound
ret
push
loop
pop
ds
shlb
fisubs
mov
xchg
pop
xlat
jno
xchg
test
ret
outsl
adc
out
push
sub
sub
cmp
ret
xchg
push
push
roll
sub
dec
jg
mov
lahf
daa
aaa
or
mov
mov
jbe
mov
test
inc
mov
push
repnz
inc
add
xchg
mov
loopne
mov
sub
cmp
xchg
mov
push
xchg
push
ljmp
mov
add
mov
xor
pop
add
in
sub
dec
movsb
adc
cmp
push
sbb
cmp
lret
pop
or
dec
add
xor
mov
outsb
cmp
adc
mov
movsl
sarb
aaa
mov
adc
flds
mov
nop
ret
xor
outsb
bound
mov
dec
pop
cltd
sbb
mov
aam
aaa
pop
sbb
mov
mov
mov
int3
icebp
js
push
and
adc
mov
or
adc
inc
cwtl
out
sub
adc
ja
push
repz
mov
mov
jbe
fistpll
aad
inc
subb
leave
jge
scas
dec
aaa
imul
jne
adc
out
mov
add
sbb
xchg
inc
dec
imul
xchg
scas
bnd
aam
fs
aam
or
mov
fwait
mov
imulb
inc
int3
jle
aas
mov
adcb
push
clc
js
repz
mov
movsb
push
popf
cmp
fnstenv
jg
mov
outsb
cltd
sbb
pop
pop
push
out
in
mov
jg
out
mov
push
rol
icebp
cmp
add
inc
lret
into
xchg
push
mov
stos
cmpb
add
and
mov
adc
mov
addb
ss
pop
fsubl
fdivs
fwait
adc
or
push
sub
xor
jns
scas
sub
negb
iret
mov
loopne
pop
data16
lock
adc
cmp
mov
fxch
inc
xor
sub
in
cs
dec
insl
mov
sub
lods
sub
pop
dec
inc
xchg
pop
gs
push
fsubl
test
cli
les
dec
movsl
adc
out
inc
mov
pop
clc
and
inc
popa
sahf
mov
jns
jp
and
cmp
jo
and
mov
pop
or
mov
cmp
pop
lahf
notb
aam
sbb
adc
icebp
ret
xchg
xchg
pop
mov
cmp
outsb
ret
xchg
xor
and
jp
mov
leave
and
push
scas
add
lock
orb
getsec
pop
add
inc
mov
sti
loopne
jne
cli
movsb
shrb
inc
cmc
inc
dec
xor
mov
out
iret
pop
addl
sbb
dec
xchg
xchg
into
loop
xchg
cmc
stos
out
mov
popf
dec
cmp
mov
repnz
mov
faddl
subl
sub
shll
add
daa
ror
dec
outsb
mov
jne
in
in
in
test
push
mov
xchg
test
jle
shlb
test
clc
les
mov
mov
mov
cli
flds
fsubrl
aaa
xor
jns
pusha
test
arpl
inc
mov
flds
fwait
data16
scas
fimuls
add
insl
les
jnp
pop
sub
xorb
lea
cld
sub
cmpsl
sbb
cltd
mov
and
pop
in
adc
in
rorb
outsl
fs
lahf
xchg
sarb
mov
adcl
cmpb
in
les
adc
imul
mov
cmp
aam
out
add
xlat
adc
mov
cmp
sarb
imul
popa
jnp
sub
jo
aas
lea
jb
testl
adc
out
clc
lret
dec
mov
imul
mov
mov
lea
decl
incl
lcall
xchg
add
mov
mov
sub
mov
mov
jmp
mov
mov
add
mov
mov
jmp
xor
inc
jne
movzbl
xor
add
mov
jmp
jmp
loope
inc
and
fs
mov
sub
jnp
mov
jnp
sub
cmpsl
sub
push
nop
lds
push
push
cwtl
aad
aad
inc
cli
jnp
adc
ljmp
push
dec
pop
jns
rcr
or
mov
fsubl
xchg
imul
pop
jle
enter
int
enter
jl
lock
addb
int3
push
cmpb
addr16
xchg
rcll
mov
sarb
or
out
mov
add
lods
add
repnz
sbb
fsubs
dec
or
out
sub
mov
fs
push
imul
movsb
push
mov
or
xor
xor
test
scas
jno
icebp
cld
sarb
testb
call
cld
push
movsb
aaa
in
pop
jl,pn
and
mov
xchg
int3
mov
push
ja
mov
in
shrl
fidivl
and
ja
jo
rsqrtps
xchg
repnz
push
inc
mov
movsb
test
mov
jmp
jae
cmpsb
pop
mull
cmc
mov
sbb
pop
inc
sub
fsts
push
std
jecxz
addl
mov
cmp
add
sbb
mov
aas
cmp
adc
flds
xor
pop
mov
lock
pusha
mov
shlb
cmp
andl
fcoml
repz
add
cmp
mov
sbbl
cld
inc
sub
div
and
and
xor
sub
repz
jl
mov
sbb
dec
fdivr
lods
test
and
idivb
int
loope,pt
aas
push
jecxz
cmc
lods
inc
xlat
int
mov
push
or
add
xor
jecxz
out
stos
fld
arpl
dec
sub
push
hlt
mov
sub
mov
test
mov
inc
data16
scas
xor
jb
stos
fnstsw
and
scas
rcr
test
daa
pop
fcmovu
and
jbe
test
xchg
fidivrs
xor
das
iret
ret
jo
mov
sbb
pop
imul
mov
push
mov
or
notl
pop
popf
inc
imul
test
jb
leave
and
push
cmpsb
or
aaa
add
cmp
xchg
xchg
lods
and
dec
sahf
insb
push
mov
add
shl
push
repz
inc
sbb
mov
xor
mov
or
mov
bound
cmp
data16
imul
xor
cmp
in
fstpl
fcomip
push
cmp
push
lret
jne
sbbb
xor
push
cmp
add
mov
subb
jbe
sub
jle
aas
adc
cmpsl
ja
sbb
xorl
pop
pop
pop
jae
inc
movsl
jo
inc
imul
out
fs
sar
mov
pop
inc
lret
fwait
cs
xor
mov
filds
insb
add
roll
push
mov
popa
add
add
push
daa
mov
lods
mov
int3
push
ret
ljmp
daa
repnz
mov
inc
mov
mov
cmpsb
jns
insl
lcall
jg
inc
mov
popf
dec
es
test
or
pop
negb
test
jge
jno
popa
xor
pop
or
sbb
sbb
mov
cmp
rolb
cld
push
lods
xchg
testl
in
loopne
or
in
cmc
test
push
xchg
enter
jbe
fcoml
bound
inc
mov
push
data16
std
lea
inc
jmp
clc
mov
ret
loop
cmpsb
inc
and
pop
jp
lahf
mov
sti
xchg
std
lds
cmp
popa
pop
cmp
jno
pop
xor
pop
sbb
cmp
and
add
jns
lods
xor
jge
movsl
sub
inc
icebp
fidivs
rolb
sarb
pop
inc
mov
jnp
fdivrs
fwait
cli
ja
ljmp
mov
push
sbb
nop
imul
sub
or
xor
xor
test
mov
jmp
fiaddl
aam
jo
mov
xchg
popa
stc
call
movsb
scas
mov
adc
jae
jnp
dec
test
mov
pop
imul
imul
aam
pop
sti
inc
test
adc
mov
add
imul
scas
and
lahf
imul
fldcw
dec
cli
cmp
clc
add
incb
dec
test
iret
int3
test
popl
les
push
js
sub
add
clc
aaa
mov
call
inc
scas
cli
add
push
int
push
mov
and
push
xor
cmp
or
mov
and
push
int3
inc
mov
orb
das
fs
pop
pop
adcb
jne
loop
inc
sbb
dec
repz
mov
xchg
leave
pop
xchg
push
jo
gs
dec
mov
call
and
or
or
mov
popf
and
mov
xor
aad
negb
cltd
xchg
dec
xorb
xor
cli
or
dec
lods
or
mov
mov
aam
cwtl
jl
sbb
jl
pushf
add
stc
ja
mov
lods
xor
or
lahf
mov
es
cmc
iret
jae
in
enter
dec
les
jp
xor
inc
cmp
sub
cmp
jecxz
xchg
sbb
into
enter
popa
xchg
fdivl
out
lods
pop
push
adc
xor
loope
pop
fs
mov
cld
cmp
adc
aaa
push
pop
scas
mov
arpl
jmp
push
push
pop
push
imul
sti
adc
cmp
lds
push
pop
mov
add
dec
repnz
add
mov
stos
jmp
sub
addr16
cmp
adc
fstp
push
inc
cwtl
xlat
out
loop
and
dec
clc
cmc
idiv
das
fcomip
cmp
mov
pop
xor
add
in
sbb
mov
jnp
mov
mov
movsl
pop
jg
lea
mov
in
dec
gs
mov
xor
stos
js
mov
mov
and
in
xor
sti
add
ja
insb
add
js
mov
xor
sbbb
movsl
cmp
test
inc
xchg
inc
push
jmp
pop
pop
in
mov
mov
sub
and
out
out
xchg
cltd
adc
addr16
adc
arpl
fldl
aas
pusha
pop
fsub
shll
mov
xor
dec
dec
movl
dec
movb
fidivrl
push
xchg
mov
into
cwtl
mov
jbe
jmp
xchg
pop
loop
or
push
push
mov
push
push
jp
iret
lock
inc
es
sbb
pop
mov
mov
jg
filds
pop
popa
leave
pop
and
ror
add
mov
mov
jne
ljmp
lock
fwait
push
ljmp
jecxz
lods
cltd
vunpckhpd
nop
adc
stos
inc
jno
mov
mov
add
cmp
pop
fs
leave
push
and
push
loopne
into
push
or
sbb
decl
scas
inc
sbb
out
push
fistl
sbb
adc
out
test
lds
mov
and
push
lea
sub
aas
pop
aad
in
cmp
push
and
stc
loop
push
fimuls
or
outsb
xor
pop
jo
sub
inc
jo
fwait
add
jecxz
xor
imul
mov
adc
push
cmpsb
sub
sar
mov
stos
inc
sbb
pop
repz
push
decl
inc
xchg
mov
jle
lahf
int
mull
cmp
imul
mov
daa
ss
inc
mov
outsl
jp
cs
inc
and
push
adc
es
jl
adc
hlt
inc
lods
test
incb
add
mov
push
mov
xor
dec
add
or
gs
lcall
cmpsl
sub
lds
inc
dec
cmpsl
sti
push
cmp
test
popa
stc
sbbl
xchg
lret
dec
jge
cmc
push
shrb
push
nop
das
sbbb
pop
lods
sbb
xchg
aam
es
sbb
movsb
imul
adc
ljmp
xlat
or
icebp
dec
sub
mov
or
aas
pushl
stos
sub
stos
fdivr
jg
push
pop
jbe
xor
cmp
loope
lock
xor
shrl
xchg
in
nop
sbb
mov
lods
stc
push
into
mov
je
mov
pop
testb
js
jle
xor
mul
mov
or
mov
and
test
mov
sbb
int3
add
leave
jmp
sarb
mov
or
stos
inc
xlat
fisttpll
add
out
cmp
sbb
mov
xorl
or
stos
sbb
scas
adc
ja
popa
iret
cltd
cld
jae
pop
or
adc
std
mov
test
lahf
ficomps
icebp
pop
into
out
inc
ss
push
sbb
ret
dec
and
push
jo
dec
sbb
movsb
scas
lret
push
ret
lcall
loopne
or
into
into
or
push
mov
das
icebp
jmp
int
test
pop
pusha
xchg
out
xor
rcll
in
dec
jb
pushf
nop
adc
jle
mov
fisubrs
rolb
push
adc
push
inc
mov
ljmp
mov
sbb
into
pushf
xchg
mov
cld
iret
gs
popa
rcll
ficoml
icebp
mov
mov
stos
mov
cmp
icebp
mov
sub
pop
cmc
mov
inc
add
push
xchg
jmp
in
push
shrl
pushf
mov
xchg
fcompl
cmp
push
mov
rcr
out
bound
jb
js
scas
mov
mov
and
fimull
adc
cwtl
pop
shll
pop
andl
movups
mov
xchg
stc
xchg
inc
dec
dec
repz
sahf
and
fistps
xchg
sbb
and
jp
jbe
outsl
scas
mov
loop
in
enter
push
and
mov
mov
pushf
mov
add
clc
pop
xchg
sbb
jnp
shll
out
sub
jb
push
or
pop
jle
test
xchg
xchg
mov
cmpsl
or
test
ds
push
lea
inc
sub
mov
dec
adc
or
push
into
push
mov
and
dec
jecxz
adc
orl
mov
add
push
add
xchg
or
adc
mov
cmp
adc
ds
or
inc
sbb
negl
mov
popf
mov
int3
xchg
ror
xor
add
add
add
addb
inc
fidivl
mov
xchg
adc
jbe
lret
jo
jnp
sub
xlat
jns
insb
test
inc
mov
inc
shlb
push
aam
int3
into
push
stc
mov
cmp
in
mov
mov
decb
scas
or
popf
lahf
pop
push
ja
adc
insb
loopne
push
or
int
pop
mov
jbe
out
aaa
dec
jmp
mov
fidivs
out
mov
scas
lret
dec
adc
out
lock
pop
cld
mov
jle
mov
push
lret
mov
iret
bound
push
iret
fcmovb
xor
lcall
push
adc
push
mov
jnp
fisubs
push
rolb
adc
in
dec
mov
dec
jl
xlat
sub
cmpsl
cld
int
jno
iret
xorl
sbbb
mov
addr16
push
cld
call
push
subb
ss
mov
sti
cmp
mov
cmp
roll
cltd
shl
jmp
ja
addr16
imul
add
popf
mov
adc
sbb
sbb
push
cmpsl
lods
idivb
pop
inc
mov
xor
xchg
sbb
inc
mov
mov
sub
adc
push
test
cli
cs
popf
push
ss
dec
stos
adc
jns
aaa
pusha
lret
loope
or
adc
lods
pop
gs
cltd
test
mov
mov
mov
lock
in
jbe
xchg
sub
dec
xchg
cli
fptan
adc
mov
and
inc
dec
inc
loopne
push
dec
jno
cmpsl
sbb
mov
fs
jg
ja
hlt
imul
cmp
stos
lret
scas
popa
or
imul
sahf
in
push
outsl
call
mov
pop
loopne
sarl
std
xor
fimuls
mov
sbb
nop
out
loop
and
and
jns
movsb
xor
xchg
sbbb
cmp
and
jne
leave
into
dec
mov
insb
popa
scas
cmpsb
pushf
sarb
mov
jecxz
pop
in
pop
xchg
inc
aaa
cmp
xchg
dec
dec
vpsrlw
jb
cwtl
scas
iret
jns
pushf
mov
arpl
subb
lret
ja
mov
cs
ja
es
iret
ja
pop
lret
mov
aas
sbb
and
iret
push
fldcw
pop
jae
aad
out
add
mov
mov
pushf
inc
xlat
push
pushf
mov
push
sub
ja
rorl
pop
push
dec
or
test
push
pop
psubw
xchg
cld
add
in
dec
movsb
add
mov
pop
mov
stc
ret
jle
and
loop
call
sbb
xor
stc
xor
xor
inc
xor
xor
jb
cmpl
mov
mov
dec
imul
adcl
loope
aad
test
push
pop
flds
int
push
mov
cmp
sbb
xchg
repnz
xchg
and
push
pushf
jae
or
inc
mov
popa
das
push
mov
outsb
push
xchg
jo
mov
xchg
test
shlb
or
xor
jo
std
stc
jp
stc
mov
fstpl
or
insl
shlb
hlt
push
std
push
add
loop
fsubrs
mov
jmp
jp
dec
loop
dec
mov
and
rcr
test
jbe
mov
pop
lret
jbe
divb
push
add
xchg
filds
icebp
in
and
inc
mov
int3
mov
sub
stos
pop
push
pusha
xchg
cltd
aas
jne
pop
pushf
push
fidivrl
mov
mov
std
cli
mov
lret
testl
xchg
ret
fcomp
dec
sub
out
enter
and
xlat
lcall
dec
inc
ds
ret
sub
mov
mov
mov
sub
pop
dec
sub
add
sub
icebp
mov
arpl
inc
xchg
jle
imul
rcrl
jp
cmp
int3
or
inc
ja
add
mov
jg
das
mov
stos
nop
mov
pop
mov
rcrl
das
mov
mov
les
xchg
stc
arpl
sbb
xchg
xchg
adc
neg
in
pop
mov
sub
mov
movsb
jmp
cmp
sbb
mov
cwtl
and
xchg
fs
mov
jno
fldcw
adc
push
cmpsb
jmp
fisttpll
xlat
fcomps
daa
cli
mov
cs
lcall
sub
inc
xor
nop
ljmp
push
lock
inc
add
gs
push
test
inc
mov
jp
pop
xor
mov
mov
jno
subl
push
cli
test
mov
scas
mov
stc
gs
aaa
int3
jge
std
insb
push
out
rorb
xchg
cli
and
cmp
dec
push
push
loopne
jno
adcb
pop
les
inc
fstpl
aad
into
jmp
jbe
adc
add
and
jge
adc
test
xor
jbe
dec
addr16
mov
jp
lret
and
aam
jne
pop
lods
aam
mov
repnz
pop
in
sub
jne
jnp
scas
pop
popa
sarb
popa
sbb
leave
sub
aas
ljmp
xchg
or
jge
adc
les
add
mov
add
xchg
fdivrl
or
push
mov
das
jne
dec
ss
cld
mov
int
lods
push
pop
dec
repz
xchg
es
cmp
pop
xlat
or
in
je
jl
test
scas
into
loop
inc
mov
pop
mov
in
adc
push
loop,pn
call
push
loope
ja
enter
pop
ljmp
xor
xor
out
outsl
mov
inc
shrl
cwtl
test
enter
les
lods
mov
dec
mov
fildl
in
pop
cmc
subl
fwait
lea
shlb
cli
mov
pop
mov
aaa
mull
or
or
or
adc
mov
clc
mov
cmpsb
jns
dec
mov
fmull
xchg
or
pop
mov
sbb
mov
shll
dec
repz
adcl
adc
sbb
test
inc
xor
jp
test
mov
sti
push
mov
das
mov
and
dec
int
mov
test
into
jnp
popf
sar
dec
dec
xchg
into
rolb
push
lret
testb
mov
add
ficompl
popf
cmp
shlb
inc
inc
test
pushf
dec
jle
sti
mov
loop
out
mov
jnp
push
xor
add
lret
cld
and
in
mov
xchg
clc
loope
lds
ss
fwait
dec
les
lods
inc
mov
xchg
sbb
mov
pop
gs
aaa
int3
push
and
fistps
mov
sbb
mov
fcmovbe
mul
leave
xor
outsb
je
fdivl
or
test
repz
adcl
adcb
enter
and
jle,pt
pop
jno
mov
sbb
or
jb
sub
stos
or
imul
xchg
cltd
bound
stos
jne
popa
insb
or
cmpsb
pop
jnp
nop
rorl
or
test
je
mov
push
stos
push
in
mov
or
add
fidivs
sbb
popf
out
cmpsl
sti
pop
add
lods
pop
fldt
sub
insl
cmp
dec
iret
dec
imul
popa
sbb
dec
push
jle
or
cmp
dec
jg
sub
mov
mov
mov
insl
push
inc
cs
in
xor
stos
out
jbe
push
jle
push
pop
loope
mov
and
inc
test
push
and
cmpl
cmp
rorl
lret
les
lea
test
xchg
pop
jle
andps
jp
mov
addr16
push
or
in
bswap
mov
test
leave
jns
adc
cmc
pop
lods
adc
jl
mov
leave
lcall
fs
and
ss
out
adc
popf
jns
fstpt
movsb
sub
mov
std
push
leave
pop
out
jns
lret
add
push
xchg
fwait
push
pop
fucomip
mov
or
lods
sbb
pop
xor
hlt
mov
xor
cld
pop
jbe
into
mov
scas
in
mov
xlat
in
adc
orb
ljmp
ja
bound
jmp
and
sub
push
mov
and
jle
xchg
cmc
loope
inc
insl
cmp
add
stos
jp
or
or
mov
mov
jb
jbe
dec
sbb
inc
sahf
mov
xor
pop
jno
ret
shlb
out
mov
add
inc
inc
fs
cmp
in
add
cmp
imul
subl
push
mov
lds
xchg
push
out
scas
rclb
loopne
pushf
sbb
and
pop
xchg
aas
out
push
fwait
mov
pop
mov
push
push
insl
dec
cltd
add
loope
lods
jnp
dec
pop
fidivrl
clc
and
subl
cmp
dec
jb
rcr
pop
ret
fimuls
filds
movsb
and
xchg
inc
pop
pop
xor
sbb
inc
sub
adc
sub
cmp
sahf
jb
sbb
out
sbb
inc
outsb
nop
or
or
or
hlt
pop
adc
test
push
xchg
pushf
nop
movsl
les
adc
rcrl
addr16
fnsave
add
lcall
je
dec
int
cmp
xchg
xor
aad
pop
fsubrl
jno
add
pop
xchg
inc
inc
sub
mov
lret
test
dec
dec
loop
lret
sbb
mov
xor
dec
stos
scas
call
rorb
filds
dec
inc
xchg
sub
inc
popf
jb
mov
xorb
hlt
pop
inc
pminub
arpl
lea
das
mov
hlt
cmpsl
fldl
dec
jle
pusha
mov
out
pop
sbb
scas
sub
inc
add
mov
or
fisttpll
xchg
shrb
pop
popl
inc
fsubrl
xchg
pop
pop
cmc
insb
or
das
mov
mov
inc
jmp
in
mov
xchg
adc
in
arpl
test
and
imul
into
and
sbb
and
aam
mov
sbb
nop
sbb
outsb
jl
movsl
push
notl
inc
fidivl
xor
xor
jae
sti
push
imul
loop
or
jmp
xchg
fwait
sbb
sti
xchg
cmp
cld
mulps
lea
dec
rorl
cmp
jg
dec
pop
fsubrl
inc
ret
sbb
imul
negb
push
test
fistl
push
lods
or
mull
movsl
loope
popw
std
fidivl
outsl
aam
lds
std
sahf
loope
push
pop
fldl
add
test
out
adcl
jo
mov
cmp
bound
in
sub
mov
xlat
mov
mov
mov
mov
xor
mov
je
sbb
pop
jle
stos
std
xchg
enter
pop
xchg
inc
int
jbe
popa
ret
sbbb
sub
mov
fcmovb
ja
lcall
cmpsl
and
pop
les
add
cmpsb
push
mov
nop
shll
femms
iret
sub
jecxz
pop
xor
loope
sub
ror
out
pop
xchg
ret
pushf
sub
push
rorb
in
adc
repz
stos
pop
loopne
fisttpl
mov
and
sub
push
je
sub
mov
inc
mov
cmp
out
stos
mov
jne
push
mov
jge
xchg
push
pop
flds
ja
cmp
rorl
subl
shrb
sbb
lcall
imul
sarl
outsb
xchg
clc
or
cmpsb
lods
sbb
sarl
mov
stos
lret
jl
stos
dec
outsl
ss
xchg
mov
xor
inc
mov
jns
shll
int3
and
pop
xchg
das
aam
bound
fwait
inc
shll
stos
repnz
es
lods
out
in
jns
rorl
das
or
jmp
and
mov
in
push
mulb
sti
jne
imull
mov
shrl
mov
or
out
out
adcb
dec
jbe
adc
adc
jl
mov
lret
add
xor
jge
dec
test
or
xorb
jnp
or
cmc
push
mov
mov
cmp
call
jns
test
sub
sub
mov
int3
sbb
mov
pop
js
and
mov
adc
inc
aam
adc
xchg
fsts
xchg
add
das
add
jne
push
ljmp
add
rcl
scas
sbb
out
jp
out
push
adc
push
mov
clc
pop
mov
xor
sbb
jbe
mov
movsl
inc
inc
sbbb
add
mov
stos
sarl
add
and
sub
lods
xchg
adc
fisubs
shl
aad
rcl
in
mov
push
dec
repz
add
test
push
aaa
push
and
xcrypt-ctr
cmpsl
fstpl
jo
xchg
mov
enter
loop
push
inc
rorb
jns
add
out
dec
mov
and
mov
pop
sub
dec
fnsave
lret
iret
jmp
adc
cmc
push
jno
fcomp
mov
ret
push
rclb
gs
neg
int
fdivr
inc
jp
mov
ds
xchg
addr16
loope
fxch
mov
push
mov
outsl
jg
shll
int
jb
xchg
lods
jge
sete
cs
jp
inc
icebp
push
lds
in
mov
mov
or
push
pusha
push
push
out
sar
cmpsl
jo
aaa
adcl
ljmp
adc
xchg
incl
jno
mov
mov
inc
pushf
push
inc
inc
stos
push
aad
movsb
or
pop
and
xchg
pop
lods
in
pushf
dec
inc
sbb
je
pop
insl
mov
mov
in
mov
mulb
loopne
adc
idiv
fldt
fidivrl
sti
aas
mov
je
outsl
mov
fnstcw
insb
pop
mov
jle
sarl
mov
pop
mov
jns
mov
mov
movsb
xchg
ljmp
pop
cmp
stos
ljmp
dec
inc
pushl
mov
call
loop
xor
jbe
dec
scas
pusha
nop
jo
mov
cltd
jns
lock
test
outsl
pop
xor
cld
mov
stos
shll
add
cmp
xorl
jae
push
out
lahf
xor
in
test
sarb
out
xor
mov
and
mov
add
xchg
sub
mov
rcll
outsb
lret
notl
jl
out
pop
negl
inc
jae
lock
pop
jbe
mov
jle
push
jmp
mov
xor
mov
in
sbb
pop
pusha
andb
cmc
dec
push
je
sbb
sub
clc
jae
lea
xor
ss
cmpsl
mov
daa
rcrb
int
cmc
aas
sub
jo
mov
repz
dec
fdivr
arpl
outsl
sub
adc
loop
jmp
sbb
ja
add
stc
les
dec
and
sbb
xchg
lcall
dec
fsubs
mov
xchg
jle
xor
mov
push
dec
cwtl
or
cmp
into
inc
pop
and
sbb
add
jnp
mov
jne
push
rcll
pop
dec
push
lret
test
xchg
jns
pop
cmp
mov
and
dec
into
pop
data16
icebp
out
lret
pushf
test
nop
sub
dec
jmp
jge
pop
test
xor
stos
aaa
cmp
xlat
outsl
loopne
add
lcall
cmp
mov
mov
lgs
icebp
fwait
in
cmpsl
xor
sub
dec
scas
pusha
mov
xor
idivb
lock
sarb
mov
mov
pop
cmp
mov
sub
nop
out
ljmp
lret
and
fildl
pushf
ds
pop
fisttpll
lret
rol
pop
loope
dec
and
cmp
mov
popl
jmp
xchg
loopne
int
add
sub
and
movsb
into
inc
mov
push
aaa
jnp
sahf
shrb
roll
andl
nop
dec
pop
mov
pop
xchg
mov
fnsave
movsl
push
cmpsl
lock
jge
xchg
out
loopne
jl
test
pop
call
pop
loope
cmp
mov
mov
int3
sub
adc
xor
jo
aaa
or
xor
jp
cmpb
jb
sbb
and
faddp
hlt
pop
xor
mov
enter
jp
and
push
scas
mov
jo
outsb
je
pop
dec
inc
sub
inc
insb
gs
bound
pop
add
enter
push
jo
and
ja
lcall
cld
adc
sub
jle
loop
mov
loope
cmpl
into
add
ds
sub
lahf
adcb
push
push
movsb
add
xor
rcrb
scas
int3
fcoms
and
mov
mov
jno
sarb
rcl
dec
or
mov
ret
out
sub
sub
stos
xchg
pusha
jne
outsb
pop
test
xor
add
in
cmpsl
xor
pop
mov
mov
xor
stos
scas
inc
adc
lods
pop
outsb
mov
xchg
sbb
mov
filds
orb
ret
mov
dec
xchg
cmpsl
sbb
hlt
out
cltd
jecxz
jp
out
jmp
bound
sbb
sbb
pop
stc
cltd
aaa
les
ds
mov
dec
and
pop
shlb
nop
jp
fnsave
cmpsb
lds
ret
or
jge
cwtl
lea
xor
scas
or
jb
jne
leave
mov
sbb
lcall
or
rcll
mov
cmpsb
loopne
imul
mov
adcb
das
orl
stos
mov
jns
mov
mov
fstpl
push
sub
dec
out
or
xchg
in
imul
popf
in
fisttpl
pop
ss
je
imul
jp
and
fsts
leave
sub
dec
inc
enter
mov
push
test
and
sub
xchg
and
test
cmp
push
js,pt
mov
mov
ljmp
scas
ja
pop
not
pushf
adc
cmpsb
sbb
jbe
xor
push
add
arpl
adc
jnp
movsl
cmp
dec
cs
arpl
mov
repz
mov
rcrb
adc
out
inc
xabort
test
in
dec
fldt
pop
pop
jl
jecxz
jne
aaa
enter
cmpsb
jle
add
lret
pop
aaa
mov
push
add
enter
push
push
cwtl
in
stc
mov
lret
dec
sahf
cmp
mov
cmp
jle
add
mov
in
push
sbb
les
and
sbb
test
adc
ret
arpl
ror
rcll
in
pop
xor
dec
xor
jne
roll
ret
je
mov
push
dec
push
sub
fcmovu
sarl
fisttps
bound
xchg
push
or
sbb
add
ljmp
xor
sahf
dec
test
xor
sbb
cmp
pop
sahf
xchg
jb
fcom
dec
xor
or
stos
xor
xchg
push
hlt
pop
cmp
int
les
lss
es
loop
sub
sahf
rorl
cmp
sub
push
sub
jbe
add
add
dec
inc
cmc
dec
add
sub
iret
int
sbb
add
shll
insl
or
add
add
pushf
inc
outsl
push
ds
lahf
or
andl
arpl
test
js
jp
pop
mov
scas
popa
ja
dec
and
jbe
movsl
sbb
outsb
sarl
pop
adc
repz
mov
lahf
or
mov
push
dec
xor
push
ss
popa
in
pop
clc
pop
outsl
andl
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
jmp
add
out
hlt
inc
outsb
out
sub
daa
rorl
jnp
cwtl
jnp
xchg
jg
inc
xchg
sarb
xchg
cs
xor
fs
sahf
ds
sarb
inc
scas
push
cmp
mov
cmpsb
dec
inc
call
jmp
mov
xor
xor
and
pop
pop
cmp
pop
xor
and
fcomps
xor
cmp
hlt
nop
jl
mov
out
cmp
daa
cltd
mov
inc
arpl
cmpsb
push
mov
sbb
jae
and
sbb
popa
es
loope
cmp
jno
leave
or
mov
lret
xchg
popf
ja
orb
lahf
pop
mov
cmpsb
adc
es
inc
jge
stos
and
fistps
icebp
pop
add
sbb
outsl
push
loope
out
cwtl
scas
imul
mov
xchg
cli
or
adc
movsb
js
push
ljmp
push
inc
jns
add
mov
add
add
shll
addr16
hlt
xchg
nop
mov
lods
jno
add
pop
sbb
cmp
mov
cmpsb
leave
pop
mov
mov
lret
roll
pop
cli
jns
xchg
lret
stc
repz
mov
imul
and
popl
cwtl
push
cmpsl
pop
repz
arpl
mov
mov
xor
sub
mov
mov
jmp
sbb
rcr
mov
sbb
inc
int
loopne
outsb
push
or
sbb
lods
mov
mov
and
pop
or
leave
leave
ja
sub
fwait
cltd
inc
lret
cmpsl
test
jmp
cmp
xor
fdivr
xor
add
ljmp
clc
negb
lret
mov
xor
cld
lcall
push
call
adc
and
cmp
fstpt
add
xchg
mov
jle
sar
insl
lods
xchg
outsb
sub
ret
out
mov
jns
ret
xor
ja
add
lcall
xor
sbb
cwtl
pushf
add
nop
shll
lds
scas
mov
daa
sub
daa
sub
adc
clc
cmpsb
cmp
ds
in
ficoml
jno
in
test
fldenv
sbb
add
mov
es
loop
inc
adc
cmpsb
inc
loope
dec
mulb
adc
mov
fucomip
and
imul
add
push
iret
out
les
cmpsb
xor
xor
fldcw
cwtl
push
enter
xchg
xchg
dec
jnp
dec
stc
dec
push
dec
loop
mov
fisubrl
pop
adc
push
or
inc
pushf
sbb
mov
in
pop
cli
out
shll
jnp
pop
out
lods
jbe
push
lods
mov
xchg
test
rcl
fwait
cmpsb
fwait
aaa
or
inc
ret
cltd
push
mov
shlb
cmp
cmp
lahf
inc
dec
and
mov
lds
push
sbb
into
xchg
sub
fisubrl
add
iret
mulb
mov
xchg
and
sbb
subl
sbbl
xor
cli
pop
imul
std
shll
loopne
jg
jge
and
xor
gs
mov
mov
adc
scas
lods
not
cwtl
inc
jbe,pn
mov
push
fistpll
sbb
add
dec
orps
push
aam
lret
adc
xor
mov
imul
daa
push
adc
xchg
lods
fbstp
cmpsb
sub
sbb
jno
or
rcl
ja
mov
inc
push
pop
xchg
ret
adc
push
cmp
xlat
std
xchg
push
sbb
loope
pop
sbb
dec
stc
daa
mov
test
cmp
sbb
sar
in
pop
mov
cmp
std
lods
ja
clc
shrb
jle
clc
inc
cmp
negl
push
pop
xlat
aad
dec
mov
ja
sub
lock
popf
inc
xor
cli
das
stos
mov
rcll
nop
fiaddl
nop
lret
xchg
sbb
or
adc
sbb
or
dec
into
pop
cmp
inc
push
push
adc
jecxz
jnp
adc
lahf
inc
pop
std
sbb
xchg
mov
ja
push
xor
cmp
xchg
std
and
mov
in
ret
lea
lds
push
pop
xor
xlat
xlat
decb
aaa
ret
pop
not
lods
xchg
xlat
pushf
sbb
pop
jne
popf
sub
xor
pop
sbb
mov
mov
inc
gs
out
and
outsb
dec
pop
inc
inc
or
out
or
pushf
orb
adcl
sbb
test
xchg
insl
xchg
push
shll
add
fistpl
jecxz
jno
push
shr
sub
mov
pop
cld
daa
mov
and
or
xchg
outsb
repnz
sahf
jne
scas
lret
out
loope
xchg
lea
xchg
out
push
pop
mov
fstps
bound
sub
push
nop
out
shrb
xor
add
shlb
pushf
pop
fdivrl
jl
dec
orl
or
out
add
mov
mov
inc
cmp
sub
out
sbb
mov
add
in
mov
cmp
mulb
out
and
in
pop
cmpsb
push
outsl
sbb
daa
int3
xor
fwait
sbb
inc
sbb
push
or
mov
hlt
leave
movsb
mov
or
test
int
stos
gs
and
insl
rorb
push
adc
fldenv
jno
std
jg
lock
stos
push
movsl
cmpsb
repz
pop
pusha
adc
jno
sbb
pop
ret
les
adc
ret
mov
stos
adc
xchg
scas
movsl
cwtl
jb,pn
or
fcmovb
nop
jecxz
cld
fildl
bound
xchg
inc
sbb
pushf
mov
nop
pop
mov
jb
inc
dec
icebp
and
insb
xor
cmp
into
add
int
dec
mov
and
add
xor
rcrl
adc
dec
add
adc
call
mov
jg
mov
jg
xor
jns
inc
push
test
mov
dec
daa
fisttps
cltd
les
in
in
mov
push
mov
cmp
lock
pop
or
mov
ljmp
or
lods
inc
pop
fstl
in
cmp
xor
icebp
inc
or
test
cmc
icebp
insb
mov
gs
test
rcl
or
fcmovb
sbb
xor
mov
dec
sbb
fdivl
adc
or
sub
pushf
call
sub
adc
pop
in
jp
cmp
jl
jns
xchg
mov
js
or
out
push
mov
push
into
imul
dec
movsl
or
or
ret
arpl
scas
daa
es
mov
pushf
stos
inc
xchg
cmp
push
jne
pusha
out
or
mov
outsl
fwait
test
dec
insb
adc
fmull
dec
loopne
add
sbb
push
pop
and
mov
xchg
jecxz
fmuls
mov
iret
cli
inc
xor
sub
xor
push
mov
jge
cld
cmp
ret
xor
mov
sub
mov
pop
add
mov
lsl
jnp
xchg
dec
sub
lret
pop
cmp
pop
cmpl
lahf
stos
push
jecxz
inc
add
lods
jl
add
icebp
int
sbb
sub
dec
fistpll
cmpsl
cmp
add
jl
in
inc
and
mov
fiadds
sub
ja
jl
rorl
outsl
jnp
inc
mov
and
repz
cmp
mov
ret
ret
mov
cmc
movsl
loopne
outsb
pop
jle
xor
loope
jge
pop
test
adc
stc
sbb
int
stos
daa
xchg
les
dec
jecxz
dec
sub
add
rolb
repz
fdivr
and
push
add
test
dec
cmpl
add
das
pop
jl
mov
subb
pop
in
jae
repnz
mov
jbe
add
loopne
fistps
jge
adc
jmp
mov
sub
adc
mov
fdivrl
mull
sub
cmp
mov
jg
cs
jb
inc
out
inc
ja
cmp
xchg
data16
lds
push
mov
pop
test
dec
dec
dec
nop
es
popa
bound
cmp
shll
xchg
add
xchg
lret
outsb
or
dec
mov
int3
aaa
cmp
and
daa
fwait
imull
pop
cmp
mov
cltd
scas
mov
cmpsb
cmp
dec
cmpb
sahf
push
imul
cmp
imul
add
out
pop
mov
std
and
sub
addb
and
sbb
stos
je
cli
xchg
cwtl
aad
or
push
loop
mov
inc
icebp
icebp
cltd
cmovge
lods
pop
or
stc
and
jo
fists
mov
insl
mov
push
ret
push
lret
xchg
add
and
inc
or
hlt
push
loop
repz
sbb
dec
mov
sahf
pop
dec
pop
cmpsb
jmp
lahf
in
sti
xor
and
lock
fisttpl
addr16
roll
shlb
jns
cmp
sbb
js
inc
pusha
adc
rorl
enter
mov
mov
aam
lods
jns
out
lock
xchg
loopne
mov
push
mov
xchg
cli
lahf
push
lret
cmp
cmpsb
xchg
js
jl
push
jo
repnz
xchg
lcall
test
xchg
jb
pusha
orb
mov
in
sbb
and
shlb
mov
push
xchg
hlt
jae
adc
in
les
fwait
sbb
or
mov
pop
jo
push
pop
dec
jp
loopne
pop
jb
mov
rorb
mov
aaa
mov
gs
in
jb
icebp
icebp
mov
popf
insl
test
in
sbb
rolb
dec
sbb
cmp
pop
daa
dec
and
mov
pop
repz
and
push
xchg
lock
nop
jns
stc
jae
sub
add
loop
inc
rcrb
add
lret
pop
add
clc
pop
mov
mov
xor
pop
sub
ljmp
and
div
sub
jbe
out
pop
cmp
jl
outsb
fcoms
xchg
and
jbe
sbbl
imul
mov
fwait
cmc
insl
sub
test
cmp
and
fs
aad
jnp
cmp
and
xchg
callw
imul
dec
ja
loope
push
lds
sbb
fdivp
dec
ret
dec
roll
in
fs
sub
incl
loopne
push
jns
xor
aas
into
xor
mov
adc
pop
push
aaa
lcall
int
dec
sbb
in
or
pop
or
in
sub
repnz
xor
and
popf
ljmp
fildl
cmp
pop
inc
ja
adc
mov
popa
out
adc
fstps
imul
mov
out
rcr
scas
daa
push
leave
dec
or
fisttpll
shlb
cld
andl
jnp
cmp
xchg
repnz
xor
je
cmp
sub
neg
cmp
inc
shlb
sahf
nop
xchg
orb
sbb
lahf
sarl
dec
ss
or
mov
cmp
pop
adc
push
addl
enter
xchg
xlat
push
mov
push
push
cmp
pop
push
loopne
cmp
mov
lcall
movsb
pop
rcll
mov
in
repnz
fsts
sub
stos
cmpsl
leave
push
repnz
lahf
inc
inc
mov
nop
lahf
test
in
or
jle
movl
je
rcr
fs
fs
mov
fmull
fnstsw
jmp
incb
push
or
push
inc
push
cli
in
dec
in
add
dec
mov
jmp
adc
and
add
mov
add
sbb
leave
xor
push
rolb
loope
mov
add
and
sbb
mov
mov
pop
add
mov
in
mov
sbb
ret
orb
push
or
daa
repnz
mov
ja
jmp
cmp
xchg
ss
sub
pusha
sbb
dec
cli
loop
mov
push
and
out
pop
test
push
neg
mov
xor
pop
aas
mov
cmp
cmp
jecxz
xchg
call
lods
cmp
ds
out
insb
bound
xchg
daa
adc
add
dec
mov
loop
jnp
js
call
xlat
sub
mov
outsl
push
in
add
jge
push
sarb
mov
jo
jg
or
cmp
in
jmp
cmc
daa
pop
dec
sub
movsl
in
bound
lcall
in
sub
jecxz
leave
or
mov
fimull
scas
or
mov
aaa
cld
fldcw
mov
xchg
mov
cmp
jb
ss
and
loop
lods
ret
dec
mov
cs
jnp
cltd
and
outsl
out
leave
dec
inc
push
mov
mov
mov
jecxz
mov
data16
mov
pop
adc
sbb
add
ds
mov
pop
sbb
setb
addl
mov
and
jb
adc
sar
shrb
shl
lods
sarl
shr
icebp
jo
and
jp
outsl
push
mov
psubq
jnp
mov
and
xor
notl
fdivl
mov
sub
xchg
pop
mov
sbb
jb
adc
push
std
std
xchg
and
pushf
test
push
daa
cmp
cmp
ficoml
add
mov
and
mov
cmp
loop
sarb
repnz
loop
mov
lret
dec
fmull
and
cs
sub
or
pop
fldcw
jmp
sbb
es
ljmp
and
xchg
dec
pushf
pop
cmpsb
int3
pop
adc
jp
mov
fisttps
xor
enter
inc
addr16
and
fistpll
push
mov
sti
test
ret
cmpsl
dec
cmp
push
push
push
or
pslld
jmp
jno
jmp
fcoml
cld
mov
mov
mov
mov
jl
xor
ret
and
int3
fsubs
leave
cmp
fimull
pop
sub
jmp
jae
ret
inc
xchg
pusha
in
ss
sbb
nop
out
sub
sbb
or
mov
into
xor
enter
fsubrs
mov
pop
in
add
pop
loop
sub
jge
mov
fidivs
cmp
push
out
lahf
xor
pop
jmp
inc
in
dec
mov
out
jecxz
jnp
icebp
fstpt
push
iret
sub
sub
pop
cmpsl
lcall
cmc
popa
sbb
outsl
lods
dec
mov
leave
sub
call
adc
lahf
or
outsb
out
inc
jecxz
imul
jo
cmp
mov
in
mov
popf
jne
or
sbb
inc
cs
outsl
push
xchg
mov
xchg
jl
and
push
add
mov
idivb
pop
jo
out
ret
hlt
adc
arpl
push
or
fs
mov
aam
in
adc
ds
pop
pop
test
push
or
les
sahf
je
inc
sub
ja
pusha
inc
and
out
or
cmc
mov
mov
icebp
ret
insb
mov
push
add
shlb
mov
mov
out
mov
ss
jo
ja
insb
loopne
pop
call
xchg
loope
sbb
cmpsb
mov
sbb
rcll
pop
insl
scas
mov
cmp
fnstsw
ds
jg
push
mov
mov
pop
inc
in
and
fdiv
xor
dec
movsb
lods
xor
movsl
and
scas
pusha
les
ss
pop
adc
out
and
cmp
push
mov
cmp
mov
dec
mov
stos
cmp
jo
pop
jne
push
loope
cmp
sbb
sub
push
inc
xor
mov
add
test
xor
pop
pop
sub
inc
dec
test
cli
je
outsl
pop
popf
and
xchg
sbb
imul
xor
jae
mov
int3
cmp
int3
pushf
or
mov
adc
jnp
test
sbb
adc
cmpsl
stos
popl
pop
loope
cmp
xor
push
sti
or
sarl
cmc
cmp
lret
mov
pop
fldenv
mov
cmovns
push
sub
aas
ficomps
adc
daa
mov
sub
xchg
sbb
sbb
cmc
dec
ljmp
cld
inc
adc
xchg
test
inc
push
add
cmp
mov
lods
nop
mov
push
mov
data16
xchg
cmp
data16
into
nop
and
daa
cmp
stos
jp
dec
sti
push
int3
add
nop
jecxz
in
adc
mov
sub
popf
das
mov
inc
xor
popa
imul
xchg
loop
out
and
and
sarb
xchg
add
ficoml
lods
jne
inc
sahf
clc
ret
jns
pop
gs
xlat
out
cmp
jne
xchg
xchg
sti
insb
mov
movsb
lcall
pop
out
call
pop
cmpl
and
or
or
data16
xor
insb
and
xchg
push
cmp
js
jg
add
xchg
ss
mov
rcr
outsb
push
lock
nop
test
adc
aad
ss
pop
stos
adc
adc
jmp
adc
je
xor
cld
clc
in
and
andl
dec
cli
mov
mov
add
popa
jno
jp
rorb
sar
mov
and
push
pushf
pop
push
and
loope
sahf
fistpll
sub
xchg
jns
xor
sbb
dec
sub
dec
sar
ret
xchg
add
sub
mov
push
xchg
test
into
push
cmp
mov
addr16
ds
sahf
fucom
insl
jp
sbb
js
andb
xchg
mov
cmp
xchg
mov
mov
push
sub
nop
sti
dec
push
sbb
or
loopne
imul
cld
cmp
xchg
mov
adc
mov
cmp
das
mov
int3
arpl
mov
shlb
jnp
enter
jle
sbb
dec
mov
dec
andl
push
pop
out
xchg
incb
movsb
jg
scas
cmp
mov
push
jg
xchg
xchg
jge
mov
dec
repz
cmpsl
add
mov
fsubrl
rorl
mov
add
mov
jns
out
xchg
pushf
mov
jnp
xor
or
xor
push
and
dec
subb
or
mov
adc
jnp
out
push
adc
mov
add
call
out
sbb
cs
lahf
jge
sar
notl
cld
icebp
jmp
lds
xchg
ds
stc
mov
xchg
ret
flds
push
mov
fsubr
aad
sbb
xor
test
cmp
adc
jno
das
sbb
in
xchg
std
cld
arpl
fwait
popf
pop
cs
cmp
cmp
nop
into
and
je
call
cwtl
orb
test
arpl
jnp
jbe
das
xchg
lcall
sbb
addr16
push
and
leave
ss
xorb
mov
andl
imul
sahf
mov
add
inc
das
pop
cmp
cmp
bound
sbbl
xor
xchg
data16
hlt
xor
dec
test
test
xor
xchg
es
mov
sub
dec
mov
aas
faddl
les
std
inc
insb
push
mov
sub
cmp
movl
fnstenv
dec
inc
cmpl
add
roll
cmp
cmp
subb
mov
movsb
cmp
daa
cmp
stos
fistl
notb
xchg
or
dec
insb
mov
sahf
cld
test
mov
test
stos
and
repnz
mov
cmp
mov
subl
addr16
inc
in
xor
xor
enter
adc
imul
mov
in
cld
stc
mov
sbb
cmp
mov
shl
mov
icebp
cltd
insl
mov
loope
xor
adc
ja
sbb
or
lcall
or
jl
push
jl
xchg
imul
outsb
mov
sbb
std
xchg
jp
loopne
add
jae
sarl
cmp
lcall
mov
shlb
push
bound
push
mov
jmp
frstor
pushf
dec
andl
mov
mov
outsl
xor
fstl
cmp
or
add
adc
pop
cmp
and
arpl
xchg
dec
je
sub
outsl
jmp
stc
ja
mov
lahf
sub
mov
sti
aam
xchg
bound
cmp
push
subb
mov
pop
add
xor
mov
sub
inc
lret
orl
adc
and
arpl
mov
mov
pop
dec
fcmovnbe
icebp
test
mov
loope
sub
inc
sbb
std
into
into
cwtl
es
sbb
ljmp
sbb
jns
lock
or
jne
cmp
fdivl
sbb
cmp
sub
pop
pop
scas
jnp
int3
fimull
mov
pop
xorl
cmp
add
xchg
sub
data16
fsubl
sbb
sub
mov
jo
xchg
cmovbe
xor
push
xlat
add
pop
and
subb
pop
xchg
add
test
or
std
or
leave
xor
movb
inc
mov
rorb
iret
xchg
aaa
xchg
sbb
sbb
cmpsb
mov
fimull
xor
subl
mov
or
push
loop
jmp
mov
lret
lret
inc
pop
xor
push
jmp
in
repz
out
push
fwait
int3
iret
mov
cmpsb
cmp
inc
mov
pop
dec
xchg
negl
xchg
in
data16
push
sub
mov
add
in
movsl
mov
int3
cld
fldt
scas
or
out
mov
xchg
adcb
cli
inc
dec
test
scas
movsl
pop
xchg
mov
inc
dec
es
or
xchg
out
mov
add
out
rcll
ficomps
in
negb
dec
imul
insb
push
icebp
xchg
outsl
mov
xchg
mov
call
cmp
scas
xor
lock
ljmp
scas
cmpsb
mov
fs
xor
mov
cmp
pop
xor
inc
jb
out
addb
lahf
push
or
cwtl
add
mov
jl
jle
repnz
scas
mov
inc
xchg
imul
outsb
fcmovu
iret
sbb
inc
nop
jbe
outsb
stos
fnstenv
lahf
out
loop
call
fs
jne
stos
jb
sahf
test
mov
sub
fs
mov
xchg
out
cmc
cmpsb
sub
aam
lods
fdiv
fmuls
ret
adc
cmpsl
adc
push
inc
out
xchg
sbb
add
push
adc
insb
sbb
xchg
jmp
push
mov
push
cmp
leave
aas
xorl
stos
sbb
sbb
mov
pushl
pop
stc
in
dec
lret
ret
das
mov
pop
mov
addl
scas
insb
xchg
sbb
daa
push
mov
pop
xchg
aam
pop
push
or
mov
xchg
or
push
cld
arpl
gs
popf
xor
std
outsb
scas
push
push
cmpsb
scas
in
fldenv
lds
out
ss
sub
sbb
jg
cld
or
sub
add
mov
ljmp
mov
sbb
into
aaa
add
orb
jl
xorb
mov
pop
mov
or
jmp
fisubl
filds
push
orb
cmp
mov
xor
leave
pop
inc
cli
mov
jb
mov
fdivs
mov
insl
fidivrs
out
xchg
lds
lret
push
cmp
lea
mov
pop
nop
lret
rcr
adc
fcmovnu
jge
xchg
and
negb
xor
or
jb
pushf
mov
lds
sbb
xor
into
xlat
sub
es
mov
mov
mov
jae
jl
xor
mov
fistps
pop
dec
sarb
aaa
mov
lea
and
popw
inc
sbb
xchg
call
push
daa
pop
mov
push
fs
jp
cmp
lock
xchg
rorb
lods
adc
dec
push
lods
fiaddl
xor
test
or
pop
push
dec
push
lea
les
lods
xor
jne
ret
pop
cli
popa
or
pushf
pop
sub
adc
xor
mov
dec
cmpb
push
mov
in
cmpsb
inc
push
xorb
mov
inc
fdivrl
push
or
mov
xchg
xor
mov
fisubrs
sub
ret
test
inc
sahf
ja
adc
cmp
mov
lods
dec
pop
sub
fstl
sub
mov
shll
or
stc
mov
jns
orb
adc
cmp
jns
pop
decl
jp
xor
fs
xor
dec
int3
xlat
cmp
xor
repz
leave
hlt
pop
cmp
dec
add
or
pop
loop
mov
mov
xchg
xchg
cmc
test
cmp
add
pop
mov
shll
dec
jmp
adc
int
push
clc
and
add
inc
push
addb
jne
mov
test
mov
sub
xchg
in
data16
lock
imul
mov
adc
push
mov
dec
cwtl
sub
pop
mov
jo
and
aam
inc
and
dec
aam
push
xor
ljmp
test
mov
or
mov
fld
or
pop
pop
iret
out
lods
pop
pop
dec
aad
sub
adc
in
bound
sub
and
add
pop
cmp
mov
xchg
fcoml
mov
cld
xchg
mov
and
sar
push
pop
inc
ljmp
sub
loop
sub
cmp
pop
cmpsb
mov
lahf
push
or
call
filds
movsl
cmc
and
mov
and
clc
roll
jae
cmp
sub
loopne
pop
mov
fs
push
test
les
les
pop
jl
adc
and
lret
out
into
mov
lahf
jne
add
cli
push
add
in
mov
push
add
xchg
push
fidivrs
sbb
lods
rdtsc
popa
cmc
out
add
out
sahf
add
jae
out
scas
xor
mov
sbb
in
sbb
rolb
lahf
or
fsubrl
rcrb
call
out
mov
dec
or
jnp
orl
push
out
fbld
mov
push
push
jmp
push
inc
jecxz
sbb
adc
fimull
xor
cmp
in
jb
mov
or
pop
xor
icebp
ret
mov
jb
mov
sbb
cld
xor
pusha
cltd
and
fwait
rclb
or
inc
pop
imul
lods
xchg
push
ljmp
xor
idivl
addr16
cmp
push
jl
adc
ret
or
inc
inc
enter
rcll
inc
jo
clc
pop
dec
ficoms
fidivrl
das
mov
nop
out
push
movsb
jo
test
shll
xlat
cmp
call
pop
xchg
out
inc
sbb
fcoml
fdivp
jae
pusha
dec
stc
pushf
sub
into
lock
jno
test
pop
mov
inc
mov
and
pop
push
or
xorb
add
sbb
popa
jne
jle
inc
js
jb
mov
call
cmp
dec
mov
lcall
mov
fisubl
xor
mov
lds
and
add
cmp
mov
mov
addr16
and
sub
xchg
fstpl
mov
xor
out
cmp
inc
sub
add
cwtl
xor
mov
jecxz
ret
in
les
and
jb
scas
inc
xor
jp
xor
rcll
add
stos
gs
inc
test
jle
dec
into
push
test
ficomps
mov
rorb
mov
into
repnz
pop
pop
pop
dec
jns,pt
mov
mov
js
rcr
or
sbb
sbb
jp
cmp
adc
fildl
mov
inc
and
add
or
out
xor
test
dec
das
and
in
in
add
jns
sub
lret
fmuls
icebp
pop
jge
jae
mov
fadd
stos
mov
imul
mov
ret
mov
std
adc
inc
xchg
push
jmp
test
in
ss
jle
sub
sub
push
leave
ja
lcall
gs
rolb
mov
add
jb
aam
adc
and
mov
dec
stc
cmp
aaa
mov
icebp
xchg
add
pusha
adc
jle
push
ljmp
into
xor
out
cwtl
addr16
jle
mov
adc
xchg
lret
movsb
jae
nop
pop
cmpl
adc
and
xlat
lahf
xor
sbb
into
xchg
jg
dec
addr16
push
inc
mov
andb
mov
arpl
je
push
xchg
sbb
frstor
icebp
jne
push
mov
icebp
or
js
test
ds
sbb
sbb
daa
and
pusha
jae
pop
imul
sub
xchg
push
int3
mov
movsl
mov
xor
pop
and
popf
fcoml
rcl
dec
fcomip
and
bound
callw
stos
mov
hlt
push
push
movsl
dec
xchg
mov
les
mov
cmp
add
je
rcrl
fistpl
int
jns
repz
add
and
mov
in
lods
jnp
mov
xchg
addr16
out
fcmove
cmp
add
push
aaa
cmp
inc
jmp
mov
sub
roll
in
imul
add
adc
decl
ljmp
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
movl
jmp
mov
dec
mov
cmpl
jbe
mov
dec
xor
push
pop
div
mov
mov
mov
movl
movl
movl
movl
movl
mov
xor
add
mov
sub
mov
movl
cmpl
jmp
jbe
lcall
lahf
mov
push
xchg
jp
mov
jnp
movsl
loopne
xchg
icebp
cmp
aaa
movsl
fistpll
jb
pop
push
insb
aam
lods
mov
sbb
inc
adc
sbb
mov
jle
je
loope
xchg
les
add
jmp
fs
shl
sbb
imul
dec
cmp
out
jmp
fdivrs
gs
mov
or
inc
insl
xor
cmp
es
jmp
aaa
cmp
pop
iret
out
daa
cmpsl
dec
dec
mov
mov
out
mov
in
aas
cmpsl
push
lcall
xor
call
or
xchg
inc
pop
insb
jl
mov
aad
pushl
out
mov
mov
cmp
sub
stos
scas
and
cmp
outsl
dec
icebp
push
int
stc
imul
imul
mov
cli
fwait
sub
lea
insb
dec
ss
aas
push
mov
lods
xchg
mov
xchg
fbstp
cmp
ja
pop
xor
jge
bound
fists
addr16
push
lahf
aas
sbb
xchg
push
inc
ss
mov
xchg
lods
sub
push
mov
inc
pop
jne
xchg
jg
mov
test
or
frstor
fisubl
fmull
and
mov
pushf
xchg
cwtl
stc
addr16
add
imul
push
xchg
out
mov
push
cmp
sbb
lds
jg
lock
mov
xchg
repnz
cmp
les
dec
iret
cmp
sub
lret
aad
sub
les
pop
sti
lods
test
or
xchg
arpl
mov
dec
lock
mov
or
cltd
push
sarb
pop
les
mov
and
inc
loope
push
stos
lock
xchg
cmpsl
jle
movl
cmp
outsl
push
push
push
lods
leave
cwtl
jmp
push
cmp
push
dec
jne
mov
es
add
xor
lods
dec
or
lahf
and
addl
lods
pop
jmp
arpl
inc
out
sub
rorl
mov
inc
pop
imul
subb
push
jp
sarl
loope
inc
dec
jmp
cli
incl
sbbb
pop
lea
cs
or
dec
andl
dec
mov
mov
sub
xchg
dec
adc
mov
push
mov
stos
mov
repnz
adc
sbb
fmull
imul
repnz
rorl
fdivrs
dec
repnz
ret
iret
pop
cmp
mov
mov
xor
roll
shrl
pop
stos
jne
xchg
aaa
imul
jl
test
sub
inc
int3
sbb
popa
sub
adc
mov
in
push
fs
xorb
sub
and
dec
test
pop
xlat
cmpsb
xor
pop
out
inc
or
mov
fcomps
fmull
das
and
xchg
in
push
cmp
and
mov
mov
jne
push
rolb
mov
sbb
sbb
pop
leave
das
fnsave
cmp
push
lahf
lret
cwtl
stc
cmp
push
cmp
shl
mov
dec
cmpsl
mov
and
iret
jl
out
lahf
sti
flds
fistps
scas
mov
lret
sub
jmp
sub
mov
mov
cs
cli
sti
jae
cmp
outsl
pop
shll
mov
shrl
loope
cmpsb
arpl
cmp
dec
loopne
pop
std
mov
mov
mov
mov
mov
imulb
fimuls
xorb
lods
fisubl
popl
movsl
cmp
mov
sub
ret
jb
mov
imul
push
inc
add
in
mov
add
jle
adc
jbe
pop
mov
mov
out
out
fisubrl
idivb
adc
or
fldenv
pop
mov
rcr
je
jp
pop
jp
mov
and
popf
cld
call
cmpsl
jg
lea
dec
or
fsts
dec
xorb
push
mov
ret
cmp
pop
loope
imul
sub
int3
lcall
xchg
jb
mov
pop
ret
lcall
in
jecxz
out
nop
fsubrs
lcall
test
sub
out
clc
sti
sbb
fsubrp
jecxz
sti
jbe
lea
mov
mov
and
adc
cmpsl
fwait
sbb
in
dec
jecxz
xchg
xorb
jae
aam
lock
xor
in
jge
mov
inc
rclb
jmp
addb
mov
inc
pop
push
fisubl
pop
mov
or
orl
in
fsubrs
pusha
scas
pop
mov
mov
stos
inc
sbb
add
sbb
pop
lcall
cmpsb
mov
or
inc
jbe
sub
jne
inc
and
adc
cmpsb
rclb
int
and
sub
adc
repz
movsb
jp
jg
imul
pop
or
cmc
cltd
sub
aas
pop
mov
sbb
add
push
mov
inc
and
insl
cmp
mov
inc
les
test
lods
sbb
inc
mov
mov
or
cli
dec
pop
fsubl
subb
inc
loop
push
inc
es
mov
adc
lcall
push
int
or
scas
mov
adc
orl
imul
addr16
popw
or
imul
mov
out
or
cmp
out
pop
inc
in
jne
mov
int3
sub
outsl
shlb
hlt
lahf
or
add
cs
push
ljmp
adc
mov
mov
adc
pop
mov
dec
je
jl
roll
sbb
jle
ss
aad
fstpl
or
test
mov
adc
xor
xchg
push
push
icebp
lea
cld
xchg
add
cmp
fprem
lea
adc
sbb
mov
xchg
and
insl
add
pop
push
pushf
xlat
jle
push
dec
pop
adcb
xchg
mov
fs
pop
sbb
adc
pushf
arpl
jp
mov
add
andl
xchg
stos
xchg
enter
cmpsb
adc
push
push
rclb
mov
scas
add
sbb
std
cmp
mov
xor
cmp
or
sbb
bound
fs
loop
cmp
mov
aas
sbb
js
pop
fdivs
daa
xchg
sub
cmove
sbb
push
rcll
or
and
loop
jmp
push
in
out
out
fisttps
aas
sti
into
lcall
test
orb
or
dec
jp
dec
dec
in
inc
push
add
cmp
pop
jbe
mov
dec
push
xlat
aad
jbe
pusha
test
outsb
push
pop
sbb
test
xor
out
jp
in
inc
pop
adcb
fiaddl
add
sub
xor
aam
daa
sbb
mov
arpl
sub
pop
mov
mov
sbb
add
mov
add
call
insl
add
loop
jae
mov
jne
jmp
imul
lcall
mov
ja
sub
inc
fsubs
push
add
inc
mov
dec
cmpsl
sbb
xchg
hlt
xor
mov
pop
scas
push
fisubrs
pop
push
push
fwait
lret
and
outsb
xchg
pop
inc
push
dec
ss
xchg
ja
xor
outsb
jg
lea
int3
jmp
jb
sub
mov
ja
repz
sahf
inc
in
fs
stc
bound
jg
sbb
lods
mov
mov
fists
dec
in
dec
mov
jg
cmp
lock
int3
lret
push
enter
arpl
jl
xor
adc
push
sub
fisttpl
dec
rorb
fstpl
xchg
out
xor
cmp
mov
mov
sahf
nop
ja
pop
or
cmp
adc
inc
cltd
and
imul
dec
xlat
jecxz
mov
jl
mov
push
mov
jle
mov
xchg
push
sbb
and
shll
fcmovne
mov
pusha
stc
or
jmp
out
sbb
cmp
daa
ret
je
lcall
roll
loopne
cld
and
or
jmp
out
sub
pop
sub
jnp
add
into
mov
or
insb
mov
jae
inc
or
nop
out
xchg
insl
daa
cmp
fistl
xor
mov
es
sbb
iret
lret
push
das
les
add
pop
movsl
shlb
pop
sbb
pop
lock
jno
enter
clc
fcomip
inc
add
cmpsl
pop
ss
out
jg
pop
xchg
cmp
adc
xor
nop
shlb
dec
aam
icebp
and
lock
outsb
cmp
inc
pop
ret
dec
mov
movsb
sub
sub
dec
negl
repnz
movsb
add
jne
mov
add
jl
sub
adc
pop
jnp
jle
add
test
fcomps
mov
xlat
inc
pushf
test
idivl
push
scas
jne
shll
bound
or
scas
mov
in
neg
xchg
mov
jbe
bound
push
pop
rorb
leave
inc
or
xchg
pushf
gs
inc
ss
add
rcll
lea
dec
xor
lret
scas
cmpsb
mov
inc
movsb
addr16
sbb
pusha
bound
in
pop
sbbl
shll
and
icebp
inc
out
pop
jnp
fsub
adc
xor
or
jne
xchg
inc
je
ret
cmp
int3
jno
aad
mov
xchg
scas
inc
and
jg
lds
icebp
dec
mov
push
enter
mov
mov
inc
std
cmpsb
cli
xchg
inc
xlat
dec
sahf
fnstsw
hlt
xor
or
inc
cmpsl
int
sbb
cmp
leave
out
sbb
test
xchg
std
lods
ret
mov
orl
cmp
pop
sbb
xchg
les
out
jg
adcl
mov
mov
sbb
fsubrl
xor
lds
cmc
or
dec
mov
jo
js
cmpl
xor
notb
xor
cmpsb
add
pop
js
popa
push
pop
ret
pusha
mov
jl
stos
jne
in
mov
lret
mov
hlt
and
das
adc
xchg
xchg
and
push
inc
pop
push
imul
sahf
pop
ficomps
adc
dec
fiaddl
or
neg
push
in
add
pop
xchg
int3
in
cmp
sub
fists
cmp
sbb
test
ja
jnp
fldcw
jge
cmp
test
sbb
and
jb
sbb
push
push
imul
pop
push
sahf
mov
adc
dec
sbb
loop
jle
jne
test
popa
sub
loop
mov
cmp
adc
lods
inc
ds
das
out
adc
daa
xchg
out
cmp
adc
sbb
iret
fwait
outsb
aam
xchg
xor
ds
pushf
enterw
push
flds
jno
rol
out
cmp
gs
lcall
sbb
lcall
scas
and
in
fs
xchg
cmp
fidivrs
xchg
stos
sub
add
mov
rcl
mov
xor
gs
push
test
aaa
xchg
jno
and
push
pop
and
xor
add
mov
xor
mov
sub
icebp
fwait
rorl
fmul
xchg
in
sub
into
push
orl
test
sti
mov
in
pop
pop
fisubl
pop
mov
popa
repz
mov
out
mov
dec
pop
cs
mov
sub
nop
jnp
insl
jb
xchg
xor
add
push
in
aam
mov
pop
insl
mov
dec
push
gs
imul
negl
aad
jp
repz
jns
cltd
adc
aad
xorb
cmp
popa
sub
sbb
push
js
add
xor
lret
shll
es
inc
scas
mov
or
or
mov
dec
lea
lea
jge
out
das
shr
pop
mov
push
rcll
lcall
or
xor
push
or
sbb
sti
pop
repz
jle
repnz
push
jne
cmp
fistpl
push
sub
pop
cli
cmc
pop
jl
inc
pop
rcll
mov
movb
inc
leave
pop
add
jl
mov
push
mov
mov
dec
adc
sub
pop
dec
icebp
xchg
aas
aad
sbb
mov
aad
and
sti
pop
jle
xor
pop
xlat
and
shll
fiadds
pushf
inc
in
fwait
addb
ja
addl
jns
add
iret
mov
sbb
mov
scas
out
adc
inc
and
xchg
cltd
sub
mov
insl
out
mov
pop
mov
add
rcl
adc
imul
pop
out
cwtl
xor
std
out
inc
jbe
xchg
pop
dec
or
mov
sbb
subb
mov
jmp
lea
xor
add
jns
cmpsl
rcll
loopne
push
add
push
push
jno
cmpsb
jg
test
insl
popf
fiaddl
xor
mov
push
mov
daa
ret
push
sub
jb
leave
push
nop
adc
pop
add
cmp
call
xor
mov
std
add
xor
in
sti
cld
cld
cmp
int3
cs
pop
sbb
out
pop
mov
cli
lret
pop
movsl
dec
mov
mov
xchg
andl
fs
push
sbb
or
aam
or
jns
cs
jecxz,pt
aaa
xchg
xor
icebp
sahf
jno
xchg
jne
lock
jge
and
jle
fdivl
adc
bnd
cs
cmp
divb
xchg
mov
adcl
jne
aas
je
push
mov
daa
sub
test
adc
pinsrw
inc
mov
mov
or
movsl
jnp
jp
xchg
jg
lock
push
int3
cmp
pop
inc
dec
ja
xor
orb
in
jecxz
xor
stos
lods
xchg
dec
out
and
mov
push
stos
or
fisubs
add
mov
cmp
or
nop
ja
inc
cmpsb
in
push
data16
subl
fiaddl
and
xchg
sarb
push
imul
fwait
sti
xchg
out
mov
mov
out
or
mov
addr16
aad
adc
pop
ss
add
push
popf
jo
das
nop
mov
pop
enter
leave
mov
adc
mov
out
inc
add
push
jmp
imul
pop
push
test
bound
rclb
or
lret
sbb
leave
mov
mov
push
add
cmpsb
xchg
mov
fdivrs
xchg
cmpsl
loop
daa
jbe
fsts
cwtl
push
shrl
ljmp
xor
or
outsb
push
pop
rcll
aad
dec
or
sub
int3
adc
mov
popa
std
jp
subl
gs
scas
fsubs
or
shll
pop
xchg
mov
jp
sub
in
mov
push
mov
pop
out
and
mov
adc
bound
jle
mov
or
xor
int
out
or
inc
xchg
sbb
shrb
xchg
aas
out
jnp
jmp
test
adc
outsb
leave
and
adc
fidivrs
movsl
adc
mov
les
push
shl
xchg
mov
xor
insl
aaa
cltd
fscale
pusha
mov
and
repnz
sbb
xchg
dec
sbb
bound
push
pop
adc
out
in
mov
cmp
inc
cmpl
pushf
pop
dec
cwtl
adc
loopne
xchg
pop
out
push
lret
pop
inc
lret
ss
out
push
push
stos
roll
jnp
mov
xchg
lret
pop
or
lds
push
pop
lock
mov
test
inc
stos
mov
add
dec
jnp
arpl
add
daa
push
addr16
jle
dec
dec
rorb
inc
or
outsb
or
mov
xchg
dec
and
inc
xchg
xor
fcmovnu
inc
mov
insb
aad
aad
loopne
pop
pop
fidivrl
into
cmp
pop
fstp
ljmp
mov
lods
insb
cld
repnz
lock
mov
mov
pop
stc
or
popf
jmp
or
ret
push
jge
cmpb
gs
push
dec
cltd
pop
es
ficoms
in
mov
xor
pop
imul
or
pusha
repz
jecxz
je
xor
lcall
cltd
adc
or
mov
sub
das
sub
in
inc
inc
sbb
cmp
or
and
add
xor
inc
aas
pminub
movsl
fadds
and
popa
or
mov
xor
icebp
pop
mov
inc
pop
adc
mov
lret
dec
fistpl
xchg
mov
das
mov
sub
inc
jbe
sahf
xchg
pusha
jb
mov
xlat
pop
inc
cltd
mov
test
divl
fisubs
popf
inc
test
sbb
cmp
ja
int
out
mov
inc
push
push
dec
pusha
lcall
mov
cmpsb
roll
int
enter
sub
fisubrl
leave
mov
sbb
xchg
jb
popf
pop
sarl
adc
cmc
push
jae
add
push
inc
push
ficoms
je
repnz
mov
fcoml
xor
push
nop
cmp
push
pusha
loope
fcompl
jmp
inc
dec
into
outsb
fbstp
hlt
jg
and
js
popf
adc
out
out
xor
movsl
adcb
aaa
pop
adc
pop
daa
dec
and
divb
cmpsb
mov
in
addr16
dec
iret
pop
mov
push
rolb
or
add
adc
filds
shrl
inc
jmp
outsl
cmc
adc
stc
aad
mov
or
push
ficoms
flds
cmp
dec
inc
and
push
push
add
mov
and
push
icebp
mov
mov
les
sub
and
out
xor
adc
push
inc
pop
sub
scas
into
popa
sbb
outsl
cmp
es
inc
enter
pop
and
push
adc
addr16
pop
sahf
dec
jp
sahf
idiv
pushf
and
or
ror
shll
mov
test
imul
jmp
test
movsb
mov
test
out
std
divb
lea
xchg
adc
xor
sbbl
mov
and
adc
pop
adc
mov
mov
pop
mov
xchg
adc
pusha
arpl
adc
hlt
fs
jo
popa
mov
imul
adc
push
inc
xor
cwtl
and
in
lret
nop
in
je
cwtl
orl
repnz
orb
and
fisubs
iret
insl
jo
aam
shll
enter
loope
dec
xchg
fidivrs
inc
push
adc
outsl
add
icebp
lds
cmp
jb
adc
nop
jno
ja
xor
xchg
shrl
bound
in
mov
mov
or
lret
das
rcl
and
sub
stos
mov
fildl
pusha
test
mov
add
inc
push
add
mov
dec
gs
pop
in
or
sub
jl
adc
mov
lds
pop
dec
adc
add
mov
fnstcw
mov
pop
xlat
fwait
cli
movb
sar
popf
jge
sbb
pop
in
ljmp
mov
sub
push
ss
dec
mov
hlt
cmp
outsl
nop
fiaddl
sub
mov
test
jmp
add
jl
adc
and
sbb
push
inc
jle
ljmp
mov
cwtl
jns
or
push
hlt
adc
xchg
and
cmc
repz
adc
orb
add
addr16
adc
jae
lock
enter
cmp
fcoms
lcall
or
nop
mov
inc
cmp
pop
popa
add
push
in
dec
lret
push
movsb
mov
push
fdivs
aaa
or
dec
das
xchg
fdivrs
cli
mov
pop
adc
fistpl
or
add
jbe
cmp
jl
jae
movsb
test
rcrl
inc
jp
fidivrs
cld
mov
dec
mov
mov
loopne
xor
and
btr
dec
and
push
or
fiadds
addr16
mov
mov
fisubs
lds
add
stos
jno
in
mov
mov
in
adc
mov
daa
sbb
add
paddusb
std
scas
lock
dec
mov
lcall
inc
sub
push
cmp
xchg
sub
jl
or
daa
push
std
addr16
loope
pop
xchg
insl
and
rcrb
cli
jg
clc
push
jmp
daa
aas
xor
inc
test
jle
mov
inc
push
scas
inc
dec
movsb
xchg
push
jb
xor
sub
cwtl
jl
lahf
push
movd
out
mov
enter
adc
test
add
push
push
adc
mov
fiadds
mov
adc
mov
repz
scas
and
sahf
or
dec
in
adc
sub
sub
cltd
pop
push
int
inc
pop
stos
add
mov
fsubs
or
dec
and
mov
jge
push
cmp
mov
repz
cli
enter
xchg
jge
dec
inc
jg
xchg
mov
mov
outsb
xchg
xchg
shl
idivb
jg
repz
fadd
add
in
xchg
loope
roll
inc
jo
pop
flds
mov
xor
mov
pop
sub
pop
push
iret
xchg
repnz
cwtl
pop
mov
cmp
gs
mov
and
add
outsl
xchg
outsl
xchg
stos
cmpsl
sbb
lea
push
pop
mov
pushf
shrb
pop
or
es
es
imul
cmp
inc
dec
fisttpl
je
xor
testb
fmuls
xchg
test
add
rol
sub
sbb
mov
mov
mov
mov
push
xchg
ds
dec
insb
or
push
pextrw
sbbb
lea
ds
addr16
fbstp
adc
push
xchg
movsb
mov
pop
shll
sub
sub
fisttpll
jo
sti
in
adc
es
mov
out
dec
jae
lret
ljmp
pop
xor
orl
cmc
jl
jno
ret
mov
adc
push
sbb
scas
or
mov
or
and
mov
xchg
add
cmp
std
mov
ss
cmpb
out
mov
adc
and
cs
rcr
cmp
aam
fstpl
faddp
in
xchg
idivb
iret
jno
gs
ftst
xchg
jo
mov
insl
stos
xchg
and
in
pop
ror
adcb
mov
adc
lods
lcall
or
jo
fwait
movsl
inc
cli
andl
pushf
cmp
cmp
or
data16
lods
jmp
repnz
shrl
sar
mov
loopne
xchg
or
leave
movsl
mov
je
add
or
aaa
into
stos
xchg
aaa
dec
push
lock
jmp
pop
pop
cli
lods
xchg
popf
jp
orb
pusha
popl
push
lds
pop
sub
ja
hlt
jb
sahf
adc
pop
shl
fdivrp
cli
push
pusha
cmpsl
dec
jmp
jnp
test
aaa
mov
or
scas
je
pushl
jge
idiv
add
fnstsw
xor
aam
xor
sbb
sbb
xchg
jbe
repnz
sub
mov
or
scas
sbb
loope
or
or
pop
ret
add
xchg
add
outsb
mov
push
fldcw
aas
push
insl
jbe
push
lods
pop
mov
sub
cmpsb
pop
out
insl
cmpsb
sbb
in
lods
adc
inc
jno
hlt
pop
movsb
jmp
xor
fimull
xor
pminub
push
decb
pushl
hlt
rclb
xchg
mov
lods
lret
add
shlb
leave
mov
leave
shll
out
loope
inc
mov
scas
dec
sbb
iret
add
fldcw
jbe
repz
out
sti
jmp
popf
enter
xlat
push
dec
inc
fcmovnu
push
mov
test
in
mov
inc
shll
in
sub
dec
add
je
xchg
lcall
push
or
and
or
ds
adc
inc
xlat
pop
xchg
cld
data16
imul
jo
fmuls
cmp
mov
outsl
jnp
shlb
push
divb
lods
sub
or
icebp
orl
inc
mov
adc
mov
mov
outsb
pop
xor
hlt
mov
mov
mov
daa
stos
mov
test
pop
stos
push
pop
add
sub
rcrl
xchg
test
sbb
out
lock
fistpl
pop
aam
inc
insb
xor
rcll
fs
icebp
and
sub
ja
fcomi
stos
mov
and
or
jo
lret
int3
sbb
orb
rorl
inc
test
test
outsb
in
mov
dec
cmp
rsm
dec
movb
add
and
roll
popf
in
in
movsb
xchg
mov
sub
leave
adc
lcall
fcoms
jne
cmp
mov
loop
aas
dec
outsl
push
outsl
push
scas
fmull
and
sub
xor
cmpsl
jle
mov
push
ret
push
aad
cmp
dec
out
andl
sbb
push
push
rol
add
adc
xor
xchg
cmp
daa
rcr
cmp
adc
and
adc
jns
add
fldcw
fisubrs
orb
xchg
stos
bound
pop
inc
jg
cmp
shlw
lock
or
lret
jle
fidivrl
add
mul
mov
pop
scas
es
outsb
inc
cmp
or
movntq
out
sbb
mov
cmp
or
dec
hlt
sub
rclb
inc
dec
outsl
xchg
je
stos
scas
and
cmp
push
fisubrl
sbb
dec
addl
jnp
sub
aas
stos
movsl
adc
lds
pop
adcl
bound
test
cltd
mov
push
pop
inc
xchg
fistpl
pop
push
enter
xor
add
lcall
push
movsb
stos
rorb
pop
mov
xlat
jp,pt
dec
inc
cmp
push
cmc
mov
aad
dec
and
pop
mov
cmp
xchg
movsb
pop
ret
pusha
jecxz
and
lcall
or
inc
and
in
clc
test
or
push
inc
inc
cmp
mov
sbb
ja
pop
mov
out
pusha
andl
mov
fnstsw
popl
movsl
insb
mov
aad
shl
pop
fsubr
aad
xor
and
inc
rcll
das
sbb
inc
mov
pushf
push
sub
andb
mov
xchg
and
sbb
loopne
nop
mov
push
pop
mov
xlat
data16
aad
mov
shll
mov
fcoms
movsl
jbe
dec
movsl
jno
test
and
sub
outsb
and
mov
jecxz
push
and
cli
sbb
pop
lcall
dec
cltd
data16
ret
ud2
cmp
jbe
jle
sub
jae
jecxz
push
pop
adc
mov
lret
out
fidivrs
push
cmpsb
je
rcrb
int
jbe
xchg
fbstp
sbb
xchg
and
aas
movsb
int
fcoms
push
in
mov
push
pop
pop
lock
lods
rolb
mov
loopne
push
test
sub
cmp
imul
test
sbb
adc
add
sub
jo
jne
sbb
or
push
in
fcoms
cmp
lahf
inc
imul
sbb
xlat
jno
lcall
xchg
aad
mov
and
int
pop
dec
stos
sub
fwait
cmp
jl
mov
or
mov
sub
insl
or
lods
orb
adc
mull
sti
mov
xchg
pushf
pop
iret
flds
das
lret
mov
pop
icebp
outsl
ss
stos
lods
sbbb
aas
jno
jbe
or
jne
jg
mov
mov
xchg
inc
jl
sarl
rol
dec
jle
dec
daa
inc
adc
cmpsb
es
shl
or
push
and
int3
push
ljmp
out
xor
arpl
jmp
mov
fadds
mov
hlt
aam
cmp
iret
push
xchg
in
add
shll
jp
or
push
leave
fbstp
sarb
jle
repz
cli
mov
lds
jb
gs
add
out
into
inc
xchg
xlat
pop
xchg
les
push
and
add
inc
adc
inc
adc
xchg
pusha
dec
cs
push
cmc
push
jno
xor
add
dec
jno
in
loope
cld
mov
xor
test
loop
xor
pop
outsb
jns
pop
lret
xor
inc
inc
cmpsl
lds
push
pop
mov
mov
fnstenv
pop
fldl
push
out
dec
adc
inc
aaa
xchg
xchg
jno
cwtl
imul
lock
jecxz
cmp
inc
mov
fucomp
cmc
cld
and
lds
ret
fidivrl
int
clc
in
pop
xchg
sti
inc
ret
out
imul
outsl
lahf
jmp
loop
push
cmp
add
daa
cs
sub
mov
mov
ret
fstpl
je
loope
clc
ja
push
out
jbe
dec
gs
mov
jg
dec
xchg
mov
adc
in
adc
dec
mov
outsl
push
push
out
lea
inc
cmp
in
dec
fwait
dec
sti
or
ljmp
in
les
xchg
adc
mov
aas
shl
push
adc
stos
loope
jne
std
jno
mov
xchg
jno
pop
in
cld
jbe
jnp
cmp
mov
xor
pusha
push
mov
mov
or
sbbb
mov
mov
inc
or
loope
icebp
mov
or
pop
sub
out
stc
in
ja
inc
push
mov
jp
or
jbe
loope
dec
popa
push
xchg
ds
xchg
fcomps
jmp
add
mov
jmp
add
stos
pop
sub
dec
inc
subb
lods
aam
mov
jp
rorl
movb
mov
je
mov
xor
mov
xor
lea
mov
xor
div
mov
xor
add
mov
xor
add
sub
cmp
jne
mov
add
mov
mov
mov
xor
add
mov
jmp
mov
inc
mov
mov
xor
add
cmp
jae
mov
sub
jmp
out
in
hlt
push
data16
arpl
leave
dec
ret
jae
jp
mov
jnp
xor
cmp
out
mov
out
dec
pop
cmc
pop
mov
or
mov
mov
xor
inc
add
mov
adc
or
div
or
mov
cmc
dec
pop
lcall
jge
xor
popa
pop
pop
rol
lods
fisubrs
jge
push
rolb
sarl
test
iret
outsl
faddl
mov
inc
xlat
lret
lea
mov
rorb
cmp
lret
push
pop
shrl
adc
jb
sbb
mov
call
sub
addr16
ficomps
or
jge
fdivl
cmpsl
inc
icebp
mov
fcomip
movsb
fdivrl
mov
xor
cmp
imul
xchg
lcall
popf
mov
aaa
jmp
insl
mov
pop
xchg
sbb
mov
lahf
sub
mov
test
nop
mov
daa
fnstsw
jle
in
pop
xor
in
jmp
icebp
int
xchg
mov
out
xchg
lahf
pop
jge
repz
fimuls
shlb
fdivrp
in
call
dec
dec
mov
fs
aaa
fildl
jne
inc
lock
sbb
sbb
or
pop
fs
int3
lea
sbb
frstpm(287
push
mov
es
push
aas
out
cmpsb
jns
pop
lods
ljmp
fstl
sbb
mov
push
jno
push
cmp
pop
ret
push
xor
sahf
and
pop
int3
fmull
dec
sub
inc
push
mov
mov
daa
insb
push
xchg
pop
cli
xor
pop
sub
push
cmc
jb
cli
dec
fcompl
stos
enter
cmp
inc
in
inc
leave
mov
add
shll
mov
xchg
mov
xchg
mov
sahf
xchg
dec
lock
push
and
jmp
xchg
jo
dec
imul
enter
xchg
and
jbe
push
or
cmp
fadds
mov
push
push
jg
lret
dec
rcl
pop
ja
fistps
lock
repnz
mov
cmc
add
les
int
xor
rclb
adc
mov
lcall
pusha
in
fs
sub
lods
dec
jns
fldt
shl
cmpsb
inc
pusha
and
add
imul
jae
xchg
clc
cmc
jecxz
pop
sbb
mov
pop
xor
fwait
mov
sub
movsb
loope
outsl
out
adc
jg
cwtl
lds
add
jbe
jmp
sbbb
fnstsw
xor
sub
data16
push
mov
push
sub
popf
imul
jecxz
push
pop
push
sahf
mov
adc
int
sbb
fdivl
jge
ljmp
sti
push
xchg
adc
jnp
cltd
dec
adc
sub
sbb
adc
fstpt
daa
ss
inc
mov
outsb
stos
ljmp
rcll
mov
bound
cli
pop
into
cwtl
in
fwait
outsb
cmpsb
rclb
adc
jno
pop
inc
rclb
mov
pop
xchg
cmp
pop
das
xchg
in
xchg
jns
cmp
lods
xchg
inc
dec
lods
pop
add
cmpsb
std
ljmp
loope
jg
add
mov
xor
es
sarl
arpl
jnp
and
and
data16
add
pop
movb
mov
xor
mov
js
lahf
adc
out
sarl
xor
push
add
mov
mov
pushf
stos
pop
js
sub
push
out
aas
dec
cld
fcomps
and
test
push
pop
mov
stc
inc
dec
das
and
add
cmp
jns
repz
aad
sarl
adc
push
sub
xor
xchg
jbe
xor
dec
mov
push
push
pop
in
push
lock
add
dec
out
sarl
mov
pop
jge
jle
inc
inc
gs
jbe
mov
mov
rorb
cld
lock
xor
mov
cmp
sbb
sbb
add
loope
xor
clc
cmp
hlt
idiv
inc
pop
rcll
test
jle
inc
fdivrs
cmpsb
cli
xchg
and
sbb
mov
jo
fisttpl
dec
lret
sti
out
lods
hlt
fidivl
add
inc
lods
frstpm(287
out
outsl
mov
ret
test
in
and
push
lea
lcall
cmpsb
fwait
xchg
out
addl
pop
push
fildll
jb
fsubr
pop
push
aas
lcall
pop
fs
mov
repz
mov
or
pop
push
rcll
stc
dec
and
test
filds
movsb
movsb
pop
mov
push
int3
sub
xor
jge
ds
leave
xor
sarl
mov
pop
testl
dec
aad
or
gs
sbb
jae
jne
push
gs
cmp
jnp
mov
mov
insl
sahf
inc
es
sub
jnp
and
icebp
in
lretw
cmpsb
iret
js
imul
xchg
test
dec
addb
sub
mov
and
sbb
jne
cli
xchg
in
sti
out
jno
add
dec
jb
sub
scas
xor
mov
out
inc
mov
sbb
mov
bound
in
lret
sub
sub
popa
lea
enter
add
jecxz
dec
les
arpl
add
lods
sub
sbb
inc
mov
and
or
add
inc
sahf
push
mov
mov
loopne
push
pop
push
lcall
push
bound
nop
jo,pn
cmpsb
adc
cmp
adc
insl
out
and
int
sub
mov
arpl
jge
push
adc
cltd
jl
push
ret
lock
sub
xor
adc
mov
dec
icebp
fstpl
lock
daa
or
icebp
sbb
shll
jg
sarb
or
addr16
cmpsb
inc
popa
mov
call
outsb
inc
pop
or
mov
add
pop
hlt
jae
mov
push
aam
jb
sub
push
sub
clc
outsb
adc
insb
push
pop
sbb
push
jecxz
xchg
cmp
jb
pop
mov
xor
ljmp
sbbb
imul
add
dec
add
xchg
cld
cmp
ror
xor
xlat
sbb
add
and
push
sub
movsb
jnp
gs
pop
test
test
mov
pop
push
dec
sub
pop
popa
cwtl
and
inc
cs
pop
push
out
push
fs
xchg
subb
xor
pop
stc
jp
cli
fistps
ljmp
jmp
and
inc
popa
inc
xchg
outsl
cs
jecxz
jne
rcrb
lock
rcr
cmpsl
lcall
cmpsl
pop
add
push
dec
cmpsb
mov
fwait
pop
aad
stc
adc
pop
jno
cmp
out
loopne
imul
or
xlat
jbe
pop
jo
adc
out
in
fcompl
jo
and
xor
xor
addl
push
cmp
sti
out
icebp
daa
out
or
pushf
rcll
cmp
pop
ret
ds
mov
div
mov
xor
fistpl
dec
incb
rcrb
inc
call
sub
dec
in
push
mov
xor
popf
mov
adc
ljmp
daa
jmp
or
pop
cmp
adc
inc
push
std
or
adc
adc
cli
push
pushf
out
mov
clc
sub
xlat
inc
xor
inc
jnp
rcll
lds
and
movsb
sub
jne
scas
clc
or
pop
outsb
call
ret
jle
and
mov
dec
popf
adc
xlat
orl
cmpl
xor
xchg
int
and
sub
xchg
andb
or
mov
sub
imulb
push
mov
ja
roll
arpl
sbb
pop
push
xor
sub
mov
push
cwtl
cmp
clc
or
jl
or
sbb
and
lds
lcall
rcrl
adc
notb
int
jns
call
sbb
and
gs
les
lret
adc
push
popf
sub
sub
mov
nop
jg
sar
mov
lret
cmpsb
push
jp
xor
test
in
inc
and
enter
and
sahf
sti
cmp
test
mov
mov
je
sbb
mov
loopne
pusha
inc
xlat
xor
outsb
xchg
loopne
or
jnp
call
jne
cmp
push
mov
fstl
dec
nop
aad
mov
sub
std
jbe
loopne
mov
in
movsl
adc
dec
or
pop
aaa
sub
mov
repnz
sbb
fwait
pop
jo
std
xor
fnstenv
xlat
add
rol
jl
xchg
rcl
pop
add
data16
mov
xchg
sub
fprem1
sarb
cmc
lret
cmp
cmpsb
pop
mov
cld
xchg
adc
or
cmp
shlb
rcll
fidivrl
jmp
int
loopne
add
mov
jb
pop
cmp
and
xchg
enter
out
shll
cmp
pop
push
mov
sahf
xor
mov
es
lret
mov
and
mov
or
jl
cmpsb
and
sub
push
jb
out
add
push
or
sub
xchg
mov
jo
fwait
xor
nop
fadd
arpl
xchg
xor
cmpsl
dec
dec
insb
nop
sbb
jne
mov
repz
add
inc
iret
pop
mov
test
push
idivl
in
sub
es
jbe
sbb
inc
in
sar
iret
cltd
push
jb
inc
pushf
aam
jge
jbe
movsl
adc
sbb
push
mov
push
sti
dec
xchg
addb
pushf
inc
pusha
mov
add
notl
popa
movsb
aad
mov
test
jbe
mov
and
mov
ret
gs
cltd
int
sbb
dec
xor
jne
cmp
lahf
loop
hlt
nop
pop
pop
sbb
cmpsl
js
pop
cld
push
call
aaa
movsb
loopne
insb
push
cmpsb
gs
das
sti
cltd
cmp
into
pop
push
stos
cmp
push
lock
jo
out
dec
mov
int
mov
cmpsl
loope
sbb
sub
pushf
mov
or
test
repnz
std
in
push
jns
hlt
iret
insl
lahf
push
dec
stc
add
and
lods
cmp
je
js
sbb
jle
or
sub
test
mov
cmp
or
out
inc
push
cmp
cmpsl
jmp
test
mov
vfmaddsub132ps
cmp
mov
insb
lahf
push
xchg
pop
fisttpll
inc
or
xchg
push
flds
insl
out
push
lds
cmp
inc
xchg
xor
decb
lock
cmp
notb
frstor
jae
js
sub
clc
aaa
inc
mov
in
cmpsb
test
add
icebp
out
add
jns
adc
jmp
pusha
and
push
test
mull
fs
int
xchg
cmpb
cli
clc
jle
lret
test
and
ja
js
fistps
pop
inc
fstps
pop
adc
popl
test
mov
mov
pop
cmp
add
out
mov
cmp
addr16
jns
sti
andb
lret
add
pop
data16
lcall
mov
std
sub
mov
scas
and
xlat
jle
insb
das
xchg
in
sub
cltd
jb
inc
dec
loop
mov
inc
addr16
jl
daa
add
sub
imul
mov
xchg
jb
jns
cli
mov
xor
in
dec
mov
pusha
and
loope
mov
sti
mov
popf
xchg
or
mov
xchg
fdivs
in
jp
xor
lret
in
push
push
out
fidivl
loop
stos
cmp
test
or
xchg
xchg
cmp
ja
lds
movsl
ficomps
shll
sahf
rorl
cld
outsl
adc
inc
out
jne
add
inc
lcall
clc
mov
loopne
inc
mov
std
and
ja
xlat
rclb
mov
icebp
dec
sub
sti
jae
addr16
in
pop
jnp
daa
lods
fucomip
push
mov
imul
add
pop
cmp
shll
dec
inc
int
outsb
pop
out
inc
das
mov
sti
or
push
movsb
add
in
sbb
jge
jo
stc
add
movsl
ja
cmp
shll
adc
pop
push
gs
push
cmp
jo
mov
das
mov
mov
int
popa
loope
imul
test
outsb
addb
lret
and
pushf
push
repnz
sub
push
xor
outsb
js
iret
pop
sbb
mov
mov
adc
popa
lea
outsl
in
into
repz
jge
mov
mov
inc
sub
daa
cwtl
or
fxch
adc
cmp
insb
int3
mov
mov
xchg
mov
outsb
or
sbb
xor
neg
fcoml
mov
movswl
pop
es
or
and
xchg
outsb
pop
fcomps
das
lods
lods
frstor
pusha
cmp
add
mov
jge
pop
pop
xchg
divl
pusha
ja
pop
jecxz
in
mov
push
push
pop
pop
dec
cwtl
xchg
loopne
or
cmp
add
push
add
inc
dec
pop
in
insl
and
and
fcompl
repnz
push
jne
cmp
inc
ja
push
adc
jne
push
push
mov
in
push
xchg
jns
xchg
adc
add
aam
sbb
sub
clc
call
icebp
cmc
jl
sti
jnp
stc
das
cmp
sbb
mov
or
sub
dec
movsb
lcall
shll
imul
adc
cmp
test
icebp
dec
lret
and
out
jge
cmp
outsb
mov
cmp
push
outsl
hlt
or
jns
into
lods
loop
in
push
test
cmp
xor
pop
pushf
in
sahf
mov
push
push
addr16
xor
insb
and
mov
or
mov
nop
dec
icebp
or
mov
bnd
outsl
sbb
jns
dec
sub
fwait
xor
cmp
inc
out
cmp
jns
push
jne
cmp
xor
add
lds
test
lods
movsl
nop
inc
stos
sbb
inc
jo
pop
sbb
repz
scas
repnz
mov
movsb
test
sub
fcmovbe
mov
in
dec
aaa
mov
popf
inc
popf
ret
push
das
enter
cmp
imul
leave
inc
push
insb
jl
cmp
iret
mov
lret
mov
pop
aam
sub
notb
and
es
outsb
push
and
inc
daa
push
aas
pop
xorb
int3
cmc
movsl
mov
xor
or
cmp
shll
jl
outsb
add
xor
insl
jo
sub
in
jne
sahf
sbb
inc
and
outsb
js
daa
dec
test
in
stos
and
jl
loope
mov
lock
sub
sbb
dec
std
sub
insl
dec
lods
lods
sub
xor
rorb
icebp
mov
adc
fidivs
push
negb
mov
adc
clc
rcrb
ss
out
aam
or
mov
push
push
sub
scas
into
jle
repz
push
out
add
adc
jb
mov
or
sub
repnz
cltd
mov
jmp
fiaddl
cld
cltd
push
jp
pop
inc
mov
xor
cli
push
cmp
dec
test
xor
jmp
jns
test
popf
push
push
stc
pop
cmp
adc
push
std
mov
mov
faddl
inc
int3
mov
jb
mov
in
jp
clc
das
ja
jge
sub
data16
or
loop
fiaddl
lahf
ds
sub
mov
aad
pop
push
adc
pop
and
xorb
dec
leave
leave
push
aam
cli
add
inc
mov
inc
int3
cli
pop
ret
popa
notl
les
lds
sub
les
mov
shl
cmp
rcrl
sub
push
notb
sbb
pop
fsub
mov
mov
xchg
jbe
outsl
int
dec
ret
ljmp
sbb
push
jns
scas
add
gs
push
in
lods
ja
ret
aam
aad
pop
test
loop
imul
clc
xchg
lahf
je
xchg
bound
sahf
pop
or
shr
mov
cmp
inc
jo
std
pop
push
pop
cwtl
leave
pop
sub
in
and
mov
jecxz
imul
popf
xchg
ret
push
lods
ljmp
sub
loopne
pushl
mov
scas
or
insl
clc
jg
sbb
xor
fcoml
sub
sar
pop
pop
xor
aas
mov
aam
xchg
fcomps
mov
adc
aam
ficoml
mov
jl
test
sub
dec
outsb
call
addb
sub
mov
xor
jae
ret
bound
orl
shlb
outsb
mov
xor
mov
sti
jo
xor
adc
xchg
in
xlat
push
push
push
aas
pop
addr16
lahf
mov
les
mov
mov
cmp
xchg
push
in
in
lcall
inc
lcallw
add
lcall
out
adc
cld
xor
sbb
fs
sarl
pop
daa
imul
mov
adc
shlb
inc
into
or
push
rcl
xchg
movsb
jecxz
xor
fimuls
or
sbb
sahf
pop
shrl
push
psubq
add
mov
lahf
jne
xchg
rolb
xlat
fnstenv
add
push
mov
cmc
and
jb
sbb
loopne
cs
mov
mov
punpckhdq
jg
or
mov
adc
inc
adc
jno
cs
into
mov
stos
fmull
xchg
lcall
shl
jmp
cmp
jl
int3
outsl
mov
jno
mov
xlat
sbb
inc
mov
sbb
lock
out
dec
adc
or
or
call
push
push
mov
ucomiss
mov
xor
test
push
cs
cmp
repnz
hlt
aas
fsub
fbstp
imul
mov
int3
push
jb
jae
jl
stos
jmp
rorb
clc
in
or
fdivrp
fwait
out
sbb
movsl
pop
hlt
and
int
dec
or
cwtl
or
inc
ficoml
mov
repnz
mov
in
jecxz
lahf
test
xlat
mov
mov
jnp
mov
xchg
or
and
xchg
xchg
jmp
mov
hlt
nop
call
inc
mov
notb
mov
popa
push
fwait
sbbb
notb
pop
es
push
pop
das
scas
mov
push
add
popf
and
push
outsl
nop
push
sub
mov
dec
lcall
loope
xchg
or
and
sub
xchg
aas
cltd
loopne
adc
inc
cs
inc
add
clc
pop
fstl
xor
push
lock
jae
jecxz
aaa
jp
std
sub
dec
mov
xchg
out
sub
jge
mov
leave
sbb
jle
aas
jmp
outsl
mov
int3
dec
sub
fsubs
push
jp
lret
inc
scas
loop
cmpsl
test
test
adc
cmp
mov
pushf
dec
iret
dec
nop
jo
inc
popl
leave
sbb
ficoms
dec
lods
pusha
xchg
jbe
cs
jnp
data16
aad
iret
jns
adc
add
mov
mov
push
iret
jmp
adc
outsl
push
jns
cmc
xchg
movsb
pop
gs
sub
xor
mov
add
jb
cwtl
add
setns
push
les
arpl
xorl
aam
lods
popa
cmp
cmp
insl
cmp
xlat
popa
and
loop
adc
jo
xchg
js
mov
mov
fisubrs
cmp
mov
das
lret
cmpsb
pushf
lds
mov
test
mov
das
rolb
sub
sti
jnp
or
mov
add
cmp
dec
loope
stos
cwtl
bound
lods
dec
jl
cld
and
out
or
jmp
dec
aam
repz
daa
push
daa
lea
jo
sub
pop
push
pop
sub
mov
jg
je
mov
mov
leave
dec
pushf
pop
popf
pop
cmpsb
push
les
lds
lcall
fsubrs
mov
shrl
xchg
jnp
push
jp
or
sbb
xchg
jno
lret
jnp
daa
push
dec
lahf
mov
ljmp
or
pop
xorb
push
mov
mov
in
inc
movsl
mov
mov
push
popa
arpl
push
dec
clc
lods
into
mov
stos
cwtl
ja
jo
repz
pushf
cmc
dec
lcall
enter
fistpll
xchg
pop
in
lods
push
sub
outsl
add
loope
aam
mov
add
pop
and
jecxz
pop
pop
mov
ss
sub
fnsave
mov
call
out
mov
mov
add
and
data16
adc
test
pop
or
stos
adc
movsb
adc
pop
pop
xchg
push
neg
int
sbb
and
fisttpll
mov
pop
or
mov
clc
scas
sarb
push
or
push
inc
ja
cli
dec
stos
in
jle
sbb
icebp
and
jmp
ss
aad
imul
or
adc
aaa
inc
dec
movsl
mov
add
push
jbe
mov
inc
insl
aas
insb
inc
leave
fsts
aaa
mov
push
fldt
scas
hlt
aad
in
mov
popf
xchg
repnz
xchg
push
or
pop
fstpt
mov
popf
jnp
data16
stos
popa
sub
ret
out
outsl
not
xor
jo
mov
mov
mov
push
jnp
and
stc
push
shll
ret
in
jge
ljmp
pusha
in
insl
leave
out
push
cmpsb
and
jecxz
jl
mov
neg
dec
sub
xor
mov
pop
jp
push
cwtl
push
insl
movsb
out
sub
push
std
in
pop
xchg
jl
loopne
shlb
mov
mov
hlt
aas
es
adcl
imul
movsl
in
push
fstpl
imul
aas
mov
cmp
pop
ret
and
rcrb
xchg
mov
in
dec
adc
jb
pop
or
sbb
add
sbb
aad
sbb
jae
call
add
push
mov
decb
sarb
fistl
lret
jl
jnp
sub
adc
js
xor
xor
js
test
fistl
sbbb
pop
mov
int
or
xchg
sbb
insl
frstpm(287
xlat
cmp
xchg
jecxz
cmp
loopne
adc
jne
push
iret
push
scas
cmp
sbb
inc
into
jge
cmp
stos
inc
call
orb
mov
pop
cmp
icebp
push
cmpsb
sbb
push
fistpl
mov
cld
jo
xor
arpl
pop
sbb
jmp
repz
adc
and
in
call
dec
inc
xchg
push
xor
popa
repz
xlat
movsl
es
adc
ljmp
adc
adc
into
mov
sbb
loop
jae
pusha
imul
add
fs
lret
mov
mov
pop
test
add
fs
push
jno
shrl
xchg
add
xchg
sub
int3
push
fmull
lcall
in
xchg
ljmp
cmp
rorb
xchg
fsubs
fstps
pop
int3
dec
jl
sbb
pop
push
insl
jns
out
cld
scas
or
in
fnstcw
sarb
pop
cli
push
out
add
test
outsb
push
insb
arpl
add
sub
cmp
lahf
add
ret
xchg
nop
sahf
fidivrl
fdivrl
mov
cld
inc
mov
in
inc
lcall
mov
test
or
lock
xchg
in
roll
adc
imul
add
adc
push
and
test
and
or
arpl
mov
or
lret
adc
sub
ja
push
adcb
pop
inc
inc
jne
mov
les
in
xor
jecxz
sbb
out
and
dec
inc
test
mov
repnz
jg
sbb
xor
or
sub
std
sbb
inc
js
scas
pop
add
addl
xchg
sub
sbb
xchg
push
sbb
mov
addr16
pop
jo
xchg
mov
and
scas
sbb
jbe
mov
inc
loopne
add
int
leave
leave
imul
cwtl
dec
scas
mov
stos
sub
jnp
ljmp
inc
dec
mov
lods
and
xchg
mov
scas
ds
xor
mov
es
int
cmp
or
xchg
inc
sahf
adc
pushf
lods
adc
mov
inc
iret
mov
mov
xchg
mov
lods
xchg
inc
negl
xor
data16
mov
outsb
cmpl
lcall
push
pop
and
cli
leave
jne
pop
in
push
cmpsb
sub
mov
mov
add
sbbb
movsb
js
jno
and
mov
scas
mov
loopne
jbe
adc
add
pop
push
mov
leave
mov
sub
sub
sbb
xorl
xchg
movsb
jmp
jno
std
push
pop
ret
fwait
icebp
loop
cmpsl
out
mov
jecxz
sar
test
pusha
aaa
lahf
mov
lods
jmp
xchg
scas
insb
push
pop
dec
jne
lods
add
add
cmp
cmp
jmp
movsl
push
hlt
mov
test
push
popa
fidivl
xchg
xor
bound
add
sub
jmp
std
mov
repz
dec
or
sti
push
xchg
mov
rorl
jmp
into
sub
or
mov
cld
mov
std
mov
fiadds
test
inc
inc
xchg
out
stos
add
test
cmovle
jns
sub
push
mov
ja
es
mov
mov
mov
cmp
xlat
adcl
insl
cmp
xor
xor
and
add
repz
inc
in
stos
dec
xchg
stos
out
adc
out
push
push
pop
sub
mull
add
push
lea
daa
xchg
mov
in
cs
test
gs
stc
cmp
mov
loopne
and
adc
push
test
jno
mov
cltd
inc
sub
and
ss
xor
insl
mov
dec
jno
icebp
and
xchg
inc
xor
loop
popf
cmpsb
pop
push
mov
pusha
aaa
jns
cmc
fsubrs
loope
addr16
in
das
sbb
dec
jbe
lahf
sbb
inc
sub
jmp
inc
mov
sub
rorb
push
outsb
lock
sbb
xlat
cmp
shrb
mov
jge
sbb
add
sbb
mov
sti
mov
inc
or
adc
nop
or
nop
test
lret
xor
jne
jmp
jp
dec
xchg
out
mov
and
movsb
mov
xor
cwtl
in
lds
gs
loope
sub
movsl
or
lock
scas
jbe
out
sbb
push
test
decb
xchg
or
push
sbb
sbb
sbb
push
pop
stos
aas
cli
pop
push
jmp
pop
lods
int3
sarb
mov
insb
jns
sbb
imull
jge
insl
add
or
sub
xor
mov
cmpsl
insl
inc
sti
mov
clc
pop
iret
pop
orl
into
in
pop
jo
cmp
rol
popa
inc
icebp
arpl
ficoml
mov
mov
cmp
outsl
and
mov
pop
mov
sbb
sbb
pop
mov
mov
test
jmp
je
push
fisttpl
sub
ret
mov
add
stos
stc
jnp
inc
popa
push
je
dec
jne
sti
add
add
arpl
mov
sub
cmp
lahf
cmp
scas
test
and
push
cltd
cmpsb
dec
mov
out
in
popa
int3
add
sub
rorl
add
inc
cmp
call
xor
imul
cmp
popa
cmpsb
add
jmp
mov
cmc
push
stc
jmp
iret
pop
addb
ror
imul
xor
loope
jbe
lcall
jbe
xor
push
fs
mov
aad
outsl
and
inc
jg
xor
xchg
and
add
mov
xlat
jmp
out
in
call
pop
adcl
jmp
mov
mov
arpl
push
out
lods
icebp
pop
jmp
xchg
jmp
mov
js
fisttpl
push
dec
push
jns
jne
mov
sbb
pop
mov
mov
insl
jb
lcall
mov
and
push
jge
sbbl
cmp
mov
jb
aad
imul
ds
xchg
mov
pop
out
cld
rcll
cmp
aad
fistpll
push
xchg
or
xchg
in
lret
xor
daa
ficompl
mov
bndstx
xor
repnz
xor
fdivrp
insb
dec
pushf
shl
ss
cmp
mov
in
ss
scas
pop
xchg
loopne
xchg
add
pop
mov
sbb
adcl
arpl
mov
std
push
stos
xchg
xchg
int3
pusha
jae
mov
or
es
add
or
cmp
fwait
repz
jle
adc
mov
popa
and
pop
in
into
jle
sbbl
mov
jae
cltd
sub
and
sti
sbb
fdiv
lods
or
outsl
in
or
fmull
int
dec
mov
jmp
xchg
aad
rolb
add
push
dec
out
inc
gs
jmp
ret
dec
xchg
mov
idivl
cld
push
repnz
lahf
leave
aaa
add
jbe
mov
xchg
popa
add
adc
jecxz
gs
out
iret
ja,pn
jle
adc
outsl
mov
mov
jnp
cmpsb
pop
add
mov
fadd
outsb
out
inc
out
or
cmp
lea
xlat
into
mov
scas
leave
mov
xchg
mov
ss
or
push
add
dec
lcall
inc
xchg
les
jb
es
push
and
mov
insb
inc
push
outsb
cmp
jl
xor
test
mov
cwtl
ss
mov
push
js
inc
pushf
jbe
mov
loop
push
mov
xor
add
mov
mov
mov
cmpl
jbe
mov
mov
sub
mov
mov
jmp
mov
mov
add
mov
mov
jmp
cmpl
jne
movzbl
xor
add
mov
jmp
mov
xor
add
movzbl
sub
mov
mov
xor
add
mov
ror
mov
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
xor
add
mov
xor
add
sub
sub
xor
mov
mov
xor
add
mov
sub
mov
jmp
mov
xor
add
mov
sub
mov
jmp
mov
mov
xor
xor
add
adc
mov
jmp
mov
mov
xor
xor
add
adc
add
mov
mov
sub
xor
cmp
je
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
add
mov
imul
mov
xor
add
mov
sub
cmp
ja
mov
jmp
adc
pop
jne
data16
mov
stos
fstpt
mov
jnp
movsb
mov
rcrb
dec
xchg
insl
push
sub
aad
xchg
pop
or
movsl
xlat
jbe
nop
fistpl
lods
testl
xchg
adc
jno
iret
scas
jb
nop
repnz
sub
add
ret
jp
sti
test
push
adc
bound
jmp
lods
dec
xor
sbb
flds
push
cs
jge
push
lret
ret
push
rcrl
int
push
fistpl
and
mov
inc
cs
push
pop
push
gs
pop
sbb
mov
sbb
mov
insb
sub
pushf
sbb
arpl
rclb
inc
decl
push
int3
sbb
aad
test
xchg
push
and
test
ja
sarl
xchg
repnz
or
cmpsl
push
or
fsub
pop
mov
movsb
and
or
arpl
mov
in
dec
mov
shlb
dec
mov
jg
push
repz
shll
insl
xchg
aam
imull
push
repz
sti
add
add
adc
sbb
imul
scas
daa
inc
mov
inc
pop
popf
rcrl
sub
jns
imul
movsl
pop
pop
add
adc
push
mov
mov
pushf
adc
jbe
adc
mov
xor
mov
addr16
push
leave
mov
pushf
jmp
xchg
rcr
add
sahf
mov
push
mov
in
xor
cwtl
push
cmp
or
or
stc
cmp
pusha
test
xchg
mov
dec
add
shrl
aam
lcall
mov
test
pop
mov
hlt
inc
sub
test
out
inc
inc
sahf
pushf
dec
popa
push
pop
imul
dec
xchg
cmc
clc
std
out
out
jge
mov
test
push
outsl
or
xor
sub
arpl
xchg
aas
ljmp
xor
ret
loop
add
cld
repz
loope
jmp
int3
fimuls
sub
ljmp
push
push
js
fsubrp
add
push
push
adc
loop
cmp
ds
jl
out
push
fs
sbb
sarl
push
and
test
push
cmc
add
and
push
jnp
cmp
lcall
insl
dec
add
xchg
jb
int3
pop
in
pop
xchg
and
cmp
dec
sahf
or
sahf
pop
inc
and
add
mov
pop
adcl
ja
cmp
imul
mov
cmp
sbb
js
insl
lock
movl
imul
dec
dec
pop
mov
movsb
push
xchg
flds
xlat
arpl
shll
das
add
inc
out
push
pop
repz
cmp
inc
push
xchg
mov
sti
sbb
xchg
dec
pushf
pop
sbb
cmp
xor
aad
jne
out
outsb
xor
mov
jnp
xchg
mov
subb
ret
dec
jb
aas
inc
insl
push
sbb
mov
ss
loope
cmc
outsl
call
adc
xchg
cwtl
or
or
lahf
fistl
jecxz
rcrl
inc
shlb
movsb
add
pop
mov
mov
jbe
frstor
repz
in
inc
add
cmc
push
add
jge
or
cmp
cli
pop
pop
cmpl
cmpsl
lods
inc
in
lds
outsb
imul
shll
push
and
push
ret
xchg
or
or
movsb
jmp
cmp
pop
int
and
in
mov
cli
int3
outsb
pop
mov
cmp
stos
xchg
ds
jp
adc
add
fnsave
neg
cmc
stos
and
sbb
cmpsl
sbb
cmp
xor
ds
stos
insl
mov
inc
js
fistpll
cmp
es
dec
mov
cwtl
cmpsb
mov
mov
das
imul
imul
cmp
xor
adcb
mov
lods
mov
cwtl
or
sub
out
lret
mov
add
dec
ret
push
mov
in
push
aas
bound
jnp
dec
sahf
xchg
cmp
or
out
dec
xchg
test
xor
add
divl
int3
mov
ja
and
adc
inc
imul
out
xor
sar
loope
movsb
inc
jbe
clc
adc
enter
xchg
mov
xchg
lcall
or
mov
rcrl
ja
xchg
pop
hlt
adc
pop
xchg
jae
cltd
mov
dec
mov
scas
jecxz
jnp
or
mov
sysexit
adc
fdivl
mov
inc
fldenv
cmp
lret
jbe
and
test
pop
jno
and
add
loopne
seto
jl
mov
filds
pop
xor
imul
sarb
add
mov
sbb
cmp
into
sbb
push
scas
icebp
mov
fidivrl
daa
xchg
mov
cmpsb
aaa
mov
mov
into
pushl
cmpsb
mul
pop
aam
push
mov
scas
add
or
sbb
out
fsubr
je
ficoms
call
daa
out
out
xchg
outsb
inc
in
in
dec
push
loope
sbb
stos
and
jmp
mov
mov
mov
mov
es
jle
xor
fdivl
push
mov
testb
fistl
jle
xor
stos
pop
pop
ds
lods
dec
mov
or
cmp
jnp,pt
outsb
cmc
das
out
mov
test
movsl
mov
lret
aaa
test
jge
ret
mov
pop
push
js
cmp
std
mov
stos
inc
stos
and
mov
push
scas
out
mov
arpl
push
or
sbb
lods
dec
fstpl
xor
enter
jmp
mov
insb
nop
popa
inc
rorl
ss
add
shlb
mov
mov
jle
scas
ret
in
inc
sub
mov
orl
and
lahf
scas
pop
sub
sahf
stos
jns
inc
mov
cmpsl
in
and
pop
sub
xchg
and
pop
mov
outsb
je
mov
mov
sahf
test
add
scas
sub
sbb
fxch
push
adc
add
jle
mov
repz
daa
lods
imul
pop
adc
into
adc
pop
xchg
mov
pop
cmpsb
lahf
mov
lods
in
mov
and
xlat
sarl
shlb
fstpl
mov
xor
sbb
out
insl
mov
sahf
jl
inc
sub
jecxz
js
dec
dec
aas
mov
stos
insb
jbe
adcl
or
in
test
jecxz
mov
pop
pop
pop
jno
repz
mov
call
add
movsb
pop
sub
mov
cs
jo
add
loopne
cld
lock
popf
into
scas
mov
jae
add
xor
push
add
imul
adc
shlb
inc
loop
pop
jbe
and
cltd
cmp
mov
clc
push
ss
sub
cmp
push
jmp
xlat
stc
cltd
cmp
push
popf
mov
and
andb
mov
scas
je
enter
rcll
cld
lods
ret
xor
push
inc
out
mov
mov
adc
sti
and
das
ret
popf
sub
jbe
push
scas
mov
scas
repnz
loope
popf
fstpt
cld
pop
inc
sbb
push
vshufi32x4
sbb
mov
xchg
fstpt
pop
lock
pop
hlt
lds
xor
sbb
stos
push
pop
xor
mov
and
lods
jg
pop
pop
movsb
das
fildl
dec
mov
mov
fistps
in
jp
pop
sub
lea
sbbl
lret
mov
nop
sub
mov
or
sbb
mov
mov
cwtl
pop
jne
xchg
cmp
dec
movsl
roll
lock
fdiv
xchg
or
xchg
icebp
rolb
es
pop
je
dec
js
das
repnz
les
test
cmp
clc
popa
jmp
ret
in
mov
test
cmpl
in
imul
shll
dec
nop
jecxz
or
and
mov
adc
xlat
faddl
or
daa
mov
lea
into
pop
mov
loopne
dec
leave
hlt
xchg
mov
lock
bound
cli
jns
inc
fnstsw
xchg
adcb
xchg
ja
pop
jb
and
leave
lea
addb
test
orl
jle
mov
xor
leave
testl
pop
cmp
mov
test
and
cltd
jb
lret
inc
test
mulps
inc
fbstp
into
push
add
lahf
push
lds
xchg
lahf
hlt
add
stos
aam
lcall
dec
out
loopne
mov
mulb
mov
xlat
hlt
aam
cmc
mov
add
in
inc
rep
idivb
xor
frstor
lods
dec
shll
popa
inc
call
pop
cmpsb
rolb
mov
in
outsb
or
loope
pusha
adc
add
jge
and
add
mov
cmp
jae
mov
es
xlat
rcr
mov
pop
mov
fmulp
adcl
fucomi
fldt
and
jl
cs
cld
shlb
mov
lds
mov
sub
mov
sbb
xchg
mov
jns
mov
cmp
fdivr
in
mov
sbb
test
jb
pop
pop
or
inc
ds
ret
push
rcrl
fdivs
inc
xchg
mov
mov
mov
ficoms
gs
pop
iret
push
push
push
repz
xor
or
fldl2e
pop
frstor
cli
mov
inc
aas
jge
leave
test
xchg
sub
hlt
dec
push
mov
xor
push
das
fiadds
xor
pop
insl
dec
dec
repz
pop
scas
jmp
daa
jnp
loopne
mov
xor
pop
or
mov
xchg
stc
in
sbb
sbbl
in
ret
mov
subl
iret
fnstsw
arpl
in
mov
dec
push
mov
mov
and
xchg
test
int
outsl
mov
aad
sub
hlt
in
inc
ftst
rcrb
iret
ficompl
daa
lods
jp
sub
cmp
pop
fimuls
cmp
out
ja
pop
popf
fiaddl
je
inc
std
fcmove
xor
mov
xor
leave
add
inc
xchg
imul
js
jl
dec
mov
sub
in
cmp
sbb
mov
int3
cmc
sbb
shll
test
int
sub
stos
mov
xor
adc
push
or
mov
jbe
sub
pop
dec
leave
popf
stos
loope
sub
adc
jp
pushf
ret
mov
pop
and
mov
imul
pushf
or
mov
daa
divl
dec
or
in
fwait
insl
cld
movsb
mov
stc
push
ret
lret
cmp
or
jnp
mov
or
cmpsb
adc
dec
icebp
sbb
mov
dec
cmpsb
or
call
xor
add
xor
faddp
xchg
sbb
mov
out
divl
repnz
pusha
push
and
add
cld
pop
jg
shlb
sub
outsl
scas
or
sbb
ds
inc
mov
popa
mov
cmp
sti
orl
dec
pop
xchg
sub
icebp
mov
push
out
test
repnz
mov
dec
data16
pushf
cmpsl
sarl
mov
fnstenv
push
mov
mov
and
inc
daa
sbb
and
in
loop
enter
and
sbb
outsl
mov
stos
stos
sub
sub
pop
popf
imul
push
pusha
jmp
in
inc
dec
test
aad
int
inc
jbe
mov
fimuls
xchg
out
sbb
subb
xchg
outsl
xchg
pop
mov
fsubp
jp
xor
jecxz
in
loopne
pop
hlt
shrl
lods
mov
rcrl
inc
inc
ficompl
cs
xlat
add
out
repz
or
and
inc
imul
inc
mov
fwait
das
shlb
out
outsb
test
arpl
push
inc
push
in
mov
lret
into
mov
rclb
adc
mov
adc
push
push
les
pop
jbe
mov
loope
ja
inc
jno
subb
pop
in
cmc
pop
sub
push
pop
dec
pop
mov
mov
pop
inc
pop
movsb
fmuls
dec
ss
ret
mov
and
lock
jae
pop
adc
popa
mov
fwait
push
pop
cli
inc
daa
ret
jno
xchg
sub
cmp
lods
push
imul
nop
dec
push
nop
push
call
lcall
sub
gs
mov
jne
jb
stos
dec
sahf
mov
inc
push
fildl
into
cld
iret
test
in
xor
js
xchg
dec
incb
adc
stos
add
mov
nop
or
cmpsl
bound
lds
inc
dec
and
stos
out
jle
icebp
cmp
sub
insl
lds
push
pop
jmp
les
cmp
push
test
lret
hlt
dec
test
xchg
bound
xor
mov
sbbb
fsubrl
and
add
jmp
cwtl
sub
push
jbe
test
pop
call
enter
lret
jecxz
push
xchg
mov
sbb
jbe
leave
call
imul
lea
out
dec
shlb
pushf
adc
mov
jnp
or
fidivrs
pop
jnp
cmp
daa
data16
loop
sub
out
mov
add
add
adc
push
shll
jge
jae
and
out
or
push
mov
mov
stc
ret
dec
fisubrs
pop
and
xlat
data16
aaa
xchg
adc
movswl
scas
adc
divb
stc
sbb
out
push
push
sub
cmpsl
stos
int3
imul
sti
fwait
in
in
lods
xor
pop
pop
stmxcsr
push
ret
data16
pop
loope
arpl
ret
sti
xor
mov
iret
shrl
mov
pop
idivb
pop
mov
hlt
cs
addr16
jns
dec
cwtl
sbb
pop
pop
lods
jmp
or
leave
clc
imul
call
push
and
mov
out
push
icebp
add
aam
cld
jecxz
cmp
mov
into
into
mov
fsubrp
pusha
sbb
mov
cld
push
jo
jae
dec
jne
aaa
xchg
xchg
add
mov
gs
mov
cs
pop
fs
pop
push
addr16
int
aam
adcl
push
popf
lret
fstpl
insl
shlb
mov
js
mov
ss
mov
das
test
lahf
test
sub
outsb
xchg
clc
mov
xchg
in
divl
xchg
adc
mov
aam
push
inc
dec
cmp
scas
mov
js
and
mov
outsb
inc
xchg
push
roll
fwait
and
dec
addr16
iret
jb
test
cmpsb
in
sub
loopne
add
or
add
mov
add
ljmp
pop
and
adc
inc
adc
jle
adc
or
pop
add
xchg
cli
inc
notb
dec
inc
mov
idivl
or
jnp
push
cmp
cli
cmpsl
xlat
sbb
sub
mov
mov
in
nop
cli
clc
mov
jb
pop
fcomps
pop
lods
pop
adc
pusha
xor
inc
inc
daa
pop
subl
or
mov
std
sbb
mov
addr16
or
testl
fstpl
jb
jne
ficoml
mov
sbb
push
bound
lret
lret
adc
cmp
jecxz
mov
xchg
xchg
inc
and
inc
inc
and
test
mov
ja
xor
mov
insl
mov
aaa
fs
ljmp
mov
jae
push
enter
add
loope
cmp
repnz
int
xor
mov
add
mov
out
mov
mov
hlt
xchg
js
in
jp
jbe
notb
in
dec
test
pop
outsb
dec
les
inc
and
push
mov
sub
push
mov
ror
scas
stc
je
sub
sahf
loope
testb
shrl
and
mov
pushf
loope
xor
and
sub
rcrl
shll
mov
jnp
pushf
pop
call
out
test
pop
cmp
js
testb
push
jmp
in
cmpb
and
mov
stc
and
les
sbb
pusha
enter
aaa
movsb
jl
mov
dec
and
out
sbb
lret
fsub
mov
push
jecxz
enter
sbb
out
add
popa
sub
ljmp
lahf
fwait
pop
xchg
push
outsb
jmp
lods
push
gs
hlt
in
push
pop
xchg
iret
in
int
divb
movsb
or
sbb
cmp
ja
leave
aas
dec
ret
setbe
inc
cmp
fdivrl
lods
pop
sub
ss
xchg
pop
dec
mov
pushf
test
xchg
clc
xor
je
xchg
popa
cli
out
ja
xchg
icebp
sub
cwtl
inc
push
std
push
stos
and
inc
jl
sub
mov
push
aam
cmp
test
mov
fdivr
mov
push
dec
out
mov
fidivrl
cmpsb
and
cmp
and
fmuls
cmpsl
dec
mov
fwait
addr16
push
xchg
push
call
inc
xlat
int3
cmp
icebp
add
fisttpll
lahf
popa
rolb
js
pop
pop
sarl
pushf
shlb
sahf
mov
sbb
testb
push
pop
out
lds
addb
xchg
cmp
push
xchg
mov
inc
xchg
and
mov
inc
jno
sub
xchg
cmc
ljmp
lahf
mov
pop
cwtl
lret
push
fldenv
arpl
xchg
or
or
dec
sub
sub
inc
into
jnp
and
in
into
add
jbe
inc
push
popfw
push
ret
cli
xchg
inc
jns
dec
movsb
adc
pusha
scas
test
es
mov
dec
mov
push
push
aas
cli
and
pop
push
jb
inc
xchg
repnz
jp
adc
pop
fildl
push
mov
gs
adc
sub
push
push
in
lock
fistps
shrb
popa
mov
pushf
inc
sub
andl
ss
stc
mov
lock
cmpsb
out
cli
jo
fiaddl
push
subb
movsl
cmpsl
add
inc
outsl
std
test
lock
cltd
leave
jecxz
or
in
add
insl
into
repnz
mov
mov
sbb
adc
stos
or
pop
cld
pop
dec
repz
push
push
hlt
mov
ss
clc
sub
mov
or
or
xchg
imul
outsb
jle
dec
aas
cmc
leave
in
sub
pushf
cmp
jecxz
in
add
adc
scas
jns
or
xor
inc
jns
jl
ficompl
lea
lcall
pusha
subb
das
sub
inc
lret
jae
lea
daa
jbe
cwtl
ret
sub
pop
daa
xchg
pop
movb
outsl
loop
rorl
mov
lods
sub
cmp
xchg
jecxz
dec
cli
xchg
inc
daa
cli
mov
outsb
mov
insl
adc
shl
cmpl
adc
cmp
adcb
in
shrb
dec
loope
aaa
dec
mov
sbb
movsb
sbb
xor
jmp
pop
out
lock
mov
stos
or
dec
cmp
push
lret
call
xchg
std
int
push
repz
jb
cmc
es
mov
arpl
test
jmp
in
lods
mov
insl
mov
jno
jae,pn
push
cmp
popa
add
lds
xchg
inc
ljmp
or
pop
adc
fs
adc
sbb
xchg
mov
out
and
xor
mov
stos
pop
xchg
sub
nop
popf
arpl
xchg
sub
mov
inc
dec
push
outsb
andb
cli
iret
pop
mov
pop
lods
jg
mov
ja
mov
daa
insl
div
into
pop
leave
dec
pop
add
hlt
mov
push
rolb
and
cmp
repnz
fnstcw
cmpsb
movsb
roll
aad
fisttpl
push
lods
das
push
outsb
rorb
xchg
lret
jne
xchg
sub
mov
add
loope
adc
dec
push
sbb
or
movsl
call
in
sbb
xor
outsb
adc
aas
call
jno
inc
jns
sbb
popf
sbb
out
loop
daa
popa
lret
lahf
out
jns
in
imul
out
cmc
scas
je
or
xchg
and
outsb
sub
sub
push
test
shlb
and
imul
pop
into
fs
add
ljmp
orb
imul
sub
pop
pop
jne
adc
shr
jecxz
xor
les
pop
mov
fisubrl
and
or
jne
aas
and
jno
lret
inc
sbb
mov
mov
pop
and
outsl
cmp
inc
shrb
inc
push
mov
out
in
cwtl
call
ret
aaa
add
lahf
fdivl
stos
fidivrl
lock
pop
inc
mov
pushfw
adc
enter
cmpsl
sbb
popf
or
jp
jecxz
jge
pop
sbb
gs
repnz
data16
inc
pop
cmpsb
fstps
fisubs
outsb
fsubl
cmp
jbe
enter
push
pop
ja
mov
daa
scas
xchg
lods
rclb
add
inc
push
adc
jle
in
das
inc
ret
or
bound
adc
sbbl
push
mov
and
dec
and
pop
push
aas
cmp
repnz
dec
imul
xchg
cmp
sub
cmp
fs
dec
testl
xchg
mov
aas
lods
mov
adc
or
lcall
push
and
lods
fiadds
and
jo
dec
fwait
or
movsb
cmp
pop
pop
orb
jo
sbb
nop
mov
jecxz
test
pop
loop
dec
xor
bound
ds
jmp
clc
das
test
adc
jge
pop
adc
mov
push
and
and
mov
jb
mov
add
push
sbb
enter
push
mov
das
jle
mov
sti
iret
cmp
leave
cmpsb
lods
arpl
mov
add
pop
stc
jmp
js
adc
mov
les
aaa
loopne
divb
push
mov
fists
jns
inc
jo
pop
sub
mov
mov
sub
test
cmp
out
cmp
jns
cmp
jo
cmp
fsubl
in
and
fprem
add
lds
mull
lods
fwait
daa
je
rorb
outsb
adc
repz
sub
js
and
adc
add
cmp
data16
pop
and
repnz
push
ja
or
loope
pop
in
sahf
popf
sub
jnp
cmp
jb
jne
imul
xchg
nop
jnp
xorb
add
mov
movsb
mov
int3
push
fs
in
xlat
pop
mov
jl
jmp
xchg
lods
pushl
addl
pushf
mov
add
sti
adc
and
sub
cmpsl
xor
les
xor
dec
bound
dec
pushf
push
mov
pop
rol
or
push
mov
add
mov
in
adc
mov
andl
sbb
rcrb
out
int3
or
sbb
pop
mov
pop
insl
inc
dec
lret
mov
sub
and
ss
cld
loop
divb
outsl
cmc
repz
push
fimull
scas
jmp
and
adc
mov
cld
sbb
xchg
cs
hlt
xchg
daa
mov
jno
es
js
mov
int3
fdivrl
pop
jg
jae
mov
mov
insl
xchg
pop
bsf
cli
cmp
xchg
movsb
mov
movsl
xchg
push
pop
idiv
je
push
sbb
mov
rcll
cltd
rolb
mov
stos
rclb
iret
in
test
sbb
cmpl
cwtl
xor
push
pop
daa
mov
push
inc
fs
push
cltd
sbb
fcomps
aad
lret
sbb
popa
mov
pop
cmp
mov
int3
fisubs
leave
mov
inc
aad
sbb
ret
repz
push
dec
pop
mov
push
arpl
rolb
ficoms
pop
xchg
sahf
mov
push
outsb
cmp
xchg
and
bound
or
cmp
mov
xchg
jns
leave
fnstcw
and
add
cmpsb
aam
popf
pop
pushf
in
pop
inc
inc
ja
push
ljmp
pushf
repnz
push
dec
in
and
or
sarb
sahf
jecxz
les
sub
inc
test
mov
shrl
aas
dec
mov
pop
nop
sar
push
push
mov
xchg
xchg
stos
jo
daa
aam
pop
and
and
sbb
jns
cwtl
mov
das
out
mov
push
mov
push
sbb
and
lret
cmpsl
into
and
mov
adc
mov
in
cltd
sub
stos
cmp
lret
mov
in
in
inc
jge
or
or
cmpsb
ja
mov
cmpsl
xchg
and
std
jne
mov
jecxz
mov
adc
add
xchg
fnsave
repnz
inc
jbe
fisubrl
and
ljmp
jl
ja,pn
call
outsl
pop
sub
mov
pusha
cmp
nop
repnz
mov
cmp
cli
fadd
enter
push
add
repz
jns
adc
inc
or
jo
add
in
mov
and
in
xchg
sub
add
sbb
sarb
jl
movsl
lods
jmp
lret
adc
xor
int
popf
xchg
jo
shrl
fmuls
repz
lcall
daa
movsb
jbe
jge
fsubl
fsts
or
sub
mov
in
jnp
jg
push
cmc
xor
lahf
adc
dec
dec
pop
jecxz
mov
scas
lods
out
push
bound
push
mov
test
mov
push
std
test
sahf
daa
sbb
add
push
add
jns
orl
lods
xlat
inc
pushf
add
inc
jno
xor
icebp
xchg
ret
jmp
adc
fildl
lret
xchg
mov
aam
push
lock
pop
aaa
fcompl
cli
fnsave
popf
and
mov
push
mov
aaa
add
mov
cmc
jbe
lods
pushf
push
inc
mov
xchg
mov
inc
movsl
sbb
sbbb
out
or
sahf
jge
loop
sbb
lcall
jmp
and
cmc
bound
push
inc
cli
pop
enter
sbb
jl
pop
mov
jle
cmp
xor
adc
movsl
leave
sub
and
shlb
or
add
repnz
dec
jl
cmpsl
in
stos
outsl
xchg
inc
lods
lea
xlat
cmc
daa
dec
mov
andl
push
in
and
mov
fsubs
jo
xchg
sbb
and
xlat
cld
mov
call
ds
outsl
jl
arpl
jl
stc
and
mov
addb
jne
js
pop
jo
cmp
sahf
sbb
adc
sbb
addr16
xchg
lret
paddb
xor
cmp
lods
addr16
hlt
xorb
cmp
pop
cmp
das
push
xchg
lret
cli
pop
mov
lds
push
jae
daa
into
push
xor
xchg
lcall
lea
inc
mov
pop
popa
lret
jae
aaa
cli
pop
add
in
mov
cmpsl
hlt
jns
shrl
mov
sbb
xor
lcall
xor
int3
xor
push
iret
jp
lahf
xor
cmp
mov
fnsave
fnsave
and
lret
mov
scas
sbb
ja
jecxz
push
add
or
add
scas
stc
sbb
pop
scas
sub
outsb
mov
scas
aam
mov
imul
or
daa
aaa
out
adc
mov
jge
loopne
ja
xlat
lds
stos
mov
dec
cmp
sbb
mov
ret
fwait
iret
jb
setne
andl
mov
mov
sahf
shrl
add
fdiv
pop
dec
mov
rclb
sbb
push
mov
push
jle
mov
frstor
repnz
popa
cmp
fwait
fwait
push
and
mov
push
inc
sub
jge
push
pop
adc
push
sub
xchg
mov
mov
jmp
lcall
jcxz
mov
xchg
scas
lods
mov
mov
aad
fistpll
enter
shr
fsubs
in
clc
mov
jae
add
fimull
push
dec
popa
mov
movsl
fadd
or
test
inc
adc
fwait
sbb
push
insb
dec
test
mov
dec
xlat
push
sbb
and
into
ja
sub
push
jae
in
ficomps
dec
pop
or
shr
inc
test
xlat
icebp
nop
cmp
cli
fsubl
push
jns
inc
sbb
mulb
repnz
xabort
adc
or
sub
mov
mov
mov
fsave
sti
sub
sar
sbb
lds
scas
dec
fwait
push
and
pushf
dec
rcl
cwtl
fwait
bound
and
pop
xchg
ja
aaa
fnstcw
fcmovnbe
fwait
mov
sub
pop
pop
jmp
push
mov
scas
stos
cmp
fmuls
nop
sub
xchg
js
daa
push
xchg
inc
lret
mov
imul
cs
mov
mov
ret
inc
sar
pop
jecxz
cmpsl
xor
pop
push
or
or
rorb
dec
lods
and
mov
cltd
jle
jmp
mov
or
inc
movsb
loop
xrelease
aaa
xor
cmc
dec
dec
sbb
add
movsl
out
in
pop
fildll
push
stc
sbb
push
ss
and
imul
scas
aam
cmp
lea
mov
data16
or
xchg
sti
or
aam
pop
sub
mov
sbb
fisttpll
push
pop
test
and
cwtl
ljmp
or
icebp
cmpsl
pop
mov
pop
mov
push
and
adcb
out
sub
cwtl
cmpsb
mov
mov
push
and
push
push
xor
mov
push
repz
movsl
out
inc
in
imul
push
pop
inc
mov
adc
xor
adc
call
loop
xchg
ret
movsl
mov
jno
repnz
pop
adc
or
or
dec
in
daa
lret
jb
mov
push
out
sub
ret
lahf
push
add
push
adc
cmp
or
das
pop
add
mov
pusha
dec
add
xchg
dec
xchg
shrb
cmp
sbb
jecxz
ljmp
ljmp
rorl
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
movl
movl
movl
movl
movl
mov
xor
add
mov
lea
mov
lea
mov
mov
cmp
jae
mov
movl
mov
movl
lea
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
jmp
jb
inc
je
xor
jae
push
push
jecxz
jp
mov
jnp
pusha
xchg
push
loop
cmp
xor
movb
xor
jge
cmp
sbb
cmpsl
pop
jns
inc
sbbl
loop
sbb
in
lea
mov
out
arpl
dec
mov
call
xor
xchg
mov
add
pop
test
push
cwtl
cmp
test
and
mov
or
clc
imul
mov
inc
imul
mov
push
push
addr16
daa
sbb
gs
sbb
das
sub
ja
add
sub
xor
xchg
ds
xor
aas
jmp
pop
imulb
mov
jb
stc
push
jecxz
jmp
and
inc
movsl
pop
rcll
mov
cld
dec
mulb
or
jecxz
and
pop
sub
pop
rolb
mov
xchg
inc
xor
fs
inc
mov
mov
mov
icebp
dec
mov
xchg
push
mov
pop
mov
scas
nop
sbb
adc
push
mov
lret
mov
fisttps
or
or
jmp
and
add
outsl
xchg
jmp
sbb
or
mov
aam
pop
inc
addb
or
jecxz
dec
arpl
lock
repz
cmc
xchg
arpl
fs
aas
int
insl
scas
je
sbb
orl
sbb
stos
aad
into
xchg
xor
stc
xorl
dec
stc
sbb
les
loop
sub
icebp
cmp
gs
dec
cli
add
fcoml
pop
mov
cwtl
xor
aam
inc
or
imul
cs
scas
rcll
mov
push
mov
xor
addb
aam
add
fcmovbe
movsl
jmp
and
std
roll
jp
cwtl
add
pusha
enter
repnz
xor
pop
push
insl
mov
cmpsl
or
dec
mov
out
xor
enter
outsl
and
sti
sbb
adc
popa
cmpsb
int3
push
test
scas
in
pusha
notb
ss
xchg
mov
push
inc
mov
fcoml
and
test
or
xchg
mov
dec
les
push
or
and
mov
mov
int
mov
xchg
inc
mov
pop
hlt
lret
rcrb
adc
pop
and
sbb
insb
push
xor
mov
lods
and
insl
call
cmc
jp
std
cmp
nop
cld
cmp
push
mov
xchg
cmp
icebp
xchg
aaa
negl
jecxz
mov
pop
dec
push
or
shll
xor
xchg
inc
and
jp
pop
testb
frstpm(287
jge
xor
call
orb
in
mov
mov
insb
xlat
fadds
shll
mov
inc
stos
dec
adc
aas
push
lock
ficoml
int
push
clc
push
jmp
pop
mov
outsb
pop
add
pop
and
ja
mov
and
pop
adc
mov
rorb
ja
xor
shlb
mov
icebp
aas
lds
pop
js
fistpll
stc
sbb
in
xor
inc
pop
aaa
mov
mov
jp
inc
pop
fiaddl
outsl
jno
fildll
xor
or
dec
mov
mov
in
lahf
outsl
jns
xchg
cmpsb
push
jno
icebp
or
cltd
push
sub
sub
lret
ficoms
out
in
jnp,pt
scas
mov
jnp
aaa
fiadds
jnp
jbe
mov
aam
jecxz
cmp
icebp
sbb
mov
mov
inc
mov
iret
leave
add
push
cmpsl
lea
push
jbe
push
inc
rclb
aaa
leave
push
into
pop
push
or
aam
sbb
aaa
enter
dec
xchg
mov
mov
inc
jmp
mov
repz
scas
into
clc
in
rorl
fisubl
push
jg
inc
lds
mov
cmc
push
out
aas
pop
pop
dec
imull
jb
gs
jae
inc
push
jnp
inc
mov
ljmp
scas
out
ss
imul
in
into
push
push
sbb
cwtl
mov
stos
adc
ret
aad
lret
mov
jne
xchg
cmp
jg
inc
push
sbb
push
out
icebp
sbb
pop
mov
adc
sub
sub
mov
adcl
movsl
clc
cmp
add
daa
xchg
pop
mov
cmpsl
std
sub
enter
lea
pop
outsl
jno
xor
scas
jns
leave
fcoms
mov
test
int3
stc
aaa
inc
fs
push
arpl
mov
cli
jg
cli
mov
fadds
pop
xor
xchg
int3
leave
nop
dec
cmp
mov
test
sbb
lods
add
push
xor
call
cmp
lds
push
out
je
test
out
jle
inc
xchg
js
ficomps
sbb
jns
add
fs
std
cltd
mov
in
jo
in
xor
jmp
and
sub
imul
add
add
xchg
nop
xchg
push
fmuls
xor
push
popf
push
popf
mov
and
loope
repz
jmp
insl
and
adc
dec
push
popa
shr
jmp
leave
pop
add
loope
sub
stos
inc
xchg
jnp
fcmovnb
pushf
clc
dec
sub
pop
sub
lds
call
dec
mov
inc
sbb
or
sbb
pop
sti
aad
popa
ficompl
and
clc
rclb
std
add
add
jmp
in
lods
jne
cli
pop
mov
add
rcr
shrl
xor
jle
xor
push
mov
cmp
xchg
add
insb
movups
clc
in
mov
es
inc
ss
inc
scas
jg
cmp
int
out
jmp
dec
jl
and
sbb
mov
mov
jecxz
add
ds
cmp
xlat
fs
pop
ret
pop
into
stos
nop
xchg
shll
push
pop
mov
stos
lcall
add
in
mov
arpl
push
popa
add
sbb
imul
push
sub
ja
jb
aad
js
mov
mov
or
cs
les
jo
sbb
jns
hlt
imulb
pop
fwait
stos
movsl
mov
xor
clc
jbe
adc
mov
sbb
fsubr
or
arpl
mov
and
or
adc
lret
lea
add
mov
shll
xchg
inc
aad
xchg
mov
adc
in
xchg
cld
movsl
cli
add
js
push
mov
inc
rorb
cmp
imul
and
jbe
jbe
gs
xchg
fidivrs
out
push
aaa
mov
popf
adc
hlt
ret
jg
fldl
add
cwtl
rclb
and
icebp
push
or
nop
mov
rorb
mov
or
cmpb
cmpsl
cmp
pusha
dec
cmp
jno
mov
std
lcall
jo
cmp
push
iret
fwait
sbb
je
mov
cmp
ljmp
or
cmp
in
xor
jb
dec
jge
addl
push
jg
mov
adc
insl
or
cmp
into
fptan
and
and
jmp
dec
jne
dec
fsub
lods
xchg
add
jns
jne
ja
and
rcll
cmp
scas
stos
jbe
pop
ja
push
xchg
pop
push
sub
jae
xchg
bound
jmp
fldt
and
test
int
pop
sub
aam
or
cmc
ret
out
add
test
adc
mov
fadd
sub
or
push
clc
xor
sub
sbb
push
mov
dec
and
in
enter
mov
inc
push
cmp
push
and
jbe
add
inc
sahf
push
call
xor
pop
jmp
push
push
push
bound
shrb
or
adc
jp
sahf
in
sbb
insl
mov
jo
or
jae
sbb
loop
xor
lret
std
insl
mov
cmpsb
jnp
fwait
mov
js
dec
rcrb
aam
mov
dec
mov
mov
gs
aam
in
jnp
xor
push
pop
pop
rorb
incl
incb
xchg
add
pop
jo
pop
cmp
add
rcll
mov
or
pop
mov
xor
in
call
dec
pop
sbb
mov
xlat
iret
pmaxsw
push
inc
mov
lahf
insl
mov
mov
hlt
push
xchg
or
aas
pop
add
cmpb
enter
dec
inc
es
mov
hlt
lock
vcvtpd2dqy
jo
adc
pop
aaa
jno
pop
mov
pop
cwtl
pop
arpl
sub
push
and
mov
lcall
repz
xlat
test
and
or
push
xchg
fbld
repnz
mov
sub
sub
movsb
sub
push
clc
mov
cmpb
imul
xor
add
out
adc
rorl
xchg
dec
rorb
jmp
cmp
and
or
sub
inc
insb
mov
loope
mov
loop
push
mov
jno
push
xchg
mov
outsl
stc
imul
out
aad
jg
lea
push
loopne
and
std
movsl
lds
and
mov
jle
dec
or
fs
inc
insb
dec
addl
or
sub
jns
leave
das
sub
mov
les
inc
cmp
fnstsw
orb
sbb
mov
dec
xchg
mov
jb
xor
aam
in
movsl
pop
push
sbb
addr16
daa
aad
std
ljmp
mov
dec
les
mov
je
dec
outsb
hlt
mov
mov
stc
int3
test
cmpsb
cmp
scas
shrb
sub
fs
cmp
shrl
test
and
rcrl
data16
rcr
jg
sar
lods
pop
call
dec
fcomps
xlat
mov
in
jbe
mov
into
in
imul
jbe
je
cmp
xor
imul
fldl
in
pusha
dec
int3
push
loope
xor
mov
cmp
das
push
mov
pop
inc
hlt
data16
imul
mov
js
es
scas
push
test
fists
dec
outsl
out
jb
fidivrl
sbb
pop
ret
leave
add
imul
xor
mov
pop
std
add
cmp
loope
sbb
dec
lods
jge
cmpsl
divb
sbb
pop
inc
cmp
test
mov
sub
std
in
dec
cmp
ds
hlt
xor
jg
icebp
jmp
outsb
push
sbb
iret
dec
into
adc
imul
sti
cmpsl
sbb
ror
mov
mov
xchg
jl
xchg
and
lods
mov
rcr
adc
xchg
pop
clc
dec
xchg
dec
outsb
mov
mov
rol
shr
data16
rclb
arpl
repz
cli
mov
or
push
sbb
lahf
jns
or
loope
ja
js
xchg
cli
dec
dec
mov
call
dec
mov
mov
sbb
inc
pop
hlt
push
adc
fistl
mov
jno
imul
lods
mov
jp
cmpsb
cwtl
and
int
dec
push
mov
jbe
pop
imul
stos
mov
xor
inc
adc
into
shl
clc
pop
xor
fmuls
sub
xchg
sub
cmpsl
test
pop
push
rorl
stc
scas
mov
loopne
jnp
stc
mov
or
dec
xor
outsb
inc
lea
push
aad
sbb
leave
inc
loop
jne
mov
jae
jbe
rcrb
lcall
dec
aas
daa
dec
fwait
test
test
andnps
cmp
sarl
xor
cmc
int3
jno
dec
jge
aas
cmp
lock
inc
cmpsl
pop
inc
std
out
movsl
inc
lds
std
inc
sbb
xchg
adc
pop
xlat
aas
nop
das
pop
xchg
lahf
or
stos
sub
cmp
std
mov
js
sbbb
mov
or
das
test
lods
shll
mov
lahf
test
mov
mov
sbb
adc
fisubl
pop
mov
push
insl
jae
sbb
xchg
sbb
push
mov
cmp
mov
xchg
sbb
cmp
ret
adc
lds
imul
jo
jnp
inc
mov
in
shlb
add
in
adc
xchg
std
xor
jmp
adc
sar
cmp
jle
nop
bound
dec
hlt
ret
adc
or
adc
nop
lods
mov
add
inc
push
mov
std
lret
cmpsb
jmp
fwait
pop
xchg
xor
cmp
orb
push
xor
aas
sbb
and
gs
pop
stc
in
stos
dec
jns
jl
sub
adc
mov
aad
jl
mov
push
pop
out
scas
xor
cmp
outsl
push
popa
and
popf
sti
dec
push
mov
fiaddl
in
pop
cmp
and
xor
dec
daa
lods
and
cli
add
fdivr
or
jp
mov
cwtl
fnstcw
sbb
sbb
movsl
adc
mov
xlat
insb
inc
jecxz
outsl
cmp
pop
sarb
lret
ror
stos
cs
lret
pop
mov
int3
push
es
std
mov
push
bound
sub
rclb
ljmp
mov
sbb
das
gs
inc
add
and
or
xor
test
sbb
stc
inc
jecxz
xor
pop
cs
imul
mov
mov
cmp
pop
mov
push
test
xchg
mov
xlat
sub
pop
dec
jmp
cld
inc
mov
jnp
add
push
adc
pop
inc
sbb
and
hlt
sub
ss
push
push
pop
outsb
xchg
js
ljmp
adc
les
shl
pushf
fldcw
aas
xchg
pop
mov
sub
lret
out
mov
cmpsl
pop
bound
sub
mov
lret
or
sub
xlat
adc
inc
jns
enter
mov
sub
xchg
inc
xor
pop
fwait
loop
test
mov
lds
lea
test
fsubrs
cmpsl
and
xor
dec
test
aaa
dec
xlat
xchg
adc
mov
repnz
push
add
and
inc
loope
aaa
xor
mov
pop
sbb
lahf
rorl
insb
adc
and
jbe
and
int3
xchg
loope
cld
scas
test
cmc
in
sub
inc
mov
mov
mov
sub
xorl
enter
insl
test
push
pop
bound
movsb
sbb
inc
divb
mov
add
test
mov
loope
stos
and
in
jge
scas
pusha
ret
movsl
mov
loope
pop
adc
and
jo
imul
or
jge
je
sbb
bound
xchg
in
mov
mov
testl
jae
inc
adc
cmp
loop
imul
xor
imul
ds
cmc
sub
adc
sbb
add
fcomps
mov
out
sub
pop
inc
dec
sbbl
dec
stos
iret
dec
aam
mov
mov
out
or
into
and
mov
andb
ret
loopne
add
mov
test
pop
pop
sub
scas
or
xor
jecxz
mov
std
xchg
cmp
xor
mov
out
ret
jg
fidivs
cmpsb
aas
ss
mov
mov
iret
xchg
mov
cmpsb
ret
sahf
push
insl
jbe
xor
push
jmp
add
ss
loop
cs
pusha
fdivl
sbb
jae
call
pop
or
lret
hlt
dec
fistl
gs
xor
mov
inc
dec
imul
xor
add
add
cmp
mov
cmp
dec
jle
in
je
fnstcw
stos
mov
jmp
cs
fs
pop
lock
mov
add
adc
pop
xchg
xlat
dec
push
sub
cmc
push
inc
jnp
sub
outsb
mov
inc
les
cs
fsubl
stos
leave
mov
sbb
sar
cmp
jl
sbb
cmp
scas
cmp
push
inc
pop
jns
aam
add
add
jbe
pop
sbb
scas
mov
lods
stos
mov
and
scas
push
xchg
xor
aad
dec
sub
bound
pop
loopne
mov
insl
jno
push
in
push
negb
dec
inc
ret
xor
mov
in
rolb
rorb
imul
xchg
sbb
icebp
pop
arpl
lods
adc
in
loope
cmpsl
mov
jg
or
lds
add
out
in
es
ds
xchg
repnz
mov
dec
popa
popl
lods
sub
andl
je
arpl
call
stos
push
and
inc
inc
adcl
idivb
cmpsb
mov
aad
fsts
jg
inc
mov
sbb
hlt
mov
sub
xchg
sti
mov
sub
icebp
lods
xchg
or
ds
jne
insb
mov
rorl
ds
adc
lock
outsb
jnp
mov
dec
xlat
jbe
or
sbb
in
xor
mov
pop
xor
int3
scas
sarl
mov
push
mov
imull
lahf
add
pop
jns
mov
sbb
cmp
inc
testb
jbe
pop
das
mov
push
push
std
jp
mov
mov
mov
pop
test
je
inc
jne
cmp
scas
and
inc
in
push
repz
out
or
loop
idivb
rcl
pushf
add
aaa
int3
dec
mov
sahf
mov
push
aaa
sub
shll
imul
jg
dec
cmp
jno
nop
inc
jbe
xchg
pop
shrl
sub
daa
push
and
mov
mov
jmp
movsb
dec
lahf
arpl
ljmp
rcr
mulb
lret
in
mov
mov
push
mov
xchg
jl
sti
pusha
lcall
mov
data16
dec
mov
stos
add
dec
dec
or
xchg
shll
pop
add
or
js
fsubrl
aad
fstps
push
adc
daa
mov
jge
mov
cmp
lcall
mov
adc
fists
ficomps
and
sub
test
xchg
nop
pop
xor
fs
cltd
fwait
or
dec
cmp
or
dec
inc
int
fldln2
xor
pop
in
or
mov
nop
jle
xor
repnz
test
push
adc
into
sti
cmp
sbb
and
pop
xchg
push
mov
outsb
xchg
outsl
push
mov
call
pop
push
jno
push
push
sarb
sub
inc
cltd
scas
pusha
rclw
ror
mov
cmp
lds
ds
je
mov
shll
mov
mov
popf
xor
sub
jle
mov
flds
and
pushf
inc
push
mov
xchg
adc
popf
scas
outsl
frstor
push
in
mov
xor
xor
add
idiv
hlt
jg
xchg
int
dec
cwtl
xor
adc
sub
gs
in
leave
ja
adc
mov
sub
movsb
sub
cmpsl
xor
rclb
fldenv
jne
mov
push
mov
sbb
jnp
pusha
jecxz
sbb
pop
mov
adc
mov
lret
pop
dec
into
pop
out
adc
lret
inc
pop
out
cmp
mov
loop
les
pop
ret
mov
jge
and
icebp
jbe
pop
mov
mov
mov
cli
shl
cmpsl
push
jns
jno
cmp
push
dec
xor
shrb
dec
xor
mov
test
jae
jns
mov
mov
std
fldt
insb
inc
je
loope
mov
mov
inc
lds
cmp
xchg
jo
mov
loopne
arpl
sub
xchg
dec
pop
pop
imull
pop
sar
andl
fnstcw
aam
dec
xchg
xor
in
dec
cld
cwtl
dec
sub
or
sub
in
lods
lods
sbb
mov
out
sub
mov
pushl
repnz
dec
sbb
aas
iret
lret
push
mov
test
mov
sbb
in
sarb
subl
mov
cmp
cmp
fs
jl
jge
aaa
cli
pop
lods
adc
push
fwait
add
ficompl
ljmp
push
shll
and
jae
mov
or
dec
lds
pop
aaa
sub
cmc
test
test
loope
enter
sub
mull
lea
test
iret
fildll
add
mull
pop
scas
jnp
cmp
adc
in
popf
adc
cmc
into
inc
int3
jne
xchg
cwtl
mov
xchg
sbb
stc
cmp
andl
mov
cmc
jge
xchg
imul
push
sub
leave
ss
or
jp
leave
or
frstor
cmp
jle
test
mov
int3
or
pop
fbld
aad
es
cld
push
jae
test
or
mov
and
add
clc
je
cmp
fstpt
mov
nop
push
insl
mulb
fdivrl
addl
mul
testb
xchg
pop
xchg
lgs
xchg
dec
cld
mov
mov
repnz
loope
and
out
jecxz
pushf
lods
jecxz
data16
loope
lods
movsb
jo
and
iret
pop
cmpsl
jnp
sbb
pop
or
mov
test
mov
movsl
scas
pop
or
xor
mov
insl
lret
daa
mov
push
arpl
insl
rcll
dec
lods
stos
into
sbb
shrb
insl
movsb
sub
ss
inc
cmp
xor
cwtl
std
aad
dec
pushf
bound
and
add
and
in
sub
or
jno
jecxz
leave
sbb
xchg
sub
fcoml
icebp
shlb
pop
mov
inc
add
lock
mov
push
add
cmc
outsb
into
inc
fwait
xor
insb
scas
int
roll
inc
insl
or
dec
mov
ds
cmp
push
data16
push
in
hlt
adc
sti
imul
xchg
mov
in
xchg
std
pop
and
xchg
inc
push
stc
sbb
fnstcw
scas
sti
jg
bound
xor
sub
repnz
mov
stos
xchg
mov
int
push
ret
add
dec
ds
jne
sub
mov
mov
push
inc
fsub
adc
repz
pop
lods
ljmp
cld
cmc
test
push
sub
mov
daa
je
sbb
cmp
scas
jmp
inc
mov
and
sbb
lock
and
pushf
add
sahf
aas
adc
mov
xor
outsl
cwtl
je
inc
mov
sbb
mov
jge
jbe
aad
mov
xchg
xor
lcall
loope
xor
jno
and
bound
lods
lret
xchg
daa
lods
inc
and
push
dec
sarb
jnp
jge
inc
call
inc
sbb
sarb
mov
pusha
mov
jl
hlt
and
mov
imul
aaa
fcmovne
cwtl
push
out
repnz
sbb
inc
jb
aas
push
aaa
inc
dec
and
or
xchg
mov
cmovae
mov
xchg
mov
dec
imul
movsb
lahf
test
insl
mov
lods
les
shrl
sarb
jo
pushf
movsb
jle
and
out
inc
mov
adc
aas
adc
xchg
fidivs
mov
js
add
push
popa
xor
repz
shll
xchg
mov
sub
cmp
mov
mov
jbe
mov
shll
mov
dec
rolb
jnp
lret
enter
mov
in
bound
sbb
int3
ljmp
jo
sub
cs
outsl
mov
js
data16
xchg
leave
pop
push
push
mov
in
jo
xor
fs
mov
inc
outsl
stos
outsb
push
jecxz
je
stc
sub
xchg
ret
imul
xor
pop
ret
push
fsubs
or
mov
and
cltd
es
and
daa
xchg
fnstcw
outsl
ljmp
sub
lods
push
sbb
scas
and
mov
pop
lret
aas
inc
sbb
test
lret
cmpl
clc
or
sahf
jne
clc
std
xchg
ljmp
jb
adc
out
fdivrp
imul
mov
and
lret
nop
push
sbb
pop
mov
xchg
sti
sbb
xchg
adc
mov
in
sahf
cmp
enter
pop
sub
lret
pop
lret
dec
sbb
mov
lret
adc
jnp
jae
cmp
jbe
sbbl
daa
fwait
dec
ret
dec
incb
clc
dec
jl
cmp
sbb
int
mov
and
mov
stos
xchg
in
hlt
jl
xchg
inc
push
mov
pop
mov
xor
rcrl
lods
mov
mov
cltd
cld
fs
push
cmp
jo
in
imul
ja
iret
or
out
ss
xchg
ljmp
pop
add
push
stc
pop
je
add
enter
mov
adc
das
loopne
cld
std
nop
fistl
rol
pop
jecxz
mov
rcl
xchg
jb
int
adc
mov
xchg
xchg
sbb
fs
lods
fsts
rorl
mov
pop
jl
ror
jbe
xchg
mov
jmp
jmp
dec
mov
fimuls
jae
adc
jp
mov
fcomp
xor
outsl
and
jae
xor
jp
popa
push
mov
lods
adc
inc
lret
inc
dec
mov
mov
repz
and
in
xchg
lahf
mov
pop
stos
and
stos
sbb
lods
push
mov
rclb
nop
or
mov
dec
push
sbb
ss
ss
pop
pop
mov
fwait
mov
mov
adc
cli
movsl
test
roll
ja
sbb
jbe
loopne
cmp
cmp
xor
xchg
inc
aaa
and
lret
cld
dec
mov
and
dec
push
pushl
mov
iret
mov
out
into
out
lret
sbb
stc
inc
shll
cmp
aad
pop
push
jp
das
and
add
dec
sub
sbb
jns
mov
sub
nopl
ret
jp
fdivs
jp
das
inc
inc
aaa
loopne
push
in
loop
popf
push
jb
repnz
outsl
add
loopne
push
in
int
cmp
add
or
pop
push
je
or
mov
xchg
dec
pop
clc
and
push
or
in
mov
je
andb
fs
adc
or
push
cmc
ror
loopne
push
out
sbbl
loop
jecxz
inc
xor
adc
frstor
pushf
sbbb
sub
add
jg
pop
ret
inc
or
or
push
cmpsb
inc
popf
ret
lret
jae
jecxz
jecxz
scas
mov
arpl
add
cltd
aad
or
das
mov
bswap
cmc
mov
test
les
or
in
xchg
in
out
cmovae
out
daa
jne
push
call
std
push
xor
adc
int3
testl
cmc
push
adc
into
popl
add
mov
adcl
setb
dec
fwait
cwtl
insl
inc
sti
jne
and
js
cltd
add
or
jnp
xchg
ljmp
cwtl
pop
mov
lret
jl
and
mov
into
push
test
xlat
leave
push
pusha
ss
and
mov
sub
insb
xor
ret
lea
fisubs
sbb
or
push
mov
xchg
cmp
pop
js
fisttps
jnp
cmp
cmpsb
push
fadds
popa
sub
mov
pushf
mov
and
dec
add
jb
push
xchg
gs
leave
in
sub
data16
mov
xchg
test
arpl
sbb
jae
xchg
jae
or
xchg
in
ffree
insb
ljmp
addr16
mov
and
pop
cli
aas
int3
jbe
outsb
pop
lods
fstl
cmp
pop
mov
pusha
outsl
fisttps
cwtl
jmp
scas
ret
inc
repnz
lea
push
ja
ds
jno
sbb
mov
xchg
and
sub
mov
addr16
add
test
mov
mov
stos
jge
cmp
jge
sti
lret
jmp
mov
pop
icebp
call
pop
inc
shll
pusha
mov
testl
daa
dec
mov
scas
cli
mov
sbb
xchg
adc
push
mov
cmp
daa
jae
sti
insl
push
sub
fcmove
sahf
ret
mov
out
mov
jno
jg
or
dec
ja
lahf
inc
cmpl
fisubl
nop
cld
leave
push
jmp
popa
mov
pop
fcmove
mov
aam
stos
pop
lahf
sub
add
fwait
dec
roll
sbb
stc
cmp
sbb
mov
adc
loop
pop
adc
mov
mov
loopne
addr16
fdivrl
mov
xor
in
jb
pop
sub
leave
push
insl
mov
shl
pop
push
push
mov
dec
inc
cmp
dec
divb
mov
push
mov
push
xor
in
cs
pop
test
xor
xlat
mulb
sub
push
sub
shrb
flds
test
dec
pusha
or
aaa
fadds
in
inc
loopne
ficoms
add
push
imul
pop
inc
mov
cmp
sub
std
jb
int
movsl
fldt
jl
xor
or
and
pop
inc
sub
loopne
les
adc
pop
sub
jmp
idivb
mov
int
test
cmp
xor
adc
lds
ret
insb
idivb
fcmovnb
pop
inc
fs
out
lods
pop
lret
lods
insl
sub
jecxz
sbb
loope
test
cmp
cld
push
dec
test
xor
cltd
adc
cmp
lret
and
pusha
fmuls
dec
in
cmp
loope
inc
adc
in
mov
and
adc
je
pop
in
mov
and
xor
sahf
addl
fs
inc
or
and
rcll
xchg
xchg
stos
add
cmpsl
cmp
je
mov
fstpt
jge
push
cmp
popa
aad
mov
pop
lcall
sub
es
outsl
dec
fnstcw
sub
in
push
jbe
ret
movsb
or
outsb
iret
mov
nop
sub
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
add
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
xor
add
mov
imul
mov
mov
mov
xor
add
mov
xor
add
imul
add
mov
jmp
mov
xor
mov
xor
add
mov
mov
xor
add
imul
or
lea
mov
xor
add
jmp
ja
or
xlat
sub
out
stc
in
cmc
sbb
jnp
mov
in
es
xchg
or
cmp
mov
mov
push
lcall
xchg
setno
in
sbb
inc
pop
mov
jp
mov
sbb
inc
notb
push
iret
test
jmp
movsl
mov
mov
fcoms
mov
hlt
mov
cmpsb
xor
clc
xchg
andb
sub
loope
jecxz
je
pop
jbe
push
sbb
lret
sub
add
add
inc
out
inc
lcall
adc
sub
pop
out
popf
or
fwait
pop
add
push
mov
sbb
and
rorl
mov
or
jae
aam
addr16
push
mov
xchg
iret
cmp
sahf
gs
bound
icebp
daa
cmp
shl
cmp
push
xchg
fstpt
cmpsl
repnz
out
jbe
xchg
mov
push
fisubs
mov
and
fnsave
cmp
stos
or
fwait
or
cmpsb
sbb
xchg
aam
cmp
cmp
jecxz
jle
inc
fwait
xchg
or
ret
and
ja
mov
inc
dec
and
shll
gs
loopne
ja
int3
xor
mov
xor
sub
aaa
xlat
popf
jae
mov
jecxz
fildl
addr16
add
cmpsb
in
or
adc
pop
popa
shl
jl
mov
rorb
pop
pop
add
xor
mov
mov
movsl
into
adc
adc
movsb
scas
inc
mov
jp
js
jmp
xor
adc
out
adc
adc
cs
and
sbbb
adc
fsubl
push
cmpb
dec
testb
ja
dec
xchg
aas
mov
xchg
and
jo
adc
jnp
mov
in
inc
sbb
bound
or
sbb
lret
lock
test
xor
jnp
sub
and
inc
loop
jno,pn
insb
dec
test
enter
and
inc
test
ss
enter
and
scas
sbbl
jge
stc
jg
fiadds
pop
loop
jl
and
cmp
and
in
daa
push
insb
push
clc
lock
and
lods
addl
jge
test
adc
popl
mov
add
xchg
int3
sbb
cltd
push
ja
lock
mov
seto
dec
sarb
movsb
or
repnz
ja
jge
shll
in
ja
cmp
mov
shrb
js
sbb
mov
repnz
std
mov
sbb
bound
mov
pop
lahf
in
jmp
mov
jo
daa
mov
pop
adc
rorl
and
xor
mov
rcrl
test
or
inc
mov
sub
cmc
aaa
and
in
xor
cmp
cmp
pop
jg
insl
lahf
xchg
sbb
lahf
out
aas
fiaddl
scas
rclb
lock
cmpsb
in
clc
les
add
loop
icebp
lret
sub
and
pop
jne
mov
inc
jae
addb
repnz
adc
mov
and
scas
push
cmp
or
xor
mov
pop
push
dec
lret
repnz
sub
test
mov
dec
repz
pop
ret
or
push
push
scas
mov
and
xchg
or
jo
fidivrl
dec
push
jbe
xor
inc
bound
jge
sub
mov
pop
nop
xor
pop
add
sbb
aad
out
test
out
cmp
push
sbb
sahf
or
and
jp
mov
rcl
xlat
xchg
inc
mov
and
pop
mov
or
jmp
jo
inc
std
scas
movsb
push
mov
shll
xchg
xor
fwait
jmp
sub
dec
arpl
and
mov
mov
sub
and
push
dec
stos
mov
and
xchg
xchg
sub
lret
loop
int
inc
cmp
adc
or
orl
mov
mov
pop
cmp
pop
sub
fstpl
xchg
insb
mov
aas
loope
mov
adc
push
int
dec
js
mov
xor
insl
imul
loopne
dec
data16
aad
xchg
mov
adc
stc
xor
sub
add
mov
pushf
and
push
or
shlb
push
jecxz
fprem1
stos
fs
in
sbb
xchg
pushl
pop
or
push
jb
jb
scas
scas
cli
xor
outsl
les
cmp
pop
rorb
and
movsl
rolb
mov
xchg
or
jge
mov
out
and
push
ds
adc
push
mov
fcmovbe
addl
add
cmp
daa
test
or
xchg
imul
xor
out
testl
mov
push
mov
je
sub
adc
mov
daa
dec
inc
pop
pop
shl
push
or
sub
data16
xor
loop
pop
mov
es
mov
bound
shl
aaa
cmp
gs
mov
stc
bound
push
sti
movsl
pop
jecxz
data16
sbb
push
pop
pop
xchg
inc
jg
jne
mov
inc
aaa
loop
cmp
mov
aad
mov
mov
lds
pop
and
adc
xchg
adc
cmp
aaa
pusha
ljmp
sarl
sbbb
pop
nop
jnp
and
fmull
push
sub
or
mov
fldcw
clc
cli
nop
dec
subl
or
lods
insb
add
nop
fcoml
shl
or
inc
lods
xchg
xor
add
rcrb
repz
aad
jnp
jae
sub
fwait
mov
add
mov
push
das
mov
cmp
pusha
and
adc
inc
fidivl
add
jno
cmp
out
push
fisttpll
inc
hlt
sbb
sahf
sbb
insb
jp
clc
jb
push
out
enter
aad
ljmp
cld
xchg
mov
shlb
adcl
mov
les
sbb
cld
mov
sbb
enter
push
lods
sarb
push
mov
mov
pop
mov
out
mov
pop
jg
test
mov
add
push
and
sub
dec
ret
aaa
cmp
push
stos
mov
push
jecxz
mov
xrelease
pusha
filds
cmp
sub
and
xor
movsl
repz
lahf
hlt
xchg
or
mov
enter
mov
xchg
sbb
daa
sub
cmp
movq
or
cmpl
pop
jle
popf
xchg
sbbl
or
jle
and
sahf
outsl
shl
cmc
pop
in
sbb
lock
shll
xor
push
aad
mov
jg
daa
fstpl
mov
add
cmpsl
xor
mov
adc
stc
push
mov
sbb
sahf
inc
out
test
xor
lahf
jae
add
mov
nop
xor
pop
daa
cmpsl
fildl
xchg
cltd
add
xchg
daa
ljmp
sub
ret
mov
add
xchg
nop
push
push
push
adc
test
arpl
mov
dec
push
ret
mov
mov
push
xor
jecxz
and
fmull
popf
cmp
dec
jl
cmp
negb
leave
mov
push
test
push
enter
cmpsb
pop
hlt
movsl
mov
pop
pop
xchg
cmp
cmp
fidivl
sbb
mov
xchg
adc
cld
insl
rcrl
or
addr16
pcmpgtd
push
and
lods
mov
data16
lret
mov
dec
lods
add
lret
sbbb
adc
cmpsb
test
mov
push
or
shl
mov
popf
sub
icebp
shr
pushf
lret
stos
sbb
dec
mov
fwait
inc
fildll
sub
push
sub
in
stc
imul
cld
or
xchg
in
lahf
fs
mov
out
ficompl
mov
adc
push
arpl
lahf
dec
shlb
push
out
push
nop
cmp
pusha
xor
and
pop
and
sbb
enter
nop
xor
push
adc
jecxz
and
mov
adc
lahf
cmc
into
inc
test
subl
scas
pop
cmc
inc
lea
cmc
inc
int
dec
pusha
push
or
out
shlb
fsts
push
xor
push
repnz
xchg
movsl
je
stos
jl
add
insb
push
xchg
xor
fistpl
mov
shl
sbb
in
es
stc
adc
dec
scas
jmp
adc
call
inc
or
movsl
sub
loopne
sub
cmp
ret
rclb
arpl
sub
sub
test
lea
xlat
mov
lods
inc
xlat
out
xor
mov
cmc
aad
jae
adcl
sarb
mov
jl
out
cwtl
mov
xlat
int
and
mov
lea
and
leave
push
or
dec
out
and
pop
mov
iret
aas
jecxz
mov
mov
lret
int
push
pop
call
cli
das
add
insb
cltd
cmp
xor
inc
mov
push
adc
xlat
pusha
adc
xor
push
jle
cmp
stos
popa
shrl
pusha
int
pop
bswap
dec
cmpsb
mov
xchg
test
jne
pop
dec
and
dec
ret
sub
push
inc
js
add
popf
inc
jmp
js
xchg
mov
and
jnp
jnp
flds
and
add
jae
jns
in
and
jb
add
push
imul
add
xchg
outsb
push
pop
negl
xchg
sub
add
dec
adc
cwtl
cmpsb
ss
cmp
lods
mov
stc
sbb
into
fisttps
inc
mov
mov
jle
and
popf
lods
gs
push
pop
xor
cmc
sbb
push
cmp
dec
adc
icebp
mov
insb
ljmp
push
loopne
mov
cmp
mov
inc
fidivrs
scas
xchg
iret
into
subb
mov
jmp
xchg
cli
cmp
inc
inc
sahf
sti
iret
cmpsl
stos
adc
sub
loopne
pop
leave
mov
pop
into
adc
addr16
js
sub
pusha
daa
stc
pop
xchg
inc
mov
loop
shl
xchg
cltd
cwtl
loop
rcr
mov
lock
jbe
mov
xor
lret
jo
outsb
movb
stos
repz
push
lock
daa
aaa
sbb
stc
movsl
dec
bound
aad
add
or
outsb
fisttps
pushf
or
lea
addb
mov
mov
and
add
push
sti
jne
add
and
adc
adc
fldcw
jne
rcrl
mov
push
mov
notl
mov
cmpsl
mov
inc
std
adc
test
pop
pop
test
mov
jne
test
lds
dec
loopne
leave
fst
cmp
adc
aam
scas
inc
iret
enter
cmp
mov
das
jne
dec
cmp
in
testb
negb
movl
lods
data16
jecxz
add
in
shll
sbb
adc
mov
shll
inc
jecxz
mov
jge
pushf
and
int3
test
pop
sbb
outsb
mov
repz
popf
pop
jl
in
sub
xchg
xchg
cmp
sbb
sbb
leave
arpl
sub
jg
hlt
xchg
pop
rcll
xor
lock
mov
cs
loop
ja
mov
cmpsl
shl
sbb
psraw
loopne
shll
cmpsl
adc
mov
sahf
loope
xchg
mov
inc
in
sub
shl
xor
jecxz
push
mov
mov
sub
clc
decb
mov
pop
ljmp
sbb
jbe
xchg
repnz
push
in
ja
adc
xor
insl
cmp
pop
lods
cs
fldl2e
adc
mov
fadd
cwtl
aad
push
or
inc
or
or
mov
ret
lods
dec
cli
in
inc
xchg
mov
add
ljmp
inc
fcomps
shr
rcrb
lret
xor
cmp
stc
dec
int
mov
push
jns
mov
sbb
push
xchg
xchg
cld
mov
xor
and
push
call
inc
lret
sub
and
shrl
sbb
hlt
clc
mov
out
ljmp
hlt
inc
adc
push
cmp
xchg
dec
shr
imul
push
ret
inc
idivb
jb
xor
aam
aad
sub
xchg
dec
jle,pt
out
es
in
add
mov
dec
sub
cmp
loope
into
or
imul
and
cmpb
adc
dec
mov
je
scas
inc
mov
loop
scas
inc
roll
cmp
sbb
mov
lret
ss
mov
in
outsl
fwait
clc
incl
add
sbb
sbb
ja
cmp
mov
les
shlb
sub
je
out
lock
pop
mov
int3
sahf
ljmp
aaa
mov
pop
inc
or
sbb
movsb
int3
mov
mov
cmp
fstp
xor
adc
push
add
sti
pop
pushl
mov
dec
test
sub
xchg
cmpsb
imul
sahf
push
add
mov
test
jo
mov
xor
lods
rcrl
and
sbb
adc
adc
pusha
mov
sbb
aas
iret
cmp
loopne
clc
jmp
pop
imul
or
fistl
push
pand
mov
testl
add
fmulp
or
mov
and
cmp
jmp
ret
sub
pop
mov
dec
cmp
aad
out
mov
pop
xchg
cmc
sbb
add
lea
das
inc
jae
push
or
pop
sub
pop
mov
push
cmpsb
mov
int
xchg
adc
jbe
dec
call
xchg
push
xchg
mov
xor
dec
cli
inc
jae
adc
leave
sub
pop
cmc
or
mov
sub
dec
cvtpi2ps
scas
jge
mov
fisubs
cmp
jle
aas
sbb
mov
idivl
rcr
sti
add
testl
ret
test
ret
pop
jne
mov
mov
pop
adc
and
mov
xchg
inc
xor
mov
jmp
pop
js
or
or
addb
arpl
iret
cmp
adc
and
mull
jmp
jp
das
pop
or
push
jge
jge
jge
in
fdivrs
pop
xor
out
xchg
int
mov
mov
sub
push
inc
loopne
pop
ret
push
cmp
fwait
enter
mov
insl
je
pusha
mov
repnz
adc
push
sbb
inc
int
push
lods
and
stos
je
push
push
aaa
or
frstor
call
sti
sbb
in
pop
mov
out
cmp
inc
xchg
mov
mov
iret
clc
add
mov
mov
pop
push
jnp
cmp
cmp
stos
cmp
stos
push
jl
cld
pop
or
and
mov
xchg
sarl
push
mov
adc
ret
shrl
iret
lret
mov
in
mov
and
fldt
cld
mov
ret
mov
lds
popf
mov
pop
pop
cmp
stos
js
pop
mov
mov
fnstsw
push
and
dec
leave
mov
or
aas
js
ret
cld
cmp
push
movswl
mov
inc
inc
inc
test
push
lods
out
imul
les
xorb
xchg
ja
cmp
lret
cmp
je
inc
sbb
fildl
inc
clc
adc
push
or
xchg
pop
stc
fcoml
outsl
rcr
pop
sbb
xor
fdiv
es
dec
movups
loopw
aaa
outsl
mov
clc
imul
mov
shl
enter
xchg
mov
shll
sub
dec
push
ror
jns
mov
loop
hlt
mov
cmp
cld
cltd
movl
jns
ss
je
ds
push
push
test
adc
dec
cmpsb
xchg
fsubrs
xchg
stos
sub
cld
pushf
andb
cmc
pop
mov
notl
and
xorl
mov
addr16
push
std
dec
inc
sub
shrb
pop
movsl
daa
or
push
push
mov
xchg
mov
inc
ljmp
or
cmpsl
hlt
sbb
jmp
mul
jge
pop
mov
insb
or
fs
or
pop
mov
add
pop
sbb
lds
sbb
and
aam
mov
mov
push
adc
cmpsb
icebp
cmp
sub
arpl
sbb
sahf
cmp
imul
iret
gs
jns
mov
xchg
in
lods
inc
or
mov
and
les
repz
icebp
mov
push
rclb
push
clc
lock
jecxz
pop
adc
icebp
ss
pop
dec
mov
enter
in
and
mov
fs
fmul
stos
sub
mov
mull
jns
sbb
iret
iret
push
jle
test
mov
push
rcl
pusha
rol
or
inc
loope
jb
cmp
mov
pop
test
ja
inc
in
mov
pop
addb
push
test
icebp
or
cmpsb
fidivrl
rcr
sub
into
mov
lods
jle
cli
dec
jecxz
cwtl
psubusb
hlt
ret
adc
adcl
in
push
push
daa
xor
jecxz
dec
arpl
xchg
sub
repnz
sbb
lret
or
dec
mov
sbb
sub
test
mov
mov
jecxz
out
out
fistpll
jno
das
enter
arpl
imul
and
fistpl
mov
data16
mov
push
rcrb
mov
push
pusha
pop
rorb
insb
mov
aaa
and
or
cmpb
push
lret
xlat
pop
stos
xchg
hlt
push
pop
or
loopne
push
cli
dec
mov
popf
push
testb
pop
jmp
cmpsl
into
lahf
cmp
inc
std
inc
adc
les
jmp
dec
divb
aaa
ljmp
fisubs
mov
std
cmp
in
cli
mov
movsl
cmp
xchg
adc
push
mov
adc
es
jle
test
sub
loopne
fs
ret
mov
and
xor
mov
inc
repnz
lret
pop
fadds
sti
aam
sub
push
test
and
xor
sbb
cli
sub
loop
xor
pop
vpmaxsw
mov
xor
loope
lret
sub
jno
fwait
mov
add
icebp
mov
cmp
mov
subl
or
imul
cmp
push
movsl
push
jns
or
mov
scas
mov
fwait
ss
sub
aad
call
sbb
daa
clc
shll
mov
orb
mov
daa
outsl
shll
cmp
add
lds
test
adc
or
xor
les
mov
fistpll
add
in
adcl
jmp
fsubrl
adc
dec
dec
loopne
mov
lahf
cmc
lss
xor
push
inc
xor
or
out
sti
insl
fistpl
imul
shlb
and
idivl
movsl
add
sti
repnz
adc
cld
push
mov
out
insb
jno
or
test
xor
movsl
lret
jge
fistl
xor
dec
sub
push
ljmp
and
arpl
dec
ds
hlt
in
dec
sti
mov
iret
out
cld
aas
stos
pusha
ds
loope
push
mov
inc
push
sub
lret
jbe
and
fs
test
in
dec
pop
add
sti
xorl
xor
adc
cli
push
cmp
in
out
ret
add
push
pop
fcompl
addr16
int
fwait
or
push
mov
ds
lock
mov
push
frstor
add
insb
push
sahf
push
or
loopne
jge
insl
cmp
mov
cwtl
pop
inc
sub
mov
sbb
scas
popf
adc
cmpb
adc
mov
sbb
subl
adc
adc
pop
or
adc
xor
pop
xchg
mov
sub
imul
in
push
lcall
add
xor
stos
inc
clc
xor
pop
insl
scas
cltd
and
data16
pop
mov
lods
adc
fsts
lods
sahf
je
cmp
add
jnp
and
sbb
shlb
ret
sbb
cmp
nop
hlt
cmp
sub
adc
adc
adc
cmp
xor
mov
popl
rorl
sub
push
xchg
call
jno
mov
push
fwait
mov
lock
bound
aam
push
and
add
out
xchg
cmp
cld
or
ret
ljmp
xor
js
pop
push
or
push
dec
dec
push
out
xchg
inc
fwait
cmp
sahf
shlb
jp
cmpsb
jge
xchg
or
adc
inc
cmp
pop
outsl
jg
ret
inc
or
ss
arpl
lret
or
push
test
adc
mov
pop
jmp
xor
testb
idivl
and
mov
jmp
sahf
addr16
xlat
pop
mov
cld
adc
push
int
aas
lods
and
psubd
jl
dec
cmpsb
mov
jno
push
inc
in
fmuls
in
add
and
pop
mov
mov
int
jne,pt
sub
xchg
lods
inc
push
divb
divl
xor
jb
loopne
stos
xchg
and
lds
mov
cwtl
jbe
ret
push
xchg
fadd
repnz
lods
xchg
stos
push
repnz
daa
movb
dec
jo
pushf
push
and
ljmp
push
sarb
and
jb
fsubl
call
cmp
dec
into
push
or
mov
jb
arpl
cmp
les
pop
out
mov
sbb
pop
mov
sub
jbe
xor
jecxz
or
cltd
and
into
test
pusha
aaa
in
pop
add
sahf
in
in
pop
mov
adc
ret
daa
rcrl
pop
xchg
stc
fs
inc
out
sbb
int3
clc
cld
stos
push
mov
fcomps
jg
and
pop
movzbl
dec
insl
and
fdivp
sbb
in
fst
or
cmp
pop
push
adc
xlat
push
lret
cmp
dec
imul
mov
or
sbb
movsl
les
jmp
es
or
push
jbe
jo
les
shrl
add
out
icebp
iret
loop
xrelease
pop
rolb
cmp
xchg
cmp
pop
sub
xor
and
pushf
add
cmp
scas
aas
pusha
pop
or
mov
popl
subb
aaa
lcall
sub
dec
rorb
lahf
cld
add
pop
leave
xchg
push
add
loopne
jno
enter
shll
mov
xor
cmp
and
icebp
into
mov
hlt
sbb
sbb
nop
subl
adc
rclb
mov
loope
sbb
add
inc
push
data16
mov
fisubrs
rorb
call
push
push
jmp
mov
mov
jb
int3
inc
xor
cmp
outsb
aas
gs
aam
shrb
aas
enter
bound
rcrl
pop
sbb
ret
stos
mov
jno
popf
and
jnp
push
mov
lods
fiaddl
xchg
push
sub
out
mov
sbb
outsl
inc
and
xchg
in
push
push
mov
in
repz
call
fistpll
xchg
pop
jae
sbb
jl
mov
mov
mov
pop
adc
inc
mov
mov
mov
mov
mov
push
cmp
adc
int3
pop
xchg
lret
xchg
adc
push
ss
xor
outsb
jmp
mov
inc
mov
sub
packssdw
lret
pop
sbb
cmp
int3
out
mov
lret
repnz
outsb
xchg
mov
aam
cmp
pop
xchg
hlt
mov
insb
fisttpl
cmp
xor
push
mov
pop
ljmp
or
in
pop
loop
imul
rclb
cwtl
push
push
push
mov
dec
ficompl
cs
mov
add
sbb
scas
add
clc
jmp
and
cmpl
hlt
pop
jb
push
xchg
or
out
xchg
dec
pop
xchg
loope
push
xchg
lcall
fwait
mov
mov
popf
xchg
stos
cmpsb
xor
lods
mov
repz
fdivl
shl
fs
cli
pop
push
cmc
or
clc
mov
int3
sbb
push
and
cmpb
jo
outsb
mov
mov
xchg
inc
push
fmul
adc
popf
and
shl
or
push
mov
stc
and
into
add
sahf
ss
xor
jb
frstor
aad
imul
imul
cmpsl
push
jle
mov
sbb
jnp
pop
push
push
mov
test
jns
cli
mov
mov
sbb
inc
js
sbb
jl
or
dec
lret
addr16
mov
mov
ret
jns
inc
fdivl
or
adc
inc
rorl
iret
xchg
pop
sbb
fidivrs
xlat
push
clc
push
jns
pop
sbb
pusha
mov
cltd
inc
jl
mov
inc
stc
xchg
jg
fldpi
sbb
cmp
stos
jno
push
mov
cs
sub
std
into
pop
mov
out
push
lret
enter
sti
imul
jne
ficompl
out
in
fidivrs
xchg
cmpl
inc
mov
inc
mov
rolb
xchg
mov
push
aas
adcl
xorl
imul
repnz
ds
fadd
in
and
sub
push
mov
ret
es
sub
pop
loop
add
dec
xor
sub
pop
mov
test
jp
std
jnp
cs
push
stc
inc
jno
cmc
dec
addr16
inc
xorl
mov
lahf
pop
xchg
cmc
or
xor
pushf
adc
enter
enter
push
jl
pop
dec
test
jg
test
lods
xchg
int3
push
dec
scas
ret
mov
popf
cmp
fstpl
sbb
mov
daa
dec
rcr
adc
sub
ss
mov
dec
cmp
mov
dec
fadd
pop
mov
out
in
pop
mov
push
push
test
scas
rcrl
adc
and
pop
fcmovnu
imul
bound
push
fwait
mov
or
xor
xor
sub
jae
or
outsl
jle
sbb
fsubrl
rol
ljmp
sub
xor
fdivl
je
pop
shll
sbb
pop
mov
sub
inc
dec
sub
aaa
mov
adc
idivb
out
push
icebp
cmp
push
pushf
das
push
cld
push
push
test
scas
stos
pop
mov
dec
les
lods
fisttpll
dec
je
enter
inc
test
adc
stos
out
pushl
sbb
mov
scas
xchg
sub
aad
lahf
aam
inc
mov
xor
js
es
cmp
xor
dec
mov
and
xchg
movsb
add
std
jo
pop
pop
and
cmp
int3
fistl
call
arpl
xor
cmpsl
adc
push
pop
push
inc
xor
jmp
cmpsb
push
sub
aas
xlat
fidivl
or
xor
cmp
aad
cs
sahf
ja
int
add
mov
adc
test
inc
push
add
das
loop
jae
loope
sub
negb
sub
xor
aas
adc
cmp
cld
cld
fmul
jle
pop
sarb
movsl
and
mov
mov
fstpl
stos
jo
jnp
cmp
cmpsb
outsb
add
or
sub
pop
fwait
inc
push
pop
mov
inc
push
xchg
cmp
lock
movsl
pop
push
adc
das
in
mov
jle
cmc
pop
roll
push
stos
or
push
in
jle
xor
data16
lods
iret
out
scas
icebp
sbb
push
ret
mov
out
ficomps
in
fistps
lods
in
jo
xchg
mov
cs
sbb
shl
bound
or
aas
inc
sar
dec
lock
nop
cmp
les
mov
xchg
inc
loop
mov
lds
cmp
les
cmp
inc
or
mov
mov
loopne
lock
jg
xor
mov
dec
lcall
pop
lods
jnp
or
adc
or
dec
jg
mov
jecxz
mov
pop
add
pop
adc
cmp
add
cmp
gs
add
aad
mov
sbb
imul
cmpl
in
mov
adc
pop
push
add
add
jcxz
sbb
hlt
and
outsb
test
jnp
add
or
push
bound
xchg
lahf
push
and
and
data16
sar
add
out
push
in
hlt
lds
test
and
movsl
push
outsl
cmp
jbe
mov
rorb
out
int3
lea
push
inc
and
lcall
xchg
mov
pop
mov
and
out
dec
dec
out
addr16
inc
fcmovnbe
in
arpl
pop
fcomps
icebp
xlat
and
mov
sbb
int
jae
shr
mov
mov
mov
scas
cmp
mov
cmpsb
fadds
lods
sub
push
jg
xchg
aad
pop
incb
fstpt
mov
sahf
mov
hlt
sub
loop
loope
mov
inc
adc
mov
scas
repz
addr16
out
and
pop
std
adc
push
cmp
jl
add
lahf
test
mov
inc
gs
andl
gs
pop
push
adc
arpl
jge
repz
jg
mov
adc
mov
aaa
cs
xchg
aaa
addl
stc
mov
xchg
cmp
sti
jecxz
js
xor
test
shrb
mov
dec
cmp
test
fiadds
das
popa
ljmp
jbe
jo
sahf
adc
mov
xchg
inc
dec
inc
jne
push
adc
mov
fsubl
push
gs
mov
inc
cmp
addr16
xor
and
and
adc
dec
mov
int3
mov
sub
js
insl
mov
sub
inc
adc
and
add
fprem
aam
sbb
xchg
pop
out
push
cmp
ss
push
jnp
mov
inc
push
push
xor
aaa
pop
aam
mov
or
adc
test
cmpsl
push
repz
and
orb
ror
int
test
push
push
das
push
mov
arpl
adc
xchg
dec
lea
pop
adc
mov
xchg
addr16
lret
ja
push
jge,pn
cmp
repz
cmp
adc
and
loop
sbb
jmp
test
ljmp
test
pop
es
inc
inc
mov
imul
bound
mov
jmp
mov
xor
mov
lea
mov
jmp
jmp
jmp
mov
mov
xor
xor
add
adc
mov
mov
mov
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
mov
mov
mov
mov
mov
mov
xor
xor
add
adc
mov
mov
mov
mov
mov
xor
xor
add
adc
pop
leave
ret
mov
mov
or
mov
mov
movl
jne
or
mov
mul
ret
push
mul
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
dec
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
lea
mov
sub
mov
subl
mov
adcl
mov
mov
addl
mov
mov
xor
mov
mov
mov
addl
xor
sub
sbb
addl
xor
orl
xor
movl
mov
mov
cmpl
movl
jne
movl
cmpl
jne
mov
mov
subl
xor
sub
movl
sbb
addl
xor
adcl
xor
addl
xor
addl
xor
add
adc
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adcl
mov
xorl
xor
sub
mov
sbbl
mov
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
pushl
call
jmp
mov
orl
mov
subl
xor
andl
sub
sbb
xorl
xor
xor
xor
sbbl
xor
add
movl
adc
andl
mov
subl
xor
addl
add
mov
adc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
xor
add
adc
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
cmpl
jne
cmpl
jne
mov
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
sub
sbb
xor
xor
xor
xor
add
adc
mov
mov
pop
leave
ret
push
mov
push
push
movzbl
add
mov
lea
mov
mov
adc
mov
sbbl
mov
movl
sub
mov
mov
mov
sub
xor
and
mov
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
xor
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
leave
ret
push
mov
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
movl
andl
movl
lea
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
and
mov
xor
xor
add
mov
adc
mov
mov
addl
mov
movl
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adcl
movl
add
movl
lea
xor
mov
mov
movzwl
sbb
xor
add
movzwl
notl
mov
subl
mov
mov
mov
subl
xor
xor
movl
add
adc
mov
jmp
mov
movl
inc
mov
movl
cmpl
movl
jae
mov
mov
mov
mov
mov
jmp
fstl
add
adc
rcpps
jnp
cwtl
jnp
test
sahf
xchg
xor
pop
btc
sbb
and
in
fwait
je
fimull
jecxz
mov
push
jmp
inc
andl
aaa
push
dec
mov
add
sti
cmovb
imul
mov
push
fisubl
inc
shll
out
add
mov
jge
pop
cwtl
outsb
lret
xchg
push
je
or
inc
pushl
adc
neg
jbe
and
dec
hlt
ds
mov
push
addl
aad
repnz
inc
xor
les
add
dec
movsb
shl
das
inc
mov
adc
pop
insl
aam
int
pop
mov
repnz
jns
into
mov
cltd
cld
and
pop
or
xor
out
cmp
dec
int3
in
stos
mov
stos
shll
xorb
jge
xchg
divl
add
lock
push
repz
mov
test
mov
cmp
xchg
push
in
dec
and
or
scas
mov
cld
aas
inc
movsl
lods
jg
sub
and
fs
pop
test
dec
rol
inc
rcll
scas
cmp
inc
mov
adc
mov
mov
dec
jmp
test
dec
add
mov
pop
sub
xchg
pop
sbb
sti
les
lock
xor
mov
dec
rcrl
and
mov
push
std
aas
jae
bound
push
std
rol
mov
xor
mov
fisubl
adc
push
jbe
loop
addl
hlt
push
push
or
jnp
xor
sti
xor
sbb
shrb
jno
inc
movsl
data16
sub
mov
xchg
out
push
jl
push
dec
mov
cltd
je
scas
mov
out
stos
fiadds
or
rorb
cmp
push
and
andl
stos
jae
sub
repz
jbe
jbe
cmc
or
stos
repz
aad
lea
std
mov
in
cmp
mov
mov
mov
icebp
mov
cmpsl
inc
lds
sub
repz
lds
inc
test
jo
ljmp
inc
sub
nop
add
push
fnsave
jecxz
in
or
push
leave
add
cmpb
dec
movsb
in
adc
xor
and
cwtl
mov
out
push
dec
mov
into
fs
data16
negb
xor
pop
cs
inc
pop
test
lock
adc
pop
in
daa
pop
shrb
loope
mov
stc
push
mov
lahf
jge
dec
xorl
sub
lcall
inc
movsl
xchg
ret
cs
pop
jo
frstor
sbb
int3
jbe
cltd
rcll
aas
xor
inc
jle
mov
out
inc
sub
or
or
cmp
dec
cltd
ja
cmp
pop
push
cmc
pop
add
jne
mov
lret
push
or
jnp
in
outsl
add
loopne
add
testl
cli
jge
aam
out
push
xchg
ja
push
je
outsl
movb
fstpl
mov
mov
out
cmc
pop
out
ret
push
ljmp
xchg
aas
mov
jb
mul
xchg
mov
movsl
dec
xchg
lods
push
scas
push
push
mov
test
cmp
out
stos
icebp
and
push
clc
je
add
cmp
nop
xchg
xor
pop
ficompl
addr16
lahf
lahf
push
cmc
adc
insl
ja
and
ja
jne
loop
gs
jmp
mov
out
sbbb
push
insb
pushf
dec
cmc
push
jo
dec
iret
mov
imul
inc
pop
jns
stc
adc
push
out
sub
popa
xchg
pop
fdivrs
std
mov
adc
push
pop
xchg
push
mov
xor
cmp
shl
out
mov
xchg
jae
stos
mov
test
pop
in
cwtl
mov
jl
cmp
das
test
push
fimull
cs
jb
mov
or
lock
sahf
ret
push
loope
mov
rcl
adc
mov
and
mov
push
imul
add
inc
shlb
mov
add
xlat
jne
stos
out
sub
add
fwait
je
fisubl
jecxz
arpl
sbb
jecxz
inc
inc
mov
adc
adc
in
rolb
dec
adc
std
push
xchg
jb
ljmp
jg
cmp
cmpsb
je
sub
inc
pop
cmp
mov
adc
mov
pop
icebp
push
push
or
test
pop
mov
ljmp
pop
push
sub
cmpsb
daa
mov
mov
ret
xchg
pop
addr16
inc
test
and
push
leave
imul
adc
sub
repnz
movsl
cmp
inc
mov
inc
pop
fsub
mov
fiadds
mov
sbbl
mov
mov
pop
in
push
push
lahf
push
or
js
push
insb
sub
int3
sbb
sbb
jg
pop
sub
fbstp
xchg
das
pushf
cmp
xor
inc
fistpll
inc
arpl
insl
mov
cmp
sub
cmp
pop
repz
pushf
and
enter
cmc
pop
add
and
fisubrl
in
fisttps
mov
fists
sbb
sub
xlat
ds
addr16
es
pop
adc
les
pop
mov
cmp
and
mov
xchg
iret
sbb
mov
jle
insl
xchg
call
bnd
ja
setae
inc
xchg
mov
decl
push
in
mov
jae
or
push
outsl
orb
cmp
or
add
mov
lods
out
lret
movsl
xchg
jmp
cli
sbb
imul
push
inc
cmp
cmp
shll
dec
sarl
inc
testb
jmp
add
shr
jl
test
adc
into
sub
pop
lods
test
mov
pop
or
pop
popf
shlb
inc
pop
add
daa
push
rcrb
arpl
ret
call
das
sub
hlt
das
xor
xchg
pushf
or
icebp
sub
notl
mov
fisttps
jno
addb
shlb
imul
ss
aaa
lock
cmc
sbb
inc
mov
sub
adc
add
jge
cmp
mov
jbe
lea
int3
xchg
mov
add
dec
and
int
add
push
jns
push
mov
lea
add
pop
mov
dec
push
sbb
pop
outsb
mov
mov
scas
lahf
sub
stc
pop
sti
dec
jns
test
adc
rolb
mov
mov
movsl
or
cwtl
adc
or
mov
pop
data16
stos
mov
dec
xchg
in
sbb
inc
pop
gs
cmpsl
mov
xor
pushf
popf
outsb
jp
lock
jnp
or
push
test
push
inc
std
lds
mov
ja
add
imul
jno
shl
mov
rorb
clc
lcall
sbb
cmp
outsb
lahf
enter
fwait
imul
mov
lds
sub
int
or
cmp
jae
pop
push
sti
in
xor
shlb
sub
xchg
pop
xor
inc
into
xchg
xchg
xchg
and
popa
mov
popa
push
les
mov
aas
xor
xor
mov
mov
adc
jge
mov
adc
bound
cld
jns
xchg
fwait
rcr
cmpsl
jle
stos
iret
loope
push
sbb
lock
add
add
into
int
test
pop
mov
stos
pop
and
insb
lea
nop
rol
jmp
test
out
in
fnstenv
inc
adc
jle
fnstenv
jl
ds
mov
sahf
xorl
cmp
aad
cli
js
pop
cmp
ds
jge
adcl
test
loope
fwait
mov
mov
aaa
lret
mov
mov
ja
mov
out
cmc
lcall
add
sbb
adc
addr16
fildl
cmp
out
sbb
dec
addr16
or
adc
jnp
jns
popl
sub
cltd
ss
dec
rcl
lods
mov
sahf
jmp
movsl
mull
inc
ljmp
pop
in
mov
daa
loopne
enter
and
mov
in
int
lcall
mov
jne
cmp
push
dec
ficoml
icebp
push
nop
jbe
lods
sub
lcall
mov
add
and
jecxz
lods
cltd
pop
or
adc
rcl
dec
xor
dec
rol
mov
mov
or
aaa
inc
insl
pop
jb
mov
pop
dec
fstl
sbb
mov
xchg
jle
xchg
xadd
pop
test
mov
ljmp
loopne
addb
mov
jmp
daa
xor
xor
inc
repnz
xor
sbb
mov
inc
pop
pop
in
jb
mov
test
shrl
popl
inc
add
fwait
test
mov
push
and
lods
xchg
into
sub
test
xchg
pop
pop
jnp
mov
mov
jne
sub
popaw
fimull
cs
mov
or
push
jecxz
pushw
repz
fdivrl
sbb
inc
push
fisttps
push
cwtl
sti
add
je
frstor
in
je
daa
clc
mov
sbb
outsl
dec
push
lods
or
call
cli
cli
or
daa
dec
inc
loopne
cmp
loope
movhps
lret
dec
lcall
lret
lock
sbb
jecxz
sbb
pop
pop
push
cmp
out
or
shrb
repz
jp
dec
aad
stc
in
push
daa
test
cld
sub
test
lea
jle
cmp
jb
or
fsts
push
sar
mov
adc
lret
jge
stos
xor
jno
inc
cmpsl
flds
push
cmp
shlb
pop
inc
jecxz
jbe
pop
mov
pop
jo
mov
lea
lds
inc
bound
stos
aam
dec
xor
mov
jg
pop
icebp
jb
xchg
add
inc
sub
leave
pop
pop
xchg
add
dec
push
jo
dec
aad
repnz
cmpsl
int3
sub
pushl
nop
out
adc
add
aaa
cmpsb
lcall
int3
cmp
mov
movsb
adc
add
or
add
jmp
das
insl
sub
into
xor
out
push
jbe
imul
pop
or
jo
fstpt
jb
cmpl
dec
add
and
andl
or
push
lods
insl
ret
inc
and
stos
jb
sahf
addr16
in
dec
and
jbe
dec
and
pop
test
cmp
std
dec
mov
popf
jo
push
adc
push
jnp
pop
cmp
int3
je
sbb
stos
sub
push
or
hlt
and
test
lea
dec
data16
clc
mov
das
mov
les
xchg
scas
mov
xor
jo
fcmovbe
and
pop
xchg
fs
adc
cld
test
lods
dec
jo
ds
mov
mov
out
ljmp
rorb
sbb
in
or
xor
iret
push
outsb
lcall
xor
aaa
push
lea
jno
call
addb
test
dec
push
jne
jg
sub
cmp
cwtl
call
jl
scas
cwtl
pop
pop
arpl
in
sub
xchg
inc
pop
push
jo
imul
repz
sbb
dec
cs
aaa
pop
sub
aam
dec
inc
shrb
clc
add
popf
pop
inc
lret
sbb
nop
cmp
into
pop
int
push
mov
or
mov
xor
cs
pop
mov
lock
push
das
push
fs
cmpsl
jmp
lock
push
push
mov
xor
inc
insb
cmp
iret
lret
mov
shll
mov
in
mov
enter
rclb
mov
pop
jns
shll
push
aas
lds
cmp
imul
shrl
fsubrl
jmp
std
xchg
pop
sbb
fcmove
daa
pop
les
sbb
lret
daa
sbb
insl
mov
xchg
mov
pop
aas
les
addl
lret
pop
cmp
or
jbe
lock
vprotq
popa
adc
inc
ffreep
mov
lret
inc
aad
cmp
mov
dec
aaa
arpl
xchg
into
pop
test
mov
sahf
ret
jl
jns
and
inc
test
inc
sub
aas
insb
inc
hlt
dec
or
cli
adc
xor
pushf
lcall
dec
insl
sbb
int3
inc
movsl
sub
sub
xchg
and
clc
outsb
push
out
pusha
imul
imul
sub
data16
arpl
push
sbb
mov
pop
psadbw
lds
cmp
cmc
pushf
lods
dec
mov
jno
mov
mov
test
or
gs
mov
add
cmp
ja
fwait
sahf
mov
pushf
scas
sbb
mov
inc
int3
leave
or
fcoml
dec
mov
jp
fistps
das
push
or
ret
push
adc
das
adc
fadds
test
sub
in
mov
scas
in
sub
ljmp
push
lods
stos
sti
lods
jo
inc
in
inc
mov
ja
xchg
or
push
ss
push
jle
or
sarb
push
imul
test
into
fstp
cmp
imul
pop
push
inc
js
cmpb
fimull
out
xor
add
inc
cmp
mov
and
fwait
das
popa
fnstsw
lds
pop
enter
es
insb
imul
aad
jno
in
xor
hlt
mov
xchg
loope
pop
pushf
xor
mov
scas
jne
cmp
inc
and
inc
mov
mov
push
jo
add
adc
ds
sbb
or
cld
stc
out
lea
sbb
sub
iret
mov
inc
and
cwtl
scas
cmp
push
jmp
sbb
sbb
sub
loopne
arpl
push
jne
nop
pop
call
push
mov
mulb
sub
push
mov
add
fstpl
adc
adc
xor
jle
mov
fistl
inc
pop
addl
std
cwtl
rorb
cmp
mov
fwait
pusha
jns
inc
jb
xchg
imul
xchg
and
dec
add
jb
and
lods
cwtl
sub
das
jle
mov
mov
ljmp
dec
add
jecxz
loope
js
mov
or
lock
cmp
pop
jg
int3
hlt
fiaddl
es
jnp
fistpl
push
jge
mov
jne
pop
jmp
jecxz
mov
dec
sbb
add
dec
and
add
ljmp
movsl
shlb
lea
xor
les
xchg
pop
hlt
ret
pop
mov
mov
push
int
push
int
pop
fildl
mov
lea
shlb
into
stos
add
je
mov
inc
pop
das
insl
cld
pop
out
push
fisttps
outsb
and
pop
mov
icebp
cmp
cs
std
adc
or
adc
cmp
sarb
push
enter
sub
xor
sub
out
les
daa
cmc
cmp
repnz
sub
add
cltd
scas
mov
mov
adc
cmpl
call
lret
inc
jmp
jns
xor
push
push
in
repnz
clc
sub
aas
inc
cmp
jb
xchg
fsubrl
push
insb
sbb
and
test
cmp
cli
in
test
push
ja
lock
and
test
testb
outsb
pop
sti
rcll
xchg
cmpl
rclb
faddp
inc
stos
adc
and
pushf
cmp
aam
js
mov
hlt
pop
mov
or
pop
sti
pop
or
lret
mov
add
push
jecxz
xchg
cmp
mov
sub
cmpb
sub
icebp
cmp
xchg
sub
jle
fsubs
rcr
push
data16
aad
inc
rolb
dec
push
aaa
test
mov
fnstcw
lcall
lods
cmp
inc
pop
xchg
add
pop
add
aad
psrad
ja
lret
imul
cs
lods
push
mov
enter
dec
jnp
out
dec
sahf
xchg
popf
push
mov
dec
pop
push
cmp
outsb
xorb
sbb
daa
cmp
mov
leave
rcrb
mov
cmp
je
inc
lock
jne
xor
sub
mov
out
push
sarl
pop
mov
aas
es
fs
dec
fldt
rcrl
lret
in
and
dec
push
loop
rcll
inc
dec
ficompl
outsl
mov
mov
outsl
popa
xchg
pusha
mov
lea
sub
mov
movsl
mov
xor
jp
or
cwtl
ljmp
popf
outsl
push
xchg
inc
vdivpd
dec
mov
outsb
jecxz
inc
jbe
gs
rolb
xor
and
adc
adc
stc
mov
xchg
adc
or
sub
dec
mov
ljmp
dec
cmp
sbb
fcoml
or
gs
pop
nop
lods
mov
xchg
mov
mov
pusha
jnp
push
cmp
out
inc
fnstsw
inc
shll
cmp
pop
push
push
stos
mov
and
lods
pop
into
push
add
out
mov
movsl
test
gs
in
into
leave
js
push
jbe
sbb
jo
inc
cs
mov
xchg
daa
push
shll
mov
jno
or
push
cmc
repnz
xchg
mov
cmp
movsl
push
imull
in
into
mov
imul
pop
insb
push
arpl
xor
jge
lods
call
in
xor
mov
or
je
in
pop
ljmp
fldenv
pop
add
push
jnp
mov
push
push
inc
add
mov
pop
fistpl
nop
mov
shrl
jp
insl
insl
sub
push
jl
div
mov
aam
sbb
inc
pop
clc
jge
cmp
mov
insb
syscall
xchg
scas
and
add
pop
jg
dec
jmp
mov
cmpsb
popf
stos
sbb
xchg
jmp
xor
scas
loopne
mov
ss
push
push
or
mov
ror
mov
push
inc
mov
das
int
inc
jno
mov
ret
xor
jle
mov
jne
sub
mov
icebp
push
fdivp
sbb
cmp
inc
les
aad
mov
add
xor
mov
mov
out
sub
xlat
cmpsb
mov
adc
mov
dec
lret
into
lahf
test
test
mov
lret
sub
mov
lcall
add
lret
mul
mov
pop
cmp
in
and
subb
xchg
or
xor
jb
sarb
icebp
popf
inc
cli
clc
out
mov
pop
jmp
test
adc
push
mov
inc
test
cmp
inc
daa
or
cli
xchg
push
stc
out
push
rcll
jge
shlb
rcl
push
repnz
inc
lea
and
ja
int3
xor
push
stos
jo
sbb
push
test
lcall
ds
inc
xor
test
pop
int
xor
imul
movb
ss
sti
mov
adc
mov
sbb
push
je
mov
xchg
xor
mov
andb
mov
cmpsl
jno
xchg
xor
lods
sub
mov
pop
pusha
push
std
sahf
insb
faddl
out
cwtl
repnz
xchg
and
rolb
mov
fstps
mov
repz
addr16
ljmp
pop
ljmp
out
pop
fimuls
sub
mov
or
fsub
movb
fwait
or
mov
add
divb
adc
sbb
lods
pop
sub
stos
sub
push
cmp
push
mull
out
lret
push
sub
lds
out
popa
or
fcom
xchg
lret
sub
push
inc
outsb
imul
lret
or
stc
and
rorl
cmpsl
fistps
into
xlat
fistl
or
dec
pop
mov
shll
pop
jecxz
lods
leave
das
inc
outsb
adc
ljmp
sti
dec
dec
mov
push
sbb
jp
aaa
mov
inc
mov
inc
jl
dec
xor
inc
cmp
jg
add
mov
sub
add
jo
iret
mov
jmp
rol
pop
loopne
or
popf
mov
int3
pop
jl
xchg
pushf
mov
add
insl
into
pop
mov
push
and
mov
sub
sti
sbb
cmp
add
mov
into
lods
stos
lods
xchg
jnp
inc
mov
ljmp
xchg
inc
sbb
or
cmc
in
std
push
pop
test
push
lods
cmp
mov
scas
popf
inc
movsb
fwait
mov
sbb
adc
pushl
and
incb
aad
inc
xlat
mov
xor
mov
sbb
nop
lcall
xor
fcoms
or
pop
je
adc
push
sbb
loopne
add
push
add
iret
or
jae
subb
hlt
jmp
aaa
adc
xchg
mov
loopne
std
nop
push
xorb
sti
mov
pop
fdivs
dec
xor
addr16
sbb
cmp
das
lea
cltd
mov
test
lret
es
imul
add
mov
fs
xor
or
loope
push
pushf
mov
dec
das
hlt
or
std
push
xor
ljmp
test
xchg
sbb
xor
incl
mov
scas
fisubl
les
push
sahf
mov
lods
mov
shl
mull
inc
inc
push
mov
aam
pop
inc
mov
push
inc
into
mov
int
daa
in
or
mov
cs
cwtl
daa
sbb
sbb
xchg
nop
add
sbb
inc
in
inc
nop
mov
push
push
mov
push
mov
das
lcall
sbb
or
adc
out
hlt
int3
notl
js
cmc
test
add
mov
inc
bnd
jae
mov
mov
in
pop
into
pop
xchg
jmp
bound
push
mov
adc
ja
adc
jno
mov
pop
stos
or
push
mov
insl
lret
sbb
adc
int3
dec
pop
fdivrp
lahf
push
cmc
js
xorb
andb
cmc
fldenv
mov
out
cli
sub
pushf
and
cmp
lahf
cmpsl
cmp
dec
fcompl
pop
cmpsb
cmp
daa
in
add
mov
inc
dec
shrb
push
ret
xchg
add
scas
xchg
aaa
sub
icebp
cld
pusha
xchg
rcl
cs
xchg
and
cmpsl
mov
or
ret
push
push
sub
xor
es
jne
jmp
inc
dec
push
mov
out
dec
xchg
ds
test
mov
jo
mov
dec
idiv
mov
ret
out
movsb
shrb
xchg
adc
xor
jnp
hlt
out
cltd
sbb
or
loope
dec
jmp
pop
test
sbb
les
fsub
mov
out
lcall
sub
mov
mov
ja
into
out
cs
xchg
test
mov
jge
mov
dec
lret
xor
aad
cmp
push
dec
xchg
and
repz
cmpsb
in
popf
cltd
out
or
dec
ret
inc
push
bound
mov
add
adc
data16
nop
popa
pop
fadds
inc
add
mov
in
test
cmp
or
xchg
inc
add
addl
sbb
add
das
pop
or
mov
jo
cmp
fwait
xorps
insl
xlat
punpckhdq
flds
add
and
jg
dec
push
cmp
sarl
dec
data16
movsb
push
cld
bound
jg
gs
icebp
int
sub
and
out
aam
icebp
xchg
loope
add
push
sbbl
cmp
cmc
mov
mov
jbe
fcmovne
movsl
fwait
into
ds
and
pop
xlat
in
lcall
sub
mov
iret
push
mov
cmp
fstl
inc
jbe
or
nop
mov
push
and
dec
rolb
cmp
cmp
mov
mov
sbb
sbb
inc
and
ret
gs
push
sahf
sub
cmp
ds
inc
mov
or
fsubs
xchg
xor
adc
call
sub
jne
out
xor
aam
mov
dec
sub
lret
andl
adc
mov
fcoms
and
mov
xchg
in
neg
ror
inc
or
mov
xor
xchg
cmp
pop
int3
xor
xor
sbb
push
sub
pop
pop
roll
incb
shrb
pop
popf
testb
lcall
out
out
inc
fcoms
xor
sub
push
pop
and
mov
sbbb
sahf
mov
nop
sub
add
mov
jmp
clc
add
xor
pop
xchg
sub
dec
push
mov
xchg
inc
push
aam
aam
adc
cmpsb
stc
repnz
je
cmp
rolb
dec
dec
leave
and
cmp
jg
mov
loop
cmc
mov
lcall
or
sbb
loopne
lret
or
in
popf
cmp
lds
mov
push
or
pop
inc
ds
fsubrs
jae,pn
xor
inc
and
scas
xchg
fistps
stos
jnp
cld
dec
test
mov
xchg
and
fwait
sbb
outsl
movsl
in
mov
in
pop
in
mov
out
xor
std
fstps
adc
call
rcrb
addr16
pop
xchg
ja
in
jge
test
test
mov
fcomps
cs
jmp
dec
jns
or
xor
arpl
or
inc
xchg
push
lahf
xchg
lcall
out
cmpb
cwtl
and
loopne
mov
jnp
shl
int3
sub
mov
rol
xor
push
mov
lcall
fiaddl
pop
je
push
rcrl
or
sbb
sbb
ljmp
ret
addr16
xlat
push
sahf
iret
cmp
sub
leave
push
mov
into
dec
das
out
add
push
divb
jne
or
xor
sbb
jno
aam
push
dec
pop
aaa
jmp
ss
inc
sbb
es
sub
push
fidivs
in
vphaddwd
push
xchg
add
cmp
outsl
test
dec
pop
fsubrl
pop
popf
mov
mov
cli
xchg
inc
loopne
dec
adc
fistps
xor
cld
out
loop
fwait
pusha
mov
push
in
subl
cmp
sbb
xchg
xor
mov
lret
cmp
push
shlb
mov
shll
mov
fcmovb
jno
cld
fdivr
jg
xchg
movsb
jmp
push
dec
jbe
gs
xchg
repz
lahf
xchg
push
shlb
adc
cmpsl
dec
dec
push
jae
mov
xchg
scas
mov
mov
sub
inc
cmp
cwtl
jne
xorb
fiadds
cmp
push
enter
or
cmp
mov
and
dec
sti
adc
scas
adc
div
lea
pusha
pushf
pusha
xchg
dec
andb
es
mov
outsl
push
push
mov
jmp
jg
sbb
pop
cmpsb
pop
push
jmp
in
ret
popa
push
mov
and
aas
arpl
sub
ret
xchg
lds
popf
cmp
pop
iret
shlb
xchg
jp
push
into
orb
push
jp
xchg
ja
scas
sub
fwait
nop
pop
push
jb
popf
add
std
and
imul
repnz
nop
xchg
adc
dec
aad
jbe
pop
fs
cwtl
adc
pop
in
lret
pop
push
push
fnstsw
push
fwait
test
mov
xor
fldt
repnz
stc
je
loopne
es
xor
adc
int3
lcall
rorl
dec
push
cli
int
fs
shlb
aas
shlb
cli
mov
clc
divb
loop
lahf
test
pop
xchg
ljmp
or
dec
push
repnz
lea
aam
scas
rcll
sbb
rcll
xchg
cmpsl
shrb
addr16
xlat
daa
in
lods
pop
movsl
mov
and
outsl
stos
mov
jo
and
cwtl
les
fbld
or
sub
std
or
into
adc
stos
cmp
xchg
xor
xor
cmp
add
ret
aam
aas
sbb
push
ret
pop
pusha
and
sub
mov
enter
xchg
jl
movsb
pop
sbb
daa
stc
ficoml
pop
add
pop
inc
hlt
inc
pushf
and
mov
out
call
insb
outsb
mov
jae
les
sub
inc
sahf
mov
push
pop
fld
mov
bound
int
add
mov
orl
sub
out
scas
aaa
cmpsb
hlt
jne
sbb
push
ljmp
adc
mov
inc
push
jecxz
xlat
pop
out
adc
push
cmp
push
cmp
and
mov
movsb
ds
popa
cltd
and
adc
out
push
repnz
xchg
enter
test
addr16
mov
jp
sahf
push
mov
cmp
mov
call
mov
dec
iret
mov
das
mov
hlt
js
mov
out
and
dec
lahf
inc
push
mov
inc
test
test
add
jnp
cli
mov
push
aad
sti
xor
test
jb
mov
test
and
push
lods
cmp
pop
stos
push
fnstenv
push
imul
or
push
dec
sahf
roll
mov
jle
lds
repz
pushf
pop
mov
test
ds
dec
adc
test
int3
gs
mov
insb
insb
les
push
push
test
pop
xchg
stos
and
mov
in
cltd
or
andb
push
and
inc
js
mov
pop
lcall
fcoml
lret
loope
push
filds
xchg
sbb
mov
shll
lahf
ret
inc
lahf
jbe
pop
push
mov
imul
push
cmpsb
jb
sahf
scas
dec
jecxz
mull
cld
in
jmp
loopne
add
push
push
add
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
andl
xor
subl
xor
add
adc
movl
mov
jmp
mov
mov
notl
inc
movl
mov
movl
mov
cmp
je
mov
mov
sub
xor
mov
movl
mov
movzwl
xor
movzwl
xor
add
movl
movzwl
jmp
mov
scas
sub
insb
ss
dec
push
sbb
loopne
push
jmp
in
cwtl
jnp
test
jg
xchg
pop
lods
sub
mov
adc
bound
cmpsl
xorl
add
jp
pop
xorb
dec
sarl
ljmp
adc
mov
and
xor
dec
push
push
lock
xchg
push
lods
or
add
adcl
loop
cmc
les
push
inc
into
sbb
je
aas
jb
mov
int3
faddl
cmp
pusha
inc
push
ljmp
pop
pop
push
test
sub
xor
fisttpll
mov
sti
aaa
lahf
repnz
dec
shrl
xchg
cltd
mov
dec
xchg
mov
add
dec
lcall
sub
ss
xchg
push
xchg
cmpsl
stos
shlb
cmp
scas
mov
dec
shl
add
xor
sbb
cs
add
xchg
fidivrs
scas
mov
push
sbb
cwtl
cmp
adc
add
lds
inc
sub
cwtl
adc
pop
shll
insb
stos
lcall
repnz
and
jbe
push
dec
orb
dec
loop
xchg
lret
fs
shl
jno
je
jmp
mov
jns
jecxz
pop
mov
push
mov
lcall
out
outsb
leave
lea
adc
fcomip
imull
pusha
jae
mov
pop
or
addr16
or
push
xlat
dec
and
icebp
and
and
in
ds
pop
sti
and
test
repnz
testl
inc
aad
cmpsl
mov
mov
fists
out
mov
push
sub
mov
pushf
in
push
push
adc
xchg
and
in
loope
cmpsb
lret
xor
mov
mov
sub
fsub
xchg
je
xchg
cmpsl
ret
sub
push
das
mov
mov
pop
fldlg2
adc
gs
mov
push
out
mov
sub
pop
ret
cwtl
xchg
mov
sbb
out
movsb
dec
cmc
xchg
insl
sbb
sbb
orb
shll
enter
lret
out
push
es
mov
mov
mov
dec
ljmp
nop
repnz
jb,pn
andb
xchg
imul
cmp
jge
lods
and
mov
xorl
add
leave
cli
fistpl
loop
inc
or
cmc
fstps
jns
daa
out
cmpsl
push
insb
cmp
lahf
sbb
pop
in
andb
cmp
push
mov
xchg
push
jecxz
out
jae
xor
in
cmc
sub
push
shll
or
frstor
inc
sbb
hlt
inc
xchg
push
dec
push
out
jmp
xchg
cli
call
adc
in
subl
test
and
out
jecxz
add
into
sbb
ljmp
and
inc
hlt
xor
aam
cmp
filds
xor
aad
xor
add
pop
mov
xchg
arpl
insl
fldenv
adc
push
nop
push
mov
out
sbb
icebp
xchg
fbld
inc
cmp
push
or
lret
fucomip
and
mov
andl
in
and
xor
scas
aad
movsb
mov
xchg
sarl
lahf
push
add
lea
dec
pop
xor
test
sub
call
movsl
xchg
and
cmp
fcomip
arpl
jae
cmp
test
push
ror
pushf
fcoml
sub
rcrb
lea
mov
mov
push
xchg
sbb
sub
pop
jns
xchg
and
pop
dec
sub
aam
bound
adc
or
lods
lret
jns
cmc
xchg
mov
sbb
sahf
lcall
xor
sub
add
cld
dec
pop
xor
pop
mov
mov
ss
xorl
xchg
pop
mov
adc
arpl
or
or
jmp
js
jnp
xchg
imul
pushf
mov
cmp
and
cmc
cmc
test
sub
imul
ja
jmp
jp
daa
inc
xchg
and
arpl
cmp
add
int
outsb
cs
inc
lahf
arpl
xchg
insl
dec
mov
cs
sub
jle
call
pushf
fidivl
xor
enter
dec
mov
cmpsl
jg
inc
sub
sbb
lcall
sub
jmp
xchg
sub
xchg
sub
sbb
aad
stos
movsb
xor
xchg
and
out
or
xor
dec
call
jne
cmp
xchg
test
movsl
das
cmpsl
adc
fcmovne
push
les
lea
sbb
lods
mov
mov
jne
cmp
mov
cs
mov
adc
lcall
xlat
outsb
rcll
sbb
jmp
sbb
push
push
sbb
sub
notb
idiv
dec
dec
test
paddw
ficompl
push
mov
sbb
je
and
aaa
sub
adc
jae
sbb
dec
xor
fs
shrl
push
jae
jmp
jo
scas
xchg
aaa
hlt
cmp
jecxz
or
push
mov
cmp
push
and
mov
cmp
cmp
dec
jno
and
adc
lock
fwait
jnp
inc
sahf
cmovns
push
jl
adcl
mov
xor
jecxz
stos
aaa
ljmp
cmp
push
mov
in
pop
jo
call
or
scas
or
mov
or
dec
adc
xchg
push
movsl
lods
int3
loope
imul
mov
ret
pushf
aas
aad
push
xchg
jns
jecxz
push
int
push
add
outsb
out
je
loopne
push
push
hlt
das
inc
inc
xorl
and
dec
popa
in
fmull
sbb
dec
notl
mov
push
mov
mov
lods
out
adc
mov
push
or
out
pop
ja
adcl
cmp
mov
sub
cmp
sub
pushf
jo
mov
xchg
fwait
mov
mov
push
rorl
cmp
js
or
pcmpeqb
jb
pmulhw
inc
mov
inc
scas
adc
mov
xchg
mov
outsl
in
pop
mov
stos
lock
scas
cld
cmp
mov
in
mov
pop
outsb
mov
rclb
scas
xchg
lds
mov
cmp
dec
jnp
mov
aas
mov
push
sub
shll
das
paddq
imul
aas
xchg
cld
aad
cmp
lret
pop
hlt
insl
sbb
xchg
loopne
add
cs
test
xor
in
sbb
ljmp
lahf
not
scas
inc
jnp
adc
lahf
aam
xorl
imul
std
push
push
jnp
cmpsb
sub
pop
and
sbb
fcoml
shlb
lods
pusha
mov
loope
and
fs
jo
adc
xchg
mov
arpl
mov
call
lea
out
das
mov
out
jle
cmpsb
jp
and
fucomip
jmp
test
mov
test
gs
cli
cwtl
cmp
aaa
ss
leave
sub
fwait
cmc
lcall
subb
in
push
sar
and
or
in
xor
inc
dec
xchg
or
and
cmc
jge
fbld
sub
cmc
jp
aad
ffreep
ficoml
jp
outsb
fmuls
mov
inc
outsb
or
fcom
lahf
push
dec
icebp
mov
cmp
jle
rorl
jns
sbb
xchg
mov
decb
cmp
dec
imul
enter
mov
inc
jns
cs
xor
adc
int3
cld
push
dec
aam
dec
add
out
jne
or
xchg
jno
lea
addb
dec
or
or
ljmp
jp
pop
mov
call
xor
sarl
cwtl
fsubr
push
jb
dec
cmp
jb
test
jg
inc
ud1
push
mov
ja
mov
and
daa
ja
mov
mov
sub
out
xor
xor
jb
ret
sbb
cld
mov
jg
pop
adc
inc
xor
jg
cs
addr16
and
xor
int
lret
loopne
outsl
or
add
sub
push
sub
iret
mov
add
jo
push
cltd
in
xchg
lea
mulb
lcall
push
out
notl
sbb
mov
int3
outsb
mov
or
lcall
sbb
jl
mov
fldcw
sbb
imul
andl
push
lods
push
lahf
ret
movl
or
inc
push
xchg
jne
loopne
mov
popf
cmc
xor
jg
xor
push
mull
in
and
lock
div
xchg
rorb
in
pop
mov
out
jecxz
and
stos
leave
sbb
dec
mov
call
cmp
inc
inc
movsb
inc
pusha
pusha
ja
pushf
mov
sti
hlt
shll
imul
fadd
xor
sbb
mov
adcb
int3
lock
cmp
shl
add
out
mov
negl
std
sbbl
jl
out
fcomi
rcll
lea
rcl
and
mov
sbb
pop
add
outsl
jp
enter
scas
sbbb
jns
xchg
pop
fdivrp
mov
lcall
and
aas
push
dec
push
loop
jmp
sub
lods
mov
in
test
pop
sbb
jge
imulb
repz
loope
into
js
out
ret
or
xchg
subl
mov
stc
incb
les
and
add
inc
dec
and
jp
call
nop
sbb
sbb
push
inc
pop
or
outsb
or
ret
daa
mov
adc
stc
test
push
leave
cmp
pop
icebp
test
or
std
pop
or
or
arpl
pop
add
js
aad
push
add
pushl
jnp
flds
mov
sbb
enter
jne
mov
inc
fwait
mov
sti
inc
leave
sarb
daa
and
pop
dec
fldcw
sbb
inc
enter
xchg
xlat
jb
mov
xor
xchg
and
sbb
aaa
mov
jmp
inc
call
jp
mov
jg
mov
inc
aaa
mov
sub
addr16
push
out
mov
jmp
int
mov
xchg
inc
add
or
adc
push
sbb
cmp
mov
ja
pusha
repz
and
sbb
leave
mov
xor
je
in
dec
jo
cld
xlat
sarb
xchg
arpl
xor
scas
int3
decb
repz
out
lret
xchg
stc
mov
test
imul
out
std
ficoms
repz
mov
mov
or
pop
test
or
flds
and
dec
insl
jle
es
fisubs
mov
not
inc
cli
fwait
cmp
stos
mov
arpl
rcll
lret
lock
jb
rorb
ss
sub
dec
xchg
mov
adc
sbb
mov
jge
or
ja
imul
std
loope
inc
jb
inc
js
sub
in
in
jge
and
pop
mov
push
sahf
movsb
mov
mov
std
aad
xchg
je
out
add
gs
adcl
pop
shll
scas
movsb
bound
mov
cmpb
adc
cwtl
insb
mov
or
xchg
jae
add
jp
push
lock
dec
fstpl
outsb
mov
xchg
les
lret
inc
shll
cmp
negl
mov
stos
imulb
push
aad
addl
push
adcb
and
adc
inc
pop
inc
and
lret
mov
fdivl
sbb
mov
jae
add
push
mov
dec
out
mov
pop
dec
jnp
rolb
xor
mov
and
scas
lret
dec
jle
fsubl
addl
adc
xchg
bswap
xchg
movsl
mov
rcll
adc
in
fs
adcl
cs
fwait
sbb
jl
jg
out
scas
inc
adc
add
rorb
rcl
in
jno
daa
inc
push
and
xchg
pop
push
lds
bnd
mov
sbb
mov
jecxz
mov
or
jg
mov
push
jnp
add
push
push
outsb
les
jo
mov
mov
dec
movsb
hlt
int3
sbb
jmp
das
lcall
inc
add
adc
adc
mov
pop
stos
jnp
adc
xor
pop
fdivrp
inc
in
jmp
enter
insl
mov
outsb
xchg
ljmp
inc
movsb
das
push
and
hlt
addr16
sub
insl
adc
add
or
sbb
es
lods
xchg
mov
jne
jg
push
gs
nop
dec
mov
xor
xchg
xchg
ja
mov
or
call
outsb
ret
dec
loope
xlat
jmp
and
and
sarb
nop
adc
fdivrl
test
mov
xor
pushf
repz
les
clc
add
loope
stos
sbbl
sbb
sbb
lds
out
cmp
dec
push
add
sub
cmp
mov
aas
cmpb
xchg
pop
pop
setge
xchg
or
jecxz
mov
sbb
imul
and
nop
data16
adc
push
mov
dec
addr16
scas
or
mov
inc
push
fcmovb
mov
outsl
imul
cmp
mov
into
fbstp
in
sbb
mov
pop
xchg
cmp
mull
flds
popa
lock
sub
stc
pop
jecxz
xchg
cmp
xchg
daa
add
fwait
js
cmp
xor
fnstsw
das
cmc
mov
bound
into
and
idiv
pop
outsb
dec
jle
and
and
push
rcrb
outsb
jns
jge
and
add
out
push
insl
insb
inc
fbstp
aad
sub
mov
mov
xor
push
sub
push
inc
jnp
rorl
std
adc
ljmp
ljmp
mov
push
aas
jne
pop
cld
fadd
idivl
xchg
les
in
pop
fists
cwtl
je
in
stos
ret
hlt
fwait
std
and
or
arpl
or
adc
insl
call
sub
add
xor
adc
loop
inc
in
std
cs
xchg
adc
or
xlat
daa
xor
lret
adc
inc
add
stos
mov
xor
mov
mov
dec
inc
fcompl
adc
jbe
les
enter
jl
fwait
inc
dec
ljmp
mov
imul
mov
add
xchg
xchg
xchg
xor
lret
sbb
pop
jae
insl
dec
inc
xchg
dec
dec
popa
and
adc
mov
imul
testb
adc
arpl
ja
push
cmpsl
cmpsl
cmp
sub
scas
insl
imul
cmp
loop
pop
je
xchg
pop
popf
xchg
and
push
sbb
push
pop
das
inc
inc
pushf
xor
mov
int3
adc
movl
fs
rclb
dec
adc
push
jmp
xor
test
ja
insl
lods
xchg
in
mov
xor
mov
cli
aaa
rorl
test
clc
in
daa
fcoms
push
cs
or
in
mov
mov
clc
cmpsb
loope
jl
sbb
aas
pop
lcall
insb
jb
cmpl
ds
imul
push
mov
int3
push
mov
cmp
inc
mov
inc
pop
adc
cmc
cmp
aam
add
and
and
sbb
aam
jo
sbb
jl
mov
fsubr
call
push
int3
lret
fcomip
or
scas
sub
rcrl
dec
inc
cmp
dec
ja
stos
push
or
cld
or
or
aas
imul
test
adc
cmp
adc
cltd
jecxz
cmp
out
adc
cmp
stos
outsb
ljmp
dec
mov
dec
loope
mov
add
lahf
mov
in
fimull
push
add
jnp
adc
jecxz
loopne
sub
jg
pop
mov
or
xchg
xor
cwtl
push
jg
mov
push
cwtl
sti
fwait
mov
mov
adc
out
jb
inc
mov
push
inc
xor
cltd
add
int3
test
mov
lock
je
cwtl
and
push
push
push
and
fisubl
dec
adc
mov
pusha
sbb
add
sub
scas
inc
stc
rol
mov
jne
idivl
inc
movsl
insb
rcrb
inc
mov
fsubl
and
cld
rcrl
add
pop
leave
jecxz
loopne
test
scas
mov
out
inc
push
imul
xchg
fcmovbe
gs
cltd
rclb
sbb
adc
push
mov
or
fwait
xor
pushf
out
iret
in
add
cmp
mov
add
jle
cmp
dec
xchg
loope
icebp
cltd
in
jge
sbb
sub
push
aad
dec
int
pushl
jnp
or
pop
test
mov
add
lock
and
cmpsb
mov
jb
rcr
das
loopne
push
sbb
adc
push
pop
push
scas
ja
ret
jg
add
inc
adc
jbe
push
jle
push
stc
std
mov
lds
add
inc
faddl
cmp
dec
loop
std
and
xor
inc
daa
adc
es
jno
es
xor
jae
push
sub
cmp
dec
mov
enter
pop
adc
icebp
enter
inc
es
ret
in
mov
adc
mov
cmp
jecxz
lock
xchg
cmp
out
jp
insl
jmp
add
test
or
add
lea
js
ja
jmp
add
push
shrb
dec
xor
jae
xchg
and
and
mov
lds
dec
subl
mov
sbb
insl
mov
cld
or
jne
scas
jle
cmpsb
and
xor
mov
js
sub
je
xor
nop
mov
stos
mov
stos
mov
popl
insl
bound
je
xor
repz
inc
nop
loopne
cmp
push
loopne
pop
xchg
aaa
inc
add
das
leave
pop
mov
xchg
dec
lock
fwait
mov
fisubs
dec
mov
idivb
jo
pop
sub
pop
push
bound
dec
in
mov
sbb
mov
popf
in
push
jno
adc
cmp
sbb
pop
xchg
fdivrs
loopne
cmpsl
outsb
aad
shrl
iret
push
insb
mov
mov
mov
inc
aam
jae
fcmovnu
repz
outsl
mov
mov
in
daa
insb
cld
sbb
dec
mov
jns
in
mov
arpl
sub
push
jg
mov
sub
cwtl
aad
out
mov
dec
lret
add
add
adc
lea
xor
or
out
mov
mov
and
sbb
jp
and
movsl
movb
testl
mov
jmp
sti
shrl
js
mov
fs
out
mov
push
adc
incb
cmpsb
mov
push
cmp
jle
inc
imul
sub
push
je
ret
or
xchg
cmpsb
andl
add
mov
jle
add
cmp
rorb
cmp
and
mov
mov
push
sbb
insb
sub
in
icebp
sbb
xor
xlat
pop
pop
and
adc
and
cmp
lret
and
int3
test
out
std
cmp
jecxz
repz
adc
mov
adc
filds
sbb
push
repnz
decl
fsubr
and
int3
and
pop
lret
dec
nop
push
mov
jmp
repnz
mov
and
lcall
rcr
push
mov
cwtl
jle
push
pop
mov
stos
mov
add
pop
repnz
mov
sub
mov
repz
mov
outsb
bound
jg
dec
xor
fwait
stos
jg
mov
pop
pushf
mov
jmp
push
daa
and
and
add
push
aas
pop
lcall
pop
dec
mov
gs
loopne
addr16
rclb
fldcw
add
xor
insb
out
int
push
xorb
fists
adc
mov
idivb
lods
ss
mov
dec
push
mov
xor
cmpsb
dec
fucomi
push
ljmp
int3
test
stos
ret
cmpsl
imul
mov
pop
aam
cmp
lcall
dec
push
or
nop
lods
xor
jecxz
arpl
mov
fildll
mov
fs
fs
or
push
fwait
mov
xchg
mov
sbb
xor
stc
pushf
into
mov
das
insl
sahf
fsubs
push
roll
xchg
adc
in
or
mov
push
inc
mov
and
mov
mov
ja
dec
imul
lods
in
outsl
pop
pop
shl
lock
push
adc
dec
dec
inc
ja
test
xor
jecxz
cmp
xor
adcl
or
sbb
nop
fldcw
aas
js
ja
or
jge
and
loope
scas
fcmovnb
mov
pop
push
outsl
dec
into
in
adcb
adc
in
leave
and
insb
out
xorl
cmpsb
cltd
imul
push
mov
xchg
mov
jle
mov
ljmp
sbb
cli
loop
popa
adc
es
jbe
mov
call
or
and
pop
addl
adc
or
add
imul
shlb
adc
mov
lods
icebp
pushf
dec
xchg
nop
pushf
sarb
ret
or
test
mov
pop
stos
lods
icebp
jge
sahf
jnp
cmp
ret
push
movsl
add
mov
inc
mov
push
or
inc
inc
jge
push
inc
mov
outsb
inc
cmpsl
cmp
fdivl
std
jo
ret
dec
mov
insb
add
daa
sub
and
cld
pushf
sub
xor
inc
dec
loope
sbb
xchg
push
out
add
dec
arpl
pop
je
arpl
cld
xchg
loop
xchg
jl
insl
fsubp
lret
jne
pop
xchg
sbb
daa
jae
decl
cmp
xchg
addl
mov
sub
sub
cmpsl
cli
inc
sbb
dec
inc
test
pop
sub
xor
jne
inc
rorl
repnz
xor
ret
repz
mov
xchg
into
mov
mov
mov
cs
std
jb
and
or
push
subl
jbe
rcrb
xchg
inc
sbb
int3
xchg
mov
div
pop
xchg
loope
jo
mov
fs
subb
movsb
push
inc
rorl
sub
nop
lret
fildl
fcmovne
push
jl,pt
sbb
cmp
push
rorb
adc
dec
dec
jge
cli
push
stos
imul
mov
jbe
scas
lods
dec
rcrl
loope
jo
lret
inc
mov
push
xchg
mov
aaa
cmp
loope
decl
out
cmp
jge
push
hlt
pop
out
and
fs
push
into
or
and
mov
pop
in
daa
adc
push
and
sbb
xchg
subb
nop
xchg
and
and
xor
rorb
shll
and
dec
add
pminub
sbb
sub
dec
in
add
xchg
mov
mov
pop
or
cmpsl
push
xchg
jmp
inc
mov
mov
aaa
xchg
dec
mov
mov
adc
inc
push
rolb
negb
jmp
jno
xorb
popa
or
sbb
adc
arpl
jbe
popl
jg
xchg
mov
outsl
mov
xchg
das
lcall
out
shll
inc
cli
icebp
out
dec
enter
cmpsb
jne
add
ret
outsl
inc
mov
cmp
stos
into
test
mov
inc
in
mov
imul
cmpsb
xor
in
jmp
cs
dec
xor
fstpl
mov
fcmovnbe
out
stos
scas
sub
fwait
es
pop
dec
aad
sub
mov
adc
inc
inc
stos
dec
arpl
loop
out
adc
and
ret
call
mov
bound
popa
push
notl
fisubs
cwtl
leave
shlb
jg
sahf
orb
fwait
dec
or
rolb
push
mov
or
jecxz
push
mov
or
pop
push
push
jb
fnstenv
mov
pop
mov
pop
movsb
int3
mov
mov
stos
mov
sub
nop
dec
or
mov
jnp
pop
mov
loopne
sub
sbb
int
arpl
dec
and
fcoms
xlat
jb
divb
and
cmp
rorb
jg
mov
push
mov
jg
mov
out
popf
xor
push
jmp
pushf
outsl
xor
or
dec
push
test
lret
or
dec
daa
testl
xor
stc
xlat
loope
dec
sti
shrb
add
or
pop
dec
shlb
cmp
push
push
shr
ret
jl
mov
adc
mov
inc
push
dec
add
mov
pushf
cmp
imul
out
arpl
and
fldenv
sbb
stos
cmp
mov
mov
icebp
std
rcrl
mov
mov
adc
cmp
sbb
mov
mov
sub
ja
leave
jae
rorl
imul
sub
or
push
xchg
jmp
push
add
jae
jp
ljmp
dec
jge
xchg
stc
test
xor
and
nop
pop
jg
mov
cmp
jp
fisttpll
aam
je
add
sbb
leave
xor
mov
xchg
loope
icebp
jnp
push
clc
and
mov
jbe
or
mov
shrb
aaa
popa
or
aad
sahf
movb
sub
sub
jne
movsl
xchg
stos
minps
sub
mov
sbb
add
out
jae
pop
popaw
xchg
int
addb
jb
insb
xchg
adc
jg
pop
test
sbb
aam
push
cmp
in
les
sub
jecxz
subl
pop
ljmp
push
xor
gs
xchg
pop
lea
lret
add
adc
mov
in
push
adc
xchg
or
popa
dec
ljmp
insl
ret
jl
pop
ja
or
fldenv
xor
sbb
jbe
jo
and
cmp
sub
xor
xchg
adc
in
pop
xchg
add
leave
cmp
jae
dec
cmp
outsl
xor
inc
mov
jno
or
mov
ss
sub
mov
xor
stc
mov
cmp
mov
push
adc
lods
push
cmp
sbb
adcl
xchg
das
insl
xlat
jno
mov
scas
negb
mov
and
pop
dec
pop
adc
scas
ret
ljmp
pop
lret
aam
jmpw
xchg
lock
leave
sar
jo
shlb
cmp
or
xchg
adc
add
jae
pushf
or
mov
rorl
cs
mov
pop
cwtl
fs
lcall
imul
cs
push
add
xor
jp
jbe
jle
mov
inc
jns
lock
ja
int3
cmp
and
mov
lods
xor
jg
in
dec
nop
sbb
pop
gs
push
ja
mov
adc
xor
mov
dec
cmc
xchg
repnz
stos
or
arpl
test
je
mov
lods
iret
lods
popa
outsb
xchg
and
and
jnp
stos
int
jae
xchg
pop
dec
js
push
loopne
mov
fs
or
fsubrs
or
cmpsb
sub
ja
sahf
mov
mov
xchg
or
pop
ja
jno
jns
lea
call
sbb
enter
or
jo
les
xchg
cli
mov
push
stc
aad
adc
pop
sbb
in
add
mov
ljmp
or
push
push
test
lods
xchg
add
hlt
fsubr
cmp
jnp
inc
testb
and
decb
lods
arpl
out
mov
push
popf
test
cli
sahf
in
adc
or
mov
dec
jmp
mov
dec
imul
dec
cli
incl
and
sti
mov
nop
xchg
adc
pop
sti
insb
push
jo
outsb
dec
xchg
jge
sarb
jmp
adc
inc
iret
in
scas
aam
stc
in
scas
daa
insl
outsl
movsb
incb
bound
adc
cmpsl
lcall
mov
scas
jae
cs
xlat
mov
cs
jle
pop
sbb
scas
sbb
mov
je
or
mov
scas
cmp
cmc
imul
icebp
dec
daa
mov
cli
xchg
adc
aas
icebp
dec
pusha
xchg
aas
mov
pop
or
cmp
cmp
popf
into
cltd
iret
push
gs
fs
sub
xchg
xor
inc
xchg
mov
fs
fisttpl
jb
int
xchg
dec
push
adc
jmp
push
fwait
shl
push
cli
addr16
orl
loopne
ret
mov
pusha
cmp
pusha
pop
roll
cmp
divl
dec
and
dec
jecxz
jmp
ja
jbe
loope
out
xchg
int3
addr16
jle
push
int3
mov
loope
mov
stc
in
das
xchg
movsl
push
sbb
loop
ja
xchg
push
shrl
ljmp
out
jmp
insb
movsb
mov
xchg
pop
jmp
mov
adc
shl
test
not
push
les
popa
mov
mov
xorb
fldenv
cwtl
sub
iret
filds
cld
outsl
lret
enter
ror
addr16
repz
cmpsl
inc
pop
xchg
jg
push
lea
inc
ret
jl
pop
dec
inc
add
lahf
cmpsl
add
xor
loope
mov
jg
sub
mov
jae
outsl
cmp
and
push
enter
aad
jb
ror
in
stc
mov
mov
dec
jb
into
mov
inc
mov
movsl
add
nop
movzbl
mov
gs
and
jl
or
and
push
pop
test
call
loop
inc
into
push
in
add
and
pop
mov
subl
mov
inc
fimull
mov
cmpsb
repz
ljmp
loope
lahf
popa
sti
xchg
adc
adc
xor
test
incl
add
mov
mov
sub
mov
movzwl
add
xor
add
add
movl
mov
movl
mov
movl
jmp
mov
mov
xor
xor
add
adc
mov
mov
mov
jmp
fcmovnu
and
je
jbe
xchg
mov
and
mov
push
jns
jnp
test
cmp
sbb
pusha
rcrb
adc
jle
sbb
jl
push
mov
inc
adc
pop
lock
and
in
loop
int3
ret
js
and
jne
jg
fisubrl
ret
repz
adc
mov
inc
adc
jo
xor
fldl
mov
mov
pop
cld
popa
jo
mov
sahf
test
inc
sub
js
loope
jns
addb
xchg
mov
pushf
ss
or
cmpsb
sub
inc
inc
insb
adc
testb
lods
stos
jmp
in
jg
jle
push
push
xchg
scas
inc
dec
xchg
cmp
xchg
pop
stos
push
fwait
jmp
or
rclb
insl
xor
es
movsl
dec
in
sahf
test
fisubrs
stc
pop
cmc
test
pop
jecxz
lea
sbb
jnp
stos
jne
ja
popa
daa
out
or
cmc
jne
ja
dec
idivb
jecxz
dec
lods
popf
loopne
outsb
pop
xchg
or
mov
adc
pop
mulb
xchg
jno
arpl
mov
out
dec
inc
dec
cmp
dec
mov
test
inc
pop
leave
sub
scas
leave
push
adc
pop
addb
and
inc
pop
sti
movsl
aam
clc
push
ljmp
and
repz
ljmp
clc
ja
mov
cmc
gs
xor
lret
into
notb
dec
in
testb
jae
bnd
push
mov
negl
push
pop
and
add
std
mov
sbb
adcl
icebp
mov
in
cltd
sti
test
pop
sub
and
aaa
std
lahf
xchg
imul
into
loop
es
cli
aaa
test
mov
push
loope
cmp
outsl
xchg
lahf
sbb
imul
mov
push
jmp
daa
inc
inc
dec
push
std
adc
mov
decb
loope
int
push
cmp
and
enter
cmp
push
nop
roll
data16
mov
xlat
andb
push
jb
outsb
sbb
pop
out
imulb
les
ret
fldcw
xlat
in
xor
push
test
les
cld
lock
add
xor
rcl
or
arpl
or
in
pop
aad
mov
test
push
pop
inc
pop
pop
nop
stos
or
mov
movsl
mov
or
mov
addb
inc
scas
repnz
mov
cmp
cltd
mov
sbb
jl
and
out
cmp
gs
adc
mov
sbb
lea
pushl
xor
add
adc
mov
movl
movl
mov
mov
xor
xor
add
adc
mov
mov
mov
or
je
lea
mov
mov
sub
xor
mov
mov
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
sub
sbb
sub
sbb
xor
xor
mov
mov
mov
movsbl
mov
mov
movsbl
cmp
je
mov
movsbl
mov
xor
mov
movsbl
cmp
je
jmp
jmp
mov
xor
mov
movsbl
mov
mov
xor
xor
add
adc
movsbl
cmp
jne
jmp
mov
mov
xor
xor
add
adc
add
mov
jmp
jmp
mov
mov
xor
xor
add
adc
mov
mov
pop
leave
ret
push
mov
sub
or
mov
and
mov
addl
lea
xor
add
xor
mov
movzbl
or
mov
sub
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
movl
movl
adcl
xor
mov
add
mov
lea
notl
mov
mov
mov
adc
mov
sub
mov
andl
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
push
push
push
push
pushl
call
jmp
mov
movl
xor
mov
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
xor
xor
dec
mov
jmp
lea
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
add
mov
add
mov
mov
xorl
sub
mov
orl
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
movzbl
sub
mov
mov
mov
sub
lea
or
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
sub
mov
xor
mov
mov
mov
mov
sbb
mov
or
and
mov
sbbl
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
xor
xor
add
adc
mov
mov
or
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
push
push
push
push
call
test
je
lea
push
mov
mov
xor
xor
add
adc
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
inc
mov
mov
sub
xor
cmp
jne
jmp
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
add
mov
sub
mov
mov
mov
mov
movl
movl
mov
mov
mov
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
mov
call
leave
ret
push
mov
sub
neg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
push
push
movl
lea
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
adc
lea
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
sub
xor
add
sbb
mov
mov
mov
mov
sub
imul
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
mov
sub
imul
mov
and
add
add
mov
orl
mov
mov
xor
mov
and
mov
adcl
xor
xor
adcl
add
movl
adc
cmp
je
movl
jmp
jmp
mov
mov
mov
mov
movl
mov
movl
mov
mov
mov
mov
movzwl
mov
mov
cmp
jne
mov
mov
cmp
movl
je
lea
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
xor
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
add
mov
sub
mov
not
mov
movl
mov
and
xor
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
adc
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
xor
add
movl
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
push
call
jmp
mov
adcl
imul
cmp
je
sub
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
xor
add
adc
mov
imul
mov
mov
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
add
adc
mov
mov
xor
xor
add
adc
push
push
push
push
call
sub
sbb
mov
cmp
jg
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
jmp
mov
mov
mov
xor
mov
mov
lea
mov
mov
mov
mov
mov
mov
xor
add
not
and
mov
lea
mov
mov
movl
movl
lea
mov
mov
movl
movl
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
je
mov
xor
add
mov
sub
mov
jmp
jmp
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
mov
xor
xor
add
adc
mov
mov
mov
mov
mov
xor
xor
add
adc
cmp
je
mov
add
mov
mov
mov
mov
mov
movzwl
mov
mov
xor
xor
add
adc
movzwl
cmp
jne
mov
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
sub
push
xorl
push
andl
push
adcl
push
andl
push
xorl
push
sbbl
push
adcl
push
call
movl
cmp
movl
je
andl
xor
jmp
movl
jmp
orl
push
movl
call
adcl
test
je
sbbl
xor
movl
jmp
movl
jmp
addl
push
orl
call
test
je
xor
jmp
andl
push
push
subl
push
subl
push
push
movl
push
subl
push
xorl
call
cmp
je
xorl
xor
movl
jmp
movl
jmp
push
call
test
movl
je
movl
xor
movl
jmp
movl
jmp
addl
push
subl
call
test
movl
je
xor
jmp
adcl
push
push
adcl
push
push
orl
push
push
push
movl
call
cmp
je
xor
jmp
jmp
push
addl
call
test
movl
je
movl
xor
movl
jmp
movl
jmp
adcl
push
xorl
call
sbbl
test
je
subl
xor
movl
jmp
orl
push
push
adcl
push
push
andl
push
addl
push
push
andl
call
movl
cmp
je
xorl
xor
movl
jmp
movl
jmp
push
notl
call
test
je
addl
xor
jmp
movl
jmp
push
call
test
je
xor
jmp
orl
push
adcl
push
adcl
push
andl
push
push
push
push
sbbl
call
cmp
movl
je
movl
xor
movl
jmp
jmp
orl
push
andl
call
test
movl
je
andl
xor
movl
jmp
jmp
orl
push
negl
call
addl
test
movl
je
xor
jmp
push
push
push
adcl
push
push
push
movl
push
xorl
call
movl
cmp
je
xor
jmp
jmp
adcl
push
subl
call
orl
test
movl
je
subl
xor
movl
jmp
movl
jmp
addl
push
call
xorl
test
movl
je
movl
xor
movl
jmp
xorl
push
sbbl
push
push
push
xorl
push
andl
push
notl
push
movl
call
cmp
je
sbbl
xor
movl
jmp
jmp
xorl
push
xorl
call
subl
test
je
adcl
xor
movl
jmp
movl
jmp
adcl
push
subl
call
test
je
andl
xor
movl
jmp
adcl
push
push
sbbl
push
adcl
push
push
push
orl
push
subl
call
movl
cmp
je
subl
xor
jmp
movl
jmp
push
call
sbbl
test
movl
je
xor
movl
jmp
movl
jmp
push
call
test
movl
je
orl
xor
movl
jmp
xorl
push
sbbl
push
push
push
push
subl
push
xorl
push
call
movl
cmp
je
xor
movl
jmp
movl
jmp
sbbl
push
xorl
call
test
je
addl
xor
jmp
jmp
andl
push
adcl
call
test
je
xor
movl
jmp
push
push
push
xorl
push
addl
push
push
xorl
push
call
cmp
movl
je
xor
jmp
movl
jmp
push
movl
call
subl
test
je
sbbl
xor
jmp
jmp
push
addl
call
movl
test
movl
je
orl
xor
jmp
sbbl
push
sbbl
push
andl
push
addl
push
push
sbbl
push
push
call
cmp
je
subl
xor
jmp
jmp
sbbl
push
orl
call
orl
test
je
xor
jmp
movl
jmp
sbbl
push
xorl
call
test
je
sbbl
xor
jmp
movl
movl
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
jmp
lea
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
mov
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movzbl
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
movl
add
mov
mov
mov
movl
lea
movl
mov
cmpl
jne
mov
mov
xor
xor
addl
add
adc
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
mov
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
xor
addl
xor
add
adc
mov
sbb
mov
adc
mov
orl
xor
xor
orl
add
movl
adc
xor
mov
mov
mov
add
mov
mov
orl
mov
add
movl
or
movl
and
movl
movl
sbb
movl
sub
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
movl
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
xor
movl
xor
xor
mov
sub
or
movl
movl
mov
add
mov
subl
xor
xor
add
movl
adc
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
adc
add
mov
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
add
adc
mov
mov
xor
xor
add
adc
add
adc
cmp
ja
mov
mov
xor
xor
add
adc
add
push
mov
mov
xor
xor
add
adc
lea
push
mov
pushl
call
jmp
mov
mov
xor
xor
add
adc
mov
jmp
mov
mov
xor
xor
add
adc
add
mov
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
add
adc
mov
mov
xor
xor
add
adc
add
adc
cmp
ja
mov
mov
xor
xor
add
adc
add
push
mov
mov
xor
xor
add
adc
lea
push
mov
pushl
call
jmp
mov
mov
xor
xor
add
adc
mov
jmp
mov
mov
xor
xor
add
adc
add
mov
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
add
adc
mov
mov
xor
xor
add
adc
add
adc
cmp
ja
mov
mov
xor
xor
add
adc
add
push
mov
mov
xor
xor
add
adc
lea
push
mov
pushl
call
jmp
mov
sub
xor
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
xor
add
xor
sub
sbb
xor
xor
mov
mov
cmpl
jne
cmpl
je
mov
cltd
sub
sbb
xor
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
xor
add
adc
mov
mov
cmp
jne
mov
mov
xor
xor
add
adc
push
push
pushl
pushl
pushl
pushl
call
push
push
pushl
pushl
pushl
pushl
call
mov
mov
xor
xor
add
adc
mov
mov
mov
xor
xor
add
adc
mov
mov
mov
xor
mov
mov
xor
xor
add
adc
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
movl
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
pushl
pushl
call
push
mov
add
push
lea
push
call
jmp
lea
mov
lea
mov
mov
mov
mov
push
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
push
mov
add
push
lea
push
call
mov
mov
pop
leave
ret
push
mov
sub
add
push
andl
xor
or
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
movl
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
call
mov
dec
mov
jmp
movl
orl
movl
sbb
movl
xor
add
mov
add
mov
and
xor
sub
mov
sbb
not
xor
andl
xor
mov
mov
movl
mov
mov
mov
movl
mov
movl
mov
mov
movl
cmp
movl
jne
mov
cmp
je
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
adc
mov
jmp
mov
mov
xor
xor
add
adc
add
mov
mov
xor
sub
sbb
xor
xor
mov
xor
sub
sbb
xor
xor
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
xor
add
adc
add
mov
mov
xor
xor
add
adc
imul
mov
mov
mov
mov
jmp
mov
jmp
jmp
mov
pop
leave
ret
push
mov
sub
orl
movl
orl
movl
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movsbl
cltd
sub
sbb
decl
xor
orl
xor
movl
mov
mov
cmpl
jne
cmpl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
add
adc
mov
cmp
je
mov
jmp
mov
mov
xor
xor
add
adc
jmp
mov
mov
xor
xor
add
adc
leave
ret
push
mov
sub
and
push
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
push
pushl
push
pushl
pushl
call
jmp
movl
movl
movl
add
movl
mov
adc
mov
add
mov
and
xor
xor
movzwl
add
mov
add
mov
adc
mov
add
mov
xor
xor
xorl
add
movl
adc
orl
push
orl
push
adcl
push
push
call
movl
cmp
jne
mov
or
mov
add
xor
sub
xor
add
movl
adc
xorl
mov
mov
subl
xor
adcl
xor
addl
add
adc
adcl
push
subl
push
push
push
call
movl
jmp
jmp
lea
and
mov
sub
mov
and
movl
mov
mov
sub
imul
mov
adc
xor
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
push
push
push
push
call
cmp
je
mov
mov
xor
xor
add
adc
mov
imul
add
mov
mov
jmp
jmp
mov
mov
xor
xor
add
adc
mov
mov
xor
xor
add
adc
push
push
push
push
call
jmp
mov
mov
xor
xor
add
adc
jmp
mov
mov
xor
xor
add
adc
pop
pop
leave
ret
push
mov
sub
push
notl
push
movl
sbbl
movl
xor
movl
movl
mov
add
mov
mov
sub
mov
xor
xorl
xor
subl
add
adc
mov
movl
cmpl
movl
je
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
add
mov
or
mov
mov
decl
xor
xor
add
adc
sub
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jb
mov
negl
mov
xor
xor
add
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
mov
orl
xor
xor
xorl
add
adc
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
adcl
add
movl
adc
movl
mov
movl
jmp
mov
mov
sub
add
mov
movzwl
or
mov
xor
sbbl
xor
orl
add
movl
adc
dec
add
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
call
xor
or
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
sub
sub
and
xor
mov
andl
sub
subl
xor
cmp
movl
je
xor
xor
xor
xor
sub
and
mov
or
mov
xor
subl
xor
addl
add
adc
movl
cmp
movl
jne
orl
pushl
call
orl
mov
add
mov
mov
xor
xor
orl
add
movl
adc
movl
cmp
jne
mov
adc
mov
xor
xorl
xor
orl
add
adc
movl
jmp
jmp
movl
pushl
xorl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
xorl
xor
xor
add
movl
adc
cmp
movl
jne
movl
mov
mov
xor
subl
xor
add
adc
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
add
mov
mov
mov
xor
xor
add
adc
cmp
je
jmp
jmp
mov
mov
mov
xor
xor
add
adc
cmp
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
mov
mov
mov
xor
xor
add
adc
cmp
jne
mov
mov
xor
xor
add
adc
jmp
mov
mov
mov
xor
xor
add
adc
cmp
je
lea
push
pushl
pushl
call
jmp
mov
add
mov
cmpl
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
xor
add
adc
mov
mov
mov
xor
xor
add
adc
add
mov
mov
xor
xor
add
adc
mov
imul
cmp
je
mov
mov
xor
xor
add
adc
mov
mov
mov
xor
xor
add
adc
mov
mov
mov
xor
div
add
mov
mov
mov
mov
mov
xor
xor
add
adc
add
mov
jmp
mov
mov
xor
xor
add
adc
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
leave
ret
add
out
js
push
add
add
add
add
add
add
add
pusha
jp
add
add
add
inc
push
pop
mov
inc
add
sbb
add
add
inc
cmp
insb
insb
outsl
pop
dec
outsb
jae
jb
pop
inc
popa
je
pop
inc
imul
add
outsb
inc
inc
inc
push
imul
inc
pop
push
fs
inc
jb
push
push
jb
dec
push
pop
dec
insl
push
push
dec
jne
push
imul
dec
push
je
dec
push
pop
jb
insb
outsl
inc
push
jns
push
jno
push
insb
push
inc
bound
dec
dec
jno
fs
bound
imul
inc
dec
ja
inc
dec
push
popa
inc
push
push
jae
imul
pop
imul
pop
jo
dec
push
inc
dec
dec
jb
gs
push
push
dec
insl
inc
imul
jbe
inc
push
js
pop
arpl
gs
insb
inc
dec
gs
outsb
dec
jbe
inc
push
popa
dec
inc
fs
jno
imul
inc
addr16
jno
push
jo
push
outsl
jae
jbe
jno
pop
push
push
pop
jne
outsl
push
jbe
push
ja
dec
imul
push
jp
pop
push
push
push
inc
push
inc
dec
insb
push
push
push
imul
jo
popa
jo
jno
dec
arpl
insb
popa
dec
imul
outsl
push
insb
push
jo
gs
imul
inc
outsb
push
imul
jp
imul
outsl
js
push
inc
push
push
push
push
inc
je
outsb
pop
inc
jo
dec
arpl
jns
outsl
jne
fs
jp
jno
push
jbe
push
jne
outsb
je
dec
push
inc
inc
jbe
popa
popaw
js
outsl
jbe
jne
push
addr16
jbe
dec
push
arpl
dec
insl
jb
pop
push
inc
pop
dec
js
pop
inc
dec
dec
jb
je
ja
pop
je
dec
push
push
jno
dec
insb
push
fs
jno
push
popa
jae
dec
push
bound
push
dec
dec
inc
dec
imul
jo
jae
push
js
dec
gs
jno
dec
jae
pop
inc
inc
jb
inc
jb
push
dec
inc
pop
jne
pop
jp
dec
bound
jno
insl
jns
inc
jae
jbe
insl
jae
push
push
dec
imul
imul
jne
push
jno
push
dec
jbe
jb
inc
jbe
incl
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
