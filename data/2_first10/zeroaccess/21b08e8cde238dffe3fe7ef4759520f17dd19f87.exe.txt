push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
mov
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
xchg
outsl
mov
or
fidivrs
mov
add
sbb
xchg
or
ror
repnz
jae
dec
repz
jnp
sti
fdivrp
fcoml
cmp
pop
pusha
inc
pop
arpl
cwtl
test
adc
popa
jo
push
push
inc
dec
inc
pop
int3
movsl
push
das
xchg
shll
and
enter
sub
and
mov
xor
sub
dec
sbb
mov
sbbl
in
stos
fnsave
mov
imul
pop
fbld
mov
push
jg
in
hlt
mov
dec
and
insl
enter
cmp
test
movsl
xchg
and
jmp
les
cmp
inc
rolb
mov
or
jecxz
js
pusha
addr16
hlt
xchg
fldcw
add
pop
mov
pop
jg
jmp
loop
lea
sub
dec
outsl
sbb
leave
xchg
push
jg
stos
mov
mov
icebp
bound
je
iret
scas
loopne
cwtl
cmpsb
xor
xchg
pusha
jns
cmc
insl
add
xor
sti
sar
jecxz
stos
daa
fists
mov
sbb
and
inc
adc
gs
xor
fs
inc
ja
and
inc
scas
rcll
mov
jp
mov
mov
pop
xor
push
pop
lret
and
adc
cmp
sub
sub
filds
inc
stos
or
imul
or
out
and
jbe
or
add
aad
test
jp
push
pop
add
mov
aad
cmp
or
rolb
scas
cmp
sub
rcrb
push
jo
sub
inc
cmp
jmp
fs
push
lods
lret
out
pusha
add
call
outsl
lock
sub
cmp
dec
mov
jge
inc
push
clc
imul
out
js
jl
bound
xchg
ret
dec
and
xchg
jo
sarb
addr16
cltd
adc
outsl
mov
adc
sahf
ds
loope
rcrl
and
mov
mov
negl
mov
enter
cmp
push
mov
insl
mov
push
popa
das
ja
xor
dec
pushf
in
cs
inc
mov
mov
test
cmc
inc
insl
adc
movsl
dec
or
pop
add
loope
lret
outsl
mov
xchg
xchg
lahf
or
sarl
jg
mov
lahf
inc
add
hlt
or
sub
sbbl
addr16
or
hlt
xlat
jg
and
push
push
dec
popf
mov
js
jecxz
fildll
add
jne
std
lahf
lahf
or
rcrl
pop
scas
cmp
push
nop
cltd
lret
into
int
cmp
inc
enter
or
loop
xchg
xlat
add
mov
les
rolb
cvttps2pi
jp
cmc
and
mov
lcall
jns
mov
and
xlat
sti
outsb
das
test
and
and
xchg
mov
call
in
mov
imul
inc
inc
jne
in
or
cmp
xchg
outsb
in
cltd
fdivrp
hlt
outsb
pop
test
add
into
insb
out
in
or
sub
pop
mov
jmp
jae
mov
les
std
xor
mov
les
and
scas
push
and
xlat
and
mov
or
lea
xor
lock
lea
adc
push
cmp
jno
mov
xor
mov
ja
mov
adc
sub
mov
movsb
cltd
sbb
add
int
pop
add
sub
out
push
jnp
sub
jge
scas
sub
xchg
std
mov
iret
scas
jmp
int
lcall
in
mov
mov
js
jp
adc
js
fsubrp
ss
sbb
sbb
jb
mov
or
pop
xchg
out
push
fnsave
mov
adc
inc
xchg
js
out
repnz
popf
xorb
jno
mov
aas
pusha
roll
leave
or
sbb
push
insb
mov
nop
dec
movsl
xchg
inc
or
sub
pop
lret
into
push
flds
mov
hlt
lahf
sub
out
ret
add
hlt
xchg
adc
cs
inc
and
pop
sbb
xchg
sbb
push
stc
mov
xchg
rcll
jbe
jne
stc
aam
lcall
lock
xchg
push
xlat
xchg
sub
mov
xchg
sub
movsb
lret
mov
ds
pop
mov
push
inc
mov
adc
out
xor
and
mov
fs
enter
mov
push
mov
pop
add
mov
int
outsl
into
inc
pop
fwait
push
loop
dec
cmp
xchg
pop
inc
inc
cmp
lods
xchg
pop
int
sbb
int
mov
xchg
jns
jnp
mov
lods
mov
cmp
cltd
jne
mov
jae
sti
add
repnz
add
push
lea
iret
cmp
or
dec
loope
movsb
lret
and
outsb
push
or
jbe
cmp
cmp
scas
rorl
ret
stos
lret
mov
imul
dec
lods
xchg
mov
cmpb
sub
cli
rorb
add
shrb
add
mov
xchg
push
leave
push
xor
sahf
lods
dec
cmp
cmp
int
jle
test
inc
cmp
mov
xchg
cwtl
out
inc
movsb
pop
pop
mov
mov
gs
add
cmpsl
ja
outsb
jo
in
xchg
sti
mov
sub
and
xor
mov
mov
pushf
mov
pop
sub
xor
xchg
cmp
sub
in
jnp
dec
ds
jnp
stos
insl
imull
sarb
shll
xor
mov
js
xchg
sub
and
out
out
mov
push
cmpsb
ja
fwait
push
pop
xchg
gs
cmpsb
mov
lock
sub
dec
fdivs
lods
sub
aaa
mov
ljmp
mov
mov
dec
sbb
in
ja
mov
push
hlt
jbe
or
aad
popf
stos
xor
out
je
mov
xchg
fsubrp
mov
testb
ret
mov
mov
mov
xor
cwtl
imul
outsb
mov
xor
sub
stos
loope
jg
ret
inc
add
sbb
movsl
xlat
lahf
imul
adc
jl
mov
movsb
mov
sub
pop
into
cmc
insl
pop
fisttpl
stc
and
xor
adc
es
jno
mov
xor
cmp
lcall
add
cld
loopne
pop
push
scas
test
fwait
cmp
enter
in
mov
lcall
testb
adc
stos
mov
push
std
pop
js
call
xchg
movsb
jg
sub
jbe
sbb
mov
insl
das
mov
jge
dec
or
divl
add
xchg
xchg
inc
adc
jle
ret
loope
push
notl
jle
lea
gs
pop
inc
and
fnsave
push
stc
repnz
cmp
add
inc
scas
dec
pop
mov
scas
jmp
mov
loope
pushf
es
jne
imul
std
push
icebp
or
push
out
shlb
mov
mov
push
xor
dec
std
stc
lods
jl
push
test
popf
or
enter
ret
movsl
mov
push
xor
shlb
insl
push
iret
mov
arpl
sbb
xchg
int3
cmc
mov
add
add
jnp
scas
addl
cmpb
push
test
hlt
rorl
or
pop
dec
mov
jg
mov
add
in
pushf
pop
cmp
xchg
decb
lods
fs
scas
and
lock
and
mov
aam
stc
pop
add
test
jge
pop
cwtl
and
mov
notl
mov
dec
sub
push
jne
out
push
xchg
xchg
jae
icebp
inc
jns
pop
loopne
loopne
xor
fcomip
jne
aad
mov
push
out
data16
out
lea
adc
xchg
lret
sarb
jne
cli
popf
adc
adc
and
or
inc
pop
and
mov
insl
xor
mov
add
sbb
scas
scas
stos
or
sub
inc
mov
loopne
dec
jno
rcll
or
es
jp
icebp
and
sbb
xlat
mov
mov
ret
rolb
int
mov
add
inc
xor
jmp
xchg
out
and
mov
xchg
les
inc
sbb
lds
in
add
mov
cwtl
or
pop
xchg
ficoml
jb
pop
insl
dec
xchg
out
jecxz
jmp
jl
adc
add
negl
cmpsl
mov
fnstsw
xor
rol
ficoms
push
mov
dec
inc
xchg
inc
push
xchg
xor
xchg
mov
int3
xor
mov
xchg
test
and
push
push
out
aaa
xchg
mov
pop
ret
movsl
jns
scas
int3
jno
push
les
pop
lock
ja
mov
loopne
xor
and
sbb
push
jno
fsubs
add
roll
int
popf
jno
mov
test
pop
test
scas
mov
push
push
jae
jg
dec
push
dec
pop
scas
pop
popl
fyl2xp1
xchg
addb
pop
cmpsl
test
ja
cwtl
lock
out
xchg
aad
jne
adc
push
loopne
mov
or
sbb
ds
cmpsl
and
dec
adc
icebp
fisttpl
js
repz
movb
xor
negb
cmp
mov
fldl2e
mov
lea
add
push
ja
mov
enter
inc
xchg
mov
adcl
jne
inc
test
cmp
lods
cld
into
push
jmp
add
dec
mov
jmp
mov
sbb
aas
movsb
shrb
xor
int
testl
fs
insb
pop
lahf
sbb
outsb
inc
ljmp
imul
ret
mov
cld
jno
push
in
lock
mov
aad
cmc
repnz
jbe
lahf
or
fsubrl
mov
xor
out
iret
testb
outsl
inc
es
rcl
sarb
hlt
or
es
outsl
mov
xchg
cli
lods
andb
fsub
lods
addl
push
sub
xor
int
in
popf
add
or
fs
sbb
pop
dec
ljmp
pushf
mov
sub
or
js
mov
mov
lea
lcall
mov
add
or
aas
push
xor
inc
pop
in
sub
jbe
dec
test
add
sbb
or
push
sbb
rorb
cld
xor
sbb
stos
scas
ja
inc
inc
daa
cmp
iret
js
ret
inc
mov
in
mov
mov
arpl
testl
sub
clc
inc
and
adc
lret
sbb
or
or
rcll
loopne
dec
xor
jnp
add
pushf
sbb
aam
push
xchg
sub
pop
ljmp
cmpsl
inc
test
and
ficoms
adc
stc
mov
and
icebp
rcrl
adc
leave
hlt
jnp
mov
cmpsl
adc
scas
mov
int3
jl
decb
lock
insb
mov
rclb
fisubl
in
shr
or
xor
cmp
adc
lods
movsb
call
movl
test
popa
clc
jmp
test
lock
ja
fldl
or
test
dec
popf
dec
mov
jp
adc
pop
or
pop
ret
push
mov
sub
sbb
dec
add
xor
lds
adc
mov
ret
mov
push
adc
pop
cmpsl
lret
jns
aaa
punpckhbw
andb
xlat
bound
add
inc
jno
push
test
mov
jle
addr16
cmpsl
sbb
inc
mov
xlat
fsts
out
mov
loope
and
sub
iret
sub
xchg
fmuls
rcrb
scas
or
sbb
xor
aam
dec
andl
mov
ds
or
jbe
xor
popf
add
jmp
xor
dec
movl
sub
in
outsl
leave
enter
sbb
dec
ljmp
movsl
xor
push
outsl
andl
jae
xchg
cld
mov
nop
dec
fstl
inc
daa
jo
mov
sarl
movsb
cltd
scas
mov
pop
adcl
out
sarl
mov
ss
outsl
jle
sbb
ret
push
arpl
lods
inc
movsb
xor
addl
lea
mov
popf
jmp
ret
push
in
sub
xchg
enter
xor
mov
int3
mov
ja
pop
mov
push
sti
mov
mov
cltd
sub
cmpl
flds
shlb
sub
cld
sbb
addr16
scas
in
jae
jns
lods
outsl
cmp
mov
pop
push
or
jae
sub
xchg
pop
and
jns
out
cmc
mov
and
in
jl
orb
add
cmp
ja
adcb
aam
testl
sti
cmp
jp
jmp
adc
sub
movsl
stc
push
mov
push
lret
test
scas
jo
dec
repz
mov
fidivs
and
scas
dec
std
push
lea
sarl
jp
cmp
mov
mov
xlat
lahf
xor
je
pop
xchg
pop
in
or
sub
insl
loope
push
ljmp
cmp
or
sbb
lcall
aam
mov
push
sbb
xlat
dec
jno
idivb
adc
pop
out
cld
sarb
jg
mov
dec
hlt
stos
mov
inc
ljmp
push
shll
pop
stos
pop
cli
or
rclb
dec
mov
mov
mov
enter
insb
sbb
sbb
mov
test
fs
je
pop
ret
pop
aad
stos
sti
inc
inc
mov
and
jmp
divb
xchg
jae
mov
aas
loopne
ja
and
mov
test
ja
popf
fs
adc
outsb
mov
xchg
dec
das
jb
insl
add
mov
cld
push
push
mov
and
mov
pop
out
and
gs
jne
or
mov
daa
cmp
jmp
arpl
jl
cmp
cmp
inc
mov
data16
mov
or
xchg
inc
cmc
cmp
scas
pop
adc
jecxz
or
iret
dec
and
iret
adcl
loopne
sub
jae
adc
xor
jmp
mov
inc
inc
ljmp
xchg
and
shr
or
mov
sbb
or
sbb
jl
in
adc
mov
adc
mov
mov
andl
add
cmp
pop
push
jl
mov
xchg
movsl
je
cmp
sbb
push
jns
mov
movsb
mov
lods
mov
xchg
cmp
cli
add
jle
jle
mov
arpl
inc
testb
dec
lock
xchg
repz
or
dec
test
arpl
call
xor
movsb
std
adcl
out
push
ss
cwtl
loope
mov
inc
lock
jno
xchg
stos
aam
push
inc
push
jecxz
mov
jge
mov
cmc
dec
xor
je,pt
mov
pop
and
mov
pop
cli
cmpsl
frstor
sub
cmp
mov
andb
pop
pusha
cltd
xchg
and
jo
sahf
adc
pop
mov
lods
outsb
dec
or
lret
rcr
and
sbb
or
jb
adc
jmp
jecxz
jg
mov
fistps
fstpl
adc
inc
pop
mov
inc
cmp
outsl
mov
les
dec
add
loope
data16
fidivrs
add
leave
dec
xchg
enter
mov
pop
xchg
movsb
jle
addl
test
dec
add
pushf
fdivs
xchg
repz
dec
cmpsl
xchg
stos
mov
mov
dec
mov
sbb
lock
cwtl
les
xchg
orl
ljmp
mov
lods
pop
enter
pop
cmp
test
jne
inc
jbe
clc
mov
iret
inc
dec
mov
fs
and
adc
addb
loopne
int
mov
cli
mov
insl
mov
and
test
cmp
sub
loop
cwtl
mov
mov
pusha
mov
mov
add
mov
mov
bound
std
in
mov
push
push
xor
je
pop
jb
iret
sub
jb
in
and
push
das
in
rclb
fimuls
mov
mov
pop
jno
out
fimull
mov
fdivrs
aas
es
sub
cld
idiv
mov
cli
cs
arpl
scas
push
mov
enter
mov
mov
cmp
push
fwait
pop
or
xchg
mov
jb
xor
mov
imul
dec
xchg
sbb
xor
shll
subb
pop
pop
push
ds
mov
xchg
sbb
cmp
scas
lods
mov
aad
mov
xchg
cmp
rcrl
dec
test
jns
sahf
rep
sbb
stos
pushf
dec
repnz
mov
push
scas
mov
dec
inc
fdivl
and
mov
jp
mov
out
dec
flds
out
xchg
pop
pushf
xchg
dec
loopne
mov
fsubs
mov
sahf
xor
xlat
incl
nop
xchg
push
aaa
lds
mov
or
stos
mov
sub
cmp
sub
or
adc
test
fldt
mov
sub
jo
add
cld
and
js
cli
addr16
sbb
cli
stc
sub
inc
comiss
pop
outsb
push
mov
scas
popa
mov
imul
outsb
sbb
ss
jecxz
movsl
fsubs
aaa
mov
daa
pop
mov
imul
jno
lret
sbb
pusha
and
ja
sbb
jge
movsl
inc
bound
xchg
insb
insb
inc
std
dec
or
out
loopne
add
test
arpl
cmp
pop
mov
push
shll
and
movsl
clc
push
xor
jne
xchg
jae
imul
mov
stc
cltd
jo
stos
and
sahf
xor
jb
popa
push
in
nop
decb
into
sub
mov
pop
xchg
in
push
xor
sbb
pop
enter
in
popa
mov
jmp
push
test
push
clc
fs
shrb
data16
xlat
test
jns
bound
sbb
cmp
fcomps
stos
cmp
xor
mov
loopne
adc
cmp
ret
cli
mov
inc
fs
and
mov
sub
lods
ljmp
add
inc
cmp
ljmp
fidivl
dec
push
sbb
sub
outsb
imul
int3
repnz
ficoms
int3
sbb
daa
out
loop
jg
lds
mov
pop
das
mov
movsb
mov
out
mov
lock
imul
inc
mov
jp
fldt
test
mov
sahf
addb
imul
lds
pop
push
enter
shlb
in
stos
cmp
sbb
hlt
rcr
push
mov
push
daa
loopnew
fcom
mov
mov
shll
inc
loope
stos
mov
xlat
into
jp
sbb
les
add
jnp
jl
rolb
dec
pop
test
in
cmp
cwtl
fisttpll
or
repnz
and
pop
cmc
adc
sub
imul
and
jmp
inc
negb
mov
mov
stos
jne
xor
adc
std
cltd
dec
pusha
xchg
push
stc
push
sbb
add
xor
insb
fdiv
stos
ss
scas
nop
mov
jmp
mov
pop
mov
dec
and
js
mov
and
sbb
sub
cmpsb
xchg
xlat
push
xor
aaa
xchg
and
pop
adc
inc
sub
sub
dec
stc
in
xchg
push
repz
iret
rorb
sahf
pop
scas
lods
jmp
in
stos
rcrb
arpl
xchg
cmpsl
and
jnp
inc
imul
cmp
mov
out
repnz
insl
inc
jg
addr16
aas
int3
es
sbb
jp
lret
jb
movsl
xchg
cmp
mov
loope
lahf
push
ja
mov
arpl
lcall
mov
jb
pushf
lods
xor
sarb
jbe
fucomp
sub
dec
fildl
lds
mov
mov
fnsave
xchg
push
cltd
lcall
imul
ret
in
adc
mov
das
idivb
fidivl
inc
aam
and
outsb
cmpsl
cs
sbb
dec
fwait
bound
shll
or
andl
fstpl
add
loope
dec
adc
int3
inc
shrl
out
inc
cltd
sbb
mov
cmpsb
push
divb
adc
inc
dec
negl
add
sbb
loop
mov
xor
shll
mov
sub
arpl
jg
test
xchg
aad
jmp
cmp
add
or
pop
ljmp
xchg
mov
jo
out
dec
cmp
add
int
loopne
push
xor
dec
fucomip
dec
xor
jecxz
or
jp
nop
cmp
inc
or
shll
inc
mov
sub
aam
adc
adc
jg
pop
inc
cmp
mov
fidivl
inc
and
xchg
dec
loop
jo
fisubl
dec
rol
sub
aaa
mov
js
js
sub
loopne
bound
pop
outsb
jmp
dec
sub
into
lods
add
push
mov
mov
lods
rcl
pop
mov
pop
mov
lret
sbb
xor
sbb
das
dec
mov
mov
cmp
add
leave
out
sub
les
fwait
fs
test
inc
xchg
shr
sbb
inc
repz
and
fstps
jnp
outsl
dec
adc
mov
mov
mov
cmp
jmp
lods
testb
je
sahf
fidivs
push
int
inc
dec
mov
and
daa
dec
lcall
aad
cmpsb
sbb
lahf
and
loopne
stc
jo
cmp
xor
mov
mov
cmova
jle
addr16
xchg
inc
bswap
iret
dec
fldt
jno
xor
mov
cmp
clc
sbb
in
cmc
jae
enter
out
sub
dec
icebp
mov
mov
sub
dec
data16
xchg
repnz
into
daa
ljmp
loopne
nop
pushf
cmp
pushf
inc
ss
jb
sub
pop
xor
filds
sub
das
mov
mov
shrl
push
lock
push
sub
push
fldcw
cmpsb
ret
dec
xor
addr16
scas
jb
xchg
dec
cwtl
xor
subb
bnd
shll
mov
mov
hlt
fcom
dec
in
dec
pop
bound
mov
adc
mov
cld
push
adc
sbb
addr16
jmp
sub
sub
xor
shrb
cmp
push
lds
jge
and
cli
pop
cmp
decb
adc
xchg
ret
jp
es
or
pusha
push
push
inc
inc
or
cwtl
push
inc
or
fnstcw
scas
sub
cwtl
inc
cmpb
stos
lods
cmp
mov
imul
lds
mov
jns
in
xchg
les
dec
push
push
cmp
mov
notl
xor
mov
jne
cld
inc
xchg
lret
dec
js
pop
stos
add
pop
in
xor
imul
in
addl
add
aaa
add
mov
ja
imul
pop
imul
xor
sub
mov
repz
int3
pusha
ret
jno
cs
or
pop
pop
pop
jae
jle
int3
push
movsl
push
jl
pop
ret
es
arpl
loopew
or
xor
xchg
xchg
stos
inc
jecxz
cmp
lcall
imul
dec
inc
pop
sbb
ficoms
ljmp
std
data16
out
mov
imul
cmc
movsl
repz
sub
fwait
in
inc
daa
rcll
lea
push
movsl
in
insl
pop
sbb
std
stc
xchg
jmp
dec
repnz
mov
add
or
orb
cmp
or
jo
mov
or
mov
jnp
negb
addr16
shll
cli
aad
pushf
test
addr16
clc
cmpsb
sub
jl
mov
dec
xlat
mov
ficoms
fcoml
lods
imul
xor
push
ljmp
stos
xorl
pop
add
mov
imul
aas
arpl
xchg
pushf
push
adc
mov
cmp
sub
adc
movsl
xchg
cwtl
dec
lret
adc
lcall
sti
mov
popa
xchg
mul
mov
lcall
sti
pop
fs
add
cmpsb
adc
dec
push
cmp
pop
add
sbb
ret
or
pop
stos
cmpl
sbb
mov
inc
call
out
outsl
imul
fdivrl
es
adc
ljmp
cmp
loopne
fcomps
in
fsubr
and
clc
movsb
fwait
mov
sbb
outsb
or
aaa
nop
jae
imul
es
daa
icebp
clc
adc
lock
jg
scas
scas
cli
fcompl
out
push
daa
mov
iret
lcall
call
xchg
jb
mov
lods
adc
mov
sub
fadd
xor
mov
pop
adc
into
or
out
push
fwait
addr16
xor
push
adc
insb
cs
negl
sub
loope
mov
aas
lret
fs
and
lahf
xor
mov
mov
sub
jg
dec
int
ficoms
popf
shl
xlat
push
out
cmp
or
int3
jl
mov
add
inc
mov
jne
mov
sbbb
mov
sti
rorb
repz
bound
sub
push
mov
inc
xchg
xor
gs
mov
lret
outsb
inc
mov
push
stos
cmp
or
xchg
aad
xchg
xor
cmpsl
cli
out
lods
jb
or
cmp
adc
mov
pop
dec
movsl
aam
cmp
aad
movsb
mov
cmp
mov
jg
jecxz
xchg
xlat
mov
xor
dec
adc
and
xor
pop
inc
ja
or
lret
cltd
pop
shr
popl
mov
orb
or
iret
aas
arpl
fidivs
inc
test
and
sahf
dec
pop
or
push
test
mov
or
or
push
push
add
sbb
inc
or
bound
dec
ss
shlb
mov
jns
xchg
add
xor
lcall
test
out
or
mov
std
dec
cmp
sti
lretw
and
stc
aas
aam
imul
sub
cmc
and
pop
mov
or
std
xor
pop
and
mov
push
jg
dec
out
push
addr16
lock
dec
syscall
std
xor
inc
ret
inc
xchg
push
jg
jb
dec
add
sbbb
les
push
jae
mov
mov
dec
int
jl
mov
dec
dec
scas
sub
jmp
gs
jmp
and
cmc
mov
test
stc
icebp
inc
mov
loop
mov
adc
mov
dec
lcall
pop
sub
imul
jp
pop
pop
adc
mov
xchg
mov
cmp
mov
cmp
push
cmpl
adc
adc
xchg
incl
xchg
call
in
jle
lret
inc
fmull
fdivrs
les
in
mov
sbb
cmp
jb
adc
loop
mov
sbb
outsl
rol
pop
je
insl
repz
outsb
adc
xor
cmp
movsb
push
sub
test
pop
mov
stos
shlb
out
popa
xor
scas
and
outsb
or
movsb
jnp
adc
aaa
dec
shll
push
gs
sbb
xor
out
mov
repnz
mov
pop
sbb
imul
mov
insb
xchg
scas
lahf
sbb
cmpsl
stos
in
mov
loop
pop
in
dec
in
adc
pop
cmp
push
add
adc
jl
jecxz
inc
leave
jmp
xor
mov
push
mov
lret
repnz
clc
mov
dec
in
inc
sbb
adc
sub
pop
sbb
jo
repz
shlb
mov
and
adc
dec
mov
dec
movsl
mov
xchg
into
cli
inc
inc
adc
adc
aam
scas
stos
scas
mov
mov
jl
scas
loopne
cmpsl
shl
xchg
jo
adc
sub
and
push
mov
xor
cmpsl
mov
ss
push
add
cmp
and
push
mov
cmc
pop
mov
xor
pop
test
push
pop
add
jno
cmp
xor
cmc
cmp
adc
enter
sub
cmp
in
cmc
inc
fcomps
fwait
pop
cltd
sahf
xchg
sahf
ljmp
dec
fistpll
inc
pop
mov
outsb
pop
ja
incb
aas
mov
inc
in
xor
xchg
xchg
adc
add
add
xor
insl
fiaddl
sub
cmp
adc
lea
stos
pop
jp
addr16
loop
pop
mov
fidivl
outsb
sarl
outsl
lahf
xchg
test
xor
jbe
popf
repz
push
pop
dec
push
add
or
aam
pop
push
movsl
xchg
icebp
sub
sbbb
mov
xchg
mov
daa
xchg
sbb
cmp
push
mov
iret
pop
adc
add
test
and
lods
pop
adc
sbb
add
xchg
mov
xor
pusha
pop
push
repz
lods
jmp
xchg
inc
jne
and
push
loope
fidivs
mov
dec
arpl
cmp
jb
shlb
pop
dec
rcrl
call
lods
push
aad
cmc
mov
mov
dec
inc
cltd
xchg
xor
or
mov
mov
push
in
rcrb
sub
ss
inc
stc
dec
cmc
jb
mov
sbb
nop
add
mov
mov
inc
ret
adc
int3
mov
aas
lock
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fisttpll
pop
addl
push
pop
push
sbb
xchg
mov
outsl
xor
or
pop
ret
imul
adc
in
pop
in
or
jno
ret
insl
cmp
and
xor
stos
aad
rcrb
subb
in
imul
push
movsl
pop
dec
aam
bound
pop
push
add
ljmp
stc
int
int
push
inc
test
repz
xchg
mov
mov
adc
jmp
iret
in
stos
inc
ds
and
mov
lock
mov
shl
jb
push
dec
shll
lea
clc
adc
repnz
sbb
cmpsb
push
push
xchg
dec
aas
lods
mov
pusha
sub
push
cmp
les
jbe
lret
sbb
push
aad
jle
ss
or
xchg
push
add
call
inc
jno
popf
leave
lcall
stos
push
pop
mov
fcomps
stos
pop
mov
push
repnz
test
jmp
jae
mov
mov
mov
test
add
mov
pop
std
scas
push
cmpsb
ss
leave
sbb
dec
pop
pushf
jnp
test
sub
gs
dec
in
iret
cmp
daa
decl
mov
aam
jg
mov
xchg
jnp
loop
add
adc
jge
sbb
cmp
lcall
int3
add
data16
clc
fistpll
xchg
inc
adc
pop
mov
sub
pop
outsl
shl
inc
out
rolb
and
imull
jmp
push
les
into
imul
sbb
cmc
push
shlb
xchg
lods
pop
sbb
sub
mov
cltd
pop
dec
push
fldcw
popa
aas
bound
jb
mov
das
jns
push
dec
test
adc
push
adcl
push
lcall
fs
leave
test
fimuls
lcall
push
and
hlt
lea
shll
lea
push
data16
into
mov
jns
push
in
add
jne
dec
into
or
xchg
xchg
adc
fwait
imull
aad
loopne
push
call
sub
mov
sub
out
mov
les
fcmovnb
mov
xor
fdiv
add
jnp
xor
imul
dec
xchg
mov
sbb
push
shlb
xchg
pop
in
xor
mov
cmc
adc
mov
jnp
repnz
movsl
leave
dec
pop
mov
rorb
fwait
aad
loop
and
daa
add
out
xor
outsl
jne
sub
cld
and
cltd
ret
push
sbb
lret
rcrl
cmp
out
aaa
and
ret
mov
sub
cld
jmp
rorb
cmpsb
xchg
or
inc
into
xorb
dec
sub
fdivr
fiaddl
js
mov
pop
lds
pop
xor
ss
loopne
cmp
adc
loope
and
inc
dec
stos
fsubrs
jp
sahf
jno
addr16
jg
inc
push
lods
jo
xchg
push
jmp
rorb
out
stos
adc
mov
loopne
push
fisttpll
loope
popf
sub
jnp
popa
or
call
jne
cmp
fidivl
cli
pop
mov
xchg
mov
popf
iret
inc
xchg
xchg
add
pushf
and
pop
pushf
ja
and
xlat
mov
scas
xchg
movsl
movl
mov
in
inc
sub
stos
int
mov
or
xchg
mov
jp
mov
pusha
mov
aad
data16
fucomp
or
out
mov
cmpb
das
mov
lret
call
out
iret
or
mov
pusha
xchg
xchg
pop
sbb
and
jmp
movsb
sub
xor
scas
xchg
daa
insl
out
call
push
stos
lahf
fs
dec
and
sub
xchg
inc
sbb
cld
sub
xchg
adc
or
dec
js
loop
mov
pushf
cld
pop
in
ret
cmp
cltd
sbb
sub
scas
push
sub
lds
pop
aas
rorl
xorb
les
out
enter
push
mov
leave
test
lock
das
jecxz
aaa
ds
jnp
stc
mov
fldt
in
jge,pn
xchg
out
jle
jae
scas
mov
or
mov
fsubl
lahf
or
movsl
inc
test
ljmp
inc
cmp
sbb
setl
sbb
mov
push
or
insb
mov
sub
int
cmpsb
fs
inc
sar
mov
cmp
sbb
mov
sub
push
enter
xor
xorb
mov
loopne
insl
mov
fwait
or
movb
scas
clc
adc
mov
mov
rcrl
ljmp
mov
rorb
mov
int
daa
test
xor
mov
imul
in
xchg
push
or
dec
adc
daa
out
mulb
dec
pop
out
mov
fbld
dec
push
lret
test
test
xor
fistpl
sub
pop
inc
movsl
mov
push
aaa
add
pop
pushf
cmp
xchg
les
test
fiadds
sbb
xor
or
ja
ss
mov
incl
jge
es
mov
cmp
in
xchg
out
test
loope
fwait
divl
dec
pusha
lods
cmc
dec
sbb
gs
leave
jg
or
std
cltd
fldl
lret
loop
jle
rorl
pop
push
sbbb
lea
arpl
add
mov
mov
mov
inc
sub
sub
test
mov
jns
cmovbe
push
out
pop
and
mov
scas
cmpl
sub
xor
cmp
pop
inc
add
aad
divl
icebp
inc
push
add
idivb
dec
xor
cmp
int
cli
mov
clc
adc
icebp
roll
int
sbb
xor
pop
scas
test
lret
test
aad
xor
loopne
adcb
sahf
pop
push
test
mov
or
xchg
sub
sub
sub
psubq
rorl
in
lods
pop
movsl
inc
aaa
call
ja
mov
stc
sbb
pop
insl
das
push
cltd
mov
roll
or
push
cmp
sub
jb
mov
sub
cmp
jle
test
mov
test
mov
inc
push
or
or
in
and
add
icebp
push
test
movl
mov
icebp
jbe
and
inc
daa
out
outsb
mov
in
sbb
jg
call
hlt
into
daa
insb
sbb
xchg
mov
xchg
jno
mov
in
pop
add
mov
and
in
push
push
or
cmp
pop
xchg
push
insb
nop
jge
sub
mov
xor
ret
mov
aaa
call
and
xlat
push
add
ficomps
fsub
push
inc
and
pop
test
outsl
addl
mov
jo
call
fldl
inc
imul
and
bound
sbb
mov
cmp
sbb
stos
xor
daa
or
fwait
and
pop
ja
push
add
jg
sbb
in
ja
shrb
adc
pop
arpl
loop
xor
cwtl
push
sbb
jp
inc
dec
jmp
mov
xor
ret
jo
sub
xlat
fildl
divb
cltd
sub
add
push
fldl
call
pop
sti
insb
out
aad
test
adc
mov
xchg
shl
mov
decl
jnp
je
stos
xchg
test
stos
sbb
xlat
adc
mov
jb
je
in
cltd
popw
into
cmp
lock
xor
mov
pusha
push
cmpsb
fsubrs
imulb
dec
mov
jg
fstps
popf
cs
leave
push
jbe
shr
clc
push
and
fnstsw
ret
pop
in
xchg
dec
jmp
lods
cmp
pop
out
ret
jmp
and
pop
pop
fistl
cmpsl
ja
pop
inc
repz
fdivrs
pop
sub
sub
cmp
pop
xchg
fcom
popa
nop
pop
adc
aad
ret
nop
out
cmp
cmp
add
fbld
hlt
adc
out
adc
dec
mov
xor
xor
add
out
mov
jnp
cltd
or
jns
pop
cmp
sub
jne
xor
lret
pop
mov
inc
xor
popa
aaa
push
push
inc
les
sarb
pushf
in
fsts
je
or
gs
sbb
or
sbb
loope
in
push
pop
into
inc
or
push
arpl
mov
mov
xchg
push
in
fs
lock
dec
inc
mov
jbe
xorl
into
js
cs
or
and
lcall
daa
into
inc
push
out
or
jne
test
sarl
inc
movsl
jl
push
data16
das
frstor
ljmp
pusha
dec
ljmp
xor
mov
outsl
lahf
je
adc
cmpsl
lods
mov
adc
sub
and
lock
adc
push
jmp
and
inc
jnp
fwait
cmp
sar
in
inc
adc
and
or
je
adc
insb
xorl
js
add
pop
push
mov
or
sbb
inc
test
adc
fs
mov
mov
jns
mov
push
ja
mov
jl
and
xor
ljmp
pop
cmp
jnp
clc
pusha
sbb
push
push
xor
adc
out
out
test
inc
pop
xor
imul
and
inc
sbb
ds
inc
sti
fwait
xchg
xor
inc
roll
faddl
mov
out
adc
dec
lcall
jle
inc
cmpsb
fisubs
shlb
ja
adc
and
popa
mov
mov
cmp
jle
fsubrl
aas
pop
ret
cld
lret
xchg
mulb
push
jnp
mov
or
aad
test
ljmp
sub
mov
pop
jns
inc
bound
call
inc
aaa
add
add
clc
adcb
jmp
filds
cmp
push
and
call
xor
fsubs
mov
xchg
fst
popa
cmp
push
or
ficoms
or
and
jecxz
inc
js
pop
outsb
mov
push
je
adc
cmpsb
cwtl
in
fstpt
mov
fnsave
stos
mov
cli
dec
dec
je
mov
or
bt
adc
shrl
sbb
ljmp
js
mov
enter
pushf
stos
loop
push
add
aam
daa
jnp
es
sarb
jge
fcoms
jns
cmp
or
iret
sbb
or
lret
movl
or
inc
mov
movsl
push
sbb
fdivrl
pop
xchg
xlat
leave
mov
cmpl
lcall
mov
push
gs
jne
jg
xor
imul
in
jg
outsb
add
add
lret
mov
cltd
mov
imul
mov
xchg
in
int3
sbb
in
ficoml
xor
out
jns
mov
js
and
lock
dec
push
xor
jecxz
stos
jmp
bnd
mov
jns
mov
idivb
dec
mov
pop
xor
and
scas
rcr
adc
mov
pop
cwtl
pusha
push
ret
insl
mov
aas
mov
jbe
sbbb
mov
sbb
jl
sahf
in
orl
cmp
mov
add
or
dec
xor
addb
dec
xchg
mov
popf
pop
jmp
inc
add
mov
push
or
mov
cld
mov
cld
das
xor
xchg
ss
pop
sbb
pop
inc
ja
and
xchg
mov
fnstcw
clc
sub
pop
rol
jmp
xlat
add
cmp
je
adc
aam
enter
pop
add
xor
jnp
xor
ds
inc
cmp
dec
out
mov
aad
jl
outsl
scas
adc
repnz
push
mov
or
add
mov
ds
sub
into
adc
mov
test
jae
jecxz
mov
cmpsb
jno
pushf
fadds
out
add
mov
out
inc
or
imul
std
bswap
mov
lods
sub
adc
xlat
mov
push
or
add
or
stos
inc
push
pop
push
mov
xor
and
in
xchg
sub
movsb
mov
in
jle
enter
bound
mov
xor
call
add
cmp
xchg
or
inc
insb
xorb
inc
mov
mov
imulb
push
sub
inc
es
pusha
jecxz
xlat
jns
ds
out
xor
jnp
sub
cmp
in
add
stc
inc
inc
mov
push
divb
and
xchg
cld
arpl
sbb
and
shl
popl
icebp
jmp
iret
cli
adc
fscale
push
pop
es
sbb
aam
adc
xchg
adc
sbb
push
cmp
rolb
push
mov
adc
cmp
icebp
mov
dec
sub
sbb
push
fstps
push
lds
int
fs
int
or
sbb
cltd
aaa
insb
loop
and
adc
pushf
sub
jl
dec
jns
aad
jle
addl
push
sahf
and
mov
sbb
adc
ja
jns
xor
sub
js
fdivl
mov
sti
stos
sub
stos
and
cmpb
idiv
cmp
pop
es
shlb
nop
inc
loope
fidivs
gs
aas
jne
or
popa
fldl
jecxz
fs
mov
dec
repz
sbbb
mov
mov
mov
add
adcb
add
add
clc
gs
sub
lock
enter
xchg
int3
mov
mov
ret
out
lahf
pop
test
xor
dec
test
push
adc
nop
pop
dec
mov
and
data16
icebp
adc
sub
push
or
sbbl
lods
and
mov
sarb
insb
mov
mov
xor
xchg
adc
inc
jp
inc
jbe
stc
inc
mov
std
xchg
pushf
imul
inc
mov
out
sbb
and
adc
sahf
stc
out
stos
rorb
outsl
rol
movsl
int
or
roll
jmp
addr16
inc
insb
or
mov
jge
jns
sub
cs
rorb
loopne
add
ret
and
cmpsb
mov
sub
gs
add
dec
loope
fisttpl
sti
push
test
mov
mov
loop
mov
cmp
stos
cmp
add
cmpsb
mul
cwtl
xchg
dec
cmp
js
xor
push
out
fwait
adc
push
orl
mov
mov
sti
cli
sub
xchg
loope
mov
adc
ja
adc
ss
mov
lods
movsb
scas
inc
sahf
es
ljmp
sbb
pop
xchg
fdiv
mov
mov
ret
imul
sub
xlat
icebp
mov
aad
adc
inc
in
lea
addr16
mov
repz
fistl
fwait
push
jb
addr16
call
sub
jl
adc
ret
mov
out
filds
mov
or
pop
shll
popf
int3
or
andl
or
out
daa
outsb
add
pop
pop
sbb
lods
outsl
xchg
lahf
pop
xchg
mov
cs
subb
mov
lock
popf
mov
cwtl
loop
lret
test
stc
mov
xor
aad
cmp
repnz
lcall
push
push
das
ffree
sar
fidivl
pop
ljmp
or
pop
cmp
ss
pop
adc
inc
mov
sbbl
push
in
add
inc
popa
out
inc
mov
lahf
push
stos
dec
orb
add
jnp
mov
pop
cmp
fstpt
xchg
test
jno
and
mov
les
adc
stos
fwait
and
pop
pop
mov
jb
and
inc
incl
sbb
dec
cmc
lods
lret
test
mov
pushf
pop
xchg
adc
sti
jmp
mov
lcall
fwait
out
or
xchg
repnz
leave
pushf
shll
lea
dec
fidivs
cmovp
aam
aas
mov
cs
xchg
push
cld
push
je
xlat
aad
mov
sbb
push
jnp
inc
mov
into
push
push
xor
sbb
pop
cmpsl
xchg
pushf
sbb
lret
movsl
push
push
scas
mov
stos
add
adc
mov
into
mov
sbb
push
sub
xor
mov
mov
fnstenv
mov
sub
sti
cs
mov
inc
insb
inc
xor
jp
jns
xchg
add
adcb
or
lods
mov
sbb
cmp
fs
sbb
cmpsb
add
push
fistl
pop
in
push
xor
lret
jo
clc
mov
ud0
out
xchg
fs
and
scas
adc
xchg
add
into
outsb
xchg
mov
lahf
stos
test
enter
sti
sub
popa
xor
inc
call
outsb
sbb
mov
mov
and
fs
inc
sub
jle
xchg
ret
jmp
in
movsb
inc
cmc
ret
shll
and
fisubl
addr16
rorl
jcxz
icebp
mov
push
rol
cmp
mov
cltd
fsub
test
jnp
int3
jge
inc
jge
push
sub
repz
outsb
push
sub
ret
lods
icebp
dec
or
sbb
jb
stc
mov
out
jbe
sub
push
jp
jae
loope
jne
adc
or
scas
jo
int3
and
rolb
push
outsb
cli
loopne
mov
jmp
inc
lahf
dec
sub
dec
pop
repnz
mov
das
loopne
sbb
btr
cmpsb
xor
fcom
in
and
mov
outsb
cwtl
mov
fld
dec
int
xor
mov
adc
adc
stos
push
daa
jns
shll
pop
fadds
test
stc
xchg
lahf
mov
sbb
popf
cwtl
sbb
jbe
out
test
ljmp
and
popf
push
jp
lock
jge
shrl
mov
ljmp
add
int
inc
mov
xchg
mov
sbb
packuswb
ljmp
sbb
inc
jl
loope
pop
movsl
cwtl
jae
jl
mov
stos
jg
sbbb
sbb
sbb
pop
fdivrl
pop
dec
sbb
dec
aam
test
insl
mov
sti
sub
orl
pop
adc
popa
lret
sbb
add
fcmovne
inc
jb
inc
xlat
in
cmp
in
jno
add
pop
sbb
out
jge
cmp
sti
push
sbb
inc
loope
loop
movsb
adc
pop
clc
jl
xchg
push
int3
push
xchg
mov
jmp
in
fldl
movsl
sbb
mov
mov
cmc
and
cs
imul
dec
outsb
cld
and
inc
ja
xor
cli
jecxz
dec
hlt
fcomp
jo
mov
sub
ljmp
gs
ficoms
subps
push
in
jno
loopne
ffree
sub
inc
push
xchg
mov
outsb
pop
imul
pop
pop
and
dec
or
cwtl
je
and
insb
rorb
xchg
ljmp
test
add
xchg
mov
les
xchg
stos
out
pop
xchg
push
pop
inc
addb
push
mull
xor
popa
jecxz
and
and
enter
enter
clc
movsb
jle
push
jp
cwtl
lods
adc
pop
inc
lea
mov
mov
imul
mov
loop
jge
jge
jb
push
jmp
call
repnz
imul
adc
xchg
and
adc
lret
pop
push
sahf
jno
inc
fbld
cmp
cmp
leave
setns
or
mov
jle
call
push
dec
out
adcb
push
stos
jmp
out
ljmp
gs
mov
adc
outsb
dec
and
add
xor
push
pop
xchg
mov
scas
ds
pop
daa
imul
inc
les
icebp
lds
adc
enter
cwtl
pusha
or
push
hlt
jb
pop
sbb
sbb
fs
test
cld
out
pop
aam
mov
push
jae
adc
movsl
psrlq
push
mov
mov
push
mov
jns
jl
mov
sbb
int
pop
push
pop
or
cmp
aad
xchg
push
dec
jl
jne
ret
jnp
adc
xchg
and
add
imul
div
sbb
ss
or
mov
sbb
or
clc
lcall
es
push
push
popa
pop
pop
xor
lods
aad
rdmsr
jmp
or
leave
lock
jns
mov
xlat
rcl
popf
adc
idivb
stos
or
test
fstpt
aad
cmp
imul
inc
orl
pusha
inc
lcall
add
jbe
pop
xlat
mov
aad
cmp
ljmp
aam
pop
std
outsb
push
stos
ficomps
sbb
lock
adc
pop
aas
add
cli
js
cmp
and
jecxz
jp
ljmp
cmpsb
scas
in
das
cmpsl
and
push
rclb
xchg
sub
daa
cs
sbb
in
xorl
insl
push
push
repz
jmp
bound
lds
xchg
loopne
xor
inc
shr
leave
cmp
lock
pop
int
repz
loope
pop
mov
leave
jge
fnstenv
mov
dec
xchg
xchg
jg
out
es
mov
sbb
xchg
icebp
inc
testb
ret
adc
shlb
movb
ret
lds
mov
outsl
or
mov
dec
sub
ja
iret
add
cmp
xor
and
aas
lea
push
sub
out
insl
out
or
pop
mov
sub
xchg
xchg
mov
repnz
mov
and
stos
jp
cmp
mov
pop
pop
test
inc
add
or
pop
sub
push
lock
stos
pop
xor
push
mov
insb
in
push
test
or
sub
mov
xchg
stc
or
das
int
mov
pop
jnp
out
pop
call
std
sbb
add
in
pop
push
shrl
ja
jle
pop
scas
mov
pop
mov
fs
push
or
pop
rcrb
jle
in
push
xor
into
xchg
js
aam
mov
int
adc
movsl
xchg
aaa
je
sti
cmp
fstps
loop
add
add
stos
insl
or
inc
int3
sbb
xchg
aaa
mulb
sbb
popf
mov
adc
pop
in
jmp
push
popa
and
xchg
stc
lea
loope
inc
adc
inc
mulb
mov
sbb
mov
or
xchg
push
outsb
cmpsb
insb
sbb
cmpb
add
test
add
std
pop
push
jo
ret
enter
xor
ds
push
xchg
push
jbe
jp
xchg
inc
test
sarb
mov
stos
test
popa
mov
inc
leave
std
push
cwtl
dec
sub
cs
hlt
add
mov
add
andl
mov
cwtl
jp
and
test
pusha
mov
lds
dec
pop
dec
sbb
pop
arpl
movb
sub
add
into
xchg
xchg
push
fs
push
jg
test
inc
mov
xor
aas
arpl
cmp
adc
sub
movsb
std
adc
cli
mov
ja
inc
mov
pushf
add
mov
push
and
fisttpll
xlat
cmp
inc
hlt
aas
inc
cltd
lcall
lock
jns
push
pop
hlt
dec
push
mov
ret
gs
pop
mov
outsb
jno
mov
inc
call
mov
add
push
xor
pop
push
js
add
pop
cmpsb
mov
scas
mov
jb
push
cmpsb
sbb
lds
in
add
add
xchg
insb
inc
or
cmpsl
das
jmp
xor
in
je
push
pop
push
xchg
jmp
pushf
les
in
out
push
sbb
sbb
xor
xchg
sub
mov
and
jmp
mov
pop
cld
xlat
pusha
pop
lods
inc
and
insb
mov
pop
je
xor
cmp
inc
stos
sbb
cmp
push
std
es
push
xchg
inc
xor
in
js
dec
mov
sub
lds
push
ss
mov
dec
adc
ret
subl
out
fiaddl
repz
aad
js
mov
xor
aad
xchg
mov
dec
mov
mov
subb
sub
mov
mov
push
or
lret
in
jb
cmc
and
ret
test
mov
mov
jl
inc
add
scas
test
cmp
fists
fs
pop
scas
mov
out
mov
cld
lods
jo
lods
incl
aaa
pop
js
aam
cmpsb
add
cltd
jnp
xchg
pop
cltd
test
outsl
pushf
add
jb
cmp
aas
push
adc
jg
imul
pop
scas
in
pop
cmpsl
ret
jne
mov
mov
mov
repnz
aaa
xchg
mov
dec
test
add
addr16
add
push
mov
or
imul
iret
xchg
data16
jns
add
fists
fcompl
or
addr16
repz
cld
inc
popa
sub
pop
lret
xchg
and
loopne
clc
das
lods
mov
dec
shr
addr16
push
adc
roll
ja
ljmp
pop
in
inc
mov
aad
inc
push
pop
cwtl
jle
clc
scas
jle
pop
and
fcomps
pop
fnstcw
data16
push
cmp
mov
push
cmp
or
test
mov
nop
lcall
insb
dec
outsb
rorb
dec
std
repnz
sbb
pop
pushf
pushf
sbbb
hlt
loop
arpl
outsb
int
cmp
adc
out
xchg
sub
ret
jae
in
psubw
push
pop
call
mov
add
push
inc
xchg
fsts
rclb
scas
dec
dec
jg
sub
ja
sub
push
xchg
addr16
lcall
jns
sub
mov
rorb
adc
or
jle
jb
adc
lret
loopne
je
xlat
cli
aas
lret
cmc
out
aam
orl
inc
mov
xor
fmull
or
aam
sub
daa
inc
sbb
int
add
loop
test
mov
pop
pop
mov
repz
sub
mov
rorl
sahf
sti
cmp
cmp
push
push
out
xor
icebp
loopne
clc
dec
push
mov
xchg
es
mov
sbb
or
lcall
or
lret
inc
popa
sbb
mov
xor
pushf
push
push
ret
inc
fsubrl
cmc
cmp
test
mov
lret
arpl
call
pop
jo
hlt
pop
loopne
push
jo
lret
mov
addb
aas
fs
out
mov
sub
xor
jg
and
cmp
mov
mov
jb
fsubs
and
mov
outsb
adc
lret
or
outsl
ljmp
inc
icebp
sub
decb
xchg
in
mov
push
out
dec
es
push
mov
adc
mov
xchg
dec
cmpsl
out
jae
sbb
push
jp
cmp
jo
cmp
sub
jmp
pop
loope
cs
jne
push
sub
or
mov
stos
popa
mov
sahf
xchg
stos
jnp
xor
jle
xor
hlt
xchg
cs
stos
adc
cmpb
push
fcoms
dec
and
enter
cltd
iret
and
mov
outsl
dec
cmp
add
xor
fs
mov
bndstx
jl
imul
mov
add
movsl
loope
insl
in
jo
and
push
insl
cmp
fmuls
daa
sbb
add
out
push
loopne
enter
out
mov
push
lcall
pop
xor
jbe
add
pop
lret
cmp
mov
cli
or
out
mov
cli
popa
fsubrl
imul
sbb
adc
sahf
add
lret
add
adc
dec
push
cli
movsl
rcrb
das
push
adc
cmp
xor
fists
xor
dec
and
leave
and
inc
mov
and
stos
cmc
pushl
stos
add
lahf
push
rolb
adc
loop
data16
xchg
ja
idivb
outsl
das
adc
inc
and
jne
rclb
xchg
pop
mov
movsb
hlt
lret
fisubrl
lods
mov
loop
cltd
jae
nop
or
jl
sub
jne
push
lret
cwtl
addr16
test
xchg
cmp
jo
imul
jnp
push
mov
int
into
std
sbb
in
jle
or
iret
in
adc
dec
loop
enter
out
dec
aam
pop
int3
xor
and
outsb
mov
xchg
adcl
in
mov
cld
cltd
add
add
xor
enter
inc
repz
xor
sti
fsubl
dec
or
mov
push
call
lods
inc
and
dec
mov
aaa
into
in
pop
jecxz
leave
insl
jns
sbb
repnz
inc
js
jo
hlt
and
sahf
adc
jge
fisubl
cmc
xor
out
in
mov
and
and
stc
mov
jg
shlb
mov
xchg
movsb
lret
cs
push
xchg
jmp
sbb
or
test
outsl
sub
inc
es
and
jp
and
ljmp
jmp
cmpsl
mov
push
ret
push
cld
xchg
outsb
push
pop
mov
mov
push
xchg
push
dec
icebp
push
pop
lods
shlb
addr16
xlat
mov
adc
inc
jne
lret
mov
int3
jecxz
das
ljmp
loop
jno
inc
xlat
and
pop
cmp
leave
pop
lahf
std
jl,pn
jg
sub
xchg
sti
mov
mov
inc
scas
push
and
lock
outsl
xchg
aaa
sti
pop
dec
dec
insl
bound
cmpsl
mov
add
push
push
jno
in
cs
cli
mov
mov
out
ljmp
inc
mov
or
inc
ret
filds
xor
test
add
mov
jae
pop
cmp
outsb
or
sbb
push
adc
es
sbb
push
testb
xor
addr16
js
mov
jecxz
ds
adc
push
sbb
lods
pop
sbb
xchg
lods
add
int
sarl
js
dec
or
or
int
jae
and
pop
push
pop
mov
sbb
pop
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
jns
mov
out
pop
addl
lcall
scas
in
lds
test
rol
add
fimull
movsb
cmpsb
mov
fnstenv
pop
test
lcall
rolb
stos
fmuls
popf
pop
iret
add
inc
xchg
xorl
sbb
aas
push
lcall
pop
in
pop
in
fistps
sbb
scas
in
aam
push
xchg
cmpsl
dec
enter
dec
cmp
push
ret
xchg
or
sub
sbb
leave
adc
ret
lods
add
cmpsb
lods
jg
mov
jge
popf
fsubr
jne
es
outsb
mov
mov
sbb
jp
cmp
scas
ficompl
daa
mov
enter
jno
jge
stos
pushf
xchg
mov
inc
mov
sahf
scas
jae
pop
hlt
mov
aaa
iret
gs
mov
adc
shr
addr16
mov
pop
xor
and
test
xlat
push
mov
lret
loopne
mov
dec
pop
ret
jae
rolb
pop
dec
and
aad
sar
in
add
mov
loop
mov
mov
jle
jb
cmp
jno
sbbl
int
imul
pop
and
in
mov
or
jo
mov
daa
cmpl
movsb
adc
push
movsl
nop
cmp
xor
mov
jge
push
stc
dec
xor
shrb
std
repnz
repnz
xor
push
in
cmp
and
scas
ret
pusha
cmp
rorb
bound
inc
or
xchg
fs
cs
ret
mov
mov
push
out
psrlw
fs
mov
xor
into
in
inc
inc
loop
sbb
push
fsubl
subb
xchg
jne
push
mov
lds
lods
insl
shlb
imul
aaa
mov
xchg
pop
insb
pop
adc
pop
js
out
and
sbb
and
mov
inc
mov
cmpsl
sub
dec
cld
aas
inc
inc
push
je
dec
dec
mov
push
mov
push
loopne
cmp
dec
push
sti
mov
jmp
inc
mov
sbb
sub
pop
and
stos
xor
jo
ret
fldenv
loope
cmp
and
lock
mov
cmpsb
sbb
inc
mov
ret
into
loope
mov
mov
cmp
sbb
mov
push
aas
push
inc
aad
cmp
mov
stc
test
lahf
push
and
jp
jne
and
sbb
xchg
cmp
mov
sub
movsb
enter
or
ljmp
add
popf
jno
into
in
push
cld
xor
pop
xchg
fcoms
xlat
cmp
fadd
sbb
lahf
mov
jmp
mov
lock
fs
sub
imul
xchg
add
fidivrl
sub
mov
cmp
mov
xchg
ljmp
rcrl
repnz
lcall
sahf
sub
outsb
dec
fmull
cmp
cmc
rorl
pop
sub
in
mov
dec
int
xchg
sbb
pushf
mov
jge
mov
nop
jmp
bound
shrb
movsl
out
xchg
sub
or
cli
sbb
adc
mov
es
ss
jns
aaa
lcall
fsubrs
sub
cmp
xchg
xchg
push
add
jp
sbb
push
lret
sbb
and
stc
mov
inc
mov
lods
mov
int3
xchg
inc
xchg
push
xor
aas
push
cmp
dec
mov
sti
dec
mov
mov
sarl
out
movsb
out
lds
fxch
imul
pop
es
lret
adc
push
xorb
dec
or
and
adc
pop
mov
xchg
cli
ja
push
cli
aam
cmc
xchg
popa
jp
loop
std
xor
cmp
dec
cmp
lcall
dec
ret
jmp
fdivrl
cld
repz
negb
jle
mov
jecxz
pop
push
mov
and
push
mov
cld
add
ds
in
clc
call
push
sbb
in
fidivrs
pop
xor
dec
int3
inc
fstpt
inc
imul
adc
ljmp
mov
ljmp
push
push
pop
push
gs
fldenv
stos
movsl
sahf
mov
sahf
les
repnz
les
test
repz
sbb
dec
popa
mov
mov
jg
sbb
sbb
fadd
shrl
xchg
pop
nop
cmp
pop
cmp
and
fldpi
mov
adc
pushf
ret
lods
and
jnp
je
leave
adc
dec
scas
adc
sub
jae
sub
jmp
das
ss
out
std
js
and
addr16
imul
jl
data16
ja
popf
das
mov
mov
je
jmp
push
lcall
aas
xlat
pop
jb
jne
sahf
xchg
adc
adc
or
ficoml
cmp
rcl
xor
mov
cmp
sub
stc
add
xchg
mov
mov
popf
mov
jp
test
das
and
or
call
ret
xlat
movsl
dec
and
popa
lret
inc
xorl
ds
mov
lock
mov
scas
mov
sbb
out
daa
sbb
movsb
fcmovbe
xchg
in
es
iret
loopne
mov
add
pushf
pop
orb
imul
xchg
xor
es
adc
repnz
xor
push
sti
ljmp
or
sub
push
or
mov
jae
mov
in
loope
fsubr
jae
arpl
repz
lret
mov
cli
pop
aam
icebp
jp
or
push
mov
ljmp
les
jb
out
insb
rorl
shll
add
pop
dec
paddsw
xchg
shll
add
fisubs
fmuls
imul
imul
outsb
test
rcr
inc
mov
push
sub
into
lock
jge
push
add
xor
mov
cmp
jbe
jmp
test
sub
push
out
enter
leave
cltd
jno
sub
mov
push
mov
ret
in
ljmp
xchg
mov
stc
lds
cmp
xchg
repz
cmp
fnsave
or
rorb
movsb
imul
pop
mov
loop
cs
int3
or
mov
lods
mov
mov
jne
sbbb
addl
cmpsb
sub
cltd
inc
cs
lahf
lcall
and
adc
mov
mov
jg
arpl
lds
mov
repnz
adc
jg
jo
jo
xchg
or
sbb
xchg
imul
cmp
cmp
addr16
jp
push
std
popf
mov
repnz
mov
cmpsl
rcrb
les
lock
jno
push
push
jecxz
fildll
pop
jp
in
mov
adc
lret
stc
repnz
add
xchg
mov
into
inc
pop
jl
or
mov
loop
addr16
xchg
or
aas
adc
push
cmp
fstpl
xor
icebp
imul
aam
sbb
out
cmpsl
sbb
sbb
mov
inc
push
in
adc
in
sbb
ss
movsl
lret
cli
enter
mov
enter
mov
jne
add
mov
add
mov
enter
jb
adc
cmp
cmpsb
fwait
or
jne
push
movsb
push
pushf
inc
add
and
idivb
int
sub
cmp
add
notb
out
data16
or
lret
sbb
sub
push
pushf
fwait
xor
adc
pop
movsb
fisttpl
out
adc
push
dec
cmc
jecxz
mov
lret
mov
xchg
push
sar
push
pop
jecxz
lcall
mov
cs
push
out
subl
icebp
loope
jmp
in
dec
jae
adc
les
push
sub
xor
adc
mov
pop
and
fistps
into
and
test
ja
out
mov
stos
push
sbb
sub
loopne
cwtl
add
pop
sub
pop
jmp
mov
cmp
sti
ds
sahf
aas
cmp
xlat
or
dec
imul
pop
push
mov
mov
out
push
cmp
pusha
mov
dec
iret
dec
std
xchg
or
cli
aam
fisubl
pusha
mov
stos
test
ficompl
cltd
leave
jp
rolb
and
shrl
push
lret
shl
mov
insb
addb
pop
rol
out
jne,pt
bsf
sbb
push
icebp
add
sbb
mov
aaa
adc
cmp
repz
ficomps
js
mov
nop
iret
js
std
fscale
gs
aam
stos
push
in
ss
stos
aam
imul
cmp
and
lea
fisubrl
js
add
outsl
mov
mov
add
jecxz
repnz
sub
xchg
xchg
lock
mov
je
popa
push
dec
daa
imul
sbb
push
test
in
cmp
push
stos
clc
dec
lock
loopne
sub
imul
pop
cmp
fisubrl
int
out
or
and
lods
mov
adc
test
test
ret
scas
mov
out
bound
rcr
pop
lret
out
sahf
mov
mov
push
jge
or
xor
pop
inc
xchg
lods
push
sbb
bound
mov
jo
adc
mov
subb
out
jae
dec
out
mov
or
and
popa
mov
arpl
cltd
pop
pop
cld
mov
or
and
mul
jo
sbbb
push
add
push
jmp
aaa
or
xchg
sub
jo
aam
jle
lret
testb
add
call
xchg
adc
cld
mov
and
movsb
in
fbld
imul
ret
jle
add
mov
or
add
in
mov
addb
pop
popf
xchg
and
xor
js
sti
je
out
lea
xchg
mov
das
adcb
lock
adc
fcoml
adc
and
shlb
add
xchg
vpunpckhwd
xchg
enter
mov
scas
hlt
jae
jb
fnstsw
bound
popa
mov
mov
inc
jmp
dec
xchg
and
push
enter
adc
call
dec
inc
jns
icebp
fs
test
stc
mov
push
mov
mov
mov
daa
pop
xlat
ja
sbb
lds
insb
stos
inc
int
adc
and
gs
and
aam
cwtl
in
mov
jg
rcrl
movsl
into
fdiv
mov
or
stos
fisttpl
fadd
xor
pop
loopne
mov
mov
out
out
pop
mov
iret
js
push
aaa
out
mov
mov
cwtl
push
popf
sbb
dec
popa
gs
and
lret
mov
cmp
jns
push
cld
xor
es
mov
gs
push
mov
cmp
sbb
dec
push
and
dec
mov
popa
mov
int
xchg
mov
outsb
jo
test
imul
mov
xor
insb
lods
and
xor
jmp
shl
cmp
pop
rclb
mov
scas
add
mov
outsl
imul
cmp
popf
adc
sub
mov
ds
jno
subl
pop
in
adc
je
inc
in
mov
mov
clc
lret
xchg
lods
dec
or
mov
cld
adc
pop
clc
mov
es
pusha
and
mov
xchg
xchg
out
sbb
out
pop
and
cmp
adc
inc
out
bound
sahf
xor
xor
mov
test
jne
push
cwtl
push
adc
sub
add
mov
sub
lods
push
sbb
inc
xor
jb
out
aad
lret
stc
or
testb
and
push
and
inc
std
lock
lds
movsl
adc
cmp
aas
mov
sub
mov
fldenv
imul
push
pop
push
popa
or
or
add
dec
sti
cmc
add
shll
dec
adc
ss
lret
sti
inc
add
dec
inc
pop
jle
loope
adc
xchg
jnp
add
sub
subl
lods
pushf
pop
int3
mov
dec
or
add
sbb
pop
pop
mov
movsl
mov
outsb
ret
test
inc
add
aaa
je
pop
in
mov
dec
popa
or
notrack
adc
js
orl
xchg
int
sbb
push
je
in
xor
cmp
out
mov
repz
shll
mov
mov
das
push
scas
adc
cmp
stc
add
jg
add
xor
lret
jmp
test
mov
mov
mov
movsb
mov
bound
jg
std
push
ds
push
inc
insl
inc
push
or
mov
mull
dec
add
lods
xchg
js
sub
aam
push
pop
out
test
rcrl
pop
xchg
jb
mov
shrl
and
cmp
test
push
loop
xchg
sbb
jl
jg
and
mov
cwtl
shr
xor
sbb
push
pop
jno
mov
mov
inc
dec
stos
inc
fildll
adcb
cmp
xchg
addr16
lahf
sti
inc
ljmp
pop
push
jg
daa
and
mov
xor
int3
add
loop
jmp
aaa
icebp
mov
jb
add
sahf
into
push
xor
jnp
gs
rcrl
or
stc
dec
ret
or
sub
arpl
xor
sub
subb
dec
jle
cmp
leave
or
icebp
inc
cwtl
push
cmpsl
mov
and
iret
jmp
arpl
fmull
adc
shlb
mov
ja
scas
jo
sbb
sub
push
sub
shrl
insb
inc
pop
dec
sub
mov
pop
xchg
push
mov
lods
xor
in
add
sbb
mov
or
popf
repz
jp
pop
cmp
cmp
test
jb
out
or
sub
test
jle
xchg
lock
lcall
fcomps
push
sub
inc
sub
cmp
dec
sub
scas
ret
add
popa
nop
mov
aaa
test
dec
sbb
rorl
shlb
dec
out
pop
sbb
jb
mov
xlat
test
bound
enter
scas
fwait
and
cwtl
sahf
dec
jp
lods
or
push
add
movsl
mov
sahf
leave
mov
sbb
sti
dec
mov
cwtl
outsl
xor
inc
pop
negb
sub
push
fnsave
and
mov
push
cmp
fiaddl
jbe
fnstenvs
add
jno
mov
or
arpl
std
jb
nop
xchg
out
sub
lods
xchg
cmp
icebp
or
and
pop
or
mov
and
in
scas
cmp
mov
pop
push
adc
fmuls
pop
js
mov
test
push
gs
movsb
or
pop
lds
movsb
xchg
push
mov
jle
lret
and
mov
cld
jae
xchg
mov
call
cli
int3
hlt
out
or
and
rcrl
mov
fistl
adc
push
and
pop
int3
loop
sub
mov
cmpsl
leave
mov
add
jge
cmp
dec
int
in
shl
xchg
js
add
push
sbb
jmp
adc
fs
in
and
push
sbb
enter
fnstenv
adc
sub
xor
mov
jl
cmpsl
sub
sbbl
imul
enter
shlb
out
inc
imul
jbe
push
pop
jmp
or
out
das
push
lea
scas
add
js
sub
mov
std
xchg
or
lret
sbb
sbb
sbb
sub
sti
fdivrl
inc
je
pop
mov
pop
xchg
or
test
ror
push
sub
add
sahf
subb
jp
jnp
pop
loopne
jmp
imul
in
int
xor
in
outsl
ret
nop
subb
xchg
fisttps
je
push
sbbb
jne
cmp
and
pusha
fistl
sbb
sbb
ret
and
pop
clc
stos
lock
mov
cs
add
sub
daa
xchg
in
loope
lea
rcr
inc
xor
add
ficoms
jmp
sbb
int
ret
push
lahf
loope
cli
int3
leave
mov
xor
inc
mov
inc
or
movsl
sub
or
arpl
out
push
push
mov
daa
mov
lret
in
push
xchg
sbb
mov
shlb
test
pop
xchg
sbb
cmp
mov
xchg
push
xchg
cmc
mov
fldt
xor
sub
in
xchg
push
out
nop
xchg
stc
scas
adc
push
xor
mov
sub
loopne
add
push
and
insl
loop
loopne
jbe
jl
xor
xchg
popa
stos
outsb
adc
in
sub
cmp
adc
gs
pop
bound
dec
gs
inc
dec
cld
movsl
cmp
je
js
not
push
fadd
jae
push
sti
popa
fcmovnu
fsubl
cwtl
and
scas
lahf
pop
push
leave
mov
test
xlat
cs
fs
inc
xchg
or
jge
xor
xor
jbe
cs
xchg
and
lods
jo
in
sub
sti
pop
dec
sbb
mov
sbb
movsb
mov
adc
enter
add
test
pop
mov
push
jmp
pushf
shll
decb
dec
fsubs
rol
dec
sahf
xlat
fwait
outsl
imulb
pop
inc
jge
fwait
cmpsb
pop
ret
ja
xor
scas
test
sahf
rolb
mov
mov
mov
sbb
in
cmpsb
pop
mov
push
rcrl
cmp
into
outsb
mov
sbb
jge
call
rcrl
fmuls
cmp
push
and
push
dec
popf
jmp
mov
loop
push
mov
jnp
inc
outsb
xor
cmp
cmp
fsts
push
push
je
inc
mov
inc
push
push
int3
lret
out
test
mov
cmpsl
pop
xor
lahf
mov
mov
sbb
adc
sub
in
cld
out
inc
cmp
or
or
push
jle
fs
dec
into
mov
xor
mov
mov
mov
stos
pop
movsl
xor
push
sub
aad
add
push
daa
push
rorb
dec
outsb
call
in
test
xchg
inc
inc
mov
mov
mov
and
dec
xchg
in
push
push
aaa
lods
sub
or
aam
or
push
xchg
or
call
aas
dec
jno
out
dec
mov
push
xor
leave
push
cmpsl
push
test
push
cmpsb
mov
sbb
adc
sbb
push
mov
mov
mov
ljmp
pushf
mov
mov
sbb
ret
insl
mov
imul
push
adc
and
mov
addb
sbb
lea
mov
sahf
lods
xchg
cmp
pop
mov
push
push
std
cmp
jl
pop
add
movsb
inc
cmp
or
rorl
xchg
fidivrs
divps
shll
sti
popa
je
jo
sbb
push
addr16
pop
int
add
mov
xchg
stos
lock
jne
xor
inc
scas
pop
mov
adc
dec
es
int
sub
pop
daa
or
movsb
push
scas
push
daa
adcb
sti
shlb
push
jg
mov
dec
fldcw
mov
mov
sbb
movsb
push
jp
inc
mov
mov
dec
adc
scas
ljmp
push
mov
sbb
adc
loope
into
cmp
mov
mov
xor
inc
xchg
outsb
jnp
lods
add
cs
inc
icebp
mov
rcrl
adc
mov
mov
fbld
out
adc
shll
test
jno
pushf
push
divl
xchg
imul
adc
jns
xchg
loope
sarl
mov
gs
mov
inc
jns
fs
call
lret
sbb
push
lods
fcmove
in
xchg
rcl
inc
mov
and
je
imul
push
jmp
addl
xlat
jg
jno
lods
lock
jno
outsl
mov
cmp
xchg
mov
sub
pusha
movaps
mov
xlat
das
mov
sbb
popf
rolb
sbb
mov
xchg
outsb
loop
push
aam
mov
xchg
sub
add
cmpb
xor
dec
mov
lcall
sbb
sub
mov
clc
mov
xor
ja
hlt
jns
cwtl
and
movsl
xchg
cmp
cmc
push
inc
sub
js
cld
mov
push
shll
outsb
jecxz
leave
arpl
sbb
xchg
scas
into
push
sti
pop
xor
mov
lds
sbb
lret
lahf
mov
insl
out
jbe
out
cmpsl
fmuls
pop
clc
subl
scas
pop
test
jle
mov
or
xchg
jmp
lahf
insl
sti
shlb
incb
xchg
icebp
jno
daa
stos
jno
scas
push
add
stos
mov
in
inc
ja
push
roll
ret
dec
push
bound
sub
mov
out
gs
lds
jo
dec
xchg
sahf
hlt
pop
push
jl
mov
loope
inc
in
and
sub
cmp
jbe
add
jbe
xchg
cmpsb
int3
mov
jno
xchg
inc
das
cld
scas
push
ret
faddl
shr
shlb
stos
lock
push
bound
movsl
lret
push
addr16
out
pop
xchg
mov
sub
mov
loope
and
xor
outsb
xor
add
retw
dec
mov
mov
sbb
lea
dec
test
lods
in
pop
sti
out
shlb
xor
pop
jo
icebp
jns
mov
sub
pushf
dec
and
or
pop
cmp
jge
add
call
aam
in
push
pop
sti
ret
lds
mov
inc
jne
inc
inc
gs
jne
mov
in
lret
lods
imul
and
xor
ds
mov
int3
add
mov
jl
push
mov
xchg
stos
xorb
jbe
sub
xlat
clc
mov
cli
data16
sahf
cmp
or
jns
cs
loop
add
xor
pop
ret
pop
les
imul
jecxz
leave
or
rcll
xchg
rorb
cmp
push
pop
add
js
pop
outsl
testb
push
push
adc
loopne
out
dec
pop
dec
mov
cs
aad
ljmp
add
mov
pop
gs
xor
fidivrl
push
lods
and
mov
xchg
mov
xor
je
mov
out
push
test
data16
gs
out
and
test
dec
lds
xor
or
mul
mov
and
das
or
test
xchg
xlat
int3
add
inc
and
out
orb
stos
xor
xor
jge
push
add
xor
inc
pop
adc
mov
pop
mov
and
dec
js
mov
inc
std
scas
dec
das
into
fwait
inc
xlat
pushf
and
dec
mov
stos
xchg
mov
test
fs
add
jmp
insb
es
mov
mov
xchg
pop
dec
xor
pop
outsl
sahf
xchg
movsl
in
lret
pop
cmpl
jecxz
in
gs
ds
fcoms
jbe
xchg
mov
stc
push
pop
imul
leave
rorl
adc
mov
nop
cwtl
add
inc
pop
push
sub
xor
test
insl
push
idivb
outsl
movsb
sbb
incb
adc
ss
mov
addl
or
or
ficoml
sub
xor
ret
fldl
xchg
xchg
pop
push
sbb
sbb
or
and
jae
rorb
push
mull
or
pop
add
push
out
jmp
shrb
inc
cmpsl
outsb
jge
pop
daa
in
mov
pop
pop
jge
out
ror
test
mov
pop
sbb
mov
or
xor
mov
ret
xchg
sbb
push
mov
hlt
jmp
and
jle
stc
sbb
mov
fistps
pop
in
push
ret
aad
push
cmc
ss
mov
add
push
lock
or
aad
in
inc
xchg
ds
icebp
inc
push
cmp
rcll
jnp
mov
jecxz
hlt
inc
rorl
jmp
gs
and
lea
lahf
cmpsb
lods
xchg
or
icebp
cmp
test
popa
mov
pushf
fwait
subb
cmp
jo
adc
xor
and
in
adc
sub
pop
mov
cmp
jmp
jbe
xchg
fistl
ret
cmp
fsubs
jb
xchg
repnz
jno
movsl
test
sti
and
in
imul
sub
mov
bound
int3
in
into
push
xchg
std
or
push
sub
int
or
sti
pop
jno
and
cmp
outsl
inc
out
adc
jecxz
aad
inc
and
xlat
in
jge
pop
xor
jbe
push
jle
inc
sarb
jg
ss
pop
loopne
and
sub
call
insb
and
cwtl
or
xchg
sarl
fadds
test
pop
xchg
leave
lahf
jmp
aaa
and
push
mov
xchg
sub
loopne
insl
sbb
outsb
ja
sbb
xchg
mov
outsb
sbb
pop
outsb
icebp
fnstsw
sbb
xchg
jno
outsb
sahf
cld
jbe
fistl
mov
jo
adc
push
sahf
jge
or
cmp
pop
sbb
xchg
xor
sub
cmp
jne
mov
mov
pop
ss
push
add
js
sbb
mov
or
xchg
addr16
in
cmp
lea
imul
sbbl
mov
mov
mov
xchg
stos
ss
in
das
push
addr16
setg
dec
repz
xchg
iret
add
ret
js
notl
inc
cmc
aas
mov
push
sub
or
iret
adc
push
fucomp
dec
loopne
adc
fistps
push
pop
xorl
iret
jnp
xor
add
dec
jae
aaa
mov
inc
sbb
enter
rcrb
jecxz
lahf
mov
mov
xor
cmc
cmp
xor
jl
or
int3
aam
xor
fwait
out
pop
repnz
cmp
mov
ja
int
mov
pop
mov
popl
fsubl
adc
iret
ret
in
jns
test
fildl
push
in
ret
fldenv
and
lock
js
adc
pop
xor
jg
mov
insl
sub
leave
jb
cmpsb
dec
cmp
rcll
insl
push
mov
lea
jns
cld
in
xor
sbb
xchg
rcl
leave
sbb
sarl
not
cmp
push
inc
fmull
or
xchg
jge
in
fidivs
sub
pop
inc
loop
pop
int
jno
add
or
leave
xor
xor
jmp
xchg
iret
xor
mov
sub
sub
inc
and
sbb
jns
out
lds
stos
andb
stos
or
sub
push
icebp
mov
sti
aas
hlt
bound
cmp
lret
or
fs
jo
lret
mov
aam
push
sti
hlt
lcall
sbb
outsb
inc
and
push
mov
cmp
movsl
mov
lds
in
cmpsb
ficoms
sbb
imul
xor
lds
jo
popa
test
mov
repnz
jecxz
xor
push
int3
test
xchg
and
xor
addr16
insl
cmp
and
push
and
xchg
repz
das
adc
dec
scas
insb
or
cmc
cld
popf
div
mov
mov
add
dec
xchg
mov
add
adc
gs
idiv
imul
adc
movsl
rclb
fwait
jnp
mov
sbb
in
add
jne
pop
sbb
mov
es
pushf
xchg
push
add
pop
pop
das
fistl
fwait
xchg
dec
popf
aas
dec
jle
push
xchg
out
sbb
cmpsb
dec
test
push
xchg
xor
cmpsl
aaa
ja
jle
loop
mov
jp
cmp
jl
shrl
jno
in
mov
imul
test
ret
mov
mov
mov
push
out
push
scas
fimull
push
inc
xor
cli
cmp
mov
jl
stos
push
sbb
stc
loop
cmp
lret
pop
xchg
idiv
or
mov
cmp
rorb
jmp
lea
xor
pop
cli
sbb
adc
mov
stos
xchg
loope
in
repnz
pop
xor
data16
mov
jmp
mov
pop
enter
out
sub
mov
push
jg
sbb
aas
shll
or
ret
rorb
cltd
xor
negl
push
lea
loopne
lahf
add
int3
popa
insb
ljmp
xchg
in
cmc
enter
pop
cmp
loopne
pop
or
jbe
out
add
sub
cs
jne
pusha
aas
inc
outsl
paddusw
xchg
aaa
in
daa
mov
xchg
stos
adcl
push
es
pop
jnp
addr16
push
in
jbe
std
in
sahf
inc
movsb
adcb
in
movsl
jp
jge
sbb
dec
sbb
cmp
xlat
mov
sub
pop
das
movsb
stos
sbb
in
and
fimull
mov
movb
ss
pop
or
das
mov
inc
push
inc
pusha
or
gs
pusha
insb
fs
sahf
icebp
icebp
jo
sub
and
adc
lret
pop
rcrl
test
mov
daa
mov
adc
and
pop
jmp
dec
jbe
dec
bound
dec
test
in
xchg
and
push
std
ja
pop
sbb
repnz
xor
aaa
sahf
int
lret
mov
popa
cmc
in
jo
aas
insl
iret
add
pop
insl
add
sti
ljmp
mov
test
or
push
sbb
fldl
ret
rol
sbbb
push
and
rorl
fcoms
xadd
rcr
ljmp
sbb
mov
mov
cmp
movsb
inc
test
shlb
fsubs
jg
cwtl
test
fs
test
sbb
cld
add
xor
scas
jle
out
in
cmpsb
ja
pop
arpl
cmc
dec
mov
add
lds
shr
jae
or
sbb
cmc
mov
in
sbb
xor
mov
sub
push
adc
jo
and
cmpsb
rclb
sbb
jns
pop
mov
jns
adc
push
repnz
push
test
or
push
or
stos
pushaw
movsl
aad
in
fcoms
xlat
int
pop
pop
cld
xor
out
sti
mov
or
sbb
test
push
sub
jno
mov
in
test
add
add
int3
xor
sbb
mov
ss
dec
cmpsl
dec
into
xchg
xchg
int
sti
arpl
stos
cmp
and
cmp
pop
les
dec
lret
mov
out
mull
inc
ljmp
jl
xor
cmpsl
sbb
int
lds
sub
xor
js
push
fiadds
mov
les
arpl
inc
mov
das
aaa
mov
daa
adc
pop
push
scas
cs
sbb
js
cmc
xor
int
jae
loopne
adc
loop
pop
cld
ds
mov
dec
in
in
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
addr16
adc
addl
add
fstp
and
div
addr16
and
dec
popf
popa
lock
sbb
push
fs
fsubs
jb
popa
mov
mov
into
dec
into
sbbl
lcall
test
stc
cmpsb
mov
imul
cwtl
sbb
sbb
fildll
je
sbb
xor
jl
sahf
popa
cld
inc
mov
call
loop
sub
mov
test
mov
pop
add
xor
mov
fists
arpl
xchg
jp
scas
mov
movsb
lods
fsubrs
dec
daa
ja
sub
test
pop
pop
jge
jge
adc
mov
test
inc
sti
xchg
mov
fisttps
push
arpl
inc
pop
lds
jae
mov
stos
push
rcrl
cli
loope
cmp
mov
fs
xchg
xchg
xlat
lret
sub
arpl
sub
enter
mov
xchg
jge
push
jae
sti
mov
mov
sub
repnz
dec
rcll
cli
cmp
jmp
push
aad
jle
cmp
daa
test
jne
sarl
loopne
jae
fmuls
gs
or
int
mov
or
jnp
pop
fwait
dec
sub
stos
lds
mov
mov
imul
adc
arpl
sub
fwait
mov
inc
push
stos
mov
jbe
pop
push
std
int3
sub
jge
popf
inc
push
fs
daa
repz
call
loopne
dec
push
pop
cmp
mov
sahf
sti
insl
ret
cld
add
push
iret
dec
jle
push
sbb
outsl
movb
les
fcmovnbe
mov
cld
xchg
sbbb
push
sbb
movsb
push
je
daa
test
js
mov
jle
cmp
jmp
sub
ret
xchg
pavgb
lods
mov
jmp
imul
inc
sbb
cltd
in
fnstenv
mov
leave
bound
or
dec
gs
dec
gs
ret
insb
outsl
sbb
mov
pushf
or
sbb
inc
sub
mov
mov
nop
or
sbb
das
mov
fidivrl
cli
xor
pop
lods
jb
leave
in
lds
pop
scas
es
push
sub
push
bound
ds
inc
xchg
jo
and
pop
js
or
pushf
int3
stos
mov
je
xchg
das
xor
aas
sub
add
add
sub
jecxz
cmp
dec
mov
and
xor
out
stos
adc
add
movsb
cmpsb
lods
sub
mov
xor
add
mov
mov
loop
push
jp
mov
daa
shrb
mov
icebp
dec
push
xchg
popa
sub
out
loop
in
fistl
ds
bound
xchg
repnz
sub
pop
jg
pop
mov
dec
push
push
adc
push
adc
xor
or
lods
mov
shlb
in
outsb
mov
fsts
nopl
push
or
dec
sub
test
enter
sub
cltd
lds
sbb
push
cmp
sub
cs
mov
test
dec
jae
rcll
and
mov
lods
cld
add
xlat
lahf
stos
stos
pushf
mulb
add
pusha
cmpl
and
dec
inc
repz
sti
stc
mov
sbb
and
push
cmp
addr16
andl
xor
push
dec
push
out
lret
mov
adc
sbb
in
mov
enter
or
test
inc
in
xor
cmp
push
popa
in
in
dec
ljmp
push
icebp
pop
sub
lods
ret
push
jno
adc
ror
mov
test
bound
les
out
mov
sub
push
jns
int3
dec
ret
dec
ljmp
jne
lds
mov
pop
adc
push
lods
inc
xlat
dec
fisubrs
cld
shlb
add
push
push
cmp
xorl
inc
aaa
jmp
jbe
ja
test
pop
es
das
cs
add
sbb
or
and
push
ret
jecxz
test
out
daa
popf
inc
in
sbb
insb
jbe
inc
sti
jo
mov
fcoml
hlt
mov
sbb
imul
pop
xor
inc
in
addl
movl
cmp
jo
sub
mov
adc
sbb
push
adc
lcall
push
repnz
roll
cmc
fisttpll
lods
movsb
faddl
lcall
sbb
mov
pop
aam
imul
jmp
adc
shll
mull
push
mov
int
lcall
xlat
lods
shl
scas
loop
or
lock
test
lds
mov
lock
ljmp
mov
xchg
aas
addb
adcl
mov
or
out
xchg
and
in
ljmp
inc
sbb
xchg
fs
pop
or
or
adcb
dec
pop
and
dec
mov
mov
je
xchg
or
inc
ret
mov
int3
dec
mov
repz
push
mov
imul
dec
xor
cmp
xor
mov
jo
imul
cld
push
sub
out
push
xlat
jbe
cmc
cmp
mov
aas
push
dec
fdivs
hlt
loope
lock
push
insl
jnp
ret
inc
test
jo
mov
or
fadds
sub
fcoml
add
mov
imul
xlat
cmp
mov
or
loop
nop
fdivrl
cmpsl
cmp
push
push
dec
jp
loop
push
jns
adc
cli
push
ljmp
push
xchg
push
in
cwtl
in
divb
and
scas
gs
jle
mov
or
imul
cmpl
sub
cmp
add
or
gs
jl
jmp
shll
mov
fdivrl
inc
adc
inc
and
adc
in
push
outsl
xor
fdivrs
sahf
jbe
dec
inc
int
rcrb
pop
test
mov
ficoml
dec
lds
push
add
jmp
cwtl
jno
jo
push
pop
clc
sub
jge
mov
pcmpgtw
dec
xor
xchg
pop
test
dec
lcall
jp
pop
mov
popa
sub
in
js
int
cmpb
or
cmp
and
mov
stos
les
or
iret
push
sarb
mov
jae
dec
push
dec
movsb
jmp
xor
ss
out
test
out
xor
jecxz
aas
or
add
push
cmp
pop
jp
stc
call
mov
fwait
fwait
iret
mov
pop
mov
or
dec
sbb
xchg
test
inc
inc
push
xor
jl
or
stos
imul
xchg
xchg
dec
and
sub
sbb
fiadds
insb
loop
repnz
stc
cs
comiss
add
mov
fs
add
sbb
popw
lea
int
sub
sub
mov
mov
in
inc
pushf
movsl
shll
fwait
sub
fadds
mov
paddd
mov
sub
int3
add
ljmp
movsl
xchg
or
stos
mov
pushf
push
outsl
jecxz
test
scas
jecxz
insl
xor
jns
shl
cmc
hlt
xchg
jp
out
add
xchg
popa
cmp
push
aas
out
js
mov
movsl
and
pop
in
lds
dec
pop
cmp
rorb
jne
push
cwtl
outsb
or
pop
jo
inc
xlat
cltd
andb
pop
xchg
cld
add
and
xor
jns
push
sbb
inc
ja
xchg
cmp
repz
fisttps
lret
add
je
push
mov
add
dec
adc
pop
sub
dec
sahf
cli
sub
gs
sub
xchg
push
lcall
mov
ja
adc
cwtl
xor
push
out
and
push
fimull
sbb
dec
imul
andl
aad
inc
lcall
test
ja
pushf
xlat
xor
ds
aaa
arpl
cmp
lock
lcall
pop
rcll
pop
pusha
mov
cmp
insb
lahf
sub
mov
mov
jmp
jge
cs
shrl
rclb
mov
inc
mov
inc
mov
loopne
addb
stc
jno
stos
push
insl
loop
inc
aas
jge
dec
add
loop
add
mov
lock
pop
test
push
fldcw
pop
xchg
shlb
fidivrs
mov
fwait
lea
lock
xor
sbb
xor
mov
pushl
int3
addb
pop
mov
pop
jp
cs
jbe
int3
lcall
loopne
add
push
pushf
subb
jae
scas
mov
xchg
sbb
shlb
push
add
jmp
cmp
or
inc
arpl
je
dec
pop
hlt
in
jmp
fbstp
jno
into
clc
es
jb
in
lock
xchg
dec
shll
ret
xor
movsb
std
push
and
sahf
cmp
and
cmc
inc
cwtl
xorl
arpl
sbb
push
mov
popa
in
sub
movsb
pusha
fs
sbb
sbb
or
and
push
fisubl
cld
out
lahf
mov
loopne
mov
push
cmpsb
lahf
push
lcall
scas
adc
dec
bound
int3
icebp
loop
sbb
cmpsb
mov
test
dec
shr
pop
mov
sub
in
das
push
pop
jnp
repnz
data16
cli
cwtl
inc
sbb
sbb
scas
push
rclb
mov
pop
sbb
cmp
sbb
shrl
cmc
jnp
icebp
mov
dec
jbe
int
jo
je
pop
popa
aas
into
movsl
cmp
scas
loope
sub
lret
xorb
rcll
or
clc
dec
fs
outsl
repz
std
adc
nop
ds
loop
test
bnd
fistpl
loope
pop
mov
xchg
push
imul
adc
xchg
jg
push
inc
jb
dec
jl
push
call
push
loop
inc
push
mov
mov
incb
xor
ret
lret
mov
in
and
sub
mov
adc
sbb
rcr
pop
shlb
daa
mov
aaa
bound
push
push
lret
lds
lahf
cs
mov
insb
imul
test
stos
daa
jns
adc
cmpsb
mov
stos
jle
adc
cmp
aam
js
sub
push
push
mov
jmp
jae
fcmovnbe
or
push
lret
adc
cwtl
fcompl
sub
incb
aam
or
das
inc
fcomi
adc
push
aam
imul
pop
dec
rol
sbb
movsl
dec
jmp
xlat
or
cmc
cmpsl
jno
sbb
les
clc
loope
add
mov
lock
ja
and
aaa
jae
and
sbb
loope
loop
sbbb
pop
jnp
leave
sub
dec
sbb
js
dec
das
shl
shrb
ret
mov
xchg
das
xchg
xchg
xor
outsb
je
or
or
jmp
fidivrl
les
sub
cwtl
and
jg
xchg
pop
dec
push
outsb
mov
lcall
xchg
or
stos
rcr
out
mov
testb
out
loopne
pop
int
cltd
pop
leave
jae
in
nop
push
push
arpl
lret
repnz
pop
fmuls
imul
push
sbb
pop
push
fistpll
enter
mov
and
movsl
xchg
and
int3
adc
mov
xchg
push
fadd
inc
jae
les
add
hlt
mov
shll
jnp
ljmp
mov
mov
xor
jp
fwait
push
sbbb
jno
leave
insb
les
inc
mov
ja
pop
or
scas
mov
jp
lea
pop
sub
mov
jmp
mov
loop
sub
add
add
shlb
mov
pop
imul
adc
push
mov
xor
lods
repnz
inc
fsubs
dec
pop
cltd
in
popa
or
lea
loop
xchg
mov
popa
jne
and
sub
sbb
out
and
sub
mov
fwait
incb
mov
or
inc
xchg
add
outsl
sbb
dec
adc
in
and
inc
es
imul
mov
cmp
sub
xchg
adc
ror
cmp
pop
fmull
punpckhdq
xlat
inc
insb
test
pop
jb
jp
xchg
and
outsb
and
test
mov
sub
xchg
ss
cld
dec
push
or
sub
cmpsl
or
mov
cmpsl
cli
pop
dec
and
sbb
scas
cmc
imul
cmpsb
mov
pop
icebp
pop
push
out
test
mov
mov
aad
or
sahf
add
jmp
pop
and
cld
dec
xor
inc
pop
lahf
pop
andl
pushf
out
cmp
mov
fwait
arpl
adc
pop
data16
pop
popf
pop
cwtl
mov
divb
rolb
and
mov
pop
in
call
push
xchg
xlat
mov
mov
jbe
lods
lea
sub
iret
dec
pop
mov
inc
rcrb
cmpl
test
repz
adc
je
test
test
les
je
cs
adc
dec
sub
cmp
pop
addr16
sbb
and
sbb
mov
fildll
lock
out
jge
andl
mov
test
mov
mov
imul
and
enter
push
mov
imul
add
inc
or
pop
fsubrl
xor
dec
and
mov
dec
ja
jno
cmp
mov
pop
sub
sbb
jl
stc
lret
and
adc
lret
inc
mov
stc
sahf
xor
not
andl
int
pop
test
enter
mov
sub
out
mov
imul
jl
cmp
jge
mov
xor
mov
aas
mov
adc
pushf
notb
das
mov
lods
cltd
push
push
mov
or
xor
das
inc
and
push
pusha
dec
inc
or
add
push
mov
int3
leave
xor
loop
daa
sub
hlt
or
mulb
aam
repz
push
les
adc
push
ficoms
test
xchg
lods
xor
jp
mov
xor
adc
pop
shlb
jecxz
inc
sarl
bound
stos
sarb
movsl
lret
mov
jno
mov
das
mov
jnp
cmpb
mov
or
std
stc
push
or
xchg
in
mov
jecxz
inc
mov
push
scas
sahf
dec
leave
lret
inc
ret
mov
sbb
cmp
ffree
push
out
addl
arpl
rcll
in
jno
test
out
aaa
or
cmp
jg
add
add
jmp
stos
insl
repnz
dec
mov
pop
loope
movsb
fwait
shrl
mov
loopne
jl
hlt
les
jl
fsubp
jp
jmp
repz
insl
and
adc
jo
add
lahf
nop
mov
rcrb
add
rcr
pop
or
out
in
jmp
aam
insl
lahf
or
es
jo
dec
js
add
add
sbb
dec
mov
mull
adc
mov
jle
pop
pop
mov
out
sbb
adc
adc
xchg
dec
jl
aad
inc
xchg
das
cmc
cmpl
fisubs
outsb
adc
jmp
inc
xchg
add
mov
and
fcomp
sub
inc
jne
das
mov
xchg
cmp
jmp
dec
add
fisubrl
jmp
je
add
addr16
push
and
std
fs
scas
adc
mov
or
push
push
add
push
ret
jo
sub
test
jge
idivb
or
xchg
arpl
jae
or
and
cmp
call
stos
mov
nop
lods
dec
lods
sbb
jb
dec
aam
jl
repz
sbb
dec
les
pop
push
adc
cmpsb
imul
or
sub
push
mov
bound
aaa
sahf
inc
lcall
pop
stos
lahf
pop
cmc
pop
lahf
lret
mov
mov
insb
aas
add
in
jge
mov
into
and
in
push
jno
fistpl
push
fsubrs
stos
add
mov
lods
jmp
out
sbb
jo
insb
xor
xchg
mov
inc
mov
sub
shlb
shll
cmpsl
jns
js
jbe
sbb
subb
mov
pop
push
sub
mov
xchg
fwait
sub
pop
mov
jbe
cmp
add
leave
push
xor
shl
xchg
dec
sbb
cltd
or
xor
jl
pop
cli
fnstcw
jnp
into
mov
mov
mov
dec
jbe
pop
addr16
out
push
jns
es
mov
pop
jno
dec
mov
xor
daa
dec
xchg
iret
lods
mov
ret
mov
pop
jle
push
roll
std
sbb
sbb
xor
and
dec
adc
jmp
lods
scas
incl
mov
lret
in
xlat
cmp
or
sub
testb
xchg
push
mov
lcall
or
bound
sbb
popl
idiv
and
push
xor
test
xlat
neg
adc
lods
xor
mov
mov
adc
inc
data16
mov
fwait
xchg
pop
mov
je
pop
jmp
sbb
pop
xor
sbb
xlat
stos
dec
int
mov
call
xchg
in
sbb
push
push
jp
filds
lods
pop
jecxz
dec
call
add
fstpt
jmp
leave
jne
jge
cmp
test
in
dec
idiv
loop
iret
je
push
outsb
icebp
ss
lds
test
fdiv
cltd
scas
pop
lods
test
shl
orb
xchg
adc
sub
ljmp
jg
inc
lea
mov
xchg
insb
ret
add
pusha
repnz
push
rclb
sahf
fildll
cli
jmp
mov
push
inc
test
mov
push
insb
mov
cmp
lahf
adc
jp
push
decb
pop
js
push
mov
and
jmp
push
in
jl
int
sbb
ficoml
xor
arpl
add
fwait
jns
fnstenv
movsb
jae
fwait
nop
cmp
adc
dec
xor
jns
inc
xor
cmp
mov
in
pop
mov
mov
xor
jmp
mov
pop
decb
popf
outsl
sahf
fiaddl
add
push
mov
jecxz
pop
cld
lock
fnstcw
pop
mov
lods
sbb
subb
ret
aas
pop
xchg
xchg
out
shlb
and
jo
scas
outsl
pop
adc
roll
jns
jne
and
xchg
cli
mov
out
mov
jns
sbb
inc
negb
push
mov
cld
aad
int
pop
rcrl
enter
cmp
out
or
das
xor
into
mov
sbb
aas
daa
lret
pop
or
andb
jl
pminub
shr
xorb
ja
mov
insb
push
fwait
sbb
ds
aad
mov
mov
or
sbb
leave
aam
pop
or
push
add
outsl
sub
dec
add
jle
sbb
jp
clc
nop
jmp
pop
xor
data16
mov
push
add
mov
movsb
out
sub
leave
dec
jae
mov
mov
cmp
leave
std
xchg
jle
lock
inc
out
mov
fisubrl
mov
push
mov
cmp
cmp
jl
adc
inc
adc
sti
sub
jns
sub
shll
mov
jl
sbb
cmpsb
lret
add
rorl
mov
jle
fnstenv
shlb
jl
adc
or
or
dec
pop
push
into
xor
inc
and
shr
mov
mov
or
or
xchg
scas
loope
xor
stos
xchg
and
fwait
and
inc
into
cmpsb
iret
or
outsl
jge
je
mov
sbb
xlat
call
inc
cmp
push
int
popa
and
fistl
jmp
cmp
popa
fldt
div
push
xor
in
clc
psubsb
sub
sub
sbb
jg
imul
mov
mov
and
push
rcrl
add
fcomps
jge
add
xchg
andb
imul
mov
outsb
iret
pop
ds
mov
cmp
jp
out
out
or
add
lret
imul
repnz
xor
fs
enter
ficomps
push
mov
fsubrs
dec
mov
inc
cmp
sahf
sbb
adc
arpl
orl
cmp
cmc
or
xchg
mov
out
pop
lods
repz
sti
ds
enter
jmp
cmpsl
aaa
mov
hlt
xchg
inc
cmp
mov
mov
fnsave
jb
xor
cmc
jp
ljmp
mov
cltd
insb
pushf
jl
xchg
out
mov
push
mov
enter
pop
mov
nop
ja
imul
xchg
lcall
jb
jb
jmp
popf
inc
ds
add
fsubrl
jb
pop
jge
ss
sbb
addl
test
imul
rcll
or
mov
mov
cltd
shrb
clc
out
cmp
sbb
pushf
jns
je
cmp
gs
or
lcall
sub
test
jb
ds
stos
fidivrs
cmp
popa
lret
fisubs
hlt
outsl
icebp
lock
push
xchg
lods
mov
icebp
vmwrite
mov
jmp
mov
xor
dec
das
aas
mov
xchg
sbb
add
jbe
ds
sbb
mov
jno
inc
icebp
sbb
cli
xorb
mov
fsubs
aaa
sti
icebp
insl
fidivrs
inc
sub
mov
clc
cwtl
jmp
int
clc
je
inc
and
loopne
mov
adc
in
shll
dec
jb
push
pop
adcb
xor
inc
mov
fwait
xor
arpl
xor
ret
lcall
dec
sahf
push
xchg
sarl
add
xchg
push
xchg
rcrb
outsb
pop
sub
xchg
test
ljmp
push
or
pop
mov
add
test
mov
pop
or
shlb
push
popa
push
mov
adc
adc
jo
push
pop
jns
sub
pop
pop
or
xlat
dec
test
mov
insl
sub
xor
mov
adc
rorl
movsl
repnz
pop
fldl
das
je
inc
mov
jne
iret
xlat
subl
aaa
mov
lds
loopne
sbb
fstps
in
bound
pop
into
xchg
fidivs
add
cltd
sub
inc
add
loopne
imul
push
das
movsb
nop
and
jmp
inc
pop
int
mov
sbb
nop
jbe
sahf
inc
adc
mov
andl
or
rclb
pop
cld
jg
loop
and
repz
ljmp
in
xchg
outsb
sti
hlt
cs
sbb
lock
push
xchg
fsubl
xchg
clc
test
and
pop
mov
pop
lds
mov
sub
sbb
sahf
and
sbb
lods
mov
gs
cmp
xor
mul
sub
and
add
jge
mov
in
push
pop
in
bound
jbe
mov
iret
xchg
fsubr
pusha
mov
mov
pop
and
mov
stc
scas
xor
dec
jo
or
aas
adc
or
sub
mov
cmp
mov
mov
aad
push
test
cmp
loope
insl
fsubrl
push
mov
mov
or
and
lds
mov
and
enter
lret
jb
icebp
inc
and
in
pusha
sub
sub
jbe
and
adc
ror
or
mov
sub
int3
test
ret
add
into
test
adc
jg
testl
out
and
int3
movsb
jle
pop
and
add
mov
dec
bound
mov
dec
cmp
sbb
fwait
cmp
jae
in
push
jno
int3
xchg
push
pushf
out
xor
mov
sub
xchg
sbb
push
scas
adc
cmp
out
add
jle
inc
push
ds
inc
or
fildll
xchg
lcall
xchg
mov
les
add
push
jg
into
jge
and
stos
sub
and
mov
mov
les
insb
adc
adc
jns
mov
inc
repnz
stos
imul
lods
dec
ss
dec
jnp
mov
rorl
jnp
jl
mov
xchg
and
std
test
jp
test
bnd
repz
mov
jae
test
pop
sahf
xchg
lods
scas
add
popf
adc
mov
sub
pop
lock
jmp
push
cltd
ss
and
std
jge
dec
xchg
popf
daa
push
and
fcomip
idivb
or
and
xchg
jbe
jg
ficoms
mov
inc
stos
and
fcmove
mulb
xlat
aam
movb
test
lods
pop
sub
fstps
lcall
mov
pop
mov
movsb
push
mov
fucomi
push
lds
xor
inc
shrw
ss
or
adc
or
adc
xchg
movsb
aas
ror
lcall
mov
adc
jo
jecxz
xchg
push
clc
push
jge
arpl
sbb
push
icebp
fs
mov
xchg
mov
xchg
lods
cli
into
or
enter
mov
in
sbb
faddp
adc
in
jecxz
divl
push
jnp
nop
gs
push
gs
mov
in
sti
lods
or
movsb
popf
add
and
mov
imul
frstor
cmp
cwtl
cmpsl
push
cmpsb
fwait
or
push
push
and
and
jmp
add
or
dec
clc
or
push
jns
cltd
dec
cwtl
stos
add
popw
test
jge
lret
push
test
push
push
xor
lahf
pop
lods
rcll
clc
xor
addr16
test
out
ss
out
movsl
mov
mov
mov
sbb
xor
scas
push
jecxz
xchg
imul
xchg
stos
mov
cli
or
ficompl
test
sub
pop
xor
mov
xor
ja
push
sbb
jns
add
pop
je
or
xchg
filds
cmp
mov
cli
aam
add
add
imul
xor
fwait
push
lods
hlt
je
sbb
jae
mov
jge
jb
jns
int3
push
repnz
es
les
push
pushf
xchg
inc
sub
xor
adc
mov
xor
push
xchg
iret
test
jmp
icebp
loopne
jbe
dec
jg
inc
test
lds
dec
cmp
jge
jl
sbb
clc
and
jge
cmpsl
stos
fildl
popf
mov
frstor
rclb
mov
cwtl
into
popa
out
stos
in
pop
stc
stc
add
sahf
aad
sete
push
lcall
jns
mov
mov
stc
out
scas
xchg
adc
data16
orb
cltd
mov
dec
xlat
inc
iret
into
shlb
and
dec
cmpsb
mov
mov
xchg
sub
or
jne
sub
repnz
pop
sub
xorb
xchg
jl
std
or
lods
or
xor
sub
jp
aaa
dec
inc
jg
mov
or
jne
cmc
cltd
cmc
addb
xchg
cmp
imul
daa
push
cld
cmp
cmp
xor
pusha
xchg
es
sub
in
sub
lea
jecxz
fnsave
jge
test
sub
pop
idivl
jb
cwtl
gs
or
outsb
cwtl
out
add
add
jns
and
jbe
test
mov
or
jl
xchg
into
or
in
pop
inc
sbb
cwtl
or
lock
shlb
adc
stc
in
addl
xchg
and
xchg
cmpsl
adc
fcomps
xchg
xchg
incl
test
or
test
mov
into
pop
test
sti
testb
inc
jl
call
cmpsl
movsl
aam
ja
push
add
mov
jge
xchg
jecxz
std
sbbb
ss
std
daa
sbb
add
insl
ja
jne
lret
mov
fidivrl
imul
push
dec
cmp
mov
popf
add
pushf
push
adc
stc
lods
shr
outsl
jae
movsb
call
fiaddl
xlat
fs
inc
mov
mov
push
inc
fmul
sub
vphadduwq
jmp
icebp
inc
cmp
lock
fs
test
push
loopne
repz
push
repz
sub
push
push
xchg
xor
xchg
arpl
shrb
push
fsubp
fsubl
or
cmp
scas
test
jno
dec
out
pop
sub
and
pop
movsb
cmp
or
mov
call
sarl
je
jbe
mov
mov
out
into
sub
push
xchg
test
lea
cwtl
cmp
loope
scas
daa
out
cltd
xorl
mov
rcll
int
adc
mov
push
cmc
pop
xlat
push
cmp
rclb
adcb
add
lcall
ret
xchg
push
fldenv
push
loop
idivb
mov
mov
testb
out
push
orl
aaa
fwait
pop
sbb
repnz
js
xor
inc
stos
mov
mov
das
dec
ffree
bound
andl
pop
imul
out
xchg
mov
mov
scas
out
jne
es
fmul
jb
fistpll
into
mov
cmp
adc
shr
test
pop
or
jb
jmp
mov
adc
or
push
movsb
pop
sub
xlat
test
push
mov
and
je
jnp
push
dec
mov
int3
movsb
inc
push
xor
addr16
mov
pop
js
enter
aaa
cmpsl
lret
ret
mov
mov
cmp
movsb
subl
test
cs
testb
mov
jae
ja
out
jmp
pop
jbe
pop
jg
inc
sbb
jecxz,pt
insb
loopne
fidivl
dec
arpl
jno
mov
push
xchg
fs
mov
ret
nop
test
push
ss
or
sbb
cmp
fs
sub
movsb
enter
mov
incb
jo
mov
add
dec
add
aad
and
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
ss
leave
mov
mov
xor
inc
pop
or
sbb
es
dec
inc
sbb
or
mov
ja
jo
fcomi
lock
test
pop
push
add
pop
or
fdiv
and
jne
in
ret
fistps
rolb
out
mov
mov
addr16
push
imul
adc
push
mov
call
push
rsm
out
mov
jp
std
int
sub
jl
fucomp
add
aad
or
cmc
mov
test
fcmovnbe
mov
mov
into
push
popa
test
sub
inc
push
adc
jmp
dec
data16
call
sbb
stos
pop
cli
adc
sti
ss
test
mov
jp
rcrl
call
mov
call
clc
stos
mov
or
dec
ljmp
outsl
in
call
jge
mull
jge
mov
cs
les
loop
dec
bound
adc
or
lea
leave
mov
shrl
inc
xchg
inc
fsubr
stc
and
adc
into
negl
loopne
mull
push
int3
addl
push
pop
jo
inc
mov
pop
sbb
sub
fdivrs
loop
jno
in
stc
mov
movsb
jo
mov
mov
sbb
cmpl
pop
fstl
mov
add
js
cmp
aad
shrl
xlat
and
and
je
mov
outsb
cmc
jno
and
xor
mov
shrb
pop
mov
fsubs
mov
daa
insb
mov
movsb
fldl
orb
mov
mov
out
sbb
jp
push
sub
movsl
mov
push
hlt
mov
mov
popa
out
push
mov
pop
icebp
dec
push
and
adc
stc
cmpsb
mov
mov
push
lds
pop
fdivl
movb
xchg
mov
push
xchg
and
and
sbb
or
mov
mov
test
push
add
dec
adc
sbb
inc
push
les
sti
sbb
mov
mov
cmpsb
ja
push
aas
add
mov
or
sub
lret
xchg
inc
jp
sub
pop
inc
arpl
sbb
daa
mov
jae
flds
pop
fcmovu
popf
dec
add
push
xchg
out
ljmp
sbb
mov
push
sbb
inc
cmp
mov
sub
bound
pop
fsts
lds
dec
aaa
xchg
ss
jp
mov
dec
les
push
pxor
je
jge
inc
xchg
sti
ja
out
imul
ss
dec
lods
jnp
push
inc
insb
ds
add
int3
lahf
sub
dec
out
cmp
push
data16
lret
mov
jne
sti
mov
es
fmulp
pause
pop
pushl
jnp
pop
pop
jecxz
dec
mov
inc
divb
hlt
es
jecxz
dec
imul
jae
add
fisubl
dec
and
fucom
aaa
pusha
ffreep
scas
cmp
in
xchg
aad
data16
dec
cmp
xor
mov
inc
lods
stc
jecxz
adc
inc
jb
sahf
out
cmp
shl
dec
inc
cmp
pop
lods
mov
aad
mov
mov
pop
dec
jb
push
mov
sub
and
adc
or
xchg
rolb
and
test
mov
xchg
sbb
ss
fcoms
dec
jo
daa
jmp
xor
nop
sbb
pop
or
iret
cmp
aaa
xchg
shrl
mov
imul
fisttpl
std
xor
and
adc
movsb
mov
push
aam
out
mov
inc
roll
dec
test
push
push
mov
ljmp
mov
or
push
fimull
mov
je
ja
ret
mov
ljmp
cmpsl
mov
punpckhdq
mov
mov
aas
push
sub
push
jno
leave
addl
stc
mov
movsb
inc
enter
cld
xchg
add
push
lds
mov
inc
dec
arpl
movsb
clc
or
icebp
das
cmp
aaa
fidivl
push
xchg
pushf
shlb
xchg
mov
xchg
test
xor
inc
sub
pop
and
dec
jl
ret
xlat
das
or
and
repnz
xchg
mov
cmp
imul
mov
icebp
fs
ja
or
xchg
add
outsb
cmpsl
out
in
inc
mov
pop
or
pop
sub
icebp
es
xlat
popf
jle
push
or
xchg
pop
and
mov
fcom
pop
sbb
cmp
sbbb
inc
dec
idivl
jge
xor
lcall
cs
hlt
push
cmova
sbb
mov
incb
in
dec
sbb
add
movsb
btc
dec
movsl
test
add
lock
mov
lods
mov
mov
mov
mov
shll
add
mov
jo
adcl
xor
orl
sbb
sbb
pop
aam
icebp
cmpsb
in
and
test
dec
mov
orl
inc
fsubs
iret
icebp
xor
or
dec
dec
pop
mov
dec
sbb
add
lret
mov
cmp
sub
imul
and
mov
popa
mov
and
fs
sub
push
jne
dec
cmpsb
arpl
test
xchg
fisubl
cs
jo
mov
in
sub
lods
xchg
pushf
jge
dec
and
mov
arpl
jo
divb
shll
in
popf
sarl
stc
int3
adc
xor
cmc
jl
repnz
sahf
fwait
jl
pop
fst
rorb
push
add
mov
cmp
dec
sbb
in
imul
std
gs
stos
sbb
and
push
rcl
gs
negb
addb
xchg
nop
mov
loope
mov
lods
imul
mov
mov
sbb
push
mov
add
pop
gs
cltd
sbb
fwait
mov
ror
int
pop
jg
sbb
add
fsubrl
aam
cmp
xor
push
movsl
call
xor
push
add
xchg
mov
dec
or
inc
mov
pop
adc
test
push
mov
jo
or
mov
xlat
insb
or
cmp
js
int3
outsb
mov
lds
aas
cmp
test
mov
test
dec
mov
fwait
inc
dec
cwtl
ljmp
ljmp
add
fists
orb
push
xchg
push
adc
dec
push
push
dec
mov
scas
je
add
test
pop
mov
enter
mov
pusha
pushf
add
in
loop
test
scas
pop
pop
in
leave
and
addl
enter
xor
pop
out
pop
repnz
push
jle
imul
pop
aam
push
iret
jb
cmp
hlt
add
les
jno
add
cmpsb
jl
insb
std
out
push
jle
mov
sbb
js
push
data16
cmp
aam
jo
out
sub
shrb
inc
rcl
sahf
das
add
and
imul
jns
aam
push
nop
scas
test
loope
sub
std
leave
lcall
xchg
pop
xchg
sub
les
daa
aam
std
pop
fldl
xchg
jnp
sub
pop
push
and
add
btl
mov
mov
push
or
test
xor
in
fidivs
inc
popf
outsl
add
pusha
jns
jmp
pop
add
pusha
loope
jae
push
sbb
mov
test
add
push
mov
int3
out
inc
test
stos
push
push
add
mov
lahf
popa
popf
cmpsb
out
push
pop
enter
clc
pop
les
shrb
sub
or
roll
repnz
xchg
push
out
xchg
dec
pop
movsl
pop
ss
loope
in
mov
xchg
jmp
xchg
push
into
xor
ja,pt
xchg
rol
cmp
push
icebp
ja
inc
fildll
xor
pop
out
dec
mov
aas
sarb
xchg
inc
insb
addr16
mov
mov
mov
jnp
in
jbe
dec
loop
lea
ja
xor
imul
sub
pop
fwait
or
subb
inc
adc
arpl
cmp
mov
fdivp
sti
sub
mov
inc
jns
cli
xchg
stos
outsb
nop
pusha
push
insb
cmp
mov
xlat
fnstcw
fstpl
cmp
mov
jae
xor
cmp
test
in
xchg
push
fs
pop
sub
jns
cmc
repnz
sub
es
in
xchg
cmp
jmp
cs
fwait
xor
push
push
nop
dec
xchg
ret
lcall
clc
scas
outsb
push
aaa
fwait
cmpsb
lods
jmp
xor
pushf
push
xchg
dec
mov
decl
sarb
push
clc
sub
aam
adc
add
or
xchg
cmpsl
cli
mov
mov
adc
dec
inc
out
shr
dec
lret
xchg
pusha
fildll
nop
cmp
mov
xor
or
sub
sub
mov
add
sbb
dec
mov
bnd
ljmp
cmp
jbe
outsb
nop
nop
jmp
lcall
shlb
jle
xchg
pop
mov
or
insl
xor
es
mov
xchg
loope
lahf
mov
int3
dec
add
incl
and
nop
sbb
fsubrp
pop
add
pop
cmp
fdivr
cmp
rorl
xor
jns
enter
pop
out
cmp
gs
mov
in
dec
pop
fsub
jnp
je
dec
xorb
pop
mov
rcr
mov
bound
repz
rorl
and
sbb
xchg
xchg
jmp
ljmp
lret
cmp
adc
xlat
xchg
aam
sti
lret
cmp
xor
xor
mov
scas
push
mov
sub
jne
mov
adc
jns
sub
popf
pop
inc
push
push
pop
xorl
fcmovne
pop
ret
ds
stos
sub
sub
push
lcall
je
test
fs
push
mov
into
and
lods
xchg
in
adc
arpl
rcrb
xchg
imul
mov
inc
pop
pusha
add
xchg
ljmp
jb
js
push
lods
pop
stos
mov
cwtl
imul
dec
mov
fsubs
out
cmpsl
repnz
ret
or
filds
pop
rcrb
in
mov
jecxz
pushf
testb
and
or
loope
xchg
rcrb
nop
sbb
push
cs
lahf
lcall
inc
pop
bnd
xchg
and
aad
sbb
add
daa
xchg
sub
shrb
add
cmp
lcall
movsl
lock
fmuls
aam
mov
pop
insl
mov
sub
mov
jg
neg
lret
nop
out
aam
xor
inc
ja
ret
cli
ret
pop
xchg
addb
mov
dec
cmp
aas
pushf
andb
repz
arpl
loop
lcall
call
insl
iret
add
cs
int
fcompl
imul
test
stos
fidivrs
dec
smsw
lahf
jg
outsb
rcrb
ds
inc
cwtl
in
adc
js
lods
test
push
fistps
inc
add
shr
xor
sub
push
das
adc
out
iret
adc
clc
outsb
adc
cltd
into
data16
hlt
rolb
lock
jge
dec
fimull
loopne
pop
cmpsl
stos
mov
arpl
jge
pop
std
daa
sub
push
enter
push
imul
jg
xor
inc
dec
cs
sub
rorl
mov
lea
repnz
add
sarb
inc
add
fists
mov
push
add
jno
cmp
cmp
push
xchg
dec
and
jecxz
or
shlb
mov
lcall
ljmp
push
out
movsb
push
ds
pop
icebp
mov
pop
dec
mov
gs
cmpsl
enter
lret
add
jae
inc
sub
adc
add
adc
sti
dec
mov
inc
addr16
dec
ljmp
mov
cmpb
iret
mov
push
jge
fs
cmp
cmp
inc
adc
add
into
lcall
cmp
loopne
xor
je
nop
stc
data16
into
int3
sub
scas
fwait
test
in
aad
jecxz
sub
shll
add
outsb
test
or
dec
into
xor
jo
xlat
mov
addr16
sub
mov
cld
ljmp
cmp
cmp
ja
xchg
jp
xchg
mov
loop
lss
aad
mov
mov
aas
jmp
icebp
xchg
lcall
xor
pop
fadd
add
push
add
mov
dec
adcl
rorb
xchg
pop
into
pushf
xchg
mov
popf
mov
add
movsb
mov
jo
push
mov
dec
outsl
hlt
jbe
sbb
out
pop
ss
arpl
dec
in
out
hlt
fcoms
repnz
xchg
pop
sbb
lods
xchg
mov
xor
insl
cmp
xchg
lahf
orb
cs
aaa
out
psubsw
scas
push
cld
jo
pushf
fs
je
rorl
fistl
bound
add
xchg
and
dec
insl
and
pop
mov
rclb
sub
jbe
cmp
dec
cmp
aaa
push
push
ljmp
or
mov
icebp
ljmp
xor
mov
xchg
pushf
and
xor
je
aam
add
add
mov
decb
sbb
or
jl
call
sub
dec
ss
mov
inc
sbb
jbe
dec
jle
pop
movsl
adc
int3
push
sub
jmp
cmovge
and
shl
ja
or
sub
mov
lods
jns
cli
sub
adc
sarl
and
dec
mov
movsl
ret
sbb
pop
in
xlat
sub
cmp
fwait
rcrb
cmp
add
add
jbe
jbe
xchg
aam
sbb
lcall
test
adc
lods
dec
mov
shrl
loope
int
into
sbb
inc
lock
lcall
les
fs
stos
add
dec
cwtl
das
mov
adc
sbb
imull
mov
xlat
lods
xchg
mov
sarb
or
push
xor
lahf
rolb
cwtl
scas
mov
and
lock
cmp
lock
mov
jno
loope
es
jae
fistl
or
pop
fcmovne
rol
aaa
sbb
je
iret
dec
imul
sub
mov
jp
jne
insl
push
jmp
pushl
out
inc
mov
cmp
cmc
mov
push
cmpsl
enter
cmp
adc
js
push
jmp
int
mov
and
cmp
mov
divl
in
imul
int3
call
add
lea
loop
and
fidivs
adc
jne
or
arpl
sbb
xchg
lds
imul
addl
push
push
test
test
addb
pop
adc
in
rcll
inc
and
scas
test
dec
gs
sbb
xchg
popf
add
pop
mov
bnd
popf
add
das
sub
js
imul
jnp
cmp
sub
in
sub
cs
xor
xor
xchg
mov
cltd
sub
mov
and
sbb
xorl
lea
sbb
pop
cmpb
xor
pop
dec
xor
ja
dec
outsb
adc
jno
cltd
in
iret
push
in
jmp
sub
push
push
jbe
movsb
movsl
stc
cmp
in
dec
and
mov
add
pop
push
push
sahf
stc
mov
sbb
ja
mov
add
bound
cmp
mov
inc
push
out
push
xor
xchg
push
ret
shl
fidivl
pop
rorl
cmc
jge
inc
movsb
fsts
dec
adc
fwait
stc
add
add
loopne
xchg
jp
fcom
cmp
push
ds
sub
push
dec
pop
cmpsb
push
ret
or
or
sbb
push
sub
testl
loopne
pop
out
pusha
inc
out
adc
imul
insb
movsb
cmp
imul
cmp
in
call
imul
sub
or
js
cmpsl
dec
add
inc
push
mov
pop
sbb
in
mov
cmc
dec
inc
lcall
es
das
sub
mov
shl
out
sbb
ja
out
dec
out
add
mov
adc
popf
ficoml
aaa
in
push
jnp
in
mov
js
insb
test
das
dec
adc
mov
ds
adc
lcall
inc
sbb
xor
loop
jnp
inc
pop
adc
aaa
movsl
pop
mov
jbe
push
cmpsl
arpl
sti
jae
pop
sub
sti
jae
hlt
fimuls
mov
in
test
into
pop
lods
mov
inc
jle
icebp
dec
push
int3
and
or
jmp
int
fucomi
in
fst
add
fwait
push
stc
js
mov
fs
mov
xchg
enter
imul
cld
pop
push
cmpsl
arpl
hlt
push
mov
subb
and
push
mov
stos
mov
hlt
cmpsb
std
scas
mov
lret
je
jb
push
ja
in
jg
clc
fwait
jno
pop
adc
andb
mov
xor
pop
cld
ljmp
xchg
mov
ficompl
and
pop
fwait
scas
jecxz
negl
jb
push
fisubrl
repnz
lods
arpl
insl
mov
bound
cmpsl
lock
ss
in
or
sbb
pop
cmp
inc
mov
sub
int
cmp
or
lea
and
xchg
ja
mov
cwtl
mov
push
in
loop
or
test
cmp
pop
cmc
mov
xchg
lcall
sarb
cwtl
inc
and
lcall
adc
in
mov
stos
pop
loope
fwait
out
pop
popa
cmpb
adc
cwtl
push
aas
sub
xor
vpaddb
cmp
add
jmp
shld
test
mov
in
push
pop
int3
xchg
xchg
cmpsl
outsl
push
add
sub
sub
mov
shl
int
stos
add
mov
mov
inc
push
dec
mov
das
lods
xor
sub
and
pop
xor
push
mov
adc
aaa
imul
pop
add
inc
push
repnz
aad
inc
jmp
imul
push
sub
pop
xchg
mov
popl
push
jb
fldt
lods
add
pop
push
movsl
call
sar
cld
aas
outsl
outsb
jnp
outsb
test
or
shll
insb
jne
loopne
fdivr
repnz
movsb
pop
push
fldcw
pushf
push
inc
cmc
out
pop
ficompl
xor
ds
std
adc
loopne
fdivr
or
sub
and
sub
enter
and
add
ds
leave
sub
jne
lcall
mov
inc
in
insb
lret
repnz
xchg
mov
sahf
pushf
rcrl
dec
pop
jmp
call
clc
xchg
out
pop
mov
cmp
cwtl
mov
mov
lods
pop
mov
bound
pop
in
ret
add
fildl
mov
push
add
daa
mov
mov
ss
int3
scas
push
xor
ja
pop
and
jmp
or
xor
mov
inc
push
pusha
lahf
aas
lods
add
pop
popa
aaa
cld
jecxz
mov
imul
loopne
jnp
fistpll
bound
pushf
movsl
adc
fnstenv
shlb
fcomp
cmpb
pop
sub
jge
es
dec
dec
pop
mov
sbb
adc
outsl
push
aaa
scas
rol
mov
jp
or
or
jo
adc
adc
insl
arpl
push
sbbb
popf
pop
xlat
cmp
mov
stos
mov
mov
fld1
adc
jno
adc
mov
xor
fwait
sub
pop
mov
rol
mov
jmp
push
es
push
outsl
mov
pop
dec
andb
pop
adc
andl
fadds
dec
into
jbe
jns
mov
hlt
daa
sub
idiv
es
addr16
mov
inc
jg
lock
push
notb
dec
incb
sbb
daa
out
adc
xor
mov
pop
int3
dec
sub
movsl
xchg
orl
sbb
mov
test
inc
sub
jg
push
ret
into
xchg
and
pop
pop
mov
push
test
jmp
lds
xchg
add
ja
or
mov
daa
mov
bound
cmp
inc
xchg
sbb
rolb
add
sbb
out
popa
mov
int
adc
mov
push
jo
push
push
cmp
xchg
stos
add
xchg
cmp
push
xlat
cmp
sahf
mov
in
adc
dec
jnp
pop
lret
and
mov
int
mov
sbb
scas
cmp
in
adc
jecxz
scas
pop
pop
jmp
ret
sub
aad
xchg
js
sub
inc
adc
cmpsl
not
xchg
xchg
fbstp
jp
mov
daa
notb
pop
pop
and
pop
and
push
xchg
addr16
mov
jnp
mov
adc
mov
rorl
ret
and
and
arpl
icebp
or
pop
xchg
xchg
gs
cmpb
mov
pop
shl
notl
push
adc
mov
adcb
or
scas
out
lahf
dec
cld
adc
inc
gs
js
cli
add
xor
or
lcall
ja
enter
cmpsl
les
into
mov
aam
jnp
ss
mov
pop
mov
stos
daa
sub
push
mov
xchg
lea
test
add
es
xor
outsb
dec
out
and
adc
fmuls
mov
cmp
pop
jecxz
leave
call
popf
imul
dec
aaa
iret
in
lods
xchg
test
sub
jmp
sbb
loopne
inc
std
imul
cmp
in
mov
xchg
jns
out
adc
pop
inc
jp
pop
jnp
test
lahf
mov
dec
out
xchg
mov
loop
mov
pop
dec
outsl
loope
push
add
rorl
lock
lds
mov
push
xlat
xchg
sub
xchg
fistpll
lcall
adcb
lods
stos
xchg
popa
cmp
std
push
in
aad
fcoms
xor
mov
ret
jl
push
cld
repz
lret
roll
imul
ljmp
add
gs
repnz
les
addr16
xchg
jmp
sub
push
arpl
ljmp
imul
lock
xchg
dec
pop
lahf
adc
add
adc
inc
adc
sub
mov
sub
test
or
out
addr16
adc
fnstsw
mov
mov
lahf
and
push
orl
daa
cmc
pop
arpl
fnstsw
loopne
jno
movb
xchg
mov
add
mov
jae
rorb
leave
adc
stos
rcll
jns
shlb
mov
jmp
sbb
andb
xor
pop
jg
sbb
push
scas
add
cmp
and
sbb
test
adc
fdivrl
enter
inc
pop
stos
xor
adc
out
shll
xchg
jno
gs
pop
mov
cmpsb
mov
jp
sub
sbb
dec
outsb
repnz
dec
data16
xchg
leave
lahf
push
shl
pop
lret
dec
clc
adc
mulb
xchg
ss
lcall
out
inc
js
imul
int
stos
sbb
aas
mov
out
cltd
dec
xchg
mov
into
fidivrs
sbb
cli
scas
fbstp
jmp
mov
cmpsb
out
test
and
leave
fbstp
lods
lret
push
fidivl
cmp
cmp
stos
sbb
js
xchg
push
mov
sub
mov
pop
into
les
push
das
jbe
and
ljmp
and
imul
cmpsl
outsb
add
sub
xchg
adc
mov
shlb
mov
cs
inc
dec
jecxz
add
mov
pop
pop
jp
push
jne
dec
in
not
push
popa
insb
cltd
or
adc
pop
pop
mov
pop
dec
ret
jmp
sub
cmc
adc
int3
in
pop
lods
ss
inc
cmp
cmp
scas
sbb
mov
outsl
adc
jp
insb
push
stc
mov
cs
dec
jnp
xchg
fdivl
sbb
loope
sti
or
mov
in
pop
jl
mov
cmp
jg
sbb
imul
push
adc
mov
pop
xchg
mov
or
inc
je
jg
into
scas
fiaddl
inc
mov
aam
xchg
aad
in
ficoml
mov
adc
pop
sbb
pop
add
jp
dec
addr16
js
mov
xor
fldenv
aad
xchg
ret
mov
add
outsl
pop
sbb
fcoml
loopne
in
je
xchg
xor
ss
mov
fwait
sbb
repz
mov
cmp
pop
jle
mov
jl
inc
cmc
shll
sub
mov
jnp
dec
cmp
push
lock
nop
pusha
cs
insb
jb
lcall
add
jge
add
jns
nop
loope
pop
stos
in
jp
pop
stos
or
cwtl
repnz
popf
inc
mov
push
lock
ljmp
les
movsl
mov
mov
adc
cmpsb
mov
pop
xor
das
add
push
dec
xor
fcmovbe
add
xchg
cmpsl
pop
stos
loop
sahf
cmp
push
pop
dec
mov
addb
call
les
fcmovnb
iret
loope
andb
sahf
pop
xlat
jo
push
ror
subb
xchg
sahf
js
cmp
in
inc
push
test
incl
sbb
mov
pop
push
in
sar
out
mov
push
adc
ja
hlt
pop
mov
mov
xor
mov
adc
inc
xor
loopne
jecxz
lds
push
cld
inc
syscall
mov
bound
dec
mov
out
add
lahf
test
cmp
gs
cltd
jg
dec
sbb
inc
pop
mov
jmp
pop
sub
push
cmp
jno
outsb
sbbl
push
idiv
sarl
cltd
popa
inc
roll
cmp
push
add
fisubl
xor
inc
mov
iret
lcall
popf
out
xchg
mov
or
cmpsl
or
xlat
les
lahf
cmp
icebp
jle
adc
sub
push
out
jecxz
mov
jge
sbb
mov
loopne
mov
insl
rcl
pop
cmp
pop
sti
xlat
mov
adcb
mov
inc
push
ret
cmp
add
sbb
out
push
mov
xchg
sbb
cmp
xchg
sbb
ljmp
arpl
in
leave
sbb
cli
pop
cmp
jb
and
out
iret
cmc
fstp
or
lcall
cmp
push
xchg
xchg
out
xlat
cltd
test
sub
hlt
adc
and
mov
aas
cmp
jns
in
fbld
xchg
rorl
pop
es
pop
mov
sub
sti
jno
jae
jno
xor
and
lret
outsl
sbbb
push
popf
mov
mov
aam
std
test
mov
inc
popf
das
push
add
jmp
ljmp
adc
sub
faddp
fsincos
push
or
shll
push
jne
push
cs
dec
jnp
dec
rcrl
dec
and
xchg
loope
inc
dec
sbb
inc
ss
stos
outsb
pop
pop
into
mov
mov
jecxz
cmp
pop
loop
mov
mov
fst
and
xchg
cmc
aas
loope
push
mov
es
cmp
in
loopne
call
mov
pop
bound
sti
lds
sbb
adc
scas
sti
in
test
hlt
xchg
and
jecxz
dec
out
mov
mov
jnp
xor
inc
imul
shl
enter
mov
loopne
jno
inc
pusha
add
cmp
ud2
iret
push
into
sub
out
lcall
jo
js
xor
dec
jp
ret
loop
fcomi
cmp
clc
in
ds
idivl
fcmovnu
in
pop
sbb
out
and
pop
out
repnz
pusha
mov
cmp
adc
shlb
out
pop
jmp
jbe
sbb
mov
imul
lods
mov
add
in
ret
test
jb
ret
lcall
imul
push
nop
mov
fdivrl
nop
jne
jl
fs
dec
sub
es
xchg
setp
outsb
push
dec
or
or
jmp
ja
jp
dec
je
fiaddl
push
dec
cmp
mov
pop
lret
and
xlat
notl
pop
inc
pusha
cmpsl
mov
in
cmp
aam
jl
mov
es
cs
ret
push
cmpsb
fcomi
fwait
sti
stc
loope
jmp
dec
stc
xchg
loop
cmpsl
or
adc
jmp
xor
das
mov
test
iret
lods
cs
mov
jnp
stos
or
fistpll
add
dec
xor
push
inc
inc
in
push
arpl
js
loop
fdivl
ja
jmp
adc
sub
lds
pop
icebp
add
sub
test
cmc
and
out
push
rcl
adc
cmp
fcmovb
test
shrl
inc
and
leave
sub
fcomp
cmp
insb
ljmp
fwait
cltd
push
adc
jle
push
decl
addr16
inc
hlt
mov
or
and
and
inc
popf
xchg
or
in
mov
clc
push
mov
nop
sub
xlat
mov
test
inc
rol
jecxz
paddusw
push
push
pop
enter
fwait
ds
stos
cld
hlt
pop
je
fcmovne
popf
das
outsb
les
jmp
fmul
cli
sbb
sbb
mov
fmuls
cmp
leave
loop
gs
push
adc
out
gs
out
stos
mov
jno
popf
xchg
lret
mov
push
sbb
int
daa
inc
mov
loop
xorb
adc
cmp
dec
fs
mov
xor
and
psubd
aam
cwtl
loopne
mov
and
lret
sub
fs
pop
pop
cmp
push
pop
dec
push
xchg
push
mov
pusha
xorl
sbb
sub
decb
push
xor
inc
inc
test
rolb
in
push
js
fbld
int
or
mov
cs
or
ret
xchg
jp
shlb
cltd
std
cwtl
pusha
cmpl
out
stc
inc
aas
sbb
js
jle
scas
das
int
mov
dec
or
pop
outsb
jb
pusha
jle
xchg
cltd
sbb
jp
jb
lods
sbb
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
out
stos
and
xchg
rolb
or
iret
std
icebp
js
push
jge
std
addl
into
fmul
sbb
add
insl
mov
pop
cmp
out
sub
daa
imul
inc
push
nop
pop
push
adc
sbb
dec
mov
xor
ret
mov
hlt
aam
pop
mov
lea
test
xlat
and
getsec
cmp
pushf
test
scas
push
sbb
std
into
sti
xchg
adc
or
mov
aam
or
adc
and
xor
mov
adc
andb
adc
aam
cmp
movsb
push
cmp
outsb
sub
and
dec
iret
jg
mov
adc
fisubrl
subl
fnstcw
jmp
or
outsl
jl
mov
fs
ljmp
push
mov
insb
jno,pn
cmpsb
std
fbld
and
cmp
jno
bound
push
push
mov
and
xor
xor
das
xor
in
cmp
xchg
jle
in
fstpt
pop
pop
fwait
xchg
loopne
cs
lock
icebp
lret
cmp
mov
mov
ret
mov
hlt
shll
pop
xchg
xchg
cmp
lods
test
mov
push
pop
inc
popa
jg
hlt
js
gs
nop
jno
or
lods
pusha
mov
aaa
add
sub
sti
xor
bound
leave
xchg
repz
aaa
dec
mov
iret
add
fadd
mov
popf
scas
dec
fs
call
aad
sti
lcall
lret
mov
sti
into
inc
cli
or
ret
mov
pop
iret
dec
or
pushf
dec
push
mov
dec
push
pusha
rep
pop
jecxz
je
mov
cmp
jo
and
lea
scas
add
stc
testb
pop
xor
and
cmp
sub
popa
jae
in
sbb
sub
scas
pusha
cld
mov
imul
stos
sub
mov
sbb
addb
jne
push
out
pop
clc
shlb
cltd
sub
pop
add
rorb
mov
fdivr
jo
lret
cmc
ds
or
push
loop
imul
add
arpl
outsl
or
add
dec
cmc
adc
data16
cmp
leave
push
mov
pop
into
xchg
sarl
mov
xor
scas
cmp
adc
inc
sbb
mov
push
xor
ret
mov
setnp
in
jns
jp
cmpsl
je
cmp
stos
push
xor
pop
mov
mov
daa
lods
inc
mov
dec
cmp
mov
inc
fldenv
stos
cmp
leave
dec
dec
data16
scas
dec
pop
popa
fwait
push
loope
sub
lods
test
pand
ret
jnp
and
je
add
mov
in
test
inc
test
fs
insb
xchg
insl
std
push
pop
sub
in
mov
xchg
xchg
xchg
fs
arpl
loope
scas
xchg
mov
pop
xchg
mov
out
push
cmp
dec
jle
or
sub
xchg
ret
cmp
cmp
pushf
test
xchg
into
lret
fs
rclb
or
sahf
scas
aas
push
out
jl
lret
movnti
lcall
sbb
in
fidivrl
jo
fwait
popa
ret
inc
xchg
test
or
dec
clc
fwait
cmpsb
or
mov
adcb
adc
and
jl
aam
pop
shll
call
std
mov
test
pop
fcmovnbe
sub
cmp
dec
movsl
jg
testl
test
movsl
or
ss
adc
push
inc
inc
scas
out
loop
adc
pushf
pushf
in
dec
std
loop
jmp
xorl
aam
pop
push
lahf
nop
outsb
cli
or
lahf
pop
jg
pop
jns
xor
mov
adc
rorb
fdivs
and
inc
cmp
inc
inc
mov
xchg
orb
shl
shlb
push
in
xchg
adc
mov
pop
dec
jb
dec
out
xchg
outsb
enter
pop
aaa
lods
lods
add
inc
xor
jo
jb
shlb
adc
in
lods
call
ljmp
loopne
test
dec
push
jecxz
ror
in
xchg
lahf
mov
mov
aad
sub
imul
or
push
jns
sbb
jmp
cmp
cmpsl
add
stc
js
or
repz
or
mov
lahf
inc
aaa
xchg
pop
int
sbb
cmp
mov
sub
xchg
nop
out
not
mov
aad
mov
cmp
pop
adcb
sti
adc
cmpsl
or
sbb
adc
and
pop
lods
mov
shl
push
fmul
cld
cmpsl
pop
rol
sbb
xor
dec
jle
fstps
xchg
int
ja
aad
jge
ss
scas
call
int3
mov
xchg
cmpsl
add
add
ficompl
out
pop
hlt
push
mov
sub
mov
sub
repz
fnstenv
ret
push
leave
filds
lret
sbb
pop
mov
xorl
xor
jecxz
mov
or
ss
xor
xchg
ret
jne
jmp
jne
xchg
pop
mov
imul
sysexit
mov
sbb
loope
mull
enter
xlat
gs
lcall
iret
lret
jb
clc
mov
or
mov
lret
cmp
jp
stos
jge
or
adc
pusha
sub
ds
int
das
cmp
test
shrl
lcall
jg
pop
mov
movsl
repnz
push
mov
xchg
or
jle
popf
sbb
sbb
fists
jge
mov
mov
fildll
notb
lods
ret
cwtl
mov
cmp
xchg
outsl
jne
cwtl
xchg
add
mov
cmp
add
gs
aam
out
or
ljmp
fdivp
jge
add
iret
dec
or
std
sub
pop
xchg
adc
push
gs
movsl
mov
fbld
pusha
bnd
setg
jp
out
mov
fsubrp
int3
fdivs
mov
mov
dec
adcl
sbb
pop
add
fisubs
and
inc
aam
mov
iret
xchg
fnstenv
lahf
mov
in
mov
push
jle
xchg
popf
xor
pop
mov
sbb
xchg
xlat
les
inc
test
inc
insb
push
pop
insl
mov
adc
inc
and
mov
sub
iret
js
cld
addr16
xchg
das
xchg
stos
add
arpl
shl
outsb
stos
dec
ret
ds
sub
mov
sub
sti
add
sbb
mov
dec
cs
loop
es
sbb
jbe
sbb
popa
je
xchg
jmp
fbstp
cmp
dec
int3
cmp
jbe
pop
clc
push
jg
dec
sahf
xchg
cld
adc
push
loopne
sbb
bound
mov
xchg
xchg
inc
in
xlat
repnz
and
mov
gs
ret
rcrb
add
ficoms
cld
out
cmp
rorl
mov
jo
adc
jb
bound
leave
xchg
mov
mov
scas
movsb
cmp
push
pop
aad
push
icebp
mov
call
scas
mov
jne
shll
mov
adc
cmp
dec
jecxz
dec
rol
test
es
sbb
add
and
cli
pop
fldl
je
xor
cmp
xchg
jae
mov
imul
xor
movsb
ss
xchg
mov
movsl
mov
sub
and
pavgb
jl
dec
cmpsl
pop
rolb
lds
and
sub
sub
scas
pop
add
jo
push
mov
mov
or
stc
sahf
pop
inc
mov
cmpsb
dec
xlat
sub
push
repz
xor
adc
decb
add
xlat
rorb
dec
mov
repz
inc
and
movsb
pop
lds
sbb
repnz
mov
fistl
cmpsb
xchg
out
pop
loope
fwait
popa
pop
test
cli
mov
mov
adc
mov
cli
loopne
mov
lods
pop
ret
jo
lds
shrb
dec
fiaddl
repz
push
test
jb
rorb
xchg
cmp
sbb
inc
jne
sbb
xor
call
add
adcl
faddl
xchg
icebp
fwait
loop
mov
outsb
pop
pop
mov
sbb
scas
mov
and
pop
imul
sahf
rcl
scas
test
sbb
jb
in
push
mov
packssdw
mov
sub
out
test
dec
mov
sbb
sbb
cmp
hlt
xchg
rorb
jmp
mov
lock
mov
imul
inc
ret
stc
jge
lret
cmp
loop
jo
push
push
sbb
cmpsb
xor
shrb
add
shll
fstl
dec
andl
jnp
pop
pop
cmpsl
int
pop
and
mov
cmp
pop
inc
mov
ljmp
mov
mov
cmp
imul
jecxz
mov
sub
pusha
xchg
je
push
push
cmp
pop
xor
and
dec
pop
loop
push
pop
xor
test
test
cli
add
inc
test
dec
leave
loope
mov
das
sahf
pop
shll
test
ja
jbe
mov
xor
loop
adc
dec
push
lret
aad
and
stos
sbb
mov
add
cwtl
jmp
int
and
stos
and
pop
gs
and
xchg
icebp
push
push
outsl
mov
add
mov
shrl
cmpsb
sbb
xchg
jae
stos
mov
or
mov
dec
cmp
shlb
push
jg
mov
jle
sahf
dec
push
dec
add
aam
xchg
lcall
pop
shl
jmp
inc
pusha
loopne
aad
xchg
dec
xchg
dec
or
int3
out
xor
jg
add
iret
push
pop
pop
dec
call
and
aam
push
mul
adc
fs
mov
loop
inc
jo
mov
leave
xor
test
push
cs
pop
push
hlt
pop
pop
pop
jo
jle
sub
xor
loop
fidivs
pop
mov
mov
aam
xchg
push
mov
cmp
insl
pusha
andl
add
cs
jmp
dec
xor
add
nop
jge
cmp
lahf
and
jmp
lods
xchg
pop
lret
mov
call
addr16
adc
inc
leave
inc
mov
mov
mov
ret
xor
jecxz
sub
xor
test
icebp
sbb
mov
jbe
jecxz
jne
jp
je
push
iret
test
je
or
pop
shrl
inc
movsb
inc
gs
xor
loopne
fs
cmp
or
push
lods
insb
xor
jle
sbb
jo
and
int3
call
lea
dec
ja
ljmp
jmp
shlb
lods
jecxz
dec
push
dec
xchg
xchg
fnop
ss
or
test
test
jle
sbb
icebp
xchg
and
fcoms
mov
nop
cmp
mov
jmp
sbb
mov
int3
dec
roll
ret
ret
jnp
lods
and
pop
icebp
mov
adc
hlt
pop
add
xor
mov
daa
dec
mov
stos
cmp
jnp
daa
add
dec
pop
imul
je
xchg
pop
mov
pop
add
stos
or
xchg
sbb
rorb
idiv
pop
jl
adc
sub
xchg
movntps
push
sbb
out
jnp
mov
push
mov
test
rorl
fisubrl
jle
mov
mov
mov
int3
fiadds
or
xor
mov
mov
mov
imul
pusha
mov
fmull
push
rclb
jo
jne
call
xchg
sub
movl
in
jb
inc
sbb
xchg
and
lds
ret
clc
sti
popa
push
lods
push
sbb
xchg
push
cmpsb
pusha
push
push
dec
lret
std
clc
jne
sub
daa
gs
jge
stc
push
push
lahf
push
insl
adc
xchg
jnp
cmp
jae
jge
sub
dec
inc
lods
rorb
mov
jmp
aas
push
sti
into
es
mov
mov
shlb
jbe
jne
jl
call
mov
in
roll
enter
inc
mov
rorb
fs
sbb
std
xchg
insl
stos
mov
test
lcall
jle
push
xchg
cmp
jecxz
aaa
add
in
ja
mov
cmpsb
aad
clc
js
ret
lcall
mov
or
xor
push
mov
mulb
push
cli
jg
popa
cmpsb
sarb
mov
lods
and
ret
pop
inc
adc
aad
jp
inc
sbb
fucomp
cmc
cmc
arpl
mov
sbbb
sub
cmpsb
es
lret
std
in
dec
in
imul
fsubrp
mov
out
dec
mov
fistpl
mov
cmp
test
pop
jg
fsts
xchg
leave
inc
fnstcw
mov
mov
or
sbb
sbb
lahf
cmp
lret
in
pop
sbbb
mov
stos
lods
lahf
and
sbb
in
add
pop
pop
mov
cmp
fcomps
push
xor
sbbl
sub
or
scas
xchg
push
stos
outsl
cmpsb
sub
adc
push
push
adc
adc
stc
mov
adc
mov
ljmp
mov
inc
or
mov
pop
cld
jmp
out
add
icebp
fmul
movsb
mov
std
jbe
adc
push
mov
cmp
xor
jle
ds
adc
jg
movsl
dec
adc
dec
mov
aad
es
pop
add
arpl
sub
mov
cmc
mov
dec
inc
cmp
movsl
mov
jns
or
out
inc
imulb
xor
mov
andl
jl
xchg
jp
test
addr16
lods
sbb
cmp
push
clc
or
xchg
repnz
sti
aaa
xchg
mov
mov
pop
push
js
sbbb
and
mov
inc
or
jp
flds
aaa
repnz
mov
xchg
lods
sub
cmp
jns
cmpsl
scas
sahf
jne
aaa
jne
pushf
test
out
lock
data16
in
aad
sbbb
loopne
xor
pop
inc
lods
nop
add
cmp
adc
aam
jl
pop
stos
or
loope
das
or
leave
aas
pop
je
fldz
cmp
testb
inc
push
and
mov
fisttps
ss
iret
std
mov
test
or
xchg
scas
mov
shl
stos
cmp
sub
enter
sub
outsl
insl
fbld
mov
fiadds
cli
loope,pn
ret
repz
sbb
fsubp
in
sar
jg
cltd
aas
jne
lods
aad
daa
sub
or
pop
mov
bound
daa
es
pop
sub
movsb
adc
fnstsw
insl
fwait
xor
fld
push
push
test
mov
aam
inc
xchg
xchg
fldenv
add
clc
push
push
ds
scas
add
adc
ret
dec
or
add
mov
fwait
mov
sub
jne
mov
add
pop
pop
fdivs
lret
inc
and
cmpsb
int3
fistl
sti
data16
ficompl
jno
jo
and
enter
jle
sbb
fsts
or
cmp
xor
sbb
or
stos
ss
jge
push
icebp
ds
sub
dec
xchg
mov
std
inc
imul
push
xchg
xchg
and
push
test
insb
mov
inc
cmc
xor
push
arpl
into
leave
adc
int3
pop
jae
push
jle
inc
inc
pop
fisubrs
jp
loope
insl
jnp
xor
xchg
in
cwtl
xlat
aad
or
add
into
fldcw
pop
add
inc
xor
es
gs
pop
mov
inc
aam
call
push
out
jns
or
fs
ds
sbbb
pop
push
sahf
xchg
push
inc
cmp
inc
lods
cwtl
dec
shrl
or
cld
or
adc
in
and
loopne
xchg
loopne
enter
les
cwtl
sbbl
mov
xor
sub
std
mov
cmpsl
push
cltd
adc
hlt
call
lret
fidivs
or
adc
insl
add
lret
push
inc
cmp
incl
inc
cmpsl
cli
xchg
test
mov
testl
pop
ret
push
cwtl
cmc
cmp
or
daa
or
js
adc
mov
cli
mov
enter
in
inc
push
push
jbe,pt
fcoml
push
stc
sahf
mov
xlat
dec
lahf
and
sbb
xor
mov
arpl
jnp
out
into
stos
cmp
jecxz
push
mov
out
push
outsb
and
iret
out
push
and
leave
into
mov
nop
in
mov
dec
pop
xchg
mov
loopne
bound
cmc
mov
xor
jmp
push
aaa
sub
sub
inc
call
sub
out
mov
cmc
std
and
outsl
loope
je
sbbb
or
mov
dec
or
cmp
jle
enter
mov
pushf
push
push
pop
mov
negb
mov
mov
pop
pop
int3
cs
not
xor
sbb
sti
movsl
and
lret
fnstenv
lret
xchg
xchg
insb
push
inc
ret
stos
mov
aas
pushf
push
ja
outsl
mov
daa
mov
loop
inc
les
ret
xor
lock
push
xchg
or
mov
mov
mov
mov
jb
out
hlt
xchg
push
or
cmp
mov
les
inc
pop
cmp
movsl
out
adc
mov
mov
jge
pop
sbb
mov
lcall
mov
sbb
popa
xchg
scas
outsb
add
test
or
dec
pop
cmp
enter
popf
jo
mov
fs
fldcw
out
or
inc
std
or
aas
pop
mov
mov
sbb
pop
int3
enter
test
sarl
lds
jp
test
ja
xorl
fistps
and
fisttpl
insl
stos
lock
xchg
enter
pop
loop
jmp
add
sbb
orb
cli
pop
lret
mov
push
cmp
jns
loope
or
push
xchg
pop
xlat
fisubl
js
pop
loop
in
push
test
ljmp
dec
test
jns
fistpl
jno
sbb
cwtl
lret
mov
lcall
icebp
test
cld
and
mov
pop
int3
dec
dec
pop
enter
rcl
in
adc
sbb
pop
popa
xchg
dec
jns
adc
aam
cmc
sub
out
or
push
xor
sub
loope
js
outsl
clc
and
dec
cmp
push
pop
mov
jno
mov
into
pusha
dec
lods
enter
sub
in
int3
sbb
rcrl
ja
jne
cltd
into
in
push
xlat
ficompl
ret
and
sbb
adc
push
cmp
mov
jl
insl
std
ret
cld
xchg
sahf
xorl
mov
test
fimull
aad
imul
sarl
cmp
cmp
xor
sub
lock
fisttpl
xchg
or
push
scas
aaa
mov
out
or
or
pop
insb
dec
test
ljmp
sub
arpl
or
out
dec
mov
and
inc
or
inc
mov
mov
lret
shlb
cmp
hlt
repz
lea
push
push
into
pop
test
mov
mov
cmpsb
shrb
and
adc
clc
push
jg
jnp
dec
cmp
mov
lea
pop
or
xchg
lock
adc
in
cmpsl
xchg
ds
out
pop
data16
inc
cltd
rolb
push
mov
popf
and
movsl
sub
dec
dec
jp
fwait
mov
aaa
popl
clc
jo
inc
sbb
or
loopne
aad
xchg
out
ss
scas
mov
js
push
aam
lret
pop
fildl
mov
xchg
add
jbe
das
stos
xlat
cmp
stc
pop
popa
arpl
in
std
sub
lods
sub
cld
adc
call
fdivl
test
dec
hlt
in
out
add
arpl
xchg
mov
negl
rorb
jecxz
enter
xor
pop
sahf
pop
and
jnp
mov
push
inc
add
mov
jo
adc
mov
scas
or
fwait
adc
jnp
pop
aaa
xchg
push
fs
scas
lods
mov
xchg
mov
stos
aam
int3
aad
insl
andl
mov
bound
jne
aaa
jecxz
lock
cltd
add
dec
sbb
fcoms
jp
jne
dec
stos
adc
daa
mov
xor
icebp
cmp
les
lcall
call
lock
daa
or
jne
xchg
ret
loop
mov
inc
popa
jbe
jecxz
rolb
mov
mov
push
shrl
mov
clc
insl
gs
jbe
and
xchg
nop
sub
in
add
pop
inc
mov
mov
enter
xchg
jns
xchg
cmp
jg
inc
sahf
lahf
mov
ret
mul
sbbl
xchg
xor
setnp
ss
xchg
cmpsl
jg
adc
push
sbb
mov
mov
pop
xor
jbe
jmp
jmp
mov
mov
addr16
mov
popf
pop
pusha
jg
jo
adc
push
shlb
inc
pop
cmp
jne
lds
ret
cmpsb
lahf
add
arpl
loope
mov
pop
inc
stc
int
repnz
mov
es
loope
adc
subl
pop
nop
sti
mov
push
aaa
fsubrp
clc
mov
inc
inc
sub
inc
inc
sbb
test
push
loopne
test
sub
mov
idivb
test
dec
mov
les
cmp
out
cwtl
scas
push
xor
cmpsb
mov
dec
mov
out
ds
or
mov
jge
je
mov
pop
hlt
push
inc
jne
cmp
je
adc
xchg
in
jmp
dec
aas
push
nop
fadds
jnp
hlt
dec
xor
outsl
push
add
icebp
cmpsb
mov
xchg
aas
xchg
jnp
fcmove
mov
or
repnz
iret
std
sub
mov
iret
popa
adc
and
push
xlat
lret
aam
xchg
add
dec
jl
jl
sbb
sub
leave
aad
push
jbe
sti
mov
pop
fstpt
fistps
into
sub
adc
jae
test
inc
cmp
int
sbb
adc
push
pop
adc
call
sub
add
sahf
add
movsl
sbb
pop
mov
lret
mov
sahf
pop
subl
aam
cltd
ficompl
loopne
adc
aas
pop
or
inc
fs
mov
fistpll
popf
mov
or
sub
cmpsl
mov
sbb
push
lcall
dec
sub
cmp
adc
sub
jns
push
fbstp
int3
rclb
and
fcmovb
inc
dec
add
push
push
sub
xorl
cwtl
xchg
iret
push
or
mov
jle
insb
cmp
add
daa
inc
dec
lds
sbb
and
jbe
es
cwtl
inc
jecxz
leave
in
jno
sbb
lock
stc
loopne
std
adc
out
sub
or
pop
push
mov
mov
in
filds
dec
ror
push
add
mov
mov
and
xchg
test
push
xorb
jno
mov
add
dec
cmpb
jg
mov
sub
adc
aad
lods
xor
aaa
cmpsl
lods
sti
and
sbb
movsb
push
push
sub
adc
lret
cs
sbb
mov
cmpsl
fdecstp
xchg
loop
popf
inc
rolb
pop
pushl
dec
push
xor
cltd
mov
negb
adc
loopne
jg
mov
xchg
push
movsl
or
mov
shll
repnz
stos
das
push
mov
outsl
pusha
subl
sub
jb
adc
cmp
test
push
shll
inc
je
and
pop
jbe
stc
hlt
adc
ret
subl
shlb
sahf
std
adc
sbb
push
sub
pop
jo
ret
sbb
xor
inc
cmp
daa
push
stc
cmp
cmp
sbb
add
or
scas
test
test
repnz
mov
sbbb
inc
cmp
aaa
sbb
lock
jp
cmc
mov
xchg
dec
sti
dec
rorl
insb
inc
xor
je
pop
mov
inc
in
dec
add
lcall
call
int
lahf
out
sub
outsl
dec
push
cmp
or
cmc
mov
mov
and
sti
push
xchg
sbb
dec
xchg
das
imul
in
lret
and
jns
iret
cli
mov
adc
fucomi
fisttps
lock
nop
js
mov
fs
popf
jmp
stc
sub
jno
inc
mov
pop
ja
and
js
addr16
shrl
pop
mov
iret
sub
sub
mov
inc
test
and
shrb
mov
les
cmp
jmp
jne
mov
test
jb
mov
mov
gs
mov
fsubl
pusha
les
mov
jp
iret
dec
jecxz
xchg
testb
mov
push
cmpsl
sub
dec
push
push
adc
xor
add
aad
sahf
mov
mov
cmpsb
or
clc
stos
js
push
inc
cltd
add
push
cwtl
mov
iret
stos
push
xchg
mov
adc
daa
adc
dec
cli
add
sbb
adc
adc
dec
or
dec
mov
rcrl
lea
sub
movsl
sbb
lcall
outsl
hlt
inc
xchg
mov
mulb
add
aam
xchg
xor
mov
adc
arpl
sub
pop
clc
movsl
lahf
mov
xchg
xor
mov
test
push
std
xor
push
cmpxchg
int
adc
inc
adc
mov
push
sarb
and
ja
sbb
jns
mov
push
ret
pop
cli
lods
ret
xchg
push
pop
push
and
imul
ss
mov
push
test
jb
sar
mov
pop
xchg
rol
and
out
mov
push
fidivs
out
and
out
in
jecxz
in
or
leave
lcall
outsb
lods
xlat
sub
mov
dec
jg
nop
mov
mov
mov
popa
lret
fidivrl
pop
js
and
xchg
mov
ljmp
nop
jo
xchg
adc
mov
cmp
test
ja
push
dec
inc
inc
add
and
or
and
popa
and
loop
xchg
jbe
sbb
loopne
sbb
loope
jg
idiv
in
push
repnz
sti
es
or
add
nop
sbb
mov
arpl
cld
xchg
and
sub
in
imul
sbb
add
add
sbb
cmp
xchg
xor
imul
decb
or
mov
hlt
and
dec
cmp
subb
incl
sbb
fmuls
mov
scas
adc
jle
jge
pop
pop
icebp
out
mov
sbb
outsl
jne
addb
mov
movsb
ret
fstl
jb,pt
xchg
jno
lahf
leave
sbb
fsubl
cwtl
mov
fstpt
jb
jp
fdivl
mov
in
inc
pusha
and
lock
xor
je
in
xchg
ljmp
xor
push
cmpsb
gs
xchg
test
movsb
pop
data16
or
nop
fsubrl
sarl
in
frstor
jle
mov
dec
pop
mov
mov
sbb
stc
das
mov
addr16
jg
addr16
add
daa
lds
lock
data16
jl
and
or
imul
filds
rol
cmpl
addb
sarl
dec
imul
jne
ja
adc
pop
loop
push
dec
sar
jl
adc
out
xorl
lcall
jne
negl
or
mov
jle
adc
xchg
movsb
jo
pop
into
pop
scas
cli
rcll
push
add
pop
push
and
ja
xor
add
rol
and
push
cs
xchg
inc
mov
fimuls
mov
dec
in
and
mov
setbe
inc
ret
les
mov
mov
in
mov
mov
or
mov
mov
aad
pop
jle
push
xchg
adc
lods
addr16
stc
cmpsb
mov
pop
mov
xor
lock
dec
bnd
repz
push
adcl
fcomps
dec
adc
fnstenv
in
mov
and
int3
stc
lret
data16
fcomp
mov
push
inc
iret
xor
jl
jne
sbb
imul
js
nop
mov
mov
jb
and
bound
mov
fadd
fsubp
lds
test
popa
adc
js
jns
jge
and
and
mov
adc
cli
sti
cmp
movsl
inc
stc
js
xor
mov
imul
jns
popf
mov
mov
pushf
xchg
and
jmp
cli
xchg
jae
lods
sbb
jp
sbbl
pop
loop
pushl
cmpb
iret
xor
add
pop
mov
ss
aad
sbb
mov
xchg
ja
dec
add
aaa
pusha
aad
rol
sbb
adc
or
shl
movsl
mov
or
out
mov
jge
xor
inc
push
loopne
daa
stos
clc
cmp
pop
mov
jne
sbb
push
sti
sub
into
sbb
lcall
int
adc
cli
jge
or
cmp
paddsb
int
sbb
je
test
int
pushf
insb
movsb
sahf
dec
aaa
push
scas
aas
cmp
pop
scas
scas
sub
mulb
lds
sub
mov
lahf
int3
mov
loop
scas
scas
movsb
mov
inc
sarl
dec
xchg
or
test
imull
fisttpll
add
sbb
add
addr16
outsl
mov
fistl
stos
loope
in
xchg
pop
test
jne
push
in
dec
mov
xchg
mov
sti
mov
xlat
test
mov
jno
out
and
mov
lcall
push
jae
out
jmp
shrb
mov
mov
sub
push
push
rcll
mov
mov
movsb
xchg
dec
iret
mov
inc
add
cmp
fstl
cmp
dec
mov
out
cmp
mov
mov
in
enter
adc
add
aas
rcr
jl
scas
aaa
lret
sbb
sbb
in
clc
mov
push
lods
jg
xchg
mov
xchg
xlat
or
xor
filds
mov
cmp
negl
subl
sub
push
in
sbbl
je
std
jl
test
out
add
std
mov
in
dec
mov
shll
add
or
in
rorb
dec
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
pop
add
addl
imul
imul
daa
data16
and
test
adc
insb
sub
sub
sub
pop
pop
fsts
mov
inc
in
popf
fucomip
lcall
xadd
dec
mov
cmp
xchg
out
imul
and
cmc
mov
or
hlt
jno
or
pop
lds
inc
mov
js
sub
mov
fwait
dec
int3
sub
mov
mov
sbb
shr
mov
push
int
test
mov
add
or
cmpl
out
jo
jno
dec
fldl
movsb
inc
mov
fs
ret
cwtl
push
mov
push
inc
les
jl
mov
popf
jl
xchg
lret
add
adc
xor
cmc
pusha
cwtl
lock
jge
push
repnz
adc
sbb
sbb
cmp
dec
pop
pop
lea
mov
ljmp
loopne
fisubs
fildll
mov
aaa
divl
insl
mov
push
adc
mov
sbb
cmp
js
dec
cmpsl
push
pop
sbb
sti
jg
xor
or
dec
inc
or
add
scas
jmp
lds
mov
enter
mov
fdivl
in
bound
pop
aam
pusha
pop
jecxz
push
mov
mov
xchg
xchg
pop
in
jns
iret
xchg
out
fsub
test
cwtl
scas
imul
loop
adc
ret
sbb
xor
fbstp
cmp
mov
and
notl
adc
xchg
ss
mov
mov
cltd
mov
scas
xchg
mov
gs
sub
fwait
mov
out
and
clc
jns
xor
fcom
sub
cld
test
fimuls
scas
repz
mov
sbb
gs
sbb
inc
mov
aad
clc
pop
test
pop
push
and
stos
or
ret
es
xor
fidivrl
xor
push
push
sub
cmp
pop
or
cmp
pop
adc
sub
sbb
xor
mov
cmpsl
sub
cwtl
mov
jmp
pop
mov
push
das
scas
test
mov
adc
cmc
mov
stos
ret
adc
imul
xor
jg
fbstp
push
outsb
inc
imul
fwait
dec
fstps
mov
sub
idiv
pop
test
stos
mov
mov
push
mov
pop
mov
push
ljmp
mov
lea
lods
in
pop
cmp
iret
bound
cmp
loop
into
sbbl
sbb
adc
orb
mov
popa
or
push
das
pshufw
jb
push
in
aaa
loopne
adc
push
lret
mov
cmp
and
pushf
xchg
rcl
jns
jae
sub
pop
adc
push
popf
or
popf
test
jle
sub
mov
out
mov
dec
xor
mov
adc
jp
idivb
imul
add
cltd
dec
popf
dec
lea
inc
fdivl
or
xorb
pmulhw
notl
push
fmull
es
ret
cmc
mov
popf
pop
js
dec
xchg
sub
rolb
add
push
je
das
loopne
fadd
enter
cmp
pop
sub
je
xchg
cltd
push
test
sbb
add
jmp
sub
dec
add
adc
mov
jle
jl
repz
cmp
mov
jp
dec
dec
mov
ficomps
xchg
jge
test
dec
mov
add
loopne
ret
mov
fldl
testl
insb
loope
sub
and
adc
mov
pop
mov
mov
and
cmp
push
xchg
jecxz
cmp
pop
and
mov
pop
mov
mov
jno
sub
sbb
or
pop
sbb
scas
dec
cld
sbb
cld
aas
ds
out
mov
mov
xlat
sbb
pop
jmp
jecxz
andl
push
mov
aad
sbb
adc
addr16
fstpl
xor
int3
mov
mov
jecxz
ds
aad
ss
test
ficomps
gs
pusha
aaa
stos
or
loop
je
mov
mov
mov
push
inc
xchg
mov
or
sub
insl
outsb
movsl
cmp
jb
sub
into
call
mov
sub
dec
fs
inc
movsl
clc
test
inc
pop
or
int3
mov
sti
cmp
adc
add
xor
out
dec
pop
lods
and
mov
and
or
fcomps
and
cmpsb
icebp
cltd
insb
sbb
and
ja
stos
mov
push
or
xorb
fsubs
out
dec
inc
dec
ret
fwait
sarl
jne
push
leave
xchg
xchg
outsl
sub
xchg
inc
lods
or
es
and
repz
sbb
scas
mov
xlat
leave
repnz
movsb
int
inc
enter
movsb
not
pop
iret
push
jns
es
add
cmpsb
fists
or
lods
or
ljmp
aam
adc
cmp
andl
push
stos
push
sbb
push
mov
push
jo
and
jns
add
inc
dec
out
ljmp
or
pop
inc
enter
std
inc
clc
jns
pusha
mov
aaa
lahf
sub
subl
pop
jle
push
xchg
aam
adc
ficoms
dec
push
push
inc
mov
pop
in
xchg
outsl
bound
inc
cltd
push
movsbl
cmpsl
sbb
mov
inc
push
mov
stos
imul
pop
add
test
lods
pop
fimuls
leave
mov
pop
das
lahf
addl
movsl
enter
dec
arpl
or
outsb
push
pop
xor
jge
push
nop
xor
sub
xorl
jg
movsl
push
xchg
push
jg
mov
mov
push
xchg
add
sub
loopne
pop
inc
insl
jle
ljmp
add
je
sub
jo
jne
mov
xor
adcb
xor
add
popf
lcall
hlt
dec
imul
test
push
rcrl
ja
mov
sbb
loop
shlb
mov
dec
and
and
adc
fwait
sub
push
add
sub
mov
ja
test
inc
lods
ficompl
and
call
fdivp
mov
push
push
popa
push
inc
push
mov
nop
xlat
dec
movsl
mov
push
pop
popf
test
mov
dec
xchg
sub
mov
pop
mov
or
jns
movsb
loopne
out
out
sbb
scas
and
xchg
mov
loopne
ljmp
ds
ficompl
mov
sar
sub
and
pusha
adc
jmp
inc
mov
cltd
fistps
fdivs
das
call
xchg
mov
xlat
push
mov
iret
lret
mov
mov
jg
cmp
mov
cmp
lret
dec
cmp
and
dec
jle
push
popa
lea
inc
popf
cmp
pop
insb
insl
mov
pop
mov
and
cli
dec
std
popa
incl
dec
dec
fldl
shrl
mov
dec
add
fidivrl
mov
cmp
adc
sub
mov
clc
aam
data16
ret
cmp
lret
int3
imul
dec
mov
sub
mov
dec
xchg
cmp
jmp
out
mov
in
pop
arpl
xchg
test
daa
jno
lahf
negl
mov
clc
fwait
sahf
or
and
mull
clc
ja
sub
pop
sbb
fiadds
lods
adc
jmp
mov
pop
pop
jl
push
decb
test
int
push
sub
dec
sbb
and
push
dec
jbe
add
pushl
dec
adc
std
push
out
or
and
mov
jp
in
jae,pn
cmp
or
push
or
pop
pop
mov
sarb
xchg
jae
out
jle
mov
testb
mov
jecxz
and
aaa
mov
rorb
movsb
outsb
in
jge
mov
jbe
add
mov
test
adc
jae
sbb
ja
jno
add
aad
cmp
pop
sbb
or
sbb
push
sub
aam
cmpsl
mov
arpl
ds
iret
loopne
daa
push
addr16
jbe
arpl
pop
adc
jb
jns
rclb
bound
pop
daa
mov
loopne
std
ds
pop
xor
mov
or
call
lret
sub
mov
jnp
inc
pop
xchg
loope
lds
mov
imul
jno
sbb
lods
test
imul
std
popf
out
xchg
cld
mov
sbb
inc
push
lret
andb
sub
cmp
jl
mov
pop
push
pop
pop
mov
scas
aas
or
pop
xchg
test
mov
dec
dec
iret
loop
fsub
inc
fisttps
lds
rolb
addr16
jnp
in
loope
ss
sbb
or
add
mov
and
adc
mov
iret
cmp
jne
pop
mov
andl
push
data16
cmp
rcll
enter
inc
test
xchg
adc
loop
xor
insl
enter
jl
stos
aas
jnp
std
imul
jmp
dec
sbb
sub
lds
jl
idivb
jae
xchg
shll
hlt
dec
jmp
xchg
inc
test
mov
xchg
or
mov
mov
xor
repnz
jp
and
ds
fiadds
cmp
cmpsb
sti
xchg
mov
icebp
lods
outsl
pop
scas
test
push
roll
adc
add
and
inc
ja
lods
test
popf
aad
inc
inc
into
push
out
lret
icebp
sahf
xchg
inc
mov
ds
stos
or
int3
add
xchg
jle
xor
adcb
inc
icebp
pop
xor
or
add
fstpt
xchg
jb
hlt
push
mov
sti
sub
xor
fistl
xchg
call
es
mov
addr16
inc
push
push
jle
test
xor
int
sub
xor
jne
mov
sahf
or
push
fidivs
add
xchg
xor
and
pop
add
subl
test
sarb
push
andb
add
cmp
std
fisubrs
push
ret
cmp
xchg
aad
dec
mov
test
adc
out
add
pop
mov
lcall
fsubrs
fsubl
popf
outsb
je
jae
xor
test
push
iret
jp
jno
jl
rclb
dec
sbbl
rorb
daa
mov
call
lcall
push
sbb
test
popa
and
xchg
jb
xor
cmp
jae
ds
lea
int3
or
scas
sbb
dec
repnz
int
and
stc
pop
pop
jge
push
ljmp
cmp
cmp
or
push
push
nop
push
pop
shl
or
mov
sti
fdiv
jnp
iret
imul
add
xchg
sub
cmpsl
jle
movsb
fsubl
mov
cltd
sub
jecxz
xchg
stos
hlt
in
fwait
and
mov
dec
pop
loopne
bound
xor
sub
sub
pop
push
xor
fs
lods
inc
mov
xor
cmp
mov
in
in
das
icebp
test
scas
fists
lahf
sbb
pop
add
sub
fwait
push
cmp
int
sub
imul
dec
daa
pusha
aas
dec
idivl
ret
mov
sbb
jns
int
cltd
cmp
sbb
ret
les
mov
je
sbb
fwait
cmp
sub
and
lods
sub
cmp
sbb
scas
mov
ret
clc
pop
das
jle
int
xor
cmp
mov
xlat
mov
pop
sbb
dec
outsl
mov
scas
mov
jge
clc
shlb
adc
sbb
scas
mov
test
mov
dec
lods
loope
push
dec
or
pop
jne
push
fisubl
shlb
cmp
mov
ret
xor
les
out
cmc
inc
inc
jl
sub
xchg
movsl
daa
lahf
sbb
loopne
sub
pop
pop
pop
orb
adc
into
inc
cmp
in
dec
cld
cmp
loop
add
lret
jmp
stos
lahf
mov
pop
jo
and
enter
xor
insl
xor
test
test
test
push
ds
pop
pushf
dec
pop
or
inc
push
mov
pop
ljmp
xor
scas
out
cmp
push
add
xor
jg
jbe
sub
mov
inc
xor
insb
mov
leave
add
cmp
test
gs
and
mov
inc
xchg
fwait
xor
adc
loop
dec
cmpsb
dec
cmc
adc
xchg
and
jecxz
push
dec
data16
and
push
andb
pop
cmc
int
mov
adc
in
aas
jmp
arpl
fnstcw
in
pop
inc
cmp
push
mov
jl
gs
jecxz
and
or
loopne
xchg
xchg
ljmp
inc
fstpl
xlat
mov
shl
jg
mov
lahf
mov
mov
mov
mov
fisubrl
clc
mov
imul
xlat
sub
mov
imul
out
hlt
int3
dec
cld
cmpsl
icebp
loop
mov
loop
adc
mov
sahf
insl
and
adc
pop
insb
push
cmpsl
mov
or
xorl
sbb
fimull
sbb
movsb
xor
dec
xchg
call
xor
mov
out
xlat
shlb
test
mov
stos
mov
loop
add
dec
mov
add
cmp
sub
jl
push
cwtl
inc
sub
cs
pop
cmp
cmp
sub
fldl
xlat
insl
add
out
roll
or
jmp
shrb
mov
add
lds
scas
mov
mov
test
pop
dec
loop
lret
cmpb
push
aad
and
popf
and
je
and
or
cltd
xchg
jle
stos
jb
les
xor
or
or
and
in
test
push
sub
fwait
dec
pop
sbb
enter
mov
or
aad
xlat
mov
in
ficoml
out
ret
call
gs
adc
add
lods
jns
xor
push
add
xor
jg
in
imull
push
push
dec
or
and
push
andb
adc
and
add
sub
into
movsb
push
cmp
pusha
mull
and
jns
std
add
push
popa
xor
mov
pop
xchg
outsb
testl
vmwrite
and
icebp
outsb
scas
mov
xchg
bound
fisttpll
mov
xchg
mov
xor
mov
gs
imul
mov
mov
fs
xchg
sub
stos
and
sbb
out
jecxz
ret
popa
mov
sbb
sub
loopne
stos
jb
adc
daa
inc
stc
and
cmp
mov
xor
inc
xor
fs
lds
mov
sub
add
pop
push
insb
pop
mov
das
pushf
inc
jne
mov
and
je
mov
xchg
jl
ds
xor
test
sub
xchg
mov
ret
repnz
imul
cli
notl
xchg
in
fstps
lods
dec
mov
xchg
jl
imul
add
rcrl
jo
shlb
repnz
mov
xchg
js
inc
loop
push
push
or
push
and
sub
cltd
mov
leave
iret
data16
sbb
daa
lahf
int
push
lock
adc
out
lds
mov
out
xchg
cmp
xchg
aaa
mov
or
fadds
push
les
insl
inc
mov
cmp
and
lock
pop
hlt
daa
jae
xchg
push
pop
sbb
jle
inc
xchg
adc
sbb
std
aaa
dec
scas
in
sbb
mov
movsl
or
cmpsl
adc
imul
inc
iret
inc
fmuls
sub
lea
dec
hlt
mov
pop
pop
xchg
pop
sahf
test
mov
and
icebp
mov
int3
jge
jl
jmp
loop
or
aam
push
out
lret
mov
call
mov
mov
or
dec
lods
dec
stc
jl
inc
pop
adc
mov
xlat
in
mov
outsl
cmp
xor
scas
stc
push
dec
mov
push
sbb
pushf
inc
jns
stos
out
push
aaa
mov
and
nop
xor
sub
test
mov
mov
add
jecxz
fidivs
lea
inc
dec
xchg
dec
add
xchg
in
sbb
clc
mov
aad
shlb
ffree
in
jns
sti
xor
jae
pop
xchg
loopne
lahf
call
lret
jge
or
mov
add
and
repz
mov
xor
js
sub
les
push
das
inc
movsl
jecxz
sub
inc
lcall
push
and
sbb
or
push
mov
dec
sbb
add
xchg
inc
repnz
mov
test
inc
pop
xor
pop
xlat
test
es
cltd
popa
lds
lds
cmovs
pop
sbb
ja
pop
add
jl
mov
lret
scas
fcomps
mov
cmpl
ret
in
cmp
mov
cmp
sub
add
cmp
roll
mov
sbb
add
ljmp
loop
sub
jmp
xchg
xchg
mov
or
stc
mov
cwtl
push
mov
dec
shrl
into
sbb
cmpsb
movsb
fwait
cmp
mov
std
inc
and
adcb
add
cmp
stc
stos
lret
movsb
xor
push
in
fisubrs
push
add
adc
cmp
push
roll
hlt
pop
leave
jg
aam
cmc
and
or
jecxz
repz
push
or
sub
and
ss
sbb
ljmp
adc
fisubl
ja
adc
xchg
mov
popa
pop
ja
andb
cmp
sbb
mov
test
out
jge
push
mov
mov
mov
fbld
inc
daa
mov
lods
push
imul
push
subl
shrl
std
pop
mov
test
ret
mov
sbb
pop
dec
ds
movsb
sar
lea
les
push
shrl
dec
divl
shl
push
or
mov
jno
cmp
fcoml
jl
push
shll
mov
aas
dec
std
jo
rcll
sub
lods
adc
mov
sahf
out
into
inc
push
jg
pop
in
cmpb
cwtl
xor
fnstenv
sbb
dec
lea
ror
xor
mov
lcall
cmp
ret
xchg
shll
push
jp
add
push
lret
pop
test
lret
fcomps
and
fimull
arpl
cmp
sbb
jmp
lock
or
enter
stos
dec
mov
jp
jno
rcr
xchg
push
pop
popa
push
sbb
sub
mov
dec
push
sub
push
dec
sub
push
cs
incl
jp
inc
loop
jae
repz
cwtl
inc
adc
scas
xor
aad
sahf
daa
lea
push
sub
sbb
sbb
lcall
aaa
enter
mov
pushf
pop
cmp
xchg
mov
pop
pop
loop
call
lahf
cmp
lahf
ror
lret
sbbl
or
ja
and
enter
shlb
ss
mov
lods
sub
xrelease
mov
add
or
jnp
mov
xchg
dec
xor
xchg
add
jbe
int3
dec
aaa
lea
mov
sub
add
cmpsl
push
push
int
adc
ret
sbb
jns
mov
dec
add
cmp
lea
lods
es
add
jg
xchg
adcl
movsl
add
sub
cltd
lcall
ljmp
fadds
das
and
push
mov
and
mov
int
mov
ret
cld
or
outsl
loop
jmp
sar
scas
add
les
jecxz
lods
sub
sub
data16
shl
inc
fadd
test
and
add
bound
xchg
leave
out
sub
pushf
push
inc
mov
stc
cltd
mov
pop
test
in
and
enter
xchg
pushf
in
xchg
in
ret
sbb
inc
jmp
push
mov
push
mov
push
mov
mov
xchg
shl
and
xchg
jp
addr16
sub
and
pop
jmp
cli
out
mov
mov
aas
insl
outsl
in
pop
out
enter
fldl
mov
jle
movsl
fdivr
ds
mov
xchg
fcompl
xlat
inc
xor
lea
in
xchg
fisttpl
outsb
out
pop
push
or
lock
scas
mov
xor
pop
lret
insb
out
inc
adc
xorb
imul
mov
mov
push
push
pop
fucom
sahf
jae
cwtl
int
lock
mov
mov
sbb
mov
cld
mov
out
inc
ret
jp
mov
ja
sub
cmc
jge
cld
lds
inc
cli
sbb
lock
and
popa
jg
push
rcrl
mov
ds
shlb
pop
fucomi
mov
adc
call
test
fcompl
mov
popa
jecxz
std
je
cmpb
aam
xor
dec
jne
aad
ja
ljmp
pop
lahf
stc
dec
push
incb
dec
push
fistl
xchg
jmp
push
addb
xchg
mov
or
rorl
cld
pop
dec
mov
add
fs
add
test
je
jnp
push
sub
aam
pop
and
loop
xchg
stos
cwtl
bound
or
dec
addl
xor
lea
xchg
dec
clc
adc
addr16
push
dec
cmc
and
fs
xchg
xor
clc
push
mov
add
les
aas
cmpsb
stc
arpl
sbbb
pop
or
jl
test
and
or
int3
or
mov
movsb
les
mov
mov
insl
in
outsl
adc
sub
sbb
mov
movsb
xor
xor
jae
and
adc
mov
xor
or
push
mov
push
les
xor
stos
xchg
faddl
dec
lcall
je
xor
adc
inc
mov
jbe
fdivr
addr16
jle
jl
or
jae
xchg
mov
in
lods
lods
cs
xchg
js
data16
mov
mov
push
xor
cmp
push
xchg
cs
mov
or
push
push
mov
enter
jbe
movsl
jbe
or
testl
lea
add
xchg
scas
mov
aam
shl
subb
mov
add
push
sti
repz
leave
pop
sub
stos
bound
adc
out
jmp
mov
movsl
sbb
and
jp
subb
mov
subb
adc
mov
xlat
shrl
mov
ja
and
fbstp
jmp
jb
std
jecxz
outsl
ja
movsb
leave
adc
mov
pop
insl
fstl
jle
lret
dec
jecxz
lock
inc
sbb
mov
mov
ret
ds
and
in
cmpsl
xchg
xor
dec
sar
lods
fildll
mov
push
add
rcrb
lea
int3
arpl
pop
into
fcompl
enter
cmpsb
in
loopne
sbb
outsb
pop
loope
and
cld
mov
xchg
lret
mov
out
daa
insb
mov
jl
mov
xchg
int
mov
push
aaa
dec
sbb
jmp
inc
push
jp
nop
add
lahf
xchg
xchg
push
or
and
mov
sahf
stos
or
negl
inc
rcrl
sub
and
mov
cltd
into
mov
push
mov
addr16
lods
lahf
xor
daa
and
jecxz
fiadds
rorl
lods
mov
pop
mov
cltd
cwtl
pop
stos
stos
jl
mov
sub
sbb
adc
xlat
mov
outsl
cmpsl
out
mov
jecxz
cmpsb
sahf
icebp
imul
dec
test
pushf
xor
icebp
mov
pop
lds
lock
fstpl
xlat
xlat
fwait
or
push
adc
das
imul
add
cmp
popf
jg
gs
push
popf
add
subl
repnz
loope
sub
mov
cmpsl
fldcw
ret
clc
mov
inc
xor
xchg
lret
shlb
jo
lock
in
enter
in
and
aaa
jb
popf
fadds
call
daa
psrld
xlat
ss
adc
or
cli
or
or
sbb
outsl
lods
rorb
xchg
and
jno
mov
sarl
push
in
ds
fs
ljmp
scas
add
cmp
or
stos
inc
mov
js
hlt
and
fs
js
in
xor
add
mov
or
hlt
sub
test
push
jecxz
pop
push
icebp
pop
mov
push
pop
and
addr16
int
ja
cmpsl
mov
inc
cmpsl
jp
divl
push
pop
or
pop
inc
mov
push
aas
lcall
icebp
fsub
lea
pop
popf
push
mov
shl
xchg
add
mov
sbb
mov
test
dec
sub
fistl
inc
adc
lock
mov
add
mov
push
or
push
pop
mov
xchg
enter
xor
push
or
hlt
and
push
lock
pop
xor
adc
shll
lods
outsl
icebp
pop
jo
aad
inc
dec
add
inc
pop
addr16
cmp
xlat
xchg
insb
test
or
mov
and
mov
sub
pop
or
adc
fdivl
jp
fsubrl
pop
stos
dec
andl
insl
dec
pushf
xor
push
jmp
test
js
aaa
arpl
pop
add
repz
mov
repz
xchg
and
out
jne
out
jns
mov
xor
push
rcrl
add
cmc
xchg
cwtl
xchg
cmp
push
fmull
add
lahf
jge
dec
addb
and
xchg
mov
cmp
push
jp
idivb
adc
mov
test
and
mov
xchg
push
mov
jle
pop
lock
mov
clc
xor
negb
sub
and
mov
and
xor
clc
clc
test
xchg
inc
mov
add
push
xorl
mov
xchg
ficoms
mov
out
xchg
jg
lahf
jne
pop
mov
sub
mov
icebp
jnp
adc
imul
jnp
push
push
lret
xchg
fcompl
mov
leave
pop
cwtl
test
rol
pop
call
pop
hlt
inc
shrb
jl
xchg
fsubr
je
inc
and
lahf
rorl
sbb
or
xor
inc
add
stc
xchg
das
sbb
adc
mov
adc
sti
mov
call
dec
push
and
aas
fnstenv
adc
pusha
sbb
push
das
das
mov
lcall
imul
dec
jo,pt
in
adc
shrl
add
out
mov
xchg
add
jge
push
push
nop
out
inc
inc
push
je
and
in
test
cmp
je
or
ljmp
int
inc
sub
test
adcb
add
sub
xchg
ret
movsb
push
sub
sbbb
cmpsb
ret
in
push
loope
mov
mov
jp
dec
addl
imul
nop
pop
lea
pop
xlat
add
xor
or
add
xchg
sbb
cmp
push
dec
testb
mov
mov
dec
or
jmp
pop
or
in
es
mov
xor
lods
cmp
cmp
sub
out
mov
push
xchg
sub
pop
and
xor
xor
xorb
pop
xorl
xchg
inc
push
inc
push
out
mov
mov
xchg
sub
mov
call
add
pop
mov
inc
roll
mov
cmp
dec
das
jge
std
fwait
inc
sbb
or
xchg
sarl
int3
pusha
aaa
jns
mov
lds
sub
fldz
xchg
icebp
adc
pop
xor
jae
cmc
add
call
imul
and
and
sub
mov
pushf
les
mov
ud1
xor
xor
cmp
sub
jb
mov
jg
push
loope
mov
fsubs
xor
andb
xor
pushf
or
in
inc
out
lock
mov
mulb
adc
bound
or
push
ds
dec
mov
mov
stc
xor
data16
inc
pop
rolb
push
and
pop
stos
cli
push
inc
push
cld
push
dec
hlt
and
mov
mov
aaa
sahf
xor
cmc
mov
and
cwtl
dec
ret
adc
mov
lock
and
lods
aam
sub
or
and
fcmovnbe
out
femms
mov
in
pushf
adc
mov
roll
mov
and
ljmp
hlt
add
insl
aaa
mov
adc
push
int
adc
das
data16
cwtl
mov
xchg
inc
sarb
lock
out
jae
mov
mov
std
ss
cli
adc
loop
cmc
pop
sahf
imul
dec
xchg
cmp
add
pop
push
xchg
and
dec
cmpsb
ror
cmc
in
leave
add
dec
sbb
mov
inc
push
mov
mov
adc
xor
dec
shrb
xchg
test
bound
pop
xchg
insl
mov
add
or
rorb
mov
cwtl
and
xchg
jg
aas
in
lods
cmc
das
mov
sbb
ffreep
ret
pop
jecxz
xor
add
dec
sub
scas
xor
pop
xchg
add
movsb
mov
push
lahf
lcall
jmp
rep
jno
notl
dec
push
or
cld
neg
push
pop
or
mov
add
sbb
setns
je
mov
daa
aaa
repz
aam
popf
hlt
xchg
and
outsl
push
pop
xchg
add
jle
mov
pop
into
fidivrs
xor
lahf
dec
sub
mov
pop
aam
inc
xor
jl
push
jne
adc
xchg
in
insl
mov
mov
cmp
mull
inc
cmpl
sahf
dec
pushf
fwait
push
jno
mov
in
push
sbb
inc
sbb
mov
pop
neg
inc
add
xor
div
mov
mov
ret
cmp
stc
adc
mov
icebp
mov
fcompl
lahf
in
jns
outsb
lret
sbb
push
std
mov
mov
xchg
rcrl
and
xor
dec
lods
pop
inc
pop
push
jb
inc
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
cmp
imul
cmpl
jg
aam
int
xchg
dec
adc
inc
dec
mov
mov
shl
cmc
push
je
mov
fidivs
inc
push
and
xchg
cltd
dec
lea
mov
repnz
pop
movsb
aas
aam
in
out
scas
sub
aad
movsl
jg
dec
mov
cli
pop
je
dec
jecxz
add
std
dec
push
lcall
pop
jb
dec
imul
jno
in
xchg
dec
cs
push
aad
shll
in
adc
fisttpll
jge
inc
mov
or
repz
jae
push
fldenv
xchg
push
movsl
sarb
jnp
scas
pushf
mov
push
cmpsl
mov
jecxz
in
stc
mov
movsb
sub
lea
adc
jnp
push
repz
dec
in
xor
adc
jp
fnstsw
int
mov
pcmpgtd
icebp
jo
dec
xor
mov
orl
and
je
xchg
mov
repnz
imul
fsubrs
stos
aad
outsl
je
xchg
sahf
xor
xor
sbb
mov
inc
in
orb
testb
mov
xor
jns
stos
dec
mov
flds
mov
and
popa
mov
aas
rolb
mov
inc
add
pop
cmp
pop
mov
fiadds
adc
fwait
push
out
stos
ja
das
cwtl
movsb
les
or
mov
or
dec
mov
mov
subl
out
iret
stc
inc
xor
in
xor
hlt
stos
jae
shll
mov
adc
jb
scas
loopne
sti
jnp
push
nop
pop
loopne
cld
popa
in
xor
mov
jnp
push
sbb
xchg
sub
or
inc
and
lods
add
dec
iret
out
int
ja
clc
xor
inc
or
shll
mov
es
mov
or
mov
pop
jnp
ljmp
jns
test
mov
popf
adc
cmovbe
jl
jns
jne
xchg
inc
sub
std
in
pushf
sahf
jmp
lret
mull
mov
add
in
jecxz
lret
std
popa
jns
ljmp
ja
jno
or
mov
imul
xor
imul
xor
mov
leave
fnstcw
cmpsl
cmp
push
in
or
xchg
repnz
rolb
aas
mov
adc
mov
jge
hlt
loopne
mov
cld
jmp
mov
jecxz
mov
push
aaa
shl
cmp
fadds
test
jmp
sub
pop
outsb
dec
lods
mov
fwait
in
lret
inc
dec
test
add
cwtl
pop
cmp
mov
fistpll
push
iret
xor
ds
mov
jge
pop
cmpsl
loope
mov
pusha
pop
sbb
xchg
mov
jl
sbb
loop
or
cltd
mov
in
leave
cmp
ss
call
dec
shll
stos
aas
jle
adc
xchg
loope
jb
sub
dec
fisttpll
loope
cmpsb
mov
rcrb
sub
cmp
fxrstor
ja
push
and
std
mov
jbe
jb
xor
fs
jno
pop
and
mov
rorb
fnstcw
sub
push
adc
jp
cmp
add
mov
adc
sub
adc
jns
xchg
cmpsb
imul
push
cmpsb
jb
xchg
loope
insl
sub
movsb
mov
dec
adc
sbb
aas
movsl
mov
sub
mov
clc
push
xchg
sbb
pop
in
sti
ljmp
shr
mov
aas
cltd
sbb
mov
inc
pop
xor
jbe
xchg
mov
into
out
sbb
push
hlt
in
dec
pop
and
jecxz
pop
cmovs
repnz
std
dec
xchg
mov
popf
insl
mov
xchg
push
stos
aas
out
inc
ss
shll
stc
fadds
adc
ss
mov
lcall
fists
lret
test
lods
mov
dec
mov
inc
and
ret
and
push
sahf
xchg
or
pop
mov
stos
xchg
cltd
dec
imul
add
ret
mov
lods
sub
mov
test
xchg
mov
jecxz
jb
dec
dec
je
adc
add
adc
sti
sub
fwait
dec
insb
or
dec
gs
out
ret
xor
and
shlb
mov
push
lret
sti
push
in
sahf
lahf
jae
and
and
pop
or
mov
adc
add
sbb
or
ret
sub
popa
sti
xchg
and
pushf
dec
or
push
std
aas
scas
dec
sti
daa
imul
shrl
jge
imul
pop
daa
xchg
fiadds
je
scas
loopne
sub
or
mov
inc
in
pop
pop
movsb
in
and
cwtl
outsb
in
in
call
insb
xchg
push
pop
lods
or
mov
inc
jae
fs
cs
jo
aaa
mov
inc
loope
mov
leave
xor
sub
sbb
mov
jb
sbb
mov
leave
or
push
jno
and
xlat
iret
xchg
stos
ja
test
loop
mov
push
sbb
xor
lds
jp
icebp
xor
fs
or
orl
sahf
push
mov
sbb
cmp
push
lea
mov
popa
stos
adc
adc
xor
xorl
stc
outsb
add
inc
sahf
subl
dec
add
jmp
adc
jmp
lods
cmpsl
add
and
fs
ja
sub
pop
aad
mov
lock
mov
arpl
insb
enter
mov
rolb
mov
pushl
inc
jnp
ljmp
sub
notl
pop
notb
or
imul
xchg
or
fst
rcr
lock
inc
in
stc
cmp
pop
cmp
cs
call
iret
fmull
mov
add
addb
adc
lods
out
push
cpuid
xchg
andb
inc
mov
lods
mov
js
aaa
es
cmp
pushf
rcll
add
jle
aad
pop
iret
jg
scas
xor
xchg
dec
xor
inc
cwtl
cmpsl
jbe
cmpsb
push
push
mov
sub
and
or
shrb
in
pop
push
outsb
dec
pop
dec
dec
sbb
mov
sbb
push
inc
push
ret
pop
sbb
sbb
sub
xchg
pop
mov
arpl
icebp
mov
mov
bound
into
adc
test
or
ret
rcrb
dec
mov
push
sub
data16
out
xchg
xor
adc
ljmp
inc
out
inc
adc
adc
adc
ss
call
or
aas
dec
or
sarl
int
in
jmp
lahf
sub
leave
stos
in
test
mov
imul
dec
int3
fwait
mov
sbb
aaa
xchg
fisubrl
leave
pusha
jmp
fcmovnbe
out
add
xor
mov
arpl
or
inc
mov
xchg
mov
das
inc
mov
push
bound
into
cltd
stos
jne
roll
hlt
mov
inc
inc
mov
xor
imulb
out
jecxz
jge
bound
cmpsl
mov
into
fwait
shl
pop
sahf
pusha
mov
xchg
bound
aad
add
notl
mov
das
mov
js
mov
mov
fnstenv
icebp
mov
test
xchg
out
std
gs
orl
xchg
shll
sbb
andb
ljmp
aaa
mov
inc
inc
sbb
sub
imul
sarb
into
shrl
fidivl
sbb
aas
test
pushf
rcrb
xchg
dec
xlat
jmp
or
mov
mov
mov
xchg
pop
fisubl
test
push
and
clc
jle
lret
inc
loope
cmp
or
push
fisttps
loop
push
aam
stc
jecxz
xchg
mov
fsubr
shlb
mov
or
pushf
xchg
push
xchg
add
stos
or
push
out
loop
icebp
or
mov
dec
add
cwtl
add
jmp
mov
pushf
lock
push
jnp
xor
mov
imul
aad
es
cwtl
jle
popa
xor
xlat
add
xor
jmp
mov
nop
or
fadd
add
mov
and
adc
popa
mov
add
dec
in
push
aas
xchg
std
dec
mov
jnp
scas
ds
lods
xchg
stos
jle
sbb
sarb
inc
jg
ja
mov
sub
dec
std
fdivs
inc
mov
push
add
push
dec
pop
push
cmp
into
cs
mov
leave
add
cmp
mov
cmc
cmp
dec
lahf
cmp
es
push
imul
sub
cs
andb
adc
movsb
leave
add
xchg
pop
sar
add
push
pusha
jmp
adc
in
and
add
fmuls
lds
pop
movsb
jae
and
push
dec
mov
and
lds
lods
out
popf
fildll
push
cltd
mov
and
xor
imul
mov
push
cmpb
imul
lahf
add
adcl
jl
data16
daa
mov
aaa
jbe
fadds
push
cmp
add
fstp
shlb
not
dec
dec
push
push
xchg
add
mov
cmpsb
repnz
cli
into
lods
push
add
stos
adc
lock
inc
movl
jo
pop
inc
jmp
pop
in
push
pusha
hlt
mov
mov
jae
test
push
pop
cwtl
fs
andb
enter
jecxz
mov
incb
xor
sub
inc
fists
mov
mov
fadds
adc
cmc
repz
ds
gs
and
mov
popa
idivl
push
das
fwait
mov
jp
push
inc
xchg
imull
sbb
mov
rcrl
add
aad
push
sub
dec
aam
xor
sbb
frstor
jns
cmp
xor
out
jecxz
jp
xor
xchg
lock
enter
add
aam
add
inc
ja
push
lds
pop
cmc
fimuls
mov
imul
jp
daa
stos
addl
cmp
subb
ljmp
xchg
mov
jae
xor
test
es
imul
leave
std
pop
sbb
imul
mov
and
inc
je
and
fsubs
mov
sub
mov
fcomp
dec
cmp
enter
xor
mov
inc
lods
leave
mov
not
adc
lcall
orl
xchg
jl
arpl
jl
cs
mov
stc
fisttpll
dec
mov
mov
jno
shll
and
call
aad
xchg
and
mov
cmp
push
mov
fbld
cs
scas
jo
mulb
sbb
jle
shlb
xchg
js
push
in
test
pusha
nop
cmpsb
xor
pop
aad
sub
outsb
or
cmp
pop
popa
je
or
adc
mov
push
mov
in
stos
pop
addr16
shll
clc
das
int
vmread
cmp
or
adc
imul
sbb
imulb
ds
out
push
inc
nop
lea
stos
push
jl
xchg
mov
or
adcb
xor
popa
movsl
imul
lods
jle
dec
inc
fldenv
lcall
add
dec
inc
inc
fimuls
mov
or
jno
lods
sub
dec
mov
or
lea
inc
in
jo
mov
insl
cwtl
aas
jecxz
cmp
clc
cltd
sahf
inc
fcomip
fsubl
sbb
out
les
inc
dec
sub
in
mov
mov
inc
js
into
in
lahf
test
scas
add
repz
jge
fildl
in
mov
adcl
daa
push
cmc
es
lods
lcall
cwtl
dec
or
ror
jbe
xor
and
icebp
pop
js
push
shrl
js
push
cmp
inc
rcr
jnp
stos
out
jg
lock
dec
cmpsl
xchg
xchg
ljmp
call
leave
call
mov
cmp
fldcw
or
notb
fistps
sbb
fldl
xchg
mov
pop
cmp
insl
aaa
movsl
scas
xor
dec
mov
test
mov
or
loop
pop
xchg
ret
arpl
or
aas
fdivl
mov
sti
stc
jg
in
xlat
xor
sub
mov
lcall
loopne
jnp
pop
test
ret
mov
jmp
sub
es
loopne
cs
sbb
lea
in
pop
sbb
cwtl
pop
dec
adcb
sub
sbb
ds
cmpsb
push
lds
or
ljmp
push
and
pop
jecxz
sbb
xchg
js
dec
cltd
sbb
sahf
pushf
clc
push
mov
arpl
shlb
xchg
inc
or
cmpb
aas
loop
mov
insl
stos
jmp
cmp
fistpll
popf
fldenv
jne
xchg
mov
xor
pop
push
mov
daa
sub
outsb
fiaddl
mov
insl
mov
and
jp
jg
add
sub
xor
pushf
mov
insl
and
sub
shrb
inc
cmp
stc
jmp
clc
inc
call
imul
cmp
movsl
pop
sub
pop
dec
push
mov
je
dec
ljmp
stos
mov
or
xchg
adc
lods
add
ljmp
sbb
arpl
jle
imul
sti
mov
leave
shl
mov
mov
pop
and
inc
dec
ja
and
sub
pop
gs
jae
movsl
lock
jge
movsb
xchg
test
sbb
adc
addr16
xchg
lock
fsubrs
sbb
or
rolb
inc
daa
lret
sub
and
or
push
stos
stc
pop
jmp
dec
call
jo
jbe
shlb
out
push
leave
mov
sti
mov
jnp
mov
cmovno
cltd
fidivrl
int3
xchg
xchg
dec
fwait
ret
pop
test
jl
rolb
dec
jno
mov
icebp
or
mov
xchg
jmp
fildll
cmp
push
pop
test
mov
mov
fdivrp
sbb
popa
sbb
add
xchg
out
mov
int3
mov
add
lahf
fidivrl
mov
lret
jno
add
mov
lock
xor
add
mov
test
or
fcoml
leave
lods
or
insl
jo
cmp
repz
xchg
enter
mov
mov
or
mov
sti
jnp
mov
jmp
mov
dec
jbe
mov
fdivs
repnz
test
outsl
add
push
push
ja
lods
mov
xchg
jo
mov
cs
cmpsl
into
xor
xchg
in
lcall
mov
push
ss
mov
pop
lods
cli
mov
into
adc
cmp
cmp
cmp
and
jb
mov
hlt
inc
cmp
push
iret
push
fldcw
xor
xor
or
mov
pop
xor
dec
pop
scas
xor
pop
xchg
ret
fdivrl
push
cmp
pop
shl
xchg
adc
pop
shll
in
mov
test
out
push
test
fimull
xchg
jmp
bound
mov
lcall
push
inc
roll
fiadds
jle
jecxz
cmpsl
mov
lock
sbb
ror
fs
scas
popf
mov
test
hlt
mov
shlb
jbe
je
in
fwait
push
cmp
xor
xchg
shl
repnz
mov
mov
mov
gs
push
jle
stos
dec
pop
pop
push
call
sbb
ret
jp
in
xchg
or
lds
inc
sbb
icebp
sbb
jb
cld
push
les
push
or
iret
iret
adc
xchg
cmp
mov
cmc
push
lds
stc
cmc
into
and
add
fstpt
fnstcw
adc
fldcw
jnp
shll
cmp
jp
ljmp
push
cmp
movsb
and
test
iret
pushf
push
xchg
xlat
jb
sub
push
fs
out
push
cmp
pop
xchg
xchg
pop
repz
sahf
cli
in
sbbl
lock
dec
adc
sub
mov
cltd
lds
out
jecxz
repz
push
add
adc
in
or
inc
jo
es
mov
leave
es
and
bound
sbb
imul
movsb
sbb
mov
pop
pusha
subl
and
push
dec
cmp
mov
mov
mov
imul
sbb
jp
arpl
adc
jge
dec
dec
pusha
iret
or
hlt
pop
jmp
call
mov
push
cmc
test
jbe
in
mov
test
xchg
push
jmp
cmp
push
cmp
sti
or
jnp
inc
add
push
and
mov
add
jecxz
rolb
aaa
mov
stos
xchg
fcoml
ljmp
ja
fldcw
cmpsl
mov
cli
pushf
mov
js
stos
lret
icebp
ret
jle
fmuls
stos
inc
sub
adc
mov
push
gs
push
clc
or
imul
int3
cltd
push
icebp
pop
cmp
adc
push
out
clc
imul
jge
add
dec
ret
push
ss
aaa
nop
jmp
add
or
std
or
mov
je
push
pop
pop
ljmp
pushfw
mov
add
pop
inc
xor
xor
movsb
int3
insb
dec
xor
pop
daa
sahf
repz
mov
icebp
push
add
lock
out
xchg
xor
dec
push
adc
and
enter
push
inc
scas
mov
fs
stos
faddl
jmp
sub
fnstcw
popf
pop
jae
adc
test
ds
fists
punpckldq
in
cs
or
cmp
aas
mov
inc
out
push
cmc
cmc
jb
pop
push
in
xchg
stos
sbb
fs
insb
lahf
shl
mov
pop
scas
cmc
xchg
iret
jle
xchg
cs
hlt
add
jg
fldt
mov
ret
push
push
int
xchg
and
and
pusha
inc
dec
adc
mov
jnp
add
insb
inc
pop
lea
push
loopne
push
mov
or
out
out
js
imul
arpl
pop
mov
cmp
repz
loop
fs
inc
xlat
lods
sbb
fdivrs
inc
jns
outsb
jg
mov
out
jo
inc
pop
xchg
test
popa
outsl
hlt
mov
ds
cltd
sbb
aas
inc
je
xchg
in
adc
cmp
fwait
cmp
mov
cmp
cli
add
mov
fiaddl
jle
pop
and
add
inc
mov
push
je
lret
push
inc
jno
pop
mov
std
sbb
fidivl
xchg
jbe
mov
mov
fidivs
cmp
mov
cmpl
mov
popa
shlb
lods
nop
notl
or
icebp
popf
inc
cltd
jno
pushf
sahf
cmp
in
je
insb
jae
ljmp
stc
dec
or
mov
mov
inc
imul
dec
pop
mov
cmpsb
sahf
sbb
cmpl
and
scas
scas
stos
sbb
fidivs
cmpsb
and
pop
or
add
push
cmp
xchg
and
mov
adc
push
or
xchg
in
and
push
rorb
scas
add
call
test
cmp
xor
xchg
pop
fnstsw
sub
rcrb
and
dec
sbb
lret
jnp
lock
aas
push
popf
pusha
scas
cltd
cmp
or
lods
sbb
cltd
js
out
icebp
lret
push
es
mov
ror
add
and
pop
sbb
test
mov
pop
mov
sbb
mov
add
repz
jo
in
or
mov
cmp
pop
dec
jecxz
mov
ds
stc
lahf
subps
mov
xchg
int
popf
inc
lret
cmpsl
pop
les
movsl
es
sub
push
sub
jecxz
repnz
mov
mov
in
outsb
das
ficoms
repz
mov
fcomp
mov
std
and
pop
jmp
push
add
fdiv
lock
inc
movsb
fisttpll
sub
into
jb
ds
mov
sub
ja
jo
fdivrl
mov
sarb
lret
sub
es
in
ja
fbstp
aas
push
sbb
dec
sbb
in
cmp
in
inc
add
sub
out
fisttpl
or
daa
sbb
shrl
pop
jo
mov
pop
in
mov
and
mov
lret
cmp
push
shll
lods
push
and
jecxz
test
xor
mov
xlat
xor
fwait
lock
pop
loopne
enter
cmc
bound
adc
lret
repnz
scas
pop
sbb
lods
movsb
gs
lods
sbb
and
mov
sbb
xchg
and
dec
loopne
js
inc
rorl
sub
rcrb
dec
adc
mulb
cmp
in
cmp
jno
xchg
xchg
inc
or
push
test
daa
out
fcmovnu
arpl
sub
jns
loope
xchg
inc
mov
xchg
outsb
mov
push
jmp
push
fnstenv
in
je
movb
inc
sub
movsb
mov
push
pop
rorl
sub
adc
jmp
jno
out
mov
orb
imul
mov
orl
mull
or
addb
dec
jnp
popa
mov
mov
jle
ds
add
cmpsb
mov
and
mov
fmuls
inc
sub
in
xchg
es
aaa
inc
pop
jp
inc
push
add
cmpsl
pushf
push
dec
fdivl
xor
test
repz
lds
adc
test
icebp
fidivrs
push
je
pop
jbe
inc
test
inc
sarl
mov
sar
jmp
movaps
mov
mov
xor
dec
jge
rcl
mov
incl
xor
fisubrs
sbb
sbb
pusha
pop
in
mov
mov
xor
stos
mov
ds
adc
repnz
shrl
out
sbb
int3
xor
adc
add
mov
add
jns
xor
sub
push
les
jp
pop
sub
jno
divb
dec
mov
or
out
gs
aaa
cli
sub
enter
loopne
inc
sahf
lahf
cmpsb
int
gs
inc
lds
aad
dec
mov
aaa
xchg
loope
imul
push
mov
idivl
in
cmp
inc
loopne
fdivl
lcall
pop
sbb
stc
leave
out
add
cmpsl
mov
mov
dec
icebp
ds
lock
xor
mov
push
mov
add
push
scas
dec
imul
daa
mov
out
fbstp
arpl
testb
call
jns
rorl
cmp
xchg
cld
sahf
jmp
jo
pop
stos
in
push
cmp
xor
sbb
ss
in
xor
adc
repz
in
pop
or
ss
inc
add
cmc
cmpsb
jnp
dec
mov
xor
xchg
loopnew
cmp
cmp
jg
inc
jo
ljmp
stos
ljmp
jne
cli
add
dec
jno
xor
fdiv
es
call
mov
js
ret
fcoml
push
jnp
and
fisttpll
mov
movsb
dec
sbb
pop
std
cs
daa
test
out
push
hlt
out
mov
or
or
out
mov
xor
outsl
sbb
inc
cmp
roll
mov
push
mov
sub
mov
sti
push
mov
int3
mov
in
add
fwait
sbb
sbb
lods
and
mov
push
mov
cmp
xchg
dec
mov
loope
stos
and
aad
lahf
movsb
mov
cli
mov
cmpsl
js
cmpb
inc
add
dec
jmp
or
outsl
mov
adc
add
sub
mov
cmp
int
loop
icebp
out
mov
dec
hlt
xor
adc
adc
add
mov
dec
ret
stos
xchg
pop
xor
les
inc
lahf
mull
pushl
push
mov
xor
mov
jo
mov
add
icebp
filds
jecxz
dec
mov
mov
mov
insb
sbbb
jb
xchg
and
inc
testl
mov
shlb
and
xlat
mov
cltd
sbb
hlt
sbbb
mov
pop
lds
add
in
in
into
cmp
jns
out
inc
cmp
sbb
hlt
nop
imul
fldcw
fucomp
shl
movsb
mov
or
inc
jmp
add
mov
lock
mov
adc
sarb
je
xchg
xor
in
lds
outsl
jle
ret
jp
stc
loopne
add
inc
lret
lods
xor
lret
cmpsl
dec
out
mov
sub
movsb
cmp
jge
inc
test
dec
sub
lds
push
ficoml
imul
scas
cmp
pop
stos
sbb
add
push
push
dec
call
scas
mov
gs
pop
or
addr16
movsl
mov
push
inc
or
cmc
jae
pop
out
mov
clc
and
mov
je
push
pop
pop
cmpsb
push
mov
out
gs
pop
adc
sub
pop
pop
add
ja
sbb
testl
mov
xor
rolb
les
xor
nop
add
sbb
arpl
stos
xor
loopne
lods
pop
and
and
dec
shlb
jne
fsts
loop
in
notb
mov
lds
cmp
cld
jnp
sub
jnp
add
dec
mov
int3
enter
pop
lods
fs
sbb
push
shl
ja
pop
xchg
adcb
stos
es
testl
out
incl
and
rcrl
fs
sbb
xchg
xor
jo
clc
and
jb
dec
aad
cmpsl
xor
fwait
mov
xlat
xchg
sti
sub
lret
xor
fmuls
jb
test
pop
and
test
mov
fidivl
xor
adc
mov
inc
roll
mov
daa
test
sub
nop
pop
mov
mov
in
xchg
test
and
mov
inc
or
mov
dec
sub
test
into
stos
in
adc
cmp
push
sub
fdivp
adc
movsl
lcall
xchg
add
or
lods
test
fdivrl
loop
lret
dec
pop
test
inc
test
out
cmc
dec
fnsave
push
dec
dec
insb
das
mov
sub
sbb
in
cmp
jmp
rol
push
inc
cli
shlb
xor
inc
imul
int3
fistpl
mov
dec
cwtl
nopl
scas
push
sbb
add
mov
mov
rcl
sub
inc
fwait
cmp
adc
aaa
push
not
scas
das
ljmp
sub
sti
aas
jp
pop
mov
shlb
cmp
mov
leave
test
sub
push
int
cmpsb
loope
outsl
pop
aaa
loope
in
in
xor
sub
pop
push
pop
mov
add
cmc
inc
fimuls
sbb
gs
cli
aam
das
or
out
cli
fcoml
xor
aas
dec
cld
rcr
in
loop
fcmovb
call
jno
testb
push
or
mov
push
or
sbb
dec
dec
mov
mov
cmp
pop
ljmp
mov
lods
sub
lods
mov
cs
and
enter
xor
popa
or
das
ret
pop
dec
cltd
loope
out
dec
mov
adc
out
test
bound
push
dec
dec
jp
pop
popf
inc
pop
jae
lock
xor
jne
jge
out
call
shlw
sbb
or
mov
mov
mov
imul
sub
loopne
mov
xchg
movsl
lods
sbb
dec
mov
pop
jae
stos
push
and
call
xchg
rol
adc
lret
pop
es
pop
rcrb
add
aam
insl
or
ljmp
iret
daa
cmpsl
inc
imul
xchg
or
xor
je
sbb
sub
ljmp
nop
sbb
jae
push
mov
cmc
sti
mov
pop
cmp
pop
andl
dec
imul
les
lret
jecxz
mov
jmp
add
movsl
dec
repnz
cmpsl
insl
dec
loopne
jae
mov
cmp
and
movsl
sbb
movsl
mov
mov
adc
xchg
mov
mov
mov
lret
lret
cmpsb
mov
outsb
outsb
imul
xchg
stos
fiaddl
jl
cmp
popa
addr16
xorl
jmp
popa
js
rclb
mov
or
push
movsb
push
ficomps
nop
xor
cwtl
jl
jae
popa
sub
clc
adc
int
je
inc
test
lods
ss
mov
std
or
inc
xlat
popf
or
inc
mov
inc
aaa
add
stos
xchg
std
insl
aam
aam
shr
mov
sti
ljmp
cmp
and
sub
push
loope
call
add
fidivl
push
ret
xchg
cmp
lods
cmp
fwait
gs
imul
das
mov
movsl
push
ss
xchg
idivl
aaa
jbe
cmpsb
aaa
and
fcoml
mov
pop
pop
sti
cmp
mov
loope
div
add
push
xchg
fucomip
cmp
mov
cmp
sahf
shll
cmp
in
rcr
xchg
ficoms
ret
icebp
and
or
xor
shll
dec
jge
pop
mov
daa
mov
mov
gs
push
or
dec
push
mov
xchg
adc
mov
outsl
imul
arpl
fs
jns
outsb
add
dec
sub
mov
inc
fistps
ror
jo
push
jns
sub
dec
ljmp
xchg
pop
jmp
cmp
sarl
dec
sti
sbb
out
push
mov
inc
call
or
jp
pushf
andb
loope
inc
mov
lods
or
adc
jecxz
xchg
cld
scas
in
data16
sub
ret
ds
adc
cmp
sub
cltd
jg
cmp
insb
mov
mov
mov
lods
fstl
cmp
out
fcomip
dec
dec
aam
bswap
xchg
pop
mov
fiadds
dec
lods
pop
cmp
sbb
jbe
iret
push
pushf
inc
mov
dec
push
jno
movsl
push
fstps
push
jecxz
inc
jnp
inc
addr16
cltd
sbb
xchg
movsb
xor
aas
scas
adc
or
repnz
das
cltd
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
insl
cmp
adcl
addl
sahf
inc
mov
push
dec
cmp
clc
dec
xor
add
mov
pop
pop
icebp
push
xchg
scas
test
push
in
sti
pop
xchg
mov
shll
dec
stos
mov
or
pop
ss
and
ljmp
jne
mov
mov
sub
xchg
test
lret
lods
and
notb
add
ss
out
push
push
fistl
dec
inc
in
pop
dec
shl
cwtl
sub
jecxz
dec
dec
xchg
loope
sbb
pop
mov
mov
shr
aam
and
dec
mov
bswap
hlt
mov
mov
add
int3
jmp
in
jns
shlb
push
stos
addl
fmuls
add
fwait
je
jne
lret
pop
aad
adc
aad
pop
and
dec
mov
gs
pop
xchg
jb
loopne
mov
call
pop
jno
daa
cmc
insb
mov
adc
rcrb
lock
dec
inc
xchg
iret
jle
cmpsl
push
aam
push
dec
xchg
pop
cmp
dec
addr16
sub
pop
sub
loopne
sbb
leave
fnstsw
push
loop
addr16
bound
pop
arpl
sub
fwait
repz
clc
stc
fcmovb
or
lahf
adc
lock
sbb
push
notb
mov
ret
pop
out
sub
decl
cld
pop
daa
scas
sub
mov
sub
lret
in
cmp
adc
call
xor
pop
xor
inc
lcall
lock
scas
dec
jle
clc
mov
jg
cwtl
mov
jmp
scas
scas
icebp
cmp
xor
or
std
xchg
jmp
subl
lcall
inc
ret
call
scas
pop
iret
cmc
pop
inc
add
cmpsb
in
push
push
push
stc
sub
int
clc
push
sbb
mull
add
test
out
and
lea
dec
adc
inc
in
lock
out
mov
ret
subl
mov
ss
mov
xchg
jge
ds
and
retw
and
loope
mov
lcall
test
pop
ficoms
stos
sub
mov
mov
mov
adc
xchg
sub
mov
inc
fcomp
ja
mov
notl
in
pop
lret
sub
jecxz
xlat
jo
jmp
je
and
aaa
or
adc
fwait
xlat
mov
push
add
pusha
push
js
popa
sbb
movsb
mov
lods
clc
mov
cwtl
popa
movsb
mov
imul
arpl
push
jno
enter
sub
jg
fcomps
test
jbe
movsb
add
out
cld
adc
popl
lods
fs
xor
push
loope
mov
and
movsb
adc
and
insb
sarl
mov
cmc
in
daa
scas
lret
fbld
push
dec
mov
testb
int3
dec
mov
jmp
inc
sbb
pushl
jp
or
cltd
cwtl
lds
sub
mov
jae
iret
add
in
and
jge
mov
adc
xor
sbb
mov
aaa
mov
or
adc
gs
mov
bound
outsb
out
sub
dec
xor
xor
out
pop
aaa
fsts
inc
sbb
dec
jno
aas
loop
dec
mov
and
cld
dec
and
fstps
cmovge
movsb
adc
xchg
ret
test
loopne
lea
and
ds
push
in
push
add
xchg
inc
bound
ficoms
cmp
ljmp
mov
mov
inc
stos
cmc
das
cmp
or
into
es
pop
xchg
inc
stos
jmp
loope
out
sub
ljmp
xchg
mov
out
mov
mov
repz
xchg
xchg
lods
dec
pop
cmp
shr
out
adc
loopne
mov
leave
mov
xlat
mov
leave
fabs
xor
insb
jl
test
sub
leave
lret
fstpl
sbb
lods
jle
jns
sub
dec
mov
jnp
adc
cld
xchg
nop
popf
inc
in
pop
mov
or
test
mov
lock
fdivl
push
xchg
fldcw
andl
push
jg
data16
adc
fimull
popf
cmp
or
xchg
test
pop
inc
inc
jp
cmpsl
or
outsl
cmp
pop
fwait
push
loop
fbld
adc
or
and
dec
jg
push
lods
shl
and
aad
add
imul
lods
inc
mov
xor
lcall
out
ret
dec
jle
and
lret
sub
xchg
and
pop
lret
inc
inc
sbb
in
es
jo
sbbl
aam
pop
insb
sbb
lods
sub
ret
ss
jne
in
mov
mov
loopne
mov
shll
push
sti
lahf
jmp
sbb
cmp
push
mov
ss
mov
mov
push
aaa
imul
xchg
scas
cmp
movsl
popa
jno
imul
sub
jnp
dec
aas
punpcklbw
pop
repnz
jbe
jle
cmpl
jb
fidivl
fs
fnstenv
rcl
lret
lcall
jae
dec
xor
fldl
divl
js
fisubs
imul
cmp
mov
jmp
xchg
sbb
enter
call
and
repz
lret
shr
test
pop
enter
adc
rclb
mov
sub
and
pusha
std
mov
inc
jp
sub
lds
or
xchg
sbb
jne
xchg
jns
nop
cmp
insb
shlb
xchg
dec
or
insl
fistl
js
lea
outsb
test
push
aam
je
xchg
jp
aaa
mov
adcl
push
cmc
cmpb
xchg
sbb
call
ret
xchg
push
nop
push
mov
sub
iret
aad
out
dec
dec
mov
lds
cmp
lahf
dec
enter
xor
loopne
xchg
rorb
out
mov
mov
or
inc
pusha
mov
mov
lods
movsb
lret
mov
test
out
filds
sbbb
movsb
out
lods
je,pt
movsb
add
or
adc
lea
xchg
mov
iret
addr16
scas
adc
js
movsl
push
sbb
into
gs
push
jge
xchg
jge
into
xchg
sbb
pusha
fs
into
cmp
cli
andl
rcll
mov
cmp
nop
inc
xchg
cmc
xchg
mov
xor
mov
or
out
add
lods
adc
sub
sbb
or
pop
shll
cld
jp
mov
adc
or
mov
movsl
mov
or
push
jle
je
cmp
outsl
cmp
push
scas
adc
popf
dec
mov
mov
and
jbe
xor
mov
jl
rcr
enter
add
mov
arpl
not
add
movsb
push
pop
imul
popa
repnz
jnp
lock
js
out
cwtl
cmp
hlt
fbstp
outsb
movsl
sarb
rcrl
jae
cmp
sahf
inc
xchg
jns
idiv
xchg
dec
cmpsb
mov
jne
lea
and
sbb
inc
or
jne
loopew
jle
push
pop
mov
fbld
fldcw
sbb
das
mov
pushf
shll
pushf
std
inc
mov
or
mov
enter
aas
inc
mov
out
pop
inc
xchg
iret
mov
stos
mov
in
mov
mov
dec
xchg
push
loope,pt
mov
icebp
xchg
and
mov
xchg
repnz
imul
push
mov
ds
or
xchg
mov
cmp
lock
xorl
mov
out
mov
call
jbe
fimull
xchg
cmp
sti
mov
in
scas
push
adc
jns
sbb
cltd
rcrl
cmp
outsb
push
clc
mov
int3
pop
or
mov
test
adc
and
and
ljmp
jae
or
inc
cmp
sbb
shr
jecxz
jl
and
jns
aaa
insl
in
mov
push
popa
pop
mov
cmp
xchg
fldcw
cmp
sbbl
int
hlt
std
inc
sbb
pop
jle
imul
mov
imul
or
movsl
pop
push
call
popf
xor
sbb
mov
sbb
in
dec
mov
in
bound
push
xor
in
inc
sub
inc
out
or
aas
or
push
int3
clc
leave
cmpb
fwait
jge
mov
mov
mov
aaa
orl
mov
es
sub
add
lock
or
insb
arpl
jecxz
push
ret
decb
mov
fwait
mov
testb
sbb
mov
mov
xchg
mov
outsl
mov
cmp
mov
popa
mov
in
mov
jns
push
test
push
call
xor
jnp
mov
fsubs
fcomip
aas
pusha
fidivs
aad
fcomip
pop
arpl
rol
add
mov
pop
cltd
push
ja
movsl
xchg
push
xchg
xchg
sarl
sbb
ficoms
movsl
or
adc
js
mov
sbb
dec
lahf
insb
lcall
popf
push
stc
rorb
and
lock
add
mov
cmp
mov
rcr
dec
icebp
and
mov
mov
icebp
pop
fsubrl
fimull
sub
repz
shll
popf
or
hlt
mov
push
add
cmp
cs
in
movsl
pushf
adc
or
push
lds
ja
mov
sbb
aaa
jmp
mov
cld
lods
dec
lcall
lds
fcomps
push
jnp
inc
mov
hlt
fisubl
loop
mov
cmp
shrl
mov
mov
fbstp
dec
jmp
add
aas
call
and
imul
daa
loopne
popa
cmp
lret
sarb
xor
push
dec
dec
enter
sub
jno
mov
loop
add
sub
outsl
negl
outsb
mov
xchg
mov
lods
les
xor
in
mov
cmpsl
pop
or
mov
mov
jp
stos
or
mov
or
call
adc
iret
add
dec
stos
lret
sbb
pop
mov
rcl
sahf
in
out
sbb
jge
cld
rcrl
mov
jle
mov
lahf
vpcomfalseb
xchg
jns
pop
xchg
add
xchg
adc
lret
dec
cwtl
adc
jo
data16
lea
nop
sbb
dec
pop
scas
dec
insb
pushf
in
mov
je
movsb
cltd
ss
dec
popa
cmc
xchg
or
jg
pop
pushw
aam
nop
jo
sbb
xchg
cmp
cmp
dec
mov
jae
test
add
ret
inc
add
add
sub
paddsb
iret
jbe
loopne
inc
dec
wrmsr
inc
sarb
jmp
push
test
movsl
xchg
nop
xor
xchg
hlt
mov
insl
xchg
cs
ret
sbb
das
push
lock
pop
cmp
insb
and
movsb
pop
mov
mov
jl
scas
inc
leave
aas
xor
push
and
movsl
daa
out
pop
jno
mov
sub
add
push
or
aam
sub
or
push
cmp
push
repz
or
daa
pop
cltd
and
inc
adc
push
int3
enter
fisubs
jb
movsb
jae
mov
adc
dec
test
faddl
clc
cltd
mov
cmp
mov
sbb
adc
sarb
rcll
jmp
in
jge
cmc
and
cmp
shr
cmp
cmp
sub
loopne
adc
sub
xchg
jnp
jo
hlt
pop
push
push
aaa
inc
jbe
add
xchg
add
and
sbb
filds
push
or
mov
push
add
lcall
icebp
mov
int3
cmpsl
xor
dec
mov
pop
rolb
xchg
or
rcrl
out
out
cs
rcrb
inc
loopne
xor
add
cltd
lcall
lds
pushf
inc
decb
jae
inc
bound
loope
mov
arpl
sub
mov
cmpsl
mov
dec
fcomps
loopne
xchg
cld
jg
out
pop
jl
add
in
mov
sbb
mov
lock
sub
je
rcrl
xchg
jp
mov
mov
or
in
adcb
les
int3
xchg
loope
cs
xchg
lcall
sub
sub
xor
cltd
xor
xchg
out
and
es
jno
je
push
jo
into
or
pop
frstor
dec
xor
dec
pop
movsl
bound
out
call
aam
mov
shll
mov
stos
and
cmp
mov
pop
adc
inc
sbb
mov
mov
out
notl
lea
test
push
cmp
dec
je
adc
xchg
outsl
xor
mov
mov
mov
pop
shll
or
mov
movsl
mov
mov
lds
mov
test
lahf
xchg
test
sub
out
mov
adc
cs
mov
gs
test
xchg
je
jmp
mov
adc
hlt
mov
cmp
adc
dec
aaa
pop
out
push
lahf
and
inc
rorb
pop
xchg
les
push
and
fwait
jae
shlb
pop
adc
shlb
roll
outsl
cmp
inc
in
push
adc
in
mov
dec
jp
test
xchg
sbbb
mov
xor
push
test
mov
xor
stc
pop
movsb
xor
pusha
int
inc
outsb
jmp
sbb
andb
xor
cmpsl
es
loop
aam
imul
sbb
cli
in
out
pop
sub
xor
mov
pushf
mov
xchg
jns
in
mov
enter
or
mov
inc
and
inc
ret
xor
lret
fidivrl
aam
jge
dec
adc
add
lahf
filds
xchg
mov
movsl
sbb
mov
xchg
outsb
negb
nop
rep
mov
push
fiaddl
in
lret
arpl
and
push
sti
aas
push
or
and
sahf
lods
rorl
cmp
outsb
decl
push
lea
orb
icebp
and
add
pop
outsl
push
insl
jno
pop
je
aaa
movsb
sub
adc
loopne
pop
cs
pop
sub
daa
jecxz
push
cmp
mov
and
loop
and
daa
nop
inc
jg
gs
xlat
repz
iret
call
sub
push
xchg
fnstenv
push
lds
shlb
cmp
xor
leave
cmc
std
fnsave
aas
xor
out
in
jmp
push
iret
lcall
cmpsl
pushf
ljmp
and
sub
test
and
movsb
xchg
ja
push
sub
xchg
mov
sbb
xchg
mov
jmp
lds
js
xor
push
dec
lds
mov
clc
lods
dec
jle
addr16
pusha
std
and
out
scas
dec
sbbb
out
or
push
sub
fdivrs
test
je
ljmp
enter
add
es
outsb
or
sbb
xchg
dec
sub
mov
mov
es
sub
ss
mov
cmp
outsb
lret
das
mov
push
push
repnz
push
rolb
sub
sbb
mov
xor
jbe
into
scas
add
push
lcall
add
jns
lods
leave
outsb
adc
aad
addr16
push
sub
fisttps
inc
cmp
sbb
inc
push
adc
ret
out
lret
mov
mov
sub
ljmp
imul
pop
inc
sub
enter
lea
sub
sub
lock
insl
or
fisubl
jmp
popf
pop
sbb
add
or
adc
out
loope
fcomps
lret
movsl
push
adc
js
xchg
push
add
xlat
call
pop
addl
adcb
fcompl
aaa
mov
ds
test
jbe
iret
sbb
sub
lods
pop
mov
and
xchg
nop
add
sbb
icebp
pop
dec
xor
shrl
pop
mov
insl
shrb
je
sbb
sbb
lods
sub
and
cld
cmp
jo
test
add
les
mov
cli
inc
xor
push
les
loop
call
cmp
je
fwait
or
aam
and
xchg
mov
sbb
in
in
xchg
cli
pop
imul
cmp
movsb
idivb
adc
cltd
adc
push
sbb
sbb
out
imul
add
adc
pop
inc
and
test
stc
and
std
in
dec
xlat
and
adc
popf
ja
call
inc
adc
enter
ret
xchg
xor
push
lods
pusha
daa
dec
inc
fwait
push
repnz
in
sub
cmpsb
or
test
stc
xchg
ret
sbb
lahf
cmp
repnz
jmp
push
ja
mov
stos
jg
ret
subb
pop
in
lret
test
dec
jns
lea
ss
add
popa
les
imul
aaa
faddl
sub
mov
cmp
or
loope
jae
jae
sub
ljmp
sub
mov
adcb
xor
enter
xchg
gs
xor
xchg
shrl
cmp
sub
stos
xor
loop
addr16
dec
fimull
in
mov
fsubrl
testb
es
dec
rcrl
pop
clc
jb
pushf
popa
fidivs
loope
fisttpll
add
push
dec
adc
fstl
push
cs
movsb
add
mov
test
sti
jnp
test
test
and
add
ffree
and
push
stc
inc
push
stos
dec
xchg
xor
rclb
inc
push
push
icebp
push
sar
out
dec
outsl
lahf
push
ret
ljmp
and
mov
sbb
fwait
cmc
fimull
adc
add
stos
mov
pushf
or
xorb
arpl
test
repnz
or
xlat
mov
push
cwtl
mov
mov
mov
imul
cs
fsubs
cmp
inc
jp
pop
pop
dec
mov
sub
mov
pusha
mov
fldl
loope
jno
std
or
push
push
mov
add
repnz
cld
inc
and
subb
jle
push
test
or
fwait
cmp
outsb
outsl
jmp
fcmovbe
add
pop
cli
incl
jae
movsl
xor
pop
das
dec
in
lret
lock
gs
outsl
or
cmpl
outsb
mov
pop
scas
fnstenv
jmp
add
jp
in
loop
mov
idiv
or
mov
sub
adc
aam
and
ljmp
mov
jne
mov
ficomps
inc
pusha
fimuls
jg
lds
fistl
mov
aam
mov
lcall
xchg
add
aas
jnp
xor
inc
push
cwtl
iret
and
outsb
scas
cmpb
mov
bound
imul
lahf
fbld
xor
aad
mov
into
mov
mov
arpl
stos
hlt
push
cltd
pop
sahf
dec
loopne
push
cmp
pop
pop
cmp
ljmp
mov
fmuls
or
jle
xchg
and
sub
in
sbb
movsl
jo
mov
xor
sub
xor
sbb
sub
leave
xchg
mov
call
adc
jmp
addb
push
dec
cmp
jp
adc
dec
push
cmpsb
push
mov
xlat
mov
dec
popf
mov
cmp
inc
insb
enter
dec
pop
cmp
rcl
pop
ror
wbinvd
test
lret
aad
lret
es
jo
push
sbb
pushf
out
scas
jecxz
fidivrl
aam
in
jl
popa
or
scas
pop
fbld
out
and
outsb
fdivl
enter
iret
lock
sub
pusha
int3
sbb
out
test
or
movb
dec
sub
adc
leave
sbb
cmovb
clc
jne
fildl
pop
mov
arpl
jo
mov
add
rorb
dec
call
negl
xchg
inc
lcall
mov
lea
cwtl
mov
lea
xlat
sub
dec
dec
cmc
push
mov
and
js
mov
mov
outsb
dec
mov
ds
stos
mov
fstpl
lods
cli
sbb
xchg
pop
test
cvtps2pi
stc
fsubrl
aad
mov
jb
jnp
or
jmp
inc
and
dec
es
leave
jl
shr
xor
push
cmp
jnp
ret
push
cli
repz
ficoml
stc
imul
pop
shll
hlt
sti
jb
inc
ljmp
and
sbb
fisttpl
nop
push
fisttpl
jge
rcll
jno
xor
xor
or
cmpsl
adc
push
sahf
imul
mov
cltd
mulb
testl
add
lea
inc
dec
push
or
jb
xor
push
in
lea
cmpsb
fcoml
or
sbb
jle
or
cmp
outsb
in
cmpsb
mov
js
leave
test
les
inc
je
call
mov
lods
popa
mov
sbb
fsubs
in
adc
mov
cmp
inc
call
repnz
ret
loop
and
sbb
push
shr
sub
push
cs
add
lahf
mov
mov
sbb
adc
mov
ljmp
jne
mov
gs
xchg
nop
mov
sbb
ficompl
xchg
dec
into
decl
add
add
lock
sbb
xor
cli
inc
loopne
movb
mov
cmp
ljmp
bound
adc
sbb
push
mov
push
push
push
outsb
cmp
lret
and
ss
ljmp
cwtl
stos
enter
fists
fucomip
cmp
and
scas
out
mov
adc
iret
cmp
cmc
rcll
and
sbb
ja
mov
pop
jecxz
dec
jns
dec
mov
ljmp
xchg
dec
lret
cmpsb
iret
mov
stc
std
out
pushf
mov
pop
mov
mov
xlat
sub
dec
dec
mov
push
out
jge
xchg
mov
mov
xchg
std
cli
pop
add
jl
ficoml
add
adc
popa
mov
cmc
popf
or
fistps
ss
adc
add
test
jae
and
xchg
inc
pop
sbb
cmp
or
jb
loopne
movsb
adc
ss
aam
int3
inc
fists
jg
addb
sub
or
pop
and
fcompl
jne
jmp
jae
push
inc
rcll
dec
sbb
and
push
sub
mov
addr16
cmp
clc
push
repz
movsl
nop
pop
fstpl
jb
mov
dec
mov
std
das
pop
cmp
or
push
enter
je
mov
out
out
push
lock
insb
xor
xlat
decb
mov
in
stc
sar
ss
loop
scas
lods
add
mov
jne
sbb
rcl
fistpl
inc
xlat
mov
inc
daa
xchg
jmp
inc
fldcw
inc
cld
adc
dec
int3
rcll
add
shrb
inc
clc
out
xchg
dec
xchg
mov
xorl
adc
xchg
mov
inc
sbb
push
fadds
stos
push
subl
outsl
mov
and
cmp
cmpsl
fdiv
jl
cmp
pop
inc
push
test
mov
jno
leave
fisubs
jo
xchg
adc
lcall
rclb
jg
mov
rcrb
enter
ss
xor
adc
jp
mov
jmp
sbb
pop
jg
inc
mov
adcb
jbe
push
movsb
jp
and
cmp
enter
loop
sbb
es
fcmovnb
sub
jns
lahf
addr16
fsubrs
xchg
xchg
adc
into
mov
mov
test
sahf
or
mov
js
mov
fmull
sub
popa
pop
xchg
mov
add
mov
cs
cld
in
mov
enter
cmp
test
push
mov
cmp
scas
in
pop
scas
lahf
shll
cmc
shrb
jge
in
and
jg
aaa
mov
loop
push
jecxz
dec
jnp
mov
cmp
and
sub
loop
xchg
or
aam
cmc
pop
xchg
scas
add
xchg
sbbl
mov
xor
mov
lcall
and
xlat
aam
or
sub
aad
push
jbe
cmpsb
push
and
adc
inc
and
jb
jnp
ja
pop
or
add
dec
nop
sbbb
out
jecxz
dec
ret
sbb
loope
hlt
or
sub
inc
test
pop
enter
lds
stos
pusha
mov
jg
adc
repnz
xor
fdivrp
lods
lcall
aas
scas
cmp
xchg
jae
fisttps
js
dec
mov
adc
cwtl
mov
popf
adc
xchg
pop
or
sbb
lods
push
pop
das
xor
mov
sub
pop
push
add
neg
in
and
cmpsl
cmc
dec
push
mov
jecxz
inc
lea
adc
lods
dec
sbb
pop
sub
orb
out
shll
push
cmp
ret
repz
jbe
in
sbb
mov
xor
push
mov
insl
dec
enter
loope
lret
xor
js
es
cld
cmpsl
lock
push
popf
loopne
lea
mov
loopne
scas
jae
js
xchg
ficoms
mov
adc
xor
ret
add
repz
mov
mov
xchg
nop
jmp
pushf
mov
sbb
mov
cld
jne
mov
mov
sub
xor
into
add
mov
lea
test
cmp
inc
sub
push
fwait
push
mov
stos
scas
dec
adc
movsb
jns
dec
inc
add
pop
cwtl
xchg
and
mov
xlat
out
subb
mov
test
ret
xchg
jnp
jg
addr16
xchg
xor
pop
jp
push
popf
daa
or
xchg
xchg
fsubrl
sbb
repnz
mov
dec
mov
test
and
or
xchg
data16
sbb
out
into
das
dec
mov
adc
sub
xchg
hlt
js
push
cwtl
fwait
out
mov
les
lods
mov
call
or
out
loop
cmp
mov
sub
mov
xchg
clc
mov
nop
cmp
ja
mov
fisttpll
pop
andb
or
fs
movl
xchg
adc
jge
push
cmp
jle
repz
mov
mov
cmc
xchg
pushl
xchg
mov
pop
push
popf
aad
push
dec
test
int3
mov
fsubrs
push
in
stos
xchg
stc
aas
cmp
ret
decb
lret
clc
and
add
push
test
ss
jle
pusha
xor
scas
flds
lret
xorl
jbe
pop
rcll
lods
jne
push
je
sbb
and
rcrb
mov
jns
enter
cld
lcall
add
mov
pop
xchg
pop
repnz
sub
ja
movsl
cmp
jmp
mov
jle
hlt
jge
mov
add
xor
imul
add
repz
cwtl
push
mov
mov
aaa
in
out
jns
repz
out
sub
clc
mov
loopne
xlat
add
notl
lods
js
jg
xorl
aas
inc
xchg
std
outsb
add
out
sti
sbb
adc
inc
xor
or
cwtl
aam
cmp
fnstenv
lods
cmp
mov
and
stos
lret
push
pop
mov
popa
fdivl
lahf
lret
in
jmp
pop
pusha
imull
pop
xchg
aaa
insl
and
data16
aas
push
sarb
mov
test
inc
or
pop
aam
xor
decl
pushf
mov
out
or
test
movsl
loop
sbb
jle
push
pop
cmp
and
cmp
dec
fbld
negl
lock
sub
sub
cmp
js
xchg
jle
lret
loope
mov
addl
je
out
jg
insl
xchg
or
adc
cmp
ret
inc
andb
js
and
xchg
push
es
sub
mov
mov
xor
sub
or
push
mov
add
test
jge
lret
shl
lret
lret
lret
fdivs
jb
jl
loope
lcall
jge
xor
mov
mov
cmpsb
pop
lock
mov
pop
lods
adcb
jle
stos
and
lock
ss
mov
fisubrl
mov
xchg
outsl
sbb
push
push
bnd
mov
or
cmp
pusha
pop
fwait
cmp
cmp
insl
gs
jp
insb
lcall
dec
sbb
call
mov
std
dec
adc
cmpsl
ss
dec
jae
int
or
jg
add
stos
mov
cmp
push
sbb
inc
xchg
xchg
fwait
adc
enter
and
cmc
scas
or
inc
jne
pop
mov
ret
or
sub
add
xchg
das
xchg
jb
popa
or
lret
or
mov
scas
fcoms
or
aam
std
cmpsb
movsb
inc
int
test
dec
loop
dec
std
lahf
sti
in
testb
fwait
add
sub
or
lods
enter
xor
nop
jbe
pop
jge
adc
fdivr
fildll
cwtl
push
jle
xor
shlb
sbb
add
std
jbe
jle
or
jo
pop
push
test
rorb
and
jecxz
sti
in
ds
roll
mov
in
pop
int3
dec
push
mov
push
adc
pop
insb
cmpsb
mov
ds
pusha
inc
pusha
mov
outsl
call
int3
not
xor
jp
mov
inc
add
inc
dec
add
and
xchg
out
gs
je
mov
outsl
cmp
stos
or
lds
in
adc
ror
and
rorl
gs
push
outsl
mov
or
lret
xlat
ds
xchg
and
mov
aam
adc
les
stc
mov
mov
stc
jnp
cmpsl
ficompl
ljmp
lds
mov
ds
add
shrb
int3
les
inc
popf
repz
pop
in
or
cmp
or
lds
xor
cmp
cmpsl
push
xor
sub
sub
jmp
adc
test
cli
dec
cmpsl
fists
pop
addl
lret
push
fxch
clc
pop
xchg
add
add
in
scas
xchg
out
cwtl
mov
stos
push
mov
inc
imul
and
lods
or
cmp
push
add
sarb
scas
movsb
roll
sub
xchg
mov
dec
pop
push
sub
int3
cltd
mov
ret
es
iret
jne
dec
cltd
mov
pop
lods
cmp
mov
clc
mov
adc
rolb
out
mov
ss
addr16
sbb
sbb
movsl
outsb
repnz
loop
pop
popf
or
cmpsb
jne
popa
mov
lods
and
lret
jmp
int
adc
cmp
push
sbb
out
sub
bound
ljmp
push
xchg
mov
sbb
pop
push
push
jnp
clc
lahf
and
je
mov
lretw
dec
pop
std
sub
cld
fisttpl
mov
sub
hlt
shl
aad
fmuls
push
sbb
stos
or
testb
xchg
fsubrs
movsb
fadd
loope
jecxz
xchg
dec
orb
mov
or
push
sbbl
lret
sub
das
add
hlt
sbb
mov
dec
push
cmp
sub
cs
xor
or
mov
jp
mov
mov
bound
lret
subl
adc
xchg
outsl
push
pop
push
inc
sqrtps
mov
inc
pop
test
shrl
and
or
mov
mov
adc
xlat
jmp
inc
mov
test
add
mov
fxam
or
lds
lcall
mov
inc
movsl
pop
stos
negl
pop
mov
dec
mov
fisubrs
mov
bound
xor
xor
daa
pop
aad
and
gs
mov
sarb
mov
lods
jle
movsl
dec
int3
or
sbb
mov
sub
enter
mov
fdivrl
xchg
fimuls
jb
mov
xlat
jl
or
and
lods
leave
testl
push
test
and
nop
sti
mov
lahf
sbb
dec
push
cmp
ljmp
movsb
imul
lcall
es
fptan
pop
cld
xchg
mov
adc
pop
mov
push
rclb
push
xchg
stos
lahf
jns
add
adc
mov
mov
or
lds
mov
aad
or
movsl
push
xor
pushf
mov
fwait
dec
negl
ja
iret
leave
stc
sbb
adc
jns
std
and
mov
hlt
jo
xchg
jecxz
push
fcmovnbe
adcb
jl
xchg
dec
xor
inc
jecxz
mov
dec
xlat
sbb
test
shll
ret
jge
pop
or
cmc
movsb
lods
rcrb
push
mov
mov
mov
push
int3
mov
push
inc
dec
into
repz
insl
pushf
xor
jle
inc
mov
or
jl
xor
gs
or
test
dec
or
cmp
in
sub
ljmp
imul
fcmovu
cmp
insb
ljmp
in
cmp
je
divl
sbb
sbbb
sub
out
cwtl
mov
mov
std
cmp
ret
in
adc
lea
in
adc
sbb
push
mov
xchg
xchg
inc
cli
push
xchg
inc
and
out
xchg
push
pop
js
mov
push
xor
ss
xchg
xchg
faddl
icebp
cli
xor
repz
daa
sbb
xor
sub
cmp
adc
aas
mov
enter
mov
lahf
jl
stos
es
sbb
xor
mov
sub
dec
or
mov
lds
mov
lcall
es
fidivrl
decb
mov
clc
test
fcomip
mov
ret
jne
and
ret
or
xchg
mov
jno
sub
push
imul
and
fbld
call
or
jne
mov
iret
repz
les
loope
dec
adc
pop
test
xchg
call
push
inc
inc
data16
call
dec
adc
pusha
je
movsb
dec
or
adc
jl
mov
ljmp
aas
mov
xchg
push
je
lods
stos
outsb
sti
lock
icebp
jnp
jl
fdivr
enter
push
call
dec
in
pop
mov
mov
cmpsl
jg
push
mov
jp
mov
ret
add
mov
hlt
adcl
push
cmp
dec
pusha
loope
mov
sub
xor
lods
mov
pop
pop
dec
mov
pusha
sub
mov
int
into
lret
xchg
in
mulb
cld
adc
enter
ljmp
dec
data16
inc
inc
rcl
arpl
cmp
mov
and
mov
pushf
cs
daa
push
sub
jge
pop
shll
xor
addb
and
cmp
push
ret
mov
in
mov
push
std
or
pop
aas
int
repz
add
inc
inc
hlt
cmp
jne
sbb
insl
pop
call
inc
xor
stos
adc
push
sbb
mov
stc
imul
addb
add
add
out
cmp
dec
adc
add
loop
cs
cld
std
js
int
xor
jge
jl
dec
jbe
mov
push
dec
cmc
repz
inc
push
mov
mov
or
and
ret
outsb
frstor
add
dec
xor
or
dec
cs
dec
mov
mov
insb
add
test
add
inc
pop
cmpsb
mov
aaa
dec
xchg
into
stc
pop
icebp
adc
cmp
adc
loop
cmp
stc
inc
loop
rorl
inc
and
jp
xchg
lcall
movsb
leave
in
inc
cmp
jecxz
popa
sbb
push
movsb
push
mov
xchg
fldenv
dec
mov
jge
mov
sbb
imul
push
pop
int3
and
push
mov
fstpl
xor
cs
add
sbb
or
ljmp
sbb
or
sahf
push
mov
hlt
and
out
and
shl
es
sbb
add
fsts
fwait
mov
test
mov
sbb
lcall
in
adcb
loopne
mov
cmp
in
mov
cmpb
into
push
cltd
outsb
sub
dec
das
je
ss
in
aaa
mov
mov
bound
int3
jmp
sbbl
mov
jo
adc
mov
ds
popf
int3
and
xchg
call
jmp
sahf
insb
adc
ss
add
lahf
sahf
and
fdivrs
add
stos
loop
out
mov
out
test
cmpsb
cltd
jno
mov
int
ficoms
sbb
cmp
mov
mov
lock
lahf
movsl
mov
mov
loope
xchg
push
adc
jo
cltd
repz
push
xchg
rcl
in
out
jne
dec
pop
jae
lret
and
cmp
popf
inc
sbb
inc
test
add
sbbl
adcl
dec
mov
sub
mov
jbe
popa
addr16
fstps
inc
sub
push
mov
rolb
or
jge
call
jmp
xor
push
inc
pusha
jge
xlat
in
mov
test
mov
mov
ret
into
dec
dec
js
enter
inc
and
lret
or
cmp
or
pop
pop
fs
insl
xchg
lock
xor
cs
clc
xor
fstps
insl
sub
movsb
outsl
add
rorb
fldln2
pusha
andb
pushf
dec
xchg
js
mov
mov
and
xor
and
push
test
fcomps
pop
push
rcl
fs
fldcw
sarb
fidivs
jg
add
adc
arpl
lahf
push
inc
inc
lds
add
sub
cwtl
mov
cmpsb
lcall
pop
xchg
mov
test
popf
clc
jnp
int3
stos
push
dec
sub
sub
dec
pop
pop
xchg
pop
and
or
add
aaa
jmp
or
movsl
pop
xor
add
push
cli
lret
inc
ja
mov
cmpb
lock
mov
and
xor
add
repz
inc
xchg
or
push
bound
xchg
sti
dec
adc
out
insb
cltd
out
or
lds
int
or
mov
jl
fcmovu
xor
cmp
push
xchg
xchg
fdivr
mov
fdivrs
push
ret
dec
cmp
cmp
in
sbb
cmp
in
jnp
push
fidivs
sub
shr
inc
push
js
ljmp
sub
xchg
pop
cld
xor
cwtl
adc
mov
das
loopne
cmp
aaa
call
fsubs
mov
dec
sbb
orl
cmp
adc
mov
push
mov
inc
test
jl
lods
pop
jge
inc
lahf
cmp
mov
push
in
dec
aam
inc
test
inc
add
call
rolb
icebp
repz
jne
sbb
xchg
int3
stc
pushf
js
xor
insb
push
mov
jge
adc
inc
mov
jbe
sbb
out
ror
in
nop
and
out
xor
dec
mov
push
dec
aad
or
fldl
jno
push
aam
jb
gs
and
testb
out
enter
scas
insl
lds
aaa
bound
cmpsl
xchg
fwait
jno
dec
dec
popa
mov
out
ds
inc
cwtl
int3
fiaddl
jns
sub
mov
add
xlat
inc
lret
shl
xchg
lock
xchg
add
xchg
or
fildl
jmp
jbe
leave
adc
bound
jb
outsl
xchg
jmp
test
xchg
pop
adc
mov
or
sahf
sbb
mov
cwtl
mov
mov
mov
lahf
adc
data16
sub
sar
out
fists
icebp
orl
call
add
mov
mov
dec
xor
rorl
mov
mov
pop
cld
negb
pop
sub
scas
and
jbe
fimuls
mov
call
push
scas
pusha
inc
rcll
jbe
jle
cmp
push
cmpsb
mov
std
mulps
sbb
addr16
clc
andl
mov
loope
sub
subb
orl
sub
jne
push
mov
shlb
icebp
or
jae
fidivrs
push
pop
pop
adc
in
cs
int3
mov
dec
daa
das
and
shl
cld
push
ja
inc
xchg
out
cmpsl
sub
hlt
cmp
add
popf
les
cmpsl
loop
mov
adc
xor
mov
enter
or
pop
pop
or
mov
cltd
clc
lods
sub
add
addr16
stos
sarb
lea
add
xor
gs
cmc
lcall
pop
add
fsubp
fwait
ljmp
mov
loope
je
add
loope
push
std
mov
mov
push
cmp
dec
push
in
mov
or
sbb
jp
push
ljmp
mov
inc
mov
inc
push
cmp
mov
ss
test
sub
dec
xchg
sbb
or
and
and
jmp
std
in
jno
sub
jns
test
jmp
movsl
push
cmpl
cmp
or
je
loope
iret
jnp
pop
mov
mov
xchg
fwait
dec
cwtl
das
test
mov
repz
adc
pusha
xchg
mov
insl
fcompp
dec
xchg
dec
lods
add
sahf
inc
mov
popa
ret
lods
out
jl
cmpsb
add
mov
xchg
addl
cs
fstps
adc
mov
ret
push
cltd
push
shrb
mov
aad
xchg
add
cmp
dec
sub
and
jno
pop
fistl
dec
inc
je
mov
add
cmpsb
and
add
jb
pop
js
shll
cmp
sub
in
pop
scas
push
push
ffreep
sub
dec
stos
sub
mov
decl
adc
pop
mov
push
mov
cmp
jno
add
jbe
push
adc
pop
aad
aas
imul
daa
aaa
push
jg
rcll
pushl
pop
add
iret
xor
cmc
adc
mov
and
mov
pop
pop
rcl
cmpsl
imul
inc
mov
and
inc
fcomp
sub
pusha
mov
andl
out
pop
in
mov
cmp
in
or
fs
lret
js
mov
lret
cmpsb
inc
pop
inc
mov
push
inc
inc
inc
popf
inc
cld
inc
fmulp
test
add
push
push
xor
mov
idiv
in
xor
int3
sti
inc
xchg
mov
mov
and
mov
jno
push
aam
dec
stos
loop
sub
jbe
out
jo
mov
lods
inc
outsl
adc
fildll
test
mov
andl
jp
jae
cltd
sub
jle
int
icebp
push
pusha
xor
cmp
push
cmp
and
sub
sbb
rclb
pop
pop
sub
into
orl
daa
dec
pop
pop
pop
ljmp
and
xor
cmpb
js
mov
mov
sub
rcll
imul
push
or
imul
mov
into
ret
adc
sbb
jmp
dec
jmp
pop
and
mov
aaa
push
add
cmpsl
outsl
test
jmp
fisttpl
dec
pop
dec
imul
mov
sti
dec
xchg
lret
sbb
imul
mov
out
adc
out
call
fcompl
xchg
mov
mov
push
aaa
cmpsb
mov
inc
add
mov
shl
and
mov
ja
jno
dec
mov
sub
mov
adc
mov
cmp
push
loopne
mov
and
mov
inc
mov
repnz
mov
and
xlat
pop
mov
loope
mov
cmp
mov
arpl
mov
arpl
stos
lea
nop
jmp
xchg
cmp
mov
mov
xchg
hlt
push
fistps
push
sub
leave
and
hlt
outsb
inc
test
lcall
push
cmpsl
xchg
sti
clc
and
jnp
mov
jmp
xor
cmp
xor
mov
sub
push
mov
xchg
cmp
xor
and
ret
test
pop
out
cmp
or
pop
jno
adc
nop
mov
addr16
or
jnp
cmp
push
adc
mov
das
insl
or
xchg
pop
out
jmp
dec
jmp
inc
mov
je
add
push
ja
orl
push
add
in
inc
xorb
repz
divl
mov
stos
sbb
cmp
and
rorl
ljmp
adc
xor
aam
test
mov
cmpb
xchg
jb
roll
jnp
and
add
test
cmp
out
add
push
daa
outsl
iret
sub
das
in
cltd
cli
push
lret
icebp
pop
dec
mov
mov
aad
jne
inc
pop
mov
ficompl
out
insl
fwait
pop
sub
lods
cmp
adc
bound
int
sti
sub
dec
xchg
push
outsb
jae
pop
sbb
out
push
scas
mov
fadds
pop
mov
dec
lahf
or
scas
inc
push
push
or
adc
dec
sub
inc
sbb
ds
add
fistl
push
mov
aaa
ds
bound
sbb
dec
ret
mov
adc
data16
pushf
mov
adc
scas
fwait
xchg
push
add
data16
sti
push
aam
jae
sub
push
mov
adc
inc
dec
shrb
xchg
lret
cmp
out
pop
call
fcmovne
loop
jbe
push
fcmovnb
ss
sub
cmpsl
cmpsl
xchg
cltd
scas
add
mov
imull
mov
inc
sbb
jb
mov
xor
sbb
and
cwtl
cmpsb
mov
dec
lock
in
and
sub
mov
cmp
sahf
pop
mov
xor
inc
es
lret
dec
inc
lea
sub
add
push
mov
repz
push
xchg
push
xchg
mov
push
jnp
push
inc
cltd
add
push
fmull
fsubrl
mov
sub
jmp
inc
fidivrl
push
bound
jl
sbb
test
cmp
xlat
mov
stc
outsb
sub
cmpsl
insb
xor
addr16
fldenv
inc
nop
pushf
mov
adc
fmul
mov
scas
jnp
ljmp
ret
dec
add
scas
daa
xchg
shl
ficoms
cmc
or
add
mov
push
div
test
jne
inc
mov
mov
stos
mov
jb
sbb
fisttps
fldt
mov
aaa
mov
pop
test
jp
sub
dec
out
pop
or
jg
sbb
jo
lock
dec
cltd
ss
or
pop
js
sub
enter
ds
push
out
jnp
xor
push
jecxz
insl
xchg
jl
hlt
sbbl
nop
test
cmpsl
testl
pop
xchg
mov
mov
into
into
in
add
andb
jno
add
test
dec
sub
test
push
pop
xchg
pushf
test
mov
jle
in
push
in
pop
pop
mov
lods
cwtl
cld
and
jmp
pop
iret
sub
hlt
push
xor
das
movsl
inc
jmp
fisttpll
outsb
data16
shlb
sbb
ljmp
sahf
or
add
int
cmp
cmpsl
jp
pusha
rclb
jne
push
inc
pop
xchg
push
xchg
or
lods
scas
dec
outsb
sub
mov
incb
add
arpl
std
cld
movsl
outsl
add
ret
aam
or
popf
mov
pushf
int3
sti
fisubl
arpl
xchg
insb
add
mov
push
int
out
popa
in
loopne
dec
push
xorl
xorb
sub
insb
out
cmc
roll
and
bound
lock
push
fld
ret
lock
sub
xchg
adc
adcl
pop
dec
lahf
repnz
xchg
dec
lods
cmp
in
aas
mov
aad
loop
cmc
stos
mov
and
jno
dec
sarb
cmp
mov
pop
fcoml
rorl
out
fs
pop
pop
repz
xchg
lods
pop
pop
mov
dec
adc
xor
xlat
mov
jmp
jl
dec
lea
lock
cwtl
cs
or
push
add
dec
mov
add
imul
jge
cmpsl
push
movsb
lcall
jo
inc
cmp
cltd
idiv
mov
push
xor
bound
je
mov
sub
adcl
xchg
push
out
repnz
iret
out
leave
insb
jnp
ljmp
push
jecxz
ficoml
int3
push
testb
or
test
ficomps
pop
xchg
outsb
out
sub
jg
push
fdivrp
ret
rcrb
imul
lea
sbb
adc
sbb
dec
pop
lcall
sbb
lods
fcmovb
mov
or
movsl
jecxz
pop
and
sbb
in
mov
dec
rcrb
dec
sahf
pop
mov
sbb
rorb
in
sbb
or
pop
push
rcrl
lcall
roll
cmp
mov
mov
sbb
mov
mov
daa
cltd
pop
rclb
pusha
ret
xchg
push
and
inc
nop
mov
or
in
sti
sbb
dec
pop
bound
mov
sahf
or
adc
xchg
popf
add
pushf
rcrl
cmp
sbb
pushl
aam
sub
sbb
sbb
mov
lods
jb
jo
mov
push
subl
mov
jmp
imul
lcall
dec
jns
ljmp
popf
iret
je
lock
cmp
push
dec
jb
pop
lret
ss
aaa
push
xchg
shll
add
clc
xor
push
mulb
popf
in
lea
popf
dec
cwtl
imul
repnz
rol
mov
loopne
add
test
aaa
add
mov
push
add
insb
lods
pop
jmp
loope
sarb
sbb
fadds
pusha
iret
inc
pop
insl
sbb
dec
sbb
hlt
add
cmpb
push
out
or
mov
sbb
lcall
mov
cmpsb
inc
ret
cmp
sbb
and
lds
add
sub
sbb
aad
inc
movsb
adc
aad
or
cmp
mov
fstp
shl
lock
dec
push
pusha
js
sub
adc
and
scas
mov
mov
and
into
xchg
divb
data16
add
int
cmp
push
pop
fs
cmpsb
rcrb
fadd
mov
aaa
in
rcll
sub
pop
lea
and
dec
xor
inc
js
test
inc
iret
inc
in
lea
ret
lods
sub
lods
sti
xor
fdivp
dec
sub
sub
repz
xor
mov
and
lock
ficoml
lds
fcmovu
adc
add
or
jle
movl
xchg
push
pusha
fisttpl
pop
std
push
daa
xchg
and
pop
push
mov
push
xchg
mov
cltd
jmp
adcl
jb
push
pop
js
mov
pop
adc
inc
addb
cmp
data16
inc
sbb
aaa
out
test
dec
add
cmpsb
cltd
pcmpgtb
xchg
mov
jnp
sub
fld
loope
adc
ds
inc
arpl
ja
mov
stos
xor
and
aas
add
lret
loope
jns
xor
stos
cmpb
jae
repz
dec
and
lea
jne
fisttps
loope
clc
mov
lret
push
dec
cli
fisubl
adc
or
ret
sbb
mov
shrl
add
pop
mov
cs
cli
xchg
nop
js
mov
dec
xor
add
ss
fimull
je
xor
cwtl
pop
out
mov
fcmovnu
add
dec
and
and
adc
lahf
inc
fldl
stos
arpl
ljmp
movsb
popa
sub
sbbb
aam
push
mov
cld
aas
fstpt
nop
cmp
loopne
push
cmpsl
stc
inc
insl
push
sbb
lret
xchg
sub
mov
sub
dec
popf
js
fisubrl
mov
fmulp
inc
cmp
mov
imul
xchg
xchg
sub
ljmp
cmp
in
push
push
insl
bound
or
fsub
adcb
push
sub
cmpsl
in
mov
les
das
popf
scas
fwait
lock
lea
mov
ljmp
out
in
outsb
loop
mov
push
jns
loopne
lcall
lods
fnstenv
scas
scas
ret
movsl
popa
add
pmaxsw
fwait
lock
stos
jo
dec
andb
das
xor
and
cmc
loop
mov
jo
xchg
pop
cmp
xorb
jo
add
adc
andl
push
jg
xor
out
push
test
mov
sbbl
repnz
sahf
push
bound
adc
xchg
push
test
push
xor
push
fistl
xchg
ret
into
mov
mov
in
fstp
addb
hlt
fbld
mov
or
bnd
pop
rcll
xchg
adc
pop
sti
jb
dec
ds
xchg
fnstsw
or
fwait
push
jmp
shr
scas
test
dec
in
xor
mov
push
dec
xlat
inc
into
ljmp
xor
inc
mov
inc
cmp
lret
dec
fmul
inc
sub
xor
mov
pop
cs
and
mov
fistl
jmp
push
call
xor
loopne
ret
sbb
sub
or
aam
loopne
sbb
cmp
push
cmp
or
shll
pop
mov
xchg
int
fsubl
sbb
pop
xchg
xor
leave
enter
popf
fs
mov
std
adc
xchg
mulb
cwtl
mov
in
out
pop
mov
enter
stc
les
lods
xchg
jo
rolb
pop
push
movl
pop
arpl
xchg
pop
xchg
cmp
pslld
pusha
sbb
in
roll
cmp
pop
push
gs
mov
cmp
out
inc
aam
add
mov
jbe
cltd
add
mov
loop
lahf
repnz
inc
pop
xchg
sti
or
lcall
pop
dec
push
mov
push
dec
outsb
pop
sbb
imul
inc
ja
lock
psubw
cmp
dec
les
movsb
mov
mov
sub
push
mov
push
hlt
loope
loope
pop
fdivr
les
jne
sbb
mov
mov
addb
xor
xchg
mov
jg
aaa
out
xor
popa
sbb
imul
loop
pop
repz
lock
scas
mov
cli
call
or
adc
adc
cmp
xor
int
mov
and
pop
push
xchg
inc
cmp
arpl
and
jbe
insb
ret
pop
xorl
inc
mov
xor
aas
xchg
xchg
mov
push
pusha
and
out
scas
movsl
push
add
stos
dec
sbb
pusha
sahf
push
sbb
fnstenv
stc
cltd
hlt
adc
ljmp
testb
pop
out
das
sub
push
mov
ds
int3
rcll
icebp
xchg
cmpsl
sub
scas
out
cmp
aad
add
mov
inc
imul
mov
cmpsb
clc
sbb
mov
out
xor
sbb
pop
cmp
pop
or
sub
nop
mov
push
in
xor
vmovdqu
dec
ds
hlt
push
inc
mov
outsb
add
aaa
sub
xor
mov
push
in
daa
retw
push
insb
divb
dec
das
das
add
clc
jno
lcall
xchg
xor
xchg
push
les
mov
mov
loopne
xchg
xor
xor
mov
sbbl
popf
mov
jnp
aam
in
jecxz
pop
loop
and
mov
pop
push
xlat
test
pop
shll
jo
repnz
cwtl
nop
jecxz
sbb
lock
leave
out
add
pop
cmc
test
xlat
add
xchg
test
push
sub
fsubr
movsb
or
dec
jle
sbb
je
jnp
lret
dec
and
mov
pop
mov
popa
test
push
dec
scas
inc
loopne
dec
icebp
xor
sub
fwait
shrl
dec
aas
jbe
jp
jnp
add
mov
enter
ret
ret
inc
outsb
enter
push
and
push
pop
inc
daa
enter
mov
add
pop
in
movsb
jo
shrb
jne
adc
int3
xor
fucomi
outsl
push
sub
repnz
popa
mov
outsb
out
ficoms
mov
mov
mov
jge
dec
inc
push
pop
stos
imul
shl
fwait
ljmp
mov
fldt
inc
stc
enter
fistl
and
loope
xorl
push
pop
cs
mov
pop
mov
loopne
and
inc
outsl
cmpsl
xchg
imulb
push
inc
ljmp
mov
lock
int
sti
lock
fiaddl
push
pusha
in
lcallw
or
dec
aas
ljmp
inc
pop
aas
hlt
stos
negl
push
dec
js
pop
mov
stc
imul
and
cli
xchg
das
jge
leave
loop
push
lret
lds
mov
inc
adc
jmp
mov
stos
push
mov
xchg
icebp
jmp
xor
mov
jge
push
loop
dec
int
outsb
jo
rcl
lcall
pop
js
shlb
adc
sti
push
mov
in
pusha
scas
push
mov
rorb
insl
decb
sub
sub
xchg
and
pop
sbb
stos
dec
in
jp
dec
scas
cltd
mov
jl
fcmovu
adc
pop
jnp
xchg
ljmp
lock
push
cli
add
jmp
and
stos
pop
pop
pop
lea
cmp
scas
adc
pop
inc
inc
add
mov
imul
aas
dec
pop
fpatan
fcompl
sbb
push
xchg
xlat
add
mov
push
mov
cmpsb
pushf
ljmp
hlt
rcl
addr16
ja
jnp
scas
fidivrl
mov
xlat
xchg
insb
in
xchg
sub
mov
xchg
scas
xchg
pusha
xchg
inc
mov
aam
daa
xchg
mov
hlt
sub
mov
dec
popf
lcall
stos
xor
jge
aad
clc
leave
cmpsl
shll
cld
lcall
push
scas
mov
jns
pop
add
mov
lret
adc
dec
or
xchg
sub
inc
push
sub
or
add
movsb
roll
dec
pop
ret
insl
stos
pop
xor
adc
ja
outsl
std
popf
std
out
sbb
leave
adc
outsb
push
sub
add
in
mov
xchg
mov
mov
ljmp
sbb
mov
negb
mov
icebp
repz
test
mov
adc
pusha
inc
daa
cltd
icebp
pushf
aam
xor
sar
shlb
int3
iret
jg
pop
divl
jecxz
inc
jno
pop
mov
pushf
dec
push
mov
add
cmp
mov
push
lds
iret
xchg
inc
jmp
data16
dec
nop
andl
ret
lahf
fwait
push
push
mov
scas
cmc
aaa
push
outsb
ja
fidivl
xchg
cld
dec
add
sbb
test
mov
push
std
sbb
aas
insl
xor
cld
sbb
les
jl
sub
dec
inc
mov
les
aaa
or
or
xchg
push
test
push
push
mov
je
scas
push
scas
or
stos
shr
push
pop
xor
jbe
fbld
ljmp
inc
scas
sub
cmp
fadds
add
lds
loop
rol
into
addr16
out
dec
icebp
popf
push
shl
push
pop
fsts
push
cmpsb
adc
xor
cli
out
inc
sub
sub
sub
insb
sbb
icebp
inc
push
cltd
stc
dec
push
adc
sub
xchg
adc
pop
inc
out
jbe
push
jnp,pn
sub
fnstenv
outsl
sbb
orl
pusha
outsb
idiv
lcall
sbbb
ja
cli
mov
add
lret
jo
sub
pushf
rorl
jle
fldenv
or
test
mov
xchg
xor
mov
jmp
ficomps
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
stos
pop
xchg
daa
sbb
adcl
addl
sbb
jmp
cmp
sub
and
es
mulb
pop
xchg
pop
cmp
addr16
shll
cmp
es
cmp
dec
inc
push
mov
xchg
sbb
sbb
mulb
pop
hlt
jne
sbb
inc
sbb
aas
es
setg
fbld
in
lea
dec
test
dec
out
mov
mov
lcall
xlat
lea
mov
lahf
mov
mull
pop
sarb
jmp
popf
adc
xor
loopne
jns
test
adc
fcmovb
jns
sub
inc
les
xchg
dec
mov
mull
in
lds
sahf
sti
xchg
icebp
mov
push
mov
movsl
pop
das
ja
int3
mov
pop
out
repz
inc
push
lret
inc
jb
sbb
std
mov
cmp
repnz
enter
ss
adc
xlat
xlat
mov
aaa
lcall
add
movsl
mov
sbb
nop
je
fs
gs
sti
lahf
pop
xchg
inc
ss
sub
imul
xchg
xchg
scas
lret
or
sub
rolb
ret
xor
mov
cltd
jl
js
lea
pop
in
sti
pop
push
sbb
pushw
add
loopne
in
js
in
cmp
call
or
add
test
push
test
xlat
cli
imul
pop
and
test
test
push
rorl
or
jg
and
loop
jg
sbb
lcall
aad
repnz
inc
shlb
fistpll
adc
ja
aad
test
ret
scas
lret
bound
fmuls
ljmp
sbb
lods
sub
cmp
xchg
inc
inc
xor
pop
faddl
xor
in
jecxz
jb
mov
mov
jecxz
das
adc
add
mov
aaa
aam
inc
enter
dec
jo
mov
sti
lea
xchg
clc
js
xor
mov
arpl
push
dec
stc
and
and
pop
pop
or
or
fwait
pop
in
inc
sbb
xchg
and
jno
ret
mov
sti
test
lds
lods
leave
push
not
jno
push
lret
arpl
fidivl
push
shl
negb
push
push
mov
cmpb
mov
or
xor
jmp
and
sbb
rorl
test
sub
movsl
mov
jo
cltd
inc
loopne
inc
jne
rcrb
shrl
add
add
bound
jae
jmp
outsl
and
xor
mov
lods
call
in
jo
inc
sub
inc
inc
jmp
mov
sub
pop
add
cmp
lcall
fs
xchg
or
mov
inc
mov
roll
or
xlat
rcrl
xor
push
mov
sbb
notb
ret
jo
test
scas
testl
dec
notl
popf
dec
clc
push
fldl
lods
mov
fnstcw
and
adc
inc
lret
daa
and
cld
xchg
dec
repz
mov
cmpl
dec
loopne
mov
sbb
std
icebp
rclb
movsl
stc
or
jo
mov
mov
bound
repz
lret
inc
cmpsb
mov
or
inc
push
mov
and
fcoml
push
jbe
mov
mov
insb
adc
and
sti
mov
repnz
test
lcall
jmp
push
push
mov
dec
out
xchg
nop
push
fs
pop
adc
div
pop
inc
lea
dec
lret
adc
xchg
jle
inc
ja
clc
add
iret
mov
xchg
pop
push
inc
dec
dec
bound
aaa
push
pop
leave
mov
lds
xor
mov
mov
jmp
lods
mov
add
fsubrl
xor
and
lods
xorb
stc
and
imul
or
mov
ss
ja
cwtl
xchg
cmpsb
push
xor
mov
dec
jge
and
pop
ror
pop
gs
mov
aam
out
sbb
jmp
pushf
pop
sub
xor
push
lret
pop
loopne
mov
mov
ret
fstps
data16
into
aam
inc
jecxz
imull
cmpsl
sub
add
mov
cmc
mov
scas
push
push
insl
pop
cmp
test
aam
lods
mov
xor
ss
insl
loope
sub
test
mov
loop
mov
out
rcr
lahf
mov
sbb
or
scas
mov
and
xchg
cmpsl
fsts
add
sbb
mov
enter
pop
nop
lahf
testb
popa
int3
or
or
addr16
pushf
pop
ds
jle
or
ror
mov
or
mov
inc
idiv
mov
pop
push
pop
jns
data16
lock
scas
das
jle
xchg
mov
data16
mov
mov
or
add
mov
mov
push
aaa
in
inc
jmp
ja
sbb
pushf
cmpsl
arpl
mov
les
mov
sbbl
or
mov
cmp
or
pop
aad
adc
out
stc
fisubs
jnp
pop
mov
adc
push
ret
jns
xchg
pop
mov
push
push
cmp
sahf
popa
lcall
js
xor
sub
inc
insb
int3
aad
push
or
fisubrs
jae
add
pop
out
xchg
ljmp
lea
stc
add
and
shl
iret
and
insl
aam
mov
xchg
xor
std
faddl
push
mov
rorb
lret
cli
push
pop
mov
xchg
sub
jl
aam
pusha
add
nop
popf
and
pop
scas
and
xchg
adc
inc
sub
sbb
pushf
rclb
enter
rcll
push
cs
aaa
enter
pop
jle
lods
cmpsb
sub
notl
adc
cli
fadd
lcall
shl
and
xchg
mov
mov
insl
add
jge
dec
arpl
xor
pop
mov
dec
xchg
aam
sbb
cmc
pop
enter
mov
sbb
test
mov
sahf
and
lret
out
adc
jmp
shll
jecxz
adc
add
mov
cmc
sub
xor
and
dec
daa
es
pop
hlt
add
aas
mov
ljmp
stos
cmp
cmpsb
sbb
push
mov
jmp
adc
and
inc
pop
push
mov
jle
leave
push
movsb
mov
inc
jl
rcrb
inc
mov
jp
inc
lcall
push
xchg
in
fistpll
in
ficoml
cmp
test
adc
sbb
into
lcall
mov
gs
pop
dec
mov
mov
cmp
das
xor
adc
out
insb
call
shll
sbb
test
pop
cs
cmpsb
sti
enter
fldt
vmovlpd
addb
popa
call
add
clc
push
push
xchg
pushf
ss
shlb
sub
cmp
std
mov
sbb
and
aaa
xchg
mov
cmpsb
inc
js
popf
mov
pusha
sub
mov
cmp
mov
lcall
dec
dec
sub
das
lods
test
pop
lahf
sub
test
movsl
lcall
xor
movb
sub
xchg
or
push
or
ss
repz
ja
xchg
imul
cmp
mov
das
pop
sbb
and
cmp
fdivs
stos
push
outsb
add
pop
pop
mov
push
add
adc
nop
inc
pushf
sarl
jecxz
push
outsb
sbb
sbbl
rorl
cmc
roll
mov
ja
xor
dec
outsb
mov
add
jno
imul
xchg
idivb
add
fwait
pushf
jae
push
cmp
mov
in
mov
imul
jmp
roll
sub
or
incl
lock
xor
cltd
je
mov
cmpsl
lods
pop
aam
push
lods
xor
out
pop
aas
add
scas
addb
and
mov
jae
inc
clc
push
leave
mov
or
adc
in
push
mov
cs
out
inc
jae
notl
loopne
loope
movl
pop
in
push
pop
jns
fisubrs
mov
ror
pop
stc
loopne
mov
pop
out
lods
sbb
dec
imul
out
adc
xorb
add
xor
inc
push
mov
insl
xor
or
mov
daa
sub
ret
mov
mov
xchg
shlb
jecxz
inc
aad
out
jmp
mov
loope
mov
into
and
xor
mov
push
xchg
jae
loope
out
mov
lock
cmp
js
movsb
mov
out
or
int
dec
xchg
dec
jo
imul
xor
in
aas
xor
rclb
inc
mov
push
pushf
cld
sbb
nop
mov
lcall
mov
icebp
int
pop
cmpsb
out
xchg
test
xchg
jle
daa
mov
jp
shl
jmp
inc
mov
dec
pop
dec
adc
loopne
mov
ds
cwtl
mov
fnsave
js
mov
subb
xor
dec
mov
sub
mov
insb
push
jge
jl
test
or
jb
jmp
stos
shrl
xchg
cmp
pop
mov
loope
jnp
adc
inc
xor
push
fnstsw
jle
test
stos
jg
cltd
test
out
loopne
sbbb
pop
jb
xchg
js
inc
xorl
insb
jle
add
mov
test
test
mov
aam
outsb
mov
clc
inc
and
iret
mov
addr16
notb
scas
repz
xchg
or
push
mov
xchg
stos
jo
push
add
mov
cltd
popf
push
pop
loop
out
aaa
cmp
pop
cs
cltd
mov
rol
orb
jg
pop
push
test
push
sub
sub
push
adc
mov
jb
mov
xchg
cmc
mov
lock
mov
adc
jb
inc
mov
movsl
add
cmc
cmpsb
mov
shrl
imul
fsts
sbb
call
push
inc
mov
insl
lahf
addb
scas
and
jp
clc
inc
out
add
lret
xchg
xchg
outsl
or
dec
fdivrs
insb
jns
mov
mov
pop
sbb
sbb
out
das
loope
not
add
cmc
lods
not
push
dec
jns
ljmp
rcrl
xchg
push
ss
inc
enter
pop
push
test
fcmovnbe
in
sti
add
jnp
xor
xchg
jb
scas
push
movsb
ficompl
les
daa
es
das
mov
push
xchg
out
sbbb
xor
and
sbb
out
clc
adc
iret
daa
mov
add
cmp
int
cmp
loope
lret
inc
pop
lcall
enter
fwait
and
cmp
sub
test
push
sbb
ja
adc
xchg
push
aam
sub
bound
pop
add
test
cmc
stos
loop
xchg
inc
push
xchg
jge
divl
sbb
inc
mov
mov
xor
aam
inc
sbb
int3
faddl
cltd
or
xor
fcmovnb
sbb
lret
cmp
in
pop
lahf
mov
adc
in
mov
or
std
aas
je
aam
insl
cmpsb
lea
push
pushf
sbb
lret
insb
xor
fnstenv
cmp
xchg
or
xchg
mov
jae
push
shlb
into
cmp
sub
cmp
jg
xor
push
jg
int
js
push
cmp
int3
jb
mov
cmp
pop
imul
pop
mov
ret
cmp
test
cmp
faddl
arpl
mov
xchg
testb
mov
in
shr
jmp
sbb
aam
dec
pop
push
repnz
mov
fadd
xor
xor
pop
ja
pop
popf
xchg
cmpsl
insl
lret
popf
sbb
testb
in
jno
xor
jb
bound
adcl
xchg
mov
push
xchg
jmp
adc
dec
test
mov
cwtl
adc
sbb
jb
es
mov
xchg
addb
mov
data16
cmp
sub
pusha
push
enter
adc
movsl
xchg
lock
mov
insl
add
daa
decb
insl
pop
pop
aaa
or
emms
sar
cltd
and
xlat
mov
adc
rorl
mov
loope
ret
pop
and
es
mov
pushf
mov
and
mov
cmp
mov
insb
in
shr
mov
mov
and
dec
cmp
sub
xor
inc
les
adc
xor
les
pushf
mov
pop
test
mov
inc
stos
mov
push
das
loopne
es
arpl
xor
inc
movsl
or
jg
lods
hlt
push
jge
push
inc
sbb
movsl
sbb
add
addb
mov
sbb
in
addr16
mov
js
outsb
mov
inc
add
mov
mov
pushf
data16
enter
and
add
or
fnsave
lret
sbb
imul
negl
and
dec
mov
les
add
mov
mov
dec
jae
dec
add
ret
mov
sub
lds
dec
testb
iret
mov
outsb
pop
xchg
jmp
sub
push
jns
or
xor
ror
cmc
mov
jns
jg
fsubr
dec
jnp
cs
mov
mov
mov
push
or
and
jns
data16
int3
sub
ljmp
int3
lods
fs
jp
mov
sub
jno
int3
aam
mov
sub
mov
jg
xchg
push
dec
mov
push
stos
cmpsl
adc
lret
je
add
das
hlt
fiadds
enter
push
cmpsl
imul
adc
in
or
adc
or
loop
xchg
dec
and
sub
pop
adc
es
enter
icebp
sub
adc
xorb
out
hlt
sub
mov
shrl
push
sub
xor
pop
out
fwait
and
stc
and
rcrl
jmp
jnp
cmpsb
xchg
xor
mov
inc
mov
jmp
loopne
jecxz
cmp
and
mov
xchg
loop
xchg
jge
test
cmp
lock
and
popf
sbb
jecxz
mov
push
cmp
lock
es
pop
sbbb
movsb
add
rcrl
fbld
aad
rcll
inc
sbb
pop
xchg
inc
loop
sub
mov
fwait
daa
imul
mov
mov
xchg
ljmp
test
shrl
stos
test
and
mov
fsubrl
pushf
cmp
sbb
cmpsb
call
repz
inc
cli
or
and
cmp
fs
mov
add
push
mov
adc
ljmp
loopne
pop
mov
add
ror
test
mov
jl
and
cmp
repnz
fcompl
inc
lods
pop
lcall
xchg
orb
clc
loope
clc
das
sub
nop
stc
movsl
pop
sub
sbb
cli
pusha
sbb
lock
xchg
xor
and
jg
push
dec
xor
imul
pop
mov
xlat
inc
lret
cmp
push
adc
jl
out
xchg
jmp
push
jecxz
std
movsl
or
sub
out
iret
aas
or
mov
xchg
mov
loope
push
xor
aas
aad
fwait
inc
jge
andb
leave
in
pushf
imul
inc
adc
lds
iret
leave
xor
adc
dec
sahf
cs
stos
pusha
pop
mov
lret
aaa
mov
arpl
xchg
div
js
subl
jne
leave
mov
pop
or
das
sbb
loope
andl
mov
movsl
cmpsb
xchg
pop
sahf
lods
mov
xor
dec
xchg
pop
mov
test
cmp
int3
movsl
pop
fiaddl
cmc
inc
rcll
out
das
lea
dec
and
lret
repnz
or
jecxz
or
inc
aam
adcl
das
stc
into
in
mov
lock
call
xor
xor
dec
sbb
jb
in
ret
pop
push
mov
or
inc
pop
fnstenv
or
cmc
xor
inc
in
in
cmpsl
mov
jle
clc
xchg
xor
repz
out
sarb
movsb
repnz
dec
bound
sbb
fadds
fimull
sbb
sub
and
adc
imul
shl
cmpl
mulb
sub
mov
push
add
sub
repz
insb
mov
mov
in
sub
add
cmp
cli
out
shll
dec
arpl
pop
xchg
mov
sub
js
sub
ljmp
jmp
clc
negl
mul
sbb
adc
xchg
dec
pop
jecxz
jb
sbb
sbb
adc
pop
daa
and
in
mov
mov
and
pop
loopne
add
dec
pop
or
test
inc
or
outsl
fimull
jbe
rcrl
sub
loop
xchg
pusha
mov
mov
aam
dec
dec
xchg
in
or
scas
iret
adc
call
xchg
cs
out
mov
xor
lret
or
or
jo
ror
mov
cmpsl
fbstp
inc
lret
lods
dec
stos
outsb
xor
and
test
dec
dec
xchg
mov
xor
adc
mov
les
lods
les
and
rclb
dec
inc
popf
stos
fisttpll
fisttps
lret
push
call
nop
jb
xchg
in
adcb
cmp
mov
repz
add
mov
push
mov
or
je
jo
shr
pcmpeqd
pop
call
mov
and
inc
loopne
xor
nop
pop
les
jo
popf
mov
add
cmp
and
loopne
lret
push
push
fdivr
xchg
and
lods
sbb
shl
dec
stos
dec
mov
lods
insb
mov
dec
daa
test
and
mov
in
mov
cmpsb
in
add
push
mov
xor
dec
je
popf
dec
aam
add
cli
mov
sub
jb
adc
out
push
fistps
arpl
jo
mov
enter
fsubrs
out
in
sub
outsb
clc
icebp
mov
mov
adc
cmp
aad
inc
clc
lret
push
add
loopne
sub
xchg
outsb
cmp
cmpsl
sbb
add
outsb
inc
ss
fdivrs
pop
sbb
test
fs
xor
mov
push
aam
push
xchg
mov
inc
in
xor
jo
mov
clc
lods
mov
add
xchg
mov
jle
shrl
inc
ds
xor
fscale
mov
add
sbb
cmp
les
mov
pop
ljmp
xchg
int3
flds
cs
out
mov
adc
das
push
frstor
mov
push
pop
add
insl
mov
jmp
in
popa
adc
pushf
jnp
int3
push
insl
lods
pop
pusha
xor
add
mov
add
fadds
dec
lock
fisubrs
out
and
pop
adc
push
jge
movsb
and
xor
mov
pop
dec
out
cmp
cltd
push
or
inc
inc
daa
out
cmp
dec
leave
push
add
cmp
shrl
mov
std
cmpsb
mov
andb
scas
in
inc
popf
inc
stc
dec
and
shll
shlb
imul
mov
aaa
pop
fists
push
mov
xchg
mov
xchg
pop
dec
in
aam
out
jg
in
xlat
push
adc
test
cmp
cmp
packsswb
clc
insl
jp
roll
sub
sbb
popf
je
icebp
cmp
loope
mov
cltd
xchg
cmp
insb
push
push
adc
ss
xor
xor
ss
outsl
imull
jo
sub
mov
rorl
inc
cmpsb
pop
sbb
or
test
jmp
fistps
bound
mov
andb
cli
xchg
aas
sbb
ljmp
add
clc
call
shrb
cli
arpl
aas
aad
cmp
add
xchg
push
popa
push
ds
inc
mov
out
rcl
push
pop
out
sahf
and
jle
sub
shrb
mull
into
lods
call
add
push
into
ffree
adc
xor
xchg
imul
mov
mov
sti
leave
xchg
les
jl
clc
sbb
mov
lret
xchg
xchg
andb
cmp
jbe
xor
and
into
mov
imul
pop
push
mov
test
pushf
and
push
mov
clc
mov
hlt
and
scas
test
outsb
and
xor
cs
daa
dec
and
mov
test
shlb
or
jbe
adc
mov
jg
xchg
aas
dec
xchg
callw
mov
xor
ficoms
in
pop
push
mov
stos
test
sub
cmp
dec
cs
inc
jbe
add
jno
jb
xor
xor
je
gs
push
mov
into
fstpt
cli
pop
lahf
daa
fs
xor
push
lock
mov
mov
out
xor
xor
sahf
in
mov
xchg
pop
mov
xchg
sbb
mov
cmp
push
mov
sub
push
jne
push
cltd
shlb
xchg
or
int3
popf
lds
lahf
cmp
daa
ss
push
cmp
jo
sub
or
out
sahf
mov
mov
pop
and
xchg
mov
test
lahf
add
push
jg
mov
add
cmp
xchg
and
and
outsl
rcrl
mov
xlat
jbe
add
lods
hlt
outsl
or
repz
in
jl
mov
idivb
sub
dec
jnp
insl
mov
in
jno
popf
jmp
decl
mov
push
ja
jmp
mov
mov
enter
add
xchg
mov
outsl
lret
xor
imul
inc
mov
enter
dec
pushf
lret
sahf
jl
movsl
cmp
and
cld
mov
pop
cmp
imul
jmp
mov
bound
sbb
inc
fldenv
mov
or
leave
mov
sbb
shl
mulb
pop
cwtl
xor
lods
cmpsb
mov
push
sbb
outsl
lret
push
js
sbb
test
inc
nop
das
sahf
and
mov
in
lods
adc
sbb
int3
stos
jl
movsb
fwait
and
mov
cmc
xor
stos
out
imulb
jbe
mov
jmp
mov
mov
daa
xor
outsb
sbb
in
inc
inc
lock
lea
inc
shlb
stc
int
ds
mov
bound
and
jno
call
addr16
inc
mov
cmpsl
mov
cld
sbb
xchg
jp
mov
adc
mov
mov
fbld
and
mov
xor
or
iret
cmovle
aas
out
call
add
push
sbb
dec
sarl
inc
jb
lods
xchg
dec
xchg
adc
lcall
in
repz
push
inc
xchg
cmpl
fdivs
pop
lods
ret
xchg
mov
movl
ljmp
adc
dec
fcoml
ds
dec
jmp
jbe
xlat
add
cmp
call
cmp
mov
shll
in
add
sbb
mov
and
xlat
loop
rcll
insb
inc
pop
lea
jmp
cmp
fildl
pop
into
mov
test
and
or
xor
stc
xchg
mov
push
push
jb
sbb
inc
fs
sub
cmp
popf
jnp
imul
mov
int
ds
in
cltd
bound
xchg
icebp
or
test
and
sbb
adc
cltd
xchg
cmp
test
push
jmp
adc
mov
lahf
inc
jbe
push
cmpl
cmp
roll
mov
pop
mov
ss
or
cwtl
iret
adc
ljmp
pop
outsl
imul
call
loope
iret
add
xchg
pusha
sbb
jl
mov
call
fs
outsb
pop
sbb
push
data16
mov
jg
fwait
in
loope
mov
idiv
repz
cmp
jb
pop
adc
test
or
or
push
sub
push
cmp
xor
mov
mov
add
scas
or
xchg
jb
sbb
sub
jl
xor
add
sbb
mov
mov
loop
into
cmp
mov
mov
lea
jae
jecxz
push
mov
data16
loop
in
cltd
cld
daa
insl
xchg
jp
and
cmpsl
rcrb
add
push
pop
imul
inc
std
je
mov
fld
xchg
fnstenv
fldl
mov
jge
xor
pop
stc
enter
xor
pop
fcompl
outsl
fdivs
ds
jno
or
pushf
adc
sbb
enter
test
xchg
and
mov
xchg
cmp
int
adc
sub
pop
jl
adc
xchg
mov
mov
push
je
mov
std
cmp
fdivs
lods
fldcw
arpl
cmp
sub
inc
pop
ja
adc
pop
lahf
ljmp
and
movsl
loop
iret
adc
mov
mov
mov
inc
int3
cltd
dec
stc
mov
push
imul
aad
movsl
dec
mov
sub
es
dec
outsl
add
ret
rclb
adc
cwtl
fildll
and
rolb
sbb
icebp
and
xchg
popf
lods
inc
ret
cmp
sbb
ljmp
pop
movsl
out
mov
adc
push
jae
push
test
pop
mov
jne
mov
and
jl
popf
inc
jle
in
xchg
in
int
push
adc
jmp
sarb
jo
sub
dec
xor
push
sbb
push
pop
pop
loope
mov
mov
mov
xchg
cwtl
cmpb
enter
dec
sbb
lret
mov
mov
add
loope
out
ds
cmc
in
and
les
mulb
push
adc
jns
inc
jmp
mov
ds
fisubrl
jl
cmp
sti
daa
fisubl
int3
cs
jmp
out
repnz
mov
dec
outsl
sbb
aas
movsb
add
loopne
cmp
cli
xchg
xor
out
push
xor
jbe
push
mov
lea
hlt
stos
dec
mov
int3
mov
sub
inc
push
fsubrp
lods
aas
inc
inc
cmp
sub
sub
mov
lret
jmp
int
and
dec
mov
pop
test
cli
jae
pop
lcall
mov
fldt
je
jmp
stc
jmp
jno
movsb
lods
dec
outsl
in
fucomi
aaa
inc
je
push
adc
xlat
sahf
fstpl
adc
xor
inc
cmp
jp
cli
sub
jb
dec
mov
push
test
jno
mov
lahf
lret
xchg
sbb
call
dec
out
push
cmp
sub
xchg
loopne
or
imulb
scas
jmp
cmc
fidivrl
sbb
arpl
gs
lahf
lods
js
xchg
lahf
in
cwtl
sub
mov
je
clc
inc
push
mov
push
lods
pop
nop
movsl
mov
clc
movsb
jge
push
and
add
enter
sbb
dec
jecxz
jmp
mov
out
and
ja
je
lea
adc
pop
cs
and
add
mov
into
mov
jge
mov
xor
xchg
call
ja
fildl
fs
jo
cwtl
jb
mov
gs
daa
data16
data16
cwtl
cmp
imul
or
inc
hlt
dec
lds
dec
xor
xorl
sub
jmp
cmpsl
sarb
or
pop
lcall
mov
lret
cmp
testl
sbb
clc
sbb
inc
adc
cmp
stos
loope
or
sbb
or
and
jno
xchg
and
fnsave
sarb
cld
shr
inc
fbstp
gs
leave
ss
mov
mov
push
push
faddp
add
fisubrs
xchg
nop
push
cmpsl
add
and
lea
rcrb
cli
mov
testb
jae
movsl
lea
pop
xchg
out
lret
andl
push
lock
sub
sarb
ds
pusha
out
jb
sahf
popf
xor
lret
std
test
les
cli
int
add
add
movsl
out
in
ret
or
std
subb
shrl
cmp
test
sub
add
ja
insb
xor
mov
outsb
add
sbb
cmp
mov
mov
push
mov
lods
je
cmp
cmp
jmp
sahf
repz
jp
mov
push
sarb
xor
inc
out
int
adc
jns
int
add
push
ss
outsl
sub
dec
mov
dec
pop
faddl
movsl
lret
or
or
test
jmp
xchg
xchg
xor
jg
push
aad
fsub
xor
popf
hlt
lods
mov
pop
push
dec
inc
sub
ja
scas
cmp
stc
add
das
push
mov
jle
adc
test
sub
int
aas
jg
std
pop
adcl
mov
les
les
add
xor
jo
stc
push
loop
ss
cmp
std
inc
cmp
into
pop
nop
xchg
sub
and
mov
mov
je
shlb
xchg
adc
in
mov
pop
jmp
pusha
cmp
arpl
lock
das
test
sbb
xor
pop
lahf
mov
loop
add
add
shl
xorb
lods
xor
je
enter
and
mov
shrl
pop
cmp
mov
clc
test
int3
xchg
cmpsl
add
mov
dec
xchg
mov
frstor
mov
jne
sbb
sbb
pop
mov
pop
fistps
sub
stos
les
mov
sbb
xor
dec
sahf
push
aas
xchg
test
je
lds
jecxz
sbb
testb
sub
ret
adc
mov
pop
popf
lahf
push
push
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
rcll
stc
addb
lods
int
pop
inc
aam
mov
xchg
scas
push
repnz
out
sub
aam
jle
or
enter
jle
adc
cmp
push
cmp
repnz
and
push
sub
mov
data16
scas
scas
mov
xor
sbb
out
inc
ret
adc
or
push
or
pusha
aad
test
jae
les
jmp
mov
lock
aaa
pop
dec
xchg
xchg
ret
cmpsl
aaa
mov
cmp
rcrb
push
sub
adc
loope
mov
cwtl
push
sbb
stc
mov
aam
inc
jae
outsl
dec
adc
mov
sub
pop
pushf
pushf
inc
icebp
dec
sbb
test
mov
lahf
or
and
in
mov
cltd
pop
leave
push
in
mov
or
ljmp
mov
insl
mov
cs
ja
leave
and
or
sarb
xor
and
mov
and
movsl
mov
dec
outsb
mov
dec
adc
push
stos
js
and
push
fstl
pop
les
mov
daa
sub
jno
daa
stos
or
out
adc
out
sbb
and
xor
push
lahf
popf
stos
pop
push
ja
ret
push
jo
loopne
jb
in
sub
pop
imul
mov
mov
loopne
gs
mov
sub
lcall
inc
xor
jns
cmp
loopne
pop
enter
adc
je
outsl
inc
nop
insl
test
mov
sti
das
andl
in
popa
push
enter
dec
jbe
or
int
jp
push
jecxz
pop
data16
dec
add
mov
jmp
rcll
pop
adc
xor
sbb
lcall
and
jl
cmpsb
lea
movsl
outsl
neg
add
idiv
leave
pop
out
clc
scas
add
insl
aas
popa
scas
adc
jae
jge
inc
in
test
cmp
cmp
jle
push
outsl
add
rolb
mov
rorl
inc
test
popa
pop
pop
das
cmp
outsl
sub
andl
inc
gs
push
xchg
mov
loopne
imul
sbb
lret
jle
mov
popf
xchg
xchg
adc
test
lods
xchg
ds
out
in
inc
and
push
popf
cli
or
ss
cmpsb
adc
test
sbb
cli
mov
xor
aaa
test
push
xchg
pop
fmull
pusha
fdivl
pop
out
je
popa
xchg
mov
outsb
add
jp
xchg
adc
imul
inc
loop
call
aas
and
lea
xor
mov
push
cmp
cmpsb
inc
mov
andl
jb
cmc
push
jle
int3
nop
roll
ret
test
push
xchg
xchg
mov
clc
or
outsl
gs
or
nop
movsl
mov
data16
and
pushf
jnp
fsubrs
sti
lret
pop
mov
cmp
adc
adc
jmp
je
cmp
push
cmpsb
sbbl
jne
incb
imul
mov
mov
and
adc
outsl
adc
cltd
push
inc
repz
xchg
in
fisubs
arpl
cltd
das
mov
cmp
fildll
and
or
mov
xchg
lock
jnp
daa
dec
cmp
lret
js
pop
or
inc
jmp
jle
fisubrl
push
cld
inc
mov
decb
das
push
not
mov
or
sub
sub
aad
pop
xor
in
mov
cmp
and
or
shrb
adc
sub
mov
cmp
cli
push
inc
or
mov
pop
or
outsl
push
jo
imul
jno
cli
movsl
jle
mov
push
insb
mov
pop
jp
enter
mov
mov
loop
jbe
cmp
cwtl
mov
jg
insb
mov
jp
sbb
and
test
jae
in
jp
inc
or
fistl
push
mov
jl
lcall
adc
insb
cltd
dec
insb
orl
sbb
add
mov
inc
pop
push
cwtl
mov
imulb
push
testl
ret
mov
xlat
push
scas
mov
cltd
xchg
shl
add
sbb
das
pop
outsl
cli
aas
insl
adc
stc
xor
jmp
pop
cmp
repz
xchg
lahf
aam
xor
push
addr16
mov
or
fdivs
xchg
not
ljmp
push
adc
pop
inc
inc
mov
aas
adc
test
mov
jecxz
outsb
sub
inc
sub
fdivrl
mov
sub
xchg
xlat
adc
lds
mov
mov
push
add
mov
insb
inc
jp
pop
out
das
jge
xorb
std
imul
cmc
in
add
pop
inc
push
popf
xchg
pop
mov
je
push
fdivr
pop
test
cmp
xchg
adc
aaa
hlt
ss
or
jl
out
cmp
cmc
sub
adc
sbb
stc
in
lret
fcmovnbe
je
push
cmpsl
sub
pop
sub
daa
push
push
cmp
mov
inc
flds
shlb
sbb
push
mov
sbb
pop
mov
push
fmuls
mov
push
ror
ret
pop
or
push
repnz
ljmp
cmp
sahf
pop
fwait
test
xchg
ja
cmpsb
jg
fdivr
inc
pop
mov
inc
arpl
lret
dec
sbb
imul
jbe
das
sbb
add
daa
push
mov
xchg
sarl
pop
bound
sub
shll
xchg
push
mov
adc
mov
shrl
or
dec
xchg
into
pop
adc
mov
mov
popa
aam
imul
maskmovq
testl
sbb
test
leave
xor
outsb
fcmovbe
mov
stos
in
in
add
shll
orl
jae
int
inc
sub
inc
xchg
mov
and
jae
mov
cmpsb
loopne
cwtl
imul
cs
ss
fcoml
jp
icebp
insb
lahf
xor
leave
es
fcompl
jno
mov
mov
outsl
mov
push
dec
pop
or
push
aam
scas
push
repnz
or
es
ja
pop
mov
dec
xchg
fldcw
clc
aad
dec
jae
mov
push
cld
rcrl
mov
lcall
loopne
sub
jb
xchg
lahf
and
sbb
or
or
aaa
ret
adc
loope
cmpsb
jle
stos
cs
aad
cmp
sbb
adc
mov
loope
cmp
push
inc
stos
sub
adc
stos
outsl
cwtl
nop
sarl
pop
push
stos
xor
xlat
adc
les
sahf
sbb
mov
enter
js
add
pop
sbb
nop
jecxz
mov
fwait
movsb
xor
insl
xchg
inc
adc
sahf
and
outsb
ret
pushf
adc
jb
stos
cmp
jge
inc
lock
lea
mov
sti
int3
sub
fs
fldz
fists
movsb
in
mov
jae
test
pop
lret
int
inc
mov
outsb
hlt
test
xchg
test
jbe
aaa
shlb
cmp
cmp
push
les
adc
push
adc
arpl
arpl
add
jo
and
divl
rcll
movsl
dec
ret
xor
push
mov
nop
clc
pop
test
pop
sbb
mov
je
mov
mov
mov
leave
xor
inc
andb
mov
mov
ret
fcomp
ret
stos
jg
cmp
fcomp
sbb
push
daa
jns
sub
push
and
mov
ja
mov
loope
testl
dec
bound
fisubrs
dec
dec
popf
lahf
mov
cli
and
pop
xchg
jb
xchg
inc
lahf
inc
jnp
mov
in
sbb
jl
cli
repz
add
or
in
scas
inc
out
mov
jp
enter
jmp
shll
mov
pop
dec
ja
sbb
or
inc
add
inc
dec
sub
or
jmp
in
stos
push
mov
or
or
bound
stc
xorb
lock
add
test
jns
icebp
pop
in
inc
into
jae
dec
mov
stos
jnp
lods
push
cmp
sub
sbb
mov
lret
dec
mov
dec
mov
push
xchg
add
aam
in
out
pop
dec
rcrb
mov
not
adc
mov
xor
mov
xchg
jecxz
cmpb
jg
push
movsb
sub
inc
inc
push
je
sub
mov
mov
add
jl
in
xor
cli
sub
or
sub
pusha
jmp
rolb
jne
pop
das
iret
sarl
test
outsl
push
insb
iret
fldcw
adc
int3
xchg
mov
or
mov
dec
push
and
lcall
inc
or
icebp
fdivs
jle
inc
sbb
adc
dec
dec
out
jno
addr16
dec
imul
cld
and
loopne
xchg
pop
iret
rorl
push
dec
insb
dec
out
int3
das
jnp
ja
ja
sub
sub
fwait
das
inc
popl
lods
out
jg
cmpsb
cs
es
mov
jnp
dec
xor
and
pop
lret
out
testb
add
mov
xchg
ret
int3
cmp
aaa
int3
adc
xchg
test
insb
addr16
ja
repz
fxch
loop
add
movb
cmpsl
xor
jg
cwtl
ds
clc
lods
adc
stos
fdivrl
vcvtpd2dq
das
test
dec
pusha
idivl
inc
test
call
sub
adc
cmpsl
mov
repz
xchg
jne
sbb
mov
sub
cmpsb
jecxz
mov
cmc
xchg
out
fildl
es
inc
sub
dec
out
mov
sbb
mov
pop
push
ret
xchg
push
lea
punpckhwd
movsb
pop
sub
xor
xchg
aaa
xor
pusha
lahf
shll
xor
jae
in
push
popa
test
push
lods
xor
inc
dec
sarl
imul
adc
cmp
out
enter
in
and
mov
adc
out
jecxz
fs
lret
fldcw
leave
cltd
jnp
xchg
dec
jb
sbb
jle
imul
fiaddl
xchg
test
xchg
pop
iret
in
repz
icebp
outsb
iret
jae
dec
gs
shl
movsl
jbe
pusha
pushf
js
ds
inc
loope
xchg
or
orl
dec
movsb
xchg
xchg
sub
ret
jle
cmp
loopne
push
imul
xchg
pop
dec
cmp
cmpxchg
push
sub
sub
lea
gs
pop
add
add
lock
daa
dec
stc
rcrl
xchg
insb
jmp
rclb
or
mov
mov
cld
mov
mov
mov
mov
xor
shr
push
testl
shlb
jp
push
fidivl
mov
or
jb
scas
call
inc
cmpsl
data16
jg
push
jb
sub
insb
in
mov
sub
int3
push
sub
and
stc
mov
outsb
cmp
mov
mov
mov
pushf
aam
in
div
mov
arpl
or
and
in
inc
insl
imul
vmovsldup
jmp
xlat
and
out
push
pop
stos
xchg
inc
es
pop
cmp
sbb
xchg
jo
leave
test
leave
pop
test
jp
add
repnz
ss
cmp
out
mov
in
xor
leave
push
icebp
testb
ljmp
mov
fadds
lods
jl
das
imul
loopne
loopne
sub
fimuls
outsl
or
sub
in
inc
out
hlt
sbb
cmp
in
cmpsl
push
hlt
pop
addr16
fimull
and
enter
jb
add
adc
in
fdivl
daa
xor
clc
xchg
mov
mov
adc
jl
or
push
dec
daa
cltd
shll
test
add
into
sbbl
sub
push
cmc
push
jg
push
xchg
pop
es
sub
stos
adc
and
add
adc
scas
fcoms
shlb
jmp
jno
test
mov
xchg
not
nop
pop
xchg
inc
mov
xor
mov
shll
cmp
cwtl
out
inc
mov
into
jl
fwait
ljmp
insb
sbb
sbb
lcall
mov
lret
fmull
mov
les
dec
leave
in
dec
sub
pushf
stc
divl
pop
dec
mov
mov
jne
inc
in
idiv
mov
mov
pop
in
xchg
sub
xchg
mov
pop
inc
jae
xadd
gs
fs
ja
mov
lcall
fs
ljmp
outsb
and
repz
lahf
jb
inc
dec
inc
sub
xor
xchg
sbb
and
dec
stos
aad
adc
je
int
jl
jne
sbb
in
ljmp
int
mov
icebp
push
mov
cmpl
mov
in
add
xlat
mov
push
mov
ljmp
sbb
xor
loope
fiaddl
push
in
mov
bound
pop
out
js
and
pop
ja
inc
out
inc
adc
hlt
adc
fs
ja
mov
xchg
lret
imul
scas
lahf
test
or
ss
fldenv
inc
xchg
mov
mov
xchg
in
loopne
jecxz
out
xchg
negb
xor
sti
mov
xor
leave
push
stos
push
lods
popf
arpl
mov
into
fdiv
fdivr
ror
lds
cmp
and
pop
shlb
cs
dec
divl
jge
mov
insb
ss
cmc
mov
repnz
out
aaa
push
leave
nop
inc
mov
lods
mov
cmpsb
dec
adc
mov
mov
pop
test
decb
dec
mov
into
adc
aad
adc
xlat
mov
lcall
jl
sbb
out
or
shlb
arpl
jmp
push
jg
or
sbb
orb
mov
sub
and
dec
jp
add
inc
aad
imul
out
shrb
insb
fs
arpl
scas
dec
lds
dec
sub
and
ret
push
dec
in
push
jecxz
insb
movb
fisttps
xchg
adc
xor
mov
pop
in
jns
mov
movsb
dec
push
pop
int3
push
xorb
fnstcw
pop
roll
stc
mov
sti
out
dec
push
shr
mov
sbbl
mov
cmp
mov
sub
ds
sbb
fnstcw
fwait
push
cmp
aam
jns
ja
movsl
mov
push
push
adc
or
in
scas
pop
or
in
add
call
sar
inc
dec
fwait
add
and
xchg
jne
inc
pop
fdivl
add
mov
pop
cltd
push
cs
stc
bound
jno
faddl
jbe
or
mov
sahf
daa
das
and
jo
pop
sbb
mov
and
push
sahf
popf
aam
test
mov
movsb
dec
cmp
fsts
out
adc
mov
cs
ret
xchg
mov
dec
push
or
mov
sub
xor
pop
jo
pop
iret
or
nop
leave
add
enter
mov
sub
int
aad
xor
mov
xchg
and
aaa
call
ret
shlb
sbb
xor
mov
sub
scas
xchg
add
sbb
mov
pop
pop
sbb
pop
int
lea
xchg
test
stos
push
jae
mov
cs
xlat
mov
out
jl
lcall
mov
and
push
add
lods
and
jg
pop
test
dec
or
and
lahf
dec
xor
mov
cld
js
add
lahf
cmp
adc
iret
mov
fisubs
or
push
jecxz
icebp
sbbb
ret
loope
and
push
aas
enter
sub
mov
mov
mov
jge
sub
or
xlat
loop
mov
mov
jb
jp
std
xchg
stc
mov
mov
xlat
dec
adc
ret
pop
mov
enter
cltd
outsl
sub
lods
jecxz
xor
push
adc
mov
push
mov
test
fsubs
stos
xor
mov
pop
ficompl
test
add
dec
cmpsb
mov
hlt
test
or
sarl
pop
jp
icebp
ja
frstpm(287
mov
push
or
clc
lcall
insl
cld
mov
xchg
mov
adc
pop
add
xlat
push
pop
xchg
mov
cmp
out
xor
pop
xor
dec
je
pop
mov
add
sub
ret
mov
pop
mov
sbbl
mov
xchg
mov
and
add
dec
jbe
push
or
lcall
aas
adc
jmp
push
enter
sbb
cmp
sbb
xchg
xor
out
sub
ficomps
cmp
lods
adc
das
aas
dec
push
jmp
das
adc
fwait
lret
popa
pop
mov
sub
mov
mulb
out
adc
cmp
pop
nop
popf
scas
jo
ret
add
loop
dec
js
dec
subl
jg
mov
fcom
dec
lret
cmp
mov
shlb
in
cwtl
sbb
sub
and
das
repz
les
sub
mov
push
shlb
pop
adcb
lods
xchg
int3
lret
inc
jnp
inc
lcall
rcll
lcall
test
mov
cli
iret
inc
clc
fdiv
cmc
fcoml
jb
adc
mov
ror
pop
scas
sbb
loopne
add
enter
sub
adc
and
jnp
sub
xchg
dec
adc
popa
pusha
js
jns
fadds
xor
lret
xor
lret
sbb
jmp
jo
mov
movsl
jmp
adc
cmc
aaa
mov
lods
movsb
test
popa
out
movsl
sbb
outsl
jp
or
pop
pop
out
mov
js
ficoml
mov
mov
out
add
lcall
inc
popa
jg
xchg
fcompl
add
outsl
mov
xchg
fstpt
ds
out
sbb
cmpb
aad
mov
dec
jecxz
imul
leave
inc
mov
fadds
loope
in
mov
jbe
fcomi
dec
inc
addr16
stos
int
pop
sub
imul
jle
mov
stos
jae
or
pop
addr16
icebp
ret
std
mov
jg
inc
cmpsl
cmc
addb
xchg
jmp
lahf
dec
cli
mov
inc
sub
cld
ss
or
fists
push
test
xchg
xor
sub
inc
xor
cmpsl
and
test
dec
scas
jae
aaa
jle
sub
ljmp
inc
pop
and
mov
inc
push
cltd
fldcw
jmp
pop
lcall
push
xchg
data16
fs
shll
ret
jne
in
into
in
cwtl
mov
stos
iret
addl
cmp
jge
outsb
dec
les
pop
pop
push
fimuls
pop
or
hlt
cmpb
cld
lods
inc
leave
call
sbb
jne
cmc
cmpsb
lock
sub
loope
out
outsb
cltd
js
cmpsb
scas
in
or
pop
nop
mov
insb
test
xor
and
imul
out
mov
ljmp
sbb
mov
mov
mov
mov
cmp
popf
dec
jns
loop
repz
dec
out
pop
sub
iret
pop
icebp
sub
and
xor
mov
mov
jecxz
insb
ret
lret
mov
int3
xor
js
aam
cwtl
inc
or
in
pop
je
fidivs
test
out
dec
push
jecxz
movsb
cmp
pushf
add
out
sbb
ljmp
inc
push
add
sub
cmp
in
dec
fwait
jge
lahf
mov
lds
mov
inc
ret
scas
in
fadd
int3
fcomps
mov
push
rorb
aas
mov
adc
adc
sbb
imul
scas
lahf
pop
sub
mov
xchg
movsb
jp
dec
sub
outsb
inc
xchg
xlat
cmpsl
sti
mov
xchg
xchg
mov
xchg
inc
icebp
in
xchg
loope
lods
cmp
test
push
mov
cmp
cmpsb
pop
pop
xlat
jnp
sbb
sub
mov
mov
insl
loopne
das
pop
call
and
xchg
push
lahf
and
loop
enter
mov
fidivrl
stc
add
mov
sbb
fidivl
adc
lret
fsubl
loope
sbb
movsl
adc
pop
pop
lock
xchg
sti
dec
push
scas
fcoms
repnz
call
ds
mov
mov
cmp
out
jp
mov
xchg
in
jo
mov
sar
mov
sub
pop
mov
aaa
xor
adc
jecxz
adc
mov
add
pop
adc
add
addr16
xchg
jmp
je
jne
test
jb
out
test
rorb
mov
and
xor
or
mov
xchg
mov
dec
mov
cs
pop
cmp
jecxz
sbb
enter
sbb
jle
or
push
rcll
cmp
leave
cwtl
rcll
shlb
jp
cmp
arpl
xchg
ret
popa
sbb
cmp
sbb
cli
jbe
shl
lock
jmp
add
aas
lcall
dec
push
dec
punpckhwd
mov
push
ja
dec
xor
cmp
js
fnstcw
movsb
inc
mov
push
shll
push
int3
push
gs
jmp
jns
mov
cmpb
push
lock
jg
mov
sbb
push
dec
jl
cltd
lret
sub
add
lods
int
rorb
pop
lret
jns
out
push
sub
xor
mov
lahf
outsb
xor
mov
ret
push
outsb
cmpsb
mov
test
test
mov
data16
mov
pop
lds
popa
clc
xor
fdivrs
pop
andl
ss
mov
xor
das
inc
iret
adc
jmp
push
jno
sub
adc
and
lcall
jbe
cwtl
and
sbb
jmp
ss
cmp
inc
rorb
inc
mov
pusha
lret
dec
addr16
rol
ss
cwtl
out
xor
push
int3
sbb
enter
mov
dec
insl
xchg
lcall
les
mov
sbb
mov
jp
pop
in
pop
jecxz
push
sbb
push
jo
push
lock
sbb
mov
adcb
imul
cmp
pop
imul
mov
push
jno
cmc
sub
xlat
mov
push
adcl
outsl
mov
sbb
sahf
in
test
inc
popf
shll
daa
mov
inc
and
nop
lret
add
js
bound
fsts
jmp
cli
clc
xor
dec
inc
mov
enter
cmpsl
inc
les
std
jmp
sub
adc
sbb
fnstsw
cmp
out
fcoms
xor
xor
popa
pop
stc
test
pop
ret
shlb
lahf
mov
cmpsl
clc
jmp
add
ds
mov
pop
lea
push
fisubl
jecxz
mov
rclb
fwait
imul
xlat
mov
cwtl
push
stos
in
xchg
loopne
jo
pop
cmc
inc
push
sti
cli
aaa
js
and
aam
push
sbb
xor
pop
jnp
dec
addr16
push
insl
outsb
in
mov
cli
jne
jge
stc
mov
lods
sub
add
cltd
pop
push
orb
hlt
jl
call
imul
push
sti
ss
insl
and
loopne
or
out
cld
or
data16
and
addr16
out
add
jmp
mov
push
test
cmp
sub
inc
mov
mov
in
ret
rcl
shll
sub
shr
gs
fcompl
push
and
xchg
mov
jmp
mov
jnp
push
enter
andb
test
aad
fld
pop
mov
or
lea
test
jne
and
mov
popf
movsb
push
test
rcrl
loopne
insl
aaa
xchg
daa
movsb
jnp
cmp
cmp
subl
data16
js
aaa
jmp
inc
aaa
add
mov
ljmp
sub
xor
pop
dec
sbb
bound
jmp
pop
lock
and
and
or
cmc
aam
int
sbb
fcoms
inc
push
insb
test
pop
js
lret
inc
in
or
sbb
xor
xchg
pushl
cmp
mov
aad
jne
stos
jle
gs
jle
jp
movsl
add
mov
enter
jge
push
push
cmpsb
dec
popa
sbb
push
bound
bound
cmp
movsb
in
push
jnp
pop
movsl
insb
shl
inc
xchg
dec
cwtl
outsb
inc
mov
push
stc
repz
mov
cmp
xchg
andb
inc
inc
push
cltd
je
insb
adcb
sbb
lods
sub
sub
enter
je
aaa
repnz
gs
adcl
clc
xchg
shrl
dec
repnz
mov
rorl
sbb
xchg
mov
dec
mov
xor
add
pop
add
pop
push
aad
insb
and
into
lret
test
out
mov
insl
fistl
adc
stos
push
sub
cltd
or
negw
insl
aas
test
repz
jp
mov
shll
push
mov
mov
repnz
data16
fistpll
inc
lea
inc
sbb
into
mov
stos
mov
pop
gs
mov
or
dec
test
fisubrs
cmp
pop
sub
mov
fcomp
out
pop
lods
stc
xchg
adc
mov
xchg
pop
imul
cmp
mov
sub
bound
pop
out
data16
cs
orl
clc
mov
repz
lea
jbe
jp
push
out
cmp
xor
cmc
dec
lea
test
xchg
test
mov
enter
push
mov
sbb
xor
adc
int
fidivrl
hlt
pop
xchg
lret
push
and
and
hlt
dec
test
inc
pop
out
nop
in
jmp
jecxz
repz
daa
fs
mov
cmc
mov
jnp
fcmovbe
insb
int3
inc
push
xor
ret
iret
jmp
mov
mov
adc
mov
int3
fistps
rorl
das
cmpsl
inc
push
sbb
xchg
push
push
add
lea
movl
add
inc
sbb
lock
lock
cmp
push
lock
sti
mov
in
or
cmp
mov
xchg
movsl
pop
stos
pcmpeqb
lret
push
ljmp
loope
fnsave
add
les
push
ds
scas
orb
xchg
cli
cmp
adc
mov
imul
cmp
sub
enter
mov
sbbb
mov
push
jge
xor
insl
faddl
inc
push
xor
add
jmp
or
dec
outsl
cwtl
mov
bound
std
loop
jg
repnz
jo
cli
int3
es
repnz
adc
pop
fldz
ret
jae
add
xchg
loopne
or
pop
scas
cmc
test
sub
iret
xlat
sub
push
xor
fisttpl
js
mov
mov
roll
imul
xchg
pop
out
ret
push
idiv
pop
ret
cmp
mov
popa
adc
cmc
dec
loop
out
jmp
push
inc
cwtl
hlt
movsb
repz
cmc
dec
int
lahf
loope
mov
stc
mov
clc
mov
cmp
inc
test
clc
cmp
inc
negl
push
hlt
pushl
pop
jmp
jb
fildl
adc
inc
fidivrs
test
popa
cld
sar
xchg
pusha
push
bound
sbb
mov
aaa
cmc
xor
pop
mov
dec
mov
fwait
mov
stos
xor
sub
bound
lret
lea
movsb
cwtl
lock
lds
adc
lret
dec
sub
cwtl
dec
sbb
js
minps
mov
and
ja
insb
cmp
outsl
mov
or
stc
inc
sbb
pop
mov
std
mov
outsl
push
jge
add
mov
mov
jae
pop
cwtl
stc
in
leave
xlat
push
inc
jmp
jp
sahf
in
inc
mov
mov
aam
sub
xor
or
push
enter
loopne
ds
arpl
test
ficoml
push
sbb
dec
mov
lahf
push
jge
pcmpeqw
xor
cli
adc
mov
or
into
lret
neg
movsb
popa
mov
mov
mov
jae
dec
rcrl
pop
test
lcall
jmp
std
outsb
xchg
inc
nop
test
push
dec
test
inc
fcmovb
and
and
mov
int
or
dec
jge
xchg
in
or
jecxz
mov
cli
iret
mov
or
rorl
mov
popf
sub
inc
dec
sbb
out
cmp
jo
sbb
mov
int
add
jb
loopne
cmpsl
pop
adc
repnz
sbb
lret
lahf
iret
adc
add
test
add
mov
ret
cwtl
outsb
stos
ds
std
sbb
lds
popf
mov
out
cltd
xchg
sarl
mov
or
pop
andl
loopne
js
mov
and
dec
leave
and
cmc
lods
fstpl
cmp
insl
rcrl
jecxz
fcmovbe
pusha
fcom
imul
xchg
pop
out
leave
loop
sti
pop
mov
hlt
pop
loopne
inc
cmp
xor
repz
pop
enter
daa
clc
mov
sub
mov
cmp
je
stc
inc
jbe
mov
ja
scas
xchg
test
ljmp
stos
roll
pop
push
add
mov
fistps
inc
pop
test
adc
jp
mov
stc
xchg
or
loop
jp
test
cmp
or
out
push
aad
adc
xchg
ljmp
mov
push
fs
mov
jbe
std
mov
inc
push
push
aaa
dec
test
in
js
sub
add
dec
xor
rclb
mov
aad
test
gs
jmp
xchg
pop
dec
cwtl
addr16
push
jg
or
in
dec
cmpsb
xor
sarl
inc
jmp
fs
stos
jge
fimull
fs
rorb
ret
jecxz
stc
sub
fbstp
mov
and
das
sub
jae
clc
outsl
add
fdiv
push
sbb
lock
cmp
mov
dec
dec
lock
inc
push
pop
cld
push
pop
and
push
and
jbe
xor
mov
rcrl
or
push
pop
push
out
ret
or
add
add
jg
scas
adc
mov
cmpsl
add
lock
icebp
ror
sub
sbb
push
add
jbe
xor
pusha
lret
cmp
mov
cmp
lock
sbb
divb
mov
idivl
dec
jp
mov
pop
fdivl
or
adc
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
mov
addb
pop
fsubl
out
fdivp
int
dec
andl
xor
mov
lock
push
sbb
sub
add
xor
push
push
xchg
bound
scas
test
mov
aam
aaa
cmp
jns
fnstcw
xor
and
or
xor
adc
mov
ud1
or
repnz
fs
ret
loopne
push
ss
outsb
adcb
or
aad
add
jb
ds
fs
mov
xor
popa
add
pusha
pop
icebp
ret
add
lods
imul
pop
mov
andl
scas
das
lret
xchg
push
push
nop
adc
inc
lahf
and
arpl
sub
loope
es
sub
aas
adc
insl
insb
push
hlt
push
int
mov
inc
mov
fsubl
sub
jg
out
cmp
outsb
fucomp
shll
addl
and
cmp
ret
pop
rorl
pop
subb
or
dec
xchg
loope
xor
popa
hlt
inc
out
stos
shll
cmp
js
sub
enter
xor
xchg
out
rcrl
and
push
sbb
and
ficomps
leave
lds
xor
adc
fs
cmp
movsb
sbb
add
sahf
xchg
jns
pusha
insl
pop
sbb
adc
inc
mov
int3
inc
neg
lea
cwtl
sub
and
or
dec
mov
jno
and
mov
inc
scas
cmpb
sti
mov
mov
rcrb
push
cmp
insl
test
push
jo
mov
in
mov
sbb
add
mov
mov
and
mov
or
sbb
dec
mov
es
jae
in
lock
fistpll
mov
mov
jns
push
jge
jae
or
into
out
dec
or
lahf
sub
clc
in
enter
xor
stos
jb
xchg
inc
mov
xchg
cmpsl
dec
imul
dec
and
fbstp
stc
xchg
mov
popa
jge
pusha
xchg
cltd
adc
iret
cmc
jmp
fcmovnbe
jmp
mov
jmp
inc
and
xchg
nop
ret
jle
cmp
xchg
or
inc
push
inc
adc
out
das
sbb
gs
fcoms
jmp
pop
mov
rcr
jp
sub
test
insb
sub
jmp
hlt
ret
out
shll
dec
add
mov
xchg
sbbb
pop
cmp
stos
les
cwtl
xchg
cmp
pop
mov
mov
cmp
insb
lret
and
test
adc
and
and
and
xor
inc
adc
mov
pop
aas
out
fmuls
mov
mov
dec
mov
sbb
insl
fisubrl
and
in
push
popf
mov
jae
insb
jp
xchg
dec
pop
clc
dec
or
xchg
aaa
push
pop
lret
xchg
jae
jp
and
inc
add
stc
pop
je
pop
xchg
int3
push
inc
mov
aad
jmp
jbe
stos
incb
roll
inc
jecxz
mov
movsl
jbe
loop
xor
sub
adc
lods
and
sbb
ja
and
jnp
pop
adc
mov
cltd
sbb
push
imul
mov
or
xchg
fs
dec
cli
fsubr
mov
addl
or
loop
jle
sahf
cli
imul
push
jg
sbb
mov
cmp
mov
xchg
andl
rorl
in
xchg
mov
pop
jne
cbtw
sub
popa
test
jp
inc
xchg
adc
inc
cmpsl
sbb
mov
aad
add
rcl
pop
ds
xor
call
jp
lods
dec
sub
mov
pushf
inc
push
lods
cmpsb
xchg
jle
cmc
insl
pop
add
sub
clc
insl
daa
xlat
or
repz
ja
adc
sti
jno
icebp
leave
out
repz
imul
pusha
jecxz
jae
push
mov
pop
nop
addr16
or
pop
lds
imul
lock
mov
mov
dec
idivb
movsl
repz
sub
pop
in
cmp
sub
and
imul
cmpsl
cmp
inc
mov
mov
xchg
movsb
or
testl
cld
mov
insb
sbbl
lret
jecxz
loopne
filds
lcall
or
add
fldl
and
pop
ljmp
sahf
mov
fcomi
popa
jb
or
xchg
xchg
inc
dec
cmp
mov
je
orb
jbe
lret
mov
xchg
add
sub
sbb
xchg
fimuls
hlt
or
imul
repnz
push
dec
xor
xchg
push
mov
int
sbb
cli
xlat
jmp
or
js
cld
sbb
pop
xlat
or
xchg
inc
mov
mov
imul
jae
mov
or
test
jb
cs
lahf
addr16
add
inc
sbb
push
cld
xor
inc
lcall
cmc
cmp
push
and
xlat
push
cs
or
jnp
mov
out
jne
loope
aad
sub
divl
test
or
pop
loop
mov
xor
add
jl
cli
xchg
push
push
pop
jp
mov
popa
lea
xchg
repnz
sbb
int
dec
sub
push
mov
aas
les
dec
xor
fistpll
enter
sbb
repz
inc
dec
mov
imul
adc
inc
int
mov
gs
cmp
stos
insb
mov
mov
dec
fucom
sub
sub
cltd
shlb
sbb
push
mov
cmp
inc
and
inc
xchg
push
mov
pop
bound
mov
cmovb
in
mov
xor
mov
std
fdivl
inc
loope
pop
mov
bound
mov
pop
repz
sahf
mov
pop
aaa
and
jbe
mov
stc
xor
xor
sbbl
popa
int
jmp
cmp
shrb
push
mov
fcmovbe
push
bound
adc
dec
jl
mov
stos
pop
int3
pop
xor
or
cli
xchg
xor
dec
add
xchg
dec
andb
fwait
inc
cmpsl
popl
add
push
outsb
ds
adc
jecxz
test
cwtl
xchg
cmp
outsb
rcll
xchg
into
sbb
mov
adc
sbb
addr16
test
data16
sbb
jne
jmp
jno
sti
test
push
adc
movsl
arpl
or
add
dec
cwtl
jbe
sti
mov
xchg
adc
clc
pop
push
jo
fstps
push
cmc
pop
fidivrl
loopne
jne
js
out
sbb
lock
ffreep
imul
cli
push
into
push
xor
mov
pop
repnz
push
insl
mov
lcall
or
popl
push
out
mov
movsb
sub
xchg
notb
shll
cs
add
loopne
test
mov
idiv
mov
mov
mov
orl
dec
mov
sahf
and
test
adc
or
jbe
jg
sub
in
mov
pushf
add
jecxz
fcoms
aad
pop
mov
ds
aas
jmp
rorl
mov
cli
jmp
jno
add
push
mov
ror
jmp
bound
sbb
xchg
jnp
cmp
xchg
mov
mov
cmp
mov
inc
mov
cwtl
test
mov
add
sbb
dec
enter
push
cmpsb
jecxz
fs
jns
push
adc
cmp
test
mov
data16
xor
pop
xor
and
ret
lods
cmp
cmpsl
or
stos
push
jo
cmc
sub
xchg
jle
arpl
mov
xchg
leave
hlt
jl
lcall
sub
push
ds
xlat
sbb
stos
rolb
pop
pop
cmc
jp
cli
xor
jge
les
xor
lock
lret
dec
sahf
jmp
jns
mov
or
imul
cs
ss
mov
inc
inc
fdivs
sbb
xchg
inc
dec
pushf
cltd
lret
mov
aas
stos
out
inc
xor
mov
cld
cmp
add
fs
xor
mov
lret
xor
lock
das
cmpsb
aam
mov
rclb
cmc
jbe
pop
lret
lock
cmp
imul
outsl
cmp
lea
stos
dec
lods
dec
leave
ds
jns
or
push
pop
push
add
fcmovu
push
in
pop
rolb
sbb
mov
add
dec
jbe
arpl
adc
rcr
mov
lea
shrd
mov
mov
pushl
inc
adc
jg
pop
mov
scas
xchg
xor
push
std
jecxz
aaa
add
loop
lcall
aam
jge
and
inc
mov
mov
repnz
xchg
rorb
dec
dec
pop
or
or
insb
mov
lods
sub
dec
jno
xor
push
mov
xchg
dec
bound
jg
jns
cmp
pop
jbe
lods
imul
pop
in
push
popa
ret
mov
clc
int3
ss
push
sarl
test
dec
adc
fdivp
jnp
lcall
sub
mov
pop
mov
add
adc
mov
sbb
pop
subb
iret
mov
pop
sbb
push
jmp
sbb
jo
mov
loope
outsl
repz
and
xchg
sbb
pop
mov
mov
imul
js
sub
push
bound
daa
into
mov
mov
lahf
incl
push
data16
and
aaa
cli
xor
into
mov
outsl
jae
je
imul
xchg
pop
and
or
enter
cmc
std
aam
sub
in
push
push
xor
in
repnz
or
rcrb
xlat
add
sub
xchg
push
jbe
imul
inc
mov
rcll
add
mov
pop
sub
lret
in
add
arpl
add
out
sbb
or
push
shl
out
or
into
pop
out
mov
mov
mov
lea
or
push
jne
lret
test
inc
ds
scas
cs
outsb
push
jle,pt
jo
pop
int
ds
nop
daa
in
test
mov
jb
mov
mov
pop
or
lods
xchg
inc
and
clc
dec
push
jecxz
jl
push
je
in
cwtl
outsl
jmp
js
hlt
adc
enter
in
roll
mov
jg
int3
add
and
or
inc
mov
call
add
and
xchg
mov
loope
or
dec
out
imul
in
aam
dec
negl
sbb
add
bound
mov
dec
or
daa
or
lea
sub
and
pop
mov
mov
mov
into
loop
xor
mov
mov
add
iret
nop
getsec
cmpsb
mov
mov
and
popf
xor
inc
and
cmpsb
mov
xchg
popa
sbb
jo
or
and
into
inc
mov
and
fdiv
lcall
inc
adc
xchg
xchg
addl
push
rcrl
xor
daa
xor
int3
je
add
mov
je
int3
aas
dec
imul
sahf
js
jae
arpl
ds
mov
jae
mov
sub
jecxz
mov
dec
mov
mov
lea
cwtl
clc
xchg
mov
sbb
adc
sub
push
mov
imul
mov
into
ficompl
cli
dec
cld
add
sbb
lahf
sti
adc
mov
dec
addl
jmp
loope
push
sbb
in
ljmp
sub
fisttpll
stos
filds
fwait
bound
mov
je
test
mov
daa
loopne
jp
mov
jmp
or
jge
cmp
pop
or
or
mov
add
loopne
aaa
push
xchg
ja
inc
mov
loop
cmp
gs
fwait
or
add
outsl
inc
outsb
cmp
fdivrl
movsl
lahf
pusha
out
cmpsl
mov
lret
nop
mov
sub
test
bound
mov
out
aaa
sub
das
inc
mov
out
iret
sub
mov
fistps
cmp
inc
scas
lahf
push
dec
les
rep
sbb
test
mov
jns
imul
enter
pop
ljmp
fcmovb
dec
and
cmp
imulb
sub
in
sub
scas
shll
push
leave
inc
or
cltd
jge
lret
xchg
and
test
dec
ds
sahf
test
sar
sbb
xlat
out
mov
push
jge
xchg
pop
andb
scas
xchg
pop
jl
jae
jle
xchg
test
shr
mov
xchg
push
or
cmpsl
sbb
jnp
setge
jg
xor
inc
push
ret
shrb
mov
sub
xorb
jl
out
fadd
dec
movsb
shll
lock
repz
xor
aaa
fisttpll
lea
adc
cmp
or
mov
inc
popf
test
mov
subb
mov
push
jbe
mov
dec
push
lcall
inc
push
scas
sbb
insl
call
idivl
cmp
push
ret
xchg
mov
jp
test
add
add
cmpsb
lcall
add
push
pop
jg
movsl
xor
out
lock
mov
ja
mov
int3
push
xor
fisttpl
imul
mov
jg,pt
repz
adc
out
pop
bound
push
lea
sarl
push
push
jbe
testb
dec
loop
xlat
fmul
mov
mov
cmp
ds
jmp
dec
cwtl
and
pop
test
push
jb
sub
cmpsb
cmpsl
sahf
pop
ja
ret
mov
pop
and
fdivrp
mov
or
push
pop
nop
dec
mov
xor
lahf
ja
ret
out
push
das
mov
dec
dec
out
ja
push
mov
mov
jmp
pop
xor
cmp
sub
dec
pop
and
scas
and
mov
xor
sbb
repnz
cli
sar
mov
scas
cmp
es
adc
mov
cmp
lret
mov
clc
loop
loop
iret
outsb
pop
adcb
clc
sbb
iret
mov
les
sbb
jo
xchg
xchg
inc
movsb
pop
add
arpl
or
mov
popf
lahf
das
inc
std
jmp
popa
shlb
dec
je
int3
loopne
adc
cmp
mov
lods
das
pop
jle
aaa
mov
scas
aaa
lahf
or
in
jecxz
adc
nop
pop
sbb
daa
pop
push
fs
sahf
lret
ss
lret
std
loope
jmp
mov
xor
std
out
add
xlat
stc
and
cli
jbe
pop
xorb
aam
xor
jo
sbb
data16
into
cwtl
test
jns
aas
xchg
nop
mov
frstor
mov
je
xlat
fldenv
mov
pop
je
clc
add
lds
xor
push
mov
sbb
xchg
jp
sub
pop
mov
shr
inc
push
push
mov
pusha
sbb
imul
mov
mov
add
cwtl
inc
inc
gs
push
fmuls
pop
adc
push
inc
aas
sub
pusha
fwait
mov
rcrb
addr16
gs
daa
and
add
mov
lds
ret
add
and
or
push
sub
mov
incb
es
pushf
pushf
ret
mov
mov
es
jns
into
scas
lods
fld1
lret
push
adc
cmpsl
or
push
mov
ss
push
shlb
mov
xchg
sahf
imul
pushf
movsb
cmp
add
testl
inc
mov
mov
xor
aaa
sti
dec
movsb
pop
push
jl
inc
scas
mov
imull
into
adc
clc
mov
ljmp
push
shrl
cmp
pop
adc
jno
adc
jecxz
jae
lods
sbb
enter
test
js
mov
js
ja
jg
cmp
mov
add
lds
jns
or
pop
sbb
and
rorl
adc
mov
sarl
int
pop
addl
pushf
loope
push
std
testb
mov
leave
movsb
push
adc
mov
pop
push
leave
push
push
and
sub
pop
out
push
imul
out
sub
push
push
push
sbb
ja
jo
fstpt
mov
xchg
sarb
inc
xlat
and
lods
nop
or
rcr
stc
icebp
idivb
sub
jno
gs
xchg
mov
outsl
ret
jmp
fwait
mov
out
pop
int3
add
mov
ja
xchg
loop
or
and
sbb
push
sub
addr16
int
mov
loop
imul
das
or
lret
imul
xchg
inc
je
pop
mov
sub
mov
jmp
mov
mov
ss
arpl
mov
push
and
loope
sahf
iret
push
mov
sub
test
test
or
test
das
fcoml
outsb
add
inc
scas
out
inc
adc
mov
jbe
shll
adc
jns
sbb
loope
das
mov
pop
pop
call
cld
and
xchg
mov
cmc
lea
push
iret
dec
ds
inc
ret
add
xlat
sti
repz
sbb
and
sarl
les
inc
movsl
mov
cmpsb
mov
sub
cmpb
orl
adc
xor
sti
dec
stos
mov
cmpl
xchg
mov
dec
lods
sub
inc
dec
aas
mov
sub
out
sbb
aam
out
js
sbb
push
xchg
cmp
clc
xchg
ret
ret
xchg
ret
subb
inc
and
xchg
lcall
in
push
mov
push
lret
cmp
xlat
or
and
data16
inc
pop
dec
or
into
fisubrs
cmp
xchg
outsl
lret
and
add
in
add
add
mov
out
clc
sub
cmp
pop
cld
and
cmp
inc
in
scas
je
popa
jae
push
fwait
pop
mov
call
lret
cs
xor
xchg
sbb
xchg
add
je
les
sbb
insb
dec
mov
pop
add
inc
or
mov
jge
push
rcl
pop
cwtl
fwait
and
loopne
sbb
jae
clc
arpl
push
push
loope
sbb
sub
andl
pop
cli
mov
dec
popa
dec
xor
mov
arpl
loope
int3
sbb
jge
popa
pop
xlat
popa
jp
fsts
inc
jecxz
out
sub
mov
lods
mov
cltd
sub
insl
dec
in
cmc
mov
mov
stc
ret
xlat
mov
lock
lea
cmp
cmpsl
scas
xchg
das
mov
in
jg
fwait
mov
push
adc
sub
push
inc
mov
xor
testl
lea
xchg
mov
mov
movsl
push
xor
rorb
ret
rclb
lret
mov
inc
ljmp
fildl
jg
and
sahf
dec
in
sbb
add
fmull
test
xchg
adc
xchg
lods
mov
mov
aas
mov
loope
insb
call
push
rol
ds
mov
addr16
adc
int3
add
push
mov
mov
stos
dec
mov
push
in
mov
mov
rorb
das
jns
sti
shl
adc
mov
aad
test
outsb
pop
adc
push
outsb
sbb
rol
int
push
clc
add
dec
or
lcall
xchg
jmp
in
mov
xor
push
les
lahf
ljmp
hlt
xlat
movsb
aaa
and
and
push
cmpsl
std
jb
dec
and
push
loope
sbb
add
or
or
stc
aam
fmul
xlat
outsb
cmc
pop
sbb
dec
mov
add
insl
stos
sub
lods
inc
cmp
and
repnz
dec
pop
jmp
call
pop
hlt
leave
int3
test
jns
lret
mov
rcrl
cmp
and
add
mov
jle
lock
mov
jge
mov
adc
jmp
fcoms
fsubrl
adc
xchg
lcall
jmp
cmpsl
in
out
andl
jg
loop
sbb
xor
xor
dec
mov
pusha
push
inc
mov
in
jle
sub
pop
jle
sbb
xchg
es
sbb
push
push
cmp
ret
adc
mov
sub
insb
and
push
or
sbb
jbe
sar
pop
lds
stos
movsl
xlat
push
sbb
daa
daa
lock
icebp
mov
lods
arpl
cmc
xor
test
inc
imul
das
and
ljmp
mov
pop
dec
sbb
sbb
test
mov
dec
cltd
int3
stos
seto
nop
push
sbb
mov
xchg
fs
push
or
aam
in
inc
adc
shl
sbb
rorl
loope
jae
sub
gs
imul
jbe
arpl
movl
scas
and
push
shlb
ret
hlt
movsb
in
push
dec
testb
adc
mov
pinsrw
and
push
aad
xchg
push
jbe
add
and
dec
add
jp
push
jg
sbbb
pusha
rcrb
xor
mov
repz
pop
shr
sbb
adc
repnz
faddp
sbb
in
sub
insl
xchg
mov
jne
cmp
lds
push
enter
mov
scas
in
insl
loopne
push
sbb
int
fwait
pop
inc
das
stc
rorl
add
sub
int3
cwtl
xchg
popa
sbb
ljmp
aas
loop
ret
daa
rcl
mov
pop
popa
sub
jnp
push
adc
out
pop
sarl
cmp
scas
inc
pop
mov
int
push
insb
xchg
jmp
cli
jp
mov
ljmp
inc
dec
lods
add
and
dec
int3
cmp
or
dec
jo
sbb
push
adc
sub
push
jle
jmp
xchg
push
add
jae
call
movsb
loope
leave
aaa
cld
adc
add
push
or
scas
sub
add
mov
add
adc
or
xor
arpl
and
mov
add
xor
inc
das
mov
add
and
mov
scas
clc
cld
mov
xchg
fcoms
ret
jp
xchg
pop
int3
jle
mov
or
or
sub
cmp
pop
rorl
js
bound
mov
push
mov
and
cmp
outsl
mov
add
orl
mov
mov
adc
iret
mov
aaa
dec
inc
mov
xchg
xchg
lahf
subb
movsb
pop
dec
push
adc
mov
xor
stc
fwait
adc
std
push
imul
pop
movsl
xchg
dec
cmp
clc
add
loopne
mov
cwtl
mov
sub
movsb
jo
xchg
aad
push
mov
filds
hlt
mov
dec
adc
jo
div
fdivp
not
jmp
xor
mov
mov
mov
in
imul
pop
push
rol
cltd
enter
xchg
arpl
movl
lea
mov
cmp
or
ret
in
es
addl
mul
test
fidivrs
rorb
xor
es
dec
or
inc
xchg
insb
dec
cmp
push
push
mov
sub
push
xor
mov
enter
xlat
je
adcb
sbb
dec
add
ds
lock
sarl
pop
sub
push
std
mov
push
mov
ja
out
mov
add
push
jecxz
mov
lea
xchg
cmpsl
xor
xor
lea
pusha
mov
mov
aaa
clc
sti
fnstenv
in
cltd
mov
add
push
enter
add
mov
mov
aam
hlt
xchg
outsb
shl
repz
xchg
mov
adc
jno
sarl
xchg
daa
icebp
ror
and
in
fcmovnu
out
push
sahf
push
dec
xchg
inc
push
insb
or
fwait
add
or
outsb
lahf
cltd
lea
xchg
out
shll
addl
mov
dec
mov
les
xor
ret
stc
ret
and
dec
mov
sbb
sbb
gs
test
aad
ja
and
cld
addr16
fwait
fwait
cmp
inc
add
imul
dec
dec
frstor
xor
mov
std
push
cmp
cmp
scas
cmp
jo
outsl
and
sarb
sbb
js
icebp
stc
push
call
xchg
pop
pop
adc
xlat
push
sbb
push
mov
push
test
xchg
mov
stc
lret
fisttpl
or
xchg
je
xor
gs
aam
mov
jne
out
cmp
cli
xchg
push
pushf
ret
push
fstps
or
push
test
add
lret
ret
adc
mov
sbb
leave
cld
sbb
lret
mov
into
mov
repz
daa
adc
inc
scas
and
add
mov
adc
sub
pop
stos
adc
lods
sub
cmp
jb
inc
mov
sub
inc
mov
pop
sarl
pusha
mov
mov
xor
mov
out
jnp
sbb
jbe
flds
lods
pop
into
stc
fwait
push
and
sbb
and
rcrl
les
fs
cs
pop
shlb
movsb
std
loope
jne
lahf
inc
sbb
xlat
mov
and
insb
in
mov
sti
faddl
dec
sub
daa
mov
das
or
leave
insl
cs
cmpsb
adcl
mov
push
outsb
fnstenv
mov
and
stos
sahf
ds
test
test
das
dec
push
icebp
sub
inc
inc
dec
xchg
mov
popf
sbb
mov
sub
mov
sub
cmpsb
and
movsl
mov
or
cmp
push
lods
lods
sahf
push
outsb
int3
mov
imul
repnz
pop
lret
in
cmpsb
lea
mov
addl
das
ds
cli
xor
adc
mov
jne
xchg
stos
xor
out
push
inc
xchg
push
in
jmp
or
xchg
movsl
jo
in
scas
sub
shll
sbb
fstpl
add
data16
and
xor
push
pcmpgtb
jb
hlt
imul
push
test
loopne
mov
call
and
sub
pop
sub
mov
std
outsb
enter
fisttps
cs
arpl
inc
pop
add
or
adc
sbb
or
pop
or
fcompl
xor
xchg
jle
jbe
push
jae
nop
fildll
jge
in
test
popl
push
jo
inc
loope
test
push
imul
hlt
and
sub
push
aad
mov
pusha
in
mov
test
pushf
loopne
pop
mov
add
mov
jmp
into
push
or
imul
push
lahf
mov
popa
stos
fdivrs
je
mov
out
scas
lods
xchg
dec
mov
aas
aam
out
int3
daa
inc
stos
mov
cld
mov
cmp
movsl
les
pop
inc
xor
stos
jge
rorl
insl
ficomps
adc
cli
mov
call
mov
dec
mov
lahf
cmp
imul
fwait
scas
test
ret
pop
daa
jg
add
clc
fldt
adc
cmp
mov
out
cmp
cmc
inc
arpl
cmpsl
sarl
repnz
lcall
push
push
adc
fwait
rol
or
mov
pop
adc
fistpl
dec
xchg
je
xchg
mov
mov
adc
xor
lret
or
cmp
lahf
pop
loop
push
pop
mov
sub
lcall
mov
nop
jbe
sub
jg
cmp
inc
and
sub
xor
sub
dec
push
call
add
outsl
scas
lea
shlb
fimull
loopne
sti
sti
mov
sub
lds
cmp
lret
stc
push
subb
das
cli
pop
or
ss
inc
jle
pop
mov
cmp
add
xchg
adc
sbbl
jo
int
adc
int3
addr16
adc
xor
shll
mov
push
sbb
lods
inc
imul
sub
ficomps
adc
xor
mov
sarl
push
in
mov
mov
jnp
cmpsl
cmpsb
std
lahf
mov
ds
push
jb
stos
mov
call
xor
lret
in
divl
lcall
fwait
dec
pop
icebp
sub
cmc
stc
aad
fcompl
xchg
xchg
bound
inc
dec
cpuid
sub
sarl
fdivrs
and
std
inc
std
sahf
int3
and
push
das
pop
in
pop
pop
xchg
popf
mov
arpl
rolb
ljmp
xor
adc
jge
cmp
mov
xor
sti
pushf
scas
clc
jge
pop
mov
aam
fiadds
xchg
popf
fsubrl
in
mov
xor
bound
daa
adc
imul
ret
loopne
dec
jmp
jae
cmc
push
jae
bndldx
lret
and
and
repz
insb
ret
rcll
ljmp
push
ds
push
hlt
cmp
xchg
loop
iret
sbb
out
jp
and
adc
in
scas
hlt
fists
fisubs
hlt
xor
jle
add
das
mov
cmp
out
or
ja
jp
shrl
fdivrl
inc
mov
mov
pop
sbb
adc
jo
push
repnz
mov
notl
loop
data16
mov
adc
sub
test
push
cltd
or
in
hlt
sbb
ja
cmp
icebp
cmp
and
add
push
stos
into
jl
and
fiaddl
lcall
hlt
push
adc
fildl
cmp
or
scas
iret
test
xchg
jne
pop
pop
or
faddp
fiadds
push
add
push
imul
adc
out
rcl
stos
cltd
jp
lds
lock
sbb
mov
outsb
add
lahf
push
jmp
add
xchg
sub
xchg
adc
inc
lds
cmp
sarl
xor
iret
dec
pop
fldt
cmp
and
and
push
aam
addr16
xchg
jp
xor
movsl
test
jno
fdivr
imul
repz
xchg
xor
inc
mov
mov
fwait
lret
push
mov
popf
jl
scas
mov
sub
stos
push
jle
std
mov
out
jmp
test
xchg
add
and
mov
sbbb
cmp
cmpsb
mov
popf
adc
enter
xchg
ficoml
and
in
mov
xchg
or
nop
jnp
xor
and
xchg
pop
push
inc
loope
stos
movsl
xchg
dec
nop
jge
cmp
popa
add
mov
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
mov
addb
or
mov
lods
fwait
jecxz
or
lds
clc
sahf
js
in
out
aad
xchg
das
dec
gs
idivl
xlat
testb
lock
ja
jae
mov
jg
sbb
mov
leave
cmpsb
out
xor
loopne
or
cmpsb
ss
arpl
dec
mov
cmc
lahf
and
cvtps2pi
arpl
add
sbb
xor
fbstp
sbb
mov
jp
pop
jnp
lcall
cmp
sbbb
cmc
add
lods
dec
mov
lahf
das
xor
inc
xchg
dec
adc
pop
jnp
dec
mov
movsb
out
stc
rclb
push
lret
fisttps
mov
pop
aad
inc
sbb
popf
cmp
push
arpl
sub
and
call
lods
and
fildll
cmp
in
lea
sar
mov
dec
loope
lret
aam
scas
lcall
lds
sub
lret
sbb
pop
push
ficoml
lcall
mov
jmp
ja
repnz
frstor
xchg
pushw
or
shlb
sbb
aad
lods
add
in
fildl
mov
ljmp
mov
push
push
pop
loopne
pop
sbb
out
mov
lret
gs
add
xchg
inc
dec
gs
push
dec
inc
push
push
sub
roll
and
add
sti
and
jo
jmp
or
push
lahf
sahf
mov
divl
mov
add
and
inc
es
mov
inc
fninit
ror
aaa
orl
int3
xlat
into
div
cmp
or
push
xchg
mov
push
xchg
add
cmpsl
pop
mov
mov
add
nop
notb
js
mov
aas
xor
mov
adc
jnp
mov
mov
sti
imul
cmp
adc
seto
scas
xchg
xor
dec
fs
xor
stc
les
sahf
out
add
fdivrl
cwtl
test
inc
dec
mov
dec
or
in
adc
dec
adc
pop
push
and
jmp
fistl
test
iret
xchg
inc
fiadds
sbb
xchg
das
test
pop
ficoml
jge
dec
std
cmp
std
mov
loope
clc
or
lret
test
cmp
mov
cmp
loope
jnp
test
das
push
mov
scas
xlat
cmp
push
mov
jns
inc
xchg
into
in
mov
imul
mov
lods
mov
jae
cmc
mov
addr16
ds
and
out
cld
mov
mov
lret
out
adc
mov
pop
xor
imul
out
ret
adc
push
xchg
sub
mov
mov
jnp
jbe
sbb
dec
mov
xor
aaa
push
outsb
mov
adc
jge
leave
mov
add
pop
push
adc
in
ja
cli
push
aaa
imul
imul
xor
loope
mov
xor
int3
xor
fcomps
pop
xor
jmp
insl
mov
lret
enter
movsl
fimull
adc
xor
pop
insl
jl
dec
rcll
test
outsb
fstp
inc
stos
or
dec
cmp
add
xchg
outsb
mulb
imul
loopne
je
cmp
add
mov
mov
mov
stos
sub
dec
pop
mov
outsb
and
pushf
pop
in
sub
clc
mov
das
gs
and
es
into
cmpsl
ljmp
enter
or
test
sbb
leave
lret
adc
jmp
push
in
xor
jnp
daa
lock
inc
mov
hlt
je
jbe
dec
mov
mov
add
or
pop
int
pop
dec
je
jno
xor
dec
adc
jno
pop
stos
sub
or
and
xchg
and
or
jnp
out
outsl
leave
push
fldenv
or
cmp
mov
add
pop
add
mov
mov
sub
stos
addr16
out
sub
jmp
aad
dec
shrb
xchg
push
jno
stos
and
popf
pop
repz
pop
sub
lock
cmpl
shll
in
das
fs
insl
adc
enter
hlt
xor
arpl
xchg
xor
stc
cmp
ljmp
and
inc
add
xlat
dec
daa
sub
lock
in
mov
shr
dec
imul
andl
mov
test
and
ja
inc
call
ljmp
or
scas
loop
lock
jle
iret
dec
test
mov
xor
lods
mull
and
shll
mov
dec
mov
loop
fisubrl
mov
push
into
mov
stc
sbb
sbb
add
cmp
ds
aas
lods
iret
rorb
int3
pop
scas
cmpl
sub
cmpsl
push
cwtl
and
sub
push
imul
sub
out
mov
adc
jle
xchg
test
or
mov
add
in
mov
push
sti
sub
cwtl
mov
fdivrs
xor
sti
cld
jnp
scas
or
and
and
sub
enter
sub
div
hlt
bound
leave
inc
aaa
mov
sbb
push
in
lret
push
push
or
cmp
cmp
dec
cs
shrb
out
push
push
dec
or
xchg
jge
mov
jecxz
leave
push
lods
cmp
ds
cli
sahf
jmp
jle
shl
mov
mov
test
dec
xor
cmpsb
adc
add
imul
jae
cmp
adcb
mov
lock
mov
decl
inc
test
subb
xchg
sbb
pop
push
inc
sti
lahf
movaps
sub
adc
add
jo
sub
aad
popf
test
fwait
inc
pop
loopne
and
sti
imul
stos
in
inc
sarl
sbb
sub
popa
insb
in
xor
jo
xor
mov
mov
pop
fists
xchg
fs
pop
mov
pop
pop
sahf
mov
shl
pop
dec
jg
enter
int
arpl
push
scas
lds
loopne
pop
add
adc
mov
inc
mov
jbe
dec
outsl
xor
pop
shrb
sub
pop
push
addb
mov
dec
test
or
pusha
clc
inc
fdivr
clc
sahf
mov
les
ret
xchg
test
or
mov
mov
pop
mov
cltd
or
sahf
movsb
adc
push
daa
cmp
xchg
inc
xchg
pop
mov
adc
or
mov
repz
jb
sti
xor
mov
sarl
push
test
jo
sub
js
mov
and
or
addb
out
aad
shl
cmp
xor
sbb
outsl
push
inc
jbe
mov
scas
std
xor
adc
and
sti
mov
cmp
sti
mov
cmp
in
dec
jl
dec
jbe
mov
sbb
and
push
add
or
cli
cs
jl
lahf
xchg
add
jne
sbb
jl
and
pop
pop
xlat
fcmovne
sarb
xor
jecxz
jg
cld
jp,pn
and
ljmp
arpl
inc
or
or
sub
jo
mov
mov
mov
mov
outsb
jge
daa
fbld
lods
sub
in
sub
mov
sub
mov
cs
pop
movsb
test
xor
cli
rcr
dec
or
push
dec
arpl
popa
push
and
xor
mov
lock
cmp
rclb
mov
rolb
add
dec
mov
cmpsl
addr16
push
jle
gs
mov
ret
or
xor
ret
arpl
pop
sbb
pop
xor
lods
pop
dec
scas
frstor
fistps
mov
pop
mov
xchg
xchg
push
sub
lock
inc
test
cltd
shlb
into
sub
mov
jnp
loopne
mov
mov
int3
imul
out
in
mov
sti
cltd
dec
lcall
push
xor
mov
adc
sbb
push
xor
cmp
add
mov
cmp
test
ja
sbbb
cmp
sub
das
cmp
aam
cmp
and
or
sbb
cmpsl
out
add
pop
clc
jecxz
scas
sbb
add
mov
sbb
pop
repnz
xchg
repz
pop
je
test
aas
push
adc
mov
or
jp
int3
aas
push
int3
stos
mov
ror
jb
inc
mov
fisubl
call
push
pop
jae
mov
dec
repnz
sbb
movsl
mov
xrelease
xor
mov
sub
and
cmp
leave
adc
lahf
popl
aam
jns
negb
mov
cwtl
jmp
jbe
iret
stc
lret
jo
pop
add
mov
inc
cmp
push
in
add
xchg
adc
sbb
roll
fcoms
pushl
test
dec
ret
jno
cmp
mov
cmpsb
call
push
sbb
stos
je
shlb
lret
dec
std
inc
xor
fwait
cmp
xor
rcl
inc
dec
mov
fldcw
inc
mov
push
sbb
stos
add
daa
and
inc
les
push
cmp
rolb
sub
xchg
ja
pop
jle
mull
mov
push
xor
mov
xor
lods
cwtl
cmp
sub
in
jecxz
mov
test
sbb
sysret
sub
fsin
sub
lret
and
adc
nop
or
push
adc
pop
jb
mov
adc
clc
inc
ds
fwait
mov
test
out
aas
xor
lock
in
pop
movsl
insb
or
sub
lcall
out
pop
xchg
loopne
fistpll
jae
pop
cmp
jecxz
pop
lock
xor
xchg
pushf
es
fwait
sbbb
dec
test
lret
cmp
push
or
push
icebp
push
sti
cmp
push
jno
dec
push
iret
jae
adc
repnz
lret
ds
gs
les
aaa
push
sbb
js
std
das
dec
inc
test
cmpsl
and
pop
popa
inc
xor
xchg
in
and
shr
popf
and
call
jle
lret
call
lret
cmpsl
cmp
push
outsb
jae
rorb
gs
les
and
pop
loope
scas
stos
in
lea
and
std
daa
add
subb
les
cmp
repz
gs
lods
clc
popf
pop
daa
jmp
lahf
in
into
les
push
sbb
xchg
pop
push
mov
xor
repz
pop
shl
inc
or
jns
cmpsl
flds
mov
pop
add
dec
sub
and
push
push
mov
nop
xor
xor
call
fs
sub
jle
add
out
cmp
ffree
inc
push
xorb
mov
int
sbb
or
ja
mov
sub
pop
xchg
xadd
cli
roll
nop
and
jl
ljmp
dec
inc
les
cli
rolb
insb
je
or
int
mov
test
push
adc
jbe
in
jb
add
test
add
mov
mov
xor
adc
sub
pop
aas
ret
pop
divl
mov
ljmp
inc
outsb
mov
insb
test
ds
fcomip
inc
sub
ss
or
mov
das
test
mov
push
or
inc
fistpl
mov
imul
in
dec
mov
add
jmp
in
lret
in
dec
dec
popa
cmp
dec
in
testl
mov
mov
xchg
xor
inc
iret
repnz
mov
mov
dec
js
jg
dec
mov
rcl
add
mov
dec
push
mov
mov
das
insl
cli
cmp
cmp
imul
cmpsb
mov
pop
cmpl
push
cmp
mov
sarb
sbb
mov
adc
hlt
cmp
xor
dec
and
pop
mov
push
mov
jb
push
mov
lret
test
je
xor
lock
sub
adc
lahf
mov
shl
xor
sub
push
aas
das
xchg
inc
push
xlat
cmpsb
xchg
push
mov
lret
test
mov
inc
push
mov
das
rolb
cmp
ljmp
mov
in
and
xlat
andl
mov
mov
mov
loopne
enter
movb
or
ficoms
pop
mov
js
pop
out
and
mov
pop
xchg
push
call
movsb
int3
pop
jne
inc
push
xchg
stc
or
and
int3
ljmp
lods
cli
inc
dec
push
push
jno
in
xchg
mov
int3
xchg
es
rorb
xchg
movsl
in
sahf
cwtl
dec
lret
cmovb
sub
test
and
push
add
inc
jo
hlt
mov
inc
idiv
mov
shll
adc
sbb
daa
dec
aaa
or
lods
inc
ds
dec
cmp
mov
mov
sti
idivl
fsubr
mov
adc
loopne
mov
into
imul
mov
lcall
pop
je
in
push
into
cmp
pop
adc
out
fistl
popa
shlb
xor
mov
jo
call
or
dec
sub
cmpsl
cmp
pushf
sti
mov
arpl
or
push
mov
lret
or
into
icebp
mov
enter
mov
xor
mov
fwait
repnz
out
fiadds
sub
mov
or
adc
pop
push
int
mov
cli
add
cmpsb
add
sub
jns
cmp
jp
nop
mov
cwtl
clc
and
mov
mov
xor
daa
in
mov
in
sti
xchg
jo
fdivs
xor
in
fwait
scas
cmp
jp
mov
orb
in
dec
xchg
les
lret
dec
sub
arpl
inc
jp,pt
lock
icebp
inc
cmpsb
loopne
andb
jb
jmp
jl
mov
je
fmul
pop
iret
nop
into
jge
inc
arpl
imul
and
sbb
test
add
or
inc
outsb
dec
in
cmp
in
jns
mov
out
lea
icebp
xchg
xchg
jl
test
cmpl
stc
cltd
xchg
cmp
out
scas
push
xchg
mov
mov
cmp
popf
mov
lock
lods
dec
call
pop
fildll
xchg
adc
push
push
es
test
mov
testb
pusha
lock
xor
push
movups
cmpsl
out
test
add
fwait
imul
aaa
pop
push
sbb
fs
rcl
mov
jecxz
mov
popf
pop
inc
xchg
lock
dec
inc
jnp
shll
cmc
sbb
into
xlat
fisubrl
es
cmp
mov
jnp
or
wbinvd
inc
mov
pop
repnz
addl
jae
and
mov
adc
mov
sub
sub
pop
push
xchg
add
imul
out
hlt
xchg
add
test
add
rol
cmp
xor
das
push
mov
sbb
push
loop
fs
and
mov
scas
xor
notb
add
scas
adc
inc
and
int3
cld
aad
adc
incb
out
dec
mov
lret
or
sahf
xchg
jl
push
xchg
cmp
push
mov
ja
inc
rclb
ficoml
iret
adc
sub
pushf
sbb
cmp
add
and
rcrl
fsubl
add
sar
cwtl
out
aaa
cli
jb
pop
sbb
and
mov
out
inc
dec
imul
ret
ret
inc
xchg
imul
scas
cmp
sub
xlat
arpl
or
outsl
das
xchg
addl
mov
outsl
push
pushf
push
in
push
outsb
xchg
mov
stc
in
cltd
pop
movsl
iret
sub
or
sbb
mov
jae
mov
sbb
mov
rcrb
les
jb
xor
add
sub
adc
dec
out
fdivl
jg
mov
jl
mov
cmc
or
xchg
and
jp
andl
fcmovnu
mov
into
pop
mov
fidivrs
shrl
rcl
jns
stc
sub
jns
pop
rolb
push
and
aaa
jle
pop
data16
lea
cmp
add
jmp
outsb
push
in
ret
adc
shrb
pop
mov
jl
mov
test
aaa
jmp
mov
push
mov
inc
mov
insb
pop
xchg
mov
dec
dec
and
das
dec
fnstsw
xchg
push
in
adc
nop
mov
push
jmp
xchg
testl
div
mov
xor
lods
mov
out
divb
push
mov
jae
mov
jge
ss
rolb
fldenv
ja
cmp
in
sbb
iret
cmp
aas
cwtl
add
ljmp
leave
xor
mov
pusha
cmp
stos
pop
cmc
add
sahf
gs
pop
outsl
jle
xchg
and
mov
sbb
out
mov
jle
or
mov
sahf
stos
mov
xor
popf
int
fidivs
loop
fimull
pop
xor
in
mov
inc
jp
mov
or
push
dec
adc
stc
icebp
sbb
mov
out
cli
push
pop
dec
xor
mov
and
adc
shlb
or
or
icebp
enter
add
mov
popf
repz
jns
jp
cmp
scas
push
or
jae
addl
push
dec
xchg
sbb
sbbl
dec
into
scas
daa
jno
jp
ror
jp
pop
xor
lods
ljmp
jne
cs
lods
fwait
mov
rolb
cmpsl
push
jge
mov
push
and
inc
out
dec
pop
dec
cmp
stos
dec
push
mov
inc
jns
jnp
mov
sub
in
iret
sub
adc
xchg
rcrl
mov
sbb
pusha
insb
cs
jae
xor
inc
call
ljmp
mov
shl
mov
jmp
push
out
pop
or
pop
mov
je
insb
xchg
in
aas
jbe
outsl
mov
and
adc
leave
jp,pn
fldl
repz
jne
je
es
sbb
pop
push
pop
jmp
shr
inc
fisttpll
out
sub
mov
xchg
xchg
sub
nop
pop
inc
movsb
fs
jo
add
ret
cmpsb
aaa
sahf
xor
push
or
dec
mov
fistl
and
mov
repz
clc
adc
loop
ja
pop
sub
into
cmpsb
jmp
ljmp
imul
lods
jecxz
in
aaa
ljmp
cmp
lock
push
mov
jb
lock
in
es
add
loop
fcomps
shll
sbb
notb
arpl
iret
inc
int
aas
fwait
lods
add
mov
in
aad
fdivrl
lret
cld
stos
inc
sti
dec
push
dec
cmp
adc
cmpb
movsb
fidivs
lods
xchg
pop
outsb
gs
loopne
movsb
mov
push
add
mov
xor
sub
cwtl
shlb
test
mov
out
mul
jle
mov
cmpsl
rcll
and
xchg
out
mov
xorb
mov
or
mov
mov
dec
jmp
pusha
xchg
sbb
mov
adc
stos
mov
lret
jmp
into
cmp
arpl
fsubs
mov
or
pop
dec
int
mov
add
sub
mulps
or
adc
lds
dec
outsl
mov
or
and
mov
cld
sub
sbb
ja
xchg
push
inc
cli
and
xor
lds
sbb
and
ljmp
inc
jmp
sahf
add
cmp
adc
test
daa
mov
lea
in
sub
idivb
out
xor
sbb
fistpll
aas
sub
xchg
mov
rolb
scas
les
jl
mov
leave
jae
dec
dec
cmp
pop
bound
xchg
lods
pop
jne
addb
ds
sub
or
int3
arpl
or
fwait
int3
test
stos
cli
sbb
insl
push
call
in
aad
cmpsb
push
inc
inc
push
dec
lods
cmpsb
sub
xor
rolb
daa
and
cmpsb
mov
loop
inc
xchg
fincstp
xchg
sub
cmp
frstor
jne
dec
cmp
pusha
add
mov
insb
sbb
adc
dec
sar
cmp
add
cmc
shll
jl
js
inc
lcall
rcrb
aaa
xchg
cld
fldcw
dec
mov
xchg
pop
adc
push
lds
sub
sub
aad
pop
sbb
push
aas
stc
addr16
imul
sbb
pop
lcall
bound
add
lds
fcoms
mov
movsb
sub
in
mov
mul
jno
mov
aas
cs
aam
xchg
imul
jo
mov
js
mov
mov
inc
pushf
sti
sbb
sbb
mov
fldl
sub
out
xchg
push
clc
xor
mov
adc
or
or
sub
and
stos
adc
lods
adc
cmp
cwtl
xchg
mov
sbb
or
imul
fwait
inc
stos
mov
shlb
imul
mov
push
mov
dec
sub
jmp
popf
psllw
in
inc
add
cmpsb
and
pop
cmp
inc
xchg
outsl
xor
mov
scas
adc
rol
stos
and
jge
mov
inc
fisttps
xchg
dec
add
dec
push
or
lods
sbb
loopne
and
xor
pop
jns
mov
out
in
out
divb
xor
outsl
pop
xchg
cmp
mov
mov
cltd
ds
cld
mov
mov
aam
cs
xor
dec
adc
lret
mov
stos
jg
lcall
dec
cmp
out
lods
movsb
jb
pop
lock
test
xorb
pop
cmp
dec
add
cmp
daa
push
and
ret
arpl
movsb
negb
ja
push
adc
sti
sub
movsb
out
xchg
and
xlat
lea
ret
add
cmpl
sbb
pop
test
xchg
inc
mov
and
iret
pop
pop
in
jae
cmp
jno
lods
ret
mov
popa
mov
cmpsb
aam
pop
inc
xchg
sub
mov
cmp
cmpsl
cmpb
div
mov
imul
pop
sub
pusha
loope
mov
je
xchg
sbb
icebp
fs
jbe
mov
mov
cmpsl
pop
pop
fsubrl
xor
push
cmc
rolb
lcall
incb
push
stos
or
inc
and
add
ficoml
andb
nop
ds
push
mov
inc
xor
cwtl
add
or
mov
leave
fistpl
add
jno
mov
inc
cmp
mov
pop
repz
inc
ret
loopne
in
incb
cltd
mov
jmp
andb
mov
sub
stos
shlb
das
adc
or
or
fstpt
add
mov
inc
push
jmp
mov
out
push
rol
pop
int3
pop
cmp
and
or
cwtl
jg
ja
mov
cmp
mov
adc
push
sbb
inc
pop
mov
fsubl
add
test
add
addr16
jnp
inc
mov
xchg
cmp
dec
fs
clc
int3
cwtl
adc
adc
xchg
or
lock
mov
call
inc
into
adc
sbb
pop
idivb
dec
pop
inc
imull
js
loopne
mov
xor
sub
ss
push
push
mov
adc
and
loopne
mov
roll
cs
dec
add
popa
or
repz
cmpsl
rcrl
add
dec
xchg
arpl
lock
aam
push
adc
push
xchg
aas
inc
insb
mov
clc
push
jmp
loope
cmp
pop
or
jbe
jne
xor
add
test
mov
push
xor
xor
jp
dec
clc
adc
scas
outsl
leave
xchg
pop
jns
push
mov
call
xor
and
enter
notb
mov
sub
pop
inc
sub
loop
sbb
cli
jp
ret
push
push
loop
out
push
lcall
mov
dec
bound
gs
aaa
loop
in
into
test
xor
fdivrp
mov
sbb
inc
pop
jecxz
popa
push
pushf
sbb
mov
sbb
outsb
pop
stc
xchg
clts
stos
imul
push
lret
ja
mov
imul
adc
cmp
aam
lea
bound
imul
mov
mov
adc
fiadds
pop
jp
push
int3
jmp
and
in
sub
mov
cmpsb
xor
int3
mov
sti
out
push
popf
out
js
popf
flds
lahf
nop
pop
ds
cmp
ret
jb
jmp
mov
outsl
cs
repnz
cmpsl
pop
cmp
xchg
in
push
jb
outsb
xor
and
fidivrs
pop
lods
out
cmpsb
xor
cmp
mov
mov
jae
jmp
xlat
pop
popa
out
fldcw
aad
cmp
jg
in
cs
pop
adc
and
cmp
loope
xor
pop
and
push
lret
mov
jmp
cmc
hlt
out
lods
leave
scas
shrb
es
push
stos
in
xor
adc
pop
stos
data16
bound
ds
add
dec
mov
fcomp
nop
cmpsl
jo
scas
adcl
inc
js
rcrl
loop
mov
int3
lahf
or
push
push
jne
mov
aam
shll
sub
add
shrb
inc
jge
pop
add
int
and
cmp
cld
mov
dec
fs
scas
cltd
cmp
add
ljmp
or
push
bound
and
xor
mov
leave
in
xchg
jb
cmp
scas
dec
mov
adc
push
fdivs
push
or
jae
ss
pusha
jo
test
lahf
mov
or
sarb
dec
push
adc
add
xchg
mov
push
mov
jae
and
lcall
nop
mov
mov
repz
jl
adc
mov
mov
adc
or
mov
lock
sub
subl
andl
mov
shrb
dec
imul
mov
je
push
hlt
je
cmpl
cmp
hlt
sub
icebp
and
mov
inc
sbb
roll
gs
xor
jecxz
pop
fldlg2
lock
bound
sub
mov
pop
popf
scas
into
repnz
rcll
xor
ss
mov
insl
nop
cmp
mov
sub
push
sub
inc
add
cs
push
scas
rclb
arpl
adc
into
cwtl
popa
mov
mov
mov
movsb
jns
pop
out
mov
movl
mov
pusha
out
dec
ljmp
arpl
inc
loope
pop
aam
add
sahf
push
shll
mov
cld
out
adcl
mov
lds
shr
mov
dec
add
jne
lret
mov
cmp
jo
mov
jo
les
loop
jmp
jge
jmp
sub
lock
sub
add
mov
mov
xchg
aas
xchg
out
add
clc
fimull
inc
jmp
rcl
mov
pop
iret
cltd
jg
out
mov
out
fwait
sbb
add
mov
or
add
xorb
int3
mov
inc
int
int
jl
xchg
fldenv
push
inc
addr16
js
cltd
jo
fstps
iret
cmpsl
mov
ds
aad
movsl
sub
mov
cwtl
stc
cmp
pop
dec
adc
inc
ss
mov
add
gs
aas
cs
dec
adcb
push
add
mov
test
pop
jl
add
sbb
dec
dec
jle
inc
push
loop
sub
fwait
add
aad
hlt
movsl
jno
xor
or
ja
js
stos
int
xchg
cli
test
negb
pop
mov
adc
cmpsb
int3
icebp
cmpsl
push
sub
mov
shlb
data16
adc
push
push
je
adc
inc
sarl
aaa
mov
scas
xchg
sbbl
inc
jno
pop
sub
scas
xlat
jecxz
or
in
cmp
inc
jecxz
sbbl
int3
gs
fists
adc
cmp
outsl
xor
sub
in
repz
popf
jne
inc
sarb
repnz
cwtl
jl
ss
sub
andb
mov
xor
mov
inc
dec
push
or
mov
xor
and
add
repnz
and
movsl
cmp
pop
imul
cltd
cld
push
xlat
fwait
sbb
repz
into
fcomp
xchg
sub
push
ror
push
jne
cmp
xchg
cmpsl
mov
fwait
adc
sub
pop
iret
sti
mov
dec
loope
and
inc
xchg
xchg
ss
mov
jecxz
push
notl
pop
pop
stos
imul
mov
xchg
dec
lret
call
pop
push
push
xlat
push
inc
sub
pop
ds
push
fists
rclb
inc
jmp
add
in
mov
and
ljmp
arpl
cwtl
mov
cmp
pop
andb
sbb
pop
outsb
adc
xchg
mov
sub
out
sbb
sarb
lret
scas
cmp
and
sar
dec
mov
mov
dec
sbbb
lea
sub
les
xchg
pop
lods
test
sub
fstpt
mov
dec
pop
lods
xchg
aam
adc
out
ds
cmp
test
xor
sub
inc
rolb
mov
dec
test
cld
cmp
pop
xchg
ds
fldcw
cli
mov
nop
xchg
shl
enter
xchg
cmp
cwtl
dec
push
adc
daa
sahf
insl
jae
shrb
push
inc
clc
adc
push
xlat
test
ss
mov
sahf
pop
dec
sbb
mov
loope
in
nop
and
or
shl
ds
roll
andb
dec
out
dec
std
mov
mov
adc
cs
int
test
mov
out
pop
rclb
loope
push
adc
sahf
cmp
jb
add
mov
lahf
sub
mov
mov
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
in
push
pusha
xor
fwait
inc
mov
mov
push
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
