push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
and
mov
mov
push
ds
cmpsb
pop
mov
mov
repnz
adc
out
ss
test
repz
fisubs
mov
int
cmp
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
fisubs
jnp
cmp
jle
pop
push
lcall
sbb
mov
in
sbb
shll
xor
inc
jecxz
mov
mov
mov
cmp
and
test
push
adcb
and
sub
mov
movsl
mov
push
es
hlt
loop
mov
loope
xor
and
jle
sub
mov
and
dec
sub
dec
lock
mov
push
aad
cmpsb
ret
mov
cmc
ficoms
or
mov
mov
popa
mov
mov
add
xchg
xor
stos
andb
nop
mov
push
mov
je
pop
adc
std
popa
lret
repnz
lods
cld
shl
subl
push
pop
stos
fbstp
xor
mov
cmp
cmp
enter
in
dec
inc
xchg
in
dec
mov
shlb
scas
ljmp
mov
insb
pop
ret
mov
fndisi(8087
rcrl
adc
mov
mov
cmp
mov
adc
iret
mov
rolb
dec
push
loope
push
aam
cld
rcrl
adc
mov
mov
mov
mov
pushf
fistpll
je
add
mov
outsb
loop
xchg
ja
push
aad
sti
orl
pop
jecxz
ljmp
adc
jp
enter
mov
inc
sub
adc
mov
mov
pop
dec
push
sub
pop
sub
pop
sbb
or
data16
scas
aaa
push
insl
pushf
mov
lret
gs
push
push
pop
daa
xchg
adc
je
stos
cs
add
mov
andb
jae
dec
loopne
out
pop
cmc
jg
ss
incl
push
cmc
dec
outsb
pop
add
and
xchg
mulb
rolb
or
xchg
lahf
movsb
jmp
gs
icebp
jle
movsl
inc
test
push
addr16
xor
test
adc
ds
mov
repz
mov
mov
push
push
stos
popa
lret
cmp
lea
pushf
add
lret
adcl
sbb
sarb
xor
add
outsl
lds
insb
int
adc
sub
pop
jmp
pop
mov
fidivrs
loopne
in
mov
cmp
or
jo
mov
pop
and
insl
pop
sbb
les
and
pop
cmc
test
fs
out
xor
xor
addb
xor
loopne
jl
fildll
pop
aaa
pop
call
insb
aad
jae
addr16
pop
shr
add
aad
pop
faddp
or
loope
or
mov
jg
adc
loope
mov
cmp
mov
sbb
mov
subl
sub
movzbl
jmp
testb
mov
rcll
mov
les
xchg
loope
mov
jmp
add
iret
pop
inc
cmp
scas
dec
aas
lcall
push
mov
movsl
pusha
xor
test
mov
rcrb
add
pop
or
or
jns
flds
cmpsl
adc
je
add
xor
lret
fldenv
mov
lods
fiaddl
movsb
xor
aas
hlt
and
in
out
div
sub
mov
mov
mov
mov
adc
push
aam
repz
imul
push
loop
mov
test
movsb
xchg
dec
sub
mov
enter
jnp
sbb
xchg
pop
add
out
dec
xchg
mov
insb
push
iret
psubb
lods
andl
fdivrl
pushf
sbb
jg
ret
adc
adc
jmp
mov
push
outsb
push
inc
push
sub
and
mov
mov
mov
xor
rorl
stos
popa
fsubl
ljmp
push
movsb
add
popa
jp
pushl
pop
pop
lret
ja
mov
movsb
rorb
lret
sub
loopne
addr16
mov
popf
lret
jbe
test
clc
sub
mov
adc
inc
clc
imul
pushf
add
xor
jnp
test
mov
int3
rcrb
leave
gs
jb
dec
cwtl
lahf
test
repz
cmp
shll
xor
and
mov
inc
mov
jle
mov
pusha
dec
xchg
jnp
xor
dec
mov
or
and
mov
lods
add
repz
inc
pop
sbb
movsb
in
lds
jecxz
xchg
lahf
pushf
xorl
cmpsl
sbb
fldl
shlb
xlat
xchg
sub
push
lcall
push
out
mov
ret
add
and
dec
aad
push
xchg
ja
sub
xchg
pop
clc
adc
stos
push
inc
pop
push
pop
outsb
mov
inc
sbb
add
push
fidivrs
out
dec
fidivs
out
scas
pop
out
mov
lret
ret
xlat
xor
lods
cmpsl
or
ret
popa
ss
pop
in
dec
mov
test
sbb
sbb
test
lcall
addr16
or
pop
ja
faddl
out
or
push
test
clc
inc
mov
shl
fstpl
dec
pop
adc
dec
dec
mov
dec
xorb
xchg
ja
mov
rorb
or
mov
sub
loopne
mov
cli
and
cwtl
dec
push
lods
inc
mov
lods
jp
jp
xchg
imul
data16
jne
mov
fsubrs
jns
dec
jge
xchg
jb
test
loopne
std
mov
sbb
jnp
test
cmp
and
pop
sub
orb
xchg
cmpsl
inc
loop
pop
cmp
flds
in
jb
dec
lods
out
leave
or
push
mov
cmp
mov
arpl
jnp
fisttps
push
cmp
aaa
cmp
cmp
jbe
js
mov
out
fisttpll
and
lds
push
les
in
pusha
push
cmp
inc
sub
adc
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
jecxz
int3
mov
mov
roll
xor
mov
outsb
sub
push
mov
lock
daa
and
outsb
pop
es
movsl
rcrl
sub
jle
push
jl
xchg
sub
mov
negb
push
adc
dec
popa
cs
pop
xor
xchg
dec
clc
push
neg
ret
in
movsl
cwtl
fbld
push
je
add
or
cltd
dec
int3
push
shl
adc
scas
xor
js
das
pop
aad
lods
push
adc
divb
xchg
and
cld
pusha
sbb
es
push
pop
movsb
sub
cmp
in
mov
cltd
mov
sbb
sub
stc
lahf
test
mov
repz
das
arpl
loopne
jnp
aad
mov
dec
ljmp
dec
lret
xor
arpl
sub
push
pushf
flds
loopne
adc
or
mov
xchg
scas
outsb
pop
cmp
cmp
daa
fistpl
int
sbb
push
test
cmp
icebp
pop
sbb
xchg
repnz
popa
push
add
jecxz
test
sbb
mov
inc
cmp
lea
insl
insb
ret
fwait
cs
xor
xor
dec
xchg
push
aam
mov
cmc
dec
idiv
add
and
and
push
jp
mov
adc
inc
test
mov
dec
sub
jmp
sahf
stos
aaa
inc
out
lock
dec
inc
andl
out
mov
shl
jmp
dec
aaa
loop
ljmp
pop
add
cmp
pop
pop
pop
push
cmp
ljmp
mov
mov
ret
cmc
out
sarl
mov
mov
das
enter
or
push
test
mov
into
jno
xor
gs
fmuls
mov
shl
movsb
jne
jne
mov
pop
lock
aad
lock
faddl
enter
in
xchg
sbb
xchg
ds
push
mov
fisubs
into
loopne
sub
cwtl
push
fbstp
mov
push
lret
mov
cmp
mov
addr16
outsb
mov
imul
mov
cmp
les
fdivrs
or
or
jl
mov
jg
xor
sub
rolb
and
xchg
or
jge
insl
inc
push
test
dec
cmpsl
inc
and
sub
xor
int
out
inc
fisubrl
jne
xchg
push
pop
pusha
arpl
in
inc
or
pop
jbe
cwtl
mov
cmpsl
pop
je
test
inc
scas
arpl
loopne
out
cmp
popf
fsubrs
xor
mov
pushf
sahf
rolb
push
repnz
call
cmp
jmp
fs
xchg
test
jecxz
fsubrl
stos
aam
insb
push
faddl
mov
lock
mov
mov
add
xlat
sbb
mov
ret
ja
dec
xchg
inc
dec
fdivr
lahf
cmpps
sar
out
in
lds
adc
mov
push
adc
jge
or
clc
shlb
mov
adc
out
cmpsl
stos
sub
cmp
rol
inc
nop
push
sub
add
inc
xchg
outsl
inc
add
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
cmp
sarb
mov
lahf
push
add
lods
dec
sub
or
lods
clc
and
inc
ljmp
and
mov
sbb
gs
cmp
xor
lock
jp
das
push
push
cltd
mov
pop
icebp
fldl
or
or
testl
or
jmp
add
sbb
mov
push
xchg
pusha
add
shr
xor
mov
cmpsl
test
std
incb
test
mov
shrl
mov
movsb
bnd
imul
daa
fmuls
out
ss
inc
mov
out
xchg
sub
or
pop
mov
inc
gs
push
lret
aam
add
mov
sbb
dec
sahf
mov
in
outsl
inc
pusha
in
push
jmp
int3
push
lahf
fwait
lret
int
lds
arpl
sbb
clc
cmp
int3
xchg
int
pop
xchg
or
pusha
stos
iret
ljmp
stc
xchg
adc
jbe
cmc
sbb
mov
jmp
sub
or
cltd
jl
nop
cmp
dec
lret
mov
sbb
scas
jns
jno
mov
dec
cwtl
movsb
clc
push
cmp
in
icebp
push
push
mov
out
mov
adc
sbb
std
jns
xchg
xchg
push
aad
mov
stc
scas
test
fistps
pop
pop
push
xor
fiaddl
push
jmp
add
pop
pop
pusha
mov
pop
les
xor
das
and
movsl
sub
cmp
mov
adc
adc
imul
fdivrs
or
sub
xor
and
pop
adc
pop
addb
cmc
xor
mov
jne
pop
push
fdivs
sbb
icebp
jae
lds
adc
xchg
cli
cmc
xchg
lret
and
in
stc
sub
or
test
sbb
cmpsl
add
sbb
and
mov
inc
rcrb
movsl
mov
mov
scas
add
dec
push
jne
fbld
mov
call
aad
push
int
inc
inc
and
mov
rcll
sub
sub
push
jge
loopnew
sub
xchg
cltd
arpl
mov
jmp
or
cmp
and
push
cmpl
push
inc
jnp
jb
mov
or
adc
sbb
loopne
mov
into
add
pop
int3
jmp
jg
cmp
push
push
pop
rorl
scas
inc
leave
lods
test
add
js
pop
xor
fs
stos
mov
push
inc
mov
fstpt
data16
mov
jle
test
xchg
add
dec
or
sub
xchg
jl
fdivl
shl
cmp
stos
xchg
punpcklbw
aas
leave
rorl
push
pushf
pop
data16
mov
mov
sti
pusha
in
rorb
insb
xchg
push
int3
add
and
jp
push
cmp
push
imul
fisttpl
std
testb
lret
flds
push
loop
and
cli
jle
mov
push
push
fbld
test
stc
movsl
in
mov
add
add
inc
add
pop
incb
add
dec
test
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
pop
popa
mov
les
xchg
int
ret
cmc
imul
mov
mov
lds
cmpb
adc
xchg
xlat
cmp
aas
pop
ds
jae
in
mov
mov
push
lahf
cmp
cld
imul
cmc
scas
jmp
hlt
pop
jge
cwtl
sub
sbb
dec
lea
aad
ret
jle
cmp
cmp
sub
cltd
push
aad
aaa
push
in
mov
or
addl
jmp
jae
xchg
in
inc
sbb
lahf
dec
movb
clc
push
or
dec
lods
loop
mov
jae
jbe
push
out
roll
mov
xor
push
enter
fistpl
sub
stc
cmc
sbb
push
mov
jmp
scas
cmp
movsb
mov
push
mov
cltd
outsl
dec
dec
add
movsb
cmp
xchg
fs
add
cld
sahf
shlb
arpl
pxor
int3
push
jmp
jnp
sbb
sub
and
jmp
pushl
jnp
jle
std
lss
xor
inc
mov
push
out
mov
icebp
hlt
pop
push
das
arpl
lods
ret
stc
inc
bound
mov
sub
in
mov
jo
jo
lds
std
add
out
or
je
jbe
mov
shlb
cmp
jle
shl
jno
lahf
pop
lret
dec
in
test
fwait
fwait
xchg
addr16
inc
andl
fiadds
scas
and
mov
xor
cmp
fs
push
ja
jecxz
mov
dec
leave
sub
ds
ficoml
push
scas
jb
or
inc
rclb
daa
lret
lret
adc
mov
clc
jno,pt
mov
adcb
int
ret
cmp
mull
sahf
sub
cld
dec
andl
dec
mov
and
cmp
jae
cli
outsb
fdivl
sub
mov
div
loope
xor
dec
loope
xchg
or
int
cmp
xchg
in
sub
addl
dec
mov
fldl
scas
xor
fsubl
cmpsl
push
iret
outsb
xor
mov
push
push
adcb
out
stc
mov
mov
adcl
mov
sbb
lods
sub
adc
mov
sub
sub
and
adc
shll
es
loop
xlat
js
cmc
in
stos
push
adc
out
repz
cs
ja
xlat
std
int
sub
mov
push
mov
lods
push
enter
xchg
pop
cs
mov
cmp
mov
rcr
roll
repnz
clc
xor
subl
aas
fdivrl
ror
shrl
mov
push
loop
pop
xor
pop
xor
lahf
mov
mov
xor
or
and
jl
sar
pop
test
jne
std
inc
pop
test
test
addr16
dec
push
loop
xchg
scas
cmp
cmp
lea
dec
in
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
stos
clc
movsb
mov
les
xchg
lret
mov
push
xor
idivb
jle
lea
mov
aam
push
hlt
cltd
mov
ror
jl
pop
xor
popa
pop
inc
cmp
or
ds
pop
out
push
popa
icebp
sbbl
dec
jmp
cmp
push
push
push
inc
inc
jp
std
inc
cmp
add
out
or
rcll
mov
mov
add
ret
lahf
jb
movsb
outsl
mov
sub
pop
insb
push
add
dec
clc
inc
dec
mov
xchg
sti
ds
test
pop
or
mov
stc
xor
inc
inc
pop
push
add
adc
or
mov
test
mov
fadds
hlt
ret
inc
sub
std
push
lods
dec
popa
push
pop
push
cmp
out
les
fs
push
mov
cltd
pop
xor
clc
jge
mov
orb
lret
iret
aam
mov
movsb
rcr
xchg
stos
out
mov
push
mov
push
and
xchg
lock
and
mov
xchg
mov
push
xor
jecxz
insb
in
pop
fistps
stc
mov
arpl
cmpsb
mov
bound
dec
xor
fistl
js
sarl
jae
pop
sarb
cltd
sbb
jo
or
xchg
add
inc
stos
cmpsb
mov
sub
shl
xor
pop
dec
sbbl
push
fsub
pop
adc
jle
or
cmp
loop
scas
mov
test
out
adc
mov
loope
lods
sarl
mov
xlat
lahf
hlt
adc
rep
or
mov
mov
pop
cmp
scas
and
test
div
push
jns
mov
inc
cmp
movsl
out
mov
cmp
cmp
stos
mov
pushf
adc
jecxz
sub
jge
push
xchg
mov
cmpsl
add
aaa
loope
push
cmp
dec
ljmp
inc
mov
subl
sbb
pusha
inc
mov
dec
xchg
aaa
aas
rcrb
xor
sub
mov
push
push
in
jno
inc
in
scas
sbb
jp
inc
xor
dec
lea
sub
cmp
test
popf
push
call
cli
sbb
inc
jecxz
fsubrl
xchg
mov
xchg
push
jp
stc
xor
jne
lcall
dec
jle
pushf
in
mov
and
mov
inc
xor
jle
cld
lods
sub
cmp
push
popf
mov
shrb
xchg
jecxz
jb
out
addr16
sub
test
rcrb
enter
cs
pop
in
mov
loopne
mov
test
cmpsb
pop
mov
test
loope
insl
xor
add
addr16
lret
lods
jl
scas
ds
or
mov
gs
push
jne
and
ret
cld
leave
sbb
jne
xchg
shrl
gs
in
ret
cmc
mov
xchg
cmp
and
out
out
lret
adc
loop
loopne
adc
mov
icebp
mov
xchg
add
and
pop
sbb
in
push
xchg
fldcw
inc
cli
jle
dec
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fstpl
scas
iret
mov
les
ror
ds
mov
mov
idivl
cmp
mov
pop
inc
xlat
adc
ret
cmpsb
aaa
dec
jge
or
in
xor
jecxz
mov
cs
adc
mov
in
insb
incl
dec
pop
or
and
inc
and
jbe
adc
jecxz
inc
je
cld
push
sahf
jae
cwtl
dec
jmp
xor
mov
imul
xor
hlt
pop
cld
scas
fadd
mov
loop
jge
dec
inc
and
sbb
fisubrs
clc
jne
adc
loope
jg
pop
mov
xor
testb
push
adc
lret
sbb
adc
mov
xor
fstpt
scas
pop
mov
aad
imul
add
sbb
fcomps
shl
push
icebp
repz
and
cmp
cs
and
imul
push
int
insb
xchg
cmp
inc
mov
fs
or
mov
inc
add
out
sbb
push
enter
mov
jmp
xchg
and
cmp
mov
xchg
lods
repz
xor
jno
sub
repz
mov
mov
push
imulb
and
outsb
aad
lods
push
out
add
das
mov
mov
adc
shl
push
xchg
jmp
sbb
jmp
cmpsb
dec
mov
xchg
adc
frstor
movsb
cmp
enter
rcl
in
test
mov
popa
cmpsb
ficomps
add
mov
inc
movb
je
mov
out
jae
pop
cltd
jo
or
dec
cltd
ss
adc
out
cmp
jp
std
pop
add
push
je
enter
sbb
jl
xlat
sbb
xorb
shrb
pop
and
fildl
dec
fsubl
ret
jae
xchg
aad
pop
inc
xchg
addr16
repz
jb
adc
fs
xchg
adc
hlt
ja
shl
cmpsl
or
cmp
cli
mov
mov
out
inc
stos
mov
inc
sbb
push
dec
xchg
sbb
adc
outsb
mov
fsub
cmp
mov
inc
sbb
push
fmull
pop
xor
call
xor
mov
adc
jmp
xor
fucomp
add
push
sbb
sub
xor
push
out
bound
jo
shlb
xchg
outsl
xorl
push
cmp
gs
sahf
orl
inc
lret
xchg
popf
imulb
sub
mov
sbbl
cwtl
outsb
out
add
fisubrl
cmpsb
dec
push
dec
pop
imul
popa
pop
stos
fs
cmp
movsl
dec
xchg
add
pop
cld
cmp
cmp
dec
xchg
mov
dec
and
xor
pop
lcall
mov
loop
jmp
dec
fwait
sub
ret
jo
call
pop
lcall
or
in
loop
mov
aad
cli
jnp
xor
mov
adc
lds
jbe
std
movsb
jge
cmp
sub
jae
leave
test
cmp
cwtl
loop
pop
shrd
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
icebp
add
sub
xor
mov
pop
addr16
pop
call
es
les
popa
cmp
sub
testl
fcoms
loop
lea
adc
cld
and
fnstsw
xorb
mov
xchg
jb,pt
sbb
or
divb
cwtl
sub
lret
or
pop
adc
or
mov
fldenv
into
leave
dec
jg
and
mov
aam
xchg
cld
shll
mov
nop
aaa
movsb
push
add
push
lahf
lods
dec
test
cld
mov
repz
pop
pop
pop
dec
mov
cmp
inc
lock
ds
insb
push
cmp
ror
adc
imul
jns
jle
mov
sti
mov
sbb
and
push
sarl
add
mov
ja
stc
xlat
imul
jecxz
dec
and
mov
sbb
scas
mov
inc
rol
shlb
push
push
orl
rorb
push
bound
pop
aas
jg
es
sahf
mov
or
inc
lock
cltd
ret
movsl
or
add
cmc
imull
push
sti
rcrl
adc
push
push
int
push
jno
test
xchg
sub
add
push
mov
cmpsl
imul
ret
jnp
ds
sub
lret
js
xchg
mov
add
rcr
test
lahf
mov
dec
xor
inc
imul
pop
jp
jp
out
aam
pop
sbb
out
sbb
dec
dec
cld
jbe
call
inc
test
jne
xchg
pop
xchg
inc
cmpsb
int
sub
xor
imulb
je
not
inc
pop
call
lret
cmpsb
pop
sub
inc
fdiv
xchg
xchg
testb
jns
pop
std
imul
out
and
lret
rcl
mov
lods
imul
ror
inc
pop
mov
ret
cmp
cli
es
test
stos
mov
scas
icebp
or
add
inc
sbb
sarb
mov
sub
mov
lea
and
sub
mov
xor
add
cld
push
xchg
push
les
cmp
jo
movsl
mov
pop
outsb
icebp
or
and
int3
in
adc
repnz
xor
and
cld
push
cmp
lods
mov
imul
sub
in
mov
mov
xor
add
flds
call
scas
cld
jae
sbb
addl
ret
les
dec
pop
lret
sub
fisubrl
daa
xchg
sub
mov
push
iret
je
jno
pop
int
dec
jbe
cmpsl
xlat
sarb
les
test
xlat
wbinvd
mull
mov
push
xchg
rolb
out
adc
lret
fsubl
test
pop
movsb
jno
stc
nop
sub
fsubr
in
xchg
testb
jbe
add
leave
es
push
add
aam
cwtl
or
in
or
mov
jmp
sub
popa
aaa
lret
inc
pop
dec
mov
xchg
mov
aas
test
addl
or
mov
add
addl
push
sbb
cmp
add
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
rcll
cmc
mov
mov
mov
and
ret
dec
mov
test
mov
mov
jb
cmp
inc
xor
mov
and
lock
adc
rcr
subl
xor
adc
jae
mov
mov
shr
xlat
outsl
and
pop
shll
orl
aad
xchg
into
cmp
push
mov
jne
push
push
test
call
xor
fidivl
sbb
inc
xor
repnz
inc
rcrl
notb
xor
roll
rcr
int
mov
fcoml
fsubs
ficoml
sub
fdivrs
lea
lret
hlt
adc
repnz
rcrl
mov
data16
dec
pop
ds
mov
pushf
dec
dec
xchg
addb
add
lods
adc
cmc
cmc
je
mov
out
sub
cmpsb
add
out
xchg
lods
pop
loop
and
ret
ja
mov
inc
sub
loope
xchg
fildl
pop
jp
xchg
call
adc
aam
test
popf
pop
or
add
sub
and
das
imul
sahf
lods
mov
mov
dec
push
adc
jns
xlat
cmp
jmp
jbe
pusha
andb
sub
fwait
push
test
add
jo
ja
and
fisubs
nop
ljmp
int
cmpsb
mov
das
cmp
test
shrl
cmpsl
cmp
push
sbb
std
pop
pop
mov
scas
fisttps
aaa
pusha
or
stos
sbb
pop
es
ss
pop
sbb
cmpsb
daa
push
je
out
xlat
pop
insl
fcomip
mov
fdivrp
jae
mov
loopne
sbb
and
push
subb
or
mov
and
or
pop
ficoml
fidivrs
outsl
xor
mov
fisubl
lods
and
sbb
sub
fsubs
nop
push
out
mov
lds
fisttps
push
outsb
mov
jmp
sti
add
fisttpl
mov
das
nop
cmp
inc
pop
cli
cltd
cltd
xchg
cmp
pop
pop
imul
jl
jl
inc
pop
or
cwtl
dec
fwait
je
jne
pop
outsb
lcall
jno
scas
add
ret
xchg
adc
push
pop
jl
add
mov
nop
mov
test
repnz
adc
scas
shll
fwait
outsb
cmp
sbb
cmc
add
jge
jo
int
pop
stos
pop
jecxz
fisttps
es
xchg
gs
cmp
xchg
mov
sub
in
sar
mov
pslld
fistl
cli
pop
pop
fldt
iret
rolb
xor
aad
jno
loop
inc
sub
and
dec
cltd
scas
popf
pushf
push
aad
sbb
rcrb
clc
inc
mov
adc
pop
imul
out
movsb
repz
int3
push
dec
cmp
popf
xchg
push
out
mov
call
dec
jl
adcb
cltd
pop
mov
jnp
std
lods
clc
fmulp
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
push
jb
sbb
xchg
or
dec
push
inc
push
push
in
sti
sub
or
scas
test
dec
jb
ss
xchg
lret
xchg
jne
xchg
scas
jae
lea
jno
dec
xchg
push
cli
pop
and
movsl
test
shl
xor
scas
lds
xchg
loop
call
rorl
dec
scas
cwtl
ret
ljmp
xor
mov
imul
push
push
movsl
dec
fidivl
sbb
aad
cltd
push
iret
mov
adc
or
scas
adc
and
pop
sbb
test
mov
pop
fwait
or
xor
mov
lock
cmc
aaa
addr16
cmp
inc
push
loop
je
xor
test
cmp
mov
push
pop
push
and
xorb
mov
xchg
pushf
std
push
dec
clc
xlat
add
cli
dec
mov
xor
pop
mov
cmp
xor
xchg
xchg
push
xor
fldt
mov
jmp
and
jg
out
or
adc
rclb
jo
inc
or
fdivrs
pop
imul
fs
push
jecxz
add
jg
cwtl
pop
push
aad
negb
mov
mov
adc
hlt
inc
js
mov
sbb
int
push
push
ffreep
lds
xchg
jmp
cli
push
cmp
jbe
pushf
shll
insb
subl
aas
call
inc
or
push
fadds
jp
push
lods
push
sub
cs
std
mov
xchg
shll
es
adcb
sub
jns
xor
lret
xchg
arpl
repz
in
cwtl
inc
mov
pop
arpl
add
xchg
sub
or
sbb
mov
loop
mov
sahf
insl
xchg
jp
jbe
mov
loope
mov
push
dec
mov
cmp
es
xor
add
jae
mov
mov
inc
xor
xor
lods
xor
dec
fstpt
sub
cmc
mov
lret
and
mov
push
lar
add
repz
or
aam
sub
rclb
cmc
out
push
mov
ljmp
mov
jg
xchg
add
js
ret
int3
and
aas
jmp
xor
sub
subl
mov
jbe
inc
xor
cld
mov
sub
mov
inc
imul
aad
sbb
mov
fistl
aad
stos
and
and
loop
adc
cmp
jns
and
pop
aaa
jae
jno
icebp
ret
out
bound
jg
fists
shrl
mov
mov
cmc
cmp
pop
mov
xor
in
jo
lret
sti
mov
jl
mov
nop
test
mov
dec
cli
pextrw
mov
ficomps
xchg
pop
cmp
and
jnp
sub
ret
add
mov
flds
orl
shrb
mov
sub
inc
cmpsb
rcl
mov
pop
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
sbb
mov
mov
movsb
pop
adc
pusha
xlat
cmp
add
jo
jmp
ret
popa
fcomps
jo
and
sbb
adc
je
loopne
inc
push
adc
mov
dec
lcall
xor
lock
cmc
jg
inc
js
lods
sahf
ret
test
js
inc
adc
cmp
dec
addb
paddd
pop
dec
pop
ljmp
jns
and
mov
inc
jno
inc
inc
lea
cmp
out
mov
movsb
das
mov
mov
ja
data16
add
aaa
push
xchg
insb
jmp
xchg
nop
push
inc
fcmovnu
es
out
add
jb
sbb
add
mov
adc
popa
mov
inc
cwtl
push
xchg
out
test
cs
aaa
ja
out
movsl
enter
out
mul
in
inc
dec
loopne
mov
inc
jne
inc
pop
ror
ds
test
or
in
pop
dec
gs
lahf
mov
pmaxub
mov
aaa
repnz
or
pop
cmp
outsl
cmp
mov
pop
nop
push
push
adc
shrb
arpl
jbe
rorl
or
xor
into
push
xor
push
lcall
adc
pop
scas
pushf
and
in
rclb
sarl
popf
cmp
outsl
sbb
mov
push
mov
xchg
mov
dec
mov
adc
gs
testb
or
call
dec
pop
clc
std
push
or
xor
mov
and
imul
mov
mov
rcrb
scas
xor
pop
mov
cmp
xchg
mov
popf
fisttps
mov
cmpsb
loop
in
jle
jle
in
cmc
inc
mov
dec
jmp
mov
subb
outsb
imul
dec
loope
xchg
cli
adc
cmp
inc
sahf
mov
flds
xor
div
mov
and
jns
lahf
push
jecxz
or
jb
setnp
aaa
or
loope
jo
into
movsb
jl
movsl
pop
nopl
mov
adc
imul
jno
iret
imul
ret
xor
mul
pop
sbb
mov
cmp
sbb
or
jns
stos
inc
ljmp
jb
orl
xchg
xchg
jo
pusha
push
pop
push
sub
mov
cmc
mov
and
add
cmpsb
dec
xlat
push
fdivl
les
xchg
into
adc
lock
leave
mov
mov
xor
xor
xlat
enter
adc
add
loopne
fcoml
bound
shll
test
sub
cmp
pop
dec
or
inc
dec
cmpsl
mov
loopne
imul
rol
push
fistpl
shrl
and
sti
out
mov
cs
test
fidivrs
sbb
cwtl
mov
sub
sbb
aaa
mov
adc
das
sti
xorl
dec
fdivr
jmp
out
adc
fisubrs
push
repnz
mull
test
and
inc
jnp
push
mov
xor
cmpsb
test
pop
lahf
add
push
cltd
cli
pop
mov
xlat
cmp
pop
mov
inc
icebp
sbb
pop
outsl
fwait
movb
mov
xchg
cmp
loope
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
jae
mov
mov
inc
or
ds
or
push
fidivl
push
push
mov
push
pop
sbb
nop
idivb
dec
add
push
pop
dec
inc
int
outsl
fwait
sbb
or
inc
push
pop
mov
fsubl
jge
mov
mov
push
dec
cmp
imul
mov
pop
cltd
mov
fidivrl
mov
iret
inc
test
sub
data16
shll
ss
movsl
into
mov
mov
nop
pop
cmpsl
dec
mov
sbb
jae
hlt
lods
pop
sbb
popa
mov
sub
loope
xlat
outsb
in
loopne
sbb
ffree
cmp
cmp
cmpsb
data16
js
inc
aam
fsubs
dec
push
and
addr16
dec
neg
mov
into
hlt
loop
aad
scas
mov
loopne
jnp
push
sbb
data16
jb
outsb
mov
xchg
and
push
jmp
test
jne
mov
cltd
and
inc
int
adc
sti
cmp
or
stc
aaa
sub
push
mov
push
sub
sbb
lods
lock
lret
add
sti
and
repz
pop
sti
adc
mov
aad
xor
int3
jne
cmpb
jnp
adc
dec
inc
mov
mov
outsl
leave
mov
xor
in
sub
and
inc
mov
or
jle
mov
inc
inc
jle
cmp
pop
ficoms
aas
dec
xor
jmp
or
push
inc
add
add
in
xlat
call
mov
movsb
daa
inc
popf
and
and
rcll
fwait
lods
fiadds
sbb
lret
enter
mov
add
jno
push
jns
shll
inc
adcl
imul
cwtl
and
lods
adc
jne
dec
xor
loope
or
pushf
jo
pop
iret
lds
pusha
dec
mov
cmpsl
xchg
jecxz
lock
sub
loope
push
dec
sysexit
bound
lret
mov
into
lea
mov
lret
sbb
cmpsl
test
int
gs
sbb
jmp
movsl
repz
push
mov
cwtl
mov
leave
jp
xchg
loop
jae
xor
imul
fidivs
in
sbb
mov
adc
adc
orb
lock
gs
scas
ficomps
and
mov
sub
mov
out
fwait
xchg
jp
push
push
shrb
rolb
xor
xlat
cmpsl
adc
aaa
lcall
xchg
dec
sbb
adc
sti
lcall
xchg
data16
out
inc
mov
pop
xlat
es
sbb
mov
mov
pop
push
testl
shll
fisttpl
loop
and
cmp
xchg
pushl
fwait
cmp
int
sahf
push
data16
jl
dec
sub
xor
icebp
push
arpl
jnp
test
xchg
cmc
sub
stos
inc
mov
xchg
jno
add
out
movsl
mov
loopne
inc
loop
imul
in
mov
lds
push
punpcklbw
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
xlat
jecxz
adc
mov
xor
mov
lods
rep
loopne
lea
sub
cli
jo
lret
nop
rol
icebp
pushl
std
loope
push
lods
sahf
mov
out
sahf
sub
adc
lret
sbbl
xor
repnz
arpl
fcmovb
cmp
jnp
js
stos
and
mov
pop
ret
lcall
pop
xor
leave
dec
mov
cs
aaa
sbb
push
insb
adc
rcrb
pop
or
mov
arpl
jmp
or
nop
fisubs
sbb
dec
js
mov
es
leave
daa
or
mov
xchg
outsb
int
fiaddl
test
repz
or
add
cmp
rcr
jo
test
mov
and
bound
ss
repnz
pop
push
das
mov
mov
and
adcl
jo
sub
in
mov
int3
push
loopne
xor
out
cmpl
stos
imul
notb
mov
inc
mov
mov
fcoml
data16
iret
jbe
cmp
adc
out
push
sbb
mov
inc
pop
push
mov
scas
xchg
in
cmp
jp
adc
mov
mov
push
stc
sbb
push
mov
lods
sahf
mov
in
sbb
mov
xchg
and
ss
mov
scas
jae
popa
ds
shr
xchg
and
dec
clc
or
imul
repnz
sarb
test
and
mov
xor
in
lahf
mov
cltd
outsb
insb
in
adc
cltd
sub
jge
inc
jl
imul
and
pop
adc
fwait
or
jbe
movq
xor
shl
test
and
jns
in
lret
jae
in
mov
cmp
sbbb
insb
mov
jae
mov
shlb
stc
jl
jo
pop
mov
xchg
mov
sbb
std
out
out
sub
loope
arpl
jle
jns
les
jbe
sbbl
ret
out
xlat
mov
push
pop
xchg
pusha
jne
ljmp
push
ret
sbb
xchg
xchg
mov
adc
mov
or
sub
dec
pop
push
mov
mov
mov
xchg
xor
rclb
pusha
jge
mov
lret
mov
push
stos
and
pop
lock
sub
jne
push
movsb
jb
mov
out
pop
gs
jge
arpl
les
add
mov
test
pop
sahf
push
jle
inc
xchg
lahf
sbb
test
test
gs
mov
add
fldt
cmp
add
sti
fnstsw
add
aaa
inc
jecxz
aas
sub
push
sar
fiaddl
mov
inc
push
mov
pusha
cmpsb
mov
sub
cmp
jbe
imul
dec
sbb
shll
loop
xchg
inc
shlb
repnz
das
mov
xor
dec
xor
in
aaa
mov
or
outsl
sbb
push
roll
sbbb
fsubrl
nop
stos
movb
sbb
adc
add
loopne
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
scas
incb
xchg
mov
les
fcoml
cld
push
push
pop
pop
in
push
not
inc
outsl
mov
lods
cmp
in
cmc
mov
xchg
stos
sub
shlb
mov
mov
outsb
push
inc
and
xchg
fldt
fisubl
mov
xor
sub
ljmp
adc
mov
xchg
jno
lahf
call
in
movsl
idiv
mov
jbe
jae
shrb
lret
popa
push
adc
mov
sti
test
add
adc
xchg
xchg
lods
imul
xor
out
scas
shll
mov
int
sbb
or
or
jne
aaa
push
xchg
js
adc
xchg
cmp
pushf
stos
sbb
xchg
sbb
push
jecxz
lahf
lods
xchg
dec
mov
adc
popf
gs
mov
rcrl
cmovae
and
mov
jne
xchg
xor
js
mov
adc
xchg
adc
adc
mov
ljmp
mov
test
imul
push
ret
inc
insb
add
lds
jae
xchg
inc
stc
cltd
test
loopne
inc
mov
aad
mov
cmpl
xor
adcb
fistpl
jo
nop
jge
push
insb
pop
xlat
mov
mov
sub
int
imul
stc
and
or
leave
adc
lods
imul
dec
in
insl
jae
sbb
mov
test
mov
adc
add
mov
mov
sub
xor
inc
jbe
adc
and
mov
push
testl
cwtl
mov
cli
xor
push
outsl
mov
cli
sbb
pop
push
jns
test
dec
jnp
mov
or
popa
push
jno
out
imul
sub
pop
je
out
xorl
test
or
cs
shll
aas
pop
je
fnstcw
mov
mov
repnz
sub
push
sbb
mov
xchg
in
lds
sbb
mulb
pop
inc
dec
fdivrl
lahf
xchg
loopne
inc
pop
adc
jmp
fst
loopne
out
imul
stc
mov
mov
outsb
dec
je
les
call
mov
and
repz
push
fs
pop
out
fdivl
pusha
mov
mulb
mov
push
ret
xchg
inc
inc
insl
je
in
sbb
pop
aas
es
insb
incb
add
movsl
jmp
xchg
movsb
arpl
dec
mov
and
xchg
mov
jl
adcl
pop
pop
push
dec
add
pop
cmp
cs
jge
lahf
mov
cltd
xchg
roll
mov
pushf
sti
inc
pop
fdivrl
pop
test
lret
fs
xor
sbb
mov
loope
fld
das
fidivs
or
sbb
loop
xor
int3
pop
xchg
add
mov
outsb
repnz
cmpsl
xor
adc
adc
xor
push
negb
lret
arpl
mov
cltd
scas
nop
cmovne
dec
mov
pop
jp
or
mov
dec
not
jmp
int
mov
sbb
mov
rcr
aad
xchg
mov
les
fcompl
lret
lea
adc
jp
sbb
push
adc
or
pop
mov
jmp
sbb
adc
xchg
or
mov
xchg
lock
or
xor
cwtl
stc
imul
lods
jl
mov
mov
movsl
xor
adc
into
push
aam
loopne
out
pop
pop
popa
in
repz
lahf
xor
gs
addr16
fwait
push
je
popf
or
dec
or
jp
sahf
push
sub
scas
sbb
arpl
data16
jbe
cmp
les
mov
movsb
inc
repz
sbb
orb
cmp
sub
in
push
inc
mov
sbb
mov
sub
sub
ss
sub
push
ds
stos
inc
jns
aam
incl
loopne
cmp
push
jmp
jne
sbb
aam
into
sub
jo
out
inc
filds
mov
xchg
movsl
xchg
leave
inc
iret
sub
mov
in
inc
or
fs
stos
ret
hlt
xor
arpl
out
fdivs
xor
inc
sbb
mov
sub
mov
mov
and
or
mov
mov
cmc
lods
sub
dec
jo
insl
movsb
or
jmp
add
popf
mov
xor
out
add
mov
in
xchg
jp
fwait
in
and
mov
sbb
rorl
mov
in
scas
mov
dec
push
lcall
repz
sti
xchg
jl
mov
xchg
sub
xchg
pop
stos
cwtl
push
or
aas
cltd
cs
xor
mov
scas
mov
push
gs
sbb
jb
mov
lret
inc
stos
subl
push
arpl
xchg
shlb
rcrl
mov
cltd
jl
mov
clc
fldcw
addr16
sahf
mov
rol
add
xchg
stc
iret
ret
push
hlt
mov
mov
faddl
xor
or
jmp
mov
mov
dec
shl
and
add
pop
inc
mov
mov
jae
jne
neg
adc
cmp
movsl
push
bound
icebp
inc
fs
loop
movsb
mov
ss
stos
fwait
or
mov
lea
test
test
ljmp
rolb
cmp
lahf
jae
add
cld
dec
popf
cmp
dec
sub
dec
popl
inc
lcall
jns
ret
dec
pop
mov
push
movl
fs
cltd
sbb
mov
and
xor
xor
movb
sahf
fwait
jp
jb
pop
mov
dec
xor
pop
jmp
fbld
ds
jp
dec
test
mov
pushf
sub
rorl
or
or
and
lock
test
and
or
sbb
inc
loopne
lea
bound
dec
push
int
lret
out
mull
imul
negb
xor
in
es
pop
leave
lret
cltd
arpl
sbb
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
dec
lods
fstl
mov
mov
les
fnstenv
movsb
jae
out
or
pop
hlt
ret
lods
mov
mov
lret
add
jmp
dec
ret
leave
pop
xor
mov
cmp
std
arpl
jge
jg
mov
mov
sbb
sbb
in
mov
push
stc
dec
mov
or
mov
lret
test
dec
xor
add
lods
adc
popf
pop
out
sti
push
cli
push
xor
fadds
cld
push
and
ja
call
sub
outsb
sub
or
shr
push
adc
sbb
aam
cli
and
mov
mov
out
insb
cwtl
add
pop
jns
int
jae
rolb
sub
mov
out
jae
sub
xchg
push
outsb
pop
inc
cmp
cmp
dec
add
iret
test
mov
pop
sbb
and
dec
xor
bt
mov
fdivl
sub
es
aad
cmc
xchg
push
mov
es
stos
and
jns
addr16
mov
mul
inc
pop
cmpsb
cmp
xor
ds
ljmp
loope
loope
cmp
push
loopne
insb
roll
dec
sub
aas
movsl
nop
sarl
lds
xor
cmc
xor
mov
or
out
test
mov
add
adc
cmp
or
test
inc
xlat
dec
out
stc
pop
lea
test
sbb
xchg
mov
and
cmp
fisubrs
outsl
movsl
mov
mov
sbbb
sahf
inc
xorl
mov
js
mov
sbb
into
sahf
dec
fiaddl
dec
mov
insb
jge
cmp
jno
cmpsl
jmp
mov
out
loop
ret
push
sbb
push
imul
decl
sar
test
mov
lret
or
stos
fiaddl
aam
sub
outsb
xlat
pop
adc
mov
dec
je
cmp
aam
or
int
dec
push
cwtl
mov
test
push
sbb
or
inc
data16
jns
cmp
xchg
in
xlat
pushw
jne
lods
mov
adc
lods
jge
jno
jno
pop
xchg
jb
in
stos
in
cmp
mov
fdivr
sub
add
xor
in
push
push
ds
xor
mov
mov
in
sub
dec
call
lds
clc
jmp
mov
dec
dec
dec
xchg
or
mov
cltd
ss
outsl
test
insb
rcrl
mov
fwait
jae
cmp
movsb
jae
ja
mov
mov
movsl
push
ljmp
pop
mov
or
mov
pop
pop
mov
and
repz
mov
jl
imull
int3
push
xorb
cld
cmp
dec
mov
adc
and
xlat
xor
fld
insl
sub
push
mov
lret
push
inc
mov
xchg
cmp
dec
jb
mov
lret
add
pop
cld
sbb
lds
lock
test
mov
jnp
jns
out
adc
cmp
popf
loop
mov
mov
pusha
sub
xchg
clc
cld
push
dec
mov
ja
or
xchg
inc
pushf
mov
pop
pop
fdivrs
in
add
roll
jmp
faddl
insb
ja
pop
outsb
lods
mov
add
mov
mov
shl
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
fnstsw
add
mov
les
mov
and
outsb
xor
push
mov
mov
shlb
lahf
ja
cmpsl
sbbl
sbb
mov
jns
jnp
sbb
sti
mov
lahf
aas
nop
outsb
test
into
mov
inc
jo
sbb
lcall
push
mov
add
xor
xchg
push
dec
jne
loope
lds
cwtl
aaa
sarb
int3
mov
faddl
pop
mov
mov
or
into
add
stos
sub
pop
lods
lods
fiaddl
dec
xchg
mov
test
lahf
int
aad
xor
loopne
pop
and
bound
jno
shlb
or
lods
inc
mov
pop
pop
pop
mov
fs
cmova
repnz
sti
lret
in
xor
cmp
lret
pop
jp
in
in
std
adc
scas
mov
out
bound
icebp
jle
dec
pop
imulb
fnstsw
or
push
xor
in
mov
movsb
push
call
imul
add
push
test
inc
sbb
cli
bound
sbb
sub
sbb
add
sbb
aad
xor
jg
mov
sbb
js
hlt
mov
shlb
mov
cmp
ljmp
pop
push
push
lcall
jg
aas
add
aad
js
jnp
into
popa
adc
ljmp
jbe
fidivrl
sbb
jl
test
ss
mov
push
add
adcl
mov
mov
ss
ss
pop
mov
mov
iret
adc
xchg
xchg
in
push
stos
lods
repnz
imul
shll
enter
cmc
fldt
lds
iret
test
aas
in
and
inc
xchg
fmul
mov
add
fwait
fs
in
fisubl
add
push
jae
fdivrl
mov
addl
mov
pusha
xchg
inc
cli
mulb
push
fildl
and
in
push
int3
addr16
adc
cmp
cs
int
sbb
jle
or
lds
lret
mov
idivl
aas
inc
cld
mov
into
inc
adcb
icebp
add
fcoml
scas
dec
and
cmp
xchg
nop
sbb
adc
int3
add
inc
mov
xchg
fld1
add
dec
or
ja
mov
insl
add
in
lahf
int
sbb
xchg
repz
imul
fwait
mov
cmpsl
test
add
pop
mov
in
in
jmp
push
sbb
mov
cmp
out
xchg
pusha
jecxz
repnz
mov
push
xchg
mov
cld
jle
sbb
lahf
std
dec
or
mov
iret
add
ret
mov
loop
push
or
out
subb
xchg
popa
push
lret
int
and
dec
and
pop
leave
xor
cwtl
lahf
loop
push
loopne
mov
xchg
cmp
adc
mov
cwtl
mov
fisttps
fstpl
xchg
jbe
adc
cli
cmp
fsubrl
imul
adc
pop
jns
insb
sarb
mov
std
cwtl
sub
andb
cmp
or
jnp
xchg
push
and
adc
lods
or
add
in
jb
bnd
icebp
ja
jns
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
add
sub
mov
les
adc
fidivs
fisubrl
ljmp
lret
addl
shlb
xor
sub
push
aam
or
dec
enter
or
in
dec
or
mov
xchg
jle
push
stos
outsb
sbb
cmp
iret
dec
push
cli
stos
in
ret
pop
in
ja
fwait
sub
dec
in
push
cmpsl
movsb
xchg
jae
dec
pop
inc
jle
in
mov
mov
out
shlb
pop
sbb
in
mov
sbb
aam
and
call
sbb
pop
loope
dec
push
xor
jnp
lea
outsb
lods
inc
insb
fwait
cmpb
cmc
or
scas
int3
addr16
push
cmp
addr16
adc
xor
mov
or
lds
jecxz
inc
daa
adc
mov
xchg
cmp
mov
test
jbe
inc
dec
scas
in
xchg
and
cmp
and
xor
les
sbb
movsl
mov
cmp
pop
mov
cwtl
xlat
mov
xlat
mov
inc
shlb
jnp
divl
inc
adc
repnz
mov
pop
gs
cmp
mov
repnz
sbb
ret
pop
andl
dec
push
test
ret
cmp
testl
lahf
lds
clc
sub
sbb
aam
jo
sahf
add
or
jns
outsl
in
mov
cs
rclb
jecxz
enter
stos
lcall
sub
int
lods
xchg
arpl
cltd
mov
insl
cmp
dec
dec
jge
lret
dec
pop
add
lds
imul
add
mov
mov
emms
lock
mov
movlps
aas
cmp
out
andl
test
jne
subl
orb
lret
hlt
push
pop
dec
jg
and
and
lret
fdiv
aas
inc
push
dec
add
jge
ds
pop
push
orl
inc
mov
xor
loope
sbbl
das
inc
lods
fisttpll
popf
cmp
ret
jl
out
jb
add
xchg
push
imul
pop
fdivrs
jne
popf
in
push
adc
and
push
xchg
fsubl
movsb
repnz
aaa
mov
xchg
hlt
ja
jg
mov
inc
sbb
jns
andl
mov
xchg
mov
mov
sbb
out
jmp
push
mov
cmp
or
ds
mov
loop
fcoml
xorb
adc
imul
cmp
ss
pusha
je
je
lcall
jno
sub
cmpl
test
out
cmp
jne
add
in
mov
pop
hlt
std
dec
fisubl
or
in
adc
outsb
jge
mov
xchg
je
in
in
aas
test
cmp
dec
ret
inc
in
aam
xchg
pop
out
mov
std
push
fadds
push
test
add
add
dec
dec
icebp
mov
push
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
mov
mov
les
rcll
pop
jne
int
jne
pop
jp
cwtl
pop
stc
dec
test
dec
insb
lret
cmp
mov
push
aaa
sahf
xor
imul
nop
loop
adc
mov
cld
movsb
push
xorb
cmpsb
cmp
das
jle
ljmp
nop
repnz
fwait
pop
xchg
push
pop
mov
pop
xor
xchg
add
fsubl
add
cmp
xchg
sbb
stc
adcb
inc
scas
push
in
outsb
into
pop
andb
bound
cmp
and
je
fcmove
outsl
je
sbb
fcomp
dec
lcall
into
sbb
ds
pop
sbb
addr16
jg
pusha
push
push
pop
ljmp
and
add
inc
cmp
fwait
push
and
push
imul
add
pop
and
repz
aas
enter
outsl
add
jns
cltd
xlat
sub
outsb
ja
or
mov
mov
test
pop
mov
and
lea
xor
jo
sahf
lret
rcrb
fisttps
or
pop
arpl
push
sbb
inc
divl
stc
push
push
shrl
xchg
aaa
bound
sahf
or
xor
ss
or
pop
cltd
adc
or
push
mov
fdivs
inc
fists
popa
orl
lods
ffreep
sbb
clc
stc
lret
dec
cmpsl
sbbl
push
jb
incl
mov
jbe
cmp
jno
add
jl
cmp
xchg
xorb
push
push
in
sti
pop
ljmp
rorb
dec
push
push
nop
mov
sbb
mov
sbb
xor
out
insl
hlt
add
lret
movsb
cmp
js
aam
cld
lock
imul
mov
xor
pop
xchg
push
push
mov
add
cwtl
lret
ds
adc
je
loopne
or
jp
std
nop
mov
xchg
fisttps
sbb
xchg
jge
sarl
loop
ficomps
lock
push
fwait
push
clc
dec
fwait
rep
mov
lock
mov
mov
mov
lahf
cmpsb
data16
imul
inc
inc
xor
arpl
xchg
sbb
mov
mov
xchg
aad
mov
inc
inc
jl
loope
push
mov
dec
mov
cld
lods
mov
pop
out
sbb
or
or
test
rolb
pop
sub
loope
aaa
inc
or
jge
mov
ret
ja
jl
xchg
test
out
aaa
cld
cmp
mov
sub
and
adc
cld
leave
leave
and
push
inc
xchg
cmp
adc
enter
cltd
adc
aas
jno
mov
ret
std
push
push
xorps
dec
in
jge
mov
movsb
jnp
std
dec
fnsave
pop
mov
xchg
jle
sub
cmpsl
repz
lods
xchg
mov
cmp
lret
aad
push
dec
mov
sar
jg
push
faddl
rol
pop
mov
push
jmp
incl
lret
dec
push
push
int3
push
test
test
popf
jae
push
fcomp
outsl
jne
sbb
inc
dec
xchg
repz
ficomps
dec
dec
or
test
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
pop
sahf
mov
les
mov
add
data16
inc
stc
loop
cmp
or
pop
mov
inc
je
or
dec
out
or
fmuls
jb
mov
or
ds
cmc
pop
adc
insb
fs
ror
jae
ja
loop
pop
add
mov
jae
rcll
sti
mov
cmc
cmpsl
cmp
inc
lahf
das
or
das
negb
sub
xor
push
mov
pop
movsb
sub
sbb
lds
mov
cmp
fyl2xp1
pop
jae
faddl
leave
sbb
cwtl
pop
inc
add
negl
inc
dec
cmp
pushf
jns
mov
pusha
in
into
popf
insb
out
xchg
or
inc
xor
jno
movsb
std
stc
jmp
push
inc
icebp
test
lret
fiaddl
adc
adc
and
or
pop
filds
cmp
mov
outsb
dec
or
add
clc
dec
out
sahf
jl
cltd
push
das
insb
inc
lcall
cmp
adc
pop
mov
cmp
insl
xchg
inc
adc
push
cmpsl
es
adc
xchg
repz
mov
test
scas
push
lock
clc
sahf
jnp
push
add
sbb
mov
jne
or
in
fdivrs
outsl
scas
cli
or
pop
lea
mull
adc
jno
das
les
push
adc
and
sub
pushf
pop
inc
sahf
inc
pop
aas
or
jno
arpl
mov
xor
lods
addb
scas
cmpsb
ret
mov
fwait
pop
sbb
out
lods
mov
push
mov
lds
iret
cmp
hlt
pop
xchg
std
ret
rclb
sbb
dec
mov
stc
mov
jnp
mov
xchg
shll
sub
adc
fdivrp
aas
xor
pop
xor
jnp
shr
and
inc
out
outsl
rcrl
sub
dec
jmp
add
shrb
std
xchg
or
sbb
outsl
scas
push
or
movsl
scas
pop
in
jg
ja
xchg
pushf
sub
pop
cmp
and
in
jns
jge
mov
xor
and
inc
pushf
pop
popa
mov
fisubrl
jno
inc
push
call
jno
add
out
and
cmc
insl
push
bound
addr16
aam
cmpsl
cli
jecxz
popa
rcl
mov
les
popa
mov
fistpll
out
inc
sbb
cmp
inc
hlt
mov
cmp
test
shlb
rorb
jae
add
lcall
push
xchg
aas
add
ja
pop
mov
cld
fs
out
sahf
add
or
das
imul
mul
jbe
push
sahf
sarl
sbb
outsl
hlt
into
lea
fidivrl
adc
addr16
push
jp
cmpsb
loopne
sbb
or
aam
push
addr16
mov
mov
movsb
xchg
outsb
xchg
push
push
cmp
dec
dec
adc
mov
fwait
xor
scas
std
sahf
sbb
mov
hlt
cmc
mov
rclb
cwtl
fwait
imul
aam
mov
lcall
addr16
xor
add
jbe
jns
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
movmskps
xor
ss
adc
sbb
dec
pop
inc
jmp
jb
xchg
pop
sub
push
jl
jb
mov
movsl
ret
scas
rol
fs
inc
nop
ror
bound
mov
mov
iret
iret
sub
es
or
enter
xor
test
loop
xor
push
xor
jne
push
and
icebp
movsl
add
mov
gs
les
out
xchg
mov
pop
repnz
int3
iret
mov
jge
dec
movsl
adc
call
xchg
cs
or
ja
sbb
xlat
add
push
push
test
imul
inc
lahf
lock
in
dec
xchg
or
je
mov
sbb
inc
decl
mov
pusha
repnz
sahf
std
sub
jne
xor
in
int
mov
jbe
lock
addb
jno
xchg
hlt
rorl
fs
adc
cs
shll
loop
adc
xor
mov
jl
into
fisttpll
les
lcall
ret
sti
cmp
sub
dec
std
cmc
repz
mov
dec
lds
pop
movsb
shll
fs
pop
popf
dec
sbb
out
cmp
ret
push
jg
sub
sbb
andb
das
mov
push
les
inc
xlat
popa
ljmp
into
rcrb
cli
pop
pushf
push
dec
dec
lcall
pop
mov
cmp
add
das
push
int3
nop
sarl
orl
ljmp
cwtl
push
sbb
jmp
rcl
insb
subl
push
sti
dec
inc
data16
mov
lods
or
mov
jns
mov
and
in
or
adc
pop
inc
lds
mov
aam
push
cmc
and
pop
aad
imul
data16
aad
or
repnz
daa
sahf
int3
adcl
in
pop
jbe
mov
jne
xchg
push
sub
and
inc
xchg
pop
sub
call
xor
mov
cltd
imul
repnz
cmpsl
mov
aaa
adc
jmp
mov
jecxz
in
xchg
push
xor
xchg
push
enter
mov
jae
inc
push
adc
inc
pop
out
pop
leave
or
clc
pop
adc
xchg
arpl
out
ret
add
xor
sub
les
mov
pop
push
aam
xchg
sbb
loopne
jb
sbb
js
mov
dec
shrl
notl
mov
repnz
mov
jl
sub
sbb
sbb
faddl
les
fstps
mov
jns
int3
jo
push
popa
notb
dec
inc
lds
bound
es
push
or
adc
adc
mov
jae
lahf
dec
dec
cmp
push
lcall
push
shrl
fisubrl
fildll
movb
loopne
add
loope
lahf
jl
xchg
mov
sub
adc
xchg
mov
call
mov
jns
lock
pop
fs
test
ds
movsb
sbb
sti
stos
dec
mov
int3
push
cli
push
stos
rcll
bnd
jns
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
ffree
fdivs
mov
les
mov
fcom
lcall
push
aam
push
and
xchg
pushf
test
nop
lret
enter
inc
xchg
mov
pop
stc
push
sbbb
lods
test
pushf
jmp
daa
pusha
mov
pop
jmp
xor
loopne
or
mov
push
jne
call
jp
rorb
and
mulb
mov
loope
xchg
mov
lock
cli
or
sti
jl
xor
push
cmpsb
or
dec
and
lock
lcall
sbb
push
insb
cmpb
jg,pn
mov
rcrl
inc
mov
xchg
int3
cmpsl
fcoml
js
out
jle
sbb
inc
sub
and
push
pop
mov
adc
xchg
nop
pusha
add
std
jne
iret
cmp
adc
icebp
and
addr16
stos
jo
adc
in
mov
jo
cltd
outsb
adc
cli
out
out
in
lock
andl
mov
or
mov
out
or
dec
popf
dec
lea
sbb
incb
dec
rcrb
call
push
int
insb
push
jp
sti
pop
sub
mov
rcll
movsl
ret
dec
jecxz
and
pop
cmc
sub
mov
cmpsl
cmp
pop
ja
cltd
mov
mov
out
mov
mov
cmpl
jno
out
and
pop
ljmp
xor
into
cmove
scas
pop
enter
scas
pushf
mov
mov
jmp
xor
adc
push
test
shl
inc
jge
rcr
cmc
push
popa
std
fld
sbb
test
dec
pushf
filds
and
jbe
push
jnp
pop
add
les
xor
sbb
xchg
dec
pop
xchg
and
mov
xor
inc
push
out
cmp
jbe
sub
pop
jbe
pushf
andl
fwait
mov
mov
add
loopne
or
dec
insl
scas
or
dec
mov
mov
loop
stos
lds
sti
xor
jo
mov
mov
mov
or
gs
pop
pop
adc
data16
xchg
pop
xor
cmp
cmc
add
dec
lods
mov
and
shll
cmp
cmp
ror
mov
stos
bswap
idiv
ss
mov
push
sbb
cmpsb
in
sub
cmp
sub
jno
push
aad
inc
ljmp
das
lea
int
pop
mov
mov
add
xchg
daa
loop
loope
mov
sahf
and
add
sub
js
lahf
mov
jbe,pn
lcall
mov
cmp
add
add
lret
fdivs
push
rcrb
or
stc
push
mov
adc
pop
adc
lea
fimull
ss
clc
orb
and
inc
inc
clc
dec
test
sarb
fadds
push
xchg
iret
pop
in
or
jbe
mov
mov
loop
mov
push
inc
xorl
aad
mov
test
outsl
add
inc
inc
dec
mov
xchg
or
faddl
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fisttpll
push
mov
mov
cltd
cs
or
loope
sahf
enter
mov
roll
mov
push
fmuls
imull
ja
mov
sbb
stc
add
mov
add
aaa
xchg
movsl
je
fwait
insl
inc
out
sbb
pop
jle
inc
add
jp
lcall
clc
test
aam
test
cmpsl
popl
pop
ljmp
bound
and
cmpsb
xchg
pop
fdivrs
aam
push
cmp
and
fnsave
cmp
dec
inc
push
jmp
mov
sub
daa
sub
pushf
xchg
icebp
sbb
or
test
mov
in
cmp
jg
cmp
mov
jns
inc
mov
mov
sbb
pop
stc
das
pop
push
jnp
out
xor
call
in
dec
aam
pop
dec
clc
inc
xor
cli
inc
mov
ljmp
int
stos
fsts
pushf
mov
cmp
pushf
rorl
pop
xor
add
push
std
mov
sarb
mov
subl
push
push
imul
data16
lret
mov
inc
mov
jns
je
cld
dec
sbb
int
mov
push
or
in
mov
dec
mov
jns
inc
aaa
sbbb
pop
jno
loop
mov
jl
pushf
push
js
add
jp
add
clc
repnz
clc
cmpsl
sti
daa
pop
js
fcoml
pushf
xchg
or
or
lahf
sbbb
and
push
mov
in
mov
jno
lea
int3
pop
cmp
ficoml
jg
sub
insb
push
cmpl
mov
jnp,pn
lds
ret
pop
lahf
incl
std
pop
xchg
fsubl
aad
scas
loopne
ret
adc
push
mov
mov
mul
mov
inc
stos
sbb
jg
ljmp
fwait
cmp
cmp
sbb
inc
jge
out
outsl
mov
loopne
ja
loope
or
out
lea
adc
rorl
arpl
push
leave
sbb
sbb
std
cpuid
fsubrl
jle
mov
nop
pop
dec
add
sub
lret
scas
dec
xchg
leave
push
cs
or
js
iret
es
pop
loopne
cli
cli
dec
adc
lods
push
mov
cmpsl
fmul
popa
adc
jb
xor
dec
or
pop
sbb
and
add
insl
sub
adc
add
pop
js
stos
mov
lret
and
lds
orl
add
rcl
jns
cltd
jmp
jp
fisubrs
push
and
mov
repnz
mov
pusha
xchg
adc
popf
fistps
std
lcall
and
mov
push
xchg
pop
cld
pushf
shlb
bound
pop
cmp
inc
ja
mov
push
push
sub
out
cli
cltd
and
dec
jne,pn
out
hlt
mov
insw
imul
popf
fwait
in
jp
std
lret
mov
out
loop
inc
sub
xchg
mov
sub
adc
dec
pop
sub
aam
inc
and
jp
push
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
jg
lock
mov
les
ret
lds
or
mov
jle
adc
pop
mov
cmp
mov
repnz
or
xchg
mov
rcrl
cmp
mov
cltd
pushf
push
test
flds
lods
cmp
pop
scas
add
rorl
cmp
call
sbb
sbb
pop
or
mov
mov
lret
testb
arpl
rorb
mov
pop
clc
pop
mov
xchg
ret
mov
scas
inc
or
sbb
movsb
popa
xor
add
jns
imul
xor
mov
dec
or
loope
sub
xchg
je
subl
push
jg
lret
movsl
push
shll
loop
call
cmp
mov
mov
mov
repz
inc
pop
scas
push
mov
stc
jne
in
sub
jo
xor
pop
stos
in
enter
lods
clc
jno
mov
sbb
aam
push
lcall
pop
loopne
lock
cmp
stos
xchg
pop
and
dec
mov
inc
pop
xchg
jp
sbbb
pop
lds
leave
popf
sbb
jmp
pop
xrelease
mov
mov
fidivs
outsb
inc
ja
mov
mov
popw
in
mov
xchg
mov
ja
dec
popf
lds
test
por
cli
lret
mov
test
mov
inc
pop
fnsave
mov
fsubrs
call
mov
cld
ds
and
jge
and
int3
lret
push
mov
push
les
sbb
sub
jo
ret
mov
and
add
mov
inc
test
cld
inc
outsl
adcl
repnz
mov
ljmp
pop
mov
in
rorl
je
repnz
outsb
mov
sbb
loop
dec
xchg
das
test
mov
pop
mov
das
sbb
jmp
movsb
fistpl
add
sarl
imul
repz
or
hlt
out
mov
fstpt
cmp
scas
cmc
jl
stos
scas
jg
mov
or
cmc
jp
pop
lea
xchg
loopne
or
popa
dec
fadd
or
in
sbb
inc
xchg
testb
xor
jmp
inc
lahf
leave
xchg
xorb
mov
cmp
shlb
mov
push
and
cs
je
pop
nop
std
lahf
popa
scas
adc
mov
test
push
xor
in
jg
jmp
inc
and
sbb
mov
cmp
repz
adc
pusha
movsb
cmp
aaa
xchg
sbb
sbb
or
jbe
jmp
test
mov
pop
mov
shrb
aas
jl
scas
cmp
cmp
xor
jge
and
inc
mov
leave
add
cmp
ret
xrelease
ljmp
sbb
dec
outsb
pop
xchg
mov
adc
je
push
mov
cmpb
mov
fs
dec
pop
shl
outsb
lds
sbb
mov
push
outsl
outsl
push
leave
sub
stos
cmc
js
jle
add
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
xor
mov
mov
sahf
leave
mov
fldenv
sub
cmpsb
ret
inc
fldenv
leave
fucom
cltd
mov
pop
push
popa
mov
adc
mov
adc
adc
inc
push
sub
imul
insl
je
dec
xchg
scas
nop
mov
mov
adc
aaa
in
sbb
or
inc
push
rcrl
mov
push
mov
mov
lea
xchg
cmp
xchg
cmp
cwtl
fimuls
pop
lcall
sub
mov
xor
lods
es
adc
and
and
icebp
and
add
pop
dec
adc
xor
les
mov
adc
push
add
push
cmp
jmp
rolb
fildl
mov
popa
shrb
pop
inc
sub
jge
ljmp
rorl
test
in
and
stos
mov
inc
in
imul
in
movsl
aaa
notb
stos
jge
fcoms
out
daa
lret
dec
insb
jne
rcll
pop
xor
jg
xlat
aaa
fstps
inc
jne
dec
jecxz
push
lods
hlt
cmp
or
test
inc
xor
and
or
mov
aam
inc
sar
aam
call
ja
popa
sub
xchg
jmp
dec
stc
test
aas
xor
lock
pop
addr16
cmc
aaa
cs
mov
adc
arpl
ret
and
xchg
out
pop
aad
sbb
sarb
out
cltd
in
lret
inc
leave
inc
mov
js
push
cmp
test
or
fildll
not
push
and
inc
sub
mov
push
xlat
inc
unpcklps
cmp
add
sub
scas
mov
scas
jge
jne
push
scas
call
add
data16
ja
repnz
push
mov
fistps
cs
imul
inc
pop
xchg
int
scas
lods
fsubrp
or
mov
or
jb
cwtl
or
mov
pop
mov
mov
inc
cmp
insb
cld
cs
fsubr
push
mov
mov
popf
je
cwtl
push
loop
mov
fs
mov
pusha
mov
jne
xchg
cmpsb
xchg
out
mov
adc
enter
mov
dec
das
scas
lret
mov
dec
rcl
xchg
movsl
outsl
arpl
push
mov
scas
mov
out
andl
xchg
add
out
xlat
push
cmp
jns
push
int
faddp
aam
in
xor
push
mov
out
lock
cmp
arpl
mov
in
jle
mov
pop
adc
inc
jns
scas
sbb
add
or
add
jmp
cmpsl
add
dec
cld
aad
nop
out
lcall
cld
push
xchg
push
dec
cld
psrad
jg
cmp
das
add
adc
cli
aam
out
ds
arpl
frstor
push
xor
subl
add
jbe
fwait
outsl
lods
mov
and
mov
mov
enter
xchg
jg
push
out
cld
push
repnz
repz
out
dec
outsb
add
outsb
lock
mov
mov
or
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
pop
or
mov
mov
hlt
int3
jb
xchg
sbb
jo
xlat
in
sub
fs
cmc
ljmp
xchg
mov
addr16
xchg
inc
mov
xor
mov
aaa
mov
mov
scas
inc
test
dec
gs
sarb
clc
roll
rolb
pop
jb,pt
xor
js
mov
sub
imul
and
inc
jb
movsb
je
les
inc
adc
and
xor
std
addr16
pusha
fdivl
lds
jp
inc
repz
test
test
add
scas
pop
negb
dec
lods
add
fwait
scas
iret
pushf
dec
iret
adc
pop
push
scas
outsb
xchg
jg
nop
adc
xchg
ret
add
xor
dec
adc
sub
lods
mov
ret
pusha
xchg
adc
lahf
mov
out
adc
push
jmp
lret
out
or
loope
ljmp
mov
hlt
repnz
sbb
mov
jae
jecxz
sub
pop
int3
out
into
mov
mov
negb
xchg
add
fdivrl
lcall
imul
ds
xchg
cmp
adc
cmp
pop
sahf
idiv
adc
sbb
loop
cli
push
test
in
lods
xor
mov
jb
xor
dec
push
leave
mov
mov
insl
js
cmpsl
insb
xchg
out
insl
jnp
dec
icebp
push
pusha
adc
in
mov
std
ja
push
div
pop
imul
pop
sarl
mov
cmp
add
aad
cs
adc
cmpsb
iret
adc
add
add
outsb
mov
arpl
push
sub
adc
enter
enter
mov
lahf
daa
lock
test
leavew
gs
xchg
pop
enter
lea
add
outsb
mov
shl
sub
sub
stos
sub
jl
ret
xchg
ret
jle
in
mov
push
adc
dec
aam
xchg
pop
push
or
mov
adc
das
add
inc
rolb
xlat
inc
iret
xchg
sub
jge
vpshad
sub
xlat
ja
cmpsb
push
inc
sub
sub
popa
inc
sbb
jbe
sar
repnz
std
cmpb
lahf
mov
dec
stc
jg
dec
test
jge
bnd
jbe
pop
inc
lret
add
out
lods
push
dec
xchg
pop
je
ss
sbb
insb
mov
stc
daa
mov
pusha
pop
cmpsl
sarl
test
and
jp
sub
push
pop
jno
or
js
push
cwtl
gs
jb
out
add
jns
and
jne
pusha
mov
pusha
dec
sbb
push
rorl
inc
movsl
outsb
cli
movsb
and
mov
fs
jl
push
xlat
punpckhbw
cmpsl
int3
loopne
mov
sub
dec
mov
pushf
outsb
bound
mov
out
jle
in
mov
sub
mov
jle
jb
stc
stc
mov
push
adc
arpl
adc
stos
stc
shrb
fdivs
stos
push
add
cmc
movb
xchg
lahf
and
dec
sub
shll
test
adc
nop
cmp
arpl
pusha
mov
inc
xor
fisubrs
add
mov
out
mov
mov
xlat
sub
dec
pop
jne
xor
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
leave
ss
jae
mov
es
mov
data16
pop
in
daa
xchg
push
pushf
rcrl
fimull
xlat
jns
jne
push
leave
iret
test
gs
rolb
jae
xor
test
xor
fdivrl
cmpsl
mov
insl
adc
cmp
adc
jl
inc
aad
call
mov
mov
jl
sbb
ss
push
call
shr
mov
cmpsl
adcl
in
inc
xchg
sbb
push
mov
push
inc
aas
add
int
pop
leave
add
pop
scas
cwtl
rclb
sbb
jns
pop
xor
add
dec
pop
mov
adc
jle
iret
loope
mov
cltd
test
imulb
dec
add
xorl
push
mov
out
clc
mov
mov
and
jmp
nop
jnp
xor
in
cmp
scas
das
out
test
es
cwtl
stos
jge
test
js
and
fdivrs
loopne
dec
shlb
pushf
adc
mov
das
sti
addr16
push
sbb
cmc
in
dec
dec
pushf
fisubs
sub
sbbb
adc
leave
adc
mov
dec
mov
sbb
test
jns
inc
lret
dec
push
repnz
sub
pop
push
lcall
not
dec
shl
jle
mov
xchg
mov
xorl
lods
mov
inc
imul
mov
sub
and
fidivrs
icebp
fdivs
jp
jmp
push
gs
xor
frstor
adc
xchg
clc
shlb
mov
fcoml
fwait
mov
in
lea
mov
icebp
adc
outsl
pop
cld
dec
sub
jmp
pop
mov
js
insb
lock
mov
insb
cmp
test
sub
inc
add
sub
and
sub
ror
fmul
out
pop
into
inc
test
lods
fiaddl
daa
outsl
pushf
jne
sarb
out
shll
loope
das
push
inc
pop
push
or
xchg
aaa
pop
in
faddl
pop
icebp
mov
bound
cs
pop
scas
jne
sahf
ja
ds
test
jmp
in
xor
mov
pop
in
lret
in
xchg
cmp
sub
sbb
push
jo
add
loopne
inc
test
out
sbb
popf
hlt
pop
xchg
sub
push
out
inc
in
scas
movsl
sub
subb
mov
sub
push
and
scas
and
sti
test
lret
pop
or
adc
dec
inc
sub
in
or
in
fdivr
addr16
aad
je
or
adc
add
jg
xchg
adc
addb
test
cmp
cmp
jns
and
push
je
les
cwtl
xchg
sub
xchg
sahf
in
bound
jl
push
cli
shlb
movsl
mov
xor
js
sub
lock
mov
push
pushf
dec
out
mov
xchg
lcall
enter
dec
jnp
or
inc
sub
test
add
add
dec
or
test
add
add
jne
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
repnz
mov
ret
dec
call
dec
punpckhdq
testl
test
or
popl
pop
xor
ffree
sbb
mov
pop
xchg
jbe
fbstp
ficompl
adc
outsl
stos
cmp
jmp
inc
clc
xor
sti
insb
push
push
mov
or
inc
ja
rcr
fcomp
xchg
icebp
mov
xorb
pop
adc
mov
in
imul
sub
rcll
ficoml
push
add
je
or
cmpsl
dec
mov
jns
popa
and
and
or
in
out
mov
or
push
mov
lods
mov
sahf
std
stos
sbb
outsl
stos
ret
xor
fildll
fistpl
fstps
dec
out
and
lea
out
js
mov
jecxz
icebp
dec
and
push
das
push
into
mov
and
push
fldl
mov
pop
mov
inc
insl
cmpsl
xchg
mov
push
pushf
jno
fmuls
inc
add
hlt
cs
sub
push
or
div
insl
sub
mov
sbb
mov
jecxz
push
fimull
mov
add
lret
inc
int3
mov
push
lock
js
mov
in
mov
punpckhbw
les
lock
adc
mov
inc
dec
pop
mov
jmp
gs
xor
ljmp
adc
adc
sbb
sub
inc
test
lea
lods
fs
movsl
ss
aas
adc
imul
lcall
jecxz
nop
mov
inc
in
adc
and
jmp
lahf
aaa
out
idiv
lret
pop
adc
dec
jne
jb
test
mov
fldl
stos
jb,pn
incb
sbb
jp
inc
mov
push
leave
dec
jnp
leave
xchg
and
mov
dec
into
sbb
lret
pushf
into
imul
fwait
pop
xchg
or
scas
nop
jne
cmp
fs
add
dec
enter
pop
sahf
mov
shll
inc
jmp
ljmp
adcl
insl
or
and
je
nop
repnz
xor
inc
call
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
daa
cmc
je
jp
mov
mov
sub
into
cmp
roll
or
sub
mov
aaa
loope
pop
or
test
push
cmp
inc
or
gs
ljmpw
xor
mov
cmpsl
sub
test
mov
test
test
aaa
add
pop
push
in
push
push
jecxz
div
pop
push
mov
mov
cld
mov
fsubl
mov
sbb
pusha
xor
fstp
mov
xor
cltd
int3
and
jg
sbb
or
roll
icebp
cmp
ret
mov
stc
xchg
jbe
fcomip
dec
push
les
add
ficoml
test
lcall
inc
push
mov
stc
xor
push
aam
aas
fsubs
cmp
mov
pop
lods
insl
sub
sbbl
in
int3
negl
add
xchg
aad
add
cwtl
es
xor
cs
push
pop
cmc
cmp
test
mov
xchg
push
das
cmp
lods
cmc
push
or
daa
and
in
int3
fdivrs
sbb
inc
mov
dec
mov
jge
dec
into
mov
jo
sbb
cmc
dec
jnp
ret
cmp
dec
cmp
mov
testb
adc
lock
fwait
mov
jbe
jae
dec
mov
xchg
aad
inc
cmc
cmc
xchg
adc
rcrl
stos
jo
fstl
sub
int
xchg
js
fwait
setle
mov
mov
mov
xchg
sbb
or
xor
popl
push
xchg
loope
add
cmp
out
test
in
pop
ret
movsl
xchg
push
inc
jo
jb
sub
push
fidivl
scas
stos
es
sbb
aas
mov
mov
sbb
data16
cmp
add
mov
addb
aaa
xchg
outsb
cmp
out
push
push
inc
add
sbb
xchg
mov
dec
mov
jbe
lock
aas
dec
ja
xor
sub
sbb
filds
sbb
jecxz
cmp
stc
sub
int
fcmovu
add
inc
fisubrl
mov
insl
pop
das
mov
push
nop
stos
in
test
mov
cmp
dec
popa
retw
xchg
lock
dec
fcmovb
inc
shlb
jns
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
inc
pop
nop
nop
xor
ret
add
ret
push
jb
jle
sbb
in
in
sahf
sahf
adc
scas
mov
sub
ficompl
dec
and
test
jnp
adc
push
int3
sbb
rolb
and
and
das
adc
insb
enter
push
pop
aas
lods
sub
lea
adc
mov
loop
push
mov
fimull
inc
push
enter
std
ficompl
xor
pop
mov
add
xchg
subb
jmp
jp
xchg
add
loopne
jo
insb
lea
push
test
sbb
scas
adc
repnz
or
fcmove
stc
add
aad
xchg
jl
shrb
enter
xor
std
mull
xlat
insl
mov
mov
cmp
jne
add
leave
add
incb
mov
int3
sub
push
adc
shr
pop
aam
xchg
out
lods
dec
cld
mov
mov
iret
aad
lcall
add
xor
sbb
dec
push
leave
jp
sub
mov
pop
mov
cmp
out
sub
dec
sbb
sbbl
dec
sbb
fwait
dec
push
repnz
adc
pop
xchg
push
ja
pop
test
iret
sub
cmp
dec
jg
or
push
jg
leave
jb
add
sub
repnz
jbe
outsl
pop
test
sahf
icebp
inc
ret
mov
ja
pop
es
cltd
and
in
sbb
mov
pop
push
mov
jbe
cmp
out
cmp
mov
xor
cmc
aas
sub
aas
or
movsb
dec
mov
movsl
jmp
fwait
add
or
enter
jecxz
or
jle
jp
push
divl
sbb
mov
jl
mov
mov
ret
cs
pop
fnstcw
pushf
mov
stos
jb
sub
sbb
dec
mov
dec
data16
mov
push
sbb
int
dec
inc
or
sbb
jo
or
xor
cmp
cmp
inc
repnz
scas
adc
dec
scas
xchg
dec
pop
inc
push
adc
pop
mov
fs
jne
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
jl
xchg
ret
pusha
push
out
and
pop
insb
jae
jno
ficoms
push
pop
shlb
nop
fld
pushf
mov
sbb
les
xchg
ffree
movsb
test
mov
ljmp
push
hlt
out
fwait
lret
hlt
fnsave
pop
lret
aaa
scas
xchg
cmp
ja
stos
das
xchg
cld
loope
in
push
stos
lahf
push
inc
push
sahf
sbb
mov
and
jmp
inc
sbb
pop
mov
lds
lcall
popa
fsts
repz
sbb
decb
addr16
ret
sbb
mov
inc
mov
sub
cmp
movntps
inc
pop
dec
fsincos
int3
mov
rcrl
es
out
adc
mov
add
dec
clc
dec
fnstsw
fcomps
jnp
outsl
in
adc
jmp
fildll
fbld
sbb
das
insl
stc
xlat
pop
add
push
mov
js
xlat
mov
loopne
sub
sbb
insl
mov
stos
xor
filds
jne
mov
jmp
lods
rorl
mov
or
and
jecxz
mov
jp
mov
or
in
mov
add
pop
dec
lcall
test
pusha
repz
and
mov
xor
aad
jmp
movsb
jne
adc
lock
ret
repnz
mov
std
jmp
xchg
cmp
pop
hlt
lds
sub
daa
mov
jg
pop
pop
cwtl
lock
jo
and
sub
fwait
dec
movsb
imul
xchg
pop
ljmp
mov
pop
fldz
lods
out
sarl
pop
pop
mov
rolb
fiadds
stc
mov
mov
sbb
addb
sar
or
mov
rolb
mov
inc
orb
imul
out
and
add
mov
cmp
ds
fwait
lahf
xchg
sub
cmp
movsl
lods
add
out
adc
push
fs
cs
lcall
shl
adc
push
faddl
and
iret
mov
dec
aam
jl
add
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
dec
mov
ret
mov
clc
xchg
sti
in
cli
in
pop
xor
out
pop
pop
xchg
popa
cwtl
inc
sbb
jnp
pop
cli
or
mov
mov
cld
outsb
mov
adc
fldl
mov
into
sbb
clc
hlt
in
add
aaa
xchg
xorb
testl
add
bts
and
jne
outsl
and
es
repz
cmp
out
sbb
mov
out
mov
push
jo
scas
inc
std
lret
sbb
pushl
mov
outsb
ljmp
nop
jae
jge
out
das
shrl
pop
xor
test
jmp
sbbb
into
faddl
lcall
inc
scas
or
mov
inc
orl
sub
out
adc
or
xchg
jb
shl
mov
cmpsb
call
xor
in
push
xchg
push
sub
xchg
push
mov
jae
outsl
push
inc
scas
lret
cmc
jb
icebp
xor
negl
das
pop
bound
in
mov
push
out
sub
fstpl
jmp
pusha
inc
popa
into
lret
push
inc
mov
mov
push
and
and
stos
cmp
or
sbb
mov
dec
cmpsl
mov
mov
mov
cwtl
jge
push
out
pushf
repnz
pop
push
inc
stos
xchg
xorb
pop
mov
fildl
pop
stos
or
mov
fimuls
lock
mov
sbb
or
mov
mov
push
pop
and
xor
inc
cld
xchg
push
stc
inc
and
int
aas
mov
mov
mov
sahf
inc
add
push
push
pop
push
test
andb
pop
xchg
mov
icebp
scas
add
pop
int3
mov
xor
sbb
stc
nop
std
stc
enter
andb
adc
and
stc
adc
dec
popf
ljmp
in
and
add
xor
xchg
popa
xor
mov
adc
ja
in
mov
and
push
out
push
jb
pop
nop
adc
popa
negl
insb
mov
sbb
outsl
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
xchg
nop
imul
push
ret
inc
je
pop
adc
mov
mov
sahf
jle
stc
mov
insl
mov
adc
pop
inc
mov
push
cmp
out
sub
jge
add
adc
popa
dec
test
xchg
cmc
es
jne
mov
xor
sub
sub
or
mulb
sub
or
aaa
mulb
sub
fstps
lret
pop
pop
outsl
push
test
in
loop
rorb
jge
pushf
imul
adc
int
cs
adc
mov
xor
sub
dec
out
cmp
fnstcw
test
cmpsl
or
sub
idivb
cmp
jg
divb
scas
popf
push
jecxz
loop
xor
xor
ficomps
mov
repnz
sarl
push
add
inc
dec
sbb
and
and
inc
mov
inc
ss
out
push
and
jecxz
sub
jne
pop
mov
sbb
push
cmpsb
mov
inc
enter
into
sub
popa
jnp
int
add
mov
cmp
cmp
push
mov
icebp
mov
dec
ljmp
dec
iret
add
or
or
in
xor
adc
nop
xchg
enter
sub
push
fcoms
repz
aad
fcoms
and
jae
stos
jmp
push
pop
jmp
inc
arpl
test
scas
rol
jbe
ds
imul
into
movsb
dec
scas
dec
aam
fwait
clc
cmpsb
push
pushfw
in
cmp
inc
push
jl
inc
lods
icebp
mov
pop
in
push
aaa
lods
out
mov
dec
mov
add
pop
int
stos
movsb
sarl
scas
aam
sbb
push
sahf
je
int
mov
cmp
lcall
movsl
push
enter
je
dec
cmp
inc
cmp
fstps
adcb
iret
movsb
add
xor
mov
jl
ds
out
inc
rcrb
cmp
sbb
sbb
sahf
cmp
loopne
das
mov
xchg
cmpsl
mov
jae
out
fs
out
popa
inc
sub
imul
outsl
push
xor
mov
pushl
out
orb
push
in
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
aam
sahf
es
mov
mov
xchg
fdivr
cmpl
xor
shr
repnz
scas
jo
and
imul
in
nop
sub
testl
minps
cltd
mov
lods
enter
je
jge
or
mov
jl
push
call
adc
xchg
pop
xor
in
in
ja
loop
adc
push
movsl
xor
out
or
in
pusha
add
loopne
jp
cmp
insb
jns
pop
sbb
dec
test
and
cwtl
adc
popa
cmp
xlat
push
cs
lods
xor
jbe
mov
adc
inc
cmp
shlb
cmpsb
mov
call
fiadds
call
stos
add
and
int3
add
imul
movl
into
push
xchg
aad
movsl
test
xor
mov
les
mov
adc
adc
or
lret
xor
pop
inc
cmp
lods
stos
insb
repz
call
mov
filds
mov
jbe
inc
or
cmc
cmpsl
stos
and
fisttps
into
and
cmc
pusha
jns
pop
popf
and
or
inc
jle
mov
xchg
sub
sub
sub
sub
cmp
pushw
mov
dec
nop
ja
and
mov
fists
icebp
and
or
lods
jp
lods
hlt
icebp
push
movsl
cmpsl
jmp
inc
out
movsb
sub
cmpsl
and
jo
xchg
rcll
jns
int
stc
lahf
subl
push
jnp
dec
es
inc
cmc
movb
test
icebp
add
or
test
lock
inc
jno
sbb
out
adc
push
subl
sbb
mov
sub
rolb
xor
iret
mov
aad
into
sub
sub
stos
xlat
fimull
mov
inc
mov
sbb
push
xor
adc
sbb
lods
movsb
out
mov
shlb
cmp
test
ja
les
jmp
data16
ret
pop
das
or
push
pop
fwait
and
push
mov
ja
sbb
test
jecxz
repz
sbb
sbb
mov
xor
rol
add
mov
mov
fcoml
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
pop
push
outsb
fstl
fwait
mov
mov
stos
push
cli
xlat
stos
stc
push
jns
in
lds
add
adc
or
fs
repz
loopne
mov
fisubrs
mov
pop
outsl
sarb
sbb
test
cltd
mov
pusha
xor
out
xor
aas
jbe
dec
pop
daa
out
mov
fs
mov
inc
pop
adc
stc
sbb
imul
and
sahf
daa
adc
pop
xchg
stos
fbld
scas
sub
or
sub
daa
and
data16
adc
in
pop
in
push
jno
push
and
pop
insl
popa
dec
xchg
rclb
out
shlb
and
push
mov
psrld
add
ja
out
cmp
and
cli
out
test
xor
inc
ja
int
adc
mov
insl
adc
sbb
mov
xchg
test
les
dec
pop
jbe
xor
cmp
sbb
jnp
and
in
cmp
mov
mov
je
add
pop
pop
mov
movsb
fcoml
mov
or
xor
cmc
or
icebp
mov
xchg
sub
addb
mov
push
aad
lret
or
js
subb
aad
pop
lods
sbb
jge
lods
std
xchg
ljmp
xchg
mov
test
cmp
inc
mov
xchg
adc
loop
push
call
or
cli
popfw
jp
mov
push
imul
ror
dec
div
fimuls
jnp
xor
cmpsl
and
cwtl
sbbb
pop
push
sub
imul
in
in
rcl
es
xchg
subb
adc
ss
xchg
mov
add
or
mov
push
jbe
jg
mov
mov
jno
sub
fwait
out
inc
les
push
mov
insb
and
test
popa
or
cltd
cli
cmp
and
outsb
sub
mov
lret
data16
cmp
mov
lods
xchg
push
cld
dec
jbe
fwait
popa
inc
mov
add
cmp
xchg
pop
js
push
stos
stos
popf
dec
or
inc
fldl
cwtl
dec
hlt
jnp
dec
lret
jg
pop
call
jbe
add
cld
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
or
sar
lahf
mov
mov
mov
popf
xor
fistps
or
loope
pushf
sbb
push
xlat
lods
repnz
outsb
mov
inc
dec
jmp
xchg
push
es
fs
jge
mov
pop
push
xor
sub
lods
xchg
subb
scas
mov
push
lret
xchg
int
aam
adc
xchg
pop
stos
or
or
mov
int3
push
sub
fcompl
pop
mov
scas
jbe
stos
mov
cmp
push
xor
ficomps
jne
xor
movsb
out
dec
xchg
mov
insb
sbb
stos
adc
loope
jg
sbb
jnp
inc
pop
pusha
xchg
fimull
add
fld
or
push
cmp
sbb
icebp
dec
cs
add
shll
jmp
pop
shrl
lock
xor
xor
iret
data16
sti
je
into
mov
add
fisttpl
fsubl
jmp
int
iret
cmp
icebp
in
or
mov
and
insl
stos
xor
imul
add
or
xchg
push
jmp
aas
adc
mov
push
cmp
jge
cmp
cmpl
add
jno
data16
fisubl
xor
cmpsb
mov
lea
stos
inc
lea
mov
mov
cmp
test
inc
mov
push
decb
jbe
aas
in
or
aaa
les
add
fdivrs
push
xchg
jmp
cmp
add
call
lcall
and
mov
fsubr
shrb
scas
sahf
sti
cmpb
pop
add
fnsave
dec
xor
pop
les
lret
push
adc
adc
lea
mov
std
mov
mov
push
call
popf
lcall
xchg
cmp
jmp
xchg
aam
lds
jae
int3
push
push
dec
scas
push
out
aaa
jmp
leave
lcallw
es
dec
movsb
call
lret
inc
mov
movsl
jns
inc
xorl
pushf
pop
fisubrs
mov
in
adc
mov
test
xchg
jecxz
sub
stc
mov
ret
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
lods
mov
mov
mov
fsubrl
pop
mov
or
out
and
mov
es
sub
in
movsb
pushf
ja
mov
ds
jp
icebp
pop
cmp
bound
faddl
sub
cs
and
push
fwait
movsb
add
xchg
jl
pop
adc
sbb
leave
outsl
cmp
push
jle
adc
push
sbb
push
cs
insl
shlb
mov
ds
sbb
rcll
xor
js
mov
and
lret
mov
sbb
mov
shrl
jg
clc
loop
mov
sub
push
sbb
adc
xor
xchg
cmc
es
jno
cmp
push
ljmp
push
imul
mov
xor
pop
and
js
mov
push
jnp
sbb
out
and
and
scas
rorl
int
das
cmp
inc
scas
lds
enter
cmp
sahf
cltd
test
cltd
inc
outsb
jbe
jmp
inc
xor
dec
and
js
cmc
int
xchg
or
pop
aas
push
mov
divb
cld
inc
inc
sub
jle
dec
fstl
daa
dec
jbe
or
negl
dec
mov
sub
pop
jmp
cmp
adc
pop
subb
xchg
iret
or
sbb
ja
aad
and
aad
jo
jg
jecxz
test
ror
add
insl
repz
mov
pop
incb
cld
mov
add
pusha
mov
or
mov
in
mov
add
mov
in
into
ret
cwtl
push
or
sbb
and
jne
mov
aas
pop
out
add
dec
adc
into
xor
add
sub
ss
push
out
push
jmp
pop
pop
rolb
rorb
add
lock
std
outsb
loop
test
out
dec
add
inc
push
insl
stos
orb
ja
mov
mov
sub
cmp
push
stos
test
jne
inc
xchg
arpl
xchg
sbb
out
out
aaa
xchg
xchg
xor
out
loope
fld
aaa
adc
in
rolb
dec
arpl
leave
es
or
xchg
flds
push
loopne
popf
pop
repnz
pop
test
adc
popf
aas
dec
push
xchg
mov
rol
inc
call
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
rcl
test
mov
loop
mov
add
fcmove
jmp
jecxz
xor
js
andb
loop
jno
fldenv
cmp
or
or
int
mov
stos
insb
and
mov
add
fnstcw
push
out
fsincos
shrl
iret
es
inc
mov
and
cmp
addr16
adc
pop
cmp
pop
push
iret
aas
pop
addl
cmp
cmp
movsl
adc
pop
adc
xchg
adc
scas
push
jb
lcall
mov
dec
lods
dec
enter
iret
clc
leave
incl
shlb
sbb
imul
xlat
loope
andps
xor
cmp
imul
sub
test
cmp
adc
addr16
mov
sbb
pushf
fs
and
cmp
lcall
add
scas
mov
int
sahf
xchg
js
jo
add
dec
cs
pushf
daa
call
sbb
inc
sub
xor
inc
or
sti
cmpsb
sbb
sbb
adc
or
sbb
std
sarb
inc
lds
daa
pop
fsubl
stos
add
sti
xchg
ja
ss
add
or
bound
rcrl
fsubs
andb
jno
aad
lock
dec
shlb
or
jo
cmp
movsb
out
and
adc
jl
fxch
mov
les
push
arpl
ret
xchg
lods
cwtl
jns
dec
lcall
jmp
mov
sbb
insb
push
cmpsl
stos
or
into
aad
je
push
int3
mov
jbe
lods
movsb
mov
repz
dec
lahf
xchg
mov
inc
cmp
add
fildll
rcll
fcmovnu
or
enter
mov
icebp
mov
lea
into
mov
dec
adc
add
adc
movsb
push
mov
aaa
or
and
dec
lods
mov
mov
mov
aaa
inc
lods
cmpb
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
pop
dec
xchg
ret
mov
pusha
adc
ficoml
jp
mov
jns
cli
je
cmp
clc
pushf
je
pop
fbstp
sub
xchg
or
imul
into
idiv
mov
xchg
pop
lret
add
out
add
inc
ss
or
rolb
adc
dec
mov
pushf
push
int
loopne
aad
pop
sub
movsb
test
sbb
rol
cmp
adc
push
sbb
shl
xor
cmp
fsubl
push
lahf
nop
test
idivb
aas
stos
scas
lods
sbb
addl
hlt
lods
push
loopne
or
xchg
das
mov
jge
out
lret
push
je
inc
cmpsl
fsubrl
out
mov
dec
xchg
add
scas
jg
xor
xchg
lods
mov
fdivr
push
scas
push
fnstsw
scas
pop
push
mov
lret
sbb
jb
and
stos
aaa
adc
stc
adc
sub
lret
push
test
or
ror
or
das
ucomiss
aas
aad
mov
loope
push
sbb
cmpsb
push
jg
cli
imull
fstl
mov
xchg
sbb
mov
jge
leave
aaa
dec
jl
sub
adc
aam
imul
adc
sti
and
push
or
movsb
jbe
pop
add
cmp
mov
shl
push
or
iret
sub
xchg
and
jmp
rcrb
js
cmc
shr
xchg
push
das
cltd
sahf
in
movsl
push
scas
hlt
push
das
push
mov
sbb
lods
fwait
aad
xchg
ljmp
movsb
push
stos
sub
out
lods
cld
adc
inc
mov
fdivrs
xor
add
jmp
xchg
sti
inc
mov
or
push
stc
xchg
dec
inc
inc
dec
pop
adc
addr16
data16
or
ret
mov
push
adc
xchg
aad
aaa
enter
aas
inc
scas
mov
pop
mov
adc
jge
scas
pop
cmp
mov
fists
dec
mov
cmp
xor
out
pop
xor
scas
aam
mov
sub
scas
dec
xlat
sbb
fmuls
jne
push
lcall
fstpl
cmp
add
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
mov
mov
mov
pop
jns
xchg
mov
push
and
lcall
test
sbbl
ja
sahf
popa
xchg
loopne
and
in
jne
mov
pop
mov
subb
mov
addr16
lret
lods
add
jg
xor
aam
lahf
xor
fsubrs
mov
lods
stos
push
roll
test
jge
popf
pop
cmp
and
mov
jle
out
es
lret
inc
push
out
daa
mov
adc
daa
repnz
shlb
cli
movsb
mov
pop
loop
mov
negb
sub
fiadds
call
loop
mov
lea
nop
dec
sbb
das
mov
test
push
lds
aad
mulb
push
mov
iret
adcb
int3
mov
mov
test
sbb
inc
arpl
in
cmp
and
mov
mov
fisubrs
xchg
jns
cmp
and
aaa
subl
push
in
jns
add
iret
push
mov
sub
std
pop
add
push
mov
inc
pop
xchg
mov
icebp
dec
xlat
aas
addl
jl
xor
push
mov
mov
in
mull
sti
jmp
pop
pop
jbe
push
mov
mov
sti
aad
imul
fidivrs
mov
add
dec
jo
pop
stc
adc
mov
jo
xor
popa
inc
lcall
ljmp
xor
add
pop
and
loop
cmp
out
das
and
dec
sub
mov
jne
lret
insl
xor
frstor
mov
push
rcrb
push
lock
bnd
sbb
push
inc
test
notl
pop
xchg
xlat
jmp
mov
mov
pushf
out
push
xchg
xchg
inc
js
inc
out
rcl
cmp
popf
push
mov
pop
push
dec
cmc
cmp
fidivrs
jg
add
aam
sti
lea
movsl
fmuls
testl
cmpsl
mov
or
in
lret
mov
add
and
ret
fidivrs
cli
loopne
inc
jo
dec
adc
mulb
sub
inc
das
or
out
mov
and
data16
dec
and
cmp
push
scas
clc
and
lods
fistps
pop
push
aad
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
jle
lcall
mov
sti
inc
jmp
repz
pushf
sarb
out
sti
cwtl
push
stc
bsf
push
or
stos
in
or
cld
lods
and
mov
jae
test
popf
push
dec
xchg
cmp
into
mov
adc
pop
pop
pop
sbb
mov
loope
les
push
add
and
xchg
mov
push
out
mov
xor
fdivrs
and
cs
push
shrl
shrl
pop
cmovg
xchg
mov
sbb
adc
fiadds
in
shl
andb
mov
xchg
dec
lods
mov
adc
jb
loope
ret
mov
rcll
outsb
movsb
mov
push
and
jp
xchg
mov
xchg
sub
test
lret
imul
in
jns
test
into
test
out
ds
jmp
mov
cmp
mov
mov
mov
insb
imul
andb
mov
loopne
dec
mov
push
aam
xchg
push
fisubl
mov
pop
ljmp
cmp
fldl
xor
fwait
aad
mov
movsb
adc
inc
outsl
add
cmp
push
lds
cli
das
loope
aad
add
in
jp
out
jg
mov
test
pop
sbb
fs
lret
aas
fisubrs
bnd
pop
jnp
mov
ljmp
shlb
push
and
pop
mov
es
int
inc
cmp
push
jge
test
imul
xchg
push
aas
jle
fdivr
jb
xor
cmpsl
pop
loope
inc
sub
subl
aam
in
call
jle
and
dec
pop
loopne
jo
pop
popa
mov
add
daa
sbb
add
mov
subl
jb
popa
outsb
push
and
push
loopne
dec
ret
jbe
pop
dec
mov
mov
lea
jmp
fwait
push
mov
test
aad
sbb
inc
xchg
imul
std
out
cmc
scas
xor
shll
out
jge
pop
xor
scas
negb
jp
lahf
mov
fwait
test
outsl
aas
cmp
lods
adcl
dec
cltd
insb
adc
dec
out
inc
sbb
imul
ret
and
xor
inc
cmpsl
jl
jmp
xor
jge
addr16
fldenv
mov
pop
mov
gs
mov
outsl
and
pop
add
ret
xchg
rclb
hlt
mov
dec
pop
test
jb
mov
cli
sub
pusha
or
jle
adcl
jle
xchg
xor
or
push
daa
in
js
cmc
test
ds
xor
fldl
ja
rol
push
cmp
ret
fwait
lods
fcmove
ss
shr
rcl
jp
jl
roll
inc
pop
mov
lods
out
lret
mov
hlt
pop
clc
test
mov
mov
testl
xor
inc
sbb
fnstenv
in
push
fbstp
push
mov
out
add
shlb
add
mov
test
xor
sti
lret
shr
xor
div
inc
jmp
mov
mov
inc
inc
shlb
mov
xor
test
and
push
add
mov
js
ja
xlat
dec
xchg
loop
iret
mov
fsubrs
jecxz
fisubrl
call
hlt
sub
jp
mov
xchg
xor
pushf
std
push
lret
imul
mov
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
mov
mov
mov
ret
scas
sbb
sarb
sub
jno
lret
xlat
and
xchg
lods
sub
push
lret
and
mov
clc
and
mov
push
cltd
in
fiadds
push
jmp
sub
lds
test
testl
dec
sbb
mov
pushf
or
data16
mov
mov
data16
mov
test
mov
cmp
or
and
pop
ja
int3
lods
push
ljmp
fdivl
jge
cmp
data16
sub
cmp
dec
andl
es
rclb
jb
or
adc
iret
xor
out
fisttpl
loopne
outsl
stc
push
mov
clc
imul
fimuls
inc
jge
insl
xchg
or
sar
lock
hlt
or
stos
jl
in
xor
repnz
mov
jnp
jl
repz
and
sbb
imul
sub
jns
push
jo
pop
cmpl
mov
repnz
and
jb
jl
inc
das
fimuls
enter
mov
mov
scas
scas
insb
adc
push
adcb
xchg
idivb
push
pushf
sub
adc
mov
jmp
lock
pop
mov
mov
or
lds
repz
fdivr
repnz
jae
dec
adc
aad
add
mov
loopne
mov
xchg
nop
inc
mov
mov
pop
mov
pop
inc
in
mov
test
push
mov
cld
rolb
mov
es
insl
fwait
xadd
xchg
xchg
cwtl
fldenv
sarl
cld
loop
xchg
fisttpl
stc
es
jb
pop
push
or
pop
add
inc
inc
lock
jne
mov
inc
adc
mov
nop
pop
xor
popa
ja
divb
mov
inc
push
js
jecxz
scas
adc
xchg
fs
cs
add
lret
in
popf
pop
bound
jmp
aam
jb
jmp
jae
mov
scas
mov
sbb
sahf
test
lret
ja
inc
insl
jo
mov
adc
cmp
and
mov
leave
leave
xor
js
jae
xchg
ds
mov
sub
lret
inc
mov
out
sbb
xor
push
xchg
std
pop
daa
nop
das
shlb
into
and
notb
fwait
mov
mov
sbb
jge
sti
xchg
test
stc
and
scas
notl
pop
or
or
push
scas
popf
or
mov
mov
ret
icebp
mov
fsubrp
adcb
fmul
pop
jge
add
jb
outsl
dec
mov
xchg
jecxz
das
inc
pop
aad
in
int
loopne
jno
jae
enter
add
inc
pop
dec
test
outsb
xor
rorb
mov
sub
fisubrs
mov
fdivs
shrl
dec
push
dec
dec
out
sub
gs
mov
jo
and
mov
ficompl
cltd
fs
add
push
addr16
cmp
add
sahf
outsb
cmpsl
xchg
dec
mov
cmp
insl
pop
loope
xor
adc
xor
adc
sbbb
add
xor
cmpsb
pop
ljmp
scas
ljmp
mov
xchg
add
sub
icebp
mov
jmp
or
add
xchg
outsb
mov
bswap
lock
addb
push
mov
outsb
jg
adcb
inc
cld
test
add
inc
clc
lahf
jl
add
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
fldl
mov
mov
jne
psubq
cmpb
lahf
jb
pop
jae
push
in
dec
filds
sbb
push
mov
movsl
add
dec
in
enter
push
stc
movsl
icebp
xor
cli
mov
jecxz
mov
js
mov
inc
mov
repnz
mull
out
sti
mov
or
add
jno
mov
and
mov
aad
xor
adc
gs
lds
push
jp
jne
dec
mov
jnp
test
sti
stos
mov
dec
movsl
mov
incb
jne
pop
jp
nop
jp
xchg
pop
mov
pop
add
mov
mov
dec
ret
lcall
inc
jo
inc
call
mov
and
adc
clc
loopne
jae
xlat
pop
or
std
mov
push
imul
fistl
std
sub
or
sub
ffreep
leave
mov
jmp
mov
mov
pop
push
pusha
imul
mov
adc
fistps
sub
subl
jbe
pushl
mov
adc
idivl
adc
loope
lock
mov
lcall
ret
sbb
jbe
repz
loop
jmp
lahf
mov
adc
fidivrl
inc
fwait
rorl
adc
pop
xor
jecxz
scas
cmp
mov
push
pop
sub
dec
cmp
add
pop
cwtl
mov
loopne
pop
cmpsb
inc
sbb
inc
jbe
push
jnp
daa
xchg
cld
rclb
xchg
lcall
push
sti
movsl
mov
add
inc
mov
gs
inc
daa
dec
jno
mov
mov
mov
pop
fcoms
mov
push
iret
sti
repnz
mov
xchg
pop
mov
mov
fxch
lds
ss
add
or
add
mov
mov
inc
imul
enter
loopne
mov
inc
sarl
and
andl
jns
xlat
jp
dec
loopne
inc
xor
fdivr
mov
ljmp
mov
or
xor
pop
xchg
add
push
stc
inc
lret
pop
iret
popf
push
inc
shl
dec
dec
sbb
outsl
add
mov
pusha
addr16
ds
fsubr
pop
hlt
inc
xchg
jo
inc
test
orl
repnz
and
inc
lods
fsts
scas
loop
and
lock
mov
lret
test
fildl
jp
jmp
in
jecxz
add
adc
jle
les
xchg
ljmp
push
xor
jle
sub
jb
cwtl
inc
jnp
xchg
insl
xchg
test
mov
jne
xor
push
push
mov
mov
add
or
sub
pusha
sarl
add
jns
pop
cld
pop
and
out
daa
dec
mov
imul
inc
sub
add
ficompl
aad
popa
scas
jg
das
lahf
rcr
out
xchg
jg
popf
mov
jae
mov
add
push
jge
addr16
in
inc
sbb
or
inc
scas
sbb
popf
dec
pusha
mov
lods
ss
cmpsb
jl
push
sahf
jo
dec
lahf
cmc
pop
pop
loop
repz
rolb
dec
sbb
inc
mov
in
or
cmp
cmp
xchg
cli
ficoms
add
jne
mov
mov
inc
mov
fimull
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
nop
push
iret
mov
mov
cmp
or
and
insl
je
xor
add
ret
call
aam
fbld
add
hlt
insb
xchg
ds
into
dec
mov
mov
and
test
push
bnd
movsb
sbb
adc
xchg
sub
fisubrs
add
hlt
cmp
int3
adc
lds
dec
subb
sbb
cmpb
ds
aam
mov
punpckhdq
ret
idivb
jle
pop
in
or
jle
out
mov
arpl
sbb
cmpsl
icebp
std
adc
into
mov
insl
hlt
push
and
or
inc
lock
aad
and
add
jecxz,pt
in
lods
movsl
add
fmuls
shr
xchg
add
frstor
sbb
repnz
lcall
and
mov
jmp
outsb
mov
ja
and
or
lods
loopne
push
sbb
pop
sahf
xchg
adc
je
rorb
jmp
pop
subl
test
cmpsl
clc
xor
aaa
pop
stc
stc
inc
and
inc
lock
mov
xor
imul
lret
mov
add
mov
push
pop
mov
or
mov
jmp
push
in
out
push
or
cmp
enter
push
mov
or
lahf
inc
lock
mov
popf
rcrl
pop
in
jp
and
shrb
out
jp
out
mov
sbb
pop
and
fucom
fwait
dec
mov
pop
loop
into
jl
or
cmp
inc
sub
dec
loop
scas
push
jbe
or
inc
mov
ror
movsb
jecxz
inc
push
shlb
movsl
or
imul
or
adc
add
fsubs
mov
std
inc
ja
dec
dec
sbb
push
cmp
test
xchg
fmull
mov
pop
mov
cltd
idivl
xor
add
sahf
push
xchg
insl
mov
jl
sbb
or
aam
jg,pn
pusha
cmp
adc
xor
leave
in
sahf
fstpl
jnp
and
cmp
stos
lds
sub
inc
inc
or
shrb
adc
stc
cmc
mov
out
das
in
cltd
xlat
ficoml
jnp
pop
dec
ret
rcr
daa
sbb
cmp
out
jg
and
mov
test
adc
ds
cmp
pusha
cmc
sub
pop
fwait
sbb
stos
addr16
inc
push
repnz
xor
mov
mov
add
cmp
push
inc
and
sub
sahf
and
nop
add
add
lds
jge
mov
push
fdivrl
aaa
cmp
xchg
jle
daa
sub
jo
pop
out
mov
call
std
and
jno
test
cli
xchg
jl
lret
enter
cmpsl
int
adc
sub
adc
jne
cmp
loope
bound
cmpsl
pop
dec
jge
pusha
or
outsl
leave
mov
imul
ret
iret
mov
popa
dec
pop
shl
sub
inc
stc
push
jmp
aas
adc
jmp
mov
dec
lcall
test
jmp
jp
push
mov
into
xor
pushf
and
cmp
sbb
popf
and
push
sub
in
sub
ljmp
xchg
jl
push
pop
jns
add
divl
mov
xchg
out
mov
xor
cli
lock
mov
aam
lods
out
adc
inc
pop
inc
xchg
jnp
dec
in
push
mov
rorl
movw
add
movl
mov
jmp
fisubrl
mov
or
jle
jmp
les
shl
mov
aad
iret
pop
push
and
cmp
nop
aaa
cmp
unpcklps
add
xor
jns
aas
push
in
mulb
sti
cmc
mov
pop
data16
pop
mov
sbb
stos
mov
or
xlat
sub
sbb
xchg
dec
push
sbb
sbb
sti
lret
push
xchg
loope
cmp
push
mov
xchg
mov
mulb
imul
imul
pop
mov
movsb
stc
cmp
or
jae
jmp
stc
xor
add
jb
push
ljmp
xor
adc
fbld
dec
sahf
mov
cmp
int3
jl
fisttpl
push
and
xchg
popf
xchg
sarl
rol
mov
test
xorb
popa
out
mov
xchg
inc
push
popa
mov
jo
sbb
aaa
mov
lds
push
lcall
mov
fiaddl
shrl
mov
sti
adc
pop
enter
inc
add
ljmp
movsb
out
mov
ds
bound
out
stc
or
jg
out
mov
popa
ret
subl
lods
jb
cwtl
cmc
add
and
ss
and
cwtl
iret
in
jb
imul
lahf
sahf
mov
int
jecxz
mov
sbb
fimuls
sub
inc
add
cs
call
xchg
aam
je
subb
jl
mov
jb
sub
das
mov
xchg
jge
mov
pop
jb
sub
xchg
clc
movsl
bnd
out
sub
xchg
fstps
jbe
mov
int
in
inc
and
push
xchg
sub
pop
lret
test
divb
outsb
cmp
push
inc
pop
and
mov
jo
popa
or
inc
pop
pop
hlt
lret
push
mov
repnz
xchg
sti
push
inc
lods
push
xchg
xchg
sub
adc
in
pop
jae
push
andps
mov
sub
stos
leave
add
testb
into
cld
loopne
fstpt
repnz
xor
jl
dec
movsb
xchg
sub
stos
and
xchg
jmp
jg
int3
inc
pop
sub
push
adcb
xlat
cmpsb
cmp
jmp
dec
mov
mov
loope
mov
dec
cltd
xchg
popa
outsl
mov
mov
ss
in
rcrl
mov
pop
push
mov
test
inc
mov
jbe
shrd
test
sar
inc
mov
popa
mov
mov
push
ds
jle
sbb
test
incl
repz
mov
inc
sbb
std
loope
mov
and
inc
mov
movsl
push
mov
mov
cmc
dec
inc
lret
push
xchg
negb
data16
mov
jg
lahf
jb
xchg
inc
rcll
pop
test
mov
insb
shll
mov
cli
jns
roll
or
aaa
cmp
fstpl
sbb
scas
fisttps
data16
mov
or
ds
push
in
push
aam
into
xchg
add
and
mov
out
out
xor
jne
mov
lret
mov
sub
pop
jae
cs
inc
shrl
ja
sysexit
fucomp
sub
xchg
insb
push
cmp
div
ljmp
mov
sub
xor
inc
dec
fcmove
cli
fs
and
dec
sub
or
fiaddl
pop
xor
xchg
lret
adc
cwtl
fnstsw
push
pop
inc
xchg
shll
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
xchg
mov
inc
into
movsb
xchg
dec
inc
jl
sub
sub
mov
cli
cmp
imul
push
add
scas
jno
xchg
fst
div
mov
into
pop
in
xlat
loopne
push
and
dec
lods
sbb
jle
xchg
ljmp
add
enter
xchg
fisubrs
fs
leave
push
inc
xchg
sahf
push
stos
stos
shlb
jp
and
addr16
into
leave
aad
scas
int3
icebp
lds
pop
in
les
repnz
add
mov
push
xlat
ficompl
fdivl
stos
aam
cs
cld
repz
mov
fsubr
or
mov
jp
jo
test
sub
ja
pop
aaa
inc
aas
pop
xchg
movsl
sahf
inc
mov
mov
mov
lahf
xchg
imul
addr16
pop
push
sbb
lahf
nop
fiaddl
xor
pop
pop
ja
lods
out
and
repnz
lcall
es
fisttpl
inc
daa
stc
jmp
push
sbb
ret
repz
sbb
sbb
push
out
inc
push
arpl
or
push
rclb
jle
test
fs
jb
jno
push
xor
jge
std
or
jp
nop
mov
ja
dec
sti
sbb
sbb
cli
pop
outsb
ljmp
jo
pop
pop
aam
notb
xchg
push
dec
mov
scas
inc
imull
jns
push
hlt
out
rcr
loop
cmp
lahf
add
mov
popf
fbld
pop
scas
mov
mov
push
lcall
sub
addr16
xchg
sub
cmp
and
xchg
scas
les
push
insb
mov
xchg
lahf
ja
sub
sarl
mov
lcall
clc
ficomps
add
out
das
aad
scas
rolb
lret
xchg
xor
push
test
push
mov
in
out
enter
xchg
xor
dec
ss
and
xchg
pop
and
pop
out
test
sub
cmp
sbb
rdpmc
pop
test
cmp
jns
and
insl
call
mov
push
mov
lret
mov
inc
mov
adc
icebp
lahf
test
jne
inc
or
fistpll
sti
es
insb
inc
jae
push
sbb
or
pop
mov
in
adc
js
push
xchg
jno
xor
mov
mov
test
and
inc
or
in
iret
xor
cs
shrl
and
or
inc
sub
jnp
jne
mov
push
cmp
push
and
xor
ljmp
pop
add
or
test
add
incb
imul
outsl
sub
push
test
popf
cwtl
ss
dec
test
sbb
mov
inc
jge
sub
inc
test
lods
insb
mov
daa
dec
out
adc
jns
icebp
adc
inc
push
mov
sub
sub
jp
mov
pop
fists
mov
mov
or
jmp
lret
jge
mov
pop
jge
or
and
addl
addr16
push
mov
aad
cmp
dec
rorb
test
adc
mov
call
sub
push
mov
sub
dec
sbb
adc
push
pop
insl
lahf
push
or
inc
lods
cld
jno
or
lock
mov
inc
fisttpll
scas
push
repz
stos
adc
daa
mov
rorb
ss
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
aaa
outsb
pusha
sahf
xchg
out
mov
outsl
mov
imul
push
shlb
cmp
hlt
rcll
pop
cld
popl
mov
and
icebp
cmp
lret
xor
loop
cmp
jp
push
pushf
xor
movsb
mov
ds
into
decb
jns
pop
mov
ret
loope
mov
rcl
xchg
push
adc
mov
push
ljmp
xor
in
xor
out
not
xchg
in
and
xchg
inc
loope
rcrb
ret
test
push
rolb
leave
push
or
push
aaa
sbb
jg
add
or
inc
adc
test
call
push
xchg
dec
sub
mov
loope
lret
mov
sub
adc
js
pop
sub
xor
sbb
scas
lret
cmpsb
sub
cmpsl
xchg
leave
test
sub
mov
add
mov
xchg
push
ret
setb
aaa
cmpb
push
js
and
lods
xlat
inc
and
inc
or
mov
lods
mov
and
mov
inc
mov
lcall
andl
loop
shlb
mov
dec
lea
pusha
push
cmp
add
push
or
loope
pop
xchg
inc
subl
and
int
lock
sub
xchg
inc
fstpt
loop
addr16
inc
or
cld
sar
inc
mov
shrl
mov
push
rclb
shll
inc
pop
int
mov
cltd
pop
xor
sub
sbb
dec
sahf
jno
mov
dec
lahf
adcl
fidivrs
out
lret
addr16
pop
sbb
cli
xor
jle
add
ror
outsl
dec
sbb
inc
fidivl
std
sti
out
rep
int
xor
inc
inc
pop
test
sub
popf
xor
pop
mov
enter
repnz
pop
or
adc
je
loop
xor
test
jnp
add
cmp
inc
pop
bound
fcmovu
lret
or
gs
jmp
sub
stos
jmp
cmpsb
lret
inc
fsubrs
psubq
mov
outsb
mov
fs
and
pop
outsb
pop
adc
xor
and
and
or
aad
or
jne
roll
hlt
or
in
mov
or
fbld
xor
in
or
into
or
adc
dec
push
or
jge
pop
or
sub
cmp
xor
pop
xor
add
cmp
movsb
lea
hlt
int3
jl
jmp
mov
pop
leave
mov
mov
lret
add
inc
mov
dec
int3
adc
cmpsb
test
xor
inc
pop
std
and
fldcw
jle
add
sti
pop
xchg
nop
int3
push
pop
push
rorl
pop
ffreep
adc
cmp
dec
adc
and
mov
pop
jp
fistpll
fcmovu
scas
outsb
cmp
out
xchg
scas
jmp
mov
arpl
cli
test
cmp
test
rol
loopne
shr
mov
test
xor
ds
fwait
insl
data16
mov
jns
mov
call
mov
jns
dec
jmp
inc
inc
and
pushf
xor
cmpsb
pop
sub
mov
int
hlt
push
xchg
shrb
dec
inc
imul
jge
mov
ljmp
data16
lahf
and
outsb
xor
call
out
inc
inc
sub
jmp
jnp
adc
es
lret
mov
adc
jge
mov
push
add
imul
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
push
pop
mov
mov
int
rol
cmpsb
sub
jae
cmp
daa
icebp
mov
mov
sub
pop
rorl
dec
adc
xor
add
inc
aas
or
inc
popa
fwait
orl
mov
cmpsl
leave
and
stc
jb
mov
sbb
test
cli
jmp
pop
push
pusha
dec
xor
and
mov
mov
jns
sbb
dec
imul
test
loopne
ds
mov
lret
inc
movl
push
icebp
push
mov
out
pop
adc
push
test
mov
or
dec
adc
test
jnp
push
aam
pop
mov
pop
mulb
xor
dec
sub
jb
push
in
lahf
add
xchg
mov
pop
popa
data16
pop
aas
push
pop
mov
mov
cli
lods
mov
pop
cmpsl
mov
inc
into
fmul
add
xchg
adc
xchg
and
xor
pushf
xor
movsb
push
add
outsb
cmp
adc
xor
add
lcall
push
lods
mov
mov
jo
xchg
clc
pop
repnz
cld
lahf
jp
and
jno
cwtl
in
mov
rorl
sbb
cmp
daa
fildll
mov
movsb
stos
imul
add
sarb
movsl
loopne
lret
ret
xchg
fildl
mov
loopne
repnz
dec
mov
enter
das
pop
mov
or
lods
ds
decl
mov
push
sahf
mov
jbe
or
pop
jae
cwtl
outsb
test
add
xor
adc
or
push
and
mov
leavew
gs
dec
jno
cmpsl
pop
int
jg
sbb
push
push
cmp
sub
mov
jg
ss
imul
inc
push
mov
inc
lock
dec
sbb
mov
mov
pop
movsb
mov
not
negl
pushf
mov
sub
enter
jo
ja
push
push
das
xor
jmp
lfs
inc
sbb
jae
loope
mov
jno
insb
fisubrl
xor
ret
js
repz
inc
testl
cmp
cmpsb
mov
push
test
push
cwtl
lcall
lock
in
and
andb
mov
mov
mov
lret
sti
dec
les
call
xor
daa
add
mov
pop
dec
xor
sub
loope
daa
push
xchg
aad
adc
popa
jo
pop
jl
mov
lods
sbb
shl
ljmp
jge
and
test
or
cld
shr
inc
es
imul
scas
rcrb
sbb
std
dec
dec
je
in
lods
push
jle
les
into
and
jp
lods
jg
or
arpl
sub
xchg
jecxz
fs
insl
xchg
push
out
adc
mov
cmp
jge
mov
mov
jmp
mov
or
repz
std
mov
mov
inc
sti
jns
sbb
out
stos
arpl
dec
add
leave
sbb
jae
dec
xchg
cmc
xchg
cli
ret
cmc
imul
push
in
or
pushf
cmp
or
loop
scas
xorb
xchg
imul
call
inc
data16
in
dec
stc
pop
xor
or
mov
fwait
jo
iret
fsubrl
pop
dec
scas
out
ds
sahf
adc
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
shl
adc
mov
mov
imul
fnsave
js
add
popa
jle
in
or
jmp
mov
push
aam
push
or
out
push
inc
inc
lret
repnz
arpl
xchg
adc
les
scas
cmp
jns
ret
xor
jmp
shl
xorb
repnz
xchg
clc
clc
lods
xchg
mov
dec
sub
lods
pop
lds
shll
fwait
cmp
pop
lea
push
es
mov
push
stc
cmpsb
ss
pop
lock
jns
loopne
shrl
push
add
fdivrl
cli
cmp
enter
int3
loope
cmp
loope
inc
lea
scas
ret
push
push
dec
cmp
lcall
iret
inc
mov
mov
pop
jns
arpl
dec
insl
jecxz
lret
push
add
mov
ret
add
cmp
dec
mov
pop
pop
in
shrl
ds
loopne
or
mov
push
scas
dec
pop
dec
test
push
cmpsl
mov
inc
jmp
repz
mulps
sarl
mov
push
inc
in
mov
cli
popf
adc
adc
nop
lret
pusha
les
sbb
bound
pop
and
sub
pop
mov
cmp
or
dec
shll
aaa
mov
cltd
imul
fistpll
out
outsl
and
out
call
int3
mov
jnp
int
not
fidivrl
gs
push
fwait
cmpsb
pop
pop
fcompl
push
scas
imulb
and
or
xchg
out
inc
mov
and
jge
and
dec
imul
and
loope
arpl
imul
xor
jb
test
vmread
rorl
pop
push
jl
dec
lods
pop
mov
mov
and
jg
dec
out
popf
mov
mov
je
nop
and
push
mov
or
jnp
xor
fstps
movsl
notb
xchg
add
aam
or
or
es
add
jnp
test
sub
xor
sbb
lcall
add
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
dec
mov
mov
push
mov
nop
lret
in
mov
mov
add
call
jb
lds
scas
popf
scas
mov
cmp
pop
mov
ljmp
rcrl
lret
lds
sub
cltd
xor
dec
mov
ret
mov
stos
inc
ds
xchg
push
shlb
movsb
rcrl
mov
inc
push
daa
pop
aam
test
dec
div
icebp
cmp
dec
and
icebp
fadds
push
loope
or
out
cmp
mov
stos
int
adc
jne
xchg
sbb
xor
lock
cmp
loopne
ljmp
pop
clc
outsl
fmul
lock
test
jne
in
mov
into
push
adc
test
iret
push
loop
hlt
pop
test
addr16
mov
mov
mov
inc
pop
dec
xor
jae
mul
aam
fstps
sbb
stc
movsb
xchg
aad
mov
out
xor
jne
pop
cmp
jg
mov
push
jbe
dec
popf
sub
mov
sbbb
or
jl
mov
push
loop
cmc
iret
imul
daa
jno
mov
xchg
bound
out
cmc
into
inc
sub
cltd
sub
daa
test
pusha
xchg
cmpsb
inc
rorl
inc
or
jne
cmp
imul
pop
daa
ret
fidivl
push
ficoms
inc
or
add
and
ficompl
cmp
es
adc
int3
mov
les
out
hlt
push
loop
inc
xchg
lahf
push
out
rcll
mov
mov
aaa
mov
adc
or
or
jmp
xor
mov
jae
nop
setns
aad
xor
test
xchg
and
std
aam
fistl
sub
pop
ja
orb
adc
mov
cld
or
and
mov
cmp
xlat
pop
or
add
dec
mov
mov
pop
xchg
out
mov
mov
pop
lock
pop
clc
stc
cmp
rcrb
fistpl
sub
loop
pop
mov
mov
sarb
pop
mov
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
xlat
pop
rcll
cltd
ret
lock
fnstcw
adc
ret
fbld
fs
stos
cmpsb
js
push
add
sub
cmpsl
rorl
ret
mov
inc
mov
push
push
int3
in
sub
pop
pushf
xchg
mov
ret
dec
mov
sahf
das
add
or
addl
push
jmp
and
lods
pop
and
rorl
mov
xchg
or
stc
lods
outsb
add
test
sbb
mov
or
inc
stc
scas
mov
xor
xor
xchg
cmp
cld
xchg
inc
mov
movsl
ljmp
mov
push
test
leave
mov
mov
int
mov
add
adc
mov
mov
test
jmp
cltd
fmulp
inc
mov
mov
inc
stos
outsl
pop
sub
movsl
jecxz
pop
xchg
outsl
or
mov
mov
pop
mov
ljmp
sbb
cld
mov
xor
cltd
add
sbb
imul
mov
movsb
mov
fisubrl
cmp
insb
jecxz
add
cld
mov
notb
inc
sbb
jl
je
push
test
cmp
dec
insl
out
clc
cmpsl
or
jns
mov
les
and
dec
leave
test
sub
xchg
jbe
pusha
arpl
mov
cmp
sbb
call
shll
divl
fadd
jp
pop
adc
int3
push
dec
or
sub
add
jb
adc
pop
jnp
dec
test
jle
jle
mov
push
cmp
jmp
out
adc
pop
shr
xorl
sub
sbb
and
negb
mov
jg
in
or
jno
push
loopne
imul
fdivs
lcall
int
mov
into
lret
into
mov
roll
lea
dec
call
push
sbb
fisubrl
push
mov
loop
fisubrl
daa
mov
add
cmp
push
mov
mov
jl
outsb
ja
fsincos
adc
xchg
adc
pop
jecxz
lods
inc
loop
loopne
call
xchg
std
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
cli
mov
ret
scas
mov
xchg
in
mov
xlat
push
pop
add
out
enter
stos
sub
lret
xor
xchg
adc
rclb
sbb
mov
mov
pusha
add
or
test
test
in
inc
lods
sbb
mov
mov
sub
cli
ret
pop
stos
cmp
fcmovnu
icebp
push
ja
and
lods
add
cmpsl
in
mov
mov
rorb
test
add
cmp
sti
outsl
lods
pop
nop
xor
xor
pcmpgtd
int3
jb
inc
cmpsl
mov
orb
out
idivb
xor
xor
adc
dec
push
dec
icebp
pushf
push
mov
dec
in
shlb
fs
int3
cmp
xchg
pop
pop
pop
adc
out
or
cltd
or
cmp
push
dec
stc
repnz
test
ljmp
pop
pop
iret
lcall
pop
pop
adc
movsl
ficompl
rcl
mov
ja
sub
xor
or
jl
and
ds
jp
xor
das
scas
jg
in
or
or
inc
cmp
test
push
mov
sub
movsb
push
adc
and
sbb
and
and
lds
mov
xchg
addb
jbe
jo
sbb
bound
mov
fiadds
or
or
loop
dec
xorl
fcoml
or
lock
iret
out
sti
mov
fst
fldl
mov
mov
mov
xor
stos
lahf
mov
xor
stc
adc
jecxz
push
sub
push
xlat
dec
pushf
jl
in
push
imul
or
mov
fnstsw
pop
stos
and
fcom
into
push
dec
add
rcrl
and
jne
icebp
cmpsl
cmpsl
std
mov
outsl
xor
dec
stc
cwtl
and
or
and
jle
sbb
call
sbb
outsl
cwtl
stc
jno
jecxz
pusha
bnd
xchg
test
shlb
popa
cli
std
clc
outsl
insb
hlt
scas
cmc
shl
jecxz
adc
pop
cmp
adc
shl
enter
les
add
jae
push
mov
xchg
xorl
pop
xchg
push
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
les
mov
fstl
aam
cmp
jne
or
mov
gs
add
inc
loopne
xchg
adc
or
push
out
sbb
jns
pop
ficompl
lcall
inc
cmpl
out
movsl
and
xchg
outsb
lret
xchg
pop
rorl
inc
or
adc
mov
daa
adc
scas
mov
sete
xor
insb
add
mov
dec
dec
stos
sti
inc
mov
gs
repz
mov
icebp
in
das
or
jb
dec
push
stos
xchg
mov
scas
xchg
fldl
mov
mov
sub
jp
in
outsb
ljmp
out
add
sub
bound
jg
dec
cmp
adc
movb
inc
add
cld
cmp
ljmp
sub
sub
push
inc
add
sahf
lea
jne
not
sub
loope
cmp
test
test
xor
lcall
andl
aaa
or
sbb
mov
lcall
jecxz
aas
dec
adc
sbbl
repz
movsb
xchg
mov
incb
bound
mov
mov
mov
rcr
mov
outsb
dec
repnz
aam
movsl
ja
cwtl
out
sbb
pop
adc
int
jno
sub
xor
jmp
fdivrl
out
in
xchg
rcll
test
xor
jnp
leave
mov
pop
out
jl
mov
test
in
sbb
mov
mov
sbb
adc
mov
out
push
sti
aam
enter
js
mov
pop
xor
cmpsl
addb
cmpsw
js
scas
lcall
adc
ffreep
mov
nop
push
insb
stos
sub
xor
cmp
cmp
mov
mov
sub
xchg
push
outsb
stos
push
shll
pop
push
xchg
jnp
mov
into
data16
xchg
push
dec
mov
and
cwtl
lea
adc
and
inc
lock
adc
jp
pop
and
test
outsl
arpl
popf
inc
inc
repnz
sub
les
mov
add
rcrb
mov
mov
and
in
movsb
xchg
pop
jp
jb
xchg
stos
sarl
push
repz
jbe
ljmp
dec
add
fdiv
push
sbbb
loope
sub
xor
dec
test
shlb
add
insb
mov
scas
mov
mov
sub
and
sbb
or
movsl
fxch
adc
xchg
fwait
gs
push
aad
nop
add
sbbb
pop
adc
hlt
lahf
push
push
and
mov
mov
dec
scas
js
mull
insl
sub
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
fsubrs
nop
in
adc
mov
jb
mov
insb
aam
push
cmp
push
hlt
mov
jmp
push
and
and
jp
cmp
adc
pop
repnz
scas
imul
cwtl
mov
inc
sbb
jnp
pusha
dec
loopew
jnp
xchg
sbb
ss
ret
add
sbb
mov
mov
sbb
jmp
fdivs
xchg
test
orl
jmp
pop
test
dec
mov
push
pop
dec
out
xor
lea
push
cld
xor
nop
jne
jnp
dec
fldcw
sarl
and
add
sub
or
in
push
sbbb
ret
inc
mov
xor
pushf
fcmovu
addb
jae
or
cwtl
pushf
outsb
in
adc
xchg
rcr
loopne
xchg
ja
flds
ds
aaa
cwtl
adc
xor
fmull
jb
shlb
push
xchg
ret
insb
jmp
push
sub
mov
xor
in
mov
mov
xchg
xchg
pop
aad
ret
pop
push
int3
sbb
out
mov
cli
sub
dec
mov
loope
ja
cmp
dec
sbb
jge
jp
imul
fcoml
xchg
sbb
mov
mov
push
ljmp
jno
add
fdivrl
lock
movsb
mov
xor
mov
mov
aas
dec
cld
mov
in
fmul
fcmovb
xchg
stos
jg
push
inc
jge
mov
mov
loopne
push
call
insl
fdivl
stos
inc
mov
lcall
pushf
push
scas
rcll
fs
fwait
mov
hlt
sbbl
stc
arpl
xchg
cmp
pop
int
dec
push
jecxz
lods
fildll
gs
pop
clc
bound
ja
xor
push
mov
xchg
addr16
daa
inc
pop
cmp
xchg
sbb
xor
in
pop
or
ret
sbb
push
dec
mov
sub
jbe
cli
xlat
adc
adc
lahf
fidivl
repnz
negb
cmp
sub
dec
movsl
push
mov
stc
iret
out
xorl
mov
jge
popa
call
dec
ljmp
mov
movsl
loope
xor
loope
pop
outsl
jp
inc
pop
cmpsb
pop
push
lds
and
out
iret
sbb
mov
xor
sub
and
call
jno
mov
dec
mov
sbb
rcrb
dec
fmulp
adc
nop
dec
pop
int
jnp
dec
lods
sub
add
stos
dec
ficoms
sub
mov
mov
sti
sub
add
mov
and
enter
jbe
ret
cmpsl
mov
mov
inc
push
repnz
mov
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
lods
pushf
jecxz
sbb
mov
sti
ss
outsb
or
subb
xlat
adc
out
mov
inc
adc
pop
xchg
add
mov
cld
les
jbe
jl
mov
mov
call
sbb
sub
dec
cmp
in
test
leave
inc
inc
clc
or
sub
ja
sbb
ficompl
dec
std
sbb
mov
xchg
dec
cmpsb
sbb
imul
jae
je
ficomps
sbb
into
call
mov
mov
fwait
sbb
add
js
sahf
das
xchg
sbb
js
mov
std
out
xchg
cmp
loop
ja
aam
sub
dec
loop
xor
mov
xchg
daa
or
je
push
adc
sub
sbb
dec
std
adc
add
mov
lahf
std
mov
sbb
andl
movb
insl
add
jecxz
sahf
fcos
adcb
std
mov
jecxz
in
outsl
lret
sub
mov
xchg
dec
pusha
mov
cmpsl
bound
fs
fs
push
in
or
or
dec
inc
das
decb
arpl
xor
ret
xchg
fdivrl
mov
add
divl
loop
push
pop
fidivl
das
sub
in
pop
test
and
jne
xchg
push
mov
ja
sub
roll
mov
sub
jo
addr16
int
cmp
insl
mov
out
inc
xchg
std
mov
xchg
push
mov
push
popa
jbe
fadd
test
sbb
ds
inc
sub
aam
dec
jmp
cmp
or
inc
mov
inc
pushf
mov
in
xor
testb
mov
and
mov
cmp
pusha
sub
movsb
add
out
mov
mov
in
fadd
mull
scas
mov
jns
aas
add
int
mov
into
test
mov
aam
mov
add
push
sub
push
jo
and
push
jmp
enter
dec
addb
pushf
mov
ja
bound
dec
mov
mov
inc
and
fs
clc
sti
data16
inc
in
das
stos
dec
adc
cs
or
xchg
jle
jmp
addl
pop
lahf
pop
mov
sbb
inc
jb
enter
add
inc
xor
bound
or
mov
lahf
pop
mov
setbe
adc
mov
stos
cmpsb
movsl
cmp
dec
rcrl
and
sbb
xchg
sbb
test
mov
ds
mov
out
imul
fisubrs
xor
fsubs
adc
xor
aad
js
jecxz
icebp
rol
xor
cmp
test
jecxz
xchg
scas
fs
lret
xor
stos
pop
addl
ret
repnz
mov
cmp
mov
cmpsl
jl
in
inc
out
push
mov
int
js
inc
es
movsb
icebp
cmpsb
inc
xchg
mov
or
pop
test
loope
push
and
in
pop
adc
scas
arpl
inc
push
clc
add
jmp
and
scas
mov
fisttpl
lcall
imul
test
xor
add
inc
lods
mov
inc
mov
dec
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
push
sub
pop
push
mov
mov
and
lret
jp
aaa
ret
shrl
jne
fiaddl
lea
mov
sub
or
aas
in
std
lea
icebp
fcomps
inc
sbb
arpl
mov
fsubrl
xchg
outsl
xchg
mov
in
imul
pop
sbb
pop
fs
lods
adc
scas
sbb
or
push
mov
dec
cmc
xchg
or
lea
xchg
ret
subl
sub
shlb
outsl
cmp
xchg
aam
xor
sub
aaa
dec
das
testl
shll
or
xor
fisubrl
mul
adc
inc
popf
loopne
data16
out
daa
unpcklps
shll
lahf
addr16
hlt
pop
std
psubusb
push
leave
cmp
fistps
jae
push
or
shlb
addr16
add
adc
stc
roll
outsb
shlb
adc
push
dec
mov
sbb
inc
adc
mov
and
mov
pop
aad
mov
mov
popa
sbb
rcrl
cmp
int3
and
push
inc
mov
lcall
aad
dec
mov
pop
mov
rcrl
add
cmp
ds
xchg
rorl
mov
xchg
cwtl
std
pushf
jo
fiadds
cmpsb
mov
imul
xchg
enter
xor
int3
adc
lret
adc
fsubr
mov
out
xlat
push
test
mov
pop
inc
hlt
inc
push
cmpsl
add
pop
cltd
add
testl
sub
add
mov
je
jae
fldl
pop
cmp
push
push
test
fadds
in
insl
add
lds
push
cmp
push
scas
jmp
jge
addb
paddq
scas
jno
mov
ret
es
imul
scas
xor
xor
rcrl
lret
out
mov
push
lahf
inc
insl
xchg
aad
mov
jecxz
and
imul
jl
fdivs
push
mov
cmp
cmpsb
mov
out
or
add
shlb
mov
jmp
outsl
add
dec
or
push
cwtl
scas
scas
xchg
in
xchg
xchg
sbb
or
and
iret
xchg
out
fidivl
sub
inc
lcall
cmp
jg
jp
std
rcll
rcll
or
call
inc
push
xchg
add
jbe
in
mov
sbbb
scas
nop
dec
jge
cmpsl
sahf
rclb
mov
fdivr
iret
mov
mov
fdivl
je
pop
mov
push
cmp
xchg
hlt
shll
mov
mov
add
rolb
pop
cmc
jno
and
pushf
ja
in
jnp
aam
ss
push
outsl
int
loope
ror
pop
and
ds
sbb
lock
leave
jecxz
dec
popf
sar
cltd
xor
or
jp
adc
or
cmp
jb
pop
mov
sbb
adc
cmp
inc
adc
dec
cld
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
dec
ret
jge
mov
mov
mov
leave
lahf
push
popf
adc
nop
jg
mov
inc
test
mov
xor
pushf
sahf
call
lods
sbb
out
andb
add
mov
mov
inc
fcmovne
inc
jmp
shr
inc
or
sub
xor
jg
je
nop
xchg
test
imul
iret
cmpl
push
mov
scas
cmp
fcoml
movsb
inc
movsl
xor
xor
aaa
push
push
hlt
sahf
jb
dec
lcall
sub
scas
call
sbb
sarb
and
mov
cs
repz
sub
scas
mov
mov
mov
scas
mov
push
lock
dec
pop
mov
lods
pop
mov
and
push
or
xchg
dec
fcompl
js
iret
dec
push
jg
cld
xchg
adc
add
pusha
xchg
cmpsb
insl
jl
mov
movsb
lahf
dec
and
push
aad
repnz
xor
push
shr
xchg
ljmp
adc
adc
cmp
cmpsl
loop
add
pop
pop
lahf
adc
pop
pop
or
sahf
rcll
filds
add
in
jno
cmp
insl
adc
ret
mov
cmpsb
or
ret
xchg
lret
popf
dec
rcll
dec
and
in
addr16
outsb
clc
adc
sbb
push
mov
ds
lahf
pop
pop
movsb
out
cmp
inc
testb
dec
add
mov
lods
iret
subb
les
xor
pop
inc
jge
das
inc
loope
add
add
mov
xor
loop
ret
mov
xchg
xor
int3
fcos
add
jns
idivb
mov
test
movsl
clc
jl
adcl
repnz
jbe
cmp
pop
pushf
sub
out
cmp
dec
xchg
xlat
jo
out
jbe
in
mov
jno
cli
pop
mov
scas
movsb
xlat
sbb
sbb
mov
std
enter
mov
lods
pop
mov
aaa
jne
mov
int3
orl
mov
push
sbb
lahf
sbb
cmpsl
mov
cld
repnz
jmp
jmp
addr16
cltd
inc
xchg
push
jo
cmp
push
outsb
fdivp
subb
fidivrs
dec
xchg
jb
lods
out
adc
xor
rcrl
mov
enter
lahf
popf
hlt
xchg
in
mov
mov
out
xchg
adc
jle
ss
push
mov
add
push
data16
imul
out
bound
mov
hlt
sub
dec
inc
mov
and
mov
in
andl
xchg
adc
lahf
fldl
pop
hlt
addb
fmuls
scas
pop
stos
popf
ficompl
cs
sahf
divb
adc
push
push
xor
pusha
xchg
jge
or
std
and
mov
push
xchg
cltd
sti
add
push
insb
rcrb
icebp
dec
outsl
std
roll
pop
ljmp
mov
xor
pop
cmc
or
imul
stos
jl
in
add
mov
inc
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
push
mov
mov
mov
add
stos
sub
int3
aad
inc
and
aas
sub
xor
stos
out
stc
lsl
xchg
repz
addl
push
rcrb
mov
inc
cmp
ret
dec
inc
sahf
inc
cmpsl
in
push
inc
jnp
dec
mov
mov
sbb
cmp
push
or
dec
jp
mov
int3
jp
and
nop
cmpsb
dec
mov
lgs
cltd
mov
push
setle
xor
int3
xor
pop
dec
pop
les
inc
and
pop
imul
push
pusha
mov
push
insl
mov
cs
mov
scas
push
cmpsl
dec
ficoms
pop
push
jle
push
mov
roll
xlat
push
movsl
lods
addr16
dec
sbb
sub
xchg
movsb
add
and
or
lret
pop
mov
cwtl
loop
call
xchg
andl
insb
fdivs
cmp
sub
mov
or
jbe
sub
mov
test
insb
jl
sahf
mov
test
aam
dec
pop
outsb
pop
dec
jl
test
dec
leave
xor
mov
xlat
push
sbb
je
sub
cmpl
pop
and
ss
fstl
into
pop
aas
outsl
int3
movsl
mov
dec
and
push
inc
cwtl
mov
dec
and
das
inc
push
loop
mov
push
ja
movsb
ret
dec
sbb
popf
vmovddup
cwtl
aam
inc
add
rorb
call
out
jnp
aam
pop
mov
stos
aad
mov
sti
sub
xchg
jae
mov
xchg
cmp
mov
jmp
mov
mov
jle
push
xor
pop
jmp
mov
pop
shrl
jne
cs
iret
gs
lods
dec
add
mov
sbb
jge
add
int3
pop
stc
cwtl
mov
dec
pop
mov
jbe
push
xor
cmp
mov
push
mov
add
je
jge
sbb
mov
lds
test
mov
aaa
aaa
add
mov
das
popa
loope
pop
add
mov
xchg
dec
push
pop
pop
in
roll
loop
ljmp
and
dec
xchg
mov
movsb
daa
popf
sbb
roll
mov
subb
out
lahf
lea
mov
xor
ficomps
mov
jle
lods
sub
xchg
push
and
lcall
inc
fildl
or
pop
mull
dec
test
fstl
jae
push
inc
je
stos
sub
daa
aas
pop
jnp
push
sti
pushf
jnp
xchg
dec
pop
loope
mov
sbb
popf
subl
xchg
cmpb
mov
jp
int3
add
push
inc
add
mov
inc
sub
dec
pop
inc
sbb
cmp
adc
mov
loopne
push
cltd
and
xchg
adc
inc
xchg
xlat
or
pushf
popa
push
das
pop
leave
mov
push
loop
rcl
inc
xchg
andb
inc
push
adc
fidivl
adc
addr16
xchg
mov
gs
add
scas
scas
push
inc
fnop
pop
push
test
insb
lret
popf
fadd
adc
in
hlt
outsl
push
mov
aam
xor
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
mov
xor
mov
insl
ret
and
xchg
mov
sahf
fimull
sbb
and
stc
loop
inc
aaa
push
adc
data16
ret
add
out
icebp
sub
cmpsl
sbb
xchg
outsl
arpl
cmp
dec
xchg
xchg
mov
jae
cmp
xchg
sub
jbe
mov
sbbb
std
cmp
and
jl
and
into
xor
popa
jne
test
inc
mov
in
fidivl
or
jbe
in
dec
push
addl
ret
inc
fiadds
dec
addr16
sbb
aad
dec
or
fdivrl
mov
or
aas
add
in
fistl
mov
push
xchg
mov
push
outsl
and
sbb
sti
stos
and
pop
mov
gs
imul
sub
sub
adc
xchg
jbe
dec
data16
add
cmc
fdivs
push
test
xorb
outsl
andb
lock
dec
pop
rcrb
lret
add
daa
rcrb
popf
repz
push
and
bound
cltd
sbb
nop
cmp
sbb
lret
mov
outsl
dec
xor
icebp
adc
sub
out
sbb
cwtl
and
movl
lcall
mov
push
jne
lods
lock
pop
or
mov
jl
hlt
bnd
out
test
dec
call
gs
mov
jno
push
add
jecxz
cmpsb
sahf
or
pop
movsl
xor
push
xlat
xor
push
xchg
into
movsb
notb
adc
sbb
push
pop
lds
push
mov
adc
aaa
ret
push
adc
pop
jg
mov
add
test
gs
and
shlb
int
insl
jle
lret
sbb
jecxz
xor
rcrb
push
repz
mov
or
jg
cmp
xchg
clc
pop
sbb
lret
cmp
enter
xor
ficoms
xor
aas
cs
bnd
xchg
stc
jae
aad
push
xchg
pop
les
outsb
xchg
mov
mov
lods
jnp
ljmp
xchg
movsl
sub
inc
dec
sub
test
jmp
stc
and
pop
outsl
imul
ds
mov
sub
mov
scas
and
or
xchg
adc
out
addr16
mov
in
push
repz
in
in
imul
bound
out
mov
jbe
in
shlb
aas
lahf
jo
les
aam
out
or
shl
push
inc
nop
movsl
arpl
xchg
sub
dec
dec
adc
gs
mov
push
and
fndisi(8087
push
xor
cmp
push
ljmp
ss
adc
lret
decb
sub
lret
popf
jb
movsb
sbb
imul
out
add
xchg
sbb
jp
daa
ss
movb
fiaddl
xchg
jo
dec
movsl
xchg
sbb
push
mov
ret
dec
popa
shl
adcb
es
push
xor
push
inc
imul
jl
leave
push
adc
inc
cli
mov
pop
mov
xor
add
std
cltd
test
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fucom
jae
iret
out
cmp
mov
jle
int3
ret
in
mov
cltd
mov
int3
in
cmc
pop
or
inc
mov
or
dec
inc
in
add
adc
bound
sbb
jb
xchg
fdivp
mov
pop
push
iret
sub
rolb
mov
push
ret
sahf
out
bswap
rcl
out
inc
cmpsl
popa
ljmp
xchg
cmp
sahf
addb
dec
pop
and
cld
dec
ret
push
inc
jg
imul
test
jae
push
push
imul
add
inc
and
lods
bound
cmp
aas
and
fisttpll
ret
dec
shlb
cmp
inc
cmp
xor
fisubrs
add
fwait
pop
stos
stos
mov
outsb
sbb
popa
pop
add
fnsave
outsb
movsl
sbb
lods
xchg
lcall
pop
call
arpl
sbb
es
and
jge
stos
pop
cmp
sbb
or
orb
imulb
xor
sub
lret
jg
lock
in
repz
xor
sahf
das
icebp
jo
sbb
xchg
fmuls
xchg
test
dec
sahf
mov
cmp
shrl
sub
sbb
xchg
sub
je
cmpb
call
jnp
or
mov
adc
jo
inc
aam
testl
mov
pop
shrb
fsts
add
sahf
ja
clc
push
jae
out
sub
pushf
nop
lcall
insb
inc
pop
lock
aaa
imul
aas
adc
and
gs
cltd
loope
scas
pop
in
add
or
fsubp
lret
jl
into
cmp
pushf
gs
xlat
adc
adc
dec
sahf
dec
xchg
loop
mov
insb
test
dec
movsb
or
loope
rolb
mov
mov
in
movb
jg
outsl
movsb
xchg
jp
mov
pop
mov
imul
mov
lock
es
addr16
cmpsb
shlb
lds
pop
and
scas
mov
enter
sub
cmp
jae
incb
mov
jp
jg
sbb
dec
jno
scas
pop
sub
pushf
xor
fmuls
imul
mov
into
repnz
xchg
addl
pop
cmp
cmpb
mov
outsl
ret
mov
fimull
insl
add
cs
pop
and
adc
add
push
movsb
dec
fmull
push
xorb
or
mov
ljmp
gs
jmp
in
inc
xchg
adc
sub
in
pop
jle
and
roll
insl
leave
hlt
insl
out
loope
add
jp
out
jmp
mov
jns
pop
jnp
push
push
add
cmp
scas
push
fldcw
test
or
push
in
je
jle
fcmovne
mov
pop
adc
xor
add
and
xor
jbe
xor
rolb
scas
xorb
cmp
mov
or
pusha
hlt
mov
cmpsl
fwait
mov
sbb
xor
push
scas
push
inc
adc
pop
std
cmp
pusha
jp
mov
in
idivb
mov
into
jo
mov
pop
xchg
adc
xor
xchg
orl
scas
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
movsb
push
inc
mov
mov
inc
add
push
rcrb
out
adc
mov
jecxz
sbb
in
insl
dec
jge
rolb
push
stos
out
fisubs
out
ljmp
insb
es
fcmovne
int
push
icebp
jne
xor
xchg
sti
pop
fildl
jl
les
or
pop
jb
and
push
fistpll
popf
cmpsl
lea
pop
scas
bound
mov
mov
in
mov
iret
fnstcw
int3
jge
into
pop
lds
lock
cmpsb
adc
jns
pop
loope
cmpl
inc
lea
sub
dec
mov
adc
andb
jae
push
call
fnstsw
add
leave
stos
push
lcall
vmovaps
in
pop
xlat
jecxz
aas
arpl
mov
pop
repnz
faddl
les
pushf
adc
int3
rolb
jno
out
dec
test
sbb
sahf
je
add
lods
xchg
adcl
out
insl
jns
fisttpll
push
sub
xlat
pop
adc
mov
ljmp
insb
sbb
or
mov
jo
push
fisttpl
inc
ss
jl
push
mov
mov
cmp
pop
bnd
mov
mov
js
jecxz
mov
fisttps
int3
lret
mov
jmp
mov
ss
mov
mov
mov
dec
push
ret
inc
jecxz
inc
dec
dec
inc
out
lods
orl
or
xor
push
mov
aas
add
dec
mov
xchg
jl
push
add
enter
popa
push
loop
and
add
icebp
lods
push
mov
jb
dec
ljmp
jg
and
ja
cmovbe
data16
push
mov
out
xchg
push
jb
pop
jle
pop
sbbl
sbb
rcrl
cwtl
sbbb
xor
add
dec
scas
insl
mov
inc
cmpsl
dec
addr16
arpl
inc
sub
es
cmpsb
sbb
mov
mov
pop
sarl
mov
sub
mov
cmp
aaa
int
aam
push
pop
out
jne
jle
pop
jbe
jns
fcmove
outsb
shrb
sub
mov
out
sbb
pop
in
or
scas
xchg
andb
pop
mov
jmp
pop
sub
xor
dec
fcmove
and
movsb
xor
or
in
in
cli
jnp
aad
dec
pushl
leave
push
dec
sbb
mov
mov
fmul
xchg
xchg
mov
inc
mov
pop
mov
lcall
ds
in
jecxz
stos
mov
adc
leave
dec
pop
jne
add
dec
xor
xor
adc
mov
xchg
pop
mov
das
int
xor
inc
pusha
in
gs
or
inc
mov
sub
mov
call
cmp
mov
mov
pop
call
dec
das
adc
jmp
mov
xor
mov
mov
rcr
xchg
fcoms
jo
push
pop
ss
ljmp
dec
pop
scas
and
push
out
pop
dec
xor
push
jae
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
loop
pop
jo
clc
cmpsl
pop
icebp
mov
mov
clc
sub
lahf
idivb
or
sti
lret
jg
loope
insl
into
xchg
mov
mov
int3
add
insl
test
dec
add
adc
jb
xor
lret
and
or
leave
daa
scas
xchg
lret
loop
mov
xchg
scas
sub
stc
push
negb
jmp
mov
sub
stos
xor
daa
hlt
les
aam
inc
imul
push
test
push
pusha
lcall
sub
add
xor
xor
in
stc
cmp
push
lods
push
aaa
inc
push
ret
flds
dec
outsb
insl
out
push
out
das
mov
mov
test
lcall
fisttpl
gs
daa
xchg
je
lahf
in
stos
in
or
jb
bound
xchg
testl
push
jae
xor
push
jo
mov
sbb
in
or
inc
nop
push
jmp
adcb
lock
and
adc
mov
xchg
push
rorl
hlt
and
adc
push
mov
jecxz
sub
inc
mov
and
filds
ljmp
xchg
cmp
hlt
or
in
xor
adc
lret
cmpsl
test
or
or
into
jmp
sbb
cwtl
mov
cld
das
mov
stos
outsl
sub
xchg
in
or
xor
mov
lcall
je
pop
nopl
xor
dec
dec
lret
int3
dec
sbb
sarb
cmp
mov
cli
into
fdivr
insl
in
sbb
jae
mov
test
fbstp
xchg
adc
jl
fs
int3
mov
mov
les
cwtl
pop
inc
push
mov
test
outsb
mov
idivb
dec
cmc
cmc
pop
outsl
pop
ja
stc
popl
adc
clc
sbb
push
lds
xchg
mov
loope
inc
nop
jne
out
mov
loopne
mov
lods
mov
push
sahf
mov
jg
mov
mov
xor
lock
inc
dec
fldl
pop
std
mov
clc
add
add
movl
movl
jmp
pop
daa
fcompl
mov
aad
push
stos
fisttpll
dec
mov
mov
mov
into
aad
mov
pushf
xchg
fwait
add
or
cli
cmpsb
dec
xchg
fs
insb
mov
mov
and
sub
jo
mov
add
xchg
dec
enter
xor
and
insb
push
mov
aaa
scas
xor
popa
ja
rolb
scas
fisttps
ss
fwait
xlat
lcall
push
mov
addr16
inc
fs
shrl
cmp
in
cwtl
fimuls
jle
mov
lods
mov
and
into
inc
mov
ss
mov
pop
fwait
pushf
test
fs
push
into
outsb
or
mov
inc
in
mov
sub
in
ja
xchg
nop
inc
fistpll
fistpll
das
mov
dec
stos
ljmp
jae
mov
xchg
or
mov
jecxz
not
or
xor
std
rorl
rol
sub
rorl
arpl
imull
loop
pop
push
sbb
jno
mov
test
dec
adc
fmulp
cmpsb
pop
fistpl
mov
roll
call
sbb
fdivr
enter
aad
inc
scas
lds
sahf
nop
xor
add
pop
mov
mov
dec
cs
inc
sbb
ficoms
ds
jmp
clc
inc
out
sub
fisubl
out
or
cmp
mov
mov
jae
lret
cwtl
out
sub
lock
mov
cs
jl
push
inc
mov
fst
loopne
mov
pop
paddusw
in
push
sti
mov
add
shlb
sbb
filds
lods
mov
xchg
mov
cmp
jp
in
mull
xchg
xchg
add
mov
outsl
push
push
pop
lret
cld
test
sub
push
and
mov
mov
push
mov
ret
push
xchg
and
dec
or
imul
xchg
xchg
push
add
arpl
cmp
and
jge
fadds
pop
adc
jnp
inc
inc
dec
push
aaa
mov
stos
outsb
sub
sub
fwait
sbb
insl
jle
jnp
pop
pop
push
pop
jg
jge
adc
pusha
fwait
loopne
adc
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
pusha
cmp
movsb
aam
mov
mov
sbb
adc
jg
adc
cmp
aas
xchg
cltd
cmp
push
push
leave
insl
mov
push
stc
mul
push
movhps
xor
jae
aad
or
stc
popf
fcoms
cmp
or
add
cmp
sbb
sbb
jo
dec
imulb
xor
xor
add
jno
xchg
cmpsb
xlat
notb
pushf
jns
and
add
frstor
fimull
push
test
mov
push
sbb
and
jle
nop
inc
sub
mov
fiaddl
push
xchg
dec
dec
jg
mov
jp
dec
pop
jo
mull
insl
icebp
mov
or
add
ja
flds
andb
imul
jg
repz
inc
cmp
mov
jnp
xchg
pop
pop
gs
rcrb
adc
push
and
adc
mov
cmc
and
int
loope
insl
lock
jns
fiadds
pop
inc
ret
jle
mov
das
movsl
popa
sbb
add
inc
ss
or
mov
in
jne
jg
stos
mov
adc
lods
icebp
push
out
decl
pop
cmc
outsb
incb
shlb
insb
popl
cmp
in
sahf
dec
mov
pop
out
sti
inc
push
add
adcl
dec
mov
frstor
int3
inc
mov
aas
adc
out
sbb
fsubp
fsubl
mov
mov
mov
js
push
les
or
shrb
and
mov
sbb
shr
movsb
clc
inc
sahf
jp
icebp
jecxz
add
sub
xor
add
pushf
jge
or
add
sete
ds
test
push
mov
push
dec
mov
imul
mov
popf
inc
fstps
fmull
mov
loopne
xor
xor
mov
push
faddl
fistl
pop
dec
movsb
lds
adc
jge
insl
add
iret
xchg
and
sbb
fs
rorl
pop
sub
sub
sbb
stc
test
imul
fcoms
rcll
ljmp
test
fcmovu
js
mov
enter
sti
fldcw
cmp
lea
and
cs
xchg
mov
add
or
scas
jb
movb
hlt
repnz
push
out
inc
adc
mov
pop
push
imulb
not
mov
adc
roll
pop
cs
pop
iret
inc
repz
divl
adc
and
hlt
or
cmpl
mov
pop
mov
hlt
push
and
ret
dec
div
mov
add
dec
and
ja
mov
arpl
scas
repnz
les
popa
ret
adc
into
jo
or
add
pop
jle
in
inc
data16
push
sub
cmp
xor
adc
dec
es
mov
inc
data16
jg
dec
test
and
jno
fistpll
xlat
cmpsl
sar
daa
push
jne
loopne
and
bnd
dec
dec
popf
lret
adc
push
push
outsb
xchg
hlt
mov
int3
and
enter
mov
add
xlat
xchg
push
lcall
fists
shrl
les
fistl
ficoml
mov
pop
inc
cld
push
or
cmp
cld
les
and
sub
out
call
test
stos
push
aam
sub
in
inc
mov
xor
sub
ss
enter
jns
imul
dec
adc
into
movsb
jae
dec
rcr
fldcw
and
mov
paddusb
mov
movsl
add
xchg
mov
push
aam
adc
scas
popf
lea
pop
dec
sub
lcall
and
cmp
mov
sahf
dec
divl
lea
push
mov
or
pop
mov
cmp
rcrb
and
jnp
js
je
push
mov
cli
es
inc
lods
pop
mov
push
jecxz
int3
stos
addr16
pop
pop
icebp
scas
sbb
jle
inc
cmc
dec
pusha
mov
mov
mov
test
jmp
in
sbb
jg
jae
dec
mov
xor
push
or
scas
inc
out
mov
xchg
ret
and
fs
stos
out
aas
insl
fisubrl
and
inc
aam
adc
clc
mov
rcrb
xor
jg
jbe
ret
repz
xchg
filds
mov
loopne
pop
movl
iret
lods
push
pop
inc
movsb
xchg
dec
enter
insb
fidivl
fimull
adc
sub
push
push
adc
xor
jg
cmp
lret
into
daa
lds
or
lret
push
ja
mov
sahf
jno
das
lock
test
xor
cmp
lock
cmp
inc
pop
xchg
cmp
loop
sub
scas
sti
fs
mov
je
inc
cmp
add
xor
or
cmp
jae
xchg
and
test
adc
in
and
outsb
xchg
aam
rcrl
adc
jge
sbb
aad
dec
imul
arpl
dec
push
inc
xor
push
push
add
xchg
push
les
movsl
shrb
sub
rcll
jle
sub
xchg
mov
sbb
subb
in
or
jmp
in
cmp
in
ja
enter
mov
sbb
mov
push
jecxz
adc
or
test
hlt
sub
inc
push
inc
enter
jb
ds
aas
out
push
cmpsl
jg
xchg
ja
fdiv
push
pop
std
popf
push
jns
push
push
pop
cmp
rolb
mov
data16
xchg
lods
lock
add
sub
mov
sub
in
pop
pop
popa
shlb
sbbl
call
cli
imul
loopne
nop
lods
xor
or
rcll
inc
lods
dec
mov
push
lret
xor
scas
mov
sub
shl
in
arpl
jg
pop
inc
lds
xchg
ss
rorl
rorb
inc
test
mov
nop
dec
sub
mov
pop
sbb
mov
dec
in
jb
mov
jmp
xchg
inc
cmpsb
into
in
pop
cmpsb
rorl
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
test
cld
movsb
mov
mov
inc
lods
xchg
inc
pop
adc
xchg
loopne
jb
and
pop
arpl
nop
xchg
pop
cmp
dec
jge
sub
repz
jns
jbe
in
int
add
pop
ljmp
push
lret
xor
fnstenv
shll
and
adc
mov
dec
std
mov
fwait
inc
mov
in
fildll
int
dec
mov
ljmpw
and
fmul
test
aas
aas
int
xchg
js,pn
cld
xor
and
mov
fwait
cmp
pop
push
mov
fiadds
jmp
ret
and
inc
ret
daa
xchg
or
xor
in
ljmp
dec
sbb
lods
loopne
mov
out
or
test
cmp
setns
out
shl
jns
pop
inc
cmp
test
movsb
aad
jns
mov
xchg
mov
inc
sbb
pushw
mov
mov
fisubrl
bound
pusha
lds
jns
xchg
xor
dec
pop
adc
fmuls
add
and
jl
addl
int3
mov
mov
xchg
adc
iret
lods
outsb
repnz
cmp
jmp
inc
nop
mov
lea
lcall
stos
dec
dec
pop
xlat
jns
bound
fwait
jae
loope
das
rclb
sbb
pop
jbe
lret
in
mov
divb
loop
bnd
jge
jnp
sub
outsl
popl
or
clc
or
movsb
addl
loopne,pt
sbb
in
adc
mov
inc
pushf
and
cmpsl
loop
jl
sti
mov
lea
dec
mov
aam
repnz
jl
xchg
pusha
insl
pushf
idivl
leave
cmc
xchg
and
hlt
xchg
in
cmc
sub
mov
pop
adc
std
shll
arpl
dec
addb
loopne
test
cmp
xchg
stos
inc
mov
hlt
mov
out
std
sbb
daa
testl
sar
fnstcw
and
lret
sbb
fwait
push
imul
push
or
mov
pop
inc
insl
cwtl
adc
add
mov
push
dec
or
cmpsl
clc
stos
aam
imul
cmpsb
test
sub
insl
daa
in
mov
insl
mov
test
mov
mov
adc
push
mov
xor
mov
dec
insl
loop
iret
sub
jae
out
mov
test
jle
fsubr
mov
pop
dec
cld
sti
js
mov
ja
out
xor
cmp
jmp
jecxz
movb
mov
cwtl
mov
pop
jne
daa
xchg
push
je
es
rorl
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
icebp
xchg
nop
nop
pop
mov
ret
dec
and
inc
or
fwait
cmpsb
jno
hlt
dec
gs
dec
movsb
rcll
nop
hlt
lret
dec
xor
lods
xchg
test
sbb
or
pop
mov
push
lret
inc
push
arpl
insl
dec
out
fcomps
cmp
lds
sbb
sub
fisttpll
mov
loope
jg
xchg
ror
daa
mov
cwtl
add
jns
fdivs
cli
out
mov
movsb
jle
repz
pop
adc
repz
sub
call
cmp
push
es
cwtl
push
mov
pushf
aad
mov
inc
aam
outsl
and
aam
mov
sbb
imul
ss
add
sub
out
mov
adc
inc
adc
inc
inc
dec
cmp
xor
pusha
add
xor
pop
test
jb
xor
and
sbb
jno
push
mov
cmp
mov
cmpl
mov
add
fistpl
lahf
jmp
movsb
testl
fnsave
mov
xchg
pusha
je
lea
jno
jecxz
call
popa
jne
adc
sub
or
xchg
add
or
pop
push
js
test
nop
lock
shrl
or
jb
mov
pop
leave
mov
inc
ljmp
es
test
les
pop
mov
cmp
dec
int3
add
loopne
int
sarb
push
fsubrl
cltd
rcll
inc
cmp
daa
std
push
push
mov
mov
jb
scas
inc
xor
xor
test
jge
xchg
imul
jmp
push
dec
aas
mov
mov
add
mov
lods
pop
mov
in
dec
or
fsubl
and
sub
xor
lods
jb
lahf
fstl
inc
jge
pop
mov
push
les
xchg
xchg
int
fisubrl
or
leave
cmc
jge
popa
sbb
push
push
cmp
shlb
inc
cld
popa
movb
jne
ja
and
or
push
sbb
cld
mov
leave
xor
dec
inc
outsl
xchg
add
andl
out
inc
sbb
xchg
jae
cwtl
icebp
es
in
test
data16
mov
je
out
jne
sbb
mov
cmp
mov
stos
dec
pop
pop
clc
push
mov
jbe
pop
in
push
cli
xchg
stos
pop
std
mov
call
jl
push
imul
lds
add
mov
sbb
mull
xor
dec
out
push
xor
dec
jmp
adcb
dec
sub
movb
sub
jne
add
cmp
mov
cmp
xchg
nop
shlb
rolb
mov
in
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
jmp
fs
sub
mov
mov
sbb
xchg
and
inc
ljmp
pop
nop
inc
pop
test
repnz
fisubl
jno
jmp
sub
test
xchg
lahf
dec
add
dec
xchg
ud1
xchg
mov
cmpsb
aad
and
aas
daa
outsb
sub
sti
mov
push
sbb
mov
pop
jno
inc
out
sti
ds
xor
fisttps
push
icebp
cmp
lret
push
push
es
mov
jbe
loope
adc
or
xchg
in
hlt
addr16
enter
or
xor
cld
xchg
adc
sarb
and
fcoml
xchg
pop
mov
mov
stos
arpl
loop
insb
popa
mov
jmp
shrb
mov
repnz
xor
sub
jns
scas
aaa
xchg
push
or
rorl
inc
movsb
inc
mov
sbb
pop
mov
movsl
popa
clc
test
stos
insl
add
sub
xor
push
sub
lcall
lret
aad
push
inc
or
jp
dec
or
xchg
nop
mov
jge
mov
mov
je
aam
xchg
ret
es
mov
pusha
dec
mov
mov
sbb
insl
add
cmp
xchg
nop
fpatan
test
imul
sahf
in
jo
mov
xor
addr16
stos
sarb
les
subl
int3
ds
int3
push
inc
roll
js
fbld
dec
test
dec
stc
scas
lds
or
push
dec
fucomi
dec
lcall
lock
hlt
fiadds
jle
mov
xchg
or
push
fistl
mov
mov
mov
loope
divl
dec
mov
add
sahf
fisubrl
lea
inc
sub
out
ss
data16
pop
add
out
or
and
push
mov
push
add
push
jne
inc
push
and
loop
inc
mov
mov
repnz
call
aam
mov
cmp
stc
repnz
call
ret
cld
sbb
mov
push
mov
in
lea
out
pushf
or
ljmp
sub
imul
cltd
mov
xchg
xchg
pushf
sub
hlt
mov
ret
and
subl
jge
dec
mov
sbb
fistl
pop
jl
nop
scas
pop
lahf
ljmp
mull
hlt
jp
movsl
into
aas
pusha
in
mov
sahf
and
ljmp
fisubs
mov
mov
add
mov
sub
adc
or
push
and
icebp
gs
test
out
and
pop
mov
nop
inc
pop
inc
or
not
in
add
mov
pop
mov
jnp
test
adc
xor
inc
mov
rol
mov
lods
push
push
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
mov
mov
rcrb
push
lahf
jnp
sbb
mov
cmp
adc
fadd
daa
pop
pop
xchg
ljmp
aad
adc
push
mov
jmp
fwait
loop
cmc
push
mov
mov
addl
fistpll
out
out
cli
dec
cs
mov
or
adc
xorl
nop
movsb
xchg
gs
jno
inc
testb
or
mov
dec
pusha
add
lcall
jno
push
jnp,pn
inc
aas
sub
nop
pop
sbb
xor
sahf
pop
lods
lock
mov
pop
out
mov
repz
jp
in
xor
in
cmp
or
mov
inc
cmpsb
pop
xchg
or
insl
nop
sarl
test
rcrl
hlt
push
shrl
mov
cmpsl
fildl
jnp
inc
mov
cs
into
fwait
inc
notb
add
out
imul
test
outsb
jb
loope
in
push
pop
xchg
adc
mov
mov
cltd
les
outsl
mov
jbe
pop
push
sbb
fistl
in
aas
mov
cs
repnz
jp
cmp
or
and
rol
sarb
pop
rclb
cmpsl
lcall
lret
mov
insl
into
movsb
clc
notl
adc
rolb
das
and
push
mov
mov
and
inc
cmp
loope
pop
sub
adcl
lds
ljmp
test
pop
mov
adc
icebp
mov
aam
test
adc
jl
add
pop
inc
btrl
nop
bound
les
sti
mov
sbb
iret
inc
popa
mov
pop
arpl
in
sbb
mov
jnp
shl
inc
mov
push
mov
out
mov
pop
cmp
fwait
mov
in
adc
cli
arpl
xchg
mov
pop
xor
ljmp
repz
jmp
sbb
cmp
xor
xchg
adc
pop
cmp
add
roll
jg
mov
sti
dec
iret
push
jb
push
movsb
stos
mov
flds
outsl
iret
dec
iret
jb
js
adc
adc
rcrl
lods
inc
ret
outsl
iret
dec
mov
ret
ja
fistpl
jmp
xchg
adc
jbe
mov
pusha
jge
in
scas
mov
sbb
sub
scas
arpl
pop
rolb
mov
cmc
xchg
jnp
sub
aam
testl
jp
mov
adc
sbb
arpl
mov
jnp
dec
jns
lret
push
inc
sbb
add
adc
cwtl
inc
bswap
dec
lds
mov
hlt
sub
mov
bound
testb
jb
push
mov
xchg
inc
mov
das
mov
repz
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
clc
out
les
ds
lods
jnp
pop
lret
cltd
loopne
stos
xor
dec
into
pop
popf
add
icebp
data16
fists
mov
xchg
lods
std
test
adc
and
sbb
and
sub
xlat
lcall
sub
ja
and
dec
aas
test
and
aaa
mov
imul
sbb
imul
shrl
out
inc
fimull
pop
int3
in
mov
test
jp
mov
mov
outsl
xchg
mov
add
std
in
mov
cld
ja
repnz
aas
mov
add
ja
fcomi
push
ret
imul
mov
or
data16
jb
repnz
outsb
jnp
aaa
mov
loope
hlt
orl
and
into
mov
out
mov
out
lods
xchg
andb
or
stos
mov
lahf
jno
and
push
push
push
stc
inc
mov
cmp
outsl
push
jg
je
arpl
adc
pop
adc
rorl
rorb
repnz
jle,pn
xor
push
andl
cmc
push
mov
dec
add
lock
mov
outsl
ss
xchg
ret
mov
std
jg
dec
ficoml
test
pop
outsb
sbb
xor
inc
mov
or
aad
sub
inc
xor
js
or
xlat
mov
xor
sub
out
inc
adc
jns
aas
xor
rcrl
pop
adc
jle
in
mov
adc
daa
notb
sbb
or
mov
stos
cwtl
out
cli
fidivrs
push
dec
pop
pop
jge
mov
scas
mov
mov
movsl
mov
dec
ds
clc
jle
xchg
dec
loop
pop
arpl
add
inc
add
pop
and
fidivs
iret
jns
es
mov
loope
scas
adc
mov
lret
sub
push
xor
push
cmp
lret
mov
ljmp
push
dec
arpl
cli
icebp
outsb
xchg
xchg
mov
scas
loope
mov
test
pop
inc
enter
mov
add
mov
cltd
cld
cmp
add
mov
bound
sbb
lret
xchg
addr16
adc
notl
cmc
jmp
add
mov
add
ljmp
jp,pn
xor
fucom
or
sbb
cmp
adc
fmul
in
or
jg
jns
mov
xor
inc
pop
ret
jg
scas
or
sbbb
pop
roll
mov
jmp
gs
xchg
mov
movsb
or
je
out
test
loop
inc
mov
pop
mov
mov
dec
cwtl
cmp
cmp
call
ret
stc
jecxz
xlat
fistpll
mov
imul
push
pop
xor
les
jno
iret
push
sub
lret
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
xor
adc
in
les
mov
or
out
pop
mov
jo
mull
or
lret
pop
pop
jns
stc
push
dec
mov
icebp
push
xlat
js
sbb
add
stos
sbb
lea
jp
xor
aam
adc
icebp
xchg
xchg
ss
and
jmp
rcll
cli
jbe
ret
jne
enter
cmp
adc
cwtl
inc
pop
fidivs
sub
stos
mov
in
push
popa
cmp
into
popa
outsl
js
or
ja
inc
adc
xor
inc
loope
rol
testb
enter
jmp
inc
das
push
and
fsubrs
call
lods
jl
das
iret
bound
push
aaa
sbb
call
lods
ss
mov
add
mov
ret
mov
into
cmpsl
popa
sub
jle
cmp
jmp
stos
xrelease
dec
mov
add
mov
aam
add
pop
jl
and
les
pop
in
sub
rcl
add
lods
lods
js
mov
out
aaa
lret
inc
dec
adc
xor
call
inc
xor
int
pop
jg
jmp
jg
call
add
mov
ss
mov
icebp
mov
roll
xchg
rcrb
or
lcall
push
mov
fisttps
cmc
in
mov
sub
movsb
dec
adc
loope
in
movsb
cmp
push
mov
push
adc
sbb
enter
pushf
push
out
int
push
andl
xor
stos
fcoms
fs
mov
das
adc
jp
imul
mov
jge
shlb
sbb
in
dec
push
pop
push
lods
mov
ffreep
and
cld
imul
or
int
sar
mov
stos
push
xchg
insl
pop
sub
lock
popf
sarl
repnz
and
fs
pop
xchg
mov
imul
ret
popf
add
pusha
push
and
stos
loop
push
or
inc
add
idivl
popa
jnp
shlb
cld
popf
mov
insb
lea
arpl
adc
loope
pop
push
out
scas
imul
or
dec
sbb
jecxz
dec
pop
repz
push
lock
test
inc
in
hlt
jle
and
test
sbb
mov
lcall
jbe
mov
and
sbb
sarb
pop
lea
fwait
ds
sbb
mov
push
mov
lea
lahf
mov
mov
pop
jge
outsl
test
mov
shl
inc
shlb
repz
outsb
int3
mov
add
mov
and
sbb
fdiv
mov
mov
add
jne
stos
push
add
xchg
icebp
mov
dec
fisttpl
or
cmpl
movl
movzwl
jmp
movl
cmpl
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
add
in
xchg
mov
adc
xchg
imul
jns
lret
inc
lcall
ret
popa
pusha
cmp
cmpsl
fwait
xchg
xor
and
icebp
adc
adc
xchg
inc
or
subb
fisttpl
sub
sub
movsl
and
inc
enter
dec
fcoml
mov
ja
lahf
sub
int3
mov
add
lods
mov
pop
mov
jge
jno
subl
adc
rcrb
xor
xchg
movsb
inc
mov
or
sub
cs
mov
adc
sub
push
push
jns
jmp
push
sahf
sbb
jo
ds
out
xchg
xor
and
xchg
mov
imulb
adc
push
xchg
sub
enter
mov
shl
daa
lods
mov
ds
daa
xor
or
movl
mov
cltd
aas
inc
lahf
sbb
ret
test
add
shlb
jl
lret
jge
mov
in
arpl
jl
pop
push
and
test
dec
jae
mov
pop
mov
arpl
push
inc
pop
and
rol
and
aaa
inc
aaa
repz
jmp
jecxz
sub
sahf
cmp
xchg
add
loopne
inc
pop
js
push
mov
xchg
pop
lock
sub
push
in
mov
push
lcall
jecxz
leave
popa
sub
add
pop
jae
je
add
mov
cmp
cmp
cwtl
incb
lea
mov
les
scas
lods
stos
aam
int3
sbb
mov
leave
or
pop
push
dec
ror
lock
lods
addr16
ret
push
xor
jns
loop
mov
out
xor
lret
rcrl
sbb
iret
jae
test
jp
mov
adc
sbb
pop
enter
test
push
jo
xlat
out
or
adc
jmp
scas
enter
adc
jge
sbb
idivl
cmp
cltd
sbb
stos
jmp
mov
adc
dec
cmpsl
out
ljmp
pushf
cld
mov
shll
loop
fmull
add
imul
fwait
leave
mov
popa
lods
loope,pn
cmp
and
sub
mov
jne
pop
mov
popa
sbb
mov
lods
daa
jae
xchg
cli
adc
pop
std
push
dec
adc
adc
adc
xor
repnz
andb
leave
or
idivl
sub
in
lret
push
je
mov
test
add
imul
sbb
lds
das
cs
pop
popa
addb
lret
out
lods
jns
mov
sbb
and
push
cmpsb
fsubs
sbb
jle
jb
inc
jecxz
mov
pusha
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
and
sbb
mov
arpl
repz
stos
iret
sbb
out
lods
ret
and
dec
fiadds
push
aad
mov
jbe
adcb
mov
pop
ss
scas
fists
sub
mov
xor
pop
mov
test
fcoml
or
mov
stos
and
fidivl
test
lods
adc
mov
movsb
jns
imul
adc
stos
pop
lret
std
lds
scas
inc
lock
add
push
addr16
cli
std
sti
push
imul
push
and
add
leave
xchg
test
fisttpl
push
pop
or
test
inc
iret
icebp
dec
hlt
outsl
les
mov
adc
fsubr
or
decb
fcoms
ret
cltd
jae,pn
inc
loop
jge
out
dec
test
mov
mov
xorb
data16
xor
and
sbb
mov
mov
push
xchg
cmp
xor
bound
loop
int3
jnp
insb
repz
cli
xor
mov
bound
in
test
mov
cmc
call
outsb
mov
ss
xchg
push
js
jl
add
sahf
cwtl
adc
das
add
fcomps
mov
lahf
std
cmc
fucom
das
jnp
addb
clc
mull
lcall
int3
mov
push
movsb
es
in
push
xchg
add
pop
xchg
or
jo
ds
test
push
js
xchg
imul
sbb
sub
mov
shl
sarl
inc
mov
shll
gs
jae
ds
pop
lods
adc
movsl
push
sub
loope
cmp
int3
sahf
sarb
fwait
add
andb
mov
mov
clc
mov
mov
les
xlat
push
loopne
in
shll
jne
dec
leave
fiaddl
cwtd
test
aad
mov
push
cs
or
das
nop
cs
sbb
dec
int3
add
adc
inc
iret
xchg
adc
dec
inc
gs
xchg
sub
fprem1
jg
call
jg
adc
and
js
jge
inc
add
cli
mov
icebp
mov
cwtl
test
cmp
pop
icebp
and
cmc
xchg
add
add
lret
mov
out
gs
dec
mov
adc
mov
adcb
and
sub
mov
push
xchg
jo
cltd
in
daa
aam
mov
out
add
leave
nop
out
xchg
mov
loop
shrl
xchg
and
lret
mov
pop
repnz
loop
cmpsb
clc
mov
lods
xorb
mov
pop
adc
fadds
lods
sbb
fidivrs
into
cld
sbbb
adc
fcoms
sub
xchg
lock
dec
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
cld
movsb
dec
xchg
mov
mov
bound
scas
adc
mov
ds
push
lds
xor
ss
bound
fdivs
inc
pop
jecxz
aam
subl
or
mov
gs
bound
mov
in
popa
jl
push
push
xor
sub
cli
jnp
jns
enter
cwtl
lret
pop
int3
dec
lret
andb
dec
add
sub
mov
imul
scas
mov
addb
push
jmp
in
adcb
mov
fidivl
aaa
inc
scas
pop
push
inc
jl
mov
pushl
out
imulb
scas
lods
idivl
sub
arpl
pop
stc
data16
adc
iret
cmpsb
cwtl
repnz
push
repz
dec
add
in
addb
and
outsb
sub
ljmp
repnz
mov
mov
maskmovq
add
jno,pt
mov
imul
imul
repz
les
push
inc
and
sarl
jns
xor
or
shlb
add
clc
jge
dec
sahf
shlb
push
stos
cmpsl
iret
ret
xchg
pop
in
lods
mov
outsl
pop
bound
adc
xor
adc
lods
les
sahf
mov
adc
and
push
and
xor
rol
es
dec
inc
ds
mov
xchg
cmpsl
je
xchg
outsb
dec
mov
arpl
mov
lods
push
popf
cs
jg
fcomip
out
call
xchg
jae
ss
es
mov
sbb
aam
or
ret
mov
jbe
subb
push
insl
dec
sbb
inc
lock
jle
loopne
xchg
xlat
jbe
jb
push
jmp
adc
into
cmpsb
sub
out
das
add
cmp
xor
jle
popa
pop
mov
shll
sub
aas
mov
fwait
lea
push
add
and
jo
jb
push
jne
cmp
aad
shlb
adc
xchg
xor
add
lahf
fisttpll
subb
lods
jp
sub
mov
jb
mov
sti
pop
int3
insl
push
jge
arpl
mov
cld
push
pusha
mov
and
shrb
pop
or
or
or
sbb
shr
sbb
mov
add
dec
xor
dec
or
mov
mov
std
xor
negb
es
cmp
and
jmp
rep
cmp
popa
fwait
mov
and
rorl
scas
push
cmp
inc
fstpl
lret
sub
cmc
ficoms
mov
cmp
mov
jo
sarl
xchg
adc
xchg
pop
xchg
inc
or
mov
mov
enter
aam
ljmp
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
and
nop
jnp
mov
mov
divl
mov
in
mov
xlat
mov
mov
and
sub
faddl
mov
loop
cmpsl
shlb
nop
adc
test
les
mov
jae
mov
mov
and
xlat
call
pop
test
cmc
jp
mul
ss
and
repz
or
xor
add
data16
iret
shlb
fwait
pop
or
add
js
andnps
mov
leave
mov
shl
xchg
push
repnz
test
cmp
add
mov
in
jbe
sbb
adc
mov
lahf
pop
orb
addb
testb
mov
xor
es
pop
and
iret
fcomps
adc
aaa
mov
fcomps
fiaddl
cmp
xlat
fs
out
aad
out
xor
js
inc
cltd
xchg
add
lock
mov
mov
bound
mov
leave
jo
mov
movsb
xor
arpl
push
aam
in
pop
inc
icebp
out
std
cmp
push
in
ret
mull
mov
popa
push
push
mov
mov
cmp
rol
call
or
stos
mov
push
pop
ljmp
or
xlat
cmc
sub
cmp
mov
dec
push
sub
inc
and
mov
jo
fwait
push
jnp
push
or
int
stos
leave
out
sbb
xor
in
dec
fisttpl
mov
jns
inc
ret
inc
mov
fidivl
lods
sbb
mov
fs
sub
cltd
rep
xor
mov
in
js
push
cmp
adc
negl
stos
sbbb
or
push
mov
ds
sbb
dec
imul
dec
clc
sub
pop
daa
add
adc
mov
mov
shr
movsb
bound
mov
mov
fnstcw
add
jno
xor
lods
fadd
pop
cmp
ljmp
push
repz
rorl
std
insb
jmp
int
out
cli
adc
mov
lods
ja
pusha
repz
pop
jmp
into
cmp
mov
enter
inc
add
or
push
data16
pop
add
ficomps
mov
mov
nop
jno
imull
out
mov
insl
jo
dec
lds
jo
mov
add
es
lods
push
lcall
dec
andb
aaa
pop
loope
or
inc
aam
rcll
call
ficompl
fadds
lock
push
mov
mov
popf
aad
popf
movsb
addr16
aam
cltd
movsw
pusha
sbb
loope
out
fidivs
jl
shrl
dec
or
enter
jg
cmp
adc
fisttpl
lret
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
push
sahf
stos
sahf
mov
mov
cmc
xor
out
orl
xor
movsb
mov
rcl
out
xor
mov
mov
or
test
lea
mov
cld
lret
test
mov
inc
mov
imul
dec
lahf
test
out
lods
mov
ret
add
pop
lcall
cltd
int3
iret
cmc
jg
fs
pop
in
add
inc
test
icebp
inc
repz
stos
jp
rol
clc
push
xchg
shr
mov
xchg
adc
fwait
add
pop
and
jp
inc
repz
pop
mov
xchg
insb
or
push
xchg
cmpsb
popa
mov
jb
dec
loope
daa
lret
out
jecxz
repnz
mov
mov
lret
mov
jecxz
jb
cs
mov
mov
xchg
outsl
jge
shlb
jmp
and
xchg
leave
sub
and
push
xor
lcall
ds
in
mov
loope
cmp
mov
dec
ret
dec
lahf
clc
popf
dec
clc
mov
jmp
or
inc
inc
sbb
jmp
jl
cmp
adc
lcall
aaa
push
fistpl
inc
pop
jae
dec
pop
stc
pop
lods
enter
xor
xchg
add
or
or
shll
xor
subb
je
push
jmp
ljmp
jl
movsl
push
repnz
mov
inc
dec
jnp
lods
rclb
test
icebp
mov
ja
ds
insl
jne
cmp
or
inc
pop
aas
mov
gs
dec
outsl
in
loop
mov
fstps
or
aas
aam
mov
ljmp
jno
je
scas
jbe
xchg
cltd
xchg
outsb
arpl
mov
aad
adc
fisubl
in
iret
or
push
test
lock
rcrb
push
aam
sarb
movsb
inc
mov
fildll
cmp
cmp
faddl
sub
inc
pushf
mov
sbb
inc
sbb
dec
dec
pop
js
das
xor
jbe
repnz
scas
dec
pusha
and
pop
jnp
jl
xchg
pop
iret
imul
outsl
insb
adc
xchg
adcl
in
mov
aaa
inc
mov
leave
xor
mov
stos
in
inc
adc
insb
mov
jl
add
je
scas
pop
repz
popa
cmp
mov
fsubs
push
sub
fisubl
mov
jno
sub
in
ja
sbb
fisttps
xor
or
iret
call
in
mov
cs
nop
shr
insb
cmpsl
push
push
in
jbe
mul
inc
pop
mov
sub
mov
inc
inc
or
dec
xchg
or
jbe
mov
dec
adc
lods
enter
add
adc
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
cli
mov
in
les
ret
fs
stos
dec
mov
mov
rorl
push
inc
pop
add
mov
imul
fstpt
and
mov
ss
adc
sar
loop
mov
cltd
adc
dec
pop
negl
ret
int
inc
and
dec
mov
xchg
mov
sbb
jmp
xor
jb
out
imull
add
inc
aas
cwtl
pop
lcall
cmpsl
jp
aaa
das
out
add
fstpl
divl
aaa
jo
inc
mov
popa
xchg
ret
pop
lret
popl
mov
fildll
mov
int
cs
cmpsb
jb
mov
rorb
add
xlat
xor
imul
dec
lds
sbb
int
push
adc
and
mov
sub
movl
jae
imul
pop
mov
ljmp
dec
movsl
mov
jns
sbb
xchg
push
sub
inc
nop
jmp
sub
push
mov
mov
or
mov
xchg
fndisi(8087
add
xchg
pop
mov
adc
and
loope
daa
daa
xchg
fcmovu
aas
pop
pop
shr
push
adc
mov
inc
cmp
pop
lods
ljmp
inc
add
xchg
outsl
loop
sbb
sbb
push
mov
mov
jecxz
imul
sub
sub
pop
dec
and
or
call
lods
outsb
aam
fwait
mov
mov
cmp
inc
inc
push
in
push
mov
mov
inc
pushl
das
xchg
pop
cmp
sub
xor
jne
sti
add
fdiv
mov
add
jo
push
in
mov
shr
out
xor
mov
test
inc
mov
in
jmp
dec
dec
mov
sbbl
sahf
aad
in
aas
xor
in
loope
js
adc
adc
lds
cmp
out
cld
sbb
icebp
fcomps
outsb
add
out
xchg
fsubr
repnz
gs
call
and
dec
sub
sub
pop
ret
outsl
in
dec
pop
add
xlat
jb
jge
add
cs
sbb
xchg
pop
aaa
int3
lcall
cmpsl
push
pop
scas
mov
shll
and
ds
clc
scas
push
loopne
insl
ret
add
addr16
and
dec
add
shr
js
and
test
orl
ja
icebp
jb
dec
loop
aas
lret
fildl
and
push
xchg
jmp
cmp
scas
jmp
in
notl
pushf
enter
dec
int
or
enter
ljmp
pusha
rcll
mov
mov
sbb
push
sahf
and
xchg
fmuls
cld
test
es
push
sbb
or
jecxz
enter
add
call
mov
mov
iret
mov
mov
out
cs
lock
out
fs
dec
jae
mov
outsb
cld
adc
sahf
jno
add
inc
ret
addr16
mov
lret
dec
cmp
into
and
fcoml
arpl
repnz
push
jp
xchg
adc
mov
jg
push
ret
sbb
bound
adcb
inc
jge
sub
push
dec
out
ret
movsl
sbb
push
repnz
loope
or
pop
sahf
jl
adc
popf
loope
xchg
mov
jo
stos
fdivs
out
xor
xlat
mov
xchg
lods
xchg
outsb
sub
pop
int
jb
movsb
cmpsl
fwait
aad
addr16
imul
mov
es
ljmp
dec
movsb
cmp
ret
push
imul
into
pop
jmp
push
and
inc
imul
mov
push
test
and
shrl
mov
leave
stos
push
sahf
subb
flds
xchg
push
lahf
sub
sub
cmp
mov
pop
sub
js
lcall
pop
jne
adc
push
mov
jmp
dec
das
xor
xor
aas
push
jmp
loopne
daa
mov
outsl
mov
cmpsb
jno
jo
push
xchg
add
bound
stos
jmp
stos
mov
xor
cmp
sahf
imul
scas
and
and
inc
notb
mov
mov
scas
sbb
fldenv
push
sub
cltd
push
inc
jb
out
jo
outsb
stos
jle
int
sbb
pop
cmp
xor
aas
push
icebp
aaa
jle
lds
es
test
stos
movsb
and
cltd
inc
iret
mov
cs
sti
xor
sbb
nop
mov
outsl
mov
fwait
or
shll
mov
pop
into
jp
nop
pop
pusha
int3
cmp
cmpsl
or
or
lcall
jmp
fisttpl
and
push
jne
sarl
ljmp
pop
jae
out
shll
inc
jp
mov
inc
push
or
call
mov
inc
push
mov
adc
cmp
and
add
popa
and
add
and
mov
or
sub
and
pop
addr16
rcr
inc
dec
xchg
push
repnz
adc
and
insl
xchg
popa
je
sub
push
das
xchg
lds
and
jg
jo
popl
in
jns
mov
sub
mov
bound
cmp
insl
ds
xor
add
iret
scas
add
fistpl
pop
dec
xor
test
jns
fmul
xchg
and
into
and
or
arpl
lcall
lea
inc
loope
or
sub
fadds
mov
lret
lock
mov
popf
mov
mov
loope
sbb
dec
or
jnp
mull
out
aad
xor
clc
jl
out
je
movl
mov
xor
test
jmp
jno
mov
fs
sub
xchg
testl
mov
xchg
mov
adc
pop
cld
loope
sub
in
pop
mov
mov
sub
jne
sbb
adc
mov
out
jns
roll
jmp
or
push
adc
cmp
xchg
ret
ss
sti
push
and
push
inc
mov
lds
outsl
inc
sbb
pop
inc
js
jmp
xchg
sti
sbb
clc
xor
push
pop
outsb
pusha
mov
jecxz
mov
mov
and
loopne
ficompl
cmp
sub
adc
mov
jmp
mov
add
in
push
icebp
cs
lock
ds
leave
out
xor
sub
cs
add
add
dec
in
fs
in
es
aad
mov
mov
dec
push
aas
mov
imul
mov
inc
and
mov
add
testl
cmp
pop
jno
lds
in
inc
or
push
ficoml
pop
sahf
dec
cli
add
sti
iret
sub
pop
mov
leave
mov
or
icebp
jle
mov
movsl
jp
ss
inc
mov
xor
dec
mov
jae
es
popa
cmp
je
scas
jl
dec
test
and
movsb
and
int
or
test
addr16
mov
int3
sbb
aad
ja
xor
movl
mov
aam
sahf
jge
add
dec
sub
mov
mov
add
inc
adc
rcrl
orb
fisubl
and
jae
lods
movsb
adc
jl
push
mov
jg
push
sbb
cmc
and
dec
iret
jne
mov
inc
out
xor
cmpsb
jp
adc
js
sbb
dec
xor
adc
loop
lods
cmpb
sbb
dec
stos
lcall
subb
xchg
cld
int
pop
fildll
mov
test
iret
clc
sub
cld
dec
mov
mov
fsubrl
or
rcl
addl
and
js
and
leave
or
cmp
fst
out
test
iret
imul
cs
ret
adc
int
sub
add
xchg
ret
popf
stc
scas
sbb
sbb
mov
mov
leave
sub
cmpsb
xor
pop
xor
ja
sbb
and
ja
rcrb
pop
jle
xchg
xor
xchg
punpcklwd
hlt
add
xor
push
mov
and
aaa
into
mov
dec
jle
jae
pop
aad
fbld
orb
xchg
or
or
add
pop
in
adcb
sbb
call
lods
cmpsb
sbb
add
movb
sbb
stc
cmp
test
add
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fstl
dec
xchg
insb
mov
mov
clc
ret
inc
mov
shrb
add
jl
sbb
adc
ret
leave
ret
pop
sbb
xor
or
xchg
daa
in
popa
test
jl
jnp
daa
nop
lea
pop
fisubs
ss
push
sbb
mov
xlat
icebp
add
pop
imul
sub
out
mov
xor
lock
lahf
out
mov
mov
mov
sub
movsl
fimuls
sbb
cmp
xor
inc
dec
sahf
pop
adc
sub
les
sub
es
fnsave
mov
jg
leave
jbe
cld
fs
ret
or
mov
pop
daa
xor
stc
mov
xchg
sbb
jnp
xor
xorl
inc
pop
fdiv
add
jecxz
and
daa
fnstenv
scas
inc
adc
roll
mov
pop
pop
ljmp
aas
loope
cli
mov
inc
xchg
pop
xchg
jnp
pop
mov
das
xchg
repz
cmp
and
test
xor
push
mov
ret
test
addl
shr
push
add
andb
movsb
cmp
sarb
cmp
sbb
lcall
sbb
std
imul
data16
jb
fs
cld
xchg
data16
cs
xor
fsubp
mov
dec
xor
xchg
sbb
push
mov
xchg
stos
cmp
fcompl
dec
and
jmp
adc
mov
and
and
mov
add
pop
loopne
pop
mov
jecxz
push
xor
cmp
cli
mov
loop
add
jns
sub
arpl
mov
dec
inc
push
push
sbb
add
mov
mov
mov
mov
jne
repnz
and
jo
push
sbb
nop
lock
movsl
mov
movsl
or
nop
xchg
cmp
aaa
in
clc
enter
sarl
inc
ret
cs
cmc
mov
ret
jb
jg
ss
rdpmc
outsb
shl
shll
lret
jno
push
and
mov
add
push
jp
jnp
or
mov
push
stos
push
or
cmp
int3
jns
dec
add
adc
xor
lods
cmpb
dec
sahf
mov
into
std
sub
arpl
jnp
popf
popa
stos
in
jnp
mov
iret
fwait
add
stos
je
cmc
cmp
addr16
test
shlb
mov
mov
xchg
roll
je
fmul
mov
enter
sub
out
jbe
mov
addr16
adc
loope
or
xchg
daa
inc
jae
sbb
xor
addr16
insb
xchg
mov
xchg
xchg
pusha
fs
add
mov
sti
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
fstpl
mov
mov
es
push
add
bound
rorb
pop
mov
mov
push
fwait
pop
lret
loopne
test
lahf
hlt
sahf
fildl
iret
lods
jmp
pop
in
pop
aam
dec
mov
pop
push
inc
cmp
repz
add
pop
sahf
add
in
mov
jp
mov
lods
out
xchg
pop
mov
fwait
data16
xchg
addr16
sbb
adc
inc
loopne
pop
jecxz
dec
stos
jp
sbb
mov
add
xchg
out
int3
ss
pop
ljmp
fstpl
xchg
jecxz
add
out
in
mov
loopne
fldenv
adc
and
stos
jp
aad
arpl
call
in
ljmp
scas
int3
pop
pop
sub
sub
fs
js
inc
or
nop
or
and
adc
push
mov
or
push
adc
push
call
dec
xchg
fwait
sub
outsl
and
adc
mov
jbe
pop
adc
rcr
lea
pop
out
in
or
mov
adc
ja
iret
sbb
and
jae
mov
out
push
cmp
into
pop
xor
pop
xorb
flds
xor
outsb
cmpsb
mov
out
pushf
cmp
lods
xchg
cltd
loope
ja
sub
add
pushf
cli
or
ds
pop
adc
fmulp
loope
push
mov
inc
in
or
ljmp
add
std
push
xchg
add
fdivrl
pop
xor
adc
push
pop
or
andb
shr
loop
mov
or
test
mov
or
xor
test
lods
addr16
insb
push
xor
push
add
inc
mov
cmp
imull
enter
das
in
iret
push
mov
jae
adc
xor
imul
leave
sub
mov
push
std
dec
mov
xchg
mov
sub
adc
mov
out
ret
pop
insl
xor
leave
js
push
or
enter
adc
fdivs
les
int
js
shll
dec
add
xlat
das
test
das
imul
add
idivl
jecxz
push
mov
cmc
jns
mov
jae
mov
stos
xchg
test
lret
inc
mov
pop
out
clc
fbld
mov
pop
push
push
addl
push
loope
xchg
pop
out
fcmovb
ret
and
cs
or
dec
ljmp
push
lahf
add
mov
jb
xor
xchg
cli
aam
mov
sbb
inc
addr16
xchg
adc
mov
adc
es
mov
stc
jno
jbe
aam
je
ja
and
or
jg
mov
mov
scas
inc
xchg
call
testl
jns
adc
xchg
cmp
push
xchg
outsl
lods
xor
sub
push
push
adcl
das
nop
xor
ret
jo
jg
mov
and
rcl
jnp
jno
mov
cmp
sub
fstl
cmp
daa
xchg
jp
add
xor
sub
mov
outsl
jno
fwait
push
inc
adc
xor
fisubl
inc
lea
fwait
mov
divb
lret
mov
stos
pop
mov
outsb
lods
loop
or
stc
add
shl
mov
int3
insl
loope
and
popa
cs
xchg
movsl
jle
push
xor
cmp
sub
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
nop
insb
sarb
test
out
lea
dec
fs
divb
lds
jp
or
and
xchg
cmp
mov
sahf
jb
mov
imul
int
iret
movsl
int3
push
aam
repnz
out
fsubrs
fidivs
ret
adcb
cmovno
repnz
in
into
jns
pop
cmpsl
jecxz
movsl
jae
mov
dec
in
aaa
sbb
xchg
sti
and
xor
adc
test
push
int3
stos
je
push
fdivrs
xchg
pop
jmp
fsub
adc
mov
insb
lcall
lods
push
or
lahf
shrl
addr16
pop
cs
push
sahf
adc
pop
jbe
jns
inc
jge
or
mov
faddl
push
mov
adc
shlb
and
jecxz
into
fimuls
int
inc
jno
jnp
xchg
sub
and
jp
jnp
push
jbe
mov
andl
adc
xchg
xor
inc
xchg
xchg
xchg
jge
xor
subl
or
jle
test
xchg
ja
iret
pop
jecxz
mov
mov
popf
push
or
out
fisubrs
mov
fldl
adc
xchg
mov
gs
outsb
mov
sbb
mov
stos
pop
lods
outsb
sub
test
xor
out
sarb
inc
sbb
bound
jae
cmpsl
jo
jbe
add
cltd
out
sarb
adc
inc
int3
add
in
mov
push
mov
cli
xor
mov
xchg
in
cmp
mov
push
ds
and
or
or
sub
scas
mov
add
inc
push
push
or
je
fidivl
sub
enter
xchg
cmpsb
pop
xchg
ret
sbb
ret
adc
push
mov
add
stc
or
lahf
lret
mov
repnz
out
lcall
xchg
int3
into
mov
push
cs
aam
cmp
out
pop
dec
add
push
test
push
xchg
sbb
xor
mov
pop
mov
popf
ret
adcb
ret
adcb
out
xchg
mov
sub
adc
aad
loop
xchg
cmp
sub
add
and
sub
xchg
cs
ret
mov
test
cmc
negb
and
lret
daa
testb
rcrb
sti
cmpsb
call
adc
cld
ja
mov
mov
iret
aad
iret
pop
subb
dec
bound
insb
pop
das
incl
mov
aad
cmp
dec
lods
add
rclb
je
mov
inc
rcr
popf
sub
cli
xlat
add
aad
sahf
scas
pop
lcall
push
xchg
rclb
cmp
ds
ret
in
nop
jg
addr16
fwait
clc
xchg
jecxz
std
roll
add
pop
call
jne
arpl
sbb
jo
mov
aaa
pusha
cwtl
fsubs
cmpb
push
dec
pusha
icebp
cwtl
sub
leave
xor
jbe
sub
lahf
sub
pop
mov
inc
jmp
into
or
sarb
fwait
call
outsl
dec
dec
addb
imul
lret
loop
mov
xlat
inc
mov
xchg
gs
dec
cmp
pop
mov
xchg
mov
jnp
cmp
inc
fnstsw
push
add
in
decl
cwtl
and
xor
lahf
cmp
je
push
xor
mov
fcmovnb
inc
aam
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
lods
mov
sarb
cli
imul
daa
arpl
jns
inc
sbb
jno
and
push
out
xchg
loop
sub
pushf
cmp
call
push
pop
mov
adc
pushf
data16
cli
dec
fstl
sahf
icebp
out
mov
insb
test
orb
xchg
js
mov
insl
mov
mov
adc
movb
mov
in
hlt
inc
lsl
faddp
das
test
xchg
cmp
rcrb
lods
sbb
int
out
mov
mov
inc
inc
in
lods
jl
arpl
jno
outsl
repnz
shrb
push
or
cld
mov
loopne
push
loop
jp
lret
jmp
out
pop
loopne
divb
test
jae
jg
imulb
daa
dec
enter
push
std
mov
cmp
pop
push
test
daa
and
mull
and
xchg
sbb
pop
iret
inc
loop
mov
out
push
inc
cs
push
mov
push
mov
ljmp
xchg
stos
jb
in
aas
pop
xchg
sub
mov
mov
inc
jo
jle
mov
das
mov
int
mov
lea
cmc
es
mov
jae
aad
sub
mov
out
mov
test
jns
add
mov
jno
dec
cmp
push
sbb
cltd
jnp
daa
inc
jl
add
leave
lcall
cmpsl
lcall
inc
fistps
scas
dec
sbb
cltd
scas
xlat
cmp
cwtl
mov
inc
push
bound
mov
sub
cmp
shll
dec
enter
cmp
or
arpl
mov
rolb
sub
loope,pt
fs
adc
popf
orl
sub
sbb
mov
fisubrl
inc
sub
or
repz
pop
in
push
xor
mov
insl
inc
sbb
mov
enter
dec
sbb
inc
or
inc
hlt
or
test
mov
imulb
in
xchg
cmp
in
stc
js
add
in
mov
je
xorl
out
loop
loopne
dec
pop
dec
repz
mov
inc
cs
imul
es
rol
mov
ss
es
nop
loope
lret
or
and
andl
shl
lods
mov
add
xor
clc
in
repnz
lret
push
xor
rol
push
andb
push
pop
dec
xlat
pop
pusha
jl
fistl
test
inc
pop
add
xchg
clc
aaa
into
aaa
scas
mov
mul
inc
rorl
into
jmp
aam
in
test
inc
mov
cld
push
lret
cli
pop
xchg
shrl
sbb
jle
or
xor
push
sahf
fs
and
out
or
loope
mov
push
aas
sub
mov
add
rol
hlt
sub
aaa
test
pop
aaa
sbb
dec
mov
and
ret
push
imul
inc
nop
cmp
fisttps
adc
mov
dec
xchg
decb
mov
mov
mov
insb
jp
add
push
adc
rorl
xchg
sti
add
pop
or
sub
inc
lret
pop
imul
pop
sub
loopne
cmc
dec
push
jge
aad
dec
pop
xchg
pop
loop
test
sar
scas
jo
push
loop
je
int3
lcall
or
insb
push
idivl
clc
loop
jae
push
fstps
call
les
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
mov
aam
mov
adc
or
jl
das
rclb
and
pop
call
or
pushf
dec
loopne
outsb
mov
dec
std
decb
add
stos
mov
popa
jmp
or
jbe
sbb
shll
icebp
sbb
data16
adcb
pusha
dec
xchg
mov
xchg
inc
test
push
mov
cmpl
cmp
inc
add
and
mov
dec
int
add
inc
push
jno
ficoms
add
fdivl
xchg
imul
push
jno
inc
cli
fdivp
push
lods
insl
xchg
fbstp
pop
xchg
rorb
cmp
push
push
outsb
sub
repz
hlt
rorb
rclb
clc
fbld
in
jbe
mov
ss
pop
sub
insb
out
aaa
xchg
aaa
lret
pop
fistpl
dec
imull
mov
dec
jae
cmp
adcb
mov
mov
push
pop
adcl
sbb
cmc
mov
push
inc
scas
push
int3
fcoml
pop
jne
inc
sub
aad
int
mov
mov
test
nop
imulb
inc
in
nop
mov
xor
add
insl
mov
and
pop
mov
add
dec
rcrb
popa
adc
sbb
out
jbe
ret
inc
lock
mov
mov
or
adc
ljmp
repz
fmull
jae
add
dec
pop
add
aam
rol
xchg
mov
or
add
xor
lret
jmp
movsl
mov
sbb
xchg
xchg
or
pop
inc
fcompl
jnp
sub
gs
sbb
iret
dec
sti
add
xlat
test
jge
rcrl
iret
adc
in
sub
sbb
fdivrl
lret
jle
int3
add
cmp
ss
and
mov
loope
insl
aas
outsl
sbb
lret
and
inc
xor
cmp
cmp
mov
cmp
imul
sbb
dec
cltd
pop
mov
pop
pop
jge
dec
push
rol
inc
and
lds
add
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
push
sarb
push
dec
les
stos
mov
xchg
js
pop
sbb
push
xlat
bnd
aad
fistpl
mov
xchg
adc
mov
cld
push
jae
mov
push
xchg
movsl
and
jbe
mov
decb
inc
shll
jecxz
scas
cmp
inc
push
cmpsb
cmp
inc
sbb
bound
jno
into
movsl
pop
rolb
mov
and
fstl
jns
xchg
sbb
enter
sbb
push
add
push
mov
or
push
adc
add
lock
mov
pop
sbb
adc
pusha
je
jp
jge
testl
popa
adc
pop
sub
pop
and
xchg
scas
cmpsl
out
xor
ret
push
pop
cmpsl
xchg
cmc
xor
cmc
mov
fcom
sti
adc
inc
xchg
aad
xchg
pop
jg
dec
sbb
fldcw
imul
mov
out
xlat
lods
push
cmp
sbb
pop
aad
outsl
outsb
or
mov
dec
es
fisttps
mov
sbb
xor
lret
and
inc
mov
push
adc
loope
ror
imul
xor
hlt
push
repz
xchg
and
mov
mov
xchg
sbb
insb
rorb
aad
jecxz
out
push
pushf
lods
sbb
aad
into
adc
pop
ficoms
pushf
out
mov
mov
and
fistps
icebp
jno
or
jecxz
dec
dec
rclb
pop
js
push
mov
in
sub
lret
pop
dec
popf
push
fdivp
pop
in
cs
xchg
test
ja
and
roll
cmpsl
shrb
cmpb
rcl
xchg
lds
cld
cs
shlb
or
fstl
inc
mov
call
test
dec
loopne
jge
xchg
mov
pop
xor
mov
movsl
xchg
push
push
fcomps
lds
mov
push
pop
jecxz
dec
ret
jno
ret
lea
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
sbb
push
sar
faddp
mov
out
sub
out
jnp
pand
mov
sub
gs
aad
icebp
adc
lea
push
enter
mov
mov
orb
mov
lahf
test
push
mov
pusha
ljmp
es
fnstenv
xchg
inc
lods
rol
lods
pusha
out
mov
and
push
je
nop
subl
dec
xlat
aam
lods
jecxz
push
mov
mov
jle
stos
mov
xor
scas
pushf
or
ficompl
pop
std
mov
adc
push
jecxz
jae
nop
xor
out
insb
adc
cld
pop
mov
test
cwtl
adc
inc
lods
rolb
dec
loopne
jo
mov
or
sub
mov
mov
cwtl
jl
mov
pop
sub
push
mov
mov
xchg
adc
cmpxchg
ja
shrl
sub
enter
jle
and
pushf
or
pop
cmp
sub
push
mov
mov
xchg
call
cmpsb
dec
es
pop
fnstenv
xor
fs
hlt
movsb
jmp
fnstcw
insl
stc
xchg
mov
mov
mov
scas
test
jl
ret
pop
ret
mov
shl
jp
insb
xchg
into
push
adc
jmp
shr
mov
add
dec
adc
int3
inc
and
pop
aas
mov
lds
popl
das
xchg
hlt
push
dec
mov
int3
aam
cs
fstpt
outsl
lahf
dec
mov
ds
inc
enter
xor
cmp
out
dec
test
mov
movsb
xor
nop
inc
outsb
jns
pop
stos
and
jmp
orl
nop
addr16
pop
out
popa
or
inc
mov
data16
adc
pop
or
xor
imul
out
cmp
adc
frstor
cmp
sub
jb
jp
xchg
push
adcl
call
xor
fmuls
adc
pop
addl
pop
add
add
add
xchg
jecxz
mov
jb
sahf
nop
jl
fs
jae
sarb
cs
mov
pop
jo
subl
sub
sbb
xor
cs
xchg
in
and
in
loopne
adc
shlb
mov
rolb
lahf
std
lcall
test
xchg
out
stos
mov
jo
data16
add
jmp
mov
aam
add
jno
and
lret
mov
mov
lret
xor
aam
push
pop
jg
jl
mov
nop
es
pop
xor
lcall
cmp
test
test
pop
hlt
scas
cli
jns
sahf
imul
icebp
jnp
sti
cmpsb
mov
int3
ret
inc
add
mov
jle
jecxz
mov
and
out
in
lods
std
cli
and
or
pop
push
pop
and
test
pop
mov
addl
fsubrl
sarb
jb
xchg
mov
pop
mov
cli
sbb
mov
cmp
out
js
sbb
push
scas
pop
jecxz
in
loopne
jne
lcall
sub
sbbb
bnd
je
test
lahf
push
out
adc
sbb
or
jns
mov
pop
pop
adc
mov
push
mov
movsl
jo
nop
xchg
das
jmp
add
push
push
je
mov
sbb
sub
mov
es
xor
cmp
jb
add
lock
sti
pop
mov
jae
xchg
add
loope
pusha
pop
mov
in
test
je
lods
bound
adc
sarb
or
lds
jp
jno
outsb
rol
mov
push
push
gs
push
into
icebp
lds
fldlg2
pop
loop
xchg
inc
or
cmp
cmpsb
push
push
add
stc
out
add
jl
inc
xor
xor
adc
in
lret
scas
sbb
pop
dec
sub
popa
scas
sbb
cli
nop
addr16
scas
iret
orb
scas
mov
sub
xor
outsl
mov
mov
sarb
add
leave
dec
push
sub
xchg
mov
addl
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
daa
cmp
xor
push
mov
xchg
cmp
mov
push
ffree
cld
fcoms
xchg
xorl
adc
xchg
or
lret
daa
ja
jl
data16
nop
xchg
jg
neg
mov
mov
jmp
jg
dec
or
pusha
jae
and
mov
mov
fwait
xlat
cmp
lods
push
xchg
sbb
and
mov
dec
fneni(8087
iret
inc
jle
inc
inc
data16
lock
int3
repz
aad
xchg
jb
sbb
sub
out
jl,pn
xchg
dec
dec
jle
push
fdivrs
ret
xor
or
pinsrw
imull
jbe
cmp
int3
jno
outsl
mov
lock
andl
push
in
imul
repnz
aam
dec
int3
pushf
xchg
pop
imul
push
and
shll
add
jnp
aaa
shrl
push
stc
enter
inc
test
or
scas
test
mov
fnstenv
mov
leave
outsb
popf
fisubl
daa
xor
pop
pushf
pop
or
inc
or
fstps
rorl
xchg
lret
push
jp
cltd
sub
sbb
stc
pop
pop
pusha
call
es
fistpll
pop
jge
iret
mov
xchg
fistps
jge
imul
sbb
adc
pop
push
adc
out
aas
insl
xor
push
inc
mov
ds
iret
inc
and
fidivs
and
mov
and
sub
ret
leave
ljmpw
sbb
mov
jne
mov
js
cmpsb
mov
loopne
data16
xchg
test
jo
push
or
or
mov
flds
sbb
ret
ret
loopne
mov
scas
sti
data16
out
dec
sub
jmp
cli
xor
sti
push
xchg
addr16
ficomps
sub
pop
lret
rcrl
ret
sub
pop
add
loopne
adc
jnp
adc
inc
jno
jmp
mov
push
dec
rclb
pop
notb
inc
inc
pop
popf
cmp
or
lcall
add
add
add
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
dec
lahf
mov
ret
and
xchg
mov
jo
mov
jnp
adc
and
movsl
and
iret
rcrl
mov
mov
mov
adc
nop
jmp
sub
pop
out
repnz
or
push
push
notw
xchg
xchg
rclb
ret
data16
mov
push
int
stos
mov
mov
push
in
jecxz
add
mov
lret
pop
xchg
xchg
jbe
lods
lea
mov
mov
inc
test
leave
pop
test
cmpsb
iret
scas
xchg
dec
aaa
inc
jge
popa
cld
jle
insl
pop
jle
jne
push
jl
push
inc
stos
bound
push
mov
jge
sub
ret
xchg
pop
jmp
ja
mov
out
je
lret
mov
aas
cli
jecxz
pop
insb
push
sti
adc
jo
rcrl
daa
ret
daa
pop
cmpsb
dec
pop
sbb
std
loop
push
cmp
xlat
dec
push
xchg
adc
mov
aad
out
repnz
shrl
pop
or
jecxz
icebp
pop
lahf
shl
or
and
test
and
inc
or
scas
dec
dec
ss
lods
outsl
sub
call
clc
mov
push
adc
mov
mov
and
mov
add
pop
lea
xchg
add
mov
pop
cmpsl
int
jne
or
mov
and
mull
or
jb
pop
repnz
sub
stos
stos
xor
ficompl
xchg
cmc
fs
add
inc
jnp
adc
and
fs
mov
mov
aad
or
test
sub
movsl
cmp
push
imul
push
in
and
loope
in
xor
fidivs
stos
aam
rcrl
test
push
dec
orb
xor
xor
sbb
scas
mov
lahf
jle
dec
shld
ds
cli
imul
cmp
jmp
jmp
scas
mov
in
out
jmp
cmpsb
sahf
js
shl
mov
into
pop
in
inc
and
inc
inc
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
jecxz
out
sarb
push
xchg
mov
cmp
hlt
pushf
mov
jb
out
push
push
daa
add
push
cld
xor
ljmp
sbb
psllq
push
ret
adc
push
or
push
adc
test
pop
mov
inc
outsb
cmp
outsl
js
je
test
pop
sub
push
in
and
lea
pop
sub
aad
push
xchg
push
ja
mov
movsl
popa
push
and
pcmpgtd
subl
inc
js
stc
inc
int3
xchg
xchg
cmpsb
ror
fldl
stos
mov
in
aad
sub
into
stos
fs
adc
or
xchg
cs
mov
test
insl
repnz
jns
fcompl
stc
sub
pop
imul
pop
sbb
js
jp
shrb
jns
xchg
xor
daa
sub
add
loop
pop
dec
sbb
adc
sbb
mov
cmpsb
push
aas
arpl
sbb
subb
addr16
pop
xchg
fwait
and
into
cld
gs
dec
fisubl
push
add
lock
mov
sti
es
mov
and
mov
aas
ret
lods
adc
jo
call
ds
push
gs
pop
lea
mov
dec
test
push
mov
in
test
popa
sbb
clc
or
pop
and
sub
mov
lcall
pop
out
sbb
dec
or
loope
cmp
or
ret
out
sbb
out
xchg
dec
fldl
xchg
sub
movsb
test
xor
jb
enter
das
es
pop
lret
cmpsl
or
mov
inc
cltd
mov
mov
sub
jo
add
pop
rol
imul
out
xchg
adc
jl
stos
sbb
jnp
sbb
mov
add
fldenv
test
in
insl
sti
in
out
lods
rorl
or
inc
js
mov
or
cltd
fs
mov
pushf
into
or
int3
or
lret
pushf
mov
inc
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
nop
push
repz
dec
cmp
cli
movsb
arpl
cs
scas
mov
adc
sti
out
dec
mov
test
testb
cmp
dec
loope
mov
mov
test
jp
lock
sti
lds
xchg
mov
ljmp
iret
aaa
adc
jmp
jecxz
cmc
add
sbb
or
and
test
test
notb
cmp
shl
dec
call
pushf
testl
out
xchg
sub
out
xchg
sbbl
inc
fildll
pushf
or
xchg
fisttpl
add
adc
clc
add
out
jmp
add
int3
adc
sub
pop
or
fistpl
lods
idivl
cld
cltd
xor
lods
les
andl
in
or
add
movsb
imul
into
jge
dec
cwtl
ficoms
scas
lock
rorb
in
pushf
pop
movsb
push
sahf
loop
popa
pop
lahf
xchg
xor
jecxz
mov
xor
loop
mov
aad
and
insb
cmovp
shll
mov
bound
nop
adcl
frstor
dec
loope
test
xorl
dec
mov
or
mov
sti
mov
mov
jecxz
jo
aam
jp
loope
fdivrp
gs
sarl
xor
sbb
sarb
jle
pop
mov
mov
adc
dec
adc
or
adc
dec
mov
mov
xor
mov
repz
sub
repz
lods
int
fiaddl
cvttps2pi
cmp
and
iret
lds
in
scas
mov
mov
lcall
cmp
dec
sub
sub
xor
push
add
dec
add
cli
ret
push
ret
lcall
cmp
mov
lods
out
pop
je
into
xchg
jnp
inc
lds
andb
adc
in
test
ret
inc
inc
fcmovnb
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
lea
xchg
lret
test
mov
sub
sbb
bound
adc
fs
enter
sub
jmp
sbb
out
xor
push
sub
leave
hlt
sbb
jge
dec
dec
inc
add
imul
sahf
mov
fs
je
enter
stos
mov
mov
inc
and
test
or
nop
pop
push
cmovg
and
stos
jl
add
out
pop
ret
pop
xchg
or
xor
or
clc
push
sbb
dec
xchg
movsb
lea
adc
aas
pop
cs
out
stos
jb
shll
fnstsw
sbb
add
div
leave
xor
pop
call
mov
notl
sbb
push
add
repnz
xor
outsb
mov
pop
sbb
and
leave
sub
aas
pop
push
sarb
jg
lahf
fucomip
psubw
movsb
inc
dec
mov
push
nop
mov
pop
stos
mov
nop
xchg
imul
push
xor
lods
push
in
test
mov
loopne
mov
xchg
scas
ljmp
js
add
mov
sub
lret
cltd
pop
inc
push
mov
arpl
jb
inc
mov
mov
sub
dec
mov
jnp
add
fsubp
jl
jo
push
push
cmpsb
sub
sub
movsb
xlat
xor
in
imul
loope
mov
push
or
xchg
add
clc
aaa
das
incb
aam
pushl
dec
jmp
lea
adc
push
mov
aam
push
pop
xchg
add
mov
add
in
push
sbb
cltd
lods
ss
lods
in
jb
cld
add
sbb
popa
xchg
in
cs
lea
mov
mov
mov
xchg
call
xor
pop
sbbl
aaa
sarb
aam
cmc
pop
cmpb
sti
aas
mov
ja
lock
pop
pop
in
out
cli
dec
and
jnp
fcmovnu
popf
jp
outsl
jae
rcr
aam
mov
push
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
xchg
inc
sti
sarb
xor
pop
arpl
sbb
ds
dec
ret
cmpsb
xchg
mov
stos
add
jecxz
sub
idivl
fiadds
in
adc
add
or
mov
lods
loope
sub
push
aaa
ja
pop
bound
data16
lcall
jne
shrl
insl
shll
mov
mov
std
pop
test
ds
adc
add
lahf
xchg
lcall
iret
aaa
xchg
dec
xchg
out
mov
aaa
loope
pusha
sarb
fucomp
cmc
cmpb
and
cmp
daa
mov
add
xor
clc
cmp
dec
jb
dec
fcmovnb
cmp
cs
or
lods
loopne
pusha
or
mov
sbb
fisubl
adc
fistpll
push
mov
xchg
and
js
sahf
inc
ja
fs
lcall
adc
mov
cltd
int3
int
addl
adc
jns
push
lcall
jae
mov
cli
mov
out
testb
or
inc
or
or
push
xchg
in
adc
inc
pop
and
cltd
xlat
lods
inc
sub
fucom
xor
pop
fdivl
mov
aas
js
xchg
out
in
in
cmc
cmc
bound
cltd
out
cmp
scas
jno
movsl
movsb
dec
push
ja
jge
in
jns
les
jmp
movq
cwtl
cwtl
xchg
dec
ret
mov
out
sahf
loope
movsb
pop
adc
dec
cmpsl
inc
pop
jbe
mov
aas
xchg
push
adc
mov
popf
call
cmpsl
js
stc
fs
xorl
ja
sbb
cmc
out
std
mov
lret
jge
iret
xchg
inc
xor
daa
iret
lret
mov
xor
or
mov
stos
mov
cmc
ret
lret
cmp
lahf
outsb
cmpsb
call
add
fucomip
movsb
jle
iret
lock
out
outsb
dec
ret
imul
fistps
cmp
and
nop
ljmp
pop
pushl
pushf
and
add
add
enter
add
add
fimull
test
sbb
add
push
and
xor
shld
jmp
lret
repnz
xchg
xor
inc
stc
adc
mov
ret
adc
mov
adc
leave
sbb
dec
xlat
fwait
out
xchg
andb
jge
fmull
inc
out
fldenv
ja
jecxz
stos
test
mov
mov
movb
movsl
mov
das
dec
je
mov
lds
xor
stos
sbb
adc
scas
sub
sub
pop
jnp
lahf
jbe
out
push
loop
inc
push
ja
fistpll
out
cltd
loope
rcr
sbb
loope
pop
pop
imul
popf
loopne
sub
mov
mov
fwait
lods
cmp
cmp
mov
mov
scas
push
outsb
jge
mov
pushf
and
pop
push
mov
pop
mov
bound
push
jl
lret
stos
arpl
lods
shlb
xchg
cs
adc
jg
lock
push
les
push
cmc
jne
cmp
ret
dec
xchg
int
xchg
lds
mov
push
sub
jle
loop
mov
sarb
fwait
bound
gs
icebp
in
rolb
mov
into
arpl
imul
lret
fldl
cld
sub
mov
push
jnp
lock
enter
mov
sbb
rcrl
or
jl
aam
aas
int
adc
pop
repnz
add
dec
imul
push
inc
sbb
rorl
mov
inc
mov
popf
mov
sahf
xchg
into
js
xor
jne
sub
daa
push
push
cltd
scas
jno
ret
or
shll
cmp
bound
call
xchg
cmp
lret
rep
out
push
fcoml
movsl
roll
mov
mov
cld
imul
inc
sub
stc
push
cltd
movsb
fcoml
adc
ja
and
or
rcrb
sbb
not
fwait
push
lcall
mov
inc
popa
popa
call
push
inc
iret
loopne
add
and
movsb
adc
cmpsl
sub
lcall
xor
ret
xchg
sahf
arpl
fisubrl
adc
xor
or
dec
mov
xor
add
cli
or
pop
outsl
jb
loopne
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
and
movsb
xor
mov
xchg
mov
or
icebp
dec
cli
xchg
in
jle
mov
shrl
mov
xchg
or
mov
add
push
jno
inc
mov
mov
in
jp
cli
mov
mov
lock
push
rolb
sub
and
mov
lds
adc
in
and
fwait
add
jb
inc
jp
std
test
cli
jne
enter
lcall
xorl
hlt
adc
int3
adc
xchg
dec
ret
xchg
sub
jg
js
mov
cmp
pop
lock
push
idivb
or
mov
push
scas
cmp
push
push
cmp
enter
mov
xchg
sub
adc
bound
jp
xchg
scas
ret
and
inc
pushf
mov
cmpsl
xchg
cmp
xor
sub
cmp
in
push
fmulp
mov
push
pop
ljmp
add
movsb
or
es
aas
pusha
or
jno
ss
subb
cmp
jge
jecxz
stos
or
adc
push
mov
cld
sbbb
mov
cmp
pop
test
mov
or
sub
dec
jge
push
pop
dec
test
dec
iret
jae
sub
xor
dec
xor
push
sbb
daa
outsl
aad
stc
inc
addr16
mov
rorl
loope
stos
sarb
pop
outsb
and
leave
sbb
mov
pop
lea
daa
jle
add
addl
xchg
arpl
aaa
sbb
aaa
mov
jp
sbb
xlat
cmp
out
pop
stos
push
test
hlt
popf
lret
leave
adc
jb
dec
push
xor
ja
jns
les
gs
loop
mov
push
cmp
push
or
mov
xlat
into
stos
es
cmp
in
sbb
push
rolb
mov
inc
es
and
push
dec
icebp
lret
out
shrl
mov
aad
jnp
stos
xor
fcomps
jae
and
fbstp
mov
test
push
xor
pop
fistps
mov
lds
adc
xchg
pop
loop
pop
ljmp
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
fcoms
stos
or
mov
rclb
adc
movb
inc
xchg
dec
push
mov
push
cwtl
enter
pop
mov
mov
pop
aas
xchg
lret
push
mov
add
dec
shll
pushf
jne
fcmovne
sti
adc
gs
in
aam
imulb
xchg
ss
inc
sbb
and
in
cmp
test
add
js
jmp
inc
jb
loope
addr16
mov
and
mov
icebp
dec
or
xchg
fnsave
pop
xchg
or
jl
dec
adc
xor
sub
lods
cmp
movsb
test
mov
iret
testb
push
out
jno
lods
fldt
adc
cmp
hlt
pop
js
mov
and
mov
and
dec
lahf
sbb
adc
adc
rolb
add
je
ret
pop
stos
mov
lahf
push
fisubrl
in
xchg
stc
mov
inc
dec
jl
xchg
jle
adc
fisubs
sub
jno
ret
xchg
inc
inc
std
adc
pushf
aam
jo
pop
das
pop
leave
dec
xchg
push
jmp
shrb
out
jb
or
jg
and
iret
xchg
jno
sbb
xchg
inc
loope
pop
jne
ds
push
bound
shlb
xchg
sbb
mov
or
xchg
sahf
mov
enter
mov
cmc
repnz
lock
nop
mov
jne
sub
push
in
pop
test
mov
imul
andb
mov
mov
jns
and
movsl
mov
mov
pop
and
mov
xor
lds
nop
push
sbb
sub
fisubrl
xchg
jno
div
inc
test
addr16
loopne
and
xor
adc
mov
push
leave
mov
lahf
fsub
lods
or
push
mov
and
inc
shll
ret
pop
jns
ss
cli
xchg
mull
mov
stos
int3
addr16
push
cltd
xchg
jg
lods
iret
pop
mov
and
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
mov
aad
and
sarb
mov
xchg
mov
shrb
jp
lahf
adc
clc
je
lods
mov
test
sbb
lcall
mov
addr16
js
xchg
icebp
cmc
xchg
lock
xchg
in
sub
inc
jge
mov
fcomp
cmc
cmp
ret
push
mov
subb
mov
jp
test
jge
stc
sbb
inc
cmp
push
rorb
cwtl
cli
mov
push
sbb
mov
mov
rolb
les
ret
stos
jge
mov
pop
sub
dec
addr16
jno
add
sub
mov
in
sbb
rorb
in
enter
cwtl
jnp
das
cmpsl
addb
fstl
xchg
mov
or
add
xor
cmpsl
dec
mov
sub
mov
xor
and
xchg
lock
mov
adc
or
iret
add
cli
ficompl
jg
and
xchg
push
popf
gs
lds
shlb
test
pusha
push
daa
test
mov
xchg
popf
and
aaa
ljmp
nop
mov
scas
inc
stos
xlat
sub
scas
pusha
pushf
jmp
mov
push
stc
add
bound
ss
lret
imul
loope
inc
push
jge
xor
xchg
pusha
cmp
movsl
mov
rcrl
push
in
jle
xchg
fistps
out
push
fwait
xchg
push
out
cmp
pop
add
fs
sub
pop
shlb
lea
mov
mov
outsb
sub
out
fldenv
test
int3
idiv
lret
push
and
js
lds
je
push
out
jbe
mov
adcb
imul
int3
xchg
or
movsl
jb
mov
cmpsl
add
movsl
pop
test
dec
aaa
test
lds
cltd
jg
ja
jle
dec
mulb
xor
sti
jbe
jns
clc
pop
dec
add
mov
call
jae
pop
push
add
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
add
movsb
pushf
adc
mov
pop
pusha
mov
add
iret
pop
push
out
adc
arpl
jle
xor
in
push
shll
cmp
push
mov
jp
lret
out
lea
mov
iret
adc
mov
pop
xchg
xchg
push
xchg
pop
inc
ss
stos
xor
mov
inc
aad
leave
or
lahf
ja
sub
push
mov
es
loopne
inc
int3
cmc
xor
loopne
dec
sahf
fcoml
dec
xchg
into
out
add
sbb
dec
inc
push
mov
xor
stos
inc
adc
movl
insl
mov
adc
add
mov
xchg
adc
mov
sahf
cwtl
mov
xor
sar
inc
std
sahf
repz
or
rolb
dec
sarl
mov
cmp
and
divb
jns
inc
js
std
mov
lods
stos
sbbb
inc
mov
outsb
mov
cs
add
iret
enter
adcl
jp
out
rcrb
and
jno
jae
or
adc
rcrb
cmp
iret
mov
dec
push
dec
pop
cwtl
xchg
test
icebp
imulb
icebp
mov
mov
push
loop
test
xchg
ss
sbb
jns
fstp
push
adc
shl
mov
out
add
or
js
xchg
es
jg
in
inc
shrb
loopne
arpl
mov
inc
mov
or
ret
aad
jmp
mov
ljmp
les
call
sbb
mov
shll
sbb
icebp
das
mov
orb
ficoml
shll
and
iret
ret
pop
pop
dec
inc
jp
mov
imul
ds
ds
pop
mov
push
xchg
bound
and
mov
enter
nop
inc
ret
movsb
push
and
shrb
out
cld
movl
icebp
mov
jle
sub
pop
cltd
fcmovbe
mov
xchg
pop
rorb
sbbl
cld
lret
or
push
and
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fstl
adc
xor
xor
mov
xchg
pop
add
sub
rcr
mov
cmpl
add
scas
sub
xchg
movsb
ljmp
cld
rcll
cwtl
adc
ja
or
push
outsb
mov
jno
es
cld
sbb
sbb
fcompl
push
pop
sub
and
mov
fs
pop
pushf
add
mov
mov
mov
daa
xchg
ficoms
fiaddl
cmp
push
jecxz
faddl
andl
andl
inc
xchg
mov
ret
and
jnp
jg
inc
push
sbb
inc
push
sub
shll
fimull
push
cld
push
shll
sub
mov
mov
mov
sarl
insb
fsub
mov
push
mov
jp
rorl
pop
xchg
sahf
mov
lock
mov
xchg
sub
lret
cld
stos
enter
shlb
shlb
ds
pop
jmp
repz
add
sbb
push
insb
xchg
sub
sub
push
imul
mov
push
jmp
push
outsl
mov
jge
cmp
cmpsl
lods
aad
or
popa
adc
dec
xchg
lds
push
and
pop
test
pop
push
cs
das
jg
test
out
xchg
push
dec
jne
iret
mov
ja
out
dec
les
push
clc
fs
add
ljmp
push
ss
add
push
ja
sbb
movsb
jg
lds
inc
jno
mov
mov
movsl
cmpsl
push
mov
movsl
outsb
xchg
dec
sub
imul
stos
loope
jb
or
jmp
pop
sub
addb
vmovsd
movsb
nop
orl
pop
jl
pop
sub
subl
les
cmpsl
add
loopne
arpl
test
mull
fnsave
xchg
clc
mov
shlb
outsl
dec
cli
jecxz
or
aad
sbb
repnz
mov
cmp
pop
sbb
into
inc
add
hlt
sbb
imul
mov
ljmp
mov
arpl
roll
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
shl
mov
sarb
xchg
jp
dec
imul
out
xor
ss
and
bound
out
xor
sub
ret
dec
add
mov
int
loope
imul
test
mov
lea
cmpxchg
xor
je
rcll
shlb
cmpsl
psubb
repz
orb
sbb
in
ficoml
shr
and
sbb
xchg
cmp
push
insl
mov
jb
push
out
fisubs
movsb
bound
push
pop
jle
rclb
add
lret
loop
pop
out
mov
adc
cli
imul
addr16
inc
scas
inc
xor
jl
fnstsw
adc
or
sub
xchg
data16
or
repnz
mov
jge
outsl
inc
popf
hlt
stc
dec
and
out
sbb
inc
shrl
pop
fs
fstpl
sub
adc
jns
imul
push
movsb
popa
jns
mov
push
xchg
fsts
ss
mov
push
xchg
mov
push
bound
xor
fbstp
inc
mov
mov
hlt
andl
out
jno
mov
cmp
push
icebp
fidivrs
xchg
push
xor
pop
mov
cld
addb
pusha
aam
dec
cli
js
jb
fs
cmp
cmpsl
mov
lock
aas
cmpl
out
inc
arpl
sbb
or
xchg
pop
mov
sub
into
or
fwait
dec
sar
out
xor
fdivs
add
ds
gs
loope
nopl
pop
jge,pn
jbe
jnp
mov
bound
sbb
aad
sar
cmc
das
es
jmp
xchg
inc
xor
pop
pop
nop
mov
insl
mov
mov
sahf
sub
mov
inc
xchg
or
fdecstp
jo
mov
xchg
inc
inc
jmp
add
icebp
jae
ret
mov
dec
adc
pop
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
push
js
nop
add
sarb
mov
icebp
xor
bnd
mov
ss
xchg
shlb
cltd
lcall
lds
js
cmp
sub
mov
fiaddl
aad
sbb
sub
adc
mov
lret
aam
add
out
or
add
stos
pop
mov
out
inc
mov
sahf
adcb
pop
imul
mov
call
jg
mov
jecxz
jne
popa
stos
je
insb
cmpsl
and
je
push
hlt
mov
stc
push
pop
insl
xor
mov
xor
or
mov
add
dec
pop
les
lock
inc
mov
pop
sbb
je
fnstsw
xchg
shl
imul
shll
shlb
ret
jbe
xchg
push
repz
push
cmp
cmp
dec
inc
loopne
jp
ret
and
push
push
mov
leave
inc
jo
ret
mov
cmp
into
push
cmp
cltd
call
adc
dec
ror
movsl
fs
cmp
dec
data16
ret
pop
fs
pop
lock
mov
inc
cmpsl
pop
ja
cmp
cwtl
jge
hlt
inc
cwtl
jmp
test
cli
insb
in
into
xchg
inc
xchg
ljmp
incl
and
and
cmp
mov
out
shrb
cli
shlb
stc
aam
sub
xchg
adc
in
mov
mov
insl
cmpsl
or
fst
sub
xchg
jmp
and
leave
sub
jns
push
out
addl
pop
clc
xor
imul
movsl
stos
inc
jnp
and
mov
rcll
cmpsb
in
jmp
nop
fmul
dec
adc
xor
adc
es
jge
mov
and
insl
mov
fbld
push
cli
xor
xchg
mov
out
or
inc
or
xlat
and
push
fdivl
orb
adc
fmuls
sti
clc
mov
xchg
xchg
push
scas
ret
sbb
add
and
and
mov
cltd
xchg
ffree
add
out
mov
push
mov
jns
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
mov
and
mov
test
lock
fmul
sub
inc
shll
movsb
loope
inc
pop
nop
dec
insb
in
cmp
jbe
cli
and
jo
adc
stos
lahf
xchg
loope
outsb
andl
sub
jl
xor
lods
xor
dec
jo
ret
out
xlat
push
rolb
daa
pop
xor
push
jno
jae
xorb
fwait
inc
adc
loope
out
into
xchg
cmp
into
test
mov
movsb
push
enter
addl
jle
jmp
mov
push
fwait
mov
mov
and
dec
jg
adc
cs
fsub
in
and
adc
cmpsl
xchg
rclb
cmp
cltd
push
aam
arpl
xchg
and
jge
fisubl
icebp
inc
dec
sbb
sub
adc
mov
jmp
js
mov
lods
cmpsl
pop
loope
pop
sbb
mov
jmp
push
cmpsl
iret
or
ljmp
or
clc
push
adc
movl
popl
cmp
dec
js
jle
add
pusha
cmp
fldt
push
sub
sub
stos
jno
repz
add
and
lds
push
lret
andb
or
mov
pop
mov
xchg
aas
imull
xor
inc
int
push
jecxz
ja
movsb
repnz
into
inc
adc
std
xchg
addl
mov
popa
xor
sbb
xchg
mov
sbb
stos
inc
xlat
mov
or
pop
cmp
nop
or
lock
pop
xor
and
push
lea
js
mov
add
aam
adc
push
lret
xchg
mov
jno
negb
ret
dec
enter
pop
inc
inc
mov
out
push
inc
lds
or
popa
xchg
adc
in
dec
sub
inc
mov
andb
gs
push
or
imul
pop
mov
fwait
sub
inc
movl
push
xorb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
fs
repz
mov
lock
fcmovbe
das
clc
and
cmpb
test
dec
and
repz
add
push
xacquire
mov
movl
in
jmp
in
subl
outsb
push
repnz
xor
stos
outsb
or
mov
stos
push
dec
push
mov
mov
push
ja
sti
jno
push
mov
mov
mov
or
and
add
pusha
xchg
adc
jns
cld
cltd
mov
xchg
popa
pop
frstor
into
in
push
adc
lock
div
daa
nop
lret
scas
dec
or
jbe
int3
mov
dec
pop
inc
cmp
mov
inc
mov
xchg
mov
pop
pop
in
dec
lea
insl
xchg
test
push
loope
dec
stc
ja
push
ret
and
pop
lret
push
xchg
mov
stc
cld
cmc
sbbb
dec
add
xlat
xchg
xchg
sbb
push
aad
pop
inc
cmp
nop
fs
mov
sub
inc
mov
mov
mov
fldcw
je
sti
fwait
push
xor
aas
sbb
loope
fidivrs
mov
push
inc
sub
sar
outsl
inc
movsl
fisubrs
mov
popf
inc
jg
sub
and
add
xor
decb
movsb
inc
push
add
pop
cld
adc
jns
mov
gs
and
inc
pop
pop
cltd
hlt
jg
pop
dec
pop
xchg
sub
ljmp
cmpsl
fcompl
test
insb
insb
fisubrs
loope
in
js
cmp
shrl
fdivrl
pop
mov
dec
xchg
pop
xchg
lret
add
xchg
and
out
dec
insb
fstps
and
mov
jae
inc
inc
mul
movhps
jge
out
cmpl
fwait
push
insl
fdivs
popa
loope
enter
notl
mov
aad
es
xchg
xchg
mov
lods
aas
bound
push
test
push
mov
mov
xchg
jmp
xor
jmp
cmp
orl
mov
and
and
add
and
jmp
xor
frstor
test
and
sarb
stos
sti
fidivl
mov
lods
sbb
pop
ror
popa
xor
ss
mov
pop
add
in
in
mov
push
out
cmp
out
negb
mov
in
out
icebp
cmp
popa
out
and
das
js
mov
dec
inc
mov
mov
mov
dec
in
cmp
test
push
fld
pop
cmp
jl
add
out
push
jbe
cli
cmp
xor
iret
clc
jno
jp
sub
notl
rorl
jne
int
pop
out
mov
jp
push
lds
cwtl
inc
mov
dec
stc
rclb
xchg
mov
mov
test
ja
jecxz
mov
dec
cmpsl
popf
sub
je
sub
enter
stos
add
xchg
js
cs
mov
sub
pop
in
cmp
stos
sahf
jmp
test
dec
ljmp
out
xor
xchg
fdivrs
loopne
adc
fsubrl
and
cmp
rolb
xor
dec
add
dec
stos
mov
sbb
mov
sbb
decb
and
shlb
pop
mov
jae
outsl
arpl
push
clc
pushf
insb
js
sub
push
shll
cmp
and
xor
pop
mov
mov
pusha
dec
add
shll
xchg
aaa
xchg
and
les
sub
push
xchg
loop
cli
js
imul
cmp
jp
jg
jbe
xchg
ror
mov
xor
js
push
jae
sarl
or
xor
int3
fisubrl
stos
pop
and
in
pop
cmp
lcall
adc
popf
mov
leave
cs
mov
xchg
into
xor
dec
jne
in
loopne
mov
adcl
inc
push
out
jns
add
xchg
sbb
add
mov
ret
or
aas
in
dec
stc
int
lock
dec
fistpl
jecxz
repz
jl
les
xchg
popf
ret
gs
sub
stos
and
add
cmpsl
jmp
outsl
dec
cld
sub
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
pop
iret
movsb
jecxz
sarb
xor
xchg
adc
popf
or
test
sbb
fs
mov
mov
out
pop
rolb
cmpsl
sbb
in
testl
not
xchg
sbb
fistps
push
cltd
dec
fadds
mov
lcall
dec
pop
pop
sbb
sbb
sub
fdivrl
bound
cltd
mov
into
cld
das
xchg
push
icebp
sub
pusha
and
loop
adc
rol
fimull
iret
jle
inc
mov
fldcw
add
mov
imul
fdivrl
push
push
stos
mov
popf
addr16
pop
sar
sarb
sbb
lods
xor
movb
or
fnstcw
mov
lea
sub
push
push
movsl
and
xchg
pop
cmp
jns
into
test
mov
inc
cmp
outsb
mov
fdiv
cltd
icebp
cmp
repnz
out
xchg
int
scas
clc
into
call
das
mov
or
cmp
mov
fisttpll
push
jmp
mov
jbe
call
mov
cmp
mov
lret
repz
or
stc
adc
addr16
test
enter
cmpsl
adc
ljmp
adc
jbe
loope
xor
mov
dec
std
cld
stc
sbb
les
inc
icebp
in
and
jp
mov
ds
test
leave
clc
cwtl
test
sbb
push
enter
fbstp
dec
mov
ss
jp
shll
cmc
inc
adc
dec
adc
mov
adc
pop
add
jp
mov
fsubs
hlt
lock
xchg
fisubrs
ljmp
addb
leave
sub
mov
mov
xchg
es
mov
push
shlb
xor
jg
mov
push
lahf
incb
test
pushf
and
jg
dec
rolb
xchg
cmc
in
dec
and
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
das
fs
pop
xor
mov
mov
lods
xor
pop
shlb
push
jnp
pusha
gs
sub
and
pop
or
or
sbb
jge
addr16
test
mov
mov
scas
jae
test
push
cmpsl
dec
in
xchg
jb
jno
jmp
mov
jo
jl
cltd
lahf
sbb
mov
loop
adc
pop
push
push
add
sub
imul
pushf
enter
pop
adc
dec
sub
xor
ljmp
popf
xchg
mov
xchg
decb
fwait
fs
mov
xchg
loop
mov
out
mov
jp
popf
and
sahf
rcrb
stos
setne
xchg
jl
jg
je
jo
mov
push
bound
std
cmpsl
sbb
adc
or
inc
or
rcll
dec
int3
mov
mov
push
jmp
cwtl
inc
das
mov
cmp
inc
out
lahf
out
pop
gs
xchg
lret
push
jne
mov
xchg
daa
adc
add
adc
daa
rcll
std
pop
and
lahf
pop
and
fdivrl
cmp
mov
mov
sub
xor
pop
pop
andl
cmpsb
push
cltd
jo
dec
jg
out
mov
push
xchg
xlat
hlt
cmp
in
sbb
dec
insl
into
pushf
pop
and
stc
notb
ffreep
sahf
cs
test
inc
and
mov
sub
inc
add
jo
ljmp
mov
sub
pop
add
sbb
lret
popf
leave
ljmp
dec
in
jno
push
pop
divl
aad
out
sub
pop
or
test
xchg
add
fimull
xchg
pop
sarl
pop
adc
lcall
lcall
jecxz
stc
jmp
push
push
sbb
sbb
mov
adc
mov
mov
mov
movsl
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
xchg
aam
sarb
je
fidivl
repnz
pushf
cmp
cld
hlt
lret
xchg
or
aam
mov
or
aam
or
out
pop
int
xor
loope
mov
shll
sbb
out
lock
cmp
cmpsl
push
cmp
xor
sub
rcr
clc
ret
loope
bound
ja
fists
push
and
pop
roll
out
std
cmpsl
adc
lea
fsubl
movsb
mov
stos
or
jno
xor
es
adc
out
sbb
cmpsb
bound
fcomi
and
or
fsubs
sub
pop
andb
test
dec
pop
dec
pop
and
cwtl
lcall
mov
cli
ret
imul
mov
in
shr
push
xlat
call
shll
push
das
cmp
in
push
hlt
dec
jl
sbb
sbbb
xor
aam
xor
arpl
pusha
mov
pushf
cmpsl
mov
pop
outsb
bound
push
iret
xlat
aad
push
addl
pop
outsl
lret
fstpt
loopne
xchg
subb
cmp
test
push
add
or
xchg
nop
jecxz
mov
arpl
xor
sbb
sarl
push
ds
fisubl
mov
or
dec
cmpsb
add
cmp
push
outsl
int3
xchg
and
mov
aas
jg
data16
xor
fisubl
mov
rolb
loopne
ja
notl
fadd
adc
or
movb
add
sub
adc
add
test
cld
cmp
cli
jo
push
mov
rorl
push
push
xchg
xor
test
shrb
lods
lret
ret
push
out
inc
jmp
repnz
push
dec
xchg
out
cli
pop
jns
mov
in
mov
or
push
mov
or
lods
mov
fidivrs
push
inc
or
stos
jg
out
outsb
push
test
xchg
mov
loopne
mov
lea
dec
ss
or
xor
sarb
aad
test
enter
sbb
dec
cmpsb
lret
sub
xchg
scas
pop
pop
imul
data16
cmp
dec
movsl
js
outsb
push
xor
rorl
lcall
imul
jno
lret
int
sbb
arpl
push
stos
loop
loop
jnp
ficoml
jne
loop
add
mov
inc
inc
inc
mov
orl
adc
lret
mov
or
jp
or
jns
pop
and
imul
push
icebp
shrl
push
xchg
rorb
xorb
loope
jnp
nop
enter
jnp
es
cmp
xor
mov
into
mov
out
pop
pusha
cmc
cmp
mov
cmp
cmpsb
lock
sub
jnp
cmovg
mov
sub
xor
dec
addl
mov
inc
pop
arpl
dec
rcll
in
sti
mov
push
or
fmull
in
jmp
pusha
pusha
mov
shrl
movsl
or
enter
outsl
cmp
sbb
jl
sub
dec
outsb
push
inc
jb
fidivrs
dec
mov
test
sbb
inc
in
adc
imul
push
lret
in
pop
adc
and
mov
sbb
stos
jns
mov
push
es
push
adc
stc
cwtl
fcmovnbe
adc
clc
sbb
mov
xlat
sub
and
repnz
je
bound
jnp
notb
mov
daa
xor
mov
sbb
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
add
shll
sarb
sbb
fnstenv
jno
mov
jne
inc
test
das
jmp
dec
sbb
std
cmc
sbbl
or
jnp
adcl
aam
popf
insl
in
fimuls
pop
sbb
sahf
and
xor
or
loop
roll
jge
aaa
inc
pushf
jnp
dec
js
mov
cmpsb
and
jge
ret
ja
jle
inc
or
mov
xchg
jo
in
imul
dec
mov
cltd
pusha
jns
sbb
and
sbb
fstps
add
sub
mov
xor
cld
mov
cld
or
inc
lods
nop
lods
inc
data16
push
enter
and
dec
addl
cmp
inc
push
jns
testb
out
inc
xchg
sbb
mov
mov
pop
lret
or
daa
int3
ds
sub
imul
cltd
negb
sbb
inc
xchg
inc
lahf
add
in
mov
xchg
jnp
adc
scas
shll
mov
cmp
dec
sbb
lcall
lods
out
xchg
repz
lret
sub
inc
inc
dec
in
adc
cmp
rcll
arpl
dec
push
add
aad
xor
int3
mov
iret
daa
pop
pop
in
mov
fildl
jecxz
rcl
imul
arpl
cmp
jecxz
scas
sub
lcall
lods
mov
xlat
rclb
xor
div
pusha
iret
and
cpuid
stc
insb
bound
push
dec
lds
inc
cltd
lods
inc
repz
stc
and
ret
or
jne
cmp
popa
jl
lahf
movaps
in
sahf
test
mov
pushf
inc
dec
ja
jecxz
and
push
and
mov
iret
dec
add
sub
jecxz
dec
dec
andl
ss
jl
or
jmp
in
ss
stc
enter
scas
aas
inc
sti
adc
add
inc
aam
insb
add
call
push
popf
je
inc
out
ss
mov
xchg
fs
mov
or
add
fisubrs
xor
add
lcall
je
sbb
and
cmpsb
imul
sbb
rcr
aaa
mov
fdivrl
dec
push
insl
hlt
jo
jnp
adc
mov
push
in
mov
iret
inc
popa
pusha
dec
imul
add
pop
test
adc
ljmp
mov
xchg
rolb
sbb
cmpsb
add
push
stos
stos
mov
aad
xchg
mov
sbb
and
push
cmpsl
in
sub
inc
sbb
sub
rorl
enter
out
lcall
fidivl
dec
fiaddl
shrl
sub
or
pusha
lret
xchg
mov
lcall
dec
shrl
ret
or
xchg
cli
inc
das
and
jae
scas
sahf
lahf
ficompl
add
sbb
xor
xchg
movsl
adc
dec
inc
scas
mov
adc
cmp
cmpsl
lahf
adc
adc
pop
dec
test
push
insb
pop
js
add
ljmp
push
sbb
push
xor
inc
test
aaa
or
push
inc
ja
lods
adc
sarb
mov
mov
pusha
mov
hlt
xchg
inc
or
cmp
sub
lret
sbbl
mov
icebp
lds
add
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
bound
dec
les
mov
das
lock
dec
inc
or
mov
cmp
inc
inc
push
mov
and
xchg
mov
fwait
rclb
add
imul
cmp
mov
inc
fimuls
aas
mov
push
sub
out
jecxz
cmpsl
cli
enter
iret
mov
mov
cmp
mov
es
cmp
mov
xor
adc
aad
adc
fwait
mov
in
xchg
mov
sbb
mov
jmp
jnp
xchg
cmp
mov
mov
cmp
mov
ret
mov
add
es
push
pop
mov
cltd
mov
pusha
add
fimuls
gs
sahf
pop
icebp
jno
xor
fcom
cli
lret
mov
mov
stos
xor
jae
mov
outsb
je
xorb
dec
pusha
sbb
lods
cmc
pop
out
mov
mov
fwait
rcll
lcall
add
inc
push
sub
cmp
push
out
ret
dec
imul
xchg
iret
inc
push
and
xchg
or
jp
sub
jbe
pushf
adc
cmp
in
pop
push
dec
mov
push
adc
dec
add
adc
xor
and
jle
or
and
enter
and
pop
mov
push
arpl
cmp
and
movsb
fldcw
nop
jb
stos
pop
shrl
test
xor
mov
hlt
ret
adc
fstl
mov
cmpsl
sbb
ds
mov
dec
pop
test
jge
adc
cmp
aaa
out
mov
add
ds
shll
add
fistl
pop
push
cs
loop
movl
xor
mov
enter
adc
bound
cld
loop
pop
dec
dec
sbb
das
pop
sub
xchg
push
push
jp
xor
fistl
sub
jno
xor
jnp
and
mov
js
lret
push
test
int
or
jmp
inc
jae
movsl
jg
pop
adc
xchg
stos
push
adc
mov
scas
sbb
xor
ljmp
sbb
stos
inc
scas
jle
or
fdiv
dec
push
loop
jp
xor
iret
sub
mov
or
mov
jp
imul
test
ja
xor
les
sbbl
pop
mov
aad
xor
ss
dec
in
dec
jne
fisttpl
stos
mov
fcmovne
mov
or
mov
lret
aas
cmpsl
hlt
adc
outsb
mov
cmp
cmc
rcrl
push
adcl
loope
fucomi
test
mov
sbb
xor
leave
inc
dec
lahf
sbb
add
dec
push
hlt
sahf
jp
dec
push
das
mov
push
mov
push
jge
pop
ret
movntps
xchg
xchg
sbb
popf
ja
stc
mov
pop
mov
xor
movsl
loopne
sti
push
inc
add
xchg
cmpl
loopne
mov
pop
mov
shrb
aas
inc
loop
dec
in
push
xchg
cmp
ja
inc
cld
mov
daa
imul
das
push
jecxz
adc
push
lods
stos
rorb
add
dec
push
int3
cmpsb
hlt
in
les
fwait
push
push
xchg
xchg
clc
imul
jmp
out
adc
push
jmp
add
sbb
int
push
sub
mov
fldcw
push
add
addr16
add
sahf
adc
test
pushl
jne
add
adc
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
push
lods
xchg
enter
icebp
push
and
xlat
mov
fistpl
clc
jo
adc
jmp
dec
cmp
sahf
inc
test
in
pop
mov
popl
cli
pop
pop
sti
pop
pop
cmc
sarl
js
push
mov
xor
and
mov
pop
inc
ret
fildll
testb
dec
arpl
out
push
out
test
stc
mov
xchg
les
scas
sub
rclb
test
int
stc
sarb
cmpl
cs
in
mov
or
nop
repz
inc
mov
iret
jo
loop
movsb
or
xchg
lcall
xchg
sbb
and
xchg
dec
rcrb
adc
jns
popf
xchg
mov
xchg
jno
loopne
lods
cmp
mov
xor
mov
push
test
jbe
aaa
int3
movsl
iret
jns
sbb
or
jo
sub
cmp
jecxz
test
in
movsb
addr16
scas
mov
add
dec
jmp
and
call
sbb
stos
gs
das
paddsb
push
add
pop
add
dec
cmp
das
fsubrs
xchg
mov
sub
and
push
sbb
mov
out
outsb
aam
mov
pop
lea
out
fdivs
shr
cmp
stos
lds
mov
fbstp
dec
idivl
mov
sbb
adc
cli
push
xchg
in
mov
adc
dec
or
out
pop
fwait
mov
cmpsb
jae
fwait
enter
xor
lds
dec
xchg
mov
fnstsw
pop
inc
mov
dec
jecxz
test
je
push
dec
cli
addr16
lods
pop
push
cmpsb
xchg
aad
cmc
mov
adc
or
rorl
mov
in
call
add
cld
aas
inc
lcall
loopne
stc
in
outsl
or
add
mov
push
and
adc
cmp
dec
lret
loope
das
into
enter
push
jmp
ret
jnp
push
sub
mov
push
subl
aas
ljmp
or
ror
out
adc
in
xor
adc
in
xchg
jne
or
loope
dec
fidivs
xchg
inc
mov
jne
mov
lahf
or
stc
dec
jecxz
push
dec
cmp
xchg
int
or
mov
add
xor
mov
mov
cmpsb
jae
mov
sub
add
sub
fucom
mov
xchg
call
add
pop
inc
pop
sbb
mov
xchg
pop
push
mov
movsb
add
iret
push
rclb
xchg
out
push
cmp
enter
aas
std
mov
mov
mov
adc
push
mov
or
test
push
or
leave
stos
dec
lret
popa
push
faddl
inc
jnp
sbb
fcmovu
test
sub
lcall
ljmp
xchg
lea
ret
cmpsl
jo
ss
xchg
inc
lock
orb
cld
cmp
shrl
mov
roll
movsb
sub
jnp
sbb
fsubrs
imul
jne
test
mov
orl
jbe
ret
jmp
imul
xchg
inc
xchg
call
sbb
loope
mov
and
orl
or
mov
xor
or
mov
sti
jp
push
out
mov
dec
imul
cmpl
or
pop
pushf
add
dec
dec
xchg
mov
sahf
imul
mov
xor
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
mov
jo
add
mov
jne
orl
fcomp
ja
rorl
fcmovb
mov
addr16
mov
arpl
lcall
jo
int3
sahf
xlat
sti
sub
add
out
pop
sbb
jae
movsb
mov
mov
mov
jne
and
pop
int3
mov
es
push
sub
leave
lea
rcrb
int
mov
mov
call
scas
cmpb
movsl
inc
add
bnd
mov
sbb
or
add
popf
add
testb
or
es
mov
loopne
cwtl
jns
fsubrl
cmc
sub
pop
jne
xlat
or
in
loope
or
push
mov
jno
iret
xchg
cmp
movsb
pop
xor
std
outsl
add
inc
in
rclb
enter
mov
mov
vpor
sbb
jge
cmpsl
ror
incb
lahf
jle
idivl
xchg
adc
es
sahf
jnp
sub
and
pop
xlat
out
popf
jbe
sbb
push
mov
repnz
rcll
stos
add
ds
sti
lcall
leave
andb
lcall
fiadds
scas
shll
push
mov
and
or
lret
cli
fcoms
add
fmul
sub
pop
insl
dec
jecxz
jae
and
jg
fdivp
add
fs
shlb
lret
add
cmp
outsl
imul
jnp
sarl
lahf
push
jg
leave
mov
jb
pop
mov
inc
xchg
push
jge
or
xchg
rclb
jl
iret
popf
and
or
sub
pop
jae
xor
hlt
jne
loop
xlat
js
push
jb
dec
jo
loope
lret
popa
imul
shrb
aaa
out
sub
xchg
push
call
mov
and
sub
jmp
lods
pop
repnz
addr16
mov
shrb
into
popf
hlt
scas
lock
add
adc
out
cmp
testb
mov
std
cmpsl
cmp
cmp
and
lea
daa
sti
add
fildll
add
inc
cmc
xor
mov
imul
out
xchg
stc
fmuls
std
adc
loope
pop
pushf
xlat
and
xchg
jge
js
insl
push
push
jmp
mov
mov
mov
stc
xor
dec
rcll
add
mov
sbb
push
and
iret
jmp
mov
les
jmp
mov
cmc
sub
and
inc
mov
pop
xor
push
sti
lock
mov
arpl
or
push
sub
daa
movsb
jb
mov
fs
or
repnz
pop
sub
repnz
cmp
loopne
push
std
adc
insb
pop
cld
push
in
cmp
leave
out
xor
lods
jl
mov
movsb
sbb
xor
icebp
scas
cwtl
mov
cmp
xlat
cmp
push
mov
xchg
mov
sarl
fnsave
mov
mov
fs
push
sahf
ret
andl
frstor
sub
clc
sub
inc
gs
call
leave
pushl
xlat
jle
cwtl
xchg
and
mov
fxch
xchg
cmovl
out
cmp
inc
ljmp
sbb
cld
fcmovu
cmp
hlt
arpl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
push
add
nop
pop
sarb
call
fsubp
push
push
mov
mov
and
dec
push
cmpsl
jmp
repz
sbb
jbe
or
fdivs
xchg
pop
nop
or
mov
pop
pop
cmp
jecxz
mov
mov
stos
ficompl
lcall
and
data16
cmp
clc
mov
pop
cli
fiaddl
and
mov
xorl
sub
aaa
dec
rcll
push
imul
inc
dec
pop
sub
xor
mov
or
lods
aad
push
cmc
sbb
movsb
repnz
int
lds
pop
mov
jne
aad
outsl
push
jle
push
enter
xor
xchg
testl
xor
scas
jne
dec
pop
xor
sti
dec
jle
mov
in
xor
test
or
mov
ficoms
into
pop
jo
lcall
mov
je
movsb
and
ss
mov
loop
xchg
pop
xlat
push
stos
test
sbb
in
dec
inc
bound
jns
stc
cs
icebp
notl
lahf
mov
mov
xchg
lea
mov
cli
push
sbb
hlt
sub
enter
cmp
jnp
lds
mov
cli
jb
js
cmp
cmp
int
add
ljmp
sbb
aas
xor
lret
xor
adc
xchg
fsts
sbb
dec
cmpsl
pop
inc
hlt
lods
inc
out
aam
stos
push
jnp
pop
pushf
xorb
push
mov
xor
in
xlat
adc
cmc
sbb
repz
out
stos
mov
add
addl
popa
add
push
enter
push
push
imul
enter
inc
mov
rol
hlt
pop
iret
dec
inc
int3
adc
and
repz
push
fcomps
icebp
xor
inc
imul
inc
repz
dec
mov
iret
movsb
cmp
test
loop
cltd
cltd
aaa
add
stos
push
or
jbe
dec
xchg
cmp
popa
or
aad
pop
imul
fldenv
lds
addr16
loop
jno
jno
and
mov
repz
push
ret
mov
movsl
cmc
cmpsb
xchg
inc
fnstcw
insb
cmp
mov
lock
adc
and
add
out
lods
jb
dec
inc
adc
pop
jmp
ljmp
sub
cmp
cwtl
push
adc
sbb
pop
adc
in
int
inc
inc
xlat
loope
mov
out
mov
push
pop
sbb
push
inc
sarb
push
in
rol
stos
mov
mov
pusha
js
int3
mov
fisubrs
sahf
push
pushf
cltd
xchg
sti
xor
hlt
out
insl
inc
adc
pop
popf
and
fadds
dec
test
xor
adc
cmpb
cwtl
int3
push
sub
xchg
jno
mov
es
push
adc
pop
insb
shrb
mov
gs
daa
and
cmpsl
xchg
stc
es
add
leave
add
and
insl
daa
js
leave
sbb
testb
add
pfrsqrt
xchg
ret
mov
jle
pop
cs
dec
and
mov
aad
jno
jle
stos
xor
fwait
xor
out
adc
cmp
aaa
mov
xchg
pop
aad
or
dec
and
addl
sub
lret
arpl
cmp
push
loope
stos
push
adc
loop
cld
mov
add
mov
std
aam
imul
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
nop
and
dec
les
xchg
ret
cmpsb
int
mov
xlat
in
aam
popf
cltd
fstpt
aam
sbb
pop
test
push
jb
mov
popa
xor
lahf
xchg
mov
fs
jno
mov
xchg
testl
out
dec
icebp
iret
xchg
add
rorl
sbb
pop
push
dec
jp
orb
cmp
sbb
sarb
cwtl
pop
cmp
movsb
pop
sbb
cmc
je
add
pop
repnz
sub
mov
mov
inc
rorl
xchg
mov
adc
adc
mov
inc
sti
sbbl
int
in
rcl
andl
mov
jp
jne
movl
fwait
and
setns
cli
sbb
nop
pop
iret
fsubr
xor
sub
and
or
and
or
mov
rep
cmp
in
stos
lds
andb
inc
jns
cmp
xor
or
movsb
push
push
add
ss
adc
xchg
pusha
jecxz
fwait
cld
out
test
add
dec
sbb
sbb
pop
fldl
mov
adc
adc
pop
xor
aas
sbb
add
shll
popf
cmp
aas
mov
cwtl
or
and
mull
stos
movsb
pop
loope
push
push
pop
xchg
lea
ljmp
xor
shll
leave
sbb
jg
mov
inc
cltd
inc
data16
mov
fistl
ljmp
fimuls
push
mov
mov
mov
mov
xchg
nop
add
insb
xor
lea
out
ret
adc
loope
push
add
sub
loop
xor
scas
mov
test
pushf
daa
mov
test
fadd
popa
mov
push
fistl
mov
in
cli
jno
dec
lock
aas
movaps
cmc
scas
test
dec
fildl
or
or
mov
mov
jo
sub
clc
pop
cli
cmpsl
adc
jno
jmp
push
mov
dec
outsb
das
test
pusha
adc
movsb
mov
jnp
sbb
dec
icebp
imul
sbb
xchg
rcll
pop
mov
dec
mov
xor
lret
in
mov
fmulp
test
xchg
lock
xchg
lods
insl
mov
xchg
pop
push
shrb
xchg
add
lea
pop
xor
imul
aad
rclb
jl
mov
jo
or
pop
aas
ljmp
xlat
mov
sub
mov
and
inc
dec
adc
shl
dec
mov
ja
cmp
push
push
lret
and
or
sbb
aad
xchg
test
rorb
sub
adc
adc
jge
lock
sub
jo
pop
cmp
into
daa
pop
mov
shrb
jl
bound
mov
into
pop
jge
dec
xchg
jb
aaa
sub
dec
sub
or
dec
in
outsl
push
sub
dec
pop
dec
mov
adc
push
mul
jmp
sbb
imul
push
inc
outsl
jno
ja
aaa
out
mov
sar
rolb
stos
xor
imul
loopne
repnz
sub
mov
jle
push
repnz
cmpsl
push
mov
loopne
cmpl
lods
lock
xchg
in
cmpsl
rcrl
shlb
dec
adc
or
xchg
daa
aam
jmp
pop
or
push
push
call
mov
cmp
jmp
mov
xor
mov
mov
nop
xor
outsl
sarb
add
ficompl
dec
sbb
test
add
mov
les
sub
xor
pop
cmp
jbe
jns
int
jle
iret
dec
mov
rol
jne
lds
dec
dec
js
pop
push
jne
pop
adc
loop
dec
cmp
sub
fimuls
pop
mov
shlb
mov
outsl
lret
pop
adc
cmc
fisttpll
cmp
xor
inc
test
daa
neg
out
pop
xlat
fnstsw
mov
imul
dec
repz
push
inc
adc
jl
mov
mov
adc
xor
sub
sub
daa
cmpb
movsb
dec
mov
rorb
sbb
pop
int3
and
and
sbb
inc
lds
in
mov
insb
pusha
mov
sub
ss
xchg
pop
inc
outsl
mov
jp
push
mov
jl
repnz
inc
inc
ja
enter
sub
imul
fcmovnb
lods
pop
das
pop
mov
mov
push
outsl
jne
cmpb
pop
jnp
dec
shl
pop
and
sub
xchg
arpl
jmp
int3
and
add
out
xchg
stc
ljmp
mov
ss
addr16
jo
jnp
and
cmpsl
cli
es
adc
push
jle
cs
popf
mov
outsl
stc
call
cmpsb
mov
jp
dec
adc
cmpl
inc
sub
movsb
add
pop
jns
or
fwait
mov
leave
out
jle
jns
and
fmulp
movl
scas
mov
jae
lods
daa
std
inc
xlat
xor
and
jae
repnz
push
stc
dec
add
scas
xchg
fmulp
sub
dec
sahf
mov
data16
mov
je
scas
popf
mov
cltd
xor
das
aas
shlb
mov
fsubrs
fildl
xchg
or
lea
cmp
out
xor
cli
nop
mov
mov
inc
arpl
and
arpl
xor
loopne
or
jae
mov
cwtl
pop
and
subl
dec
adc
loop
xor
cs
fnstsw
nop
adc
je
xchg
adc
test
push
inc
lods
sub
ror
push
lods
rorb
xor
das
adc
movsb
nop
jo
call
shlb
cmp
inc
add
repnz
xchg
outsb
dec
sub
mov
adc
lahf
ret
je
mov
in
cmc
les
fstpt
add
das
add
cmp
imul
cmpsb
cmp
enter
ss
fmul
cmp
adc
out
inc
inc
push
mov
orl
adc
lods
shr
repnz
sub
mov
imull
jg
fdivl
pop
in
int3
sti
push
and
lret
fnstenv
popf
loop
adc
test
cmpsb
pop
insl
inc
cmc
sbb
inc
pop
testb
mul
dec
xor
sbb
loope
add
hlt
cmpsl
sbb
movsb
sub
xchg
flds
push
daa
and
push
into
int3
into
dec
lds
mov
sbb
push
test
mov
sub
lahf
adc
add
xorl
icebp
pop
sub
and
in
fdivl
movsb
push
sub
jnp
push
stc
pop
out
mov
or
pop
pop
mov
stos
lock
movsl
jecxz
pop
andb
adc
mov
jbe
inc
pop
repz
jg
push
lret
xor
cmp
in
jne
test
add
mov
jmp
cld
sbb
mov
sahf
stos
mov
xor
mov
lahf
ret
pop
rcrl
icebp
rcll
pop
sub
test
aaa
inc
icebp
movsl
jns
test
pop
xor
pop
jp
mov
loope
test
or
sti
leave
dec
add
cmp
pop
xchg
lods
test
dec
inc
out
cmp
and
xchg
xchg
outsb
rcrb
sbb
push
out
mov
out
cli
loop
test
xchg
cli
jo
outsl
test
lock
xchg
xchg
cld
xchg
into
aad
in
jo
aam
inc
pop
jbe
push
inc
cltd
inc
sarb
or
mov
sbb
in
dec
loop
je
je
shll
dec
dec
push
adc
hlt
pop
adc
mov
lcall
outsb
cmpsb
cltd
es
stc
movsl
sbb
inc
xchg
adc
push
out
or
daa
js
mov
inc
mov
test
or
xchg
xor
ss
pop
mov
pop
xchg
addr16
xchg
fwait
inc
inc
fldenv
pop
push
mov
sldt
mov
xor
mov
push
ret
sub
and
push
jecxz
fs
inc
push
xchg
fwait
xlat
test
aaa
push
or
fsts
push
and
jmp
pop
out
xorb
cmp
add
xlat
loopne
jb
ja
push
mov
mov
jp
push
xchg
sbb
and
jae
or
push
xchg
xchg
add
int3
xchg
clc
mov
jbe
test
push
gs
lds
gs
jne
mov
xchg
push
std
add
outsb
pop
stos
cmp
mov
and
adc
fimuls
inc
dec
cmp
sub
in
inc
push
test
jle
aam
imul
dec
test
jl
push
pusha
push
pop
stos
push
jmp
sbb
insl
fsubrs
fs
cs
fiadds
xchg
test
sub
ret
jno
xchg
cmp
jns
xchg
aad
push
cli
jb
test
dec
in
hlt
stos
xor
xchg
mov
sub
inc
xlat
sub
cltd
ret
es
xchg
mov
fs
jo
and
lret
or
mov
pop
lret
sbb
mov
imull
sbb
pop
jmp
es
cld
movsb
ffreep
lret
inc
pop
decl
lds
xor
push
inc
xchg
test
jae
shll
popa
sub
mov
add
cmp
shlb
mov
test
xchg
stos
jae
std
push
sbb
cmp
xor
xlat
mov
or
dec
orl
sub
mov
dec
sub
jne
pop
ret
scas
arpl
jle
sbb
outsl
std
dec
lret
test
jae
insl
jns
push
outsb
jo
stos
cmp
adc
pop
pop
jmp
adcb
xchg
dec
add
push
or
daa
popf
pop
stos
lea
xchg
jbe
imul
xor
fidivrs
adc
jno
fwait
ljmp
nop
and
fs
mov
mov
rcrl
xor
inc
inc
sbb
adc
and
lret
fstpl
push
push
fcompl
les
inc
fnstcw
jecxz
das
push
jmp
or
push
dec
xchg
xorb
loop
sbb
pop
jae
mov
loopne
mov
cmp
shrl
and
adc
cmpsb
shll
cmpl
std
pop
adc
test
test
js
cmpsl
push
int3
add
pavgw
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
push
inc
ffree
jg
mov
cmpsb
xchg
mov
ja
cmp
sbb
mov
icebp
mov
or
mov
pop
jmp
not
sbb
cmp
lret
mov
fbld
stc
or
cmp
push
mov
fstpt
xlat
popf
dec
out
aaa
jb
mov
mov
xor
jnp
repnz
js
stos
mov
mov
mov
sub
inc
jae
add
sbb
xor
add
dec
daa
xor
test
sbb
es
movsb
aas
in
fnstcw
and
jo
fldcw
jns
inc
inc
mov
xor
lods
jecxz
sti
mov
push
jge
sub
fld
pushf
xchg
lock
pop
push
enter
push
sahf
notb
lods
out
lcall
mov
arpl
adc
scas
push
stos
or
sbb
out
mov
fsubl
fwait
pop
jae
out
notl
jb
and
jbe
sti
test
mov
xchg
es
into
dec
shr
sub
pop
movsl
pusha
std
inc
sbb
inc
ret
sahf
adc
and
cli
push
adc
repz
inc
lea
push
dec
aaa
test
lahf
dec
aad
loop
pop
mov
pop
ret
mul
dec
mov
scas
cwtl
dec
mov
dec
lahf
int
scas
sbb
push
lea
adc
int
mov
hlt
arpl
push
or
test
push
push
cmc
popf
dec
add
xor
dec
pop
into
mov
mov
or
sbb
ljmp
xchg
and
repnz
cmp
enter
pop
and
mov
mov
int
arpl
pusha
test
add
mov
pop
test
mov
getsec
insl
loope
add
add
bound
mov
test
xor
sbb
jns
lret
fldenv
cwtl
or
cs
fcomps
jne
push
mov
mov
clc
cmp
pop
ficoml
lcall
inc
xchg
jp
dec
fidivs
out
adc
pop
cli
push
dec
adc
dec
push
cmovnp
leave
push
push
aas
push
push
lea
add
jg
out
insb
and
loop
fistpl
mov
rcrb
mov
stos
sub
in
xchg
rcll
mov
add
cmp
or
mov
cs
imul
push
push
loopne
xchg
lock
push
mov
sub
jl
inc
js
xchg
stos
scas
and
jns
fisubrl
js
mov
adc
pop
xchg
dec
xchg
mov
movsl
divb
lock
rcrl
repz
and
adcl
jno
std
xchg
mov
insb
ret
cmc
gs
jl
out
lret
cmpsb
cmpsl
mov
pop
push
in
std
mov
and
stos
pop
arpl
and
ljmp
cmp
cmp
ret
xlat
adc
aam
or
cmp
popa
sbbb
loope
or
push
mov
mov
fs
cld
xchg
cld
adc
lds
test
jl
iret
adc
out
nop
xchg
inc
inc
lods
movsb
push
jge
cmc
test
ds
int3
cltd
stos
loop
pop
loop
test
addr16
mov
int3
sti
xchg
push
mov
and
ficoml
or
imul
sub
adc
fwait
icebp
inc
adc
adc
jmp
roll
mov
decl
add
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
lret
push
cmp
dec
les
fdiv
xor
add
enter
outsl
movsb
push
xor
cmp
xchg
xchg
pop
aam
mov
adc
icebp
push
sub
test
pop
iret
in
push
out
fdiv
imul
cmp
pushf
scas
and
push
jecxz
pop
lahf
push
ds
xor
int3
jmp
outsb
mov
movsl
dec
lret
and
aad
test
or
adc
cs
mov
push
mov
dec
loop
mov
sbb
nop
add
and
mov
add
in
xchg
jmp
xchg
sub
repnz
orl
out
js
and
cs
pop
and
push
mov
add
xor
add
jae
jp
fwait
adc
pop
outsb
cld
cmp
testb
adc
mov
aas
mov
cmp
xor
mov
xor
decl
sbb
shlb
cmpb
pop
cmc
pop
jmp
fs
push
or
ficoms
inc
adc
pop
jecxz
hlt
mov
lahf
jge
lock
ja
loope
mov
pusha
sahf
sbb
loope
sub
loope
push
sbb
pop
movsb
sbb
testb
sbb
or
inc
jb
scas
shrb
dec
push
jae
test
les
jne
jecxz
ret
bound
fmull
sbb
gs
inc
sbb
sub
cmp
sub
enter
adc
push
pop
xor
adc
add
adc
sub
mov
ret
inc
test
add
test
outsb
sbb
mov
pop
xor
cwtl
add
xor
out
sti
rcrb
stos
cmp
push
in
xlat
cmp
lods
cmp
aam
and
cwtl
xchg
hlt
push
push
popf
or
xor
mov
mov
shl
enter
in
pushf
mov
les
inc
std
cmc
xor
hlt
repz
cwtl
sub
xchg
or
orb
insb
cmp
clc
out
mov
jecxz
adc
les
jno
mov
add
fisubrs
es
jmp
popf
inc
jmp
enter
xchg
xchg
push
push
addl
xchg
xchg
sbb
lret
mov
int
cmp
loopne
mov
xchg
adc
data16
stos
fdiv
shr
add
mov
mov
mov
into
das
lods
inc
or
movb
xor
imul
shlb
jae
rolb
and
mov
shrb
inc
in
lds
stos
mov
cmp
stc
mov
sbb
popa
mov
pop
pushf
pop
daa
fcoml
std
pushl
xor
sbb
ljmp
and
dec
mov
stos
aam
cmc
lret
add
jmp
mov
movsl
mov
dec
repnz
lret
dec
lods
lahf
repnz
push
push
pop
fs
inc
fabs
adc
rcr
xchg
fxch
in
pushf
add
add
loopne
stos
add
inc
insb
add
iret
xchg
dec
jmp
pop
add
push
ds
or
in
icebp
pop
fwait
orl
dec
sbb
xchg
cmc
mov
cli
cmp
mov
mov
cmp
jp
pop
cli
sub
push
test
jmp
pusha
shrb
cwtl
imul
stos
fwait
or
adc
add
movsl
xchg
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
add
fstl
dec
les
les
nop
and
iret
xorl
cwtl
jecxz
pop
fwait
orl
ret
mov
jnp
push
ret
mov
adc
jbe
adc
dec
cwtl
fisttps
pop
repnz
mov
ret
ja
push
inc
int3
pop
icebp
out
mov
mov
push
in
not
cmpsl
adc
jbe
and
mov
pushf
jmp
mov
cmc
hlt
cmp
inc
hlt
mov
ljmp
dec
jecxz
pop
dec
out
mov
int3
push
cltd
stos
dec
aam
fs
in
xchg
and
dec
inc
jle
test
call
lods
xor
fdivl
inc
mov
outsl
imul
or
ja
and
cmp
icebp
inc
fidivrs
rol
cld
pop
scas
adc
mov
pop
adc
mov
jns
out
aas
pop
adcl
sbb
pop
loope
lret
in
jns
add
fs
jg
in
outsl
test
ds
das
jne
shrd
dec
adc
lods
xchg
leave
not
je
mov
arpl
or
mov
cmp
dec
mov
cmp
movsl
ja
aas
shrb
je
in
add
test
leave
not
addr16
cltd
fistpll
xchg
stos
push
rclb
out
andb
in
sti
push
jbe
jo
xchg
js
subl
lock
xorb
cwtl
xchg
inc
xor
mov
inc
dec
xor
addr16
or
popf
xor
pop
out
stos
insb
dec
das
aaa
dec
xor
out
sbb
inc
lods
cmc
push
sbb
xchg
fisubs
hlt
stos
sbb
jecxz
popf
test
loopne
bound
mov
xchg
fcompl
in
into
nop
icebp
and
fs
inc
add
dec
xchg
mov
aaa
dec
adc
bnd
test
sub
sbbl
lock
sbb
mov
add
sub
std
dec
inc
jmp
xor
hlt
cmp
or
aad
mov
out
dec
loope
test
mov
ret
push
stc
cmpsl
scas
and
ss
jmp
ret
aam
xor
inc
inc
iret
arpl
std
xorb
lods
hlt
push
lret
dec
push
aad
shl
mov
and
mov
fwait
aaa
decl
xorl
jmp
mov
out
push
mov
sar
iret
inc
nop
sub
in
push
out
inc
mov
jae
xor
or
sbb
jmp
das
popf
adc
lock
cmp
sub
mov
inc
or
xor
jb
sub
and
jnp
push
loop
sub
fisubl
out
xchg
popf
fadds
xor
jmp
add
mov
mov
xor
or
or
les
cmp
mov
and
imul
xor
adc
sbb
test
xor
inc
cld
sub
jecxz
push
or
clc
adc
adcl
jo
andl
mov
aam
cmpl
add
xchg
js
adc
lds
notl
cmpsb
fwait
ret
mov
repnz
mov
in
pushf
push
test
jae
cmc
je
jmp
es
nop
mov
gs
bound
xchg
jl
in
mov
mov
cmpsb
adc
popf
xor
push
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
or
push
arpl
mov
flds
cmpsb
adc
dec
jnp
inc
frstor
pop
dec
test
xor
ret
out
stos
test
push
ficompl
cmp
or
xlat
pop
js
add
outsl
test
fcomp
pop
ljmp
and
cmp
mov
mov
dec
sti
cmpsb
mov
push
jae
push
pop
loope
mov
cmp
or
xor
xchg
pop
and
jmp
sbb
xchg
add
adc
pop
jne
add
push
lods
bound
shlb
fsts
jnp
in
dec
int3
inc
jecxz
shrb
and
cmp
xor
cmpsl
lret
fdivrs
out
loope
sub
xor
mov
xor
xor
mov
jnp
mov
add
aaa
jbe
test
hlt
jbe
inc
jl
inc
lahf
xlat
cmc
dec
lock
sbb
jge
pop
dec
jno
mov
test
mov
and
adc
stos
in
bound
jp
pushf
out
movsb
sti
iret
rorb
or
es
cld
pop
push
or
bnd
xor
testb
jns
xchg
ret
and
push
dec
aad
sub
enter
push
pushf
scas
jns
ret
notb
mov
jns
stc
xchg
movzwl
add
mov
pop
sub
aaa
out
pop
pop
adcb
push
mov
mov
mov
mov
push
inc
push
jecxz
insl
pop
je
mov
cmpsb
jo
mov
scas
popf
aaa
test
xor
sti
pop
and
outsb
rep
fucomip
and
in
or
movsl
lods
shl
lahf
xor
daa
push
dec
subl
lcall
xchg
push
mov
inc
cmp
imul
loop
daa
pop
sbb
mov
cmp
pushf
push
and
imul
popf
in
dec
fnsave
mov
enter
push
cmp
int
je
jbe
je
mov
sbb
sarl
movsb
lcall
or
xchg
in
jp
loop
stos
fldl
les
pop
lcall
enter
decb
gs
push
cld
jb,pn
das
push
push
sub
mov
sub
mov
xlat
jnp
sub
cmp
lock
iret
pop
jne
xchg
mov
call
push
push
fmulp
inc
rclb
pop
insb
add
lret
sarl
xor
aaa
gs
push
faddp
sbb
or
dec
es
cmpsl
add
xchg
and
cs
xchg
xlat
xor
add
pop
cmp
mov
repnz
ja
das
scas
sbb
dec
jg
nop
lcall
jg
add
sahf
icebp
xchg
gs
lock
mov
pop
pop
or
cli
scas
mov
and
mov
inc
movsl
lds
push
bound
sbb
add
cwtl
stos
iret
cmp
jge
mov
jb
mov
fnsave
mov
mov
cmpsl
push
mov
dec
out
enter
fstl
mov
dec
and
cmpsb
test
incl
pmulhuw
rolb
mov
sbb
sub
inc
iret
subl
mov
pop
mov
mov
mov
lods
mov
outsb
jns
add
test
stc
mov
loopne
lea
incl
add
add
add
add
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
mov
sub
out
popf
sarb
inc
jo
out
pushf
int
leave
imul
and
rorl
outsb
mov
jle
mov
mov
push
pop
imull
mov
mov
lret
push
xor
mov
in
orl
xor
gs
push
xor
jno
mov
cltd
or
mov
lock
mov
and
and
movsb
mov
inc
icebp
mov
mov
in
xor
mov
sbb
int3
loope
cltd
ljmp
stc
inc
and
outsb
jo
xchg
bound
mov
mov
leave
inc
movsb
out
push
pop
mov
dec
test
xchg
movsl
and
xchg
xchg
xchg
fildll
std
cmp
cli
lods
xor
push
mov
in
sbb
sbb
cmpsl
loope
mov
clc
mov
nop
push
bound
pcmpgtb
popa
rcll
mov
dec
push
dec
clc
push
je
cmc
cmp
aaa
mov
int3
or
and
jmp
jbe
jl
adc
scas
rcll
mov
daa
lret
fdivrs
cmpsl
cmp
xchg
sub
inc
ret
idivl
mov
push
adc
stos
inc
fldt
mov
lahf
cmpl
dec
sbb
inc
mov
adc
xor
test
ja
inc
imul
popf
mov
lods
scas
add
in
xor
mov
imul
mov
mov
fcoms
mov
rcrl
cmpsl
pop
cmp
mov
jl
or
cmp
cmp
outsb
dec
bound
jge
push
loop
mov
inc
cmp
loop
sti
mov
repz
jno
mov
inc
inc
cmp
or
dec
sti
out
fs
data16
stos
inc
ljmp
lock
inc
pop
mov
sbb
shlb
addr16
rcl
mov
push
jge
sbb
sub
out
pop
jbe
shrl
push
dec
fcompl
add
dec
jmp
mov
repnz
clc
fsts
cmp
push
test
jg,pn
inc
lcall
sbb
add
mov
andl
mov
imul
out
sub
adc
negl
pop
pushf
pop
mov
dec
xor
out
aaa
int3
dec
sti
xchg
jl
sbb
lock
mov
and
mov
fcoms
fldl
andb
pop
or
xchg
les
sub
add
mov
in
fsubs
fwait
push
pop
lcall
jmp
test
repz
jl
xor
shl
scas
push
and
inc
mov
pushf
stos
into
mov
aam
add
mov
es
xor
arpl
test
cld
and
mov
xor
pop
repz
imulb
mov
and
jp
sub
cmp
push
in
xor
mov
fs
popf
mov
or
add
imul
jo
nop
loope
test
jg
mov
call
ret
add
sub
mov
or
cwtl
and
xchg
lods
inc
dec
pusha
inc
sub
dec
inc
mov
rorb
xor
pusha
mov
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
pusha
or
sarb
xor
mov
cmp
mov
out
jecxz
shll
jp
scas
pop
out
mov
aaa
adc
loop
ficomps
cmp
cmp
and
call
ds
std
and
add
xchg
mov
pop
test
adc
sub
sbb
sarl
jb
push
xchg
aas
movsb
xor
inc
aas
jnp
aaa
sti
lods
aad
fdivl
fwait
dec
outsb
movsb
mov
xchg
and
pusha
adc
cmc
scas
mov
fsubrs
test
imul
mov
arpl
movsl
lds
jg
or
cld
adc
xchg
mov
movsl
mov
rcll
inc
insl
fsubr
gs
stos
dec
das
adc
arpl
imul
call
loopne
adc
ret
out
dec
pop
adc
xchg
pop
add
fmul
movsl
jne
fwait
mov
push
pop
mov
enter
add
push
loop
push
insl
sub
push
stos
sbb
loop
push
stc
mov
test
pushf
dec
fs
cmp
pop
xor
lret
es
idivb
sub
mov
scas
xchg
das
sbb
pop
imul
xor
mov
mov
pop
push
sbb
cltd
rcll
sbb
pushf
sahf
stc
imul
imul
cmp
js
mov
ss
dec
stc
xchg
and
mov
stos
mov
add
rcr
movsl
cltd
push
xchg
ljmp
mov
adcb
loop
pop
jne
mov
and
mov
gs
mov
int
dec
pusha
notb
xchg
pop
repz
fwait
imul
sti
inc
xchg
push
stos
xchg
xchg
repz
jno
loop
js
xchg
sbb
and
cmp
sbb
pusha
push
icebp
lds
imul
adc
lea
fldl2t
push
dec
jecxz
adc
xchg
jns
jecxz
mov
loop
jp
sub
ret
pop
gs
inc
pop
jno
fcoms
mov
fimuls
in
aas
test
stos
sub
notb
pop
sub
jmp
mov
addr16
xchg
add
add
adc
push
pop
cmp
jl
jnp
out
aaa
adcl
int3
mov
mov
xchg
sbb
loopne
xor
mov
dec
xchg
cmp
dec
dec
bound
pop
sbb
lcall
mov
or
or
jmp
gs
es
fildll
call
dec
mov
xorl
xor
xchg
pop
arpl
push
mov
adc
mov
inc
add
dec
in
testl
push
sub
fsubrs
lds
data16
in
scas
jge
push
ljmp
adc
jbe
gs
add
rolb
jl
mov
xchg
push
repz
lods
adc
cwtl
cmp
push
aam
sti
mov
inc
and
mov
xchg
mov
adc
movsl
icebp
push
pop
xchg
flds
in
and
testl
push
adc
mov
and
insl
push
repnz
enter
xchg
loope
cltd
push
test
cmpsl
mov
fdivrs
mov
push
push
xor
sub
jmp
leave
test
aas
out
in
lahf
repnz
popa
cmp
test
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
rolb
mov
jecxz
or
ficoms
leave
stos
or
push
pop
push
lcall
flds
add
mov
sbb
jno
stc
inc
lret
repz
pop
daa
xchg
out
inc
rcl
and
cs
cmp
out
pusha
ja
xlat
addr16
mov
jge
fs
idiv
lret
jbe
jmp
mov
sbb
outsl
popa
mov
mov
hlt
inc
push
mov
nop
push
lea
das
push
sti
ss
aas
push
jle
imul
sub
ds
or
mov
hlt
mov
cmp
xor
daa
fnsave
cmp
pop
mov
shlb
mov
mov
idivb
add
or
dec
test
and
dec
xchg
adc
sub
jb,pn
pop
sti
pop
cmpsb
or
inc
pop
mov
dec
jp
les
icebp
jl
mov
xor
pop
mov
add
sub
dec
adc
pop
jo
daa
scas
mov
testb
mov
sbb
test
push
mov
movsl
aaa
aas
rcrl
mov
adcb
jle
hlt
ficoms
scas
push
cmp
and
call
jno
inc
dec
rcl
xor
lock
leave
out
add
es
fwait
ds
shr
cmc
push
cmp
mov
push
mov
cltd
pop
xchg
xor
aam
negl
xor
in
imul
stos
add
out
dec
jecxz
out
jecxz
mov
xchg
mov
cli
rcll
cmp
filds
outsb
test
lahf
lcall
cmp
adc
cmpsb
shl
fistps
in
inc
aad
mov
add
cmp
push
pop
sahf
ret
test
aaa
imul
jns
pushf
push
fisubl
lds
or
lods
addr16
sarb
mov
push
mov
fidivl
sub
inc
and
cmc
mov
ret
adc
add
jmp
out
dec
add
bound
adc
and
sbb
pop
pop
dec
out
sub
rcll
or
xchg
cwtl
mov
push
lea
or
cmp
and
sbb
mov
push
out
jns
dec
loop
mov
pop
push
mov
movsl
adc
sub
sub
add
icebp
xchg
dec
fdivs
and
cltd
pop
pop
cmpsb
repnz
mov
cmp
jns
jb
mov
adc
sbb
mov
fs
das
mov
sbbl
mov
xchg
mov
outsl
ja
ret
mov
int
stc
jns
fimull
xor
gs
popf
jp
xchg
cltd
inc
pusha
shrl
jmp
mov
fsubs
dec
dec
inc
je
or
scas
outsl
out
cmp
mov
sbb
sbb
inc
pop
mov
push
mov
out
add
mov
adc
mov
xchg
sahf
adc
sub
mov
cmp
sbb
leave
jecxz
cmp
repz
jne
cmp
dec
clc
ret
push
mov
xchg
push
dec
into
lret
jge
inc
jmp
push
test
lods
outsb
pop
icebp
push
mov
sbb
jb
sbb
sub
por
pop
cwtl
das
xor
sbb
je
sub
lock
dec
jne
out
add
aad
push
xchg
movsb
fisubs
out
mov
pusha
fwait
pusha
or
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
sub
and
dec
les
mov
sub
or
jl
cmp
push
xor
cmc
jb
pop
add
cwtl
or
inc
pop
mov
inc
sub
ret
sarb
rol
iret
arpl
sub
adc
mov
out
out
ds
inc
xchg
cmp
rcll
scas
xchg
push
push
bnd
pop
mov
adc
sbb
dec
sti
sbb
cmp
add
mov
pusha
es
ror
push
sub
gs
fdivrp
out
test
add
cltd
cmp
iret
and
cmp
movsl
cmp
call
fisubrl
xor
sub
xor
xchg
adc
jmp
hlt
jmp
mov
loop
jne
mov
mov
push
syscall
loope
xor
orl
sarl
push
cmp
jl
addr16
pop
and
jo
es
cmp
mov
call
int
or
add
pusha
sub
ljmp
xor
aad
je
and
jecxz
ljmp
fistpl
in
or
add
pop
jecxz
xor
mov
dec
or
xor
cli
stc
rol
cmpsl
icebp
or
add
xorl
mov
pop
push
and
jge
push
shll
xor
dec
xorb
push
ja
outsl
mov
nop
stos
mov
pop
rcl
clc
jb
lcall
mov
inc
or
add
rcrl
cltd
pop
dec
jo
dec
and
dec
mov
dec
ret
int3
sub
adc
cmpb
pop
and
push
outsl
jmp
fcmovnbe
or
jbe
fisttps
dec
fisttpll
inc
adc
push
outsb
mov
mulb
mov
out
cmp
sbb
and
dec
xchg
mov
cltd
cmp
daa
enter
jns
lahf
rcrb
movsl
dec
nop
dec
setns
mov
xchg
mov
insb
fnstsw
lods
fsubr
int3
push
mov
add
loop
mov
enter
pop
outsb
sub
inc
pop
les
fucom
push
pop
mov
xchg
mov
out
inc
scas
cmp
jnp
rorl
ja
repnz
and
mov
xor
mov
or
push
fstl
pop
call
js
ss
cmp
dec
arpl
mov
jmp
addr16
sarl
cwtl
cmc
setle
out
repz
jae
push
sub
mov
add
dec
xchg
mov
or
mov
sarb
jp
mov
adc
aas
xchg
jns
xor
jo
cmp
jo
ficoms
push
aaa
pop
jp
sbb
call
out
cmc
outsl
push
fwait
cmp
sub
in
add
jne
int
cmp
xor
push
rcll
aaa
or
aam
daa
cwtl
sbb
pop
pop
or
mov
jecxz
fnstcw
lahf
fisubl
out
push
movsb
movsl
lds
mov
xchg
lea
xor
push
cmp
out
fwait
add
fcmovbe
cmp
lds
xchg
fbstp
dec
sub
lcall
outsl
jecxz
cltd
pop
outsb
xlat
in
roll
mov
repz
xor
fiaddl
mov
mov
mov
mov
movsb
pop
ret
cmp
bound
leave
ficoml
xchg
lret
and
xor
xorb
jl
pop
test
lea
mov
js
and
bnd
ds
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
xor
sarb
inc
xchg
ret
ret
and
mov
cmp
mov
or
out
int3
dec
ljmp
pop
gs
aaa
mov
dec
adc
pop
mov
xor
in
cmp
cs
arpl
scas
or
push
data16
test
gs
mov
adc
loope
mov
mov
pop
inc
lcall
test
arpl
dec
fucomp
shll
pop
pop
minps
inc
rclb
imul
fwait
out
sbb
andb
int
inc
and
cmp
push
push
popa
dec
int3
lea
push
cwtl
jmp
push
das
inc
inc
clc
ljmp
je
sub
fimull
or
movsl
inc
xchg
cli
cmpsl
out
in
fst
icebp
lods
mov
add
or
pushf
mov
dec
shll
test
das
sub
mov
mov
in
cmpsb
stos
lods
lods
dec
pop
add
inc
push
mov
push
int3
dec
push
mov
xlat
mov
push
mov
ljmp
push
jmp
jge
sub
mov
push
cmp
shr
int3
and
gs
inc
sub
xor
pop
cmp
or
fcoml
lret
mov
add
jbe
mov
inc
pop
in
sbb
inc
pusha
mov
add
push
xor
mov
jge
imul
jge
cltd
nop
loope
les
dec
mov
out
cmp
dec
cli
adc
aaa
sarb
roll
fisttps
or
sbb
sub
es
jns
or
dec
jb
pop
dec
stos
int
mov
pop
sti
xlat
mov
lret
and
push
add
in
mov
sub
outsb
xor
cmp
add
mov
stos
sahf
sbb
loope
std
fsubrs
inc
push
sub
iret
dec
mov
mov
add
or
call
mov
js
cmp
aaa
pop
mov
mov
in
adc
pushf
and
lea
cmp
movsl
mulb
inc
lea
scas
mov
adc
outsb
lea
dec
loope
add
frstor
mov
xchg
push
popa
outsb
movsl
cmp
scas
jecxz
ds
jp
mov
cmp
xchg
lock
or
ss
sub
cmp
jne
loop
icebp
mov
cmpsb
adc
fildl
popa
jp
push
test
call
leave
jmp
dec
jns
shl
mov
fwait
mov
lcall
cmp
cmpsl
xchg
call
test
icebp
adc
add
mov
movsl
mov
mov
pop
ljmp
jno
lahf
inc
push
mov
fdiv
inc
cltd
push
adc
or
push
mov
mov
inc
sbb
les
pusha
loop
mov
stos
xor
stos
fs
or
xor
xchg
cmpb
sub
rclb
orb
shlb
push
xchg
jnp
in
pop
cli
fistpll
scas
or
jmp
push
sub
daa
std
ss
shlb
loopne
neg
dec
icebp
mov
cmp
sub
mov
aad
je
or
mov
std
sbbb
mov
and
or
mov
fildll
push
inc
out
pop
and
push
sub
xchg
cltd
fs
clc
aas
xor
loop
lods
dec
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
pop
neg
jecxz
rol
dec
les
xchg
mov
mov
gs
stos
jb
lahf
shll
mov
xor
pushf
std
call
xor
shl
fldcw
jecxz
mov
jbe
pop
dec
cmp
dec
push
push
xchg
cmpsb
fsubs
jge
jbe
popa
out
sub
call
mov
dec
flds
mov
mov
dec
sarb
mov
pop
xchg
inc
sub
imul
jno
int
mov
inc
xchg
push
je
mov
daa
rcrl
sbb
outsb
mov
and
mov
daa
pop
mov
mov
push
adc
mov
cmp
and
mov
mov
sar
mov
jb
fwait
pop
inc
fbld
mov
imul
addr16
mov
adc
or
dec
fsubs
sub
xlat
mov
adc
aad
imul
dec
cmp
cld
fwait
popa
or
and
sarb
icebp
pushf
repz
shl
outsb
sub
and
test
pop
ljmp
inc
or
push
out
jle
jae
rorb
ja
pop
inc
ljmp
pop
add
mov
lea
pusha
icebp
mov
mov
pop
cmp
xor
push
cmpsl
call
sbb
mov
mov
mov
loope
mov
xchg
xchg
jge
mov
pop
movb
mov
les
inc
fnstenv
cld
inc
mov
gs
imul
pop
sahf
push
mov
rol
pop
cmp
aam
jmp
pop
adc
stc
push
ret
cld
call
pop
push
sub
fs
cmpsb
adc
lea
jo
dec
std
push
dec
cmpsl
push
scas
lods
stos
inc
call
mov
mov
push
shll
es
push
mov
ret
lods
rclb
sub
jne
pop
pop
and
xor
loopne
push
int
inc
movsb
or
mov
xchg
js
xor
mov
xor
lock
insb
lods
mov
movsb
mov
sahf
scas
fstpt
scas
jae
cmp
out
es
cmp
mov
addb
mov
jp
lahf
add
cmp
sbb
mov
gs
scas
jae
scas
ret
jle
xor
cwtl
push
popa
adc
in
cmp
in
test
xor
mov
and
pop
cmp
lds
xlat
sub
pop
cmp
repz
popl
dec
ja
cmp
and
loop
outsl
sbb
les
push
jns
roll
mov
adc
sub
fidivrs
inc
push
push
fcmovne
or
sub
add
jecxz
pop
inc
dec
mov
mov
add
testb
pop
cmc
or
popf
call
imul
sbb
popl
lock
rorb
repnz
in
lods
sbb
xchg
add
jb
sub
rclb
fwait
cli
fmuls
add
and
fldenv
jl
and
das
jo
mov
sahf
ja
mov
push
cmpsb
call
xchg
or
movsl
and
push
cmp
lds
sbb
mov
outsl
mov
inc
sbb
dec
and
cmp
pop
adc
dec
xor
mov
mov
pop
mov
mov
mov
lds
test
shl
sbb
lods
test
sub
mov
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
movsb
cmp
sarb
loopne
inc
and
adc
mov
aam
mov
pop
sub
xchg
and
popl
popa
ss
add
add
imul
ljmp
jne
add
cmc
mov
lcall
in
aad
add
adc
mov
cmpsl
lods
xchg
jb
push
out
rcrb
out
adc
mov
xchg
leave
repnz
call
imul
mov
popa
mov
jbe
cltd
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
int3
and
add
gs
arpl
push
outsl
inc
jne
jae
jb
push
and
add
add
add
adc
inc
add
sub
shlb
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
andb
add
inc
add
inc
add
jle
add
addl
or
inc
add
add
inc
add
sub
fsubl
inc
add
push
movsl
scas
or
inc
add
inc
add
add
inc
add
inc
add
daa
inc
add
add
daa
inc
add
daa
inc
add
sub
scas
fwait
push
movsl
cmp
mov
add
inc
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addl
ja
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
je
inc
add
inc
add
push
movsl
cmp
xlat
movsl
dec
add
jo
inc
add
inc
sbb
hlt
stc
sarb
inc
pop
jg
add
add
add
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
gs
inc
add
daa
inc
add
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
add
test
or
test
adc
test
sbb
test
and
test
sub
test
arpl
adc
push
xor
add
add
aaa
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
xor
test
cmp
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
add
jle
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
mov
inc
add
test
roll
leave
test
int
inc
add
test
aad
inc
add
test
fldl
add
test
jmp
test
icebp
test
xlat
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
xor
test
cmp
test
inc
test
dec
test
dec
test
push
test
push
test
pop
test
pop
test
popa
test
test
imul
inc
sub
mov
add
add
xor
add
add
add
add
add
add
add
adc
add
add
add
add
add
push
mov
add
mov
add
add
pop
mov
add
add
jle
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
add
adc
add
mov
add
mov
add
add
add
pusha
mov
add
add
orb
add
mov
add
add
fimull
add
clc
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
add
mov
add
test
add
rorb
add
hlt
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
outsb
mov
add
mov
add
add
les
add
mov
add
mov
add
lea
add
add
lea
add
add
push
lea
add
add
jp
add
xchg
add
mov
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
and
add
xor
add
push
mov
add
add
jp
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
adc
add
inc
popl
add
add
popl
add
add
mov
add
mov
popl
add
popl
add
popl
add
popl
add
nop
add
sbb
add
cmp
add
bound
add
xchg
nop
add
cmpsb
nop
add
mov
nop
add
ficoms
add
cld
nop
add
or
add
cs
add
ds
add
dec
xchg
add
pusha
xchg
add
outsb
xchg
add
jp
add
mov
add
mov
add
xchg
add
rclb
add
in
xchg
add
cli
xchg
add
push
xchg
add
sbb
add
cmp
add
pop
xchg
add
outsb
xchg
add
add
add
xchg
add
cmpsb
xchg
add
mov
xchg
add
loop
add
cld
xchg
add
or
add
push
xchg
add
sub
add
push
xchg
add
pusha
xchg
add
jo
add
adcb
add
xchg
add
ret
add
xchg
add
in
xchg
add
add
add
xchg
add
xor
add
inc
xchg
add
bound
add
xchg
add
mov
add
lret
add
xchg
add
lock
add
add
add
and
add
inc
xchg
add
push
xchg
add
insb
xchg
add
jl
add
xchg
xchg
add
pushf
xchg
add
scas
xchg
add
mov
xchg
add
loop
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
and
add
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
