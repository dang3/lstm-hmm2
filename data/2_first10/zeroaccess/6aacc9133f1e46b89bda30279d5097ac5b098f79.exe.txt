push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
rclb
int3
adc
jle
xorb
into
xor
xor
ja
or
jae
bswap
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
into
xor
rcrb
inc
imull
xor
es
ficompl
push
pop
mov
jl
shl
ja
aaa
mov
int
shrl
imul
mov
call
sbb
pop
pop
adc
pushf
nop
mov
lods
mov
jmp
jae
push
test
jnp
movsb
and
xchg
fidivrl
dec
xchg
mov
xor
jo
add
clc
jmp
dec
out
into
mulb
cltd
mov
test
out
into
mov
fwait
xchg
mov
shr
mov
notl
enter
jge
sbb
mov
and
pop
stos
es
addl
sub
pushl
ds
pop
and
pusha
outsb
dec
xor
pushf
loopne
out
fdivrs
pop
inc
cli
leave
es
shlb
and
stos
push
ss
and
movsb
pushf
jae
push
pop
cmp
shrl
arpl
cltd
and
xor
dec
mov
sbb
and
inc
sub
lock
or
pushf
cli
movsb
mov
sub
cmp
shll
iret
rol
mov
cli
in
shll
aaa
int
dec
cmpb
fstpt
adc
cltd
sbb
jnp
lahf
jmp
jb
in
data16
fbstp
mov
push
cmp
inc
mov
cmp
scas
lret
or
xor
les
pop
int3
cltd
dec
gs
lea
mov
movsb
sub
aam
cli
jge
mov
test
cld
add
pushf
push
sbb
jmp
or
xchg
out
pop
mov
add
cltd
lret
sbb
cmp
repnz
test
mov
fildll
in
imul
mov
adcl
sarl
iret
lret
popa
mov
jne
aaa
js
adc
out
jle
xchg
shll
outsb
adc
add
mov
cmc
fisubl
xchg
or
mov
sbb
sarb
scas
sbb
scas
fisubl
cmp
popa
inc
lods
sbb
xchg
add
imul
jae
dec
ja
in
mov
mov
imul
push
cmpsb
je
insb
sbbb
out
jp
je
dec
daa
test
pop
shll
out
sbb
inc
or
add
mov
xchg
xchg
ficompl
cltd
ret
loop
mov
fdivrl
scas
mov
and
pop
sarl
daa
mov
lcall
xor
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
pop
adc
jle
jno
jle
jo
mov
orb
sub
xor
jle
xchg
cmp
mov
adc
cli
push
ss
mov
lock
ds
cmc
dec
es
jge
adc
xor
lods
inc
jge
adc
sahf
fidivrl
fstpt
adcb
or
stos
fcmovu
jle
jae
aas
xchg
mov
in
xor
addr16
mov
pusha
xor
xchg
lret
xchg
pmuludq
jne
clc
mov
jne
scas
inc
xlat
popf
in
jae
mov
pop
outsl
enter
or
cltd
nop
jae
arpl
aas
push
push
mov
inc
das
pop
pop
sub
pop
jnp
mov
mov
lcall
loop
pop
in
sub
insb
mov
push
bound
mov
call
dec
xlat
test
and
out
stos
mov
xor
cmp
loope
pop
jp
mov
sbb
xchg
es
pop
xor
cmpsb
pop
mov
out
sahf
adc
mov
or
xor
fwait
pusha
sub
mov
mov
pop
mov
shlb
mov
pop
and
adc
mov
leave
loopne
mov
pop
xchg
xchg
mov
cmp
push
subl
enter
fsubrl
jecxz
xchg
jge
dec
shl
out
test
in
imul
scas
adc
xor
leave
icebp
enter
pop
jl
jns
and
and
inc
mov
push
and
xchg
dec
sbb
cmp
push
push
pop
out
xchg
fists
daa
fwait
xor
nop
inc
xchg
cmp
stos
cmc
rep
mov
xchg
repnz
int3
and
out
or
lds
aam
cmp
iret
pushf
mov
sub
popf
aaa
pop
or
xor
arpl
test
ret
negl
xchg
popf
lret
lods
imul
loopne
aam
imul
xor
lds
mov
loopne
xchg
loope
popa
fildll
add
xchg
ret
in
insb
pop
mov
fidivl
dec
lret
incl
and
mov
es
xchg
sub
xchg
and
mov
xchg
mov
sbbb
dec
mov
std
je
pop
lret
cmpl
cmp
scas
or
fdivrl
lods
cld
les
xchg
mov
and
aas
out
sti
xor
pusha
rcl
sbb
test
in
ret
mov
ss
lock
cld
mov
jg
cmp
xchg
cmp
inc
les
add
cmpsl
inc
fildl
cmpsb
cmp
xchg
out
out
mov
adc
fisttps
decl
cmp
xor
mov
mov
pop
lret
movb
mov
cmp
sbbl
jl
or
andl
cltd
int
movsl
mov
rcrl
out
inc
es
push
cmpsl
sub
dec
test
hlt
jge
adc
out
adc
lods
sub
fs
cmp
dec
aaa
xor
jg
int
setle
inc
orl
push
aaa
popf
out
dec
jb
xor
mov
adc
pop
jae
push
pop
cmc
sti
xor
je
cmp
dec
faddl
adcl
pop
data16
push
add
adc
push
and
pop
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
push
dec
mov
jle
jno
jle
cmpb
and
cmp
out
pop
je
jno
add
imul
mov
enter
add
push
add
add
fistpll
xor
shll
pop
sbb
sub
leave
ret
daa
or
sub
mov
xchg
push
jecxz
call
pop
mov
test
ret
les
xor
mov
cs
loop
adc
mov
pop
push
mov
daa
jmp
aam
pop
mov
in
xchg
stc
mov
jecxz
dec
lea
fwait
add
dec
inc
or
cmpsl
outsb
add
insw
insl
lock
add
outsb
scas
das
and
leave
leave
testl
leave
aaa
outsl
mov
jg
cmp
push
jnp
and
aam
jge
mov
rcrl
jnp
dec
fstps
cmp
jg
mov
lock
aaa
mov
dec
arpl
movsb
out
mov
jle
mov
mov
sub
ja
mov
inc
jb
popf
cld
mov
adc
xor
sub
je
lods
cmp
pop
ret
adc
mov
inc
lahf
push
test
bound
hlt
pop
insb
or
int
das
jle
lcall
xor
add
addb
xchg
testb
xchg
add
mov
lock
add
pop
sub
xchg
cld
xorb
aaa
fsubl
lahf
scas
ja
nop
sbb
add
shl
sub
inc
cmp
ret
lods
inc
js
inc
and
in
fcompl
mov
sbb
movsl
and
sahf
xchg
xlat
mov
mov
call
aam
xchg
sbb
dec
mov
cli
std
xchg
or
jnp
xchg
iret
les
add
sbb
sbb
mov
jle
sbb
js
push
xor
or
mov
mov
into
loopne
call
pop
cmpsb
fldl
insb
sub
cwtl
dec
sbb
out
cmp
inc
mov
sub
add
pop
jg
pop
pop
adc
or
dec
inc
inc
cmp
in
cmp
into
jmp
and
out
insb
push
xor
xchg
dec
dec
xchg
arpl
mov
mov
jmp
fldl
adc
jmp
rcll
sahf
std
add
mov
jae
add
push
enter
and
adc
sbb
call
arpl
lods
push
pusha
jmp
cmp
mov
push
imul
arpl
add
ss
xchg
in
inc
sub
jns
out
pusha
sub
dec
xlat
inc
lods
sarb
xchg
jb
sti
add
aam
push
push
hlt
sbb
mov
out
loop
inc
jg
jnp
cltd
out
loope
aam
xchg
inc
inc
fwait
jnp
and
push
pop
stos
imul
enter
in
iret
inc
cmp
lods
jb
add
xor
outsl
adc
mov
addb
dec
cmpsb
scas
mov
ja
fstl
outsb
dec
lods
div
movl
jmp
pop
nop
jl
jge
and
jns
dec
cltd
fidivrs
jno
jle
test
xchg
mov
sbb
adc
push
movsl
aas
sbb
and
push
je
jg
mov
fwait
push
ja
fnsetpm(287
mul
push
sbb
inc
sbb
xchg
fsubrl
xor
and
jns
push
mov
lret
inc
add
call
push
push
lods
mov
cltd
inc
vmwrite
aad
push
pop
cmp
pop
fcmovnu
imul
fnstcw
sub
jbe
xchg
or
push
jno
pusha
push
fsubrl
cmp
mov
test
adcl
inc
shlb
in
clc
iret
cwtl
lock
dec
add
xchg
jmp
aaa
jle
xor
add
sbb
jp
dec
xchg
stc
sub
push
pop
and
lea
adc
pusha
jbe
jb
xlat
pop
rcr
cs
lret
in
push
fwait
jmp
or
movsb
test
neg
stos
maskmovq
xor
mov
sbb
jp
out
mov
test
mov
subb
cmc
shrl
mov
mov
lods
stc
pop
push
push
lcall
rorl
call
and
push
or
mov
lcall
jbe
subb
hlt
stos
xor
das
fimuls
mov
cmc
sbb
mov
shlb
dec
icebp
pop
leave
dec
push
and
pushl
out
sub
loop
jb
aad
aam
jns
jl
js
fldcw
and
jmp
jns
into
fisubl
xor
inc
hlt
add
mov
fstl
or
jecxz
stos
ja
bound
or
jo
mov
mov
jae
xchg
pop
xor
jo
xchg
imull
das
lods
pop
movsl
and
or
mov
xchg
fsts
or
insb
pop
jp
out
test
pop
sub
add
out
in
sahf
not
std
mov
jo
das
fisubl
mov
in
dec
lods
das
mov
mov
inc
pop
xlat
hlt
sbb
pop
mov
sbb
fcomps
aam
ljmp
js
andb
out
add
or
push
jno,pn
int
dec
repnz
enter
jle
push
jg
adc
sub
pop
out
jno
lods
hlt
add
push
add
mov
popf
in
les
sub
mov
xor
mov
cmp
shrd
cmpsb
dec
and
stos
lahf
inc
fists
sub
rol
pop
test
out
inc
or
xor
jmp
ficomps
cmp
xor
divb
jno
add
insb
dec
sbb
mov
pop
bound
fiaddl
mov
fld
movsb
xchg
add
and
insl
jmp
and
shrb
pop
mov
pop
cmc
sahf
xchg
int
sub
adc
jbe
or
ret
mov
leave
cmp
test
pop
jae
inc
mov
inc
jg
fwait
in
subb
test
pop
and
adc
adc
adc
inc
fstps
pushf
jae
inc
pop
cmp
loopne
inc
aam
dec
add
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
ds
mov
lret
notl
out
in
jno
pop
xchg
popl
fcoml
addl
lods
cmc
pop
mov
or
outsl
push
sbb
test
fidivl
push
dec
or
mov
outsl
mov
imul
xchg
or
mov
sbb
sbb
mov
addl
inc
pop
mov
roll
pushf
fcmove
cmpsb
add
jp
xchg
xorl
outsl
stos
xchg
incb
sub
mov
mov
jmp
stos
push
mov
inc
mov
and
xchg
pop
jp
fucomp
shlb
push
and
fcmovnb
mov
add
jns
jnp
and
xor
push
leave
fcompl
push
lock
push
iret
jns
inc
jae
xor
xor
fsubrp
divb
adc
jbe
stos
xor
xchg
push
inc
rol
test
cli
mov
mov
push
fdiv
fs
mov
scas
sbb
out
fcomps
and
mov
cmp
or
cmp
in
subb
sub
or
sbb
xor
cmpsl
sahf
ds
aad
pop
divb
xchg
out
sti
mov
dec
cwtl
ss
mov
out
mov
fidivrl
inc
adc
lods
sub
test
push
xchg
lahf
jge
popf
cld
xor
xlat
mov
sbb
lock
inc
ret
in
or
lds
xorb
cmp
ret
lret
leave
sub
pop
test
shl
push
das
mov
fnstcw
jl
test
faddl
les
xor
cmp
jae
ljmp
and
push
sbb
mov
jmp
cld
mov
lret
pushf
inc
es
cld
pop
and
cmpsl
cmpb
rclb
leave
lret
pop
es
outsb
inc
jb
daa
repnz
jb
dec
add
icebp
jb
sbb
aad
mov
pop
add
pop
in
je
dec
dec
loopne
mov
int
xor
and
ss
cmpsl
inc
cmp
dec
scas
call
cltd
xor
ja
pop
jae
sbb
sar
or
xor
jo
sbbb
pop
aam
pop
xor
xor
out
cwtl
mov
sub
push
cwtl
cmpl
filds
lea
pop
fld
dec
xchg
pop
shll
aad
fcmovnu
pop
xchg
push
dec
sahf
insb
sbb
sbb
int3
cmp
bnd
popf
pushf
int3
xchg
loopne
insb
jb
dec
and
mov
movsl
popf
arpl
imul
inc
xchg
mov
jne
add
mov
in
addr16
fidivs
add
cmpsb
cmpsl
fs
mov
je
outsl
and
lahf
out
clc
jecxz
arpl
pop
and
test
mov
mov
adc
repnz
daa
inc
xchg
push
sti
inc
xchg
cwtl
mov
push
jne
insb
add
jle
cwtl
mov
movl
pop
nop
jecxz
es
sahf
jae
sub
out
pop
pushf
jle
andb
pushf
xchg
jo
lea
test
inc
push
inc
add
add
add
add
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
push
mov
jle
xorb
xchg
push
pop
loop
or
aaa
adc
in
test
xchg
jbe
push
dec
xchg
jne
jo
adc
lret
mov
xchg
push
cli
enter
push
xchg
add
sub
je
inc
iret
dec
dec
fisttps
jle
aam
mov
sbb
aaa
mov
inc
insb
stc
test
push
pop
dec
mov
add
mov
icebp
xor
cmp
add
iret
iret
popf
sbb
push
xor
jb
mov
shll
pushf
mov
pushf
mov
in
stos
mov
cltd
add
lods
or
fistpl
xchg
bound
lds
add
mov
lret
ljmp
dec
in
mov
xor
jo
rorl
mov
dec
xor
fmul
add
lods
stos
daa
in
add
sbb
xchg
lret
sbb
lahf
popf
subl
jns
mov
cmpl
push
dec
pop
adc
mov
xchg
cli
xchg
mov
sti
xchg
loop
divl
jp
inc
mov
in
jmp
data16
mov
push
jo
arpl
mov
notb
repz
pop
notb
pop
jl
addr16
xchg
xor
in
adc
insl
jnp
arpl
lret
sub
test
jmp
imul
mov
mov
lret
and
fs
repz
add
lcall
mov
lea
stos
int3
bound
jne
xor
add
add
jecxz
sbb
adc
cltd
cmp
lea
push
ss
jmp
and
leave
inc
inc
cmp
and
add
popf
mov
lods
popf
dec
fsubs
test
pop
stos
fcoms
dec
and
das
ficoms
rcrl
xor
fistl
push
lcall
inc
pop
jl
cwtl
out
cmp
hlt
pushf
or
mov
bound
pusha
xchg
out
pop
out
syscall
dec
adc
mov
fisttpll
shll
inc
mov
hlt
mov
jecxz
push
jno
cld
mov
jle
xor
fwait
test
mov
mov
sub
sahf
test
cmpsb
aad
sbb
adc
adcb
and
mov
or
xchg
push
dec
inc
jne
xlat
loop
adc
dec
rcll
ds
aad
push
cld
inc
dec
jle
js
add
fcmovne
cmp
mov
push
aad
push
fadds
icebp
mov
out
cwtl
pushf
xchg
movsb
jle
in
sbb
inc
insl
dec
mov
cmp
addr16
mov
dec
inc
int
bound
test
adc
add
loopne
aam
aas
jge
mov
int
adc
adc
jecxz
pop
insb
lahf
in
sub
mov
ja
int
test
test
fistps
jg
lret
and
lret
mov
dec
adc
lret
int3
pop
inc
sbb
mov
cmp
in
dec
adc
cmpl
fiaddl
sbb
popa
in
mov
mov
cmp
pop
movsb
fwait
mov
add
pop
inc
sub
repz
pop
daa
or
insl
cmpsl
mov
hlt
clc
rolb
xor
pop
fdivrs
jb
jno
jg
lods
cmpsb
in
jne
push
and
pusha
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
into
adc
jle
xorb
movsb
xchg
cmp
mov
xor
jmp
pop
push
std
jnp
sbb
jg
and
and
lods
or
jae
insl
cmpsl
push
repz
out
push
ds
cmc
xor
dec
fmul
jno
out
and
and
xchg
sub
cmp
stc
ret
addb
ljmp
clc
jno
sub
sub
dec
repnz
or
sti
inc
mov
xor
mov
ret
add
add
jmp
mov
std
jo
int3
ljmp
scas
jnp
fnstsw
mov
mov
or
push
xchg
mov
imul
add
mov
xchg
test
icebp
sbb
adc
in
mov
lahf
js
xchg
addr16
jl
mov
les
out
call
pop
inc
mov
add
push
jne
dec
xor
aas
mov
clc
cs
adc
hlt
in
push
dec
xchg
aaa
add
lret
popf
adc
je
push
rolb
popa
lret
inc
pop
add
loope
call
adc
dec
mov
cmc
js
mov
mov
jo
aam
mov
push
mov
stos
imul
pop
dec
jecxz
push
xchg
adc
pop
and
dec
les
lock
lods
sub
adc
clc
cmpsl
inc
jecxz
data16
iret
ret
cmp
xor
iret
sbb
xchg
xlat
push
test
ds
sub
adc
sub
int3
add
adc
mov
lods
int
pop
mov
sbbb
rclb
add
in
cmpsb
mov
sub
fiaddl
ret
jae
sub
sbbb
jecxz
jo
negb
ficoms
mov
divb
xchg
pop
xchg
cmp
jo
mov
stc
or
mov
adc
lods
data16
add
sub
xor
pop
add
sbb
mov
xor
stc
daa
sbb
add
lods
fadds
ret
fwait
mov
ficomps
fwait
call
sarb
xchg
push
cmp
pop
sub
push
xor
mov
or
sub
cs
push
cld
iret
fmull
inc
pop
adc
mov
push
stos
les
test
scas
mov
mov
add
or
lds
fstpt
insl
insl
and
sti
movsb
push
nop
test
add
add
popa
adc
mov
imul
xor
pusha
cmp
xchg
adc
rcll
add
pop
adc
mov
inc
inc
aas
rcll
push
inc
test
mov
in
push
stc
inc
shlb
inc
aad
je
jle
xor
lret
inc
loop
clc
mov
dec
fadd
es
rcrb
lret
xchg
sbbl
xchg
hlt
pop
in
popf
mov
and
push
cli
add
setle
rol
push
scas
mov
xor
push
mov
lret
stc
test
mov
insb
fcoml
jns
mov
mov
push
repz
aad
jg
cli
and
pop
std
pop
xlat
adc
cmp
cwtl
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
pop
lods
mov
jle
jno
jle
cld
clc
std
sbb
cmp
scas
sub
mov
sbb
mov
ret
scas
cwtl
xchg
shl
hlt
mov
pop
and
mov
popa
es
inc
inc
imul
or
jle
sbb
in
xchg
popa
in
sbb
add
xchg
mov
and
xor
fcoms
push
shlb
outsl
hlt
mov
jo
enter
dec
aam
sahf
cmpsb
stos
and
daa
and
push
div
int
out
gs
std
add
outsb
mov
add
sbb
mov
push
lods
sub
stos
and
std
jecxz
mov
rcrl
out
sub
dec
or
and
push
les
inc
inc
loope
pop
pop
in
out
arpl
lods
and
cld
das
fld
pop
loopne
dec
outsl
loopne
in
imul
aad
jmp
fsubs
loope
fisubs
xchg
xor
cmpsb
or
and
dec
inc
inc
repnz
push
and
dec
hlt
lea
aas
and
mov
mov
imul
imul
inc
nop
cmp
test
pushf
cmc
pushf
aas
je
jb
sarb
inc
out
int3
pop
and
icebp
push
decl
shlb
mov
sub
sub
ret
mov
iret
dec
call
mov
mov
pusha
iret
sbb
jge
inc
mov
lahf
adc
push
push
ret
test
int3
popa
or
jns
outsl
movsl
cmp
and
sub
xchg
sub
das
and
sub
outsl
test
cmp
loope
cltd
cmpsb
bound
movsb
fcompl
mov
sbb
and
lret
xchg
dec
jne
xlat
sarb
ret
mov
mov
movsb
cltd
imul
add
push
and
mov
sub
ror
nop
lock
xchg
add
insl
pop
or
outsl
es
aam
mov
sub
pop
sub
cmpsl
inc
jl
loopne
sub
sbb
lea
xchg
ds
sti
mov
xchg
xlat
addr16
lods
gs
sbbb
xchg
jl
mov
jae
into
mov
std
push
push
outsl
add
mov
cmp
movsb
arpl
pslld
push
lds
mov
push
add
popa
push
xor
lock
push
aad
push
adc
sub
lods
adc
jno
mov
fsubs
cmp
add
scas
and
int
pop
mov
adc
xor
pop
jnp
lahf
bswap
adc
adc
adc
shl
rorl
sbb
dec
ret
inc
shlb
add
push
daa
dec
pop
pop
cwtl
mov
popf
into
aas
notl
adc
test
test
jmp
cmp
xchg
dec
aaa
add
sub
and
lcall
pop
and
ljmp
lahf
mov
stos
xchg
sub
pop
jg
out
push
fcmovu
sahf
loop
pushf
and
out
js
adc
enter
jb
cmp
adc
ret
lret
addl
push
xchg
jle
int
add
mov
jmp
jl
sub
jge
jge
inc
sbb
fistl
sbb
xorb
enter
loope
pop
mov
mov
test
jle
ret
insb
pop
mov
pop
mov
pusha
add
or
mov
ss
mov
int
mov
pop
cmp
sub
adc
or
jo
push
dec
lock
shl
movsb
pop
mov
or
lcall
mov
call
lcall
mov
nop
stc
subb
xchg
hlt
rcrl
scas
push
popf
enter
sub
insl
or
sub
xchg
push
sbb
mov
movsl
js
add
sub
pop
and
inc
je
mov
or
mov
and
ret
adc
mov
ret
cmp
orb
push
popa
mov
inc
mov
push
nop
xor
sarl
enter
sub
inc
fldt
inc
bound
mov
imull
aas
cmp
xchg
sbb
dec
sbb
mov
popa
cmc
dec
pop
mov
in
in
lock
divl
xchg
loop
test
nop
pop
add
sahf
xor
loop
or
fsubr
adc
mov
hlt
push
push
jle
pop
add
adc
mov
push
shrl
mov
push
ljmp
sbb
mov
dec
in
push
push
xchg
cmpsl
jle
nop
pop
mov
mov
ds
clc
or
xchg
and
dec
jbe
aaa
jmp
fcoml
add
or
cltd
inc
mov
dec
cltd
or
mov
cs
std
mov
inc
mov
sbb
roll
add
cmp
rcrl
stc
ret
add
cmpsl
xor
cli
cld
dec
adcb
lds
sbb
pop
xchg
mov
mov
leave
fld
aas
test
xchg
insb
fcomip
lret
lahf
xor
and
mov
jg
shlb
and
in
inc
scas
jno
sbb
leave
fldl
push
mov
xor
daa
into
cmp
pop
lods
insb
rcrl
sar
mov
test
fs
sbb
outsl
jo
sahf
les
scas
push
testl
outsl
pop
xchg
orb
push
push
negl
shll
ret
popa
inc
jecxz
jb
ss
sub
lds
movsb
fidivs
lea
fs
btr
movsb
xchg
pop
sbb
fs
xchg
pop
rclb
addl
inc
dec
cli
push
stos
xchg
sti
push
iret
mov
in
mov
ret
mov
das
seto
movsb
in
or
shl
js
scas
rcrb
idivb
pop
stc
inc
sub
lret
xchg
xor
stos
clc
sub
popa
cwtl
das
xchg
mov
repz
fistpl
fiadds
mov
movsl
cmp
mov
sbb
mov
stos
repnz
and
lcall
gs
stos
lcall
adc
js
xlat
jmp
inc
imul
addr16
out
jl
dec
je
cmp
out
pop
cmp
dec
inc
pusha
pop
aad
shl
push
mov
lods
and
arpl
dec
add
add
nop
sub
enter
es
rorb
xchg
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
jnp
addl
jle
xorb
fxch
or
sbb
leave
in
pop
outsl
repnz
pop
xchg
mov
mov
and
and
cmp
cwtl
fsubs
push
pop
jae
jl
add
sub
testl
fdivrs
dec
jge
mov
xchg
or
sti
cli
fmull
xchg
xchg
push
ja
iret
sub
mov
lea
in
adc
push
jecxz
jne
cmpsb
aas
push
adc
testb
in
fucomip
stos
xchg
cli
sti
cmp
daa
dec
push
pop
mov
mov
sti
imul
out
mov
addr16
das
dec
pop
adc
pusha
test
inc
jecxz
pusha
sbb
and
ror
insb
std
add
cmpsl
rcrl
add
inc
repz
cmpsb
inc
arpl
xor
push
lahf
inc
add
stos
jmp
rolb
push
jb
popl
pushf
mov
inc
ror
dec
gs
addr16
mov
xchg
mov
or
cmp
pop
dec
aaa
insb
imul
add
fwait
lock
outsb
mov
test
sti
cmp
cmp
lahf
mov
inc
cmp
cmp
inc
outsb
aaa
jmp
dec
dec
mov
cmp
faddl
lods
sub
push
hlt
rclb
enter
and
negl
jne
mov
mov
pop
push
add
mov
movsl
inc
inc
mov
jmp
dec
in
xlat
pop
cmp
or
rorb
or
shl
push
pop
dec
xchg
stos
addr16
call
xchg
or
add
push
mov
fldl
cmp
insb
mov
push
sbb
pop
push
or
bound
ja
push
xchg
cltd
inc
insl
sahf
scas
stos
add
imul
mov
nop
push
and
push
mov
and
xlat
ret
dec
mov
out
sbb
lock
sub
adc
pop
dec
insl
loope
xlat
shlb
inc
aas
mov
xchg
inc
push
ret
mov
sti
and
fstl
pushl
ffree
call
push
push
dec
cs
jmp
popf
rol
enter
xchg
push
lods
cmp
adc
in
scas
aam
das
lock
add
mov
shr
sub
cltd
sbb
out
int3
fldcw
jmp
inc
mov
xchg
bound
mov
pop
add
dec
pusha
xor
xchg
divl
cmp
xor
addb
lods
stc
mov
bnd
sbb
bound
adc
jns
jp
inc
orb
push
adc
dec
std
mov
and
fidivrl
xchg
mov
test
fisttps
rol
mov
adc
insl
fucomi
cmp
and
clc
and
into
jnp
pusha
mov
mov
out
pop
test
or
mov
mov
inc
sysenter
fcoml
fwait
push
or
push
xchg
mov
lret
rorb
ds
mov
in
pop
or
adc
inc
ret
in
lret
and
sbb
mov
mov
out
mov
and
and
cli
mov
xor
add
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
xorb
jle
jg
nop
arpl
xchg
xchg
mov
sub
mov
clc
movsl
push
nop
pop
pop
int
mov
pop
jp
fimuls
pop
mov
mov
in
ljmp
fsubp
fdivrs
sub
loopne
jl
insb
push
movsb
jp
and
xchg
push
notl
aas
sbb
and
popf
mov
xchg
mov
push
mov
mov
xor
sub
sub
stc
lcall
lods
sti
punpckhbw
arpl
xchg
ds
mov
sbb
jp
pop
xor
notl
ljmp
xchg
mov
inc
sbb
in
cs
into
call
repnz
xor
cmpsl
icebp
lea
pop
aaa
mov
cli
jbe
fcompl
cmc
push
xchg
out
ret
xchg
rcrb
ja
xchg
test
xchg
in
out
xchg
push
mov
mov
dec
sub
in
repnz
mov
mov
loope
and
or
aam
mov
pop
mov
movsl
add
push
lahf
sahf
repz
cmp
ss
lods
arpl
add
cmp
wbinvd
dec
mov
imul
jmp
mov
jle
push
mov
inc
mov
repnz
iret
push
addb
adc
mov
mov
mov
jns
mov
xlat
dec
push
mov
mov
xor
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
or
fs
adc
mov
jle
popa
dec
dec
daa
cld
sahf
cmp
in
movsb
inc
xor
int3
sub
xchg
ss
dec
out
xchg
stc
fbstp
xchg
sarl
bound
xchg
jle
in
aaa
popf
push
test
jnp
push
fiadds
jb
mov
stos
loop
les
test
dec
adc
adc
push
popa
shll
xchg
cmpsl
add
and
fs
dec
adc
ret
push
fstp
sbbl
jnp
inc
xchg
inc
lods
nop
add
xor
sub
fdivr
push
mov
pop
adc
lods
sahf
insl
inc
imul
ret
cmp
xchg
outsb
mov
dec
in
and
pop
add
xchg
loope
push
cmp
and
jge
mov
cmp
mov
aaa
xchg
out
cmp
add
je
ss
hlt
rol
push
int3
jne
adc
out
cmp
jo
lret
mov
and
push
int
sbb
or
inc
shrl
bound
scas
stos
or
pop
add
mov
dec
jp
mov
xlat
lret
cld
cmp
inc
mov
pop
or
cwtl
cmp
adc
mov
adc
testl
inc
sbb
mov
int3
test
adc
lahf
lock
popf
mov
sarb
icebp
push
sub
insl
sbb
out
add
out
sub
popl
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
fisubrl
lock
inc
fidivrs
jbe
arpl
inc
xor
add
ret
data16
jno
pop
cs
xor
pop
sub
lret
or
shlb
cmpsl
lret
pop
xchg
adc
or
sub
lret
cli
cli
cmpsb
rorb
and
sbb
movsl
ret
iret
lock
popa
aaa
loopne
and
mov
frstor
inc
xor
cltd
mov
sbb
sbbl
sbb
and
stc
int
mov
arpl
cltd
js
mov
sub
cmp
and
lods
jo
jbe
addr16
divl
mov
mov
scas
add
mov
jg
push
adc
jl
scas
or
mov
iret
in
sahf
push
mov
push
scas
pandn
jbe
movsb
std
aas
lcall
jns
into
lds
sbb
jg
stos
js
jle
xor
les
arpl
xorb
arpl
rcrb
sub
das
pop
xchg
mov
je
test
test
iret
lcall
test
jl
dec
aad
push
stc
fs
fists
mov
cmpl
mov
push
mov
pop
mov
lret
cmpsb
in
push
jl
adc
xchg
je
xchg
stos
dec
push
xlat
mov
jmp
sbb
adc
mov
lret
pop
or
popf
lret
mov
movsb
push
gs
mov
shlb
clc
jmp
xchg
push
int3
jns
imul
xor
pop
in
push
jle
mov
jle
lahf
xchg
jg
sbb
das
cltd
dec
pop
push
push
mov
sahf
push
movsb
inc
loop
jmp
incl
or
daa
rcrl
sbb
jns
popl
xchg
jge
cld
dec
mov
xlat
jle
sbb
adc
push
enter
and
fnsave
jno
ret
roll
addr16
insl
out
test
outsl
inc
and
pushf
cmpsl
out
mov
and
hlt
test
lcall
sbbb
int3
dec
stos
xchg
inc
fisttps
xchg
xchg
mov
xchg
mov
jo
inc
inc
dec
fcmovnbe
or
movsl
push
sbb
add
ds
add
mov
mov
int
and
inc
fs
int3
xchg
sub
ljmp
xor
cli
sbb
mov
aas
pop
iret
xchg
fbstp
push
test
cmpsb
cmp
pop
or
pop
inc
dec
mov
es
cmp
ja
jnp
les
repz
add
js
jle
adc
fs
and
cmp
adc
or
jnp
inc
dec
xchg
movsl
xchg
stos
add
in
xor
call
es
fnstenv
imul
rolb
enter
loop
sbb
pop
ret
xchg
in
push
dec
sub
dec
out
pop
test
test
mov
stos
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
adc
jle
mov
jle
ds
fsubs
mov
cmp
mov
iret
adc
jnp
lds
sub
bound
in
daa
inc
imulb
mov
clc
stc
mov
jge
outsb
mov
dec
jg
out
lds
test
loopne
xchg
xor
pop
rcrl
mov
std
jnp
mov
leave
mov
pop
push
test
add
xor
adcb
scas
ret
add
push
sbb
pusha
adc
jb
lds
adc
lods
lcall
lods
sub
int
inc
xchg
icebp
xchg
adc
jns
dec
cmp
mov
sbb
sbb
out
fmull
popf
das
sub
int
std
pop
dec
and
push
xor
and
pop
jmp
push
jno
push
jle
nop
push
daa
xchg
repnz
subl
movsl
pop
jecxz
pop
mov
mov
mov
sub
xchg
inc
int3
ret
pop
ret
xchg
stos
rcr
mov
add
mov
inc
fisubrl
jecxz
mov
arpl
cmp
adc
addr16
xor
mov
jbe
pop
lahf
or
push
xchg
and
cmp
sbb
adc
or
jbe
mov
lahf
aam
leave
cmp
pop
cmp
movsb
mov
push
add
rol
xlat
mov
hlt
bound
imul
jp
mov
push
fs
xor
loope
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
mov
jle
jg
jle
lret
and
jmp
scas
cmp
add
or
ss
out
or
inc
ljmp
push
cmpsl
xchg
mov
mov
and
or
jecxz
les
mov
push
enter
mov
aaa
xchg
enter
push
dec
and
clc
inc
xchg
inc
mov
test
mov
jne
call
xchg
andl
mov
lods
in
imul
mov
sbb
fprem1
push
insl
xchg
sbb
loop
pop
ja
sub
ret
cmp
in
pop
pop
mov
push
jle
test
loope
mov
shlb
inc
xchg
dec
mov
jg
ds
sbb
xor
sub
dec
mov
scas
cld
jnp
xchg
fbld
sbb
dec
das
pushf
cmp
xchg
xchg
cmp
cmp
push
addr16
movsl
pop
sbb
push
mov
jle
sub
cmc
mov
cmp
jle
test
cltd
mov
mov
xor
xchg
or
adc
hlt
inc
pusha
sub
aaa
test
jecxz
mov
cmp
test
push
int3
adc
mov
imul
adc
sti
lret
xchg
xchg
lock
xchg
xor
insl
add
inc
clc
sbb
into
test
push
in
dec
sub
jns
js
lods
sub
shlb
dec
aad
adc
rolb
push
in
mov
mov
mov
mov
jmp
andb
addw
ret
add
jle
mov
jle
sub
mov
idivb
imul
or
sbb
mov
pusha
rcl
lahf
adc
sub
jb
jo
push
enter
in
inc
test
lahf
jmp
test
arpl
movsb
jmp
add
inc
iret
xchg
cmp
cmp
cltd
cmp
dec
pop
das
dec
fbld
inc
jbe
cmp
add
mov
pop
lods
xor
popa
rcll
push
dec
ret
adc
push
or
addr16
cmp
shlb
jb
push
shrl
popf
jnp
aaa
push
jg
insl
mov
adc
xor
jp
mov
je
enter
aas
or
jmp
aam
and
les
gs
adc
test
inc
mov
and
sbb
arpl
xchg
cld
scas
pop
pushf
dec
je
or
dec
lret
fcoms
pop
out
push
call
cs
in
je
imul
mov
adc
fs
cmp
jmp
jmp
xor
jae
mov
lods
leave
popa
lcall
outsl
or
into
repz
in
xor
in
mov
mov
mov
fiadds
xor
inc
and
arpl
cs
ds
mov
xor
lock
sub
xlat
nop
sub
loopne
sub
stos
sbb
xlat
or
test
jmp
je
xor
in
xor
clc
fbld
xor
add
jmp
test
xor
push
mov
xor
test
mov
jle
mov
loopne
xor
lahf
fimull
inc
and
and
es
insb
mov
rcl
lock
inc
dec
cli
pushf
xchg
dec
inc
push
jnp
sarb
fsubr
ror
ja
out
lcall
pop
mov
in
rcrl
movsb
sbb
xor
jmp
xchg
pop
dec
leave
aam
scas
mov
cli
dec
subl
xchg
mov
mov
jb
sbb
out
int
in
jo
imul
loop
lods
insl
mov
or
test
push
iret
cmp
cmp
lds
mov
out
imulb
jnp
jbe
mov
sbb
daa
xlat
fwait
push
leave
jb
mov
mov
mov
xchg
sbb
cmp
movsb
xor
leave
add
scas
repnz
addr16
or
pop
sub
ljmp
subl
repz
pop
jae
lcall
xchg
jecxz
lahf
cwtl
scas
jb
or
arpl
add
mov
scas
xchg
mov
fdivrl
xchg
push
xor
xchg
std
sbb
xor
mov
mov
into
pop
out
adc
scas
out
dec
shl
lahf
dec
jle
stc
addb
push
pop
xlat
lcall
inc
adc
out
dec
inc
pop
push
jge
hlt
clc
adc
daa
adc
add
pop
fmulp
sbb
aad
lcall
or
add
cmc
adc
jp
mov
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
mov
pusha
in
cs
mov
jle
in
in
push
in
jp
add
jecxz
adc
or
std
in
mov
or
imul
adc
xchg
fisubs
push
inc
sub
xchg
lods
mov
mov
stos
jb
mov
pop
lahf
lcall
bound
js
nop
dec
ffreep
clc
shrl
push
pop
or
sahf
jnp
xlat
xor
scas
inc
sbb
mov
add
pop
push
cld
xorl
sbb
push
cmpsl
inc
stos
cmp
ljmp
fistl
lea
sbb
in
popa
xor
inc
xchg
cs
out
mov
add
cltd
les
jo
push
mov
ret
das
ljmp
arpl
ss
push
arpl
fsubrs
sub
push
add
std
cmp
inc
and
pop
mov
push
rcrb
adc
push
cmp
mov
int3
inc
ret
mov
ret
je
xor
jo
cmp
ret
int
xor
out
add
or
mov
adc
push
loope
fidivs
addr16
lods
les
je
xor
add
mov
adc
add
repnz
addr16
and
in
imull
jge
or
mov
cmpsb
adc
fucomip
cmpsl
into
dec
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
sub
jecxz
das
jle
mov
jle
nop
push
cmp
fs
mov
mov
mov
pop
mov
daa
mov
enter
imul
add
in
mov
mov
xchg
mov
fmull
ja
or
xor
push
and
push
push
or
pop
jns
jns
adc
push
sbb
or
test
inc
dec
mov
or
sahf
xchg
dec
and
mov
shll
scas
gs
dec
jne
sub
mov
out
jbe
stc
gs
or
aad
sub
scas
push
rolb
dec
scas
inc
pop
add
shr
iret
push
mov
mov
jno
sub
lret
push
popl
dec
pop
ror
and
pop
rcrb
pop
pop
push
xchg
xchg
out
mov
popf
push
and
xchg
push
mov
lds
mull
ljmp
sarl
sub
testb
mov
std
and
int3
adc
cwtl
into
xchg
xchg
push
insl
mov
imul
fdivs
dec
and
rcl
shrb
sahf
pusha
mov
mov
mov
xlat
gs
aas
jg
insb
inc
movsl
icebp
jl
cli
arpl
inc
lds
std
xlat
stos
in
enter
xchg
lahf
decl
dec
cmp
pop
iret
dec
sbb
dec
int3
jl
mov
popf
jp
sub
loop
es
pop
cmp
add
stc
imul
jmp
mov
jns
dec
mov
xchg
xor
and
mov
jle
imul
cmp
dec
and
fistps
lahf
sti
sub
loope
inc
cmpb
mov
or
shrl
jg
fxam
aam
lret
notb
jo
mov
push
mov
push
lret
sti
in
frstor
insb
imul
fs
cmp
bound
popf
mov
inc
mov
imul
push
push
add
stc
sub
aad
and
adc
or
jns
enter
xor
inc
add
dec
cmpsb
xor
adcb
stc
das
xchg
insl
loop
cmp
mov
les
jo
imul
fstpt
ss
adc
mov
or
or
gs
push
std
repnz
cmc
jle
cmpsb
cmpsb
and
arpl
out
insl
pop
cwtl
data16
frstor
lods
sub
fildl
and
jmp
sbb
loopne
push
dec
sub
aaa
add
inc
lahf
or
sahf
ret
mov
jp
lock
jae
scas
mov
xchg
cwtl
sub
push
mov
insl
dec
stos
jmp
jne
xor
jno
cld
push
add
sbb
jle
mov
mov
mov
mov
jl
mov
je
xchg
mov
mov
mov
jo
mov
jne
popl
xor
mov
aaa
in
popf
idiv
repz
scas
les
pop
call
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
fildll
stos
inc
and
mov
jle
cmp
mov
adc
adc
inc
fcomp
xorl
cmp
outsw
hlt
inc
loop
dec
cmpsb
or
or
test
test
nop
movsl
leave
pusha
imulb
jmp
inc
sbb
adc
outsl
in
int
dec
lods
gs
jl
in
out
add
pop
push
loopne
or
add
out
cld
push
adc
add
jmp
xchg
xor
dec
cmp
fwait
outsl
lret
jl
jae
pop
or
icebp
stc
inc
xlat
dec
bound
shlb
fldl
mov
jno
jns
mov
scas
push
and
mull
jbe
rclb
push
insb
into
cmpsl
add
dec
into
dec
cltd
xlat
xchg
lret
pop
jp
sub
incl
mov
repnz
in
dec
sub
mov
dec
cmc
dec
jns
push
sbb
add
into
cmp
mov
adc
mov
lods
and
jmp
mov
and
sbb
hlt
pop
jb
js
xchg
push
xchg
push
push
pushf
inc
sub
dec
mov
pop
sub
sub
in
lea
mov
popa
imul
cmpb
mov
mov
mov
add
mov
jmp
pop
add
not
addr16
icebp
stos
insl
ficoms
xor
mov
stos
int3
add
lcall
dec
sub
shlb
fiadds
decb
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
loope
and
jle
jno
jle
jns
adc
adc
movsb
ud2
xor
jns
enter
add
filds
xor
call
in
inc
inc
das
push
sub
cmpsl
dec
lea
and
in
cltd
ja
xor
addr16
lea
aaa
fsubs
std
push
and
push
jp
popa
add
shl
ret
cltd
xchg
pusha
hlt
clc
cld
movsb
mov
cli
inc
inc
inc
mov
testl
jo
adc
and
addr16
or
scas
adc
dec
sti
roll
stos
sarl
mov
mov
mov
fucomi
pop
lock
adc
in
mov
lahf
mov
leave
int3
outsb
xchg
xchg
out
data16
sbb
mov
xchg
call
pop
pop
jle
and
insl
pushf
arpl
xchg
mov
pop
mov
add
icebp
insl
and
jge
xchg
and
pop
mov
mov
xorl
adc
adc
sbb
mov
sbb
andb
clc
les
cmc
negl
add
add
mov
rcl
jbe
inc
mov
gs
pop
addb
mov
mov
cmp
jmp
pop
fmul
es
notl
sti
or
and
les
sbb
adc
pop
mov
cmp
sar
fsin
out
ret
add
test
loop
and
into
test
into
push
xchg
ss
inc
jmp
repnz
or
mov
pop
mov
push
xchg
jp
mov
addr16
insl
out
add
pop
int
jl
loopne
fsubrs
in
enter
push
repz
test
rep
jg
ljmp
sbb
stos
push
inc
push
xor
jae
jl
es
jle
jbe
andb
mov
xor
dec
lods
pop
int3
dec
negb
mov
adc
jae
and
mov
hlt
mov
mov
loope
out
gs
pop
dec
cli
daa
cld
push
dec
dec
dec
inc
out
test
add
testl
mov
ret
sub
mov
xor
xchg
mov
std
fldenv
cmp
inc
or
std
inc
outsb
mov
push
jg
inc
mov
fldenv
jmp
dec
int3
add
sub
aad
das
cmp
jne
and
lcall
fstl
mov
push
push
push
cwtl
mov
xchg
mov
pusha
xchg
sub
push
fs
adc
cltd
jg
and
adc
pop
xchg
jecxz
leave
iret
jbe
cmp
jae
subl
clc
add
insl
and
mov
xor
or
inc
jb
clc
add
sub
cmc
xlat
sub
dec
xor
push
xor
cmp
lods
enter
mov
xchg
add
add
adc
xorb
test
dec
sbb
cmp
stos
push
sbb
and
scas
jmp
cltd
mov
lds
sbb
insl
into
mov
mov
mov
or
inc
xchg
dec
or
popf
dec
cli
cmc
out
pop
mov
in
push
adc
imul
je
xchg
adc
lods
or
outsl
mov
cli
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
jno
cmp
mov
pop
cmp
loopne
pop
xor
aas
mov
jbe
rcrl
or
shrb
sub
sbb
jmp
and
dec
sub
arpl
xchg
xchg
xchg
push
mov
mov
pop
hlt
shll
shlb
pop
lods
mov
mov
shl
cmp
jns
inc
mov
xor
pop
mov
repnz
stc
mov
ss
sbbl
sbb
push
sti
rclb
mov
out
test
hlt
cmp
inc
ljmp
pushf
or
pop
ret
and
orb
fstpt
sbb
sub
dec
rcrb
adc
and
add
mov
push
test
hlt
mov
test
cmp
sbb
lahf
fld
fisttps
jle
dec
adc
pop
xchg
addr16
adc
mov
lret
test
shrl
xchg
ja
test
add
jmp
and
lcall
movsb
xchg
dec
sub
sbb
shlb
xor
enter
popf
fxam
loop
xchg
lods
push
scas
lods
outsl
cmp
pop
std
in
sub
sbb
xor
pop
fsubs
adc
and
pop
push
cltd
adc
pop
ja
push
and
cmp
xor
fsubrp
adc
adc
push
lret
push
call
pop
and
mov
dec
xchg
shrb
lods
push
loopne
icebp
and
add
mov
rcll
dec
cmpsl
mov
call
sbb
or
mov
leave
inc
test
outsl
fidivl
in
insl
test
stc
std
push
sub
ficoml
or
add
fs
movsl
out
pop
jecxz
add
jb
inc
add
push
subl
and
lods
sarb
dec
push
xlat
xchg
out
xlat
xorl
loop
les
add
or
stos
jg
pop
ja
cmc
sbb
inc
mov
ret
cld
jp
cmp
imul
sbb
lret
pop
fs
ficoms
fistpll
aas
push
dec
cld
xchg
scas
jae
repz
mov
adc
cmp
and
flds
dec
lahf
call
sub
out
into
push
xorl
sub
push
or
add
cmpsl
sub
or
addr16
out
add
stos
sub
es
xlat
or
push
repz
push
and
hlt
add
sbb
cmc
adc
dec
stos
jne
xchg
inc
lods
leave
stos
leave
mov
mov
xlat
rcrl
cli
popa
push
imul
scas
pop
lods
in
enter
dec
pop
out
pusha
pushf
xor
adc
ljmp
and
inc
add
or
pop
xor
push
push
mov
sbb
shll
adc
xchg
enter
jbe
lea
pop
repnz
push
repnz
orb
clc
scas
jmp
int
testb
lods
pop
cmp
aas
dec
inc
or
xchg
mov
loop
mov
xor
and
and
pop
xchg
aam
lods
rolb
pop
lret
pop
sbb
sub
push
jp
mov
aas
mov
add
push
mov
and
adc
enter
jno
inc
std
cmpsb
outsb
sbb
pushf
inc
out
dec
es
scas
sbb
popf
shlb
arpl
mov
inc
pusha
mov
ljmp
pop
lock
xchg
mov
xor
ret
mov
rol
in
adc
pop
ss
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
mov
cmp
mov
dec
mov
arpl
inc
mov
je
mov
rcrl
jne
mov
aad
out
rorl
jae
add
sti
mov
dec
mov
push
add
pop
pop
xchg
mov
pop
or
push
rclb
shrl
lea
ret
ds
ret
add
ss
lods
add
sahf
xor
pop
in
out
sub
cli
testb
mov
cmp
inc
out
outsl
cmp
std
lods
adc
sub
stos
xor
cs
imul
or
insl
popa
ret
and
shrb
jmp
es
jg
add
mov
sahf
shrl
adc
scas
sub
outsl
cmc
mov
sbb
or
pop
lods
xor
lahf
sub
pop
xchg
adc
imul
dec
inc
jl
hlt
xor
lret
push
pop
repz
inc
xlat
lcall
inc
dec
cmp
dec
data16
jo
push
xor
jne
mov
mov
comiss
jbe
mov
inc
pop
or
pop
sub
jg
push
test
cli
or
sub
cmp
adc
lock
leave
aam
lds
fucomp
mov
xor
mov
cmpsb
mov
mov
daa
xchg
pop
outsb
inc
dec
insb
lcall
idiv
cs
sub
test
push
into
ss
mov
push
mov
jle
mov
popa
in
pop
adc
cmp
sbb
call
insl
fnstcw
push
testb
iret
mov
les
xchg
sub
es
mov
xor
inc
cmp
lea
or
sahf
mov
fiaddl
sbb
mov
pop
pop
push
mov
test
push
stos
lock
pop
jns
cmp
jge
sbb
rcrl
sub
cmp
mov
xchg
inc
pop
push
outsl
jmp
fcomi
add
mov
or
ret
and
fwait
fs
rcll
rcll
and
inc
mov
and
push
mov
or
inc
sbb
cs
repz
call
test
vpsubusw
xchg
int3
dec
inc
and
mov
sub
addr16
imul
jl
mov
ret
loope
fistl
cltd
lret
scas
fwait
inc
mov
jmp
imul
icebp
or
mov
adc
cmp
jns
popa
cmp
outsl
in
rcll
or
mov
ss
cmp
inc
sbb
dec
xchg
iret
jg
push
stos
push
lret
push
jbe
stc
decb
loop
nop
test
add
mov
mov
xchg
mov
jp
inc
jns
sbb
pusha
outsl
and
sbb
xchg
mov
adc
push
popa
nop
adc
jbe
inc
xchg
adc
test
dec
sub
pop
pop
ds
adc
in
jns
imul
out
xlat
lret
push
pop
xor
mov
pop
mov
add
push
loope
inc
lds
out
pop
out
xchg
jae
and
hlt
xor
test
adc
inc
xchg
daa
push
xor
es
mov
cwtl
sti
lret
imul
scas
cmp
cwtl
and
sbb
fs
test
push
mov
and
cmc
or
dec
in
clc
cmpsb
lods
aas
xchg
sub
cs
push
adcb
pushf
data16
dec
aaa
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
add
xor
jno
jle
dec
out
popa
cmp
xchg
add
xor
push
rolb
inc
sub
shlb
inc
inc
pushf
push
mov
aaa
in
loop
mov
xchg
out
in
push
shrl
mov
sbb
test
jmp
cmp
es
test
cli
cwtl
addr16
imul
popa
fwait
adc
lret
addb
mov
loop
and
idiv
scas
arpl
or
mov
imul
sbb
xchg
shrb
or
mov
ret
call
mov
jle
mov
sub
cmp
adc
dec
andl
fidivrs
movsb
mov
adc
or
cld
gs
loop
loope
mov
jl
fwait
pop
hlt
jg
mov
cmp
dec
arpl
xchg
push
fbstp
mov
or
ret
cmp
iret
cmp
fistpll
int3
push
fs
insb
mov
or
add
loope
popa
jae
jge
mov
inc
mov
pop
movsb
inc
sahf
ja
inc
push
mov
inc
cwtl
out
test
cld
mov
testb
sub
stos
aas
test
xchg
lds
gs
inc
pop
sahf
inc
aaa
and
jmp
push
les
add
adc
fcoml
pop
in
idivl
int3
push
cltd
ljmp
inc
fxch
inc
pop
test
cmp
cltd
lds
fwait
dec
loope
mov
push
fnsetpm(287
pop
lret
xchg
insb
ret
ror
adcb
xor
xor
adc
xlat
jbe
stc
bswap
xor
cs
pop
fsubrs
jnp
repnz
mov
and
fwait
pop
sub
xor
aam
das
insb
xor
mov
and
scas
gs
in
ret
mov
pushf
int
adc
xchg
mov
sub
mov
cld
jg
loopne
mov
xchg
movsb
stos
xchg
inc
stc
loopne
add
pop
dec
pop
xchg
cmp
xlat
sahf
aam
out
push
arpl
add
sub
or
add
jns
mov
sub
add
xchg
add
out
in
adc
cmp
mov
push
pop
fimull
pushf
cmp
aaa
push
inc
stos
push
shlb
cmpsl
repz
or
cwtl
mov
pop
jmp
cmpsb
roll
inc
mov
or
ret
xchg
test
adc
jbe
inc
fnstcw
inc
cmp
clc
js
loopne
shlb
inc
mov
test
enter
fadds
xchg
cmpsl
loop
movsl
test
rorb
sahf
adc
mulb
push
mov
in
nop
pop
pusha
sbbl
sbb
insl
out
aam
imul
xor
lods
push
pusha
add
jnp
daa
inc
jg
arpl
outsl
sbb
fs
xchg
std
jecxz
and
rcll
inc
std
lret
mov
jns
inc
xchg
into
pop
psllw
clc
mov
cmp
rorb
xlat
movb
es
sub
pop
and
in
adc
sbb
jbe
mov
add
mov
jg
test
mov
jecxz
fmull
fisttpll
dec
adcl
fcomi
dec
and
lret
pop
adc
in
lcall
out
mov
push
mov
xchg
add
jg
dec
dec
iret
dec
lods
xchg
cmp
pop
mov
push
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
jbe
xor
cli
or
arpl
xor
sbb
stos
stc
add
and
dec
cmp
dec
sbb
xchg
gs
aad
push
fisubrl
pop
int
mov
js
inc
jno
sub
sbb
out
imul
jbe
loopne
or
pusha
pop
inc
es
xor
xchg
mov
xchg
mov
test
xchg
or
xor
dec
jmp
sahf
in
shll
push
mov
iret
outsb
pop
sahf
adc
into
xlat
jge
mov
ds
lret
loopne
test
mov
sbb
pushf
cltd
sub
fs
mov
fildl
mov
add
in
cmp
xchg
xchg
inc
and
push
push
pop
ja
jbe
xchg
imul
shlb
jbe
ss
sbb
aaa
and
sub
pop
jnp
cli
and
pop
pusha
fimull
mov
pop
dec
or
mov
cld
loope
jmp
dec
out
movsb
cmp
stc
mov
lcall
sbb
test
out
mov
dec
sub
jno
sti
mov
nop
mov
test
add
inc
stos
pop
jp
mov
sub
or
or
imul
dec
sbb
mov
xor
xchg
cmp
pop
inc
dec
sub
mov
out
mov
sbbl
es
cmp
popa
aad
mov
xchg
push
mov
or
mov
xchg
or
inc
into
jp
mov
in
inc
xchg
mov
das
xchg
fadds
push
jmp
pop
sahf
push
mov
pop
jo
int3
test
fildll
add
sbb
adc
movsl
loop
cmpsl
pushf
imul
lret
and
fs
loopne
sbb
popa
push
push
and
fimuls
sbb
lods
mov
repz
jp
movsl
int
lods
ret
movsb
divl
daa
inc
pop
in
into
or
xchg
pushf
inc
fildl
cmp
sbb
add
cmp
shrl
insl
aad
lods
fiaddl
ljmp
xor
mov
sub
mov
mull
stc
flds
je
mov
in
testl
push
jo
clc
ret
mulb
pop
hlt
ja
filds
jmp
shl
lcall
hlt
in
push
test
addr16
lea
jp
xor
cmp
cmpsl
jno
stos
gs
fwait
jp
cwtl
addl
cmpsl
ds
xchg
sub
xchg
jmp
aaa
pshufw
and
pop
rclb
mov
mov
scas
and
insb
jb
mov
jp
xchg
test
adc
mov
call
lods
rol
js
push
sbb
adc
gs
jg
lods
pusha
int3
test
and
out
sarb
xor
in
rolb
pop
xlat
arpl
bnd
push
cs
xor
add
push
cmp
inc
mov
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
aas
std
rep
dec
ss
jmp
jle
push
jmp
mov
mov
pop
ljmp
sub
mov
sbb
add
pop
sub
mov
cmp
mov
aaa
sbb
cmp
mov
or
lahf
test
add
or
fdiv
shlb
sarl
sti
inc
mov
adc
sbb
or
data16
ret
jno
lea
test
fldenv
hlt
sbb
fbld
add
adc
push
cmp
out
mov
sbb
imul
pop
and
fwait
pop
out
cwtl
repz
jmp
or
imul
ja
mov
sbb
fmull
fsubrs
xlat
hlt
dec
shll
jns
jmp
int3
xchg
pop
mov
or
shl
loopne
jnp
sbb
dec
lahf
xor
pop
aam
orl
xor
pop
pop
xchg
mov
xor
faddl
xchg
scas
pop
xchg
ficompl
cmp
mov
jge
int
repz
sbb
test
daa
mov
mov
movsl
dec
pushf
fs
clc
sub
and
and
or
dec
incl
arpl
push
push
or
mov
pop
imul
push
pop
pop
js
jno
mov
inc
dec
lods
fstp
icebp
clc
mov
movntps
iret
leave
xchg
out
icebp
mov
divb
call
inc
pop
cmpsl
rol
bound
testl
dec
bound
mov
popa
push
pop
fdivrs
jle
xchg
cmovnp
popf
je
or
pop
sub
jnp
mov
inc
mov
push
jb
hlt
push
sbb
outsl
push
popa
in
mov
pop
or
jmp
arpl
ud2
lds
jge
add
inc
sub
ds
adc
hlt
cmp
pop
xchg
nop
mov
iret
or
fidivl
adc
stos
mov
push
fiaddl
aam
sbb
or
cld
xorl
and
pop
mov
xchg
adc
add
pop
dec
aad
js
adcl
xchg
imul
imul
xor
repnz
in
mov
add
lea
xlat
popf
ss
sub
scas
into
pop
ss
xchg
rclb
sub
jp
call
fmuls
inc
roll
rcrb
testl
adc
hlt
or
leave
add
xor
jb
xchg
xchg
push
sub
mov
fnstcw
ret
jecxz
add
mov
adc
inc
lods
fldl
scas
sub
sti
popa
push
push
clc
aad
les
outsl
add
in
xor
jno
mov
daa
out
aam
push
and
jb
mov
aam
dec
rcrb
fwait
out
arpl
filds
push
add
cmpl
les
sub
sbb
cld
fcmovne
mov
fsubrs
mov
mov
int3
imul
inc
mov
inc
pop
jae
cmpb
out
pushf
pop
adc
shr
fwait
iret
mov
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
jl
pop
nop
cmp
jle
jmp
jle
add
pop
leave
lea
xchg
test
frstor
mov
mov
std
mov
fdivs
bound
pushf
sbb
push
push
cld
stc
push
lods
xorb
nop
lret
sub
jae
push
or
jo
and
aam
push
ss
or
pop
push
push
inc
je
lret
add
jp
xchg
cld
mov
pop
and
jo
sbb
mov
adc
lods
sbb
pop
push
aaa
popf
imul
sub
cmp
mov
adc
or
movsl
jo
repz
imul
push
cld
fidivrs
sub
loope
pop
and
jo
mov
xchg
cmp
dec
cmp
dec
jg
jp
lret
inc
or
mov
faddp
outsl
cwtl
sbb
cmp
scas
lret
daa
jnp
scas
mov
add
add
sbbb
mov
mov
incl
mov
xor
aam
or
sub
jo
sub
iret
les
inc
jnp
mov
jg
add
mov
and
xchg
jg
aad
add
xor
pusha
fsts
push
enter
add
cs
mov
mov
outsl
popa
cmc
inc
push
jnp
fisubrs
push
icebp
dec
leave
mov
xor
daa
inc
dec
jae
cmp
pop
enter
leave
orl
jmp
aas
lret
xor
adc
cwtl
fs
sbb
xor
jnp
loop
pop
mov
adc
xchg
lahf
bound
cwtl
xchg
or
add
mov
cmp
pop
out
test
gs
sub
add
sbb
out
pop
add
cmpsl
xor
push
out
adcl
ds
mov
loope
aad
push
mov
xlat
jns
cli
cmpsl
pop
pop
aam
gs
inc
mov
xor
adc
ret
add
outsl
or
dec
push
cmpsb
movsb
mov
and
push
addr16
mov
imul
mov
int
arpl
mov
inc
xor
sbb
outsl
shl
sbb
sahf
mov
pop
inc
fwait
inc
orl
adc
out
enter
dec
pusha
cmp
fwait
adc
inc
mov
enter
push
cmpsb
inc
add
scas
and
movsb
sbb
dec
fnstcw
adcb
test
pop
jmp
lret
test
lcall
loop
inc
xor
mov
fnstsw
add
or
adc
cmp
add
cwtl
aaa
inc
rcrb
stc
push
std
je
into
or
xor
push
test
sub
sbb
test
mov
adc
jb
sbb
cmp
cmc
test
fisubl
mov
dec
fsubl
mov
push
mov
lds
or
pop
lds
cwtl
add
movsl
inc
mov
cmpsb
iret
add
ljmp
adc
int
popa
inc
jns
call
xor
adc
and
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
push
fwait
dec
sar
mov
pop
xchg
arpl
cmpb
cmc
pop
pusha
scas
jae
loope
and
jge
mov
add
sti
adc
pushf
out
sub
inc
imul
mov
mov
mov
jmp
idivl
pop
adc
dec
fs
or
inc
push
xchg
andl
cmp
inc
sar
jge
xor
fcom
jb
push
and
fdivrl
jle
mov
ja
ss
xchg
push
inc
push
sbb
cmc
xchg
xor
dec
out
nop
test
jnp
jo
push
pop
test
in
xor
xor
lret
out
push
pop
pop
and
movsl
sub
add
sbb
gs
repnz
aam
xchg
insb
imul
pop
movsl
xchg
aaa
cmp
jno
out
lods
lret
push
dec
ja
mov
lcall
les
cmp
rclb
xlat
ds
pop
loope
adc
jge
dec
fcomip
mov
imul
cmc
push
inc
jge
xchg
aam
inc
lret
push
nop
fstpl
inc
mov
xor
cmp
insl
cwtl
jbe
add
jo
mov
stos
ficoml
jg
mov
mov
inc
clc
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
mov
jle
sarb
jle
mov
pop
divb
mov
mov
jnp
xchg
lcall
imul
push
mov
mov
xor
into
pop
ljmp
mov
in
into
sub
daa
sub
sbb
stc
lds
sub
cltd
pmaddwd
flds
jbe
push
outsl
testb
aad
es
jbe
push
jmp
in
mov
jbe
in
dec
xchg
cmpsb
mov
dec
pop
ljmp
mov
pushf
mov
cmp
adc
daa
sahf
adc
mov
in
je
sbb
jp
pop
jb
test
stos
stos
icebp
jno
in
test
mov
or
pop
fldcw
mov
arpl
jle
mull
aam
rep
sbbb
sahf
insl
dec
cmpsl
mov
nop
mov
mov
fs
loopne
lahf
popa
test
or
xchg
add
mov
jne
dec
dec
dec
dec
adc
lret
aas
out
mov
adc
add
lds
call
sbb
inc
mov
pop
ficoms
jnp
daa
sarb
fadd
leave
pusha
pminsw
add
dec
dec
jb
stc
idiv
and
dec
sbb
xchg
sbb
xorb
shl
adc
sub
inc
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
gs
jae
in
sarb
jg
jle
push
outsl
incl
mov
in
mov
and
pop
stos
sti
lret
xchg
dec
andb
jmp
out
ljmp
jge
cwtl
je
mov
and
int
idivl
push
je
lods
stos
shrl
push
out
lods
js
ljmp
dec
out
push
into
rclb
sub
mov
sarl
fnsave
ret
cmp
sbb
sbb
icebp
adc
add
xor
mov
sar
mov
pop
daa
repz
xchg
enter
and
dec
mov
sbbb
or
jno
shlb
les
jb
fbstp
cld
pop
sbb
aam
aaa
jno
dec
icebp
stos
mov
scas
sub
push
bnd
adc
ret
das
xor
xor
decb
sahf
outsl
sbb
mov
xlat
mov
mov
cli
push
adc
repz
fcomip
or
adc
imul
sub
arpl
jp
pop
and
sti
push
mov
jns
ja
leave
cmp
xchg
lcall
sub
scas
or
mov
and
cltd
or
push
leave
scas
sbb
mov
or
mov
sub
repz
adc
add
xchg
fsub
fidivs
sub
add
add
cmp
cli
vpaddw
incl
push
cmc
jle
inc
sarl
jg
jle
push
gs
loopne
insl
addb
insl
push
clc
mov
cmp
inc
cmpl
push
jno
dec
sbb
ss
and
pusha
loope
out
out
fsub
pop
int3
xchg
cs
pusha
imul
roll
fistpll
dec
outsl
xchg
adc
cmp
jns
dec
push
jge
xchg
les
jae
loop
push
sub
cwtl
and
test
dec
not
inc
ficomps
daa
mov
fwait
call
sbbl
movsb
or
xchg
sbb
in
dec
push
mov
xor
lahf
loop
aad
inc
shlb
and
add
cmp
loop
xchg
jbe
dec
adc
pusha
subl
sub
imul
test
dec
pop
lret
mov
cs
pop
push
mov
mov
push
mov
jnp
pop
fcmovu
inc
call
dec
jo
cli
testl
jecxz
pop
icebp
in
lods
in
mov
sahf
icebp
sbb
xor
movsb
inc
xor
rcrl
or
leave
bound
inc
sub
and
enter
inc
jb
mov
sbb
call
sub
mov
xor
mov
add
jmp
push
fsubs
pop
xchg
push
mov
jo
and
jg
jle
xor
ret
fistps
lret
inc
movsl
mov
lahf
mov
pop
cmpsb
pop
adc
pop
repnz
lahf
sti
fisttpl
cs
sarl
mov
mov
pusha
lret
pop
ret
inc
cmpb
or
cmp
sub
jle
and
xchg
push
je
adc
push
jae
sbb
lret
loop,pn
pop
inc
in
cmp
cmp
mov
jne
or
outsb
lcall
mov
or
jb
hlt
jge
pop
loop
jle
xor
sub
inc
fstpl
sti
jg
inc
ljmp
out
mov
push
fldcw
mov
inc
fucomp
mov
rclb
mov
in
sub
bnd
jbe
cli
cltd
dec
in
inc
mov
aad
ret
fcomps
jae
ds
aad
jae
sub
mov
test
and
inc
mov
test
fcompl
mov
adc
and
or
jnp
sbb
daa
fidivrl
xchg
fdivr
mov
xchg
adc
mov
mov
fxch
cmp
fisubl
and
call
ret
lcall
lods
push
cmpsb
int3
xchg
pusha
sub
mov
les
sub
push
sub
inc
in
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
lods
inc
pop
nop
cltd
les
sarb
jle
inc
xchg
mov
mov
out
mov
push
add
mov
cli
je
xor
mov
test
popa
mov
pushl
xchg
inc
xchg
push
cld
cmp
mov
fwait
cmpl
pushf
push
lock
icebp
cmpsb
nop
push
insb
aaa
sub
jmp
sbb
adc
mov
push
repz
dec
loopne
add
mov
push
cmp
test
cmpsl
pop
shrb
fildll
movsb
and
pop
jge
xchg
xchg
mov
enter
push
fisubrs
insl
mov
stos
stos
inc
sub
inc
loop
test
xchg
dec
lcall
xchg
and
add
dec
xor
shrb
inc
lahf
mov
pop
mov
cmp
aad
mov
cmp
push
push
movsl
sub
and
call
test
cltd
mov
jno
add
jo
adc
aad
jg
in
cmpsb
fsubrp
xchg
shlb
movsb
das
inc
mov
mov
mov
addl
fisubrs
inc
out
mov
jno
jbe
mov
adc
mov
lcall
xor
inc
push
leave
xchg
sub
push
mov
inc
or
movsb
lahf
fildl
call
add
add
jp
sbb
lods
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
dec
cs
xchg
jge
jle
sarb
jle
jle
aaa
int3
scas
enter
lahf
jno
or
jmp
adc
bound
mov
mov
scas
cmp
sub
adc
dec
add
ret
sbb
add
xchg
mov
mov
mov
les
ret
push
pop
inc
std
jmp
dec
jecxz
mov
data16
dec
inc
push
jle
rcr
js
std
scas
cmc
je
clc
mov
sti
xor
fwait
hlt
jnp
incl
pop
cwtl
sbbl
je
xchg
push
jb
dec
sbb
rolb
shr
je
jp
pop
xor
and
stos
xchg
insl
mov
cmpsl
xlat
xchg
loopne
pop
jae
sahf
fldt
pop
in
mov
sub
xchg
xchg
mov
fcmovnb
push
pushf
push
insb
or
cmp
in
popa
dec
dec
outsl
inc
and
stc
pop
jl
sbb
ret
push
sbb
sbb
stc
leave
cmp
cltd
dec
push
out
mov
adc
ret
and
or
fdivr
inc
sti
sbb
cmp
or
repnz
xchg
out
pop
jnp
mov
mov
mov
dec
mov
mov
pop
jmp
into
out
xchg
xchg
ds
punpckhwd
pop
xlat
jmp
cmc
popf
jno
in
clc
push
out
sbb
xchg
lock
adc
roll
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
inc
jb
push
rol
jle
sarb
jle
jge
mov
mov
sub
dec
or
js
dec
shlb
sbb
gs
sub
xchg
pop
sub
push
sti
out
es
adc
sub
repnz
pop
xchg
xlat
leave
psrlq
rcrb
inc
hlt
pop
roll
cmp
lahf
fptan
stos
call
in
mov
testb
incb
pop
jae
inc
dec
mov
inc
out
out
test
add
popa
out
dec
ljmp
int
mov
aaa
mov
mov
pop
cs
cmp
into
jne
cli
xor
dec
roll
adc
fwait
pop
push
or
inc
loop,pn
movsb
scas
lea
mov
jne
sbb
sub
dec
popa
rol
aad
adc
mov
js
aad
mov
pop
aaa
popa
jecxz
and
ss
jne
sbb
orb
push
adc
sub
fsubrp
cmp
xchg
test
mov
mov
push
into
add
scas
mov
xchg
cltd
std
ss
sti
dec
mov
jg
mov
cmp
mov
inc
and
movsb
add
adc
push
out
jl
out
pop
or
andl
push
mov
arpl
or
mov
insb
dec
aam
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
lret
xor
fdivrs
sarb
jle
das
sbb
lret
pop
sub
mov
fistl
inc
mov
inc
jmp
jb
xor
aas
dec
outsb
mov
icebp
arpl
mov
addr16
dec
sarl
cs
mov
dec
std
inc
cld
jle
sbb
mov
js
inc
fisubrs
pop
insb
mov
adc
fisubl
ja
fiadds
and
ret
sbb
stc
and
or
inc
mov
xchg
je
mov
int3
push
cmpsl
mov
dec
mov
fdivrl
icebp
into
pop
mov
jo
ret
dec
lcall
arpl
lods
jnp
push
scas
cld
mov
xchg
sbb
cmp
enter
mov
lods
out
adc
mov
dec
push
mov
adc
or
mov
jmp
sub
push
adc
and
fstp
stos
pop
mov
mov
adc
jne
push
sub
inc
push
jmp
and
inc
or
xchg
xor
mov
loope
jns
push
and
fs
aam
or
fmulp
pop
nop
test
cmp
mov
notl
cli
adc
pusha
cmp
inc
in
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
sbb
les
xchg
mov
cmp
sub
jns
push
add
addr16
mov
out
xlat
gs
cmc
mov
loope
std
push
xchg
xchg
cmpl
leave
xor
cltd
push
mov
sbb
ret
sub
add
cmp
sub
int
out
ficoms
jbe
xchg
adc
imul
lds
xor
mov
jp
ss
shl
jnp
add
add
lea
pop
dec
imul
add
inc
inc
jnp
cmpsl
pop
xlat
cmp
fcompl
subl
pushf
scas
fdivrl
sub
dec
hlt
jmp
dec
test
xchg
imul
cmpsl
push
and
ret
push
mov
insl
push
das
pop
ljmp
sbb
test
cli
mov
popf
xorl
jecxz
lock
mov
and
or
addr16
in
leave
mov
aad
add
jno
jb
or
fbld
nop
mov
inc
jno
hlt
pushf
data16
mov
add
or
jae
sub
jle
test
pop
jns
imul
xor
iret
psadbw
and
or
add
lock
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
sbb
fstpt
sarb
jle
sub
pop
mov
add
aam
sbb
inc
xchg
lahf
fs
xchg
inc
sbb
cld
dec
stos
jns
int3
adc
mov
cltd
cmp
scas
sub
sub
lret
push
add
sub
mov
scas
test
push
cwtl
mov
xor
hlt
out
inc
mov
popf
clc
insb
lcall
sub
dec
jle
push
push
inc
shll
xchg
jo,pn
test
add
pop
ss
mov
xchg
mov
loope
mov
arpl
fwait
or
inc
cmp
sarl
jecxz
xchg
pop
add
test
sub
cmp
lret
fsubp
jbe
mov
sbb
xor
jmp
dec
cmp
ja
fldenv
add
and
xor
push
inc
xor
sub
or
pop
pop
je
xlat
sub
cmpsb
push
mov
jge
fwait
adc
repz
or
mov
bound
mov
dec
setb
mov
xor
ja
jp
fdivrl
fiadds
stos
fcmovb
lahf
inc
ret
ja
pop
aas
repnz
mov
xchg
repz
mov
jmp
xchg
sbb
jecxz
mov
sub
ficoms
popf
jb
add
or
adc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
add
add
push
jo
jle
mov
sub
push
push
ja
cld
fldl
cmp
ja
mov
cmp
sti
push
jb
imul
jno
xchg
pop
mov
or
add
pop
arpl
inc
subl
xlat
jecxz
inc
inc
push
and
fs
mov
ret
dec
imul
sbb
mov
mov
movsb
sub
mov
ss
mov
mov
pop
pop
push
aad
test
daa
sub
mov
cld
ds
xchg
add
cmp
mov
call
adc
jo
mov
pop
std
pop
std
decb
hlt
xchg
std
ds
mov
aam
xor
add
ja
jne
cmpsb
or
sub
inc
enter
mov
and
and
mov
push
sub
pushf
jecxz
inc
int
add
push
adcb
inc
sbb
in
sbb
gs
and
jnp
stos
dec
adc
call
sbbl
dec
arpl
fdivrl
imul
test
sub
mov
push
popa
xor
dec
mov
mov
pop
cs
xchg
jae
mov
push
xchg
mov
jb
movlps
sarb
jecxz
jge
stos
xchg
sub
test
rcrb
dec
mov
fnclex
int
notl
outsb
ret
imul
pop
rcrl
cmp
clc
je
pop
filds
test
cwtl
jnp
in
cmp
shlb
jg
push
push
and
push
out
pop
lods
inc
sti
xchg
push
xor
sbb
daa
into
sbb
mov
hlt
aaa
sbb
popf
into
dec
loopne
pop
in
or
test
add
les
out
push
xchg
push
lods
dec
mov
inc
jnp
sbb
mov
pop
imul
xchg
dec
xchg
movsb
mov
or
xor
popa
xchg
pop
scas
push
pusha
adc
mov
fs
stos
test
insw
andb
movsl
addr16
mov
fs
pop
adc
jbe
fsubl
mov
or
jmp
add
push
subl
out
sub
mov
aaa
cld
aam
xor
outsb
push
adc
fidivs
sbb
xor
je
fwait
and
cmp
sub
xchg
loopne
mov
mov
mov
pop
out
mov
dec
inc
outsl
pushf
ret
mov
and
je
dec
mov
imul
cmp
pop
add
stos
or
cmp
lret
neg
sbb
xor
mov
div
mov
and
jmp
out
xchg
imul
bound
cmp
inc
fistpll
push
jo
jle
insl
cltd
jae
sub
lahf
sbb
xor
outsb
push
iret
ja
mov
or
in
cmp
mov
fisttpll
fwait
mov
dec
sbb
divl
mov
orl
pop
sub
pusha
nop
mov
notl
add
or
mov
dec
insl
dec
je
adc
pop
ljmp
out
subl
je
scas
xchg
fdivl
rcll
insb
mov
jb
mov
ja
push
dec
ret
push
nop
in
mov
shlb
cmp
mov
fwait
push
test
dec
pop
mov
aam
push
repnz
jl
shr
aam
xchg
xchg
icebp
inc
push
in
call
xchg
or
push
push
inc
cmp
jo
adc
push
daa
sbb
test
xorl
mov
dec
dec
popa
out
and
inc
jp
and
dec
sub
sub
push
xchg
jnp
jnp
ds
fmull
test
pop
aas
add
cli
jno
mov
outsl
nop
popf
nop/reserved
mov
mov
test
adc
cmpsb
scas
movsl
sub
push
pop
push
mov
jne
jno
cmp
out
popa
imul
fwait
or
fldt
push
stos
push
xchg
sub
lock
jmp
pushf
push
jle
mov
jl
ljmp
adc
pop
pop
or
xchg
stc
mov
pop
lea
shlb
inc
jae
mov
xchg
or
or
into
and
test
sub
lret
xchg
fsubrl
add
movb
in
jle
jle
push
add
xchg
push
sub
das
daa
cmpsb
into
dec
ljmp
aaa
jns
push
mull
das
sub
movsb
leave
sub
ds
pop
sarl
enter
into
sbb
sbb
fwait
mov
push
pop
push
fldpi
xchg
sub
pushf
push
je
xchg
mov
test
ss
pop
pop
xor
outsb
cs
push
mov
repz
jae
sarl
repz
pushf
ss
or
cmp
into
mov
dec
cmpsb
sahf
xor
outsl
data16
pop
fwait
mov
andb
jle
in
or
push
sub
add
into
xor
in
mov
sbb
in
jnp
fwait
pop
js
out
pop
aas
fcoms
ret
or
into
pop
cmp
jno
fldt
bound
xchg
push
lgs
mov
ret
and
out
fwait
mov
lret
pop
loopne,pn
jno
arpl
leave
sbb
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
mov
ja
movsl
sarb
inc
jg
jle
sbb
sub
mov
in
out
push
xchg
mov
push
xchg
fwait
lods
pop
cmpsb
push
scas
cmp
ret
cmpsl
push
or
hlt
mov
in
and
cmp
icebp
push
mov
mov
xor
push
and
mov
jns
orb
xchg
jb
cmpsb
inc
or
clc
movsl
mov
mov
js
fimull
jmp
pushf
lret
pop
sbb
xor
cmc
xchg
pop
adc
or
pop
dec
adc
outsl
mov
inc
pop
lock
mov
cli
add
out
in
cwtl
add
or
fldcw
add
mov
sarl
jo
inc
mov
mull
add
or
adc
mov
mov
jb
test
add
arpl
xor
cmpl
push
insb
cmp
fildll
mov
fs
or
or
in
push
les
cwtl
stc
call
pop
or
icebp
lret
dec
inc
iret
push
sub
dec
push
mov
sbb
icebp
inc
jle
push
inc
scas
or
mov
mov
mov
mov
push
ljmp
scas
push
xchg
mov
dec
dec
jg
in
cld
iret
ss
outsl
sbb
icebp
pop
add
and
sbb
inc
fldcw
shrb
push
lea
imul
dec
sub
cmp
repz
push
and
fldl
nop
and
mov
dec
into
daa
mov
into
push
add
cmpsb
nop
mov
enter
ret
testl
dec
add
mov
iret
push
add
dec
loopne
sub
shrb
incl
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
mov
aam
jle
jg
jle
repnz
fwait
out
aam
pop
fwait
push
mov
lcall
jnp
pop
fidivl
mov
xchg
rcrl
jnp
mov
or
add
add
cmp
pusha
sbb
and
je
mov
push
mov
lret
sbb
mov
cmp
inc
roll
pop
or
bound
fdivrp
xchg
inc
shrb
mov
push
cmp
es
mov
push
imul
add
jbe
push
roll
push
or
mov
xchg
lahf
mov
pop
test
push
adc
pop
lret
insl
clc
xor
inc
mov
inc
stc
lret
out
fmull
std
mov
adc
loope
dec
fsubr
in
mov
xchg
insb
xchg
scas
call
adc
sbb
cmpsl
inc
lock
lret
jne
mov
adc
mov
push
jae
sub
stos
test
pop
jge
mov
insb
clc
arpl
imul
rorb
mov
cmp
scas
xor
daa
icebp
sub
popf
push
sbb
ja
repnz
in
sub
xchg
std
stos
sub
xchg
jle
or
push
pusha
sahf
mov
push
lods
jmp
repz
lods
add
adc
es
daa
bound
call
xor
mov
mov
loopne
stos
xchg
dec
adc
pop
shlb
sbb
sbb
inc
inc
gs
aaa
fcmovbe
std
push
lret
lods
pop
add
push
popl
aam
out
push
cmpl
aad
xor
adc
push
push
inc
lret
nop
stc
jg
cltd
add
jb
add
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
push
inc
push
xor
dec
mov
imul
jle
loopne
cli
mov
je
movsb
add
clc
mov
xchg
sbb
add
pop
out
xchg
push
mov
popa
inc
sarb
loop
aas
ud2
mov
xchg
jmp
scas
push
lds
xor
imul
add
xor
mov
inc
jno
sbb
into
ja
cmp
call
jecxz
push
fldcw
lds
icebp
nop
mov
shll
outsl
stos
mov
leave
or
pop
sub
jl
int
push
jns
xor
xchg
pop
dec
push
cmp
scas
pop
cltd
movsl
lea
xor
mov
mov
xor
pop
add
mov
loope
ss
pop
std
jge
pushf
inc
pop
inc
lds
sbb
pop
popa
insl
aam
outsl
adc
lods
es
sub
out
sub
insb
into
inc
out
je
pop
push
bswap
fistpl
jno
pop
mov
jp
lea
cmp
fdivrl
add
adc
sti
mov
shrb
sbb
sahf
or
xchg
add
out
pusha
jne
mov
ret
inc
push
jge
out
hlt
adcb
mov
insb
sbb
dec
sbb
mov
jo
es
sbb
rcrb
mov
sub
icebp
sti
jno
sbb
jae
sarl
scas
cmp
stos
jl
fs
or
mov
or
mov
lcall
and
mov
sbb
cltd
cli
in
insl
add
push
or
ret
inc
jne
pop
xchg
lret
xor
fucomi
push
adc
xchg
lret
inc
out
mov
les
arpl
mov
or
clc
mov
mov
clc
fs
xchg
pop
inc
ss
in
cmp
dec
call
insb
cltd
in
inc
sub
sub
adc
fmull
mov
mov
test
enter
mov
ret
daa
jnp
lock
add
mov
xlat
in
in
sub
xchg
mov
add
jb
inc
or
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
sub
fbstp
jle
sbb
xor
ficompl
jp
dec
pop
cltd
or
shll
scas
cmpsb
xor
lods
mov
sarl
and
push
shrl
sbb
pop
jno
std
enter
rclb
pop
xchg
mov
xchg
aam
inc
and
xchg
sbb
in
mov
sub
test
cmp
int
sbb
movsb
sub
mov
out
push
sub
cwtl
push
adc
inc
imul
je
aam
push
or
dec
pop
test
add
out
sub
iret
mov
test
hlt
xchg
cli
lahf
ficoml
mov
arpl
inc
sbb
mov
pop
jo
out
movsb
jns
out
xchg
xor
shlb
xchg
and
mov
sub
adc
xchg
cmc
or
les
jge
add
imul
sahf
sub
dec
ja
jge
lods
in
out
sti
or
dec
scas
xchg
sbb
or
cmp
or
sub
sahf
dec
andps
adc
adc
sub
lcall
int
dec
les
aas
icebp
nop
fsts
enter
rcrl
mov
mov
jecxz
mov
faddl
pop
repnz
push
jmp
mov
jno
cmpsl
cltd
aaa
lcall
jle
inc
lock
dec
rorb
insl
adc
mov
pop
fsubs
push
sbbl
rcl
loop
test
xor
sub
add
cmp
add
mov
pop
mov
cltd
data16
sarl
push
lret
shr
aaa
push
and
mov
cmp
pop
repnz
nop
sub
xchg
and
and
pop
xor
xor
mov
bound
mov
pop
jbe
jg
test
jmp
outsl
sbb
mov
xor
xlat
aaa
out
cltd
sahf
out
repnz
rcll
and
cwtl
cwtl
arpl
lock
stos
mov
add
adc
fsubrs
mov
xchg
pop
pop
pop
mov
push
ss
cmp
popf
jb
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
femms
add
jg
jle
rcl
rcll
jb
jbe
sub
cltd
dec
in
push
inc
sbb
xor
je,pt
sbb
mov
xor
mov
cmpb
pop
adc
outsl
out
adc
sub
shr
cmp
std
pop
shll
cli
pusha
ret
inc
mov
jne
dec
cmpl
shlb
movsb
mov
fcomps
xchg
pop
jle
mov
lahf
imul
mov
enter
mov
push
add
int
sub
and
inc
xchg
jo
popa
pop
pop
out
stos
loope
xchg
repz
cmp
ljmp
pcmpeqb
gs
jmp
cmovge
mov
lcall
movsl
fcom
jmp
mov
xchg
mov
add
and
jns
mov
mov
shl
loop
pushf
aaa
dec
cltd
sub
push
mov
dec
pop
mov
mov
lock
scas
inc
mov
xchg
imul
testl
cmpsb
sub
out
in
rcl
mov
dec
sbb
outsb
test
cmp
les
leave
out
cwtl
into
lahf
ficoml
cli
push
cmpsl
jp
fs
mov
daa
cwtl
in
idiv
lds
cs
das
out
mov
out
loop
xlat
jnp
or
xchg
cli
inc
bound
inc
aam
sbbb
jo
cmc
mov
pop
pop
stos
ja
or
pop
lcall
jmp
imul
or
mov
mov
pop
aaa
lret
sub
aaa
inc
mov
inc
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
ss
sub
in
jle
pop
jg
jle
fcmovu
add
loope
lcall
pop
clc
icebp
mov
dec
mov
ret
push
and
lret
mov
jge
arpl
pusha
repz
je
scas
and
mov
adc
add
icebp
jnp
pop
movsl
arpl
imul
or
mov
std
or
sbb
jnp
add
mov
mov
jl
bound
jle
mov
cmpb
mov
sub
gs
outsb
add
fidivrs
cmp
rcrb
mov
cmp
mov
and
dec
jo
or
in
xlat
lcall
popf
inc
push
loopne
xor
pop
cld
jb
cltd
loopne
pushf
mov
out
push
inc
inc
jge
mov
adc
pop
jecxz
mov
push
cmpsl
daa
push
jge
inc
stos
sub
mov
and
cmp
push
mov
in
aam
mov
xchg
imull
adc
btl
mov
push
mov
into
mov
fidivs
mov
dec
inc
pop
ficompl
add
pop
jmp
movsb
ret
xorl
xor
fsubrs
xchg
sub
or
js
into
fbld
or
and
std
sahf
cmp
mov
fsubrl
inc
or
and
jecxz
or
es
fisttpll
je
mov
or
outsl
out
std
setge
inc
ret
std
bound
inc
lcall
and
jns
or
cld
mov
and
dec
ret
lahf
and
popf
pusha
and
stos
xchg
xchg
aaa
adc
int
bound
jne
mov
ljmp
mov
sub
ja
sub
mov
stos
xchg
pop
out
or
fs
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
sub
pop
jg
jle
ror
and
or
fnsave
cmovns
cs
adc
insb
xor
stc
pop
fcompl
insb
fnstenv
xchg
pop
pop
stos
push
cltd
cmc
sbb
jp
gs
jg
inc
mov
xor
mov
ja
icebp
cltd
xchg
adc
push
dec
add
int3
iret
aas
jl
aad
into
movsb
lods
inc
dec
pop
xor
sbb
dec
add
xor
inc
mov
or
xchg
dec
jp
sahf
push
xchg
in
jl
jecxz
or
mov
jnp
testb
xlat
lahf
push
sbb
push
xchg
or
ret
xchg
lret
rcr
test
cmc
lods
cmc
scas
cwtl
adc
push
icebp
out
xor
cltd
push
stos
mov
adc
xchg
inc
loop
dec
mov
hlt
call
rcrl
pop
jg
adc
rorl
push
out
add
dec
es
vmovntps
sub
daa
mov
inc
mov
mov
or
fisubrs
push
jmp
fisubl
mov
mov
cmp
cltd
cltd
fwait
pop
jp
out
shrl
xor
sbb
fwait
mov
xchg
fsub
cwtl
test
shr
jnp
add
testl
lcall
xchg
add
leave
mov
dec
mov
mov
adc
cmp
jmp
adc
int
lea
pop
sub
bound
pop
cmpsb
and
lahf
or
sub
insl
pop
lcall
lods
mov
insl
xor
sahf
int3
add
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
jle
jg
jle
inc
sub
in
call
inc
xchg
mov
jb
lds
sbb
fnstenv
iret
xor
je
dec
ljmp
push
je
lods
cmpsb
pop
jbe
ret
roll
in
insl
mov
pop
test
jle
and
xchg
int
add
cmp
es
or
xor
int3
mov
and
jl
clc
pusha
fisttpll
dec
lcall
bound
sbb
sahf
inc
jo
aaa
jo
xchg
das
les
lahf
mov
ja
mov
and
sub
fstps
cmp
jmp
ja
push
int
in
popf
xchg
out
jae
data16
aam
data16
ficoml
mov
iret
xchg
push
mov
pop
sub
cmpsb
cmp
pusha
daa
sbb
fs
or
and
sahf
pop
pusha
push
jp
mov
arpl
push
clc
cmp
mov
dec
mov
cmp
mov
sbb
roll
xchg
stos
push
sub
lcall
bound
std
enter
push
mov
jmp
mov
and
and
sub
sarl
xor
inc
icebp
dec
lsl
xchg
xchg
aaa
push
xor
call
fwait
jns
sub
mov
dec
mov
mov
adc
inc
fnstcw
push
add
jb
mov
out
or
sarl
mov
sub
push
adc
loope
xor
pop
mov
dec
scas
fistpll
sti
mov
inc
cld
out
pop
xchg
cmpsb
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
stos
std
pop
popf
loop
jle
jg
jle
xchg
or
movsl
in
xchg
mov
mov
sbb
push
jecxz
addr16
gs
inc
lret
jnp
mov
push
cli
mov
aaa
pop
lods
mov
dec
pop
sub
fnstsw
sarl
or
pusha
or
add
lea
pop
fsubp
daa
xchg
adc
inc
jbe
icebp
test
movl
sub
sti
sbb
fnstsw
imul
or
repnz
rcrb
jmp
out
dec
dec
cmc
mov
push
and
mov
outsb
cmp
shl
out
iret
jo
inc
dec
cmp
xor
loope
xor
out
js
push
xor
cmc
cmpsb
pop
add
gs
test
lods
fisttpll
push
js
shl
sbb
pop
cmp
inc
xor
push
fstpt
je
into
mov
xor
mov
cmpsl
lcall
mov
psubusw
mov
inc
add
ret
mov
jb
xor
aaa
int
inc
outsl
call
cwtl
sbb
repz
sbb
repz
mov
clc
xor
jae
mov
enter
mov
ficoml
cmpsb
ja
test
fldt
ds
push
ljmp
nop
jp
std
loopne
es
push
adc
push
stos
enter
mov
or
loopne
dec
adc
push
andl
inc
pushf
dec
mov
jbe
mov
pop
stos
sub
push
sbb
sub
incl
aas
lods
andb
jg
dec
mov
sahf
les
lods
movsl
jl
fistps
push
jb
pop
or
in
cli
syscall
out
mov
cmp
mov
cmp
mov
pop
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
add
jle
aas
jg
jle
cmpsb
mov
lret
and
cs
push
jmp
and
je
mov
in
xchg
pop
inc
test
je
jnp,pn
push
pop
lahf
shr
sbb
les
in
cwtl
ljmp
test
sbb
pop
xchg
scas
popa
arpl
mov
sub
mov
or
xchg
aam
and
in
and
repnz
jmp
jg
into
pusha
pushl
out
and
xor
sub
pop
out
fcoml
jbe
xchg
scas
icebp
mov
mov
push
xor
aas
cld
scas
jg
into
pop
mov
adc
lret
xor
leave
ret
lock
push
pop
cmp
cmpsl
xor
jmp
vsubsd
js
hlt
and
sahf
out
scas
int3
sub
xchg
pop
fs
jge
lret
lret
push
shlb
pop
cltd
test
pop
jns
cmc
fcmove
hlt
jb
xor
fbld
push
out
cmpb
and
imull
xchg
jg
adc
into
sbb
xchg
xchg
pop
out
addl
add
pop
aam
lcall
scas
mov
cmp
stc
adc
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
xor
aas
jg
jle
test
stc
or
je
mov
loopne
sbb
dec
stc
sub
mov
shlb
movsl
pop
mov
loop
call
ret
addl
xlat
popf
mov
gs
arpl
jbe
lods
les
bound
pusha
mov
cmp
insb
icebp
stos
sarl
insl
inc
adc
clc
jb
jno
fwait
mov
inc
sarb
scas
push
rcll
xor
cs
sarb
arpl
lret
pop
jg
dec
aaa
mov
jp
mov
lcall
inc
test
or
adc
push
sti
mov
mov
stc
sti
aas
fwait
xchg
shlb
mov
mov
sbb
enter
lea
outsb
and
dec
js
xor
js
les
loopne
push
pop
sbb
sbb
xchg
shlb
inc
dec
adc
psubusw
out
andb
dec
out
mov
std
ljmp
push
xchg
jl
cld
aam
popf
test
mov
xchg
and
and
or
mov
and
mov
daa
js
movsl
lds
xchg
mov
popa
and
jne
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
xchg
jge
jle
aas
jg
jle
adc
out
fdivrs
sahf
xchg
jo
loopne
shlb
xchg
mov
inc
aaa
inc
mov
test
jle
dec
add
push
bnd
cmp
leave
or
cmp
mov
bound
dec
insl
push
mov
mov
int
jne
test
xorb
jge
mov
jae
lods
jno
xor
fildl
data16
xchg
jae
rorb
dec
mov
push
out
pushf
std
sbb
shrl
mov
std
nop
out
inc
addr16
or
jae
int3
mov
mov
jle
inc
daa
aam
mov
inc
out
jl
ror
pop
or
leave
cmp
push
mov
jbe
mov
sarl
inc
sub
pop
cmp
pop
jno
test
js
divb
pop
test
sbb
inc
xor
mov
sbb
in
mov
jbe
sahf
inc
stc
inc
add
inc
push
cmpsl
aam
add
dec
cmp
and
or
xchg
jns
jl
inc
fwait
jns
insb
in
mov
mov
adc
stc
scas
xor
push
repnz
sbb
sub
movsl
jo
push
mov
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
add
lcall
jg
jle
pop
mov
adc
pop
bound
cmpsb
push
jbe
sub
ficomps
cmp
repz
push
bound
enter
xchg
sbb
sub
icebp
lahf
dec
stos
test
push
push
lds
mov
jl
mov
mov
imul
mov
aam
out
lret
inc
xchg
adc
jne
or
popa
push
mov
lods
ds
or
push
pop
fst
insb
xchg
pop
mov
in
and
dec
fldcw
push
dec
dec
testl
inc
loopne
icebp
fadds
lods
addl
sub
inc
scas
add
pop
xorb
jl
inc
mov
push
inc
pop
inc
sub
mov
fisttpll
iret
jno
push
add
data16
jbe
and
sbb
loopne
negb
jmp
imul
pxor
test
sbb
lods
sbb
ret
pop
lea
push
dec
push
push
dec
adc
or
mov
inc
jge
aam
outsb
dec
repz
dec
inc
dec
rorl
fwait
and
inc
nop
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
pushf
bound
add
stc
jle
aas
jg
jle
les
add
xorl
dec
fbld
sbb
pop
xchg
and
fwait
sbb
mov
js
or
fnstcw
cmp
out
xchg
adc
jns
int3
int
rcll
sub
bound
fwait
mov
jbe
pop
je
lods
mov
adc
sub
test
fucom
aaa
push
push
jb
lea
sub
xchg
mov
dec
push
aad
in
scas
jmp
cmp
js
inc
test
jb
dec
dec
jo
push
adc
and
hlt
stc
mov
jmp
popf
mov
fucomip
call
sarb
jecxz
or
or
mov
inc
push
jo
xchg
cmpsl
push
lahf
cmp
mov
mov
xor
dec
xchg
mov
xor
xor
xor
je
jb
or
ficoml
ret
aaa
mov
inc
cltd
jle
jo
xchg
in
jecxz
popf
pop
aaa
jl
pop
das
and
cmp
adc
pop
pop
xlat
pop
mov
mov
jge
inc
pushf
or
out
push
inc
xor
jle
mov
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
or
cli
jle
aas
jg
jle
add
adc
jnp
and
outsb
fldenv
xor
dec
imul
and
ret
ret
add
push
sub
lcall
in
pop
dec
push
inc
mov
mov
adc
or
dec
push
pushl
and
add
lcall
fmuls
push
xchg
and
mov
ljmp
pop
aas
cmc
jmp
mov
push
mull
jge
lds
aad
mov
rcll
jnp
ret
aaa
fcmovb
dec
test
or
subl
inc
jne
cmc
ret
pop
hlt
and
lods
bound
mov
pop
dec
xor
mov
sbb
mov
dec
cmp
xchg
test
and
xchg
imul
lcall
out
mov
mov
mov
xor
lds
dec
sbbl
adc
jle
iret
xchg
sbb
pop
cmc
push
push
push
fsts
mov
mov
fs
lods
icebp
pop
push
aas
sub
out
in
ret
in
add
mov
mov
sbbl
jmp
fmull
cld
popf
mov
scas
and
fsts
jno
jle
aas
jg
jle
mov
adc
ret
movsl
movsl
mov
mov
ja
les
sub
inc
repnz
das
scas
jl
pusha
mov
or
pop
lds
loope
jae
cmpsb
scas
test
and
inc
xchg
and
dec
imul
ds
inc
fistps
in
xor
jnp
sbb
and
push
jae
pop
cltd
and
mov
insb
xor
xchg
outsb
stc
jle
or
inc
xchg
fwait
cmp
les
adc
clc
dec
mov
push
call
dec
jmp
pop
add
aaa
in
jns
pop
bound
add
pop
fisubs
pmullw
sarl
into
fdivs
out
cmp
adc
xlat
jno
orl
nop
xchg
mov
fldt
call
xchg
mov
or
xchg
mov
cli
popa
andl
dec
xchg
das
loopne
ljmp
mov
js
sarb
dec
outsl
shlb
movsb
inc
adc
aad
mov
test
dec
std
sub
sbb
add
xchg
notl
jle
cli
pop
mov
scas
mov
lret
and
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
pushf
push
xor
jle
aas
jg
jle
cs
sbb
leave
jo
xor
mov
jmp
mov
outsb
ja
mov
cltd
cwtl
pop
ljmp
mov
stos
xorb
or
mov
xchg
shll
mov
scas
insb
int
and
pop
pop
mov
in
add
xchg
jo
shr
pop
push
fidivl
jbe
addr16
xchg
push
push
fildl
mov
aas
call
je
fmul
lds
sub
xchg
push
jae
and
shlb
sahf
push
sub
jl
loop
cmpsl
push
xor
jns
stos
or
xor
shrl
rorl
mov
inc
push
jmp
sub
stos
pop
test
mov
jecxz
jl
push
stc
mov
xor
dec
mov
lret
adc
dec
ror
jno
push
inc
push
sub
xlat
and
xor
enter
jmp
mov
gs
fsubrl
data16
setbe
das
or
movsb
jb
sbb
and
jo
dec
or
fidivs
cmpsb
mov
mov
cld
jno
dec
in
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
test
mov
icebp
xchg
mov
fwait
cmp
jle
adc
jecxz
cltd
add
sbbl
sub
dec
fisubs
aam
fldl
push
sar
lods
lret
int3
xchg
push
je
jno
xor
adc
adc
or
mov
rclb
adc
rolb
xchg
es
fnsave
xlat
pop
mov
sub
cmp
in
mov
xchg
inc
inc
dec
movsb
stos
xchg
outsl
mov
jle
mov
cld
std
inc
xor
cltd
jge,pt
adc
cs
jg
es
sbb
xor
cmp
ljmp
orl
sub
imul
pop
cmp
mov
mov
pop
inc
cltd
loopne
jp
push
imul
push
pusha
rorb
aad
add
inc
jl
nop
fs
leave
sub
jne
dec
sti
mov
mov
ja
test
int
push
add
mov
lahf
filds
adc
inc
decl
mov
xchg
enter
sarl
mov
cmpsl
sbb
and
xchg
in
loopne
dec
les
xchg
rcll
sbb
call
lea
jmp
and
and
sti
cmc
scas
dec
ret
mov
jle
aas
jg
jle
out
sbb
popa
mov
loope
addr16
ljmp
es
pop
imul
jp
jge
mov
mov
and
pushf
sub
ljmp
lods
popa
decl
push
add
imul
mov
mov
fs
mov
xchg
out
sti
or
ss
test
pushf
dec
cmpb
xchg
adc
fsubrl
in
jns
jbe
mov
sub
mov
dec
sahf
pop
int
adc
pop
xor
push
mov
pop
insl
cmpsl
pop
leave
add
sub
daa
ss
pusha
xor
hlt
repnz
cmp
cltd
push
jns
xor
xchg
out
dec
push
orl
xor
sub
xchg
stos
dec
bound
jb
push
adc
dec
lds
filds
xchg
and
loop
xchg
mov
mov
pop
iret
adc
inc
gs
daa
sbb
sub
jge
lea
jo
or
stos
jbe
sub
fstpl
addr16
pop
or
mov
cltd
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
shlb
adc
out
pop
in
sub
push
mov
fcomi
out
mov
jmp
cmp
cwtl
adc
fs
out
rorl
jl
shld
add
inc
ss
mov
add
push
mov
or
jb
xchg
push
or
inc
push
cmp
cltd
lret
and
cmpb
jge
mov
lcall
jecxz
dec
push
adc
call
or
js
loope
insl
je
pop
mov
or
movsl
fcos
out
insl
push
iret
dec
mov
fdivl
addl
push
lea
adc
arpl
push
pushf
and
lret
jns
xchg
sbb
lea
or
lret
jg
adc
add
hlt
jae
out
sbb
sub
push
and
scas
cmp
pop
mov
cmpsl
inc
scas
dec
cs
or
cmpsb
add
sarb
add
adc
mov
xchg
mov
out
add
mov
jns
jl
push
push
in
aaa
cld
jmp
mov
clc
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
jle
int
ss
aas
jg
jle
sar
popf
sti
dec
js
das
shl
ljmp
pop
push
sbb
movsb
sub
push
jbe
add
fs
sbb
es
adc
dec
mov
mov
sahf
imul
xor
cs
mov
fbstp
test
inc
lds
add
xchg
xchg
loope
cmpsl
push
adc
xchg
call
inc
insl
scas
hlt
nop
jae
pop
aad
sub
sbbb
pop
pop
mov
mov
mov
push
add
cmpsl
inc
dec
loope
aas
mov
push
cltd
jnp
loop,pt
jle
inc
dec
add
aad
sub
mov
imul
or
xor
sbb
sub
iret
cmp
or
fcompl
out
clc
inc
fbstp
or
pop
cmp
hlt
inc
xchg
dec
jl
in
shlb
mov
push
push
and
fsubrp
jge
lcall
pushf
jns
and
adc
ss
xchg
ret
fnsave
and
fneni(8087
dec
inc
jg
or
mov
leave
adcl
cmpb
inc
mov
mov
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
xchg
das
int3
es
int3
pusha
xchg
push
daa
jge
mov
sub
rcll
in
pop
jae
xchg
ljmp
js
sub
mov
adc
data16
movsl
stos
cmp
mov
jae
enter
cmp
push
jne
push
xchg
sub
xor
cli
pop
cmp
inc
or
lock
mov
xchg
inc
jp
jo,pn
sub
push
ret
sbb
mov
mov
ja
xchg
and
ret
or
dec
out
movsl
dec
sbb
and
inc
mov
mov
lods
imull
or
cmc
idiv
jp
pop
xor
bnd
lcall
in
jo
test
das
add
fs
sub
inc
jns
mov
lock
ret
push
fildl
arpl
mov
push
pop
outsl
mov
push
stos
xchg
loopne
cmpsl
sbb
imul
stos
cmp
push
negb
test
mov
and
rcrb
mov
testb
jge
jge
mov
std
dec
rorl
pop
cmp
test
add
jmp
and
lods
lret
movsl
sub
adc
jle
aas
jg
jle
repnz
fldenv
stos
bswap
loopne
cmpsb
aaa
push
push
cmp
insb
adc
pop
adc
adcl
jbe
inc
out
add
sub
cmp
or
rcll
mov
stos
jno
push
push
jp
sub
push
add
mov
mov
xchg
mov
enter
dec
push
or
into
jo
mov
xchg
nop
xor
js
dec
cs
mov
inc
jg
sub
lods
mov
out
push
hlt
movsb
std
dec
and
and
in
jbe
sbb
and
andb
or
cmc
loop
pop
call
sub
roll
lds
out
decl
or
cmp
add
cmc
cmc
pop
test
pop
insl
xchg
adc
or
pop
jnp
and
hlt
orb
and
clc
rcrb
imul
loop
mov
mov
and
sbb
mov
jne
insb
cmp
rol
jnp
inc
into
mul
xor
lret
sub
cmp
jno
mov
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
push
into
in
idivb
aas
jg
jle
movsb
inc
or
mov
mov
gs
ja
jo
mov
mov
or
ja
pop
adc
fimuls
scas
jge
pop
jne
pushl
inc
sti
fcmovnbe
adc
sbb
mov
cmp
imul
add
cwtl
imul
test
fdivl
add
aaa
push
jg
pop
lahf
fwait
mov
cmpsb
xchg
inc
in
mov
ljmp
sub
cli
sar
and
int3
lds
adc
insb
sub
push
add
mov
fistpll
xchg
popa
cmp
and
pop
add
add
lods
cmp
jle
clc
test
push
scas
push
les
andl
mov
repnz
inc
gs
lods
xorl
mov
or
hlt
cmpsl
pop
jae
or
sub
testl
push
sub
andl
test
inc
mov
mov
mov
sbbb
movsl
push
dec
sbb
mov
loope
iret
and
jnp
sbb
adc
sarb
outsb
xor
in
jge
dec
or
test
mov
push
or
jmp
test
test
jge
cmp
adc
push
lret
jle
jg
jle
adc
fwait
out
jmp
das
mov
lcall
mov
call
inc
sub
sub
jnp
adc
jne
and
in
mov
sub
cmp
sbb
out
add
inc
sbb
lods
xor
pop
dec
xchg
jge
loop
push
inc
test
xor
cmp
ret
imul
ffreep
cmp
lods
aaa
inc
push
pop
mov
mov
pop
addr16
cmp
aas
and
mov
sbbl
leave
inc
add
cmpsl
jnp
sbb
sub
shlb
sbb
stos
sbb
imul
aam
mov
push
outsb
repnz
adc
mov
dec
pop
cs
fsubs
and
out
repnz
je
outsb
je
lret
pop
dec
dec
imul
mov
sbb
or
dec
out
arpl
add
push
mov
sub
ljmp
fwait
sub
jl
sbb
jge
call
ret
js
outsb
lds
cmp
fxch
or
xor
nop
xorb
or
popf
jb
add
ret
add
add
jge
out
mov
xchg
insb
mov
jle
sbb
xor
inc
push
sarb
jecxz
sub
pushf
loopne
stos
jno
jb
dec
mov
das
lret
andl
xchg
mov
inc
xchg
daa
xchg
aad
inc
or
push
jl
or
mov
sbb
add
insl
jns
mov
xor
int3
xchg
imul
rcrb
jne
movsl
sbb
push
aas
cwtl
loope
adc
jno
sub
or
stc
jp
mov
jl
test
imul
jg
imul
pop
jge
insb
pop
inc
out
movb
jl
das
int
or
mov
mov
insl
cmpsl
cwtl
cmp
data16
leave
dec
loop
sub
mov
icebp
push
and
por
pop
jge
mov
adc
mull
jnp
mov
jb
loopne
xchg
pop
jp
jnp
out
popf
sbb
stos
jge
cmpsb
fcmovnbe
xchg
out
push
into
xchg
pop
mov
adc
or
dec
int
inc
mov
cmp
cmc
mov
std
or
xorb
mov
mov
xor
add
mov
imul
mov
jmp
inc
sbb
gs
jae
dec
cltd
int3
xor
aas
jg
jle
lods
incb
inc
jae
pop
inc
aas
mov
push
inc
cmpsl
mov
push
jbe
push
add
sub
gs
stc
std
in
sbbb
jp
hlt
jae
mov
xchg
inc
leave
stos
das
sub
mov
xchg
lcall
push
cmp
loopne
cmpsl
frstor
lds
add
push
das
ds
fnstsw
jno
jae
xorb
inc
jge
ds
in
jns
pop
daa
sbb
push
sbb
or
dec
rcrb
pop
mov
ja
push
sub
push
or
jecxz
mov
test
or
and
push
xor
cmpsb
dec
aas
pop
mov
cmp
nop
or
jg
mov
xchg
movsb
cmp
add
aad
pop
adc
lds
sub
xchg
or
scas
add
cmp
mov
xor
cmp
mov
xlat
push
adc
adc
mov
shl
mov
mov
xlat
pushf
or
dec
push
scas
mov
cltd
jl
movsb
jle
call
pop
std
push
adc
lcall
imul
push
adc
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
addb
shrb
aas
jg
jle
push
imul
enter
les
push
jb
cli
aad
inc
pop
and
mov
js
and
and
ret
push
insb
push
inc
addr16
pushl
xchg
adc
sub
pushf
movsl
sub
cmc
nop
int
stos
or
out
mov
lds
and
sub
jmp
push
and
test
aad
les
push
call
dec
xlat
xor
mov
pop
sbb
push
mov
popf
in
push
testl
loop
les
dec
adc
ret
popa
add
xchg
aam
popa
lods
out
stos
sahf
sahf
push
inc
jae
mov
dec
call
shlb
fnstsw
test
jmp
not
div
jp
add
dec
xor
cmp
mov
push
push
into
sub
push
scas
cmc
jne
jl
cli
mov
fstpl
mov
sub
repz
shlb
sti
mov
pop
dec
pushf
adcl
pop
data16
scas
jne
out
js
xor
mov
outsb
jmp
popa
pop
js
andl
or
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
inc
stos
mov
aas
jg
jle
or
popf
sbb
ror
fs
rolb
xor
inc
stc
cmpsb
xlat
jl
jmp
std
pop
mov
inc
lods
mov
xor
mov
xor
pcmpgtw
aad
add
add
mov
sahf
cmp
mov
daa
sub
dec
add
fdivl
jns
or
fwait
imul
jns
inc
mov
mov
scas
mov
sub
mov
add
sbb
ffree
dec
mov
insb
push
loopne
lock
in
out
jne
push
stc
mov
cmc
jns
cmp
jb
out
mov
cmp
pop
sub
or
lret
push
aaa
xchg
inc
lea
push
xor
loopne
sbb
ds
xadd
jb
roll
addl
sbb
push
into
jge
in
adc
and
xlat
out
ja
push
xor
push
push
shr
dec
fstp
loopne
subl
test
pushf
push
bound
test
pop
inc
out
nop
jmp
mov
push
adc
roll
imul
jmp
into
jb
pop
inc
pop
fisttpll
nop
pushf
ficomps
lea
aas
jg
jle
xchg
mov
add
push
fwait
lock
jge
add
cmp
mov
enter
xor
mov
sbb
inc
pusha
mov
andb
addr16
mov
mov
jle
in
notl
xchg
mov
cmp
das
cmp
add
in
jns
movsl
dec
je
push
aaa
movsl
jnp
push
inc
lds
das
lea
fildll
xchg
pop
movsb
add
and
call
add
pop
lods
test
mov
daa
fstpl
jg
and
aam
dec
cltd
cmpb
ss
pop
adc
or
xchg
sarb
ljmp
xor
test
dec
cmp
mov
jmp
mov
cltd
xchg
hlt
icebp
add
rcrl
mov
out
aaa
or
cmp
mov
movsb
out
cmc
jecxz
aam
negl
mov
push
lds
fistpll
cld
loop
imul
xchg
mov
or
sahf
push
fldenv
cmp
jl
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
pop
xor
jle
aas
jg
jle
test
push
mov
into
jne
cs
stc
cmpsb
add
push
mov
cmp
repnz
call
out
repz
outsl
push
jl
insb
jnp
test
out
imul
push
dec
pop
pop
xor
aam
jnp
cmc
stos
add
scas
push
add
cli
push
into
xchg
and
ret
cs
in
mov
es
xchg
jns
out
sub
ja
arpl
js
outsl
xor
int
push
dec
cmp
sub
xchg
push
jp
mov
xor
mov
das
and
pop
mov
ja
push
xchg
stos
test
jecxz
lcall
sub
jb
pushf
loop
shlb
jmp
stos
inc
outsb
out
insl
jmp
ret
dec
xorb
dec
jecxz
or
push
je
xorl
imul
inc
mov
fildll
lret
call
dec
ret
add
push
mov
stos
daa
add
adc
pop
shlb
inc
insl
rcr
jp
cmp
push
pop
sub
pop
cld
inc
xchg
and
fwait
mov
xor
pop
fs
addl
dec
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
pushf
mov
jle
aas
jg
jle
xchg
adc
shr
lcall
cmp
xor
pushf
loope
bound
bound
pop
inc
push
clc
cmpsb
out
lret
xchg
icebp
pop
push
cmp
mov
add
addr16
ret
clc
leave
xchg
mov
dec
hlt
rclb
and
push
leave
and
pop
adc
cs
or
sbb
add
mov
shrb
loope
mov
push
mov
dec
add
adc
push
adc
mov
xor
jnp
loop
push
repz
add
out
xchg
xor
pushf
mov
sub
inc
enter
loope
enter
pop
fisubrl
fisubl
sti
jo
dec
les
test
or
lock
add
add
xchg
fwait
gs
fwait
push
cwtl
inc
jnp
scas
push
cmpsl
lds
cmp
add
sbb
loopne
clc
adc
cmovs
stos
rcr
xchg
aas
push
xor
and
repnz
cmc
jge
rclw
or
sbb
into
xchg
jns
cmp
xor
jmp
mulb
jne
lds
mov
lret
push
pop
ret
jle
jg
jle
pop
jecxz
sbb
mov
icebp
std
mov
addb
fistl
adc
pusha
leave
mov
xchg
jo
je
loope
jmp
xor
bound
cmp
decl
pop
stc
xlat
daa
cmp
cmp
sub
or
cmp
mov
push
xor
cld
shrb
ja
sbb
call
cmc
pop
ds
or
lock
mov
sahf
xor
popa
jle
scas
lods
pop
add
mov
pop
xchg
in
test
lds
mov
int3
dec
lock
fadd
mov
rolb
nop
lahf
rclb
and
out
jbe
cli
vunpcklps
lods
dec
test
jmp
ja
mov
rcr
testl
cmp
cs
pusha
cltd
cmpb
pusha
sbb
out
sub
outsb
ss
push
pushf
sbb
int3
dec
int3
popa
and
in
sub
test
mov
mov
adc
sub
mov
push
add
add
aas
mov
cmp
enter
addl
jle
aad
ds
push
sar
cs
jo
cmpsb
ds
cli
pop
stos
pusha
cmp
jns
sbb
stc
mov
push
xor
cmpl
cs
mov
xchg
pop
push
pop
mov
cmp
cmp
lds
data16
sub
neg
das
pop
xchg
mov
ret
push
push
rcll
dec
fs
andb
shl
jo
mov
ljmp
mov
cmp
xchg
pop
sbb
rcrl
mov
adc
stos
inc
movsl
mov
bound
pop
jl
push
dec
mov
lss
jge
sar
test
ret
and
data16
pusha
sub
jns
sub
mov
inc
cli
add
cltd
in
cmp
add
sub
bound
jbe
xor
mov
add
out
jne
inc
in
shll
fistpl
sti
mov
out
dec
and
mov
int
je
cmp
xchg
pop
mov
xchg
and
inc
sbb
or
sbb
pop
add
bound
xor
push
dec
test
je
jmp
xchg
mov
mov
mov
ljmp
cmpl
jg
jle
sbb
inc
mov
fwait
xlat
sti
mov
std
pop
cmp
test
incl
arpl
xchg
jge
push
js
mov
mov
notb
push
popa
pop
cmpsl
lret
cld
mov
movsl
cltd
pop
sbb
xchg
lahf
aam
sub
loopne
or
dec
adc
aam
push
dec
out
jcxz
mov
scas
jge
loope
jae
leave
xor
test
addl
sub
es
shrl
and
mov
xor
pop
mov
mov
pop
cmp
sub
lods
cld
fdivrl
lods
xchg
pushf
out
insl
push
movsb
addr16
push
stos
cmpsb
in
dec
add
pop
pop
add
ret
mov
pop
out
add
mov
lea
gs
xchg
xor
outsb
pop
cmp
addl
adc
inc
ret
mov
xor
and
pushf
gs
fs
popf
test
into
fsubrs
dec
lods
push
dec
insl
inc
push
push
cmp
faddp
mov
mov
dec
cltd
sahf
jecxz
ja
lods
or
or
les
sbb
add
add
sti
lret
jns
rclb
xchg
dec
add
jg
jle
aaa
cli
dec
mov
xlat
xor
es
scas
mov
es
addps
jmp
xlat
sbb
pop
lret
pusha
rolb
loopne
cmpsb
mov
mov
daa
stc
mov
xchg
into
cmpsb
into
out
pop
daa
jmp
hlt
push
in
ds
out
addb
sarl
lods
push
mov
mov
mov
mov
lret
xchg
sti
jecxz
sub
lea
stos
sbb
mov
sub
mov
mov
push
jle
lods
outsl
in
popf
pusha
pop
fisubrs
insb
cmp
scas
daa
jne
std
dec
sbb
mov
jecxz
xor
add
xchg
inc
je
das
push
data16
popa
iret
cmpsb
test
test
pop
pop
test
ds
pop
enter
fwait
and
xor
xchg
pop
adc
sbb
idivb
pop
jbe
cmp
jae
fisttpll
mov
xchg
lret
dec
popf
add
ret
pop
fisttps
push
lods
pusha
orl
inc
cmpsl
sub
test
loope
adcb
adc
std
inc
out
dec
push
fldcw
adc
push
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
inc
movb
jle
push
xchg
data16
mull
xor
js
cmp
jg
cmp
pop
icebp
ret
scas
fldt
lods
sub
test
xlat
push
sub
lods
shr
sahf
in
rorb
ret
inc
and
sahf
lods
test
and
dec
std
dec
movsl
add
xchg
jmp
in
iret
jb
push
inc
cld
cltd
test
jo
xchg
int3
or
pop
aaa
or
es
cmpsl
xor
jmp
cmp
mov
sbb
mov
xor
popf
mov
mov
loop
cmp
mov
jns
movsl
pop
push
in
jb
shrl
xor
aas
push
les
repnz
outsb
mov
fwait
mov
rclb
cmpsb
mov
out
imul
fstpt
add
push
push
bound
dec
in
jg
les
adc
insb
stos
ret
outsb
scas
push
shrb
mov
test
movsb
sbb
hlt
and
or
adc
inc
cwtl
loope
jbe
push
xchg
jbe
flds
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shr
in
dec
inc
xchg
jle
inc
xor
iret
in
test
jl
data16
std
leave
call
pusha
iret
les
xchg
pop
push
pop
fcoms
xchg
jecxz
dec
push
sti
xlat
bswap
add
cmpsb
shrb
sub
js
repnz
adc
push
arpl
dec
inc
sub
lods
nop
movsbl
xchg
lret
ljmp
sub
inc
push
xchg
mov
std
data16
xchg
and
cmc
gs
mov
pop
pop
xchg
bound
jmp
aam
dec
in
test
jg
out
fisubs
jae
hlt
outsb
mov
insb
in
mov
enter
sti
dec
cmpsl
push
ret
cmpsl
sbb
jns
inc
xor
fs
int
in
mov
inc
leave
imul
xchg
or
pop
and
add
add
mov
mov
sbb
xor
iret
sbb
pop
dec
and
pusha
push
lcall
les
push
lret
add
inc
sahf
jle
xchg
lock
pop
lret
mov
cmp
test
pop
pushf
dec
stos
das
mov
fmull
jle
mov
add
enter
inc
hlt
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
