push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
pop
jle
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
fcomip
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
in
fsubrp
cmp
cmp
cld
test
enter
mov
fcos
fmulp
mov
jmp
jmp
clc
lret
fcmovb
fld
aad
fcmovne
testb
jecxz
test
out
loope
hlt
aad
enter
not
aas
test
cmpb
test
fildl
xchg
icebp
ljmp
into
in
repnz
ss
repnz
idivl
hlt
loopne
lret
in
int
mov
out
iret
hlt
xlat
shl
fprem1
xor
in
push
cld
lock
ror
clc
in
test
in
ror
aam
in
cli
ss
int
fdivr
ret
cmp
std
addl
mov
hlt
mov
xor
jmp
icebp
ljmp
out
jmp
out
jecxz
call
in
jmp
in
icebp
iret
out
cmp
int
mul
rolb
add
jmp
xor
fdivr
repnz
std
cmp
into
fildl
mov
int3
hlt
orb
fdivl
out
or
fsubr
fists
fsubrp
add
add
rcr
fcmovnu
mov
pop
or
add
or
jle
dec
std
fsubr
fcmove
shr
loop
lret
bnd
out
enter
loope
shl
hlt
iret
adc
fcmovnbe
ret
lret
int3
int3
jmp
dec
ljmp
call
cli
cmc
std
test
fimuls
out
out
xchg
xor
and
div
lret
rcr
aas
in
lock
icebp
xlat
ds
out
out
rorb
xor
shll
imul
clc
rcl
in
std
in
test
in
add
xchg
fucomi
loope
fucom
xchg
out
loop
jmp
cli
fdivrs
into
aam
rolb
sarb
xor
and
rorb
jmp
shl
clc
cld
cmp
std
rolb
aad
enter
loopne
push
mov
enter
rcl
int3
in
cmp
aas
or
loope
call
cmp
cld
mov
lret
into
icebp
shr
aad
stc
sbb
ret
aas
cli
test
div
xchg
fneni(8087
icebp
xchg
adcl
into
fdiv
jmp
adc
mov
out
lret
clc
xor
clc
cmp
std
aad
ret
cmc
repnz
out
xchg
mov
lret
repnz
jmp
test
call
jmp
repnz
out
enter
xlat
in
lret
mov
fists
stc
cmc
clc
xor
int
hlt
in
clc
fdivr
iret
sarl
enter
cld
call
icebp
loopne
lret
icebp
fcomp
leave
fidivrl
sbb
clc
into
cmp
or
fdivr
mov
into
lret
into
cmp
repz
hlt
lock
loopne
hlt
out
faddp
lret
cld
mov
pop
call
shl
hlt
sar
xor
hlt
in
cmp
cmp
int
cmp
not
leave
les
fdivp
cmp
out
leave
lret
shl
in
jmp
std
stc
cmp
mul
cld
mov
aad
cmp
icebp
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
pop
int3
jb
add
or
jle
fmul
loopne
shl
int3
idivl
int3
stc
lock
aas
shl
into
cmp
xchg
rolb
test
addb
out
out
int
clc
aad
into
fnsave
test
out
clc
rol
out
cld
xchg
mov
dec
int3
mov
in
shl
rol
int3
cmp
test
xlat
filds
iret
lret
addl
stc
jmp
in
fnop
ret
fcmovbe
sub
cld
shl
out
fmull
xor
test
cmp
in
cmpl
jmp
cli
int3
into
test
iret
cmc
in
mov
enter
clc
ss
enter
aam
aad
call
fld
fcmovbe
int3
xchg
loope
xor
aaa
hlt
enter
xor
in
test
ret
out
fiaddl
in
adc
divb
enter
or
out
cli
call
jecxz
xchg
jmp
xchg
loopne
int3
xor
enter
stc
not
cmp
sar
testb
mov
into
rolb
xor
in
lret
sti
out
std
test
lret
stc
mov
xchg
xchg
xchg
mov
aam
cli
out
shl
lock
cmc
test
out
repnz
ljmp
mov
jmp
ds
jmp
aas
loope
aad
cmp
loope
fdivr
in
sti
out
std
jecxz
lret
fsubr
in
cmp
rcr
cmp
xor
roll
loope
xchg
out
lds
divl
std
in
iret
hlt
loope
sub
loop
fcmovbe
xchg
xchg
enter
orl
leave
int3
icebp
fsubr
cmpb
mov
testl
xchg
in
aaa
aad
cmp
fcmovnbe
cmp
in
and
cmp
in
mov
fimuls
rcr
fsubrp
ror
push
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fildl
jne
sub
jle
add
out
icebp
in
ret
cmp
hlt
aad
sbb
mov
xchg
cmc
aam
in
aad
cmc
cmc
enter
ror
into
ret
call
cli
fcmove
in
fistl
lret
repz
xlat
cmp
fcmovu
loopne
ret
adc
rcr
cld
mov
loopne
jecxz
nop
orl
cmc
cmp
div
cmp
cmp
in
out
out
or
rcr
xor
fyl2xp1
repnz
in
out
test
aad
ret
aam
fcom
sub
loope
out
lock
jecxz
xor
out
out
cmp
jmp
ffreep
cmp
movl
fldln2
idiv
loopne
in
xlat
frstpm(287
ffree
cld
repz
std
cmc
lret
test
roll
fadd
into
aaa
cld
sar
aas
repnz
test
cmp
fimuls
int3
jecxz
out
ror
div
into
iret
out
in
sti
clc
fcmovbe
ret
mov
jmp
in
mov
iret
repz
repnz
enter
cmp
sbb
test
cmc
call
ljmp
shl
fucomi
fcomp
jmp
xlat
cmp
sti
fsubp
fucomip
xchg
xchg
shr
aam
call
int
aad
idiv
fmulp
cli
faddl
mov
test
lret
enter
ret
jmp
out
jmp
test
enter
fimull
jecxz
xor
into
sti
repz
ljmp
icebp
fldl
lds
jmp
jecxz
ret
fmul
ljmp
fildl
fldl
loopne
mov
xchg
loope
in
aam
aaa
ds
ljmp
repnz
in
out
in
lret
leave
out
mov
aam
xor
xor
aam
int3
enter
in
fdiv
in
fldl2t
xlat
decl
les
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
scas
jecxz
mov
or
jle
in
loope
into
int
xchg
into
clc
lds
mov
leave
in
xor
cli
mov
mov
int
loop
fsubr
in
lret
in
jmp
neg
xor
enter
loopne
incb
mov
clc
out
call
filds
out
call
xlat
shl
lock
div
sti
faddl
jmp
loope
iret
iret
loopne
fsubr
xor
std
out
enter
rcl
mul
repnz
testl
in
loopne
add
xor
cmp
cli
repz
fiaddl
sbb
cli
repnz
xchg
rcl
cmp
xlat
jmp
jmp
xlat
cli
xrelease
jmp
in
fists
jmp
fxch
lret
loope
sar
neg
jecxz
in
aad
in
stc
icebp
out
mov
shll
shll
clc
sar
loop
ret
ds
sti
loopne
ret
cli
mov
shr
enter
xor
cmc
cmp
fcmovu
loope
add
and
jmp
cmp
xchg
out
xor
xor
xlat
jecxz
fcos
cmc
fisttpll
lret
nop
shl
icebp
repnz
cmp
ret
in
ss
leave
cmp
into
xchg
icebp
loopne
cmp
in
mov
test
in
mov
loope
xor
out
loopne
lret
inc
in
ret
jecxz
test
decb
xchg
cmc
fxch
div
cli
cmp
out
out
cmp
cmp
ret
lret
out
mov
test
loope
rol
iret
lock
idiv
std
cmp
loope
testb
fstp
iret
imul
iret
xor
sti
lock
cld
repz
fiaddl
fimull
out
cmc
in
sub
shrb
jmp
cmp
sti
aas
xor
shl
test
ljmp
fadd
in
iret
repz
mov
and
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
push
cwtl
push
mov
or
jle
jmp
frndint
in
xchg
mul
clc
fsubrp
in
incb
fidivs
lret
leave
loopne
shl
in
icebp
xlat
rol
call
out
lea
in
rcl
lock
aas
cmp
cmp
jecxz,pt
fildl
fsub
jmp
shr
mul
icebp
lret
iret
in
cmp
loopne
std
out
fxtract
test
in
std
mov
ljmp
call
fsubr
iret
in
cmp
cmp
div
repz
test
mul
xchg
fstl
iret
xor
cmc
in
leave
lock
fst
hlt
loope
nop
mov
xchg
repnz
repz
cmp
clc
sti
fucom
sarl
aad
sti
xchg
xchg
loop
lret
enter
out
lock
shl
cmpl
sti
test
test
adc
fincstp
cld
fucomp
rcr
out
aad
xlat
sarl
xor
aaa
cmp
fstpt
in
stc
fcmovnb
fucom
lret
fcomp
enter
rolb
call
iret
cmp
cmp
idivl
lock
lret
iret
nop
loop
loope
in
mul
xor
xor
lock
ret
sbb
nop
loope
mov
in
in
xlat
aam
fmulp
fidivrs
fcos
shl
fiadds
jmp
jmp
xor
mul
sti
loopne
into
test
inc
fxtract
fisttpll
shr
int
xchg
out
fnstenv
shl
cmp
lret
cmp
lret
in
lret
fisttps
cs
out
call
xlat
aaa
shr
in
lds
in
out
out
addl
loopne
fdivs
in
lds
cmp
rcr
loop
fdiv
icebp
icebp
xchg
xchg
cmp
lock
mov
and
out
ret
shl
clc
ror
fstp
fucomi
jmp
roll
mov
adc
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
pop
jb
or
or
jle
out
into
sub
into
sbb
leave
jmp
out
fadds
std
fiadds
loop
mov
int
repz
div
cmp
loopne
in
loopne
loop
out
xlat
std
cmc
stc
shr
mov
cmp
out
cmp
out
jecxz
fcmovnu
dec
cli
mov
mov
lock
xor
fucomi
ds
ljmp
sbb
inc
orl
jmp
int
lret
loopne
incb
sbb
enter
ffree
mov
in
lock
into
ljmp
out
test
shr
aad
call
lock
cmp
stc
cmp
roll
jmp
fucomp
std
in
sub
out
mov
ret
neg
in
out
fadd
rolb
aam
cli
in
iret
popl
in
into
fdivr
cmp
int3
in
lock
and
jmp
call
test
out
lret
aaa
fucomip
leave
aad
sbb
repnz
mov
jecxz
call
lock
xor
int3
divl
ds
loope
aam
mov
fisttpll
lret
mov
loopne
call
fstp
addb
shl
fucomip
test
lret
mov
std
xlat
fcom
cmp
cmp
out
and
out
lret
cld
mov
shl
lock
call
hlt
fadds
fmuls
cli
ror
sub
test
out
aam
fidivl
cmp
clc
sbb
cmc
and
ffree
cli
enter
xchg
shr
xor
ljmp
stc
out
loopne
cli
ret
fld
mov
in
int3
rol
xor
add
add
add
fcom
fstp
je
xchg
or
loopne
jle
or
jle
in
clc
xor
jmp
jmp
icebp
lret
xlat
rolb
lret
enter
lret
xchg
mov
das
xor
aad
jmp
cmc
icebp
in
sarb
mov
mov
loop
lock
aaa
cmp
aad
lret
sar
cmp
loopne
sub
sub
rcr
xchg
lea
stc
jmp
sti
xor
hlt
cmp
in
out
enter
jmp
stc
cld
out
xchg
fldlg2
jmp
fiadds
idiv
cmp
call
cld
out
test
sub
out
fsubr
xlat
mul
into
stc
jecxz
sti
sbb
ror
inc
xchg
repz
cmc
in
ror
ss
hlt
clc
cmp
ret
rcr
cmc
sar
std
sarl
clc
call
repz
ret
in
das
cld
enter
int
std
in
rcl
shl
test
aam
mul
xchg
orl
cli
repz
repnz
jmp
shl
in
lret
mov
ret
ror
fucom
loope
stc
xlat
enter
lret
int
in
repz
in
rcr
int
fldl
xor
sti
cmp
icebp
hlt
in
xchg
fistpll
jecxz
mov
sti
rcr
out
out
loop
fidivrl
shl
std
stc
stc
call
stc
fcmovnu
jecxz
fcmovnb
lret
jmp
push
shr
cmp
jecxz
xlat
lret
leave
fiaddl
ds
rorl
sti
test
in
aam
cmp
in
repz
xor
sar
fcom
into
stc
xchg
ljmp
xchg
cmp
xchg
mul
fld
sub
sti
repz
out
xlat
cmp
ret
aad
call
cld
mov
mov
out
out
aad
divb
xor
stc
cmpl
mov
loop
lds
std
ljmp
out
out
ds
test
rorb
test
push
add
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
mov
push
jle
or
jle
stc
mov
in
test
stc
mov
std
xchg
rcl
in
xor
lret
cmp
xchg
test
sub
inc
out
cld
not
out
iret
fsub
repz
cld
fstpt
repz
in
xlat
jecxz
ret
mov
aam
shr
xor
repz
call
cld
xor
test
stc
fstp
faddl
in
loope
xchg
int3
out
cld
cli
cmc
lock
in
loopne
cmp
hlt
and
mov
fsub
rcl
jmp
clc
jecxz
call
loop
std
fcmovnbe
in
in
out
fucomp
fcmovne
cld
xchg
lock
sub
rol
aam
lret
cmp
repnz
xlat
rcl
movb
test
call
shr
fsqrt
out
aaa
out
ds
aad
sarb
mov
in
enter
int
shr
das
ret
in
in
std
repz
loope
fldl
jmp
fisttps
ljmp
out
call
adc
hlt
faddp
call
sti
test
shr
mov
xlat
stc
lret
rcr
cli
test
loope
test
cli
fildl
xor
repz
into
repz
out
cmp
cmc
sti
out
out
addl
cmc
in
xor
ret
out
ljmp
xlat
shl
out
clc
testl
iret
in
out
xchg
ss
hlt
loop
lret
iret
fsub
test
clc
testb
mov
jmp
jmp
das
in
aad
fsubr
sti
cmp
cmp
inc
lret
ljmp
iret
ror
xchg
hlt
icebp
std
fdivrs
aas
in
sti
jecxz
flds
out
jecxz
orl
int
lret
rcl
testl
xchg
in
in
fucomp
incb
add
adc
add
add
ret
int
int
mov
fisttpl
jle
add
mov
sub
clc
iret
icebp
leave
das
into
shr
fnstsw
rcr
sar
rcr
ret
xchg
testb
out
xchg
repz
cli
lret
fdivr
ds
add
call
sti
std
clc
int3
icebp
out
mov
jecxz
lock
cld
fucomp
repnz
sub
aam
ret
hlt
std
loopne
mov
call
aad
in
loopne
jecxz,pt
iret
idiv
loop
icebp
repz
jecxz
jmp
xchg
out
ljmp
repz
cmp
fnstsw
sti
into
call
cmp
ret
in
mov
xchg
out
test
out
cmc
lret
xor
cld
cmpb
enter
jecxz
in
test
aam
in
lock
ror
ds
int3
fucomi
repz
sti
jecxz
xchg
in
neg
fsqrt
xchg
int
in
in
ss
rcl
ds
loope
ret
ret
mov
out
fcmovbe
jmp
repnz
in
cmp
int3
aam
aas
cmp
in
and
test
addl
enter
shll
xor
fdiv
aaa
into
fdivrp
out
sti
shl
loope
rcr
cmc
fucom
xchg
enter
std
test
out
fcmovnbe
sti
ror
leave
into
into
shl
xlat
iret
ret
faddl
mov
icebp
xor
clc
rcl
cli
hlt
fsubr
cmc
out
iret
shl
ret
enter
orb
xchg
jecxz
hlt
xor
sti
xlat
fdivp
shl
aas
jecxz
test
in
in
lret
in
jmp
aam
shr
rcl
out
jmp
shr
fdiv
shl
jecxz
lret
lret
int
filds
repnz
shl
ljmp
test
test
ret
out
ljmp
aas
jmp
in
cmp
in
fcmovne
cmp
out
addb
in
orb
in
sub
aaa
in
hlt
cmp
shr
xor
jmp
aam
mov
jp
jb
adc
or
jle
int3
shr
cmc
cld
aam
jmp
out
mov
fucomp
xchg
aam
out
ljmp
fdivrs
lock
mov
stc
int
nop
call
iret
xor
leave
clc
loopne
icebp
fcmove
int
hlt
loope
add
leave
mov
in
shl
int3
ljmp
repz
test
test
lret
fxch
clc
vpsrlw
xchg
shr
aad
fdivr
cmp
test
ret
fstp
or
call
ljmp
fidivrs
out
jmp
lret
in
sbb
icebp
fst
cmp
or
repz
cmp
test
mov
in
cld
jmp
cld
xchg
rcl
clc
not
repnz
enter
icebp
sub
ret
roll
addl
mov
out
ljmp
jmp
rcl
xchg
incb
mov
icebp
or
mov
rol
lret
aam
repnz
jmp
jmp
in
mov
cmp
in
into
int
fstpt
fdivs
in
in
test
sti
fdivrp
sti
fmul
fdivrp
lret
fisttps
lock
fucomi
into
hlt
ds
aam
idivl
xchg
mov
fdivp
fsubp
xor
stc
leave
div
cmp
into
lock
cli
repnz
clc
lret
out
loope
nop
xchg
in
jecxz
cmp
cli
cmc
incl
filds
int3
fisttps
xabort
rcl
fsubr
cmp
iret
aad
repz
clc
hlt
mov
cld
rolb
cli
fcmove
lock
fucomip
aad
out
fsubp
not
faddp
cmp
icebp
out
out
addb
cmp
xor
rolb
in
xchg
faddl
nop
mov
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
aad
aas
dec
cwtl
adc
jle
add
fldl
lret
int3
sti
fcmovu
xor
std
cmc
loop
cmc
sarl
jmp
mov
xor
xor
rcl
repz
lret
sti
cmp
std
jmp
call
aad
lock
cmp
cmp
ljmp
mul
stc
repz
fucompp
iret
clc
iret
loop
loop
call
xor
test
loopne
not
loopne
in
nop
ljmp
repz
leave
iret
in
aaa
cmp
fcmovnb
adc
loop
cli
leave
test
sub
iret
shl
sar
xor
cmp
shr
div
int
add
add
lea
cli
lea
hlt
iret
jecxz
idiv
f2xm1
adc
stc
clc
into
repz
loop
ret
xchg
fimuls
in
ljmp
cmp
cmp
or
mul
lret
lret
aam
add
stc
ret
lret
fsubp
shl
cmp
xchg
out
test
fists
xlat
loop
fscale
int
cmc
fstp
shr
icebp
loopne
cli
aam
fcmovnu
jecxz
out
in
out
test
cmc
out
sti
int
cmpb
in
clc
leave
xchg
int3
xchg
std
rclb
rcl
fcmovnbe
stc
fcmovnbe
ss
div
xor
aad
loope
test
lret
std
fucomi
sub
aam
and
idivb
clc
cmp
mov
testb
and
aaa
rol
rcl
rcl
aad
shl
cld
out
cmp
aam
hlt
test
shl
nop
aas
fsubr
iret
enter
cli
loopne
fdivrp
rol
lock
stc
mov
lea
in
stc
into
hlt
idivl
iret
cmp
repnz
iret
sar
repz
iret
rolb
hlt
cmc
fdivr
into
in
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
fmul
fcomp
cmp
fneni(8087
neg
call
enter
jmp
sarb
in
div
enter
loopne
loope
fdivr
cld
fnclex
fsubr
loopne
loopne
icebp
loop
out
loop
out
ss
sar
shl
sar
test
sti
sar
nop
loope
out
ret
shlb
iret
xor
std
stc
xor
rcr
in
movl
cld
xchg
test
into
xor
hlt
imul
push
lret
std
clc
in
icebp
aad
call
mov
out
out
aam
and
ss
in
ljmp
icebp
clc
jecxz
call
out
mov
or
out
shl
in
call
call
loope
out
int
fdivrs
rcl
repnz
mov
loopne
mov
adc
out
in
int
push
clc
xor
xchg
cmp
mov
cli
xchg
nop
shr
adcl
clc
neg
aam
not
repz
int
in
rcl
fidivl
std
ds
jecxz
xchg
in
call
ljmp
in
repnz
xor
fnstcw
xor
sarb
xor
in
in
cld
enter
xchg
out
out
shl
std
aaa
sarl
cld
cmc
int
rol
rolb
jecxz
test
out
in
clc
repz
idivb
enter
aaa
cmp
test
ffree
addl
fcoml
xchg
enter
aam
xor
cmp
loope
fnstcw
fdivrp
call
fadd
ljmp
shl
rol
das
int
cmp
aad
aad
rolb
int3
xlat
nop
fucomi
mov
mul
icebp
sti
fcmovnu
hlt
repz
loope
cmp
out
lret
lret
jecxz
aam
pop
aam
cmp
in
jmp
ret
int
in
fldl2t
movzwl
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
aam
repnz
jle
or
jle
or
in
xchg
aad
jmp
sti
sarb
cmpl
sti
mov
clc
loope
cmp
push
icebp
lock
cmp
in
ljmp
fnstcw
add
cmc
sti
stc
loop
nop
fucomip
shr
cs
clc
ret
xlat
idivl
push
sti
icebp
test
in
hlt
leave
in
test
addb
xor
clc
lret
rolb
idiv
xlat
jmp
idiv
out
loop
addb
in
in
cmp
into
cmp
cmp
std
loop
cld
cmp
orl
in
iret
lret
bnd
out
cmp
xor
sti
mov
repnz
aas
or
iret
incb
int3
ret
cld
cmp
lret
int3
cld
addl
or
jecxz
rolb
lock
cmp
std
fadds
mov
cli
sti
lret
ljmp
jecxz
hlt
cli
sti
call
shr
shl
clc
adc
shl
in
xchg
int3
and
icebp
lock
iret
iret
out
ljmp
into
in
sbb
xchg
in
in
iret
ret
loop
xchg
xchg
xor
stc
int
sar
fdivrl
sti
neg
flds
loope
lret
leave
in
lret
into
repnz
jecxz
in
cmc
lock
out
aad
repz
mov
aam
in
clc
jecxz
int3
shl
out
shl
shr
shr
enter
fucomi
test
loope
repnz
sti
testl
out
out
std
lret
lret
iret
adc
lock
sti
lret
fmuls
call
lret
aam
out
loopne
cmpb
cmp
in
cld
xchg
loope
mov
out
repnz
idiv
leave
call
cmc
cmp
jmp
test
int
std
repz
in
shr
ss
xor
or
movb
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
lods
mov
jle
add
xor
shr
ffree
std
loopne
cmc
aad
adc
loop
in
mov
int
shr
out
rcl
aam
std
in
lock
adc
test
lret
xlat
leave
out
loopne
lret
loop
shl
aam
cmc
repz
xlat
jmp
ffreep
call
jmp
lds
cmp
fdivp
sbb
cmp
ret
mov
int
test
loop
mov
enter
in
aaa
cmp
fcmovnbe
clc
rcr
aas
call
mov
lock
mul
xor
cld
out
loopne
jmp
aam
shr
loopne
cmpb
mov
ljmp
into
leave
aam
xor
lock
lock
out
or
test
stc
fcmovne
stc
leave
fisttpl
or
in
aaa
cli
fdivr
repnz
xlat
in
fdiv
rcr
xchg
fdivr
mov
test
hlt
fidivrl
jmp
fdivr
clc
in
aam
rol
fdiv
mov
xchg
mov
ret
repz
aad
hlt
cmp
loop
add
addb
into
repz
jmp
jmp
cmp
hlt
sar
fcomp
out
cmp
shl
repz
jmp
aam
int3
xlat
in
rcl
aam
fcmove
loopne
test
out
mov
out
lock
in
xchg
fst
nop
in
ror
int
les
cmp
hlt
sbb
addl
incb
loope
xor
jmp
in
aam
leave
enter
aad
cmp
xor
test
in
cs
shlb
hlt
sar
sti
cmc
fstp
fsub
cld
mov
xchg
in
xor
xor
out
jmp
ret
out
cmp
out
loope
xor
call
enter
fdiv
stc
cli
ret
out
xchg
into
sub
mov
jmp
int3
enter
lret
int
stos
test
lods
lods
out
push
sbb
jle
add
mov
clc
hlt
xlat
mov
hlt
call
jmp
icebp
enter
aas
fnstsw
in
cmc
jmp
loop
ror
out
hlt
jecxz,pn
enter
shr
cli
cmp
cmp
cli
shl
loopne
loop
std
int3
movb
jecxz
hlt
clc
lret
neg
leave
lret
xlat
sbb
fildl
out
out
fucomp
iret
ror
repz
stc
cld
xor
aaa
cmp
in
std
neg
std
aam
in
clc
stc
fcmovnu
shl
mov
aam
shr
jmp
lock
ds
out
out
xlat
decb
out
xchg
incl
xor
fucomip
fcmovne
aad
loopne
icebp
mov
fmuls
mov
out
sar
aad
fcomp
int
rcr
call
mul
repnz
aam
ljmp
xchg
rcl
ss
cmp
in
fdecstp
sti
lock
ret
call
test
and
enter
cmc
xor
int3
xlat
fucomi
repz
filds
stc
ret
int3
enter
repnz
int3
clc
aam
rcr
in
rcl
cld
out
loop
ret
test
in
test
jmp
cli
fldcw
cli
cmp
fninit
ret
faddp
std
aad
mov
into
sti
xchg
cli
repz
aas
aaa
xor
out
cs
sti
cmp
ljmp
orl
icebp
mov
xlat
int3
shl
cmp
fst
sarb
rcr
iret
out
call
in
lret
leave
jmp
mov
xchg
neg
out
xor
test
ds
cmp
add
incl
mov
adcl
xor
call
lock
in
lds
in
std
mov
cmp
in
repz
iret
lret
enter
ror
shl
xchg
enter
in
cmp
loopne
out
movzwl
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
cs
into
out
jmp
in
sbb
hlt
xlat
fxam
fdivp
shl
leave
ljmp
in
iret
hlt
shl
icebp
jecxz
ror
lret
rcr
fsincos
ds
test
fxch
loopne
xchg
mov
sub
aad
stc
out
ror
jmp
into
test
aas
test
enter
xlat
loope
xchg
xchg
loopne
in
out
xor
in
xlat
xor
xor
in
ret
fchs
rcl
mul
in
jecxz
fildl
ljmp
out
fdiv
in
std
cmp
ret
hlt
out
xchg
cld
sub
lret
ret
cmp
cmp
cld
loope
hlt
into
cmc
aas
repnz
aam
out
fmulp
ljmp
ret
icebp
cmp
xor
in
aam
icebp
orl
ret
out
in
rcl
in
test
xor
cmc
rol
fcmovbe
in
shl
ret
enter
jecxz
fimuls
jecxz
icebp
fcomi
iret
cmc
loop
out
fiadds
enter
ror
xchg
mov
aam
aaa
repnz
fsubp
cli
fucomi
rcr
fcomip
in
cmp
fcmovu
les
in
xor
xlat
aaa
std
into
fcmovnbe
sar
ds
in
test
leave
xchg
xchg
in
lock
out
std
imul
fcmove
cmpl
roll
aas
lret
adc
repz
and
ss
sti
stc
cmp
cmp
fdiv
sbb
stc
hlt
neg
sbb
in
cmp
iret
lret
call
cli
in
rolb
enter
mov
out
in
std
loop
cs
cli
xor
xor
repnz
out
lds
testb
lea
jmp
cld
roll
not
cli
cld
in
decb
roll
out
xor
std
cmp
cli
shrl
enter
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
cmp
xchg
insb
and
or
jle
fdiv
loopne
out
fisttpl
les
shlb
cmp
repz
fcmovnb
cld
cmc
ret
xor
enter
xchg
int
jmp
call
iret
xor
aas
repnz
testb
fsubr
ficoms
xor
lret
icebp
aaa
idiv
cmp
xor
dec
xor
ljmp
mov
icebp
rcl
cmc
xor
test
int
xlat
xor
icebp
std
std
in
mov
fcmovnb
div
xlat
popl
xchg
xor
cld
icebp
jmp
ret
shl
jmp
ret
loope
fildl
out
clc
loope
lds
iret
iret
cli
fsin
xlat
sar
sti
out
fdivr
and
sti
xchg
mov
in
icebp
xchg
out
shr
aaa
xor
std
repz
cmp
inc
movb
sti
fucomp
std
out
call
out
loope
cmp
cmp
lret
ds
lret
ret
ret
aam
fdiv
jmp
xchg
xchg
xchg
jecxz
out
lret
fcmovbe
cmp
cmp
jmp
leave
lock
jmp
imul
jmp
call
cmp
cmc
fdivp
mov
xchg
lret
out
int3
loop
iret
out
clc
cmp
fsub
sbb
lock
test
and
loope
lock
aam
shr
out
int3
cmp
call
into
in
rcl
fimull
stc
cmp
out
loope
shr
int3
in
shl
dec
cmp
cmp
int
rcr
loopne
mov
mov
enter
call
das
lock
xor
out
cmp
loopne
cmc
out
fld
xchg
xchg
ljmp
int3
cmp
out
fcmovne
jmp
icebp
iret
filds
fucomi
rolb
aaa
xlat
aaa
lret
idiv
stc
out
cmp
rcl
add
ffreep
test
icebp
test
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
sub
or
jle
rol
in
xor
xlat
clc
in
out
out
out
hlt
shl
rcr
loope
test
xchg
out
loop
ret
fdiv
lret
iret
fstp
ds
test
icebp
xor
int3
jecxz
add
addl
neg
repz
fcomi
fucom
shr
jecxz
icebp
test
shrl
fptan
repnz
jmp
xchg
mov
ret
jmp
in
lret
ljmp
leave
in
ljmp
out
repz
mov
loopne
int
cli
sub
ret
shr
cli
sti
fdivs
aad
test
stc
testl
test
cld
std
and
xlat
loop
enter
lret
mul
cmc
out
cmp
cmc
rcr
jmp
out
int
mov
out
out
xlat
fdivp
aaa
int
lock
cli
mov
cmc
std
xlat
jmp
rcl
int
repz
out
aam
out
ljmp
cmp
aam
aam
icebp
sti
mov
loop
repnz
ljmp
fdiv
jmp
hlt
and
cld
cli
call
test
enter
xchg
out
in
xor
xor
aam
cmp
xor
shl
cmp
inc
sar
inc
out
lock
shl
ss
xor
stc
cmp
mov
in
fiaddl
loope
ror
aaa
cmp
repnz
cmp
sar
std
test
mov
mov
incb
ret
out
ret
jmp
idivb
ss
loop
cmp
loopne
mul
ljmp
fbstp
int
aad
cmp
stc
xlat
lock
out
mov
cld
jmp
shl
sub
ss
cs
frndint
stc
fidivrl
stc
enter
loope
orb
std
test
repnz
shlb
out
not
fnstcw
add
test
adc
add
add
add
ror
aad
fldt
sbb
or
jle
int
cmp
ret
fdiv
out
cld
out
in
mov
in
fidivs
in
fcmovnbe
cmp
or
iret
shr
shl
cld
fdivrp
ljmp
int
cmp
xor
xor
cmp
aam
rcr
sti
adc
mov
cli
mov
xor
ret
xor
sarl
rcr
rol
shl
loopne
test
test
jmp
in
xchg
fucom
in
cmc
fdivs
ret
sti
cmp
in
aam
into
loopne
stc
fadd
hlt
fsubr
loop
and
fisttpl
adc
in
sar
in
lock
cmp
xor
incb
or
fildl
out
icebp
aad
in
fyl2xp1
xlat
cmpb
std
ljmp
rcr
int
xchg
fdivl
cmp
cmp
sti
fcmovne
cmp
mov
stc
mov
movb
fdivrs
rol
ds
out
rorl
jecxz
fucomi
addb
shl
fucomi
hlt
int
xor
aad
jecxz
shl
loope
sti
jmp
mov
sub
xchg
xlat
cmp
iret
out
shl
hlt
ljmp
aam
test
fucomi
inc
cld
nop
xchg
rcr
xlat
shl
cmp
clc
aaa
repnz
rolb
xchg
jmp
cli
lock
into
xchg
rorl
out
ror
in
cmp
xor
rolb
ljmp
out
int
test
ss
into
int3
xor
sarb
shr
sti
shl
shl
mov
cmc
in
mov
nop
iret
xor
in
shl
not
iret
hlt
jmp
and
shl
sbb
lret
call
fcoml
idiv
ret
xlat
repz
rolb
filds
mov
test
lock
xlat
xor
shl
cld
cmp
iret
xor
rcr
xchg
cmc
sti
test
clc
jmp
aam
iret
int3
fst
outsl
fmull
jnp
push
push
daa
jle
or
jle
loope
jmp
aas
int3
fld
fdiv
in
cmc
icebp
cmp
cmp
cmp
fmulp
cmc
mov
jecxz
lea
jecxz
aad
repnz
dec
repz
rcr
rcl
jecxz
test
call
mov
adc
cs
fucomip
icebp
cmp
xchg
test
out
int3
sti
orl
repz
in
enter
rol
cmc
out
cld
mov
std
fdecstp
in
lret
loop
test
imul
xor
ror
cmc
jmp
cmp
clc
fptan
xlat
cli
stc
in
test
ror
xor
ror
aam
aad
std
cmp
xor
test
jmp
xchg
cld
xchg
fdivp
aad
hlt
xor
fdivrp
out
fcomp
cmp
out
div
ljmp
jecxz
loopne
in
ret
sti
cmp
repz
xor
rolb
lret
in
fadds
hlt
lret
loope
hlt
iret
in
xor
call
repnz
xor
repz
faddl
orb
fincstp
sub
into
hlt
cmp
repz
movb
mov
nop
out
test
jecxz
repnz
shlb
sarb
clc
and
fsubp
ret
into
cli
ficoms
loop
cmc
rcl
iret
aaa
cmp
icebp
cli
in
rol
rol
rcl
leave
mov
call
addb
xor
xlat
cmp
repnz
fdivr
aas
out
ret
repz
std
xlat
lock
mov
in
into
out
repz
shr
ljmp
std
fadd
rcr
ret
test
enter
shr
out
mov
out
xor
ret
xor
repnz
test
sbb
int
test
xor
shl
aaa
repnz
repz
fdivrl
fcmovbe
std
rorb
loopne
in
out
iret
iret
cmc
xor
mov
mov
jmp
ret
xlat
int
fstp
cltd
sbb
mov
jle
or
jle
ljmp
out
xlat
ds
rcr
mov
out
std
movb
rol
loop
iret
xor
in
loope
ror
mov
cld
mov
xchg
xchg
fcmovnu
iret
xor
leave
loope
in
addl
in
jecxz
out
nop
out
mov
aaa
clc
std
cmp
adc
mov
jmp
nop
leave
int
mov
lret
xor
imul
int
fadds
mov
in
jmp
mov
xor
leave
cli
out
out
call
into
fnstsw
stc
ret
add
adc
into
test
mov
rorb
aad
cli
sti
in
xlat
lret
and
roll
in
enter
xchg
int
ret
ror
ret
call
rcr
jmp
faddl
enter
icebp
ret
in
out
shr
jecxz
xor
enter
in
loope,pt
xlat
cmp
aas
movb
lock
test
sub
ss
in
ljmp
fadds
out
test
int3
cld
mov
xor
repz
cmc
fcmovbe
fcmovne
out
fucomip
cmp
aam
in
mov
jmp
in
faddl
xor
fmulp
xor
in
out
jmp
jmp
aad
cli
xchg
test
lret
stc
jecxz
lds
xchg
loopne
shll
out
hlt
fildl
in
sar
jecxz
hlt
enter
xlat
orl
in
loope
cmc
icebp
xor
enter
cld
loop
cmpb
mov
mov
std
mov
xchg
icebp
out
ljmp
clc
out
cmp
loopne
idivb
ss
fucomi
stc
mov
fdiv
out
loop
lret
loop
mov
loop
in
jmp
jmp
rol
sbb
idiv
aas
sti
xchg
in
xchg
xchg
xchg
repz
xor
aaa
lret
int
fdivrl
sti
stc
in
in
ret
rol
hlt
lea
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
fimuls
sbb
or
jle
xlat
stc
mov
hlt
std
rolb
aam
clc
repz
cmp
add
rcr
xchg
call
leave
cld
repz
in
mov
shl
enter
aam
flds
xchg
fdivrp
mul
lret
idivb
std
cmp
repz
ret
call
loopne
nop
ljmp
repz
xabort
fdivrp
not
cmp
fisttpll
loope
in
out
dec
shl
repnz
fdiv
aas
enter
ret
aam
lock
idiv
enter
jecxz
in
mov
out
rcl
lret
jecxz
leave
fdiv
xor
int
repnz
iret
shl
fsubp
fadd
int
adc
in
repnz
fdivr
clc
divb
imul
enter
hlt
aad
rcl
out
in
stc
loope
leave
call
clc
cmp
ror
repnz
cmp
cmp
int3
fadd
mov
in
call
xor
ror
repz
rcr
loopne
not
cmp
jecxz
std
mov
mov
aam
jmp
jmp
cmp
in
fcmovnu
fcmovbe
incl
sar
lret
sti
jmp
cld
iret
fstl
xlat
cmp
int
clc
loopne
into
fdivr
mov
enter
lock
cmp
iret
fmulp
xor
cmc
sub
ror
flds
ror
cld
test
fmulp
repz
cmp
xor
test
decb
call
out
loopne
test
enter
sub
xlat
fiaddl
mov
out
sti
xlat
jmp
xchg
int3
out
enter
fnstsw
cmc
out
sar
mov
test
mov
jmp
addb
out
ror
out
fsubr
xlat
cmp
xlat
test
lock
cld
clc
int3
in
icebp
ror
fucom
call
jmp
enter
ret
xorb
aaa
shrb
jle
jmp
repnz
cli
filds
in
incl
lret
test
in
in
jmp
cli
sti
in
in
out
rcl
aas
cmp
shr
cli
ffree
xlat
clc
into
out
in
icebp
lock
jecxz
lock
out
std
repnz
hlt
shl
stc
sar
in
inc
lret
int3
mov
rorb
enter
fcmovbe
and
xor
fnstsw
and
fdivr
in
leave
lret
mov
mov
loop
divl
repnz
in
lret
sti
icebp
loopne
cld
std
icebp
fdiv
stc
ljmp
xchg
lret
aam
das
iret
out
fdivr
cmp
rcl
cmp
aad
sti
fiadds
int
icebp
shl
ljmp
fcmove
fyl2x
in
cmp
sar
cld
aad
rcr
jmp
test
testl
ss
enter
jmp
in
cmp
out
jmp
idiv
cld
ret
into
xchg
mov
shl
loop
xor
ljmp
repz
loope
out
xlat
enter
in
or
ss
hlt
aaa
jmp
repz
in
test
ret
mov
std
sub
xchg
loop
adc
fdivrl
aad
cmc
hlt
in
shl
inc
fildl
xlat
addl
jmp
lret
out
sti
stc
int3
idivb
in
sbb
aad
cld
loop
test
enter
into
cld
xchg
xchg
leave
shl
xor
xlat
xlat
repnz
sti
faddl
in
test
incb
aam
sarl
xlat
sti
cmp
ss
ret
out
rcl
mul
lret
sub
xor
sti
xchg
int3
in
das
int3
jmp
hlt
sti
shl
fnstsw
fxch
clc
loopne
add
test
cmp
addb
in
cmc
into
fdivs
fmul
hlt
fstp
ds
out
xchg
cld
xchg
leave
cld
cld
cld
xchg
mov
call
xlat
jmp
les
jmp
leave
xchg
aaa
cmp
mov
das
jle
or
jle
mov
in
in
test
enter
out
xchg
ljmp
xor
repnz
inc
fdivrp
loopne
test
cmc
clc
int3
in
adc
int
xor
repz
out
enter
hlt
rcr
fsubr
lret
lret
in
lret
fists
jecxz
lret
clc
stc
enter
aad
in
ffreep
xchg
fisttps
xchg
addb
cmp
stc
cmp
std
std
sti
clc
xchg
sti
out
xlat
fcmovu
leave
xchg
out
xchg
fcomip
call
idivl
into
xor
rol
fdivr
mov
ret
ret
stc
mov
call
call
int
shl
fildl
aad
ffree
loopne
into
loop
into
cmc
xchg
lock
fnstcw
ret
lret
in
cmp
cmp
out
icebp
fsubrp
enter
test
xchg
icebp
loope
icebp
loop
in
lret
cmp
out
aaa
loope
in
hlt
add
xlat
cli
ds
xlat
jmp
xacquire
ljmp
out
xlat
aam
out
in
rol
fcom
mov
fcmove
std
ljmp
ret
fcomp
enter
cmp
xor
icebp
mov
loope
test
jecxz
into
mov
mov
cmp
cmp
not
int
sbb
ret
xlat
shr
std
mov
movb
into
aaa
cmp
fxch
sbb
fdiv
cli
loopne
and
mov
lock
out
aad
jecxz
out
in
cmp
lock
shl
fcmovu
into
adc
rorl
cmp
out
aad
xor
aam
aam
fdivr
xlat
aam
incl
std
cmc
mov
out
loope
out
repz
cmp
fcomi
in
xor
in
and
loope
adc
out
shl
shl
call
out
in
fsqrt
fst
fsubrp
not
cmp
ret
ret
in
enter
loope
shl
into
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
in
shl
ret
cmp
lret
lock
repnz
rol
aad
mov
hlt
loop
in
std
jmp
mov
loope
sub
lret
lret
divb
in
ffreep
int3
ret
lock
fsubrp
fldcw
stc
fcmovu
repnz
xor
loop
icebp
rolb
in
jmp
out
out
imul
out
enter
idivb
int
fiadds
mov
loopne
sub
test
repz
fnsave
cmp
incb
cld
call
loopne
into
hlt
in
sti
icebp
enter
clc
jecxz
cmp
ret
fucomp
fcmovu
in
jecxz
xchg
in
fucomp
faddl
xor
int3
icebp
flds
loop
fiadds
test
ljmp
sarb
or
cmpb
fsubr
jmp
lock
in
icebp
sub
xor
cmp
dec
shl
xlat
fld
fsubp
cmp
lret
test
out
lret
call
idivl
cmc
cli
ret
loop
enter
sub
lret
sub
fisttpll
lret
leave
iret
cs
ss
xlat
int3
in
rol
rol
repnz
fmuls
cld
out
cld
jmp
hlt
lock
call
clc
imul
clc
out
repz
inc
cld
out
leave
int3
xchg
fildl
into
in
leave
lock
xor
rolb
idiv
sbb
rclb
xchg
ss
in
xor
leave
repnz
jmp
into
roll
cmp
testl
repz
shl
icebp
jmp
aam
orb
and
xchg
clc
sti
iret
loope
aad
in
xchg
sar
cmc
in
add
into
lock
xor
sub
repz
cmp
icebp
lock
mov
add
jmp
ret
enter
int
aas
icebp
jg
les
ljmp
jle
loope
sbb
test
in
lret
test
fsubr
cmp
call
cmp
iret
in
cmc
shl
loopne
in
mov
fisttpll
xchg
aaa
int3
stc
sub
shll
fcomi
enter
cmpl
not
bnd
fmul
fsubr
mov
fsubr
ret
hlt
xlat
fidivrl
lret
cmp
cli
lock
sarb
in
call
loope
call
lock
aaa
in
icebp
in
xlat
ss
rcr
flds
repnz
orl
in
out
out
clc
fcomi
shr
aas
cmp
cld
aas
xchg
stc
xlat
jmp
in
mov
int3
test
loope
fidivl
int3
int3
neg
xlat
jmp
hlt
test
clc
icebp
jecxz
out
testb
mov
rcl
leave
int3
std
enter
lock
loope
ret
stc
fcmovu
cli
mov
repz
loop
fcmovne
cld
fucomi
cmp
int3
cld
aad
ret
xchg
loop
std
fisttps
repnz
cmp
lock
addl
aam
ror
lret
ljmp
shr
lret
ss
xchg
fmull
mov
xchg
lea
xor
icebp
cmp
aam
out
iret
sar
icebp
cmp
loop
rorb
cld
jecxz
rorb
stc
in
in
aam
aad
xor
cmp
flds
cli
ret
aas
std
decb
out
out
repnz
sub
repz
lret
cli
lock
rcl
movl
out
xchg
fsub
into
jmp
jmp
ret
ret
sti
inc
xchg
mov
loop
lret
in
xlat
out
iret
and
repnz
clc
leave
in
enter
aam
jecxz
in
iret
repz
in
test
cmp
test
inc
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
xor
jle
iret
fsubrp
testb
cmp
sti
cmp
fadd
cli
test
sti
loopne
mov
out
xchg
xchg
xchg
xchg
xor
fcom
shl
lret
out
aas
aad
aam
not
jmp
sub
loopne
out
cmc
cmc
rcr
cmc
cmp
jmp
faddp
out
enter
std
cld
aam
repnz
xchg
out
into
std
mul
lock
in
lret
enter
std
sti
cli
in
aas
aad
fmuls
mov
test
orl
cmp
aad
lret
sar
cld
aam
clc
clc
mov
int
fmulp
xchg
shll
repnz
out
ss
out
shl
aam
fcomip
aam
cli
cmc
fmul
mov
loopne
int3
xchg
fcomip
jmp
icebp
jmp
icebp
jmp
shl
into
and
in
ret
out
out
out
nop
ljmp
ss
cmp
fdivrs
ret
ret
ret
ret
fdivrp
cli
shl
xchg
xchg
mov
out
call
ljmp
jecxz
in
jmp
sar
lds
xor
in
lret
into
call
flds
xchg
fsubrp
mov
int
in
out
aam
test
fstp
cmc
idiv
sti
in
iret
cmp
test
call
repnz
call
pushl
cmp
shl
repz
test
hlt
leave
sti
xchg
movl
aam
fxch
leave
hlt
loope,pt
repnz
test
cmc
sbb
cld
xchg
mov
roll
hlt
cmp
neg
cmp
aad
ss
in
aad
ror
stc
rclb
shr
imul
clc
cld
jmp
sti
and
cmp
clc
orl
div
leave
leave
ret
in
aam
int3
std
sarb
cmp
leave
ret
lds
in
sub
xor
repz
fucomi
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
ljmp
loop
cld
jecxz
mov
aad
xlat
std
mov
addl
lds
out
jmp
std
stc
lret
cmp
repnz
ret
out
or
int
lret
xor
cli
out
cmp
out
ffree
loope
clc
int
xchg
hlt
cli
cli
xor
cmc
icebp
cmp
cli
loope
in
cmc
test
xlat
jmp
mov
aas
in
out
sub
out
lret
loope
sti
out
out
jmp
mov
fsubrp
repz
out
rcr
shl
ljmp
repz
fxch
shl
jecxz
incb
xchg
int
les
stc
xor
cmc
cli
flds
rolb
int3
mov
mov
out
in
jecxz
enter
jmp
loop
jecxz
stc
sar
mov
jmp
in
xchg
in
iret
int
in
call
out
in
push
xchg
fimuls
fxam
sub
loopne
into
out
xlat
aaa
cli
in
cmc
adc
repnz
aam
rol
cld
sbb
lea
mov
call
leave
leave
xor
icebp
sti
aas
xor
fst
cmp
out
std
sti
enter
out
xchg
xchg
cmc
xor
loope
test
into
idivb
in
incl
int3
lret
lret
rolb
aad
sti
int3
ljmp
shl
ret
cmp
filds
sar
jmp
cmp
ret
aas
bnd
in
fsub
sti
lret
loop
jmp
mov
out
jecxz
fucomp
sti
enter
addl
addl
mov
rol
jecxz
xlat
fcmovne
iret
loopne
xor
cmp
aas
mov
xchg
loopne
addb
lds
icebp
aaa
cmp
cmp
ds
xchg
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
xchg
jle
cmp
jle
push
jecxz
enter
mov
out
int3
xor
cmp
ss
xlat
fsubp
loopne
out
mov
in
in
stc
cld
nop
int3
jmp
rol
test
stc
aam
loopne
icebp
int
std
test
fcmovbe
loope
mov
int3
aad
cmc
jmp
fcmovbe
xor
lock
in
xor
sti
aam
jecxz
int
mov
mov
rorl
hlt
int
cmp
out
jmp
shl
cld
hlt
loope
idiv
test
mov
lea
out
ret
call
rol
clc
roll
cld
push
mov
roll
div
clc
shl
in
int
in
xlat
aam
in
int
enter
in
out
icebp
sub
xor
aad
call
int
aad
aam
loop
test
loopne
or
in
int
lret
lock
out
sub
ds
int
fldl
ffreep
fmulp
into
std
lret
rorb
lret
out
cmp
lret
clc
shl
fiaddl
cld
mov
mov
out
xor
cld
fsubrp
shll
icebp
cmp
fdivr
test
loope
cld
into
dec
out
jecxz
xor
jmp
cmp
test
in
cli
fisttps
stc
sti
loop
not
loopne
out
sar
fcmove
int
cmpb
in
stc
call
stc
loope
jmp
aad
cmc
stc
leave
cli
cmp
fdivrp
icebp
and
repnz
leave
enter
mov
xor
jmp
in
fcmovbe
int3
sti
iret
icebp
cmc
loop
xchg
test
test
out
icebp
fld1
mov
in
ror
call
not
cmp
loopne
into
in
in
not
test
loop
jmp
std
into
shl
fnstsw
test
ror
repz
sar
cmc
add
in
test
fneni(8087
std
xor
sub
fcmove
ror
fsubrp
imul
into
cmp
jmp
out
mov
jmp
call
fsubrp
fdivrs
ret
jmp
ret
or
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
daa
pop
push
cmp
cmp
jle
rcr
in
in
xchg
divl
cmp
clc
leave
sar
cld
cmc
cmp
xor
xchg
repz
fucom
shl
lock
in
repz
sub
sti
out
fdivr
sarb
xor
idiv
fcmovu
xchg
test
loop
nop
in
sti
call
stc
aaa
fcmovu
cld
cmp
shl
into
int3
fcmovnbe
shl
aad
lret
leave
lret
fucomip
rcl
shr
ljmp
cld
cmp
repz
int3
iret
cmp
repnz
xchg
cli
mov
out
jmp
icebp
in
shr
repnz
lret
leave
in
imul
jmp
aad
rolb
fcmovne
lock
or
enter
cmp
hlt
rolb
cmp
loop
ficoms
int3
icebp
in
repz
jmp
out
cmp
shl
repz
into
int3
lret
ljmp
icebp
jmp
fxch
into
iret
ljmp
sar
repz
incl
int
iret
jmp
hlt
divb
test
sti
xchg
std
leave
sti
fstl
shr
ss
xor
loopne
sti
mov
jmp
out
leave
repnz
repz
std
ret
out
rolb
stc
test
jecxz
lock
jecxz
loopne
hlt
ror
out
aaa
aas
fdivrl
icebp
fnclex
idivl
imul
mov
out
lock
enter
call
hlt
test
cmp
out
flds
popl
in
repz
hlt
fcmovbe
cmp
iret
aam
fsubp
cld
jmp
cld
leave
fmuls
call
aaa
icebp
idiv
repnz
jmp
sarl
ret
ret
repnz
fsubr
in
nop
repnz
out
fidivrl
cmp
into
jecxz
repz
loopne
xchg
out
out
in
cmp
into
call
ret
out
out
in
stc
mov
ret
out
out
enter
xchg
ss
stc
aam
aad
fidivrs
fnstcw
fnstsw
mov
inc
ja
add
test
add
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
xor
aas
push
adc
jle
cmp
jle
fnstsw
test
in
call
hlt
aad
iret
leave
fcmovu
imul
fst
cld
lock
fmul
aad
loopne
std
aas
inc
out
cli
jmp
icebp
lret
xor
jmp
ret
rorb
addb
jmp
ret
aam
jmp
notrack
shl
cmp
out
mov
loop
loop
or
aam
iret
ss
int3
test
cld
aas
shl
shl
idiv
in
cli
jmp
mov
icebp
cmc
in
xchg
fmul
aad
lret
xor
sti
stc
aas
fld
shl
cmp
testb
in
repnz
cmc
xlat
sub
int3
fcmovne
fmul
xor
fimuls
mov
fadds
mov
cs
clc
cmp
out
loope
cmp
hlt
sti
enter
in
int3
sbb
rolb
in
cmp
hlt
sar
cmp
xlat
cmp
shl
in
test
sub
jmp
cli
sti
cld
loop
call
clc
and
jmp
mov
repz
repnz
into
aam
shl
fcmovnu
std
repz
loopne
in
xchg
in
fldl
out
lds
jmp
test
iret
clc
test
out
add
into
out
mov
lds
in
cmp
cmp
out
sti
lock
fxam
cli
fnstsw
cmc
test
lret
xlat
into
jmp
rcl
call
fcmovbe
fdivrp
shl
cmc
repz
test
mov
roll
jmp
repz
sti
cmpl
ret
enter
addb
sbb
int3
leave
shl
in
stc
ss
icebp
aam
xlat
sti
cli
cli
incb
ljmp
enter
cmp
cmp
cmp
cmp
movb
in
out
xlat
cmp
xor
cs
iret
in
xlat
jmp
jmp
out
ljmp
xor
aam
div
ss
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
aaa
jo
into
sarb
add
fcomip
loop
out
fmul
loopne
fsts
not
test
ss
ljmp
fisttpl
shl
lret
divl
rcl
lock
lret
fst
cld
fdivrp
cmp
mov
icebp
mov
rol
not
enter
cmc
cmp
ds
in
std
cld
std
cmp
int3
in
out
xchg
loope
xchg
in
shr
fdivrs
xlat
enter
xlat
cmp
sti
in
enter
xlat
mov
addl
lret
cmp
xlat
cld
icebp
aas
out
lock
iret
cmc
enter
cmc
call
shr
in
lock
xor
testb
stc
hlt
sar
cmc
out
loopne
icebp
clc
xor
std
fdivr
loop
xchg
ds
fxch
clc
ret
in
call
sub
divl
fmul
call
incl
or
into
xchg
int
out
shl
xor
xor
repz
aad
lock
cmc
in
rorl
ftst
leave
cld
in
in
cmc
repnz
std
out
xlat
lock
lret
lret
cmpb
aam
sub
fcmovnbe
mov
xor
ror
not
fmul
fst
aas
int
rorl
orl
aam
shr
lret
in
xor
rcl
ret
ljmp
cld
shl
adcb
rcl
stc
ss
aam
or
hlt
aam
mov
out
fdivp
iret
out
int
into
loope
icebp
call
pushl
ds
fsub
testl
cmc
in
aam
int3
in
aam
cmp
fld
in
loope
fcom
ffreep
call
in
out
int
shl
ljmp
shl
rol
icebp
stc
incl
lock
cs
sub
sti
clc
aam
lret
shr
std
cmp
repz
rorl
out
icebp
xchg
icebp
aad
ror
xor
ds
sarl
add
mov
jmp
ret
leave
lret
aad
flds
and
and
jle
xlat
fcmovb
sti
jmp
out
sti
in
into
addl
hlt
out
xlat
leave
sti
sti
cmp
hlt
enter
fcmovnb
xchg
shl
jmp
fmul
xor
cmp
in
ss
lock
hlt
cld
stc
cmc
and
mov
enter
aad
call
fsubrp
cmp
xor
idivl
movb
sbb
loop
xchg
out
lret
loopne
xor
repnz
aam
cmp
idivb
leave
fiadds
repz
ftst
in
xlat
cmp
sti
rol
in
test
dec
loop
out
sti
in
repnz
in
hlt
int
ss
int3
cmp
sti
cld
rol
or
test
jmp
aam
iret
aaa
lret
clc
cmc
in
cmp
rolb
clc
sar
jecxz
out
lret
in
icebp
repz
call
inc
incl
shl
test
test
out
jmp
in
adc
ret
into
xor
cmp
xor
inc
loope
cmp
in
jecxz
and
loope
mov
shl
shr
xor
xor
jmp
cmp
out
fcomp
loop
mov
int3
cmc
enter
ror
xlat
int3
fcmovu
std
leave
repnz
sar
mov
in
jmp
xchg
test
rcl
xor
aad
rcl
sarb
add
aas
testb
in
in
fiadds
in
ljmp
add
rol
loop
enter
loope
mov
aam
ljmp
ljmp
fdivp
mov
xchg
fdivr
in
dec
int
das
shlb
imul
cmp
out
clc
xor
sti
shl
incb
leave
loopne
out
lret
std
xchg
iret
aas
sub
repnz
not
shl
jmp
roll
push
push
xchg
xchg
iret
repz
xlat
jmp
fdivr
xor
out
sbb
out
icebp
testl
leave
fisttpll
ret
repnz
iret
icebp
cli
mov
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
stc
fcom
shl
xchg
jmp
xchg
adcl
cmp
sarb
idiv
mov
mov
movl
enter
std
std
aad
cmp
neg
test
test
mul
loopne
xchg
lret
hlt
out
loop
xor
xor
xor
lret
in
aad
loop
loop
rorb
fucomp
in
xchg
jmp
fdiv
xor
dec
idiv
lret
loop
fcom
repz
fdivrp
loop
xchg
adc
jmp
shr
xlat
lds
ds
clc
hlt
incl
fdivr
repz
jecxz
call
iret
jmp
jecxz
leave
xor
int3
out
int3
cmp
out
jmp
leave
out
xchg
and
addl
in
cmp
shl
fdivrl
cli
xor
test
mul
mov
adc
jmp
repz
stc
ror
lret
aad
aam
div
fdivrp
loop
orl
xor
in
jmp
in
fstpt
clc
xor
lock
aam
std
in
orl
mov
call
shlb
out
int
in
hlt
jmp
cmp
in
loopne
les
out
sub
test
fcmovu
cmc
fcmovb
aad
cmp
cld
cmp
out
fiaddl
int
fsubp
sub
or
hlt
xor
rcl
fdiv
in
add
aas
cmp
fcmovnu
fcoml
ss
repnz
repnz
fptan
sar
cli
fstp
std
xchg
iret
int3
mov
sarb
int3
call
cmp
cmc
cmp
repz
sbb
jmp
std
jecxz
adc
fcomip
in
xlat
cli
fdiv
test
cmpl
aas
les
or
fcmove
cmc
int
fprem1
xor
lock
cmpb
loope
fadd
sbb
addl
mov
adcb
cmp
lret
int
in
fdiv
loop
aad
cld
orb
std
in
out
les
aam
out
hlt
xor
add
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
dec
and
or
jle
cmp
jle
incl
repnz
orb
icebp
fcmovne
fsubrp
into
loope
int3
call
icebp
int3
out
sti
aam
out
fiaddl
int
repnz
aad
rcl
cmp
enter
fstpt
icebp
loop
fimull
int3
xchg
out
xchg
xor
repz
rolb
out
mov
xchg
xchg
ffreep
jmp
into
fnstsw
into
repnz
neg
lock
fnstsw
mov
xor
aad
bnd
sar
iret
imul
loop
repnz
mov
out
std
div
ljmp
repz
cmp
test
ret
cmp
jmp
mov
mov
mov
jmp
out
out
enter
xlat
out
loope
shl
aas
cmc
test
leave
jecxz
out
xor
repz
repnz
out
hlt
rolb
fucom
mov
lret
in
ficoml
aaa
iret
fadd
ljmp
cmp
sar
cmp
fcmovbe
test
nop
rol
rolb
test
idiv
cmp
iret
jecxz
icebp
ret
cmc
fisttpll
int3
fsub
sti
out
test
aaa
stc
ljmp
fdivr
lock
jecxz
xchg
iret
xor
cli
loop
cmc
div
lret
shl
repz
cmp
mov
jecxz
fst
xchg
mul
iret
call
fdivrp
test
xchg
lret
aam
rolb
icebp
out
shl
int3
hlt
xor
lock
shl
loop
faddl
mov
out
jecxz
std
imul
shl
ret
lock
in
cmp
out
cmp
fprem
fdivr
int
out
in
leave
fcmovu
xor
out
out
fstp
repnz
mov
aad
faddp
orl
in
repnz
int
out
aam
fcomp
int
std
flds
orb
int3
icebp
les
iret
into
mov
mov
jmp
enter
fcmovnbe
fcomp
insb
jae
ficoms
jle
cmp
jle
shr
rcr
cmp
repz
repnz
cmc
mov
lret
orb
xor
in
rcl
cmp
in
aad
hlt
incl
ljmp
icebp
jmp
icebp
xor
out
cli
sub
loope
cmc
aad
mul
fld
mov
inc
aaa
sar
lret
jmp
fnsave
ffreep
sti
xchg
jmp
loope
loopne
xchg
lret
ret
cmc
aam
loope
in
xlat
aas
xchg
rcl
call
loop
loop
into
xor
rol
call
out
cld
jecxz
shl
stc
mov
call
in
rcl
shr
rcr
xor
iret
aam
ret
xor
sti
clc
fadd
hlt
int3
int
mov
neg
xor
clc
ljmp
sti
rcr
cmp
cli
std
aad
in
out
in
std
loopne
fsubrp
aaa
out
shr
rcr
jmp
aaa
cmp
ret
lds
jmp
icebp
xchg
rolb
int
out
sti
repnz
ljmp
ljmp
flds
loope
stc
int
cld
sti
out
rol
in
fnsetpm(287
ds
ret
mul
jmp
faddl
dec
ljmp
sub
xlat
shl
cld
test
aas
fcmovbe
test
lret
or
jecxz
shl
and
icebp
ss
lock
rcl
cmp
cmp
mov
xchg
mov
fsub
jecxz
ror
hlt
repnz
call
ret
fldl
jecxz
stc
sub
xchg
in
out
in
rcl
sub
iret
fxch
aas
repnz
iret
aas
ds
repnz
ljmp
add
xor
fldln2
aaa
dec
stc
int3
jmp
addb
ljmp
xchg
fsubrp
repnz
loope
out
bnd
call
ret
out
sar
clc
add
mov
lock
xor
sub
in
enter
fcmovnbe
cld
lock
jmp
in
into
std
call
shl
ss
rorl
add
or
push
add
add
lret
ror
lahf
jmp
fists
lret
jle
cmp
jle
out
xor
shl
addl
ljmp
lock
test
loope
ss
lret
jmp
not
jecxz
stc
mov
ljmp
out
into
fdivr
call
cmp
loope
test
fucomi
aad
in
adc
xchg
in
fcmovnu
fdivr
std
repz
icebp
in
fiadds
addb
fimuls
sarl
lret
lret
shl
fsubr
fucom
out
ret
mov
fsubrp
incl
divb
out
cmp
addb
sti
call
mov
cld
in
in
repz
ret
cld
xor
fucomp
sbb
fmulp
aas
or
sbb
std
loop
xor
into
sarb
cld
cmp
neg
clc
cmp
jecxz
cli
out
enter
test
ljmp
fdiv
cmp
aam
fdiv
xbegin
loopne
leave
cmc
out
rol
out
xor
shr
stc
sti
loopne
testl
xchg
loopne
shr
icebp
stc
stc
out
cld
into
lret
jmp
cmp
sti
out
cld
hlt
fadd
les
addl
idivl
cmp
icebp
test
lret
ljmp
ljmp
ljmp
lret
fsubp
inc
sti
or
xlat
mov
out
jmp
aad
imul
repnz
iret
cmp
int
xlat
stc
loop
in
xchg
les
test
fisttpl
out
in
shlb
fstp
cmp
jmp
mul
test
call
int
filds
ljmp
sub
fsub
cmp
fidivrs
fisttpl
into
loope
jecxz
int
fsubr
ljmp
cld
ret
out
std
mov
repnz
out
stc
icebp
das
cmc
jmp
fucomip
xchg
mov
fiadds
mov
pop
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
enter
ds
jmp
sar
rol
fsubp
std
cmc
and
fdivr
shr
cmp
out
cmp
aaa
fdivrl
rolb
loope
cli
cmc
loope
stc
out
loopne
orb
xor
out
hlt
in
lret
sti
repnz
fistpll
aad
cmc
aam
sbb
dec
fimull
ss
icebp
stc
xor
cmp
jmp
out
sarl
ljmp
repnz
test
in
fcom
cmp
out
sar
jecxz
iret
repnz
mov
aad
cli
fstp
mov
mov
int
shl
fst
rcr
repz
and
cmc
leave
loope
and
loope
fcom
int
aad
rcl
addl
out
or
mov
fisttpl
in
cmc
test
clc
sti
ret
adc
fiaddl
out
stc
xchg
in
test
int3
aaa
repz
fadds
adc
adc
std
call
not
rol
leave
jmp
aam
leave
xlat
aad
idiv
cmp
inc
les
fistl
lret
xor
leave
lret
lock
aas
cmc
stc
test
ret
aam
addl
orb
in
sub
aam
fcmovne
xlat
sarb
fcmovnb
fadd
xlat
mov
loop
ror
aam
fcmovb
fcom
sarb
aam
incb
hlt
mov
leave
iret
icebp
call
leave
cmp
jmp
idivb
hlt
lock
into
in
cli
adc
test
out
xchg
int3
cmp
enter
xor
cmp
in
repnz
jmp
jmp
jmp
in
aad
ret
int
in
sti
enter
sarl
or
loope
fucompp
stc
xchg
mov
hlt
cmp
out
hlt
cmp
cmp
ret
jmp
sub
fisttpll
ljmp
fmul
loope
loope
fdivr
in
clc
xlat
addl
icebp
mov
and
or
jmp
ret
ret
rcl
aad
sbb
jmp
cmp
jle
into
shll
lret
std
lret
ret
icebp
repz
loop
ljmp
mul
out
lret
ss
lock
cmp
rcr
fscale
clc
ljmp
les
ret
clc
hlt
jmp
in
fprem
loopne
cli
repz
in
xlat
cmp
iret
out
test
out
lret
call
lret
iret
jmp
xor
cmp
loope
std
sti
std
loop
ss
jmp
sti
flds
ret
mov
xchg
loop
rcr
ljmp
stc
clc
into
loop
icebp
ds
xlat
idiv
jmp
int
jmp
sub
and
out
cmc
loopne
incb
mov
ljmp
cmc
rcr
xor
cmp
aas
xlat
sarb
mov
xchg
ror
cmc
out
xor
neg
addb
fdiv
cmc
sti
leave
in
mov
mov
in
sbb
xor
enter
shl
faddl
call
cli
fdivrp
std
mov
lock
imulb
ror
fidivrl
rcr
std
repnz
aas
faddl
loop
int3
nop
xchg
mov
cmc
aam
fsincos
fstpt
lock
fisttps
out
out
incl
jmp
xlat
xor
rolb
fsubp
test
icebp
icebp
xchg
mov
shlb
lret
std
ds
loop
fadd
cmc
enter
jmp
sti
in
rcl
into
in
repz
hlt
cmp
fidivrs
stc
call
out
enter
sti
leave
addb
test
leave
clc
aas
ljmp
aas
fmul
int3
out
fdivr
repnz
mov
into
in
out
leave
into
fdivrl
jmp
in
lock
in
fiadds
sar
lock
clc
in
ljmp
call
fst
stc
fistpll
jmp
leave
lret
ret
std
out
loopne
jmp
rcrl
add
in
jmp
lret
aad
int
ss
shll
sarb
adc
jle
aad
xor
aad
ljmp
out
fadds
icebp
iret
xchg
icebp
aad
into
loope
lock
jmp
icebp
iret
aad
mul
mov
stc
int
leave
decl
xor
sti
icebp
xor
push
cmp
test
mov
loope
std
ret
leave
fsub
mov
cmc
jmp
call
cli
ret
clc
fdiv
leave
enter
fucomip
out
xor
shr
fcmovnu
clc
call
cmc
in
cmc
loope
roll
mov
loopne
out
cmc
and
das
ljmp
aas
in
cmp
cld
cmp
leave
fucomp
xchg
in
mov
ss
fmul
cmp
lock
sarb
mov
fcomip
orb
mov
jmp
cmc
hlt
xor
in
hlt
cmp
cmp
rcr
cmp
aam
aam
fcomp
xchg
fcomp
sub
sti
ror
ljmp
fcmovne
testl
ffree
aad
jmp
leave
in
mov
lock
in
out
cli
cmp
repnz
repnz
cli
faddl
mov
lret
out
cli
rcl
fucomp
test
in
loope
int3
fxam
enter
clc
in
in
shr
mov
leave
lea
std
fcoml
shl
fdivs
in
sarl
into
sti
addl
cmp
int3
std
repnz
in
out
out
lock
fldl
fmul
lret
ljmp
xor
loopne
leave
rcl
int
repz
call
jecxz
fadd
ffree
xchg
fldl2e
icebp
int
cmc
aam
call
xor
aas
cmp
xlat
shl
addb
out
mov
mov
fxch
iret
shll
sti
jmp
std
ret
xchg
clc
out
mov
das
not
shr
icebp
icebp
fcmovnbe
repnz
aam
clc
clc
aas
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
mov
cli
call
jmp
xchg
jecxz
hlt
xor
cmc
xlat
loopne
jecxz
sarl
and
fst
into
fldl2e
test
repnz
loopne
les
xor
stc
out
cmp
sarb
into
ret
cmpb
repnz
testl
enter
jmp
stc
sar
sar
leave
xor
out
sti
in
fsubrp
mov
hlt
repnz
call
cld
lret
cmp
sti
shl
loopne
repz
jmp
fsubp
lret
xchg
enter
cmp
fsubr
ljmp
test
shl
cmp
stc
sub
xchg
cmc
into
out
cmp
in
xor
rolb
xor
ljmp
jmp
aas
jecxz
xor
cmp
ljmp
sbb
cld
mul
in
mov
mov
aaa
shr
neg
cmp
jmp
cmp
in
neg
xchg
sbb
and
xchg
fdivs
repnz
lret
shl
icebp
or
loop
roll
mov
divb
ror
shlb
out
lock
std
jmp
cli
ret
cmc
enter
mov
ljmp
cmp
std
enter
fdivrs
clc
aam
rcl
sti
call
loopne
fcoml
loop
enter
lock
repnz
ror
roll
aas
clc
mov
movl
lret
cmp
jecxz
ds
xlat
loop
loopne
xchg
fdivrp
repnz
mov
das
xor
aaa
iret
lock
icebp
aad
hlt
hlt
shl
shl
test
out
out
mov
into
sarl
ljmp
shr
shl
loop
fadds
loope
lock
sub
ljmp
xlat
xchg
fnstcw
aam
orl
out
mov
into
lret
jmp
lret
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
shrb
jle
adc
jle
fdiv
std
cmp
loopne
ret
xchg
xchg
fsubrp
loopne
int
sub
jmp
cmpl
lret
std
mov
movb
in
int3
shl
cmp
iret
fnsave
and
xor
mov
mov
lret
std
repz
leave
fldl2t
out
lock
ljmp
cld
xchg
enter
out
int3
mov
jmp
jmp
shr
fcomi
xlat
fbstp
cmp
lret
ret
ret
fstp
jmp
fldl
clc
jmp
call
ds
test
inc
in
leave
clc
icebp
ret
iret
incb
out
leave
cmp
ljmp
std
cmp
nop
incb
loope
fidivl
out
into
fdivl
fucomip
cmp
test
clc
test
roll
mov
loopne
cmp
xlat
leave
stc
sti
out
icebp
loopne
aam
fiadds
fisttps
rcll
cmp
leave
test
idiv
repnz
out
repz
stc
icebp
xchg
sti
int3
xchg
jmp
lock
out
lret
xor
into
shl
stc
xlat
xlat
ljmp
in
loop
xor
sar
aam
call
xlat
cmp
ror
loop
test
ror
leave
rorl
leave
fidivl
aam
out
sar
adc
std
fcmovnbe
fld
in
fucomi
rorl
jmp
out
clc
cmp
icebp
enter
loopne
sti
ret
std
not
fnstcw
cld
jmp
in
mov
repnz
jmp
xor
test
cld
rcr
loope
ret
rorl
into
rcl
iret
cmc
fsubr
clc
hlt
cmp
sarl
std
cmc
lds
cmc
fiaddl
jmp
xor
call
fistpll
cmp
repnz
test
hlt
clc
out
fimull
mov
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
insb
idiv
neg
jle
adc
jle
xchg
test
jecxz
into
clc
divl
cmp
repnz
clc
test
out
std
jmp
cld
cld
cmp
div
enter
cli
iret
cli
fcom
in
std
sbb
rcr
lds
ljmp
icebp
jmp
xlat
aaa
xor
into
sar
sar
test
xacquire
call
int
cs
out
cmp
cmc
into
addb
lret
cmp
loopne
leave
jmp
shlb
ljmp
fadd
ror
icebp
neg
in
cli
neg
aam
int
fiadds
jmp
in
repz
repnz
cmc
enter
int3
shl
clc
mov
mov
test
int
shl
int3
xor
icebp
sti
int3
jmp
shr
in
cmp
loop
stc
test
ret
fucomip
fldl
cmp
jmp
repz
out
sti
test
clc
lret
mov
fdivrp
loope
mov
rclb
lret
fdivp
hlt
aam
bnd
loopne
loope
fsubrp
in
test
nop
loope
icebp
in
shll
fistpll
out
les
mov
test
out
xchg
out
rol
ljmp
ljmp
into
xchg
cmp
hlt
mov
fcmovu
cli
or
jmp
rol
das
cmp
sarl
out
xchg
cmc
hlt
mov
mov
out
sbb
xchg
jmp
hlt
jmp
fcomip
icebp
xchg
fcmovnu
addl
rol
out
mov
int3
cmp
cmp
cmp
test
int3
fisttpll
sub
ljmp
iret
into
out
cmp
repnz
fildl
mov
mov
roll
ret
xor
jmp
hlt
iret
int
cld
addl
jmp
cld
loopne
xchg
bnd
xor
lock
std
cmp
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
hlt
adc
jle
add
fldl
fadds
lret
in
lret
xchg
int3
lea
fidivrl
ss
out
into
loop
cmp
out
loopne
fucom
enter
rorb
xchg
sub
lret
jmp
pushl
sar
ret
cmp
rcl
mov
in
jmp
xchg
out
ror
loop
cli
idiv
out
std
cmp
filds
loope
int
out
sti
cld
test
jmp
fptan
sarb
std
out
fnstsw
aas
iret
cmp
mov
roll
repz
lret
out
jmp
cmp
lret
aas
hlt
loopne
cmc
xlat
xchg
enter
out
lret
xchg
jmp
xchg
mov
stc
ret
in
lock
sarl
xchg
repz
cmp
int3
xlat
test
idiv
rcr
shl
loope
loop
ljmp
aas
fmul
aaa
ret
sarl
lret
fdivr
sti
fcomp
cld
mov
cli
shl
int
test
lock
idivl
aas
std
stc
fcom
call
mov
mov
mov
aaa
aaa
in
in
cld
cmp
neg
aam
icebp
loope
shl
call
clc
cmp
in
loop
loop
cmc
sar
lret
cmp
repnz
fsub
out
jecxz
addb
cld
popl
icebp
leave
out
sti
shl
repnz
ljmp
test
cmp
shl
ret
in
repz
cmp
lock
imul
cmp
in
roll
jmp
xlat
decl
repz
aaa
loope
call
repz
stc
lock
mov
call
fdiv
int3
shr
loop
xor
cli
cmp
mul
xor
ret
std
xor
mov
in
fcmove
nop
out
mov
ret
repnz
xlat
roll
loop
enter
add
xchg
cmc
shll
sar
push
ja
add
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
jne
xchg
std
popf
fdivrl
adc
jle
nop
repnz
xor
fdiv
sti
loopne
test
ds
aam
dec
stc
lock
test
mov
cmp
lret
repz
ds
aam
iret
loop
sar
hlt
fiaddl
stc
ret
out
decl
cmc
rcr
call
fidivrs
jmp
call
test
jmp
cmp
cld
repz
shl
clc
cli
shr
call
sti
sar
in
ljmp
cmp
fucompp
loop
aas
ret
icebp
fstp
cmc
xchg
cli
xchg
decl
xlat
shr
xor
clc
idivl
int
addl
stc
enter
popl
rcl
fcmovu
out
or
loope
xor
aam
stc
or
out
fxch
nop
repnz
fdivs
xor
jecxz
cmp
div
clc
int
shl
sub
mov
xchg
jecxz
fisttpl
loop
in
shl
repz
mul
faddl
fcmovnu
jmp
lret
loopne
xor
call
leave
sarl
xlat
lret
aad
clc
test
jmp
int3
icebp
std
std
jecxz
call
sti
ljmp
ljmp
mov
rorl
test
xor
ljmp
fsub
stc
in
les
jmp
in
nop
loope
xchg
xor
cmp
cmc
ds
fidivrs
mov
mov
or
mov
out
xchg
clc
in
bnd
xor
icebp
jmp
fmul
aam
repz
in
jmp
test
xchg
xchg
mul
cmp
lret
out
jmp
out
roll
mov
in
lret
fucom
aam
xor
cmp
shl
cmc
hlt
and
mov
in
icebp
mov
mov
nop
in
shl
iret
shll
fdivr
cmp
rcl
loop
sti
out
clc
inc
movl
jb
dec
jmp
aam
fadd
fstp
pusha
shl
xchg
cmp
adc
jle
fld
or
sub
xchg
repnz
mov
ljmp
stc
fcmovnbe
rol
rcr
call
lea
loopne
hlt
rcr
into
stc
hlt
cmp
loope
stc
loop
rcl
testb
out
adcb
out
clc
xlat
rol
int
out
enter
fstp
in
rol
out
xchg
out
clc
enter
xchg
repnz
ror
ret
xor
shl
rcl
ret
cli
loop
mov
into
call
iret
in
aaa
int
icebp
cmp
jmp
out
cmc
test
test
in
clc
mov
xchg
cmc
aam
out
shl
out
std
rcl
into
cmp
iret
cmp
rol
mov
mov
mov
int3
fucomi
xchg
rcll
fsub
call
loope
sti
aas
ror
mov
out
in
lea
loopne
clc
xor
divl
iret
in
cld
std
enter
mov
test
call
div
std
fcmovnbe
iret
clc
shl
loop
rcr
ret
call
mov
mov
lret
int
xor
xor
stc
ror
ljmp
decl
xchg
sti
call
enter
in
shl
stc
lret
loop
out
out
loop
mov
rcr
fsubr
in
sub
hlt
aam
ljmp
clc
shl
not
fcompp
jecxz
loop
nop
fpatan
xchg
lret
loopne
enter
out
in
loop
sbb
aam
hlt
enter
std
xchg
xchg
xchg
in
xor
xor
aam
xlat
aam
in
xlat
std
sar
ret
and
lret
xchg
repnz
out
repz
shl
loope
faddl
incl
pop
nop
out
mov
int
lock
stc
sti
aam
hlt
fdivrp
rcr
lret
in
aam
in
out
loope
in
sti
in
in
jmp
sbbl
mov
addl
jmp
fcomp
fistps
je
inc
outsb
jle
loopne
jle
add
ss
clc
rcr
xlat
mov
jecxz
mov
ror
in
jmp
out
aad
xlat
div
fcmove
out
ret
in
std
mov
mov
fst
lret
repnz
fldl
ror
aas
loop
cmp
sti
mov
mov
mov
idiv
in
cli
fmul
ss
bnd
jecxz,pt
shl
aad
leave
out
mov
out
shr
cmc
xor
leave
std
cmp
cmp
jecxz
repnz
fcmovbe
loopne
cmc
cli
fcmovu
iret
jecxz
leave
out
out
loopne
leave
in
out
lret
cmc
shl
std
in
fsubp
in
enter
mov
cmc
xchg
jecxz
rol
in
into
iret
cmp
fiaddl
jmp
lret
rcll
out
fmul
cmp
lock
cli
hlt
testl
jmp
loopne
loopne
out
jecxz
cmc
loop
ljmp
lock
stc
in
lock
rol
mov
mov
lret
xchg
loope
sar
hlt
jmp
addl
out
lret
aad
call
shl
mov
xor
icebp
sti
out
fucomi
shl
stc
ds
aam
call
fcmovb
cli
leave
xor
out
stc
cmp
cmp
ss
ret
loope
cmp
enter
test
jmp
leave
int3
xor
xor
div
adc
hlt
addb
out
repz
into
hlt
aas
cmp
and
rol
loope
lret
fisttpll
sub
aam
fdivl
clc
in
incl
testl
mov
xchg
jmp
enter
out
aas
cmp
shlb
test
fisttpl
jmp
dec
hlt
repnz
fadd
int3
stc
cmc
aad
lret
cmp
jmp
lret
roll
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
xorl
jle
adc
jle
mov
test
fadd
loop
aad
aad
lret
rol
out
test
rcr
cld
testl
repnz
ror
jecxz
cmp
ffreep
xlat
clc
aad
xlat
fildl
sub
out
dec
xor
cmp
xlat
fndisi(8087
out
repz
addl
loopne
loope
jecxz
lock
xchg
jmp
int
cmp
xor
repnz
loope
loope
faddl
stc
loop
xchg
std
out
in
stc
in
in
cld
repz
jmp
sti
fiadds
int3
jmp
jmp
mov
cs
xor
aam
out
std
cmc
sar
aad
mov
leave
mov
in
mov
ljmp
xor
out
in
jecxz
repz
hlt
loope
addl
test
faddp
fnstenv
rcr
in
icebp
cmp
neg
lock
int
in
icebp
repz
ljmp
or
ret
cmp
out
aas
cmp
jecxz
out
ljmp
mov
out
call
xor
repz
addb
loope
out
xlat
mov
loop
in
adc
into
cmp
int
rcl
shl
repnz
mov
enter
in
not
into
cmp
out
fdivr
std
fsub
xlat
cmp
fcmovnb
aam
out
add
jmp
test
xlat
lret
xor
cmp
not
fcmovb
xlat
add
aam
lret
ret
xchg
xor
jmp
cmp
ror
ret
inc
repz
cmc
sub
fmull
loope
in
imul
xor
aad
cmc
iret
jmp
add
mov
in
rcll
fdivp
jmp
imul
int
int3
cmp
hlt
xchg
cld
cmp
test
std
lret
test
xchg
out
shr
lret
cmp
test
add
adc
jmp
int3
rol
aad
pop
pop
movsb
or
or
jle
add
ljmp
test
int
fimull
lret
cmc
fcmovnu
idivl
lret
rcl
movb
in
test
mov
rcl
in
xchg
aas
xlat
xor
iret
clc
sti
cld
enter
fucomp
int
aas
out
enter
incb
rcl
loope
ret
xor
fucomip
cmp
rcl
loope
ret
aad
xchg
int3
into
xchg
lret
lock
cmp
lock
cmp
jecxz
faddl
xchg
stc
icebp
out
xchg
mov
out
fcmovnu
fmulp
cmp
sti
in
iret
aad
and
stc
rcr
mov
fmull
fyl2x
cmc
aam
into
xlat
cmp
jecxz
out
lret
lret
mov
int
mov
ror
call
aaa
addb
shr
add
mov
icebp
xchg
out
int
repz
ljmp
add
iret
loop
rol
cmc
cld
xchg
jmp
mov
loope
aad
into
lret
cmp
repz
aad
fdivrp
sti
cmp
leave
cli
imul
addb
int3
ret
out
cmp
idiv
loopne
cmp
jecxz
shl
out
sti
fimull
lret
xor
into
out
xor
imul
stc
xlat
addb
sub
mov
ror
enter
aam
cli
in
jmp
cld
fcmovnb
jmp
test
std
mov
jmp
int3
fldl
ljmp
cmp
ds
xlat
xor
neg
jecxz
lret
xchg
shr
xchg
repz
stc
rcr
out
cmc
fmul
xlat
fstpt
repz
in
lret
in
in
in
out
shl
sub
lret
out
cmc
fnstsw
stc
repz
leave
faddl
les
fxch
not
imul
xlat
int3
sarb
shll
hlt
in
fdiv
out
fucom
out
lea
pop
ja
add
add
add
shlb
pop
ja
add
pop
ja
add
add
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
jge
pusha
jl
jle
adc
jle
xchg
xchg
call
xor
dec
fdivr
test
sbb
fcmovne
mov
mov
into
shl
cmc
nop
mov
ljmp
fmulp
jecxz
shr
xlat
sbb
clc
iret
call
xchg
sub
ret
cld
call
test
in
shl
loop
cli
out
rcll
out
call
xlat
cli
ljmp
leave
mov
int3
xchg
into
das
iret
ljmp
lret
jmp
cmc
loopne
test
aam
lret
loop
leave
ret
cmp
out
int
mul
cli
repz
in
in
leave
fsubr
fmulp
into
adcl
fdivr
enter
xor
ror
loope
fmull
sti
in
xchg
lret
xchg
rol
ss
ror
xlat
cmp
ffree
decl
fcmovu
mov
mov
enter
xor
hlt
shl
out
out
loopne
idiv
xlat
clc
fcmovb
test
out
loope
mov
xor
clc
sub
cmp
cmp
sar
rol
jmp
out
mov
repnz
in
jmp
lret
cld
out
cmp
loope
lret
shl
sti
loopne
mov
stc
xchg
test
cmp
ss
das
rol
hlt
cmp
jmp
imul
repz
rol
test
orl
fisttpl
ret
in
out
out
fnstsw
aaa
xor
int
test
out
call
lret
out
roll
xor
iret
hlt
in
not
fstp
fmul
out
sti
std
ljmp
sub
icebp
jmp
xor
lret
xor
repz
fcmovbe
cli
fcmovb
fdivr
faddl
in
call
jmp
in
sarl
repz
enter
out
idivl
aad
test
lock
loop
call
jecxz
rcl
lock
out
ds
loopne
xlat
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
inc
adc
jle
adc
jle
rcr
ret
in
test
sar
icebp
ror
cld
std
xchg
out
lret
out
int
sti
fsubr
icebp
loop
shl
fst
cli
out
hlt
in
jecxz
ret
in
jmp
orb
hlt
aaa
shl
sbb
in
repz
neg
loop
orl
ror
xor
call
int3
and
cli
rcr
leave
out
lret
mov
sti
shl
aam
aam
xor
jmp
leave
cmc
stc
int3
into
fsubp
sar
fcmovu
mov
shl
mov
lock
jecxz
cmp
hlt
hlt
ffree
aad
xor
mov
repnz
movl
jecxz
into
in
xor
iret
jmp
repnz
rcr
ss
fcmovb
cmp
lret
test
cmp
iret
in
xor
shl
iret
aad
cmp
int3
xor
repz
call
enter
popl
cmp
int
int3
dec
into
ljmp
fdivr
orb
shl
mov
xor
in
out
cmp
idiv
rcl
imul
fcmovne
xchg
vpmaxub
in
fcos
fdivr
fsubp
in
test
fmul
sub
ljmp
cmpl
ret
aam
aam
in
ljmp
xchg
cmc
rol
fsubrl
fsin
cld
out
sub
out
out
mov
rolb
into
mul
vpsubd
into
loopne
sbb
lret
jmp
jmp
loope
sub
out
sub
jmp
fcmovu
aam
neg
in
in
out
and
out
sti
fmuls
loop
and
out
ror
repnz
cli
aad
sarb
flds
cmc
sub
out
fucomip
loope
loopne
jmp
jmp
cli
cmp
out
loope
mov
std
std
mov
fdiv
cli
and
int
aaa
into
xor
out
jmp
loopne
cmc
fst
icebp
call
cmp
iret
into
rolb
int3
mov
movzwl
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
push
jmp
jle
add
iret
out
fcom
lock
ds
rcl
sub
stc
out
icebp
fsubp
jmp
mov
aaa
xor
xor
cmp
jmp
int3
aas
lock
and
loop
xchg
jecxz
fmul
inc
fxch
jmp
ljmp
loop
aaa
in
loop
sar
test
sti
xchg
mov
mov
out
les
cmp
fcmovnbe
cli
fadds
test
in
sti
nop
mov
shl
clc
aad
lret
clc
enter
rol
add
fcmovnb
jmp
sti
sti
out
int
out
jecxz
xor
iret
jmp
out
aam
repnz
xor
or
mov
test
loopne
aad
enter
xor
cli
cmc
std
aam
int3
testb
lret
xchg
int
ljmp
xlat
out
ljmp
test
stc
and
out
std
nop
out
fmul
nop
imul
loop
jecxz
std
fidivrl
repz
fnstcw
sub
ds
repz
lret
stc
repnz
orl
out
into
aam
hlt
cmpb
out
sti
mov
loop
loopne
jecxz
mov
loopne
rcl
neg
out
cld
fsubr
cmc
icebp
cmp
addl
call
rol
shlb
rol
aad
repz
rcr
in
cmp
sar
in
jecxz
jmp
jmp
out
jmp
jmp
aad
vmaskmovdqu
out
leave
loop
movb
xchg
fucom
in
ror
ror
ror
ret
sar
out
ror
int
int
rol
enter
leave
in
mov
lock
orb
ror
fxch
clc
lock
sar
shr
in
stc
int3
nop
mov
jmp
jmp
cmp
call
hlt
aam
jecxz
ret
cli
out
jmp
lret
xchg
mov
aad
fstp
clc
fcom
fdivrl
out
lock
in
add
inc
cmp
add
aam
aad
fstp
movsb
ficomps
pop
xor
add
std
xchg
mov
loop
sar
cmp
out
lret
cmc
in
xchg
div
aad
fninit
out
xor
mov
lret
sub
hlt
in
rcl
cld
fcmovu
lret
shl
ds
fstp
in
cld
xchg
lea
sub
aaa
hlt
test
xchg
mov
lea
ret
ljmp
int3
cmc
cmpl
cmpb
ret
in
cld
clc
test
out
iret
icebp
shl
xchg
xor
in
lret
idivb
jmp
shl
cli
rcl
test
in
cmc
mov
xor
imul
stc
int
into
xlat
fmul
cld
ret
leave
sti
enter
int
xchg
in
test
in
fcmovbe
cmp
iret
into
repz
in
int3
in
out
aam
xchg
fsubp
stc
sti
jmp
xchg
xchg
sar
in
jecxz
fcomp
cld
cmc
cmp
rol
ds
fldl
call
loopne
xchg
call
stc
lret
cli
in
into
xlat
cli
cmp
in
mul
aas
test
ljmp
out
xchg
out
out
shlb
cs
cld
int
out
in
in
cmp
sti
aas
call
out
loopne
rorb
out
xor
lret
cmp
repnz
ss
icebp
fimuls
test
nop
iret
or
icebp
ret
out
in
rcl
cli
jmp
cld
aam
aad
xchg
cmp
into
clc
mov
loop
lock
repz
int3
leave
int
stc
lock
jecxz
not
sar
aam
fsubp
leave
mov
out
lret
adcl
iret
jmp
xlat
fidivrl
out
jecxz
in
ret
icebp
faddl
sub
lret
rcr
enter
aad
out
repz
fsub
frstpm(287
hlt
loopne
rol
lret
call
jmp
std
test
lret
shr
cmp
lock
in
ds
fiadds
ljmp
in
cli
into
fdivrs
orb
add
ret
lret
enter
int
cltd
movsb
imul
mov
xchg
mov
adc
jle
cld
filds
stc
std
in
fisttpl
xchg
iret
das
loop
xor
fidivrl
loopne
aas
aad
rcl
test
ljmp
out
mov
in
fld
out
xor
cmp
idivb
cmp
lock
rorl
lret
in
out
loopne
mov
cmc
out
cmp
jmp
into
aam
xlat
aas
loop
repnz
xchg
sar
int
lret
lock
xor
std
cld
fsin
clc
neg
int
xchg
in
loope
lret
sti
leave
repnz
enter
hlt
fcomi
jmp
fcom
mul
sbb
cli
jecxz
nop
ss
ss
clc
lret
addb
mov
call
jmp
lret
cmc
rcl
sti
std
flds
icebp
sti
xchg
fsubr
out
xchg
in
imul
loopne
cmp
jmp
stc
call
stc
in
shl
test
cli
jecxz
iret
movb
into
aam
xor
idivl
shr
aas
fcmovbe
stc
clc
shl
cmp
movl
xchg
ljmp
cmp
iret
cmp
clc
lock
fnstsw
cli
div
flds
xor
test
fidivrl
lret
xor
or
cmp
out
std
leave
cli
in
loopne
icebp
xchg
ror
clc
sub
clc
icebp
ljmp
sar
fcmove
cmp
mov
loope
lret
cmc
xor
out
ss
test
ds
stc
ret
out
xlat
out
sub
xchg
loopne
sar
ror
xor
jecxz
xor
icebp
mov
clc
roll
sbb
rcl
hlt
enter
xlat
call
jmp
jmp
aaa
out
aas
faddl
in
sbb
jecxz
xchg
cs
in
xor
sti
call
xlat
shl
out
aas
ds
ret
mov
xchg
sub
add
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
loop
subb
lret
into
repnz
divl
roll
fisttpll
xlat
int
jmp
aad
shr
ror
clc
cmp
fcmovu
lret
clc
fildl
mov
test
fucomip
int3
sub
out
xlat
jmp
cmp
aas
idiv
aad
cld
fiaddl
in
aad
iret
shl
fsubr
jmp
sar
addb
mov
repnz
xchg
dec
loope
xor
aam
shll
shl
xor
out
mul
loop
xchg
cld
ljmp
shr
sub
in
ds
adc
and
test
test
mov
repz
xor
out
cld
rcr
fsub
testb
clc
loope
fcomi
loope
mov
sub
fmul
lock
xlat
lock
xchg
lds
fsubr
out
mov
fcomip
lret
std
lock
loop
sarb
enter
out
mov
repz
aad
xor
xor
xor
jmp
hlt
xor
out
stc
cld
sti
call
xchg
in
adcl
hlt
loopne
test
iret
test
out
neg
fisttps
jmp
stc
aam
cld
xlat
jmp
xor
cmp
ss
out
ret
fiadds
lret
loop
xchg
test
xor
cmp
xor
fcom
jmp
ret
sarb
in
adc
in
nop
rorb
mov
cmc
ret
fucomi
clc
aad
aas
and
roll
leave
mov
lock
sub
aad
call
rolb
out
clc
in
in
jecxz
in
out
cmp
std
fstp
sar
loop
rcr
aas
and
fcmovnbe
mov
ljmp
loope
call
xor
cmp
loope
cmp
jne
pop
jmp
int3
into
fmul
fsubrl
in
jecxz
ret
sbb
adc
jle
fimuls
in
test
xchg
fucomip
xchg
out
out
lret
ror
rol
sti
call
shl
enter
loope
stc
repz
jmp
ret
int
into
ljmp
sarb
cmc
jecxz
loop
fst
mov
xchg
out
loope
repnz
ljmp
cli
jecxz
fcmovnb
ljmp
lret
xchg
nop
in
fsub
jmp
cmp
cmp
cmp
out
cli
ret
ret
std
jmp
jecxz
in
jmp
int
not
std
aam
sar
rcl
in
aas
hlt
sub
xlat
xchg
addb
xor
lret
aad
ror
aas
fcmovb
clc
aad
ds
in
fimuls
test
test
aam
fcmovu
shr
loopne
cld
aam
clc
fdivr
fcmovne
ljmp
lret
aam
cli
out
call
cmp
fcmovb
aas
out
hlt
ret
mov
lret
jecxz
xchg
cmc
out
call
fcmovnu
ror
lret
aam
std
fnstcw
fdivr
aad
int
lret
int
nop
jmp
xor
xor
int3
icebp
int
aaa
rcl
jecxz
rcr
iret
cli
cli
mov
jmp
rcr
xchg
xchg
lock
jecxz
fyl2x
std
aaa
filds
aad
repz
out
orb
cmc
leave
fmul
cmp
aas
rcr
fincstp
icebp
cli
out
loopne
lret
rorb
mov
idivl
xor
icebp
lock
fnstcw
cmp
icebp
shl
cmp
test
out
shr
ss
cmp
shl
int
not
cmc
xchg
cmc
fadd
call
fst
cs
fucomi
cs
into
shr
icebp
sbb
out
loope
in
fdivr
loope
nop
int3
mov
loopne
fdivp
ljmp
xor
in
std
in
into
fcmovnu
movl
mov
cmp
sub
add
ret
ror
aam
mov
push
dec
xor
jle
imul
lret
fcmovnbe
in
cmpl
test
lret
xchg
cli
ljmp
sti
fidivrl
icebp
fdivr
ljmp
mov
fdiv
in
rorb
mov
xbegin
cmp
call
shl
rolb
fsubrp
cli
stc
int
jecxz
enter
mov
cmp
shl
cmc
mov
ret
test
cld
cld
std
stc
leave
jmp
int
xchg
ror
xor
aam
out
neg
aas
cmp
fcmovnu
in
rclb
xor
fstpt
fcmovb
jmp
cld
ss
cmp
enter
std
mov
fmul
out
not
lds
iret
aaa
leave
xor
aas
xor
aad
idivb
out
mov
fsubrp
nop
decl
cli
aam
fsubr
clc
xor
stc
cli
test
sti
cli
lret
hlt
in
mov
in
cmp
in
lock
in
cld
aaa
cmp
aaa
jecxz
movb
out
stc
stc
mov
call
cli
sarb
fiadds
xlat
aam
jmp
stc
cld
in
ror
mov
out
jmp
cmp
stc
mov
std
fcmove
enter
test
xchg
adc
in
int
fmul
cmc
in
jmp
iret
ffreep
lock
hlt
xlat
sti
filds
ljmp
lock
cmp
ret
sti
cmp
sbb
faddl
test
mov
cli
xor
xor
hlt
in
roll
test
icebp
mov
out
shl
aad
in
not
fdiv
ret
loope
loopne
in
mov
or
std
nop
jecxz
call
jecxz
enter
lret
imul
leave
adc
out
xchg
fcom
std
call
in
repnz
repnz
shl
aad
shr
loopne
and
and
loope
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
leave
in
jmp
int3
leave
test
xchg
fmul
hlt
xor
in
repz
xor
sti
fsub
cmc
jecxz
call
aad
ret
cmp
imul
shr
aas
lock
cli
sbb
fnstsw
lret
call
out
loope
in
iret
das
enter
cmp
repnz
xlat
sub
xor
hlt
out
into
xor
xor
rcr
test
mov
loop
fninit
enter
jecxz
jmp
ror
cmp
clc
out
fdiv
cmp
ds
ds
test
mov
hlt
mov
out
xorb
rcl
enter
dec
loope
loopne
ret
jecxz
out
enter
faddl
lret
hlt
aam
fcomi
vpminub
int3
into
sarl
fcmovnb
sti
mov
xlat
jecxz
int
inc
lock
call
cmp
aaa
fcmovbe
xlat
ds
in
fdiv
fmul
xchg
mov
ss
fcmovnbe
cs
enter
std
ror
in
xchg
test
mul
cmp
in
out
mov
xor
cmc
leave
cli
xor
cmp
in
cmc
repnz
aaa
cld
cmp
fimuls
lret
shrb
jmp
hlt
lret
neg
repz
cmp
ffree
icebp
fstpt
sarb
fsub
icebp
leave
cmc
out
xchg
icebp
shl
repz
stc
fcmove
into
dec
repz
addl
call
mov
xchg
shl
ret
ror
lret
hlt
sti
cmc
ret
aas
std
sbb
int3
mov
rolb
out
cld
cld
aaa
stc
cmp
cli
cmp
mov
sbb
into
jmp
nop
fcom
int3
in
cld
out
adc
ret
ds
fucomi
xchg
enter
int
out
xchg
jmp
jecxz
cld
in
loopne
fabs
icebp
into
neg
ret
or
int3
jmp
cmp
in
mul
aaa
lret
lret
leave
clc
cmp
roll
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
out
cmpsl
stc
jle
adc
jle
call
neg
cmc
neg
fcmovu
fmul
test
mov
repnz
into
shrl
out
cmp
cmp
xlat
cmp
repnz
xchg
clc
jmp
filds
cmc
xor
jmp
shl
lret
out
cmp
cld
push
addl
push
mov
mov
rorb
xor
imul
neg
xlat
std
fsubr
in
cmp
ds
rolb
test
lock
das
jmp
shl
into
cmp
in
call
jecxz
jecxz
in
into
in
xchg
filds
xor
lret
leave
clc
into
cmp
stc
in
xchg
idiv
mov
loope
mov
or
iret
xlat
xor
cmc
fdivr
hlt
out
sar
aad
aad
fld
sti
loope
int
xchg
enter
das
jmp
aas
sar
cmp
aam
cmp
cmp
xchg
fldl
xor
xor
repz
out
ror
into
sbb
xchg
loopne
addb
out
lret
out
mov
ret
cmc
sti
lret
cli
out
cmp
xlat
lock
leave
stc
lret
fstl
xchg
in
fdivrs
clc
cmp
stc
out
cli
lock
loope
ret
jecxz
loop
sti
jecxz
xor
std
out
xor
xor
fmul
not
leave
ljmp
xlat
in
mov
cmc
ljmp
orl
fcomp
div
cmp
enter
jmp
lret
xchg
xchg
int
out
clc
in
cmp
fdivrl
in
int3
int3
lock
loope
cmc
cmc
fdivr
fcmovnu
lret
incb
xlat
xor
out
int3
ror
lret
sti
in
lock
ljmp
xchg
ljmp
icebp
loope
cmp
mov
cmc
fmulp
lock
mov
out
in
fdiv
cld
cmp
leave
fcomip
cmp
out
icebp
cmp
cli
mov
lock
mov
mov
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
daa
ror
sti
jle
adc
jle
test
ret
ss
jmp
in
loopne
aam
mov
xchg
out
mov
fsub
lret
or
faddp
xchg
fst
decl
iret
loope
icebp
lock
in
aam
xor
xor
lret
ret
test
ftst
jecxz
jmp
jmp
out
cmp
ljmp
std
testl
test
mov
in
hlt
jmp
mov
clc
fstpt
in
fcmovnbe
cmp
mov
ds
clc
jmp
addl
xor
cmp
ror
aad
stc
jmp
or
call
xlat
das
aad
xor
cld
sar
cmc
fptan
in
fdivr
loope
aad
in
enter
rcl
mov
in
in
out
idivl
repz
loope
cmc
out
fnstcw
mul
sar
test
testl
sar
lret
in
call
in
fnstcw
mov
out
mov
iret
cmp
int
repnz
cld
std
aas
cmc
fcomi
fld
fisttpll
repnz
aad
ret
out
in
fpatan
sar
xchg
ret
out
fsubr
lret
out
xchg
aam
out
loope
cli
cmp
lret
std
clc
std
xor
cmc
loope
out
fdivr
test
jmp
repz
xor
into
std
out
out
clc
cld
xlat
add
ret
repz
xor
cmp
in
cmp
out
rol
sbb
fisttpll
incb
iret
in
out
leave
stc
cld
xor
fisttps
out
loopne
ljmp
xor
fcomp
jmp
imul
aas
sar
stc
cli
rol
stc
incb
in
mov
cld
notb
repnz
xor
clc
repz
std
mov
mov
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
repnz
rorl
lret
std
in
xchg
leave
lret
aaa
int
jecxz
repnz
xchg
mov
ljmp
enter
or
xor
hlt
sub
icebp
in
out
call
mov
out
cmc
ljmp
fmulp
stc
call
cli
int
ret
test
cli
in
stc
in
lock
lock
cmp
std
cmp
out
rcr
lock
cli
ljmp
mov
test
jecxz
aad
jmp
repnz
xor
cli
repnz
xlat
in
shl
fmull
xchg
int
fnstenv
ljmp
iret
call
jmp
loopne
popl
loop
aad
fcmove
xor
fldl
cli
cmp
rorb
mov
jecxz
int
f2xm1
imul
out
in
div
std
out
cmc
fdiv
mov
into
mov
ror
in
out
sar
std
int
add
int
in
ret
int3
shl
fucomip
aas
loop
aam
lret
enter
lret
cmp
fdivr
ret
test
out
lock
cld
loop
loop
enter
leave
fnstenv
ss
sbb
xlat
out
addb
test
xchg
jecxz
cmp
out
cld
cmpl
xchg
std
fimuls
mov
call
rcr
hlt
aam
in
xlat
hlt
repz
test
and
lret
mov
shr
repz
fmul
xor
cmp
ret
fnstsw
aam
shl
int3
test
cld
leave
mov
shl
rcl
sar
shlb
cmp
sub
hlt
fucom
loopne
out
fildl
aad
lret
in
cmp
imul
aad
cmc
cld
xor
sti
cld
sti
cmp
xor
loopne
addb
enter
test
inc
or
push
or
sub
add
xlat
into
rcl
aad
fadd
mov
adc
jle
adc
jle
cmp
ss
out
cmp
sti
rcr
out
cmp
cmp
mov
fcomip
xchg
rorl
ss
cmp
out
lret
clc
cmp
sti
loop
decb
std
mov
out
jecxz
lret
in
lds
fdivr
in
ret
aam
shl
testb
lret
lea
repnz
std
ror
out
ds
aas
jmp
ret
loope
rolb
xor
xor
xlat
fsub
xor
jmp
enter
in
lret
mov
rol
cli
fnop
aaa
leave
cmp
in
out
cld
hlt
jmp
in
int
idiv
repz
cmp
cmp
enter
cmp
rcr
xchg
loopne
sub
lret
ficoms
lret
out
xor
out
cmp
testl
loop
mov
loop
aaa
xor
jmp
xlat
fld
ds
stc
repnz
xchg
incb
loop
out
in
out
lock
xor
icebp
call
test
fcmovbe
ret
in
in
ljmp
xchg
iret
loop
call
hlt
xor
ds
fscale
stc
xlat
ljmp
out
ljmp
rcr
xlat
ljmp
flds
call
loopne
xchg
lret
int
xlat
icebp
xor
int3
out
cmp
fcomp
iret
aad
aad
lret
ret
in
mov
out
xchg
out
sar
xor
aam
cli
lock
out
shll
in
add
out
stc
loop,pt
clc
leave
std
fadds
loopne
xlat
int3
aam
clc
aaa
out
lock
into
xor
test
out
icebp
xchg
in
out
loope
ljmp
idivb
ror
loopne
fcmovb
in
cmp
enter
in
lret
out
int3
ret
out
xor
iret
xor
dec
lock
in
shr
hlt
ror
in
add
sub
add
ror
enter
lret
add
cmpsb
mov
cmpl
clc
enter
int3
fldl
in
cmp
cmp
rcl
inc
cmc
testb
int
mov
std
shr
repz
sub
div
int3
repnz
rol
test
lret
out
loope
int
lea
clc
loop
int3
fldpi
idivl
ds
movl
in
decl
aad
leave
in
aam
fcom
fucom
rolb
test
cli
repz
xor
enter
loope
fsubr
loope
loopne
ret
call
mov
shr
nop
cmc
pop
loope
repz
std
fidivrs
call
cmp
fiadds
xlat
xchg
std
in
icebp
into
ljmp
vpminsw
in
fnclex
sub
neg
neg
shl
lret
test
into
aad
in
call
stc
repnz
call
cmp
shl
repnz
shl
mov
jecxz
xor
lret
xor
aad
enter
in
iret
rol
std
test
in
fnclex
xchg
xor
out
xlat
call
call
fdiv
rolb
cld
iret
sti
out
or
in
cli
fcom
cmp
idivb
in
iret
cli
cli
roll
xchg
test
loop
xchg
das
in
out
out
jmp
call
xchg
mov
stc
cmp
test
mov
cli
mov
xor
xor
call
cli
cmp
cmp
aam
sti
xlat
mov
enter
xchg
loop
repnz
out
cli
cmp
repz
stc
into
in
sti
fcomp
mov
stc
fadds
shl
lock
xor
repnz
cmp
int3
repnz
cmp
rcl
shl
sti
std
cmc
fsub
int
loopne
repnz
fdiv
aam
fdiv
shl
div
shl
ret
shr
lret
repz
repz
lock
cmp
test
or
add
or
mov
jmp
int3
enter
into
push
mov
cmc
in
addl
jle
adc
jle
out
repnz
stc
icebp
shr
repz
jmp
fdiv
into
mov
roll
xlat
repnz
cmc
xlat
int
int
not
stc
cmpl
cmc
in
in
decb
xor
xor
clc
shl
shr
std
cli
test
out
ret
cmc
cld
in
out
sti
loope
and
jmp
ljmp
cmp
xlat
cmp
loope
rol
test
cmc
filds
lock
hlt
sub
xor
leave
neg
aaa
ret
fsqrt
decb
adcb
xor
out
fdiv
fscale
xlat
fcomp
icebp
out
ljmp
out
out
jecxz
stc
aam
jmp
rcr
idiv
lock
hlt
test
out
nop
jmp
in
ret
mov
sti
call
std
cmc
call
fcomi
mov
lock
in
xchg
lret
imulb
loop
shll
enter
rol
test
cmp
cmc
addl
in
decl
hlt
ss
int
in
jecxz
out
repz
leave
fcmovne
jmp
faddl
xor
aaa
cmp
cmp
int3
rolb
shl
fdivr
in
stc
mov
loop
test
rolb
in
f2xm1
jmp
ds
cmp
in
lock
mul
ret
ret
int3
jecxz
enter
shl
xor
fcmovu
xlat
rcr
in
fcmovbe
ret
fdivp
fldl
cmp
lock
xchg
leave
mov
fcomip
stc
ljmp
fxtract
cld
stc
test
fidivrl
out
cmc
jmp
into
leave
out
aad
in
jmp
ror
out
cmc
fmul
aaa
int
cmp
lock
icebp
sti
std
xchg
jmp
shl
out
cmp
out
cli
cmp
lret
loopne
cmp
lret
addl
adcb
enter
xor
out
aam
loop
rorb
call
je
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
sbb
ret
iret
iret
jmp
sti
repnz
xor
mov
repnz
iret
test
shll
fcomi
std
incb
adc
lret
lea
loopne
aam
fdiv
fnstsw
aam
ds
decb
test
in
lret
out
shr
enter
ds
cmp
xchg
leave
fmull
fimull
jmp
cmp
fst
repnz
loope
shr
cmp
lret
lea
call
hlt
out
cld
fdecstp
xor
out
adc
leave
loope
clc
mov
ljmp
out
xor
lret
ds
xlat
cmp
and
sub
or
out
xor
ss
ljmp
loope
out
in
fmull
lock
rcl
repnz
call
xor
aad
in
cmc
loope
jmp
nop
and
repnz
out
fsubrp
iret
rcl
xor
testb
test
mov
loopne
jecxz
ror
in
icebp
lret
cli
in
sarb
loopne
repnz
enter
fsubr
xchg
fcmovnu
aam
in
xlat
xor
cmc
cmp
leave
dec
xor
lret
out
ret
loopne
clc
test
in
clc
test
xor
icebp
ljmp
sti
out
adc
aas
fadd
int3
repnz
mov
int
cmc
jecxz
xor
jmp
test
repnz
loop
ds
call
in
in
jecxz
div
call
aam
and
cmc
out
xchg
cmc
out
iret
clc
shl
test
loope
rcr
stc
fidivrl
icebp
fdivr
aas
test
call
repnz
mov
aam
out
loopne
xlat
ret
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
pop
ret
out
lahf
sub
jle
adc
jle
out
cmp
cld
mov
iret
jmp
lret
xor
int3
lds
stc
int3
rcr
clc
jmp
mov
loope
mov
mov
jmp
clc
jmp
iret
std
cmp
hlt
std
loopne
sti
loop
dec
sbb
jecxz
lret
into
out
xor
icebp
int
stc
sub
loop
xlat
xlat
out
out
shr
hlt
lock
rcr
in
in
cli
test
aas
fsubp
fidivrs
orb
xchg
ror
rcl
shl
aam
icebp
fdiv
in
icebp
ror
sti
in
repz
lds
faddl
mul
xor
xor
cmp
div
leave
cli
clc
icebp
loop
test
lock
int3
leave
in
div
cld
jmp
rcr
iret
out
fcmovu
aad
loop
xchg
icebp
mov
xchg
into
int
jmp
out
fcmovbe
sti
xor
sar
aas
cmp
xlat
mov
stc
lock
cmc
ret
icebp
das
repnz
lret
cmp
aad
les
rcr
ljmp
xchg
lock
cmc
int3
out
xor
cmc
call
iret
sti
cmpb
fldl
std
test
sti
into
icebp
orl
ss
xor
fucomi
ret
icebp
repnz
jmp
fsubrp
mov
in
lret
cmp
enter
cmc
cmp
cmp
mov
xchg
loopne
fucomi
mov
loop
das
lret
jmp
iret
out
cli
cmp
xor
fsub
mov
jmp
mov
loopne
fdivrp
enter
out
neg
sar
iret
lret
repz
out
stc
aad
cli
fstp
lret
or
fisttpll
jecxz
out
clc
xlat
cmp
rcr
aam
icebp
jmp
addl
out
enter
in
clc
cmp
stc
shr
cmp
jecxz
ffree
lret
mov
lea
lock
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
push
popa
outsl
aas
mov
adc
jle
int3
jecxz
ret
out
lock
xlat
sbb
in
out
loop
cld
enter
hlt
jmp
leave
cmp
fsubrp
call
into
loop
and
rcr
mov
xchg
lret
mov
aas
icebp
shlb
div
lock
cmp
cli
adc
ljmp
out
orb
into
icebp
std
in
fnstsw
cmc
sti
cmpl
ljmp
jmp
out
out
loopne
call
fcomi
clc
shl
iret
ret
std
roll
xlat
in
nop
fistl
jecxz
divb
aad
imul
hlt
fcomip
std
repnz
in
sti
out
ljmp
int
cmp
loope
lock
cld
inc
or
xor
leave
mov
loopne
xlat
stc
lret
test
xorl
sti
shl
loope
filds
xchg
hlt
loopne
xlat
out
out
sar
out
fstp
in
int3
jmp
test
cld
xlat
movb
loopne
rcl
shr
jecxz
div
jmp
hlt
into
cmp
xor
stc
cmp
stc
jecxz
cli
lret
ret
fucomp
clc
sti
cli
loop
xchg
lock
loopne
out
out
fcmovnu
iret
clc
aam
int3
cld
loop
shl
mov
loop
loopne
dec
iret
out
or
ljmp
ret
cmpl
xchg
fdivr
neg
mov
aad
leave
out
ret
xlat
idiv
ljmp
loope
sbb
int3
mov
sub
mov
aam
xchg
repz
lret
lock
int3
lret
aad
shl
addb
cli
nop
fldl
in
clc
ror
fcmovbe
mov
clc
sar
fcmovnbe
cmp
loope
aam
div
clc
xchg
ljmp
repnz
fsubr
in
ds
not
roll
hlt
addl
icebp
xchg
notb
fnsetpm(287
repnz
cmp
fucom
iret
cmp
inc
or
inc
or
pop
out
decl
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
inc
jle
rorb
jle
ret
addl
hlt
call
aad
xor
faddl
loop
clc
ret
fiaddl
out
fildl
out
in
aaa
lock
int3
stc
cli
rol
shl
orl
in
xchg
mov
loopne
int
in
lret
shl
repz
out
xor
test
xchg
mov
into
in
out
xchg
cli
out
clc
aam
icebp
aaa
sbb
and
cmc
stc
testl
call
fcomi
out
aad
fdiv
aas
loop
into
rol
rolb
jmp
iret
lret
mov
xor
int
cmp
idivl
fcmovbe
shlb
out
stc
cld
sti
mov
aad
out
fabs
nop
xchg
int
aaa
iret
out
cmp
stc
hlt
hlt
fsin
repz
cld
fsub
cli
leave
cli
leave
ret
decl
mov
in
cs
shl
fstp
lret
icebp
icebp
clc
rol
xchg
hlt
add
fcos
iret
fldl
ffreep
xor
div
fmul
cli
cli
cmp
in
cld
ror
roll
out
in
out
lret
lds
clc
into
cs
xor
cmp
xlat
shl
out
int3
and
int3
mov
call
or
loope
fdivrp
std
fadd
add
mul
mov
cmp
out
icebp
aaa
das
shl
lock
cmp
aaa
faddl
repz
rolb
cld
out
ret
out
fsubrp
xchg
out
int3
out
ljmp
fcomip
shr
ret
ds
leave
mov
lret
dec
lret
cmp
fstp
aad
aas
call
mov
out
out
jecxz
shrl
loope
out
stc
in
stc
sti
lret
xor
lock
lret
jmp
mov
repz
fcomi
cmp
shl
loop
fcmovb
jecxz
sar
bnd
int
test
in
out
loopne
cmc
xor
enter
aaa
aad
roll
in
loopne
neg
xlat
iret
iret
out
out
shlb
loop
xor
repnz
imul
iret
in
xchg
ret
loop
jmp
cld
mov
out
into
out
out
stc
fsub
cmp
lret
sti
fsubr
int
lret
fcomip
xor
fdivs
test
cli
cmp
cmp
out
add
sti
test
addb
lret
aaa
fst
clc
fstp
xor
cmp
roll
ror
xchg
xchg
xchg
aas
ljmp
ret
clc
xchg
movl
add
jmp
rol
rcr
fld
pop
into
shll
adc
jle
repz
fst
leave
xchg
jmp
fists
lret
neg
fld
fst
fmull
icebp
icebp
nop
aam
lock
shl
in
hlt
cmp
stc
cmp
stc
rcr
iret
fadds
idiv
adc
fcmovne
fisttps
rcl
rcr
aas
cmp
sar
lds
fucomi
lret
in
loope
shl
out
cmp
into
not
into
cmp
shl
sti
sti
std
rcr
int3
add
mov
lds
ftst
xor
hlt
out
aad
aam
loop
loop
xchg
in
fmulp
jmp
or
jmp
iret
imul
ss
fcmovb
loopne
rcr
loop
rcr
clc
mov
fsubr
addl
icebp
ror
lock
sub
out
repnz
enter
loop
xchg
lret
xchg
loop
shl
in
cmc
repz
sar
testl
fadds
mov
rcl
in
loope
aam
cli
clc
fdiv
in
fdivrp
movl
xchg
repnz
rol
loope
cmp
in
cmc
fcompp
repnz
out
ds
loop
ret
lret
lock
leave
lock
test
aam
hlt
repnz
idiv
sub
or
aad
cmp
loope
out
in
nop
int3
mov
mov
int
sub
int3
xor
std
add
loopne
ret
xchg
loop
clc
loop
mov
loopne
fxch
cli
jmp
leave
iret
loope
cmp
in
loop
std
xchg
mov
xchg
rcl
call
clc
iret
stc
fdivp
shl
loop
aad
loopne
jecxz
loopne
jecxz
cld
mov
divb
loope
in
ljmp
repz
aas
rcr
enter
mov
out
in
int3
in
clc
cmc
out
clc
fld1
fdivr
cmc
lret
cmpl
sub
lea
and
xor
icebp
out
jmp
out
rcr
fildl
loop
hlt
fcmovnbe
incb
in
xchg
xchg
call
in
rcl
ljmp
clc
ret
call
cli
test
lea
rol
cmp
std
in
call
inc
and
in
xchg
test
cld
cli
nop
fisttpll
shl
les
int3
int
cmp
jmp
in
loope
out
sar
xchg
sti
hlt
fadd
dec
int
rorb
hlt
iret
fmul
jmp
repz
cmp
fdivr
hlt
sti
cld
aad
mov
push
xchg
repnz
call
out
out
shl
into
xchg
inc
cld
daa
test
inc
add
add
add
rolb
and
add
and
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
movsb
scas
insb
sub
mov
fildl
or
in
xchg
aad
xor
cs
fucomi
iret
cmc
int3
loope
xchg
fdiv
test
xlat
and
addl
ret
lock
int
int3
aad
add
fcmovnb
sti
cmp
and
mul
rclb
out
xor
sub
cld
cmp
out
xor
rcr
add
cld
test
out
mul
loope
icebp
fists
cmc
iret
cmp
aad
cmp
in
out
aad
cmp
hlt
std
imul
fmul
into
mov
shrb
call
repnz
test
aas
aad
std
out
test
test
loopne
shl
ljmp
std
ss
jmp
fdiv
and
shr
xchg
fcomp
int
icebp
in
out
fucomi
lret
ss
fsubp
cmc
aam
jmp
in
std
mov
iret
xchg
call
out
sti
ljmp
iret
xlat
loop
idiv
movl
enter
repz
repnz
repz
cmp
shl
or
cmp
aad
fsub
test
fsubr
cmp
shr
aam
xor
leave
fmulp
into
rcl
in
ret
out
cmc
leave
jmp
int
hlt
xchg
in
loopne
int3
lock
int
sar
aad
sbb
cmc
fsubr
mov
icebp
iret
decl
out
cli
jmp
fxch
xor
hlt
stc
shr
repz
loopne
or
int3
test
lock
divl
sub
ret
iret
inc
aaa
idiv
repz
ret
aam
hlt
fmul
iret
sti
sub
in
out
loopne
lret
cmc
fdivr
xlat
ret
test
jecxz
add
cld
lret
std
call
xchg
loope
out
ss
std
icebp
fcom
into
lock
ds
loopne
sbb
loopne
int
hlt
cs
not
in
cli
cmp
repz
rcr
icebp
mov
mov
xchg
sub
mov
call
xlat
call
out
fst
xor
in
int3
out
fcmove
iret
adc
int3
shr
lret
cmc
cmp
rolb
fimull
int3
mov
sub
in
aad
shr
aad
in
xchg
mov
call
xchg
in
mov
xchg
in
loopne
in
aam
in
cmp
fsub
in
aad
call
aam
rol
adcl
lds
cli
in
cmp
iret
cld
cli
std
stc
cmp
loopne
aam
testl
xor
stc
hlt
cli
xlat
fdivrl
cmp
clc
mov
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
lock
cmc
std
mov
orb
enter
into
iret
neg
hlt
icebp
shl
int
hlt
stc
iret
repnz
test
lea
rcl
shll
xor
fneni(8087
iret
icebp
cmp
lock
clc
in
in
cld
std
mov
ret
stc
pushl
jecxz
fisttpl
mov
sbb
repnz
iret
out
cmc
cli
lret
lret
cmc
call
ret
xlat
sti
stc
adc
jecxz
addb
int3
into
aam
hlt
cld
enter
repnz
loop
in
loopne
fucomip
fmul
fucomi
fsubr
jecxz
rcl
test
out
out
fnstenv
out
std
int
cmp
imul
or
fprem
and
and
int
in
call
aaa
jmp
out
xlat
stc
cmp
lds
orb
lock
cld
lock
lret
ror
cmp
xor
into
cmp
xlat
fdiv
inc
test
enter
testl
int3
xor
aaa
int
lret
test
repz
repz
fnstsw
xlat
jmp
fcmovnu
int3
imul
loopne
idivl
out
lret
aam
and
xchg
mov
in
test
std
int
hlt
leave
iret
cs
lock
and
loopne
ljmp
lock
in
hlt
shll
xlat
jmp
fcmovb
cmp
cmp
icebp
clc
fyl2xp1
mov
test
leave
loopne
addb
shlb
jmp
fld
fucomip
int
shr
not
jecxz
roll
fistl
ljmp
sti
in
lret
xor
clc
int
orb
loopne
xchg
fstpt
cmp
stc
fcmovne
out
cmc
shl
sub
lds
lret
lea
xor
iret
cmp
aad
shll
cmp
repnz
push
rol
cmp
mov
xchg
lret
icebp
loop
out
in
clc
out
cmp
fcmovnu
aad
repz
in
in
test
lret
int3
adc
fdiv
sub
fcmove
icebp
shr
sar
ret
fadds
out
loopne
shr
xchg
int3
int
into
shlb
in
in
ds
loope
aas
cmp
rol
aas
neg
loope
mov
orb
xor
lret
aas
rcr
neg
out
cmp
clc
cli
out
repnz
sub
lret
ret
out
repnz
mul
int
icebp
icebp
in
enter
cli
cld
cli
shr
sbb
cmp
jmp
rcl
aad
aad
shll
aad
loope
xchg
jle
mov
repnz
cmp
in
in
mov
in
out
mov
loope
xor
in
out
test
aam
adc
sar
fcmovnb
lret
lret
fmul
jecxz
rorl
out
xlat
shr
cld
cmp
loop
mov
mov
cmp
icebp
fdiv
loop
ror
in
out
clc
jmp
ds
rcr
int3
in
cmc
fcmove
hlt
mov
xchg
in
loop
lret
xchg
in
lock
int
enter
cli
into
loopne
fcmovbe
shl
std
enter
iret
orl
aad
clc
lock
std
rol
jmp
loop
sbb
xlat
stc
les
in
int3
loop
ret
in
in
xor
repz
cmp
incb
call
ror
in
orl
ljmp
aam
cli
fsub
ret
cmc
lret
fimuls
iret
in
xor
xor
out
aam
clc
idivl
repz
xlat
shl
hlt
stc
fcmovnu
xlat
in
icebp
jmp
out
ror
int3
into
xlat
int3
int
icebp
int3
int3
aam
sarl
test
enter
ljmp
lock
lret
cmc
iret
cmp
testl
out
test
jmp
out
rol
ret
aam
rcr
cli
sarl
repz
loop
sbb
xchg
repz
xlat
out
jmp
cmp
adc
lret
fiadds
roll
into
stc
cmp
fidivrs
out
iret
mul
incb
cmc
leave
fdivp
sti
mov
cld
out
out
dec
into
shl
int
cld
cmp
repnz
in
icebp
fucomi
xchg
xchg
test
lret
call
into
int3
call
in
ljmp
xchg
ljmp
lret
ror
xor
lret
cmp
cmp
fucomp
rcr
sar
xchg
ljmp
xlat
xor
ret
sar
fildl
fucomp
aam
addb
jmp
nop
test
icebp
repz
enter
aaa
stc
int
jecxz
addb
mov
jmp
xchg
aam
out
aam
loopne
out
iret
addl
xchg
std
movb
enter
clc
fdivr
into
repnz
cld
cld
cmc
std
addb
fildl
jmp
repz
xor
out
aam
loopne
lret
clc
hlt
rcl
sbb
loope
fsin
jecxz
loope
sti
rcl
ljmp
in
call
and
add
add
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
in
sub
jle
add
rcl
testb
jmp
test
in
xor
xor
aam
bnd
shr
ds
rol
rorl
loop
into
and
fsub
hlt
repnz
hlt
xor
iret
test
clc
loop
clc
sti
clc
or
loopne
out
orl
fxch
xor
rcl
cld
ss
out
aam
out
cmc
aas
testb
mov
ret
int3
cld
repz
idiv
in
out
movb
mov
jmp
std
sti
mov
loope
out
into
not
in
lret
loopne
in
xchg
mov
aad
loop
xchg
mov
aam
fnop
out
lds
repz
fsub
clc
aad
lock
test
jmp
call
lret
in
out
hlt
out
loop
loope
out
and
int
mov
lret
xor
leave
lret
leave
rcl
loope
fdivp
cmp
test
mov
xchg
int
shl
clc
repnz
not
ss
lock
rcr
mov
jmp
cli
add
fmulp
mov
iret
aam
repz
hlt
xor
icebp
fidivrs
fcmovnb
cli
fscale
mov
lret
repnz
jmp
fsubr
shl
shl
not
loop
cli
incl
fldl
shrb
jmp
out
in
aad
loopne
repz
fxch
ljmp
out
xlat
out
xor
out
int
ss
fucomip
into
repnz
fmul
loope
loop
repz
loope
int
das
out
fcomi
cmp
call
cmp
leave
fmulp
cmp
and
ror
xor
fcompp
rcr
rcl
sbb
xchg
test
cli
int3
std
roll
shl
aam
testb
cmp
cli
test
lds
mov
xor
ret
out
cmp
ljmp
fdivrl
in
in
cli
fmulp
mov
in
test
mov
lds
fstp
int3
icebp
rcl
cmp
test
cmp
std
iret
aam
cmp
in
cmp
lret
ffreep
sar
fldl
ret
sub
fsin
call
clc
jmp
iret
call
icebp
rcl
cmp
out
fucomi
lret
ljmp
lock
xor
mul
out
sar
fstp
shl
fcmovb
fdiv
fadd
out
out
sub
or
call
out
xor
add
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
sub
inc
pushf
jle
mov
jmp
xchg
call
test
mov
iret
jecxz
loopne
loop
in
clc
fxch
jmp
cmp
in
fldln2
rcr
rcl
iret
std
jmp
fcmovne
ret
lret
fisttpll
in
clc
cld
fsubp
cmp
loop
fcmovnu
incl
nop
mov
lock
shl
out
ljmp
mov
out
fdiv
into
jmp
cld
icebp
jmp
shl
shl
test
in
cld
in
addl
call
lret
xchg
adc
lret
int3
ss
cmp
into
aad
sarl
call
stc
out
fldl
loope
sub
xlat
ss
icebp
xor
sti
and
clc
mul
xlat
incb
xchg
in
loope
adc
enter
fldz
rcr
ljmp
fcmovnu
stc
fsincos
loope
cli
cld
loopne
mov
ljmp
call
sbb
cli
fsub
test
clc
orb
out
int3
enter
clc
test
cmp
sar
cmp
mov
into
enter
out
fmulp
mov
out
std
clc
icebp
int
repnz
stc
jecxz
jmp
cmp
icebp
fcmovnbe
mov
into
icebp
repz
xor
int
ljmp
out
idiv
fucom
ljmp
mov
aad
lret
jmp
shl
ds
rcr
fcmovnb
fadds
enter
out
xchg
mov
int3
rcl
into
lds
icebp
ret
cmc
loope
les
mov
fdivrp
xchg
aad
shl
in
imul
xor
repz
in
aaa
fisttpll
mov
cld
mov
mov
sub
loop
leave
stc
stc
idiv
repnz
fnstcw
sar
repnz
stc
repz
imul
xchg
jecxz
in
mov
aam
icebp
cmp
out
imul
in
ljmp
rol
cmp
test
mov
xchg
xchg
int
out
into
enter
rcl
fiadds
xchg
ljmp
call
fcmovbe
clc
leave
fldl2t
in
fnstcw
aas
ds
jecxz
xchg
not
idiv
sti
jecxz
aad
mul
rol
jmp
cmp
hlt
loope
aas
sti
cmp
fadd
mov
loop
in
repnz
shr
and
fsubr
cmp
clc
lret
cmp
test
cld
test
in
fsubp
mov
aam
out
loop
jmp
cmp
clc
adc
hlt
inc
out
test
mov
jmp
out
ror
jmp
mov
in
in
mov
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
mov
lahf
jle
mov
sar
rolb
sbb
cmp
leave
in
jecxz
ljmp
ret
jmp
cmp
clc
addb
ret
clc
stc
loope
fimuls
fsts
sub
not
lret
aad
leave
loopne
int
sub
jecxz
test
repnz
test
imull
xor
ss
iret
fdiv
test
shr
loopne
enter
out
test
xchg
jmp
shl
xor
sar
xor
fcmovnbe
loopne
sti
call
fucom
into
rcr
xchg
xchg
sub
lock
aaa
fcmovbe
int
into
fmul
test
cli
enter
loopne
jecxz
fimuls
xor
int3
out
fxch
rcl
ds
xchg
test
in
hlt
div
ss
xor
fdivp
loope
roll
repnz
test
test
loope
leave
fmul
das
ror
cmp
mul
mov
in
out
icebp
roll
fildll
bnd
aam
shr
fsqrt
std
sti
fcmovbe
lock
ret
flds
in
loopne
int
out
call
idiv
cmp
fmul
fdivr
jecxz
add
lock
rcl
aam
xor
cmp
push
ror
ret
hlt
xlat
call
mov
shl
ljmp
std
lret
in
ret
aad
in
test
ljmp
mov
cmc
cmc
in
jmp
out
ss
int3
iret
repnz
aam
ret
fisttpl
nop
inc
repz
xor
lret
ljmp
int
test
lock
cli
xlat
enter
in
enter
jmp
cs
leave
aam
cmp
cmp
fcmovnb
test
decl
mov
sub
cs
out
cmp
ljmp
fdivr
clc
add
xchg
mov
mov
ret
lret
shlb
cmp
int
cmp
cmc
cmpl
cli
in
orl
xor
sbb
xchg
repnz
cld
repz
lret
jecxz
out
xchg
and
xor
fadd
neg
out
into
jmp
jmp
cli
fsub
icebp
lock
in
fiadds
xchg
mov
lret
div
xor
aaa
ss
cmp
clc
sar
sub
mov
loopne
in
test
call
out
aas
loope
cmp
repz
mov
fmull
hlt
out
dec
lock
xor
xor
xor
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
leave
test
mov
jle
int
shl
sti
clc
aad
fmulp
iret
shl
jmp
cld
out
jecxz
jmp
div
in
enter
cli
enter
rcl
and
xlat
aam
and
mov
shl
cmp
test
fstpt
ror
in
rol
ret
les
stc
jecxz
mov
mov
jmp
and
repnz
xor
jmp
cld
ror
cmp
cmp
loope
sti
loopne
out
mov
icebp
xchg
icebp
shl
stc
shrb
fucomp
aad
ror
sti
aas
std
orb
fxch
test
orl
cld
stc
clc
std
cmp
ljmp
xchg
out
xchg
lock
in
rol
in
in
hlt
hlt
cmc
fdivp
sti
in
cmp
loop
loop
jmp
in
iret
xchg
loope
mov
sub
iret
xor
leave
loopne
int
lock
cld
ret
int
loop
xchg
repnz
lea
repz
ljmp
cmpb
ret
lret
xchg
nop
lock
dec
in
enter
xor
int3
cmc
xlat
cmp
lret
in
rol
lds
std
in
xchg
repnz
aaa
call
xor
sarl
roll
out
fdiv
in
in
jmp
mov
in
xchg
xchg
iret
xor
rcl
stc
cld
hlt
cmp
call
out
loope
mov
xor
icebp
jmp
int
cli
out
shl
sar
int3
rcr
and
out
repz
out
stc
loopne
jecxz
ffreep
loopne
aam
cmp
int3
aas
xor
rolb
repnz
jecxz
cli
out
fsubp
cmc
loopne
shr
in
enter
into
int3
aas
lret
fdivp
in
shl
rcl
clc
ret
movb
xchg
imul
aaa
rcr
out
iret
repnz
cld
push
cmp
fcmovnbe
aad
testl
hlt
loopne
cli
in
into
cmp
int3
xlat
shr
aas
cli
jmp
fcmove
ret
rorl
ret
cmp
aam
fidivrs
cmp
fdivrp
clc
rcr
stc
addb
out
jecxz
xlat
rol
imul
int3
int3
xor
lock
aas
sarl
xlat
int
sub
xor
fcmovb
ljmp
in
icebp
fsubp
stc
jmp
mov
adc
lret
hlt
aad
icebp
ret
lock
orl
cs
icebp
ljmp
xor
ret
fcmovb
decl
call
int
aam
jne
cmp
jmp
rcl
aad
rcrl
out
iret
add
jle
shl
in
repz
lock
shr
cli
cmp
loopne
out
jmp
out
xchg
aaa
shr
imul
divb
in
fdiv
adc
shl
in
leave
loope
fsub
mov
lock
fdivp
ror
repz
out
fmulp
repnz
movb
into
fucomp
jmp
xchg
in
out
stc
in
sti
jmp
cli
fcomp
cmp
rcl
fdivr
cmpl
fidivrl
stc
clc
mov
std
jmp
hlt
xchg
aad
out
test
fnstenv
lret
int3
in
xchg
loope
in
clc
enter
loopne
fsubp
lock
call
neg
cmp
ret
sarl
in
in
loopne
test
loopne
filds
in
lock
ss
cmp
hlt
fidivrs
cld
cmp
in
fstp
cli
rcl
out
xchg
xchg
icebp
leave
test
sarl
repnz
mov
int3
sti
sti
sar
cmc
ret
fld1
lret
cmp
clc
in
sar
jecxz
mov
imul
std
in
in
jmp
and
in
xor
cmp
xor
iret
jmp
aas
repnz
fnsetpm(287
orb
into
out
aad
div
repz
sar
xor
cld
in
xchg
neg
ffreep
std
into
in
out
nop
aam
lock
leave
cmp
loope
and
mov
jmp
enter
stc
fsubr
cld
int3
xlat
cmp
cmc
mov
repz
sub
fucomi
lret
mov
faddl
shl
hlt
lret
loopne
jecxz
ret
aam
fst
cld
sti
cld
test
cld
lret
mov
jmp
testb
std
jecxz
fldl
mov
sub
repnz
aas
in
lock
xor
in
inc
into
stc
into
into
fdivrs
fdivr
and
ljmp
loop
vaddsubpd
xor
fmul
xor
cmp
jmp
leave
out
xchg
rcl
int3
shr
fdiv
call
dec
fstp
fcmovnbe
cld
out
fsub
enter
filds
jmp
shl
into
std
hlt
xlat
lret
ss
lock
sar
loop
mov
out
in
out
flds
xchg
loop
mul
iret
fsubr
shll
into
iret
fdivp
test
fadd
fdivr
xlat
leave
out
icebp
lret
into
repnz
rcl
jmp
cmp
sti
repnz
loop
rolb
fcomi
cli
add
lret
nop
xchg
shr
int
jmp
xlat
in
fdivr
clc
repz
cmp
out
std
lret
in
cld
les
inc
cld
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
int3
xlat
push
add
add
out
loop
cmc
leave
ror
cmc
ret
in
cld
mul
shr
leave
popl
mov
hlt
lock
fldl
cmp
fimull
jecxz
mov
cli
loopne
cmc
ljmp
fldl2t
cmp
jecxz
clc
xchg
sbb
sti
fsubrp
enter
fcmovne
test
into
loopne
cli
rcl
leave
fmul
xlat
fadds
jmp
neg
loop
popl
out
aam
cli
xor
ds
clc
loopne
repz
imul
fmul
enter
int
loop
aam
loop
lock
neg
in
fidivrs
fsubr
icebp
jecxz
clc
std
lret
aad
xchg
cli
xchg
xchg
mov
xchg
shl
in
hlt
sub
lret
in
cld
ret
aad
out
shl
jecxz
out
lret
jmp
mov
lock
out
cmp
lock
ds
xor
aam
cmp
leave
aas
fildl
xchg
in
iret
call
iret
cmp
loopne
out
out
std
cmc
cmc
jmp
leave
in
shl
loope
out
xor
jmp
aas
imul
ret
rol
xlat
shl
fmul
in
stc
cmp
mov
shlb
iret
sub
imul
cli
cmp
shr
ret
ret
cmc
fdivr
cmp
std
loopne
repnz
in
xor
out
fsubr
shr
repnz
repz
sarb
loop
enter
nop
mov
in
test
divb
xlat
fcmovne
int3
fcmovnu
lock
sarb
repnz
out
cmp
ret
ffreep
test
movl
fcomi
cld
divb
std
ret
enter
filds
loop
in
cmp
ror
stc
in
fadd
jmp
aam
mov
test
jmp
repz
fcomi
ror
loop
xlat
loopne
fisttpl
into
rcr
out
test
fcom
cmc
xor
cld
ds
cli
cmp
in
call
xchg
orl
mov
add
movl
cmp
movl
jmp
mov
fstp
enter
imul
jle
sbb
jle
mov
aam
in
ret
cli
in
das
cmp
cld
hlt
lock
in
jmp
mov
test
xchg
out
mov
xor
ljmp
loop
loope
mul
xchg
clc
in
loope
jmp
out
iret
int3
hlt
iret
hlt
cs
xor
stc
fcom
cmp
int
les
stc
aad
sbb
rorb
in
jmp
loope
div
out
icebp
idiv
ljmp
std
in
out
mov
into
ret
cli
aaa
out
icebp
aas
in
cmp
loopne
sti
sar
in
jmp
in
out
repnz
cli
xor
fcom
fiaddl
sar
hlt
clc
mov
jecxz
mov
cmc
pushl
xlat
or
ror
cld
fcom
mov
xlat
out
lock
lea
out
out
aaa
stc
fsubrp
repz
or
loopne
out
test
xchg
lock
mul
ljmp
sub
shl
fdivrs
xlat
cmp
xchg
rolb
xchg
xor
lock
cmp
xlat
inc
cld
xchg
cli
mov
sub
das
ljmp
hlt
cmp
fsub
icebp
fcmovnu
lea
lock
orb
icebp
fscale
fcom
fsubr
in
icebp
and
jmp
orb
cmp
fimuls
in
lret
enter
cmc
fdivr
stc
cmp
shl
test
int3
xchg
out
ljmp
in
repnz
lock
int3
in
loop
into
out
repnz
loopne
lret
mov
jecxz
int3
orb
call
std
xor
adc
ret
xchg
cmc
leave
in
call
out
loope
in
sub
lret
cli
cmp
jmp
testb
jmp
fmull
out
xor
imul
fxch
stc
jmp
fucomi
std
clc
cli
cmp
fistpll
ds
mov
mov
test
or
add
add
push
add
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
addl
xor
into
cmp
clc
cmp
flds
cmc
test
in
out
xor
int
jmp
fucomp
in
fcomi
loopne
ret
fiaddl
filds
out
idivb
leave
in
cmp
icebp
cmp
ret
out
in
aad
aas
cmp
fists
shr
in
fdiv
aad
repz
fcmovnu
in
icebp
lock
shl
xchg
xchg
fistl
leave
out
xor
cmp
sti
cmp
shr
xchg
stc
call
out
test
out
test
adc
into
lret
enter
test
clc
out
mov
in
aam
cld
stc
filds
loope,pn
shrb
fnstsw
out
stc
in
or
cli
icebp
std
ret
aam
sub
mov
jmp
sub
cld
stc
rcr
iret
ds
fyl2x
cmp
stc
cmc
lret
in
fcmovnu
mov
icebp
int3
xchg
aad
in
in
xor
ds
aad
loopne
idiv
sub
out
incl
loop
iret
lret
cli
sub
lret
ds
roll
cmc
mov
lock
int3
stc
xor
rcl
enter
pushl
incl
fcmovne
in
loop
in
into
lret
cld
aad
aaa
in
sub
aam
jmp
rcl
in
repz
lret
test
nop
into
adcl
cmc
fdivp
cmp
out
cld
adc
out
aas
test
iret
leave
shr
lret
sub
lret
int3
leave
fnstcw
cmp
div
test
enter
xor
mov
out
nop
xchg
shl
cmp
leave
aam
hlt
fdiv
fcmovne
loopne
fdivp
lock
test
stc
fisttpl
lret
ret
jecxz
ss
cmp
sti
aad
xchg
sti
hlt
cmc
xchg
int
xchg
out
addl
enter
call
iret
fsubrp
lock
call
ljmp
and
add
add
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
xor
rcrl
scas
jle
sbb
jle
into
icebp
ljmp
aad
into
lock
shl
xchg
fdivr
incb
incb
ret
int3
cli
cmp
sti
shl
rcr
repnz
in
xchg
shlb
vshufps
fucomi
out
sar
iret
aad
cmp
xlat
aad
clc
sti
in
out
lock
int
in
out
shl
lret
aaa
cmp
faddp
repz
neg
fildl
xor
jecxz
leave
sti
in
aaa
cmp
test
xlat
jmp
enter
icebp
in
test
ret
in
sarl
out
leave
fidivrs
shl
test
test
call
lds
iret
imul
rcl
out
ss
in
loop
cmc
ffree
shl
shl
out
in
mov
fildl
stc
aad
xor
fdivrp
repnz
xor
xacquire
stc
test
out
loope
fcomp
ret
xor
int
hlt
ss
jmp
std
xlat
icebp
loopne
test
clc
loope
dec
aad
cmc
repz
rol
cmp
icebp
cmc
hlt
shll
fadd
rolb
rcr
adc
iret
repnz
ror
xor
sar
out
int
ror
incb
out
orl
sub
fdiv
aam
not
sbb
xlat
rol
loop
lret
incl
jmp
repz
in
aam
rcl
repnz
idivb
test
loope
int3
sub
aam
in
cli
out
cmp
aas
sti
ffree
shr
jmp
ljmp
out
call
repz
lret
hlt
cmp
cli
rcr
out
mov
stc
mov
jmp
icebp
jmp
repnz
jmp
stc
sarl
repnz
icebp
cli
loope
and
fsubrp
ror
shr
iret
ror
in
jmp
fsubr
cmc
fidivrl
iret
out
fstp
xor
sarl
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
bound
mov
jle
add
int
call
mov
loope
in
in
clc
fmulp
iret
clc
clc
loop
loop
out
out
sub
fisttpll
test
shr
sub
cmp
cmp
cmp
fdivrp
repnz
cmp
into
mov
lea
out
repz
ljmp
cmp
leave
ljmp
lret
aam
jecxz
enter
xor
fidivrl
leave
loopne
adc
sarb
ret
mov
in
mov
int
out
xchg
fdiv
cmp
in
cmc
stc
int3
fcom
cmp
in
test
in
loope
xrelease
fadd
out
fadd
into
out
rol
fsubr
hlt
shl
stc
call
add
loop
cld
cmp
icebp
ret
cld
fucom
mov
lds
fmulp
in
jmp
in
aaa
rcr
out
jmp
aam
in
fucom
repz
mov
fmulp
loope
mov
ret
cmp
call
sub
testb
xlat
jmp
test
shr
hlt
ror
xor
out
ss
cld
sti
sti
int
jmp
fnstcw
cmp
cli
lret
enter
out
lock
jecxz
icebp
loop
aaa
idiv
fdivr
aaa
loop
loop
out
test
add
popl
fdivs
aam
aad
cmp
rol
neg
xchg
cmp
xlat
loopne
iret
ror
in
loop
xor
ret
call
in
out
fcos
neg
fdiv
xchg
in
mov
ljmp
xchg
notb
fidivl
rcl
lock
in
aam
jecxz
sub
fcom
sub
xchg
xor
out
in
int3
repz
leave
jmp
fiadds
mov
in
loopne
or
cmc
int3
loop
xor
in
repz
sti
ljmp
adc
testb
out
xchg
int3
aas
xor
shl
shr
cmp
out
and
cli
out
xchg
test
add
add
add
ror
int
fst
fld
cmp
and
test
aam
jle
sbb
jle
decl
in
enter
leave
aad
jmp
xor
fptan
rcr
mov
jmp
or
xchg
repnz
out
nop
in
aam
repnz
cmp
ss
loope
fmulp
in
test
inc
out
rcr
out
xchg
xchg
in
loope
sti
xor
xor
ds
cld
sar
imul
fdivrl
fadd
nop
in
mov
int
in
leave
out
int3
out
lret
shl
shr
cli
in
test
orb
jmp
int3
int
loopne
out
sub
into
leave
cs
xor
shl
in
shl
xchg
xor
int
test
out
out
into
test
loopne
xor
xor
aam
ds
cmp
testl
jecxz
loopne
out
into
test
in
std
in
fdiv
mov
div
std
idiv
repnz
test
ljmp
rcl
iret
iret
rolb
div
cmc
movb
in
mov
call
enter
fdivp
fcom
out
hlt
loope
cmp
adc
stc
dec
and
in
clc
loope
sub
lret
fucom
cld
ljmp
loopne
sti
lret
lret
xchg
cmc
ret
xor
std
cld
out
cmc
sti
fnstsw
in
loopne
lds
ljmp
int3
mov
shr
cmp
clc
sarl
cmp
fmul
adc
leave
loopne
in
mov
call
shl
cmp
icebp
leave
repz
call
ffreep
dec
rol
xchg
xchg
out
int3
fcom
fdivp
leave
fpatan
icebp
ret
rol
repz
in
cmc
mov
int
in
in
aam
fprem
shl
xor
loop
rcl
in
std
test
mov
filds
ljmp
lret
sti
fiadds
aas
out
cld
sbb
ljmp
fdivrl
in
fucom
repz
add
pop
add
add
adc
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
imul
lret
clc
jmp
xchg
ljmp
int
loopne
stc
ror
call
out
fsubrp
ljmp
cmc
xor
int
aam
loopne
ret
into
out
in
rcr
cli
div
decl
cmc
in
jmp
in
int3
in
cmc
cmp
shr
test
icebp
lock
aam
xlat
jmp
div
iret
cli
fdivr
xor
aaa
lock
cmp
cmp
cmpl
mov
or
xchg
xchg
ljmp
hlt
int3
aam
lret
testl
stc
call
shr
shl
out
cmp
test
loope
aas
out
movb
jmp
lret
loopne
ror
rol
icebp
sarl
clc
int3
into
out
rcl
fldl
jmp
out
in
in
loope
leave
clc
leave
int
hlt
ds
sarl
aaa
test
vpor
ffreep
loope
cld
dec
mov
into
in
repz
fdivp
test
test
orl
testb
shr
aam
fcmovbe
rcl
into
cmp
fstp
jecxz
or
fsubp
repnz
in
loopne
sub
cmp
fdivrl
shl
fidivrl
enter
filds
xor
xor
rol
call
cli
cmp
in
fcmovnb
addb
loopne
loope
sub
out
call
fnsave
aad
int
hlt
mul
stc
mov
nop
ljmp
icebp
iret
repz
out
lret
ds
cmp
add
rcr
fcmovnbe
mov
sbb
ret
mov
iret
in
rcr
call
neg
test
sti
loope
rcr
out
out
in
in
incb
xor
fdiv
in
int3
fcmovu
fiaddl
jmp
in
int
test
clc
shr
clc
lret
cmp
cmc
clc
sar
jne
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
test
mov
jle
add
jmp
jmp
out
rorb
aad
cmc
in
repz
cmp
cli
out
fsub
fucomip
test
mov
mov
clc
stc
lock
aad
jmp
rcr
std
roll
cld
leave
mov
loopne
test
cmp
cmp
ds
xor
aam
test
aad
out
testl
aam
xchg
lret
lock
sar
in
hlt
jmp
ds
rcr
mov
sbb
out
loop
rcl
repnz
jecxz
shr
jmp
loopne
lret
iret
in
loope
fmul
jmp
clc
in
iret
int3
lret
or
out
cmp
iret
adc
out
idiv
int
out
xchg
cmp
int3
in
sar
jmp
subl
cld
stc
aam
rcr
test
sar
call
cld
jmp
sbb
in
int
mov
int3
aad
fstpt
sarl
cmp
sbb
jecxz
in
in
ret
std
cmc
xchg
lret
cmc
neg
cmp
ror
shr
cli
repnz
std
fcomip
leave
loop
imul
nop
enter
cmc
stc
xor
leave
in
lret
cmpb
idivb
ds
loopne
aas
leave
incb
in
dec
xor
in
repz
leave
cmp
cmp
int
fdiv
ret
sbb
test
mov
mov
roll
cmp
out
into
aad
aaa
ds
sar
clc
enter
loop
xchg
lock
out
subl
xlat
leave
neg
repz
cmc
cmp
ljmp
out
out
mul
lock
out
int3
iret
cmp
cmp
incl
out
out
int
fucomp
aam
in
loopne
ljmp
rolb
div
test
enter
jmp
sbb
in
int3
out
ljmp
fcom
ds
ljmp
ljmp
shr
xchg
aad
ror
shr
shl
lock
fisttpll
jmp
xor
lret
fcmove
repz
xor
ret
sti
clc
or
jecxz
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
jge
mov
push
mov
jle
loop
mov
stc
orb
cmc
int3
in
hlt
repnz
cmp
iret
in
lock
xchg
mov
test
fnclex
mov
jmp
lret
aas
repz
in
icebp
loop
shl
ror
xchg
in
loopne
aad
out
enter
repnz
out
in
cmp
fcmovu
cmp
adc
into
dec
orb
aad
hlt
xlat
jmp
icebp
xor
sbb
mov
leave
lret
in
loop
xchg
lock
ljmp
shr
fucomi
fnstsw
call
jecxz
fucomp
xchg
out
bnd
xor
idiv
jmp
mul
lock
sar
loopne
fsub
in
cld
loopne
loope
repz
in
fmul
fdiv
rcr
fucomip
aas
cli
test
fiaddl
stc
in
xchg
hlt
adcl
into
fsub
leave
out
shl
out
clc
ret
in
icebp
iret
out
in
filds
jmp
not
jecxz
loopne
sar
loop
mov
test
fdiv
test
lock
fdivrl
stc
ds
in
and
into
hlt
into
test
and
clc
out
xchg
ror
loopne
xor
fdivrs
sar
iret
aad
dec
dec
cld
aad
imul
fdivr
clc
fsub
int3
lret
fisttpll
not
out
ror
stc
aaa
fmul
lret
aam
cmp
dec
loope
jecxz
ljmp
xor
out
xor
repz
jecxz
cli
dec
adcl
xor
cmp
cmp
shl
ret
adc
nop
jmp
hlt
int3
int3
loopne
shlb
in
int
in
in
shl
hlt
into
jecxz
xlat
ror
ret
out
in
adc
aas
ror
leave
hlt
rcl
std
aaa
sti
lock
fcom
sar
jecxz
xchg
fsub
sti
mov
xchg
int3
mov
in
out
aaa
xor
not
cmp
in
cmp
imul
cli
in
call
inc
ret
loopne
jmp
int
lock
repnz
idiv
jmp
stc
rcr
icebp
mov
ret
in
inc
in
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
out
mov
hlt
shl
into
rcr
out
sti
in
sar
aam
into
lock
in
in
in
out
fsubp
out
xchg
mov
rcl
loop
iret
into
into
ljmp
xchg
ret
mov
aad
leave
jmp
out
and
int3
call
stc
repnz
iret
in
adc
out
aas
in
jmp
ffree
int
lret
in
stc
enter
repnz
sarl
loopne
test
repz
mov
mov
bnd
xchg
lock
cmp
sar
rcl
sbb
cmp
cli
mov
mov
lock
rcr
xor
imul
fsubrp
cmp
cld
ds
fistpll
test
hlt
fcmovb
fiadds
out
loopne
fnstenv
in
in
out
std
cli
fcmovne
sbb
aad
out
mov
test
xchg
leave
rorb
cmc
xor
stc
fistpll
idivl
ror
repz
rcl
rolb
in
fildl
out
aaa
out
aad
fldlg2
icebp
addb
decl
testl
das
out
xor
out
cmc
jmp
cmp
cli
test
sti
faddl
rol
xor
cmp
aam
std
loopne
fistpll
sarb
loope
xlat
fcomp
cli
jecxz
cld
xor
sub
ret
cmp
iret
div
leave
cmp
testb
loop
xlat
out
iret
fucom
rcr
sbb
ret
iret
out
aam
cmc
into
icebp
loopne
xlat
iret
in
int
sub
mov
in
fcmove
hlt
cs
sar
cmp
addl
xchg
fxch
in
cli
xchg
jmp
stc
aam
div
iret
xor
in
les
test
test
out
cmc
ret
repz
jmp
jmp
sar
loop
aad
and
cld
out
loope
out
out
mov
fabs
cmp
cmc
icebp
test
xorb
rolb
loopne
jmp
int3
fldl
xor
stc
cmp
ljmp
stc
ret
fxch
clc
iret
adc
int
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
cltd
sub
mov
ret
jle
call
ss
cmp
xor
loope
cmp
rcr
fxam
fisttpl
addb
int
lret
in
loope
fcom
ret
sti
aam
mul
adcl
in
int3
jmp
repnz
cmp
lock
lock
cmp
jmp
call
int
ss
lret
cmp
out
cmp
ds
aas
loopne
lret
into
fdiv
int
rorl
rcr
clc
out
fsubrp
repz
in
ret
jmp
mov
roll
push
into
cli
sti
fincstp
cmp
rcr
neg
int
loop
iret
or
fstp
sti
hlt
mov
cs
stc
int
cmp
lret
fincstp
faddp
ret
ljmp
cld
rcll
aaa
lds
hlt
incb
in
xchg
lret
fdiv
adcb
in
xor
in
das
iret
xor
fucom
rcr
aas
rcl
call
sub
xchg
call
das
sub
in
lds
lock
cmp
lock
call
mov
lea
adc
lock
cld
aam
int3
jmp
fsub
and
sti
in
mov
xchg
xchg
mov
ror
out
ss
xor
fdivr
lret
in
lret
shr
jmp
sar
sub
in
xlat
fsin
sti
int
iret
mul
sub
repnz
out
not
cmp
xlat
out
std
sti
cmp
in
in
fmuls
xchg
aam
das
into
shl
repnz
cmc
sti
xlat
in
int
and
cld
cmp
fsubr
enter
fucom
mov
xor
out
iret
shr
ret
xchg
faddl
test
cli
in
fsubr
loopne
leave
aad
xor
iret
lret
ds
ret
addl
fcmove
mov
ffreep
loopne
jmp
std
cmp
fsubr
sub
ds
repnz
jmp
fcmove
mov
cli
ljmp
ror
ss
loope
rcr
iret
call
jmp
mov
call
xchg
jb
add
add
flds
add
add
rolb
add
movb
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
out
dec
mov
add
out
in
in
int3
enter
ljmp
test
call
sbb
test
vpaddw
jecxz
test
roll
mov
mov
lock
cli
shl
into
aam
aas
fidivrs
adc
xlat
faddp
ret
jecxz
cli
into
jmp
hlt
rol
into
lock
out
out
shl
cmpl
fnstcw
add
jmp
sti
out
std
mov
mov
divb
out
cld
fnstcw
ss
fcomp
orl
lock
icebp
xchg
shl
repz
divb
fidivrs
fabs
sti
lret
iret
mov
xchg
fisttps
cmp
cmp
xor
shl
ret
rcr
mov
not
les
out
into
rorb
fsubr
call
cmp
fdivrs
hlt
jmp
in
shl
out
rcl
xor
out
into
cli
lret
fistpll
hlt
fiadds
shr
ljmp
xrelease
aaa
xor
fcmovne
imul
in
sar
clc
rcl
shl
mov
fcmovne
ljmp
out
jmp
fxch
rolb
rcl
in
frndint
lds
aad
xor
out
enter
xor
cmp
sar
cmc
aam
out
shl
ret
cld
test
xchg
repz
call
iret
in
icebp
mul
cmp
in
loop
rcl
lret
xchg
out
jmp
int3
jmp
loopne
iret
xor
ljmp
jmp
xchg
shr
in
lock
in
iret
fsubr
neg
aas
fdiv
fcmovnbe
aam
xor
repz
lret
stc
addb
aam
repz
cmp
aaa
aad
aam
aad
in
repz
test
clc
lret
xchg
in
out
in
xor
jmp
cmc
xlat
ds
fsubr
idiv
jecxz
mov
sub
fsubr
in
xchg
fcom
xor
xlat
in
hlt
rcl
xlat
ret
call
fucom
shl
orl
les
test
add
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
dec
xchg
fildll
inc
jle
ret
jle
jmp
int
fnstcw
mov
out
jmp
fists
in
shl
int
cmp
cmp
std
rolb
mov
mov
rcl
clc
shr
lret
test
in
out
sarl
hlt
rcr
sbb
ljmp
cmc
ret
xor
ljmp
aam
hlt
loop
call
call
xchg
xchg
repz
aam
in
jmp
cmp
iret
xlat
lret
cmp
cmpl
cld
or
leave
repz
aam
int3
lock
icebp
idiv
fst
jecxz
lds
leave
cli
mov
jecxz
ret
fpatan
shlb
idivb
cmp
sti
rorb
cmp
fisttps
aaa
hlt
jmp
out
xor
mul
add
fst
test
inc
addb
clc
idiv
hlt
xor
lock
fistpll
fdiv
std
les
call
into
cli
std
out
std
icebp
rolb
sbb
fsubr
repnz
mov
idivb
fcomi
cld
lock
repnz
cmc
fsqrt
cmp
in
loope
fcomp
or
out
xchg
xor
ret
out
call
cmp
cmc
cli
std
loope
lret
jmp
xchg
incb
in
xor
fucomi
fcomp
cld
inc
filds
mov
out
loopne
mov
shr
int
out
clc
cld
aam
cmp
cmp
sar
rcl
neg
mov
int
xchg
mov
ss
repnz
ljmp
sti
jmp
fdivr
mov
fmul
in
nop
lock
ljmp
cmp
jmp
cmp
hlt
in
in
repnz
test
in
test
jmp
repz
aad
fnstcw
std
sti
stc
call
in
in
shl
and
cld
aad
divl
rcr
aas
mul
cmp
in
std
adc
mul
enter
sti
xchg
icebp
or
jmp
clc
fistpll
mov
mov
mov
jmp
lret
ret
int
lret
in
aad
int
je
inc
jle
ret
jle
cmp
icebp
ds
rcr
sar
mov
ljmp
nop
xchg
imul
int
int
cmp
xor
cmp
aad
rcl
out
ljmp
and
aam
aaa
clc
cmp
fcmovnu
sarb
hlt
cmc
sar
clc
fdivrs
repnz
and
icebp
call
icebp
leave
lret
cmc
fucomi
sub
int
fnstcw
cmp
rcl
fiadds
std
xchg
out
ljmp
cli
xor
lret
stc
fdivrp
fcmovu
fcmovb
fmull
mov
sbb
mov
sub
lret
xlat
cli
aad
fdivrp
rcl
sarl
cmc
testl
int
out
sbb
ret
divb
in
aam
cmp
cmp
ds
ffree
movl
shl
ss
ret
icebp
jmp
std
ror
cmp
rol
cmc
fiaddl
jmp
aam
xor
int
xor
aas
loope
rolb
ljmp
in
in
test
xlat
cmp
test
aaa
clc
stc
std
adc
enter
out
int3
sti
filds
xor
out
fdiv
xor
leave
cli
cmp
std
idiv
mov
leave
in
testb
loope
cmc
sub
sub
cmp
std
adc
cmp
in
cmp
jecxz
mov
test
enter
shl
ljmp
jecxz
decl
or
shl
jmp
shl
out
aam
sbb
cmp
loopne
out
fimuls
sarb
ret
clc
call
clc
rcr
ret
in
leave
jmp
ljmp
ljmp
out
out
in
cmp
shl
call
clc
test
xchg
xchg
xorb
out
jmp
sti
leave
aad
leave
xor
fxam
out
fisttpll
fisttpl
faddl
enter
in
aam
xor
cmp
in
sti
div
ljmp
xchg
repz
xchg
rorb
cmp
ror
test
cmp
imul
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
xlat
out
jecxz
xchg
test
fimull
icebp
in
lds
aam
aaa
clc
iret
int3
in
iret
std
aad
ffreep
test
mov
iret
out
mov
in
xor
cli
cmp
fdiv
ljmp
aad
sti
cli
aad
cld
into
icebp
ret
mov
out
into
shl
out
leave
fcmovnbe
into
cmp
aad
ds
in
jmp
cmp
sar
bnd
xor
cmp
ljmp
aas
sbb
aam
ljmp
out
ljmp
shlb
fdivr
jmp
fucomip
aad
sbb
test
mov
mov
fsub
lret
mov
xchg
xor
shl
lret
lret
in
sar
repz
mov
aas
xchg
mul
int
leave
xor
test
xor
lock
aaa
lret
in
clc
iret
cmp
idiv
add
fdivr
call
jmp
rcl
lret
fcomp
in
xor
stc
cmp
in
mov
jecxz
xchg
repz
fldl
lret
jmp
test
shl
ljmp
hlt
ret
sub
cli
loopne
or
nop
loope
loopne
fcmovnu
cmp
xor
xlat
jmp
div
test
aad
mov
call
fcmovnbe
xor
xor
in
leave
fcmovbe
std
sarb
xchg
ret
lret
stc
mov
rclb
leave
cli
in
sar
cmp
cmp
jecxz
faddl
add
loope
cli
out
cld
out
mov
shl
in
ss
repz
rcr
rcr
cmp
in
clc
and
fisttps
in
out
out
out
rcr
shr
out
lret
lret
cmp
xlat
aad
and
int3
fxch
ljmp
ret
lret
aaa
div
stc
bnd
cld
cli
aas
adc
movb
fadds
nop
int3
das
aad
in
jmp
lret
addl
repnz
fiadds
int
shl
leave
iret
cmc
rcl
cmp
filds
sti
mov
xchg
in
int3
loope
mov
lret
cli
out
not
hlt
aas
fdivrs
into
aas
rorl
fwait
sbb
pusha
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
jg
divb
add
aam
xor
xlat
fcmovnb
or
mov
clc
aad
enter
cmp
fdiv
into
test
add
sub
out
xchg
repz
ljmp
test
testb
addl
rcl
lret
imul
out
idivb
cmp
roll
aas
loop
xlat
fucomip
fisttpll
in
imulb
div
into
clc
cmp
iret
shlb
sbb
in
mov
cli
fisttpll
jmp
lock
sar
cmp
ret
fcomp
mov
vshufpd
mov
repnz
ret
sti
cmp
jmp
add
into
clc
hlt
fcmovu
lret
in
sti
in
movl
fdivrp
roll
fadd
leave
ljmp
test
les
clc
out
cmc
aad
stc
cmpb
ret
test
sti
aas
in
and
out
sti
jmp
in
out
xchg
jmp
ljmp
cli
cld
xlat
rolb
loop
sti
mov
fmull
lret
in
sti
xlat
enter
sbb
in
test
sub
sbb
shr
cli
jmp
cmc
repz
fdivs
call
fidivrl
test
fcmovnbe
jmp
xlat
std
sti
iret
int
in
xchg
leave
lret
xor
xor
xor
std
aas
aas
cmp
sarl
in
mov
and
in
xor
aad
cli
ds
repz
jecxz
ret
cli
addb
test
xchg
cs
xlat
int
jmp
fst
leave
cmp
jmp
orl
xchg
shlb
xor
xor
call
fsub
rolb
orb
xchg
in
nop
faddp
ret
icebp
fdecstp
in
int
cmp
sarl
aam
cld
fadds
lock
xchg
xchg
jecxz
loopne
in
out
fcmovne
cmp
incb
test
cld
fiaddl
in
lock
subb
icebp
in
lock
lock
shl
shl
jmp
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
dec
cmp
out
je
jle
ret
jle
mov
out
in
aad
neg
leave
lret
call
sar
cli
xor
in
mov
jmp
in
mov
lret
cmp
iret
shr
sti
cmc
shl
stc
shl
mov
jmp
in
xchg
in
xlat
aam
rcl
repnz
fiaddl
mov
clc
mov
rcr
or
ret
lock
std
xlat
div
into
neg
out
std
sbb
in
ljmp
sar
ljmp
xlat
cmp
loopne
cld
loope
and
neg
mul
fadds
in
cli
shl
les
out
aam
push
cmpl
enter
leave
cmp
dec
xchg
fsubrp
jmp
imul
enter
cmp
inc
call
clc
fcomp
into
in
into
out
mov
cmp
fcmovbe
xor
fcom
loopne
idivb
cmc
sar
in
fsubp
lret
cli
mov
sar
out
loope
xor
les
sar
enter
icebp
in
jecxz
hlt
in
fscale
sti
mov
jecxz
call
lock
repnz
lret
repz
ret
cmp
xchg
jecxz
in
jmp
addl
xor
stc
xlat
cmp
loop
cli
fsubr
test
sti
mov
loope
mov
call
fdivs
clc
rcr
sti
out
cmc
cmp
mov
iret
mov
orb
ljmp
sti
bnd
xor
lret
int
enter
out
lret
aaa
das
clc
cmc
out
fcmovne
shl
xor
jmp
aad
aam
filds
out
std
mov
fidivl
cmc
aaa
repz
fsub
div
cmp
sbb
jmp
iret
lret
test
out
fstpt
xor
fst
faddp
shl
aad
cmp
in
hlt
xchg
fcmovu
cmc
lock
out
rcr
out
lock
xlat
mov
mov
lock
loope
xchg
int
loope
in
cli
clc
ljmp
std
ret
repz
jecxz
mov
mov
jmp
rol
rcr
and
sbb
cmp
jle
add
nop
enter
repz
fsubrs
cmp
ret
out
div
loop
mov
lret
rorl
hlt
aaa
stc
clc
cmc
int
ss
jmp
sti
in
cmp
rol
ror
neg
stc
out
xor
lock
aam
leave
hlt
int3
xor
aas
cmp
ds
cmp
cld
mov
jecxz
xchg
lret
rorb
lock
clc
iret
std
sbb
fcmovbe
faddl
std
cld
lock
call
out
aas
repnz
loop
iret
neg
test
mov
jecxz
in
mov
repz
fldl
cmp
fnstcw
addl
add
mov
lret
hlt
push
ret
in
out
enter
aad
fnstsw
rcl
out
sbb
in
loope
xchg
loopne
shlb
xor
aam
shr
repz
jmp
lret
aad
faddl
test
cmp
mov
lret
out
ss
enter
fcmovne
hlt
shl
cld
mov
mov
test
test
into
shlb
ss
cmc
cmp
icebp
fcmovne
aam
out
and
fld
mov
addb
cli
fnstsw
nop
shl
xor
jecxz
in
in
fsubrp
fadds
out
incl
icebp
xchg
mov
std
xor
int3
cmp
rcl
ffree
test
std
ret
in
jmp
lret
repnz
xor
ljmp
mul
loop
fcomp
xchg
loop
filds
rcl
shr
shll
loop
fnstenv
cmc
test
mov
jmp
sti
leave
loopne
clc
leave
enter
fnop
call
in
xchg
clc
sub
clc
mov
clc
jmp
out
xchg
push
loope
sub
aad
aaa
loopne
fcomi
jmp
fcomp
lock
loopne
in
fsub
xchg
lret
and
enter
sti
int
rcl
fstp
shl
ds
filds
int3
lock
out
xchg
aad
ljmp
aam
loopne
jecxz
cmc
jecxz
fdiv
mov
cld
out
idiv
or
mov
jmp
fadd
lret
fstp
aad
mov
cmp
pop
aam
dec
jle
ret
jle
iret
enter
leave
aaa
iret
fnstsw
out
clc
fcom
ss
sar
test
loop
loopne
ljmp
clc
fnstenv
jecxz
in
aas
shr
out
loopne
leave
aad
fmul
stc
out
jmp
das
lock
hlt
repnz
out
cmp
aam
roll
in
in
iret
in
mov
int
in
in
ror
hlt
ds
hlt
aam
rcl
enter
ret
clc
cli
std
lret
int3
iret
hlt
lret
out
fnstcw
ljmp
shl
enter
ljmp
lret
and
xor
das
out
leave
cmc
fadd
clc
loopne
std
cli
xchg
loope
xchg
xchg
jmp
aaa
rcr
shl
ror
stc
rcr
iret
fucom
fadd
cmc
std
clc
in
hlt
test
into
in
xchg
icebp
call
das
cmp
out
cmp
out
into
fsub
rorl
loope
int
rclb
enter
xor
int
add
lock
jmp
int
or
clc
out
fcmovnu
xor
cmp
rolb
fnstsw
fdivr
and
enter
xchg
loope
jecxz
ret
imul
repz
roll
cmp
jmp
out
decb
xor
cmp
shl
lock
jecxz
xlat
repnz
in
loopne
ror
loop
test
cmp
repz
not
out
jecxz
ret
shl
stc
lret
jmp
fiaddl
fadd
cli
aam
cmp
repnz
fstp
iret
rcr
std
test
test
fsubp
call
out
enter
xor
out
cmc
int3
xor
loopne
out
shl
out
cmp
icebp
int3
repz
divb
test
std
xlat
call
icebp
cli
aam
cli
call
fimull
int3
lock
iret
jmp
jmp
fcmovnb
cmp
fstpt
fcomi
xchg
test
int
fnstenv
ret
out
idivb
repz
loopne
test
out
std
neg
lock
jecxz
jmp
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
add
jle
ret
jle
ss
repnz
fsub
in
idiv
hlt
addb
std
int
fdivrp
loope
xchg
mov
shrl
into
out
shl
fdivrp
lock
std
int3
incb
mov
in
mov
xchg
out
enter
into
xor
not
iret
xor
cmpb
ret
flds
out
mov
xchg
hlt
icebp
icebp
enter
lock
in
stc
aaa
xor
xlat
cmp
aas
sarb
stc
out
in
lret
fucom
in
loope
into
cmp
cmp
sub
in
ds
xlat
fimull
call
lret
ret
iret
xlat
leave
repnz
xor
test
hlt
loop
cmp
xchg
jmp
sbb
icebp
ljmp
leave
clc
loopne
jecxz
push
mov
mul
int3
into
out
out
shr
out
sub
in
not
shll
stc
in
aam
jecxz
xlat
loope
loop
fildl
test
aam
repnz
sub
cmp
int3
std
cmp
lock
fcomi
ds
out
xlat
into
enter
mov
test
ss
cld
leave
lret
cmp
cli
cmp
iret
call
fdivrp
add
call
cmp
cmp
out
aaa
ret
xlat
rolb
fucom
nop
ljmp
loopne
sarb
repz
fdivs
cmp
aaa
fsubp
ds
rorb
ret
test
out
in
call
icebp
imul
ds
xor
ret
fsub
into
mov
lret
adc
jmp
lds
clc
lret
cmp
addl
shl
mov
fildl
xchg
loope
rol
fsub
into
std
xlat
call
xlat
hlt
call
ljmp
in
shlb
fcom
test
stc
test
fildl
jecxz
shl
ret
out
fdiv
aas
sarl
aad
loopne
loopne
in
lret
mov
mov
shll
repz
cmp
xor
int
repz
xlat
into
hlt
add
enter
mov
xchg
fsubp
xchg
cmc
ror
sub
roll
jmp
xlat
into
ror
fxch
flds
jp
pop
push
xor
jle
add
xor
fdivrl
lock
fcomi
loopne
hlt
movb
out
in
int
cmp
cld
fsqrt
fbstp
fsubp
test
inc
rol
sti
ljmp
fisttpl
xor
fcmovnbe
icebp
aaa
testl
xchg
in
in
in
into
mov
in
cmp
repz
cld
leave
cmp
cmp
cld
fstpt
repnz
mov
fiadds
fucom
test
sar
loopne
ds
loop
xchg
icebp
mov
mov
dec
mov
push
test
lock
shl
dec
cmc
repnz
test
ret
out
cli
in
ljmp
lock
cmc
test
int
loope
aam
ret
sar
iret
roll
lret
xchg
xchg
loopne
nop
in
int
out
xor
call
in
cmp
sarb
out
in
ljmp
lea
jmp
into
jmp
fdivr
loopne
cli
loop
xchg
call
jmp
mov
loop
lret
xor
int3
xor
cmp
clc
clc
in
repz
xchg
addl
cmc
out
idiv
call
aas
fdivrl
cmp
test
cmc
test
clc
jecxz
sbb
int3
xor
xlat
iret
ljmp
add
loopne
loope
cld
test
out
stc
and
rorl
cmp
lock
cmp
cmp
faddl
faddp
clc
lret
int3
test
cmc
lock
jmp
out
int3
out
cli
sarb
aas
cmc
and
lret
mov
lret
shl
iret
lret
cmp
out
fdivrl
shl
std
cld
ret
out
mov
repnz
int3
mov
iret
rcl
clc
lret
jmp
sti
cmp
xchg
out
int3
mov
out
cmc
aam
iret
cmc
fcomp
lret
into
roll
loopne
ljmp
out
mov
divb
in
iret
aam
aad
cli
sti
fdivrp
call
lea
sub
cs
in
fisttpll
add
add
leave
int3
aam
aad
fnstcw
ficompl
decl
push
jle
ret
jle
in
cmc
sbb
call
loop
fldl
stc
ljmp
test
clc
test
mov
fcmovbe
ljmp
loop
xor
das
repnz
sub
xlat
faddl
fcomp
xchg
in
call
loopne
ss
stc
enter
cmc
rcr
lock
leave
xlat
aad
jecxz
clc
fldl2e
jmp
jmp
fcmove
loop
fnstsw
aad
enter
out
in
out
std
hlt
int
leave
sarb
std
out
cmp
ds
aad
lock
xchg
lret
out
mov
test
xchg
bnd
ljmp
aam
loopne
ds
shl
adc
test
into
enter
jmp
not
cmp
leave
sar
call
lret
ret
hlt
fcomp
mov
clc
mov
mov
ljmp
rcl
jmp
out
lock
loopne
aas
test
shl
in
fldl
ljmp
cld
loopne
not
test
enter
imul
mov
nop
test
cli
sti
cmp
cmc
aad
repnz
leave
mov
cmp
int3
repnz
into
sar
cmp
adc
ret
aad
neg
loope
fcmove
mul
leave
int3
ljmp
enter
xor
stc
xor
loope
fcomi
test
ret
sar
ljmp
aaa
lret
ljmp
stc
cli
aam
rolb
lret
test
mov
test
ss
rcr
clc
cmc
std
cmp
xlat
ror
leave
mov
mov
fucomp
nop
test
hlt
fadd
in
cmp
sti
aad
out
test
test
loopne
test
nop
test
les
cmp
rcl
out
idiv
hlt
sar
test
rol
cli
loopne
in
inc
fucom
jmp
loop
cmp
iret
int3
cld
fst
fildl
fdivrp
cli
xchg
rcl
icebp
aam
inc
fsubr
pop
add
add
ret
int3
fmul
aad
mov
pop
bound
mov
jle
add
sarl
fucom
fcmovnu
in
loop
out
lret
in
aaa
xor
cmc
repz
fcmovne
stc
into
clc
out
enter
fcom
in
lret
ljmp
rol
ss
jmp
rolb
rcl
sbb
ror
repnz
hlt
rcl
hlt
out
aam
shl
stc
bnd
filds
aad
jmp
nop
icebp
adcl
int3
lds
idivb
fcmovnu
lock
sub
iret
call
mov
lret
cmp
into
in
test
shl
jecxz
lret
int3
in
stc
xchg
out
test
mov
aam
lret
out
sti
idivl
ror
fcmove
xchg
cmc
loopne
aam
aam
stc
iret
jmp
aam
not
fld
hlt
repnz
shl
test
ret
sbb
cmc
sti
in
fcmovnu
ljmp
sub
out
shr
icebp
cmp
fdivrp
xchg
jmp
test
incl
nop
mov
mov
fcmovbe
int3
clc
repnz
cld
out
sub
adc
mov
xor
stc
iret
cmp
xor
into
xlat
loop
call
sti
in
mov
repnz
out
cmpb
repz
std
das
int3
fmul
hlt
fcom
sarl
mov
sti
lret
test
iret
xchg
sti
rcl
aad
das
loope
cld
int3
xor
add
xchg
mov
out
out
ror
rcll
out
fdivr
xor
fdiv
out
fiadds
movb
ror
call
lock
loopne
cmp
not
fstp
xchg
loope
cmc
loop
in
orb
icebp
repnz
divl
aas
in
rcl
xchg
jmp
in
rorb
leave
xor
enter
loopne
sar
cmp
mov
sbb
loop
in
test
enter
icebp
out
fdivs
fnstsw
rcl
idivl
aam
ljmp
xchg
in
rcl
jmp
ss
test
repnz
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
pop
jle
ret
jle
xlat
lret
fucomi
xchg
jmp
jmp
fdivs
sti
in
stc
xlat
std
icebp
cmp
sarb
cmp
cmc
xchg
test
icebp
repz
xor
lock
std
rcl
out
in
iret
addb
int3
ljmp
in
aam
int
xor
repz
into
call
cmc
int
testl
popl
leave
ret
lret
cmp
int3
fmul
aam
addb
test
lret
in
lock
out
fdivp
repnz
test
aad
aas
cmc
hlt
xlat
aas
ds
rcr
fsubp
out
lret
rcl
out
pause
divb
lret
out
lret
neg
testb
lock
ljmp
lock
icebp
lret
xor
fdivrl
xor
testl
icebp
fildl
out
rol
out
out
xor
into
in
cmp
cli
loop
xlat
int3
loope
mov
test
ret
hlt
cmp
lock
cmc
in
jmp
cmp
std
fdivr
mov
cli
mov
lret
mov
int3
ss
int
fcmovnbe
testb
jmp
xchg
ret
in
divb
call
repz
fldl
orl
int3
jmp
xor
sarl
fcmovu
shl
and
fldl
xchg
out
xchg
xchg
fdiv
test
jmp
aaa
xor
sti
add
icebp
test
loop
xchg
std
leave
out
ljmp
xlat
test
in
ds
int3
repnz
or
faddl
jmp
xchg
dec
shl
lret
out
cmp
ror
leave
xlat
lret
clc
rcr
loop
fiaddl
int
fstp
mov
shr
ret
xor
not
call
filds
fadd
fildl
out
int
out
into
lret
fcom
repnz
out
cli
sar
int
sbb
aam
in
loopne
fucomp
int3
cld
enter
shr
xor
ss
iret
icebp
out
aad
fcomip
xchg
lock
loopne
push
clc
mov
jmp
into
aad
vpaddusw
aad
js
jg
mov
jp
pop
jle
ret
jle
int
lret
out
test
shl
call
cli
or
jecxz
lock
mov
sti
fcomi
int3
ror
xlat
repnz
aaa
clc
aas
rcr
xor
testl
repnz
repnz
xor
fsubrp
in
aas
fdivrs
fcom
out
aad
jecxz
out
cli
or
loop
rol
sti
cmp
std
xor
test
lock
shl
lret
cli
bnd
loopne
enter
out
cmp
cmp
ret
rcr
cli
stc
fsub
ret
clc
sub
lret
test
fdivp
iret
in
aaa
sti
repnz
cld
frndint
xor
shr
testl
stc
cli
mov
call
div
iret
cmp
xor
loopne
in
test
shl
xlat
mov
movl
icebp
out
divl
out
sar
cld
flds
rorl
std
call
cmc
in
in
xlat
call
fdivrs
shr
xor
fcomi
sti
shl
xchg
call
jmp
or
in
rcl
cmp
cmp
lock
lock
repz
mov
int3
mov
orl
cmc
aas
cmc
out
aad
fucompp
cmp
rcr
ds
ret
lret
into
sti
sar
in
in
lock
xor
shll
xlat
cmp
into
shl
test
rcl
test
orl
xchg
ljmp
fdivrs
int3
int
cli
out
inc
orb
into
jmp
sub
xor
idiv
clc
aad
loope
loope
int3
ret
lds
in
call
loop
in
out
cmc
fidivrs
out
ljmp
cmc
cmp
test
repz
aad
lock
jecxz
jmp
int
cmp
loope
repz
stc
sar
and
jecxz
out
mov
shl
test
in
xlat
leave
xlat
out
xor
not
in
jecxz
hlt
mov
xlat
fimuls
in
clc
sub
enter
rcl
icebp
aas
in
int
clc
sbb
ret
xchg
add
imul
sub
jmp
aad
int3
fmul
fnstsw
insb
arpl
fcomps
jle
add
test
aas
out
rcr
in
out
leave
repnz
ds
icebp
cli
jecxz
int3
loopne
shr
ror
hlt
imul
xor
ljmp
cli
in
out
aad
enter
test
jmp
out
imul
fdiv
jmp
loopne
idivb
jmp
rol
fadd
in
mov
in
jecxz
cmc
in
in
fldln2
stc
aad
cmp
lock
aad
and
cmc
cmc
out
loopne
lock
orl
xor
ds
incb
lret
jmp
xor
xchg
loopne
ljmp
cmp
aas
hlt
fsub
clc
ret
loopne
fmul
icebp
fcomip
mov
add
fcom
enter
out
call
sar
inc
loopne
testl
mov
shr
loop
ret
shl
out
ljmp
call
fcmovnb
jecxz
fcmovnbe
addl
lds
cmp
enter
loop
iret
lock
ret
xlat
mov
xchg
in
sub
int3
iret
jmp
fcmovne
jmp
xlat
in
fildl
out
orb
jecxz
clc
xor
idiv
in
cmp
rol
shl
rcr
shl
shr
cmc
jecxz
cli
jmp
xchg
sub
in
xor
out
lock
repnz
fdiv
stc
std
test
neg
lret
xchg
mov
jmp
xlat
leave
in
jmp
clc
out
cmc
cmp
cli
div
in
call
fdivp
repz
mov
repnz
leave
aas
fnstcw
shl
cmp
sbb
rol
loop
enter
orl
out
cmp
cmc
icebp
leave
cmp
cmp
add
stc
xchg
repz
roll
mov
not
rcr
cmp
int
fdecstp
mov
les
sti
xchg
leave
xor
lret
cmp
shl
repnz
jmp
iret
pop
test
int
cmc
les
out
xor
hlt
jmp
cmp
shl
test
fsubr
ret
loope
test
out
in
test
in
decl
call
add
iret
rcl
fcmovne
fnstcw
jno
xchg
jle
repz
out
into
cmc
cmc
iret
neg
fucom
repz
test
cld
sar
test
sti
call
fucomi
in
aad
xor
ret
in
std
hlt
fidivs
fmul
ds
test
int3
jmp
in
iret
jmp
aad
repnz
int3
cmp
std
iret
xlat
loope
mov
mov
fmul
stc
std
out
test
rcl
lret
cmc
stc
fstp
out
jmp
aas
loopne
ret
std
jecxz
std
roll
and
shrb
jmp
iret
lret
cmp
loopne
iret
fdiv
icebp
loopne
fxch
test
in
out
sbb
cld
test
ss
fdiv
hlt
int3
sarl
std
faddp
clc
loop
in
cmp
in
fisttpll
repz
lret
lret
fcomp
loop
int
rolb
mov
xchg
loope
std
xchg
rcll
rcr
div
std
leave
jmp
aad
incb
loope
cld
lea
cmp
xlat
divb
shl
cmc
repz
test
testl
enter
ljmp
rcr
in
fstpt
mul
int3
shl
aas
loop
call
incl
xor
div
repnz
cli
fcomip
aam
in
sar
int3
testb
in
jecxz
out
in
icebp
std
jmp
push
aam
rcr
lock
mov
cli
lret
stc
rorl
aaa
in
aaa
out
cmp
xor
fsubrp
cmc
test
repnz
fsub
aam
add
int3
hlt
and
imull
stc
div
in
call
xlat
rcr
loop
imul
cmc
stc
sbb
ret
repz
out
fldl
ss
cld
neg
cmp
iret
mov
hlt
fdiv
fdivrp
shl
ljmp
in
ljmp
cmp
cld
lock
xchg
jmp
addl
cmp
sbb
out
rol
cli
fsub
int
cli
nop
shr
iret
xchg
ljmp
xor
call
aam
fiaddl
out
xor
xlat
xor
cmp
jmp
int
int3
int
cmc
inc
cwtl
ficoms
jle
ret
jle
loop
cli
ljmp
sar
hlt
repnz
lret
loop
clc
nop
iret
lock
mov
lock
int
out
out
hlt
fsubr
fiadds
clc
fucomip
into
call
mov
hlt
cli
xor
xor
jmp
lock
add
cld
xlat
mov
loopne
clc
neg
xor
cld
out
fcmove
cmpb
enter
mov
clc
dec
roll
icebp
icebp
lret
into
fincstp
int
ffreep
sub
shr
neg
xchg
lret
jmp
sar
call
in
cmp
fcmovu
roll
test
xchg
jmp
shl
leave
stc
aam
fadd
fmul
aas
xchg
call
cli
ror
ljmp
out
in
shl
in
ljmp
hlt
test
ljmp
fucom
out
xchg
mov
xchg
shl
leave
into
jmp
into
clc
aad
rcr
add
ret
cli
enter
incl
jmp
rcl
in
jmp
xor
leave
fyl2xp1
aam
roll
orb
test
rcr
fld
icebp
ljmp
sti
into
out
xlat
repnz
mov
mov
fisttpl
int
aaa
cmp
enter
fcmovnbe
cmp
std
cmp
hlt
sti
in
fucomp
jmp
sti
test
test
out
jmp
lret
icebp
xlat
out
fdivrs
fcmovnbe
test
hlt
test
xchg
out
loopne
xchg
aad
xor
out
aam
loopne
fnstsw
loop
fstp
sar
fadds
faddl
xor
sar
cli
in
iret
fdivrs
out
std
icebp
in
ds
sbb
xchg
ret
xchg
leave
out
lret
in
out
ret
out
xor
fmul
out
cmp
rcr
xchg
and
cld
shl
xchg
in
jecxz
int3
clc
stc
int
stc
roll
jmp
jecxz
fdiv
leave
sbb
ret
cmp
fnstcw
fcos
fucomi
hlt
ds
repnz
ret
clc
cld
nop
out
lret
ficoms
fptan
jecxz
je
mov
jmp
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
icebp
fsub
shl
cmp
in
sti
in
idiv
jmp
xchg
hlt
call
loop
divl
icebp
into
loopne
fcom
hlt
iret
loopne
aam
jecxz
leave
incb
out
icebp
out
out
aaa
int3
int
ljmp
out
aad
hlt
out
test
in
xchg
cld
mov
xlat
repnz
fcomi
cmp
call
cmp
fyl2x
sti
out
in
fadd
loopne
xchg
lret
in
leave
sti
fcmovbe
clc
sar
sub
aaa
cmp
mov
faddl
shr
lret
in
in
out
ret
cmp
out
imul
div
ds
test
orl
popl
loopne
aaa
fcom
jmp
idiv
cmp
rolb
xchg
rcr
out
jecxz
test
divl
fsubr
sarl
into
cmp
and
roll
xchg
rcl
jecxz
ljmp
sarb
hlt
fiaddl
int3
int
sti
fsts
xlat
jmp
shlb
iret
cld
fsubr
std
rcl
out
fsub
cld
fadds
clc
jecxz
sub
addb
in
fcomi
cmp
out
in
addl
in
test
iret
stc
ror
ljmp
cmp
cli
fcmovu
mov
ds
ror
out
jmp
out
xchg
ret
shr
repnz
cmp
loopne
shl
cld
xchg
in
in
fisttps
loope
xchg
aam
repz
fidivrl
cmp
int3
lock
mov
or
sar
xor
hlt
icebp
int3
std
bnd
hlt
mov
call
in
ljmp
xor
out
into
in
call
add
cmp
jmp
jecxz
xchg
xor
xor
cmp
clc
ljmp
mov
shr
ret
in
mov
fcmovne
sub
and
fdivs
out
fld
lock
cmp
div
out
add
fcom
iret
cli
sti
loope
std
xchg
repnz
das
xor
repnz
jmp
mov
jmp
ret
int
fstl
mov
in
aas
call
add
jmp
fdivp
xchg
sti
and
mov
mov
mov
ror
out
cmp
dec
leave
int
sti
rcr
out
enter
loope
addb
std
jmp
shl
ret
xor
sti
ror
cli
repnz
jmp
jecxz
dec
into
lock
mov
ljmp
out
fstpt
shr
fdivr
adc
shl
addl
out
in
ljmp
test
fdivr
jmp
fmuls
lret
in
out
enter
cmc
idiv
mul
cmp
icebp
loop
adc
stc
les
out
mov
xchg
cli
clc
leave
enter
ret
out
decl
xchg
sbb
iret
call
stc
fiadds
icebp
test
repz
lret
jmp
sti
int3
incl
loop
cmp
in
cli
jmp
cmp
out
repz
sub
mov
jecxz
mov
mov
enter
cmp
int
cmp
not
jecxz
loopne
mov
jmp
in
aam
in
sub
in
sti
xor
testb
call
ror
lret
out
leave
out
fdivr
fcomi
int
cmp
rcr
shr
fldl
std
mov
cld
lock
mov
out
ret
enter
fucomp
hlt
fcmovu
loopne
clc
fnstsw
repnz
or
xchg
call
leave
jmp
cmp
jmp
out
sti
clc
ret
cmc
mov
enter
mov
sub
int3
icebp
in
in
out
cmc
cli
cmp
loopne
and
sarl
jecxz
loopne
loop
mov
in
out
lock
lret
rcr
in
fldln2
int
ds
xchg
jecxz
aad
sti
cmp
loop
xchg
mov
call
std
repnz
shr
jmp
xlat
clc
shl
aam
cmc
incb
lret
incb
div
shll
out
ror
aas
sti
loope
xchg
clc
icebp
sti
xchg
call
mul
out
hlt
ss
xor
ret
cmp
je
jmp
int3
ret
int
mov
pusha
das
out
rclb
jle
ret
jle
ret
test
fsub
sti
test
cmc
neg
int
cmc
repz
out
repnz
shl
int
cli
iret
fcmovu
cmp
enter
movb
in
xor
jmp
lock
std
adc
enter
mov
loop
clc
out
call
jmp
cs
aam
cld
fdivp
fninit
in
lock
sti
in
mov
ffree
jmp
in
out
out
clc
rol
std
das
xlat
aam
cli
fadd
loop
xchg
xchg
loope
xchg
xor
aaa
cld
ds
aaa
or
in
sti
in
aad
mov
or
hlt
xchg
repnz
int
cmp
test
fsubp
std
clc
leave
decl
call
jmp
in
ret
jmp
lret
clc
aas
clc
aas
cld
shr
ret
int3
ret
xchg
rorb
enter
out
cmp
lock
int
into
loope
leave
fadds
ftst
lret
shr
ss
shr
fidivs
xlat
cmc
cld
sti
repnz
loope
lock
in
cld
call
out
mov
stc
enter
repz
inc
test
out
cld
out
cmp
fucomi
lret
mov
in
in
call
cmp
ret
rol
out
cld
fst
in
incl
jmp
in
fcom
aaa
clc
iret
fdiv
repz
out
lret
rcl
loop
fcmovnbe
sbb
mov
jmp
jecxz
not
lock
cmp
jecxz
clc
ds
enter
fmuls
hlt
in
xor
enter
aam
repnz
lock
loopne
fcmovnbe
xor
out
or
mov
ljmp
sti
in
repz
fcmovnu
jmp
aas
out
loop
loop
repz
lea
fisttpll
cmp
sti
cmp
loope
loop
div
aas
cli
fucom
fisttps
sar
iret
loope
fstpt
in
hlt
fsin
ljmp
xchg
fdivr
int
jmp
test
incl
neg
out
xor
aam
loop
cmp
les
sbb
sub
call
in
jmp
aad
iret
aas
rol
aad
push
inc
push
jp
fs
jo
jle
test
jle
cld
in
lret
test
adcb
int
cmp
ds
cld
shl
aad
test
in
out
out
int
loop
fstl
cmp
cmp
test
sti
jecxz
jmp
out
fxch
fsubr
into
adc
ss
aad
out
xor
aam
xlat
clc
fnstcw
test
mov
fcmovnu
lret
repnz
fxch
aam
cmp
fsubr
jmp
ret
stc
rcl
in
xlat
call
xchg
call
enter
cli
fnop
fidivrs
enter
ffree
fiadds
lret
fmulp
mov
fnstenv
lock
cli
into
incl
out
loope
sub
enter
fimuls
ror
cmp
fidivrs
lret
cmp
adc
in
in
lret
out
lock
loope
aam
repz
cli
flds
cmp
sub
mov
fcmove
shl
out
aam
jecxz
aaa
icebp
cmp
int
ret
xlat
rol
roll
incb
iret
rol
int
xlat
aas
aam
cli
into
fucom
cmp
adc
out
xchg
std
nop
sub
xor
lret
clc
cli
out
repnz
testb
ret
in
cld
fdivrp
xchg
xchg
int3
call
out
into
shl
aas
shr
cld
loop
cmc
fistpll
mov
orb
enter
enter
repnz
sti
in
fdivr
into
loopne
clc
xlat
icebp
xlat
faddp
test
int
fcomp
jecxz
repz
fxtract
rcl
repnz
not
cmp
std
call
test
std
roll
loopne
mov
out
out
sub
cli
out
cld
les
enter
aam
aam
add
sbb
orl
ljmp
jecxz
repnz
leave
fndisi(8087
in
roll
mov
mov
in
hlt
aaa
xor
int3
cld
cmp
icebp
pushl
aaa
loopne
test
loopne
hlt
mov
jmp
mov
xor
xor
lret
sarl
rcl
xlat
repnz
xchg
hlt
fcmovne
mov
loopne
in
int
out
hlt
lret
xor
cmp
xlat
xchg
shl
sbb
filds
ljmp
jmp
shl
repz
repz
jecxz
mov
inc
fdivr
ljmp
hlt
out
in
out
cmp
cmp
stc
ret
mov
in
in
decl
sub
jmp
aas
into
lret
leave
aam
dec
jo
mov
outsl
jle
test
jle
addb
hlt
jecxz
div
jmp
not
in
repnz
mov
mov
mov
repz
repz
fmul
sti
stc
rcl
cli
jmp
jecxz
cli
enter
into
call
enter
cmp
jmp
sar
sti
rcl
ret
loop
in
mov
shrb
icebp
repz
sar
in
in
int3
sar
shl
sub
dec
filds
jecxz
call
cmp
jmp
loopne
xlat
loope
aas
int
cmp
aam
fisttpl
lret
nop
ljmp
aad
std
fcmove
xlat
sarb
icebp
ret
cli
in
in
repnz
orb
xor
jmp
fcomp
loop
ret
loopne
mov
sti
jecxz
iret
test
fucomi
or
clc
jmp
std
in
lret
lret
div
sar
stc
hlt
cld
int
in
leave
test
into
ljmp
ss
in
or
cmp
xchg
aad
lret
jmp
test
jmp
mov
lret
iret
fidivs
enter
int3
in
ds
ljmp
mov
lret
cmp
clc
sti
fbstp
shl
xlat
testl
jecxz
sti
call
hlt
leave
repnz
cs
sar
sar
lock
in
aaa
aam
cmp
leave
int3
mov
int3
leave
loop
test
lea
int
ss
lock
fstpt
icebp
cmc
ret
jmp
in
out
stc
mov
shll
icebp
std
fldl
leave
repnz
cli
test
xchg
in
aad
out
aad
imul
cld
in
clc
ret
icebp
ret
loop
fadd
aam
fsub
out
xchg
in
repz
repz
loop
sub
leave
lret
leave
incb
cld
loop
aam
ljmp
xchg
ret
cli
aad
call
cmp
xchg
xor
lret
mov
in
sub
in
xor
cmp
cmc
lock
add
loopne
cmc
jmp
lret
lret
in
out
int3
repz
leave
in
icebp
enter
aas
fld
aam
loopne
xchg
leave
mov
mov
test
xchg
rcl
in
repnz
sarl
iret
jecxz
ret
aad
or
xchg
fmuls
jecxz
aaa
repnz
int3
aas
out
cmp
loope
repnz
out
into
xor
icebp
xlat
int3
testl
add
int3
ret
int3
int3
sahf
pushf
gs
jg
and
jb
jle
add
in
lock
cmp
cmc
in
loope
loope
fcmovnb
aam
enter
fsubp
repnz
imul
leave
fadd
aad
fxch
lret
rol
cld
shr
call
cld
clc
into
mov
mov
int3
nop
nop
in
in
xor
sub
ds
jmp
cmp
leave
lret
int
out
sti
cli
lea
ror
ss
out
pushl
lock
loope
ffree
flds
in
jecxz
out
out
enter
lock
in
xor
jmp
in
xchg
ret
jecxz
int
jmp
std
mov
sub
sbb
ret
repnz
jecxz
out
call
icebp
rcll
into
xlat
fsubr
fdivr
aas
iret
fadds
test
and
leave
lret
in
addb
xor
cld
cmp
sar
test
xlat
call
sar
in
xchg
icebp
cs
rcl
hlt
fnop
cmp
cmp
aad
stc
decl
mul
in
cs
out
aad
fcmove
hlt
std
jmp
icebp
aam
lock
test
in
cld
int3
fldl
jecxz
aaa
xor
ret
enter
fstpt
lock
fsub
in
mov
mov
or
leave
clc
jmp
ss
in
shr
aas
cld
hlt
mov
fdivrp
mov
out
jmp
shll
iret
div
xor
xor
xor
cld
enter
loope
out
out
icebp
hlt
xchg
out
sub
vpaddusb
out
int3
fmulp
sarb
rcl
out
icebp
movl
repz
loop
in
cli
aam
fdivrp
hlt
cmp
int
sbb
shl
clc
rcr
mov
out
test
xchg
das
jmp
stc
in
ss
ds
cmp
ret
add
lea
roll
in
sarl
int3
into
xor
not
rol
clc
rcl
loopne
mov
out
out
loope
repnz
fcmovnb
loopne
loope
sbb
xlat
fabs
les
out
mov
call
cmc
lret
loopne
enter
testb
lock
shl
iret
call
testb
into
std
aas
cmc
sti
call
leave
incb
rol
in
call
int
iret
fdiv
rol
ljmp
stc
loopne
fmull
in
ror
cmp
loopne,pt
clc
cmc
dec
or
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
cmp
jle
test
jle
cld
jmp
ljmp
std
xchg
xchg
loopne
in
sar
int
cmp
fadd
mov
loopne
enter
xchg
in
loop
fmulp
jmp
in
rol
into
lock
cld
lret
in
rcl
test
out
ret
adcb
loop
xor
fdivp
lret
lret
loopne
div
in
std
lret
out
addb
sar
out
sarb
out
iret
cmp
int3
aas
rcr
in
ret
out
cli
loop
out
test
int
out
in
xor
xor
imul
int
out
stc
repnz
test
loopne
mov
xor
ror
shr
aad
rcr
out
cmp
fcmovnb
repz
fsub
in
int
lds
icebp
iret
repz
out
shl
sti
test
loop
test
loope
mov
fisttps
xor
sub
in
lret
xor
out
iret
cld
cmp
xor
xchg
std
xchg
loop
or
rcr
in
int3
xlat
leave
cmp
ror
ret
stc
out
stc
aam
xchg
in
call
xchg
xor
lret
jmp
lret
repnz
aas
roll
mov
enter
into
shr
adcb
aaa
fucom
clc
cli
shr
int3
clc
rol
call
idiv
orl
jecxz
shrl
into
in
cli
xor
clc
lret
fmul
ds
std
addl
into
aaa
ss
xchg
loop
add
fmuls
xchg
loop
sarl
xor
in
cmp
out
test
repnz
leave
repz
out
mov
leave
nop
leave
int
iret
repz
shl
ljmp
xlat
into
cli
fdiv
loop
loope
out
jecxz
popl
shrl
leave
shl
int
xlat
test
ds
sar
fcom
test
in
movb
sti
fidivrl
fucomp
fdivs
not
out
faddl
adc
movl
stc
rcl
iret
fsubr
cld
cmp
out
sti
cld
stc
loope
cld
int3
mov
lock
cmc
xor
iret
repnz
in
in
fucomp
adc
aad
aad
loopne
out
iret
cli
lret
int3
int
shl
lret
fnstenv
loop
in
rcl
cmp
aaa
fadd
clc
xor
rcr
leave
fstp
jmp
jmp
ljmp
ret
fdiv
fdivl
leave
out
cmp
fcomip
sar
iret
neg
jmp
leave
xchg
fucomip
xor
jmp
int
iret
rcl
aad
inc
xor
or
mov
test
jle
sub
iret
out
out
cli
fldlg2
int
cmp
loop
sti
fyl2xp1
std
call
leave
out
mov
fstp
in
in
in
mov
in
leave
fcmovnbe
cmp
shl
loop
ds
fneni(8087
int3
mov
or
into
lret
in
out
into
xor
lret
cmp
in
loop
loope
cmp
and
icebp
cld
jmp
mul
iret
aam
cld
cmp
not
rolb
rcr
fisttpll
and
inc
jmp
iret
shl
cmp
in
rcr
cmp
icebp
call
cli
mul
loop
sti
jmp
xor
repz
int
out
cmp
in
cld
stc
and
jecxz
int3
fmulp
cli
loopne
orl
aad
aad
sarl
cmp
icebp
cmp
or
fdivr
int
ret
shl
mov
hlt
xor
not
aad
cli
aaa
lret
xlat
test
test
sub
neg
mov
jecxz
jmp
enter
ret
not
ror
in
jecxz
out
loope
enter
aam
icebp
adc
mov
shl
iret
cmp
ss
leave
fcmovbe
clc
loope
loope
cmp
test
leave
mul
iret
sti
call
xor
xor
cli
fmul
sarb
xchg
repz
jecxz
mov
out
jmp
out
out
hlt
in
fdecstp
cld
std
xlat
aad
xor
out
adc
jecxz
loop
lret
leave
fldl
out
ss
aam
hlt
out
test
test
fimull
in
sti
int3
lock
loope
mov
int3
clc
cs
jecxz
cld
sar
loope
jecxz
fildl
xlat
in
stc
test
rcl
jmp
mov
xor
in
in
out
cmp
aam
int3
fsubr
cld
sti
imul
out
clc
test
fiadds
aas
cs
cld
cli
aam
aas
sarb
loopne
repz
and
mov
or
xor
in
icebp
shr
out
rcl
hlt
cmc
cmp
xlat
shl
orb
mov
loop
xor
lock
out
imul
in
fbstp
bnd
test
fcmove
call
jmp
neg
jmp
fucomi
repnz
rolb
xchg
xchg
lock
mov
xchg
test
sub
fcmovbe
imul
fdivr
rol
std
ds
fcmovu
loop
xchg
fmull
out
int3
xor
cld
enter
sti
loop
in
xchg
cmp
inc
mov
in
test
stc
leave
ljmp
adc
test
add
ret
jmp
mov
fcmovnu
or
sub
shrl
jp
jle
add
into
into
enter
aad
cmp
stc
fildl
fsubrp
xchg
loopne
out
nop
in
fld
das
ss
xor
aam
loopne
xlat
shl
aam
addb
out
in
xchg
call
shr
not
hlt
fdivr
rcr
cmpb
in
loop
ds
fimull
out
lock
fdivl
xor
sti
stc
and
rcr
std
fld
inc
lock
cli
adc
xchg
add
test
imul
ss
repz
aas
flds
test
mov
jmp
xchg
mov
int
jmp
jmp
lock
clc
icebp
decb
out
out
jmp
xchg
fimuls
stc
int
int3
stc
int3
clc
fyl2xp1
loope
aad
fucom
out
in
sub
leave
rcr
iret
loop
shl
xlat
out
aad
test
sarb
loop
loope
sti
icebp
in
lea
jmp
cs
xlat
out
lret
sti
fdivl
cli
int3
aad
shl
ds
xchg
loopne
xlat
fstl
lret
icebp
leave
xor
aaa
out
fnstsw
ss
fcmovu
xlat
loope
lea
rcr
roll
cmp
out
fucomi
loope
ss
cld
xor
hlt
int3
stc
mov
incb
call
aad
ds
jecxz
ss
xlat
addl
in
lea
cmp
ljmp
fucom
icebp
sarl
sbb
int3
mov
mov
lret
mov
int
shr
sti
rorb
xchg
xchg
repnz
loope
loopne
cmp
into
clc
in
cld
dec
call
sti
testl
test
jmp
aad
in
stc
fdivr
ds
repnz
loope
mov
lret
filds
sub
lock
repz
fsub
ftst
idiv
cmp
out
clc
mov
mov
out
xor
jmp
xlat
fsubr
int3
fcmovu
or
testl
mov
sti
sar
out
aad
leave
shll
idiv
iret
aad
test
loopne
enter
shl
nop
test
xchg
aas
lret
rol
clc
in
jmp
fsubp
or
cmp
fdivp
out
cmc
test
loope
loop
in
in
xor
sti
ljmp
in
into
roll
test
lret
lock
lock
aaa
cmc
cmp
rcr
fstl
xlat
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
imul
test
jle
rolb
cld
fcmovu
incl
decb
jmp
cld
ss
fcomp
ret
repnz
shl
test
fcmovne
out
mov
fmul
lock
sub
aam
ljmp
loop
jecxz
mov
xor
nop
fcmove
out
hlt
rolb
cli
in
rcl
sar
fnsave
fcmovnu
test
sbb
add
xchg
hlt
call
in
int3
xor
sti
cmp
cmc
stc
ffree
loopne
nop
mov
mov
xchg
int
into
xor
jmp
stc
out
cmp
cmp
aad
sarl
and
mov
or
xchg
jecxz
mov
jmp
out
ror
fsubr
std
rcl
in
fadd
testb
xchg
mov
jmp
xor
ljmp
sti
sbb
stc
mov
jmp
mov
mov
shl
ss
int
fnop
out
out
stc
ss
in
mov
jmp
lret
sub
mov
jmp
ret
cmp
out
fucom
iret
icebp
into
fdivr
out
lret
xchg
fsubp
lock
lret
xchg
xor
sub
int
int3
fsubrp
stc
xlat
aad
aas
in
icebp
fadds
out
sub
test
lock
out
repz
in
aas
in
aas
cmc
aam
into
fcmovu
fdivrs
in
out
int3
loope
aam
fadd
clc
aaa
cmp
clc
out
aam
mov
cmc
aad
out
mov
adc
xor
fdiv
aad
sti
out
fcom
shl
loopne
mov
mov
loope
hlt
mov
iret
xor
in
shl
iret
cmp
out
hlt
rol
in
repnz
sti
push
jmp
in
nop
mov
hlt
jecxz
ret
int
jecxz
cmp
clc
cmp
filds
in
fimull
mov
xor
out
repz
cld
out
sbb
sti
test
test
fsubr
fmul
mov
std
in
loopne
xlat
sarl
enter
stc
fucomi
hlt
ret
shl
hlt
fucom
in
test
repnz
std
repz
loop
xlat
std
out
lret
addb
shr
jmp
lock
sarl
into
call
cmpl
in
test
sbb
ljmp
lret
xlat
shll
neg
icebp
ds
test
jmp
loopne
clc
in
in
rorl
shl
clc
out
jmp
leave
xlat
cmp
ds
adc
fdivrp
mov
inc
lock
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
lea
jg
jle
add
imul
loopne
ljmp
aad
cmp
aad
cmp
fidivrl
int3
cmp
ret
int3
std
test
loope
repnz
stc
fidivl
fidivrl
hlt
out
loop
out
enter
mov
icebp
ss
cmp
out
cmp
jecxz
in
xchg
roll
xchg
leave
shr
loopne
std
mov
ret
int
in
ljmp
cmp
rol
fimull
jmp
lret
icebp
ljmp
in
in
call
enter
lock
repz
xchg
xor
fldcw
rolb
rcr
hlt
call
jmp
sti
leave
hlt
roll
leave
cmp
fdivrs
cld
rcr
ds
cmp
xlat
loope
testl
lock
xor
aaa
out
sarl
adc
xchg
filds
repnz
in
clc
ror
lret
clc
fucom
lret
repz
xchg
stc
int
call
call
cmp
lret
out
lock
xlat
hlt
ffree
mov
testb
iret
and
ret
xlat
in
aaa
cmp
hlt
cmp
clc
hlt
repnz
shr
fmuls
xchg
cld
shl
fdivp
lret
into
ret
jmp
cmp
xor
in
stc
icebp
stc
sti
ljmp
int
iret
test
ret
lret
out
fidivrs
in
in
fistpll
addl
cmc
test
fsubr
in
icebp
leave
enter
shl
cld
lret
loopne
mul
cli
cli
in
cmp
in
enter
and
jmp
out
repnz
enter
jmp
aam
repnz
std
cld
out
leave
in
aad
mov
mov
call
sar
divb
and
lds
loope
loope
out
aad
out
neg
icebp
divl
repz
repnz
std
clc
hlt
aas
mov
fsub
in
rol
jmp
cmp
fidivs
testl
xchg
leave
jmp
mov
sti
loop
jmp
vpsadbw
jecxz
cmp
jmp
shl
loope
cmc
loop
shr
mov
in
cmp
rcl
rcr
out
xchg
aad
movb
fdivp
xor
rol
div
sar
cli
int
loope
loopne
out
jmp
int
xchg
mov
iret
clc
cmp
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
arpl
jle
add
ret
jecxz
fsub
fdiv
shl
icebp
xorl
shl
ds
ljmp
in
cld
lret
leave
aad
idiv
fcom
xor
rcl
cmp
fdivr
jmp
int
hlt
jecxz
fcmovne
ljmp
aaa
out
rcl
jecxz
mov
loope
xlat
test
into
loop
fdivs
in
sar
std
int3
lock
fdivr
cmc
xchg
jecxz
fcmovb
loop
nop
test
stc
sub
sar
call
in
ret
jecxz
out
out
lock
mov
rol
std
clc
jmp
xor
iret
icebp
repnz
stc
aad
xchg
xchg
rcr
mov
sub
in
idiv
repz
fnsave
call
lock
shl
out
jecxz
loopne
iret
leave
dec
iret
loopne
shl
in
sar
ds
in
in
or
cld
jmp
lret
jmp
jmp
sbb
in
into
test
in
add
lret
in
fsubrp
icebp
lock
out
in
cmc
jecxz
clc
jmp
fcmove
leave
shl
loop
add
out
stc
or
std
addb
into
int3
clc
ss
fcmove
aad
aam
fsub
out
in
fcom
mov
sti
iret
loop
iret
test
lock
out
shr
cli
inc
adc
fdivr
hlt
enter
call
nop
xchg
out
rcr
xlat
fcmovne
leave
int
fyl2x
cmp
ret
ljmp
mov
int
or
xor
icebp
not
cmp
out
cmp
sti
lock
in
aad
nop
sti
in
xchg
roll
leave
jmp
shl
in
div
mov
call
iret
test
ljmp
repnz
enter
neg
cmc
shl
out
sar
xchg
fxch
int
or
cli
fidivrl
lock
add
fcmovnbe
fldl
lret
xchg
loopne
out
leave
test
int
flds
iret
test
sar
loopne
fiaddl
repz
in
nop
shr
sub
cmp
jmp
in
addb
test
out
lret
mov
in
icebp
les
xlat
incb
stc
stc
loop
jecxz
loope
clc
mov
iret
out
incl
xor
vpslld
repnz
cli
repnz
std
mov
fdivrp
in
xchg
icebp
xchg
iret
in
out
fcmove
iret
into
rcr
lock
mov
jmp
cmp
jmp
into
int
xlat
dec
dec
pop
push
jg
test
jle
sub
fucom
hlt
cli
mov
clc
fsts
xchg
out
xor
idivl
repnz
cmp
rcr
cli
xchg
mov
orl
xor
std
rcl
jmp
stc
xlat
ror
out
xchg
cli
loop
in
movl
aad
int
repnz
jmp
or
cli
iret
test
mov
std
xrelease
sar
xor
aam
aas
inc
aas
idiv
out
fdiv
fcmovnbe
mov
ss
cld
div
cmp
call
iret
cmp
call
mov
out
int
repnz
xlat
icebp
call
cli
loope
cld
roll
mov
call
loopne
out
aaa
xlat
xor
iret
int
neg
std
repnz
cmp
clc
xchg
out
mov
clc
add
out
out
in
iret
shr
ljmp
cmpb
fst
mov
fdivrp
fcmovbe
fimull
lock
xchg
div
ljmp
sbb
fst
aad
jecxz
icebp
rcr
xlat
int
mov
int
orb
fpatan
loopne
fdivrl
rolb
out
fcomi
test
cli
out
xchg
iret
xchg
lock
jmp
out
std
fstp
sub
fcmovu
out
shr
xor
xor
aam
std
jmp
lret
aad
cld
rol
std
fucomi
fsubr
std
cli
rorl
repnz
xlat
out
in
aaa
aad
neg
neg
aas
in
cld
icebp
leave
mov
out
in
into
std
mov
icebp
sub
shl
loop
ljmp
rolb
sar
add
stc
icebp
in
lret
xchg
in
ret
xor
lret
cld
cmp
loope
out
hlt
clc
cmp
enter
incl
hlt
and
xor
jecxz
lds
ljmp
aad
hlt
jmp
test
mov
cmc
clc
repz
fcomip
fistpll
loop
in
iret
and
fildl
lea
lret
repnz
enter
iret
into
repnz
xor
xchg
filds
fimuls
shl
hlt
les
cmp
fxch
cmp
loope
test
hlt
test
jmp
test
mov
aad
fdivr
in
fyl2x
lret
cmc
ds
enter
aad
leave
fld
ret
out
test
repz
out
out
test
test
loopne
jecxz
jne
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
lret
idiv
mov
shl
fimuls
out
in
int
int
call
loopne
loopne
shr
faddl
and
rol
loop
sti
leave
ljmp
in
test
xlat
filds
adcl
clc
fcmove
xor
repnz
mov
cld
cld
mov
in
fimuls
hlt
cli
jmp
loope
aad
ror
jmp
ljmp
loope
shl
aad
repz
in
int
cmp
cld
fdivrl
lock
jecxz
mov
fmul
test
loopne
test
cmp
enter
test
cmp
xchg
lret
lock
hlt
xor
shl
orl
xchg
rol
rcl
cli
rcl
out
icebp
cmp
clc
div
xchg
aam
lds
loope
enter
out
out
icebp
hlt
out
call
loop
cmc
stc
repz
ret
out
mov
in
xchg
in
lret
rcl
out
xor
cmp
int
clc
std
shl
test
in
cmc
aad
leave
call
fcmovne
out
aad
xlat
repz
sub
addb
in
shl
lock
loop
idiv
in
cmp
in
sti
fmulp
test
enter
hlt
aas
loop
icebp
loopne
in
enter
clc
xor
div
int3
sarb
ffree
xor
movb
int
adcb
out
lock
fdiv
out
iret
leave
idiv
in
fidivrs
jecxz
xor
fsub
leave
out
iret
test
int
xor
out
aad
lret
not
fsubrp
test
aas
clc
stc
stc
mov
xchg
shl
test
into
hlt
int3
repz
aas
int3
out
fld
cld
out
enter
out
mov
test
rcr
ror
ljmp
loop
rcl
sbb
rorl
xchg
shlb
ss
fldl
fdivp
leave
rorl
dec
out
in
in
test
xor
rcl
out
aas
shl
xlat
incl
lock
nop
xchg
mov
repnz
ret
clc
cmp
fidivrl
fcmove
ret
xor
xchg
mov
neg
add
loope
hlt
out
shl
ss
xor
cmp
ror
into
sarb
into
iret
repnz
fiadds
xchg
lret
out
in
test
mov
orl
sub
push
orl
jmp
aam
ror
fcomp
aam
aas
idivb
or
test
jle
aas
aaa
iret
cmp
xor
stc
xor
hlt
aad
aam
fucomip
ret
leave
out
out
cld
jmp
shl
call
stc
xor
lock
fcmovbe
std
stc
ret
jmp
icebp
xor
not
fcmovnu
lock
fcmovu
clc
incl
out
cmc
in
xchg
mov
loopne
mul
clc
fucomi
std
shlb
xlat
loop
cli
ffreep
xlat
int3
test
lret
xchg
leave
cmc
vpmovmskb
into
xor
cmp
cmp
in
xchg
loope
mov
out
fdivs
fsub
in
enter
loope
cmp
int
cmp
enter
fcmovnu
dec
adcb
ror
in
rol
sarl
xlat
faddl
test
ljmp
fsubr
lret
div
imul
sti
in
hlt
cmp
out
rcr
cli
fucomi
call
loopne
leave
aaa
xor
int3
icebp
neg
cld
enter
cld
cld
push
fadds
repnz
in
xor
xor
fdiv
out
stc
rcl
neg
loope
mov
cld
xchg
out
mov
decb
xor
aam
lock
shl
repnz
sub
inc
fmulp
loopne
mov
fsubp
out
jecxz
mov
enter
jmp
sbb
aas
test
shl
mul
mov
mov
icebp
jmp
jmp
icebp
fcomip
jmp
fcom
aad
ljmp
aam
ss
xor
in
icebp
fstpt
mul
repz
loopne
filds
fxch
xchg
jecxz
out
out
shl
lock
in
cmp
incl
int
xchg
xchg
aam
out
rcl
repz
int3
out
loop
xlat
cld
repz
jmp
std
mov
leave
int3
xchg
aad
jecxz
clc
xor
cld
ds
repnz
cld
mov
out
loop
lret
in
lock
hlt
jmp
in
in
int
shl
ss
cmp
xlat
aad
hlt
fcmovb
fmulp
mov
lock
shll
aam
xlat
in
hlt
div
fdivs
filds
stc
lret
iret
sar
xchg
in
stc
sarl
cmc
out
loopne
neg
call
test
out
fneni(8087
xchg
jmp
test
clc
into
mov
loopne
incb
in
cmc
mov
clc
xchg
jmp
enter
hlt
into
fcmovu
cmp
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
insb
bound
test
jle
clc
clc
fcomp
repnz
cmc
ret
loop
mov
leave
mov
ljmp
clc
iret
idivl
in
clc
std
inc
xor
enter
cmc
jecxz
nop
fneni(8087
lret
iret
int
lret
cmp
cmp
fsubr
ret
addl
test
rorb
icebp
xor
aam
stc
loope
shr
clc
in
out
mov
lock
rcl
aam
jecxz
cli
vpsadbw
into
incl
fucomi
test
rcr
lret
idiv
fsubr
iret
repz
and
xor
ror
stc
neg
cld
out
lret
fdiv
cli
mov
loopne
jmp
cli
nop
in
mov
jecxz
xlat
cld
fdiv
repz
sar
cmp
out
repz
ret
leave
cli
and
fucomi
fmulp
dec
into
sub
ss
ss
std
into
loop
fldl
imul
incl
rcl
xor
ror
aad
imul
cmp
cmp
shr
mov
aam
jecxz
loopne
fcomip
fsub
out
cmp
fcmovbe
bnd
cld
clc
int
xchg
out
rolb
int
lret
inc
ss
out
in
fucomi
sar
rcl
repz
xchg
clc
ljmp
loope
repz
int3
int
shr
roll
enter
mov
fstl
xbegin
out
fxch
cmp
out
in
fcmovu
cld
loopne
xchg
test
test
les
aas
fdivp
fst
ds
sti
leave
xchg
test
out
jmp
test
in
aaa
aam
jmp
rcr
cmp
xchg
mov
xchg
jmp
ss
lret
les
jmp
iret
rol
cmp
loopne
aas
leave
mov
loopne
in
fcmove
into
nop
cmp
xor
aam
rcl
cmp
in
aad
clc
aam
aas
sti
test
mul
jecxz
test
out
xlat
jmp
lret
fmul
cmp
stc
repz
cmp
lret
mov
loop
lret
fmulp
jmp
xor
iret
shr
sti
fstp
adc
std
iret
in
jmp
aas
filds
nop
nop
cmc
in
jecxz
out
iret
mul
xor
cmc
ret
ret
fisttpl
in
shr
out
into
xchg
int
xor
out
neg
rcr
icebp
cld
aam
sub
int3
fsubr
into
xchg
test
in
nop
loope
xor
fnstcw
cmc
repnz
fiadds
push
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
jge
lea
test
jle
fadd
sti
out
std
loop
repnz
jmp
ljmp
les
mov
mov
test
in
out
stc
sar
cmp
in
shl
sti
out
loop
popl
out
rcr
xor
fidivl
cmp
cmp
repz
test
mov
repnz
cmp
xor
aad
cmp
aad
stc
rol
test
out
leave
or
sub
ret
ljmp
cmp
add
cmc
cmp
test
xchg
rcl
cmc
ljmp
cmp
out
jecxz
sar
cmc
loope
jmp
shr
cli
xchg
shl
into
lret
cmc
into
shl
repnz
int
cmp
loop
out
cmc
out
ret
fisttps
mov
in
out
jmp
std
cli
sar
cld
in
enter
jmp
ljmp
fidivrl
aas
rcl
fcmovne
jmp
fsubp
les
out
mov
iret
xor
out
les
xor
fiadds
mov
fcmove
fyl2xp1
enter
in
call
shl
lret
into
aas
repnz
in
out
rol
enter
mov
aam
out
cmc
sarb
aam
lret
lock
iret
loop
xchg
loopne
rorb
decl
xor
int3
sarb
aad
loop
sub
in
fists
aad
xor
into
cmp
or
iret
aam
ret
cld
mov
or
test
int
jmp
xor
fcmovne
out
lret
sti
cmpb
cld
clc
les
and
xchg
rolb
rcl
cmp
cmp
iret
lock
lock
xchg
fsubp
icebp
in
jmp
cmc
ss
cmp
jmp
neg
push
filds
sbb
mov
mov
shlb
fyl2xp1
lret
cmc
fidivrs
repnz
std
cli
xor
shl
jmp
loopne
addb
in
loope
hlt
fcmovbe
in
iret
iret
loop
jmp
into
fadds
jmp
lret
mov
xchg
lret
in
cs
lret
out
out
in
out
cmp
in
cmp
ffreep
hlt
clc
mov
in
cld
mov
fisttpll
aad
leave
clc
int
clc
ret
lds
sub
jmp
xor
add
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
xorl
test
jle
xchg
repz
shll
int
aam
fucom
lret
repz
shl
aad
aam
cld
std
cld
fxch
jmp
in
add
stc
call
stc
ds
rcl
faddl
cli
cli
lret
loop
icebp
repz
cmp
repz
fdivrl
iret
in
cmp
loop
mov
std
mov
adc
shl
lret
idiv
lret
shl
fstp
iret
mov
lret
fneni(8087
addb
std
cmp
shl
fadd
jmp
enter
adc
sub
sub
fxch
call
xlat
xor
clc
cli
int3
lret
enter
mov
fmul
out
out
out
ret
aam
into
call
clc
aad
rcr
fucomp
mov
stc
fcmove
in
xchg
ljmp
cmc
fcmovne
cmp
mov
ljmp
repz
fcomip
in
icebp
leave
lret
hlt
icebp
jmp
repz
aad
lock
cli
cld
cld
int3
fsubr
jecxz
out
jmp
cmc
cld
jmp
test
ret
sub
ret
or
fmulp
int3
xchg
out
sti
stc
cmp
loopne
cmp
cld
fisttpll
mov
out
xchg
add
out
in
das
ljmp
loope
out
rol
lds
cld
in
aam
in
cmp
cli
xor
cmp
out
repz
loope
test
jecxz
sti
fcomp
loope
out
test
out
out
fstpt
lock
lock
int
repz
repnz
cmp
clc
mov
xchg
into
mov
loopne
ret
clc
repnz
fdiv
fdivr
repnz
iret
in
xchg
stc
ljmp
xchg
repz
lock
sti
stc
idivb
aad
xchg
enter
xchg
jmp
out
xor
lret
fucom
std
in
repz
fldl
in
into
xchg
xor
call
in
lret
call
fdivp
shr
sbb
test
out
xchg
jmp
call
shl
imulb
bnd
hlt
icebp
fsubp
icebp
repnz
test
mov
in
fmuls
rcl
loopne
test
int3
out
ret
shl
xchg
lret
addl
sub
fldpi
xor
lock
sarl
cmp
sar
add
test
repnz
xchg
xchg
sub
aaa
int
mov
lea
push
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
testl
jle
leave
stc
cmp
loop
in
mov
iret
mov
call
imul
xor
aam
cmp
stc
cmp
aad
loop
repz
incb
ljmp
aad
hlt
ss
fiaddl
imul
repnz
ret
xchg
in
out
jmp
cmp
stc
lret
fdivr
lret
int
lret
shl
cmp
fsubr
std
leave
in
lret
mov
in
xlat
xor
int3
cld
lret
std
rcr
sarb
call
jecxz
in
jmp
jecxz
lock
aad
stc
sub
clc
repz
ret
out
ds
loop
mov
dec
int
leave
in
jmp
cmp
fld1
lock
stc
aad
out
jmp
orl
int
cld
enter
ljmp
aad
test
fcom
lret
cld
enter
mov
xchg
jmp
fprem1
leave
jmp
sti
enter
loope
cmp
icebp
ljmp
fsubrp
int3
icebp
std
cmc
repz
cmp
lock
in
out
xchg
aas
loop
enter
fdiv
xchg
lds
clc
in
cmp
fidivl
fcmovbe
idivl
ffreep
in
int3
sti
cld
lret
repz
loop
in
repnz
jmp
rcr
fistpll
fcmovnu
hlt
mov
in
cmp
lock
lret
testb
int
clc
aaa
int3
sti
ds
sti
stc
loopne
or
jmp
cmp
cmp
cld
cmp
fdivr
loop
icebp
std
faddl
fisttpl
xchg
xor
lock
iret
icebp
into
in
ds
xchg
loopne
lret
sub
xor
in
jmp
loope
fucomip
add
out
enter
lea
in
repnz
out
int
in
jmp
cld
lock
hlt
loop
call
or
xchg
std
icebp
idivl
aaa
sar
imul
xor
xor
xlat
ds
fsub
shl
clc
mov
imul
mov
lret
mov
icebp
xor
xlat
in
aam
test
mov
loopne
shrb
cmc
leave
icebp
enter
cmp
rol
clc
vpaddd
in
orb
stc
into
jmp
aam
in
loope
sarl
sbb
cli
jmp
xorl
stc
lret
imul
jmp
xlat
hlt
test
out
mov
ret
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
jge
xchg
nop
pop
jg
test
jle
xlat
mov
in
fnsetpm(287
icebp
loop
jmp
iret
mov
shll
aaa
int3
in
lock
shl
out
cmp
test
test
stc
lds
in
roll
ror
int
clc
rcr
lock
neg
out
fistpll
shr
fcmovb
rol
iret
jmp
mov
out
aam
aad
in
loop
iret
cmp
aas
test
call
xchg
xlat
icebp
fdivr
dec
jmp
cmp
fucom
cld
ror
mov
in
testl
xor
jmp
out
lret
enter
repnz
ret
in
clc
enter
std
lret
mov
in
out
shr
ljmp
fcom
shl
ret
aad
into
leave
fucomp
in
xchg
out
nop
out
out
aam
call
cmp
rcl
fimuls
loopne
rolb
sub
in
in
xor
shl
out
fisttpll
mov
fcom
aam
int3
ss
rcl
flds
iret
out
std
out
icebp
xchg
into
xchg
repz
cli
leave
fxch
clc
std
icebp
cmp
aas
neg
in
hlt
xchg
aas
sub
sub
call
leave
xlat
shl
enter
fmul
aad
repz
faddl
ljmp
shr
mov
repz
out
icebp
cmp
test
leave
lret
les
rcll
xor
cmp
fcmovbe
fdiv
in
in
out
ret
fimuls
test
cmp
mov
fdivs
test
rol
stc
repnz
lret
fdivr
test
leave
int3
in
call
iret
aaa
enter
addb
fnstcw
icebp
xchg
jecxz
in
fcomp
rol
jmp
ror
xor
cmc
aaa
fldl
loopne
ljmp
xchg
xor
rcl
repz
xor
call
loop
bnd
test
sbb
lret
mov
cmp
leave
cmp
out
ds
loope
in
adc
sbb
fmul
ret
out
in
mov
jmp
xor
cmp
rcr
fdivr
out
xlat
int
fdivr
div
rcr
fisttpll
out
mov
cmc
xchg
out
in
in
leave
clc
loop,pt
cmc
fdivrl
cmc
addl
cmp
loop
xlat
cli
into
or
loopne
lock
fdivp
mov
fcomi
fisttps
add
sti
inc
add
xor
call
fcoml
add
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
out
aad
cmp
jg
test
jle
xchg
into
xchg
test
xor
fidivl
in
aaa
cmc
iret
fstpt
cmp
rcr
fcmovne
orl
in
das
ret
in
shl
sar
xor
sti
neg
ds
fsubrp
test
out
int3
loopne
jmp
xor
rcl
cmc
cli
lock
out
cmp
fisttpl
test
call
mov
xor
test
into
lret
into
lock
repnz
sar
loope
out
in
sti
or
shl
in
out
icebp
xor
cmp
rcl
clc
loopne
repz
aad
call
mov
ljmp
lret
lock
aad
cmp
aas
fdivrs
neg
lock
mov
call
lea
aaa
aam
clc
cmp
lret
shl
repnz
xacquire
fiadds
out
xchg
ret
xlat
leave
lret
mov
cmc
out
xor
loopne
addl
xchg
aam
xlat
jecxz
sti
stc
repnz
fdiv
fst
sub
fcom
loopne
enter
in
leave
int
adcb
test
fcmovu
or
ds
lds
ljmp
icebp
enter
ret
xlat
leave
ds
aaa
neg
aad
cmp
stc
aad
out
xchg
loop
xchg
lret
clc
icebp
into
fnstcw
icebp
out
call
cli
out
mov
fisttpl
in
add
decl
lock
xor
lret
out
cmp
jmp
shr
in
ret
aaa
rcl
out
addb
test
fmull
rorl
loop
xor
test
aad
aam
jmp
adc
ret
call
xchg
nop
aaa
xor
in
imulb
ss
lret
cmpb
ret
loop
jmp
mov
cmp
mov
repz
aad
icebp
loop
aad
fsub
movl
rclb
jmp
int3
xor
int
clc
out
jecxz
call
loope
fiaddl
loopne
lock
shr
repz
jmp
sar
sbb
sbb
repz
jmp
in
int3
ret
xor
xor
sar
cmc
sub
lock
fld1
xor
repnz
repnz
xor
cmp
fdivrs
xor
std
and
in
ret
clc
jecxz
jmp
xchg
clc
enter
cmp
jne
jmp
enter
rcr
adc
lock
test
jle
cmp
int
aas
rcr
lock
ljmp
into
loop
in
leave
sti
aad
cmc
cmp
cli
in
rolb
in
sti
xchg
cmp
int
in
xlat
lock
test
aas
call
out
in
loop
fmull
out
xor
aam
cli
rcr
aas
jecxz
cld
rcr
loopne
mov
in
xchg
jmp
call
cmp
ret
hlt
xlat
in
fsubr
jmp
aaa
repz
sub
dec
add
ret
leave
mov
mov
xchg
out
shl
xchg
ljmp
sarb
shr
test
fdivrp
in
lret
mov
xor
and
cs
shl
iret
fsubr
jmp
lock
out
cld
xchg
test
in
xchg
xchg
repz
lret
fdivrs
fsub
repnz
xlat
jmp
cli
call
ss
xor
out
adc
neg
rol
fsubp
div
xlat
sti
std
and
mov
aaa
ljmp
jmp
loopne
jecxz
xrelease
filds
ror
in
iret
in
cmp
cmp
fcos
cmp
ds
ret
jmp
mov
mov
loope
fbstp
repnz
shl
jmp
aaa
rcl
cmp
lock
out
lock
mov
call
into
lret
shr
incl
lock
xor
loopne
in
stc
out
call
sti
out
ljmp
ret
aad
fcmovnu
fnop
sub
icebp
shl
cmp
clc
ljmp
in
enter
ss
icebp
jmp
and
fdivrp
enter
loope
out
sar
mov
les
call
aaa
int3
xor
ret
addb
sub
loope
lock
orl
repnz
out
out
ror
loope
stc
stc
clc
xchg
cli
enter
int3
xchg
mov
jecxz
out
xor
fsubr
into
and
repnz
orl
xchg
xchg
ret
call
enter
out
cld
sbb
loopne
std
call
sub
lret
or
hlt
mov
repnz
test
in
clc
aad
out
adc
fsubp
rcl
fucomi
mov
ljmp
filds
loope
inc
lock
add
jmp
rcl
rcl
aad
mov
fidivrl
pop
jg
test
jle
out
in
fucom
enter
rorb
aam
ror
cmp
aam
clc
stc
in
loop
out
in
testb
int3
mov
icebp
int3
xor
int
stc
enter
repnz
loope
shl
out
out
xchg
mov
cld
xor
fcmovne
xlat
lock
cmc
lock
out
std
mov
in
xchg
mov
into
in
int3
shlb
clc
std
xor
fcmovbe
rcl
xchg
test
adc
lret
add
into
cmp
sarb
cmp
iret
lock
out
loope
mul
aam
ret
jmp
decl
xchg
hlt
jmp
out
cli
neg
jmp
imul
repnz
aad
sti
jecxz
out
mov
xor
shl
ret
lds
cli
aam
fsub
cld
cmp
in
loop
out
add
test
rcl
sub
leave
cmc
shl
clc
iret
rcr
int
in
rolb
fiaddl
mov
test
lret
cmp
cld
div
cmp
mov
out
nop
faddl
icebp
aad
aam
call
lock
xchg
jmp
lret
leave
cli
std
mov
aaa
aaa
lret
aad
ljmp
rcl
repnz
or
iret
sti
and
out
repnz
not
xor
lret
cmp
idivb
shl
inc
lea
ljmp
jmp
xor
shr
not
in
fsubp
fcomp
xchg
test
int
nop
out
leave
enter
leave
fdiv
hlt
ror
shl
std
jmp
cmc
clc
sbb
jecxz
loopne
lea
xor
repnz
rcr
jmp
fdiv
lret
fyl2xp1
div
sti
fdivr
cmp
test
fldpi
cmp
xchg
int
out
std
aaa
cmpb
fucomip
out
cmp
aad
flds
not
repnz
rol
shl
cmp
int
sbb
sbb
aad
in
int3
stc
out
nop
lock
cmp
int3
out
div
out
repz
ret
fcomp
loopne
fiadds
testb
out
dec
loopne
jmp
repnz
cld
rol
add
loop
fdivrp
std
lock
in
icebp
lret
cmp
lock
fcmovnbe
or
shl
rcr
call
enter
fcmovnu
in
fstl
xlat
repz
ljmp
roll
ret
ret
out
out
ret
or
ret
add
xlat
int
fstp
rcr
ficoms
cmp
jg
test
jle
ljmp
in
loope
xlat
das
fsubrp
int
icebp
call
aas
test
fcomp
mov
aas
mov
hlt
in
xor
xabort
rcr
rcl
fcmovnbe
cld
test
cli
rcr
int3
mov
out
in
rorl
lret
shlb
fcomip
roll
fsubr
decb
nop
cld
lea
fstpt
cmp
shl
repnz
jmp
ljmp
in
xor
int
ljmp
into
cli
fstpt
fildl
test
fcmovnu
ret
loop
lret
loopne
out
lret
out
clc
in
lret
repz
out
ljmp
test
in
out
in
lock
loopne
jmp
cmp
shlb
lock
jmp
loop
in
fcmovnb
aad
cld
jecxz
jmp
repz
in
in
cmp
clc
sti
repnz
cld
rcr
jmp
clc
mov
fsubp
leave
in
in
and
sub
lret
hlt
cmp
cmp
cmp
int
not
div
std
addb
fists
in
xor
aaa
add
cmp
fsubr
add
jecxz
xchg
rolb
cld
icebp
cmp
ret
fmull
mov
rcl
out
repnz
xor
stc
shr
icebp
std
in
jmp
fdivr
shr
repz
fimull
xchg
ret
jmp
lock
or
aam
fadds
in
sti
xchg
mov
vpcomq
divb
aaa
lret
lret
or
cmc
loop
cmp
call
enter
rorb
cli
repz
in
leave
repz
fucom
aas
addb
ds
fsubr
xchg
das
ror
not
clc
int
ds
ds
loopne
xchg
repz
jmp
lea
cmc
aam
jmp
call
xlat
sar
aas
addl
std
xchg
xchg
cld
hlt
cmc
cmc
ffreep
loopne
clc
cld
out
ljmp
in
mov
nop
div
fnop
cmp
fadd
cmp
aas
cmp
cmc
out
shr
ret
ds
std
out
out
xchg
out
das
shll
out
fcom
in
out
in
cld
fabs
fldl2t
ret
stc
mov
ljmp
lret
idivl
sti
hlt
xor
xor
cmp
cmc
std
ret
rorb
ret
rorl
mov
mov
mov
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
inc
mov
repz
jle
add
rcl
cld
in
int3
fidivl
mul
in
jecxz
ret
cmc
in
mov
xchg
xchg
int3
das
ret
enter
int
sbb
shl
ds
lret
cld
stc
jecxz
cld
nop
in
in
ss
out
jmp
aam
out
idiv
cmp
mov
lret
xchg
xchg
in
aas
lret
aad
ljmp
jecxz
div
lock
sbb
fmuls
sub
out
cli
in
lock
fcomi
out
sti
roll
out
aad
out
sub
out
dec
in
xlat
repnz
lret
ljmp
shl
lds
loope
loop
xchg
or
xchg
iret
xlat
ret
sub
leave
int
shll
cmc
cmp
in
fsubp
int3
jecxz
ror
mov
xchg
out
in
ret
out
in
clc
aad
fcmove
iret
rolb
neg
lret
fmuls
lea
jmp
into
shl
out
cmc
loop
ffree
loopne
stc
leave
cli
int
icebp
sar
call
icebp
loop
int3
cs
cmp
fstp
in
fcmovnu
rcl
ret
jmp
fninit
in
mov
test
in
icebp
lret
xlat
loopne
xor
xlat
and
fld1
out
cmp
xchg
aas
leave
into
shl
cs
xor
aad
fucomp
sti
stc
loopne
stc
jmp
xchg
fldz
in
loope
in
test
ss
vpsrlq
test
hlt
xchg
cmp
fdivr
ret
jmp
call
rol
repnz
fidivrs
lock
cmc
fiadds
cli
aam
cli
std
lret
cmp
jmp
mov
lock
jmp
cmpl
repz
xor
lock
out
out
sti
cmpb
sti
iret
stc
fcmovnbe
in
clc
loope
mov
jmp
cmc
shr
leave
cmc
lock
std
cmp
fcompp
rolb
lock
ret
std
fsubr
in
int3
lret
shr
leave
jecxz
bnd
aad
in
xchg
fcmovnu
hlt
mov
fdivr
mov
jmp
repz
cmp
ret
roll
cld
xchg
enter
out
jecxz
xor
cmp
aaa
fcmovu
icebp
cmc
xor
test
xchg
jecxz
jecxz
mov
icebp
idivb
cmp
hlt
xlat
into
xchg
loope
shl
enter
xchg
mov
int3
aaa
fsub
repz
roll
ret
add
iret
xlat
xlat
into
xlat
fwait
in
mov
push
xchg
mov
jg
test
jle
adc
out
loope
into
repnz
lret
out
rcr
f2xm1
fistpll
fst
shl
roll
mov
test
out
shl
cmc
xchg
lock
cmc
stc
aaa
ss
cmp
jmp
ret
fiadds
in
iret
leave
clc
cmp
int
shl
cmp
test
ret
imul
std
orl
loope
cli
in
xor
cmp
sub
sti
aad
out
mov
mov
jmp
shl
clc
ljmp
iret
fmul
fcomp
cld
test
stc
xor
ljmp
fsubrp
ror
repnz
sar
enter
in
iret
fcomp
rolb
jmp
aam
rcl
sub
xlat
xlat
fidivs
cmp
sti
fadds
cmp
std
out
mov
fucomip
cmp
lret
clc
cmp
repz
loop
sar
xchg
out
test
test
in
jmp
repnz
clc
into
das
leave
leave
aam
cmp
add
addb
sti
jmp
sub
mov
mov
lret
iret
aam
lret
xor
fsubr
rcl
jecxz
icebp
rcr
mov
cmc
fcmovb
loop
test
fsubrp
aam
xor
call
ds
jmp
cmp
fucomp
cmp
decl
xchg
loope
out
fsub
ret
icebp
sarl
xor
cld
aam
sti
cmp
cmp
aam
repz
mov
std
not
iret
fisttps
clc
out
imul
cmc
jmp
sbb
repnz
into
not
out
testb
sti
fisttpl
out
xor
repz
shl
idivb
cmp
fisttpl
les
jmp
out
rcr
clc
clc
jmp
icebp
enter
into
jecxz
hlt
repz
xlat
idiv
std
xchg
out
jecxz
xchg
fbstp
aad
aaa
xlat
idiv
ds
aam
aas
icebp
cmc
sti
std
mov
stc
adcb
iret
iret
stc
repnz
iret
fucom
jecxz
fdiv
fdivr
in
in
cli
loopne
les
das
ret
stc
cmp
ljmp
hlt
repz
les
fildl
xor
ret
enter
cmp
xlat
frstpm(287
test
xlat
xlat
fld1
fisttpll
mov
mov
lock
lret
int3
idivl
hlt
rcl
cld
ljmp
test
clc
xchg
iret
repz
into
ljmp
xlat
sarb
and
clc
aas
ret
incl
lret
add
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
and
sub
sub
test
jle
mov
adc
leave
icebp
out
into
icebp
sti
stc
push
int
ret
cli
in
ljmp
int3
xor
loop
out
cmc
jecxz
call
hlt
shl
rcl
xchg
cld
ljmp
repnz
jmp
jecxz
leave
cmp
ds
call
fstp
mov
stc
loopne
mov
xchg
shr
iret
xor
int
aam
enter
sbb
rcl
aad
clc
out
out
out
in
xchg
sti
xlat
cmp
and
aam
ret
repz
cli
aas
jmp
jmp
in
in
sarl
std
jmp
fst
xchg
out
out
out
cli
into
xchg
jecxz
in
shl
cmp
shl
idivl
roll
ret
movl
addb
sti
clc
in
cmp
jmp
cmp
in
icebp
out
repz
cmc
test
jmp
ret
fsubp
out
xchg
ljmp
in
dec
and
div
in
fiaddl
fnclex
flds
in
out
xor
repnz
lret
cli
cmp
in
in
clc
jecxz
stc
aad
lret
out
into
shl
into
jmp
fsub
iret
cli
fdivr
cmp
loop
out
in
ror
cmp
rcr
int3
cmp
roll
ljmp
call
leave
aad
fldcw
iret
fcmovu
int
clc
clc
out
cmp
orb
xchg
ljmp
fcomi
iret
cmp
sarb
ret
rorb
jmp
hlt
out
xor
in
cld
repz
fnstcw
cmp
cmp
ret
fincstp
stc
sbb
in
stc
fistl
mov
stc
lret
jmp
iret
cli
int
jmp
sbb
fndisi(8087
cli
mov
ror
int3
repnz
int3
hlt
rol
aaa
xor
cld
aad
ret
xlat
cld
test
imul
mul
jecxz
mov
jecxz
leave
iret
fcmovbe
in
cmp
iret
std
hlt
fdiv
testb
sti
fnsetpm(287
cld
out
in
int
orb
cli
out
xor
xlat
sub
orl
call
repz
xchg
loop
idivl
leave
fsubrp
ds
shlb
out
fndisi(8087
ret
flds
int3
call
in
hlt
aaa
hlt
enter
lret
repz
rol
fcmovbe
call
jmp
sti
addb
decl
add
cli
sar
decl
ret
add
int
ret
int
movsb
inc
push
lret
push
cli
icebp
pusha
sub
jle
add
in
cli
int3
into
hlt
lret
out
fnstcw
test
in
cmc
ljmp
xchg
in
xlat
ror
enter
cmp
fdivr
fadds
mov
int3
in
out
sarl
int3
fstp
cmc
in
stc
fsub
loopne
xor
std
lret
xchg
xchg
or
in
sub
cmp
cmp
in
cld
sbb
incl
out
in
lret
fxch
lret
jmp
int3
cli
ret
rcr
in
xchg
sub
mov
rorl
fld1
call
xlat
enter
shl
cli
hlt
repz
clc
add
nop
call
int3
xlat
rcr
cli
repnz
fdivrl
aas
fsubp
call
mov
fmulp
icebp
xor
fucom
in
in
cmp
aad
rcr
testl
mov
into
out
xchg
loopne
lea
sub
icebp
fprem
repnz
loop
shl
cld
in
testl
jmp
aad
xor
jmp
ds
and
rorb
loope
lea
jmp
ret
aad
int3
aaa
shl
ss
shl
clc
mul
aad
out
mov
in
fimull
sub
lret
ljmp
test
rol
ds
stc
loope
jmp
repnz
xchg
enter
xor
shl
cmp
cmc
sar
xor
cli
out
into
mov
repnz
int
int
out
std
fstpt
sarb
clc
fsqrt
not
out
jmp
int3
mul
stc
leave
fsts
in
call
lret
out
xor
iret
ret
test
jmp
loop
roll
shl
out
fxch
out
enter
std
sub
ret
clc
stc
fxch
ljmp
sar
in
rcl
cmp
cli
ljmp
rcl
sub
lret
testb
jmp
xor
std
xor
shr
cmp
cld
repnz
enter
xchg
int
into
loop
jmp
aam
out
cmp
in
jecxz
out
lds
nop
mov
and
lea
cld
out
lock
lret
rcr
fiadds
ret
fcomi
in
test
out
fcmove
out
iret
repz
test
ljmp
in
addl
fxtract
ret
int3
ljmp
jmp
ret
int3
rcl
ret
fldl
xchg
jp
das
jg
test
jle
adc
sti
cmp
cmp
loope
fxam
leave
xchg
mov
xor
jmp
shl
cld
cmp
lret
rcl
in
out
orl
xor
shl
icebp
lret
enter
std
icebp
cmp
in
not
aas
test
ljmp
out
incl
int
out
out
ljmp
idivb
enter
lea
fmul
into
nop
int3
shlb
clc
int3
neg
cld
cmp
roll
loop
lret
shl
xlat
ljmp
int3
clc
out
faddp
repz
fadd
les
jmp
fistl
sub
repz
shl
fxch
ror
cmpl
clc
std
clc
mov
sbb
ljmp
ss
sarl
test
ret
in
loope
in
loope
jmp
fisttpll
int
into
repnz
call
shl
fadd
out
loopne
out
jmp
mul
xor
clc
sti
cmp
std
sar
fstp
loope
in
in
ret
test
fcmovbe
xchg
jmp
aam
loope
out
int
out
cmp
jmp
jecxz
xor
lret
out
clc
rorl
clc
int3
cli
out
loopne
aad
in
jecxz
loop
leave
loope
out
lret
sar
nop
out
enter
xor
iret
cmc
fiadds
out
xchg
in
and
mov
in
int3
lds
sti
shl
clc
xlat
loopne
ror
idivl
rol
flds
in
jmp
xchg
mov
fbstp
rol
in
repnz
xorb
int
test
ret
adc
test
lock
jmp
in
aam
xor
shr
rol
mov
mov
neg
jecxz
out
ffree
lret
clc
out
in
cmp
xor
addl
cmp
jmp
in
loopne
test
rcr
out
lock
ljmp
and
call
rcll
idivl
sti
ror
ljmp
cmc
aas
rorb
into
mov
jmp
icebp
xor
lret
xlat
out
out
cli
cmp
cmp
rcr
loopne
cmp
fsub
leave
mov
movb
and
repz
xlat
std
cli
aad
idivb
aaa
rcl
xchg
loope
xchg
mov
ret
mov
in
test
xlat
cmp
std
add
fxam
pop
add
jmp
fadd
aam
fst
fcoms
sbb
jg
punpcklwd
xor
jg
test
jle
decl
shr
aam
xor
sub
sarl
fbstp
clc
loopne
call
in
lock
in
repnz
sar
int3
rcr
sbb
out
stc
xor
lock
adc
fcomp
repz
hlt
loop
hlt
rcl
sarl
idiv
hlt
loop
lock
div
fiadds
sti
xchg
loope
repnz
out
in
sub
xor
lock
loopne
xlat
loop
flds
fadds
nop
mov
shlb
cmp
int3
fucom
addb
jmp
int3
movl
enter
xor
cmp
leave
rcr
repnz
rol
repz
fstp
std
call
leave
ror
cs
stc
icebp
in
ljmp
cld
repnz
cld
xchg
repnz
in
sar
cmc
out
ljmp
stc
std
lret
out
stc
adcb
lock
repnz
out
icebp
repz
iret
stc
lock
movb
xchg
rclb
in
xor
rcr
add
std
call
mov
in
cld
test
cld
icebp
mov
in
bnd
fcmovnu
cmc
xchg
stc
test
loop
xchg
lret
xchg
mov
icebp
aad
das
cmc
jmp
ret
sar
aas
fcos
mov
xchg
in
repz
xor
rcr
fldl
sti
xlat
shl
ret
mov
sbb
ret
iret
loope
jmp
xor
cmp
ds
aam
aas
icebp
fadd
xor
xchg
cld
mov
xchg
enter
shl
out
sarl
div
ffree
aad
in
std
into
call
jmp
fsub
ss
xor
lret
adc
or
sti
jmp
stc
std
cmp
jmp
loop
jecxz
loop
xor
iret
fcmovne
out
aad
out
in
stc
xlat
cld
enter
mov
in
orb
enter
sti
fdivp
int3
int3
xlat
out
ljmp
mov
ficoms
xor
fdivl
int
cmp
in
out
ret
aam
hlt
aad
mov
cli
in
ljmp
in
xor
fstpt
lret
jmp
ror
fadds
out
mov
call
icebp
ret
sub
stc
cmp
shl
repnz
call
nop
mov
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
test
fiaddl
jle
repnz
in
out
fsubr
cmp
fmul
aam
sti
out
call
sbb
in
enter
in
loopne
hlt
jecxz
xor
int
out
repz
lock
aas
loopne
std
in
fucomip
loope
xchg
mov
into
int3
lock
out
aad
in
clc
cmp
sti
loope
sti
xlat
lds
xchg
pushl
fdivrl
xor
ret
test
fimuls
leave
test
jecxz
in
aam
cmp
cmp
aad
ret
leave
xor
stc
fucomp
test
out
int
xchg
repz
out
stc
jmp
into
in
jecxz
jecxz
cmp
in
fsubrp
xchg
or
into
divb
stc
xor
enter
repz
and
loop
ffree
loop
leave
xchg
lea
in
call
xor
sar
xchg
repz
test
xchg
icebp
jmp
faddp
rol
xor
cmp
cmp
fsub
fadds
sub
xchg
xorb
in
jmp
cmp
shr
in
or
aas
ret
xchg
jecxz
out
out
loop
aaa
xlat
lock
cmp
shl
int
xlat
xlat
xlat
jecxz
ds
in
and
mov
mov
xlat
sarb
shl
ljmp
into
cmp
std
aad
in
lret
loop
into
icebp
xchg
in
aad
lret
iret
in
neg
lret
test
aas
flds
out
or
call
lret
lock
out
cmp
test
out
xchg
orb
lock
cld
mov
cli
jmp
in
loope
testb
jecxz
fucomi
in
repnz
stc
ret
cmp
in
faddp
rcl
cmp
fadds
out
les
jmp
clc
not
cmp
in
loope
xlat
aam
addb
test
mov
shr
fyl2xp1
in
int3
idiv
in
fcom
out
shl
call
add
into
enter
in
clc
cmp
aaa
int3
in
fmul
clc
fcomip
fcmovbe
fcomip
sub
mov
lret
mov
sbb
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
sti
lds
fidivrs
aaa
jg
fiaddl
jle
test
xchg
in
in
aad
ret
xor
out
shr
cmp
inc
loope
repz
stc
cld
out
fmul
out
xchg
lret
fdiv
cmp
sub
stc
cmp
aam
test
nop
enter
aam
mov
sub
enter
fdivrp
cmc
cmp
cld
out
out
imul
aam
test
xchg
lea
aaa
out
hlt
not
ljmp
fadd
faddl
out
out
loope
aad
in
aam
into
into
out
leave
ror
cmp
leave
mov
mov
das
xlat
rol
fcmovbe
icebp
repz
repnz
fcmovu
cli
call
loopne
into
fdivr
mov
mov
aam
cmc
cmp
out
iret
loopne
out
fiadds
aam
test
out
in
repnz
out
vpsrlw
cmp
cmc
jmp
repnz
std
xlat
jecxz
addb
icebp
mov
hlt
sti
in
xor
fsub
in
shl
xlat
repz
in
and
ret
loope
sub
out
repnz
in
fdiv
rolb
stc
fsin
fcmovbe
loopne
mov
std
loop
mov
clc
sub
iret
out
cld
lock
in
leave
rol
ret
out
int
xchg
out
in
test
lret
fmul
jmp
cmc
lret
aad
repz
fcomip
decl
cli
mov
fiadds
out
in
out
bnd
fcomi
hlt
std
repnz
decb
rclb
xor
repz
and
shl
fildl
loop
jmp
lea
fcomi
enter
cli
cmp
icebp
in
aad
mov
and
iret
in
aad
shlb
hlt
in
ds
imul
lock
lret
clc
mov
mov
cli
loop
out
jmp
loop
fdivs
cmp
cld
aad
loopne
aam
filds
sar
fcomp
mov
icebp
loop
loop
cmc
xor
hlt
cmp
iret
cmp
jmp
std
fstp
ret
filds
cli
out
rcl
call
out
iret
in
imul
int3
cmp
std
faddp
fsub
aad
push
fucomi
test
inc
or
test
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
pusha
insb
mov
add
test
std
xchg
out
jmp
iret
test
jmp
out
aas
loop
into
test
test
jmp
mov
sub
out
vshufps
shr
in
fsubr
shl
rcl
out
in
sbb
fcmove
lret
xchg
shl
ror
int
aaa
enter
xlat
ret
cli
addb
frndint
jmp
mov
ljmp
idiv
cmp
test
xchg
and
cli
mov
mov
icebp
vpsubsw
cmc
in
shr
icebp
repz
fcompp
clc
sti
out
lret
xlat
in
jmp
iret
mov
les
int
out
cmp
sti
cld
fsubrp
cmp
ret
mov
lret
jecxz
cmp
leave
iret
aaa
fucomp
test
loope
loopne
repnz
sbb
in
xchg
loope
mov
loop
divl
rcl
sar
rcl
sar
aam
sar
ret
loope
lock
mov
adcl
xor
int3
repz
cmp
in
addl
into
shrl
xor
out
hlt
not
fcomip
in
fcmovnbe
out
and
clc
out
int3
std
mov
xor
into
xor
out
stc
xor
fstp
sar
shl
out
std
ds
out
in
fucom
rolb
shll
cmc
xor
int
cmp
fdivr
add
repnz
fld1
mov
test
loopne
nop
shl
out
divl
addb
mov
in
clc
jmp
sti
cli
lock
in
fcomip
or
stc
xlat
xor
int
loopne
aad
fstpt
cmc
repnz
clc
faddl
ror
ret
rol
fcomp
fcomip
ss
fsubrp
ret
cmp
rcl
ret
jmp
movb
ljmp
fsincos
aaa
test
fsubr
repz
repz
test
jecxz
out
in
int
mov
jmp
rcl
cmp
sar
cmp
cld
stc
loop
call
idiv
out
fmul
out
loop
xchg
bnd
into
idiv
leave
repz
loopne
clc
jmp
nop
lock
and
loope
in
aam
loopne
out
ss
ret
imul
mov
movzwl
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
idivb
cmp
fiaddl
jle
cld
fmulp
cli
xchg
in
enter
int3
loope
in
in
in
xlat
neg
cmp
ret
xlat
ret
cmc
sti
loopne
xchg
addl
cli
lret
cmp
repz
out
cmp
out
repnz
loop
cld
aad
mov
in
loopne
cld
mov
ss
jmp
fucomi
out
ret
fprem
decb
sbb
icebp
xor
xor
clc
in
ds
in
cld
xlat
sar
ret
in
clc
ror
mov
int3
cmc
xor
std
fnsave
in
xlat
cmp
test
loope
call
in
jmp
xchg
loopne
rcll
cmp
stc
cmp
lret
in
aad
ds
jecxz
test
aam
and
mov
jmp
loope
call
fsubr
cmp
repnz
mov
int3
in
mov
and
shr
cmc
xlat
repz
aas
cmc
idivb
shl
std
cli
out
ds
in
fdivp
fists
ror
icebp
into
int3
in
out
fdivrl
ffreep
sbb
aad
jmp
out
not
loop
xlat
fsubr
cs
cmp
ds
test
shl
ljmp
int
iret
cli
xor
lret
xor
sti
int3
aas
cmpl
movl
test
int3
jecxz
enter
sar
not
cmp
repz
inc
decl
jmp
jecxz
loop
int
dec
repnz
icebp
cmp
sar
rol
lret
out
jmp
les
int3
bnd
cmc
shl
cmp
cmp
out
xchg
incl
stc
out
lret
int
out
loopne
xlat
leave
sarb
jmp
cmp
fcmovb
ret
mov
fsubrp
mov
ret
lock
lock
jecxz
test
sar
fcom
in
loop,pt
xchg
out
lret
loopne
xchg
repz
imull
xor
repz
cmp
int
lock
call
mov
lock
not
xor
cld
cmp
cmp
repnz
out
flds
test
out
cmp
loope
in
loopne
flds
test
inc
ja
add
cmp
jmp
ror
rcr
ror
js
cmp
in
inc
inc
into
jg,pt
fiaddl
jle
loope
ret
cld
call
icebp
addb
sub
in
in
cmp
test
in
repz
repz
fcmovnbe
int3
int
rolb
repnz
fmul
cmc
sti
hlt
xchg
test
fcmovb
in
loopne
lret
xchg
in
jmp
hlt
fdiv
in
xor
hlt
cld
out
aad
ftst
cmc
in
mov
mov
fcoml
xor
out
iret
clc
cld
cld
cmp
aaa
cmp
aam
loop
mov
int3
lock
in
mov
xor
aam
icebp
loope
xor
cmp
not
ret
test
mov
and
fcmovnu
shr
roll
out
iret
std
repnz
clc
leave
jecxz
fsub
in
ret
fidivrl
cmp
fnstsw
in
out
shr
in
aad
icebp
fmull
out
mov
out
xor
push
lret
jecxz
repz
mov
in
in
xchg
into
call
aaa
fsub
rcl
leave
fucomi
incb
fucom
shl
xchg
cmc
lret
loopne
loop
nop
jmp
ror
aad
neg
ljmp
repz
aad
mov
into
aam
hlt
xor
cmp
aaa
cmp
test
lock
fcmovu
loope
sti
or
ljmp
enter
aaa
ds
loopne
fsub
cli
cld
fsub
aam
xchg
in
test
out
sarl
out
int
ds
aam
test
mov
cld
jecxz
mov
jmp
mov
mov
repnz
ss
lret
ret
loope
icebp
int3
call
in
fcomip
in
out
jecxz
repz
in
int
testl
std
incb
cmc
nop
repz
lret
cld
iret
hlt
shr
fadds
std
fidivrl
fiadds
ljmp
icebp
aaa
in
out
in
cmp
neg
incb
leave
out
xlat
lea
sub
in
cmp
sarl
icebp
jecxz
fdivrp
repz
jecxz
ret
jmp
loop
in
dec
enter
leave
lds
repnz
movl
or
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
jbe
lods
stos
sarb
add
sti
loop
sti
xchg
call
cli
in
fcomi
in
repnz
in
clc
jmp
fidivrl
addl
nop
xchg
fsub
jmp
xor
clc
std
cmp
int3
icebp
fadd
clc
std
out
addl
jmp
mov
imul
into
in
xor
jmp
jecxz
fdivr
rcl
jecxz
cmc
fucom
cld
xchg
mov
iret
loope
xor
fidivrs
jecxz,pt
ds
xor
enter
lret
ficoms
xor
loope
call
xor
rol
loop
loope
sar
xlat
faddl
sti
xchg
mov
int
in
loope
hlt
test
cli
cmp
neg
in
int3
int
lock
nop
jmp
int
shl
aam
sar
in
aam
jecxz
aam
clc
lret
xchg
loopne
repz
call
jmp
sti
rolb
hlt
clc
fsubrp
call
out
in
shrb
xor
stc
das
ss
and
cmp
ljmp
rorb
aad
cmp
das
cli
aaa
cmp
cld
test
test
call
mov
sub
out
repz
cli
ret
cmp
cmc
stc
loopne
cmp
ret
fdivp
in
lret
enter
mov
jmp
fcmovnbe
rcl
aad
or
shl
std
jmp
sub
jmp
out
xchg
adc
fld
enter
clc
stc
test
addl
in
mov
addl
fcom
into
sti
fcompp
cmp
rcr
clc
imul
loop
into
or
xor
imul
clc
fldl2t
sarb
sarl
loop
test
sti
call
mov
rolb
ss
std
fnstcw
ret
idivl
mov
repnz
fcmovnbe
fsqrt
lea
xor
aaa
int3
sti
xor
lret
cmp
bnd
aad
int3
ret
or
ffreep
out
jecxz
imul
sarb
loopne
jecxz
loop
shr
ret
sbb
repnz
ror
in
jecxz
xor
aad
add
movl
cmp
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
cwtl
push
ret
jg
fiaddl
jle
cmc
cmp
cmc
xor
out
fimuls
in
mov
repnz
aaa
ss
not
jmp
cmp
lock
sar
shl
out
jecxz
loopne
lret
in
out
in
xchg
nop
loope
lock
xor
cmp
cli
xor
sar
fmuls
fdivr
out
out
xchg
and
shl
cmc
cmp
neg
lret
cmp
shr
xchg
xchg
call
mov
in
xor
shr
xor
xor
fisttps
stc
lret
xchg
orb
cmc
fcomi
cmp
out
fldpi
repnz
std
filds
cld
lret
pushl
icebp
std
call
cld
int3
fdiv
aam
loop
fadd
cmc
jmp
jmp
lret
call
in
hlt
aaa
cmp
addb
cmc
shr
call
fcmovne
mov
icebp
jecxz
das
xor
mov
rcl
hlt
add
and
addb
int3
adc
sar
in
in
xor
sarb
cmp
faddl
shl
mov
fiadds
int
cmc
xor
sti
fdivp
loope
repnz
aas
out
vpaddd
ljmp
test
int
cs
ret
cld
cmp
xor
cmp
in
fmull
ljmp
in
lock
cmp
std
shl
clc
std
clc
xchg
call
icebp
xchg
into
out
in
neg
cmp
jmp
in
cmp
aaa
out
loopne
ret
cld
loopne
lret
filds
xor
lock
aad
ror
loop
stc
cli
repz
aam
cmp
cld
cmc
sar
ljmp
hlt
fcomp
vmovq
loopne
loope
hlt
in
iret
lret
ljmp
std
loop
rol
xlat
ret
loop
stc
fmulp
out
hlt
xchg
shl
shrb
aad
xor
in
div
xor
hlt
fcmovb
testl
lret
xchg
in
aad
repnz
cmp
cmc
shll
xor
xorb
repnz
mov
jmp
nop
int3
repnz
shl
jmp
fcom
rcr
fstp
fnstsw
fmull
mov
lds
fiaddl
jle
cmp
out
dec
in
shl
icebp
fnstcw
sbb
xchg
mov
lret
fsubrp
loopne
cs
shl
cli
jmp
call
test
idiv
cmc
ljmp
into
or
rcl
sti
cmp
cmc
leave
loop
adc
xchg
ret
xor
sbb
loop
fsubrp
hlt
test
out
in
enter
fdivr
cmp
rol
rcr
ret
test
mul
orl
repnz
rcr
std
ljmp
xchg
rorb
out
aas
repnz
jecxz
cld
out
aas
rolb
stc
sar
mov
jmp
mov
in
xchg
icebp
lock
aaa
in
cmp
jmp
lret
jmp
incb
fstp
in
jmp
leave
xchg
out
out
cmc
lret
lock
imul
rol
stc
sti
xchg
fadd
or
cld
int
lret
fiadds
ror
icebp
xor
loope
cmp
hlt
fcom
ljmp
lock
in
cmc
lret
ss
cmp
repnz
icebp
cld
repz
enter
jmp
test
lock
cmp
enter
clc
fsub
cmp
neg
xchg
ljmp
out
out
aaa
in
lret
rcl
shl
cli
cmp
cld
loop
fmuls
repz
in
into
aam
fcom
cmp
int
aam
cld
aad
ror
clc
mov
out
mov
enter
xor
cs
rcr
and
aad
fld
fldl2e
out
in
out
cli
roll
lret
ror
repnz
ret
shl
icebp
fsubrp
aad
xlat
loopne,pt
jmp
nop
int
mul
cmp
into
jmp
shl
fneni(8087
shl
div
jmp
les
int
out
xchg
out
icebp
jecxz
rcl
std
ror
out
cld
sti
in
out
xor
leave
orb
rol
ret
cmp
xlat
aam
out
aas
fsubp
xor
test
xchg
fnclex
out
std
test
lret
mov
repz
lret
das
iret
leave
fcmovne
cmp
lock
fsub
repz
clc
loopne
mov
fdivp
fsub
jmp
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
push
aaa
pusha
mov
add
in
xor
loop
ror
int3
xor
fst
les
fmulp
lea
in
ror
fnstenv
cmp
aad
fdiv
clc
xlat
mov
nop
out
cli
in
out
aaa
in
fisubrl
repz
aam
aad
hlt
loopne
stc
vpxor
in
mov
out
into
cli
lret
shl
cli
std
repnz
les
fldl
shl
out
das
xor
aam
shl
loope
xchg
and
call
nop
shr
fnstcw
sti
stc
fnstsw
jmp
rolb
fsub
ljmp
xchg
mov
xchg
lds
leave
xor
in
rcl
jecxz
test
aam
clc
addb
fcomi
sub
into
icebp
into
in
xor
div
idiv
fldl
loopne
mov
jmp
repz
aaa
jmp
repnz
rcr
aas
lock
ljmp
int3
xchg
lea
xor
cli
ss
iret
aaa
in
aaa
in
jmp
into
aam
cli
fmul
les
xchg
aam
icebp
ret
in
fucomi
lret
lret
cmp
cli
test
cld
shr
in
aad
add
loop
out
fisttpll
mul
in
out
in
in
leave
cmp
stc
fcmovb
loope
not
hlt
mov
aam
xlat
iret
fxch
lock
cmp
in
fucomi
rcr
aad
sti
jecxz
shr
loopne
clc
addl
int3
rcl
fsin
out
ffree
shr
test
cmp
call
fcomp
out
ss
shl
icebp
sar
cli
fmul
aam
loopne
repz
xchg
aam
loope
adc
sub
loop
aam
mov
leave
cmp
repz
fst
aad
rcl
loope
ljmp
mov
shl
into
int3
cld
cmp
cmp
loope
clc
aas
mov
jmp
fsubp
in
sar
mov
loope
imul
xor
xlat
in
stc
fcmovb
std
xlat
repz
out
sti
std
xlat
mov
addl
iret
cmc
loop
out
fcomip
sarb
test
int3
out
leave
stc
mov
fdivl
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
xor
dec
lret
jg
fiaddl
jle
out
out
or
vpmuludq
loope
in
cld
neg
xchg
movb
xchg
cmp
sbb
shl
rcr
cmp
iret
leave
loopne
repnz
addl
mov
out
int3
fcmovnbe
cmp
cmp
roll
jecxz
in
fimuls
iret
ret
into
sti
aam
leave
out
xor
int3
in
icebp
loop
ljmp
rcl
jmp
in
out
jmp
sar
aad
movl
repnz
jmp
out
clc
xor
fsub
cmc
xor
or
in
xchg
sbb
lret
test
movb
xlat
sarb
fdiv
cmp
aad
fsub
test
aam
cld
jecxz
in
test
cli
cmp
xor
lret
out
ss
cmp
ret
rol
mov
int3
jecxz
leave
fcmovnu
out
xchg
xchg
vshufps
ss
fprem1
fdivr
out
loope
mov
sti
iret
iret
repnz
xor
xor
fnstenv
sarl
fdivp
out
out
mov
xchg
xchg
loopne
in
std
xchg
in
sub
in
jmp
enter
rcl
rol
out
and
stc
int3
mov
repnz
jmp
rcl
in
cmp
iret
fidivl
shl
call
mov
repz
fucomip
cli
lret
loope
fsubrp
nop
in
cmp
rolb
into
clc
clc
xlat
cmp
rcl
int
call
leave
int3
xlat
shl
call
or
fmulp
sar
rcr
call
in
ljmp
stc
lock
leave
cld
sbb
cmp
test
rcr
ffreep
ljmp
in
das
lock
into
cmp
repz
fildl
jmp
enter
hlt
mov
ret
cmp
int3
in
fsubr
repnz
rcl
fnstsw
repz
flds
mov
xor
icebp
xlat
fmul
cld
xlat
roll
test
lret
fucomi
repnz
test
ss
fcomp
iret
into
xor
int3
test
vshufps
fldl
movl
jmp
rcl
ret
fucomp
insb
fstps
arpl
jg
fiaddl
jle
lret
repz
xor
hlt
into
div
icebp
repnz
idiv
xor
inc
aam
cld
iret
jmp
mov
les
call
adc
enter
hlt
enter
mov
loopne
cmp
iret
xor
aad
cli
shl
frndint
out
jecxz
loopne
call
out
fimuls
in
repz
cmp
xor
lret
test
aas
repnz
mov
fmul
repz
in
in
aaa
out
ds
loop
cli
aad
out
rol
cld
jecxz
cld
jmp
in
jmp
repz
fcom
into
xor
cmp
leave
not
cmp
fst
sar
movl
out
push
ret
das
rcl
aad
lock
out
into
sar
cld
loop
rcr
jmp
sti
ljmp
sub
cmp
imul
fsin
shlb
fadd
jecxz
leave
ret
fsub
filds
out
int
loop
out
aad
int3
cmp
sti
clc
cmc
fildl
out
mov
out
cmp
aam
iret
xlat
lret
cmc
jmp
aas
shl
std
int3
bnd
in
in
lret
lock
cmp
out
ss
fdivrl
fcmovnbe
out
aad
int3
mov
call
aad
shll
aam
hlt
int3
int
sti
out
cli
in
int3
lds
xchg
lret
ret
int
out
in
divb
rcr
fildl
mov
cli
mov
xchg
subb
leave
shr
call
lock
out
enter
test
incl
cmp
fnsave
hlt
jmp
filds
out
aad
cmpb
lret
fcmovne
mov
sti
call
ds
cld
ret
mul
fcomp
cli
mov
int
fptan
xchg
rcr
int3
clc
lret
cmp
lock
int3
cmp
lret
loop
out
cld
in
enter
xchg
dec
out
out
cmc
jecxz
ss
in
into
cmp
stc
fdiv
out
out
in
jmp
int
f2xm1
cli
cmp
iret
out
cld
cli
in
lock
fdivrp
loopne
xchg
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
idivb
fcmove
nop
mov
lock
int
ret
clc
out
lock
in
and
aam
fucomip
clc
mov
mov
cli
jecxz
into
out
out
jmp
xor
cmp
iret
into
jmp
in
enter
out
loope
loop
nop
xchg
cs
ss
aaa
out
xlat
repnz
ret
clc
aam
cld
out
jecxz
xchg
jmp
mov
xor
icebp
cmp
out
aaa
rcr
lret
idivl
sti
icebp
enter
loope
imul
orb
into
hlt
cmp
ror
call
cmpb
repz
mov
add
in
rcll
int
int3
cli
lds
cmp
clc
cmp
fcomip
xchg
enter
jecxz
shl
call
out
repnz
cmp
aam
sti
aad
lret
lret
mov
out
int
xchg
xchg
jmp
fcmovnbe
xlat
clc
not
aad
fxtract
std
cmc
enter
mov
adcl
cmp
stc
aam
fsubrp
out
ret
jmp
fmul
mov
adc
fst
xor
xlat
out
ljmp
clc
cmp
fsub
cmc
out
loopne
ret
mov
xchg
jecxz
repnz
fcmovne
out
std
fmulp
out
repz
aas
cmc
sar
fimull
mov
in
in
xchg
not
xor
out
cmp
fidivrl
sub
fnstsw
loopne
in
cli
ljmp
in
in
sub
fcomp
in
jmp
loope
test
stc
idiv
mov
sti
int3
into
test
loop
out
shr
iret
cmc
hlt
into
int3
fmulp
std
rol
fmuls
fnstsw
xor
loope
in
das
xlat
xor
out
fidivl
hlt
fnstcw
in
xlat
roll
filds
test
xchg
out
cs
ljmp
cmp
out
sarl
clc
lds
call
div
hlt
stc
enter
in
lret
cmp
in
fiadds
icebp
loopne
shr
ret
ljmp
xor
fdivrl
hlt
cli
clc
ds
shl
repz
ret
in
clc
loope
adcb
aam
lds
std
repz
ja
add
je
add
rcl
aad
loop
pop
sbb
push
pop
sarl
fiaddl
jle
loopne
icebp
testl
hlt
repnz
imul
fcmovbe
xlat
leave
sti
in
aas
sti
iret
cmc
fld
cmp
ds
xchg
jmp
mov
cmc
in
int3
roll
fcomp
aad
call
test
addb
leave
rcr
fldl2e
aam
loope
idiv
aad
ljmp
xchg
ljmp
hlt
repz
jmp
xlat
aam
ret
cmc
icebp
loopne
in
incb
repnz
fcmove
cmp
cmp
ret
lock
jmp
and
stc
sub
int3
int3
cmp
rcl
out
cmp
cmp
fcmovnb
fldpi
clc
and
jecxz
ljmp
ds
sar
aam
mov
leave
iret
clc
test
fucomp
mov
int
stc
aas
rcr
add
fidivrl
testl
shr
xor
aaa
leave
fcmovu
cmp
fucom
out
in
loopne
mov
repz
xchg
xchg
xchg
out
lret
shl
shr
fcmovu
int3
aam
cmp
sti
enter
orl
fsub
ss
out
les
leave
cmp
into
out
ds
loope
hlt
fsub
jmp
mov
addl
loope
int
out
in
shr
cmp
repz
xlat
ljmp
icebp
in
lock
std
jmp
loop
lret
cmp
fmul
cli
lret
cmp
in
rcr
clc
roll
jecxz
ljmp
aaa
jmp
lds
aad
loopne
cld
repz
loop
aas
lds
xchg
out
xor
ljmp
ljmp
lock
cli
loopne
cld
cli
fisttpl
xchg
lret
xor
out
iret
ret
ds
sar
repz
cld
into
nop
jmp
xor
xlat
ret
cld
not
idiv
loope
lock
xor
rol
loop
mov
leave
call
loop
ret
cli
ret
aad
cmc
xlat
cmp
iret
fstp
cmc
clc
roll
out
test
leave
or
sar
aad
out
icebp
aad
cmc
loopne
pop
lock
jmp
enter
fstp
int
inc
dec
xorl
push
mov
jg
fiaddl
jle
in
loope
loope
in
in
ljmp
jmp
mov
int
out
xlat
sti
ds
enter
cmp
loopne
ret
cmp
loop
int
out
iret
das
cs
shlb
ss
out
in
lret
aas
into
shl
adc
out
ljmp
call
rcl
clc
in
enter
cmp
sbb
aad
test
std
mov
and
xchg
mov
aam
int3
xor
fucomip
aas
fptan
jecxz
clc
cmp
hlt
xlat
mov
out
std
jmp
lret
xor
out
aam
stc
fcmove
jecxz
aaa
icebp
jmp
ret
fdecstp
loop
in
fisttps
in
cli
shlb
imul
cmc
aaa
hlt
iret
lock
ds
roll
frndint
int3
shr
cmc
mov
int3
repz
jmp
aas
bnd
shl
in
imul
enter
loope
lret
icebp
int3
adcl
cs
xorb
aas
test
rcr
xchg
xchg
test
lret
aam
call
icebp
rcr
sti
out
aad
lret
cmp
jmp
ss
call
not
out
std
loopne
xlat
std
xlat
shr
fsub
int
jmp
in
mov
ror
ljmp
add
rcr
fcmovu
repz
notl
xchg
loop
iret
test
cli
leave
jmp
ret
out
xchg
clc
rol
mov
in
iret
leave
loope
decb
int
idiv
ffreep
jmp
aas
rcl
fmul
fimuls
lret
out
lret
mov
int
jecxz
into
aad
int3
cmp
sar
fcmovbe
stc
xchg
fisttpll
xchg
ss
hlt
cli
into
std
fcmovbe
jecxz
rcl
idiv
leave
loopne
add
in
faddl
clc
rcl
in
repz
cli
cmp
aas
stc
cmp
lds
repnz
out
fildll
repz
int
fmul
aas
cmp
rcl
repz
jecxz
lret
in
mov
xchg
enter
clc
xor
iret
shr
hlt
shr
in
cld
sbb
dec
fiadds
jecxz
in
out
mov
out
lock
jmp
movl
ja
movl
mov
jmp
mov
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
jne
mov
jle
add
cmp
rcl
cmp
shl
aad
fimull
addl
into
jmp
rcr
int3
out
sbb
shl
aad
fsubp
int3
loope
shr
cs
leave
fcmovnbe
in
into
sar
cmc
fucomi
add
xchg
mov
loope
xchg
repnz
icebp
xor
xlat
ss
aas
idiv
sar
cmp
rcr
test
out
in
mov
stc
in
xchg
rclb
clc
ror
int
or
add
fmul
mov
leave
loop
fsubp
mov
xchg
addl
cmc
shr
fistpll
loop
stc
aad
fstp
aam
addb
out
lock
jmp
fcomi
out
loop
shr
cmp
addl
xor
lret
bnd
cmc
cmp
rol
test
sbb
fldl2e
lret
icebp
ljmp
loop
fcomp
lret
rcl
fdivrs
leave
les
into
in
repz
das
out
stc
cmc
jecxz
fstp
notrack
fcmovnb
int3
aaa
ret
fiadds
xchg
fsubrp
cld
test
jmp
out
repnz
in
test
cmpl
in
fsubp
popl
cli
icebp
int3
fincstp
int3
fildl
test
loopne
cmp
std
std
xchg
sub
lret
aam
xor
cmp
aas
shl
test
in
loopne
test
int
xchg
call
hlt
std
stc
aam
aaa
fdivr
cmc
hlt
ffree
and
ret
xchg
loope
cmp
cmp
ds
ffreep
or
mov
adcb
iret
jecxz
xor
repz
cmp
cmp
loope
aas
test
mov
cli
out
in
repnz
in
out
out
ss
call
out
xor
cmp
loop
jmp
jmp
int3
in
xor
enter
cmp
fcomi
out
fchs
lret
xor
in
lea
repz
int
out
jmp
rcl
ffree
out
cld
repz
lret
mov
jmp
fucomip
xor
ret
rolb
add
and
add
clc
jmp
aam
mov
int
rol
repnz
mov
fdivrs
fiaddl
jle
fisubrl
ror
lret
repz
aam
test
jmp
out
rcl
test
shrb
ret
rol
fdivrs
fst
xor
icebp
and
cli
cli
nop
sti
enter
test
in
int
int
int
int3
ds
test
aas
jmp
xchg
test
cmp
jmp
cmp
rol
loope
out
fmul
fcmove
jecxz
icebp
or
xchg
mov
not
cmp
sti
fcom
in
fsubrp
cld
lret
loop
cld
incb
mov
filds
cmc
out
jmp
aad
test
loope
and
out
into
test
xor
test
sti
in
clc
fcmovb
ret
cld
xchg
std
mov
std
jmp
mov
out
sti
fcmovne
cmp
sarb
iret
int
loopne
cmp
jmp
aam
jmp
sub
ljmp
loop
jmp
roll
loopne
mov
mov
mov
leave
fcmovbe
jmp
int3
cmp
test
test
mov
xchg
jmp
in
xlat
enter
fiadds
xchg
out
in
fcomp
leave
xchg
mov
call
leave
aam
sar
rcl
loopne
sbb
sar
and
in
jmp
jecxz
fsubr
lret
cld
out
sarl
out
rol
out
call
xchg
lret
shl
jmp
iret
test
test
lock
movl
repnz
xor
lret
cmp
ds
cmp
repnz
fmulp
sti
clc
ljmp
ljmp
cmp
loope
fistpll
vpsrld
filds
rorl
iret
aam
jmp
cmp
lock
cmc
not
out
in
loope
out
mov
test
shl
clc
aam
repz
out
cli
in
std
out
fucom
fldl
fsubr
iret
call
subl
out
jmp
loopne
and
push
mov
mov
out
loopne
in
xchg
add
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
lcall
jle
add
xor
repz
lret
ror
stc
enter
rol
iret
rolb
enter
xchg
mov
xor
xor
int
xor
shl
cld
ret
ret
xor
or
xchg
cs
repnz
aad
repz
repz
inc
stc
div
loopne
int3
orb
int
out
clc
repz
roll
lds
in
fisttpll
out
loope
ror
cmp
hlt
in
into
loope
shl
ret
xchg
test
test
rol
fdivr
ror
rolb
out
in
lret
out
out
ret
fisttpll
lret
loop
fcmovb
cmp
shl
fnstcw
cli
fxch
mov
in
and
out
xlat
fldz
xor
shl
rcr
aas
fdiv
rol
test
leave
in
fucom
int3
loopne
enter
jmp
xor
enter
cmp
idivb
xchg
in
out
iret
in
xor
ror
out
cmp
shr
sbb
test
iret
ret
icebp
shl
jmp
iret
repz
enter
int3
repnz
jmp
in
std
into
mov
ret
repnz
out
iret
cmp
out
loope
std
icebp
mul
out
mov
movb
ljmp
xlat
out
aaa
cmc
cmp
iret
fcomp
loop
xchg
faddp
xor
in
ljmp
ss
aas
clc
std
dec
cld
aad
neg
leave
stc
fld
mov
lea
mov
lock
out
hlt
in
fnstcw
fcmovnu
xor
sti
ret
cli
xor
nop
mov
jmp
out
repz
fdiv
aad
cli
xlat
rcr
xlat
sti
leave
test
mov
inc
in
lret
in
cld
std
sarb
cmp
call
in
cmp
loopne
mov
loope
loope
ss
aam
out
enter
ss
jecxz
out
fcomip
lret
in
or
mov
xor
jecxz
cmp
out
cmp
sar
clc
cli
shl
fucomp
decl
xchg
mov
mov
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
xchg
repz
jg
fiaddl
jle
hlt
aam
add
lret
shl
jmp
lock
xchg
in
jecxz
std
into
call
iret
sub
xlat
aad
lret
cmp
jmp
testl
jecxz
out
icebp
popl
aam
shr
fcmove
clc
cmp
clc
mul
clc
mov
enter
int
mov
fdiv
aam
fcmove
neg
std
icebp
xor
cmp
xor
aas
ret
cmp
mov
fadds
mov
aaa
repnz
out
call
fcmovbe
ret
rcl
cmp
cld
int
flds
cmc
lret
ljmp
cmp
cmp
in
roll
fcmovnbe
call
fsubp
out
into
div
lret
aaa
stc
adc
loop
loope
ds
enter
test
mov
xor
ror
out
in
cmpb
cmc
adc
fsub
cld
loopne
call
int
das
test
iret
xor
iret
cmc
in
cmc
jecxz
xor
ret
xchg
out
iret
hlt
xchg
mov
clc
fdiv
sarl
ror
fdivp
cmp
out
lret
jmp
lret
iret
loope
lret
out
lret
aaa
ljmp
cld
in
cmp
out
sti
add
iret
out
fmulp
mov
xor
sub
jmp
stc
les
fcmovnb
ret
xlat
int3
hlt
loope
in
fisubrl
aam
int3
sti
sar
xlat
shl
div
loopne
inc
jmp
jmp
into
lret
xor
xor
xor
cmc
fstpt
cmpb
ret
out
loope
leave
in
std
out
in
rcll
sarb
imull
aam
clc
xor
hlt
test
xchg
xchg
add
out
into
shr
loope
in
clc
out
hlt
clc
repnz
cmp
rcr
aad
repz
in
and
std
mov
loop
in
call
aad
loope
hlt
fildl
aas
out
in
ror
out
lock
cs
ljmp
lret
sar
aas
cmp
jmp
mov
loopne
cmc
xchg
jmp
xor
icebp
leave
fldl2e
cmp
fdivrl
aad
loop
enter
adc
add
jmp
aad
ret
int
fistpl
jnp
mov
fiaddl
jle
in
repnz
loopne
iret
xor
repz
lds
fidivrl
in
rcl
dec
fmull
jmp
fimuls
fisubrl
leave
xor
cmp
mov
ljmp
lock
rcr
rcl
out
fdivrl
lret
sub
in
int
ret
in
xlat
out
xchg
icebp
cli
ljmp
fxch
fcom
icebp
sti
fdivp
stc
rol
jecxz
loopne
ljmp
icebp
int
not
ss
fdivs
cld
cmc
cld
loopne,pt
not
addb
xor
lret
out
cmp
shl
call
fcomp
aas
ret
cli
mov
cld
mov
std
clc
int
xchg
jecxz
repnz
xor
lock
cmp
fstpt
shr
ss
cld
loope
lret
leave
out
in
or
out
out
lds
repnz
jmp
aam
aam
in
cmp
ljmp
iret
sub
loope
hlt
ss
fcomi
ror
stc
ret
fcomp
xor
xlat
in
fmulp
mov
int3
out
in
jmp
leave
cmp
cmc
loope
in
xlat
out
test
int3
call
cld
loope
call
fcom
ljmp
aam
mov
xlat
mov
loopne
fadd
rorb
imul
hlt
fidivs
sar
in
lock
fimuls
test
test
mov
divl
fcmovu
call
aam
ds
rol
ljmp
jmp
hlt
cmp
cmp
fcmovne
into
sbb
cmp
shl
in
clc
test
enter
lret
jecxz
cmc
lret
fdiv
aas
fcom
xor
sar
ljmp
mov
shl
adcl
out
cmp
cli
repz
call
loopne
mov
lea
lret
xor
ds
cmc
cmp
clc
xchg
test
cli
xlat
xlat
ret
stc
ljmp
sub
out
ror
clc
ljmp
cld
stc
ret
xor
testl
orl
cmp
in
jmp
in
out
orb
xlat
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
and
add
cmp
mul
iret
nop
jmp
into
loopne
out
cmp
ljmp
cmp
int
out
fcomp
ljmp
out
lea
jecxz
xor
aad
jmp
loopne
loope
into
enter
mov
or
xchg
fcomip
ss
fdivl
leave
repnz
cld
in
aas
out
repz
rol
jmp
xchg
xchg
iret
int3
ljmp
xor
int3
cmp
aam
in
in
hlt
jecxz
loopne
cli
in
in
test
loopne
xchg
jecxz
xor
shl
lds
sti
stc
cmp
jmp
ds
repz
jmp
fsubr
loope
in
enter
ror
xlat
imul
out
jmp
shl
out
lret
xchg
icebp
in
call
rcl
shl
in
ds
fdivr
inc
rol
enter
mov
fucomi
mov
xchg
out
lret
xlat
jecxz
jmp
fsub
cli
fucom
repz
decl
test
fdivs
ret
cmp
idiv
hlt
cmp
incb
leave
repz
mov
in
jmp
xchg
xor
sti
rcl
loopne
iret
fsubr
cli
and
and
sti
mov
cli
into
rcll
stc
in
das
lret
loop
cmc
cmp
sti
ds
test
out
xchg
jecxz
ret
xor
stc
call
sarb
ds
ror
cmp
loope
out
xchg
in
int3
rcr
sub
xor
xor
xor
rorl
jecxz
in
icebp
xchg
xchg
xor
xor
sbb
std
fcmovnb
shl
cmc
test
mov
test
shr
mov
out
fmul
jmp
adc
ljmp
xchg
ficoms
in
call
shr
adc
cmpl
xchg
add
icebp
ljmp
in
out
cli
std
in
in
ljmp
loop
xchg
jecxz
sti
in
cli
cmp
cmp
rol
in
xchg
mov
loopne
sti
nop
xchg
cmp
ror
fprem1
jecxz
idiv
clc
repnz
in
aaa
icebp
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
add
fdiv
lret
test
cld
call
les
shlb
not
jmp
cmp
cld
iret
jmp
mov
int
jmp
fcomi
jmp
jecxz
jmp
out
shl
addl
hlt
rol
ret
fucomp
push
into
cld
and
in
cmc
cmp
fdivr
lock
cli
jecxz
fst
xlat
add
addl
rcr
xchg
incl
enter
out
sbb
in
fincstp
and
loopne
enter
int
std
in
das
ret
hlt
cmp
lock
iret
std
cli
lock
xchg
xchg
clc
jmp
lock
jmp
ljmp
out
xor
cld
repz
lock
fchs
roll
orb
aam
repnz
int
cmp
xor
iret
xlat
div
fcmovbe
leave
fadds
nop
out
in
cmc
iret
rcl
jmp
in
fcom
rcl
sarl
cmp
rcr
ret
aam
stc
out
iret
out
fisttps
xor
aad
cmp
into
cmpl
fisttps
fcmovne
xchg
hlt
loop
jecxz
cmp
fdivs
fmul
repz
cmp
incb
ljmp
lock
jmp
ret
in
jmp
cld
cmc
out
idiv
enter
in
enter
int
jecxz
cs
ljmp
ftst
adc
sti
test
decl
loopne
int3
in
hlt
leave
stc
int3
into
ss
jmp
cmp
fcmovnu
lock
xchg
mov
ror
icebp
shr
shlb
sti
cmc
jmp
jecxz
jmp
in
call
xchg
lock
clc
xlat
xor
out
aaa
fcomip
hlt
iret
cmp
incl
loop
clc
rcl
leave
loopne
jmp
leave
loopne
testl
fsub
test
addb
loope
cmp
jecxz
xlat
not
shl
loop
loopne
aad
cmp
cmp
addb
rorl
cmc
xor
aam
xor
int
in
movl
cld
mov
aam
lret
cmp
int3
jmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
scas
inc
xchg
ljmp
jle
icebp
icebp
fidivrl
out
inc
loopne
in
mov
mov
mov
jmp
loopne
loop
vshufps
cmc
jmp
cld
aas
ffree
icebp
adc
flds
iret
rol
das
call
sarl
in
idiv
cli
fmull
xor
int
in
aam
div
out
imul
fdiv
testl
out
in
shr
fucom
shrl
lret
shlb
call
icebp
rcr
rolb
ret
xchg
fmull
out
sub
sub
cmp
cmp
addb
rorb
out
cmp
xor
out
ds
hlt
sar
fsub
cmc
cli
rol
fxch
call
lret
jmp
icebp
int3
out
in
in
enter
cmp
sarb
icebp
loope
in
sti
jecxz
fadds
in
ljmp
lret
xlat
int3
fucomip
aas
cmp
ret
ds
jmp
xchg
ljmp
notb
xor
in
out
testl
not
fdivr
clc
int
jmp
div
das
out
in
lret
div
iret
in
xor
repz
lret
xlat
xchg
int
in
xor
in
in
aad
aaa
cld
fcmovne
cmc
aad
xchg
mov
les
loop
out
loop
stc
aaa
out
icebp
call
test
rolb
dec
loope
ret
test
mov
into
call
jmp
cmp
stc
out
sar
aad
enter
test
lret
loope
test
fsincos
ds
xlat
fmul
div
xlat
fsubp
addb
repz
lret
cmc
repz
cli
call
loop
xlat
repnz
out
in
xchg
in
out
loop
fucomp
mov
mov
rcr
jmp
shl
in
loopne
stc
in
roll
out
leave
call
cmp
repz
in
int
rolb
sti
cli
orb
std
mov
lret
call
out
into
inc
shl
in
sti
in
cld
into
std
and
in
fucomp
xor
idiv
rcl
fsub
xor
xor
add
jmp
int3
int
loope
sub
mov
inc
call
jle
std
cmc
std
rcl
in
repnz
cmc
fimuls
out
shlb
cmp
out
lock
in
clc
out
sub
jmp
in
xor
ret
shl
rcl
test
sar
ror
fsub
test
mov
out
repnz
ss
jmp
fucomip
aas
in
out
ret
filds
out
icebp
std
in
decl
aad
leave
enter
fstp
cmc
sar
clc
rolb
xlat
ffreep
std
lret
lock
test
sar
xor
in
aam
hlt
rcl
ffree
roll
rcr
xchg
orb
cmp
aam
loopne
lret
cld
sarl
aas
ljmp
hlt
lret
out
xor
out
fsin
rolb
hlt
mov
mov
aam
xlat
shl
lret
ror
int
fdiv
ror
sti
orb
and
leave
decb
hlt
fcmovbe
xor
lret
rol
adc
call
fsincos
in
ljmp
hlt
jmp
cld
inc
rcl
rcl
int3
ret
rcl
call
jmp
lret
xchg
jmp
lret
nop
ret
aaa
shll
out
test
idivl
hlt
icebp
test
test
test
aad
xlat
shl
stc
call
cmp
cmp
out
repz
rol
loopne
loopne
fucom
in
bnd
mov
loopne
out
cmp
lock
rcr
xlat
in
in
mov
mov
leave
test
lret
fsubr
mov
loop
shr
call
repnz
clc
sbb
out
fadd
orb
and
jmp
lds
iret
leave
lret
icebp
cmp
in
sub
loope
in
xor
fdivr
ror
xchg
cld
jecxz
shl
loop
jecxz
call
cmp
shl
xchg
mov
test
repnz
ret
neg
xor
ljmp
repz
fcomi
aam
fiadds
jmp
mov
mov
or
out
out
int3
cmp
std
lock
and
fiaddl
enter
call
stc
repnz
jmp
enter
fstp
int3
shl
scas
imul
mov
jg
fiaddl
jle
fstpt
xlat
int3
fdiv
rolb
repnz
loop
hlt
jecxz
icebp
stc
in
out
cld
call
fcomi
ds
loope
std
out
enter
out
in
into
les
xor
cmp
int3
enter
clc
xchg
ret
in
std
shr
lret
xchg
xor
ss
iret
fsubrp
rcl
in
ret
test
in
orl
shl
clc
aam
lock
ljmp
rcl
enter
out
out
loope
out
ljmp
call
aaa
add
repz
jmp
les
xor
jmp
aaa
cld
cli
int3
sub
cli
loope
xchg
aad
loopne
or
out
cmc
mov
fadd
lret
cmpb
sub
fst
enter
aas
sti
mov
test
shl
repz
cmp
enter
in
iret
fiaddl
mov
clc
mov
loop
call
fcmovbe
xor
cli
icebp
cmp
shl
aam
ffree
aad
leave
leave
test
icebp
into
mov
lret
fdivrl
cmp
into
test
hlt
mov
cld
and
fucom
and
fists
in
int
fmulp
aad
aaa
sbb
repz
ror
loop
clc
int
movl
in
shr
jmp
fcmovu
ret
xchg
cmc
out
fisttpll
test
inc
out
int3
cmc
lret
in
xor
sar
shl
clc
add
in
nop
loopne
lock
mov
stc
shr
cld
ror
cmp
in
loop
fsubp
fadd
cli
loope
into
adcl
cli
iret
in
aad
loopne
jmp
cmc
loope
rolb
jmp
rcll
aaa
rol
lret
stc
fdivl
in
aas
in
aad
cmp
test
cli
in
in
loop
add
icebp
xor
xor
ret
leave
fldln2
cmp
lret
iret
iret
rcl
repz
out
rol
in
or
fdivr
shr
loopne
rcl
loopne
into
enter
aam
cli
jmp
aam
clc
hlt
leave
hlt
fdivr
loopne
in
rolb
imul
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
aaa
ss
aad
ds
in
loop
in
clc
mov
jecxz
roll
out
xchg
fsubrp
test
out
jmp
jmp
cmp
shr
cmc
not
inc
sar
xchg
nop
mov
hlt
ljmp
xor
in
cmp
ds
out
addb
loop
test
and
ret
xchg
iret
out
fsubrp
ljmp
into
test
hlt
test
cld
int3
xchg
out
ret
xor
sarb
repnz
out
repz
hlt
mov
test
out
out
lret
in
xor
sti
rcl
bnd
in
repz
hlt
out
out
in
adc
and
fidivl
rol
hlt
jmp
aad
test
fcomip
loop
test
fldl
call
hlt
sarb
fnstcw
icebp
lock
rcr
cmp
aas
in
repz
loope
out
int3
repz
out
enter
cmp
filds
out
test
notb
xchg
loope
icebp
clc
imul
in
cmp
call
test
iret
out
rol
std
testl
shr
jecxz
loope
test
repz
out
cld
lret
int3
imul
cmc
sti
ljmp
icebp
iret
jmp
int3
loopne
xor
lret
cld
incl
lret
std
fimull
xchg
std
loop
idiv
enter
iret
fnstsw
hlt
jecxz
fucomi
mov
int
fld
xchg
lock
out
xor
out
cmp
sarl
shl
ret
rcr
shl
test
xchg
hlt
mov
xor
call
cmp
shl
aad
fmul
jmp
out
out
test
out
adc
icebp
hlt
fxch
ror
out
loop
ror
fadds
loop
mov
xchg
xchg
lea
int
divb
ljmp
icebp
flds
clc
xchg
mov
fsubp
int
int
cld
stc
std
out
lock
fdivr
in
cmp
cld
mov
out
test
lret
into
leave
in
not
cld
in
int
aam
fnstsw
loopne
cld
ret
int
mov
stc
rorb
lock
cmp
mov
jbe
jmp
lret
ret
in
call
xchg
pop
lods
pop
out
jg
fiaddl
jle
hlt
xchg
in
fucomip
ret
lock
fcmove
leave
ljmp
mov
ljmp
mov
loope
int3
jecxz
cmc
in
fmul
icebp
cmp
cmp
shl
cmp
repz
in
test
lock
filds
test
rcl
lock
int3
stc
fstp
fsubr
rcr
mov
iret
nop
leave
roll
in
out
leave
ss
aad
sar
cmp
in
clc
shl
lret
fcmovne
in
fildl
out
into
into
int
stc
out
shl
loope
cli
cmp
icebp
fsubp
orl
jmp
in
xor
icebp
ljmp
neg
adc
aad
and
loopne
out
mov
call
cmp
sar
cmp
incl
test
mov
fiaddl
jecxz
xor
cmp
hlt
rolb
clc
hlt
aad
mov
int3
shl
iret
int3
fdivr
cmp
lock
cmp
icebp
xchg
out
in
mov
inc
in
std
loope
in
repnz
in
ljmp
xor
aam
test
fucompp
idiv
in
loopne
repnz
lret
fcmovnu
icebp
cld
repnz
aad
ret
addl
lock
in
call
aam
sarb
out
fsubr
xchg
and
mov
xor
in
fdiv
ror
sar
adc
xchg
loopne
in
stc
ficoms
out
jmp
into
xor
div
loope
jecxz
xchg
fcmovnbe
mov
mov
into
loope
cli
xor
out
out
in
hlt
stc
repnz
mov
test
int3
int
out
shl
into
out
aaa
cld
int3
jmp
cmp
xor
mov
test
std
std
rclb
out
lret
sti
sar
cmp
ljmp
test
in
decb
int
lret
ret
aaa
xor
ljmp
aas
cmp
in
cmc
sub
out
mov
repz
mov
in
ss
lret
hlt
ds
out
call
jmp
testl
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
jns
or
bnd
fiaddl
jle
shl
sbb
ljmp
hlt
out
lret
repz
cli
repnz
add
in
xchg
orl
into
lret
lret
xor
ss
fiaddl
fisttpll
out
out
add
in
cmp
into
loopne
test
test
mov
jecxz
jmp
mul
lret
enter
ret
test
cmc
fildl
shr
xchg
lret
sub
cs
aad
xchg
fiaddl
jecxz
lret
in
sti
xchg
in
xchg
shrl
icebp
cld
out
clc
cmp
aaa
ror
ret
std
xchg
cmp
out
lock
jecxz
out
int
cmc
leave
ljmp
repnz
or
mov
cli
xchg
faddp
call
sarl
sar
sarb
lret
fucom
in
rol
xlat
xchg
nop
fdivr
nop
cmc
out
lret
cmp
leave
out
ret
inc
call
cmp
xchg
stc
sarb
out
lock
cmp
loopne
mov
jecxz
les
addl
lock
into
xlat
leave
clc
cli
out
fsubr
cmc
testb
out
in
mov
ror
aad
ljmp
hlt
cmp
cld
xlat
repnz
neg
sti
ret
std
test
xchg
loop
out
jmp
fdivrs
in
push
stc
xlat
ret
cmp
fsub
fucomp
xchg
loop
out
movb
int
lock
in
in
lock
icebp
loop
lds
aas
cld
mov
xchg
repnz
enter
cmp
into
cmp
std
fucom
leave
lret
fcmovb
fsubp
in
out
mov
neg
ror
repz
cmc
rol
sar
in
fisttpl
lret
out
rcr
cmp
xor
lock
fld
shr
test
test
fstl
in
iret
aaa
cmc
cmp
cmp
incl
cmp
cli
loope
repz
shr
xor
out
repz
rcr
cmp
and
out
mov
xchg
add
add
xlat
mov
rcr
xlat
sub
ljmp
add
ljmp
repz
jmp
iret
ret
xor
test
cld
cmp
cmp
in
leave
testb
aad
lock
idiv
iret
fscale
leave
hlt
aad
loope
not
icebp
call
jmp
ret
out
in
hlt
fnstenv
aad
int3
into
neg
cmc
hlt
stc
roll
stc
fiadds
int3
jmp
shr
loopne
aam
aam
stc
shl
int
addb
in
in
into
shl
divl
out
aam
icebp
rcl
repz
stc
shl
ret
out
fcomip
cmp
jecxz
mov
in
jmp
xor
aas
xor
hlt
hlt
clc
out
not
fists
repz
cmp
ret
xor
rcr
sbb
jmp
hlt
loopne
loopne
cmc
cli
dec
fcmovnu
xchg
repnz
loopne
out
xor
test
fyl2xp1
aam
icebp
sar
ljmp
xchg
in
ljmp
int
inc
loope
push
repz
xchg
in
filds
fdiv
enter
cmp
test
cli
rol
cli
cmc
jecxz
cld
in
cld
loope
call
loop
loop
xor
repnz
mul
out
icebp
cmp
clc
fadds
sti
mov
cld
repnz
loop,pt
ds
cmc
leave
loop
rclb
mov
jmp
lret
hlt
ss
idiv
ret
lock
ret
filds
loope
filds
lret
aad
in
xor
clc
sarl
aas
cmc
fistpll
ror
loope
sti
cli
mov
shl
icebp
jmp
loope
int
and
repnz
loope
mov
icebp
ror
mov
cmp
loop
call
fsubr
stc
jecxz
fndisi(8087
xchg
call
fmull
rcll
fsub
not
xor
xlat
and
mov
mov
mov
aam
xor
iret
out
icebp
ljmp
not
iret
call
loope
testb
loop
sub
in
cmc
xor
ljmp
shr
je
add
lret
xlat
aas
rcr
int
in
push
pop
stc
and
jg
fiaddl
jle
loop
cmp
jmp
lret
xchg
repnz
in
hlt
xor
lock
loope
shr
aad
in
in
int
sti
xchg
in
bnd
aam
aaa
in
xor
iret
lock
sti
mov
sub
rolb
aad
cmc
ss
aas
jmp
in
out
enter
lea
out
into
nop
mov
xlat
clc
idiv
into
cli
fmul
cmp
fbstp
lds
clc
iret
iret
nop
shr
jmp
ret
in
repz
call
cmp
rcl
cli
in
fdivr
xchg
rorl
shl
in
cmp
cmp
jmp
shl
shl
cld
cli
not
lea
xchg
xchg
sub
out
jmp
clc
stc
incb
out
sar
fucompp
aam
or
call
in
repz
fdiv
xlat
xchg
shl
neg
fisttps
hlt
mov
jecxz
clc
fcmovu
lock
mov
loop
ljmp
out
std
out
in
xor
test
icebp
hlt
iret
xlat
ds
hlt
out
xlat
xlat
xchg
out
mov
int3
int
aaa
repnz
lret
xor
lret
ror
test
inc
cmp
in
cld
cld
in
ror
rcl
icebp
ss
lds
cs
out
cmp
int3
repz
loopne
out
imul
fiadds
mov
ret
cmp
cmp
aaa
icebp
in
ret
int
call
ret
lret
or
out
loop
lret
aaa
icebp
in
xor
inc
ljmp
repz
add
xchg
out
int3
lret
jmp
aaa
cmp
shr
jmp
fdiv
rol
out
fucom
fcmovb
stc
lret
mov
out
xor
loop
jmp
repz
fucompp
cmp
shl
cld
xlat
call
std
loope
rol
xor
cmc
sub
repz
fcmovu
rol
call
lret
loop
in
shl
repnz
sar
repz
int3
in
cmp
addl
mov
nop
ss
shl
out
fnstenv
addl
add
jmp
lret
fst
mov
addr16
mov
aas
pop
lret
jle
add
sti
xlat
repnz
ret
int3
fists
lret
fcomi
aad
fidivrl
rol
cmc
icebp
test
mov
loopne
fsqrt
icebp
aam
leave
xor
aad
aad
fnop
sti
and
shl
cld
stc
add
mov
loope
aam
jmp
idiv
ss
out
clc
clc
hlt
fdivp
fnstcw
test
test
in
loope
lock
lock
lock
cli
in
les
rcl
out
xchg
int3
sti
repz
out
les
ljmp
cld
cmp
rol
std
rol
fsubr
cli
int
sar
nop
out
loope
int3
xor
lret
cmp
std
sarl
jmp
cld
std
cmc
lock
ror
hlt
test
out
jmp
jmp
loopne
repz
fptan
div
in
shl
stc
sar
vpsubw
sti
fldl
jecxz
xchg
loopne
int
lret
fdivs
out
sti
sti
imul
out
stc
icebp
std
adc
in
loope
sti
sbb
filds
jecxz
ljmp
aad
hlt
fstpt
out
sar
out
out
fdivr
into
xchg
mov
xchg
jmp
int3
cmp
out
enter
xlat
fstp
loopne
mov
add
orl
fmul
lret
leave
in
icebp
rolb
xchg
cmc
xchg
out
in
int
loopne
xchg
xor
rcl
xor
shr
ljmp
hlt
shl
ret
out
ljmp
out
ror
icebp
icebp
cmp
stc
faddl
sti
mov
movb
std
loopne
cmp
sti
lret
jmp
fidivrs
iret
test
sti
in
jmp
loop
ljmp
xlat
out
cmp
xor
clc
sti
out
repz
icebp
mov
loopne
cld
ljmp
repnz
out
sar
ret
repnz
cli
in
out
decb
xchg
lret
repz
cmp
xor
aad
xlat
aas
aad
aam
testl
xchg
out
cmp
in
neg
lock
in
aam
fcmovbe
xchg
cli
stc
int3
xchg
call
cmc
aam
clc
sar
imul
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
xor
xchg
add
leave
sti
out
cmp
rolb
out
out
into
loop
orl
lret
ljmp
cld
mov
fcmovbe
lret
mov
fmull
shr
xlat
shl
rcl
ds
aad
test
shl
ljmp
shr
idiv
ljmp
hlt
imul
xchg
lds
xchg
int
incl
aaa
lret
jmp
shl
ret
bnd
addb
movb
jmp
fdivr
xor
loopne
in
aas
div
ret
stc
std
frndint
enter
shr
loopne
sub
lret
jmp
cmc
out
out
mul
inc
loope
test
leave
in
mov
lret
xor
xlat
aad
in
aad
rol
cli
cmp
lret
std
out
fimuls
lret
xchg
in
shl
jecxz
repz
push
into
aad
fstp
rorb
jmp
shl
mov
xor
sti
aad
jmp
rcr
cmp
repnz
in
jmp
nop
loop
in
mov
ss
fdivrl
ss
shl
out
sub
cmp
jmp
cli
sti
fcoml
cmp
in
into
out
rcl
shl
repz
mov
out
std
int3
loopne
mov
in
cmp
lret
xor
fdiv
sti
repnz
rol
in
int
in
fstp
ljmp
xor
cli
jmp
neg
xlat
stc
loop
in
lret
enter
rcl
xchg
shl
leave
ljmp
ljmp
lds
mov
aam
xchg
jmp
xor
cmp
adc
aas
fst
jecxz
out
enter
cli
mov
fst
xor
fxch
ror
fdivl
cmpb
clc
jecxz
repz
hlt
fimull
mov
xchg
jmp
lock
repnz
addb
std
test
lret
nop
shr
enter
lret
cld
enter
clc
fstp
aad
xchg
ret
ret
shl
xchg
loope
int
loopne
das
rorb
cmp
push
or
je
add
lret
ret
fcmovu
fucomi
pop
test
int
and
add
jg
fiaddl
jle
in
cmp
cmp
repz
in
hlt
test
xor
cli
out
mov
fucom
mov
out
xor
cmc
repz
ss
cmp
icebp
fiaddl
fcmovu
inc
mov
xchg
lret
addb
shr
imul
cmp
sbb
xor
out
out
into
in
out
in
xchg
out
xchg
shr
clc
repz
hlt
fdiv
cmc
ljmp
rol
shl
fimuls
ljmp
repnz
cli
clc
lock
cmpb
stc
int
out
loope
faddp
enter
in
in
mov
nop
xor
jmp
sti
stc
int
in
sti
sti
hlt
mov
lret
cmp
cld
jmp
jmp
cmp
call
int
sar
lock
cld
lret
mov
and
jecxz
shr
out
jecxz
int
push
std
fdivr
fucomp
sti
test
fsin
xlat
mov
sub
hlt
iret
call
xor
iret
lock
aad
loopne
ljmp
lret
mov
out
cs
in
fsubrp
aaa
lret
loopne
int
lock
repnz
fimuls
adc
shl
fldl2t
jecxz
cli
cmpb
sti
rol
fdiv
loopne
out
loop
fmull
repz
repnz
in
repnz
stc
lret
aaa
cmp
jecxz
test
leave
std
fstp
lock
loopne
xchg
xchg
xlat
int3
lret
ljmp
lret
aaa
cmc
call
into
std
rorl
loop
shrb
not
ds
iret
rcr
imul
shl
cli
fdivr
call
lock
rol
div
out
div
into
aaa
ds
cmp
inc
cmpl
fdivrp
leave
fsub
lock
mov
sbb
iret
ret
xor
sar
xor
aam
iret
lret
icebp
clc
int
rcr
jmp
leave
cli
mov
shl
mov
mov
in
out
in
cld
in
ss
cli
sbb
xor
int
in
in
repnz
loop
in
shr
stc
stc
adc
loopne
rcl
add
lock
orl
call
aam
cmp
jecxz
enter
fxch
lea
mov
hlt
jmp
leave
aas
ret
vpcmpeqw
xor
and
fiaddl
jle
xor
jmp
fucomp
aas
ffree
loop
sti
cmp
xlat
dec
out
shr
loope
out
ret
xor
in
ss
aam
jecxz
sbb
xchg
mov
cli
ljmp
aad
shr
jmp
lret
cmp
ds
loope
jmp
mov
into
jmp
in
pause
in
into
aam
repz
lock
in
adc
cmp
xchg
idiv
lret
faddl
enter
ss
cmp
out
shl
icebp
fcomi
shl
loop
loope
out
cli
repnz
fists
cmc
sti
iret
iret
cmc
rcr
in
fstp
cld
in
sti
cmp
sti
loopne
lret
jmp
ret
aad
xor
int
ds
stc
fsubrp
loopne
clc
fdivr
in
std
ljmp
xchg
test
jmp
jmp
ljmp
loope
stc
fimull
fisttps
mov
clc
in
cmp
fcmovnbe
test
out
sti
xlat
out
clc
lret
inc
stc
call
mov
out
leave
xor
cld
fcomp
in
out
cmc
mov
xlat
cld
cld
decl
nop
icebp
fmulp
lret
xor
sub
in
lret
aas
cmp
rol
leave
aad
jmp
fsub
fiaddl
loop
ss
jmp
stc
loopne
shr
adc
imul
fucomp
loope
ljmp
in
repz
xor
iret
cmp
fdiv
loopne
sbb
int3
out
mov
addl
fld
fcom
lock
sarb
mov
ljmp
out
shr
into
xor
aaa
fcmovbe
repnz
push
mov
rorl
out
sub
xor
fcmovu
lret
cmp
ss
lret
clc
fscale
aam
stc
enter
test
cmc
fldl2t
call
in
icebp
int
fdiv
ret
stc
rol
xchg
int3
mov
test
cmc
ljmp
flds
out
fstp
loope
out
test
iret
out
mov
mov
lds
cmp
idiv
out
sar
and
mov
iret
cld
xor
jmp
int3
ret
lret
ret
int
int3
int
adc
sbb
mov
add
into
in
loop
shrl
cmp
stc
cmp
clc
cmp
cmc
addl
std
in
ljmp
call
cmp
sub
les
addb
xchg
xchg
into
xchg
loopne
into
aaa
cld
fsubr
cmp
in
testl
fsub
lret
loopne
in
repnz
aaa
call
cmc
call
out
fadds
fucomi
sti
lret
xchg
repz
aaa
aam
cmc
sar
rcl
shl
jecxz
aaa
rol
decl
rorl
rol
ljmp
addb
rcl
frndint
shl
aad
in
test
loop
in
lret
aam
cmp
ds
int
icebp
adc
fmull
rcl
in
mov
cld
fdivr
cmp
into
add
repz
rol
mov
mov
icebp
cs
aam
ss
cld
fprem1
std
repnz
fdiv
testl
call
aam
xor
fdiv
iret
cmp
cmp
fdivp
fcmovnbe
hlt
ret
test
xchg
loopne
fcmovu
xchg
adc
xor
hlt
jmp
fcmovbe
sti
aas
ds
cld
loop
enter
mov
into
jmp
int
xlat
cmp
jmp
fcomip
or
fsubr
out
imul
leave
fsub
mov
mov
cmp
aad
ds
cmp
repz
test
jecxz
test
icebp
xchg
out
in
sti
ror
lret
enter
loope
div
stc
loop
xlat
cli
fmull
ror
xchg
test
shl
aaa
lock
aaa
fmul
clc
out
adc
enter
xlat
nop
iret
in
xchg
xchg
div
call
xor
in
aaa
int
into
aad
loopne
rcr
jecxz
in
fsubr
fiadds
shl
fsubr
in
aam
fsubrp
sarb
in
aad
sbb
loop
stc
sub
in
adc
xlat
xor
cmp
aaa
shl
fcmovne
rcr
aas
out
repnz
mov
jmp
shl
int
repz
icebp
jmp
int
mul
mov
jmp
in
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
in
nop
loopne
into
call
in
sub
cmp
stc
lock
test
test
stc
icebp
icebp
call
ret
stc
cmp
call
ret
test
loope
enter
lret
clc
fsubrp
call
dec
aaa
lret
xor
testl
test
out
lret
faddl
lock
out
aaa
cmp
ss
ret
loope
test
fcmovne
loope
sti
loope
in
rcll
lret
fidivl
aaa
sarl
icebp
into
xlat
xlat
rol
fisttps
jecxz
aam
jecxz
test
jmp
inc
out
shr
fucom
and
mov
out
nop
jecxz
filds
cmp
jmp
out
aam
jmp
out
fcomip
xchg
rcll
loope
fcmovnu
cmp
leave
int
std
int
fidivrl
xchg
int3
cli
mov
leave
in
iret
testb
xor
aam
sar
rcl
aas
out
out
lret
fimuls
loop
cmc
repz
les
out
cmp
and
sbb
test
in
test
lret
lds
mov
neg
cmp
into
aad
cmp
lds
lret
mov
not
int
int3
out
cmp
idivl
in
ds
shr
test
mov
xchg
mov
and
rol
ljmp
out
and
cmp
sar
in
mov
shr
int3
clc
ret
clc
jmp
ds
in
jmp
fadd
xlat
loopne
xchg
out
icebp
test
cs
ror
out
jmp
cmp
mov
xchg
ljmp
in
out
cmp
repnz
fscale
rcr
xchg
mov
loopne
nop
test
loopne
xor
in
fucomi
rol
leave
xor
cmp
rolb
jecxz
lret
addl
cmp
in
fistpll
test
imul
aam
loop
out
roll
hlt
ss
jmp
in
iret
fsubr
rcl
jmp
fsubr
icebp
sti
ljmp
add
call
add
into
aam
fmul
dec
cmp
jl
xchg
fiaddl
jle
aad
incb
dec
xchg
shl
out
ss
hlt
cmp
shr
adc
out
lock
rol
clc
fld
mov
repnz
enter
hlt
std
cmp
cld
out
ljmp
fcompp
fdivr
fildl
test
aam
out
repz
icebp
enter
jmp
flds
enter
int
fsts
das
das
iret
int3
ljmp
out
out
into
rcl
in
repz
adc
cmp
faddl
sarl
lret
aaa
fstp
jmp
repz
loopne
sar
neg
enter
ret
dec
repnz
shr
int3
out
leave
ds
cmc
fsubp
loop
std
cmp
enter
xor
xchg
out
xor
loopne
rol
cmp
shl
repz
int
jmp
loop
in
out
into
repnz
aam
cmp
loop
jecxz
sti
out
xchg
in
test
jmp
xor
out
fsin
cmp
cli
cmp
cli
int3
jecxz
loop
jmp
xchg
lock
sti
out
call
loop
cld
ds
mov
dec
ljmp
out
fdivp
imul
rcl
out
rcl
stc
stc
dec
ret
aad
in
sti
in
clc
test
mov
xchg
int
out
in
clc
in
repz
lock
cmp
in
and
aad
stc
test
lock
mov
cs
iret
les
call
fnstsw
out
fsub
cmc
out
out
aad
lret
loop
leave
mov
leave
sarl
xor
aam
ret
into
in
ret
or
in
xlat
lds
orb
sti
std
cli
lret
jecxz
in
xchg
test
in
loopne
into
xchg
icebp
sbb
ret
lret
ret
repnz
cmp
in
int3
fdivr
lock
repnz
stc
fst
loope
xchg
test
lret
in
ss
jmp
fcom
cmc
cld
aad
cmc
icebp
out
fcomip
repz
stc
in
sbb
shl
divl
cmp
into
repnz
sar
test
mov
stc
xchg
cmc
xchg
jecxz
jmp
lret
fildl
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
pop
mov
fiaddl
jle
fcmovbe
mov
ljmp
in
in
out
das
in
xor
lret
fprem1
jmp
cmp
push
in
xlat
lret
stc
in
clc
xor
xchg
adcl
iret
enter
loopne
cmp
addl
mov
roll
into
out
cmp
xor
fdivr
addb
icebp
aam
rcr
jmp
int3
orb
cmc
loop
ror
cmp
out
cli
xlat
repnz
hlt
ret
in
xlat
and
mov
fnstenv
cli
icebp
aaa
std
leave
xlat
ds
in
out
loope
xlat
sti
mov
in
stc
lret
int3
in
mov
lret
testl
loope
cmc
fcmovnu
into
xchg
xchg
enter
idiv
ljmp
rcr
aad
cld
fldl2e
xchg
testl
cmc
out
cmp
cmc
div
rcr
aas
in
repz
mov
cld
lret
fdiv
nop
std
in
xor
lock
or
fcmovu
lock
jecxz
mov
and
jecxz
xorl
repz
cli
sti
push
add
enter
cmc
out
mov
loop
sar
ljmp
jmp
repnz
iret
fdivrp
repz
icebp
in
in
test
sub
int3
out
sti
jmp
cmp
test
fiaddl
fcmovnu
repz
std
repz
in
shl
into
idivb
int3
in
cmp
ss
hlt
cld
stc
enter
decl
iret
jmp
ss
repz
loope
rcr
xlat
xchg
ljmp
into
cld
aam
xor
out
lret
idiv
leave
cld
fdiv
fdivp
cld
faddp
sub
loope
std
in
out
lock
in
sub
enter
out
sar
fmul
sti
fsubrp
rolb
aam
into
lret
loop
repnz
out
and
in
ss
cli
cmp
neg
testl
std
in
fdivr
test
xchg
mov
divb
fdivl
clc
fxch
jmp
repnz
in
xlat
fadds
shl
sbb
loopne
fdiv
stc
out
leave
dec
rcr
push
in
jmp
ror
rcl
stos
sub
insl
inc
lea
sub
jle
out
in
shl
leave
jecxz
out
out
mov
out
out
xorl
cli
call
or
icebp
loope
loope
fcmovnu
jecxz
sbb
repz
aam
iret
enter
loopne
rcl
hlt
shl
aas
idiv
out
out
lret
in
into
xchg
fcmovbe
ljmp
repz
into
shl
ret
in
in
test
mov
fcmovne
std
mov
xor
loop
in
jmp
div
sti
aaa
cmp
repnz
cld
test
enter
rcl
sub
shl
shlb
aam
jmp
cld
sarl
cld
icebp
test
loop
in
mov
xchg
lret
xchg
test
jecxz
xlat
fldpi
not
stc
cmp
lds
jecxz
mov
hlt
repnz
mul
out
fsubr
lock
out
aaa
cmp
xlat
fstpt
movl
xchg
out
fst
aad
iret
vcvtpd2dq
fcmovne
xlat
idivb
jmp
jecxz
fcmovbe
adc
mov
xchg
rorb
icebp
ffreep
aaa
loop
cs
out
fiadds
fiadds
fsubr
in
fxch
mov
int3
out
into
xbegin
cmp
fucom
ret
loopne
aad
jmp
jmp
lock
xor
ret
ljmp
repz
test
loopne
mov
in
cld
out
xor
shlb
out
cmp
filds
leave
fmull
mov
ret
xor
call
cmp
aam
shl
xchg
out
fadds
leave
jmp
test
shl
sti
repnz
lret
stc
lock
out
fiadds
in
call
fdivr
enter
into
ror
cli
rcl
cli
fcmovbe
fadd
jmp
mov
mov
cld
mov
in
cmc
sarl
aad
int3
out
jmp
lock
out
call
xchg
loope
aad
decb
xchg
repz
out
int
ss
cmp
aam
jecxz,pt
rcr
mov
nop
test
test
cli
stc
enter
cmp
sarb
jecxz
idivl
hlt
push
fiadds
ror
lret
repz
in
shlb
mov
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
repnz
aas
rcl
fcmovb
fsubp
leave
jmp
lret
mov
std
in
sar
jmp
aad
xor
out
aad
ret
fucomp
in
jmp
aad
mov
leave
les
enter
cs
imul
repnz
into
ret
fnstcw
loope
hlt
lret
call
in
lock
sub
fcmove
jmp
rcl
sarb
in
xlat
ret
stc
and
cld
out
fadd
lret
xchg
sub
out
ss
jmp
call
repnz
sar
ret
fimuls
addl
ljmp
imul
int3
fsubr
loopne
loopne
dec
lret
loop
out
int3
xor
cmc
cmp
out
lret
fcmovbe
aam
jmp
mov
mov
sub
rcll
shl
ss
fcmovbe
rcr
cmc
iret
add
jecxz
loope
lea
hlt
rclb
icebp
stc
jmp
aas
stc
fidivrl
loope
test
out
sbb
lret
in
mov
iret
int
out
xlat
aaa
xor
fsubr
out
cmp
addl
jecxz
lock
sbb
test
loope
ds
int
out
fdivrp
icebp
mov
cmp
xchg
decl
rcl
cmp
ljmp
fdivr
aam
jmp
fmuls
loop
xchg
xchg
xlat
lock
int
cmp
cmp
cmp
fstpt
aam
sbb
sub
out
xchg
pushl
sub
iret
repz
incl
faddp
mov
fsubr
enter
cld
icebp
loope
in
shr
div
fmulp
fbstp
fdiv
out
ret
lock
mov
std
out
mov
rcr
decb
call
ss
shl
shl
sti
in
shl
call
in
shr
and
ss
ss
cmp
xor
sti
repnz
xchg
fildl
mov
and
icebp
divb
cmp
lret
std
cmp
xchg
repz
iret
ret
adcb
xor
aam
std
rcl
ljmp
ret
loope
mov
xchg
sub
scas
xlat
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
jb
call
fiaddl
jle
leave
in
stc
in
cmp
aad
repz
flds
loop
faddl
in
shrb
jmp
jecxz
into
hlt
icebp
out
fsubr
into
iret
fadd
ret
clc
fdivrl
call
addl
call
in
in
xlat
neg
xlat
lret
jmp
mov
aaa
out
call
lret
call
call
test
out
shll
loop,pn
not
xor
fmul
hlt
sarb
sbb
xchg
fimuls
shr
fisttpll
div
aam
xor
cmp
cmp
xor
ret
sti
xor
loope
fadds
mov
int
ss
fcomi
int
leave
sti
out
fldl
jmp
loopne
call
repz
xor
cli
sarl
ljmp
in
xor
loope
out
mov
iret
lret
jmp
repz
cld
cmp
aad
cmp
repz
fcom
jecxz
enter
jecxz
lret
mov
out
out
out
jmp
cmc
out
aad
in
fucomip
repnz
cmpb
call
leave
loop
in
mov
jmp
hlt
aaa
jmp
test
test
fcomip
repz
in
xchg
ret
out
aaa
ss
into
ljmp
rorl
loopne
adcl
rcl
xlat
cli
sar
rcl
clc
ss
aam
aad
stc
ffree
loopne
repnz
in
into
filds
into
not
aad
aaa
stc
aam
test
div
loopne
in
lret
loope
mov
mov
loope
call
aad
aaa
rcr
fnstcw
ret
jmp
icebp
fcomi
adcl
icebp
jmp
cmp
cmc
repz
std
fdivrp
fcmovnu
inc
int3
xchg
test
xchg
decl
leave
hlt
sar
rcr
cmp
stc
in
incb
fcoml
or
jmp
out
ljmp
aas
fdivp
xchg
addb
fisttps
repnz
std
xlat
sti
in
cmp
shl
in
in
decl
shl
sti
in
mov
clc
jmp
enter
fcmovne
fst
or
pop
push
rcl
cmpb
jg
fiaddl
jle
int3
ss
sarl
in
std
shr
rol
call
jmp
decb
xor
jecxz
xlat
repnz
rcl
std
addb
xchg
shl
out
repnz
fdivr
out
fyl2xp1
lret
icebp
lock
fld
loopne
in
fimull
mov
test
out
cld
std
aas
cld
cmp
cmc
fcmovnu
cmc
mov
loope
std
jecxz
mov
enter
lret
lock
cmp
cmp
int3
fildl
xchg
lret
ljmp
adcl
xor
call
fcmovnu
div
neg
cld
incl
in
repnz
adc
aaa
fcom
xor
repz
out
lock
fsincos
and
out
test
not
sub
lock
sarl
cmp
loop
cld
repz
sub
std
jmp
cli
loop
aam
icebp
call
xor
or
in
xchg
mov
mov
cli
xchg
mov
cmp
int3
cmp
test
bnd
lret
test
in
fiadds
ret
in
in
cmp
out
cmc
icebp
in
test
stc
roll
enter
out
iret
in
xor
aad
out
icebp
leave
cmp
lret
aad
fcomip
out
mov
fstp
loopne
clc
lret
xchg
out
iret
lock
xor
repz
int3
and
test
std
loopne
jecxz
xchg
rcl
out
lret
out
leave
icebp
fmul
fnstsw
aas
in
xlat
rcl
fcmovnu
lret
test
cli
std
fdivr
aam
mov
xbegin
cmp
aas
fcmovnbe
in
test
int3
leave
lret
test
test
ds
lret
loope
filds
or
int
mov
in
loop
loop
xor
lret
fldpi
sti
cmp
ret
inc
fiaddl
in
inc
test
xor
out
into
out
out
fcmovnu
icebp
fcomi
rolb
fdivr
incb
mov
in
ret
ret
enter
fyl2xp1
roll
ljmp
out
add
imul
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
mov
fiaddl
jle
int
loope
hlt
enter
shr
cli
clc
cmc
out
in
sti
lock
les
mov
mov
xor
cmp
enter
sarb
shl
orl
xchg
mov
jecxz
ficoms
cmp
lock
lret
cmp
clc
into
repnz
ds
ljmp
vpmacssdql
shll
lret
fcom
out
loopne
test
sti
neg
stc
mov
rol
lret
stc
in
lret
test
rorl
fimuls
in
faddp
aam
test
lret
rcr
cmp
int
in
fcmovb
ret
stc
std
mov
fldlg2
xchg
and
aam
lds
ret
fcom
fcmovnb
xor
ret
std
aam
aad
test
int3
std
mov
mov
test
mov
in
sar
div
stc
sti
sarb
repnz
out
in
fucomp
lock
decb
int
cli
cmp
repnz
into
in
out
mov
addb
mov
call
lret
out
sarb
out
in
fdivs
jmp
xor
jecxz
rcr
cli
jecxz
hlt
neg
out
mov
shl
ror
int3
int
int
in
cmp
std
fcomp
sub
out
xchg
xchg
in
fmulp
decb
stc
aad
ljmp
aad
lock
clc
in
lret
idiv
lret
ljmp
shr
xor
fldl2e
fcomip
cmp
rcr
hlt
fidivrl
cli
std
jmp
test
in
jmp
imul
rcr
int3
lock
ret
test
loopne,pt
aas
ret
loop
xlat
std
mov
xchg
in
out
xor
xlat
int3
fcmovnu
ror
out
stc
dec
shl
adc
rcr
addb
test
loopne
loopne
jecxz
in
cmc
into
fnsave
jmp
aam
in
testb
shl
repnz
loop
jmp
lret
stc
cmp
cmp
ret
and
lds
in
std
icebp
out
aam
out
fnstenv
div
repnz
out
cmp
loope
in
ret
fsubrp
int
loop
mov
jmp
jmp
ss
cmp
ss
loopne
out
repz
rcl
int3
aad
lea
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
jmp
xchg
jg
fiaddl
jle
call
orb
call
cld
aad
into
repnz
clc
mov
int3
call
rcr
xchg
in
int
enter
into
out
leave
shl
test
loop
leave
cld
fcmove
loopne
test
cmc
iret
lret
enter
ds
aas
int
cmp
sti
clc
in
out
ret
xlat
test
fsub
xorb
fldl
lds
out
jmp
hlt
aaa
sti
out
out
loopne
int
icebp
filds
std
in
int
ljmp
out
out
aaa
cmp
int3
lret
hlt
ret
test
loope
ljmp
icebp
nop
mov
mov
out
cmc
idiv
xor
lret
aam
aas
sar
clc
jecxz
clc
test
roll
shl
fdivr
int3
in
xlat
cmp
shl
loop
fcmovne
lret
int
nop
fmull
cmc
in
cmpb
xor
cmp
cli
flds
jecxz
int
jmp
fdiv
sub
into
in
call
jmp
lret
shl
in
mov
loope
std
rcr
test
shl
out
cmp
int
icebp
aad
loopne
lock
repz
and
xchg
xchg
xchg
lret
leave
repz
cmp
fucomp
cmp
loope
out
repz
addl
out
mov
clc
rcr
rcl
aaa
call
shl
xchg
fst
addb
out
fcmovbe
xchg
jecxz
int
out
in
ror
test
fadds
ljmp
rclb
xor
jmp
lret
aad
mul
fildl
stc
ret
vpaddusb
test
xchg
loopne
shrb
repnz
loopne
in
cmp
xchg
cmc
ret
cli
loopne
xchg
mov
fucomp
xor
lret
cmc
enter
cli
cmp
lret
fadd
fdivrp
cld
orl
mov
jecxz
int3
fcmovnu
repnz
ret
add
int3
jecxz
mov
jmp
ror
out
sti
pushl
lock
ds
fcmovnb
in
rolb
rorl
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
pop
mov
rcrb
jle
loop
test
test
fsub
lock
cmc
ljmp
xlat
cmp
cmp
out
stc
xchg
ret
orl
xor
shl
ret
jmp
rcl
std
rolb
test
nop
in
hlt
into
into
jmp
stc
ljmp
cld
inc
call
lret
mov
mov
xchg
cli
lock
xlat
rcl
fcomi
int
rol
fmulp
mov
int3
shr
int
iret
out
xor
fsub
fmul
lret
xlat
sarb
and
cli
ret
leave
ljmp
jmp
out
out
loop
xor
lret
ds
rcr
shl
aad
aas
clc
cld
rcr
iret
test
in
xor
fbstp
cmp
rol
cmp
lret
lret
jmp
jecxz
loope
imulb
xlat
cmc
int3
sti
aaa
not
fadd
jecxz
filds
in
shr
adc
mov
xor
in
add
rcr
repnz
jecxz
imul
mov
in
jecxz
xchg
cmp
cmc
int3
in
std
aaa
lock
cmp
loope
repz
sbb
jmp
in
fists
xor
cmp
lds
xor
stc
int
aas
clc
test
xchg
jecxz
out
mov
lret
jecxz
sub
stc
xlat
cmp
jmp
cmp
in
mov
stc
xchg
repnz
xor
std
cli
sarl
and
loop
shl
aam
test
mov
xor
out
jmp
sbb
out
sub
out
ret
neg
fmulp
shr
icebp
aam
ret
out
sti
xlat
cmc
xor
shl
cmp
loop
sti
xlat
loope
in
sbb
out
jmp
out
rcr
call
shl
idivb
lock
clc
fyl2xp1
sti
loope
orl
in
out
fstp
aas
rol
fld
clc
loope
and
lock
xchg
loopne
icebp
xchg
das
int
xlat
out
cmp
fmulp
xor
iret
iret
aas
loop
rcl
xchg
ljmp
cs
rcl
cmp
jmp
fiaddl
xlat
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
ret
scas
pushf
jg
fiaddl
jle
loop
test
movb
std
repnz
in
lock
cmp
stc
cmp
icebp
faddl
jmp
out
jmp
icebp
in
in
ret
out
lock
rcl
dec
xlat
int3
into
rcr
test
jmp
test
rolb
in
lock
leave
in
hlt
ror
ds
and
aam
xlat
fucom
leave
clc
mov
nop
filds
ret
out
fidivrs
lock
jmp
aam
aas
icebp
call
in
mov
filds
repnz
hlt
out
cmp
repz
test
les
aam
clc
xchg
fsubr
in
imul
lret
ljmp
std
out
aad
cmc
in
mov
icebp
sbb
rorb
lret
int3
into
cmc
icebp
int3
clc
repnz
aas
shl
in
loopne
into
icebp
loope
sbb
jmp
into
int
xor
lock
repnz
cmp
rcr
cmp
out
xor
lret
rcl
int3
int
lret
ror
shl
add
mov
shl
ljmp
xchg
xchg
loop
int3
ret
hlt
into
fsubr
ds
in
rcr
enter
out
jmp
in
imul
das
rol
xor
jmp
cld
sti
icebp
roll
fldl
xchg
rorb
xor
sti
cmp
aaa
rolb
cmp
fdivr
in
sti
mov
fucomp
fiadds
xor
out
jmp
sti
in
sti
ss
fninit
lret
fdivrp
std
in
mov
mov
jecxz
icebp
iret
xor
rol
rol
loopne
fsub
jmp
fdivrp
rolb
sar
hlt
loopne
xor
ds
stc
loope
cli
sti
not
testl
repnz
out
aad
iret
iret
lret
int
loope
fld1
ds
aam
idiv
sti
out
out
hlt
int
xlat
ror
iret
sti
repz
enter
aad
rcr
test
les
in
nop
cli
in
jmp
ss
ret
sub
call
cld
rol
aad
loop
out
int3
mov
lret
int
shl
cli
xor
xorl
add
iret
ret
rcr
fxch
in
incl
mov
or
jle
lret
cmp
out
ds
cli
lret
out
fmull
cmc
out
in
ljmp
lock
rcr
test
call
loop
xchg
int3
shr
out
out
lret
rcr
repnz
sti
hlt
shlb
lock
cld
repnz
enter
cli
jmp
lds
repz
stc
out
not
test
ret
in
cmp
loope
cmp
out
mov
cmp
cmp
aam
iret
aam
aad
xchg
rorl
jecxz
out
xchg
test
hlt
icebp
in
aam
ret
in
fdivr
fdivrl
shr
rcr
jmp
incb
loopne
jmp
rcl
aaa
shr
neg
faddl
test
enter
or
xor
int3
xor
out
jmp
xor
ljmp
in
sti
cmp
ljmp
or
out
not
ror
cmp
rcr
fdivrp
flds
ror
mov
call
sar
into
aad
shll
int
lret
cmp
fcom
aas
loopne
cmp
jecxz
lret
and
xchg
out
mov
clc
hlt
stc
lret
int3
xlat
clc
sar
repnz
aam
call
test
jmp
rcl
repz
aad
cmp
not
out
aad
repnz
in
enter
mov
stc
out
cld
out
loop
hlt
shl
stc
xor
ds
aam
sarl
mov
int
call
jmp
add
out
jmp
out
aaa
rcr
xlat
loope
in
add
mov
nop
in
orl
clc
cmp
fstp
out
cmp
iret
aas
repnz
ffree
cli
in
lea
cmc
fdivp
div
fcmovnb
cmc
hlt
clc
int
icebp
fcmovbe
cmp
rcl
xchg
mov
call
cmp
out
int3
xor
out
jmp
rcr
cli
loopne
lds
test
lret
repz
in
ror
fmul
fcmovu
leave
cmp
cmp
ret
addl
aam
xor
stc
out
aaa
cmp
in
shr
ror
aas
fcmovnb
inc
jecxz
fsubrp
ret
out
fimuls
aaa
ljmp
int
jmp
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
loopne,pt
lret
lock
aad
fildl
out
int3
incb
fstp
enter
filds
shr
jmp
orl
sar
in
xlat
out
repz
sarl
aas
jecxz
xchg
cmc
xchg
cmp
in
out
xchg
shr
xchg
xor
int
jmp
rolb
cmp
out
loopne
sbb
shl
std
ss
rcl
fxch
xor
aad
int
fsin
ffreep
rolb
nop
int
mov
aad
out
rcr
out
cmc
repnz
xlat
neg
and
jmp
stc
loopne
shr
and
in
int
stc
out
in
fcmovbe
std
in
out
sti
jmp
fxam
call
xchg
xorl
in
out
cmp
in
rolb
xchg
sti
in
fisttps
xchg
in
sub
mov
repnz
cld
or
jmp
in
leave
jmp
fcmovne
repz
mov
repz
hlt
ss
aad
repz
cmp
std
sti
fcom
rcl
loopne
in
fldln2
repnz
xchg
ljmp
rcr
rcr
into
cmp
shl
mov
stc
std
fmuls
iret
mov
ret
aam
div
xor
xor
cld
add
cld
clc
ret
mov
iret
jmp
imul
xlat
aam
out
repnz
idiv
ljmp
and
lea
jmp
aad
xlat
jmp
int3
xor
cld
adc
stc
les
into
mov
int3
rcr
cmp
fdivrs
enter
hlt
push
in
dec
fimuls
std
jmp
test
fidivl
idiv
fistpll
std
cld
std
div
add
xchg
xchg
sti
rcl
shrb
mul
fcmovne
enter
aas
fdivrl
div
in
in
fucomp
jecxz
mov
xchg
shl
into
repnz
ror
loop
cmp
out
cld
fdivr
cmp
out
jecxz
fcmovne
std
xchg
mul
hlt
std
lret
lret
sar
sti
fucom
fcmovbe
ffree
fdivr
mov
iret
into
fcmovnbe
mov
sub
jmp
leave
rcr
fcomp
cmc
pop
fildl
dec
mov
inc
mov
jle
xlat
jmp
cmp
iret
lock
fnstcw
in
std
rorl
in
xchg
out
divb
out
in
ss
repz
rcr
in
test
xchg
fdivr
out
cmp
leave
test
out
hlt
cli
rcl
dec
stc
sbb
in
imul
aas
loop
orl
ljmp
sti
cmp
imul
xlat
cli
lock
cli
xchg
jmp
cli
mov
xchg
imul
call
rol
fildl
int
add
fucomip
fisttps
xchg
jmp
lret
aad
cmp
cmp
clc
clc
int
or
cmp
cli
jmp
out
out
hlt
out
int3
das
xor
into
not
hlt
aam
out
int
sti
test
sarb
decl
in
rolb
aad
xor
cmp
cld
xrelease
in
fsub
loopne
mov
icebp
in
int3
cmc
aaa
cmc
jmp
cmp
sbb
loop
xchg
mov
icebp
les
aad
cli
cli
in
lret
iret
jmp
not
ret
ret
aad
ror
fcmovb
in
jmp
nop
cmp
xor
out
fnstsw
jecxz
repz
aam
jecxz
mov
in
sar
out
xchg
mov
repz
aad
jmp
sti
or
fadd
loopne
aam
out
fimuls
div
xor
repz
cmp
fstp
in
out
hlt
out
xor
mov
test
lret
ret
in
repz
clc
fcmove
jecxz
loopne
aam
aad
fxam
cmc
fcmove
fimull
aaa
xor
cld
xor
icebp
jmp
rcr
xlat
and
xchg
xor
mov
iret
cs
stc
sti
call
xchg
hlt
std
leave
stc
shl
rclb
xor
fcmovb
cmp
cmp
fucomip
iret
icebp
std
aad
enter
jmp
mov
xchg
inc
out
xlat
fadd
cmp
lock
hlt
clc
cld
in
loop,pt
cmp
popl
loope
ror
jecxz
sti
out
iret
iret
xlat
lret
repz
repz
cli
in
mov
out
stc
int3
in
int3
add
jmp
rcl
iret
aam
aad
sarl
cmp
cmp
cmpsb
jg
fiaddl
jle
divl
loop
out
aad
aad
in
stc
xchg
sub
jmp
ret
loope
test
das
ror
in
shl
test
into
rcr
add
cmp
out
dec
cld
mov
test
xor
lock
fidivrs
clc
out
in
shl
sti
stc
mov
xlat
out
icebp
fldl
in
leave
lret
xlat
xor
in
in
aam
into
cli
xchg
test
enter
in
repnz
xor
shl
out
out
fidivrs
imul
sub
aam
out
clc
lret
lret
xchg
hlt
sub
cs
sub
lret
hlt
int
into
clc
aas
mov
leave
loopne
mov
repz
orb
int3
shl
fidivl
cmc
std
aam
loopne
sarl
cmc
mov
in
addl
ret
int
cli
fst
cmp
cmp
repnz
stc
fcmovnb
out
inc
mov
test
std
enter
out
not
fxch
cmp
aas
std
in
out
jecxz
xchg
in
int3
loop
lret
out
mov
call
jmp
lret
clc
int3
out
loopne
cmp
decb
loop
mov
iret
int3
fucomip
std
cmp
ror
hlt
xlat
orb
roll
aaa
cli
cld
in
call
out
fidivs
test
test
mov
loop
jmp
jmp
mov
out
cmp
iret
xor
mov
ret
jmp
loope
nop
shl
xchg
std
in
aam
xor
cmp
shl
cmpb
neg
not
fdivr
xlat
cli
in
fcmovu
mov
fisttps
iret
jmp
cmp
call
testb
mov
loope
std
vcvtpd2dq
cmc
repnz
fucomi
hlt
aad
lret
cmp
in
loop
jecxz
mov
decb
cld
int
xchg
leave
les
into
stc
ds
xor
icebp
cmc
rcl
not
fcmovnu
ljmp
decb
out
hlt
cld
repnz
out
in
idivb
aaa
adc
enter
leave
fcmovnu
jmp
shr
shr
not
hlt
std
not
loopne
rcr
out
cmp
sbb
ret
mov
mov
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
out
mov
jg
fiaddl
jle
out
orb
hlt
clc
aaa
hlt
into
xlat
cld
xor
jmp
fisttps
out
in
push
lret
lret
or
inc
stc
jmp
loope
cld
mov
lret
xor
cmc
ret
cmp
leave
fld
inc
cmp
mov
xchg
fimull
nop
std
xchg
jecxz
jecxz
in
out
in
int
fdivrs
sti
loope
repz
sbb
in
sti
xor
xchg
shr
lret
jmp
int3
out
sarb
out
in
in
ret
std
cli
lret
mov
std
icebp
fisttpll
xor
stc
out
lock
lret
fcmovbe
call
sti
lret
xchg
sub
into
shl
rcr
cmp
xor
xlat
mov
enter
mov
lock
loop
out
in
test
ljmp
iret
fcomp
faddl
fcomp
icebp
enter
xchg
fisubrs
hlt
cmc
ss
xlat
lock
test
icebp
decb
call
jmp
out
call
into
sarl
into
fdivl
stc
fdivp
loopne
test
cmc
mov
clc
mov
xchg
ror
into
jmp
hlt
cmp
jmp
cmp
loopne
fcmovne
in
mov
mov
sti
int
aas
cmp
in
hlt
mov
dec
lret
call
xlat
hlt
lock
std
in
shl
mov
inc
jmp
aam
repz
ret
ss
icebp
rcl
stc
incb
out
out
mov
fmull
ljmp
fmul
int
fsincos
sbb
not
xlat
aas
test
ret
iret
int
ret
jmp
ss
aaa
cmp
aas
fucom
cmp
std
add
in
fninit
xchg
xchg
rcl
out
aas
int
repnz
clc
out
icebp
cmp
in
aad
mov
fcomi
loop
hlt
fisttps
ljmp
shl
cli
not
sti
addl
mov
iret
sub
cmp
hlt
in
loopne
adc
leave
cmc
jecxz
jecxz
scas
shr
je
add
rol
lret
ror
int
aam
mov
es
stos
jg
fiaddl
jle
test
in
loope
lock
out
in
in
xor
cmp
jecxz
out
jmp
fcmovnb
mov
loop
iret
dec
xor
out
icebp
enter
fcomip
iret
ret
test
rol
enter
jmp
in
in
xchg
fdivr
lret
clc
repz
out
neg
iret
rolb
aad
leave
sti
dec
xchg
mov
leave
in
fldln2
fcmovnu
or
lock
fcmovbe
ds
rol
mov
loope
xchg
ficoms
sti
ljmp
in
ret
cmp
cli
popl
lea
call
cmc
repnz
fdivr
test
cmp
mov
rol
xor
lock
xlat
shl
ds
or
int
fiadds
in
lea
jmp
in
xlat
cmp
cmc
in
repnz
in
loope
push
mov
out
call
addb
fdiv
cmp
icebp
lret
ljmp
test
loopne
fdivrp
addl
cs
in
jmp
fcmovbe
loopne
flds
jmp
in
out
in
addl
iret
rol
fidivrl
fcomi
fadds
xchg
std
fsubr
fdivr
xchg
out
out
aad
out
stc
sar
cld
leave
repz
repnz
rol
aam
filds
iret
ss
aaa
fdivr
sar
icebp
fldl
addl
stc
call
fucom
test
jecxz
out
sar
in
shl
stc
aas
sbb
sti
loope
loop
dec
mov
fstl
out
cmp
rcl
ret
fiaddl
test
mov
roll
fcomp
xor
hlt
idiv
hlt
cmpb
test
loop
loop
mov
clc
cmp
aad
fnstenv
loope
aam
addb
aam
stc
loopne
jmp
add
out
int
shr
aas
stc
leave
iret
sbb
fidivrs
hlt
in
fcos
lock
icebp
xchg
lret
ljmp
shl
loope
mov
mov
cmp
jbe
jmp
int
lret
lret
int
mov
pop
xchg
xor
jle
lret
les
mov
enter
fdivr
test
lret
fdivrp
sti
xlat
adc
cmp
int
add
nop
rol
into
shll
aam
divb
cmp
lock
sar
iret
rcr
rol
fdivrp
stc
sti
mov
repz
ror
shl
out
rcl
clc
fdivrl
loope
loop
hlt
std
stc
in
int
call
test
idivb
lret
fucomi
fcmovu
int
ret
jecxz
std
call
fdivp
int
mov
xor
enter
aaa
int
jmp
repnz
xlat
mov
jmp
test
lock
ret
shll
xor
aam
jmp
cmc
rolb
out
xlat
test
xchg
out
mov
loop
repnz
stc
enter
hlt
test
fnstcw
mov
testl
aaa
jmp
jmp
sti
lret
sarl
ds
filds
out
sub
test
jmp
jecxz
stc
out
cmp
cmp
aaa
rcr
std
out
fcmovbe
leave
nop
std
out
filds
lret
xor
fadd
cmp
cmc
in
aam
lret
jecxz
lock
rorl
call
out
test
sbb
rcl
std
testl
cld
xchg
out
repz
aam
out
idiv
ss
loopne
out
test
fcomip
xchg
std
sub
stc
loop
fdiv
lock
in
in
xor
icebp
out
loopne
cmp
fld
leave
leave
aam
fdivr
into
xchg
fcmovnu
icebp
xor
jmp
in
iret
sti
out
int
fpatan
out
iret
into
adc
out
addl
xor
cmp
rol
cmp
repnz
enter
sti
xchg
repz
fmul
repz
ror
ret
in
out
sub
cld
jmp
idiv
loop
jmp
jecxz
cmp
jmp
fistpll
rcr
lock
rcl
shl
decb
out
iret
fucomip
lock
fxtract
imul
cmpb
lock
in
out
loope
xchg
leave
icebp
cmp
aam
out
not
out
stc
ror
loop
jmp
ror
ror
aad
inc
push
mov
jle
jecxz
in
fcomi
out
into
in
in
rorl
sar
int
faddl
ret
fcomp
fstp
stc
incb
cmc
jmp
xor
xor
cmc
fcmovne
out
rol
cmp
shl
call
stc
mov
test
lock
not
jmp
jmp
cmpl
fcmovbe
loopne
xchg
aad
out
lock
cmp
shl
sarl
shr
hlt
shr
in
fucomp
mov
test
call
fucomip
sbb
cmc
jecxz
faddl
in
fcomi
cmp
lock
sarb
shr
ljmp
idivl
repnz
leave
std
loopne
lret
filds
ljmp
out
idiv
shl
fucom
mov
mov
out
shl
jecxz
repz
xchg
rol
ror
in
out
aad
rcl
xlat
fldln2
jecxz
sti
xlat
in
cld
fmul
roll
ss
xor
ljmp
int
std
roll
jmp
clc
enter
in
jecxz
aaa
hlt
shr
shr
shl
cmp
cli
in
cmp
aas
aas
cmc
xchg
test
loop
iret
in
clc
fsincos
xor
cmc
fsubr
push
out
fcmovu
fidivrl
and
lret
cld
xchg
mov
das
jmp
xor
ljmp
repnz
neg
mov
nop
icebp
bnd
xor
lret
rcr
int
test
fadd
clc
fisttpll
fcomip
mov
xor
stc
filds
xlat
shl
ret
fsubp
fcmovu
lds
shr
out
leave
call
rcr
rol
repz
out
fmul
lds
leave
lret
loop
das
lret
enter
jmp
loop
faddl
cld
aam
jmp
in
xchg
in
in
ljmp
fdivr
sti
int
ret
push
clc
xchg
fcmovb
jmp
into
fsubr
addl
leave
int3
xlat
fmul
stc
aam
fdiv
ffree
rcr
jecxz
fdiv
call
out
icebp
int
shlb
ror
cmp
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
pop
iret
sbb
push
jg
pop
add
in
loopne
aam
add
cld
jmp
cmp
fmulp
loope
enter
iret
xor
int
repnz
iret
out
sub
in
jmp
nop
or
in
xchg
aam
les
xor
divb
ror
int
icebp
loop
fcmovnu
ror
xchg
std
fimull
dec
aaa
stc
clc
fxch
cmp
cmp
hlt
testl
fiadds
xchg
int3
int
in
test
icebp
repnz
in
sar
in
jecxz
ret
cld
orb
int
faddp
out
shll
call
shr
aad
loope
test
ret
cld
fstp
lret
mov
jmp
cmc
fmul
cmp
fdivp
sti
loope
loopne
faddl
clc
or
iret
lock
shl
xor
fldl2t
in
aad
aam
and
mul
faddl
jmp
sub
out
loope
in
cmc
cli
lret
aam
out
loopne
neg
fscale
xlat
fisttpl
int3
jecxz
mov
out
lock
enter
ss
aad
aad
ret
mov
cld
test
out
fcmovbe
out
or
iret
div
test
aas
out
movb
xchg
sub
aaa
out
in
cmc
cmp
test
in
rcr
leave
addb
testb
aam
enter
fsin
fscale
xchg
loope
xchg
mov
repnz
lret
out
aam
iret
sar
lock
jmp
xchg
hlt
in
aam
call
in
xchg
xchg
xlat
hlt
in
cmp
cmp
icebp
cmp
repz
fcmovu
in
std
lret
lret
cld
cmp
enter
xor
hlt
loop
cmc
ss
fsub
leave
rol
cmp
xchg
out
mov
leave
shr
out
cmp
hlt
cmc
call
loope
mov
xor
loopne
test
loop
loopne
ret
leave
ret
fldcw
fdivl
sarb
neg
hlt
push
sar
stc
rcl
lret
decl
xchg
test
xor
into
in
xor
cli
cli
sti
stc
ds
cmp
aad
enter
fcomp
call
ss
clc
fld
int
hlt
ljmp
cld
clc
not
xlat
orl
hlt
out
mov
in
fidivs
repz
adc
addb
leave
repnz
int
fildll
shl
ret
fdivrl
in
icebp
ds
loop
cmc
ret
clc
cmc
ljmp
xchg
int
mov
in
aam
hlt
hlt
in
xor
std
aam
cmp
fcmovnb
ret
xchg
repz
xchg
ror
div
int
fdiv
ds
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
clc
scas
pop
mov
pop
add
xlat
push
jecxz
test
dec
jmp
int3
leave
into
test
loopne
aas
shl
ss
in
in
cmp
iret
les
jmp
mov
rclb
aam
aad
out
aad
hlt
aas
xor
sar
cmp
out
stc
stc
jmp
loop
call
jmp
fnstcw
cld
fdivp
repz
out
aad
fcomip
test
ljmp
test
call
ljmp
cld
call
mov
xor
xor
ds
sar
test
cmp
cld
repnz
xlat
sbb
mov
icebp
in
clc
int
stc
loopne
aas
int3
icebp
aam
cli
fsubrp
loop
iret
fsubrp
int
int
lret
out
sar
fucomi
fcmovnu
sar
sarl
mov
sti
loop
mov
cmc
xor
hlt
lock
jmp
fdivrl
cmp
cmc
std
mov
ljmp
in
into
in
out
ror
xlat
cmc
int
xor
stc
xchg
cld
rcl
aad
orb
ror
loop
fnstenv
in
repz
addl
fsubr
jecxz
iret
shl
adc
sarl
lret
lret
loop
aas
repnz
ljmp
in
shl
out
ret
jmp
xor
stc
jmp
aas
sti
clc
in
iret
test
stc
iret
fcmovne
mov
mov
add
and
fdiv
fcmovne
sti
xlat
iret
icebp
or
leave
mov
mov
jmp
mov
rcl
lret
rcl
xor
idiv
leave
cmp
adc
into
sar
leave
fstp
fimuls
roll
loop
xor
in
repz
loopne
cmp
ljmp
out
loopne
test
hlt
divb
loop
xlat
mov
sar
mov
fcmovnbe
out
xchg
stc
xor
in
cld
sbb
cld
jecxz
ret
jmp
std
flds
out
lock
xor
hlt
fsubr
std
xor
cmp
cmp
leave
testl
decb
repnz
cmp
repnz
fistpll
out
clc
jecxz
vpmulhw
mov
shl
nop
loop
out
in
call
cmp
adc
xlat
std
cmp
int3
mov
jmp
jmp
fdivrl
cmp
ret
aam
cli
repz
loopne
loop
nop
xchg
xchg
loop
aam
out
ljmp
rolb
ret
mov
lret
xchg
icebp
jmp
in
mov
lock
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
jno
shrb
add
xlat
jmp
int
out
stc
cmc
flds
shl
leave
ljmp
lock
aad
idivb
aas
cld
cmp
ret
fnstcw
std
leave
xchg
out
mov
rcll
cmc
int3
fcmove
in
sar
stc
stc
fcomip
clc
sti
in
and
in
leave
ret
out
nop
repnz
xlat
jmp
aas
cmp
fdiv
fdivr
jecxz
in
call
hlt
lret
test
out
out
test
out
stc
fldz
fnstcw
add
stc
test
orb
xor
ret
ljmp
rcl
aam
fcomi
roll
movb
repz
loope
xor
std
enter
addb
clc
repz
lret
std
std
adc
xor
xor
in
idivb
aam
in
rolb
fdiv
loopne
mov
hlt
mov
aam
jecxz
xor
in
in
int
cmp
aam
out
shl
loope
shl
filds
vpshld
out
ret
int3
fnstenv
clc
ljmp
test
out
jecxz
fimull
adcb
mov
repz
lock
stc
fucomip
call
roll
stc
loop
in
int3
cmp
int
fdivrs
fldln2
xlat
xchg
ret
out
lret
enter
xchg
aam
aaa
cs
cmp
repnz
sti
sarl
orb
fucom
xacquire
stc
test
rol
test
neg
in
mov
out
loope
out
fimull
hlt
ljmp
cli
sti
repnz
rcl
lret
in
ljmp
out
xor
jmp
int3
fidivrs
fildl
ret
xchg
filds
xchg
mov
test
jecxz
in
sarb
cmp
enter
cmp
aas
testb
cli
jmp
lret
lock
out
fdivs
icebp
in
xor
out
ror
lock
fcmovu
sti
out
ds
addl
sti
mov
in
test
cmp
cmp
cmp
in
cmp
iret
in
test
call
call
mov
ljmp
lock
idiv
cmp
stc
clc
out
mov
repnz
hlt
loope
in
xlat
fcomi
fistpll
leave
cmp
sti
push
clc
out
jmp
ret
fcmovne
mov
xchg
out
sub
aam
out
fdivrp
sarb
sub
aas
out
lret
in
fsub
cld
test
loop
std
xchg
ror
stc
repz
stc
stc
hlt
cmp
lret
loop
shl
sti
cmc
in
jmp
rcl
mov
into
in
dec
or
jmp
ret
ror
aad
and
jmp
jg
pop
add
xor
iret
aad
clc
in
cmp
aad
fdivrs
fsub
jmp
int
iret
ss
in
xlat
icebp
out
aas
fnclex
xlat
or
mov
xchg
nop
int3
jmp
icebp
xor
in
fst
fcmovnbe
cli
roll
lret
aas
sti
fldl
in
cmc
lret
xor
jmp
out
test
std
icebp
cmp
ret
iret
fiaddl
icebp
cs
shl
xor
idivl
aas
clc
frstpm(287
mov
loop
lret
fucom
in
xchg
loop
out
ss
aam
into
cmp
aaa
loope
repnz
out
hlt
aad
mov
fucom
cld
mov
jecxz
int3
mov
repnz
leave
aaa
neg
jmp
std
ljmp
fiaddl
jmp
enter
out
rol
jmp
out
jmp
aam
std
test
in
into
out
enter
aad
ljmp
repnz
shl
stc
cld
and
sti
jecxz
ret
xchg
xchg
into
in
shl
jmp
lock
loopne
cmp
loop
sbb
or
xchg
out
rcr
shll
out
stc
std
aas
fucomi
mov
clc
sub
int3
jmp
cmc
mov
jmp
xor
repz
clc
in
jmp
into
icebp
cmp
inc
or
nop
sti
leave
cmp
shl
cmp
xor
icebp
jmp
jmp
repnz
test
enter
in
jmp
rorb
jecxz
ss
hlt
aad
sti
iret
test
lock
push
xlat
cmp
cli
std
icebp
out
xlat
clc
ret
enter
ljmp
loope
neg
fmul
leave
xchg
enter
fcmovbe
shlb
out
fcomi
ljmp
loope
adc
loope
iret
fcomi
out
lock
cld
xor
cmc
aam
mul
ret
lock
out
fimuls
ljmp
out
icebp
sti
cmp
aam
out
loopne
fadd
std
call
fdivp
loop
loope
mov
loope
lret
fadd
in
ds
cmp
cld
iret
sarb
test
test
mov
cld
fucomi
jmp
mov
lock
enter
not
stc
cmp
shll
xlat
vmovq
cli
fisttpll
xchg
aad
repz
fcmovnbe
enter
rcl
fcmovnbe
mov
rol
lds
xchg
lret
not
shr
lret
xor
enter
roll
in
cld
jmp
xchg
cmc
aam
into
out
lret
aaa
in
out
ror
fadd
sarb
ret
rcl
fdivp
addl
int
dec
or
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
lret
sbb
xor
mov
jle
lret
shr
jmp
fdiv
cmp
std
testb
enter
int3
xchg
shlb
das
in
enter
aaa
cmp
hlt
cli
cmp
iret
test
cmp
lret
fists
ss
stc
in
loopne
cmp
cld
aad
xchg
fsub
mov
sub
cld
popl
xor
iret
cmp
cmp
hlt
xchg
sti
fdecstp
sti
mov
or
lret
xor
out
ss
iret
cmp
int
cld
out
rcr
hlt
in
cli
shl
cld
ror
orl
jmp
int
ret
aad
int
fcomi
cmp
loopne
or
loopne
aas
addl
jmp
xchg
shr
xchg
mov
xor
sub
call
std
sarl
add
ljmp
call
sub
aad
out
xor
cmp
out
std
rolb
in
out
xchg
jmp
loope
jecxz
stc
in
repz
jmp
sub
mov
cli
leave
rcr
lret
loopne
hlt
loopne
fdivrp
repnz
nop
repnz
repz
rcr
cmp
sti
jmp
ds
sti
rorl
stc
xchg
lock
aam
in
out
cmp
int3
fst
idivb
filds
in
loop
addb
lret
ror
call
repnz
sti
test
idiv
lock
xchg
xchg
loopne
lock
jmp
lret
sarb
xlat
in
aas
mov
test
addb
iret
clc
cmp
out
cmp
out
and
call
lock
ffree
mov
test
test
int
aaa
lock
cmc
lock
test
jmp
loope
sti
out
rol
fdiv
aam
rcr
icebp
testb
add
in
and
shrb
in
call
icebp
cmp
jecxz
icebp
repnz
stc
ret
nop
mov
out
clc
in
fcmove
repz
xor
sarl
hlt
jmp
out
mov
test
rol
lret
in
cmp
loopne
shl
hlt
and
enter
fsub
into
int3
shl
cmc
jecxz
in
cmp
lock
repz
sar
shl
jecxz
call
into
mov
mov
repz
test
cmp
cmp
loop
in
ljmp
and
int
into
aam
lret
cmp
ss
repz
ds
fucomp
call
enter
jbe
add
cmc
add
add
aam
aas
aad
iret
aam
adc
mov
mov
cmp
jle
add
fsubp
xor
iret
cmp
xor
iret
call
incl
ror
cli
inc
fcmovb
in
repnz
mov
sub
out
hlt
aam
leave
cmp
idivb
clc
cmc
cld
test
leave
loop
test
xchg
icebp
xor
lret
sti
in
call
cli
add
stc
roll
in
ljmp
in
lock
aam
aad
loope
add
jmp
into
int3
fcmovu
nop
in
iret
xchg
clc
jecxz
in
enter
call
cmp
mov
leave
fimull
mov
shl
int
imul
fidivl
loopne
fcmovnu
out
mov
lock
icebp
repnz
test
fdivr
cli
leave
aas
std
out
loopne
out
loopne
cld
loopne
nop
orl
xor
sbb
ds
loope
test
std
out
fmull
repz
sti
enter
cld
iret
cmp
sti
out
ljmp
in
mov
cmp
ljmp
cmp
cmp
mov
cld
in
jecxz
in
in
out
iret
icebp
call
int
sti
filds
xchg
in
out
stc
in
std
repnz
faddl
loop
ljmp
incl
cmp
fadds
and
imul
xor
jmp
rol
shl
cmp
sar
rol
div
xor
stc
in
test
into
out
xor
clc
lock
cmc
lret
cld
loop
repz
loop
loop
lock
mov
call
aaa
in
in
out
cmp
loopne
les
add
int
loopne
adcb
das
cmp
lret
rolb
cli
repnz
std
aam
test
ret
call
out
mov
icebp
ss
jmp
imul
loope
stc
cli
icebp
mov
clc
shl
in
icebp
out
xor
clc
fnstenv
cmp
sub
lock
test
loopne
fxch
fldlg2
in
fiaddl
test
lret
cli
xor
xor
shl
icebp
hlt
jecxz
fimuls
in
icebp
int
shl
lock
cmp
int3
shl
out
faddl
jmp
jecxz
xchg
jmp
iret
clc
divl
icebp
sti
xorb
lock
cmp
out
ret
enter
test
stc
out
fmulp
jecxz
popl
aam
leave
out
out
cmp
ret
ret
ret
std
jmp
out
mov
xlat
aad
fdivp
lret
aaa
aaa
clc
and
fdivr
idiv
in
mul
in
out
je
mov
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
in
loopne
xchg
repz
in
rol
test
aam
sar
fdivr
aam
fcom
cli
sub
jecxz
nop
mov
out
aaa
repz
loopne
cli
cmp
aas
add
xchg
in
adc
rol
cmp
sub
cmp
out
in
loopne
xlat
fcomp
lock
ret
ljmp
enter
cmc
loopne
stc
loop
cmp
cli
xorb
int3
xorl
iret
mov
aad
std
out
cmp
out
xlat
xor
lret
out
clc
xlat
fcmovbe
fiaddl
cli
movb
jecxz
call
shl
loop
call
loopne
xlat
ljmp
enter
cli
sub
mov
sti
lock
lret
xlat
ljmp
in
stc
cmp
cmp
loope
cli
sub
leave
call
repz
out
cmp
xor
icebp
fmulp
fmul
loope
repnz
roll
loop
sbb
loopne
xor
jmp
xlat
cli
lock
repz
bnd
mov
flds
xchg
mov
clc
rcr
lret
std
out
loop
sarb
in
fcmovb
xchg
into
ficoml
jecxz
in
into
test
clc
cmp
cmp
cmp
roll
jmp
mov
cli
fidivrl
lock
cli
in
ror
clc
ret
shl
mov
fldl
xchg
xchg
xor
out
out
cmp
jecxz
rolb
ret
incl
jmp
loopne
jecxz
shl
jmp
test
cmp
jecxz
jecxz
rcl
mov
mov
enter
in
cmp
fsubrp
icebp
cmp
jecxz
repz
repz
call
xchg
lret
mov
out
div
lret
xor
stc
sarb
jmp
or
icebp
test
shr
out
in
iret
lret
hlt
cld
icebp
fnsave
fildl
fcom
cmp
in
mov
fists
aad
shl
xor
xlat
loop
iret
into
rcr
xlat
movl
loope
hlt
into
loope
repz
jmp
lret
cmc
loop
ret
testl
incl
shl
lret
out
ljmp
cmp
ljmp
fxtract
add
sbb
ljmp
iret
rcr
iret
in
shl
aam
int3
in
sti
cmc
ds
repnz
xchg
fldlg2
in
xchg
fcoml
int3
aad
stc
out
lock
sub
cmp
aam
xchg
ds
xlat
ljmp
nop
xchg
test
jmp
enter
icebp
int3
fdivrs
xlat
cmp
cld
rcl
mov
aam
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
test
in
in
adc
loop
out
iret
hlt
xlat
cmp
shl
in
repnz
xchg
ljmp
xchg
shr
out
cmp
fcmovnb
ds
sti
enter
lret
lock
xchg
adc
xor
cmp
fnstsw
fcomi
rcr
loopne
call
test
iret
sub
cmc
icebp
sarb
cmp
aas
fdiv
repnz
call
ret
out
int
fcmovu
ljmp
fcmovbe
clc
fcmove
aam
sar
aam
repz
mov
test
sub
jmp
cmp
int
fcmovnu
out
cli
in
roll
fiadds
clc
lock
aam
shr
lret
cmp
in
std
cli
ljmp
sarb
aam
mov
xchg
call
xchg
xchg
clc
ss
int
iret
shr
repnz
cmc
fcmove
cmp
xlat
loopne
loopne
clc
fninit
fistl
in
fdiv
in
int
repz
aaa
cmp
cld
in
test
rorl
mov
loope
xor
call
in
fcmovnb
cmpb
sti
in
sti
lret
jmp
iret
clc
call
call
call
fdivrp
rcl
ljmp
mov
cs
leave
ret
in
leave
enter
adc
aam
add
fcmovu
fdivrp
test
in
test
aas
xor
in
ret
aam
aam
jmp
cmp
xlat
shl
call
enter
cld
in
nop
hlt
int
aam
leave
xor
fdivr
jmp
out
xchg
shr
addb
shl
lock
sti
cmp
in
aam
fchs
xlat
test
in
out
out
sub
into
shr
cmp
hlt
rcr
enter
aas
call
ljmp
ror
xor
lret
aad
aaa
rcr
in
sti
std
stc
sti
jmp
aad
and
out
xchg
xchg
cmc
call
fsin
cli
test
fdivrl
xlat
dec
mov
mov
xchg
rcl
in
ror
in
repnz
shl
call
xor
mov
enter
int3
shrb
out
aad
repz
div
jmp
icebp
sar
aad
jmp
or
xor
in
jmp
aam
in
cmp
fidivrs
cmc
mov
xchg
adcl
rcr
out
shl
fcmovnbe
aad
fcomi
out
jmp
sub
rcr
rcl
idiv
lock
icebp
cli
cmp
aam
jne
pushl
mov
jmp
rcl
int3
lret
fst
fstl
mov
jg
pop
add
fldpi
lret
ret
in
int3
loope
shr
xor
sarl
repz
stc
fdivr
orl
das
clc
iret
stc
enter
ror
cmc
stc
cmc
cmp
repnz
addl
cld
xchg
mov
repz
xor
aaa
cmp
repz
jecxz
loopne
fucomip
lret
xchg
decl
out
int
rcl
cli
leave
fnstcw
hlt
in
jmp
orl
loope
clc
jecxz
xor
out
rcl
cmp
rol
out
loope
xlat
mov
adcb
shl
aaa
shl
fcom
in
sar
fdivp
cli
sub
lret
in
test
out
fdivs
shl
call
jmp
jecxz
xchg
jmp
fdivr
jecxz
call
in
in
cmc
fnsave
out
cmc
cmc
shl
cmc
fadd
cmp
jmp
loope
icebp
xchg
ret
aad
hlt
repnz
cmp
sti
shl
cld
cmpl
addb
adcb
xor
repnz
loope
xor
cmp
sbb
lret
xchg
xchg
in
ret
fdivrs
into
int
cmp
aam
out
icebp
leave
mov
loopne
lock
test
sub
in
out
out
shr
icebp
ret
adc
fisttpl
xor
int3
neg
cli
xor
ror
fcmovne
shl
xlat
out
rcr
xchg
in
loope
fimull
in
cld
xchg
adcl
xlat
lock
ror
neg
fadd
in
orb
cld
mov
out
mul
xor
out
lock
cmp
xor
rcl
aas
lock
fcomp
ljmp
int
mov
lock
sar
int3
fcmovu
cmp
aam
in
aam
mov
mov
sti
shr
iret
jmp
jmp
cmc
stc
leave
fcmove
enter
fcomi
not
std
rcr
fsin
in
jmp
lock
xchg
ror
jecxz
out
xlat
in
jmp
lret
ror
icebp
rcl
in
jmp
addb
loopne
shll
into
repz
xor
lret
lret
loope
in
xchg
jmp
cld
iret
out
repnz
out
repnz
fsubr
out
xor
fadd
sar
icebp
in
enter
int3
out
jecxz
int3
ret
enter
test
imul
call
push
cld
lock
out
mov
mov
roll
in
fadd
out
stc
stc
fcmovb
repz
cmp
inc
aam
loope
mov
repnz
adcb
ror
hlt
fmulp
xlat
shr
addb
add
cmc
add
add
rol
xlat
vpaddusw
cmp
lret
cmp
and
add
mov
mov
rcr
les
jmp
fcmovbe
lret
leave
lret
int
jecxz
aad
xlat
fmul
loope
filds
mov
ret
cmp
ljmp
fdivr
cmp
xchg
lock
call
xchg
in
xlat
lock
cmp
loopne
cmp
faddp
test
fucom
loopne
cmc
jecxz
ror
fsubrp
jmp
aas
call
icebp
sti
or
fcmovnb
xchg
jmp
lock
flds
lret
aam
aam
ljmp
addb
out
xchg
repz
enter
ljmp
fyl2xp1
cli
ret
ret
fisttps
int3
out
sarl
ss
in
shl
xlat
jmp
rcr
rol
aam
in
flds
ljmp
clc
sarb
out
stc
lock
in
test
clc
fdivr
enter
call
fsub
test
not
fdiv
cmp
out
xlat
xor
add
cmp
jmp
test
shl
xor
sti
cmp
cmp
fadd
loope
in
in
sub
iret
out
decl
sti
repnz
ss
sti
loopne
testb
jecxz
lret
xor
sub
shl
in
repz
int3
icebp
cli
in
sbb
in
clc
out
into
in
into
std
pause
out
enter
out
cli
rcl
aad
iret
lret
loope,pt
bnd
fdivp
lret
dec
xchg
into
stc
lret
sti
clc
icebp
cmp
stc
cli
fcom
cmp
fldl
xchg
test
xchg
rcl
xor
cmp
aad
xchg
icebp
in
in
lret
ljmp
leave
icebp
clc
in
int
aas
cmp
fstpt
fcomip
ret
in
rorb
cmpl
xor
std
aam
out
aas
fdiv
xchg
mov
faddl
out
div
das
in
ljmp
shl
icebp
cld
loope
out
sti
int3
std
fsubp
xchg
aam
nop
ss
xor
cli
aad
fcmovnbe
into
int
int
repz
aad
rcr
int3
lret
sub
icebp
xchg
sub
hlt
sarl
aad
jecxz
rolb
fucomp
in
fisttps
rcl
shr
jmp
xor
roll
shr
loope
fiaddl
jmp
loop
clc
icebp
icebp
fcomp
out
sarb
test
shl
aam
aad
or
ljmp
ljmp
xor
out
jecxz
mov
jmp
iret
aam
aas
aad
iret
aam
ljmp
ret
xlat
pop
or
jle
adc
rol
cmp
xchg
xor
jecxz
neg
fnstsw
loopne
xlat
jecxz
loopne
xchg
fidivrs
in
out
int
xor
in
aam
cmp
cmp
cmp
in
sar
rol
loop
ds
in
rol
shr
fdivs
xor
ds
in
not
xlat
ffree
ljmp
fadds
loop
cmp
in
fcmove
sar
in
enter
stc
stc
fdiv
in
jecxz
fld
jmp
mov
xchg
cs
lock
repnz
fcmovnbe
neg
loopne
cld
jecxz
shr
cli
in
fldl
rorl
out
aaa
fucomi
cmp
test
clc
idiv
jmp
clc
lret
mov
hlt
stc
cmp
aad
addl
cmp
stc
enter
test
xor
xor
in
lret
xlat
xor
loop
xchg
fildl
enter
icebp
call
xor
xor
lret
aaa
repnz
loopne
icebp
iret
fsubrp
aam
fmul
sti
mov
fstp
test
mov
sub
idiv
cli
or
loope
std
fadd
rorl
orl
xor
std
aam
out
out
std
shr
repnz
leave
cld
cli
mov
test
cmc
lret
lret
repnz
aas
shl
iret
roll
in
xchg
addl
repz
ret
leave
fmul
hlt
aas
fpatan
ret
ret
idiv
out
cli
sbb
test
in
in
shlb
shr
aaa
stc
aaa
xorb
icebp
sub
fpatan
loopne
test
fptan
in
shr
das
xor
ss
fdiv
cmp
loope
shr
xlat
cld
jecxz
ljmp
loop
fiadds
leave
shl
out
cld
in
fmul
idivl
loope
loope
out
clc
vpandn
cli
clc
loop
nop
loope
lds
fdivrs
cld
repz
sar
cmp
rcr
in
iret
fmul
std
test
out
ljmp
xchg
ror
fldz
xlat
aad
fxtract
cmp
in
fld1
xchg
dec
fmuls
and
enter
aam
clc
xor
in
aad
into
icebp
stc
in
repz
cmc
cld
jmp
sti
fiaddl
cmc
fnstenv
call
idiv
clc
cld
clc
out
ffreep
inc
loopne
in
enter
cli
repnz
mov
xor
xor
aad
aaa
sti
enter
in
aam
ret
lea
fucomip
icebp
test
ret
int
cmc
iret
stc
leave
sarl
sar
into
loope
adc
std
int
fists
clc
cmc
icebp
int3
sar
cmp
mov
mov
mov
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
sti
ret
push
jg
pop
add
aas
shl
icebp
push
aam
in
sti
loopne
int
fists
xlat
in
out
fcmovnbe
test
bnd
clc
mov
sti
cli
cli
iret
jmp
icebp
in
xor
xor
testb
loop
std
cld
xchg
std
std
mov
stc
in
mov
loopne
jecxz
cmc
int
repz
xor
fsub
adc
lret
jecxz
decl
cs
cmp
repz
loope
lret
clc
iret
idivb
rcr
in
fsubr
mov
mov
in
fisttpl
jmp
lret
in
sti
sti
repz
rcl
ret
sti
cmc
xchg
repnz
mov
out
stc
shll
repnz
loopne
cmc
repz
shl
cld
bnd
xchg
jecxz
in
int
shl
xor
in
lret
cmp
sarl
rcl
rorb
fcmovbe
test
iret
out
call
in
cmp
std
clc
cld
rol
repz
jmp
call
dec
xor
leave
xlat
in
cmc
cmp
rcl
test
stc
fsincos
leave
addb
stc
in
into
shl
imul
ret
jmp
iret
out
fdivr
in
add
fadds
jmp
out
ss
cli
std
iret
cld
loopne
ret
out
mov
roll
jmp
fdiv
ljmp
stc
filds
fidivrs
mov
or
out
mov
jecxz
aad
xor
xor
aaa
repz
out
in
std
jecxz
enter
in
fld
xchg
fildl
rcl
sti
sarb
in
shl
loopne
stc
cmp
mov
test
stc
fadds
icebp
fdiv
out
lret
xor
clc
sar
rcr
hlt
out
aam
fdivrp
ret
sti
fiaddl
icebp
jecxz
in
enter
hlt
aam
cmp
fscale
iret
fdivr
xchg
rcl
aam
in
test
int
xor
shl
imulb
jmp
out
shl
repz
cmp
test
out
loopne
mul
mov
loop
iret
lock
fsubr
fdivrs
fstp
xlat
repz
jecxz
aad
loopne
mov
mov
addb
sub
ss
xor
xchg
mov
not
leave
out
fcomp
fst
popl
out
cmp
fnsave
in
repnz
icebp
fstp
loop
ljmp
xchg
ljmp
cs
in
cmc
fstpt
in
into
cmp
adc
xchg
jmp
iret
xchg
decl
aad
fdiv
fdiv
aam
fcom
out
ret
xchg
int3
out
xchg
into
ficoms
jmp
cmp
testl
ror
fst
mov
subb
push
jg
pop
add
out
neg
std
aad
movl
out
fcmovnu
icebp
shl
aaa
in
aad
fidivrl
std
repnz
enter
fldl
in
jecxz
repnz
lock
xor
cli
iret
cmp
std
ret
loope
leave
aam
loope
out
lea
xor
cmc
std
lock
out
xchg
call
lret
loopne
jmp
jmp
xchg
hlt
xor
clc
aam
fidivrs
jmp
aas
rol
ljmp
mov
aaa
aad
ss
cli
aad
ret
ret
fcmovnb
leave
jmp
int3
cld
sti
mov
cmc
divb
int3
cmp
xor
cmp
cmp
xlat
jecxz
fdivrp
dec
clc
mov
mov
test
call
aam
cmp
adc
repz
fdiv
add
leave
mov
test
lret
test
xor
aaa
int3
fistpll
sti
ret
mul
addl
fdivp
fisttps
jmp
fcmovnbe
icebp
not
cld
xor
icebp
shl
mov
clc
sbb
xchg
xabort
aaa
in
sti
cmc
enter
fcmovb
cld
in
hlt
ret
xchg
std
shl
sub
xlat
stc
std
cli
enter
in
ss
out
repnz
stc
cmp
iret
cli
loopne
test
xchg
icebp
xor
cli
repnz
fmul
out
cmp
shl
rol
rol
test
mov
fisttpl
out
jecxz
icebp
mul
xor
xor
sar
fcmovb
test
out
adc
clc
test
mov
mov
fstp
test
ret
lock
lds
jmp
sarb
fdiv
xlat
ret
rcl
aad
testl
xchg
loope
out
out
cmp
sarl
loopne
fldl
lds
rorb
aaa
xor
cld
repnz
test
repnz
adc
lret
jmp
mov
sti
lock
jmp
into
cmc
aad
cld
lock
fxch
fsubr
addl
xchg
mov
loopne
rcl
xor
jmp
test
repz
aad
neg
fmull
lock
repnz
jmp
loop
cmp
jmp
in
ret
into
std
jmp
int3
fsubr
ljmp
jecxz
rcr
in
sti
aad
fdivrp
xchg
orb
aaa
xor
aam
cmp
call
rcr
repnz
shl
test
in
adcl
aaa
xor
in
repz
call
stc
fsubrp
shl
fcos
std
shl
incb
xor
movl
test
or
add
cmc
add
add
aad
aad
int
jge
in
and
adc
and
jle
add
fcmovnb
int3
aam
ljmp
xlat
shl
ret
ret
fstp
in
mov
out
xchg
in
lock
lret
in
std
shl
aas
repz
out
sti
in
jecxz
cld
iret
mov
cmc
test
fsubr
cmp
iret
sarb
aas
fcomp
out
addb
fimuls
xchg
in
lret
icebp
out
in
aam
aas
repnz
ret
shl
aas
xlat
ljmp
test
and
iret
hlt
aad
shl
aaa
clc
fildl
call
jecxz
std
ret
iret
jmp
out
icebp
ss
xor
in
sar
fidivl
cmp
test
loope
jmp
ljmp
aad
int
mul
leave
repnz
stc
out
roll
ret
fsubr
jecxz
jmp
enter
nop
jmp
cmc
mov
fucomi
cld
fildl
xchg
aad
cli
sub
call
out
in
rcl
ds
ror
fsub
iret
xor
out
stc
leave
test
hlt
in
xchg
lret
out
xor
lret
lds
aad
in
icebp
cld
cmp
jmp
into
shl
test
mov
shl
xor
cli
cld
std
in
fmulp
loop
aas
leave
cld
in
out
mov
in
xor
in
in
out
movl
call
lret
enter
out
in
loop
out
in
repnz
call
clc
out
in
xchg
fdivrp
loop
in
fsubr
enter
xchg
fucomip
clc
test
out
repz
sarb
shl
aas
cli
icebp
cmc
loop
fadd
xlat
out
ljmp
lock
out
clc
sarb
iret
ljmp
rorb
cld
stc
xchg
addb
int
ss
stc
cmp
std
ljmp
shl
test
mov
loopne
fisttps
shr
repnz
cmc
cmp
cmp
sbb
loop
in
ret
clc
iret
loope
repz
xchg
xchg
xor
fcmovbe
hlt
cld
xor
out
fcmovne
enter
clc
fcmovu
xchg
mov
jmp
aad
xlat
fxam
sarb
loope
stc
divl
cmp
cli
movb
test
ljmp
xor
lret
ds
idivb
fcmovnb
iret
fcomi
xor
mov
nop
loope
mov
ss
out
xor
out
into
shl
xlat
sar
addb
out
loop
shl
mov
aad
in
cmp
loope
lret
add
ds
add
in
jecxz
int
aam
aad
xor
divb
ljmp
cld
ds
lds
cld
xchg
cmc
xchg
out
mov
xor
jmp
ret
les
je
push
in
out
ltr
jle
add
shr
fcmove
int3
fstpt
fdivrl
repnz
faddl
jmp
sti
jmp
xchg
enter
call
out
rcr
clc
les
mov
test
ljmp
into
not
fdivp
cmp
cmp
rcr
aaa
clc
sbb
sar
ljmp
icebp
aam
out
int3
lds
stc
fcomp
cmp
hlt
fsub
ret
repnz
out
stc
ret
cld
fimuls
xor
cmc
in
fmulp
and
and
xchg
enter
iret
fmull
fcmovnu
leave
repnz
cmp
in
aas
rol
lret
in
jmp
ficoms
in
shl
into
call
cmp
loop,pt
xchg
jecxz
sub
cmc
imul
lret
jecxz
call
rcl
cmc
lret
loopne
int3
cmp
ds
and
aam
mov
jmp
jmp
in
in
int
jmp
cli
repnz
jecxz
aam
out
cld
int3
out
fcmovbe
out
mov
jecxz
leave
xor
hlt
cmp
cmp
in
cld
rol
jecxz
fistpll
cli
mov
cld
xchg
ljmp
shll
int3
out
cld
cld
out
xor
fnclex
cmp
in
cld
fst
into
rcr
xchg
imulb
hlt
leave
in
lock
int3
int3
int
sti
lock
aam
clc
sti
fimuls
jecxz
cmc
out
lret
cld
fnsave
xor
ret
icebp
shr
in
xor
loope
loop
jmp
aam
aaa
lret
repz
cld
or
xlat
xorl
neg
call
enter
aaa
xor
iret
int
shr
lret
call
repnz
mov
ljmp
xchg
repz
in
aaa
fcmovu
cli
loopne
rol
mul
out
stc
mov
std
call
and
clc
jecxz
in
jmp
repz
fdiv
sar
ret
call
cmc
mov
int
jmp
shl
rol
vpsubsb
cmp
div
fsubr
cmpb
out
fdivp
in
in
mov
sti
shl
inc
lret
cmp
neg
aaa
cmp
in
rol
cmc
out
hlt
aas
fisttps
imul
stc
lret
mov
ror
test
in
aam
xlat
idiv
cmp
shl
sar
out
aad
ret
xchg
xchg
xchg
sti
loop
loope
in
in
das
out
hlt
in
cld
out
fdiv
std
fst
fcmovbe
std
fisttpl
into
xchg
fmulp
int3
ret
aad
xor
fldl2e
fucom
ret
icebp
sarb
rol
addl
in
sub
out
loop
hlt
call
cli
repnz
out
rcr
ljmp
xchg
repz
add
mov
mov
jmp
rol
rol
rcl
aad
add
cmp
pop
pop
jg
pop
add
icebp
aaa
lret
lret
ss
std
repz
fucomp
fucom
repnz
mov
cli
leave
xchg
in
lret
sub
lret
in
jmp
fcmovnu
shl
repnz
test
mov
aas
in
xlat
fcmovu
or
cmc
lret
hlt
enter
loopne
rolb
cmc
aam
fcmovu
out
loop
out
xchg
mov
repnz
int
out
xor
cmp
loopne
cmc
enter
lret
hlt
jmp
xchg
in
sar
cmc
aam
rcr
int3
cmp
aam
test
cli
out
lock
in
mov
xchg
aam
xlat
leave
ss
lock
aaa
fiadds
sti
jecxz
std
sar
fucom
mov
adcl
push
loopne
rcr
aaa
lock
xchg
cmp
cld
xlat
out
stc
dec
ror
out
out
in
ret
cld
int3
xor
lret
sbb
clc
xchg
ret
shl
mov
mov
repnz
iret
shr
shll
xor
clc
fmul
cli
iret
cli
sti
loope
rcl
call
fmulp
out
int
ror
jmp
in
xor
lock
cmp
repnz
aad
idiv
jecxz
loop
mov
cld
int3
dec
out
repnz
ror
xor
fidivrs
sarl
rol
icebp
rcr
roll
mov
lret
ret
aaa
stc
lock
ljmp
hlt
fcmovne
shl
in
ret
loopne
jmp
lea
repnz
ror
in
clc
cmp
faddl
xacquire
and
out
ficoms
out
xor
leave
xlat
aad
out
rcl
dec
fstp
idiv
call
loope
loop
xchg
sar
hlt
jmp
rcr
aaa
adc
xor
shl
rol
mov
mov
fiaddl
cmp
cs
in
fcmovbe
std
ss
jmp
hlt
fsub
loopne
fucom
mov
xchg
repnz
aad
fsub
and
hlt
rol
cmp
jmp
out
xor
in
lret
lret
ds
cmp
icebp
in
repnz
std
in
in
cli
test
out
in
out
sub
fcmovne
cmp
aad
lret
int
iret
test
mov
cld
test
xlat
lret
xor
leave
sti
rcl
idiv
aas
aas
hlt
loope
mov
xlat
in
fsub
in
jmp
loopne
lret
out
cmp
fistpll
aaa
fcmove
push
fdiv
add
loop
call
lock
stc
call
fyl2x
rcr
rol
sti
xlat
xlat
addl
icebp
repz
ror
lret
repz
ljmp
in
in
ret
fstp
xchg
mov
pushl
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
shl
jmp
mov
add
std
int3
jmp
sti
fsubrp
aas
loop
repnz
xchg
test
fldl
loop
mov
lea
out
out
aad
jmp
ds
icebp
enter
ret
fstp
leave
sti
decl
loop
out
lret
xor
sti
int
repz
jecxz
ss
test
enter
mov
nop
xchg
mov
jecxz
int3
stc
xor
cli
cli
rcr
add
in
icebp
aam
call
cld
ljmp
sub
clc
ss
cmp
ret
aad
incb
test
in
fucom
in
out
enter
xor
lret
hlt
rcl
out
shl
in
std
test
xchg
loope
loopne
lock
in
ret
ss
cmp
lock
iret
fucomip
loope
jmp
mov
rorl
fmul
loop
xlat
fidivrl
fcmovu
icebp
in
aas
out
leave
leave
jmp
cli
jmp
call
clc
das
sar
fucomi
int3
ss
icebp
ret
std
in
xlat
fsubp
out
loopne
sti
out
xchg
xor
xor
aaa
fcmovnbe
cld
rcr
aaa
cmp
cld
aaa
aam
orl
repnz
hlt
test
xor
test
fucomip
sti
out
jecxz
jmp
in
leave
jmp
loopne
in
repnz
ror
xor
xor
cmp
xor
in
stc
xchg
fimull
in
leave
xlat
in
in
cmp
rol
repz
hlt
xor
not
lret
mov
jecxz
sub
sar
jmp
cmp
fnstsw
cmp
loop
jmp
in
fucomi
in
ss
in
ret
int3
cmp
fsubp
cli
cld
shl
call
mov
in
int3
jecxz
clc
xor
out
div
fsubr
ret
cmp
cmp
test
lea
shl
icebp
xor
fiadds
rorl
mov
nop
popl
jecxz
loop
int
fdivrp
in
jmp
div
mov
mov
lds
rclb
xlat
leave
in
icebp
call
loopne
stc
xor
jmp
cmp
flds
icebp
not
sub
idiv
cmp
cmp
int3
into
cli
jecxz
clc
loopne
jmp
imul
loope
mov
icebp
shlb
in
lret
enter
cli
leave
xor
loop
in
in
or
fmul
out
xchg
int3
enter
out
int3
rcr
in
out
xor
xchg
xor
test
xchg
into
in
xchg
sub
out
xor
not
cli
repz
fcom
lds
xor
jmp
xlat
ror
fld
and
test
sub
bound
pop
add
mov
into
shl
mul
neg
ljmp
test
cmpb
leave
jmp
xchg
ljmp
in
ljmp
loop,pt
sar
jecxz
adc
mov
lret
in
ljmp
sti
cmp
incl
fsub
int3
iret
test
icebp
out
mov
fcom
ret
hlt
clc
call
rcr
cmp
repnz
sar
mov
enter
lock
out
icebp
xchg
leave
call
cli
mul
repz
int
aad
xchg
call
ljmp
fisttps
jmp
shl
iret
stc
fstp
ret
loop
vcvttpd2dq
sti
loop
xchg
fcoml
rol
xlat
repz
into
xorb
fcmovu
clc
fcmovnb
shl
and
rorb
out
ret
cmp
ljmp
fdiv
out
icebp
loop
idiv
loopne
sti
fcomip
cli
repnz
jmp
xor
fdivrp
loop
lock
test
fsqrt
out
lds
in
ss
stc
hlt
loop
ds
xchg
aad
stc
or
orb
xchg
mov
lock
cld
aaa
cmc
cmp
lret
and
xchg
loop
loop
or
enter
not
fbstp
xlat
fmul
cmp
repz
fdivr
sti
loopne
repnz
out
xacquire
cmp
lret
addb
aam
aad
int3
enter
fcoml
fmul
call
fnstsw
jecxz
sbb
shl
cld
loope
mov
loopne
lret
hlt
shlb
hlt
repnz
ror
cmp
aaa
loope
lret
aad
iret
icebp
loop
shl
int
int3
orl
cmp
lret
ljmp
fcmovbe
clc
imul
mov
add
test
clc
jecxz
lret
int3
aaa
fcmove
cld
fadd
ret
shl
cmc
shr
jmp
lock
loope
int3
out
cli
repnz
jmp
call
out
xchg
in
stc
ljmp
mov
leave
xor
rcl
cmp
in
aas
aad
cmp
xbegin
lock
ret
clc
shl
mov
addb
lock
test
mov
iret
jmp
ljmp
rcr
xor
inc
testb
xchg
into
xchg
into
in
xchg
lret
enter
in
rcr
lret
aas
fcomp
in
idiv
out
fucomi
xchg
lret
loop
icebp
repz
cmp
lret
clc
out
aam
in
ds
aam
add
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
lods
cmp
jg
pop
add
cmc
clc
sti
cld
cmp
mov
lret
clc
hlt
call
out
fcmovbe
xlat
fldl
into
nop
mov
out
aas
in
in
aad
jmp
repnz
repz
call
aad
xlat
cli
loope
lock
add
int
jmp
xor
xor
test
cmp
idiv
cli
jmp
flds
jmp
out
mov
repnz
fldpi
lret
imul
in
sar
loop
into
cmp
int3
mov
fimuls
testb
clc
out
lock
lock
xlat
aas
cld
sarb
cmc
mov
in
out
mov
in
call
icebp
cli
cli
cmp
in
repnz
loope
mov
call
loop
aam
aad
cmp
loop
xlat
mov
cmc
call
out
repnz
int
jmp
fcmovnbe
aaa
jmp
div
sti
fcmovnbe
out
decl
loop
cli
nop
ljmp
sub
loop
jmp
in
stc
lret
sarl
cmp
repz
std
call
in
ret
sti
call
repnz
sti
mov
jecxz
sti
out
mov
out
std
ljmp
cmp
jmp
dec
cmp
addl
jmp
mul
lret
mov
in
aam
hlt
fcom
cmp
cld
out
lret
lock
int3
lock
fcmovu
cmc
fcmovu
fsub
out
iret
repz
leave
imul
out
xlat
sar
sti
loop
loop
cmp
test
fcmovne
test
cmc
sub
jmp
leave
in
cli
cmp
cmpb
fdivrp
jecxz
fldlg2
mov
ljmp
out
out
cmp
cld
out
repz
fsub
lock
std
rorb
int3
jmp
clc
loopne
jmp
clc
fcmovne
xlat
lret
shl
fidivrl
xor
aas
loopne
loopne
std
xchg
repz
leave
xlat
xlat
fidivrl
not
xor
fcmovnbe
aam
xchg
filds
loop
icebp
out
in
lret
in
repnz
xor
fdivrs
rcl
roll
fld
in
cld
xchg
in
enter
cld
fdivr
sti
into
jmp
in
not
test
aas
in
out
in
xchg
out
mov
aad
iret
jecxz
aaa
cmc
repnz
adc
clc
fst
sti
call
in
stc
mov
in
cli
ror
cmp
into
cmp
lock
sbb
jecxz
lret
in
cld
int
xor
cli
imul
int3
divl
fsub
hlt
cmp
repnz
xlat
int3
icebp
loopne
and
not
aaa
das
cmp
int3
jmp
aad
aad
mul
xchg
ret
pop
leave
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
jns
adc
jg
sbb
jle
mov
in
orb
lret
nop
test
xor
ss
dec
icebp
ds
std
in
faddp
fdivr
mov
mov
adc
iret
in
in
cmc
cmp
loopne
loopne
rol
aam
hlt
xlat
cld
in
out
shl
int
iret
in
aam
in
les
jmp
rol
out
cmp
icebp
out
clc
xlat
out
int3
icebp
repnz
repz
out
cmp
jmp
icebp
cmp
std
aas
cmc
sbb
fmul
ficoms
int3
int
das
lret
ret
ror
int3
inc
aaa
lret
out
aas
ret
mov
xchg
in
int3
in
adc
into
loopne
cli
sti
lret
cli
out
stc
sub
fdiv
out
loop
fsincos
frndint
fildl
call
xor
cmp
adc
cld
ret
repz
aad
ffreep
nop
std
call
call
iret
loopne
ror
lock
cmp
rcr
fcmovnb
fadds
and
jmp
jmp
aaa
out
fabs
fidivrs
ds
xchg
f2xm1
loope
into
xchg
xor
xor
shl
call
cmp
aad
fdivr
addl
test
cli
icebp
test
aam
loopne
xlat
out
cmp
shl
fdivrs
shl
xchg
mov
ret
xchg
shr
inc
clc
aam
fidivl
repz
out
out
xchg
shl
mov
loop
in
cld
in
call
repz
aad
neg
lret
call
test
repz
xchg
loopne
jmp
fcmovne
leave
lret
lret
loope
hlt
fadd
aas
ror
loop
fimuls
fiadds
lret
out
rcr
ljmp
ret
test
cld
fld
aas
cld
lret
in
sub
xchg
in
repnz
aad
cmc
repnz
ret
cmp
rorl
cld
mov
in
cli
not
in
xor
idivb
xor
in
loopne
lret
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
jle
in
push
jle
add
cmc
test
out
xchg
loopne
xchg
leave
lea
lock
cmp
lret
shl
ds
enter
int3
stc
mov
in
hlt
loop
mul
ljmp
not
ror
sbb
loope
lret
xlat
test
in
ljmp
in
rcr
xor
idiv
cmp
ds
lret
fildl
decb
ret
fldl2e
into
fcom
cmp
rol
cmp
mov
sti
fsubp
in
icebp
lock
lret
cld
fcomp
in
addl
movb
out
in
xchg
mov
repz
shr
ss
roll
aam
loop
lret
fisttpl
int3
repnz
into
lret
int
out
aaa
out
hlt
out
fadds
ret
mov
and
xchg
aad
iret
repnz
filds
rcl
cld
out
jmp
out
loope
in
fcmovu
sar
aam
repz
in
rcr
fcmovnu
jmp
ljmp
rcr
sub
leave
repz
in
aam
ds
out
mov
nop
jecxz
into
cmc
repz
into
fld
fcmovbe
aad
cmp
fcmovbe
faddl
mov
icebp
int3
fcmovu
in
cs
icebp
iret
lret
into
ds
ffree
loope
mov
xchg
xchg
xchg
loope
imul
cmp
iret
enter
sarb
ret
repnz
repz
ffree
clc
test
loope
iret
int
aam
loope
cmp
out
fmul
cmp
lret
loopne
sti
out
test
xchg
out
cmc
xor
cmc
sti
call
cli
shl
in
add
fucomip
and
test
shl
aaa
cli
xor
repnz
out
int3
in
cmp
fldl
addb
lret
iret
int
cmp
lock
cmp
int
inc
cld
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
pop
mov
mov
sbb
jle
cmp
std
movb
cmp
fildl
mov
into
in
ret
hlt
out
xor
xlat
ret
sbb
sti
int3
mov
clc
fsub
call
shl
in
cmp
xor
in
cmp
fldl
int3
in
out
mov
out
out
lock
not
cmp
out
aas
iret
aam
shl
sub
iret
in
in
ljmp
sti
sti
cmp
aaa
f2xm1
shl
cld
fcmovbe
rcr
fildl
fistl
out
ret
fyl2xp1
leave
cld
rcr
repnz
fsincos
xchg
rcr
mul
clc
xchg
out
shr
in
mov
shl
in
in
repz
idivb
hlt
fnop
icebp
neg
call
cmp
test
jecxz
hlt
out
ds
out
ds
aas
idiv
std
fcom
lret
ljmp
xor
ljmp
icebp
cli
iret
out
neg
roll
out
in
stc
out
ljmp
out
in
stc
lret
sub
hlt
jecxz
xor
out
jmp
mov
in
out
lock
aam
aas
out
ret
dec
repz
mov
xlat
flds
test
fldl2e
ror
jmp
std
xlat
idivl
cmp
mov
xchg
mov
xor
cld
out
fisttps
aam
enter
aas
or
xchg
icebp
sarb
rorl
cli
cmc
int3
imul
mov
out
fxch
clc
aam
faddl
out
fdivp
out
mov
xchg
int3
lret
int
int
int
clc
cmp
xchg
aad
nop
ret
nop
out
ljmp
int3
call
cmp
fucom
clc
shl
mov
fiaddl
loope
in
aad
cmp
xor
fsubrp
in
lret
fildl
test
xchg
fists
xor
lock
mov
jmp
ror
aas
int
int
jbe
repnz
sub
jle
add
ljmp
inc
repnz
int3
mov
adcb
div
repnz
hlt
cmp
fxch
sar
aaa
icebp
repnz
sti
or
frstpm(287
mov
jmp
out
sar
aaa
neg
fnclex
fldl
call
mov
lret
mov
cmp
sti
leave
stc
aaa
lret
sar
cmp
loopne
rolb
fld1
ret
lret
repz
out
das
iret
int3
ds
out
out
inc
stc
in
xlat
sti
neg
test
imull
aad
xlat
stc
frndint
aad
sti
add
xchg
fimull
lock
sub
cmc
fcmovb
cmp
out
jmp
int
ror
loop,pt
in
in
fimull
xchg
mov
shl
clc
in
ljmp
sti
repz
repnz
repnz
out
cld
call
int3
repnz
rol
int3
out
cmp
idiv
jmp
addl
xlat
fmul
enter
fimuls
cmp
cmp
call
and
cmp
sti
loop
xlat
jmp
loope
jmp
call
rcr
cmp
fdivrs
int3
cmp
std
cmp
repnz
out
leave
int3
out
roll
lret
rcl
in
cld
aas
in
ljmp
add
aam
sub
lret
jecxz
cmp
xlat
lret
cld
xlat
xor
div
in
adc
out
call
dec
orb
cmp
cld
in
ret
adc
cli
and
ret
iret
in
ljmp
repnz
rcl
stc
out
fdivrs
in
cmp
out
fsubr
fildl
test
xlat
cmp
ljmp
hlt
filds
xchg
fcoml
cmp
ss
sbb
clc
clc
loop
out
stc
cli
leave
sbb
out
fstp
rol
lock
cs
ret
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
lds
stc
std
icebp
aad
loope
adc
hlt
jmp
fiadds
mov
sar
xor
std
in
loop
int
shl
sar
hlt
jecxz
fdivr
loope
in
loope
enter
xor
lock
fsub
hlt
in
fdivrp
stc
orl
sub
xor
fcmove
loope
cmp
sti
fdivr
out
aad
lea
mov
test
int3
iret
cmp
not
fucom
mov
shr
mov
loope
fimuls
shlb
leave
jmp
sbb
xlat
in
call
test
xchg
in
cld
into
div
xor
stc
xor
fdiv
enter
xor
ret
and
ljmp
leave
in
xchg
out
cli
call
cmp
ret
repz
out
loope
decl
aad
ror
icebp
in
clc
sti
aas
out
jecxz
clc
aad
enter
cli
into
fcmove
jecxz
jecxz
test
lds
xor
fdivl
jmp
shl
lock
leave
cli
cld
in
decl
in
xchg
fst
cs
leave
out
leave
cmp
stc
loope
fnstsw
fcmovnu
jecxz
ljmp
or
icebp
xor
in
imul
repnz
lret
fcmovu
aas
cld
testl
les
out
repnz
fcomp
icebp
out
shl
sti
shl
std
fcomip
test
mov
fiadds
in
sub
fdivp
cmc
repnz
out
lds
enter
out
rorb
fsub
int
out
idivl
in
ret
sarl
clc
lret
decl
leave
jmp
jecxz
fcmove
cmp
into
fdivr
rcr
cld
cmpl
int3
out
mov
movb
in
enter
icebp
cmp
aas
cmp
test
rcr
fiadds
xchg
xchg
popl
cli
cmc
imul
fscale
roll
rcl
std
loop
xchg
dec
xchg
repz
fyl2x
cmc
icebp
int3
cmp
rcl
int
icebp
icebp
sar
faddp
stc
lret
loopne
call
fdivr
aam
aaa
cmp
iret
rol
ret
cli
into
fneni(8087
lret
test
in
cmp
fidivrs
lret
fcmovu
sbb
hlt
aam
ret
iret
call
out
int3
in
out
icebp
int3
shr
cmp
rcl
div
std
mov
mov
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
bound
xor
lods
add
cli
mov
fdiv
test
adcb
in
cmp
repnz
jmp
repz
ss
fstp
fld
in
xchg
out
int3
fcmovnbe
call
ror
icebp
cmp
out
aam
clc
hlt
jecxz
ds
leave
hlt
sub
mov
nop
mov
xchg
int
xbegin
rolb
stc
int
jecxz
sti
in
fucomi
fdivrp
mov
shl
icebp
lret
aad
out
dec
cmp
clc
std
jecxz
out
loopne
loop
cli
mov
incl
icebp
clc
cmp
xor
cld
cmp
loope
into
in
test
sti
in
out
int
icebp
ljmp
hlt
lret
clc
clc
cli
in
in
hlt
cld
into
rol
test
in
cld
xor
hlt
leave
aad
fxch
ds
into
sarl
clc
test
test
fsubrp
iret
or
hlt
shl
repz
aad
xor
xor
hlt
sarl
into
ret
cli
dec
or
out
call
div
aaa
enter
stc
shl
xchg
jecxz
loope
enter
loopne
repz
shl
repz
rcr
fnstsw
out
shl
in
loope
and
fsubrp
add
int
loop
sub
ss
fdiv
imul
call
aas
rcr
cmc
and
in
xchg
xchg
nop
mov
in
iret
xor
sti
out
shl
shl
xlat
leave
sar
lock
out
rcr
movb
xchg
xchg
loop
in
jmp
call
sti
repz
faddp
out
fmul
lret
sbb
loop
int
sti
rcl
fdivrl
hlt
lock
loope
testb
cld
out
in
jecxz
test
xor
loop
fsubr
fcmovbe
cmp
aad
in
cmp
sbb
cmp
jmp
mov
adc
repz
clc
aaa
cmp
mov
mov
or
xor
lock
xor
cmp
fcomi
loop
ljmp
loope
xor
ret
rcr
cmp
shl
fcomip
sarb
icebp
test
fmul
loope
addl
into
call
aad
lret
cmc
aam
ds
cmp
rol
testb
shr
repnz
ret
leave
repz
shl
xchg
loop
jmp
xchg
mov
in
cmp
neg
xor
cmp
mov
std
cld
in
loopne
xchg
mov
lock
or
add
xor
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
sub
jbe
jle
add
mul
rcr
shlb
aaa
cmp
in
in
hlt
mov
lret
ret
fld
call
loopne
cmp
fsub
sti
cmc
mov
xlat
std
lret
out
decb
jmp
in
das
in
enter
rolb
cmp
int
jmp
xchg
cmc
hlt
int3
out
shl
shl
rcr
fyl2x
cmp
hlt
std
rol
std
loop
out
in
mov
xchg
loope
fcmovb
aam
call
loope
out
jecxz
clc
cld
cli
mov
rorb
cmp
ss
test
cmp
rcr
fsub
mov
int3
mov
hlt
fdivrs
out
lock
out
fcompp
cld
in
in
shr
cld
aam
ds
mov
fisttps
shr
aam
call
loopne
div
out
cmc
rcr
fucom
loopne
in
test
xchg
lret
sub
aaa
hlt
lret
rcr
ror
cmpl
cld
in
leave
rorb
loop
cs
aad
ss
ret
fstpt
fsub
enter
fadds
out
ror
xlat
cs
jecxz
cs
cmp
in
aas
faddp
mov
jmp
filds
loopne
into
fcmove
hlt
sarl
rcr
cli
lret
fst
adc
aas
test
testl
shl
cmp
hlt
fucomp
call
rcl
in
sbb
in
in
decb
test
shl
cmp
iret
stc
xlat
in
cld
aam
xchg
cli
mov
test
lea
in
icebp
xor
std
aad
neg
stc
inc
fildl
loop
int
xchg
addl
repnz
lret
aaa
cli
lret
fcmovnbe
addb
std
fcomp
mov
mov
int3
decl
in
cmp
xor
aaa
aas
rcl
ret
jecxz
idivl
mov
out
aas
shr
iret
rcr
ljmp
call
stc
aas
out
xchg
loop
loop
xchg
xor
fnstcw
sar
rcr
sar
fdivr
mov
fucomi
iret
test
sub
shl
out
shl
stc
out
cld
ljmp
cmp
test
in
loopne
in
loop
lret
icebp
ret
lret
in
out
lret
int3
int3
ret
hlt
fxtract
aam
sbb
add
std
iret
jmp
shrb
xor
cmc
std
clc
fdivrp
imul
xchg
add
add
rcl
fst
int
lea
xor
scas
pop
dec
js
jle
add
stc
sti
sti
out
call
fsubr
iret
jmp
fidivrl
fcmovnb
xlat
leave
cli
jmp
icebp
neg
fadd
out
mov
fstp
in
out
nop
cld
in
shl
in
in
fucomp
fcmovnbe
cmp
loop
ds
and
hlt
mov
cli
shr
mov
mul
cmc
icebp
xor
out
icebp
lret
into
repz
cmp
int3
stc
fsub
xchg
lea
loope
lock
jmp
sub
aas
std
decb
xbegin
fmulp
lds
div
call
in
cmp
adc
ret
lret
lock
iret
in
orl
fst
fcmove
out
hlt
repz
std
jmp
in
iret
sti
cld
call
out
int3
cmp
xor
rolb
cmp
fcmovnu
lds
addl
aad
rol
xor
rcl
xlat
ret
cld
aas
stc
aad
test
fxam
std
mov
test
into
in
cmp
fadd
clc
mov
lret
call
in
mul
jmp
roll
ret
rolb
into
in
fiaddl
cmc
jmp
jmp
in
ret
roll
jecxz
lret
into
nop
in
fsubr
jmp
iret
int3
iret
lds
lret
loopne
out
jecxz
lret
dec
ljmp
xor
in
into
jmp
lock
xchg
or
ljmp
shr
icebp
loope
stc
fdivrs
lret
aam
cmp
cmp
out
fcmovb
fadds
jmp
aad
rcl
xor
lret
shl
rol
in
fcomp
clc
aam
xchg
and
xchg
int3
into
aaa
xor
loop
ds
loope
clc
ror
clc
aas
xor
out
in
loopne
call
loope
cmp
ljmp
test
cmp
test
add
int3
out
test
into
into
rol
rcr
xor
adc
test
div
fcom
fstp
rolb
int3
in
in
cmp
lock
cmp
cmp
repnz
dec
in
icebp
call
xor
lds
fldt
int
shll
xor
shll
sti
test
xlat
jmp
cmp
xchg
test
in
cld
jmp
int
clc
aam
cmc
hlt
hlt
aas
jecxz
std
jmp
idiv
mov
incl
xchg
jb
add
add
add
add
movl
enter
int
lds
adc
std
jnp
jle
add
loope
in
sti
vaddsubps
clc
int
repnz
inc
sbb
movl
iret
in
out
repnz
cld
ss
shl
cmp
orb
mov
jmp
into
aam
loopne
in
aas
mov
aas
mov
decl
not
cmp
rcl
into
loope
aad
ss
cli
clc
rorl
in
mov
loope
lret
iret
xor
ror
ljmp
out
int
std
loop
idiv
enter
in
mov
in
fcmovnbe
xor
lock
cmp
icebp
out
aam
aam
out
leave
in
call
icebp
lret
in
xchg
ret
cmc
iret
ljmp
int
ss
ds
or
fcmovnb
leave
int3
ljmp
in
das
lret
jmp
out
ret
shl
in
jmp
orl
adc
xor
mul
jmp
shl
cld
call
jmp
xor
xchg
lret
cli
leave
out
out
into
ds
ror
fdivrp
hlt
fsub
ret
jmp
jmp
xchg
push
lret
cmp
cmc
repnz
cli
roll
ljmp
fildl
in
into
in
fldl2e
lret
enter
lret
std
enter
mov
enter
lret
in
shl
aam
aad
std
out
cmp
fstpt
iret
jmp
call
loop
ret
sti
jecxz
fiadds
in
das
repz
lret
fstpt
repnz
sti
jecxz
test
out
test
aam
icebp
xor
aad
xlat
icebp
jmp
rcr
loope
mov
test
cmp
fdiv
test
mov
imul
loop
xlat
jecxz
sti
sti
in
cmp
loopne
loope
xlat
xlat
loop
jmp
xchg
mov
xchg
aaa
cs
test
fdivs
fsubp
out
cmpb
and
xlat
int
enter
nop
xchg
aam
aam
loop
iret
jmp
out
cmc
cmp
mov
jmp
xlat
mov
enter
rcr
jmp
xlat
jmp
fdivl
fidivrs
loope
icebp
stc
stc
ret
in
sti
in
out
loop
xchg
xor
aad
fmul
aad
imul
lock
loope
aas
stc
cli
clc
add
nop
in
xchg
cld
mov
or
fmulp
sarb
ret
div
mov
fsincos
out
shl
into
lret
out
stc
call
shlb
shll
int
ret
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
pop
fsubrs
cwtl
sub
add
add
cld
adc
out
cmc
mov
lock
xchg
iret
shr
stc
in
lret
lock
cld
xor
idiv
in
test
in
loopne
filds
out
repnz
out
cmp
cmc
out
frndint
test
sar
aad
test
jmp
test
hlt
cs
int
stc
out
cmp
cmc
int
sti
shr
jmp
test
fldl
int
jecxz
idivb
clc
cmp
cmp
in
xchg
out
loop
lret
fiadds
cs
leave
repz
in
in
ret
fisttps
out
rorb
in
out
repz
jmp
in
xchg
loope
rol
div
enter
leave
test
test
xor
enter
fnstcw
fstp
stc
xchg
leave
aad
mov
jmp
cli
xor
hlt
cmp
xor
xchg
enter
lret
jmp
jmp
jmp
out
icebp
iret
xor
int3
ds
jmp
ror
fldl
out
icebp
out
lock
imulb
icebp
xor
stc
ss
into
into
repnz
test
inc
jmp
lds
out
test
out
iret
cmc
iret
repnz
cmp
aam
cmp
aad
sti
jecxz
sar
in
mov
ret
test
int
cmc
in
cmp
sar
fnstsw
decl
mov
lds
call
lock
icebp
xlat
in
cmp
in
out
mov
mov
mov
int
xlat
xor
hlt
int
divb
std
loop
xor
cmc
in
fucomip
call
into
cmp
icebp
rcr
in
cmp
adc
out
xchg
clc
cld
in
in
sub
int3
lret
fdivl
sarb
stc
fucomi
rolb
fmul
sti
enter
iret
test
fmul
sarl
aaa
out
into
stc
fdivl
fdivl
test
ds
out
fstp
test
loop
aam
loopne
fcomp
fcom
call
icebp
cmp
hlt
xchg
test
lret
mov
jmp
das
repz
loopne
fdivp
in
cmc
icebp
aam
ret
flds
out
fcoml
stc
sub
in
cmc
enter
repz
fisttpll
mov
out
jmp
out
call
fsubrp
test
fldl
call
cld
loop
lock
aad
lret
enter
fcmovnu
push
icebp
ret
jbe
pop
add
jle
add
repz
sti
repnz
fdivl
std
adc
mov
xlat
jecxz
jecxz
fstp
call
repnz
lock
leave
xor
loope
rcr
out
aad
out
out
jmp
stc
fucomi
jmp
in
cmc
iret
in
lret
repnz
ds
repnz
rcl
xlat
ret
out
out
repz
xchg
xchg
xchg
xlat
ret
sub
clc
in
enter
lock
shl
int3
xchg
in
mov
jmp
lret
in
ss
jmp
fcmovnbe
fucom
in
test
fiadds
in
out
in
out
xor
fcmove
int3
ffree
out
sar
addl
out
int3
aam
aad
fdivr
cmp
in
aad
hlt
add
sti
jmp
stc
test
jmp
lock
shl
jmp
iret
in
jmp
adc
cld
in
shl
sbb
ffree
enter
mov
fldl2e
out
out
call
rolb
hlt
fdivrl
int3
lock
lock
aam
xor
shr
neg
idivl
lock
cmp
loopne
loop
nop
mov
shl
test
das
das
ret
xlat
cli
out
fxch
clc
cmp
fst
cmc
loopne
cli
out
fcomp
add
mov
fucomip
shrl
aad
out
int3
sub
repz
aad
out
loopne
fadds
sub
ret
lds
cld
iret
idiv
shl
fstp
aad
lock
fstp
jmp
xchg
jecxz
das
cmp
sti
leave
jmp
aas
cmp
int
shl
lock
fdiv
std
in
std
sti
lock
movb
cli
out
fst
loopne
lret
fdivrs
lret
out
out
filds
loop
xor
test
fcomi
lret
shr
fdiv
jecxz
xlat
xlat
lret
orb
call
ss
out
xlat
fucom
ds
xor
fiadds
std
loopne
call
icebp
xor
jmp
int
or
rcr
rolb
cld
cmp
cmc
icebp
cs
aaa
in
fidivrl
std
in
xlat
icebp
aas
clc
hlt
or
mov
lds
xor
repz
leave
not
rcl
rcr
jmp
xchg
xchg
xor
cli
ret
into
icebp
out
repz
cli
and
sti
in
in
call
loopne
xlat
repz
cld
aam
shl
repnz
add
mov
mov
xor
jmp
enter
int
enter
push
add
aaa
ret
add
add
rcl
loopne
call
cld
out
in
xchg
jmp
loop
int
jmp
shr
clc
cmpb
loop
in
lock
fstl
jecxz
lret
shr
enter
ror
sarl
adc
test
std
loopne
mov
xchg
mov
sar
rcr
cld
into
rolb
aas
mov
incl
in
rolb
cld
shl
cmp
mul
rcr
adc
loop
loopne
dec
out
shl
enter
aad
repz
push
out
cmp
fldl
ret
div
loopne
repz
aaa
out
call
idivl
fsubrp
fsubr
jecxz
sti
fcom
leave
cli
mov
popl
aam
iret
xor
stc
rcr
fsub
ret
fdivr
iret
roll
enter
leave
xchg
mov
cmp
cmp
int
cmp
test
out
out
repz
loop
ret
aad
mov
xchg
xchg
test
xlat
xor
out
xlat
lret
aam
in
in
ds
sar
lret
call
rcll
lret
sti
repz
leave
rol
fcomp
fdiv
incb
leave
idiv
in
stc
loopne
mov
hlt
out
repz
lret
xor
cmc
clc
idivl
dec
clc
repnz
hlt
jmp
and
test
xor
fldz
aaa
hlt
cmp
iret
lret
cmp
xchg
aas
aam
loop
addb
loope
loopne
fsubr
cmp
sti
std
in
stc
loope
rcr
test
mov
xchg
jmp
in
jmp
fdivr
fdivrs
aas
ffree
cli
idiv
icebp
loopne
incl
sti
icebp
int3
aad
lret
ss
cmp
fsubr
notrack
cmc
neg
lock
loop
clc
call
ret
repnz
mov
ss
cmp
aaa
enter
rol
stc
hlt
sti
loop
jecxz
std
hlt
in
leave
loopne
sub
in
xchg
addb
ljmp
int3
loop
shr
fadds
out
in
jmp
fists
xor
cli
out
cli
leave
jmp
xlat
int3
rcr
out
rcl
ljmp
repz
mov
icebp
test
ljmp
std
faddp
ljmp
incb
fprem1
clc
lret
fcmovbe
loop
stc
and
xchg
stc
xchg
in
rol
hlt
fxch
cli
ror
rcl
int3
aam
stc
icebp
aam
mov
xchg
enter
leave
std
xor
jmp
aas
lret
fcmovnu
xlat
aad
jno
jae
cmp
cmp
add
add
int3
out
xchg
loopne
in
shl
iret
xor
aam
addl
cld
mov
fmul
jmp
fucomip
jecxz
not
in
aam
cld
in
out
cmp
adc
rcr
fcmove
lret
nop
icebp
rcll
cmp
les
cmc
cmpb
xlat
repz
lret
std
test
shl
iret
in
cmp
lock
out
aad
cmc
clc
shr
test
leave
sarl
in
test
test
xor
ss
repz
fst
into
in
out
ds
sti
enter
mov
loope
mov
enter
iret
hlt
into
fucomip
fcompp
aam
clc
jmp
ffree
fcmovne
loopne
cld
xchg
jmp
xor
div
clc
aaa
repnz
iret
sti
loope
imul
repnz
int3
mov
out
fucomp
test
in
das
jmp
cli
int
test
addb
out
incb
repnz
hlt
and
lock
xlat
rcl
call
decb
adc
in
jmp
shl
rcr
test
xchg
enter
fucom
addl
xchg
xor
call
rcl
ret
cmp
clc
std
mov
sar
nop
fisttpl
ror
clc
hlt
out
jmp
xlat
xchg
fnsetpm(287
inc
flds
std
nop
ljmp
ror
idiv
sti
aam
ss
iret
ror
fadd
orl
lret
xchg
jmp
iret
out
out
lret
out
aas
into
cmp
cli
fidivrs
test
mov
leave
mul
std
call
into
in
idivb
fdivrl
shl
loopne
ljmp
fdivp
sbb
int
cmp
cli
ret
cli
fcmovne
cmp
sti
cmp
sti
lock
orb
cli
std
out
call
xlat
jmp
iret
out
out
out
std
cmp
xor
mov
fiadds
mov
icebp
cld
ror
out
in
xor
fsubr
cli
xor
test
cli
cmp
in
xchg
xchg
into
loopne
ror
iret
cld
roll
out
loopne
clc
aas
loop
leave
out
loopne
or
xor
fstp
aad
test
aad
jmp
out
repnz
int
icebp
jmp
clc
fdivrs
xor
cmp
ret
xlat
ds
fsin
rcl
jmp
mov
jmp
loopne
iret
int3
xor
aad
jmp
out
mov
mov
jmp
into
enter
int3
fwait
outsb
mov
lea
pop
push
add
stc
rcr
rolb
jmp
faddp
leave
jecxz
test
iret
mov
repz
sarb
int3
hlt
in
cmp
std
aam
xor
lock
fucomp
loopne
jecxz
test
mov
out
jmp
xor
out
iret
std
jmp
std
jmp
jmp
in
mov
out
out
les
aaa
ss
loope
incb
ret
xchg
clc
leave
in
or
loopne
iret
cmc
xlat
loope
ret
rol
sarb
sar
stc
stc
clc
out
incb
xlat
or
rcl
xor
rcl
aam
repnz
sti
xor
repnz
cld
testl
cli
out
out
jmp
sarl
cmp
xor
aaa
fcmovbe
aam
jmp
out
into
out
nop
hlt
in
aad
shl
aaa
cmp
hlt
cmp
cmp
and
rcr
idiv
mov
mov
or
lock
shr
out
in
fst
div
cmp
clc
rcl
ffree
xchg
roll
loope
lret
imul
sub
idivl
fdivp
fsubrp
aad
test
cld
repz
sti
clc
fstpt
in
int3
nop
iret
nop
shr
fsub
int3
xbegin
aam
test
add
fstp
out
mov
lock
xor
cli
aad
fxch
in
fst
ss
aam
neg
cld
lret
loope
lret
imul
out
out
fcmovbe
divb
int
shl
aas
ret
repz
orl
jmp
int
repz
fxch
jmp
icebp
out
dec
loope
cmc
repz
ret
add
call
loope
aam
aam
in
out
cmp
int3
sti
fucom
ret
fldl
loope
in
cli
iret
into
mov
in
fcmovu
lret
ljmp
repz
cmc
rol
fldl
xchg
mov
idiv
shr
stc
cmp
fcomp
aad
cmp
ror
cmp
movb
adc
in
cmp
out
iret
out
incl
out
std
idiv
mov
flds
jmp
loop
into
xor
out
enter
hlt
repnz
ror
fstpt
xchg
cli
out
repnz
ljmp
cli
sti
loop
fadds
ret
cld
stc
xlat
xchg
lret
xchg
test
aaa
ror
repz
clc
neg
cmp
addb
int
std
out
and
repz
sar
fxch
cli
aad
fdivr
fucomp
fneni(8087
cld
vpaddusw
rcr
ljmp
cmp
movl
int3
into
fstp
pushf
mov
pop
cmp
add
loopne
mov
in
fnstenv
leave
shl
ret
mul
std
loop
ret
leave
in
out
in
addl
fucomi
fdivr
fcmovu
lock
ffreep
cmp
xlat
fmulp
mov
test
ljmp
fneni(8087
ret
aam
mov
loop
aad
xor
rol
xor
xor
addb
testl
xchg
loop
shr
sar
fdiv
repz
cmp
loop
aas
loopne
rol
jecxz
in
out
jecxz
xchg
mov
test
xor
sub
fld
mul
shl
flds
popl
shr
fcom
repz
not
repz
loope
in
test
jecxz
in
aam
out
not
int
cmp
into
cmp
cli
hlt
out
sar
cld
out
xchg
jmp
inc
into
mov
leave
jecxz
sti
lock
loopne
cmp
rol
test
jmp
out
int3
loopne
in
fidivl
cld
jmp
lret
shl
add
in
xchg
out
xchg
test
ljmp
into
enter
cmp
in
rcl
cld
cli
repz
in
fsub
decl
shll
ret
div
int3
xor
ss
shl
cmc
xlat
iret
hlt
repnz
cmc
mov
mov
sub
xlat
jecxz
ss
call
icebp
ret
ret
push
in
ljmp
in
loop
iret
sti
in
iret
aaa
call
out
loop
loope
xlat
mov
clc
out
leave
rclb
ss
cmc
aad
cmc
aam
test
icebp
cmp
cmp
xlat
cli
les
xchg
xchg
cmc
das
in
icebp
cld
iret
hlt
cmp
aas
repz
shl
repz
fimuls
int3
out
xor
icebp
jmp
rolb
out
orl
aas
enter
and
std
cmc
int3
icebp
cmc
lock
stc
sub
lock
ds
adc
lret
jecxz
jmp
call
in
ljmp
hlt
add
cmp
out
sbb
xchg
out
incb
xor
xor
icebp
fiaddl
idiv
repz
filds
imul
jecxz
cli
out
xor
fcomip
out
aas
fld
decb
test
nop
xchg
jecxz
fistpll
sub
lret
cld
lock
rorl
jmp
rcr
int3
ror
fcmovnu
arpl
jbe
push
add
add
cmp
cmpb
std
ljmp
fucom
shl
popl
xor
xor
mul
fdivr
int
cmc
xchg
repnz
ds
call
fildl
jmp
imul
enter
into
adc
test
out
lds
sub
call
sarb
icebp
lret
in
test
fldl
mov
fdiv
ss
das
clc
clc
rcl
out
shl
idiv
out
cld
in
jecxz
or
fstl
repz
lret
cld
lock
idivl
aam
aam
leave
xchg
call
shl
cs
iret
jmp
iret
cmpb
rcr
repnz
adc
loop
jmp
mov
in
mov
clc
xor
cmc
xlat
fcomp
fst
std
clc
loope
test
cmc
out
out
ficoml
in
int3
jmp
into
cmp
icebp
call
repz
mul
jecxz
test
sub
std
in
iret
xchg
mov
out
lret
xor
std
repz
repz
cmc
xchg
addl
jmp
lret
xchg
lret
repnz
out
repnz
in
and
sti
leave
out
cld
xchg
xchg
xchg
xlat
in
fldpi
aad
cli
f2xm1
cmp
repnz
hlt
shl
fsub
std
xlat
orb
rcl
enter
cmp
rcl
cmp
repnz
cli
cmp
and
cld
int3
out
jmp
int
not
leave
shr
repnz
xor
shl
ror
shr
fucomp
fists
shlb
ljmp
ss
in
in
loope
rol
mov
cli
out
lret
xchg
or
ljmp
cmp
xor
enter
xchg
test
jmp
jecxz
lock
aaa
xor
xor
cmp
ret
rorl
sub
out
out
aam
fld
std
lret
sarl
sarb
out
jecxz
clc
aam
jmp
incl
icebp
sar
cmc
xor
aas
fdivp
repz
lock
fsin
test
mov
cmp
aad
icebp
fucomip
rcl
idivl
fstp
out
sti
std
movb
icebp
cld
adc
std
cli
aad
fsub
fiaddl
mul
fmull
in
out
jmp
xor
lret
ret
lock
int
jmp
in
div
repz
idiv
lret
orl
lret
iret
into
aad
leave
fnsave
cmp
jge
mov
lods
add
jecxz
xchg
std
repnz
aas
loopne
out
in
xlat
enter
loopne
cmp
stc
rorb
jmp
repz
test
out
fcomp
cld
cld
fcom
cmp
sti
loop
xlat
fiadds
leave
mov
mov
iret
int
jecxz
xor
in
xor
fstp
shr
fiaddl
call
out
cld
fsubp
fisttps
stc
call
dec
lret
cmp
fdivp
test
out
fcmovne
lret
vcmpps
test
shl
out
cld
fcomip
fsubr
std
addl
in
int
ret
call
xor
cmp
test
loope
sarb
testb
fmull
lock
icebp
div
cld
clc
out
ffreep
cmp
repnz
cli
flds
in
in
xchg
imul
rcl
aad
repnz
sar
addl
loope
cli
fmull
sarl
repz
cmc
out
into
fcomp
ret
aad
call
incl
xchg
aas
jecxz
xlat
xlat
sti
cld
lret
out
int3
cmp
repnz
lret
decb
lret
shrl
ror
out
xlat
std
leave
aas
fcomip
not
fnstsw
loop
jecxz
loopne
clc
fimuls
into
shl
enter
out
iret
xlat
repnz
sar
sti
sub
fucomp
out
icebp
mov
loope
repz
fsubr
call
loope
sbb
enter
call
sub
cmp
cld
aad
fcmove
rcr
shr
loopne
jmp
int
ljmp
shr
aaa
iret
cmc
sarb
icebp
cmp
aas
adc
loopne
fucomp
loopne
xchg
rclb
lock
out
cli
into
ljmp
stc
ret
xchg
lds
ror
aad
aam
repnz
ror
lock
sarl
cld
clc
std
into
fiadds
out
in
sti
fcmovne
std
aas
sti
cmp
fmul
cld
fsubp
loope
cmp
in
repz
loope
stc
fmul
in
cmc
in
clc
cmc
stc
fcos
cmp
hlt
call
in
std
in
out
cld
in
or
sarl
in
int3
idivl
rcl
xlat
fistpll
xchg
sti
aad
fisttpll
out
mov
xchg
decb
in
cmp
std
cmp
incl
lock
cmp
into
les
rorb
mov
add
jmp
mov
int
sub
movsb
adc
jle
add
cmp
cli
lret
leave
rcl
hlt
jecxz
test
cmp
incb
out
loop
jecxz
shlb
cmp
loope
fcom
icebp
in
xor
ffreep
jmp
fcmovne
in
jmp
hlt
div
rol
in
out
xor
ror
neg
call
xchg
ljmp
xor
xor
rcr
xlat
jecxz
sar
cli
stc
xchg
lea
test
int3
in
xlat
fnop
aas
cmc
ds
shl
rol
ljmp
mov
cmp
icebp
into
in
jmp
xor
out
shl
sar
mov
cld
enter
mov
aam
lock
in
call
shl
fnsetpm(287
not
in
lret
loop
loopne
repnz
loop
out
out
rcl
cli
in
lret
adc
aad
ds
in
loope
lds
into
out
leave
ss
adc
push
hlt
hlt
incb
int3
icebp
out
out
mov
into
std
call
lret
repnz
aad
cli
roll
in
and
mov
repz
xor
clc
fucompp
stc
cld
ljmp
idivb
loop
ljmp
rolb
out
hlt
rcr
lret
not
sar
int
rol
ret
hlt
aam
ljmp
mov
xchg
loope
loope
enter
ss
repnz
loope
cld
xchg
lret
fucomi
out
out
xchg
int
in
aam
in
xor
fdivp
stc
test
aad
fstp
and
jmp
in
shr
in
into
lret
lret
fidivl
fdivrs
in
cmp
in
out
jecxz
enter
fsub
hlt
nop
in
ljmp
ror
cmp
aas
neg
xchg
test
test
stc
mov
ljmp
int
xor
cmp
in
jmp
in
repz
clc
xchg
jecxz
xchg
test
popl
in
cmp
repz
cmp
cmpb
shl
repnz
int3
stc
in
addl
stc
xor
loopne
sar
sarl
sar
std
leave
idiv
clc
lret
cld
leave
fsub
mov
rol
out
leave
out
cld
jmp
iret
in
test
std
roll
jecxz
mov
repz
sub
call
iret
cmp
stc
sti
and
mov
sti
xchg
cmc
out
cld
lret
out
out
loop
iret
divb
shl
cmp
out
into
icebp
rcl
ds
incl
inc
add
xor
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
lods
into
sub
push
add
add
std
jmp
fucomp
xchg
loopne
ret
imul
divb
into
iret
lock
ljmp
roll
addb
in
shl
xor
hlt
xor
out
rcr
rolb
jmp
out
lret
icebp
repnz
shl
repnz
aam
ds
rorb
call
in
jecxz
out
out
fcom
iret
cmp
out
cmp
fdiv
fcmovnb
fcmovb
fimull
mov
cmp
cld
repz
sar
ljmp
xchg
fcmovu
cmp
sti
in
repz
int3
fcmovbe
xor
fcmovbe
int
lret
rol
fst
jecxz,pt
mov
out
sti
xchg
in
cmp
sub
incb
loopne
out
loope
jecxz
orb
loope
shlb
hlt
out
jmp
icebp
xlat
sti
fiaddl
hlt
cmc
enter
shl
shl
rol
in
clc
out
repz
sar
jmp
in
fcmovnbe
loopne
push
test
out
iret
filds
pop
out
call
fcom
cmp
sti
sbb
stc
rcr
mov
leave
fdiv
cmp
icebp
in
idiv
fdiv
rcl
fst
in
cld
fstp
mov
int
repnz
in
fcomp
sarb
aad
fucomi
loope
mov
enter
mov
rcl
out
in
out
aad
ret
sub
test
int
enter
out
mov
cld
in
cld
out
fnsetpm(287
lock
rol
incl
jmp
sub
ljmp
lock
repnz
shl
mul
rorl
in
orl
loop
leave
sarb
fildl
shl
fucomp
out
mov
std
loopne
loopne
aad
fdivrl
lret
loope
cmp
fdivrp
mov
xchg
cmc
adcl
out
cmp
cmp
aam
ret
mov
loop
in
xchg
out
xchg
iret
shl
jmp
lock
clc
icebp
fdivrl
cld
xchg
fmulp
xchg
xorl
cmp
fcmovnu
sarl
cmp
idiv
shl
neg
int3
rcr
out
out
cmp
repz
test
out
fcomi
jecxz
cmc
call
cld
cli
mov
xchg
fcomip
cmc
shl
hlt
mov
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
pusha
stos
push
add
add
add
in
cmp
shr
cmp
cld
loop
decb
loopne
leave
int3
mov
cs
fldl2t
cmp
iret
stc
out
clc
loope
out
xchg
fdivrs
jmp
incl
iret
aad
ret
out
sti
ljmp
idiv
mov
xchg
mov
ror
lock
add
divb
int3
imul
test
cld
int3
cmc
out
addl
jmp
xlat
in
out
orl
cmp
xlat
loop,pt
lock
test
leave
ret
add
fsubp
test
ljmp
aam
das
int
loope
cmc
ss
shl
loop
jecxz
loop
cld
addb
jmp
int3
cmp
cmp
aad
ffree
in
test
lret
jmp
clc
call
xchg
mul
ljmp
into
jmp
cmc
sbb
shr
jmp
add
loope
out
ss
jmp
sarl
aad
fcmovnu
test
xor
xchg
test
out
mov
mov
sub
into
sub
lret
rcl
out
test
in
shr
fstp
in
out
in
sar
xchg
cmp
das
in
ror
xlat
lret
clc
test
fcmovu
aam
shl
fsubrp
div
jmp
iret
out
sub
lret
loope
out
stc
stc
stc
shl
clc
out
xchg
ret
jmp
sti
lret
xchg
ficoms
in
iret
enter
repz
int3
mul
repnz
fcom
loopne
out
test
les
fincstp
cmp
aaa
stc
iret
leave
cmp
cli
neg
cli
mov
cld
mov
mov
int
repz
out
repz
in
sar
fnstcw
in
loop
test
ret
or
clc
repnz
std
into
adc
xor
enter
int3
int3
repz
testb
mov
loope
xchg
hlt
xchg
loopne
call
enter
into
rcr
out
repnz
cmpl
mov
in
out
ror
lret
idivb
mov
repnz
in
in
jmp
xchg
sub
test
add
push
add
add
aam
enter
fldl
push
xchg
pop
sbbl
sbb
jle
add
xchg
in
jecxz
cmp
xor
ror
lret
ds
out
xchg
mov
jmp
jmp
xchg
shl
ror
lret
dec
loop
ret
cmpl
clc
dec
call
cmc
icebp
das
rcl
cmp
shl
repz
in
std
repz
iret
adc
xchg
fucomip
int
xchg
imull
icebp
sarl
hlt
cmc
clc
cmp
clc
loope
icebp
hlt
sar
stc
lds
lret
in
fbstp
aam
cli
lret
cmc
cmp
iret
aad
and
jmp
cli
ror
fisttps
shl
enter
fadds
add
cld
fcmovb
lret
xchg
icebp
out
std
shl
loopne
xor
sti
cmc
sti
iret
stc
in
shr
ret
lock
mov
addl
shll
repz
icebp
out
sarb
cmp
fadds
loopne
cmp
in
xchg
cmp
aad
cli
std
cld
in
call
aas
test
testb
xchg
or
shl
out
fdivrs
into
sarb
fsubp
std
jecxz
in
jecxz
incb
into
cmp
cmp
sarl
loop
sar
cmp
cmc
faddp
sti
xor
in
xchg
in
leave
stc
xlat
neg
jmp
xor
imul
cli
test
in
loop
mov
lret
in
int3
icebp
int3
fcom
cmp
in
cmp
test
icebp
std
incb
fsub
lret
lret
out
xor
vaddsubps
sti
sarl
xor
cmp
out
stc
shr
loopne
out
cld
fldl
in
out
out
aad
jmp
lock
ljmp
roll
loopne
call
mov
lret
clc
das
out
stc
icebp
aad
cmc
rcl
int
sti
out
fiadds
std
mov
sti
jmp
clc
das
fsincos
fld
cmp
enter
fyl2x
in
ds
cld
xlat
lds
mov
mov
xlat
in
out
shl
repz
icebp
loopne
clc
cmp
hlt
repz
and
fistpll
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
add
data16
jle
sbb
icebp
test
imul
xor
xor
ror
cmp
cmp
mov
out
fld
test
sub
out
iret
cmp
std
aad
fdivrs
aas
loop
in
in
sti
fisttpl
into
int
aaa
iret
xor
int
sar
cmpl
out
loopne
fcmovnbe
lret
addb
xor
fdivl
stc
repz
fcmovne
jecxz
cmp
mov
xchg
fdivrp
mov
jmp
out
repz
repz
repz
cs
cmp
out
in
cmc
repz
test
call
aad
into
nop
fcomi
lret
xchg
xchg
int3
jecxz
into
enter
hlt
hlt
stc
cmc
cld
adc
in
out
rcr
int3
fsub
lret
mov
out
xchg
xchg
call
not
into
fsubr
clc
shl
cmp
aad
mov
std
fmul
push
fsubr
rol
xor
jmp
sti
fcmovu
sar
xchg
in
out
int3
clc
mov
std
xchg
xchg
out
clc
call
xor
rcl
cmc
fiaddl
jmp
out
mov
xchg
out
aam
cmp
into
lock
xlat
aam
cli
loopne
aad
loope
mov
fptan
ljmp
int
rcl
cmp
shl
cmc
cmp
rol
out
test
mov
jecxz
in
in
out
out
out
cld
int
ss
shl
cmc
fdivr
cmp
rolb
lock
imul
les
in
ljmp
std
leave
jmp
xchg
out
out
hlt
int3
in
cld
test
into
fsub
shl
aad
call
test
incl
in
cmc
aaa
sti
cs
sar
and
test
fiadds
fiadds
test
hlt
in
stc
fcmovu
cmp
aad
roll
push
loop
aad
jmp
xchg
out
out
enter
in
xor
fnstcw
sub
in
test
mov
mov
loopne
mov
icebp
ljmp
cmp
roll
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
icebp
cmp
fiaddl
shl
out
test
clc
ret
in
fdivr
lret
aas
clc
repnz
addl
mov
in
sbb
ror
int
shr
int3
repnz
xor
jmp
filds
in
stc
fiadds
repz
icebp
aam
in
aam
leave
fst
ret
clc
sarl
loopne
test
int3
int
aam
sar
ss
cli
aas
out
rol
aas
lock
fdivrp
std
jmp
icebp
rol
das
into
out
call
clc
cmp
fcomi
cli
hlt
rcl
ret
add
jmp
and
in
xorl
clc
ret
cld
int
shr
loope
loopne
in
shl
mov
test
mov
call
leave
jmp
enter
aam
xor
rol
mov
test
in
jecxz
in
xor
clc
in
int
into
cmp
jecxz
cmc
xlat
test
jecxz
and
rorl
imul
rcr
lret
fidivs
and
cmp
loop
xlat
ds
adcb
mov
in
enter
out
jmp
jmp
fcmovb
hlt
out
ret
ljmp
in
out
shl
xchg
xorb
call
cmp
cmp
and
sbb
testb
fucomi
mov
enter
sarl
aam
ds
loopne
shl
loop
aad
addb
into
shrb
cmp
iret
cmc
out
xor
clc
in
ret
out
rcr
test
fsubrp
fucompp
loop
lret
rcr
not
in
rcl
repz
fdivrs
xchg
aad
sub
int
enter
iret
cmp
lret
cmp
ret
in
inc
cli
hlt
ds
xlat
test
cmc
shr
loope
call
iret
clc
iret
test
clc
ds
loop
cld
out
ljmp
stc
jecxz
repnz
faddp
sbb
jmp
cld
lret
dec
mov
iret
int3
xchg
add
cli
jmp
out
jecxz
jns
add
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
in
or
jle
add
in
ret
jecxz
sar
fiadds
shl
aam
xor
icebp
cmc
call
out
cmp
out
cmp
fcmovnu
enter
cld
hlt
lret
icebp
rol
in
cmp
aaa
xor
rcl
cmpl
cmp
fisttpll
std
orl
clc
ss
stc
in
int
out
jecxz
shl
mov
cld
decb
out
repnz
in
jmp
leave
sti
shl
aad
stc
lock
out
decb
sub
jmp
ror
xlat
std
cld
cmp
mul
mov
in
in
loop
into
add
ret
leave
aad
rcl
shr
loop
test
fdiv
add
mov
icebp
out
jmp
ljmp
jmp
lret
fdivrl
std
cmp
loopne
sar
mov
in
std
loop
test
iret
fucomip
icebp
in
cmp
repz
cli
aaa
sti
ljmp
lret
or
mov
repz
xchg
int3
into
cmc
call
cld
clc
sbb
cmc
aad
aas
not
aam
sti
out
call
fmul
not
lret
ss
loopne
loop
sarb
enter
in
in
int3
in
ljmp
sti
cmp
fcmovnbe
cmp
int3
fucomip
faddp
out
aad
add
mov
int3
lret
rorl
fcmovu
leave
call
out
repnz
shl
loope
sub
xchg
cld
loop
out
aam
repnz
sub
fcom
ds
div
test
mov
fimull
nop
jecxz
lock
lock
jmp
call
out
repnz
adc
decb
xchg
orb
loope
leave
cli
stc
shr
xor
fdivrs
neg
stc
test
fiaddl
ljmp
cmp
jmp
fsubp
shr
fcomp
and
loope
int3
in
leave
ror
icebp
xorl
cld
fmul
iret
xlat
repz
fcmovnb
cmp
cmc
lret
f2xm1
rolb
cmp
jmp
add
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
cmp
stc
fnstcw
testl
cli
lret
ljmp
out
in
jmp
cli
icebp
clc
loopne
xlat
imul
fsub
fsubrp
int
out
in
xchg
cs
test
jmp
rcr
cmp
out
test
idiv
rolb
iret
xor
cli
ss
stc
cmp
int3
aaa
xor
testl
mov
sbb
jecxz
loope
les
xor
out
int
lret
loopne
hlt
ds
cmp
cmc
sti
ret
loope
into
fsubrp
call
xor
shl
fmul
cmp
cmp
roll
jmp
cld
addl
out
xor
in
rol
lret
lret
fcmovu
aam
ret
ss
aam
cmp
cli
enter
mov
lock
repnz
in
ljmp
aaa
int
and
ret
rolb
enter
lea
ljmp
xor
int3
aad
cli
in
aad
out
loop
xchg
out
ljmp
ror
clc
in
lock
aam
jecxz
xchg
loope
loope
xchg
clc
xlat
int3
int
rorl
f2xm1
repz
shr
int
ret
addb
jmp
cld
xchg
test
pushl
repnz
jmp
cmp
cmp
icebp
fnstenv
fldl2t
jecxz
jmp
cmc
call
out
clc
stc
cmp
fildl
cld
fcmovne
mov
mul
xor
icebp
sti
cmp
divl
fnop
mov
loopne
test
icebp
iret
jecxz
ljmp
sar
aam
icebp
shl
cmp
sti
cmp
cmp
neg
cli
idiv
mov
in
int
in
fcmovu
shl
fidivrl
cmp
cmc
cmc
ljmp
incb
out
idiv
out
out
xor
loopne
in
repnz
jecxz
and
mov
mov
in
std
std
aaa
cmp
jmp
into
sar
lock
jecxz
in
loopne
sti
fildl
lret
movzbl
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
mov
daa
pop
fisubs
add
add
int3
out
shll
aad
cld
hlt
hlt
into
loopne
int
vcmpps
addl
rcll
loopne,pt
jmp
ret
hlt
roll
into
xchg
lock
mov
sub
fcomip
cmp
test
stc
std
sar
adc
fmul
fldz
nop
test
int
cmp
rcr
rcl
rcr
in
xchg
fadds
enter
ljmp
out
fsubrp
lock
cmp
cmc
in
testl
sub
xor
in
xor
rol
aas
dec
loop
fsubrp
repz
std
adc
clc
jmp
fmul
into
iret
xor
clc
aam
aaa
not
cmc
aas
in
cmp
cmp
jmp
cmp
loope
fisttpl
shr
idiv
cmp
aaa
out
dec
iret
aad
cmp
in
in
idiv
out
int
call
mov
int
in
xlat
in
lock
fdivr
loopne
xor
testb
std
sub
nop
icebp
jmp
stc
out
jmp
out
test
cmp
mov
loop
cli
cld
test
int
enter
xor
clc
cmp
shl
cmc
rcl
std
cmc
aam
hlt
adc
fadds
xchg
jmp
sti
shl
jmp
into
aam
fldl
idiv
enter
loope
hlt
cs
out
icebp
repnz
stc
fcmovne
add
not
out
loopne
mov
mov
out
repz
icebp
jmp
ljmp
rcl
aas
movb
in
in
xchg
test
out
not
in
enter
int
shl
cmpb
ljmp
lock
repnz
repnz
cmc
cmp
jmp
fcom
std
out
in
ret
cmp
lret
fdivr
out
notb
repz
imul
cmp
loopne
out
rolb
xchg
pause
roll
cmp
cs
fnstcw
rcl
cmp
vpaddw
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
sbb
cmp
sub
jle
add
repnz
cld
in
xchg
ljmp
in
hlt
stc
sti
jmp
loopne
cmp
stc
call
mov
fldl
out
int
cmp
cld
adc
sar
cli
repz
aam
test
out
ficoms
stc
sti
out
repnz
std
cmp
loopne
shl
aas
cli
stc
sbb
cld
frstpm(287
in
in
repz
xor
repz
fnstsw
ds
out
rcr
mov
repnz
in
fsubr
xchg
in
test
xchg
into
fbstp
in
cmp
cmc
int
cmp
jmp
loope
test
mov
std
loopne
mov
ror
clc
xor
iret
fidivs
fscale
cmp
call
xlat
xchg
out
fimuls
sub
shrl
fistpll
lock
bnd
roll
lret
loop
in
sub
test
in
icebp
loope
fsubr
cmp
clc
enter
idivb
repnz
mov
sbb
out
call
call
cmp
enter
into
cmc
inc
fiaddl
fmull
cmc
repnz
iret
in
ror
out
fcmovnu
idivl
out
stc
repnz
sar
fldpi
out
mov
lret
ror
xchg
mul
cs
out
int
lret
aad
ljmp
aam
loopne
fsubr
fst
in
or
xchg
ljmp
sarl
cli
fiadds
call
div
fchs
loope
loope
xchg
into
xchg
fdivrs
iret
lock
lret
out
repz
out
clc
cld
in
xor
int
repnz
jmp
loopne
repz
int
in
ret
rol
hlt
fchs
imul
into
loope
out
std
lea
ljmp
in
fadds
in
cmp
fxch
and
in
clc
enter
idivl
shl
cli
cmc
icebp
mov
fmul
clc
loope
icebp
loop
into
out
in
in
cli
cmp
sti
repnz
clc
std
iret
shl
aam
jmp
loop
xchg
enter
mov
shrb
into
ljmp
out
flds
in
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
loop
mov
cmp
jle
xor
filds
ljmp
repnz
repnz
aaa
addb
call
in
xchg
rorl
aaa
icebp
leave
xor
repz
xor
std
mov
popl
iret
mov
rol
shll
vpslld
dec
cmp
int3
cld
in
fst
mov
leave
in
lock
lret
std
xchg
shlb
shl
aaa
div
lret
call
cmp
rolb
in
lret
mov
xchg
loopne
cmp
xlat
enter
lret
shr
fistpll
leave
lret
sbb
lret
int
xchg
rol
repz
shr
icebp
repz
loope
sarb
fldl
xor
cmp
mov
nop
in
xor
divl
filds
fadds
call
xchg
nop
cld
std
repnz
sub
ss
stc
repnz
ljmp
fcmovnbe
jmp
test
int3
in
jmp
lret
ljmp
loopne
aas
cmc
call
inc
lret
mov
std
orb
cmp
int
lret
lock
incb
std
ret
std
loope
repnz
jmp
int
fdivr
int3
rcr
loopne
inc
cmp
fcmovu
test
sti
adcl
in
xor
sti
cmp
aam
ret
jmp
mov
stc
or
jmp
lock
xor
jmp
loopne
and
loop
cli
jmp
sti
ljmp
jecxz
cmp
lret
cmc
aaa
fiaddl
xlat
repnz
xlat
cli
sti
call
mov
in
call
shr
cmp
out
cmp
cmp
int3
jecxz
stc
mov
in
leave
ljmp
call
xor
aad
int
mul
out
out
ds
cld
faddl
jecxz
std
rorb
stc
repnz
cld
leave
cmc
sti
out
loopne
test
cmc
loopne
int
cli
lock
test
das
xor
cmp
repz
cmp
hlt
stc
cmpb
cmp
je
mov
mov
jmp
int3
aas
rol
fst
fadd
ljmp
decb
jle
fcmovnbe
xor
in
leave
or
ror
xchg
inc
ret
fnstenv
shr
shr
out
ror
rcl
rolb
loopne
mov
xacquire
fsubr
aaa
hlt
cmp
div
int3
lds
cmp
incl
test
loope
aad
mul
cmp
fpatan
aad
cmc
in
out
out
stc
mov
mov
fisttpl
repnz
jmp
les
rcl
out
out
loope
cmp
sbb
out
shl
loop
rcl
out
jmp
in
cmp
aam
loope
stc
sti
xchg
sar
ret
clc
sub
out
stc
xchg
in
mov
aaa
clc
aam
aaa
in
lock
cld
cmp
fsub
loope
addb
and
out
xor
cs
test
and
out
lock
fxch
enter
loop
xchg
cmc
fsincos
ss
aam
hlt
loope
cmp
xlat
jecxz
repz
test
out
mov
mov
lock
out
rcl
aam
jmp
stc
testl
in
mov
test
xor
loopne
loop
add
testb
cmc
enter
in
hlt
div
out
in
xor
cmc
lret
xlat
in
iret
clc
fcmovnu
sar
out
int3
lret
out
lret
loope
dec
xor
out
fcmovbe
in
loope
xor
loopne
sarl
jmp
aam
cmp
out
sub
iret
aad
jmp
xor
enter
int3
sar
cmp
cmp
jecxz
mov
in
lea
xchg
xlat
clc
xor
fdivs
cmp
ljmp
cld
repz
jmp
loope
fucom
test
xor
ljmp
aam
fdiv
sti
in
aas
in
repz
orl
shr
out
call
xor
cmp
cmp
jecxz
out
addb
lret
stc
loopne
iret
mov
xor
ljmp
out
stc
icebp
rcl
cli
cli
stc
cmp
xchg
fists
clc
icebp
cmp
cmp
in
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
shlb
add
add
lret
cmp
in
cmc
repz
stc
incb
shl
nop
mov
aam
repz
repnz
test
fcomp
sti
fldl
out
loop
fdivr
mov
aad
in
shl
lret
aad
div
loop
rcl
mov
shl
fimuls
sar
sub
cmc
aad
ljmp
in
xchg
leave
fsub
mov
div
aaa
fstpt
fcmovu
in
aaa
ds
loop
ffree
ds
fcmovnb
mov
hlt
fdiv
lret
enter
aad
test
ret
xlat
in
xchg
fiadds
cmc
xchg
enter
enter
push
fsubr
xlat
sbb
cmp
out
mov
orl
ss
out
aad
fmul
and
clc
mov
std
ret
jecxz
enter
icebp
fucomp
out
shrl
div
aad
iret
cld
call
lock
cld
sti
xlat
add
clc
into
std
nop
loopne
lret
into
ljmp
lock
cmp
in
std
cmp
idiv
in
and
call
jecxz
test
jmp
in
lret
rcr
out
fsubr
clc
cmp
out
repz
std
or
adcl
ret
icebp
cli
cmc
ror
stc
aas
sti
call
jmp
enter
loope
in
ljmp
clc
cmp
icebp
not
in
test
xchg
loop
call
cld
out
ljmp
xor
lds
into
repz
into
nop
lret
jmp
hlt
mul
rol
lock
in
jecxz
vpsubsw
lret
call
out
out
hlt
lret
lock
cmc
cmp
aas
in
shl
jmp
jmp
mov
std
int
enter
into
xor
shl
lock
cmp
aas
in
repz
fmuls
int
jecxz
out
stc
in
fsub
ljmp
test
repz
jmp
fucomip
movb
aaa
call
dec
or
push
add
add
xlat
xlat
rcl
ror
fld
cs
and
xor
jle
add
xor
clc
fcmovbe
cmp
into
loop
aam
stc
cmp
clc
jmp
in
jecxz
rcr
repz
xlat
shll
fxch
xor
std
in
shl
in
cmc
aas
jmp
fndisi(8087
fldl
jmp
vpmulhuw
ret
shll
stc
div
cmp
xor
xchg
cmc
test
out
into
or
out
cmp
stc
in
lret
fptan
cmp
call
imul
mov
jmp
lret
xor
repz
shr
aad
neg
out
shl
mov
fiaddl
call
in
in
xor
repnz
aam
call
cmc
icebp
out
cld
fsubrp
in
loopne
leave
fimuls
out
cmp
cmp
div
aam
loopne
out
cmc
repz
in
fucomi
out
jmp
xchg
out
mov
in
shl
ljmp
in
int
cmpb
jecxz
fsubr
test
lret
mov
call
test
ret
aad
clc
neg
fdivrp
neg
jecxz
cmp
cmp
cli
sar
repz
out
sub
cs
ds
cli
int3
loop
cmp
call
test
out
ficoms
lret
rol
repz
ss
incl
in
fxam
mov
fcmovnbe
std
in
lret
ss
out
icebp
aad
cmpb
fst
ret
clc
fadds
lock
ljmp
hlt
xor
clc
xor
sti
aas
fucomi
xchg
lock
jecxz
mov
into
mov
lret
clc
aad
cmp
aad
aas
lock
clc
adc
sti
loopne
jecxz
mov
call
clc
ljmp
ds
sti
lock
fcmovbe
loop
cld
out
in
loopne
xchg
xchg
mov
enter
repz
aas
out
out
cmp
ffree
call
ljmp
addl
out
fdivrs
fsubrp
test
ds
repnz
fdivp
fiaddl
out
shl
enter
fldcw
lock
test
loop
sti
out
jecxz
or
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
push
mov
add
adcl
int
ror
into
ror
in
in
in
test
mov
das
jmp
cld
in
xor
out
loope
repz
call
int3
std
mov
cmc
inc
out
aaa
xor
sti
aam
stc
out
xor
cli
call
mov
xchg
int3
clc
ret
xor
int3
xor
div
cmc
sar
jecxz
iret
xchg
in
fmul
mov
ljmp
lret
incb
loopne
fdivr
std
fsincos
faddp
cli
lret
nop
mov
shlb
repnz
in
fcomi
cmp
jmp
in
out
loope
not
repnz
fsub
jmp
jmp
sub
iret
xor
call
fcmovbe
std
xlat
cmp
rol
fiaddl
loopne
xchg
test
xor
ljmp
fildl
mov
jmp
jecxz
orb
xor
mov
out
int
aam
xor
adc
sti
out
and
jmp
cmp
in
stc
enter
cmp
into
repnz
in
mov
shl
das
repnz
in
fdiv
aam
in
fdivr
lock
cmp
ds
fincstp
mov
xchg
lret
jecxz
sar
xlat
out
hlt
lret
stc
sbb
ret
sub
out
dec
iret
loopne
hlt
mov
lret
sarb
xor
xor
shl
std
sti
fincstp
ss
sar
mul
hlt
loop
sub
int
sub
aam
clc
clc
idivb
enter
lock
loope
loope
icebp
xchg
fidivrs
add
hlt
sub
cli
lock
aad
ror
in
stc
inc
jmp
out
fsub
mov
jmp
xor
ror
idiv
in
hlt
repz
test
cmp
addb
in
jmp
xchg
out
loopne
out
xor
in
hlt
std
xor
fnstsw
aad
ret
fcmovnu
loopne
fucom
roll
out
in
mov
leave
int3
in
xlat
cmp
rol
aam
inc
clc
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
lahf
push
pusha
add
jle
add
cmc
out
lock
fcomi
rclb
leave
fldl2t
aam
out
cld
test
loopne
fdivr
addl
out
in
loopne
in
aaa
ret
int3
xor
jmp
cld
cmp
cmc
cld
neg
adc
stc
out
xchg
fcomp
rorb
repz
shll
cmp
cmp
fsqrt
aad
xchg
mov
std
std
cld
std
loop
enter
int
fcomi
xor
cmp
aas
xchg
cmp
mov
fcmove
into
fmul
dec
jmp
int
repz
aas
repz
fisttpll
std
xchg
dec
notb
fucomi
fdivr
jmp
cmp
xlat
rcl
iret
jecxz
sti
xchg
cmc
addb
int3
shll
aam
enter
lock
cli
out
lret
int
out
movb
mov
stc
mov
out
mov
neg
out
in
cmp
fnstcw
std
iret
hlt
out
ljmp
in
in
out
xor
ret
stc
cmp
fucomip
cmp
incl
fsub
mov
mul
jecxz
leave
int
repnz
mov
cs
vpxor
in
xlat
sti
neg
out
fnstcw
addl
xchg
fdivs
shll
in
cmp
lock
hlt
fscale
in
fcmovnu
loop
lock
jmp
mov
cs
cmp
out
jmp
cmp
ljmp
int
decb
iret
cmc
out
xor
add
repz
test
fcmovu
loop
fildl
mov
repz
neg
cmc
ret
test
aaa
jmp
idiv
cmp
clc
std
sti
test
cmc
mov
addl
sti
lock
std
icebp
call
shl
fiaddl
in
mov
cld
vprotd
mov
lock
stc
rol
clc
int
into
loope
addl
lret
mov
out
nop
fucomi
in
test
loope
shl
icebp
xlat
mov
int
fcmovnbe
rol
inc
lret
call
shr
std
in
hlt
aam
leave
xor
in
leave
cli
int
int
in
mov
jmp
vshufpd
ror
adc
push
mov
cmp
jle
add
shl
fsubp
rcr
int
jmp
jmp
idivl
out
fcom
fxch
cmp
into
lock
test
mov
aad
out
jmp
mov
jecxz
jecxz
loope
cmp
rcl
leave
ljmp
stc
testb
int
enter
xchg
test
loope
lret
xlat
sti
lock
int
fdivrs
fstpt
and
out
in
loopne
jmp
lret
ljmp
fdivp
icebp
sbb
iret
aad
stc
mov
ret
lret
jmp
lret
xchg
cs
stc
clc
aaa
xor
xor
repz
cmc
flds
in
add
lret
rcr
cmc
jmp
leave
call
aam
cmp
sti
ffree
mov
leave
loopne
mov
fimuls
call
loopne
aad
in
test
and
call
jmp
loopne
call
out
cmc
out
leave
call
ljmp
shl
cmp
out
mov
rcl
xlat
int3
in
in
in
leave
jmp
in
xchg
in
enter
lret
jmp
fadd
lret
xor
shl
lock
lret
add
iret
fucomp
rol
in
cli
xor
aaa
jmp
cmp
clc
jmp
enter
in
xchg
cmp
cmc
xor
test
rcr
cmp
rcr
into
adc
rolb
loope
ljmp
mov
cmc
xlat
aad
iret
stc
loop
repz
aad
aad
out
xchg
icebp
int
jmp
shl
mov
call
out
lret
in
cmp
shl
add
mov
leave
loopne
nop
div
lret
leave
icebp
hlt
in
int3
idiv
in
xlat
cmp
sbb
shl
std
repz
sub
shlb
int3
enter
cmp
shl
fdivr
test
out
cmc
fisttpll
in
icebp
ret
xor
into
xlat
jmp
loop
out
fnstsw
flds
ljmp
xchg
mov
ror
lret
xor
clc
xor
jmp
int3
aas
ret
sbb
roll
mov
call
add
iret
aas
cmp
fdivr
mov
lret
fmull
loope
jecxz
enter
out
fcomp
out
mov
fimull
movl
enter
out
cli
hlt
repz
cmc
icebp
ret
cli
lock
loope
in
jmp
icebp
mov
in
into
mov
xor
std
cmp
sti
fldl
and
fcmove
mov
fdivp
xchg
xor
out
sar
icebp
cli
int3
xor
rcl
cmpl
sbb
lret
loope
std
sub
enter
in
sti
shrl
out
fcomip
fldl2e
loope
cmp
in
jmp
mul
jmp
test
leave
mov
ljmp
cmp
sarb
test
out
movb
ror
loopne
enter
out
fldlg2
in
rol
cmp
fadds
flds
sub
xor
icebp
test
ds
out
rol
sbb
sub
std
leave
stc
loopne
test
sub
int
ljmp
cmp
sarb
loopne
in
std
enter
cld
rcl
aad
jmp
xor
call
fxch
clc
in
repz
addl
ffree
enter
xchg
mov
mov
int3
neg
iret
cmp
ss
ds
ret
test
sti
hlt
flds
popl
loope
into
repz
icebp
into
loop
sar
aas
addl
enter
in
mov
in
subb
rcr
shl
lret
clc
fsubrp
iret
shl
ffreep
aam
lret
testb
xchg
test
shl
rcl
cmp
ds
int
in
fdiv
clc
test
in
ret
sti
faddp
xchg
jmp
icebp
incb
jecxz
aas
cmp
xlat
test
test
in
test
loop
test
lock
loopne
into
idiv
in
mov
sti
fcmovnb
mov
loopne
mov
iret
shr
xor
jmp
in
dec
cmp
fcmovb
cld
enter
in
fildl
xchg
in
ss
ret
cmp
jmp
rol
rcl
rol
aad
sahf
xor
push
sub
cmp
jle
jmp
cmp
sarl
in
xlat
aad
hlt
call
lret
orl
jmp
sbb
sbb
ret
cmc
in
lock
jmp
xchg
cmc
aad
out
fnstcw
cmp
jmp
cmc
fdiv
sti
fcom
imul
aas
out
fnstsw
fcmovbe
nop
out
xor
lret
cmp
lret
rcl
lret
in
sbb
clc
test
shr
out
in
enter
int3
cmp
cli
cmpb
sti
rcr
addb
sti
test
iret
mov
ret
div
idiv
adc
fisttpl
in
out
xchg
fsubrp
xor
cmp
cmp
adc
shl
div
jmp
loopne
loop
xchg
lret
leave
aaa
test
fstp
out
jmp
cmp
rol
shl
mov
mov
xchg
xchg
lea
repnz
rcr
in
xlat
in
leave
ffree
repz
clc
mov
in
ljmp
lock
out
jmp
ss
rcl
cmp
test
cmc
fcmovnu
adcl
icebp
jmp
ror
cld
add
and
mov
jecxz
jecxz
fimuls
shrl
xor
cmp
out
fadd
sti
rol
lock
loope
testl
out
in
cmp
int3
ror
rolb
repnz
fstpt
shl
xchg
repnz
xor
ret
xor
ror
out
fucomp
lock
loopne
iret
xchg
hlt
fadd
testl
loopne
in
aas
fcomip
in
adc
rcl
hlt
in
enter
into
lret
aad
shl
iret
out
ss
jmp
std
stc
repnz
aaa
fdivp
cmp
mov
int3
xchg
int3
out
in
xlat
out
xor
cld
xlat
loopne
fdiv
neg
in
lock
in
mov
cld
into
jmp
ror
addl
in
cmc
xorb
icebp
incl
xchg
test
in
jne
jmp
aad
mov
mov
scas
mov
pop
add
add
mov
shlb
aaa
shlb
std
into
out
in
jmp
loop
addb
std
ret
lock
out
sarl
fsub
into
shl
lret
in
mul
cmp
shl
mov
fxch
ret
out
fisttps
xor
xor
int
test
stc
cmp
mov
loopne
mov
xchg
out
xor
hlt
cmp
sar
xor
cmp
in
fcmovnu
ret
in
lea
xchg
test
aam
lds
lock
iret
repz
idiv
fidivrs
out
fdivr
out
jmp
repz
clc
cmp
in
std
hlt
lret
aad
ds
test
aam
addb
icebp
sub
xchg
repz
in
out
xlat
hlt
jmp
into
in
into
in
out
in
test
out
in
ljmp
xchg
jmp
ljmp
out
xor
cmp
call
test
sbb
repnz
xchg
iret
ror
lock
in
fdiv
aad
jmp
test
test
sub
enter
in
repnz
iret
aas
loop
xor
xor
call
in
stc
cld
lock
fsubrp
fsubr
cli
xchg
xchg
fisttpl
cmp
clc
hlt
call
cmp
cmp
loopne
in
faddl
int
cmc
in
leave
repz
div
repnz
ss
cmp
aas
cli
test
fildl
leave
ljmp
shl
ljmp
cmp
icebp
rol
fsubrp
call
loopne
fists
aam
cmp
lret
aam
repnz
cmp
aad
cmp
in
xchg
nop
loopne
cmc
shl
lock
iret
aaa
leave
clc
shl
repnz
add
leave
lea
int
jmp
mul
cmc
lock
iret
leave
repnz
div
out
hlt
in
leave
xchg
fst
in
call
int3
fnstsw
fbstp
cmp
fcom
icebp
in
jmp
xchg
in
call
xor
cmp
xlat
xor
ds
ffreep
xchg
cli
orb
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
cmp
test
push
roll
cmp
jle
loope
enter
repz
xor
shr
les
iret
repz
test
fcomp
shl
clc
out
sti
cld
nop
shl
mov
shl
jmp
lret
fdivrs
sarb
cmp
enter
stc
jecxz
ljmp
sub
fsqrt
in
adc
xor
and
fsubp
shl
mov
cmc
in
shl
call
fcomip
cmp
cld
xlat
loopne
lock
fcmove
cld
cld
iret
loop
out
ljmp
repnz
loopne
hlt
ffreep
cmc
enter
test
jmp
out
jecxz
in
hlt
iret
jmp
idivl
fsubp
cmp
jecxz
out
jmp
mov
decb
int3
hlt
out
cli
into
sarb
sar
shl
rol
cld
sar
ret
in
out
dec
mov
in
lret
lret
xor
ss
cmp
test
out
stc
std
nop
int3
in
sbb
in
cmp
out
clc
lret
cmp
fadd
mov
ljmp
xchg
xchg
repz
in
enter
int3
call
fidivrl
mov
mov
loopne
ss
in
cli
lock
shl
test
icebp
rcl
call
faddl
repz
call
out
testl
jecxz
call
dec
xchg
iret
xor
std
cmp
cli
fcmovbe
clc
loope
xor
test
xor
leave
out
in
xor
hlt
loop
loope
cmp
in
lret
std
loop
cmp
in
sti
cmc
ffreep
call
mov
orl
jmp
xor
rol
cmp
std
aam
fsubp
test
orb
hlt
out
aam
icebp
repnz
loope
test
mov
mov
loopne
loopne
mov
loope
test
int3
std
cmc
fmul
cmc
repnz
sub
xchg
sbb
loop
test
xchg
jecxz
in
in
lret
repnz
hlt
les
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
popf
or
rol
add
add
aam
sbb
in
loopne
in
ljmp
int3
ss
lret
lock
out
cld
cmp
stc
rol
and
loope
in
xchg
xchg
ljmp
lret
cmp
cmp
iret
in
repz
int3
jecxz
into
fiaddl
in
xor
neg
iret
cmp
ljmp
mov
decl
xrelease
loop
enter
clc
leave
repz
sar
into
idivb
imul
xlat
out
loop
nop
iret
out
iret
xlat
cmc
call
fcmovbe
iret
cmp
icebp
incl
std
int3
mov
in
rclb
in
cmp
leave
cmp
jecxz
fcomp
in
clc
out
mov
lret
nop
push
int
lock
aam
into
aam
clc
icebp
aad
lret
fnstcw
shll
neg
sar
out
out
fcmove
mov
lock
lret
loop
int
aam
repz
div
cmp
cmp
out
std
in
test
loope
out
test
xchg
loope
shl
cmc
jmp
repnz
out
jecxz
in
shl
cld
jmp
in
into
push
leave
shr
adcl
neg
neg
leave
rcr
repnz
rcr
aad
mov
out
lock
hlt
fcom
loopne
clc
aad
ret
cld
aam
sar
xor
fcmovnu
jmp
repnz
rcl
xor
repnz
aam
fcmovnu
int
fistpll
mov
ljmp
mov
out
leave
aaa
xor
in
out
lret
stc
cmp
xor
test
ljmp
shlb
out
leave
call
xlat
shl
ret
cmc
ds
inc
test
fucomp
orl
ljmp
adc
cld
shl
in
mov
out
jmp
out
addb
call
fdivrl
rolb
repz
fsub
dec
mov
cld
rorb
jecxz
repnz
cmp
cli
in
rolb
mov
out
cli
xchg
in
loopne
out
out
jmp
leave
call
not
pop
xchg
jmp
aas
int3
mov
std
int
pushf
pushf
fs
mov
add
add
sarb
cmc
aas
out
ret
call
orb
rcl
out
out
fmulp
fldl2t
lret
clc
fchs
cmp
stc
shl
aad
sbb
loop
xchg
ret
hlt
shlb
enter
std
in
xor
clc
ljmp
mov
fmul
leave
into
enter
rcl
in
fdivrp
aaa
repnz
hlt
out
out
fadds
lock
icebp
enter
cmp
repz
int
clc
neg
ds
mov
in
std
in
mov
ret
shr
cmp
fxch
xor
ss
ret
out
fadd
lret
ljmp
rorb
fyl2x
hlt
fmul
ds
cmp
ret
cmc
loope
jmp
testl
lds
xor
cmp
int3
xlat
stc
aaa
rcr
fdiv
cmc
shl
aam
enter
ljmp
out
jmp
fcom
enter
iret
test
out
stc
les
ljmp
ljmp
hlt
shr
lret
sar
std
ret
lock
loopne
xlat
fisttps
mov
fdivs
in
sarl
jmp
fyl2x
idiv
mov
orb
loopne
loop
shr
out
cmp
rcl
shl
repnz
out
mov
repnz
xlat
cmp
testl
and
test
jecxz
mov
out
cmpl
xchg
hlt
out
idiv
mov
orl
cmc
shl
cli
cli
jecxz
out
ror
shl
fsubp
rcr
fildl
test
aad
mul
enter
std
xor
in
lock
icebp
xchg
in
xchg
jecxz
loopne
ljmp
cmp
lret
xor
flds
lret
leave
in
mov
in
shl
in
in
call
aas
enter
aad
std
aam
filds
popl
repz
ret
aad
in
sub
xchg
dec
jmp
lret
int3
fcmovnu
mov
inc
in
icebp
inc
movl
jle
cmc
clc
sub
mov
out
mov
icebp
into
loop
loop
loop
enter
into
repz
ds
movb
mov
ret
jmp
clc
aam
loopne
xor
in
out
decl
in
repnz
enter
ljmp
xlat
in
hlt
loop
add
inc
cmc
sti
out
out
loopne
xchg
aam
shrb
into
cmp
jmp
fsubr
idivl
lock
sub
fprem1
hlt
fucom
int3
int
mov
ss
shll
int3
call
std
ret
int
test
sti
cmc
sti
sti
test
loop
lret
int3
out
out
in
cld
repz
fcom
lret
cli
xlat
out
xchg
in
flds
fcoml
ret
xor
aaa
cmp
lret
clc
sbb
repnz
shr
loop
cmp
ficoml
xlat
loope
aad
aad
jmp
sti
icebp
shr
jecxz
clc
fdivr
ljmp
lock
aam
in
repz
jmp
cmp
int
xchg
and
out
sbb
into
std
xchg
fcomip
in
fcmovbe
div
cli
jmp
repnz
jecxz
add
sub
in
repz
xlat
std
call
jecxz
vpaddb
mov
shl
xchg
icebp
mov
cmc
cmp
fcmovne
lret
das
neg
clc
cmp
aas
sti
aas
not
repz
out
mov
xchg
out
repnz
xchg
les
cmp
out
fstp
aaa
ds
push
mov
testl
ljmp
xor
repnz
lock
rorb
mov
xchg
add
icebp
into
int3
cmp
cmp
std
out
lret
lock
fchs
rolb
out
int3
enter
call
out
fxch
repnz
stc
xlat
repnz
jmp
lret
int3
mov
rorl
hlt
jmp
cli
out
loopne
lret
shl
xchg
lret
int
addl
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
adc
fdivl
cmp
jle
out
aaa
clc
xor
cld
clc
int
ljmp
loop
jecxz
call
ljmp
das
in
sti
xor
shl
iret
aad
xor
ret
shl
shr
mov
enter
cmp
icebp
call
test
hlt
roll
in
fdivr
nop
mov
ret
icebp
cmp
lret
xor
out
ds
xchg
orb
mov
xchg
aam
enter
lret
repz
into
cmc
xor
loop
lret
fiaddl
mov
ror
icebp
shlb
cmp
aad
icebp
lret
test
clc
addb
mov
icebp
int
cmc
xchg
out
in
iret
enter
iret
fcomip
fidivrs
repnz
call
testb
fstl
ss
aam
jmp
ret
repz
xchg
int
lret
xchg
mov
xchg
imul
in
xlat
in
lret
out
fnsave
xor
cmp
out
lock
loopne
jmp
fldl
icebp
int
enter
cmc
rcr
ret
iret
ret
out
cli
ret
out
sti
ljmp
lret
into
loopne
ret
jmp
out
loope
clc
loopne
inc
aas
leave
loope
call
std
out
loopne
repnz
test
aas
enter
rcl
iret
sar
jmp
sti
lret
xlat
out
std
mov
test
mov
in
in
std
int3
cmc
int
loope
aaa
in
fcomp
cmc
jecxz
cmc
call
in
test
jmp
cmp
xor
int3
in
into
sti
rcr
std
loope
xchg
std
enter
fldl2t
xchg
repnz
aam
jecxz
shlb
jmp
lret
roll
rorl
xchg
in
jmp
out
jmp
ret
stc
fdiv
fcom
jmp
ds
leave
cli
fdiv
std
cli
jmp
fisttpl
aad
cli
in
stc
sar
stc
sti
addl
mov
out
call
rolb
fcmove
sarb
in
repnz
add
call
fmuls
mov
jmp
aam
int
int
aam
xchg
inc
lret
jo
cmp
add
add
enter
xchg
add
aad
clc
lock
in
xlat
into
test
rcr
xchg
leave
xlat
enter
out
repz
in
fbstp
aam
int
lret
fsubr
sarl
cli
ret
xlat
ds
ljmp
out
jecxz
cli
fdivrl
icebp
cmp
into
fdiv
loopne
cld
fcomp
jecxz
xlat
sti
sar
lret
repz
in
int3
xor
ljmp
std
aas
sarl
mov
mov
xchg
lret
pushl
ret
repz
jmp
fnstsw
repz
stc
hlt
vpmulhuw
out
aad
enter
in
xchg
std
out
cs
imul
lock
ljmp
cmp
addb
in
fiaddl
rcl
das
repnz
fidivrs
lret
lret
cmp
repz
int3
fldl
iret
out
in
out
clc
xor
enter
fucompp
xlat
xlat
ror
repnz
ds
jmp
testl
in
lock
vpaddb
leave
xor
fmulp
aam
div
sbb
fildl
hlt
xor
cmp
fdivr
aam
loop
jmp
addl
xchg
jmp
xor
out
fldt
call
ret
cmp
loopne
fldl
loope
jmp
mov
in
in
rol
cli
stc
aam
in
hlt
aam
repnz
jmp
loop
in
sti
mov
iret
cmp
les
hlt
out
xor
cmpl
fsincos
in
in
xchg
icebp
call
hlt
lret
cli
hlt
enter
lret
cmc
fiaddl
cld
mov
repz
fmulp
shlb
repz
iret
sti
xor
loopne
fsubr
fdivrp
filds
in
sbb
lret
xchg
jmp
xor
into
imul
int3
iret
in
icebp
iret
aaa
out
fildl
clc
std
in
mov
jecxz
into
lret
in
ret
std
jmp
fidivs
cmp
aad
in
sti
and
mov
lret
into
rcl
sti
cmp
jmp
std
cmp
cmp
xorb
mov
lea
jmp
rcr
int
stos
outsl
int3
nop
mov
add
repnz
add
add
sbb
neg
cld
shl
filds
jecxz
fnstenv
out
loope
cmp
test
int
xchg
fisttps
test
sti
out
in
ljmp
rol
test
and
xchg
jmp
fadd
repnz
cli
lret
cmp
shl
clc
ret
ds
fmull
repz
cmc
ss
enter
fmul
add
iret
out
shl
loope
test
fiadds
int3
nop
in
in
sub
xor
xor
fsin
in
clc
cli
ret
aas
xchg
out
stc
jmp
add
xchg
in
std
aad
cs
out
fdiv
fcmovu
leave
fsubr
int
loop
lock
cmp
stc
sti
mov
in
xchg
out
shlb
cmp
fdivp
xor
fcom
in
iret
test
hlt
enter
lock
lret
loope
icebp
hlt
int3
lret
cmp
std
cli
int
fdiv
aad
cli
sti
fsub
fadd
jmp
in
std
mov
or
int3
out
jecxz
cld
out
fidivrl
out
or
test
out
loope
cld
xchg
cmc
ror
fidivrl
fucomi
out
fsubrp
sar
ret
push
cmc
dec
xchg
int
nop
mov
aad
fdivr
int
cmp
ret
loop
in
in
mov
dec
hlt
out
sarl
sti
aaa
aam
out
repnz
int
rcr
mov
shr
mov
mov
mov
out
aam
cmp
sti
cmp
cmp
mov
lds
out
nop
das
aaa
ljmp
out
cld
cli
aad
ds
std
out
repz
faddl
out
iret
jmp
cmp
int
jmp
dec
xlat
out
ds
fimuls
lea
out
rcr
divb
inc
stc
cmp
repz
in
cmp
movl
sub
loop
fincstp
ds
lock
aas
les
stc
mov
mov
out
nop
in
xchg
in
ljmp
fidivrs
shr
aad
fdivrs
enter
add
ret
xlat
fmul
fmul
rcr
test
dec
out
lods
rolb
jle
add
stc
xlat
cli
mov
mul
fdivr
jecxz
loope
xchg
in
mov
xlat
cmp
out
lock
repnz
out
in
sar
cmp
leave
xchg
fmull
in
cmc
xor
cld
cli
cmp
fdiv
rcr
cld
call
fdiv
lock
into
fmulp
int
in
stc
repz
idivb
std
ret
shl
loope
loop
in
test
icebp
mov
hlt
icebp
enter
sub
les
lret
rcl
aaa
fnstcw
cmp
repz
mov
mov
test
xor
enter
fstp
sarb
in
out
test
into
xchg
adcl
call
cmp
cmp
in
test
test
in
iret
out
jmp
fdiv
repz
fstp
fistpll
test
out
mov
fadds
call
shl
xlat
clc
cmp
call
cmp
not
loope
imul
in
mov
lret
into
fdiv
mov
icebp
cmp
cmp
cmp
cmp
call
loopne
xlat
test
in
jecxz
fdivr
in
repz
lret
out
sub
in
in
cmp
fcmovne
in
fdivr
iret
in
stc
loopne
jmp
fstp
les
fpatan
call
cld
aad
aas
cli
cmp
enter
fdivrp
sti
repnz
repz
lock
hlt
cmp
cmp
fidivl
int
cmpl
std
lret
mov
into
iret
loope
lret
cmp
repnz
jmp
fucomip
xor
fdiv
repz
incl
mov
jmp
loope
call
cmp
std
fxch
test
jecxz
xchg
ljmp
xchg
rclb
int3
cmc
rcl
cli
sarl
loope
and
aas
in
test
lret
xchg
in
xor
jmp
les
test
xlat
fmul
into
jecxz
hlt
sub
sti
iret
repnz
fcmovnb
in
sarl
in
call
out
aad
shr
ret
int3
je
mov
jmp
rcl
leave
int3
leave
fldt
cwtl
mov
jle
add
leave
std
repnz
aas
add
in
mov
int3
int3
mov
lea
aad
ljmp
out
lock
mov
fisttpll
in
aad
repz
sub
aad
cmc
aad
mov
enter
test
fdiv
aad
idivb
ror
test
sbb
fadds
iret
out
test
rcl
shr
sarb
fistpll
rcl
movl
jmp
int
ljmp
lret
int3
leave
aad
aad
xchg
out
jmp
leave
jmp
jecxz
aaa
sti
lock
shr
repnz
repnz
loopne
aad
leave
mov
jmp
aad
xor
ljmp
iret
cmp
loop
not
xchg
icebp
xchg
repnz
ljmp
repz
icebp
shlb
add
fildl
jecxz
in
out
loope
nop
loop
out
repnz
mul
cmp
into
xor
testb
out
jecxz
int
cli
loop
rcr
int3
loope
lock
fst
out
jmp
in
call
lret
mov
dec
iret
mov
xchg
sub
xlat
jmp
cmp
add
out
loopne
loopne
mov
int
rorb
fnstenv
leave
into
out
repz
in
int
xchg
out
inc
ljmp
in
jecxz
out
icebp
xor
in
lret
jmp
adc
out
in
clc
rol
xchg
fcmove
xchg
ret
aaa
call
sarl
shl
repnz
out
call
loopne
jmp
lock
cmp
cmp
cmp
icebp
aad
repz
out
xchg
jmp
xchg
ret
test
cmc
jmp
jmp
cmp
and
test
mov
repz
std
cmp
ds
add
icebp
fsqrt
jmp
in
sbb
test
lret
or
addb
add
add
ror
fstp
ffree
pop
fiadds
push
and
add
add
jmp
xor
in
jecxz
aad
testb
cld
jmp
rcl
stc
jmp
lock
cmc
fdivr
out
xchg
loope
out
fiaddl
or
xlat
in
lock
rcl
out
out
out
repz
cli
sbb
div
call
loopne
mov
jmp
stc
fcomp
cld
aaa
std
fdiv
fsubrp
ss
ret
test
cmc
ffreep
aad
loopne
xchg
xchg
call
out
sub
cmc
loopne
cld
in
cmc
icebp
rcr
test
aam
loope
adcl
in
iret
adc
cmc
fst
cmc
mov
in
jmp
loope,pn
xor
in
xlat
neg
aam
iret
addb
stc
loop
stc
ljmp
ror
in
ret
int3
cmp
lock
adc
add
out
enter
mov
cmp
rcl
rcr
clc
int
shl
xchg
cld
mov
mov
in
loopne
in
xchg
shl
out
aaa
xor
xlat
repnz
shl
shl
xchg
mov
mov
repnz
ror
in
leave
test
out
enter
cli
mov
lret
mov
idivl
aam
sarl
cmp
shl
cmp
loop
aam
idiv
sti
xlat
cld
roll
lock
fsubrs
or
cmp
in
jmp
in
sti
out
aam
ror
in
hlt
cld
aaa
clc
hlt
xor
cmp
shl
aam
in
xchg
fucomp
jmp
sar
out
fnstsw
cli
aad
fdivr
aam
div
call
jecxz
mov
movb
cmc
lret
repnz
aaa
addl
loop
in
fisttpll
xor
cmp
sti
and
in
xchg
aad
lret
jecxz
loop
in
jecxz
out
cld
repz
hlt
cld
aam
cmp
cmc
cld
fucompp
loopne
incb
mov
jmp
enter
int3
aam
pop
adc
mov
daa
sbb
add
xrelease
lret
lock
cmp
hlt
sti
fstpt
fadd
icebp
repz
fisttps
xchg
xlat
out
fstpt
lock
adc
aad
sar
xchg
clc
lret
mov
mov
clc
out
icebp
shrl
ror
ss
div
sti
rcr
cli
rcl
decb
shr
nop
xchg
loope
in
aad
fidivrs
lock
shl
test
in
xchg
jecxz
leave
push
test
xchg
icebp
ret
lret
out
aaa
ds
out
ret
cli
rcr
jecxz
fsubrp
loop
test
orb
cmp
xor
lret
jmp
aam
into
xchg
cmp
ljmp
enter
lock
jmp
int
leave
stc
ret
loope
in
in
in
lret
roll
out
shr
out
fst
clc
into
jecxz
repnz
flds
out
xchg
mov
lret
repnz
fst
sarl
aas
cmp
loopne
in
jmp
xchg
cmp
loopne
ffreep
jecxz
jmp
lret
int3
test
cli
cli
cmp
in
out
adc
cmc
test
sti
ds
fmuls
rorl
xor
aad
hlt
ljmp
addb
mov
leave
test
std
repnz
shl
ret
int
jmp
ljmp
hlt
repz
in
jmp
cld
jmp
mov
fbstp
aam
shr
fptan
ds
sbb
cli
loopne
test
lret
nop
xchg
sbb
int
out
fucomi
fucomi
cmp
jecxz
imul
vpaddb
fimull
faddl
shl
loop
ret
cli
lock
aaa
int
test
loopne
loopne
xlat
fsubp
out
loopne
lock
das
jmp
xlat
jmp
repz
rcr
fcmovne
cmp
ffreep
stc
orb
test
xchg
in
out
jmp
xor
stc
ret
rcl
cmp
stc
cmpl
enter
out
icebp
test
out
clc
aaa
ss
cmc
aas
idiv
icebp
xchg
test
in
xor
jmp
rol
enter
jp
fimuls
xchg
flds
jle
add
xchg
mov
into
out
fcom
rol
cmc
cmp
leave
cmp
rcl
ds
out
cmp
testl
lea
jmp
cli
sti
loop
aam
cmp
ffreep
incb
hlt
rcl
xlat
aad
aad
aam
push
std
xor
in
mov
sti
loope
jecxz
mov
shr
rol
repz
xlat
rol
std
iret
fldln2
div
lock
cli
loope
in
sub
leave
fdivrp
sub
aad
xor
enter
fdivrs
rcl
test
loope
fucom
jmp
jmp
jecxz
loop
mov
int3
xlat
repz
sar
out
stc
test
push
cmc
rcr
aam
fmul
fisttpll
icebp
lret
repz
hlt
fcmovne
aam
cmp
stc
cmc
sti
std
xchg
cli
into
rcr
adcb
aaa
ror
fcomi
out
cli
fidivrs
aam
fildl
add
sti
orl
cli
ret
int
lret
xlat
iret
fistpll
xchg
out
mov
in
mov
mov
cmc
jecxz
cmp
hlt
in
icebp
int3
iret
jecxz
out
leave
fst
int
loope
decl
cli
imul
xor
rcr
icebp
ret
loope
test
cmc
cmp
mov
testl
leave
fucompp
sar
fnstcw
cli
neg
shl
aad
xchg
std
mov
shl
iret
xlat
aad
cmp
lret
into
not
test
repnz
flds
ljmp
jecxz
ljmp
stc
jmp
into
fucomp
into
xchg
xchg
jmp
mov
call
fcmovne
out
int
jmp
adc
sub
fucomp
in
lret
leave
into
jecxz
adc
shl
xor
out
sti
lock
cmp
sti
adc
cmp
rorb
out
repnz
xor
enter
enter
cld
in
loopne
in
cmp
enter
repz
leave
test
jmp
test
aad
xor
mov
add
jmp
aas
push
mov
adc
fildl
jle
add
aad
jmp
aad
int3
std
fistl
call
les
enter
clc
cmc
out
cld
hlt
in
orl
aad
aad
xor
out
xor
aaa
cmp
in
jmp
in
out
cld
ljmp
xchg
mov
div
ffreep
ss
out
lret
enter
test
fcmovbe
cli
inc
aam
jecxz
stc
int
mov
sbb
aas
das
rol
in
int3
in
out
iret
sarl
std
cld
test
fsubp
fiaddl
into
xchg
mov
in
out
xor
rcl
cmp
ret
sbb
cmc
fisttpll
out
mov
cmp
in
in
lret
shr
fnstsw
jmp
out
ret
lret
test
out
jmp
loop
rol
xor
iret
shl
jecxz
fcmovbe
loopne
test
xchg
xchg
icebp
cmp
aam
cmp
aad
loopne
fmulp
rol
lret
mov
int
xchg
shl
rcl
cld
repz
aaa
stc
rcl
clc
fidivrs
xlat
loope
into
fmuls
lock
ljmp
iret
roll
clc
xchg
loopne
int
mov
lret
jmp
aad
clc
in
fcomi
jecxz
std
jecxz
fcomi
or
loop
sbb
mov
lret
fcom
stc
jmp
ljmp
cld
loopne
jecxz
in
in
out
out
xchg
mov
leave
repnz
aaa
shl
xlat
cld
loope,pt
in
xor
ret
aad
mov
cmc
jecxz
fstl
rol
loopne
cmp
lock
sbb
repz
in
testb
in
jmp
ror
in
int3
fdivl
icebp
fst
fst
in
ljmp
loop
out
call
cmc
lret
out
lret
repz
sub
ret
lret
idiv
out
addl
out
out
clc
rcr
in
rcl
aas
loopne
into
out
lock
loop
leave
in
xchg
cmp
shl
xlat
xor
jmp
enter
lret
jno
sbb
push
cmp
or
add
add
faddp
clc
fcmovnu
in
push
cli
imul
test
out
testb
aam
fcomip
ds
into
rolb
enter
loop
std
cmc
xor
int3
out
int3
fcmove
cmp
aam
aas
int
cld
ret
orl
repnz
iret
xchg
mov
aaa
out
out
enter
call
hlt
fcmovnb
cmp
hlt
out
in
and
call
in
lret
xor
ljmp
xchg
fcomi
add
addl
repnz
fcmovbe
clc
cs
aad
jmp
loope
out
std
jmp
xchg
xchg
fmul
enter
cmp
in
aam
not
cli
rcr
orb
into
ret
out
jmp
repnz
shl
loopne
hlt
cld
stc
out
leave
adcb
iret
lock
xor
cmp
iret
repz
rcr
div
enter
mov
in
shl
out
lock
in
cmp
ret
testb
fstp
xchg
out
jmp
fxch
in
cmp
cli
cmp
ljmp
hlt
aad
ror
hlt
mov
xchg
inc
leave
icebp
ret
repz
cmp
int3
jecxz
xchg
f2xm1
xlat
aam
incl
addl
xor
cmp
repnz
fsubr
into
xor
into
fdivr
loopne
xlat
ret
test
jmp
fsub
jmp
loop
loopne
loop
lds
shlb
addb
jmp
in
mov
xlat
xor
cmp
fldz
clc
rcl
clc
test
mul
jmp
mov
ljmp
aam
int
hlt
addb
rorb
call
ljmp
cs
cli
repnz
sarl
fnstsw
leave
fiaddl
nop
in
xchg
jmp
xor
repz
cmp
cmp
loope
iret
clc
sbb
int3
in
clc
and
nop
addl
xor
jmp
int
rol
fcmovu
fstps
outsl
inc
sub
add
add
cld
sar
aad
repz
cli
rolb
call
testl
fcomp
clc
lock
fcmovb
stc
mul
cmp
fsub
sti
stc
out
loopne
xchg
loop
in
in
sub
shl
int3
cmp
sbb
cmp
xchg
leave
jmp
mov
icebp
rcl
in
mul
loop
rcl
aam
lock
hlt
and
out
loope
in
frstpm(287
lds
into
vpaddusw
aas
sarl
fst
ret
out
decl
xchg
cmc
ljmp
iret
test
cmc
orb
std
repnz
out
repnz
jmp
aas
shr
in
cmc
in
shl
test
test
cli
xchg
fprem
cmc
cmp
leave
cmp
cmp
fst
hlt
incl
xchg
out
mov
adc
out
cmp
xabort
incl
incb
enter
clc
lret
jecxz
orb
xor
divb
in
std
iret
in
in
and
jmp
addb
nop
mov
xor
sar
loopne
rcl
inc
shl
call
mov
call
nop
loope
cmc
xlat
aaa
cld
call
cmp
push
ds
loop
enter
loop
sti
sti
ljmp
cli
in
clc
stc
lock
icebp
ljmp
cmp
leave
loope
in
loopne
loope
out
hlt
aad
shl
lock
ds
test
test
mov
enter
addb
loopne
loope
xor
enter
xlat
jecxz
filds
call
in
std
loop
sbb
icebp
loop
xor
xlat
xor
repnz
fcomp
fldl
ret
decl
xchg
leave
add
out
icebp
sti
in
sar
aaa
fdiv
into
rcr
rol
test
ret
hlt
cli
out
cli
enter
repnz
jmp
shl
lds
hlt
in
lret
in
lret
xor
cmc
aad
clc
fimull
test
xchg
jb
add
fmull
call
rorl
add
call
add
ret
rcl
fcmovbe
lret
shll
in
push
addb
jle
add
aad
lret
fcomi
iret
cld
xor
stc
ror
fisttpl
cli
test
clc
icebp
xchg
loope
test
ljmp
cmp
xor
fprem1
idiv
call
xchg
out
lret
out
jmp
iret
xor
int
cmp
or
cmp
aam
or
loop
out
nop
iret
mov
out
test
stc
shl
cmp
rcl
in
cmp
ret
lds
sti
iret
mov
aad
jmp
ljmp
cmp
orl
dec
cld
mov
hlt
cs
hlt
jmp
sti
test
loopne
flds
in
in
adcb
cmp
cld
ljmp
fcmovb
jmp
xchg
xchg
xchg
int
aam
loope
repnz
cli
lock
fdivrs
rcr
loopne
adc
loop
test
out
repz
shlb
hlt
repz
sar
cmpl
fld
orb
xchg
aad
out
aaa
clc
lret
xor
icebp
xor
xlat
hlt
push
fdivrp
rol
idiv
fldl
loope
enter
enter
xor
idiv
repz
fcmovbe
clc
rol
jecxz
mov
ret
shl
mov
sub
cmp
lock
hlt
mov
leave
loop
out
xchg
sbb
fld
fcmovnbe
in
xlat
iret
enter
mul
cmc
lock
in
aad
notb
in
mov
clc
in
ret
jmp
int3
ret
add
repnz
out
test
xchg
loope
in
out
fdivr
xlat
aaa
ljmp
cmc
xchg
xchg
in
xlat
and
leave
cld
out
cmc
mov
mul
ss
in
out
leave
xor
ljmp
mov
mov
jmp
in
sar
in
and
int
in
divb
cli
in
clc
loop
loope
out
cli
lock
adc
leave
cmp
mov
lret
out
sarb
idiv
xlat
fdivr
cli
fistpll
xorl
out
movb
jmp
mov
aam
fstp
fcoml
ret
cwtl
pop
mov
add
add
int3
clc
mov
xor
not
xor
cli
fdiv
lret
cmp
test
and
iret
ficoms
xor
cmp
iret
sti
jmp
out
test
mov
xchg
hlt
in
ror
divl
fidivrl
call
cmc
jecxz
test
fcmovnbe
jecxz
cli
loope
mov
iret
adcl
int
xor
ds
fcmovnb
or
fdiv
lret
jmp
mov
or
out
iret
ljmp
cmp
sar
testl
in
cld
cli
call
xchg
icebp
aam
rol
rcr
clc
fdiv
fincstp
cld
fstp
testb
cld
jmp
ret
call
into
cmp
aad
xlat
aam
fnclex
sti
fiadds
jmp
iret
jmp
test
test
xchg
call
test
fadd
fcmovne
lock
ljmp
out
jmp
rcl
fdivp
stc
sub
stc
fldpi
out
xor
ss
cmp
jecxz
fdivr
xchg
xchg
ds
mov
into
repnz
repnz
aam
clc
lret
fucomp
idiv
ret
shl
les
leave
call
aam
out
lret
fidivrs
aas
xlat
cmp
out
orl
mov
ret
in
hlt
aas
iret
sarb
loopne
mov
jmp
enter
jmp
les
cli
lret
std
std
out
inc
xlat
shr
call
xchg
fucom
xchg
test
cmp
xor
leave
sarb
lret
sar
jecxz
shr
imul
mov
vpand
jmp
xchg
mov
sub
fcmovnbe
out
xor
xlat
loopne
jmp
loope
fmul
ror
loope
out
aaa
test
cld
sti
ljmp
loopne
mov
clc
mov
ljmp
jmp
xchg
lret
rcl
rol
repz
in
stc
in
cli
loop
sarl
jmp
ret
enter
int3
or
test
jo
add
add
filds
mov
out
into
mov
fucomp
aaa
cmpb
loop
test
fcmovbe
jmp
test
loope
ss
test
loope
aam
shl
fmull
jmp
testb
hlt
ss
out
call
cld
repz
in
mov
sti
std
mov
in
xor
sar
shr
cli
loop
imul
in
xchg
and
int
jmp
rclb
shl
lret
lock
stc
call
loopne
test
hlt
xchg
out
fisttps
xchg
into
in
mov
aaa
ror
fmul
fscale
ss
repnz
cmpb
loopne
leave
mov
stc
out
mov
in
jmp
cmc
sub
xor
repnz
repz
test
cmp
cli
hlt
xbegin
lea
int
repnz
cmp
in
fiaddl
fisttpll
rorb
sub
aaa
jmp
int
fdivrp
cmc
mov
cld
lds
jmp
out
cld
out
lret
roll
fld
fsub
mov
into
hlt
mov
icebp
aad
xor
clc
int
iret
test
leave
loope
loope
or
int3
int3
loop
loopne
xor
stc
aaa
lds
iret
cmp
sbb
fdiv
ret
fcmovbe
cli
aad
aam
jmp
cld
xchg
xchg
icebp
ret
xor
out
xor
fmulp
add
repz
aad
fcmove
out
mov
fiadds
out
in
fnstenv
iret
shl
roll
aam
imul
iret
xchg
call
cmp
jmp
fucomi
test
fsubp
mov
xlat
clc
lret
int3
icebp
loop
loop
in
int3
shlb
in
cmp
lock
aas
in
cmp
mov
call
lret
int3
hlt
out
shl
sub
fstp
lret
aam
stc
cli
fsubp
addb
ficoml
test
test
cmp
jmp
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
fstpt
jle
add
lock
loope
orb
loopne
xchg
nop
out
aad
shrb
cmp
loop
ret
call
decl
jmp
lret
lock
cmp
shl
out
fcom
cmp
rol
icebp
adc
mov
cmp
shr
ljmp
fsub
repz
fcmovnu
mov
cli
std
mov
int
loope
cmc
repnz
in
lret
sti
ror
cld
fstp
cmp
cmp
out
dec
filds
shlb
xor
hlt
xabort
call
loopne
xchg
add
jecxz
lret
ljmp
out
xor
lock
cmp
aaa
hlt
int
sar
aaa
loopne,pt
in
loope
mov
stc
fdivp
or
shl
aam
aaa
xlat
fidivrs
loopne
ds
fiadds
out
jmp
sti
ljmp
jmp
sarl
cmp
stc
out
icebp
lds
fxch
mov
xchg
out
adcb
cs
aaa
shr
icebp
iret
jecxz
and
fincstp
cli
and
shl
lea
lret
sarb
cmp
rcr
xlat
jmp
into
mov
fucomi
clc
xor
clc
iret
loope
cli
sti
call
stc
shl
test
loop
loop
xchg
nop
xchg
icebp
leave
aaa
enter
jmp
cli
fdivrl
out
cmp
jecxz
cli
std
out
loop
int3
ljmp
fdiv
call
rol
addl
test
into
out
jecxz
xchg
jmp
fdivs
xlat
aaa
ljmp
cmp
jecxz
add
fisttpl
or
loopne
fsubrs
cmp
aam
cmp
cmp
iret
xchg
and
xchg
fxch
xchg
xchg
loop
call
std
sti
cmp
cmp
fsincos
fcomp
cmp
ljmp
aam
out
xor
cmc
fnstcw
jmp
aas
cmc
cmp
mov
cli
out
xor
icebp
lret
int3
call
fisttpl
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
das
aad
aad
cld
fcom
in
cld
xchg
loopne
out
adcl
aad
leave
lock
lret
int
xlat
testb
fsubp
ljmp
iret
lret
fcmove
leave
aam
inc
lret
shl
out
adc
mov
mov
mov
xor
xlat
sti
ljmp
adc
ds
in
fcmovu
nop
jmp
aaa
out
fucompp
fsubr
in
lret
xor
hlt
xchg
testb
rolb
rolb
enter
cmp
std
loopne
push
fildl
in
out
jmp
nop
xchg
xor
ss
enter
iret
flds
mov
cmp
out
loope
call
ret
xor
std
fndisi(8087
ror
loope
xchg
xlat
cmp
fisttpll
leave
in
div
enter
cmc
into
fnstsw
cmp
loop
hlt
add
cli
loop
out
lret
xchg
call
fdiv
cmp
adc
cmp
fldl
jmp
loope
lret
xlat
cmc
fidivs
aas
shl
ds
fsubr
test
fisttpl
xor
in
cmp
cmp
aas
ds
fcmovb
mov
test
fldl
imul
out
out
xor
rolb
out
sti
out
filds
out
icebp
xor
lock
sar
lret
rol
loope
loop
mov
in
jmp
mov
xchg
out
ljmp
stc
cmp
cmp
ret
flds
in
in
loope
jecxz
loop
aad
cmp
neg
shl
faddp
testl
sbb
mov
shl
ljmp
cmp
fdivrp
out
mov
fisttps
ljmp
int3
hlt
fmul
cmp
std
xor
out
cld
stc
fcmovnb
xchg
cld
xchg
stc
in
into
mov
pop
inc
xchg
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
hlt
or
sahf
in
add
add
sar
fnstenv
lret
sti
or
ljmp
rolb
fnop
xchg
mov
out
int
adc
shl
iret
ret
shl
cmp
fistpll
in
ljmp
aad
ret
hlt
mov
fmul
iret
ss
xor
loopne
lret
out
nop
repnz
rorb
shlb
cmp
ds
not
aas
sti
mov
out
idiv
cld
call
subb
xor
cmp
lret
cmp
rol
cld
cmp
icebp
shl
mov
out
enter
xchg
in
mov
xor
hlt
cmp
cmp
div
call
loopne
fadds
in
out
shrl
hlt
in
cmp
cmp
sarl
cmp
enter
stc
jecxz
xchg
in
jmp
out
cmp
iret
std
fcomp
sarl
sti
add
in
jmp
jmp
icebp
ljmp
fincstp
fmul
rcr
in
aam
roll
xchg
hlt
std
cmc
lret
fildl
call
aaa
aad
ror
ss
sti
into
iret
les
addb
iret
xchg
cmp
in
cli
aaa
cmpl
cmp
add
neg
mov
mov
hlt
out
adcb
jmp
lock
faddp
loop
sti
idiv
shr
popl
mov
rol
aad
cmp
hlt
cmp
hlt
cmp
std
sarl
in
ljmp
repnz
iret
ss
loop
les
cmp
cmpb
cmp
fstpt
fcmovu
fchs
in
shr
decl
in
lock
out
cmp
xlat
idiv
cmc
cmp
jecxz
lret
jmp
or
int3
xchg
int
das
xor
in
lret
xor
cld
icebp
test
cld
std
repz
mov
in
leave
sti
lea
shlb
sti
ljmp
and
aad
mov
out
xchg
pop
fistpll
rol
jmp
stc
aad
ss
shl
or
fcmovb
fmuls
fsubp
xchg
dec
jmp
iret
rcl
fcomp
aad
mov
bound
add
add
mov
repnz
jmp
xor
loop
leave
imul
std
cmp
ret
faddp
stc
aas
stc
xchg
out
stc
mov
fmul
sti
int3
into
pushl
icebp
lret
cmp
shl
shl
loopne
in
cmc
fcmovb
cli
ret
test
xchg
repz
aad
aad
icebp
aam
cmc
xlat
jmp
fcomp
mov
rolb
enter
in
jmp
ret
idivb
int
clc
in
test
cli
cli
loopne
std
stc
stc
lock
clc
xor
xor
lock
xor
xchg
loope
call
out
fsub
test
xchg
loopne
out
cmc
hlt
call
repz
out
in
vpsubsb
jmp
jmp
xchg
in
cmc
fucomi
clc
aad
cmp
addl
fcoms
sar
jecxz
icebp
xor
fst
fsubr
jmp
in
in
loopne
ret
ret
decl
leave
xchg
in
into
nop
cs
fcmovnbe
shll
jecxz
fsub
rol
hlt
call
jmp
loope
jecxz
div
iret
loope
xor
shr
cmp
cmp
aad
out
cmp
fstp
enter
loope
int3
rcr
out
into
int
out
jmp
fst
lret
fnstsw
sti
cld
out
loopne
xchg
ljmp
sti
lret
mov
jmp
xor
idivb
fsubr
std
sar
sbb
test
leave
in
clc
mov
loop
test
rol
lret
out
adc
fidivrs
out
ret
lret
mov
xor
lret
fcomip
clc
loopne
in
das
aad
ljmp
repz
mov
cli
cli
cld
iret
int
mov
call
out
xor
fiaddl
rolb
int3
out
out
aam
sub
into
xor
stc
fcmovbe
ffreep
cli
icebp
ret
in
ljmp
jmp
lret
in
lock
fucomi
xor
in
iret
cmp
cmc
cld
out
idivl
mov
fsubp
loopne
mov
mov
int
in
aas
xor
enter
cmp
cld
sarl
in
mov
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
das
jb
dec
adc
add
add
cli
fldl
jmp
aam
shl
lret
repz
cmp
xor
fsubrp
cld
leave
fdiv
aam
test
jecxz
xchg
ljmp
out
enter
loopne
cmc
fdivr
in
enter
mov
int3
shl
int
aaa
leave
aaa
in
int3
sarb
aad
fdiv
fabs
mov
mov
fimuls
loopne
loope
in
in
ss
int3
iret
cli
icebp
repz
add
test
neg
fucomi
mov
lock
in
cmp
out
out
cld
incb
xlat
sti
ror
cmc
lret
jmp
mov
xor
rcr
aad
std
ds
fcomp
ds
cmp
add
fcom
xlat
idiv
mov
mov
and
ret
int
icebp
enter
cmp
in
fsub
test
ret
int3
xlat
lret
in
std
fucomi
out
das
out
cmp
aaa
ljmp
cmp
loopne
mov
lret
xchg
leave
leave
ret
ljmp
hlt
sarb
into
rcl
jmp
lret
xchg
mov
rcr
loopne,pt
loopne
addl
jmp
fisttpll
aam
in
fcmovne
xor
fcmove
cld
icebp
aad
fisttpl
lret
orb
jmp
lret
fcmovu
bnd
cld
rorl
fsub
loopne
lock
xor
cmp
leave
sti
clc
cmp
cmp
xchg
test
mov
into
test
test
sti
repnz
jmp
shl
ret
rolb
aad
into
lret
int3
iret
leave
lret
jmp
xlat
into
ljmp
loope
hlt
icebp
fcmove
stc
in
fmulp
cli
in
rorl
jecxz
cmp
aam
push
jecxz
out
loopne
enter
clc
enter
into
out
shl
test
imul
sti
int
cmp
int
out
iret
lock
mul
call
mov
int3
in
out
in
sti
iret
in
iret
std
cmc
ror
push
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
psubusb
int3
hlt
add
add
clc
cli
inc
call
call
icebp
out
loope
xlat
xor
cld
repnz
in
out
iret
cmp
shl
ret
loop
enter
int3
fimuls
rcl
xor
ret
loop
cmp
hlt
out
rcl
hlt
cmp
not
neg
sti
out
mov
jmp
shl
call
xor
std
loope
hlt
into
icebp
cmc
out
cmp
lds
fcmovu
loope
nop
dec
jmp
cmp
loope
std
std
enter
int3
loopne
mov
fildl
ret
repz
lret
lret
aaa
push
std
sar
rcl
std
jecxz
or
fcmovb
mov
int
clc
cmp
cmp
in
in
icebp
fadd
stc
xlat
int
addb
in
xor
fldl2t
fcomi
std
fcmovnbe
cmp
neg
icebp
out
sbb
loope
xchg
aad
icebp
into
aad
sarl
cmp
rcl
cld
fiadds
fdecstp
int3
cli
mov
xor
iret
iret
sarb
int
sarl
out
hlt
iret
loop
addl
rolb
iret
shl
out
xor
loop
cmp
and
mov
mov
mov
repz
int3
xor
ljmp
fcom
cmc
xlat
fcmovnbe
pop
nop
mov
jmp
sti
shl
fst
iret
shl
iret
clc
testl
aam
call
shr
ror
faddl
xchg
lds
repz
fcmovnbe
into
jmp
in
hlt
ds
out
lret
int3
fucomp
enter
in
shl
les
int3
ds
cmc
cmp
test
jmp
int3
ljmp
mul
int3
xor
cmp
fucomp
xor
incl
cmp
in
hlt
int3
loop
div
fdiv
xor
xor
sarb
cmp
loop
test
call
testl
in
xbegin
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
