push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
aam
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
sbb
shrb
test
mov
xchg
jbe
mov
mov
mov
dec
mov
out
jg
jle
fnstenv
cli
jnp
sbb
sahf
mov
and
jecxz
test
subl
mov
mov
push
ljmp
scas
aad
adc
adc
in
cmp
lods
scas
pushf
dec
jle
icebp
dec
xor
scas
fwait
int
adc
sbb
fstps
sbb
add
push
jbe
sub
mov
fisttpll
popf
xor
imul
pop
push
fsubs
adc
pop
mov
dec
and
jge
xor
mov
jle
scas
adc
bnd
pusha
mov
mov
jns
mov
test
jbe
mov
xchg
mov
pushf
in
popa
inc
sbb
and
mov
mov
xor
sbb
lcall
mov
aam
sbb
in
ss
push
int3
dec
cmc
mov
ja
icebp
push
add
add
xchg
jne
out
test
loope
and
popa
data16
push
xchg
loope
push
jle
in
xor
mov
add
outsl
sbbb
sub
int3
mov
mov
mov
push
adc
add
jle
sbb
cmc
in
jb
sbb
xchg
imul
ljmp
aam
hlt
or
inc
dec
jbe
and
pop
stos
sahf
and
pop
test
jno,pt
loopne
jne
jp
test
jl
and
ret
sahf
xchg
test
pop
cwtl
dec
repnz
test
es
mov
in
call
jge
dec
ficoml
xchg
pop
ret
push
mov
push
jp
jmp
or
fstps
xor
outsb
add
pop
xchg
mov
xchg
fistl
mov
dec
call
popf
repz
enter
orb
xchg
ljmp
sbb
sub
js
xor
mov
fnstcw
testl
or
out
fistl
pop
cmc
sub
xchg
iret
mov
int3
push
jb
lret
imul
dec
and
je
cmc
fs
mov
fistps
loopne
shll
cli
pop
int3
inc
nop
popa
lds
je
and
mov
xchg
mulb
cmp
mov
test
cmp
push
lahf
lret
aam
filds
mov
or
sbbb
scas
add
fisttps
or
je
xor
lret
jg
fwait
pop
outsl
mov
sub
mov
ds
mov
dec
mov
xchg
iret
dec
cmpsl
sbb
je
xor
mov
cld
push
iret
movsb
fldl
cmpsb
shrl
cmp
jo
jmp
lret
jle
jle
loop
inc
jge
out
push
push
mov
das
stos
stc
mov
icebp
mov
xchg
fistpl
loopne
cmp
insl
test
mov
repnz
inc
in
inc
ljmp
cwtl
sub
jne
ret
sub
pop
clc
push
or
mov
out
sbb
pop
roll
lret
dec
aad
sti
enter
dec
ja
data16
mov
and
popf
or
jae
insl
stos
dec
mov
fucomp
pop
inc
jbe
int
rclb
mov
jl
mov
imul
mov
xchg
daa
mov
sbb
lret
push
movsl
cmpl
mov
movsl
dec
out
mov
std
dec
mov
pop
mull
bound
clc
jnp
cwtl
fptan
jp
xor
push
cltd
mov
adc
inc
mov
push
xchg
mov
dec
int
xlat
inc
xchg
xor
dec
aaa
pop
push
fbld
pop
xorb
xchg
pop
lds
call
js
jmp
xlat
add
ss
mov
or
pop
idiv
addr16
jno
dec
push
jb
cmp
hlt
mov
lock
dec
xchg
sbb
stos
mov
push
clc
lods
xchg
push
mov
pusha
test
repz
insb
int
mov
scas
xlat
jecxz
xor
cs
cmc
jae
pop
ficoms
mov
add
dec
test
lret
movsb
test
push
dec
add
push
cmp
jo
jmp
out
mov
xor
xchg
or
pusha
fsubr
inc
sti
pusha
jmpw
adc
loope
xlat
and
out
lcall
sbbl
fisubs
fwait
jnp
ljmp
mov
das
fmuls
shl
outsl
loopne
scas
or
int3
fs
xor
pop
mov
daa
sarl
jmp
daa
push
add
int3
out
fld
xchg
cmpsl
mov
sbb
push
cmp
rcr
in
fimuls
jmp
cwtl
lods
sub
inc
fcom
dec
adc
daa
shll
mov
mov
inc
or
sbb
add
scas
test
daa
xor
adc
mov
cmp
lock
dec
fcomps
xchg
aam
xchg
mov
xchg
fucomp
jno
cli
fdivs
sbb
cmp
into
cmp
mov
popa
add
jge
jmp
inc
fsubl
rcrl
fdivs
mov
xchg
jle
popa
jl
ja
pop
xor
sti
push
scas
lret
and
pop
push
int3
jl
mov
dec
sub
push
add
push
stos
dec
loope
lret
jae
leave
lea
das
popf
outsb
fstpl
negb
stos
sub
fmull
add
hlt
xlat
dec
ljmp
lock
rcrb
loopne
cmpsl
mov
or
int
int3
jb
imul
add
int3
jns
dec
jns
rcll
scas
push
movsl
jp
cmpsb
mov
push
lods
sbb
sbb
int3
out
cmp
insl
fcoml
jbe
xchg
stc
nop
adc
fisubs
insb
add
mov
loope
cmpsb
mov
shll
sbb
cld
idivb
imul
cmp
xor
icebp
idivl
xor
mov
add
pop
dec
lcall
push
in
icebp
fisttpll
imul
test
lea
arpl
gs
cmp
cmc
inc
mov
cs
pop
popl
xchg
inc
pushl
fld
fsubl
movsl
je
mov
es
inc
push
imul
fiaddl
sahf
insb
fildll
mov
pop
fdivrp
mov
cmp
rcrl
loopne
mov
cmp
mulb
lock
xor
pop
cmp
mov
ret
es
dec
hlt
popl
jle
mov
les
packuswb
or
divb
mov
movsl
mov
in
shrl
mov
hlt
add
mov
cli
dec
aaa
mov
and
mov
push
jns
xor
sti
dec
sbb
pusha
in
cli
mov
dec
inc
dec
addr16
push
insb
and
push
loope
pop
or
push
xchg
push
stos
decl
mov
mov
pop
push
movsb
jne
jle
xchg
sbb
jecxz
repz
enter
mov
jnp
fs
addr16
push
push
out
lahf
cmp
inc
fisubs
and
arpl
movsb
push
adc
add
in
lods
ss
sub
pop
sub
shrb
popa
loope
mov
mov
stc
test
cmp
mov
js
arpl
out
or
jb
push
outsl
mov
mov
add
cli
pop
ds
sti
aam
xor
psubsb
int3
mov
cmp
lods
pop
movsl
mov
sub
or
fxch
xchg
aas
hlt
lcall
pusha
xchg
mov
jp
ret
icebp
sub
sub
add
or
xlat
or
sti
icebp
lods
leave
jae
data16
fmulp
inc
jp
sbb
inc
insl
push
cmp
jmp
int3
adc
std
scas
fs
sbb
inc
icebp
fcompl
cmp
mov
and
rcl
or
lahf
movsb
sub
dec
lods
lahf
mov
gs
dec
xlat
sarb
shlb
das
sub
testl
pop
scas
imul
dec
ja
sbb
mov
pop
enter
xchg
sbb
jns
ret
lock
push
jl
shl
scas
inc
out
push
xor
rolb
aas
cltd
xchg
xchg
shrl
test
jbe
call
sbb
int3
inc
mov
cmc
clc
rcrl
add
stos
push
fs
sarl
pop
out
gs
ffreep
orb
adc
fwait
xor
bound
bound
sahf
xchg
lret
loopne
adc
mov
lock
mov
cmpb
and
loope
cwtl
xchg
mov
push
pop
test
aam
ret
or
cmp
fistps
rcll
xor
cmpsb
fistps
pop
and
mov
mov
enter
pop
lea
flds
into
and
call
jns
lea
sbb
xchg
mov
popa
mov
cmp
xchg
dec
je
push
sti
cmp
cmp
sahf
mov
xor
hlt
push
int3
negb
cmc
cmp
mov
test
jo
inc
addr16
sub
inc
in
loopne
shrl
das
push
sti
adc
jne
pop
jg
pusha
push
lock
gs
mov
push
cmp
repz
popa
arpl
xchg
aas
pushf
jle
pop
int3
lahf
mov
fimull
loope
in
push
mov
mov
pop
jg
push
jo
adc
bound
jbe
cmp
mov
mov
lcall
popf
cmpl
push
mov
xchg
lret
jb
pop
jb
dec
repz
test
xor
mov
push
sub
pop
mov
mov
test
jne
adc
jne
out
lods
iret
movsl
stos
inc
mov
in
shrl
outsw
mov
shlb
popl
xor
add
inc
xor
idiv
dec
cmc
pusha
xor
in
fs
inc
push
push
mov
add
or
pop
imul
push
pop
add
clc
aam
xor
xchg
mov
mov
xchg
jo
das
push
adc
inc
out
adc
jbe
test
pop
fcomi
inc
cmpsl
mov
loope
jmp
cmp
dec
fcoml
lea
arpl
imulb
ds
addr16
int3
js
inc
popa
or
jp
jns
cltd
push
jne
faddp
lock
mov
icebp
aad
addr16
loope
loopne
bound
daa
leave
shlb
fildll
mov
sbb
bound
insb
into
push
cli
pusha
mov
jb
xchg
push
sbb
xchg
dec
out
sub
js
arpl
loope
add
dec
das
sub
add
repz
xor
into
das
push
jo
iretw
outsb
inc
add
mov
mov
cmp
jecxz
adc
inc
stos
cmp
inc
fists
aaa
icebp
xchg
in
pop
lods
rcll
int3
sbb
aaa
xor
sub
push
push
xorl
cs
es
les
ficomps
jmp
subl
xchg
cmpsl
mov
ret
fwait
aaa
sbb
jo
mov
fcmovnb
and
nop
and
repnz
imul
adc
int
xchg
ss
or
lods
mov
xchg
mov
mov
dec
adc
test
outsl
add
andl
dec
aam
cmp
pop
sub
enter
popf
gs
cmp
pop
arpl
cld
push
fiadds
data16
mov
sub
sbbb
or
push
xrelease
push
xor
repnz
jle
movsb
mov
test
scas
push
sub
pop
loop
and
xchg
nop
cmp
and
cmp
mov
popf
mov
lock
pusha
pop
push
push
fbld
mov
dec
push
dec
lods
out
andl
jge
xchg
fdivl
jno
shll
xor
fs
cmpl
mov
mov
pop
jge
add
mov
fwait
popf
iret
xchg
ljmp
rcl
push
cs
idivb
adc
xchg
push
push
mov
cmpsl
stc
cmpsl
jge
sub
push
inc
cmp
out
xor
inc
jne
sti
ficoms
pop
subl
xorb
sbb
cmp
popf
movsl
lock
out
lds
data16
in
iret
pop
test
notl
jo
xchg
xchg
dec
cltd
xchg
push
enter
pop
out
push
mov
loop
mov
push
jle
push
call
and
int
fsubp
mov
insb
xchg
lahf
ja
xor
pop
mov
pop
xchg
mov
ds
daa
test
mov
jbe
pop
mov
mov
push
fcomps
or
push
mov
push
shll
sbb
and
aaa
adc
mov
mov
shrl
jae
mov
repz
inc
clc
out
insl
outsb
pop
cmp
fimull
idivb
add
push
inc
ja
push
stos
sbb
push
stos
fwait
and
loope
cmp
repnz
pop
es
pop
add
xchg
pop
pushl
int3
push
cmp
sbb
inc
fidivrl
out
mov
jg
inc
jnp
ja
lcall
mov
in
jg
mov
jecxz
xlat
insb
dec
fstps
cmp
mov
mov
and
or
stos
jge
adc
pop
sbb
xor
xlat
mov
arpl
adc
cltd
xchg
es
inc
imul
movsl
movsl
jp
dec
shr
pop
dec
jns
addb
push
movsl
aaa
dec
or
xchg
and
icebp
lcall
fidivrl
rcrb
mov
mov
js
pop
jmp
mov
jne
hlt
in
pop
insl
xlat
mov
out
push
or
sub
xlat
divb
xchg
loop
mov
push
push
xor
fiaddl
mov
rolb
mov
cmpsb
cs
insb
xor
mov
mov
cmpsb
aaa
push
das
lods
pop
sbb
movsb
rcll
rorl
dec
cmp
jb
out
test
jge
lret
pusha
filds
add
cmp
lods
mov
jg
push
xchg
add
jno
iret
aad
mov
lret
pop
add
cld
shr
out
add
test
cmp
and
inc
in
jns
pop
into
sti
pop
xchg
repnz
daa
jo
mov
sbb
adc
inc
push
mov
outsb
aam
loope
pop
sbb
xchg
ja
hlt
cmpsl
push
call
jl
add
jae
sub
xor
mov
addr16
mov
pop
jns
push
dec
ljmp
dec
repz
out
fmuls
faddl
or
ja
pusha
sub
jmp
daa
icebp
or
add
pop
mov
mov
addr16
inc
sbb
dec
repnz
xorl
pushf
cmp
adc
dec
pusha
idivl
cmp
rorl
cmp
adc
cmp
sub
sbb
in
out
mov
pop
push
lahf
sbb
ret
imul
dec
xor
icebp
out
repz
gs
mov
jno
xor
jmp
ret
hlt
mov
and
jo
daa
cmp
mov
mov
xchg
mov
sbb
lds
in
adc
mov
jecxz
rcr
into
call
mov
mov
mov
or
loopne
call
jge
dec
and
dec
popa
iret
pop
ret
divl
mov
jo
inc
mov
push
lds
sub
popa
xor
jbe
inc
mov
sti
xchg
cmp
cmp
cmp
xor
pusha
inc
stc
push
lret
fcmove
in
shl
adc
std
movsl
sub
cmp
sub
push
ds
fwait
sbb
in
in
pop
lret
xor
jmp
ja
push
ficompl
imul
cmp
je
js
ret
insl
out
xor
and
cmp
sbb
ret
xor
push
subb
iret
adc
cmc
cmc
shrl
cld
mov
rcl
or
test
add
xchg
mov
inc
cltd
sub
cltd
xchg
push
push
dec
mov
cmc
std
imul
mov
xor
lock
std
jnp
xlat
add
pop
bound
and
xchg
sub
in
test
mov
push
in
mov
pop
repz
aas
iret
inc
push
adc
mov
mov
mov
xchg
out
sbb
jne
roll
outsl
mov
mov
or
mov
mov
or
cmp
jmp
xchg
jb
sbb
add
test
sbb
lock
daa
ret
adc
stc
mov
cmp
pop
scas
push
mov
dec
sbb
les
in
dec
flds
push
xchg
inc
insb
lds
insl
dec
call
cmpsl
push
or
inc
lahf
adc
and
scas
cvttps2pi
shr
cmc
movsb
movsl
scas
out
dec
mov
xor
aad
pop
pop
scas
rcrb
mov
jg
addr16
es
arpl
mov
roll
mov
in
cmpsb
pop
jge
mov
push
mov
pop
xor
sbb
popf
mov
in
pop
in
mov
int3
ss
test
pop
sub
outsl
xchg
xchg
loopne
cld
movsb
pop
js
mov
mulb
or
ljmp
outsl
je
les
inc
adc
inc
push
outsb
decb
outsl
mov
fsubrl
cmp
sbb
movsl
cmp
addr16
es
cld
inc
lods
mov
cmpb
ds
sbb
cmp
inc
mov
push
insl
aas
dec
adc
pop
cmp
pop
or
sbb
or
add
filds
xchg
sub
add
into
add
push
push
pop
sti
adc
mov
fcmovnb
dec
imul
out
out
add
paddusw
aaa
call
out
xchg
outsl
jl
dec
inc
mov
lds
mov
jo
dec
movsl
push
mov
mov
pop
or
jne
shl
pop
dec
jo,pt
call
imul
in
dec
in
cmp
sub
push
pop
push
call
mov
shl
adc
jle
int3
jg
add
add
mov
frstpm(287
push
fistps
stos
incl
mov
inc
or
iret
mov
mov
cmp
hlt
xor
inc
fildl
cmp
xchg
leave
add
jnp
jns
clts
adc
xchg
gs
push
mov
jne
std
pop
and
sbb
fcompl
pop
mov
sbb
shlb
xrelease
inc
push
push
pop
sarb
call
in
mov
mov
cli
in
data16
mov
mov
lods
mov
movsl
mov
cmpsb
jg
jecxz
test
sti
mov
xchg
stc
je
in
push
stc
and
and
pop
xor
mov
mov
imull
adc
rolb
clc
cwtl
ss
fnstsw
out
and
push
pop
push
jae
dec
inc
fstpt
in
repz
sarb
ret
sbb
pop
mov
sti
cld
push
cltd
dec
int3
push
add
movsl
lret
sub
mov
add
lret
mov
cmpsl
mov
into
sub
inc
lcall
frstor
push
xor
mov
fsub
mov
jnp
dec
std
out
adc
pop
push
out
pop
cmpsl
es
cwtl
cs
into
lret
sarl
adc
les
cmp
jp
mov
jecxz
add
outsb
popa
out
sbb
es
cs
mov
mov
mov
push
movsl
jecxz
adc
xchg
test
out
aas
aam
or
sbb
cltd
cs
sti
ds
jne
hlt
jecxz
arpl
dec
lock
inc
test
adc
out
mov
jecxz
gs
mov
jae
and
push
int3
fisttpl
push
sarb
fs
push
loopne
mov
rcr
loopne
ljmp
mov
sub
sbb
outsb
loopne
mov
scas
jecxz
and
loope
xor
rolb
sbb
pop
in
cmp
push
adc
cmp
xchg
xchg
jbe
sub
out
sbb
gs
ja
mov
les
sub
rcr
mov
sbb
sub
mov
add
push
xlat
fcmovnb
insb
xchg
fidivrl
leave
add
lock
mov
xlat
jmp
adc
daa
ret
adc
add
jecxz
mov
add
mov
faddl
pushf
mov
push
cmp
jp
add
je
testb
arpl
push
sub
sbb
shl
xchg
ret
addr16
or
inc
sub
scas
cmp
arpl
cld
push
repnz
push
jmp
cmc
int3
fdivl
adc
and
ss
imul
sarl
jae
xchg
mov
nop
mov
pop
stos
cmp
mov
and
adcb
gs
push
cld
xchg
and
mov
mov
adc
lock
addps
inc
mov
pushf
xchg
das
mov
jo
das
adc
repz
out
pusha
daa
add
into
xchg
cmp
fdivs
mov
decb
int
clc
pop
int
cs
cmp
adc
test
cmpsl
test
jp
mov
out
cmc
mov
sbb
xor
aam
fidivrs
das
loopne
sbb
or
je
inc
aas
shr
ret
sbb
sahf
inc
syscall
pop
jecxz
outsb
leave
and
and
cmc
pop
ds
popf
dec
push
xor
in
mov
nop
je
shll
jo
pop
notb
mov
mov
jno
jb
imul
lds
mov
pop
mov
dec
test
adc
lds
popf
movsb
adc
sbbl
mov
in
fst
test
jbe
das
andl
mov
xorb
jb
push
jmp
fs
add
repz
in
jb
adc
add
dec
icebp
or
sbb
push
out
mov
ss
loop
push
shrl
fisubl
sbb
jg
jbe
rcrb
aaa
test
test
imul
pushfw
mov
sub
adc
mov
sbb
fistps
xchg
in
ljmp
fwait
cmp
adc
and
mov
adc
fs
xlat
lea
pop
icebp
cmp
outsb
popa
ja
pop
inc
test
jbe
shll
xchg
in
xchg
sti
xchg
pop
movsb
and
addb
mov
pushl
rorl
ss
lret
fs
fcompl
dec
mov
sti
inc
cmp
add
mov
aaa
inc
call
xor
sub
jge
dec
mov
rcll
cmp
pop
decl
mov
add
into
xchg
lds
fdivrl
push
dec
xchg
aas
jmp
mov
sub
leave
invd
sbb
shll
lahf
cld
aas
jo,pt
jg
inc
adc
pushf
dec
xor
jg
das
mov
ljmp
add
ja
stos
pop
lods
adc
out
aas
adc
shlb
movsb
in
add
lea
fisttpl
adc
stos
mov
dec
dec
dec
sub
and
cmp
bound
xorb
pop
icebp
sub
popa
repz
mov
sbb
test
das
shll
mov
inc
icebp
into
jno
test
shrb
xor
inc
adc
leave
insl
aam
aaa
push
add
sbb
adc
pushl
sbb
push
add
or
adc
mov
jmp
sbb
fmull
lock
stc
test
lock
sbb
add
mov
add
fsts
mov
sub
movzwl
push
fildll
sbb
push
dec
hlt
fmull
repz
clc
mov
clc
lret
mov
in
pop
test
insl
insb
jno
mov
and
and
std
jbe
fbld
and
push
xor
lds
dec
call
gs
das
sbb
adc
les
orl
outsb
push
dec
icebp
cmp
mov
outsl
add
push
fwait
daa
mov
inc
sti
js
insb
adc
jns
pop
test
mov
jnp
push
mov
ret
xchg
outsl
rorl
bound
add
mov
popf
pop
sahf
mov
iret
aad
insb
loope
push
lds
dec
outsb
int3
mov
addl
fistpll
shrl
hlt
xchg
aas
pushf
inc
and
in
lock
rcrb
gs
add
repz
repz
inc
cltd
dec
add
je
sbb
lods
aas
add
sub
in
inc
pop
fstpl
jecxz
or
fucomip
out
mull
xor
repnz
call
lahf
pop
lea
mov
in
hlt
push
mov
test
pop
cmp
or
pop
jge
xchg
outsl
mov
dec
push
or
mov
in
jl
push
add
les
lods
pusha
pusha
daa
mov
divl
pusha
loope
pop
cmp
outsl
xchg
arpl
fcmovbe
loope
add
mov
jl
xor
sti
movsl
mov
loope
popf
scas
gs
lods
jno
cmpsb
cli
std
mov
es
into
imul
stos
sub
das
in
lds
in
fadds
scas
add
inc
rol
decb
inc
bound
jge
lcall
stos
inc
aad
std
call
inc
bound
or
adc
jle
das
sbb
js
sbb
ss
aas
jl
lahf
pop
movsl
xor
pop
mov
movsl
mov
push
insb
push
lcall
shl
mov
adcl
mov
sub
data16
push
les
lock
or
mov
int
add
dec
xchg
lea
inc
out
fsubrs
push
je
mov
fbstp
repnz
lods
jmp
jge
cmpsb
jno
jnp
cmp
test
mov
mov
jno
stos
test
icebp
std
imul
push
xchg
sahf
push
lahf
jo
and
pop
xchg
negb
out
ss
imul
popf
scas
rorl
xchg
clc
push
sti
movsb
or
mov
icebp
jl
enter
adc
dec
cmp
dec
mov
pop
inc
stc
pop
inc
lock
mov
pop
push
mov
pop
sbb
gs
inc
add
lea
test
lea
or
jae
adc
into
out
xchg
xor
cltd
icebp
sub
mov
mov
loopne
repz
xchg
and
ror
pop
sub
es
mov
mov
pop
or
mov
jno
fcmovnu
testl
out
ds
push
mov
rcrl
data16
lods
xchg
fists
cmp
push
jo
sbb
and
add
and
mov
and
xor
jno
push
xlat
pop
imul
ret
in
xor
mov
sub
lock
data16
xchg
and
jo
mov
lock
adc
les
pop
fisttps
scas
add
pop
frstor
popf
loop
movsb
lret
icebp
or
jbe
scas
nop
insb
enter
shlb
inc
xchg
bound
aaa
hlt
loop
inc
add
adc
cli
inc
xorb
inc
cmpsl
push
aam
testl
push
std
ds
insl
dec
arpl
push
lret
fidivrl
addr16
inc
inc
xor
enter
and
xorl
sbb
mov
hlt
adc
jge
xchg
ret
pop
add
jae
xchg
outsb
cmp
or
ret
inc
jmp
jo
pushf
fistps
jnp
popa
aad
js
testb
inc
pop
jecxz
add
jno
outsb
shl
jle
adc
addr16
subl
stc
scas
out
out
pop
test
call
mov
push
mov
outsb
shl
xchg
sbb
movsb
pushl
jp
push
aaa
dec
mov
inc
jb
inc
loope
or
mov
xchg
faddl
push
sub
sti
or
ret
jne
lds
xlat
dec
addr16
pop
sbb
fmull
mov
adcb
mov
xchg
xchg
pusha
xchg
mov
shll
and
dec
mov
fldcw
xchg
push
fstpt
hlt
fs
movsb
inc
push
fldcw
popa
sub
clc
jae
dec
adc
fmuls
add
sbb
pop
push
ficoml
mov
stc
ja
push
cmpsb
mov
lock
int
push
push
cli
daa
and
inc
es
lods
mov
aam
and
fisubrl
xchg
xchg
xchg
iret
add
adcb
sub
add
movsb
xchg
repz
imul
sbb
or
jo
popf
sbbb
dec
fisttps
leave
cltd
es
add
pop
pop
test
pop
fsubl
add
or
jno
in
es
or
shll
mov
int
into
sahf
lds
jl
add
lret
out
shrb
sub
sub
aas
hlt
in
inc
js
aaa
sub
xor
in
daa
imul
inc
sub
mov
pop
fadds
add
xchg
or
loop
or
adc
ficoms
fidivrs
insl
add
outsb
add
in
arpl
pop
ds
cmp
add
ljmp
nop
pushf
sub
int
je
jbe
cmc
popa
iret
outsl
sbb
cld
lods
pop
add
das
xor
add
fbld
push
add
movsl
shlb
clc
sbb
outsb
ljmp
lahf
aas
test
call
or
jns
add
xor
pop
or
adc
adc
cmp
adc
les
mov
jle
pop
test
dec
movsb
sub
loop
mov
lea
lcall
mov
pusha
test
mov
fildll
push
jl
cmpsl
cmp
mov
jbe
enter
pushf
ds
les
inc
mov
push
xchg
xchg
subl
mov
sahf
sub
loop
inc
adc
cmp
dec
sbb
add
rclb
push
clc
push
adc
cmp
add
add
mov
cmpsb
dec
xor
stos
push
lods
fsubs
in
pusha
je
cld
in
mov
xchg
mov
jl
fcomip
in
mov
movsl
outsb
rol
rclb
insl
scas
sarl
cmp
into
add
xchg
ret
pusha
hlt
fcomi
jno
pop
sub
jae
sbbb
dec
into
imul
mov
jno
xorl
fisttpl
mov
xchg
inc
rorb
sbb
jl
jg
push
xchg
mov
mov
aaa
outsl
push
cmpsl
movsl
leave
jle
into
mov
sti
and
ds
sbb
pop
jo
adc
mov
push
aaa
adc
dec
dec
lahf
call
out
loopne
mov
sub
add
aas
movsb
cmp
jge
loopne
cwtl
in
or
les
xlat
jge
mov
movsl
cmp
inc
loope
jb
jmp
and
push
cli
movsb
inc
rcl
sub
xor
lret
mov
outsb
inc
add
movb
add
into
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
test
jnp
pushf
jnp
dec
mov
or
xchg
adc
jnp
cmpsl
nop
mov
xchg
pusha
push
jmp
insb
add
fidivrs
push
cmp
fimuls
adc
mov
cs
bound
imul
out
cld
or
stos
bound
scas
add
pop
repnz
xchg
mov
clc
or
mov
sub
lods
mov
test
dec
xchg
int
mov
mov
adc
jge
push
push
cmpsl
cmp
fcmovbe
fcomp
pushl
sbb
xor
mov
cmp
pop
add
std
inc
xor
stc
das
imul
sub
adc
rol
fisttps
mov
les
adc
inc
mov
movsb
dec
insb
not
and
pop
je
shlb
mov
imul
cld
test
insl
daa
inc
mov
rcrl
rcll
sbb
loope
add
call
add
out
cmpsb
add
mov
out
xchg
sbb
pop
cmpb
shll
aad
mov
imul
mov
mov
test
push
lock
xchg
movsb
mov
fdivr
cwtl
test
inc
adc
fmul
out
jl
cmc
stos
push
cmp
inc
push
mov
xor
dec
pop
fs
daa
push
out
xchg
jo
fdivrp
pop
and
ss
out
lret
fstpt
mov
sti
addb
int
scas
ficompl
mov
jmp
xchg
mov
cwtl
dec
cmp
cwtl
dec
mov
sahf
aad
fistpl
push
xor
inc
mov
mov
sub
push
cltd
ffreep
lock
fcmovnu
push
cmp
xor
inc
sub
xchg
repz
fcom
out
leave
or
aad
test
mov
mov
imulb
scas
pop
jmp
popa
icebp
push
cmpsl
lret
push
test
or
pop
lods
fsubs
xchg
pop
pop
fdivp
xor
pushf
daa
dec
pop
arpl
xchg
cmc
mov
cmp
push
insl
sbb
add
lds
leave
aaa
fwait
sarb
and
mov
lds
mov
lahf
xchg
test
mov
mov
cwtl
mov
and
aad
aas
inc
jmp
cwtl
cld
push
mov
xchg
scas
inc
inc
xor
cmp
mov
mov
adc
mov
jb
lods
outsl
xchg
and
out
out
in
xor
inc
adc
mov
movsl
push
or
mov
or
mov
clc
scas
push
adc
xorl
add
ss
aam
frstor
sub
xchg
ficompl
fimull
mov
imul
hlt
adc
mov
lods
lods
in
push
xchg
xor
mov
xchg
pop
roll
les
or
sub
sahf
divb
jno
pop
cmp
xor
mov
ficompl
sub
popf
cmp
jnp
js
sbb
fldcw
mov
repz
mov
scas
enter
push
shlb
ljmp
mov
enter
dec
pop
adc
or
pushl
adc
xor
cli
inc
insl
jmp
in
rcrb
inc
jecxz
test
push
add
scas
jae
xchg
xchg
and
arpl
pop
sub
adc
clc
fstpt
aam
add
lods
mov
pushf
pop
rcrb
mov
sbb
pop
jns
cmp
mov
mov
mov
mov
bound
add
pushf
arpl
stos
aam
mov
dec
outsb
je
sub
push
push
imul
clc
ljmp
cmovo
shr
or
das
and
mov
shl
and
push
mov
mov
push
xor
and
cwtl
test
mov
and
dec
aam
or
fsubp
addl
pop
jmp
lods
inc
jne
clc
mov
push
sbb
push
push
xor
fdivrl
sbb
adc
jo
movsl
clc
or
iret
movsb
push
mov
hlt
icebp
cld
out
popa
mov
add
jg
scas
jb
sub
push
cmp
mov
outsl
es
aaa
jmp
mov
sbb
pop
les
dec
xor
int3
pop
and
aam
mov
mov
xchg
and
cmc
mov
dec
dec
mov
test
push
pop
jmp
inc
mov
shlb
pushf
cmp
fldenv
fidivrs
in
dec
sbb
mov
mov
push
in
add
sahf
adc
or
movntps
cmp
push
adc
mov
lcall
fisttpl
mov
xor
scas
dec
xor
sahf
inc
sbb
sub
jmp
adc
cmp
shl
add
dec
xor
arpl
das
mov
jnp
add
mov
repnz
xchg
sub
out
stos
sub
sbb
je
incl
ja
inc
pop
inc
mov
sub
mov
or
push
add
sub
bound
ret
shl
and
aas
jbe
push
lods
repz
sbb
pop
lahf
ljmp
cmp
xchg
aam
cmp
mov
mov
cmp
dec
in
push
mov
pusha
xchg
subb
test
push
push
and
aaa
cmp
fs
fdivs
fists
mov
fdivs
cltd
je
sbb
and
pop
into
out
nop
jbe
imul
lahf
mov
mov
jns
push
adc
mov
dec
psubsw
test
jns
enter
and
mov
jecxz
jbe
and
dec
insb
ja
mov
adc
push
xchg
mov
out
and
inc
imul
aaa
xchg
aaa
adc
jns
xor
fstpt
or
bound
pusha
daa
enter
notb
in
adc
xor
shll
fcomps
xchg
add
inc
mov
xchg
js
pop
inc
inc
xchg
leave
frstpm(287
mov
mov
imull
sub
and
stos
dec
and
repz
dec
rcl
outsl
add
push
fs
cmp
test
xchg
cmp
test
inc
sbb
and
int
jmp
aad
push
fcoml
mov
xchg
or
cmpsb
outsb
flds
inc
shl
cmp
daa
adc
sub
out
mov
jle
sbb
fsubs
mov
call
cmp
inc
cmpsl
arpl
lods
push
xor
xor
loope
movsb
pop
mov
xlat
lcall
movsl
push
jge
mov
xchg
nop
call
cmp
inc
jno
dec
das
divb
dec
adc
es
jle
pop
push
lret
test
sbb
jmp
in
xchg
lock
jae
sub
pushf
repnz
inc
sbb
inc
movnti
cmp
and
dec
or
xchg
xchg
iret
and
outsl
es
int
pop
xchg
pop
loopne
loope
int
arpl
push
mov
jnp
cmpsl
imul
push
lret
or
aad
pop
popa
sub
add
and
sub
xor
insb
jp
repnz
sub
int
sbb
imul
loopne
icebp
jb
mov
mov
inc
sti
fiaddl
cmc
lock
jmp
pop
cwtl
xlat
es
scas
add
mov
and
jmp
cmc
lea
xor
mov
cmpsb
and
mov
bound
add
repz
jmp
mov
ret
sti
shr
or
popa
mov
xchg
sub
insb
pop
data16
scas
push
cmp
push
or
fisttpl
push
bound
ss
dec
add
ret
rcrb
jno
fcmovnb
mov
xor
pop
push
in
xor
mov
outsl
pushf
out
fnstsw
and
mov
add
jmp
mov
xor
daa
ret
adc
xor
cld
xor
sub
cli
mov
and
lds
int
and
popf
inc
adc
and
je
mov
push
dec
or
adc
arpl
daa
xor
test
icebp
repz
inc
or
jmp
mov
jno
and
cs
gs
inc
jp
or
adc
mov
popf
sti
cmp
sahf
adc
or
mov
mov
mov
add
xchg
lcall
stos
shlb
aas
stos
xchg
mov
out
lods
sub
sahf
mov
cmp
ss
ret
outsb
xchg
inc
xchg
mov
mov
add
mov
aad
loope
pop
adc
enter
or
jmp
ds
xor
scas
jmp
test
out
mov
mov
xor
movsb
call
push
in
mov
clc
push
iret
mov
sub
jb
and
sub
movsb
pushf
rorl
mov
shr
xor
mov
outsb
mov
mov
scas
pop
inc
fwait
lahf
inc
filds
enter
xchg
rclb
es
aad
dec
and
outsl
lret
stc
xorl
push
mov
sub
mov
je
jl
rol
pop
jo
and
sub
xorl
aam
push
dec
push
and
shlb
testl
mov
xor
push
lret
outsb
push
sbb
pop
imul
dec
adc
sub
inc
lock
inc
inc
inc
or
jne
fistps
mov
mov
lods
pop
push
mov
lods
and
mov
mov
aaa
aad
aad
mov
sub
lret
pop
rcrl
shrb
and
mov
xchg
sbb
cwtl
loope
xchg
popa
xchg
xor
fucom
lret
das
lret
sub
stc
jb
aam
dec
adc
inc
inc
pop
jecxz
sbb
adc
popf
inc
jbe
pop
stos
and
xchg
aas
pop
or
push
data16
insl
out
test
clc
call
shll
out
je
and
or
sub
fsubrs
arpl
and
push
mov
jp
rcrl
jp
or
sub
je
test
mov
jno
ss
pop
or
or
inc
gs
aad
lock
movsl
mov
stos
nop
or
sbb
insb
leave
in
cli
sub
adc
xor
lds
lret
sti
je
inc
lods
mov
xchg
cmp
icebp
cwtl
shll
fisubrl
xchg
push
out
aam
dec
and
popf
xchg
pop
mov
aaa
repz
push
xchg
and
js
push
jp
xchg
push
jb
inc
inc
stc
jno
mov
xchg
aas
rcrb
dec
sbb
cmp
xlat
into
sbb
sbb
pop
adc
xor
push
sbbb
scas
cli
rclb
cs
fistpl
mov
pop
jmp
pop
push
pop
or
bound
das
mov
adcl
mov
sbb
cli
push
dec
bound
mov
sbb
mulb
out
cwtl
das
orb
loop
mov
test
pop
xchg
test
clc
lret
push
push
popf
sbb
pushf
inc
ret
xor
mov
pop
inc
ljmp
pop
jmp
ja,pt
das
call
insb
ds
add
xchg
fistpll
cmp
adc
xchg
pop
aam
jns
shll
jmp
mov
pop
pushl
or
fcmovu
or
mov
arpl
mov
imul
outsb
jo
pop
mov
sbb
inc
das
mov
push
mov
aad
push
adc
or
icebp
jp
js
cmp
pop
adc
pop
push
cmp
movsb
sbb
lock
dec
mov
lahf
outsb
or
or
je
cwtl
push
loopne
je
popa
clc
dec
lahf
mov
jmp
push
in
aam
mov
addb
xor
fisubrl
mov
jno
hlt
inc
add
into
roll
movsl
xlat
push
xlat
out
mov
jmp
shrl
lock
sub
fcomip
push
pop
popa
push
std
xchg
shl
jl
scas
jns
iret
mov
mov
outsb
xor
mov
xchg
fsubrs
add
jnp
jnp
iret
jg
mov
xchg
test
pop
cmpl
sbb
incl
movsl
lea
xor
mov
cmp
movsl
movsl
lea
aam
bound
insb
ret
test
push
arpl
or
xorb
dec
adc
add
rcrl
add
xchg
cs
xor
jne
fnsave
adc
xchg
sbb
push
sub
scas
shll
es
bound
out
stos
aam
test
jbe
cli
insl
sub
fwait
xchg
test
fdivs
push
lret
add
insb
mov
gs
jge
fistpll
mov
mov
push
in
mov
mov
sub
push
daa
in
pop
xchg
cli
frstpm(287
mov
sub
dec
mov
data16
xor
lock
int
xchg
in
cmc
lods
fldcw
insb
or
push
add
push
pop
cli
xor
or
push
rcll
adc
test
outsb
rorb
cmpsb
lods
mov
shlb
pop
jmp
sbb
mov
ss
sbb
push
notb
jle
and
dec
lahf
mov
jg
xchg
cmp
sarl
mov
cmpsl
push
pop
mov
jb
repnz
mov
scas
jnp
xor
mov
mov
inc
mov
call
mov
fstl
mov
xor
mov
sbb
das
sub
sbb
pop
sbb
xchg
pop
inc
xor
xor
add
jecxz
ret
fsubrs
jns
jmp
sub
sbb
stos
subl
sub
or
imul
in
push
les
rclb
inc
xor
ret
adc
dec
dec
das
decl
dec
mov
or
sub
mov
insl
lds
xorb
rcrl
testb
sti
push
mov
enter
repnz
addr16
xor
sub
pop
test
fistpll
les
jle
adc
lods
fs
out
xchg
add
pop
rorl
jle
jp
fidivrs
dec
mul
stos
jne
cli
push
xlat
dec
push
adc
shl
je
sub
sub
xchg
bound
add
in
and
xor
jb
inc
xchg
cwtl
notl
movsb
fiaddl
out
shlb
xor
push
pusha
sti
sbb
sahf
push
daa
add
mov
pop
jns
out
enter
or
add
xchg
and
out
jecxz
cwtl
aas
enter
and
mov
loopne
data16
mov
ds
jns
pop
push
or
and
jp
cmp
push
fsubs
rcr
aad
push
cltd
popa
sahf
xor
lret
out
pop
cli
ss
mov
enter
cmp
outsl
push
add
popf
aad
adc
jne
cs
jmp
dec
adc
mov
push
fdivrp
imulb
jle
sbb
je
inc
sub
xor
ret
imulb
push
ror
add
arpl
pushl
fldcw
sub
pop
out
xchg
mov
pop
push
or
push
mov
mov
jo
pop
jne
loop
mov
push
cmpsl
mov
and
jb
mov
xor
sti
pushf
filds
into
mov
addr16
xor
sbb
xchg
mov
sbb
cmp
push
cmp
ror
push
outsb
add
cmp
push
xor
pop
pop
pop
or
jo
xchg
adcl
ljmp
pop
stos
add
movsb
jne
or
mov
test
dec
dec
add
shll
mov
lret
ret
jne
clc
xor
mov
es
mov
in
sub
dec
mov
push
and
inc
data16
push
cmp
dec
jns
xchg
fnstenv
xchg
or
xchg
stos
add
pushl
es
movsb
ficoml
enter
inc
loope
int
testl
jns
loope
pop
in
xchg
push
jp
xor
lret
scas
clc
in
in
lret
sbb
push
and
inc
stos
dec
aas
test
push
xor
es
stos
jl
lds
sbb
inc
and
fmul
loop
iret
fdivrl
imul
mov
mov
push
and
lods
push
pop
mov
push
fscale
scas
mov
cmp
es
cmp
mov
aaa
ficomps
mov
popf
mov
dec
jmp
inc
pop
fwait
xchg
add
sbb
lock
cld
or
xchg
addr16
insl
sbb
or
inc
popf
ret
je
mov
sub
clc
bswap
xor
les
fnstcw
push
movl
fldcw
mov
cmp
cmp
test
bound
push
dec
jecxz
ds
loope
rcrl
ss
mov
jne
call
or
out
pop
dec
bound
call
cmp
mull
xlat
add
dec
sub
jge
test
scas
xchg
lds
ja
xchg
pop
cmp
jle
movsl
aad
xlat
sbb
and
jo
jo
mov
nop
push
mov
mov
aad
repnz
mov
fwait
aam
fdivp
pop
mov
ss
mov
xchg
jg
jbe
adc
adc
mov
pop
push
mov
cmpsb
mov
rorb
movsl
push
enter
outsl
and
mov
lcall
sbb
and
sub
fldenv
sub
add
inc
pop
lahf
push
dec
adc
mulb
movsb
push
and
js
sub
push
mov
add
clc
rolb
mov
pop
test
pop
add
sub
std
rcll
lret
jns
jnp
or
mov
scas
stos
sahf
nop
cltd
sysexit
icebp
dec
fucomi
imul
inc
mov
js
lds
cmp
data16
adc
pop
xchg
mov
mov
imul
mov
orl
arpl
cld
push
inc
xchg
out
sbb
repz
adc
push
into
mov
cltd
dec
xlat
jo
sub
mov
inc
fsubrl
xchg
mov
mov
mov
mov
cmp
iret
call
es
mov
pop
shl
shufps
fcomip
xor
aas
push
mov
mov
int3
sub
xor
fisubs
dec
pop
daa
shl
iret
push
ljmp
das
add
jns
xchg
daa
popf
jo
les
std
lahf
insb
lock
fwait
dec
hlt
mov
pop
mov
and
xlat
ds
test
adc
jnp
dec
sub
fistpll
push
fnstcw
sahf
cmp
popa
int3
xor
mov
sahf
fcoml
popf
rol
arpl
aaa
inc
inc
jmp
pushf
mov
mov
int
sbb
shrl
imul
xor
mov
add
arpl
jle
in
adc
mov
sbbl
add
xor
mov
aam
fwait
imul
fwait
sub
dec
add
xor
cmp
leave
cli
adc
std
inc
iret
push
jl
cmp
push
insb
stos
fs
sti
add
cmc
test
in
push
imul
pusha
mov
add
fs
jbe
adc
cmp
pop
addr16
cmp
lret
mov
jg
jmp
sub
pop
xchg
loope
lret
call
adc
outsb
sbb
sbb
xchg
clc
push
mov
cmpsl
and
cmp
sbb
pop
outsl
outsl
das
ja
cmp
in
paddsb
adc
or
adc
cmpsl
fbstp
jb
test
insb
push
inc
loope
xchg
stos
mov
into
mov
mov
lods
insb
shlb
adc
fmuls
pop
mov
stos
lret
push
push
lcall
add
out
xlat
fidivrl
pop
dec
xchg
xlat
fs
jo
fnstsw
or
je
lcall
cltd
lret
rorl
cmpsl
pop
loopne
scas
adc
mov
pop
pop
repnz
mov
push
mov
pop
jae
test
jb
in
xlat
leave
mov
xorl
fsubrl
push
outsl
cmpsl
xor
nop
call
jmp
movsb
imul
es
or
jb
test
ljmp
pushf
fmulp
into
jnp
in
xor
inc
shl
adc
clc
sbb
fnsave
stos
and
push
stc
lahf
in
adc
adc
pop
mov
lcall
inc
movb
cwtl
dec
roll
shrb
jae
ret
xlat
mov
jp
push
add
pop
nop
pop
repnz
test
mov
dec
cmpb
push
imul
lahf
testl
and
insl
ljmp
addr16
sbb
push
mov
mov
jp
cmpsl
jge
ss
pop
push
int
ret
inc
pop
dec
mov
sub
mov
and
jp
sarb
into
xchg
imulb
fsubrl
pop
subl
jnp
mov
sbb
les
push
dec
ljmp
imul
bound
subb
negl
std
inc
movsb
fmull
cld
mov
je
or
lods
test
inc
dec
xchg
sbb
fdivrp
iret
mov
mov
lea
jmp
sbb
leave
sbb
es
das
and
fs
cmp
pop
cmp
test
dec
cwtl
rol
and
data16
div
lds
pop
repz
xchg
inc
mov
adc
sub
lahf
inc
scas
adc
pop
neg
inc
xchg
insb
cmp
stos
icebp
ja
ds
test
pop
mov
and
rcr
xor
out
sbb
jl
and
push
je
mov
or
xchg
mov
test
xor
daa
fimull
addr16
xchg
pop
add
fpatan
mov
fwait
jae
pusha
subl
or
and
xchg
repnz
clc
mov
lahf
aas
mov
adc
mov
test
jnp
mov
ljmp
push
sbb
mov
dec
pop
mov
or
idivb
xlat
xchg
lret
or
xor
js,pt
aad
or
rcr
out
cmpsb
pop
mov
push
dec
xchg
xchg
xor
lcall
mov
inc
add
lcall
fldcw
add
cmpsb
sbb
repnz
movsb
push
stc
xlat
nop
pop
add
xor
gs
dec
inc
sbb
sbb
mov
loopne
pushl
lret
mov
jae
fmulp
jns
mov
dec
cmpsb
adc
jnp
outsl
push
ret
pop
je
ljmp
xor
clc
mov
outsl
cmp
xchg
cmpsb
lcall
inc
mov
rcll
xorl
in
insb
loope
out
adc
mov
jl
jecxz
adc
mov
ror
loopne
pop
dec
in
jno
sbb
test
inc
and
lea
xchg
dec
andl
outsl
sbb
add
add
or
js
and
or
pop
dec
shll
test
push
pop
cwtl
outsl
mov
stos
pushw
inc
jle
add
lcallw
pop
mov
sub
gs
stos
sbb
test
dec
push
xor
inc
adcb
push
stc
cmp
rclb
cmp
in
ljmp
stos
clc
xor
inc
jg
jmp
shll
in
jbe
xchg
inc
rcr
jae
xlat
add
pop
aaa
push
jno
mov
test
xchg
fnstsw
dec
sub
or
xchg
flds
sub
jnp
push
xor
out
rcl
pop
and
xchg
imull
scas
ds
test
cmp
jge
adc
call
mov
mov
mov
cli
test
loopne
and
and
shll
fmul
cmc
adc
jns
jo
sahf
lods
or
push
test
mov
rcll
push
pop
pusha
inc
lret
mov
js
call
jmp
lret
mov
jle
dec
mov
pusha
or
xorw
pusha
sub
push
das
xor
hlt
adc
popa
cmp
inc
sub
or
sti
test
in
cs
dec
movsb
dec
mov
lock
repz
ret
movsl
lds
in
push
icebp
jp
jnp
dec
in
push
int3
shll
cmp
ss
sahf
cmp
pop
or
push
cwtl
add
jge
mov
xchg
xlat
daa
in
add
mov
loope
mov
ljmp
xor
inc
pop
inc
xchg
mov
xchg
stc
xchg
jbe
sub
leave
cs
sahf
cmp
sbb
and
cmp
xor
jmp
pop
xchg
mov
test
xor
ja
jb
xchg
sub
cmp
pop
adc
cwtl
add
mov
in
mov
sub
jl
cmp
ljmp
loope
leave
sbb
push
in
jmp
pushf
sbb
cmp
jb
pop
mov
popf
out
sbbb
jb
jb,pn
mov
mov
test
lret
sub
mov
es
mov
mov
daa
mov
ret
push
mov
sbb
cmp
das
repnz
lea
je
pop
les
jns
aad
xor
cli
inc
add
pop
push
lret
dec
sahf
insb
jnp
icebp
or
add
fwait
mov
or
jg
pop
outsb
xor
aad
add
movsb
dec
pop
lret
sub
and
icebp
inc
roll
call
aas
mov
iret
xor
lock
push
mov
mov
loop
scas
xor
cmp
lea
test
fldenv
push
push
roll
or
mov
pushw
cmp
out
les
xor
mov
mov
out
aad
adc
rol
mov
outsb
cmp
faddp
mov
sbb
mov
mov
xor
xorl
idivb
sub
sbbb
cli
movsb
mov
pop
cmp
push
enter
mov
xchg
mov
add
mov
cs
dec
mov
lcall
inc
pop
mov
mov
fstpt
push
mov
jmp
sub
stc
cmp
setno
loope
lret
into
adc
mov
xchg
or
adc
popa
pop
repz
loop
cmp
insw
jp
sahf
in
shlb
jne
lds
and
adcb
loop
ja
push
sbb
fdivs
leave
faddl
xor
in
das
icebp
popa
mov
lret
jg
out
lock
nop
lea
mov
test
xchg
je
sub
xchg
sbb
insb
call
lret
jmp
lret
pusha
sti
mov
mov
ss
mov
lcall
or
cmp
out
popa
inc
jne
adc
xlat
and
dec
add
fisubrs
mov
sub
mov
test
sub
shrb
movsb
xor
push
popa
add
or
mov
jge
push
inc
add
pcmpgtd
addr16
les
and
and
pushf
movsl
pop
into
push
into
xor
or
cmp
imul
pop
adcb
xchg
sub
cltd
mov
mov
loope
mov
clc
jne
in
or
inc
mov
pushf
mov
mov
add
cld
imul
add
or
ja
fmull
scas
nop
aad
cmp
js
push
lret
dec
aam
mov
lahf
fs
std
ss
mov
ss
sbb
popa
xor
sbb
xor
mov
movsl
inc
mov
inc
stos
lret
jo
outsb
cmp
mov
push
jno
mov
ss
adc
push
inc
add
inc
nop
add
xorl
shlb
adc
cli
outsb
mov
in
cli
aam
or
lea
cmp
nop
dec
mov
std
jl
std
insb
fsubrl
jl
pop
cmpsb
xor
push
xchg
pop
cmp
mov
sub
mov
pop
xorl
jle
fidivrl
mov
adc
dec
cmpsb
inc
mov
inc
mov
mov
push
call
cli
dec
es
inc
or
and
cmp
add
and
cmp
lahf
push
movsb
mov
ret
sbb
push
rcrb
je
fldenv
jge
popf
test
sarb
mov
out
mov
test
push
rorl
inc
gs
push
mov
imul
leave
repz
cmp
sbb
jno
ja
ret
pushf
test
lods
gs
mov
cmpsl
outsl
mov
jnp
sub
dec
popf
push
imul
mov
sbb
sub
dec
ffree
sbbb
imul
xchg
jp
pop
pop
add
push
pop
xchg
in
add
xchg
cld
push
int
fsubrp
push
or
out
xchg
xlat
aaa
popf
xor
mov
lret
jne
popa
inc
imul
adc
jne
fldenv
into
sub
in
lret
mov
mov
dec
xor
push
jmp
and
movsb
jnp
add
pop
pop
sbbb
xchg
sub
sbb
mov
push
xchg
pop
enter
inc
hlt
out
cld
jns
aas
es
mov
in
and
cmp
xchg
dec
pusha
loope
ret
movsb
mov
add
dec
xor
sub
cmp
in
push
cmova
in
push
push
mov
mov
movsl
jne
sahf
jbe
dec
cmp
mov
mov
imul
push
dec
push
push
hlt
xor
es
xchg
jmp
popf
jo,pn
stc
mov
sub
inc
lret
orl
insl
xor
mov
std
dec
fucom
xor
jmp
and
mov
ret
data16
mov
imulb
cwtl
pop
add
add
jl
push
adc
add
push
movsl
sbb
adc
lahf
push
lods
test
clc
or
push
adc
xor
add
insl
fsubs
cld
mov
scas
cld
les
dec
or
jnp
cmp
jge
fnstcw
pop
mov
fcompl
imul
addr16
gs
popf
mov
and
mov
and
fistpl
cmpsl
das
and
pop
xorl
sbb
mov
repnz
add
sbb
imul
or
out
inc
adc
gs
in
rorb
pop
icebp
call
sbb
jne
lds
lock
insb
dec
out
push
push
clc
push
cmc
sub
push
and
in
pop
push
sub
pop
fcmovnu
add
mov
cwtl
data16
lret
jge
jecxz
clc
sahf
push
cmp
sbb
adc
add
repz
loop
into
xchg
jne
nop
lods
nop
int
xchg
jp
popa
lret
adc
dec
lods
bound
ds
xchg
addb
push
sahf
or
jnp
cmp
rclb
push
into
popf
mov
cmp
sub
ret
lcall
in
inc
aaa
orl
jmp
jle
jbe
fs
jp
std
jne
jne
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
imull
jno
jnp
hlt
pushf
jnp
movsb
clc
push
pop
or
jnp
ljmp
pop
pop
out
stc
ljmp
rorl
dec
popl
out
cmpsl
push
cwtl
sbb
sti
xchg
mov
int3
push
mov
and
rcrb
jge
imul
call
outsb
test
pop
test
dec
and
mov
popa
imulb
sub
sarl
adc
ror
dec
lods
push
sub
jp
cmp
inc
jb
mov
pop
push
ss
fildl
jb
add
mov
jno
jmp
loopne
movsl
lds
ljmp
jp
mov
xor
fistps
pushf
push
xchg
adcl
mov
js
cmc
arpl
js
xlat
daa
shll
loope
rol
enter
sbb
pop
and
imul
aam
dec
pop
lods
push
jge
mov
mov
sub
cmpsb
inc
or
or
pop
push
icebp
loop
dec
arpl
sahf
loope
push
push
mov
sbb
mov
outsb
mov
das
mov
sub
dec
or
cmp
pop
jns
dec
inc
xor
and
stc
in
lea
cmp
xlat
pop
or
xor
xchg
std
mov
sbb
aam
clc
mov
jbe
xor
lea
pop
sub
push
xor
pop
mov
mov
push
sub
cmp
in
mov
mov
and
jg
popf
dec
inc
push
rclb
pop
xchg
mov
mov
mov
sahf
mov
data16
int3
sar
mov
int
adc
mov
jne
mov
jmp
inc
mov
jns
in
sub
das
add
mov
popf
xchg
out
into
xchg
and
mov
jns
sbb
iret
ss
mov
dec
fcoml
push
lret
sbb
adc
in
testl
es
loop
sbb
cmp
and
mull
jecxz
jae
push
data16
sub
mov
xor
sbb
decl
push
xchg
jl
sub
insl
and
fstpt
and
cmpsl
daa
iret
test
mov
enter
jp
int3
cld
xor
ret
mov
pop
cmp
das
push
xchg
pop
cmp
jbe
add
inc
sbb
or
sub
cs
ljmp
cmp
rorl
mov
push
cld
mov
inc
nop
pop
mul
xchg
arpl
push
jnp
cmp
sbb
bnd
push
hlt
lods
bound
and
cld
jb
dec
call
in
push
inc
in
negl
mov
loope
mov
js
xor
popa
xlat
cli
es
call
cmc
imul
adc
fists
orl
imul
adc
and
pop
mov
clc
mov
js
xor
pop
filds
xor
and
dec
hlt
xchg
stc
out
faddp
and
cmp
mov
pop
int
fucomp
int
hlt
add
clc
ds
add
mov
add
push
mov
or
out
xchg
jnp
fsubs
mov
lds
cli
push
lahf
daa
xchg
out
test
out
jbe
adc
pop
in
sub
or
orb
xchg
pop
xlat
cli
cltd
jmp
sbb
ret
sub
lods
outsl
rorb
xlat
or
xchg
push
in
call
cmp
lock
dec
rcl
in
jmp
push
push
clc
and
add
cmp
add
mov
test
lock
xchg
push
je
mov
cs
js
jl
test
cmp
aad
xor
jle
mov
xchg
push
push
inc
imul
ret
test
or
imul
lcall
lods
add
aam
sbb
push
test
dec
pushf
test
add
fstps
adc
jmp
xor
ljmp
mov
xchg
hlt
mov
pop
jp
movsl
mov
push
addb
and
jbe
js
mov
lods
jp
push
add
jns
das
pushf
test
jecxz
sbb
stos
push
aas
mov
cmp
mov
cmc
sbb
aas
cli
xor
or
cmp
adc
pop
ret
or
adc
popf
das
and
stc
and
mov
mov
cmp
add
adc
push
cmc
cmp
ljmp
sub
dec
push
or
mov
inc
outsl
and
mov
clc
out
loop
pop
dec
sub
push
xor
xchg
lahf
inc
std
shll
sahf
mov
xchg
out
mov
jl
shll
shlb
push
push
and
lods
sub
or
pop
jbe
jns
sti
jno
inc
dec
cmp
jle
sub
enter
cmp
ret
push
mov
mov
and
xchg
mov
mov
mov
inc
or
and
out
pop
repnz
inc
push
aam
notb
insb
sbbb
jp
sahf
xor
inc
cli
lock
adc
jno
fcom
sbb
call
mov
mov
lds
push
or
ljmp
push
imul
test
je
js
mov
test
sbb
popa
addr16
adc
cld
add
cmpsl
jp
daa
cmp
push
lahf
pop
mov
sbb
xchg
push
ja
je
mov
add
add
cmc
lret
xor
mov
cmp
dec
pop
test
xchg
pop
gs
insl
sub
jmp
movsl
lock
daa
and
mov
mov
jmp
in
subl
lods
pusha
mov
sub
mov
inc
inc
inc
mov
push
shl
sti
loope
pusha
nop
mov
fisttpl
int3
adc
jne
scas
or
ds
rcrl
cltd
sbb
mov
xchg
jne
mov
shlb
cmpsb
dec
imul
out
lahf
in
lock
loopne
push
mov
cwtl
scas
pop
dec
and
mov
add
ret
fidivrl
push
outsl
mov
xor
sbb
dec
dec
addr16
stc
and
mov
xchg
fwait
mov
fmull
dec
pusha
popa
aas
lret
clc
or
xor
enter
sti
mov
jmp
ds
xor
ljmp
mov
inc
sub
or
xchg
jo
sti
sbb
or
fistpl
push
inc
mov
cmp
insl
push
movb
repz
mov
sub
je
pop
cmp
mov
sub
xorl
cmp
rcr
and
sbb
cld
jle
jg
adc
jns
jl
pop
push
mov
or
pop
ljmp
xor
jno
hlt
mov
dec
aad
out
xchg
jo
push
sbb
insb
cli
inc
push
insl
in
lret
and
and
cmp
and
mov
push
inc
adc
cmpsl
pop
aaa
pop
scas
sub
jmp
out
cmp
fiadds
xchg
pop
cli
repz
jge
inc
je
nop
int
out
cmp
cmp
es
sbb
add
mov
push
pop
rcrl
out
sbb
jne
lock
mov
int
icebp
dec
sti
out
lcall
or
pop
arpl
in
mov
xor
adc
repz
add
scas
mov
xor
add
leave
jae
test
scas
xor
mov
push
sub
inc
outsb
popf
mov
fmull
fadd
mov
dec
jg
cmpsb
xor
out
mov
outsb
cli
decl
stc
sbb
or
clc
stc
je
mov
in
stos
sub
mov
mov
sarl
outsl
cmpsl
inc
repnz
stos
clc
pop
loop
jno
cmp
sub
mov
test
std
ss
or
xor
cmp
add
in
jbe
add
clc
aaa
pop
cmp
and
mov
xor
dec
jmp
and
aas
popf
or
sti
push
loope
push
add
ljmp
push
sahf
and
lods
and
xchg
pop
xor
ljmp
fwait
adc
jle
sub
aam
lret
loopne
and
test
lcall
sbb
out
or
pop
dec
xchg
push
loopne
sbb
cmp
push
shlb
sar
inc
sbb
lds
repnz
and
and
test
push
adc
sub
xor
scas
mov
mov
in
ja
xchg
les
js
fucomi
mov
cmp
aad
push
das
fbld
cmp
popa
mov
mov
jmp
lret
mov
popf
mov
sbb
cwtl
out
sub
outsb
add
push
mov
cmovae
sbb
inc
inc
movsl
shlb
pushl
fs
add
sti
push
push
mov
push
jl
pop
cmp
rol
push
je
cwtl
out
inc
pusha
lahf
cmp
scas
xchg
jle
mov
stos
xchg
dec
mov
mov
xchg
push
adcl
pop
cltd
pusha
cmc
divb
test
leave
into
add
adc
add
add
mov
outsl
mov
jecxz
mov
mulb
push
add
cmpsl
lods
lret
out
xchg
pop
out
pushf
loopne
mov
push
xor
mov
ss
stc
mov
sbb
sbb
rolb
mov
in
and
mov
xor
loope
out
mov
mov
push
jmp
sub
mov
add
repnz
std
je
stos
jg
xchg
loopne
push
jge
cmp
enter
popf
mov
leave
movsb
jo
cmpl
icebp
loop
push
pop
push
xor
or
pop
add
pop
aas
jnp
dec
pusha
divl
jmp
out
jmp
aaa
inc
add
test
stc
ss
mov
adc
push
pop
mov
mov
std
or
js
out
mov
mov
inc
sbb
sub
xor
push
jecxz
popf
sbb
rorl
sub
ss
cmc
fwait
leave
add
and
into
hlt
sub
dec
and
cmp
cmp
bound
in
sub
mov
xchg
cmp
cmp
adc
pop
and
push
movsb
out
mov
and
ljmp
mov
out
xchg
sbb
call
mov
daa
stos
push
xchg
movsl
call
aam
addl
jno
fstpl
aam
dec
lret
mov
cmp
jecxz
push
aaa
xor
sub
test
lahf
jnp
jl
jno
outsl
and
push
pop
inc
imull
lods
xor
enter
add
and
add
jb
imul
adc
es
mov
aam
stos
fisubl
push
aad
cmpsl
cmp
pop
and
inc
xor
xchg
cmp
xchg
imul
inc
scas
fwait
push
ds
shl
mov
mov
ror
int
xor
cmp
ds
or
mov
xchg
and
into
push
jg
dec
and
mov
gs
insb
xor
sub
mov
ret
test
cmp
jp
cmp
and
and
and
mov
inc
mov
in
dec
cmpsb
bound
dec
icebp
cmp
pop
xor
mov
repz
daa
pusha
fstpl
popa
incl
test
fildl
sbb
outsb
icebp
test
inc
mov
outsl
jae
push
scas
arpl
rorl
cs
add
push
out
dec
scas
inc
pop
aas
aam
in
sub
pusha
inc
push
push
jle
dec
repz
scas
rorl
sub
andl
or
dec
test
jnp
or
lret
imul
pop
push
push
imul
loope
dec
hlt
jecxz
jno
sub
push
dec
mov
stos
pop
sub
je
enter
mov
mov
je
out
push
cs
enter
jns
out
cmp
jg
mov
cltd
or
sti
lods
ja
stos
aas
cmp
xchg
cld
and
jp
scas
or
inc
mov
lods
adcl
pop
sub
fisubrl
mov
icebp
add
cwtl
jl
dec
xor
inc
sbb
cwtl
mov
jo
and
or
ret
push
adc
stc
sub
pop
popf
decb
fisubs
ficoml
sub
data16
outsb
adc
cmp
sub
mov
xor
lock
lods
mov
dec
in
cltd
popf
xor
lods
pop
insl
scas
sbb
xchg
jle
xlat
xor
or
and
pop
addl
or
in
inc
push
fsub
push
mov
repz
movsb
xchg
pushf
mov
mov
cmp
fmull
sub
in
and
inc
xlat
cmpsb
jmp
mov
pop
rclb
push
loop
cmpsl
rorb
push
dec
and
or
xchg
mov
adc
adc
ds
nop
dec
mov
pop
shll
cmpsb
shll
sahf
in
jne
testl
and
dec
out
loope
aad
pop
jg
cmp
mov
test
shlb
popl
adc
mov
push
dec
or
cmp
mov
test
xor
cmpsb
pop
mov
xor
inc
mov
jecxz
ficompl
and
xchg
pop
sbbl
xchg
adc
pop
testb
adc
cli
int
pop
xchg
push
sbb
fsubs
sbb
faddl
adc
aad
aam
lcall
cmp
outsl
std
lock
and
pop
mov
jns
xchg
es
out
xor
mov
cmpsl
scas
sar
jb
lods
lcall
scas
imul
xor
inc
call
loopne
or
sbb
and
movsb
push
push
or
or
xchg
sbb
add
loope
push
fisubl
xlat
and
sub
jns
mov
mov
pop
and
outsl
lods
or
pop
fs
js
dec
repnz
ficoml
daa
lcall
jge
fcom
push
mov
adc
lahf
into
out
mov
and
fcoms
in
mov
cmp
imul
cs
loopne
xchg
dec
mov
into
fsubrl
loope
fsubr
adc
push
test
or
pusha
and
jo
mov
adc
adcb
mov
jb
sub
add
xor
sti
xchg
sbb
int
iret
cmpsl
add
mov
xchg
jae
cld
scas
test
mov
cmpsl
push
gs
dec
repnz
mov
adc
dec
repz
pop
out
lea
ljmp
mov
ret
or
test
add
jg
mov
pop
and
mov
scas
repz
fucomip
and
fwait
stos
sbb
mov
idivb
int
lret
mov
add
mov
add
jno
dec
ficompl
gs
shlb
xchg
daa
fs
cmp
sbb
push
stos
stos
inc
mov
xchg
fistl
inc
xchg
in
mov
push
mov
inc
sbb
roll
cmp
sub
sub
lret
xor
imul
pop
mov
push
je
cltd
mov
xchg
nop
stc
rcr
push
adc
xchg
mov
dec
cmpsl
xorl
ljmp
and
or
repz
push
bswap
sub
cld
mov
sbb
popa
pop
pop
xchg
arpl
or
jno
adc
icebp
push
loopne
js
fisttps
cld
enter
mov
mov
out
push
or
xor
dec
xchg
xor
lcall
sub
bound
pop
xor
je
fldt
jecxz
dec
lock
push
shl
in
cmp
femms
leave
adc
popf
inc
xchg
test
fdivrs
das
ret
out
cmpsb
popa
dec
cmp
cltd
lock
mov
lods
test
pop
mov
dec
push
adc
mov
and
sbb
adc
or
js
bound
mov
cwtl
je
iret
mov
fstp
testb
cmpsl
push
jne
test
testl
jecxz
aad
sub
push
mov
jmp
or
mov
adc
fcoml
mov
rcrb
push
dec
lds
cli
aas
sarb
aad
ffreep
outsl
icebp
loopne
aaa
enter
lahf
std
mov
sbb
jbe
daa
sub
sbb
loopne
mov
mov
adc
cmp
xlat
call
sti
in
lea
es
cmp
pop
in
mul
imul
movsl
add
sbb
stc
insb
ja
xchg
add
dec
mov
in
pop
test
lret
dec
rdtsc
push
cld
mov
lcall
jge
xor
dec
sbb
and
jno
pushf
lock
xchg
jecxz
push
sbb
jp
mov
xchg
les
pop
fidivl
sub
inc
in
ret
mov
fisubl
ds
xchg
test
xchg
jb
or
push
and
add
out
cmp
sbb
aad
and
cmc
jp
or
fdivl
jge
loope
xor
dec
sub
jne
or
and
fisubs
ja
dec
xor
sbb
lahf
test
mov
mov
dec
in
shll
lock
sub
xorl
xor
mov
mov
mov
in
jnp
add
pop
xchg
mov
pop
pop
scas
out
scas
adc
adc
lea
xlat
xchg
mov
push
mov
les
and
stos
fsubrl
out
inc
jge
stc
mov
push
xlat
imul
cli
xorb
aas
pusha
and
push
inc
shrl
jmp
call
mov
sub
dec
cmp
clc
repnz
cli
popf
inc
arpl
xor
xchg
xor
xchg
fisubs
rolb
push
stc
xchg
adc
xor
xor
imul
cmc
test
sbb
rcrl
add
lcall
repz
mov
outsl
arpl
in
inc
cmp
les
mov
sbb
mov
mov
scas
jo
mov
pop
shl
xor
loop
pop
xor
pop
gs
push
out
lock
pusha
xor
add
xor
add
sbb
mov
loopne
mov
or
push
in
mov
ret
test
pop
push
or
cmp
iret
pop
sarb
pop
cli
cmp
jle
loop
lret
and
fldcw
sahf
dec
fldl
sub
jg
in
lret
leave
out
pop
jne
in
jl
lcall
mov
fstl
call
mov
mov
inc
ds
push
outsb
pop
mov
mov
mov
rep
xor
hlt
pop
mov
stos
lea
mov
jb
loop
or
mov
push
sti
jo
jb
xchg
cld
mov
fiaddl
clc
popa
jb
sti
aad
ljmp
push
sub
lret
out
js
mov
mov
inc
fisubrs
add
adc
ljmp
rolb
jmp
dec
xor
mov
jne
loopne
or
mov
mov
xor
and
roll
ljmp
icebp
fidivs
mov
xchg
out
push
pop
ss
xchg
test
add
pusha
xchg
mov
jecxz
push
push
inc
jo
ds
pop
pop
imull
push
and
sbb
mov
divl
xchg
pop
inc
mov
arpl
adc
cmpsb
iret
xchg
divb
xchg
dec
mov
push
faddl
cltd
scas
mov
push
mov
fdivp
sbb
mov
outsb
xchg
inc
cmpsl
cmpsb
add
or
aad
jo
dec
aam
cmp
arpl
mov
inc
rolb
xchg
jmp
loop,pn
mov
lret
outsl
scas
dec
cmc
cmp
sub
icebp
inc
shll
cli
std
iret
jno
or
mov
xor
fisubrl
popf
jae
inc
or
push
mov
mov
fdivl
clc
dec
mov
out
jl
mov
orl
addl
add
cmp
hlt
jl
cmp
cmc
cmp
enter
adc
xlat
cmp
cmpsb
leave
inc
imul
hlt
in
hlt
sub
imul
ret
push
push
clc
mov
pop
sub
sub
mov
pop
daa
pushf
cwtl
push
in
test
repz
popf
jb
lahf
push
mov
push
loop
jge
inc
loop
mov
call
cmc
xor
adcl
into
mov
pop
loope
jp
out
mov
jno
ret
mov
mov
cmp
jo
cmc
cltd
negb
dec
adc
aaa
mov
mov
scas
out
pop
ljmp
dec
adc
jae
test
mov
pusha
into
je
shl
mov
cmp
push
andl
mov
mov
sbb
rcll
cmpl
incb
out
mov
insb
movsb
cmp
std
push
lods
cmp
jle
fdivrl
sar
mov
sbb
push
inc
repnz
lcall
push
scas
push
sbb
lcall
ficomps
aas
sub
ds
mov
dec
adc
mov
cmc
pop
pop
jb
adc
xor
sbb
imul
jge
dec
and
or
jbe
inc
fisubrs
or
stos
cmp
nop
ficompl
clc
add
jp
mov
rol
into
push
or
dec
aad
jnp
sub
outsb
cmpsb
rcrb
stc
out
dec
in
or
insb
mov
and
mov
nop
sub
shll
leave
sub
jo
add
adc
jg
mov
sahf
mov
ret
icebp
jbe
or
sbb
fists
jecxz
lret
mov
ss
push
test
xchg
mov
repnz
adc
shlb
mov
xchg
xchg
mov
shl
jle
add
std
push
xor
jo
mov
jb
jecxz
mov
sub
in
sub
add
lods
xchg
mov
xchg
mov
xchg
fcmovne
pop
nop
mov
and
xchg
jmp
add
rolb
ja
call
lods
ljmp
mov
xor
or
out
adc
cmpsl
pop
mov
mov
repnz
subl
popf
sub
xlat
adcl
inc
iret
xchg
cmp
loopw
in
jl
addl
mov
shll
out
sbb
in
cmp
or
sub
sbb
cwtl
add
pop
xor
shl
sarb
sahf
mov
ret
leave
addb
scas
push
cmp
ret
add
fsub
inc
repnz
cld
out
inc
daa
bound
loopne
pusha
loop
jne
mov
es
enter
orb
mov
or
mov
pop
out
pusha
popa
xchg
fsubr
cld
push
mov
test
add
adc
mov
leave
das
mov
mov
outsb
ja
inc
jnp
cmc
dec
jge
sub
cwtl
pminub
mov
iret
aad
and
dec
sbb
stc
movsl
push
cmc
outsl
push
or
loope
in
pop
push
inc
jge
loopne
mov
ss
jmp
fiaddl
stos
dec
pop
jmp
push
sti
cmp
fnstenv
sbb
or
fiadds
or
and
dec
je
push
out
mov
push
adc
sub
sub
sbb
fbstp
jo
mov
mov
or
cli
aas
xor
add
out
push
mov
add
jmp
mov
addr16
loope
lods
arpl
dec
test
gs
or
xchg
inc
imul
xchg
push
cmc
testl
bound
je
scas
add
lods
icebp
mov
xlat
stos
lret
hlt
cmpsl
cmpsb
fsubrs
std
sbb
ds
std
maxps
pushf
stc
adc
jg
cmp
dec
push
push
in
jg
je
push
fiaddl
push
xchg
lods
insl
jecxz
xchg
sbb
adc
cmp
xchg
ja
movsl
xlat
xor
xchg
jno
adc
fsubrl
decb
loop
xor
int
lret
xchg
aaa
sbbl
dec
jp
sbb
cmc
repz
xor
loop
mov
mov
sbb
loop
mov
mov
xor
mov
lret
inc
into
aaa
pop
pusha
mov
lret
ret
test
mov
mov
popl
pop
jmp
popa
xchg
sti
shlb
xor
call
stos
std
andb
sbb
fstps
mov
jmp
adc
jecxz
arpl
push
push
loopne
mov
mov
outsb
or
dec
xchg
insl
sub
mov
loopne
jb
in
inc
xchg
gs
xor
stos
push
and
movb
and
fistpll
les
or
pop
cmpsl
loope
leave
sub
xchg
mov
push
adc
jne
loopne
ficomps
dec
jb
xchg
insl
ss
and
lcall
push
adc
rclb
insb
rcrl
test
hlt
ja
enter
test
mov
or
mov
mov
adc
js
repz
lret
std
in
inc
mov
addr16
cwtl
fmuls
loope
pop
fldt
adc
push
cmp
sahf
jae
lahf
mov
aad
rcrl
aad
sub
imul
scas
daa
fmull
stos
adc
inc
dec
out
loope
mov
inc
test
test
cltd
pop
jnp
mov
xchg
xchg
repz
out
out
jo
std
aas
pop
cmp
dec
and
mov
jno
call
imul
mov
xor
inc
sub
stos
inc
cmp
cs
and
jl
push
ss
dec
lahf
mov
mov
lret
inc
pop
test
frstor
aaa
jns,pn
mov
into
mov
arpl
pop
xchg
lods
stc
or
push
push
xchg
xlat
add
push
movsb
sub
gs
jl
outsl
test
sub
fs
jns
sbb
repnz
scas
rclb
das
test
aad
and
push
cmpsb
mov
call
mov
inc
mov
and
lea
int3
pop
cmc
push
inc
call
inc
les
xchg
and
adc
out
push
cmc
mov
and
jp
xor
or
mov
test
mov
jmp
arpl
and
mov
mov
jmp
cli
lods
mov
in
pop
cmpsl
pop
mov
stos
mov
fstpt
into
imul
or
pop
imul
repz
ljmp
ret
loopne
mov
adc
cmp
xlat
insl
jg
or
push
aam
cli
dec
mov
imul
repz
mov
sbb
std
sahf
sub
ficoms
shll
dec
cmp
stc
jnp
pusha
movsb
xor
mov
push
shrl
cmovo
outsl
mov
push
lods
je
cmp
ss
sbb
dec
xor
test
xchg
cmp
xchg
inc
lds
gs
cmpsb
adc
push
std
jp
mov
arpl
mov
in
enter
outsl
arpl
mov
jo
ja
inc
sti
je
push
sub
movsb
pop
sbb
sbb
fadd
dec
ss
dec
inc
divl
add
jecxz
jne
jle,pt
fmuls
lcall
sbbb
dec
fbld
push
mulps
mov
loop
mov
push
out
push
arpl
imul
add
loope
ja
gs
cmp
inc
adc
dec
jo
shl
int
js
and
dec
cmpsb
xchg
call
icebp
xchg
cmpsb
jecxz
inc
js
arpl
js
xchg
popf
xor
les
mov
incb
sbb
mov
xlat
mov
push
mov
je
dec
mov
repnz
bound
arpl
xchg
pop
push
cmp
dec
sub
scas
pop
and
lahf
mov
jmp
scas
xor
mov
aas
jae
xor
and
cs
and
fwait
jge
js
or
ljmp
push
jnp
inc
mov
mov
clc
pop
jge
mov
jo
stc
mov
inc
xchg
cmp
scas
hlt
xchg
lds
fisubs
sbb
sbb
and
pop
ljmp
jp
nop
sbb
jge
xorb
stos
test
and
dec
mov
and
outsl
mov
adc
fisttpll
xchg
mov
xor
icebp
ret
xor
and
out
test
repnz
lret
jmp
dec
dec
xchg
sahf
out
and
movsb
cmovne
cmove
stos
rcll
xchg
loopne
call
push
pop
jb
push
pusha
sti
int
idivl
cmp
add
xchg
sub
or
gs
and
iret
pop
repnz
aaa
lret
nop
cmp
jno
pop
arpl
mov
mov
adc
mov
mov
mov
jmp
daa
stc
sbb
icebp
cmc
jl
stos
ucomiss
ret
jo
outsl
and
leave
ss
insb
fldcw
addr16
cmpsl
insl
xor
dec
or
mov
enter
scas
xor
push
sub
inc
movsb
sub
xchg
push
movsb
jns
aam
sbb
lcall
cs
dec
aaa
dec
into
inc
cmp
adcb
enter
mov
scas
sbb
xor
gs
jge
sub
aaa
inc
out
mov
mov
jle
fsubl
loope
popa
call
lret
je
shrb
push
addb
in
subl
fdivr
push
fmuls
cmpsb
push
xchg
and
iret
and
mov
stc
adc
daa
inc
push
dec
sub
movsl
mov
movsl
add
fwait
jbe
repnz
mov
push
lret
pop
adc
push
mov
inc
pop
clc
imul
aad
arpl
fsub
pop
xchg
xchg
lods
pop
mov
andb
arpl
shlb
faddp
gs
sub
pop
fmul
adc
mov
pop
mov
rcr
push
lds
push
xor
neg
loopne
bound
push
ret
outsl
pop
repz
mov
js
sar
mov
cmpsb
roll
mov
cmc
shll
mov
pop
lahf
shl
addr16
rcr
pusha
jl
enter
push
push
mov
mov
mov
push
xchg
sti
xor
adc
dec
lret
std
mov
fidivrl
fwait
xchg
pop
mov
outsb
or
fdivs
jp
dec
sbb
aas
filds
fwait
xchg
jge
inc
and
call
pop
pop
cmp
sbb
cmc
inc
jge
rorb
ljmp
popl
jecxz
jl
je
mov
or
xor
mov
repnz
outsl
push
mov
dec
xchg
popf
sbb
in
jmp
outsb
sub
and
cmp
les
outsl
push
out
dec
in
sbb
jp
or
mov
or
ret
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
cmc
pop
ljmp
jnp
sbb
rclb
lcall
jmp
aas
pop
test
clc
jle
lods
lds
sub
xchg
sarb
mov
lahf
fnstsw
push
sbb
out
or
ja
add
dec
mov
inc
lock
xor
sub
cld
dec
imul
push
js
adc
and
sub
inc
pop
pop
adc
push
shlb
xchg
mov
xor
hlt
lods
cmc
jo
sbb
ds
aam
test
dec
xchg
shl
dec
stos
sbb
popa
and
test
cmp
js
xchg
test
jp
jo
lea
sbb
repnz
cld
arpl
sub
test
imul
std
mov
mov
sbb
roll
sbb
test
aad
ds
jg
insb
aas
xchg
jns
adc
fdivrl
mov
push
mov
cmp
push
push
cmp
lods
int3
sub
lock
dec
loope
adc
std
popf
mov
cmp
rorl
mov
test
push
scas
clc
fbld
insl
add
cmp
call
sahf
mov
in
addr16
jno
rclb
icebp
or
fimuls
mov
out
dec
or
bound
mull
and
jbe
xchg
insl
insl
jp
sarl
fisttpl
add
push
decl
jg
sub
test
cltd
mov
fistl
cmp
and
int3
shrb
xchg
inc
mov
or
cmpb
inc
adc
xchg
cmpsl
push
cmp
adc
inc
mov
sub
call
das
mov
shrb
sbb
hlt
add
add
aaa
dec
pop
inc
ficompl
insb
mov
adc
add
or
shl
leave
cltd
mulb
dec
and
imul
push
popl
outsl
out
lods
xor
js
aad
das
lahf
jl
mov
pop
mov
mov
loopne
frstor
xor
fwait
mov
outsl
icebp
adc
add
mov
pop
aaa
or
nop
jecxz
or
fistps
movsb
push
sti
jae
cmp
adc
and
sub
push
lods
inc
mov
aaa
cmc
add
icebp
mov
lahf
cmp
sti
cmc
pop
mov
xchg
mov
iret
jmp
cmpsb
fildl
lahf
std
sub
or
add
rcr
test
or
loope
and
adc
cli
movsb
pop
mov
pop
mov
adc
les
mov
sub
pop
sub
enter
stos
ret
sbb
stc
inc
pop
mov
mov
aaa
iret
testl
in
movsb
shl
inc
mov
lcall
adc
addr16
lret
dec
popf
jae
add
push
pop
leave
add
and
ret
push
fwait
xor
rcll
dec
inc
add
les
fimuls
pop
add
xlat
sbb
mov
fwait
cli
daa
xchg
xor
icebp
lret
sbb
jb
push
sbb
xchg
in
add
mov
adc
push
sbb
add
inc
dec
and
adc
cli
iret
pop
test
adc
lahf
ljmp
push
dec
fs
mov
sbb
pop
test
mov
outsb
daa
pushf
imul
ljmp
outsl
add
js
mov
mov
lods
mov
in
push
mov
and
jae
outsl
and
sarl
dec
std
mov
jo
loopne
or
xchg
dec
vhsubps
ds
xor
loope
jecxz
xchg
cmp
cmp
dec
pop
or
insb
add
fnstsw
push
test
push
or
mov
test
mov
ficoms
popa
inc
fimuls
ds
sbb
ja
sbb
andl
add
pop
divb
xchg
ds
stos
jo
or
push
out
cmp
stc
xchg
push
sub
call
bnd
std
mov
idivl
mov
or
fmull
stos
push
movsl
pop
mov
test
push
mov
mov
add
push
dec
ret
dec
jb
inc
sbb
xchg
lahf
sbb
sub
push
cwtl
loope
xchg
cmp
xchg
xchg
icebp
bound
fwait
jb
push
push
movd
push
pop
lods
jle
lret
stos
movsl
xchg
mov
xchg
popa
call
pop
inc
paddb
lret
movsl
stos
xor
int
ljmp
hlt
in
gs
pop
cmp
nop
shr
lds
inc
test
add
push
repz
scas
scas
out
cltd
popf
shr
xor
movsl
pop
imul
or
lcall
decl
jno
pop
out
sbb
jmp
in
stos
das
xchg
insb
add
cmp
addr16
or
pop
inc
ret
scas
push
add
cmp
js
inc
push
inc
sub
aad
pusha
dec
mov
xchg
aas
mov
mov
jge
mov
sbb
push
out
das
pop
call
dec
add
data16
xchg
sub
xchg
cmp
xchg
xchg
sti
lcall
jecxz
das
jb
les
das
xchg
inc
sub
pop
cmpsl
jge
ja
cmp
inc
jbe
pop
movsb
or
adc
fimull
negl
xchg
adc
loop
sti
int3
dec
mov
fcomps
jecxz
adc
xor
mov
cli
sbb
mov
je
rorl
pop
sub
jp
add
mov
lods
dec
adc
loope
in
or
add
mov
ljmp
bound
fstp
lcall
lcall
xchg
out
lea
outsl
add
lahf
xchg
icebp
pop
or
inc
outsl
int3
sub
inc
fstpt
arpl
cltd
je
lcall
xor
push
dec
jmp
sub
push
pop
int3
mov
inc
mov
cmp
sub
cmpsb
jp
xchg
nop
xchg
lcall
outsl
push
arpl
cmp
jno
movsl
or
push
pop
gs
loope
mov
mov
arpl
mov
xchg
or
sbb
das
inc
sti
pop
inc
cmp
pusha
loopne
mov
fwait
push
sbb
jmp
xor
pop
out
inc
shlb
lods
mov
js
addr16
bnd
std
ja
add
idivl
std
mov
push
inc
shlb
pop
mov
inc
ret
mov
push
mov
sbb
jae
mov
xor
fsubrl
mov
sub
dec
push
mov
jo
or
lret
stos
and
push
out
cmp
or
dec
lahf
shld
mov
xchg
es
daa
inc
daa
mov
into
or
fsubs
mov
sbbl
pop
xlat
shrb
and
xchg
mov
pop
repnz
sahf
sbb
xorl
mov
inc
pop
mov
xchg
fneni(8087
outsb
push
lahf
xor
out
sahf
movups
scas
fnstcw
lret
fcoml
inc
inc
dec
xor
sbb
imul
insl
stc
cmp
fs
push
jo
scas
aaa
ret
fdivrs
popf
jns
sarl
in
lods
push
dec
mov
mov
dec
pop
jmp
add
dec
add
fcmovbe
mov
push
jg
mov
lret
out
and
cwtl
fcmovnb
or
jmp
lock
lock
mov
adc
ror
jl
in
idivb
mov
out
pop
movsb
xor
or
sub
push
mov
fwait
rcrl
dec
push
in
mov
adc
loopne
push
imul
fadds
xor
lcall
int3
imul
lret
sub
clc
push
cs
testb
sti
pop
jo
cli
push
sbb
dec
loopne
and
ret
out
jg
mov
adc
lea
add
mov
lock
cmc
inc
push
jl
cwtl
divb
sbb
dec
js
test
adc
rorb
lods
je
bound
xchg
or
test
dec
and
sub
in
icebp
push
data16
or
add
pusha
outsb
cld
and
cmpsl
jmp
mov
sbb
push
mov
je
inc
adc
lea
or
fnstsw
mov
cld
mov
aam
popf
xchg
clc
mov
xor
cmp
test
dec
das
sub
cmp
jp
and
xchg
shl
xor
xchg
jle
jmp
xchg
bnd
dec
mov
daa
icebp
and
das
push
fwait
test
ljmp
add
push
pop
lds
sub
xor
dec
leave
fs
cmp
popf
lods
jg
clc
xchg
adc
lahf
and
sbb
adc
in
lret
jae
imul
in
xchg
fcmovu
xchg
jb
dec
fimuls
notb
jecxz
push
dec
ss
jnp
xchg
sub
push
mov
ror
push
das
pop
jmp
xchg
inc
mov
aaa
rolb
je
icebp
pop
fimull
sbb
xchg
xchg
popf
cmp
lods
pop
push
xchg
xor
fwait
cld
add
mov
adc
xchg
sub
stos
adc
jl
inc
mov
and
bound
es
stos
adc
xor
xor
mov
pusha
stos
cmp
pop
xchg
add
sbb
adc
rcrl
mov
mov
data16
push
out
inc
insl
rcr
mov
imul
adc
out
xchg
pop
or
insl
mov
push
dec
dec
jae
dec
enter
mov
mov
mov
outsl
add
stc
ljmp
sbb
cmpsb
mov
int
xchg
hlt
push
jge
addr16
pop
loop
sub
sub
add
mov
xor
popa
sbb
sti
jle
movsb
inc
gs
into
jl
out
jmp
dec
push
jmp
xchg
mov
lea
dec
add
daa
cs
clc
inc
orl
push
aas
and
or
xchg
test
add
loope
xchg
mov
lock
dec
idivb
cmp
pop
movsl
lods
negl
rorl
test
mov
pop
mov
fnstcw
pop
lahf
popa
sbb
mov
jmp
xchg
int
sbb
xchg
call
mov
and
cmc
mov
int
push
xchg
ret
push
push
imul
inc
sub
pushf
inc
iret
jno
pop
in
fcom
sbb
adc
icebp
adc
xchg
pop
test
jecxz
je
fisubrl
ss
xor
into
xor
fcmovu
decl
xor
cli
push
lcall
insl
ret
aaa
aad
test
pop
jecxz
or
cmp
push
pop
dec
gs
pop
xchg
aas
ss
xor
scas
jg
inc
mov
nop
pop
call
mov
repz
nop
into
mov
pop
add
data16
sbb
bound
jne
test
sub
mov
rcrl
lods
xchg
sub
cltd
scas
leave
push
in
outsb
pusha
cmp
add
sbb
sub
push
mov
jp
cli
out
xor
ds
ljmp
stos
push
test
pop
mov
pop
test
push
inc
lahf
pusha
cmp
push
pop
mov
dec
jnp
in
in
repnz
sub
or
inc
add
int
xchg
sub
mov
adc
out
sbb
jne
hlt
pusha
sbb
mull
out
sbb
roll
ret
int3
popf
jg
dec
mov
jb
insb
loope
jo
pop
stos
addr16
adc
out
jnp
mov
cmp
imulb
int
cltd
jne
stc
test
mov
inc
add
ljmp
leave
xor
sub
in
lret
cmpsb
push
sub
mov
stc
fwait
pop
dec
in
or
int3
sub
into
jne
loope
iret
mov
lret
xor
imul
mov
adc
sub
rcl
xor
push
call
test
jmp
push
pushl
inc
negb
cmp
dec
sub
adc
rorl
lods
fsts
mov
repnz
rol
dec
fstp
aas
sub
sbbb
sar
imul
ret
jecxz
add
xor
popaw
std
xchg
xchg
mov
sti
xchg
insl
push
xchg
lods
mov
push
imul
in
nop
std
or
adc
ljmp
inc
ret
cmc
xor
jnp,pn
sahf
add
add
pop
mov
test
sbb
dec
jmp
push
dec
jp
xchg
stos
xchg
xor
jge
hlt
pushw
data16
mov
movlhps
dec
icebp
jge
scas
mov
loop
sbb
adc
leave
and
out
scas
sbb
push
xchg
popa
out
int3
push
jnp
lcall
ja
add
mov
in
push
shll
lret
out
mov
or
push
adc
mov
cmp
pusha
mov
arpl
out
mov
jecxz
xchg
das
mov
dec
mov
sbb
stc
sub
sbb
mov
fisttps
pop
pop
clc
inc
dec
adc
imul
mov
dec
dec
in
dec
imul
std
in
pop
shlb
insl
lods
xor
sbb
jno
jns
add
icebp
add
aam
enter
icebp
dec
pusha
lret
lods
fucomip
mov
sub
daa
rcll
push
in
cmp
pop
jb
inc
xchg
push
push
movd
jo
sti
cmp
fistpll
add
mov
adc
stos
jns
imul
mov
ljmp
sbb
lahf
push
mov
jnp
leave
cmp
loop
lcall
pop
loop
jb
cwtl
dec
mov
loopnew
jo
ror
and
xor
pop
cmp
adc
jno
cmp
pop
inc
push
outsb
mov
pusha
xor
bound
xlat
aad
push
pop
cmp
pusha
sbb
jno
push
mov
and
jg
pop
out
mov
or
or
pop
testl
insl
dec
mov
popa
lods
lcall
mov
mov
ljmp
xor
daa
and
dec
pop
ret
fisubrl
out
inc
add
jg
inc
mov
sub
sub
sbb
mov
mov
sbb
or
push
ret
mov
out
pusha
mov
in
in
add
int3
mov
out
mov
cli
stc
fnstsw
mov
push
mov
sbb
lret
xchg
push
mov
and
fwait
mov
push
adc
inc
pop
shll
mov
cld
fisttpll
enter
loopne
xchg
xlat
aam
mov
ds
mov
insb
negb
mov
lret
hlt
pop
aam
xor
sbb
xchg
pop
movsl
dec
mov
push
test
fs
ficoml
xor
mov
lds
les
inc
stos
sarb
mov
cld
jecxz
mov
mov
xor
or
mov
iret
jne
lock
jnp
stos
dec
fidivrl
mov
push
push
outsl
arpl
adc
rorl
cmp
pop
push
mov
cmp
leave
outsb
nop
jnp
into
in
idivb
cmp
sub
mov
jbe
ja
pop
sbb
test
sbb
xchg
add
sti
cmp
xchg
mov
das
cmpsl
xorb
icebp
cltd
xchg
jecxz
cltd
pop
xchg
out
jmp
pop
and
in
repnz
jb
loop
pop
test
fistps
cmp
loope
rclb
inc
push
ja
in
mov
sub
leave
cmp
inc
test
mov
ret
or
testb
arpl
iret
pop
jno
jne
in
repz
push
lds
jnp
sub
jo
roll
mov
fidivl
sub
mov
inc
nop
call
jp
stos
push
fs
lds
mov
push
ja
add
xor
and
int
nop
xchg
and
dec
pop
loop
jne
ljmp
or
jle
lahf
dec
pop
test
push
pmaxub
fnstenv
xor
mov
push
and
leave
mov
scas
cs
sub
sub
sbb
or
es
out
add
cmc
cmp
frstor
stos
aam
adcl
dec
xor
sbb
lea
shrl
dec
fisubs
mov
inc
push
and
or
jne
xor
xorb
cmp
mov
cmpb
sub
xor
pop
ficoms
out
jbe
or
and
pop
push
push
mov
notb
xchg
icebp
outsl
pop
dec
imul
test
leave
lahf
int
int3
scas
or
jge
jns
or
idivb
adc
push
lds
icebp
mov
mov
add
and
loopne
pop
jge
or
rorb
popa
test
inc
das
mov
jl
out
fwait
mov
ss
push
mull
and
fnsave
xor
xor
test
cmp
pop
pop
mov
cmpl
repz
out
mov
pop
lods
and
insl
mov
ss
sub
out
nop
cmp
adc
dec
test
sub
outsl
sub
movsb
pop
bound
xor
sahf
pusha
sbb
or
std
xchg
and
aaa
lahf
adc
lods
clc
clc
aam
lret
je
sbb
mov
and
pushl
push
sub
enter
inc
jo
add
and
add
repnz
es
data16
loopne
out
sbb
lcall
rorb
loopne
jecxz
shrb
call
mov
subl
rclb
iret
bound
jno
arpl
addr16
in
inc
repnz
push
sbb
mov
lcall
sub
and
jae
bswap
lcall
inc
outsb
lea
cmpsl
aad
pop
repz
push
addr16
xor
xchg
pop
iret
push
push
xchg
enter
into
dec
mov
mov
push
lahf
out
lret
pop
xor
adc
jmp
and
xor
lret
mov
xchg
xorl
dec
xchg
jb
pop
cmp
jmp
out
xchg
fists
mov
cli
cmp
mov
addr16
jne
insb
mull
out
scas
insl
xlat
das
sub
pop
xchg
je
push
adc
mov
mov
mov
and
rol
sbb
dec
or
dec
gs
dec
lods
cld
inc
popf
call
outsl
fisubrs
in
xchg
inc
stos
aas
call
pop
add
jge
sub
xchg
jmp
push
icebp
clc
xchg
cli
sbb
push
push
jecxz
sbb
sarb
push
dec
gs
add
stc
loopne
out
xchg
jbe
xchg
fildll
ret
jmp
sbb
cwtl
sbb
les
out
in
aad
push
sbb
into
aam
std
dec
xchg
mov
sbb
clc
push
xchg
push
cmp
inc
mov
jno
shrl
in
jb
shll
or
push
ljmp
xor
adc
pusha
jl
mov
or
packssdw
jno
mov
mov
lcall
rcr
inc
lods
push
addr16
dec
mov
lea
in
call
cli
pop
clc
cmp
sahf
cmp
sub
lahf
mov
fidivs
pop
fimull
iret
dec
mulb
lret
push
outsl
mov
popf
lds
lret
lret
mov
add
or
mov
imul
sub
jnp
pushf
aas
stos
lea
xlat
lahf
inc
sub
and
cmpsb
pop
mov
jmp
lds
push
dec
scas
mov
xor
daa
push
dec
lds
inc
dec
dec
int
mov
push
rorb
hlt
mov
push
jl
xor
xchg
sub
stos
jle
hlt
pop
daa
lods
xor
jp
jg
repz
jnp
pop
lret
mov
repnz
inc
jnp
popf
ljmp
dec
add
sub
test
cmp
push
lock
andb
roll
cmp
pop
adc
fbld
mov
xchg
int
or
aas
mov
jno
dec
add
dec
xchg
lahf
insb
pop
and
ja
pop
xchg
ret
mov
sub
insb
pushf
mov
adc
dec
add
cld
orl
push
cmpsb
jmp
dec
jmp
adc
inc
loop
mov
inc
fstpl
mov
and
mov
inc
jp
rcll
xor
push
cmp
pushf
gs
adc
movsl
dec
pop
sbb
push
xchg
orl
cmpsb
subl
cmp
jo
cmc
and
and
push
aad
xor
sahf
dec
xor
bswap
cmp
push
addl
dec
sbb
cmp
mov
or
bound
sbb
pop
cmp
sbb
inc
loopne
repz
push
call
mov
lret
push
inc
jmp
pop
sub
mov
out
sbb
mov
clc
fsubr
jmp
test
jne
mov
pop
lret
mov
xchg
std
adc
cwtl
add
test
adc
xchg
cmp
mov
jl
inc
popa
fldl
js
mov
in
ret
test
test
mov
push
int
inc
ss
jecxz
inc
int3
dec
sbb
xchg
inc
movsl
push
ret
jle
mov
pop
frstor
cmp
je
icebp
inc
popf
xor
xor
xor
nop
inc
pop
fsubrs
cmpsl
call
cmp
lcall
lods
std
ss
ljmp
loope
add
fidivrs
test
add
sub
xchg
pop
jns
stos
xchg
inc
out
es
dec
mov
mov
fstps
push
cmpsb
or
fdiv
cwtl
ret
jg
mov
in
dec
sbb
subb
int3
in
inc
xor
mov
and
pusha
arpl
add
push
adc
pop
ret
fwait
add
sbb
inc
sbb
repnz
push
popf
scas
xor
lcall
lahf
cwtl
addr16
pop
xchg
xor
jo
dec
aaa
jge
data16
pop
insl
sbb
stos
icebp
xchg
sub
call
pop
popf
loope
or
xchg
cmc
mov
imul
xlat
and
outsl
int3
and
pop
test
stos
arpl
mov
mov
cmp
jge
mov
adc
pop
into
lock
pop
mov
cmp
jge
or
xchg
sarb
cmp
inc
jbe
pop
xor
or
mov
sub
mov
daa
clc
xchg
das
fcomp
fildll
scas
or
xchg
inc
pop
or
jp
mov
ret
adc
xor
adc
dec
jl
fimull
sub
jp
rol
sbbl
je
inc
pop
cli
sbb
jl
rorb
into
sbb
mov
and
aas
add
push
gs
int3
inc
ret
orl
add
and
repz
iret
loopne
popf
mov
push
cwtl
sahf
pmaxub
les
sbb
inc
xor
and
popa
xchg
mov
out
lret
jnp
mov
in
pop
xor
inc
mov
imul
loopne
sbb
mov
mov
add
jno
iret
mov
xor
xchg
jp
jb
mov
loopne
lret
dec
pop
push
pusha
call
add
jae
cmpsl
xorb
cmp
movsl
loop
pop
mov
lock
mov
sbb
and
test
cwtl
out
xchg
adc
jbe
adc
scas
fidivs
xor
in
sub
sub
jge
sahf
shl
loope
loop
add
stc
mov
mov
fildl
test
adc
push
pop
lods
mov
mov
pop
mov
mov
cmp
testb
clc
adc
jmp
pushf
sbb
popa
mov
rcll
jp
imul
ljmp
das
mov
adc
inc
lock
sbb
testb
dec
ficomps
jl
xor
repz
mov
sub
push
dec
mov
pop
lahf
cmp
ljmp
mov
inc
movsb
adc
adc
mov
gs
clc
cmp
mov
sarb
jge
dec
adc
mov
sbb
pop
inc
mov
mov
data16
shl
ja
leave
push
adc
or
xor
insl
adc
stos
jbe
dec
lret
push
pop
jg
jno
inc
inc
mov
fistl
fiaddl
addr16
dec
push
cld
dec
jb
inc
xor
or
xchg
dec
sub
fidivl
stos
es
sub
cmp
sub
or
incb
xchg
mov
inc
xchg
pop
sub
stos
stos
add
lea
xchg
jge
mov
dec
pop
ret
inc
pop
add
sbb
add
in
mov
dec
mov
add
sbbl
shlb
scas
out
leave
test
outsl
adc
and
mov
mov
popa
icebp
arpl
cmp
shrl
insb
and
and
lock
xorb
cwtl
and
inc
rcrl
clc
into
insb
pushf
adc
adcb
mov
pop
mov
inc
dec
dec
push
lcall
xor
in
dec
fiaddl
sub
das
ret
into
push
fnstenv
fistl
movsb
or
sbb
das
push
or
clc
test
ja
mov
xor
in
and
icebp
push
popf
cmp
dec
out
pop
push
mov
jmp
ret
jmp
push
sub
lods
add
scas
add
movsb
loopne
push
cmpsb
divl
inc
and
bound
cmpsl
ljmp
xchg
dec
fistpll
push
or
not
push
addr16
dec
in
cmp
mov
inc
xchg
inc
shrb
xor
adcb
inc
jmp
fwait
add
mov
std
cli
movsb
test
mov
jae
js
and
push
inc
sub
push
jg
inc
mov
jge
and
not
fiaddl
or
loope
mov
push
pop
test
test
pop
xor
mov
push
fs
mov
or
or
insl
jecxz
jae
jge
cltd
pop
fbstp
mov
in
into
dec
sbb
lahf
pop
outsl
push
push
adc
imul
xchg
jmp
mov
jecxz
mov
ss
jns
mov
add
hlt
mov
add
lods
leave
or
dec
repnz
cwtl
xchg
xor
cld
lret
andb
and
scas
mov
mov
inc
dec
push
push
adc
mov
cmp
push
mov
sbb
fldl
scas
sub
out
fdivrl
ss
test
sbbl
jb
jl
xchg
icebp
xor
loope
bound
hlt
mov
add
iret
aas
ja
push
gs
push
scas
fsts
add
add
pop
xor
jo
shlb
rcl
lret
icebp
cmc
push
xorb
add
xchg
idivl
aad
jmp
inc
mov
mov
into
xchg
rcrb
mov
sub
inc
inc
xchg
sbbb
or
xchg
jl
dec
sbb
hlt
push
pop
and
xchg
mov
ljmp
dec
and
in
cmp
xchg
dec
fbstp
cmp
insb
aad
test
mov
mov
inc
lcall
aaa
or
mov
xchg
inc
popf
push
and
add
or
push
jns
imul
ret
or
test
es
lea
pop
sbb
cmp
cmp
inc
xor
push
and
xchg
mov
hlt
loop
fs
inc
or
jno
scas
test
sbbl
cmp
or
idivl
mul
and
repnz
shlb
and
push
adc
xchg
dec
add
call
jbe
dec
lea
icebp
aad
and
adc
pop
fstps
adc
mov
insl
bnd
mov
sub
dec
sbb
pop
repnz
insl
sub
fucomp
loope
insl
sub
andl
lods
movsb
cmp
dec
inc
in
mov
jne
and
push
or
mov
rdmsr
add
sbb
cltd
push
je
mov
cltd
jo
sbb
push
lods
dec
sbbl
dec
cmpl
shlb
pop
cmp
call
scas
ja
sti
add
dec
jnp
out
mov
inc
xchg
movsb
jbe
pop
jmp
mov
cmc
outsb
outsb
jae
pop
mov
xor
jmp
xchg
xchg
mov
jo
mov
test
fidivl
dec
dec
add
jg
call
fsubrl
or
push
or
test
into
adc
sbb
sub
mov
sbb
cmpsl
fadds
les
cwtl
fidivrl
daa
fstl
xor
inc
in
in
mov
adc
outsl
push
aas
dec
scas
or
gs
addb
inc
adc
inc
jecxz
cmpsl
mov
dec
mov
xchg
imul
inc
pop
adcl
cltd
pop
adc
push
std
sub
test
add
mov
nop
cld
in
lret
fmul
repz
scas
out
cmp
add
lock
iret
xor
add
ret
flds
pop
inc
lea
xor
xor
dec
das
jp
pop
push
or
insb
cmc
sub
leave
ljmp
out
push
ret
mov
sub
shll
lret
in
push
mov
or
cmp
mov
mov
cmp
mov
cmp
mov
enter
push
out
jmp
sub
lods
xor
pop
pop
int
push
mov
mov
cmp
pop
add
mov
adc
popl
sti
mov
stos
pop
push
test
aaa
dec
out
xchg
cmp
mov
lock
and
dec
or
cmp
or
and
xchg
push
and
cmp
pop
mov
mov
sbb
sbb
sub
lods
inc
adc
das
pop
iret
add
xor
jmp
xchg
lret
and
xchg
stos
lods
mov
enter
out
xchg
jecxz
and
pop
adc
mov
cmp
inc
das
and
adc
inc
fsub
aad
js
jnp
sahf
mov
pushf
shl
add
fiaddl
cmp
lods
xor
mov
je
fwait
cltd
push
sbb
lods
inc
xchg
adc
arpl
push
xlat
out
sub
pop
test
adc
psubusw
xor
pop
push
loopne
cmp
cmp
mov
movsl
pop
add
out
jmp
dec
lret
jge
jg
faddp
xchg
in
jmp
sub
stos
in
fdivr
cs
push
stos
cmp
pop
pop
testl
and
outsl
mov
jg
das
outsb
lods
and
call
dec
pop
lcall
jnp
jns
or
imul
dec
pop
jecxz
jge
pop
jge
dec
and
jmp
pop
push
int3
ret
lret
test
mov
push
mov
xor
and
dec
pop
ljmp
movsb
push
std
out
push
cmc
sbb
cmpsl
leave
leave
mov
lcall
mov
jg
mull
ret
rcr
loopne
pop
jecxz
clc
mov
lock
or
mov
push
cmp
mov
pop
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
repnz
jnp
pushf
jnp
cwtl
inc
sbb
or
lcall
insl
inc
out
push
cmp
les
mov
loope
mov
jns
or
jg,pt
and
jbe
push
ljmp
fldt
push
adc
aas
fsubrp
add
mov
mov
insb
sub
ss
cmp
sub
cmovb
jmp
cmp
inc
xor
hlt
sub
fwait
sbb
mov
addr16
imul
pop
dec
movsl
xchg
adc
outsb
mov
pop
cltd
scas
xor
mov
cmp
xor
lret
lods
dec
mov
out
stc
dec
movsb
mov
push
lods
push
push
or
cmovnp
pop
fstl
lret
mov
mov
mov
rcll
out
lea
nop
stos
jg
es
das
fstpl
dec
xlat
test
cli
bound
mov
add
mov
nopl
imul
cmc
jge
fisubl
pop
outsb
les
je
mov
xchg
sub
mov
push
cltd
inc
sub
adc
xor
adc
loope
jl
gs
mov
mov
rol
jnp
addb
adc
fdivp
xchg
xor
stos
cmp
fadds
mov
stos
call
cmpsb
addl
cmc
icebp
std
mull
aaa
rorb
mov
push
popf
cmc
fwait
ss
sbb
jb
inc
inc
sarl
xchg
std
leave
faddl
int3
fistpl
jecxz
addr16
es
fstl
std
out
jne
sub
jns
cmp
xor
ljmp
pop
pop
insl
push
divb
jl
add
push
add
scas
xor
dec
pop
adc
adc
aam
lret
push
call
pop
inc
aaa
decl
inc
int
repnz
mov
in
idivl
inc
js
aas
aaa
or
es
and
cmc
fdecstp
mov
mov
cmp
cmpsl
pop
mov
jmp
xchg
mov
imul
sub
pop
sub
out
lea
sub
cmp
outsb
cli
pop
je
outsl
mov
das
scas
jns
clc
sub
sub
insl
les
ror
pushf
mov
push
mov
enter
popaw
inc
adc
lds
mov
mov
rorb
cmp
imul
js
cltd
out
pushf
mov
icebp
clc
dec
roll
jbe
cmp
sub
lea
shl
push
xchg
es
push
repnz
dec
insl
sbb
xchg
cmp
fcoms
fwait
in
cmp
daa
inc
cmpsl
add
push
push
cmpsb
mov
std
fimull
in
pop
test
lahf
movb
data16
cmp
dec
bound
jno
jg
lock
bound
push
or
mov
jb
negb
sbb
xchg
jl
icebp
sahf
or
nop
dec
sub
shrb
ljmp
pop
mov
into
dec
mov
fstl
xchg
push
loope
pop
frstor
or
dec
add
adc
mov
movsb
and
adc
push
ficoml
aam
int3
xlat
push
cmp
cltd
dec
rorl
mov
testl
fildl
xchg
int
in
mov
bound
fidivrl
pop
int
dec
pop
adc
lea
mov
mov
out
in
cmp
aad
xor
pop
sbb
lods
mov
mov
adc
inc
sarb
daa
loopne
sbb
aad
lret
lods
fidivrl
bound
int
in
xor
jo
inc
push
dec
mov
imul
lods
mov
cmp
dec
outsb
cli
add
mov
aam
jns
popf
adc
jecxz
in
or
enterw
pop
imul
test
inc
movsl
je
lahf
add
fstps
or
nop
mov
test
test
mov
out
push
pop
push
push
mov
push
aad
stos
pop
outsl
sti
pusha
pop
push
icebp
aam
dec
pushf
jge
or
xor
mov
mov
outsb
mov
int3
mov
adc
sbb
push
ret
lret
sbb
and
ret
sub
loopne
xchg
mov
and
sbb
loopne
dec
and
aas
lret
or
add
mov
out
cld
out
ss
popf
mov
push
pop
fstpl
or
shl
pop
test
jae
or
push
data16
lcall
inc
sbb
in
je
jne
rclb
in
lret
fidivrl
shlb
mov
lock
aaa
mov
dec
inc
xor
jge
inc
mov
pushf
cs
xchg
pop
in
lahf
movl
js
mov
xor
cli
rcrl
jbe
enter
stos
ds
in
jmp
stos
out
dec
cmc
mov
mov
loope
popf
cmp
fs
jne
xlat
jge
ss
addl
dec
add
dec
sahf
dec
xchg
popf
mov
pop
cmp
push
es
add
out
xor
sub
sbbl
sub
fs
inc
es
int3
shl
add
hlt
push
jecxz
data16
cmp
lods
mov
mov
je
mov
sarl
xor
cli
loopne
jg
imul
ja
loop
shrl
rcl
mov
sub
pop
stos
in
call
xchg
dec
push
cmp
mov
in
mov
nop
lret
cmp
jne
cmp
outsb
faddl
cmp
insl
xor
xchg
icebp
in
iret
pop
stos
sbb
xor
out
jl
inc
sub
lret
xor
mov
mov
cmovp
lahf
clc
or
in
std
cmp
cmp
mov
fldenv
adc
mov
inc
mov
out
or
es
hlt
mov
mov
xchg
cmc
sub
mov
scas
pushl
sbb
mov
fs
xor
pop
pop
stc
pop
dec
pusha
xchg
inc
xchg
test
cmpsl
mov
inc
adc
pop
andl
fwait
lock
popf
insl
test
iret
sub
cltd
jg
shl
out
mov
mov
cmpsl
adc
sahf
dec
mov
aad
push
xchg
in
lods
jg
cmp
mov
xor
add
jnp
jp
in
fxch
mov
movsl
movsb
cmp
out
add
stos
jl
test
pop
push
cwtl
mov
jecxz
xchg
negl
dec
dec
mov
cmp
xchg
xor
sbb
add
lcall
jae
push
xor
gs
xor
ja
mov
cmp
test
mov
dec
in
mov
add
dec
dec
or
push
mov
out
xor
inc
sbb
xor
add
scas
xchg
or
mov
lea
push
jb
mov
pop
lods
mov
mov
inc
or
sbb
mov
push
je
lods
repnz
scas
divb
addl
xchg
dec
inc
cmpsl
iret
mov
cmp
imul
and
outsl
push
push
data16
xchg
mov
sbb
jno
mov
addr16
dec
lds
adc
mov
jno
push
pop
xor
rorb
push
repz
mov
push
sysret
dec
pop
xchg
fcmovb
cmpsl
mov
push
jge
add
mov
outsl
ret
inc
lods
push
mov
push
imul
or
int
and
ss
inc
xchg
cmp
jno
in
test
and
ror
loope
inc
test
inc
lret
xchg
scas
mov
inc
push
add
xlat
fstpl
ds
push
mov
and
cwtl
cmp
sub
or
jecxz
mov
inc
pop
xchg
lock
sbb
mov
repz
jb
mov
push
pop
mov
add
aad
jl
add
lea
mov
std
mov
pop
jae
iret
aad
mov
mov
push
add
xchg
insl
icebp
mov
cmp
dec
xchg
mov
cld
int
xor
inc
sti
inc
cmp
push
stos
lds
xor
rorb
mov
jge
stc
icebp
scas
dec
jbe
addr16
out
sub
ja
jne
dec
inc
or
shrb
pop
sub
mov
pop
mov
xor
and
xor
fucomp
jnp
insl
in
fdivrl
nop
push
aas
jo
jle
inc
in
mov
leave
mov
je
jp
push
std
mov
cs
lea
jno
insl
xor
inc
jae
inc
add
xchg
cmp
in
outsb
movsl
ja
xlat
out
sub
mov
mov
in
mov
xchg
sbb
adc
incb
lds
mov
lds
xor
jmp
in
xor
out
mov
inc
sbb
dec
push
mov
lret
nop
pop
mov
pushf
push
scas
fistpl
mov
pop
jg
and
inc
or
cmp
or
movsb
fcompp
or
call
or
or
push
in
sub
mov
and
xor
fstpt
lret
xor
loope
and
inc
lods
xor
cmpsb
iret
outsl
arpl
inc
mov
mov
xchg
daa
xor
inc
adc
or
pusha
or
adc
adc
fsubrl
inc
cwtl
in
cmp
inc
mov
in
into
pop
jmp
outsb
push
out
push
xchg
and
shlb
out
in
scas
xor
or
lcall
mov
mov
call
and
xchg
cmp
jae
mov
movsb
out
sbb
or
fiadds
test
enter
loopne
fs
popf
js
pop
aas
aaa
imul
imul
adc
and
outsl
push
pop
push
xchg
add
imul
push
bound
jo
fnstenv
outsb
and
das
xchg
dec
jns
xchg
inc
clc
sub
push
or
mov
testb
scas
jge
sti
pop
fs
xchg
inc
cmp
test
les
push
int
mov
xchg
ljmp
test
lods
add
sarl
jo
and
repz
xchg
ret
lods
mov
xor
push
test
aas
aad
inc
movsl
shlb
repz
sub
pop
ss
cmc
hlt
xor
mov
pop
jae
and
scas
ja
xchg
into
data16
les
push
mov
jmp
sub
mov
mov
xor
jg
das
lods
jbe
iret
inc
xor
sub
sub
or
sub
sub
lahf
and
sbb
lcall
add
rorb
vmread
mov
pop
or
xor
fimull
mov
pushf
dec
mov
cmpb
add
cmpb
test
mov
outsl
outsb
ja
jle
mov
and
jbe
sbb
mov
fs
push
mov
jae
jecxz
sbbl
stc
clc
scas
js
inc
es
int
stos
bound
cmp
pop
add
mov
int
pusha
cli
inc
sbb
xor
test
movsl
sub
mov
fdivrl
dec
fs
sub
add
xchg
stos
fs
dec
lahf
mov
repnz
and
push
and
fs
outsb
pop
push
cwtl
cmp
or
aam
mov
pushf
loop
ss
das
mov
pop
mov
movsl
xchg
stos
repz
sub
addb
xor
cld
loop
ficompl
call
adc
inc
cld
outsb
pop
cmp
xor
jno
rolb
cmpsl
fnsave
xchg
cltd
lods
aas
sahf
dec
or
in
add
inc
pushf
mov
xlat
xchg
repz
pop
pusha
scas
call
xlat
aaa
inc
mov
push
mov
and
ds
xorl
sub
mov
out
into
push
pop
arpl
aam
xor
adc
and
and
std
cmp
mov
jbe
push
stos
sub
out
loopne
outsl
and
cmpsl
fnstsw
fcmovnbe
cmp
pop
imul
aas
subl
test
leave
test
repnz
pop
xlat
js
push
ret
jbe
rcll
mov
or
insb
add
mov
push
bound
pop
out
push
std
pop
dec
addr16
pop
dec
mov
cmc
mov
imul
int
leave
ds
push
int3
pushf
adc
xchg
div
push
hlt
sarb
jp
fiaddl
popf
sahf
bound
shlb
sbb
and
cltd
jno
test
add
mov
jae
sbb
push
push
push
repz
push
ss
sub
or
stos
jbe
mov
test
push
xor
mov
cmp
les
popl
mov
jge
pushf
leave
or
stos
inc
mov
jno
aaa
jge
out
call
aas
mov
xorb
cld
pop
mov
mov
sti
popf
xor
add
sbb
sbb
roll
xchg
adc
inc
les
jmp
ret
or
adc
stos
dec
inc
jne
mov
sarb
scas
mov
cmp
movsl
fs
lock
pop
inc
loope
sub
dec
adc
cltd
xchg
cmpsl
mov
cld
test
adc
push
pop
dec
inc
push
shrb
sbb
lods
hlt
xor
or
jae
loop
les
sbb
sbbl
xchg
icebp
cmp
je
lcall
cli
dec
mov
mov
sub
stc
cli
imul
push
test
inc
inc
and
cmp
or
or
out
js
dec
les
loope
pop
and
lds
fwait
es
ret
aaa
leave
xor
jb
fstps
mov
xor
aas
mov
jl
pmuludq
push
jo
fs
test
subb
jmp
lods
insb
nop
fwait
jecxz
ds
repz
jns
xchg
stos
ss
aas
cmp
mov
inc
test
test
lahf
xor
jne
fmull
fiaddl
ds
cmc
adc
dec
and
aad
push
ret
jg
xchg
sub
das
xor
pop
notl
mov
ficoml
sahf
push
xchg
ds
adc
sarl
cwtl
imul
jo
jle
pusha
sub
int
or
mov
cld
adc
xor
int3
xor
test
push
fcmovb
into
and
test
fnstsw
xchg
and
inc
das
sti
push
and
cmc
pop
mov
xor
shll
cmpsl
lret
dec
adc
roll
push
arpl
cltd
jle
xor
sub
out
je
cs
xor
xor
fwait
xchg
lcall
xor
push
xor
cltd
adc
push
mov
cs
and
and
mov
in
push
test
mov
jmp
sbb
push
lods
fidivs
into
js
lds
in
jmp
jge
jae
push
mov
mov
add
ljmp
fwait
std
call
leave
pusha
out
sub
outsb
mov
push
add
mov
rorb
mov
in
cmc
das
cmp
sti
jae
ss
dec
xchg
inc
fnstenv
and
cli
mov
dec
mov
js
dec
sub
and
xlat
sti
cmpsl
and
xchg
jno
aaa
cwtl
mov
add
mov
loope
mov
rcr
or
clc
cmc
mov
and
nop
inc
mov
sbb
sub
mov
mull
fiaddl
and
cwtl
push
sub
cmp
mov
mov
jbe
or
mov
fnstsw
iret
adc
jg
stos
xchg
mov
mov
pusha
jl
jl
ficoml
sub
jle
pop
jno
adc
fwait
jg
fnsave
and
arpl
xchg
shll
ficomps
out
ficoms
mov
scas
sbb
add
mov
xor
cltd
mov
enter
je
fdivs
shlb
cld
fisubs
popa
arpl
dec
jp
loop
push
sub
call
sub
add
dec
xchg
xor
push
xchg
and
or
loope
fmull
pop
in
jl
pop
pop
frstor
insl
or
mov
icebp
fimull
push
or
cmpsb
int3
nop
jnp
ja
pop
inc
dec
jne
mov
out
jle
lds
pop
aad
pop
xchg
jmp
std
cmp
sub
jnp
call
into
out
xor
cmpsl
dec
lods
xchg
int3
add
jmp
jno
in
sbb
sbb
jge
aad
jmp
nop
das
ret
pop
adc
sbb
mov
fsubs
push
out
rolb
pop
ja
imul
cmp
mull
aam
jmp
mov
push
in
lcall
fistps
push
call
leave
adc
push
sbb
lret
push
lahf
jg
xor
pop
mov
push
scas
fsubrs
xorb
les
push
mov
ret
pop
pop
into
add
mov
ja
out
imul
adc
daa
leave
daa
fcompl
cmp
repz
shlb
cmp
arpl
test
xor
dec
mov
ss
and
cmp
add
repnz
sub
xchg
sbbl
cmp
fs
cmp
pop
iret
mov
xor
push
leave
xchg
or
pop
sarb
xchg
mov
xchg
cmp
pop
in
sub
xor
push
lcall
xchg
pop
das
or
test
push
lods
movl
enter
les
sbb
mov
add
icebp
jnp
aam
push
push
stos
ja
shll
mov
push
loope
mov
jnp
cltd
push
jl
pop
jmp
jge
add
jne
adc
lds
cltd
pop
and
xor
mov
aas
cltd
adc
push
push
es
dec
shlb
test
int3
dec
or
push
and
in
dec
mov
bound
loope
mov
std
in
mov
and
inc
or
shll
inc
pop
pop
mov
add
negb
cmp
xchg
push
and
pop
jmp
lods
repz
push
inc
in
test
xor
test
mov
enter
stos
push
cli
out
imul
cmc
hlt
stc
mov
stc
out
dec
dec
xor
pusha
cli
pop
daa
mov
xchg
fsubrp
mov
add
testb
mov
inc
aaa
fsub
jnp
negl
xchg
mulb
jmp
incl
in
inc
mov
mov
and
mov
popf
pop
sbb
push
and
dec
call
jp
dec
and
les
out
mov
jp
pop
int3
mov
mov
movsb
mov
call
scas
dec
sbb
mov
scas
inc
xor
sbb
jg
into
hlt
sub
xchg
mov
adcb
outsl
push
pop
xchg
add
mov
aaa
shr
sub
and
outsl
and
es
insb
sub
es
daa
das
add
push
xor
jmp
push
fadd
lcall
jmp
std
push
xchg
push
pushw
in
and
ds
sbb
sahf
dec
lea
into
pop
pop
cmp
int
jle
jmp
mov
add
pop
lds
ds
xlat
insb
add
dec
xchg
xchg
popf
mov
testl
adc
aas
lret
add
jg
cwtl
cmp
cmpb
loop
aaa
mov
clc
push
test
out
xchg
rolb
mov
pop
jb
xchg
jg
cmp
sbb
dec
aad
mov
mov
mov
jg
push
mul
in
js
icebp
mov
addb
pop
imul
mov
scas
xor
imull
iret
inc
or
inc
jb
xchg
push
or
push
adc
fnstcw
pop
inc
int3
cmp
mov
mov
sahf
dec
push
aaa
dec
jnp
sub
mov
hlt
mov
notl
mov
or
mov
sbb
push
xchg
mov
cli
adc
fsubs
xor
and
ss
xsaves
push
dec
mov
push
dec
mov
das
bound
filds
or
out
dec
xor
hlt
lds
insl
movsl
jae
imul
fmul
leave
ds
sbb
negb
iret
pop
dec
dec
ljmp
into
sub
fcomi
stc
lds
div
cmp
mov
adc
mov
cwtl
mov
rcrb
fsubrs
stc
lret
insb
jne
jno
adc
adc
lret
add
scas
jl
and
rolb
rcr
push
lret
ja
sbbb
sbb
sub
sbb
mov
mov
les
shlb
jne
xor
or
aas
jmp
cvtps2pd
adcl
dec
pushf
adc
sub
push
sub
mov
pushf
mov
call
cs
cmpsb
bound
pop
in
aaa
dec
ja
lcall
loop
mov
out
jno
fadds
pop
mov
dec
roll
shll
jmp
insb
addb
mov
cmp
clc
nop
or
imul
in
xchg
scas
xchg
aad
cli
xor
mov
pop
inc
in
and
lret
test
dec
push
mov
inc
mov
je
jle
into
dec
xchg
add
je
dec
pop
jb
jge
fsubl
ret
lret
mov
fs
adc
fisttpll
sub
out
je
mov
pop
arpl
repz
mov
mov
and
inc
js
stos
out
mov
adc
cld
andb
imul
xor
loopne
sti
iret
xor
in
push
ss
insb
mov
jae
rcll
dec
arpl
sub
cmp
cs
adc
int3
sub
aad
sahf
xor
xchg
mov
mov
inc
ja
in
insb
xchg
xchg
addr16
xor
inc
xchg
loope
scas
clc
xor
add
dec
mov
mov
nop
lahf
cwtl
xchg
add
scas
fdivs
pusha
xor
jbe
rcrb
sbb
iret
bound
sub
loopne
inc
xchg
std
push
lds
sbb
pushf
jnp
lret
cmp
cmp
and
push
inc
add
pop
mov
ret
mov
inc
mov
mov
jp
push
and
ret
xor
insb
mov
mov
lods
aas
sub
inc
incl
mov
push
test
pop
arpl
test
xor
mov
xchg
and
pop
outsl
or
bound
icebp
xlat
movsl
mov
test
jne
clc
lods
push
inc
jno
mov
dec
add
jne
fwait
pop
mov
inc
test
imul
lds
pop
mov
jb
mov
push
stos
outsl
or
inc
mov
pusha
mov
sbb
xor
roll
pusha
bound
pusha
push
ret
inc
mov
iret
add
sub
rcrl
adc
repz
rcl
xor
pop
cmp
pop
iret
cmpsb
mov
xchg
sub
jp
js
or
adc
pop
out
and
jg
fidivl
imul
dec
push
addr16
sbb
sbb
sbb
std
jl
cmp
popa
data16
dec
inc
rolb
inc
lret
and
sti
dec
lock
add
out
push
test
adc
outsl
testl
pop
and
lret
repnz
pop
sbb
shl
push
out
leave
mov
and
mov
repnz
aas
xor
mov
rcll
je
loopne
jg
cmc
popf
pop
xchg
xor
negl
mov
mov
jno
out
insb
dec
add
fcomps
xchg
mov
gs
roll
sbb
scas
cmp
fadds
arpl
cmpb
adc
test
es
loope
jnp
outsl
fidivrl
xor
icebp
popf
movsb
push
es
loop
sbb
pop
or
jno
pop
cmpsb
adc
aam
clc
ljmp
sbbl
dec
int
or
enter
pop
add
cli
mov
or
push
jl
icebp
cs
push
mov
sub
add
inc
in
adcb
insb
jbe
mov
fs
xorb
jge
add
jae
leave
push
sub
idivb
dec
or
ja
push
adc
jno
push
cs
sub
or
xor
sbb
or
mov
xor
fs
sub
insl
inc
jno
cs
fiadds
mov
jg
sbbl
stos
frndint
inc
pop
xor
sar
loope
mov
mov
aaa
call
mov
sbb
clc
ret
cmc
pop
add
lcall
mov
pushf
sbb
push
mov
xor
xor
mov
mov
add
dec
add
int
jb
cmpsl
aaa
jnp
sbb
push
aaa
lods
int
sbb
sub
sbb
xchg
mull
es
and
out
leave
jp
daa
repnz
dec
ja
pop
mov
ja
movsb
in
mov
cs
mov
std
int
aam
lds
cmc
ret
enter
dec
jo
mov
pop
or
adc
sahf
adc
cwtl
outsl
mov
xchg
add
dec
push
cmpsb
pushf
xorb
psubsb
aad
insl
push
add
xchg
sub
out
mov
aad
jle
push
lret
in
loopne
pop
fwait
push
outsl
mov
mov
xchg
or
cltd
repz
adcl
inc
pop
clc
cwtl
mov
dec
das
in
inc
cmc
cmpsl
pop
lea
jne
jge
sbb
es
xchg
adc
cltd
and
in
inc
mov
sub
adc
outsl
adc
dec
fimull
sbb
xchg
test
lds
stos
pop
sbb
sti
add
inc
arpl
push
push
cmp
or
inc
push
pop
sbb
jb
enter
fs
imul
sbb
mov
inc
loopne
add
mov
mov
faddp
mov
sbb
mov
jg
mov
jle
sarl
mov
mov
mov
pop
cmp
scas
ljmp
dec
pusha
add
inc
dec
movsb
cmp
push
adc
sbbb
mov
inc
in
lods
xor
inc
pusha
mov
outsl
cmc
test
push
sub
mov
mov
test
ja
pop
or
dec
popa
push
imul
leave
notb
leavew
push
adcb
stos
int3
sub
push
inc
arpl
cmpsb
cltd
ficoml
jb
add
xchg
inc
mov
dec
test
out
mov
pop
mov
movsl
ret
cmp
ret
repz
sub
loop
shl
push
mov
loope
sub
add
xchg
in
daa
push
push
pop
pop
loop
outsl
adc
daa
mov
vpaddb
fisttpll
std
in
test
loope
in
add
xchg
dec
roll
push
test
adc
sub
sti
mov
dec
inc
sub
push
loopne
mov
pop
popa
mov
push
xchg
stos
xchg
cmp
stos
decl
cmpsb
stc
rorb
xchg
inc
addr16
push
mov
orl
mov
arpl
push
stc
mov
adc
outsb
rcrb
xchg
sar
cmpsb
mov
test
sub
push
sbb
fwait
pusha
and
into
je
cmpsl
sbb
inc
data16
jmp
add
sti
stos
sbb
pop
push
mov
mov
xor
test
pop
repz
mov
pop
pop
add
out
loop
xor
gs
push
mov
in
jbe
mov
jae
fimuls
movsl
sbb
das
xchg
fldenv
mov
dec
cmp
rcl
lds
jno
dec
ret
ficoml
daa
addr16
stos
inc
cli
dec
lret
dec
mov
dec
or
in
xor
aam
lcall
negb
les
push
mov
mov
and
inc
std
lods
clc
fidivs
cmp
cs
pusha
push
out
adc
iret
fcoms
xor
cltd
jns
pop
iret
sub
insb
dec
push
mov
push
mov
cmp
sbb
cmpsb
sahf
lods
aam
test
mov
sbb
jne
xor
test
adc
ficoms
mov
clc
imul
subl
outsl
jl
out
push
mov
mov
in
mul
ja
xchg
mov
jae
lcall
fwait
cmp
xchg
enter
xor
dec
jl
testb
inc
pop
push
dec
je
loope
sub
stos
out
xchg
push
imul
or
dec
add
fldcw
adc
pop
addb
sbb
mov
lds
rcrl
cmp
jmp
fcmovnb
ds
testl
sbb
fcomps
push
dec
cld
jge
sbb
repnz
loop
xor
ficoms
fsts
jnp
or
and
lcall
xor
push
ss
stc
lods
inc
clc
out
iret
xchg
out
out
icebp
pop
push
cmp
repz
push
aad
mov
jmp
pop
xchg
pop
je
xchg
sti
aaa
sbb
xchg
stos
ret
xchg
fs
pop
fucomp
rcll
dec
std
outsb
or
pop
inc
xchg
mov
push
cmp
popf
push
jns
cmp
mov
sbb
mov
insl
and
out
inc
xor
dec
jge
inc
movsbl
scas
and
pop
adc
rcrl
mov
xchg
add
stos
gs
and
mov
ljmp
test
es
movsb
add
rorl
sub
dec
insb
pop
pop
mov
jo
rorl
lahf
xchg
daa
je
pop
jle
cmp
add
in
cmpsl
or
mov
xor
add
dec
movb
loopne
stos
pop
adc
or
cmp
imul
shrb
scas
out
jmp
cmpsl
shlb
lods
sbb
cmp
push
mov
pop
ret
jl
push
push
shlb
jne
mov
lock
movsl
ja
es
sbb
xchg
push
cwtl
test
je
mov
sbb
std
pusha
mov
insb
jg
adc
lcall
push
sbb
fst
icebp
aad
dec
dec
or
arpl
pop
xchg
leave
xchg
lret
sahf
add
mov
in
sbb
mov
mov
lret
testb
fcompl
loopne
sarl
imul
scas
es
cmp
mov
sub
test
and
jp
out
das
lahf
sbb
or
out
fsubl
ds
sub
push
jge
mov
loopne
movsl
in
pop
call
icebp
negb
and
int
dec
mov
pop
out
nop
dec
out
lahf
push
mov
add
aas
mov
or
xor
jno
cmc
mov
add
jg
popf
inc
jno
aaa
sub
fsubs
stos
test
stos
add
sbb
xor
and
jl
and
mov
jl
inc
nop
mov
aad
inc
lret
or
mov
int
add
scas
xchg
inc
add
and
inc
in
rorb
xchg
add
add
inc
loopne
add
add
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
outsb
xor
clc
pushf
jnp
jp
mov
fs
test
mov
sbb
lock
aad
mov
jo
jne
inc
sarl
mov
fnstenv
stos
icebp
xchg
test
arpl
add
or
push
or
mov
je
nop
mov
repz
dec
lahf
cmp
cmp
mov
jno
les
out
cmp
enter
ss
mov
push
and
aad
dec
aam
mov
shr
aas
leave
dec
fs
imul
or
bound
cmp
int3
fcompl
out
mov
lahf
xchg
enter
cmp
dec
test
lock
xchg
xorl
in
int
cli
jge
or
fxam
and
leave
in
jecxz
mov
jno
push
std
mov
lods
inc
ljmp
or
imul
pop
lret
fimull
xchg
test
out
fwait
je
stc
xchg
sbb
push
cli
jmp
movsl
sub
and
rcr
in
inc
jae
mov
sub
mov
loope
xchg
js
in
mov
inc
insl
lret
mov
loop
or
inc
jp
fcmovbe
xor
or
adc
xlat
dec
adc
out
in
enter
mov
test
outsl
mov
lcall
xchg
or
push
or
sbb
stos
jno
int
aas
adc
dec
push
rcrb
lea
lock
aaa
mov
jae
call
loopne
push
rcll
sbb
stc
cmpsb
fisttps
lcall
cs
pop
orb
mov
add
push
xchg
jne
xor
test
dec
cltd
nop
mov
jge
jb
fidivrs
ret
cltd
add
mov
sete
xchg
jmp
popl
imul
add
nop
pop
lods
sarl
shl
jne
inc
sub
lret
mov
jne
xchg
and
mov
and
cmp
inc
adc
mov
lock
sub
sub
mov
xchg
pop
jecxz
jno
in
mov
cli
mov
fldt
add
sbb
stc
mov
mov
xor
mov
loopne
andl
in
repz
inc
insl
fldt
xor
or
int
dec
fs
cmp
mov
sarl
daa
adc
test
pushf
jbe
inc
or
sarb
bound
adc
or
mov
lcall
or
ss
jno
or
lds
call
ja
sub
adc
xor
fs
add
les
test
jle
imul
in
mov
fisttpll
cmp
dec
inc
imul
push
and
nop
shrl
scas
mov
lret
shr
pop
cmpsb
cmpsb
pusha
cmp
loopne
mov
and
sub
fsubs
rorb
jae
add
cmp
xchg
jle
sbb
loopne
xchg
clc
push
adc
insl
dec
xor
mov
mov
shll
dec
jmp
jo
adc
mov
mov
inc
jae
sub
aad
or
xchg
push
clc
jg
fidivrl
repnz
adc
xor
imul
sbb
jl
faddl
repz
movsl
pop
xchg
movsb
mov
pop
rcrl
lds
sarl
outsl
jne
mov
fwait
stc
je
in
ljmp
fs
jae
arpl
sub
inc
cld
mov
roll
mov
enter
popa
fnstcw
sarl
jns
adc
aaa
loop
or
lret
lods
js
notb
or
or
call
filds
out
cmpsl
es
cld
pop
loop
mov
push
ja
shrl
cmpsl
mov
pop
adc
sub
add
mov
cltd
in
dec
inc
xor
incb
cmpsl
in
mov
lea
xor
unpckhps
in
pushf
jge
stc
mov
mov
adc
pushf
mov
ret
hlt
mov
jo
rorb
iret
int3
dec
icebp
push
iret
movl
push
fwait
xor
ja
imul
imul
xorl
lret
cwtl
cmpsb
icebp
leave
add
es
push
stos
jno
xor
xchg
adc
xor
xor
xor
into
ss
stc
fstpt
fs
lock
test
sub
sar
push
jnp
mov
jnp
out
out
push
push
mov
xchg
and
xor
push
or
loope
cmp
push
xchg
mov
push
mov
cmp
push
jg
cmpsl
fwait
sti
pop
sbb
leave
outsb
sar
cmc
or
mov
push
push
pop
movsl
jecxz
and
cwtl
daa
jmp
jg
sub
enter
pop
out
mov
pop
dec
lods
push
jno
add
mov
push
fcoml
loopne
pop
jg
dec
cwtl
pop
fwait
test
inc
xchg
xchg
lods
pop
push
scas
fsubrp
test
cltd
insb
pop
dec
sub
sub
fstpt
dec
shrl
outsl
pop
int3
sarb
cmp
xchg
sahf
inc
or
cmp
add
mov
jp
in
add
push
sti
inc
mov
movsb
addr16
mov
pop
cmpsl
xchg
movsl
inc
or
shr
popa
cltd
cmove
xchg
jbe
xchg
fisubrl
outsb
cld
roll
mov
or
cld
cmc
cld
imul
fcoms
ds
les
lret
rcl
mov
xchg
add
es
fisttpl
shrl
push
mov
cmpsl
pusha
xchg
or
add
and
imul
cmc
jle
fcom
mov
sbb
ret
or
jmp
daa
arpl
aas
daa
stos
xchg
jno
pop
rolb
mov
shl
cwtl
xor
outsl
scas
test
and
cli
pop
push
cmp
orb
idivb
sti
faddl
xchg
inc
test
ja
cli
stc
outsb
sub
imul
jne
push
testl
and
cmp
cli
clc
pop
add
inc
cmpsl
lret
cltd
push
xlat
int3
call
lock
push
repnz
outsb
jp
xor
mov
dec
shrb
cmpsl
std
or
xchg
xchg
mulb
in
je
fdivr
fiaddl
sahf
inc
xchg
dec
iret
sbb
lds
repnz
idiv
sub
dec
outsl
mov
push
or
adc
push
lret
xchg
jns
push
and
pop
jno
das
or
pop
or
popf
push
sbb
sbb
call
cmpsl
orb
gs
adc
mov
xchg
xor
xchg
imul
test
adc
push
inc
icebp
jmp
adc
jl
mov
insb
jmp
in
ds
pop
inc
inc
xchg
adc
mov
dec
ljmp
ljmp
pop
andl
pop
or
dec
jmp
push
mov
fsubrs
pusha
push
jne
loop
js
xchg
lcall
dec
xor
rclb
pop
mov
mov
mulb
stos
or
pusha
sahf
inc
out
ljmp
ret
adc
mov
and
shll
outsb
popf
jmp
je
jecxz
xor
fistpl
cld
rorl
not
stos
lret
les
fnstsw
aam
fs
loop
int3
push
test
loope
sahf
icebp
insl
dec
sbb
dec
cmpb
or
mov
in
push
sbb
scas
jb
das
cmp
mov
ljmp
aam
mov
dec
pop
mov
and
inc
test
push
ficomps
adc
pop
mov
leave
sbb
mov
mov
add
add
arpl
lods
loope
xor
adc
xchg
clc
jl
adc
push
and
xchg
andb
repz
mov
pushf
fsubrs
adc
fdivl
pushf
push
insb
jle
lcall
pop
notb
jae
repz
test
in
jo
in
nop
ds
bnd
test
cmpsb
in
cmp
or
pop
jp
cmp
loop
and
call
stos
in
je
ret
out
mov
pusha
test
cmp
in
cmpsb
adc
inc
xchg
push
pop
hlt
mov
iret
xorb
lea
cld
test
sub
into
ja
sbb
fsubrs
push
cwtl
aad
xor
jne
cmp
adc
sub
and
lcall
push
pop
jne
lcall
dec
fistpl
and
inc
fsubs
sub
lods
movsl
adc
mov
in
mov
xchg
mov
inc
fdivr
mov
inc
in
jg
sbb
xchg
cwtl
add
cltd
cltd
dec
add
sbb
and
push
or
sti
out
cmc
in
pop
lods
push
push
dec
push
or
das
sub
mov
shrl
inc
pop
out
pop
inc
mov
icebp
add
mov
cwtl
rcrb
add
inc
mov
push
inc
add
add
mov
jmp
push
fs
cmp
decl
add
mov
add
in
mov
inc
lret
adc
pusha
out
push
mov
fwait
sbb
jecxz
insb
inc
movsl
pop
mov
sbb
inc
sub
mov
in
jbe
cmp
js
lret
call
std
lret
push
add
cwtl
popa
in
addr16
hlt
xor
pusha
and
clc
add
movsb
sahf
sub
test
fists
faddl
push
icebp
fidivrl
push
out
adc
lods
popf
mov
inc
out
sub
jl
jmp
pop
or
xor
mov
imul
frstor
daa
mov
push
push
out
cmpxchg
dec
cli
ja
stos
pop
out
push
pop
into
ret
add
add
test
in
add
sbb
cmpsb
mov
stos
mov
js
js
adc
arpl
sbb
loop
mov
jle
adc
pop
scas
sbb
ret
xor
enter
ret
xchg
sub
dec
pop
and
adc
pop
cmpb
fnsave
push
stos
shr
stos
mov
shlb
dec
pop
vpunpckhqdq
iret
das
sub
inc
std
adc
imul
and
jb
cltd
rcll
push
jne
subb
cmp
or
in
fsub
xchg
lds
notb
and
dec
lds
out
icebp
mov
lods
xchg
mov
test
mov
dec
xor
xor
psadbw
xchg
pop
inc
push
adcb
enter
dec
ficoml
aaa
mov
lods
cmp
add
adc
les
sub
ret
cmp
shll
lahf
fwait
shl
outsl
jp
sarb
std
inc
in
test
ret
push
xchg
or
jb
dec
into
or
fmuls
sub
div
pop
push
cmc
sub
int
jns
fidivs
int3
mov
push
fs
inc
xchg
outsl
test
pop
jle
mov
push
jno
adcb
mov
and
popa
jge
lock
inc
rorl
jg
pop
xor
test
sbb
bnd
das
ret
and
and
push
scas
orb
loope
jne
outsl
xchg
adc
cmpb
subl
shr
pop
sbb
out
pop
jmp
negl
fwait
or
and
xor
outsb
test
mov
jecxz
mov
aam
je
cmp
xchg
jmp
pop
fisttps
shr
jb
xor
rcl
and
test
rcrl
mov
leave
inc
pusha
mov
fdivrs
out
rcrl
in
add
cmpsb
push
fwait
cmp
sbb
testl
sbb
cmp
test
test
shrl
in
pop
xor
aam
iret
push
arpl
shll
sbb
push
enter
push
fstps
roll
and
jo
xchg
mov
jmp
pop
sbbb
stos
std
je
je
fdivrl
xor
xchg
dec
jecxz
inc
mov
push
aas
imul
jo
pop
push
aad
pop
ret
xor
xor
imul
repnz
fldt
cmpsb
lds
pushf
repz
xchg
push
push
dec
xlat
data16
repnz
xchg
sbbl
xchg
outsl
rcl
stc
cli
dec
add
lcall
sbb
jmp
jno
mov
imul
and
div
add
loope
pop
int3
pop
les
pop
aad
aam
mov
leave
xor
xor
and
imul
cmpsb
das
fiadds
sub
jae
pop
fwait
arpl
xor
sbb
notb
ret
or
mov
push
pop
push
or
fcmovnb
cli
adc
dec
test
mov
js
movsb
mov
gs
mov
xchg
inc
sarl
gs
jg
ds
mov
jbe
dec
push
or
je
aaa
shlb
scas
jnp
outsl
mov
and
mov
pop
mov
inc
mov
int3
mov
out
xchg
outsb
xchg
icebp
pop
pop
cmp
or
pushf
es
pop
pop
gs
xchg
adc
cs
enter
dec
insl
xor
push
pop
xor
mov
jl
inc
lcall
fmuls
mov
pop
std
cld
pop
jp
pop
aam
int3
std
sbb
lods
xchg
imul
mov
push
addr16
repz
subl
pop
rcll
jg
fidivl
pop
dec
out
xorl
xchg
ret
imul
or
bound
lea
dec
pop
fsubs
cli
out
mov
or
std
addr16
jle
xchg
loope
in
push
push
aas
xchg
inc
std
mov
pop
xchg
sub
lods
or
pop
pushl
int3
ja
sub
mov
adc
xor
cmp
mov
mov
jns
add
adc
sub
ja
testb
lret
jl
adc
roll
das
outsb
es
and
sbb
add
fwait
xchg
jno
sahf
daa
lods
push
movsl
jle
inc
clc
mov
in
lret
mov
clc
pop
in
and
arpl
lcall
pop
sub
mov
cmp
add
mov
mov
ljmp
dec
cmp
xor
mov
movsl
stos
pop
xchg
lods
mov
movsb
shl
sub
push
jl
pop
push
into
or
and
mov
adc
ficompl
jmp
push
pop
inc
dec
daa
dec
cmp
lahf
arpl
std
lret
test
dec
xchg
pop
stc
mov
leave
adc
dec
sbb
mov
and
dec
scas
xchg
mov
dec
cmp
ret
xor
int3
mov
sub
jns
cld
or
flds
or
jb
and
dec
shl
pop
add
jb
aas
stos
mov
push
push
dec
fistps
xchg
stos
xorb
and
xchg
push
xchg
rorb
arpl
pop
sbb
jmp
js
push
out
mov
mov
pop
lds
jnp
in
jo
out
rorb
add
and
or
add
roll
daa
shr
ja
mov
xchg
shl
pop
and
add
fisubrl
cmp
mov
add
mov
sarb
fists
test
in
mov
int
xor
mov
fldt
push
aas
jae
and
mov
jmp
data16
cli
aaa
xchg
vmovntps
add
popw
pop
add
mov
ficoms
js
mov
out
xchg
bnd
or
ss
sub
lock
scas
hlt
jecxz
movsb
cli
nop
mov
fdivrl
bound
mov
push
xchg
clc
jl
into
lea
xchg
adc
xchg
lcall
lock
lods
loop
int
daa
mov
xor
or
ljmp
js
mov
add
push
int3
cmp
out
adc
mov
push
sbb
movsl
lret
sub
mov
insl
mov
mov
movsb
cmc
dec
inc
loopne
push
fcmovne
hlt
enter
pop
jns
mov
pop
xchg
cli
aas
pop
and
addr16
cltd
negb
cmp
cwtl
in
out
pusha
inc
xchg
adc
lods
inc
mov
xorl
pop
push
hlt
push
rcrl
outsl
mov
xchg
sub
cwtl
jp
negb
roll
lea
stos
xchg
mov
adc
mov
jge
enter
icebp
aam
adc
out
and
and
adc
sarb
mov
sbb
pop
imul
mov
in
add
and
aaa
sbb
cmpsb
in
in
fsubrp
fwait
cwtl
push
lret
mov
dec
xchg
cmp
pusha
pop
es
rorb
inc
int
js
ficompl
es
pop
flds
test
and
pop
aad
roll
in
mov
mov
sahf
lcall
sbb
jg
mov
dec
outsl
mov
jns
cmp
leave
add
sarb
jg
cwtl
sbb
rclb
enter
mov
aas
push
jmp
sbbl
dec
les
out
sub
cmp
mov
jle
mov
jecxz
inc
inc
sti
adc
cwtl
mov
sub
xor
inc
sbb
outsl
and
or
and
mov
xchg
sarb
xchg
pop
pop
push
mov
cs
lcall
rolb
ds
push
mov
jne
cmpsb
dec
jp
sar
cld
xchg
daa
enter
push
fsubrs
add
push
dec
pop
cmpsb
scas
add
pxor
ds
lret
imul
test
test
push
xchg
outsb
rcll
and
mov
cltd
pop
xor
and
dec
jnp
dec
and
lret
inc
and
loope
jne
ss
lahf
shlb
sbb
imulb
fwait
dec
popf
and
movsl
mov
inc
test
push
xchg
sarl
inc
in
mov
out
mov
in
sbb
push
or
das
orl
sbb
sbb
jle
mov
orl
cmpsb
setl
iret
pop
dec
gs
addl
or
push
ljmp
imul
dec
inc
push
out
aad
or
ret
and
inc
mov
ja
and
xlat
mov
les
testl
dec
roll
nop
jle
stc
dec
lea
mov
xchg
mov
lds
loope
test
outsb
push
ljmp
cmp
push
jl
out
cmp
loope
cmp
mov
fwait
sbb
and
cwtl
jno
sahf
xchg
aad
fstl
jmp
mov
cld
dec
imull
push
or
lret
xor
test
fcos
cmp
inc
sbb
iret
jnp
fstps
sahf
stos
adc
popa
std
mov
inc
jge
cmpsl
std
sub
test
icebp
js
and
mov
or
cmpsb
subl
and
pop
loopne
fcomps
in
add
inc
xchg
out
clc
out
outsl
pusha
push
out
dec
cs
int3
and
aam
mov
pop
bswap
cltd
mov
xchg
xchg
in
jle
push
popf
adc
int3
lret
push
sub
dec
ss
inc
jl
ds
add
lret
std
jne
mov
push
sub
ficoms
add
cmp
pop
inc
leave
push
std
pop
mov
sub
adc
xor
add
add
xor
lahf
and
ja
dec
sahf
fidivl
and
sbb
jecxz
mov
inc
or
fsts
mov
out
pop
adc
dec
sti
push
lods
mov
test
push
bnd
imulb
and
fisubrl
test
inc
or
mov
and
test
push
in
rcrl
scas
sti
shl
adcl
jbe
mov
psubsb
je
add
fiadds
sbb
addr16
insb
fs
xlat
xchg
xchg
pop
loope
fs
gs
test
jnp
push
sub
sbb
sbb
scas
jmp
jl
lods
out
or
ficoml
sti
adc
jns
ret
sahf
ret
or
mov
pop
push
xchg
and
js
add
push
in
xchg
lock
xor
testl
ret
cltd
mov
movsb
dec
cltd
xor
add
xchg
dec
xlat
and
pusha
les
push
push
add
jae
insl
and
pop
pusha
mov
mov
rorb
push
add
addr16
fwait
pop
dec
xor
sub
cmp
mov
mov
clc
mov
incb
flds
stc
icebp
sbbb
lcall
mov
out
repnz
in
or
adc
sub
cmp
mov
mov
repz
scas
push
out
mov
xchg
das
inc
loop
jbe
or
jle
subb
frstor
xor
dec
fildl
maskmovq
negl
xchg
pop
mov
xor
push
mov
mov
push
cmp
jns
and
xchg
lods
cld
je
xchg
jae
mov
lret
enter
mov
loopne
ljmp
mov
mov
jnp
sbb
push
mov
push
mov
mov
xlat
xchg
pop
xchg
mov
insb
sarl
inc
cli
stc
mov
inc
sbb
pop
or
adcb
ljmp
and
stos
aas
in
jnp
xchg
add
cmc
dec
out
mov
xorl
inc
mov
idivl
sbb
inc
jae
adc
test
std
fimuls
pop
lret
push
sahf
xor
sbb
dec
notl
or
xchg
negl
push
lods
subl
dec
pop
pop
mov
mov
stos
bound
mov
mov
in
and
pop
sub
push
xchg
int
jg
out
add
fidivs
cltd
mov
cmp
cs
mov
cli
js
pop
jbe
pop
test
cmp
fiadds
mov
shl
repz
outsb
sbb
in
push
and
out
lods
pop
scas
inc
pop
sub
jge
mov
es
lahf
in
jbe
xlat
xor
push
mov
dec
inc
test
pushf
dec
loop
lahf
test
jnp
push
dec
das
popa
ss
jmp
dec
sub
jo
mov
add
stos
cwtl
nop
je
push
dec
sub
shl
jne
sub
jg
lret
test
fmul
into
mov
cwtl
xor
mov
or
jns
sub
dec
xorl
std
cltd
sub
ficoms
jmp
mov
rcr
out
mov
rcll
pop
push
call
pushf
lea
inc
into
in
aas
jne
notl
enter
xchg
cmpsb
test
mov
lea
fwait
ret
mov
push
inc
adc
inc
fs
and
pop
cmpsb
inc
push
repnz
or
addb
cmp
jp
mov
adc
and
inc
or
nop
mov
mov
mov
inc
sbb
dec
xor
mov
pop
lds
inc
js
movsb
fwait
movsb
xchg
stos
sub
ja
mov
mov
daa
dec
jge
sbb
xchg
xchg
cmc
movsl
cmpb
pop
sbb
sbbl
cmp
bound
ret
je
xchg
jno
test
jbe
popf
cmpsl
in
test
xchg
movsl
sarl
aam
roll
mov
scas
jle
lret
imul
add
fst
mov
idivl
mov
pushf
mov
adc
ret
das
faddp
in
cmp
push
xchg
cmpl
jno
cmp
cmp
xor
and
mov
das
or
filds
into
je
fnsave
xor
out
or
es
jne
clc
sbb
pop
sub
cltd
cmp
rorb
inc
xchg
fadds
xchg
movsb
mov
incb
jnp
xor
mov
add
or
mov
push
lds
cmp
sahf
add
test
xchg
pop
dec
xlat
pop
mov
push
jbe
jecxz
ja
push
pop
stos
push
mov
sub
sbb
cmpsb
insl
xor
pop
cli
push
xchg
mov
pop
xchg
mov
dec
push
js
jle
test
ret
add
flds
inc
mov
mov
and
mov
add
in
fsubrl
jnp
sub
xchg
cld
sbb
stc
mov
sub
or
inc
xlat
mov
push
dec
jmp
xor
jl
jns
insb
cmp
subb
js
outsb
aas
js
lock
xchg
imul
hlt
adc
cmc
dec
rolb
cmp
sbb
insl
lret
push
sbb
adc
rcl
cmp
push
mov
leave
stc
jmp
into
and
mov
jnp
sbb
mov
add
push
fsubs
pop
rorb
and
inc
mov
dec
test
push
push
add
mov
testl
xchg
pmaxub
inc
and
rcll
sbbb
cmp
fcmove
xor
mov
push
addl
dec
mov
ss
sbb
add
loopne
cmp
mov
or
jecxz
mov
push
dec
inc
add
insb
pop
ds
fadd
dec
movsb
cli
mov
push
pop
lahf
mov
xor
jecxz
pop
xor
xor
ret
dec
xor
daa
inc
mov
aad
mov
adc
sub
fdivl
into
mov
rcll
xor
hlt
jno
lods
out
out
push
fwait
pop
push
push
lods
pop
lock
lods
outsl
fcompl
inc
fwait
cmp
jp
adc
sub
in
outsb
push
xchg
lods
inc
jne
arpl
sbb
sbb
inc
cmp
push
dec
or
sbb
push
cmp
lock
add
sbb
add
dec
and
adc
repz
xchg
inc
mov
movsl
mov
add
std
jae
test
sub
sub
fucom
addb
out
jno
dec
sub
nop
xor
xchg
adc
jne
cli
aam
cmpsb
mov
push
sub
lcall
iret
dec
or
mov
xchg
mov
pushf
push
cmp
cltd
inc
mov
test
int3
insb
repnz
in
sub
push
std
rol
jle
xlat
xchg
push
xchg
pop
insb
clc
xchg
shll
push
mov
sub
je
ficomps
std
repnz
pop
incb
cmpsb
popa
jnp
subb
data16
std
xlat
xchg
mov
inc
cmp
sti
out
cld
mov
lods
mov
and
dec
push
add
push
cmp
dec
hlt
out
ret
dec
negb
adc
push
sbb
repnz
adc
mov
js
mov
and
inc
test
jb
lret
inc
outsb
pop
popa
cld
mov
popl
xor
or
or
or
test
jns
sti
aas
mov
lcallw
push
mov
fucomip
sarb
mov
rorb
jecxz
add
lret
cmp
sub
repnz
jmp
icebp
jl
test
divb
adc
cmp
xorl
push
pop
lea
andl
jg
out
shlb
jg
out
inc
dec
push
rcll
mov
or
add
in
movsb
jecxz
jge
sub
mov
sbb
rorb
dec
jmp
scas
sar
mov
dec
and
adc
ss
lcall
cld
leave
inc
xlat
mov
xchg
fstl
cmp
mov
fcmovnb
jl
mov
jo
loope
lds
in
xlat
xchg
mov
push
pusha
add
int3
push
es
xor
jmp
enter
mov
mov
dec
in
bound
mov
and
pop
out
and
pop
testb
xchg
adcb
es
rorl
fisubl
jns
jle
add
repnz
std
cwtl
daa
loopne
lods
dec
dec
xlat
sbbb
sbb
push
jb
xchg
xchg
popf
and
mov
pop
xor
lods
xor
cli
les
or
sbb
sahf
adc
xchg
shlb
jb
adc
imulb
or
dec
cmp
rcll
jnp
rol
mov
push
or
imull
and
test
mov
or
loope
pusha
scas
mov
xor
mov
xchg
mov
out
mov
add
xchg
repnz
loope
out
cmpsb
andl
es
fwait
push
loopne
arpl
cmp
cmp
xor
aam
out
mov
testb
mov
ja
push
lock
cmp
dec
js
arpl
test
aam
imul
mull
loopne
movsb
lods
xlat
mov
and
ret
cmp
cmp
dec
pop
xchg
inc
jnp
cld
adc
ret
lods
inc
jp
mov
ret
insl
out
scas
mov
in
sub
mov
adc
mov
xor
aas
lcall
lock
cld
push
fsubrs
fs
push
xchg
jle
je
imul
inc
add
mov
stos
lret
pop
jne
pop
ret
sub
jne
mov
loope
jg
mov
pop
enter
stc
xchg
and
pop
inc
hlt
jg
adcb
pop
jns
pop
mov
pop
fists
arpl
or
lcall
mov
push
dec
mov
cmovg
sbb
arpl
jl
mov
movsb
and
test
mov
clc
or
xchg
add
jb
fcmovnb
test
pop
adc
sti
aam
xchg
into
ss
enter
shrb
aam
imull
scas
icebp
cmpsb
mov
or
pop
lds
imul
sbb
aaa
lcall
cmp
mov
xchg
mov
pop
or
adc
xor
dec
mov
js
mov
out
notl
xor
push
cmpsb
mov
icebp
cld
inc
xor
inc
xchg
xor
mov
jg
fisubl
add
sub
push
outsb
mov
sub
sub
lock
cli
xchg
and
pop
xorl
push
outsb
xor
or
push
add
scas
jecxz
inc
inc
pop
and
repnz
xchg
sbb
xchg
sbb
andb
xchg
cmp
cmp
int
psubb
ja
xor
jns
mov
sbb
test
add
xor
add
je
testb
lcall
dec
xchg
or
ret
inc
insb
dec
inc
or
pop
cmp
cmp
repz
xorl
pop
sti
call
lret
test
in
or
inc
lret
sbb
test
insb
add
push
xor
mov
or
dec
jge
pop
lock
dec
pop
faddp
rorl
clc
pop
test
and
fdivrp
inc
icebp
cmp
nop
ss
xchg
push
leave
mov
or
adc
jl
ds
dec
mov
test
xchg
jle
pop
adc
pop
mov
sub
sarl
jne
push
adc
incb
lea
test
or
push
test
sbbb
pop
dec
fsubs
andl
loop
out
mov
clc
mov
push
in
mov
fisubs
enter
roll
outsl
lock
in
pop
sub
das
in
push
jmp
ss
test
enter
mov
push
pop
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
and
sahf
mul
repz
je
inc
mov
mov
mov
and
jns
mov
mov
jno
push
sub
xlat
and
in
or
aaa
fxch
xchg
in
pop
xchg
jecxz
push
push
xchg
cmp
inc
cmc
push
jns
filds
inc
scas
push
xchg
mov
jnp
push
push
dec
mov
or
mov
cli
imul
cmp
out
mov
int3
and
pop
fimull
negb
enter
jno
cli
xchg
leave
sub
fwait
out
insl
mov
xor
jae
xor
clc
xchg
xchg
cmp
mov
mov
dec
notl
addl
movsl
movsl
leave
add
ret
mov
ljmp
frstor
enter
dec
ss
ss
insl
in
aam
push
movsb
dec
out
mov
ret
andnps
lret
das
add
fwait
pusha
pop
dec
cld
fdivrl
pop
sbb
dec
scas
test
bound
test
movsl
iret
adcl
mov
mov
pusha
in
and
cmpl
xchg
std
sub
mov
add
in
into
push
or
xchg
inc
sti
jns
xor
mov
in
leave
jecxz
add
into
jbe
insb
es
add
pop
and
lods
push
rolb
fs
jae
xor
sbb
cld
xchg
or
test
js
jo
icebp
ds
ss
xchg
pop
fwait
outsb
test
pop
jnp
les
dec
sahf
cmp
cltd
push
icebp
repz
scas
inc
pop
fisubl
incl
add
adc
dec
jge
aam
fldenv
sub
cmp
sbb
repnz
sarl
lods
fwait
daa
sti
fistpll
mov
outsb
dec
enter
orb
push
adc
popf
scas
xchg
jmp
xchg
pop
pop
arpl
add
mov
cwtl
and
ret
push
push
or
loope
push
sub
cmp
divl
and
mov
cmp
inc
jne
pop
mov
fdivl
adc
in
shll
lods
call
fildll
sbb
pop
pushf
jecxz
arpl
pop
shrl
pop
sbb
mov
mov
cmpsb
jb
out
mov
cmp
shlb
mov
call
mov
repz
test
je
cmc
in
jns
push
in
jne
inc
in
or
mov
aam
mov
inc
in
outsl
jne
dec
push
pop
jno
xor
insb
lret
jb
adc
in
lcall
ds
dec
sub
dec
dec
outsl
or
shr
ret
push
lods
push
out
inc
test
mov
add
adc
mov
inc
mov
xor
xchg
std
xor
mov
pop
inc
adc
arpl
test
lret
or
and
bound
fwait
cs
ja
or
fdivs
or
xor
cmpsb
pop
jle
mov
enter
push
lds
sub
cmp
sub
sarl
adc
shrl
cmp
sbb
inc
xor
cmp
imul
jge
mov
pop
jge
cwtl
in
xor
xor
jae
xchg
add
mov
cmpl
mov
push
loop
subb
sub
lods
push
mov
sub
and
in
pop
cmp
cmc
imul
lea
int
shrl
pop
push
xchg
jae
ret
mov
fwait
inc
xlat
mov
das
fs
jecxz
pop
add
icebp
xchg
push
inc
xor
add
lock
jp
pop
loop
in
jae
pop
mov
outsb
mov
gs
mov
xchg
jnp
scas
stos
icebp
mov
jge
cld
lds
fnstsw
pop
xor
adc
loope
cld
fistpll
push
popf
jecxz
mov
pop
vphaddbd
mov
mov
cs
ror
mov
popa
repnz
inc
repnz
nop
lods
lret
and
mov
ds
hlt
push
fldl
and
sbb
test
push
lock
sub
mov
sub
dec
push
mov
pop
pop
daa
in
push
leave
pop
xchg
stos
ljmp
sub
or
jp
push
sti
cwtl
dec
pop
jnp
mov
imul
or
fs
add
sbb
mov
int
pop
xchg
fcos
lea
jl
pop
mov
ret
sbb
mov
lea
jle
lods
add
fistps
lods
data16
and
jge
repz
sbb
add
mov
out
adc
xchg
aas
ret
jo
clc
das
push
xor
das
lds
inc
adc
shrl
out
adc
cmp
int3
add
xchg
adc
push
fdiv
es
mov
xor
xchg
lcall
fistpl
pop
adc
pop
pop
cmc
jmp
outsb
gs
jne
jg
cli
orb
das
orl
sbb
mov
xor
in
mov
push
push
leave
pop
test
add
mov
cmpsb
inc
int
out
aas
aam
push
je
loope
orb
inc
inc
fdecstp
clc
mov
pop
jg
sub
and
jne
enter
sbb
cld
popf
pop
in
arpl
int
lret
and
jmp
pushf
neg
add
adc
ljmp
cs
enter
aas
inc
jno
dec
xor
mov
movsl
jle
pop
fsts
ret
xchg
lret
shlb
adc
movsl
mov
popa
fucomip
fldlg2
and
cmc
fldenv
lock
push
out
mov
pushf
push
bound
mov
test
mov
test
frstor
icebp
pop
cvtps2pd
addr16
lods
xor
mov
mov
loop
fwait
cmp
shlb
inc
xchg
mov
inc
into
xchg
push
xchg
mov
adc
ljmp
pop
sahf
cmp
push
iret
ja
and
shll
xchg
ror
cmp
and
test
adc
dec
jl
push
dec
or
imul
mov
pop
push
pop
adc
lock
stos
imul
int3
push
orb
dec
cwtl
popa
gs
andl
jne
xchg
sarl
popa
jbe
sbb
fsubr
andb
xor
subl
sub
dec
mov
adc
or
pop
push
pop
fisttpll
add
mov
out
jns
add
ds
push
and
cmp
or
mov
into
push
fildl
xor
popf
lds
push
sub
jle
or
aad
fidivl
and
iret
sub
push
test
cmc
into
mov
das
add
push
das
aaa
les
fbstp
jg
sub
inc
jl
pop
into
or
out
xlat
mov
stos
mov
dec
stc
fldl
push
aad
in
fs
fstpl
rorb
repnz
test
ja
xor
leave
clc
mov
cwtl
ss
dec
mov
push
testb
fbstp
pusha
jle
and
lods
stc
nop
ss
rcl
cltd
test
jne
add
call
lock
data16
call
aam
xchg
xlat
mov
cmp
pop
xor
push
mov
sbb
cld
xor
and
daa
pop
and
xchg
hlt
xlat
inc
or
jle
and
fdivrl
jbe
lea
cmp
nop
xchg
scas
mov
push
ret
xor
xchg
push
addr16
xor
sti
and
sbb
out
dec
or
sbb
ret
xchg
les
std
mov
sub
xchg
scas
int3
test
das
outsl
add
stc
and
adc
scas
mov
int3
adc
pop
pop
imul
push
and
test
push
or
xchg
push
xchg
mov
jb
push
pop
cmc
dec
dec
sbb
inc
jno
lcall
movsl
andl
repz
outsl
add
movsb
rorl
ja
mov
in
inc
cmp
addb
out
test
dec
stos
or
jl
sbb
out
xor
in
sbb
scas
popf
les
jns
aad
mov
pop
add
ret
mov
aas
inc
pop
xor
xlat
arpl
pop
das
aad
jne
loopne
sub
pop
cmp
jecxz
mov
outsb
lcall
mov
pop
mov
cld
test
xchg
mov
inc
mov
cmc
cli
push
pop
jae
xor
pop
pusha
add
and
out
das
inc
test
test
lcall
fdivs
scas
clc
adc
pop
pop
sbb
push
cmc
lods
mov
cwtl
ja
or
cmc
stos
cmp
andl
mov
pop
dec
xlat
sbb
adc
mov
out
stc
mov
fbstp
mov
nop
call
lret
dec
sbb
pop
out
loopne
mov
push
sub
cmp
or
pop
iret
lret
outsl
xor
testl
sbb
fimull
mov
dec
cmpsl
into
mov
pop
mov
stos
sahf
push
outsl
cwtl
pop
js
cmp
std
xchg
push
test
push
out
in
sti
xor
xchg
jmp
jns
sbb
pop
shl
test
leave
xor
xor
mov
fisttpll
sbb
cmp
js
fwait
mov
call
ja
rclb
xchg
jno
lock
out
xchg
stos
sbb
pop
imul
mov
into
mov
inc
jmp
sub
jne
cwtl
orb
ret
push
sahf
xchg
data16
rorl
test
jmp
cmpsb
lods
sub
vmaskmovdqu
shl
lea
mov
ljmp
fsts
sub
xchg
movsl
mov
mov
jle
roll
jg
pop
jp
xor
dec
inc
rcl
stos
mov
push
xchg
outsb
aaa
jbe
cmp
jl
fdivrs
xor
push
push
mov
orb
test
cmc
call
mov
jb
push
into
addl
and
mov
outsl
push
push
adc
bound
cmp
push
and
mov
in
mov
inc
xchg
insb
jne
sti
into
popa
push
rcr
inc
dec
out
aad
cmp
sub
mov
cmpsl
in
jnp
mov
loopne
cmp
fs
fisttpll
adc
daa
dec
inc
xor
lcall
or
jns
dec
icebp
sbb
repz
xchg
out
fists
push
xchg
data16
sahf
xor
outsb
push
adc
int3
mov
sahf
mov
fadds
in
into
jmp
aad
push
jg
jp
out
scas
pop
jns
adc
inc
xchg
cmp
cmp
scas
mov
push
out
sbb
mov
push
loope
add
sub
add
inc
loop
lds
sar
cmc
sub
dec
lock
imul
hlt
loope
xchg
mov
or
mov
xor
sub
fcmove
loope
testl
leave
loope
cmc
pop
std
jne
out
loopne
mov
mov
sbb
add
std
jg
fwait
lret
xor
and
jne
pop
xor
ljmp
pop
xchg
repz
roll
jo
stos
hlt
dec
add
imul
dec
cmpsl
pop
push
arpl
xchg
fstps
and
lahf
nop
mov
push
mov
or
test
cmpsb
add
rorl
imul
jne
inc
and
mov
xchg
jbe
pop
dec
adc
aaa
jns
cltd
ljmp
pop
inc
lods
and
je
dec
xor
cld
shll
imul
movsb
mov
jns
faddl
popa
out
mov
es
arpl
maxps
push
arpl
jnp
mov
mov
into
out
adcl
cmp
fistl
xchg
inc
enter
leave
fs
ror
nop
xor
mov
xor
dec
inc
daa
into
outsb
cmc
add
loopne
push
adc
xor
or
loop
stc
pop
add
out
dec
dec
xlat
pop
push
adc
mov
and
add
in
add
adcl
imul
pop
imul
aam
mov
push
icebp
addl
dec
sub
adc
xchg
xchg
arpl
ss
jbe
data16
pop
cwtl
fs
xor
mov
mov
push
subb
iret
enter
in
cmp
sub
out
ret
outsb
jb
into
mov
mov
push
in
jno
ret
xchg
iret
jp
aad
imul
and
fstl
adc
int
mov
add
add
nop
pop
mov
inc
mov
jbe
rclb
popa
lcall
mov
cmpsb
mov
lret
inc
std
pop
sbb
mov
add
mov
adc
insl
mov
push
stos
loopne
fstl
push
mov
and
mov
movsb
mov
cmp
jle
ror
cmpsb
cmpsb
div
and
and
mov
hlt
pop
lcall
das
repnz
daa
cmp
jae
cmp
lea
jo
xor
dec
inc
pop
jmp
outsb
rcrb
mov
mov
sbb
xor
fcoms
jg
mov
jne
jns
or
and
cmp
mov
movhps
push
add
rcrb
nop
fs
mov
mov
inc
xchg
mov
mov
mov
jecxz
es
xor
push
popl
or
out
pop
outsl
arpl
or
xchg
sub
and
xchg
subl
jno
pop
mov
push
fildl
cmp
popa
mov
mov
sarb
push
mov
insb
add
xor
mov
gs
jb
repnz
dec
mov
mov
pop
add
movsb
leave
sbb
ljmp
es
stc
je
lea
ds
inc
pusha
or
or
cs
adc
xchg
jbe
xchg
mov
push
fdivl
scas
pop
addr16
add
push
inc
arpl
mov
sbb
xor
lahf
mov
jne
into
sbb
mov
cltd
sbb
mov
pop
xchg
lods
inc
lds
dec
les
scas
dec
fdivl
xor
cmp
mov
es
push
outsl
adc
xchg
arpl
popf
add
or
mov
lods
jge
fs
lds
mov
test
push
adc
xchg
xchg
sub
enter
push
leave
adc
inc
scas
cmp
add
imul
imul
inc
inc
and
ljmp
addr16
or
aaa
lock
stc
mov
mov
add
fwait
mov
mov
xchg
jns
adc
push
add
ss
mov
jl
lret
xor
jg
mov
or
loopne
or
dec
aad
mov
push
inc
idiv
sbb
repnz
inc
xor
imul
ljmp
je
movsl
mov
or
je
and
fbstp
jle
xor
sbbb
aas
test
scas
xchg
xlat
sbb
adc
fidivrl
lret
aad
js
test
leave
mov
add
mov
out
add
dec
inc
xchg
xor
inc
xor
lahf
addr16
mov
sti
pop
aad
pushw
pop
insl
int3
aam
shll
pusha
gs
ret
xchg
popf
adc
jge
loop
adc
add
lret
mov
xchg
sbb
js
jp
loop
iret
decb
sub
adc
mov
push
mov
mov
sub
pop
dec
in
aaa
pop
imul
sbb
dec
dec
push
jle
pop
xchg
dec
mov
jbe
dec
iret
pop
xchg
jo
dec
nop
dec
push
lds
call
int3
or
aaa
rorl
xchg
sub
imul
stos
mov
lcall
lcall
cwtl
sub
xchg
cmp
mov
fucomp
std
scas
mov
ret
inc
jp
inc
dec
push
push
rolb
rcr
push
int
or
test
xor
push
sbb
xor
fwait
mov
add
ja
push
shrl
imul
inc
inc
stos
pop
pop
push
mov
loop
sbb
jmp
sahf
sub
testb
mov
popl
pop
je
je
aad
es
js
mov
mov
jmp
inc
aam
clc
push
divl
es
mov
lret
mov
rcll
push
cmp
mov
scas
jl
insb
loop
lock
jae
call
push
in
ss
insb
addb
scas
sbb
mov
es
sbb
pop
in
in
mov
cltd
cmp
sbb
mov
push
ss
adc
bound
ficomps
popf
imul
call
iret
addr16
ja
jae
cmp
mov
and
pushf
mov
rcll
xchg
inc
push
sbb
fcomi
sti
mov
mov
ficoms
adc
jecxz
adc
imul
arpl
xor
jmp
mov
pmaxub
dec
iret
call
fwait
addr16
jnp
inc
aam
je
call
int
pop
inc
outsl
cmp
xchg
or
movsb
pop
mov
add
sbb
dec
movsl
jno
push
loopne
push
pop
cmp
lfs
ja
xor
aam
int
jne
mov
sbb
cmp
out
mov
movaps
rcl
pop
mov
mov
lods
and
dec
in
push
xchg
adc
adc
fsts
not
in
scas
fnstcw
test
test
aam
cmc
enter
sub
inc
ds
and
pushf
jle
push
mov
es
stos
pop
jo
pushf
xor
ret
jne
fnstcw
mov
imul
data16
jge
repz
jbe
xchg
out
and
fdivrl
cli
push
loope
ret
outsl
adc
pop
sub
sub
dec
insl
call
out
in
xchg
push
cli
and
push
pop
lret
xor
repz
cltd
xchg
je
hlt
std
push
adc
add
inc
mov
mov
add
in
roll
outsb
dec
and
push
lds
cs
or
sub
sub
jl
insb
or
repz
dec
dec
mov
in
test
lret
xorb
psubsb
and
lods
cmpsl
lock
jno
js
and
fmuls
outsb
fimull
mov
imul
push
je
dec
mov
jecxz
insb
and
xor
fisubl
hlt
pop
loopne
jge
in
xor
into
mov
push
fildl
negl
test
je
xor
out
iret
jge
rorl
jp
test
dec
dec
mov
in
leave
icebp
fs
fldenv
push
push
xchg
mov
cmp
push
xchg
jns
mov
pcmpgtd
out
jmp
ret
pop
inc
outsl
and
and
icebp
pushf
mov
lods
mov
insl
sub
mov
sahf
nop
arpl
test
inc
push
outsb
pop
imul
test
sub
fadds
push
repz
scas
scas
cld
ja
jae
inc
inc
push
mov
loopne
insl
sub
movsl
or
push
loope
fsubrl
dec
xor
aaa
mov
iret
mov
repz
addr16
push
jmp
push
in
push
mov
jbe
lock
sub
lds
insl
mov
cmc
mov
sbb
dec
sbb
add
inc
lods
imul
hlt
scas
pop
dec
sbb
addb
out
je
sub
jb
jbe
stc
fdivs
push
dec
test
icebp
movsl
adc
push
cmpsl
xchg
adc
push
mov
addr16
xor
shr
and
popf
sub
push
add
into
jle
fdivs
and
cmpsb
jge
ljmp
mov
add
mov
pop
cmpsb
cmp
jmp
sub
or
ret
movsb
jp
xor
inc
cmp
and
lret
inc
pop
int3
lea
and
adc
push
incb
cmp
push
loopne
bound
jge
pop
dec
push
outsl
in
cmpsb
push
pushf
les
inc
dec
cmc
das
mov
addr16
push
ljmp
xchg
push
cmpsb
orb
int
mul
or
addr16
ss
cmp
sbb
mov
jno
fiadds
xor
or
fidivl
jmp
or
push
popa
and
int
std
xor
shlb
hlt
pusha
mov
add
stos
loop
mov
aad
fdivl
test
cmpsl
out
xchg
push
sbb
imul
add
icebp
jbe
shll
loope
inc
sbb
jbe
test
inc
mov
test
ficompl
add
js
mov
pop
ficomps
aad
ret
sub
mov
cmpsb
dec
lea
lret
ljmpw
adc
lods
xlat
sahf
mov
not
verw
push
push
and
jecxz
mov
fcmovu
pop
cmp
and
inc
nop
mov
mov
pop
cmc
xchg
mov
les
movsb
pop
mov
add
andb
into
jne
pop
or
xor
jp
push
pop
xchg
insl
xchg
notb
dec
mov
bound
pop
and
fsts
or
pop
arpl
mov
std
out
fistpll
sub
gs
movsb
in
sub
leave
movsb
sub
xchg
xchg
fisttpl
movsl
incl
dec
mov
fiadds
lcall
inc
mov
sub
or
int3
sarb
cwtl
jne
adc
jp
adc
andb
mov
daa
out
push
add
or
push
xchg
add
cld
dec
mov
dec
jle
pop
dec
xorb
icebp
in
andb
subb
call
loopne
js
or
pop
lcall
outsb
xor
add
inc
cmp
push
xchg
mov
xor
outsl
jb
mov
xchg
das
and
in
data16
arpl
sub
xor
pop
and
sarl
iret
lret
jns
loopne
dec
cmp
lea
cli
xchg
mov
or
jbe
push
out
push
je
push
mov
push
das
jg
fisubrs
fsubr
mov
jle
in
xlat
cmp
mov
fnstcw
lods
cmp
jmp
mov
in
jb
ret
push
add
jle
push
cmp
lds
add
xor
jnp
push
pop
mov
cmp
addr16
pop
shlb
xor
adcl
leave
sub
sub
repnz
jae
repnz
nopl
pusha
mov
pop
cmp
push
mov
insl
dec
jnp
stc
loop
cmp
hlt
and
inc
sub
push
pop
jb
lret
sub
lcall
mov
dec
or
push
mov
lret
in
mov
and
mov
add
int
push
mulw
sub
rclb
add
repnz
hlt
test
xchg
jae
or
dec
xor
mov
mov
les
jbe
sti
jnp
and
mov
jmp
aaa
call
mov
push
les
sahf
faddp
fwait
mov
sbb
sbb
scas
mov
and
and
aad
aaa
sti
xor
out
or
js
outsl
repnz
jnp
and
test
jg
pop
mov
sub
lret
cmc
mov
das
dec
outsb
and
xorl
lret
add
mov
imul
jae
outsb
xchg
call
dec
xchg
fidivl
sub
cmp
xlat
std
xlat
js
or
inc
push
xchg
push
or
ret
dec
push
sar
push
adc
adc
sub
mov
loop
loopne
mov
outsb
xor
daa
pusha
imul
stos
repz
xor
sbbb
mov
or
call
add
mov
push
icebp
jle
imul
ja
fisttpll
jb
ret
adc
in
add
jmp
push
imul
in
mov
mov
dec
ret
pushw
cmpsb
sbbb
lock
mov
out
add
mov
bound
outsl
insb
call
int
or
inc
inc
fnstsw
xchg
mov
lcall
sub
imul
ret
mov
test
xchg
jecxz
jmp
pop
adc
xchg
fwait
into
xchg
and
sbb
jns,pt
pop
and
repnz
xchg
jne
and
mov
repnz
ret
stc
loope
ds
in
and
adc
and
jbe
es
dec
aaa
push
sbbb
xchg
jle
imul
sbb
jmp
cmp
xor
shrb
or
xchg
es
and
test
add
and
mov
shlb
outsb
add
aam
shlb
jmp
sti
fisubs
add
sub
cwtl
test
cmpsl
inc
and
cmp
push
adc
sbb
add
xor
pusha
mov
xchg
or
xchg
dec
jne
shll
dec
lods
push
stc
rcll
inc
pop
movsl
push
call
mov
jle
or
imul
push
outsb
enter
adc
popa
cmc
dec
and
mov
pop
scas
add
test
cmp
sbb
dec
pop
cmpsb
ret
push
das
mov
adc
jns
orb
and
nop
dec
lods
adc
push
rolb
mov
dec
or
mov
xchg
jbe
sbb
push
fcmovne
mov
les
mov
in
clc
nop
gs
or
mov
ret
jge
push
jl
xchg
push
add
in
dec
scas
lods
outsl
and
stc
mov
sub
mov
fildll
mov
leave
shlb
call
imul
int
fsubrl
mov
mov
mov
jnp
mov
test
adc
and
dec
outsl
in
push
data16
mov
jl
sub
and
aad
int
in
fbstp
push
jge
loopne
lcall
jb
enter
cmc
stos
adc
shlb
int
les
fbld
lret
cmp
imul
sbb
mov
cld
mov
adcl
outsl
jb
jl
iret
call
mov
push
lea
push
cwtl
into
std
mov
aam
xchg
and
sbb
xor
lret
in
mov
sbb
dec
loopne
out
mov
or
add
addr16
aad
sbb
pop
push
mov
and
mov
pusha
jge
lahf
loopne
loop
dec
mov
push
cs
repz
sub
mov
repz
addr16
cs
popf
mov
ret
sbb
or
fs
stos
and
mov
add
iret
xchg
or
shll
jg
sbb
stos
adc
xchg
push
cmp
push
and
cs
add
imul
les
mov
test
sbb
pop
cmp
mov
pop
ror
and
xchg
jae
lret
test
sbb
sub
cmp
and
out
movsl
push
pushf
xchg
gs
pushf
test
or
pop
out
in
stos
push
push
mov
pop
hlt
dec
mov
dec
sbb
jno
inc
stos
in
sbbl
insb
scas
cli
inc
adc
addr16
push
sub
fstpt
xor
mov
cmc
in
mov
or
data16
mov
xor
push
out
or
or
lret
sbb
xchg
fcmovbe
iret
add
test
cmp
jo
je
pop
or
sbb
push
loopne
adc
rcr
jmp
xor
ja
sub
aad
push
cs
or
xor
sahf
inc
push
shlb
pop
adc
mov
jg
pop
mov
fidivrl
sbb
in
dec
test
mov
sub
or
inc
mov
mov
cmp
cmp
aaa
adc
clc
or
pop
dec
dec
xor
mov
push
xchg
fsts
in
cmp
ss
testb
or
mov
inc
in
mov
push
clc
sti
test
dec
pop
je
mov
cli
xchg
pop
pop
sub
mov
xchg
xor
clc
or
loope
xchg
cmp
mov
push
mov
hlt
push
in
mov
addr16
inc
push
mov
test
test
dec
aad
bswap
das
lahf
sub
pop
add
sbb
cwtl
cmp
push
and
add
lea
inc
jne
push
movsb
test
sti
push
mov
jle
sbb
insl
shr
pop
pop
cmc
mov
mov
out
pop
adc
dec
sub
mov
or
jle
lods
out
aam
and
fbstp
jmp
imul
std
popf
ljmp
cli
and
lock
lcall
lea
cs
mov
pushl
ret
jbe
insl
mov
sbb
aas
lock
call
cmp
enter
test
inc
mov
rclb
fisubl
fcmovb
sbb
int
pop
jno
pop
add
insb
pop
pop
push
fdivrs
sbb
imul
jmp
in
pop
lcall
and
jle
or
xchg
and
inc
rcll
pop
inc
jne
and
push
add
js
inc
xchg
inc
fistpl
inc
pop
iret
in
inc
ret
xor
imul
mov
mov
pop
fwait
imul
repnz
mov
and
and
xchg
insb
in
push
in
mov
mov
cmp
mov
mov
jmp
aam
out
pop
pusha
roll
xor
xor
add
loope
and
pop
and
mov
aaa
leave
inc
push
lea
xchg
pop
ja
sub
xor
adc
push
pop
pop
daa
mov
jp
and
push
and
or
bound
decl
xchg
inc
inc
xchg
movsb
in
sub
xchg
leave
dec
data16
imul
jne
push
sbb
sbb
popf
in
mov
mov
repz
in
shrl
movsl
out
jle
mov
pop
xor
sbb
and
stos
lcall
add
mov
orl
pop
jne
inc
lds
cmp
fdivs
add
hlt
add
pop
test
cmc
fs
push
push
scas
and
push
xor
loopne
scas
cmp
lock
sub
addl
rol
fldl
das
mov
stos
movsb
icebp
pop
xchg
mov
notb
stos
sti
out
repnz
add
out
push
imull
push
push
push
mov
pop
iret
mov
push
movsb
or
push
push
sub
scas
push
lcall
fmuls
cmp
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
pop
add
jae
jnp
pushf
jnp
scas
add
xchg
mov
in
fsubs
xor
xchg
and
fwait
push
clc
jl
xor
mov
add
mov
add
sbb
and
adc
pop
hlt
sti
shrb
add
jecxz
jg
insl
xor
xor
cmp
xchg
scas
jp
in
sbb
adcb
outsb
xor
shll
xor
cmp
lods
lret
fisubs
cmpl
jg
cmp
daa
fisttps
inc
movd
sub
jmp
imul
mov
stc
imul
orl
insl
push
in
mov
int3
cmpsl
pushf
rorl
pop
lret
mov
jo
cld
in
scas
inc
add
int3
cmc
in
rclb
or
loop
popa
mov
push
xchg
pusha
and
fs
pop
call
dec
xchg
ret
loope
in
pop
add
pop
push
int
ljmp
mov
loope
dec
into
and
nop
jne
add
mov
outsl
pmulhuw
or
cmp
enter
aas
fcompl
icebp
cmp
aam
jns
fadd
sbb
mov
iret
js
or
pop
mov
dec
mov
add
dec
lods
hlt
and
sbb
rcll
aam
or
mov
or
out
or
roll
mov
iret
test
add
push
insl
jp
out
arpl
fadd
cmpsl
push
mov
cmc
sar
xchg
cmp
mov
outsl
sbb
cld
push
mov
adc
jp
pop
jmp
push
pop
jae
jnp
dec
add
test
xchg
sbb
lahf
sub
fnstsw
xchg
lods
sub
shll
xchg
bound
sbb
dec
das
jnp
mov
imul
pop
fcompl
movb
adc
popl
out
dec
test
xchg
mov
lods
mov
jbe
mov
sbb
mov
leave
imul
addb
push
add
out
or
xlat
push
adc
ss
jnp
cmp
xchg
ret
jecxz
insb
iret
or
inc
mov
mov
call
sti
mov
push
push
fsubs
sahf
push
insb
mov
pop
fs
push
jbe
loopne
xrelease
sbb
or
mov
xor
addl
hlt
mov
leave
lret
push
lahf
pusha
out
out
inc
fsub
mov
and
pushf
adc
cmp
inc
test
push
int3
fiadds
pop
pop
mov
and
out
clc
imul
mov
jno
in
jnp
xor
sbb
popf
push
les
add
push
add
sbb
jecxz
push
adc
fwait
bound
lcall
mov
pop
add
pop
jg
sbb
notb
loopne
sub
int3
pop
push
js
rorb
pop
cs
jle
sbb
ret
leave
jp
inc
in
movsl
xchg
cmp
popf
push
mov
pop
sbb
pop
xor
sub
stos
adc
ret
cld
xchg
sti
and
mov
cmpsl
cmpl
stos
jne
test
mov
aaa
aam
jno
roll
mov
movsb
fbstp
or
les
xchg
out
mov
movsb
dec
testl
movsl
mov
inc
cmp
das
cmp
xchg
xor
mov
jl
test
inc
jp
cmpb
push
adc
xchg
fcmovnu
sbb
adc
stc
sbb
mov
loop
imul
leave
sub
xor
inc
loope
jae
shll
jnp
push
mov
aam
loop
add
lahf
bnd
or
adc
adc
fcoml
orl
sub
js
add
stc
adc
mov
flds
lahf
or
movsb
jecxz
inc
loop
int
or
cld
out
pop
test
jecxz
ljmp
inc
cld
sbbb
orb
in
inc
adc
das
dec
test
add
push
dec
lahf
cmc
and
mov
sbb
in
mov
data16
test
popa
dec
add
cmp
cmp
add
adc
lret
rcr
add
cs
pop
in
xchg
xchg
clc
jg
adc
out
or
inc
in
shlb
and
xor
inc
mov
mov
sbb
test
hlt
ds
movsb
sti
lret
inc
jle
ljmp
lahf
dec
insb
or
movsl
cmovle
mov
inc
jb
xor
ja
aas
push
add
adc
xlat
lcall
mov
int
inc
mov
fucomi
add
jbe
adc
xchg
jl
xchg
stc
push
jnp
imulb
lods
adc
shrb
add
mov
sub
push
mov
xor
and
fsubrs
leave
aaa
orb
sub
fdivrp
jle
pop
shl
scas
and
dec
sub
xchg
mov
cmpsl
sbb
dec
adc
cwtl
test
push
mov
and
ss
leave
push
ret
imul
xor
lret
cmc
loop
mov
repz
push
jg
jle
jecxz
ljmp
les
shlb
jb
stos
clc
std
sub
stc
cs
fbld
cmp
pop
stos
stc
insl
das
lds
adc
sbb
iret
pop
or
push
aaa
jns
out
push
cmp
divl
test
jnp
sbb
pop
add
adc
xlat
jle
and
jo
pop
jo
shrl
icebp
jp
inc
stos
fsubrp
inc
adc
stos
push
xor
xchg
lds
into
out
add
inc
mov
add
lahf
sbb
imul
cmp
lret
das
and
mov
mov
cwtl
add
ds
fdivrl
adc
out
cmp
ficomps
xchg
shrl
and
pop
lahf
push
mov
cmpsl
notl
mov
adc
jae
int3
adc
das
cltd
negb
cwtl
xor
aam
push
pusha
rcll
mov
out
pop
aam
js
fistl
cmpsb
dec
ds
das
data16
mov
sbb
push
ljmp
rcll
push
lods
scas
repz
jbe
mov
cmpsb
sbb
jle
add
push
out
push
pop
into
fisubrs
or
xchg
fldl
aaa
xor
push
lcall
xchg
lods
sub
outsl
pop
sbbb
cmpsb
mov
and
test
mov
pop
icebp
pusha
push
pop
mov
xor
fiaddl
adc
mov
mov
dec
data16
xchg
es
out
xchg
ficoml
xor
aam
inc
mov
jno
movb
add
sub
ret
mov
xchg
jle
mov
add
jl
pop
loope
mov
adc
lea
rcrb
jbe
xchg
adc
add
or
mov
js
lock
test
fimuls
cmp
mov
pop
jno
inc
rcll
repz
sti
sub
iret
rorl
xlat
aas
repnz
out
jle
lret
out
add
mov
lods
hlt
mov
ror
mov
xor
and
bound
das
bound
inc
movsl
inc
cli
gs
xchg
outsb
insb
pop
inc
repz
fldt
inc
mov
mov
rorb
int3
inc
mov
loope
dec
imul
add
and
int3
test
sti
jecxz
pushf
or
inc
idivl
sbb
or
dec
jmp
inc
push
rclb
sbb
loopne
shl
mov
add
push
jbe
sti
mov
pop
sbb
adc
jo
pop
and
ss
clc
mov
stc
mov
pushf
inc
sbb
xchg
pop
and
jno
pop
lcall
imul
cmp
test
outsb
inc
nop
loope
sarb
ss
cltd
lretw
mov
cmp
lods
cs
ds
loopne
aas
sbb
imul
push
inc
orb
jb
pop
pop
inc
movsl
in
stos
fucompp
or
xchg
dec
aad
push
adc
loop
js
jle
xor
cmp
cmc
jp
lret
pop
add
xchg
mov
adc
jb
dec
loope
dec
ljmp
inc
call
loopne
out
xor
shrl
aaa
outsb
out
jne
xchg
cmp
incl
lods
adc
mov
add
jmp
mov
xchg
xchg
notb
mov
mov
adc
cmp
andl
add
push
ret
push
adc
push
mov
xor
insl
ljmp
rorb
mov
incb
inc
test
sub
shll
pop
sbb
dec
arpl
push
mov
std
jp
insb
xor
mov
lcall
sbb
xchg
lcall
arpl
mov
dec
lcall
sbb
mov
movsl
lods
xchg
push
sbbb
add
mov
xlat
sbb
test
or
pop
insb
in
aad
fwait
lods
mov
pop
iret
inc
add
sbb
mov
pop
add
int
roll
hlt
dec
lods
dec
mov
fstpl
mov
scas
lds
into
sbb
aas
rorl
sbb
mov
cmpsb
pop
or
push
cli
sub
and
fnsave
cmp
cmp
rcl
ljmp
inc
jae
out
push
lahf
out
xchg
inc
pop
and
add
arpl
inc
test
fiadds
xor
xor
mov
or
adc
pop
pop
repnz
and
mov
dec
stos
iret
bound
lahf
xor
jae
cmc
sub
movsl
pop
xchg
fsubs
sbb
cmp
cmp
clc
jl
xchg
sbb
sarb
fisubrl
or
mov
hlt
ret
pop
mov
pop
jecxz
js
mov
scas
cmp
icebp
push
jecxz
jmp
mov
mov
xor
int3
adc
adc
dec
mov
adc
pop
jne
ja
mov
jmp
sbb
lcall
mov
dec
and
and
add
aas
addl
pop
mov
xchg
mov
cmp
lret
inc
rcll
mov
pop
out
iret
add
fwait
imul
and
test
push
insl
movsb
inc
ljmp
xchg
mov
aaa
movsb
xor
xchg
in
es
lods
xor
inc
sub
shlb
and
mov
mov
sarl
dec
mov
sub
dec
pushf
nop
hlt
fcomp
clc
pop
loop
cli
xchg
cs
roll
aam
push
mov
jecxz
and
sub
test
mov
push
enter
cmp
daa
les
aas
mov
add
xor
mov
inc
dec
jne
push
push
adc
inc
jge
adc
mov
cwtl
call
push
xor
xchg
adc
repnz
sbb
aas
push
mov
test
adc
dec
push
call
lods
jns
mov
lock
sarl
sub
push
addr16
dec
xor
inc
push
movsb
xchg
xlat
test
adc
mov
incb
cmp
cmc
sbb
shll
jbe
clc
xchg
sub
add
fbld
popa
or
mov
jg
fsubrs
mov
xchg
dec
dec
ja
xor
jo
mov
aaa
sar
dec
mov
xor
shrl
xchg
sbb
popf
mov
out
inc
cmpsl
into
mov
inc
mov
jmp
sbb
lahf
lret
adc
aas
ds
notb
fbstp
outsb
pop
das
adc
popa
and
rclb
stc
sub
fiadds
push
cwtl
mov
in
lahf
or
push
ljmp
call
cmp
ljmp
pop
js
bound
sbb
movsb
mov
dec
mov
pop
shrl
ljmp
out
xchg
ja
xchg
enter
hlt
pop
adc
pusha
pop
pop
pop
call
jae
pop
stos
adc
inc
enter
or
testb
popf
insb
mov
bound
push
sbb
repnz
bound
int3
lret
dec
cli
rclb
out
cmpsb
push
mov
or
mov
rcll
mov
sub
inc
das
push
in
cmpl
sbb
lahf
add
jp
fsubrl
mov
pop
dec
jns
or
popa
inc
pop
push
cmp
inc
stos
mul
aas
mov
mov
ds
ret
cmpsl
dec
jmp
flds
loopne
and
pop
pop
test
leave
fists
inc
xchg
xchg
xchg
inc
icebp
ja
sahf
jp
fildll
call
popl
pop
arpl
xlat
mov
je
mov
jo
mov
cltd
jp
div
add
gs
cmc
call
dec
sbb
jl
outsb
sub
or
lea
dec
add
ficoms
jns
out
imul
lret
jno
and
popf
das
stos
repz
push
jo
xchg
int3
into
mov
int3
fcomp
je
or
mov
in
clc
bound
lods
fldcw
sahf
test
add
dec
mov
hlt
ss
sub
dec
xchg
fwait
jae
lcall
pop
orl
add
inc
outsl
lea
pop
cmpsl
rcll
inc
mov
add
ret
push
mov
lcall
icebp
xor
loope
insb
mov
fstl
fistps
clc
stc
adc
insl
les
xchg
jo
xchg
jmp
cmp
mov
cmp
mov
pop
in
mov
xchg
xchg
pop
insl
pop
cmp
cmpsl
lcall
add
push
test
cmpsl
lods
mov
add
ss
lock
jecxz
std
add
adc
xor
push
xchg
add
dec
test
mov
mov
cmc
lods
jno
loopne
sbb
test
cltd
test
ds
lock
jp
div
mov
xlat
loop
push
xchg
leave
inc
repnz
adc
popa
mov
int3
daa
pop
xor
lds
std
xchg
xor
jp
fwait
rcrb
out
xor
adc
mov
xor
std
xor
sub
inc
cmpsb
cmp
sub
push
mov
and
cli
xlat
stos
xchg
mov
ret
dec
dec
lret
mov
movsb
jg
repz
sub
jo
arpl
sub
imul
incl
ljmp
out
cmp
out
jae
iret
mov
incl
adc
inc
stos
cli
mov
mov
sbb
xorl
sbbb
and
scas
sub
int3
push
stc
jl
scas
out
dec
stos
negb
cmpsb
gs
cmp
and
scas
leave
and
sahf
push
pop
bound
sbb
fistl
mov
mov
int
push
addl
and
movsb
jg
mov
inc
lahf
inc
mov
inc
jbe
ljmp
or
mov
add
push
in
sub
mov
jmp
ljmp
xchg
repz
lcall
idivb
mov
movsb
aas
lahf
sub
int
mov
mov
pop
sub
mov
dec
xchg
in
inc
cltd
inc
insb
push
mov
shl
test
jmp
xchg
loope
cmpps
lods
add
cs
jbe
add
inc
dec
mov
mov
mov
pop
dec
or
jne
jmp
and
or
adc
mov
clc
pop
jg
xchg
xchg
ljmp
inc
fcomp
push
in
jb
jbe
mov
xchg
je
ret
xchg
ja
sub
jge
pop
aaa
adc
imull
mov
cmc
or
shl
mov
mov
xchg
andb
jecxz
js
sub
pop
imul
mov
sbb
jmp
add
les
or
jnp
fmulp
push
sub
loop
nop
lds
add
mov
inc
dec
addl
inc
jnp
mov
cmpb
aaa
out
mov
gs
xchg
or
into
cs
sbb
js
div
int3
cmp
and
xor
pop
test
popf
cmpsl
xor
xchg
dec
push
mov
sbb
sub
push
add
pusha
scas
cmp
scas
test
pop
inc
and
or
mov
jle
mov
iret
push
mov
repnz
in
jae
xchg
pop
inc
xchg
hlt
rcrb
test
test
repz
xchg
xchg
adc
add
int
cmp
inc
jnp
js
sbb
bound
pop
outsl
mov
push
or
jecxz
mov
movsb
mov
mov
into
sub
or
xor
lods
call
dec
fcmovu
sti
inc
pop
and
mov
xor
pop
sbb
ja
mov
jns
sbb
in
ret
xchg
enter
or
adc
pop
scas
shrb
out
add
enter
das
dec
sub
add
test
jb
mov
sub
movsb
call
cmpsb
jmp
cmpb
imul
jnp
xor
stos
add
js
icebp
shrl
std
ja
dec
inc
inc
test
inc
aad
hlt
int
scas
stos
pop
mov
mov
bound
push
xchg
and
pop
dec
adc
xchg
fwait
dec
pop
std
int3
xchg
or
nop
and
es
lahf
add
stc
jl
add
inc
fnstsw
jno
mov
pop
cmpsb
outsl
jle
mov
cmp
aam
int3
fs
test
insb
insb
mov
sbb
ss
sub
sub
add
cmpsl
mov
test
add
sub
push
add
or
sub
jae
rolb
dec
pop
push
loop
fdivrp
mov
and
bound
or
and
mov
adc
jg
mov
push
aad
or
ret
sub
decl
jno
dec
push
dec
cmp
ss
jecxz
sub
mov
push
mov
movb
mov
add
lock
idivb
adc
in
test
or
inc
jge
call
adc
iret
aas
nop
xchg
xor
mov
mov
sbb
scas
loop
push
and
xor
js
inc
fsts
cli
adc
fwait
mov
dec
imul
pusha
and
add
or
stc
ds
sbb
sub
cld
sahf
or
pop
ficoms
jb
or
call
inc
testl
scas
ds
into
out
movsl
and
jb
mov
jle
adc
pop
cmpsb
mov
and
xchg
push
movaps
mov
xchg
icebp
mov
rcrb
loopne
dec
hlt
out
ret
sub
jne
adc
in
push
sub
dec
stos
dec
jp
in
jnp
inc
inc
jg
das
cmp
rcrl
adc
pop
cwtl
jnp
pop
sahf
add
inc
inc
or
icebp
mov
lock
dec
fldl
cld
adc
sub
fcoms
xlat
add
push
cmpb
and
aam
aaa
mov
xor
adc
lcall
mov
flds
xchg
jns
mov
sub
leave
in
jecxz
mov
scas
cmp
adc
inc
enter
add
mov
pop
sbb
and
push
movsb
inc
lods
mov
sahf
lds
mov
adc
add
lahf
inc
dec
scas
mov
les
std
mov
jecxz
cmp
dec
je
adc
pop
ret
push
arpl
out
xor
add
mov
fimull
jae
mov
dec
mov
jg
nop
sbb
arpl
push
daa
setl
lcall
or
in
adc
cmp
lods
fwait
test
mov
and
nop
aam
mov
rorl
xchg
mov
mov
inc
adc
or
push
push
test
pop
mov
ret
aas
pushf
xchg
insb
movsl
mov
jp
lcall
or
clc
xchg
mov
pusha
jecxz
dec
push
aaa
push
xchg
xor
ljmp
inc
fidivrs
and
push
or
outsb
sarl
cmp
ret
daa
sti
leave
xchg
push
ljmp
mov
or
push
dec
add
shrl
pusha
push
mov
dec
mov
or
ja
sub
cwtl
cmp
xor
gs
pop
mov
mov
scas
and
dec
gs
xor
stos
loop
pop
sbb
sub
jmp
inc
ret
sub
imul
mov
adc
mov
adc
in
xor
push
sbb
push
in
mov
icebp
xchg
addb
cmpsl
cli
pop
int
arpl
add
sahf
shrl
pop
mov
jg
ret
dec
cli
jg
jo
jecxz
mov
stos
mov
hlt
xchg
aad
push
subl
mov
fnsave
jg
mov
repz
fs
hlt
push
xor
jle
dec
imul
mov
push
mov
jae
push
jg
mov
adc
fiaddl
std
je
cld
mov
pop
mov
sbb
bswap
dec
lret
or
ss
sti
arpl
fstpl
mov
orl
sbbl
scas
dec
pop
mov
and
xor
lods
mov
pop
pop
clc
aas
cmpsl
xchg
ja
in
shl
lds
bound
push
mov
jbe
and
sahf
push
sbb
mov
and
xor
push
cmp
lods
loope
aas
cld
inc
push
push
adc
fcomps
pushf
pop
vmread
js
adc
inc
jbe
xor
push
lahf
and
sbb
xor
dec
mov
mov
sbb
aas
popf
mov
mov
mov
lods
jp
out
sbb
cmpsb
jnp
pop
notb
call
shll
insl
movsl
and
mov
in
jle
gs
ljmp
jo
fs
xchg
cmpsl
jne
stos
nop
jp
sarb
shlb
xchg
add
daa
daa
and
fimull
jmp
sbb
stos
mov
test
clc
push
dec
add
jl
call
sbb
hlt
int
add
addb
cmp
push
sub
ja
or
inc
sub
inc
popf
xchg
add
ret
inc
or
dec
or
nop
sbb
inc
adc
ret
lret
in
das
jge
ljmp
mov
sbbl
mov
repnz
xlat
cmp
fadds
add
add
xorb
pop
xchg
mov
xor
cmp
xchg
stos
ss
in
pop
rcl
xor
jg
sub
in
jp
out
mov
jl
and
inc
xor
and
jl
push
lods
test
push
push
pop
pop
cmp
loope
dec
fwait
add
or
mov
or
lcall
push
sub
push
push
cmp
call
and
xor
lret
loop
outsb
pop
mov
lea
mov
ret
fwait
xchg
testl
push
aad
adc
fcoms
sub
out
fwait
jb
push
popa
loopne
aaa
int
pop
cmp
or
int3
cmp
das
test
push
movsb
jmp
dec
sub
repnz
adc
in
push
pop
jl
sbb
ss
call
or
cltd
dec
push
idivb
nop
loope
lcall
jl
cmp
mov
jle
lcall
pop
dec
sbb
jge
xchg
inc
shl
cmpl
sbb
inc
jp
jmp
cmp
nop
repz
jb
rcl
adc
sub
xor
mov
sbb
or
sub
in
int
cmpsl
and
push
fistl
dec
std
adc
or
inc
inc
mov
repz
inc
addr16
or
inc
push
or
xchg
or
cmp
ret
add
loop
adc
fiaddl
push
testl
rorb
and
lahf
outsl
int3
test
xchg
repz
pop
jg
js
mov
icebp
mov
mov
das
sahf
dec
jb
popa
lea
dec
push
shlb
push
movsb
and
cmp
and
and
pop
ret
push
cvttps2pi
pushf
lods
in
add
xchg
cs
mov
bound
cmp
pop
cmp
sub
cmp
mov
xor
repz
sub
cbtw
lds
jnp
popa
xor
sahf
inc
inc
pusha
std
fcmovnbe
fmull
popf
push
push
cltd
insl
pop
mov
or
jne
fists
sub
out
outsb
jbe
loopne
adc
mov
fs
xor
lods
ret
sbbb
jnp
outsb
fldt
js
arpl
jmp
cmpsl
mov
jmp
sbbb
cmp
add
mov
and
fstpt
xchg
pop
push
ljmp
pop
mov
sbb
mov
mov
and
jae
cld
pop
sbb
sub
das
out
mov
xlat
andb
pop
jae
dec
or
lds
cwtl
mov
or
cmpsb
mov
adc
adc
jno
lcall
jl
aas
ret
inc
push
shl
push
lods
movsl
mov
rcll
mov
repz
cmpsb
lods
mov
rorl
cmp
and
jg
out
nop
stos
push
hlt
xchg
cli
sub
int3
and
jg
mov
loopne
push
insb
enter
call
and
outsl
out
lock
mov
es
add
jbe
cmp
negb
std
cmpsl
fwait
sub
faddp
mov
and
mov
mov
pop
mov
cmp
scas
adc
push
mov
aad
jmp
hlt
in
add
cmpb
cmp
nop
xchg
into
cmpsl
xor
fs
xchg
jnp
lret
mov
push
ljmp
adc
lods
and
mov
cltd
mov
ret
rcl
mov
xchg
xchg
pop
repnz
xor
jp
and
nop
mov
mov
xor
fimull
and
out
push
shlb
outsl
arpl
imul
push
ja
fstpt
pushf
lcall
and
sbb
loope
pop
cmp
icebp
or
fistl
push
in
push
call
hlt
cmp
xor
shl
and
push
push
fcomps
xor
loope
inc
mov
mov
test
dec
dec
sub
jp
sbb
lret
xor
push
xchg
shll
sbb
ror
push
ljmp
aas
lods
repz
sub
or
in
dec
mov
cmp
popf
mov
xchg
sbb
stc
mov
loop
sbb
jno
mov
mov
stc
frstor
pop
lds
pop
xchg
into
jecxz
out
rorl
int3
push
pop
inc
jno
cmp
jno
push
pop
out
into
add
sar
not
ljmp
enter
aam
into
shr
test
add
xor
add
insl
mov
aas
jno
pushf
les
sub
jmp
into
ds
pushf
mov
pushf
xchg
aas
mov
sbbb
aaa
cmp
notb
js
sbbl
xorb
jg
push
inc
hlt
je
insl
insl
sarb
push
iret
sti
int3
and
stos
nop
inc
movsl
push
jo
mov
scas
xlat
inc
mov
push
rol
repz
ret
popf
cmp
xchg
mov
iret
insl
pop
mov
xor
jb
mov
dec
and
in
jnp,pn
dec
sbb
leave
lret
mov
adc
stc
lds
jne
pop
jmp
push
lret
and
pop
idiv
insl
jnp
and
int3
jno
mov
lock
lahf
or
mov
out
mov
cmp
sbb
pop
jp
mov
iret
popa
mov
pop
js
push
sbb
mov
jg
loopne
das
lds
jl
jg
xor
add
mov
repnz
mov
pop
add
test
fwait
cmp
cmp
adc
dec
into
mov
sub
loope
test
sub
push
mov
aad
aam
lcall
cmc
mov
insb
mov
xchg
test
adc
inc
test
punpckhbw
xchg
in
jb
push
mov
mov
rcrl
stos
fcomi
and
rorl
pop
les
and
sbb
int
arpl
cmp
xchg
xlat
out
jns
out
adc
fwait
or
xor
out
inc
jb
je
cmp
ror
add
nop
sti
test
inc
add
call
cmp
fcomip
rcr
push
xor
pop
pusha
icebp
pop
dec
gs
xorl
mov
mov
mov
inc
xor
movsb
int3
shrl
and
adc
cmp
rorb
inc
lret
insl
imul
cwtl
mov
insb
sub
scas
aaa
pushl
xor
add
scas
in
je
push
in
pop
ss
ds
test
cmp
fwait
push
push
in
out
jp
xchg
or
testb
push
push
add
insb
cli
testb
je
fistps
mov
and
ljmp
testb
mov
pop
xchg
in
fwait
cmp
fldl2t
mov
dec
xor
xchg
cmp
pop
sbb
push
xor
sub
outsl
push
aad
sub
lret
es
lds
dec
sub
xchg
sbb
outsb
dec
pop
mov
dec
mov
hlt
insb
xor
imulb
clc
xchg
in
test
inc
not
adc
mov
js
lcall
add
filds
stc
xchg
dec
add
push
fnstenv
mov
dec
adc
cmp
sbbl
repz
in
sbb
cwtl
jmp
sub
mov
jnp
pop
and
xchg
test
or
jo
inc
ret
jne
mov
mov
or
cmp
add
sbbl
push
scas
push
jne
xor
ret
xor
addr16
xor
fwait
mov
inc
stc
aam
lret
mov
leave
out
push
mov
ja
xor
and
cwtl
int
pop
mov
imul
xchg
fnsave
mov
dec
push
add
mov
gs
inc
ljmp
daa
dec
push
cwtl
xchg
push
push
nop
fldenv
mov
cwtl
push
repnz
fs
fdivrs
movsl
mov
pusha
nop
jp
inc
xor
adc
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
xchg
jp
mov
jnp
xor
pop
lods
inc
mov
xchg
push
popf
jl
mov
dec
dec
mov
mov
adc
pop
add
mov
push
push
lea
bound
in
sbb
sarb
cmc
mov
arpl
fsub
xchg
fucom
pop
test
adc
or
cwtl
iret
cmc
icebp
fstps
adc
jne
push
ret
into
pop
sub
fdivs
dec
ret
aas
notl
sbb
aam
jbe
mov
or
xor
lods
test
xchg
jge
orl
adc
das
leave
popa
jo
xlat
push
aad
add
comiss
mov
push
mov
imul
jmp
push
sbb
jae
out
sub
test
stos
mov
mov
mov
call
fiadds
inc
lock
subl
xchg
mov
jge
icebp
add
jmp
cli
fiaddl
lret
icebp
daa
daa
shl
mov
cmp
pusha
sub
mov
insl
mov
ljmp
sub
xlat
mov
xor
out
dec
popa
stos
bound
sbb
cwtl
mov
hlt
mov
js
test
ficomps
shll
cmpsl
add
sti
jl
rorb
std
cmp
xchg
stos
neg
pop
and
sub
push
jg
cmp
lret
jp
ja
hlt
mov
jl
andl
xor
or
and
in
popf
rcr
lahf
cli
xlat
pushf
inc
or
lock
or
pop
dec
xor
repnz
xchg
aam
lcall
iret
cmp
mov
sbb
mov
cld
out
push
test
push
loop
inc
int3
mov
or
xchg
mov
or
push
xchg
fbld
addr16
pusha
sub
mov
ret
or
mov
jle
movsb
bound
out
push
push
gs
jo
fistpl
je
cld
ret
sub
and
repz
out
sub
fmull
add
cmpsb
mov
daa
je
xchg
jle
dec
cld
and
into
xor
and
call
inc
push
out
inc
mov
xchg
inc
pop
pop
sub
pop
mov
xor
adc
gs
sub
addr16
mov
ljmp
ds
mov
cwtl
stc
xor
cmp
cmp
hlt
das
xor
sarl
jo
lahf
pop
les
cmp
mov
adc
lds
test
add
ret
icebp
hlt
pop
xor
pusha
cli
mov
jecxz
mov
mov
ja
enter
aam
repnz
or
push
cltd
cs
jnp
insb
cld
cwtl
in
iret
xor
mov
popa
add
jmp
arpl
inc
inc
push
les
shrb
mov
mov
data16
out
into
outsl
shrb
sarl
add
ret
xchg
sub
cmp
fcmovnb
mov
ja
fldenv
xor
jmp
mov
xchg
dec
pop
xor
mov
cmpsl
xchg
cltd
xorb
lds
cmp
inc
es
xor
adc
pop
jno
repz
lea
inc
mov
jbe
mov
pop
fwait
adc
mov
jp
fwait
mov
cld
inc
int
scas
jl
adc
mov
inc
push
or
fwait
lahf
add
jae
cld
das
jp
int3
sahf
in
pop
clc
xchg
jge
sahf
into
enter
lcall
lock
int
mov
push
cld
ja
mov
aaa
pop
lahf
xchg
jne
mov
inc
add
sub
out
xlat
dec
mov
in
pop
mov
out
jle
insb
int3
pop
xchg
mov
outsl
sbb
pop
fildl
adc
dec
inc
int
mov
cwtl
push
mov
dec
mov
and
xchg
rorl
jnp
les
push
out
loop
aad
dec
mov
arpl
ljmp
out
add
xchg
vxorps
xchg
push
pop
jae
repnz
icebp
cmp
mov
mov
cmp
add
sbb
push
ret
jnp
dec
jb
out
mov
outsl
out
xor
js
dec
inc
ds
xor
pusha
inc
sbb
into
cmc
cld
adc
mov
pop
mov
cli
clc
add
vcmpneq_uspd
pushf
sub
ret
out
out
not
jl
clc
adc
xchg
pop
and
inc
add
fs
sub
movsl
mov
push
ficomps
scas
pop
jbe
dec
es
outsb
xor
pop
setne
inc
imul
std
popf
fwait
in
jae
push
and
cmp
arpl
enter
mov
or
stos
push
jno
xor
xchg
iret
push
adc
scas
or
mov
add
fistpll
cmp
jle
in
out
xor
jecxz
ljmp
pop
xlat
ljmp
push
sub
and
test
adc
sahf
mov
jns
or
inc
sub
aad
pop
por
sbb
in
and
mov
out
xlat
arpl
cli
loopne
adc
mov
lds
cmp
lods
mov
fwait
jmp
call
rclb
pop
cmpsb
gs
inc
out
sbb
sarl
cmpsl
loop
scas
dec
mov
test
loope
fmul
push
push
cmp
mov
add
xlat
lds
mov
in
and
and
shlb
aas
into
inc
aam
mov
and
jmp
cs
mov
scas
sbb
inc
xor
aas
gs
push
mov
mov
cmp
in
pop
push
sbb
clc
popa
sbb
and
add
inc
pop
xchg
mov
out
loope
jns
push
jle
sarb
or
es
inc
mov
call
inc
inc
ja
loop
ret
outsb
and
out
xchg
jae
loopne
iret
mov
dec
sbb
lahf
xchg
insl
test
mov
cwtl
std
cltd
sub
int3
mov
mov
js
sub
sbb
jle
adc
push
jl
subl
dec
xchg
aaa
sbb
inc
xchg
pop
lock
pop
repz
pop
mov
call
or
fldcw
jnp
and
cwtl
mov
lock
popa
test
inc
xchg
decb
adc
or
lods
push
adc
icebp
mov
adc
xchg
popf
xor
nop
or
add
in
sub
jb
pop
pop
and
iret
or
mov
add
ja
popf
ds
add
inc
mov
jg
inc
xchg
jo
lods
xor
sbb
push
bswap
test
jne
xor
mov
mov
ljmp
sbb
outsb
cmp
mov
dec
push
sbb
dec
ret
mov
cmp
aam
add
push
ss
push
enter
stos
loopne
xlat
pop
popf
push
scas
sbb
hlt
movsl
mov
mov
ss
pushf
divb
ds
sbb
stos
popf
mov
stc
repz
or
sub
scas
into
jno
adc
fnstenv
arpl
cmpsl
or
dec
shlb
popa
mov
mov
sub
adc
mov
repz
dec
jne
aam
pop
inc
cmp
mov
in
sbb
inc
push
leave
cmpb
repnz
fimuls
lods
outsl
enter
divl
jo
test
jp
scas
dec
ljmp
mov
jb
out
and
imul
xchg
mov
or
loopne
mov
pop
negl
es
mul
mov
rclb
xor
cmp
jae
daa
jo
mov
das
push
subb
cmpsb
dec
mov
add
pop
adc
sbb
cltd
adc
popa
mov
push
add
fildll
movsl
xor
xchg
fldln2
call
fs
add
std
push
xchg
inc
iret
push
loop
popf
cmp
sub
pop
addb
sbb
adc
or
cwtl
cmp
dec
imul
ljmp
movsb
sbb
bound
lea
inc
shrb
mov
jmp
push
inc
sub
stc
xchg
in
mov
fnstenv
jp
call
or
add
mov
sbb
ss
loop
jl
pop
xchg
sub
push
mov
jmp
push
pop
mov
dec
inc
push
and
jnp
push
fwait
add
sub
loope
scas
es
in
stos
and
sti
cld
push
sbb
xor
sbb
jl
xchg
scas
inc
sub
push
adcb
cmp
or
dec
stc
out
int3
sub
imul
int
sub
arpl
sbb
pushf
in
sahf
add
out
pusha
ret
into
ja
dec
xchg
fstps
mov
into
data16
icebp
jl
xor
xchg
pop
mov
jl
hlt
iret
stos
call
or
pop
rcrl
xchg
xor
sub
mov
subb
ss
dec
sub
bound
notb
aas
pop
dec
push
cld
or
punpcklwd
repnz
xorl
jmp
adc
jb
loopne
push
mov
jmp
and
mov
mov
inc
fiadds
out
pop
notl
test
popa
outsb
pop
add
test
repnz
add
adc
outsb
ret
adc
loope
addr16
jns
jmp
and
fdiv
pop
stc
fsubr
in
and
sbb
pop
add
or
and
aam
adc
pop
lods
mov
mov
xchg
lret
addr16
xchg
cmpl
and
mov
inc
mov
xchg
xor
jne
fs
mov
clc
mov
call
test
imul
stos
or
sahf
in
mov
xchg
and
add
dec
inc
fsubrl
test
or
shrl
or
lcall
push
imulb
mov
dec
sbb
hlt
je
xchg
popf
ja
arpl
pop
inc
xor
aam
sti
adcb
jb
inc
dec
xorb
mov
or
xor
sbb
add
in
insb
mov
in
cwtl
std
pop
or
fidivrs
jae
pop
subb
xor
mov
call
mov
movsl
outsl
addr16
jge
or
dec
or
xchg
xlat
dec
push
jnp
adc
sti
dec
popl
nop
xchg
mov
dec
mov
mov
jno
andb
outsb
inc
fistpll
or
out
ror
stc
inc
cli
mov
jecxz
jg
int3
pop
and
push
pushf
das
or
mov
xor
inc
js
bound
popf
in
jl
xor
pop
adcl
xorb
sti
sarl
repnz
out
jne
leave
sub
out
and
sbb
sbb
negb
sub
cmpsb
gs
rol
or
ss
ss
sar
or
jp
lret
cwtl
mov
nop
inc
or
and
jnp
push
add
lds
or
shll
push
mov
sub
popf
mov
insb
pop
and
adc
out
cli
pop
inc
imul
mov
push
daa
mov
dec
test
insl
fwait
movsl
jle
outsl
js
lods
lods
fcomps
arpl
push
dec
pop
push
xchg
addr16
jno
jno
gs
push
rorb
pop
paddusw
cmp
shll
pop
jmp
dec
clc
test
pusha
aam
jmp
in
xchg
fidivrs
cmpsl
scas
in
pop
add
pop
xchg
scas
and
fstl
or
aam
pop
pushf
rolb
rclb
test
push
mov
jg
outsb
loopne
test
sub
scas
mov
cmc
insl
push
insb
mov
mov
sbb
rclb
sarb
repnz
popa
mov
or
aas
mov
dec
int
cmp
jp,pt
js
outsl
xchg
mov
sub
ss
arpl
ficompl
mov
pop
push
dec
xor
xchg
and
sbb
subl
adc
ficomps
lock
in
sub
xchg
push
aas
xor
es
ud0
aaa
push
cmp
sbb
flds
fs
cmp
xchg
out
cs
dec
mov
jge
adc
popf
test
mov
add
xchg
push
cmp
add
test
notb
add
xchg
add
je
mov
test
add
xchg
add
lods
imul
jmp
push
sbb
roll
pop
push
lds
inc
std
fldt
dec
incb
insb
fnstcw
jno
and
or
cmpsb
clc
daa
testb
sahf
mov
xchg
jmp
push
ss
test
sbb
rcr
sbb
pushf
call
lcall
sti
mov
xorb
push
fimull
cmc
mov
cltd
push
pop
cltd
jecxz
or
test
stos
lret
jle
test
jge
movsl
and
popa
fimull
jae
push
pop
aaa
nop
aam
adc
or
xor
fs
inc
scas
sbb
nop
pop
mov
lcall
call
push
cmp
mov
xor
icebp
cs
aaa
xchg
or
andb
js
or
cld
cwtl
mov
add
cwtl
push
dec
aad
pop
das
das
ss
xchg
outsb
stos
bound
mov
cmpsb
insb
aas
adc
sbb
xlat
stc
rorl
mov
mov
in
inc
jbe
adc
xor
push
pushf
repnz
stos
das
into
je
inc
adc
inc
lock
in
inc
push
orl
cmpsl
repz
cmp
sti
out
mov
inc
jb
into
iret
rorl
mov
ret
sar
fcompl
dec
stc
loop
in
faddl
pop
mov
xchg
ja
inc
sbb
cmp
inc
inc
ja
mov
hlt
dec
or
pusha
movsb
pop
addr16
adc
test
jne
in
adcb
test
ret
ss
ficompl
adc
adcl
jns
mov
outsl
shrb
psllw
fldl
sbb
push
mov
push
jp
test
and
fldl2e
popa
adc
add
in
stc
or
out
pop
dec
into
test
lcall
jge
inc
cs
and
mov
popa
adc
rorl
ret
inc
mov
add
pop
sub
mov
hlt
sbbb
dec
shr
es
addl
push
in
sub
add
ja
outsl
jecxz
cld
clc
and
and
add
xchg
clc
mov
push
stc
xchg
fwait
nop
test
adc
pop
adc
std
outsb
xor
mov
test
negb
inc
outsl
es
sbb
in
xchg
gs
sub
xchg
fcoms
rolb
xor
inc
stc
dec
mov
xchg
rolb
mov
adc
je
sbb
and
push
pop
sarl
iret
mov
sub
xorb
mov
add
mov
or
ds
push
sbb
movsl
cmp
mov
mov
jno
cmp
ss
cwtl
mov
and
ja
adc
sti
mov
and
ficomps
pop
sarl
orl
clc
int3
xor
pop
inc
shll
pop
xchg
pop
sahf
pop
fstpt
cld
sub
add
lock
pop
jae
insb
dec
sti
fisubs
sbb
sbb
cmp
xchg
push
clc
add
negb
mov
push
inc
shrl
adcb
cmpsb
jbe
rorb
mov
push
cld
rorl
cwtl
xchg
inc
push
dec
sub
adc
push
pop
mov
xor
dec
dec
and
pop
imul
int
das
shr
push
add
jbe
inc
sub
cltd
jae
out
push
int
lods
push
cmc
test
dec
xlat
inc
cmc
dec
inc
hlt
sbb
pop
test
xchg
js
stos
inc
je
xchg
jo
push
or
mov
mov
mov
sbb
or
lds
mov
add
enter
jno
add
and
xor
stc
fisubrl
loopne
mov
pop
add
xor
xor
stos
sub
addb
mov
int
add
mov
xchg
pop
out
icebp
xor
sbb
fcom
imull
sub
js
rcl
rcr
orl
dec
lea
xchg
mov
shl
addr16
and
test
scas
inc
sub
pusha
test
cmp
nop
or
mov
ss
and
jno
cli
sub
cltd
adc
lahf
pop
bound
mov
add
mov
xchg
mov
and
mov
lods
arpl
imul
lea
mov
test
outsb
mov
insl
push
sbb
add
and
pop
mov
pop
xor
int
sbb
adc
sbb
xorl
or
or
shlb
nop
cmpsl
dec
leave
mov
push
jbe
test
mov
cmpsl
fsubrp
pop
into
nop
push
mov
movl
cmp
cltd
cmpsb
inc
out
xchg
dec
rcrl
jns
xor
fldcw
jbe
inc
cli
fwait
inc
ror
imul
hlt
jns
fwait
repnz
push
inc
scas
adc
mov
icebp
and
rclb
mov
pushf
mov
mov
shll
xchg
jecxz
push
mov
xchg
lahf
in
lods
std
bound
hlt
out
fildll
jbe
movsl
roll
dec
lods
adc
inc
jg
sbb
fdivl
rcrb
insb
imul
jl
mov
push
test
nop
in
roll
jo
lods
push
add
sbb
push
pop
shrl
fwait
xor
and
dec
add
inc
jg
cwtl
insb
arpl
mov
pop
int3
xchg
add
inc
pop
pushf
jae
fdivrs
faddl
xchg
jb
or
jmp
add
push
test
stos
cld
lock
cli
add
dec
dec
push
mov
dec
and
xchg
andb
adc
leave
popa
xor
call
std
cvtdq2ps
cmc
out
fldenv
adc
cmp
lock
and
or
jno
cmp
jno
lds
je
insl
pushf
imul
mov
and
xor
jo
test
mov
stos
sbb
pop
add
mov
add
push
cmpsl
repz
jb
shl
pop
movl
xor
mov
mov
push
fidivrl
arpl
xchg
adc
adc
ret
enter
pusha
sub
xchg
mov
jnp
sub
das
dec
inc
minps
push
lods
cltd
mov
pushf
push
shlb
jnp
xchg
sub
mov
mov
in
pop
sbb
ret
jge
ja
add
push
fistl
addr16
cltd
int
je
daa
dec
sub
lret
xor
adc
inc
aam
in
xor
xchg
inc
sti
ret
mov
jbe
test
pop
in
std
dec
out
idivl
ja
icebp
xchg
fwait
sub
adc
pop
dec
hlt
loopne
pop
lcall
xor
lock
xor
or
stos
addr16
imul
xchg
out
add
daa
jae
pop
sbb
imul
add
mov
repz
adc
jbe
jmp
push
push
cmp
adc
sti
dec
pop
lds
or
pusha
scas
mov
push
cs
cld
out
or
sub
dec
imul
mov
jle
pop
filds
roll
ds
adc
pop
test
mov
fldt
lahf
js
ds
sub
or
add
pop
push
inc
jnp
mov
mov
sub
int3
pop
jl
push
sub
xlat
or
nop
sub
sar
repnz
bound
das
jle
or
out
pop
sbb
test
jecxz
hlt
xor
mov
jg
imul
or
inc
cwtl
test
push
pop
push
pushf
je
push
das
jne
dec
in
ljmp
fs
xor
or
push
mov
mov
dec
push
cmp
int
hlt
cwtl
xor
loope
inc
jge
add
mov
xchg
pop
stos
repz
mov
jp
mov
lods
push
xchg
mov
int3
pop
sbb
roll
loop
sbb
outsl
idivl
jnp
add
mov
ds
pop
test
notl
push
lds
and
out
inc
leave
sbb
clc
je
clc
jne
push
addr16
xchg
xchg
les
pop
sub
enter
aaa
iret
cmp
ja
mov
pushf
hlt
nop
jns
clc
jmp
xchg
inc
and
cli
mov
push
xchg
xor
mov
into
sbb
movsl
mov
or
adc
fistpl
les
orl
mov
data16
push
out
out
or
pop
pop
js
cmp
cmp
lcall
testb
jmp
pop
mov
adc
mov
lret
int3
outsl
rorb
push
stos
mov
out
inc
inc
addr16
add
loopne
xchg
insl
jnp
dec
sahf
inc
push
sub
jb
arpl
or
and
lock
iret
xchg
xchg
lea
and
pop
pop
cmp
xchg
orb
negl
fxch
cmp
mov
in
leave
xchg
nop
sarb
imul
pusha
adc
jecxz
inc
mov
incb
jmp
dec
aam
lret
mov
xchg
jp
mov
inc
fcmovnbe
push
pushf
ss
test
aam
lcall
notl
lahf
xchg
push
add
pop
pop
jmp
mov
in
mov
and
stos
rolb
lret
imul
out
xor
inc
je
in
pop
cmc
adc
lret
jge
icebp
shrl
mov
icebp
jge
repz
pushf
mov
cmp
fs
push
mov
push
jecxz
cmp
insb
mov
push
jp
push
mov
dec
push
mov
push
or
pop
movsl
nop
sub
and
dec
mov
pop
jecxz
cmovbe
xchg
lcall
cmc
pop
notb
aad
fs
psrlq
or
sbb
jp
lcall
aas
das
ror
lea
pop
or
adc
xor
int3
stos
dec
insb
xchg
mov
call
push
call
lret
adc
sar
out
jb
push
cmc
rorb
push
and
xchg
ficomps
into
inc
push
aam
fldpi
aam
in
mov
xchg
adc
and
in
add
or
aad
cmc
mov
mov
push
xchg
pop
in
inc
dec
push
out
push
push
aam
push
icebp
fs
inc
in
mov
nop
mov
loope
addr16
call
popa
mov
int3
jno
fwait
mov
test
mov
push
cmpsl
sbb
mov
ljmp
sbb
fwait
mov
mov
sarl
mov
and
push
cmpsb
xchg
rcr
clc
mov
mov
lds
jmp
loope
lods
jmp
insb
repz
sub
insl
movsb
imul
jo
push
or
cmp
push
bnd
xlat
cli
push
add
out
mov
lock
mov
mov
jmp
mov
pop
jno
rcl
in
add
js
and
jmp
sbb
adc
sbb
test
mov
push
loop
enter
pop
adc
sahf
jno
xlat
daa
cltd
cmpsl
sahf
adc
outsb
push
rcr
scas
jecxz
xchg
xchg
or
mov
std
and
rclb
jns
cltd
stos
push
sub
xchg
sahf
fmuls
lds
push
rcr
out
inc
push
das
imul
add
cmp
outsb
and
sub
bound
inc
sub
push
dec
pop
mov
mov
fnstsw
les
into
test
cmp
push
xchg
popa
or
stos
mov
fs
or
xor
repz
in
stos
jmp
mov
inc
xlat
pop
fdivrl
pop
int
add
icebp
lret
adc
dec
and
shll
xchg
mov
mov
xor
pop
push
adc
sub
out
xchg
mov
scas
lock
dec
pop
xchg
pop
cmove
jl
cs
cli
subl
sbb
mov
xor
push
inc
xchg
or
call
aad
test
into
push
inc
repz
stos
imul
inc
mov
fisubrl
push
das
push
xchg
jno
fnsave
fists
jg
addr16
popl
mov
pop
jle
fstpl
and
or
arpl
xchg
add
mov
lea
ret
add
inc
xchg
test
xchg
pop
rcll
pop
jmp
sbb
ret
sub
pop
and
pop
push
mov
out
pop
aad
lcall
jg
and
add
xchg
mov
jns
icebp
pop
dec
jmp
or
pop
xchg
ss
lock
testb
gs
push
fldenv
dec
and
mov
cmp
incl
pop
mov
dec
adc
in
lock
mov
sbbb
aad
test
jns
inc
inc
push
lret
xchg
adc
mov
popf
mov
push
cltd
std
mov
ljmp
adc
jl
cmp
push
ds
daa
jae
test
xchg
xchg
pop
js,pn
mov
rcrl
sbb
cmp
js
push
xchg
lahf
pop
pop
pushf
fistl
and
popf
jmp
subps
xchg
or
mov
dec
push
cld
int
mov
add
fstps
ds
mov
enter
xlat
dec
addr16
scas
fimuls
pushf
ljmp
cmp
push
cltd
xor
rorl
ljmp
add
rcll
loopne
jb
jp
mov
in
jmp
cmp
fmul
arpl
out
rorb
addb
sbb
and
and
mov
aas
jae
or
mov
sub
xchg
mov
add
jnp
jg
fsubl
xchg
loopne
add
jmp
shlb
imul
xchg
xchg
jae
cmp
imul
sarl
inc
es
xchg
push
js
xor
and
lods
cs
mov
scas
outsl
aaa
pop
arpl
ret
loop
mov
sahf
flds
push
fcomp
or
data16
xor
mov
ja
xor
add
dec
xor
mov
stc
sbb
rcr
and
sub
jmp
xchg
cmp
mov
mov
jno
jnp
cmpsb
xchg
enter
fldt
pop
push
mov
mov
out
push
pop
mov
stc
and
fisubrs
cmp
dec
and
out
dec
enter
sti
xchg
nop
dec
mov
sub
stos
and
sbb
jge
sbb
std
ret
mov
in
sub
adc
lret
xlat
ret
sbb
arpl
add
push
push
push
mov
loope
cmc
inc
loop
push
push
dec
adc
in
mov
rcll
xor
movl
jno
jg
bnd
pop
loope
inc
fdivl
sbb
dec
movsl
or
repnz
shlb
int3
and
movl
pop
out
rcrb
stos
pop
fidivs
xor
add
push
and
ss
popf
jle
inc
imul
ds
xchg
jns
mov
sti
outsl
ss
sahf
and
out
scas
imul
inc
sbb
add
inc
cld
mov
sti
add
clc
mov
inc
or
cli
aad
sahf
cmpsb
or
movsb
add
imul
add
mov
sbb
arpl
rolb
jp
int3
leave
sbb
pop
inc
cmp
pop
fists
popf
dec
pop
int3
inc
dec
icebp
dec
orb
loopne
cli
shll
inc
inc
sti
lock
push
test
sub
push
fdivrl
call
das
push
leave
sbb
push
dec
addr16
push
push
mov
sbb
adc
sahf
add
call
push
push
movsb
pushf
or
mov
xlat
repnz
aas
pop
xchg
shll
xor
xchg
xor
movsl
aas
xchg
int3
sbb
adc
push
out
orb
in
inc
ljmp
lcall
push
inc
insl
pop
mov
popa
sbb
jno
loop
mov
mov
pop
and
sub
in
sub
xchg
sub
pusha
fsubs
xchg
jg
dec
mov
adc
sbb
push
jnp
cli
cmp
sub
mov
inc
inc
cs
pop
jp
adc
fistps
shrb
xor
rol
in
mov
test
lret
xchg
out
push
push
inc
push
mov
lret
das
or
mov
xor
sbbl
repz
mov
dec
pop
loope
lahf
jmp
mov
xacquire
adc
dec
push
fildll
pusha
test
leave
das
jge
or
call
mov
test
lea
sbb
int3
repz
ret
sbb
jo
mov
out
dec
sbb
stc
push
push
mov
hlt
imul
xchg
sub
pop
and
and
sbb
stc
call
jmp
lea
mov
sbb
pop
xchg
dec
icebp
ret
lcall
and
imul
ret
stc
or
lds
mov
mov
jbe
ret
cmp
mov
push
jnp
test
dec
repz
call
xchg
or
aas
pop
test
outsb
je
shlb
push
jl
popf
ds
das
lahf
cmpsl
xor
outsb
sti
mov
cmpsb
scas
pushf
hlt
dec
lret
mov
fsubr
push
movsb
shlb
push
mov
adc
enter
xor
adc
mov
cmp
jl
nop
aam
xor
mov
xor
sti
inc
out
mov
sahf
pop
loope
jp
gs
dec
test
inc
or
dec
gs
add
xor
enter
push
mov
loop
loopne
hlt
xchg
pop
dec
testb
adc
push
ja
ss
add
fldcw
cmpsl
je
addr16
xor
add
mov
push
cmp
insb
xor
neg
out
mov
xchg
imul
sub
push
scas
xrelease
cmp
ja
mov
mov
cli
popf
in
adc
es
xor
outsl
mov
push
add
sti
xchg
sbb
std
dec
addr16
xchg
push
cmp
aaa
cld
inc
pop
inc
xchg
add
das
mov
shlb
mov
movsb
dec
clc
dec
daa
lcall
fisubrl
dec
shr
sub
mull
mov
gs
xorl
pushf
pop
js
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
jp
call
sbb
repz
sub
div
pop
push
mov
inc
bound
push
fadds
adc
repnz
mov
imul
arpl
or
sbb
popa
sub
nop
mov
add
xor
xrelease
or
iret
push
shrl
dec
sbb
push
sbb
add
aam
sub
push
shll
scas
js
popf
lods
lret
jo
orl
or
inc
jae
pop
jae
cld
les
lret
cli
dec
movsl
push
dec
stc
cmp
inc
sbb
cmpsl
xor
or
ret
js
push
add
pop
add
rolb
jg
add
sbb
jecxz
sbb
popf
ficoms
push
iret
jmp
loopne
xchg
jne
or
shl
sti
xchg
xor
int
push
pop
scas
cmpsb
push
mov
shll
and
sub
bound
push
cmp
jnp
out
test
xchg
pop
test
out
bound
ret
xchg
sbb
add
mov
or
pop
jne
cwtl
sahf
pop
mov
subl
std
or
cmp
push
or
sub
fmull
mov
or
aad
inc
je
jae
cmc
scas
jmp
cmp
cmp
sbb
mov
jg
lret
jb
dec
mov
fcmovnb
sub
lret
pop
ss
ss
push
cmc
jnp
xor
out
xor
adc
aas
push
movsl
cli
jnp
push
imul
mov
mov
or
add
unpckhps
mov
mov
or
test
jle
dec
add
arpl
push
mov
ficoms
lret
in
movsb
mov
cmp
ja
mov
mov
sub
or
fcom
mov
cmp
inc
dec
cmp
mov
out
je
xor
mov
push
dec
pop
mov
sub
popf
test
testl
pusha
mov
and
or
fs
stc
das
cmpsb
cmp
sbb
push
daa
adc
jmp
xlat
add
mov
shll
mov
mov
jmp
mov
xchg
mov
mov
add
adc
cmpsl
fwait
sbb
lcall
xchg
dec
xchg
adc
lock
insb
xor
imul
xchg
pop
mov
insb
xchg
add
dec
sarl
bound
pop
xor
sub
and
aaa
pop
sub
jo
adc
arpl
adc
xor
jmp
xchg
pop
les
sahf
shlb
data16
clc
and
or
das
pop
mov
push
add
mov
mov
and
and
jbe
mov
mov
mov
pop
ret
int
and
movsl
out
adc
push
mov
push
ja
sub
pusha
inc
scas
sbb
fsubs
lea
inc
mov
scas
ja
bound
test
and
repz
adc
and
cmp
ja
pop
jmp
clc
mov
sbb
fstpl
andl
stos
push
push
fcoms
in
cmp
fisttps
bound
mov
cmp
aam
push
repz
fsubl
mov
cmc
nop
pop
xor
lahf
je
out
loop
movsl
aam
mov
push
push
std
inc
pushf
lret
loope
outsl
sbb
outsb
lds
adc
rclb
add
popa
rcrl
dec
stos
scas
popf
repnz
or
outsb
insl
fisubs
cmp
sbb
loopne
call
adc
imul
setge
or
imul
cmp
inc
sub
pop
push
mov
pop
pop
xorl
mov
bound
mov
jno
mov
sbb
adc
and
roll
cmp
mov
movsl
testl
test
inc
scas
xchg
pop
push
sbb
popf
add
stos
mov
insb
test
inc
cmp
mov
sbb
stos
push
jge
xchg
cs
xchg
jae
stc
jmp
std
or
push
outsb
cmp
scas
pop
adc
rorl
aad
adc
in
sbb
sbb
cmpsb
or
xor
popf
cwtl
dec
cmp
push
jb
or
xor
push
jg
jno
pop
add
dec
test
jg
rorb
sub
cmp
ret
add
mov
dec
sbb
out
or
jge
cmc
pusha
test
jnp
inc
xchg
inc
cmp
out
divps
jns
jb
jbe
jmp
xor
or
inc
fst
ljmp
iret
stos
insl
repnz
sub
xchg
sbb
pop
or
mov
loopne
jmp
mov
test
and
inc
ret
pushf
cld
test
cmpsl
add
inc
call
cld
dec
out
pop
sbb
or
aam
lcall
int
pusha
movsl
jnp
sti
inc
inc
inc
mov
inc
cmp
imul
das
aaa
cs
pop
dec
jle
inc
stos
in
pop
pushf
cmpsl
xchg
mov
cmp
dec
icebp
jmp
inc
gs
xor
push
jae
ja
push
js
test
mov
loopne
mov
and
jecxz
add
jns
mov
push
xchg
loopne
xor
jge
push
jns
sub
jo
insb
scas
cmp
sbb
nop
adc
xor
sub
and
pop
movsb
cmp
adc
adc
mov
adc
add
lcall
jns
fwait
push
out
in
lock
sub
push
arpl
cs
and
movsb
lods
stos
mov
mov
add
sub
or
pop
xchg
adc
out
inc
pop
push
outsl
inc
cmp
pop
insl
insl
movsb
movl
fadds
mov
xor
and
sbb
push
mov
rol
fidivl
mov
or
mov
fcomp
je
xor
add
or
push
insl
cld
adc
xor
mov
mov
and
inc
stos
shr
fnsave
mov
je
fs
push
ja
push
lock
test
push
push
idivb
inc
xchg
std
mov
cmp
into
leave
mov
test
add
mov
push
repz
movsl
add
clc
ficoms
mov
icebp
xor
das
scas
pop
lds
rcrb
ljmp
add
cmp
mov
cmp
gs
jns
mov
shrl
mov
in
xor
mov
sub
sahf
icebp
add
pop
pop
mov
xor
sbb
out
push
aam
stos
nop
cs
jle
aam
out
loope
mov
add
popa
jle
or
mov
std
sbb
mov
aaa
addr16
cli
cmp
mov
mov
enter
es
lahf
add
mov
js
in
mov
and
jecxz
mov
xorl
les
pop
aad
loopne
fnsave
dec
push
sahf
push
xchg
insl
pop
ds
stos
push
add
cmpl
add
fdivr
push
or
adc
push
xchg
out
cmpb
shrb
fsubs
int
in
push
or
jnp
pop
mov
fsub
fiaddl
sbb
or
or
aad
stos
ds
das
adc
or
or
in
loopne
fcoml
or
adc
push
roll
cmp
and
lcall
sbb
loop
inc
jb
mov
adc
movsb
mov
pop
cmp
ret
aas
jne
outsl
pop
pop
rorb
inc
xor
xchg
adc
mov
arpl
dec
or
adc
sti
je
out
inc
pushf
xor
push
iret
daa
rcrb
lea
bound
add
pop
sbb
push
xchg
dec
pop
sbb
orl
sahf
rclb
xchg
addl
nop
int
push
cmp
jns
mov
xor
mov
mov
das
jo
mov
int
lcall
sub
jne
ficompl
out
sahf
ja
and
pushf
stc
fchs
mov
push
mov
mov
cmp
cmc
add
inc
pop
or
das
and
scas
push
push
inc
mov
pop
lds
adc
inc
sub
adc
pop
and
lds
popa
and
js
mov
pop
jle
cmp
call
andb
jecxz
aad
xchg
dec
dec
xor
or
fisttpll
sbb
mov
es
mov
or
outsl
dec
fwait
cmp
or
outsl
loopne
rorb
arpl
fistpll
lahf
sti
fnstcw
das
rolb
jb
xchg
mov
sbb
dec
xlat
rcll
fidivs
pop
fidivrs
out
ss
shl
jns
arpl
loope
add
data16
cltd
mov
stos
scas
fistpl
and
mov
pop
jb
sbb
das
adc
enter
xchg
imul
mov
xchg
xor
repz
dec
add
mov
mov
fwait
add
xchg
clc
or
mov
sbb
or
mov
pop
xchg
imul
pushf
call
aad
pop
aaa
push
mov
data16
add
sbb
pop
pop
rclb
ret
push
pop
cli
add
or
pop
fstpl
sub
adc
add
push
outsl
aad
mov
pmaxsw
das
xchg
clc
mov
movsl
or
rcll
jmp
xor
add
ja
add
xchg
fsub
sbb
mov
inc
sbb
dec
pop
je
movsl
lds
pop
popf
aam
leave
nop
test
cmp
mov
mov
das
adc
icebp
pop
insl
in
pop
xor
add
leave
xor
mov
shrb
icebp
aas
scas
imul
sub
cwtl
daa
insl
jne
xchg
or
mov
xchg
into
pop
xor
and
jne
jns,pt
push
mov
outsl
std
sbb
adc
shlb
push
sbb
cmp
dec
fwait
nop
int
mov
and
jbe
xchg
fsub
xchg
daa
dec
aad
inc
dec
enter
jnp
adc
mov
mov
lds
jns
daa
hlt
mov
sbb
cli
push
inc
inc
insl
fs
aad
std
movsb
adc
or
jl
or
lods
das
out
and
lods
iret
or
jne
test
je
lea
jb
add
test
adc
rcrb
add
lcall
sti
push
cli
lret
and
sahf
shl
lods
cs
daa
fimuls
xchg
test
cltd
fwait
push
or
lcall
mov
jae
cmp
mov
xchg
inc
xor
movsb
sbb
test
mov
push
pushf
dec
push
push
shl
mov
aam
xchg
and
push
xorl
adc
mov
fimuls
inc
xchg
pop
nop
adc
rcrb
adc
mov
lcall
ret
dec
icebp
mov
jge
mov
jle
sbb
sbb
mov
mov
fiadds
jo
clc
lods
dec
fdivrl
adc
sbb
bound
cltd
loope
lds
mov
push
push
mov
scas
add
rolb
cltd
stc
cmp
sahf
gs
int
push
mov
addr16
push
push
test
loop
mov
lcall
mov
adc
adc
add
xlat
loop
jae
cltd
xchg
sbb
pop
nop
sub
loopne
aam
int3
xchg
out
sbb
into
ljmp
mov
adc
mov
test
sub
and
into
mov
xchg
out
ss
mov
jbe
outsb
pushw
sbb
xchg
mov
push
sahf
xchg
mov
loop
cmpsl
pop
lods
push
ret
adc
in
mov
jp
pop
lods
popf
adc
outsb
cmp
insb
xor
jno
jbe
jecxz
and
xchg
xchg
jnp
imul
insl
mov
sbb
and
test
xor
insb
ds
scas
mov
xchg
ljmp
call
rcr
add
or
sub
pushf
popf
mov
pop
mov
cmp
pop
xchg
cmp
scas
int3
movsb
push
cmp
leave
popa
dec
mov
mov
cmp
data16
into
std
xchg
pop
movsb
jp
divb
pop
std
push
and
addr16
push
mov
xchg
movsl
xor
aas
in
out
daa
fidivl
xchg
stc
cmc
in
out
je
mov
popf
clc
push
pop
cmp
ret
loop
testb
add
inc
xchg
mov
cmp
mov
aaa
mov
pop
jle
sub
leave
subb
sbb
pop
out
gs
lock
nop
repz
jns
in
jbe
or
sub
xchg
loop
pop
ror
xchg
int
mov
arpl
mov
out
mov
mov
xor
mov
adc
jle
sbbl
and
icebp
aas
dec
mov
pop
jmp
fdivl
orl
adc
add
mov
rorb
leave
pop
mov
mov
jmp
jp
js
xor
pop
push
adc
push
or
mov
jb
mov
clc
jbe
leave
add
popf
fcoms
lret
mov
insl
mov
and
cmp
adc
adc
ss
or
sahf
inc
lcall
lret
loope
push
repnz
and
outsb
push
push
andl
xlat
jns
fadds
ja
xorb
push
imul
out
mov
loopne
cmp
lods
pop
faddp
jge
movsb
or
xor
lahf
push
dec
pop
lret
xchg
push
cmp
fcompl
das
aaa
icebp
fsub
ss
std
adc
inc
xchg
xlat
ss
xchg
cmc
inc
sbb
vmread
lret
add
jmp
repz
ret
xchg
insl
or
adc
pop
push
xchg
sarl
pop
clc
mov
ljmp
inc
mov
push
addr16
stos
jg,pt
ja
mov
pop
pop
ret
add
xchg
rcr
ja
push
adc
push
subl
xor
sub
mov
hlt
das
xchg
sub
adc
xor
aas
jle
dec
or
cs
xchg
out
int3
jg
in
push
lods
test
in
add
mulb
dec
js
pusha
or
pop
mov
push
in
sti
add
stc
and
stos
pop
inc
cwtl
stc
shlb
mov
sbb
insl
push
sub
int
push
push
push
cmp
and
adc
shlb
fsub
bound
lods
shll
subb
scas
mov
loopne
adc
mov
popa
cwtl
xchg
lock
inc
lds
xor
cmpsl
add
add
inc
dec
mov
loop
xchg
icebp
pop
and
mov
jbe
push
or
cmp
mov
js
mov
jl
pop
mov
jno
fcoml
lahf
lcall
push
pop
data16
into
insl
jp
dec
imul
gs
cwtl
in
aas
xor
ret
repz
dec
adc
dec
adc
icebp
mov
ds
lahf
sub
jno
call
add
sub
call
insb
jae
es
fxam
push
push
inc
mov
ljmp
je
cmpl
xchg
xor
xor
mov
jp
insl
sub
cmp
push
pop
adc
js
loop
jle
arpl
pop
stos
push
mov
test
ljmp
dec
add
cmp
xor
sbb
push
shrb
rcrb
xchg
call
mov
sub
xlat
sub
stos
inc
ficomps
addr16
mov
movsl
dec
arpl
or
outsl
push
mov
cmp
bound
mov
dec
sub
rcrl
test
add
jbe
aas
and
or
sbb
inc
ljmp
pop
mov
in
cmp
or
mov
and
mov
in
add
pop
ss
in
int
add
stc
xor
int
nop
mov
mov
mov
ret
jb
xchg
mov
and
enter
push
or
sbb
push
jne
insl
dec
pop
or
mov
shr
pop
iret
jns
or
ret
lret
sub
xor
test
test
jl
ror
bound
sub
sbb
loopew
add
bound
mov
push
adc
data16
js
in
add
test
orl
push
scas
inc
xor
and
jecxz
xor
mov
movsb
sub
mov
and
sbb
inc
inc
push
xchg
mov
enter
and
incb
dec
arpl
sub
mov
out
inc
jne
rorb
lock
mov
sti
mov
jb
jo
push
ljmp
out
loop
mov
and
roll
pusha
sbb
adcb
cs
gs
outsl
sbb
and
push
and
lods
jmp
xchg
mov
push
and
mov
sub
lret
outsl
mov
jnp
sub
or
cmpsl
lcall
or
mov
push
loopne
jno
insl
lahf
or
fsts
cmp
push
mov
or
dec
mov
and
sub
loope
xorl
adc
jnp
outsb
jbe
cltd
dec
loop
xchg
and
sbb
data16
lret
xchg
std
lret
imul
fs
outsb
mov
pop
out
stos
divb
pop
jae
dec
adc
scas
enter
or
nop
test
and
mov
out
adc
push
xchg
mov
sbb
andl
fsts
std
fidivrl
or
lret
sti
mov
mov
sub
jecxz
fisttps
xor
ds
dec
dec
mov
in
or
pop
insb
test
test
mov
mov
and
mov
xor
out
xlat
ss
bound
pop
aas
out
popf
inc
push
cmp
arpl
mov
adc
notl
stc
mov
jb
out
notl
mov
sbb
outsl
cs
inc
lock
pop
lds
pop
ret
incb
insb
cmp
mov
decb
or
and
cs
fnstsw
popf
ds
leave
dec
daa
inc
mov
imul
dec
out
ret
inc
mov
mov
out
jbe
fstpt
fisttps
xchg
add
jnp
mov
sbb
dec
push
je
push
cmc
ja
test
pop
mov
in
mov
cmp
or
sti
subb
ljmp
lcall
stc
dec
mov
mov
cmp
loopne
ja
fdivrs
pop
pusha
sub
mov
cwtl
cld
cmpsl
xchg
or
add
push
xor
push
mov
or
mov
xchg
lcall
or
mov
addr16
xlat
jne
dec
out
sub
pop
xchg
xor
cld
mov
inc
ds
into
ffreep
fadd
repz
outsb
cltd
and
xchg
pusha
in
mov
xlat
rol
imul
mov
xchg
fisubrs
in
push
popa
addl
push
movsl
xor
mov
mov
or
lea
int
lds
imul
or
ret
mul
add
xchg
sub
sti
xorl
sub
xchg
dec
push
ds
test
or
daa
jno
in
push
imul
pop
or
and
mov
mov
loope
xchg
repz
xor
movsb
popf
rcrl
pop
cmpsb
xor
or
add
out
nop
or
push
inc
or
ds
or
movl
mov
ret
test
or
push
dec
lcall
cmp
int3
pop
int3
mov
jae
ret
pop
dec
xchg
mov
mov
push
jle
jecxz
mov
xchg
cmp
sbb
fimull
jnp
pop
xor
jl
ja
out
adcl
loop
cltd
jmp
dec
xor
repnz
mov
js
pop
xor
call
inc
mov
mov
in
fsubrl
setne
jne
mov
jbe
out
jle
dec
imul
pop
pop
jb
adc
ret
jle
lods
sbb
gs
orl
fildll
mov
jne
inc
lock
orl
scas
add
pop
push
cmpsb
lods
addb
cs
cwtl
xor
xchg
sti
mov
and
leave
movsl
jo
push
cmp
mov
xor
jne
lahf
bound
jp
mov
xchg
insb
xchg
push
sub
adc
int
stos
jl
loope
outsb
xchg
ret
push
add
jmp
inc
fisubs
add
fadd
fdivl
jne
cmpsb
lahf
push
roll
inc
pop
imull
fistpl
pop
xlat
jl
loopne
or
xchg
cltd
adc
inc
mov
shlb
imul
jne
jg
repnz
pop
icebp
sbb
movsb
push
add
jnp
sar
inc
push
push
rorl
inc
push
mov
sbb
fiadds
repnz
shrl
mov
push
in
test
mov
sahf
jle
shrb
adc
outsb
ret
dec
mov
in
pop
cmp
xchg
xchg
test
shlb
xor
lods
scas
mov
inc
aam
and
ret
in
or
mov
cltd
sbb
push
adc
mov
xchg
incb
mov
xchg
jnp
jle
or
push
dec
ljmp
xlat
daa
adc
cmp
jnp
es
sarb
ljmp
sbb
les
mov
xchg
add
mov
xchg
mov
es
dec
mov
add
push
cwtl
add
sub
loop
dec
lea
mov
sub
int3
ret
int
cmpsl
insl
insl
test
call
fistps
clc
nop
cld
lock
into
std
ss
mov
push
and
xchg
ficompl
push
mov
xchg
xor
and
je
and
sbb
mov
push
mov
insb
fs
push
push
dec
rolb
and
push
jae
stc
jl
sbb
add
repz
andl
mov
xchg
cmp
mov
in
adc
loopw
mov
sbb
sub
lds
adc
call
inc
je
pop
ljmp
push
xor
aad
ja
out
inc
xchg
inc
inc
leave
sbb
int3
jns
cmpsl
or
sarl
mov
js
fucom
mov
out
cmp
pushf
inc
cmp
iret
ja
fcmovnb
jo
push
jmp
cwtl
xor
data16
mov
cmpsb
test
je
test
add
lds
in
ror
mov
dec
bnd
lods
xchg
into
outsb
lcall
jno
adc
aas
sub
lcall
push
int
ficompl
fwait
cwtl
mov
repz
int3
mov
gs
adc
dec
mov
push
mov
ja
stos
testb
imul
scas
xor
pushf
cli
orps
fmuls
movsl
imul
mov
adcl
inc
loopne
sti
pop
vxorps
loopne
xchg
xor
repnz
enter
mov
jae
or
pop
mov
loopne
fstl
adc
sbb
lods
in
sti
clc
jp
mov
mov
in
dec
lahf
loopne
jbe
js
leave
aaa
clc
sti
or
ja
imul
or
and
xor
pop
fwait
loop
pusha
js
push
push
cmpsl
andl
rolb
sahf
push
mov
xchg
imul
std
adc
xor
mov
xchg
sbb
test
rcrl
add
adc
insb
xchg
jo
push
add
sub
stos
fstpl
xchg
shl
lea
in
sbb
or
dec
lcall
ret
pop
xorb
lret
jp
leave
aam
popf
push
mov
int3
notl
shl
jp
popa
popa
inc
cmp
xor
add
inc
dec
loopne
push
inc
jae
cwtl
add
add
insl
pop
ja
jns
jmp
mov
mov
fldt
and
cmp
test
imul
clc
cmp
mov
shll
dec
adc
jl
loope
mov
rolb
push
mov
cmc
mov
or
sub
pop
icebp
pop
es
stc
les
or
jb
imul
pop
insb
and
sub
es
inc
lret
xchg
inc
lds
inc
add
loop
dec
jmp
repz
xchg
xor
or
and
out
xlat
and
mov
das
movsl
sbb
fimuls
sbb
jb
adc
push
adcb
ret
mov
jmp
int3
jno
cmp
mov
leave
mov
repnz
fs
mov
or
dec
popf
jmp
ret
cmpsl
mov
pop
push
movsb
lock
mov
jmp
add
sbb
mov
jge
inc
push
inc
mov
outsl
sbb
insl
cmp
add
es
push
fstps
mov
jnp
aad
inc
repz
je
dec
lret
mov
sub
pop
lods
cld
lcall
jae
scas
jae
xor
jbe
adc
sub
adc
fwait
adc
mov
or
ja
xor
pop
jg
loope
imul
pop
or
mov
fld
dec
sub
adc
loope
add
cld
xor
mov
jb
popf
sbb
cmp
outsl
jae
outsl
out
ret
pop
cs
data16
mov
clc
sub
loope
sub
jle
sbb
and
cli
sbb
pop
xchg
push
mov
sub
movsl
xchg
sarb
lret
xorb
mov
cmp
iret
mov
adc
and
mov
push
mov
and
scas
adc
into
test
adc
adc
mov
pop
cwtl
cmp
out
cltd
fwait
negl
and
adc
lahf
mov
sub
jns
sub
es
xor
push
sbb
jge
and
mov
pop
mov
or
fbld
mov
sbb
jmp
xor
fidivs
or
lods
imul
pop
faddl
in
xor
mov
fisttpl
cmpb
repnz
pop
pop
inc
cmp
jae
sbb
add
das
nop
sbb
mov
mov
add
mov
xor
insb
mov
loope
jns
leave
negb
mov
les
xor
lret
aas
jmp
rcrb
xchg
push
lret
jmp
pusha
shlb
jae
stc
testl
pop
je
aaa
cmc
les
test
ss
push
inc
pushf
aam
popa
push
xlat
out
stos
fwait
shlb
popf
dec
andb
lock
adc
js
pop
xchg
sbb
push
je
mov
andl
add
int
jne
test
icebp
add
sub
pop
xchg
cwtl
push
hlt
incb
sbb
or
andnps
jne
lret
mov
pop
andb
nop
jecxz
stc
pop
mov
xchg
bound
xlat
bound
mov
cmpsb
mov
aaa
shll
xor
je
push
or
mov
test
and
loopne
jno
lahf
stos
or
loop
lds
pop
jle
fbstp
imul
cmpsb
popl
mov
rorl
outsb
enter
int3
lods
call
push
sbb
rclb
dec
adc
ljmp
aaa
loopne
fsubr
push
lret
in
arpl
cmpsl
mov
fcoml
push
or
lret
test
xchg
js
lea
jg
mov
cmp
lea
popa
adc
hlt
and
popa
fs
and
cmp
stc
pop
cli
mov
fdivs
movups
push
dec
ret
loope
pusha
test
cmp
add
mov
insl
or
fstpt
cltd
inc
fbstp
push
sbb
sbb
sub
and
incl
mov
push
cmpsb
sub
push
cltd
xchg
mov
pop
fcomps
rcrb
test
and
into
jnp
inc
inc
test
out
push
test
dec
mov
xchg
movsl
xchg
repnz
mov
xor
jbe
mov
sub
adc
jb
or
cmovbe
sub
inc
rorb
cmp
jne
mov
pusha
loopne
jecxz
inc
pop
jg
out
fisttpll
fisubrs
aas
inc
inc
push
unpckhps
add
push
mov
mov
ja
xchg
add
push
ss
fcoml
ficoml
and
popa
dec
sbb
leave
mov
pushf
inc
lret
push
xor
clc
lods
movsb
gs
and
mov
add
push
cltd
fldcw
push
cs
movsb
out
sbb
push
push
loop
mov
pop
push
arpl
popa
push
mov
mov
push
addl
mov
daa
outsb
test
stos
inc
mov
lcall
mov
mov
call
cmc
or
int3
add
pop
mov
iret
ret
pusha
or
mov
sub
in
fdivrs
loop
xor
jecxz
xchg
cmc
or
cld
subl
arpl
mov
dec
mov
push
cli
enter
xchg
cmpsl
or
sbbb
sub
jecxz
cmpsl
dec
imul
jo,pt
pop
out
push
and
andl
lds
xchg
and
cmc
and
outsb
cwtl
jns
notb
ss
jmp
dec
xchg
and
pop
inc
pop
mov
mov
sbb
jmp
sbb
xor
xlat
cmp
test
outsb
gs
sub
shlb
out
sub
inc
stos
adc
inc
cli
push
sbb
in
push
dec
mov
mov
daa
inc
pop
mov
clc
lods
push
xchg
es
lock
jne
push
out
gs
popf
mov
jl
sub
lcall
rcr
jle
sbb
cmp
inc
nop
adc
gs
and
add
cmpb
lret
fidivs
sbb
cmpsb
ds
stc
xchg
idivl
add
outsb
cmp
fisubs
call
aam
jmp
mov
fwait
xor
jp
leave
das
xchg
adc
xchg
mov
mov
std
inc
lds
mov
pop
xchg
xor
out
pushf
lods
add
and
insb
sbb
not
sub
pop
sbbb
lret
push
loopne
mov
push
inc
enter
pop
mov
and
std
dec
testl
in
daa
mov
sbb
adc
mov
insb
xor
std
pop
dec
push
mov
xchg
mov
jb
mov
imul
lea
jge
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
jo
mov
jnp
pushf
jnp
into
push
xchg
sar
mov
push
sub
jno
dec
loope
sub
sub
mov
scas
and
xchg
lods
mov
jg
or
mov
or
mov
cltd
xor
pop
mov
fisttps
dec
mov
mov
fisttpl
mov
add
mov
cmp
cwtl
call
loop
mov
push
aaa
int3
and
mov
jmp
pop
adc
and
test
sbb
jno
xor
int3
loope
mov
cmp
jae
lods
jno
scas
sbb
pop
push
push
sub
cltd
loopne
loopne
sbb
xchg
fwait
adc
cs
leave
rcrl
adc
adc
stos
pop
or
fnstenv
sbb
into
addr16
in
jmp
jbe
fisubrl
les
push
loopne
mov
cmc
ljmp
stc
rcrl
xor
mov
pop
subb
cmc
jecxz
sub
lret
and
je
and
fcomi
lcall
cmp
mov
lea
fimuls
lods
repnz
inc
aas
sbb
pop
fsubrp
jb
jle
sbb
ja
loopne
jle
adc
mov
loop
dec
xor
in
add
aad
test
popf
adc
mov
fiadds
inc
mov
es
mov
pushf
mov
decl
lret
sahf
dec
cmc
out
xchg
fimuls
inc
jb
mov
out
mov
loop
pop
xchg
call
clc
gs
push
push
shl
pop
adc
pop
mov
inc
mov
mov
pop
das
push
or
inc
xchg
and
dec
mov
hlt
dec
push
loop
mov
pop
sarb
jg
xor
repz
add
mov
in
add
sub
call
test
shr
add
test
jne
cmpsb
add
cmpsb
dec
sbb
cmpsl
jae
stos
loopne
adc
jo
shlb
fldenv
pop
jle
xchg
mov
jg
sbb
out
sti
add
out
push
sbb
or
push
push
lcall
mov
das
shrb
push
ss
repnz
fnstenv
dec
rolb
test
test
repnz
shlb
lahf
in
int
pop
int
mov
fs
pop
or
cli
cli
or
repnz
sub
jl
and
lds
inc
jg
in
in
dec
rolb
adc
jp
sbb
add
in
sub
mov
ljmp
push
out
xlat
fs
and
loope
jno
jb
push
push
pop
jl
mov
rcl
pusha
lcall
lret
sub
sub
xchg
xor
dec
pop
adc
in
pop
push
inc
test
jo
mov
decl
dec
xchg
adc
cmp
jno
jnp
outsb
repz
jg
jmp
or
stc
xchg
pop
jecxz
cltd
fcompl
jo
inc
pusha
sub
adc
sti
std
sbb
scas
out
data16
mov
add
mov
notl
mov
ss
test
inc
inc
mov
mov
das
mov
lret
inc
xchg
dec
pop
jb
or
mov
idiv
dec
pusha
mov
add
pop
test
mov
xor
and
cld
pushf
sub
mov
sbb
mov
cld
push
adc
jns
mov
orl
dec
push
mov
jno
or
push
sub
sbb
xchg
mov
sbb
push
mov
das
fidivrs
push
out
xchg
pop
and
cmp
mov
add
xor
stos
lahf
mov
push
add
xor
cmp
or
aaa
aas
sbb
jmp
outsb
bound
push
unpcklps
movsb
pcmpgtd
or
lret
sbb
sub
mov
aas
xchg
mov
fs
cmpsb
mov
mov
add
push
or
push
std
shlb
movsb
xor
mov
jg
shr
jmp
neg
xor
fidivrl
rorb
add
xor
popf
cmp
inc
mov
cwtl
mov
inc
stos
jp
mov
jmp
sub
or
inc
addb
xor
pop
stos
fdivl
cld
mov
or
lods
dec
aam
popa
test
inc
test
cli
xorl
pop
movsb
bound
cmp
mov
add
ds
xorps
add
das
test
add
jns
cmp
jge
pop
pop
push
lret
jae
sbb
jb
add
inc
add
aas
mov
xchg
leave
mov
ret
test
jg
jecxz
mov
ficoms
mov
cmp
gs
ss
add
or
jl
repz
jg
push
movsb
add
out
out
xor
stos
cmpsl
or
xchg
cwtl
mov
sub
pop
clc
jle
test
aad
pushl
lea
lds
xchg
add
pop
stos
fdiv
sbb
pop
xchg
cltd
fistpll
ds
in
test
pop
icebp
mov
inc
lahf
int3
lahf
pop
or
inc
or
sbb
and
cld
movsl
push
insl
insl
jecxz
mov
repz
mov
adc
mov
leave
dec
jmp
sbb
mov
std
and
leave
data16
mov
cmpsl
xchg
pushf
ss
pushf
adc
add
jge
xor
inc
pop
push
andl
stos
mov
dec
dec
sub
adc
dec
jno
mov
add
rorb
jge
jo
inc
xchg
mov
cmc
loop
shl
rcl
adc
rcr
lret
push
cmp
sbb
jp
pop
mov
repnz
mov
push
loopne
sub
adc
or
fisubl
repnz
adc
insl
push
inc
aam
and
and
rol
sbb
jno
leave
sbb
dec
in
insb
inc
ja
scas
in
fwait
push
rcrl
std
movsl
loop
and
sti
and
pushf
das
adc
xchg
xor
mov
orl
insb
shrb
lds
jle
fwait
mov
out
xchg
push
das
jge
cmc
rorb
push
sub
sub
lret
stc
jle
dec
jmp
sbb
push
es
sti
mull
mov
add
mov
into
clc
pop
fs
fucom
insl
inc
insl
xchg
push
outsl
jp
mov
out
test
mov
jne
aas
movsl
stos
fs
push
xor
push
cli
test
mov
inc
enter
ds
sbb
cwtl
or
and
inc
pop
adc
pop
cmp
das
das
xor
push
and
cmp
jg
jg
add
int
xor
jmp
orl
ret
mov
xor
or
clc
and
lods
xor
cmp
das
in
outsb
or
incb
scas
xchg
or
mov
mov
lahf
push
pop
sbbb
mov
imul
fs
jmp
outsl
cltd
mov
mov
add
fisttpll
mov
push
mov
pop
bound
lods
stos
xor
ja
inc
stos
ljmp
and
int3
ret
pop
imul
or
stos
mov
fisubl
mov
mov
xor
scas
test
mov
std
sbb
lock
mov
cld
sub
stc
ljmp
jecxz
xlat
outsb
movsl
movsl
mov
pop
idivl
sub
xor
add
adc
adc
add
add
mov
icebp
ret
out
xabort
sbb
into
stc
cmp
in
icebp
iret
ja
mov
lods
enter
or
sbb
adc
sub
add
lcall
sar
je
loopne
xor
push
lock
mov
jns
mov
inc
push
and
enter
cmp
lret
or
popa
fdivl
stos
mov
inc
push
fsubs
enter
cmp
or
rcrb
dec
into
imulb
std
fistpl
cmp
jmp
in
cmpsl
mov
push
sbb
sub
cld
cmpsl
push
gs
rcrl
or
or
ss
mov
ljmp
scas
jno
in
ss
mov
cmp
or
pushf
inc
xchg
outsb
adc
sub
loope
mov
es
inc
pop
loopne
out
scas
repnz
fbld
jns
inc
sbb
cmp
push
jmp
xchg
pop
mov
shrl
call
pop
mov
dec
imul
and
mov
xchg
fsubrl
je
xchg
scas
mov
imul
and
loop
fisttps
xor
popf
jno
call
dec
sti
rcrb
push
cmp
mov
mov
popf
and
fistl
das
pop
repz
inc
push
icebp
inc
xor
fldl
ret
xchg
aad
lea
mov
bound
testb
jae
mov
dec
sti
fsubrl
pop
sub
add
pop
sbb
and
or
popl
test
push
or
sbb
sahf
jp
and
stos
sahf
lock
xchg
jo
pop
xchg
cwtl
jne
loop
jmp
xchg
lret
mov
cwtl
jno
jb
mov
mov
sbb
mov
sub
test
cld
dec
in
cmpsl
aaa
das
popa
xor
sub
lret
insl
mov
mov
xor
fwait
xchg
into
sub
cmp
xchg
rorl
cld
in
push
fwait
pop
mov
out
jo
bnd
sahf
xor
nop
lret
mov
push
push
mov
inc
cmp
jg
sub
das
sbb
or
lea
bound
cwtl
jns
inc
sub
xchg
insl
cli
cmpl
xchg
orl
bnd
aas
and
sbb
mov
loop
sub
fsts
stos
jg
ficoms
sbb
shlb
cld
sahf
shlb
scas
insl
xchg
add
fdivl
inc
cmp
divl
sbb
sbbl
arpl
jecxz
pop
insb
test
sub
mov
imul
dec
notl
js
xchg
dec
and
dec
pop
add
into
pop
jecxz
sti
repnz
add
jns
or
mov
lock
cmp
shrl
decl
sahf
lret
cltd
out
aad
mov
dec
lcall
mov
rcrl
lods
jo
push
cmp
pop
pop
jo
mov
mov
xor
adc
int
lods
pop
add
mov
xchg
cmp
lret
xor
insl
mov
dec
mov
push
daa
cmp
loop
adc
je
mov
frstor
fsubl
stos
and
sub
pop
movsb
fistpl
push
rol
pop
jno
xor
pop
lret
mov
push
in
in
js
push
mov
jnp
add
jns
mov
ficoml
add
rcrl
daa
scas
cld
icebp
das
stos
bound
xchg
push
fisttps
outsl
std
cld
adc
fldenv
loop
pop
insb
mov
das
mov
jo
xchg
xor
arpl
les
adc
test
lahf
cwtl
fimull
adc
mov
lock
or
inc
adc
mov
inc
jmp
inc
adc
xchg
xchg
jmp
or
js
outsl
push
and
mov
loop
orl
icebp
adcb
dec
cwtl
pop
mov
xchg
push
addr16
pop
int3
xor
popf
dec
dec
insb
enter
orl
xchg
push
js
ret
hlt
clc
ljmp
xor
push
loope
out
cmpsb
xor
out
pop
jl
jmp
push
xlat
push
pop
loopne
cmp
dec
dec
xor
mov
jp
mov
inc
inc
addr16
xor
mov
js
jno
mov
fcmovnu
mov
jmp
mov
je
mov
int3
imul
imul
inc
cmc
push
in
lods
mov
pop
stos
andb
xchg
mov
frstor
lahf
inc
imul
int3
fdivrs
mov
jne
sbb
sarl
cmp
lret
mov
or
addr16
lods
test
repnz
sbb
mov
jbe
into
mov
and
jecxz
xchg
or
aas
cli
arpl
pop
add
ds
out
repnz
pop
mov
rorb
sbb
in
add
subl
xchg
mov
aaa
and
imul
data16
adc
or
xchg
add
ss
outsb
scas
xchg
mov
idivb
lock
adc
or
inc
jg
xchg
xchg
add
lds
mov
push
sub
inc
mov
cmc
dec
jle
mov
sti
pop
int3
mov
test
mov
lret
outsb
xor
cmp
jo
xchg
scas
lock
xor
xor
aaa
xchg
pop
mov
cmp
incl
or
sub
or
movsb
lret
push
xchg
pop
in
aad
in
xchg
and
fstpl
imul
fimull
adc
popf
pop
pop
pop
fdivrp
pop
jmp
add
push
ss
ss
push
out
ret
or
jp
pop
jle
sbb
repnz
and
fs
pop
sub
jg
pop
mov
lock
sub
push
dec
xchg
mov
add
mov
movsb
add
sarb
aas
mov
or
mov
js
fdivrp
mov
fiaddl
mov
pushf
inc
inc
jmp
call
subb
mov
jecxz
and
jbe
cmp
outsl
sbb
inc
xchg
fisubs
subl
dec
inc
int3
sbb
aas
dec
pusha
ffree
sub
or
imul
stc
les
outsl
add
in
insl
lret
stos
mov
stos
fsubrs
push
mov
mov
sub
and
pusha
and
mov
sti
pop
packuswb
mov
imul
push
nop
loop
aaa
inc
inc
stos
sbb
and
mov
sarb
inc
lret
fdivs
sbbl
inc
and
lcall
loope
mov
ljmp
imul
ret
aam
cmpsb
pushf
loope
dec
inc
inc
dec
ja
jg
adc
pop
jmp
rcrl
stos
mov
stc
imul
loop
cmp
push
cmc
dec
mov
outsb
jno
sahf
clc
add
cmp
aas
sbb
inc
dec
mov
adc
repz
sub
lds
shrb
ror
mov
aaa
loop
bound
xchg
cmpsb
stc
insb
jg
jg
push
nop
popa
push
mov
fdivrs
daa
jmp
xchg
mov
std
ss
fs
jb
subl
out
jge
enter
mov
dec
cmp
jnp
add
roll
xor
pop
jbe
push
dec
push
sbb
mov
icebp
lret
cli
inc
imul
cmc
sbb
shll
leave
dec
mov
dec
fisubrs
shll
push
loop
ss
dec
movsb
daa
xor
test
lods
sub
das
lret
iret
cli
xchg
stc
lods
popa
xchg
aad
mov
icebp
inc
push
mov
into
mov
xlat
or
cs
dec
roll
sub
push
in
jno
dec
dec
inc
and
test
clc
jge
aaa
xchg
dec
mov
sbb
mov
arpl
inc
orb
out
add
mov
sbb
out
xchg
ret
pusha
add
mov
cmp
jnp
push
adc
adc
jmp
out
mov
push
loop
ljmp
sti
imul
sbb
loopne
xor
out
add
pop
or
test
cmp
sarl
jno
push
arpl
repz
sbb
sete
ss
aad
jb
add
in
adc
jmp
xchg
cwtl
adc
in
pop
push
mov
jne
out
xlat
scas
sahf
mov
negl
add
pop
xor
addl
inc
sub
xchg
jg
mov
shlb
test
outsl
cmp
or
push
movsl
add
adc
mov
cmp
mov
jo
xor
cmpsb
xchg
outsb
add
lods
sbb
inc
loope
ret
jb
scas
lds
cs
loope
ret
shll
dec
jnp
xchg
lds
mov
xchg
hlt
enter
jns
cld
ljmp
sbb
hlt
cmc
inc
cld
ss
test
outsb
push
pop
add
cmp
mov
jne
xchg
cwtl
pop
pop
and
pusha
jbe
mov
lock
cmp
cmp
inc
clc
js
pop
push
pushw
mov
xor
scas
fs
movsb
test
mov
lahf
pushl
nop
and
add
pusha
pop
test
jl
dec
lds
jnp
out
and
mov
inc
rcrb
jg
in
xchg
adc
out
adc
cmc
aas
dec
add
dec
inc
jecxz
js,pt
lea
fcmovnbe
xchg
mov
cmp
fisttpll
out
sub
or
jo
mov
out
jp
aas
jne
mov
or
cwtl
adc
das
in
fidivrs
sbb
push
mov
xorb
outsb
adc
fstl
mov
movsb
xor
add
jns
jl
sub
push
out
and
fisubs
fiadds
xor
test
mov
lahf
std
inc
xor
pop
xchg
mov
in
ficoms
out
push
pop
popf
jg
or
aam
fdivl
mov
and
frstor
adc
cwtl
rolb
inc
fnsave
jle
mov
lods
insb
or
xchg
pop
xchg
xchg
out
loopne
shlb
imul
inc
int
out
inc
and
adc
test
pop
jo
in
adc
lret
daa
js
pop
scas
fdivl
pop
add
cli
and
jecxz
ja
jmp
std
xor
arpl
cmp
divl
daa
jge
cmc
sbb
sbb
movsl
adc
xor
add
into
daa
inc
and
sahf
icebp
ja
int
add
jmp
repnz
inc
repz
pop
mov
daa
mov
repnz
jmp
fisttpll
inc
stc
loope
mov
mov
incb
push
pusha
xchg
lock
xchg
lods
insb
out
inc
imulb
mov
lods
pop
fiaddl
push
out
icebp
or
cmp
pushf
icebp
pop
mov
pop
inc
push
jp
popa
mov
push
fidivl
push
jnp
dec
inc
test
push
aaa
pop
adc
insb
xor
dec
pushf
call
out
sub
mov
push
cmp
xlat
nop
lret
cwtl
sub
repnz
ljmp
in
mov
mov
add
dec
shl
jo
dec
mov
lods
push
jno
lcall
push
and
push
xor
imul
push
ljmp
imul
cli
add
in
add
mov
imul
mov
sbb
loope
test
fmuls
int3
gs
lret
push
mov
push
adc
pop
or
in
in
rclb
sbb
mov
add
push
cmp
sub
xchg
adc
pop
push
inc
loop
xchg
xor
mov
dec
test
test
xor
mov
popa
or
shrl
jne
or
and
ret
and
xchg
mov
jno
fidivrs
clc
mov
add
sbb
push
scas
inc
repz
jp
pop
adc
or
jmp
addr16
cmc
hlt
mov
or
jp
repz
xor
mov
test
cwtl
jnp
pop
fnstcw
adc
in
add
add
pop
cmc
jne
in
clc
cld
fisttpll
test
loopne
rorl
aas
xchg
xorl
jno
movsl
and
lahf
popa
mov
push
fs
es
arpl
and
mov
cli
inc
mov
dec
cmp
cmp
mov
leave
add
xor
mov
push
inc
sbb
shrl
loope
add
shll
ror
add
lret
lods
add
jb
mov
mov
jp
sub
pop
cmp
pop
jmp
jbe
into
inc
jnp
scas
push
fsubl
sbb
or
or
add
bound
pop
in
scas
mov
jge
aam
in
lods
sub
psadbw
es
jno
addr16
aaa
xlat
test
xorb
mov
push
push
push
xorb
xchg
iret
dec
incb
adc
mov
push
mov
mov
out
jp
dec
js
add
nop
aas
stc
leave
adc
mov
je
pop
xchg
sbb
gs
cmp
lods
aam
xor
dec
andb
test
sahf
mov
push
data16
pop
add
inc
sub
insb
fdivrl
dec
pop
loop
es
lock
int
inc
mov
mov
iret
adc
scas
shlb
and
in
cli
int3
incb
mov
dec
mov
mov
push
add
imul
push
test
imul
lret
add
mov
or
adc
scas
xchg
sahf
outsb
mov
sub
sub
in
mov
js
adc
nop
push
cmpb
ret
cs
or
ljmp
inc
cmpsl
cmp
stos
insb
push
daa
data16
inc
push
xchg
jne
shll
stos
xchg
dec
and
xor
lods
sbb
push
in
mov
addr16
cltd
sar
ret
push
xor
in
push
imul
xor
cmp
add
aaa
add
xchg
out
or
movsb
clc
stos
jbe
scas
addb
mov
aam
pop
pop
scas
negb
daa
lret
mov
scas
fs
arpl
xor
add
push
mov
das
jecxz
movsl
cli
aas
adc
icebp
inc
add
xor
cs
cmp
inc
mov
and
sbb
pop
pop
adc
mov
icebp
push
sub
idivb
ror
jo
ss
daa
cmp
fnsave
cld
pop
outsl
fistpl
mov
repz
lods
xchg
dec
stos
or
cmp
ret
add
adc
scas
bound
adc
add
jle
std
add
movsl
ljmp
jge
test
sbb
xor
neg
inc
dec
pop
in
sahf
insl
inc
cmpsb
fadd
mov
clc
test
mov
mov
xor
clc
mov
mov
push
mov
out
scas
in
mov
fs
push
jnp
sub
dec
fiaddl
cltd
ljmp
push
mov
rorb
int
fwait
ret
pop
add
jnp
arpl
jb
mov
shrl
imul
xchg
pushf
add
jmp
mov
repnz
sub
ret
in
ss
cmp
cmpl
outsb
loope
adc
call
add
xchg
push
sub
out
repz
fucom
mov
stos
mov
cmpl
sti
stos
ljmp
mov
movsb
sbb
dec
and
xor
aas
add
ds
push
sub
add
flds
mov
push
mov
and
addr16
mov
add
and
or
push
and
adc
adc
pop
outsb
jp
mov
xor
in
sub
push
sar
arpl
or
sub
mov
and
fisubl
repnz
pop
daa
push
imul
and
loopne
cmc
xchg
lods
aam
jb
inc
push
mov
out
xchg
push
stos
fildl
and
popf
add
add
pushf
and
pushf
inc
insl
ja
int3
xchg
xchg
sbb
dec
and
pop
jg
icebp
fisubl
pop
mov
mov
or
xchg
dec
xchg
cmp
in
int3
jmp
mov
lret
mov
mov
cltd
lods
mov
out
stos
sub
and
call
lret
fnsave
cmc
dec
outsl
and
xchg
popf
sti
leave
mov
std
adc
jp
or
je
mov
or
dec
and
push
in
cmpsb
cmp
xor
mov
xor
ja
jp
push
xchg
movsl
lret
and
lods
sbb
repnz
mov
xor
pushw
iret
stos
push
lea
xor
outsb
push
pop
inc
in
cmpl
jnp
push
push
lods
adc
aam
fucomp
leave
fsubr
mov
inc
cltd
in
pushf
dec
fldenv
and
inc
rcrl
jp
cwtl
xchg
sbb
push
das
scas
shrl
aas
inc
repz
hlt
lock
aaa
or
push
aas
mov
cmp
das
push
aaa
push
mov
sub
mov
lods
adc
in
and
xchg
aas
cmpsb
loopne
cmp
insb
mov
scas
jp
mov
pop
sbb
lcall
pop
insb
mov
add
push
and
fstps
sbb
cmpsl
xlat
int3
ret
ljmp
mov
addl
cwtl
push
pop
or
jecxz
mov
mov
adc
cltd
call
sub
xor
add
sub
icebp
stos
out
inc
insl
xchg
jge
scas
push
test
and
and
dec
push
jp
in
xor
add
sahf
mov
sub
or
lea
stos
aad
sbb
lods
jns
aaa
jbe
popf
icebp
lcall
adc
or
je
or
inc
pop
mov
mov
notb
or
push
das
shlb
cmp
push
je
fsubrs
shlb
sbb
mov
lea
fwait
mov
imul
rclb
sbb
lret
sub
mov
dec
fucom
hlt
daa
add
mov
mov
fs
mov
aad
or
ljmp
out
push
stos
out
sar
adc
lods
arpl
push
cmp
rol
add
rcrl
push
adc
dec
and
cli
mov
call
fincstp
repz
push
divl
test
mov
mov
popf
out
xchg
hlt
lock
mov
pop
cld
push
sub
test
out
dec
imul
in
dec
out
xlat
leave
pop
xchg
jo
sarb
insl
xor
into
push
adc
sarl
and
xchg
enter
icebp
mov
mov
sbb
sub
nop
sbb
mov
fbstp
adc
or
andb
shlb
xchg
ret
or
std
push
jecxz
daa
dec
adc
or
inc
inc
stos
push
pop
dec
cmpl
sbbb
int
loopne
out
pop
xor
out
mov
jne
rorl
imul
in
jecxz
inc
out
or
roll
int3
test
xlat
mov
dec
nop
mov
add
in
sub
gs
mov
fcompp
xchg
mov
in
jmp
mov
orb
out
add
and
stos
sub
mov
inc
shll
add
adc
xchg
cmp
mov
in
call
in
dec
aam
sbb
or
dec
cltd
int3
and
mov
in
inc
popa
pusha
mov
aam
mov
inc
pop
pop
fdivr
out
hlt
leave
js
sub
roll
push
aam
and
and
cmpb
jnp
roll
mov
push
sub
ljmp
leave
int
jmp
ret
jp
jae
and
pop
or
popf
push
lcall
std
mov
dec
scas
loop
arpl
dec
xchg
mov
push
lcall
insb
pop
mov
or
lret
push
jl
movsb
adc
mov
popf
and
test
pop
or
sub
pop
and
into
pop
enter
and
jl
inc
jle
xor
pop
shlb
xor
cli
shll
xor
push
dec
mov
add
ja
sti
rorl
and
jae
into
pop
insb
and
data16
dec
pop
dec
pop
out
pop
and
pop
xchg
ret
mov
loope
adc
testl
pop
sub
pop
stos
adc
and
movsl
daa
arpl
outsb
and
mov
sub
inc
repz
mov
and
sar
int3
popf
pop
add
jnp
cmp
lods
xchg
sbb
mov
data16
or
xor
jle
not
or
adc
sbb
out
pop
loopne
mov
pop
shrb
push
push
leave
sub
iret
push
loopne
mov
fnstsw
loopne
js
adc
fstl
shl
nop
jnp
mov
lods
mov
push
das
rclb
xor
clc
push
lods
fimull
aad
pusha
sub
push
jmp
sbb
push
fcoms
fadd
repnz
xchg
in
insl
add
ss
sbb
mov
xor
pop
ds
dec
dec
mov
lret
jl
mov
jmp
rcrb
ret
jp
pop
cmp
fucomi
mov
and
ret
aaa
xlat
cmpsl
pop
mov
ffreep
fisttpll
enter
mov
xchg
sub
out
adc
push
test
aas
add
dec
imul
and
mov
arpl
sbb
xchg
add
sahf
cwtl
icebp
aaa
es
dec
cmpsb
lock
mov
in
push
jmp
mov
aas
in
mov
sub
subl
sbb
pushf
jb
add
int
insb
in
mov
aaa
sbb
or
int3
sbb
mov
add
clc
mov
cmp
inc
add
outsl
mov
mov
adc
push
je
or
in
inc
mov
xor
mov
dec
sti
xor
jbe
xchg
pop
cmp
xor
fistpll
cld
lods
dec
or
dec
arpl
sub
out
mov
jno
ds
leave
cs
sbb
lock
jae
aas
push
cmp
jecxz
adc
dec
mov
add
jo
orb
loop
rcll
ss
ja
pop
test
aaa
cs
jmp
adc
cmp
lret
adc
xchg
push
sub
mov
loop
sbb
push
xor
jle
je
insb
mov
loope
jae
fimuls
ja
ret
js
pop
add
ficomps
lret
xchg
add
add
dec
jae
icebp
mov
xchg
or
inc
mul
push
test
inc
push
inc
sub
push
xchg
fnstcw
mov
roll
fcomip
pop
cmp
js
add
dec
mov
xor
inc
jne
xchg
cltd
jbe
inc
loopne
mov
sbb
cmp
lcall
push
jp
adc
mov
cmp
daa
jbe
movq
push
pop
pop
iret
adc
out
mov
dec
dec
cmp
adc
sbb
mov
ss
out
adc
jae
xchg
add
push
addl
clc
es
std
mov
addr16
push
adc
dec
pop
divb
dec
push
lcall
fs
or
in
ss
sti
subb
mov
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
xchg
int
jp
rcrl
out
cmpsl
ficomps
add
mov
mov
fcom
jns
and
stos
mov
shrb
or
xor
arpl
pusha
pop
inc
and
push
jo
pop
rcrb
test
mov
mov
das
enter
cmc
testb
clc
es
push
sbb
sbb
fistpll
jo
or
adc
imul
in
and
dec
push
push
pop
pop
push
mov
out
outsl
mov
cmc
jmp
popa
and
mov
bound
inc
daa
mov
xchg
sahf
push
cmp
inc
sahf
enter
sub
cmpsb
hlt
cltd
sbb
adc
or
int
sub
cwtl
xchg
xor
xchg
add
es
sbb
sbb
sub
loope
inc
cmp
in
jmp
inc
mov
jbe
in
mov
mov
loope
leave
push
ja
pop
stos
push
ret
movl
jmp
pop
mov
push
test
add
shl
leave
in
push
cmp
push
lcall
xor
cmp
imul
adc
jp
ror
adc
xor
xchg
lea
gs
xlat
push
aaa
addb
mov
push
mov
aaa
out
movl
push
mov
adc
subl
rcrb
dec
and
cli
inc
cmp
gs
in
and
jecxz
fadd
lods
fsubrl
imul
in
int3
in
dec
or
ret
adcl
pop
inc
pop
neg
sbbw
cmpsl
inc
or
push
aad
and
mov
mov
pushf
pop
aaa
fiadds
sbb
mov
inc
call
pop
mov
or
fs
cmp
push
out
or
stc
push
adc
and
pop
fs
dec
mov
jno
cmp
mov
jmp
pop
les
pop
push
xchg
adc
mov
adc
scas
sub
push
and
adc
mov
jecxz
lret
cmp
jbe
pop
and
push
inc
lds
sbb
or
aaa
mov
incl
insl
adc
inc
bound
cmc
test
and
sar
xchg
xlat
mov
outsb
insb
je
inc
ds
bound
testl
not
mov
adc
fwait
mov
mov
or
lods
filds
pop
lods
jecxz
add
cmp
jecxz
jno
pop
xchg
mov
imul
fisubrs
sbb
test
aaa
mov
stc
add
fsubrs
mov
lret
cli
fsubl
mov
jg
cmp
movsb
mov
pop
sub
push
jecxz
lahf
fdivrl
sub
jl
stos
and
push
lds
mov
mov
and
mov
jnp
jns
jb
push
insl
jmp
and
out
lea
adc
mov
outsl
add
jbe
add
pusha
sbb
jo
sub
jne
mov
test
inc
fisubrs
push
es
cld
sbb
inc
addr16
cmp
sbb
shr
jne
dec
mov
dec
mov
sbb
sub
inc
add
mov
sbb
push
push
and
adc
pop
cmc
mov
in
add
scas
xor
or
iret
stos
and
fs
clc
aam
out
mov
mov
xor
fs
test
xchg
shl
mov
and
add
cs
jnp
popa
ljmp
ss
xchg
fs
lods
jge
and
xchg
andl
jno
sbb
dec
sub
push
mov
dec
shll
mov
into
dec
sbb
dec
std
sub
scas
cmpsb
lcall
lds
dec
add
pop
mov
or
call
and
pop
or
lahf
pusha
scas
jmp
insb
push
sbb
mov
cmp
or
or
inc
roll
ficoml
pop
xchg
cmp
inc
dec
jp
enter
mov
ljmp
ljmp
loop
xchg
add
inc
jle
cmp
add
loopne
test
jl
mov
mov
sub
push
subb
dec
mov
leave
jbe
add
jae
clc
loopne
xchg
pop
xor
fisubl
mov
leave
ljmp
push
and
mov
lods
mov
stos
arpl
lcall
mov
pop
xor
test
sub
mov
pop
test
adc
cmpsl
sti
dec
lea
iret
dec
inc
xchg
repnz
imull
sub
sbb
sbb
test
or
or
dec
inc
imul
test
cmp
and
cmpsl
shr
mov
push
leave
sbb
sarl
fwait
cwtl
aad
aas
popa
cmpsl
mov
shl
sub
scas
out
das
mov
xchg
pop
adc
es
mov
mov
jno
cmp
xchg
push
jb
cmp
cmpsb
shl
sbb
jne
inc
cltd
push
mov
push
scas
dec
jmp
shll
test
mul
xor
mov
in
jecxz
xor
mov
mov
das
aas
iret
pushf
inc
mov
arpl
xlat
aam
and
popa
xor
cs
adc
mov
ljmp
mov
js
lea
les
jg
cmp
push
imul
dec
dec
mov
loope
push
pop
dec
push
dec
in
mulb
xchg
xchg
ret
sbb
pop
mov
jp
sub
add
mov
sub
ljmp
or
add
or
ljmp
fmuls
mov
shll
xchg
xor
and
sbb
push
leave
cmp
jge
cmp
cmp
rcl
or
sbb
cmp
xchg
or
push
jmp
addb
jnp
aas
jmp
jg
test
loop
inc
mov
fdivrp
out
adcb
cmp
add
ficoml
into
sti
pop
cmc
lret
shll
rorl
inc
or
ret
mov
dec
add
push
outsl
sbb
popf
pop
jns
adc
or
test
aam
cmp
adc
mov
and
aad
pop
outsb
mov
jbe
push
pop
cld
aas
xor
pop
jbe
jbe
pop
xor
stos
into
and
or
or
mov
push
int
adc
mov
add
cmp
or
sahf
xor
mov
daa
in
out
inc
add
mov
dec
je
orb
mov
inc
lahf
in
inc
jne
clc
in
fimuls
push
dec
ja
test
pop
cmpb
sbbl
test
jg
arpl
repz
xor
dec
shlb
pop
mov
xor
push
or
daa
xor
hlt
sbb
xchg
jno
aad
push
lods
xor
imul
sbb
xchg
andb
xchg
sti
pop
sbbb
xor
adcl
push
sub
mov
xchg
les
test
xor
bt
jo
cmp
int
out
call
pop
mov
jns
gs
xor
mov
push
mov
xchg
dec
inc
adc
dec
push
scas
dec
jo
push
mov
push
pop
push
mov
aam
or
push
icebp
jns
fwait
roll
std
je
bound
mov
fisubrl
scas
outsb
call
sbb
mov
adc
cmp
mov
aam
repnz
fwait
jp
sbb
inc
outsl
xchg
outsl
xor
xor
jo
mov
xchg
cltd
pop
mov
pop
cs
mov
mov
push
pop
push
mov
dec
aad
lcall
lahf
in
inc
popa
out
clc
pop
pop
mov
out
mov
fadds
mov
adc
cwtl
daa
mov
jnp
mov
int
dec
push
lahf
jecxz
xchg
cmc
imul
aad
push
in
inc
inc
sub
xlat
pop
outsl
faddl
test
or
repnz
jae
or
xchg
popa
cmp
cmp
mov
xchg
sub
stc
or
pusha
push
pop
add
icebp
adc
push
pop
inc
jne
dec
cmp
sbb
out
pop
sbb
ss
pop
cld
in
js
std
jle
test
rolb
int
ret
dec
bound
jae
push
loope
movb
dec
sarl
lods
xchg
addr16
fmuls
out
les
add
js
rcll
sarl
lret
xchg
leave
sahf
and
inc
mov
fistpl
and
sub
mov
and
xchg
lcall
pop
xor
sbb
sbb
and
int3
enter
or
xchg
inc
xchg
rol
jo
out
inc
dec
addr16
pusha
nop
bound
mov
xchg
call
or
mov
add
push
push
cld
adc
or
and
dec
addr16
sub
clc
and
les
sbb
lea
cld
adc
lcall
lahf
ja
call
jge
sbb
sbb
jge
jl
lcall
pop
dec
xor
addr16
xchg
adc
popa
xor
push
stos
jo
xlat
cmp
subl
das
mov
mov
pop
stos
jae
js
pop
lcall
mov
daa
aad
leave
mov
test
xor
mov
jg
adc
adc
gs
pop
mov
mov
pushf
cmc
lahf
pop
xchg
push
xchg
aam
mov
aam
mov
iret
pop
mov
and
mov
and
out
cmpsl
inc
pop
add
sbb
adc
xchg
loope
lea
mov
jl
sbbl
jno
outsl
cmp
std
lcall
outsl
or
pop
inc
jecxz
adc
enter
xchg
mov
jne
stos
sbb
fdivrl
push
jno
xor
fwait
lods
push
mov
or
xchg
movsw
sub
jmp
shll
xchg
inc
aas
pop
rcll
ret
mov
inc
cmpsl
lret
pop
test
cmp
mov
jecxz
jnp
adc
and
or
dec
xchg
lahf
add
insl
xorl
and
out
adc
jno
mov
es
sub
insl
jp
cs
sbb
xor
bound
sbb
cltd
mov
or
push
pop
mov
push
loopne
mov
cmpsl
pop
and
dec
cwtl
jecxz
mov
sub
inc
stos
push
fs
cmpsb
es
add
or
sti
cli
es
sti
pop
rcrb
inc
mov
inc
lods
mov
cs
gs
into
hlt
lret
gs
aaa
cmp
cld
imul
dec
xchg
cmc
es
sub
scas
int
ljmp
mov
fstl
out
insl
jp
mov
fdivrs
test
fwait
mov
push
sbb
mov
sub
nop
adc
or
jl
das
xor
push
inc
mov
movsb
test
shll
out
pop
cltd
test
pop
test
mov
scas
pop
lret
jnp
test
dec
fnstsw
cmp
fsubp
or
lret
or
je
mov
inc
jge
xor
adc
adc
outsl
mov
jge
movsl
cs
aaa
mov
xor
add
arpl
loopne
push
je
jge
das
in
adcl
fistl
jns
out
aam
in
rcrl
int3
aam
or
mov
mov
pop
aam
hlt
and
jmp
add
ret
jge
jmp
addr16
fnstenv
in
xlat
ret
cmp
in
mov
jmp
fldl
int3
dec
aas
ficomps
cli
scas
jae
xchg
jne
fnstenv
cli
cmp
popf
fidivrl
dec
arpl
jnp
inc
mov
pop
jae
jb
js
pmuludq
std
outsl
fildl
gs
fwait
js
insb
sbb
mov
ljmp
and
loop
hlt
or
inc
cwtl
jno
add
and
push
jae
mov
add
xchg
aaa
mov
shl
dec
cld
sahf
iret
inc
cmc
stc
sbb
bound
rorl
mov
daa
mov
cli
sub
sbb
push
pusha
cltd
sbb
scas
dec
pop
xor
mov
jno
imul
popa
push
movsb
mov
out
xchg
cmpsb
inc
push
push
stos
dec
loope
clc
add
adc
xchg
mov
inc
movsl
adc
fdivr
insb
aas
jns
adc
mov
imul
out
cmpsb
sub
rol
jmpw
xchg
ret
mov
adc
dec
fisubl
sbb
jns
sar
repnz
sbb
adc
jge
lret
add
cmp
lret
jno
mov
and
scas
or
xchg
mov
pop
jecxz
pop
xchg
arpl
sub
xchg
fnstenv
cmp
xchg
push
pop
jno
int3
lea
mov
lds
outsb
ud1
js
pop
ja
sub
call
dec
into
sahf
out
int3
or
sbb
mov
stos
ror
mov
loopne
out
ficompl
sub
mov
sbb
test
movsl
jae
adc
cld
add
inc
aad
pop
fs
or
lea
in
push
adc
outsl
lahf
pop
push
pop
fwait
adc
movsb
mov
jle
pop
cmc
mov
jg
inc
mov
xchg
jne
mov
out
mov
nop
or
inc
out
inc
fcmovnu
or
pop
inc
and
fsts
add
sahf
adc
mov
xchg
or
or
jle
push
jg
popa
adc
movsl
ds
push
xchg
divb
and
cld
inc
pushl
sarl
in
lret
add
sbb
shl
xchg
outsl
imul
into
packssdw
add
mov
jnp
sbb
dec
cmc
push
xlat
jns
adc
lret
rcl
mov
dec
in
fisttpll
jnp
add
inc
jae
push
sub
scas
xchg
cli
sti
enter
dec
imul
push
arpl
in
pop
mov
jb
push
mov
fs
ja
fistps
jge
cs
subl
xor
sub
insl
mov
cwtl
xor
add
fsubrs
rorl
and
or
daa
andl
iret
icebp
in
stos
adc
push
sti
repz
adc
mov
test
or
mov
or
lret
stos
filds
in
inc
push
mov
mov
in
xchg
mov
cwtl
push
push
pop
jb
fistps
enter
sbb
repnz
das
repz
jp
inc
pop
mov
lds
mov
adcl
aas
mov
test
push
clc
outsl
aas
addr16
cmp
jno
push
mov
out
std
mov
sbb
inc
pop
aad
aam
lret
cs
inc
mov
xchg
sbb
sbbb
int
fisubrs
sbb
cmp
les
sbb
enter
or
cmp
jg
or
callw
loopne
test
fs
jp
and
out
xchg
push
cltd
test
gs
inc
sbb
jle
adc
sub
push
out
leave
jge
push
icebp
repz
xchg
iret
add
sub
imul
jae
cmp
cmp
pop
push
cwtl
sub
fdivrl
jae
int
sbb
fwait
push
aad
fldcw
fs
xchg
xorl
push
xor
fcoml
stos
lahf
sbb
mov
dec
and
xchg
cmc
push
into
jnp
pop
popf
mov
and
lods
movsl
movsl
add
pop
and
and
pushf
jae
lcall
jno
jmp
outsb
sub
pop
stos
jg
xlat
push
mov
popa
mov
movl
cmc
fidivrl
push
sti
pop
sub
xor
pop
xor
push
mov
sbb
lret
inc
into
repnz
loop
clc
jns
push
lahf
mov
ljmp
out
dec
cmc
outsl
loop
movsb
in
test
mov
mov
and
aam
jae
test
mov
lds
pop
and
lret
mov
imul
inc
mov
cmpsb
dec
cltd
jnp
ds
sbb
push
adc
cmp
and
out
xchg
mov
fidivrl
push
mov
add
mov
cli
repnz
pushf
cmp
das
dec
sbb
cmp
test
movsb
shlb
shl
sbb
icebp
xchg
inc
sbb
mov
in
sti
xchg
sbb
push
or
mov
stc
testl
mov
mov
fwait
push
and
in
add
dec
jmp
loopne
mov
shr
push
mov
dec
xchg
inc
xor
shl
loope
test
sti
fcmovnb
push
leave
stos
sub
ret
adc
ds
aam
jo
xor
shr
int
out
cmp
sarb
dec
insl
jbe
arpl
sarl
divl
mov
sbb
mov
push
mov
mov
pop
daa
cmp
jp
int
cltd
push
ja
mov
cld
jp
fs
cmc
mov
js
insl
mov
and
or
cwtl
mov
push
int3
mulb
inc
scas
imull
pop
jmp
xor
ljmp
mov
fistpll
pushf
outsb
cmc
and
cld
sub
jnp
xor
enter
mulb
popf
jne
clc
jns
pop
lcall
into
loope
inc
inc
dec
dec
adc
and
lds
xchg
add
sbb
jbe
imul
fsubl
mov
loope
dec
fnsave
xor
dec
add
fcoms
cmp
or
call
adc
sub
jnp
xchg
ds
lahf
adc
adc
sbb
test
xchg
pop
iret
jmp
jo
adcl
movsl
mov
enter
mov
mov
movsl
xchg
inc
adc
dec
and
shrb
aam
stc
pop
push
lds
icebp
out
or
loopne
test
cmp
push
cmp
pusha
gs
rcrb
add
enter
arpl
push
movsl
dec
pop
add
dec
or
xchg
xchg
std
pusha
adc
lods
adc
fidivl
mov
mov
insb
xorb
sti
jbe
mov
and
lods
stos
stc
add
mov
fwait
and
push
idivb
sbb
movsb
lret
or
cld
je
fildl
xchg
je
mov
cli
into
pop
inc
gs
push
xchg
cmpsb
loope
dec
pusha
sbb
dec
loopne
xor
push
test
rorb
push
in
mov
sahf
cmp
adc
testl
popa
pusha
clc
out
adc
sbb
xor
mov
clc
jl
jns
pusha
cmp
sub
jge
leave
bnd
scas
mov
pop
jle
divl
ret
cld
mov
push
pop
test
call
les
aam
mov
rolb
sti
xchg
popf
push
add
jge
pop
push
sbb
and
data16
pop
stos
fnstenv
mov
scas
incb
xor
xchg
cmp
nop
dec
inc
sbb
push
in
cmp
push
mov
sbb
and
push
cmpsl
bound
test
cmpsl
mov
pop
mov
loope
lcall
movsb
xlat
shlb
or
movsb
mov
inc
aad
sahf
or
sbbl
into
outsb
cmp
int
dec
inc
and
mov
dec
dec
push
push
xchg
jae
pop
mov
xor
push
clc
fcmovbe
mov
or
xorps
jns
fs
push
ds
test
lret
adc
outsb
jo
adc
mov
cwtl
dec
pop
xchg
ss
insb
out
ret
cwtl
jg
and
in
out
and
jo
cltd
xor
mov
jle
lods
xor
mov
test
inc
push
adc
lcall
or
or
fs
lret
je
repz
xchg
adc
jo
cmp
jl
and
mov
dec
dec
js
sbbb
dec
pop
je
push
jnp
aad
mov
pop
inc
jmp
imul
cmc
sub
adc
xchg
fdiv
mov
lock
adc
xchg
mov
inc
sti
xchg
sub
mov
or
mov
sarb
push
mov
shrl
aas
xor
dec
leave
imul
sub
add
push
adc
and
mov
sahf
mov
xchg
in
push
mov
sar
rcr
push
xchg
adcb
flds
insb
sbb
adc
xor
cltd
pop
in
lods
loop
xor
popf
hlt
or
mov
lret
imul
dec
loopne
imul
scas
or
dec
sub
fsubs
cmp
mov
push
jge
push
das
ja
pop
jle
pop
jbe
test
les
inc
out
mov
fs
or
add
push
fsub
je
jne
sbb
and
mov
cld
jle
imul
pop
and
sti
xchg
lret
sti
xor
mov
mov
mov
lahf
lret
xor
jecxz
push
cmp
sbb
jns
std
inc
push
fnstsw
test
dec
js
push
and
and
sub
inc
repnz
loopne
add
xor
jb
push
pusha
pop
std
decb
cmpsl
jb
jo
arpl
rorb
jle
sbb
push
mov
pop
mulb
aaa
push
mov
mov
jge
jne
mov
frstor
scas
aas
xchg
addb
dec
imul
or
jecxz
movsl
push
inc
sti
dec
daa
inc
cmp
test
dec
or
sub
pop
push
fsts
fld
add
pop
inc
enter
mov
fnstcw
sbb
addr16
xchg
adc
push
inc
jae
lods
stc
or
fsubl
sub
dec
jno
xchg
test
xor
enter
popf
and
adc
dec
xor
jb
jae
adc
sbb
in
add
push
pop
rcrl
dec
movsb
or
jo
jg
push
cld
push
push
xchg
xchg
cld
cmpsl
and
nop
push
rcll
and
mov
sbb
adc
sti
lock
test
das
lods
push
pop
adc
mov
add
inc
arpl
rorb
xor
adc
push
test
or
lds
dec
stc
shrb
jae
ljmp
pop
and
bound
or
mov
rcll
cmp
pushf
ss
and
les
stos
dec
push
inc
adc
arpl
pop
xchg
xchg
lcall
pop
jo
adc
xor
xchg
dec
cmc
inc
sub
ljmp
xchg
leave
push
pushf
into
push
cmp
mov
les
aas
in
mov
push
inc
hlt
cli
lret
inc
adc
mov
mov
lcall
pop
mov
xlat
int
nop
inc
test
outsl
xchg
jmp
subl
fwait
enter
ror
enter
add
inc
mov
pop
push
stc
pop
fs
push
daa
lahf
int
adc
flds
dec
cltd
rcrb
jg
mov
push
sub
cltd
addr16
sub
lahf
lock
scas
xchg
lret
add
inc
jle
or
fiadds
jge
pop
xchg
inc
sub
xchg
jo
add
les
outsl
iret
aas
cli
cmp
jbe
or
mov
mov
shlw
inc
push
add
popf
xchg
sub
test
jne
fs
pushf
adc
mov
and
and
pop
iret
cltd
lods
add
dec
es
pop
lret
pop
fidivl
popf
cmpsb
nop
inc
add
sub
xchg
mov
shlb
mov
repnz
xchg
cmc
movsb
fldenv
ret
mov
push
rcll
fwait
jae
out
nop
test
negb
icebp
iret
negl
pop
roll
cli
je
in
jns
fdivs
pop
jmp
adc
add
push
sub
popa
push
stc
push
bound
mov
jmp
pop
outsl
das
rcr
push
mov
xchg
stos
cmpsl
lcall
std
leave
sub
push
and
paddq
sbb
sbb
adc
dec
in
cmp
jo
inc
xchg
cltd
aaa
mov
in
mov
mov
gs
lods
mov
dec
push
and
jg
int
lods
and
push
lret
or
and
sbb
cmp
inc
pop
out
pop
es
xor
xor
lock
rcrb
scas
xor
movsb
xchg
in
jbe
or
stc
sahf
je
cwtl
sbb
adc
fadds
pusha
jg
sbb
xchg
popf
mov
push
and
stos
inc
xchg
repz
inc
stos
or
mov
mov
loope
and
mov
and
xor
or
adc
sub
pushf
loope
ret
push
adcb
std
and
out
es
inc
cltd
sbb
push
jne
or
or
jle
rol
into
nop
mov
fmuls
pushf
addl
movb
or
pop
cli
or
pop
xchg
scas
xor
pop
loope
pop
popa
int3
inc
out
dec
sbb
push
inc
xor
sbb
pop
lret
jnp
hlt
call
les
push
cmp
mov
add
sbb
pop
js
mov
sub
rcl
pop
adc
sub
std
fcomps
popa
int
into
mov
fs
fistpl
pusha
clc
adc
bound
fildl
enter
sbb
movsl
push
sbb
dec
adc
or
push
mov
xor
addb
nop
sub
fchs
pop
imul
pop
sub
popa
mov
xchg
nop
je
sbb
jp
sbb
repz
pop
inc
xchg
adcl
ret
cltd
xchg
push
mov
ljmp
test
pop
movsb
sub
scas
aad
mov
push
mov
xor
les
lds
xor
cmpl
sbb
push
mov
and
add
outsb
out
or
cmp
or
pop
cltd
lock
push
dec
shll
mov
loop
popf
call
imul
jl
push
test
jb
imul
mov
pop
push
inc
jg
sbb
sarl
xchg
adc
mov
xor
out
pushf
aaa
aas
popa
inc
pop
ja
fs
pop
scas
leave
mov
xchg
pusha
adc
cmp
cmp
aaa
sbb
out
sub
dec
mov
jbe
jmp
xchg
dec
cmp
cmp
mov
int
cmpsl
std
test
daa
mov
adcb
mov
cwtl
aam
enter
add
repnz
push
or
shrb
shlb
cli
pop
outsl
fs
ret
pop
sub
loopne
sbb
cmc
sbb
push
leave
cmpsb
or
xchg
add
push
xchg
ja
mov
jb
mov
mov
icebp
sti
push
sub
inc
lahf
sub
or
or
enter
not
add
jo
inc
call
mov
aad
sub
shr
push
addl
add
les
loope
in
sub
mov
mov
xchg
clc
lea
aad
cmp
push
clc
mov
or
fdivr
xchg
sti
faddp
sub
add
xchg
bound
movsl
fisttps
loop
push
sub
xchg
popf
add
sti
out
xchg
jns
xchg
test
xchg
cmp
jnp
inc
push
loop
inc
aad
mov
sub
and
aas
cwtl
push
lret
cmp
mov
pop
cwtl
xor
mov
mov
outsl
push
push
or
inc
les
mov
clc
sbb
xchg
flds
ljmp
fdivr
push
out
arpl
mov
xchg
mov
and
aaa
mov
push
in
push
and
std
add
leave
add
subb
js
mov
ljmp
shlb
mov
pop
jnp
xor
orb
repnz
or
rorb
stc
mov
jg
or
inc
xor
mov
std
sub
mov
clc
lock
sti
xorb
ljmp
cmp
cmp
pop
push
pop
adc
push
ja
mov
dec
mov
push
cli
jmp
insl
jg
adc
mov
xor
add
pushf
push
xchg
add
cmp
std
out
or
fidivrs
addl
inc
das
in
xlat
xor
and
cmpsb
push
cli
or
cmp
scas
xchg
and
dec
sub
rolb
lds
sub
mov
mov
stos
mov
enter
rcrl
mov
jl
aad
adc
scas
into
adcl
mov
mov
jle
jg
sarl
cltd
push
cltd
das
jl
adc
icebp
cld
jmp
lcall
in
fisttpl
rcrl
test
dec
add
imul
adc
mov
fildll
add
cmpsb
cmpsb
in
mov
and
add
cwtl
cmc
sub
dec
leave
cmp
mov
scas
xorl
movsb
rcll
mov
scas
lods
push
xor
pop
test
lret
sbb
add
jg
and
push
into
pop
mov
jl
lods
cs
xchg
push
int3
pop
jl
xchg
test
out
std
dec
or
icebp
sub
xchg
xchg
sbb
adc
mov
lret
sub
lahf
shlb
adc
lds
push
out
pop
adc
push
loop
js
call
js
mov
aam
gs
pop
jp
jmp
aam
jb
rorb
clc
pop
movsb
jne
adc
in
or
xchg
add
and
pop
data16
stos
push
pop
test
sub
push
sbb
sbb
adc
lds
cli
lea
lock
jne
jmp
and
nop
sbb
jecxz
sbb
jbe
das
ret
out
cltd
add
pop
mov
mov
idivl
out
movsl
insl
push
shl
aaa
cmp
cmp
sbb
inc
lahf
loopne
pop
sbb
jge
pop
fists
mov
xor
dec
add
addl
pop
sbb
jp
mov
in
ljmp
push
ds
test
jno
mov
xor
adc
pop
stc
add
cmpsl
and
popa
hlt
add
lock
enter
inc
sub
xchg
in
push
xchg
ss
mov
sbb
in
cld
pop
jmp
enter
mov
pop
int3
jmp
inc
xchg
push
dec
sbb
je
cld
pushf
jge
xorl
xchg
leave
mov
std
xor
pop
mov
dec
mov
jnp
jl
and
jno
jl
mov
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
sbbb
dec
mov
mov
fildl
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
