push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
sbb
fsubr
dec
aaa
push
jne
sbb
mov
mov
pop
orb
scas
mov
jnp
pop
jle
pop
orb
mov
xor
js
dec
jb
aad
jae
fbld
out
mov
jo
lock
or
cmp
cmc
rolb
mov
adc
push
adc
mov
pop
pop
push
pushf
sub
imul
inc
sbb
and
movsb
repnz
cmp
les
mov
dec
xchg
jbe
mov
lods
or
push
push
sbb
bound
push
jae
dec
sub
ja
cmp
aas
jbe
jecxz
xchg
or
inc
sarl
mull
xchg
sbb
and
fiaddl
sbb
sbb
out
xchg
add
ljmp
jno
dec
xchg
xchg
loope
inc
cmp
xor
push
xor
shll
add
loopne
mov
aaa
icebp
es
outsl
ljmp
insb
cmp
jb
pop
jl
inc
imul
jne
pushf
mov
lahf
sub
or
mov
cli
dec
addr16
fstl
dec
adc
jno
jbe
pop
and
adc
repz
adc
fcompl
and
ja
sarl
mov
jmp
mov
add
push
in
jb
lret
adc
jmp
sub
jo
leave
pop
sbb
mov
sbb
jns
ret
addl
and
mov
aam
xor
mov
fisubl
std
cli
mov
mov
push
sub
dec
push
push
xor
sub
outsb
xor
cli
aad
fisttpl
clc
lock
fwait
test
pop
sub
loope
inc
fs
hlt
push
lret
pop
mov
fldt
ret
add
xchg
imul
or
inc
mov
fimull
mov
loop
in
sub
sti
mov
loope
jb
mov
stos
incl
out
pusha
bnd
cltd
inc
stos
add
sub
test
mov
icebp
roll
pop
clc
pop
dec
imul
ja
in
pop
jo
jl
or
push
stc
shlb
mov
push
fs
mov
jmp
mov
imul
push
mov
add
js
jb
push
cmp
mov
popf
xchg
sahf
mov
les
adc
pusha
xchg
lds
shrl
and
addr16
dec
cmp
lcall
push
mov
dec
mov
jno
push
cltd
shll
add
add
hlt
or
xor
ja
fcmovnbe
mov
mov
icebp
dec
movsl
or
outsl
or
dec
push
out
xor
jae
cmpl
adc
ror
add
mov
jo
inc
cmpsl
cmpb
arpl
and
lea
scas
ret
fwait
je
adc
pop
rolb
inc
push
sti
icebp
mov
push
mov
aas
mov
cmp
and
jg
pop
jg
cmp
aam
or
call
mov
sbb
push
fidivrl
insb
ss
out
insb
int
cmp
data16
sub
int
mov
popl
sub
mov
mov
cld
pop
mov
dec
pushf
clc
repnz
mov
fldenv
sub
cmpsb
cmp
gs
test
test
sub
jmp
fucomp
cmp
rorb
in
ss
inc
sub
inc
xchg
das
inc
and
sbb
mov
sub
repnz
movsl
outsl
sbb
push
loopne
mov
mov
fwait
mov
pop
mov
xlat
adc
jae
push
and
bound
cmp
jle
cmp
decb
pop
fisubs
push
xchg
push
cmp
int3
jge
outsl
add
addr16
fcoms
fdivp
mov
and
cmp
cmpb
inc
jl
add
dec
xchg
push
adcb
jb
xchg
enter
ficomps
testl
mov
jge
inc
mov
cmc
xor
outsb
cmc
popa
sbb
movsbl
in
fucomp
mov
xor
out
lods
sbb
loope
ja
or
cmp
push
push
add
pop
lcall
xor
leave
sbb
add
out
cmp
jle
cmc
je
pop
cltd
pop
or
shlb
dec
ret
pop
sbb
xchg
ret
test
sbb
bound
or
push
push
sub
jnp
das
dec
lock
ss
and
popa
jne
adc
jle
pop
insb
call
xchg
aam
inc
or
mov
mov
inc
mov
inc
inc
ret
mov
rclb
xchg
jmp
push
dec
jge
adc
sahf
aam
mov
xchg
adc
js
add
notb
enter
adc
outsb
nop
adc
inc
mov
pop
stos
arpl
movsl
xchg
or
mov
and
sub
and
jo
out
out
add
inc
jae
inc
add
or
push
sub
scas
shll
and
adc
out
inc
mov
adc
cmpl
push
mov
adc
sarb
in
imul
fstpt
sub
arpl
pushl
jb
pop
push
popa
test
popa
nop
jmp
mov
mov
lret
pop
xchg
push
leave
outsl
repnz
inc
popa
addr16
out
add
mov
gs
mov
popf
mov
push
popa
dec
ljmp
pop
je
dec
iret
clc
sub
push
mov
imul
test
in
rol
push
xchg
sub
into
or
in
les
jb
sub
mov
add
cmc
fs
cmp
sbb
testl
sbb
ret
mov
scas
sub
cmp
call
pop
push
xchg
lock
pop
scas
push
sub
outsl
push
adc
test
pop
push
arpl
ja
arpl
inc
andb
or
xchg
sbb
test
mov
xchg
pop
jo
mov
jmp
jg,pn
test
les
xchg
mov
lret
cwtl
mov
cs
faddl
pop
xchg
dec
mov
mov
add
xlat
jbe
nop
jns
mov
mov
pop
in
mul
mov
out
test
scas
sbb
adc
enter
lret
in
sti
cli
cmp
imulb
push
inc
jne
mov
push
xchg
inc
dec
and
iret
iret
sbb
or
inc
imul
int3
sbb
and
mov
fisubrs
inc
jecxz
adc
and
add
stos
adc
mov
mov
jb
push
push
fstl
js
push
xchg
cmp
push
sub
or
mov
movsb
pushf
inc
ljmp
ss
cmp
ror
outsb
sub
mov
jecxz
xor
xor
xchg
mov
and
pop
loop
mov
jno
ja
mov
out
aam
cli
imul
stos
cmpsl
pushf
in
inc
push
push
jno
cmp
fildl
hlt
enter
sbb
cltd
sbb
outsl
xorb
andb
push
scas
in
dec
inc
xchg
inc
adc
les
cmpb
cmp
cmp
call
andb
dec
and
ss
lea
push
cmp
sbb
xor
dec
push
ficoml
dec
mov
pop
dec
sub
fldl
jmp
sets
xor
fidivs
xchg
dec
stos
jnp
mov
jbe
dec
bound
mov
and
dec
jmp
fnsave
in
fstpt
iret
or
jle
mov
shll
sti
jmp
sub
mov
imul
jne
cmp
addr16
or
or
icebp
add
rorl
adc
push
sarl
fists
imul
sbb
in
std
xchg
popf
dec
int
cmp
or
out
pop
adc
hlt
pop
dec
fld
gs
sbb
pop
test
cmpsl
xchg
mov
inc
inc
pop
cmp
repz
insb
mov
jle
adc
cmp
inc
xor
mov
sub
loopne
jl
subb
int3
andb
inc
pop
lcall
adc
in
mov
mov
sbb
or
pusha
lock
lcall
jle
fmull
in
cmp
lret
mov
xchg
aam
push
add
cltd
or
cwtl
and
mov
loope
mov
into
lds
xor
sar
xchg
test
mov
and
cmp
add
ds
jle
xor
into
sub
cmpsl
pop
mov
imull
lcall
sti
jns
dec
mov
sbb
cmpsl
or
scas
lcall
testb
and
xchg
sbb
sub
mov
mov
xchg
sbbl
mov
mov
aas
adc
outsb
pop
shll
mulb
cltd
jae
mov
lcall
xchg
adc
clc
add
negl
insl
or
shll
mov
adc
leave
js
mov
pop
cmp
aam
mov
dec
rorl
pop
stc
test
pop
cwtl
fs
xlat
xchg
in
mov
jl
rcrl
lahf
mov
cmpsb
lods
outsb
dec
lret
pop
clc
mov
outsb
pop
outsl
icebp
jp
dec
arpl
insl
aam
mov
int
jecxz
insl
shr
push
dec
mov
mov
int3
add
les
push
pop
pop
outsl
xchg
push
pop
imul
insl
jl
mov
xchg
aas
push
pop
ds
daa
jns
addl
into
into
jecxz
movl
loopne
repz
sub
inc
call
out
cmp
ret
and
mov
std
stos
cmp
dec
add
hlt
stos
pop
or
lods
imul
adc
test
and
jbe
adcb
loopne
in
push
push
add
xor
test
push
lret
fistpll
hlt
mov
popa
cmp
movsl
aas
shrl
jle
notb
out
cmp
rcrl
or
jecxz
stos
in
jp
cld
xorl
enter
xor
dec
outsb
pop
lahf
inc
ret
testb
pop
mov
sahf
das
sub
mov
or
test
xlat
dec
pop
lods
sub
and
dec
pop
faddl
mov
sub
mov
imul
fxch
loopne
test
lea
mov
add
cmp
inc
and
sbb
dec
shrl
xchg
repz
xchg
push
adc
into
or
xchg
xchg
sub
daa
mov
cmpsl
andl
setb
push
gs
js
cmp
push
or
push
dec
es
fwait
xchg
cwtl
stos
xlat
pusha
mov
jmp
pop
lcall
xor
cmpsb
add
dec
cmp
inc
movsb
rcll
stc
cmp
or
add
jl
fildl
cmp
out
mov
mov
mov
incl
lea
fiadds
sub
out
mov
loopne
call
xor
fs
fwait
dec
mov
sbb
mov
push
sbb
sbb
add
rol
js
sti
inc
xchg
bnd
dec
movsl
sbb
addr16
repnz
mov
loop
lods
fcmovb
pop
subl
sbb
pop
ja
adc
pop
leave
cmp
mov
rorb
or
sub
fs
adc
in
loopne
addr16
fistpl
pop
loope
in
xchg
out
sub
popa
jnp
scas
pop
pop
sar
nop
cmpsl
dec
mov
into
and
sbb
cltd
push
mov
cltd
jno
imul
jmp
out
sbb
xor
mov
pop
push
fildll
cmp
mov
leave
lods
pop
fdivl
adc
jns
std
ds
mov
lock
sub
je
ss
dec
mov
jns
cmp
lret
mov
mov
mov
popa
fmuls
sbb
lea
adc
dec
bnd
mov
fcom
mov
jno
xor
pop
idivb
xor
or
jge
lahf
or
fsubrl
jno
and
adc
lret
imul
ror
sbb
or
inc
test
dec
sbb
push
shrb
js
adc
cmp
adc
inc
jns
mov
inc
xchg
mov
inc
mov
test
mov
repz
push
cmp
enter
and
adc
in
and
loopne
mov
pop
inc
push
sti
sub
jp
lock
ljmp
dec
stos
push
out
test
sti
imul
push
jl
pop
psubusw
sbb
lods
push
xor
sbb
mov
adc
push
rorl
lret
mov
stos
mov
push
js
in
pop
imul
dec
lods
adc
or
fimuls
dec
xorl
stc
int3
fcomps
mov
sahf
pop
sbb
xchg
iret
lock
out
push
rcr
or
movsb
push
hlt
mov
in
aam
lcall
out
and
xor
gs
or
push
pushf
adc
es
jge
cmp
ret
sub
cli
pop
inc
add
fisubs
ss
ficompl
xchg
add
add
dec
push
hlt
in
xchg
push
mov
dec
xchg
clc
dec
stos
test
xor
add
mov
or
push
into
mov
dec
clts
dec
mov
addl
popf
sub
dec
inc
icebp
jmp
mov
popf
int3
in
push
inc
dec
mov
cmpsb
xchg
out
add
xor
mov
and
aam
lods
dec
clc
andl
outsl
cmp
cltd
repnz
pushf
int3
and
aas
enter
fdivrs
repz
lahf
xchg
shll
pop
cltd
mov
in
cmp
mov
sub
popa
lods
inc
mov
mov
mov
dec
gs
in
fnstcw
mov
fs
cmpsl
adc
push
xchg
pusha
ret
in
adc
push
push
sarl
ljmp
lret
lods
int
cmpsl
mov
jno
aad
es
sbb
add
adc
and
pop
shlb
sub
jae
jl
test
mov
lock
stos
adc
inc
or
mov
fcomps
jge
adc
or
adc
adc
dec
cmp
dec
mov
sbb
stc
jns
push
cmpsb
test
test
xchg
and
jo
xchg
xorl
lahf
jmp
or
jne
mov
in
mov
mov
sub
push
pop
addb
inc
ljmp
xor
sbb
js
out
ja
push
hlt
add
jo
mov
fdivl
pop
cmp
lret
aas
out
push
cmp
xor
movsl
ss
pop
pop
rclb
adc
inc
mov
pop
aaa
roll
mov
or
test
mov
sbb
add
pop
orb
and
loopne
mov
push
imul
adc
and
cmp
aad
mov
pop
jmp
jp
push
push
sti
mov
mov
cmpsl
pop
lret
loopne
test
add
and
inc
push
push
test
stos
fiaddl
shlb
jae
cmp
push
dec
mov
xor
clc
sti
mov
call
lock
out
outsb
and
sbb
pushf
sub
pop
pop
mov
pop
cltd
divl
xchg
and
mov
push
bound
jbe
stos
mov
out
or
and
aad
mov
xchg
cmp
es
stos
fadd
rcll
xchg
mov
call
loopne
jo
mov
push
es
dec
cmpsl
jl
cmc
iret
daa
lret
nop
inc
push
xchg
bound
lock
lock
sbb
mov
pop
aaa
lret
pop
mov
adc
sub
or
dec
or
adc
int
sbbl
xchg
lods
in
flds
or
jecxz
pop
imul
push
xor
mov
xor
cmp
scas
xchg
sbb
mov
and
push
push
xor
aad
dec
xor
inc
mov
popa
lock
repnz
dec
cmp
pop
push
jbe
push
fwait
lea
push
and
pop
jmp
dec
ficompl
mov
mov
icebp
lock
sub
adc
les
jnp
les
into
sbb
push
into
out
shlb
sub
aam
out
mov
ret
pop
fs
push
movsb
scas
jmp
cmpsb
aad
ret
sbbl
push
int
push
mov
sbb
push
or
rcrl
rol
mov
sub
or
push
push
mov
xor
repnz
pop
insb
fwait
xor
or
addr16
inc
daa
jae
rclb
aaa
call
dec
add
aad
pop
pop
mov
stos
push
jne
xor
cmpsl
add
or
test
sti
scas
pop
xchg
dec
arpl
cmc
cmp
mov
push
sub
xchg
cmpsl
pop
pop
sub
aad
push
adc
pop
xchg
inc
push
xchg
and
lahf
imul
pop
pop
inc
sahf
and
sub
addl
nop
sahf
inc
cmp
lock
faddl
dec
add
cmc
shl
idiv
dec
push
lods
lahf
jge
sbb
or
adc
call
add
xor
xor
cvtdq2ps
jno
cld
dec
lods
fxch
sahf
movb
cmp
pop
ss
aam
mov
inc
repnz
movsl
decb
push
aaa
stc
xchg
test
cmc
icebp
data16
mov
shl
jp
arpl
mov
add
sbb
test
xchg
dec
sti
push
cmp
test
push
inc
pop
mov
repz
xchg
xchg
jbe
testl
ja
in
or
jecxz
mov
add
or
lahf
nop
out
cmpsl
arpl
jo
fsts
jle
sub
jo
add
loopne
in
inc
push
inc
mov
rolb
xchg
mov
adc
add
mov
call
ss
xchg
iret
cmpb
sbb
dec
outsl
xchg
inc
scas
or
out
or
popf
repz
mov
loopne
xchg
jl
push
fwait
addb
xchg
sub
adc
mov
xchg
dec
jg
rorl
sbb
jbe
inc
xor
movsl
and
das
cltd
inc
cmc
ljmp
jnp
movsb
stos
ret
xchg
das
mov
stos
ss
lcall
fwait
call
or
stos
pop
inc
mov
es
lret
cmc
jae
cltd
cmpsl
ret
or
sbb
mov
mov
xor
xchg
repnz
pop
jmp
outsb
fnstcw
push
push
xor
pop
mov
inc
push
repnz
dec
or
xor
pop
add
or
jae
addl
mov
add
out
adc
movsb
fs
and
sbb
jecxz
pop
pop
pushf
jl
iret
dec
push
sbb
cmp
jecxz
lcall
dec
mov
in
add
lret
aam
jl
mov
jge
int
sti
cs
adc
movsl
pop
jle
cmp
mov
aam
addl
in
mov
cltd
pop
lods
ja
rcrl
roll
mov
stos
sub
sahf
in
xchg
pop
dec
pop
sbb
loope
adc
fisubl
test
in
cmp
or
mov
cmpsb
fldt
inc
xchg
lods
mov
shll
sbb
jno
shr
test
stos
push
xorl
mov
adc
xor
js
or
ja
push
ret
in
sub
jo
xor
test
cmpsb
in
push
xchg
dec
ljmp
inc
sahf
mov
fiadds
or
xchg
push
cmp
mov
adc
and
pop
and
enter
add
sbb
das
xchg
cmpsl
aaa
adc
rcll
lahf
iret
insl
cld
fcomps
xlat
std
lret
or
mov
jne
fmull
dec
aaa
sarb
cmp
ja
jbe
dec
jo
loope
jae
xor
mov
insb
sbb
and
and
cmp
aaa
mov
outsl
or
xchg
mov
push
ja
add
fdiv
sbb
mov
push
pop
push
les
mov
jne
je,pn
pop
cmp
mov
mul
inc
stos
cli
adc
loopne
lahf
repz
in
adc
jecxz
push
ret
xchg
lret
jb
mul
jne
scas
call
xlat
jle
aas
popa
dec
mov
imul
sbb
xchg
mov
dec
push
ds
mov
mov
xor
cmp
iret
idivb
push
jb
loop
sub
mov
push
xchg
ja
jl
imul
aad
and
imul
out
movsb
lods
fidivs
pusha
inc
sbb
insb
or
xlat
jno
fwait
pop
lret
mov
fadd
loop
add
xchg
test
dec
cmp
adc
cmp
and
loopne
cmpsl
pop
mov
mov
xchg
xor
notl
es
push
pusha
imul
imul
cmpsb
inc
and
fnstsw
movsb
sbb
shll
in
or
xor
jnp
xlat
mov
inc
fiadds
gs
add
repnz
js
sbb
mov
out
loope
jmp
aad
cmp
mov
adc
idiv
push
mov
decl
out
aam
inc
or
cmp
scas
out
cmp
dec
out
cmp
jno
orb
cmp
xchg
dec
repz
sub
and
jns
mov
inc
pop
pcmpeqb
sub
pop
outsl
push
divl
mov
cs
sahf
push
mov
cld
mov
pop
inc
loope
sbb
or
mov
mov
lods
adc
adc
scas
loopne
dec
bound
add
fimuls
cltd
dec
xchg
mov
sbb
jno
xchg
jnp
inc
fsubr
arpl
aam
repz
ss
mov
adc
adc
loope
popf
stos
pop
int3
ret
pop
shlb
pop
adc
pop
rcr
lods
ret
mov
inc
adc
imul
out
in
add
lahf
stos
out
xchg
add
enter
insb
fldcw
mov
mov
add
fldcw
das
jmp
xor
aam
and
into
lahf
xor
loope
sqrtps
in
add
sahf
lds
imul
push
daa
adc
or
iret
aas
mov
xor
aaa
fst
icebp
pop
push
cmpsb
popf
mov
inc
int
aam
pop
mov
mov
lret
subl
nop
pop
movl
data16
mov
inc
push
push
repz
pop
fldcw
mov
push
sub
lcall
inc
ds
or
mov
fs
inc
mov
mov
testb
mov
xchg
push
xchg
repnz
outsl
dec
lret
cmc
cmpl
pop
cmp
sub
and
push
jp
cmc
sarl
loop
mov
push
jns
mov
mulps
jbe
fstp
movsb
push
daa
lcall
lret
fistps
rsm
fs
cltd
push
mov
pop
push
and
or
or
ss
inc
xor
imul
cmp
rolb
mov
imul
inc
mov
std
mov
lds
and
jge
push
pop
or
ja
xchg
xchg
add
adc
dec
jecxz
aad
adc
mov
xor
addr16
lea
cmpsl
cli
dec
cmpsb
xchg
inc
xor
ret
cmpsb
inc
rcrb
xor
lea
inc
clc
add
lea
idiv
ja
scas
mov
fmull
add
sub
inc
fiadds
ficoms
push
and
adc
jp
inc
enter
subl
pusha
sbb
inc
jg
and
mov
xchg
dec
cmp
dec
imul
stc
sub
les
add
push
arpl
pop
jno
gs
lcall
lcall
testb
mov
lcall
insb
gs
sarb
fwait
rep
pop
sahf
cmp
push
leave
orl
push
dec
cmp
repz
sub
fildl
xchg
clc
jne
sub
aad
inc
jne
push
sbbb
mov
leave
xor
mov
adc
sti
sbb
xorl
movsb
cmp
sbb
jmp
push
pop
or
daa
pushf
subl
outsl
mov
pop
mul
ds
jae
and
pop
jmp
lcall
fisubl
inc
xor
xchg
into
pop
enter
mov
xor
jmp
push
sub
adc
test
sarb
jb
aaa
daa
xchg
push
in
and
je
psubusb
lods
arpl
or
outsb
mov
pop
or
push
popf
inc
aam
jl
and
or
and
push
outsb
jbe
jp
jne
hlt
dec
mov
in
fwait
cld
xchg
dec
push
scas
test
loopne
add
imul
mov
mov
sub
jge
adc
or
popa
jns
mov
ret
stos
push
push
jnp
sub
push
fucom
test
aad
or
and
cld
xchg
std
xor
aaa
cmp
xchg
mov
das
mov
cs
pushw
xchg
aaa
je
adc
sub
push
imul
fmuls
cltd
call
push
mov
and
div
ret
shlb
mov
push
mov
scas
cs
mov
ds
cmp
lcall
and
movsl
jne
sbb
scas
lea
and
test
mov
stos
push
xorl
push
xor
adc
daa
fstl
bound
lods
cmpsl
cmpsl
add
movsb
faddp
pop
push
push
jnp
and
sbb
push
hlt
xor
rclb
leave
ja
jp
loope
fs
pop
gs
repnz
movsl
sbb
repz
inc
dec
inc
scas
push
cmp
stos
ret
jo
das
inc
xor
cmp
movl
lea
push
mov
cmpsl
or
fwait
push
aam
aad
stc
ds
in
sub
popf
cld
sar
jno
dec
bound
clc
les
mov
sbb
xchg
mov
xchg
dec
sahf
or
outsb
add
bswap
sbb
iret
adc
lcall
hlt
xor
in
insl
pusha
add
and
dec
jg
dec
mov
xor
mov
test
shr
add
jmp
dec
cmpsb
xchg
divl
cmp
lret
sub
movsb
pop
notl
adcl
and
lret
or
jl
or
fildll
mov
mov
dec
push
lret
rorl
movsb
pop
sbb
pop
sbb
and
inc
inc
inc
jmp
mov
lods
stos
push
mov
pop
mov
pop
pop
ss
int
jnp
adc
mov
aad
pop
push
add
pop
lahf
aam
lahf
mov
fcmovne
test
adc
ljmp
das
push
add
aad
push
je
aas
and
scas
xchg
adcl
push
mov
pop
outsl
out
pop
test
adcb
js
test
mov
or
fadds
or
jle
enter
lcall
adc
mov
cld
mov
js
addr16
jle
dec
leave
out
pcmpgtw
mov
and
adcb
mov
movsl
shrl
mov
pop
mov
cmpsb
xor
push
in
xchg
imul
cmpsb
adc
and
jle
fidivs
daa
lock
dec
xor
sub
and
jge
jmp
xor
jp
mov
daa
imul
pushf
mov
addb
or
xchg
loope
lcall
inc
rcll
and
gs
movsl
dec
or
add
adc
es
imul
sbb
pop
cltd
add
repnz
sahf
cmp
add
rolb
mov
xchg
inc
jecxz
dec
xcrypt-ofb
cmpsl
sub
jns
lahf
or
insb
or
cmp
loopne
dec
and
xlat
scas
or
ljmp
mov
into
popf
fs
jns
adc
push
mov
or
add
imul
push
outsb
push
gs
push
cwtl
xchg
adc
jg
outsb
sbb
fwait
out
push
inc
mov
sti
rcrb
leave
movsl
out
pop
add
out
lcall
mov
xor
scas
and
add
and
jne
pop
sub
in
adc
mov
into
mov
shrb
cmp
call
mov
add
loopne
or
jno
pop
popa
add
mov
lret
mov
ret
pop
dec
sub
data16
pushl
test
fldenv
daa
push
bound
shlb
fcompl
push
xchg
stos
lds
xor
jl
int3
mov
and
addr16
cmp
ficomps
aaa
cld
iret
xchg
xchg
push
andl
test
in
mov
xchg
adc
xor
pop
push
les
pop
or
sbb
sub
pop
cli
add
push
popa
inc
push
and
pushf
out
adc
mov
data16
cmp
in
out
into
lock
fldt
jmp
insl
cmp
lret
aaa
add
push
push
adc
dec
pop
mov
mov
sbbb
xchg
iret
fidivs
je
and
fstps
mov
dec
ds
popf
test
jne
cli
sub
dec
mov
stos
aaa
out
cmc
jg
fsincos
adc
cs
imull
outsl
jecxz
divb
insb
pop
jae
mov
pop
fists
cmp
sub
cmc
mov
push
jae
push
inc
cli
cmp
adc
and
mov
inc
outsb
or
sbbl
jb
into
je
mov
push
out
insb
jae
mov
test
icebp
dec
mov
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
leave
enter
pop
jp
or
jp
cmpsl
dec
mov
nop
jo,pt
inc
xor
loop
aad
jge
imul
loopne
adc
imul
btc
inc
and
call
xchg
in
lret
fsubrl
inc
sbb
and
pusha
fnstsw
rcrl
xlat
roll
test
sbb
cld
cmp
pop
adc
xor
sub
jp
scas
or
xorb
cwtl
add
sub
and
inc
jg
fnstenv
push
mov
into
xor
sub
cmpsb
arpl
ja
rol
xchg
mov
ret
mov
sub
xlat
insl
adc
jl
test
push
jns
cld
adc
push
add
out
adc
xor
dec
xchg
xor
mov
mov
imul
idiv
mov
jp
mov
jecxz
nop
pusha
or
fnstsw
iret
or
add
je
xchg
js
ret
stc
test
push
jnp
or
pop
loop
cmp
add
lds
mov
cwtl
mov
gs
jg
adc
cmpsl
add
and
imul
or
dec
ret
mov
fs
sub
scas
lret
test
repz
in
mov
ror
sahf
mov
imul
icebp
pop
shl
sbb
popa
stos
repz
sub
repnz
inc
mov
xorb
jg
loop
inc
pop
cmp
outsl
sbb
scas
push
mov
and
cmc
flds
in
ret
add
aas
sub
adc
mov
xor
dec
pushf
ss
jns
repz
xbegin
xchg
add
cmp
icebp
out
in
nop
popf
or
mov
sbb
mov
shr
inc
lods
sbb
pushf
enter
int3
mov
pop
adc
dec
xor
adc
adc
in
pop
idivl
loop
cmp
cmpsl
pop
cmp
pop
adc
enter
and
sbb
sbb
ds
or
inc
int
mov
lahf
sahf
jg
xor
pusha
dec
movsl
pop
ljmp
ljmp
hlt
or
push
insb
sbb
mov
and
cmp
pop
xor
cmp
push
into
aad
push
rclb
in
mov
mov
pop
es
lock
sbb
leave
sub
in
sbbl
lock
out
lock
mov
pause
adc
sbb
mov
scas
push
nop
cwtl
pop
ret
push
or
sub
mov
jg
cmp
cmc
das
or
adc
fstpl
insl
cmp
dec
vphadddq
in
push
mov
push
adc
pop
add
repnz
mov
pop
jo
cltd
xchg
push
hlt
add
xor
sbb
dec
fisubrl
pop
push
pop
dec
gs
enter
mov
out
mov
mull
fdivrs
sub
cmp
mov
out
jo
cmpsb
mov
icebp
jle
xchg
ret
mov
sti
mov
jbe
sub
mov
jg
xchg
xor
cmp
xchg
out
fxtract
icebp
mov
dec
sbb
enter
mov
jne
xor
mov
fiadds
dec
pop
mov
lcall
cmp
jo
sub
xchg
loopne
fiaddl
xor
xchg
cmp
andb
icebp
cli
xor
mov
into
clc
add
jecxz
scas
mov
pop
jl
pop
jbe
outsb
cwtl
adc
or
inc
inc
js
pop
pushf
ret
lcall
mov
lea
sbb
adc
outsb
jmp
dec
inc
jp
jno
cltd
mov
out
in
test
cmp
not
test
int
cld
ljmp
and
pushl
frstpm(287
popa
push
rclb
das
mov
ljmp
inc
pop
mov
mov
ficompl
adc
cld
daa
loopne
push
in
dec
xor
lret
mov
sar
bound
rep
movsl
dec
pop
jb
jbe
xchg
dec
adc
sahf
loop
xorb
ja
bound
enter
stc
scas
jg
hlt
mov
imul
scas
pop
push
or
in
jne
inc
jl
xor
mov
aam
cmp
adc
mov
or
jb
or
inc
leave
dec
mov
out
in
fisubrs
pop
sub
aam
test
scas
sbbb
mov
or
fstl
jb
xchg
xor
data16
jg
pop
ds
push
pop
dec
sbb
jns
mov
jno
sbb
ja
jo
aad
xchg
push
loope
stos
sub
xor
sbb
pop
or
pop
pop
dec
add
dec
dec
mov
and
push
jmp
push
int
stc
decl
imul
lock
push
push
xor
cs
mov
mov
jmp
pop
jno
add
orb
or
out
cmc
and
mov
pop
es
lret
mov
outsb
movsb
xlat
std
stos
add
mov
or
jp
mov
xchg
pushf
ret
fcomp
jbe
les
sub
jmp
inc
and
pop
xchg
mov
leave
xchg
and
stos
mov
out
mov
cmc
fsubr
notl
dec
test
mov
sub
out
jo
sbb
frstor
iret
mov
outsb
ss
cwtl
sbb
shlb
sahf
add
in
lret
sbb
sub
icebp
mov
mov
ljmp
inc
sub
push
dec
iret
xor
sub
rorl
cwtl
mov
in
sub
push
iret
mov
scas
push
scas
and
test
inc
cmc
adc
cmpsb
mov
mov
adc
cmp
xchg
pop
cmp
xor
xor
nop
inc
ret
dec
test
cmp
adc
xor
into
mov
push
xor
sbb
or
imul
inc
cmp
inc
lds
xchg
sbb
pop
nop
negb
push
popf
xor
aad
lock
in
push
jne
xchg
jns
shrl
jb
ljmp
mov
cmpsb
dec
and
fucomip
dec
sti
mov
mov
mov
xchg
and
inc
xchg
icebp
mov
dec
popa
mov
push
cmp
fadds
in
jg
flds
rclb
push
sub
addr16
es
aaa
ds
cmpsb
add
fadds
pop
out
mov
xlat
lret
fiadds
aaa
mov
or
les
pop
sub
stc
add
adc
push
jl
fwait
lahf
out
ds
lea
mov
rcrl
fcmovb
mov
nop
push
inc
xor
es
xchg
test
cmp
inc
aas
sarl
dec
lcall
insl
std
sub
jo
out
out
ret
jmp
aaa
sahf
push
lock
and
and
roll
pop
push
jge
lea
outsl
push
pop
adcb
fmull
fstp
xor
or
dec
jb
jg
out
jg
mov
std
mov
push
roll
rorl
cmp
lods
inc
les
jne
inc
add
int3
sarl
xchg
cmpsb
scas
jb
xchg
mov
add
icebp
aas
aam
test
clc
cmp
mov
xchg
jg
xchg
dec
push
cmp
mov
pop
dec
rorb
dec
adc
lods
stc
sarl
icebp
outsl
cmp
mov
inc
pop
mov
imul
sub
sub
cmp
loopne
adc
sbb
dec
scas
pop
icebp
lcall
dec
mov
cmpsl
sub
in
shll
mov
div
out
cmpl
in
insl
sub
sbb
loope
addr16
jne
aaa
addr16
mov
or
push
add
cld
push
lock
sub
inc
fcmovb
add
les
fs
jl
jl
repnz
js
mov
cmp
pusha
xorb
sub
mov
lods
pop
bound
xor
xor
add
aad
or
cld
sti
sbb
jle
test
mov
dec
mov
push
push
mov
adc
jno
push
addr16
mov
mov
fs
outsl
scas
sub
in
ja
mov
test
sbb
in
jns
cmp
cs
dec
dec
pop
in
ret
dec
je
and
cmp
shlb
nop
dec
push
fnstcw
mov
inc
out
ljmp
in
gs
jnp
sub
xchg
jb
sbb
loope
enter
cmp
jmp
cmp
arpl
mov
orb
xchg
or
pop
stos
mov
dec
lahf
inc
and
pop
and
xchg
js
push
repnz
xor
cmp
jo
dec
add
push
pop
dec
push
js
movsl
push
fwait
mov
test
jnp
ret
mov
ret
cmpsl
pop
scas
sbbb
mov
push
cltd
movsb
adc
shrl
push
pop
cld
and
mov
fstpt
add
mov
mov
cmp
aas
jo
filds
dec
fiaddl
push
jle
pop
push
mov
fsubrs
cmp
insb
mov
jns
rcrb
fists
cld
xor
add
repnz
jge
sub
mov
js
nop
sbb
shll
fldt
jle
push
jmp
movsb
aad
imul
push
or
pop
add
mov
and
loop
sbb
addl
das
inc
bound
mov
mov
push
push
pusha
mov
add
sbb
pop
mov
mov
mov
mov
addr16
jmp
inc
cmp
mov
push
xor
pop
ljmp
and
mov
or
dec
test
lahf
shl
test
outsb
ffree
pop
leave
mov
loopne
push
xor
sbb
xchg
outsb
jo
push
mov
pop
lea
pop
pushf
insl
cmp
out
ficoml
adc
xor
movsl
dec
cs
inc
je
cmpsl
pop
dec
and
fwait
mov
into
push
push
mov
adcb
jl
test
adc
jb
std
hlt
inc
xchg
fsubrl
dec
xchg
mov
sbb
add
xor
mov
mov
and
les
pop
pushf
outsb
xlat
lods
lock
adcb
inc
sbb
pop
jge
inc
test
in
sbb
mov
imul
push
inc
and
or
mov
call
roll
jbe
sub
clc
lds
movsb
test
dec
lds
xchg
movsl
xchg
test
adc
fisttps
inc
cwtl
cmc
jl
lret
fwait
push
cmpsb
jecxz
jno
cltd
test
and
cmp
iret
js
cmp
popa
pop
cmp
and
mov
insl
jae
clc
call
cmc
test
std
rolb
lods
sti
mov
adc
or
loopne
das
sbb
dec
adc
mov
pcmpgtd
out
in
and
and
jl
adc
push
pop
mov
xor
loope
mov
aam
cmp
fldenv
cmpsb
adc
cltd
adc
sbb
adc
xchg
dec
mov
aas
rcr
jp
mov
adc
jo
mov
inc
ljmp
pop
xchg
fabs
mov
or
test
mov
rcrl
aaa
xchg
mov
mov
sub
sar
aaa
ffreep
test
xor
cs
push
mov
mov
inc
mov
das
cs
ja
lcall
cmp
int
sahf
mov
xrelease
inc
push
imul
shlb
pop
push
cmp
std
adc
les
push
inc
cmp
ja
roll
and
loopne
test
mov
lcall
pop
imul
push
stos
jb
sub
loope
push
mov
mov
mov
sub
hlt
addr16
pop
scas
mov
push
lret
or
movsb
in
and
aaa
test
xchg
and
and
rclb
jmp
inc
adc
in
fnsetpm(287
cli
xchg
xchg
std
cmp
push
inc
jb
dec
or
dec
dec
fimull
outsb
sti
add
or
aaa
cli
jno,pt
call
sar
or
xchg
mov
xchg
adc
jmp
adc
lods
push
lea
lods
insb
adcl
jo
mov
fstps
daa
inc
leave
daa
jns
pop
inc
mov
fwait
lea
repnz
xor
cltd
jae
mov
cmpsb
xlat
xchg
mov
mov
jno
shll
or
xor
jmp
into
lret
fldt
daa
and
movsb
rcll
mov
inc
push
in
sbb
push
sub
cmp
xchg
sti
mov
in
xor
adc
dec
jge
scas
push
inc
inc
test
sub
daa
test
mov
xor
lods
mov
dec
ret
mov
sub
sti
cmp
cld
ret
xor
movsb
jnp
cwtl
jecxz
sub
fmulp
add
cmp
xchg
les
ljmp
test
mov
pushf
mov
push
stos
int
scas
mov
mov
cmp
push
movsb
lods
add
das
xor
mov
pop
movsb
mov
mov
cs
std
push
popf
sbb
sub
mov
mov
iret
mov
hlt
jmp
xor
lods
pop
or
push
add
repz
inc
sbb
xchg
fs
iret
neg
push
ljmp
test
jmp
pop
sub
mov
or
push
insl
outsb
mov
aam
es
scas
out
lret
inc
sub
imul
pop
pop
daa
xor
xor
mov
and
enter
mov
insl
cmpsl
in
jecxz
push
ljmp
mov
push
push
push
xchg
loopne
jl
imul
xchg
and
xor
test
sub
cmpsb
imul
add
push
mov
xlat
xchg
jge
adc
in
sbb
jg
mov
jnp
stos
into
jl
stos
xor
or
dec
jmp
cmp
xchg
lods
xor
cmp
cld
mov
xchg
ljmp
sub
std
mov
jg
push
stos
pop
movsb
fiaddl
dec
aaa
adcl
jne
mov
sbb
arpl
out
adc
cmp
aas
push
dec
mov
test
ljmp
mov
out
pop
mov
xor
lcall
imul
aad
cmp
in
sub
es
call
sbbb
and
aaa
add
push
jb
pop
dec
mov
test
cmp
sbb
pop
or
inc
leave
out
into
cmp
sub
les
add
mov
adc
insb
adc
inc
aaa
sub
xchg
shl
lcall
jle
mov
fwait
out
pushf
inc
ljmp
movsb
mov
pop
testb
arpl
shlb
cmp
sub
icebp
pop
fildl
inc
lods
cmp
mov
pop
add
in
outsl
mov
loope
stos
or
add
sbb
inc
xchg
add
fwait
jne
push
fisttpll
inc
mov
push
sub
sub
ds
test
push
testb
out
incl
stos
out
movsb
inc
movsl
add
push
clc
pop
jecxz
xor
gs
push
sbb
mov
rclb
cwtl
popf
fcoml
mov
fstl
jne
mov
jnp
inc
mov
xchg
xchg
dec
xlat
out
jo
push
add
fcmovbe
sub
inc
scas
bound
cmpsl
jmp
mov
xor
xchg
mov
mov
test
and
dec
jne
push
or
sub
jmp
gs
mov
mov
mov
xchg
mov
pop
lock
scas
cmp
jmp
mov
inc
mov
nop
rcl
pusha
test
adc
es
int3
andb
jno,pt
movsl
xchg
add
cmp
ds
fiadds
loopne
push
xchg
insl
add
dec
xchg
daa
jns
adc
push
mov
movhps
lods
add
notb
scas
outsb
stos
and
pop
lock
jmp
ja
lea
fistl
stos
ficomps
stos
ljmp
iret
iret
lcall
ret
add
xchg
inc
test
icebp
xlat
int3
nop
test
xor
xchg
out
lret
pop
mov
mov
mov
xorl
xchg
rcr
ficomps
dec
cmp
or
push
fwait
push
xor
js
ret
aad
sub
lcall
and
lahf
roll
dec
add
mov
mov
shll
cmp
xchg
jbe
aad
mov
repnz
jbe
clc
push
cmp
jecxz
iret
pusha
hlt
mov
das
jb
jnp
push
scas
les
pop
mov
repz
push
stos
pop
jle
fidivrl
nop
out
js
xor
mov
jge
stos
ret
xor
and
dec
pop
arpl
in
lea
jbe
stc
push
out
add
sbb
jne
stos
nop
or
fnstsw
jp
xchg
xlat
or
ret
jns
ficompl
sahf
inc
adc
or
movsb
sar
xchg
test
push
mov
or
sub
mov
faddp
outsb
std
mov
adc
aas
lahf
inc
shlb
ret
pop
jo
ss
xchg
mov
jge
cmc
outsl
jns
mov
int
jge
mov
add
insl
mov
push
lahf
ja
jecxz
add
jno
sub
icebp
mov
xor
xor
cmc
repz
sbb
loop
cmp
std
sub
daa
stos
xor
out
out
das
addl
or
and
fstpl
sbb
cli
sbb
or
ret
aad
rorl
adc
enter
incl
mov
cltd
fcoml
repz
outsb
cmp
pop
pop
xchg
stos
xchg
pop
sub
jo
in
dec
jno
jl
lcall
and
push
pop
sbb
xchg
xor
pop
push
test
std
jno
or
leave
insb
inc
dec
cs
in
imul
mov
xor
outsl
push
pop
stos
adc
mov
into
nop
fsubrl
stos
mov
sub
shlb
xchg
push
mov
out
arpl
in
push
bound
call
mov
pop
and
stos
in
pusha
mov
pop
scas
bound
or
loop
psadbw
dec
cmc
rorl
scas
push
mov
hlt
in
or
xchg
sbb
fidivrl
clc
dec
les
mov
scas
cmp
std
add
inc
repz
jp
jns
add
lds
pop
push
mov
lret
push
mov
cld
jle
xchg
subl
mov
mov
jae
or
arpl
dec
insl
frstor
ja
xor
push
dec
roll
in
adc
les
xchg
lods
out
push
movsb
or
out
cmp
test
and
fldcw
xor
test
inc
mov
sbb
test
jl
cmp
xor
clc
loopne
xor
dec
aam
xchg
adc
sub
js
cwtl
dec
out
cld
xchg
pushf
or
and
pop
shl
imul
add
fdivs
pop
mov
cltd
idivl
cmp
repz
roll
and
cmp
mov
lods
lahf
lds
fsts
or
ret
xchg
mov
lds
int
hlt
jbe
imul
notl
jge
mov
mov
jno
movsb
jl
int
lahf
repz
inc
or
push
mov
ss
push
jmp
xchg
jp
sbb
add
aam
and
xor
das
pushf
data16
lock
scas
shrb
mov
in
divb
mov
sub
outsl
sub
jnp
pop
imul
xor
mov
daa
aam
sahf
jo
lret
dec
into
mov
aas
int
adc
filds
sbb
and
cmp
icebp
out
stos
or
in
pop
fimull
push
cmpsb
icebp
out
pop
adc
inc
mov
pop
outsl
outsb
add
gs
pop
jge
jl
jae
xchg
call
shll
lcall
aaa
sbb
fdivrs
cmp
xchg
add
sbb
daa
fisttps
pop
dec
or
out
nop
nop
shll
cmp
xor
std
lcall
sub
in
aam
adc
outsl
cmpsb
cmpsl
cmp
lret
std
sti
add
fprem1
xchg
into
out
paddusb
cmpsl
pushf
gs
push
loope
dec
and
mov
mov
push
and
das
ror
xchg
pushf
adc
test
jg
dec
clc
fsubs
push
mov
int3
inc
test
test
jo
mov
mov
xor
rorb
out
sub
push
ds
dec
pop
popf
les
and
jmp
push
repnz
test
add
mov
outsl
pop
cli
xor
dec
add
scas
js
pop
idivb
nop
push
mov
push
outsl
adc
es
push
movsl
sti
xchg
mov
daa
mov
outsl
cmp
mov
dec
sub
imul
mov
jae
hlt
inc
outsl
nop
cmpsb
mov
push
sub
decb
lea
popa
jnp
repz
jl
cld
rcrb
dec
inc
mov
hlt
cmp
adc
mov
mov
mov
pop
push
dec
mov
fcompl
cmpsb
jnp
jo
adc
add
cmp
sub
xor
ss
dec
lret
jle
sbb
sti
and
xchg
add
mov
and
in
mov
jmp
nop
clc
add
ret
xor
xor
es
pop
dec
mov
xor
es
nop
fcompl
push
mov
daa
cwtl
push
fidivl
xchg
ds
rclb
outsl
mov
fwait
and
imul
rorl
rcll
cmp
test
sub
xchg
mov
jle
jg
cmpl
dec
jecxz
mov
push
ss
ljmp
pop
aas
jne
repnz
roll
cmp
jmp
jb
jge
mov
mov
data16
aas
mov
cmc
cmp
mov
mov
inc
js
mov
dec
mov
mov
aas
dec
pusha
sub
repnz
test
xorb
les
push
cwtl
pop
stos
push
pushf
inc
mov
xchg
push
ljmp
ja
sub
and
push
enter
mov
addl
repnz
xchg
test
inc
cmp
jg
adcb
jp
jge
jmp
sub
lcall
into
sub
fs
repz
cmpsl
xchg
adc
incl
adc
add
push
movsl
rcrb
and
and
push
insb
mov
jg
xor
push
mov
add
mov
xchg
mov
shr
mov
adc
nop
test
mov
pop
xchg
dec
imul
and
les
lcall
and
pop
sbb
arpl
inc
cltd
xchg
subl
mov
out
or
dec
push
xchg
sub
aad
mov
call
loopne
jae
mov
push
pop
insl
mov
and
stos
push
hlt
ret
nop
add
in
insl
shll
movb
es
lea
jbe
mov
mov
sub
xchg
sbb
jnp
jno
inc
mov
push
add
shlb
or
jnp
iret
jno
or
mov
cmpsb
adc
call
xchg
sbb
mov
add
pop
lret
or
loop
adc
ljmp
repz
add
pop
sbb
mov
loope
adc
int
inc
lret
adc
scas
enter
pop
pushf
and
scas
popl
pop
xorb
xchg
pusha
shl
addb
and
jne
and
andl
popf
sub
lods
movsl
loop
and
push
mov
add
das
addb
cmp
xor
add
mov
mov
and
pop
rolb
bnd
sar
ss
repnz
mov
test
push
std
lock
and
loop
lcall
push
loop
xchg
mov
inc
bound
ss
sbb
mov
ja
mov
out
iret
lock
push
into
adc
call
or
push
fldenv
or
call
lret
add
movsb
mov
bswap
xor
xor
idiv
sub
jmp
cmp
repz
sub
mov
loope
inc
aad
sahf
or
mov
cwtl
popa
or
fstp
iret
pop
mov
movsl
jp
cmpsb
es
push
mov
inc
push
fwait
sbb
stos
inc
ds
pop
scas
jle
push
mov
mov
mov
sbb
mov
xor
mov
test
std
arpl
mov
stos
repz
pop
sub
sbb
sub
push
sub
inc
and
lods
push
lret
mov
or
push
adc
stos
decl
jge
pop
dec
call
mov
push
mov
outsb
push
call
arpl
or
cmp
stos
loop
shl
sbb
jno
and
movsl
hlt
dec
and
out
cltd
mov
mov
iret
jmp
or
xor
enter
mov
mov
xor
in
adc
mov
enter
mov
mov
sub
loope
clc
inc
sub
pop
jo
jns
lret
cmp
jo
mov
imul
ss
rcrl
lcall
movsbl
lods
fdiv
mov
xchg
insb
aas
push
rcl
bnd
xor
ret
xor
mov
insl
fsubrs
rolb
pop
and
and
mov
sbb
push
jg
repnz
aaa
repz
mov
leave
mov
sbb
arpl
dec
adc
shll
mov
add
repnz
aaa
pop
push
cwtl
push
lcall
adc
push
xchg
in
mov
push
stos
push
add
and
adc
push
xor
out
outsb
cld
and
ss
sub
ljmp
pushf
mov
fstpt
clc
psubusw
pop
fs
mov
sbb
bnd
xchg
cli
fxch
movb
add
test
pop
xchg
sbb
pop
push
and
cmp
xor
push
jl
push
cmc
jb
xor
adc
and
jb
fwait
icebp
iret
xlat
push
mov
sub
or
cmp
and
jg
mov
or
jbe
rorb
je
out
jae
or
cli
fs
push
xor
jle
pushf
cmpsb
and
push
xor
push
and
cmp
fdivrs
add
ja
out
fidivrs
lds
pop
ja
xor
inc
and
enter
fcmovne
jmp
enter
imul
xor
inc
push
orl
outsl
adc
daa
dec
adc
sbb
add
push
shlb
test
dec
cmp
iret
or
or
xchg
fcompl
dec
xor
fwait
loop
lgs
xchg
dec
mov
nop
mov
sbb
xor
inc
xchg
mov
jg
scas
mov
xor
cmp
nop
jns
mov
shl
push
ret
std
mov
or
mov
push
jg
cmc
dec
sti
xchg
outsb
xchg
push
or
xchg
pop
sahf
insb
or
arpl
das
jno
sbb
jmp
sub
fmuls
test
dec
sub
xchg
movsb
shll
jb
and
add
bound
adc
mov
loop
scas
mov
jnp
jne
sbb
push
bound
pop
xchg
xor
dec
or
add
cmp
inc
scas
mov
filds
jae
clc
pop
int3
xchg
aas
lcall
stos
mov
pop
lret
cmp
sar
adc
xor
xchg
sub
and
lods
dec
stc
adc
push
or
gs
faddp
cmc
fpatan
mov
jno
outsl
das
or
int
pop
add
sub
cmp
out
ds
dec
pop
add
sbb
pop
push
mov
xchg
jnp
xlat
ljmp
ret
cmc
loop
imul
nop
aad
jae
mov
xor
fbstp
xchg
xchg
stos
call
addr16
lcall
jmp
xchg
jmp
and
mov
or
push
dec
cmp
and
in
inc
and
jg
pop
push
or
jmp
ss
lea
xor
ret
sub
scas
fistl
inc
pop
pop
orb
out
pop
enter
bound
test
push
xchg
push
test
xchg
add
jns
sub
dec
sub
jb
cmc
cmpsb
andl
fdivl
lods
xor
outsl
aaa
ss
test
pop
or
stos
jae
xchg
jae
fnstsw
push
fs
adc
xor
enter
push
fsubl
cmpsl
add
es
stc
adc
punpckhwd
pop
and
enter
and
enter
mov
adc
lea
int
fucom
loopne
pop
ret
dec
xchg
jp
imul
in
xchg
lcall
idiv
and
add
mov
idivl
pusha
pop
out
cld
int
sti
cmpsb
push
ja
push
and
adcb
and
xor
ds
pop
mov
xor
popf
loope
pop
mov
mov
mov
arpl
fsubrp
imul
add
jp
cmpb
shll
scas
cli
mov
add
shl
arpl
sbb
push
jle
test
lahf
jnp
push
pop
mov
cmp
pop
xlat
sub
mov
inc
mov
jle
fidivrl
mov
pop
test
cmp
inc
out
xlat
jb
int3
movsl
rcrw
lret
xorl
ljmp
and
mov
gs
enter
xchg
sub
xor
mov
sbb
jge
repz
roll
or
xor
push
inc
mov
fdiv
mov
shrl
mov
adc
dec
jnp
mov
adc
push
dec
pop
lds
or
dec
or
or
xchg
cwtl
fs
sbb
sets
cmpsb
xor
arpl
testb
inc
inc
xor
mov
int3
sbb
pop
mov
push
or
sub
lret
inc
push
loop
pop
imul
cmpsl
sub
pop
aaa
mov
push
jmp
fstpl
mov
or
out
jae
pop
rolb
xchg
daa
loop
inc
inc
pmullw
add
mov
mov
pop
jb
push
lret
rclb
or
push
nop
andb
fnsave
add
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
outsl
in
mov
lcall
jp
mov
dec
incl
inc
dec
xor
paddq
loope
in
shrl
mov
xchg
and
aad
xchg
cwtl
lea
sarl
js
lahf
pop
mov
or
add
fisubs
mov
cmpsl
std
fcmovbe
sti
xlat
mov
mov
push
inc
jnp
sti
shll
mov
cmp
lcall
add
cmp
jp
jno
orl
push
push
jmp
testb
xorl
stos
fidivl
inc
jl
dec
subl
fwait
mov
rorl
ja
pop
or
daa
fnstsw
lahf
jnp
lods
adcb
es
pop
jle
dec
in
subl
mov
icebp
lcall
ror
xorl
or
jmp
jo
mov
rcr
mov
sub
xchg
mulb
adc
f2xm1
and
adc
or
jmp
jns
add
jg
cmpsl
lods
inc
pop
stos
insb
inc
add
lds
sbb
out
cmc
xchg
call
mov
inc
xchg
pop
lods
sub
mov
pop
lret
push
sti
push
jne
movsb
or
mov
sbb
push
cwtl
js
out
mov
ret
scas
out
add
out
lock
repnz
and
fsubrl
negl
dec
push
test
pop
add
aam
lds
cs
pop
or
cmc
add
call
stc
js
addb
dec
fsubr
ljmp
negb
arpl
sub
dec
adc
sarb
stos
mov
popa
add
dec
in
ljmp
aad
xchg
jp
scas
cmc
mov
xchg
sub
lcall
or
xchg
adc
mov
sub
lock
test
xchg
imul
jg
sub
aad
mov
xchg
dec
xor
push
dec
pop
mov
out
dec
cmp
sub
and
je
fld1
inc
cmp
testl
sub
repz
mov
lea
imul
lods
pushf
adc
ljmp
push
jg
jecxz
repnz
cmp
mov
jmp
inc
mov
add
push
or
in
cmp
bound
xor
add
popa
pop
repnz
jns
jp
xor
cmpsl
push
js
int
cmp
out
xchg
popf
negb
mov
xor
arpl
lahf
xorb
mov
enter
push
mov
out
cmp
and
pop
xor
pop
ret
xchg
xchg
popa
out
or
out
push
xchg
mov
ffree
push
jge
fpatan
mov
push
shrl
mov
mov
incb
hlt
scas
pop
les
das
subl
lea
xchg
movsb
call
ffreep
call
stc
mov
lds
mov
jecxz
pop
jmp
incb
push
sub
ja
loope
or
fstps
jb
add
outsb
xor
fwait
in
sub
push
push
lret
fwait
xchg
add
or
adc
cmc
mov
dec
outsb
test
jo
add
ret
add
ficoms
stc
lret
lods
popaw
loope
out
js
add
into
push
cmp
cli
call
daa
push
xor
cmpsb
mov
sbbb
mov
ret
in
sbb
adc
aas
xchg
sub
test
inc
xor
inc
adc
scas
xor
js
mov
jmp
lret
frstor
ret
jp
stos
test
sbb
out
loopne
outsl
push
inc
aas
or
xchg
lods
mov
sahf
mov
lods
mov
jb
les
jmp
xchg
cli
negb
not
pop
fcompl
xor
fmul
int
out
fidivrl
subl
std
movsb
pop
lret
mov
mov
pusha
inc
bound
sahf
pop
dec
mov
inc
into
sbb
and
insb
inc
and
xchg
sbb
mov
jns
sbb
leave
loope
sbb
jmp
dec
pop
mov
pop
cmp
pop
sar
notl
pop
jecxz
and
das
jne
clc
jmp
es
jge
sbb
insb
into
data16
jmp
lea
mov
add
int3
or
push
inc
stos
repz
daa
sub
sub
out
and
mov
cwtl
pop
or
lods
push
lea
scas
aad
cmc
in
xor
mov
sub
fisubrl
cmpsb
lret
cmpsl
fcompl
mov
out
cmp
cmp
sub
cmp
and
adc
pusha
test
pop
pop
cmp
mov
in
cmp
inc
mov
dec
push
pusha
popa
lods
divl
sti
xor
call
int3
pop
add
mov
inc
incb
and
aam
adc
out
pop
movsb
or
push
adc
enter
lea
and
call
push
jns
inc
inc
mov
xor
jge
pop
es
cli
lahf
ficoml
adc
mov
mov
and
adc
push
jae
jnp
fistpl
cmp
sbb
push
push
xchg
mov
jbe
pop
ja
xchg
cmp
stos
lahf
cmc
incl
or
je
test
cmp
faddl
loope
fimuls
xlat
daa
push
int3
sub
imul
dec
pop
push
push
mov
jl
xor
je
ja
sar
pop
frndint
adc
int3
fyl2xp1
mov
repz
mov
movb
and
sbb
mov
data16
inc
stc
push
mov
sub
push
subl
data16
leave
add
lock
iret
rcrl
enter
iret
xchg
add
repnz
cmpsl
fdivl
adc
lret
out
aas
jp
lods
stos
inc
stos
adc
stc
jg
mov
sarb
or
into
add
push
dec
lea
es
and
jo
test
push
sub
push
sbb
mov
xchg
sbb
ss
inc
in
es
mov
jbe
sbb
popa
pop
lock
xchg
push
or
push
dec
lret
xor
sahf
imul
pop
xor
lret
ret
dec
sbb
lahf
xor
xor
fstps
pop
aaa
and
fisubs
mov
xor
xchg
inc
xorl
or
or
inc
fs
jne
scas
ja
xchg
sub
mov
push
jecxz
aas
jnp
aad
fldcw
lahf
mov
cmpsb
mov
push
mov
fidivrs
pop
xchg
scas
mov
aas
cmp
arpl
pop
leave
jb
divb
xor
fs
pop
jns
jle
lods
jns
lahf
loope
leave
push
add
bound
movsl
imul
xchg
push
sbb
stc
hlt
and
ds
adc
dec
addb
sub
dec
cltd
mov
jecxz
jbe
out
enter
lcall
xchg
push
subb
add
or
pop
adc
push
mov
adc
cmpsl
dec
sub
cmpsl
lods
fistpll
jecxz
mov
loope
push
sbb
jb
or
fwait
ds
add
notb
jno
push
and
mov
jmp
negl
jno
das
add
fldcw
jns
pushf
cmp
cld
and
xchg
lcall
cmc
pop
cmp
jmp
mov
lcall
xor
pop
cld
aaa
cmp
insl
xchg
ljmp
je
in
pop
jmp
jle
mov
stos
dec
inc
and
mov
negb
dec
fimull
imul
in
cmpb
mov
ficomps
jecxz
test
out
push
out
and
rolb
inc
or
popf
call
xchg
or
mov
xchg
push
sti
mov
lock
mov
add
mov
jbe
ss
aam
fstpt
lahf
pop
in
mov
clc
push
pop
movsb
mov
mov
pop
pusha
jecxz
push
or
leave
push
cmp
divb
ret
js
insb
sti
mov
jl
ljmp
popa
jle
scas
popf
out
cmp
pop
js
push
stc
and
jne
adc
daa
fidivrs
xor
xor
sbb
clc
xchg
xchg
sub
mov
sub
in
test
inc
aad
push
push
out
pop
mov
in
es
outsb
sub
idiv
std
ret
subl
sar
lret
adc
sub
sbb
cmp
ja
adc
mov
cld
and
pop
adc
push
mov
incl
mov
repz
push
ja
pop
pop
int
mov
out
push
lods
sahf
repz
ret
subb
mov
add
lret
sub
mov
sub
jp
call
or
inc
pop
movsl
mov
pop
jnp
test
mov
insl
adc
js
cmpsb
es
out
xchg
xchg
sets
jbe
sbb
imul
lods
fcompl
push
cmpsl
mov
xor
aaa
in
mov
xor
loopne
pop
sti
int3
addl
stc
aad
loop
insb
insb
iret
xor
sbb
xchg
popf
add
loope
mov
push
aam
cmp
jmp
push
push
pop
pushf
dec
push
cmp
clc
inc
enter
movb
inc
cmc
jmp
test
leave
dec
js
movsl
out
jo
or
rcl
and
jg
cmp
xor
xchg
mov
push
xchg
les
roll
cmp
out
dec
shl
mov
dec
popf
stos
outsl
movsb
inc
cli
nop
push
out
movsl
pop
outsb
into
sbb
hlt
adc
out
xor
mov
aas
enter
fisubrs
push
inc
add
lock
incb
jns
adc
movsb
cs
sbb
cmp
or
mov
adc
dec
or
and
add
cwtl
sarb
adc
sbb
out
add
pop
jns
orb
bound
xor
pop
movsl
in
sbb
gs
scas
jle
push
jae
sbb
scas
aam
mov
bound
xchg
jg
scas
xor
pop
dec
xchg
and
dec
in
fwait
stc
inc
outsb
mov
pop
pop
sub
sbb
or
cmp
lahf
and
addl
outsl
cmp
mov
cmp
loop
jbe
pusha
nop
mov
mov
push
inc
adc
xchg
jge
pop
xorl
cli
sub
mov
mov
imul
insb
scas
cmpsl
jecxz
jne
mov
xchg
pop
scas
dec
loope
mov
sbb
subl
js
push
pop
pop
sub
xchg
rorl
mov
rcll
cmc
adc
mov
pop
mov
mov
mov
cmpsl
fldl
mov
rcll
lret
push
fcmove
sub
push
fwait
nop
je
jae
outsl
repnz
push
mov
mov
out
and
pusha
in
sbb
shlb
loopne
xchg
rcrb
rcrl
mov
enter
test
lock
ss
and
mov
pop
popa
push
nop
add
xchg
or
out
inc
lods
call
jno
mov
jns
push
movsl
dec
sub
jecxz
fisubs
push
fcompl
or
dec
std
je
inc
mulb
test
fistpll
scas
xchg
adc
mov
lcall
popa
cmp
mov
fistps
repnz
mov
jnp
in
mov
clc
scas
cld
push
dec
dec
lea
icebp
sarl
rclb
nop
dec
bound
pop
push
shrl
mov
add
xor
rclb
mov
push
movsb
rorb
xor
cmp
test
popa
add
mov
mov
sub
pushf
clc
aam
sbb
in
lret
jb
xor
sbb
movsl
test
lcall
loope
adc
out
xchg
mov
pop
jns
jle
mov
sbb
xchg
cmpl
scas
jns
xlat
pop
and
enter
jle
scas
push
push
hlt
popf
push
stos
cmpsl
jo
imul
ja
add
xor
sbb
cld
daa
xor
jo
in
leave
cmp
xchg
gs
or
and
mov
xchg
mov
inc
sub
dec
add
out
addps
adc
jne
xor
and
ret
es
movsl
les
sbb
jo
mov
push
out
popa
push
sub
sbb
push
xchg
jo
lea
sti
mov
xorb
mov
mov
adc
sub
xchg
sbb
imul
pop
cmpsb
adc
xchg
cmp
cmp
sbb
cwtl
pop
mov
xchg
adc
lods
xor
ret
dec
in
out
or
sbb
xor
mov
cmc
arpl
lods
daa
stos
mov
xchg
dec
hlt
cwtl
in
mov
sbbl
sub
aam
mov
add
mov
mov
sub
add
mov
cmp
dec
xor
fwait
xchg
test
dec
dec
and
push
add
nop
xor
lret
jo
rolb
pop
int3
test
cs
mov
xor
ljmp
popa
lea
sahf
addb
push
xchg
cli
push
outsb
xchg
xor
and
sbb
mov
push
or
mov
and
jge
mov
loope
push
dec
cmp
mov
lods
inc
fcoml
pushf
sub
xor
sub
ret
idivb
stc
test
out
cmp
add
push
sarb
xchg
xchg
pop
rcrb
fldcw
aas
scas
and
dec
mov
inc
add
pop
inc
in
xor
cmc
cmp
mov
jl
add
fwait
push
dec
jmp
mov
jp
sub
fnstenv
xchg
inc
adc
andl
fistpll
iret
testb
icebp
orb
mov
stc
or
jge
mov
jp
nop
or
add
push
dec
sahf
leave
add
rclb
pop
push
sub
aaa
es
mov
stos
cmpsl
push
mov
std
push
push
in
jecxz
sbb
iret
jmp
pop
add
push
mov
and
out
xlat
and
rorl
push
or
push
and
cmp
mov
call
clc
fisubrl
loopne
movsl
pop
or
push
imul
fsubr
out
mov
inc
sub
cmp
xchg
jns
push
adc
outsb
cmc
js
fwait
fwait
enter
outsl
push
push
into
pop
pop
jecxz
mov
jo
sbb
jne
fwait
cmp
mov
aad
mov
test
xlat
flds
popf
sarb
pusha
inc
aam
sarl
jne
cmp
std
xchg
pop
jge
shr
icebp
ja
imul
stos
jge
fsubr
push
xchg
sub
aas
fwait
dec
pop
movsb
call
rorl
lods
fs
test
scas
sbb
mov
jg
popf
out
pop
and
jo
daa
xor
mov
lds
cmp
movsl
rcl
test
fstp
les
out
ja
jmp
scas
and
lahf
push
mov
inc
shr
leave
stc
jp
push
pop
test
push
cmp
lds
add
xchg
dec
sbb
jl
push
add
cmpsb
pop
push
inc
add
mov
pop
loope
mov
dec
out
and
add
jp
mov
outsl
dec
jl
sti
sti
mov
lods
fistl
bound
iret
aam
add
add
cmpsl
push
mov
and
sub
mov
jp
loope
sub
jl
into
mov
out
clc
cs
loope
lds
lcall
bound
lcall
sarb
push
jl
ljmp
scas
adc
scas
js
sub
jnp
inc
mov
daa
jl
in
jmp
inc
mov
ljmp
jle
jne
idiv
stc
mov
ja
daa
aad
sarb
in
push
fs
fistps
fldenv
dec
push
and
xchg
inc
sbb
outsb
mov
sahf
fisubrl
mov
push
data16
inc
in
in
rol
pop
dec
clc
cmpsb
inc
sahf
mov
nop
xor
and
jle
cmc
jbe
push
or
test
aad
xor
out
fisttpl
icebp
pop
bound
mov
fcomip
lods
loop
fbstp
mov
jae
and
sbb
aas
push
cmp
and
sub
ret
out
sbb
test
rcll
movsl
xor
stos
dec
pop
lcall
loopne
xchg
dec
gs
jo
pop
adc
mov
imul
test
test
add
xchg
cwtl
xlat
jl
adc
add
fisttpll
out
adcb
jmp
xor
sub
insb
dec
je
aam
jnp
in
cmp
cmp
outsb
leave
out
scas
sti
and
jne
mov
ljmp
xchg
adc
pop
scas
inc
loope
pop
inc
icebp
and
lcall
insl
rcrl
loope
fwait
repz
fisubs
scas
ja
call
cmp
test
je
pop
cltd
in
xchg
cmp
das
les
test
enter
mov
jmp
xchg
test
pop
dec
add
sbb
in
ret
mov
adc
cmp
enter
je
sbb
gs
lcall
xchg
lods
nop
jnp
out
pop
and
pushf
push
mov
mov
add
xor
add
or
jne
pop
mov
repz
xorb
adc
jno
out
dec
mov
dec
inc
mov
lock
fimuls
test
mov
popa
fiadds
sbb
scas
inc
lret
stos
mov
mov
push
repz
push
shrl
fcmove
leave
out
sub
push
sbb
icebp
nop
call
xchg
out
push
lret
xchg
popf
scas
sarl
popa
pop
sbb
pop
mov
xchg
xor
test
fsubp
outsb
and
fisttpl
aam
ds
jns
jne
jo
jne
pminub
push
popa
insb
ja
adc
push
adc
xor
mov
lret
das
cmp
dec
sarl
inc
add
inc
inc
gs
xor
add
daa
xchg
daa
ret
sub
jb
sbb
pop
push
mov
push
jns
push
jp
cmp
cmp
bound
fnsave
pop
mov
jbe
push
mov
les
outsl
mov
jge
or
xor
jne
mov
daa
sti
dec
add
push
outsl
loope
nop
nop
jns
pop
or
mov
jecxz
xchg
lret
jg
lahf
add
sub
mov
mov
bound
ret
mov
mov
scas
xchg
adc
mov
mov
lods
inc
maskmovq
mull
pop
or
shr
ja
ret
mov
ja
hlt
stos
inc
push
ljmp
push
mov
outsl
xor
mov
mov
cmpsl
insl
imul
jae
jg
popl
loop
lahf
das
je
add
xchg
call
fnsave
sbb
aad
fcmovne
insl
mov
out
and
cld
and
add
into
sub
mov
mov
insb
inc
sub
lcall
or
mov
leave
adc
xchg
pop
xor
push
loopne
aad
stc
loopne
sub
outsb
inc
mov
pop
adc
jae
rcrl
cs
cmp
mov
cltd
pop
adc
cmp
and
pop
or
inc
add
bound
clc
jge
adc
sub
and
xlat
fs
sub
xchg
into
ds
mov
popf
mov
dec
pushf
negb
dec
jle
incl
insb
mov
ss
pushf
insl
cmp
je
dec
jmp
mov
mov
sbb
inc
dec
push
divb
std
and
popf
lock
lods
into
cmp
add
push
sti
lds
mov
sub
push
xchg
sbb
cmp
xor
lea
push
nop
clc
les
inc
add
cmp
adc
xchg
loopne
imul
bsr
dec
sbb
pop
and
sbb
aad
stc
mov
or
and
pop
xor
pop
fdivs
and
dec
dec
jno
lea
cmpsb
xchg
mov
notl
leave
in
sub
inc
ljmp
adc
loop
scas
sub
cmp
xchg
pusha
sbb
push
sub
loope
fnstcw
lods
bound
pop
pop
push
sbb
lock
aad
or
stos
sbb
jns
repnz
repnz
inc
sub
orl
jae
out
nop
push
xchg
cli
pop
nop
divb
xor
mov
and
add
add
lahf
or
jnp
lret
gs
dec
push
daa
leave
adc
inc
mov
mov
cmpsl
mov
sub
jnp
scas
jle
dec
mov
sbb
inc
orl
cmp
jo
es
pop
adc
addr16
pop
stc
das
mov
dec
push
sub
jno
push
xchg
stc
push
adc
mov
mov
clc
popa
movsb
inc
mov
dec
adcb
xchg
or
cmpsb
push
loope
jbe
inc
fists
addr16
fcompl
cmp
or
imul
inc
aaa
push
out
pop
and
out
mov
jp
addr16
inc
gs
negl
in
lea
cwtl
jl
jb
mov
test
mov
fcmovbe
cmc
mov
push
aaa
push
push
jmp
pop
xchg
pop
xchg
pop
repnz
and
fnstenv
push
push
and
rcll
add
mov
aaa
add
push
fstpt
fistps
mov
fwait
sub
pop
cmpsb
das
js
test
mov
xchg
xchg
in
lret
sub
jo
pop
lahf
stos
jne
inc
push
push
jle
xlat
dec
dec
mov
ljmpw
or
xchg
xchg
dec
out
or
jnp
cs
sbb
mov
das
cmpsb
xchg
mov
mov
jb
push
loopne
xor
frstor
lcall
or
fisubrl
add
inc
fs
ljmp
inc
insb
testb
xorb
js
mov
adc
xchg
mov
clc
or
ret
mov
dec
or
js
arpl
jg
les
in
xor
loopne
les
in
mov
sbb
stos
test
cmpl
stos
cltd
cmpsb
sbb
and
jo
cld
andb
mov
adc
mov
js
xchg
hlt
push
insb
stos
std
jmp
pushf
aam
inc
jg
cmp
fiaddl
leave
push
mov
cmp
jl
aas
addr16
mov
sti
xlat
test
lahf
imul
mov
cld
pop
sbb
into
ret
cltd
mov
add
jbe
cs
test
mov
aaa
add
nop
and
stos
pop
fs
or
pop
sarl
dec
sub
mov
pop
loop
in
call
and
mov
rorb
xchg
shll
inc
pop
inc
enter
jns
pop
mov
xlat
or
popa
sub
push
es
lret
push
inc
sahf
pop
or
inc
ljmp
xor
decb
aam
movswl
or
inc
into
dec
js
pop
notl
movsl
jnp
insb
lret
mov
call
test
shrl
sti
ficomps
adc
fwait
sbb
jg
xchg
in
mov
dec
popa
mov
jns
cmpl
sub
jns
movsl
add
xchg
add
fisttps
sbb
jg
xor
or
out
cs
inc
add
cmpsl
inc
sub
pop
inc
pop
lock
cltd
in
pop
mov
add
das
pop
add
sbb
test
mov
insb
popa
fwait
pop
push
sbb
adc
mov
jge
inc
out
sbb
imul
mov
push
cli
lods
pop
pusha
fldt
popa
lahf
imul
js
enter
insb
cmp
insb
or
add
or
rolb
hlt
cwtl
popa
or
cmpsb
pop
out
xchg
sahf
insb
mov
aas
int3
idivl
and
pop
sarl
inc
iret
jg
dec
into
dec
cmp
sbbb
mov
push
stc
aaa
pop
aam
or
int3
sub
inc
ficomps
pop
pop
leave
cld
dec
mov
cli
stc
lods
push
sti
pop
fiaddl
jnp
sbb
cmp
roll
or
push
or
sahf
cmp
cmp
mov
cld
das
rcr
cs
popf
daa
incl
jo
adc
push
fnstenv
cli
adc
pop
addb
push
aad
divb
out
lret
arpl
cmp
lret
sbb
sbbl
inc
pushf
mov
aaa
or
cltd
or
xlat
or
mov
add
ljmp
and
pop
pushf
sub
jmp
xor
mov
inc
daa
push
and
dec
push
int3
or
scas
ss
push
xor
enter
and
inc
testl
mov
aam
std
in
enter
gs
push
jo
push
pop
sbb
mov
xchg
cwtl
sub
mov
and
pop
sub
push
loopne
sbb
cmp
jecxz
imul
mov
aam
cmpsl
loopne
sbb
mov
mov
sub
ss
dec
ret
in
lret
push
jp
xor
je
cmc
mov
aaa
add
mov
and
mov
in
lods
fldcw
sub
in
fsts
pop
cld
dec
out
ret
push
dec
movsb
push
add
icebp
and
scas
int
push
movsb
sbb
lock
inc
inc
cmp
loop
scas
out
cs
in
xchg
cs
cmp
sbb
adcl
bound
cmpsl
jno
xor
sub
loopne
stc
ja
aas
inc
enter
dec
mov
add
popf
lcall
adc
jns
add
mov
pop
and
push
in
loop
push
adc
mov
fdivl
fs
xor
dec
add
in
adc
xor
dec
enter
int
bound
in
mov
outsb
mov
push
jecxz
nop
push
cwtl
cmp
adc
push
sub
mov
jl
and
fists
rep
sbb
mov
bound
sbb
scas
mov
sti
mov
jnp
insl
fsubrl
dec
filds
cwtl
sbb
dec
jl
adc
in
mov
pop
cmc
cmp
std
mov
dec
add
inc
pop
insb
xchg
push
and
stos
cltd
pop
loopne
fs
add
ljmp
xchg
dec
mov
add
fs
mov
mov
sbb
jmp
outsb
jmp
jno
jl
in
sbb
push
mov
xlat
xlat
or
jp
insb
mov
and
mov
out
ret
jl
and
outsl
and
por
xor
les
jns
in
mov
adc
add
movsb
mov
xchg
test
scas
xor
mov
push
bound
fwait
pop
mov
pop
sbb
je
hlt
jmp
mov
xchg
jb
data16
leave
jae
push
fwait
mov
adc
and
aam
lret
and
call
jmp
pop
inc
mov
and
sahf
sti
lods
ds
jg
mov
lods
xchg
adc
repnz
pop
loope
imul
dec
inc
ret
jbe
sbb
push
outsb
enter
or
shrl
fldl
sub
outsl
aam
out
fldcw
ds
adc
adc
jmp
mov
mov
add
es
and
cmpsb
sbb
xor
js
in
jo
sub
rol
xchg
jl
fidivrl
lea
nop
inc
or
daa
mov
dec
fs
into
imul
pushf
test
inc
into
pusha
ret
outsb
loop
out
call
js
push
or
loop
lods
mov
stos
mov
mov
add
mov
and
sub
lods
lcall
and
pop
int
loopne
jge
cmc
cmp
inc
lahf
mulb
push
dec
mov
js
xchg
mov
dec
aaa
sarl
ja
lahf
notl
pop
fldt
andl
aas
je
cmpsl
inc
aam
xchg
int3
add
pop
lods
mov
push
lret
jp
sbb
cmp
iret
int
fsub
inc
or
je
inc
mov
sbb
push
jb
mov
lret
jbe
push
jg
rol
lock
pop
mov
push
jl
xchg
ror
popf
cld
jae
jbe
imul
pmaddwd
daa
xor
das
popf
jecxz
je
fildll
in
fst
mov
mov
lds
rcrl
int
cmp
mov
test
mov
lds
mov
and
shrb
sbb
add
mov
mov
divb
fldl
push
arpl
inc
or
inc
or
xor
nop
xchg
dec
loop
sub
jp
cld
xor
out
pushf
mov
mov
daa
xchg
mov
js
lock
adc
mov
rorl
xor
cmc
sbbb
bndstx
mov
dec
or
jp
in
pop
out
or
xchg
dec
dec
in
les
ljmp
and
out
dec
insl
cli
xchg
pop
movsl
inc
add
and
int3
xor
pop
test
sub
mov
mov
xchg
out
jns
stos
mov
imul
lcall
lock
dec
jl
fcomp
dec
push
movsb
int
ja
shll
fcoms
mov
ss
ret
inc
dec
mov
mov
mov
popa
add
aam
lea
shr
je
xor
add
adc
dec
adc
cmp
cmp
fdivs
sub
jp
sub
adc
cmc
je
add
xor
inc
push
rclb
fsubs
mov
lea
jbe
mov
push
sub
push
fcoms
sbb
push
cs
jb
enter
shrl
pop
mov
aam
pop
movsb
inc
adc
inc
xor
dec
pushf
add
out
iret
fldt
inc
cli
xor
mov
loopne
mov
pop
dec
mov
and
mov
data16
loopne
dec
and
mov
push
dec
mov
push
xor
pop
mov
mov
notl
outsb
jle
test
subb
imul
mov
lret
leave
fwait
and
xchg
call
das
dec
hlt
sbbb
xchg
icebp
je
and
pop
aas
icebp
sbb
and
out
pop
in
test
jecxz
out
cmp
jae
jecxz
cmovne
pop
cmpl
inc
add
push
xchg
mov
rcr
xchg
jg
xlat
out
out
jmp
out
subl
cmpsl
sbb
mov
hlt
add
cs
in
cs
inc
hlt
sub
lods
inc
into
icebp
mov
adc
jp
inc
push
pop
pop
adc
jno
and
out
loopne
test
arpl
xchg
movsl
mov
add
sbb
shlb
xchg
sbb
outsb
lcall
loop
call
nop
lods
xchg
jns
aas
cs
fnstcw
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
std
sub
add
jp
pop
jp
jb
push
mov
test
adc
int3
xchg
fcmovnb
test
outsb
or
in
jecxz
sub
or
dec
dec
clc
jbe
mov
int
into
addr16
icebp
inc
sbb
into
jbe
iret
and
jp
lret
mov
sbb
enter
xor
stos
stc
sbb
pop
std
adc
pop
mov
mov
adc
xor
sti
sub
insl
fs
fld
mov
popf
les
pop
jb
repz
sub
testb
scas
adcb
scas
nop
arpl
cmp
push
xchg
cmp
clc
cmp
inc
inc
sti
push
outsl
push
mov
cltd
dec
mov
sub
mov
add
addl
dec
jecxz
xchg
cmpsl
stos
mov
leave
fidivs
loop
lret
pop
mov
sbb
outsl
and
into
xor
lods
stos
in
xchg
or
std
aaa
jno
or
cltd
cwtl
hlt
nop
test
and
xor
fidivs
add
divb
sub
loope
insb
subb
popf
xchg
sub
push
adc
or
popa
pop
aas
gs
dec
jno
dec
sub
cld
addr16
xlat
fmuls
xor
test
fisttpl
xchg
into
repz
into
sub
aam
mov
pusha
nop
mov
sub
mov
test
push
scas
push
add
arpl
pop
popa
cmp
and
daa
cmp
push
imul
jp
jnp
add
movsl
js
test
mov
fcmovb
cli
mov
jmp
rcrl
icebp
out
outsb
sbb
push
inc
stos
push
lods
es
push
inc
jne
sbb
dec
mov
dec
lods
mov
push
sub
adc
stos
leave
pop
sub
xchg
mov
mov
mov
jne
ret
mov
stos
aad
stos
pop
mov
aas
pop
jmp
pop
clc
lea
push
mov
mov
std
les
ss
add
jae
inc
fisttpl
shlb
andb
jne
pop
fnstsw
in
rolb
jno
mov
ljmp
inc
insb
cltd
loopne
jg
test
in
ret
hlt
test
lahf
aad
cmpsb
gs
pop
jno
leave
popa
clc
in
pop
test
lahf
add
dec
mov
loop
repz
jp
cltd
pop
inc
mov
test
cmp
clc
dec
push
pop
aaa
loopne
lods
lods
imul
and
push
jae
stos
inc
rol
ljmp
jb
or
lds
mov
sahf
mov
push
mov
dec
sbb
sub
jae
push
push
arpl
pop
xor
add
mov
insl
cmc
cmp
xchg
loope
js
pop
and
fisttpll
add
fstpt
idivb
das
aas
lds
mov
jno
and
out
mov
inc
push
mov
add
pushl
es
add
pop
push
add
in
stos
dec
sub
mov
push
sbb
cwtl
jae
pop
jmp
sbb
push
bound
add
cltd
subl
jne
push
ljmp
shlb
movsl
das
sar
inc
loope
jo
xor
es
jl
cmpsl
sbb
flds
pop
jns
nop
scas
add
or
dec
filds
dec
push
movsl
bnd
orl
call
inc
jl
push
xor
lods
les
dec
xlat
xchg
push
cmpsl
ja
scas
inc
push
orb
bswap
xchg
cmp
mov
push
out
adc
sub
fidivrl
fidivs
sub
outsl
mov
test
push
mov
in
cli
fldl
jne
pop
push
pop
fadds
scas
jp
lcall
and
sbb
and
sub
xchg
lcall
xchg
outsl
or
lcall
fisttps
out
adc
push
mov
hlt
outsl
in
test
push
xor
xorb
mov
popf
or
adc
xchg
outsl
imul
aad
dec
cmpb
mov
in
or
lds
pop
test
jo
je
lea
mov
jmp
lea
dec
dec
mov
xlat
push
lcall
adc
and
jnp
imull
das
in
adc
push
stos
xchg
popf
lods
cmp
cmp
daa
js
pushf
lret
rcrl
or
imul
inc
sbb
cmc
dec
lods
mov
stc
fcmove
mov
dec
fdivrs
push
movsb
xchg
int
shrb
push
filds
fimuls
push
icebp
cmpsl
rol
imul
clc
leave
sarb
orl
lret
icebp
lods
fs
mov
sbb
bound
add
aas
sbb
add
aad
lret
xor
pop
sti
arpl
jbe
mov
sar
stos
push
adc
imul
push
xchg
ret
lods
jmp
mov
scas
int3
and
jg
inc
mov
mov
jae
pop
test
in
fcmovnb
dec
xor
xor
push
mov
dec
imul
mov
cwtl
mov
stc
mov
cwtl
pusha
cmpsl
repz
jae
mov
out
jg
adc
inc
andl
mov
xchg
mov
pop
fmuls
jae
dec
mov
vphsubwd
cmp
into
icebp
es
cmpsl
inc
test
jbe
outsl
jmp
adc
pop
cmp
mov
loop
sahf
fcomip
cmp
push
seto
enter
fdivr
add
fbstp
daa
jp
imul
scas
jp
out
ljmp
sub
movsl
cwtl
pop
xchg
dec
ds
repnz
roll
out
fwait
call
xor
mov
inc
inc
call
xchg
ljmp
pop
enter
inc
les
jg
cwtl
in
and
sbbl
js
mov
push
dec
jl
or
aam
insb
jmp
cld
xchg
add
fisttps
sub
mov
sbbb
mov
jno
dec
fs
jp
jb
mov
test
shll
jo
xlat
test
mov
xchg
popa
jae
cs
sub
or
push
movsb
das
inc
cmp
mov
out
aaa
adc
xchg
shlb
lds
fbstp
jne
lds
dec
xchg
dec
cmp
or
cmc
and
mov
cmp
mov
jb
sub
cs
insl
scas
jno
mov
mov
cwtl
arpl
and
jle
pop
fbstp
push
cs
cmp
stos
lahf
cli
fmul
mov
dec
sbb
or
int
or
lods
mov
mov
add
sub
shl
sbb
push
insb
xchg
mov
adc
insb
lahf
or
pop
xor
fs
jg
mov
mov
or
adcl
cmpl
subl
xchg
cmp
repnz
lock
addb
adc
leave
sub
pop
cmp
mov
arpl
test
sbb
cmpsb
pop
fnsave
sub
mov
inc
mov
popf
jne
cmc
push
cs
adc
jp
fcmove
cmpsb
sub
dec
data16
stos
lea
cmp
add
shrb
pop
int
push
mov
pop
xor
data16
lahf
fsub
outsl
int3
push
or
sbb
inc
movsb
mov
pop
repz
or
sbb
je
mov
push
rorl
cltd
ficoml
jns
sarb
popa
sahf
sub
mov
pop
out
ret
mov
pop
cmpb
ret
rcll
add
pop
mov
mov
jnp
daa
dec
xorl
or
mov
cmp
test
mov
mov
loope
push
mov
xchg
aam
loop
cwtl
jbe
fstpt
push
jo
sub
mov
test
mov
out
push
dec
lods
inc
jp
adcb
dec
es
jge
clc
push
mov
jecxz
mov
xchg
mov
cmp
pop
cmpb
mov
iret
movsb
es
mov
fstps
mov
pop
mov
jmp
addr16
insb
inc
lods
adc
out
or
xchg
fs
pop
cmp
pusha
push
jmp
cmp
mov
iret
lea
test
sbb
adc
pop
sbb
repnz
mov
js
mov
adc
popa
jp
arpl
mov
mov
push
movzwl
aas
sbb
cmp
dec
push
dec
addr16
fnstsw
mov
and
xor
pop
sbb
push
xor
adc
adc
std
sub
push
imul
mov
sub
xor
mov
sub
add
decl
sub
xchg
sub
mov
mov
insl
inc
dec
jo
sbb
xlat
outsl
out
imul
and
fwait
add
mov
pusha
shlb
dec
pop
out
mov
cwtl
shrb
popf
test
std
rclb
into
aaa
sub
dec
lret
or
inc
aad
push
lret
movsb
jmp
pop
or
das
in
sub
mov
pushf
adc
loop
fcomps
sbb
mov
mov
mov
xchg
icebp
lods
pop
mov
add
mov
xchg
dec
push
jne
jno
nop
mov
fdivl
js
mov
imul
test
cmp
or
sub
jbe
fbstp
mov
or
cwtl
pop
add
ret
mov
mov
out
push
jmp
inc
testl
mov
pushf
sub
or
mov
ss
and
add
aas
adc
cmp
ljmp
mov
jle
mov
ds
inc
mov
adc
mov
fistpll
mov
mov
lcall
mov
fisttps
and
es
daa
jae
jb
hlt
mov
inc
adc
xor
and
les
mov
jl
or
out
pushf
loop
xor
ds
sahf
cld
scas
icebp
mov
xor
pusha
add
aam
fadds
call
mov
cwtl
cmp
dec
cmp
insb
mov
jnp
test
movsl
fucomi
outsl
fidivrs
stos
mov
pop
ljmp
mov
jmp
aaa
rcr
sbb
or
push
add
jno
addr16
movsb
jle
pop
mov
fs
int3
lahf
nop
decb
adc
add
and
in
fcmovnu
test
andl
fidivrs
mov
xchg
ror
inc
lods
sbb
cmp
or
aas
push
int3
pushf
lea
repnz
fisttpll
dec
fxam
push
je
and
fdivr
xchg
or
pop
mov
scas
shlb
pop
mov
dec
cmp
in
popa
lahf
push
daa
sub
push
loopne
pop
add
adc
mov
shll
cmp
idiv
sub
mov
or
cld
fcoml
xor
bound
out
pop
ret
mov
and
xor
xchg
mov
ljmp
mov
testl
daa
xlat
inc
aam
ljmp
test
and
lods
into
daa
cmp
rclb
cmpsl
sbbb
ret
cmpsl
outsb
dec
lea
sbb
xchg
fimuls
sub
and
cmp
rorl
scas
mov
sahf
fcmovnu
nop
ficoml
js
xchg
cmpsb
push
mov
adc
cmp
fisubrs
or
mov
test
pop
dec
dec
stc
into
and
adc
add
in
xor
cmpsl
int3
pop
aaa
xchg
pop
dec
lret
sbb
sub
mov
push
popl
mov
lcall
lods
nop
mov
push
pop
dec
pushf
into
les
mov
cmpsb
push
mov
loopne
pop
neg
and
sbb
dec
lahf
add
mov
insl
setb
xchg
shll
and
loope
jge,pn
popa
mov
jmp
cmpb
loopne
lds
cmp
faddl
fildll
xchg
push
adc
cmp
or
inc
inc
fsubs
cmp
or
lods
dec
sbb
call
sbb
inc
testb
outsb
shrl
jl
push
xchg
arpl
mov
int3
push
push
fsts
iret
fdivrl
cwtl
rcrl
jne
pop
in
test
cmp
inc
enter
adc
jno
sbbl
shr
cmpsb
and
xchg
stos
dec
inc
stos
mov
add
and
fidivs
xor
push
lds
flds
mov
mov
jp
lcall
inc
or
std
stos
sti
mov
inc
lea
jne
push
dec
daa
subl
fistpll
popf
push
ds
mov
es
or
mov
mov
push
int3
pushf
xchg
jo
imull
movsl
xchg
mov
scas
popf
xor
add
adc
nop
or
orl
inc
pcmpeqb
ret
push
add
fsts
inc
and
dec
adc
adc
aas
and
inc
xlat
push
adc
dec
push
dec
or
pop
pop
dec
inc
pop
adc
ret
loope
add
jecxz
adc
pop
das
inc
mov
push
lret
adc
xor
out
ret
adc
mov
mov
adc
sti
fwait
jb
and
je
jae
dec
or
rcrb
xchg
mov
xor
push
les
aad
enter
movsl
pop
ret
into
ds
faddl
mov
push
mov
push
fwait
or
pop
into
mov
mov
rclb
lret
mov
sub
pop
mov
and
sbb
aaa
std
sub
dec
dec
pop
out
orl
pushf
outsl
xchg
sbb
adc
sbb
cmp
loope
aas
testb
iret
fnstenv
add
pop
test
mov
jns
dec
fbstp
pushf
cmpsl
jne
pop
pop
dec
dec
add
loopne
out
popf
xchg
or
fs
cld
mov
scas
cld
adc
xor
jl
cwtl
jg
push
in
int3
mov
add
cs
mov
fbld
cmp
xchg
jne
fwait
inc
push
fldl2e
lods
inc
movsb
jae
pop
imul
movsl
mov
mov
and
cltd
mov
sub
mov
cmp
xchg
jg
fistpll
movsl
mov
pop
push
jb
icebp
inc
das
rcr
sub
jno
and
pop
outsb
in
jae
mov
sbb
jmp
fbstp
inc
outsb
fildl
js
stc
dec
setp
push
lahf
aam
lahf
movsl
jne
scas
fcomip
and
mov
mov
mov
les
and
insl
les
dec
jne
cli
out
call
and
sub
add
add
adc
xor
add
aas
enter
sub
and
les
jge
jbe
or
scas
outsl
popa
call
mov
mov
mov
mov
lods
movsb
or
pop
jnp
aas
jb
push
adc
pusha
inc
jmp
je
mov
in
pop
inc
mov
mov
adc
dec
js
dec
mov
adc
cltd
mov
pop
enter
push
push
leave
mov
sbb
lea
mov
leave
adc
scas
xor
pop
dec
cmp
sub
not
repnz
or
sub
fmuls
push
cmp
lret
jbe
popf
call
hlt
pop
dec
loop
inc
mov
sahf
arpl
fwait
rclb
add
and
push
inc
shll
mov
jb
inc
sub
ret
sub
xor
fbld
pop
cmpsb
ljmp
sbb
sbb
cwtl
inc
mov
mov
scas
mov
mov
dec
sbb
xchg
fs
sub
cmp
fsubrl
add
jns
mov
xchg
leave
ror
loopne
lock
fcmovu
xchg
or
and
insb
mov
xchg
je
mov
sbb
inc
movsl
repz
cmp
jne
mov
dec
mov
pusha
adc
pop
inc
imul
adc
aad
or
icebp
adc
xlat
aas
add
aaa
and
fstl
daa
test
mov
sbb
scas
lods
dec
xor
loopne
push
lods
pop
out
std
cmp
xlat
dec
mov
fsts
sub
mov
push
pusha
jle
inc
mov
lods
mov
in
cltd
mov
in
nop
addl
lods
lret
add
cld
pop
das
push
in
shrl
rcl
fsubrl
shll
xchg
dec
fwait
pushf
pop
or
int3
push
jmp
mov
inc
or
xchg
inc
dec
pop
push
and
outsb
and
push
sbb
jle
jnp
fsub
inc
fisubrl
adc
mov
sbb
sbb
fsub
cmp
mov
insb
ljmp
mov
cmp
lea
loopne
out
mov
fisubrl
jmp
data16
pop
std
lret
add
mov
adc
push
jmp
cs
or
add
iret
mov
test
push
je
mov
and
or
sbb
pusha
addl
out
test
xor
fs
ja
out
je
aaa
mov
into
xor
pop
dec
imul
jbe
mov
fwait
sub
js
pop
push
lcall
inc
inc
or
jge
int
fs
cmp
pop
mov
mov
jp
cmp
jp
cmp
cltd
jae
loopne
ret
cmp
mov
loopne
mov
push
mov
data16
in
push
or
push
adc
rcl
test
in
jo
cltd
data16
dec
fs
mov
loop
loope
mov
add
xchg
cmpl
aas
out
fildll
ret
imulb
or
push
sub
jecxz
lods
cmp
xor
lcall
mov
les
hlt
push
adc
cmp
ja
aad
adc
test
pop
push
ss
xchg
idivb
mov
jle
lods
rcll
subl
jb
mov
sbb
or
xchg
lahf
adc
and
mov
jbe
xchg
iret
data16
out
pop
sub
test
xchg
xchg
inc
loop
int3
int
cmc
add
pop
cwtl
mov
pushf
mov
fisubrl
cmp
add
push
and
mov
mov
out
ret
mulb
mov
outsl
inc
xchg
std
outsl
push
lea
jmp
imul
inc
lret
std
hlt
xor
icebp
jmp
mov
in
shrb
sub
add
pop
hlt
inc
jp
insb
lds
lret
mov
push
lret
and
inc
cli
in
and
test
out
mov
jo
out
mov
xchg
les
or
pop
xchg
jo
inc
jae
sbb
hlt
dec
pop
pop
andb
in
incl
sub
xor
in
vcomisd
sub
add
fnstenv
bnd
mov
scas
inc
cltd
cmp
mov
adc
in
mov
out
jecxz
movsl
es
xor
int
xlat
cmp
adc
push
mov
jne
jge
lret
mov
add
cmpb
mov
sub
pushf
outsb
in
sahf
xchg
push
inc
sahf
ljmp
sbb
jb
shlb
or
inc
mov
pop
push
cld
addr16
in
mov
cli
imul
int3
jae
sub
testl
scas
sbb
pushf
in
rcll
adcb
ss
mov
sbb
mov
fstl
sub
or
fwait
shl
pop
int
shrl
repnz
icebp
into
cmp
ja
xlat
or
loopne
pop
adc
jl
fcoml
mulb
xchg
adc
cmc
popf
jno
xor
gs
sub
xchg
xchg
inc
in
dec
fucomp
arpl
push
insb
jnp
sub
imul
pop
push
movsb
imul
add
ja
and
xor
imul
daa
push
xor
jbe
ret
stos
inc
mov
ja,pn
xchg
sub
insb
and
adc
xor
adc
out
out
outsl
xlat
xchg
jg
push
xor
jle
movsl
scas
xchg
iret
mov
scas
aad
cmp
fistl
mov
push
xlat
aad
cmpsb
movsl
push
sbb
jg
inc
mov
mov
push
fstpl
jbe
push
lock
pushf
movsl
mov
fimuls
inc
jb
mov
negl
out
xorb
add
add
and
cmp
push
push
lods
ss
cltd
dec
sbb
dec
in
data16
imul
inc
imul
daa
push
push
stos
or
mov
xchg
outsl
lods
pusha
xor
dec
sbb
fwait
orb
lds
lea
jmp
push
mov
ds
popa
lds
jnp
out
pminsw
cmpsb
stc
outsb
imul
ret
imul
movl
sbb
xchg
dec
lcall
mov
cmp
mov
pusha
add
in
dec
fs
lcall
inc
lcall
in
pop
fldt
xor
cltd
add
insl
outsb
insb
push
pop
cmp
pop
das
push
shrb
push
iret
jb
dec
jae
adc
les
fsubrl
sub
lcall
pop
sbb
xor
stc
data16
test
adc
mov
jne
jg
shll
shlb
imulb
not
sbb
pop
je
repz
mov
sahf
lods
xor
pop
push
inc
lock
push
clc
imul
mov
inc
sub
outsb
lret
lcall
sti
lods
push
test
push
cmpsl
orl
insl
inc
mov
ret
add
fildl
out
cmpsb
push
out
cmp
jecxz
stc
pop
shl
xor
sub
fisubrl
dec
add
jbe
pop
fidivl
pusha
or
cmp
push
xorb
jne
pop
dec
mov
test
filds
mov
test
int
jmp
in
add
in
sbb
inc
or
mov
cld
or
inc
popf
pop
ss
movsb
test
and
pop
cmp
sarl
ja
and
or
or
dec
scas
shll
pmulhuw
ret
push
mov
push
out
mov
mov
dec
jecxz
xchg
mov
sbb
je
aam
iret
mov
ds
pop
mov
or
xchg
dec
push
pop
outsl
out
fisubrs
xor
adc
pop
test
adc
lds
jnp
fwait
data16
std
ljmp
xchg
jecxz
fs
repnz
cmp
cmp
outsl
xor
cmp
das
push
shlb
lahf
pop
cmp
xchg
call
xlat
fldt
out
push
es
jecxz
jge
xor
pop
jbe
test
adc
xchg
xchg
or
fmuls
scas
cmp
inc
sbb
inc
xchg
sbb
xchg
adc
imul
jne
fwait
int
out
push
xor
cmpl
test
and
pop
cmpl
xlat
sub
adc
data16
push
mov
ret
xchg
aad
mov
outsl
jp
jl
adc
daa
mov
icebp
mov
push
push
adc
leave
fnstenv
ljmp
scas
pop
add
xor
mov
jno
ds
cwtl
rolb
xchg
ret
cli
cmp
and
mov
mov
insb
dec
jae
fdivl
sbb
push
inc
test
hlt
cli
jb
fildll
fstps
es
movsb
ret
mov
loope
cmp
mov
or
test
repnz
pop
or
mov
cwtl
into
scas
push
fcoml
mov
imull
shrl
in
adc
fcomps
xor
rcrl
jno
and
mov
lods
gs
or
negl
ljmp
lods
ja
addr16
and
pop
push
push
mov
adc
test
sub
xor
xor
fstpl
dec
cmc
in
sub
out
dec
add
fistl
and
daa
inc
repnz
sbb
mov
xchg
movnti
loopne
cmp
sub
stos
push
mov
repz
addr16
movsb
mov
sbb
sub
pop
push
out
xor
js
adc
lea
mov
lods
push
xorl
mov
loop
jg
and
xor
push
cmp
cs
adc
jp
inc
scas
stc
into
sbbl
xchg
pop
in
ds
nop
xor
in
mov
and
add
add
jg
ret
mov
pop
push
cmp
adc
lock
loope
dec
push
cltd
mov
movsl
add
out
mov
gs
sbb
and
push
jno
inc
xchg
mov
insb
loop
add
xor
out
xor
in
outsb
sbb
mov
es
ja
enter
loopne
movsb
loopne
push
lock
les
xor
mov
fadd
ja
sbb
inc
jno
xchg
leave
mov
insl
xor
fidivrl
cwtl
jno
aaa
clc
dec
mov
fcompl
jb
or
sub
pop
fcmovbe
sub
cs
add
fdivrs
lcall
fwait
push
fimull
ficompl
add
dec
dec
daa
out
je
or
into
dec
sarl
stos
push
hlt
or
outsl
xlat
mov
stos
xchg
stos
xor
push
inc
mov
pop
mov
dec
mov
or
mov
mov
jno
fcmovb
test
arpl
imul
mov
iret
aad
mov
push
nop
daa
ret
inc
adc
xchg
testb
sub
mov
dec
inc
cmp
dec
sbbl
push
xchg
xor
jmp
or
cli
loope
or
dec
add
repnz
fcmovne
inc
sbb
or
test
xchg
insb
fnstenv
arpl
jbe
add
jmp
inc
mov
sbb
pop
mov
les
xlat
imul
ret
out
pop
push
fdivrl
loopne
mov
mov
lret
jne
gs
outsb
xor
inc
mov
sbb
call
aas
push
inc
push
mov
xchg
addb
bound
cs
or
push
in
scas
insb
int
lcall
xor
imul
sub
lret
mov
imul
push
fnstcw
insl
shll
fwait
add
xchg
and
jns
jp
sub
sub
inc
in
ljmp
inc
fsubl
sub
daa
fistpl
repnz
pop
cmp
popl
and
jae
cmc
lret
out
ljmp
push
or
cmp
stc
dec
lock
sub
outsl
jp
push
repz
cli
ds
mov
cwtl
stc
and
push
xchg
mov
in
fidivrl
test
jns
adc
inc
and
cmpsb
mov
movsb
cmpsl
sti
stc
lcall
and
jecxz
mov
pushf
ja
and
sub
arpl
lods
sahf
inc
lret
mov
xor
jmp
stos
cli
fnstenv
mov
insb
in
mov
fadd
lock
pop
jp
lods
jecxz
cli
idivl
int
mov
dec
xchg
icebp
mov
int3
mov
enter
jecxz
out
ret
lcall
fmuls
lods
jns
pop
xchg
mov
out
push
jecxz
mov
lea
sub
scas
xchg
mov
into
inc
shll
push
add
jb
js
mov
and
cmp
dec
sbb
fsts
insb
or
add
cmpsl
xchg
jbe
sub
in
and
inc
cwtl
dec
jle
fisubrs
pop
gs
in
gs
js
xor
outsb
js
shll
pop
jmp
jp
test
cmp
sbb
or
mov
fcoml
adc
fsubl
xchg
sub
sbb
push
fisttpll
es
xor
inc
pop
shl
hlt
icebp
inc
cli
sub
mov
imul
iret
test
sbb
in
rclb
mov
mov
stos
fwait
out
mov
int3
imul
fisubrs
int3
sub
ds
out
lock
and
xchg
mov
fcoml
aad
push
jns
or
mov
sbbl
mov
push
jg
imul
enter
inc
jl
ljmp
xlat
mov
repz
test
mov
loopne
stos
repz
bnd
jmp
fcoml
jmp
pop
ja
inc
sbb
movl
jnp
jmp
dec
pop
inc
and
lds
je
cld
inc
push
add
rorl
jp
or
sbbb
loopne
insb
cld
adc
xchg
ljmp
scas
mov
test
sbb
adc
inc
lods
inc
in
pop
lahf
cmp
sub
gs
sbb
test
fiadds
out
pop
pop
out
or
and
fucomp
pmaxsw
insl
bound
inc
in
dec
stos
movsl
xor
insb
fdivrl
icebp
jbe
nop
cmc
ret
xor
cmp
movsb
cmp
jecxz
popf
sbbb
pop
stos
insl
cmp
jle
dec
cmpl
test
push
js
rcr
js
out
das
push
lods
in
lock
add
jb
jns
inc
mov
popf
test
out
lret
stos
fbstp
mov
mov
mov
push
sbb
mov
data16
scas
mov
loopne
mov
or
sub
icebp
mov
push
jno
pop
insl
nop
cmp
andb
jne
fistps
xchg
test
pop
ss
mov
sbb
aaa
or
jge
and
inc
aam
mov
dec
leave
push
push
aad
ret
xlat
int
add
lds
gs
sub
mov
jae
fisubrs
addl
push
mov
imul
xchg
ljmp
std
push
add
inc
push
pop
sbb
jmp
and
jle
std
push
test
stc
cmp
xor
push
xchg
dec
sub
mov
cmp
out
fiadds
cmp
jecxz
repz
xor
push
jecxz
pop
out
add
punpcklbw
popa
stos
mov
and
ss
adc
xchg
jno
xor
bound
cld
xchg
mov
shrl
pop
stc
fcomps
fs
and
cmpsb
sahf
in
sbb
push
sbb
shrl
and
lcall
jl
daa
and
dec
stos
xchg
addl
push
jmp
lods
ret
stos
mov
shl
movsl
push
sub
mov
adc
xor
add
or
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
sub
data16
jmp
jp
or
mov
leave
mov
and
out
icebp
cmp
movsb
adc
jnp
loop
nop
or
ja
push
stos
and
push
or
mov
ret
xchg
inc
divb
pop
dec
cwtl
insl
add
lret
lret
out
sbb
imul
sub
daa
jbe
mov
iret
rcrl
es
popf
cmpsl
and
pushf
dec
lods
sti
movsl
xchg
popa
cwtl
decl
xor
dec
sub
rcrl
cmp
scas
lea
sub
in
lods
jbe
jl
add
test
sbb
push
pop
add
cwtl
xchg
cmpl
popf
aas
ja
pop
lret
push
and
das
es
and
adc
xchg
call
xlat
dec
mov
inc
xadd
shll
rcrl
ret
repnz
sbb
lea
and
fdivs
mov
clc
roll
scas
pop
insb
pop
sahf
adc
iret
adc
shr
pusha
mov
ret
push
fwait
dec
cmpsb
pushf
jb
dec
lea
and
add
xor
adc
sub
mov
xchg
xor
test
stc
loop
outsl
sbb
sbb
xchg
or
add
xor
test
sbb
push
hlt
xchg
xor
in
pop
cmp
repnz
push
mov
mov
jmp
or
pop
and
add
cmpsb
popa
jbe
xor
mov
lock
sub
movsb
jmp
sbb
icebp
cmp
jl
or
fucomi
repz
pop
sub
imul
repz
hlt
xchg
insl
in
jg
test
push
in
mov
pop
xor
mov
pop
leave
sbb
inc
xchg
add
lods
cmp
sar
adc
sub
lock
repz
mov
mov
push
jg
inc
jg
cmpsl
ljmp
fcmovne
es
or
dec
mov
pusha
bound
xor
inc
repz
inc
mov
adc
xchg
ss
test
sub
loopnew
addr16
or
mov
dec
pop
and
xlat
inc
aaa
adc
into
or
push
mov
push
addl
in
sti
pop
mov
add
scas
stos
sub
xlat
leave
scas
les
fists
out
push
test
sar
add
testb
and
in
dec
rcll
xchg
sbb
jmp
sbb
shl
lahf
addr16
lret
xchg
mov
adc
enter
pop
fwait
loopne
push
cmp
outsl
xor
mov
mov
and
and
addr16
test
and
loopne
inc
inc
outsb
lahf
andl
aaa
movsl
in
stc
insb
sti
mov
and
fs
lock
fidivrs
sub
mov
in
jg
sbb
movsl
shl
sbb
sbb
inc
xchg
in
sbb
push
add
add
xchg
cmp
sub
in
mov
xchg
icebp
cmp
sahf
out
test
and
outsb
pop
stc
mov
dec
in
dec
sub
aad
sub
mov
xor
xor
je
ds
loop
inc
pusha
lahf
mov
js
mov
call
shlb
xor
sbb
xchg
loopne
aas
ret
add
daa
xor
lret
mov
mov
out
testb
pop
sbb
loop
mov
sbb
aaa
cwtl
add
flds
mov
xlat
fcomps
movsl
xor
ja
icebp
shrl
ja
xchg
subb
iret
fisttpl
inc
sbb
gs
mov
and
push
fsubrs
enter
rclb
pushf
movsb
icebp
pusha
mull
xor
jecxz
lods
jge
push
mov
ja
test
jle
dec
call
xchg
movsl
insb
imul
cbtw
cmp
jnp
xor
xchg
shll
mov
cmp
into
sbb
mov
mov
dec
jnp
lret
adcl
mov
inc
mov
lods
stos
sbb
js
xchg
test
add
sub
cmp
cli
test
in
icebp
std
xor
add
pop
pop
add
sbb
stos
lock
xor
inc
mov
aad
pop
loopne
or
stc
cmpsl
dec
fcoms
movsl
dec
dec
inc
hlt
xor
std
cld
jne
sub
add
hlt
sub
popf
or
push
int
into
xor
and
mov
pop
cltd
sarl
leave
outsb
lods
mov
fdiv
dec
ljmp
gs
mov
cmp
jmp
mov
jmp
jns
mov
inc
xor
negl
or
shrb
out
das
test
js
push
push
mov
data16
ds
add
inc
or
or
faddp
pop
adc
mov
cmp
mov
inc
stos
push
vsqrtss
outsb
scas
cwtl
xor
shl
enter
cld
es
cmovge
lods
call
lods
xor
push
lret
and
imul
mov
dec
popa
ror
mov
jns
adc
stos
hlt
ror
cmp
popa
and
imul
xchg
pop
and
insl
out
imul
in
negb
xchg
cmp
jmp
nop
clc
fdivr
std
addr16
addl
jno
loop
mov
jno
stc
mov
push
jne
and
bound
shrl
mov
cli
adc
ljmp
and
ds
sahf
out
add
pop
dec
sti
push
jb
iret
add
dec
mov
or
outsl
negb
jno
arpl
leave
fstpt
rclb
xor
push
jle
lds
fidivs
pop
repz
fldcw
fstl
mov
bnd
jmp
fsts
push
dec
clc
testb
lods
out
mov
inc
or
cmp
scas
mov
xchg
outsb
shll
push
adc
pop
push
inc
and
or
ds
mov
test
push
mov
and
adc
adc
push
pop
mov
sub
test
mov
pop
inc
mov
mov
pusha
ljmp
pop
flds
push
fcmovnb
xor
call
cltd
add
out
pop
adc
add
popf
test
scas
lods
cmc
jb
cmpsl
lods
pop
incb
cvtps2pd
cmp
mov
mov
pushw
rclb
mov
mov
pop
jmp
hlt
dec
add
adc
hlt
push
pop
es
dec
push
mov
movb
in
nop
ja
sub
jns
orb
call
jge
jmp
sub
in
das
popa
jo
sub
jns
jae
cmp
jbe
adcb
adc
jl
sbb
stos
mov
stos
cmp
js
jp
adcb
sub
jl
mov
loope
xchg
arpl
sbb
sbb
or
add
pop
cld
ret
mov
roll
xlat
jnp
test
repz
or
in
adc
mov
fisttps
dec
dec
jmp
jecxz
es
mov
mov
and
push
stc
mov
stos
clc
mov
adc
into
lock
fs
ret
hlt
outsb
and
idiv
rcl
or
or
jbe
out
jecxz
pop
mov
dec
test
leave
hlt
sti
adc
add
mov
pushf
std
lret
hlt
sbb
pop
cmpsl
inc
jl
mov
rorl
and
aas
int3
dec
lahf
dec
shrl
mov
cmpsl
cmp
stos
xlat
fwait
es
xor
cmp
xlat
mov
popa
mov
dec
vunpckhps
lods
call
mul
leave
mov
cwtl
pop
push
sub
mov
mov
jo
cmc
xor
push
pop
push
sub
imul
jne
pop
outsl
subl
adc
pop
mov
sub
cmpsb
mov
int3
cmc
jae
pop
mov
or
punpcklbw
add
cld
ret
xchg
hlt
xchg
xor
inc
sahf
ds
adc
fs
addr16
faddp
fs
pop
pop
pop
sti
jle
inc
movb
jb
xchg
pop
inc
push
cmp
sbbl
out
pop
jne
mov
jle
fimull
jge
repnz
xor
out
adcb
sbb
ret
mov
rorl
and
mov
insb
in
push
xchg
pop
shl
out
push
mov
fsubs
ret
dec
ss
mov
or
or
pusha
cmp
cld
mov
daa
or
sbb
add
lock
jae
adc
fistl
iret
and
jae
and
popa
jae
les
push
and
gs
jge
dec
imul
add
adc
repnz
jl
sub
adc
add
cwtl
lods
fs
jge
xor
mov
lods
popa
push
test
push
outsb
scas
inc
jmp
in
adc
sar
jmp
jle
xchg
jnp
repz
js
mov
pusha
test
jnp
fdivrp
ljmp
popf
mov
mov
je
jno
pop
into
inc
shl
mov
push
jns
jg
cmpw
add
data16
pop
add
mov
mov
xor
push
push
inc
mov
enter
in
popf
pop
mov
out
mov
xchg
rcr
sbb
pop
cmp
ds
vpmulhw
mov
xchg
nop
jbe
pop
push
mov
or
loop
pusha
sahf
sub
adc
or
mov
mov
adc
bound
jb
hlt
cmpsl
mov
arpl
icebp
js
xor
cmp
pop
fmuls
sbb
cli
or
sbb
mov
dec
repz
mov
push
add
inc
pop
stc
out
imul
es
xor
pop
or
pusha
icebp
aad
mov
xlat
fs
xchg
lock
int3
mov
push
js
sub
lahf
jmp
out
imul
clc
fwait
ja
lret
stos
mov
xchg
inc
pusha
jle
push
pop
aas
sbbb
or
push
loopne
push
pushf
cmp
out
jns
xchg
fmuls
sbb
inc
decl
lods
xor
jle
mov
sbb
mov
gs
imull
enter
mov
inc
adc
out
mov
lods
push
pop
mov
push
jmp
out
mov
push
xor
lcall
aad
pop
cmp
mov
aas
aad
mov
cmp
inc
test
js
dec
out
mov
into
mov
jns
or
push
mov
lock
cmp
stos
sbb
jg
insl
testb
or
or
push
out
push
mov
lcall
movsl
test
cmp
movsb
jo
sti
std
nop
loope
ja
aad
mov
cmpsl
stc
sti
xchg
jo
cmpsb
dec
and
or
cltd
adc
jmp
jmp
pop
stos
mov
dec
outsl
pop
outsb
push
pop
ret
dec
inc
outsl
inc
ret
xchg
cli
cwtl
test
or
stc
mov
iret
cs
push
inc
inc
add
imul
in
stos
xchg
inc
std
mov
in
in
arpl
inc
xor
es
push
stc
icebp
mov
stc
icebp
or
jb
rdpmc
xor
gs
sahf
sub
aaa
cwtl
les
nop
mov
leave
notl
push
dec
mov
les
insl
mov
jecxz
sub
cmp
pop
into
mov
and
out
or
xchg
jbe
std
mov
es
in
std
fcmovnb
push
xchg
xchg
and
or
fldcw
out
adc
push
rorb
jmp
sbb
jbe
sub
ss
shll
xor
in
push
shl
adc
aaa
ss
pop
sahf
in
rorb
loopne
cmc
mov
imul
xor
xchg
push
push
insb
adc
dec
repz
mov
cmpsb
sbb
adc
retw
inc
sbb
js
sbb
int
jg
es
inc
add
pop
push
lods
das
or
mov
mov
or
jne
mov
divb
sbb
xchg
push
outsb
sbb
hlt
push
lret
sub
ret
adc
popf
mov
sarb
bound
orl
fidivrl
jae
lods
test
loopne
or
into
push
andb
jo
mov
sbb
dec
jge
mov
mov
es
sbb
loop
jnp
movsb
dec
iret
add
mov
out
mov
add
inc
stc
lea
cmp
mov
pop
adc
pop
inc
push
jg
out
rdpmc
jge
xchg
push
lret
cmp
repz
adc
in
stc
mov
fidivs
icebp
ret
mov
push
push
rcrb
imul
pop
cwtl
mov
mov
pop
and
repnz
pushf
rorb
imul
repz
mov
jmp
jns
movsl
fwait
pusha
arpl
and
scas
push
jo
pop
sub
imul
jecxz
test
aas
pop
js
loop
and
lahf
rcll
lcall
push
add
inc
push
push
fwait
addr16
jo
test
fsts
pop
cwtl
cmp
mov
mov
xor
pop
sahf
jl
push
cmc
and
mov
sbb
mov
lahf
push
repnz
dec
xor
inc
adc
mov
xchg
lods
pushf
sub
imul
roll
leave
cs
or
mov
sarl
mov
pop
pop
clc
fs
hlt
add
mov
in
adc
mov
fisubrl
sub
jmp
mov
imul
xor
sarb
or
jmp
std
push
test
push
mov
add
shr
shlb
mov
cmp
lods
arpl
je
ret
ret
fs
hlt
negl
mov
pop
test
add
bound
mov
mov
pop
xor
push
icebp
mov
call
lret
sub
jmp
push
add
shrb
add
mov
in
stos
fsub
adc
shll
sahf
test
in
insb
and
fadd
mov
cmp
add
pushf
inc
xchg
mov
add
add
in
mov
add
xlat
ds
push
adc
movsl
mov
out
mov
sub
sub
lret
push
cmp
je
sub
add
loopne
mov
sub
cltd
out
pusha
cmp
lds
pop
pusha
jg
in
sub
insb
out
fisubl
ja
mov
xchg
scas
addr16
inc
push
popf
lret
mov
cmp
and
mov
jp
leave
sub
rorb
addr16
aas
inc
repz
jnp
mov
and
and
loope
shll
loop
lods
inc
mov
or
loopne
hlt
imulb
repz
lret
inc
stos
push
adc
or
popa
add
add
mov
mov
sub
sbb
daa
xchg
push
cltd
dec
aad
sbb
xor
dec
jae
inc
inc
repnz
scas
add
push
lock
adc
outsl
sbb
js
sbb
lahf
sub
fwait
ljmp
sbb
enter
loope
mov
mov
imulb
in
pop
insl
jle
dec
scas
sub
dec
dec
add
jbe
ret
mov
mov
ret
inc
lret
sbb
in
pop
xchg
es
push
pop
push
hlt
lods
dec
stos
pop
repnz
pop
adc
xor
xor
fidivl
daa
jns
ljmp
pushf
js
hlt
repz
rol
inc
mov
imul
fwait
xor
inc
mov
mov
movsb
xchg
lret
sti
add
sbb
pop
mov
cs
std
dec
scas
add
mov
mov
mov
adc
in
cmpsl
sar
inc
xchg
inc
je
subb
mov
jecxz
pop
mov
mov
repz
pushf
sub
dec
adc
mov
add
shlb
mov
mov
ret
fwait
nop
pushf
xor
in
add
push
mov
fcoms
add
jmp
jmp
xchg
add
dec
xchg
mov
fildl
shrb
xor
in
xchg
xor
insl
nop
jmp
mov
jmp
repz
and
mov
mov
imul
fistl
push
movsb
cld
movsl
fnstsw
mov
add
lods
pop
and
mov
mov
ds
out
adc
shll
sbb
jmp
fbld
clc
mov
rcrb
es
insb
scas
enter
mov
add
out
xchg
nop
adc
xchg
repnz
cmp
cmp
inc
fwait
sub
imul
pop
and
daa
out
in
push
push
or
sbb
mov
jo
adc
test
pop
call
xchg
add
push
mov
lcall
dec
xlat
jns
into
xchg
add
in
out
fistps
push
mov
sbb
mov
clc
cli
and
dec
lea
pop
addb
fsubrp
adc
test
loop
or
mov
cli
adc
sarl
sbb
loop
pop
add
adcb
inc
dec
cltd
mov
inc
lcall
or
cmp
in
loop
popf
fisubrl
pop
adc
jl
jecxz
fsubrs
and
icebp
repnz
sahf
mov
aad
lods
lds
mov
cmp
adc
pushf
mov
cmp
mov
cwtl
and
cmp
cmpsl
js
imul
sbb
mov
outsb
xchg
andb
push
into
lods
divb
test
ja
pushf
jg
mov
insl
aad
mov
adc
xlat
stos
push
xchg
dec
or
shr
xchg
xchg
xchg
lcall
and
fadds
cmp
stos
mov
clc
inc
lea
imul
mov
push
mov
push
loop
jno
inc
pop
sbb
popa
mov
mov
or
lods
repnz
cmpb
fisubrl
imul
outsb
inc
jae
fisubrl
xchg
inc
and
out
mov
push
mov
mov
or
pushf
shrl
adc
mov
jb
mov
scas
out
mov
aaa
stos
or
enter
adc
mov
movsl
adc
pop
xor
sub
cmp
xchg
fidivrl
mov
add
lods
xchg
leave
lahf
mov
mov
cmp
lods
jg
movsb
movsb
xor
jns
out
or
push
bound
lods
xchg
xorb
mov
lret
mov
mov
in
fs
cmpsb
add
dec
repnz
xor
repnz
push
push
div
xor
or
je
mov
jmp
ja
and
push
push
adc
sbb
shll
std
aam
xchg
and
cwtl
hlt
pusha
adc
jge
aam
pop
jb
push
daa
sbb
loope
jmp
call
ljmp
or
xor
subl
gs
stc
adc
ret
std
adc
rcll
fisttpll
jmp
lods
test
fwait
inc
and
push
xchg
sar
repz
sarl
sub
mov
cltd
in
push
xorl
xor
xor
push
repnz
sub
loop
mov
out
fcmovbe
test
insl
cmc
sbb
jge
aad
scas
movl
cmpsl
pusha
sti
dec
push
addb
stos
enter
cmc
in
sbb
jbe
pop
xor
mov
push
lock
pop
cwtl
out
jne
in
sbb
mov
and
push
and
add
adc
add
xchg
ds
sahf
sbbl
inc
loop
and
push
and
adc
mov
and
cwtl
aas
jmp
adc
xor
or
les
fldln2
pop
mov
mov
xor
push
popa
sub
loopne
inc
aad
lds
popf
adc
mov
xor
inc
dec
xchg
scas
ja
sbb
inc
add
insl
jno
mov
dec
dec
add
daa
icebp
adc
add
loope
inc
xchg
repnz
pop
fistpll
sbbb
stos
add
jb
push
lods
inc
xlat
or
pop
pop
xchg
decb
mov
fisttps
dec
loope
pusha
repnz
insl
mov
in
sahf
fsubrl
xchg
sub
int3
jge
mov
xchg
sub
push
scas
cmp
sti
lds
pop
fimuls
lahf
popa
lahf
sar
pusha
dec
cld
ljmp
cmp
mov
and
ds
test
fadds
mov
ret
ficomps
test
clc
and
enter
int3
repnz
dec
test
xchg
pop
jmp
in
inc
pop
xchg
pop
mov
inc
sbb
insb
rcrb
add
daa
add
pop
lahf
push
rorl
into
adc
fistpl
sbb
dec
adc
push
call
pop
shlb
test
jae
and
movntq
lods
cwtl
faddl
mov
adc
les
and
mov
fsubr
out
jmp
mov
sbb
std
sti
mov
lods
push
es
cmpsb
mov
xchg
pop
xor
fsincos
or
cmp
stos
push
mov
mov
sub
in
fucomip
xor
xlat
pop
js
adcb
sub
pop
xchg
push
sub
sub
icebp
adc
or
mov
xor
into
loopne
cli
xlat
cmc
in
dec
push
sub
test
imulb
mov
cmp
dec
xor
in
test
xor
add
mov
cmp
and
cmp
scas
arpl
dec
mov
dec
lods
xchg
adc
sti
adc
sub
aaa
loope
xchg
push
loopne
fimuls
jb
push
adc
sbb
dec
cltd
jno
test
add
xlat
in
aad
sbb
pop
dec
sbb
xchg
dec
pop
sbb
daa
movq
sbb
xchg
cmp
inc
popf
mov
pop
xor
mov
lret
je
or
mov
and
and
cmovno
pushf
mov
push
jecxz
mov
mov
push
cmp
shlb
xchg
test
ss
nop
les
test
xor
push
movsb
ficomps
ljmp
jns
inc
daa
inc
cli
into
fbld
dec
and
test
mov
rcrl
mov
enter
je
lret
sbb
aad
sbb
cmp
or
fnstsw
mov
pop
cmp
int3
cmp
sub
xchg
fldcw
cmp
out
jle
arpl
out
ffree
inc
inc
fstpl
mov
popf
mov
jle
repnz
stos
pop
mov
push
sti
adc
shlb
dec
out
dec
adc
rol
fcom
pop
shr
mov
je
xor
xor
mov
push
dec
mov
scas
or
lods
enter
mov
mov
xchg
rolb
les
and
push
cltd
int
filds
mov
mov
lods
mov
movsb
pop
cwtl
jge
xchg
icebp
add
adc
pop
fsubrs
push
pushf
test
sbb
xor
add
insl
je
xchg
lret
and
mov
push
rcrb
mov
sbbb
ret
mov
adc
incb
mov
xor
xchg
popf
stos
rcl
jbe
and
push
lret
pop
jne
mov
cmp
insb
and
lock
call
pop
rclb
psrlw
cmp
inc
cwtl
popa
outsb
mov
shlb
shll
jne
imul
adc
mov
rclb
cmp
in
lock
ljmp
gs
data16
sbb
test
cmp
js
andl
add
inc
cld
or
movsb
jle
aas
lahf
cmc
mov
mov
aam
cmpsb
mov
push
cmpsl
sbb
insl
sub
and
mov
cmp
push
pop
ret
mov
loop
notb
add
outsl
pop
dec
test
in
aaa
push
cwtl
out
cwtl
cli
dec
cmpsb
dec
mov
sub
mov
loop
lea
aad
jnp
aam
or
push
push
cmpb
inc
and
jbe
addr16
mull
sbb
xchg
mov
cli
dec
pop
push
cmp
jl
adc
mov
inc
inc
mov
cltd
pop
cld
jge
push
dec
push
add
jnp
mov
push
aas
adc
dec
jl
mov
insb
push
cmp
jmp
jmp
lock
and
or
pop
push
pop
ljmp
pop
cmpsb
xor
stos
and
adc
shl
xor
mov
push
in
lods
mov
jae
xchg
stc
out
call
jbe
imul
xchg
sbb
cs
cmpsb
sti
dec
push
push
in
jae
xchg
jo
xchg
inc
rorl
cld
inc
ljmp
mov
push
mov
mov
mov
iret
mov
dec
cltd
mov
out
mov
repz
out
js
nop
mov
pop
xor
mov
lods
inc
mov
xlat
add
add
mov
daa
add
ret
jnp
mov
fmuls
test
push
sub
and
xchg
out
push
sbb
and
movsl
pop
test
ret
or
xchg
in
or
xchg
xor
aad
cmp
jle
mov
aam
adc
xlat
push
pop
mov
int
push
sub
xor
lret
out
jne
imul
dec
fnsave
test
je
into
bound
or
sahf
mov
mov
test
int
adc
mov
es
gs
mov
dec
add
adcb
lea
imulb
fwait
insb
in
in
out
test
fmull
leave
outsb
hlt
aas
adc
lock
push
jp
fstps
push
jo
test
and
push
mov
cwtl
outsb
les
out
add
pop
or
loopne
imul
or
into
xchg
sub
push
jae
jno
jns
and
test
fs
imul
inc
repnz
push
xor
movsl
sub
scas
pop
adcl
xchg
test
out
mov
lretw
movsb
rcrl
jmp
jecxz
clc
js
fwait
loopne
mov
xlat
xchg
rol
cmp
inc
xchg
fistpll
pop
jecxz
out
popf
call
fsubl
xchg
jo
nop
jae
dec
push
lret
mov
loop
jg
test
pop
mov
outsl
jmp
inc
mov
aam
je
mov
add
mov
out
pop
stc
push
xor
sbb
fnstcw
repz
jno
ds
es
mov
popf
dec
inc
test
fidivrs
pop
push
pop
sahf
sub
sub
cmpb
out
mov
pop
cmp
es
jecxz
pushl
sub
fnsave
add
arpl
jg
fisubs
sub
test
add
xlat
mov
pop
xor
rorl
ror
pop
mov
pop
pop
dec
lcall
ss
in
outsl
push
std
push
adc
or
mov
imul
cld
mov
xor
cld
pop
push
inc
fst
sub
sbb
xor
mov
cld
or
ja
and
adc
in
push
in
lods
pusha
popf
fwait
or
aas
add
in
push
jmp
test
pop
pop
inc
and
orb
mov
pop
lods
cli
xor
mov
cmpsl
inc
arpl
cmp
inc
mov
xchg
inc
mov
ljmp
xchg
shrb
mov
inc
mov
mov
aam
xchg
cmp
cmc
xlat
jmp
mov
cmpl
or
sub
int
in
push
dec
lret
je
jp
xlat
dec
les
rcl
jge
sbb
fsub
mov
mov
scas
arpl
mov
cmp
aam
std
pushf
cmp
xchg
mov
and
aaa
xchg
lds
push
rcr
mov
cmpsl
fwait
mov
loopne
cld
fcompl
mov
or
inc
test
sbb
cli
scas
or
daa
xor
cmp
imul
dec
adc
call
push
inc
mov
insl
mov
xorl
and
dec
add
addr16
lret
out
add
in
jbe
mov
loope
mov
fs
jnp
test
push
call
dec
cmp
je
les
xchg
push
xor
call
loopne
loopne
inc
popf
lret
and
mov
jmp
lahf
fidivrs
mov
jge
push
mov
filds
pop
inc
inc
pop
mov
addr16
pop
cmp
lahf
sbb
adcl
sbb
jg
call
pop
jne
mov
iret
sub
mov
xlat
cmp
int3
out
pop
daa
sub
adc
push
push
cmp
lahf
or
ret
daa
sti
mov
add
outsl
or
andl
pop
mov
sbb
mov
out
or
push
pop
imul
xor
leave
pop
adc
pop
outsb
mov
mov
jge
loop
push
stos
pop
lahf
sbb
loop
inc
dec
stos
mov
push
pop
mov
push
fimuls
lret
int3
xor
loopne
and
fisubrl
add
pop
out
pop
sahf
add
cs
push
mov
mov
in
adc
dec
xor
push
scas
cwtl
sbb
std
fidivrl
add
gs
jns
jmp
cmpl
daa
cmp
pop
add
inc
popa
stos
stos
cmp
rclb
mov
jb
push
sbbl
push
fmull
stos
loop
xchg
lock
jb
das
jbe
xchg
arpl
fsts
aad
cmc
jle
or
add
xchg
mov
ja
push
out
mov
std
dec
fmuls
mov
in
jae
in
iret
outsb
imul
and
repnz
pusha
enter
mov
cmc
test
test
repz
loop
jno
es
sbb
xlat
add
cmpsl
mov
jg
movsb
sub
andl
mov
push
aas
rcrl
shlb
cwtl
repnz
inc
and
cmp
pop
dec
xor
or
out
mov
xchg
cwtl
subb
sub
push
imul
mov
pop
repnz
dec
ljmp
dec
sbb
test
movsl
imulb
test
stos
add
ja
jecxz
fs
sarb
jmp
dec
mov
lods
mov
adc
adc
mov
sbb
mov
or
shrb
cs
push
in
adc
ja
out
into
mov
loope
fnstcw
mov
gs
in
lcall
aam
test
or
sub
popf
mov
test
jmp
xchg
xorb
jb
mov
or
add
mov
push
pop
pop
add
lahf
cmp
sbb
and
add
mov
or
mov
pop
xor
out
pop
push
in
jl
outsl
call
es
insl
inc
out
lcall
mov
add
lret
lcall
and
cmp
ret
push
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
sbb
jae
jp
sbb
jp
or
mov
fnstcw
ss
ljmp
pusha
je,pn
movsl
xor
xchg
jb
mov
fsubs
and
mov
popl
mov
rorb
lock
push
in
cli
pop
sbb
jns
xchg
xor
fdivs
sti
pushf
loop
cmc
dec
add
mov
mov
pop
mov
mov
xchg
cmp
icebp
xchg
add
add
xchg
popa
sub
dec
push
pushl
xchg
cmp
mov
enter
daa
sbb
dec
test
adc
lock
loop
jmp
ret
inc
jbe
andps
pop
lret
repz
fcompl
stos
adc
or
cli
sbb
cwtl
push
test
das
insb
jb
out
push
add
mov
loop
xchg
dec
jle
xchg
or
pop
jnp
adc
or
fwait
adc
cmpsb
jae
xchg
sub
xchg
out
scas
bound
push
sti
or
popf
push
mov
frstor
xor
scas
js
mov
mov
mov
adc
ja
scas
cmp
insl
pop
mov
adc
and
push
adc
insb
imul
adc
lds
movsl
js
add
clc
or
dec
pop
je
add
pop
mov
xchg
mov
or
aad
enter
xchg
pop
fdivl
sub
arpl
adc
sub
inc
pop
insb
inc
call
jnp
inc
add
cltd
sbb
call
cli
shrb
mov
pop
jae
out
jmp
into
mov
icebp
out
in
or
add
mov
jnp
ret
sub
dec
test
pusha
cmpsl
in
cmp
mov
pop
adc
jbe
adc
fdivrl
out
dec
ret
aad
pop
add
mov
mov
nop
mov
inc
in
lea
clc
xchg
mov
aam
xchg
push
cmpsb
and
ret
test
sub
sbbb
mov
adc
inc
ret
out
xor
and
sti
jp
test
int
inc
sbb
sub
jp
pushf
push
add
inc
addb
enter
cmpsb
addr16
rcl
femms
jmp
lcall
or
mov
les
cmp
push
adc
aas
xchg
mov
mov
insl
lahf
adc
dec
loope
and
mov
les
int
xrelease
add
aaa
sub
cmp
adc
adcl
fisubl
mov
repnz
fldcw
shlb
leave
mov
ret
cmp
mov
add
stc
pop
sub
lds
ljmp
in
mov
sbb
in
fwait
lret
xlat
icebp
popa
aad
outsb
iret
cmp
mov
or
fcoml
add
add
and
pop
es
xchg
sar
loopne
pop
rcrb
shlb
shrb
leave
clc
jmp
and
jne
inc
xchg
xchg
push
test
sbb
xchg
jge
or
arpl
ss
sub
out
push
in
lret
sub
push
sbb
imul
jbe
pop
test
js
mov
mov
sqrtps
mov
stc
mov
jp
adcb
jb
lahf
test
fs
mov
testb
icebp
imul
xor
push
and
les
ja
xchg
lds
fsts
je
loope
sahf
mov
mov
push
cmpsl
insl
out
mov
push
cld
pop
dec
push
add
pop
es
xlat
cmp
daa
cs
mov
pop
aam
out
pusha
loope
test
pop
add
cmpsl
pop
mov
push
or
out
xchg
or
push
cli
lahf
jb
es
jnp
dec
add
xor
jge
out
cmp
subl
jns
xchg
mov
int
pop
sub
xchg
jl
or
mov
push
js
sarb
shll
or
sahf
rcr
push
stos
or
ljmp
inc
add
inc
jbe
clc
push
in
adc
lcall
or
fistpll
jge
adc
cmp
fcompl
jns
pop
fwait
pop
nop
sbb
xor
cmp
cmc
leave
mov
out
xchg
inc
cmp
outsl
fisubrl
mov
sahf
or
test
sub
out
shr
sub
mov
xor
add
fs
sbb
push
mov
shl
cmc
cmp
or
loop
and
jge
outsl
dec
adc
fcom
gs
stos
xor
leave
pop
fwait
cmpsl
daa
sbbl
jns
and
jle,pt
mov
fwait
sub
sbb
jp
sub
and
fadds
xor
aad
imul
sahf
leave
repnz
test
push
stos
loopne
movsl
push
sub
cmpsb
lock
jg
movsb
ljmp
or
push
cmc
imul
mov
pop
push
out
lods
pop
cltd
dec
push
lock
sbb
mov
sbb
imul
mov
fistps
stos
cmp
xchg
addl
sbb
and
sub
xchg
push
popf
in
mov
pop
lods
sbb
mov
push
out
sub
xchg
push
pop
or
out
sti
bound
sbb
inc
push
xor
cmp
lret
and
xchg
dec
out
adc
aad
inc
xchg
sti
in
pushf
pop
cmp
push
dec
dec
lret
or
xchg
leave
ljmp
ds
sbb
cltd
icebp
sbb
bound
fs
push
xor
push
cmp
aam
or
pop
mov
hlt
jbe
rorb
xor
stos
test
popf
mov
pop
dec
sbb
pop
jg
rorl
clc
push
sbb
int
das
fldcw
inc
jo
ror
aad
addr16
mov
pop
cmc
daa
or
rcrb
cwtl
push
into
adc
aad
inc
adc
outsl
lahf
sarb
int3
cli
xor
dec
mov
out
into
push
mov
test
lods
arpl
mov
dec
xchg
mov
es
ljmp
mov
ja
leave
shlb
popf
inc
dec
mov
sbb
popa
dec
fists
push
inc
stos
xlat
aas
cwtl
cmpsl
lea
or
bound
dec
mov
bound
pop
cli
sub
mov
adc
cmp
xchg
push
push
in
mov
call
xor
insb
push
sub
sub
pusha
movsl
mov
push
sub
aaa
stc
jl
lahf
sub
inc
cmp
frstor
rorb
inc
push
add
dec
jnp
push
insl
popf
invd
ja
sti
in
je
or
mov
mov
inc
stos
cmp
sbb
ret
xchg
repnz
stos
out
hlt
jp
call
out
dec
or
inc
pop
sbb
cmp
stos
loope
inc
ja
test
clc
aam
cs
push
in
jmp
imul
outsl
mul
mov
outsl
es
dec
out
loop
pop
movsb
mov
adc
mov
dec
inc
arpl
cld
mov
sbb
dec
jbe
jo
xor
push
dec
add
cmpb
cli
out
sub
mov
pop
and
loopne
jl
imul
mov
add
xchg
mov
dec
je
jnp
cmp
mov
sbb
push
cmpsb
mov
notb
fidivrs
cwtl
bnd
arpl
loop
adc
cltd
xor
lret
aam
fucom
lahf
xchg
hlt
sbb
mov
and
aad
aad
nop
sbb
sub
xor
inc
sub
jmp
mov
or
mov
and
xchg
cmp
cmp
mov
es
inc
sbb
call
xchg
sub
das
lods
fcomi
xchg
pop
enter
mov
jno
repnz
stos
fidivrl
jmp
pop
fsubrs
jb
negl
loop
repnz
xchg
adc
pop
push
dec
test
dec
mov
xchg
push
fstps
fsubp
das
notl
dec
push
and
pop
stos
dec
dec
loopne
into
push
jo
idivb
aaa
ficoml
out
add
pop
fmulp
insl
dec
fisubl
bnd
sbb
inc
cmp
mov
dec
movsb
or
push
pop
adc
test
push
call
add
idivl
daa
je
jo
jno
les
into
pop
popf
cmpsb
adc
or
mov
sbb
in
outsl
or
test
push
repz
int3
cld
es
jne
in
mov
cmp
movsl
mov
xor
jl
xor
push
xchg
sbb
mov
mov
push
scas
pusha
mov
mov
jo
ds
sahf
and
leave
cmpsb
popa
dec
mov
data16
mov
ss
fld
sbb
xchg
adc
dec
mov
adc
pop
mov
mov
adc
mov
loope
cltd
push
inc
mov
adc
movsl
movsb
or
pusha
dec
mov
sti
pop
lret
jbe
cmp
dec
clc
mov
movsl
testl
add
imul
mov
cmpl
dec
dec
or
and
push
jne
mov
and
pushf
cmpsb
inc
and
js
adc
xor
les
xchg
sbb
dec
jmp
dec
or
fwait
out
sbb
cmp
loop
notb
movsb
enter
inc
aam
dec
pop
cmp
inc
dec
inc
iret
mov
ljmp
sbb
xchg
orl
pop
dec
je
fistpll
cmp
arpl
lret
lcall
lret
or
jne
popf
ss
inc
daa
jp
cmc
out
or
mov
shrl
sub
xor
ret
jmp
xor
mov
mov
hlt
sbb
add
adc
xchg
xchg
xor
rolb
cmc
int3
icebp
dec
add
dec
inc
testb
cmp
insl
mov
mov
jbe
out
push
shlb
les
pop
les
enter
inc
xor
loop
xor
imul
sahf
int3
pop
imul
inc
or
sbb
pop
mov
sub
mov
or
push
xchg
scas
filds
outsb
or
sbb
jg
inc
cld
insb
ret
jecxz
dec
inc
sbb
sbb
cmp
dec
stos
add
mov
lret
mov
daa
das
sub
fcmovnu
int3
push
push
sbb
sub
or
ret
rcrb
arpl
add
xchg
and
mov
push
jp
mov
popa
loopne
sahf
fs
mov
pop
mov
mov
pop
nop
shr
movsl
arpl
dec
in
jbe
push
xor
jnp
dec
xor
xchg
scas
jns
dec
cmp
sbb
push
int3
shrl
add
xor
xchg
xchg
xchg
fmul
fs
insb
mov
lcall
xchg
mov
xor
xchg
out
fildl
test
jl
imul
cmp
sti
or
fwait
in
ljmp
dec
imul
pop
add
mov
fisubl
jbe
mov
dec
clc
add
daa
and
or
stc
push
mov
stos
cwtl
push
sahf
stos
out
cmp
aaa
std
fmull
loopne
mov
loopne
push
popf
aam
or
xchg
jge
out
mov
test
pop
xlat
or
mov
pop
inc
lahf
sub
aaa
in
out
mov
or
ret
or
cmp
pop
aam
and
dec
xchg
addr16
clc
pop
mov
push
divl
push
mov
cwtl
enter
inc
fisubs
cmp
int
lret
ljmp
pusha
ljmp
cltd
push
push
push
cmp
xlat
or
add
sub
lea
inc
add
lods
sarl
in
movsl
add
adc
adc
mov
push
pop
imul
imul
clc
leave
mov
add
jb
add
imul
xchg
xlat
jnp
dec
nop
dec
inc
xor
jae
cltd
push
pop
jno
pop
js
sbb
insl
mov
ja
push
movsb
cli
push
lock
sbb
push
and
rolb
jp
jne
int
repz
pusha
test
and
shlb
loopne
popa
imul
mov
add
or
cmp
add
int
in
shrl
icebp
mov
insl
push
mov
cmpsb
lock
inc
repz
jecxz
sbb
mov
pop
pop
pop
loopne
jle
movsb
out
popf
lods
add
fs
cmp
lock
mov
jg
pop
shl
sahf
or
pop
ja
sbb
pushf
int3
gs
test
rclb
mov
gs
popf
pop
inc
mov
add
push
push
cmp
lods
dec
stos
mov
int3
pop
mov
cld
stos
adc
fldcw
lods
out
jl
inc
pop
mov
mov
xor
inc
adc
cmp
ret
sar
sbb
mov
inc
or
clc
push
insl
jle
mov
insb
std
inc
mov
insb
cmp
popf
and
lcall
gs
inc
fsubrs
sbbl
jmp
push
sub
dec
xchg
js
inc
fstpl
add
hlt
xlat
cmp
push
adc
sub
int3
jb
incl
xchg
xchg
adc
xchg
lods
xchg
xor
push
cmc
cmc
mov
scas
jmp
pop
gs
jne
add
repz
fadds
idivl
ljmp
pop
repz
xor
add
in
mov
sti
push
push
imul
mov
test
pushf
cmp
sbb
arpl
mov
subl
or
test
call
inc
mov
xchg
popa
sti
inc
inc
mov
jecxz
dec
aam
sub
adc
fsubrp
pop
int
pop
pop
aam
aaa
dec
sti
sbb
faddl
fidivs
push
lods
aaa
in
inc
ja
sbb
cltd
sbb
or
mov
rol
in
ficompl
adcl
iret
lahf
dec
aam
mov
adc
mov
mov
cmp
pop
lcall
mov
jmp
sub
xlat
or
into
out
out
ss
std
rclb
pop
stos
pop
movsb
loopne
mov
insb
lcall
out
ficomps
mov
sub
push
lds
push
sbb
push
loopne
sahf
mov
and
push
inc
cmp
nop
fucomi
aad
mov
popa
push
stos
push
mov
push
inc
sbb
out
test
jne
pop
jae
jbe
sbb
loopne
xchg
call
dec
enter
clc
stos
imul
int
mov
xchg
push
push
out
pushf
sbb
adc
and
add
or
adc
loope
push
in
mov
incb
es
push
add
mov
sub
cmpb
repnz
mov
es
mov
out
rcl
jbe
repz
shlb
lock
adc
fucom
pusha
outsl
xor
aaa
pop
push
push
cmp
outsl
test
ret
add
mov
outsl
dec
inc
and
lret
xchg
lock
pushf
dec
add
push
insb
and
jbe
pop
mov
xchg
jb
xor
jl
mov
xchg
jae
std
or
add
xchg
dec
mov
mov
inc
fiaddl
in
jne
movb
push
aad
adc
call
das
lret
imul
xor
addl
fbstp
jb
mov
out
sbb
xchg
lods
arpl
popf
jl
and
jl
mov
cmp
inc
mov
sti
popf
sbb
add
popa
ret
jbe
jecxz
mov
dec
das
repz
pop
jbe
in
add
or
test
xchg
jno
pop
lret
sbb
or
adc
pop
testb
jnp
cmp
cmp
pause
adcb
je
add
adc
lds
push
mov
jmp
mov
cwtl
nop
xchg
je
and
fwait
mov
bound
mov
cli
jbe
insl
add
in
xchg
enter
inc
cmp
inc
mov
xor
ret
xchg
outsb
orb
cwtl
and
adcl
dec
mov
stos
aad
inc
jmp
cmpsl
jb
aas
inc
lret
mov
push
sarb
lret
push
repz
mov
or
sub
inc
xlat
jl
sub
pop
pop
fldenv
dec
aaa
popf
jecxz
cmp
stos
xchg
sub
sbb
mov
lods
jns
shr
cwtl
decb
sub
lret
mov
and
insl
imul
and
shl
add
jae
lods
adc
xchg
push
sbb
stos
aas
mov
xorb
mov
rorl
mov
xchg
jnp
mov
push
imul
push
loope
mov
rcl
sub
add
mov
dec
push
int
and
in
xchg
xor
das
lock
lahf
in
divl
and
adc
in
mov
fistpl
test
xchg
adc
mov
mov
scas
mov
jns
jns
fwait
adc
rclb
xor
mov
push
adc
insb
push
insl
push
iret
pop
mov
push
notb
mov
pop
lea
roll
xchg
push
xchg
jl
repz
es
push
pop
push
cmp
xchg
pop
jmp
das
std
lret
setns
test
dec
lret
jo
sbb
roll
pop
sti
int
test
xor
pop
fisubs
push
adc
mov
push
stc
dec
pop
adc
pop
hlt
mov
fbld
je
vmread
sub
sub
aam
stc
dec
arpl
pop
mov
dec
imul
and
ljmp
jno
mov
mov
cli
dec
loop
test
ja
cmp
call
fisubrs
out
xor
rcl
negl
or
and
outsb
int
cmpsl
jnp
cmp
lret
rcrb
pop
jecxz
push
jno
fcoms
movsb
sub
jb
xchg
fnstenv
push
jmp
sub
add
jge
mov
fdivrl
stos
clc
and
icebp
lods
nop
stc
sub
pop
out
mov
repz
adcb
leave
ret
pop
dec
ret
nop
rcrl
inc
pop
adc
sub
pop
mov
pop
mov
fmull
mov
lds
cmp
repz
mov
das
push
or
or
cmp
jg
push
scas
jbe
and
test
inc
inc
xchg
out
or
shl
jmp
mov
aad
xchg
mov
in
mov
pop
cmp
nop
rolb
repz
jl
outsl
cmpsl
hlt
pusha
cwtl
sub
leave
in
rclb
jmp
mulb
pop
mov
movsb
adc
mov
movsb
loop
enter
push
daa
xor
cmpsl
cmp
ret
nop
loop
sub
sub
dec
test
mov
xor
iret
add
xorl
call
das
out
adc
rolb
sub
out
sub
in
sbb
push
inc
repnz
into
ss
mov
rcll
inc
mov
sbb
testb
in
cltd
mov
pop
negl
add
fidivrl
lods
lret
push
das
aam
sahf
es
clc
inc
inc
xchg
aas
pop
pop
xchg
and
adc
test
jmp
cmp
adc
xor
cmp
fdivs
push
fldl
loopne
or
stos
add
adc
pop
lock
scas
push
aaa
or
or
js
dec
daa
ror
gs
pop
dec
orb
lret
inc
mov
mov
popf
decl
sbb
nop
add
js
mov
pop
es
jp
inc
xor
mov
jmp
cmp
adc
jo
jb
lock
xor
pushf
pcmpeqd
mov
adc
push
dec
pop
mov
sbb
repz
jecxz
sbb
les
jp
fiaddl
js
jecxz
inc
adc
aas
inc
xlat
imul
dec
mov
shlb
clc
dec
xor
imulb
xchg
sub
ja
loop
movb
loopne
inc
cld
sarb
iret
les
pop
pop
in
sahf
push
pop
and
mov
or
into
push
ror
ret
adc
xchg
gs
cmp
lret
ss
aas
dec
dec
xor
inc
fidivrs
cmp
subl
ds
enter
push
loop
jle
stc
sti
fdivrs
ljmp
jbe
ljmp
push
pop
mov
sub
in
mull
scas
and
and
mov
orb
outsl
lods
pop
xor
pop
pusha
ret
in
adc
jo
outsb
sbb
scas
pushw
mov
mov
push
dec
dec
das
adc
subl
push
inc
imul
into
out
mov
inc
leave
jae
repnz
in
sbb
mov
shrb
loope
xor
fucom
jp
andb
mov
xchg
mov
cli
push
lret
mov
sub
insl
ror
sti
lcall
jo
stc
hlt
dec
outsl
jae,pn
or
lds
mov
cltd
clc
faddl
int
test
sbb
mov
inc
popa
ror
jb
lods
mull
stos
insb
test
mov
xchg
int3
ds
pop
leave
adc
inc
fadd
xor
xor
cld
pop
push
inc
in
xor
inc
out
mov
jmp
jnp
std
bound
rcr
pop
insl
sbb
mov
push
lahf
into
mov
and
test
les
xchg
mov
pop
cmp
push
mov
in
dec
aaa
mov
fcompl
int
in
movsl
pop
mov
dec
imul
xchg
jnp
and
pop
jno
mov
sub
add
adc
mov
mov
ret
xchg
adc
mov
test
jg
mov
pop
stos
jmp
dec
push
sarb
xor
nop
hlt
stos
lcall
mov
ljmp
push
lock
cs
jp
sbb
mov
jno
sub
push
les
and
cs
and
mov
popf
cmp
shr
cmp
aad
jae
and
mov
or
rorl
scas
and
int3
sub
test
and
les
xor
xor
je
xchg
mov
and
pop
test
pop
and
mov
cmc
loopne
popf
push
enter
dec
sti
mov
push
addl
cli
xor
mov
jmp
and
and
jbe
mov
or
test
add
push
push
sub
aaa
cmp
lods
mov
pop
inc
hlt
mov
test
cmc
mov
mov
and
cmc
jne
fsubs
je
xchg
adc
jno
aas
sbb
inc
stc
sbb
enter
push
popf
push
lcall
xor
out
in
stos
lods
in
jmp
sbbl
xchg
daa
lods
jno
dec
cltd
mov
push
jo
mov
sub
pop
mov
push
daa
mov
xor
xchg
cs
xchg
and
push
xchg
pop
clc
in
scas
mov
dec
mov
push
fisubrs
jmp
out
test
nop
div
repnz
mov
outsl
mov
mov
stc
das
inc
shlb
xor
xchg
sbb
mov
addr16
mov
test
cld
aad
push
jg
shrb
ljmp
mov
aaa
push
dec
sbb
sbb
lret
mov
rcrb
adc
pop
hlt
pushf
pop
fidivrs
fnstenv
outsl
into
push
dec
push
jae
or
out
xchg
out
sbb
or
pop
icebp
cs
pop
push
daa
pop
mov
push
dec
xor
mov
aaa
lods
adc
fwait
push
dec
ljmp
or
ss
icebp
mov
mov
rorb
inc
es
sub
inc
cmp
pop
push
lds
mov
movsl
or
xor
mov
inc
sub
int
pop
cmp
test
mov
push
push
test
cmpsb
adc
loop
das
lods
pop
mov
lcall
les
xchg
movsb
jno
pop
sbb
mov
inc
push
je
pop
icebp
in
pop
sbb
loop
jb
test
fildll
outsb
pop
das
jge
pop
cmpl
jbe
loope
lods
mov
cmp
pushf
sbb
mov
adc
call
lods
lahf
bound
inc
out
jmp
pop
or
dec
mov
fildll
hlt
cmc
rcrl
lods
sbb
xor
iret
ret
pop
adc
adc
xchg
dec
push
ds
dec
loopne
out
xlat
arpl
xchg
mov
icebp
fcomip
das
mov
add
sub
je
pushf
flds
addb
sbb
jle
addr16
or
sbb
mov
enter
push
fwait
mov
pusha
pop
inc
mov
fsts
sbb
cmp
cltd
fstps
fucom
es
jbe
in
nop
insl
int3
sahf
pop
xor
xchg
in
std
rcrb
add
pop
orl
mov
addl
and
insb
daa
xor
cmp
jno
mul
roll
imull
push
inc
xchg
lods
jg
ret
loope
or
subl
push
jge
mov
sub
dec
lcall
push
push
lret
out
aaa
ljmp
mov
dec
add
out
js
imul
xchg
mov
lods
aad
iret
ja
nop
outsl
callw
xchg
lea
mov
imul
shrl
mov
sbb
sub
inc
lea
push
sbb
loopne
cli
test
jno
xchg
iret
cmp
packuswb
jge
inc
push
shll
adc
mov
call
pop
std
xchg
adc
bound
mov
pushl
sub
and
push
push
repnz
add
xchg
inc
jo
test
divl
shll
jo
and
fninit
pushf
mov
fcompl
icebp
stc
and
loop
xchg
sahf
xor
cmc
ror
dec
jg
sub
pop
and
xor
and
loopne
mov
andl
ja
fcomps
aas
inc
mov
sub
pushl
cmp
pop
mov
mov
addr16
and
dec
xor
shl
cs
adc
divl
subl
xlat
repnz
mov
cmp
jbe
jge
xchg
popa
and
int
stos
adc
scas
pushf
jmp
les
sbb
mov
out
inc
test
jbe
in
loop
xor
pop
mov
add
sub
cmpsl
mov
or
inc
scas
add
xor
mov
push
inc
adc
mov
cmpsl
fsubs
divb
std
mov
cmp
pusha
ret
push
pop
mov
push
and
out
mov
sti
std
test
xor
bound
push
lods
adc
and
dec
es
mov
in
jno
or
outsb
aad
lds
sub
stc
push
aaa
mov
dec
cmpsl
stc
lahf
mov
data16
sub
mov
cltd
mov
movsl
xor
dec
push
adc
in
dec
pop
test
cltd
push
out
arpl
out
dec
xor
jp
subl
fldcw
mov
push
mov
out
sub
leave
mov
lock
ror
ret
test
outsb
in
cmp
sbb
mov
iret
addr16
push
inc
push
add
leave
sbb
dec
ja
or
jg
repnz
xor
lcall
cs
ss
mov
js
push
xchg
or
sbb
inc
jle,pt
sub
adc
fisttps
mov
sub
fidivs
aaa
xchg
cltd
lcall
movsb
in
jo
and
dec
xor
lcall
or
mov
cld
xor
sbb
inc
pop
jmp
arpl
mov
add
mov
mov
gs
sti
repz
xchg
rcrb
or
and
dec
bts
and
test
push
roll
jbe
sub
stos
pop
push
adc
cli
mov
inc
adc
jmp
adc
mov
cmp
daa
movsb
mov
mov
jne
add
inc
fidivrl
les
mov
mov
cmp
add
outsb
leave
out
dec
pop
movsb
jnp
lods
mov
pop
pop
and
outsb
jmp
mov
popf
mov
push
movsl
pop
and
pop
push
ljmp
mov
and
jle
jne
jg
add
sub
aad
xor
jne
dec
addr16
out
push
orb
repnz
mov
cmp
jmp
pop
jmp
mov
stc
js
push
mov
lods
push
lods
js
or
mov
in
push
lret
adcl
subl
imul
jmp
repz
iret
or
mov
test
jl
lods
ret
push
dec
loope
fnsave
dec
mov
or
inc
sbb
test
push
out
cmpb
adc
ljmp
push
rolb
in
aam
iret
mov
in
dec
add
lods
loop,pn
add
jno
and
pop
test
cmpsl
sarb
jnp
insl
jnp
in
jmp
jbe
repnz
mov
lods
pop
int
push
xchg
psllw
fnstenv
mov
add
lods
pop
ja
imul
enter
mov
xor
add
xor
fnstcw
outsb
std
mov
clc
sbb
sbb
xchg
inc
mov
push
dec
jl
xorb
das
mov
mov
lret
das
mov
loopne
dec
mov
ja
mov
and
mov
scas
shlb
mov
pop
mov
addr16
mov
and
push
iret
xor
mov
hlt
lods
stos
lds
mov
outsb
mov
shlb
inc
in
movsl
mov
dec
rorb
inc
push
adc
shl
movsl
test
loope
ss
cmp
and
shll
xor
fbstp
xor
mov
movsl
cmc
pop
int3
inc
and
mov
ja
loopne
push
jno
xor
sbb
nop
clc
in
push
mov
into
inc
lock
insl
pop
loop
lcall
das
imul
rcll
lret
push
in
repnz
or
insl
jbe
lods
inc
mov
and
cmp
mov
roll
mov
push
shl
or
std
push
es
mov
cmpl
mov
push
adc
dec
stos
icebp
pop
jmp
mov
cld
addr16
pop
fstp
cmp
jge
loop
je
out
ss
cmp
pop
rorl
sub
enter
push
mov
jl
sbb
test
repnz
cmc
fisttpll
fcom
mov
lret
in
lods
fiaddl
cmp
cmp
popa
mov
fistps
pop
test
shlb
ret
mov
inc
lcall
pusha
sub
ds
sahf
pop
fnsave
xchg
arpl
mov
test
pop
add
out
jne
and
fwait
xchg
cmc
jmp
fwait
xor
loop
mov
pop
lahf
incb
mov
push
in
lahf
sbb
fdivl
shrb
mov
dec
push
xchg
push
loopne
dec
cmp
pop
xchg
dec
addl
push
dec
nop
pushf
mov
xchg
pop
mov
push
jae
inc
shll
test
decl
add
add
add
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
mov
scas
jp
or
jp
and
cmpsl
aaa
out
or
add
addb
or
int
mov
jo
imul
ret
das
hlt
in
imul
cmpl
and
add
outsb
jnp
ds
ret
iret
add
dec
and
adc
sbb
sbb
stc
cltd
push
dec
and
nop
and
lahf
cmp
rcll
sbb
mov
push
xchg
mov
fnstenv
popa
sbb
adc
cld
std
or
mov
popf
stos
sbb
cmp
stc
mov
int
mov
xchg
rcl
or
jo
mov
repz
jae
pop
cmp
xchg
ret
pop
push
mov
jnp
pushf
cmp
in
sub
push
imul
mov
cmp
add
inc
push
lods
shl
or
mov
jne
sub
orb
adc
int3
aas
out
jmp
cmpsl
push
cs
push
cmpsb
mov
and
xor
aas
das
dec
pusha
nop
xchg
loop
fadd
gs
adc
and
add
xor
lds
or
movsb
inc
outsb
or
mov
pushf
sbb
inc
je
out
cmp
inc
mov
xchg
add
pop
push
scas
adc
lea
add
roll
icebp
clc
mov
push
cltd
ficompl
mov
pop
aam
xchg
bound
lcall
sahf
inc
or
fidivs
addr16
adc
sbb
push
add
xor
cmp
leave
imul
adc
out
jl
js
inc
mov
gs
jecxz
sbb
inc
js
fwait
mov
jecxz
xchg
mov
lret
push
testl
jl
dec
lahf
aad
lcall
pop
push
scas
add
fldl
xchg
rolb
xor
jecxz
add
xlat
push
sub
pop
popf
popf
xchg
and
mov
pop
sub
sahf
xchg
rcll
pop
push
xchg
test
xchg
mov
dec
xchg
into
punpckhwd
mov
leave
mov
ret
test
sbb
fucom
and
shll
jbe
xorl
test
out
dec
add
mov
xchg
gs
pop
scas
xchg
push
mov
mov
mov
push
sub
xchg
sbb
mov
mov
mov
mov
add
shrl
into
mov
sub
mov
inc
add
mov
cmp
repz
cmp
sarb
mov
iret
out
scas
aad
jns
or
mov
fiadds
scas
mov
dec
xchg
enter
push
push
inc
mov
pop
lods
cmc
pop
cmpsl
pop
mov
rol
into
mov
sbb
int3
add
ljmp
cmc
xlat
fnstcw
mov
dec
mov
cmp
mov
insb
cmp
insb
rorb
mov
xchg
shll
stos
movsb
and
into
insb
and
sub
push
stos
jmp
stc
gs
call
push
cmc
jo
popa
nop
aam
hlt
mov
int
inc
push
adc
xor
and
ffreep
add
pop
insb
gs
jno
mov
jno
mov
ret
cmpsl
int3
xor
inc
pop
aas
pop
cs
adc
adc
es
xor
mov
mov
int
jmp
mov
iret
sti
sub
inc
int
add
imul
adc
push
and
xchg
or
mov
cwtl
leave
in
jg
dec
cmp
mov
insl
xchg
or
mov
or
lret
out
jbe
icebp
gs
stos
cli
jp
sub
push
sub
and
add
cmpsl
push
sbb
aas
push
xchg
and
and
repz
push
mov
sub
and
fdiv
pop
ret
pushl
lds
sti
mov
inc
mov
adcl
cmc
cmc
int3
pop
push
sub
dec
xchg
rcll
xor
outsb
pop
sbb
lock
shl
sbb
stos
dec
jno
push
arpl
imul
imulb
jnp
pop
pop
icebp
jmp
cli
jl
test
xchg
mov
push
xchg
les
ficompl
fs
test
push
mov
push
aam
sub
mov
notl
fsts
adc
inc
jmp
push
sub
push
pop
jge
xchg
dec
ja
add
pop
lds
fwait
pop
xchg
lret
test
dec
loop
mov
dec
repnz
movsb
aas
mov
iret
cmp
adc
outsb
int
aad
jo
call
ficoml
sub
out
das
inc
dec
add
out
ror
xchg
xchg
xchg
add
scas
sti
mov
jno
loope
jb
ds
mov
and
ficoms
ljmp
xchg
and
xchg
outsb
imul
stos
aaa
mov
jnp
and
add
inc
imul
popf
jl
loope
int
inc
loopne
cmc
adc
ret
addw
push
jns
xor
mov
aam
or
cld
adc
sbb
jnp
and
cwtl
lret
mov
aam
fldenv
fsts
sbb
aaa
iret
fiaddl
xchg
loopne
sbb
rcl
push
pop
aad
iret
cs
sbb
int
cli
dec
aas
scas
shlb
jg
inc
xchg
sarb
inc
je
push
les
sub
adc
movsl
fisubrl
bound
test
xor
mov
stos
cltd
stos
fbstp
fs
xor
pop
xor
insl
fiadds
js
mov
push
mov
movsb
or
shrb
aam
xor
test
push
inc
test
mov
arpl
pop
fstps
nop
das
rcrl
daa
subl
cmpsl
fistps
dec
adcl
insb
xor
or
cs
jno
test
jno
cld
dec
pushw
sbb
cmp
xchg
xchg
xor
daa
sub
sub
es
aam
das
and
or
push
xor
inc
mov
cltd
jmp
ljmp
out
cmp
mov
push
mov
loopne,pn
orb
je
jb
adc
andb
andl
cs
je
inc
sub
xchg
in
pop
out
xchg
xlat
pop
scas
lret
and
mov
inc
das
and
test
cmpsl
adc
push
das
xor
push
cmp
movsl
out
fwait
lret
add
push
adc
cmp
inc
loop
push
push
mov
cld
mov
push
jbe
jno
xor
shl
fwait
test
out
adc
add
les
pop
mov
push
test
xchg
push
or
bound
xchg
lret
sub
nop
out
xchg
mov
dec
inc
sub
sti
clc
test
jbe
jae
pop
nop
sbb
jmp
cmp
mov
mov
xchg
daa
cmp
sub
ljmp
jecxz
aas
adc
push
icebp
adc
rcl
ja
jne
ret
pop
lock
cli
push
push
in
mov
and
mov
ret
aad
pop
test
push
jno
outsl
scas
fldt
leave
mov
jbe
sahf
mov
lcall
mov
addr16
mov
lock
inc
stos
xlat
jmp
test
sahf
mov
loop
jg
cmp
outsl
push
scas
pop
cli
jbe
cli
or
enter
push
rorl
sub
push
cld
jns
out
lods
mov
push
pop
les
stos
fimuls
sub
sub
mov
adc
xchg
xor
add
jo
jecxz
lods
leave
in
pop
pushf
sub
push
bound
add
add
adc
mov
pop
loope
daa
cltd
push
outsb
dec
adc
sbb
fmuls
stc
stc
std
jns
test
push
fiaddl
in
fdivrl
hlt
into
xor
add
xor
rorl
iret
aam
fidivs
punpcklwd
jg
inc
dec
cmpsb
mov
nop
repz
pop
movsb
sbb
push
xor
add
roll
ljmp
and
jnp
call
fdivr
jge
jo
mov
repnz
mov
stos
fs
mov
icebp
pop
ss
adc
addr16
testb
and
sti
out
shll
xchg
cmp
aad
imul
andb
adcl
outsb
xor
xor
mov
popa
sbb
mov
div
xchg
sub
xlat
add
mov
pop
rclb
aam
xchg
xor
adc
scas
adc
rorb
pop
and
add
sbb
pop
sbb
xor
sbb
into
movsb
xor
jge
test
fmulp
insl
pop
subl
jl
call
cmpsb
sarb
pushl
cmc
mov
rcl
mov
add
leave
cmpsb
sub
inc
push
mov
mov
push
andb
xchg
movsl
in
dec
mov
mov
mov
les
incl
inc
or
ret
add
cmp
scas
in
xchg
hlt
push
imul
insl
lret
xor
and
sti
cwtl
aas
filds
or
sbb
cli
dec
mov
icebp
mov
or
push
cmp
imul
mov
into
adc
cmp
pop
aaa
or
lea
jg
popa
lods
and
adc
call
mov
fwait
cmpsb
inc
pop
or
add
psubsw
pop
xchg
ja
fsub
sbb
loop
lahf
mov
out
xchg
mov
incb
xlat
push
in
aas
push
testl
fnop
pop
dec
mov
cltd
mov
cwtl
fidivl
xchg
mov
mov
cmp
and
orl
js
repz
pop
loopne
push
test
sub
xchg
shll
aad
movsb
xchg
cmp
jg
scas
jns
adc
mov
sbb
mov
fwait
notl
adc
cwtl
jb
mov
dec
pop
push
xchg
lds
rcl
mov
subl
or
pop
dec
dec
icebp
mov
cwtl
sti
cmc
shlb
or
and
ja
sbb
ret
or
mov
pop
push
xchg
out
adc
add
dec
push
pop
je
sub
and
movl
cmc
out
push
shrb
or
fisttps
cmp
pop
add
cmp
sbb
arpl
cli
cmc
lret
cmp
mov
jbe
add
sarl
idivb
mov
loop
sysexit
jb
ret
ds
push
mov
cltd
mov
notl
sub
cwtl
push
add
loope
xchg
fsubs
mov
es
mov
cmpsb
out
mov
lods
les
dec
mov
jnp
or
repnz
pop
nop
push
leave
ror
mov
cld
mov
das
xchg
sbb
jecxz
dec
inc
ja
in
or
push
sub
inc
mov
fsubrl
inc
rcrb
sbb
mov
test
ss
jp
xchg
pushf
add
pop
push
xchg
lds
jnp
or
sub
and
mov
jp
xchg
aaa
aam
dec
and
in
xchg
xchg
icebp
cs
cld
and
push
jno
cmp
rcll
xchg
cmp
mov
push
xchg
rcr
adc
mov
mov
mov
inc
pushf
pop
mov
mov
jl
jb
cld
test
dec
std
push
aaa
adc
xchg
insb
jo
pop
jp
in
mov
fistl
mov
jae
pop
lods
dec
lds
lea
mov
mov
xchg
flds
das
jmp
mov
mov
in
pop
sbb
xlat
pop
add
jno,pn
mov
cmp
jbe
mov
inc
add
pop
flds
xchg
mov
insl
rol
fdivs
data16
sbb
pop
and
out
sub
loopne
in
fwait
les
pop
cmc
mov
xor
add
mov
hlt
sarl
push
icebp
pop
loop
shrb
jmp
cmp
ret
mov
jge
jecxz
bound
rorb
fimull
dec
cmc
mov
xchg
je
and
mov
out
dec
das
in
movl
std
and
pop
shl
imul
mov
cmp
jbe
xor
and
xchg
enter
mov
insl
mov
xchg
dec
pop
ja
hlt
int
or
cmp
loop
movsl
push
xchg
stc
pop
int
xchg
out
cwtl
cmpl
jle
and
imul
mov
pop
sub
loope
mov
inc
pop
add
pop
inc
push
bound
fsubrs
sbb
aam
fnstenv
jae
pop
inc
jg
in
push
dec
cmp
inc
andl
cs
stc
cmp
popa
mov
dec
mov
pop
and
enter
push
add
out
les
adc
cmpps
add
pop
mov
cmp
hlt
jge
push
mov
mov
in
lods
movsb
cmpb
cmc
in
sub
sub
fstpl
push
mov
cs
jmp
div
subl
add
fisttpll
insl
je
or
cmpsb
imul
leave
mull
pop
adc
add
ja
mov
dec
mov
repnz
jg
andl
push
push
adc
mov
cli
xchg
cwtl
dec
pop
mov
es
loope
jmp
cld
js
mov
mov
inc
rorl
cltd
lods
inc
jnp
cwtl
inc
rcrl
xor
jns
pop
ret
xor
jne
ret
cmp
fdivrl
xchg
or
scas
movsl
mov
test
mov
filds
mov
fdivs
mov
push
mov
cwtl
jge
cwtl
inc
ss
xchg
xchg
jp
jmp
push
push
sub
ds
jle
xor
xchg
fs
pop
sub
mov
cwtl
gs
or
imul
imul
das
mov
xorl
adcb
imul
cmp
and
test
in
test
or
sahf
sub
adc
mov
inc
ror
mov
sbb
scas
movsb
push
jno
mov
rorb
lahf
call
jae
xchg
push
sub
dec
push
movsb
jnp
cmpsl
add
gs
pop
dec
insb
xchg
in
push
enter
sbbb
sub
out
and
lods
and
insb
or
jl
gs
int
imul
leave
cmpb
adc
adc
mov
sub
popf
ss
xor
add
inc
dec
cmp
mov
mov
pop
adc
addr16
pushf
test
test
xor
adc
sub
xchg
cld
hlt
cmp
int3
movsl
inc
in
rol
outsb
jno
mov
rclb
xchg
fdivl
lods
fprem
sub
divl
jae
icebp
fcomps
and
mov
and
adc
popa
push
mov
sbbl
ret
xchg
cmpsl
mov
bound
jns
das
inc
pushf
add
mov
adc
xchg
lea
push
push
pop
gs
das
sub
loopne
hlt
fdivrp
inc
pop
cmp
mov
mov
add
push
mov
hlt
lret
mov
insb
cmp
mov
js
leave
ja
lds
mov
ret
mov
xchg
inc
lret
pop
xor
sub
add
clc
cmpsl
mov
in
and
test
fwait
jg
stos
bnd
push
jbe
dec
test
stos
and
and
mov
aaa
fdivs
sahf
cmp
and
in
shll
sbb
xor
scas
jns
xchg
cmp
inc
jp
loopne
or
scas
and
fsubrp
lock
mov
xor
insl
mov
fnstsw
mov
fwait
cmp
dec
push
mov
lcall
das
mov
stos
test
sahf
sbb
and
imul
addr16
sbb
test
lret
loope
xlat
pop
mov
insl
enter
sbb
pop
cli
js
fidivrs
jl
mov
push
add
add
imul
mov
adc
bound
push
clc
xchg
loope
add
rolb
mov
inc
fcomp
mov
xchg
add
and
addr16
stos
pop
lret
dec
add
pop
dec
push
fldenv
aas
mov
test
cli
ljmp
loope
lods
outsb
bound
jmp
outsb
addr16
out
sbb
shlb
xchg
mov
jo
jmp
into
out
mov
xchg
aaa
pop
adc
push
cmp
jbe
cmp
push
dec
std
jne
dec
clc
pop
cltd
std
jae
inc
or
mov
inc
mov
mov
mov
mov
clc
and
cmp
jns
test
arpl
sbb
add
popl
imulb
jp
adc
fiadds
xchg
xchg
out
dec
cwtl
test
adc
lods
cmp
xor
adc
fistl
jbe
lcall
or
test
jbe
sbb
push
dec
sarl
jmp
add
movsb
aad
sub
and
xor
pushf
cmp
xchg
mov
xor
call
cmp
and
cmpsw
aas
add
adc
lods
pop
sub
add
pushf
jge
dec
mov
mov
cmp
inc
fcomi
cmp
fs
jne
add
mov
loopne
fsubrs
sahf
mov
and
mov
push
in
add
cmp
pop
sarl
cmp
adc
inc
dec
loopne
aaa
xchg
jne
cmpl
mov
cs
outsb
pop
sub
std
dec
jmp
mov
sub
sub
mov
and
xchg
push
mov
cwtl
shlb
xchg
or
or
aaa
pusha
push
jl
lods
pop
cmp
mov
test
xor
lea
fbstp
mov
call
sbb
out
inc
adc
fsubl
or
inc
popf
sar
in
cmpsb
outsb
xlat
or
sti
fwait
push
jb
push
leave
cmp
jle
ja
xchg
and
mov
loop
imul
out
scas
hlt
aam
xchg
pop
cmp
ss
outsl
push
xchg
or
jl
loop
mov
xor
leave
jmp
push
xor
xorps
fsubl
mov
or
int3
xchg
jecxz
cltd
jge
push
flds
lcall
fcoml
xchg
roll
fisubs
pusha
add
lock
jge,pt
mov
sti
cmp
nop
xchg
jae
push
xchg
jmp
loope
jne
in
or
inc
xorb
add
pop
aad
stc
jg
lea
cmp
pop
push
fdivs
cwtl
ret
cmp
dec
leave
or
cmp
xchg
cmp
mov
jns
repz
incl
ret
mov
test
mov
xchg
movsl
aam
jne
push
jmp
adc
outsl
pop
mov
mov
adc
sbb
insl
inc
clc
insl
cmpsb
sub
lea
sub
push
stos
mov
lahf
inc
sbb
data16
hlt
jnp
pop
dec
cltd
popf
cmp
das
mov
mov
and
sub
lock
mull
pop
mov
push
int3
push
into
daa
lret
or
gs
push
mov
shlb
addr16
mov
mov
jmp
das
int
inc
or
mov
lock
in
pop
mull
fcmovnu
ja
rcrb
add
ror
cmc
pop
cmpsl
jg
outsb
nop
fdivrl
lock
out
or
push
sub
xchg
jge
xchg
or
pop
je
in
inc
jmp
aam
ss
mov
hlt
scas
sbb
mov
jns
cs
sub
into
insl
jns
inc
sti
sbb
inc
dec
mov
mov
xchg
cld
xchg
test
xchg
test
imul
xchg
jae
xor
or
jbe
push
sti
push
adc
cmp
nop
ret
mov
data16
push
adc
jge
xchg
loopne
jle
pop
stos
stos
mov
adc
inc
lret
jg
fildll
aas
dec
mov
push
int
call
ljmp
mov
fsubl
aaa
mov
test
jne
cmp
insl
jp
in
or
in
inc
fbld
xorb
mov
fcomps
add
add
lahf
in
dec
aam
sub
push
pcmpeqb
pushf
mov
lea
jbe
jl
add
sahf
outsl
nop
sub
mov
pop
push
mov
daa
lcall
cwtl
out
scas
adc
ds
inc
push
lds
mov
xor
add
xchg
test
int3
fwait
hlt
mov
pop
xor
cmpsl
and
aam
adc
sbb
imul
pop
or
dec
xchg
lock
pusha
into
inc
lret
add
push
xor
mov
dec
mov
adc
addr16
cmp
jmp
xchg
divl
xorb
jne
bound
sbb
pop
dec
sub
push
shll
adc
divb
sbb
aam
add
sbb
fwait
shll
xor
xor
mov
mov
aad
or
add
mov
jp
fldenv
aaa
push
push
jbe
cmp
inc
leave
push
mov
mov
lods
ss
push
jp
cli
movsl
xchg
mov
popf
adc
aad
push
gs
jnp
loope
lret
jo
mov
addb
mov
lds
cmpl
in
imul
cli
insb
ljmp
cwtl
aam
cmpsb
adc
jle
sub
mov
mov
ss
xor
scas
ds
push
xor
mov
xchg
pop
dec
lahf
push
loope
fsubrs
mov
cld
mov
mov
and
mov
or
subb
push
sub
mov
or
arpl
jle
inc
jno
xchg
decb
sti
mov
in
loope
les
xor
in
adcb
sbb
hlt
lea
stos
adc
test
scas
pop
mov
sbb
outsl
jecxz
mov
inc
aaa
mov
xchg
clc
cwtl
into
mov
mov
jmp
nop
push
and
icebp
addr16
test
cld
lds
sbb
push
mov
pop
lds
adc
insb
cs
mov
pop
inc
pop
inc
shll
inc
je
xchg
xchg
sub
push
and
push
stc
dec
imul
dec
jmp
loope
aas
jge
push
jb
rcll
cmc
ficomps
out
cs
jmp
xchg
pop
xor
stc
inc
pop
mov
push
fcmovne
lcall
xlat
or
jl
cld
sbb
inc
adc
dec
test
mov
push
adc
dec
pushf
mov
cmc
mov
adc
or
push
je
push
nop
jmp
gs
mov
addr16
xchg
push
jno
lahf
imul
push
mov
add
push
mov
scas
sbb
pop
lret
adc
mov
lods
les
cli
daa
repz
scas
add
nop
or
stc
dec
sub
xlat
mov
lcall
xchg
stc
dec
sub
push
es
xchg
in
movsb
cwtl
cmpsl
lret
dec
sub
daa
les
lods
je
xor
scas
mov
push
pop
in
in
dec
outsb
cmp
pop
into
xchg
lahf
icebp
cltd
adcl
xchg
andb
ss
repnz
repz
movsl
sti
stc
mov
lret
mov
mov
push
fidivrl
and
inc
test
outsl
push
in
in
sub
push
mov
and
lods
shrb
loope
or
cmp
cltd
test
sbb
bound
in
cmpsb
sahf
xlat
cmc
adc
test
or
adc
mov
inc
xor
mov
mov
mov
es
mov
jno
xchg
lahf
pop
cmp
ljmp
xchg
adc
mov
rcrl
xchg
pop
in
loopne
push
in
cs
ja
jg
andl
fisttpll
insb
js
inc
das
or
sbb
sub
std
stc
je
pop
movsl
call
pop
gs
add
imul
push
aam
arpl
mov
and
pop
nop
stos
popf
sub
idiv
mov
js
xor
jecxz
cld
lea
push
cli
std
push
mov
xchg
mov
jbe
pop
jbe
mov
arpl
and
pushf
mov
sub
mov
leave
loopne
ss
les
fildl
popf
sub
loopne
bound
adc
add
or
xor
test
jne
nop
mov
ja
daa
outsb
insl
divl
aaa
cltd
sub
mov
pop
inc
test
xchg
scas
add
gs
xor
cmp
das
aam
shlb
aaa
dec
sub
xor
sbb
jecxz
jg
and
cmp
inc
sbb
cli
xor
fs
mov
add
lods
inc
jns
repz
fimuls
lahf
xchg
or
mov
mov
pop
push
jbe
jo
es
sbb
and
adc
je
pop
mov
cmc
push
fisttpll
mov
lahf
pop
jo
mov
mov
and
mov
cmc
fcoms
sahf
lock
add
or
rclb
out
cmp
ficoml
mov
sub
sub
inc
xor
arpl
enter
lcall
sub
jb
add
pop
jle
xor
push
loop
imul
in
xchg
cmc
xor
fnstsw
rcrb
out
jg
inc
jne
mov
push
cmpl
pop
and
imul
lea
mov
add
push
xlat
popa
xchg
sbb
sti
movsl
add
scas
movsl
sbb
xor
out
lods
dec
gs
test
and
xchg
push
test
xchg
and
pusha
jg
rcll
fs
adc
addb
nop
sbb
xor
repnz
dec
jg
or
ret
pop
add
jno
xchg
push
ror
outsb
test
insb
jecxz
fildl
lods
inc
notl
cmp
push
jecxz
push
cli
rorb
es
pop
pop
or
mov
int
xchg
loopne
fcmovb
iret
icebp
and
rolb
jl
push
ds
call
out
pop
jp
xor
add
out
mov
fisubrl
xchg
clc
push
mov
repz
test
inc
imul
bound
fnstcw
ret
nop
ja
fwait
lahf
push
sti
sub
cmp
add
push
arpl
cmp
pop
enter
and
cltd
mov
push
push
adc
dec
aam
enter
dec
xchg
ror
jl
cli
xchg
hlt
orl
loopne
test
cmp
je
pop
into
notb
enter
xlat
sub
cmp
loop
mov
test
out
push
faddl
push
add
xchg
aad
testb
mov
jb
repnz
dec
rcrl
ret
or
xchg
or
sub
out
dec
dec
data16
arpl
aas
cmpsl
jo
cmp
stos
xchg
pusha
hlt
andl
dec
repnz
subl
daa
push
xchg
adc
sbb
dec
sbb
fdivl
pop
jmp
mov
mov
pop
add
popa
nopl
mov
and
dec
pop
push
mov
jns
cmp
add
add
xor
xchg
xor
jmp
hlt
imul
iret
cmp
push
mov
adc
xchg
sbb
mov
lock
pop
add
lcall
out
ljmp
jge
les
daa
out
inc
mov
push
or
enter
ret
push
fcompl
rcl
nop
sub
xor
sub
and
cmp
mov
aad
lock
int3
push
jge
mov
xor
dec
xchg
xchg
mov
cmpxchg
sub
pop
subb
sbb
rclb
in
je
xchg
arpl
pop
push
in
jle
jbe
neg
neg
test
lods
or
jle
sub
or
mov
gs
test
outsl
subl
and
jb
jbe
push
arpl
popf
cmp
daa
cmpsl
cld
aam
push
inc
xchg
lret
xchg
ss
dec
add
stos
dec
add
pop
sub
sub
mov
cwtl
pslld
mov
dec
lcall
repz
test
push
mov
inc
dec
insl
ret
stc
pusha
popf
push
inc
lea
scas
fisubrl
cmp
mov
adc
add
and
push
dec
fiadds
push
jecxz
mov
iret
adc
pop
sbb
mov
ret
inc
je
filds
stc
ljmp
popa
pop
popa
add
xor
cs
loopne
lods
or
test
dec
adc
xchg
add
cmp
sbb
jecxz
jne
test
xor
pop
cltd
cwtl
pop
in
push
divb
out
and
and
mov
cli
inc
incb
imul
out
add
xor
xchg
or
cmp
and
xchg
imul
push
push
aaa
xchg
mov
mov
inc
add
shrl
std
cmc
jo
adc
loope
ds
mov
add
sub
lds
pop
insl
out
jne
out
fs
bound
xor
xor
sub
outsl
dec
in
out
imul
les
push
data16
mov
movsl
cltd
out
in
dec
nop
xor
jne
mov
js
popa
adc
adcb
pop
dec
bound
outsl
inc
jge
cmp
loopne
mov
xor
ds
inc
dec
enter
std
rcll
es
in
cmpb
adc
test
scas
xchg
add
leave
fs
loopne
cs
sbb
scas
repnz
insb
mov
pop
push
lds
cmpsl
inc
cmp
xor
arpl
mov
mov
push
adc
ret
sbb
mov
mov
pop
ds
jno
dec
cmpb
scas
cmp
dec
insl
loope
xor
and
jns
pop
stos
leave
mov
int3
lods
adc
adc
mov
xchg
scas
mov
fmul
sub
jge
cmp
jecxz
mov
pop
or
push
xchg
js
add
xor
cmp
pusha
cmp
add
inc
shll
push
sti
and
addr16
dec
and
adc
add
dec
stos
mov
mov
sbb
dec
sahf
imul
and
push
icebp
fstl
pop
fcomip
sahf
stos
cmp
mov
pop
loopne
aas
xchg
pop
add
jg
xor
xor
mov
fs
shrb
and
xor
fildll
es
insb
leave
or
imul
push
inc
sbb
in
dec
bswap
dec
pop
int3
or
cmp
sub
cmp
pop
sbb
and
and
mov
stos
push
addb
xchg
repnz
dec
sbb
pop
adc
jle
nop
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
push
mov
jp
pop
jp
adc
add
xchg
inc
rolb
fsts
add
dec
cltd
or
lahf
mov
sbb
cs
pop
and
loop
lods
lea
and
pushf
pop
xchg
sbb
enter
sbb
lcall
mov
push
in
pushf
sbb
stos
mov
jnp
lcall
pop
pop
loopne
addl
adc
cmpsl
and
ret
jb
inc
imul
sarb
mov
out
pop
mov
pop
add
xchg
orl
jne
fmuls
stc
dec
pop
sub
inc
push
mov
mov
cmc
xlat
mov
cmp
push
jge
and
popf
pop
sti
nop
push
push
jne
and
ds
loopne
xlat
push
fstpt
cmp
mov
mov
cmp
gs
neg
je
adc
jbe
mov
divps
rorb
imul
pop
jmp
sub
sub
mov
push
divb
icebp
adc
iret
movsl
cs
mov
lcall
loopne
stos
and
testl
xor
jge
adc
inc
add
scas
das
movsl
adc
adc
push
xor
test
mov
dec
xchg
and
or
jl
inc
xchg
test
add
xchg
jo
xchg
pop
mov
lock
and
or
psubsb
fwait
mov
fsubrs
out
mov
mov
mov
jge
sbb
push
mov
push
inc
mov
inc
pop
rep
lahf
int
lret
test
ds
mov
mov
adc
cmp
daa
je
and
pop
ret
adcb
jmp
and
cmp
repz
jbe
decb
xchg
cmp
stos
jg
cmc
cmpsl
jecxz
call
pushf
rolb
lock
lahf
push
js
lahf
cmp
enter
pop
mov
mov
stos
inc
shll
adc
mov
jno
xchg
mov
je
in
ja
mov
out
adc
subps
imul
aaa
insl
dec
lds
mov
adc
incl
sub
mov
pop
popf
xor
mov
add
testb
fcomip
pop
mov
push
push
xor
push
movb
bound
push
cs
lock
clc
imul
sub
cmc
jnp
mov
ret
inc
fwait
pop
hlt
and
sbb
loope
das
mov
lds
inc
fadd
lret
fdivl
cli
pop
pop
pop
or
or
outsl
push
and
pop
in
sahf
mov
fiaddl
nop
cmpl
mov
mov
ljmp
adc
mov
push
negb
cmp
sub
adc
cmpsl
cld
add
cmp
mov
pop
inc
dec
fs
xor
stos
sbb
jbe
in
add
ljmp
ror
lds
xor
xchg
add
sub
jl
or
inc
cmp
inc
pusha
loope
mov
shll
mov
cmc
fwait
inc
mov
loope
add
xlat
mov
push
lods
repz
dec
pop
push
rolb
pop
xor
sbb
add
cmpsb
sub
xchg
inc
sbb
out
shrl
xor
je
add
mov
mov
xchg
mov
cmpsl
push
rcrl
adc
pop
push
fld
imul
rcr
cmp
jne
fucomp
cmp
out
cltd
test
imul
mov
incb
sbb
mov
cld
lret
cltd
mov
push
sub
push
and
jp
jo
mov
mov
ret
xor
fnstcw
in
dec
dec
dec
test
xchg
bound
xchg
push
sbb
mov
xor
decb
cmpl
adc
fldenv
fisubrl
jnp
mov
std
sbb
popa
jno
sbb
mov
stos
test
jbe
xor
jns
in
outsb
icebp
test
xchg
in
pop
repnz
repnz
mov
dec
daa
and
mov
outsl
es
jle
dec
cmp
pop
mov
jae
and
mov
data16
cs
mov
aad
and
push
jmp
lds
das
icebp
add
jb
or
push
js
rorl
sub
loop
or
or
outsl
and
push
adc
mov
inc
push
mov
aaa
popa
dec
sub
in
push
adc
dec
push
idivb
into
xchg
inc
bound
lcall
cmp
add
movsl
test
xchg
sbb
pop
sbb
xchg
icebp
xor
and
ret
mov
jbe
stc
fisubrl
insl
in
sbb
dec
outsl
fwait
in
mov
sahf
mov
jo
in
test
loopne
jns
cs
xchg
aas
and
int
or
loopne
push
jmp
outsb
in
inc
sub
in
fmull
xor
push
cmpsl
insb
lret
pop
pop
lretw
ljmp
scas
adc
sub
call
std
mov
jo
dec
test
mov
and
jne
xchg
lock
ds
lret
and
clc
fisubl
data16
inc
or
mulb
in
arpl
pop
imul
rolb
mov
rcll
adc
das
fisubrs
jns
aas
movsl
into
xchg
es
fisttpll
repnz
sub
lahf
ret
push
or
cmpsb
adc
cmpsl
lcallw
shrb
lds
ds
cmp
icebp
clc
push
sarb
clc
std
sbb
aam
mov
call
pop
xchg
jae
mov
enter
rcrl
popf
ret
imul
ds
jbe
inc
inc
adc
jns
popa
cwtl
adc
icebp
pusha
testl
push
jge
test
js
jne
mov
mov
pop
rcr
jnp
outsl
es
mov
mull
div
pop
xchg
jp
test
cmpsl
cwtl
outsb
xor
xlat
jbe
inc
in
jl
inc
xchg
cmpl
push
add
push
jl
imull
adc
mov
je
jmp
sbb
scas
idivb
push
ljmp
nop
adc
call
xor
es
movsl
cwtl
jnp
je
cmp
add
fimuls
lret
sub
addr16
cmp
sbb
movsl
cmpsl
xor
cli
add
sarl
popf
jo
jbe
jo
dec
and
mov
scas
shlb
mov
aam
dec
sbb
mov
mov
mov
push
and
std
xor
outsl
sbb
out
jns
pop
xchg
sub
fwait
aam
push
mov
xchg
add
pop
mov
sbb
test
push
inc
int3
dec
fwait
hlt
sbbl
mov
mov
arpl
aad
jge
and
pop
xorb
jns
sub
test
imul
and
sbb
inc
jo
ds
sahf
mov
pushf
outsl
mov
aad
enter
stos
jne
mov
aaa
ljmp
pop
popf
sub
adc
dec
mov
stc
fwait
mov
lds
cld
sub
mov
xchg
pop
sub
jle
lcall
cmp
lea
std
out
push
movsl
cli
and
mov
js
les
push
dec
mov
dec
jge
push
mov
mov
add
sub
sub
mov
add
cmp
or
int
les
nop
mov
mov
adc
inc
aaa
jbe
and
jb
and
addb
rcl
fwait
mov
pop
outsb
jge
repz
stc
dec
loop
nop
mov
mov
aas
dec
mov
imul
test
cmpsl
leave
insl
push
nop
add
cmpsb
xorb
push
mov
sub
sbb
dec
iret
leave
adc
and
cltd
and
jp
cmp
sbb
sbb
cwtl
push
add
and
push
fcomi
pop
mov
sbb
shrl
inc
xchg
push
xor
mov
and
lds
xchg
dec
addr16
idivb
push
jp
mov
lods
add
js
jne
mov
mov
movb
jecxz
mov
aaa
fcompl
mov
xlat
mov
inc
jmp
in
push
shll
mov
rcrl
pop
mov
mov
repz
mov
outsb
lea
sahf
mov
mov
arpl
clc
test
cltd
out
lret
test
mov
orb
xor
pop
int
mov
das
push
dec
pop
in
mov
mov
scas
leave
pop
add
es
xchg
scas
bswap
adc
jns
cmp
xchg
mov
sbb
sti
push
pusha
mov
dec
sbb
cmp
je
addr16
imul
jl
rcrb
mov
std
lret
xlat
ret
mov
jno
mov
adc
insb
pop
shrl
xor
push
or
adc
ja
push
cs
rol
jge
js
sbb
add
xor
jmp
jecxz
lds
cmp
popf
jae
add
sub
push
sub
lcall
sbb
add
mov
jno
shr
shlb
adc
int
cmp
xlat
in
in
fstps
adc
push
adc
xlat
lahf
add
cmpsl
dec
or
jl
xor
adc
test
outsb
pop
jge
pusha
out
ljmp
insb
xchg
add
cmp
mov
or
aad
std
cld
jno
inc
stos
xchg
fs
sbb
adc
int3
dec
arpl
jecxz
jle
int3
ds
popf
sub
dec
xchg
imul
in
push
sbb
ja
sbb
gs
dec
sahf
imul
in
hlt
mov
or
movsb
popf
xchg
adc
loop
and
hlt
mov
jge
fimull
daa
popf
testl
jl
in
pusha
mov
mov
aas
mov
adc
rcrb
lock
add
xlat
jg
or
mov
mov
aaa
test
mov
call
pop
xor
add
dec
pop
aas
adcl
imul
pop
xchg
arpl
cwtl
cld
adc
lods
int
pop
mov
in
jo
aaa
js
sbb
rol
sub
push
inc
arpl
push
jno
cs
add
mov
push
dec
dec
cwtl
in
cmpsl
xchg
sti
xchg
out
mov
jo
inc
aaa
orb
sub
jno
sbb
or
aas
test
dec
inc
movsb
jb
pop
pop
call
call
daa
mov
daa
adc
shlb
and
jmp
mov
in
mov
cmp
xchg
nop
or
aad
mov
jp
cmpsl
adc
inc
push
mov
imul
mov
push
scas
sbb
test
fs
xchg
cwtl
cmpsb
lods
popa
ret
inc
jl
test
stos
xchg
std
int
enter
enter
testl
scas
popf
push
push
pushf
cmp
jl
lahf
int3
in
pushf
ret
std
pusha
and
dec
jle
pop
loop
lret
hlt
lret
and
std
daa
fldt
mov
out
rcl
fistl
adc
push
arpl
loopne
xchg
daa
inc
mov
inc
mov
xchg
outsl
jns
xchg
mov
out
push
jnp
xor
fildll
sub
mov
mov
outsb
mulb
testl
cmpsl
fwait
mov
xchg
xchg
mov
sbb
adc
inc
lahf
fs
fwait
dec
rcrl
imul
sbb
xsha1
cmpsb
int3
xchg
shll
pop
ljmp
adcl
push
sahf
cmp
dec
daa
push
xrelease
sbb
lock
push
cmp
sahf
pusha
and
mov
xlat
outsb
or
inc
insl
test
das
movsb
iret
hlt
je
jb
std
outsb
mov
or
jno
daa
adc
fwait
push
pushf
out
lds
andb
pop
aas
es
and
add
inc
xor
out
fdivl
add
adc
leave
and
imul
je
adc
das
mov
dec
adc
push
jbe
cmp
int
in
pop
lods
into
pop
and
sub
pop
and
pop
into
push
dec
sbb
out
addb
pop
sbb
add
and
add
jne
ds
xchg
lret
rolw
mov
aaa
pop
stos
je
push
repz
insl
inc
mov
push
imul
int
in
and
jmp
pop
xchg
add
rorl
loope
mov
cld
mov
out
out
test
lret
or
xchg
aad
push
stc
mov
pop
sub
mov
cmp
aas
pushl
sub
gs
jmp
xchg
call
xlat
out
outsb
cwtl
shll
cld
mov
cmp
cld
dec
add
fdiv
cmp
test
shl
adc
ret
bound
push
adc
fists
xchg
or
pop
adc
mov
add
cmp
test
scas
test
leave
out
stc
les
cmpsb
mov
mov
in
cld
push
xlat
subb
mov
sub
test
js
or
xchg
adc
xchg
sbb
inc
jge
sbb
and
ljmp
mov
outsb
pop
jb
fildll
jae
cmc
testb
movsl
cmp
lock
jo
dec
xor
push
sub
dec
shlb
dec
xor
cmp
mov
sub
dec
scas
mov
fisubrs
pop
insb
mov
jle
aad
lret
loope
cwtl
scas
mov
jg
gs
scas
or
daa
fnstcw
dec
sub
sub
push
pop
nop
and
iret
ret
and
push
pop
mov
call
rorb
lcall
push
out
pop
dec
mov
sub
leave
push
pop
rcrb
fisubrl
mov
test
pop
sub
mov
out
mov
pop
mov
inc
sbb
aad
or
rcll
aad
test
and
int3
cmp
xchg
xor
xchg
lcall
rclb
loop
or
out
cmp
mov
or
sar
dec
xchg
ret
js
dec
xor
int3
pop
adc
xchg
ret
out
push
or
sub
push
mov
stos
mov
fpatan
ret
dec
xor
pushf
lock
cmpsl
imul
lcall
idivb
sbb
cli
jmp
push
sbb
pop
pop
rcll
into
fwait
mov
xchg
xor
iret
subb
xor
leave
dec
lea
inc
js
mov
add
push
dec
pop
push
add
add
sahf
out
mov
je
xchg
int3
jp
imul
inc
mov
dec
jnp
fcmovbe
stos
and
mov
out
sub
cld
data16
cmp
shll
lret
fdivrs
xchg
cli
adc
orb
ja
cld
pop
sub
mov
sti
mov
lret
and
cmp
dec
cli
cli
call
jle
mov
inc
lret
cmp
packuswb
inc
pop
mov
stos
movl
cwtl
les
scas
sahf
cmpsl
cwtl
and
jbe
bound
jmp
add
clc
push
jnp
incb
push
mov
fldt
inc
adc
adc
cwtl
lahf
outsb
push
push
jl
arpl
lea
in
aad
xchg
test
add
adc
das
cld
mov
shll
aad
mov
inc
cmc
stc
js
std
inc
xorl
mov
push
jmp
subb
clc
mov
push
ret
push
add
testl
sbb
cmp
fldt
test
stc
sub
lcall
jo
inc
dec
stos
test
pop
jecxz
pop
iret
sub
xchg
xor
add
or
xchg
sub
pop
movsb
mov
mov
inc
shrb
orb
adc
out
orb
ffree
test
repz
call
add
rolb
ds
rolb
jmp
mov
rorb
lock
xor
lret
sbb
out
adc
lahf
in
mov
mov
and
idivl
xor
repnz
cmpsb
push
je
adc
jmp
inc
push
lods
dec
addl
ret
es
push
mov
or
or
out
xchg
cmpsb
inc
dec
bound
mov
adc
or
les
ljmp
pop
test
push
push
call
push
fs
ds
aaa
notl
mov
pop
sbb
mov
and
and
inc
mov
out
mov
mov
jns
mov
shl
sub
mov
cmp
sarl
cmp
inc
clc
vmread
push
dec
add
sub
push
xchg
or
push
sti
add
shll
mov
cmc
xchg
jno
out
xchg
fisubrs
fcom
sti
mov
mov
shll
cmp
mov
pop
sbb
pusha
mov
aaa
mov
fs
sahf
sub
outsb
ds
push
push
cld
in
push
ja
into
repz
add
jecxz
add
sub
mov
fwait
mov
jo
jecxz
lea
in
sub
lock
ds
jo
lock
jge
mov
cld
sub
sbb
and
shl
filds
xor
nop
and
push
push
cmp
jo
push
or
fadds
gs
mov
insb
inc
insl
dec
jecxz
shll
and
dec
jno
aas
jo
push
xchg
inc
jl
push
fstpl
sub
and
or
and
mov
sub
xor
add
insb
stos
in
jle
cli
std
test
pop
push
xchg
pop
dec
add
and
aas
mov
mov
int3
lock
fildl
mov
lret
lret
xchg
push
dec
add
pop
rcrb
push
out
data16
std
dec
mov
pop
push
xchg
insl
inc
hlt
repz
sahf
in
js
sbb
pop
leave
pushf
dec
mov
sub
jl
mov
fisttps
aas
icebp
pushf
pushf
mov
xchg
push
jns
push
rcr
push
xlat
scas
insl
jnp
cld
pop
push
and
pop
ja
fxam
orl
mov
fadds
mov
jmp
movsb
push
pusha
and
sub
adc
xchg
and
jb
in
inc
dec
rclb
xchg
sbb
mov
mov
sbb
add
jmp
shll
sbb
leave
dec
dec
push
scas
fdivl
repnz
cmpsl
pop
dec
in
fistpll
cmp
xchg
test
push
pop
leave
fwait
pop
ret
push
pop
addr16
sbb
xchg
jns
incl
mov
incl
fisttpll
stos
in
xchg
xchg
mov
xchg
dec
out
in
pop
xor
sub
or
sub
gs
mov
push
out
jns
in
mov
push
ja
dec
ds
fcompl
insb
adc
call
sub
or
pop
mov
popf
mov
adc
inc
outsb
aam
xchg
repz
inc
rcrb
insl
fnstsw
push
pop
ds
fs
sub
and
and
mov
mov
mov
jg
and
cltd
xor
cmp
scas
and
jecxz
test
hlt
add
arpl
cmp
int3
mov
cmc
cld
pop
pop
sbb
push
dec
loopne
loope
fnsave
and
int
jl
inc
es
mov
add
mov
inc
dec
ret
test
inc
push
aaa
cmp
xor
mov
movsl
cmpsb
fsubrl
cmp
scas
inc
fwait
mov
int3
mov
jno
sbb
xor
scas
ret
push
xchg
scas
ret
movntq
in
sti
push
xchg
jge
mov
push
mov
mov
mov
pop
notb
sbb
mov
mov
add
imul
scas
sbb
adc
into
popf
divl
daa
out
mov
cwtl
lcall
cs
xchg
pop
ficoms
cmp
ss
or
jne
xor
test
push
into
ljmp
xor
mov
push
mov
movsl
xchg
mov
movsl
repz
push
imul
stos
int3
mov
lahf
insl
inc
stos
mov
jle,pn
out
dec
inc
insl
sub
mov
aad
dec
add
not
outsl
inc
pop
hlt
add
cmp
inc
mov
or
cld
xor
hlt
insl
sub
lret
or
fwait
ja
je
cs
adcl
and
insb
mov
ficompl
mov
imul
je
push
add
out
jno
imul
out
adc
add
adc
pop
sub
jle
dec
sub
cmp
cmc
lds
movsb
mov
call
adc
mov
arpl
aaa
notl
push
push
jmp
insl
add
and
jnp
mov
stc
pop
cmpsb
dec
and
cli
mov
cmpsl
pop
pusha
fwait
addb
sbb
or
filds
xorps
add
ss
dec
push
test
mov
mov
aad
outsl
xor
cmp
pop
loope
and
and
sbb
in
xor
es
mov
test
movl
pop
repz
ret
test
enter
dec
mov
xor
addr16
xor
shl
adc
xchg
test
pop
sub
popf
push
or
ret
adc
icebp
pop
andl
sbb
lock
cwtl
imul
xchg
xchg
or
push
dec
and
xchg
or
add
xchg
push
sub
int3
jp
inc
jge
repz
stos
mov
mov
cwtl
aas
push
jg
roll
out
jb
adc
shl
and
and
xor
xchg
sub
lods
sti
cmc
insb
pop
or
inc
outsl
xor
outsb
cs
adc
push
outsb
mov
call
mov
xchg
clc
push
ret
push
out
mov
sti
in
shll
aas
sub
jecxz
insl
pop
inc
sub
add
mov
inc
nop
push
hlt
xor
mov
das
xorb
xchg
lahf
cmpb
and
movsl
rol
stos
cmp
mov
pushf
adc
cs
push
push
mov
psrlq
mov
cs
shll
cmp
xor
bnd
imul
outsb
movsb
inc
jo
and
scas
xchg
mov
movsl
movsl
inc
nop
sub
mov
insl
sub
hlt
sub
mov
inc
nop
lds
sbb
jmp
fstps
nop
dec
imul
xor
inc
adc
scas
pushf
stc
mov
es
cmp
mov
dec
cli
sub
add
adc
and
add
test
mov
lods
out
sahf
int
aaa
sub
jg
push
inc
jg
cmp
dec
ds
gs
in
sbb
adc
jns
ljmp
or
ds
rcll
cmp
mov
inc
in
mov
das
add
adc
clc
dec
testb
push
pop
leave
imul
and
xor
push
imulb
fcoml
outsb
sbb
pop
lret
mov
fmull
outsb
push
dec
leave
test
in
pop
fdivrs
sbb
aam
jmp
hlt
orl
cmc
ret
lea
daa
div
jecxz
or
dec
decl
lret
frstor
imul
push
std
jg
adc
popf
daa
stos
mov
in
enter
mov
scas
test
dec
imul
inc
loop
mov
cmp
xchg
dec
test
add
jbe
adc
mov
sbb
mov
dec
popf
iret
add
pop
jle
jbe,pt
dec
and
push
jge
sarb
jno
rcrl
mov
xchg
pop
sub
adc
jmp
mov
in
cltd
push
and
lock
arpl
xchg
cmp
daa
sbb
mov
loope
sbb
pop
cmp
ret
movsb
or
push
add
mov
jae
cmp
lods
loope
inc
ss
loop
lahf
ja
setg
sub
jmp
mov
jmp
adc
pop
lea
loopne
adc
icebp
daa
adc
jb
adc
std
push
fcmovnbe
test
sti
and
adc
jge
mov
add
adc
inc
and
jmp
adc
test
xor
cmc
outsl
xor
or
stos
cmp
fsubrl
pop
mov
push
out
push
orb
pop
sub
cmp
dec
insb
sar
mov
push
outsb
xchg
int3
cmp
mov
repz
ljmp
bound
or
pop
push
leave
into
push
roll
jp
push
stos
call
stc
pop
mov
adc
cmpl
sbb
xor
push
xchg
aaa
subl
cmp
and
test
loopne
lret
inc
xor
ffreep
push
mov
cmp
sub
lods
mov
das
bound
ss
imul
and
jno
jp
cmp
inc
lret
cmp
sbb
test
rorb
scas
mov
lret
pusha
mov
sbb
sarl
and
inc
pop
std
or
ja
pop
mov
arpl
je
insb
sarl
clc
cwtl
sub
xor
fisttpl
or
test
insb
sub
mov
outsl
das
dec
pop
icebp
orl
stc
jnp
lods
out
sub
insl
adc
loopne
add
repnz
sub
xor
add
test
adc
lcall
in
insb
popa
movsb
pop
scas
dec
dec
ret
jo
jo
icebp
jbe
mov
lea
in
push
nop
or
add
fsubrs
push
mov
cli
inc
jae
adc
dec
pop
add
cmpsl
out
clc
pusha
jns
daa
icebp
iret
lahf
rcrl
inc
adc
push
je
push
lock
jle
inc
xor
cmp
js
pusha
out
jae
xchg
cmp
or
push
lock
dec
mov
mov
add
dec
jge
jno
mov
xor
lods
xchg
cltd
mov
add
and
das
dec
cmp
jo
xchg
cwtl
xchg
ljmp
mov
imul
es
sbb
sbb
aad
pushw
les
inc
push
mov
jp
movsl
mov
mov
out
shl
add
clc
pop
cs
shll
sbb
arpl
or
bswap
lods
pop
cmpsb
dec
movsb
xchg
popa
mov
cwtl
out
ss
orps
or
mov
lea
pop
leave
aas
or
in
mov
cmp
mov
push
cli
mov
insl
jecxz
cmp
jecxz
mov
push
cmpb
fisubrl
scas
fsubs
je
xchg
xorl
push
ss
aas
roll
gs
sti
sahf
aad
mov
or
push
push
je
into
les
mov
outsl
push
pop
jle
shll
insb
cmovl
pop
jle
sbb
jne
ficomps
jb
sub
cmpb
dec
popa
push
dec
xor
data16
xor
mov
pop
aad
xor
in
inc
inc
and
notb
xchg
fcom
bound
lea
mov
aas
hlt
mov
inc
adc
add
push
add
and
ja
pusha
pusha
clc
xor
mov
dec
je
cltd
inc
lea
in
push
in
aad
enter
cwtl
das
or
mov
adc
jl
push
dec
test
inc
mov
cmc
or
lret
and
iret
push
out
sub
hlt
or
mov
xor
push
or
and
js
mov
cmp
data16
imull
mov
movsb
jns
int3
push
mov
movsl
sub
xchg
dec
and
mov
mov
push
rcrl
sub
jmp
addr16
jecxz
stos
jno
or
cli
cmp
push
cmpl
adc
inc
rorb
jp
sbb
inc
pop
mov
sbb
fwait
sbb
movsl
pop
popf
das
mov
sub
adc
xlat
push
rol
add
popf
mulb
arpl
cs
lret
cmpsb
or
imul
aas
jle
jge
dec
out
iret
or
mov
leave
in
dec
xchg
mov
loop
inc
lock
repz
lock
clc
push
jecxz
or
mov
fstpl
lahf
push
cld
mov
mov
adc
into
cli
xchg
iret
iret
xchg
push
dec
cmp
pop
and
outsb
shl
xchg
and
lds
or
sbbl
xorb
out
xchg
xorb
jne
ud2
jmp
js
clc
cmp
pop
pop
mov
jle
and
es
clc
scas
rclb
sub
cli
dec
sti
sbb
or
xchg
call
aad
stc
in
dec
les
jno
xlat
lds
adc
add
scas
test
cld
jns
cmpsl
adc
or
fcmovne
inc
sbb
pusha
inc
jmp
outsb
dec
mov
sub
dec
mov
das
mov
cltd
jmp
cmp
pop
and
cli
mov
or
jmp
push
inc
decb
mov
fisubl
xchg
aad
fucomp
dec
xchg
gs
out
pop
jp
cltd
loop
add
mov
mov
mov
push
repz
stos
movsb
mov
sbb
insl
pop
in
jns
jle
stos
ficomps
mov
pop
rcrl
lcall
and
sub
push
stos
icebp
repnz
sbb
loope
pop
icebp
loopne
inc
testl
push
stos
fwait
out
sti
test
enterw
xchg
or
xor
loopne
js
jno
into
jmp
rcl
pop
cmp
inc
dec
push
in
ds
mov
dec
adc
jbe
sahf
cmp
imul
xchg
and
mov
xchg
stos
test
mov
dec
cli
cld
dec
sbb
and
sbb
pop
pop
or
dec
fwait
iret
add
sbb
std
lahf
adc
out
ja
pushf
mov
out
lea
push
cmp
popl
adc
jmp
rclb
loopne
std
add
repnz
dec
stc
mov
xor
xor
push
add
and
pop
int
or
xchg
lea
push
push
or
xor
add
jmp
outsl
xchg
push
mov
pushf
cmp
lahf
ret
push
mov
stos
aam
stos
scas
xor
cs
repnz
inc
movsl
mov
ljmp
int3
pop
in
je
insl
or
push
loope
lods
pop
sti
add
mov
mov
add
or
cltd
add
xor
popa
adc
and
cmp
ja
dec
cmc
mov
or
stos
aas
ja
test
sub
cld
xchg
mov
xor
adc
dec
mov
dec
add
or
out
add
and
sahf
xchg
mov
push
loopne
fmull
mov
sub
sbb
pop
mov
lock
lock
mov
insb
fs
fwait
mov
mov
push
pop
jecxz
sbb
hlt
cld
push
lock
add
push
fimull
out
pop
jmp
mov
mov
dec
inc
and
dec
roll
inc
mov
jmp
enter
dec
fcmovu
jge
mov
mov
push
mov
mov
gs
insl
pop
test
add
push
sbb
int
xor
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
pop
arpl
jge
or
jp
ret
mov
pop
jl
xor
mov
test
outsb
lock
into
fucom
pop
in
dec
cld
and
mov
repnz
es
mov
loope
aad
mov
xor
mov
mov
or
aaa
cmp
pop
out
imul
inc
fbstp
cmp
in
fwait
daa
inc
sub
ret
shll
push
xchg
test
negb
xlat
pop
mov
pusha
push
and
jmp
stos
gs
cs
cmpsl
enter
adc
gs
rol
outsb
sbb
dec
int
insl
mov
mov
adc
push
push
in
sub
leave
pop
lea
xchg
cld
bound
sbb
fs
cmc
outsl
or
mov
in
inc
push
sub
and
or
inc
dec
push
jmp
adc
shlb
sbb
mov
es
cmp
lods
ret
data16
inc
cld
iret
in
mov
loope
enter
jmp
in
sti
lea
jno
jge
cmp
fwait
and
jl
lret
out
icebp
andl
jno
dec
xlat
sbb
xlat
out
lahf
insb
dec
or
inc
js
rorb
mov
jno
out
enter
jmp
push
es
clc
sub
aad
mov
xchg
enter
adc
in
fnsave
sbb
jp
imul
es
outsb
cmpsb
lds
add
or
jp
out
int
lret
mov
add
cmpsb
cmpsl
mov
pushl
mov
sub
pop
sbb
xor
rcr
sbb
pushf
sbbb
push
or
xchg
ret
icebp
xchg
fsts
iret
sbb
mov
adc
call
dec
sub
sub
xchg
cmpsb
push
xchg
aad
cmp
add
inc
outsl
in
outsl
adc
push
sub
mull
push
stc
mov
cwtl
fdivrl
jl
scas
js
cmp
pusha
popf
fs
lret
cs
sahf
and
mov
shr
aas
xor
daa
out
mov
ljmp
xchg
jnp
and
jecxz
xor
and
cmp
rclb
mov
gs
jns
idivb
dec
cmp
iret
push
roll
xchg
popf
ror
add
mov
xchg
loop
int3
xchg
add
and
jmp
add
sub
xchg
sahf
and
sbb
xchg
popf
mov
xchg
sub
fstpl
inc
lcall
adc
pop
nop
adc
pop
xchg
dec
push
push
dec
les
dec
insb
dec
inc
out
hlt
imul
bnd
gs
dec
stos
je
mov
test
pop
jns
shlb
lahf
sbb
cwtl
and
out
mov
stos
je
jnp
xor
xor
jne
outsb
adc
in
divl
stos
stos
xchg
sbb
adc
and
fwait
es
mov
pop
push
jp
leave
mov
push
clc
xlat
lea
into
ret
adc
sbb
das
stc
aas
popa
mov
xchg
dec
mov
mov
data16
xor
lret
out
movsl
dec
out
imul
jns
int3
sbb
js
out
or
iret
repz
loopne
jns
push
push
or
mov
mov
orb
jmp
fnstenv
cmpsl
dec
aam
je
insb
pop
in
leave
ds
lret
or
dec
aad
jbe
in
enter
xor
sub
xor
jl
aam
enter
repnz
das
movsb
pop
add
jne
xor
lods
in
mov
negb
jl
scas
shrb
mov
add
dec
inc
test
cmpsl
ficompl
std
sbb
cmp
test
aaa
adc
fmuls
xchg
jnp
divb
sbb
nop
mov
mov
mov
fdiv
mov
lret
add
and
out
mov
lock
fisubrl
or
decb
add
and
iret
mov
stos
inc
lret
jl
cmc
sbb
and
sbb
inc
mov
mov
insl
jg
movsb
popa
xor
pop
and
cmp
gs
adc
pop
adc
jo
adc
push
sub
mov
push
lret
lahf
cli
sbb
push
aad
adc
sbb
mov
push
jle
pop
das
faddl
loopne
push
jns
pop
mov
ret
test
pop
fistpl
cwtl
fs
out
jp
dec
rorl
js
cmc
decl
lret
fisttpl
mov
pop
mov
addb
xor
mov
cmp
shr
adc
enter
fcom
sub
into
inc
int
xchg
daa
pop
or
mov
cmp
cmp
testl
pop
rorb
outsl
pop
outsb
leave
cmc
mov
out
dec
js
sbb
sub
fidivl
mov
or
sahf
leave
sbb
into
fwait
add
mov
add
pop
inc
cmpsb
arpl
stc
mov
es
imul
stos
push
mov
pushf
inc
xchg
lret
cli
cmp
inc
sbb
cli
stc
and
repz
fcmovne
mov
arpl
or
leave
dec
les
shlb
call
jecxz
xor
mov
popf
js
xor
cs
mov
stos
negb
lcall
lods
mov
cmp
add
std
xlat
cs
ret
ret
sub
orb
lahf
pop
mov
adcl
inc
subb
popf
adcb
incb
and
cs
fsts
mov
push
std
aam
loope
fdecstp
leave
mov
je
fiaddl
xchg
neg
mov
filds
daa
lea
add
dec
jle
ljmp
cmp
sbb
in
mov
jno
enter
test
popf
inc
in
push
sub
or
push
xchg
ret
and
cmp
push
jns
add
and
in
inc
cmc
hlt
xor
cli
int
scas
in
adc
lcall
loopne
ret
jg
sahf
in
insb
mov
std
in
xor
loop
test
scas
add
dec
or
xchg
sbb
aad
jle
pusha
pop
inc
sub
ret
fidivl
movsl
fsubrp
mov
jns
outsb
bnd
into
sbb
sarl
jae
data16
dec
aad
push
sbb
les
sbb
popf
imul
xchg
and
and
fnstenv
les
fldt
mov
add
adc
fmuls
or
push
test
add
mov
xor
scas
sarb
sbb
ja
adc
insl
idivb
push
jae
in
aad
sbb
int
aaa
xor
dec
rcrl
jbe
hlt
cmpsl
loopne
imul
xchg
mov
pop
aas
dec
mov
jns
loope
lods
adc
jne
lds
jge
stos
jp
cld
push
dec
pop
mov
add
jnp
int
or
dec
sbb
xor
ret
push
push
test
int
jmp
test
cmp
push
jo
lods
insl
and
cli
xchg
push
or
jne
repnz
shl
out
out
js
lea
dec
cmc
mov
and
cmp
add
mov
hlt
pop
and
sub
jo
pop
inc
out
xor
cmp
fcomip
mov
jne
shr
js
adc
iret
imul
adc
pop
dec
cmpsl
mov
fcoms
hlt
mov
adc
leave
scas
jmp
sub
loop
bound
decb
pop
pusha
rcrb
and
lock
pop
lods
aad
and
aam
mov
ljmp
push
in
push
mov
int3
xor
neg
imul
leave
cmp
pop
nop
popf
sub
mov
xor
mov
fcomps
es
aam
jl
pop
push
addb
jno
stc
inc
mov
push
js
sub
xor
inc
sub
mov
js
in
xor
rcrb
in
stc
std
and
or
enter
sub
mov
cmp
icebp
sub
shrb
jnp
sub
ret
xchg
subl
outsb
ret
xchg
sbb
inc
xor
adc
std
xor
lcall
fsub
cmp
sub
addr16
push
mov
es
mov
jbe
stos
jb
dec
jo
js,pt
push
sarl
jo
mov
pusha
cli
loop
cmp
inc
xor
lret
cmp
sub
or
lcall
test
int3
shlb
dec
jne
sub
jb
cmp
add
sbb
dec
in
mov
inc
js
mov
cmp
mov
ja
jo
repnz
lock
jo
imul
lods
cmp
loop
adc
and
lret
mov
push
cmp
dec
fnop
pop
push
insb
or
pop
cmpsl
or
sbb
cwtl
adc
fimull
xchg
call
or
xchg
fisttpl
jp
push
mov
xor
std
pusha
xchg
push
push
rcr
mov
inc
sbbb
pop
mov
push
testl
sbb
notl
push
pop
out
adc
cmc
cmp
lods
or
outsl
add
ja
cmpsb
mov
pusha
pushf
mov
pop
sbb
jns
ljmp
repz
push
into
fwait
push
repz
data16
shll
push
push
jne
and
test
add
aad
imul
out
shll
xchg
inc
addr16
sbb
loopne
mov
adc
lret
mov
movq
dec
xchg
sbb
cs
out
mov
sbbb
jg
push
scas
sub
lock
movsb
mov
and
aas
shrb
mov
call
leave
mov
xchg
pop
pushf
sub
popf
inc
push
xchg
pop
jmp
xchg
in
sbb
fnstcw
and
lret
leave
sub
cli
adc
push
sub
lea
add
xchg
js
jmp
push
push
add
pushf
ret
xchg
xchg
adc
or
mov
test
or
sti
mov
jns
xchg
and
pusha
jno
hlt
das
flds
jg
push
out
ja
jge,pt
pop
xor
adcb
pop
mov
loope
mov
push
add
jnp
sub
adc
addr16
push
cmpsl
dec
out
ljmp
cs
mov
xchg
int3
in
and
sbb
pop
les
push
sbb
sub
jmp
jge
das
icebp
mov
dec
ret
push
mov
aas
mov
sub
outsb
fiaddl
repnz
lcall
mov
mov
lods
pop
xchg
stc
mov
xchg
inc
dec
inc
out
int3
sarl
jbe
jmp
icebp
sub
and
mov
shlb
test
push
mov
ljmp
mov
rolb
mov
jl
cld
lcall
fistpl
pop
imul
mov
xor
shll
xchg
out
icebp
adc
push
scas
lret
mov
lret
aad
or
dec
add
aaa
inc
mov
arpl
mov
lods
imul
push
std
and
arpl
cltd
aaa
fnsave
out
scas
adcb
push
imul
jmp
inc
sub
out
xchg
or
gs
in
pop
push
xor
xchg
popa
mov
pop
popf
aaa
inc
cmp
leave
insl
mov
insl
jle
xchg
pushf
jb
add
shlb
ficompl
mov
adc
in
ljmp
loope
jp
sub
cmp
sub
cmp
dec
sti
xchg
subl
leave
in
adc
mov
mov
in
loope
dec
scas
fnsave
and
sar
inc
popf
and
push
inc
adc
xor
sar
mov
add
clc
adc
jmp
sub
fisubrl
mov
mov
or
lods
xchg
mov
or
movsb
ret
push
leave
push
sbb
arpl
lret
out
mov
pushf
sarb
dec
aad
ljmp
sti
int
fildl
imul
add
mov
nop
aaa
or
mov
mov
mov
test
pop
pop
xchg
mov
push
xchg
xor
push
bound
pop
je
outsb
cmp
in
mov
repz
push
bnd
pop
pop
push
insb
loopne
mov
out
nop
and
or
sub
mov
pop
xchg
mov
ljmp
push
xor
dec
xor
jnp
mov
ljmp
xor
cmp
loop
ficoms
aas
sbb
popa
in
cmpsb
cmpsl
jecxz
jb
stos
scas
dec
add
std
mov
and
jle
xor
push
lret
dec
repnz
rcrb
stos
inc
shll
sbb
enter
stc
test
test
cwtl
test
sbb
cmpsl
push
shr
andb
sub
iret
xor
loopne
or
sbb
int3
mov
lret
aas
pop
cld
hlt
dec
mov
fidivl
mov
inc
scas
mov
xchg
mov
icebp
inc
sbb
fucomp
rcrl
sub
fnsave
dec
inc
xor
fsubs
pop
cmp
cli
movsb
xor
cmpsb
repz
sub
std
shrb
xchg
cmpsb
std
lods
sti
out
aas
cmpsl
or
and
xor
ret
inc
jge
aad
jg
push
xchg
jno
adc
cmp
dec
cmpsb
pop
fstpt
or
xchg
je
arpl
mov
mov
ret
jns
lea
scas
push
inc
lcall
adc
sub
mov
adc
in
std
call
xchg
movsb
into
ss
into
push
and
inc
sbb
lods
sahf
and
mov
cld
int
sbbl
fstp
sub
dec
xor
fsubl
sub
xor
xchg
inc
lods
sbb
jecxz
jb
mov
mov
xor
xlat
scas
xchg
mov
inc
cvttps2pi
inc
fcmovne
pop
mov
xchg
add
push
cmp
jnp
jp
jl
add
jle
ret
call
pop
mov
push
sbb
pop
add
push
scas
mov
adc
mov
addr16
mov
sub
cli
adc
mov
mov
xchg
pop
xchg
mov
pop
std
push
xchg
push
movzbl
mov
aas
jp
xchg
daa
add
loopne
pop
mov
ja
mov
scas
adc
ss
subb
xchg
pop
stos
icebp
or
push
dec
js
sbb
sar
mov
nop
addr16
sbb
lahf
sbb
sbb
jns
push
sub
in
jl
aaa
inc
sarl
sbb
push
mov
psubsw
push
fs
jecxz
cwtl
push
movsb
adc
ret
sub
cmpsl
push
mov
jle
jmp
stc
or
loop
push
pop
sbb
lcall
mov
shl
adc
std
adc
dec
cmc
sub
and
scas
pop
out
add
mov
xchg
lock
cmc
mov
gs
out
inc
jo
dec
popf
xor
gs
and
out
popa
adc
xchg
cmp
dec
lods
popa
outsl
jnp
mov
push
cwtl
in
ret
insb
shl
mov
in
repnz
inc
or
cmpsb
mov
fsubl
push
cld
sbb
dec
daa
jg
jnp
xchg
arpl
je
mov
insb
cmpsl
ja
ja
xor
pusha
pop
test
inc
stos
mov
arpl
sub
mov
adc
arpl
or
rcl
dec
xchg
mov
call
fiadds
insb
jb
and
sbb
mov
pop
sti
lcall
enter
push
xchg
mov
push
xchg
pop
pop
popa
das
and
inc
jp
dec
sub
fsubs
mov
lds
jp
jae
inc
sbb
movsl
xchg
repz
and
pop
mov
movsb
or
pop
jns
loopne
aam
push
xchg
popf
fstpl
mov
jne
add
loop
add
pop
mov
lret
pop
stos
cmp
xor
out
fldenv
movsl
andl
lods
pop
in
push
fdiv
jle
insl
xor
xor
pop
dec
daa
xor
repz
stos
sbb
out
cltd
cmpsl
xchg
mov
lods
nop
mov
xchg
pushf
data16
sbbl
scas
mov
lret
lea
ret
mov
or
mov
or
adc
imul
and
sbb
cmp
pop
or
addr16
add
push
loop
imul
xor
cmpsb
gs
sub
cmp
stos
icebp
jle,pn
idiv
lcall
jmp
test
mov
jo
mov
jl
push
outsb
add
mov
sbb
imul
fs
inc
jecxz
push
mov
subl
inc
add
pop
loop
sbb
mov
out
push
addr16
mov
test
pop
lods
pop
je
sub
rclb
or
pcmpgtb
sbb
jle
jle
into
je
and
jge
jb
stos
and
sub
mov
mov
mov
fsts
ljmp
in
shlb
xchg
sub
inc
mov
test
out
test
ja
rcr
icebp
add
mov
nop
test
iret
sbb
inc
je
repnz
leave
sarl
xor
mov
xor
push
aaa
and
mov
scas
jb
or
push
out
mov
mov
fisubrs
in
sahf
cltd
andl
aas
iret
mov
jmp
adc
cmpsl
push
mov
jne
scas
cmc
adc
add
jnp
adc
arpl
xchg
mov
cmp
cmp
ss
xchg
pop
xchg
dec
data16
dec
icebp
xchg
jecxz,pt
or
dec
arpl
aaa
daa
sbb
nop
add
adc
data16
pop
pop
xchg
fimull
and
jmp
sbbb
ret
test
xor
scas
add
idiv
jb
push
test
xchg
xchg
sbbb
es
dec
mov
fsin
adc
sub
in
dec
mov
or
dec
jmp
test
cmc
xor
jne
popf
ss
mov
inc
dec
inc
push
imul
lahf
xchg
jns
insl
fcomps
ffree
dec
sub
mov
or
cmpsb
pop
in
mov
sbb
jnp
push
pop
cmp
inc
das
dec
adc
xchg
cmp
dec
js
mulb
lods
inc
mov
mov
dec
movsl
jo
std
aam
rcll
dec
shll
mov
jnp
or
adcb
test
fstps
cwtl
mov
xchg
in
imul
insl
cltd
push
in
pop
xlat
or
pusha
jno
lods
int
dec
mov
aaa
rorb
lods
gs
push
jnp
dec
in
aam
int
add
dec
cli
cmc
mov
lret
iret
mov
mov
cmp
imul
mov
loopne
sub
mov
outsl
addr16
xchg
cmpsb
lcall
xlat
pop
push
popa
sub
and
adc
shl
lahf
cmp
in
out
mov
add
adc
mov
lds
dec
dec
inc
or
xchg
js
jmp
and
pop
jle
cmc
rcr
xor
xor
adc
pcmpgtw
loopne
jne
mov
mov
dec
or
arpl
leave
fidivs
pop
inc
insl
cmpsb
and
hlt
cmpsl
scas
mov
adc
push
test
cwtl
decl
inc
push
cmp
sub
add
in
es
iret
inc
ss
adcl
pop
and
addr16
bound
xchg
out
cmp
xchg
sub
loopne
mov
std
imul
testl
mov
sub
add
jge
stos
jecxz
fcom
jmp
cld
mov
push
pop
idivb
fimuls
add
push
lret
scas
adc
dec
mov
pop
add
fadds
sub
int3
out
out
cmp
mov
dec
push
mov
or
jecxz
adcb
and
in
lahf
xchg
dec
inc
sahf
rolb
and
pop
mov
sahf
inc
jmp
inc
jne
or
orb
inc
test
xor
cltd
mov
arpl
enter
into
inc
xchg
dec
fimull
cltd
test
ljmp
inc
cmp
and
push
mov
loopne
dec
dec
mov
mov
add
out
in
mov
lcall
fistl
jno
lods
cmp
daa
cmpsb
out
dec
jo
pop
inc
mov
and
imul
aad
jmp
mov
cltd
cmp
leave
sti
fs
xchg
cmp
outsl
cmpsb
inc
xchg
inc
mov
outsb
mull
filds
adc
fcomp
movsb
mov
xlat
cwtl
hlt
lcall
pop
int
xchg
fiaddl
push
sbb
push
or
jns
js
loope
and
jae
pop
scas
mov
pop
cmp
and
jecxz
fdivrl
xchg
aaa
into
dec
fistpl
mov
and
jnp
insl
insl
mov
adcb
jmp
notb
je
jle
or
mov
or
push
pusha
iret
cltd
inc
test
scas
xchg
sub
mov
stos
test
xlat
and
add
test
into
dec
jp
or
sahf
pop
dec
outsl
cltd
imul
push
dec
lea
push
inc
push
testl
fisubrs
rcll
mov
sub
push
mov
adc
inc
test
mov
adc
cmp
icebp
dec
or
mov
rol
pop
pop
loope
xlat
fisttps
popa
lea
lds
cmpsb
repz
or
imul
inc
jmp
or
leave
mov
int3
pop
xchg
inc
fwait
mov
rcll
and
inc
adc
jne
test
push
fadds
fcompl
xchg
lret
loopnew
fisubrs
js
or
cmpb
xchg
into
dec
adc
sub
adc
adc
fiadds
cmp
and
mov
scas
pushfw
or
fidivrl
pop
or
inc
push
es
arpl
out
mov
xchg
andl
fwait
push
in
add
rclb
dec
adc
and
add
pushf
call
fstpl
iret
js
inc
mov
loope
cmp
stos
fsubrl
mov
add
arpl
mov
cmp
aas
push
dec
jecxz,pt
jbe
mov
jl
pop
jae
div
stc
dec
ss
push
xchg
jl
xor
cltd
and
fnstsw
movl
cmp
stos
hlt
test
pop
ja
dec
rcll
push
mov
mov
sub
movsb
cpuid
into
inc
lret
jle
roll
lahf
movsl
push
sbb
addl
jns
movsb
mov
xchg
sub
sbb
pop
jle
push
in
ljmp
inc
mov
movsb
test
sub
test
and
and
jge
xor
rcrl
clc
aad
adc
mov
add
dec
push
loope
stos
or
push
inc
cli
aaa
sub
lret
dec
clc
push
pop
lea
jecxz
fwait
or
jg
pop
outsl
shll
xchg
jno
out
popa
stc
movsl
jns
aam
jle
call
and
cld
bnd
shlb
aas
cwtl
out
adc
neg
inc
ljmp
movsl
pop
sub
sub
mov
daa
push
sbb
das
sub
push
clc
mov
cmp
pop
push
lods
inc
push
pop
iret
mov
loop
pop
push
or
xchg
cld
sub
xchg
xchg
mov
das
jnp
mov
fisttps
ret
mov
mov
ret
pop
mov
stos
sbb
pop
ds
mov
jne
imul
add
jne
mov
pop
xchg
jle
adc
jnp
fldcw
lds
mov
in
lret
adc
or
push
cmp
sub
or
mov
mov
sub
adc
insl
adc
dec
push
jle
sub
dec
fwait
adc
or
rclb
repnz
jns
jmp
mov
jl
test
cmpsb
in
or
fcoms
jmp
std
mov
call
je
xor
lcall
lea
fisubs
inc
sub
lahf
jne
and
inc
fcoms
repnz
repz
fcmovbe
es
fwait
mov
pusha
aad
push
pop
sub
add
ja
adc
hlt
jbe
mov
or
adc
leave
or
push
jae
out
fstl
out
push
push
push
lret
lahf
push
push
dec
mov
sub
out
frstor
mov
cmp
mov
adc
sarl
mov
in
icebp
xor
pop
jns
ljmp
sbb
sbb
ds
imul
and
stc
cwtl
sub
loope
out
or
mov
adc
mov
mov
cmp
sub
mov
clc
int
sbb
out
mov
dec
shlb
mov
cli
repnz
mov
cld
mov
rclb
push
push
test
sbb
sub
shrl
pop
xor
out
pop
jmp
mov
mov
cmp
arpl
and
stos
mov
fwait
cmc
shll
jmp
xor
or
outsb
and
sub
fwait
outsb
les
mov
sahf
iret
add
scas
jge
rep
pop
xchg
pop
jmp
or
dec
jmp
adc
xchg
hlt
sar
cmpsl
sub
jecxz
jne
xor
jno
inc
mov
xchg
sbb
dec
lret
xchg
sbb
gs
pusha
fcoms
loope
push
or
mov
dec
xorb
rcrb
repnz
xchg
pop
pusha
adc
lods
loopne
mov
sub
js
fwait
in
repz
add
in
fcmovnu
sub
jb
inc
int
das
jl
cmp
mov
sub
psrlw
aas
int3
neg
add
mov
ljmp
scas
push
cwtl
add
in
cmp
hlt
sub
jl
mov
fdivs
pusha
mov
jg
xor
cld
ja
leave
mov
pop
sub
shr
fmull
add
mov
ret
sbb
shr
lret
sbb
inc
cmp
xor
lea
addr16
push
xor
jecxz
push
xchg
daa
jbe
cmpb
rorb
shl
enter
pop
push
out
scas
adcl
mov
enter
pop
jmp
rcrb
sbb
mov
mov
cwtl
popa
mov
xchg
adc
stos
insl
cmp
popf
mov
lret
push
loop
mov
data16
fcoms
jae
mov
or
push
lea
rcrb
pop
mov
fildll
out
sbb
or
cs
sbb
add
pop
movsb
test
les
test
jae
or
out
fs
pop
lods
daa
sbb
ds
nop
push
loopne
cmc
insb
xor
mov
fmul
and
lcall
xor
test
ret
cmc
adcb
jg
cmpsb
vdivsd
lock
cmp
lods
xor
stos
out
test
movsb
lret
xchg
loope
sub
loop
test
jmp
xrelease
stos
and
sbb
mov
pop
je
ret
xor
push
cmp
fldl
push
insl
cld
xlat
inc
aas
add
lea
mov
es
cmp
js
ja
pop
mov
sbb
dec
nop
inc
repnz
shlb
and
mov
mov
cmp
movsb
pusha
push
xchg
imul
shll
call
lods
jno
xchg
adc
xor
jmp
push
xchg
jecxz
js
jb
sbb
dec
push
cli
test
loop
adc
in
push
stos
int
push
pop
mov
inc
int
and
in
cmp
mull
imul
lahf
lock
pop
mov
stos
fimull
aas
adc
test
sbbb
add
sub
lea
lods
hlt
js
sbb
arpl
hlt
bnd
fs
adc
sub
int3
aad
inc
inc
sbb
xchg
popf
mov
loope
xchg
mov
cmp
out
jp
adc
xor
in
dec
pop
and
leave
aas
sub
icebp
imul
int
test
lods
jp
jle
insb
je
jb
add
icebp
sti
cli
outsl
in
dec
dec
js
fistpl
push
jbe
ret
jne
dec
jecxz
mov
rorb
xchg
xlat
ret
pusha
imul
mov
lret
out
jns
mov
xchg
loop
cmc
aad
inc
call
add
lea
lahf
jl
mov
adc
in
fwait
test
aas
out
movb
ret
and
mov
xchg
pop
scas
cmp
fidivrl
cmp
adc
mov
push
cmc
sub
outsb
pop
mov
push
sbb
mov
and
daa
jae
push
inc
lods
xchg
xchg
xorl
mov
or
cmp
aaa
and
dec
pop
or
mov
fcmovnbe
cltd
dec
daa
xchg
inc
mov
jbe
dec
sbb
out
sub
gs
fwait
pop
sbb
inc
pop
xchg
sbb
mov
leave
jmp
mov
test
addr16
addr16
dec
popl
adc
lea
mov
imul
jne
pop
outsb
jmp
or
jl
cmp
sub
daa
push
jecxz
adcb
outsl
fiaddl
and
cmpsl
imul
inc
cmc
in
sub
das
loope
sub
and
scas
xchg
sahf
cmp
outsl
je
pop
mov
mov
sbb
cmpsb
mov
adc
jnp
or
aam
les
mov
and
push
mov
lcall
mov
cld
or
jbe
ucomiss
adc
cmpb
xlat
test
sub
pop
mov
iret
pop
or
cmp
lock
or
jb
orb
movsb
sbb
add
shrl
jecxz
push
test
adc
pop
xor
into
sub
int3
xor
fnstenv
repnz
mov
mov
xor
roll
gs
andl
pop
pusha
adc
dec
cwtl
add
aam
ss
mov
inc
mov
mov
and
mov
out
xor
xor
jl
pop
push
xor
inc
int
mov
lcall
jae
push
adc
iret
hlt
out
or
inc
mul
fmull
xlat
inc
jl
adc
frstor
outsb
inc
sbb
sbb
stos
push
addl
cmpsl
sbb
mov
scas
inc
dec
das
push
add
sbb
scas
daa
xchg
sbbl
xor
inc
rcll
inc
add
out
xchg
mov
jne
lock
bound
xchg
out
aam
icebp
jmp
cmp
orl
addr16
int3
imul
out
push
int3
add
push
aas
lahf
or
mov
cmp
out
shll
hlt
je
jmp
xor
or
xchg
xlat
popa
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fstps
daa
mov
cmp
or
jp
xor
jmp
mov
mov
je
xchg
roll
cmc
mov
std
cltd
cli
mov
mov
jns
dec
pop
push
fdivl
or
aaa
mov
jns
cmp
ret
insl
rcrb
fnstcw
lea
out
mov
aad
mov
jne
fistpl
pusha
pop
xchg
fisubl
push
jo
bound
test
sbb
hlt
fcomps
add
xor
add
call
jno
loop
and
and
xchg
in
lea
xlat
jecxz
stos
add
mov
mov
mov
mov
xchg
add
lret
sub
pop
xor
pop
andl
add
addr16
jecxz
dec
xor
jmp
ja
ds
dec
xlat
or
sub
and
pop
in
aam
ds
mov
dec
adc
pop
icebp
push
push
xchg
mov
cmp
mov
push
fistps
push
mov
int3
mov
test
aas
jmp
jbe
xchg
data16
inc
or
inc
sar
movsl
dec
pop
mov
and
mull
xchg
movsb
lock
dec
dec
test
bound
jmp
cld
sub
movsl
xor
push
imul
push
insb
aad
mov
aas
mov
jecxz
lcall
testb
sahf
clc
inc
cmpsl
push
pop
mov
push
sub
xor
dec
mov
imul
mov
cmp
add
andl
xchg
inc
mov
mov
mov
pop
and
lahf
outsl
cmpsl
xor
jl
cltd
jg
insl
jmp
xorb
add
push
sub
mov
dec
in
negb
mov
je
mov
test
lock
sub
in
aad
xor
hlt
imul
pusha
mov
sti
mov
popf
outsl
cmpsl
jp
in
sbb
aaa
aam
lret
inc
xchg
pushf
int
sub
xor
in
icebp
lret
lret
push
dec
pop
popa
fistpll
pop
cmp
cmp
mov
cltd
mov
and
cmp
stos
dec
test
test
dec
fldt
pop
push
sub
lods
fdivl
pop
push
or
sub
sbb
addr16
movsb
push
shll
inc
mov
push
cmp
aad
mov
sub
mov
add
mov
out
or
or
in
outsl
sbb
lahf
pop
pop
jmp
notl
stos
rol
and
rorl
rorl
lea
jb
mov
inc
test
in
lods
adc
call
sub
sub
loope
and
popa
imulb
mov
dec
mov
fs
or
mov
push
and
imul
imul
cmp
nop
cld
or
add
stos
jmp
rdmsr
jo
shrb
adc
pop
and
inc
iret
in
jbe
mov
jge
out
cmpl
xchg
or
std
mov
fdivrs
pop
jno
add
fnstenv
jnp
jnp
dec
dec
out
push
jle
lahf
pop
rclb
movsl
xchg
std
test
mov
outsl
test
std
insl
shlb
test
pusha
xchg
clc
dec
sbb
std
lods
rolb
xchg
int
xchg
sahf
mov
cmpsl
hlt
jg
push
std
mov
adc
stos
inc
arpl
in
sarl
cwtl
adc
add
jle
cmpsb
push
pop
push
xchg
or
sbb
jb
es
loopne
sub
insb
lea
fwait
movsl
popf
xor
xchg
imul
jne
loopne
fnstcw
cld
add
xchg
jecxz
adc
xchg
sbb
rcrb
inc
test
xchg
or
cli
pop
mov
insl
and
mov
dec
mov
sub
stos
incl
repz
xor
ljmp
pop
out
mov
out
scas
cmpsl
sbb
xor
orl
mov
js
mov
xchg
decl
mov
ja
jl
xor
dec
orl
cld
pop
cltd
and
cmpsl
sbb
xchg
push
aam
sub
mov
decb
lods
inc
jmp
std
jle
sbb
sbb
cwtl
cmp
in
stos
imul
push
or
fstpl
outsb
xchg
lahf
sti
mov
lds
mov
lods
xor
test
test
jbe
adc
cwtl
sub
inc
cltd
jl
imulb
jmp
sahf
xor
or
iret
mov
sbb
fstl
sub
std
outsl
sub
pop
jnp
popf
fistpl
push
sbb
mov
xor
cmc
out
popa
sub
dec
jno
add
les
sbb
mov
mov
push
test
or
mov
std
jo
jae
or
mov
xlat
xor
adc
shrl
xor
add
bound
cltd
out
mov
add
add
inc
fldl
sti
mov
push
mov
jmp
or
mov
insb
dec
push
mov
jne
jne
inc
dec
loope
push
cltd
pop
cmp
cmp
pushf
int
int3
xchg
mov
add
addr16
addr16
pop
xchg
ja
pop
pop
jo
test
lock
repnz
add
clc
pop
push
mov
cmp
mov
inc
inc
mov
dec
and
icebp
push
pop
xor
hlt
xchg
test
jmp
stc
mov
ds
adc
jl
mov
bnd
rol
jns
lods
mov
adc
ss
daa
mov
adc
addr16
das
pop
cmpsb
in
add
adc
ret
scas
jae
sbb
jae
imull
cmp
stos
pop
mov
cmc
in
mov
sub
imul
and
mov
push
jp
fiaddl
fildll
lret
dec
or
loope
cld
sbb
stc
or
push
mov
fdiv
idivl
push
adc
scas
add
add
clc
push
lret
fisubrs
nop
pushl
xor
xchg
xchg
fistpll
add
cltd
inc
mov
inc
mov
pop
inc
mov
cmp
lods
into
dec
shll
dec
popf
iret
cltd
sti
sbb
enter
xchg
aad
mov
cmp
add
ja
mov
mov
adc
push
push
mov
pop
test
arpl
cmp
popa
xor
jp
mov
shlb
mov
mov
inc
inc
addr16
rorb
adc
mov
hlt
sbb
push
cmc
mov
movsb
std
or
or
sbb
sub
rclb
pop
push
mov
sub
aas
rcpps
aas
test
mov
pop
push
jne
js
pop
jae
bound
inc
outsl
fbstp
sbb
and
pop
ja
xor
out
int
fldl
scas
scas
or
mov
out
mov
dec
xor
pushl
add
pop
subl
inc
cli
add
push
ja
mov
cmp
fmuls
jl
push
cmp
xor
xchg
aad
test
mov
rorb
stos
jnp
mov
sbb
popw
mov
jbe
adc
rolb
std
add
out
jne
je
xchg
hlt
mov
xchg
and
lods
sbb
mov
xor
cmp
bswap
ss
mov
sbb
mull
push
mov
in
mov
nop
insl
enter
or
dec
test
xor
adc
adc
push
push
pop
fstps
adc
movsw
insb
inc
jmp
xchg
pushf
xchg
divb
push
dec
inc
adc
mov
sbb
jnp
xorb
jo
sbb
pop
fsubr
mov
cld
inc
sbb
cmp
cmc
lcall
mov
pop
sbb
pop
mov
xor
les
mov
push
mov
repz
inc
sbb
cwtl
mov
mov
dec
xchg
stos
and
scas
pop
scas
add
mov
dec
jae
or
sub
jge
cmp
fcoms
sbb
pop
adc
jno
inc
xchg
outsb
mov
cmp
lret
push
cs
cmpsb
je
inc
aas
fidivl
jae
pop
or
xor
mov
aas
mov
out
pop
int
fldcw
int3
test
xor
cmp
mov
and
adc
and
cmpsl
lods
jecxz
mov
cld
adc
loope
push
push
or
pop
jle
mov
push
dec
cmpsb
add
mov
inc
jb
test
filds
stc
inc
sbb
out
repnz
cmp
add
rolb
pop
fdivrl
lahf
or
push
inc
adc
es
lock
pop
cmc
inc
cmp
ds
adc
and
test
cmp
pop
inc
mov
add
sub
sbb
insb
iret
loop
call
push
or
push
aas
ret
pop
sub
test
adcb
mov
mov
xor
add
sar
out
push
roll
notb
cmc
call
pop
pusha
decl
jno
mov
aam
js
fcompl
in
aaa
lcall
repz
pop
fimuls
pavgw
divb
xor
jp
add
mov
lret
lcall
testb
lock
xor
pop
int3
sti
test
std
push
cmc
pop
int3
sbb
mov
and
mov
addr16
pusha
lcall
push
fwait
pop
add
cmp
test
dec
stos
push
mov
cmpsl
jg
mov
mov
pop
mov
xchg
and
cmc
pusha
in
push
pop
inc
je
or
jb
xchg
pop
cld
jbe
adc
inc
sbb
rcrb
rorb
pop
loop
mov
js
cmpsb
out
cmp
add
inc
push
sbb
xor
pop
mov
xor
xor
pusha
mov
xor
jle
das
push
jp
je
push
lods
inc
mov
scas
mov
cmp
arpl
fnstcw
ds
mov
mov
push
xchg
scas
or
sbb
je
jo
pusha
lods
sub
dec
repnz
ss
sbb
pop
arpl
xor
out
jp
dec
cmp
xor
stos
aaa
repnz
mov
pop
xlat
inc
xchg
mov
loopne
mov
lock
or
stc
inc
sub
cli
test
aam
cvtdq2ps
pop
in
or
push
jg
aad
lcall
out
fsts
lcall
add
dec
popf
addl
add
dec
cmc
add
outsl
ja
xchg
pop
bnd
aas
push
imul
or
push
movl
fsub
mov
out
mov
add
aas
xor
frstor
in
xchg
jns
xlat
xchg
shl
xor
jnp
in
or
sbb
xchg
inc
outsl
inc
mov
or
cmp
fmuls
add
mov
mov
jg
xchg
mov
ret
or
movsl
cli
sub
das
push
add
ja
pop
lahf
divb
sbb
out
cmpsl
sbb
jo
repnz
lods
dec
fidivrs
lahf
lods
pop
movsl
sti
xlat
imul
dec
aad
sahf
mov
out
rcl
flds
mov
insb
xor
lods
fsubr
cmpb
adc
mov
es
mov
out
xchg
mov
xlat
lahf
cmp
fnstenv
push
and
imul
mov
movsl
xor
sbb
add
lock
pop
jl
cmp
fdivr
jle
pop
in
xchg
jge
mov
inc
in
mov
and
mov
add
dec
lcall
shrl
and
push
fdivr
in
aaa
sahf
push
sbb
mov
movsb
jbe
pop
in
or
sarl
movsb
mov
outsl
in
movsl
xchg
fldt
xor
sub
out
filds
mov
xchg
iret
cli
jmp
in
mov
adcb
dec
je
cmp
cmp
pop
cmp
movsl
add
lcall
cs
mov
dec
cmp
lock
xlat
adc
mov
into
mov
lahf
jmp
mov
add
mov
rcll
mov
push
adc
movsb
loope
sub
xchg
out
jae
push
pop
pop
cmp
jno
sbb
ficoms
mov
ret
sub
orb
iret
bound
dec
mov
ret
out
inc
enter
popf
xchg
sub
imul
hlt
into
testb
xchg
pusha
scas
adc
adc
or
out
pop
andl
in
outsb
bnd
pop
and
adc
ja
jno
aam
xchg
sub
push
pop
nop
jl
add
fisubs
push
and
inc
push
mov
pop
jmp
fcoms
and
subb
pop
cmp
push
or
add
mov
mov
sub
add
pushf
xchg
xchg
mov
mov
pushf
or
push
add
push
repnz
hlt
mov
mov
shll
lcall
jae
insb
xor
push
lcall
lods
ja
pop
add
sahf
jae
or
stc
pop
cmp
adc
pop
dec
dec
inc
cli
xor
xchg
xchg
xor
adc
fbld
mov
outsl
xor
sbb
repz
push
jmp
add
iret
lods
test
cli
es
mov
lret
fistpl
lds
rorl
fprem
lods
test
mov
lods
and
movsl
jb
dec
push
push
mov
mov
adc
xchg
jno
jecxz
enter
cltd
mov
xlat
fmuls
ss
push
mov
ja
add
jle
and
inc
es
dec
adc
dec
xchg
jl
or
insb
push
scas
xor
das
inc
shlb
fwait
rclb
pop
lret
imul
hlt
rolb
adc
sbb
mov
arpl
xchg
fbld
cmp
cmp
shll
add
in
mov
and
test
int
sub
inc
cmpsb
aam
das
clc
adc
pop
or
bound
and
test
std
inc
and
dec
addl
push
add
jmp
sub
sub
movsb
lret
cmp
insb
fisttpl
dec
mulb
mov
dec
outsl
or
lcall
shlb
test
sahf
js
fidivs
or
or
xchg
xchg
add
pop
jne
add
call
cld
mov
out
xchg
pop
sbb
and
sti
ret
mov
xor
loopne
mov
pushf
into
cmp
add
fwait
ljmp
pop
xor
xor
mov
sub
inc
ret
jbe
xor
jecxz
andb
enter
stc
jo
scas
scas
mov
cmp
mov
test
adc
stos
sahf
hlt
inc
loop
call
out
ja
add
jle
pop
pop
outsl
fistl
lds
mov
cmp
cmp
mov
and
leave
add
push
scas
ret
inc
stos
in
sarb
xchg
xchg
enter
sbb
ss
and
in
jns
xchg
pop
js
int
lea
xor
into
popa
mov
mov
push
cmp
xchg
add
pushf
movsb
inc
fwait
std
and
push
sbb
and
pop
push
scas
cmpsb
jbe
push
jns
mov
adcl
push
stc
and
or
sahf
cld
mov
test
pop
repz
mov
jecxz
rorl
mov
push
imul
je
mov
ret
call
sbb
loop
arpl
imul
in
mov
or
popf
cmp
cmpsl
je
xchg
ffree
in
mov
pop
gs
or
jb
or
lret
lods
dec
or
popa
inc
arpl
xchg
and
xchg
add
lcall
in
in
adcl
pop
dec
subl
call
push
pop
lcallw
jb
push
fiaddl
add
jp
enter
mov
test
imul
fidivrs
jo
test
sahf
dec
lds
sbb
int3
jle
xor
subl
cld
jbe
sub
inc
in
fisubs
xchg
stc
movsb
popf
ret
dec
mov
fisttps
mov
into
aaa
mov
je
add
rolb
add
mov
fsubrs
jo
dec
les
push
jae
adc
rclb
xchg
pop
cmp
cld
andl
pop
ss
and
adc
stc
pop
push
jnp
cmpsb
jo
cmp
insb
jno
repz
jmp
adc
jbe
imul
push
jo
lods
pop
test
pop
dec
or
cld
and
xchg
inc
pop
or
mov
sbb
mov
sub
cmpsb
inc
inc
push
bound
pusha
cwtl
insb
out
push
jne
jbe
int3
in
outsb
sbb
adc
pop
ljmp
mov
pop
sub
mov
leave
jae
pop
mov
mov
sbb
mov
jg
sbb
mov
pop
filds
aas
xchg
jb
inc
inc
pushf
test
jo
adc
lods
add
cmp
enter
mov
sbb
imul
jecxz
mov
xor
pop
add
loopne
and
sbb
outsb
mov
jle
sub
jecxz
jg
sub
add
hlt
js
xor
je
int
xchg
lods
inc
js
loop
adc
add
and
leave
pop
mov
std
mov
xorl
ss
ret
cmp
xor
test
adc
push
repnz
pop
mov
rol
fwait
mov
flds
insl
push
or
xor
ljmp
and
jecxz
mov
xchg
sbb
adc
dec
scas
addb
mov
cmpsl
dec
rcl
mov
lods
dec
subb
add
jmp
pop
rcrl
icebp
fisubs
jbe
into
xchg
pop
fidivrs
outsl
mov
test
xchg
inc
jmp
add
js
push
lods
or
mov
lcall
popf
lock
dec
mov
std
negb
bound
das
cli
inc
test
orl
call
lock
pushf
pop
xchg
mov
dec
ja
popf
arpl
cld
mov
pushf
hlt
movsl
mov
daa
lea
jo
aas
sub
bound
mov
add
in
push
mov
cwtl
pop
rorb
mull
lods
aad
repz
leave
dec
and
in
push
ja
mov
mov
test
arpl
stc
insl
pop
mov
xor
push
addb
sub
mov
mov
lock
cmp
and
mov
mov
push
fsubl
push
push
movsb
pop
mov
xor
xchg
mov
mov
daa
lea
insb
test
dec
xchg
cmp
mov
je
sbbl
push
fs
jecxz
repnz
test
sub
mov
imul
movb
push
jle
add
jle
mov
ficoms
cs
out
adc
stc
and
sbb
push
lret
shrl
call
sbb
sbb
mov
xchg
inc
mov
sub
rcr
adc
jb
cmp
add
pop
add
insl
mov
mov
gs
dec
jo
in
pop
mov
fwait
mov
sbb
sub
addb
inc
daa
mov
jl
push
pop
pop
xor
cmp
stos
mov
aaa
pop
xchg
pop
js
adc
clc
adc
leave
sub
xchg
jge
pop
xchg
mov
push
nop
pop
adc
adc
xor
xchg
stos
mov
push
sarb
pop
or
dec
add
adc
fnsave
xlat
pushf
stos
test
xor
xchg
jo
addl
fcomi
nop
pop
cmp
jnp
mov
mov
sbbl
adc
es
inc
add
std
push
movl
ret
xor
jp
mov
sti
stos
jo
and
mov
inc
push
xchg
push
and
xor
add
jl
aam
cld
dec
xor
cmp
xchg
jg
js
mov
pop
nop
pop
xor
pop
shlb
in
push
pop
rolb
jno
push
cmpsb
mov
mov
push
test
daa
mov
cmp
push
loopne
aaa
pusha
loop
mov
sar
mov
clc
xchg
push
imul
mov
daa
stos
test
cmp
mov
aas
out
popf
imul
inc
cmc
add
dec
or
shl
insl
shr
lahf
aad
adc
shl
jge
std
cmc
pop
sbbl
and
fdivp
mov
pop
int
cld
repnz
mov
imul
lock
invd
shlb
adc
sbb
mov
fwait
jl
pop
cmp
mov
in
and
sahf
aaa
das
addl
and
mov
lds
fbstp
and
cmpsl
lods
lods
stc
jns
inc
sub
push
pop
xchg
popf
rcll
xor
push
mov
pop
adc
push
enter
sub
sarb
sub
lock
in
and
in
out
int
push
scas
xchg
xchg
test
push
cld
sub
out
cwtl
jno
fs
xchg
lds
popf
xor
sti
out
andl
push
stos
mov
mov
sub
xorb
test
fisubs
stc
das
movsl
loop
xor
stos
push
test
das
in
mov
jmp
hlt
push
out
sahf
div
aad
fs
mov
aaa
inc
cmp
push
mov
mov
rol
mov
xor
mov
xchg
dec
and
push
mov
pop
cmp
jae
cmp
cltd
ret
pop
dec
mov
loopne
sbb
into
rolb
fstpt
push
mov
push
std
ds
push
inc
icebp
add
mov
mov
add
and
inc
jge
lds
jbe
shll
loop
out
add
call
jmp
loope
xchg
or
and
cmp
es
mov
jl
push
out
or
xlat
and
jb
mov
mov
sub
pop
xchg
push
push
ja
cmp
push
jp
hlt
dec
insb
je
xchg
stos
test
sub
lret
fwait
mov
in
dec
shr
xor
stos
pop
dec
dec
push
in
push
xchg
jg
xor
mov
int
jl
repz
sarl
scas
push
push
push
cmp
adc
mov
adc
adcl
in
stos
jnp
mov
movsl
out
test
mov
scas
outsb
loope
aaa
adc
sub
sub
cld
push
or
sub
scas
add
or
mov
or
and
icebp
sti
cld
lods
mov
gs
mov
push
push
xchg
lods
sub
sub
shlb
add
adc
sub
jo
or
jns
mov
push
mov
jno
test
cltd
repnz
pop
mov
adc
mov
out
sub
mov
mov
out
dec
loop
jmp
and
mov
adc
call
jl
pop
or
imul
in
das
negl
mov
jp
pop
or
dec
dec
push
stos
inc
or
or
mov
out
mov
insb
inc
lret
inc
ret
je
les
fs
pop
dec
lods
popa
push
loope
xchg
bound
popa
arpl
repnz
mov
aas
repnz
inc
lret
lock
das
mov
sbb
or
imul
pop
clc
inc
out
adc
sarl
aam
jmp
in
and
sbb
jno
mov
lods
fsubr
rclb
inc
scas
sbb
jge
insb
test
adc
repnz
out
hlt
jne,pt
push
leave
fcmovbe
loope
inc
and
mov
mov
jno
sbb
sub
sbb
xor
jg
cmpsb
mov
jno
push
lds
movsl
jae
mov
adc
movsl
jae
imul
iret
mov
xor
es
sub
push
push
mov
xchg
add
add
imul
stos
mov
inc
ja
pop
sub
jmp
jp
pop
mov
cli
or
icebp
pop
es
in
sbb
xchg
mov
cld
and
imul
enter
pop
mov
jg
pop
enter
in
sub
leave
pop
pop
mov
pop
clc
data16
loopne
out
je
lea
pop
cmpsl
in
sbb
jnp
xor
jae
arpl
je
jae
call
mul
cmp
clc
xor
cmp
jne
inc
or
shl
dec
lcall
sahf
xchg
or
sub
sqrtps
sbb
inc
ja
fists
sbb
push
fadds
jmp
and
xlat
jle
dec
xchg
adc
xor
insl
aaa
gs
pop
add
mov
fdivrl
test
mov
lds
adc
into
out
mov
or
mov
push
mov
jne
test
cs
out
leave
out
push
loope
sbb
fwait
xor
push
aam
inc
mov
gs
test
imul
or
cli
mov
xor
test
jge
scas
jae
fdivrl
cli
lds
mov
jmp
mov
lock
mov
jp
xchg
movsb
dec
push
cs
and
jno
sub
push
shll
cld
or
in
mov
push
gs
gs
sub
push
outsl
inc
jge
pop
negl
data16
mov
xchg
insb
add
mov
lret
mov
test
ljmp
push
rolb
jle
push
lahf
test
es
outsb
js
cmp
std
add
xchg
rol
imul
imul
inc
aaa
adc
insl
outsb
add
pop
xor
mov
jl
push
xor
dec
mov
daa
jb
push
out
fs
hlt
imul
std
mov
xchg
roll
jp
dec
jnp
sub
nop/reserved
pop
cs
mov
cmp
sub
into
aad
mov
sahf
lods
in
fs
cmp
jb
lahf
in
divps
xchg
fs
sub
dec
sub
xchg
jge
push
jb
andl
xchg
cmp
push
push
inc
mov
mov
imul
rcrb
ds
out
popa
and
pop
inc
ret
out
fiaddl
cmp
or
fsubs
xchg
mov
and
in
inc
xchg
lods
mov
ja
test
push
jns
jns
outsl
hlt
push
push
out
jl
mov
xchg
call
xchg
push
lds
fidivs
loopne
cmp
mov
es
in
push
or
add
movntps
test
mov
test
fisttps
adc
xor
gs
adc
add
adc
jge
pop
arpl
das
imul
iret
addr16
dec
test
push
sub
push
mov
xchg
push
imul
push
push
inc
mov
mov
jbe
xchg
lret
mov
lret
sbb
mov
sub
fsubr
sub
cmp
cltd
sbb
add
cmp
ret
xor
jb
xchg
adc
hlt
jle
out
or
inc
test
mov
and
jp
insl
pop
pop
js
ja
pop
rcrl
movsl
jae
movsb
fldenv
loope
cs
inc
test
inc
sub
cli
mov
or
cltd
mov
xor
mov
xchg
mov
pop
outsb
out
popa
fs
push
hlt
in
outsb
jge
les
xchg
push
jns
adc
mov
inc
aas
icebp
je
xchg
aad
sti
shlb
xchg
pop
mov
fisubs
adc
repnz
sbb
mov
or
test
push
jge
mov
jecxz
sub
insb
cs
add
pop
push
sub
adc
popf
imul
jb
dec
loope
jmp
cli
ljmp
cmp
pop
std
call
or
loopne
repz
ret
insl
sbb
test
add
mov
inc
js
movsl
stc
lds
jmp
xchg
inc
jnp
clc
shlb
push
test
shlb
xchg
push
test
cld
sbb
daa
mov
mov
and
pop
sub
jp
mov
push
mov
out
ret
push
iret
mov
xchg
pop
mov
mov
fdiv
fldl
adc
adc
push
sbb
lea
jmp
pop
and
jo
ret
fs
int
mov
movsb
add
inc
fldl
test
pusha
fidivrl
test
insl
pushf
out
xchg
outsb
push
inc
call
loope
cltd
inc
and
test
sbb
pop
push
cmp
inc
dec
cltd
or
push
addr16
jae
push
pop
jge
int3
add
or
test
jne
xchg
leave
inc
push
aas
leave
mov
stos
sbb
in
jmp
data16
idivl
add
sbb
aas
leave
decl
fnstenv
jae
mov
je
cmc
iret
sub
dec
mov
adc
xchg
lret
jg
pop
cmp
lcall
add
jbe
loopne
adc
xchg
nop
dec
xchg
dec
sbbl
pop
call
cmp
pop
lea
cmc
std
loope
jge
xor
jae
xlat
negb
bound
cmp
cltd
mov
mov
mov
nop
int3
pop
sbb
pop
mov
sbb
mov
mov
addr16
mov
icebp
and
or
leave
push
stos
mov
sti
js
cltd
pop
or
lcall
mov
mov
jmp
sahf
jge
xor
int
push
push
push
in
ja
or
gs
aam
stc
and
out
push
jno
cmpsb
in
out
icebp
inc
or
ljmp
adc
sahf
sahf
adc
dec
add
rolb
cmp
aas
mov
cmp
ror
add
mov
movsb
inc
testb
pop
cmp
push
into
and
push
imul
insl
pop
add
push
mov
fs
mov
dec
xchg
pop
xchg
and
rorl
cmp
pop
xchg
dec
and
mov
sub
push
cwtl
int
stos
frstor
cmp
xor
cwtl
fcomps
hlt
cmpsb
dec
sub
pop
js
in
lret
cmp
jp
mov
sub
insl
mov
shll
adc
insl
ja
mov
js
mov
popf
sub
inc
in
rclb
movsb
inc
imul
gs
ret
or
mov
or
adc
rorb
stc
aam
jo
nop
add
repz
or
pop
add
das
arpl
add
pop
inc
jl
mov
inc
fnstsw
xor
in
xchg
jns
insl
mov
and
mov
enter
pop
push
pop
add
int
out
push
jmp
pop
mov
cmp
loopne
push
inc
int
jmp
loop
xchg
out
int3
jecxz
xor
cmpl
sbb
pusha
sbb
les
xchg
push
loope
push
outsl
roll
iret
in
test
sbb
jecxz
insl
lds
xor
leave
out
cmp
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
mov
sbb
jp
pop
jp
pop
hlt
test
leave
sti
jo
sbb
sub
jle
xchg
icebp
scas
add
add
loope
sbb
nop
lret
testb
push
das
mulb
loop
pushf
or
jne
cs
lea
cmp
adc
mov
jo
inc
or
xlat
scas
call
in
add
test
dec
sbb
mov
int3
mov
cmp
clc
loop
out
mov
ja
jl
int
jb
dec
roll
ret
imul
pusha
loopne
mov
or
cld
fildll
stos
xchg
jle
sub
clc
inc
lcall
and
push
xor
loopne
inc
out
mov
pop
or
arpl
xor
gs
mov
jae
dec
jle
lods
iret
mov
push
pop
dec
adc
xchg
clc
mov
pop
clc
xor
inc
inc
hlt
das
call
pusha
pop
rorl
shlb
inc
mov
push
push
gs
xor
mov
jmp
movsl
shll
daa
outsb
mov
inc
cmpsl
in
mov
jb
testl
std
or
xchg
sub
outsb
imul
jge
rcrl
pop
mov
xchg
lea
cmp
popa
push
pop
shll
dec
cmp
loop
xor
and
sbb
andps
xchg
inc
fstpl
push
cwtl
jnp
or
and
pop
lret
fidivl
icebp
inc
xchg
test
adc
mov
sub
ret
adc
sub
lfs
pushl
push
add
insl
ss
rclb
sbb
imul
iret
mov
jns
in
pop
jnp
cmc
dec
dec
scas
dec
push
cmp
mov
or
popa
repnz
rclb
fmul
cmp
mov
xor
test
ret
stos
scas
sahf
and
jge
mov
in
cmp
sti
push
mov
lods
mov
xchg
push
or
push
and
repz
scas
adc
push
or
add
rorl
icebp
inc
int3
and
loopne
insb
cmpsl
pop
or
out
or
cltd
fldcw
jmp
and
imull
lea
mov
cmc
sbb
xchg
outsl
pop
cmp
sbb
imul
jae
add
testl
jno
add
fcoms
inc
jp
movsl
mov
xor
decb
test
inc
jle
and
in
mov
adc
dec
inc
dec
leave
mov
inc
daa
add
adc
inc
push
xor
xchg
and
pop
loope
mov
sahf
xchg
daa
loope
testl
pop
das
out
bound
out
jl
inc
ss
and
mov
dec
jno
mov
inc
pop
bound
fwait
xor
cltd
xchg
jne
loop
mov
xlat
push
mov
adcl
push
movsl
ret
jbe
dec
test
mov
pop
mov
adc
inc
push
orl
outsb
in
int3
mov
push
test
mov
xchg
pminub
mov
push
cmp
leave
pop
les
push
dec
cli
pop
jp
ret
call
mov
ja
add
int3
hlt
cli
dec
movsb
daa
stc
xor
call
and
repnz
mov
int3
sub
or
cld
bound
dec
add
call
aad
jnp
sbb
andb
mov
push
mov
jecxz
sub
test
aam
lods
roll
rclb
inc
sub
std
scas
cld
mov
popa
mov
lret
gs
lea
mov
imul
mov
xchg
jo
and
xchg
lods
dec
mov
fmul
push
inc
dec
inc
mov
cld
std
inc
add
xor
dec
aam
imul
xchg
enter
ja
sahf
cmp
mov
nop
inc
sbb
out
nop
add
pop
lret
adc
adc
add
pop
cmp
fdivs
sub
jmp
sahf
pop
jbe
and
insl
mov
std
cwtl
inc
cwtl
cmp
fcomps
cmc
inc
push
aas
dec
and
xchg
dec
mov
or
lods
mov
sub
sub
xchg
cmp
cwtl
adc
test
cmp
lret
sub
dec
xchg
push
add
push
xor
in
jnp
clc
jo
unpcklps
jle
mov
std
ds
add
adc
inc
xor
jnp
inc
gs
in
cmpsb
xchg
fdivr
or
add
mov
xlat
loop
aaa
ss
stos
sub
inc
loop
and
je
xlat
xchg
push
insl
pop
add
sbb
adc
in
dec
sub
aaa
lods
movsb
push
or
sar
inc
adc
arpl
std
test
sbb
sbb
insl
daa
mov
lds
mov
pop
nop
dec
jmp
fwait
pushf
add
mov
jmp
ja
pop
es
adc
icebp
adc
cld
cmpsb
mov
or
or
jb
scas
or
pop
mov
clc
hlt
fld
mov
xor
scas
adc
dec
lret
ljmp
jae
sub
lret
xor
js
xor
pop
push
loope
and
insl
ja
lahf
shll
pop
sbb
or
aaa
mov
loop
stos
repz
cmp
insl
pop
out
or
faddl
mov
pop
insl
xchg
incb
push
push
sqrtps
adc
iret
popf
loope
roll
dec
movsl
gs
cmpsb
movsl
sub
mov
adc
mov
and
in
jo
enter
xchg
lds
push
adc
insb
ja
mov
stos
mov
rcll
mov
jg
cmpsl
shlb
test
add
aad
push
dec
js
mov
mov
outsl
movsb
and
fbstp
icebp
dec
and
int
popf
mov
cld
pop
xor
dec
jb
cmp
inc
mov
cmp
das
and
loope
loop
movsl
not
jo
and
cli
icebp
test
int
ja
lock
leave
fisubrs
inc
push
loopne
pop
jmp
mov
push
scas
hlt
js
hlt
dec
outsl
out
jae
insb
sbb
andl
push
es
dec
mov
nop
dec
ja
lock
mov
sbb
or
or
loopne
and
rcrl
subb
jns
mov
pop
aaa
in
mov
push
mov
loop
push
pop
push
js
hlt
mov
cmpsl
mov
jo
push
push
mov
cmpsl
std
daa
test
ljmp
lea
inc
les
jge
and
sarl
sbb
lods
jle
add
pop
and
sbb
jp
stc
push
inc
test
iret
sbbb
mov
frstor
xchg
sub
jl
inc
xor
add
pusha
jne
jle,pt
es
sbb
jnp
and
ss
pop
cmpsl
test
rcrl
out
int3
leave
subb
cmp
xorb
rolb
push
cmpsl
sbb
aad
push
fsubr
xchg
loope
jl
mov
xor
stc
jae
sbb
bound
lret
cmp
mov
mov
inc
jae
xchg
xchg
stos
xor
iret
xor
out
jnp
push
push
lret
pop
pusha
icebp
pushf
mov
pushf
mov
adc
pop
fldcw
aaa
pop
jecxz
loope
mov
call
icebp
xor
or
pop
test
inc
scas
mov
or
mov
sub
test
pusha
aas
pop
mov
rolb
in
xchg
push
orl
dec
mov
mov
inc
popa
in
push
xor
xor
es
add
dec
and
adc
insb
or
fdivrp
or
mov
addr16
jo
xor
leave
addb
jbe
iret
jnp
scas
and
bound
pop
shrl
jnp
les
pop
lret
dec
pusha
fcompl
sbb
add
push
jns
clc
xchg
push
dec
subb
inc
inc
mov
stos
mov
iret
fsubrp
shlb
sub
mov
mov
adc
sub
adc
xchg
xchg
push
movsl
pusha
cmp
jnp
xor
inc
frstor
sbb
mov
in
out
adc
push
lock
addb
shlb
bound
popl
pop
adc
fistl
cmpsl
fsubs
aam
add
arpl
mov
pop
pop
enter
ss
cmc
fdivrl
js
test
add
dec
fbld
adcb
push
pushf
daa
xor
fs
daa
cmpsl
js
loopne
and
es
pop
jo
push
xor
lcall
or
xchg
adc
pop
cwtl
icebp
fildll
insb
push
gs
aad
jns
jecxz
jne
cli
test
fsubrl
movsl
sbb
and
jg
fisubs
jb
jnp
call
pop
mov
xchg
and
mov
daa
bound
xchg
ss
movsl
ficoms
iret
pop
jp
cwtl
lret
xlat
inc
dec
int
inc
cmp
mov
outsl
stc
pop
sub
jmp
xor
aam
fnsave
adc
push
sub
notl
push
gs
mov
in
out
movsl
jl
or
push
pop
add
push
loope
push
popf
repz
imul
sbb
stc
les
push
cmpsl
repz
cli
aas
mov
push
lret
mov
es
and
popa
cmp
xor
pop
mov
stos
lret
cmp
adc
in
scas
mov
pop
popa
rorb
jns
adc
imul
mov
daa
repz
dec
inc
pop
mov
add
fsubrp
push
push
fistpll
jge
mov
jb
mov
jae
jle
insb
imul
cmp
mov
xchg
jns
jnp
imul
mov
cmpsl
sub
sarb
icebp
inc
mov
sbb
xchg
icebp
aaa
push
rorb
jns
sbb
test
movsl
lahf
add
ds
mov
jg
inc
into
fs
les
flds
mov
xor
push
subb
or
adc
stos
cltd
and
push
mov
std
xchg
cmpsl
mov
insl
popa
jg
out
sub
cmp
xor
mov
and
sub
nop
ficompl
push
es
scas
jb
add
shlb
cmpsb
sub
es
jo
jno
push
pop
aaa
add
pmaxsw
jo
imul
or
repnz
sub
fmul
das
cmp
sar
sub
gs
dec
add
imul
inc
pushl
ss
xchg
adc
jae
sti
mov
cmpsl
repz
push
out
sub
sbb
fbld
cmp
ljmp
stos
stos
mov
jnp
inc
roll
push
dec
mov
dec
mov
lea
pop
adc
add
stos
fisubrl
push
mov
mov
push
xor
sbb
outsb
and
iret
fucomp
test
inc
cwtl
fisttpll
dec
adc
xlat
or
push
dec
stos
push
pop
into
add
or
push
scas
mov
xchg
push
into
scas
pop
pop
es
or
sub
roll
adc
push
stc
fs
inc
mov
pop
jnp
cmpsl
push
sarb
sub
movsb
out
mov
or
mov
pop
iret
test
sti
mov
xchg
push
je
fs
push
fwait
jl
sti
add
and
hlt
out
mov
ljmp
dec
inc
lods
in
xor
cmpsl
cwtl
xchg
in
lods
dec
mov
ret
xor
xchg
pusha
push
iret
movsb
cmpsb
ffree
ljmp
sarb
xchg
and
jae
imul
xor
cmc
xchg
jbe
adc
ret
int
push
lods
xor
xchg
cmpsb
xor
addr16
push
xor
xor
jae
movl
inc
sub
xor
je
sub
mov
xchg
adc
sub
cmp
jne
int
pop
clc
mov
fcomip
mov
cmc
hlt
mov
and
shl
xor
or
hlt
mov
jmp
mov
xor
pop
xchg
adc
pushw
add
dec
inc
cmp
mov
rcr
out
xlat
dec
stos
sbb
stc
inc
push
dec
push
cltd
sbb
pusha
inc
fcmovne
push
add
mov
jo
bound
fucomip
ljmp
lods
pop
pop
dec
xlat
mov
push
sar
pusha
mov
xchg
and
lods
push
pop
jb
adc
dec
or
xchg
stos
dec
pop
push
cs
outsl
sub
push
jp
subl
jmp
adc
xor
stc
popf
xor
pop
outsb
aaa
jmp
enter
mov
arpl
pop
addr16
cmp
xorb
xchg
gs
jl
icebp
mov
rcrb
shl
cmpsb
mov
dec
mov
jge
sub
pop
push
imul
lea
data16
in
pop
loopne
sar
sbb
test
insb
cwtl
sbb
inc
xchg
fnstsw
sbb
mov
mov
bound
jae
sbb
pushf
and
aaa
std
inc
sbb
lret
cld
addl
cmpsb
pop
mov
jmp
pop
out
jo
xor
testb
aam
imul
adc
popf
repnz
cmp
push
xchg
adc
adc
add
push
shlb
out
fwait
inc
ror
mov
ret
stc
je
fisttpl
out
dec
fsts
sarl
inc
xchg
pop
mov
inc
std
sbb
leave
sbb
inc
cs
sbb
fisttpl
cmpsb
lock
mov
shlb
ffree
jbe
popf
movsb
adc
push
xchg
pop
lahf
negb
dec
aad
testl
pop
jle
repnz
pop
mov
cmp
push
mov
inc
in
int
roll
pop
es
ret
push
mov
int
cmpb
jns
test
sub
mov
pusha
sub
lret
cwtl
fnstcw
das
jnp
fsin
in
add
pop
out
jo
push
in
repz
push
lcall
and
push
pop
xchg
cmpsl
inc
outsb
icebp
in
fdiv
jp
loop
stos
fsubrl
daa
fisttps
shrb
mov
test
mov
xorb
int3
test
add
inc
dec
mov
xchg
stos
pop
es
jecxz
arpl
popf
lret
enter
inc
xchg
pushf
push
inc
xchg
mov
iret
jecxz
cmp
xor
mov
push
sti
push
push
repz
or
inc
cmp
testl
adc
cmpsl
xor
hlt
push
aaa
movsl
mov
lret
jecxz
push
cmp
lret
mov
push
sti
pop
mov
jo
xor
mov
insb
pop
jb
sbb
mov
mov
lret
lds
loopne
mov
flds
fld
mov
out
insb
cld
cmp
out
xor
push
ds
rorl
or
pop
cmp
repnz
adcb
test
psrad
fldl
and
aad
and
mov
inc
pop
xlat
mov
push
and
jae
scas
cli
cmp
in
daa
addr16
add
and
pop
popf
enter
push
pusha
js
inc
xchg
call
xchg
sbb
insb
sub
inc
jmp
in
xchg
mov
ret
aas
mov
add
clc
push
push
cmp
inc
rol
mov
inc
call
shlb
aas
xchg
adc
push
sti
adc
push
das
sbb
repz
fcmovnb
mov
test
xchg
idivl
ljmp
push
aad
popa
inc
es
xchg
inc
popa
aam
push
mov
and
insb
add
jbe
mov
gs
pop
mov
xor
ljmp
and
pop
roll
je
pop
inc
or
sub
fsub
xchg
inc
ret
cmpsl
add
out
cmp
cli
inc
sarl
jecxz
int
jnp
cmp
jg
jg
xor
pop
pop
inc
je
js
and
sbb
loopne
imul
cmp
adc
mov
sbb
in
lock
scas
int3
jbe
sbb
xor
shll
push
rolb
lds
mov
ret
cmp
std
adc
mov
dec
jne
outsb
pop
dec
and
das
sbb
and
pop
les
and
jbe
sub
sti
mov
outsl
out
test
xor
push
lock
inc
stos
addr16
pop
lahf
out
add
push
mov
xor
xlat
cmpsb
mov
das
mov
stos
int
fbstp
fdivr
mov
mov
dec
test
gs
add
push
fdivp
add
out
pop
in
xchg
repz
or
or
and
fucomi
test
mov
and
mov
out
xchg
and
test
scas
cltd
mov
mov
imul
or
roll
je
adc
mov
icebp
fildl
sub
rcll
leave
cmpsb
jp
pop
in
scas
xchg
shlb
jae
shlb
xchg
mov
jb
mov
sub
mov
jae
lods
popa
aas
mov
push
es
lcall
out
mov
lock
leave
pop
adc
call
lret
push
dec
jb
and
les
das
push
xchg
jp
lods
decb
or
cmpsl
fucomp
xchg
sub
inc
adc
add
adc
hlt
fs
add
ret
call
pop
pop
pop
inc
mov
clc
ficoms
rep
jne
mov
cs
daa
add
icebp
orb
sbb
push
mov
sti
mov
psllq
jns
fs
xor
popf
insl
scas
out
movsl
adc
es
xchg
fcmovu
mov
lods
out
std
sbb
cmp
cmpsb
xor
fisttpl
test
bound
dec
fsubr
inc
jno
sub
push
xor
inc
sub
sub
pop
aam
cmp
incl
rolb
jae
mov
or
loop
mov
jle
pop
dec
or
sahf
cli
fsts
cli
das
pop
mov
sbb
mov
sti
testb
pop
mov
out
mov
mov
xor
lods
cmp
sub
xchg
cmp
jne
ret
sub
mov
daa
int
sub
pop
jge
inc
mov
gs
pushf
xchg
into
mov
mov
and
xlat
push
xor
fcomps
mov
pop
mov
pop
repz
lret
movsb
cwtl
sub
sbb
or
sbb
xor
roll
imul
adc
cltd
orl
xor
xchg
aad
jmp
out
repz
dec
adc
pop
mov
pop
mov
dec
shll
outsb
push
shlb
shrl
gs
addr16
rep
jle
mov
xor
sub
push
ret
aaa
mov
dec
ret
frstor
test
xchg
test
push
pop
fimuls
adc
lahf
push
jmp
repnz
int
movsb
es
das
or
aam
and
and
loop
dec
push
push
add
push
lret
incb
mov
test
push
xor
insb
mov
push
iret
sahf
lock
push
cmc
pop
mov
cmp
mov
popa
cmp
xor
mov
xchg
test
iret
dec
fcoml
jne
push
jbe
lods
rcll
scas
jecxz
fdivrs
call
xor
aas
adc
jmp
cltd
scas
add
pop
int
jo
lock
lock
mov
es
xchg
cmp
faddl
outsb
outsb
insl
mov
lock
xor
add
mov
ret
xlat
test
adc
icebp
mov
aad
sub
addl
jmp
push
sbb
xor
arpl
insb
sbb
pop
mov
into
jns
jno
pop
xor
dec
ljmp
outsl
fldcw
xstore-rng
cmpsl
inc
inc
sub
sub
enter
mov
ljmp
xchg
push
js
std
sub
pop
mov
popf
iret
pop
xchg
lret
pop
fs
inc
xlat
jae
mov
adc
out
fcomps
jg
test
push
cmpsb
scas
push
fildl
add
int3
mov
icebp
stos
xchg
mov
cmp
push
push
and
test
mov
adc
les
cltd
shll
or
insb
dec
clc
mov
mov
movsl
inc
lods
pop
div
adc
lds
std
imul
pop
lods
pop
jge
pop
xchg
pop
pop
push
mov
ljmp
jb
mov
mov
xchg
xchg
mov
std
rclb
fcomip
adc
in
popf
add
and
incl
mov
aam
lock
adc
push
or
lret
push
or
cmc
lret
repz
inc
sarb
xchg
mov
dec
shll
and
fimull
push
push
jp
xchg
inc
bound
pop
arpl
out
das
pop
movsl
aam
cld
notb
pop
lea
sbb
ds
inc
add
mov
ds
and
pop
hlt
inc
addr16
shll
iret
pop
in
shlb
test
lret
dec
les
mov
pop
lret
loopne
pushf
sahf
insb
mov
in
inc
loopne
decb
aam
cltd
mov
into
mov
inc
mov
xlat
add
adc
xchg
jmp
sarb
sbb
mov
pop
aam
loope
hlt
cmpsl
ljmp
into
inc
xlat
pop
pop
pushf
sub
lahf
push
jecxz
mov
xor
jle
xchg
test
shll
jl
add
daa
data16
out
xor
in
mov
mov
incl
adc
dec
push
ja
repnz
stos
dec
in
lret
jns
in
rclb
cmp
loopne
inc
mov
leave
pop
sub
mov
mov
and
fstpl
mov
loopne
sub
sbb
int3
add
xchg
mov
pop
sub
mov
mov
jb
pop
lods
sub
je
scas
outsb
or
je
nop
test
cmpsl
pop
push
or
cmpsl
adc
ret
ret
dec
out
or
pop
fwait
scas
mov
cmpsl
push
adc
mov
or
shlb
rolb
sbb
pop
call
lock
mov
sti
ja
rcrb
loope
mov
push
and
cmp
imulb
adc
aad
nop
adc
sub
lret
cmc
sbb
sbb
pop
or
scas
add
outsb
push
andl
insl
cmpsb
test
or
bound
cmpsl
aaa
adc
test
aaa
cmp
dec
push
and
in
pushf
std
jp
ret
andb
fsubrp
shll
xchg
and
sub
xchg
xchg
dec
xchg
pop
mov
test
stos
adc
inc
pusha
verr
out
inc
mov
xlat
lret
xor
movl
jge
adc
cmp
add
pushf
pop
je
fmulp
loop
shll
addr16
jg
gs
mov
lea
or
pop
arpl
loop,pt
cmpl
mov
dec
push
lods
das
enter
pop
cmp
fistl
inc
subl
or
inc
sbb
mov
in
mov
imul
int3
fwait
test
mov
and
das
pushf
push
xchg
loopne
in
jno
sub
test
shlb
aaa
lret
fiadds
or
pop
cmp
sbb
shl
add
and
xor
repz
dec
imul
outsl
gs
mov
push
addb
push
and
icebp
pop
xchg
fnstenv
hlt
ljmp
in
leave
sbb
xlat
add
lods
cmp
sti
inc
jp
fistpll
pushf
cmp
imul
aaa
mov
movl
scas
in
xor
mov
jmp
leave
jne
or
dec
lret
xchg
stc
dec
mov
dec
xchg
test
movsl
sbb
push
adc
int
mov
or
push
adc
dec
push
pushf
pop
pop
mov
outsl
nop
xchg
sahf
icebp
sub
fistpl
ficoml
dec
loope
add
sbb
icebp
push
lret
lcall
sub
test
adc
mov
ror
jb
inc
dec
add
and
imull
cmp
dec
mov
xchg
dec
dec
scas
xorl
and
xor
aas
inc
rol
cmp
repz
movsl
repz
jnp
adc
dec
add
clc
adc
rol
pop
mov
adc
lea
add
mov
shr
mov
dec
in
mov
addr16
push
push
xlat
add
mov
in
adc
inc
cmpsb
jecxz
stos
clc
iret
mov
cli
idivb
jl
sar
outsb
int3
js
lahf
push
loop
outsl
xor
popf
inc
addr16
jbe
stos
pop
pusha
jmp
xchg
fst
repz
popf
mov
notb
or
or
jbe
cwtl
jecxz
sub
inc
xchg
test
jle
rcrb
out
das
or
mov
mov
jo
add
adc
repnz
rolb
inc
scas
or
dec
popa
loope
fsubrp
aad
call
or
adc
ret
fnsetpm(287
xlat
mov
movsb
pop
test
cli
or
andb
popa
add
sbb
dec
les
lods
loop
loop
xchg
cmp
mov
fcoml
inc
jb
js
ds
xchg
lods
bound
ljmp
popf
pop
cmpsl
inc
pop
push
je
iret
xchg
cwtl
xor
pop
in
test
pop
lahf
xor
adc
mov
mov
test
jp
jbe
repnz
jne
sahf
jno
xchg
add
out
gs
push
ljmp
cmp
scas
ss
icebp
mov
das
lock
pop
add
cld
pop
mov
icebp
in
xor
xor
mov
gs
push
push
mov
jge
hlt
pusha
xchg
mov
or
push
icebp
inc
fsubs
ret
push
fs
add
xchg
xchg
jno
xchg
or
xchg
lods
pop
pop
push
call
mov
data16
dec
jg
aad
xchg
mov
mov
xchg
sbbb
pop
fs
fisubrl
scas
stc
and
cli
cld
daa
inc
iret
pop
add
out
jg
fstps
mov
adcl
dec
sbb
int3
xchg
popf
xchg
add
sub
adc
mov
sub
add
xchg
jae
xchg
nop
cld
mov
ret
jle
movsl
aaa
stos
inc
out
add
dec
fidivs
mov
pop
adc
mov
or
jno
cmpsl
fidivrl
cmp
movsb
add
pop
and
ss
xchg
jmp
cwtl
cs
xchg
xchg
inc
adc
push
jae
cmp
aas
das
ret
push
incb
mov
dec
sub
mov
out
or
or
and
into
add
jmp
add
dec
dec
lret
adc
addr16
dec
jns
dec
inc
cwtl
xchg
xchg
pop
sarl
mov
pop
push
add
inc
xor
outsl
scas
mov
xchg
fcomps
pop
outsl
mov
inc
cmp
pop
test
fdivl
cmp
ljmp
ret
fs
in
pushl
push
pop
inc
fwait
les
dec
loop
cmpsb
lret
sbb
fs
es
xchg
hlt
adc
inc
mov
ror
sub
jge
xchg
push
mov
rol
not
push
xchg
mov
icebp
jne,pn
lods
ljmp
mov
mov
or
fdiv
repz
jl
mov
movsb
inc
mov
repnz
push
mov
cmp
call
int
mov
sarb
cld
pop
inc
mov
mov
and
fsts
or
inc
in
in
pop
js
sub
inc
sti
xchg
pop
add
mov
orb
adc
test
in
and
xchg
mov
sbb
cwtl
sahf
jns
mov
stc
fs
inc
sub
rorb
pop
inc
call
mov
and
xor
call
xor
test
xor
fwait
xchg
xor
add
or
call
xchg
clc
and
cmp
dec
leave
sub
xchg
lods
jge
leave
add
push
add
std
adc
outsb
jmp
es
xchg
xchg
popa
flds
pop
xchg
xor
xchg
dec
cmp
lahf
out
aam
lcall
fstpt
sbb
outsb
jmp
xor
fs
sti
ret
ret
outsb
repnz
sahf
dec
mov
or
inc
stos
sbb
jmp
sahf
adc
insl
or
dec
adc
lret
xor
in
mov
jg
filds
out
rorl
pop
xor
pop
jo
xchg
inc
push
popf
sbb
ss
inc
sub
mov
scas
mov
stc
cltd
orb
xchg
out
sub
adc
add
sub
sbbb
mov
add
cmpsb
leave
pop
lds
jbe
imul
mov
aad
push
lds
push
adc
in
lahf
sbb
outsb
sti
pop
dec
and
jg
js
jbe
jl
icebp
mov
jb
insb
cli
bound
repnz
cld
insl
pop
sarl
add
dec
bt
mov
or
pusha
lods
cmp
sbb
jmp
inc
ds
mov
lret
sub
ljmp
xor
pop
dec
jmp
xor
push
mov
dec
or
stos
loopne
popa
mov
inc
pop
sahf
and
pop
dec
cmp
mov
adc
sbb
jge
xor
cltd
jp
lods
out
inc
popl
mov
inc
push
jge
push
daa
ret
leave
adc
or
pop
add
insb
lret
mov
mov
add
lock
fwait
xchg
fisttpl
mov
cld
mov
testl
dec
cli
insb
xor
mov
hlt
cmc
aam
xor
ds
ja
js
sbbl
repnz
mov
movsb
repnz
rcrl
mov
pop
mov
ficoms
test
sbb
dec
cmp
addr16
push
lret
or
dec
insb
rolb
sbb
add
icebp
and
and
ljmp
xor
mov
cli
into
inc
xor
mov
das
jnp
repz
dec
add
dec
jns
rorb
cli
mov
mov
ret
mov
inc
add
insb
sbb
jns
xor
inc
push
jge
xchg
mov
fsubrl
imul
and
inc
je
pop
add
or
sub
cmp
push
push
or
roll
xor
enter
std
iret
cmc
adc
fs
iret
or
dec
or
jns
in
aaa
push
pop
inc
fnstsw
pop
xchg
das
test
js
fwait
push
cmp
mov
sbb
add
subl
add
fwait
push
mov
inc
out
adc
cmpsl
mov
dec
into
decb
stos
lds
int
jge
lret
lcall
enter
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
stos
cs
xor
loope
jp
pop
jp
imul
icebp
data16
jne
xor
mov
cmc
fwait
jb
lds
and
mov
fimuls
xor
nop
cmpsb
pop
or
inc
sbb
cli
mov
dec
scas
test
scas
dec
hlt
dec
hlt
jl
sti
mov
sbb
add
aam
xchg
ret
fists
jp
sub
sbb
jb
and
pop
push
outsb
jo
cmp
div
sub
cmc
int3
mov
mulb
xchg
cltd
push
repz
mov
ffreep
xor
stc
cmp
pop
imul
fs
repnz
pop
sub
push
sbb
dec
jl
mov
addr16
sbb
adc
add
inc
nop
sbb
jp
sbb
sbb
lock
dec
inc
sub
push
jb
scas
or
mov
add
adc
insb
dec
ja
sbb
sub
mov
adc
lret
and
xor
xor
xchg
mov
inc
lds
or
jecxz
xchg
leave
sub
aad
and
int
pop
xchg
push
mov
jbe
insl
gs
cmc
mov
in
or
rorl
hlt
pop
add
push
mov
cmp
sbb
mov
cmc
jo
aas
shlb
test
lret
inc
sbb
cmp
mov
or
mov
subl
or
popf
daa
xor
sbb
lahf
mov
cmc
lcall
dec
mov
mov
or
jl
push
cld
scas
aam
or
jmp
out
sub
pop
insb
sbb
hlt
in
js
sbbl
pop
daa
aam
push
mov
out
sub
push
mov
and
ret
cmp
xchg
xchg
loopne
pop
cmp
ljmp
repnz
pusha
push
sar
inc
pop
pop
in
jo
sbb
out
inc
push
cmpsb
hlt
rcrb
xchg
pop
dec
ret
lcall
cmp
push
ret
dec
xor
push
fucom
sbb
cmp
outsl
scas
xor
lds
mov
jecxz
cmp
subb
and
sar
in
cmp
aas
loope
xchg
mov
insl
inc
push
xchg
lahf
lds
fcomip
in
cld
cmpsb
jmp
jmp
dec
pop
inc
rcrl
cmc
jmp
dec
mov
add
adc
xchg
addr16
add
popa
or
bound
sbb
sbb
xor
dec
les
repz
pop
jae
push
sti
out
push
sub
xchg
movsb
adc
push
lods
xor
mov
cmc
int
push
cmp
dec
stos
idivl
mov
stc
dec
popa
int3
cmp
sbb
pushf
lock
sub
or
scas
mov
test
pop
aaa
mov
push
subl
outsb
mov
pop
jmp
xchg
out
mov
xchg
mov
hlt
call
pop
cmp
dec
pop
xor
push
subl
push
fwait
xor
cmpsl
iret
mov
mov
adc
sbb
les
adc
daa
pop
into
push
mov
and
stc
push
dec
mov
mov
lret
jecxz
movsl
movsb
push
lret
pushf
mov
add
lcall
fstl
mov
pop
sti
xor
mov
mov
add
mov
inc
inc
mov
sub
test
inc
add
mov
aad
inc
cmp
es
out
mov
sub
imul
mov
xor
lods
cltd
pop
cmp
add
out
ds
sub
fs
or
mov
movsb
pop
push
out
adc
addr16
imul
jge
js
push
cmp
or
clc
inc
testb
xchg
xchg
mov
xchg
aad
movsl
mov
lock
mov
add
pop
cwtl
arpl
jecxz
mov
pop
pop
xchg
out
lret
aas
mov
dec
addl
ret
out
xlat
loop
mov
xchg
dec
insb
in
lods
test
insl
xchg
mov
lahf
mov
add
jl
push
incb
push
jnp
ret
xor
fldenv
cmp
rcrb
rorb
add
je
xchg
leave
scas
pushf
adc
xchg
int
jbe
jecxz
es
mov
int3
xchg
int3
xchg
xchg
mov
mov
xchg
sub
imul
jb,pn
lods
jp
sbb
sahf
punpcklbw
cs
jnp
aaa
mov
sbb
cmpsl
sbb
mov
push
cmp
icebp
sub
data16
jbe
add
out
sahf
sbb
sbb
sbb
imul
mov
xorb
inc
xchg
ss
xlat
jle
mov
and
mov
mov
xor
sub
sti
inc
test
cmp
inc
xor
pop
pop
add
addb
mov
gs
fadd
out
in
or
mov
mov
rclb
push
out
push
push
and
test
in
mov
sbb
fcoms
mov
pop
adc
out
xchg
jae
inc
jp
test
enter
mov
fbld
inc
cmp
nop
data16
jmp
movsl
ret
sub
fwait
jge
xchg
dec
adc
cmp
into
xchg
test
mov
insl
mov
lods
xor
out
xor
sub
fisubl
inc
aam
inc
push
or
lods
and
in
mov
mull
mov
clc
sahf
pop
leave
iret
fadds
fs
jns
xchg
call
fisttpll
in
sti
rcrl
fcmovnbe
es
push
insb
or
cmp
fistpl
mov
xchg
dec
lea
or
cmp
push
mov
sbb
insb
sub
addr16
enter
mov
movsl
push
ja
ret
jbe
subb
sub
lahf
adc
push
enter
bound
stc
pop
sub
mov
xorl
repnz
dec
test
and
out
int
push
mov
jbe
rcrl
outsl
mov
mov
es
and
dec
jno
mov
adc
loop
ror
in
pop
out
cli
mov
push
or
jmp
mov
das
loopne
mov
loop
test
cmp
jge
inc
sub
sbb
dec
pop
mov
mov
adc
mov
push
jo
cmp
subb
push
cmpsb
mov
add
mov
xor
popf
out
xor
mov
imul
imull
shrl
push
int3
shll
lret
cmpsl
add
lds
jmp
fbstp
dec
push
loop
popa
daa
lods
dec
jg
ret
adc
je
lret
cli
movsb
mov
out
mov
jo
dec
into
and
aam
das
adcb
xchg
stc
push
cmp
testb
sbb
nop
xchg
xchg
add
xchg
out
data16
fildl
sarb
lret
popf
pop
bound
adc
jp
xchg
aad
cwtl
xchg
inc
scas
inc
xlat
push
imul
sar
jg
mov
shlb
out
roll
xor
test
push
and
push
je
adc
xchg
into
lock
insl
subl
out
int3
les
jp
mov
cmp
in
aam
sub
push
mov
ljmp
es
dec
dec
jge
aad
adc
mov
in
clc
sahf
xor
out
sbb
je
mov
xorb
lahf
cs
mull
dec
jbe
pop
cmpsb
sbb
scas
data16
sbb
mov
incl
sti
int3
pop
int
lahf
adc
dec
insl
mov
in
mov
mov
mov
mov
fstps
ds
and
push
iret
cmp
jno
aad
fisubl
ja
mov
ret
push
xchg
insb
out
add
out
fildl
add
and
into
add
cltd
mov
or
mov
pop
mov
or
fisubrl
bound
cmp
mov
jg
pop
outsl
pop
js
aad
shll
pop
adc
jbe
jp
and
jg
mov
int
hlt
cmp
push
mov
mov
ljmp
out
addr16
cmc
jo
stc
test
fmull
xor
xchg
popf
fiaddl
xchg
and
cmp
pushf
add
mov
or
into
push
push
or
enter
inc
sub
sbb
lock
mov
jnp
dec
cs
popfw
sbb
jg
insb
ss
and
sub
mov
push
inc
xor
xchg
push
les
mov
sbb
mov
orl
xchg
push
ret
jl
push
cmp
scas
repz
loop
inc
cmc
push
sbb
pop
lods
cmp
into
test
inc
test
cmp
stos
fisttps
mov
pop
push
out
push
cmp
jle
add
dec
push
bound
pop
lahf
icebp
lahf
ja
mov
pop
in
inc
scas
jp
or
jo
or
xchg
mov
andb
mov
mov
cmc
or
imul
insb
cwtl
xchg
dec
sub
ror
mov
mov
xor
imulb
xor
shlb
push
push
lahf
bound
jns
int
and
xchg
push
pop
nop
hlt
fcoms
ret
sbb
mov
dec
sbb
dec
sub
stos
iret
mov
push
pop
inc
pop
dec
xchg
adc
rol
add
cmp
sub
stos
xlat
fisttpl
and
sbb
dec
and
push
cmp
xor
sub
sbb
aaa
xchg
cmp
lret
out
or
pop
push
fsubr
rol
and
data16
xchg
inc
mov
repnz
ds
js
mov
leave
rcll
sub
insb
mov
jns
imul
xor
in
ret
mov
repz
push
outsb
cmp
mov
mov
jne
pop
mov
dec
pop
aaa
lret
test
inc
pop
push
out
add
mov
jge
inc
mov
add
fs
adc
cmpsb
fistpl
cmpsb
fnstenv
scas
lock
jle
sbb
adc
inc
push
cmp
jnp
iret
and
test
jecxz
outsb
or
xor
filds
movsb
jae
std
outsl
dec
fnstsw
loopne
cmp
jno
mov
add
lods
sbb
dec
in
mov
dec
jnp
dec
sub
mov
iret
lret
repnz
cmpsb
sti
daa
in
dec
xchg
push
add
pushf
jg
add
push
xchg
pop
hlt
inc
out
push
jne
or
mov
push
mov
sbb
mulb
xor
cmp
call
adc
xchg
in
cmp
jge
push
sbb
ret
mov
inc
pushf
jl
mov
stc
bound
mov
sub
xor
shlb
popf
sub
fbld
or
ja
nop
sbb
fcompl
jo
mov
lret
lds
adc
and
add
aad
add
jge
scas
sub
ja
inc
ret
and
xchg
dec
jbe
pop
jae
adcb
xchg
test
sub
lahf
shlb
int3
xor
mov
mov
fdivl
jmp
pop
cs
mov
xor
xor
data16
scas
and
sub
jg
dec
ret
addr16
and
fimull
mov
rcrl
inc
adc
xchg
lret
mov
inc
cltd
jg
add
xchg
sahf
les
insb
shll
repz
mov
into
dec
mov
cli
dec
mov
movsw
sbb
fs
xchg
dec
cmc
lret
sbb
jb
lret
int3
outsl
stos
rcrb
in
and
pushf
lret
xchg
and
lods
dec
sti
inc
jns
popf
test
popa
imul
push
pop
pop
mov
cli
sub
loopne
negl
mov
out
dec
sbb
jns
jge
or
sub
sub
dec
out
pop
lods
push
mov
loopne
jns
fldln2
push
pop
or
xor
inc
stc
add
push
adc
push
jb
mov
xchg
cmp
or
fidivl
mov
cltd
in
jle
popa
add
stos
cmp
in
rcr
es
out
pop
jp
mov
sahf
lret
jg
test
push
mov
fwait
cmpsl
out
sti
inc
inc
movsl
les
sbb
int3
pop
dec
inc
stos
or
push
movsb
add
and
mov
adc
xchg
push
clc
into
dec
je
and
xlat
fs
and
xchg
ljmp
xor
mov
nop
int
aaa
cmp
aam
es
jge
cwtl
jnp
cmp
iret
pop
xchg
xchg
clc
jns
cmp
ljmp
xchg
add
mov
data16
fcoml
insl
mov
jo
inc
dec
pushf
mov
mov
imulb
out
xchg
xor
add
shrl
jmp
sbb
lret
and
inc
sbb
icebp
xor
enter
fwait
rcll
dec
imul
mov
scas
xor
aaa
push
fwait
loope
push
pop
cwtl
adc
mov
inc
mov
cwtl
mov
dec
in
sbbb
daa
xchg
or
sub
cld
ljmp
ret
test
imul
cmp
add
insl
in
insl
pop
cs
and
inc
shlb
cmp
add
fmul
jb
jge
jbe
aas
mov
xor
je
and
cld
cmpsl
or
dec
add
roll
adc
and
push
enter
pusha
xor
rorl
adc
xchg
outsl
sbb
int
shll
call
cmpsb
insb
mov
dec
mov
ds
into
push
pop
iret
outsb
mov
inc
movsl
imul
mov
or
xor
fwait
incb
loop
cltd
mov
rcrb
movsb
test
lcall
or
sti
cmp
popf
sarl
adc
rorl
mov
fisubrl
xchg
leave
xor
out
cltd
sbb
mov
pop
ss
repnz
addr16
dec
push
cmp
mov
stos
push
mov
xchg
fdivrs
and
xchg
rol
push
push
push
xchg
cwtl
imul
fsub
ret
into
jge
cmp
jg
fdivl
cltd
jecxz
pop
add
dec
mov
push
and
fdiv
inc
mov
imul
insl
loop
or
in
mov
inc
dec
movsb
roll
mov
mov
xchg
cmp
and
imul
adc
and
scas
mov
fldt
enter
sub
clc
mov
lock
sub
add
sti
leave
stos
cmp
mov
ret
mov
mov
fwait
cwtl
push
repz
add
sahf
loope
stos
cltd
and
or
adc
or
idiv
adc
sub
push
sub
sub
dec
sbb
adc
fsts
mov
add
cltd
inc
pop
adc
aad
outsb
into
ljmp
daa
cmp
mov
sub
pop
sbb
adc
push
sub
repz
adcb
add
jne
cld
dec
cli
add
lret
and
ret
fs
lock
into
dec
pop
xchg
or
sub
clc
or
cmp
and
push
ds
pop
lock
enter
cmp
mov
dec
outsl
es
shll
pop
mov
daa
fidivs
hlt
sub
sbb
fnstcw
adc
dec
inc
fildl
fadd
sarb
sbb
mov
rol
imul
mov
sahf
pop
xor
lret
jb
xchg
cmp
mov
movsl
in
leave
insb
jecxz
fadds
and
repz
jge
jle
dec
xor
jle
sub
mov
js
shr
cmpsb
repz
sub
imul
sub
mov
fstpt
js
cmp
hlt
sub
out
rcll
mov
jmp
addr16
scas
lods
aaa
xor
or
adc
js
rolb
mov
xchg
sub
xchg
adc
xchg
or
hlt
movb
cli
jns
cli
mov
cmp
das
cltd
repnz
adc
or
stos
inc
jb
and
ljmp
clc
js
lret
nop
jb
rcl
ret
icebp
xchg
push
sbb
repz
push
dec
in
inc
aam
and
jecxz
jp
or
aad
fsubrl
xlat
fcoms
mov
paddusw
ss
dec
test
cmp
lret
lds
sar
pop
push
jle
je
cmc
outsb
jae
sbb
cld
sbb
std
loop
cmp
and
shrb
enter
dec
cmpsb
jle
cmp
xchg
xchg
dec
jae
lds
sarl
cmp
push
add
cmp
cmp
cli
sbb
cmp
fidivs
les
cltd
add
cmpsl
jg
out
xor
daa
adc
mov
pop
cmp
push
loopne
repnz
lahf
pop
lock
jge
fldenv
add
in
jl
lods
mov
jl
daa
xchg
dec
xchg
scas
lret
mov
pop
inc
test
or
sbb
mov
lret
push
fimull
dec
and
mov
popf
loope
mov
add
push
xor
and
pop
push
nop
pop
gs
dec
out
sub
adc
cltd
dec
push
int3
scas
lock
fcomi
lods
push
mov
dec
gs
push
out
cwtl
mov
test
xor
sbb
popa
mov
js
add
sahf
pop
xchg
mov
fildll
adc
mov
cmp
lcall
shrb
dec
add
test
ja
cld
jne
jne
xchg
sub
dec
inc
stos
cld
sbb
cld
add
add
pushf
xor
test
xchg
movsl
daa
jns
out
or
xor
inc
js
cmp
sub
nop
mov
rcr
fistl
fwait
sub
jp
lock
test
pushf
icebp
inc
mov
sub
cmp
sti
mov
popa
lea
mov
adc
adc
test
xor
cmp
daa
or
cmp
ret
mov
insb
xlat
scas
lods
mov
loope
add
or
sarl
adc
test
insl
mov
bound
cmp
lods
push
dec
inc
cmp
sbb
outsl
and
xchg
xchg
dec
pop
enter
dec
dec
xor
push
mov
repz
scas
or
cld
dec
sub
adc
lods
add
inc
add
iret
or
shl
pushf
inc
icebp
sub
pop
dec
std
ret
test
fabs
test
xchg
push
cmp
add
out
ror
mov
pusha
sarb
adc
sbb
adc
in
mov
cli
sbb
inc
push
pop
out
enter
movsb
shll
mov
loopne
mov
orl
shr
xchg
xor
or
mov
outsb
xor
jmp
lods
xor
add
xchg
shlb
dec
add
xlat
push
data16
test
out
fsubs
stc
lcall
out
enter
adc
icebp
outsb
jg
dec
mov
into
xchg
fldl
fldenv
sbb
xor
pusha
fldl
or
out
jne
sbb
nop
and
xor
test
and
shl
out
movsl
in
out
push
mov
mov
sub
jmp
loope
aad
addl
or
rcl
hlt
dec
or
xorl
mov
test
and
sub
ds
shrl
inc
fwait
jo
and
mov
push
aam
push
xchg
fiadds
aaa
dec
and
jnp
mov
test
jns
mov
xchg
cmpsb
cmpsl
imul
pop
test
loopne
jmp
mov
mov
push
cld
out
pop
shrb
ss
lahf
popf
mov
addr16
leave
divl
mov
push
aaa
je
insl
je
sahf
pop
sbb
mov
ljmp
pop
xor
and
mov
test
sbb
out
in
dec
inc
aaa
sti
mov
mov
filds
or
mov
cmp
and
mov
push
inc
jnp
fnstenv
fisubl
in
movsl
sti
dec
mov
cmp
sbb
mov
lods
xchg
inc
add
lock
fsubs
sarl
jae
rclb
xor
out
dec
movb
xlat
jnp
lea
lods
sbb
lret
or
aam
cmp
fdivrl
test
pop
adc
fwait
popf
adc
in
call
inc
mov
dec
call
push
push
lcall
pop
iret
xlat
adc
push
sbb
enter
add
sbb
fs
mov
lea
cmp
and
shlb
or
fcomps
lods
pusha
int3
mov
mov
jg
pop
add
cmpl
gs
mov
cmp
je
aam
repnz
aaa
mov
cli
subl
aad
cltd
adc
mov
adc
or
pop
jg
out
rcrl
loopne
mov
cmpsb
shr
fdiv
rcll
cmp
rclb
test
rolb
loope
cmpsb
fcoms
ljmp
ret
test
and
xchg
loopne
in
sti
push
mov
js
sub
adc
jae
popf
cmpsl
push
or
dec
pop
xor
push
inc
jo
pop
or
dec
loopne
lds
mov
mov
mov
sti
popa
les
mov
cmp
sub
ret
stos
push
or
aas
mov
outsl
jbe
lds
mov
jae
cmp
dec
dec
mov
fldcw
aam
lret
mov
imul
xchg
xor
jno
arpl
in
int3
inc
into
inc
dec
loopne
cmpsl
cmp
jno
cltd
cli
imul
jmp
lcall
std
out
push
push
push
mov
mov
adc
sbb
fildll
xchg
xor
mov
icebp
roll
jg
add
jle
dec
adc
adc
mov
pop
and
inc
ss
adc
mov
xor
inc
xchg
lods
and
cmpsl
push
push
aaa
repnz
mov
dec
imul
or
mov
xchg
lods
and
stos
jp
std
xor
loopne
les
xor
ficomps
mov
and
cltd
inc
jb
jae
leave
ret
sbb
jo
dec
stos
pop
xor
xor
ss
outsl
addb
fdivs
mov
pushw
pushf
pop
lds
mov
fildl
mov
cmc
jecxz
mov
es
test
and
jmp
pop
das
mov
sub
shll
mov
adc
xchg
lock
in
rorl
adc
aam
js
xchg
jge
or
ffree
popf
xchg
movsb
mov
ljmp
lcall
or
outsl
adc
sbb
lcall
gs
add
xchg
ret
cmpsl
sarb
aam
lcall
mov
rclb
repnz
or
or
loopne
mov
flds
pusha
movsb
jo
lods
adc
sti
push
push
push
in
ficoml
addr16
jb
inc
push
lret
jbe
mov
cmp
mov
sahf
and
mov
xor
inc
sbb
out
inc
jge
and
inc
jle
rcrl
addr16
pop
pop
popa
outsb
xchg
andl
and
inc
iret
push
sarb
inc
jno
push
test
push
fcomip
daa
pop
ret
pop
dec
jnp
fdivrl
daa
fiadds
hlt
mov
ss
lods
hlt
adc
lea
into
sbb
std
push
pop
cwtl
loop
mov
filds
jne
data16
xorb
mov
cld
xlat
mov
jmp
cmpsl
imul
sub
leave
pop
cmp
inc
xchg
movsb
adc
inc
ljmp
fwait
pushf
pop
and
incl
sbb
outsl
out
insl
test
mov
ficoml
imul
add
arpl
ja
outsb
scas
push
sbb
daa
and
rolb
sahf
inc
icebp
aas
shl
push
push
popl
out
and
loopne
lret
sti
add
test
adc
mov
int3
dec
jnp
fs
jo,pn
sub
inc
inc
cli
xchg
or
ja
dec
int3
shll
fwait
pushf
mov
and
jge
call
mov
in
or
dec
and
add
and
test
add
test
pop
cmp
push
xchg
les
js
xchg
and
or
cmp
scas
or
je
mov
adc
rolb
pusha
inc
repnz
rol
iret
je
cmp
lahf
shll
add
mov
inc
loop
psrlq
push
int3
cmpsl
pop
dec
add
xchg
mov
and
mov
icebp
sub
mov
fsub
xor
fwait
in
adc
out
mov
pop
push
mov
test
dec
sub
in
and
daa
add
jl
bound
lods
xlat
shrb
xchg
pop
repz
sub
push
jle
jecxz
outsb
cld
jecxz
xor
sub
jns,pn
fwait
daa
dec
add
mov
push
inc
imul
js
in
jmp
sti
daa
nop
cmp
push
xchg
sarl
dec
repnz
mov
xor
adc
sbb
ljmp
das
mov
inc
sbb
out
insb
arpl
rorl
lods
sub
mov
dec
fistpll
mov
cmp
cmp
jmp
rol
shll
cmc
pop
fisubs
xchg
xchg
lock
nop
sbbb
roll
pop
mov
mov
out
pushf
jo
push
cltd
insl
pusha
mov
pusha
repz
mov
rolb
sti
loop
out
ret
pusha
scas
shl
insl
push
mov
push
ds
stc
inc
fsts
adc
in
jo
push
imul
repnz
and
jbe
mov
sahf
test
repz
pop
push
fisubl
dec
fisubs
arpl
in
test
scas
mov
loope
dec
mov
mov
fxch
fiadds
push
test
pop
or
pop
mov
cmp
addr16
cmpsb
xchg
sarb
fimuls
mov
mov
add
lahf
stos
xchg
jg
sahf
mov
cmc
jae
lret
sti
xor
sbb
std
fwait
outsl
lds
cwtl
pop
cmp
mov
lods
cmp
and
cmp
aad
in
fidivrs
cmpsl
int
out
jg
or
inc
daa
push
fisttpl
mov
outsb
inc
out
inc
push
jno
mov
xor
scas
push
stos
nop
sub
in
xchg
adc
xchg
test
add
lds
jl
add
push
sarb
in
enter
sub
movsl
jmp
mov
lahf
xor
cmp
test
push
out
push
std
mov
or
cmp
lcall
cmc
inc
mov
cld
jo
push
shlb
mov
sub
faddl
lret
ret
push
fstps
cmp
rep
lock
sti
out
and
xor
lcall
inc
bound
dec
and
lahf
lods
fildll
pop
adc
inc
je
cmpsb
adc
daa
jmp
daa
scas
and
loope
sbb
pushf
rolb
decl
mov
sbb
pusha
imul
cmp
and
fidivrs
dec
test
lds
stos
lods
pusha
mov
push
out
addb
lds
clc
fisubl
data16
int
or
cwtl
pop
xchg
pop
sbb
xchg
lea
adc
scas
adc
out
sub
mov
rolb
daa
pop
fisubrl
xlat
out
pop
mov
imul
in
push
in
inc
fwait
mov
mov
hlt
jecxz
xchg
dec
jg
pop
adc
in
ljmp
jl
cmp
xor
xchg
dec
jecxz
inc
xor
decb
addr16
push
in
lea
xlat
and
mov
xlat
arpl
inc
mov
idivb
xorl
paddq
pushf
daa
or
dec
sbb
scas
loope
enter
rorb
popa
movsb
int
stos
mov
stos
xchg
xor
loopne
lds
push
add
mov
jnp
sahf
mov
fsub
lret
loopne
sub
push
ss
pextrw
mov
sar
std
pop
push
pop
and
add
jbe
aaa
dec
xor
lock
jbe
fmull
cmpsl
cmovbe
aam
pop
or
cmp
inc
and
xchg
adc
ret
lahf
xor
incl
cwtl
insb
incb
out
aas
xor
cmc
je
push
xadd
mov
es
sub
dec
in
or
aas
repnz
xlat
pop
nop
aam
rol
out
aad
or
mov
mov
shrl
mov
out
loop
subl
jp
outsl
cmp
gs
lcall
jg
out
pop
adc
jb
mov
and
rol
jmp
ljmp
inc
add
mov
mov
and
inc
xchg
add
jmp
mov
cltd
lahf
pop
pop
push
cld
fwait
aam
cltd
div
push
daa
cmp
jb
sbb
icebp
in
jo
sbb
adc
les
js
mov
adc
pop
dec
dec
or
pop
ficoms
or
aaa
scas
dec
xchg
inc
adc
sub
mov
mov
xlat
cltd
stos
xchg
call
sub
mov
push
hlt
pop
cmpsb
inc
adc
pop
in
stos
lret
cmp
xchg
push
xchg
mov
adc
pusha
mov
jno
inc
lods
dec
ljmp
cmpsl
test
jge
pop
inc
ljmp
mov
lahf
loope
or
int3
push
xor
jae
test
cmp
pop
adc
jbe
jl
adc
xchg
cmp
jae
mov
cltd
arpl
cmc
dec
xor
lods
sbb
popa
xchg
fiaddl
ljmp
inc
mov
lret
mov
push
shr
negl
movl
pop
inc
leave
push
mov
aad
imul
jle
loope
pusha
xor
ret
pop
adc
and
mov
cs
daa
pop
adc
shlb
sarl
in
xchg
push
dec
das
jle
inc
dec
hlt
gs
call
fistps
aas
iret
ficoms
lret
push
mov
loop
or
sub
add
insl
or
push
sti
scas
xchg
sub
sbb
jbe
or
call
sub
and
dec
outsb
pop
sub
push
call
dec
mov
loope
lock
gs
and
loope
fdivp
cmp
mov
rcrl
loope
jl
arpl
add
mov
cmp
cli
jnp
or
out
sbb
push
subl
or
ret
sbb
cs
cmp
xlat
pop
nop
outsl
cld
in
out
mov
push
dec
cmp
sbb
cs
fsubl
popa
pusha
inc
or
dec
sub
bound
pop
sub
xchg
call
pop
mov
pop
cmp
call
sahf
gs
sub
mov
mov
imul
xchg
jno
imul
mov
mov
inc
sub
xchg
pop
add
jmp
lea
push
push
fldcw
aaa
cmc
xchg
mov
rolb
into
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
ret
or
jp
je
push
out
xlat
pop
test
or
imul
and
or
or
std
fs
pop
sub
and
add
mov
inc
insb
push
push
add
xlat
ret
shl
jl
loop
pop
iret
popa
cli
repz
and
cmpsl
ds
xchg
sbb
fisubs
aaa
lcall
ficomps
popa
pusha
or
push
xchg
call
push
dec
imul
sub
stos
repnz
jbe
mov
dec
scas
lock
inc
fsubr
sub
add
dec
shll
mov
cmc
addr16
stos
mov
arpl
xchg
add
fwait
pop
fcom
lods
out
dec
pusha
lea
mov
xchg
aas
push
xchg
pop
and
out
pop
push
fistl
popa
or
imulb
loop
insb
xchg
bound
scas
mov
inc
dec
arpl
jbe
push
sbb
bound
mov
jle
xchg
fsubrs
scas
popa
insb
leave
cld
or
jne
stos
decl
sbb
stc
or
shl
xor
fstpt
mov
ja
mov
xchg
lret
push
push
dec
pop
insl
in
mulb
jle
lret
orl
xchg
daa
push
repz
mov
xchg
xor
std
das
insl
scas
adc
pusha
add
sahf
ficompl
ret
mov
in
dec
jmp
jo
cmp
cmp
pop
or
xchg
cltd
shr
lods
add
xchg
in
jne
mov
sbb
roll
lea
shr
js
aam
ror
addb
pop
sar
mov
adc
cs
push
dec
lods
inc
rol
adcb
adc
fiadds
or
lea
call
or
pusha
sub
xchg
xchg
or
js
rcr
icebp
jl
mov
repz
adc
fadd
adc
jl
stos
push
push
daa
and
push
andb
shl
inc
dec
lds
jp
dec
jns
push
lcall
leave
std
sbb
inc
andl
xchg
mov
clc
inc
inc
jno
xchg
mov
les
xorl
scas
inc
cwtl
lcall
pop
and
push
js
mov
leave
jno
xchg
lods
and
cmp
lcall
call
inc
xor
imul
adc
int
sub
jno
xor
push
cld
aaa
iret
lock
shll
push
xchg
push
movsl
in
xor
pop
sub
mov
mov
stos
hlt
ds
or
and
mov
add
mov
js
mov
ror
aaa
vmovddup
sub
and
sbb
and
pushf
repz
mov
pop
clc
je
mov
mov
mov
xor
mov
aam
add
jno
loope
int3
mov
mov
xlat
mov
int
push
gs
mov
rorl
in
jecxz
lock
dec
iret
mov
pusha
cmp
pop
push
mov
mov
and
fisubrs
mov
fiadds
fdivs
xor
out
jecxz
jae
xor
xchg
sbb
cmpsb
xchg
pop
in
and
inc
dec
out
xchg
jae
aad
cwtl
aam
dec
xchg
push
cmp
in
ljmp
cltd
dec
pop
mov
mov
mov
rolb
jp
addr16
mov
jne
xchg
pop
jns
and
movsl
jmp
mov
fcompp
xchg
ja
sub
dec
sub
adc
mov
lods
out
or
sub
jg
in
ss
lret
ficoms
mov
add
jp
push
ss
lods
int3
mov
shll
adc
das
pusha
adc
std
xor
mov
test
mov
jne
lcall
push
aad
mov
sbb
mov
jl
repnz
pop
jae
popa
xchg
out
aas
pusha
pop
or
jns
shrl
pop
addr16
xor
leave
data16
adc
jns
inc
xor
mov
fcoml
mov
mov
inc
repnz
aaa
add
push
subl
sub
test
iret
adc
xchg
push
icebp
sbb
insb
iret
adc
dec
rcl
clc
jnp
out
test
mov
push
cs
add
push
lds
push
pop
nop
into
push
into
mov
shlb
jbe
sub
add
cmp
aad
leave
push
sbb
fstp
or
fdivl
movsl
pushf
mov
xorb
test
sub
mov
test
mov
insl
test
ror
inc
hlt
into
ror
push
mov
inc
gs
sbb
mov
rcrb
loop
sub
cmp
sbb
notb
mov
repz
push
pop
fisubrs
or
fnstcw
pop
jb
push
fs
push
mov
mov
push
dec
adc
movups
outsb
mov
cmp
inc
pop
inc
inc
into
sub
xorl
and
aad
sti
pop
adc
std
jb
and
scas
or
fcom
mov
push
lret
cwtl
adc
cmp
push
xchg
push
ss
push
testb
lret
pop
add
repz
test
cmp
out
stos
cs
sub
mov
jecxz
sti
fdivl
dec
inc
pop
mov
push
cwtl
push
pop
jecxz
cmp
inc
jp
cmpsb
pop
push
jl
loope
adc
cmp
rol
inc
daa
and
imul
aaa
mov
dec
sbb
lahf
jb
gs
mov
adc
inc
jo
les
sahf
or
inc
xor
imul
cmc
jne
sub
xchg
or
in
jge
cli
in
mov
push
fidivl
jnp
clc
jae
idivb
movsb
and
pusha
add
inc
xorl
cltd
pop
imul
cltd
sbbl
shlb
add
adc
jbe
outsb
pop
les
test
in
jecxz
out
mov
mov
fidivrs
pop
adc
cwtl
loopne
in
in
shlb
lcall
push
mov
adc
jl
add
pop
outsb
fimull
icebp
sub
rorl
sti
js
xchg
in
inc
shll
push
std
test
jg
or
mov
pop
xor
mov
repnz
adc
xchg
xor
repnz
add
fisubl
dec
pop
shrl
dec
inc
mov
insb
aaa
jo
stos
cmp
xorb
ss
stos
imul
cmp
mov
jno
lock
call
shll
mov
mov
mov
mov
sti
add
sub
mov
add
or
jnp
jge
jecxz
icebp
mov
jl
pop
andnps
addb
movsl
mov
and
and
or
int
push
push
jmp
mov
cld
inc
push
xlat
sbb
dec
jge
jne
push
push
add
jnp
scas
and
shlb
es
lods
out
jne
and
mov
pop
popa
cwtl
js
inc
sub
push
repz
movb
out
addr16
shrl
sbb
cmc
scas
pusha
popa
addr16
cwtl
pop
pushf
sub
nop
ljmp
or
scas
daa
cwtl
lea
data16
push
pushl
jbe
fsub
push
dec
mov
data16
xor
loopne
call
lods
or
push
pop
xchg
cltd
mov
jg
fsubp
js
iret
fcoml
lahf
and
jle
inc
xor
mov
iret
cmc
arpl
lret
mov
inc
aaa
push
movsl
ss
sbb
push
pop
adc
hlt
jns
adc
daa
decl
fisubrs
dec
push
stos
inc
inc
fsubr
mov
pushf
and
or
cmp
sti
pop
jne
push
pop
add
or
je
add
mov
data16
repnz
fldt
int3
iret
loopne
stc
mov
pop
mov
mov
xor
int3
pushf
lcall
mov
xchg
iret
imul
negb
xchg
adc
jge
jb
icebp
scas
mov
cmp
andl
pusha
push
lahf
pop
enter
mov
jle
jae
test
fcmovne
adc
adc
sbb
lea
das
cli
cmp
out
int
dec
dec
mov
iret
lret
addr16
xor
add
int3
leave
mov
mov
push
sti
lcall
shl
lea
dec
insb
nop
xchg
js
loopne
or
and
dec
xchg
pop
sub
andb
lcall
int
aam
xchg
xor
inc
push
add
xorb
enter
adc
data16
jle
ja
mov
mov
lret
out
insb
sbb
inc
rcll
inc
in
mov
aam
call
jl
jo
mov
out
cwtl
repz
movsl
jae
ja
jge
and
imul
repnz
test
mov
in
loopne
mov
dec
cmpl
roll
filds
push
addr16
sub
out
mov
popw
in
stos
rcrl
fisubrl
jmp
scas
loope
cs
and
lcall
pop
inc
inc
cmpsb
mov
mov
or
mov
lods
adc
icebp
jns
lds
sbb
adc
inc
hlt
sbb
xchg
shrl
pop
leave
ss
xchg
dec
cmpsb
jmp
sub
push
inc
arpl
int
loopne
pop
mov
fnsave
loop
xchg
sti
sti
dec
nop
test
xchg
imul
lock
inc
jns
sbb
xlat
mov
fwait
and
lods
dec
push
cmp
and
bound
mov
cmp
jae
iret
stos
dec
dec
roll
ljmp
dec
cmp
push
jmp
call
std
cwtl
and
inc
or
orb
add
xlat
xchg
inc
jl
push
scas
mov
and
sub
add
dec
hlt
popf
fs
in
ss
xchg
ret
dec
jae
lea
cli
outsl
xor
mov
fnsave
mov
fadds
and
es
xchg
sbb
fnstcw
inc
lretw
and
jo
out
iret
js
sub
push
xor
mov
mov
push
add
mov
lret
popa
loopne
push
mov
mov
xlat
movsb
xor
loop
lcall
cmp
mov
cmpsl
fistpl
movsl
dec
ror
stc
jl
cmp
hlt
cmp
pop
pushf
fcmove
sbb
sbb
sub
into
lea
test
sub
in
fidivrs
mov
in
cld
out
sbb
mov
adc
mov
test
aas
xchg
sbb
mov
ss
mov
std
lods
inc
adc
fwait
cmpb
pop
sub
mov
jbe
mov
push
pushf
ds
lea
fsts
sub
loopne
ret
sbb
test
cmp
xchg
lea
cld
dec
cmp
int3
cld
push
add
nop
jno
jle
xchg
fbstp
adcb
sub
fwait
dec
sub
imul
lds
mov
xchg
push
repnz
pusha
mov
loop
imul
pop
dec
mov
jge
push
pop
pusha
push
fimull
out
fstpl
iret
sti
fnsave
es
dec
push
sub
mov
xchg
xchg
add
adc
pushf
sahf
cs
mov
mov
xchg
shll
sbbl
mov
in
cmp
sub
mov
loop
gs
xchg
es
ja
and
lret
push
add
mov
stos
or
pop
mov
or
insb
lret
das
iret
sub
and
jle
lods
mov
or
push
adc
adc
mov
add
add
inc
in
add
sbb
lods
or
mov
dec
addl
inc
push
stos
pusha
lret
ret
or
fimull
and
imul
push
xlat
cld
out
roll
xchg
nop
dec
js
and
cmp
hlt
daa
xchg
out
jae
lods
js
mov
pop
sub
mov
repnz
xchg
pushf
mov
in
arpl
movsb
cltd
jg
int3
leave
sub
adc
mov
push
mov
jge
jo
xor
nop
scas
sbb
test
pop
test
sbb
inc
sub
cli
mov
sub
fstps
pop
xchg
cmp
dec
and
ss
mov
outsb
cmp
pop
xchg
or
adc
push
cmpsb
pop
fsubp
ret
in
movsb
aaa
jbe
sti
pop
out
shl
jge
dec
mov
rcrb
in
test
loop
js
add
outsl
aaa
and
mov
hlt
add
lods
or
movsb
cmp
sbb
inc
sti
sub
adc
leave
rcll
mov
sub
sub
xor
xlat
scas
aas
sub
cmp
or
cmp
sbb
or
andb
fwait
mov
fadd
jbe
jmp
jmp
inc
out
repz
or
jmp
ret
mov
xor
jne
int3
sti
es
popf
out
iret
repz
mov
xor
repz
subb
out
mov
mov
add
pop
or
outsl
cmp
mov
dec
iret
ds
and
dec
jb
jb
mov
jg
xchg
push
mov
pushl
fadds
insl
ds
sbb
xchg
cli
sbb
push
fwait
add
in
out
mov
nop
dec
movsb
lds
enter
or
pop
cmp
and
xchg
mov
insb
popf
mov
mov
pop
test
scas
or
test
jle
cmp
or
aad
insb
dec
cmp
cld
and
pop
or
out
xlat
add
inc
xchg
dec
dec
lock
sbb
pop
dec
mulb
add
mov
divb
inc
sbb
and
cmp
inc
adc
and
hlt
lret
mov
cld
addr16
repz
pmaxub
dec
jp
mov
ljmp
sub
sbb
xchg
xchg
scas
mov
out
adc
jae
ss
in
xchg
fsubrs
shr
shlb
mov
mov
and
stos
jg
xor
and
push
inc
in
mov
or
push
adc
dec
xlat
xlat
xor
mov
push
pop
push
mov
shll
shr
mov
mov
mov
jb
lock
adc
or
mov
xor
adc
in
jmp
fisubrs
mov
push
push
xchg
scas
jne
mov
mov
mov
dec
testl
fsts
mov
xchg
adc
in
add
repz
adc
dec
insb
rcl
mov
pushf
xorl
addl
push
xor
push
mov
nop
jns
fidivrs
add
xchg
cld
push
mov
push
pop
cmp
mov
outsl
leave
adc
inc
pusha
out
mov
adc
test
mov
decl
inc
push
data16
std
xor
ds
xchg
fwait
inc
sbb
pop
scas
popf
sbb
sbb
pop
add
pop
xchg
adc
into
sub
cmp
push
adc
out
push
in
push
push
jns
fidivrl
mov
lret
icebp
mov
imul
subb
pop
jge
sbb
out
bound
aad
cwtl
or
sub
mov
test
add
push
pop
cld
inc
in
lods
pop
aam
and
pop
cwtl
data16
loopne
fistpl
xchg
xchg
jp
push
scas
mov
rclb
mov
push
mov
nop
jo
jo
mov
test
test
out
or
cli
out
movsb
xor
rorb
cltd
xor
call
add
test
add
sbb
and
mov
pop
add
xchg
movsl
pop
arpl
jno
push
arpl
repnz
roll
gs
subl
add
push
int3
adc
shl
sbb
sbb
das
mov
stos
sahf
aad
arpl
imul
sub
dec
loopne
outsb
ret
cli
sbb
faddl
xor
aam
inc
push
test
cmp
in
inc
push
cmpl
and
fiaddl
jp
fs
dec
das
pushf
xchg
push
pop
jno
sub
or
inc
out
cmpsl
outsl
subps
int
push
push
jb
fmuls
dec
lret
fldt
push
or
xchg
lock
shll
lods
xchg
outsb
cmp
mov
cs
jae
xchg
notl
lds
orb
mov
pusha
mov
xchg
sub
push
sub
jo
cmp
sbb
jg
rcrl
hlt
insl
fwait
pusha
cmp
popa
into
mov
icebp
push
lds
pop
cltd
icebp
pop
std
xchg
pop
imul
cld
mov
adc
sar
test
sbb
xorl
cwtl
iret
ja
fs
popa
adc
cltd
mov
inc
out
xchg
cmpsl
cmovle
mov
xor
rcrb
add
rorb
int3
mov
int3
and
push
daa
push
lods
cwtl
jg
lahf
sub
pop
aam
xchg
push
fwait
mov
add
adc
sub
mov
sub
add
dec
inc
mov
lds
sbb
inc
inc
inc
mov
jl
pushl
ficoml
xor
push
pop
repnz
pop
and
pop
xor
add
shrl
or
pop
cwtl
out
test
inc
sbb
aas
mov
pusha
ret
jno
push
pusha
dec
popf
xchg
popf
mov
xor
rorb
cs
fisttpl
cmc
xor
add
pop
mov
xor
aam
inc
js
jo
mov
or
lds
sub
push
insb
leave
idivb
in
jnp
cmp
fbld
pop
inc
js
loope
fsubrl
jge
in
adc
dec
mov
jle
push
lds
rorb
sbb
push
repnz
jno
mov
cwtl
mov
pop
sub
sbb
mov
jle
jns
outsl
inc
testb
xor
in
mov
rep
shrl
sahf
mov
adc
and
lea
in
add
ret
gs
cld
loop
sbb
loopne
and
insl
mov
in
sub
mov
stos
and
outsl
sbb
lahf
movsl
ret
inc
jmp
iret
mov
push
xchg
imul
scas
xor
ljmp
jae
jg
mov
call
sbb
repz
add
stos
ret
inc
jo
lret
mov
mov
xorl
movsl
sbb
and
jo
mov
jbe
jg
addl
jmp
xor
aad
lret
test
loopne
jne
xchg
mov
xor
aad
orb
sbb
pop
data16
add
pop
sbb
and
scas
out
xchg
cmp
or
inc
jbe
mov
test
jecxz
rolb
pusha
fildll
popf
fs
add
xchg
into
xor
jmp
pop
xor
in
sub
and
sbb
jle
les
add
rcl
repnz
js
or
xor
sub
lret
jne
dec
xchg
jno
rolb
loope
mov
roll
pop
add
aam
xchg
push
xor
repz
in
in
jmp
inc
xchg
shlb
les
adc
xchg
xor
out
mov
sarl
test
dec
pop
fistps
xchg
jns
cmpsl
or
scas
scas
pop
ljmp
int3
gs
jg
sti
cmp
add
sbb
fldt
cli
arpl
fstps
pop
dec
add
js
jbe
sub
mov
sub
test
pop
jne
into
popf
je
mov
clc
add
add
xchg
cltd
fimull
fisubl
into
or
enter
cmpl
lods
les
xor
jae
mov
mov
enter
in
inc
push
int3
cld
pusha
orl
rorb
shlb
je
adc
add
into
xchg
in
mov
rol
push
xchg
je
dec
insb
lock
popa
adc
std
cmp
xor
mov
xchg
jo
jmp
loopne
sub
jae
mov
or
insb
xchg
cmpsb
xchg
cmp
loope
aad
push
roll
pop
dec
imull
filds
xor
jge
cmp
or
xor
orl
ds
add
mov
int3
cmp
push
ss
mov
aaa
shlb
cmp
in
inc
sbb
sbb
sbb
and
sahf
ja
jle
mov
and
outsb
jecxz
jno
idiv
push
fistpll
das
stc
shl
cmp
cmp
stc
xchg
stos
pushf
add
add
dec
xor
sub
int
jnp
or
mov
aad
or
adc
dec
xlat
add
sti
mov
or
inc
adc
sub
cmp
and
jbe
lods
and
lahf
das
lahf
nop
cmp
loopne,pt
add
jae
mov
adc
xchg
icebp
mov
pop
scas
in
mov
push
jl
add
jg
enter
or
jne
pop
xor
mov
pop
jle
icebp
mov
mov
jne
mov
mov
push
sbb
push
test
addr16
ja
inc
lds
getsec
mov
loopne
mov
addr16
add
cmp
lea
lea
inc
add
inc
inc
ror
insb
mov
scas
lods
and
xor
lret
test
call
mov
fldenv
pop
jae
and
stos
pop
or
dec
mov
sub
inc
movsb
xor
mov
add
adc
push
mov
sbb
test
pushf
add
xchg
and
fiaddl
adc
test
sbb
lret
sbb
cmpl
aad
loop
out
imul
mov
lcall
in
sbb
test
lahf
fwait
inc
jnp
xchg
jb
test
cmpl
mov
mov
and
mov
daa
add
xor
adc
or
inc
ds
push
mov
mov
mov
leave
jbe
push
push
std
dec
shlb
xlat
sbb
jnp
mov
mov
ret
gs
push
mov
xor
cmpsl
and
or
aaa
icebp
hlt
xor
xchg
lods
cmp
loope
int
sbb
push
jb
inc
mov
add
push
popl
in
cltd
repz
jl
inc
jno
adc
fisttpll
or
adc
push
sahf
pop
mov
mov
loope
add
sbb
dec
mov
xchg
js
call
push
sti
push
xor
mov
dec
mov
enter
clc
xchg
pop
and
mov
jnp
cmovnp
dec
sub
ss
mov
push
pop
xchg
stos
dec
lock
mov
xchg
push
sbb
cmp
ret
mov
jmp
lods
fstpt
in
pop
push
sub
cmp
das
or
sbb
dec
aad
repz
add
cmp
xchg
inc
xor
add
outsb
xchg
xor
mul
inc
xchg
insl
ret
sahf
bsf
xor
mov
push
es
cmp
leave
mov
adc
nop
cmp
and
ljmp
xchg
sbbl
sub
sub
int
lea
stos
pop
loopne
pop
jmp
cmp
add
xchg
inc
js
cmp
adc
fstps
jo
fs
pop
jbe
inc
orb
push
test
or
push
cmp
pop
push
xor
sub
cltd
push
jle
jo
imull
pop
xorb
lret
mov
enter
mov
cli
xor
out
jnp
add
ljmp
out
jb
nop
inc
mov
nop
repnz
xchg
and
inc
iret
icebp
jae
and
rorb
lahf
sub
in
aad
scas
sarl
and
push
jecxz
icebp
rorb
outsb
icebp
sub
jno
lret
xchg
adc
sub
jae
aam
pop
ret
sahf
mov
mov
push
lret
sbb
mov
pop
xor
arpl
xchg
adc
dec
in
pusha
cmc
loopne
mov
les
es
aas
xchg
lods
shll
jmp
fld1
in
xor
mov
and
pop
fdivl
cmpsb
xchg
nop
imul
or
cld
push
hlt
addr16
sub
cmp
xor
stos
jle
add
fadds
push
movsl
test
int3
mov
loope
sarb
xchg
and
push
sahf
and
sbbl
fs
sbb
or
gs
cmp
fadds
push
scas
inc
ret
mov
fistps
int
push
xchg
cld
pop
adc
jns
test
imul
sbb
mov
sti
leave
push
pop
jne
xchg
int
xlat
lock
pop
lods
jo
loopne
fidivs
xchg
cwtl
pop
mov
push
sbb
aam
dec
pop
in
add
add
mov
je
jnp
mov
cs
icebp
inc
das
mov
fcompl
cmp
mov
adc
negl
pusha
fistpl
popa
pop
lds
lahf
push
imul
fistps
data16
shl
pop
mov
adc
mov
push
and
jle
dec
adc
or
cmpsb
pop
add
push
lcall
sub
mov
ja
adc
push
pop
sbb
std
adc
imul
imul
xor
mov
xor
gs
lea
ljmp
jle
sub
mov
mov
mov
adc
test
pop
cmp
sbb
fwait
nop
jecxz
inc
xor
in
test
add
cltd
push
sbb
pop
sub
roll
jo
sbb
ss
mov
flds
enter
mov
mov
and
add
aas
jb
aam
nop
gs
xchg
mov
loop
fnstsw
mov
insl
loope
loopne
sub
imul
inc
aas
and
dec
lods
call
cmc
mov
dec
rorb
push
ret
cmpsl
xchg
pop
mov
adc
push
bswap
mov
aad
mov
ja
cltd
pop
mov
negl
mov
das
mov
or
sar
lock
or
scas
fs
in
test
dec
ljmp
mov
jmp
jns
ffreep
jbe
xor
xchg
xchg
pop
sahf
sub
aas
aam
and
stos
call
into
leave
shll
sub
cmpsb
cwtl
arpl
dec
xchg
outsl
inc
outsb
cmpsl
popf
int3
adc
sub
pushf
xor
push
or
dec
pop
mov
ljmp
push
jmp
cli
aaa
frstor
inc
cmp
cmp
pusha
in
cwtl
push
push
notl
xchg
je
cwtl
stos
jo
loop
jecxz
add
es
jb
sbb
clc
lods
cltd
sti
std
pop
mov
jns
jecxz
or
cltd
shrb
daa
sbb
or
inc
xorl
lcall
push
mov
fisubs
jnp
dec
enter
and
aad
xor
push
rclb
jle
xchg
lahf
aad
add
add
push
outsb
in
fildll
pop
lret
in
jns
mov
gs
or
xchg
inc
sbb
mov
add
xor
fs
jmp
jmp
dec
movsb
or
imul
pop
xor
and
pusha
add
fsubr
fwait
insl
xor
and
mov
adc
sbb
jl
pop
cmp
leave
stc
inc
mov
pop
dec
lret
mov
xor
jg
pop
fcmovnb
cs
push
jg
inc
stos
mov
cmpsb
cmp
icebp
sbb
in
lds
mov
hlt
and
adc
adc
mov
cltd
mov
mov
loop
push
inc
in
mov
xchg
in
out
popf
in
cli
and
in
adc
mov
inc
pusha
add
lds
pop
pop
fstpl
sub
lcall
dec
jp
inc
mov
into
cmp
dec
imul
sbb
jmp
pop
inc
repz
push
xor
xlat
lret
or
ja
dec
cmp
insl
cmp
sbb
add
mov
jp
push
add
jnp
movsb
add
fstpl
add
sub
push
mov
mov
mov
mov
mov
cs
cld
fsubl
stos
xorb
push
in
xchg
lods
ficoml
cmpsl
shlb
mov
adc
push
aam
enter
mov
and
movl
scas
pop
sbb
mov
arpl
ret
xor
shlb
aam
idiv
stc
adc
les
sti
xchg
inc
adc
mov
pop
inc
je
adc
ds
inc
push
and
dec
xchg
push
dec
dec
adc
rcrb
sbb
dec
stos
aad
ret
insl
xchg
test
xlat
pusha
cmp
xlat
lret
lcall
pop
rclb
push
inc
and
mov
loop
les
push
lret
frstor
movsb
gs
into
addr16
int
rcrb
jbe
loop
test
iret
pop
jge
xor
push
out
mov
mov
je
pmulhw
lret
pushf
adc
pop
ficomps
inc
push
pop
mov
mov
push
in
and
call
dec
ficomps
adc
enter
lds
xorl
cmp
xor
inc
push
dec
sbb
push
popa
dec
cmp
ja
dec
xor
loop
dec
stos
xor
push
pop
shll
pandn
add
dec
inc
inc
xor
xor
sbb
pop
push
hlt
into
shrb
inc
imul
stc
and
sub
xchg
bound
loopne
sti
data16
mov
add
inc
out
in
jae
std
ljmp
les
xor
daa
ss
movl
inc
pop
les
mov
adc
outsl
xchg
xchg
sub
jge
loopne
pop
jmp
inc
sbb
mov
aam
xchg
call
mov
pushf
jecxz
sbb
cld
sub
push
push
sbb
sub
sbb
shlb
adc
cli
add
sbb
jmp
dec
xorb
jno
jns
mov
ret
sbb
fsubl
psllw
mov
ss
xor
jecxz
pop
popa
out
iret
in
pusha
leave
sti
movsb
test
pop
fldcw
into
pop
arpl
daa
je
pop
cvttps2pi
mov
aam
jmp
loopne
mov
push
and
or
cwtl
test
xlat
dec
mov
sbb
aas
ljmp
fnstenv
pop
nop
and
shll
repz
data16
mov
cmp
push
cmpsl
xlat
mov
push
xchg
in
mov
push
lea
dec
pushf
and
mov
push
jp
sub
adc
push
sbb
xor
mov
test
jge
cmc
and
adc
push
popf
push
mov
mov
iret
pop
xor
xchg
rolb
push
mov
push
pop
push
lods
pop
adc
leave
adc
imul
sbb
mov
xchg
jmp
sub
loopne
leave
testl
ss
pop
adc
xor
in
cmp
jae
shll
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
es
ret
xchg
das
dec
scas
iret
aad
aad
xor
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
