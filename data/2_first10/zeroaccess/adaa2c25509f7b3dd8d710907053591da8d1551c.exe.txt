mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
xor
cmp
push
add
jmp
mov
ffree
xor
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
sbb
push
repnz
pop
in
mov
mov
mov
and
push
adc
leave
dec
fstpt
adcl
push
dec
aad
negb
xchg
inc
jne
lea
iret
aas
sbb
xchg
mov
push
push
mov
dec
pop
jge
xchg
mov
dec
dec
aad
loopne
jge
pop
adc
mov
dec
mov
cmp
imul
fucomip
adc
out
jl
xchg
ret
sbb
ret
xor
fisubrl
add
xchg
mov
lcall
and
out
mov
xchg
push
enter
mov
inc
add
icebp
and
loop
inc
jmp
inc
lret
dec
fldcw
jge
add
fs
jg
test
cld
mov
lret
xlat
rclb
push
xorl
mov
loope
in
inc
out
rclb
mov
aas
jl
cmp
fadd
adc
xor
cld
les
repnz
jne
cmp
jmp
jne
stos
or
aam
mov
jl
xchg
ja
xchg
stos
loop
testb
scas
test
clc
fwait
mov
loope
int3
lods
fdivrs
int3
dec
cltd
mov
enter
adc
icebp
jmp
int
shl
or
clc
add
push
es
and
movsl
pop
in
sbb
push
inc
outsb
xchg
test
lods
comiss
mov
jecxz
out
xchg
xchg
pop
xchg
or
dec
xchg
ret
test
xacquire
rcl
push
adc
sahf
dec
in
repz
inc
shrb
add
dec
cmp
ret
mov
fbstp
in
or
pop
jb
fwait
cmpsl
mov
shrl
mov
stc
and
shlb
add
xor
loop
and
cmpsb
add
decl
pop
mov
dec
int
andl
adc
xchg
jmp
out
imul
imul
imul
push
leave
sahf
pop
out
mov
push
movsl
xor
outsl
inc
sub
cld
scas
add
cmpsl
dec
inc
sahf
fidivrs
jno
lahf
jg
ljmp
sub
les
shlb
repnz
xor
int
xor
aaa
stos
jbe
cs
jno
mov
push
int3
lock
movsb
fstl
lahf
fwait
xor
cmp
xor
xor
xchg
loop
loope
xchg
dec
pop
add
sub
inc
insl
adc
dec
aad
into
repnz
push
mov
test
cmc
push
and
pushf
stos
mov
jb
sub
jo
test
lods
xchg
js
jbe
xor
xchg
lds
ret
xor
adc
push
imul
inc
add
std
pop
jae
fisubrs
imulb
jge
push
sbbl
call
fadds
arpl
imul
dec
imul
or
dec
lock
mov
xor
imul
mov
mov
add
sub
stos
and
jns
aad
int3
xor
mov
push
mov
popa
loope
in
dec
adc
cltd
pop
aad
xchg
sub
xchg
mov
iret
mov
lret
aam
sahf
dec
add
pop
rcrl
dec
ret
mov
mov
jge
out
ror
jae
out
or
clc
jle
push
jno
stos
mov
sahf
loope
dec
push
stc
aad
fwait
jbe
ss
inc
icebp
and
xlat
stos
std
leave
cli
mov
jge
inc
mov
aam
push
mov
jg
mov
cmp
push
add
aam
daa
dec
arpl
scas
dec
ret
adc
push
inc
arpl
in
inc
push
inc
xor
les
insl
sub
xlat
jbe
mov
cmp
or
mov
xor
and
sbb
jmp
lret
rcrl
loope
cmp
arpl
jl
sub
sub
jne
mov
sbb
adc
les
push
pop
mov
mov
shlb
rcrl
mov
jno
mov
push
cmp
dec
dec
lea
add
cltd
push
das
dec
inc
insb
cwtl
push
xchg
nop
and
popa
or
pushl
and
fmulp
or
push
int3
out
icebp
pop
adc
jo
sbb
cmpsb
xor
outsb
or
cwtl
dec
inc
fcompp
adcb
mov
adc
mov
call
cmp
mov
push
pop
ficoml
pushf
xchg
jb
sub
mov
mov
ss
adc
and
dec
cmpsb
mov
mov
imul
cmp
pusha
adc
pop
jb
or
fstl
aam
jns
mov
bound
ds
dec
test
add
jp
cmp
mov
sub
leave
pop
arpl
pop
ljmp
adc
xor
inc
inc
andl
in
sub
fidivrs
jmp
pushl
jle
test
lock
inc
sbb
sbbl
and
shrl
sbb
data16
pop
std
mov
outsl
lahf
out
push
pop
pop
ret
mov
out
jp
adc
int
daa
xchg
repz
push
div
cwtl
mull
pop
hlt
cmp
dec
subb
mov
imul
mov
mov
lahf
xor
push
rcrb
fdivl
or
fucom
inc
push
movsl
lods
cmpl
xor
lock
mov
jmp
sahf
push
and
push
jle
arpl
xchg
sarl
fsubs
sub
mov
fdivrl
or
adc
gs
lods
lahf
xor
or
xchg
enter
mov
test
jo
int
jae
pop
lcall
nop
cmpsb
lods
mov
mov
jmp
sbb
xchg
out
popa
lea
clc
shrl
mov
fwait
cmp
adc
lock
xchg
xchg
rclb
jns
lock
je
xorl
jbe
mov
test
loop
xchg
cmpsl
xchg
repnz
adc
or
cmp
push
in
iret
xchg
rep
fdivrp
leave
push
jmp
cmp
fisttpl
loope
repnz
add
mov
aaa
push
jg
aaa
xchg
pop
imul
cmp
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
cvttps2pi
xchg
outsl
popf
inc
xchg
std
sbb
scas
mov
fldt
push
rcr
imul
dec
mov
sub
je
dec
xlat
push
xchg
xor
fwait
inc
and
pop
add
sub
lods
in
jl
sbbl
pop
mov
aad
fbstp
out
cmpsb
ss
stos
xor
mov
stc
pusha
pop
or
and
pop
cmp
hlt
es
je
mov
mov
push
pop
loope
sbb
cmp
adc
xchg
lahf
add
xchg
dec
xchg
shlb
int
mov
fsts
add
jns
dec
add
std
ss
aas
mov
mov
ret
xchg
pusha
test
cs
push
xchg
lcall
and
out
in
push
push
in
pop
add
push
testb
in
adc
test
lcall
shll
pop
dec
push
fidivrs
lea
sub
cmp
rol
in
xor
jns
add
adc
inc
cwtl
adc
lea
test
dec
es
jmp
xchg
aam
ss
shlb
roll
xchg
dec
lret
pop
or
popf
dec
or
movsb
add
jmp
dec
in
push
outsl
inc
inc
sbb
xor
cmp
inc
data16
xchg
lods
mov
mov
pop
mov
call
test
dec
in
jno
cmpsb
pusha
sub
xor
outsl
xchg
jmp
and
cmovg
mov
xor
test
cmpsb
mov
push
pop
mov
orl
cmpsl
lcall
xchg
inc
jl
add
xor
test
push
cmp
pop
push
sti
sti
cs
mov
inc
jp
out
cs
jo
roll
fbld
mov
cwtl
xchg
mov
pop
cmp
in
mov
sub
sub
push
mov
fistpl
push
sub
sbb
roll
cmpsl
jge
jns
stc
das
mov
repz
scas
and
push
jge
pop
mov
mov
dec
mov
pop
jecxz
ja
mov
sbb
roll
mov
test
push
shl
aad
scas
add
lret
jne
mov
push
cltd
test
movsl
and
out
mov
pop
imul
mov
insb
out
sbb
mov
sbb
sti
jp
push
dec
mov
outsl
jns
in
or
jno
add
ss
in
xor
sbb
out
mov
xchg
xchg
xchg
push
inc
or
xchg
xor
imul
or
jl
dec
stc
add
notl
dec
ret
lahf
xorb
ficoml
js
fisttpll
negl
add
push
and
dec
fdivrs
push
rorb
test
gs
push
xor
xchg
dec
imul
out
inc
pop
pop
adc
jns
leave
cmpsl
testl
insb
push
cmp
std
mov
and
imul
jo
mov
mov
lods
push
mov
test
mov
test
bound
add
aam
nop
rcr
mov
lahf
ja
sub
xor
push
imul
push
jbe
pop
dec
xlat
and
cli
out
adc
sbb
cmpsl
mov
xchg
push
enter
negl
and
adc
inc
xor
sbb
jb
xchg
cmp
addr16
push
mov
inc
cli
jmp
jecxz
cltd
cmp
jmp
dec
dec
call
movsb
sarb
fisttpll
push
jbe
pushf
das
adc
insl
and
mov
and
and
mov
jbe
sti
sti
ja
stos
mov
mov
add
xchg
repz
xchg
sti
inc
cs
xchg
rcrb
dec
scas
inc
xlat
xchg
cli
pop
nop
pushf
xchg
xchg
jns
insl
bound
or
pusha
push
sub
nop
pop
loop
ret
repnz
adc
test
fxch
cmp
repz
ss
mov
loope
in
iret
add
aas
cmpb
xor
xor
call
inc
xor
mov
repnz
jns
loopne
mov
pop
aas
jbe
js
ret
push
xlat
jb
sbb
jecxz
xor
pop
push
jns
enter
stc
addr16
bound
fwait
mov
stc
or
addb
icebp
insl
sbb
sub
xor
les
mov
mov
movsb
psubb
fisttps
scas
dec
mov
dec
test
call
sub
push
insb
mov
inc
push
pop
push
mov
pop
nop
mov
xchg
mov
fidivs
xchg
push
jge
xor
pop
push
pop
xor
popf
pop
cmpsb
jle
insb
shlb
sbb
mov
fcom
fs
scas
dec
add
push
pop
add
lock
iret
jl
loope
adc
les
mov
insb
dec
sbb
and
add
jns
xor
pusha
es
movsb
shlb
cmp
and
and
mov
testl
fsubl
inc
sub
repz
jne
popf
orl
jne
adc
jns
mov
outsl
cmp
cmp
shlb
lods
push
cmc
pop
mov
je
inc
jmp
ljmp
pop
mov
imul
inc
add
cmp
mov
iret
ds
ja
jg
push
mov
iret
lds
sbb
mov
jae
cmc
dec
sbb
mov
outsl
xchg
mov
leave
imul
xchg
imul
pop
mov
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
bndstx
loope
int3
clc
mov
stos
bound
hlt
stos
mov
int3
test
or
ljmp
pop
pop
jp
insb
mov
sti
out
imul
push
leave
add
stos
mov
jae
fstpt
add
jno
stos
sahf
add
xchg
inc
push
jbe
mov
adc
xchg
sarl
es
rcrl
int3
push
daa
push
popf
in
and
test
les
cmp
cld
jns
push
rcll
or
inc
adc
inc
out
ljmp
test
mov
mov
mov
jp
cld
stos
ss
shll
push
sub
dec
pushl
call
fcom
pop
jae
mov
jne
xchg
js
xchg
je
sbb
or
adc
add
add
aad
mov
dec
adc
mov
ds
arpl
lds
push
aas
push
adc
sbbb
ss
lods
iret
test
lods
ds
jle
sahf
adc
xor
ds
cmpsl
mov
xor
jns
lret
in
test
and
stc
ja
sbb
jle
pop
mov
hlt
fbstp
jne
popa
and
adc
sub
cmpsb
cmp
rcrl
push
mov
push
mov
clc
das
roll
xor
arpl
dec
test
mov
jne
and
xchg
std
sub
jbe
ljmp
sti
mov
sub
or
bound
cmp
mov
xor
inc
jp
mov
sbb
xchg
fldz
in
push
in
and
sti
mov
fidivrl
xchg
mov
cs
call
xchg
daa
rorl
jmp
sbb
xlat
push
and
loope
hlt
fbstp
int
arpl
pop
popa
adc
xlat
mov
mov
add
cmp
xchg
inc
inc
inc
mov
xchg
lea
push
add
push
xor
pop
push
data16
sub
pop
loopne
pop
mov
rorb
lcall
shlb
sahf
je
orb
pusha
dec
fnstsw
stos
dec
stos
jo
pop
sub
int
fldenv
lret
pop
arpl
cwtl
shr
cmp
sub
rolb
or
jle
das
fs
lret
fidivrl
mov
adc
dec
pop
xchg
lock
sub
push
cmp
mov
mov
idivb
or
mov
repz
sub
xchg
imul
or
hlt
add
shr
mov
mov
imul
outsl
loop
adc
push
or
pop
in
sbb
bound
hlt
cmc
pop
aam
xlat
xchg
jmp
inc
jmp
outsb
lcall
fsts
andl
mov
inc
js
in
dec
mov
xor
sti
andl
push
scas
xorl
mov
jb
or
aad
je
in
mov
sbbl
mov
or
stos
pop
push
mov
jb
mov
insb
xor
jae
movsb
scas
lods
or
xchg
jecxz
dec
mov
mov
pop
aaa
call
and
sub
and
hlt
pop
mov
jge
sbb
or
test
inc
push
shrl
out
push
imul
sub
lock
imul
push
push
cmc
lea
arpl
xchg
lret
xor
jno
fdivp
lock
sbb
push
hlt
xchg
lods
ja
inc
and
ds
cmp
push
cld
pop
sbb
test
mov
jle
inc
repz
imul
loop
xchg
xchg
sbb
mov
push
sub
insb
mov
sbb
stos
jnp
and
mov
sbb
int
mov
testl
or
stos
mov
repnz
sub
or
mov
or
adc
lret
xchg
lcall
mov
fnstsw
pusha
out
fcmove
imul
sbb
inc
sarw
jns
out
nop
rorl
lods
lods
push
test
ljmp
enter
push
pop
add
xchg
push
ds
and
pop
inc
jecxz
in
add
jo
add
lds
test
inc
jp
dec
push
fiadds
imul
sbb
push
lds
xor
dec
das
mov
mov
je
daa
sub
dec
fsubs
push
fcomip
clc
xor
cmp
xor
and
outsb
push
rorb
inc
pop
cmp
incl
xchg
out
mov
nop
push
cmp
cmp
or
lret
adc
push
fisttps
pusha
dec
pop
lea
dec
pop
push
andl
mov
and
jecxz
pop
lods
ljmp
and
xchg
lret
fnstenv
insb
test
dec
test
pushf
daa
sbb
xor
mov
sti
adc
xor
testb
cmpsl
scas
mov
xor
mov
add
in
lds
outsl
dec
fwait
xchg
push
cmpsb
les
insl
in
jmp
popa
in
in
aam
cmp
cld
inc
in
lret
cli
les
test
xchg
push
pop
dec
push
out
xchg
sub
pop
inc
daa
xchg
mov
cmp
pop
out
xchg
dec
rol
dec
and
pop
xchg
sub
push
nop
or
jmp
hlt
cmp
mov
popl
jg
hlt
shll
movsb
rcr
loopne
sub
inc
cli
daa
jg
jne
lret
mov
add
ret
push
dec
lahf
sub
mov
in
ljmp
xor
stos
ret
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
mov
dec
xchg
fimuls
pinsrw
wrmsr
lret
mov
or
stc
ja
ret
imul
jp
andl
pop
pop
or
bound
ret
jmp
pop
adc
xor
lea
add
mov
jbe
mov
imul
lret
add
stos
mov
mov
or
mov
xchg
ficompl
rep
pop
mov
mov
mov
cmp
mov
lods
dec
cmp
aad
test
xchg
add
outsb
fsubs
leave
into
xor
test
mov
lea
cwtl
or
adc
sub
push
mov
shrl
adc
push
pop
inc
aaa
inc
dec
cld
int3
pusha
xchg
sbbl
pop
mov
pushfw
cmpsb
sahf
cli
cmc
outsl
add
int
das
cmc
jl
push
ret
jnp
and
lahf
or
push
mov
or
gs
test
aad
je
push
xchg
enter
rol
mov
and
stos
push
std
cmp
test
mov
mov
xchg
mov
cmpsb
xor
push
lret
jnp
mov
adc
fcmovb
dec
xchg
push
xlat
xchg
int3
inc
cwtl
or
int
repnz
mov
xchg
repz
inc
notl
stos
dec
push
dec
mov
add
push
aad
jns
lret
pop
sbb
pop
repnz
movsl
pushf
xchg
in
jne
adc
dec
xchg
dec
or
mov
shrl
add
jmp
jge
mov
mov
dec
pop
mov
and
insl
jecxz
mov
inc
in
js
into
cmp
popa
adc
insl
into
fcmovnu
cmp
je
jae
xchg
repz
push
scas
cmc
rcll
sub
sub
inc
sarl
stc
vmulsd
pop
add
loope
mulb
mov
xlat
adc
mov
sub
ficoms
and
and
mov
cmp
outsl
sahf
sub
xor
mov
test
mov
stos
hlt
pop
mov
cmpsl
in
inc
iret
pop
adc
cli
push
movsb
rcrl
xor
rcrb
dec
ss
adc
lret
popl
enter
and
push
aas
outsl
gs
xchg
shll
mov
enter
mov
lods
mov
daa
stc
or
mov
pop
je
and
lods
mov
or
xchg
cmp
aas
xor
mov
add
xor
imul
push
test
pop
mov
adcl
push
push
push
add
pop
jbe
shlb
mov
dec
loope
jge
pop
shll
cmc
xchg
out
add
mov
jg
xor
into
mov
xor
stos
pop
aam
pop
leave
sbb
push
inc
add
cltd
ljmp
stos
cmc
push
out
test
call
loope
sub
mov
xor
pop
orl
xorl
pop
jb
sti
sub
mov
xor
or
fwait
adc
mov
cs
test
xor
mov
shr
or
mov
loopne
jne
aaa
sub
pop
outsl
mov
mov
loopne
pop
out
subl
adc
fwait
cmp
clc
and
jge
arpl
fsubl
arpl
lods
mov
sub
pushf
mov
mov
repz
pusha
or
cli
add
xchg
xor
jmp
or
mull
xor
inc
fisubs
inc
adc
mov
int
xor
jle
fisttpl
mov
lods
movsl
pusha
mov
loopne
xchg
or
mov
hlt
jg
testb
out
stos
insb
pop
sub
pop
fbld
mov
out
xchg
aaa
adcl
jp
add
sbb
ss
inc
jbe
mov
dec
ret
jno
cmc
sbb
mov
or
push
test
pop
fsubl
mov
pop
scas
and
push
arpl
xor
dec
pop
and
add
cmp
add
inc
test
sbb
lret
lcall
fnstsw
jno
fnstcw
fsubr
sbb
sahf
dec
loop
add
or
sub
adc
add
mov
or
xchg
pop
sub
stc
scas
pop
aam
mov
sbb
adc
stos
push
mov
mov
in
pop
dec
xchg
scas
add
ja
mov
inc
jb
aad
sbb
cmpsl
sti
mov
mov
add
mov
sub
fnsave
fildl
aad
xlat
and
adc
xchg
add
mov
inc
call
test
jno
xchg
shlb
jne
jbe
xchg
cld
shll
ret
testl
or
jg
loopne
mov
ffreep
pop
and
or
add
adc
sub
jmp
dec
and
sbb
add
pop
out
mov
popf
inc
inc
push
jmp
aad
dec
mov
das
lea
cs
mov
cwtl
jne
inc
shlb
pop
inc
std
ja
outsb
jp
enter
inc
nop
mov
add
faddp
mov
jne
xor
mov
jmp
stc
inc
sub
push
insl
xor
fcmovb
jnp
xor
std
aas
ljmp
mov
or
dec
mov
mov
roll
je
mov
shl
cltd
loop
adc
cli
insb
mov
pop
outsw
pop
test
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
repz
les
push
fwait
push
icebp
xchg
adc
out
aas
fnstcw
dec
ja
and
jo
xor
stos
cmp
sub
and
into
ret
xor
cwtl
push
enter
loope
pushf
adc
mov
int
fwait
mov
loopne
cmp
and
add
mov
gs
stos
mov
push
aam
repz
xchg
jnp
jg
rclb
test
test
mov
mov
dec
pop
sahf
jnp
jg
imul
mov
pop
ret
xlat
inc
jp
call
cmp
sub
inc
clc
sbb
adc
xor
mov
out
outsb
pop
sub
jnp
adc
pop
sbb
push
xor
xor
dec
lret
subl
movsb
add
mov
dec
lcall
dec
xchg
testb
mov
stc
loop
or
xchg
sti
mov
or
and
sbb
sub
clc
xor
mov
or
dec
add
jae
fnstenv
bound
in
or
mov
fstps
xchg
int
shlb
sbb
cmp
mov
loopne
adc
xchg
daa
insb
xor
adc
mov
xorl
sub
push
cmp
fmul
gs
outsb
mov
and
bound
jge
cmp
xor
mov
push
cmpsb
addr16
xor
fwait
cltd
pop
cmp
sub
pop
enter
push
test
and
xchg
dec
int3
popl
mov
shlb
xlat
mov
in
cld
cmc
popa
xchg
fstps
jno
inc
lret
xor
aad
cmp
sti
out
pop
dec
xor
jg
rolb
dec
lret
pop
inc
movsb
add
jne
push
adc
mov
inc
test
ja
xchg
adc
mov
mov
jg
or
xchg
jns
stc
clc
xchg
sbbl
mov
inc
stos
cmpsb
xor
fsubrs
push
push
fcomps
cmpsl
cld
shlb
sbb
mov
jo
and
scas
jge
mov
addr16
or
pop
jmp
repnz
loope
jnp
sti
subb
call
sbbb
stos
jg
in
and
xchg
add
xchg
push
mov
push
cmp
sub
and
xor
lds
jae
mov
je
fcoml
ficomps
mov
mov
mov
xor
dec
dec
xchg
call
mov
pop
pushf
pusha
and
scas
hlt
or
lods
adc
mov
aam
mov
lahf
nop
mov
or
rcr
shrl
movsb
loope
dec
and
outsl
imul
cmp
pop
lds
xor
jge
add
push
ret
push
arpl
out
outsb
pop
scas
fwait
adc
dec
mov
rcll
xchg
mov
dec
in
stos
push
jge
repnz
dec
add
or
fs
cmpsb
gs
test
mov
cltd
sbb
mov
mov
aad
rorl
pop
jae
shrb
scas
or
xor
sub
push
jle
sub
pusha
cld
mov
stos
popf
cs
lods
pop
nop
push
lock
shlb
je
cli
xchg
pop
mov
fstpt
ja
add
fs
xchg
fwait
nop
je
mov
ret
into
push
pop
or
dec
out
lods
aad
out
lods
push
pop
aad
xor
je
jl
sub
test
scas
xchg
dec
cmp
xchg
mov
or
sub
inc
mov
xchg
jne
aas
dec
pop
dec
scas
outsl
subl
sar
lods
pop
xor
aad
cmp
fistpl
adc
sbb
push
pop
imul
dec
and
fisubrs
push
repz
ret
jl
mov
or
dec
mov
loope
cmp
rcr
dec
lret
jnp
pop
shl
push
daa
test
cmp
mov
sbb
sbb
loopne
clc
add
mov
pushf
repnz
outsl
or
loop
addr16
and
pop
cmova
jg
push
adc
add
rol
inc
ret
lret
insb
sub
sub
or
lock
mov
test
rcll
js
mov
inc
xchg
jle
mov
pop
aaa
ds
rorl
mov
jp
or
loope
adc
and
adc
mov
fstpl
mov
adc
or
xchg
shll
sbb
mov
adc
cmp
sbb
push
repz
cld
adc
mov
mov
sbb
stc
sbb
movsl
leave
sbb
push
adc
or
insl
leave
jnp
lds
xor
jbe
cmpsl
loopne
push
cltd
hlt
mov
test
shr
andb
mov
pop
xor
xchg
xchg
or
dec
mov
xorb
rcrb
sbb
mov
xchg
test
xor
xchg
sbb
mov
inc
mov
push
idiv
cmpsb
adc
push
clc
sbb
jmp
sub
mov
mov
pop
pop
adc
or
stc
xchg
cmpsl
sbb
sub
jecxz
or
and
push
lcall
cld
bound
pop
mov
fistps
inc
fsubl
xor
mov
add
in
outsl
or
sub
pop
lds
enter
enter
mov
dec
and
je
stos
mov
pushf
jmp
sahf
lahf
test
stos
shrl
fwait
js
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
ss
in
rorb
pinsrw
bsf
ret
cltd
inc
insb
add
push
jg
ljmp
insl
loop
xchg
sub
rcr
sti
gs
sbb
popa
jbe
call
mov
xor
cmp
adc
stos
mov
mov
mov
fbld
jg
sbb
inc
mov
fdivp
cli
mov
arpl
test
adc
fldenv
mov
cmp
je
push
mov
addb
push
adc
iret
inc
lds
mov
push
and
stos
sbb
stos
dec
fdivs
ss
inc
or
ljmp
pop
sbb
scas
cmp
insb
dec
inc
call
push
scas
xchg
xchg
jo
inc
in
aaa
push
outsl
std
mov
pusha
push
pop
xor
jae
adc
and
lea
xor
pop
mov
int
daa
in
pop
cltd
adc
movsl
inc
adc
mov
jns
lret
hlt
test
les
pop
sbb
push
sbb
cmc
clc
sbb
adc
fcoms
cmp
mov
jmp
clc
fwait
je
rol
lods
arpl
and
push
das
shlb
sahf
push
dec
jb
loop
jle
ljmp
jl
inc
adc
subb
stos
xchg
sahf
xchg
cmpsl
adc
into
pop
mov
sub
ljmp
je
mov
pop
arpl
lock
rolb
add
addr16
movsb
sub
adc
jnp
inc
hlt
not
stos
mov
bound
sbb
sahf
mov
les
notb
xor
lcall
in
xchg
pop
scas
bswap
clc
xchg
faddp
jb
fistl
fists
mov
scas
sti
xchg
fcoms
sub
cmpsl
inc
xchg
xor
leave
jg
mov
pop
popf
aad
pop
pop
scas
and
pop
sbb
arpl
mov
and
das
outsl
or
mov
xchg
lret
mov
out
xor
push
pop
cmpsb
hlt
add
sahf
call
push
ror
je
jg
mov
cmp
cmp
push
sbb
fwait
mov
std
outsb
int
dec
push
inc
or
cmp
insl
sti
xchg
popl
jg
xor
inc
jle
lahf
xchg
and
insb
insl
mov
push
arpl
jge
lock
jae
ret
mov
add
and
aas
cltd
and
inc
xchg
xchg
mov
in
adc
daa
xlat
xor
push
scas
test
pop
les
popf
out
test
out
push
mov
xchg
dec
xchg
stos
out
sub
lods
stc
sbb
xchg
jg
loop
arpl
xchg
sbb
stos
mov
sbb
xchg
loope
jns
sub
jge
les
jmp
or
inc
scas
mov
movb
mov
jecxz,pn
inc
ss
fisubrl
sti
cmp
xchg
xchg
cmp
add
jns
adc
test
cmp
daa
sti
aad
clc
adc
cmp
imul
scas
and
sahf
fldt
lcall
jo
popl
xchg
and
jns
push
shrb
inc
cwtl
xchg
mov
jno
xchg
fldt
lods
or
mov
aam
loope
aas
jg
loopne
fiaddl
enter
sbb
cli
xor
fidivrs
push
jg
cmp
push
cmp
es
repz
loopne
aas
and
jns
sub
out
jle
mov
push
xor
sbb
sub
aas
call
and
pop
rcrb
clc
int3
xor
fstpl
mov
or
jae
std
ficompl
lods
xor
dec
pop
sub
jns
stos
call
mov
std
out
in
adcl
and
fildl
push
pop
aam
daa
ret
and
fld
sbb
sti
frstor
sti
scas
pusha
pop
cmp
aam
add
dec
cmpsb
or
mov
fcmovbe
dec
mov
cmp
mov
cmpsb
icebp
inc
jecxz
les
stos
in
das
xchg
mov
mov
xchg
push
or
popa
ljmp
popa
ss
idivb
in
mov
bound
mov
and
stos
mov
aad
or
sarl
sti
jp
enter
cmp
lcall
xor
sti
aas
cmc
dec
dec
movsb
bound
sub
xor
sbb
lahf
cmp
jb
and
xchg
in
mov
sub
arpl
adc
push
inc
xchg
les
push
mov
cmp
sbb
dec
lret
fimull
jle
mov
flds
xor
mov
mov
jg
les
lahf
inc
or
adcb
mov
and
dec
movsl
sbb
cmp
cmp
mov
movsl
std
js
inc
adc
push
adc
test
inc
xor
and
out
push
pop
sbb
lock
daa
lret
fs
pop
jnp
push
test
add
daa
push
mov
mov
cmpl
xchg
push
sub
dec
movsb
negl
pop
mov
or
out
pop
lahf
xchg
mov
bound
or
daa
jno
out
lret
daa
pusha
push
cmp
jmp
les
decl
push
push
cli
xlat
xchg
inc
out
fs
push
inc
adc
shlb
xor
push
fdiv
mov
pop
lret
sub
lret
mov
add
in
test
pop
xchg
cs
jge
inc
adc
jbe
movsl
arpl
pop
lea
cmpsb
leave
leave
or
xor
mov
add
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
jp
push
xchg
add
comiss
mov
int
push
xchg
inc
xchg
push
cmc
push
sbb
pop
jmp
shl
out
mov
cld
lret
sub
in
aad
adc
cltd
xor
push
sbb
in
inc
pop
cmp
arpl
mov
xor
bound
add
pop
cmp
adc
xor
inc
movsl
adc
lret
adc
push
push
xadd
sahf
cmp
out
push
add
mov
test
jp
dec
push
mov
cmp
sub
mov
sti
and
inc
jb
xchg
cmpsb
scas
pop
shr
mov
lods
test
std
mov
cmp
jl
stc
jne
aas
loopne
into
daa
mov
pop
adc
xchg
push
sub
mov
add
out
leave
or
xlat
dec
mul
test
jnp
mov
scas
adc
dec
xchg
mov
clc
sbb
fsubrs
lret
in
dec
dec
ret
sti
mov
lret
test
xchg
ljmp
dec
call
mov
fstps
or
pop
mov
mov
in
mov
negb
imul
adc
mov
popf
jl
add
xor
jp
sahf
into
pop
sbb
subl
cli
mov
mov
insl
popf
cmp
lret
adc
sub
cltd
pop
stos
ss
sub
xor
sbb
jge
movsb
sbb
xchg
sub
in
imul
cwtl
dec
jge
cli
stos
adc
hlt
lds
mov
or
inc
jb
push
repz
cmp
dec
in
imul
test
mov
ds
adc
insb
dec
in
aas
jb
ret
sar
mov
mov
mov
daa
push
dec
mov
add
shll
aas
js
js
bound
xor
mov
js
dec
outsb
pop
or
xchg
ljmp
pop
jmp
scas
ror
sub
or
orl
xor
pushf
xchg
lds
aad
xchg
int3
lods
fndisi(8087
pop
repz
rcrb
and
push
fdivrl
mov
jb
inc
push
movsl
cmp
or
push
mov
xchg
mov
inc
sti
mov
dec
mov
popa
lret
scas
mov
push
pop
aam
cmp
imul
stos
pusha
int3
nop
sbb
sbb
dec
mov
push
mov
sbb
shrl
faddl
add
fimull
inc
add
push
rcll
xor
fstpl
add
push
adc
push
aad
gs
scas
mov
add
mov
add
loopne
in
push
shlb
dec
ja
repz
xor
xchg
sti
pop
jl
dec
pop
scas
arpl
xor
movsb
inc
adcb
into
rcll
jo
dec
xchg
test
jbe
cmp
cmp
fldenv
or
mov
mov
aad
emms
jne
xor
loop
push
ficomps
mov
mov
stos
inc
push
sbb
push
lds
xchg
or
add
pop
out
dec
inc
or
scas
pop
test
shrb
into
cs
sbb
xchg
ss
bound
dec
or
jbe
xor
inc
test
sub
scas
dec
ret
cmp
stos
adc
mov
lahf
xchg
sub
pop
sub
cmc
mov
cmp
push
and
sub
ljmp
xchg
in
jecxz
cli
outsl
int3
pop
loop
push
adc
stc
lret
fsubrs
push
adc
invd
loopne
xchg
xchg
jne
in
enter
dec
xchg
xchg
sbbl
rol
xlat
lret
xchg
jbe
js
stc
js
or
pop
icebp
scas
loop
aad
xchg
cmp
mov
lret
ja
data16
repz
imul
cmpsb
adc
in
loope
sbb
pop
fldenv
pop
xchg
movsb
mov
jmp
lods
xchg
xchg
xor
jb
sahf
xor
out
mov
dec
mov
loope
mov
and
jp
mov
mov
pop
into
push
inc
xchg
je
gs
mov
rorb
mov
sti
xor
inc
sbb
arpl
addb
cmp
mov
arpl
mov
sar
shll
xchg
iret
mov
sub
dec
sub
dec
pusha
push
mov
dec
in
push
pop
xchg
cld
mov
out
jmp
push
dec
mov
aad
fisubrs
add
adc
prefetchnta
je
mov
lock
xchg
pop
mov
pop
jle
in
call
or
and
jbe
xor
xchg
repz
movsl
or
in
adc
push
mov
fsub
mov
pop
adc
stos
ljmp
stos
mov
lret
orb
cld
mov
xor
jl
aam
arpl
xor
dec
mov
xchg
pop
push
jp
cli
hlt
test
push
xchg
and
push
rcrb
xchg
dec
aas
xlat
es
inc
mov
iret
loopne
test
rcl
lahf
leave
dec
sahf
daa
push
mov
pop
sbb
les
mov
repz
test
call
incb
fwait
idivb
dec
sbb
mov
shlb
orl
dec
mov
mov
adc
push
loop
mov
push
lret
mov
xchg
pop
inc
adc
in
cld
addr16
and
mov
mov
pusha
into
ret
in
adc
lea
daa
aam
ss
pop
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
mov
test
pinsrw
psubq
jae
mov
imulb
xchg
mov
out
test
adc
inc
dec
cmpsl
into
push
push
and
sub
js
sahf
ss
iret
scas
xor
pushf
inc
iret
or
xor
cmc
call
jae
nop
hlt
into
inc
push
lahf
mov
imul
add
mov
ss
and
dec
enter
fstpt
popf
or
imul
jns
pop
adc
xchg
out
adc
ss
sarb
push
outsb
cmp
sub
testb
or
mov
std
insb
lahf
aam
cmpsl
push
sub
pop
pushf
jle
adc
rcl
bound
gs
mov
sub
rcl
daa
aas
pop
das
aad
push
loop
push
idivb
sbb
or
lods
pop
stos
outsl
rolb
jmp
sbb
imul
stos
int
cmp
lret
mov
pop
mov
inc
call
movsl
movsl
mov
insb
sahf
dec
cmpsb
fisttps
inc
cmp
shlb
test
syscall
fldt
inc
aad
andl
mov
dec
gs
push
popf
mov
mov
push
sbb
add
icebp
xchg
jecxz
psubusb
in
adcb
mov
inc
sbb
cld
dec
sub
pop
jmp
stc
sbb
and
dec
lods
or
out
mov
mov
js
adc
ljmp
mov
pop
shrl
mov
repz
dec
loopne
mov
mov
adc
lcall
cld
jp
push
jbe
and
arpl
xor
or
adc
push
mov
pop
mov
dec
stc
cmp
lds
shlb
xchg
or
inc
push
mov
andb
mov
dec
pop
add
and
lods
jo
dec
js
pop
std
mov
push
out
and
xchg
and
mov
testb
addr16
mov
and
mov
or
mov
or
fistpl
xor
lea
fsubrs
fiadds
inc
fs
in
mov
and
inc
cmp
in
lods
lds
mov
mov
dec
lods
inc
out
cmc
xor
and
or
rorb
bound
cmp
leave
xor
pop
sub
or
jle
ds
sbb
fnstcw
sub
push
push
xor
pop
lea
push
cld
sarl
inc
adc
fisubl
push
out
jecxz
mov
xor
push
lcall
into
and
pushf
xchg
rol
mov
cs
push
sahf
and
cmp
ljmp
xchg
and
mov
push
mov
ja
inc
je
inc
inc
mov
roll
inc
into
xor
loope
sub
cltd
out
jl
inc
mov
lahf
cld
aam
push
push
je
pcmpeqd
mov
cs
adc
lea
dec
sahf
test
aad
popf
data16
sarl
imul
dec
jbe
mov
insb
lods
dec
adc
inc
sub
sahf
outsl
cmc
inc
push
mov
aas
push
jne
mov
cmpsl
sbb
xchg
pop
or
movsb
sbb
push
cmp
cmp
lock
push
aas
negb
jnp
ret
in
rorl
test
ljmp
pop
add
test
test
faddl
xor
and
xchg
mov
sbb
mov
mov
xchg
mov
pop
jno
xor
addr16
fildl
pop
into
push
or
push
stos
add
push
xor
mov
stos
stos
aad
add
repnz
adc
fiaddl
scas
lret
ja
push
mov
cwtl
shr
adc
iret
sbb
rcll
push
scas
insl
push
daa
push
push
inc
jge
and
mov
fs
test
ja
pop
jae
sbb
in
adc
pop
sbb
fs
call
stos
add
xchg
mov
push
sub
xor
insb
jnp
ss
pop
gs
mov
or
mov
pop
insb
xor
rol
fsubs
mov
loopne
rcrb
push
and
subl
in
push
or
imul
mov
lods
pop
dec
ss
sub
add
add
stos
int3
shlb
fisubl
sti
cmp
outsb
es
push
jle
insl
cli
mov
xchg
gs
dec
fisubrl
pushf
cld
add
insl
sub
popa
adc
inc
in
lret
lahf
cmp
bound
and
lock
add
jno
sbb
inc
stos
fwait
lahf
sub
aad
push
stos
cld
jb
arpl
jg
jne
call
add
sub
rcrl
dec
cmp
shlb
mov
shrb
rolb
mov
mov
xor
sbbb
dec
cld
sbb
adc
sahf
out
dec
jno
clc
cmpl
add
sbb
sub
cld
subb
stc
mov
ds
into
mov
repnz
popa
int3
mov
xlat
inc
pop
push
inc
cmpsb
aam
imul
lods
and
xchg
add
in
fst
push
insb
mov
xchg
loope
inc
jne
jp
sub
rorb
dec
mov
push
andl
jmp
jae
mov
xchg
jnp
mov
imul
and
push
mov
popa
int
and
jo
outsb
xchg
ljmp
lock
movsl
in
sbb
scas
filds
sub
aam
sbb
adc
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
jg
push
mov
les
punpcklbw
daa
cltd
fisubrl
push
sti
test
ljmp
push
xchg
inc
adc
cmp
cmpsb
and
push
ljmp
test
pop
pop
test
push
lock
int3
aaa
addr16
mov
dec
loope
sbb
mov
or
mov
sahf
push
pop
or
sbb
or
pop
leave
hlt
roll
or
inc
cltd
mov
push
inc
push
lods
subb
pushf
xor
icebp
enter
and
sbb
repnz
adc
lcall
mov
sbb
mov
aad
insl
gs
outsl
notl
adc
inc
ss
xor
cwtl
adc
test
std
test
push
stos
cmp
stc
iret
int3
sahf
cmp
xor
insb
mov
jbe
jae
push
in
xchg
jnp
add
test
xlat
nop
mulps
fiaddl
mov
scas
imul
pop
int3
test
jae
les
and
jge
and
jae
and
test
sub
inc
jmp
inc
repnz
ffree
popf
adc
xchg
push
xlat
imul
call
les
loop
test
mov
mov
outsl
fildl
adc
notb
movsl
dec
inc
in
lds
in
in
ljmp
cmpsb
push
call
jno
or
mov
clc
xchg
mov
mov
fisubrs
jns
lret
cmp
cmpsl
cmp
jg
popa
mov
fidivrs
cmc
fs
lret
idivb
stos
adc
xchg
outsl
dec
cmc
jecxz
dec
mov
fildll
sbb
imul
xchg
xchg
mov
jecxz
cmp
rcrb
pop
pop
jbe
inc
clc
push
xor
mov
xchg
addr16
scas
cmpl
push
cmp
sbb
sbb
mov
ljmp
imul
outsl
mov
in
fadd
pop
out
cs
or
stos
pop
push
imul
lods
sbb
xor
push
jmp
mov
popf
mov
das
stc
add
or
cmpsl
insl
xor
or
fwait
and
adc
mov
pop
popf
insl
fisubl
lock
xor
pop
in
bound
sub
mov
add
pop
xchg
mov
movsb
aam
fistps
pmaxsw
mov
xor
pop
into
imul
ret
cmp
mov
xor
movsb
or
ss
mov
aaa
xchg
outsb
dec
stos
mov
lods
push
nop
and
cmpb
ja
std
and
das
xchg
fimull
and
xor
push
or
js
jae
iret
aad
sub
lods
sub
adc
popf
test
and
popf
int
mov
sbb
lret
cmpl
mov
adc
scas
jae
daa
out
leave
sbb
int
mov
ss
or
sbb
lret
cltd
iret
inc
bound
sbb
push
xchg
push
call
out
mov
mov
add
sub
insl
sub
adc
xor
adc
in
mov
insb
cmc
sbb
fucom
clc
push
and
aaa
inc
outsl
clc
aaa
lds
jl
cmpsb
adc
leave
inc
cmp
sbb
sti
xchg
pop
mov
lret
add
gs
jne
or
xchg
sti
push
sub
inc
cs
into
call
lahf
add
loope
insl
adc
cmc
xor
xor
inc
call
bnd
ja
subl
rolb
orl
fistps
xor
mov
inc
mov
cmpsb
mov
inc
mov
out
movsl
lahf
les
pop
sahf
or
into
cltd
or
cmp
cmpb
dec
fdiv
fsts
clc
mov
mov
dec
in
leave
stc
sub
jge
shrb
jmp
addr16
sarb
dec
std
jae
lcall
xor
jne
inc
imul
je
xor
enter
scas
data16
div
loope
sub
push
stc
xor
mov
fwait
fs
pop
mov
cmp
pop
jmp
cmc
xor
push
aaa
jns
enter
mov
pop
fisttpl
mov
stc
pop
outsl
test
cs
adc
lret
mov
mov
mov
cmpsl
shr
and
ds
sub
data16
mov
xchg
or
pop
cld
pop
jo
jp
data16
jge
jge
and
enter
cmp
pop
push
inc
cmp
sub
cmp
cwtl
lret
es
inc
out
inc
inc
insl
or
mov
add
push
dec
push
xor
cs
ljmp
mov
ret
inc
ljmp
int3
jp
inc
mov
les
xlat
push
jb
jecxz
sub
scas
mov
in
ret
push
rclb
sti
or
out
pop
js
inc
adc
pusha
cwtl
adc
into
push
insb
push
inc
or
push
cmp
inc
or
rolb
add
fwait
aaa
push
xor
pop
lcall
pop
mov
lahf
sbb
ret
jl
xchg
push
fmull
mov
cmp
popa
mov
and
and
cmc
sub
enter
leave
pop
in
or
aam
cs
sbb
pop
cmpsl
adc
iret
mov
add
in
pop
std
lds
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
mov
pinsrw
cmovp
cmp
or
xchg
cmpsl
jns
insl
cmp
add
fildl
cmp
xor
jns
sbb
xlat
or
in
inc
jns
fcmovb
xchg
adc
xchg
cmc
pop
xchg
repz
push
lcall
xor
pop
and
loopne
scas
insl
cs
lcall
pop
clc
test
jne
sahf
pop
or
pop
lret
scas
inc
push
lcall
movsl
inc
cli
inc
mov
inc
xor
sarb
push
push
sbb
inc
xchg
stos
scas
std
mov
mov
pop
fldt
xorl
cs
dec
adc
xchg
dec
mov
imul
incl
test
int3
xor
and
in
dec
test
mov
mov
lcall
or
das
pop
xor
inc
lea
xor
stc
cmp
ds
pop
fs
xchg
pop
pop
or
jle
xor
dec
and
scas
and
aam
cmpl
adc
push
hlt
les
sub
cmp
stos
dec
cmp
push
icebp
cmp
repz
sbb
mov
in
jge
lcall
push
adc
xchg
cmc
dec
or
jo
sub
loopne
or
xchg
rcr
lods
das
inc
sarl
scas
leave
std
or
ret
int3
sti
push
in
in
dec
movsl
mov
sub
adc
scas
mov
leave
pop
and
mov
insl
fildl
loop
add
push
aam
ss
jns
enter
and
mov
xor
imul
cld
in
and
repz
orl
std
mov
sbb
dec
repnz
xchg
inc
inc
out
addl
stos
sbb
loope
out
jecxz
xorb
lahf
push
scas
cltd
cs
mov
fstpl
cmp
ret
sbb
or
outsl
out
lret
adc
xchg
lods
fdivs
xchg
rclb
daa
scas
dec
hlt
bound
inc
and
pusha
mov
out
sbb
xor
mov
push
js
cwtl
mov
scas
je
pop
xchg
cmp
addb
xor
and
dec
mov
or
test
leave
mov
sahf
or
mov
out
enter
adc
xchg
cmpsb
in
icebp
pop
xchg
mov
js
fwait
mov
push
jecxz
adc
clc
loope
pop
jnp
mov
push
adc
idiv
push
xor
insb
pop
cld
es
sbb
mov
xchg
cmp
dec
in
outsb
mov
dec
inc
shrb
inc
stos
leave
stos
inc
data16
mov
cli
sbb
xor
jecxz
jmp
sub
mov
lcall
pushf
jae
dec
adc
iret
xchg
xchg
adc
loope
xor
or
and
pop
dec
adcb
movsl
imul
inc
adc
lcall
inc
xchg
jns
cs
mov
dec
lock
mov
fdivrl
sahf
or
gs
and
addr16
adc
test
dec
xchg
pusha
adcb
xchg
movups
stc
icebp
sbb
sub
pop
mov
mov
cltd
cmp
addl
sub
pop
imul
xchg
lret
xor
stos
push
aaa
addr16
mov
mov
add
int3
mov
cli
cmp
pop
scas
sub
adc
sub
adc
xchg
insl
imul
sbb
pop
test
mov
test
lods
int3
jp
outsb
in
push
ljmp
inc
adc
and
outsl
enter
or
lcall
push
lock
mov
test
incb
int3
push
and
aas
dec
add
push
adc
mov
fs
ljmp
add
mov
xor
addr16
bound
jae
dec
xchg
dec
testl
jno
js
cmp
out
mov
shl
jge
mov
lret
cld
cli
cmpsb
jmp
xchg
lahf
fistpl
pop
clc
and
dec
imul
inc
inc
lretw
or
into
jns
cwtl
call
ds
fsts
and
sub
inc
sub
aad
test
dec
mov
mov
aad
add
mov
add
lahf
mov
xor
aas
insl
mov
enter
hlt
rorb
test
and
lcall
imul
add
add
cmp
dec
mov
idivl
add
imul
mov
ret
jb
sahf
repz
add
mov
mov
bound
jo
sub
movsl
js
xor
jnp
mov
lahf
hlt
mov
sbb
aaa
cltd
imul
aad
xor
dec
jl
mov
into
pop
fwait
mov
adc
enter
mov
pop
lret
loop
leave
lcall
fwait
inc
or
iret
pusha
xchg
in
lcall
jmp
mov
ljmp
and
xchg
and
sbb
in
aad
sub
incl
jp
pop
or
icebp
inc
mov
pop
test
aas
jae
in
sbb
pop
mov
mov
cmpsl
mov
sbb
adc
jl
lds
push
pop
xchg
dec
pop
lods
push
sti
fisubs
push
cwtl
jnp
xor
add
mov
jecxz
iret
mov
cmp
scas
das
ret
pop
mov
mov
cmp
and
cmp
inc
sti
dec
in
outsb
in
or
insl
movb
rorl
imul
jne
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
cmpsl
sub
adcl
lret
aad
fwait
nop
or
into
pop
into
adc
pop
ret
movsl
dec
push
cmp
xchg
sub
ljmp
mov
repnz
cmc
xchg
mov
mov
inc
push
rcll
mov
inc
lret
pop
mul
cmp
xchg
xor
cmp
outsb
cmc
cs
test
mov
cli
test
lahf
cmp
push
imul
dec
xchg
out
xchg
push
pop
add
mov
sbb
inc
add
and
adc
cmpsb
pushf
push
scas
add
mov
lds
mov
sub
mov
inc
fstpl
add
push
xlat
mov
inc
mov
cmp
or
dec
jnp
rcll
lcall
mov
xor
mov
pop
sbb
mov
ss
jl
adc
inc
push
arpl
imul
cwtl
mov
sub
or
jo
mov
subb
adc
xchg
adc
lea
jge
sbb
push
test
fdivrs
xor
lea
and
sub
jne
fldz
pop
aas
xor
stc
enter
mov
test
insl
popf
sbb
inc
cmpsl
int
xor
test
jno
and
add
sarl
fdivr
cmp
xchg
leave
stos
push
add
sbb
daa
push
sahf
and
call
shlb
cmpl
filds
dec
xchg
test
mov
xchg
rolb
pusha
clc
mov
jmp
ficoms
aad
dec
jns
fdivrp
mov
pusha
sub
popf
push
sbbb
sub
jbe
cmp
xor
in
rcl
xchg
fiadds
pop
je
mov
rorb
cmc
fsubl
bound
mov
call
aaa
push
iret
and
leave
fildl
mov
movb
in
add
leave
pop
stos
lcall
cltd
mov
les
mov
movl
into
fiadds
mov
or
add
cmp
mov
push
sahf
pop
mov
xor
pop
test
mov
lock
push
xchg
fistpl
mov
push
gs
ds
sbb
dec
out
or
xor
lret
xchg
mov
and
fdivl
repnz
adc
lret
and
imul
lret
push
out
lock
les
pop
add
icebp
sbb
cwtl
mov
add
adc
cmpsb
mov
mov
in
out
add
push
jne
xor
jae
jl
test
dec
or
cmp
stc
addr16
push
dec
enter
cmp
aaa
dec
je
lahf
cld
stc
cmp
mov
loope
lock
ret
scas
sbb
pop
enter
mov
dec
fldl
mov
sbb
push
mov
add
int3
add
lahf
xchg
js
push
stos
pop
jno
mov
les
cld
cmp
pop
leave
jmp
cli
mov
cmc
cli
xchg
icebp
sub
rcl
mov
sbb
mov
int
sti
push
mov
neg
aas
adc
lods
lea
xor
xor
jbe
push
clc
push
xor
xor
add
pop
inc
fsubrl
jo
xor
sbb
mov
mov
out
outsb
add
jnp
leave
ljmp
xor
lahf
in
addr16
push
nop
and
rcr
xchg
lret
inc
sub
mov
adc
lret
inc
xchg
lea
push
loopne
stos
xlat
es
ljmp
and
mov
pop
mov
test
cltd
test
js
adc
jo
xchg
adc
pop
mov
pop
mov
pusha
cmp
mov
push
movsb
les
dec
and
xor
dec
jmp
rcrl
filds
dec
es
popf
dec
scas
jns
dec
and
xchg
jbe
dec
sub
sti
xor
adc
lahf
lldt
outsb
addb
cmpb
sbb
sbb
rclb
aam
scas
les
pop
shrb
rclb
hlt
xchg
add
pushf
iret
mov
pop
push
and
push
mov
and
popa
xchg
mov
mov
mov
mov
shrb
and
jmp
sahf
fcomps
or
aad
mov
fdivl
sbb
out
sbb
add
lret
pop
pop
dec
clc
xchg
jno
jno,pt
sti
icebp
leave
mov
mov
mov
inc
movsl
stc
leave
xchg
clc
xchg
adc
cmp
pop
jno
adc
filds
je
xor
sbb
fsubl
fnstcw
mov
xchg
aas
pop
shl
push
sti
orb
movsb
pop
mov
ret
call
fwait
test
xchg
add
mov
aam
push
and
mov
rcrb
out
mov
dec
push
dec
shl
imull
clc
inc
or
dec
sqrtps
push
push
std
jle
sub
inc
push
clc
dec
pop
lret
lcall
pop
leave
aad
pop
push
inc
in
xor
xor
loope
outsl
test
push
add
in
push
push
mov
adc
call
mov
testl
pop
or
jge
jecxz
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
sbb
js
js
add
repnz
sub
insb
xor
mov
mov
or
cmp
sub
mov
and
and
mov
ret
sub
mov
cmp
and
std
mov
insl
lret
sub
daa
icebp
ret
aas
mov
fs
ja
dec
sub
iret
cmp
lea
mov
push
sub
xrelease
aas
inc
add
shrl
and
jp
cltd
sub
mov
adc
in
loope
mov
or
cmp
sub
das
inc
and
dec
add
loopne
andb
or
sar
fs
push
scas
inc
imul
mov
and
inc
mov
add
stc
sarb
decl
cwtl
add
fidivrl
lods
mov
push
add
lret
xor
fsub
cmp
fcmovnbe
test
push
adc
xlat
mov
popa
fidivrl
and
mov
xor
mov
leave
pop
push
leave
hlt
out
push
jp
test
jle
or
xchg
mov
adc
sbb
imul
jl
mov
je
cld
testb
and
lahf
mov
hlt
iret
jno
dec
cmc
jnp
push
push
pop
dec
push
pop
xchg
or
xchg
out
outsl
add
insl
fstps
daa
fcomip
lds
mov
imul
outsl
sbb
mov
jle
outsb
and
push
lock
push
shll
ss
mov
pop
inc
adc
xor
mov
add
mov
xchg
fs
jecxz
xchg
insb
push
sbb
lea
pop
imul
xor
ss
out
jae
test
std
in
mov
loop
fbld
adc
push
dec
stos
lock
popa
mov
xchg
popf
notb
mull
ds
xchg
sbb
mov
jmp
das
or
enter
jp
pushf
jle
and
int
inc
sbb
push
es
pop
mov
inc
ss
push
mov
pmaxsw
mov
stc
adc
repnz
dec
in
repnz
outsb
in
subl
jae
cmp
int3
cmp
les
out
in
adcb
xchg
adc
ret
js
inc
mov
add
lock
nop
fisubrs
mov
aas
mov
loopne
mov
dec
pop
push
loop
data16
gs
mov
js
pop
or
mov
stos
das
pop
xchg
pop
mov
xchg
xlat
xchg
dec
inc
enter
into
arpl
push
mov
data16
hlt
inc
push
adcl
gs
pop
sbb
sti
push
or
test
gs
mov
cmpl
xlat
loop
iret
scas
in
mov
mov
idivb
push
lcall
adc
push
mov
test
je
adc
mov
fcompl
xchg
inc
insb
and
pushf
cwtl
out
xor
mov
push
push
insb
add
lods
jmp
ds
or
in
mov
and
imul
insb
adcb
jae
dec
sbb
dec
push
jp
out
fimuls
testb
xor
xor
sbb
push
mov
jb
xchg
sbb
adc
dec
in
cmp
scas
movsl
outsl
sbbl
scas
and
xchg
aaa
in
mov
inc
dec
jle
js
negl
out
cli
nop
notb
pop
ljmp
movsl
xchg
js
inc
sbb
pop
mov
iret
lea
push
jb
lods
push
inc
fs
shlb
xchg
sub
mov
add
sub
in
in
scas
imul
sbb
stc
mov
dec
ljmp
xor
dec
sbb
movsl
movsl
push
xor
jmp
dec
xchg
or
adc
mov
pushf
gs
cmp
out
lods
add
or
test
in
cmp
test
xor
loope
cld
pop
inc
jg
sarb
leave
js
mov
xchg
in
mov
fld
popf
add
ja
jl
fsubrl
xor
dec
jmp
sub
lock
or
in
or
mov
adc
gs
ds
inc
nop
cmc
or
or
mov
loop
test
movsb
divl
les
push
divb
push
xlat
fidivrs
ret
fbld
sbb
out
mov
mov
dec
adc
cmc
notl
push
pop
leave
movsb
adc
add
push
add
inc
outsl
mov
addr16
add
and
insb
scas
lock
arpl
repnz
mov
addr16
mov
mov
test
jg
sbb
loopne
inc
jns
adc
in
xchg
test
pop
xor
ss
lock
scas
jns
jae
div
inc
jecxz
mov
fcmovu
sbb
inc
dec
fs
mov
mov
cmp
iret
jmp
xchg
mov
ret
iret
aad
mov
inc
pop
add
addb
jp
cmp
jge
or
pop
dec
inc
es
mov
insb
loopne
call
test
xor
leave
shl
cmpl
pop
lock
cmc
in
mov
out
mov
pushf
mov
adcl
lea
loopne
sbb
nop
dec
pop
andb
add
mov
sub
push
cs
xchg
cs
mov
mulb
call
pop
popa
sub
mov
cmp
test
and
fstl
mov
inc
xchg
outsb
stos
cmp
orb
push
cmp
or
xchg
mov
mov
dec
xor
rolb
dec
lret
cmp
cmp
dec
lods
daa
lods
push
fdivrs
or
cmp
xor
ret
cld
jmp
cmpsb
add
test
jns
fmuls
imul
jg
int3
sarl
sub
cltd
add
pop
fadds
in
xorl
inc
lcall
pop
addr16
add
fwait
stos
sbb
mov
sub
push
ret
aas
icebp
lahf
cmp
loopne
add
shll
xchg
fsub
mov
int
sbbl
push
push
imul
fmuls
mov
hlt
jb
adc
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
std
test
add
push
aam
dec
mov
push
outsl
add
jp
je
pop
arpl
imul
rolb
mov
dec
xchg
pop
fmul
push
lock
and
ret
out
add
sub
adc
sub
ds
data16
loopne
mov
xor
je
jbe
mov
fs
jno
xchg
in
cltd
jle
mov
cmpsb
scas
stos
rcrb
mov
xor
cwtl
cmc
cmp
fwait
sub
fistpll
pusha
out
fsubrs
pop
xchg
sbb
in
push
xchg
mov
jp
mov
lods
rcll
stos
xchg
pop
lret
inc
xor
mov
cli
or
test
jns
repz
sbb
mov
scas
push
pop
loope
mov
addl
in
aas
push
fnstsw
mov
shlb
mov
fwait
and
xor
pop
lahf
mov
push
out
jo
hlt
mov
out
xor
jnp
mov
adc
jmp
enter
mov
inc
or
sbb
inc
addr16
in
je
in
ret
adc
jae
mov
repnz
sbb
add
fdivs
stos
ds
xor
arpl
sub
adcb
iret
je
popa
xchg
or
jae
cmc
das
les
dec
sti
ds
fstl
decb
enter
dec
dec
shl
pop
pop
ret
sub
mov
push
mov
jmp
inc
adc
lock
jge
pop
inc
mov
lods
push
lahf
mov
adc
dec
sub
in
mov
dec
lret
mov
in
lret
ljmp
loope
xor
xor
ja
stos
shlb
in
xchg
and
cli
cli
cs
xchg
adcb
sar
cmp
aas
rcrl
aaa
mov
insl
add
mov
dec
test
stc
xchg
jl
repz
push
push
xlat
insb
lret
pop
sarl
cmp
lahf
mov
add
cmpsl
repnz
cmp
push
pop
xchg
cmp
xlat
and
movsb
xor
sub
imul
popf
scas
addr16
std
mov
data16
adc
mov
mov
pop
cmp
adc
inc
std
and
ja
jge
loopne
les
jl
cmp
faddl
sbb
jno
xchg
clc
imul
std
stos
loopne
xor
and
jbe
add
hlt
aad
out
and
cli
scas
out
sbb
std
in
movsl
pop
mov
mov
rcr
push
add
stos
fmull
pop
xchg
fistl
aaa
jb
xchg
enter
push
inc
push
jecxz
sbb
inc
rol
js
ljmp
sbb
lret
cmpsb
mov
fwait
ss
pop
cmp
inc
mov
cmp
push
add
jae
and
inc
and
orb
mov
inc
js
pop
pop
cmp
fsubrl
std
jg
test
inc
cmp
insb
or
test
sbb
jg
xchg
clc
aaa
dec
pop
mov
gs
xorb
push
out
push
add
std
nop
pop
test
or
or
xchg
cs
lea
jb
xor
test
stos
xor
inc
jmp
adc
movsl
mov
adc
in
shlb
popa
arpl
in
mov
xchg
or
in
inc
sub
dec
and
jmp
xchg
dec
jo
cmpsb
movsl
mov
sbb
imul
cmp
data16
lods
outsb
push
or
or
cmp
xchg
scas
iret
enter
xor
lods
mov
mov
push
inc
sub
fsin
jp
and
mov
push
shlb
mov
jle
gs
sti
test
sbb
sarl
mov
subl
int
into
addr16
adc
nop
mov
fbstp
ljmp
sub
shl
repz
mov
ja
pop
adc
mov
jmp
mov
int
repz
es
xor
enter
mov
lea
push
mov
push
icebp
lock
mov
xchg
test
fmuls
daa
and
ficoms
push
and
hlt
mov
jno
mov
mov
xlat
outsl
jne
dec
inc
push
loopne
in
aad
mov
lcall
scas
loop
fiadds
cmc
add
jbe
int
lret
xchg
cmp
int
test
or
xchg
daa
sub
sbb
mov
adc
aas
add
push
mov
mov
outsb
add
decl
adc
int
jbe
cmp
inc
sarl
outsl
xchg
and
mov
mov
mov
adc
mov
je
aad
jle
mov
imul
das
rolb
sbb
or
pop
jne
cmpsb
in
push
stos
jecxz
clc
inc
stos
in
push
lret
outsl
test
xor
jmp
out
icebp
aad
cmp
je
ret
fadds
add
dec
cmp
enter
xor
scas
cmp
das
inc
scas
mov
add
and
ljmp
pop
pop
icebp
test
sub
jb
mov
ss
fs
dec
in
and
xlat
cmc
sbb
dec
fstl
mov
push
ljmp
or
push
xchg
xlat
ss
cltd
imul
cld
mov
in
mov
push
call
scas
mov
leave
mov
sahf
rcl
pop
and
repnz
and
dec
lret
and
xchg
les
gs
inc
insb
sarb
pop
or
testb
mov
lods
ret
and
adc
add
push
icebp
lret
aad
bound
xchg
or
add
fistps
inc
fistpl
adc
cmp
out
dec
es
jecxz
jne
or
push
adc
fistpll
mov
xchg
std
into
mov
xor
loop
mov
inc
int3
mov
aad
add
sahf
pop
scas
das
daa
or
sbb
aas
sbb
in
mov
mov
enter
ljmp
and
sbb
add
xchg
enter
push
in
cmp
cmp
cmp
orb
pushf
cmp
xor
xor
xchg
repz
sub
jl
int
data16
mov
dec
lods
jg
dec
push
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
push
outsb
pop
js
pop
add
dec
aaa
push
push
popa
cmp
inc
pop
inc
xchg
cmc
enter
jae
je
bound
icebp
gs
fs
shl
pop
mov
dec
popf
imul
mov
mov
stos
mov
or
xor
das
fdivrs
or
pop
dec
mov
stos
jne
jae
inc
dec
mov
repnz
push
mov
xchg
imul
scas
cld
and
ja
add
in
sbb
push
pop
aam
dec
sub
sub
mov
add
xchg
push
daa
sub
xor
in
scas
loopne
pushf
mov
out
nop
jl
sarl
add
aad
mov
adc
sub
cmp
or
rorb
cmp
fnclex
fcom
fmuls
mov
test
inc
cli
imul
and
call
or
daa
lea
mov
insb
std
idivb
aad
cmp
ret
ja
mov
repz
lret
xchg
xchg
lods
bound
xchg
adc
int
mov
jne
loope
movsl
out
mov
out
sub
cs
lret
mov
loope
movsb
dec
dec
adc
push
jl
mov
pop
xchg
lods
pop
jecxz
fs
mov
jnp
mov
int
xor
jbe
or
lock
daa
push
outsl
adc
adc
jne
inc
ljmp
xchg
fs
movsl
fnstsw
dec
test
mov
inc
jle
inc
popl
sub
mov
cltd
int
jecxz
mov
adc
fcomps
rorb
icebp
je
test
jmp
fadds
loopne
popa
mov
movsl
pushf
cmpsb
movsb
xchg
sbb
into
or
xor
mov
sbb
cmp
sub
aas
add
dec
add
shl
outsb
sub
sbb
fwait
dec
xor
inc
sbb
mov
fadds
sbb
mov
jbe
inc
loopne
negb
stos
xor
jb
sbb
pop
add
sahf
icebp
jo
and
clc
xchg
cs
jnp
pop
and
sbb
mov
aaa
xchg
mov
xchg
in
pop
cmp
test
pushf
lods
lahf
mov
inc
testb
xchg
mov
xor
mov
xor
mov
fstl
les
pop
roll
xor
cmp
mov
dec
lret
or
inc
lahf
fcoml
rcrb
ja
add
test
fldcw
loop
sub
adc
jnp
gs
xor
mov
pop
jo
in
icebp
cli
mov
mov
int
cmp
mov
jb
out
xor
mov
push
xlat
mov
std
xor
push
inc
push
and
sahf
rorb
sub
mov
xchg
inc
test
bound
or
jge
cmp
jb
mov
xchg
test
push
add
cmp
mov
test
jno
push
and
ret
cmp
popa
ror
mov
pusha
clc
push
in
int
enter
xchg
and
ds
fldcw
jg
xlat
or
cmpsb
lret
out
xchg
lret
in
test
and
xor
leave
or
mov
push
xchg
dec
xor
mov
pop
into
cwtl
pop
fst
popa
push
adcb
mov
shrb
dec
cmp
mov
cmp
cmp
and
push
iret
mov
mov
pop
xchg
call
imul
push
adc
mov
mov
mov
psubq
cli
mov
add
pop
mov
out
fs
ret
xor
mov
push
mov
sub
std
mov
bound
movsb
pop
addr16
lret
outsl
insb
cmc
fwait
mov
sarb
cld
cmp
inc
nop
mov
or
push
cmp
sub
shll
sub
push
xchg
iret
jge
dec
popf
and
xchg
clc
filds
push
jmp
or
stos
mov
xlat
jo
xchg
loope
jnp
ret
adc
mov
orb
mov
xor
mov
movq
sbb
mov
rolb
rol
mov
lahf
and
add
lods
sbb
cmpsl
test
repz
dec
cmp
fbld
rcl
leave
and
jns
lock
loope
push
sub
arpl
cltd
push
inc
xor
into
loope
andl
xor
xchg
fwait
cs
push
push
imul
pushf
mov
inc
cmp
stos
jne
daa
scas
icebp
dec
mov
mov
idivb
ja
or
sbb
xor
lea
jle
dec
loope
push
cli
sub
push
adc
mov
xchg
dec
mov
popa
int
push
pusha
iret
lahf
xchg
jmp
xchg
nop
push
ja
hlt
mov
test
scas
mov
push
imul
mov
sarb
aas
adc
loope
cmp
lds
and
out
ss
std
cs
inc
inc
mov
in
push
and
xor
push
mov
out
arpl
int
dec
insl
pop
sub
xor
pop
mov
popa
lock
sub
out
test
icebp
movsb
aas
mov
xorl
mov
ds
mov
pop
psadbw
popf
in
xor
faddl
add
into
cli
sbbl
dec
mov
adc
and
inc
dec
push
jp
mov
aad
pusha
cmpsl
mov
sbb
xor
push
jne
ret
jg
popf
xor
push
dec
hlt
cmc
imul
mul
insb
jo
lock
sbb
xchg
ret
mov
push
sub
cmpsb
and
or
movlps
jge
leave
pop
in
push
idivb
push
mov
mov
jb
mov
sub
repnz
jb
jg
imul
dec
mov
ljmp
mov
mov
xchg
xchg
fidivl
out
mov
push
sbb
call
cmp
sbbb
xor
iret
popf
rcll
or
leave
jge
jecxz
sub
jecxz
push
test
adc
lcall
das
neg
int
push
leave
push
lea
jl
dec
loopne
fcoml
sbb
mov
cmp
sarl
inc
mov
sbb
call
rorl
add
mov
and
cwtl
sub
inc
sub
add
add
xchg
movsb
lret
and
andb
stos
or
fdivrs
arpl
mov
jle
mov
pop
mov
scas
lods
hlt
scas
je
mov
xchg
out
jp
add
out
arpl
mov
rolb
scas
fs
in
jbe
dec
inc
fwait
lret
xor
rolb
or
xchg
jae
in
push
dec
test
mov
sub
in
ret
icebp
mov
xchg
cld
adc
clc
lock
adc
pop
mov
movsl
add
aad
mov
arpl
out
fs
mov
sbb
mov
fstl
js
inc
pop
sahf
mov
loope
cmp
inc
into
inc
push
push
xchg
jg
fidivl
jecxz
jge
out
ljmp
divl
sahf
rcll
sbb
xchg
xor
xor
addb
aaa
aas
jns
fisubs
pop
xchg
cmp
dec
fildl
pmaxsw
xchg
fs
sbb
cmpl
and
cmp
arpl
insb
cmp
hlt
mov
shrb
sub
daa
addr16
jle
hlt
mov
xchg
jno
ret
loopne
popa
in
xchg
push
pop
mov
add
xor
cmp
pop
insb
dec
int3
sbb
hlt
mov
loope
in
outsl
fwait
cwtl
mov
sub
lahf
fisubs
shll
pop
pop
xchg
dec
in
sarl
call
adc
mov
adc
outsl
or
jns
jge
outsb
pop
xor
add
or
aaa
inc
fimuls
xor
mov
pop
cmpsb
sub
ret
mov
repnz
out
jp
mov
mov
jp
xchg
xchg
add
outsb
aas
push
jecxz
cwtl
xor
xchg
mov
movsl
mov
call
rorl
aas
shl
inc
pop
mov
sar
xchg
mov
xchg
pop
adcb
xor
and
daa
adc
lret
repnz
and
and
gs
daa
and
repnz
rcl
mov
push
add
adc
cs
sbb
mov
dec
mov
push
testl
cmp
pushf
push
xadd
add
cld
sub
mov
inc
imul
mov
leave
shrb
int
push
xchg
mov
lea
dec
jl
insb
pusha
add
movsl
pop
cli
out
lret
es
adc
mov
sti
fadd
cli
adc
addr16
add
pop
and
cmpsl
in
call
or
clc
xor
fxch
bound
sbb
dec
out
jl
aaa
aaa
mov
and
je
jp
adc
dec
lds
adc
aam
or
or
addr16
cmp
adc
popa
into
rorb
insb
test
clc
mov
mov
movsb
cwtl
pop
xchg
cmc
outsb
es
dec
or
push
inc
sbb
xchg
sub
jo
andb
cmp
jp
mov
pop
pop
or
mov
test
es
addr16
dec
push
pop
mov
scas
jo
std
dec
pop
repnz
pop
xor
sub
fldt
pushf
mov
mov
ret
cmp
popf
cs
xorb
xchg
enter
xor
ret
jecxz
in
pop
dec
imul
sbb
jp
ja
aam
insl
pop
cld
sbb
mov
decl
fcompl
xchg
lock
test
jg
iret
adc
pusha
jns
push
xchg
fwait
inc
sbb
clc
add
sub
adcb
ret
aad
mov
movsb
mov
cld
xchg
outsl
push
pop
pop
fs
sbb
out
popa
lcall
jg
add
gs
shrb
fstpl
inc
jne
add
jnp
lret
push
dec
xchg
dec
scas
mov
scas
iret
sbb
and
and
scas
inc
push
mov
data16
dec
sbb
cmp
cmpsb
popa
call
lea
pop
in
sbb
pop
sub
inc
in
ss
dec
mov
push
lahf
aam
outsl
push
pop
shll
lea
push
push
stos
dec
imul
dec
and
add
pop
fmul
mov
sti
ss
int3
mov
roll
rcll
loopne
aas
sarl
outsl
adc
or
adc
imul
mov
or
sub
adc
shlb
mov
xlat
mov
jmp
cmp
mov
lret
mov
cld
inc
push
push
adc
adcl
inc
ja
pop
jae
std
jecxz
push
into
adc
mov
inc
movsbl
repnz
adc
jbe
mov
lods
movsb
xchg
cld
jns
in
scas
mov
adc
rol
rcr
cmp
shll
mov
push
inc
inc
cmp
inc
push
fistpll
xchg
imul
mov
daa
out
inc
clc
icebp
jae
test
aad
add
pop
daa
negb
jbe
and
addb
mov
gs
inc
ss
mov
lea
cmp
loope
rcrl
shrl
aam
cld
jle
inc
lret
push
push
cld
push
enter
pushf
xchg
xchg
nop
pop
scas
jnp
loopne
sbb
orl
das
scas
jnp
sub
ja
push
cmp
lds
xor
mov
nop
movsl
aas
xlat
xchg
mull
jle
mov
dec
and
cltd
int3
adc
pop
sub
and
aam
fsub
lret
add
mov
mov
jp
add
into
lods
cmp
gs
testl
or
mov
lcall
adc
clc
inc
shll
mov
test
out
jb
lods
sub
sub
dec
lret
bound
leave
xchg
sarb
push
pushf
repz
fcmovnu
nop
orb
push
in
mov
mov
cmp
repnz
mov
pop
push
sub
inc
jl
scas
jbe
icebp
in
mov
mov
sub
insb
inc
js
inc
scas
or
jno
imul
pop
inc
std
ja
xchg
mov
insb
adc
or
sbb
arpl
jno
mov
xchg
pop
into
adc
sbb
sub
lret
mov
inc
stos
push
sub
push
popf
in
mov
adc
into
bound
jg
movsl
mov
or
mov
xchg
add
enter
gs
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
test
add
pop
ja
stos
mov
leave
jae
std
pop
lea
adc
pop
and
mul
adc
rcl
sti
pop
cwtl
pop
mov
iret
dec
loop
stos
arpl
call
outsb
sbb
inc
mov
xchg
sahf
xchg
call
in
fcmovne
bound
shl
jmp
add
cmpsl
jle
inc
fsts
outsb
pop
jnp
lea
sub
movsb
jmp
sub
push
std
popf
pop
repnz
jp
sub
xchg
adc
dec
cltd
lahf
or
outsb
popa
in
fucom
xchg
xchg
push
scas
cmp
add
inc
into
xchg
es
rcll
inc
jge
push
arpl
or
enter
rol
adc
adc
xor
sbb
pop
xchg
hlt
xchg
inc
xchg
mov
jl
xchg
and
xlat
sub
jmp
sub
sahf
fstps
frstor
jo
rclb
repnz
andb
xchg
in
lea
dec
jle
sub
mov
call
loopne
data16
in
xchg
inc
jns
adc
xchg
mov
cltd
addr16
das
jae
mul
jnp
in
lcallw
inc
xor
out
push
mov
cltd
dec
xor
insb
sub
xor
jne
fisubs
push
mov
sbb
das
and
loop
ljmp
and
adc
xorb
and
test
mov
movsb
xor
imul
jns
lret
push
insb
sub
or
stos
jg
add
adc
nop
cli
into
daa
cwtl
sub
fwait
aaa
stos
sbb
fistpl
sbb
jne
dec
or
mov
stc
or
fwait
aad
cmc
mov
iret
jnp
scas
push
pop
jge
hlt
lret
jbe
roll
xor
int
sahf
inc
xor
fsubs
xor
adc
in
stos
inc
push
scas
mov
aaa
mov
arpl
pusha
mov
mov
add
pop
test
les
shl
xchg
xor
mov
pop
pmaxsw
jmp
test
sarl
mov
push
out
outsb
mov
lods
ljmp
shlb
int3
add
cmpb
xchg
fiaddl
sbb
adc
sub
notl
xchg
cli
xchg
aam
pop
push
dec
pop
fcom
jle
dec
dec
xchg
xor
leave
ficompl
and
push
inc
movsl
lcall
call
das
and
repz
inc
lcall
out
mov
pop
push
rorl
inc
sbb
xchg
fstl
in
push
or
pop
jmp
pop
mov
xchg
arpl
cmc
adc
xor
cli
mov
push
pop
iret
sarb
jne
cmp
out
sub
jmp
xor
jl
dec
jg
inc
xchg
in
fmulp
fcompl
aam
scas
insl
in
bound
addr16
sub
xchg
jb
imul
mov
mov
aaa
and
adc
stc
lret
jl
ds
pop
and
cmp
push
adc
add
xor
icebp
pop
jecxz
push
adc
and
in
call
pop
sbb
test
int
mov
sarl
cmp
es
xchg
subb
push
mov
sub
cmp
cli
pop
or
je
repz
push
repz
inc
sub
pop
popf
cli
push
push
push
fimuls
out
inc
loope
xchg
cmp
ja
repnz
mov
sbb
mov
mov
dec
ret
or
mov
dec
mov
dec
adc
push
jp
xor
sbb
pop
pop
jne
into
sti
movsb
stos
and
dec
and
or
ss
fcompl
jns
insb
insl
outsb
adc
cmpsb
lds
mov
pusha
fwait
outsb
or
jae
mov
fsub
cmp
sub
inc
out
sarl
inc
mov
shlb
mov
das
lfs
jno
jge
fidivrs
push
sub
xchg
mov
dec
test
mov
lea
into
jae
iret
jnp
inc
orl
aas
call
mov
bound
xchg
push
jnp
icebp
into
fsubs
iret
pop
mov
pusha
jno
jmp
jmp
cmp
mov
pushf
mov
outsl
sub
adc
xchg
outsl
add
clc
cmp
jmp
pop
sub
mov
bound
dec
mov
dec
je
je
imul
fcmovnu
fdivrl
outsl
cmp
pusha
push
mov
dec
push
pop
repnz
sub
lret
add
jbe
adcb
stos
out
sbb
push
inc
in
lods
call
add
imul
mov
gs
mov
outsb
dec
push
add
push
sub
adc
pmullw
scas
sub
push
cmpsl
enter
and
push
lcall
add
ds
mov
aas
inc
cmp
mov
cmp
mov
xlat
test
lods
adc
push
push
jl
pop
push
sbb
and
mov
pop
scas
out
jl
sub
push
test
inc
fisubl
lea
lret
push
dec
lods
lock
frstor
std
lcall
add
dec
adcl
int
mov
xor
adc
js
mov
outsb
lret
jne
jle
hlt
imull
mov
cwtl
lods
push
xor
rolb
xchg
imul
fdivl
xor
sub
cmp
call
arpl
mov
jo
xor
jge
dec
cmp
pop
dec
sbb
jns
sti
rcll
jmp
push
mov
insl
mov
mov
sub
or
lret
push
loop
lcall
mov
imul
cmpsb
lods
pop
sbb
dec
add
fisttpl
adc
movsb
and
sbb
dec
loop
push
lret
addr16
dec
xor
into
add
mov
test
popf
mov
daa
or
bswap
and
sub
cmp
xchg
mov
out
mov
mov
sti
pop
cmp
pop
and
test
fisttpll
iret
xchg
loopne
xlat
test
loop
or
sbb
and
imul
movsb
cmp
or
mov
adc
cmp
xchg
inc
mov
aad
lods
mov
lds
mov
data16
sbb
outsl
movq
mov
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
test
dec
in
inc
add
xor
in
lcall
fcomps
rol
push
les
push
cwtl
mov
cli
enter
push
mov
fbld
cmp
add
stos
fimuls
aam
sbb
xor
mov
and
adc
ficomps
cli
mov
adc
vdivss
and
out
push
mov
dec
or
imul
add
pop
adc
inc
jecxz
shrb
call
push
pop
in
inc
cmp
jle
gs
cmc
jl
xor
dec
mov
fstl
or
stos
cmpsb
pushf
pushf
inc
push
xchg
dec
xor
movsb
jnp
dec
mov
stc
icebp
std
sbb
into
movq
testb
and
ficoml
inc
inc
mov
test
sbb
call
xchg
aas
popf
mov
and
inc
rcrb
push
loopne
pop
mov
mull
xchg
mov
sti
pop
repz
add
int
out
jae
add
insb
in
ja
icebp
pop
pop
out
ficoms
adc
mov
pop
clc
daa
xchg
mov
jo
sbb
jae
neg
mov
xchg
popl
imul
jle
paddd
mov
call
imul
out
inc
add
daa
inc
or
insb
pop
adc
xchg
or
mov
jbe
out
rorl
jge
xchg
cmp
fs
repnz
pushl
cwtl
cli
mov
or
es
out
out
xor
ljmp
les
fnstsw
testb
aad
pop
fdivs
das
jmp
jge
clc
cmpsl
add
addr16
into
ret
dec
outsl
repz
xor
ficomps
jnp
jmp
dec
shr
fdivrl
dec
xor
rcl
notb
imul
cmp
mov
into
fcoms
lret
inc
ret
in
adc
fidivl
xor
push
mov
gs
add
push
aaa
mov
leave
leave
jns
addb
or
add
jo
pop
mov
fdivs
das
push
pushf
and
push
pop
pop
mov
call
mov
js
pop
test
rorb
or
push
dec
lds
inc
push
nop
adc
dec
and
test
and
pop
ds
sub
cmc
mov
lret
adc
inc
mov
mov
and
jecxz
mov
mov
xlat
leave
addr16
cmc
mov
xchg
cmp
and
stos
pushf
lods
rdpmc
fnstenv
mov
das
push
xor
dec
fcmovu
shlb
fisubl
and
int3
loop
sbb
adc
out
push
sbb
mov
and
lds
outsb
in
or
ljmp
cwtl
ss
andl
movsb
mov
hlt
imul
and
and
test
xchg
out
sti
push
ljmp
je
rolb
les
pop
push
loope
cmp
or
mov
add
mov
ss
repnz
and
out
std
pop
pop
and
cmpsl
add
dec
std
nop
xor
dec
jecxz
jae
rol
outsl
or
mov
movsl
mov
lahf
lods
movsb
int
rcll
stc
adc
mov
enter
roll
std
in
dec
cmp
sbb
push
dec
push
movsl
xchg
fidivs
cmp
enter
mov
fildl
xor
out
in
and
push
gs
fwait
daa
les
jmp
lds
pop
dec
sbb
jecxz
cmp
and
stc
dec
jnp
pop
xor
pop
sar
push
insb
push
stos
pop
imul
adc
mov
sub
es
stos
sub
jl
xor
stos
mov
das
test
dec
dec
inc
cmpsb
sbb
jge
cmp
mov
lock
outsl
rcll
mov
jp
mov
cli
cwtl
leave
or
sbb
xor
aaa
adc
enter
mov
jbe
and
movsb
jp
int3
mov
in
push
or
jl
andl
je
in
ljmp
xchg
das
jmp
mov
pop
mov
push
sub
insb
push
insb
in
push
or
add
and
cmp
pop
sub
scas
cltd
cmp
lret
cmp
jbe
daa
fsqrt
mov
cmpsb
mov
or
push
mov
cmp
cmpsb
and
dec
and
or
xchg
pop
xor
into
mov
adc
cmp
jno
or
pusha
xchg
inc
jns
xor
mov
push
sbb
rolb
test
sbbl
inc
push
inc
add
ss
mov
loopne
mov
pop
test
push
pop
jo
push
cmp
pop
dec
lds
push
or
push
add
rol
mov
add
mov
and
les
andb
push
ret
insl
mov
jno
xor
mov
fildll
dec
or
cmp
inc
sti
outsl
sbb
dec
js
fisubrs
mov
shr
inc
xor
xchg
lcall
insl
mov
adc
push
in
out
sub
mov
inc
adc
ffreep
sbb
gs
inc
roll
jp
test
fcoms
cmc
fcompl
or
in
sub
stos
ficompl
add
out
or
imul
insl
and
jecxz
fsubl
orb
mov
iret
sahf
scas
andl
clc
hlt
icebp
mov
mov
mov
xchg
fnsave
pop
out
fdivs
or
dec
jne
cmc
cwtl
mov
xlat
outsb
pop
push
cmp
dec
add
ret
aas
and
dec
adc
repz
into
adc
movsb
sbb
adc
leave
jp
jecxz
les
call
jnp
roll
aas
sub
fnsave
lret
daa
push
imul
aas
insb
mov
mov
cmp
mov
adc
hlt
mov
insb
inc
imul
clc
push
lods
cwtl
sbb
mov
addb
xor
pop
sub
xchg
lret
iret
mov
inc
xor
ss
jbe
pop
sub
sti
mov
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
stc
mov
ss
add
add
xchg
xor
in
cld
jnp
jg
cld
xchg
frstor
sub
testl
xchg
js
mov
fs
stc
sub
jge
sub
subl
pushf
and
sbb
add
mov
fdivl
mov
sbb
mov
loope
mov
xchg
ds
pop
rcl
movsb
es
dec
inc
sub
lds
mov
cld
mov
daa
inc
push
push
jnp
or
lods
mov
mov
xchg
pop
mov
loop
test
loope
out
cmc
jle
mov
loop
dec
sub
cmp
mov
mov
icebp
ret
loope
nop
data16
inc
mov
adc
adc
subb
int3
inc
cmp
cmpsl
dec
scas
sbb
popa
in
stos
push
loope
push
enter
into
stos
jge
push
cmp
add
xor
stos
outsl
mov
xor
int3
xorb
pop
loope
fbstp
inc
dec
inc
inc
aam
jae
dec
sahf
addr16
les
ret
mov
std
hlt
or
out
push
sbb
xor
sar
incl
cli
cli
or
cmc
dec
imul
mov
outsb
daa
push
sbb
mov
inc
add
testb
icebp
sub
cmp
xchg
fildll
lcall
movsl
xchg
adcb
pop
loop
fsubp
push
ja
loop
xchg
js
ret
add
in
lret
xchg
mov
shr
pop
xor
push
cmp
jp
push
and
adc
mov
inc
and
push
and
jae
sbb
in
pop
fsts
fs
mov
jno
xorl
idivb
push
dec
lds
mov
out
fs
je
pop
mov
xor
add
dec
cmp
and
dec
cltd
jl,pt
in
int3
pop
pusha
add
xchg
in
cmp
push
adc
rclb
mov
sbb
adc
jne
cli
out
add
es
xlat
fists
fists
sbb
mov
fistl
push
mov
push
jmp
fbld
lock
sti
fwait
aas
adc
push
mov
cmp
test
push
pusha
ret
or
mov
xchg
sarb
js
adcl
lods
xchg
movsb
sub
int3
into
xlat
inc
lods
pop
loop
sbb
mov
sub
push
bnd
fidivl
xor
repnz
outsl
push
fstpl
stc
jno
or
dec
adc
lea
pop
in
xchg
cmp
push
xchg
rclb
repnz
fisubs
mov
mov
xchg
out
lock
test
dec
jp
xor
and
clc
clc
cmp
xor
fwait
lret
or
sti
jnp
or
aas
sub
dec
jae
inc
pop
cwtl
aam
adc
pushf
cmc
and
cli
rcl
sub
dec
out
push
sti
or
mov
jb
fildll
mov
ja
repnz
imul
dec
cmp
movsb
sub
repz
or
daa
mov
sub
push
pop
mov
mov
dec
mov
into
xchg
repnz
pop
ror
lods
fimull
xchg
mov
cli
je
sub
das
insb
and
dec
mov
dec
movsb
and
test
inc
sub
push
iret
in
xchg
pop
ficomps
push
aad
mov
jns,pn
aam
and
into
into
add
and
cmp
xor
movsb
rorb
arpl
and
cmp
pop
fucomip
adc
mov
jae
jle
bound
std
mov
call
stc
call
loop
ss
cld
daa
jl
dec
outsb
push
push
shl
lret
push
cld
sub
test
inc
mov
jecxz
cmp
inc
jo
stos
sbb
push
aam
or
cltd
mov
or
fsubrp
mov
pop
xchg
mov
ja
adcl
int
stos
xor
pop
mov
inc
mov
aam
cld
inc
adc
or
outsl
rcrb
loop
daa
sbb
xchg
jns
dec
push
clc
sub
insl
aad
cli
or
push
ljmp
sti
out
or
std
push
sbb
inc
dec
leave
call
cmp
inc
mov
lret
xchg
xchg
push
mov
shl
aas
jb
xor
fdiv
mov
xchg
mov
je
xchg
lods
sbb
cs
inc
pop
or
lds
xor
popf
fidivrs
repnz
sub
jecxz
cltd
loop
or
in
stos
inc
lahf
sub
ret
mov
fnstcw
pop
jne
xor
and
pop
dec
in
mov
jge
dec
nop
lods
adc
call
pop
pop
lods
mov
push
jle
enter
fsubs
dec
or
jns
mov
sahf
pop
mov
mov
jmp
jecxz
sbb
mov
outsb
stc
mov
adc
ss
and
mov
mov
inc
add
mov
adc
pop
push
scas
jae
fnsave
add
add
imul
or
mov
sti
pusha
lret
add
les
das
add
ss
jecxz
js
cmp
nop
mov
arpl
outsl
jecxz
das
mov
cmpsl
test
loop
movsb
dec
sbb
and
xchg
sub
inc
lcall
andl
mov
push
ret
sub
mov
xchg
pop
pminub
fcoms
fbld
jmp
push
xor
lock
cs
imul
fmulp
fdivrl
jno
mov
insb
xchg
push
push
push
mov
idivb
push
mov
and
movsl
or
push
mov
jno
les
into
mov
jmp
jecxz
cli
lret
int
mov
mov
mov
dec
dec
mov
lds
xor
push
addr16
add
mov
xor
nop
push
pop
pusha
jmp
stc
je
rcl
and
in
fwait
sub
in
enter
xchg
int
xchg
cmp
xchg
outsb
dec
cmp
mov
in
push
shll
lcall
or
mov
adc
sbb
cmp
mov
clc
mov
xchg
mov
mov
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
into
xchg
add
mov
add
add
sbb
sub
in
inc
imul
jg
addr16
cmp
jne
fsubrs
dec
sub
add
cmp
inc
movb
imul
sub
aas
stos
jle
pop
orb
mov
in
ds
stc
roll
addr16
mov
mov
add
add
in
popf
ja
pandn
dec
ret
aad
lret
dec
jbe
je
lods
or
add
mov
testl
aaa
xchg
sti
xchg
daa
push
mov
add
dec
xor
push
lods
mov
push
repnz
jge
cmp
pop
push
dec
out
arpl
les
adc
xor
xor
in
mov
jmp
fldl
inc
push
jge
pop
inc
lock
xor
rcrl
ljmp
push
ljmp
sbb
loope
mov
stos
shl
push
stc
loopne
push
popa
pop
sbbb
pop
push
jne
mov
sub
mov
jb
xchg
mov
inc
sub
xchg
movl
subl
es
add
les
or
jle
push
cwtl
dec
incl
call
cltd
push
lock
jno
inc
lret
jno
mov
rorb
inc
push
add
jge
cmp
mov
xchg
inc
pop
aad
mov
lahf
sub
xor
and
mov
call
aas
repz
leave
movsl
popf
lahf
packssdw
dec
aaa
jno
fldcw
adcl
ret
lahf
push
or
xchg
lock
das
push
loope
popa
sbb
test
test
stos
rcr
repz
jne
jo
lcall
popf
pop
cld
mov
xor
fmull
mov
mov
mov
or
out
inc
lea
cmpsb
dec
xchg
jmp
dec
adc
inc
ret
push
stos
sarb
pop
adc
inc
clc
mov
dec
mov
das
sahf
mulb
xchg
lahf
mov
or
or
xorl
jno
sub
jo
imul
cmp
adc
add
mov
and
pop
cmp
mov
int
sub
or
lahf
test
adc
in
xor
outsb
in
xchg
into
xor
cmpsb
jecxz
loop
stos
lods
mov
pop
xchg
mov
sti
fildll
rorl
cld
jl
rolb
dec
xchg
dec
in
aad
pop
aam
xchg
jb
repz
jp
jg
rolb
push
stos
pop
push
jge
pop
mov
push
loopne
outsl
xchg
and
inc
push
pushf
adc
push
mov
repnz
mov
jo
sub
mov
cltd
mov
xchg
jl
xchg
sbb
inc
clc
cli
scas
inc
jmp
cwtl
mov
mov
mov
test
mov
clc
push
lods
dec
popf
pop
or
cmp
test
out
fdivrs
and
sbb
fidivs
push
data16
loopne
leave
cld
sub
dec
mov
dec
pop
fs
stos
bnd
jns
dec
jnp
mov
sbb
sti
mov
outsb
outsl
enter
cmpsl
sbb
shlb
es
dec
movsb
inc
sub
insb
inc
repnz
movsl
rcll
out
sub
nop
and
popf
ret
aas
cli
add
add
ss
cmp
mov
cmp
dec
daa
cltd
outsl
push
inc
in
xor
test
fdecstp
dec
adc
and
push
jmp
mov
arpl
es
scas
xchg
aas
lds
loop
insb
loop
fldl
cmpb
stos
sbbb
iret
stos
jnp
inc
push
loopne
xlat
and
mov
cmc
cmp
outsb
mov
and
mov
mov
lret
sub
loope
push
and
pop
hlt
inc
int3
mov
jb
dec
xor
cmp
leave
or
sbb
pop
xor
mov
mov
int
jg,pt
push
call
std
lods
jae
cmc
mov
and
iret
les
inc
out
imul
lods
cwtl
shlb
addr16
loopne
xchg
add
xchg
mov
sahf
negb
insb
and
and
lea
sbb
jecxz
sub
jo
repz
push
pop
scas
stos
pop
push
je
jae
ret
ss
orl
mov
or
xorl
jge
push
icebp
out
xchg
rcl
andl
push
mov
add
push
add
test
xor
sti
sbb
lods
xor
lfs
sub
loopne
inc
stos
lret
mov
clc
dec
outsb
loop
pop
movsl
and
lds
dec
jae
sbb
fs
inc
ljmp
sub
aaa
cld
scas
xchg
cmc
ficompl
jecxz
test
clc
cmpsl
lods
lcall
fdivrl
ljmp
cmp
sbb
mov
es
dec
dec
lret
dec
mov
std
js
cmpsl
or
pop
aam
and
jl
mov
xchg
mov
lods
imul
pusha
pusha
fimuls
jecxz
test
femms
out
cwtl
adc
adc
sub
daa
lret
lea
dec
int3
enter
aam
dec
inc
sub
push
add
addr16
sbb
sbb
leave
jbe
je
cmpsl
pop
mov
dec
aad
movsl
cmp
jp
clc
sarl
loop
mov
mov
testb
cli
mov
in
push
ficompl
pop
sbb
pop
mov
adc
lds
jmp
clc
mov
mov
je
jge
cli
cmpsb
lds
sub
sarb
mov
and
repnz
rclb
xchg
xor
jle
loopne
pop
call
sbb
subl
std
cmc
pop
nop
inc
sub
cmc
cmp
mov
lods
dec
ret
packuswb
inc
inc
mov
xchg
or
cmp
rcr
dec
das
popa
and
das
or
inc
pop
mov
test
sub
adc
les
movsb
adc
mov
neg
leave
andb
orb
pop
bound
inc
pusha
jmp
cmp
test
pop
dec
fs
or
xchg
jno
mov
inc
mov
stos
dec
pop
icebp
movsl
jns
movsl
pop
aam
cli
rorl
pusha
xchg
lods
hlt
dec
pop
push
fsubrp
and
test
int
mov
imull
leave
arpl
jb
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
add
jnp
ret
roll
gs
pop
add
adc
jp
mov
inc
xchg
shrl
adc
or
jnp
sbb
xorb
sahf
repz
pop
jge
pop
dec
jns
jne
scas
int
lods
jbe
inc
push
push
cltd
xchg
dec
cmp
fcmovbe
push
scas
fiadds
push
mov
in
je
dec
jg
incb
mov
push
ret
add
rcrl
xchg
mov
mov
mov
inc
movsl
cmpsl
mov
mov
xor
scas
sub
and
inc
jle
adc
jns
std
adc
or
mov
push
stos
mov
xchg
std
mov
jecxz
cwtl
and
lcall
mov
scas
xchg
and
xchg
sti
shufps
lods
pop
adc
pop
adcl
fs
leave
push
inc
push
into
xor
or
in
leave
mov
mov
sub
popf
ret
scas
mov
add
lret
adc
pop
sarb
or
add
fwait
mov
jle
loope
lcall
ss
and
xor
jb
loop
inc
addr16
cwtl
shrl
ret
pop
rcl
xor
inc
test
jl
fstpt
pop
sbb
test
and
pop
adc
mov
mov
xchg
mov
pusha
sarl
xchg
and
enter
fldt
sub
mov
nop
cmpsb
jmp
aad
mov
in
push
hlt
test
add
scas
jns
insl
test
mov
sti
cmp
out
mov
xor
iret
das
jge
jmp
mov
test
loop
adc
xchg
das
push
rorl
xchg
sub
inc
ret
mov
cmpsb
fdivr
clc
fwait
js
lcall
cmp
mov
add
mov
in
les
jne
clc
movsl
add
hlt
jmp
mov
or
xchg
gs
adc
test
mov
stc
and
sbb
jo
push
aad
rcrl
inc
xchg
fcomps
sbb
dec
push
add
fsubp
sub
sub
cs
fsubr
arpl
cmp
cmp
or
mov
inc
mov
xchg
jmp
push
scas
add
jbe
in
outsl
mov
mov
dec
pop
mov
stos
sub
push
ds
xor
aad
jnp
or
xor
imul
add
subl
sbb
loope
pop
dec
pushf
jne
xor
xchg
sub
mov
and
mov
xor
xlat
ficoml
add
push
inc
fdivrp
cmp
adc
inc
xchg
out
loop
jo
add
cli
add
add
inc
lock
inc
shlb
movsb
or
jns
pop
in
add
out
cmp
scas
inc
add
pushf
and
jmp
push
adc
cmp
inc
clc
lcall
mov
lds
nop
sbb
aaa
jns
repz
lcall
pop
ret
testb
lods
cmp
loop
sysret
and
add
xor
or
mull
lock
or
lods
data16
out
es
mov
addr16
shll
call
call
popa
insl
daa
das
test
repz
xchg
lea
fmull
aas
loopne
test
jb
sbb
dec
xchg
jl
imul
lcall
push
mov
dec
xchg
jmp
jb
or
es
loope
nop
sti
movsb
outsw
add
call
nop
imul
mov
aas
xorb
cwtl
dec
roll
testb
out
jg
sub
in
sub
bound
fwait
mov
orb
dec
in
sbb
adc
dec
push
jno
rcrb
mov
icebp
sbb
sbb
and
cmp
fwait
add
sbb
xchg
rcrb
add
xchg
dec
sahf
inc
cli
dec
mov
inc
dec
push
popf
and
lds
mov
pop
aas
repnz
xlat
incl
sub
fcompl
ret
xchg
cmpsb
inc
push
loop
jne
dec
mov
jo
addr16
inc
pop
xor
fists
cmp
cmp
iret
lea
xchg
mov
ret
addps
mov
pop
dec
lea
cmpsb
ss
sbb
pop
out
dec
test
adc
fcoml
fisubrl
cmp
popf
je
movsb
cmp
lds
fsts
jecxz
nop
push
sub
setp
addl
outsl
int
push
in
js
sarl
inc
pop
outsb
jae
fbstp
dec
aad
fstpl
pop
jp
sub
int3
lret
inc
pop
add
std
inc
movsl
pop
pusha
mov
push
pop
push
inc
in
lods
popf
in
aam
je
fdivs
sbb
in
lds
loopne
push
test
lds
xchg
adc
mov
inc
cmpsl
push
daa
jne
push
in
test
imul
push
je
mov
sbb
sub
movsl
push
mov
cmp
mov
lock
rorb
cwtl
int3
dec
cmp
fstps
adc
in
shlb
ficompl
dec
dec
rolb
jmp
loop
dec
cmpsb
jne
pop
lea
jecxz
aaa
xor
negl
call
arpl
mov
dec
call
lret
add
stc
pushf
lea
adc
mov
jbe
xchg
hlt
jno
jno
lret
mov
jge
xor
adc
insb
add
cmpsb
jbe
outsl
cld
dec
mov
imul
lcall
popf
jp
dec
cmp
xchg
icebp
mov
rorb
addr16
and
lret
lahf
mov
sub
into
cmpsl
mov
lret
inc
xor
sub
xor
xor
mov
inc
repnz
movsl
daa
subb
mov
mov
pop
or
pop
dec
data16
and
mov
cmp
jge
jbe
dec
xor
getsec
sub
add
sti
std
pop
lahf
cmp
cli
leave
divl
scas
jb
ret
outsb
mov
rclb
jg
clc
ret
jo
or
aam
inc
call
jns
mov
loope
fcomp
jecxz
clc
xor
cs
sti
jle
push
or
mov
fimull
mov
xlat
adc
mov
jbe
xor
sbbl
jl
lock
jg
push
js
repz
test
imul
cli
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
xor
xor
pop
mov
jg
ret
jge
scas
lret
aaa
imul
dec
imul
push
add
aaa
out
nop
push
mov
sahf
lock
dec
inc
in
pop
mov
ss
sbb
divl
adc
pusha
sbbb
mov
and
jle
lret
mov
jg
fldt
adc
iret
xlat
mov
xor
arpl
popf
cwtl
jl
push
mov
cmp
adc
sub
daa
pop
jg
xchg
mov
pop
insl
adc
outsb
mov
dec
add
mov
sbb
push
je
clc
adc
jb
dec
inc
repnz
add
mov
and
loope
ret
jecxz
pop
imul
aad
mov
add
sub
fsubrs
sub
lea
fimuls
push
lock
aas
inc
movl
repnz
fisttpl
lcall
shll
ficomps
faddl
jnp
xor
xchg
cltd
sub
enter
sbb
mulb
in
out
and
push
xlat
lahf
xor
add
xchg
pushf
mov
outsb
aad
stos
add
outsb
pop
loop
or
decb
push
lahf
sahf
in
popl
orb
and
pop
xor
int
std
cmc
scas
rcr
icebp
adc
enter
xchg
jmp
mov
pusha
pop
fwait
mov
shrb
in
and
or
xchg
pop
pushf
jns
popa
xor
loopne
xor
not
jb
cmp
jns
lret
daa
mov
sbb
mov
dec
cmp
cs
cwtl
ljmp
test
and
ret
dec
mov
push
popl
loop
sub
push
xlat
mov
andb
adc
ja
test
mov
fcmovb
cmc
arpl
pusha
hlt
or
popf
negb
mov
pop
sbb
lcall
out
fists
es
add
jmp
push
mov
mov
xchg
pop
mov
cmc
lock
mov
pop
mov
jp
aad
jle
xor
mov
aam
lods
jp
fsubp
lcall
cwtl
stos
push
mov
mov
into
gs
mov
jp
rcrb
push
adcl
aaa
adc
adc
stos
inc
into
cltd
loop
aad
popa
aad
testb
push
repz
stos
les
into
pop
push
xchg
mov
gs
sti
push
sub
popa
mov
cmpsb
sarl
sbb
je
dec
fidivs
les
test
pop
jmp
xchg
xchg
sub
jmp
jg
xchg
sub
adc
adc
jo
jmp
cmp
imul
xor
mov
lret
xor
aam
arpl
in
lea
xchg
jl
jnp
mov
in
dec
dec
stos
repnz
cmc
mov
mov
pop
mov
sbb
or
xchg
lds
push
mov
lods
inc
add
lods
in
fs
xchg
xchg
inc
setne
ret
xor
add
addb
dec
jmp
dec
icebp
cmp
leave
jne
jns
imul
ret
int3
jb
ss
cmc
xchg
mov
ret
aas
movsl
iret
dec
mov
jmp
dec
add
vmovdqu
push
cmc
push
jmp
mov
xchg
pop
fldcw
mov
sub
idivb
adc
push
mov
cmp
xor
rorb
mov
mov
int
sbb
cmpsl
mov
mov
outsb
shrb
enter
jne
or
and
not
dec
test
cmp
dec
add
xchg
test
jmp
clc
xlat
cmc
repnz
sub
test
adc
mov
loop
inc
add
insl
incb
pop
xor
mov
adc
jmp
repz
adc
adc
jl
adcl
push
adc
lea
nop
adc
decb
jo
ja
xchg
jl
je
nop
int3
pop
dec
scas
mov
adc
jae
das
std
rolb
push
jg
adc
xorl
ja
cmpsl
imul
dec
push
stos
pusha
lret
cmp
aam
stos
into
add
jp
lods
sti
mov
inc
in
in
jmp
cmp
jmp
or
inc
xor
stos
jmp
xor
jb
push
or
popf
mov
xchg
nop
pop
shlb
cltd
add
lods
popf
inc
mov
or
adc
mov
cld
xor
push
and
mov
insl
dec
ljmp
daa
jl
sbb
sub
fisubrl
fdivl
adcb
ret
inc
fildl
ja
ja
gs
mov
push
mov
xor
lds
mov
push
mov
cmp
xor
hlt
dec
xlat
mov
cmp
inc
out
ret
inc
inc
out
sbb
dec
dec
push
ficoml
mov
mov
or
cs
fstpt
mov
adc
clc
inc
cmp
cs
jb
or
push
lods
movzwl
popf
insl
xchg
jbe
mov
jb
sahf
cwtl
js
rcl
mov
jecxz
cwtl
shll
inc
mov
stos
mov
add
adc
push
push
lods
add
sub
imul
mov
sahf
sbb
sub
pop
clc
iret
fwait
popa
inc
cmp
sub
jne
cmp
ret
mov
mov
out
adc
mov
or
xchg
jp
popa
add
rclb
or
int
shlb
movsb
es
push
mov
xor
imul
test
mov
js
arpl
testb
inc
mov
movsb
mov
shll
sti
es
lods
fidivrl
pop
rolb
cmpsl
adc
xchg
mov
dec
jbe
sub
mov
dec
xor
gs
pop
sub
cld
mov
sti
popf
addl
daa
xor
inc
lock
stc
sub
js
nop
ret
jmp
fwait
in
imul
out
xchg
stc
inc
inc
and
sbb
xchg
pop
inc
sti
sub
ror
insb
push
pop
outsl
stos
fstl
add
int
and
sub
mov
lds
push
and
or
or
jl
fmull
int3
inc
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
jae
out
mov
add
push
daa
es
inc
xor
jns
repz
subb
cmp
out
dec
dec
adc
mov
fsubp
aam
gs
dec
and
test
pop
pop
aam
sti
shr
pop
dec
sahf
sbb
mov
aas
ljmp
lock
fdivp
mov
inc
lock
mov
das
mov
lock
and
loope
lods
pop
pop
or
mov
push
popa
out
rcrb
inc
roll
int
push
inc
cmp
in
popa
sub
icebp
inc
and
cmp
test
fcmovnbe
or
xlat
jo
pop
leave
lret
mov
push
mov
push
shll
sub
orl
int
pop
or
sub
or
fistps
dec
repnz
pop
mov
sbb
jmp
out
insb
mov
add
call
mov
cli
repnz
sub
aaa
psraw
movsb
cmpsb
mov
cmp
pusha
dec
popf
ss
add
adc
fsubrs
mov
pop
mov
shrl
std
xor
xchg
sbb
pop
jl
imul
pavgb
ljmp
scas
cmp
inc
push
mov
jge
and
xchg
cli
lret
dec
movsb
inc
pop
ficomps
sub
mov
hlt
inc
arpl
sbb
push
jno
imul
mov
push
xchg
icebp
and
aaa
pop
sbb
sub
mov
in
out
sarl
in
push
jo
mov
in
hlt
sti
iret
xchg
ja
adc
cmpsb
fwait
push
mov
and
test
pop
rcrl
or
jmp
int
dec
test
inc
lret
aaa
outsl
inc
aaa
and
pop
push
lea
add
mov
mov
sahf
cmp
leave
into
jl
dec
mov
push
test
dec
pop
push
inc
sub
sbb
out
and
hlt
mov
add
sbb
push
ss
sub
and
sub
jmp
mov
mov
int3
push
lret
mov
xor
xchg
xor
jno
cmp
repz
push
loope
mov
pop
push
stc
inc
dec
sub
jns
xchg
mov
push
xchg
aas
pop
mov
cwtl
push
pop
mov
dec
stos
xor
mov
inc
notl
mov
jb
icebp
jp
test
daa
leave
movb
inc
mov
cmpsl
inc
mov
jl
jns
aad
sbb
cld
fcmovnu
aaa
mov
mov
mov
inc
sbb
or
mov
cmp
popf
inc
je
push
adcb
pushf
mov
ret
mov
adc
outsb
loopne
inc
push
adc
test
dec
dec
cs
stos
jg
xchg
sub
and
movsb
sbb
mov
jbe
filds
pushf
cwtl
testl
dec
fsqrt
jae
cmpsb
pop
popa
stos
mov
and
repz
jne
jge
cmp
cmp
or
sahf
dec
pusha
inc
sti
inc
aam
xchg
pop
outsb
push
out
push
fistpll
movsl
clc
enter
and
and
data16
or
mov
add
jmp
shlb
dec
shl
sub
add
repnz
adc
push
add
xor
mov
int
shll
decb
push
jnp
inc
stos
mov
sbb
adc
pop
lods
mov
add
adc
insl
and
into
inc
mov
scas
out
sub
leave
mov
jbe
lret
add
and
jb
cs
adc
pop
xchg
mov
and
data16
sbb
sub
cmpb
movsl
mov
jecxz
repz
mov
lock
rcrb
rcrb
push
leave
out
sub
mov
dec
ret
fcmovb
push
dec
clc
jmp
cmc
jmp
lcall
ret
sub
pushf
sub
cmp
xor
add
mov
shr
rcll
sub
mov
sahf
ljmp
mov
jns
lods
jge
jo
dec
inc
gs
pop
cmp
mov
dec
inc
js
imul
adc
aad
into
inc
inc
and
sub
mov
adc
or
pusha
push
ret
das
jmp
fucomip
ds
xchg
mov
push
add
sbb
faddl
xchg
call
test
mov
bnd
xchg
fidivrl
in
rorl
jg
lcall
in
aam
inc
xor
jmp
xchg
jae
in
jmp
sbb
push
nop
jl
scas
adc
mov
push
adc
push
pop
sbb
loop
cmp
mov
cmpsl
push
and
insl
jbe
fwait
mov
aam
jns
push
repz
mov
bound
cmp
dec
insb
lods
push
xchg
jp
xorb
je
mov
add
fcompp
js
jle
lret
in
add
sbb
sbb
ljmp
or
scas
push
subl
xchg
mov
push
rorb
pop
js
and
add
lea
dec
ret
shrb
ss
inc
addb
hlt
es
jne
leave
pusha
leave
cmpsl
xchg
punpckhbw
or
jge
cmpsl
jecxz
inc
fs
jmp
pop
jl
pop
mov
outsb
add
or
sub
sahf
loope
cmp
stc
pushf
aaa
or
push
iret
js
jl
xlat
pop
roll
cmp
mov
fldl
cmpsl
bound
sbb
hlt
or
out
dec
cmpsb
scas
xchg
mov
mov
xchg
jo
ret
adc
les
jmp
dec
adc
pop
fwait
aad
mov
js
in
jne
call
jmp
sub
jns
lods
insl
enter
into
push
inc
adc
int3
out
stc
das
cmp
and
jge
xlat
xor
idivb
lods
fistl
pop
and
xchg
inc
jns
xor
push
adc
push
dec
cvttps2pi
insl
push
xor
lea
stos
or
inc
or
ljmp
or
bound
decb
jb
or
ja
pop
stos
lret
pop
ss
xchg
les
jp
jmp
shl
popa
jo
sub
jo
notb
cmpsb
mov
movsb
inc
aaa
add
mov
inc
jo
and
mov
jno
mov
test
addl
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
pshufw
addr16
xchg
ret
xchg
orl
mov
xchg
daa
sub
aam
clc
mov
xor
add
add
sbb
push
sbb
pop
xchg
popa
jl
cmp
and
add
dec
mov
sub
mov
dec
dec
aad
orl
jge
mov
mov
jmp
add
mov
mov
stos
lea
push
out
jecxz
jle
pop
dec
leave
sub
sub
dec
in
rcll
adc
mov
and
lahf
xchg
mov
es
mov
dec
cmp
test
sbb
xor
or
pop
movsl
test
mov
ja
xor
popf
dec
bound
aas
out
movsb
lcall
fs
pop
je
pop
andl
push
rolb
sub
rcrb
loopne
inc
mov
and
subb
pop
xchg
bound
sub
aam
loop
adc
mov
push
testb
adc
dec
mov
jbe
push
inc
jmp
je
js
imul
dec
out
adc
fsubrs
mov
mov
mov
mov
xchg
scas
int3
movsb
add
mov
cmp
cltd
adc
and
mov
das
xor
stos
into
fmul
repnz
stos
pop
aaa
sub
ds
rcrb
fincstp
in
pop
cmp
in
into
sub
xlat
push
pusha
testb
push
dec
popf
je
rcrl
fmuls
mov
arpl
adc
fnstcw
and
aaa
lret
pop
pop
jmp
sbb
jmp
loop
aad
add
jno
cmp
or
dec
fistpl
sbb
add
lea
sarl
les
ficomps
and
inc
or
push
jp
rol
sub
mov
cs
inc
mov
inc
sbb
pop
dec
ss
sahf
jle
xchg
mov
enter
out
int
mov
xor
xlat
sbb
xchg
dec
push
pop
mov
stos
jg
lret
sub
dec
xor
mov
in
shrb
fsubrs
popf
outsb
mov
test
loopne
clc
leave
mov
xchg
dec
pushf
add
pusha
fwait
mov
adc
hlt
ja
cmp
sub
repz
cmovl
jbe
cmpsl
adc
adc
push
fwait
mov
int3
imul
aam
pop
push
pop
sbb
and
rolb
je
and
xchg
xchg
jle
inc
sbb
sti
or
mov
mov
mov
sahf
subl
xlat
mov
je
jnp
fcomps
xor
or
lahf
cwtl
leave
pushw
mov
cli
cmc
xchg
mov
aaa
dec
mov
xchg
mov
sbb
mov
stc
loopne
popf
inc
xchg
jnp
enter
popa
icebp
jae
dec
xor
mov
add
or
aam
xor
sbb
mov
push
int
scas
pop
cli
xor
cs
sbb
out
xchg
adc
mov
lea
sub
mov
popf
movsb
ret
xor
mov
fcomp
xor
inc
sti
addb
scas
arpl
jns
jnp
xor
pop
fsubs
rolb
sub
xor
adc
fsubrl
iret
ficoml
cli
jae
or
jno
jge
frndint
and
mov
sbbl
pop
insl
and
imul
cmpsl
movsb
mov
ret
jg
hlt
xchg
add
int3
mov
xor
in
shr
adc
stos
pushf
bound
in
js
xchg
mov
call
push
imul
jns
or
push
pop
repnz
imul
cwtl
push
sarl
inc
jge
jl
in
test
inc
pop
xor
pop
das
mov
imul
popa
mov
pop
popf
std
notl
add
cmpl
aas
dec
xchg
mov
sti
mov
pop
pop
iret
dec
call
mov
jl
jl
stos
inc
leave
jo
or
imul
fwait
ja
in
addb
fimuls
lock
or
pushf
nop
mov
adc
daa
fcmovnb
xchg
sbb
out
cwtl
cmpsl
int3
das
in
mov
push
mov
imul
dec
jnp
sub
adc
inc
ficompl
sbb
in
add
pop
out
dec
out
roll
lcall
xchg
rorl
or
sti
and
xor
movsb
addr16
rolb
mov
add
cmpl
xchg
sbbb
fistpll
cmp
sub
sub
ret
ja
and
dec
adc
dec
mov
outsb
and
faddl
lea
pop
hlt
into
or
mov
ds
add
lcall
cmpsb
cmp
mov
adc
xchg
jle
shll
xor
test
cltd
out
inc
jae
push
xchg
jno
push
cld
loope
cmc
repnz
inc
or
cmp
out
add
stc
das
scas
dec
stc
or
divl
rcll
loope
jmp
or
in
into
add
pop
xor
push
icebp
jl
test
ja
xchg
pop
dec
lock
push
ds
inc
or
out
mov
xchg
adc
pop
test
mov
test
rcrb
daa
repnz
add
push
add
imul
ljmp
pop
xor
pop
xor
push
scas
test
cwtl
ja
mov
xchg
test
rcr
push
mov
push
js
mov
xor
rcrl
sti
movsb
dec
les
repnz
jmp
das
xorl
jae
testb
mov
in
sub
jno
adc
in
sub
stos
or
push
lds
dec
cmp
punpckhdq
push
lcall
cmc
lcall
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
sub
mov
invd
add
pcmpgtw
and
sbb
test
dec
mov
pop
or
pop
inc
cld
and
adc
sub
cltd
sbbb
test
inc
out
add
push
ficomps
and
jae
mov
and
stc
jge
int
ss
lock
pop
mov
mov
sti
pop
lcall
call
loop
fnstenv
nop
sbb
sub
xchg
push
pop
inc
and
test
sub
ret
daa
or
cmc
pop
stc
arpl
das
and
and
xchg
scas
mov
fstpl
imul
loope
ss
popa
out
mov
jae
xchg
push
decl
cmc
nop
pop
xchg
into
aam
mov
jge
bound
cmp
sbb
ret
stos
loope
xchg
xor
mov
pop
xor
mov
inc
lret
jno
pop
mov
sbb
cmp
mov
clc
add
sub
out
iret
dec
dec
mov
lea
jo
clc
in
xor
xor
xor
lods
in
aaa
cmp
movsb
inc
jecxz
jg
fldenv
ja
pushf
and
js
and
push
aad
outsl
je
push
mov
mov
leave
movsb
imul
nop
xor
cmp
add
fwait
sbb
inc
pop
push
ret
rclb
sub
ja
lods
repnz
inc
push
sub
shl
repz
pop
rorb
pop
filds
add
rcrb
jle
xchg
les
lea
fiadds
mov
pop
rclb
cmpsb
cmp
xor
inc
xchg
mov
pop
rorl
rcr
sub
call
prefetch
or
cld
push
inc
mov
mov
mov
ja
and
lods
call
inc
mov
dec
cwtl
mov
push
mov
movsb
push
add
jle
rorl
pop
cmp
jle
pop
cli
add
xor
or
and
cwtl
jns
cli
outsb
and
in
mov
pop
and
mov
mov
es
movsb
cmp
or
adc
mov
jnp
xor
jp
scas
mov
sub
es
or
mov
dec
cld
mov
adc
xchg
or
gs
pop
je
insl
or
dec
imul
sub
int
stos
dec
push
imul
loope
call
cmp
push
imul
xchg
leave
faddl
mov
dec
test
mov
adc
daa
mov
fs
incl
push
sbb
push
cwtl
out
daa
or
jle
icebp
aad
push
push
cmp
and
or
std
or
pop
jo
addr16
cmp
in
and
jns
jo
ljmp
jg
cmc
lods
xor
or
mov
xchg
es
ret
mov
cmpsl
imul
inc
dec
mov
and
xor
fcompl
scas
in
sbb
sub
cmp
mov
in
test
adc
hlt
sub
andb
das
cmpl
cs
xchg
sub
mov
adc
mov
xchg
or
cld
xlat
pop
jmp
inc
xchg
add
out
int3
pop
test
enter
mov
int3
sbb
mov
push
clc
out
pop
pop
andb
ds
in
sbb
sub
movsl
dec
or
movsl
mov
dec
ficompl
iret
mov
test
lret
popa
mov
loopne
cmp
adc
sub
adc
test
ficomps
push
repnz
pop
lock
dec
jl
jle
insl
sub
mov
pop
adc
pop
outsl
cltd
jb
jne
insb
ret
aad
push
add
mov
inc
add
dec
inc
rorl
jbe
sbb
sbb
rcll
loopne
fwait
loop
and
xor
mov
xor
jmp
bnd
test
sbb
sub
jbe
pop
in
das
dec
add
inc
or
sub
clc
mov
lret
adc
push
cmp
pop
or
in
insb
add
aad
jge
je
cli
ret
jmp
scas
or
cmpsl
add
and
or
sti
std
mov
sub
imul
bound
push
aas
and
cmpsb
add
roll
push
push
aas
scas
xor
insl
sbb
dec
jle
cltd
push
push
xor
xchg
shrb
outsl
cwtl
lods
sbb
nop
mov
pop
sub
sbb
mov
cltd
push
addr16
pop
cmp
adc
inc
dec
movsb
loope
jp
fs
mov
push
and
addr16
dec
push
jecxz
mov
push
adc
jge
cmp
dec
mov
mov
jg
lcall
lcall
clc
inc
mov
xchg
xchg
jl
cmp
jg
movsb
pop
adc
es
dec
addr16
jb
mov
xor
pop
pusha
add
dec
or
inc
lods
test
lock
repnz
adc
xchg
xor
addb
dec
push
ds
adc
inc
sub
out
push
sub
dec
loop
adc
dec
in
or
fs
adc
mov
stos
fcomps
dec
jge
or
pop
push
leave
or
in
mov
mov
mov
lods
popa
lret
pushf
xor
cmp
clc
pop
mov
shlb
xchg
outsb
icebp
pop
aam
mov
sbb
mov
mov
aas
add
std
adcb
sbb
out
mov
stos
lods
sbb
cmpsb
out
test
cmp
bound
sbb
mov
sbb
repz
push
mov
mov
cmp
push
mov
mov
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
jbe
mov
invd
add
in
sar
mov
push
ficoml
stc
dec
add
push
dec
inc
lea
jb
shr
xor
in
mov
pusha
ret
leave
cmp
dec
out
push
mov
mov
xchg
movsl
mov
popa
xor
test
sub
aam
mov
out
sub
xor
rclb
test
mov
mull
inc
loope
push
sub
cmc
jne
jle
push
cmp
loopne
inc
sub
mov
divb
xlat
call
ja
les
enter
aas
jl
adc
sbb
div
aas
nop
jge
ss
aas
pop
add
sub
push
in
adc
mov
xchg
xchg
inc
mov
adcl
das
pop
divb
insl
lds
fs
sti
and
daa
out
xor
and
dec
mov
arpl
pop
sbb
popl
subb
cmp
add
aaa
mov
sub
orl
test
inc
stos
mulb
mov
jne
out
push
add
insb
inc
pop
scas
inc
ficoms
mov
popf
dec
push
sarl
push
mov
fwait
popa
push
movsb
ss
adc
jb
test
mov
push
mov
jne
mov
inc
push
pop
nop
shlb
scas
push
mov
das
pop
mov
inc
push
xchg
scas
xor
adc
int3
repnz
cmp
xchg
sbb
call
add
addb
adc
mov
enter
test
jle
push
popfw
push
cmp
jnp
pop
popf
daa
rcrl
int3
cltd
cwtl
dec
fisubrl
test
cli
jnp
xchg
call
out
sbb
lea
or
sub
test
stos
jmp
cli
fisubl
repnz
leave
shrb
std
xor
cltd
xchg
sub
jmp
fstpl
xchg
pop
mov
sbb
inc
or
push
test
jne
jecxz
or
clc
mov
aaa
popl
dec
fstps
cmp
pop
in
dec
or
das
mov
add
jno
or
aaa
je
sbb
push
xor
inc
test
aaa
or
decl
jl
jg
imul
mov
lcall
or
push
loope
inc
xchg
movsb
xor
push
pushw
xorb
mov
and
aad
or
pop
sbb
pop
xor
sub
fcomps
or
fldcw
mov
negb
add
jle
fwait
adcl
scas
push
test
xchg
push
stos
pop
iret
je
aad
out
inc
scas
or
icebp
inc
push
movsl
leave
xchg
add
inc
inc
clc
das
sbb
add
shlb
xchg
mov
jmp
jg
arpl
and
dec
add
or
mov
mov
jns
mov
lret
jle
inc
lods
clc
out
xchg
adc
clc
imul
inc
das
cld
adc
sbb
mov
out
xor
adc
lods
mov
ljmp
and
in
dec
pop
mov
popf
push
mov
mov
cltd
xchg
add
paddq
aaa
inc
faddp
fnsave
lahf
dec
pop
pop
jmp
dec
mov
mov
adc
adc
ss
add
push
push
jle
movsl
dec
pop
negb
into
mov
xchg
and
and
subl
add
sbb
call
test
xchg
sub
pop
sub
xchg
scas
aaa
test
dec
inc
mov
insb
cmpsl
pop
inc
inc
push
popf
cmp
lds
push
inc
xor
ja
lods
fisubrs
shl
out
cmpl
mov
es
mov
aam
pop
fdivp
jae
adc
clc
jo
mov
iret
jae
fimull
mov
jnp
adc
cmp
xchg
pop
test
rep
xchg
mov
inc
insl
xor
xchg
push
mov
mov
out
inc
imul
jmp
idivl
ja
in
in
call
jb
push
or
mov
test
fidivl
xchg
shrb
inc
jg
mov
cmpsl
push
pusha
mov
pop
int3
mull
dec
mov
mov
inc
cmpb
mov
popf
xchg
sbb
repz
add
sub
test
shrl
insb
clc
mov
movsl
imul
pop
hlt
or
shl
scas
shll
jb
sbb
scas
pusha
sub
inc
fs
mov
push
pop
ret
ss
fs
push
xchg
cld
push
fstl
push
lods
test
xchg
jmp
mov
xor
sbb
adc
in
xchg
lods
stos
push
push
frstor
hlt
dec
iret
adc
std
out
mov
dec
or
sbb
sbb
scas
ja
outsb
stc
push
repz
cmp
cmp
add
pop
outsb
sar
lcall
push
push
xchg
mov
stos
and
nop
mov
cmp
das
add
jns
mov
ja
rol
dec
pop
add
lcall
push
int3
aaa
into
inc
ret
sbb
jnp
and
cltd
mov
xchg
shll
jp
xchg
imul
inc
mov
rcr
mov
aaa
or
xor
imul
lea
in
push
clc
or
mov
push
adc
add
popf
push
mov
pop
fidivs
cmp
movsl
push
loope
lret
pop
jge
dec
pop
je
push
out
cwtl
cmp
pop
jns
mov
aaa
ja
daa
cmp
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
setae
inc
stos
enter
adc
inc
mov
push
ja
push
fnsave
cmpsl
pop
or
in
jne
iret
aam
out
lret
mov
cmp
or
sarb
cwtl
lret
and
clc
mull
loop
inc
push
xchg
xor
mov
push
mov
insl
cld
jl
stos
jmp
cmp
sub
mov
dec
xchg
and
and
push
xchg
cmp
pop
shl
loop
into
pop
adc
cld
ret
cmp
dec
fdivrs
decl
and
inc
dec
sti
inc
shll
call
mov
addr16
dec
and
cs
ds
xor
flds
loop
dec
adc
fstl
jnp
mov
mov
dec
push
sbb
pop
dec
bound
insb
sub
cmp
out
push
dec
outsb
pop
inc
xchg
sbb
push
addr16
jnp
inc
xor
jp
xor
sbbl
xchg
addb
arpl
or
inc
sbbl
sub
sbb
lods
mov
cmp
pop
int3
sahf
fcompl
and
pop
dec
pusha
dec
fnstenv
jmp
in
lcall
mov
enter
push
lahf
in
push
pusha
mov
mov
cmpsb
mov
insl
js
out
or
aaa
jg
mov
sub
outsb
iret
push
notl
and
cmp
xchg
arpl
push
jp
dec
add
mov
mov
xchg
cmp
loopne
push
and
pop
ja
adc
pushf
repnz
fdivr
sar
leave
shll
add
test
dec
push
xchg
hlt
push
fs
adc
shlb
jb
pop
je
cmp
movsb
cmp
fcmovb
dec
xchg
adc
lea
xchg
or
sbb
sub
jmp
push
xor
fldl
idivl
and
mov
mov
sub
xchg
xor
in
scas
icebp
ds
popl
pop
xor
sahf
in
dec
mov
dec
sbb
mov
das
data16
data16
dec
movsb
fwait
lock
das
sbb
and
add
adc
lcall
mov
rcl
fisttps
mov
jmp
ret
push
roll
xchg
cmp
negb
cwtl
leave
inc
test
bound
popa
loop
ds
in
cs
pop
daa
xchg
and
ljmp
sbb
mov
push
dec
sub
cwtl
xor
rclb
or
out
pop
xchg
cmp
scas
push
movsb
xor
scas
xor
pop
dec
mov
rcl
mov
inc
or
or
lea
inc
imul
jbe
xchg
imul
fwait
cmp
dec
and
mul
movsb
js
clc
lahf
mov
ss
cs
lcall
mov
icebp
jb
ror
cli
pop
arpl
or
and
into
or
jno
test
stc
jg
sbb
and
dec
dec
jmp
push
loope
addr16
xchg
add
dec
dec
leave
loope
jecxz
dec
mov
mov
aad
pop
and
sbb
add
adc
shlb
pop
jg
pushf
out
gs
jecxz
mov
repnz
pop
sub
mov
xchg
jno
out
jnp
sub
repz
xor
out
inc
pop
pop
or
jp
xchg
inc
sub
xchg
fincstp
sbb
sbb
pusha
fwait
aad
dec
xchg
mov
push
cmpb
scas
cmp
dec
int3
lea
inc
rcrl
lcall
loope
sti
sub
xchg
push
divb
xchg
push
lods
cltd
mov
roll
cmp
push
adc
push
push
jb
cmp
les
sbb
and
test
bound
mov
gs
mov
outsl
loop
push
or
mov
xchg
stos
jae
hlt
lcall
push
or
imul
mov
ret
lea
imull
jg
ret
cs
out
or
enter
and
fxch
in
and
xor
pop
xor
cmp
js
mov
imul
scas
cmpl
or
enter
lcall
xchg
cmp
mov
jmp
jp
cmpsl
pop
xor
xchg
repnz
sbb
push
jecxz
pop
aaa
jmp
clc
sub
fsubrl
mov
mov
ljmp
pushf
gs
leave
stos
pop
jns
inc
jnp
or
pop
xchg
jnp
sarb
xor
aaa
cmp
and
pop
rolb
jle
pop
outsb
dec
mov
imul
aaa
lret
cmp
inc
popf
lret
mov
push
dec
pop
leave
dec
imul
int3
sub
out
pop
or
mov
or
movsl
fdivr
aam
popf
sub
pusha
and
lret
jo
lcall
mov
mov
fcmovnu
leave
sahf
sbb
and
xchg
push
adc
jmp
add
das
dec
jmp
dec
inc
les
push
and
fnstcw
sbb
loopne
add
pop
roll
jge
ret
push
ljmp
in
and
mov
xchg
mov
loope
lods
mov
in
jne
mov
pop
mov
or
repz
mov
cmp
xor
cltd
sub
and
mov
sbb
xor
into
dec
push
add
xor
pop
cmp
mov
cmp
sub
lret
jecxz
sub
cltd
mov
daa
mov
adc
cmp
idivl
arpl
mov
xchg
mov
lods
bound
xchg
cmp
cmp
sbb
pop
cmpsb
stc
loopne
adc
test
mov
mov
pop
cmp
xchg
ret
mov
out
scas
push
inc
and
movsl
jg
outsl
mov
lds
adc
stos
mov
pop
sbb
mov
push
sbb
or
mov
or
mov
hlt
mov
lea
xchg
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
push
imul
cwtl
test
xor
iret
xchg
loope
in
mov
cltd
outsb
jecxz
and
test
test
fld
dec
xchg
or
dec
gs
jns
xchg
xchg
cmp
call
popa
jl
js
sbb
out
xor
jns
jbe
sub
dec
and
int
jg
imul
jecxz
ja
movsl
pop
ja
mov
jg
add
and
ds
popa
lret
aam
sbb
mov
push
push
cwtl
and
clc
xor
jae
rcll
mov
cmpsb
jno
lock
push
jbe
ja
inc
cs
xor
add
cld
push
arpl
and
js
hlt
xor
clc
xor
inc
icebp
ficompl
daa
out
lock
push
call
jmp
adc
sub
movsl
aad
call
bound
int
xchg
sub
adc
xorb
into
inc
sbb
jb
mov
pop
out
jge
jmp
aaa
outsb
mov
ret
inc
sahf
and
out
mov
sahf
rcr
aaa
outsb
jmp
test
cmc
push
aad
lea
mov
imul
and
mov
addr16
add
mov
ret
jns
movsl
iret
fisubl
cmp
mov
dec
ja
std
cld
jecxz
ss
inc
std
cmpsb
sbb
xor
mov
fldenv
xchg
cmp
jb
aaa
push
and
nop
cli
dec
dec
mov
lret
ljmp
repnz
lret
ret
adc
arpl
fdivr
push
jno
bound
cmp
xor
jle
repnz
mov
shr
test
xor
les
lahf
out
sbb
push
and
jl
pushaw
test
sbb
sbb
rcr
push
jmp
das
cwtl
inc
dec
scas
imul
les
jo
and
jge
xlat
xor
sahf
test
adc
inc
pop
pushf
adc
dec
cmp
mov
mulb
push
insb
push
xchg
pop
push
call
stos
add
mov
int3
jmp
arpl
stc
jno
push
insb
out
enter
jp
lcall
add
lea
iret
adcb
into
scas
mov
pop
fimuls
jns
pop
psubb
sub
mov
inc
in
lds
lret
dec
cli
sysret
and
outsl
adc
fstpt
dec
adc
jns
lea
adc
xchg
insl
in
fsts
ljmp
shrb
or
xchg
lcall
pop
outsl
xchg
push
sub
and
sub
repnz
jae
movsb
lds
mov
fdivl
inc
sub
insb
movsb
hlt
push
xor
dec
xchg
push
xchg
cmp
push
lahf
xor
sbb
sbb
pop
scas
popf
mov
add
ljmp
inc
inc
movb
nop
or
or
je
outsb
inc
cmp
inc
roll
scas
xlat
aas
adc
sub
mov
ja
or
xchg
test
xor
enter
xchg
loopne
push
cmp
lods
push
nop
iret
push
aad
xor
mov
andl
shl
mov
popf
loopne
adcb
stos
aad
fiaddl
push
fnstcw
in
std
jbe
mov
or
cli
mov
enter
outsb
and
negb
dec
dec
push
push
je
dec
daa
lret
xlat
lcall
scas
scas
push
clc
inc
inc
outsl
push
push
into
jmp
mov
push
mov
mov
sbb
mov
test
icebp
jbe
mov
push
adc
or
cmp
addr16
cmp
in
popa
push
xchg
sbb
scas
sbb
sbb
mov
daa
jo
inc
add
jg
cld
and
pushf
testb
movsb
xlat
dec
sub
mov
and
xchg
into
pop
xchg
addr16
divl
inc
push
lods
sbb
popa
mov
sbb
outsl
mov
adc
and
jmp
std
addl
inc
or
adc
orl
adc
outsb
stc
test
jl
int
imul
pusha
mov
stc
sbb
out
mov
push
mov
lods
out
cmpsl
in
push
xorb
adc
outsb
movsb
sbb
jmp
nop
xchg
fucomi
pushf
je
sub
inc
xor
test
test
in
push
test
or
mov
outsl
and
jle
sub
dec
mov
in
pop
cmc
sarl
cmp
mov
into
mov
repnz
ds
jbe
mov
fnsave
mov
push
mov
and
dec
addl
lock
push
mov
sub
xchg
lahf
sti
jo
sahf
mov
fidivrs
ja
pop
out
mov
xor
icebp
jecxz
cmpsb
lock
xor
inc
repnz
add
mov
jl
push
jecxz
dec
jle
test
out
dec
js
imulb
mov
cmp
in
xchg
ret
and
mov
insl
dec
ss
mov
or
mov
mov
iret
cmp
xchg
mov
and
jecxz
sahf
adc
inc
push
dec
xchg
out
insb
dec
cmc
jl
loop
and
mov
cmp
pop
mov
pop
mov
add
jmp
enter
ret
fxch
lods
outsb
and
popa
loop
arpl
call
lods
int3
mov
js
out
cmpsb
outsl
imul
and
and
loopne
inc
jle
adc
inc
int3
dec
in
mov
add
imul
or
xchg
sbb
repnz
sbb
ljmp
pop
mov
in
add
jne
test
idiv
jmp
mov
xchg
mov
dec
jp
scas
popf
invd
add
cvtpi2ps
out
jge
mov
push
out
mov
mov
xor
add
mov
push
out
stos
or
push
cli
lods
mov
sbb
scas
dec
push
mov
sbb
xlat
lahf
jp
mov
fisttpll
sti
adc
or
and
loopne
push
ss
insb
cmc
or
push
ret
inc
mov
mov
fwait
dec
sbb
in
push
inc
inc
das
dec
jle
mov
in
mov
jne
in
insl
xor
call
loopne
inc
sbb
add
cmp
pop
bound
jbe
shlb
jne
dec
lcall
pop
rcrl
sub
push
mov
xchg
push
mov
push
jp
sahf
push
inc
cmp
in
gs
int
inc
add
mov
scas
int3
sahf
jb
push
cmp
pop
xor
mov
pop
dec
push
repz
insl
aas
lods
iret
fimull
mov
cmpsb
add
in
adc
jne
or
or
repz
xor
sahf
mov
and
scas
sbb
cltd
and
sub
shrl
mov
das
inc
pop
cmpsb
gs
sub
inc
mov
scas
xor
jns
shrl
popa
cs
xor
dec
pusha
jecxz
jl
mov
cld
push
adc
arpl
and
test
pop
inc
je
fs
pop
jns
inc
cmpsl
mov
leave
lds
into
mov
stos
push
repnz
inc
cli
scas
fdivr
pusha
push
rcrl
mov
stc
aaa
fstps
test
cmp
push
std
sub
xlat
pop
xchg
mov
cmp
xchg
div
out
push
dec
clc
xor
cmc
out
data16
lcall
insb
jecxz
loop
in
sub
xor
push
cmp
sbb
or
fisttpll
sbb
pop
lods
sti
mov
jae
sbb
shr
dec
icebp
xor
push
jbe
imul
adcl
imul
cltd
xlat
fdivr
rol
adc
adc
sbb
or
popa
insl
fwait
repnz
xchg
sbb
lock
sti
in
popa
addr16
mov
xchg
ljmp
test
into
xchg
sub
pusha
xchg
test
jo
add
in
mov
out
lahf
xchg
and
adc
leave
sub
pop
es
sbb
in
inc
ret
push
cwtl
dec
sbb
shlb
insl
rolb
push
add
repnz
xor
push
sub
xor
lock
test
add
ds
fildl
neg
sbb
pop
or
out
dec
movsb
std
sub
stos
xchg
ljmp
pop
scas
or
cmp
xor
cmc
inc
es
sbb
aam
xchg
and
jge
gs
mov
mov
inc
andb
bound
dec
ljmp
daa
pop
leave
dec
mov
push
and
xchg
mov
flds
popf
pop
inc
pop
push
outsl
mov
inc
jne
lcall
and
sub
ret
pusha
xchg
push
es
xor
imul
cwtl
and
pop
jno
enter
into
repz
xor
stos
je
and
pop
jns
and
xchg
xor
das
imul
clc
sub
scas
sub
es
inc
lods
mov
sti
cmp
popf
adc
inc
clc
leave
xor
add
dec
mov
fcmovnb
xchg
mov
sub
mov
and
dec
jnp
and
jae
xchg
inc
scas
sub
and
sub
fsubrs
pop
cmc
icebp
sub
inc
fisubrl
push
adc
rcrl
lock
mov
jmp
cli
mov
jge
inc
divl
push
outsl
or
mov
mov
idivb
xchg
mov
push
jg
icebp
cmp
mov
sbb
ljmp
mov
dec
sub
dec
test
inc
out
add
dec
in
xor
mov
repz
mov
aaa
inc
lods
adc
stos
jg
or
inc
ljmp
ss
fwait
mov
aam
data16
pop
adc
dec
xchg
jno
push
mov
fnstcw
ret
out
lret
ret
adc
push
and
or
out
inc
andb
pop
and
test
sub
or
pop
jge
lret
loope
jae
mov
push
popf
cs
arpl
cmp
push
cmc
jecxz
or
xor
sbb
or
enter
jmp
int3
add
bound
lods
mov
xchg
pushf
pushf
imulb
mov
je
sahf
es
ret
popa
mov
jecxz
dec
nop
jno
jno
lock
out
stc
jle
sub
inc
mov
mov
mov
in
imulb
mov
push
pop
add
int
je
xor
dec
scas
xor
notl
mov
test
loope
ja
arpl
cltd
xchg
lcall
push
cwtl
inc
negl
ficoms
xor
xchg
in
cld
mov
mov
inc
xor
mov
or
jo
je
daa
mov
pusha
repz
negl
jg
inc
sub
out
divb
iret
pop
ds
call
adc
add
pop
pop
or
and
stos
outsl
stos
test
shlb
repnz
hlt
pop
cmc
sti
inc
movsl
sarl
test
hlt
jecxz
inc
in
mov
fstpl
sbb
cwtl
pop
test
mov
dec
sarl
cmc
xchg
sub
jnp
jge
inc
jg
lret
xchg
xor
push
in
shrd
ljmp
mov
sbb
cmp
fcoms
sti
jecxz
daa
insl
mov
jle
pop
ds
inc
scas
mov
fdivrs
stc
aad
jne
cmp
cmc
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
test
invd
add
cmovg
sbb
shll
cmp
scas
or
xchg
add
jle
cmp
mov
cld
mov
cmp
test
pop
cmp
lahf
pop
lret
fdivrs
push
xchg
icebp
pop
sbb
jl
mov
neg
rcr
sbb
imul
js
fwait
js
gs
shlb
jle
push
adc
xorb
repnz
in
xchg
jge
cmp
lods
cmp
fstp
push
sarl
adc
xchg
sub
dec
xchg
and
adc
adc
shrb
push
ret
xchg
and
dec
mov
in
add
jge
xchg
inc
aaa
fs
pop
lock
std
sbb
mov
mov
shlb
outsl
lea
jae
iret
add
mov
lret
and
inc
jbe
enter
jge
sub
pop
jg
mov
cmp
lret
mov
inc
pop
mov
mov
sub
clc
ficomps
inc
or
xchg
fistpl
sub
push
enter
js
shlb
mov
stc
ljmp
cwtl
gs
mov
mov
push
push
int3
mov
pop
add
pop
nop
arpl
aas
int
or
pushf
push
adc
es
lcall
in
into
mov
stos
xor
or
xchg
add
or
xchg
xchg
cmpsl
imul
gs
add
jne
mov
inc
jle
in
adc
lahf
fcomp
mov
hlt
inc
pushf
test
jmp
mov
sti
hlt
movsb
outsb
mov
cmc
jge
pusha
movsl
shll
sub
jle
fdivl
outsl
inc
arpl
mov
lcall
ja
adc
sbb
pusha
push
icebp
hlt
insb
mov
rcl
out
imul
jno
inc
test
mov
mov
lret
lock
lret
pop
outsl
cmp
std
lods
aad
dec
dec
pop
jp
out
xor
movsl
dec
cwtl
sahf
fs
sbb
call
popf
add
rcr
xor
inc
jae
clc
inc
bound
lods
fadds
jg
dec
sbb
ds
xchg
out
and
xorb
setp
mov
shl
mov
fs
mov
out
shrl
out
cmp
pushf
stc
scas
sub
rcrl
add
jp
les
xchg
inc
mov
jecxz
pop
dec
shlb
mov
repnz
xor
inc
lods
mov
xchg
adc
es
pop
lret
cmp
pop
jecxz
pop
mov
inc
mov
rol
ljmp
lret
push
shlb
aas
and
cmp
ds
ret
das
jmp
mov
mov
stos
add
daa
xor
int3
in
pop
xchg
sub
pop
ret
xor
mov
int3
push
js
mov
outsb
xchg
jg
imul
or
cmp
mov
xchg
insb
push
gs
mov
adc
int
inc
sub
adc
pop
cld
scas
leave
xchg
test
ss
push
shlb
sbb
add
pop
pop
sbb
pop
cmp
and
jge
das
loope
xor
push
imul
or
sub
cmp
or
fadds
shlb
movsl
lock
mov
pop
xchg
imul
loop
cs
test
pop
adc
lods
loop
adc
or
mov
lods
in
add
ja
aam
dec
sbb
rorb
flds
fldt
std
lret
arpl
jns
dec
xor
ror
fildl
fsub
lret
addr16
mov
xchg
push
pop
pop
or
adc
test
push
mov
sub
ret
int
mov
add
fldl
and
cmpsb
inc
xor
jne
dec
adc
sub
bnd
rorb
ds
out
mov
enter
popa
mov
ret
pop
fstpt
push
clc
sub
faddl
pop
cs
dec
jmpw
inc
lods
int3
mov
gs
pusha
add
inc
and
mov
mov
outsb
cmp
cmp
push
rorl
aas
ror
jg
sbb
imul
mov
jnp
pop
icebp
inc
mov
clc
aaa
add
add
cmp
mov
push
enter
ja
movsl
mov
adcb
jae
pop
mov
mov
adcb
or
xchg
test
mov
decb
xchg
cld
dec
test
lods
call
sbb
xor
adc
pop
ss
iret
aas
enter
inc
ja
insb
clc
js
test
cmp
xchg
mov
enter
js
fnstcw
mov
adc
insl
fdivrl
ljmp
clc
cmp
cmp
int
pusha
mov
or
arpl
cmp
xor
add
jl
ret
xchg
ja
imul
sti
mov
sub
sub
mov
int
ret
aaa
xchg
or
movsl
lret
and
imul
mov
mov
inc
sub
pusha
fiadds
jecxz
xchg
adc
int3
mov
stos
insb
lret
inc
pop
adc
cld
jle
jp
sbb
arpl
test
rcrl
mov
xor
cld
dec
fs
arpl
loope
pop
jo
add
int3
maskmovq
pop
xchg
mov
sub
xchg
xchg
or
xlat
stc
mov
push
add
aad
ljmp
jae
leave
orb
lods
pushf
jnp
xor
xrelease
loope
aaa
cmp
cmp
icebp
popa
pop
cld
ds
mov
push
or
lods
jae
aad
sti
jg
ljmp
jbe
xor
sub
ljmp
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
popf
or
or
imul
pop
pop
outsb
xor
pushf
leave
xor
or
and
mov
pop
and
mov
icebp
in
mov
inc
cmpsb
lock
jg
inc
sahf
movsb
in
fs
shlb
movsl
xor
cmc
fidivs
addr16
mov
push
leave
and
test
mov
dec
xchg
stos
es
mov
jbe
xchg
stc
pop
leave
jb
push
fdivl
incl
jle
fwait
pop
imul
pop
js
into
cmp
ret
add
jo
cld
adc
sub
lods
loop
cs
iret
jae
sbb
mov
int
add
jmp
mov
mov
and
mov
mov
pop
sbb
incb
jno
iret
pusha
andb
ja
mov
pop
cltd
daa
lahf
jb
movsl
popa
clc
or
dec
inc
or
loopne
clc
cmp
jns
cwtl
cli
add
or
mov
sub
cld
aas
xor
in
or
sahf
and
push
xchg
mov
stos
and
stc
pop
xor
or
inc
jmp
xor
gs
cmp
decb
sbb
push
arpl
fistl
add
ja
mov
jecxz
into
adc
pop
mov
add
daa
add
dec
xchg
cld
push
in
mov
clc
in
ljmp
out
mov
mov
and
andl
push
subl
and
dec
mov
adc
jnp
jns
stc
mov
pop
adc
divl
cmp
test
inc
mov
sbb
imul
mov
inc
shlb
mov
aad
movsb
add
sub
xlat
push
ds
mov
ret
sbb
xor
jge
cmp
sbb
pop
call
cmp
jl
fsubl
mov
outsl
outsb
mov
pop
push
shr
jno
add
jb
sarb
adc
inc
sbb
lret
xchg
pop
jl
mov
pop
adc
push
sbb
cmpl
cmpsb
clc
scas
fldl
shl
testb
rorb
push
or
mov
cwtl
and
ljmp
fmull
imul
xchg
outsl
jb
outsb
add
fimuls
cmpsb
and
pop
kortestb
mov
fnstcw
jle
or
xchg
adc
xchg
clc
or
or
outsb
js
cs
fs
inc
repnz
mov
out
cmp
push
dec
shll
mov
jle
lret
add
inc
mov
mov
fdivrp
cmp
push
mov
div
mov
xor
adc
fs
int
adc
mov
sbb
add
jecxz
out
mov
repz
popf
lret
addr16
dec
imul
xor
jbe
test
push
sarl
dec
pop
xchg
jb
add
jne
dec
stc
mov
std
push
cmp
icebp
and
loop
jo
lcall
jae
leave
in
neg
ret
or
sti
inc
test
adc
or
push
jg
lret
ss
je
inc
fcoml
ss
ficoml
push
mov
flds
in
nop
mov
cli
int
sarl
mov
mov
iret
xchg
sbb
loope
or
cmp
divl
mov
adc
jg
and
fnstsw
sub
xor
xchg
js
notb
or
fsubrs
cs
shlb
jnp
mov
cwtl
addl
mov
jnp
cwtl
ss
mov
push
mov
rorl
iret
sbb
adc
sbb
mov
push
sub
std
and
and
sar
hlt
xchg
adc
sbb
adc
loopne
mov
adc
testl
fsubrl
in
and
jl
les
movsl
push
mov
inc
pop
sahf
pusha
add
sub
push
inc
in
ss
add
push
add
add
push
lods
aad
pop
dec
push
dec
mov
xchg
loop
mov
sub
orl
or
pop
iretw
mov
sbb
sub
adc
sti
leave
ljmp
inc
gs
popf
push
bnd
mov
jmp
add
push
fidivl
adc
lcall
mov
ret
xchg
xchg
adc
add
cmp
or
mov
stc
mov
inc
adc
push
lds
jns
push
lcall
pop
cltd
pusha
out
test
sub
fnsave
mov
fildl
dec
jnp
cmp
sbb
or
mov
dec
xchg
test
notb
andb
lea
inc
sbb
or
dec
jno
cmp
mov
sbbb
insl
test
lret
xchg
inc
mov
jne
pop
sub
adc
mov
adc
insb
imul
mov
and
shlb
mov
or
and
arpl
sbb
negl
fnsave
cs
stos
out
das
test
xchg
int3
scas
cld
mov
push
jmp
xchg
mov
jae
adc
unpcklps
fs
dec
adc
push
dec
sti
into
add
ficoml
frstor
pop
cld
test
mov
add
pop
stos
movsb
xchg
add
lods
cmpsl
adc
lret
adc
cmovs
xchg
pop
and
and
rcll
fildl
lods
addr16
add
mov
ljmp
divl
sbb
pop
test
push
dec
xorl
xor
cmpsb
mov
dec
mov
adc
xor
fwait
shrl
lods
andb
pusha
cmp
lret
popf
loop
sbb
inc
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
aaa
bound
invd
add
jp
mov
adc
rcl
lahf
pop
push
xor
sub
xchg
mov
imul
arpl
lock
xchg
lods
ret
aas
pop
lret
add
inc
add
mov
popf
ret
in
push
ds
loopne
int3
ds
push
mov
clc
dec
sbb
inc
daa
dec
dec
inc
sbb
cltd
or
pop
sub
scas
jae
ret
loope
push
cmp
push
rorl
cmp
sub
mov
into
mov
ds
push
outsb
dec
push
mov
xchg
rcl
jp
mov
punpckhwd
mov
push
fcompl
and
and
mov
xor
jbe
in
mov
icebp
sub
and
and
mov
sub
repnz
mov
xchg
insl
lods
mov
rorb
push
loopne
mov
out
lds
xor
add
out
mov
testb
insb
jb
xor
add
inc
push
popa
inc
pop
sub
loopne
out
fistps
bnd
lds
pusha
cmp
pop
aaa
jle
leave
outsl
mov
scas
or
in
rcll
sbb
mov
lcall
inc
out
in
les
pop
jbe
adc
cli
sbb
sub
xchg
mov
les
les
pop
xor
aas
jo
and
lods
out
pop
adc
jno
jl
adcb
jecxz
pop
pop
stc
fidivl
mov
dec
sbb
pop
sahf
stos
out
outsb
dec
out
dec
les
dec
add
sub
faddl
loope
call
leave
mov
push
xor
or
out
jge
push
mov
clc
loopne
lret
popa
aaa
inc
xchg
out
jecxz
mov
rolb
push
cmp
cmp
sub
push
sbb
dec
jmp
cmp
sub
je
aam
scas
lret
dec
or
adc
lods
push
cld
pusha
mov
pop
xchg
or
add
sub
pop
cld
xor
aaa
or
add
fwait
sbb
int
sub
mov
xchg
jmp
jo
cmp
sbb
in
cmp
xor
cmp
xor
scas
cltd
inc
js
cmp
xorps
out
loopne
cmp
or
dec
iret
js
insl
and
mov
dec
aam
or
xchg
cmpsl
stos
cmp
ds
mov
mov
addr16
mov
or
rorb
int
pop
ja
sub
push
add
push
cltd
movsl
cmp
dec
cli
cmp
es
push
xchg
mov
or
jbe
aaa
mov
daa
add
jmp
xchg
sbb
jo
lahf
jae
dec
mov
loop
addl
shrl
dec
mov
ljmp
jne
sub
xor
jecxz
into
repnz
and
sub
in
pop
in
inc
mov
pop
pop
inc
sbb
sbb
cltd
sub
iret
jmp
mov
inc
xlat
sub
andl
adc
idivl
leave
rcrl
mov
adc
jg
pop
mov
sahf
xor
push
pop
inc
mov
test
push
jmp
xchg
xchg
vpandn
pop
fimuls
pop
jg
pop
jnp
add
imul
call
into
ror
mov
cltd
push
adc
idivl
jl
mov
daa
push
mov
je
dec
std
outsl
sti
or
loopne
jge
fisubl
rcrb
inc
into
imul
arpl
mov
rorb
push
fsub
cmp
daa
test
sub
sarl
jle
mov
rcrl
jle
inc
mov
js
sub
mov
and
jb
push
mov
mov
add
js
sbb
imul
mov
imul
insb
in
in
aas
add
imul
mov
jg
or
lret
jnp
mov
imul
lcall
xor
loop
xchg
sbb
cmp
xor
aad
aas
add
ret
hlt
push
push
inc
dec
movsb
inc
pop
in
js
stos
aaa
push
das
int
mov
stos
jp
rclb
jmp
out
jns
popf
pop
and
jg
rcrb
inc
repz
jns
mov
xchg
pop
test
xchg
push
cltd
xor
add
push
cmpsb
lcall
out
jmp
xchg
add
push
add
cmpsb
shll
cltd
push
scas
pop
lea
loop
sbb
rcll
jnp
scas
test
mov
iret
dec
jp
mov
cli
dec
pusha
add
insb
cld
sbbl
aam
pusha
das
repz
cmp
aad
les
adc
mov
push
cmp
sbb
test
fnstsw
ds
add
or
push
filds
fdivs
jecxz
mov
rol
jne
sbb
push
and
fs
pop
xor
jl
inc
push
jne
mov
cmp
out
ret
mov
mov
pop
pop
dec
pop
mov
jno
out
and
xchg
pop
jb
mov
ja
jg
add
cltd
push
xchg
clc
das
dec
inc
push
movsb
mov
orb
inc
sbb
sbb
scas
or
int3
cs
push
es
xor
sub
movsl
ja
cmpsb
cmpb
mov
inc
sbb
jecxz
dec
clc
push
add
mov
fadd
inc
push
sahf
cmc
lahf
push
ja
or
outsb
fnsave
loopne
xchg
xor
push
pop
add
mov
push
arpl
dec
jmp
fs
jle
out
xor
dec
or
sub
jmp
ret
aad
les
shrl
xlat
and
stos
xchg
call
cwtl
add
and
jbe
mov
icebp
inc
xor
or
mov
aaa
lock
or
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
nopl
push
cli
inc
stc
and
stos
in
out
les
out
jg
scas
ficoml
mov
pop
pop
lods
mov
cmp
pop
mov
ljmp
add
add
repnz
iret
test
adc
lret
xor
into
or
pop
test
lods
jle
sarb
out
sbb
aad
into
mov
push
fdivrs
sub
mov
jge
in
imull
bound
aaa
jg
pushf
iret
cmp
push
ss
ficompl
dec
pop
aas
push
shl
sbb
xchg
fsincos
and
negb
or
sbbl
es
jmp
div
sub
stos
aas
mov
fldln2
in
scas
out
lret
xchg
gs
jbe
out
mov
mov
ret
aam
rcll
sbb
std
sub
jl
decb
test
sbb
sbb
xor
jp
jmp
js
jmp
adc
mov
cmc
mov
jo
cmp
dec
xlat
ja
pop
es
loop
cmc
popf
push
cmpsb
lods
mov
fstpl
and
sbb
sub
sub
jno
pop
pop
ljmp
mov
or
jns
dec
cmp
inc
mov
ror
push
js
cli
inc
arpl
insl
ret
pusha
aas
jae
in
jae
leave
or
jp
dec
andl
leave
bnd
jb
or
dec
cwtl
loopne
xchg
mov
aam
mov
sub
pop
fistpll
popa
or
xor
cmp
jl
push
mov
popf
fdiv
sbb
scas
mov
mov
push
in
sub
and
xor
imul
lods
sti
ret
outsl
cmpsl
fwait
sbb
cmp
es
or
mov
xchg
xor
push
mov
cmpsb
xchg
shll
int3
loop
arpl
loop
adc
out
mov
inc
movsb
mov
movsl
xor
in
jg
lods
and
sbb
sub
icebp
sarb
or
out
lods
sbb
mov
imulb
pop
dec
jne
jb
aas
mov
jo
mov
ja
shlb
stc
pop
inc
movsb
add
cmc
rcrl
push
rcll
push
lods
sub
xchg
in
mov
popa
lods
dec
in
outsb
cltd
out
or
mov
and
dec
je
xor
xor
dec
and
mov
fmuls
jns
xor
hlt
mov
aam
pop
push
push
jle
cmp
imul
insb
ja
xchg
mov
sbb
pop
movsl
stos
mov
mov
jp
repz
sbb
data16
pop
push
mov
fisttps
dec
cmc
push
iret
push
dec
pusha
ja
or
roll
sbb
adc
in
sub
add
and
popa
insl
mov
fsts
das
shl
cmpsb
hlt
pop
or
xchg
xor
mov
inc
adc
sub
arpl
jb
inc
sub
andl
popf
sahf
sbb
stos
popl
xor
pop
add
mov
adc
imul
inc
stos
jg
pop
pop
mov
fistl
outsl
mov
loop
or
inc
shr
mov
xlat
and
sbb
pop
fisttpl
loop
push
pop
cwtl
mov
cmp
mov
mov
cmp
push
inc
mov
adc
xlat
lods
in
sub
xor
test
pop
inc
out
lahf
movsl
test
pop
call
pop
push
dec
xchg
or
iret
psadbw
pusha
cmp
cs
test
mov
mov
cmp
fucomi
xchg
jmp
cmp
mov
insb
jmp
je
std
jo
mov
js
std
cmp
xchg
mov
dec
adc
xor
leave
or
addr16
jns
jle
cld
add
movsl
jp
sbb
mov
iret
aad
xchg
outsb
or
enter
stos
fisubrs
sbb
mov
or
mov
pop
lods
jecxz
lds
dec
mov
or
pop
xor
test
into
inc
push
nop
mov
dec
ja
adc
sbb
iret
test
cli
dec
mov
inc
sub
test
aas
loopne
scas
ja
cmp
dec
xor
fwait
pop
lcall
mov
push
pop
fdivs
gs
popf
pop
mov
push
shlb
or
es
insb
pop
stc
ds
dec
out
jg
inc
jecxz
cmc
ss
jo
jmp
cld
and
sub
and
fsubrl
pop
stos
inc
ds
cmp
in
clc
dec
fwait
push
aaa
xchg
push
ret
out
test
icebp
jnp
sarl
dec
stc
mov
in
xchg
add
dec
mov
mov
sahf
iret
lock
mov
mov
adc
mov
jo
fstps
mov
jmp
jmp
cmp
push
adc
rol
cmp
adcl
sbb
xchg
mov
push
bound
dec
pusha
xlat
adc
sub
std
add
aaa
pop
repz
inc
jmp
outsb
bound
rorl
lahf
xor
ja
stc
std
sub
push
ja
ret
dec
or
or
push
sbb
mov
push
push
jb
adc
pop
repnz
stos
inc
or
out
or
adc
roll
add
cmp
sub
dec
and
ss
pop
and
adc
ja
out
rorl
test
movsb
test
sub
loope
add
inc
inc
push
ja
dec
mov
out
sbb
xchg
add
push
ljmp
fdivrl
mov
jae
xchg
mov
jb
loop
jno
cmp
fdivrs
dec
mov
rcr
jo
sub
out
xor
outsb
mov
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
pop
mov
invd
add
mov
outsl
test
cmp
xchg
pop
out
xor
add
or
push
out
inc
cmp
mov
push
xchg
pop
idivb
pop
mov
aam
cli
mov
pop
jle
mov
sub
fwait
aad
and
sti
fsubrp
out
faddp
popa
arpl
jo
aam
xchg
push
lret
adc
jl
pop
jp
mov
outsb
ret
stc
es
or
push
out
daa
and
mov
mov
test
cwtl
ss
fwait
mov
bound
inc
hlt
bound
jmp
stos
jecxz
jno,pn
ds
xor
push
pop
inc
adc
std
add
aam
xchg
sub
push
std
xchg
or
test
sbb
ja
cmp
push
inc
sub
pushl
loopne
dec
jmp
xchg
divl
sub
aam
add
lods
movsl
sub
pop
sbb
xchg
fdivrl
lahf
sub
mov
fisubl
mov
adc
xor
and
pop
sub
ret
mov
cmpsb
mov
xlat
in
add
into
mov
insl
and
inc
loopne
xor
inc
xchg
clc
sub
cld
jg
js
dec
cltd
mov
iret
pop
fsubrl
mov
pop
leave
std
shrl
lods
in
cmpsl
inc
shlb
lods
jnp
cli
push
adc
rcr
push
push
test
jl
arpl
cmp
xchg
data16
xchg
sub
mov
jl
scas
xorb
lock
inc
jnp
mov
mov
xor
mov
cli
mov
stos
add
and
lods
pop
imul
push
aad
sti
rcl
xorb
into
fstl
sub
loopne
jle
fimuls
fwait
xor
test
out
push
inc
pushf
enter
clc
mov
ljmp
inc
aam
iret
in
ds
icebp
jno
lea
and
jmp
dec
pusha
sbb
inc
xchg
pop
jae
mov
mov
scas
mov
inc
int
movsl
fidivs
iret
aam
sub
jg
inc
pop
mov
pop
mov
or
adc
jae
push
mov
pop
cmpsl
popf
cmp
inc
mov
aaa
xchg
dec
xorb
or
inc
add
pop
dec
or
inc
xor
enter
adc
repz
pop
int
mov
push
cld
mov
push
in
shrb
pop
mov
mov
pop
aas
movl
data16
lds
adc
xchg
les
mov
push
pop
sub
fdivs
testb
ja
out
xor
scas
mov
stos
or
daa
jnp
in
pop
jbe
xchg
icebp
scas
adcl
xor
and
mov
jg
mov
add
jnp
outsb
sbb
mov
mov
add
hlt
je
es
pop
mov
mov
mov
fs
mov
push
mov
sarb
xchg
xchg
inc
mov
xchg
dec
or
in
movsb
lahf
jo
xchg
sub
xor
sahf
or
mov
aaa
lret
jb
icebp
cmp
or
adc
or
pop
pop
mov
hlt
scas
mov
rcl
sbb
push
imul
inc
std
lea
dec
sub
repz
dec
jo
pop
nop
cld
add
dec
jge
mov
movsb
jae
dec
lods
leave
test
ljmp
push
cmpsl
fnstcw
scas
pop
push
jnp
shlb
jecxz
and
iret
lods
dec
adc
mov
sub
jmp
mov
or
cltd
and
out
or
jb
mov
jae
hlt
mov
push
test
pop
mull
stc
pop
cmpsb
inc
push
sahf
popa
dec
cmp
jle
mov
or
ja
cmp
insl
imul
int3
sbb
adc
int3
fwait
xchg
mov
and
imul
xchg
popf
push
aad
fiadds
and
sbb
test
inc
xchg
push
jo
ss
xchg
cmp
mov
mov
jnp
hlt
fwait
push
stos
lahf
mov
pushf
mov
rolb
loopne
stos
outsb
jo
mov
or
xor
aas
xor
xor
inc
mov
test
imul
sahf
cli
js
cwtl
in
loop
push
pop
push
scas
fldl
popf
mov
cwtl
jg
stos
dec
imul
stos
into
push
pop
idivl
mov
mov
jmp
rcrl
fs
imul
lcall
dec
adc
mov
sbb
lret
jno
dec
push
inc
mov
cmp
sbb
xchg
inc
sahf
mov
dec
xchg
jno
jnp
or
sbb
fdiv
or
shrl
data16
shufps
xchg
scas
ljmp
clc
sbb
movsb
jno
sub
pop
int
int
mov
clc
cld
jbe
sbb
mov
dec
icebp
mov
jae
jbe
jnp
lcall
or
cli
jbe,pn
insl
lock
xchg
rclb
and
pop
js
dec
aaa
jne
lea
sbb
lahf
add
xor
jnp
add
adc
test
push
adc
loop
push
push
sub
out
xchg
hlt
insl
pushf
sub
jg
and
aaa
fiaddl
and
xor
mov
leave
in
cmp
mov
lds
push
gs
jae
pop
pushf
pop
lea
mov
arpl
dec
sbb
pushf
pop
jae
mov
rcr
push
jnp
jae
aam
fadd
push
jo
pop
sub
mov
imul
leave
push
aad
loopne
inc
or
push
ss
jg
sbb
jae
cmp
lret
mov
lds
adc
icebp
test
mov
je
mov
lock
inc
sub
mov
push
pop
int
cmp
stos
add
sub
mov
mov
jge
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
xor
data16
dec
invd
add
cmovg
and
xchg
pushf
test
fnstsw
inc
adc
pop
les
and
cmpsb
xchg
popa
aam
stos
js
push
xchg
xchg
rcrl
aaa
xlat
cmp
lods
mov
lds
adc
cmp
dec
and
push
stc
lea
xchg
fbstp
jmp
mov
filds
sub
sbb
xchg
and
arpl
and
shll
inc
pop
jp
sbb
and
movsl
clc
ja,pt
mov
or
cmp
shlb
pop
gs
pop
dec
jmp
jg
subb
pop
push
mov
adc
into
add
out
sbb
dec
dec
jmp
pushf
mov
aaa
fimuls
pop
cmp
and
sub
lds
hlt
lret
sbb
out
repz
mov
mov
fldl
jge
jnp
sbb
cld
repz
fnstsw
nop
cmpsb
mov
in
cmpsl
or
loop
shll
dec
xor
arpl
icebp
outsl
push
mov
inc
cmp
and
jbe
mov
pop
mov
adc
xchg
xchg
mov
ljmp
xchg
decl
or
lcall
sbb
in
inc
and
mov
xchg
out
mov
adc
lods
jmp
int3
jne
pop
mov
ret
in
mov
dec
sahf
in
sti
fmul
jmp
enter
stc
xchg
inc
js
cmc
lahf
ror
mov
cli
ja
stc
outsl
jae
rcrl
and
and
sub
or
mov
in
test
and
dec
lds
jo
xchg
sub
dec
dec
das
lcall
jns
fucom
mov
rcl
push
insb
cmp
push
rorb
stos
mov
jmp
jne
scas
sbb
add
movsb
icebp
inc
sbb
out
sbb
addr16
or
cmp
cmpsl
mov
adc
ja
push
cld
jmp
push
cmp
aam
add
fwait
adc
adc
scas
out
int3
jae
add
dec
out
xlat
dec
outsl
call
in
xchg
cmp
cmpsl
fisubl
cmp
cmp
hlt
leave
mov
xor
into
pop
adc
mov
and
shl
cmp
loop
jle
ds
push
sbb
sahf
cmp
ror
testl
rcrb
rcrb
cli
jge
imul
sbb
add
xor
pop
jl
mov
push
mov
add
aad
popf
jge
aad
lcall
adc
xchg
or
adc
stos
xor
stos
xchg
iret
and
mov
cmpsb
pusha
lods
pop
dec
pop
pop
jo
aaa
mov
dec
mov
int
popa
sub
sbb
pushl
daa
add
adc
test
xor
or
rcr
mov
sbb
es
inc
icebp
cs
add
mov
sbb
out
xor
pop
xor
movsb
cmp
push
mov
out
add
movsb
cmpsl
cmp
xchg
jno
pop
clc
add
xor
mov
rclb
dec
aad
cltd
aad
gs
fstpl
add
stc
mov
cmp
aas
stos
shr
jo
out
inc
gs
push
repz
cmp
mov
pop
jo
pushw
add
sti
or
mov
pop
shrl
add
xor
xchg
jle
pop
test
and
repz
pushf
outsb
sbb
test
sbb
mov
mov
dec
inc
loop
xchg
pushf
mov
aas
jp
fldcw
mov
inc
or
wrmsr
dec
pop
adc
movl
inc
and
mov
inc
into
sbb
sub
mov
push
mov
xchg
inc
repnz
mov
cmp
pop
andl
lret
or
pop
sub
push
lds
mov
push
adc
in
lcall
stos
lcall
xchg
cmp
cs
scas
les
dec
cmp
jb
add
push
mov
gs
fucom
xor
out
or
repz
stc
ds
mov
cmp
scas
inc
daa
jg
push
ret
jge
add
and
iret
bswap
or
lcall
fdivl
cltd
or
notl
clc
insl
and
mov
cmp
xchg
sbb
cmp
fadd
sahf
cmp
pop
in
js
test
dec
and
std
cmc
cltd
pushf
jl
sub
xchg
mov
loop
std
stos
pop
mov
clc
inc
dec
es
out
movsb
insb
test
pop
push
add
ljmp
mov
mov
xchg
leave
rolb
sbb
lock
jle,pt
loop
dec
ret
repz
call
add
div
or
xchg
or
mov
pop
not
aad
mov
jno
fdivl
mov
test
dec
xor
jge
std
mov
push
ja
scas
push
and
adc
shrb
inc
das
push
jns
cmp
cmp
mov
aam
lods
pop
repnz
mov
enter
loope
push
xchg
add
xchg
pop
jecxz
outsb
xchg
push
rep
pop
daa
jg
insb
jl
loop
sbb
pushf
push
daa
inc
aad
adc
dec
sbb
fsts
cli
pusha
loop
lahf
and
loop
cwtl
adc
insl
and
pusha
push
dec
mov
cld
jb
push
popf
adc
outsb
dec
or
cmp
les
mov
fidivrs
out
enter
in
stos
ds
inc
flds
fdivp
jb
sahf
jecxz
jb
outsb
sub
lcall
mov
push
in
dec
sub
shrb
jl
into
es
cmp
or
out
inc
adc
cmp
cmc
mov
out
xor
andb
add
jp
fists
or
ret
cmp
mov
cli
rcl
inc
outsl
shl
fstpl
cld
pop
push
in
neg
sub
insl
inc
push
push
inc
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
sub
cmpsl
into
mov
lcall
mov
mov
xor
in
mov
sbb
imul
lds
jp
or
lret
in
es
lret
fsubrs
cli
or
ficoml
xchg
cmp
vxorps
lds
dec
inc
cs
icebp
push
in
stos
enter
pop
addr16
dec
sbb
imul
or
push
adc
sub
les
fst
clc
cltd
ret
fstps
push
mov
push
mov
imul
cmpl
lea
xchg
or
mov
ret
push
imul
addl
dec
mov
jmp
ss
leave
scas
mov
or
add
cwtl
mov
sub
aaa
fsubl
mov
adc
ss
mov
xchg
push
pop
sahf
xor
adcl
and
mov
and
lods
int3
sbb
inc
ljmp
cs
or
in
inc
cmp
and
jo
or
ret
mov
jbe
sbb
std
or
rorb
add
push
sub
fcomi
fstps
popf
cmpl
addl
mul
icebp
clc
jno
fildl
mov
jp
jnp
addr16
cld
movsl
or
mov
pop
pop
push
jnp
faddl
pop
pop
sbb
pop
hlt
push
cltd
pop
rcrb
pop
and
enter
mov
sbb
jae
popa
ljmp
int3
mov
aaa
pop
sbb
pop
pusha
mov
mov
push
xor
ret
fcomps
jne
scas
pop
mov
jl
inc
sub
ljmp
in
fmuls
test
hlt
push
pop
xor
mov
xchg
in
hlt
sbb
repz
jl
jmp
in
jmp
jno
dec
xchg
mov
adcb
push
and
dec
cmp
xchg
loopne
imul
rorl
ss
pop
and
roll
fs
call
and
dec
push
xor
dec
sahf
sbb
cmc
popf
sti
repz
test
pop
mov
xor
stos
mov
or
data16
bnd
adc
push
gs
stos
mov
or
mov
fxch
dec
clc
cmp
data16
sbb
cmpsl
sbb
fsubrl
or
dec
test
lret
cld
mov
pop
shlb
xchg
enter
mov
imul
xchg
pop
push
in
xchg
inc
and
ficompl
xchg
pop
pusha
test
aam
dec
push
xchg
inc
dec
imul
movsl
pop
popl
ja
test
movl
dec
cmpsb
shrl
push
icebp
repnz
lds
xlat
imul
adc
push
movsl
out
add
stos
leave
and
arpl
adc
sub
fnstcw
cwtl
les
aam
mov
and
cltd
aam
pop
xor
faddp
cmc
inc
das
jo
fxch
stos
scas
cmp
test
xor
loopne
sarb
std
push
test
mov
stc
mov
xor
movsb
stc
pop
push
outsl
mov
xchg
fs
insl
fldl
cmp
fldt
stc
sbbb
mov
pop
mov
insb
cltd
xchg
stos
cwtl
push
movlps
ror
adc
cmp
inc
sbb
jne
mov
add
scas
aaa
mov
xchg
add
sahf
push
aad
loopne
xchg
cmp
dec
jge
rcll
dec
cli
push
fwait
dec
push
in
data16
pop
fldcw
mov
xchg
xor
and
mov
mov
hlt
shl
es
mov
jg
mov
mov
movsb
test
stos
adc
add
pop
mov
scas
pusha
or
iret
pusha
fisttpll
popa
pop
dec
xor
roll
addr16
xor
out
mov
stc
ss
pop
test
inc
xchg
lret
dec
data16
fidivs
push
or
scas
fmull
inc
sbb
gs
icebp
mov
adc
adc
hlt
mov
mov
push
adc
inc
mov
mov
movsb
mov
cmp
movsb
hlt
enter
mov
mulb
shrb
and
mov
sbb
and
sbb
insl
dec
fsubrl
push
sbb
and
daa
lahf
outsb
popa
xor
xchg
pop
je
test
jecxz
dec
dec
test
cmc
aad
cmp
inc
mov
mov
jns
dec
xchg
sub
xor
repz
adc
cltd
lahf
popf
pop
dec
dec
mov
mov
mov
push
xchg
push
jl
icebp
test
rorb
cwtl
sbb
cmp
jo
push
jmp
test
fistps
jo
pushf
incb
std
pop
jnp
pop
xchg
shlb
test
out
bound
sub
lcall
or
gs
repnz
scas
pop
cmp
in
test
inc
sub
xchg
or
dec
mov
data16
adc
mov
lahf
pop
lods
insl
jne
and
cmp
dec
jmp
shrl
mov
cmpsl
popf
or
sarb
sub
leave
jg
jmp
pop
cltd
sahf
lea
and
push
js
lock
adc
push
mov
rcrb
cmp
outsb
inc
inc
xor
jo
and
and
xchg
push
sub
xor
inc
sbbl
loop
xchg
mov
cmp
push
jl
pop
mov
fs
les
pop
cmpsb
jbe
and
imul
imul
mov
lods
push
aam
pushf
lret
mov
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
add
inc
invd
add
punpckldq
dec
xchg
sbb
mov
mov
hlt
clc
sbb
fldcw
sbb
and
in
mov
dec
jbe
push
mov
orb
ret
jns
in
bts
add
es
push
and
pop
bound
cld
inc
dec
aad
ljmp
into
shlb
sbb
dec
insl
xchg
in
nop
insb
or
in
aaa
loop
mov
movl
cmp
rcrl
scas
arpl
push
fbstp
stos
jl
fists
add
adc
out
push
ljmp
leave
repz
mov
push
sub
sbb
icebp
sub
sub
cld
jge
jns
test
lcall
stc
sbbb
fimull
pop
aaa
lret
loope
push
out
shl
pop
bound
in
scas
outsl
orb
jl
jmp
out
scas
jle
inc
ds
jle
jno
push
sbb
int3
mov
cmp
lret
leave
sbb
std
lea
add
add
nop
pop
loop
pop
lret
cmp
adc
sub
das
ret
jns
ds
lret
rclb
ds
push
and
mov
cmp
jo
push
jecxz
stos
mov
adc
data16
lock
popl
mov
inc
scas
rcrl
in
out
lea
movsb
xchg
sub
xor
bound
mov
pop
mov
cld
sbb
adc
out
jns
mov
imul
dec
fxch
out
fnsave
mov
pop
sbb
sub
sar
cltd
outsb
mov
lret
fstps
aas
pop
mov
xor
aas
stc
mov
fwait
or
stc
dec
pop
mov
les
pop
cli
jg
mov
in
repnz
pusha
out
mov
cmc
add
inc
mov
pop
sub
mov
mov
inc
icebp
daa
mov
push
decb
in
pop
dec
adcb
jae
fdivl
inc
lds
mov
arpl
das
sub
push
je
xorl
frstor
movsl
dec
out
sub
sub
outsl
mov
pop
and
pop
cmp
mov
adc
aam
mov
popf
cld
cmc
mov
lds
lea
and
sbb
repz
push
roll
cmp
mov
xchg
jl
pop
sbb
outsl
inc
sub
movb
cs
jle
xchg
dec
xor
lods
int
inc
xor
movsb
dec
xchg
mov
int3
push
mov
push
mov
out
ret
ds
jle
mov
lods
repnz
xchg
dec
push
movsb
jecxz
push
sbb
out
mov
or
repz
pop
dec
or
sub
xor
adc
mov
pushf
inc
dec
xchg
or
int
or
loop
sbb
fmull
xor
and
lcall
stos
movsl
push
push
sti
mov
notb
fmull
loope
cmp
loop
sub
or
into
ljmp
sbbb
or
push
dec
cmpsb
mov
arpl
xchg
imul
test
cmpl
pop
cwtl
jae
jmp
cmp
daa
mov
lea
cmp
fcoml
xchg
icebp
mov
xlat
test
test
push
push
sbb
lock
fisttpl
mov
gs
pusha
fwait
cmc
inc
or
lret
cmp
out
inc
lahf
sub
inc
es
in
es
loop
daa
mov
sahf
cmp
pop
push
mov
sbb
punpckldq
shlb
mov
pop
lret
stc
adc
popa
pop
or
test
or
loopne
sub
xchg
xor
jbe
out
in
adc
sbb
hlt
or
imul
loopne
imulb
repz
xchg
jmp
pop
shlb
fsubs
movsl
push
cmp
lock
dec
out
push
movsb
xchg
push
inc
popa
orb
je
adc
adc
addr16
xor
mov
mov
shlb
pop
imul
ficompl
mov
dec
jb
pop
call
xor
pop
arpl
xlat
push
clc
cmp
repnz
xchg
lods
pop
push
icebp
sbb
xchg
cmp
rcr
mulb
jbe
sub
imul
shlb
and
call
xchg
adc
jnp
jns
push
mov
dec
adc
das
ds
mov
iret
sub
in
out
ds
lret
pop
dec
inc
daa
shrl
fld
sbb
mov
mov
idivl
pop
dec
xchg
adc
gs
cmc
push
jl
xchg
aad
stc
push
push
jno
lahf
nop
push
push
dec
sbb
xor
movaps
sub
mov
push
push
testl
fdivrs
mov
ja
enter
loop
js
dec
test
fwait
aaa
push
and
test
repz
cmp
pop
je
fsubrs
and
inc
inc
scas
pop
inc
orb
xchg
mov
in
sub
jmp
aas
xchg
andb
inc
jae
or
test
cmp
call
lods
inc
xor
lods
ds
sti
aaa
cs
jns
loop
mov
ffree
or
pop
aas
repz
out
mov
cmpsb
lea
xchg
out
mov
adc
xor
sti
aam
or
in
cmpsb
jbe
cmp
aad
add
aam
addr16
in
aad
inc
roll
xchg
jp
add
cmp
jbe
pusha
xchg
mov
jmp
pop
fildll
out
xor
mov
and
or
adc
push
sti
jae
push
xchg
add
jo
add
lcall
sahf
mov
mov
aas
pop
loope
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
pop
js
xor
mov
psubusb
sahf
xchg
or
xor
jb
iret
mov
cmpsl
rclb
popa
test
fsubs
sub
inc
mov
movsl
out
dec
cmpsl
jo
jno
and
adc
out
mov
mov
addr16
xchg
sub
or
sub
and
out
jne
jns
add
fstps
mov
push
jne
add
mov
movsb
jle
lahf
ds
or
fucomip
cs
sahf
inc
sub
mov
pop
add
lods
push
mov
inc
adc
xor
inc
lcall
jnp
mov
or
inc
jg
std
aam
jbe
stc
cmpsl
xorb
push
push
lods
andl
wrmsr
pop
xchg
mov
xor
decb
jp
fstl
mov
shrb
sbb
push
insl
sub
aas
mov
mov
push
jne
sub
xchg
shlb
insl
mov
idiv
adc
stos
dec
adc
test
filds
dec
inc
je
not
cmp
pop
iret
in
cmpsl
push
jnp
adc
mov
push
mov
imul
div
test
dec
test
nop
mov
xadd
pop
add
out
test
call
dec
cmc
sub
mov
clc
in
xchg
xor
dec
fdivrs
or
xchg
bound
scas
sbb
scas
cmp
cli
fstl
cmp
adc
or
push
bound
mov
mov
mov
jmp
xor
fwait
repnz
cmpsl
mov
fcoml
sbb
and
sbb
mov
adc
mov
lcall
jle
sahf
and
into
xor
rcrb
clc
jmp
nop
shll
loopne
mov
out
add
lcall
idiv
jg
xorb
das
xchg
adc
push
cmpb
add
and
xchg
inc
or
lret
sub
arpl
pop
out
rcl
jge
ret
subl
das
mov
jl
add
mov
mov
dec
push
pop
lea
xchg
push
stos
in
adc
cwtl
mov
push
test
cli
add
arpl
adc
fidivl
adc
or
gs
add
xchg
pop
xor
fimull
rcrb
add
lcall
jnp
out
test
js
inc
adc
fwait
rcl
test
insl
push
xchg
ljmp
inc
int3
addr16
pop
push
mov
das
aas
sti
testl
jbe
pusha
in
int
xor
or
pop
out
dec
add
mov
pop
jnp
in
pusha
xor
inc
mov
and
dec
push
mov
sbbb
rorb
jnp
mov
mov
leave
pop
insb
cmp
divl
shll
adc
mov
cmp
jge
scas
sbb
sbb
jae
cmpsb
sub
ret
aaa
pop
shrb
je
jg
arpl
xchg
mov
sti
cwtl
stos
sub
lds
lahf
sbb
or
sub
int
xchg
lds
xor
push
xchg
jmp
jle
js
lret
jle
jecxz
cmp
rcrb
les
mov
push
cmp
mov
dec
pusha
xchg
sar
sbbb
clc
fiadds
xor
fs
ret
mov
iret
imul
shrl
nop
jg
fisubs
cs
mov
arpl
add
fcoms
mov
arpl
push
loope
cmc
inc
out
fld
fcompl
ljmp
dec
jo
shlb
lcall
cmp
dec
repz
es
pusha
xor
mov
sub
out
push
fsubrs
cmpsb
pusha
jle
fldenv
in
enter
jecxz
pop
sub
lock
movsl
lds
or
mov
or
push
jnp
aas
sub
sbb
movsb
lea
mov
std
mov
push
and
cmp
push
test
rclb
ret
cli
popf
sarl
xchg
mov
popf
pop
pop
data16
dec
cld
push
inc
xchg
rorl
test
sbb
sub
js
jno
jns
sub
dec
xlat
mov
mov
xor
ja
xlat
scas
inc
lret
mov
gs
add
and
push
xchg
push
rorb
push
es
ror
pop
mov
inc
and
aam
sub
dec
cmp
test
aas
scas
xchg
xchg
xchg
movsl
xchg
pushf
pop
outsb
xor
pop
jo
pop
mov
pusha
sub
adc
flds
scas
testb
push
cmp
lret
outsl
add
mov
inc
iret
in
lea
xor
rorl
shll
push
lds
rcrl
inc
fdivrl
cmp
fcmovbe
lds
dec
inc
fdiv
addb
or
mov
push
cwtl
sub
aaa
jo
adc
jne
mov
mov
dec
pop
sbb
push
jo
das
push
es
sub
test
fwait
push
cmp
fsubl
adc
ret
fwait
push
ja
pop
ja
jno
cmpsb
rorb
lcall
xchg
icebp
fildll
pop
push
push
shl
or
mov
jae
mov
enter
movl
jmp
lcall
out
jge
push
mov
iret
icebp
icebp
clc
test
test
movsl
icebp
xchg
lahf
ja
mov
mov
jnp
push
push
pop
or
sbb
mov
fcomps
add
in
sbb
call
lret
insl
loop
daa
push
push
fistpl
hlt
jp
inc
sbb
xchg
inc
sbb
pop
shl
cli
enter
jns
mov
js
xor
aaa
push
sbb
cmpsb
int3
shrl
xor
or
cmpl
inc
push
jo
jp
aaa
fstps
pusha
andl
push
sbb
bound
ret
out
in
pushf
pop
push
mov
popa
mov
mov
mov
outsl
mov
xchg
pop
dec
xchg
sarb
mov
test
insl
ljmp
sub
call
add
gs
adc
pop
cli
jbe
and
orb
sub
stos
mov
xchg
aaa
mov
popa
xchg
or
pushf
mov
lods
cli
icebp
jge
in
cmp
jg
inc
popl
inc
push
aas
repz
loope
inc
inc
jae
add
into
jecxz
sub
push
jge
add
xor
push
pop
mov
icebp
scas
or
cmp
int
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
xchg
mov
jno
xor
out
push
lock
aad
loope
mov
add
and
mov
lods
mov
scas
testb
dec
out
xor
aaa
test
inc
daa
pop
imul
mov
sub
pop
sub
sarl
sbb
mov
sarl
mov
xlat
push
sub
pop
xchg
dec
movl
push
inc
repnz
bnd
mov
pop
push
inc
cmovbe
addl
adc
push
outsb
cli
mov
adc
es
adc
insb
push
data16
sbb
sub
andb
xchg
fnstcw
pop
inc
pop
or
sti
cli
cmpsb
out
lods
enter
aaa
adc
fsubs
adc
fwait
push
cmp
jnp
loopne
xchg
lret
scas
mov
stc
notl
pusha
adc
push
int
icebp
xor
mov
out
test
mov
xor
adc
stos
clc
mov
push
cltd
push
pop
mov
and
adc
int3
and
sbb
call
cltd
testl
pushl
xorl
imul
imul
jo
mov
int3
fidivs
imul
pop
fcmovne
call
imul
sub
movsl
xchg
dec
movsl
int3
bound
sbb
int3
add
push
push
inc
add
mov
aas
popf
and
outsb
jae
test
xor
sbb
mov
popf
call
sbb
fsubrp
adc
inc
cli
mov
imul
push
inc
sbb
push
inc
cmp
scas
hlt
in
cs
popf
lods
xor
divl
je
lcall
je
cmp
pop
stc
int3
jl
aad
mov
mov
xchg
inc
lcall
fsin
cmp
add
je
xchg
mov
mov
add
enter
pop
outsl
push
cld
mov
in
inc
ja
xchg
jmp
dec
push
mov
mov
push
iret
in
push
js
cmp
shlb
inc
mov
rorb
gs
out
sub
movsl
dec
mov
negl
and
xor
cmp
sarl
sahf
ret
test
insl
rcl
ja
movsl
dec
dec
repnz
mov
std
test
cmp
cmc
addb
dec
or
push
repz
insl
xor
sub
cwtl
pop
mov
or
push
shrl
lods
mov
xor
movsl
inc
pushf
fdivrl
ds
lods
outsb
sub
inc
pop
inc
repnz
mov
sbb
mov
mov
xchg
scas
sub
mov
pop
add
arpl
xchg
bound
cwtl
sub
or
mov
sbb
dec
pop
xchg
testb
adc
adc
sti
inc
das
out
jle
outsl
test
add
lret
mov
leave
push
test
push
int3
test
dec
out
enter
adc
cmp
inc
mov
sbb
lahf
fcomip
xchg
fimull
xchg
fwait
sbb
mov
ljmp
or
movsl
push
imul
iret
ss
mov
fs
pop
leave
imul
jae
lret
sbb
xchg
fldcw
sar
cmp
xchg
aam
outsl
or
lcall
adc
ficomps
inc
xchg
stos
aas
dec
dec
xor
repz
in
xchg
mov
mov
add
mov
mov
add
enter
dec
and
sti
push
les
adc
push
mov
ds
inc
mov
mov
xlat
repz
xchg
inc
icebp
outsb
sbb
inc
fsubrl
sbb
jecxz
out
mov
add
mov
imul
xchg
pop
shr
lret
lret
mov
adc
aas
inc
cmc
daa
jne
cmp
mov
dec
xchg
push
or
stc
sahf
jl
mov
subl
pop
jmp
es
mov
xchg
mov
jno
cmp
fidivrl
add
jge
jns
pop
xchg
mov
dec
movsb
out
lcall
mov
xchg
mov
add
sbb
mov
jmp
rcr
loop
addr16
ds
mov
in
xchg
sub
mov
repz
adc
jp
mov
and
sarl
fadds
mov
mov
mov
mov
lods
fisttps
add
xor
dec
push
lods
cmpsb
pop
sub
pop
push
add
dec
popf
sbb
fdiv
mov
pop
loop
mov
cmp
stos
addr16
loop
and
sbb
outsl
lds
mov
sbb
xor
push
jo
and
addr16
jo
hlt
jle
sub
loop
out
inc
jb
or
or
add
and
push
aam
mov
fnstcw
xchg
pop
xchg
adc
fcmove
push
lahf
clc
mov
push
loopne
imul
adc
pop
in
or
or
sbb
pop
mov
push
lods
scas
lcall
movsb
mov
test
or
lret
fcomp
xchg
scas
repnz
jp
pushl
pusha
shr
mov
mov
sbb
mov
inc
idivl
dec
push
lahf
aam
cwtl
pop
bound
xchg
jecxz
adc
fsubrl
adc
cmc
jb
xor
jg
inc
dec
shlb
test
ss
adc
andb
sti
fimuls
sub
mov
push
mov
in
jecxz
jb
les
fnstenv
xchg
bound
add
sbb
or
dec
shlb
out
loope
sub
pop
divb
sbb
mov
sahf
cmpsl
negb
and
rcr
jecxz
push
int3
aas
cltd
lods
orb
andb
in
mov
mov
add
mov
mov
mov
test
std
iret
sahf
cmp
and
fisubrs
xchg
mov
dec
mov
notb
mov
jae
xor
mov
cmp
mov
fildll
mov
arpl
fisubrl
sub
aad
add
arpl
dec
and
and
jno
fimull
aas
outsb
fidivrs
test
pop
cwtl
pop
jns
add
pushl
std
jecxz
ret
fsub
cltd
xlat
imul
push
mov
shrl
mov
jae
int
dec
cmpsb
sub
adc
add
sub
in
xchg
sahf
data16
add
sub
jg
inc
aaa
aaa
cmpsl
fcmovnu
pmaxsw
imul
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
sbb
outsb
xchg
pop
pop
mov
pfrsqrt
mov
add
es
push
or
sub
push
aad
jp
jl
cmp
dec
inc
dec
sbb
popa
jmp
mov
data16
movsb
mov
fcompl
loopne
cmc
into
or
movsl
cmp
iret
sub
outsb
cmpsb
les
or
pop
pop
std
jo
call
dec
ficompl
inc
or
inc
pushf
or
stos
jl
cmp
inc
mov
sub
shlb
repnz
test
mov
imul
ret
enter
outsb
movsb
test
add
jae
adc
mov
mov
inc
popf
les
pop
or
lea
jb
movsb
cwtl
and
jge
or
push
inc
mov
pop
mov
insl
pusha
sarl
scas
or
aam
mov
insl
fisttpll
outsb
dec
xchg
mov
adc
jle
movsb
push
mov
sub
mov
ret
mov
ds
jle
xchg
pop
out
add
xchg
cltd
cwtl
jp
push
mov
enter
outsb
mov
dec
dec
pop
cmp
sbb
jmp
ror
adcl
stos
sub
stos
popa
sbb
daa
and
push
jb
loopne
push
mov
inc
jne
cmc
xchg
cs
popf
cmp
push
mov
add
inc
hlt
inc
sub
adc
inc
movsl
mul
xor
ficoml
xchg
cmp
mov
mov
fistl
stos
lods
dec
sbb
push
rcrl
dec
sbb
xchg
adc
sub
iret
test
lods
loopne
pop
adc
sub
out
adc
in
dec
scas
xchg
inc
int3
pop
jo
insl
and
int3
sub
popa
cmp
add
mov
jge
mov
jl
pop
cs
adc
ret
dec
xchg
loope
xlat
stos
inc
jl
ret
mov
imul
dec
pop
jnp
paddsw
stos
mov
sbb
sahf
and
scas
dec
imul
cmpsb
mov
ja
jb
jle
mov
test
test
sub
sbb
lret
inc
ror
adc
jnp
in
loop
add
push
daa
xchg
js
jg
bound
std
jmp
xchg
and
or
iret
in
mov
lods
bound
adc
mov
mov
inc
lret
push
cmpsl
stos
movsl
loop
push
fiaddl
arpl
mov
pop
cld
pop
aad
cld
sub
in
sarb
jb
stc
fldcw
mov
pusha
cltd
imul
inc
shlb
sub
or
loopne
repnz
push
sbb
clc
mov
mov
lahf
mov
call
jl
jle
aam
notl
lret
jno
cltd
clc
sbb
aad
test
adc
cli
xlat
les
mov
push
rclb
mov
pop
ja
jecxz
sbb
jo
xchg
sbb
pop
mov
dec
in
ret
jp
xor
es
jns
dec
subl
outsl
adc
push
push
mov
mov
mov
icebp
xor
hlt
add
inc
mov
push
imul
xchg
inc
fsub
arpl
push
insl
imul
sbb
ret
rcrl
xchg
call
imul
lock
in
mov
mov
add
mov
sub
loope
int3
stos
lahf
cwtl
sbb
sbb
movsl
popl
repz
pop
sub
mov
stc
add
lods
clc
nop
cmp
push
and
lds
aaa
xor
lock
mov
ja
pop
xor
dec
ss
mov
or
dec
stos
xor
sbb
mov
fcomps
or
sub
xor
pop
fsubp
scas
push
leave
shrb
rorb
out
andb
out
xor
xor
int3
jb
inc
pop
aad
xlat
mov
aas
or
test
addr16
stos
pop
and
cwtl
xchg
fisttpll
inc
adcl
adc
loop
in
fstpl
mov
popa
fstpt
mov
int
jae
int
faddl
jne
rolb
call
nop
popa
outsl
mov
gs
ds
lcall
ror
in
lods
sub
push
in
dec
sahf
fstps
fld
std
inc
repz
jae
adc
inc
inc
ret
in
mov
dec
into
jae
stos
dec
mov
fdivrs
shl
out
jecxz
orl
xlat
enter
jnp
rorb
or
scas
movsb
dec
cmp
mov
jbe
mov
fcmovnb
sub
das
dec
out
in
ljmp
sarb
into
xor
push
xchg
daa
pop
mov
mov
ret
aaa
xchg
mov
pop
or
push
sbb
cmp
cld
stos
mov
repz
js
stos
xchg
mov
or
call
cmpsl
or
sub
lret
push
mov
jmp
inc
sbb
mov
hlt
pop
sbbb
add
mov
sbb
xlat
push
pop
fadds
call
fildll
add
push
dec
fwait
gs
mov
ja
pop
jl
mov
jecxz
inc
xchg
jg
mov
stos
pop
outsb
inc
jl
mov
repz
out
test
rcrl
sarl
shlb
ret
adc
negb
add
xor
and
or
cli
inc
add
dec
aas
mov
and
outsb
sbb
sti
xchg
fbld
cwtl
ficoms
mov
jg
fs
hlt
xor
lods
or
loope
mov
jns
sbb
and
shl
xor
out
cli
dec
test
xor
adc
mov
jle
xlat
xchg
push
adc
outsl
stc
and
cmpl
xchg
lcall
test
adc
fcoms
or
leave
sbb
adc
repnz
sbb
nop
sub
sarl
push
mov
pop
lahf
clc
pusha
lret
jb,pn
popf
adc
call
imul
arpl
mov
xchg
sar
pop
and
imul
call
cmp
mov
lds
repz
jns
into
in
pop
jnp
add
sbb
cmp
inc
or
pop
roll
cltd
lahf
push
push
xor
push
out
xor
incb
flds
dec
mov
ds
jns
cmpsb
push
aaa
sbb
cmp
aam
cmp
pop
xlat
ficoms
fnsave
jb
cli
or
fdivs
sub
lret
mov
mov
cmp
enter
push
jb
inc
jbe
push
jno
packuswb
aad
cli
sahf
sub
repz
mov
sbb
inc
iret
add
lahf
cmc
rorl
lock
sbb
ror
mov
repnz
jmp
into
add
or
jne
xor
sbb
adc
and
xor
cmpsl
addb
inc
push
add
add
and
cmp
call
jns
cmp
test
xchg
or
or
push
les
push
cmp
add
popf
pop
sysenter
lahf
repz
imull
sahf
out
add
mov
push
push
stos
shll
xchg
mov
inc
mov
inc
mov
or
and
mov
add
add
aaa
dec
mov
mov
or
xor
mov
xlat
daa
les
pop
or
mov
xchg
cld
jge
ret
adc
and
lea
mov
sub
and
add
push
jae
xor
aam
mov
loop
mov
cld
pop
test
imul
xor
ds
add
jnp
aas
inc
cmpsb
inc
in
lock
mov
call
and
push
arpl
imul
mov
jecxz
fidivrl
aaa
andl
add
sbbb
xchg
fwait
test
in
sub
outsl
insl
push
popf
fisttps
push
push
clc
mov
lods
xor
cmp
cltd
sbb
jle
jmp
pop
scas
inc
pop
hlt
mov
cmp
fisttpl
in
aaa
mov
les
and
dec
pop
pop
cmpsb
inc
repz
lret
pop
movq
enter
cmpb
repnz
sbb
das
cmpsl
sbb
jb
cld
and
xchg
mov
inc
mov
push
sti
sti
inc
out
push
xor
rclb
mov
and
insb
fsub
sbbb
pop
test
mov
mov
sbb
cld
sub
mov
cmp
in
int3
mov
or
dec
std
pop
imul
push
mov
or
stc
fwait
testl
jno
adc
clc
dec
aaa
push
xchg
ret
data16
xchg
pop
mov
test
in
imul
push
mov
loop
push
add
sub
popf
mov
xchg
mov
mov
pop
shl
fildl
sub
sub
add
adc
rolb
cmc
inc
xor
int
push
pop
sub
test
sar
push
add
nop
test
aad
cmp
pop
mov
pop
dec
mov
jb
xorb
imul
add
xor
dec
fs
call
adc
loop
hlt
rorb
in
dec
in
mov
xchg
test
inc
jle
pushf
leave
clc
sbb
sarb
lret
test
repnz
jg
adc
mov
xor
ret
js
add
mov
pop
push
mov
scas
mov
mov
dec
test
sbb
xchg
xchg
test
push
mov
ret
fcomip
repz
cltd
jecxz
pop
add
test
cmc
ror
mov
insl
bound
fcmovnb
xchg
mov
dec
cli
xor
lret
lods
leave
add
jl
cld
sbb
bnd
adc
jnp
int3
xor
ret
jl
jg
fmulp
xor
std
xchg
cld
or
inc
popf
or
insb
adc
push
int3
nop
or
dec
aaa
cmc
mov
add
add
in
push
clc
pop
mov
aad
adc
dec
push
out
movsb
adc
lea
dec
notl
aas
lea
dec
in
js
scas
shrl
jmp
dec
and
inc
cmp
ret
push
shlb
jo
movsl
popf
rcll
xor
fisttps
cli
jge
jbe
add
orl
inc
enter
add
cmc
push
mov
lods
test
push
push
rcrb
push
sbb
xchg
rcl
loope
and
inc
loope
popa
xor
xor
cmp
lods
xor
fadds
dec
jle
addr16
mov
cs
xchg
adc
andl
push
out
sarb
add
imul
fdivs
aaa
sti
cmp
call
aaa
cld
push
cmp
xor
shll
pop
out
push
mov
pop
add
push
xor
sbb
dec
in
mov
and
mov
gs
and
enter
outsb
dec
insb
mov
scas
jge
popa
mov
fcoms
mov
daa
mov
jae
fisttps
dec
pushf
ret
adc
ss
fs
mov
aad
out
and
fwait
inc
cmpsl
scas
lcall
loopne
dec
xchg
mov
cmp
and
push
out
pop
mov
movsb
add
or
rolb
repnz
popf
mov
outsl
int3
repz
jbe
aaa
add
sub
xchg
push
loopne
in
inc
in
cli
call
mov
stc
dec
popa
cwtl
cmp
lahf
lea
movsb
int3
mov
mov
pusha
in
lods
cmpsb
lcall
sub
xchg
ljmp
xchg
popa
sub
inc
fcompl
aas
cmpsl
icebp
mov
ss
dec
mov
sub
adc
out
outsl
cmp
xchg
outsl
xor
mov
movsl
cld
push
and
lahf
js
xor
pop
sub
or
int
ret
in
aas
outsb
jmp
sub
sbb
loope
push
filds
ret
lods
dec
cmp
pop
cmp
jno
xchg
mov
jae
test
adc
and
inc
aas
fwait
xchg
mov
fildll
inc
ljmp
jle
iret
adc
mov
dec
mov
pushf
fnsave
mov
mov
mov
loope
lcall
inc
xchg
dec
jge
stos
cmp
stc
sub
sub
repz
lret
movsl
inc
insl
gs
mov
sbb
add
add
ljmp
sub
mov
push
dec
lods
push
jl
xchg
adc
lods
mov
jp
xchg
or
imul
lods
pushl
sar
sbb
push
jle
cmpsb
and
push
xor
mov
push
xor
jp
pushf
push
mov
fdivp
cmp
mov
mov
test
mov
cmp
add
xor
fucomip
jge
push
ja
xchg
push
fnstcw
stos
adc
outsb
cmpsl
push
std
imul
aam
mov
test
xchg
data16
inc
mov
add
out
std
push
out
add
inc
enter
add
adc
mov
aaa
cmp
mov
inc
rcll
mov
mov
xchg
ds
call
fstps
sub
cwtl
xor
push
scas
inc
clc
cmp
mov
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
push
mov
mov
and
rclb
add
pop
sbb
in
add
mov
cli
outsb
dec
sub
imul
sbb
pop
inc
ret
lods
sbb
mov
xchg
es
lods
or
sti
dec
adc
out
popa
test
add
xchg
inc
xchg
jecxz
pop
lods
daa
into
fsubr
push
pushf
cmp
test
rorl
push
pop
rep
mov
xchg
lahf
add
mov
jecxz
jne
rclb
sbb
pop
lahf
mov
rcll
lods
mov
or
xor
mov
mov
pop
fwait
jg
adc
jp
jbe
sub
mov
inc
push
lods
or
shlb
cmpsl
les
mov
sbb
int
loop
call
or
inc
or
loop
scas
push
jmp
xor
in
pop
inc
scas
mov
xchg
adc
sti
fsubs
scas
push
pop
mov
push
mov
xlat
arpl
ljmp
movsb
add
or
push
int
rcll
or
fisubrl
xor
lahf
push
mov
int3
ret
sbb
stos
bound
test
andb
xchg
jl
fldl
xor
and
mov
cld
inc
outsl
lret
sub
out
xchg
and
frstor
insl
shrl
lret
iret
sbb
mov
cltd
push
sahf
cmpl
arpl
std
pusha
and
enter
xor
scas
push
bound
call
xchg
and
pop
xchg
imul
xorl
dec
xor
push
inc
bound
jl
insb
jb
push
xchg
cmp
mov
cmp
jmp
and
mov
lahf
lret
cmp
lret
sub
push
test
add
jle
out
push
adc
sti
loope
cmc
dec
jns
mov
pusha
and
jmp
adc
aaa
stos
popa
pop
dec
xlat
and
not
enter
xchg
mov
pusha
sahf
test
addl
xchg
das
popa
insb
or
add
dec
xor
adc
stc
fldlg2
sub
leave
fstpl
int3
scas
pop
jbe
repz
movb
pusha
ret
sub
dec
out
lods
sbb
pop
dec
cmp
dec
out
dec
iret
add
aas
nop
mov
fidivl
dec
aad
hlt
xor
push
sbb
mov
xchg
and
dec
add
mov
test
or
jp
rcrl
divl
or
and
jecxz
and
sbb
jb
push
inc
xchg
sbb
cmp
jmp
daa
mov
push
mov
imul
ffreep
sbb
loope
mov
jb
test
mov
sub
add
mov
outsb
mov
out
sub
adc
lea
cwtl
adc
dec
shll
mov
pop
sbb
icebp
dec
scas
ljmp
mov
mov
mov
and
enter
jecxz
xchg
xchg
sbb
add
dec
jmp
mov
mov
dec
and
inc
mov
jb
lcall
aam
pop
ds
test
push
xchg
ret
ds
adc
insb
lahf
cltd
rcrl
push
pop
fdivrs
mov
jae
in
fdivrs
in
lods
jbe
cmpsl
test
mov
adc
sti
int3
in
test
in
push
adc
repnz
jnp
lret
out
push
test
mov
mov
sbb
cld
fildl
add
popl
pushf
das
pop
lods
push
and
mov
adc
jb
mov
sarb
rorl
sbb
xor
js
dec
jge
mov
stos
xchg
in
adc
outsb
pushf
or
je
leave
scas
andl
mov
sahf
mov
das
cmp
dec
loopne
push
shll
mov
cmc
fsubs
in
mov
sarb
and
lea
xchg
sub
inc
jge
scas
scas
mov
jge
cmp
xchg
mov
sbb
mov
mov
xor
push
sbb
jno
mov
sbb
ret
push
and
bound
inc
mov
in
mov
test
push
jbe
jle
fs
push
xor
mov
adc
mov
xor
and
pop
or
pop
repz
sar
int3
insb
aaa
or
adc
sbb
push
mov
push
out
mov
xor
pop
insl
mov
ja
into
test
jg
push
push
mov
sahf
sbb
fcomi
and
leave
xchg
jae
mov
push
aam
cmpsl
fwait
and
arpl
inc
push
jle
test
popf
imull
dec
mov
andnps
test
adc
cmc
out
xor
mov
ja
dec
clc
ss
push
mov
stos
imul
cvttps2pi
clc
mov
aam
xor
popa
and
pop
fidivs
cmp
jno,pt
dec
insl
xor
xorl
dec
cmp
cmpsb
push
sarb
cmpsb
insl
jmp
je
ss
pop
xchg
cmc
rolb
shl
sub
aam
add
jmp
inc
dec
movsl
adc
inc
fbstp
push
fistpll
inc
mov
push
or
cmp
mov
inc
stos
dec
cs
xor
or
pop
data16
loop
pop
cs
divl
mov
cmp
pop
scas
jae
divl
mov
and
enter
adc
mov
jmp
push
cmp
loopne
inc
pop
jno
push
xor
ds
ljmp
mov
movb
lea
lea
dec
cmpsl
jb
data16
ja
repnz
jb
in
test
cmp
rorl
lret
add
xchg
add
outsl
leave
fs
mov
aam
fldcw
insl
sbb
mov
imul
sbb
cmp
add
mov
lods
mov
add
ret
sahf
sbb
loope
loope
faddl
jl
outsl
xchg
stos
mov
cld
lods
arpl
mov
fnsave
cmp
int3
xchg
cmp
inc
mov
xchg
out
inc
scas
in
xchg
sbb
sbb
je
adc
loope
pop
or
leave
gs
repnz
inc
jmp
bound
jne
cmpl
xchg
lods
cli
jle
scas
repnz
sub
cmp
cmpsl
int
jp
sbb
push
dec
stos
clc
popf
push
dec
jb
fisubrl
push
sti
fdivrl
mov
daa
jmp
mov
dec
dec
sbb
push
iret
inc
inc
cmovle
push
ficomps
lahf
adc
push
jg
push
xor
icebp
jae
stc
mov
inc
mov
xor
lcall
mov
jno
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
imul
cmp
adc
and
sbb
sub
and
add
mov
jb
cmp
xor
lea
pop
add
mov
ret
or
mov
and
add
sbb
into
push
mov
dec
ficomps
in
loopne
mov
xor
insl
imul
sub
adc
xchg
imul
test
aaa
loopne
jb
mull
std
jne
int
push
sbb
add
sbb
fsubr
mov
mov
push
cmp
lcall
andl
jne
pop
lcall
rclb
dec
in
push
add
xor
sbb
les
mov
int
mov
sahf
push
add
rcll
push
leave
inc
xor
push
loop
mov
ret
repnz
cmp
outsb
pop
and
pop
jb
jbe
add
sbb
xchg
mov
jns
adc
ljmp
out
mov
jecxz
ja
ret
jb
mov
cmpb
out
jl
pop
pextrw
and
js
inc
inc
imul
push
inc
pop
add
shlb
inc
imul
ret
data16
mov
mov
sub
sbb
xor
dec
aad
mov
paddsb
mov
cs
loope
or
push
ja
jmp
test
jae
xchg
clc
sarb
bound
imulb
stos
sbb
fwait
test
pop
dec
std
xchg
aas
ljmp
cmpsl
test
cmp
and
test
dec
fnstcw
cmp
rcrl
cld
dec
inc
xchg
mov
fildl
es
into
push
ds
mov
xor
adc
push
jecxz
cltd
cmpsl
outsl
mov
les
stos
in
aam
mov
fisttps
hlt
pushl
lret
cmp
push
js
outsb
cmp
ret
iret
push
movsb
stc
or
push
mov
lret
pop
or
cmc
outsb
les
lret
arpl
jmp
xchg
inc
and
pushf
pushl
sub
cmp
or
mov
std
cmp
mov
push
and
and
enter
push
cmc
jno
je
adc
inc
stc
cli
sub
mov
jp,pt
cmp
mov
jge
iret
xchg
leave
pop
repz
pop
in
ja
int3
jmp
xchg
pop
sbb
dec
jecxz
xor
inc
flds
sbbl
and
cmp
in
shlb
lods
push
loop
lea
xor
and
lahf
mov
ret
pushf
cmc
subl
or
test
lret
pop
cmc
flds
push
inc
outsl
adc
fldt
fsubrs
shrb
into
sub
fnstsw
push
cmpsb
pop
inc
std
pop
icebp
add
push
data16
cmpsl
jno
push
and
movsb
out
cmp
xor
iret
jnp
xchg
enter
sub
arpl
cmpsb
adcl
cmpsb
addr16
or
dec
fcmove
mov
test
js
divl
in
insl
xor
pusha
sarb
ret
jmp
mov
lock
lods
les
fs
pushf
jge
fmul
adc
pop
shlb
aam
jp
and
or
cmc
mov
mov
out
std
lcall
mov
cmpsb
lcall
push
sbb
xor
pop
movsb
fisttpl
inc
mov
sbb
cld
dec
add
push
sbbb
shlb
pusha
cmpb
cmpsb
pushf
mov
mov
cli
mov
cmp
adc
dec
pop
fidivs
jmp
cmc
fldt
jne
push
and
jns
imull
mov
dec
xor
mov
gs
shrb
push
xor
or
jmp
jno
out
gs
inc
sti
lods
loopne
andb
add
mov
adc
sub
xchg
push
cwtl
add
xor
push
xchg
push
or
nop
xchg
add
arpl
cmp
jp
sub
mov
jne
pop
int
out
mov
add
mov
cmc
pop
sub
sub
xchg
mov
ret
fistps
mov
fldl
insb
or
daa
int3
or
adc
mov
pop
or
jge
scas
cmp
jnp
mov
mov
imul
inc
pop
inc
adc
outsb
mov
add
test
mull
cs
gs
test
test
xchg
filds
push
jmp
jae
sti
or
and
mov
push
jne
jbe
or
out
jne
cmc
and
ss
pop
ret
pop
fwait
in
popa
testb
cmp
in
pop
pop
jbe
cmp
add
inc
leave
loopne
mov
aaa
add
idivb
xchg
repz
js
jp
inc
cmp
and
stos
adc
or
inc
movsl
fisubl
test
out
and
test
js
xchg
xchg
out
xchg
scas
or
fldenv
dec
and
xchg
dec
inc
enter
or
jecxz
pop
pop
bound
cmp
sbb
add
aad
outsl
aaa
mov
sti
xchg
jge
dec
mov
movb
xor
jns
pop
pop
inc
rorl
je
pop
fimuls
popl
insl
rclb
adc
jle
adc
leave
adc
lret
jne
test
xchg
mov
xchg
mov
or
sub
leave
test
cld
or
jmp
mov
mov
mov
pop
adc
inc
cmp
add
fdivr
mov
iret
andb
mov
pop
xor
push
inc
mov
sbb
and
and
ror
adc
and
rcr
subb
imul
mov
push
jo
pop
mov
pop
jecxz
fmuls
scas
in
sbb
sub
cmc
and
mov
jo
adc
mov
and
ret
test
gs
out
mov
mov
mov
out
cld
gs
fadd
or
js
push
cli
fisttpll
xlat
arpl
xchg
aam
xor
lcall
mov
in
scas
arpl
movsb
xor
int
cmp
cmovge
lret
aad
roll
pop
shll
in
inc
jmp
movsl
sbb
test
push
or
sub
xchg
movsb
xor
jnp
addr16
adc
jmp
std
js
jo
xor
lea
add
outsb
daa
xchg
cs
sub
or
jmp
cmc
xchg
cmp
push
mov
adc
enter
int3
adc
and
hlt
dec
dec
sbb
out
dec
subl
add
dec
mov
mov
adc
or
scas
loop
push
out
jae
adc
ficoms
in
cmpsl
push
push
fcmovbe
mov
xchg
cmpsb
pop
cltd
pop
scas
lods
repnz
imul
int3
int
dec
push
xchg
add
and
xchg
push
cmp
mov
jg
pop
in
add
sbb
jl
adc
mov
data16
push
xor
test
xor
addr16
cmp
aas
sub
pop
repnz
in
dec
je
pop
add
push
mov
jecxz
inc
mov
pushf
test
cld
std
push
xchg
sbb
icebp
shrb
sbb
in
pop
xlat
pop
in
out
add
pop
jbe
into
int
push
push
bound
pop
push
xchg
pop
cmp
inc
mov
daa
outsl
int
jno
and
call
lds
mov
sahf
push
sarl
push
push
sbb
sbb
rcrl
xchg
icebp
mov
sbb
test
mov
sbb
cmp
jne
in
mov
xchg
mov
push
ja
inc
push
sub
outsl
sbb
push
inc
push
std
mov
out
lret
dec
nop
mov
dec
js
jb
rcr
adc
stos
cltd
pop
fidivl
jno
enter
dec
cwtl
mov
stos
adc
sub
clc
lods
sti
clc
pop
loope
dec
mov
mov
mov
fistpl
cwtl
mov
cld
inc
inc
subl
mov
shl
fbld
cmpsb
jb
pusha
xchg
iret
mov
adc
hlt
or
insl
and
cmc
xchg
xchg
dec
jle
pop
dec
gs
popa
add
xchg
or
fists
loop
es
mov
mov
pop
aad
iret
enter
dec
dec
pop
pop
mov
ret
dec
sbb
fsubr
call
cmpsb
lcall
fisttps
mov
sbb
jo
stos
adc
subl
and
mov
les
cmpps
movsb
test
jg
pop
gs
xor
in
das
hlt
repnz
xchg
bound
fdivrs
dec
dec
rorb
enter
lods
repz
mov
fsts
ret
push
mov
and
ljmp
leave
push
bound
or
cmp
cmp
repz
jno
into
cmpl
jmp
xchg
mov
sub
fnstsw
fdivl
vmovq
icebp
jle
push
jb
aaa
and
sbb
outsb
arpl
xchg
int
pop
repnz
sub
ret
mov
jae
and
sub
mov
sbb
outsl
push
push
add
icebp
loope
adc
and
lds
xchg
add
push
dec
pop
xor
mov
fmuls
xor
xchg
hlt
add
shrl
outsl
addr16
inc
arpl
push
fadd
cmpsb
fnstcw
sbb
jg
movsl
or
js
leave
pop
dec
jb
dec
js
imul
stc
mov
xchg
decb
or
stos
into
mov
fstpl
cwtl
into
fiaddl
int3
sti
cwtl
test
out
dec
jne
subl
dec
fistps
mov
xor
push
pop
dec
push
xor
ljmp
adc
loope
sub
lahf
pusha
xor
popf
call
andl
aas
adc
test
mov
popl
scas
jmp
ja
loop
addr16
lock
inc
xor
mov
pop
fcmovnu
mov
adc
fldcw
outsb
std
pop
pop
jnp
mov
pop
fnstenv
addl
rcrb
lahf
mov
adc
push
stos
mov
push
inc
add
shrb
imul
and
jecxz
incl
mov
jae
ljmp
lea
pop
ficoml
nop
push
add
mov
and
lret
adc
inc
dec
test
ja
insl
roll
movsl
scas
js
pop
int3
mov
and
andl
xor
pusha
inc
dec
mov
cmp
stc
aaa
xchg
loope
push
enter
dec
xchg
out
in
jg
cmp
call
cltd
pop
aaa
test
mov
jnp
outsb
xor
int
xor
cmpsb
and
negl
and
adcb
subb
arpl
add
in
das
mov
mulb
sbb
jb
or
xor
mov
les
mov
cld
push
fs
pop
loop
mov
pop
mov
dec
loop
pop
pushf
and
pop
sbbl
mov
xor
mov
cmpsl
pop
shrb
sbb
jge
add
popf
in
test
xor
sbb
cmp
push
push
mov
pop
je
xchg
lea
push
lock
push
cmc
clc
sub
sbbb
aaa
lcall
mov
scas
mov
push
or
mov
push
int
les
xor
ret
cmp
test
push
or
jg
addr16
sub
insl
push
mov
outsl
and
sarl
jp
leave
cwtl
mov
dec
xor
imul
add
sub
jl
push
push
das
out
mulb
and
lret
out
sub
mov
in
mov
jle
adc
adc
xchg
push
or
mov
jmp
add
clc
mov
mov
ret
insl
inc
in
cmp
xor
outsb
sbb
and
out
push
leave
call
jl
pop
fwait
loope
sarb
jbe
mov
xchg
or
jp
jbe
popf
jae
mov
enter
loop
or
add
xchg
dec
adc
jns
cs
push
aad
sbb
push
ja
in
xchg
sbb
out
icebp
add
arpl
push
int
outsb
cmp
pop
out
mov
and
or
cld
jmp
mov
sbb
incb
std
and
gs
mov
and
xchg
in
je,pt
jae
inc
dec
cmc
mov
fwait
lods
outsb
in
jne
mov
inc
std
mov
fsubrl
imul
sub
aam
sub
std
push
push
sbb
jle
xor
sarl
and
lods
sti
stc
push
int
dec
fcmovnu
dec
jmp
inc
jb
dec
and
or
add
fstps
or
movsb
ret
sbb
cli
add
maxps
int3
mov
mov
add
fldcw
cmp
mov
mov
ss
inc
loop
ret
lea
xor
cltd
inc
dec
movsb
mov
cmp
movsb
mov
imul
adc
ss
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
std
xchg
adc
and
inc
sti
jmp
aas
adc
push
push
sub
test
mov
mov
mov
mov
das
lock
daa
sub
repz
mov
mov
pop
mov
loopne
jo
inc
shll
dec
arpl
xchg
pop
es
push
test
loop
or
mov
sbb
jmp
fadds
xchg
outsl
dec
clc
xchg
jg
adc
push
out
inc
jg
cmc
and
ljmp
arpl
xor
fdivrl
lock
lcall
sub
ret
dec
mov
test
pop
gs
cmp
push
lahf
pop
xchg
iret
in
mov
jno
push
adc
pop
push
sti
sub
xor
int
mov
dec
cmp
daa
repnz
repnz
fisttpll
or
roll
add
or
xchg
mov
lret
outsb
mov
cmc
fisubl
hlt
in
sub
enter
addr16
sahf
mov
or
cmp
xor
mov
mov
cmp
pop
sbb
loop
pushf
addr16
lock
sbb
sub
sti
cmp
add
xor
sub
data16
dec
outsl
in
cltd
testl
cmp
es
test
imul
fdivr
push
sahf
aas
adc
cmc
fiaddl
mov
jmp
scas
add
push
lret
jo
imull
int3
xor
jmp
adc
hlt
in
je
push
or
pushl
pop
add
movsl
and
add
cmp
xchg
ficoms
and
stc
sub
cmpsl
inc
inc
push
aas
sub
push
push
push
cmp
loop
fbld
add
push
outsl
xchg
and
jp
aas
jle
jae
mov
pop
int
or
in
fstpl
hlt
out
cmpb
insl
adc
std
adc
mov
ja
stos
sti
lcall
push
insl
jne
xchg
dec
lods
cld
mov
inc
insb
leave
in
pop
jle
mov
mov
sub
or
cmp
push
xchg
and
add
mov
repz
push
out
mov
cs
cwtl
fpatan
lods
jo
lret
lods
loop
mov
or
xchg
xor
inc
mov
loope
je
scas
aaa
add
jb
mov
andb
adc
ja
movsb
xchg
xchg
sub
adc
incb
scas
adc
es
xor
push
stos
adc
jmp
fildl
push
mov
mov
jmp
std
xor
cmpsl
out
outsb
aaa
outsl
aaa
icebp
iret
mov
jle
nop
mov
clc
xlat
mov
adc
push
mov
xchg
nop
cs
inc
bound
dec
inc
fmuls
mov
out
jns
std
jl
inc
xchg
into
cs
and
or
jl
stos
setnp
xchg
les
fmuls
movsl
mov
add
data16
or
pop
sub
sub
leave
push
mov
in
ficoms
inc
or
enter
push
xlat
cltd
cmp
or
xchg
cmp
xchg
mov
xchg
xorl
mov
jbe
outsl
push
push
cwtl
cmc
sarb
mov
xchg
aaa
subb
push
scas
cwtl
mov
das
clc
and
sub
clc
subb
sahf
jge
lea
cmp
ljmp
push
lret
sub
push
lods
mov
js
adc
imul
push
decl
push
mov
pop
pop
pop
xor
jp
cmp
adc
pop
adc
dec
leave
movsb
shrb
push
xchg
pop
add
adcb
and
xor
xchg
fcomip
pusha
clc
xchg
sub
sub
dec
mov
dec
sahf
fldt
mov
cmp
sub
xchg
or
data16
mov
dec
movsl
mov
int3
dec
xlat
adc
sbb
pop
inc
movsb
fidivl
out
ficompl
out
sub
in
pop
jg
mov
cmp
fneni(8087
notl
mov
mov
push
dec
movsl
leave
lret
sbb
xor
mov
xor
sbb
in
xor
dec
jo
mov
stc
sbb
mov
movsb
std
dec
lahf
pop
or
shrl
jmp
lret
rcrl
in
ficompl
lret
xor
add
adc
out
push
sbb
mov
jmp
leave
xchg
loopne
in
testl
add
enter
stos
testl
sub
sub
push
imul
cmpb
inc
cmc
je
push
cmp
or
jge
adc
push
cmc
lds
mov
lods
jns
and
lcall
negb
cmp
je
xchg
cmp
sub
and
pop
ret
mov
lods
mov
cli
outsl
push
mov
cmpsb
fildll
out
cmc
cmp
fadds
pop
idivb
push
mov
roll
xchg
jae
push
or
mov
jbe
push
pop
imul
inc
aam
lret
ss
gs
cmpsl
or
xor
xor
out
loope
roll
inc
mov
ret
ret
jo,pt
cmc
testl
xor
cmp
add
fcomip
lret
sbb
lods
aas
cmp
dec
hlt
inc
out
push
stc
mov
ds
push
shll
jg
aas
lods
fsubr
popa
into
inc
test
jmp
cwtl
add
mov
lods
xchg
push
in
xchg
xchg
sub
xchg
jnp
inc
lods
fcmovnu
mov
dec
jns
fldt
loopne
push
adcb
cld
enter
xchg
outsl
mov
adc
push
in
pushf
and
jmp
cmc
lcall
aam
stos
mov
lods
inc
sbb
das
rcll
sbb
or
xor
int3
ds
mull
addr16
mov
outsb
or
mov
push
rorb
or
mov
enter
imul
pop
xchg
sbb
cmp
push
mov
xlat
fdivrs
push
call
xlat
pop
add
popf
or
adc
idivb
cli
in
sbb
dec
dec
adc
imul
adc
cmpsb
dec
cmp
mov
out
push
orl
pop
into
mov
cmc
jecxz
pop
mov
lret
mov
add
xchg
pusha
xor
addl
dec
cmp
sub
popf
mov
dec
lds
scas
cmpsb
pushf
hlt
mov
idivl
xchg
xor
jae
add
xor
lods
xor
enter
imul
daa
leave
inc
xor
push
mov
popa
cmc
andl
mov
sbb
repnz
lea
push
xchg
dec
loopne
jg
int
mov
aaa
jecxz
pop
pop
fwait
popa
sub
imull
mov
add
sbb
push
cld
dec
sbb
mov
push
pop
ja
and
movups
mov
icebp
mov
and
and
jmp
jne
add
subl
xchg
pop
clc
ss
addr16
and
pop
test
lret
jnp
mov
out
lcall
shl
jbe
ret
cli
aas
pop
or
daa
aad
push
add
inc
mov
repz
aad
sbb
jecxz
mov
xchg
dec
out
pop
test
mov
popa
inc
xor
mov
call
outsb
sarl
int3
mov
insl
and
sbb
insl
xchg
cmpsb
push
cmp
fistpl
dec
test
int3
ret
jl
mov
mov
mov
mov
les
inc
addr16
pop
sub
mov
shlb
mov
mov
mov
mov
inc
push
cmp
lret
or
mov
mov
cmp
notl
cmpsl
pusha
push
mov
push
call
movsb
sub
icebp
test
gs
mov
sbb
push
sti
aad
xchg
incb
jge
je
cmp
xchg
dec
push
lcall
mov
pusha
xchg
cmp
mov
cmp
lods
dec
ret
scas
mov
lods
fistpll
sub
insl
cltd
sbb
arpl
sub
arpl
fistpl
aaa
lods
outsl
dec
es
lahf
xlat
mov
movsb
gs
stc
xchg
repz
cltd
int3
stos
mov
addb
mov
rol
int3
mov
loope
push
pop
inc
cmp
mov
inc
scas
dec
xchg
xor
test
xor
mov
int
mov
xchg
push
je
push
nop
popa
xor
scas
pop
cmp
lea
rorb
sbb
lret
pushf
and
add
sbb
sbb
jmp
mov
leave
and
sub
cmp
stc
sarb
xor
mov
xlat
jmp
lret
lahf
xor
inc
jge
andb
in
stc
inc
in
dec
out
das
js
lcall
outsl
sbb
xchg
jns
leave
cmp
sub
pop
cmc
daa
xchg
sbb
stos
scas
xor
mov
fistl
mov
and
hlt
sti
insb
jno
enter
subl
frstor
cbtw
aad
dec
out
lds
push
push
ss
movsb
fstps
inc
xor
cmp
pop
mov
mov
stos
sbb
cmp
jo
repnz
cmp
lcall
imul
sbb
std
inc
adc
or
pop
stos
lods
rol
dec
xor
mov
imul
dec
loopne
sub
sbb
out
repz
pop
mov
or
jno
pop
dec
stc
fildl
fldcw
or
sub
outsl
sbb
in
mov
push
dec
xor
out
pop
add
mov
mov
jne
out
fwait
push
std
sbb
pop
jmp
adc
mov
adc
andl
pop
and
ds
mov
mov
push
lahf
jo
and
test
cmp
xchg
mov
cmpl
fcomip
scas
xor
dec
stos
mov
fs
xchg
or
jmp
js
sar
sub
sti
sub
stos
hlt
dec
mov
xor
repz
pop
sahf
pop
pop
in
sbb
adc
loopne
or
movsb
ret
xchg
scas
jno
or
mov
or
dec
xchg
shld
xchg
gs
xchg
sahf
pop
shll
insb
mov
fsubl
jmp
dec
inc
leave
dec
int
mov
mov
add
je
cli
and
pop
add
and
dec
push
shlb
xor
or
cmp
out
lock
iret
out
mov
in
ja
dec
cltd
jmp
jb
leave
xchg
xor
das
sbb
ret
sub
mov
aaa
cmp
cmp
repnz
fisubrl
mov
and
and
xchg
dec
xor
push
push
sbb
loop
dec
in
push
jo
icebp
cmpsl
pop
pushf
add
repnz
test
xor
pop
sahf
mov
sub
addr16
sbb
cld
mov
sub
movsb
idivl
jno
das
ljmp
sbb
lea
dec
push
adc
cmpb
test
dec
dec
xchg
negl
or
pop
mov
adcb
adc
push
gs
push
nop
insb
cmpl
sbbl
dec
sub
cltd
clc
aas
add
mov
sbb
and
lock
jo
cmc
stos
pop
pop
and
loopne
pop
bound
xchg
push
mov
push
in
push
or
xchg
mov
out
xor
push
mov
movsl
aam
mov
nop
shl
test
leave
mov
js
mov
cmpsl
push
pop
insl
pop
jno
leave
aam
test
repnz
xor
clc
icebp
test
pop
sbb
call
pop
imul
rcll
cmp
mov
lahf
mov
mov
insl
mov
dec
dec
mov
movsb
mov
jbe
mov
push
sub
pop
idiv
mov
call
jle
mov
adc
fsubl
decl
pop
mov
mov
sub
lret
pop
rcll
mov
movswl
sbb
lods
xchg
dec
popa
jmp
inc
lret
push
test
pop
ja
aaa
sbb
jecxz
jge
mov
jmp
aaa
dec
inc
xor
push
orb
add
cmp
mov
sbb
and
das
rcrl
add
add
push
xchg
xchg
js
jmp
sbb
inc
and
xchg
push
fldt
pop
popa
push
hlt
leave
ja
outsb
out
cmp
mov
popf
adc
lods
xchg
data16
push
jns
dec
sub
leave
test
cmp
push
fstpt
or
subl
mov
pop
clc
fimull
mov
insl
xor
add
lahf
dec
xchg
stc
dec
sbb
cs
push
pop
push
outsb
sub
insl
or
mov
mov
clc
shlb
fdivs
pop
int3
ss
sbb
xor
jg
jb
xchg
aaa
cmp
dec
cmp
stos
fsubrs
adc
andb
push
out
les
mov
lret
inc
jge
mov
inc
jg
cli
data16
adc
inc
xor
pusha
add
dec
add
mov
cmp
mov
test
outsb
adc
sub
fidivrl
cli
movsb
push
lret
jecxz
sar
hlt
cli
popf
xor
stc
jo
aam
add
insb
mov
xor
or
ret
call
mov
pop
hlt
add
mov
rorl
scas
mov
addr16
mov
and
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
repz
xchg
adc
and
xchg
or
insb
es
jp
push
mov
push
scas
lahf
inc
popf
dec
out
dec
lret
xchg
sub
adc
xor
jmp
push
inc
sub
xchg
xchg
sbb
pop
jge
mov
inc
mov
cli
mov
pushf
mov
aad
cmp
mov
imul
call
jl
test
sbb
out
fstl
sub
std
add
iret
pop
xor
xchg
xchg
fsubrs
jg
divl
push
mov
adc
cwtl
mov
rorb
cld
or
bound
and
es
addr16
cmpsb
sbb
aaa
out
push
xchg
pop
cmpb
fs
adc
mov
cmp
fdivp
cmp
add
rcll
push
jo
lcall
sahf
decl
mov
es
mov
rcl
shll
rorl
iret
rcll
xchg
or
stos
fidivrs
hlt
cld
cmp
inc
icebp
ja
sub
mov
ljmp
mov
ds
aam
cmc
mov
jmp
pop
mov
imul
daa
iret
ficompl
mov
cwtl
sahf
xlat
scas
sti
or
push
or
jbe
sbb
jle
xor
add
outsb
rcr
lahf
loopne
das
sahf
push
loope
xchg
or
pop
mov
sti
in
jecxz
fwait
xchg
call
pop
adc
xchg
jmp
dec
cmpsb
mov
aas
sti
adc
pushf
aas
push
or
insl
cwtl
xor
test
push
mov
enter
and
cmc
in
stos
jo
es
mov
xchg
inc
lcall
retw
mov
aad
aas
mov
fs
je
pop
sub
xlat
arpl
daa
in
pop
push
cli
inc
ret
scas
jb
ss
ret
adc
jno
add
xchg
sbb
les
jb
mov
imul
shlb
dec
jmp
mov
or
pop
and
sub
cli
repz
jns
jge
mov
popa
pop
jmp
sub
outsb
into
mov
dec
outsl
jmp
lods
push
cmp
lahf
insb
sbb
mov
or
or
add
pop
mov
ljmp
add
push
arpl
push
rcll
push
les
lret
scas
jb
xchg
sbb
mov
mov
js
sub
lcall
adc
ret
rcll
and
fimuls
mov
movsb
adc
push
icebp
jbe
lret
add
popa
fistpl
popa
fdivrp
sub
push
mov
arpl
pop
lods
inc
sbb
ret
xchg
inc
rcrb
sbb
mov
xor
jae
dec
cmp
dec
shl
pop
add
adc
sbb
popl
xor
loope
scas
in
xchg
mov
pusha
repnz
pushl
mov
add
bound
or
nop
dec
in
cmpsb
pop
dec
cmc
dec
sbb
and
pop
push
rcr
icebp
enter
xchg
daa
push
fidivrs
xchg
bound
sahf
sti
sub
xchg
enter
push
sti
test
xchg
hlt
mov
cmp
sub
pop
stc
adc
lods
cli
ljmp
cmp
sub
inc
xor
inc
sahf
dec
xor
insb
out
filds
dec
mov
movsb
sbb
stc
mov
adcb
pop
lcall
mov
jp
or
aaa
jnp
mov
mov
ds
push
mov
xchg
shrb
sbb
repnz
pop
lea
sub
jnp
cltd
mov
pop
push
xchg
mov
in
pusha
dec
cmp
mov
mov
daa
hlt
pop
xor
cmp
jns,pn
pop
xlat
mov
adc
pop
icebp
xor
or
out
push
cmp
lods
addr16
xchg
cmp
shlb
andb
inc
mov
ja
mov
mov
sbb
gs
sbb
js
aaa
push
das
jne
inc
jg
sub
and
mov
pop
aas
fucomip
dec
push
lret
imul
xchg
pop
sbb
pop
mov
aam
add
ja
imul
into
sub
ja
mov
int
jmp
arpl
jne
test
pop
es
xlat
xchg
ds
push
mov
cmp
ja
shlb
das
hlt
jp
lahf
int
cmp
xchg
ljmp
add
in
faddp
or
inc
ret
xor
jb
pop
sarl
out
jno
and
jno
mov
pop
clc
dec
inc
mov
mov
lods
cli
pop
andb
xor
leave
cmova
shrl
stc
mov
adc
repnz
cmpb
cmp
cltd
jle
cmp
push
arpl
jmp
inc
pushf
push
adc
mov
and
xchg
data16
nop
out
dec
addr16
fs
test
movsb
xchg
fwait
push
pop
cmp
cmp
clc
sub
je
mov
jae
add
loopne
movsl
lret
adc
call
mov
cmp
cmpsb
add
pop
pop
test
push
roll
mov
pop
imulb
dec
dec
or
aam
add
pushf
xor
adc
push
shll
add
mov
scas
stos
sbb
mov
mov
aas
mov
inc
stos
fidivrl
loopne
cmpsb
cmp
and
push
push
enter
xchg
pop
xchg
subb
xor
andb
sti
and
and
mov
xchg
jbe
mov
cmp
push
mov
insb
jmp
sbb
cmp
add
inc
mov
add
dec
loope
movsl
add
pusha
icebp
loope
cld
test
xchg
mov
sti
adc
dec
xchg
shlb
mov
cli
imul
sub
ret
inc
out
in
mov
fstpl
push
push
popa
js
add
aas
out
in
js
add
imul
adc
inc
lret
xlat
cmpsl
shl
xchg
cmpsb
inc
out
mov
clc
cmpl
das
pop
sub
ljmp
jle
je
insb
xchg
gs
subl
loope
cmpb
sub
fs
popa
ds
in
imul
int3
pop
pop
push
jg
or
roll
lahf
pop
arpl
pop
cld
cld
outsl
ds
add
test
lcall
leave
pop
sbb
imul
pop
popf
ljmp
outsb
jg
insl
stos
pop
scas
std
bnd
into
push
ljmp
pop
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
test
and
cmp
ja
andb
int
ret
sub
mov
insl
jae
cmp
mov
mov
mov
dec
sahf
mov
insl
imul
repnz
lcall
sub
jp
orb
test
sub
stos
xchg
pop
or
xchg
cmp
cmp
and
call
ljmp
das
cmp
jnp
movsl
mov
inc
repz
cli
xchg
ljmp
rdtsc
in
xchg
xor
cmpsl
pop
movsb
inc
mov
dec
repnz
sbb
jmp
mov
insl
rolb
shl
das
js
or
jnp
cli
push
addr16
cs
outsl
add
loopne
mov
mov
lret
pop
rol
cmp
add
xchg
imul
sub
imul
bnd
xchg
and
xor
mov
fcmovu
pop
mov
out
call
or
inc
ret
les
cmp
loop
out
adc
fnsave
repnz
lahf
jae
sub
int
insl
mov
xor
insl
loopne
cmp
sti
pop
pop
fcoml
shrl
jle
push
pop
movsb
ffree
adc
inc
scas
and
add
mov
or
sbb
xlat
push
pop
or
mov
test
cmp
jno
inc
int3
xchg
sbb
sti
shrb
mov
inc
mov
push
movsl
mov
mov
pop
lods
shlb
sub
in
ja
pusha
xchg
push
cmc
mov
mov
add
dec
stc
or
sub
clc
repnz
pop
cmp
mov
mov
xchg
add
jmp
icebp
mov
popa
mov
into
xor
ret
push
popf
push
lcall
insl
imul
jge
icebp
out
mov
or
inc
mov
shrl
aam
test
ficoms
add
or
dec
xchg
adc
push
inc
xchg
sbbb
sbb
pop
xchg
add
inc
bound
stos
out
or
fwait
jmp
pop
adc
notb
hlt
pop
and
rol
jne
insl
aas
push
movsb
xor
out
lds
xor
pop
mov
outsl
into
das
aaa
das
pop
jo
outsb
aad
sarl
and
stos
and
sub
inc
sbb
mov
cmp
out
sub
fnsave
int3
adcb
mov
dec
out
test
fwait
mov
das
mov
xor
js
paddq
xor
add
fcmovnu
push
push
adc
sbb
cmp
test
push
stos
lret
xor
leave
jp
je
cmp
lds
add
pop
aaa
mov
mov
enter
cmpsl
repnz
jae
cld
push
out
add
xchg
mov
pop
imulb
sbb
or
test
popa
sbb
mov
imul
cmpsl
jecxz
sbb
orb
popf
jge
push
mov
mov
or
ja
sbb
push
ja
test
ret
sbb
repnz
cld
pop
mov
gs
pop
add
inc
jae
push
pop
lcall
mov
jb
jecxz
movsb
ss
mov
std
and
push
dec
andl
push
cmp
mov
hlt
idiv
mov
mov
add
daa
in
jge
xor
popf
jno
inc
push
stc
fadd
and
push
addr16
push
dec
gs
test
int
sub
jmp
sahf
fmul
arpl
hlt
clc
mov
lahf
sahf
mov
movsb
test
sub
cltd
in
mov
add
mov
lahf
xchg
xchg
fstpl
jo
insl
imul
subb
or
fucom
jae
mov
gs
cld
fidivrs
push
push
sbb
cld
leave
stc
xchg
lcall
aaa
pop
loop
pop
pop
and
lret
sarb
lds
add
cmpsl
push
sub
ret
call
ss
js
arpl
popf
stc
daa
mov
mov
cltd
in
cwtl
jge
frstor
adc
jb
lock
in
mov
jnp
dec
into
xchg
insl
lock
outsl
inc
fbld
aam
dec
mov
dec
mov
iret
lods
fisubrl
fisubs
dec
in
cmp
mov
sub
inc
cwtl
jg
cmp
icebp
jge
sti
mov
xor
xor
mov
inc
ljmp
leave
lods
sbb
push
fsubl
mov
cmc
inc
cmp
gs
pop
jle
mov
push
adc
sub
inc
push
mov
outsb
orl
ljmp
cld
lds
jle
test
addr16
mov
xlat
fidivl
mov
or
test
dec
lret
loop
push
adc
xchg
cmc
pusha
aad
xchg
xor
adc
test
stc
cld
not
leave
mov
cmp
cmp
mov
lret
sbb
callw
outsl
std
fmuls
xchg
fucomip
shlb
ss
dec
addr16
shl
sub
stos
adc
or
push
btc
std
gs
xor
aad
pop
jo
inc
sub
pop
loopne
loop
push
adc
movsb
adcb
out
or
jb
aaa
xor
mov
iret
inc
in
push
xchg
into
int
xor
jae
xor
pop
xor
popa
add
bnd
das
fsubr
push
fidivs
push
mov
call
sti
subb
and
xor
push
js
mov
std
jae
add
mov
sub
xor
fstpl
and
push
pop
inc
je
pop
or
cmp
into
xchg
push
push
jecxz
call
push
cld
mov
xchg
lcall
in
mov
outsl
cli
xor
in
dec
pop
mov
imul
adc
out
pop
je
mov
stos
es
xor
in
adc
daa
or
fidivl
pushf
jmp
fsubr
fildll
xchg
mov
push
xchg
sbb
push
xor
test
cmp
mov
sbb
and
cmc
sahf
add
xlat
out
xchg
daa
push
mov
imulb
jge
mov
enter
out
mov
int
adc
mov
test
mov
xchg
sub
icebp
xor
sbbb
xchg
and
push
shrb
call
sbb
dec
inc
cmp
inc
imul
movsl
xchg
fidivrs
vunpcklps
add
hlt
je
outsl
nop
popa
insb
fildl
fiadds
out
cwtl
jg
in
add
xchg
rclb
cld
insb
mov
dec
dec
das
fs
mov
pop
movsl
add
push
arpl
fiaddl
mov
pop
add
sbb
push
adc
xchg
int3
xchg
sahf
xchg
cwtl
nop
adc
and
mov
lcall
rcrb
push
mov
jae
mov
jns
sbb
icebp
rorb
xor
jg
jnp
cs
sub
dec
xor
rcll
adc
and
jne
push
stc
repz
popa
adc
push
in
rolb
stc
pop
push
xchg
adc
cwtl
iret
clc
roll
push
xchg
jno
xor
add
cmp
jl
dec
pop
xor
cmp
lds
mov
fwait
or
das
aam
mov
sbb
vpmulhw
pop
imul
cmpsb
and
lock
jmp
inc
jae
loope
imul
shlb
mov
or
outsb
pop
sti
or
shl
inc
ss
scas
xchg
je
pop
mov
pop
xor
xor
cli
arpl
fisttpl
test
mov
das
cmp
and
and
shll
fs
push
sub
mov
sub
mov
cmc
js
ja
sub
sub
sbb
pusha
dec
ljmp
dec
mov
mov
in
pop
movsl
fsubs
mov
loope
cmp
cmp
je
or
inc
stc
xchg
dec
xchg
push
mov
test
lods
jmp
and
movsb
sbb
sub
bound
sub
mov
aad
loopne
sahf
and
hlt
sub
xor
lock
pop
movsl
lods
ss
shrl
es
adc
std
dec
jecxz
out
push
inc
cmp
in
ja
std
lock
loope
sbb
nop
fidivl
jb
dec
cld
mov
mov
dec
in
movsl
mov
pushf
jg
int
cli
dec
fwait
lds
loopne
dec
movb
mov
lea
add
lea
push
jg
or
dec
or
or
pop
sub
js
cmp
mov
fmull
jns
mov
nop
icebp
daa
inc
scas
pop
jg
sub
sub
fwait
dec
jo
popa
stos
dec
pushf
popf
add
and
fildll
iret
leave
iret
mov
pop
repz
icebp
inc
bound
inc
inc
pop
or
add
or
dec
or
mov
inc
mov
or
lret
shrb
jae
lds
sarb
cmc
shlb
das
nop
pushf
je
push
xchg
fs
xchg
xor
ljmp
push
add
in
add
fildll
daa
mov
push
add
mov
mov
gs
out
pop
cwtl
jle
mov
fsubrl
xor
jbe
notb
popa
and
stc
insl
aas
int3
dec
das
inc
sbb
nop
sub
push
cs
inc
rclb
add
inc
jmp
nop
mov
mov
test
or
leave
and
push
mov
jnp
cmp
adcb
lcall
pop
add
fnsave
popf
inc
sub
push
mov
daa
adc
icebp
xchg
inc
out
orl
lock
mov
mov
xchg
mov
repz
mov
push
or
or
xchg
pop
popa
addr16
fisubl
adc
xchg
aad
adc
adc
jmp
sub
mov
lods
jmp
mov
in
xor
pop
and
scas
or
jecxz
and
stos
popa
das
cmp
inc
jns
in
jge
push
pop
in
cmpsl
insl
loope
lods
cmp
mov
testl
mov
jg
ret
cmp
cmp
mov
testb
pop
sbbl
adc
pop
and
sarl
cmc
sbb
mov
cmp
test
ret
aaa
out
pop
rorb
dec
popf
or
call
cld
fistpl
pop
mov
call
mov
pop
lret
loope
jmp
jmp
ror
push
mov
orl
test
test
in
jge
loope
xchg
pusha
adc
inc
repz
stos
test
aas
xor
clc
movsb
in
xchg
jne
ret
sub
in
or
cli
mov
in
or
loope
cltd
xor
test
mov
pop
push
scas
push
inc
cmp
mov
inc
cmp
sub
xor
jnp
mov
xchg
addr16
jmp
mov
fs
dec
or
daa
add
jno
sbb
mov
sar
sbb
lret
dec
mov
jg
sbb
cmpsl
sbb
das
cmpsb
mov
pop
fs
sbb
xor
mov
mov
jnp
jne
mov
mov
mov
bound
daa
mov
push
in
sbb
inc
notb
dec
daa
inc
push
mov
cmp
lods
ret
or
call
pushl
sbb
ret
xor
jae
arpl
inc
icebp
mov
push
aas
sbb
das
and
add
sub
add
inc
inc
jecxz
aad
sub
xor
xchg
ds
fwait
sub
and
daa
test
cmpsl
mov
jb
fnsave
cltd
lahf
push
xor
dec
xchg
loopne
nop
fstpl
or
pop
push
imul
push
daa
sub
out
xchg
dec
repz
xor
cli
pop
add
ret
mov
int3
xchg
or
mov
add
cmpsl
inc
mov
es
stos
pop
add
sub
sub
rolb
sub
lcall
fnstsw
ljmp
add
in
ja
lods
movsb
insb
sub
mov
or
mov
xchg
pushf
xor
xchg
dec
add
sbbb
daa
fimuls
jbe
cs
xor
int
dec
jb
testl
outsb
fldt
clc
aam
inc
mov
pop
je
xor
mov
scas
mov
mov
js
and
std
xor
pop
cld
je
adc
mov
pushl
push
fdivrs
gs
mov
leave
sbb
arpl
clc
repnz
popa
dec
fwait
pop
imul
xchg
sub
and
rol
inc
lcall
inc
ret
or
jp
sub
mov
push
dec
sti
cmpsb
shl
out
mov
sbb
jle
mov
movsb
pop
loope
jno
sub
cmp
inc
repnz
mov
jge
popf
repnz
mov
lahf
pop
iret
lcall
sbb
sub
or
push
mov
sub
pop
fstl
addr16
jo
je
cltd
insl
or
out
ficomps
jecxz
stos
iret
in
cwtl
in
cmp
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
push
dec
adc
cmpsl
xchg
jno
ja
xchg
mov
add
addb
mov
int
and
jnp
std
aaa
out
or
enter
popf
sbb
scas
mov
fldt
nop
ret
pop
dec
cs
pop
insl
inc
loopne
pop
lret
es
lods
cmp
hlt
adc
inc
pop
sbb
je
cwtl
jecxz
mov
mov
and
mov
sub
loopne
les
xor
or
mov
dec
aaa
mov
roll
pop
cmpsb
xchg
pop
jg
xor
pop
add
jl
repz
addr16
and
jl
gs
jge
cmp
test
lahf
dec
jp
xchg
push
adc
cmp
test
push
and
pop
mov
ds
cmp
adc
xchg
sub
mov
es
in
inc
or
dec
scas
sub
mov
fadd
cmp
cmpsl
std
jmp
inc
ss
inc
flds
pop
lods
in
cmp
push
dec
orb
out
mov
aad
push
push
xorb
test
mov
inc
cwtl
cmp
lahf
mov
fiaddl
addl
subl
cmp
call
aas
mov
shll
cmp
fdivrl
inc
xor
insl
les
push
dec
lret
pop
cwtl
dec
push
rorb
mov
lea
jp
or
fnsave
enter
aam
andb
data16
mov
jnp
das
mov
call
jecxz
pop
cli
mulb
lret
jnp
pop
sbb
dec
add
adc
outsb
mov
movsb
ret
sbb
adc
dec
cmp
lods
inc
test
sbb
inc
test
aad
test
jmp
data16
adc
je
or
push
in
es
push
jne
sbb
pop
xor
dec
inc
mov
bound
dec
and
xlat
lock
lret
into
arpl
out
and
dec
fists
int3
cwtl
sbb
js
xchg
add
in
scas
test
adc
xchg
push
inc
xchg
and
sub
dec
aad
push
or
out
and
and
ljmp
sub
jle
insb
dec
pushf
sub
loopne
sub
push
or
inc
subb
arpl
test
mov
inc
sbb
xor
stos
adc
lcall
pop
cmp
fmull
jne
cmpsb
xchg
inc
push
nop
mov
adc
jb
iret
subl
xor
andb
mov
xor
pop
push
jnp
cmp
sbb
pushf
or
push
jno
mov
sti
add
test
mov
mov
imul
sbb
mov
pusha
test
outsl
add
sbb
push
inc
hlt
xor
sarl
lahf
inc
in
outsb
jmp
add
arpl
xchg
add
mov
mov
outsl
dec
lcall
pop
mov
mov
fcomps
jno
outsb
out
mov
pop
lcall
pop
jo
inc
push
add
jg
rclb
enter
ret
lret
aaa
outsl
into
push
jg
orb
std
mov
jae
into
sub
in
out
sub
mov
pushf
dec
push
mov
push
incl
push
lret
into
mov
and
sbb
mov
and
dec
add
dec
andl
dec
adc
fbld
push
shll
sbb
sub
loope
mov
xlat
es
movsl
data16
lods
or
aaa
xchg
gs
lcall
bound
inc
mov
negl
lcall
pop
push
add
sbb
sahf
mov
pop
xor
idivl
out
sarl
cmpsw
test
test
clc
repz
cmpsb
jo
clc
clc
or
mov
scas
les
fucomip
xor
xchg
and
xor
or
ret
test
xchg
pop
lock
jbe
in
ja
movsb
jnp
inc
mov
js
or
in
aam
add
arpl
and
push
adc
cmp
sbb
cmp
jno
mov
push
addr16
shrl
xor
scas
out
sub
sti
pushf
int
fidivrs
add
mov
jo
mov
jmp
mov
dec
jne
mov
and
ljmp
pop
add
call
jb
daa
pop
scas
clc
mov
clc
ss
in
repz
xor
jne
sti
push
popa
sbb
outsl
inc
cmp
xchg
scas
push
adc
shlb
pushf
xchg
jmp
jbe
push
pop
mov
or
mov
dec
inc
cmp
data16
push
adc
xor
imul
push
cs
jne
js
pusha
adc
filds
mov
sbb
fildl
pop
das
fistl
pop
lds
fldlg2
mov
shl
hlt
sub
mov
jbe
mov
xor
cmp
fwait
mov
xchg
cmpsl
clc
mov
or
sbb
stos
xor
imul
xchg
cmp
mov
push
pop
aaa
xchg
pop
rcll
pushf
imul
xor
pop
dec
or
mov
fisubrl
nopl
or
mov
mov
jle
popa
outsb
mov
nop
ret
pop
in
pusha
push
imul
pop
outsb
sti
xchg
jns
stos
std
leave
sbb
mov
push
inc
ljmp
shrb
push
add
shlb
mov
jmp
inc
xlat
and
sar
push
xchg
jecxz
xor
mov
sbb
jl
fmuls
xor
mov
adcb
or
push
pop
ficoml
push
nop
es
mov
mov
or
lahf
mov
jb
ja
xor
loop
mov
mov
jno
push
xor
add
push
test
lcall
xchg
xlat
shlb
aad
std
pop
jl
hlt
mov
xorl
cmpsl
js
inc
rorb
push
xchg
sub
jne
in
fstpt
dec
lods
iret
xor
xchg
in
adc
sbb
loope
aad
xchg
enter
cltd
pushf
xor
sbb
push
lock
xchg
sahf
push
es
jo
mov
pop
insl
push
push
rorb
pop
add
subl
inc
pop
adc
mov
adc
xor
les
sbb
and
inc
adcl
hlt
call
xchg
push
rcl
outsb
xchg
lods
mov
add
andb
data16
xor
setg
out
push
bound
add
mov
je
loop
movsl
decb
paddsb
jmp
rcrl
aaa
bound
mov
lcall
add
xchg
pop
cs
jmp
fimuls
pop
inc
test
adc
jne
mov
xor
addr16
push
add
cwtl
mov
dec
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
ljmp
jbe
jno
sbb
test
mov
mov
mov
pop
nop
or
xchg
dec
mov
movsb
push
scas
jmp
or
xchg
lcall
ret
xchg
pop
push
cmp
adc
leave
mov
mov
add
jns
data16
cmp
xchg
pop
dec
cmp
jae
jns
or
sbb
insb
xchg
jns
mov
fsubs
ja
enter
leave
lods
test
scas
in
xchg
iret
ljmp
fsubs
popf
pop
sbb
cwtl
cmp
popf
or
dec
sbb
sti
rolb
and
inc
dec
outsl
mov
leave
dec
inc
pop
jmp
ja
sub
mov
mov
out
sbb
lods
inc
stc
and
stos
lock
cmp
xchg
cmpsl
cmp
push
push
mov
loop
mov
and
outsb
fisubl
rcrl
cmp
push
imul
or
mov
pop
sbbl
dec
adc
fsubrp
add
pop
jmp
in
leave
gs
out
jmp
lock
adc
push
out
aam
jmp
daa
xchg
and
jns
mov
js
or
in
out
ljmp
jo
mov
mov
orb
xchg
mov
call
ret
lea
call
and
fcmovnb
test
mov
add
sti
cld
loopne
adc
mov
pop
inc
or
shrb
jl
cmp
scas
jno
clc
aas
bnd
out
dec
xchg
cmp
add
or
nop
sbb
sahf
pop
ss
imul
insl
dec
mov
dec
arpl
pop
dec
lret
sub
iret
jmp
aaa
sub
mov
sbb
rcr
pop
adc
sahf
cmp
cmp
int3
push
fnstcw
pusha
push
rorl
mov
lods
mov
es
insb
shll
adc
shrb
cmp
inc
mov
lret
int
xor
sub
fwait
ret
jns
cltd
and
sbb
or
xchg
push
imul
or
push
icebp
lret
fiaddl
ret
lock
loopne
mov
pop
xor
mov
pop
ja
cmp
mov
rcrl
and
fnstsw
adc
inc
and
out
xor
pop
or
outsb
add
out
dec
adcb
mov
or
out
movsl
loope
adc
es
jp
shl
push
pop
test
popa
jle
lds
cmp
gs
loop
jmp
aad
inc
inc
aaa
jnp
pop
aas
enter
push
xor
jno
inc
pop
inc
sub
mov
xchg
jmp
sub
sbb
lret
jmp
push
jns
inc
bound
mov
sub
pushf
xchg
sti
loop
data16
imul
push
shl
xchg
fldt
lcall
xchg
jnp
mov
jb
je
aam
pop
sarl
in
mov
push
xor
jne
stc
imul
push
push
repz
pushf
cmp
dec
add
decl
clc
cmpsl
sub
jnp
adc
xchg
add
mov
mov
mov
jnp
out
fists
and
call
mov
int3
add
shll
clc
sub
mov
xor
rcrb
xchg
fnstcw
xchg
xchg
inc
inc
push
xor
xor
decl
push
push
daa
mov
pop
mov
mov
fistl
lods
mov
popl
pop
fildl
imul
aaa
loopne
xchg
and
lret
mov
loopne
in
mov
fdivl
push
xor
mov
push
add
dec
or
daa
adc
xchg
mov
sbb
testb
out
aas
ret
jmp
or
int3
data16
mov
sbb
insb
cli
subl
in
or
cwtl
jb
sti
lret
imul
shll
js
rorb
insl
in
pop
sub
out
lret
out
fisttpll
xor
cli
daa
fnstsw
xchg
outsb
sub
leave
mov
divb
or
mov
or
fsubrl
leave
dec
mov
push
fwait
in
clc
lods
mov
push
stos
xchg
mov
mov
mov
sbb
cmp
mov
xchg
push
pop
cmc
pop
xor
movsl
or
pop
das
or
fmuls
mov
loope
or
pop
lods
jo
push
push
inc
push
loope
adc
das
div
lock
ret
sarl
pop
cmp
cmp
repnz
add
test
jmp
xchg
pop
dec
sub
je
mov
jge
push
jbe
jne
hlt
arpl
cld
mov
cmpsl
testb
into
leave
lock
scas
and
mov
ret
mov
lods
adc
jmp
push
xchg
and
and
inc
jo
sub
and
testb
lcall
xchg
and
mov
hlt
repnz
add
cmp
roll
add
inc
out
stos
or
clc
out
std
addr16
cmp
cs
dec
inc
sahf
xchg
or
fisttpll
inc
ret
pop
cwtl
lahf
mov
pop
cmpl
outsl
cmp
push
jecxz
push
xchg
nop
cmpsb
jecxz
icebp
mov
or
jmp
ret
mov
ret
pop
xor
fs
dec
lock
insl
mov
fildl
popa
and
sub
mov
cmp
xor
int3
cmp
and
pop
rcll
shl
dec
xchg
fisttpll
inc
in
adc
jno
push
or
mov
and
sub
and
or
divl
push
cmp
add
adc
adc
scas
adc
movsl
sub
sahf
rcl
mov
cs
lcall
lds
cwtl
sarb
pop
jne
xor
mov
loopne
mov
jae
neg
jnp
pushf
aaa
or
dec
mov
and
in
dec
add
leave
aas
jecxz
inc
mov
jmp
aas
mov
mov
std
inc
test
xchg
out
int3
fsubrs
xor
dec
dec
pop
inc
shrl
push
dec
pop
into
xchg
sahf
dec
insl
dec
scas
shll
cmc
mov
sbb
adc
cld
les
pop
sbb
push
mov
sbb
enter
jo
push
mov
xorb
int3
adcb
pop
fcoms
push
lahf
sub
je
stos
add
rcrl
mov
scas
xorb
rcl
ljmp
dec
lahf
pop
dec
call
jns
inc
and
jp
or
jge
mov
xor
push
shlb
dec
aaa
test
lcall
jae
fwait
mov
cli
hlt
pop
mov
adc
inc
mov
jle
jno
jg
inc
add
sbb
and
in
pop
sub
mov
leave
jnp
xor
xchg
mov
xchg
out
xchg
hlt
xchg
cmp
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
les
int3
xchg
prefetch
sbb
movsl
lcall
test
scas
add
jge
mov
aas
lcall
leave
adc
xchg
and
xchg
test
xlat
aad
sub
push
cmpsl
repz
or
scas
repnz
shrb
cmc
lret
fisttps
test
mov
xchg
popf
and
out
push
jp
or
cltd
ss
loopne
inc
ret
mov
mov
aad
das
cmp
push
fcompl
out
inc
sub
cmp
inc
push
mov
fxch
push
repnz
dec
rorl
lock
loop
dec
push
sbb
daa
add
aas
fidivl
dec
xchg
sub
pusha
pop
inc
sub
sub
inc
dec
mov
adc
sarb
push
inc
cmp
push
adc
sub
pusha
movsb
dec
xchg
or
add
int
aam
sub
xchg
vunpcklps
into
stos
dec
cs
xlat
cmc
dec
jl
mov
or
int3
inc
out
inc
cld
xor
insb
cs
mov
fstpl
jge
ss
inc
icebp
aam
int3
push
xchg
xor
or
cmpsl
out
xchg
mov
or
and
je
mov
lock
inc
cmp
push
int
ret
mov
or
hlt
add
mov
inc
mov
inc
pushf
cmp
mov
adc
imul
fwait
js
in
push
stos
sub
xorl
scas
dec
adc
mov
pop
and
sub
pop
mov
movsb
push
aad
or
or
jb
sbbb
xchg
or
adc
sub
jne
gs
or
jno
xchg
scas
cld
das
adc
or
iret
sub
inc
cmp
jmp
in
cmpsl
xchg
test
divb
std
adc
fs
outsl
mov
rcrb
mov
aas
jbe
in
pop
in
jl
mov
enter
push
mov
nop
mov
shlb
iret
fisubrs
sub
cmp
sub
pusha
mov
ljmp
shl
fistps
xchg
iret
fstpt
mov
in
jb
jbe
sub
test
pop
cmp
xor
inc
pop
pop
pop
pop
mov
add
jo
pop
mov
push
pop
jmp
add
push
sbb
in
xor
cld
sar
lea
push
mov
popa
mov
cmp
cmp
enter
shr
pop
or
cmp
nop
lds
fsubl
ja
pop
jb
pop
pop
dec
push
lds
out
xchg
aad
pop
mov
push
add
ds
cltd
push
gs
lock
das
pop
push
cmc
jp
or
mov
sbb
cmp
lods
sti
scas
mov
icebp
adc
pusha
cmp
shlb
pop
lea
movsl
insl
js
lahf
mov
sarl
mov
lods
das
shl
jl
mov
cmp
popf
je
jnp
pushf
fmulp
cs
xchg
mov
orl
cmp
jno
sbb
and
fcoms
aaa
mov
adc
push
add
pop
pop
stos
jmp
sbb
sub
lea
addr16
pop
xchg
adc
pop
mov
mull
inc
pushf
lret
loope
aad
mov
maxps
jmp
mov
outsl
mov
jne
adc
xor
jp
add
test
cs
or
xchg
xor
cmp
std
add
mov
push
pop
adc
inc
fwait
sub
orl
pop
inc
sbb
adc
in
xor
fld
sub
test
dec
in
repnz
les
sbb
pop
mov
test
jge
mov
fdivrs
pop
rorb
xchg
enter
clc
test
out
inc
into
sbb
daa
push
in
cmp
daa
cmp
ljmp
sti
orb
add
nop
fs
insl
mov
mov
cmpsl
adc
cmp
dec
ss
jmp
or
sbb
dec
movsb
pop
sti
sbb
cmpsl
sbb
inc
lahf
ja
dec
xlat
mov
xchg
or
mov
pop
es
mov
ret
aam
push
or
rcll
imul
xor
stos
sbb
jecxz
incl
push
fnstsw
fmuls
sub
jnp
xorb
push
es
jg
mov
dec
or
icebp
dec
xor
xchg
pop
aaa
sbb
mov
mov
mov
and
rcll
pop
mov
or
xor
outsl
mov
fisttps
gs
sbb
lcall
xchg
iret
push
sarb
leave
cwtl
cwtl
push
xor
mov
sbb
outsb
jecxz
jo
cmp
xchg
push
xor
jle
rol
adc
xor
pop
out
push
jg
sub
and
cmp
mov
data16
jp
pop
ja
enter
icebp
pop
inc
jle
adc
xchg
outsl
lock
lds
sub
mov
lret
mov
xlat
movsb
faddl
mov
jno
cmp
sub
inc
mov
fs
mull
pushf
xor
and
xchg
ljmp
lret
mov
sub
adc
fisttps
xor
mov
add
ja
xchg
pop
jns
mul
cmp
cmp
aaa
rorl
push
mov
loop
xchg
pop
push
push
loop
xor
jl
dec
jno
sbb
xchg
lea
pop
xor
adc
insb
pop
pop
test
and
ds
shrb
mov
test
pop
or
or
loopne
sarb
xchg
ss
and
ret
cmp
and
sti
mov
addr16
xchg
hlt
push
cmc
mov
inc
int
hlt
ljmp
mov
pop
xchg
adc
and
das
rcll
mov
shrb
js
insl
nop
jae
pop
jo
pop
fisttpll
ficoms
imul
push
lret
repnz
push
push
roll
mov
dec
mov
jecxz
pusha
mov
mov
test
pop
pop
mov
cld
inc
and
addr16
pop
pop
call
xor
outsb
mov
add
stos
aad
lahf
xchg
mov
fistps
pop
cld
arpl
xchg
clc
add
outsb
sti
pop
cmp
add
gs
lret
jecxz
mov
cmc
out
ljmp
push
dec
pop
push
rcll
jae
pusha
bswap
and
jno
flds
ss
and
cli
push
jo
cmp
hlt
inc
cwtl
iret
lcall
xor
pop
sub
in
repz
pop
popl
inc
or
in
add
xor
int
push
dec
or
xor
jl
call
mov
aam
clc
arpl
xchg
xchg
xchg
sub
sti
pushf
scas
test
push
xchg
xlat
pop
shl
xor
cli
out
outsb
test
xor
mov
mov
xorb
je
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
and
push
adc
addl
jmp
jne
test
popa
xchg
add
movl
xor
sub
cmp
xchg
ja
adc
jle
iret
push
js
add
xchg
mov
push
popl
inc
adc
cwtl
mov
inc
movsb
cmp
pop
nop
jp
cmp
sub
loope
adc
inc
fsubs
jne
mov
daa
mov
jo
jmp
out
lds
xor
add
xor
xlat
or
movsb
add
iret
push
mov
jne
cltd
cmp
nop
dec
fs
xchg
mov
imul
add
xchg
mov
daa
les
xlat
das
cmp
cmp
mov
ret
xchg
mov
cmp
sbb
bound
cmpsl
icebp
add
sub
dec
cmp
fists
xchg
xor
sub
xor
decl
clc
or
pop
jge
aaa
pop
rol
xor
ss
xlat
add
or
aas
ss
cmp
cmp
push
popf
inc
mov
xchg
inc
inc
incb
jo
out
sahf
jne
and
cwtl
pop
jg
adc
movsb
les
cs
inc
jno
xchg
mov
fldl2t
je
jmp
jmp
pushf
mov
pop
inc
test
test
jns
sbb
mov
xchg
push
cmp
cltd
int
jno
mov
out
jne
push
sbb
xchg
fdivs
add
ja
and
add
adc
imul
xor
loop
lds
dec
ja
xorb
pop
jne
jecxz
jnp
icebp
int3
xor
popf
cli
or
dec
pop
orb
ljmp
push
xchg
jle
fldenv
adc
in
sbb
mov
les
jecxz
sub
jmp
xor
xor
inc
xchg
xor
inc
pop
pop
and
pop
lcall
add
mov
add
and
mov
stc
fisttps
xor
nop
and
test
test
movsl
mov
outsb
pushf
sub
cli
repz
cmp
fldcw
shrl
or
cmp
in
icebp
jmp
cmp
in
xor
ud0
rcrb
and
mov
adc
fidivrs
mov
mov
adc
lods
fbstp
mov
es
lcall
mov
or
jo
push
mov
or
sub
mov
iret
dec
lods
cmp
shll
jbe
push
add
inc
fs
or
mov
bound
jmp
call
xchg
mov
imul
xchg
push
and
ss
push
fwait
aaa
stos
or
inc
add
daa
lea
ss
xlat
xor
adc
add
mov
mov
jb
lods
arpl
in
adc
mov
add
push
ss
and
mov
div
and
fcmovbe
add
rolb
adc
fisubrs
pop
incb
dec
sarb
cvtpi2ps
in
adc
sbb
pop
hlt
inc
fists
mov
pop
xor
int
pop
xchg
jmp
mov
mov
stos
sarl
cli
stos
ret
or
daa
mov
ljmp
mov
loope
push
cmp
push
stc
in
loope
negb
cmp
pop
imulb
in
shr
lret
mov
xor
inc
or
lds
outsb
mul
cltd
jb
cwtl
mov
fs
ljmp
inc
cmc
ds
iret
shlb
mov
test
jge
mov
loop
jne
dec
test
mov
in
aam
inc
aas
or
cmpsl
icebp
jge
aas
jg
movsl
lret
loope
cwtl
in
sarl
loopne
fndisi(8087
xchg
pop
jle
cmp
inc
pop
dec
inc
xchg
addl
or
xor
sub
cwtl
and
lahf
ret
pushf
fs
mov
imulb
sbb
loope
push
push
or
mov
daa
adc
lcall
sub
mov
popa
icebp
sbb
mov
movsb
mov
pushf
mov
sub
arpl
mov
push
sub
mov
jmp
mov
mov
cmp
adc
int
dec
jo
je
sbb
inc
cmp
shll
ret
cmc
jg
iret
test
push
cmp
in
push
cmpl
scas
sarl
mull
popf
out
fsubl
mov
shrb
add
adc
fidivrs
mov
sub
or
mov
je
subb
xor
mov
lahf
ret
adc
and
je
in
inc
not
jbe
mov
adc
aaa
js
sbb
sub
repnz
push
mov
lods
jp
call
cltd
das
dec
dec
xor
xor
add
pop
ljmp
adc
push
fbld
jne
les
icebp
hlt
mov
bound
cmp
mov
popa
adc
sarl
es
fnsave
sbb
mov
ss
cmp
add
out
mov
sahf
rcrb
mov
sbb
cmp
push
outsl
cmp
or
add
add
pop
data16
bswap
out
xor
sti
mov
mov
shlb
mov
ret
les
out
or
xchg
test
mov
test
xchg
jae
jp
or
jmp
fstps
sub
popa
nop
cwtl
mov
ja
xchg
pop
or
cli
push
add
jl
addl
scas
jmp
push
subl
inc
or
scas
mov
xchg
push
inc
jns
movsl
sbb
mov
hlt
adc
mov
xor
sub
mov
or
mov
cwtl
pop
inc
shrb
mov
ja
dec
test
icebp
roll
mov
xor
rcr
xor
rcr
mov
mov
addr16
es
mov
dec
pop
add
dec
mov
loop
sub
push
test
ret
in
cmp
jmp
and
push
sti
sbb
mov
arpl
test
adc
pop
dec
shll
fld
jns
repnz
sti
mov
sub
pop
add
lods
dec
mov
arpl
push
movsb
sub
jne
ss
test
in
test
cli
pop
jge
int
inc
lcall
movsb
pop
into
test
std
add
sbb
sub
xchg
and
cmpsl
lcall
loop
daa
outsl
push
scas
or
ljmp
sti
shrb
subb
in
jmp
subb
in
mov
lret
xorl
std
movsb
int3
push
or
pop
or
repnz
pushl
adc
add
orl
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
dec
mov
push
mov
mov
mov
dec
or
stc
inc
cmpl
xor
xlat
mov
jecxz
add
xchg
jbe
jnp
xor
mov
mov
dec
shrb
mov
mov
es
scas
push
rolb
in
ret
dec
lret
fnclex
pop
clc
pop
sbb
cld
pop
mov
imul
jg
inc
xor
ds
movsb
orb
out
ds
data16
and
lock
movsl
sbb
cltd
jp
adc
inc
mov
cltd
dec
push
shrl
push
ret
lcall
push
push
bound
sub
sub
mov
dec
jno
xor
jbe
mov
sub
inc
mov
and
sahf
mov
imul
xchg
in
pop
je
or
cmpsb
insb
or
add
in
out
test
imul
clc
imul
mov
push
in
js
inc
mov
or
lock
inc
xchg
test
std
stos
push
jb
sub
sub
aaa
int
ds
inc
sub
jp
flds
jl
jnp
rcrb
jge
adcl
subb
rorl
pop
xchg
into
add
rorl
int3
jae
xchg
aaa
inc
xchg
xchg
addr16
mov
in
in
stc
mov
mov
lret
adc
in
out
dec
sub
mov
aas
js
mov
stc
popf
add
dec
xor
ret
xor
adcb
repz
or
sarl
popa
pushf
repnz
sbb
data16
les
jbe
dec
and
scas
scas
mull
inc
inc
adc
rorl
mov
jae
decl
mov
push
bnd
sbbl
xor
cmp
lock
pop
mov
sub
xchg
sub
sub
mov
rcll
push
mov
subl
negb
fstpl
jle
push
cwtl
pusha
shr
mov
scas
mov
lret
cld
mov
cmpsb
fisubrs
mov
mov
push
rol
pop
sbb
jb
mov
xchg
insb
aaa
jle
cli
sub
or
test
pop
out
repz
jae
and
xor
sub
cmc
mov
mov
cmp
adc
push
xchg
outsb
mov
add
ss
pop
loopne
cmpsb
adc
sahf
sub
jbe
jmp
add
cmp
out
fsubl
xchg
mov
lret
cwtl
pushl
in
mov
pop
and
pop
xor
pop
ficompl
sti
popf
cmpsl
dec
xor
cmp
xchg
in
and
push
mov
xor
mov
cld
in
fcoms
mov
jmp
inc
jnp
push
aam
jl
xchg
fisubrs
dec
jge
in
daa
inc
sub
fisubrs
test
orb
jle
inc
and
cmp
xlat
lret
sbb
cli
lods
pop
mov
mov
pop
pushf
imul
dec
or
jnp
rcll
xchg
xlat
jns
mov
pop
sub
or
fsubp
sti
rol
adc
mov
push
sub
jb
lret
rcrl
leave
adc
xchg
sub
les
pop
cmp
test
dec
jo
or
mov
test
cmc
xchg
dec
or
and
stos
jnp
jns
data16
mov
and
xlat
sbb
xor
inc
push
add
repnz
fmuls
pop
mov
pushf
in
sbb
je
cld
mov
jmp
fbld
add
or
and
in
xor
inc
inc
in
or
inc
std
out
sbb
push
inc
mov
mov
jl
leave
ret
addr16
adc
dec
xor
cmc
shll
mov
or
push
adc
movsl
pop
outsb
mov
ffree
dec
push
push
mov
push
inc
sbbb
mov
sbb
lcall
fldl
push
shl
pop
clc
lret
outsw
dec
dec
and
fcomps
and
pop
js
notl
call
mov
pop
fsubl
mov
imulb
bound
and
xacquire
cmp
scas
lods
cmpsl
ucomiss
stos
in
insb
mov
dec
cmp
and
mov
fcoms
fucom
sbb
mov
mov
popf
ret
rcl
enter
mov
fidivs
mov
cmp
xor
in
cmp
pop
sarb
or
lods
popf
pop
lds
jmp
inc
sub
shlb
addr16
imul
mov
adc
jl
or
push
sub
call
adc
inc
pop
cmc
adc
or
testb
icebp
imul
xor
imul
sbb
mov
and
and
pop
ljmp
xor
icebp
pop
cmp
pusha
outsb
xor
jp
enter
sub
and
arpl
inc
lret
xchg
mov
jo
dec
sbb
mov
loop
je
xor
xor
mov
xchg
stc
je
imul
neg
fucomp
pop
hlt
stos
lds
fstpl
push
mov
push
and
mov
ror
pop
add
pop
adc
add
movsl
pop
push
dec
mov
enter
sbb
jo
imul
call
push
into
lcall
mov
inc
pushf
cs
pop
imul
sub
mov
pop
imul
cmp
and
xchg
shlb
insb
lea
je
mov
pop
mov
fldt
mov
cli
cmp
xchg
aaa
pusha
pop
sub
fs
adc
inc
aad
clc
outsl
jno
cmp
pop
inc
pop
aas
lds
or
xchg
add
gs
notl
aam
scas
xor
adc
loope
in
shlb
test
xchg
fistpl
dec
into
xlat
push
push
cmpsb
and
sbb
sbb
add
jecxz
mov
lcall
jg
ja
cmp
jo
lods
mov
sbb
mov
lret
push
clc
sar
push
mov
fs
adc
jmp
mov
dec
repz
push
cmpsb
into
pop
rclb
xchg
lret
jne
fsubl
aam
in
out
ljmp
add
xor
jmp
aaa
xor
and
dec
loop
mov
pop
cmp
into
pusha
arpl
inc
jmp
adc
out
mov
xchg
pushf
dec
pop
pop
jnp
int
and
fsub
mov
adc
jo
ret
sub
rcr
ret
jmp
jge
or
insb
jmp
push
jae
hlt
push
fnsave
push
leave
inc
std
adc
popa
sti
dec
imul
dec
stc
push
sahf
imull
loope
push
pop
jmp
setp
aam
cmpsl
cs
outsl
test
ret
loop
adc
mov
aaa
test
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
cmp
xchg
xor
jno
in
out
cmp
inc
aam
cmpsl
xor
pop
pop
xchg
cmpsb
testl
jne
cmp
lret
jg
cmp
sete
xchg
or
ret
int
das
adc
mov
shl
pop
xor
jno
xorl
mov
hlt
sub
data16
lea
insb
imul
add
fwait
out
jle
negb
push
push
add
lret
or
lds
cmp
and
popa
add
dec
int
jg
mov
mov
mov
fdivrl
out
cs
leave
pop
inc
orb
rcr
test
xchg
push
aad
lods
inc
mov
xchg
and
mov
fstl
or
sbbl
imul
or
pop
mov
add
enter
jecxz
cmp
sub
daa
xchg
mov
dec
into
mov
gs
mov
mov
and
cmp
dec
ret
cmpl
jmp
data16
out
xchg
xchg
std
xor
and
and
mov
mov
lods
fiaddl
das
xor
cltd
jp,pt
roll
xlat
nop
mov
shlb
fwait
std
sbb
test
test
cld
xor
inc
mov
int
sti
xchg
in
fmuls
popa
pop
inc
mov
int
or
sub
stos
sub
fwait
sub
pop
xchg
xlat
mov
pop
test
in
js
aaa
jo
adc
xor
pop
jecxz
mov
sbb
dec
ds
inc
sbb
lret
push
pop
xlat
fldenv
jo
sahf
adc
pop
test
in
out
scas
dec
sub
dec
add
sbb
or
jbe
test
add
in
hlt
jne
mov
cmp
add
pushl
loop
mov
push
sub
std
test
mov
adc
repnz
or
rorl
mov
add
mov
jb
xchg
xchg
sub
scas
in
stc
cmp
cmp
sbbb
fsub
sbb
sbb
rorl
jae
mov
mov
jne
dec
mov
stc
mov
inc
sbb
add
popf
jns
push
fldenv
jmp
into
int3
shrl
sub
je
sub
sub
inc
xchg
addr16
sbb
adc
andb
add
fistl
xorl
and
aas
loop
mov
jb
sahf
mov
ljmp
in
xchg
aad
cmp
sbb
es
push
lock
xor
ret
mov
arpl
cmp
dec
rclb
push
lea
xor
add
pop
xor
test
jl
inc
hlt
inc
testb
sub
jbe
clc
scas
add
lods
mov
xchg
cli
push
in
push
ret
xchg
xchg
sub
jl
fmull
es
in
aam
dec
out
sbb
or
sbb
xchg
lcall
daa
mov
jns
jge
push
adc
dec
sub
dec
outsl
push
and
lock
int
sbb
adc
sbb
sbb
mov
gs
adc
jmp
dec
add
arpl
push
lret
mov
mul
mov
test
pop
mov
popf
push
rcrb
jg
imul
fwait
sub
lock
out
aam
inc
add
enter
mov
lret
cmp
frstor
nop
sub
mov
dec
fsubrs
aad
xor
es
pop
shlb
jbe
mov
ja
jg
fimull
adc
into
cld
nop
ficomps
jge
inc
sub
add
sbb
sbbl
xchg
push
lock
jb
sub
sbb
enter
shr
jg
inc
fdivr
fistpl
mov
dec
jmp
shlb
scas
mov
add
clc
mov
and
mov
xor
stc
cmp
push
jecxz
cmp
fs
xchg
jb
mov
outsb
movsb
ret
dec
and
add
and
mov
in
cs
in
fcomip
or
sub
sub
add
mov
push
fstpt
out
inc
xor
lahf
cmp
ret
fsubrl
xor
sub
pop
or
push
sahf
jnp
sub
xchg
dec
cmp
sahf
sahf
testb
push
out
and
imulb
stc
xchg
test
inc
repnz
in
mov
les
inc
xorl
inc
daa
addr16
add
mov
pop
and
mov
lret
clc
cmp
mov
in
pop
in
sub
icebp
imul
push
leave
add
xchg
jne
add
add
js
pusha
mov
in
xchg
adc
into
shl
cmp
sub
ret
call
dec
repz
cmp
sahf
xor
lods
inc
sub
subl
push
js
fisubrs
cli
dec
lret
sbb
mov
mov
mov
das
sahf
int
inc
scas
in
mov
negl
lods
imul
mov
or
mov
add
cmpsl
int3
jge
jp
pushf
lods
jae
pusha
rcl
sbb
or
xchg
int
bound
std
shlb
outsb
insb
xchg
mov
mov
mov
add
fmuls
insl
fsubrl
jns
jbe
stos
and
ficomps
int
xor
ja
mov
jnp
jo
dec
add
sbb
mov
dec
les
add
or
bound
jns
mov
add
js
pop
push
dec
je
cld
fbld
mov
les
dec
dec
pop
pop
aam
inc
insl
mov
fadds
stos
stos
aaa
mov
sub
push
int
insl
mov
lds
xor
xor
cmp
adc
xchg
push
sub
mov
jl
imul
fs
inc
rcrb
and
data16
sbb
push
cmp
mov
inc
xor
pop
into
sarb
daa
or
xor
xchg
outsl
addb
cmpsb
les
fs
add
call
xor
jns
mov
mov
scas
cld
fdivl
fisubs
mov
push
or
dec
inc
mov
mov
out
xchg
outsl
mov
enter
cmp
adc
cs
out
pop
adc
sub
pop
cwtl
cli
inc
mov
jo
jecxz
xor
cmpsl
add
sbb
mov
insl
inc
jg
push
dec
bound
test
xchg
mov
add
xlat
leave
in
lock
xor
jne
adc
scas
inc
push
in
and
push
in
subb
xor
xor
test
sbb
push
in
or
xchg
xor
hlt
into
stc
pop
mov
pop
xor
mov
push
add
xchg
rcll
popf
insl
out
cmp
test
jecxz
inc
out
sub
pop
sbb
cmpsl
call
fstps
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
fstps
mov
push
into
or
xchg
outsl
clc
in
mov
rorl
imull
cmp
dec
pop
pushf
mov
test
pop
mov
lds
mov
lret
mov
fwait
incb
gs
xor
xlat
andb
pop
addr16
ret
adc
or
hlt
adc
bound
add
and
adc
fcos
repnz
mov
orb
jle
add
mov
inc
mov
movd
cwtl
test
popa
das
cmp
stc
fcompl
lea
into
mov
dec
adc
gs
mov
adc
mov
or
mov
mov
cmp
sub
xor
add
push
sbb
push
shll
pop
adc
sbb
inc
and
rclb
repz
out
js
test
aam
test
or
mov
and
inc
inc
sbb
xchg
push
rep
mov
mov
xchg
int
xor
ja
ja
repnz
jae
or
sub
dec
clc
iret
jb
mov
test
xchg
or
das
cli
insb
sub
sti
out
outsb
jo
pusha
pop
dec
dec
xchg
ficomps
cmp
push
sub
stos
cli
or
adc
fsubrs
xor
cmp
jmp
cmpsl
xchg
sub
xchg
mov
insl
sub
nop
or
push
xorb
data16
popa
sahf
jle
push
adc
jge
mov
pop
cwtl
dec
mov
icebp
outsb
rcl
or
jbe
jmp
dec
dec
jno
fwait
andl
addl
aaa
push
mul
inc
sub
mov
rorb
mov
pop
sub
in
or
mov
dec
push
mov
jle,pn
test
outsl
lret
rcr
jmp
jle
mov
call
into
sub
hlt
int
fildl
mov
pop
aaa
lea
jnp
cwtl
les
scas
fucomi
xor
js
popa
lahf
or
add
jmp
and
lret
mov
addb
ss
jne
mov
jns
popa
pop
in
fs
fidivrs
aam
shll
fwait
mov
loop
das
push
xchg
jle
xor
mov
pop
add
shlb
xchg
xchg
cli
call
inc
cmp
lds
and
xor
jmp
loope
add
push
into
jbe
aaa
ret
adc
cmpsb
into
jns
xchg
lods
and
popf
dec
ss
push
loopne
jp
push
ss
scas
dec
scas
icebp
and
cmp
pop
jo
xor
out
int3
jno
pop
pop
incl
lretw
movsb
lea
jl
loop
mov
sub
inc
addr16
add
and
int3
repz
xor
add
jmp
mov
int3
cmp
sub
and
or
loop
das
lret
not
push
outsb
sti
sahf
fnsave
loopne
ljmp
test
imul
mov
cltd
movsb
rorl
or
aas
add
add
scas
sarl
hlt
daa
pop
hlt
push
dec
cld
insb
insl
enter
fsub
jns
ds
gs
mov
inc
and
pop
stc
jge
out
pushf
cmpsb
mov
cmp
sbb
ret
jmp
or
lahf
cwtl
cmp
clc
pop
jne
fadd
aas
xorl
test
cmp
xor
adc
cmpsb
lret
rcrb
push
dec
xchg
pusha
and
adc
cltd
sahf
lods
xor
pop
ffreep
jb
mov
loop
pop
mov
adc
adc
xchg
xchg
int
adc
les
or
push
inc
jecxz
lock
mov
mov
mov
mov
push
mov
ds
pop
push
xchg
stos
add
xchg
aaa
jle
fnstsw
inc
in
enter
push
imul
xor
jmp
bound
loope
sbb
cs
bound
aaa
pop
xor
cmpsl
movsl
das
cmpsl
jp
rcrl
ficomps
es
in
ret
je
insb
shlb
cmp
repnz
out
test
pop
jg
stc
iret
movd
mov
dec
adc
lods
adc
sub
les
sbb
leave
lret
push
ror
stos
hlt
es
orb
lret
lahf
mov
rol
mov
ret
repnz
dec
dec
inc
arpl
sub
sub
push
inc
jle
adc
popf
ret
mov
cmp
int
sub
addr16
mov
aas
jo
in
int3
popf
xchg
mov
fisttpll
adc
dec
and
pop
xchg
mov
xchg
inc
pop
es
cmpsl
push
gs
fsubrl
lock
int3
dec
test
stos
outsw
xchg
sub
es
mov
sbb
repnz
fdivs
inc
and
pusha
jb
sub
clc
dec
jp
push
aaa
xor
aam
lods
add
std
dec
cmc
rolb
mov
and
and
imul
add
sub
mov
jno
mov
mov
or
es
mov
sub
mov
cmp
dec
mov
mov
inc
or
dec
cmp
pop
add
jo
daa
jmp
sub
scas
cmp
push
scas
shrl
sti
cmc
or
fnstcw
cltd
adc
enter
popf
outsb
inc
imul
xor
jg
sub
outsl
push
push
mov
call
cltd
ret
jnp
mov
mov
mov
adc
scas
push
aas
daa
stos
imul
mov
mov
in
add
ss
add
xor
das
testl
bound
mov
mov
inc
rcrb
pop
xor
rorb
insb
jb
rorl
insb
sbb
jbe
in
dec
scas
cmp
xchg
inc
rorl
inc
adc
or
pop
js
xor
movsl
push
cmpl
arpl
adc
stos
adc
pop
push
sub
int3
mov
cmpsl
cmp
cmc
insb
das
cmp
add
enter
sbb
inc
push
mov
test
xor
decb
fidivl
fiaddl
sub
pop
ja
mov
mov
cmp
insl
nop
test
pop
pusha
push
mov
sbb
push
cltd
enter
xrelease
mov
imul
sahf
pop
cmp
xor
add
stc
inc
push
mov
mov
or
push
ja
sub
in
mov
lock
mov
or
add
sbb
ror
jmp
dec
mov
pop
mov
vpslld
stos
pop
lea
insl
mov
xor
push
or
ffreep
nop
sti
jecxz
dec
fdivrl
test
fcompl
iret
lret
cli
fwait
mov
cmp
loope
les
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
sbb
scas
adc
jno
bnd
cwtl
dec
mov
cmpsl
aas
sbb
jecxz
je
popa
add
xchg
test
add
repnz
gs
icebp
call
mov
cmp
push
mov
mov
xor
insl
mov
inc
daa
fwait
sub
pop
mov
fcoml
xchg
push
insb
and
sahf
divl
std
mov
enter
jne
popf
cmp
nop
scas
aam
in
insl
out
xchg
daa
push
imul
or
fcoml
mov
fldt
sub
cmp
dec
mov
out
icebp
pop
xchg
mov
pusha
and
push
movsl
and
scas
pop
mov
repz
cld
and
xor
cs
jne
xor
jns
add
popf
lods
rcrb
outsl
aas
aad
inc
jmp
xchg
ror
sbb
outsb
out
call
rol
jno
dec
inc
mov
add
daa
clc
idiv
jp
popf
stos
pop
sub
out
jne
sub
insl
nop
jp
jp
or
sahf
test
or
scas
mov
cltd
xor
inc
sub
inc
push
mov
lock
out
dec
test
into
shlb
cwtl
scas
loope
mov
lea
xchg
fsubl
pop
call
pop
dec
test
jb
cwtl
lret
out
into
push
jno
mov
call
sub
mov
sbb
mov
aam
mov
out
xorl
lea
aam
adc
les
aaa
push
andb
and
lret
daa
cmp
es
scas
cld
xchg
xor
popa
jmp
ljmp
xlat
push
adc
test
push
out
xchg
pop
dec
pop
out
int3
es
out
nop
push
stos
xorl
lds
cmpsb
xor
inc
aad
cltd
sarb
mov
lods
test
adc
test
pop
dec
or
push
shl
loop
je
lcall
xchg
nop
pusha
arpl
sahf
cld
sbb
adc
and
inc
push
lock
shlb
adcb
test
mulb
loope
mov
cmpsl
movsb
aas
jbe
sbb
push
imul
repnz
into
add
es
jno
or
cmp
int
and
mov
and
std
icebp
and
inc
mov
add
scas
mov
push
adc
sub
aam
fistl
cmc
repnz
int
mov
jnp
scas
mov
adc
xor
fcompl
jecxz
in
xchg
std
sbb
mov
ret
shl
test
cmp
movsl
das
mov
or
push
mov
out
mov
adc
dec
lock
adc
dec
mov
int
cltd
pop
cmpl
addr16
push
or
pushf
rcll
std
sub
xorb
mov
pop
pop
sahf
mov
sbb
adc
pop
leave
jl
pop
push
mov
loope
fcmovu
xor
sbb
leave
mov
inc
add
sub
xchg
orb
mov
pop
jle
fstl
add
leave
jecxz
inc
mov
jp
shll
mov
cmp
xchg
iret
loop
sbb
cmp
cld
int3
xor
cmc
adc
call
push
mov
sub
mov
and
push
pop
mov
xchg
lret
fwait
jo
scas
and
add
mov
cwtl
adcb
movl
or
jno
pop
ret
xor
in
sbb
mov
cmp
lahf
rcll
loopne
sbb
out
movsb
leave
jbe
scas
sbb
in
pop
sbb
hlt
push
mov
mov
fs
out
sahf
sub
and
daa
mov
std
mov
or
inc
icebp
and
jg
sahf
das
pop
mov
xor
push
push
or
mov
jecxz
cmp
sub
jno
cli
out
xlat
ror
in
icebp
cmpsl
xor
pop
add
mov
xor
fisubl
mov
lret
pushf
pop
out
xor
adc
push
ret
ss
inc
scas
imul
stc
sarl
in
mov
arpl
mov
cmp
andb
cld
sub
loopne
test
xchg
inc
cmpsb
in
std
loopne
or
outsb
add
mov
fisubs
ret
test
cmpsb
add
jle
cmp
sub
testb
out
imull
and
or
add
in
fsub
mov
and
xchg
test
clc
cmpsb
xor
ds
cmp
nop
adc
ficompl
cli
orb
or
adc
scas
loopne
imul
push
push
ret
out
scas
call
sbb
jl
xchg
imul
or
aaa
xchg
push
or
jns
scas
rcl
ja
lock
push
daa
movsl
and
fisubrs
mov
lret
mov
lock
sbb
ss
insb
out
std
xchg
push
popa
add
jne
jb
cwtl
mov
flds
xor
ret
idivb
int3
mov
enter
mov
int
and
mov
inc
nop
ja
sub
mov
lock
adc
dec
xor
insl
xchg
jg
cmc
push
cli
and
jnp
jmp
inc
push
movsl
jle
ljmp
ds
sub
mov
test
jp
and
aaa
movsl
push
aas
divb
scas
mov
cmp
lea
fsts
test
gs
push
bound
fsubl
adc
xchg
add
test
inc
cltd
enter
in
pop
xor
sbb
loop
pop
mov
jne
push
data16
pusha
mov
push
jno
icebp
popa
jge
sub
push
lds
ljmp
xorb
or
adc
push
dec
pop
mov
pop
add
xchg
xlat
in
jnp
xchg
outsl
push
loope
movsb
pop
mov
pusha
dec
pushw
sbb
xchg
data16
loope
lock
dec
mov
scas
sti
mov
push
push
mov
repz
fistpl
pop
xor
sub
lret
fldl
xchg
mov
sbb
out
pop
incl
repz
fstps
and
sbb
cmp
pop
call
fbld
test
mov
or
mov
pop
and
xchg
mov
adc
inc
inc
xchg
insl
lods
test
mov
faddp
sahf
icebp
sbb
add
add
mov
mov
jp
xlat
jns
gs
inc
mov
xchg
inc
add
add
sub
or
aam
sbb
mov
cmp
dec
mov
adc
jbe
push
mov
cmc
outsb
movsl
out
jl
inc
in
cli
adcb
dec
daa
cwtl
push
negb
scas
dec
xchg
dec
fidivrl
sub
insb
repnz
movsl
inc
mov
add
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
mov
push
pop
cli
adc
sar
pminsw
inc
pop
mov
out
mov
jge
negb
or
mov
adc
sbb
in
add
movsl
shr
inc
in
mov
add
adc
sub
sub
push
sub
fistl
sahf
sub
jmp
sub
push
stos
push
lods
cltd
jl
lea
mov
dec
test
jp
aaa
xor
mov
data16
mov
in
aaa
fimull
jecxz
mov
or
jo
pop
decl
testl
stos
xchg
adc
pusha
fstpt
fwait
adcl
pushf
or
xchg
add
adc
addr16
push
xor
call
sbb
xchg
ljmp
sub
dec
and
xchg
fisubl
sub
repz
ret
xchg
xchg
sub
cmpsl
mov
xchg
test
mov
aas
sti
rcrl
xor
call
push
outsb
lret
adc
xor
and
mov
push
sahf
xlat
das
les
xor
mov
shrl
sub
jle,pt
jecxz
or
and
sbb
lock
mov
shrl
jb
xor
push
pop
mov
fsts
cmp
out
adc
xchg
mov
insl
mov
mov
add
dec
insb
push
cld
push
add
jnp
dec
orb
out
ret
pusha
cmp
xor
shrb
dec
loope
mov
dec
cmp
add
xchg
rorb
push
mov
or
mov
mov
and
bound
call
xor
lcall
test
mov
pop
mov
dec
mov
std
or
mov
icebp
jo
mov
cmp
pop
mov
mov
sub
or
fcmovnbe
ja
push
pop
or
push
repnz
mov
dec
mov
shr
cld
mov
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
