push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
cmpsl
inc
push
jmp
bound
sbb
bound
xor
cmp
jns
jbe
andb
sar
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
ljmp
inc
es
das
mov
dec
repz
mov
data16
in
vlddqu
aas
sub
xchg
rcrl
out
imul
sahf
fldcw
inc
mov
or
or
bound
mov
push
pop
xor
js
mov
pop
add
imul
cmp
ret
cmp
lock
adc
inc
pop
inc
bound
int3
loop,pn
pop
ss
mov
scas
mov
cmp
fsubs
mov
pop
in
cmp
push
xlat
fsubl
fdivrs
cs
xchg
push
ret
jbe
mov
scas
sub
mov
sbb
add
push
add
aad
outsb
dec
mov
out
and
rorb
xor
add
stos
fcmovnu
insb
add
repnz
je
and
inc
sub
leave
inc
addb
std
enter
sbb
sbb
out
inc
cltd
jae
xor
test
and
daa
inc
movsl
fisubl
je
ja
mov
mov
jecxz
jp
mov
lods
ret
add
xlat
pop
ficompl
add
xchg
enter
xchg
das
jae
cwtl
pop
xchg
imul
stos
std
stos
xchg
mov
inc
stc
fidivl
dec
icebp
mov
nop
push
rolb
pop
jmp
xchg
mov
or
add
inc
sub
stos
push
mov
pop
cmp
in
or
in
decl
popf
adc
inc
js
cmc
pusha
cmpsb
aas
xor
cmp
das
mov
pop
movsl
hlt
frstor
push
or
xor
lret
int3
loopne
sarl
test
sbb
icebp
mov
xchg
outsb
pop
mov
pusha
xchg
nop
lods
xor
jno
out
pop
push
sbb
out
cmp
mov
repz
adc
mov
push
out
or
and
dec
pop
push
mov
test
pop
cmpsl
aam
xchg
cmp
lret
decl
jecxz
stos
enter
pusha
xchg
and
cmpsb
inc
std
cmp
jge
frstor
cltd
mov
jl
divl
lods
push
sahf
mov
iret
dec
xchg
in
xchg
insb
data16
movsl
push
pop
sbb
pop
xor
push
sub
push
sbb
div
mov
leave
pusha
rclb
xor
cltd
stos
mov
mov
je
arpl
icebp
ljmp
lea
das
in
int3
dec
out
stos
js
or
push
rcrb
out
mov
mov
es
or
int3
mov
int3
bound
push
mov
lea
and
lcall
ljmp
shlb
mov
nop
mov
pushf
lret
and
in
push
sbb
in
mov
imul
jle
cmp
jge
movsl
jmp
loope
sbb
ret
out
jo
test
dec
cmpsl
psubsw
nop
and
xchg
sbb
das
adc
or
jge
mov
cmpsb
cmpsl
fwait
je
std
pop
mov
cmp
out
popf
repz
dec
add
insb
xor
jle
dec
ret
sub
mov
stos
cmp
lcall
mov
xchg
cmp
adc
fdivs
pop
arpl
dec
cltd
push
loopne
add
fs
js
pushf
insb
fldcw
into
sbb
adc
dec
pop
mov
inc
push
inc
pop
sbb
repnz
popf
iret
mul
jb
add
call
clc
pop
in
mov
movsb
das
dec
add
fistps
or
mov
ljmp
inc
ja
fnstcw
enter
cs
xlat
push
imul
inc
mov
sub
mov
fcomip
in
jg
jge
std
clc
shlb
test
test
ljmp
gs
mov
pop
aam
adc
insl
adc
mov
es
sbb
fdivs
cld
mov
pop
pop
setnp
dec
dec
cmpb
scas
and
addr16
movsb
xor
cmc
pop
stos
pop
mov
sub
scas
ja
ss
cmc
clc
subl
bound
test
in
lahf
rcrl
shrb
xor
inc
xor
ud1
add
jg
ret
cmpsb
lcall
sub
imul
mov
push
subl
inc
mov
pop
add
nop
out
and
and
negb
rcrl
inc
mov
lcall
fwait
in
scas
pop
cmp
sti
pusha
movsb
insl
fnstcw
enter
xchg
mov
add
sbb
sti
jmp
xchg
cmp
jnp
stc
jno
pop
and
into
xchg
fldl
push
dec
imul
out
negb
daa
popf
jp
mov
jmp
loopne
sub
push
lret
xor
inc
jmp
jno
bound
lock
inc
xchg
sub
mov
xor
or
and
jecxz
sub
sarl
int3
or
jb
pop
mov
jp
cmc
sti
mov
iret
jg
mov
jae
or
cli
sti
xchg
cmp
push
loop
push
xor
int
das
mov
pop
add
setns
scas
test
stos
shlb
in
imul
ljmp
test
movsb
mov
das
es
mov
sahf
lret
mov
jmp
mov
das
mov
pushf
jle
out
mov
push
xchg
stc
add
push
inc
fcom
mov
push
jmp
mov
jns
imul
data16
fmul
inc
jle
ja
or
pop
stos
sub
pop
dec
sub
sbb
out
mov
adc
ds
push
lret
sahf
scas
dec
sub
sbb
js
lock
roll
rorb
push
call
mov
and
mov
insb
cmp
test
sub
icebp
stos
ss
pop
and
dec
xor
pop
and
mov
mov
shlb
cld
adc
enter
orb
sub
test
pop
jns
push
insb
mov
aaa
sbb
in
in
or
xor
jb
daa
mov
mov
mov
and
xlat
dec
pop
dec
std
loope
inc
and
inc
jl
mov
or
enter
cmp
jge
push
adc
xor
rorb
inc
pushf
pushf
mov
xor
mov
fcoml
shl
mov
lcall
rcrl
pop
jge
pop
repz
orb
inc
ret
loop
mov
jb
mov
xor
lret
or
cmp
mov
inc
call
movsb
cmp
insl
out
mov
mov
push
and
popf
push
je
cmc
fwait
aaa
mov
mov
jo
pop
cld
and
cmpsb
test
cmp
into
pushw
adcl
scas
bound
fndisi(8087
add
inc
pop
mov
cmpsb
mov
sbb
stc
sub
sbb
xor
popf
ja
in
enter
fnsave
dec
lret
lock
mov
rorb
loope
loopne
push
mov
xchg
rclb
dec
insb
sub
icebp
add
xchg
cmp
test
scas
push
dec
cmp
mull
or
and
add
jbe
test
popf
and
mov
cmpl
push
and
ljmp
fdivl
insb
xor
stos
int3
sbb
xchg
aad
push
jno
insb
xor
push
xchg
vmwrite
and
push
daa
out
stc
dec
aad
xor
loop
enter
js
stos
jns
inc
inc
push
or
scas
xchg
mov
mov
into
inc
inc
cltd
sub
ret
sbb
paddw
jnp
mov
xchg
mov
aas
leave
stc
add
mov
jne
ret
dec
dec
in
pop
add
dec
pop
out
lods
mov
xchg
jge
pop
cwtl
jbe
jle
sub
mov
lret
pusha
orb
leave
rep
adc
mov
dec
ret
insb
ret
lret
and
xchg
in
mov
adc
inc
dec
xchg
test
subb
inc
lret
shll
and
leave
shll
aas
mov
pushf
lret
jecxz
sub
push
fs
hlt
sbb
mov
pop
dec
or
and
xchg
or
xchg
sbb
mov
roll
test
test
adc
xchg
mov
push
dec
test
mov
bound
std
es
pop
xlat
out
in
sbb
mov
scas
fisttpll
push
and
sbb
pop
mov
and
cltd
mov
lods
loope
in
les
stc
xor
rorl
xor
aam
arpl
sub
jne
loope
push
shlb
aas
and
inc
xor
mov
mov
vpminub
pop
adc
dec
jb
push
frstor
sbb
pop
stos
cwtl
pop
pusha
push
out
leave
imul
dec
jae
pop
aam
or
jne
das
push
mov
or
xchg
inc
insb
stos
es
mov
adc
sub
pop
enter
fsts
add
lcall
cmp
sbb
icebp
mov
pop
fidivrl
inc
push
les
cmp
push
cmpsl
or
or
cmpsb
jb
pop
jmp
in
sti
lea
add
addl
mov
jl
add
testb
xchg
cmp
in
xchg
push
ficomps
in
inc
mov
jno
jle
dec
push
fisttpll
dec
mov
pop
mov
mov
ja
orb
jbe
jnp
cmpsb
jecxz
aaa
and
shlb
test
jns
in
mov
push
int
mov
cmpsl
into
mulb
cmpsb
fisttps
loope
add
mov
xchg
sbb
jmp
fldl2e
into
inc
hlt
push
fnstcw
aad
inc
push
repnz
ret
and
sti
push
imul
inc
inc
fisubl
fsts
cmpsl
nop
lcall
mov
or
mov
stos
pushf
in
xor
pop
cmc
ret
mov
sbb
pop
faddl
xchg
out
jp
adc
xchg
ret
push
adc
inc
jg
sbbl
out
adc
xor
in
mov
mov
cmpsl
and
scas
push
insl
inc
addr16
jmp
xchg
stos
xor
pop
cmpsb
xor
mov
pusha
leave
iret
jb
jns
xor
or
and
subb
sub
in
mov
mov
out
inc
outsl
mov
dec
test
lods
inc
out
pop
lret
cs
ret
repz
mov
adc
push
clc
data16
or
subl
cltd
push
jg
mov
aam
jg
mov
fidivl
push
dec
mov
es
scas
stc
enter
pop
hlt
xchg
fistpl
and
mov
sbb
xchg
les
mov
dec
rorl
cmp
stc
ja
mov
outsb
add
mov
rcrb
push
hlt
movsb
je
add
add
stc
icebp
xchg
jb
lcall
outsl
sub
push
or
sbb
fwait
jb
stos
inc
cmp
sbb
and
jl
cli
or
aas
mov
dec
jae
out
mov
mov
adcl
dec
cmp
xchg
imul
and
lahf
xchg
pop
mov
push
inc
bnd
and
pop
cmp
ss
mov
xor
mov
push
cli
or
cmp
lcall
inc
pushf
jecxz
sub
jg
insl
icebp
sbb
loop
test
cmp
scas
add
into
xor
std
mov
popf
popf
sbb
push
ja
pop
lcall
cmpl
inc
mov
xor
stc
xor
or
mov
push
sbb
mov
jnp
and
mov
leave
adc
setg
pop
fs
mov
xchg
mov
mov
sub
mov
lcall
std
imul
xchg
xor
repnz
mov
add
roll
sub
dec
inc
nop
lret
stos
ds
mov
dec
fwait
xchg
mov
bound
xchg
xchg
insb
xor
lret
pop
add
xor
jl
lret
ss
aad
jb
xchg
fldt
dec
sub
cmp
lcall
mov
arpl
call
mov
xor
sbb
dec
loop
fbld
leave
jae
pop
push
lret
scas
mov
mov
lret
stos
add
inc
lods
sub
or
and
jle
loop
lods
dec
out
cltd
stc
jg
iret
mov
pop
mov
push
jne
jns
xor
cmp
xlat
lea
and
jmp
ret
test
arpl
ret
pop
clc
repnz
and
pop
out
ja
dec
xchg
jb
cli
inc
out
jl,pn
repnz
test
loop
int
enter
push
dec
movsb
jb
push
add
dec
dec
aas
mov
int
fimull
in
dec
inc
lahf
sbb
inc
aaa
push
mov
popf
mov
scas
aas
pop
lret
mov
out
test
xchg
mov
push
dec
adc
out
pop
enter
roll
aas
andb
loop
lret
mov
dec
sbb
stos
jmp
test
imulb
mov
in
sub
and
cmc
lcall
mov
jae
xchg
shrb
cld
mov
call
ss
aas
mov
in
mov
and
in
addr16
mov
mov
push
jl
cmp
mov
add
jle
adc
ljmp
jns
jnp
and
popa
ja
jns
bound
xchg
inc
adc
push
sbb
movsl
adc
insl
cmpsl
fdivrs
movsl
mov
ss
lret
sbb
and
sbb
das
push
mov
sarb
sbb
xor
pop
repnz
mov
popa
arpl
xchg
fsts
cmp
push
inc
push
in
and
sub
je
adc
mov
std
popf
sahf
fwait
dec
test
insb
or
sub
mov
mov
xchg
fbstp
jns
mov
pop
aaa
std
or
xchg
push
pop
cwtl
adc
pusha
mov
cmpsb
sbb
pop
and
jmp
sub
jmp
rcrl
pop
sbbb
adc
add
enter
cmp
nop
xor
insb
cmpsl
scas
jmp
inc
inc
add
jbe
popf
and
dec
sbb
xchg
pushf
lods
lahf
outsw
ss
mov
aam
xor
mov
push
imul
add
inc
fdivs
adc
dec
in
xor
sahf
add
pop
dec
jg
mov
mov
andl
fidivs
mov
loope
sahf
mov
imul
call
rol
bound
xor
mov
loope
out
ror
add
fsubs
pop
mov
sub
int3
pop
xchg
inc
sti
sti
imulb
loopne
sbb
fildl
insb
movl
daa
fisttpl
ds
push
jne
popa
mov
mov
pop
pop
dec
out
lods
popl
lret
or
fsubrl
enter
ret
sub
xor
aas
stc
js
sbb
sub
dec
xor
rolb
xchg
or
fwait
outsb
cmp
mov
or
or
repz
dec
xchg
roll
addr16
arpl
mov
cld
imul
mov
jo
inc
mov
xor
pop
in
es
mov
mov
push
and
addr16
cmp
or
mul
mov
inc
push
push
sbb
add
jmp
fisubl
out
sub
xor
jg
jbe
lea
cli
jecxz
lret
inc
mov
sub
xor
aas
ss
xchg
or
fs
aas
cld
dec
sbb
loope
adc
jmp
adc
aad
cmc
jo
into
dec
xchg
fnsave
fiaddl
pop
jmp
enter
adc
dec
dec
ret
fnstsw
arpl
sbb
lock
lock
xor
js
andl
xor
or
fwait
cs
pop
and
sbb
lret
scas
je
pop
jp
mov
cli
mov
push
xchg
sbb
xchg
les
nop
adc
pop
es
mov
xchg
shlb
data16
lock
pop
sbb
test
enter
xchg
inc
lds
ret
jo
mov
gs
pop
cvtdq2ps
arpl
dec
arpl
in
mov
xchg
cmp
jmp
jmp
mov
xor
out
inc
cli
sbb
aad
sbb
cltd
pop
jne
xchg
or
and
mulb
shrb
add
or
imul
int3
lea
ja
dec
pop
mov
jb
mov
call
mov
ret
test
push
jae
adc
xlat
pushf
adc
psubw
stos
inc
adc
xor
jle
in
pop
ret
jecxz
cmpsl
shl
cmpsb
or
sahf
movsl
pop
add
xchg
lock
rcr
xor
xchg
lods
add
mov
in
mov
cmp
dec
mov
cli
ljmp
popa
or
push
pop
fwait
jg
sar
fs
lret
add
pop
mov
cld
movsl
sahf
adc
sub
fisubrs
pop
shr
xlat
call
cmp
pushw
lret
daa
in
ret
xchg
lods
dec
mov
arpl
gs
aas
and
test
inc
push
dec
stc
hlt
push
jg
jl
shrl
test
jo
xor
pop
jb
mov
or
icebp
cmc
mov
mov
sahf
mov
mov
pop
fwait
or
xchg
cwtl
cmpsb
inc
cmp
mov
mov
out
fs
stc
jmp
cmpsb
or
push
and
into
xchg
insl
xor
fsub
fildll
push
fisubl
sbb
fs
push
jmp
iret
cmpsl
not
xorl
hlt
aad
jecxz
aas
stc
mov
push
lods
pop
cli
mov
xchg
loope
cmp
mov
in
sbb
add
lds
imul
pop
mov
dec
push
jmp
stc
out
fnsave
jmp
pop
add
add
jbe
fcmove
das
hlt
dec
stos
ljmp
dec
ret
out
mov
mov
cmp
out
push
jmp
jecxz
adc
and
pop
dec
pop
ljmp
jg
adc
test
dec
add
fs
xor
orl
xchg
xchg
push
arpl
inc
mov
lock
jno
sbb
xlat
inc
push
xor
mov
jecxz
lock
sbb
test
jns
add
out
int
or
iret
pusha
loopne
xor
insb
scas
push
shr
xor
push
shrl
mov
pop
mov
or
mov
aad
push
fsubr
icebp
push
ret
inc
pop
fisttpl
xorb
enter
div
push
and
push
repz
hlt
mov
iret
in
movsb
mov
movsb
xor
daa
add
lret
aas
jo
pop
les
aas
fnstsw
pop
dec
and
mov
mov
inc
insb
aad
add
push
lock
test
mov
ljmp
push
xlat
mov
sbb
enter
decb
gs
jge
imul
ret
dec
enter
sbb
push
mov
pop
js
sbb
out
lds
xor
icebp
jb
in
popa
sbb
jmp
shr
jg
mov
aas
pop
test
push
inc
stos
fidivrl
or
imul
jo
rorb
cs
enter
je
lock
ficoms
in
fwait
ret
xlat
int
cmp
mov
cmp
dec
rep
or
sar
test
shrd
and
inc
mov
pop
and
push
es
enter
mov
add
scas
xchg
mov
add
lret
dec
rol
lahf
push
jno
xchg
adc
inc
mov
push
adc
jne
insb
lods
mov
out
inc
pop
icebp
push
insl
and
add
ljmp
xor
inc
mov
mov
and
sub
push
into
aaa
je
dec
into
and
sub
xor
lds
pop
cltd
pop
jle
mov
outsb
movsb
cmc
aas
or
push
insb
std
fidivrs
mov
lcall
adc
pop
mov
out
pop
lds
outsb
push
xchg
stos
cmp
lret
pop
mov
pop
in
add
or
ljmp
adc
or
push
out
mov
decb
or
and
in
mov
ss
loop
cmpsb
jae
mov
popa
sub
jns
cwtl
and
cmpsl
nop
aam
xchg
mov
call
scas
or
rcll
add
and
push
mov
aaa
mov
xor
sbb
adc
jg
adc
push
sbb
mov
nop
push
push
fmul
add
xchg
andl
les
in
cwtl
mov
or
jbe
pop
dec
lods
push
inc
neg
mov
push
movsl
ucomiss
std
idivb
adc
mov
imul
sub
dec
xlat
xor
push
mov
xor
sbb
and
pop
pop
mov
sti
xor
js
pushf
xor
inc
sub
dec
fdivrp
cli
addr16
push
mov
pop
adc
fnstenv
shll
outsb
dec
das
push
fwait
mov
repnz
rol
ja
mov
fs
cmc
fdivs
ret
outsl
pop
mov
mov
sub
adc
add
jecxz
std
imul
jecxz
outsl
jae
mov
clc
dec
push
mov
mov
je
enter
mov
popf
popf
stos
lods
push
pop
in
enter
movsb
scas
push
inc
imulb
push
sbb
jne
push
or
insl
test
inc
mov
xor
fidivrl
adc
mov
mov
or
movsb
add
adc
pop
mov
cs
idivl
shrl
and
in
not
stos
sbb
cmp
dec
and
sub
movl
mov
outsl
mov
adc
xor
pop
sarl
rcrb
rcr
icebp
cmp
jnp
test
out
cs
pusha
sarl
cwtl
int
sub
xor
add
ds
mov
mulb
ret
scas
pop
cmp
lcall
and
hlt
in
inc
dec
sti
xchg
ret
xchg
mov
sub
inc
addr16
addl
cli
lahf
mov
and
xor
push
std
daa
cmpb
pop
mov
fsubl
jle
xor
sbb
andb
xorb
andl
mov
loop
fcompl
popa
not
sahf
roll
jb
sub
xor
orb
lods
jge
sub
or
inc
in
push
dec
xchg
push
push
or
aas
sbb
dec
push
jb
js
push
sub
push
ror
lods
hlt
stos
sbb
mov
ljmp
adc
and
inc
rorb
jb
sub
pop
stos
pushl
inc
mov
sbb
add
lea
xor
jnp
test
xor
and
add
sbb
sbb
dec
or
mov
fxch
sahf
movsl
scas
xor
xor
rcll
pop
mov
xor
fiadds
mov
dec
lcall
pop
pushf
cltd
xchg
sub
mov
movsb
hlt
les
xor
add
movsb
pop
clc
mov
fdivrl
negl
jmp
into
test
xchg
push
gs
xor
mov
lret
inc
cwtl
add
mov
jo
mov
mov
cmp
mov
xchg
jno
mov
xor
lea
cwtl
dec
orl
add
aad
loope
int
clc
pushf
ds
push
mov
nop
sbb
xlat
rcll
cmp
sub
jns
mov
subb
xor
scas
cmp
push
outsl
cli
outsl
sbb
call
mov
lret
or
arpl
notl
out
and
inc
sub
shl
or
pop
add
repz
movsl
jne
jns
daa
cmp
test
pushf
lret
fistpll
xor
pop
xchg
and
sub
movsl
fistps
daa
xchg
push
mov
adc
aad
jmp
mov
and
shrl
lods
out
bound
fisttpl
in
ret
rclb
ss
mov
dec
bound
push
mov
and
dec
loop
rclb
mov
dec
lods
lret
pop
mov
bswap
das
add
das
fbstp
jg
add
push
adc
aad
inc
loop
sahf
xor
xor
repz
or
or
pop
and
sahf
cmp
push
push
push
or
mov
sbb
and
hlt
mov
fmull
sub
jns
push
outsl
pop
lahf
mov
rcll
daa
xchg
sub
mov
lret
push
sti
pusha
sub
in
repz
push
mov
insb
xor
push
sub
mov
xchg
cmpl
ljmp
inc
popf
in
mov
lretw
sbb
push
outsb
cmp
cs
pop
dec
lods
cmp
push
rcr
fnstsw
pop
popf
outsb
jbe
out
xchg
sub
jo
sub
lock
mov
cltd
nop
cs
popf
sbb
push
daa
mov
dec
fimull
add
and
dec
test
fcmovnu
mov
sbb
adc
sti
fidivrs
js
inc
mov
data16
add
lods
and
push
inc
add
loop
jno
jo
mov
std
stos
movsb
dec
imul
cs
popa
xor
jbe
and
and
xor
les
dec
sbb
loop
cmp
inc
lahf
in
ss
jb
jne
cmp
ljmp
jle
xchg
ffree
add
pushf
push
movsl
mov
dec
jae
outsl
mov
lea
aad
sti
xor
idivb
lcall
imull
test
in
fucomi
xlat
pop
dec
and
cmp
in
test
cmp
jae
hlt
xor
or
push
mov
dec
inc
xchg
jbe,pt
sub
scas
pop
insl
jl
cmp
mov
mov
add
lds
and
dec
xchg
faddp
sub
lea
xchg
add
loop
inc
push
push
xchg
movl
push
mov
inc
aaa
loop
jbe
outsl
outsb
rcrb
inc
cld
jecxz
xor
shl
test
push
movsb
mov
int
call
imul
lods
cld
pop
dec
loopne
cli
push
imul
xor
mov
roll
xchg
lds
mov
bound
adc
push
mov
or
stos
shr
pop
aam
sub
jns
out
ss
stc
inc
loope
sub
push
dec
xchg
dec
xchg
add
and
daa
shlb
repz
adc
push
cmp
es
mov
inc
cmc
and
add
or
jl
dec
cmp
pop
outsl
dec
xchg
shl
adc
test
int3
andl
mov
mov
sahf
jnp
cwtl
jmp
not
jae
inc
fildl
loop
push
dec
xchg
scas
pusha
and
iret
push
mov
xor
or
adc
lods
outsl
popa
mov
jl
pop
pop
mov
iret
push
sbbl
jl
in
xchg
add
fwait
jbe
in
das
imul
xor
cli
xchg
loope
repnz
daa
cs
shlb
shll
cs
clc
push
or
xlat
dec
shlb
ret
push
mov
cmp
adc
out
sub
sbb
cmp
mov
adc
fsubs
mov
sub
movsl
cmpsl
mov
and
cld
nop
dec
ret
dec
fiaddl
xor
xor
test
ret
popf
jnp
sbb
dec
add
dec
test
pop
ficoml
iret
add
and
xor
lea
dec
into
mov
popf
stc
cmp
xchg
in
cld
ret
jmp
cmp
pop
cmp
popf
fmul
pop
adc
imul
mov
push
sbb
inc
sbbb
dec
in
xchg
mov
and
out
cmp
lds
mov
cmp
loopne
xchg
repnz
lret
test
and
inc
push
fidivl
call
test
mulb
push
mov
mov
fisubl
push
or
mov
rcl
pop
xor
add
xchg
mov
sbb
rolb
ja
jb
pop
mov
sti
push
jbe
push
cmpsb
mov
xor
pop
dec
push
pmullw
lods
mov
outsl
cmp
adc
loopne
pop
xlat
sbb
leave
out
pushf
aas
sbb
or
fists
pop
test
fadds
adc
ljmp
xor
adc
cmp
andb
cmp
lahf
test
pop
enter
sub
xor
negb
ja
mov
jae
mov
jb
mov
in
orb
mov
jns
jl
push
xchg
jnp
mov
movsl
or
push
jecxz
testl
mov
push
lods
outsl
clc
fs
out
cltd
inc
fiadds
mov
jg
scas
pop
or
adc
lods
fdivs
mov
jge
push
jp
jle
sbb
shl
iret
push
lret
add
jbe
sub
adc
dec
push
jmp
push
mul
dec
cs
jge
adc
inc
adc
and
cli
pushf
shrb
mov
mov
stos
add
adc
add
lods
adc
xchg
or
fdivl
cs
xchg
xchg
jbe
pop
fldcw
sub
rorb
imul
mov
cmpsl
std
xor
dec
jae
scas
sti
push
imulb
pop
aam
or
es
leave
addl
test
popl
inc
add
push
or
mov
jns
jb
ds
nop
idiv
clc
sub
leave
mov
pop
test
js
mov
adc
inc
sti
addr16
mov
xchg
mov
mov
jp
inc
cmp
and
pop
shrb
movsl
in
ror
in
mov
inc
xchg
call
mov
imul
bound
cmpsb
and
outsb
or
adc
cmp
sbb
jmp
cmc
and
dec
sbb
pop
add
daa
imul
inc
test
push
pusha
mov
loope
addr16
out
sar
add
enter
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
lcall
sub
bound
aas
pop
cmp
aaa
or
mov
ret
push
out
pushf
and
adc
dec
outsl
insl
gs
pop
sbb
cs
lret
mov
mov
daa
jmp
imul
aaa
push
scas
lock
xor
dec
xchg
jbe
in
stos
fsts
ss
les
jmp
lcall
into
pop
mov
pop
js
in
mov
int
mov
or
stos
addr16
sti
and
xlat
test
mov
std
call
clc
inc
std
mov
fiaddl
pop
cwtl
scas
jl
and
test
jbe
adc
mov
push
imul
xchg
mov
fwait
loop
or
daa
outsb
test
add
hlt
clc
mov
fmuls
and
sbb
stc
nop
cs
sahf
data16
inc
jbe
insb
xor
mov
pop
or
or
ret
push
lds
sub
or
lods
xchg
testl
insl
sub
mov
jb
icebp
mov
sbb
and
lock
mov
cmp
or
arpl
jno
cmc
xchg
dec
jb
fbstp
cmp
rcl
or
aad
sbb
imul
inc
mov
pop
cmp
jb
cltd
inc
dec
loope
std
iret
imul
adc
mov
stos
xor
jge
dec
adc
sti
fld
mov
xchg
pushf
in
lock
fs
pop
lret
sbb
pushf
add
jge
sub
dec
outsb
inc
ret
jns
mov
dec
adc
arpl
mov
dec
loopne
push
daa
sbb
hlt
mov
sub
and
pop
out
cmp
lock
mov
sub
adc
out
mov
cli
sub
outsl
jmp
call
dec
push
in
mov
sub
scas
addb
pushf
adc
cld
fcomps
mov
stc
jbe
mov
aad
in
inc
lods
or
mov
out
and
sub
bound
dec
shlb
fstpt
sbb
sbb
test
add
mov
movsb
adc
dec
push
cmp
ficoms
addr16
mov
das
in
ret
fisubrs
fiaddl
test
out
in
jle
fimull
out
daa
mov
in
imul
or
cmp
jp
std
shrl
cmpsl
bound
ficoms
jnp
in
adc
daa
in
daa
dec
pop
cmp
popa
das
repz
ficomps
pop
stc
jmp
cmc
sbbb
fisubrl
daa
cmp
push
and
shll
add
cmpsl
rcll
loop
jmp
idiv
push
rcl
popa
add
sbb
or
dec
lcall
push
negb
fisttpll
scas
dec
xchg
sbb
sbb
es
mov
fnstcw
jo
mov
adc
dec
mov
cmp
daa
js
xor
idiv
out
jmp
aad
bound
insb
hlt
inc
add
imul
pushf
push
jp
push
and
add
insb
insl
cmpsb
jno
add
mov
leave
out
aaa
ss
stc
mov
mov
and
in
xchg
enter
jmp
cltd
sub
pop
sub
pop
fs
mov
pop
fidivl
cli
push
ret
jecxz
sbb
outsb
jmp
test
mov
push
out
mov
mov
mov
mov
aaa
and
cmp
call
push
incb
call
jecxz
jb
cmp
test
negl
jnp
shr
xchg
jecxz
fmull
sbb
sub
loop
arpl
cmc
js
xor
jbe
sbb
lods
pop
in
xor
xchg
fdivl
shrl
dec
std
js
aam
outsl
jne
outsb
mov
jmp
adc
mov
pop
pop
inc
mov
shlb
xchg
out
xchg
sub
or
lcall
scas
jns
dec
xchg
mov
push
les
insb
mov
inc
and
sub
xor
push
xor
shl
mov
xor
loopne
imul
xlat
xlat
xchg
jns
push
test
jno
cmp
or
push
push
sbb
insb
fdivl
inc
leave
jne
cmc
leave
pop
sahf
loope
mov
lods
sbb
sbb
lea
xchg
shrb
out
loopne
out
lods
test
and
adc
ja
cld
xor
outsb
mov
jbe
pop
mov
or
and
or
shrb
sbb
cmpsl
sbb
shld
sub
jmp
sar
iret
inc
aas
shrb
and
add
loop
pushf
cmp
push
aam
xadd
fwait
inc
fwait
cmp
out
adc
int3
ljmp
cltd
addb
sub
iret
pop
idivl
iret
pop
mov
or
fcmovnb
in
jecxz
push
xor
xchg
pop
jns
mov
jle
mov
mov
int
iret
out
cmc
fisubrs
mov
pop
sbb
add
scas
and
cmpsl
cmp
xor
lret
mov
sub
fldl
cli
pop
jle
mov
mov
pop
sbb
jle
filds
in
mov
jg
jno
shll
into
fiadds
mov
icebp
add
sarb
roll
or
xor
and
popa
test
and
arpl
stc
loopne
rcll
xlat
and
hlt
lods
ror
push
dec
jmp
int
mov
ficomps
popa
scas
enter
loopne
jmp
push
repz
sbb
mov
std
or
bound
pop
pusha
sbb
fstpl
ds
mov
out
inc
pushl
fistps
cmp
imul
sbb
mov
js
cmp
ljmp
mov
jg
js
sub
icebp
repz
in
mov
and
in
pushf
mov
inc
out
and
mov
inc
js
je
cmp
lret
mov
cmp
cmp
lock
cs
xchg
jp
cwtl
test
repnz
jns
dec
leave
outsl
inc
xor
mov
xchg
add
jno
pop
mov
push
repnz
ss
cld
movsb
sub
ds
mov
cld
push
push
mov
xchg
out
dec
in
sbb
push
lods
data16
sbb
sarl
cmp
mov
out
push
into
mov
ret
sti
lret
inc
enter
stc
scas
jmp
int
addl
jle
cs
and
stos
out
inc
scas
push
cmp
fisubrs
pusha
in
fs
push
mov
cs
pushf
popa
popa
nop
mov
add
scas
xor
xor
xchg
in
orl
sub
imull
mov
or
add
rclb
adc
inc
sti
fcompl
outsl
cmpb
das
test
mov
mov
outsb
push
pop
loopne
fwait
inc
cli
adcl
dec
mov
mov
push
lahf
dec
xor
popf
mov
push
enter
aam
adc
inc
push
les
cmp
add
fmuls
or
jecxz
push
adc
xor
xchg
push
enter
out
sub
int
icebp
cwtl
loop
dec
dec
int3
arpl
fwait
cmc
dec
sub
pop
mov
mov
cmc
add
pop
xchg
imul
sbb
dec
sbb
std
fwait
lret
xchg
pop
imul
push
es
in
clc
lcall
xchg
inc
out
dec
xchg
jmp
push
pop
xor
and
nop
jmp
in
aas
push
retw
test
jg
xor
in
push
call
cmc
add
je
dec
add
cmpsb
imul
scas
inc
divl
int
mov
dec
cmp
pusha
pop
imul
inc
push
lods
in
adc
test
mov
test
pop
arpl
xor
js
into
push
dec
and
dec
stos
lods
push
xor
imul
xchg
xlat
outsb
cmp
mov
lea
in
xorl
mov
in
stos
les
xchg
push
push
and
xor
and
cld
addr16
rclb
iret
xor
jecxz
cmp
jns
inc
pop
pop
adc
sub
aaa
stos
int3
notl
add
sbb
xor
scas
test
clc
jnp
adc
or
pop
jle
push
loope
xor
adc
mov
lods
loop
jg
lea
das
dec
xchg
pop
out
push
xor
int
nopl
gs
nop
pusha
inc
push
lea
jge
sbb
sbb
orb
inc
sbb
adc
jb
mov
fadd
jnp
pop
xchg
ficoms
clc
push
xor
lret
inc
dec
sbb
out
lea
mov
add
push
jecxz
fdivl
ret
jns
out
lahf
movsl
stos
xor
lods
push
lahf
popf
int3
clc
mov
and
xorb
loopne
aas
xchg
sub
pop
stc
rolb
push
push
mov
xchg
add
in
shlb
aad
cli
fnsave
test
adc
pop
jmp
xchg
filds
stos
mov
out
jecxz
jae
movsb
ror
lret
adc
out
cwtl
or
fcmovnb
aaa
xchg
rcll
pop
mov
mov
insb
imul
imul
push
mov
sbb
inc
or
in
cmp
mov
lret
sbb
pop
mov
pop
adc
and
mov
jle
fdiv
cli
or
test
dec
jl
aam
mov
push
xor
int3
in
ljmp
or
lock
inc
stc
leave
jg
rorb
ljmp
add
mov
iret
sub
xchg
xor
sti
fcoms
xlat
sbb
lcall
test
fimull
push
jne
lods
andb
or
cmp
pop
mov
push
xor
adc
jl
add
xchg
xchg
stos
inc
push
cmp
fadds
pop
xchg
cmp
clc
clc
jp
movsl
mov
sub
and
pushf
cmp
inc
or
test
scas
mov
mov
push
loopne
ret
movsb
repnz
rcll
arpl
dec
xchg
push
cmp
sbbb
stc
or
xchg
xor
imul
add
mov
mov
jecxz
sbb
adc
cmp
lret
aad
mov
popf
mov
lods
xor
dec
sahf
push
and
cmp
or
loope
icebp
pop
pop
mov
cmp
pop
mov
xchg
or
insl
dec
push
test
xlat
ret
fmuls
in
xchg
fidivrs
hlt
mov
xchg
es
dec
testl
sbb
stos
push
mov
fnstcw
push
pusha
cs
sub
les
std
rorb
mov
fildl
ficoml
fcom
outsb
lahf
icebp
sub
or
leave
pop
or
cmp
cmp
or
jb
mov
sarl
movsl
test
cmpsb
jp
adc
std
shl
adc
orl
xchg
nop
push
and
and
or
dec
mov
mov
jp
mov
out
and
filds
std
mov
incb
sub
xor
xor
or
in
gs
mov
pop
aad
out
cmpsl
test
outsl
pop
mov
std
xchg
lods
pop
shll
cs
mov
inc
pop
inc
inc
test
leave
aam
jg
in
sbb
mov
std
add
jg
aam
xchg
iret
shll
adc
subb
adc
or
mov
cld
aas
rcll
andb
fisubs
jecxz
test
dec
jl
jmp
sbb
lahf
push
cwtl
inc
rorl
mov
imul
xchg
xor
les
std
hlt
in
mov
repnz
xchg
out
mov
les
cs
sbb
add
insb
ss
loope
out
loope
ja
pushf
inc
cmp
or
add
bound
inc
insb
js
hlt
jno
insb
scas
andb
cmpsl
mov
mov
jne
cmpsb
lret
xchg
cmpsl
outsb
inc
fs
lret
data16
iret
push
inc
outsb
mov
ljmp
imul
dec
lds
pop
sti
out
push
iret
or
fwait
ja
ficompl
inc
int3
lock
push
repnz
jl
je
xor
ljmp
inc
pop
ss
roll
dec
and
mov
mov
sbb
cmc
mov
mov
add
or
push
mov
dec
jae
jmp
loopne
lcall
test
pop
xor
adc
push
push
sub
leave
lea
jmp
and
add
jg
sub
push
or
in
sbb
enter
popa
adc
jbe
insb
scas
enter
cmpl
pushf
mov
jge
cmp
xor
sbb
inc
cmp
add
test
into
push
jecxz
test
push
jmp
push
sbb
mov
fildll
sbbb
mulb
addr16
add
dec
add
outsb
add
lea
jecxz
insb
sbb
enter
xchg
push
add
and
dec
mov
mov
or
pushf
push
add
pop
or
jecxz
xor
je
mov
jbe
cltd
sti
push
xlat
sti
jns
outsb
mov
enter
bound
lds
jne
clc
cmp
adc
loope
ljmp
repz
call
in
movsb
and
mov
insb
push
mov
lret
pop
push
dec
inc
int
movsl
fucomi
mov
xor
and
mov
fiadds
jns
fdivrs
push
push
in
stos
mov
mov
add
addr16
in
and
mov
jecxz
ret
cmovge
test
stos
mov
sbb
push
jb
outsb
pushf
xchg
sub
mov
inc
adc
shr
push
cmp
fwait
xor
xchg
fucom
mov
mov
lret
jmp
out
sub
push
lea
test
jno
ss
sbb
or
sub
mov
adc
dec
ljmp
xchg
aas
mov
test
mov
lods
jae
pop
add
in
out
shll
dec
jo
add
pop
adc
push
es
lods
and
dec
sub
out
xchg
test
inc
sbb
mov
ret
xor
stc
ret
mov
stc
mov
inc
dec
mov
adc
push
nop
hlt
sahf
test
ficompl
lahf
lock
sub
or
ljmp
mov
dec
or
jo
pusha
xchg
aaa
mov
popf
jle
cld
fbld
stc
or
lret
and
je
lahf
pop
pusha
scas
adc
mov
inc
add
xor
in
cs
mov
add
call
jo
pushf
xchg
call
mov
and
cld
jnp
repz
ja
xchg
sar
add
cmp
stc
jb
fcoms
mov
cmpsl
cmp
xchg
or
xchg
jecxz
and
cwtl
pushf
mov
pop
xchg
cwtl
push
jl
lahf
jne
or
jl
inc
xorl
cmp
popa
cmp
push
xchg
mov
bswap
fisttpl
xchg
fsub
nop
ja
adc
je
imul
leave
sti
add
aas
movsl
repz
int
sbb
out
sub
push
xor
mov
dec
jmp
pop
je
outsl
clc
jmp
sbb
rcrl
lds
ja
and
lret
cmp
stc
or
dec
mov
push
into
pop
int3
xor
repnz
adc
ret
pop
mov
mov
and
jbe
loopne
repz
xchg
jne
push
jmp
testl
pop
mov
lret
sub
jno
cmpsl
mov
adc
cmp
lcall
mov
insl
cmp
pop
and
mov
sbb
mov
mov
lret
push
mov
pop
es
aas
lret
and
out
jae
movsb
mov
sbb
or
aam
inc
jle
xor
pop
jb
inc
mov
inc
mov
ds
xlat
add
std
fwait
cmp
mov
inc
sbb
adc
xchg
add
pushf
jno
mov
inc
add
add
sub
xor
test
test
mov
je
xchg
iret
xor
frstor
sub
fcomps
and
and
or
lock
cmp
shr
jl
cltd
shrl
cmpsl
xchg
lcall
shrb
shll
cli
push
ret
add
fs
imul
push
lods
inc
faddl
int
lret
add
mov
negl
xchg
stos
sbb
aam
add
fmul
out
inc
inc
xchg
mov
movb
or
and
dec
mov
out
jae
ss
mov
jg
mov
lds
adc
hlt
fstpl
mov
or
imul
xor
push
aam
lcall
add
pusha
sbb
cmc
pusha
fstl
jle
sbb
push
or
hlt
mov
push
or
gs
dec
xchg
movsl
push
xchg
jno
or
dec
pushf
or
pusha
sbb
test
shrb
sbb
imul
or
jge
sbb
shl
mov
loop
jo
sbb
aad
adc
jno
pop
addr16
add
xchg
in
rcrl
rcrb
sbb
gs
pop
jp
pop
icebp
lock
xchg
lahf
jle
mov
loop
mov
and
mov
in
jb
or
cld
fnstenv
test
pop
dec
mov
lods
jbe
out
fidivrs
pop
gs
and
lret
jge
jnp
mov
pop
jbe
int
inc
pop
pop
outsb
out
pop
pop
push
adc
movsb
sahf
add
jmp
sbb
std
dec
cmp
int3
mov
rcrb
pop
jne
pop
jle
adc
xor
xor
pushf
aaa
mul
pop
pushf
xchg
cs
push
and
rcl
cmc
add
mov
jl
push
cmpsb
cmpsb
cli
dec
and
insb
cmp
jmp
fdivrl
pop
lret
or
mov
inc
movsb
sub
mov
dec
add
jb
dec
shr
or
and
loope
dec
popf
iret
sub
inc
test
lods
movsb
dec
bound
shlb
xor
je
lock
inc
lahf
out
fidivrl
sbb
pusha
cld
xchg
xchg
push
mov
in
ljmp
xchg
mov
in
nop
sub
outsl
ljmpw
dec
data16
sub
sbb
lock
sbb
subb
push
lahf
movl
and
loop
mov
adc
insl
mov
push
in
dec
cmc
dec
mov
test
imul
jle
stos
jge
sbb
rcrb
push
xchg
adc
add
or
jmp
xor
xchg
xchg
mov
cmpl
gs
xor
repnz
or
xchg
stos
stc
dec
jle
xchg
jns
dec
add
sahf
outsb
sbb
jmp
xchg
cld
pop
cmp
loopne
cmp
std
or
lods
cli
movsl
mov
outsl
cltd
hlt
xchg
inc
cmp
xor
jp
cmpsl
cmc
lock
lret
mov
xlat
cli
ret
push
xchg
shl
insb
testl
push
repz
and
xchg
ret
js
in
hlt
cmp
insl
mov
hlt
imul
jbe
xor
dec
aad
adc
lea
cmp
idivl
inc
dec
jb
inc
pop
sbb
pop
ret
xchg
xchg
push
inc
and
fcomip
pop
testl
fwait
loopne
mov
adc
stc
les
xchg
add
fwait
movsl
mov
ljmp
xor
cmp
scas
xchg
adc
daa
inc
pop
mov
cmpsb
mov
shll
and
mov
mov
xor
cmp
mov
xchg
xchg
jmp
sbb
push
adc
fiadds
mov
fidivrs
xchg
mov
pop
movb
push
aam
in
push
in
add
pop
push
add
xor
mov
sub
or
subb
popf
jcxz
dec
inc
loopne
xchg
fisttpll
lret
mov
stos
shll
pop
cmc
add
fdivl
mov
in
les
mov
xchg
ret
sbb
fiaddl
sbb
xlat
mov
mov
dec
mov
scas
jo
push
jmp
imul
xor
mov
inc
scas
dec
pop
out
adc
sub
inc
repz
dec
sar
push
imul
stc
hlt
jnp
addl
dec
inc
dec
xchg
rolb
das
jle
aam
test
xchg
dec
xchg
cmp
lahf
call
mov
imul
adc
cmovl
rcrb
shll
pop
xchg
js
xchg
dec
sbb
enter
popf
mov
call
stc
xor
out
lock
mov
xchg
cmp
push
in
add
xchg
sbb
int
or
push
daa
imul
or
add
adc
mov
in
mov
jg
inc
and
mov
sub
in
sbb
mov
ret
clc
and
pop
jmp
movsl
inc
sbb
cltd
jae
xchg
daa
xchg
cltd
sub
ret
fsubp
sbb
dec
jb
cmpsb
das
pop
xchg
mov
inc
mov
movsb
cltd
stos
addb
inc
out
ds
xor
out
dec
addr16
add
jb
mov
add
lock
cmp
inc
lds
lcall
stc
xchg
cmp
add
imul
arpl
mov
test
cmp
jmp
iret
mov
and
pusha
dec
sbb
cmp
push
iret
mov
inc
dec
or
cmp
mov
rcr
or
mov
push
scas
jne
adc
add
push
add
lahf
negb
popf
inc
enter
xchg
or
jnp
xor
cmc
add
inc
pop
les
out
dec
pop
loop
add
xchg
sahf
mov
popf
dec
out
add
sub
cltd
cli
stos
jmp
aam
out
stos
pop
ljmp
dec
in
jbe
sub
hlt
jge
mov
popl
push
leave
cmp
cmpsl
daa
andl
lahf
add
jo
xor
mov
in
subl
fcompl
hlt
lock
push
push
aas
lahf
cmp
out
faddp
lcall
jmp
mov
jg
xor
inc
fbstp
outsl
mov
mov
ja
addr16
jg
call
dec
push
cmp
sbb
inc
mov
add
imul
mov
imul
lcall
jg
pop
shrl
sbb
xor
aas
sbb
sahf
jle
push
or
addr16
jns
mov
add
les
or
xchg
mov
jne
and
les
shlb
cmc
lds
jae
adc
jge
es
dec
fisubrs
hlt
testl
loope
mov
mov
cltd
sub
fwait
jne
imul
jns
in
lds
addl
test
dec
js
dec
inc
sbb
jl
push
sub
jo
ret
jns
mov
out
mov
int3
and
repnz
push
jns
sub
js
aaa
rcll
sbb
imul
jle
xor
insl
or
mov
mov
push
pop
das
pushf
cmc
mov
pop
cmpsb
pop
cmp
call
imul
rolb
mov
sbb
in
sti
pop
js
sti
hlt
es
jecxz
test
jbe
push
in
inc
xchg
in
das
arpl
add
or
jge
test
cmpsl
mov
test
cmc
movsl
call
xor
add
mov
fisubrs
pop
out
cmp
inc
dec
cmp
xchg
shrl
in
cs
cmp
sahf
pop
dec
jnp
pop
push
sub
lock
fwait
loope
inc
rcr
in
in
add
clc
aas
fsub
sub
or
out
imul
scas
scas
fwait
push
in
xchg
lret
dec
mov
movsb
dec
fimuls
push
mov
imul
cmp
sbb
dec
push
xchg
int
pop
sub
outsl
xchg
mov
xchg
push
jecxz
jecxz
mov
xlat
adc
xor
lahf
fmull
mov
xchg
mov
loopne
pusha
in
cmp
in
add
mov
in
xchg
fidivs
xchg
out
xchg
loop
fstp
lds
add
cmp
sub
xchg
insb
mov
cmp
inc
push
aam
dec
xchg
adc
fs
mov
in
fwait
popf
sbb
scas
leave
mov
push
and
jp
or
inc
sbb
mov
shlb
loop
push
jae
paddb
jp
jnp
jmp
sub
fistpll
repnz
jecxz
lds
push
aad
hlt
mov
or
fs
xchg
cmp
fsts
mov
push
stos
push
les
popa
push
cmp
pop
push
pop
cwtl
dec
cld
sub
lret
pop
js
arpl
fildll
sub
aad
mov
jb
pop
fiadds
mov
fnstenv
shr
pushf
cltd
sub
fstpt
fldl
hlt
outsl
adc
lds
xor
pop
adc
lods
pop
or
mov
mov
ljmp
test
scas
push
aaa
ds
enter
pusha
js
fs
fwait
jbe
mov
lcall
nop
int
mov
sahf
loop
sarb
ret
lahf
das
sbb
int3
popa
xor
push
das
imul
xchg
mov
fsubrs
mov
aam
xchg
loop
insl
cmp
int
and
mov
popa
bound
fbld
into
aas
or
or
loope
int3
shll
pushf
lods
and
jne
inc
mov
insb
jbe
jg
sbb
cmp
jno
xlat
dec
les
neg
popa
mov
mov
faddp
ja
or
xlat
das
das
std
jnp
and
iret
fwait
sti
xchg
movsl
adc
in
pop
and
mov
enter
hlt
scas
mov
xor
negb
shll
in
popf
cmp
dec
or
cmp
fbld
dec
xchg
mov
inc
inc
popf
sub
push
xorb
xchg
xchg
icebp
hlt
pop
add
lods
jge
repnz
movsb
xor
and
push
add
fistps
xchg
out
jl
or
shrl
psubusw
jae
fwait
inc
add
jg
push
sub
dec
mov
cmp
cs
push
jo
test
mov
pop
xchg
lods
dec
and
push
dec
out
mov
and
mov
cmp
call
andl
and
cmc
insl
xchg
adc
int
pop
jle
out
dec
adc
inc
xchg
mov
xor
jnp
xor
mov
in
insb
repz
out
push
mov
fisttpl
out
je
call
push
sti
gs
scas
xchg
xchg
xchg
push
aam
pop
hlt
popa
xor
adc
mov
xor
shr
mov
movsl
pop
mov
add
push
les
cmp
dec
notl
pop
stc
adc
xor
enter
lret
repz
jmp
mov
xchg
jno
sub
decl
scas
cltd
or
inc
push
rol
dec
int
sub
enter
insb
jl
sub
add
sarl
inc
clc
add
daa
shlb
insl
adc
lods
fidivrs
jmp
cli
add
lret
ja
mov
xrelease
adc
arpl
aad
xor
jle
cmp
imul
ljmp
xchg
xchg
and
mov
sbb
pop
fsub
sbb
adc
rep
loopne
inc
mov
sbb
and
sarl
ret
mov
xorl
cmp
ja
push
sub
mov
nop
stos
mov
ret
xor
xchg
or
adc
sbb
ret
and
dec
cltd
cld
sahf
daa
and
mov
cltd
cmp
pop
pop
sahf
fnsave
sub
push
js
test
repz
jmp
cmpsb
iret
movsb
jo
stos
jno
fs
cli
push
stos
enter
sbb
mov
push
fwait
inc
loopne
in
call
je
push
cmp
jb
aad
jbe
pop
inc
out
cltd
xor
jne
jmp
jl
pop
push
jnp
fistpl
cli
fwait
adc
rorl
dec
adc
and
into
lods
aas
daa
fs
rclb
push
and
call
ret
lods
lahf
dec
xor
sub
sub
stos
in
push
cmp
loop
xor
aas
push
aad
xchg
mov
adc
sub
jl
and
ljmp
inc
add
out
pop
fstl
and
push
clc
in
push
mov
and
xor
jbe
scas
loopne
lods
std
outsb
pop
cvtdq2ps
scas
inc
lock
mov
xor
in
cmp
lahf
xor
xor
or
popa
mov
shll
xchg
call
xchg
mull
xor
adc
jg
xchg
xor
scas
arpl
cs
cmp
scas
jg
out
mov
jp
call
push
mov
sbb
xchg
ficoml
jns
adc
mov
add
sub
xor
mov
adc
into
cmp
in
out
sahf
int
adc
lret
pop
jne
inc
adc
leave
push
lcall
pop
ret
and
push
es
xchg
jbe
loope
adc
fsub
pop
bswap
cmp
mov
adc
push
mov
int3
sahf
sub
sbb
jnp
cmp
cmp
fistpll
or
mov
dec
xchg
add
jb
fsubl
testb
movsl
incl
and
lret
inc
aas
mov
lret
xor
sub
jmp
cmp
cltd
fsubs
push
sub
push
cmp
imul
push
pop
mov
lret
sar
xchg
data16
out
cltd
aas
test
insl
es
scas
xor
cmp
xor
push
jge
js
int
mov
pop
and
ss
stos
jp
lahf
testb
in
pop
jno
jns
xchg
dec
std
movsl
cmp
push
xor
inc
mov
inc
dec
mov
mov
xchg
mov
imul
out
cmp
inc
rorb
loopne
inc
sub
mov
inc
lods
sub
pop
adc
add
pushl
cltd
loop
mov
subl
cmp
jp
dec
ret
sub
mov
test
lods
lods
in
icebp
sbb
pushf
call
pop
mov
in
mov
sub
pop
aad
jge
popa
cld
jnp
inc
lcall
clc
mov
sarb
ficoms
inc
arpl
test
pop
fldenv
xor
jp
or
push
mov
mov
mov
dec
pusha
imul
adc
pop
int3
jl
xor
ss
adc
or
out
cwtl
xchg
clc
lret
scas
and
popl
lea
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
ss
sub
bound
mov
push
addr16
outsb
ret
bound
int
sub
in
es
jge
mov
stos
call
movsl
or
and
jae
outsb
hlt
leave
cmp
js
inc
sub
add
inc
sub
sub
dec
push
movsl
rcr
pop
aam
nop
pop
je
out
pop
aad
pop
pop
lock
unpckhps
nop
in
dec
sub
test
push
dec
push
jecxz
pop
loope
dec
icebp
sub
dec
xchg
dec
cmpsb
arpl
rorl
mov
push
iret
mov
mov
sub
scas
mov
jp
push
movsl
aad
cmp
dec
out
inc
mov
cmp
ficoms
popa
pop
shrb
add
repnz
fwait
or
adc
xchg
movsb
outsb
xor
pop
mov
int3
sub
push
sarl
ljmp
lcall
imul
adc
mov
stos
je
and
xchg
popf
lret
lahf
scas
stc
je
repnz
xor
daa
addr16
pop
push
loope
imul
insl
fwait
dec
xchg
ret
xorl
lret
pop
push
in
out
push
dec
mov
push
ud0
lods
push
imul
or
lahf
pop
jns
cmpsl
and
or
xor
in
dec
dec
int
scas
mov
xchg
add
movsb
xchg
mov
lock
xchg
mov
mov
scas
je
test
popa
sti
mov
jecxz
es
xlat
jb
xor
pop
push
xchg
rcrb
mov
mov
ds
push
add
lret
repnz
mov
xor
add
mov
fidivrl
adcl
pop
inc
popf
scas
daa
aas
pop
stc
sti
sub
push
in
addl
clc
inc
adc
dec
push
mov
into
xchg
jmp
xlat
or
aad
mov
mov
test
jle
or
pushf
dec
into
pusha
or
subb
cs
mov
inc
adc
pop
push
mov
popa
sar
cs
mov
dec
addl
pusha
inc
roll
test
and
stc
sbb
das
jmp
dec
push
ffree
in
adc
imul
or
sbb
add
inc
sbb
scas
daa
mov
test
sub
push
mov
jp
in
cmpsl
xchg
add
test
loop
push
xor
fmul
aaa
andb
inc
stos
jmp
mulb
outsl
cli
mov
jne
cmp
cmpsb
testb
ja
adc
sub
mov
push
mov
sbb
inc
add
add
rorb
push
mov
int
add
lods
ljmp
sbb
into
pusha
mov
adc
pop
jecxz
and
outsl
mov
push
push
in
in
je
or
or
iret
dec
cld
inc
stos
inc
dec
sarl
dec
xchg
in
and
pop
push
icebp
sbb
push
imul
cld
outsl
dec
inc
aaa
xchg
jne
dec
outsl
sub
jmp
dec
xchg
das
jns
rcrb
in
out
outsl
and
push
movsl
sbb
inc
xchg
mov
orb
jg
xchg
and
pop
test
cwtl
mov
inc
dec
setp
add
in
std
jle
in
cmp
mov
pop
mov
xchg
testl
popf
dec
add
dec
cmpb
pusha
ss
in
icebp
jnp
cmp
call
daa
mov
push
dec
xchg
sbb
jmp
imul
lods
arpl
imul
test
js
mov
push
push
xor
insl
dec
mov
vpsraw
or
sbb
incb
stos
daa
xchg
cmp
push
pop
push
jmp
or
insb
cmp
clc
movl
je
jns
icebp
dec
jne
popa
push
pop
test
fwait
dec
cmp
in
sbb
pop
jmp
jg
test
sub
cld
test
cli
push
adc
aad
mov
das
movsl
sbb
shlb
mov
mov
adc
jno
xor
ja
cmpsb
jecxz
xlat
ja
test
loopne
sahf
pop
pop
cmp
push
or
sbb
mov
pop
pop
clc
cmc
addl
sub
or
lcall
adc
fldl
fwait
outsl
jmp
mov
adc
jp
lret
push
sbb
push
add
addb
jl
cmp
lds
add
mov
xchg
mov
ss
adc
ljmp
push
aam
cmp
mov
sbb
js
jnp
sub
cmp
mov
outsb
or
rorb
cmp
andl
popf
sbb
xor
xchg
mov
leave
xor
addr16
imul
enter
testb
jecxz
jo
lock
push
lcall
pop
out
push
repnz
mov
mulb
ss
sbb
bound
xor
xor
stos
stc
negl
je
inc
push
fs
movsl
lret
outsb
mov
addb
cld
sbb
sbb
lock
xchg
icebp
sub
add
mov
xor
pop
sub
lcall
jecxz
mov
aam
jmp
std
mov
push
mulb
xchg
inc
push
and
cmp
or
mov
outsl
clts
push
or
xchg
jnp
sbb
pop
jb
ljmp
dec
cli
fdiv
aam
inc
push
xorl
inc
data16
xchg
sbb
pop
mulb
cmp
lods
mov
jne
int3
mov
pop
ret
mov
mov
in
push
mov
inc
ds
adc
rcrl
out
xchg
push
aas
roll
loop
std
inc
jmp
and
out
cmp
cmp
xor
sahf
sbb
fnstcw
mov
in
push
out
dec
hlt
or
xor
cld
mov
jno
jg
sub
push
test
sbb
std
mov
std
cmp
stos
pusha
out
push
xchg
sub
or
mov
test
popf
out
sbb
shll
fadd
ds
sbb
jbe
lret
jnp
jno
daa
xlat
or
jmp
icebp
cmp
in
adc
and
jns
int
mov
adc
xchg
cwtl
xlat
jecxz
mov
mov
dec
andb
loopne
std
inc
fldt
jbe
ja
inc
sbb
orb
mov
adc
adc
mov
push
sub
cltd
decb
fdiv
add
xor
xchg
idiv
or
push
fcoml
xchg
inc
mov
adc
adc
out
jns
ds
jne
enter
scas
cmp
decl
test
mov
icebp
cmpb
sahf
jle
icebp
insl
insl
lret
pop
dec
cld
dec
push
stos
mov
jmp
int
stc
jge
notb
mov
test
pop
xchg
mov
das
xchg
popf
dec
pop
out
push
sub
pop
in
rcrb
rcll
cmp
loope
stos
push
mov
sub
lret
loope
fnstsw
push
sbb
fisubrs
mov
xor
cmpb
xor
cmp
leave
pop
lds
push
mov
jno
clc
xchg
add
lock
pushf
mov
lods
dec
xchg
mov
hlt
lret
addr16
mov
shrl
push
hlt
dec
pushf
adc
rol
pop
add
mov
inc
fidivs
mov
cmp
add
shrb
test
rcll
xchg
xchg
scas
js
xchg
xorb
sub
xlat
ds
xor
jno
pop
and
icebp
inc
lcall
test
loop
flds
popa
mov
fmuls
dec
cltd
dec
sahf
xchg
das
fildl
gs
jl
xchg
popa
xor
dec
outsb
pop
xor
jecxz
jg
pop
xchg
xor
and
mov
lret
pusha
ret
mov
lret
pop
cmpb
enter
xor
out
pop
inc
fisttpll
add
adc
fistps
loopne
gs
andl
push
lds
mov
ret
lret
cmp
lods
adc
dec
mov
mov
out
pop
push
mov
pop
xchg
xor
xchg
loopne
mov
lahf
dec
imul
pusha
jae
jecxz
sbb
mov
ds
mov
daa
std
nop
in
ret
jne
cmpsl
xchg
nop
xor
mov
imul
imul
sub
int3
ss
sbb
movsb
cmp
mov
mov
push
test
into
andb
xor
icebp
mov
mov
movsb
mov
jbe
cmp
lods
inc
lcall
shll
int
add
and
push
cmp
andb
nop
push
xchg
repz
loopne
out
inc
mov
and
ss
sti
adc
mov
jl
in
and
push
inc
test
mov
jmp
movsb
into
js
sbb
jp
out
pop
in
add
sub
fcom
jbe
sub
outsl
mov
out
icebp
pmulhuw
out
fs
call
dec
fwait
shrl
jns
gs
or
pop
push
stos
iret
lods
stos
sbb
or
adc
xor
ljmp
test
fs
adc
arpl
dec
pop
adc
mov
and
adc
jmp
or
divl
into
inc
dec
jmp
jns
mov
mov
push
cmc
pop
push
xor
and
sbb
jns
cld
xchg
lock
push
cmp
and
cmpsb
bound
lods
loop
xlat
aam
mov
jbe
or
movsl
pop
dec
xchg
push
mov
jecxz
and
pop
xor
or
sbb
addr16
fidivrs
inc
sbb
frstor
inc
cmp
jmp
les
jnp
fmuls
bnd
ja
xor
aam
hlt
jle
adc
and
mov
jbe
lret
outsb
into
inc
out
cmp
xchg
lods
mov
test
scas
inc
das
popa
fdivrl
mov
sub
xchg
into
lret
sbb
xchg
adcl
mov
push
cld
jecxz
ljmp
push
in
in
xchg
es
sub
mov
push
dec
jmp
stc
ds
jne
sbb
aad
mov
scas
ffreep
xor
sarl
ss
dec
lcall
xchg
ljmp
cmp
add
mov
pop
pop
and
repnz
and
pop
push
mov
jb
push
sti
cltd
insl
mov
stos
insb
mov
fwait
cmp
test
or
in
adc
ds
orb
fdivrl
sbb
inc
jne
idivb
add
ljmp
sub
jb
sbb
lock
ss
adc
mov
sti
hlt
or
ljmp
push
cltd
inc
cwtl
or
clc
pusha
xlat
daa
adc
sbb
push
subb
mov
cld
lods
idivl
xor
jnp
enter
sbb
push
xor
ljmp
sub
das
negb
push
and
lock
sub
cmp
adc
daa
mov
push
sahf
ds
or
jecxz
addl
xlat
mov
push
sub
imul
jae
mov
pusha
rcrb
cli
push
das
psraw
adc
pop
lods
movsl
cmp
and
nop
cmp
xor
divb
and
sarl
js
pusha
adc
dec
shl
push
and
cmp
mov
test
addl
mov
inc
mov
scas
and
and
add
xor
cmp
push
movsb
inc
xorb
out
add
loope
add
cmpsb
pop
pop
out
or
mov
mov
cmp
inc
mov
int3
or
icebp
mov
xchg
pop
cwtl
mov
jg
cmp
push
push
rclb
loopne
pop
rcl
loope
or
and
and
cmpsl
movsl
add
xlat
push
cmp
call
call
inc
sub
ret
push
ss
out
dec
push
shrb
aam
ret
mov
pusha
test
cmp
jns
int
mov
jbe
mov
push
mov
sub
leave
out
mov
imul
adc
xor
out
int3
lret
aad
clc
inc
hlt
iret
shll
sbb
js
andb
int3
notl
lret
movsl
sti
fbstp
cld
jnp
push
jne
rclw
or
lock
fisubrl
cld
stos
inc
call
loope
arpl
pop
push
subb
mov
and
arpl
dec
sbb
into
mov
rcrl
and
leave
nop
adc
jbe
or
pop
dec
fs
mov
sub
adc
add
sub
in
sbb
mov
xchg
add
clc
inc
test
cltd
xchg
push
mov
das
push
fistpl
cmp
mov
iret
sarl
repnz
call
fcmovnb
stos
in
fisubrs
stc
or
pop
adc
pushf
lcall
fwait
aad
movsb
dec
inc
mov
outsl
lods
sub
mov
mov
or
mov
xchg
adc
cmpsb
pusha
lahf
xor
enter
sahf
idivb
scas
mov
sarl
jg
jne
mov
lret
pop
aaa
shll
test
testl
ret
pop
sub
ficoms
xor
jecxz
jl
adc
lds
jmp
jle
xchg
les
jmp
pop
popf
imul
xor
sbb
dec
add
test
push
pop
push
pushf
test
and
outsb
push
mov
mov
xor
cli
scas
sbb
mov
jns
push
sub
xchg
cltd
cmp
jecxz
nop
out
std
rcrl
inc
popa
or
ja
cmp
mov
ficoms
test
icebp
xchg
lret
call
mov
in
rcrl
lock
dec
pop
lcall
sub
in
fcmovb
fucomp
dec
pop
ret
cld
scas
or
in
gs
and
sub
mov
lea
aam
stc
sarb
inc
in
icebp
int
in
fwait
push
aad
mov
and
loop
dec
inc
inc
push
lcall
negb
pop
shlb
mov
lret
mov
shlb
sbb
xor
push
stos
inc
push
inc
mov
outsl
sbb
mov
mov
pop
dec
es
in
cltd
leave
in
orl
jns
cli
ss
mov
mov
sub
xchg
mov
mov
mov
xchg
add
cmp
scas
pop
in
rcrb
lret
iret
mov
mov
mov
and
jns
xchg
rcrb
jecxz
cld
adc
xchg
out
mov
sarl
xchg
push
cmpsl
cld
cmp
dec
mov
cmp
out
add
imul
jg
int
xor
jg
jbe
pop
inc
test
lret
mov
sub
divb
cld
mov
dec
cmp
add
fsubs
inc
rorb
adc
stos
sbb
add
into
repz
pop
xchg
int3
gs
xor
dec
call
and
insb
not
sbb
sub
pop
xchg
mov
xchg
push
and
iret
sbb
sarb
and
andl
lcall
ss
push
mov
ret
adc
cmp
test
stos
rcrb
dec
lods
je
xor
scas
sti
push
jae
push
xchg
and
add
mov
ss
ret
mov
fbld
ja
enter
dec
fdivrs
sbb
frstor
dec
pop
lea
cli
xchg
cs
dec
mov
push
inc
push
test
cmpsl
sub
scas
das
or
jno
inc
sbb
inc
xchg
xchg
inc
xlat
mov
sub
jle
pop
fisttpl
push
mov
sbbl
push
jge
dec
mov
mov
out
adc
out
data16
sbb
jecxz
inc
and
jge
dec
imul
or
inc
addb
jg
fld
pop
xlat
cwtl
int3
mov
push
dec
add
inc
jns
inc
adc
jge
add
addr16
pop
xchg
push
and
sbb
mov
jecxz
dec
jae
int
mov
je
adc
push
jo
adc
add
lods
xor
rcrl
stos
aas
dec
outsl
cmpsl
sti
out
cmp
mov
addr16
call
sbb
dec
mov
cmp
mov
loope
movsl
and
jb
scas
ret
fsts
bound
ja
jmp
xor
insl
mov
out
sbb
sti
sbb
ds
lods
lret
xor
std
stos
lret
js
icebp
jp
cmp
out
out
out
fldt
jns
pop
das
dec
adc
stos
xchg
sbbl
loop
dec
loope
ja
add
push
xorl
lods
xor
rorl
dec
test
in
pop
xchg
jge
mov
pop
push
ret
jge
dec
cltd
shrl
mov
xchg
hlt
cmp
fdivrs
xor
mov
cmc
push
or
adc
and
orl
popf
shl
fistpl
mov
lods
sbbl
adc
enter
push
insl
cmp
mov
sbb
mov
lock
aam
jno
mov
jns
repz
mov
sarb
in
ljmp
and
rorb
push
filds
dec
jmp
push
sbbb
mov
insl
push
insl
mov
in
mov
insb
inc
subl
pop
outsb
sahf
test
and
mov
aaa
push
and
push
pusha
pop
dec
mov
test
out
jl
mov
and
ljmp
push
inc
shll
ret
sbb
cmpsl
and
insl
sbb
repz
and
data16
cmp
repnz
gs
push
sbb
adc
popa
fsts
mov
jno
jne
xchg
int3
pop
sbb
sahf
inc
out
aad
pop
int
lock
addr16
xchg
pop
popf
jno
mov
scas
xchg
out
es
test
jns
imul
inc
inc
filds
mov
or
dec
arpl
ret
push
clc
lcall
bound
fisubs
int3
xchg
cli
push
inc
adc
mov
inc
in
popa
mov
jle
dec
out
incb
lret
insl
adc
xlat
sbb
aad
adc
sbb
inc
cmp
and
push
jnp
and
jp
in
xlat
or
pop
fcoms
mov
xor
sbb
lcall
fdivl
mov
dec
sbb
cwtl
fwait
adc
gs
xor
pop
xor
cwtl
jae
clc
cmpsl
frstor
mov
pop
repz
sub
hlt
in
and
cmp
ja
outsb
xchg
repnz
pop
fdivrp
sub
repz
je
push
popf
sub
dec
or
dec
or
les
push
pop
jns
in
push
int
push
push
mov
inc
divb
cmp
xchg
and
hlt
int
sti
mov
cmp
lret
test
inc
fwait
cmp
cld
mov
clc
or
fisttpll
or
mov
and
jne
std
jg
lret
sub
inc
dec
frstor
sub
out
xchg
pop
loop
sti
movsb
mov
pop
sbb
and
subb
push
xor
std
pushf
xchg
popa
pushf
inc
repnz
or
fmull
or
mov
jg
jb
add
pop
cmp
jecxz
push
int
dec
testl
mov
out
lds
stos
push
mov
push
inc
out
mov
xchg
mov
fldl
test
pop
mov
popf
add
iret
test
arpl
out
lcall
inc
add
insb
mov
inc
cmc
popf
pop
mov
inc
nop
lods
test
testb
push
add
shl
hlt
lcall
sar
mov
mov
rcrl
aaa
inc
xor
xchg
frstor
mov
jae
jbe
add
sub
jg
bound
mov
pop
dec
adc
stos
and
or
int3
hlt
pop
inc
cs
movsl
mov
adc
lret
adc
xchg
iret
in
mov
xchg
dec
xchg
insb
and
cltd
repz
xor
adc
adc
in
pop
mov
testb
popa
adc
add
repz
scas
icebp
jecxz
xchg
jo
sbb
add
loope
pop
sahf
adc
mov
repz
stc
imul
fcmove
inc
jae
jmp
fcomps
dec
mov
loop
mov
insl
push
sub
std
and
bound
nop
jae
mov
adc
push
mov
mov
das
sub
xchg
in
lods
dec
test
mov
jecxz
or
cltd
cmc
mov
push
sbb
ljmp
add
push
cmp
pop
fwait
jno
jecxz
xchg
scas
lret
imul
aaa
add
or
jne
sbb
push
popa
jo
xchg
scas
xchg
outsb
movsl
xor
sbb
pop
sahf
jg
fs
inc
pop
scas
jae
fstpl
jb
push
sti
not
cmpsl
test
mov
test
push
jge
mov
sbb
insl
xchg
dec
cwtl
jno
xchg
push
cs
xor
in
add
lret
shlb
pop
pop
in
leave
icebp
in
leave
dec
stos
test
stos
leave
inc
cltd
xchg
jmp
outsl
enter
js
test
test
testb
and
subl
ljmp
mov
lods
lahf
cmp
ret
fistps
sub
addl
adc
inc
out
or
push
idiv
push
and
out
cmp
sub
mov
adc
sti
seta
fisttpll
adc
jne
mov
mov
dec
scas
fsubl
mov
loopne
and
mov
mov
pop
xor
inc
sub
fstpl
push
jae
or
lahf
inc
push
or
pop
jecxz
adc
or
loopne
sub
xchg
pushf
xchg
mov
popa
call
push
andb
mov
or
int3
mov
mov
jne
leave
add
fsubp
loopne
push
std
js
cmp
inc
arpl
aam
cmp
les
add
in
xor
inc
insl
dec
or
mov
xchg
repz
lds
int
sbb
dec
mov
mov
inc
dec
and
icebp
jne
aad
lcall
pop
jmp
popa
jb
inc
jge
jb
movsb
and
call
and
xchg
mov
push
leave
fldl
pop
insb
add
add
pusha
cs
mov
inc
mov
pop
pop
adc
push
and
mov
cmp
repnz
sbb
jmp
and
and
xchg
ljmp
loop
jno
hlt
dec
arpl
out
adc
mov
mov
xor
aaa
mov
push
push
adc
cltd
push
insl
push
pop
lods
loop
into
mov
push
ss
lods
mov
mov
dec
aam
mov
adc
cmp
test
cmpsb
inc
testb
btc
cli
outsb
jmp
mov
jmp
pop
ss
dec
ljmp
pop
xchg
pop
push
lods
fisubl
xor
cld
jl
xchg
repz
xchg
ficoms
jl
mov
sub
mov
iret
and
loope
xlat
push
pop
xchg
or
es
push
sub
mov
rorb
pop
adc
pushf
out
and
sbb
lret
dec
sahf
mov
rorb
mov
cmp
out
aas
shl
mov
pushl
mov
ss
in
mov
js
loope
rclb
jne
ret
push
ret
inc
mov
adc
adc
aam
test
pop
hlt
mov
push
and
sahf
or
xchg
ljmp
push
cmp
mov
add
insl
aaa
or
sarl
dec
bound
ds
jns
mov
lea
add
inc
roll
jo
popf
inc
push
or
jl
xchg
aas
lahf
dec
add
cltd
cmpsl
mov
pop
lea
jnp
test
sarb
lock
jno
inc
xor
mov
pop
shrl
nop
push
jle
cmp
std
xor
cmp
mov
cli
rol
xchg
and
pop
or
sub
cmpsb
fsin
mov
faddl
mov
cmp
push
mov
and
push
add
mov
outsl
es
xchg
mov
leave
add
cmpsb
push
adcl
mov
and
loopne
pop
mov
pop
fmulp
inc
push
xor
sub
movsl
aad
mov
and
mov
and
inc
out
add
mov
gs
aaa
outsb
pop
out
mov
mov
cs
bound
xchg
sbb
push
dec
ret
cmc
fists
pop
mov
ret
cmp
lcall
std
in
add
lods
ljmp
outsl
in
sbb
test
js
xorl
adc
lret
dec
ds
lods
xchg
test
push
ss
sub
dec
jno
loopne
outsb
in
mov
adc
in
or
mov
mov
inc
fmuls
ljmp
jb
dec
hlt
dec
addb
inc
out
or
inc
pop
jle
hlt
or
cli
push
sbb
xor
movsb
cmp
movsl
gs
sbb
xchg
mov
popa
movsb
jg
push
sbb
add
lret
mov
push
aas
push
fnsave
add
loopne
aam
add
mov
fs
ret
ret
or
loope
jmp
loope
xchg
jno
flds
daa
cwtl
leave
aam
stos
push
adc
lret
inc
inc
sub
pop
adc
movsb
cmc
loope
leave
push
aas
test
mov
pop
clc
mull
mov
mov
int3
cmp
stos
std
and
sbb
cwtl
mov
movsl
movsl
es
and
adc
add
std
insb
inc
outsl
mov
or
push
shl
mov
test
push
sbbl
les
cltd
pop
xor
sti
mov
gs
dec
icebp
inc
adc
shl
pop
mov
shll
imul
mov
out
cmp
jbe
mov
adc
and
mov
gs
inc
cmc
andb
sbb
lock
lret
mov
call
call
inc
movsl
jg
inc
cmpsb
popa
popa
movsl
xchg
cmp
xor
icebp
insb
mov
mov
mov
ljmp
jecxz
lcall
je
or
fdivl
sub
cmp
ret
pop
xchg
mov
inc
call
inc
push
pop
out
add
cltd
fcoml
pop
and
add
cmp
jg
lods
and
shlb
push
jmp
xor
popl
jbe
sub
push
mov
inc
xchg
lds
mov
adc
push
es
add
inc
sbb
inc
cmpsb
pushf
movq
js
mov
pop
jae
daa
cwtl
in
push
je
xchg
sub
adc
les
mov
sub
inc
add
sub
rclb
fwait
sarb
std
xor
mov
in
stos
inc
mov
addr16
sti
aaa
sbb
pop
leave
lods
rcrl
jmp
push
lods
xchg
mov
xchg
sub
insb
cmpsl
cs
js
push
scas
mov
cltd
push
cmpl
aad
clc
in
hlt
das
jb
add
dec
xor
push
xor
cmp
mov
xor
movsl
call
sahf
add
test
dec
test
insl
cmpsl
adc
stos
or
data16
call
ret
mov
jp
push
xor
pop
imul
imul
inc
lahf
pop
pop
pop
adc
jg
sar
aam
sbb
sub
rcrb
add
push
mov
mov
mov
repnz
jbe
sub
into
push
cmp
cmp
push
mov
mov
test
xchg
movsb
xchg
dec
mov
cld
dec
jb
jp
xchg
add
mov
mov
movsb
enter
andl
les
and
add
clc
xor
and
bound
das
or
sub
jne
dec
pop
jmp
rorl
xchg
push
pusha
jge
dec
sub
add
jo
push
call
mov
aas
je
mov
roll
aad
sub
push
xchg
mov
push
aam
testb
dec
jge
xorb
and
add
scas
mov
xor
sub
int3
sub
push
hlt
cmp
push
fisubl
aad
imul
dec
and
mov
cmp
popf
lcall
add
inc
mov
xchg
mov
jecxz
dec
sbb
jle
mov
roll
sbb
shr
sub
stc
mov
rcrl
jb
pop
xchg
push
jae
mov
lds
mov
push
clc
inc
jno
xchg
ror
jo
lea
xchg
movhps
mov
xchg
add
sub
das
pop
loopne
push
dec
sbb
pop
mov
sub
jae
add
and
nop
push
mov
inc
lcall
popa
js
shrb
jno
jns
and
cmp
sbb
mov
scas
jmp
or
mov
inc
mov
mov
sub
jb
cmp
pop
int
mov
repz
addl
push
das
jl
test
cltd
or
xlat
sahf
push
xchg
lea
cmp
sbb
push
pop
push
daa
jb
push
cmp
cmpsl
cld
stos
test
cmc
mov
cltd
push
xchg
adc
jp
jle
lods
mov
sar
sbb
js
call
push
fwait
pop
daa
and
push
mov
popa
jbe
mov
lds
pop
rcll
mov
xor
filds
popl
push
cmp
mov
gs
bound
and
in
add
xor
push
jg
jnp
inc
xchg
imul
movsl
dec
pop
and
push
out
jmp
mov
cli
dec
dec
sbb
hlt
aad
fcmovnb
pop
push
push
pop
mov
xlat
mov
sub
mov
iret
xlat
push
in
lods
ss
mov
fnstcw
cmp
lds
aam
adc
cmp
daa
or
xchg
ficomps
pop
jns
les
fcoms
push
jb
mov
out
daa
cld
jle
movsb
faddl
mov
push
rorb
jae
xchg
rcll
lret
add
jns
test
or
mov
iret
nop
fildll
inc
mov
jbe
jno
sbb
incl
sarb
jne
shrd
repnz
repnz
sub
outsl
xchg
jge
js
sbb
jne
dec
xchg
inc
jecxz
je
and
into
jne
xchg
insl
push
add
jb
add
mov
or
add
decl
jmp
int
ret
push
int3
add
test
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
sub
cmp
pop
bound
ret
mov
mov
in
adc
shrb
shll
cmp
aad
xlat
lods
or
mov
pop
dec
xor
xchg
int3
pop
jmp
in
mov
mov
sbb
sbb
je
pop
fisttpll
sub
in
add
aas
inc
lds
popf
mov
xchg
adc
fildll
int
jmp
and
mov
pop
inc
lods
push
dec
stos
das
clc
mov
movsb
lcall
test
mov
push
add
mov
subb
jno
jmp
jne
or
adc
sbb
cmp
mov
and
lret
in
pop
out
bound
ljmp
pop
xor
subb
sbb
sub
ret
cwtl
xchg
das
mov
sar
stos
push
push
lock
roll
mov
cltd
xchg
add
loop
fcom
push
movq
mov
enter
jl
xchg
lods
add
clc
jno
dec
add
inc
mov
sbb
addr16
inc
or
jne
stos
outsb
push
cmc
dec
pop
xchg
filds
cli
lods
mov
push
dec
adc
pop
jge
add
xorl
loopne
dec
outsl
dec
orl
push
adc
fcompl
lods
jns
mov
pop
dec
ret
xchg
mov
pusha
sub
mov
sti
sbb
or
jl
and
fdivrs
es
push
lcall
aaa
xchg
jnp
adc
cltd
sbb
dec
insl
fiadds
lret
dec
data16
pushf
dec
into
mov
movl
andl
push
mov
pop
sbb
and
sahf
xchg
outsb
aam
or
push
inc
xchg
mov
sbb
mov
pop
imul
xor
leave
in
pop
loopne
mov
lahf
mov
fcomps
test
lds
clc
ret
cmpb
imul
or
cmc
loopne
iret
push
movsb
pusha
pop
or
sti
xor
adc
sahf
leave
dec
outsl
cmp
mov
stos
das
fstl
dec
sub
mov
xchg
xchg
mov
sahf
test
inc
mov
fwait
test
and
call
xor
xlat
sub
inc
mov
stos
inc
pop
xor
outsb
repnz
adc
std
sti
mov
jle
jl
dec
mov
ljmp
mov
push
xor
cmp
in
cmp
inc
sub
mov
pop
stos
fwait
mov
lahf
mov
and
and
mov
ja
sbb
mov
arpl
mov
push
testl
cmc
loopne
mov
test
jmp
clc
push
cli
loop
mov
jno
lret
nop
mov
pushf
stos
dec
cmp
mov
pop
mov
xchg
aas
jae
cltd
xor
mov
sar
es
and
push
iret
xchg
push
jmp
sti
push
jnp
push
inc
rorb
mov
mov
push
xor
cmp
std
hlt
push
jp
outsl
fdivl
aas
mov
je
test
fildll
ret
pop
ss
jmp
daa
lahf
pop
xor
add
dec
sub
cmc
cpuid
jg
hlt
or
xor
xchg
xchg
das
pop
ret
xchg
shrb
jg
call
xorl
sahf
insl
test
gs
dec
movb
xchg
adcl
jae
push
icebp
sarb
mov
ds
stos
lods
cwtl
leave
inc
movsl
int3
ss
xchg
sbb
sbb
pop
fldl
pop
mov
fisubrs
mov
mov
cs
es
mov
dec
mov
outsb
xor
out
mov
outsb
std
add
into
cld
mov
adc
mov
mov
std
mov
hlt
clc
lcall
rcr
mov
inc
test
add
lahf
stc
or
clc
pop
out
mov
push
pusha
push
ja
clc
xor
mov
cmp
outsb
enter
call
pop
mov
push
pop
inc
lds
sbb
mov
mov
shl
lea
cmpsl
mulps
in
inc
aam
lods
call
jbe
das
sub
out
sarl
push
popa
mov
add
mov
arpl
mov
jle
pop
fimull
je
test
imul
dec
push
stc
daa
mov
bound
dec
iret
sahf
push
pop
add
pusha
adc
out
and
mov
in
dec
inc
xchg
lods
xchg
add
aaa
mov
xchg
xor
cwtl
ds
cmpsb
mov
pop
test
xchg
xorl
shl
add
out
lret
jl
mov
xor
and
adc
call
enter
sbb
pop
push
sbb
enter
aam
cmp
cmp
push
lock
push
or
in
pop
mov
pop
or
mov
clc
fcmovnu
ja
inc
and
cwtl
and
mov
xchg
add
and
push
rcl
mov
xor
mov
cmpl
mov
mov
push
jno
dec
or
fists
call
add
cwtl
lods
hlt
push
bound
lahf
out
subb
cmpsl
xchg
dec
daa
sarl
ds
iret
push
int3
sbb
mov
xlat
and
mov
mov
leave
pushf
adc
lea
xor
mov
add
cwtl
repz
into
push
adc
xchg
jle
mov
adc
xor
imul
inc
jae
fimuls
push
testl
insl
adc
inc
shlb
aad
sbb
lret
ds
mov
cmpl
lret
sar
mov
mov
cmp
and
nop
cli
inc
enter
fldt
fisttps
inc
stc
sbb
imul
pop
mov
stc
int
popf
mov
cmpsb
mov
in
mov
ss
or
or
inc
pop
add
insb
lods
mov
cld
ja
out
aad
fbstp
cwtl
sbb
jle
loope
stos
jge
test
mov
mov
cmp
jg
mov
pop
add
out
dec
dec
pop
das
stos
mov
fnstcw
cmp
sbb
jg
test
sarb
cmp
gs
mulb
jecxz
pusha
mov
aas
stos
loopne
scas
lds
xchg
sbb
push
dec
jecxz
mov
fnstcw
push
stc
fcmovne
and
lds
xchg
popa
hlt
sbb
je
out
jmp
add
sbb
imul
filds
sbb
pushf
aas
or
inc
loop
mov
push
xor
mov
std
mov
jb
and
or
xor
cli
fisttpl
xchg
add
aam
scas
insb
xor
in
shl
mov
xchg
fstps
inc
shrb
in
push
xchg
jecxz
jae
ficomps
loop
lret
xchg
or
or
out
mov
sbb
push
dec
ljmp
stos
dec
ss
ss
es
push
jmp
out
mov
or
and
clc
daa
push
mov
cmp
jl
sub
pop
jns
out
add
hlt
xor
lods
jo
mov
cmp
mov
cwtl
movsl
test
mov
pop
stc
dec
ljmp
ja
repz
insb
mov
addps
addr16
or
insb
rcrl
fwait
icebp
cmp
pop
cmpsl
imul
push
inc
cli
jnp
inc
pushf
imul
push
sub
test
adc
bound
adc
adc
test
push
or
std
mov
int
jbe
scas
dec
and
enter
xlat
and
outsl
sti
add
rorb
inc
mov
inc
shll
orb
cmp
daa
push
jmp
out
add
mov
mov
fistpl
in
fimuls
and
sub
das
sub
jmp
shll
push
hlt
or
dec
les
jae
in
test
xor
mov
xchg
and
inc
test
dec
test
mov
mov
test
cmp
cmc
cmpxchg
mov
jno
lock
leave
ss
repnz
inc
loope
and
jb
mov
fnsave
es
mov
out
mov
arpl
dec
lea
xchg
and
cwtl
aam
add
and
clc
and
push
mov
mov
adc
jle
jp
or
dec
xorb
mov
inc
push
xchg
mov
cld
arpl
inc
in
aas
sbb
add
jnp
loope
dec
popf
mov
loope
mov
ret
inc
jl
inc
or
in
adc
mov
scas
cld
dec
xchg
das
inc
mov
push
sbb
mov
fnstsw
subb
add
or
mov
dec
pop
dec
imul
pop
data16
pop
decb
jnp
or
and
push
loope
push
aas
xor
sub
mov
and
cmpsl
adc
jo
lock
xor
sar
fildll
cmpsl
test
and
pop
add
sti
mov
pop
lds
jp
xchg
xchg
dec
in
mov
popa
inc
mov
ds
xchg
and
sarl
outsl
flds
mov
push
out
xchg
std
das
sub
xchg
mov
es
lret
jnp
pop
stc
cmpsl
outsb
outsl
movsl
notb
aad
cmc
xchg
push
xor
lcall
push
mov
xchg
mov
mov
pop
pushl
and
aas
dec
dec
loop
dec
xor
fwait
outsl
popa
mov
jge
sbb
ret
inc
repz
hlt
repnz
es
or
outsb
lock
leave
lahf
mov
jns
add
or
andl
sbb
test
enter
sti
das
hlt
pop
popa
and
pop
ljmp
stos
push
mov
and
pop
cmpsb
pop
adcl
add
out
std
xor
es
mov
add
addr16
inc
or
int
mov
lds
jge
mov
scas
xchg
xchg
push
negl
xlat
jnp
sub
andl
repz
or
lea
sbb
out
test
and
and
or
and
pop
aas
into
push
int
pop
inc
ljmp
stc
ja
into
xor
mov
ja
mov
pop
fidivrl
mov
jmp
bound
inc
jge
mov
fstl
fistpl
into
int3
push
sbb
sarl
pop
xor
ret
lods
lahf
fbstp
sbb
pop
cmp
into
add
ret
rcl
dec
mov
jno
lods
call
push
mov
gs
sbb
jge
adc
insb
mov
shlb
sarl
xor
mov
mov
pop
jge
sbb
sarl
movsl
inc
mov
pop
mov
jns
lretw
gs
cmpsb
lods
dec
lds
sub
or
sub
mov
pushf
and
repz
inc
push
pop
fisubrl
fisubl
pop
cwtl
aas
dec
pop
mov
or
xchg
jg
loope
outsl
rcrb
or
inc
out
pop
or
xor
cmp
popa
test
inc
ss
ljmp
push
sbb
add
lock
out
enter
xor
insl
lret
ja
or
jecxz
mov
add
fs
addl
mov
cwtl
push
arpl
dec
lock
imul
lods
dec
lahf
icebp
xor
and
inc
xchg
or
lahf
mov
lods
lahf
push
sti
mov
jne
xchg
cmp
lret
pop
les
repz
fsts
xchg
xchg
leave
cmp
loope
mov
jb
inc
push
and
jnp
jl
mov
icebp
ret
add
int
andb
into
loop
adc
xor
loopne
jno
in
jns
cmp
fbld
adc
cs
in
sub
dec
out
shl
add
push
out
stos
xor
and
loopne
mov
bound
lcall
outsl
pop
mov
stc
pop
js
or
jae
xlat
stos
pop
mov
adc
xlat
jle
fwait
jg
hlt
cmp
xor
sub
jmp
pop
rcll
mov
push
iret
xor
lret
xchg
fsubl
pop
notb
movsl
mov
jl
add
xchg
adc
and
xor
addr16
mov
mov
je
pop
mov
test
ss
xchg
mov
orb
dec
or
dec
push
cmp
mov
lock
loopne
xchg
cmp
jae
lret
pop
mov
jl
fldenv
fsubr
in
enter
frstor
jg
pop
xlat
mov
jmp
clc
scas
dec
test
push
push
in
stos
insb
sub
bound
add
enter
mov
mov
cli
mov
clc
cmp
shlb
icebp
rcll
jo
test
sbb
in
ret
scas
mov
adc
cmp
xchg
cmp
fsubp
psadbw
mov
mov
jle
xchg
inc
test
idiv
xchg
scas
and
decl
fwait
jbe
adc
add
inc
pop
mov
lock
sarl
popa
add
lcall
pop
mov
in
xchg
sbb
sub
repz
mov
push
sbb
sub
loopne
ja
movsb
movsb
das
mov
unpckhps
jae
cli
xchg
sub
xchg
ja
pop
lock
mov
dec
mov
aad
lds
loopne
xchg
jge
movsl
adc
jbe
or
dec
out
bnd
ficoms
sbb
mov
out
scas
add
je
sbb
mov
lock
mov
lahf
or
sbb
rorb
push
push
mov
and
cli
fldenv
push
adc
loop
aas
out
cmp
sbb
in
pop
cwtl
imul
push
xor
ret
pop
movsb
cmpsl
dec
push
dec
mov
or
das
sti
imul
cmc
out
cmp
daa
xor
rcll
lods
cmp
rorb
adc
or
loopne
outsb
test
mov
sub
fcmovnbe
xchg
cmpsl
dec
sub
das
int3
sbb
add
jl
mov
mov
mov
hlt
call
lcall
je
jb
pop
and
sub
mov
dec
loop
inc
adc
jge
sbb
xchg
sub
cmpsl
adc
jecxz
xor
outsb
dec
ja
xlat
cmp
and
notb
xchg
cmp
add
popf
adc
imul
adc
nop
pusha
mov
push
loope
test
scas
repz
neg
jns
inc
fimuls
mov
inc
fwait
adc
jnp
xor
sahf
and
imul
push
jle
mov
sbb
daa
dec
ljmp
adc
xchg
add
dec
loop
jecxz
shlb
dec
inc
lock
jne
pop
insl
push
cmpsb
inc
stc
pop
xchg
cmp
xor
clc
push
mov
jbe
popa
in
xchg
adc
cmp
rorl
fcoml
in
les
lea
dec
aam
jno
add
mov
or
mov
jmp
xchg
stos
call
js
and
sbb
mov
add
in
shlb
cmp
popf
mov
push
flds
adc
cld
sbb
das
leave
std
stc
std
repnz
inc
push
aas
js
push
mov
pusha
jg
idivl
mov
or
loop
rcrb
inc
or
das
and
jbe
dec
pop
in
pop
push
ret
sti
jb
aam
int
dec
fists
or
ljmp
push
sahf
mov
ret
xorb
sub
in
sub
dec
pop
add
in
and
xlat
mov
popa
jp
rcrb
in
test
stc
inc
add
loope
push
sbb
jo
push
jae
pop
into
nop
push
xor
push
shll
sub
cmp
inc
pop
add
push
sbb
inc
lds
xor
xlat
dec
ljmp
push
sbb
mov
push
and
fisttpl
inc
mov
lea
mov
adc
cmp
aam
mov
aas
sub
cmp
pop
in
dec
push
push
das
jmp
sub
stos
xchg
adc
shll
incb
arpl
je
mov
mov
dec
xchg
mov
mov
fsubl
in
imul
and
aaa
mov
xchg
rcrb
xor
lea
lods
imul
jl
test
mov
lahf
cmpsb
aas
fstl
and
xchg
repz
dec
mov
jae
das
dec
sbb
sahf
ret
cmp
jae
pushf
outsl
xchg
cmp
pop
imul
icebp
xchg
inc
sub
xor
dec
leave
push
xor
mov
fcompl
aad
mov
pop
and
outsl
xchg
fs
arpl
aad
out
out
test
adc
mov
daa
xchg
xchg
xor
adc
fwait
mov
mov
inc
imul
sub
adc
adc
pop
in
lods
cmc
mov
in
push
sub
int
push
scas
jl
mov
sbb
aad
and
adc
insl
inc
jp
pop
inc
arpl
pop
cmpsl
or
pop
notl
pop
dec
adc
pushl
test
and
cmp
dec
sbb
cmp
ret
lock
ret
pop
notb
lea
clc
jle
jo
je
mov
lahf
mov
ror
dec
xchg
sbb
lods
mov
mov
or
movsb
dec
cltd
xchg
pop
in
pop
cs
add
dec
test
in
dec
fdivr
cmp
adc
filds
in
lea
lock
push
or
data16
pop
sbb
call
push
push
ljmp
jle
dec
lods
in
xchg
sbb
hlt
mov
mov
gs
jno
jge
shll
xchg
scas
cmp
mov
in
movsb
mov
xor
and
and
jl
inc
fimull
mov
jecxz
std
clc
mov
sbb
outsb
inc
clc
mov
ffree
and
call
fwait
mov
ss
aam
dec
rorl
inc
inc
iret
and
jbe
je
shr
push
xchg
std
or
repnz
xlat
popf
cmp
sahf
int3
int3
add
loopne
repnz
js
int
pop
iret
mov
outsb
xor
and
stos
fidivl
mov
inc
addr16
inc
daa
mov
push
std
mov
imul
mov
adc
idiv
dec
daa
cmp
mov
insl
into
xchg
push
lret
aad
dec
and
test
mov
xchg
xchg
hlt
mov
ljmp
outsl
sbbb
enter
es
push
cld
cmp
into
mov
sub
repz
adc
pop
sbb
int
fwait
xlat
inc
jnp
pop
sub
fsubrl
jne
jmp
jmp
daa
add
ret
add
enter
mov
scas
loop
sub
inc
stos
stc
dec
push
testb
loopne
test
pop
andl
dec
add
roll
mov
in
testl
xchg
imul
xchg
out
imul
jmp
leave
adc
jo,pt
jl
std
in
or
aam
jne
mov
int
mov
test
and
ss
sub
hlt
arpl
inc
pop
or
dec
mov
or
stos
mov
pop
push
mov
punpcklwd
sub
cmp
inc
dec
mov
jno
xor
mov
ljmp
inc
int
out
loop
es
repz
jge
jb
xor
xlat
cs
jge
sub
movb
and
xchg
xchg
out
in
lcall
cmpb
mov
xchg
dec
pop
test
pop
subb
adc
sbb
mov
sbb
or
cs
stos
push
xor
push
imul
xor
gs
jmp
inc
insl
sbb
aas
inc
ret
cltd
push
pop
lea
cmp
push
loope
mov
ss
sub
hlt
imul
cmp
mov
lret
sbb
cmp
or
inc
movsb
and
pop
fldcw
subl
out
mov
inc
xchg
xchg
bound
imul
mov
mov
xchg
add
xlat
out
sub
arpl
push
push
addr16
je
xor
movsl
repz
push
int3
add
jl
notl
pop
fwait
pop
mov
mov
sub
stos
pushf
adc
fs
jns
pop
xorl
andl
dec
adc
push
es
cmpsb
test
jbe
or
jmp
scas
clc
fcomi
scas
adc
jno
popa
or
icebp
gs
daa
scas
cld
inc
adc
lcall
inc
icebp
daa
mov
sbb
mov
pop
insb
and
gs
push
mov
jg
loopne
in
sub
xchg
or
mov
xchg
sub
xchg
divl
mov
clc
cwtl
jb
sbb
enter
dec
jne
jae
sarl
jbe
push
mov
fs
cmp
int3
dec
jae
inc
ja
out
in
loopne
js
mov
inc
pop
dec
inc
cmp
cltd
popa
xchg
xchg
jge
adc
cwtl
scas
mov
test
mov
pop
mov
dec
shll
push
int3
ret
cmp
xor
enter
je
inc
imul
add
or
push
sbb
jb
or
fisttpl
push
sub
leave
cs
aaa
mov
inc
sahf
and
push
xchg
mov
outsl
test
adc
pop
fwait
mov
popf
stos
push
shlb
cltd
mov
adc
sbb
xor
lret
mov
inc
add
cmp
inc
repz
sub
out
js
adc
add
pop
sarl
out
mov
in
and
pop
inc
push
cmpsb
out
xchg
js
jle
inc
into
pop
movsb
mov
pop
or
call
cmp
repz
push
mov
aas
ja
add
pop
inc
xchg
je
shrl
imulb
mov
cli
icebp
scas
fdivs
movsb
push
sbb
push
xchg
cld
mov
dec
inc
mov
add
dec
nopl
inc
jl
sub
pop
mov
mov
mov
pop
in
sbb
into
in
lds
cmp
xchg
and
jmp
outsb
aad
fbstp
sub
dec
or
pop
lcall
mov
mov
dec
or
fnstenv
inc
mov
sbb
shr
dec
fsubs
fimull
scas
pop
xor
loop
jnp
je
ja
daa
or
aam
cmp
lock
or
int3
add
sahf
push
fcomip
into
dec
cltd
insb
stos
shr
sbb
or
mov
push
xlat
sub
arpl
iret
ss
jbe
and
gs
js
imul
or
inc
nop
add
mov
add
mov
and
shlb
in
insl
addr16
cmp
cmp
adc
sub
mov
adcl
inc
mov
sub
sbb
pop
data16
and
popf
adc
pop
xchg
push
jne
mov
sbb
jbe
and
clc
dec
adc
fnstenv
or
repz
sub
int3
sub
popf
test
pop
cmc
xor
add
dec
decl
mov
lret
sbb
dec
xor
inc
clc
xchg
sbb
xchg
cmp
sbb
sar
inc
sbbb
xor
pop
subps
sub
aad
jnp
jle
into
pushf
das
pusha
aas
ret
mov
xor
jle
adc
jp
sahf
mov
pop
adc
enter
es
jecxz
fidivrl
sti
or
push
mov
fdivl
push
fistpl
xor
pop
mov
add
fcoml
push
adc
inc
mov
out
lret
jno
push
jp
fldt
scas
scas
test
xor
jp
fdivr
leave
aaa
and
mov
mov
repnz
test
bound
loope
clc
shll
test
push
mov
mov
les
adc
and
filds
scas
fadd
dec
mov
adc
xchg
lds
je
push
xor
push
mov
sub
insb
cmpsb
or
frstor
shll
inc
mov
pop
lds
fildll
movsl
sbbl
jge
hlt
mov
cmp
xchg
int3
or
sbb
pop
jl
lahf
pop
divb
push
xchg
sbb
sub
cmp
sbb
jno
jae
dec
dec
jecxz
mov
fidivl
shll
in
fst
pop
inc
in
jns
pop
mov
xchg
addr16
sbb
xor
mov
jnp
push
mov
jb
jmp
fstl
pop
bound
cmp
dec
mov
out
xchg
push
lea
jne
test
ljmp
adc
fisubs
push
pop
loopne
std
fcmovnu
jl
dec
ja
jno
aaa
sbb
icebp
mov
pop
sahf
cli
negb
add
pop
pop
push
cmp
inc
lret
sbb
xchg
roll
arpl
movb
push
call
ficoml
outsl
cli
cmp
int
inc
js
mov
sbb
jmp
mov
push
cmp
push
push
xor
imul
stos
mov
jecxz
xor
icebp
jg
aad
std
inc
adc
sarb
push
mov
push
lods
sbb
test
pushf
out
mov
adc
cmp
push
xchg
jnp
adc
add
push
fcomi
push
push
scas
lret
insl
addr16
mov
aad
leave
and
mov
sub
add
push
inc
inc
std
or
lods
mov
dec
mov
cld
add
push
add
test
js
add
addr16
push
sub
jb
xchg
cmc
sbb
loopne
dec
adc
sbb
push
xor
sub
aam
sti
mov
cli
jae
test
imul
rorl
shl
arpl
add
inc
push
test
xor
add
jae
xor
repz
cmp
mov
dec
mov
int3
pop
lods
add
inc
call
jl
aas
dec
add
or
cmp
push
imul
cmpsb
dec
addr16
gs
mov
pop
mov
mov
ret
je
dec
lods
jmp
pop
add
nop
xor
rcr
clc
mov
mov
sahf
cmp
fdivs
xchg
push
aam
fdivs
mov
push
adc
jp
sbb
mov
xor
mov
int3
cwtl
xchg
xchg
mov
ljmp
xchg
adc
cwtl
jg
xor
mov
sahf
in
pop
or
je
fdivrs
je
adc
outsl
xor
pop
jns
movsb
mov
arpl
aad
or
sub
add
mov
sbb
pop
mov
fwait
jb
push
vmread
fmul
ds
loope
inc
scas
add
loopne
pushf
pop
pop
stos
nop
out
jne
lds
inc
mov
xlat
mov
or
mov
adc
jno
out
jo
adc
mov
stc
mov
mov
hlt
adc
je
fs
test
sub
push
insl
add
int3
sti
lret
std
mulb
xchg
mov
not
lds
mov
shll
aam
dec
loope
mov
push
sahf
movsl
jne
rcrl
cmp
dec
xchg
push
ja
std
movsl
pop
or
movsl
and
lret
mov
sbbb
mov
int3
addl
push
xor
inc
fwait
push
push
int
sbb
adc
xchg
daa
dec
adc
lods
insl
movsb
sub
js
es
add
adc
dec
pop
push
adc
sarl
and
outsl
pop
or
fiadds
popf
or
or
push
loop
inc
xchg
mov
out
fcomps
loop
cli
call
add
xchg
incb
mov
mov
out
sub
outsb
aas
push
push
jns
pop
scas
pop
std
lods
pop
sbb
rorb
std
mov
in
mov
shrl
push
das
mov
hlt
gs
lea
xchg
pop
inc
or
nop
orl
adc
sarb
fs
loopne
cmpsb
sub
xchg
jo
fldl
push
adc
movsl
repz
stc
leave
sub
idivl
cld
jmp
ss
aad
xchg
test
fimuls
add
xor
scas
fcoml
int3
daa
jp
arpl
leave
xchg
and
xchg
imul
and
inc
xchg
xchg
jle
mov
call
call
push
xchg
mov
inc
repnz
inc
sub
ss
in
mov
mov
fmul
std
push
test
or
xor
and
mov
add
pop
aad
jecxz
and
jmp
lods
inc
cmp
jnp
mov
jge
mov
adcl
xchg
lods
or
mov
adcb
dec
and
jmp
pop
add
pop
aad
cs
or
icebp
cld
stos
addb
sub
mov
testl
fs
mov
jmp
int
or
ljmp
and
pop
and
jo
mov
dec
call
dec
cltd
sarb
xchg
lret
add
aaa
iret
fcmovnb
and
out
push
nop
sub
clc
jmp
push
fwait
addb
mov
xor
clc
mov
aas
sub
xor
sub
jns
fistpll
movsl
jg
push
jae
or
in
in
incb
xor
jo
jns
push
and
loopne
mull
xor
repnz
ds
cmp
dec
mov
fnstenv
es
in
xchg
push
outsb
sbb
adc
mov
or
shlb
nop
cltd
push
xlat
arpl
vpsadbw
xchg
jb
ljmp
xor
jne
icebp
mov
inc
testb
push
cwtl
pushf
jg
stos
xor
inc
jb
pop
and
fisttpl
call
sub
bound
mov
jle
mov
adc
cmp
or
adc
mov
jmp
lods
xlat
mov
mov
cld
enter
or
pop
lahf
shlb
lret
lret
cs
insl
in
mov
hlt
xchg
lret
ret
imul
lods
imul
iret
aad
mov
inc
bound
add
movsb
add
cmp
add
rorb
mov
cmp
mov
push
xchg
les
cltd
in
mov
loopne
pop
dec
inc
inc
cs
jno
enter
lods
cwtl
xchg
inc
push
test
pop
bound
and
arpl
sub
inc
in
dec
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
mov
xchg
dec
push
lods
sbb
vpsraw
add
inc
sbb
mov
mov
cli
imul
xor
add
cwtl
loopne
xchg
push
mov
xor
mov
loopne
mov
push
cmp
pop
inc
fwait
in
lret
iret
push
stc
xchg
cmp
mov
inc
push
cmp
aam
popf
xchg
inc
ret
call
nop
sarl
xor
scas
pushf
mov
icebp
dec
mov
adc
sbb
sub
and
mov
popa
jae
loopne
lret
sbb
push
push
mov
test
xor
dec
cld
pop
out
add
andl
test
mov
movsb
adc
mov
jo
mov
out
jno
into
mov
cmp
cwtl
into
cmpsl
mov
lds
icebp
push
jge
iret
daa
sti
or
adc
jle
xlat
sub
fisubrs
aad
jg
loope
outsb
fwait
pop
popa
add
test
pop
js
in
mov
cs
inc
mov
mov
dec
inc
cmp
sbb
wbinvd
and
das
xor
aad
push
push
dec
enter
inc
fadd
cmpsl
dec
bound
sbb
test
inc
jl
jmp
mov
les
arpl
lea
or
mov
add
push
mov
ja
loopne,pn
iret
movsb
pushw
out
clc
sub
dec
hlt
shrb
dec
pop
adc
xchg
jmp
lret
stc
adc
lock
and
pop
les
cld
sub
cltd
mov
and
sbbl
mov
or
dec
cli
sbbl
popa
lea
lret
or
push
sub
push
jb
lret
mov
xchg
std
mov
pop
push
addr16
or
arpl
jnp
xor
and
sahf
mov
inc
sub
call
mov
data16
cli
cmp
cwtl
aas
cli
jg
mov
hlt
xor
mov
mov
loope
push
mov
aaa
cmpsb
popf
xchg
arpl
popf
add
cmp
pop
ret
inc
or
xchg
cmp
clc
roll
xcrypt-ofb
cmpsl
lods
pusha
lods
stos
mov
push
in
xchg
subl
mov
fisttpl
or
loope
cmp
cmp
scas
shrb
push
sbb
cwtl
loope
in
enter
dec
outsb
out
cltd
inc
sbb
in
into
and
add
testb
out
cmp
dec
daa
into
aaa
call
inc
and
jne
xchg
out
pop
mov
call
pop
mov
push
test
xchg
sub
fbstp
add
mov
mov
pop
outsb
test
jg
mov
sbbl
pop
and
lret
lret
pop
je
cmc
push
sub
in
outsl
dec
pop
sbb
aam
je
and
mov
cmp
sub
test
xchg
inc
jle
dec
pushf
cmpsb
sub
in
movsl
or
psadbw
cwtl
cmc
fcoml
jne
ret
dec
jo
inc
mov
jmp
or
andl
cmp
mov
fistps
xchg
pop
jnp
repnz
getsec
inc
aad
inc
pop
cwtl
aas
sbb
dec
push
aam
clc
test
jg
push
fnstcw
mov
jo
sbb
ret
js
jl
ljmp
push
sub
jecxz
sti
push
jle
ficompl
shrl
push
xchg
mov
sub
lods
mov
ljmp
iret
and
in
cmpsl
cmp
push
jmp
adc
cmp
push
lahf
add
mov
cmpl
dec
fucomip
xchg
mov
mov
adc
and
lods
popf
int3
sbb
flds
xor
inc
pshufw
mov
cmp
cmp
repnz
subl
inc
or
push
or
pop
cli
nop
sbb
jmp
pusha
test
ljmp
mov
ret
and
mov
arpl
das
stc
push
pop
lcall
cmc
inc
sbb
and
inc
xchg
and
sbb
adc
out
out
xchg
aaa
jge
cmp
mov
out
jge
xor
mov
stc
mov
sub
inc
mov
mov
xchg
cmp
push
sub
je
xlat
pop
pop
fbstp
add
pop
flds
cmp
adc
outsl
out
data16
ret
sbb
repnz
jl
lods
push
dec
pop
sub
pop
adc
xchg
das
test
xor
hlt
fbstp
pop
or
rcl
cmp
adc
xor
mov
add
sub
jno
addr16
fisttpl
sahf
add
fs
add
cmc
lods
jno
lds
jle
fsubrs
sbb
lcall
add
aaa
jbe
repz
ret
sahf
push
ljmp
ret
scas
call
adc
push
sub
xchg
xchg
repnz
mov
scas
je
cmpsl
cld
sub
jnp
call
outsl
xor
cmpsb
dec
pop
adc
jb
iret
mov
insl
in
xchg
jnp
lods
and
add
movb
sbb
lods
pop
cmp
icebp
and
dec
lds
or
pop
xor
das
iret
repz
lods
jo
dec
scas
push
xor
inc
repz
xor
nop
lret
mov
ss
xlat
popa
imul
fwait
xchg
dec
jne
sbb
push
xor
imul
mov
fsubl
aaa
push
pop
mov
mov
pusha
xchg
out
bound
mov
mov
les
loope
aad
and
in
push
or
or
mov
and
insl
mov
sar
and
mov
inc
and
sbb
lds
pop
mov
xorb
lds
cmp
mov
lahf
ljmp
popa
dec
insb
dec
mov
les
push
xchg
lcall
outsl
pop
lahf
sub
incb
and
das
clc
and
test
xorl
mov
sbb
pop
mov
shlb
sahf
into
fwait
in
aas
sti
add
xchg
sbb
out
jmp
in
addr16
shrb
cmp
mov
mov
fists
imul
mov
adc
std
cmp
and
push
clc
mov
xor
push
addr16
dec
dec
in
test
sbb
pop
xor
jae
aas
sub
nop
inc
and
push
lahf
jle
mov
fisttpll
dec
mov
mov
nop
jmp
andl
das
push
mov
inc
adc
jne
inc
sahf
sti
loopne
jge
jno
cmp
cli
xchg
out
dec
jb
mov
and
call
pop
lret
ljmp
jb
daa
rcrl
push
or
inc
xchg
arpl
std
ret
fidivl
lods
xchg
stos
pop
push
inc
outsl
xchg
adc
dec
jae
jae
int3
stos
mov
lcall
pop
lea
pushf
cwtl
or
lods
pop
fistpll
loope
jl
fdiv
or
insb
mov
push
adc
mov
dec
or
std
push
pop
mov
out
ja
mov
lods
clc
inc
xchg
pusha
pop
int3
int3
scas
adc
jnp
xchg
cld
and
lret
mov
iret
mov
sahf
rclb
pusha
inc
les
inc
outsb
call
and
pop
aas
add
mov
or
push
in
pushf
sub
test
push
and
push
push
imul
push
xor
lret
cmp
inc
rorb
pop
js
mov
dec
es
jg
mov
and
dec
out
jle
push
xor
cltd
imul
pusha
es
push
cmp
push
xor
push
lahf
testl
test
loop
inc
shrl
sbb
adc
std
fmul
cld
icebp
rolb
mov
push
mov
pop
ficoml
and
arpl
dec
jb
scas
sahf
lock
lahf
cmp
push
shll
dec
push
mov
push
movsl
inc
xor
add
mov
jmp
mov
dec
dec
test
rcr
inc
lea
xchg
cmp
inc
push
aam
mov
les
arpl
lods
inc
pop
jbe
or
sub
jnp
data16
in
and
imul
jb
push
inc
addr16
insl
push
mov
pop
sbb
sbbb
repnz
or
xlat
jmp
push
dec
push
shll
add
dec
jge
out
pushf
insl
dec
je
jbe
test
cmp
in
push
inc
xchg
js
shll
daa
and
xchg
push
xor
ds
add
sbb
xchg
mov
sub
mov
fisubrl
jle
jg
xchg
cmp
jmp
push
inc
test
insl
sub
test
in
clc
dec
dec
lods
inc
popf
xor
cmp
xor
dec
cmc
mov
push
jne
jo
adc
sbb
jecxz
add
jns
in
aam
loope
addb
mov
sbb
mov
xchg
orl
mov
test
fs
repnz
add
xchg
xorb
or
decb
lods
sub
js
add
lcall
imul
cmpsb
or
pop
in
sahf
cmc
xchg
and
stos
sub
ja
repnz
mov
sbb
push
cmp
or
sbb
sbb
pop
or
lret
mov
sub
test
daa
jg
cmp
xchg
xor
jmp
int
mov
lock
sub
adc
pop
mov
es
or
jge
jns
cmp
iret
out
xor
xor
cmp
les
mov
cld
loope
jg
gs
les
xor
pushf
in
test
pop
rcrb
scas
dec
pop
pop
daa
sti
daa
sar
fisubs
out
mov
inc
jbe
int
pushf
inc
sub
push
push
je
in
sub
cld
inc
rcll
adc
sbb
mov
pop
sbb
jg
adc
dec
adc
add
inc
and
mov
lock
imul
aas
into
cld
push
push
mov
rcrl
aam
mov
xlat
jge
or
fcomps
ret
outsb
inc
fcomp
jl
mov
or
ds
sub
dec
insl
jp
mov
adc
insl
lret
and
sahf
mov
sti
aad
push
mov
push
xchg
cmpsb
imul
xor
out
pop
js
shl
mov
sub
jno
call
mov
pop
xor
jl
test
sti
push
or
jnp
test
ret
in
jecxz
std
mov
or
xchg
pop
jmp
mov
in
xrelease
and
sub
sti
add
icebp
push
out
faddl
fstps
xor
bswap
or
pop
ror
loop
dec
jg
std
out
xor
test
jae
movswl
sub
addl
loope
in
xor
and
jecxz
sahf
loopne
pop
jmp
in
push
repnz
cmp
jno
inc
pop
xchg
mov
gs
icebp
pop
dec
cmc
and
dec
push
stos
aam
adc
add
inc
stos
cmova
js
aas
into
sub
jle
lcall
inc
ja
push
test
xchg
sub
xchg
jp
mov
sahf
cmp
mov
bound
mov
push
ds
jne
and
dec
and
shr
sbb
fsts
dec
in
into
lods
shll
lods
ret
idiv
ljmp
xor
pop
jl
mov
sbb
sbb
mov
inc
sub
mov
les
mov
addr16
xchg
mov
subb
inc
mov
sub
jg
xorl
sub
mov
sub
imul
mov
popa
and
lock
icebp
mov
bound
pop
lock
rcll
imul
add
inc
mov
mov
insl
popl
aad
arpl
arpl
mov
mov
add
xor
decl
nop
dec
and
cld
sbb
inc
inc
jge
lods
gs
aas
stos
fisubs
sbb
cmpb
and
in
aam
ss
call
push
lods
lret
sbb
xor
das
adc
icebp
cmp
mov
jo
add
xorb
dec
mov
dec
aad
insb
push
xor
lcall
fnclex
mov
lret
icebp
stc
adc
jne
clc
fmull
lds
xchg
mov
push
and
loopne
xchg
sti
out
and
push
xor
inc
loope
cltd
jns
lods
pop
jnp
shl
mov
sbb
add
mov
fwait
lock
out
lea
stos
scas
fnstsw
shrl
jne
push
movsb
mov
clc
aam
mov
sub
cmp
fwait
mov
dec
jmp
or
xchg
or
mov
inc
daa
xchg
orps
and
sub
or
push
mov
mov
popa
sbb
daa
rorb
cmp
loopne
lahf
mov
pop
movl
popa
fisttps
mov
jnp
sti
xchg
xlat
les
movsb
mov
aas
mov
jne
and
sub
or
idivl
sbb
sub
xor
stos
fldenv
out
popf
out
mov
inc
dec
cmp
add
lods
mov
jno
sbb
scas
lahf
movsl
fldenv
push
sbb
mov
dec
addr16
jnp
rorl
out
pushf
pop
pop
pop
adc
sbb
enter
idiv
std
cmc
fwait
dec
xlat
push
dec
loop
aam
int
cmp
js
mov
xchg
mov
cli
lods
xor
outsb
mov
lea
inc
xor
popf
data16
lods
xchg
dec
movsl
xor
push
jle
mov
or
jns
js
das
test
fs
sub
ret
push
inc
stc
lret
sub
hlt
jbe
subl
pop
ss
add
scas
ja
bound
xchg
xchg
or
mov
pop
push
jecxz
lods
pop
sahf
cld
xor
outsb
xor
push
jp
or
loope
xchg
jns
and
mov
ret
sbb
test
xlat
es
fidivrl
fcomps
add
inc
hlt
pop
mov
jmp
stos
mov
and
jae
mov
mov
jp
fstps
inc
in
adc
or
shr
jmp
gs
insl
out
jecxz
mov
mov
repz
push
mov
mov
pop
cmp
lds
adc
mov
mov
and
sbb
imul
inc
jbe
cltd
cmpsl
mov
iret
call
jmp
cmp
out
sub
andb
movsb
outsb
lret
push
mov
push
repz
sbbl
and
int3
ds
fimull
das
imul
loopne
loope
add
xchg
ret
sbb
mov
push
xor
xlat
dec
add
cld
stos
scas
cmp
inc
shlb
aaa
mov
cli
mov
lret
mov
cmp
fdivs
mov
shll
sub
add
mov
mov
mov
out
ret
mov
sub
xorb
jl
mov
jae
out
pushf
mov
lahf
gs
lret
and
adc
pop
push
addr16
xor
testl
sbb
mov
rorl
add
stos
ret
xchg
lods
adc
jb,pn
mov
dec
adc
sub
fiadds
inc
pop
das
fdivrs
sbb
ror
mov
adc
rorl
mov
scas
mov
mov
les
mov
adc
in
cwtl
sub
pop
loopne
or
or
shlb
xlat
cmpsb
pop
das
adc
stos
movsb
scas
sar
imul
jg
ret
pop
inc
sub
rclb
dec
arpl
addl
iret
add
call
sahf
push
daa
xor
dec
jae
cmp
ljmp
or
xchg
test
adc
or
imul
rcr
bound
xchg
jno
jle
or
fstpl
inc
mov
pop
addl
scas
mov
scas
into
test
pop
mov
or
inc
jbe
mulb
repnz
shrl
jbe
jge
xlat
xor
inc
push
out
push
mov
int3
adc
popf
mov
or
shll
jge
push
and
mov
cs
outsl
in
jne
xor
push
pushf
adc
fbld
adc
adc
jns
imul
test
mov
int3
mov
inc
mov
iret
mov
pop
inc
cmp
adc
adc
or
fwait
adc
push
xchg
in
dec
or
mov
mov
push
cmp
mov
push
push
std
ficoms
xor
jge
shl
and
jg
cwtl
xor
in
push
jecxz
push
jns
xchg
cmp
jl
mov
inc
or
push
cmp
sahf
jnp
hlt
adc
mov
pop
dec
xchg
sub
mov
aas
int3
pushf
aas
xchg
sahf
dec
shlb
jmp
ja
pop
popa
jns
xor
sub
xchg
outsb
sbb
mov
out
pop
push
iret
scas
xchg
comiss
out
push
or
push
fs
lods
sub
arpl
xchg
fcoml
shll
jmp
sarb
and
mov
xchg
or
in
movsw
xchg
xor
dec
mov
iret
mov
sbb
mov
mov
int3
je
dec
loopne
push
aas
inc
jne
lahf
add
jp
push
ss
ret
or
nop
iret
push
in
pusha
inc
jecxz
ror
jnp
ja
pop
pushf
mov
imul
movsb
mov
loope
cmp
arpl
sub
in
pop
jmp
xor
push
negb
sub
mov
jbe
inc
sub
stos
les
sbb
xchg
jmp
rcr
arpl
inc
ljmp
test
fmull
in
ficompl
rol
mov
cli
imul
and
push
mov
jbe
ds
daa
jno
add
lock
test
mov
xorl
sub
jge
pop
sti
mov
iret
adc
iret
aam
or
cmc
nop
scas
adc
int
repnz
imull
xchg
jp
mov
sbb
repnz
cmp
addl
add
dec
jg
push
lret
xor
insl
decb
mov
fistl
adc
lds
sbb
or
outsb
mov
dec
sub
nop
iret
sub
loope
inc
iret
shrl
mov
icebp
outsb
iret
sub
jl
add
orb
sbb
cltd
insl
jle
neg
mov
outsb
popa
data16
popf
dec
or
mov
sub
mov
in
aas
or
pushf
test
mov
scas
pop
out
mov
xchg
cli
mov
dec
test
jo
jo
scas
sub
dec
insl
sub
inc
pop
jnp
aaa
insl
adc
fadds
cwtl
mov
xor
clts
sub
mov
insb
sbb
sbb
pop
imul
daa
add
loopne,pt
push
inc
push
iret
in
nop
cmp
addr16
dec
mov
mov
dec
jecxz
ljmp
sahf
bound
lfs
int3
cmovae
xchg
mov
inc
enter
sub
cmpsb
test
pop
dec
fwait
or
in
jne
je
hlt
xchg
fisubrl
pop
mov
inc
push
les
cmpsl
leave
out
jmp
lods
addb
mov
outsb
mov
mov
push
jp
xchg
lods
and
test
scas
repz
lret
pop
shrl
cmovo
mov
push
arpl
push
scas
fsts
lahf
js
adc
sub
inc
dec
std
mov
int3
inc
jno
mov
mov
jae
dec
add
repnz
cmp
mov
out
sub
fs
cli
xchg
lods
or
push
jo
hlt
cmp
or
jge
mov
andb
das
pop
dec
andb
fimull
mov
sbb
adc
push
int3
imul
xor
sbb
loopne
ficompl
jae
push
xlat
dec
mov
mov
pop
adc
xor
outsl
bound
adc
scas
scas
dec
mov
pop
fcoms
xor
fstpt
je
push
adc
inc
les
lds
fsubr
push
and
push
xchg
enter
scas
sub
iret
add
aaa
cli
sbb
fstpt
cmc
pop
add
mov
sbbb
cltd
and
les
shl
push
cmp
cld
dec
fwait
jmp
das
add
pop
or
cltd
lret
orb
rclb
mov
adc
mov
inc
pop
jne
mov
outsl
clc
xchg
pop
and
stos
inc
ror
sbb
lret
sbb
and
shrb
fwait
call
mov
cmpsl
jge
in
in
or
aaa
out
jmp
shrl
loopne
mov
or
repz
out
sub
jns
lret
shlb
push
imul
test
xor
into
pop
mov
loope
jo
sub
fnsave
cmp
lss
ss
fsubl
fidivl
adc
or
pop
xchg
xor
cli
outsb
or
and
in
sti
imul
test
mov
sahf
mov
add
xor
scas
cld
jmp
call
mov
pop
stos
mov
push
arpl
stos
je
rcrb
dec
fwait
cmpl
cmp
outsb
cmp
add
sub
inc
aam
adc
js
out
das
je
loop
mov
mov
iret
fbstp
xchg
pusha
dec
mov
mov
int3
jmp
cltd
add
insl
addl
and
cmp
dec
sbb
pop
faddl
sub
jns
idivl
cmc
push
xor
adc
or
adc
xor
or
imul
lcall
jl
js
jns
gs
sarl
inc
test
rorb
push
cmpsl
mov
pop
nop
and
pop
out
out
lea
fisttps
inc
pop
jb
sub
or
rolb
xor
sub
mov
sti
lret
in
and
sbb
push
mov
mov
xchg
jo
es
ss
push
ret
ret
inc
xchg
sub
popf
into
xchg
jno
xchg
xor
mov
into
mov
std
jo
sbb
and
sti
cmpsb
aaa
mov
jns
divb
add
lods
arpl
cmp
adc
out
inc
fnstenv
shll
ret
movsb
adc
sbb
aad
inc
out
rclb
pusha
and
jns
call
xchg
and
jb
loop
scas
mov
pushf
xchg
pushf
push
js
cmp
xorb
aas
push
ficompl
fstps
mov
xchg
jecxz
xchg
ljmp
fwait
dec
sub
cmp
cmpsl
jnp
pop
test
rcl
mov
inc
xchg
adcb
stos
imul
mov
xor
hlt
adc
pop
and
sarl
and
fbstp
push
gs
aam
testb
adc
jecxz
add
in
pop
fcmovb
insl
push
mov
ljmp
push
sti
sbb
push
mov
push
lret
nop
pop
add
push
xchg
adc
leave
mov
fstpl
aam
loope
repz
cld
cwtl
xor
loope
adc
dec
xchg
push
in
sbb
xchg
sub
adc
mov
xorl
jbe
add
mov
or
mov
push
mov
jmp
ja
or
jno
and
sbb
mov
xchg
btc
and
mov
mov
push
xor
mov
mov
fisttps
icebp
es
sub
add
pop
sbb
add
pop
inc
or
jl
pusha
jno
xor
cmpsb
fldt
lods
xchg
aad
pop
inc
ret
dec
pop
js
adc
push
lds
stos
stc
aam
addr16
xor
insl
sbb
rcl
jns
mov
popf
dec
aam
es
in
mov
std
or
roll
mov
int3
adc
jmp
in
mov
sub
fs
scas
push
in
jge
pop
add
xchg
into
aas
cmp
sub
push
mov
rol
lock
je
test
inc
fisttpll
or
jecxz
dec
roll
es
mov
jnp
xor
nop
mov
nop
nop
sub
sub
inc
imul
lea
xchg
pop
pop
mov
xchg
cmp
cltd
test
mov
pop
pop
icebp
lods
sar
xor
dec
mov
jle
dec
push
lret
pushf
jae
or
mov
xor
and
pusha
jnp
fs
adc
punpckldq
aas
lret
mov
jne
inc
sub
repz
out
arpl
not
lret
dec
test
jne
lds
stos
fwait
test
movsb
sbb
mov
lea
fnstsw
hlt
xor
ret
dec
ss
stc
cmp
dec
repz
sub
bnd
stos
dec
xchg
cmp
mov
imul
pop
cmp
inc
mov
lcall
jae
in
mov
jge
jle
ds
cmpsb
mov
sbb
xchg
adc
outsl
xor
push
fsubs
jp
jp
in
popl
ja
lcall
js
in
out
pop
or
push
std
dec
and
movsb
fwait
adc
or
test
or
and
adc
add
sub
xchg
enter
mov
mov
icebp
cmpsl
cwtl
and
movaps
pop
rol
xor
inc
mov
jnp
mov
in
out
mov
out
inc
clc
call
jo
or
mov
pusha
mov
sub
into
mov
mov
adc
add
xchg
je
inc
bound
inc
cmp
in
lahf
inc
pop
jg
sub
and
dec
cmp
lret
sbb
sbb
push
push
mov
adc
push
xchg
push
adc
jl
out
mov
fdivl
inc
pop
pop
cltd
dec
jecxz
cld
push
sbb
cmp
shlb
add
call
test
lahf
clc
dec
jecxz
xchg
pop
xor
mov
pop
jo
adc
fwait
mov
shl
jge
and
xlat
stos
mov
dec
out
popa
dec
call
pop
push
icebp
lahf
pminsw
dec
into
lods
aam
out
add
sbb
mov
sub
mov
push
clc
add
lcall
push
cwtl
pop
pop
jmp
mov
mov
stc
or
sbb
push
sbb
sbb
push
mov
fstp
push
dec
jge
outsl
iret
leave
in
mov
cltd
xor
into
outsb
jle
inc
add
push
dec
cmp
loop
arpl
pop
dec
fwait
rolb
test
aam
lods
sahf
inc
mov
pop
test
pop
jl
sti
or
arpl
inc
sub
jmp
mov
les
addl
aad
mov
mulb
leave
dec
imul
les
les
jb
js
call
jne
shl
punpcklbw
repz
gs
pushf
and
in
and
xchg
or
pushf
roll
jbe
sbb
push
shl
pop
negb
adcl
mov
push
sbb
pop
adc
xchg
movsb
mov
aas
pushf
xorb
sbb
mov
sbb
das
xor
imul
repnz
mov
mov
test
jmp
fdivrs
je
cmpsb
call
add
cmpsb
nop
pop
or
out
xchg
sub
xchg
icebp
subb
sahf
aaa
push
fs
jp
sbb
cs
stos
inc
jnp
xchg
popa
rorb
jb
pop
sbb
std
scas
push
mov
cwtl
inc
xor
add
and
push
dec
push
pushf
into
dec
ds
pushf
and
sub
inc
repnz
mov
out
test
push
adc
mov
or
xor
in
mov
cwtl
ss
cwtl
lcallw
je
in
xchg
outsl
stc
jbe
in
outsl
test
iret
and
dec
dec
mov
fidivrs
xchg
mov
pop
lods
pop
int3
push
sbb
mov
jp
jp
shlb
arpl
ret
cmc
fbld
or
jl
sub
cmc
pop
jne
fwait
imul
cmpb
adc
fidivl
sub
sub
adc
imul
mov
aad
or
push
xorb
mov
mov
cli
shl
test
out
std
xorl
movsl
dec
je
fdivs
out
fidivrl
push
push
dec
out
fwait
ss
dec
mov
fyl2xp1
pushf
divl
rcr
cmp
push
repnz
mov
mov
out
popf
stos
sub
test
cmp
add
mov
lea
stos
lcall
aaa
or
sbb
cmpsb
pop
xchg
movsb
lods
push
sbb
adc
push
inc
adc
fnstcw
mov
fcoml
cmp
inc
push
or
data16
push
das
sbb
pop
sbb
pop
mov
pop
and
pop
setns
adc
jp
pop
js
mov
lock
ds
push
inc
lods
mov
lock
mov
xor
lret
out
inc
pop
scas
jg
lds
jl
mov
dec
mov
mov
out
aas
adc
lahf
jne
xor
jp
loope
push
std
jg
adc
inc
push
out
aad
jecxz
jne
shrl
jmp
xorl
lret
lock
jmp
scas
xor
sub
cmpsl
pop
xlat
je
sbb
dec
push
int
mov
lret
mov
xor
enter
stos
cmpsb
mov
adc
xor
and
cmp
pop
mov
jle
xchg
outsb
xchg
inc
or
jl
jbe
ret
or
or
xchg
lds
mov
inc
cmc
mov
mov
cwtl
std
add
xor
xor
add
dec
subb
inc
push
push
mov
popa
int
push
adc
push
push
push
loope
sub
xchg
xchg
xchg
and
inc
aam
shr
jge
mov
xorl
sbb
push
mov
mov
fwait
sbb
int3
mov
push
push
jl
add
jno
aaa
xchg
frstor
jp
pop
inc
xchg
jnp
and
pop
stc
mov
pop
mov
addl
mov
cmpsl
and
andb
pushf
notl
xor
testl
gs
xor
sbb
xchg
cltd
aas
dec
push
cwtl
imul
jae
mov
into
inc
push
rcrb
mov
into
stc
pop
inc
and
sar
sahf
dec
sub
fucomip
xchg
and
dec
pop
imul
mov
add
pushf
mov
and
and
or
std
rclb
enter
insl
movsl
sub
ror
mov
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
mov
lret
hlt
pop
bound
into
adc
push
test
jb
test
fistps
mov
inc
sbb
xchg
jecxz
popa
jl
inc
sbb
test
cmp
faddp
push
jmp
out
pop
sbb
dec
xor
cmpsl
lock
cmp
fists
mov
jbe
test
and
ret
jl
sti
fisttps
sub
nop
push
jbe
and
and
loope
repnz
in
xchg
incb
test
mov
adc
leave
mov
ret
sbb
stos
add
roll
sti
inc
outsl
leave
data16
mov
xchg
insb
jno
into
enter
push
inc
mov
popa
lock
stos
jbe
and
and
mov
dec
data16
rcr
popa
lret
mov
sbb
mov
shlb
mov
xchg
stos
rcrl
ret
unpcklps
mov
xchg
mov
insb
mov
call
push
sbb
fldl
sbb
cmpsb
in
mov
sbb
push
addb
sahf
shlb
iret
ret
jnp
repz
pop
add
pop
xchg
pop
lods
cmpsl
pushf
loopne
mov
loop
mov
adc
leave
cmp
mov
push
daa
shl
cwtl
in
cli
pusha
sub
mov
cmc
mov
int
ss
cmp
popa
add
xchg
or
jmp
scas
sub
sbb
push
push
add
aas
pop
xlat
ds
sahf
sarb
or
mov
and
or
xor
aad
inc
inc
mov
stos
mov
sbb
push
xor
insl
or
cltd
jecxz
jb
jp
int3
std
mov
imul
or
lods
mov
stos
inc
ss
in
enter
sahf
push
jno
and
xor
add
enter
icebp
jmp
push
lods
mov
jnp
lds
pop
mov
out
jmp
sarb
leave
std
call
rorl
or
or
stos
in
sub
dec
cmp
xorb
jno
pop
mov
cmp
rcll
mov
mov
in
inc
mov
fcompl
xchg
cmpsl
mov
cwtl
popf
hlt
addr16
out
cli
pop
pop
pop
inc
jo
adc
sbb
enter
sub
mov
ja
xchg
divb
jg
in
or
or
test
push
push
stos
xor
scas
xor
mov
mov
popa
psubsb
call
fs
pop
mov
bound
ds
mov
jecxz
or
lods
roll
repz
dec
imul
lea
movsl
cmc
mov
mov
inc
out
mov
and
cmpsb
xor
xchg
ret
jbe
cmpsb
test
mov
mov
jl
jge
mov
es
adc
push
mov
xchg
std
add
mov
add
push
mov
pusha
hlt
ljmp
push
lahf
and
push
jmp
mov
xchg
xchg
movsb
sub
push
in
adc
fstpt
jmp
es
pop
push
sub
std
cld
insb
test
cli
and
sbb
je
mov
scas
hlt
hlt
add
add
dec
mov
add
jg
sub
sub
fidivrl
fstpt
dec
push
mov
ss
pop
inc
add
cmp
mov
cwtl
ror
cmp
dec
in
repnz
push
ljmp
and
dec
stos
add
inc
in
sub
mov
jb
add
pusha
movb
andl
aam
add
movsb
jl
sarb
push
jle
mov
xchg
adc
mov
mov
bound
test
jb
cmpsb
stos
mov
lds
or
data16
popa
xor
call
imul
sbb
pop
push
pop
rolb
mov
jns
sahf
cwtl
add
aaa
xchg
dec
test
in
aad
icebp
stos
jl
outsl
in
pop
daa
xor
mov
xchg
pop
inc
mov
ja
shrl
adc
mov
push
sbb
mov
mov
test
jae
add
leave
ret
leave
or
movsb
stos
ss
testb
cld
xor
std
xchg
xlat
push
jmp
push
mov
xor
mov
cmp
pop
stos
mov
loope
push
add
lcall
dec
lods
popf
popf
or
fxch
mov
lods
jecxz
push
out
adc
in
cld
mov
inc
mov
inc
dec
into
es
adc
cwtl
or
push
pop
imul
cmp
ss
jmp
jl
dec
out
dec
fisttps
pop
jbe
cltd
inc
cmp
cmp
test
and
mov
cwtl
imul
jge
xchg
fildll
jle
sub
or
push
loopne
mov
and
or
fisubrl
adc
dec
inc
movsb
movsb
inc
xor
xor
sbbb
sahf
sub
fstl
ret
cmp
popf
xorb
ljmp
pop
or
les
ffree
push
mov
jo
jmp
movsb
out
fadds
mov
xor
std
loop
add
repnz
adc
mov
mov
inc
out
inc
mov
loop
leave
icebp
lods
sub
enter
das
cmp
hlt
dec
add
lods
cmp
dec
xchg
iret
mov
mov
jo
push
mov
cwtl
mov
js
and
cld
or
and
pop
mov
mov
mov
sahf
jge
push
mov
or
dec
cmp
and
pop
add
xchg
mov
enter
push
daa
adc
mov
or
mov
leave
or
std
inc
sub
inc
cmp
sbb
push
ja
sti
xor
mov
jecxz
cmc
xor
stos
out
ss
aam
xchg
mov
adc
test
adcb
shlb
xchg
aam
pop
mov
cli
clc
sub
inc
outsl
mov
movsb
addb
cmp
mov
xchg
in
xchg
clc
push
xor
shll
inc
addr16
ret
les
or
rcr
xchg
jmp
push
fisubl
iret
in
les
jns
nop
sub
stos
gs
ficompl
push
out
xor
xchg
cmp
and
scas
or
out
incb
ja
sub
pop
lret
mov
imul
out
mov
xor
jo
xor
bound
push
pop
mov
mov
jle
jmp
push
add
sar
jnp
fadd
aas
shrl
lret
add
hlt
push
lahf
scas
inc
push
jns
push
sbb
leave
sub
push
sbb
sub
lods
addl
xchg
decl
nop
or
push
push
test
pop
lea
sub
into
and
pop
fidivs
in
shl
and
xchg
sbb
pushf
leave
and
or
xor
imul
pop
mov
push
cmp
out
pop
test
cmp
cli
push
test
es
push
sub
and
outsb
lods
aas
aaa
push
xchg
in
test
movsl
dec
sahf
push
rclb
lret
das
pop
adc
xchg
jecxz
loop
pusha
push
jns
and
test
rorb
mov
jbe
mov
cmp
or
cmp
dec
cltd
jge
xchg
inc
pop
and
sub
mov
sti
jmp
test
ljmp
repnz
stos
pop
dec
test
sbb
sub
adc
pmulhuw
jp
mov
fs
xor
outsl
ja
fucomp
repz
sub
pusha
sbb
repnz
lods
mov
jns
cmp
xor
mov
clc
mov
jno
outsl
pop
lods
add
cmp
inc
mov
sti
add
inc
out
inc
shll
mov
insl
sbb
fs
and
movsb
fdivl
push
cs
adc
add
ds
je
xor
in
mov
rcrb
cmp
je
sub
add
andl
movsb
test
push
in
psubsb
pop
pop
push
fwait
mov
daa
inc
push
push
imul
sub
lahf
test
stos
push
mov
mov
inc
ud2
pop
ds
mov
in
and
cmc
mov
cli
cmp
rcrb
xchg
mov
adcb
lea
movsl
ja
pop
cld
pop
jle
dec
ljmp
adc
sbbb
mov
mov
das
in
lock
push
ret
mov
xchg
imul
mov
in
flds
mov
lcall
test
push
lods
mov
dec
push
cmpsb
mov
pop
das
leave
sub
jmp
adc
xor
imul
push
fcoml
push
lock
push
cmp
es
test
jp
adcl
iret
scas
in
out
push
scas
inc
inc
mov
dec
inc
bound
inc
lcall
pusha
flds
mov
in
outsb
pop
sbb
lcall
popf
int
in
js
and
and
cmc
sti
mov
test
xor
shlb
movsl
test
rolb
fucom
xor
imul
fadds
daa
fstl
xor
mov
fwait
rclb
fs
testl
mov
sbb
add
loop
mov
mov
or
dec
out
sub
ja
test
scas
mov
sbb
fdivrl
fdivl
orb
inc
out
out
mov
inc
xorl
gs
aad
sub
insl
push
sahf
ficoml
push
clc
dec
into
testb
in
mov
ss
or
repnz
outsl
std
sbb
scas
adc
scas
lcall
xlat
add
imul
and
cld
ret
jae
push
out
test
icebp
adc
rcll
dec
dec
cmp
int
xchg
jae
loopne,pt
or
xchg
mov
xchg
scas
lcall
mov
sbb
or
lods
lahf
pop
push
scas
jo
add
ja
mov
inc
dec
fcoms
gs
mov
cmpsb
push
ret
sub
xchg
ja
pusha
dec
xchg
rep
adc
enter
ret
stos
shlb
test
popa
shrl
push
sub
aas
repnz
and
mov
mov
pop
pushf
call
ss
test
mov
pusha
pop
pop
ss
rorl
sub
repz
dec
mov
lds
out
add
push
or
sbbb
stc
cwtl
xchg
mov
outsb
adc
add
inc
xchg
in
and
mov
add
dec
popl
and
test
sub
imul
mov
pop
and
mov
repnz
mov
js
xor
jp
jp
cmp
dec
insb
imul
pop
ret
test
cmp
push
cmp
outsl
sbb
xor
push
dec
xlat
fucomip
pop
lret
fs
or
lods
mov
xchg
mov
dec
xchg
add
dec
or
lds
mov
sbb
loope
push
inc
and
imul
mov
outsb
shlb
inc
cmpb
cwtl
adc
push
out
ss
adc
roll
push
or
rcrl
push
stos
dec
scas
stos
dec
or
or
push
and
xor
stc
pop
pop
jmp
fucomp
testb
outsl
or
stc
sti
and
cwtl
scas
scas
movsl
orl
cmpsl
aad
cli
inc
int3
mov
or
rorb
je
dec
mov
enter
dec
lea
rol
dec
xor
push
sbb
or
mov
int
jg
inc
rcll
cmp
pop
pop
fists
into
stc
cmp
movsb
cmp
sub
cmp
mov
lret
dec
mov
gs
pushf
sbb
out
sbb
jb
js
mov
push
pop
aas
icebp
adc
lds
fs
or
loope
stos
out
inc
adc
sbb
in
imul
push
pusha
divl
mov
pop
push
xchg
fs
sarl
lods
xor
es
daa
mov
or
mov
cmp
pop
fisubrl
in
das
out
leave
in
icebp
into
in
sti
movq
or
imul
dec
adc
es
cmp
inc
stos
daa
push
push
mov
fisttps
and
xchg
add
iret
lret
or
cmc
notl
push
jecxz
xor
aaa
jb
in
pushf
jle
popa
out
insb
mov
loop
stos
fs
roll
cmpsl
mov
and
mov
into
lea
fdivrs
xchg
adc
pop
lds
jmp
sub
dec
mov
fwait
pop
cmc
push
int3
movsb
dec
and
inc
mov
mov
xlat
xchg
and
lods
fsts
dec
rcr
mov
cli
dec
inc
ret
int3
lds
jp
mov
pop
addr16
mov
lea
and
sbb
push
fs
cmp
insb
lods
roll
add
pop
out
xchg
aad
lods
cmp
pushf
push
sbb
into
cmp
cmp
jb
cltd
enter
add
or
sbb
out
mov
mov
les
push
shlb
jmp
pop
xor
dec
pop
sbb
or
int3
outsb
dec
mov
mov
shll
pop
ret
add
or
shrb
in
addl
and
mov
negb
lock
in
or
fs
mov
test
aaa
xor
push
mov
inc
xchg
mov
insl
loop
cwtl
inc
jb
xchg
test
test
scas
movsb
test
cmpsl
aad
or
repnz
mov
inc
imul
fucomp
test
scas
imul
ficompl
ret
dec
cmp
and
dec
fyl2xp1
ja
in
mov
ret
pop
repz
xlat
xlat
push
xor
push
imul
lds
or
cmpsl
adc
lret
mov
mov
cld
repz
add
jns
mov
fsubrs
fucomi
sub
cli
mov
xor
and
fmul
jb
test
lahf
adc
jo
pushf
push
fnsave
fnstsw
int
cwtl
scas
jecxz
mov
xchg
bnd
push
scas
or
hlt
out
fbld
stos
xchg
decl
inc
out
add
mov
push
test
adc
loopne
push
mov
fwait
pop
dec
addr16
sub
lods
cmpsl
push
call
xchg
jb
pop
cmp
scas
cld
inc
push
pop
pop
xchg
in
and
sbb
jns
lea
cmp
add
cltd
adc
xchg
lret
test
int3
scas
mov
xor
repz
mov
lods
mov
adc
jle
mov
es
das
notl
test
mov
fldl
loop
pop
lock
dec
nop
mov
fbld
leave
movsb
notb
lahf
or
sub
stc
ja
mov
mov
sbb
mov
push
fidivrs
std
shl
dec
test
imull
aad
aaa
dec
jb
in
int
xchg
imul
push
lret
pop
pop
test
ficomps
pop
inc
idivb
jo
xchg
mov
lahf
push
out
rorb
mov
cmp
pushl
lret
and
popa
test
and
icebp
mov
jle
mov
and
dec
into
sbb
mov
imul
in
fadd
adc
pop
fists
sub
insl
pop
cmp
icebp
adc
shlb
data16
out
add
aam
popf
jo
loopne
loopne
lods
jne
mov
ss
jp
call
xchg
cs
mov
cli
push
orl
fistpll
inc
rorb
cld
test
xorl
aad
ss
subl
add
jg
shlb
incb
test
ds
cmp
inc
adc
es
out
mov
cwtl
or
mov
inc
pusha
data16
data16
int
rcrl
push
incl
pop
mov
xchg
inc
dec
lahf
sub
xchg
push
pop
inc
scas
orl
aas
push
clc
cltd
push
cmc
push
js
sbb
cld
sahf
or
cltd
push
pop
cmp
and
sub
aad
fcmove
cmp
std
aam
loop
imul
rcr
lods
pop
in
sbb
scas
xchg
mov
dec
sub
mov
push
pop
es
cmp
push
bnd
scas
or
and
mov
or
mov
movsb
fs
cmpsl
adc
or
add
add
mov
jge
push
gs
xor
fs
adc
std
insl
lret
mov
dec
mov
sahf
xor
shlb
adc
xor
call
imul
sbb
xor
aaa
das
jne
ss
idiv
fs
pusha
xor
mov
aam
sbb
adc
leave
adc
adc
adc
out
cmp
aas
mov
fiaddl
mov
push
lcall
andb
loopne
mov
inc
xorl
fstl
jle
outsl
push
jbe
mov
insl
pop
jmp
xchg
filds
pop
or
rcr
xor
push
shlb
dec
cmp
or
mov
dec
mov
aaa
sarb
xor
add
adc
xor
orl
test
stos
test
shll
loop
int3
cld
out
and
push
jmp
test
pop
or
jns
mov
repz
iret
or
jp
fdivp
fmul
scas
lods
inc
xchg
dec
int
nop
popf
mov
xchg
jmp
sub
aaa
adc
push
fdivl
sbb
jmp
or
mull
lods
int3
cmp
jl
popa
push
int3
mov
rcrb
push
in
cmc
or
lds
mov
mov
xor
xchg
xor
sti
clc
inc
icebp
movsb
add
jo
mov
sub
push
inc
mov
ljmp
inc
pop
out
cmp
stc
cmpsb
mov
push
or
and
pop
cmc
xchg
inc
jne
js
arpl
mov
and
addb
fdivrs
scas
mov
cmp
and
push
lock
or
push
and
pop
adc
aam
shlb
xchg
out
xorb
add
add
dec
outsl
push
jbe
adc
mov
rol
lea
dec
push
xchg
mov
xchg
aad
mov
inc
std
bound
jge
jle
pop
leave
ret
push
mov
movsl
xor
fiadds
loop
xlat
adc
jp
mov
jl
leave
add
dec
inc
push
lahf
or
lds
leave
out
test
cmpsb
fs
cwtl
sbb
cmc
jmp
dec
sub
test
clc
pusha
cs
xchg
das
and
and
pop
sbb
cli
mov
enter
sub
rcl
jp
cmp
inc
insl
mov
dec
nop
xor
std
les
dec
icebp
mov
mov
mov
fidivrs
icebp
repz
jmp
mov
aad
imul
imull
pop
or
cmpsb
in
sub
pop
mov
into
xchg
mov
ja
scas
loop
fnstcw
or
fcmovnu
outsl
mov
sbbb
loope
jg
or
jecxz
outsl
push
inc
in
lgs
out
sub
cmp
fnstenv
mov
dec
jg
and
mov
jnp
xchg
pop
es
mov
dec
daa
and
adcb
gs
out
cmp
jle
add
sub
mov
sbb
repnz
fs
dec
je
nop
fildl
mov
push
loopne
xor
int3
and
data16
push
sti
insl
inc
cmc
sub
sahf
xchg
pop
mov
test
cmp
cmp
mov
repz
mov
mov
push
inc
xor
in
sbb
inc
or
push
dec
pop
sub
cwtl
movl
or
std
ret
cmp
inc
test
sahf
or
mov
shll
mov
je
les
pop
divb
sbbl
pushl
sbbl
insb
icebp
dec
test
pop
sbb
ret
stos
ffree
mov
jmp
in
mov
mov
stos
inc
add
xchg
push
xor
dec
mov
dec
jge
adc
subl
xchg
mov
cmpsb
pop
jnp
xor
lock
dec
dec
pop
test
subl
repnz
stos
stc
and
xor
add
loop
ficomps
fstl
push
add
mov
pushf
jnp
sbb
sub
add
js
xchg
pop
xor
xor
and
push
push
out
push
jnp
std
movsl
into
lret
xor
sbb
adc
mov
orb
sbb
out
or
lret
inc
lds
or
jae
fcomps
sbb
rcl
or
mov
sub
sub
mov
aas
xlat
jp
add
js
xchg
cmp
in
std
xor
push
gs
sbb
push
xchg
icebp
rcrl
pop
mov
and
sub
inc
addl
jns
aas
hlt
dec
dec
insb
imul
incl
and
add
push
push
rclb
addb
ror
les
hlt
pop
push
nop
jb
cmpsb
cmp
pop
loop
jns
call
addb
pop
adc
add
add
mov
push
dec
cmp
sahf
scas
pop
sbb
ljmp
les
call
fcmove
out
loopne
xchg
jb
or
cmp
add
arpl
incb
inc
sub
pop
xor
pop
and
std
pop
mov
push
and
gs
stos
xor
rclb
test
or
and
push
imul
sbb
dec
stc
test
shl
ret
stos
and
dec
adc
enter
mov
sub
rcrl
mov
lahf
outsb
pop
rclb
les
test
scas
cmpsl
test
and
cwtl
sbb
push
scas
adc
cli
jp
rol
test
imul
xchg
jge
mov
push
cld
cltd
sbb
filds
mov
xchg
pop
push
mov
outsl
fdivp
and
lret
or
pop
pop
xchg
addr16
pop
in
inc
mov
loop
mov
mov
loopne
je
xor
mov
psubb
gs
push
mov
xchg
ljmp
mov
pop
arpl
notl
jne
mov
push
or
fdivl
add
pushf
adc
cmp
dec
andl
aad
call
std
leave
sbb
cmp
ja
mov
jae
stos
jmp
pusha
adc
push
cmpsb
adc
dec
xchg
sub
push
ss
mov
ss
rclb
adcb
lahf
mov
mov
adc
or
push
les
sbb
sbb
mov
dec
stos
push
rclb
and
adc
lret
into
cltd
insb
repnz
fimull
lea
mov
sub
in
gs
inc
dec
pop
out
push
cmp
icebp
into
fs
mov
movsb
not
js
rcrb
sub
flds
fs
and
cmp
arpl
sub
hlt
aas
imul
sarl
mov
test
lahf
in
pushf
cmp
sbb
sbb
mov
daa
or
js
xchg
mov
pop
sub
pop
lods
or
pop
add
stos
out
inc
or
mov
jb
ds
outsb
js
fcoms
fnsave
gs
rclb
push
sahf
or
mov
cld
data16
sub
mulb
cmpsl
aad
sub
and
sub
inc
ficompl
sbb
sub
push
xchg
clc
adc
out
jae
sbb
js
mov
xor
pop
imul
arpl
and
imul
icebp
add
add
in
adc
movsl
leave
ljmp
jp
test
pop
push
adc
pop
xchg
mov
rcr
mov
setl
in
ljmp
jb
sbb
fdivl
lcall
pushf
sub
jb
repz
push
pusha
xchg
sub
cmpsb
xchg
sub
loopne
sarl
and
les
fisttpl
add
pop
mov
subb
xchg
cmp
jb
xor
mov
push
cmpsb
adc
pusha
cmp
gs
lret
std
mov
add
xchg
stos
cmp
jb
lds
test
mov
mov
adc
push
jae
dec
xchg
or
jmp
dec
rcll
mov
faddp
scas
fdivrl
push
sub
les
cmp
push
mov
test
lods
pop
add
dec
mov
jle
mov
lahf
pop
or
scas
xchg
filds
loop
enter
xor
cmp
cmpsl
fs
rcrl
xchg
stos
dec
aas
adc
xchg
sub
xorl
iret
pop
lods
lret
iret
lea
nop
mov
addr16
shll
fldenv
dec
lcall
test
mov
pushf
or
loope
push
xchg
cmpsl
or
push
imulb
pop
push
lods
enter
into
scas
addr16
pop
push
jb
pop
cmc
pop
dec
js
lahf
mov
cmp
pop
dec
imul
and
das
xlat
and
mov
cwtl
inc
adc
loop
jnp
or
lret
inc
mov
fs
jns
inc
imul
loopne
sahf
add
sub
stc
fwait
ret
mov
loop
jnp
dec
pushf
aam
mov
jno
and
inc
cld
xor
inc
mov
enter
jbe
dec
pop
fs
cmp
fmulp
test
mov
pop
xchg
cltd
movb
cltd
inc
enter
xchg
bnd
and
daa
sahf
fmul
fwait
test
xor
lods
mov
andl
sbb
nop
xor
or
sub
das
shlb
push
xor
and
fwait
adc
pop
int3
sub
push
shl
jp
dec
xchg
call
imul
sub
mov
loop
shrl
sbb
bound
push
xchg
push
jbe
adc
pop
inc
rcll
aam
rorl
xchg
stos
outsl
cli
or
mov
push
xchg
gs
push
test
and
mov
or
jne
in
daa
rol
mov
and
mov
fiadds
cwtl
and
mov
or
and
jp
inc
shrb
add
outsb
loope
jl
test
push
fwait
pusha
dec
out
and
xor
addr16
sub
xchg
mov
or
fidivl
mov
mov
sbb
scas
dec
fwait
aas
fnsave
xor
cli
push
sbb
xchg
xchg
cmp
hlt
mov
jb
jnp
mov
push
or
mov
sbb
aam
cmp
mov
les
cmp
ret
jmp
mov
pop
sub
fistpll
out
mov
out
pusha
jle
sbb
fsubrs
pop
sbb
enter
mov
lret
mov
sbb
outsb
push
xchg
lcall
call
add
inc
mov
mov
pop
leave
sbb
or
dec
icebp
add
aam
es
jo
outsl
shl
jl
dec
mov
inc
fwait
or
lea
sbb
mov
jmp
pop
inc
in
lahf
jnp
xchg
aaa
lret
jmp
xchg
mov
dec
in
into
mov
cmpsl
sbb
mov
jno
les
inc
loop
mov
pusha
xchg
cmp
popa
out
push
xlat
jbe
xor
loop
sub
pop
js
imul
xchg
stc
fiadds
icebp
mov
stos
mov
jge
scas
les
pop
or
shll
testl
lret
jnp
xor
or
pop
sbb
fsubrs
or
dec
add
stos
pop
push
movsl
stos
inc
hlt
enter
adc
enter
orb
rcr
inc
scas
xchg
mov
dec
shl
mov
and
imul
cmp
dec
sub
add
xchg
cwtl
or
push
cmp
lods
leave
mov
mov
xor
jae
faddp
jbe
jno
push
push
jmp
xchg
jb
shrb
call
dec
xor
rorl
leave
sub
mov
mov
test
roll
mov
push
and
push
jno
ljmp
mov
adcb
scas
sbb
adc
lretw
xchg
cmp
pushf
push
sub
out
adc
xchg
sub
das
and
scas
add
jmp
mov
mov
cmp
push
mov
arpl
pop
mov
fwait
lods
xor
or
add
sbb
jae
je
and
out
or
ret
jecxz
and
pop
adc
sbb
mov
shll
icebp
xor
dec
xor
mov
jp
out
jle
xor
cwtl
xchg
repz
mov
adc
outsl
xor
aad
jae
cmp
fdivrs
daa
sub
push
popf
cmp
add
and
lods
orl
repz
scas
mov
cwtl
add
loope
cltd
fiaddl
mov
cmp
aam
mov
sbb
rcrb
push
ljmp
jle
mov
jno
add
fisttpll
and
mov
aaa
stc
stos
push
sbb
mov
adc
pop
inc
mov
adc
and
fsubrs
cmp
push
repz
pop
sbb
push
hlt
loopne
addb
jecxz
xor
xchg
aaa
adc
cmp
cs
aam
imul
push
xorb
lods
push
sub
pop
mov
imul
xlat
mov
lods
jge
and
std
daa
inc
out
fmul
mov
rol
adc
add
dec
stos
or
call
and
xor
test
inc
cs
test
ret
negb
push
mov
iret
ljmp
add
fwait
in
xchg
cmp
sub
loop
cmp
shrb
jl
sbb
scas
movl
test
xor
int3
mov
fisttps
cmpsb
mov
mov
cli
cmp
cld
adc
rorl
and
sbb
outsb
jp
adc
xorb
mov
or
dec
jnp
gs
fsub
xchg
xor
add
push
shll
cli
repnz
dec
scas
fistps
test
mov
jb
mov
ret
dec
xor
mov
addr16
sbb
push
roll
icebp
push
mov
jecxz
pop
and
aaa
add
cli
jge
or
mov
or
or
sub
or
jbe
ret
mov
lret
ljmp
imul
out
lods
mov
mov
mov
jnp
xchg
imul
in
dec
adc
ret
out
stos
in
cmp
add
add
lret
aad
mov
fwait
pop
ret
sub
jo
lcall
fucomi
sub
inc
cmpsl
sahf
lock
xor
jmp
pushf
mov
sub
xchg
cltd
cli
fnstsw
cmp
adc
scas
push
roll
inc
in
jp
rol
in
fmull
mov
cli
out
dec
lods
repnz
push
test
sti
mov
cld
outsl
and
jmp
orl
dec
push
nop
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
inc
push
mov
int
bound
inc
test
mov
dec
mov
adcl
fwait
jb
das
inc
push
jns
pop
stc
xchg
testl
mov
call
inc
sbb
push
mov
cmp
jle
enter
mov
push
lds
add
cltd
dec
mov
cltd
or
sbb
clc
jmp
jp
pop
or
jg
pop
stos
movb
jae
xor
cltd
cs
ret
outsb
xor
into
jp
mov
lcall
cmp
rcrb
or
jno
loope
sub
popa
or
scas
pop
pop
ret
sub
xchg
scas
adc
or
xor
push
jno
sbb
mov
xor
rcrl
mov
xchg
adc
popf
in
js
push
lcall
jl
xchg
jb
fdivr
adc
outsb
fninit
mov
cmp
pop
pop
jmp
pop
les
ficomps
push
arpl
adc
push
sbb
out
jb
sub
jbe
js
lods
mov
in
fnclex
sub
and
push
push
and
aam
and
fnstenv
xor
inc
icebp
mov
aam
cltd
inc
adc
xor
addr16
ds
rcrb
xor
loope
out
inc
lds
or
daa
inc
ret
mov
repnz
xchg
cwtl
xchg
xchg
cmp
fistl
scas
sub
sti
gs
incl
into
xchg
test
xchg
dec
xchg
cs
push
mov
mov
mov
pop
popf
lds
cmp
fstpt
jnp
jle
les
leave
push
push
adc
push
push
inc
clc
outsb
and
adc
xchg
mov
mov
lret
fwait
adc
mov
jb
mov
mov
lea
idivb
lahf
pop
out
sub
xchg
pusha
xor
sahf
pop
imul
das
cmpsb
aam
stc
fwait
push
mov
pop
xor
fisttps
cmpsb
xorl
ds
fwait
aaa
pop
sub
xchg
lahf
xor
ret
dec
and
mov
inc
sarb
loope
js
sbb
pop
adc
jle
dec
shlb
mov
mov
adc
and
test
enter
fdivrl
sbb
sahf
inc
in
ret
shll
lods
push
pop
jmp
cltd
lret
dec
xor
imul
and
push
jno
fidivrs
and
mov
or
mov
aad
cwtl
hlt
jb
or
xchg
and
inc
and
mov
push
sbb
push
popa
jge
sub
and
pop
adc
shll
xchg
test
aas
sub
jp
mov
arpl
adc
dec
mov
add
test
add
cmp
cmp
shll
ret
push
pop
or
xorb
sub
or
dec
cld
and
sub
stos
mov
push
cltd
cmp
insl
add
xor
popa
data16
enter
push
jecxz
xchg
mov
sub
dec
or
adc
lret
pop
aas
fwait
add
scas
clc
out
pusha
pusha
fadds
out
add
ss
dec
cmpsl
icebp
pop
xchg
pop
sbb
loop
aad
movsl
shlb
dec
pop
xchg
lea
add
int3
shlb
jcxz
bound
push
or
mov
push
and
repnz
adc
xor
daa
out
mov
repnz
daa
add
cwtl
mov
push
and
and
in
clc
hlt
sbb
or
out
mov
sbb
daa
cld
iret
fsubrs
fwait
jmp
sub
das
mov
pushf
insl
stc
je
scas
sti
jg
adc
cmp
push
jne
popa
in
ds
cmp
xchg
iret
or
mov
mov
imul
ljmp
cwtl
jae
sub
add
nop
sti
ds
adc
sahf
pushf
aaa
lcall
jae
and
sub
call
adc
arpl
cmc
in
pushf
xor
sbb
sbbl
js
sar
enter
pop
push
cmc
scas
dec
inc
aaa
in
ja
pop
mov
popf
sbb
xor
mov
into
cmc
rcrb
in
cli
xchg
xor
sub
mov
inc
aaa
pop
cmp
xor
call
nop
mov
jp
sub
add
bound
sbb
dec
inc
fs
stos
sbb
pusha
add
fildl
cmpsb
or
ss
cmp
mov
xlat
jl
cmp
jmp
int
lods
mov
xchg
sbb
inc
rcrl
add
into
sub
stos
push
icebp
add
das
cld
fldenv
mov
sub
fidivrl
xorl
xor
mov
leave
icebp
cmp
mov
mov
fwait
fwait
inc
sahf
inc
adc
int
ret
ret
sub
outsl
and
fdiv
sahf
in
xor
test
mov
sub
sub
mov
push
mov
cmpsl
dec
scas
out
push
mov
add
xchg
cli
push
mov
mov
mov
pop
mov
mov
hlt
in
xchg
push
xor
loope
or
and
out
dec
jp
or
jns
ss
jo
push
clc
loope
mov
jne
arpl
js
rcrb
or
mov
ds
and
lods
mov
test
pusha
into
push
lcall
cmp
push
enter
inc
add
flds
mov
mov
xor
clc
cld
mov
jp
xor
dec
xchg
cld
mov
adcb
push
jb
inc
mov
xchg
jbe
mov
cmp
sub
mov
xor
lret
testl
and
arpl
cmpsl
call
data16
xchg
bound
aam
les
ffree
xor
addr16
push
push
in
dec
inc
inc
adc
mov
inc
add
sbb
rcrb
ds
mov
cmp
sbb
lret
pop
je
lods
in
xchg
inc
cli
imul
xor
and
push
sub
xor
jb
out
in
jp
mov
out
push
cld
das
jp
cld
lods
jmp
lea
enter
pop
and
jmp
ds
mov
lahf
push
sub
repnz
push
mov
mov
dec
hlt
dec
repz
and
lret
xchg
aas
dec
xchg
popf
and
aas
mov
rol
fwait
pop
jecxz
movsb
ret
mov
sbbb
mov
add
inc
jae
imul
and
sbb
fiaddl
aaa
and
aaa
xorl
enter
rclb
or
out
xlat
into
jae
outsb
xchg
into
inc
out
xchg
add
decb
rolb
push
or
jle
adc
mov
push
add
xchg
xor
mov
cli
adc
scas
fcoml
adcb
mov
cmp
inc
hlt
push
int
pop
pop
pop
dec
xrelease
pop
das
push
and
cmp
mov
mov
mov
outsl
hlt
dec
daa
sbb
addr16
rcll
push
ds
ds
push
xchg
inc
cs
cli
data16
cltd
xchg
fwait
test
adc
dec
cmp
mov
test
or
or
repz
add
mov
test
movb
mov
or
rorb
pop
xchg
dec
inc
gs
xchg
pushf
fcmovnbe
jns
leave
into
sub
je
rorl
xchg
sub
pop
stc
test
push
gs
jbe
pushf
xchg
sbbb
jbe
daa
xor
sbb
fdiv
loopne
inc
out
nop
mov
or
cmp
std
inc
push
or
dec
insl
jb
stc
clc
xor
test
and
rol
subb
addr16
loopne
mov
push
call
out
inc
xchg
add
push
fsubrs
xchg
int
cmp
cmp
aaa
scas
arpl
xchg
icebp
jecxz
cmp
jecxz
xchg
adc
adc
jl
icebp
inc
imul
iret
aaa
das
lret
dec
mov
adc
push
repnz
push
test
shrb
inc
shlb
out
jns
cmp
rol
mov
xor
pop
push
imul
leave
cltd
stos
cmp
mov
lcall
js
pop
mov
mov
imul
add
push
sbb
xor
ds
movsb
or
lods
imul
mov
mov
sarb
lahf
outsl
fistpl
add
push
fcomps
daa
je
jge
or
insb
jp
jo
pushf
imul
dec
icebp
ss
push
ljmp
fwait
mov
mov
xchg
leave
adc
sti
jl
cmp
or
mov
pop
xchg
not
xor
clc
into
jmp
pop
std
or
jp
daa
mov
push
iret
pop
jae
inc
repnz
push
ret
inc
add
movsl
dec
lcall
mov
mov
mov
dec
cmp
and
jecxz
ffree
std
mov
dec
out
mov
inc
insw
andl
inc
jge
test
mov
mov
jecxz
dec
jne
xchg
push
mov
pop
in
mov
shl
cs
inc
mov
aad
psubusw
add
cmpb
pop
pop
mov
or
addr16
cwtl
fwait
push
push
call
das
out
jge
out
mov
test
dec
xchg
mov
icebp
vmread
test
mov
jnp
sbb
mov
pop
loopne
out
and
fld
shrl
filds
xchg
mov
scas
dec
repz
push
test
bound
mov
mov
cmpsl
xor
popf
adc
aad
pop
adc
dec
ds
cmp
mov
cwtl
push
sarb
xchg
iret
dec
inc
lea
adc
and
movsb
inc
fisubs
dec
cmc
in
shll
and
sbb
test
xor
imul
mov
insl
add
bound
leave
mov
aas
cmpsb
int
lcall
out
in
jecxz
out
dec
stos
inc
call
mov
rclb
bound
insl
mov
ja
mov
dec
add
cmp
orl
xor
sbb
mov
jge
inc
loop
and
ja
and
imul
xor
sub
sub
jp
shl
mov
and
jp
adcb
xlat
popa
das
mov
filds
std
cmpsb
int
je
pop
in
arpl
add
add
out
stos
rol
fcomps
cmpsb
and
push
adc
mov
in
pop
popa
jno
ja
pop
in
inc
jl
adc
icebp
ja
xchg
adc
mov
ja
frstor
leave
popw
incb
test
push
out
ja
dec
pop
outsl
and
pop
mov
fwait
lret
xchg
sub
imul
push
loopne
xchg
lret
mov
dec
iret
ljmp
pushl
lea
sub
mov
mov
sbb
mov
cmc
pop
jmp
test
xor
subb
loope
out
fninit
int3
std
jne
sub
lock
mov
push
loopne
je
jg
pop
mov
push
jge
dec
xlat
or
ret
push
dec
pop
pop
push
outsb
push
push
test
cmp
hlt
push
and
jmp
iretw
mov
mov
mov
sub
orb
inc
and
sbb
test
cltd
out
in
push
imul
jne
xor
mov
push
and
rcll
xchg
pop
jno
xchg
aam
jb
push
in
xchg
pop
and
xchg
sub
jne
popf
mov
out
sahf
cmpsl
and
popf
mov
fnstcw
mov
cmp
mov
jb
call
inc
movsb
or
cmpsb
test
fsubs
sbb
nop
mov
push
arpl
ret
jl
jmp
push
xor
loopne
dec
push
mov
jle
cmp
repnz
mov
sbb
rorb
xchg
bound
movsb
pop
popf
cmpsb
shll
fs
loope
das
imull
and
mov
xchg
daa
cltd
addr16
mov
orl
mov
sti
cld
mov
and
sti
in
icebp
loopne
rcrl
xor
movsl
sub
stos
cs
jb
xor
popf
movsb
jecxz
mov
dec
mov
adc
xor
mov
add
cmp
sub
adc
jo
dec
sbb
mov
xchg
cmpl
cwtl
pop
add
sti
adc
push
add
mov
pusha
je
sub
sahf
sub
aaa
icebp
nop
out
mov
in
jmp
adc
jl
cmp
daa
test
lret
jns
mov
pop
int
jecxz
mov
push
loope
out
lcall
xchg
je
addr16
pushf
cmp
bound
and
jo
xchg
dec
lods
mov
and
je
xchg
mov
fsubrl
shlb
call
inc
std
imul
aam
add
aad
push
xor
test
pushf
push
push
decb
fdivl
cmp
mov
sub
xor
or
and
mov
in
call
imul
addr16
shrb
xor
add
add
inc
test
cmp
adc
lahf
mov
lret
and
mul
out
pop
add
shll
add
mov
lods
mov
stos
dec
sbb
pop
cmp
shrb
xchg
jg
xchg
into
aaa
pop
int3
add
mov
sbb
sbb
jb
test
shrl
cmp
test
xor
stos
fcmovbe
movsb
sub
dec
pop
pusha
mov
dec
in
jge
outsl
adc
dec
ret
pop
iret
jp
hlt
pop
jg
push
add
pop
push
add
into
push
add
jg
jae
inc
bnd
cmp
pushf
sti
sbb
add
sub
jmp
cld
out
inc
leave
jno
std
sub
xlat
movsb
fsts
dec
ja
dec
loop
push
call
cli
cmpsl
and
lods
xlat
adc
stos
std
lret
out
jg
push
and
cmp
mov
sbbl
pop
fstps
movsb
push
loope
ret
xchg
xchg
mov
repz
xor
std
movsl
inc
jo
ss
pop
sbb
xchg
cs
push
sub
mov
mov
decb
dec
test
mov
lods
sbb
sbb
fstpl
sbb
sarl
inc
mov
lret
enter
adc
aam
int
mov
mov
insl
mov
xor
sahf
xor
movl
mov
in
xchg
imul
movsl
out
js
in
rolb
sbb
dec
mov
aaa
rorl
in
xchg
dec
fcom
fisubrs
push
cli
push
fisubs
jg
addr16
sbb
push
dec
scas
imul
inc
inc
cli
jge
mov
inc
dec
stc
or
adc
in
adc
jg
mov
pop
pop
and
lds
mov
jns
movsl
xor
xor
mov
stos
cmc
dec
stos
sbb
lods
ret
nop
test
inc
adc
movsl
cli
mulb
xchg
mov
pop
xor
in
mov
and
adc
adc
and
mulb
lret
dec
psrlq
jge
fs
mov
fwait
stos
adc
add
les
in
mov
sbb
adc
mov
cmp
into
shll
cld
in
sub
clc
dec
inc
in
es
push
cmp
add
dec
mov
xor
popa
push
insb
incb
pop
ffreep
repz
cmp
mov
jp
fwait
inc
adc
cmp
mov
and
ja
dec
pusha
push
cmp
jbe
push
and
push
int3
incb
imul
xchg
scas
fwait
stos
lods
jp
mov
push
lahf
add
or
mov
stc
or
lret
and
dec
invd
push
lret
or
pushf
inc
push
ds
leave
mov
xor
pop
mov
lea
test
mov
dec
jnp
jbe
mov
inc
in
out
out
frndint
outsb
add
fs
xor
stc
mov
mov
pop
inc
leave
add
fidivrs
mov
andl
scas
out
int3
xchg
or
sub
mov
in
bndstx
loope
pushf
inc
scas
lods
and
mov
or
lock
and
vcomiss
not
jmp
mov
into
mov
push
lea
lahf
and
movsl
stc
or
das
push
out
jl
xor
jne
and
lahf
test
mov
pop
ret
movsl
fisubrs
cli
add
push
xchg
lea
adc
push
hlt
jno
push
xchg
icebp
mov
clc
adc
stos
push
push
aam
dec
rcrb
adc
inc
adc
daa
jp
and
lods
fimuls
adc
or
xchg
lock
jmp
data16
fisubl
xor
jge
add
mov
pop
mov
in
js
push
imull
jle
popa
jb
xor
sub
push
iret
iret
es
jb
rcrl
pop
pop
xchg
cs
out
sti
sar
xor
ljmp
add
fstl
add
cmp
fcmovnu
push
sub
insb
jmp
or
inc
enter
shrb
enter
je
pop
cwtl
or
push
repz
adc
jmp
hlt
iret
hlt
test
mov
orl
xchg
loope
pop
sub
test
fdiv
int3
jg
call
adc
sub
push
push
xchg
rcrb
sub
insb
arpl
ss
xor
cmp
loope
cmpsl
sub
insl
pusha
ss
sub
inc
xchg
push
insb
push
inc
cltd
mov
adc
pop
enter
icebp
and
push
mov
incb
and
cmpsl
mov
sbb
mov
fidivl
jb
dec
inc
or
add
mov
inc
jle
sbb
je
xor
fildl
mov
lea
or
lods
ret
and
nop
loopne
cs
push
push
mov
cli
js
out
test
mov
psrld
jecxz
in
mov
mov
stos
out
jo
or
pop
xor
es
push
cmpsl
mov
out
loope
iret
xlat
inc
js
mov
out
cmpsb
stos
mul
rcll
outsl
out
push
xchg
jmp
dec
push
addr16
xchg
inc
orb
pop
stos
stc
mov
fnstsw
inc
push
jg
push
fwait
iret
out
mov
and
or
ret
jl
dec
outsb
xchg
adc
outsb
add
dec
cld
or
into
xchg
arpl
adc
mov
inc
xor
fisubrl
cmpsl
xor
stos
das
lcall
fmull
fs
add
dec
ljmp
jl
dec
mov
pop
insl
pop
xchg
fwait
cmp
push
dec
add
pop
into
xchg
fbstp
cltd
out
scas
mov
sub
pop
push
cld
mov
in
sarl
xchg
or
or
cmp
inc
xchg
add
pushf
popa
xchg
das
addr16
sbb
ss
ja
aas
arpl
test
dec
ss
sbb
sbb
jmp
ljmp
cmp
mov
cmp
sub
shlb
call
loopne
push
loope
mov
test
sarb
push
out
jb
mov
out
aas
lret
or
pop
push
in
mov
popa
jge
js
or
inc
dec
jl
mov
mov
cmp
mov
sbb
es
lock
mov
in
sub
xchg
scas
scas
lret
addr16
cmp
mov
cmpsb
dec
cli
push
dec
jne
pop
cmc
sub
cmp
mov
test
jl
roll
push
mov
loop
sbbb
ret
mov
add
or
inc
xchg
pop
jno
fcoms
push
dec
fiaddl
jmp
sbb
clc
adc
jns
dec
scas
jp
push
jae
mov
mov
ljmp
ror
mov
pop
jecxz
repnz
pop
xchg
lea
mov
pop
pop
push
and
lea
ret
dec
int
pop
cmc
icebp
inc
dec
in
push
mov
dec
aam
or
lock
push
mov
xor
or
shrb
jmp
mov
loop
jb
sarb
jg
pushf
mov
mov
test
sti
xor
inc
adc
cwtl
sub
iret
shll
adc
test
sbb
stos
loope
push
pop
lods
dec
pop
xchg
cmp
pop
dec
and
jmp
hlt
rcrl
fistl
add
sub
test
jl
fdivrp
jno
xchg
gs
or
movsl
cmp
mov
or
xor
push
adc
sub
sti
shrl
add
push
pop
sbb
mov
lods
arpl
insb
push
data16
sub
push
shll
pop
cmp
into
das
filds
push
mov
pop
in
inc
xor
out
push
stc
xchg
cmp
xchg
add
test
mov
dec
pop
jo
mov
sbb
mov
nop
jo
clc
mov
jle
lods
aad
xor
xor
int
adcb
dec
lahf
pusha
out
fcompl
sbb
xorb
cwtl
and
sub
xlat
lret
dec
test
imul
fisttpll
cmpsb
bound
mov
lahf
mov
rcrl
or
inc
or
jb
jae
cmpb
subl
xchg
push
jmp
pop
mov
ror
js
mov
aad
mov
in
daa
or
mov
cmpb
fidivrs
or
scas
mov
xor
jp
mov
mov
pop
sub
int3
mov
ja
mov
fwait
lods
loop
lock
loop
icebp
ret
ret
pop
cmpsl
js
jno
cli
imul
xchg
sub
fisttps
xchg
sub
inc
push
dec
jp
and
mov
inc
jmp
sahf
repnz
call
stos
add
inc
or
sub
add
in
sub
pop
jns
lcall
and
divl
inc
xor
ds
push
xchg
fsub
mov
mov
lds
push
mov
adc
pop
inc
pop
cmp
fisttps
adc
sbb
sbb
imul
xor
xchg
es
inc
mov
mov
out
push
sbb
jno
push
lret
push
add
adc
xorb
fdivr
mov
mov
xchg
xlat
in
into
or
push
jo
cli
adc
sub
icebp
push
cwtl
cmp
cltd
xchg
mov
or
js
lea
jmp
clc
inc
leave
in
push
jb
popf
cli
in
shrb
lock
popa
pop
fsubrl
imul
dec
mov
cmpsb
fnsave
in
jp
sbb
imul
push
cmp
mov
sahf
scas
mov
inc
ljmp
jl
loopne
gs
mov
aaa
jnp
dec
rdpmc
inc
pushf
jae
pop
dec
in
int3
mov
cli
adc
cmp
movzwl
and
stc
mov
je
xchg
add
mov
jo
roll
pop
dec
or
push
ss
pop
sub
iret
jecxz
mov
adc
mov
jl
or
mov
stc
adc
pop
mov
stos
add
ds
jmp
pop
jge
test
sbb
mov
imul
add
xchg
jb
mov
inc
add
or
out
in
mov
js
jb
push
sahf
mov
repz
mov
jg
les
into
push
outsb
mov
flds
pusha
sbb
adc
nop
fsubr
ficoms
lods
fstl
insb
sub
inc
and
int
loop
aam
push
inc
xor
ret
push
xor
add
dec
xchg
test
mov
sub
mov
add
imul
roll
test
pop
loopne
sbb
mov
inc
leave
dec
mov
fs
popl
cli
popf
test
imul
jne
mov
cwtl
push
xchg
mov
test
out
test
mov
test
frstor
jbe
adc
aad
mov
pop
fsubrp
mov
mov
jne
popf
sti
jg
push
stos
sbb
push
jae
ljmp
mov
pop
or
popa
stc
or
pop
xorb
jno
sbb
aad
sbb
imul
test
inc
aad
jle
sub
aas
movsb
pop
ljmp
adc
mov
lea
jnp
xchg
repnz
or
aad
inc
into
add
ss
insb
jns
add
mov
insl
ja
loope
or
xchg
insl
popa
sbb
pop
jge
jmp
orl
add
std
inc
lret
xchg
adc
cmp
mov
adc
outsb
xchg
fistl
cli
jns
shl
lret
addr16
ja
inc
mov
mov
sbb
jns
test
add
popf
jp
aas
sub
jl
loopne
shl
icebp
imull
cli
imul
mov
lock
cmp
pop
loope
in
xchg
out
dec
repz
lea
cmpl
fcomp
orl
in
push
pop
insl
add
mov
in
push
dec
add
cmc
mov
cltd
adc
inc
inc
mov
or
and
cli
pop
add
je
inc
sbb
push
mov
dec
cmp
repnz
and
fadds
cmpsl
xchg
mov
arpl
mov
leave
dec
inc
adc
cmpl
imul
arpl
mov
data16
push
fdivs
lods
sub
icebp
mov
shll
inc
mov
adc
xor
push
pop
xor
jno
mov
ja
imul
dec
out
push
popf
sub
mov
xchg
lods
pop
add
push
cli
xchg
cltd
xor
popf
lods
push
pop
dec
call
xor
out
dec
cmp
inc
movsl
adc
jp
pusha
fsubrp
cmpsl
add
mov
push
ret
icebp
xchg
imul
outsb
loop
movsb
lds
js
iret
mov
loope
js
xchg
jp
jno
sub
jecxz
push
mov
pusha
inc
int
sub
jbe
lea
dec
push
test
dec
xchg
xor
data16
jl
bound
pop
lock
icebp
es
out
xlat
call
popa
scas
sbbb
pop
dec
and
mov
mov
scas
mov
repnz
inc
andl
inc
push
dec
imulb
push
adc
pop
push
pusha
sub
mov
movl
push
in
push
rcl
js
mov
es
aam
lret
jmp
addr16
repnz
lock
sbb
inc
leave
lds
sbb
or
test
jge
rorl
lret
std
cmp
test
mov
inc
test
shll
jae
cmp
fwait
inc
pop
sbb
cmp
fildll
test
mov
cmp
std
ja
mov
outsb
loopne
cmp
adc
sub
std
jmp
movnti
xchg
mov
mov
or
dec
xchg
enter
pop
xlat
mov
xor
in
dec
add
mov
aam
sti
fdivp
jae
xchg
ds
out
dec
mov
jmp
jl
cmpsb
add
xchg
ret
xor
loopne
inc
shl
cwtl
iret
xorl
mov
cmp
rorb
cmp
xor
push
imul
cmp
int
inc
jno
cmp
jns,pt
repnz
push
repz
or
aaa
add
or
ljmp
sbb
cmpb
sar
in
mov
in
mov
pop
adc
clc
fucomi
mov
xchg
loopne
mov
shll
xchg
sbb
nop
hlt
fucom
aam
dec
in
adc
mov
imul
cmp
pop
call
jne
fwait
mov
xchg
fldl
sub
js
adc
fimull
and
mulb
test
adc
lret
sahf
adc
push
mov
stos
push
fnsetpm(287
leave
mov
scas
mov
jmp
inc
stc
pop
mov
and
lock
leave
cmp
sahf
cs
movsl
adc
and
das
jbe
xchg
rcrb
sbb
ficomps
jb
push
popf
dec
les
in
cs
loopne
jmp
and
test
mov
cmpsb
outsb
bnd
insb
imul
enter
inc
test
push
mov
jns
popl
mov
jg
lods
mov
test
push
cmp
xor
xchg
stos
imul
cmpsb
inc
fbld
add
pop
lds
enter
fistpll
cmp
add
outsl
test
mull
xchg
adc
call
cmp
jne
vmwrite
dec
push
gs
jne
in
jl
popf
int
das
inc
inc
js
out
adc
push
les
aam
rolb
dec
andb
jnp
in
sbb
cmpsb
mov
stos
dec
xor
mul
adc
cmp
in
stc
lret
sti
cmovs
sub
mov
fldl
arpl
and
lds
dec
pop
adc
aas
cwtl
inc
subl
hlt
cmpsb
adc
adc
ss
int3
ljmp
repz
aaa
cli
leave
cmp
aam
or
jge
insl
cs
movsl
std
pusha
ds
pusha
mov
cs
es
xchg
int3
lcall
xchg
and
in
mov
js
push
mov
pusha
or
xor
subb
in
dec
pop
jb
out
inc
and
mov
and
popf
sbb
xchg
nop
add
cmp
arpl
sbb
dec
push
add
cmp
ss
mov
iret
subl
adc
jmp
jae
call
sbb
enter
add
lds
scas
fisttpll
call
mov
das
enter
mov
fisubl
icebp
je
xor
data16
cltd
cmp
aas
dec
fcmovb
cmp
stos
dec
int3
mov
ds
lea
adc
push
js
dec
jmp
stos
shl
in
jne
ss
pop
stos
ds
jl
dec
ret
bound
xchg
ret
cmc
adc
fidivl
stc
xor
popf
cmp
mov
dec
xchg
decw
fisubs
loop
mov
sub
inc
mov
icebp
mov
jne
nop
lret
push
dec
sbb
dec
cli
inc
mov
lcall
adc
shlb
mov
ror
inc
or
push
lahf
jl
out
jo
cmpb
push
and
pop
loopne
mov
mov
das
jb
jb
pop
xchg
mov
ds
nop
lds
push
dec
adc
push
add
sub
cltd
hlt
dec
mov
pop
pop
mov
sahf
call
repz
mov
shlb
sbbb
sti
jge
in
loope
mov
pop
scas
into
mov
push
scas
adc
dec
xor
xor
scas
sub
sbb
dec
adc
lods
cmp
insb
loopne
loop
sarb
and
or
jp
and
fnsave
out
mov
xor
bnd
es
addl
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
fisttpll
add
pop
bound
iret
test
call
out
pop
addb
sbb
inc
jne
inc
xchg
jmp
or
fcomi
sarl
ljmp
test
mov
xchg
push
lock
mov
in
mov
jne
and
xor
inc
pop
stc
pop
ljmp
ss
xchg
xchg
scas
push
mov
pop
div
roll
sarl
dec
scas
clc
ljmp
xor
adc
inc
pop
dec
xor
lahf
mov
iret
fildl
inc
aam
shll
inc
shll
push
push
pop
mov
push
lcall
and
mov
mov
dec
js
insl
cwtl
pusha
imulb
mov
cmp
pop
cmp
mov
popl
in
jns
iret
or
inc
xchg
jg
aad
lods
mov
loope
leave
shr
lret
rolb
cltd
mov
fwait
daa
leave
dec
stos
and
lcall
xlat
pop
inc
mov
loop
jns
jg
daa
gs
lret
sbb
lcall
cmp
push
repnz
push
sbb
adc
mul
add
dec
mov
or
in
pop
mov
mov
cmc
in
cs
lea
sbb
push
pop
mov
sbb
test
dec
fsubrs
mov
in
jo
xchg
jne
push
inc
aas
fdiv
in
adc
lret
pop
call
sarb
sbb
mov
movsl
test
pop
imul
pop
jbe
fiaddl
movsl
f2xm1
ror
adc
pop
jns
movsb
mov
mov
sub
rorl
mov
mov
test
jg
mov
pop
ret
adcl
subl
andb
cmpsl
insl
or
pop
loope
lret
or
cmpsl
mov
fsubs
xchg
push
sbb
movsb
cmp
adc
fs
mov
dec
sub
or
jae
push
cli
mov
popa
int
popl
inc
sub
push
imul
xchg
daa
mov
add
add
jmp
les
push
fwait
test
movd
daa
aaa
leave
ss
clc
cmp
hlt
mov
lods
push
push
sub
adc
ja
mov
inc
adc
mov
leave
add
cmp
fstpt
ret
ret
add
sub
xchg
mov
dec
into
sarb
mov
stos
sub
mov
into
inc
fs
xor
mov
dec
xchg
idivl
pop
jmp
xor
ja
jae
jb
sub
add
je
test
sub
inc
iret
xor
mov
pop
jle
mov
mov
lods
pop
les
adc
repnz
push
mov
xor
fsubrp
cld
ficompl
push
mov
push
or
std
adc
shlb
push
stos
out
fildl
in
std
mov
inc
fimull
pop
push
ds
jae
cmp
cmp
push
xor
inc
pushf
adc
stos
lods
roll
clc
xchg
mov
lret
andb
xor
bound
jmp
movsb
aas
inc
hlt
imul
mov
push
insl
add
loopne
andb
scas
das
xor
xorb
cmp
std
add
xchg
dec
test
fmuls
or
int
rorl
cmp
dec
xchg
adc
loope
jno
push
cmovs
in
dec
negb
sbb
rorl
xor
int3
fmulp
clc
inc
dec
cmp
scas
cmp
push
xor
mov
sysexit
shl
fistpll
cmc
inc
dec
into
pop
or
jg
popf
cmp
cmp
imul
dec
jg
push
adc
mov
out
stos
pusha
ljmp
jg
les
dec
ljmp
sbb
out
sahf
inc
mov
push
adc
push
and
push
ja
xchg
sub
push
or
cs
sbb
loopne
loop
and
jg
jnp
push
outsl
das
call
or
push
adc
sbb
pop
fnstcw
push
comiss
jbe
cltd
out
cmpsb
jnp
insl
push
mov
inc
pushf
pop
popf
adc
dec
jecxz
icebp
jnp
push
pushf
cmp
jb
mov
in
flds
test
cmp
add
mov
pop
inc
out
cli
insl
pop
and
jl
sbb
or
pop
add
cmp
jmp
dec
mov
mov
arpl
mov
sti
mov
cwtl
push
push
mov
bound
inc
mov
in
fdivs
xorl
sbb
jl
call
stos
mov
adc
jae,pn
jnp
and
cs
xor
repz
arpl
loope
popf
repnz
neg
lea
inc
aad
fs
arpl
aam
jns
mov
and
int
scas
pop
loop
push
fcmove
dec
inc
sbb
lds
push
mov
leave
fs
cmpsl
jecxz
and
and
test
cs
or
fldl
jp
jl
movb
xor
jle
lret
sub
cmp
shrl
pop
das
adc
shrl
adc
jge
lds
mov
mov
sti
push
mov
mov
sbb
mov
cmc
jo
jge
add
shl
dec
insl
aam
dec
mov
js
orl
mov
jbe,pt
negb
aaa
shlb
sbb
and
stos
mov
xchg
sbb
negb
push
bound
fstpl
fwait
xchg
and
push
push
shlb
jb
inc
mov
shll
testl
jge
sbb
mov
popa
xchg
lock
push
sbb
push
push
std
cs
fld
lea
push
repnz
xor
xor
xchg
mov
xchg
xchg
lea
xor
fs
in
or
cwtl
ljmp
mov
cltd
pop
pop
mov
inc
mov
cmpsl
sub
fstps
fs
mov
xlat
jae
scas
dec
jg
enter
add
xchg
movsl
outsb
aad
jbe
cmp
cmp
dec
mov
mull
mov
xlat
cmpsl
push
aad
lahf
fwait
rcll
jbe
xchg
int
or
insb
xchg
cmpsb
sbb
hlt
or
mov
jl
pushf
call
fwait
sbb
mov
ret
loope
push
push
jmp
outsl
jle
out
push
ret
out
cmp
and
add
fisttpl
and
daa
fldcw
stos
jnp
mov
mov
jne
in
push
ret
pop
jbe
or
inc
into
mov
mov
das
das
mov
xor
fdivrl
jge
gs
aad
xchg
xchg
rolb
jmp
pop
or
jnp
pop
in
mov
fchs
mov
ss
or
push
mov
out
fcoms
cmp
adcl
pop
das
mov
mov
and
push
shlb
loope
sub
lret
sbb
outsb
mov
and
pusha
inc
sub
aad
mov
ljmp
inc
int3
push
lcall
mov
sti
mov
in
fistpl
mov
adc
pushf
sub
fcmovnb
pop
push
fs
test
mov
jae
ret
cmp
push
and
mov
outsl
loope
test
popa
call
jle
in
cmp
and
mov
adc
mull
cmc
adc
test
push
xor
or
into
incb
test
rorl
pop
aaa
mov
dec
mov
cwtl
mov
out
pop
xchg
insl
mov
ss
in
lods
in
movsl
or
in
enter
jno
and
add
mov
xorb
popf
test
and
imul
fwait
push
lret
inc
jl
rcr
adc
jbe
jne
nop
pop
inc
fsubrp
mov
mov
xlat
inc
mov
push
stc
sub
lock
jecxz
sub
in
inc
sbb
mov
mov
ficomps
jno
sbb
push
or
into
std
lret
loopne
out
cmp
push
or
lahf
aam
cmp
mov
xchg
js
jns
pop
movsl
and
xlat
xchg
mov
das
mull
repnz
pop
mov
insl
clc
jmp
lret
sbb
rcl
pop
jbe
push
dec
inc
imul
mov
icebp
pop
imul
loopne
mov
mov
inc
xor
xchg
pop
iret
push
sti
iret
bound
pusha
int
jmp
inc
xor
or
sbb
test
mov
lahf
enter
es
and
test
mov
dec
inc
out
add
fadds
sub
insl
push
aad
int
pusha
cmp
push
or
xchg
xor
mov
mov
pop
or
lret
jg
cld
icebp
mov
testl
add
inc
mov
insl
pop
lcall
repz
or
aaa
or
or
and
cltd
bound
inc
add
outsl
inc
cmc
jle
jg
add
addr16
imul
rep
shrb
mov
in
xchg
fcompl
mov
dec
stc
mov
ds
adc
xchg
loop
test
cmpsb
pop
or
mov
mov
gs
sub
pop
imul
xor
hlt
add
cli
mov
dec
ret
push
test
nop
pop
or
aas
sbb
cmpsb
mov
popf
mov
pop
mov
sbb
mov
xchg
lcall
aam
sub
adc
out
outsl
push
sbb
bound
xchg
movsb
push
sub
cmp
in
jl
out
sbbl
das
jmp
fs
addr16
int3
pop
push
push
push
rcpps
popf
out
pop
jne
test
mov
mov
pop
negl
lahf
cltd
into
xor
xchg
add
bound
push
fs
xchg
push
mov
dec
push
loopne
dec
movb
sbb
stos
jo
jecxz
mov
or
sti
adc
fwait
in
push
or
sbb
push
and
cmpsl
fincstp
and
stos
fisttpl
xchg
cmp
in
mov
dec
push
mov
xchg
mov
loope
les
and
mov
rorl
xchg
adc
fsubr
pop
cmp
xor
pavgb
movsl
or
std
and
adc
or
das
dec
movsb
in
sbb
fwait
push
insb
rep
sub
cmp
add
fistps
fidivrs
daa
mov
divb
xchg
and
pop
rorb
fisttps
xchg
push
lea
inc
xchg
cvtpi2ps
icebp
adc
mov
dec
xor
scas
mov
lret
dec
sub
ljmp
fdivrs
pop
mov
inc
or
add
cmpsb
pop
test
fsubl
adc
push
imul
in
cmp
lock
lcall
iret
adc
dec
xor
sub
push
aad
mov
cmpsl
sub
in
loopne
dec
aam
out
lcall
add
sub
add
sbb
iret
stos
test
lret
insb
and
sub
icebp
mov
xchg
add
pop
pushl
aad
mov
bound
cwtl
push
mov
pushf
push
xchg
je,pn
fisttpl
std
fcmovbe
push
mov
lods
mov
out
xchg
or
cmp
arpl
mul
and
sbb
adc
push
fidivrs
outsb
xchg
jl
xor
dec
inc
out
pop
es
scas
xchg
cmpsl
cmp
inc
push
lahf
dec
ret
bound
push
or
and
lods
inc
cli
into
and
stos
inc
pop
sahf
inc
dec
mov
mov
jp
in
or
and
jae
pop
nop
fdivs
adc
xchg
mov
stos
arpl
aaa
test
inc
cmp
inc
js
cmp
push
sbb
scas
div
aam
sub
les
sub
enter
dec
adc
sarb
rorb
iret
sahf
pop
imul
push
xorl
ljmp
es
pop
pushf
xchg
sbb
jl
adc
mov
dec
xchg
push
jmp
sbb
push
mov
fwait
popa
inc
lret
inc
xchg
sbb
cmp
sub
out
mov
push
addr16
dec
mov
mov
adc
ja
sub
ss
jl
cmp
push
bnd
fs
sahf
pop
and
sbb
inc
sub
xor
sub
or
shlb
aad
lret
inc
lret
adc
cmp
xorl
cltd
ss
dec
xor
and
pop
mov
inc
pop
mov
jno
sbb
dec
fs
lock
or
shlb
sbb
mov
pop
imul
outsb
fldl
push
loopne
xor
mov
mov
sbb
or
jnp
cmpsl
bound
mov
test
cmp
mov
leave
fists
adc
xor
or
fidivl
dec
scas
into
pop
aaa
mov
or
aam
sarl
test
ja
sbb
jmp
xchg
ret
add
in
out
in
sub
maxps
mov
int
cmp
rcll
mov
pop
push
pop
mov
mov
popa
out
test
inc
cmpsl
imul
clc
add
xchg
and
cli
fisubl
adc
dec
xchg
xchg
and
test
cmp
sbb
inc
out
mov
xlat
in
jnp
cwtl
jb
divl
test
dec
data16
fdivr
lods
push
mov
out
jnp
cltd
movsb
stc
xchg
js
adc
fistps
sahf
push
jle
adc
vpand
push
cmp
cli
push
orb
pmulhw
das
lcall
scas
call
test
divb
pushf
aam
jno
fstpt
mov
jb
sbb
mov
ret
sub
into
ja
push
jbe
sbbl
shlb
push
adc
imul
orb
outsl
cmp
and
imul
or
les
jbe
into
cmp
dec
sbb
xchg
out
pop
int
mov
or
js
imul
dec
repnz
or
rclb
mov
pop
test
popf
pusha
sbb
sbb
xor
xchg
loopne
lds
aad
test
add
or
iret
pop
or
int3
pushf
xor
loop
scas
ljmp
mov
mov
add
cmp
notb
adc
shl
sbb
ja
popf
stc
push
stos
and
fsubr
xchg
ja
push
push
ss
out
test
repz
xor
pushf
sub
xchg
fs
pop
pushf
in
out
repnz
jbe
out
lret
cmpsb
in
mov
cmpl
loop
push
inc
out
lret
cmp
push
in
sbb
inc
vcvttpd2dqy
and
fistpl
sbb
dec
xchg
mov
pop
imul
out
pop
cs
ja
arpl
mov
dec
fs
sbb
std
loop
pop
mov
jo
hlt
xchg
sbb
cmp
iret
test
xor
inc
ljmp
cmp
pusha
lea
sarb
xchg
or
ret
stos
push
lods
cld
cmc
int
jns
loop
aad
sub
dec
mov
xchg
or
cmp
xchg
adc
into
sbb
xor
enter
or
jle
mov
fistpll
mov
add
sbb
or
sub
cmc
fbld
sbb
xor
cltd
aam
imul
inc
sbb
xchg
loopne
inc
bound
lret
sub
jmp
mov
imul
or
call
xor
sbb
ret
jp
or
icebp
inc
mov
and
pop
ss
add
and
movsl
jg
pop
hlt
xor
shl
mov
mov
dec
js
and
leave
mov
out
mov
pusha
cmp
in
mov
dec
xorb
jno
jns
mov
std
mov
xchg
pop
test
aad
xchg
insl
test
push
jg
repz
andb
cmp
cli
jo
sahf
negl
decb
out
jbe
dec
mov
aas
jb
loope
sub
cmpsl
and
int
cmp
stc
push
test
add
jnp
cmpsl
sti
inc
repnz
fstps
scas
stos
ret
ljmp
mov
mov
pmaxub
sub
mov
pushf
nop
jle
or
insl
aam
popf
mov
lds
ljmp
lock
sahf
jb
sbb
mov
movsl
pop
xlat
sub
daa
call
aad
popa
pushf
jb
xchg
jmp
xcrypt-ecb
cmpsl
push
fisttpll
mov
jl
and
lea
sahf
ret
cmp
test
mov
popa
cmp
bsf
inc
add
cmpsl
rorl
aad
xchg
xchg
lods
jecxz
jl
cmp
and
scas
jg
into
popa
xor
mov
loop
xor
dec
sub
xchg
ret
mov
mov
jno
mov
scas
fwait
add
add
and
ss
outsb
inc
mov
cli
cltd
add
cmp
je
cmpb
mov
rcrb
sbb
jg
fsubrs
out
daa
int3
fstpl
cwtl
movsl
lock
inc
mov
mov
ja
enter
sub
jbe
xchg
inc
and
xchg
negb
mov
xor
cmpsl
es
inc
sbb
xor
fisubrs
int
mov
lret
pop
test
xchg
cs
jl
scas
jne
repz
dec
loop
nop
out
adc
add
in
das
sub
inc
in
pop
inc
or
jg
outsb
cmp
stc
aaa
notl
inc
mov
pop
mov
sbb
sbb
cltd
push
pop
sarl
inc
shr
fidivl
rcrl
dec
lret
pop
mov
or
xchg
imul
fistl
imul
mov
orb
or
es
sete
jp
repz
adc
cs
pop
mov
stos
movsl
fbld
movsb
jp
bnd
sbb
xor
push
add
mov
fs
jo
sbb
jmp
and
scas
gs
call
or
mov
jnp
std
popa
imul
fidivrl
jns
inc
mov
shll
mov
xchg
pop
fwait
dec
les
sbb
jo
stos
dec
jnp
inc
jne
pop
movsb
in
test
push
pop
push
sbb
stos
ds
loopne
jno
xor
mov
imul
imul
mov
mov
sub
mov
sub
pop
gs
jmp
push
jo
dec
aas
ja
jmp
xor
mov
pop
outsl
inc
cmp
jb
mov
sbb
dec
loopne
mov
imul
push
aas
ljmp
xchg
mov
xchg
ret
aas
aas
inc
mov
scas
outsl
arpl
add
mov
push
jg
sbb
mov
lock
dec
int
imul
pop
fdivr
mov
cmc
and
inc
lret
movsb
xchg
dec
xor
push
int
imul
in
cmp
test
fwait
add
xchg
and
out
addr16
xchg
xor
rcl
or
leave
je
mov
xchg
les
icebp
sbbl
xchg
fisttpl
shl
and
jae
int
pop
cmp
mov
call
aas
and
xchg
pop
shll
shr
sub
adc
out
prefetch
or
imul
mov
decl
int
sbb
sub
shlb
cmc
fidivrl
std
mov
mov
push
pop
ret
cmp
inc
mov
mov
dec
fcmovnu
adc
xchg
adc
enter
mov
or
and
das
shl
or
fldcw
pusha
mov
jbe
sbb
clc
mov
divb
popf
mov
movlps
pusha
nop
add
pop
inc
popa
mov
int
pop
push
adc
pop
sbb
js
adc
xchg
adc
add
or
pop
fs
outsl
loope
in
jge
into
in
inc
loop
mov
mov
mov
xor
lret
sbb
pushf
push
repz
pop
or
repnz
cmp
xor
rcr
fnstenv
jecxz
mov
outsl
sub
jmp
jle
xchg
das
in
mov
sti
sub
fistpl
add
jo
xor
es
or
test
sbb
adc
xchg
loop
incb
pop
jno
cs
stos
js
mov
push
dec
sbb
mov
lock
outsb
std
cmp
lret
out
out
call
leave
cmp
nop
mov
pushf
mov
out
lret
rolb
lahf
mov
add
mov
repnz
mov
or
lcall
pop
movsb
xchg
push
jno
pop
jle
icebp
lods
push
addr16
push
push
lock
mov
sub
loopne
mov
pop
aad
and
mov
xor
test
sub
icebp
adc
repz
aas
addr16
cltd
sub
inc
adc
sub
inc
fcmovnbe
xchg
ror
das
jmp
jo
push
xchg
popa
or
lret
lock
mov
inc
mov
inc
push
cmpsl
pop
sub
add
les
jecxz
mov
mov
cmpsl
dec
sbb
add
mov
mov
pop
xor
sbb
cmpsb
dec
pop
je
sub
cmp
fdivl
les
or
push
shlb
roll
xchg
xchg
xor
or
cmp
pop
shlb
js
cmp
fdivrl
arpl
mov
test
xlat
test
mov
push
mov
inc
mov
nop
pop
add
jnp
aaa
sbb
dec
add
shl
pushf
fadd
mulb
scas
and
out
and
popf
jmp
push
pop
dec
mov
xchg
sbb
faddp
mov
test
shlb
cmp
icebp
jle
and
add
in
mov
jne
shl
fisttpll
imul
and
xor
push
and
jecxz
loopne
aad
shll
dec
mov
shrl
mov
or
lods
dec
push
mov
shr
adc
stc
pushf
cmpsl
pushf
incl
add
and
cmpsb
cltd
movsb
inc
jl
cmp
int3
lock
mov
push
out
cmp
cmp
adc
lock
dec
enter
cmp
jbe
pop
test
or
mov
jo
add
rolb
mov
dec
pop
cld
add
test
mov
fcmovu
pop
mov
xor
es
xchg
jle
pop
adc
dec
aas
adc
inc
sbb
inc
incb
jo
cmp
xor
es
xor
lcall
jg
mov
jp
push
push
sub
lods
stos
out
stos
enter
or
loopne
popf
dec
xchg
das
xlat
ret
cmp
adc
shlb
lock
sub
mov
lret
testl
scas
jl
and
loop
jns
mov
sub
aad
xchg
arpl
push
cwtl
jbe
xchg
ja
rcrl
lock
or
out
mov
les
in
mov
into
cmp
or
jnp
sti
loope
aas
and
cmp
xchg
push
subl
cs
dec
cltd
lcall
mov
icebp
scas
dec
stos
lahf
sbb
mov
add
dec
nop
xchg
mov
rclb
idivb
call
xchg
outsb
in
cmc
cmp
jb
or
ffreep
xchg
mov
arpl
mov
and
inc
xor
fiadds
mov
xlat
mov
or
imul
pop
es
iret
add
movsb
addr16
fcoms
sbb
fwait
orb
xor
xchg
out
push
icebp
lods
jle
pop
cld
movsb
cmpl
pop
rorl
cmpsb
mov
mov
inc
mov
mov
dec
pop
pop
mov
fsubl
fcompl
cvtpi2ps
ljmp
fldenv
ljmp
cmpsl
xchg
loop
mov
xlat
lahf
sbb
fucom
sub
cltd
data16
test
gs
rclb
inc
pop
push
es
loope
stos
dec
rcrb
xchg
sahf
rcrl
jmp
rcrb
pushf
dec
fnstsw
push
iret
pop
out
pushf
cltd
cmpl
enter
cmp
sub
scas
xor
jp,pn
sbb
ret
xor
xchg
enter
orb
insl
push
mov
es
jnp
push
ds
bound
sbb
test
xchg
movsb
push
aam
push
sahf
icebp
cld
inc
imul
cmp
movb
jne
cmp
pop
dec
mov
cmc
adc
addr16
movsl
rcr
mov
popf
mov
hlt
leave
mov
add
popf
faddl
lea
xchg
xchg
lcall
sub
sub
lods
mov
adc
jne
imul
add
mov
dec
scas
jo
mov
int
fists
lock
xor
test
gs
jno
mov
inc
sub
mov
out
add
lds
and
cld
sahf
xchg
sub
mov
mov
fs
mov
pop
xchg
cmp
inc
loopne
xchg
mov
aaa
push
and
lret
les
sbb
scas
mov
data16
sbbl
imul
push
push
fistl
ret
and
popa
xchg
xor
test
je
xchg
inc
push
pop
mov
pop
hlt
jo
dec
outsb
or
jo
sbb
imull
fs
in
orb
add
loope
fisubrs
xor
sbb
bnd
push
lahf
ds
les
imul
out
out
cld
repz
imulb
loop
mov
das
and
mov
pusha
fcmovbe
mov
mov
mov
test
push
adc
pop
shrl
es
lods
jle
sbb
filds
fistps
std
dec
out
sbb
loop
jnp
lret
cmc
ljmp
loop
ljmp
rol
int3
xchg
dec
les
into
push
js
pop
jmp
cmp
lods
shr
sti
mov
and
cs
jnp
out
xor
and
iret
stos
test
inc
and
lds
loop
fnstcw
fcmovnbe
mov
movsl
adc
outsb
pop
add
inc
aaa
push
dec
inc
lret
xchg
inc
lcall
mov
sahf
pop
push
divb
adc
mov
pop
jp
or
aad
jns
jmp
inc
stos
mov
shr
cmp
mov
mov
sub
inc
cmc
clc
sub
shlb
mov
sub
inc
popl
mov
push
or
ret
pop
push
xlat
xchg
sub
mov
daa
in
bound
movsl
cli
push
aaa
lods
clc
shl
xchg
in
and
xor
shll
sbb
and
inc
bound
jne
pop
andb
insl
push
xchg
in
ret
cli
and
pop
sub
shrb
mov
mov
jne
loop
int3
in
out
cmp
sbb
xchg
scas
hlt
in
cs
add
mov
xchg
cmpsl
out
and
rclb
push
dec
popf
fnstsw
ja
cld
shrb
mov
or
xor
xchg
imul
scas
add
xorb
inc
pusha
jnp
xchg
leave
sbb
test
nop
add
jg
mov
out
and
jne
xchg
jae
lcall
das
fwait
insb
xor
inc
loop
jae
xchg
aad
call
adc
enter
loop
daa
mov
and
and
sti
adc
aaa
adc
xchg
cld
dec
shlb
or
cld
dec
and
fwait
xchg
lcall
clc
push
xor
insl
dec
jae
inc
arpl
iret
test
stc
xchg
push
loope
ss
push
adcl
pop
inc
sub
inc
mov
xchg
ret
or
pop
and
push
lea
fldl
pop
pop
mov
xchg
inc
jl
jb
add
inc
or
jmp
aam
mov
cmpsl
mov
in
or
dec
inc
lcall
mov
cmp
lcall
fstl
mov
repz
rorb
arpl
sbb
mov
lea
int3
mov
adcb
cltd
inc
movsl
stos
int3
or
cmp
dec
inc
sarb
xlat
xor
push
js
xor
gs
lahf
mov
or
test
push
adc
inc
inc
mov
push
mov
ret
mov
das
cmp
or
or
arpl
push
in
xor
fldcw
adc
fsubs
xchg
xlat
add
add
cmp
sub
mov
js
call
xlat
sbb
bound
push
movsl
sbb
aam
repnz
mov
push
lret
and
jnp
cmp
dec
pop
iret
imul
xlat
or
push
mov
dec
lret
ficompl
mov
scas
jge
fsts
gs
sub
and
mov
dec
int
sahf
xchg
fisubrl
nop
adc
xlat
imul
mov
pop
cmpsb
xchg
stc
mov
in
jns
fcoms
rclb
jmp
adc
xchg
sbb
jne
xchg
shlb
dec
adc
in
mov
dec
mov
iret
or
cmp
pop
jl
xor
jnp
xchg
icebp
insl
jae
mov
sub
rcrl
shlb
fidivrl
insb
enter
lods
clc
add
pop
leave
pop
gs
mov
xor
jae
sub
decb
fwait
jbe
popf
lea
iret
or
pop
or
adc
sub
mov
add
movsb
jns
push
lahf
je
inc
inc
cli
faddl
into
ds
pusha
jae
mov
pushf
xor
outsl
mov
mov
sub
cmc
pop
into
pusha
jns
lret
jbe
pop
xchg
mov
addb
push
xchg
push
jge
jb
push
out
aas
or
dec
jge
push
imul
call
add
fs
pop
insl
pop
sub
push
xchg
jo
dec
adc
xor
mov
test
daa
testb
sub
xor
sbb
fstps
into
andb
fisttpl
inc
fwait
sbb
enter
cmp
push
cmp
jo
mov
mov
xor
pop
pushf
movsl
fsubl
and
adc
testl
lret
mov
lcall
stc
out
pop
icebp
test
mov
les
mov
push
fcmovnbe
orps
push
cmpsb
add
cmpb
adc
outsl
inc
loop
jnp
popa
xchg
cld
mov
stc
sub
pusha
xchg
xor
ljmp
movsb
dec
add
add
jg
test
test
jge
xchg
push
and
fistpl
xchg
jnp
ss
loopne
dec
mov
addr16
mov
push
test
or
mov
iret
or
or
mov
inc
fadd
or
or
aas
mov
movsl
into
adc
daa
movsl
mov
inc
mov
pop
aad
mov
inc
adc
stos
cmp
cmp
movsl
push
jbe
and
jg
pop
xor
push
or
lds
push
pop
inc
add
bound
lcall
add
adc
repz
dec
jno
add
jge
jge
cmp
mov
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
stos
jp
inc
popa
bound
bound
mov
into
movsb
push
mov
movsl
imul
or
dec
lret
mov
int3
jg
in
xchg
mov
mov
pop
mov
fisubrl
or
mov
neg
stc
dec
idivl
and
fs
loop
jmp
bound
mov
mov
adc
sbb
das
popa
jmp
call
xchg
mov
cmp
test
ret
stos
push
shlb
fucomp
mov
int3
cwtl
mulb
js
scas
push
sub
ljmp
adc
hlt
and
cmc
fnstcw
scas
inc
pop
push
sub
das
sub
pop
mov
aam
ljmp
popf
mov
flds
xorb
fisttpll
xchg
add
cmp
jmp
loope
inc
and
jne
mov
fistpl
out
loope
aad
mov
outsl
pop
ja
bound
popf
jl
jmp
cmp
fnstenv
jmp
cmp
sarb
add
addr16
inc
adc
push
inc
out
insb
cli
sbb
dec
clc
das
popf
hlt
cmpsb
mov
js
test
pop
cmp
xchg
fnstenv
cmp
out
xchg
jg
cwtl
and
or
xchg
in
bound
inc
cmp
pop
icebp
inc
mov
adc
gs
clc
sub
add
inc
push
sbbb
adc
repz
sti
push
cltd
movsl
lcall
mov
addr16
pop
push
pop
lcall
and
pop
dec
lods
dec
outsb
loop
pop
lret
pop
loop
cwtl
and
sub
xchg
shll
jp
stos
int
add
dec
jg
loopne
push
jbe
add
cs
sub
cwtl
movsl
sbb
out
xor
xor
mov
fcoms
andl
push
jmp
jae
ret
mov
and
ja
adc
outsl
test
mov
std
je
pop
cmp
test
mov
add
xchg
bound
jae
fdivs
push
mov
lds
jg
or
dec
push
mov
xchg
gs
sbb
add
mov
add
gs
test
pop
jo
sarl
int3
movsl
adc
dec
inc
mov
movb
jno
lret
mov
mov
cmp
cltd
push
dec
in
push
jge
test
or
mov
jo
jge
mov
lods
jb
gs
xor
test
cltd
add
mov
and
or
das
fimull
push
ficomps
imul
lcall
mov
mov
lea
or
dec
dec
lods
or
fdivrl
popa
mov
adc
stos
insb
push
aas
mov
sbb
sub
aas
pusha
data16
and
mov
sub
push
xor
cld
sarb
and
fwait
fs
cmp
push
sub
inc
addl
lcall
test
xchg
jbe
cmpsl
test
pusha
push
movsb
jb
push
cmp
int3
pushf
data16
pop
imul
push
lods
jge
sti
xor
outsl
add
push
shrb
jno
push
cld
mov
nop
lock
and
iret
je
adc
daa
arpl
imul
stos
ja
aad
std
xlat
jecxz
mov
mov
and
cltd
mov
sub
rorb
jmp
jge
mov
pop
cmp
jg
stc
xor
jnp
and
mov
test
add
mov
and
adc
jecxz
pop
scas
mov
xchg
and
je
scas
dec
stos
pusha
adc
cli
cmc
xchg
jo
je
cwtl
xchg
inc
aas
push
pushf
cmp
aam
inc
jp
out
movsl
data16
movsb
out
inc
inc
cmp
jecxz
jge
ljmp
or
inc
jno
fistps
je
ljmp
dec
in
std
test
push
jbe
movsb
outsl
lods
cld
addr16
xlat
jge
push
push
popf
xchg
jnp
imulb
adc
pop
psubusb
xchg
lahf
cmc
arpl
in
stc
cwtl
cmp
xchg
jnp
stos
fsubrs
sub
in
cmp
mov
pop
shrb
push
loopne
xchg
or
sbb
subb
aam
std
dec
daa
fcomps
or
aad
leave
mov
daa
jno
int
enter
lds
das
xlat
cld
jle
jge
push
cli
shll
jp
out
in
popa
and
lods
inc
cmp
popf
mov
sub
dec
dec
push
outsl
mov
fbstp
sahf
insb
and
push
xor
xchg
mov
int3
aad
add
sahf
repz
cltd
pushf
and
popf
jne
or
cltd
adc
hlt
xchg
inc
pop
sub
rol
and
push
xchg
mov
xchg
mov
xor
sbb
lcall
fiadds
mov
adc
mov
ds
test
xlat
test
add
mov
cli
or
gs
test
dec
pusha
sbbb
add
sbb
ret
sbb
push
mov
pop
lods
insl
jg
fwait
and
loope
lea
add
cs
addr16
mov
jo
fwait
ds
clc
xlat
xchg
out
inc
shlb
xchg
push
push
fdivrs
ret
push
mov
shlb
mov
add
daa
mov
movsl
jmp
add
lcall
lret
cmp
jp
icebp
sbb
addl
hlt
mov
iret
jle
nop
push
addb
pop
ret
mov
xor
dec
leave
lcall
push
sub
jmp
lahf
push
xor
in
aad
sub
mov
add
sbb
push
push
pop
jecxz
xor
rcrb
jno
adc
test
aam
bound
cmp
and
push
faddl
mov
and
xor
adc
adc
push
leave
xchg
mov
jne
inc
gs
std
mov
adc
addr16
mov
shlb
cmp
addl
mov
adc
cs
hlt
sbb
insb
mov
punpcklbw
push
sub
push
push
mov
cmp
ljmp
or
fwait
enter
mov
xchg
roll
xorl
scas
rorb
roll
cmp
ret
imul
call
dec
push
xorl
or
pop
adc
inc
dec
negb
pop
setle
cmc
mov
jbe
mov
mov
enter
lret
shl
xor
mov
or
xor
fcompl
xor
add
and
push
out
sbb
mov
mov
stos
rolb
lock
test
jb
mov
int
dec
push
and
enter
and
and
mov
not
test
jmp
sbb
cmp
push
aad
or
mov
lods
rclb
js
jmp
rcrb
inc
sbb
leave
aaa
das
sub
fwait
push
mov
test
add
fbld
push
sbb
add
aaa
mov
popf
popa
mov
stc
daa
inc
jnp
push
sub
imul
push
mov
push
mov
xor
cmpsb
mov
push
lds
and
movsl
clc
lret
ja
push
adc
mov
imul
out
popa
iret
xchg
fstl
lock
pop
stos
daa
ss
push
ret
mov
mov
xor
push
and
nop
sar
xor
xor
lcall
inc
jp
xchg
movsl
adc
dec
mov
popf
push
stos
inc
in
lret
xchg
mov
push
rcll
arpl
push
sub
daa
add
ja
ljmp
inc
mov
test
in
inc
bound
cs
mov
sti
in
rorl
cmp
cmp
leave
ds
in
ljmp
xchg
std
xorl
and
lock
test
dec
in
xorl
xchg
pop
loope
inc
pop
xor
cs
dec
mov
test
stos
jnp
fdivp
sub
xor
fiaddl
xor
push
pop
xchg
xchg
sbb
repz
xlat
or
push
dec
les
mov
jge
lods
mov
mov
lret
fistps
dec
mov
sbb
stc
jo
adc
xor
pop
mov
out
push
imul
pop
cmp
inc
subb
std
mov
jnp
pop
cmc
or
fxch
cs
popa
lea
out
mov
inc
test
mov
cld
add
arpl
sysexit
sti
or
popa
cmc
fbstp
sahf
ds
cmp
cli
push
dec
mov
cmp
mov
shll
nop
movsb
xor
insb
inc
jecxz
int
fs
cmp
xchg
cmp
mov
cmp
scas
out
mov
mov
add
mov
clc
push
insb
pop
dec
or
sub
lods
pushl
xor
push
xor
cwtl
decl
in
out
inc
bound
leave
dec
popa
or
sahf
fnstenv
jbe
mov
pop
pop
xchg
pop
cmpsb
mov
clc
cmp
jb
jecxz
sarb
mov
pop
popf
mov
mov
fwait
cmp
xchg
sbb
dec
xlat
inc
shl
into
push
jle
or
dec
ljmp
es
iret
fdivrs
jle
jmp
mov
mov
xchg
cmp
mov
leave
or
push
xchg
push
aas
pop
jle
inc
xchg
stos
cli
push
call
cmpsb
fisubl
inc
sbb
jp
jae
sbb
sarb
pop
outsb
push
push
aaa
jecxz
jo
outsb
in
xor
jmp
and
call
mov
ljmp
mov
or
call
sub
sbb
mov
jecxz
sbb
inc
mov
ficompl
in
int
shrb
jge
sub
inc
repnz
ds
lods
stos
add
sahf
sub
push
sbb
nop
sbb
add
mulb
and
sub
inc
cmpsl
cmc
or
mov
cmp
cld
scas
mov
or
mov
idiv
or
lods
call
mov
xor
es
add
jne
aad
iret
loop
xchg
push
jns
sub
or
lock
arpl
or
xor
dec
adc
mov
sub
hlt
mov
xchg
pop
and
std
mulb
out
lcall
mull
movsl
or
fsts
aaa
cmp
push
sub
loope
xor
out
inc
cld
mov
push
shll
sbb
mov
repz
test
xor
and
jmp
sub
popa
pushf
mov
fisubl
shll
xor
mov
push
xorb
mov
in
push
test
leave
cmp
pop
mov
inc
push
imul
mov
adcl
in
aaa
sbb
daa
mov
mov
xchg
xchg
jp
mov
xchg
sbb
mov
mov
adc
pop
jo
fstpl
cmp
pop
dec
add
pop
aad
pop
repz
sub
movsl
popl
and
cmpsb
test
js
imul
cmp
mov
add
les
push
push
dec
inc
ds
mov
cmp
dec
sbb
cmp
das
jg
mov
mov
call
rcl
scas
in
jne
and
int
inc
lods
mov
imul
mov
mov
and
repnz
in
int
or
sbb
addr16
jge
aam
mov
push
sbb
stos
mov
mov
push
repnz
mov
scas
adc
ss
xchg
sub
cmc
cwtl
in
jp
mov
dec
mov
and
addb
loop
mov
es
mov
sahf
dec
pop
shlb
cmc
shll
mov
inc
cmp
fsubs
repz
cmp
cli
sti
inc
iret
cmpsl
loope
dec
push
mov
lret
movsl
lods
sbb
ds
or
dec
scas
push
jl
icebp
or
icebp
test
and
dec
xor
testb
lea
jo
stos
rorb
adc
mov
cmp
xchg
pop
call
in
les
outsb
jno
mov
insb
lcall
pop
xchg
xchg
mov
je
hlt
lahf
rclb
push
xchg
sti
sub
test
xchg
mov
ret
mov
lret
out
sbb
cltd
mov
mov
mov
addr16
cmp
push
cmpsb
sub
and
test
mov
shrl
lock
xchg
int
add
test
sarl
call
lret
clc
push
int3
add
shl
out
cmp
movsb
add
in
adcb
rclb
xor
pop
js
xchg
inc
clc
jne
cltd
call
out
dec
lret
icebp
shll
mov
jp
mov
scas
imul
mov
addb
sbb
call
jle
mov
popa
xchg
xlat
xchg
jle
idivb
fcompl
xor
sahf
ret
sti
aaa
or
xchg
push
push
mov
fldl
pusha
sbb
add
push
hlt
rclb
pop
xchg
jb
push
cmc
cltd
jb
jecxz
in
inc
daa
sahf
add
ret
xchg
jle
imulb
adc
push
jp
sub
out
int3
inc
pop
sbb
lret
bound
adc
ret
mov
jecxz
les
jb
xchg
sbb
dec
stos
dec
jo
loop
cmp
jecxz
mov
inc
js
ss
xlat
das
jns
enter
dec
out
ljmp
insb
xlat
mov
mov
dec
mov
cmp
lods
or
jge
jno
rcll
xchg
rep
xchg
repnz
dec
mov
icebp
stc
orb
insl
lahf
pop
sub
xchg
daa
aad
les
push
pop
cmc
sub
jnp
daa
push
or
xor
inc
ljmp
sub
es
jl
xorl
xchg
jbe
or
xchg
ret
adc
jb
pop
shl
movb
xchg
mov
xlat
popw
lret
sbb
push
and
mov
dec
pop
shll
movsl
inc
inc
sub
xor
lods
outsb
ficoml
jns
mov
cmpsb
stos
sub
push
xor
xchg
push
aas
cmp
outsb
mov
jbe
mov
sbb
adc
inc
cwtl
fwait
mov
xchg
leave
pop
pop
adc
or
mov
faddl
add
movsl
xchg
lahf
sbb
mulb
mov
sub
scas
add
pop
scas
mov
out
pop
pop
stc
ret
dec
in
call
cmp
mov
addl
je
mov
out
sbb
into
out
mov
jmp
cmp
loope
dec
inc
mov
ljmp
in
out
push
imul
adc
cltd
filds
mov
aam
jge
out
aas
add
outsl
inc
cmp
popf
in
xchg
pop
jecxz
adc
fstl
inc
cmp
popa
repz
stos
push
and
jle
lds
fidivrs
int
push
cli
or
mov
jae
int3
dec
sub
mov
inc
xor
in
xchg
mov
into
mov
ljmp
ss
fisubs
push
insl
enter
pushf
data16
sbb
push
fisttpl
lods
push
cmpsb
inc
nop
mov
mov
int3
add
pusha
out
dec
push
pop
add
test
insl
fcoms
mov
jge
sub
jo
mov
jge
jecxz
mov
sub
xchg
mov
aam
xor
repz
jbe
orl
cmp
jg
jo
xchg
inc
ljmp
pusha
xor
xchg
sti
repz
popf
xchg
cmp
adc
test
jg
mov
dec
mov
lods
push
ret
and
negl
cmp
in
xchg
dec
inc
out
push
imull
ljmpw
fmuls
and
or
test
inc
adc
shll
sbb
cmp
inc
inc
pop
test
xor
xchg
cmp
mov
lds
fnstcw
mov
stos
push
in
movsb
inc
xlat
movsb
or
scas
dec
subps
out
es
or
pop
push
cmpsb
xor
sbb
cmpl
lret
insb
push
stc
push
push
pop
dec
stc
in
out
movsb
popa
push
xor
fisubrl
pop
sbb
je
adc
aas
je
loope
add
scas
xchg
mov
orb
stos
outsl
or
push
rolb
ss
insl
mov
outsl
xchg
pusha
mov
mov
push
or
push
xor
ss
pushf
jg
cmp
ja
and
xor
sarb
fildl
scas
jnp
fiadds
aaa
mov
cli
push
decb
cmp
xor
dec
jbe
add
xchg
inc
fcmovnu
stc
mov
mov
das
sbb
sub
xor
ljmp
stos
push
adc
xchg
cmpsb
lret
mov
sub
mov
aas
mov
mov
sbb
add
lods
sti
dec
sbb
ret
pop
and
cmp
leave
inc
dec
mov
push
jmp
test
add
loope
gs
rcrl
sbb
xor
mov
fsubr
insb
dec
mov
inc
mov
into
mov
scas
popa
enter
loope
sbb
sahf
xchg
fldcw
inc
cltd
clc
or
mov
je,pt
pop
shrl
jecxz
repnz
xchg
mov
jle
jb
inc
aas
mov
push
jne
push
xor
mov
mov
mov
add
test
mov
push
cltd
and
gs
sbbb
out
inc
mov
jmp
cmp
inc
loope
push
push
mov
iret
frstor
repz
dec
imul
mov
inc
or
fidivrl
movl
in
mov
mov
cli
jp
pop
test
inc
test
xor
and
imul
fidivl
fwait
inc
xchg
std
movsl
fisubrl
data16
pop
jo
out
test
sbb
xor
xor
in
or
push
push
sub
loop
stc
jnp
add
jle
jle
xor
inc
sub
std
std
xlat
mov
sbb
add
cmp
adc
sti
push
outsl
jmp
cmpsb
jns
outsb
add
jle
and
pop
popf
stc
inc
aas
popl
out
pusha
push
leave
dec
dec
xchg
inc
jp
imul
ja
and
dec
push
xlat
dec
adc
inc
idivb
fcmovb
push
cmpsb
pop
xchg
xor
jbe
popa
mov
ljmp
inc
ljmp
mov
inc
cmc
sbb
and
cwtl
mov
add
sub
cmp
or
mov
nop
mov
int
sbb
stc
sbb
inc
cld
or
sbb
cwtl
int3
push
xchg
sti
addr16
jnp
pop
fidivs
mov
daa
xor
int
imul
xchg
movsl
add
out
loopne
aaa
pop
insl
out
cmc
xchg
mov
sbb
out
or
aad
int3
push
lcall
mov
cmp
mov
xor
inc
mov
sub
outsb
or
mov
jmp
cld
scas
inc
std
push
scas
mov
aaa
movsb
mulb
sbb
shrl
inc
push
std
cwtl
dec
ja
push
dec
les
bound
or
es
std
cltd
test
not
dec
or
push
push
in
loope
dec
mov
jnp
add
outsl
out
aad
pop
bound
lds
pushf
push
mov
or
push
std
or
in
push
and
lret
push
cli
dec
mov
dec
insb
lods
mov
aad
sbb
cmpb
icebp
pop
sub
les
mov
pop
xchg
aad
test
vmovdqa
mov
mov
out
sbb
mov
add
test
fimull
xor
and
xchg
cs
inc
mov
scas
rolb
xchg
sub
mov
dec
fldl
or
aam
test
or
faddl
xchg
add
cwtl
scas
or
jge
outsb
orl
fcoms
adc
int
popa
mov
je
es
pushf
sub
cmp
fwait
dec
xchg
out
movsb
cmp
int3
out
or
arpl
vpminub
xchg
mov
push
fs
mov
pop
repz
sarl
adc
mov
cltd
lock
and
outsb
daa
loope
lret
mov
in
inc
pop
fcoml
mov
pop
jno
stos
sahf
sbb
and
std
or
scas
jno
pop
or
add
mov
outsb
js
and
adc
pop
and
imul
stos
xchg
jge
pop
or
fsubl
push
pop
xor
sub
mov
sbb
push
cmp
cmpsb
inc
gs
faddl
push
push
jbe
lock
mov
inc
in
or
adc
cmp
mov
mov
cli
addr16
loopne
xchg
ljmp
jae
int
mov
mov
fists
sbb
mov
cmpsl
std
pop
outsb
int3
mov
shl
pushf
stos
ja
arpl
roll
repnz
in
fwait
gs
fsts
ficomps
fcmovb
mov
adc
sub
sbbl
and
sbb
pop
jecxz
lret
out
dec
data16
fcmovnu
in
or
xchg
push
in
jg
sub
or
sub
aas
add
xchg
pushf
xchg
fmuls
add
jae
mov
iret
fidivrl
lret
stos
adc
fisttps
test
pop
mov
pop
int
pop
mov
hlt
shl
pop
lea
movsb
fstps
icebp
je
or
xchg
shrl
dec
adc
out
sub
lret
mov
adc
sbb
cmp
lods
dec
adcb
daa
addr16
pop
mov
adc
jnp
je
push
push
push
popf
xchg
fs
jecxz
loope
rcrb
jg
xor
adc
clc
sub
pop
cmp
lret
xchg
or
in
xchg
lahf
mov
test
arpl
ss
mov
and
xlat
mov
dec
jns
pop
cltd
jo
cmpsb
sahf
movsl
popf
lods
shll
outsb
out
jmp
jmp
add
test
jno
inc
loop
lret
int
repnz
mov
cmp
jbe
adc
inc
out
stos
ss
dec
clc
pop
jnp
lcall
sub
loope
pusha
push
inc
pop
es
mov
icebp
loopne
xchg
pop
push
xor
xor
lcall
test
mov
das
adc
lret
aas
lds
mov
inc
in
or
inc
mov
cld
xchg
movsb
pop
out
sti
fwait
mov
jbe
imul
adc
sbb
jo
add
mov
lds
test
adc
mov
add
cwtl
arpl
ljmp
push
xor
mov
mov
js
fiadds
lods
repnz
and
mov
jp
mov
fimuls
das
mov
or
mov
sbb
aad
clc
pop
adc
out
flds
test
mov
inc
ret
lock
push
or
mov
stc
mov
lahf
bnd
inc
sbb
adc
cwtl
fnsave
lret
decb
loopne
xor
mov
data16
imul
mov
and
jo
aam
mov
cwtl
int3
stc
dec
xorb
dec
leave
xchg
stos
sar
sahf
xchg
push
outsb
nopl
idiv
xchg
push
int
add
fnstsw
adc
sbb
sbb
adc
pop
imul
push
daa
cmp
leave
fadds
jp
fnsave
iret
jae
push
dec
lock
les
xchg
popa
sbb
push
mov
jns
out
daa
data16
aas
icebp
push
jecxz
bound
and
lahf
scas
mov
stc
into
fs
push
scas
or
mov
shrl
sub
pusha
jae
dec
mov
aad
adc
xchg
mov
ret
cmp
push
imul
pushf
sbb
ja
jne
sub
or
push
into
push
dec
aaa
mov
jno
xchg
cmpsb
push
imul
sbb
pusha
jnp
cmp
pop
mov
icebp
mov
push
cmp
pop
ror
pop
jbe
out
dec
add
adcl
adc
push
sbb
jno
cs
data16
popa
dec
repnz
xor
fiaddl
mov
rcrb
pop
ss
and
idiv
adc
dec
enter
test
and
popf
ret
sub
aad
add
mov
push
mov
pop
test
adc
and
dec
mov
pop
cltd
fstpl
push
cltd
sbb
roll
arpl
jl
daa
inc
out
push
cs
adc
in
ds
and
sub
adc
mov
adc
dec
mov
adcl
mov
mov
inc
adc
imul
ss
mov
daa
leave
push
call
lret
call
lea
cmpsb
or
push
cmp
fwait
int3
sbb
push
dec
xchg
sub
fldenv
pop
push
iret
mov
add
pop
andl
pop
pusha
cltd
mov
cmc
sti
sub
insl
insl
cmp
add
les
popa
and
push
pop
inc
in
sar
xor
and
jne
mov
adc
cmpsl
scas
scas
xchg
adc
fimull
mov
cmp
dec
mov
or
cmpsb
fwait
scas
pop
jle
sbb
fmuls
jge
push
sbb
sbb
in
jnp
push
or
xor
mov
std
mov
popf
add
xchg
outsl
jmp
push
xor
pop
mov
fcoml
repz
pop
out
stos
inc
iret
push
into
or
js
into
cltd
pop
mov
xchg
mov
dec
adc
push
leave
dec
fs
gs
outsb
mov
lcall
add
incl
les
loopne
in
outsb
incl
andl
jl
and
jbe
cmc
std
movl
or
push
xchg
mov
inc
cmp
jbe
jne
gs
sub
cmp
jbe
arpl
movsb
push
mov
movsl
or
sbb
cmp
jl
fwait
inc
jp
ja
aaa
mov
test
or
dec
ret
pop
push
loope
jmp
xchg
add
sbb
sub
pop
push
and
sbb
movsb
cmp
push
aaa
dec
andb
in
xor
stos
fwait
mov
push
aas
int3
imul
xchg
sbb
fildll
mov
scas
jle
mov
cltd
mov
iret
enter
cmp
popa
lea
sub
cmpsl
hlt
fimuls
mov
mov
repnz
xchg
out
mov
imul
shl
add
imul
inc
aas
dec
and
int3
outsl
or
adc
roll
aad
in
pop
cmc
mov
pop
ficoms
push
jp
int3
jbe
sub
iret
pop
sbb
test
jge
aas
mov
loop
pushf
mov
jl
mov
out
cmp
sub
ds
jno
divb
or
cltd
jp
push
arpl
ljmp
mov
lcall
dec
daa
or
lods
cmp
push
and
cmp
jg
mov
and
mov
xchg
lret
aas
inc
arpl
es
inc
and
push
ja
outsb
in
cmc
pop
push
mov
xchg
mov
test
mull
cld
adc
xchg
mov
or
add
popa
pop
imul
psubsw
fwait
mov
test
lock
ljmp
or
jne
mov
or
cmp
and
cmp
iret
jb
clc
js
fsub
jbe
iret
mov
lods
ds
pop
jb
push
mov
pop
jbe
mov
push
add
xor
js
mov
iret
xor
xchg
jle
mov
dec
scas
mov
mov
dec
pop
cmp
fimuls
push
cld
adc
push
dec
jecxz
test
pop
pop
int
pop
in
imul
adc
mov
lods
nop
jbe
loop
dec
push
jo
dec
cltd
lcall
inc
fidivl
mov
adc
jle
jb
cmp
sub
cltd
lahf
jnp
iret
dec
lds
inc
mov
and
out
pop
mov
lock
test
lods
or
jnp
dec
jg
movsb
adc
repnz
jns
sbb
cmp
divl
push
push
push
fwait
dec
pop
mov
xor
gs
mov
sti
orl
xlat
repnz
data16
cltd
dec
mov
mov
jmp
imul
in
jo
jns
jb
jo
outsb
sub
pusha
xchg
and
shll
dec
les
xchg
in
ss
adc
lods
xor
and
cli
ja
shlb
popa
pop
inc
cld
sub
insl
pop
cwtl
push
sbb
adc
and
adc
push
test
lock
repz
mov
xchg
jg
jp
pop
inc
mov
inc
inc
gs
mov
cmp
mov
loopne
mov
mov
inc
mov
pop
jns
mov
int3
xor
mov
cmpsl
mov
or
xchg
nop
jno
arpl
add
pop
sbb
pop
ss
sbb
loop
mov
push
xor
inc
push
aad
sub
int3
fxch
sub
xchg
jmp
push
sub
pop
mov
int
sub
loop
push
fs
iret
sub
or
inc
test
mov
mov
push
rolb
fcoms
jno
ret
ret
adc
cld
mov
pop
mov
mov
es
fidivrl
mov
enter
aas
mov
andb
aam
in
sub
dec
cwtl
repnz
mov
inc
mov
xchg
sahf
dec
mov
stos
outsl
roll
and
adc
adc
jnp
mov
imul
mov
int
mov
cs
std
imul
mov
inc
mov
outsl
lahf
pop
adc
xor
mov
js
cmp
sbb
jmp
push
sub
pushf
adc
test
dec
and
outsl
cltd
into
mov
shrl
lds
lds
sub
jnp
mov
inc
lock
fwait
incb
in
mov
lcall
rcrl
dec
xor
arpl
imul
add
mov
sti
fldt
push
dec
adc
mov
stos
and
push
jge
or
xchg
dec
or
loop
jne
jae
xchg
sbb
imul
scas
fldenv
aam
xchg
sbb
mov
push
fnstsw
arpl
in
mov
hlt
ds
inc
mov
repz
inc
fstpt
bound
dec
cmp
sarb
jle
mov
sbb
aas
stos
ret
in
in
xor
mov
push
add
popa
decb
ret
cli
jmp
pop
ja
pop
icebp
shlb
xor
mov
sub
xor
movsb
fcoms
mov
movsb
adc
insb
aas
in
les
addl
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
flds
xor
pop
bound
push
cmc
mov
cmp
sahf
cwtl
xor
cltd
lds
cmp
in
push
and
fldt
repz
inc
int
jmp
je
or
mov
pop
movsl
jg
cld
rorb
jnp
arpl
mov
adc
stos
or
xor
sub
adc
or
fnstsw
cld
xchg
push
mov
or
mov
or
xchg
mov
fmull
pop
cld
and
outsb
cmp
mov
mov
int3
test
or
sub
cmp
and
div
shrl
mov
sub
cmpsb
add
sub
lods
and
or
cmp
mov
xor
stos
ljmp
in
xchg
inc
xor
and
ljmp
fisttpl
pop
push
shlb
adc
cmpsb
xor
xchg
mov
fbld
das
sub
inc
adc
mov
adc
xlat
and
sahf
or
inc
pop
dec
sbb
xor
jp
test
jnp
outsl
arpl
sub
ljmp
push
insl
xchg
into
sub
iret
push
dec
outsl
mov
inc
stos
dec
mov
and
pop
cmpsl
mov
xor
adc
or
add
jmp
push
pop
shll
mov
jg
jl
dec
add
mov
push
leave
das
dec
xchg
and
xor
xor
in
mov
cltd
jns
sbb
pop
inc
cmp
sbb
std
cmp
add
std
jbe
adc
scas
stc
into
es
aam
adc
pop
fisubrl
mov
xchg
pop
pop
jnp
in
ja
es
call
xlat
mov
xor
in
sti
mov
inc
cmc
ja
pop
lock
movsb
pop
sub
aam
pusha
jbe
cmp
es
mov
and
das
pop
mov
stos
dec
test
loop
cmp
jle
mov
or
add
bound
mov
push
lcall
xchg
les
mov
dec
mov
ds
jnp
jge
dec
xchg
dec
imul
jl
sub
sbb
cmpsb
lcall
mov
cmc
dec
push
repz
lds
sbb
push
neg
mov
pusha
cmp
add
call
jle
push
movsb
ja
repz
dec
repnz
jge
push
cmp
jge
or
pusha
enter
cld
clc
push
push
rcrb
aad
push
stos
inc
lret
or
mov
fmul
imul
xor
aad
jnp
mov
sbb
cmp
lock
jmp
outsl
clc
shll
sahf
xor
ret
fwait
push
popf
lret
xchg
fimull
cmp
or
pop
add
shrb
push
sub
cmp
flds
jle
xchg
rolb
and
aaa
xchg
sar
mov
adc
inc
push
xor
mov
and
insl
rcrb
imul
fmull
inc
mov
adc
clc
jbe
pop
push
in
mov
in
adcb
mov
cmpsl
in
incb
vunpcklpd
sub
cmpsb
dec
adc
rolb
pop
shll
mov
xchg
mov
push
jno
add
test
out
lret
sub
insl
insb
mov
in
push
out
add
mov
add
xor
movl
jo
and
push
xchg
jae
mov
aam
pop
or
push
jle
ret
cs
int3
mov
or
xor
xor
xor
push
popf
fists
jne
fbstp
dec
mov
shl
frstor
adc
rolb
jo
lret
pusha
mov
pushl
out
andl
int
dec
pop
sub
jl
mov
jge
lock
imull
mov
test
ljmp
shl
xchg
push
sti
fiadds
shlb
and
pop
and
sbb
mov
mov
inc
clc
ljmp
dec
mov
inc
daa
push
das
mov
and
loope
mov
sahf
movsl
add
or
jp
into
cltd
xchg
fwait
xor
jge
jle
inc
cwtl
jne
cmp
lcall
adc
or
jle
cs
pop
icebp
lods
xor
cmpsl
cmp
pop
imull
repnz
adc
push
dec
xchg
cmp
mov
or
in
jbe
mov
inc
iret
mov
stc
add
dec
add
test
lods
mov
xchg
out
sbb
sub
mov
pop
enter
or
sub
test
cmp
mov
xchg
es
mov
std
ja
cs
add
or
push
je
mov
fcmovb
ds
mov
loop
push
lret
pop
fnstsw
jnp
adc
pushf
cli
js
cwtl
dec
dec
aaa
jae
push
inc
out
es
or
cwtl
pop
testl
lret
mov
fs
jg
mov
adc
notl
xchg
pop
mov
cld
insl
xchg
xor
ret
mov
insl
aam
mov
adc
push
push
mov
cs
or
lret
add
mov
insl
ljmp
daa
jl
xchg
mov
inc
dec
xchg
mov
icebp
xchg
push
fsubrs
and
xor
cwtl
out
sub
out
fnstcw
mov
outsl
mov
xchg
mov
add
movb
push
and
push
cmc
in
and
cmp
or
test
shll
mov
adc
sbb
stos
push
sub
xor
mov
and
mov
sbb
fs
mov
fcmovne
add
adc
cltd
cmpsb
in
jo
add
in
dec
add
mov
push
add
test
inc
stos
jmp
xchg
fidivl
pop
inc
dec
jnp
mov
xor
cmpb
ret
pop
pop
sbb
inc
jns
mov
movd
not
push
sti
dec
cmp
dec
jmp
jg
fisubrs
sub
xlat
pop
add
pop
iret
mov
pop
adc
or
push
mov
adc
in
mov
pushf
clc
lcall
data16
jmp
aaa
xlat
xchg
mov
push
fnstenv
mov
ljmp
int
mov
cmp
nop
stc
mov
mov
jge
js
into
dec
jne
jmp
bound
sbb
aad
pop
movsl
sti
and
arpl
adc
imul
mov
cli
shr
sbb
sbb
cmp
or
sub
pop
scas
push
ror
insb
hlt
pop
cmp
mov
mov
arpl
jl
mov
movsw
cli
mov
push
pop
inc
scas
int
push
jae
jge
ljmp
push
adc
mov
lret
adc
sti
movsl
adc
jb
out
cmp
push
insb
pop
addl
push
outsl
lcall
pop
movsl
aam
dec
lock
adc
stc
jns
jge
sbb
fs
les
pop
sub
lret
xor
mov
adc
cmp
sti
mov
fldt
dec
jb
scas
pop
lea
lods
mov
fistpl
cwtl
push
aam
ja
aas
or
fiadds
jae
mov
or
xorl
sub
sarl
outsb
fwait
mov
and
adc
imul
jnp
mov
iret
rclb
add
jno
mov
lret
fcmovbe
fdivrp
clc
jle
test
pop
jl
mov
jae
push
call
cmova
fidivs
test
rorb
out
out
or
and
sbb
data16
jl
addr16
or
add
rol
popf
ja
addr16
sub
aam
jmp
imul
out
jecxz
loope
mov
and
popf
aad
popf
xor
mov
imul
pop
insl
mov
movsl
dec
int
rclb
int
jb
mov
mov
push
jge
inc
inc
cld
mov
fsts
add
push
into
shlb
adc
lret
inc
jge
insl
ffreep
inc
inc
add
out
int
pop
sub
fdivr
push
adc
cmc
and
shr
sbb
jp
xor
add
pop
dec
in
sti
lret
mov
jmp
and
cmc
inc
lcall
das
pop
loope
sbb
ljmp
aam
xor
push
xchg
xor
cs
scas
xor
add
jle
xlat
imul
push
adc
adc
cmpsb
lock
push
sti
not
outsb
xor
out
dec
shlb
hlt
inc
fstpt
mov
xchg
cmp
pop
xor
inc
lcall
je
arpl
push
cs
lea
mov
in
add
lods
pop
lds
xchg
negb
adc
or
repnz
pusha
bound
pushf
dec
das
or
cmp
das
testl
pop
inc
jno
adc
add
jmp
hlt
scas
cmp
shrb
loopne
push
dec
int3
gs
insb
push
icebp
mov
pop
bound
outsl
jle
pop
ljmp
fdivs
cli
jle
cmpsb
stc
mov
in
imul
sbb
cli
mov
adc
mov
push
xchg
cld
pop
loop
and
cmp
int3
jmp
scas
xor
repnz
lods
rcll
pop
aas
pop
aad
and
or
cmp
lret
mov
call
aaa
jb
xchg
pop
clc
test
fs
mov
test
push
mov
pop
aas
dec
mov
inc
test
lret
sbb
lods
add
inc
inc
add
es
xor
mov
lds
sahf
mov
fdivrp
push
or
mov
shr
popa
fsubs
mov
jns
rol
jl
and
pushf
xchg
cmp
cmp
sbb
sahf
pop
push
xchg
test
into
test
or
arpl
jge
out
rclb
xchg
testb
xor
sub
jl
decl
mov
mov
mov
xlat
cli
jmp
scas
rorb
clc
aas
mov
jbe
cmp
xchg
cmpsl
dec
pop
lods
pop
push
jno
mov
xor
cmpsb
fst
add
mov
mov
mov
sbb
cmc
call
in
cmpsl
xchg
pop
ret
sbb
xchg
xchg
stos
loopne
dec
fisubs
outsl
inc
movl
cmp
stos
jp
test
xlat
and
add
jbe
cmpsl
pushf
pop
enter
mov
icebp
jl
aaa
or
aam
cld
and
sarb
lods
mov
loope,pt
push
das
lock
mov
jmp
outsb
or
mov
dec
adc
orl
out
je
iret
sub
jge
ret
cmp
iret
gs
xor
mov
fiadds
xchg
mov
stos
sub
outsb
rolb
lret
pop
jb
loopne
jns
add
and
xchg
test
std
jbe
xabort
adc
inc
fisttpl
divl
ss
push
cs
push
mov
inc
fst
jae
pop
imul
jbe
dec
jo
rcl
add
and
hlt
ret
jns
add
mov
not
ja
fs
in
rorb
add
gs
or
in
and
loop
jb
adc
jmp
rdtsc
cmp
idivl
into
fwait
int
rclb
xchg
icebp
insl
addr16
das
enter
inc
mov
das
ljmp
pop
dec
lea
or
jb
stc
dec
add
aas
xchg
inc
lahf
mov
mov
jg
pop
int3
mov
inc
js
adc
std
sub
mov
add
xchg
mov
add
mov
inc
cltd
es
xchg
dec
xchg
lds
ljmp
ret
loopne
loope
push
and
sbb
cmpsl
mov
int
rcrb
repz
jo
cs
sbb
mov
lcall
jns
lea
loope
and
jg
out
jbe
jae
cli
hlt
adc
dec
mov
cltd
cmpl
dec
and
adc
ljmp
push
push
in
int
jecxz
sbbl
mov
iret
add
shll
jnp
and
and
int3
sbb
ds
xchg
inc
sub
jp
pusha
mov
sub
repz
pop
scas
add
mov
pop
data16
lds
out
popf
jns
adcl
fstpl
xchg
inc
je
dec
sub
test
add
inc
cltd
addr16
cwtl
pop
test
stos
mov
jle
rolb
and
xchg
jle
jmp
negb
std
lea
inc
or
imul
aad
bound
inc
in
push
ja
cwtl
mov
mov
mov
mov
mov
adcb
jge
mov
fs
jb
dec
ds
mov
push
in
sahf
ja
jno
clc
xchg
sti
or
sub
test
jne
add
mov
sub
xor
test
xchg
lods
scas
movsl
imul
jae
mov
pop
ret
loop
scas
sahf
int
inc
fidivs
sbb
xor
fchs
inc
test
call
fstl
outsb
pcmpeqb
adc
outsl
xor
xlat
mov
dec
pop
sub
jae
mov
repz
sbb
xchg
jb
and
and
cwtl
xor
sbb
pushl
dec
or
int3
std
clc
fs
lea
fwait
testb
inc
ljmp
sub
and
jae
sbb
mov
cmpsl
push
fadd
mov
icebp
hlt
js
adc
dec
pop
daa
add
lahf
je
lds
push
push
in
mov
adc
addr16
loop
pop
dec
popf
and
movsb
xlat
push
and
pop
adc
imul
xchg
add
mov
mov
mov
rolb
jnp
xor
fs
add
push
mov
gs
fstpl
pop
sbb
xchg
fidivrs
xor
call
mov
jne
sub
and
mov
arpl
jge
mov
pop
bound
lret
test
mov
lea
adc
out
mov
push
cmpsl
popa
sub
ljmp
adc
lea
pop
shlb
xchg
xchg
andb
loope
jg
out
les
or
or
sub
ds
mov
inc
mov
addr16
je
xor
ja
nop
mov
jo
dec
pop
xchg
shrl
pop
push
xchg
and
adc
xor
es
imul
out
push
cli
inc
xor
int3
push
mov
mov
insb
mov
inc
pop
pop
and
out
jno
dec
js
mov
mov
pop
dec
push
out
mov
call
je
pop
repnz
lahf
ljmp
push
fldenv
sbb
or
ret
sarl
inc
daa
mov
andl
lahf
leave
sbb
bound
dec
shrl
push
sbb
jnp
and
push
xchg
lock
leave
aaa
in
dec
push
sub
xchg
cmp
sub
jb
inc
mov
test
adc
add
sub
fimull
lret
xchg
movsl
shlb
sbb
out
out
call
sarb
add
notb
mov
xorl
sub
push
movsl
adc
aas
push
incl
loope
jns
cmp
sub
stc
xchg
movsl
xchg
outsl
sub
cmc
mov
dec
pop
sbb
inc
idiv
lret
sbb
cwtl
xchg
mov
mulb
in
pop
pop
aad
test
mov
test
and
icebp
mov
mov
sub
imul
lds
dec
mov
add
jl
lret
adc
aas
std
les
xor
xchg
fldt
lret
subb
movsb
in
repz
je
fisubs
cwtl
mov
out
push
mov
push
adc
pop
mov
mov
pop
push
sbb
inc
imul
mov
inc
in
xchg
xor
bound
jge
dec
cmpl
out
faddl
loopne
inc
sarb
add
repnz
std
push
push
pop
dec
outsl
and
jo
push
mov
cltd
loop
pushf
xlat
pop
aad
dec
loop
lock
shrl
sti
pusha
test
insb
lret
cmc
repz
sbb
stos
lock
mov
pop
mov
cmp
dec
and
xchg
sub
xor
aaa
nop
jmp
add
mov
scas
decl
jo
shr
add
pop
xor
pop
sbb
jo
add
mov
popa
cmp
std
add
sub
mov
sbb
jbe
test
out
lock
pop
gs
lret
int3
ja
test
cltd
icebp
sub
cmpsb
mov
mov
jmp
jmp
mov
jb
rorb
mov
andb
in
add
fsubrs
ja
mov
pop
and
sbb
mov
sub
out
repz
in
ja
fsubp
jne
add
int3
test
mov
mov
mov
xchg
xchg
mov
and
mov
push
pushf
mov
adc
mov
or
xor
dec
cmp
push
das
xchg
mov
and
push
lods
fisttpll
out
mov
mov
and
adc
stos
mov
inc
add
or
mov
fists
sti
mov
cmpl
ss
push
testl
push
imulb
pop
sbb
lock
dec
repz
pop
addr16
xor
subb
out
out
scas
fcmovbe
mov
out
lret
push
aaa
push
bound
or
jnp
xor
mov
cmc
jo
lea
rol
aam
mov
pop
push
adc
pop
fnstsw
add
add
gs
rol
out
pop
pop
ret
add
loop
pop
in
rolb
nop
std
push
cld
jg
sub
bound
arpl
loope
bound
xchg
xchg
xor
idivl
in
push
invd
jnp
lods
pop
decb
inc
jl
or
sbb
pushf
pop
roll
test
out
cmc
cmp
addl
jno
mov
outsb
mov
mov
icebp
sub
pop
roll
xchg
sbb
inc
cmp
push
scas
int
mov
pop
sarb
fsts
shlb
ffree
aaa
lea
call
jo
xor
clc
inc
lods
out
lods
adc
mov
jp
in
int
xchg
mov
pop
add
mov
popa
imul
cmpsb
push
imul
arpl
scas
push
jne
arpl
mov
fidivrs
aam
mov
bnd
adc
pusha
sub
fcompp
ja
inc
dec
fwait
sbb
or
jbe
pop
test
push
lahf
daa
pop
cmp
add
stos
fsubrs
push
mov
mov
dec
inc
daa
cmpsl
fisubs
add
cwtl
dec
mov
xlat
rorb
sub
xor
jnp
insb
call
mov
inc
or
out
cld
pop
jae
imul
in
sbb
aam
test
add
mov
xor
pcmpgtd
out
push
push
mov
scas
jp
adc
pop
test
mov
sbb
sub
add
daa
and
hlt
or
rol
adc
jo
aaa
sbb
adc
push
push
inc
jae
sahf
aas
jge
push
outsb
push
xlat
and
mov
mov
lds
mov
movsl
mov
mov
lea
add
pop
or
fsts
mov
roll
jbe
dec
sahf
push
mov
aas
jb
mov
in
mov
push
jg
ret
aas
xchg
cmpsl
in
lods
in
pop
std
repz
mov
mov
cmp
mov
sub
movsl
or
jo
push
mov
jb
mov
repz
data16
pop
imul
test
in
mov
mov
pushf
dec
cmp
andb
and
add
outsb
loopne
sbb
lret
stos
adc
inc
and
cmpl
lret
movsl
or
out
lds
pop
nop
sub
push
jbe
mov
roll
fldt
xchg
fimuls
xchg
mov
leave
mov
push
in
gs
pop
xchg
sub
or
int
sub
cmpsb
arpl
push
mov
test
mov
arpl
adc
rcll
mov
sti
or
mov
loope
ds
dec
jae
sbb
imul
dec
adc
bound
and
setnp
stos
fcoms
sub
push
dec
pop
add
inc
incl
ret
das
loope
jno
movsb
pop
mov
mov
std
imul
mov
pop
mov
cmp
ret
les
daa
jo
xor
inc
ss
dec
movsl
movsl
movsl
push
mov
dec
push
movsl
incb
ret
je
repz
ss
cmpsb
or
dec
cmp
push
fsubs
adc
cmp
mov
dec
dec
jns
arpl
lcall
popa
subb
sub
sbb
mov
in
sbbl
aaa
sub
jp
aas
cltd
faddl
cmpsl
jecxz
xor
mov
lret
pop
push
adc
aaa
push
jp
inc
mov
xchg
mov
mov
cmpsb
cs
sbb
inc
xchg
jne
lcall
faddl
movsl
lcall
add
int
mov
fdecstp
cwtl
neg
addr16
and
mov
fstpl
inc
ljmp
sbbb
sti
call
pop
rcll
pop
imul
arpl
cmp
int3
test
mull
dec
psubb
fs
ficoms
sahf
mov
adc
stc
push
add
mulb
sub
xor
jle
mov
push
xor
scas
ss
jbe
call
cmp
stc
xorb
fstpt
mov
sbb
icebp
out
pop
mov
hlt
ret
add
pop
mov
xchg
ja
in
pop
ret
jge
jo
push
lea
mov
arpl
dec
jb
popf
insl
divb
ds
leave
fnstenv
clc
clc
loop
push
or
mov
or
mov
iret
test
mov
or
clc
xchg
adc
pop
daa
arpl
add
mov
xchg
test
mov
mov
iret
sub
mov
fsubrp
in
sti
sub
add
std
adc
inc
push
data16
push
lods
mov
jnp
and
stos
test
mov
js
cmp
xchg
xor
push
clc
cli
daa
nop
cmp
sub
and
andb
fnstenv
xchg
pop
int3
dec
mov
push
xchg
lcall
rol
dec
out
mov
movsb
add
adc
jo
xor
inc
aam
mov
hlt
push
sbb
push
xchg
cmp
sub
imul
pop
mov
fwait
dec
push
push
mov
leave
negb
add
insl
outsb
pushl
sbb
dec
shll
mov
pop
cmp
push
fdivrp
and
insl
adc
insb
dec
cmpsb
push
dec
jp
lcall
ret
adc
push
or
add
repz
jl
and
sub
test
loop
in
dec
imul
pop
sbb
loope
mov
cmp
fcoml
mov
adc
in
jl
faddl
incb
push
cmp
dec
xor
shr
jnp
xchg
test
or
mov
adc
mov
push
sti
push
sbb
cli
cmpsb
adc
jno
add
roll
cmp
loope
push
xor
call
xlat
mul
dec
scas
and
mov
test
inc
movsb
or
push
dec
pop
pusha
lods
cmc
adc
pop
shrl
scas
lret
and
sti
add
mov
mov
call
push
in
inc
mov
xor
int3
shll
xchg
dec
push
and
jg
ja
fstpl
dec
sbb
sub
mov
pushaw
lods
jmp
xchg
mov
add
adcl
outsl
lret
icebp
mov
jg
jl
xchg
mov
push
movsl
in
js
aad
xchg
ret
in
cmpsl
pop
dec
out
rclb
fnstcw
push
ljmp
push
sahf
mov
jo
mov
mov
adc
popf
xor
sub
adc
xchg
test
out
data16
xchg
cld
out
cld
sbb
repnz
adc
not
jp
test
int
add
mov
call
hlt
lahf
insl
xor
dec
jg
dec
jmp
and
xchg
jo
mov
jmp
jl
sti
je
loopne
aad
xor
dec
out
fistpl
pop
cmpsb
fidivrl
xor
sbb
add
mov
add
fwait
daa
cmp
lods
sbb
push
out
insb
incb
mov
das
psubsw
outsl
mov
fcomps
fnsave
int
loopne
push
ja
lock
xor
sahf
inc
loopne
xor
xor
mov
ljmp
xchg
aam
stc
inc
xchg
ret
or
mov
sub
xor
sub
adc
xor
xchg
pop
es
daa
adc
and
cmp
addb
idivb
adc
dec
sbb
mov
addr16
add
stc
sub
add
xlat
lret
cmp
loope
adc
cmp
xchg
jb
mov
inc
mov
loope
mov
push
xchg
ljmp
adc
fwait
mov
mov
gs
je
jge
jns
in
jns
dec
sbb
jae
pop
popa
adc
jne
push
ss
cs
test
dec
or
test
jbe
xchg
insl
push
movsb
sbb
repz
iret
pop
push
pop
jbe
cli
sub
inc
xchg
xor
adc
mov
push
inc
es
push
inc
pop
and
cmp
in
cmpsl
pop
stos
xchg
jbe
arpl
fwait
iret
aaa
mov
jae
insb
mov
pop
pop
fimuls
mov
test
mov
push
jmp
mov
out
dec
mov
jae
fwait
xchg
mov
mov
jmp
pop
loope
dec
jl
push
jne
testl
xorb
lcall
push
loope
adc
js
mov
jo
push
push
cmp
pop
les
in
mov
sbb
sub
jnp
push
in
push
mov
mov
mov
jb
std
push
rcl
mov
setnp
pop
mov
cmpsb
je
mov
jg
enter
movsb
popf
add
test
repz
mov
in
pop
adcb
and
mov
push
icebp
ret
aaa
pop
aam
imul
test
xchg
mov
int3
pop
cmc
jecxz
lods
enter
out
push
xchg
addb
and
icebp
inc
lds
mov
jnp
cmp
mov
pop
inc
mov
xchg
push
jo
jl
jae
mov
pop
outsl
adc
mov
cmpsb
dec
adc
aas
and
lret
loopne
jno
mov
stos
call
xchg
fnstcw
xor
pushf
mov
jo
inc
pop
sbb
pop
jl
xorl
ja
shll
pusha
inc
dec
ja
xlat
cld
add
inc
dec
cltd
or
cltd
and
fcompp
ss
and
in
stos
adc
pop
cmp
shl
int3
cmpsb
sbb
out
nop
test
sahf
push
subb
mov
cmp
addr16
gs
addr16
fisttpll
pop
in
inc
lods
mov
lret
fsubrl
pop
into
cmp
jns
sbb
inc
or
pushf
mov
leave
add
cmpsl
pop
outsb
stc
inc
and
push
test
adc
dec
test
fisttps
pusha
sub
loope
mov
bswap
shr
add
lock
xor
cmpsb
outsb
dec
mov
mov
push
sbb
xchg
lea
jle
aas
repz
lods
push
add
ficoml
leave
out
je
jmp
out
dec
out
pop
and
sbb
sbb
iret
into
dec
outsl
gs
imul
or
lds
pop
dec
jp
and
or
into
jp
mov
loopne
aam
dec
mov
pop
xchg
or
push
add
inc
adc
jp
sbb
subl
aas
inc
fimull
into
in
test
sti
ficompl
jp
fs
jle
loopne
dec
rcrl
nop
add
xchg
movsb
mov
push
and
flds
movsl
out
sub
xor
sbb
stos
mov
sbb
adc
xor
sbb
jo
icebp
inc
in
insb
push
test
out
sbb
pop
mov
mov
and
fcompl
xchg
ror
into
imul
push
push
sub
and
adc
stos
cmc
js
imul
pusha
jle
int3
pop
jp
mov
loop
xchg
sbb
popa
int
aaa
jae
testl
pop
xchg
test
jge
data16
fs
idivb
leave
stos
jecxz
stc
pop
and
addb
push
inc
inc
icebp
or
cltd
inc
cmpsl
mov
sub
imul
jbe
fdiv
sti
or
or
enter
call
mov
aaa
popa
in
popa
dec
adc
jge
lcall
gs
cmp
cli
add
fdivs
fucomip
jnp
out
jecxz
ficomps
jl
adc
adc
and
jb
and
sbb
xchg
stos
xor
outsl
fidivs
enter
in
or
sbb
call
lret
mov
dec
mov
repz
stc
push
icebp
ret
dec
stos
es
mov
cli
push
lock
mov
movsb
stos
sbb
and
push
push
xchg
loop
stc
sbb
sub
inc
sahf
addr16
inc
sbb
mov
lcall
je
sbb
sbb
xchg
and
xchg
div
mov
inc
inc
shll
jne
loop
and
mov
inc
xchg
stos
xorb
in
and
stos
and
mov
sbb
jnp
mov
push
iret
gs
shrl
je
loop
shlb
roll
lret
dec
xor
add
jp
out
mov
inc
xor
aaa
iret
cmpsb
sti
mov
les
mov
lahf
cmc
push
sbb
add
jne
repz
stos
jp
popa
or
inc
imul
stos
stos
popf
lea
jne
xor
push
lock
dec
sub
push
sub
dec
dec
dec
daa
data16
xor
ret
daa
and
add
popf
mov
cmp
ret
jnp
int3
dec
rclb
xchg
test
orb
out
mov
cmp
out
dec
push
scas
aaa
jle
pop
call
adc
movsl
push
insb
rcr
std
sub
roll
movsb
addr16
test
xchg
cwtl
repz
sbb
push
xchg
lds
inc
mov
mov
mov
xchg
mov
inc
inc
ljmp
bnd
fsubrs
aad
mov
jecxz
push
cmc
sub
adc
xor
mov
fiaddl
hlt
or
push
or
lret
jge
dec
jl
dec
stc
pop
jo
lahf
cmp
popa
cmp
out
sahf
mov
outsl
shrb
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
mov
int
bound
adc
jae
lret
aas
negl
xor
aam
das
jb
add
dec
sbb
xor
xchg
pusha
jno
jmp
jno
xchg
or
std
cmpsb
sti
cld
sbb
sub
loopne
lcall
cmp
loope
stos
sbb
pusha
or
out
jae
popa
mov
ret
stos
pop
dec
aad
mov
imul
fs
ljmp
addr16
outsl
or
push
dec
sub
and
or
pop
pop
incb
mov
inc
xor
dec
push
pop
xor
clc
sbb
jae
mov
jae
sub
ficoml
mov
mov
xchg
stc
xchg
scas
sti
adcl
lock
and
pusha
dec
xchg
pop
jne
pop
mov
jmp
popa
or
mov
xlat
cmpsb
jl
popa
or
cmp
mov
arpl
push
lcall
mov
or
or
xlat
pop
mov
inc
jo
sar
ljmp
iret
jecxz
test
lcall
fwait
mov
mov
shrl
inc
push
jecxz
sbb
jnp
icebp
pusha
pop
add
or
and
nop
aas
cmpsl
push
push
insl
dec
mov
sbb
subl
jge
dec
mov
dec
pop
cmp
inc
mov
pop
in
out
or
lods
mov
mov
div
dec
enter
mov
add
aad
mov
es
mov
sbbl
repz
out
cwtl
or
stos
repnz
cmpsl
pop
adc
cmpsl
int3
int
mov
iret
mov
fnsave
iret
shll
fcmovnbe
inc
xchg
pop
rcrb
adc
inc
add
xor
dec
pushf
shlb
cld
std
enter
mov
rorl
jb
hlt
jnp
dec
xchg
push
xchg
xchg
rcrl
loop
cmpsb
xchg
push
test
pusha
negl
pop
insl
shl
repnz
mov
adc
jo
js
pop
pop
jne
sbb
mov
jle
lret
test
inc
mov
or
roll
xchg
jmp
ret
imul
mov
aam
enter
in
or
loopne
dec
fiaddl
mov
fsubl
ja
push
jb
jl
sbb
stos
loope
pop
ljmp
mov
jle
addr16
cmpsl
gs
fdiv
pcmpeqw
dec
xchg
sub
cmp
adc
xchg
test
xor
pop
aam
cmp
ret
mov
cli
sbb
movsl
lods
xor
cs
daa
mov
jle
sbb
push
push
and
sub
pop
xchg
jp
xor
push
jp
cmpsb
pop
jp
add
fwait
xchg
lds
mov
adc
dec
mov
add
sbb
mov
dec
call
rol
add
rcrb
pop
sbb
int3
testb
push
andl
adc
mov
xchg
or
fwait
cmp
dec
mov
push
ret
imul
stos
mov
call
mov
lret
mov
repnz
inc
sub
sar
pop
scas
out
movsb
enter
sub
fs
mov
cmpsl
push
pop
adc
mov
in
loopne
arpl
fisubl
or
enter
addb
pop
orl
push
ret
insl
in
adc
mov
hlt
ja
cs
dec
ja
test
fsubr
lods
cld
cmp
in
insl
fs
dec
sub
or
sbb
xchg
or
sti
sahf
jbe
mov
sub
insb
dec
and
popf
adc
lret
shll
outsl
and
lods
xchg
pop
adc
pop
in
cmpl
int
jbe
cmp
outsl
fwait
xchg
es
test
sbb
popf
je
sub
add
inc
out
xlat
jo
fmul
add
sub
lds
mov
dec
sub
stos
push
jecxz
fisubs
sbb
cmc
adc
mov
and
imul
jmp
dec
push
xor
test
in
pop
enter
aad
dec
mov
outsb
pusha
xchg
imul
arpl
or
clc
mov
lea
sti
add
push
or
shrb
repnz
mov
inc
insb
xor
mov
nop
cmp
ret
pop
dec
repnz
movsl
imul
stc
sub
and
cmp
clc
imul
ret
pop
aas
jecxz
xchg
mov
sub
cwtl
sub
push
in
std
jae
popf
mov
fisubl
fs
in
xor
xlat
enter
or
neg
jle
pop
jecxz
or
jne
in
jbe
inc
popa
inc
scas
inc
pop
cmp
stos
dec
shrb
mov
ljmp
inc
fs
stc
cld
xchg
jg
cmc
mov
fcmovb
notl
into
pop
inc
sahf
xchg
dec
bound
adc
pop
inc
sub
es
jl
test
aam
sbb
fiadds
xchg
sbb
mov
push
lods
and
andb
mov
jmp
lret
mov
mov
rcrl
push
and
sub
jmp
gs
push
cmpb
sarb
or
and
ss
adc
adc
in
mov
add
shrb
xorl
rorb
repz
test
ljmp
jmp
addr16
mov
pop
xor
inc
mov
fsub
repz
push
jns
inc
cmpsb
cmp
les
lahf
sbb
flds
add
test
mov
into
xorl
out
out
xchg
or
or
push
push
or
fisttpll
mov
inc
cld
mov
fucomi
mov
clc
decb
in
aam
cmc
adc
or
push
mov
pushf
xorps
cmpsb
push
sti
mov
dec
push
pop
mov
pop
inc
pushf
xchg
in
pop
testl
xor
inc
add
sbb
int3
mov
xor
cmp
daa
sti
inc
stos
jle
mov
pop
mov
push
push
roll
rcll
sti
rorl
addw
outsb
jo
cs
mov
push
addl
lods
mov
mov
add
or
out
mov
mov
out
xor
pop
insb
insl
cmpsl
fidivs
mov
insl
add
adc
ret
adc
mov
into
call
ja
idivl
sbb
sub
or
shll
xchg
fcmovbe
cmp
push
mov
bound
mov
pop
addr16
test
mov
dec
scas
cltd
add
cmpsl
out
inc
pop
xchg
movsb
inc
mov
pop
inc
and
imul
fisttps
jo
mov
sbb
out
push
into
cmp
ljmp
or
pusha
xor
and
fwait
mov
mov
repnz
arpl
mov
mov
lds
mov
arpl
push
dec
sahf
inc
jns
push
mov
cmc
popf
lcall
sub
les
aad
loop
jl
ret
fnstcw
mov
sub
iret
ja
pop
mulb
push
inc
daa
repz
push
add
cmp
jle
jne
dec
call
adc
std
cld
jle
subb
imul
mov
sbb
jmp
cs
and
inc
in
mov
addr16
test
adc
pop
loope
jmp
adc
andl
xor
and
fcmovb
inc
pop
pusha
mov
jne
fs
jns
and
out
mov
shl
stos
movsb
inc
xor
dec
lods
sahf
and
push
cmp
pop
push
hlt
cmp
push
jae
xor
inc
xor
inc
sti
push
lods
sub
icebp
ss
jl
mov
in
inc
ds
pop
sbb
or
icebp
xor
inc
push
dec
xchg
push
testl
pop
loopne
sbb
jp
arpl
testb
push
push
adc
sbb
rorl
cmp
xchg
ja
in
insb
int
or
xor
xor
fstl
xor
int
add
test
jl
repz
jecxz
aaa
out
inc
imul
push
scas
pushf
push
jge
lret
out
test
sub
inc
out
jbe
std
or
mov
jae
sahf
daa
xchg
loop
lds
mov
out
lea
sbb
rcr
les
and
ret
testb
fistpll
dec
add
mov
loopne
push
pop
out
mov
jecxz
jne
xchg
add
iret
stos
adc
mov
out
add
call
mov
adc
mov
cmp
or
sbb
inc
inc
lds
loope
and
adc
mov
es
dec
arpl
ja
mov
xchg
push
jle
aam
fwait
dec
rorb
add
fwait
sbb
lods
lret
testb
mov
cmp
int
je
pop
pop
rorl
lods
fisttps
mov
inc
mov
jmp
pop
adc
lret
mov
mov
push
cmp
outsl
xor
popf
adc
add
lcall
sahf
cmp
and
mov
les
loop
pop
lret
jbe
cmp
scas
cmp
push
mov
cltd
test
loopne
pop
mov
push
dec
bound
push
cmp
arpl
push
xor
jno
sbbl
test
cwtl
sub
pop
cltd
test
movsl
push
sub
push
in
sub
cmpsb
arpl
inc
cmp
xchg
clc
pop
pop
and
xchg
adc
dec
clc
mov
or
mov
push
xor
js
dec
jne
jecxz
icebp
ljmp
shl
int3
sbb
sub
clc
xlat
mov
je
push
jbe
and
xchg
andl
dec
push
add
or
lahf
loope
jmp
lret
push
rorl
inc
push
push
xor
push
rcr
push
cmp
dec
pop
and
pop
lds
mov
movsl
adc
mov
lahf
icebp
scas
dec
ret
xlat
enter
call
and
aas
rol
subb
test
jno
xor
adc
and
repz
into
xor
jne
add
test
sub
xchg
fcomps
aam
push
cld
jl
lds
dec
add
test
movsb
xor
out
jno
or
push
aaa
or
js
adc
cld
mov
adc
test
lahf
fisttps
loopne
fldcw
sub
mov
lods
push
and
sbb
fdivr
adc
loop,pn
rorl
jge
push
mov
adc
jmp
mov
imul
mov
xchg
xchg
ret
dec
push
out
cmpsl
addr16
add
pop
mov
cltd
push
cmpsl
mov
pop
jns
sbb
in
jne
cwtl
jge
pop
push
mov
js
mov
jns
fwait
repnz
dec
mov
imul
fistps
jo
pop
pop
add
jge
mov
or
ja
in
cmpw
fwait
pop
or
xlat
push
add
jecxz
ds
mov
adc
mov
inc
sub
jbe
add
shlb
pop
inc
test
hlt
test
js
jp
push
lods
and
imul
dec
sub
repz
leave
mov
repnz
test
sbb
mov
dec
sub
sub
sbb
push
pop
inc
sub
addr16
js
xchg
and
int3
sti
jmp
mov
fdivl
adc
icebp
loope
inc
int
lahf
adc
into
fs
dec
test
popa
mov
push
enter
subl
aas
lock
gs
mov
sub
fs
les
or
xchg
cmp
int3
pop
cmpb
ja
jge
xchg
ss
fmull
lret
sbb
aad
es
outsb
xchg
jb
push
loope
call
mov
sbb
dec
popa
dec
mov
inc
test
and
ret
test
mov
testb
mov
enter
out
lcall
or
and
dec
or
sbb
inc
jl
rclb
adc
mov
xchg
mov
pop
inc
jo
or
mov
hlt
stos
out
cli
pop
xchg
imul
test
lods
sbb
dec
jmp
orl
mov
popf
ficoml
sarb
xlat
loopne
ds
xrelease
mov
int3
in
pusha
mov
xchg
jmp
xchg
lds
fstpl
mov
mov
xor
mov
dec
pusha
movl
sbb
lcall
aad
aam
jecxz
out
stc
pop
jp
stos
dec
mov
fwait
movsl
mov
inc
adc
or
int3
dec
popf
orb
xchg
adc
in
inc
sub
imul
test
cltd
fs
push
pop
jmp
push
lahf
cmc
sarb
insb
cld
push
dec
xchg
xchg
adc
push
daa
sub
out
adc
sub
sbb
fs
pusha
bound
adc
xchg
ficompl
dec
xor
out
sbb
adc
mov
aad
xlat
sahf
out
stos
pop
push
adc
jb
out
lock
add
inc
mov
mov
dec
test
pop
inc
xchg
xchg
mov
xchg
out
movsl
jb
jb
xchg
je
stc
mov
add
inc
fiaddl
cmp
xchg
jp
sbb
in
jae
in
push
add
xor
pop
pop
push
push
or
addr16
xchg
jecxz
sbb
test
daa
cwtl
aaa
cmp
and
cmpsl
outsl
mov
jno
or
aad
ror
sti
mov
mov
lea
fimuls
aaa
adc
inc
rorb
lahf
fs
dec
cmpsb
icebp
or
imul
adc
in
xchg
inc
stos
cmc
leave
mov
push
inc
outsb
sahf
push
pop
movsl
lret
shrl
add
loopne
sarl
pop
repnz
enter
inc
jae
andl
xchg
fdivl
dec
divb
xchg
movsb
or
cltd
incb
push
int3
sub
add
fcmovu
xor
hlt
dec
cli
loopne
fsubr
inc
lea
les
hlt
cmp
adc
xor
int
xchg
cmp
or
xchg
sbb
mov
out
int
lahf
call
dec
xchg
imul
mov
out
mov
test
inc
lret
push
fbstp
cli
in
mov
jb
jns
sbb
push
inc
rclb
and
scas
lcall
or
pop
or
xor
mov
cmp
aaa
shll
pop
outsb
dec
inc
dec
fmul
and
cmpsl
adc
pop
add
cmp
xchg
fildll
fldt
mov
mul
jg
rcll
inc
outsl
push
daa
test
repnz
xchg
fs
sbb
adc
and
js
pop
bound
enter
inc
dec
adc
je
sbb
xlat
test
mov
xchg
int
adc
xor
mov
sbb
daa
pop
rclb
cwtl
sbb
cmp
jmp
adc
dec
in
mov
aas
dec
dec
pop
cmp
pop
in
cmp
pop
fwait
push
sub
push
adcl
lods
or
dec
gs
je
aad
icebp
test
dec
mov
dec
cwtl
lcall
mov
dec
cmp
sbb
add
sub
pusha
pop
jnp
roll
jno
shl
es
or
pop
or
das
or
push
and
and
out
movsb
mov
mov
pop
sbb
pop
addb
jle
sub
add
pop
jg
and
rorl
jae
cmp
dec
into
pop
stos
aas
testb
cmpsl
leave
aas
mov
ret
shrl
int
pop
dec
imul
mov
fdivrp
fistpll
jle
push
dec
ljmp
imul
int
scas
jno
xchg
fnstenv
or
xor
mov
test
out
mov
pop
xchg
sub
dec
jo
or
inc
jne
mov
jecxz
aas
push
sbb
pop
stc
add
xor
or
shrb
test
fisubl
ret
mov
pop
mov
lds
sti
cmp
movsl
int
cmp
sbb
push
stos
xlat
adcl
stos
cmp
fmuls
loope
mov
sub
ja
or
mov
les
lods
mov
aad
pop
pop
addr16
mov
das
int
test
cmpsl
les
jbe
and
xor
cmpsl
iret
cmp
lods
jmp
xlat
cli
push
pop
lret
and
ret
dec
xchg
jbe
enter
lret
lods
dec
fsubrs
stos
push
jae
popa
pusha
mov
sbb
dec
xor
test
shll
jp
bound
mov
mov
repnz
aas
dec
subl
sub
pop
aas
iret
test
aad
shll
mov
dec
rcrb
jae
ss
std
adc
je
repnz
xchg
sub
aas
mov
sbb
nop
add
mov
fisubs
arpl
ja,pn
and
mov
mov
xchg
jmp
daa
push
fmull
pop
or
cli
stc
mov
push
pop
sbb
adc
pushf
jns
iret
popa
mov
pop
jne
xchg
subl
fcmovnb
or
scas
push
fisubrs
int
and
push
or
dec
movsb
cmp
dec
adc
ret
push
adc
in
dec
cs
mov
pop
cmc
mov
or
cmc
subb
mov
mov
adc
jmp
jnp
ret
lea
addr16
sub
stos
jo
sbbb
cmp
and
in
xchg
or
mov
fsubl
xchg
fldl
xor
int3
xor
idiv
mov
mov
xchg
decl
xor
mov
push
arpl
ljmp
mov
jmp
xor
sahf
pop
pop
mov
inc
push
fisubs
xor
lods
pop
sahf
add
sbb
mov
xchg
xchg
mov
adc
dec
or
cs
jge
push
subl
loope
pusha
push
lahf
dec
cltd
sub
adc
mov
jmp
call
push
or
and
xchg
int
imul
mov
ja
iret
dec
xor
ret
dec
mov
cs
dec
cmpsb
push
ffree
lret
and
xchg
sbb
cmp
aas
aas
loope
xchg
ja
push
scas
xor
outsl
xor
mov
and
mov
sbb
and
repz
jo
dec
outsb
or
cmp
shrl
orl
or
mov
mov
gs
scas
xchg
mov
xchg
xor
call
pop
in
mov
stos
test
pop
mov
add
scas
je
pop
pop
push
les
mov
adcl
lcall
pop
mov
aam
out
xor
cmp
movsl
iret
stos
outsl
sbb
sarl
cmpsl
sub
dec
daa
insb
lahf
sarl
sbb
pop
and
inc
or
movsb
inc
cs
lcall
xchg
mov
fsubl
data16
cld
push
xlat
push
int
cltd
jbe
mov
bound
jge
movsb
call
mov
xchg
cs
in
cli
ret
mov
fwait
cs
mov
ds
push
inc
aaa
xor
shll
inc
cmpsb
inc
int
sbb
mov
mov
test
outsb
push
push
ja
add
jle
into
jno
call
sub
and
inc
mov
mov
and
rcl
pushf
jle
sbb
inc
cwtl
cmp
popa
test
pop
stos
ja
std
pop
ret
or
mov
and
ror
fucomi
cmp
ss
xchg
mov
mov
add
pop
push
cmp
sbb
add
mov
cmpsb
inc
lahf
fsubl
push
mov
jno
pushf
and
inc
repz
push
out
je
fwait
div
icebp
aas
pop
add
mulb
and
mov
addr16
mov
xor
lcall
sti
push
mov
fsubr
inc
sub
pushf
push
cli
shl
arpl
or
pop
shl
adc
and
ror
mov
jmp
and
jno
in
mov
add
sbb
aam
test
sbb
fs
loopne
cmpsb
loop
popa
popf
out
sbbb
daa
stc
aaa
fdivl
adc
imul
pop
jb
jle
mov
aas
js
loope
pop
int3
inc
mov
mov
fimuls
adc
imul
lods
mov
or
insb
jno
int3
sbb
pop
lcall
outsb
mov
fcoms
xchg
mov
push
dec
aam
mov
push
popf
ret
insb
and
xchg
adc
in
popa
mov
jmp
push
inc
or
dec
push
push
shrl
dec
xchg
jmp
and
stos
or
xor
shll
and
mov
mov
inc
movlps
mov
loope
mov
mov
jge
push
nop
call
sbb
mov
stos
pop
xor
add
subb
imul
sub
loope
dec
pop
das
sub
lret
outsb
scas
sbb
lods
pushl
mov
loopne
ja
sbb
in
mov
inc
ret
mov
adc
and
das
sbb
notb
xor
adc
cmpsb
scas
mov
loop
jns
pop
or
cld
adc
xchg
xchg
out
adc
test
jecxz
add
cmp
inc
pop
push
hlt
mov
add
mov
xchg
jge
loopne
sub
repz
insb
push
ss
mov
sub
out
movsl
addl
jns
xchg
shrb
insl
movsl
cwtl
push
sub
mov
sbb
sbb
sub
popf
pop
cmp
in
cmp
fdivrl
fcmovb
jne
jg
mov
je
int
cmp
inc
stc
sub
popf
lock
sub
mov
out
or
sub
pusha
push
shl
jns
push
xchg
in
shl
sub
test
jle
js
lcall
jp
jmp
inc
add
mov
ret
sub
gs
xchg
aad
cmc
int
cld
insl
enter
ds
cs
and
rolb
sbb
mov
cmpsl
cmp
mov
hlt
popa
int
mov
daa
add
dec
inc
adc
or
loope
pop
in
jp
lock
mov
dec
pop
cmpsb
mov
jnp
or
cmp
pslld
adc
cmp
adc
sbb
push
cwtl
pusha
out
adc
jle
aas
loop
notb
or
clc
insl
les
lea
push
popf
cmp
push
push
pop
xchg
popa
pop
fimuls
jo
mov
scas
xchg
ljmp
sti
jmp
push
das
dec
jb
into
sbb
pop
pop
jecxz
outsl
jmp
bound
push
dec
test
pop
loope
cs
and
icebp
mov
sub
popa
sbb
jno
mov
lret
jl
sahf
filds
push
dec
sahf
ds
xor
add
sbb
std
jo
xchg
sub
cmp
cmp
mov
cmpsb
sbb
push
xor
and
mov
sbb
pop
loope
ret
and
push
push
rolb
cmp
outsb
xor
loope
or
cmp
inc
es
inc
pop
lods
pop
sub
int
jge
fsubs
jb
and
xchg
mov
sub
add
add
add
mulb
dec
scas
test
das
push
out
jmp
clc
mov
cmp
loopne
stc
or
push
mov
leave
stc
imul
jge
sahf
push
and
fistpl
rorl
adc
xor
mov
es
sti
dec
stc
dec
shrb
dec
imul
mov
imul
or
mov
fucomp
sbb
stc
cmc
sub
insl
push
adc
or
jnp
push
adc
adc
cmpsb
test
aaa
sbb
mov
cmpsl
dec
inc
sbb
insl
pop
sahf
cltd
mov
pop
push
mul
dec
aam
mov
cmp
movsb
aaa
xchg
xor
nop
ret
xchg
lock
dec
adc
push
cwtl
insb
out
add
lret
aad
jg
mov
fnsave
mov
pop
sar
xchg
rorl
inc
pop
and
into
sahf
sahf
mov
jno
ja
pop
xor
icebp
push
pop
scas
lret
inc
jmp
and
sub
push
mov
cmp
fmul
push
mov
in
stos
add
ljmp
dec
andb
jo
shl
lods
outsl
mov
inc
push
xor
mov
add
or
fiaddl
dec
xchg
and
dec
in
enter
cmpsl
mov
out
push
dec
ljmp
jmp
mov
lock
mov
sub
push
push
jbe
inc
dec
jmp
mov
jmp
mov
fimuls
iret
fcomps
ret
fcomip
popf
out
cmpl
cltd
and
imul
int3
jns
cmp
sbb
pop
cwtl
jbe
mov
aas
add
push
ja
rcll
cmp
mov
ljmp
or
jmp
xchg
fwait
call
cmp
dec
pop
xchg
push
or
pop
cld
fnstcw
mov
test
or
adc
lret
scas
imul
push
test
and
xor
cltd
or
sub
loop
push
ret
jle
cmp
pusha
jg
xchg
jmp
sub
imul
mov
mov
mov
mov
dec
cli
sbb
jg
cli
dec
ss
repnz
call
mov
sub
call
xlat
push
mov
adc
fwait
mov
adc
mov
fs
mov
insl
lods
fsub
lods
mov
xor
mov
cmc
pushf
cmp
mov
xchg
cmpsb
cmp
popa
lret
pop
push
and
jne
decb
mov
xorl
add
dec
mov
popl
call
in
fidivrl
mov
ss
xorl
movsl
dec
ret
sbbl
sbb
dec
lcall
jl
stos
in
fcoms
icebp
mov
sub
out
push
mov
jg
dec
loope
adc
cld
repnz
leave
lock
ljmp
add
jo
dec
cmpsb
js
rolb
stc
dec
test
pop
clc
sub
imul
jmp
push
sti
movl
stos
mov
aas
adc
in
ja
inc
int3
movsl
fldt
cmpl
lcall
call
mov
insl
sub
add
jne
mov
mov
push
mov
jo
xor
pop
adc
ret
into
xchg
mov
fbld
es
push
xor
je
outsb
dec
pop
push
lods
jle
dec
lea
dec
jnp
arpl
ret
adc
cld
pop
dec
push
js
std
je
fstps
cmp
test
inc
out
mov
or
jecxz
and
sbb
adc
imul
lret
cli
xor
push
mov
inc
xor
push
outsl
std
setbe
push
xor
fistps
and
stos
shr
push
je
dec
rclb
scas
jnp
aaa
scas
or
push
repnz
push
pop
std
push
movsl
shrb
sbb
ja
int
mov
shlb
cmp
xor
iret
mov
movsl
sbb
add
xchg
xchg
into
psubd
pop
fbld
in
roll
xchg
adc
mov
lahf
jg
test
inc
out
hlt
nop
lock
ret
add
jg
imul
dec
pop
mov
lahf
and
fdivrl
repnz
mov
stc
pop
loopne
cmp
out
adc
dec
cmp
stc
outsb
mov
pop
daa
out
das
loopne
push
aas
jnp
xchg
cltd
mov
xor
mov
pushf
pushf
mov
push
dec
lcall
bound
mov
in
stos
rorb
testb
mov
pop
jno
sub
out
gs
adc
xor
xor
pop
dec
fisubl
push
jae
test
push
pop
xchg
mov
outsb
fidivl
pop
fstl
pop
cmp
inc
das
adc
jp
clc
shll
lcall
mov
in
fisttpl
xchg
les
in
mov
orb
pusha
das
ss
sub
mov
jbe
test
cmc
in
sub
sub
out
adc
loopne
push
pop
xor
dec
push
ror
out
das
inc
cltd
mov
xor
lods
mov
fwait
mov
mov
xor
data16
inc
dec
push
push
lea
dec
dec
pusha
xor
inc
push
les
pop
mov
sub
movsb
jbe
add
aam
hlt
adc
ljmp
and
mov
pop
sbb
mov
xor
jl
test
les
outsl
add
jl
pushf
sub
and
add
sbb
sub
mov
cmc
repnz
mov
xchg
fbld
in
dec
mov
xchg
cld
inc
insl
pusha
sarl
test
je
cmp
sbb
frstor
mov
das
push
lea
inc
cli
nop
fstl
ret
lods
ds
shlb
outsb
and
aad
jno
push
add
mov
ficoms
adc
inc
imul
xor
dec
dec
jo
stos
adc
scas
push
sbb
fs
and
and
sub
jbe
jnp
movsb
mov
sbb
fldl
lock
test
imul
sti
fistpl
repnz
xchg
clc
pop
jnp
lods
jns
sub
addl
cmc
xchg
jno
push
or
or
and
dec
lcall
aaa
jmp
jns
mov
mov
mov
popa
ss
mov
andb
cltd
cmp
ret
pop
jnp
sub
rorl
ja
mov
xor
push
inc
xchg
ds
bound
pop
nop
leave
or
or
movsb
add
in
das
stc
or
or
dec
lcall
add
cmp
pop
mov
sbb
or
iret
add
mov
cmp
adc
or
in
jmp
pop
outsb
in
xor
sbb
pop
xor
push
push
jle
loopne
push
nop
js
mov
adc
dec
jnp
lods
dec
sub
cmp
pop
cmp
mov
xchg
inc
fstpl
jp
scas
sbb
add
adc
gs
stc
enter
adc
or
jb
movsl
jmp
or
xchg
dec
insl
ret
leave
sarb
add
fiaddl
sbb
mov
or
out
jmp
mov
and
and
cmc
movsl
add
fdivrp
jl
add
mov
mov
test
int
fstpl
ja
add
cmp
sbbl
gs
popf
sub
pop
filds
sbb
lds
inc
sbb
popa
mov
test
pop
push
mov
fucomip
leave
stos
int
or
outsl
inc
push
mov
ror
adc
mov
mov
sbb
cmpsl
sbb
inc
mov
test
push
mov
mov
movsl
fsubr
mov
incb
arpl
in
add
rol
push
adc
mov
sar
and
adc
lock
fistps
inc
std
inc
mov
lsl
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
cmp
lods
add
add
pop
mov
repz
push
mov
xchg
sbb
int3
push
sub
jmp
movsl
fistpl
ficoml
dec
xbegin
pop
scas
or
inc
jb
dec
xchg
jo
push
in
out
aas
lret
adc
movsl
test
inc
adc
mov
mov
push
or
add
pop
inc
cmp
inc
scas
jbe
pop
enter
add
push
loopne
rclb
push
out
cmp
jno
inc
ja
xchg
add
jecxz
lods
in
mov
fildll
sbb
mov
xchg
inc
cbtw
cwtl
rorb
lcall
fdivr
pop
xchg
shrl
adc
cmp
out
pop
xchg
push
pop
xchg
add
mov
dec
fcompl
jns
inc
or
xor
adc
subb
jmp
push
notb
inc
inc
inc
shll
imul
cli
xchg
je
movsl
out
sub
or
idivl
pop
ret
mov
cmp
aaa
xchg
cs
jbe
gs
mov
out
jo
inc
pop
call
add
cmc
ja
mov
fists
push
push
pop
push
dec
xor
mov
jo
cmp
fabs
out
sub
xor
icebp
or
daa
add
pop
xchg
xchg
je
out
out
daa
loopne
ljmp
mov
inc
out
stos
es
pop
sub
sub
addb
xchg
add
daa
aaa
sub
inc
sbb
push
sbb
mov
adc
outsb
mov
adc
cmp
call
test
aam
ja
xchg
aaa
inc
imul
rolw
nop
cmp
enter
jge
dec
push
fxch
aam
ret
or
mov
in
jl
mov
idivl
push
icebp
scas
jno
fwait
cwtl
cwtl
and
sub
mov
movsl
daa
lock
cvttps2pi
fiaddl
or
pop
pop
into
jae
xchg
cmpsb
xor
inc
push
dec
mov
add
jp
mov
sbb
inc
xchg
jecxz
cli
and
add
add
and
aam
aam
ljmp
je
pushf
in
test
mov
add
lods
add
add
int3
jae
mov
stc
mov
adc
pop
mov
mov
mov
out
or
lock
sbb
in
mov
roll
fwait
mov
cwtl
xor
into
inc
push
imul
cmp
jge
or
mov
mov
nop
sbb
clc
aad
sahf
mov
adc
mov
jns
dec
adc
movsb
pushf
dec
cmp
outsl
cmp
add
inc
bound
dec
add
pop
and
inc
cltd
xchg
push
pop
pop
mov
cmp
ss
test
imul
add
mov
sti
cmpsl
mov
dec
mov
pop
mov
add
xchg
js
imul
push
testb
xchg
imul
sbb
in
dec
dec
mov
fdivrl
or
inc
test
dec
lret
scas
inc
aad
inc
push
iret
cmp
mov
jg
cwtl
push
fidivrl
hlt
pop
pop
mov
and
sub
mov
jp
adc
push
enter
mov
lods
xchg
inc
mov
addb
push
je
push
jae
push
loope
push
fists
or
js
cs
cld
dec
pop
dec
mov
and
pop
pop
xor
mov
out
lods
cmp
stc
stc
into
repnz
add
pushl
push
pushf
pop
or
add
mov
std
repz
arpl
adc
test
scas
outsl
imul
sbb
and
int3
repnz
cs
cltd
jne
adc
sbbb
fists
add
xor
in
rorb
popa
cmp
movsb
aas
xchg
fcmove
rcrl
push
fsubl
and
pop
sahf
shll
inc
popf
dec
xchg
out
xor
mov
xchg
test
push
cmc
jl
mov
push
or
and
push
adc
aaa
popa
mov
mov
push
xor
gs
aaa
push
push
mov
add
push
pop
popa
push
repnz
push
cld
mov
std
add
bound
stc
js
sarb
fcoms
or
scas
outsb
push
ds
mov
aaa
push
and
pop
in
mov
cld
or
fbld
xchg
std
adc
cwtl
das
jno
xor
js
pop
adc
sbb
lcall
je
fldl
cs
mov
hlt
iret
ret
pop
xchg
mov
call
std
mov
push
rcr
dec
int
pop
jp
add
stc
shll
pop
cmp
adc
lret
sbb
scas
sbb
jns
cmp
add
mov
push
adc
cwtl
out
pop
cld
pop
and
add
add
xor
rolb
adc
xchg
inc
dec
xchg
adc
outsl
add
fnstsw
mov
mov
lods
insb
cmp
ficoml
cmpsl
cmpsl
int3
push
dec
pop
pop
jnp
dec
sti
sbb
xor
sbb
or
xchg
push
addr16
jp
data16
dec
add
push
mov
jp
rolb
bound
into
add
or
mov
pop
movsb
adc
pop
popf
data16
pop
gs
jb
cmp
pusha
or
or
divb
add
mov
lds
cmp
add
add
sub
das
jle
jg
imul
xchg
test
dec
stos
add
lods
add
add
sbb
add
insl
in
insb
les
sub
rcrl
nop
xchg
mov
fsubrs
inc
fcmovnu
mov
add
or
xor
and
imul
mov
dec
inc
dec
pop
and
icebp
cmpsb
jmp
dec
inc
and
pushf
mov
cli
arpl
pusha
xchg
pop
mov
and
pop
and
inc
sbb
push
dec
into
adcl
aam
and
movsl
sbb
xor
outsl
sub
mov
adc
inc
movsl
sub
xor
hlt
in
rolb
icebp
mov
leave
test
sub
movsl
sub
jnp
fsts
xchg
xchg
xchg
sahf
addr16
and
mov
mov
pop
loop
stos
add
lods
add
add
std
insb
mov
call
dec
sub
je
and
and
insl
icebp
cmp
out
shlb
jae
cld
decl
inc
sub
cmp
jno
sub
sar
jb,pn
add
addr16
bound
cld
scas
cmp
les
adc
daa
lock
es
or
xor
add
xor
cld
out
test
gs
pop
mov
adc
out
fs
sbb
pushf
fsts
xchg
jo
jmp
enter
popa
icebp
xchg
jl
mov
mov
or
push
lock
add
cmp
add
or
ret
lods
sub
mov
stc
cmpsl
lods
add
lods
add
add
lret
bnd
pop
push
das
aad
adc
mul
sti
bound
and
xor
sub
mov
scas
mov
sbb
dec
hlt
outsb
sarb
jp
pop
mov
test
adc
int
lcall
cmp
imul
mov
loope
sbb
jae
sbb
add
dec
arpl
pop
push
testl
mov
push
jns
and
or
sub
add
mov
addr16
pusha
and
aam
fistpl
cwtl
fld
add
ror
outsl
clc
rclb
add
xchg
push
lods
add
xchg
add
add
fs
jns
mov
mov
xchg
pop
jbe
outsb
lahf
in
sbb
jl
mov
dec
sub
pop
xlat
xlat
out
xchg
dec
sbb
jnp
dec
test
int
pop
scas
ffree
mov
sub
sarl
leave
cltd
imul
xchg
cli
andl
lahf
inc
out
mov
ss
sbb
outsl
aas
imull
dec
push
lods
gs
add
arpl
add
cmp
pop
adc
inc
dec
jne
xchg
jb
mov
sbb
in
pop
call
add
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
pop
inc
add
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
in
inc
add
aam
add
aam
add
inc
add
aad
add
inc
add
aam
add
aam
add
add
aad
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
or
sub
sbb
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
aam
inc
add
or
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
enter
sub
inc
add
in
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
cwtl
arpl
pop
jnp
add
lods
add
add
adc
add
inc
repnz
jbe
cmp
in
dec
jg
hlt
jecxz
jmp
popf
cmp
repnz
push
mov
inc
pop
fcomi
xlat
jnp
cwtl
xlat
xchg
cmp
in
shlb
xor
jmp
lods
rolb
sti
mov
fcmovu
clc
cmp
out
call
stc
xchg
sbb
sbb
dec
lcall
int
dec
cmpb
and
or
mov
jbe
outsb
mov
mov
test
push
dec
add
loope
xchg
xchg
xor
mov
lahf
dec
and
inc
repz
adc
sub
cli
jl
xlat
push
add
clc
adc
xchg
add
lods
add
add
or
dec
jmp
xor
test
idivl
add
push
inc
scas
rolb
sub
inc
in
adc
jge
mov
jge
repz
scas
test
sbb
cmp
cmc
and
adc
jne
int3
sbbb
test
jae
cmp
xor
lret
repz
loopne
das
sti
shl
jnp
mov
lret
jno
jbe
sub
push
rcll
out
mov
out
cmpsb
je
mov
fwait
imul
lea
xchg
mull
loop
lahf
movsl
leave
incl
add
add
stos
pushl
xchg
push
psrlq
add
inc
add
out
or
mov
jmp
sar
cmp
cmp
inc
out
sub
add
lahf
insb
je
push
mov
xchg
cmp
pop
dec
sarl
fstsw
stc
imul
xchg
fsts
inc
addr16
pusha
stos
add
mov
les
mov
and
test
mov
dec
pushf
mov
fwait
add
xchg
add
repz
dec
loop
cli
in
data16
xchg
and
add
inc
bnd
stc
aam
es
mov
mov
pop
push
dec
xor
aad
push
cmp
cmp
in
fimuls
adcb
lods
add
add
jmp
aam
adc
mov
test
adc
fadd
cmpsl
jmp
xchg
mov
fucomp
pop
fldt
add
inc
mov
cmp
je
mov
mov
cs
fs
or
sub
or
push
mov
sti
ret
loop
test
loop
cmpsl
add
jmp
cmp
aam
loop
aam
add
mov
adc
pop
xchg
xor
movsl
add
jg
mov
cmpsl
sbb
dec
xchg
dec
sbb
movsb
mov
or
mov
xchg
movsb
lea
pop
fnstenv
std
negb
sub
in
shll
cltd
add
lods
add
add
je
jecxz
push
cwtl
stos
inc
xchg
pop
fildl
dec
fidivrl
inc
pushf
xchg
imul
shlb
adc
subb
jns
jae
das
jmp
and
fs
jmp
sbb
call
into
leave
and
cltd
int3
fcoml
push
aas
fstpt
or
xor
xor
xchg
push
int3
dec
sub
jo
mov
push
xchg
lret
dec
xor
cmp
jg
or
sub
jae
lods
or
into
ljmp
adc
mov
fidivl
xchg
mov
scas
fbstp
inc
mov
add
cltd
add
lods
add
add
inc
fimull
sbb
xor
rcll
movsl
push
movsb
repz
lahf
das
xor
sub
sub
movsb
aam
loopne
mov
lods
rcll
jb
xor
or
aaa
pushf
xchg
ja
jnp
out
add
cmpsb
push
js
sbb
adc
adc
std
call
subl
nop
loop
mov
push
out
jg
std
incl
inc
insl
or
sbb
lret
and
jl
lahf
lcall
int
add
aad
mov
fmuls
dec
out
test
aaa
dec
in
fwait
scas
fdiv
pop
sub
daa
sbbl
add
jle
or
fstpt
and
test
jns
mov
cmpsb
mov
cmp
pop
mov
mov
fisubrl
sbb
mov
cltd
sub
movsb
lcall
icebp
mov
ret
jb
pop
xor
fwait
std
arpl
test
xchg
fcoml
fstpl
xor
inc
mov
adcb
and
cmp
dec
scas
lcall
and
mov
adc
scas
repnz
mov
jecxz
fistl
inc
mov
test
pop
dec
xchg
add
add
mov
aam
xor
and
das
fwait
add
lods
add
add
cmp
dec
adc
or
pop
push
sub
jo
pop
ret
pop
inc
add
aam
test
xor
push
mov
push
add
sti
inc
lea
insb
das
hlt
loopne
push
sub
sub
iret
in
or
aas
mov
mov
xchg
rorb
arpl
fs
xchg
mov
mov
jmp
pop
lods
mov
popf
loop
test
nop
cmp
jbe
xchg
fldt
lock
out
pusha
sbb
xchg
mov
orl
mov
mov
mov
add
add
push
add
mov
out
push
xor
add
add
fimuls
sbb
pop
add
scas
decl
stos
bound
mov
mov
cmp
xorl
push
cmpsl
test
test
mov
fcomps
scas
sub
fnstenv
push
lcall
add
pop
xchg
dec
pop
lret
insb
sarl
xor
xor
cmp
pop
cli
add
sti
mov
xchg
jge
aas
lahf
out
in
or
sub
jb
fbstp
ret
xchg
cmpsl
push
cwtl
push
add
test
or
lods
aam
lods
mov
sahf
cld
mov
fs
shlb
cli
push
lea
fadds
add
add
mov
jmp
fimull
jmp
pushf
add
lods
add
add
cmpsl
and
or
rcl
pop
in
cmpl
cmp
sbb
and
and
push
xor
or
cmc
maxps
add
punpcklwd
in
mov
sbb
neg
lahf
push
in
lret
sbb
dec
rcll
cmpsb
dec
cltd
insl
lock
fs
xchg
mov
out
leave
mov
ds
hlt
fildl
add
shl
jecxz
cmpsb
cwtl
ret
test
outsl
ja
out
out
xchg
mov
stos
mov
push
popa
in
sub
cmc
fcmovnbe
imul
fmul
jg
adc
jne
orps
cmp
in
cmp
add
add
pop
iret
pop
aad
ss
dec
fisttpll
pop
hlt
xor
add
or
xor
outsb
shll
push
fxtract
push
scas
dec
test
movsb
push
jb
shrb
xchg
pop
fs
icebp
inc
imul
or
aaa
ds
daa
pop
cmp
test
cs
fimull
push
sub
lcall
out
jecxz
adc
das
das
icebp
xchg
pop
mov
out
loop
cmpsl
pusha
dec
xchg
fistpll
xor
lods
adc
stos
mov
std
hlt
pop
jmp
mov
mov
dec
mov
jns
dec
out
sub
cmpsb
daa
lret
fs
cmpsb
addl
mov
fwait
test
jg
and
add
lods
add
add
int
xchg
inc
ret
inc
aam
fistps
testb
aaa
fldcw
sbb
sub
int3
scas
repnz
xchg
clc
imul
repz
dec
jae
outsb
jmp
pop
xchg
fdivp
lea
xor
push
loopne
gs
push
lods
pushf
add
rcll
test
mov
mov
jno
pop
int
mov
xchg
popf
pop
std
and
lds
push
pop
imul
arpl
dec
cmp
push
test
jbe
popa
push
add
lea
lret
push
xor
insb
data16
gs
mov
adc
outsb
adc
jecxz
mov
add
lock
jle
repz
dec
iret
mov
add
aaa
rcrl
inc
sub
sub
jne
cmp
adc
add
xchg
loop
cmc
pop
test
je
mov
xchg
mov
mov
lahf
push
mov
and
push
lcall
fwait
jmp
lods
stos
ret
outsb
jne
into
mov
das
leave
aas
jns
jge
pop
clc
and
and
sub
popf
sbb
add
insl
scas
push
frstor
sbb
sbb
mov
and
sbb
cltd
mov
xchg
jmp
push
fwait
inc
addr16
cs
lea
inc
xor
lods
xchg
add
add
adc
adc
mov
lds
aaa
lahf
add
lods
add
add
mov
xor
xchg
and
push
out
loop
xchg
popf
test
lds
cld
push
hlt
cmpsl
or
mov
out
dec
sub
jne
sbb
movsb
lret
mov
adc
inc
xor
xchg
cwtl
mov
insl
sti
mov
mov
jnp
add
ss
andl
fadd
mov
jecxz
fisttps
cmpb
or
popa
shll
fldt
aad
in
sub
movsl
adc
pop
pop
inc
add
jecxz
or
adc
stc
jae
pop
in
dec
and
lahf
push
fwait
add
mov
add
add
mov
lock
mov
sarb
call
lods
add
add
add
cmp
adc
push
pop
cli
inc
jo
sbb
inc
mov
out
mov
jl
jne
xchg
xorl
adc
ret
mov
mov
sbb
mov
inc
in
mov
push
bound
insb
insl
push
add
xchg
add
lret
rcll
jmp
test
aaa
aas
stos
repnz
push
outsb
sub
pusha
dec
xchg
dec
mov
insl
mov
push
test
outsb
jns
pop
nop
ds
push
sahf
ds
jbe
jbe
sub
xchg
add
mov
jge
push
push
hlt
mov
mov
arpl
add
add
sqrtps
cmc
das
sbb
xchg
iret
and
mov
add
jo
inc
sti
pop
enter
pop
jb
sub
ret
popa
push
andl
dec
test
pushf
adc
mov
cs
imul
push
stc
jb
ffreep
jl
aaa
pop
jecxz
jge
iret
inc
cmp
add
in
xchg
xchg
add
pushf
lock
push
push
cwtl
rcrb
mov
movsl
inc
and
cmpsl
mov
icebp
mov
pushf
nop
jae
and
out
pushf
sbb
add
xor
sub
jns
mov
js
aam
lock
repz
fs
pop
daa
and
repz
les
pop
or
int
xchg
inc
cmc
sti
fildll
mov
dec
cmp
add
sahf
mov
and
cmp
mov
popl
lock
xchg
mov
stc
pop
lods
daa
adc
test
daa
frstor
iret
mov
pop
mov
xor
lds
xor
add
movsl
lods
pop
outsb
scas
cs
out
dec
push
cmp
pop
in
dec
stos
je
inc
loop
sub
movl
xchg
or
push
cmp
jne
push
xchg
int
sbb
sub
test
out
xchg
outsb
loop
mov
test
rcrb
xor
andb
push
xchg
add
add
fs
testl
in
out
add
lods
add
add
fdivl
cmp
iret
xchg
test
mov
cwtl
mov
and
xchg
int
dec
aad
sub
push
pop
mov
lret
movsl
scas
pop
arpl
sti
and
sbb
outsl
cmpl
data16
adc
adc
mov
jb,pn
cltd
cmp
adc
fisttpll
mov
or
mov
inc
lods
xchg
jns
or
sbb
mov
inc
roll
fnstenv
mov
in
mov
pop
dec
xor
push
jp
out
ds
or
add
ds
in
dec
push
test
lds
test
outsl
mov
add
jne
jg
clc
cs
push
arpl
add
subl
aaa
aad
sbb
mov
add
test
xor
lret
inc
lods
notb
movsb
inc
int3
lock
adc
gs
and
orps
jb
test
mov
xlat
mov
clc
hlt
pop
sub
icebp
adc
adc
pop
adc
les
cmp
cmp
addl
sbb
mov
dec
push
lcall
stos
sub
lcall
sbb
pop
pop
jnp
out
dec
jg
rcll
inc
pop
inc
lods
and
lret
jnp
sub
jb
repz
int
cwtl
pop
mov
out
add
add
mov
cmp
sti
dec
mov
je
lcall
add
lods
add
add
loop
loopne
aam
bound
iret
pop
mov
jnp
cwtl
loope
inc
sub
add
sbb
cmp
sbb
loop
and
mov
dec
mov
dec
imul
in
mov
inc
cmp
xchg
push
mov
push
push
mov
sti
arpl
adc
push
mov
sbb
cwtl
and
xchg
or
repz
dec
dec
push
sbb
inc
dec
sbb
add
add
scas
mov
test
pop
mov
sub
mov
pushf
stc
pop
or
gs
mov
inc
fists
add
add
push
mov
mov
xchg
adc
and
mov
add
add
repz
aam
adc
cmc
dec
and
sbb
in
fcompl
inc
jo
clc
movsb
inc
fists
cmp
sub
push
mov
clc
push
inc
jecxz
and
dec
decb
push
lret
stc
shll
xchg
dec
gs
pop
adc
in
sub
in
and
pushf
popf
dec
movsb
dec
test
imul
push
lods
ret
push
bound
popf
shll
lcall
fdivl
sub
int3
insl
jp
push
cld
add
outsl
pop
pop
mov
jno
adc
pushf
test
ror
popa
mov
clc
xchg
fcmovu
fisttps
push
stc
xchg
pop
inc
mov
add
cld
mov
adc
and
xchg
xchg
dec
jge
lret
aaa
mov
add
cmp
xchg
mov
inc
cmpsl
xchg
inc
bound
jmp
xchg
mov
lret
jle
leave
popa
std
cmp
and
xor
mov
xor
adc
push
iret
jns
inc
clc
jecxz
inc
mov
stos
and
cmp
fisttpl
aas
xchg
scas
dec
fidivl
cmp
mov
push
es
jno
pop
out
shll
pop
je
xchg
xchg
sub
std
shlb
add
jge
and
push
dec
rcl
pop
aas
sbb
xchg
and
aaa
jne
xchg
stc
lahf
arpl
std
jle
out
sbb
mov
lea
add
xchg
ds
call
imul
xor
inc
lret
push
inc
dec
mov
push
loope
imul
vcmpss
ret
cmc
popf
xchg
ret
push
sbb
hlt
aaa
fwait
pop
mov
pop
rorb
dec
dec
sub
outsb
out
pop
aad
xchg
mov
adc
movsl
adc
mov
sub
sub
push
lods
iret
movsb
xchg
iret
cmp
mov
imul
sahf
mov
xlat
push
inc
lock
fs
or
out
add
push
in
cmp
hlt
cmp
lods
movsl
std
pop
das
xchg
pop
mov
or
out
xor
jmp
cmp
add
add
and
cmp
add
push
mov
add
add
inc
jg
adc
nop
pop
push
iret
mov
adc
sbb
adc
xchg
dec
mov
pop
je
xchg
lock
sbb
and
es
scas
cmp
mov
mov
je
or
dec
sub
jne
fbstp
mov
into
push
shr
xor
stos
or
mov
fnstsw
ja
push
pop
pusha
enter
in
shrl
es
xchg
adc
jp
cmp
stos
jle
insb
fdivrp
fdivrs
fs
mov
jne
and
mov
cmp
ret
shl
std
pop
movsl
iret
fadds
add
add
popf
aam
movl
lods
add
add
dec
test
sub
sbb
lods
arpl
cmp
pop
insl
or
jmp
push
aam
mov
mov
mov
out
ss
mov
rcrb
lcall
stc
leave
sbb
rcrb
pop
das
test
sahf
mov
push
adc
dec
std
subb
int3
lahf
pop
insl
jg
ds
mov
dec
dec
hlt
xor
das
test
dec
sub
popa
ret
arpl
lods
sbbl
pop
mov
mov
adc
or
inc
sbb
mov
adc
ss
add
add
mov
jbe
hlt
mov
and
cmpsb
es
sub
add
out
add
pop
outsl
xabort
int
test
mov
or
insl
lret
push
faddl
xorb
je
cmp
or
xchg
sti
add
rcl
iret
jnp
imul
sub
jae
mov
push
bound
xor
ljmp
xchg
or
mov
data16
andl
or
sub
fnstenv
bound
les
ret
adc
dec
mov
lea
mov
fdivl
push
das
pop
and
xchg
sbb
repz
inc
mov
inc
out
push
cmp
add
add
ror
mov
sub
out
dec
cmp
inc
popl
add
scas
lret
sub
or
iret
rorl
pushf
sbb
cmp
mov
jmp
pusha
rorl
sbbb
daa
mov
or
out
inc
or
xchg
fildl
hlt
outsl
sahf
fucomi
add
imul
es
dec
inc
mov
cmp
push
jno
pop
frstor
aad
push
jecxz
push
mov
mov
and
xor
divb
hlt
push
sbb
div
fsts
cmp
add
enter
cmpsb
rcll
insl
mov
or
inc
sbb
fldl
or
fwait
push
mov
cmp
loope
push
mov
add
in
outsb
and
pop
mov
outsl
nop
add
lods
add
add
lea
sub
arpl
in
lea
xchg
push
fsts
out
xchg
daa
jo
add
movsb
adc
sahf
leave
jae
test
sbb
sub
stos
shll
ja
adc
add
addr16
mov
aas
mov
mov
popa
out
test
fwait
sub
or
insl
sub
mov
dec
jecxz
ljmp
std
fstpl
mov
add
mull
sbb
bound
lret
pop
fstl
rolb
push
je
xchg
test
add
add
mov
and
jno
xchg
add
lods
add
add
cmp
movsl
cwtl
sbb
imulb
icebp
mov
sbb
sub
imul
or
or
or
iret
push
test
pushf
or
ficoml
in
inc
pop
push
push
imul
dec
outsl
xchg
mov
adc
mov
lds
cmp
and
mov
sbb
out
add
jae
test
cmpsl
jp
imul
xchg
adc
cmpsb
pop
idivl
loope
stc
mov
adc
adcl
xchg
ljmp
add
add
stc
call
into
inc
mov
test
inc
mov
lods
add
add
xor
lock
movsb
int3
lds
loop
or
pusha
scas
cmp
push
dec
lcall
pop
add
push
xchg
xor
push
mov
cmpsl
jns
mov
xlat
test
sub
fidivs
mov
addr16
and
sub
fwait
je
dec
inc
push
mov
lret
ds
js
lods
jp
fsubrs
pop
xor
ljmp
or
inc
push
shll
in
pop
mov
sbb
roll
inc
dec
imul
and
outsb
repz
clc
push
ret
sub
sbb
ret
fidivrs
sub
fisubrs
cwtl
sar
repz
fld
into
leave
jae
add
lods
add
add
add
addb
lods
cmp
jae
add
add
xor
decb
xor
push
fnstsw
sahf
mov
adc
xor
sub
icebp
pop
jg
pop
arpl
cmp
pop
in
js
or
arpl
scas
jae
cmp
adc
fwait
js
sbb
jp
insl
xor
mov
cld
and
lcall
dec
cmpsb
das
mov
pop
mov
cmp
cs
mov
adc
pop
mov
enter
fiadds
add
add
int3
sbb
out
loopne
lods
dec
stos
add
pop
xchg
add
lods
add
add
fldcw
and
andb
jge,pn
fidivrl
pop
test
push
jp
addr16
sub
xor
cli
or
cli
enter
adc
mov
notb
push
sbb
mov
push
mov
mov
ss
or
cmpsl
insb
mov
xchg
cli
popa
sbb
scas
int3
in
out
cmc
mov
out
xor
test
adc
add
lret
scas
sbb
and
mov
dec
and
shrb
arpl
cmp
adc
adc
pusha
xchg
outsl
gs
cmp
add
add
test
fildll
xor
xchg
mov
lods
add
add
data16
imul
insb
lahf
mov
inc
test
inc
add
xchg
inc
into
push
test
mov
imul
push
fsubrs
fistpl
jb
mov
aaa
fsts
jae
mov
shll
sbb
int3
out
cli
sahf
mov
pop
call
gs
xchg
cmp
mov
dec
rorb
pop
mov
cld
mov
fists
push
pop
insl
lret
sahf
sbb
notb
mov
mov
or
lcall
dec
dec
lock
div
repz
jl
test
fwait
loope
sub
sarb
add
pop
mov
ja
add
lods
add
add
pop
data16
and
push
sub
pop
fcoms
lock
mov
mov
cmp
nop
cmp
jne
data16
or
mov
inc
dec
imul
mov
jnp
test
mov
pop
pop
mov
dec
jmp
jns
pusha
loopne
jmp
sub
fnstsw
add
in
adc
jns
fldcw
mov
mov
jmp
pushf
loopne
mov
jb
outsb
dec
pop
rcr
sub
mov
inc
cmp
movsb
fwait
push
or
or
aad
sbb
les
mov
push
pop
cmc
pop
pop
or
ja
dec
cmp
dec
rolb
push
stos
and
add
push
nop
push
leave
inc
stos
mov
dec
adc
add
pop
bound
rorb
cmp
ljmp
fmulp
and
pop
and
es
push
fcmove
pop
adc
mov
sub
push
in
mov
push
adc
subl
aas
les
les
pop
mov
cmp
movsb
stc
arpl
pop
adc
jge
std
mov
lret
mov
daa
mov
jae
fidivrs
lret
aaa
test
or
inc
pop
and
add
xchg
push
mov
dec
sarb
sub
into
xchg
arpl
jge
mov
daa
jge
jmp
add
xor
fstpt
dec
clc
shlb
iret
fcmovnu
dec
mov
clc
adc
push
and
ljmp
sub
iret
hlt
adc
pop
loopne
rclb
sbb
clc
push
pop
xor
and
cmp
rcrl
pop
mov
in
or
cltd
in
sbbl
add
and
xor
fidivl
ret
clc
jbe
rclb
inc
sbb
test
ds
sbb
mov
cld
aaa
es
inc
jns
cltd
cmp
enter
push
pop
adc
add
add
push
imul
push
mov
add
mov
daa
push
popa
dec
mov
jbe
clc
leave
cld
into
das
aas
ljmp
ss
lret
movsl
cmp
pushf
sbb
sub
mov
inc
enter
nop
aad
adc
loop
jno
pop
pop
cld
mov
xchg
xchg
movsl
daa
lea
lahf
pop
into
jnp
adc
in
pusha
add
sbb
push
outsb
test
fdivl
add
or
jmp
adc
and
inc
xchg
aaa
push
cld
mov
lcall
loop
inc
fwait
jb
jge
aam
push
mov
mov
jae
lret
insl
lcall
cmp
daa
ss
xor
and
dec
dec
aas
mov
add
fisubs
or
nop
jle
jne
pop
fcomi
movsb
jl
cmpsl
sub
lds
insb
push
mov
and
xchg
lret
mov
cmpl
push
mov
flds
add
stos
sub
fimuls
add
pop
test
loopne
pop
pop
rol
lcall
add
jge
mov
in
ror
std
mov
imul
or
imul
sub
mov
lds
adcb
xor
in
gs
inc
jg
jnp
fs
loopne
add
push
test
pop
mov
popl
add
add
out
mul
aaa
cmc
xchg
lcall
jmp
add
lods
add
add
jnp
icebp
xor
fsubs
shrl
mov
lret
inc
mov
rcrb
movl
xchg
push
ss
mov
push
cs
out
icebp
enter
cmp
jp
xchg
push
pop
nop
idivl
popa
add
fidivrl
aam
sbb
test
stos
rorb
outsb
xchg
add
adc
lahf
xor
addr16
pop
pop
sub
scas
lret
xor
outsl
inc
daa
and
leave
outsl
sbb
pusha
pop
out
inc
xlat
push
mov
fimull
les
xor
pop
mov
cmc
ds
int
or
add
add
aad
out
fucomip
ss
cmp
and
xchg
movsb
add
lods
add
add
outsb
hlt
jo
sub
dec
push
out
xor
jb
in
xor
push
lds
mov
mov
push
es
cli
sar
leave
stos
imul
in
sub
adcb
in
jle
or
jbe
addr16
mov
or
mov
jp,pt
outsb
test
jo
nop
sub
xchg
lods
mov
and
pop
ret
pop
stos
cmpl
push
pcmpeqb
xor
sub
xchg
addr16
lret
fmuls
inc
in
out
sbb
push
out
mov
xchg
gs
fdivs
add
outsb
jbe
lret
outsb
negb
xchg
xchg
inc
movsl
add
lods
add
add
adc
rcll
push
std
cld
sbb
pop
ret
and
mov
inc
repnz
leave
jno
jg
pop
mov
clc
rorb
and
push
aaa
sub
dec
imul
inc
cwtl
lahf
add
pop
mov
sub
adc
jno
push
movsl
icebp
jns
out
push
in
xor
inc
jg
sahf
push
pop
aam
imul
stc
push
out
aas
inc
pop
inc
addb
loop
out
insb
lea
insb
lret
pop
sahf
push
mov
rep
jne
jle
and
jge
adc
and
or
xchg
call
add
cmp
paddsb
nop
rorl
sbb
out
movsl
add
lods
add
add
sbb
lea
fsts
adcb
fcoml
bound
push
imulb
or
xchg
jns
xlat
fstps
inc
sahf
shl
xchg
pop
sub
xor
enter
out
xor
add
ret
iret
sbb
add
je
xor
pop
inc
jle
push
cli
lock
mov
loopne
clc
sbb
add
adc
stos
mov
and
aad
cli
ret
mov
adc
fstpt
shl
mov
iret
movsb
popa
mov
dec
sarl
xor
mov
int3
adc
jg
repnz
in
adc
jbe
push
sub
add
add
jle
call
cli
lcall
add
lods
add
add
adc
fiadds
mov
push
sub
sbb
push
xchg
fwait
incb
fcompl
push
add
or
inc
xor
xor
pop
push
iret
xlat
push
rcll
pop
movb
or
fisubrs
jp
mov
mov
mov
ds
pop
fisubrs
cmp
stos
std
push
jbe
aas
test
pop
push
jo
mov
inc
mov
mov
ja
ja
shl
cld
jmp
mov
adc
cmp
es
lds
insb
mov
aam
mov
jo
xor
dec
push
test
and
pop
dec
push
enter
cmpsl
add
lods
add
add
in
cs
fstl
cmpsb
icebp
int
faddl
adc
push
aaa
mov
cltd
push
js
in
pop
iret
in
or
inc
insb
or
jle
jne
xchg
movsl
and
test
xchg
dec
ret
jns
das
inc
mov
test
xchg
ret
fdivs
jno
test
jo
inc
cld
xchg
mov
push
loope
sbb
fsubs
xchg
dec
mov
adc
cmpsl
cmpxchg
lock
loope
mov
push
jmp
mov
jb
bound
xchg
dec
mov
cmpsl
push
mov
mov
mov
add
outsl
mov
jmp
push
fcmovu
in
mov
pop
repz
add
lods
add
add
popf
fcoml
mov
push
test
adc
xlat
pushf
lcall
aas
adc
out
insb
shrb
xor
push
andb
dec
test
jne
pop
xchg
add
cmp
push
and
aas
ja
mov
lcall
inc
sbb
mov
sbb
arpl
mov
mov
test
and
stos
jg
adc
mov
mov
add
adc
add
pop
aad
xchg
xchg
adc
xchg
xchg
push
jns
jno
divps
xchg
jnp
jecxz
in
pop
cmp
xchg
cmpsl
stc
sbb
inc
jecxz
mov
push
adc
ficompl
add
add
aas
jbe
and
lods
insl
mov
xor
xchg
add
sahf
popa
repnz
dec
mov
or
sbb
mov
ds
adc
jmp
pushf
xchg
adc
mov
and
lret
add
xchg
jge
icebp
test
mov
lahf
mov
xor
inc
jecxz
sahf
insl
inc
jne
mov
pop
imul
loope
and
cli
jmp
sbb
and
repz
mov
movsl
and
ficompl
jp
in
aaa
sub
jno
mov
jg
lods
jae
pusha
cmc
adc
fiaddl
add
add
mov
icebp
and
clc
pusha
dec
test
add
cmpsl
pop
ficompl
dec
dec
mov
fisttps
add
mov
out
adc
push
add
enter
test
lds
mov
xchg
add
inc
std
out
sub
mov
scas
cmp
xchg
dec
scas
xlat
cmp
sub
mulb
das
cmpsl
ja
xchg
cmp
xor
filds
inc
xchg
in
push
loop
mov
mov
push
je
push
out
inc
fimull
add
jo
popf
fistl
or
mov
jbe
sub
pop
repz
cltd
int
pusha
xchg
faddl
es
pop
repnz
stc
cmpsb
dec
jle
xor
adc
repz
das
cli
fists
dec
es
mov
test
add
fistpl
repnz
out
jl
mov
adc
popa
sti
stos
cld
cmp
dec
insb
popl
in
jbe
jecxz
test
mov
pusha
sbb
cmp
sbbl
pop
leave
out
adc
push
in
les
scas
xchg
hlt
and
pop
cwtl
add
pop
negl
cmp
sub
xor
fstps
bsr
cmp
mov
nop
cmp
and
jecxz
mov
or
sub
sub
dec
ljmp
mov
jo
cli
pop
or
sub
adc
std
mov
adc
test
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
cmp
add
cmp
add
inc
add
add
cmp
add
add
add
push
outsl
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
