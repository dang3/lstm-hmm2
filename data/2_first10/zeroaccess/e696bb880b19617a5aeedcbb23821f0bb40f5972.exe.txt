push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
aam
jnp
jnp
hlt
pushf
jnp
ror
aam
ret
add
xchg
mov
sbb
jle
push
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
loop
cs
in
stos
dec
cmpb
sbb
ja
xor
xchg
adc
jnp
lcall
sbb
in
lock
sti
xor
imul
push
push
lods
push
inc
mov
stc
adc
lret
push
insb
sub
inc
inc
push
int3
sub
repz
outsb
popf
push
cmp
and
in
sub
pop
outsl
insb
aaa
shr
fistps
outsb
call
stc
jmp
mov
leave
int3
xor
sbb
ljmp
je
fnstsw
jb
and
dec
stc
into
jne
pop
fnstsw
fstpt
jp
rclb
push
jnp
mov
arpl
add
jb
dec
xchg
fistpl
pushf
jno
test
cmpsb
mov
test
stos
xchg
lods
jo
nop
add
sbb
mov
sbb
enter
add
hlt
rcl
jecxz
adcl
imull
jmp
repz
push
and
or
inc
add
mov
test
arpl
cli
cs
int3
movsb
movsb
mov
mov
std
sub
mov
bt
jno
mov
and
in
mov
dec
mov
aam
cltd
lret
xchg
mov
fs
xor
popf
pop
leave
xchg
pop
nop
insl
push
mov
adc
jb
fldenv
repz
inc
pop
pop
pop
lahf
into
shlb
xor
adc
js
add
aas
lea
cltd
dec
stc
mov
mov
cmc
push
adc
lahf
scas
dec
std
dec
push
movsl
sti
stos
mov
cmc
adc
lds
push
lock
ss
mov
in
repz
std
cmp
pop
leave
xchg
jno
dec
iret
movl
push
stc
cmp
and
and
test
or
push
or
aad
inc
pop
xor
cltd
cmp
or
lods
ret
cli
nop
sub
and
rep
pop
fiadds
cmpsb
stos
push
mov
clc
push
push
scas
pop
cmp
xchg
sub
jns
daa
outsl
sysenter
cmpsb
cmpb
out
sub
adc
mov
xchg
out
sub
inc
testb
mov
mov
cmpsl
inc
repnz
mov
ss
jecxz
inc
jecxz
dec
jg
jg
outsl
data16
repnz
add
jp
cmp
std
test
je
mov
mov
into
mov
or
mov
icebp
xor
into
in
mov
mov
cmp
cmp
pop
mov
outsb
xor
xchg
fwait
cmp
out
mov
cltd
xchg
push
dec
insb
int
test
pop
ffree
mov
out
xlat
pop
jge
mov
add
clc
test
mov
pushf
mov
aaa
lret
pop
sbb
mov
inc
xor
push
sub
push
push
or
test
addr16
testl
in
mov
inc
aam
pop
xlat
jne
xor
jo
mov
xorl
inc
sbb
sbb
mov
repnz
cmc
cld
outsl
mov
mov
int
jg
nop
pop
mov
cmp
add
mov
or
inc
jl
dec
movsl
cmp
ficomps
push
rorb
mov
adc
and
or
fnsave
popl
xor
and
lock
adc
hlt
rcrb
mov
jle
xor
lea
pop
iret
jbe
pushf
xchg
adc
stc
outsl
jb
adc
and
jge
in
mov
pop
outsl
dec
aas
jno
inc
cmp
pop
scas
popa
cmp
add
cltd
ficompl
mov
icebp
mov
in
or
cmpsb
aad
jle
pusha
fwait
xchg
pop
xchg
sahf
jg
mov
scas
hlt
add
sti
lea
mov
jne
push
jbe
push
jns
icebp
scas
sahf
mov
jae
scas
lods
push
or
jecxz
test
shll
cmp
pop
jle
das
pop
mov
inc
and
iret
sub
sarb
arpl
cmp
mov
stos
imul
out
jae
shlb
mov
sbb
mov
scas
mov
cmp
repz
jmp
movsb
push
add
stos
lea
inc
mov
leave
jle
bound
cltd
ret
jg,pn
inc
imul
rcl
sahf
lcall
xchg
bound
dec
sarb
push
xor
pop
adc
mov
xchg
out
out
pop
cltd
clc
aad
mov
xchg
fs
ror
fstps
inc
popf
not
jne
stos
sbb
or
je
cmpsl
rcrb
mov
call
pop
mov
xor
aam
fstpl
and
ss
push
jb
sub
cmp
ror
pop
and
jmp
cmpsl
lods
imul
inc
stc
movsl
or
dec
test
xchg
jbe
push
jae
pusha
push
clc
sub
in
xchg
or
xor
fwait
jecxz
into
inc
fstpl
or
int
shlb
int3
lcall
mov
stc
mov
ret
add
aad
sahf
popa
ficoms
sti
add
into
or
xchg
cli
mov
addr16
or
mov
sub
mov
stos
pop
lods
pushf
xor
dec
jns
push
iret
inc
movsb
sarb
in
and
shlb
fnstenv
xor
testb
cmp
jmp
xchg
and
xchg
cs
out
sahf
xchg
cltd
adc
hlt
lahf
out
and
imul
xchg
or
lods
pop
inc
and
out
fisttpll
fidivrs
decb
sar
mov
sub
popa
sbb
in
jecxz
std
out
jo
sub
in
cld
or
mov
lret
stos
divl
aaa
mov
or
sub
xchg
pop
dec
xchg
pop
int3
inc
ds
fwait
out
enter
lea
rcrl
insb
out
sub
sahf
xchg
addr16
add
xorl
jae
mov
aaa
fsub
leave
or
or
jb
sub
jb
or
shrl
scas
sub
mov
cmp
push
jne
push
fdivrs
mov
mov
scas
out
clc
ret
shlb
push
rorb
and
aam
inc
ja
pop
push
pop
adc
das
and
fdivs
cmpsl
pop
int3
lcall
adc
gs
add
fnstsw
sub
lret
add
lds
fsubl
rclb
sbb
mov
cmpsb
cmp
push
push
xchg
lods
out
mov
outsl
clc
repnz
push
into
pop
mov
push
or
loopne
sar
ficoml
and
mov
dec
repnz
xlat
rcrb
inc
pop
jp
sahf
gs
and
sbb
mov
xchg
mov
loopne
adcb
hlt
test
test
add
adc
or
jae
movsl
out
sahf
pop
push
fs
or
imul
cmc
mov
es
loopne
scas
sub
popa
movsl
dec
fimuls
das
out
aas
pop
jns
in
add
leave
lret
lea
int3
sbb
out
stos
pop
push
das
mov
mov
cmc
mov
das
call
hlt
pop
sub
xchg
cmp
sti
mov
outsb
pop
sahf
aam
pop
icebp
lahf
adc
lds
mov
dec
mov
jl
inc
jg
mov
cmp
xchg
and
nop
jnp
push
insb
add
dec
mov
dec
popf
add
add
rolb
bnd
ds
inc
sub
jp
insb
mov
xchg
jmp
and
add
sub
loop
jmp
xchg
mov
and
add
xchg
and
inc
sti
sarl
push
mov
out
gs
jl
ror
or
cmp
adc
frstor
xchg
cwtl
cmp
test
ret
inc
cltd
dec
out
cld
adc
dec
dec
fsubrl
repz
push
movsl
insl
test
js
fdiv
jbe
pop
pop
std
outsl
inc
sub
insl
outsl
mov
jns
inc
test
rcrb
std
add
pop
or
jb
adc
cmp
jmp
sub
arpl
push
dec
jo
inc
xor
jo
push
ds
cld
mov
rcrb
cmp
and
push
test
and
mov
repnz
lock
cli
xchg
add
imul
cld
mov
test
shrl
sub
sub
aaa
in
add
inc
push
ret
lods
mov
dec
cmc
into
xor
outsl
cmp
int3
dec
cltd
je
fidivs
xchg
cmpsb
dec
ss
sbb
jnp
cmc
mov
cli
fsubrl
ret
imul
cli
je
insl
enter
fmull
pusha
imul
ret
pop
mov
sub
scas
subl
loop
dec
leave
imull
arpl
mov
data16
outsb
cmp
out
push
cmc
jmp
bound
jno
lods
sbb
and
gs
lock
stc
lds
pop
or
mov
sub
sahf
popa
test
in
repz
mov
sub
mov
and
es
cmpsl
push
stc
pop
pop
testl
push
sbb
fcomps
xor
shlb
lret
cmp
insb
xchg
aas
in
mov
test
int3
das
arpl
pop
in
and
cwtl
popa
or
add
aaa
cmp
into
sti
sbb
mov
cmp
mov
pop
and
jae
cmp
cmp
xchg
mov
sub
fwait
mov
leave
std
or
inc
xor
jle
je
bnd
icebp
dec
jae
add
rcl
cli
push
xchg
mov
in
pop
fdivs
xor
xchg
loopne
adc
sbb
mov
pop
out
stc
lods
mov
jb
adc
repz
jmp
hlt
loopne
cli
cmp
arpl
cmp
fidivs
xor
jno
out
dec
pop
inc
pop
cmp
or
sbb
push
xchg
inc
jbe
push
lods
popf
scas
adc
add
ret
enter
xchg
mov
pop
jl
sub
pop
sbb
push
push
std
inc
or
or
clc
jle
adc
adc
dec
cmc
jmp
push
aaa
andb
add
cmp
mov
cmp
pop
add
fisttps
sbbl
jmp
or
pop
out
pop
dec
fidivs
mov
mov
aam
add
dec
addr16
js
push
pop
xor
adc
cmc
pop
stos
stos
sti
loope
add
test
dec
loopne
push
int3
shl
sbb
lret
test
hlt
popa
cmp
sub
push
jmp
sbb
subl
fs
fnsave
lea
dec
inc
jb
jns
push
pop
cmp
popf
pop
lret
imul
std
pop
sbb
icebp
shlb
and
add
mov
stc
push
mov
xor
movsl
aaa
mov
loope
push
aad
or
xchg
jo
and
outsb
sahf
insb
lock
mov
pop
hlt
and
out
bound
add
fidivs
and
test
inc
clc
mov
rclb
mov
and
fdivp
je
add
gs
cmp
mov
mov
loop
xchg
in
pop
pop
out
rcrb
bnd
and
test
inc
jl
cmp
mov
icebp
jae
mov
xchg
pop
jbe
dec
mov
dec
outsl
jne
mov
cltd
scas
pushf
imul
jno
hlt
subl
xor
or
roll
inc
stc
xchg
push
fisttpll
xchg
mov
lahf
fadds
push
adc
adc
pop
mov
inc
and
mov
pop
mov
jp
adc
pop
into
divb
repnz
sub
add
mov
ret
outsl
ja
ficompl
add
dec
gs
mov
out
pop
sarl
jmp
jbe
mov
js
add
ret
pop
cmp
stos
push
add
mov
add
push
jg
lock
mov
aad
cmpsb
sub
in
xor
fisttps
inc
jno
jl
push
jge
sbb
test
inc
xchg
mov
xor
pop
dec
stos
push
pop
add
out
xchg
xchg
ja
dec
out
ret
arpl
daa
test
push
pop
xor
cmc
fcompl
lret
loopne
mov
cwtl
xchg
push
cmp
mov
add
xchg
xorl
ja
adc
stos
es
mov
jg
mov
adc
or
fsubr
cmpsl
dec
and
push
adc
inc
cmp
movsl
push
cmp
jns
loope
sub
es
ss
push
mov
push
adc
dec
aaa
xor
out
add
sub
adc
sbb
fadd
pusha
mov
sahf
sub
xor
in
adc
push
ja
call
sti
outsl
loope
push
scas
pop
mov
leave
lock
cmp
fbld
jp
adc
cld
jle
shll
cmp
ja
push
aaa
popf
mov
lods
xor
cli
lret
lock
xchg
jle
ljmp
lods
bound
and
dec
jb
subb
and
xor
xchg
lea
mov
jmp
shrb
les
or
or
pop
jo
emms
lea
sbb
inc
lock
repnz
stc
iret
jecxz
jne
popa
dec
add
or
adc
push
in
sti
mov
and
pop
xchg
flds
in
xchg
pop
mull
push
notb
inc
sbb
aaa
sub
lods
mov
push
mov
sbb
int
mov
and
fisubrs
out
cwtl
xchg
cmp
jle
sbb
stos
jne
out
test
or
out
add
testl
mov
inc
cmp
cmp
and
int
leave
sub
add
mov
cmp
rcl
jle
insb
movb
js
cmp
cld
pushf
pop
insb
mov
fstl
mov
pop
fnstenv
pushf
sbb
outsl
test
xorl
xor
jg
xrelease
xor
xor
scas
add
mov
adc
ja
adc
lahf
xor
imul
imul
jbe
fldl
arpl
popa
enter
inc
push
int
pop
ret
pop
xchg
test
int3
jo
sub
in
mov
mov
in
mov
mov
adc
xchg
and
push
inc
jbe
test
mov
sub
jbe
push
lds
out
faddl
inc
mov
xchg
aad
movsl
sbb
jo
aaa
pop
inc
and
mov
pop
sbb
shll
xchg
jae
push
jns
popa
xchg
cmc
scas
sahf
pop
mov
cmpsl
scas
pop
out
pop
pop
out
movsl
ljmp
dec
sbb
das
cmp
xor
xchg
hlt
dec
movsl
sti
sbb
pop
jmp
lods
pop
mov
mov
call
cmp
adc
leave
ja
add
test
xchg
or
clc
cli
lahf
xor
xchg
iret
and
pop
fcom
repnz
jg
mov
sbb
pop
popa
icebp
pop
leave
adc
jge
xchg
mov
push
inc
jnp
movsb
je
ljmp
in
pop
and
mov
xchg
cwtl
add
pushf
pop
sahf
es
cmc
fmul
jb
mov
inc
jns
pop
sbbl
subb
adc
lock
aad
mov
mov
sbb
dec
stc
push
stos
lods
filds
hlt
imul
rcrl
out
in
cltd
lock
aad
out
sbb
rcll
or
push
adc
cld
or
cvtps2pi
dec
sub
xor
push
jl
mov
jbe
lds
insl
inc
hlt
jns
outsl
sbb
punpcklbw
add
ret
push
sti
insb
data16
sub
pop
mov
int
ret
es
cmpsl
aad
test
sub
lock
mov
cmp
daa
pop
sub
mov
sub
jle
imul
fisubrs
mov
adc
pop
idivl
push
xchg
push
and
or
adc
inc
test
sub
pusha
push
lock
cmpsb
jge
add
pop
adc
xchg
cli
dec
fdivs
mov
jg
arpl
adc
std
pusha
subl
sbb
dec
push
add
out
aas
jnp
ja
cltd
mov
daa
adc
enter
mov
fbstp
sti
cmc
bound
jg
or
inc
pushf
dec
sub
jae
xchg
adc
in
jmp
push
xor
inc
sarb
xchg
and
push
or
xor
jns
or
xorb
or
stos
addl
adc
cmpsl
inc
ja
in
adc
push
pop
addr16
lret
push
or
in
or
sbb
iret
push
jge
xchg
push
xor
inc
push
cld
stc
out
sub
mov
inc
sub
inc
push
pop
inc
sahf
push
push
or
sub
jl
or
fidivs
ficoms
mov
add
and
mov
jle
int3
sub
stos
cld
or
sbb
mov
cmp
sbb
sub
sbb
andl
out
out
pop
or
out
mov
fildl
rcr
mov
add
cmp
data16
xor
fsubl
test
repnz
lea
and
pop
cmp
jle,pt
pop
push
ret
dec
fnstcw
lcall
sbb
ret
test
cs
in
scas
dec
dec
call
push
hlt
mov
nop
cmp
mov
arpl
jae
ss
sub
aaa
mov
push
popf
pop
or
sbbb
jno
mov
sub
mov
aam
sub
mov
popa
les
imul
push
jne
icebp
aas
test
xchg
int
pop
pop
and
adc
idivb
sahf
mov
fbld
fists
jg
adc
test
jb
out
xchg
lods
es
xchg
leave
scas
out
adc
jbe
sbb
adc
or
or
push
mov
das
jae
loopne
mov
sbb
cmp
subl
mov
ret
dec
nop
jecxz
imull
jnp
fildll
movsl
shrb
mov
call
sbb
sbb
cmp
fldcw
ret
push
jmp
mov
jp
xor
mov
cmpsl
sbb
jae
sbb
popf
cs
mov
pop
sub
xor
in
inc
pop
in
xchg
or
cli
jne
and
or
sub
push
add
and
fwait
dec
sbb
nop
stc
cmp
rorb
push
sbb
cmp
mov
sbb
mov
and
jnp
jl
cvttps2pi
mov
mov
sarb
inc
inc
mov
jp
shl
pop
push
shrb
jmp
popa
mov
ret
fiaddl
xchg
cmp
adc
enter
adc
sbb
inc
cld
test
scas
xchg
sbb
cltd
xchg
inc
inc
add
jb
int
fsin
jmp
xor
rcrb
adc
js
or
shl
mov
add
pop
add
lods
xchg
in
call
dec
aaa
pop
call
jno
into
dec
aad
or
scas
inc
popa
int
call
jb
fimull
pop
push
adc
rcrb
and
mov
dec
dec
jmp
mov
xor
insb
inc
std
dec
repnz
les
lcall
cmc
aam
out
movsb
xor
lods
addl
sub
cmc
orl
push
pushl
sahf
gs
dec
in
adc
pop
addr16
xchg
cld
cld
mov
push
dec
mov
mov
push
jno
sub
cmp
mov
enter
lahf
es
push
lahf
pop
movsl
mov
dec
fldz
xor
sahf
xchg
fists
inc
mov
les
mov
adc
scas
data16
leave
lods
fs
add
popf
adcl
in
or
sahf
dec
push
mov
mov
pop
out
fwait
xchg
add
push
and
and
pusha
sbb
sbb
lret
add
and
inc
bswap
mov
jge
mov
inc
xor
push
rorl
es
cmp
and
jmp
mov
pop
loop
lods
jno
cmp
inc
jge
cmp
push
xchg
jmp
jmp
outsl
or
inc
repz
popa
mov
ss
shrb
fiadds
xor
sahf
mov
pop
xchg
test
pop
int3
pop
les
loop
pop
or
xlat
shll
out
flds
imul
cmpsb
sub
xor
add
mov
cmp
xchg
cmp
and
mov
lret
sub
lahf
pop
dec
aaa
mov
pop
dec
mov
stos
pop
roll
rcl
mov
cwtl
mov
repnz
add
bound
sbb
into
rcrl
sub
mulb
or
sbb
fiadds
jle
aaa
push
or
int3
aas
pushf
cld
jg
dec
sub
int
dec
rclb
sub
test
mov
lods
cs
or
inc
mov
aas
mov
popf
mov
scas
loopne
xor
xor
rolb
mov
jae
mov
lods
aaa
aaa
ja
sbb
mov
sti
xor
in
test
lock
das
shrl
scas
xchg
add
push
cmpsb
popf
sbb
cmp
cmc
or
fwait
mov
dec
fimuls
mov
mov
jl
jns
outsl
mov
and
push
in
inc
or
pop
and
in
inc
mov
ss
cmp
adc
push
dec
loop
push
xor
or
lds
jns
loop
decb
mov
sbb
and
cmpsl
dec
ss
les
cmp
loop
pop
stos
and
mov
push
mov
jbe
mov
mov
nop
add
sbb
rcr
pinsrw
xchg
popa
push
pcmpgtb
cs
divb
lret
outsl
xchg
add
jl
insb
mov
test
jnp
mov
jo
mov
push
arpl
inc
dec
clc
es
inc
inc
and
scas
mov
sub
call
sahf
pop
dec
xchg
sub
mov
mov
lea
push
in
sbb
pusha
and
popa
int3
ljmp
push
sub
outsb
pop
shlb
and
cmp
int3
add
sub
test
mov
push
sub
stos
std
xchg
mov
insl
lds
xchg
lods
sbb
cwtl
pop
arpl
xor
rorb
cltd
xor
pop
adc
ret
test
andl
popf
lds
mov
loope
xor
hlt
lret
sti
push
cltd
pop
inc
loop
mov
fistl
xor
in
push
push
lahf
mov
xchg
xor
inc
inc
push
imul
xor
rolb
out
in
into
daa
jl
push
jae
mov
or
inc
pop
shr
lahf
cmpsb
sub
es
jbe
and
xchg
jnp
cmp
scas
cmp
pop
pop
mov
outsl
sub
and
fadd
ror
sbb
mov
xchg
adc
push
clc
je
je
fs
aad
cwtl
arpl
cmpsb
scas
push
xchg
sub
mov
stos
push
lds
mov
push
aas
decb
push
test
jbe
push
add
imul
pusha
mov
in
pop
jnp
jns
loop
push
xor
inc
mov
inc
push
sub
sub
sarl
into
dec
les
call
jmp
or
scas
add
add
and
data16
dec
mov
clc
sbb
and
data16
std
mov
sahf
loop
add
jo,pn
push
pop
sub
pop
mov
insb
stc
inc
iret
mov
xor
insb
mov
orb
mov
jno
mov
xor
jno
in
sbb
adc
ljmp
clc
fs
out
rcll
sbb
addr16
lods
in
scas
dec
mov
mov
sub
mov
add
or
mov
lea
jmp
out
mov
das
push
stc
mov
or
lahf
adc
lea
xchg
and
xchg
lret
out
fsubrl
and
pop
add
push
icebp
dec
pop
or
mov
subb
rolb
icebp
dec
adc
mov
mov
mov
scas
xor
mov
xor
mov
ss
mov
lcall
cmpb
mov
push
inc
xor
pusha
aaa
in
adc
jb
and
push
add
xchg
ljmp
cmp
inc
jge
pop
loopne
and
jnp
sbb
fstps
iret
ficoms
aam
scas
mov
ja
or
ficomps
fwait
test
mov
pop
aaa
cmp
cmpsl
out
test
push
mov
mov
sti
insl
jp
jae
jo
xor
rol
lock
ret
ret
pop
mov
and
loope
fwait
pop
sub
cmp
mov
jo
lods
pop
cmp
jb
dec
pushf
and
xchg
pop
xchg
and
sub
push
in
cltd
mov
sbb
lock
int3
mov
dec
push
jecxz
out
add
inc
out
rcl
lods
xchg
mov
pop
repz
xchg
xchg
cmpsl
fdivl
lds
cs
in
std
xor
xchg
sahf
and
adc
xor
xchg
cltd
cmp
aaa
enter
pop
jnp
lcall
call
jge
push
leave
add
sbbb
aaa
cmp
out
scas
jmp
sbb
inc
je
mov
fsubrs
pop
jmp
int3
out
inc
dec
in
in
dec
push
roll
fsubp
das
test
inc
je
arpl
rclb
jns
rclb
push
fxch
das
mov
mov
and
and
push
and
test
adc
imul
cltd
and
push
mov
adc
mov
lock
or
out
faddl
add
cmc
roll
iret
test
sub
pop
and
into
dec
loope
xlat
dec
ss
arpl
or
clc
test
jmp
jo
xchg
jge
lcall
mov
std
imull
jbe
push
xchg
xchg
shrb
movsl
xchg
lock
inc
lahf
sbb
fwait
ljmp
movsl
clc
movsb
push
mov
inc
lahf
and
mov
xchg
pop
sbb
test
jo
cmp
push
add
mov
cmp
mov
adc
sahf
stc
sub
pop
mov
fbstp
popf
repz
mov
xchg
push
incb
pusha
ds
mov
sub
inc
and
mov
mov
out
repz
fstp
lods
lds
nop
adc
dec
xchg
jbe
mov
dec
nop
sub
mov
mov
sarb
outsl
mov
test
ret
or
jne
ret
mov
jb
bound
inc
out
adc
pop
testl
mov
adc
and
xchg
ret
aas
aam
arpl
aam
inc
lock
cli
paddb
fnsave
mov
add
cmp
cs
cmp
mov
jecxz
adcb
popa
in
push
pop
and
sub
popl
sbb
lea
pop
mov
xor
test
jg
lahf
in
mov
repnz
sub
test
adc
clc
je
or
xchg
test
dec
in
loope
lret
scas
out
fistpl
sbb
sub
stos
and
icebp
ret
jg
adc
pop
loope
data16
mov
cwtl
jmp
test
or
dec
cmc
jb
ljmp
mov
dec
out
push
imull
mov
dec
push
insb
add
ret
inc
stos
push
jnp
push
lds
dec
fadds
rcrb
jmp
mov
repz
sbb
xbegin
adc
loope
call
inc
cmp
jmp
mov
stc
ret
mov
ret
pop
adc
jne
mov
cmpl
xor
inc
test
rorb
inc
aaa
outsb
sub
pop
push
and
adc
outsb
jb
aad
lds
mov
jno
push
cmp
push
jo
fsubr
in
adc
stos
sti
dec
add
hlt
lret
cmp
lahf
lret
fildll
jmp
mov
sbb
sbb
add
sub
push
pusha
push
add
add
inc
aaa
mov
outsb
das
and
lods
push
out
jmp
lahf
pop
xchg
sub
fmull
movsl
test
add
sbb
leave
add
mov
stc
pop
test
adc
je
pop
into
testl
in
push
inc
xlat
stos
push
mov
mov
xchg
or
mov
inc
add
and
dec
xor
adc
mov
out
loopne
iret
test
mov
push
cld
movsb
mov
test
jne
add
jnp
lds
aaa
add
pop
sub
jno
lock
jmp
cmp
jb
pop
in
mov
jbe
sbb
inc
or
sbb
sub
bound
je
addr16
es
leave
xor
pop
scas
xor
jne
arpl
lods
imul
test
fcmovnb
inc
decl
xchg
std
jmp
fs
cmp
jge
lcall
lcall
inc
mov
lock
add
inc
jb
jl
out
fcomps
stc
test
aaa
rclb
and
les
cmp
sbb
gs
push
xor
ds
mov
lret
push
and
add
in
mov
mov
cmp
sbbb
add
aam
push
or
loope
mov
xchg
ja
cmp
push
nop
movl
and
pop
cmp
js
sbb
loope
or
push
mov
subb
xchg
ja
test
pop
cmp
and
lock
add
out
sub
in
rorb
rolb
dec
inc
pop
aam
lods
pushf
pop
in
sub
dec
mov
mov
into
xor
fs
inc
or
cmp
sbb
mov
out
mov
mov
nop
insb
cltd
sub
daa
dec
stc
mov
pop
push
dec
pop
mov
daa
pop
inc
push
and
jnp
sub
lock
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
fisubrl
hlt
pushf
jnp
hlt
pushf
jnp
fwait
mov
sub
push
adc
dec
jo
add
sub
enter
add
bound
cwtl
int3
rorl
cwtl
mov
xchg
jp
rclb
or
jecxz
mov
mov
jge
mov
popa
jp
stc
das
or
jb
lea
or
and
xchg
inc
pushf
mov
bnd
outsb
mov
pop
mov
cld
dec
or
std
rol
dec
push
icebp
xor
push
rcr
movsl
mov
mov
mov
popf
mov
iret
and
mov
xor
cmc
or
cwtl
jge
adc
mov
in
movsb
xor
pop
and
iret
daa
cld
dec
sbb
pop
xor
pop
movsl
add
mov
mov
out
fs
inc
clc
pusha
cmp
add
out
cmpsl
stos
loope
dec
data16
mov
cmp
clc
mov
loop
sbb
stos
mov
test
mov
inc
inc
pop
pop
inc
lea
push
or
insb
dec
sti
popa
test
subl
jno
mulb
and
in
das
int3
lret
jg
dec
push
xor
ss
inc
test
sub
sub
or
enter
bswap
cmpsb
push
das
stos
je
fidivl
aad
or
stos
jl
pop
mov
sti
cmpsl
and
mov
lods
dec
pop
or
jae
mov
sub
std
pop
push
add
push
mov
out
cmp
ss
popa
and
push
rclb
mov
fisttpl
mov
push
and
cmp
add
dec
lcall
mov
pushl
and
movsb
jl
out
or
cmp
scas
into
mov
fistl
or
xor
cmp
ffreep
movsl
lcall
into
add
pop
push
xor
ss
rcrl
push
fcmovnu
leave
divb
pop
push
shll
imul
popl
mov
addl
or
pop
jne
jmp
movsb
insb
adc
fistpl
clc
jne
imul
int3
dec
mov
daa
in
jnp
orb
push
stos
fwait
sbb
outsl
je
pop
jmp
enter
clc
adc
lret
imul
ret
movsl
jne
xor
push
mov
xchg
push
call
cmp
aam
push
dec
xor
rcrl
dec
out
jae
lock
sbb
std
addl
or
xchg
cmp
vpunpcklbw
or
sub
movsb
jbe
cmp
add
xchg
pop
stos
sbb
loope
adc
adc
push
jo
mov
pop
jo
loope
pop
in
insl
ret
or
xor
xchg
pop
insb
scas
mov
mov
test
js
push
notl
or
sbb
repnz
aaa
push
bound
mov
mov
jle
addb
insb
inc
dec
scas
adc
xchg
pusha
bound
aaa
lods
jmp
push
sbb
pop
stc
or
and
jbe
xor
es
jns
repnz
jle
adcl
adc
lret
xchg
xchg
pop
push
mov
roll
jg
divb
out
inc
jnp
push
cli
push
adc
xchg
orl
push
or
and
dec
xchg
faddl
popf
fimull
sbb
test
pushf
xchg
enter
lods
ret
and
mov
mov
shll
in
ret
out
out
add
clc
rcrl
jle
imul
arpl
aam
ficoml
call
jecxz
xchg
xorl
dec
inc
pop
ret
jp
leave
int3
push
andb
or
xor
push
push
sti
xchg
sub
push
or
mov
jle
pop
cwtl
int3
loop
inc
sub
imul
mov
stc
or
mov
cvtpi2ps
mov
mov
rolb
push
sub
insb
shr
dec
in
push
pushf
mov
adc
out
pop
cmpl
fsubl
inc
or
lea
sbb
pop
cmp
dec
push
mov
rcr
pop
xchg
aas
int
rorl
ret
mov
push
inc
int3
ljmp
push
out
clc
movsl
ja
imul
mov
jnp
xor
ljmp
sbb
dec
movsl
pop
lahf
out
cli
push
scas
mov
jno
insl
mov
inc
mov
adc
push
dec
ds
dec
std
inc
cmp
sub
stos
pop
adc
repnz
mov
movsb
xor
test
dec
jg
bound
add
adc
inc
shll
fisubs
mov
stos
lcall
jne
mov
rcrl
xchg
lret
lcall
adc
movsb
mov
lods
inc
popf
dec
lret
hlt
xchg
and
push
adc
xor
add
sahf
pop
mov
pop
cltd
pop
js
les
lds
sub
or
jns
jle
mov
das
xchg
rolb
mov
out
push
je
dec
nop
lret
mov
imul
cmp
mov
scas
and
ret
and
jmp
jo
into
inc
subl
or
jbe
out
mov
hlt
lods
mov
subl
inc
repnz
cmpb
ret
cmp
sub
jge
rol
int3
mov
outsb
sbb
push
fs
es
mov
ret
adc
lds
mov
or
push
sbb
sub
pop
mov
and
mov
add
jns
and
icebp
xchg
cmp
cmpsl
inc
pop
sbb
stos
xor
xor
adc
gs
js
nop
clc
imulb
adc
pop
roll
sbb
push
mov
fiaddl
jno
imul
sub
xorb
dec
fbld
repnz
mov
icebp
and
aas
jl
out
je
rorl
cli
mov
adc
push
sub
popf
and
leave
shlb
dec
mov
xor
cli
jecxz
mov
test
sub
add
insb
out
les
enter
into
jge
in
das
push
dec
adc
or
sbb
ljmp
mov
fbld
aad
pop
in
cmc
mov
out
popa
arpl
lods
pop
xor
inc
adc
testl
add
xchg
pop
fistpll
ss
cmp
mov
sahf
pop
sub
jnp
push
sbb
jge
aam
xor
pop
ficoml
xchg
lcall
cli
aaa
jb
pop
daa
scas
jl
inc
cmp
insl
lock
pusha
mov
pop
mov
in
cmp
cwtl
mov
js
xchg
insl
xchg
das
inc
adc
ret
out
dec
adc
std
ss
daa
dec
add
or
sbbl
xor
mov
mov
push
sarb
mov
movsb
popa
dec
mov
fildll
jg
enter
xor
add
sbb
push
adc
xor
loopne
sarl
sub
dec
repnz
out
or
pusha
nop
ss
jno
dec
fisubrl
data16
or
jne
and
std
cltd
xchg
jge
ja
loope
mov
popf
pushf
mov
or
fwait
outsl
mov
or
ljmp
test
lods
sub
stc
cmp
sub
cwtl
and
divb
mov
cltd
movsb
in
je
sbb
test
std
jmp
push
mov
mov
jns
lahf
adc
insl
sub
cld
rorl
or
push
cmp
and
pop
jbe
xchg
popf
mov
js,pn
in
fsts
push
or
mov
pop
or
stos
inc
test
or
call
les
outsb
fmull
pop
jnp
fidivrl
push
add
inc
fwait
mul
jno
outsl
adc
or
xchg
pop
lock
jb
adc
lcall
sbb
scas
xlat
cmp
and
mov
mov
jnp
xchg
jmp
sub
pop
cmpsb
mov
pop
icebp
loope
outsb
sub
push
cmp
fstpt
cmp
inc
test
int3
xchg
fsubl
aas
in
jge
push
inc
push
mov
imul
icebp
add
rep
lahf
pop
jbe
cmpsb
shll
inc
jg
clc
imul
jecxz
in
jne
adc
pop
add
adc
sbb
cmp
std
xor
xor
hlt
data16
push
fs
push
fcompl
lea
dec
pop
push
add
push
and
cmp
mov
pop
push
dec
cltd
lret
jb
mov
xchg
mov
ret
imul
jg
mov
insl
loope
sub
push
movsb
imul
scas
out
jnp
adc
sub
adc
or
pushf
shlb
lock
jl
in
lea
in
out
shlb
lret
test
ret
adc
xorl
sub
dec
or
xchg
out
test
ss
cmp
movsb
cmpsl
cmp
jmp
dec
rcll
fisttpll
xchg
jge
mov
xchg
loop
lret
fnstcw
or
and
test
adc
negl
and
mov
stc
mov
mov
shlb
ja
out
cmpsb
ficompl
das
leave
adc
mov
or
and
cmp
jne
xchg
and
push
test
fbstp
pop
cmp
mov
repz
rolb
loopne
fnstsw
out
lcall
mov
jge
mov
push
jl
xchg
push
or
push
mov
aad
jnp
cmp
push
hlt
adc
jmp
dec
sub
jne
scas
push
cmc
sahf
fcomp
push
cmp
xor
pop
cmp
inc
jge
add
xchg
mov
mov
sarb
shlb
leave
xchg
fnstsw
lock
out
inc
bound
inc
pop
fists
xchg
dec
outsb
sti
pop
add
in
js
lds
cmp
xchg
pushf
movsbl
pop
or
mov
jne
push
or
int3
adc
data16
fwait
xor
addr16
push
sarl
loop
dec
jmp
and
mov
int3
jge
mov
sub
cmp
inc
dec
icebp
mov
lods
andb
inc
sbb
jno
mov
pop
jbe
movb
xor
daa
or
lea
lcall
cmp
push
sub
mov
pop
call
loope
mov
mov
in
sub
sub
dec
xor
mov
popf
ljmp
cmpsl
inc
rcrb
dec
fidivs
jg
loopne
add
cs
mov
xor
fidivrl
xorl
push
sbb
test
sbb
sbb
add
movb
mov
jp
xor
lahf
insb
xchg
pop
jns
jmp
xchg
cld
sahf
mov
push
inc
int3
adc
cwtl
mov
shlb
adc
jp
xadd
add
xchg
lods
scas
and
out
fidivrl
dec
add
cltd
mov
xchg
or
cs
movsb
or
adc
and
mov
test
repz
jns
ret
call
sbb
sbb
je
lock
arpl
movsb
jecxz
daa
dec
adc
cmc
sbb
imull
popf
cli
enter
xchg
shlb
ljmp
mov
jnp
pop
mov
stos
xor
xchg
out
loop
das
pop
pop
mov
jg
push
pushf
pushf
pop
hlt
jecxz
cmp
cmp
or
jbe
int3
das
adc
adc
aas
ss
rcr
fwait
out
mov
mov
inc
shr
loopw
sbb
or
icebp
pop
popf
in
mov
sub
cmpb
lea
sub
dec
xor
aas
and
inc
jmp
mov
cs
mov
call
in
sbb
mov
fisttps
fbstp
xchg
xchg
in
fwait
in
jle
inc
add
out
std
not
popa
pop
repnz
call
ficompl
push
xchg
mov
movq
sub
jmp
jns
jno
addr16
fisttps
lods
les
cmc
lock
gs
mov
sub
or
inc
push
sets
das
pop
imul
push
inc
loop
sbb
xor
insl
int
icebp
mov
jne
inc
repz
adc
push
adc
fwait
sbbl
loop
push
pop
popa
and
lds
test
ljmp
addr16
dec
stos
mov
es
ja
add
xor
push
sbb
mov
jmp
xchg
cmp
xorl
dec
inc
dec
je
push
mov
les
loope
fnstsw
dec
adcl
mov
addb
cmpsb
lcall
inc
dec
ds
sub
push
jmp
loop
ret
push
push
mov
jmp
inc
push
adc
insl
inc
jb
pusha
das
or
push
pop
mov
into
dec
xchg
add
addr16
add
in
mov
jecxz
adc
push
mov
sub
das
leave
sbb
std
jp
cmp
cmpb
dec
xchg
repnz
sahf
int
loopne
sbb
rcrb
jecxz
sbb
pop
adc
arpl
push
xor
nop
popf
push
lahf
pop
xor
jnp
divl
lcall
ficoml
push
outsb
jno
faddp
outsb
repnz
xchg
cmp
addr16
and
pop
addl
jg
in
xchg
leave
push
movsl
fnstenv
fisubl
jecxz
add
into
pop
das
mov
loope
insb
pushf
sub
sbb
shlb
aad
lahf
mov
mov
or
push
loop
or
mov
psraw
xchg
es
push
xor
inc
arpl
test
push
mov
out
mov
mov
in
pushf
and
xchg
dec
xchg
add
cmpsb
mov
xor
imulb
in
mov
lock
fwait
int
fidivrs
xchg
arpl
bound
scas
cmp
push
fwait
pop
fistl
add
inc
fldt
cli
arpl
dec
loop
mov
ja
xchg
movsb
je
sub
adc
fwait
xor
mov
ss
pop
fwait
sbb
mov
mov
pop
push
cmp
pop
mov
sbb
shl
leave
addl
aaa
in
jnp
sbb
outsb
sub
aad
dec
sub
push
mov
or
mov
inc
sti
pop
inc
je
inc
sub
mov
int3
mov
sahf
xlat
repnz
lret
lods
je
mov
mov
out
lret
sahf
cld
mov
cmp
lea
addr16
leave
ret
push
sub
ffree
xchg
adc
mov
fidivs
ja
jmp
dec
adc
fisttpl
nop
add
enter
add
fiadds
es
jmp
loope
loop
shl
dec
push
push
aad
mov
sbb
fisttpll
fcomps
jns
push
clc
cmp
pop
xor
cmc
or
cmpsb
adc
sti
rolb
repz
popf
jmp
add
stos
cltd
lds
mov
inc
negb
or
lods
push
cmp
jnp
fdivp
into
repz
pop
mov
fs
sahf
inc
leave
and
fcomps
test
pushf
aam
or
test
jo
scas
jno
ret
fnstcw
jbe
shlb
mov
roll
xchg
pop
sub
bound
call
push
and
test
jae
jp
mov
stc
ss
sbb
imul
xchg
out
xor
loop
lcall
adc
mov
mov
mov
add
lods
sub
ret
cmp
sub
cs
ds
xchg
in
lods
push
aas
sub
into
decb
jecxz
xchg
push
ja
dec
fisubrs
xor
dec
push
mov
lea
shll
pop
jmp
mov
push
sbb
xlat
leave
popa
out
cwtl
enter
mov
fsts
out
push
movsb
arpl
loop
lock
bound
push
inc
adc
dec
popa
movsb
ljmp
jecxz
mov
cmp
xchg
negb
or
xchg
push
dec
xchg
stc
jne
cli
sub
test
sbbl
push
cs
pusha
mov
clc
dec
loope
dec
sub
push
cmp
dec
jge
leave
das
mov
das
scas
cmp
roll
jmp
clc
sub
mov
lret
pop
push
sbb
fiadds
push
ljmp
xchg
add
mov
jge
dec
scas
push
push
sbb
push
jmp
rolb
xchg
mov
imul
dec
das
add
subl
ljmp
cmp
mov
js
push
pushf
jo
jnp
adc
imul
or
dec
and
pop
jmp
inc
xor
subl
mov
push
inc
clc
jle
mov
jnp
mov
mov
fnstcw
jge
sbb
push
loop
adc
lock
push
mov
sub
cmp
sahf
rorl
popf
jge
aas
enter
jae
add
mov
mov
imul
movsb
jg
js
mov
mov
sub
repz
idivl
in
mov
dec
daa
or
mov
gs
dec
xchg
insl
mov
aam
mov
out
fs
add
pop
test
enter
jge
jg
popa
repnz
call
cmc
push
inc
aam
dec
ljmp
push
pop
out
jecxz
shll
movsl
push
pop
insl
push
jmp
adc
cli
movsl
sub
fdivl
push
gs
push
neg
fbld
inc
into
fimull
dec
imul
sub
scas
ret
repnz
mov
arpl
ret
movsl
fs
jns
cltd
push
sahf
test
mov
std
aas
jnp
xchg
mov
aaa
jmp
adc
clc
jp
jns
shll
inc
mov
adc
mov
inc
mov
dec
shrl
mov
xchg
fldl
jnp
pop
and
and
or
lock
inc
sti
mov
lods
stos
test
sub
aas
jne
sti
jmp
sbb
pop
aaa
add
sbb
rolb
dec
xor
jmp
dec
insb
ja
jae
xor
jbe
inc
pop
sbb
in
or
scas
sbb
and
xor
into
add
loop
push
vpunpckldq
and
int
dec
mov
jb
push
fucom
mov
sub
and
roll
int3
insb
cmpsl
cmp
adc
fsts
or
loop
lret
cmp
fucomip
pop
imul
lret
filds
mov
push
scas
xor
add
jecxz
mov
adc
xor
mov
leave
cmpsb
sbb
jge
mov
in
mov
xchg
xor
ret
cmpsb
xchg
scas
sub
mov
out
push
icebp
ds
and
leave
fsubs
fstpl
mul
inc
jo
out
stos
stos
sub
les
repz
andb
das
cmp
enter
cld
and
daa
mov
add
and
mov
stos
pop
jb
fwait
jae
cltd
sti
push
scas
inc
pop
cs
fstpt
sbb
sub
adc
insb
lock
cmp
scas
imul
aad
sti
pop
sarl
adc
mov
shlb
les
push
mov
in
inc
push
jge
pop
xchg
jbe
cmpsb
jecxz
shll
fbstp
and
call
add
mov
jns
test
push
xchg
ja
sub
sub
mov
adc
mov
push
or
lcall
cmp
stos
mov
push
rcll
add
dec
jns
fiaddl
clc
adc
pop
dec
push
fists
insl
pop
insl
lahf
mov
push
inc
dec
lcall
ja
pop
sahf
sbb
pop
std
ljmp
pop
jnp
mov
sbb
ja
mov
fidivrs
add
gs
mov
imul
xchg
mov
popf
xchg
dec
mov
mov
inc
xchg
ljmp
dec
push
adc
imul
shll
sti
fs
addr16
add
push
pop
std
loope
dec
dec
cmc
mov
mov
ljmp
mov
lock
pusha
mov
mov
rclb
mov
mov
jbe
mov
test
pop
cmp
ret
sub
nop
ja
push
pop
int3
loop
sahf
jp
jecxz
stc
cmpsb
or
adc
add
fistl
adc
mov
sbb
mov
in
scas
cmc
imul
pusha
or
jecxz
adc
jle
outsl
aad
push
and
jne
add
add
push
loop
and
call
repz
js
jle
mov
mov
or
mov
jbe
ret
jno
fimuls
das
mov
inc
xor
lods
jne
ljmp
andb
lret
or
or
add
mov
lcall
fistl
pop
xchg
fwait
sbb
imul
scas
jo
enter
or
insl
fisubrl
mov
out
pop
jo
xchg
jge
mov
cld
mov
pop
cmp
sahf
jno
dec
mov
lret
push
test
lcall
dec
mov
push
mov
fsubl
pop
mov
in
xor
push
sti
dec
xor
popa
mov
and
aad
iret
rcl
cmp
scas
sbb
fcmovbe
repnz
mov
pop
into
popa
shlb
pop
inc
mov
adc
push
lods
orl
sub
mov
mov
add
mov
clc
aam
jg
push
add
divb
push
mov
adc
stos
dec
mov
daa
xchg
mov
rcll
imul
sahf
adc
rorl
int
fiaddl
mov
stc
data16
out
movsb
jne
xchg
jmp
add
xchg
xor
fldt
arpl
mov
cmp
out
jno
push
and
add
adcb
adc
in
insb
aas
mov
cmp
mov
notb
movsb
stos
adc
das
dec
scas
inc
jp
mov
cmp
and
mov
lods
daa
movsl
inc
sub
mov
scas
test
sub
dec
pushf
out
aaa
add
lcall
mov
popf
sub
sub
in
mov
xchg
sbb
js
mov
dec
and
hlt
sbb
test
cmp
push
and
add
sbb
adc
dec
pop
dec
mov
cmc
mov
mov
or
jns
mov
sarl
cli
mov
mov
jb
mov
std
and
test
insb
cltd
sub
and
into
lret
nop
push
sub
jg
or
test
mov
xchg
pop
out
jge
arpl
lock
test
jns
jae
xchg
bnd
movsl
icebp
and
mov
fmuls
aad
xor
or
or
mov
sahf
mov
or
xlat
push
sbb
mov
outsl
and
and
sbb
adc
inc
jmp
push
sbbl
pop
sbb
sub
adc
lret
lds
repnz
pop
sub
cmp
mov
test
into
pop
mov
cwtl
repz
mov
adc
aam
or
cs
push
test
add
pop
pop
arpl
xor
inc
movb
push
loopne
fs
cmpsb
ficoml
out
bound
sahf
xchg
shll
clc
jecxz
inc
sbb
adc
xor
mov
push
notb
rorl
ds
inc
das
push
pop
mov
loop
arpl
in
xchg
test
inc
add
mul
mov
mov
sbb
cli
jns
je
sarb
movsl
icebp
mov
mov
jnp
adc
test
or
ja
mov
lea
shll
cmp
push
sub
inc
add
xchg
out
sahf
jo
shlb
jl
push
loop
mov
and
fildll
clc
ds
adc
inc
js
xor
loopne
mov
shrb
sub
gs
ficomps
mov
addb
pop
shr
aam
mov
push
or
je
push
movsb
aas
sti
jp
xlat
cmp
mov
jo
in
ficompl
jp
loop
pop
stos
hlt
out
repnz
cmpsl
call
sub
jno
add
subb
inc
sti
jb
repnz
js
mov
popa
xor
pop
cmp
loope
pop
add
aaa
rcll
add
pushf
sub
mov
and
lock
mov
push
movsb
add
in
jb
test
mov
idiv
sub
sub
aam
inc
and
fmul
in
mov
jb
cmpl
outsb
and
lods
inc
dec
sbb
ror
repnz
adc
add
aad
ret
xchg
lock
les
insb
and
xchg
adc
jmp
test
cltd
inc
and
xchg
js
cmp
mov
sub
inc
loope
jbe,pn
jge
sarl
movsb
fdivs
lcall
mov
sbb
fistl
push
mov
int3
lret
pusha
arpl
mov
mov
leave
loope
dec
outsb
sbb
inc
cld
mov
sub
jl
dec
inc
into
pop
enter
xorb
dec
frstor
shlb
aam
js
sbb
dec
push
adc
push
mov
hlt
test
jg
mov
xchg
ss
add
jecxz
arpl
cld
repnz
bound
xchg
addl
xchg
cs
sti
fwait
xchg
mov
clc
fimull
outsb
push
fwait
jbe
or
and
adc
aas
mov
loope
push
outsb
mov
xor
cmpsb
mov
dec
fidivs
mov
mov
adc
cli
daa
push
inc
aam
xchg
or
imul
rcll
mov
popl
jecxz
jnp
inc
ret
fidivrs
ss
cmpl
push
fwait
inc
jmp
repz
das
xor
or
xchg
imul
mov
imul
push
subb
in
shll
mov
sbb
cmp
jbe
out
gs
xlat
push
pop
or
sbb
sub
cli
or
add
mov
call
pop
add
pop
inc
push
jp
cmp
jb
data16
pop
xchg
jecxz
shrl
scas
adc
adc
xchg
int3
cmpsb
add
mov
mov
fmul
nop
lods
nop
dec
pop
or
mov
jns
mov
out
ss
rorl
in
or
cmpsb
out
mov
add
repz
rcrb
xchg
in
sub
out
dec
jmp
sar
mov
aas
pop
ja
sbb
cmp
aaa
call
shlb
cmp
mov
out
gs
pop
xor
jns
mov
push
les
jle
xchg
fnstcw
sahf
sahf
outsl
sub
sarl
fiadds
outsb
in
lock
fistl
mov
into
sub
mov
mov
and
inc
icebp
out
sbb
pusha
xor
jno
repz
stc
aam
stos
add
jo
dec
cmc
cmp
pop
lds
adc
cmp
lock
cmp
inc
and
and
lock
mov
lds
in
imull
push
push
jb
mov
inc
fwait
jae
pop
push
test
jbe
push
sahf
sub
or
fsub
jge
pop
popa
cld
xor
dec
dec
add
fcmovne
xor
add
pop
sbb
add
jg
scas
mov
dec
and
push
bound
xorl
mov
jle
jecxz
xor
es
xchg
pop
xchg
rcr
rorb
ds
ret
xor
bound
mov
cmp
xchg
push
addr16
sbb
stos
popa
js
cs
pop
lea
jp
rorl
jbe
mov
xchg
leave
push
mov
cmp
insb
pop
repnz
pop
movsl
mov
inc
repnz
enter
adc
movsl
add
lea
mov
bound
adc
cmp
ja
lock
mov
mov
divb
push
mov
in
ja
sbb
ret
push
leave
add
std
inc
sbb
inc
in
in
into
mov
mull
in
jp
rolb
das
xchg
xlat
xchg
lss
adc
mov
je
fimuls
dec
mov
mov
mov
iret
test
popa
add
push
or
lods
add
test
xchg
push
out
fimull
andl
roll
movl
xchg
or
mov
sub
das
push
sub
adc
add
scas
lods
push
into
adc
subb
add
adc
pushf
lret
jb
mov
inc
mov
outsb
movsb
test
or
das
dec
jmp
and
aad
inc
pop
nop
lea
lea
cmc
loop
mov
cmp
arpl
push
sti
push
and
sbbb
add
xor
call
xchg
mov
fsubrs
and
or
cmp
lcall
inc
mov
cmp
in
fcompl
sbb
inc
jecxz
cwtl
adc
and
adc
scas
hlt
jge
pop
popa
ja
roll
adcl
daa
sbb
lret
loop
test
bound
pop
mov
scas
adc
cmp
popa
jo
dec
mov
jno
dec
pop
es
sbb
insl
testl
popa
cmp
imul
popf
inc
jns
adcb
jb
fcomps
push
xor
in
mov
les
mov
dec
adc
pop
dec
cmp
adc
push
or
ud0
mov
xor
jno
imull
and
sbb
cld
dec
lods
add
sub
xor
xchg
pop
es
les
mov
push
sub
rclb
mov
push
pop
inc
pop
sub
jecxz
cmpsb
jmp
inc
xor
ds
stc
test
mov
lahf
push
les
loop
sbb
addr16
imul
add
dec
insb
cltd
mov
push
add
jecxz
inc
adc
cli
lret
push
xorl
or
dec
mov
and
mov
pusha
nop
or
je
mov
xchg
fsubp
add
in
frstor
add
loop
std
jne
dec
les
ja
adc
mov
cmc
lret
fildll
jecxz
das
and
inc
gs
cltd
sbb
insl
les
sahf
pop
push
cmpsb
je
add
adc
cltd
arpl
test
popa
sub
movsl
mov
mov
add
lock
dec
fbstp
daa
imul
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
cmp
sarl
pushf
jnp
addl
jne
hlt
jo
lahf
add
xchg
and
jle
in
test
inc
movsl
push
in
pop
incb
mov
xchg
imull
mov
and
and
adc
xor
fistl
jmp
mov
xchg
push
mov
add
sub
jp
clc
out
aas
aas
aaa
outsl
enter
fsts
ja
rcr
pushl
cmp
andl
add
sbb
loopne
and
and
mov
in
lds
push
xor
cli
jl
and
test
add
test
nop
mov
inc
out
dec
pop
jae
insb
adc
jcxz
roll
inc
movb
adc
jns
jge
lea
inc
xchg
into
mov
mov
aad
fists
jg
enter
mov
jno
and
pop
pushf
mov
mov
push
jne
enter
loope
xchg
or
out
add
in
jns
mov
repz
add
es
dec
leave
push
jg
push
adcb
sbb
pop
flds
and
bound
lret
or
mov
into
cmc
enter
mov
cmovl
bts
push
add
repnz
xchg
add
ja
xor
and
jge
loope
xchg
call
imul
and
sbb
fsub
adc
mov
jle
xchg
jb
jo
popa
lds
sub
sub
es
pop
xchg
jl
idivl
pop
mov
repnz
sbb
stc
fstpl
push
xchg
das
jb
nop
insb
push
push
pushf
imul
push
jb
push
sbb
rcrb
adc
fstps
addr16
push
mov
pop
pop
loopne
dec
xchg
call
ja
inc
sti
loop
push
sub
xor
push
xchg
sub
testl
loopne
xchg
enter
out
add
arpl
add
sahf
sbb
sub
out
in
dec
ja
xor
add
dec
cmp
fldl
fadds
pop
mov
aas
ret
xchg
mov
push
xchg
mov
iret
and
jmp
rclb
rcrb
add
js
xor
push
in
pop
cwtl
jmp
test
sub
ret
jge
sbb
jno
mov
data16
cmc
push
xchg
push
sbbl
mov
pushf
popa
and
jmp
mov
inc
out
mov
sub
icebp
ret
xchg
popf
hlt
add
pushf
leave
pop
mov
frstor
adc
test
scas
fsubrs
testl
mov
mov
std
std
mov
aas
sub
dec
shlb
leave
xor
das
aam
pusha
cltd
ss
or
sub
push
ds
mov
lret
sahf
xchg
push
or
ret
lods
jae
testl
lods
notb
inc
test
fidivl
scas
pop
jg
incb
mov
push
rclb
mov
or
sti
xchg
sbb
push
test
xchg
inc
mov
and
fs
outsb
pop
cmpsl
mov
lds
cvtpi2ps
ret
sti
lock
sbb
xor
dec
or
imul
leave
add
sub
leave
popf
push
cmp
sbb
loopne
gs
mov
popa
bound
out
movsb
arpl
int
scas
mov
fimull
pop
orl
xchg
pop
xchg
xor
xchg
bound
push
scas
gs
cmp
cli
sub
aam
insl
mov
push
inc
pop
push
xlat
cmpb
or
fsubs
adc
in
mov
xor
inc
jmp
test
je
mov
dec
xchg
outsb
or
jo
mov
jae
sbb
or
popf
xchg
mov
inc
mov
sub
incl
dec
cwtl
xchg
clc
imul
xchg
lret
pushf
fildl
adc
popa
xor
push
dec
jne
ljmp
adc
adcl
cmp
xchg
jbe
inc
in
mov
nop
clc
jb
pop
or
xchg
rorb
mov
or
insl
mov
cmp
xor
and
mov
dec
cmp
enter
insb
into
movsb
mov
mov
push
add
frstor
xchg
dec
mov
and
pop
cmp
fimull
jg
xor
or
lahf
adc
cmp
jg
enter
rorl
dec
xchg
addr16
jno
stc
sub
adc
push
insb
push
ror
cli
and
xor
push
sub
push
ss
fdivs
das
jmp
push
inc
loope
mov
add
cmp
cmpb
repnz
and
mov
arpl
bound
inc
dec
dec
xchg
mov
xchg
scas
jae
aaa
jns
and
int
jne
dec
pop
lcall
enter
addr16
mov
pop
ljmp
push
lahf
shl
les
or
jae
fldt
fwait
jecxz
pop
add
dec
mov
mov
cs
negl
dec
in
adc
in
lahf
cmp
dec
int3
sub
mov
mov
sbbl
jae
add
ja
lock
imul
jne
sub
lret
repz
add
cmpsl
fdivr
inc
aas
cwtl
fstpl
insb
sbb
lcall
cmp
mov
les
call
roll
xchg
inc
xor
push
adc
rolb
mov
in
add
mov
inc
les
in
push
jecxz
out
mov
clc
push
mov
inc
inc
or
cmpsb
adc
and
into
mov
out
hlt
pop
fs
leave
mov
icebp
xor
push
fs
xor
out
movsb
jle
mov
cli
cmp
jne
decl
mov
ljmp
loope
dec
mov
pop
lret
xchg
loop
adc
pushl
jl
mov
pop
aaa
and
and
shll
cwtl
dec
xor
push
mov
sbbb
js
outsb
inc
mov
shlb
hlt
sub
fidivl
gs
daa
sub
scas
repnz
ret
xchg
and
cmc
mov
sub
lret
dec
hlt
imul
lods
lock
in
out
out
fcmove
mov
test
lret
jnp
mov
jl
loop
add
sbb
iret
mov
mov
mov
dec
or
mov
in
pop
mov
xchg
push
pusha
inc
shrb
loop
js
and
mov
mov
jno
mov
or
sbb
sahf
sbb
imul
pop
pushf
add
leave
jno
int3
cmp
pop
mov
popl
pop
pop
pop
adc
jge
dec
mov
sub
xchg
sbb
shlb
sub
adc
pop
xchg
and
xchg
outsb
test
repz
push
or
push
xor
and
ror
mov
test
add
mov
cmp
push
jmp
pop
daa
mov
pusha
or
cli
ja
mov
aaa
ds
xchg
jne
in
pop
mov
sbb
pop
sbb
rcrb
imul
mov
lcall
mov
cmpsl
mov
mov
fistpl
xor
loope
ljmp
sub
cmp
cmp
lods
cwtl
cmc
shl
cmpl
pop
aad
inc
icebp
in
bound
lahf
pop
push
in
xchg
cmc
mov
scas
inc
es
addr16
xor
clc
inc
mov
sti
scas
pop
ret
cmpsl
pusha
stos
xchg
pop
ds
add
cmp
cmp
in
or
or
xor
push
subb
bound
aaa
insb
cs
aas
jno
pop
in
jae
push
adc
mov
jb
sti
loopne
jbe
or
pop
mov
xor
popa
fldenv
jno
nop
cli
pusha
jg
jle
movsb
jge
mov
aaa
jnp
iret
and
pop
insl
ds
scas
aam
lcall
push
loope
lea
in
mov
es
in
push
mov
push
es
mov
mov
ror
test
xor
push
das
in
mov
in
shrl
outsl
idivb
jge
aaa
push
loope
fidivl
faddl
out
fdivrl
pusha
cwtl
lods
mov
popa
adc
sbb
dec
leave
push
cli
orb
mov
aas
push
and
adc
gs
or
mov
lahf
sbb
sub
negl
sti
insb
pop
lcall
repz
fcmovnbe
bnd
leave
stc
and
inc
aas
arpl
sbb
divl
lretw
mov
ret
xor
or
inc
sarb
shll
cltd
sarl
cmp
shlb
cmp
push
pushf
xchg
movsl
mov
lods
int
mov
adc
pop
push
hlt
in
pop
cmp
add
sbb
cmc
push
mov
push
jle
cmp
pop
xor
rclb
xor
sbb
addr16
push
dec
scas
ds
jne
sbb
adc
fadds
mov
mov
sub
adc
lret
outsb
test
mov
mov
sbb
pop
sbb
fsubr
lods
mov
pop
add
ljmp
inc
mov
push
xlat
mov
mov
icebp
test
js
jecxz
pop
adc
add
pop
jmp
fmull
and
mov
fsubrp
push
in
data16
iret
inc
push
xchg
test
sub
les
jecxz
or
sub
subl
dec
int
call
cmpsb
outsb
cmp
call
clc
or
dec
aaa
fsubrl
movsl
fstl
xchg
push
fcoml
in
js
inc
lret
shll
pop
xchg
push
jbe
jp
sub
aam
not
addb
xchg
cmpsl
lret
and
mov
inc
jns
call
or
push
cltd
cs
mov
sub
dec
test
je
sub
push
nop
mov
inc
jmp
popl
mov
inc
pop
stc
jns
rclb
aas
jbe
outsl
lret
xchg
push
imul
jl
pop
mov
jle
or
and
testb
xchg
adc
mov
push
and
push
fs
inc
jo
xor
clc
mov
mov
icebp
outsl
pushf
vpmaxub
shrb
xlat
push
cmpsb
pop
xor
aas
clc
into
insb
jmp
ss
imul
lods
lcall
mov
adcl
cmp
dec
jns
int
push
push
les
arpl
push
mov
mov
loopne
and
daa
adc
jnp
cmp
inc
mov
dec
or
repnz
push
data16
inc
jb
aam
mov
mov
ljmp
rcl
movsb
adc
inc
sub
xchg
push
mov
pop
inc
movsb
inc
int
add
add
mov
jmp
xchg
ja
xchg
pop
push
movsb
dec
or
sub
dec
ljmp
dec
jg
jle
sub
mov
mov
push
test
mov
and
lea
mov
inc
push
andl
fs
pop
ljmp
cmp
and
sub
call
xor
pop
fnstcw
test
mov
mov
mov
sti
mov
loope
das
push
jp
pop
sub
adc
fdivr
ja
pop
sbb
mov
inc
mov
mov
std
xchg
adc
jne
aam
sub
je
add
pop
xor
xor
mov
cmp
xchg
pop
cmpsl
or
xchg
pop
and
add
sahf
popa
std
sarl
mov
xchg
fsubrp
xor
xchg
and
xchg
mov
mov
push
mull
mov
scas
mov
xor
and
xchg
cmp
dec
movsb
je
mov
mov
cmpsb
outsl
sub
addr16
push
pop
popa
jo
sar
incl
stos
pop
lret
das
pop
or
add
cmp
ss
js
icebp
lret
pop
mov
ja
sub
and
out
mov
push
mov
mov
xor
cli
ljmp
loopne
add
stos
hlt
scas
pop
mov
push
sysexit
ja
sbb
mov
mov
scas
push
and
dec
jae
test
outsb
mov
mov
pop
lcall
in
xchg
mov
scas
in
and
addr16
xchg
mov
lock
daa
fs
bound
jns
add
fwait
sbb
mov
ffreep
push
push
pop
xor
or
leave
push
sbb
cmp
hlt
insl
xorl
xchg
cmpsb
addl
cld
push
inc
stos
outsl
or
sahf
dec
dec
std
push
sub
sti
mov
fstpt
mov
mov
sub
jbe
test
int3
inc
sbb
mov
loopne
rorb
stc
nop
xchg
leave
inc
hlt
ljmp
cld
mov
dec
sub
and
inc
mov
lock
push
std
mov
scas
lods
jmp
in
test
fwait
or
ds
out
jmp
inc
jmp
pop
mov
push
fimull
dec
xchg
sbb
daa
scas
and
sarb
cmp
xchg
cmpsl
mov
push
and
xor
jg
jmp
push
outsl
mov
push
rclb
mov
lret
cmp
repnz
fnstsw
or
and
or
lahf
dec
adc
cld
xchg
dec
inc
xor
cld
mov
ss
das
cmp
mov
stc
icebp
pop
mov
das
push
or
mov
cmp
fs
hlt
repz
jecxz
into
mov
lods
xor
push
imul
jg
cltd
ret
push
fidivrl
xchg
shll
add
mov
das
xor
rorl
int3
fwait
insb
in
push
pop
inc
in
jae
mov
mov
inc
sar
xchg
rcll
enter
idivl
fsts
jge
stos
fsubl
jb
adc
cmc
push
sub
sub
inc
add
jmp
mov
lods
cltd
jno
xchg
std
insl
shr
xchg
mov
scas
xchg
xor
inc
sbb
xchg
in
inc
jle
mov
popa
or
lods
adc
pusha
int
pop
icebp
imul
std
dec
sbb
sbb
call
inc
add
div
jb
mov
scas
jo
lahf
xchg
inc
jns
mov
mov
lret
cs
adcb
fwait
arpl
out
mov
in
fdivr
pop
cmpsb
dec
mov
shrl
pop
jmp
xchg
lahf
flds
or
and
rcll
test
xchg
xchg
sarb
loopne
rcrl
dec
shll
push
push
sbb
dec
push
iret
sbb
enter
xchg
xor
jmp
cmc
jne
mov
adc
ljmp
ret
pop
call
push
orb
cmpb
arpl
mov
imul
mov
sub
and
sbb
ja
or
js
sbb
add
xchg
popa
pop
adc
cmp
add
lock
xchg
jmp
cmp
xchg
aam
lret
mov
inc
aaa
sub
cmp
jae
xor
pop
mov
pop
push
mov
mov
jb
shll
test
pop
lret
add
leave
adc
cs
mov
popa
popf
incb
cmp
sbb
fisttpll
mov
xchg
dec
shrl
into
popf
lgs
mov
movsb
cld
inc
mov
pop
and
xchg
popf
in
cmp
xor
push
loope
xor
inc
or
pop
mov
mov
xor
or
push
jmp
stos
sub
jb
add
inc
je
add
mov
sub
inc
xlat
ret
jno
sub
xchg
pushf
inc
les
data16
mov
xchg
dec
pushf
or
sbb
ficoms
add
mov
loope
rcl
loopne
sub
mov
lret
inc
data16
test
popa
fwait
mov
inc
mov
adc
arpl
mov
cwtl
pop
sbb
pop
fsubl
xchg
ss
adc
mov
sbb
lea
xchg
lret
push
bound
aas
and
insl
repz
pop
or
jmp
lock
cwtl
mov
xchg
sahf
dec
test
xchg
mov
sbb
es
xchg
or
adc
aaa
cwtl
inc
loope
and
adc
in
jmp
push
out
movsl
and
push
je
inc
pop
push
imul
movsl
pop
ljmp
mov
sub
jmp
fs
into
cmpsb
ljmp
pop
fwait
loopne
mov
jge
and
test
sbb
adc
lods
stos
test
int
icebp
movb
scas
add
stc
aad
mov
repnz
mov
dec
mov
loop,pn
loope
push
shrb
and
lret
cmp
mov
pop
mov
xchg
push
add
imul
mov
je
jno
loope
mov
nop
push
jnp
pusha
loope
cmpsb
push
aas
cmc
dec
int
jmp
jmp
cmc
negl
add
fcoms
cmp
xorb
mov
lahf
dec
and
jne
adc
add
cmc
ja
sti
jb
ss
dec
enter
pop
mov
icebp
jb
or
sub
xor
dec
jb
dec
jp
stc
icebp
dec
jecxz
jns
mov
jae
pushf
sub
shrb
mov
inc
lods
jmp
xchg
jp
push
scas
add
lds
jo
scas
repz
mov
icebp
cwtl
mov
xchg
mov
adc
cmp
push
jp
mov
sarl
sbb
scas
or
cmp
cmpsl
lret
test
xchg
cs
js
sbb
sbb
cmc
adcl
imul
inc
xor
fidivrs
loop
and
push
popa
jb
loop
lea
pop
js
pop
add
jb
inc
mov
mov
mov
insb
mov
stc
pop
icebp
add
daa
lds
jmp
add
mov
adc
mov
lods
xchg
lods
add
vmovhpd
add
call
dec
jo
cmp
jne
mov
insb
ljmp
popa
add
test
push
movl
int3
push
or
mov
mov
ljmp
adc
and
and
das
xchg
mov
hlt
mov
aaa
cmp
adc
fcmovnu
pushf
cmp
add
xchg
bound
mov
push
cmpsl
mov
and
pop
out
or
sarb
dec
cmp
mov
mov
mov
sahf
ss
imulb
xchg
inc
push
cmp
cmp
mov
sbb
int
xchg
insl
push
add
scas
sahf
pop
repz
in
inc
sbb
mov
stos
add
out
stc
stc
inc
and
push
call
push
lahf
rorb
test
cmp
add
cmpsb
push
or
lock
movsb
and
data16
leave
out
xchg
push
push
or
mov
mov
mov
dec
movsl
sahf
sbb
ss
dec
sti
cli
mov
daa
aas
xchg
jnp
fwait
dec
outsl
or
fadds
cmp
and
pusha
inc
rcrb
movsb
cmp
pop
mov
jmp
mov
data16
popa
dec
test
jno
cmp
pop
repnz
inc
pop
xchg
icebp
push
nopl
mov
xchg
out
mov
cmpsb
adc
mov
and
adc
and
push
cmpsb
lock
adc
loopne
xchg
cmpsb
mov
xor
xchg
fdivs
or
gs
incl
push
shll
cmp
xchg
popa
sbb
in
and
xlat
push
push
rcl
mov
test
fdivr
push
or
pop
test
add
pop
and
je
inc
cwtl
dec
les
hlt
fistps
mov
mov
pushf
das
sub
into
lods
loope
push
imul
jmp
jno,pt
or
ja
insb
mov
dec
push
xor
hlt
dec
jbe
or
inc
mov
mov
jecxz
adc
pop
clc
cmpl
ret
mov
pop
jbe
push
add
or
movsb
leave
mov
sub
jno
cli
ja
ret
mov
mov
mov
cld
lret
xchg
pop
dec
shll
inc
stc
bound
xor
push
push
insb
dec
dec
ss
sbb
gs
push
sahf
dec
or
es
or
int3
adc
and
xor
outsb
add
jg
jo
pop
push
je
mov
cmc
insl
fcompl
fdivrs
dec
mov
jbe
mov
pop
aas
xchg
filds
ds
ja
popa
push
lcall
lock
outsb
fs
daa
jno
sbb
or
lret
jmp
stos
add
push
sarb
cli
and
or
mov
enter
push
push
cwtl
inc
pop
push
out
pop
js
lcall
cmpsb
sub
lods
add
jns
dec
and
or
je
sbb
mov
xor
jp
jno
xchg
loopw
cld
hlt
out
orl
sbb
xchg
movsb
add
sbb
sbb
mov
mov
dec
adc
xchg
push
outsl
dec
aaa
jb
cmp
sahf
btc
xlat
xor
inc
add
dec
mov
call
ljmp
mov
xor
lods
jmp
cld
push
mov
and
loopne
lea
jle
aaa
clc
xchg
mov
mov
push
aam
imull
fidivrl
xor
loope
hlt
insl
jo
data16
mov
dec
pop
cltd
test
test
insb
outsl
in
shll
xor
test
lcall
mov
cld
fildll
lds
and
cmp
std
stc
neg
lods
add
adc
insl
loopne
xchg
ret
cmp
xchg
addl
inc
jo
rclb
aaa
ret
sub
pop
add
or
or
sbb
or
or
sub
and
aas
jl
mov
hlt
aad
or
daa
cmp
imul
repz
mov
push
adc
ja
inc
adc
push
cmp
rcrb
dec
stc
push
cld
cmp
roll
cli
enter
pop
push
fiadds
jne
into
xor
les
iret
xor
cs
cwtl
mov
pop
and
scas
and
aad
ror
rorl
ljmp
mov
jno
mov
add
push
mov
sub
mov
or
mov
sbb
jae
mov
push
ds
mov
push
rcr
adc
xor
dec
mov
adc
push
out
mov
mov
cwtl
cmp
xor
outsl
fsubs
mov
add
cmpsl
dec
ret
push
leave
adc
adc
xlat
pop
in
add
mov
dec
loop
jmp
or
je
lahf
subl
mov
call
jnp
rol
dec
and
sbb
mov
inc
jno
int
data16
mov
add
enter
jl
icebp
aam
mov
into
xor
das
push
mov
adc
rol
xlat
inc
bound
imul
loope
xor
mov
mov
aad
cltd
dec
push
push
enter
xchg
add
xchg
inc
nop
fs
shlb
in
jle
cmp
inc
mov
ret
xor
neg
pop
iret
in
add
bswap
jbe
or
movsb
push
pop
and
mov
shlb
mov
mov
adc
push
adc
add
cmp
push
xchg
repnz
popa
or
dec
daa
gs
dec
aas
rorb
push
adc
or
cmp
or
xorb
test
cmpsb
cmp
sub
mov
lcall
pop
jbe
idivl
mov
arpl
mov
push
push
pop
mov
cmp
push
mov
jge
out
jle
in
icebp
orl
cmp
sub
jbe
mov
iret
scas
in
xor
fcomps
push
dec
push
jmp
in
xchg
addr16
lock
push
pop
push
dec
das
cltd
nop
jmp
sub
jp
mov
xchg
cmc
mov
daa
push
lds
inc
lods
test
pop
and
jg
inc
cltd
push
or
out
pop
aad
xorl
and
sbb
and
bsf
daa
cli
scas
aas
sti
sub
cmp
push
movsl
mov
fs
pop
das
add
mov
mov
mov
jmp
mov
jns
stc
lahf
mov
mov
int3
pop
icebp
movb
outsl
jne
test
cltd
stos
mov
mov
pop
pop
repnz
aad
sub
orl
push
xchg
inc
xor
cltd
mov
dec
push
js
mov
push
jb
insl
int3
jbe
js
inc
xchg
dec
sarl
adc
lea
mov
pop
lods
cmp
push
out
jle
sbb
jb
xor
outsl
dec
stc
mov
js
and
daa
cmp
cld
aaa
out
adc
mov
mov
bound
mov
jo
popa
xchg
ljmp
sub
add
xchg
inc
out
fstpt
or
in
movsl
pushf
jle
hlt
mov
push
movsl
mov
es
lret
and
and
int
xchg
lods
mov
sub
out
or
push
lcall
jne
adc
push
sbb
in
test
inc
mov
cmpsb
shlb
sub
hlt
mov
lock
mov
push
push
adc
jns
sbb
rorb
mov
test
addr16
out
test
pop
push
or
xchg
mov
nop
pop
adc
add
mov
jbe
loope
iret
lods
sub
mov
outsb
xor
aam
or
jg
xorl
loop
push
mov
mov
rorb
dec
mov
jl
in
cltd
enter
cmp
jp
stos
xchg
jmp
sbb
jno
xor
leave
xor
int
iret
jae
adc
inc
sbb
pop
jnp
xorl
movsb
jg
out
mov
pop
jne
sub
in
push
pop
das
adc
out
xchg
adc
mov
out
out
popa
mov
shlb
jno
test
xchg
or
test
nop
add
mov
mov
aad
sub
fldt
les
jno
imul
add
jp
aam
ret
leave
dec
es
jmp
fdivl
popa
or
xor
in
pop
sub
mov
jns
dec
mov
xor
jno
fcoml
add
jp
icebp
es
std
in
jns
xchg
imul
xchg
js
lahf
adc
ja
sahf
pop
pushf
xor
dec
aas
imul
xchg
andl
inc
lret
enter
nop
sbb
inc
sub
addb
in
rcrl
popa
xchg
arpl
and
pop
xchg
sbbb
mov
jne
idivl
cs
rorb
leave
adc
mov
adc
enter
out
mov
fisttpll
xor
popf
std
in
inc
pop
xor
push
ret
sbb
mov
adc
mov
adc
lods
divb
fistps
jo
push
xchg
pop
xlat
xor
cmpb
jb
xor
sub
xchg
mov
jmp
pusha
mov
jle
jg
ja
mov
or
insl
mov
ds
and
dec
psrlw
pushf
sahf
jns
cmp
out
cmc
xlat
scas
in
jo
sbb
fists
push
lcall
jo
xor
pusha
add
movb
dec
push
fnstenv
sub
adc
shrl
inc
jecxz
aaa
cmp
bound
push
mov
pusha
sbb
jl
cld
add
sbb
push
jno
sub
lcall
cltd
or
adc
inc
add
outsl
negb
test
jl
inc
jecxz
xchg
xor
test
adc
hlt
sbb
lock
push
test
cmp
mov
push
call
in
sbb
inc
mov
daa
xlat
dec
lock
sti
test
std
xchg
inc
out
push
test
mov
jnp
outsb
xchg
mov
fistpl
outsl
adc
push
loopne
add
lock
mov
cli
dec
fdivp
stc
sti
xor
test
pop
lods
in
cmc
notl
rcrl
es
lcall
cmc
js
cs
jge
cmp
mov
sahf
dec
lea
int3
push
call
cmp
out
jae
jle
mov
movsl
addl
sbb
sub
mov
add
movsl
mov
fdivs
inc
cmp
lret
mov
inc
addb
shr
and
pop
inc
sub
jp
adc
and
sbb
in
pop
sarb
jl
sbb
inc
in
inc
loop
mov
sbb
mov
pop
sti
stos
pop
or
and
sub
inc
inc
or
mov
mov
adc
or
mov
in
or
test
mov
test
and
add
mov
movsl
mov
std
ret
das
jno
out
imul
mov
gs
jno
out
ljmp
ljmp
hlt
movsb
in
fucomp
scas
and
mov
xlat
add
cmc
mov
xor
sub
push
sub
push
sbb
lock
cmp
jo
loop,pt
mov
ljmp
iret
pop
bound
pop
and
cmp
pop
push
xor
jp
xchg
cmpsl
xor
add
mov
mov
out
enter
lods
jl
in
cwtl
cltd
cmp
pop
subb
idivb
in
cmp
push
pop
fmul
cwtl
xchg
cli
int
cmpsb
inc
insb
jp
sbb
notl
dec
sub
pop
orl
push
fwait
hlt
cwtl
iret
es
pop
js
push
push
adc
dec
sub
addr16
shr
push
dec
je
pop
int
into
lcall
fwait
mov
mov
push
cs
pop
test
pop
cmp
aaa
xchg
test
dec
es
mov
enter
mov
and
out
cmp
pop
cmp
add
xchg
int
add
lea
in
sbb
mov
pop
sti
pop
pushf
mov
jp
cmpsb
out
jnp
stos
or
xchg
stos
cmpsl
mov
mov
cmp
pop
out
lods
pop
pop
jl
xor
jl
or
out
ljmp
lds
add
mov
dec
push
inc
icebp
push
mov
imul
mov
fcomps
push
or
sub
rclb
loope
dec
loop,pt
add
cld
adc
dec
fiaddl
icebp
xor
jecxz
sub
shrb
mov
jne
sbb
call
stos
scas
jno
xchg
lds
push
xor
mov
mov
decl
hlt
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
mov
ljmp
jnp
cmp
pop
sub
adc
mov
inc
xchg
enter
sbb
push
jge
inc
mov
pop
xchg
add
jmp
push
jb
jne
in
std
pusha
and
sahf
std
jg
dec
inc
lods
adc
xor
jge
sar
cltd
aaa
xor
ror
mov
push
mov
push
ror
pop
dec
xchg
push
scas
fnstenv
mov
sbb
mov
popa
and
pop
arpl
rclb
decb
addr16
sbb
ret
adc
lahf
jl
jno
lea
fistpll
jo
adc
outsl
dec
out
add
jno
or
inc
jno
je
pop
push
sbb
inc
lret
mov
add
ljmp
mov
inc
cmp
or
mov
fisubs
scas
xor
fwait
xchg
ja
xchg
enter
push
cld
cwtl
mov
sbb
and
mov
dec
jae
sbb
lea
inc
sbb
rcll
loop
sti
add
mov
icebp
lcall
cld
into
xchg
mov
sub
inc
xchg
push
fisubl
out
jl
jbe
push
repnz
fldt
test
pop
hlt
in
xchg
cmp
mov
pop
adc
lods
cli
push
push
dec
aam
loop
and
cmp
sub
and
xlat
je
sbb
mov
fwait
push
sub
mov
in
lret
mov
sub
sarb
testb
je
inc
cli
repz
cmpsl
aad
push
into
bound
dec
mov
cwtl
adcb
movsl
iret
and
pop
jl
data16
test
add
out
mov
xchg
cmpsb
push
cltd
in
jle
mov
ds
pop
in
push
fsubrl
push
jnp
movsb
outsl
and
cmpsb
pop
dec
les
out
inc
out
fisttps
add
mov
test
shlb
movsl
mov
dec
dec
or
xorb
push
test
mov
shll
ret
loopne
push
hlt
mov
cltd
test
cmp
dec
maxps
leave
dec
push
pop
adc
pop
rclb
sub
add
icebp
call
or
js
pusha
movsb
imul
out
mov
scas
popf
pusha
clc
inc
sbb
cmp
add
icebp
and
sub
scas
cmp
or
test
mov
pushf
mov
dec
mov
sub
sub
sbb
adc
sbb
lea
xor
test
repnz
int
ds
das
inc
in
popf
sub
sub
pushf
cmp
dec
out
pop
push
sbb
in
cli
pop
sub
popf
ss
pop
cwtl
and
mov
xchg
aaa
repnz
loope
or
jae
popa
int3
adc
test
fisubrl
dec
xor
mov
fbstp
js
call
out
ljmp
pop
outsb
mov
ja
fldenv
sbb
mov
out
adc
ja
mov
or
and
dec
xchg
xlat
dec
movsl
jo
out
rcrl
cmp
xchg
xchg
test
js
fmul
mov
lock
cmp
int
push
mov
shll
inc
rorl
mov
xor
ds
push
or
loope
movsb
jl
sbb
sti
cmp
push
aaa
xchg
in
inc
and
push
lods
pop
adc
sub
dec
es
pop
imul
int3
pop
dec
les
mov
jle
pop
sbb
cmp
hlt
xchg
adc
pop
or
push
mov
test
mov
jmp
fcmove
jnp
dec
add
mov
fs
inc
jmp
xor
sub
imul
inc
fsubs
fsubl
mov
and
xlat
into
and
cmpsb
cmp
jge
in
shl
jne
and
sbb
pop
dec
inc
ret
push
add
jb
mov
inc
lods
inc
and
xchg
xchg
mov
stc
popf
out
nop
lods
mov
imul
xlat
in
dec
in
dec
jnp
xchg
mov
ret
sbb
scas
jne
sbb
ss
outsb
jae
hlt
loopne
frstor
or
les
jle
cmp
enter
cmp
mov
push
cmp
push
cmp
push
ret
xchg
and
sbb
sbb
mov
divb
outsb
sbbl
push
mov
cmpsl
sbbl
out
sahf
fmull
lahf
mov
mov
jae
fldcw
hlt
test
sti
inc
and
cli
add
xchg
daa
pop
stos
adc
xlat
mov
cmc
rcll
and
inc
lods
jnp
sbb
and
imul
jae
idiv
stos
jbe
mov
mov
adc
inc
jg
inc
sbb
mov
cmp
daa
mov
test
or
pop
out
or
jle
mov
sar
daa
subl
cmp
sub
cwtl
pop
cmp
in
fidivl
ds
divl
mov
repnz
jbe
sahf
loop
jmp
add
loope
pop
cmpb
mov
mov
jb
rcll
mov
popa
iret
ljmp
push
loopne
lds
xchg
inc
in
inc
xchg
hlt
jne
sbb
out
xchg
pop
mov
mov
mov
and
or
rorb
cli
nop
inc
roll
pop
ds
xchg
lods
mov
ljmp
xor
pop
lock
test
fcoml
les
js
inc
pop
adc
xchg
lock
popf
xlat
push
stos
out
lahf
dec
dec
xchg
adc
lahf
xchg
or
cltd
bound
push
fs
leave
jmp
neg
ds
out
mov
ljmp
fldcw
into
imul
loope
jae
and
dec
sub
clc
jae
push
or
sbb
push
mov
push
mov
xor
xor
jle
aaa
lret
adc
mov
mov
call
jns
sbb
das
fwait
jle
jns
xchg
pop
aas
int
mov
sahf
in
nop
xor
dec
cmp
dec
push
add
inc
out
push
rcl
repnz
mov
inc
dec
xchg
test
xchg
ss
je
test
pop
outsb
mov
addr16
fdivl
cwtl
sbb
xchg
sbb
repnz
hlt
xchg
sub
call
push
mov
sub
inc
jge
jecxz
dec
and
add
sti
mov
mov
loopne
stos
adc
pusha
ret
jo
test
and
push
xchg
lret
ret
ret
cmp
mov
loop
fists
aas
mov
xor
mov
sub
insb
inc
iret
mov
shlb
mov
xchg
xor
sub
inc
push
je
outsl
outsl
push
fisttpl
sub
add
insb
mov
inc
mov
cmpsb
andl
inc
push
inc
cmpsb
fs
notl
shl
xchg
loop
or
push
das
jp
adc
inc
lret
adc
adc
lahf
xor
lcall
push
loope
or
idiv
jae
je
pmaxsw
in
jmp
add
mov
enter
shrl
lahf
add
mov
and
das
or
adc
push
push
andb
adcl
lods
jo
lret
dec
outsb
xchg
dec
hlt
mov
addl
jnp
faddl
aam
cwtl
push
out
and
jp
cmc
lds
shlb
out
ljmp
stos
push
inc
icebp
mov
rcr
bound
pop
jge
sbb
sbb
fisubrl
fildl
mov
je
out
dec
inc
scas
jne
mov
jns
inc
aas
mulb
and
sahf
jg
mov
dec
mov
xchg
stos
mov
js
mov
inc
popa
icebp
in
pop
xchg
jg
xor
gs
push
mov
insb
adc
adc
arpl
lea
js
andb
add
rcr
pop
fisttpl
fsts
adc
mov
jno
dec
lods
sbb
xor
mov
std
or
jmp
lods
mov
cltd
cs
stos
inc
std
test
mov
lahf
std
mov
ret
lea
aad
add
xor
mov
pushf
dec
push
pop
adc
fisubrs
mov
cmpsl
mov
xchg
sbb
in
gs
pop
rorl
ss
push
mov
or
mov
inc
mov
xor
cltd
xor
cltd
sbb
cmpsl
xchg
clc
pop
sbb
fildll
sub
dec
lea
les
icebp
daa
daa
cmp
aas
arpl
push
movsl
in
pop
loope
stos
stos
popa
stos
pop
mov
outsl
arpl
aam
shll
cmc
mov
pop
xchg
scas
xor
out
scas
fistps
stos
jns
ja
dec
adc
xchg
xor
mov
in
cmpsb
fidivs
push
jl
cld
jns
fwait
outsb
lret
jmp
sbb
and
ffreep
mov
cmc
pusha
nop
test
mov
dec
loopne
fisubl
scas
rorl
fwait
test
cli
jg
aam
loop
pop
jbe
fstpl
cli
sub
scas
sahf
fmul
cs
mov
and
sar
push
cmp
jb
stc
lret
sub
insl
andl
xlat
outsb
xchg
jb
jnp
incl
cld
out
leave
xchg
pop
fsubr
jg
inc
test
jo
popa
shll
and
das
pop
push
cld
xchg
sub
jb
rcrb
fs
call
jmp
in
cli
lret
cmpl
lock
fidivs
aaa
test
mov
pop
pop
pop
lea
mov
mov
xchg
xchg
testb
js
cmp
fistpl
cs
jo
mov
imul
aad
mov
xchg
mov
and
mov
pop
movsl
out
data16
or
mov
mov
jp
push
mov
mov
dec
push
mov
jne
rolb
xchg
imul
cmp
push
faddp
pop
int
addl
lock
inc
fadds
jo
and
xchg
jecxz
ljmp
popa
imul
add
int3
push
xchg
iret
push
scas
cld
fstp
insb
pop
pop
xor
iret
adc
mov
ret
adc
out
dec
sbb
in
xor
mov
pop
dec
lods
rol
and
xchg
adc
ljmp
movsl
mov
sahf
imul
push
mov
std
imulb
push
mov
rorl
divb
sarb
daa
and
dec
mov
sbb
xchg
cmpl
out
es
mov
loope
out
sub
aad
xchg
fistpl
int3
mov
adc
addr16
lret
cmpsb
ficompl
rorl
xor
cmpsb
into
sbb
ds
push
divl
das
incb
jno
mov
pop
adc
imul
popl
push
pop
cmp
xlat
rclb
jae
add
jecxz
scas
loope
jnp
out
cmp
xor
mov
js
push
and
or
jae
repz
mov
fcompl
cmp
mov
lret
push
loope
push
mov
inc
ret
lret
sbb
xchg
rorb
lcall
repnz
sbb
pop
stos
lods
pushl
cwtl
hlt
test
rep
jbe
sahf
lea
rcr
jge
dec
mov
fs
sar
push
sti
push
sti
test
nop
xchg
arpl
in
lea
mov
outsb
inc
dec
test
sbb
subl
sahf
aam
movsl
scas
mov
or
jo
jge
enter
dec
mov
enter
das
mov
mov
mov
jmp
and
sbb
xor
cmp
pop
cltd
and
jecxz
icebp
sbb
dec
imul
add
cmp
aad
push
and
loop
cmp
mov
jb
push
mov
xor
mov
hlt
or
jg
stos
mov
fidivrl
cld
lds
fists
cmpsb
and
dec
lds
rcl
adc
xchg
gs
xchg
mov
mov
fdivl
inc
sbb
push
mov
and
jl
mov
xor
sbb
mov
mov
xor
push
mov
push
imul
insl
mov
je
inc
sbb
ljmp
inc
adc
xchg
cmp
loopne
ret
rclb
pop
outsb
pop
adc
xchg
push
roll
icebp
jl
push
sbb
inc
or
push
jp
and
lds
aas
out
jnp
hlt
push
inc
push
add
nop
pop
subb
bound
idiv
add
mov
mov
addr16
push
sti
ds
sysexit
cs
push
mov
push
pop
pop
ds
jne
mov
add
mov
xor
test
pop
arpl
mov
mov
dec
sbb
addb
xchg
inc
pop
xor
mov
fs
push
sbb
loop
std
std
cmp
out
jl
testb
int
andb
pop
cmpsb
mov
mov
loopne
rcrb
mov
imul
jg
xor
test
pop
jge
iret
imul
lock
inc
in
mov
ljmp
ret
fidivrl
mov
mov
out
aam
push
int3
jle
lods
push
cld
lods
sub
cmpb
adc
push
xchg
push
push
aam
or
cmp
sahf
jb
imul
test
mov
push
and
cmp
jl
divl
out
or
xlat
mov
test
cmp
pop
lcall
gs
push
out
and
cltd
popa
xchg
adc
insl
shlb
mov
lret
lods
rorb
jno
insl
inc
mov
rcrb
push
mov
ret
pop
je
das
iret
fadd
sub
pop
and
insl
outsl
in
inc
sub
loopne
mov
lahf
in
xchg
xchg
sub
out
cmp
xor
pushf
ljmp
mov
ret
stc
fisttpll
ja
pushf
xor
dec
inc
out
clc
mov
divl
jle
or
push
push
loopne
or
lcall
mov
sbb
cli
enter
mov
ds
lahf
cmpsb
mov
mov
cmpsl
sub
cmp
and
fists
cld
inc
roll
outsb
jp
push
mov
xchg
inc
sub
adc
lret
outsl
mov
mov
mov
in
mov
mov
insl
mov
xlat
xor
mov
or
test
je
inc
mov
xchg
jno
xor
lock
jo
cld
int3
imul
xchg
jno
pop
hlt
xchg
xchg
mov
fiadds
pop
pushf
push
sti
sub
mov
jp
push
ljmp
fistl
xchg
dec
nop
mov
bound
int
iret
jno
sahf
mov
js
adc
inc
aam
insl
sub
cmp
call
mov
jmp
mov
scas
pop
jo
lahf
std
nop
decb
pop
cmpsl
pusha
fbld
pop
out
cltd
xrelease
and
lahf
inc
aaa
cmp
adc
out
fucomi
sub
cmc
jno
mov
arpl
adc
and
xor
push
push
cmp
out
and
repz
xchg
sub
inc
cld
add
jno
sti
in
cltd
outsb
jp
sub
ror
into
sbb
int3
mull
mov
jmp
adcl
fidivl
inc
in
stos
shl
mov
jae
mov
adc
out
dec
adc
sbb
dec
dec
jp
sbb
popa
cmpsl
pop
mov
cmpl
add
hlt
or
fidivrl
shrb
js
scas
sahf
push
mov
js
fmul
add
test
ret
sti
clc
jne
out
inc
out
lcall
aam
mov
nop
adc
add
clc
pop
scas
jl
sbb
dec
scas
in
fsubrl
pop
adc
add
mov
jge
sbb
xchg
js
mov
jp
rcr
cwtl
and
mov
adc
ljmp
movsb
mov
idivl
shlb
pop
adcb
cwtl
push
ret
push
jmp
mov
mov
jno
das
jb
fwait
inc
insb
mov
pop
int3
cmp
jg
inc
mov
xchg
push
xor
rolb
gs
cltd
enter
out
aaa
push
loope
xchg
fdivr
mov
push
stos
and
sbbl
push
aad
fcmovnb
repnz
mov
hlt
jmp
insb
mov
or
mov
cmc
out
stos
and
jle
loop
das
or
pop
cmp
or
fnsave
jg
lock
inc
test
push
dec
adc
fldl
and
cmc
nop
fsubr
jg
aad
sbb
addr16
les
loopne
xor
dec
imul
aam
mov
cmp
and
xchg
mov
lahf
addb
ret
popa
cmp
into
outsb
adc
or
in
dec
jl
nop
bnd
mov
ds
popf
jns
inc
rcl
bound
shll
sub
ret
dec
cld
xor
push
push
sbb
inc
lahf
int3
jno
daa
cmp
std
push
fs
je
pop
cmp
mov
icebp
pop
notl
xor
insb
pusha
mov
sub
out
cmp
jmp
dec
outsl
xor
fldcw
pop
gs
adc
lods
jns
adc
addb
aas
rol
subl
clc
jns
into
aam
jbe
pop
mov
icebp
ljmp
xchg
mov
xor
sub
cmpsl
aad
xchg
iret
jle
rcr
test
iret
or
lods
pop
stos
cmp
faddl
jg
jns
lods
mov
mov
sub
jns
sbb
push
xchg
outsl
sbb
xchg
adc
movl
jl
in
sbb
jnp
cmp
movsb
sbb
std
pop
xchg
dec
pop
fsubrl
test
sti
adc
push
fnstsw
in
inc
movsl
or
fists
dec
aas
js
fists
adcb
int
addr16
jbe
insb
idivl
pop
iret
fwait
js
mov
imul
sbb
xchg
mov
adc
pop
arpl
imul
add
xchg
dec
stc
aad
sbb
inc
bound
adc
xlat
jle
aaa
ja
daa
stc
inc
jae
fistpl
jg
cmp
push
inc
inc
adc
adc
ja
or
cmp
fcom
mov
mov
or
movsl
int3
pushf
jno
out
ds
push
out
sbb
fs
mov
pop
insl
adc
inc
or
push
mov
lea
lock
aas
sub
outsb
out
lds
pop
jg
xchg
sbb
incb
mov
adc
sub
push
pop
add
pop
or
jno
mov
sub
or
xor
outsl
mov
fidivrs
pop
lds
outsb
xchg
imull
inc
fwait
negl
lea
or
outsl
push
leave
xor
xor
xor
push
fxam
iret
in
call
add
jbe
add
jle
out
daa
lret
push
popf
hlt
subb
pushf
inc
out
jmp
rorb
dec
lret
outsl
js
add
mov
aad
mov
sub
and
xchg
sub
mov
dec
test
jl
ret
test
mov
je
jmp
jae
dec
cmpsl
in
inc
jecxz
adc
jg
jmp
xchg
fstpt
scas
mov
aad
mov
repz
push
xchg
xor
push
stos
mov
lods
jle
sub
xorl
mov
mov
xchg
sub
sahf
xor
and
in
dec
gs
jb
mov
repnz
fwait
and
inc
xor
ret
int
sub
inc
or
jns
and
and
aas
repnz
mov
shll
push
cli
daa
jae
cli
and
xlat
out
js
pop
mov
push
shll
cmp
jb
jmp
imul
pop
sbb
stos
loopne
jnp
movl
pop
adc
pusha
fidivl
mov
mov
sbb
ja
mov
inc
sub
mov
nop
adc
dec
jmp
jl
cmp
jae
cmp
pop
mov
cmpl
fdivr
into
push
push
in
fiadds
sbb
jnp
xor
shlb
jge
mov
pop
adc
and
and
stos
push
pop
cmp
aad
std
aam
pop
sbb
mov
inc
in
or
pmulhuw
xchg
out
sbb
jne
lret
hlt
lret
mov
jo
and
insl
pop
imul
rol
sbb
decl
sub
push
lea
data16
jnp
sub
xchg
sarb
mov
dec
loopne
cwtl
imul
or
imul
rcrb
smsw
aam
cli
lods
test
test
jns
pop
inc
pop
shrl
loope
loop
mov
mov
shrb
std
enter
fcom
daa
xchg
inc
mov
jb
and
dec
jecxz
les
jns
or
sub
xorl
add
xchg
xor
test
and
lret
cli
repz
dec
outsb
dec
pop
pop
pmulhuw
ljmp
mov
mov
sub
outsb
xchg
push
sub
dec
je
push
in
jmp
jle
movsl
shll
test
jns
jp
dec
divb
jecxz
ficomps
or
lahf
repnz
dec
test
jp
enter
dec
sbb
and
test
mov
xor
mov
lock
mov
dec
inc
push
in
dec
sbb
xchg
rcll
jle
mov
les
out
pop
sbb
out
or
pop
cmp
dec
std
mov
push
jne
inc
lret
push
pop
fsubrp
addl
dec
add
sbb
mov
out
int3
hlt
cmp
hlt
sub
cmpsb
insb
jb
or
sbb
pusha
ljmp
jge
mulb
std
popl
test
jo
les
xor
push
sub
jmp
in
and
addl
lahf
jp
jp
roll
xor
in
jo
jp
ljmp
in
ja
jecxz
mov
sbb
push
xchg
shl
dec
sbb
pop
cmpb
jo
pop
rolb
or
out
clc
addr16
push
mov
jnp
mov
sub
pop
shl
mov
adc
subl
dec
xchg
or
add
push
mov
insb
jae
movsb
dec
ret
in
push
inc
inc
add
into
sbb
rorb
and
inc
loop
sti
cmp
lcall
popf
arpl
ja
push
ss
sar
xchg
xchg
pop
push
mov
add
mov
add
mov
loop
xchg
or
imul
inc
sub
outsb
clc
pushf
mov
in
pop
mov
shll
mov
js
xor
add
jmp
sbb
xor
repnz
mov
fimuls
pop
sbb
push
or
jg
rcrb
sti
repnz
adcb
lods
xor
fsubrl
cmp
xchg
idivb
call
mov
xchg
out
cmp
les
subb
and
sub
out
xchg
je
adc
cmp
adc
out
into
ret
mov
sbb
mov
jb
sub
lods
mov
dec
mov
fucomip
sub
daa
outsl
ss
movsl
loopne
and
or
imul
je
popa
sub
les
adc
ja
cmp
jbe
xchg
xchg
add
insl
nop
aam
shl
fldt
push
popa
cli
mov
popa
sarb
lea
in
fisttpll
cmc
jmp
xchg
aaa
scas
call
addr16
inc
add
iret
loope
ret
xor
lahf
pop
pop
loope
movl
jo
stos
lret
mov
mov
jb
mov
mov
mov
lds
sub
adc
cmpsl
ss
mov
movsl
add
mov
roll
cwtl
ss
lcall
add
push
shlb
imul
lods
lret
das
mov
ret
rol
xchg
mov
push
aas
xchg
mov
sub
aas
jl
mov
xor
cmp
push
mov
and
insl
mov
jl
mov
pop
lods
inc
or
add
shrb
into
sub
xor
push
dec
int3
leave
mov
daa
adc
jno
imull
inc
push
icebp
inc
pop
xchg
scas
int3
sub
xchg
and
aam
pop
fwait
push
test
sub
mov
mov
lock
call
dec
inc
gs
adc
xchg
mov
mov
and
adc
shrb
das
push
pop
cmc
leave
rorl
and
out
cli
mov
mov
aad
mov
nop
pop
inc
fcomps
notl
dec
dec
adc
fs
sub
js
fidivl
and
jle
loopne
jne
jmp
in
cld
lods
mov
sbb
lret
and
sub
push
loop
lret
jno
nop
mov
jmp
movsl
fldt
mov
xchg
pop
push
inc
xchg
iret
add
and
out
push
in
imul
pop
and
and
jne
mov
andb
jle
cwtl
ss
in
sub
aas
mov
mov
adc
stc
lcall
jnp
loope
stos
pop
mov
inc
inc
faddl
push
lock
lret
insl
cld
push
fsubl
dec
pop
pop
pop
je
es
roll
xor
cmpsb
mov
lods
outsl
repnz
movsb
pop
nop
out
and
fidivl
shrl
mov
iret
call
lods
pop
sub
xor
iret
xor
neg
inc
sbb
add
adc
lahf
mov
lcall
sbb
push
jmp
int3
in
ficoms
imul
stos
jo
mov
lret
sbb
in
or
int3
push
inc
movsl
lcall
aas
aad
enter
xchg
jge
mov
test
push
lock
inc
sub
in
pop
lahf
movsl
push
jmp
sbb
xor
dec
fcmovbe
mov
dec
shrl
adc
cmp
in
ret
cmp
std
loopne
jmp
repz
pop
inc
sbb
mov
pop
inc
push
pop
icebp
rorb
leave
scas
xorl
imul
insl
add
mulb
into
xor
lcall
inc
and
jae
fmull
int3
sub
out
test
aam
or
mov
cltd
sbb
incb
stc
jg
lahf
push
jae
fistl
sub
inc
xchg
mov
scas
sahf
std
lods
addb
xorb
mov
push
pop
mov
aaa
movsl
mov
push
shrl
jmp
test
mov
icebp
ret
or
add
adc
inc
lods
mov
xlat
bound
aam
pop
popf
sub
cwtl
or
shll
inc
dec
mov
outsb
nop
out
jns
adc
enter
loop
fdivs
in
jmp
cmovne
sbb
inc
cmp
mov
add
cmp
push
test
in
or
cltd
mov
mov
xchg
int3
int3
gs
call
dec
in
add
fsts
fisttpl
mov
repnz
mov
sbb
js
mov
inc
sub
push
cld
pop
std
jp
lahf
test
dec
xor
sbbl
lret
mov
dec
xor
stc
les
movsb
fwait
call
xchg
mov
daa
hlt
ficoms
jl
out
jns
int3
xchg
xor
call
sbb
and
push
sbb
inc
inc
pop
movsb
pushf
fidivrs
jmp
dec
scas
call
mov
mov
cmpsb
js
sub
cmp
push
lret
out
les
int
xchg
sbb
xor
xchg
test
imul
decb
push
sbb
fwait
and
lods
add
lret
test
clc
popf
roll
out
adc
loopne
repnz
ljmp
push
rclb
cmc
lods
and
push
pop
adc
mov
push
loopne
push
jnp
mov
fmull
cmp
pop
bound
jb
push
les
insb
cwtl
pop
arpl
push
in
cs
xchg
sbb
add
aaa
xor
scas
cs
dec
pop
test
loope
ss
sub
dec
mov
movsl
add
mov
in
adc
xor
es
imul
mov
lds
fsubrs
jmp
push
mov
mov
rorb
rclb
xchg
pop
arpl
rorb
shr
add
loopne
cmp
and
pop
stos
sarl
adc
pop
add
fldl
mov
cmp
call
sbb
mov
scas
ret
loop
cmp
in
cmp
das
sbb
mov
adc
and
pop
pop
fwait
adc
or
and
stos
xchg
fstl
das
mov
dec
out
ret
aaa
movsb
ret
sbb
leave
mov
inc
rcpps
sbb
movsl
popa
ds
jo
push
mov
push
out
dec
jbe
in
push
mov
lds
cltd
mov
hlt
cmp
mull
movsb
jbe
mov
iret
sbb
pop
insl
loop
cmovs
insl
cmpsl
in
mov
sbb
adc
jg
pop
lcall
lcall
subl
push
jle
lret
aam
adc
sbb
addb
dec
imul
mov
inc
push
pop
std
xlat
ljmp
cmp
sub
and
mov
call
jbe
pop
xchg
orb
mov
repnz
ret
sbb
mov
cmp
jl
jl
insb
xchg
jno
cmp
aam
pop
sbb
push
in
cmc
cltd
je
xlat
inc
jmp
mov
mov
xor
jp
push
and
dec
xor
mov
jbe
pusha
shr
mov
aas
sub
cmp
sub
outsl
arpl
cmp
lods
lods
dec
dec
test
test
jno
inc
incl
rcrb
push
pop
cmp
dec
add
sub
dec
ret
ss
js
imul
notb
shll
jmp
mov
adc
push
xchg
rorl
roll
js
inc
xchg
cld
inc
std
std
in
mov
call
or
inc
xor
fs
mov
repnz
xchg
test
pop
arpl
mov
adc
lds
mov
inc
rcrl
cltd
xor
notl
mov
ja
pop
ror
push
frstor
mov
mov
cmc
xlat
add
inc
mov
stos
stc
notb
pop
lock
loop
iret
loope
xor
out
mov
idivl
xor
mov
inc
mov
mov
dec
lcall
jbe
sub
mov
imul
push
sbbl
jno
jno,pn
fsubr
xor
pop
inc
cmp
xor
pop
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
mov
jnp
pushf
jnp
std
jno
in
mov
adc
lea
cs
adc
stc
imul
mov
jnp
jmp
xor
clc
mov
shl
movsl
cli
and
jg
insb
add
jns
adc
fwait
mov
das
pop
push
outsl
cmp
jmp
out
mov
adc
out
jmp
icebp
xchg
push
movl
xor
xchg
das
xor
in
into
mov
popf
ficoml
add
hlt
scas
ret
push
adc
mov
mov
cmc
dec
aaa
popf
sbb
mov
add
adcb
xor
je
and
fs
addr16
shl
loopne
adc
mov
xchg
mov
ljmp
arpl
add
imul
fs
roll
sti
adc
mov
mov
mov
xchg
push
testl
cmp
out
in
add
js
pop
insl
jp
xchg
lret
lock
mov
or
repnz
inc
push
xor
pop
mov
fdivs
testb
mov
ret
shlb
mov
jb
xchg
aas
push
lahf
inc
icebp
add
or
loopne
push
mov
out
test
xchg
sbb
cwtl
std
cmc
xchg
ja
or
lods
push
test
fcoms
in
lahf
xlat
inc
mov
jmp
std
push
cs
fstpt
mov
push
dec
push
or
mov
mov
cmpsb
dec
fnstenv
push
xchg
sbb
insl
bound
xchg
adc
movsl
mov
mull
jbe
testb
sub
inc
jno
push
repz
int3
leave
das
push
test
and
and
out
push
icebp
pop
or
das
hlt
stos
sub
mov
addr16
imul
mov
mov
mov
jns
repnz
pop
stos
cwtl
sub
mov
dec
imul
fxch
movsb
sub
jne
lret
out
or
inc
jno
repz
adc
loope
inc
in
mov
ljmp
bound
daa
cltd
in
call
fidivrl
dec
frstor
pop
loope
push
bswap
outsb
xchg
mov
adc
and
lds
fbstp
sbb
adc
cli
fchs
aas
out
jnp
mov
cmpsl
in
xchg
push
test
aad
mov
ret
inc
hlt
mov
jbe
xchg
fucomip
ret
or
pushf
lock
lock
fnstcw
aaa
pop
inc
push
fwait
jecxz
xchg
jg
loopne
insb
adc
mov
mov
clc
movsb
fsubl
cmp
or
pop
xchg
sti
jns
jp
add
pop
inc
inc
xchg
outsl
adc
test
shrb
mov
dec
mov
push
cmc
mov
ja
xchg
push
pop
stc
mov
mov
or
ss
push
mov
test
inc
sbb
jae
adc
jb
adc
ljmp
sbb
test
fbld
xor
test
or
jmp
loop
in
or
mov
cmc
mov
mov
gs
loope
movsl
dec
out
mov
daa
sahf
adc
sub
mov
popa
push
sub
sub
shrl
inc
mov
cmc
aad
jb
cmpsb
arpl
fnstcw
in
sbb
lock
lods
shll
into
xor
sbb
xor
jne
sub
lea
xchg
mov
xor
push
push
inc
xchg
ffreep
lea
lcall
cli
lret
rolb
dec
jno
push
mov
dec
ficompl
lret
mulb
gs
loop
sbb
xor
cs
imul
fs
lods
pushf
push
jne
push
adc
outsb
testb
in
fwait
cli
inc
inc
adc
push
sbb
sti
xchg
cmp
ret
push
int
and
fcmovne
mov
pop
dec
pop
jne
addr16
mov
jne
repnz
cltd
or
adc
jbe
lods
inc
into
sbb
sbb
mov
mov
jno
lea
sbb
pusha
jecxz
pop
sti
ret
inc
pop
cmp
addb
xor
enter
cmp
cmpsl
in
jo
bnd
lret
add
xor
jge
imul
cmc
rcr
cs
mov
repz
bound
add
push
jge
pusha
and
pop
fwait
xchg
mov
dec
cli
inc
xchg
jl
popa
jmp
jb
inc
icebp
shrb
mov
into
inc
and
cmpsl
and
adc
jp
cmp
rclb
lods
jnp
dec
jnp
cmpsb
mov
lcall
inc
mov
shlb
andnps
xchg
lods
inc
mov
xchg
and
push
lods
sbb
data16
push
jmp
and
das
push
ss
mov
add
lret
rclb
or
into
mov
adc
icebp
aas
data16
cmpsl
repz
cmc
adc
gs
push
mov
shrl
cld
or
inc
pop
rcrl
cmp
push
pop
mov
adc
je
mov
mov
mov
pushf
xor
in
add
stc
sbb
mov
in
mov
push
call
dec
adc
push
jl
xor
mov
mul
shll
adc
xor
jb
push
test
pop
test
sub
pop
and
pop
dec
stos
push
aaa
inc
mov
enter
dec
loop
dec
imul
sbb
or
cltd
pop
jle
xor
fcomps
or
jle
sub
jo
scas
insl
push
aas
fidivrl
das
push
adc
lods
orl
loope
outsl
rolb
fisubs
add
dec
sbb
pop
fwait
xchg
repz
mov
pop
push
pop
sub
scas
lds
push
push
xor
jnp
cmc
test
sarl
ret
pop
mov
je
lret
mov
outsl
push
mov
sbb
pusha
in
cmp
sub
js
sbb
sbb
mov
xchg
cmp
popa
sub
mov
mov
cs
ss
jecxz
ds
push
addb
push
adc
xchg
mov
ds
mov
cltd
lods
jle
xchg
inc
stc
push
or
xor
jle
add
mov
outsb
and
inc
cmp
and
xor
addr16
mov
sub
les
ljmp
stos
call
inc
andl
ds
add
xchg
jno
adc
adc
and
fs
dec
jnp
mov
cmpsb
add
loope
test
stos
add
mov
lret
iret
orl
sub
out
push
jecxz
aaa
rorl
xchg
mov
fmull
pusha
addl
pop
or
int3
sbb
nop
icebp
push
ja
out
dec
pop
jo
or
dec
mov
fwait
test
stc
jne
popa
test
pop
add
push
je
xor
mov
lea
loopne
enter
pop
or
aaa
or
lret
add
arpl
xlat
adc
add
sub
xor
push
mov
ret
and
aam
mov
mov
stos
push
sub
movsb
pop
mov
idivl
lret
mov
jle
jae
movsl
jb,pt
fisttpl
pop
cli
sub
pop
flds
fisttps
fsubl
fstps
xchg
cmp
jbe
rcr
jnp
jae
dec
pavgb
or
xor
xor
out
es
mov
mov
and
jp
test
cmp
scas
rcll
test
inc
mov
inc
xor
xchg
mov
jge
jp
sub
test
cltd
sbb
stc
in
push
cli
dec
movsb
adc
or
add
or
hlt
jl
inc
js
inc
sahf
push
sbb
push
or
call
cmpsb
xor
mov
push
repz
push
push
jns
jmp
icebp
xchg
divb
roll
fcomps
mov
jnp
dec
das
sub
jnp
xor
lahf
filds
mov
xor
punpckhbw
mov
fimull
clc
push
ret
mov
mov
cmp
aaa
xchg
xor
push
ficomps
call
sti
pop
int
divl
pop
and
mov
push
repnz
orl
pop
out
lcall
test
icebp
inc
push
sub
add
adc
jle
adcl
imul
cmp
ret
or
out
mov
imul
xchg
mov
push
sbb
sub
add
xchg
fisubrs
sbb
and
or
push
out
imul
imul
xchg
repz
das
orl
es
clc
negb
lcall
add
mov
dec
inc
enter
addl
dec
pop
sbb
mov
dec
arpl
cmp
jg
cltd
ret
and
push
add
fiaddl
das
mov
xchg
jno
add
add
aaa
cwtl
por
adc
out
jecxz
gs
xor
clc
xchg
loop
sub
dec
fdivrs
push
inc
enter
push
mov
test
inc
shrl
cli
jg
add
sbb
cmpb
ret
stos
push
push
out
or
mov
and
inc
mov
lock
loop
cmpl
out
iret
push
sbb
push
pop
xchg
inc
cld
movsl
mov
pop
cmp
push
jge
xor
add
sahf
lea
or
jmp
dec
out
mov
sbb
iret
andl
mov
adc
cmp
lcall
leave
adc
fwait
stos
and
adc
push
dec
xchg
test
cwtl
push
cmp
iret
push
xchg
inc
insb
mov
ds
lahf
push
dec
dec
and
mov
mov
mov
test
in
pop
pop
ret
push
in
pop
hlt
movsl
xchg
sub
nop
movsb
lock
adc
mov
leave
sbb
fwait
sbb
call
cmpsb
mov
or
mov
cmp
mov
movsb
push
loopne
out
jl
mov
ret
dec
in
div
mov
jp
ret
movsl
pop
jge
mov
add
xchg
js
or
in
jne
ret
xchg
repnz
sub
push
stc
cmp
sbb
hlt
jg
jmp
xlat
and
shll
stc
scas
loope
cmpsb
pop
faddl
je
push
sahf
xor
cltd
pop
out
insl
in
mov
leave
push
cld
js
out
cmpsl
stos
les
push
xchg
jg
adc
jmp
xchg
cli
or
sub
cld
aad
xchg
mov
test
mov
pop
lods
leave
and
cmpsb
jae
test
lock
sbb
xchg
arpl
filds
dec
test
xor
mov
and
sub
fdivl
push
rclb
cmp
inc
xchg
popa
loop
xor
push
mov
xchg
frstor
or
fidivrl
mov
leave
dec
push
jno
inc
mov
xor
shll
iret
rorl
fwait
push
fsub
xchg
adcl
scas
rclb
ja
sub
sub
rolb
and
daa
mov
cmpsb
fstpl
pusha
add
fiaddl
stos
flds
fstpl
or
shl
add
mov
mov
mov
pop
cmp
fisttps
sahf
movsb
int3
cs
push
jbe
std
pop
int3
cmp
pop
add
mov
dec
xchg
cmp
gs
fisubs
ret
push
mov
enter
mov
int
cmp
ret
lods
push
hlt
ljmp
xchg
incb
nop
cs
mov
mov
test
xchg
xchg
shll
cmp
pusha
cmp
push
pop
into
lods
imul
gs
xor
std
push
xchg
push
sahf
les
std
xor
mov
mov
mov
cmpsl
mov
sbb
aam
stos
jo
xchg
cs
push
test
scas
mov
pop
stos
sub
cmp
lods
sbb
jo
movl
movsl
push
lret
or
loope
ds
outsb
ljmp
fucom
outsb
ret
adc
pop
push
outsb
or
adc
aaa
and
push
repz
sbb
jp
unpckhps
stos
arpl
std
jnp
daa
push
mov
loop
jbe
rcrl
xor
jg
aaa
cmp
push
adc
daa
in
mov
out
mov
lahf
push
daa
mov
scas
fcomi
aas
push
out
add
loopne
mov
and
out
jns
and
xchg
aad
cltd
xorl
dec
push
gs
pushf
push
das
rol
inc
je
adc
push
mov
fxch
mov
push
movsl
insb
nop
mov
adc
fst
xor
movsb
sub
insl
sbb
add
push
cmpl
jb
fisubs
push
repnz
mov
test
cmc
aam
and
cltd
imul
lcall
test
inc
mov
and
cld
cltd
xor
adc
icebp
adc
cltd
cwtl
push
xchg
xchg
sti
jnp
inc
lret
push
xor
inc
filds
test
out
mov
pop
dec
leave
rorl
adc
cmp
mov
sbb
sub
jno
fldl
xchg
lret
popa
sub
add
into
push
mov
enter
or
push
cmp
inc
xchg
pusha
jmp
sti
push
mov
xor
and
inc
testl
adc
cwtl
push
jmp
jl
sti
mov
aad
stos
loopne
lret
cmp
inc
fdivrs
pusha
xlat
push
addb
js
sbb
push
inc
cs
mov
sarl
fwait
es
mov
jge
push
out
mov
outsb
mov
nop
clc
add
leave
jb
jmp
andl
imul
sbb
je
cmp
mov
xlat
in
leave
ljmp
add
fiadds
mov
adc
dec
daa
and
pusha
mov
test
xchg
repz
jne
cmp
ss
cmp
and
mov
std
pop
push
lock
repz
arpl
cwtl
aas
jp
push
xlat
stc
imul
push
and
lahf
mov
dec
jno
rcll
out
add
adc
push
jg
mov
das
cmpsb
ss
cmp
adc
dec
rorb
mov
out
movsb
rol
lret
jmp
fistpl
mov
int
out
and
int
rclb
enter
jbe
add
or
loopne
sbb
pop
adc
data16
cmp
push
lds
mov
hlt
test
daa
in
and
mov
push
sub
and
xchg
jecxz
jecxz
loope
push
lahf
out
mov
sbb
sub
mov
inc
jecxz
xchg
mov
xchg
jno
cmc
mov
sbb
scas
rcrl
mov
xchg
sub
mov
lahf
jb
lods
arpl
aam
test
inc
es
mov
adc
lds
repz
sub
dec
jecxz,pn
jle
xor
mov
hlt
mov
fdiv
adc
sbb
cltd
mov
mov
pop
repz
cs
cli
dec
fs
fs
je
hlt
or
jl
jecxz
fstpt
movsb
ficomps
cld
jmp
shr
mov
sti
push
out
cmpsl
and
divb
lods
flds
xchg
jl
xchg
int3
stos
xor
or
push
add
rol
inc
and
jbe
add
xchg
push
les
out
add
lock
mov
loope
cmp
fwait
push
or
jecxz
mov
ret
mov
and
outsl
xor
pop
repnz
jns
movl
mov
adc
in
mov
pop
xor
in
cld
adc
outsb
lret
or
fwait
xchg
dec
or
out
int
lds
lods
cmpsb
pop
rcrb
cmpl
sbb
mov
xor
add
shl
jb
pop
getsec
inc
xor
sbb
test
dec
cmpsb
push
cltd
jge
in
imul
movsl
mov
inc
cld
and
aad
pop
sub
dec
pop
xchg
out
inc
xrelease
out
test
push
cmp
jl
xorl
lea
shlb
cmpb
mov
add
mov
cwtl
mov
lret
leave
mov
pop
repnz
push
mov
hlt
imul
ror
arpl
into
sbb
jnp
mov
cmpsl
pop
hlt
xchg
lods
pop
xchg
das
xor
sub
aam
orl
inc
push
subl
mov
into
inc
adc
pop
ret
mov
or
push
mov
or
or
mov
mov
scas
jecxz
out
or
adc
pusha
in
mov
pop
or
rolb
jne
or
repnz
pushf
in
add
js
or
or
xor
repnz
mov
pop
push
addr16
sbb
xor
xor
ret
dec
pop
pop
test
add
jns
mov
push
mov
les
aam
mov
js
inc
out
pop
pop
and
bound
dec
mov
jge
adc
and
ja
or
dec
sti
gs
inc
adc
outsb
pop
les
int3
jp
inc
es
pop
push
inc
mov
mov
std
push
dec
pop
mov
lret
fdivr
push
sub
xor
es
pop
and
loopne
test
cld
sbb
rolb
gs
ljmp
xor
add
sub
mov
cmp
lea
adc
pop
add
or
inc
popf
jecxz
stos
clc
shrl
jp
mov
mov
in
add
push
cmpsb
xchg
xor
and
lret
popf
jne
movsl
push
cmp
mov
ljmp
mov
xor
dec
and
sub
mov
jae
roll
jb
push
repnz
outsb
and
les
int
mov
lock
pop
add
ja
iret
cmpsl
out
outsl
pop
mov
pop
xchg
outsl
push
mov
mov
adc
ror
and
mov
adc
sbb
push
pop
testb
daa
call
sub
roll
into
cmp
std
rorl
sti
cmp
aad
int3
pop
push
adc
subl
mov
jbe
dec
movsb
mov
inc
leave
cmp
test
and
aas
xor
xchg
add
aam
sub
inc
jmp
ficomps
lock
dec
mov
stc
jle
add
inc
jnp
adc
cmp
push
insb
imul
stos
add
lret
add
and
movsl
adc
ret
scas
clc
mov
push
ret
inc
sub
pusha
sar
aad
lods
std
mov
pushf
or
jg
xor
push
xor
pusha
push
adc
add
clc
decl
add
ret
or
mov
repz
adc
sti
sbb
frstor
jge
adc
xchg
xlat
je
mov
inc
cwtl
dec
jle
std
push
fistps
push
push
sbb
jno
outsl
sbb
iret
cltd
movsl
fdivrl
pop
dec
xchg
sbb
or
arpl
lret
mov
inc
pop
fistpll
inc
ss
jmp
shr
xor
xor
inc
push
addb
push
jbe
leave
je
mov
push
add
cld
mov
xchg
sbb
mov
mov
ljmp
mov
add
push
or
call
lea
push
and
or
jb
push
jo
js
xor
or
inc
push
pop
mov
out
xor
and
push
xchg
lods
pop
cmpsb
andb
iret
and
das
add
aam
sub
in
fists
rclb
mov
sbbl
pop
in
add
dec
dec
aaa
mov
mov
xchg
sbb
in
cmc
scas
in
std
pop
lahf
mov
mov
mov
js
mov
jno
insb
pop
rorb
fucomi
arpl
push
addb
sbb
sbb
jecxz
stc
push
jbe
xor
out
sub
movsl
mov
add
and
and
addl
jmp
test
xor
pop
mov
push
ds
and
sub
push
mov
push
mov
and
push
fmuls
pop
add
pop
stc
data16
filds
pop
sub
fwait
sahf
xlat
inc
mov
fwait
and
dec
outsl
push
ja
xor
pop
decl
cltd
jmp
adc
pushf
jne
imul
xor
cmp
push
pop
jl
scas
adc
xor
ret
pop
in
pop
shrb
fisubrs
movsl
push
sbb
and
out
xor
mov
sahf
mov
sbbl
bound
mov
xchg
outsl
push
jp
add
mov
popa
jle
or
mov
movsb
mov
test
stos
inc
cli
cmpsb
jns
lret
adc
add
mov
fstps
mov
add
mov
outsb
mov
or
xor
inc
jns
sub
add
test
bound
lahf
sub
pop
js
xchg
aaa
sub
mov
cmc
outsl
xchg
popf
lods
xchg
pop
xchg
pop
hlt
mov
cli
jo
xchg
and
scas
xchg
scas
mov
cmp
mov
fildl
mov
fsubr
push
stc
adc
cld
adcb
loope
popf
rcl
rolb
fistps
cwtl
cmp
cmpb
push
movsb
hlt
mov
cmp
mov
and
orl
cwtl
arpl
gs
and
jl
aaa
stos
xor
dec
xchg
dec
cmp
cmp
outsb
pop
insb
push
loopne
ret
mov
cli
push
mov
pop
cwtl
xor
fisttpll
dec
xlat
jle
lods
aad
lret
push
aas
loop
ljmp
sbb
int
xor
push
bound
enter
add
or
test
sub
sbbb
sbb
icebp
inc
fmulp
push
jg
movsl
je
adc
lock
push
dec
and
aaa
std
adc
aas
xchg
cmp
lock
lahf
sbb
xchg
push
add
pop
testb
outsl
mov
mov
rorb
push
clc
movsb
sub
adc
popf
jmp
in
stos
repnz
pop
mov
lret
jp
ficomps
mov
mov
std
inc
ss
mull
out
fwait
shl
cmp
pop
movsl
inc
jns
incl
mov
test
sbb
cmp
out
div
mov
xchg
mov
mov
xchg
xor
ss
lock
jo
push
or
loopne
push
push
and
std
jecxz
push
nop
sub
adc
push
push
sub
jno
lea
mov
xchg
and
cmp
out
inc
cmp
sub
pusha
jp
jl
mov
xchg
ljmp
icebp
jmp
pop
or
ficomps
cmp
jno
fistpl
sub
fisubl
out
clc
in
xchg
cmp
cltd
push
test
mov
and
pop
mov
inc
in
jno
jnp
sbb
adc
je
lods
jae
stc
cmpl
dec
stc
inc
xchg
mov
dec
lea
push
add
addr16
js
pop
fistpll
or
ret
pusha
shrb
dec
cmpsb
mov
iret
pop
test
cli
sub
cld
mov
pop
outsl
lods
jns
pop
mov
jno
lods
cmp
pop
push
js
mov
cmpsb
inc
push
mov
dec
lds
xchg
divl
jl
shl
jbe
mov
cmpsl
enter
fsub
js
xchg
test
add
popf
subl
mov
scas
mov
gs
or
jbe
pop
jl
iret
lcall
lcall
lds
stos
or
shrl
dec
mov
sbb
dec
gs
std
das
cld
stos
lcall
add
xor
mov
push
stc
rcr
and
push
push
cltd
scas
insb
fsubs
nop
jge
andl
sbb
scas
in
sbbl
cmpsb
shll
inc
dec
push
xchg
pop
enter
pop
push
pop
and
aas
dec
gs
and
shrl
and
add
xchg
fcmovu
jp
mov
enter
out
repz
xor
faddp
pop
inc
les
scas
lea
ret
and
dec
ds
add
jae
ret
or
rcl
shl
pop
movsb
mov
gs
imulb
mov
sahf
sub
movsb
jnp
jp
sub
in
xor
jle
mov
xor
scas
sarl
cmpsb
xlat
xchg
ljmp
jnp
gs
in
cmpb
leave
aad
mov
inc
in
movsb
jmp
es
cwtl
rcll
push
int
sahf
or
pop
pop
lds
cmp
pushf
rclb
cmpb
movsb
cmp
or
aam
xchg
jle
es
insb
rol
out
mov
cmp
push
xor
mov
pop
xchg
cmp
adc
test
cs
int3
jae
in
pop
enter
lret
jnp
jecxz
outsb
mov
jae
pop
mov
aas
and
sbb
sub
test
into
jne
fcmovnu
mov
dec
nop
jg
push
push
lahf
in
sbb
mov
pop
mov
sbb
cwtl
or
jo
das
fldcw
pop
sub
ror
sub
or
mov
adcl
xchg
mov
lds
fidivrl
pop
fisubl
test
or
adc
dec
cmp
adc
mov
push
mov
dec
xlat
push
dec
jl
inc
mov
and
pop
xchg
mov
std
xchg
sarb
pop
jne
xlat
les
and
shll
mov
repnz
pusha
adc
sbb
adc
inc
xchg
adc
outsl
jecxz
pop
repnz
cmp
int3
out
lds
popa
fimuls
jbe
fcoms
xor
lods
scas
push
and
mov
pop
popa
insl
add
xchg
cmp
dec
jmp
inc
adc
sbb
loop
xchg
loop
xchg
xor
aaa
mov
sbb
fldcw
addb
mov
sbb
xchg
xor
adcb
lods
dec
mov
sub
out
xchg
fwait
inc
aaa
adcl
test
cmpsl
or
stos
pop
jge
xlat
add
cmp
or
ficompl
cmp
ss
mov
aad
cwtl
cmp
leave
sbb
ret
inc
lds
repz
aas
add
xchg
pop
jno
dec
or
sub
dec
loop
inc
movsl
scas
push
in
fisubrl
mov
mov
sar
lret
dec
rolb
cmp
lahf
pop
imul
cmp
xchg
mov
mov
bound
inc
movl
cmpsl
ret
pop
jae
test
cld
jno
daa
and
dec
push
jmp
xor
inc
lds
loop
dec
or
pop
es
clc
out
and
xchg
mov
rolb
push
imul
mov
loope
cmc
cmpsl
test
xchg
xor
loop
rolb
dec
mov
inc
cltd
dec
movsb
lock
aad
in
into
loop
xchg
int
insb
mov
xor
mov
jne
adc
xchg
in
leave
test
adc
ja
adc
adc
pmuludq
cmp
adc
xor
add
imul
xchg
stc
xor
fmul
repz
pop
sbb
leave
jmp
ficomps
mov
out
rorl
dec
xor
aad
xchg
push
pop
iret
aam
hlt
pushf
arpl
sbb
cmp
cmp
mov
insb
aad
mov
push
pop
mov
mov
mov
cmovae
pushf
sbb
adc
cwtl
out
loopne
lahf
inc
int3
test
xlat
cmp
xchg
dec
jns
jge
cltd
inc
mov
xchg
dec
inc
xchg
leave
push
mov
jnp
jno
inc
dec
and
loope
push
fs
call
adc
jge
scas
mov
jo
outsb
dec
decb
scas
sbb
adc
jmp
jnp
pushf
ja
leave
push
mov
or
sti
pushf
into
fnsave
clc
adc
and
imul
xchg
jle
mov
ret
ss
jge
mov
pop
sahf
mov
in
inc
repnz
sbb
sbb
fmulp
lret
mov
fiadds
xor
sbb
lods
and
insb
stc
repz
fisttps
pop
aam
inc
loopne
xchg
fstps
call
sub
dec
xor
arpl
xchg
cs
pushf
pop
shrl
ds
dec
out
icebp
jb
pop
mov
stc
cli
xor
mov
mov
scas
jns
outsl
pop
mov
addl
adc
xchg
inc
xchg
movsl
imul
jmp
lds
rcrl
bnd
push
ret
cld
hlt
lret
jb
mov
cwtl
imul
adc
mov
mov
push
ret
and
fbstp
loopne
ds
in
jnp
insb
adc
int3
xchg
call
cmp
loopne
jne
adc
es
cltd
sbb
repnz
add
in
mov
call
leave
inc
xor
pop
dec
sub
shrl
lea
xchg
inc
jbe
jmp
sub
xor
fwait
int3
mov
js
movsl
xor
xlat
jmp
pop
dec
dec
mov
sub
lods
mov
outsl
sub
jae
jae
pop
out
inc
sub
jge
xchg
lahf
scas
sti
dec
cs
mov
mov
fwait
sbbl
fidivrl
and
leave
outsb
pop
sar
lock
mov
jp
bound
mov
pop
fcomps
cmp
mov
pop
mov
add
hlt
sub
cmpsl
jecxz
sub
gs
xor
fwait
jmp
gs
cmc
fisubrs
lods
jge
outsl
mov
mov
mov
add
fstp
inc
dec
or
adc
jecxz
outsb
repnz
roll
adc
lods
aam
sub
scas
sub
jnp
test
dec
mov
sbb
faddl
test
cmp
repz
fs
mov
sub
shlb
mov
repnz
push
imul
or
hlt
add
push
pop
pop
mov
dec
xchg
xchg
fdivrs
xchg
ja
fdivp
sub
jg
call
mov
repz
cmp
out
cmp
add
or
ljmp
inc
cltd
repz
mov
add
sbb
jge
sbb
imul
data16
in
add
jnp
pop
xchg
int3
das
push
jne
mov
dec
arpl
aam
jae
out
lock
xor
mov
xchg
enter
push
in
xor
gs
mov
add
cmp
pop
xchg
out
lods
xor
jb
sub
sub
stos
xchg
sub
mov
in
outsl
shll
mov
roll
sarl
out
cmc
mov
shr
fwait
out
jnp
movsl
push
mov
push
leave
and
je
ds
stc
jns
add
mov
stc
mov
out
mov
add
cld
pop
jnp
sti
sbb
mov
ds
aam
mov
xchg
es
int3
push
mov
mov
lods
jle
jne
divb
jp
push
lock
jno
sub
dec
xlat
pop
lods
mov
mov
dec
xchg
movsb
dec
fcoms
cmp
xchg
fsubrs
sub
sub
aam
loopne
cwtl
movb
push
xchg
mov
lods
test
faddl
pop
add
fisttpll
in
dec
int
ds
push
xchg
and
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
mov
jnp
clc
pushf
jnp
pop
sub
arpl
inc
pusha
mov
push
or
inc
filds
aaa
adc
dec
rclb
xor
and
inc
test
aaa
roll
sahf
sub
ret
enter
out
mov
mov
jg
out
sahf
fistpl
in
stc
loop
cmp
imul
xchg
add
dec
cmp
jnp
add
inc
outsb
leave
cli
repz
insl
ficoms
lret
push
sarb
mov
lea
add
addl
popf
xor
xorl
dec
pop
and
dec
lahf
mov
cs
test
mov
movsl
lock
sbb
ljmp
jnp
in
in
mov
jg
dec
jne
mov
das
mov
std
inc
and
mov
inc
in
enter
sub
scas
xor
push
push
clc
dec
mov
sbbb
ljmp
sub
mov
aad
pusha
adc
add
cmpsb
stos
cltd
leave
mov
fsubp
or
pop
aam
xchg
test
cwtl
mov
popa
pop
int
int
adc
cmp
jle
adc
lahf
lret
into
xor
pop
or
out
cmp
sahf
inc
and
scas
adc
mulb
xchg
cli
testb
daa
jl
test
rolb
ljmp
push
jmp
sti
idivb
cmp
subb
sbb
test
jae
mov
in
or
pop
std
mov
inc
inc
dec
cmp
jp
lcall
test
mov
mov
xchg
cmp
jns
cmp
ja
hlt
imul
out
and
fbstp
gs
aam
fimull
mov
aas
sahf
jg
pop
rorl
jo
inc
push
xchg
mov
mov
or
movsb
sub
fidivl
out
adc
test
sbb
jecxz
mov
call
lret
lret
pop
aam
scas
leave
loopne
inc
mov
repz
rol
mov
jecxz
imul
lret
xchg
pop
test
and
in
inc
inc
rcpps
cwtl
mov
jne
sbb
add
hlt
jnp
push
outsl
push
gs
scas
stos
outsl
mov
lret
lcall
out
shll
mov
xchg
scas
xor
stc
addr16
lds
sbb
pop
add
jmp
inc
or
imul
add
xchg
sti
scas
inc
mov
push
mov
outsl
cmp
fimuls
aaa
nop
xchg
push
jp
pusha
sbbl
xchg
imul
mov
jbe
test
insb
inc
add
pop
aad
mov
inc
ret
enter
or
mov
pop
pop
add
or
cmp
jmp
adc
hlt
movb
adc
aaa
lcall
push
push
lcall
stc
fs
lea
jp
xor
jl
stc
push
call
inc
ficoml
daa
lret
mov
or
pusha
add
sbb
sbb
push
lock
insl
xchg
mov
cli
inc
pop
pop
sahf
mov
push
xor
test
aam
repz
pusha
dec
stos
pop
push
leave
pop
pop
inc
sub
js
push
inc
pop
pop
pop
sbb
mov
push
and
aam
addl
ret
mov
mov
cltd
jmp
aam
rcrl
add
mov
mov
mov
sbb
inc
cmpsb
or
movsb
js
sbb
fsts
jmp
cmp
mov
xchg
jecxz
into
aas
mov
mov
push
jns
sbb
add
xchg
mov
imull
rorb
shll
pop
js
call
mov
mov
popa
pop
inc
xchg
cmpb
fbld
xchg
movsb
rcr
mov
jno
pop
cmpsl
test
inc
mov
jg
add
fdivs
mov
dec
inc
filds
fisttpll
loop
test
pop
dec
push
mov
xlat
enter
aas
rcr
lods
ss
in
cltd
out
shll
ljmp
or
cmp
arpl
mov
xchg
mov
and
rcll
ss
addr16
jg
movl
test
dec
mov
test
xchg
fidivs
scas
cmp
aaa
sub
cmc
sbb
js
xchg
xor
incb
sbbb
lcall
int
outsb
imul
adc
inc
adc
push
sbb
divb
arpl
std
nop
add
arpl
inc
arpl
jnp
data16
pop
icebp
and
or
icebp
in
outsl
sub
xchg
jno
adc
pop
sbb
mov
sbb
pop
test
mov
push
ficoml
test
inc
dec
inc
adc
xor
push
loopne
pop
popa
int3
shll
popf
out
les
xchg
mov
insl
call
mov
in
and
pop
movsl
pop
cmp
xchg
adc
cs
cmp
inc
sub
repnz
testl
ret
mov
das
sti
cld
mov
fwait
or
jne
xchg
mov
bound
mov
cmpb
jbe
arpl
and
jb
jo
fstl
add
dec
dec
test
push
addr16
sub
fstps
iret
mov
fsubl
sahf
jnp
jbe
xor
cmp
movsl
fwait
repz
add
cmp
xor
andb
jecxz
jns
sub
mov
mov
add
cltd
pop
pop
xor
cwtl
sbb
lahf
xor
test
sbb
add
mov
fcoml
stos
ljmp
lret
scas
cmovge
inc
cmc
xor
jg
or
mov
xchg
xchg
mov
data16
stc
lret
fdivp
inc
sub
sub
pushf
jns
mov
xor
outsb
inc
inc
xchg
adc
mov
jb
jmp
push
daa
mov
cmp
pop
adc
pop
push
sub
mov
adc
pop
inc
je
clc
jle,pn
or
fcoms
mov
scas
jns
pushf
inc
jne
aas
nop
movb
pop
in
popa
jmp
mov
pop
imul
mov
fbld
sub
push
mov
xchg
popf
sbb
scas
pusha
leave
xor
ficompl
enter
fstps
popa
adc
inc
sub
adc
pop
inc
pop
and
mov
sub
loop,pt
test
data16
lds
orb
fmull
test
mov
dec
xorb
out
pop
xchg
test
shrb
push
mov
pop
inc
adcb
imul
in
movsl
rcrb
push
push
inc
sub
ljmp
jb
dec
pop
ret
pop
inc
dec
call
outsb
or
fdivrl
sub
sub
mov
xchg
roll
movsl
out
mov
pop
push
decl
loop
repz
popa
loope
and
jae
push
jne
mov
fmull
js
andl
sbb
sbb
and
cwtl
mov
and
mov
pop
test
loopne
ss
enter
add
sbb
sbb
in
data16
sub
sbb
scas
je
sbb
cli
fucomip
jp
loopne
push
xchg
or
adc
adc
push
xchg
mov
sub
xchg
xor
inc
aas
fstps
into
divb
inc
loope
or
mov
sbbb
scas
cmpsb
xor
popa
sbb
scas
push
cwtl
fsubrl
cmp
cld
cmpl
std
je
xor
mov
imulb
dec
ja
rolb
sarl
mov
sbb
in
xor
mov
jmp
call
das
pop
xlat
aam
int
sub
mov
hlt
and
repz
sbb
stos
mov
into
and
pop
jno
pop
cmp
sub
mov
inc
xor
mov
xlat
outsl
out
add
lcall
negb
jl
push
sbb
mov
stos
fidivs
ret
inc
cmp
fisttpll
nop
mov
dec
lock
sahf
dec
xchg
mov
rcrb
xchg
push
pop
bound
lret
lret
test
insb
push
and
aaa
sub
push
inc
mov
in
lods
dec
dec
cmp
xchg
jmp
pop
pop
xor
lds
sub
dec
push
inc
mov
sub
push
ja
jp
jmp
sub
pop
ljmp
sub
ret
and
mov
sti
cmp
bnd
add
mov
ds
xchg
in
scas
insl
ss
mov
and
adc
int
xchg
add
movsl
add
leave
jno
or
movl
cmp
mov
fprem
test
pop
rcll
lods
ljmp
sbb
or
stos
ds
jg
cmp
xor
sbb
nop
fisubl
sub
and
outsb
adc
insb
iret
jns
faddl
enter
test
cltd
lret
dec
push
fcomip
sub
push
iret
or
stos
je
outsl
lret
jl
dec
rclb
int
fstpt
daa
vpmacsdd
mov
scas
xlat
inc
adc
jmp
loopne
arpl
in
lods
push
pop
mov
jge
ret
je
ret
jnp
repz
or
sbb
jmp
push
sub
mov
int3
lds
xchg
sbb
mov
cmp
scas
fisubl
push
add
std
or
in
push
inc
jae
push
in
pop
lahf
call
xor
bound
insb
cld
mov
sub
out
adc
mov
inc
test
mov
rorb
cld
scas
mov
outsb
mov
lds
and
in
sbb
lock
lret
adc
gs
jmp
cltd
fs
bnd
mov
jmp
push
lods
pop
cmp
mov
clc
lea
int
mov
jg
pop
xor
fucomip
mov
lds
sbb
cmpsl
jo
sub
test
sub
cmp
fbstp
or
mov
mov
int3
adc
out
xor
jecxz
insl
adcl
adc
or
es
add
loop
imul
fdiv
push
js
cli
out
imul
pop
jmp
fstpl
cmpsb
inc
jl
lods
mov
mov
bound
in
int
roll
scas
insl
mov
xlat
icebp
test
mov
xchg
push
sbb
cmc
out
lcall
lcall
xchg
orl
adc
jns
fisubrs
xchg
lds
xor
clc
pop
out
add
add
dec
xchg
scas
fnstsw
dec
adc
pop
lds
sbb
je
nop
aaa
test
mov
std
xchg
push
push
ret
mov
out
into
out
push
aam
aad
adc
cmp
mov
js
push
repz
lock
fisttps
jb
fdivl
mov
cs
adc
shrb
jge
fmuls
and
test
mov
fstps
mov
push
add
outsb
xchg
leave
sbb
jmp
sbb
xlat
mov
xor
or
push
lcall
pop
loop
gs
cmpb
sub
outsb
test
pop
gs
fildl
nop
in
lahf
lods
push
imul
xlat
pushf
or
outsl
mov
sub
sbb
nop
xor
inc
mov
jnp
cmp
frstpm(287
bnd
or
adc
psrlq
mov
mov
push
loope
xchg
arpl
popa
loopne
mov
hlt
je
jb
sbb
xor
sub
sarl
push
or
aas
or
and
jp
xchg
mov
cmpsl
adc
or
icebp
out
push
jno
jns
jp
cld
or
repnz
sbb
test
inc
cs
jne
out
cs
int3
test
lret
mov
rorl
add
and
test
or
lcall
int3
lods
add
loopne
cmp
add
jecxz
dec
popa
fs
scas
adc
mov
xor
sarb
imul
negl
jg
aad
inc
pop
mov
out
jbe
fcoml
lds
lcall
fwait
adc
popf
sub
cli
ficoml
add
sbb
dec
popf
and
into
inc
outsl
mov
mov
jb
lock
test
call
inc
jbe
cli
push
xchg
pop
out
scas
test
push
mov
repz
pusha
mov
mov
sub
jnp
popf
push
fidivs
sub
loopne
fstps
mov
shrb
add
jp
test
cmp
cmc
shll
and
or
push
movsb
jbe
mov
pop
pop
test
mov
inc
cltd
mov
dec
xlat
push
push
push
or
cmc
std
cmc
leave
shll
cmp
imul
cmove
test
push
dec
add
sbb
mov
dec
aad
cmp
por
aaa
push
bound
cmpl
outsb
icebp
adc
dec
jmp
fidivs
add
mov
movb
push
sub
sub
xchg
adc
gs
jecxz
xor
jnp
jns
rcr
push
and
mov
mov
mov
cmpsb
jo
pop
or
push
sub
push
and
cmp
cltd
loopne
prefetcht2
push
outsl
arpl
ja
cmpsb
les
mov
xchg
and
outsl
or
arpl
inc
leave
les
or
fwait
jecxz
dec
dec
or
fiadds
xlat
int3
inc
lods
hlt
sarb
jnp
aad
int3
pop
fldenv
cmp
aas
ficomps
js
stos
repz
adc
mov
xlat
cld
rcll
lcall
mov
mov
jge
fsubrl
inc
dec
jbe
les
push
adc
cmp
jns
push
dec
fildll
pop
sbb
arpl
xor
frstor
movsb
fidivl
mov
mov
imul
push
cs
cld
ficoms
sbb
das
aas
test
jmp
test
inc
jp
mov
rcrl
lret
mov
imul
ret
xchg
outsb
mov
and
and
or
add
push
enter
popf
das
jns
call
les
adc
mov
aad
fs
xor
add
inc
add
outsl
shr
adc
pop
add
mov
dec
sub
mov
mov
roll
and
xlat
jnp
sbb
out
cmpsl
mov
dec
test
mov
cs
dec
inc
xchg
cmp
inc
xchg
mov
mov
xchg
inc
dec
sbb
outsl
inc
call
jae
in
addl
mov
loope
and
mov
sti
pop
mov
fwait
jg
add
or
notl
push
and
cmp
pusha
sub
add
pusha
faddl
dec
mov
jl
scas
xlat
test
sarl
jae
pop
fistl
adc
mov
jmp
and
inc
jecxz
jae
fmul
ss
push
fsubrl
cld
mov
fsubs
push
cwtl
jo
daa
cld
aam
stc
aad
add
dec
fcmovbe
cmp
sbb
and
bound
push
js
rcrb
popf
pusha
test
cmpsl
test
lret
jb
adc
pop
mov
stos
shrl
sub
jecxz
cs
jno
adc
scas
dec
inc
and
test
pushf
sbb
je
pop
add
sti
or
jle
cmpsl
add
mov
fiadds
jbe
push
inc
pop
push
mov
sbb
nop
icebp
les
xlat
mov
scas
xor
push
sub
mov
push
xor
mov
popa
shrl
lods
inc
add
lahf
mov
out
sbb
dec
mov
push
push
jmp
ret
inc
xor
movl
add
gs
pop
rcrl
mov
loopne
or
adc
dec
lret
daa
jae
mov
int
xchg
mov
es
lahf
loopne
pop
bound
aam
pop
jns
and
out
xchg
push
push
jp
push
and
and
mov
out
movsl
out
pop
push
popa
push
and
or
das
push
stc
push
std
fwait
cmpsl
adc
jbe
jnp
xchg
inc
push
add
pusha
mov
enter
jmp
cmc
js
mov
adc
mov
mov
daa
es
shl
lret
lea
lods
xchg
adc
cmp
mov
and
negb
sahf
sti
mov
mov
enter
stc
push
sbb
dec
inc
xchg
rcrl
adc
movsl
imul
cmc
inc
push
lahf
xor
push
lods
pop
fs
inc
inc
lcall
add
inc
pop
adc
inc
jne
mov
iret
xor
cmpsb
lret
push
push
jnp
dec
and
es
sbb
dec
cmp
xchg
pop
jecxz
xor
movsb
addr16
daa
mov
sbb
gs
jb
and
cmp
out
xor
and
aad
aas
mov
addr16
cltd
ljmp
out
imul
test
push
xor
mov
push
out
cld
jle
cmp
lods
pop
adc
mov
std
or
je
fwait
scas
pop
mov
aam
xchg
sti
push
pop
test
push
cmp
shrl
pop
xlat
ja
pop
push
inc
push
xor
xchg
push
sbb
cmpsl
sub
jl
test
cld
aas
pop
js
test
sti
into
push
jno
movsl
data16
adc
stc
ret
dec
pusha
lds
pop
or
leave
aam
in
and
das
fldl
into
repnz
fsubs
jb
in
out
or
addr16
mov
and
mov
test
rorl
push
bound
or
push
fldl
popf
or
adc
mov
imul
xchg
mov
stos
xor
adc
fwait
or
xchg
sbbl
lods
imul
decl
ljmp
dec
xlat
cmc
in
inc
into
decb
dec
mov
lea
dec
pop
cmovne
test
inc
or
inc
xchg
xor
pop
mov
sbb
lea
into
stos
pop
push
mov
leave
or
and
mov
mov
mov
xor
movsb
in
clc
in
xchg
push
clc
jmp
add
in
ret
sbb
rolb
in
cmp
insl
push
mulb
push
cmp
xor
jbe
aas
inc
xchg
dec
in
stos
and
adc
and
aas
inc
repz
rcl
ret
cltd
test
sbb
fwait
jnp
xchg
sub
int3
xchg
or
jg
add
mov
xor
mov
stos
push
mov
stc
ficoml
push
or
fcomps
add
mov
int
adc
imul
insb
xchg
and
cmp
cmp
int
and
movsl
aam
mov
inc
mov
adc
loope,pt
push
daa
lret
enter
adc
stos
sbb
in
and
out
or
inc
js
jmp
push
testl
mov
outsb
addb
adc
xchg
lret
call
imulb
repnz
sbb
mov
push
sbb
push
jo
into
out
in
adc
xchg
sbb
out
sub
movsl
cmp
lret
pop
mov
mov
lea
arpl
lods
or
pop
scas
rorb
fidivrl
repz
test
xlat
dec
imull
scas
fs
mov
rorb
and
stc
dec
aam
pop
nop
lret
sub
jb
stos
clc
or
lods
ret
jge
leave
xlat
cmpsl
add
adc
stos
popa
sub
loop
loope
sub
mov
in
and
or
cmc
xlat
jg
xchg
xor
popa
xchg
stc
push
xchg
cmpsb
call
mov
fisubrl
jnp
mov
adc
xchg
mov
ljmp
or
mov
mov
push
lret
in
lds
mov
adc
sub
les
mov
mov
pop
lea
lods
lcall
pop
popa
mov
andb
movsl
movsb
js
cmp
push
mov
mov
jno
je
jne
fs
sub
mov
inc
dec
cmp
js
pusha
jp
pop
out
sbb
cmpb
jmp
xchg
mov
fistps
pop
jp
shl
pop
inc
mov
repz
rclb
mov
faddl
adc
xor
sahf
jns
ljmp
xchg
in
jmp
lea
stc
mov
dec
xchg
jns
adc
lds
xor
shll
mov
insl
sbbb
push
mov
das
mov
cld
data16
aad
or
fstpt
jne
and
and
icebp
fnstsw
pop
push
cmpb
pop
int
aad
je
xchg
mov
xchg
pop
xchg
or
mov
xor
lock
xchg
add
lock
imul
shlb
aas
rcrb
sbb
mov
dec
call
mov
push
dec
cs
xchg
mov
mov
fstl
cmc
push
in
add
aas
sub
add
repnz
outsl
sbb
pop
scas
or
cmpsb
cmpb
adc
mov
imul
xchg
pop
leave
add
jge
lock
jb
jl
out
aam
insb
mov
scas
sar
iret
or
rcll
push
jp
fnstcw
push
mov
jmp
ja
add
iret
sti
xchg
mov
xchg
adc
xchg
ljmp
cmp
jmp
mov
push
pushf
fsubr
cmp
and
outsb
mov
int
int
mov
sub
inc
fcoml
sub
aaa
xchg
repz
ljmp
or
leave
ja
jecxz
pop
icebp
in
movsb
lcall
stos
inc
or
jge
addr16
pop
in
xor
jp
pop
fldcw
in
loope
fwait
out
out
scas
mov
add
sub
mov
jecxz
sbb
cmp
sub
pusha
mov
sub
out
adc
and
and
mov
push
test
fisttps
out
xchg
inc
push
push
and
sarb
mov
out
aas
xor
cmp
iret
cmpsl
jg
rclb
mov
outsl
sub
nop
loop
adc
mov
jno
lds
jb
call
pop
jo
pop
out
jbe
shlb
lds
push
stos
lret
push
in
sbb
inc
adc
fcos
pop
push
mul
cmp
out
jp
sbb
insl
je
rcrb
jbe
popa
or
clc
cmp
iret
popa
xchg
and
inc
and
or
enter
pop
pop
cmpsb
mov
cmp
inc
je
cmp
add
ljmp
inc
xorl
jnp
push
popf
add
std
in
fdivrs
enter
add
pop
dec
jno
enter
aam
mov
push
aas
dec
outsl
mov
add
or
imul
subl
sub
xchg
mov
jbe
call
push
xchg
lock
call
xchg
cwtl
test
push
inc
js
dec
push
mov
sbb
lahf
xchg
pop
fnop
nop
pmullw
or
mov
jnp
dec
int
ror
sbb
inc
outsb
ret
fnstcw
mov
test
scas
stos
adc
xor
jae
cmp
mov
sub
daa
mov
je
sbb
fs
or
jg
xchg
lock
cld
mov
sub
subb
adc
insl
lcall
ss
jle
jecxz
sbb
xor
out
xor
iret
leave
dec
and
loopne
or
push
jbe
inc
arpl
gs
imul
jp
loope
add
sbb
shlb
das
mov
add
rcrb
adc
icebp
sbb
aaa
xchg
cmpsl
push
rclb
das
les
xorl
in
dec
mov
sbb
into
cmp
fmul
add
adc
jnp
dec
imul
movsl
sbb
mov
dec
clc
sub
out
jp
inc
imul
xor
sti
mov
aam
inc
cwtl
add
adc
mov
push
mov
sbb
sahf
test
mov
adc
cmp
jae
popl
add
sti
inc
jecxz
mov
push
cmp
icebp
sub
test
insb
in
and
xchg
sbb
push
pop
jmp
xor
test
xchg
lods
push
jl
cmc
pop
pop
dec
add
fiaddl
xor
aad
and
inc
out
sbbl
aaa
mov
xchg
xchg
xor
push
outsb
push
xor
pop
add
sub
inc
cmp
call
pop
sarb
insb
dec
test
push
int3
test
popa
xchg
movsl
imul
stos
int
add
clc
push
arpl
push
or
clc
cli
arpl
cmp
cwtl
cmp
enter
xor
cmpsb
adc
add
ss
dec
push
jns
lods
hlt
insl
mov
mov
ret
jo
and
push
sbbb
movsb
dec
in
push
mov
cmp
push
push
sbb
pop
push
in
ss
divb
fcoms
pop
mov
inc
xor
daa
out
mov
ficomps
xchg
and
adc
ss
mov
into
push
fs
out
add
push
mov
ss
xor
pop
and
pop
add
add
push
fs
mov
pop
add
add
xchg
jae
pop
imul
scas
in
pop
mov
add
out
out
push
movsb
leave
movl
sbb
jle
pop
aas
les
mov
mov
pop
ss
dec
mov
bound
pop
aaa
push
mov
rorb
push
push
cld
imul
ja
stc
xchg
or
lods
fldlg2
adc
mov
lcall
inc
mov
mov
dec
negb
push
jne
push
insl
mov
push
fdivl
imul
jnp
sub
pop
loope
cmpsl
push
fimuls
pop
mov
loop
lods
inc
mulps
scas
dec
push
xor
sahf
test
jae
mov
clc
jle
fucomi
jne
sub
xor
popa
into
out
aam
sbb
iret
mov
cmp
mov
or
lret
icebp
inc
sbb
shrl
cmp
int
int
ret
inc
in
shlb
xchg
jbe
sarl
and
insb
jmp
sti
cmovo
sub
adc
sbbl
gs
aad
test
dec
add
mov
fisttps
fadd
aad
mov
jnp
cwtl
stc
xor
cmp
adc
cmpb
sub
xlat
cli
fcomps
jp
inc
int
outsl
dec
ja
mov
cmp
aaa
arpl
push
daa
cmp
je
mov
cltd
lret
insb
dec
popa
lods
inc
ss
out
unpckhps
sbb
sti
mov
xlat
call
sbb
adc
pop
js
mov
dec
adc
mov
xchg
adc
add
xor
or
mov
mov
imul
or
in
pop
mov
cmpsl
push
lds
push
sahf
aaa
sbb
pop
shrb
xchg
cmp
xor
subl
push
sub
rcll
std
mov
jne
pop
cs
mov
add
add
js
das
pop
fdivrp
jnp
pop
addr16
cmp
mov
in
adc
push
mov
pop
push
adc
mov
fadds
push
out
sbb
mov
xchg
loope
sub
jae
push
and
push
mov
push
inc
loope
mov
jg
and
mov
and
fsubp
mov
add
mov
out
bound
pop
mov
test
pushl
mov
cmp
lods
mov
or
lods
or
icebp
push
mov
fsubr
addr16
sti
and
xor
mov
fsts
jno
mov
pop
xchg
add
cmpsl
pusha
hlt
jle
cmp
fwait
mov
xor
push
cmp
jne
xchg
push
xbegin
cli
add
icebp
pop
jle
dec
mov
fdivs
mov
outsb
aas
xor
mov
xlat
outsb
xor
push
cmp
add
dec
test
or
out
hlt
jl
mov
xor
cli
aam
xchg
xchg
add
mov
jne
xor
es
jmp
mov
adc
test
aaa
in
call
inc
lods
xlat
push
test
push
xor
pushf
in
sahf
push
pusha
mov
sahf
jge
xchg
stos
adcb
data16
mov
sub
cld
mov
mov
mov
xchg
in
mov
shlb
mov
jb
shl
mov
rcr
shlb
in
pop
xor
mov
scas
adc
or
insb
movsb
cmp
xlat
stos
enter
scas
and
mov
aad
sbb
pop
sub
das
jmp
test
clc
insl
repnz
sbb
mov
push
cmp
sub
dec
mov
imull
gs
add
mov
xor
adc
xchg
jmp
idivb
lcall
inc
inc
lret
xor
cmp
stc
or
cmp
repz
loop
sar
callw
add
rcl
mov
ja
mov
rcrl
mull
sti
dec
cwtl
inc
into
mov
jp
repnz
rcrb
mov
aad
arpl
lahf
lock
rcr
add
pusha
jecxz
cmp
ret
lock
mov
adc
sarb
cwtl
push
bound
mov
int
or
inc
pop
push
sub
xchg
icebp
aaa
mov
cmp
insb
pushf
xchg
sbb
ret
test
test
sbb
pop
adc
fldt
insl
imulb
fisubrl
outsl
xchg
or
addr16
lods
test
sti
or
mov
out
lds
addb
mov
daa
xlat
test
lock
fcmovnbe
dec
or
fldt
inc
or
and
mov
add
lds
sbb
mov
mov
mov
mov
push
imul
in
jmp
sub
jmp
aad
adc
inc
fwait
xor
fwait
popf
or
push
inc
shll
sbbb
aad
xchg
int3
daa
incb
je
mov
sbb
mov
jno
andl
stc
and
ljmp
es
stos
cmpsb
shrb
sar
adc
dec
pop
xchg
mov
sbb
repnz
mov
mov
addr16
into
jp
pop
orl
mov
lret
insb
push
or
out
clc
shlb
in
ds
pop
inc
cmpsl
cmp
add
shl
arpl
pushf
sti
pushf
lods
mov
and
or
mov
fdivrl
or
push
push
or
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
pop
sub
mov
cwtl
ljmp
jmp
cld
je
sar
push
jle
dec
insb
lahf
push
hlt
scas
pop
adc
lods
sar
push
jnp
test
dec
mov
push
dec
into
jp
jns
int3
test
adc
int
stos
pop
push
mov
outsb
je
dec
and
aam
or
xor
mov
pop
mov
sub
clc
hlt
fsubs
lods
cmp
inc
js
jb
popa
jmp
pop
jp
inc
les
xchg
sbb
test
int
mov
sub
nop
mov
nop
lds
xor
and
dec
dec
repz
cmp
jge
mov
xor
dec
pop
or
stc
add
into
adc
xor
sub
inc
add
jmp
cmp
cld
dec
cmpsb
dec
aad
outsl
pop
lret
mov
leave
sarb
lea
daa
clc
shl
inc
xchg
movsb
xchg
mov
in
out
std
arpl
push
jb
pop
sub
xchg
insb
inc
test
pop
sahf
je
pop
insl
mov
dec
mov
mov
mov
lods
dec
mov
dec
mov
xchg
gs
rol
insb
test
leave
stc
or
push
lcall
xor
sbb
add
adc
cmp
cmp
mov
mov
jnp
addr16
inc
leave
pop
subl
xor
add
or
and
fidivrs
leave
lds
dec
das
mov
lret
xor
dec
xlat
je
iret
xor
imul
cmp
mov
cmp
jmp
push
inc
nop
mov
lret
sbb
es
fistpl
popa
mov
push
push
lcall
hlt
sbbb
dec
lret
mov
or
push
lret
mov
push
jo
sbb
fidivs
das
jae
lock
outsb
out
movsb
int3
das
pop
leave
pop
dec
loope
div
lea
xchg
add
flds
jne
cmpsb
xchg
push
pop
rcr
sbb
xchg
add
inc
or
nop
mov
pop
jne
leave
dec
nop
ljmp
dec
rorb
mov
sub
xchg
dec
loope
mov
rclb
sub
push
loopne
or
shrl
shl
mov
dec
pop
jmp
sub
outsb
lcall
mov
mov
out
mov
mov
push
fcmovbe
adc
jne
in
aaa
pop
adc
sbb
xor
cmp
stos
aam
ret
push
sbb
pop
inc
ja
xor
fsub
nop
es
insl
and
lea
sub
adcb
aas
out
push
xor
ret
insb
sub
in
mov
cvtpi2ps
inc
bound
xor
push
adc
lahf
fisubrs
jg
aaa
jno
decb
lcall
jne
push
mov
lock
add
jns
sub
sub
pop
mov
mov
neg
das
xchg
push
stos
jns
push
mov
sbb
movsl
daa
jmp
vpslld
test
and
insl
stos
push
sti
mov
mov
mov
pusha
push
mov
sbb
fisttps
fldcw
dec
cmp
je
mov
scas
out
add
xadd
frstor
pusha
xchg
fs
adcl
pop
inc
nop
out
xorb
cmpsb
jae
out
cli
push
pushf
mov
test
dec
bound
lods
dec
bound
pop
xchg
add
push
jbe
call
sarb
add
fiadds
ficompl
mov
add
mov
fstpt
dec
cwtl
pusha
fwait
sbb
inc
repz
iret
push
add
pop
ljmp
stc
std
test
inc
sti
dec
aad
sahf
dec
lcall
das
mov
mov
cmp
repnz
in
lahf
rorb
popf
or
pop
int
dec
cmc
sub
loop
or
insb
cld
xor
repnz
int3
cmc
xchg
pop
mov
inc
aaa
xor
xchg
sub
xchg
dec
dec
aam
test
out
dec
cwtl
mov
mov
sbb
fdiv
or
mov
cs
sub
faddp
mov
aas
or
testl
xchg
sub
jmp
lods
jl
adc
or
push
aam
adc
fucom
and
lds
push
daa
or
push
push
enter
lea
jbe
sub
sub
xor
mov
call
or
jmp
das
push
sub
aad
xor
dec
dec
imul
xor
xchg
cmpl
insl
insl
pop
xchg
jne
jbe
stos
fnsave
sahf
jns
ret
adc
test
jns
test
scas
or
loope
fisubrl
stc
xor
fldenv
data16
cmc
call
in
mov
lahf
ret
add
sbb
pop
cmp
xchg
fucomip
xor
cld
scas
fsubs
sahf
div
lahf
sahf
adc
mov
push
stos
sbb
xchg
adc
add
dec
sbb
mov
add
je
insl
jno
sbb
xor
dec
imul
dec
lahf
xchg
xchg
sub
dec
pop
or
mov
and
mov
sbb
mov
adc
std
mov
negb
cld
push
dec
cld
pop
adc
push
cltd
pop
or
mov
xchg
cltd
and
push
push
adc
add
jmp
insb
xchg
mov
mov
lret
pop
faddl
shrl
jo
pop
dec
int3
inc
jge
push
pop
js
int
cmpsl
and
mov
lcall
imul
ret
add
push
add
lock
mov
insl
test
dec
mov
pop
jno
push
jns
or
mov
cmp
leave
mov
jmp
mov
mov
data16
sbb
push
jge
mov
dec
pop
inc
into
or
pop
or
fisubrs
jle
push
out
out
jns
sub
push
out
in
stos
xor
push
int3
lret
scas
loopne
in
push
imul
jge
jbe
dec
push
push
int
shlb
xchg
inc
and
clc
cmp
test
sbb
push
inc
nop
mov
and
or
test
in
xor
fistps
dec
xor
pushf
push
stc
ss
arpl
ret
andb
push
notb
cmp
lods
cmp
xchg
mulb
jp
push
adc
insb
popf
jno
fsubrl
push
adc
aaa
hlt
dec
lret
lds
mov
xor
mov
outsb
lahf
mov
das
mov
xchg
jnp
adc
lock
fsubrs
xchg
sahf
xchg
mov
fldcw
fisttpll
inc
out
and
adc
lods
xor
lea
jp
push
arpl
inc
sub
inc
push
ja
fdivs
xchg
cmp
cmp
xor
ljmp
mov
cmp
mov
or
pop
test
sbb
sub
mov
loope
sbb
xor
cmpsb
cld
shl
js
cmpsl
ret
pushf
out
add
cmp
jno
dec
je
pop
rcl
mov
shll
lods
subb
into
pop
sub
xorb
sub
xchg
pop
fwait
leave
add
movsb
loopne
fistpl
aas
ficompl
push
shll
adc
add
push
stc
mov
subl
add
jo
add
pop
leave
push
xor
gs
adc
leave
add
jl
xor
xor
sub
lcall
and
cmp
xor
xor
loop
ret
jecxz
imul
push
test
adc
clc
inc
cmpsl
fisubrl
testl
incb
adc
lret
sbb
add
adc
or
push
pop
mov
in
daa
fisttpl
test
mov
test
ret
inc
imul
dec
js
mov
sarl
inc
ret
fcomps
dec
sub
mov
out
hlt
dec
shrb
aad
sahf
adc
and
sahf
jg
je
pop
xor
xchg
aaa
adc
mov
loop
pop
pop
push
cld
in
lcall
pop
jg
add
in
stc
subl
add
dec
hlt
rcr
xchg
nop
movsb
mov
add
push
mov
lret
imul
data16
stos
mov
mov
lock
mov
jle
pop
mov
rclb
pop
call
jp
push
or
sbb
xchg
popf
pop
enter
dec
ds
stc
jb
xor
mov
out
xor
push
xor
jne
mov
mov
out
test
dec
test
cli
aaa
jmp
mov
jbe
pop
xor
push
lcall
les
out
mov
rorl
pop
push
push
stc
stos
jmp
insb
mov
push
enter
sbb
xor
add
add
adc
push
jmp
adc
loop
fstps
cmpsb
in
fcoml
lcall
xchg
jne
jmp
movsb
lret
mov
xchg
sub
rolb
stos
lods
cmpsb
fsubrl
cmc
sub
shrb
fnstcw
sub
imul
xor
idivl
inc
aaa
fistps
dec
cmp
mov
pop
bound
insb
cmp
loop
clc
std
ljmp
mov
ja
push
mov
jge
lret
cwtl
dec
sub
frstpm(287
inc
jo
cld
jmp
imul
mov
cld
push
pop
sub
jns
jo
pushl
int
rclb
popf
jnp
fwait
sti
repnz
adc
add
or
and
nop
lret
pop
test
mov
pop
aaa
mov
mov
pop
xchg
data16
out
fucom
sub
je
pop
push
lods
push
add
outsb
loop
cmpsl
pop
add
cmc
push
mov
loop
xlat
scas
inc
xor
sbb
cmp
pusha
jb
push
jbe
inc
pop
cmp
sub
cltd
imul
movsl
in
aam
add
inc
sti
sub
arpl
and
pop
je
sbb
xchg
jns
in
out
cmp
in
adc
push
dec
in
add
mov
sbb
imul
inc
jo
jb
pop
mov
je
sbb
mov
mov
add
out
mov
clc
push
cmp
add
leave
pop
addr16
pop
inc
test
pop
and
das
xchg
pop
sbb
addr16
adc
push
std
push
popa
inc
shl
or
mov
sbb
pop
xchg
xor
mov
inc
pop
jle
ror
xor
cwtl
jmp
pop
mov
inc
dec
xchg
sub
lods
lea
push
mov
xchg
adc
inc
jg
repz
sti
cmp
mov
inc
pop
out
push
ja
daa
cmp
test
int3
add
mov
adc
loopne
std
aad
ret
jne
out
push
rorb
push
notb
xlat
mov
rorl
pop
sbb
shll
sbb
fs
sub
aam
jne
hlt
inc
xor
push
dec
cli
test
xor
mov
packsswb
jmp
sub
addl
test
push
mov
pop
cmp
mov
pop
adc
pushf
js
xchg
mov
jae
xchg
add
sub
arpl
fyl2x
cltd
sub
mov
mov
stos
scas
push
xor
ja
jbe
lock
pop
ficoms
xchg
call
fs
cmc
mov
xchg
fs
cmp
dec
aam
in
pushf
and
adc
mov
mov
in
out
in
fucomp
jg
jecxz
xlat
push
mov
cmpsl
jp
adc
sahf
xchg
addr16
adc
arpl
push
addl
stc
std
xchg
arpl
pop
loop
xchg
shrb
loop
mov
aas
lcall
inc
sbb
dec
fsubr
mov
xchg
push
and
adcb
cmp
js
mov
lret
push
push
inc
test
cmp
pushf
shrb
lods
add
jmp
mov
sbb
fcomip
popa
jp
imul
or
xor
roll
sbb
sub
adc
cmpb
add
add
fstpt
sbb
mov
or
hlt
pop
in
xorb
and
and
inc
je
sbb
repnz
pop
mov
arpl
in
jne
jo
fcomps
outsb
adc
dec
int
fwait
xor
lds
stos
mov
out
xchg
inc
pushf
inc
hlt
xchg
sbb
jp
mov
jno
in
dec
xor
imul
push
fsub
jb
mov
loop
adc
xor
jno
lock
imul
rorb
popf
daa
sbb
cmpsl
sbbl
lea
and
insl
push
cmpsb
nop
dec
subl
xor
or
fsub
aam
lods
loop
in
cmc
iret
scas
jns
mov
int
pop
fimuls
adc
rclb
int3
hlt
push
clc
xor
cltd
out
movsl
decb
or
stos
xor
xchg
add
cmpsl
mov
in
push
xor
movsb
enter
jnp
imul
sub
out
bound
pop
or
adcl
pop
pop
les
mov
and
leave
sub
xor
push
enter
pop
inc
add
adc
nop
cmp
pop
adc
popa
mov
inc
mov
mov
jge
mov
es
bound
cltd
push
pop
sbb
cmc
scas
idivl
pop
sub
clc
sub
push
sub
dec
xor
inc
stos
les
mov
test
dec
insl
dec
jge
int
stos
iret
pop
loope
xchg
sbb
imul
xchg
out
cltd
jp
inc
push
dec
xchg
addl
int
mov
fnsave
lock
mov
das
sarb
call
es
setl
push
and
cltd
or
test
cltd
movsl
push
outsb
or
push
mov
mov
fmuls
in
jp
into
loop
push
push
lahf
inc
xor
lock
mov
add
pop
insb
outsl
push
xchg
test
daa
lret
xchg
dec
mov
loope
jns
mov
repz
ret
mov
cmp
jmp
jle
push
outsl
push
insb
cmp
ficomps
pop
jne
mov
movsl
addr16
test
sahf
cli
sahf
clc
jmp
jns
insb
xor
loope
dec
xchg
pushf
adc
scas
orl
pop
bound
inc
data16
fmulp
jge
fnsave
jle
dec
push
cmp
or
subl
push
cmp
fs
add
cmpsl
into
test
jl
loop
dec
sbb
adc
add
mov
sahf
cmp
xlat
sub
push
rorl
mov
sbb
stos
outsb
out
push
movsl
pop
cmp
ret
sbb
jb
and
rcrb
sbb
xor
loope
mov
and
and
adc
rclb
aaa
pop
int
xor
jp
out
cmp
mov
js
icebp
mov
in
xor
pushf
loope
fsubrl
aad
adc
jge
push
ja
cli
xchg
inc
dec
sub
jo
lods
sub
and
jae
scas
aad
mov
fists
xlat
sub
addb
into
xchg
adc
sarl
mov
jns
in
xor
xchg
cmp
xchg
or
je
in
mov
and
push
inc
gs
xor
push
jne
mov
mov
sub
repz
add
jg
and
adc
cltd
sbb
xor
imul
and
jmp
sub
lcall
rcll
lret
enter
call
or
enter
lahf
sbb
enter
mov
dec
xchg
int
inc
test
xchg
or
xchg
pushf
inc
push
daa
neg
mov
mov
ret
cwtl
add
dec
sub
mov
stos
mov
mov
inc
icebp
pusha
adc
lods
adc
jnp
cs
push
jmp
push
lea
ss
inc
decl
pop
aad
cltd
push
leave
out
xchg
jns
testl
ret
cmp
mov
rorl
out
fwait
pop
pop
outsl
cmpsl
cmp
data16
stos
lods
aam
lret
inc
dec
out
xchg
push
je
dec
inc
sahf
jle
stc
jae
lods
jg
popa
inc
push
pusha
cmp
add
or
stos
lret
fcomps
bound
cmp
ds
movsl
adc
sub
push
sub
adc
pop
mov
xor
cmp
imul
mov
dec
or
icebp
sbb
rolb
pop
js
fsubrs
push
cmc
add
cmp
out
hlt
mov
jp
mov
lods
cmp
rcl
sahf
orb
xor
adc
adc
and
jl
lcall
loop
loope
sahf
and
imul
inc
pop
test
ss
mov
push
fimull
std
ds
fisubrs
sub
pop
ret
mov
push
rorb
icebp
push
jecxz
stos
in
hlt
outsb
lret
icebp
ja
xor
and
roll
pushf
stos
jae
sbb
cmp
and
lods
daa
leave
movsl
mov
push
fidivrs
and
mov
cmpsl
hlt
mov
mov
cli
in
roll
xor
adc
test
popf
mov
sub
xor
cs
push
dec
jmp
cmpsb
and
fs
arpl
add
jmp
iret
pop
xlat
push
and
mov
jo
pop
mov
ret
test
leave
dec
repz
fdivrs
movsb
mov
sbb
xor
popa
clc
inc
js
ss
sbbb
cmpl
mov
sbb
mov
adc
dec
dec
mov
sarl
mov
aad
add
add
hlt
ljmp
lahf
jp
mov
mov
push
mov
xor
mov
pop
dec
jecxz
xchg
ret
adc
in
sbb
stc
push
sbb
cmp
pop
sub
daa
push
mov
in
cmpsl
mov
stc
scas
xchg
xor
cwtl
push
and
pop
inc
dec
add
lret
pop
inc
cmpsl
pop
jo
fs
push
in
popa
or
xlat
mov
enter
mov
ljmp
or
iret
out
hlt
xlat
cmp
testb
icebp
dec
jecxz
imul
fdivl
sbb
leave
jp
jmp
loopne
and
pushf
ret
int
or
jno
add
fadds
sub
in
and
mov
mov
bound
jmp
cwtl
in
loope
jb
lea
and
scas
or
dec
and
inc
push
imul
fisttpll
das
test
enter
sarb
dec
push
flds
pop
outsl
repnz
cmp
sbb
jle
mov
imulb
adc
in
add
inc
test
stos
sbb
or
push
pusha
dec
fidivrl
jns
lods
jno
mov
es
cmp
mov
cmpsb
pop
mov
sbb
push
xchg
mov
lahf
sub
add
jns
fs
std
adc
cmp
jno
push
das
inc
icebp
sbb
xchg
cmp
jnp
push
or
ja
repnz
sbb
mov
hlt
out
sub
idivl
fidivl
dec
add
mov
daa
ror
shll
push
sarl
adc
pop
jno
cmp
inc
pop
xchg
mov
inc
scas
fsubrs
sarl
test
ret
xor
ljmp
test
adc
or
sub
or
pop
pop
inc
sbb
add
mov
add
pop
inc
loopne
jae
icebp
and
enter
mov
pop
and
xor
xchg
cmp
xchg
movsl
push
mov
je
inc
out
cltd
and
jo
call
jle
dec
xchg
push
adc
xchg
jecxz
cmp
push
xchg
xchg
sub
cld
lds
arpl
dec
ljmp
aam
push
in
mov
andl
jne
cmc
dec
lock
inc
cmp
pop
push
sub
sbb
xchg
das
pop
shl
jns
lods
inc
call
sbb
pop
jb
loopne
mov
jle
pop
jne
xchg
das
add
sub
hlt
les
sbb
mov
popf
adc
adc
lds
cmp
xor
sbb
cmp
adc
mov
pop
xchg
inc
test
scas
pop
cld
xor
mov
test
xchg
popf
dec
or
mov
sbb
xchg
les
jno
inc
jg
or
out
scas
pop
mov
mov
aam
jl
in
loope
insb
hlt
in
xchg
jnp
cs
out
sarl
lcall
push
in
loop
add
rol
mov
mov
out
add
sarb
pop
lock
cs
add
adc
mov
or
iret
test
inc
aaa
shl
repz
rcr
lcall
out
rep
pop
or
ljmp
fwait
and
xchg
repz
add
lret
call
jo
mov
jge
hlt
fsts
xchg
cmpsl
scas
xchg
rcl
divb
idiv
push
fistpll
loop
cmp
ret
adc
mov
pop
mov
dec
mov
sub
nop
xor
lcall
sub
test
add
pop
daa
xor
cmp
add
ret
lret
ljmp
mov
sahf
mov
xlat
and
fwait
lods
lods
sahf
adc
mov
adc
push
inc
dec
icebp
leave
mov
movsb
int
and
aaa
sub
sbb
inc
dec
dec
aaa
sub
push
lea
mov
adcl
and
scas
cmp
ficomps
imul
daa
popa
mov
cmc
jne
cmc
or
pushf
mov
mov
mov
clc
cmpsb
push
jle
cli
mov
pop
stos
pop
stos
inc
fcmovne
mov
push
subb
insl
jnp
fs
cli
jno
shll
test
fwait
cli
adc
lds
cmpl
or
dec
int3
pop
and
add
pop
add
and
adc
adc
ss
sub
int3
aaa
nop
fdivrl
les
ss
mov
dec
lret
cmpsl
jne
pushf
aas
dec
into
not
lcall
nop
xorb
add
mov
sahf
add
xchg
test
mov
mov
xchg
jmp
add
test
sub
push
mov
jl
in
add
push
clc
push
loop
imul
cmp
or
push
fadds
out
xlat
adc
rcrl
and
push
push
test
sbb
insb
inc
inc
pop
sbb
xchg
xchg
cmp
xchg
add
mov
adc
inc
js,pt
mov
sbb
cli
roll
sahf
jle
jae
jo
jmp
inc
stos
jno
lcall
adc
and
adc
and
sbb
jbe
adc
je
inc
cmc
mov
daa
jmp
sbb
add
andb
into
aam
pop
dec
pop
sar
xchg
scas
inc
sub
rclb
sbb
or
testb
inc
dec
or
and
ljmp
test
xchg
pop
push
sub
out
xchg
lea
and
mov
in
fucom
iret
jle
mov
cmp
push
sub
imul
pop
or
lcall
and
enter
xchg
fldt
inc
adc
push
fidivl
out
lret
aam
mov
negb
adc
mov
fld
loopne
pop
dec
xor
je
out
in
push
mov
jb
fneni(8087
pop
jle
xchg
and
stc
into
mov
adc
xchg
mov
xchg
or
sub
inc
lods
ja
and
out
imulb
dec
xchg
mov
dec
mov
adc
mov
push
xor
xchg
cmpsb
je
mov
push
addr16
sub
jmp
stos
loopne
lods
push
or
inc
mov
int
dec
mov
sbb
jae
aas
and
int
mov
jle
sti
loope
nop
push
inc
push
cmp
inc
xor
shr
fldcw
movsb
aad
cli
gs
icebp
incb
xchg
push
jnp
add
ss
ret
js
xchg
and
push
and
xor
movsb
scas
scas
adc
sub
push
sub
pop
add
cmp
and
andl
push
xchg
xchg
cwtl
push
dec
jno
inc
cld
xor
rcll
call
lea
xchg
loopne
ret
daa
cmp
mov
add
xor
dec
fimuls
stos
sbb
add
inc
cwtl
aam
push
sti
or
dec
out
loopne
int
incl
clc
cmp
movsl
pop
add
xor
dec
aam
sbb
sbb
lret
mov
cwtl
daa
cmp
cmp
filds
ss
xchg
mov
jnp
data16
icebp
aam
and
mov
pushf
in
mov
lock
out
adc
icebp
fcmovu
xor
inc
add
movb
daa
adc
test
pop
shrl
push
rorl
test
loop
aaa
testl
mov
mov
jl
movsb
bound
int3
push
jns
hlt
mov
mov
stos
sub
xor
std
xchg
cmp
in
cmc
insb
mov
lahf
lret
pop
das
push
jne
pop
pop
stc
subl
dec
stc
pop
inc
shlb
pop
sbb
iret
lods
aas
push
in
add
jge
hlt
fisubrs
cmp
outsb
out
leave
jno
sub
mov
sbb
push
or
sbb
push
pop
sbb
ja
mov
inc
xchg
dec
mov
push
add
test
imul
pop
loope
fs
jae
sahf
mov
mov
cli
mov
mov
xchg
push
sub
and
cli
repz
andb
fimull
xor
add
push
or
cmp
fildl
mov
gs
ljmp
jae
sub
in
add
rolb
rorl
or
sub
stc
stos
lcall
pop
xchg
sub
adc
movsl
mov
repnz
jmp
lcall
pop
xor
std
pop
jp
push
in
mov
push
adc
mov
subl
add
adcl
cmp
icebp
jns
xchg
andb
lcall
aad
pop
pop
inc
nop
push
int3
cmpsb
push
mov
mov
xor
mov
inc
xor
shl
roll
testb
fsub
push
mov
or
and
xchg
or
out
addl
mov
jp
cltd
ret
xor
adc
add
data16
test
cmp
dec
pop
adc
xchg
iret
fistl
inc
or
push
lea
sbb
out
fdiv
ficomps
shr
lds
adc
fidivl
xchg
xchg
mov
pop
cmc
sub
pop
push
lds
sbb
adc
push
sub
sbb
dec
clc
stc
jno
mov
xor
pushf
subb
mov
outsb
and
xchg
jmp
mov
fucomp
dec
push
aas
cs
xlat
or
ds
sub
dec
cmp
mov
cmpsb
cmp
xchg
cli
loopne
jb
jno
push
pushf
nop
rorl
mov
rcl
dec
cmp
lds
leave
and
mov
xchg
cmpsb
cli
and
pop
fidivs
out
mov
dec
push
outsb
dec
lcall
mov
lea
inc
sub
addr16
push
sbb
shlb
std
xor
pop
mov
scas
out
inc
cmpsb
fldenv
lock
mov
and
or
add
xlat
xchg
lea
insb
push
int3
or
mov
lahf
inc
xchg
lret
repz
add
jg
lds
mov
imul
test
out
mov
jp
dec
or
repz
inc
std
push
cmp
pop
adc
push
sub
outsl
sbb
shrl
cmc
mov
nop
xorb
and
ficoms
test
lcall
pop
ljmp
movsb
add
push
jge
sarl
out
inc
sbb
cmp
xor
add
add
fcom
outsl
sbb
popa
hlt
inc
push
sbb
mov
mov
mov
mov
adc
cmc
sbb
push
push
and
or
add
push
or
xor
call
je
das
insl
cmpsb
jmp
jg
bound
in
cltd
test
popa
scas
daa
push
int3
in
inc
push
xor
adc
test
fdiv
shlb
mov
fadds
or
pushf
add
jno
cmpl
jg
add
ret
push
mov
cmp
mov
fs
stos
lret
pop
xor
jae
jge
movsl
xor
push
mov
loop
pop
add
jge
imul
in
inc
xorb
imul
or
jle
push
cmp
adc
out
std
lret
jo
mov
mov
inc
movsl
xchg
scas
mov
hlt
mov
sbbl
xlat
imul
and
cwtl
or
adc
cmp
adc
add
mov
mov
lods
repz
rorl
out
xor
andl
xor
mov
enter
add
sub
dec
xor
dec
mov
int3
and
arpl
andb
mov
sub
loope
mov
pop
mov
fildl
cli
insb
bound
or
stos
mov
subb
or
or
mov
fnstenv
xor
dec
cli
test
out
jle
mov
int3
or
sti
jns
cmp
xor
ss
les
jle
cmp
mov
push
xor
nop
call
cmp
jg
scas
adc
sbb
scas
lds
jae
fcmovne
lods
loopne
jle
and
cmp
gs
jne
adc
jbe
repnz
subl
xor
pop
or
cmp
cmpsb
jno
jge
xchg
sub
xor
or
mov
icebp
fcomip
mov
add
adc
out
iret
movsl
xchg
add
push
or
mov
jmp
adc
dec
je
imul
jne
xor
decl
mov
mov
loopne
and
mov
clc
mov
aaa
cmp
cmp
cmovne
mov
jb
das
loop
fadds
loop
xchg
jbe
pusha
in
out
sbb
add
jmp
cmp
inc
out
mov
add
ss
mov
jb
decb
xor
add
and
push
mov
mov
push
or
stos
mov
loopne
sbb
mov
inc
sahf
ret
mov
pop
dec
mov
test
ror
dec
das
adc
push
shlb
pop
out
push
xchg
addl
movsb
dec
inc
lock
push
daa
in
dec
adcb
ret
and
pop
imul
pop
in
push
movsb
dec
pop
mov
xchg
xchg
out
outsl
bound
pushf
pop
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
jne
sbb
jnp
pushf
jnp
sbb
ljmp
mov
fidivs
adc
pop
xchg
addb
add
inc
je
stos
and
ljmp
inc
iret
lea
sbb
int
pop
es
stc
jmp
in
jp
xchg
mov
adc
sahf
pushf
fdiv
or
and
std
jecxz
popa
inc
pop
push
mov
leave
push
outsb
adc
mov
cs
jnp
and
mov
icebp
in
setge
pusha
sbb
ret
push
fcmovu
out
pop
inc
jge
dec
pop
xchg
pusha
out
fdiv
push
cld
push
and
insl
iret
dec
xor
imul
js
ljmp
cmc
pop
cmp
data16
mov
lea
fidivrs
push
lahf
fwait
cli
xchg
insb
lea
test
adc
cmp
mov
call
pop
cs
inc
movsb
xchg
outsl
movl
test
stc
jp
rolb
push
sbb
mov
std
jg
aad
shll
mov
pop
and
dec
out
rorl
inc
js
mov
mov
std
sahf
jb
jns
scas
sar
shlb
fmul
jnp
cmc
aas
or
dec
rclb
mov
outsb
das
add
lret
jae
pop
arpl
imul
test
in
xchg
ret
ss
mov
shrb
mov
nop
loop
push
sub
pop
ja
xchg
loope
mov
dec
mov
or
ret
hlt
test
fs
cltd
mov
fidivs
test
popa
mov
xchg
hlt
dec
dec
mov
sub
mov
cmp
lret
lcall
ret
xchg
cmp
in
out
or
mov
pop
popa
pop
mov
sub
lock
pop
das
push
add
lcall
cmp
clc
pop
inc
push
adc
and
and
push
fnstcw
lahf
clc
stc
mov
out
jnp
std
push
pop
push
sarl
divl
scas
fsts
inc
test
pop
inc
or
sub
daa
sbb
mov
scas
dec
mov
push
call
leave
sbb
dec
or
insb
or
btcl
icebp
popa
mov
fadd
and
adc
dec
cmp
loopne
xor
pop
push
add
jno
je
lret
fldt
out
inc
pop
cmp
sbb
or
jo
dec
lahf
adc
daa
mov
mov
pop
stos
out
push
inc
cltd
sbb
cmpsl
adc
xchg
lds
pop
popa
call
cli
push
in
xor
xchg
or
xchg
dec
jno
adc
hlt
sbb
inc
cwtl
jbe
outsl
ret
xchg
cs
int
loop
loopne
hlt
sarl
push
pop
out
and
add
inc
aad
cmpsb
jge
outsl
push
repz
mov
mov
aam
je
mov
ja
add
mov
jb
push
hlt
cmpsb
or
cltd
cmp
ret
jne
je
xor
dec
fdivl
adcb
push
lcall
popf
xlat
push
xchg
in
inc
ficoml
adc
jo
ljmp
fwait
cli
inc
or
xchg
and
lock
and
mov
shrl
in
jecxz
lods
lcall
add
push
jbe
out
mov
int3
adc
out
mov
xorb
mov
fsin
imul
or
arpl
jae
pop
pushf
popa
jp
test
pop
sub
cmpsb
cs
and
inc
or
shl
add
push
or
jmp
shlb
sbb
test
rcrl
loopne
cmp
mulb
push
shrb
cmp
inc
mov
popf
adc
dec
nop
jbe
jns
push
or
adc
xchg
outsb
xor
cmp
ret
int
or
mov
xchg
imul
test
adc
ret
sub
outsb
mov
inc
gs
cmp
adc
sbb
xchg
adc
inc
xchg
in
ror
xor
mov
adc
pop
fdivrp
adc
push
pop
push
je
cmp
or
cmp
or
in
mov
inc
imul
xchg
aaa
call
sub
stc
fcoms
loope
and
fcmovnb
push
push
add
mov
dec
loope
add
dec
sarb
aas
lds
inc
insl
js
sub
dec
mov
shlb
lds
hlt
pop
jmp
push
mov
loope
imul
xlat
shll
leave
aas
or
xchg
mov
adc
xchg
lahf
outsb
imul
cld
sarl
adc
das
push
xchg
add
cmpsb
ret
mov
mov
repnz
das
sbb
inc
xchg
popa
dec
call
call
inc
test
and
push
sbbl
jmp
ljmp
add
xchg
mov
push
subl
xchg
pop
loop
adc
subb
mov
test
mov
pusha
das
xchg
jl
xor
insl
add
lcall
mov
or
or
cs
push
arpl
mov
fs
and
xchg
les
call
push
inc
das
pop
mov
sbb
and
or
shll
adc
push
jp
ljmp
jae
enter
std
add
rcll
mov
shll
jo
enter
jle
jae
adc
loop
pop
clc
mov
fsubs
jno
pop
outsb
outsb
jle
pop
xor
mov
push
lret
and
popa
les
add
push
cwtl
insl
cld
sahf
mov
hlt
sbb
lret
cmp
inc
inc
je
ljmp
push
push
sbb
pop
add
lods
movb
pcmpeqd
icebp
pop
mov
outsl
dec
adc
jae
dec
xchg
out
inc
push
sbb
pop
jb
inc
pushf
mov
mov
adc
cmpsl
test
xor
lret
xchg
les
dec
push
enter
mov
and
pop
pop
mov
mov
jae
xchg
test
outsb
add
sub
push
mov
xchg
ljmp
out
mov
pushl
bound
imul
in
mov
push
sub
gs
outsl
fldt
outsl
movsl
and
xor
xor
incb
movsl
mov
pusha
add
into
in
aas
cmc
add
sbb
movsl
inc
inc
inc
lods
popa
xor
lea
inc
ljmp
pop
jle
out
fprem
cmc
jmp
fimull
push
sarb
xchg
data16
rorl
lea
enter
loope
adc
and
mov
xchg
and
sub
filds
sub
or
xor
sbb
pop
int
stc
mov
jns
nop
mov
jp
dec
paddsb
xor
push
jg
dec
cld
adc
xchg
stos
lret
clc
daa
sbbb
sbb
fidivl
stc
jo
mov
push
and
push
mov
test
dec
xorl
dec
jae
gs
mov
pop
adc
jmp
sub
jp
fidivrl
rolb
fwait
std
out
das
or
outsb
rcll
stc
outsb
outsl
call
lock
adc
imul
fcmovnbe
lret
fstp
inc
test
fstl
call
enter
or
xchg
sub
shll
sti
xchg
leave
into
lods
xchg
ret
les
scas
ljmp
in
mov
ret
push
cmpsl
xchg
es
cmp
ret
dec
cli
in
pop
iret
mov
aas
lahf
jle
jnp
pushf
cmpsb
ja
scas
mov
xor
dec
xchg
je
loop
dec
inc
mov
mov
push
mov
inc
cld
js
ss
daa
es
movb
and
cmc
push
add
ds
test
inc
mov
fidivrs
and
ds
pop
sub
sub
pop
inc
addb
movsl
pop
lret
mov
icebp
mov
rcl
jmp
lcall
or
sarl
and
faddl
mov
cmpsb
xchg
push
add
les
sbb
sub
iret
lods
mov
dec
icebp
ret
cmpl
dec
lcall
mov
or
pusha
es
mov
dec
rorl
addb
daa
or
aas
cmp
mov
sub
iret
jno
or
arpl
into
fwait
ret
sub
stc
push
pop
push
and
popf
nop
iret
sbb
xchg
loope
xchg
push
into
mov
or
push
imul
insb
into
mov
in
jl
push
clts
cmp
fdivp
lock
sub
out
jle
and
xor
outsl
repz
mov
popf
cld
add
aaa
fs
sbb
sbb
lahf
aad
cld
xchg
dec
and
loopne
les
aaa
mov
fdivr
gs
mov
inc
pop
xchg
lods
pusha
xor
lods
mov
sarl
mov
in
es
loope
sbb
imul
negl
popf
leave
fiaddl
aaa
mov
mov
jecxz
popf
inc
int3
push
nop
add
notl
mov
and
or
cmp
jge
mov
adc
stc
mov
cmpsl
insl
nop
or
mov
push
rol
jg
sahf
adc
or
push
mov
xchg
mov
or
enter
add
adc
add
pop
jno
mov
inc
pop
andb
loop
sahf
mov
sub
push
aam
cld
mov
enter
pop
leave
pop
lret
add
xchg
and
cmc
lret
cmp
mov
pushf
daa
lds
orb
outsb
addr16
jns
cltd
xchg
inc
add
arpl
sub
in
push
add
in
gs
mov
dec
lods
adc
ficoml
and
xor
pop
mov
leave
das
xchg
into
mov
jo
jbe
test
clc
adc
sub
lret
pop
enter
sub
or
les
enter
out
add
mov
mov
mov
adc
lahf
jae
pop
push
lea
sub
test
into
stos
popa
pop
cmp
sbb
dec
sahf
xchg
cwtl
imul
sub
aam
jbe
std
mov
pop
push
lea
stos
gs
jo
sbb
mov
xor
lret
popf
cltd
jp
shrl
ss
cmpsb
inc
or
sti
fs
repz
in
cmp
jecxz
sub
cwtl
js
push
mov
rorb
cmp
cltd
or
mov
testb
or
xor
int
push
jmp
xchg
es
lahf
jle
dec
add
cltd
loop
adc
shlb
adc
popa
int
ja
dec
loopne
mov
xchg
movsb
inc
add
rcrl
sbb
sub
push
mov
mov
or
hlt
inc
out
dec
jns
das
cmp
js
and
fsts
and
adc
in
sub
not
in
je
in
pop
iret
pop
cmp
adc
jb
mov
pusha
add
ljmp
cmc
mov
dec
pushf
push
cmc
mov
pop
insl
cltd
ja
push
sub
aam
mov
adc
sub
dec
pop
sub
xor
add
andl
sbb
mov
ficoml
add
jle
sub
or
pop
push
adc
jnp
adc
loopne
hlt
mov
icebp
jnp
std
hlt
push
mov
cmp
cmp
into
aad
mov
adc
or
ret
enter
dec
push
test
imul
mov
lret
imul
jbe
shrb
or
test
mov
add
cmp
adc
lcall
adc
mov
outsb
cmp
ret
add
out
in
icebp
ret
add
fisttpll
xchg
cmpsl
mov
movsb
mov
loope
mov
xor
lahf
cmp
stos
mov
or
cwtl
fldcw
int
inc
ficompl
fdivl
xchg
add
je
mov
xchg
inc
mov
movsl
xchg
mov
test
insl
fisubl
dec
imul
and
sbb
fnstcw
sbb
pop
jae
frstor
or
adc
dec
or
shrb
in
mov
jl
adc
mov
cmp
sub
dec
popa
mov
jbe
mov
sbb
sub
add
cmp
fadds
or
rol
inc
xor
gs
cli
jbe
int3
test
mov
or
xor
inc
loopne
loope
jl
mov
push
iret
add
out
sub
scas
shll
add
testb
jnp
cli
test
add
xor
xor
mov
or
push
mov
or
movsl
dec
fs
fcmovnu
mov
or
xchg
dec
int
adc
mov
jg
inc
ret
mov
pop
mov
mov
lods
shl
mov
into
sbb
mov
popf
sub
xor
xchg
les
push
hlt
icebp
imul
test
mov
push
push
push
mov
mov
nop
icebp
enter
cwtl
and
call
mov
sub
loope
das
dec
push
inc
roll
lock
mov
cmp
mov
or
scas
stos
pop
int3
leave
pop
push
js
nop
addr16
cmpsl
adc
lea
cwtl
fidivl
mov
inc
mov
cmpsl
dec
jecxz
das
andl
push
push
cmp
out
dec
sub
imul
and
aaa
sbb
loope
mov
cs
fcmovnb
and
push
add
xchg
push
dec
inc
aaa
add
dec
cmp
fadd
add
dec
sbb
mov
or
jbe
nop
mov
or
push
repnz
and
das
in
push
mov
jge
pop
or
dec
les
cmpsb
sbb
scas
ljmp
pop
pop
sbb
cmp
enter
hlt
or
or
adc
jecxz
adc
xor
cli
mov
add
nop
or
push
insb
inc
shrd
push
sub
in
adc
inc
or
xor
stc
insl
dec
fcom
imull
mov
mov
aaa
push
sbb
jp
dec
int
jge
subb
enter
jp
jns
inc
dec
pop
xor
sub
add
aas
add
decl
cmpsl
stos
mov
xchg
ret
jle
out
jle
xchg
lret
push
ret
xchg
jp
insb
icebp
adcb
lock
sbb
or
sbb
inc
insb
jg
adc
out
pop
loopne
test
add
xor
push
insb
inc
mov
leave
push
xor
push
movsl
mov
insl
aad
mov
jbe
xlat
sbb
cmp
push
dec
mov
add
xchg
push
out
cmp
mov
cmc
pushf
pop
jno,pt
push
mov
xor
mov
adc
dec
pushf
pop
adc
cmpsl
rclb
leave
ss
xchg
sub
arpl
cli
lods
fists
and
add
int
test
cmp
insl
jle
or
jne
nop
inc
inc
arpl
jl
int3
pop
pop
mov
shlb
sbb
pop
cmpsb
sub
mov
subl
loopne
sti
std
dec
dec
mov
cld
jg
mov
mov
jmp
jb
mov
packuswb
loop
je
cmc
in
mov
mov
pusha
push
sbb
cmp
outsl
pop
scas
xor
fildll
cmp
inc
pop
pop
cmp
push
das
mov
pop
push
andl
mov
push
inc
mov
cmp
push
mov
pop
mov
loop
daa
add
sub
cmc
xchg
and
cli
sti
pop
jg
les
mov
shrl
out
xor
cltd
jl
scas
dec
rcll
adc
jae
dec
xchg
jp
jne
add
adc
inc
andb
sub
fwait
mov
push
movsb
cmp
jge
aaa
arpl
popf
push
lret
pop
xchg
inc
or
cmp
cmp
inc
fwait
add
push
pop
cmp
mov
push
jecxz
stc
jns
cltd
cmp
hlt
les
in
test
frstor
das
mov
mov
jae
pop
nop
xor
sahf
aam
out
sti
xchg
and
std
mov
stos
cmp
dec
xlat
sub
push
bound
add
ret
jne
dec
sub
xor
fcmovnbe
out
push
sub
mov
adc
pop
out
out
mov
in
scas
sarb
pushf
les
cmc
out
mov
jno
xor
cwtl
lret
insb
pushf
andl
cld
int3
xchg
pop
xor
pop
add
mov
adc
adc
xchg
fiaddl
mov
mov
loop
stc
mov
xchg
imul
fucomi
lret
sub
inc
lds
pop
sahf
pop
shll
movsl
sbb
sahf
jmp
or
std
lret
aam
lea
mov
pop
fcoms
test
movsl
mov
mov
jl
jne
loope
mov
jb
adc
imul
pushf
movl
lahf
add
xor
xchg
mov
in
inc
lcall
je
jecxz
lock
pop
sbb
pop
xchg
cld
mov
daa
loop
adc
lret
lods
popf
dec
mov
daa
jmp
clc
hlt
orl
dec
adc
fwait
mov
leave
mov
fsubs
popf
sub
shrb
sbb
shlb
xchg
add
mov
ret
sbb
pop
fnstsw
pop
ret
or
and
and
call
lret
int
pop
fs
sub
pop
fiadds
inc
sub
cmp
or
enter
mov
sub
popa
loopne
mov
mov
xchg
push
fmull
xor
arpl
mov
and
in
add
repz
mul
sub
mov
and
je
cmp
out
pop
pop
lahf
dec
inc
jnp
and
xchg
inc
and
or
add
dec
sbb
jb
ficompl
mov
sbb
cs
stc
mov
pop
pop
jbe
out
or
popa
adc
scas
mov
in
mov
push
movsb
cs
push
imul
and
pop
xchg
push
cmp
rorb
fs
mov
arpl
pushf
sti
xlat
dec
push
loopne
sbb
push
sbb
das
cmpl
out
mov
popa
mov
cmp
scas
or
aaa
stc
repnz
xrelease
cmp
je
addr16
insl
flds
mov
mov
ljmp
inc
cld
fs
dec
push
outsb
fisubrl
sub
dec
lcall
mov
mov
add
fbstp
cmpsb
movsb
loopne
and
lret
sbbl
fstp
sbb
mov
sarb
test
movl
dec
fyl2xp1
rcrl
lods
push
cmp
lahf
outsl
clc
jp
cmp
stc
inc
dec
pop
dec
in
nop
popf
push
icebp
jmp
aam
ljmp
pop
mov
outsl
outsl
push
adc
clc
mov
lods
pop
fsts
adc
xor
mov
rcl
bound
nop
push
adc
leave
inc
outsb
mov
aas
push
jo
movsb
popa
sub
sbb
jo
pusha
andl
sar
or
lods
sub
in
xor
iret
into
std
xchg
test
sbb
lea
ss
movsb
rclb
lods
pop
movsl
dec
and
sahf
pop
ret
dec
out
fstl
stos
cs
jne
js
sbb
or
dec
and
into
xor
mov
mov
jo
ds
cmp
and
or
or
xor
scas
ds
sub
sub
daa
mov
pop
dec
jbe
lods
jns
notl
adc
mov
shll
shrl
jle
or
dec
or
ja
and
sub
add
incb
shlb
leave
out
pushf
arpl
data16
call
stos
jg
movsl
subb
mov
inc
cmpsb
xor
clc
sub
inc
xchg
jo
xchg
xchg
push
cmp
inc
pop
sub
fwait
mov
cltd
adc
into
push
sbb
mov
std
sub
inc
out
daa
sbb
xchg
jmp
xchg
pop
mov
loop
mov
xchg
iret
pop
nop
adc
and
jbe
push
inc
mov
sub
sub
ret
out
hlt
push
inc
mov
les
push
fisubl
fdivl
xor
sbb
mov
jbe
xchg
adc
fimull
shrl
sahf
push
add
push
pop
lods
push
cmp
sbb
cmp
or
jbe
pop
lods
shl
push
and
jae
call
fnstcw
fstps
cmp
ret
inc
mov
hlt
mov
sub
jno
stc
leave
fnstsw
push
pop
and
mov
push
shlb
cmp
sbb
aas
jg
sub
int3
lret
cmp
pop
mov
jb
xor
sbb
enter
loopne
add
push
arpl
mov
xchg
dec
fildll
jle
pop
stc
xor
fstpl
movsl
mov
jae
ret
in
xor
jbe
push
xor
xchg
movl
push
xchg
add
enter
mov
sbb
scas
in
ret
inc
and
lods
jmp
jne
inc
arpl
or
or
lds
cld
push
inc
jae
mov
sahf
push
jbe
shl
imul
mov
pop
add
sahf
gs
and
mov
jbe
pop
les
xor
dec
jge
sbb
int3
cmp
mov
mov
stos
mov
mov
mov
outsl
cmc
sub
cmp
mov
cmp
out
fsubrl
mov
hlt
inc
cmpl
xchg
mov
mov
lds
addr16
push
mov
dec
stc
cli
enter
mov
fldcw
and
std
pop
lea
idivl
test
orb
mov
lods
shrl
fstps
add
jl
xor
outsb
arpl
cmpsl
movsl
ljmp
jecxz
adc
push
movsl
arpl
push
adc
addr16
add
mov
cmp
frstor
sub
nop
sbbl
imul
cmp
in
clc
repnz
adc
daa
mov
fsubs
jbe
call
daa
jmp
xchg
mov
js
inc
nop
lcall
cmpsl
jae
lds
jo
inc
or
nop
arpl
fwait
cld
aam
inc
arpl
mov
mov
shll
lahf
popa
and
scas
cmp
ja
mov
dec
call
mov
fcomps
lret
push
jmp
loope
sub
jns
jnp
and
xor
clc
int
sub
sbb
mov
leave
dec
push
js
outsl
notb
movsl
aaa
xor
insb
inc
lds
std
in
add
xor
sarl
test
cmp
xor
mov
repz
fwait
sub
mov
fmuls
loop
orb
xor
rol
aaa
int3
test
and
jae
push
and
and
sbb
push
movsb
jnp
fninit
and
dec
jg
sbb
ljmp
in
dec
cmp
out
pop
mov
add
lahf
xor
mov
cmpsl
jge
inc
pop
packsswb
sub
xor
mov
xchg
inc
int3
cmpsb
push
jecxz
outsb
rcrl
adc
cmpsb
cmp
push
fldcw
jno
loopne
push
mov
sub
mov
add
inc
fcmovnb
int
adc
adc
cmp
cmp
and
sub
cmp
jl
add
icebp
shll
adc
pop
fwait
dec
stos
test
xchg
nop
test
jne
out
xorl
xor
sub
cmp
xchg
and
dec
aad
pop
cmp
cli
icebp
cmp
cli
out
in
push
sub
adcl
adc
dec
aas
iret
dec
jp
iret
in
movsl
mov
enter
mov
mov
pop
out
sub
add
jge
icebp
jno
xor
mov
xrelease
ret
jg
mov
lods
pop
test
fwait
xchg
enter
mov
icebp
enter
jns
loop
mov
pop
mov
or
and
mov
jb
shlb
test
pop
sub
movsb
dec
sbb
mov
or
insb
lea
or
xchg
clc
xchg
lcall
inc
test
sbb
sbb
mov
pop
cli
sub
jne
dec
push
push
xchg
xchg
sub
or
and
les
jno
adc
in
cli
leave
jnp
outsb
lock
paddsw
fstpl
and
dec
insb
sbb
outsb
sti
clc
outsb
xchg
loop
into
pop
cmp
cli
push
pop
in
sahf
in
jge
lret
adc
out
dec
mov
adc
cmpsb
adc
or
sbb
mov
cmpsl
mov
xor
push
jae
enter
mov
mov
rolb
push
jmp
fdivl
test
and
icebp
inc
and
push
nop
cwtl
nop
sub
and
addr16
stos
jns
push
mov
sub
add
into
adc
aas
push
int
pop
inc
push
xor
sar
aam
enter
dec
out
out
push
mov
es
jecxz
jl
xor
cld
jl
xchg
xchg
pop
fisubs
sub
xor
and
xor
popf
rcrl
lahf
inc
xchg
push
fbstp
icebp
pushf
add
popa
inc
fs
pop
dec
stos
push
popa
mov
add
add
cmp
fsub
jo
and
lods
popf
stos
fcmovb
add
fstl
fmul
xchg
popf
shlb
cltd
cmpsl
aaa
dec
faddl
in
dec
les
inc
jle
xchg
jl
add
jo
mov
lock
lds
cmpsl
cmp
aam
aad
je
stc
loopne
mov
pop
mov
popf
popa
mov
mov
into
cmc
pop
mov
cmc
pop
xchg
into
sahf
fnstsw
pop
or
stos
in
mov
lahf
dec
and
push
fistl
outsl
mov
aam
mov
outsl
jle
or
icebp
fidivl
sub
jbe
jo
aad
inc
insl
or
rep
pop
jp
cmp
mov
fsubrl
and
jb
test
sub
sbb
cltd
lods
add
pop
int3
test
hlt
hlt
xor
sub
ss
push
push
and
test
out
int3
cmpsb
dec
cmp
fcomi
fmuls
clc
pop
cld
adc
pusha
or
lock
sbb
inc
xor
xlat
mov
ss
ss
mov
add
mov
or
or
loop
add
in
call
cmpsb
or
aas
lcall
mov
movsl
enter
int3
leave
pop
inc
jg
push
in
es
js
xchg
mov
in
xchg
lcall
and
xchg
xchg
xchg
loope
and
test
pop
inc
sti
mov
push
testb
sbb
sti
pop
loope
test
js
adcl
inc
and
xorl
test
xchg
cmpsb
jno
cmp
push
cmove
rcrb
jbe
rcrb
test
cs
and
fdivrp
in
mov
loop
push
mov
stos
jg
or
push
mov
inc
negb
xor
inc
add
clc
xchg
imul
adc
into
push
in
xor
loop
ljmp
push
cs
jns
insb
stos
or
call
adc
mov
or
stos
hlt
or
je
push
add
into
orl
push
rorb
fstpt
mov
xchg
mov
and
mov
ret
jbe
dec
lcall
aam
sbb
mov
faddl
pop
xor
xchg
mov
fidivs
cwtl
inc
mov
push
inc
pop
fwait
mov
ds
test
sub
cmpl
addr16
dec
push
add
mov
adc
mov
fdivrs
into
outsl
loope
fcoms
in
jns
aad
inc
pop
and
clc
repnz
popa
clc
js
mov
inc
inc
xlat
push
sub
iret
push
inc
inc
jmp
daa
push
scas
pop
dec
mov
mov
lea
jns
mov
or
imul
pop
mov
aam
mov
mov
mov
push
lds
or
dec
loopne
mov
out
sub
gs
clc
pop
sbb
push
imul
call
sbb
cmp
lds
lea
jae
jnp
xor
mov
stos
cld
mov
cld
icebp
dec
sub
mov
xorl
test
ret
and
push
sub
dec
push
mov
addl
ljmp
lock
add
push
pop
fwait
popf
sbb
lods
ja
pop
jl
sub
xlat
call
xchg
xor
enter
adc
mov
test
les
fiaddl
outsb
arpl
add
push
jne,pt
xchg
adc
sbb
aas
adc
pop
insl
jns
push
jns
mov
sti
xchg
sub
push
fdivs
dec
into
sbb
cs
lods
sti
jbe
adc
faddl
enter
ret
xchg
pop
aaa
sub
clc
or
popa
mov
or
imul
adc
or
test
fistpll
sub
dec
push
aam
mov
nop
lret
fucomp
cmc
pusha
pop
inc
xchg
ljmp
mov
addr16
test
sub
sbb
stos
mov
test
popa
cs
xchg
or
test
xchg
leave
adc
aad
cwtl
cmp
jp
data16
pop
clc
and
test
xor
ror
dec
das
std
dec
mov
dec
add
sub
stos
arpl
jnp
pop
sbb
cltd
mov
imul
movsb
imull
jg
jae
sub
xchg
mov
sbb
popf
xor
repz
pop
lret
pop
mov
mov
adc
mov
cmp
bound
arpl
lds
sub
jle
inc
push
lods
outsb
mov
pusha
jnp
mov
call
bound
dec
xchg
in
imul
js
fstl
push
repz
in
jmp
add
fadd
dec
movb
outsb
stos
repnz
xchg
mov
scas
movsb
aad
add
mov
dec
out
or
imul
xor
mov
cmp
dec
adc
lock
ljmp
stos
push
int3
imul
mov
out
add
cmp
lahf
xchg
pop
pop
push
and
and
pop
jle
pop
jns
call
pop
xor
sti
cmpsl
test
push
xchg
ljmp
jnp
add
push
testb
xchg
inc
inc
mov
sbbb
scas
inc
imul
arpl
pop
mov
test
adc
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
inc
mov
jnp
pushf
jnp
and
push
les
mov
dec
mov
negl
pop
pushf
dec
mull
nop
pop
adc
icebp
int
fwait
sbb
push
popf
sub
icebp
sbb
gs
ds
mov
pop
lods
push
cmp
mov
sbb
sbb
mov
dec
pop
hlt
rclb
or
sar
mov
jbe
rorb
in
xor
fcomps
roll
pushl
and
jg
adc
ja
pop
mov
fmulp
push
hlt
sub
and
arpl
jb
les
test
add
pop
in
popa
push
insl
pop
mov
push
test
loopne
lret
popf
jecxz
pop
in
pushf
pop
in
aad
shrb
inc
push
test
in
cmp
not
sub
and
in
add
mov
testl
test
test
xchg
loope
xchg
add
fisubs
xchg
push
push
scas
cltd
lcall
sbb
mov
call
xchg
push
orl
iret
pop
jecxz
loopne
cli
ret
leave
mov
push
and
jge
scas
sbb
cmp
stc
nop
movsb
mov
shlb
jg
inc
cltd
fcomps
push
sbb
add
xchg
or
mov
or
fwait
dec
push
xor
data16
fcompl
jnp
fsubrs
xor
das
fsubrs
mov
add
je
mov
bound
std
mov
push
sub
jmp
dec
mov
pusha
or
fs
adc
dec
sub
xor
mov
sbb
push
and
ja
outsb
mov
rcl
mov
outsb
loopne
fstps
jmp
fisubrl
and
dec
push
pusha
int
or
das
jns
sti
sub
stos
andl
mov
jmp
mov
nop/reserved
mov
pop
inc
aas
pop
sbb
pop
jg
sbb
or
cmpsb
adcb
das
pop
push
mov
out
dec
jo
in
addr16
jle
jmp
daa
xchg
les
jp
aad
cli
cmpsb
addb
inc
les
subl
stos
fistpl
popa
scas
mov
and
test
call
xchg
inc
arpl
popa
cld
mov
and
adc
sub
clc
inc
out
fidivs
es
xchg
jmp
in
jo
and
and
mov
insb
sbb
aas
dec
shlb
test
int3
imul
pop
adcb
ja
xor
adc
xor
xor
arpl
pop
insl
jp
cmp
push
adc
pop
rcll
adc
push
add
roll
sbb
pop
fmuls
push
stos
add
mov
scas
jne
gs
lea
mov
mov
and
repz
shrl
cwtl
rorb
lret
dec
shlb
mov
fsub
inc
sub
push
insb
add
dec
pop
cli
inc
jnp
jnp
cld
stc
pop
mov
xchg
in
sbb
popa
sub
mov
jmpw
xchg
lods
xchg
add
mov
lret
or
aad
inc
ud2
mov
in
add
adc
push
inc
mov
push
xchg
andb
sub
cwtl
inc
negl
call
xchg
mov
sar
and
jg
inc
mov
sahf
push
push
pusha
cs
aaa
std
imul
mov
add
add
or
xor
dec
arpl
lock
int
out
jb
daa
out
jno
mov
fstps
cmp
mov
scas
fimuls
daa
bound
clc
fs
and
addr16
adc
fisttpl
pushf
pop
mov
dec
scas
arpl
add
aaa
addl
je
popa
lea
xchg
dec
and
insl
add
mov
addr16
ret
pop
sbb
fidivrl
adc
bound
js
scas
popa
stc
or
mov
push
mov
lahf
in
or
subl
add
mov
and
iret
mov
clc
int
xchg
pushf
imul
shlb
in
mov
mov
fdivl
decb
mov
mov
pop
mov
jmp
mov
cmp
add
loopne
mov
js
mov
add
jp
in
mov
xchg
pop
in
dec
bound
daa
ss
mov
out
fistpl
jae
movsb
pushf
test
pop
stos
sbb
sub
dec
in
fldt
mov
xchg
push
xchg
jg
mov
lods
outsl
out
das
ja
xchg
fdivrs
adc
pop
int3
pushl
cmp
sti
push
out
add
adc
sahf
sbb
push
aas
pop
cmc
ja
hlt
into
sub
orb
les
mov
insb
mov
movsb
adc
inc
inc
dec
cmp
sbb
int3
subl
cmp
inc
adc
loopne
cmpsb
cs
and
xor
or
adc
pushf
pop
dec
push
adc
mov
dec
sub
push
mov
ret
adc
adc
and
push
mov
jmp
inc
clc
loope
jo
bound
lahf
aaa
mov
lods
sub
pop
jb
test
inc
ja
dec
movsb
add
sub
rcrb
stos
nop
sahf
jle
lret
leave
push
or
jnp
sub
xchg
dec
or
jl
push
push
fists
mov
jb
dec
cli
jb
mov
mov
push
ss
cmp
mov
mov
test
lods
jns
mov
les
push
pop
xor
jg
std
xchg
lock
sbb
pop
sbb
mov
addr16
pop
xchg
cmp
lds
jns
add
xchg
lea
je
cmp
mov
or
sbbl
pop
jg
add
xchg
lahf
mov
sub
test
addr16
mov
cmp
lcall
enter
or
lock
push
imul
cs
push
rcr
int3
cmp
add
jp
fbstp
out
arpl
in
push
cltd
insb
popf
data16
bnd
shr
xor
cmp
add
arpl
stc
into
mov
fldenv
xchg
movsl
out
enter
sbb
test
dec
mov
insl
orl
jno
jno
test
in
movsl
pop
xlat
pop
and
cmc
dec
popa
adc
push
dec
xchg
xor
mov
jo
out
and
mov
pop
mov
push
jbe
mov
sbb
jle
pop
lods
test
in
xorl
cmpsl
mulb
ficoml
sub
jge
sahf
sbbb
push
in
adc
push
jmp
into
sbb
in
mov
sbb
jns
mov
adc
push
inc
dec
cltd
cmp
inc
sub
mov
sub
test
leave
jb
pushf
mov
test
jecxz
rorl
out
cs
sbb
pop
in
xchg
adc
stos
cmp
mov
pop
imulb
mov
sbb
push
jb
mov
jb
xor
or
mov
or
push
cltd
stc
jns
movsl
push
cmp
xor
xchg
push
push
push
sti
call
insl
inc
push
dec
inc
lock
dec
std
jl
addr16
fs
sbb
sbb
enter
addr16
cmp
popa
xor
movsl
sub
mov
adc
inc
push
pushf
cltd
or
pop
pop
arpl
sti
cmc
pop
sub
inc
outsl
nop
sub
pop
pop
call
nop
pop
mov
subb
fsts
xor
mov
mov
xchg
mov
insb
aas
xchg
mov
stos
aaa
mov
in
aaa
dec
xor
mov
std
inc
or
lcall
jmpw
ret
mov
in
cs
add
and
jne
gs
outsb
adc
lret
rcll
popf
les
iret
int3
xor
jmp
push
inc
fisubrs
inc
cld
pop
out
mov
mov
shll
jns
cmc
mov
sbb
mov
ja
cmpsl
and
sub
mov
push
xchg
adc
and
xchg
sub
xchg
push
divb
aaa
xchg
and
data16
inc
xor
and
dec
adc
iret
push
in
mov
and
xor
jge
xchg
add
dec
out
ds
inc
sbb
fidivrl
mov
loopne
cmc
add
xlat
xchg
push
out
sbb
outsb
dec
inc
mov
sarl
sbb
pop
lds
sahf
add
mov
cmp
mov
aas
pop
xchg
sub
int3
movsb
inc
andl
lods
sub
xchg
leave
add
push
inc
aad
add
mov
cld
mov
and
stc
add
dec
cmp
movsb
pop
xchg
add
fiaddl
shlb
rolb
loop
out
mov
cltd
adc
scas
shrb
cmp
mull
nop
inc
fnstcw
pushf
movsb
sub
sub
repnz
jne
dec
lea
lret
xchg
in
inc
mov
cwtl
cld
rorl
or
and
mov
insb
and
sbb
loopne
flds
aam
fistl
into
out
pop
data16
scas
sbb
rcrb
test
xor
mov
cmp
sbb
les
sub
in
in
xlat
sarl
insb
cmp
rcll
icebp
inc
dec
add
inc
lds
xchg
sub
in
in
and
sub
imul
aad
cmp
push
flds
push
sbb
loopne
dec
jo
fdivrs
add
enter
lret
and
pusha
inc
mov
xchg
cmpsb
adcb
xchg
nop
lret
sti
inc
subl
sbbl
loop
push
inc
es
call
cmp
and
fcomps
lret
jle
int
mov
sbb
xchg
sub
cmp
adc
lods
daa
in
sbb
ret
pop
movsl
push
sbb
scas
mov
in
inc
and
mov
dec
out
ljmp
fwait
mov
lea
test
cmp
mov
or
xchg
test
mov
and
cld
in
xchg
xchg
xchg
into
out
repnz
mov
add
out
inc
push
xor
push
fldcw
inc
ds
out
ret
jae
push
jmp
fcoml
push
jb
xchg
mov
movsl
in
dec
add
push
call
and
shrl
mov
add
sti
xor
jae
stos
aaa
std
mov
jno
shrl
dec
sub
inc
push
mov
pushf
xlat
pop
dec
dec
pop
into
movsl
roll
pop
push
les
cmpsl
insb
and
push
fisttpl
outsl
push
fwait
loope
hlt
xchg
loop
mov
pop
sbb
xchg
or
mov
mov
shrb
paddusb
test
mov
addl
test
push
push
fistpll
cmpsb
fwait
popa
mov
in
and
into
push
outsl
pop
insl
into
add
in
jnp
loopne
icebp
call
mov
xchg
scas
mov
test
loop
push
mov
push
sbb
cmp
xor
fisubrl
pop
xor
mov
add
lds
insl
cmp
push
repnz
or
sub
xor
es
repz
jmp
sbb
mov
inc
xchg
sbbb
shr
sbb
cmp
mov
les
fxam
adc
hlt
outsb
in
clc
xor
cmp
pop
icebp
std
jle
xor
popf
cmpsl
sub
sub
xor
push
inc
pop
or
add
dec
mov
pop
mov
bound
sbb
pop
pushf
lock
stos
addr16
popf
lahf
add
aam
mov
cld
xchg
loope
stos
test
mov
sub
js
sti
xchg
jne
bound
cmpsb
daa
add
ljmp
in
pop
or
adc
mov
sbb
insl
repnz
jbe
mov
out
lods
or
add
dec
or
repz
sbb
loopne
xchg
testl
mov
sbb
pusha
sti
fisttpll
loop
mov
pop
sarl
mov
mov
mov
jno
fcoml
in
daa
popf
inc
jp
sub
sub
fbld
shlb
out
inc
in
cwtl
adc
imul
fisubs
popf
xchg
pop
hlt
stc
cs
and
leave
dec
cmp
mov
jns
sti
xor
jmp
and
rolb
adc
cmpsl
into
ljmp
test
test
mov
in
jle
xlat
call
jae
addr16
xchg
cmp
fmuls
imulb
add
sbb
iret
jo
jns
out
xchg
push
mov
sbb
dec
xchg
jnp
imul
test
pop
jmp
push
pop
push
add
data16
mov
adc
mov
lahf
stos
les
sbb
in
in
hlt
test
push
pop
gs
inc
sub
jle
sub
dec
sbb
imul
mov
hlt
mov
out
cli
and
es
stos
fs
mov
popa
jne
rcl
shr
ret
or
nop
jnp
sub
stos
out
pusha
inc
and
inc
push
sti
pop
or
push
mov
stos
sahf
inc
loopne
xor
jl
fwait
mov
jg
xor
mov
push
jge
sub
dec
push
cli
sbb
and
movsb
and
or
or
sub
imul
jae
jnp
cmp
fisttpl
mov
cltd
mov
or
or
cmp
out
and
nop
cmpsl
mov
jne
subb
leave
adc
out
test
cmp
pusha
sarl
mov
cmp
sub
pusha
push
aad
add
test
movsl
mov
stos
sarb
mov
dec
cmp
jge
pop
flds
repnz
in
or
mov
push
xchg
pushf
sbb
dec
add
cmp
adc
jmp
out
add
ja
add
dec
gs
in
dec
rorl
fs
popf
mov
test
pop
or
icebp
push
in
mov
pop
jae
add
movsl
add
add
add
lcall
test
jp
inc
rcll
add
ds
jo
cmc
or
dec
jge
xor
hlt
inc
jp
adc
ffree
jg
jbe
fisttpll
fiadds
aas
daa
stos
jne
sub
cmp
xchg
outsb
mov
repz
inc
pusha
mov
cmp
outsl
and
icebp
lahf
mov
cmp
cwtl
arpl
xor
push
ret
push
adc
test
jmp
das
sub
fcomip
cmp
mov
and
insl
scas
cmp
or
std
stos
fnstenv
cmpl
or
or
inc
es
or
imul
sbb
xchg
les
xor
ficompl
in
dec
test
pop
leave
xor
mov
push
daa
sbb
xor
scas
xchg
leave
jg
sub
push
fs
push
xor
mov
divl
gs
sub
mov
out
mov
mull
cs
jmp
out
mov
lods
sub
or
inc
movsl
dec
movsb
lock
add
es
jb
push
inc
pop
out
or
pop
int
add
add
std
loop
pop
and
pushf
jns
loope
xchg
icebp
jp
add
pop
xor
dec
movsl
lahf
cmpb
and
insb
mov
mulb
ja
cmpb
in
pop
aad
pushf
mov
mov
roll
cli
push
int3
and
adc
inc
mov
int
cmp
xchg
addl
mov
mov
testl
cmp
es
add
aad
popf
mov
fistl
call
ja
push
push
movlps
outsb
inc
jle
add
mov
outsl
xchg
ret
mov
jge
test
xor
lret
les
aas
cmpsb
or
and
mov
int
negb
test
push
mov
test
sbb
stos
mov
push
xlat
movsb
add
dec
mov
push
pop
movsb
jecxz
lret
repz
mov
xor
jp
call
cmp
loope
adc
movsb
test
out
rcrw
mov
icebp
cmovbe
sub
push
or
add
push
mov
jne
push
adc
repnz
inc
jnp
cli
hlt
pop
fdivrp
or
xchg
inc
ss
xchg
and
jns
lahf
int
out
icebp
std
mov
or
cmp
cmpsb
nop
cmpl
pop
fwait
inc
and
insl
cmp
int3
adc
repz
add
in
mov
fnstcw
inc
loop
push
clc
inc
sti
dec
sbb
cmp
shlb
adc
and
imul
mov
lods
lods
pop
scas
xchg
loop
cltd
stc
dec
sub
hlt
nop
mov
jno
add
push
push
and
or
cli
inc
repz
in
test
pusha
cmp
addr16
aaa
js
lret
and
xor
or
jne
rcl
sub
lock
push
clc
sbb
and
inc
test
loop
mov
icebp
inc
cmp
xor
inc
sbb
test
lcall
flds
inc
adc
cs
push
mov
stos
push
add
mov
sbb
add
dec
into
adc
jae
push
ja
stc
pushf
lds
jbe
insl
sbb
dec
push
pushf
in
push
shll
pcmpeqd
ret
addr16
repnz
inc
adc
nop
xlat
insl
mov
cmp
das
sbb
sub
stos
mov
lahf
pop
add
shl
adc
lds
fstps
mov
push
mov
int
pop
adc
jecxz
inc
testl
add
jae,pn
lods
jg
mov
jg
mov
js
movsb
mov
xlat
xchg
mov
pop
mov
ljmp
jmp
inc
aad
es
sti
mov
mov
mov
and
inc
clc
lcall
xchg
adcl
pop
add
aas
adc
loope
jae
out
sbb
mov
ret
sbb
lcall
dec
and
fidivrl
dec
jb
ss
add
das
and
push
mov
mov
scas
dec
insb
and
xor
xchg
sarl
and
jp
adcb
test
and
and
dec
fcmovne
xchg
jns
xor
cmpsb
ljmp
lea
sub
xor
addr16
jl
pusha
pop
dec
stos
cmp
dec
jecxz
jbe
sbb
jge
add
xor
add
sub
pop
push
xor
xchg
lret
xor
fiaddl
push
mov
xchg
aas
daa
ss
or
loope
outsb
das
lret
adc
outsb
mov
push
inc
stos
mov
outsb
sub
or
mov
in
inc
dec
sbb
push
sbb
roll
shr
push
jb
jne
ret
inc
outsl
mov
dec
jne
push
mov
dec
lcall
fisubrs
rclb
pop
test
mov
jns
fistps
movsb
and
mov
add
dec
leave
stc
in
jo
mov
repnz
sub
lods
out
arpl
mov
xor
out
mov
mov
jp
cmp
fcmovbe
repnz
loopne
out
test
mov
xchg
in
stos
imul
mov
rol
ljmp
push
cmp
or
xchg
shll
sbb
fnstsw
gs
enter
rclb
lret
inc
pop
pushf
xor
clc
dec
movsb
push
push
xor
lcall
or
push
out
lcall
lret
cmpl
adc
adc
cwtl
pop
and
mov
jecxz
xchg
xchg
mov
push
lods
fwait
pushl
lods
movb
adc
jge
mov
cmc
adc
jecxz
mov
call
test
mov
fs
cwtl
jmp
lahf
adc
cmpsl
mov
jo
dec
jae
bound
sbbl
push
xor
xor
xor
xor
add
out
mov
mov
push
nop
out
sub
mov
ds
fistps
clc
push
mov
enter
inc
push
xor
inc
and
jbe
subb
mov
and
js
jecxz
cmovnp
mov
inc
mov
nop
shrb
and
xchg
dec
xchg
lods
adc
mov
rcrb
repnz
xor
int
cmpsb
fildll
hlt
pop
mov
pop
add
pop
ds
je
jl
sbb
jne
push
jnp
mov
inc
mov
xchg
repnz
push
iret
jg
int
adc
hlt
push
pusha
sub
test
adc
push
inc
shll
setno
pop
add
mov
imul
loopne
adc
mov
aas
hlt
leave
jb
mov
xchg
adc
cmp
aam
rorb
repz
aam
jp
pop
mov
pusha
loope
mov
es
icebp
rclb
popl
xor
cmpsl
mov
aad
arpl
mov
cltd
stc
or
xor
pop
and
cmpl
ja
dec
add
xchg
out
subl
bswap
rcl
sub
mov
cmp
ret
inc
out
movsl
dec
sbb
push
pop
mov
xchg
inc
cmp
jg
push
dec
jg
into
push
jl
mov
xchg
lea
adc
out
jp
inc
test
push
dec
lock
add
fimuls
push
dec
mov
out
ficoml
add
xchg
and
daa
mov
repz
cmpsb
sbb
mov
lock
test
loop
test
repz
adc
cmp
pop
cwtl
push
mov
xchg
out
call
in
mov
ficomps
cmp
inc
mov
pop
arpl
sti
inc
dec
sbb
fbld
xchg
sub
push
add
mov
pop
push
pusha
insb
mov
or
fstps
imul
and
loope
pop
pop
popf
loop
cmpsb
scas
cmp
push
fstpt
lock
scas
and
outsl
aad
int
repnz
jnp
imul
cmc
pusha
pop
mov
jge
fsubrp
jnp
lods
mov
sbb
push
sbbl
adc
dec
popa
test
paddb
sub
sbb
pop
dec
pushf
lcall
cmp
fidivrs
insl
shrl
sti
pop
xorb
adc
js
dec
jno
jecxz
mov
call
cltd
or
aaa
fisubrs
mov
mov
imul
jp
cs
in
jno
test
jbe
jp
les
je
xor
or
jno
push
shl
js
xchg
jo
lret
mov
mov
and
mov
sbb
cltd
cmpsb
sbb
push
ljmp
loop
or
cwtl
stc
inc
cwtl
cmpl
add
or
jge
sbb
sub
mov
mov
dec
loopne
lods
xlat
hlt
rolb
shll
sub
mov
mov
push
fcmovnu
push
cmp
mov
mov
jecxz
fisubs
xlat
mov
into
jae
sub
cwtl
jg
pop
sti
push
pop
iret
sub
shll
inc
fdivrl
inc
mov
mov
movb
in
pop
inc
jne
ret
pop
xchg
push
js
mov
pop
and
test
test
adc
push
or
in
cmp
push
lcall
lods
sub
outsl
imul
mov
lahf
enter
mov
mov
mov
dec
insl
call
dec
imul
add
jno
in
lahf
sub
mov
adc
repz
into
loope
aas
pop
lods
cmc
adc
jp
jb
mov
int3
mov
pop
mov
sbb
aaa
add
rorl
aas
jg
cmp
das
ficomps
sub
in
pop
xchg
leave
shll
mov
int3
or
icebp
test
pop
cmc
push
fistpll
popa
push
pop
jp
shrl
push
sbbb
jae
mov
sahf
repz
lock
insl
fstl
lock
jp
fisttps
pop
lret
cltd
in
icebp
mov
inc
lea
ss
inc
sub
push
dec
mov
or
cmp
mov
or
mov
out
aam
test
mov
ljmp
addr16
imul
dec
lods
daa
in
xor
pop
fcomps
aaa
jne
bound
xorb
push
mov
fcompl
add
xchg
push
in
mov
inc
loopne
sub
mov
or
fisubrl
jb
dec
xchg
push
pop
movsb
sub
pop
or
sub
jnp
mov
pop
mov
adc
fcomps
movsb
mov
lods
in
cli
mov
or
push
and
test
mov
int
stc
or
mov
in
pushf
sbb
push
lods
in
shl
mov
xchg
pop
add
test
ficoml
sbb
mov
cwtl
leave
pop
adc
rcrl
enter
movsb
cmp
dec
push
mov
sbb
movsb
outsl
test
cmp
ficomps
stos
scas
pushf
hlt
in
adc
loop
sub
test
stos
decb
xor
jae
sub
lss
rcrb
dec
xchg
stos
mov
push
adcl
rorl
xor
mov
pop
adc
arpl
cmp
popl
in
sbb
imul
pop
dec
mov
push
mov
cmp
pop
push
jne
cmpsl
and
stos
sbb
lods
and
pop
aaa
scas
pop
sbb
addr16
bound
push
dec
fistpll
pop
push
test
xchg
xor
aam
in
dec
rolb
or
ljmp
les
repnz
push
test
mov
aam
or
test
cmp
divl
outsl
pop
ljmp
mov
push
sbb
jp
inc
shlb
ret
scas
ja
nop
pusha
push
mov
sub
add
ret
cmp
jmp
fnop
out
mov
repz
call
xchg
push
dec
dec
shll
je
mov
cwtl
inc
out
gs
adc
jmp
xor
jp
dec
pop
xlat
gs
std
bound
push
mov
jb
push
cs
push
inc
outsl
inc
lods
jge
sbb
in
inc
dec
jnp
mov
dec
aaa
shlb
scas
and
push
mov
lcall
cs
jb
shll
mov
xchg
in
cmpsb
jae
or
jno
shl
or
repnz
fs
mov
sub
mov
lock
mov
aad
mov
or
test
out
dec
jecxz
xchg
mov
pop
das
mov
or
push
mov
add
or
cmpsl
stos
xchg
insl
xor
pop
hlt
mov
and
add
cwtl
mov
adc
push
iret
lcall
sub
xor
sub
adc
sbb
mov
shlb
repz
hlt
cwtl
jp
mov
push
inc
adc
push
subl
rol
ds
inc
adc
xor
sti
das
jl
mov
das
daa
sarb
shr
fdivs
or
add
add
pop
inc
push
scas
scas
gs
cmp
jecxz
add
sub
add
or
mov
iret
and
scas
or
xchg
jmp
jae
xor
adcl
jo
addr16
add
es
movsl
movsb
push
dec
inc
mov
or
rcrb
jg
mov
test
mov
xor
push
hlt
dec
test
inc
lock
std
adc
mov
je
jns
fwait
xchg
adc
xchg
es
mov
cmp
mov
js
shll
data16
imul
pushf
mov
pop
aaa
dec
scas
mov
xlat
push
lcall
push
xlat
idivl
cmpsl
mov
and
pop
int
bound
pop
andl
cmp
adc
clc
inc
mov
ret
xlat
push
pop
std
push
rorb
cmpw
xchg
test
aad
sbb
jae
and
pop
imul
lret
movl
and
xchg
cmp
dec
xor
fbstp
out
xchg
lahf
imul
cmp
sbb
pusha
dec
nop
je
add
xchg
mov
ja
push
and
pop
scas
mov
pop
outsl
pusha
lds
mov
and
jg
ss
mov
sbb
dec
stos
pop
jo
rolb
rcrl
pop
sub
imul
dec
cmp
psrad
inc
sbb
inc
and
mov
sbb
in
mov
xchg
popa
fmuls
and
movsb
scas
cmc
cmpb
jg
jle
adc
cli
in
xchg
add
pop
jnp
push
dec
sub
cmp
dec
ficompl
xchg
popa
mov
add
xorl
ror
iret
iret
jo
stos
pop
dec
jne
jle
mov
outsb
call
rcrl
or
stc
inc
add
mov
insb
jbe
xchg
inc
out
jmp
daa
lods
adc
jge
nop
or
into
or
jl
dec
sub
outsb
ja
inc
xchg
adc
fs
and
mov
fwait
int
push
ret
fsubrl
lret
jo
cmp
sbb
ja
es
icebp
fildl
mov
sub
mov
mov
cmpsl
sub
sub
push
cmp
in
dec
dec
int3
mov
rcrb
xchg
lock
loope
add
mov
xor
xchg
push
outsl
addr16
in
xchg
sbb
aaa
mov
subb
call
add
sbb
mov
inc
pop
pop
sbb
push
iret
pushf
insb
sbb
insl
mov
push
cmpsl
lock
popa
es
les
aaa
lock
mov
cmp
lret
mov
sbb
cmpsb
imul
mov
push
jnp
add
scas
insl
in
loopne
mov
dec
insb
lcall
and
xchg
dec
sti
jnp
and
jo
fcos
icebp
fstpl
loope
icebp
cltd
dec
mov
push
enter
js
inc
dec
aaa
sbb
and
mov
pop
push
fisubrs
andb
pop
or
cmp
xchg
mov
cwtl
xor
mov
mov
iret
test
lcall
lea
cmp
js
mov
repz
dec
push
jae
lods
sahf
mov
cmpsl
imul
sbb
xor
jb
dec
push
test
inc
push
and
dec
outsb
lret
pop
and
enter
mov
clc
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
pop
test
jnp
roll
push
fistpll
stos
test
lret
stos
mov
dec
nop
imul
inc
imul
int3
movsb
push
or
push
std
adc
or
jge
push
push
xor
pop
nop
mov
sbb
and
sbb
rol
popa
and
push
popf
ret
sbb
ja
ret
mov
xlat
add
popf
fwait
test
xor
andl
out
out
xchg
cwtl
movsl
ljmp
pop
pop
out
xor
into
jg
je
ret
mov
subb
mov
cmp
mov
mov
in
mov
test
sbbl
xorl
jecxz
lods
shrl
adc
test
iret
jbe
sub
test
pushf
xchg
mov
sbb
loopne
xor
fadd
or
sbb
xchg
add
sbb
test
aaa
js
adc
in
fcmove
sahf
jb
sti
inc
andl
xchg
icebp
mov
je
cmp
imul
bound
push
stc
in
push
mov
notl
mov
xchg
adc
test
loop
lcall
and
loopne
cmp
mov
push
fdivrp
mov
add
outsb
add
test
mov
inc
mov
dec
addr16
pop
aam
cmpb
out
scas
push
jp
lds
movsb
nop
test
sbb
fsincos
scas
test
sbb
xor
pop
mov
arpl
cmp
dec
jb
xor
movsb
sbb
push
jb
xor
iret
mov
enter
loope
jecxz
insl
ficomps
sbb
movsl
sbb
sub
rorl
mov
sub
aam
xchg
je
pop
stc
ljmp
xchg
sub
sbb
xchg
cmp
mov
sbb
xor
dec
xchg
jmp
jne
mov
and
dec
mov
cmp
icebp
push
push
dec
repnz
ss
je
test
sub
dec
xchg
fisttpll
iret
lea
dec
dec
outsl
xor
adc
sarl
jp
mov
xchg
mov
push
in
scas
dec
xor
cmp
sub
ds
rorl
movsl
loop
sub
dec
mov
cmp
adc
mov
inc
dec
xchg
idivb
and
aam
jne
int3
mov
mov
inc
and
repnz
and
js
pop
and
test
jecxz
lock
sub
aad
movsb
enter
mov
jge
jne
mov
leavew
clc
push
sub
jnp
in
dec
aam
xchg
push
sbb
or
int3
sub
jl
pop
push
cmp
aaa
iret
jbe
push
sarl
pusha
enter
xchg
fcmovne
lods
cmpl
jbe
jae
rorb
pop
xor
or
clc
push
dec
and
jmp
cmp
mov
cmp
or
mov
cmp
xor
call
mov
mov
loope
xor
jmp
inc
out
push
imul
insb
mov
xchg
jmp
inc
sbb
cmpb
loop
sbb
popa
enter
ljmp
sbb
push
dec
outsl
repz
cltd
adc
jge
push
jp
or
sub
lods
xor
aas
sub
inc
inc
jl
imul
jecxz
sbb
push
in
std
or
test
cmp
ror
lods
and
jnp
sub
inc
jbe
jns
jb
and
loopw
push
repnz
sub
and
aaa
leave
sub
xor
mov
xchg
testl
mov
es
jo
imull
jns
bnd
cld
jl
cmpsb
pop
jmp
mov
lret
out
call
inc
dec
jle
adc
or
pop
test
lcall
or
push
jecxz
jg
push
and
or
mov
cmp
mov
adc
adc
rol
fdivrl
inc
adc
cmpsb
cli
or
mov
fdivl
mov
add
mov
scas
sub
gs
lret
cmp
insb
in
cmpsb
mov
add
aas
out
cmp
push
inc
dec
test
xor
adc
adc
jne
add
or
pop
das
ljmp
loope
xor
mov
test
add
outsb
jecxz
scas
lcall
xchg
enter
jo
xor
jmp
nop
xor
lcall
shl
arpl
dec
ret
cmp
adc
cmp
adc
jmp
xorl
xlat
xor
jmp
jp
dec
push
ret
jl
push
leave
jns
clc
push
inc
sub
xlat
xor
lock
add
mov
lcall
lcall
push
inc
push
inc
movsl
add
sbb
add
adcl
xor
shll
xchg
cmc
add
mov
add
mov
sub
bound
jae
and
adc
mov
les
ret
in
outsb
lret
enter
lock
lret
xchg
mov
pop
scas
fwait
dec
stc
cmpsl
mov
cmp
ds
jge
pop
test
fwait
mov
mov
jmp
lret
icebp
sub
xor
push
mov
outsb
and
or
xchg
mov
cmc
das
mov
sub
sbb
mov
sahf
jnp
add
data16
sahf
decb
dec
loopne
popa
cmpsl
pop
int3
fs
sbb
inc
mov
pop
imul
insl
out
jmp
std
test
xchg
dec
mov
push
js
stc
mov
xchg
cli
jns
inc
clc
scas
jmp
mov
mov
inc
sbb
cld
xor
out
into
jmp
call
cld
js
xlat
push
imul
inc
sbb
mov
push
mov
and
movsb
jmp
enter
sbb
je
adc
pop
out
cmp
xchg
arpl
mov
rolb
adc
ror
out
sbb
fcmovbe
dec
inc
jg
xor
mov
xchg
sbb
push
mov
xor
adc
sbb
pop
aaa
jecxz
cmp
clc
out
ret
adc
xlat
mov
push
mov
or
dec
or
gs
pushf
mov
cmp
xchg
push
mov
dec
dec
mov
movsb
dec
scas
add
sub
xchg
lret
aad
jne
adc
lods
jge
xor
mov
mov
sti
jp
rclb
and
cltd
arpl
cmovb
cmp
aas
int3
fs
cld
mov
mov
jno
dec
sbb
inc
sbb
dec
cmpsb
dec
faddl
or
dec
pushf
insl
cmpl
pop
das
and
scas
test
mov
incl
sub
add
xchg
xor
jg
sti
dec
aad
testw
add
fdivl
idivl
aad
rclb
int3
and
call
or
fs
and
andl
jne
push
jae
divb
add
enter
arpl
mov
sub
push
inc
pop
andl
jb
dec
push
lret
rol
or
mov
int
je
mov
or
loop
jbe
pop
xor
mov
jecxz
sbb
stos
test
or
inc
sub
bnd
cmp
aad
sti
outsl
prefetch
xor
outsl
mov
sti
div
pop
fidivs
scas
popa
sbb
sub
loope
pop
add
mov
jae
imul
stos
or
xlat
test
mov
ss
cmp
mov
sub
jmp
mov
adc
cmpl
adc
push
pop
sarb
js
dec
loop
or
lock
cmp
push
add
into
mov
mov
adc
lds
das
dec
les
mov
inc
cmp
sub
bnd
sbb
aam
mov
xor
cld
mov
sbbl
dec
cmp
int3
in
pusha
dec
test
sahf
xor
call
test
push
push
movl
pop
pminub
mull
incl
mov
add
jmp
mov
xchg
stc
jb
add
mov
out
push
xchg
dec
jge
pop
inc
into
add
imul
lds
js
rclb
and
sub
xchg
adc
das
cvttps2pi
dec
les
cli
ljmp
fldl
faddp
out
xor
cmp
shll
xor
repz
icebp
xchg
adcb
enter
jne
cmp
push
jle
mov
jecxz
lcallw
xchg
xor
les
add
rorl
lcall
jge
jl
nop
add
xchg
inc
scas
js
sbb
inc
fnstsw
mov
lods
xchg
sub
aad
inc
ds
pop
ss
pop
movsb
adc
arpl
sti
sub
jae
sbb
xor
cmp
xchg
sbb
mov
mov
adc
test
xor
mov
sahf
out
lret
dec
mov
imul
push
test
jl
cmp
dec
adc
push
mov
cmp
and
xchg
es
outsb
jno
inc
movsb
les
adc
push
sbb
inc
cmpsb
jb
push
cmp
mov
mov
fcomps
mov
xchg
xor
les
enter
push
repz
push
inc
and
push
add
xchg
inc
lock
loopne
cmpsb
sbb
inc
xor
dec
xchg
sti
icebp
and
out
inc
or
loope
pop
cmp
or
ret
mov
lea
add
push
and
rol
shl
add
dec
popa
and
cltd
mov
mov
jae
mov
pop
push
data16
xchg
cmpsl
je
jle
push
scas
fadd
sahf
jecxz
sbb
adc
mov
call
mov
or
idivb
repz
testl
adc
inc
add
sub
dec
sbb
nop
dec
clc
outsb
pop
or
lock
mov
mov
aas
or
and
out
fstpt
pop
out
cmpsl
mov
fidivrs
push
je
push
push
nop
xor
call
in
mov
dec
iret
dec
js
test
jne
xchg
jp
push
xor
mov
mov
push
mov
add
fcoms
cmp
inc
add
fsubl
push
xlat
fcoms
jb
push
lea
mov
imul
hlt
jnp
mov
out
lcall
dec
aam
ss
add
pop
xchg
lret
and
pop
xor
jbe
sbb
arpl
mov
aas
rorl
add
or
cmpsl
push
lock
mov
dec
push
notb
lds
cmovle
in
test
add
or
xchg
in
pop
outsl
mov
aas
sub
pop
test
push
mov
je
sbb
pop
mov
scas
popl
and
mov
andl
and
mov
jbe
mov
xor
and
int
push
sbb
cmp
scas
sbb
or
sarb
imul
repz
mov
cltd
push
dec
icebp
xorb
inc
jns
sub
sbb
and
jb
adc
stos
dec
das
std
in
xchg
cmpb
insl
nop
sub
rcl
or
bound
and
add
scas
and
and
push
cs
sbb
jl
mov
cmp
and
ss
mov
or
adc
dec
out
add
ljmp
push
mov
outsb
shrb
mov
or
push
aam
fcmovbe
mov
fsubrs
xchg
jnp
insl
jmp
mov
and
pop
xchg
nop
adc
lock
sub
je
out
loopne
inc
js
aad
fwait
or
in
pop
inc
int3
jecxz
lods
adc
outsl
push
mov
shrl
push
cmp
sarb
or
lcall
in
insl
pop
pushf
int3
popa
adc
xor
les
or
inc
in
sub
push
or
mov
ror
enter
or
push
mov
sbb
sbbl
xchg
test
adc
xchg
xor
mov
cmp
or
adc
loope
push
fwait
xlat
ja
add
mov
add
outsb
ret
les
stc
fmul
clc
sbb
inc
add
stos
and
jp
mov
mov
mov
lret
inc
pop
in
sbb
or
dec
add
das
ret
add
les
dec
cmovp
adc
ljmp
sti
nop
or
sub
pop
fwait
pop
push
cmpsb
add
mov
push
jo
das
inc
push
jbe
flds
out
iret
add
and
fwait
shrb
scas
inc
aaa
enter
dec
mov
icebp
psrlq
mov
sbb
xchg
sub
cwtl
cwtl
sbb
mov
dec
lea
aas
lods
call
jg
sbb
je
mov
cmpxchg
fs
mov
stc
aad
shl
mov
sub
fcoms
xor
arpl
jl
out
lahf
mov
and
nop
sub
adc
lds
jmp
sub
dec
and
test
lcall
pop
cmp
ficoms
dec
ror
test
call
call
ljmp
inc
xor
cmp
iret
dec
std
inc
add
std
call
cld
jns
out
or
jbe
pop
or
cmpsl
pop
cld
cmp
jecxz
enter
cli
movsl
das
cmpsl
dec
pop
pushf
push
aam
popa
in
xorps
arpl
mov
bound
lret
xor
call
sbb
mov
das
repnz
jecxz
sub
xor
cmpsb
imul
das
les
fs
sbb
fmulp
ds
xchg
gs
out
dec
insb
mov
inc
insl
fnsave
js
and
add
mov
jmp
out
test
ljmp
pop
loopne
xchg
movsb
jo
xorps
mov
jmp
lret
cmp
push
pop
jecxz
repz
xchg
sar
out
mov
xchg
inc
mov
stos
jle
lret
mov
mov
xchg
lock
or
rcl
gs
inc
jb
test
scas
arpl
mov
call
arpl
jle
ficoms
push
in
or
xchg
pop
test
dec
or
pop
lret
leave
shlb
and
std
adc
arpl
andb
cltd
testb
cmp
lahf
mov
mov
pusha
lret
jnp
data16
data16
dec
sub
mov
mov
filds
int
mov
mov
in
mov
insb
and
lahf
xchg
inc
in
in
cmp
dec
xor
pop
inc
jnp
scas
sti
movsb
lcall
movsb
sub
or
andb
mov
mov
call
pop
test
jne
je
test
sbb
arpl
js
xlat
mov
jne
mov
out
push
jae
lcall
add
mov
scas
jg
jno
fisubl
mov
popa
lret
cli
repz
lods
cs
lcall
mov
or
lret
sub
pop
lret
mov
into
mov
divb
scas
ss
cwtl
cmpsb
mov
ds
mov
inc
sub
or
inc
rolb
mov
lcall
sti
cmp
sub
push
data16
mov
and
sbb
adc
and
dec
imul
sahf
mov
imul
pop
dec
inc
pop
pushf
mov
pop
inc
push
fs
add
mov
xor
or
insb
lret
idiv
and
push
scas
pop
sahf
clc
fs
mov
ficoml
jno
jle
cmp
frstor
insb
push
add
sub
rcll
xor
jle
repnz
or
ret
lret
cmpsb
sti
arpl
inc
sbb
movsl
cmp
cmp
adc
loope
mov
aaa
sbb
or
adc
jae
inc
shll
adcl
mov
fstps
aam
shlb
repz
mov
pop
cmpsb
or
jno
mov
cmpsb
fwait
rcrl
sbb
je
cmp
adc
mov
push
int
mov
sbb
loop
cs
addr16
jecxz
aad
add
mov
sbb
jb
sbb
int3
fmull
lods
mov
sbb
lret
bound
cwtl
jg
add
adc
mov
inc
mov
push
jb
xchg
inc
movsl
shrl
inc
push
push
mov
add
imul
cs
scas
ret
push
or
pop
rcrb
js
out
sbb
popf
adc
imul
xchg
and
adc
jecxz
out
dec
in
stos
adc
jbe
and
pop
xor
sbb
pop
push
mov
fdivp
negb
lret
add
pushf
add
adc
loope
lcall
sbb
cli
inc
jp
incb
pop
pop
push
cltd
mov
fldl
lods
push
icebp
xchg
push
mov
mov
dec
mov
cmp
rcrb
sbb
outsb
cltd
ljmp
in
xchg
jbe
pop
mov
pop
pop
cltd
imul
cmpsl
or
cld
mulb
xor
mov
pop
lret
dec
nop
pop
mov
stos
or
int3
push
xor
ljmp
loopne
xchg
data16
cmc
mov
cwtl
rol
mov
and
cmpsl
pop
repnz
loopne
fld
cmpsl
popa
iret
sub
lds
and
and
or
cld
add
mov
test
xchg
dec
push
jno
dec
stos
push
jmp
lret
or
jnp
sbb
or
int
xchg
lods
sub
cmp
fildl
push
cmp
mov
testl
nop
sub
jb
aam
or
add
idivb
add
shl
rcr
jle
mov
inc
ret
mov
jnp
movsl
mov
cli
int3
mov
sbb
test
scas
loopne
loope
pop
inc
gs
pushf
call
idivb
lock
xor
mov
in
enter
jecxz
in
repnz
push
cltd
xchg
xlat
jge
inc
clc
aam
dec
scas
or
fsubrs
aaa
in
push
mov
inc
and
inc
mov
ret
mov
fs
push
pop
and
loope
mov
movl
and
cmp
aam
cmp
lcall
rcrl
adc
cltd
push
negb
ret
scas
mov
mov
add
nop
push
xchg
cmc
stos
cmp
sub
shl
out
jg
push
iret
sub
fstps
or
dec
cmpsl
mov
push
adc
mov
lcall
cmpsl
push
test
and
test
fsub
lea
test
push
and
xchg
mov
cmpsl
and
das
jnp
push
test
out
hlt
mov
sbb
adc
jnp
or
rorb
sbb
mov
cs
mov
clc
mov
sbb
mov
ds
cmc
ja
jl
mov
addr16
pop
scas
test
inc
cmp
jle
or
outsb
and
and
test
sbb
mov
popa
fsubrp
data16
mov
loopne
lock
lea
js
lcall
mov
mov
shlb
lods
rcll
pop
lea
jmp
mov
je
bnd
stos
push
out
lahf
and
xor
pop
mov
gs
andb
das
mov
pop
aam
pushf
mov
rolb
loope
stos
xchg
xchg
stos
lds
loope
and
test
ljmp
fnstenvs
test
xchg
fs
cmc
pop
mov
popa
aam
lcall
fs
test
aam
jp
xlat
nop
or
jmp
es
aad
loope
iret
leave
ja
imul
and
aaa
cs
and
subb
or
mov
test
ret
das
xchg
xlat
or
test
mov
nop
les
push
nop
mov
add
push
jecxz
lret
enter
rorb
cmp
dec
inc
dec
out
pop
ret
push
inc
mov
jle
js
cmpb
sbb
daa
jg
pop
scas
nop
lods
gs
pop
mov
lods
and
adc
cmp
sbb
fcmovnb
call
xchg
testb
mov
adc
pop
push
jne
mov
push
sub
out
mov
jl
inc
fidivrs
shl
testb
jbe
push
scas
aaa
aam
xor
push
adc
aad
jns
orl
adc
and
pusha
call
arpl
jne
or
mov
jecxz
push
jo
pushf
sub
sub
repnz
pop
pusha
in
out
int3
inc
inc
outsl
lods
imul
out
and
jns
loope
test
fimull
rcrb
mov
arpl
push
cs
or
sub
mov
sub
jp
rcll
jae
stos
mov
mov
frstor
rolb
and
mov
arpl
or
mov
jne
mov
jl
cmp
stc
cmp
clc
inc
aas
sbb
jns
addr16
gs
add
push
jne
aaa
movsb
test
cli
or
inc
or
aam
ret
xchg
loope
mov
call
dec
and
leave
pop
jge
ljmp
rcl
shrl
data16
jne
lods
dec
and
mov
or
cltd
inc
cmp
push
sub
fistpll
cs
pushf
pop
jge
push
jne
xchg
aas
dec
dec
dec
cmp
inc
xlat
decb
mov
inc
in
sbb
lcall
sub
or
insb
lock
ljmp
add
inc
fidivrs
adc
rcll
xlat
pushf
test
adc
dec
orl
adc
aam
pop
push
inc
stc
push
push
dec
pop
nop
pop
xor
outsb
xchg
mov
popa
out
jns
inc
xor
movsb
inc
xor
fsubl
xor
mov
mov
xor
xchg
mov
sti
stos
paddsb
xchg
adc
dec
ss
popa
mov
js
popf
lret
xchg
pop
jae
push
jo
sbb
lds
mov
xchg
mov
cmpsb
aas
pop
push
ja
mov
push
mov
push
jecxz
pop
adc
add
dec
sarl
sub
ja
push
imul
icebp
sbb
je
mov
lahf
repnz
sbb
shrb
pop
inc
inc
ja
mov
decb
and
mov
das
mov
addr16
stc
gs
into
fwait
stc
in
cld
mov
sbb
fdivrl
mov
jno
nop
aam
cmp
fcomip
pop
sbb
pop
sub
inc
enter
movsb
jnp
sub
movsl
jo
push
inc
in
cwtl
cltd
dec
pop
jne
inc
lcall
push
fwait
aas
jmp
test
dec
mov
mov
mov
and
mov
pop
sub
pop
imul
outsb
aaa
test
inc
pushf
add
sbb
imul
sbb
push
mov
sbb
prefetch
or
stos
repz
mov
pop
imul
fldl
jbe
push
stos
and
stos
sahf
xor
cmpsb
cmp
bound
inc
sbb
adc
fnstcw
test
js
sub
aad
push
hlt
add
or
add
cmp
rcll
or
lock
add
cwtl
mov
xchg
or
lahf
adc
cmpsl
and
enter
xor
lret
push
cmp
xchg
cmp
pop
orl
icebp
imul
pop
mov
mov
xlat
xor
fildll
addr16
cli
fistpl
lcall
add
fnsave
pop
cmp
pop
add
xchg
push
mov
lock
in
or
adc
and
dec
fdivs
xor
cmp
and
js
call
xchg
out
clc
in
test
nop
jae
dec
cmp
inc
mov
in
inc
test
dec
ja
jne
fsubp
int3
jg
stos
dec
loopne
jno
add
adcl
pop
dec
pop
ret
cmpsb
xchg
and
inc
fisttpl
xchg
sbb
jle
mov
xchg
and
aad
and
xchg
jmp
lods
rcrl
jp
fcoms
mov
pop
mov
mov
out
add
xchg
decl
mov
pop
mov
xchg
imul
rcrl
rcl
xor
insb
xchg
inc
cmp
test
or
add
add
push
jmp
mov
pushf
push
inc
adcl
in
push
in
cli
test
divl
push
and
cwtl
adc
mov
cltd
call
js
adc
push
insb
into
dec
data16
test
addl
or
xchg
jg
fmulp
xlat
jo
sbb
cmc
jno
fwait
push
add
xor
loope
inc
sub
push
jb
mov
mov
mov
mov
jge
jb
lods
lret
shl
or
cmp
or
xchg
jno
dec
add
jbe
fsubl
fsubl
xchg
enter
xchg
fcomi
jmp
push
sub
leave
rcr
sbb
or
add
sbb
rolb
or
sub
mov
fisttpl
mov
frstor
push
mov
inc
mov
and
call
push
adc
cmp
jns
cmp
out
xor
inc
js
fs
aad
orl
fsubs
leave
jb
mov
imul
pop
arpl
mov
fisttpl
sahf
or
xchg
loop
sub
jg
enter
in
in
cmpsb
or
adc
shl
mov
xor
mov
lods
or
rcrl
and
adc
pop
mov
aaa
cmc
shlb
push
add
push
icebp
pop
adc
mov
stos
cmpsb
dec
jns
sub
outsb
sub
mov
mov
cmp
xor
fstl
je
xor
pop
or
or
loopne
xor
je
scas
jg
cmp
popa
test
sahf
fnsave
popf
imul
pop
mov
jb
jmp
mov
mov
ss
dec
scas
rcll
testb
mov
sahf
in
xor
xor
icebp
fildl
jecxz
andb
es
loopne
cmp
mov
jae
sub
mov
pop
iret
ret
sbb
in
les
jle
cmp
adc
fists
xchg
int
and
pop
leave
or
add
push
loopne
es
cmc
mov
adc
mov
xor
or
jns
push
fcoms
add
and
les
ljmp
iret
cltd
mov
popf
pop
in
stos
lahf
fsubs
dec
rorl
in
jle
test
mov
pop
cmp
insb
push
mov
xchg
out
and
cmp
dec
inc
cmc
push
stos
mov
jbe
popa
jmp
ret
dec
aas
push
inc
sub
mov
jb
mov
enter
test
xchg
inc
xchg
mov
pop
sbb
push
test
pusha
dec
and
and
cmp
push
loope
cmp
lcall
push
sub
shrl
or
cmp
push
mov
mov
dec
push
cmc
loopne
xorl
inc
and
int3
sti
xchg
orb
pop
repz
lahf
scas
lods
shlb
push
lds
arpl
push
xchg
xchg
adc
xchg
fldcw
jmp
aam
in
fs
push
inc
pop
pop
in
xor
fcoms
mov
sub
xorl
js
sbb
xorb
popl
enter
rcrl
jge
stos
loop
mov
sbb
mov
loop
and
into
subb
lds
dec
push
dec
jns
cmpsl
out
cld
hlt
sti
leave
cmc
xor
mov
hlt
mov
es
pushf
frstor
cmpsb
outsl
lahf
cmpsl
jb
adc
push
dec
add
jbe
aad
dec
mov
pop
jl
pop
mov
in
mov
ljmp
jg
jnp
sahf
sub
jg
inc
movsb
fcompl
shl
lods
mov
iret
sbb
dec
cmp
jns
jnp
pop
or
adc
mov
lods
insb
mov
stos
mov
pop
mov
cmp
pop
cmc
or
add
popl
lahf
pop
in
mov
iret
pop
sub
xor
xchg
scas
inc
fdiv
mov
jle
add
mull
imul
stos
xor
dec
dec
push
imul
mov
test
bound
inc
hlt
dec
sti
inc
and
add
inc
mov
out
test
mov
jbe
test
inc
inc
and
mov
cmp
ja
jg
cmp
mov
sbb
push
push
shll
iret
cmpxchg
jge
and
shrl
clc
mov
fucomip
push
stos
sbb
shrb
xchg
dec
dec
and
aas
in
or
cmpl
imul
sbb
mov
ljmp
sbb
or
sbb
mov
sub
lret
scas
lea
inc
jne
xchg
ret
je
out
jecxz
addr16
outsb
pop
arpl
test
and
out
ret
push
daa
sub
sahf
cmp
xchg
cmpsb
sar
add
aad
inc
imul
ds
in
cli
pop
jmp
sub
jbe
repz
add
ret
cmc
pop
sarl
cmp
clc
cmpsb
dec
dec
push
or
loope
lds
pop
out
sub
nop
aad
divb
push
jg
inc
mov
push
dec
or
push
jns
cmp
pusha
arpl
push
jbe
in
sub
scas
push
jns
mov
cmc
das
inc
or
xor
ljmp
or
daa
mov
push
cmpsl
stc
std
xor
xchg
shll
and
push
jnp
popa
add
pop
inc
dec
push
add
mov
push
lahf
loope
cld
pusha
or
aad
jnp
mov
mov
adc
adc
cmp
pop
clc
mov
fiadds
pop
cmpb
mov
insl
mov
out
xlat
lret
das
popa
ret
pusha
sbb
sbb
lret
enter
mov
in
mov
outsb
jbe
push
popf
nop
out
dec
push
inc
jbe
lods
sub
xor
push
cmp
pop
xchg
fcompl
cmc
enter
inc
mov
adc
mov
lods
rcrb
inc
mov
shl
xor
inc
xchg
pusha
in
dec
push
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
hlt
gs
cmc
fnstsw
call
ds
ss
mov
jge
jmp
fisubl
lea
mov
and
aaa
cmp
sub
push
jo
add
in
outsl
out
push
mov
sar
stc
pushf
and
xchg
inc
mov
sbb
call
pushf
sub
dec
adc
filds
jbe
leave
or
mov
int
jae
lods
dec
shl
into
xor
pop
dec
aas
aad
jns
xor
adc
ret
mov
aad
fsubr
xlat
pop
pop
dec
xchg
push
lods
cmpsl
xchg
imul
faddl
fcmovnu
out
push
mov
aam
mov
in
cmp
mov
add
jp
mov
push
aaa
cs
arpl
insb
popf
dec
insb
maxps
loopne
or
test
adc
test
jg
jb
mov
push
sub
loope
pop
or
sub
imul
sub
xchg
push
sub
and
bound
in
jno
mov
gs
and
push
int
sti
les
mov
push
jbe
punpcklbw
jle
scas
rclb
in
out
lods
out
shr
push
inc
or
jecxz
adc
inc
and
push
lret
hlt
inc
or
xor
pop
lods
fsqrt
cs
loop
movb
sbb
mov
jae
push
xlat
sbb
mov
stos
sub
je
fwait
cmp
lods
imul
pop
sti
xor
push
xor
aaa
nop
adc
inc
testl
repnz
cmp
push
mov
ss
stos
and
push
scas
lzcnt
or
fnstsw
inc
push
xor
sbb
fdivs
push
testb
test
mov
xor
xchg
sbbl
push
fldcw
adc
inc
sbb
adc
in
or
les
lret
xchg
sub
cmp
and
or
adc
pop
or
nop
test
inc
rclb
xor
jge
dec
jno
ss
stc
xchg
jge
loopne
pop
lret
call
nop
shlb
lea
jecxz
stos
add
sbb
sti
mov
mov
push
gs
cli
adc
fmull
mov
cmpsb
sub
pop
mov
pusha
cmc
cmp
movsl
int3
pop
or
lahf
and
sahf
pop
push
or
test
lds
sbb
cltd
xchg
rcr
ret
std
int
rcrl
xchg
cld
add
shl
push
ljmp
add
pop
mov
push
insb
sbb
inc
cmc
out
push
sbb
lock
ret
mov
nop
hlt
loope
push
fadds
add
mov
cs
dec
lcall
sub
addb
xchg
mov
repnz
mov
push
ds
lahf
and
jmp
adc
cmpsl
inc
mov
push
inc
xchg
lods
out
add
ret
lds
push
es
mov
mov
rclb
addr16
aas
test
out
hlt
push
daa
jl
mov
int
in
adc
mov
adc
pushf
daa
or
daa
cmp
imul
mov
jg
andl
daa
cmc
enter
xor
dec
xchg
sar
das
push
sub
das
cmp
in
je
xor
push
mov
psubsw
cs
mov
push
aas
or
es
fbstp
or
incl
inc
cmp
mov
inc
dec
jl
jno
aad
push
sub
cmp
xor
cli
pop
mov
loop
or
pop
lds
add
sahf
dec
sub
subb
and
pop
in
sbb
xor
add
test
lcall
push
push
clc
and
leave
pusha
xor
imul
insb
mov
aam
add
test
push
add
push
add
jl
and
nop
add
subb
dec
into
xor
jmp
out
fidivrl
adc
mov
push
inc
in
adc
js
and
es
jmp
cmc
enter
sahf
fcoml
in
int
mov
icebp
cli
and
sub
test
sbb
pop
pusha
lea
notb
in
mov
inc
push
mov
es
mov
mov
pushf
insl
arpl
cmp
push
mov
faddl
pop
int3
mov
xchg
lret
pop
imul
push
les
mov
das
bound
jnp
push
int
ret
test
mov
gs
lods
xchg
pop
rcrb
pop
inc
mov
inc
imul
xchg
std
push
lock
fsubrs
outsb
ljmpw
lea
mov
pop
out
into
jp
sarb
push
int
cmp
cmp
out
out
sets
in
fld
or
push
daa
add
stos
push
and
push
ret
pop
into
or
jle
popa
lods
aaa
stos
into
inc
ret
jecxz
movsl
outsl
mov
jnp
sbb
rolb
mov
addr16
rcr
lods
std
ss
jle
mov
test
mov
push
push
out
xor
jo
sbbb
jecxz
dec
jmp
xorl
mov
pop
cwtl
jle
ljmp
out
pop
repnz
cld
jmp
movl
lea
mov
mov
imul
push
lods
lcall
inc
push
and
xchg
mov
push
add
jmp
mov
push
sub
loop
mov
and
mov
inc
punpcklwd
fldl
cld
addl
push
scas
mov
inc
jl
pop
pop
pop
jo
sbb
pop
mov
cmp
and
dec
xchg
gs
lock
cmpsb
test
push
imul
arpl
mov
lods
fnstenv
scas
cwtl
outsb
pop
or
push
add
pop
imul
shl
in
push
push
into
lods
xrelease
sub
add
stc
add
enter
push
dec
in
loopne
dec
cmp
shlb
sub
aam
ja
jbe
cltd
int3
xchg
addr16
daa
jno
out
xchg
add
iret
lret
jl
inc
jmp
sub
mov
cli
lret
mov
ljmp
push
cld
xchg
data16
aas
shl
fdivr
rcrb
in
pushf
cmp
nop
mov
cmpb
mov
add
sbb
pop
imul
add
cmc
mov
or
movsb
rcr
rclb
fwait
lock
jge
imul
xor
wbinvd
push
adc
adc
push
push
xchg
test
xor
es
push
xchg
jo
stos
sbb
in
pop
insb
xor
mov
adc
sbb
leave
andb
mov
gs
or
rcrb
jo
in
and
repnz
test
test
jmp
loopne
pop
xchg
cmp
mov
mov
adc
ret
pop
jle
lahf
xchg
aas
test
fstps
adc
daa
push
repz
jns
nop
bound
int
jle
mov
popa
xor
std
mov
dec
push
inc
hlt
adc
mov
repz
aaa
inc
jns
mov
je
mov
or
or
inc
dec
inc
ret
test
sahf
mov
mov
jg
ret
hlt
in
out
mov
addb
movsl
push
insb
mov
xchg
cmpsb
jno
mov
jle
adc
hlt
xchg
test
add
inc
aad
mov
nop
outsl
push
rolb
ret
sub
or
pushl
test
mov
and
fwait
test
pusha
jnp
cli
xor
psrlw
lcall
repz
fidivrs
mov
outsl
mov
xor
sbb
and
nop
fwait
jp
inc
aas
cltd
repz
in
inc
lods
xorb
mov
adc
int
inc
out
out
push
shlb
dec
sbb
sub
dec
cmp
call
mov
push
pushf
outsb
test
xchg
loop
mov
dec
rcll
sbb
mov
repz
outsb
add
fcmovbe
insl
lcall
pop
les
jecxz
sub
inc
mov
jp
cld
call
mov
fists
mov
mov
insb
popa
int3
out
push
cld
lret
mov
mov
inc
adcl
cmc
jns
jg
jmp
xchg
lock
sbb
cmpsb
sti
push
out
addr16
inc
mov
dec
fisubrl
cwtl
jp
adcl
sbb
or
push
dec
fidivs
hlt
sub
dec
xor
push
lret
sbb
mov
jmp
mov
cmc
xchg
ds
dec
in
stos
mov
outsb
addr16
dec
pushf
rclb
outsb
test
sbb
leave
fwait
ret
sub
arpl
lds
stc
push
sbb
mov
and
jnp
rolb
repnz
sbb
scas
pusha
faddp
cli
xor
dec
push
sbb
pop
loope
adc
aam
je
cmc
lods
adc
dec
inc
and
call
add
cli
ds
sbb
xchg
out
in
jnp
xchg
or
cmc
inc
pop
imul
xor
orb
sbb
or
sarb
inc
jp
es
loope
mov
xchg
in
push
sbb
enter
repnz
adc
imul
and
pop
mov
lea
pop
in
cmpl
add
cli
lcall
frstor
popf
pop
lret
cmp
imul
adc
outsl
and
push
pop
cmp
es
jnp
mov
adc
pusha
mov
mov
daa
ret
adc
xchg
mov
loopne
sbb
leave
jnp
jle
push
mov
and
je
xor
mov
and
or
out
pushf
xchg
aam
sbb
jnp
test
mov
xchg
jae
ror
jmp
lret
push
add
dec
add
sbb
outsb
jg
cld
rcr
lods
ds
dec
pop
pop
cmc
cmp
iret
sbb
jno
aaa
jb
or
mov
nopl
push
add
xchg
rolb
cmp
dec
xchg
shlb
mov
cs
aam
loopne
fildl
xor
aad
test
jae
cmp
pop
repz
mov
cwtl
xchg
std
jbe
cli
jmp
sarl
pop
xchg
push
xchg
sahf
popa
adc
scas
xchg
add
dec
adc
stc
sti
adc
and
pop
into
popf
imul
icebp
cmpsb
push
bound
out
push
cmc
pop
stos
getsec
loopne
aas
fldt
cmpsb
in
adc
ret
xorl
jo
mov
pop
jne
adc
push
rorb
push
sbb
or
cltd
jo
pop
cmp
cmp
adc
sub
in
inc
push
fistpll
xchg
cs
push
and
mov
test
push
movsl
test
xchg
mov
or
xlat
mov
xlat
cmpsl
cmp
jp
dec
xlat
xchg
lcall
sub
das
outsb
push
pop
xlat
in
nop
mov
xlat
ds
xchg
push
subb
mov
inc
xor
jmp
and
cmp
pop
pop
repnz
pop
imul
popa
sbb
cmp
inc
ja
sti
cmpsl
movsb
inc
push
adc
icebp
jb
and
and
in
xor
push
out
sub
sbb
mov
or
inc
fwait
push
lods
scas
push
mov
nop
dec
or
cli
test
adc
pop
std
or
cmp
lret
cmp
mov
cmp
dec
dec
adc
scas
inc
addr16
xor
mov
pop
test
pop
cli
call
scas
arpl
sub
inc
shlb
sbb
scas
push
inc
or
xchg
cmp
les
sub
mov
jmp
aad
and
bound
push
and
and
and
sub
fwait
mov
cwtl
lods
push
adc
mov
mov
pop
or
or
fldt
cli
xlat
sub
xor
mov
mov
imul
test
mov
aad
add
scas
sbb
ret
adc
lret
push
int3
loope
cmp
xor
enter
sti
cmc
mov
aad
jg
jmp
sar
mov
jbe
leave
imul
xchg
cld
inc
mov
subl
or
dec
cs
mov
dec
sub
dec
in
push
imul
adc
aaa
xor
add
mov
sbb
push
out
testb
mov
jae
push
hlt
cmpsb
and
test
push
hlt
loop
call
mov
xlat
dec
dec
add
cmp
in
leave
xor
adc
fsts
sbb
int3
fs
mov
cld
push
cmp
les
notb
xchg
outsb
in
xor
xlat
cmpsb
pusha
ret
hlt
jns
test
std
sbb
roll
push
sti
insl
jge
push
movsl
mulb
jns
mov
push
scas
xchg
or
lret
mov
pop
adc
addl
sub
jp
iret
sub
pop
imul
adc
jbe
mov
aas
pop
fldt
pop
jle
xchg
std
scas
aad
mov
mov
pop
jo
jmp
cld
inc
lds
pop
jb
xchg
test
inc
inc
cmpsb
cwtl
pop
ds
add
dec
fs
sbb
and
push
adc
xchg
inc
or
pop
mov
les
popa
and
xor
jb
rclb
mov
imul
push
call
psubsb
pushf
loopne
or
lock
imul
add
mov
outsl
in
nop
jae
and
or
lret
adc
push
xor
jle
add
push
jbe
repz
aad
dec
repz
imul
stos
scas
ret
adc
sbb
fld
cli
mov
aad
xchg
mov
fcomps
mov
adc
inc
add
adc
dec
jns
pop
mov
pop
addl
and
js
add
inc
mov
lahf
dec
mov
sbb
ret
jo
and
out
cltd
add
fisttps
lret
jnp
mov
out
lock
jecxz
outsb
pop
push
jo
dec
int
pop
pop
push
xchg
pop
jmp
cmpb
xor
test
les
clc
jle
cs
insb
jo
dec
sahf
out
mov
xor
dec
pop
cmp
cmpsb
int
pop
inc
jmp
xchg
xor
mov
add
push
add
sub
stos
arpl
sub
mov
push
xor
jge
jmp
add
mov
bound
pop
mov
sbb
inc
test
jecxz
or
cmp
enter
data16
inc
push
inc
pop
ffreep
jns
add
aaa
scas
insb
push
ds
inc
pop
xchg
adc
mov
cmp
mov
fsubl
dec
jg
mov
jbe
mov
inc
mov
shlb
ljmp
mov
iret
add
xchg
push
jne
in
sbb
fstl
cmp
mov
inc
mulb
call
xchg
lahf
idivb
mov
lcall
fsubl
mov
or
mov
cmpsl
movsl
out
jg
popf
sub
pop
push
and
faddp
xchg
imul
or
loope
test
in
std
or
jne
fwait
add
pop
xor
out
pop
cmp
sbb
ficoml
jns
shrb
jle
icebp
movsb
adc
mov
scas
in
add
cs
mov
sbb
sbb
mov
xchg
dec
shl
imul
lock
pop
ret
add
mov
sub
add
mov
mov
inc
fldl
lds
mov
push
lret
imul
mov
loope
sbbb
fwait
in
into
fsubs
xor
mov
sub
push
xchg
adc
stos
gs
inc
sbb
push
repz
in
pop
mov
and
xor
add
pop
icebp
insb
and
loope
add
data16
fxch
pop
mov
xor
push
jne,pt
cltd
or
pop
inc
loope
adc
dec
pop
mov
call
loope
pop
cmp
in
mov
jmp
jo
int3
enter
daa
pop
mov
push
xchg
lcall
movsb
sub
dec
in
mov
pop
je
jl
mov
sbb
jnp
inc
cmpsl
jae
mov
pop
jg
pop
mov
aaa
call
push
inc
pop
cwtl
movsw
fistpl
je
sub
mov
mov
mov
add
inc
out
xchg
dec
cmp
xor
jb
jno
out
repnz
mov
inc
nop
subl
into
push
loopne
mov
loope
int
inc
jno
test
loope
dec
and
ljmp
arpl
in
dec
into
jp
icebp
imul
mov
push
clc
add
pop
push
sahf
inc
mov
fidivrl
or
add
call
jmp
rclb
xor
in
add
inc
mov
cmc
or
fs
lcall
or
mov
lds
icebp
lds
and
sbb
mov
pop
dec
cmp
outsl
sub
out
cmp
js
mov
int
bound
jp
andb
jne
out
test
mov
jno
lcall
fnsave
loope
inc
cmc
inc
ret
dec
and
xchg
ja
fst
push
or
inc
pop
out
jecxz
and
pop
js
test
cmpb
inc
idivb
fsubs
outsl
push
iret
adc
cmp
pop
add
mov
addr16
mov
lock
dec
sbb
xor
fnsave
sbb
or
mov
xchg
icebp
xchg
pop
dec
adc
push
adc
sub
pop
adc
sub
dec
push
sahf
gs
mov
test
das
adcb
dec
div
idivl
xchg
out
lcall
es
mov
adcb
lahf
inc
sub
pop
xlat
imul
ficoml
lcall
lds
pop
jo
jo
pushf
negl
lds
mov
into
cmp
xor
lds
dec
and
mov
cwtl
mov
adc
stc
mov
jns
lock
sub
int
sub
jb
adc
fstps
gs
jo
adc
mov
mov
enter
imul
mov
sbb
adcb
inc
out
lahf
popf
aad
jle
sbbb
sbb
and
gs
mov
push
aam
adc
sahf
adc
ret
mov
push
adc
test
mov
in
je
adc
push
adc
cld
xchg
pop
sub
dec
jp
dec
xlat
in
int3
rcr
sub
gs
fsubrs
adc
pop
inc
out
out
add
insb
inc
daa
cltd
stos
push
cld
sub
mov
push
xchg
add
sub
sbb
inc
push
fwait
jp
pop
mov
scas
enter
ss
xchg
mov
dec
mov
adcl
in
int3
adc
mov
mov
out
cmpsl
xchg
rcl
out
mov
push
pushf
stos
or
in
repz
push
jle
cmc
add
incb
push
mov
pop
sub
and
dec
ret
fdivs
divl
push
pop
fidivl
filds
xchg
adc
je
dec
ds
shr
jg
mov
adc
inc
xchg
ljmp
mov
clc
push
popa
adc
fsts
test
aad
or
push
test
lods
push
jne
out
shrl
and
movb
popa
push
jbe
cld
negb
sahf
out
lcall
scas
rolb
xor
bsr
mov
iret
out
pop
arpl
jns
fldcw
dec
mov
scas
cmp
inc
pop
pop
adc
jl
cmp
les
jns
in
clc
jmp
lock
xchg
pop
pop
cmpsl
mov
cwtl
cmc
adc
add
inc
push
adc
insl
sub
loop
and
pop
movsl
mov
sarl
lea
and
cmpsl
sub
jmp
jnp
and
pop
popa
iret
loopne
in
ja
les
adc
cmpsb
mov
js
fyl2x
data16
test
rclb
xor
mov
outsl
andl
cwtl
xchg
and
fwait
dec
lret
xchg
out
pop
jb
dec
clc
and
outsb
dec
in
pusha
push
test
mov
push
inc
mov
test
add
aaa
ret
pop
xchg
enter
dec
js
inc
nop
cli
jmp
add
sub
hlt
scas
adc
pop
adc
fisubl
and
adc
js
adc
out
pop
push
enter
shll
loop
daa
push
xor
mov
jl
inc
jmp
mov
addr16
add
xchg
in
add
add
sub
icebp
dec
out
xchg
lea
xor
in
jl
mov
push
fldt
push
push
dec
cmp
int
inc
inc
sti
sbb
xchg
push
adc
cmp
lods
cwtl
cmp
out
test
mov
inc
sbb
sub
add
add
fsubl
outsb
inc
pop
mov
push
cmp
popf
lret
xor
cs
mov
cmp
iret
xchg
or
pop
ja
lea
rorl
lds
dec
sub
xchg
xor
out
lret
ret
dec
pushf
add
lret
fmull
mov
in
lock
cwtl
fidivrs
and
ret
aas
adc
mov
and
ljmp
data16
call
lods
or
lods
mov
dec
sub
adc
mov
lods
in
pop
add
in
and
jns
push
add
sbb
sub
jo
add
mov
daa
aam
aas
clc
sbb
bound
subl
loopne
scas
xchg
fstl
xor
fldt
fucom
lods
or
lahf
into
dec
adc
xor
fs
add
add
jge
jl
or
add
cmc
ret
shll
or
inc
lret
mov
stos
pop
push
jmp
rcrb
shlb
inc
jl
cs
dec
dec
xor
inc
xor
imul
cmpsl
ret
ljmp
xchg
xchg
or
test
adc
ret
dec
sbb
cmpl
clc
add
sub
dec
xor
cs
jb
xor
dec
int3
xor
dec
jg
sti
or
test
popf
daa
ja
jl,pn
fmull
cmp
lods
loopne
cli
loopne
inc
fwait
loopne
divl
push
fsubrp
int3
into
test
dec
adc
mov
int3
mov
fs
push
jno
sub
pusha
jl
sbb
out
fsubl
xor
mov
ljmp
dec
imul
fwait
inc
or
push
jae
and
xchg
mov
aad
pop
sbb
clc
hlt
loop
push
negl
jle
icebp
xor
je
and
adc
push
repz
and
lcall
repnz
adc
mov
pushf
jnp
cmp
inc
and
sarb
jecxz
pcmpgtw
jno
cmpsl
repnz
mov
sti
gs
fstps
xor
jae
push
gs
cmp
mov
sbb
je
pop
mov
gs
icebp
test
cltd
mov
adc
sbb
addr16
mov
push
cli
sbb
sub
push
ja
mov
popf
or
adc
jo
inc
xlat
data16
in
test
sbb
out
inc
cmp
pop
pusha
je
cmp
punpckhwd
iret
aas
push
scas
addr16
in
sbb
and
mov
adc
pop
or
mov
lret
adc
jno
mov
aaa
pop
aad
add
in
aam
es
sub
push
mov
rcr
xchg
mov
cmp
push
dec
mov
mov
pop
or
leave
push
dec
shll
clc
mov
jecxz
scas
out
lret
clc
sub
inc
inc
or
pop
xchg
test
inc
subb
lahf
repz
faddl
push
arpl
shl
adc
imul
jae
push
pop
push
lea
das
or
dec
ret
or
lcall
jns
jno
pop
and
lds
out
xchg
out
and
rcrb
sub
cmp
adc
and
repz
mov
push
add
adcb
push
xchg
sub
rorb
push
sub
out
xchg
mov
pop
mov
push
push
popa
jg
mov
lods
add
add
add
mov
xor
test
cli
pop
stos
mov
stc
data16
and
insl
cmc
es
stos
push
aas
xor
push
inc
or
aad
fstps
aas
mov
outsb
lcall
dec
iret
repz
and
fisttpl
jmp
mov
xchg
es
inc
and
negl
mov
jnp
push
push
sbb
cmpsl
stos
dec
pop
insb
lock
les
jg
dec
cmp
sbb
inc
call
stc
ljmp
jb
sub
push
cltd
dec
xchg
mov
cmpb
push
aas
xchg
pushf
cmpsb
cs
stos
pop
aam
jne
pop
scas
andb
dec
aaa
lock
iret
ja
test
xor
repnz
jns
pop
mov
xor
mov
sahf
xor
sbbl
mov
cli
dec
aam
inc
repnz
add
fadds
mov
je
adc
stc
stos
repz
or
inc
lods
pushl
out
push
jmp
int3
dec
push
push
push
repz
cmp
pop
cs
fmul
aad
dec
jbe
cmpsb
je
push
sarb
push
adc
and
jo
cmp
inc
add
mov
jp
ja
jmp
clc
insl
les
mov
pop
adc
das
adc
xchg
inc
out
sbbl
xchg
dec
fwait
cld
movsl
stos
xchg
dec
push
test
xchg
jae
push
mov
push
movsb
ds
fldcw
clc
sub
lea
xor
mov
sti
out
xchg
sbb
int3
sub
out
or
mov
adc
sub
and
pop
mov
xchg
dec
push
pop
out
push
and
add
mov
pop
lcall
and
sub
insl
dec
adc
es
xor
fidivrs
mov
jle
in
popa
or
shll
fldcw
in
jecxz
cmp
je
xor
aas
out
push
cmp
adc
in
pop
popa
mov
sbb
addl
cmpsl
or
repz
repz
and
es
jp
pop
enter
push
mov
push
add
bound
int3
sti
mov
xor
push
sbb
xchg
cld
loopne
ja
rorl
mov
mov
fsubr
and
and
lock
xor
cmpl
aad
out
add
cmp
repnz
sub
inc
cld
push
pop
cmc
into
out
fsubp
push
mov
fs
dec
cwtl
jg
ja
mov
mov
ret
inc
loope
cli
mov
sahf
xchg
pop
adc
xchg
lock
pop
push
mov
adc
pop
pop
add
mov
pushf
jo
dec
dec
rdtsc
arpl
or
jne
push
inc
cmp
shrb
cmp
sarb
test
push
nop
lods
rolb
push
add
mov
add
pop
aaa
stos
push
aad
pop
test
in
test
jle
push
cmp
loope
jg
pop
mov
fiadds
stos
sbb
and
jg
cld
jo
xchg
test
adc
loope
xor
or
xor
xor
lret
jg
jo
add
loope
cmp
inc
mov
cmpsb
in
scas
mov
cmp
pop
mov
and
inc
jmp
jecxz
out
fadds
sub
mov
push
dec
sub
cld
imul
scas
cmp
dec
pop
andb
cmp
xchg
stc
cwtl
cmp
sbb
addr16
scas
pop
lods
aas
jae
cli
add
xchg
lret
mov
mov
xor
xor
push
mov
lods
insl
cwtl
add
cmp
xor
lcall
pop
fcmovbe
xor
shlb
sbb
sub
adc
jne
in
mov
shrl
mov
lds
mov
iret
jecxz
push
push
xchg
jnp
mul
dec
pop
xchg
in
inc
ja
daa
mov
cs
xor
out
es
and
fadds
sbbb
mov
sub
sub
xchg
add
lret
ret
in
ficompl
sbb
sub
sahf
push
leave
leave
clc
dec
push
fstp
jne
inc
dec
sar
mov
mov
dec
lret
cld
mov
mov
mov
xchg
scas
push
popf
leave
andb
mov
push
outsl
enter
push
ljmp
fbld
lahf
lods
loopne
add
fdivrp
les
shl
or
jmp
cmpsl
cld
vcvtps2dq
fldl
shl
in
movsl
das
mov
mov
sti
xchg
outsb
lds
sbb
pop
aaa
fucomp
popa
jno
add
in
mov
sub
ljmp
jecxz
jg
cmp
pop
das
iret
jecxz
add
cld
stos
inc
or
mov
enter
out
dec
and
add
and
sbb
pop
aaa
jne
mov
and
repz
push
rcrl
push
imul
ljmp
and
mov
inc
xor
and
pop
cld
lods
or
mov
fimull
aam
fcomps
fisubrs
cwtl
das
xorl
cmpsb
addr16
and
and
movsb
add
adc
out
sbb
cwtl
add
jno
scas
pop
mov
jne
les
jo
cmp
mov
jg
movsb
and
adc
push
or
pop
sar
xchg
pop
mov
mov
popf
stc
jns
sbb
jl
adc
int3
cmp
jo
and
out
in
clc
shl
cmc
sub
jnp
cmp
ljmp
call
and
cmp
push
sarb
rorl
pushf
jcxz
xchg
aam
imull
mov
and
mov
add
shrb
mov
mov
daa
lcall
cmp
mov
mov
imul
push
rcr
push
shrl
ljmp
bound
pushf
sbb
mov
ss
repz
and
push
xor
imul
inc
rcrl
fstp
das
mov
fisttpll
xor
cmpsl
fmul
mov
sbb
imul
les
test
jecxz
in
sub
mov
shll
sub
enter
ss
add
ret
pusha
stos
mov
cmc
ss
pop
jmp
gs
lret
dec
clc
loope
dec
sbb
mov
mov
jbe
inc
push
xor
jae
insb
aaa
pop
push
aaa
das
aaa
test
aam
movsb
xchg
negl
cmp
in
mov
insb
adc
cmp
les
mov
or
or
sbb
ljmp
dec
call
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
jp
rcrl
cmp
lcall
mov
xchg
ds
cmpsl
daa
not
xchg
fs
in
lds
sbb
test
or
adc
xor
rcll
add
jnp
jb
rol
cmp
pushf
test
dec
clc
xchg
mov
xchg
rclb
mov
in
xor
dec
jbe
sub
in
xchg
jecxz
les
add
daa
push
lea
iret
sahf
shl
xchg
xor
pop
mov
addr16
push
outsl
mov
dec
adc
inc
xchg
add
push
dec
aas
lds
xor
scas
call
andb
int3
xchg
ss
lea
lods
mov
cmc
fstps
pop
test
in
insb
jmp
inc
jno
jbe
push
sahf
push
push
xchg
imul
fcmovbe
cmp
loope
sbb
push
loope
cmp
mov
and
mov
push
push
sbb
stc
dec
mov
out
push
jno
sti
int3
xchg
sbbb
add
sub
xor
or
outsl
insl
and
mov
fldl
jle
sti
ret
mov
in
sbb
movsl
imul
cltd
jp
popf
mov
xchg
je
xchg
sbb
jne
push
cmpsl
ret
aas
add
mov
push
add
cmp
cmpsb
sbb
lret
or
imul
dec
rclb
push
mov
mov
jecxz
loopne
dec
loopne
pop
lock
out
js
inc
out
scas
xor
fdivr
jne
enter
loope
movb
adc
push
addb
sbb
stos
lret
mov
dec
and
jle
icebp
mov
cmp
jbe
cmpsb
sbb
cmp
imul
dec
repnz
iret
rcr
dec
into
outsl
in
stos
or
and
cld
dec
sub
cmp
or
dec
roll
shlb
enter
iret
fstps
cmc
mov
aam
jp
cmc
fistpll
rcrl
popa
cltd
out
ja
sahf
xchg
out
aam
lahf
out
js
inc
pusha
or
xchg
bswap
dec
out
cmp
popa
cmc
imul
pop
inc
sub
pop
add
pop
lods
aam
and
jbe
and
mov
ljmpw
sti
mov
scas
outsl
push
orl
jl
adcl
pop
xor
pop
cmpsl
mov
out
jns
mov
addr16
test
push
adc
pop
mov
mov
ret
inc
mov
sub
int
cmpsl
inc
jbe
push
nop
daa
in
mov
clc
lock
pop
imull
add
push
or
xchg
jmp
inc
push
enter
shlb
jnp
aad
std
adc
outsl
mov
jp
or
mov
out
loop
dec
pop
cmpsb
mov
daa
push
insb
add
mov
cmpsb
scas
repnz
int
dec
rcll
fcomps
popf
or
popl
scas
cmpsl
out
cmc
xlat
pop
loope
outsl
push
jns
inc
jl
jp
fmuls
scas
mov
push
fcoml
mov
out
add
pop
xchg
insl
mov
dec
roll
dec
pop
lods
lret
xchg
mov
push
push
push
add
cmp
xchg
xchg
or
xlat
out
and
cmpsl
mov
cmp
or
fistps
test
mov
jb
lret
xor
mov
lds
adc
xchg
cmp
cmpsl
sub
cmp
cmpsb
add
test
push
out
scas
sti
fdivl
in
dec
or
cltd
inc
cli
pop
cmp
sub
js
jmp
lea
cld
or
jl
out
cmc
sub
das
cmp
bound
jo
add
lock
inc
test
cmpsb
xor
add
xchg
and
inc
push
cs
lcall
jecxz
jne
test
int
add
and
enter
jg
push
add
jge
subl
enter
xchg
das
adc
rclb
sub
cmpsb
aad
shlb
mov
scas
repz
std
dec
js
or
xor
imulb
inc
dec
add
lahf
rorb
dec
mov
inc
ffree
xchg
daa
fs
mov
hlt
insb
mov
and
in
cld
or
sbb
push
icebp
loope
test
add
lea
mov
push
shr
cwtl
stos
loope
fildll
adc
lcall
aam
syscall
mov
arpl
sub
jl
stc
int
iret
jmp
mov
adcb
movsl
test
roll
fisubrs
mov
jg,pt
and
bound
mov
push
mov
jnp
scas
ljmp
push
movsb
aaa
sub
gs
fimull
or
dec
in
or
add
out
mov
adc
push
jg
repnz
mov
pusha
mov
movsl
push
mov
pop
cmp
stos
loope
or
inc
scas
cli
test
es
test
jecxz
mov
push
push
das
out
or
stc
pop
iret
xor
orl
add
sbb
xchg
pop
pop
orb
push
inc
std
and
jbe
lock
lea
adc
das
dec
xor
xor
movsb
xchg
jno
xlat
popf
out
iret
xor
add
sbb
insb
push
push
jb
sbb
push
ja
pop
cmp
addr16
adc
outsl
std
enter
imul
insl
inc
add
daa
add
mov
cmc
pop
clc
loope
iret
sub
lahf
inc
inc
scas
imul
or
das
mov
sbbl
cmp
push
jbe
test
out
mov
xchg
jmp
add
pop
xchg
mov
sbb
push
js
mov
sbb
jge
shlb
xchg
jb
aad
ljmp
leave
dec
adc
iret
inc
xchg
inc
imul
push
mov
pop
cmc
and
movsb
or
push
sbb
xor
int
and
push
and
ds
stos
push
call
nop
push
xchg
jle
rcrb
fsubs
inc
shll
and
xchg
xor
lods
loopne
push
mov
test
or
mov
pop
js
sbb
scas
cmpsb
inc
mov
inc
mov
std
and
push
cltd
cli
push
cmp
addb
add
sbb
nop
adc
add
xchg
push
mov
jmp
clc
mov
xor
cmpb
dec
jns
imul
cmpsl
xor
in
lahf
lret
in
ljmp
ret
mov
xchg
pop
push
add
or
test
cmp
dec
pop
andb
fnsave
xor
add
inc
gs
xlat
push
ja
scas
pushf
sbb
push
inc
mov
push
mov
or
mov
stos
popa
shr
push
xor
in
xchg
mov
xchg
and
enter
sbb
jae
cmc
jbe
test
sub
xor
sbb
hlt
mov
lret
cmp
data16
movsb
adc
pop
decb
sahf
and
rcr
in
stos
pusha
mov
ret
sahf
movsl
aam
lahf
sub
insl
inc
mov
xchg
pop
push
mov
or
cmp
aad
sbb
sub
arpl
push
jns
push
mulb
inc
pop
xor
fldl
scas
cmc
xchg
cmp
sbb
inc
mov
jge
xor
adcb
mov
scas
call
arpl
mov
fisubrl
mov
cmp
cltd
cs
or
mov
mov
and
popf
add
pop
push
add
mov
cmc
pop
lea
or
inc
leave
call
fs
inc
int3
xchg
sbb
out
in
fwait
in
and
ja
roll
add
fnstcw
popa
insl
insb
xchg
xor
inc
imul
flds
push
mov
es
cmp
lods
das
dec
push
push
mov
ret
mov
sbb
jmp
test
push
adc
jmp
cmp
stos
stos
or
and
daa
add
push
fidivs
loopne
pop
adcl
lods
jl
push
and
out
lahf
jmp
fistps
loopne
pop
mov
mov
fnstsw
fcos
fists
xchg
outsl
inc
loop
mov
add
test
or
cmp
fs
out
sbb
negb
or
iret
jo
das
and
mov
inc
clc
int3
outsl
push
xor
rcrb
cli
shll
mov
lds
in
sub
test
xor
push
xchg
mov
cwtl
fwait
insl
or
push
daa
das
adc
pop
ja
dec
jg
fidivl
lret
jnp
push
mov
mov
test
mov
push
xor
push
xchg
insb
cwtl
repnz
in
mov
lret
cmpsb
sub
push
sub
arpl
dec
stos
fcmovb
pop
aad
testl
cmpsb
push
popf
jmp
sub
out
push
je
mov
subl
push
push
sbb
sub
stc
loopne
dec
iret
lds
iret
insl
pop
pop
mov
push
mov
lahf
cmpsl
aad
aas
add
mov
add
sub
sbb
sbb
ret
add
mov
ror
stos
cmp
push
cmp
fadds
push
test
jg
mov
sbb
mov
inc
ror
sahf
adc
jo
inc
popf
sbbl
mov
xor
mov
imul
push
mov
jno
mov
out
cmpsb
jle
es
imul
leave
aaa
xchg
fs
cs
pop
push
mov
lea
adc
lds
mov
out
ds
sub
jg
imul
or
mov
mov
adc
into
imul
inc
mov
jmp
andb
loope
and
xor
push
sub
fwait
cmpsl
leave
mov
add
shl
mov
hlt
adc
cmp
fadds
fstps
mov
loopne
sti
mov
lret
nop
test
pop
add
movsl
jne
adc
jmp
inc
sub
mov
das
gs
and
or
pop
sbb
fidivl
lds
leave
fdivl
push
and
fdivr
xchg
iret
xchg
insl
arpl
jae
xchg
arpl
add
cmp
adc
and
jp
fs
jle
jl
mov
pop
in
cmp
out
pushf
push
push
es
popf
fisttpl
sarb
push
ds
jp
jne
inc
mov
or
subl
lds
inc
loope
out
out
or
out
and
jns
test
outsl
test
mov
ficoms
or
fsubl
dec
mov
fneni(8087
dec
and
sbbb
or
fs
mov
loopne
into
jge
adc
and
pop
and
insl
jle
in
pushf
ret
pop
inc
mov
addr16
mov
add
aas
or
jecxz
xchg
jne
repnz
or
stos
adc
mov
sbb
cmp
test
out
fidivrl
dec
push
test
cmp
mull
loop
sub
inc
cmp
ret
jg
xchg
ja
lock
lahf
stc
lcall
cmp
andb
pop
cmc
loope
mov
sub
into
mov
scas
mov
inc
sub
lcall
aas
mov
ror
push
and
adc
jae
popf
js
mov
xchg
les
sub
psubw
adc
sar
lahf
push
xor
add
fists
int3
push
loope
sbb
iret
pop
rcrb
lahf
pop
stc
int3
and
bound
adc
mov
pushl
jns
jmpw
jo
push
push
sahf
stc
pop
sbb
fdivrl
int3
mov
add
fstpt
adc
mov
fcmovnb
add
jg
inc
outsl
xor
roll
aad
jns
adc
and
inc
mov
in
pop
fcmovnbe
mov
mov
cli
insb
dec
mov
lods
or
and
mov
dec
scas
dec
cmc
add
stos
sub
sbb
daa
xchg
iret
xor
fldt
negb
and
stos
xchg
inc
dec
or
pop
mov
mov
sarl
gs
stc
es
lret
sub
lock
fs
push
push
arpl
lock
inc
inc
xor
dec
cmp
es
dec
andb
push
inc
pop
jno
jp
push
push
scas
adc
cld
sub
push
adc
push
dec
push
cs
in
xorb
add
int3
das
testl
jle
mov
push
mov
sub
jp
mov
pop
jnp
fdivs
mov
jno
mov
insb
jmp
adc
nop
andl
inc
xchg
sbb
out
jbe
lret
sbb
jns
pop
pop
jne
and
cmpsl
mov
jb
mov
inc
lret
mov
je
xchg
push
iret
dec
pop
pop
hlt
add
sahf
mov
jno
fcmovbe
xor
push
in
xor
push
arpl
jg
jmp
clc
and
lock
loopne
inc
push
jbe
jmp
and
mov
xlat
cmc
add
enter
lret
mov
cmp
pop
dec
sub
push
jbe
inc
insb
pop
aaa
popa
add
les
bound
scas
sub
cmp
cmp
sbb
lds
xchg
stos
dec
sbb
inc
xor
sarl
inc
ds
insl
jae
xor
cwtl
dec
add
loope
popa
xor
mov
aas
dec
pop
negb
push
inc
pop
add
jae
test
ret
dec
js
jle
inc
out
outsb
cs
iret
mov
pop
insb
push
xchg
and
adc
and
out
mov
mov
inc
pop
imul
pop
inc
adc
mov
xchg
inc
repnz
shlb
decb
mov
lret
adc
stos
je
int3
mov
out
test
roll
test
shrl
mov
dec
push
jmp
test
stc
or
and
cmp
mov
mov
dec
cmp
popa
dec
pop
test
out
fwait
xlat
sub
and
xchg
mov
fstl
sti
lods
pop
or
pop
dec
jmp
cmpsb
mov
pop
push
mov
xchg
jne
mov
imulb
and
xor
mov
pop
push
jno
jecxz
stos
or
ljmp
push
sbb
pop
cmc
or
xchg
gs
dec
and
in
pop
mov
sub
stos
pop
ss
les
clc
xor
int3
iret
test
int
arpl
je
adc
add
in
mov
sbb
daa
shrl
jno
mov
sbb
jne
insl
jmp
push
insl
mov
sbb
push
lea
cmc
es
inc
movsl
aas
add
lods
mov
fnstcw
out
or
subb
ljmp
fucomi
cs
pushf
add
imul
movsl
movsl
shl
addr16
insl
call
stos
ja
push
mov
add
fisttpl
add
mov
xchg
pusha
ret
sti
fiaddl
jmp
stc
lds
dec
push
sbb
mov
shll
inc
daa
repnz
jle
repz
icebp
mov
sahf
and
lret
shrd
fisubrl
outsb
pop
dec
repnz
cwtl
je
pushf
jecxz
scas
xchg
test
icebp
in
mov
and
xor
mov
jl
inc
cmp
testl
push
lret
sahf
repnz
fisubrs
mov
cmp
dec
jns
add
movsb
mov
int
mov
into
jg
inc
cmc
in
cmp
sti
loopne
imul
aaa
or
cmp
fisubs
fcoml
xchg
enter
loopne
shll
shr
cwtl
sub
push
movsl
roll
jmp
aam
outsl
mov
int
jp
sar
inc
pop
imul
push
lret
ljmp
xchg
xchg
push
rcll
xchg
jne
test
inc
ss
xchg
sub
push
icebp
test
lret
adc
das
out
je
pop
cwtl
mov
movb
fidivl
or
sbb
loopne
lods
sbb
sbb
jecxz
icebp
mov
inc
out
push
dec
xor
and
push
inc
mov
adc
mov
clc
and
sub
ret
test
dec
adcl
fsubrp
enter
jno
adc
mov
mov
sbb
test
das
sub
stos
ss
or
es
mov
dec
inc
popa
push
mov
sahf
addr16
lahf
ja
pop
je
jle
pusha
out
inc
gs
data16
ja
add
sarb
fists
jl
mov
shlb
mov
mov
fcmovne
mov
and
jns
xchg
dec
rcl
or
pushf
push
lods
ljmp
sub
and
push
cmp
push
or
push
xlat
and
loop
lods
inc
add
add
xor
clc
jecxz
cwtl
imul
ljmp
nop
fstpl
sahf
mov
rcrl
cmpsb
cmp
ficomps
loope
lds
mov
pop
jns
and
scas
cmp
push
nop
jno
fmuls
ret
in
shll
fstl
pop
mov
gs
xlat
add
and
xchg
pop
or
sti
ss
cs
ds
sbb
mov
insb
cmp
push
fwait
test
movsl
or
nop
add
repnz
dec
pop
lods
dec
cmpsl
pop
pop
xorl
clc
add
arpl
jle
jg
lea
cld
cs
mov
mov
jbe
inc
test
pop
out
cld
push
push
mov
xlat
into
movsb
lret
cmp
sbb
xor
adc
loope
lods
mov
loop
dec
test
cmpsl
pop
cmpl
xor
fsubrp
in
nop
insb
lock
xor
leave
stos
mov
jecxz
ret
arpl
rcll
orb
mov
xlat
xchg
sbb
int3
fwait
jmp
pop
pop
push
cld
xchg
pushf
rorb
out
movsl
jg
push
push
les
mov
jge
push
lret
rcrb
mov
jb
and
cld
mov
mov
jno
sbb
sub
push
inc
sub
jge
sub
add
lret
mov
xchg
pop
addr16
pop
xchg
mov
pusha
popf
xor
stos
push
rol
push
add
adc
scas
fmull
movsb
aam
js
fidivrl
in
insl
push
push
imul
stos
out
sti
cld
xchg
mov
jg
jmp
inc
movsb
int3
lods
sub
pusha
call
jle
inc
ja
pop
js
insl
call
loope
push
in
insl
mov
out
sbb
cmp
icebp
sub
ficompl
sahf
xor
repnz
stos
ja
xchg
test
push
hlt
fldt
aaa
mov
xchg
inc
mov
lods
ja
scas
repz
dec
inc
test
jae
pusha
sbb
in
flds
or
int3
rcrl
in
aaa
shlb
xor
pop
adc
push
dec
outsl
sub
mov
xor
jg
lods
enter
push
aas
fistl
scas
out
jmp
fiadds
sbb
xchg
mov
leave
movsl
dec
insb
jecxz
scas
sub
addr16
lahf
ja
add
sbbl
sbb
and
andb
jmp
loopne
cmp
test
mov
xchg
or
call
leave
test
add
nop
mov
xchg
cld
insl
push
mov
enter
xchg
mov
mov
bnd
iret
xor
mov
jbe
sti
mov
push
ja
jmp
cmp
in
adc
jg
jno
adc
pop
bound
int
in
ds
ss
data16
mov
in
rolb
sbbl
dec
mov
lods
cmpsl
cmp
scas
xchg
or
adc
cmc
bound
cwtl
stc
cld
mov
and
fs
insb
lahf
bound
sub
icebp
sub
enter
loope
jne
ja
stos
mov
cli
je
cmp
je
jo
addr16
cmpb
loope
in
sub
imul
repz
lea
lahf
push
dec
lret
daa
out
imul
add
and
push
add
pop
push
xchg
bound
cli
ljmp
pop
mov
mov
repnz
inc
pop
cld
inc
test
add
jl
and
jmp
mov
cmp
push
imulb
sbb
push
cmp
out
lods
jnp
enter
addr16
test
idiv
jnp
mov
sub
aad
mov
in
iret
jno
loopne
add
in
pop
pushf
cmp
dec
mov
lahf
faddl
mov
dec
stos
inc
js
dec
sub
mov
jecxz,pn
ljmp
xchg
outsl
xorb
stc
lods
sbb
pop
in
push
js
repnz
xchg
adc
aas
jecxz
jg
push
pop
mov
scas
pop
aad
xchg
cltd
pop
pop
out
or
lar
addr16
fs
scas
cld
push
xor
push
hlt
inc
movsl
pop
sahf
mov
xchg
aad
jne
dec
sub
and
scas
bound
inc
pop
stc
xor
loopne
mov
dec
sti
inc
pop
jle
mov
lcall
mov
cwtl
cmp
cli
cmp
pop
outsl
scas
dec
movsb
sub
pop
mov
xor
shll
sub
mov
pushf
inc
dec
popa
jbe
mov
ficoml
sub
dec
xchg
sub
fcoms
xlat
cs
or
ljmp
mov
rorl
inc
es
mov
push
les
xorb
out
int
push
iret
or
sbb
popa
or
mov
mov
jne
faddl
xchg
dec
or
sbb
out
xchg
jb
or
mov
push
js
ljmp
popf
int
setno
mov
inc
je
adc
xcrypt-ecb
cmpsl
iret
or
inc
pop
repz
push
pop
push
mov
mov
cs
inc
jbe
pusha
outsb
dec
inc
mov
push
test
dec
cltd
ret
inc
imul
mov
stc
dec
test
pop
enter
pop
sub
test
pop
cli
bound
adc
out
sub
out
push
hlt
mov
mov
pushf
call
pop
lret
bound
lds
cmpl
lds
sbb
shlb
pop
arpl
mov
cwtl
pop
and
mov
mov
out
iret
or
scas
pop
inc
xchg
lcall
sar
xor
dec
int
lret
mov
in
push
jg
rcrl
stos
jns
lret
inc
out
test
adcb
mov
dec
xor
xchg
adc
stos
repnz
insl
in
leave
sbb
es
mov
sbb
jns
adc
es
dec
mov
cli
andb
sub
xchg
sub
and
inc
adc
notb
pop
shl
addl
pop
xchg
xchg
push
mov
iret
pop
nop
loope
clc
aas
xchg
jns
ret
scas
fisubrs
test
in
dec
fsubs
mov
fbld
cmc
fisubl
mov
mov
jl
push
dec
lods
popf
push
ja
ret
jnp
and
sub
pop
andb
sbb
mov
seto
jp
sbb
imul
inc
addr16
mov
xchg
insb
cmpsl
push
test
andb
jno
push
int3
cmp
testb
je
inc
cld
cmp
ljmp
or
adcb
mov
out
ljmp
ja
pop
xchg
fistpll
lahf
stos
adc
inc
inc
je
imul
push
cmp
mov
dec
in
add
sub
fwait
push
arpl
sub
mov
sub
scas
dec
jmp
mov
mov
lahf
dec
dec
aaa
lea
pop
ss
mov
add
mov
mov
dec
mov
ret
push
cwtl
dec
xor
pop
sub
sahf
nop
sub
cli
lcall
stc
repz
push
scas
aam
or
nop
mov
stos
imul
and
xchg
jo
mov
ds
add
xor
pop
inc
push
ds
imul
movsb
scas
ds
fnstcw
mov
jno
loop
mov
mov
adc
xchg
pop
pushf
subb
pop
pop
mov
push
stos
mov
xor
mov
or
mov
out
jecxz
sahf
cmp
scas
test
adcl
dec
repz
mov
or
sti
push
push
dec
sbb
sbb
aas
dec
cmp
aam
jnp
mov
pop
je
dec
xchg
cmp
je
ds
inc
pop
div
cltd
sar
cmovo
ljmp
mov
mov
adc
lods
add
das
push
inc
add
or
lods
cltd
mov
outsl
movsb
or
pushf
ret
popa
mov
in
je
dec
gs
iret
xchg
cmp
sbb
mov
xchg
adc
jge
fwait
aad
addr16
adc
jnp
xor
sub
mov
cmpsl
out
dec
sti
cltd
mov
pop
sbb
push
out
or
xchg
cmp
cltd
jmp
stos
add
jge
inc
xor
insl
rorl
std
testl
fcoml
jg
adc
lret
cmpsb
sub
adc
push
adc
clc
mov
ljmp
cmp
fs
aam
sbb
xchg
test
test
call
cmp
out
orl
insl
cmp
test
cmp
pushf
test
pop
in
add
rorb
sub
adc
rcr
lcall
xor
dec
cmp
int3
and
xchg
mov
aas
int3
lock
cld
add
or
mov
jno
cmp
sub
jp
xchg
mov
xchg
sbb
pop
out
pop
and
in
mov
jb
filds
push
pop
call
jbe
and
in
in
pushf
ret
adc
and
lahf
mov
jecxz
pop
push
xchg
dec
mov
fucomip
mov
ljmp
push
sbb
repz
add
fidivrl
les
hlt
cli
lods
cmpb
repz
cmp
lods
ljmp
mov
sub
cli
add
sbb
sti
repz
scas
sub
sub
cli
and
mov
lret
push
lcall
sbb
adc
aad
jp
popf
cmp
xorl
xchg
sub
jo
xchg
ret
sahf
inc
cli
mov
pop
adc
aad
ja
push
dec
dec
cmp
pop
mov
and
call
out
orl
outsl
jnp
fs
sub
jne
out
fdivrl
mov
insb
or
add
push
adc
insl
sti
cmp
cmc
vpmuludq
lock
mov
fs
jmp
cmp
rcrl
subb
pop
push
stc
inc
sbb
ficompl
les
in
sbbl
adc
sub
sarl
add
inc
adc
lock
push
lret
in
jo
mov
bound
mov
arpl
adc
mov
push
scas
push
fldcw
mov
jl
loope
push
mov
loope
push
icebp
orl
fcoml
stos
xorl
pop
icebp
adc
clc
bnd
ds
dec
sub
dec
cmpsb
jo
lret
call
mov
xor
pushf
rorb
bound
sbb
jb
dec
cli
movsl
loop
add
mov
jle
scas
shll
cmc
push
fldcw
stos
cs
pmuludq
xorb
into
mov
and
cwtl
lret
nop
cmp
aam
or
fcomip
fimuls
fistpll
push
aaa
and
addr16
rcrl
adc
lahf
fiadds
iret
clc
adc
mov
int
lds
mov
pop
lahf
mov
fwait
xlat
mov
push
pop
mov
aam
sbb
mov
fnstcw
out
psubw
out
sahf
jae
dec
xor
cli
rorl
push
stos
test
mov
mov
jl
cmp
inc
sub
or
stc
out
adc
add
enter
jb
jp
jbe
int3
push
sahf
rep
int3
scas
lret
lahf
mov
int
sahf
mov
aaa
xor
data16
rcll
or
xor
sbb
jne
or
rcl
rep
js
lods
loop
dec
and
movsb
std
or
inc
dec
xlat
pop
icebp
les
mov
mov
mov
push
fstl
and
inc
mov
into
mov
mov
mov
pusha
adc
adc
mov
call
mov
or
outsb
jmp
xor
daa
lahf
jbe
push
or
scas
cld
pushf
sub
or
ret
adc
movsl
mov
inc
fcomps
inc
pop
cmpl
ss
adc
imul
or
scas
add
mov
cmp
test
leave
mov
loop
call
fistps
push
popa
jns
fwait
mov
aaa
add
ret
push
inc
jno
adc
mov
adc
call
pop
mov
mov
pop
jne
repz
call
push
jl
dec
loope
pop
cmc
movsl
sbb
lods
cmp
xchg
mov
pusha
les
test
xlat
push
mov
sub
jne
negb
lds
add
push
cli
loopne
stc
shll
jge
int3
cmp
movsb
call
pushf
stos
lret
out
push
hlt
inc
loope
jl
or
imul
sarl
mov
fwait
jmp
ret
lahf
in
fsts
aas
dec
sbb
aaa
mov
mov
popa
bound
out
ljmp
shll
subb
out
div
ja
and
cmpsb
sub
xchg
adc
mov
and
gs
pop
adc
adc
test
push
rcrb
mov
push
nop
loope
sub
mov
gs
jns
shll
out
les
in
dec
lods
rorl
out
rolb
mov
lahf
pop
shlb
ret
gs
sar
es
mov
inc
lods
or
xchg
mov
mov
xchg
cltd
mov
add
or
xlat
mov
ljmp
or
and
in
xor
in
push
fucomip
dec
mov
cltd
jbe
jmp
mov
andl
imul
cmpsb
cmp
lahf
sub
je
repnz
lds
lret
das
in
pop
bound
cltd
xchg
scas
inc
fadd
lret
jecxz
arpl
test
int
mov
push
int3
pop
and
es
mov
or
xlat
add
lahf
lods
xchg
xor
and
cmpsl
xor
or
daa
cmp
and
ljmp
inc
sub
mov
cmp
inc
dec
mov
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
push
hlt
lds
mov
jnp
sbb
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
