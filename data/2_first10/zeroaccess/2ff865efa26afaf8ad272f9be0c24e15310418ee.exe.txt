push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
add
push
push
sub
push
push
sub
xchg
cmp
sbb
push
popf
inc
mov
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
xor
repnz
sahf
sub
pop
shll
fisubl
inc
push
xor
or
test
cmp
hlt
xchg
mov
jae
test
aam
out
lret
push
gs
sub
ficompl
add
ss
divps
stos
mov
les
scas
jns
add
inc
cmp
lret
ret
es
daa
or
dec
data16
outsb
ud1
rcrl
inc
push
sbb
lea
mov
pop
push
sub
xchg
test
ljmp
out
jne
lahf
icebp
ret
inc
mov
pop
xchg
pop
dec
dec
xchg
or
xchg
or
mov
jg
pop
jmp
push
arpl
ret
xchg
mov
enter
sub
inc
repnz
sub
outsl
jle,pn
stc
aam
out
adc
ss
divl
cmpsl
mov
sbb
iret
pop
sbb
and
push
cmp
mov
movsl
rclb
mov
cmp
pop
rol
jp
pop
fsubp
inc
push
sbb
sbb
rclb
repnz
jecxz
int3
push
icebp
mov
js
imul
sbb
adc
stc
js
repnz
add
orb
jne
arpl
jmp
adc
push
cwtl
loopne
xor
std
xorl
mov
popa
cltd
dec
inc
outsb
xor
or
in
mov
outsb
cwtl
xor
pusha
lret
fwait
ret
dec
add
add
nop
sarb
scas
push
leave
cs
dec
adc
adc
fadds
lds
xchg
inc
xorl
stos
addr16
stc
push
xor
inc
pop
or
push
shlb
loope
mov
push
push
and
jno
and
fsubs
dec
jmp
add
notl
out
enter
sbb
movsl
push
or
mov
test
ret
mov
test
cwtl
rcll
sbb
jne
sbb
xor
adc
movsb
xlat
jne
fwait
mov
negl
sub
sti
in
icebp
scas
fistps
and
sbb
jbe
xchg
andl
sub
pop
jmp
sbb
cmc
jl
mov
push
icebp
push
icebp
hlt
or
in
xchg
inc
sbb
push
loopne
fsubs
addb
mov
int3
xchg
pop
pop
jp
push
lock
mov
lock
dec
stc
mov
add
hlt
cmp
xorl
xor
sbb
lods
adc
add
rcll
mov
push
xor
stc
enter
ret
mov
jbe
push
jle
rcr
dec
in
test
fisttpl
and
dec
jg
push
sahf
mov
icebp
testl
fisubrl
and
lret
rcrl
data16
jns
lods
xchg
mov
loop
pop
fs
hlt
fsubp
notb
sub
scas
adc
scas
jl
add
push
adc
outsb
sub
jecxz
insl
jg
adc
push
ljmp
xor
xlat
xchg
stc
jb
pushf
sub
xchg
sub
dec
leave
pop
arpl
fisubl
andl
sbb
mov
push
pop
test
test
das
adc
bound
in
adc
xchg
jecxz
in
xor
not
or
xlat
out
add
daa
popa
rcrb
lds
mov
or
mov
int
and
loop
cmp
clc
or
rcr
mov
stos
or
fcomp
xor
mov
lcall
xlat
rolb
imul
ja
clc
sub
dec
inc
push
xor
push
add
xchg
gs
jge
rcrl
pop
cld
xor
inc
push
sti
mov
repz
xor
add
cmp
test
adc
push
ret
inc
sbb
and
aam
and
jl
sub
cld
fistpll
movsl
pcmpgtd
roll
inc
pop
mov
loope
and
scas
pop
adc
mov
fmull
fs
sub
insl
out
or
std
jle
loopne
aam
sbb
lret
push
cmovb
stc
pop
cmp
sti
sub
push
cli
popa
clc
mov
dec
or
lahf
xor
lret
or
pushf
inc
cmp
adc
sbb
popf
scas
lcall
sbb
push
ljmp
into
mov
mov
subl
jb
mov
sbb
repz
fsubs
push
mov
sub
cmpsb
push
adc
lock
pushf
shll
jb
lock
aas
sub
in
add
popf
lods
psubw
push
pop
jae
push
imul
pop
mov
pop
push
or
in
mov
push
jno
cmpsl
pop
es
cwtl
ja
pop
js
into
mov
xlat
xlat
xchg
or
sbb
mov
dec
mov
and
inc
imul
cwtl
call
push
dec
push
shlb
inc
stos
mov
arpl
shlb
dec
cmp
xchg
sbb
mov
clc
pop
dec
ljmp
ljmp
iret
faddl
rcrb
cli
pop
push
ljmp
sub
lock
div
xor
mov
pushl
les
sub
lds
xor
push
mov
mov
fstpt
jnp
sub
jne
sbb
dec
xchg
mov
add
cmp
sub
lret
cmp
dec
jge
fiadds
xor
insb
in
sub
lcall
push
pop
pop
cli
popf
add
dec
mov
xor
xchg
push
int
sbb
cwtl
fucom
mov
cld
dec
pop
push
fisttpl
jns
dec
adc
mov
shlb
cmc
cmp
jp
sbb
jmp
sub
cld
leave
push
add
mov
pop
je
sub
in
enter
sub
pushf
sub
push
sub
shrb
pusha
sub
sbb
leave
stos
inc
lods
cmpsb
xor
jle
jno
es
ss
sarl
mov
inc
icebp
ss
mov
and
daa
std
mov
clc
sub
call
test
fwait
pop
movsl
test
test
in
adc
bound
push
movsb
dec
dec
cs
mov
push
cmp
inc
sub
fcoml
xlat
popf
imul
cwtl
jge
inc
mov
cmp
mov
aam
fdivs
sub
push
jb
pop
fsubs
adcl
push
cmp
push
dec
xor
fldl
push
jle
sbb
and
cmpl
inc
push
xchg
les
lsl
sahf
fistpl
add
filds
dec
lods
xchg
dec
ret
ss
mov
jne
pop
leave
aas
push
jmp
mov
pmuludq
stos
mov
js
add
sub
fst
sub
mov
cwtl
xchg
sbb
roll
outsl
outsl
xchg
mov
push
dec
scas
nop
out
jae
push
stos
pusha
dec
std
in
pop
cmc
lret
xor
mov
sub
xor
ljmp
xor
outsl
sbb
outsl
adc
jns
fwait
sub
jns
es
fisubrl
and
adc
imull
movsb
aas
fst
sub
jge
fcoms
decl
jp
pop
cltd
int3
xchg
cmpsb
stc
mov
xor
repz
ss
mov
iret
mov
pop
imul
cltd
sbb
sbb
in
push
cmp
pop
xor
pop
pop
xor
scas
fdivrp
sub
mov
xchg
sub
mov
test
insb
scas
add
or
shl
lock
adc
jg
cmp
sub
mov
es
sub
in
or
mov
and
xchg
scas
lea
mov
imulb
les
jne
dec
xchg
les
outsb
insb
xchg
jbe
retw
dec
dec
pop
cmpsb
xor
js
andl
data16
addr16
pop
ficoms
sbb
stc
hlt
fidivl
add
std
push
mov
rol
hlt
pop
and
fildl
xchg
inc
pop
dec
push
push
mov
inc
cmp
sbb
pop
sub
or
cwtl
test
lret
inc
push
notl
mov
dec
mov
fidivs
lods
fcmovne
testb
aad
cmp
and
mov
pop
pop
push
sbb
adc
cmp
xorb
dec
sti
xchg
inc
subb
push
in
lret
int
std
in
push
sahf
popf
xor
jns
in
hlt
lds
shlb
dec
jo
pop
cmpsb
push
push
or
leave
mov
rcll
jbe
push
jno
bound
mov
xchg
cmpsb
mov
lock
adc
push
mov
or
or
mov
mov
and
dec
cmc
push
mov
and
jmp
cs
iret
jle
call
lahf
adc
add
out
mov
cltd
test
pop
fs
nop
and
fcoms
loop
xor
gs
lds
scas
and
mov
pop
add
pop
je
js
xchg
sub
test
addr16
out
jo
xchg
hlt
adc
lods
mov
inc
icebp
int3
cmp
sbb
clc
jl
xchg
xchg
loopne
rorl
sti
push
jne
sti
or
imul
mov
mov
inc
inc
mov
sbb
push
adcb
test
adc
xchg
pop
mov
pop
or
ret
ja
negb
movsl
xchg
push
and
push
push
outsb
in
in
std
jo
insb
push
sbb
movsl
mov
or
rcrl
dec
add
pop
mov
mov
lds
lret
xchg
push
mov
dec
lea
cmp
add
adc
scas
or
stos
clc
outsl
out
mov
pop
loope
inc
es
and
sbb
test
enter
repz
cmp
lea
sub
cld
repnz
mov
loop
push
jne
inc
xor
or
test
sub
pop
or
icebp
inc
cmp
lock
pushf
js
mov
into
xlat
mov
dec
out
decb
jb
ljmp
fbld
test
add
jge
shll
jle
add
xchg
mov
push
pop
push
inc
add
cld
jno
xchg
repnz
je
mov
and
outsb
iret
gs
mov
mov
push
dec
imul
jns
in
inc
push
jmp
cmp
add
pop
fcoms
jae
lret
push
sarl
xchg
out
gs
js
clc
sbb
mov
stos
sub
sbb
cmp
pop
and
fbstp
cmp
arpl
jne
push
and
data16
pop
lret
ljmp
insb
sbb
pop
sbb
push
cmp
mov
subl
adc
in
inc
inc
jp
dec
int
fldcw
repnz
jnp
pop
or
jmp
lahf
in
mov
xchg
or
cwtl
mov
pop
sub
ds
mov
sbb
push
shlb
jmp
xor
pop
mov
scas
xchg
xlat
test
repnz
adc
call
sub
ljmp
rorb
arpl
addr16
xlat
fwait
and
es
enter
pop
jl
mov
jae
sub
adc
js
and
fbstp
inc
jle
push
cmpsl
into
xchg
push
cld
dec
xchg
data16
mov
lds
das
es
pop
loop
movsb
or
scas
inc
clc
inc
test
jle
mov
out
out
pop
jo
cli
mov
mov
test
lock
push
add
fnop
test
xchg
xchg
fidivl
repnz
std
or
scas
sub
add
jp
jg
ss
js
repz
sti
push
pop
xchg
out
bound
mov
lret
mov
ds
cmpb
ljmp
mov
fwait
push
ljmp
and
out
daa
or
fsubrs
push
leave
enter
das
xchg
int
dec
std
lea
adc
mov
rcrl
sbb
lds
mov
xchg
mov
ds
fs
sub
cmc
lcall
popa
ret
jge
fnstsw
clc
mov
out
adc
cmp
pop
jo
leave
hlt
or
dec
pop
xchg
push
push
or
ficoms
mov
out
lods
mov
pusha
sbb
mov
cmp
or
push
mov
mov
bnd
loope
jae
sbb
push
fwait
sar
std
popa
dec
aam
cmp
pop
leave
or
sbb
jbe
inc
imul
daa
mov
popa
outsl
push
int3
mov
sbb
sbb
cmc
xor
mov
daa
fists
scas
dec
loop
mov
jmp
cmpl
pop
mov
push
sbbl
fcmovb
dec
fsubr
repz
and
insl
mov
mov
push
jecxz
lods
or
fwait
cli
mov
mov
pop
ret
pop
ret
jl
cmp
clc
cwtl
idiv
in
idiv
or
pop
pop
push
sbb
adc
cltd
cmp
in
icebp
jg
jmp
add
inc
xor
loopne
insl
cld
inc
add
lea
aam
or
and
std
and
inc
and
in
mov
test
movsl
enter
and
pusha
mov
mov
mov
rcrl
add
in
sbb
cmp
push
inc
fsubp
cmp
insl
xor
or
inc
or
inc
jns
push
cmp
cmp
dec
jne
jnp
sub
mov
mov
addb
add
sub
mov
lock
popf
lods
push
bound
gs
jmp
nop
jo
repz
lods
shrb
xchg
push
fdivrs
adc
mov
push
adc
pushf
sub
xchg
add
mov
out
repnz
xor
arpl
loope
loope
push
cmp
repz
cmp
mov
xor
int
in
nop
sub
mov
fnstsw
test
loope
push
cmp
je
and
and
cmp
xchg
fstps
xor
jge
mov
mov
push
dec
popa
add
adc
add
lds
insb
out
scas
outsb
int3
pop
call
leave
mull
adc
add
pop
mov
mov
aaa
and
push
lret
add
stc
out
jp
movsl
cwtl
mov
divl
cld
pop
mov
pusha
inc
sbb
scas
jg
fildll
rolb
repnz
test
or
imul
fdivrl
lcall
out
add
ja
inc
std
dec
cmpl
out
jb
xor
addb
sbb
cmpsb
mov
fwait
and
mull
pop
test
xlat
mov
mov
sbbl
out
or
or
icebp
and
xchg
sbb
push
insb
adc
movsl
int3
dec
cmp
sbb
jecxz
mov
xchg
out
or
lock
mov
inc
cmp
ja
sub
pop
imulb
jge
in
movsl
ret
testl
mov
cmp
mov
mov
or
jmp
mov
push
add
mov
aaa
mov
mov
ret
push
icebp
inc
sbb
jp
std
scas
jno
iret
pop
popf
ss
jle
push
sbb
ret
fadds
cmc
or
daa
sub
imul
pop
cmpsl
cmp
enter
push
and
push
jg
dec
jo
cmpsl
loop
cmp
lock
into
popa
sub
jecxz
sahf
add
xchg
pop
aas
jb
adc
jp
ret
xor
adc
add
or
rclb
pop
and
scas
rorl
cmc
std
fcmovbe
xchg
jge
in
fists
xor
int
or
xchg
and
cmp
iret
addl
xchg
jae
push
sbb
ss
iret
loope
add
cltd
cld
neg
out
into
dec
dec
fldt
xchg
test
mov
cmp
add
je
pushf
ss
push
jb
rclb
jae
fwait
in
lcall
cmpsb
movsl
ds
fsub
leave
fwait
stos
cmp
ja
jnp
push
out
cmp
fbstp
ljmp
mov
repz
aam
xor
add
adc
xchg
pop
adc
repnz
mov
mov
movsb
fs
sahf
adc
push
mov
in
cmp
ret
mov
scas
outsl
int3
or
jl
shll
push
outsb
lret
mov
rcrb
add
push
loop
xor
jne
add
pop
xchg
pop
xchg
nop
sbb
xorb
subl
jg
aas
inc
movsl
xor
imul
bound
add
loopne
mov
icebp
fstpl
repz
and
jmp
das
cmc
arpl
sbb
pop
or
adc
popa
scas
jp
pop
int
xor
mov
xor
fmull
fidivs
sub
adc
mov
dec
sbb
sub
dec
sar
das
sbb
sub
inc
push
mov
cmp
xchg
push
mov
cmp
cmp
fistpll
add
pop
testb
inc
xchg
fwait
mov
lods
mov
and
cmpsb
sbb
roll
fistl
mov
dec
xchg
ds
pop
sub
mov
add
jp
outsb
push
call
icebp
pop
add
shlb
sbb
loop
lret
ja
push
lret
push
movsl
xchg
push
mov
or
xchg
mov
push
fiaddl
jae
mov
sbb
popa
xchg
and
repnz
mov
fs
mov
mov
rorl
iret
push
scas
iret
data16
and
mov
enter
and
pop
hlt
mov
cmc
push
ja
fidivrl
push
cmp
xchg
lock
data16
iret
mov
xchg
jno
cld
ss
nop
cmp
mov
xor
inc
jg
jmp
adc
sbb
xchg
ss
push
call
mov
xchg
add
xchg
push
mov
inc
int3
sub
or
jno
xchg
subb
lret
cmp
adc
pop
cwtl
ret
int
lcall
divb
out
icebp
xor
xchg
xor
movsb
inc
and
adc
mov
add
aam
sti
adc
les
jnp
popa
inc
cwtl
adc
jle
dec
das
test
das
cmp
cmp
gs
xor
adc
pusha
add
push
pusha
notl
out
add
jg
add
lock
and
cmc
pop
jmp
jae
jp
mov
mov
inc
push
mov
imul
rdtsc
fs
jg
jecxz
out
cmpsl
loopne
add
loopne
and
cmc
pop
sahf
sbb
cli
cmp
lahf
pop
adc
xchg
ss
dec
sub
into
iret
mov
popf
add
adc
sub
scas
or
push
dec
data16
call
xor
sub
add
andb
sbb
xchg
push
movsb
lods
cmpsl
in
das
and
sti
mov
cmc
mov
cwtl
iret
push
and
mov
pop
ret
dec
hlt
dec
scas
lret
sbb
push
pop
insl
or
mov
je
xor
mov
mov
sub
jmp
fcomi
int3
icebp
lea
insb
pusha
dec
ret
inc
mov
in
adc
int
loop
jns
data16
mov
insl
imul
cmp
dec
and
or
push
int
lock
sbb
rcrl
xchg
inc
mov
dec
mov
stos
xor
addl
sbb
rorb
push
ret
and
ret
add
jo
fdivrs
add
inc
stos
out
fildll
sahf
push
lcall
mov
aam
fidivrs
enter
fldl
inc
outsl
inc
sub
lret
cli
dec
call
xor
mov
stos
sbb
pusha
arpl
ret
test
std
push
or
sbb
pop
daa
je
test
jecxz
dec
push
push
rcrl
adc
push
push
jnp
mov
std
cmp
xorl
cmp
pop
and
enter
and
xchg
mov
push
or
popa
mov
mov
pushl
or
sub
mov
ret
jle
das
bound
loop
orb
cs
mov
leave
outsl
dec
cmc
xlat
clc
sub
or
cltd
imul
mov
mov
negl
outsb
out
push
push
or
mov
mov
clc
mov
sbb
push
mov
mov
and
cmp
jno
mov
push
xchg
mov
adc
ds
lods
out
xchg
xor
fs
pop
or
cmp
and
fs
subb
jle
out
dec
iret
jecxz
rorb
jb
lods
dec
mov
loopew
jne
bound
push
les
cltd
fdivp
enter
push
dec
test
xor
rorb
rcrl
out
cld
addr16
aad
fisubl
ljmp
push
mov
inc
xchg
dec
pop
imul
xchg
ficompl
dec
jne
es
cmpsl
loope
sub
iret
jne
pop
cmp
add
dec
sub
cmp
jge
sub
fsubs
test
xchg
fimuls
in
jns
call
inc
add
cmp
push
in
bound
add
fdivrl
or
ret
rcr
outsl
jno
push
jle
push
jns
xchg
xlat
outsb
repz
fwait
in
cmp
add
lods
pop
mov
xchg
scas
sub
adc
and
xor
mov
insb
ja
sti
xlat
mov
repz
mov
leave
in
jmp
mov
push
adc
shl
sahf
push
pop
negl
clc
sbb
or
add
sub
stos
lahf
ds
sub
imul
jge
mov
mov
xchg
popf
fstl
popf
adc
out
mov
xchg
mov
out
lea
enter
or
xchg
test
mov
scas
imul
jb
int
mov
pop
filds
push
std
nop
inc
insb
mov
lret
repnz
or
push
imul
push
fcmovb
aad
add
sbb
cmp
into
inc
adc
jno
jne
ljmp
fimull
adcl
xchg
dec
bound
or
or
push
jo
sbb
xlat
sbb
test
ret
inc
push
inc
pop
leave
orl
cmp
sbb
xchg
outsb
fisttpll
out
xchg
shll
xchg
out
jecxz
aaa
mov
out
and
addr16
repz
stos
jnp
push
adc
jae
mov
cmp
jl
mov
adc
jle
cmp
add
test
mov
and
loopne
jnp
je
adc
add
add
dec
stc
dec
mov
lods
sarl
fs
cmp
pop
jl
hlt
leave
dec
fistpll
and
mov
aam
push
xlat
insb
jle
push
test
push
cmpsb
jns
sbb
mov
xor
and
fdivs
xchg
fdivrs
lods
shlb
inc
sub
movsl
pop
jno
insl
stos
mov
pop
in
jne
sub
xchg
dec
push
pop
inc
in
imul
jnp
scas
cmpb
icebp
push
popf
cld
jl
add
or
dec
cmp
mov
int
mov
scas
jne
or
das
xchg
xchg
dec
ljmp
popf
jbe
negl
icebp
pop
mov
cmpsl
inc
xor
nop
mov
sahf
push
pushf
push
push
xchg
cmc
dec
push
andb
testb
mov
dec
cld
push
mov
rolb
jnp
sub
inc
sub
sahf
and
mov
jb
inc
sub
movsb
repnz
jne
test
push
ret
mov
lahf
lea
adc
sub
daa
cmp
data16
or
rcrl
sbb
mov
cmpsl
inc
rcll
mov
add
pop
add
inc
cltd
scas
mov
or
insl
gs
mov
cli
int3
repnz
ljmp
cmp
sub
inc
rol
pushf
sub
jp
cwtl
lret
lcall
filds
adc
shrb
pop
ficoms
or
data16
or
push
call
mov
addr16
test
fs
lea
or
sub
jne
xlat
cwtl
mov
pop
les
data16
cmp
add
add
add
adc
xchg
jno
ficoml
jmp
test
scas
and
mov
lret
jg
aas
loop
inc
inc
pushf
imul
sub
insl
and
lods
xchg
jae
outsb
jmp
jae
test
mov
cmp
movsl
mov
xchg
jae
icebp
fwait
enter
cmp
add
or
add
sub
addr16
cmpsl
xlat
js
sub
xor
test
bound
cmp
in
fsubs
sbb
mov
sub
ret
arpl
and
stos
jmp
jne
xlat
jge
stos
orb
pop
sub
mov
sub
cmp
mov
adc
fstpl
dec
or
jle
shrb
mov
cmp
cwtl
push
lret
insb
loop
ljmp
pop
mov
xchg
inc
sbb
rol
sarb
jp
pushf
fwait
ds
loop
mov
or
les
xorps
cmp
ret
mov
test
bound
cwtl
es
cld
in
and
cmpsb
pop
cmp
icebp
jne
jno
mov
aad
sub
jmp
lods
adc
mov
xchg
imul
dec
ret
or
scas
inc
cmpsl
mov
lods
adc
mov
dec
and
aaa
sub
dec
lret
es
xchg
popf
sbb
cmp
hlt
cwtl
jmp
pop
fwait
aam
jae
cmpsb
data16
dec
mov
sub
scas
mov
mov
negb
mov
push
lock
dec
icebp
outsb
jmp
push
xchg
xchg
js
adc
jg
xchg
repz
data16
std
mov
fildl
sbb
inc
stc
ss
sbb
mov
gs
out
les
jecxz
shrl
lcall
stos
xor
xchg
cmpsb
out
sub
fmuls
push
inc
jo
mov
aam
into
or
std
adc
shrl
sti
leave
es
cmpsl
xor
scas
mov
popf
xor
cmp
in
data16
out
cmc
lahf
mov
xor
or
sahf
cmp
adc
test
les
mov
shl
nop
push
push
mov
pop
or
sub
les
mov
add
cmp
test
xchg
outsb
jo
cli
movsb
fimuls
shrl
or
sbb
inc
adc
xor
fstl
add
mov
fldt
pop
jnp
and
les
nop
adc
scas
sbb
iret
pop
jmp
ja
ja
hlt
mov
jo
pop
dec
imul
jp
lock
or
imul
push
or
pop
cmp
shlb
shrd
inc
jne
xchg
inc
fs
mov
mov
mov
dec
iret
sbb
cwtl
push
negb
in
dec
out
idivb
testl
mov
add
mov
insb
xchg
imul
pop
jns
das
inc
aam
mov
rorb
jne
push
inc
mov
test
gs
lret
cmp
test
in
sub
sahf
adc
or
aaa
outsb
sbb
mov
lds
pop
pop
jp
inc
inc
lea
push
inc
dec
sbb
cmp
or
pusha
push
mov
cmp
and
pop
popf
mov
fidivrl
push
push
leave
nop
pop
jg
repz
lods
xchg
jge
shrl
inc
jmp
jno
into
in
xlat
add
inc
negb
dec
enter
jmp
inc
insb
lock
pop
js
add
inc
repnz
push
mov
pop
hlt
jbe
dec
pop
lods
repnz
xor
out
test
xor
arpl
inc
fldcw
cld
add
add
sbb
pop
xchg
test
jns
xor
cli
movsl
setnp
and
xor
icebp
sub
inc
inc
int
inc
rclb
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
mov
push
sub
push
push
mov
jae
cmp
hlt
test
enter
lods
lret
test
test
dec
add
fs
jmp
mov
xor
jmp
jecxz
push
clc
mov
imul
sahf
lahf
fcompl
pop
je
pop
cmp
out
mov
mov
mov
adc
sbb
inc
ds
scas
push
xchg
fimull
daa
xchg
mov
mov
add
repz
les
pop
cltd
sub
jne
jl
xor
mov
rcll
out
xchg
and
hlt
fimull
fsubrp
xchg
push
push
popa
mov
mov
inc
jns
leave
dec
std
mov
out
mov
cmc
mov
sub
adc
aaa
dec
push
inc
push
bound
push
adc
mov
inc
sub
xor
xchg
movhps
xchg
cmp
or
test
jae
cwtl
mov
sbb
sbb
jo
jns
rclb
dec
shll
call
enter
std
adc
clc
hlt
adc
mov
cmp
call
mov
sbb
loop
cwtl
sbb
add
xor
xchg
ss
lcall
cmp
lret
xor
enter
cmp
sub
leave
fdivs
sbb
aaa
pop
push
lahf
sub
test
dec
mov
sub
inc
jge
movsl
jnp
outsl
jno
ja
es
adc
sahf
inc
mov
aas
add
push
mov
sarb
ja
mov
pop
dec
mov
dec
cltd
mov
sbb
insb
rol
aad
stos
xchg
add
scas
xor
push
fsubl
popf
outsb
nop
addr16
cmpsb
sarl
inc
aam
pop
cld
mov
nop
andl
stos
jo
mov
lock
jmp
mov
out
fdivl
das
add
inc
and
jne
dec
cmpsb
in
mov
cmp
or
xchg
imul
es
in
mov
movsl
addr16
mov
mov
insb
stos
test
fldl2e
mov
rolb
adc
mov
jno
push
add
jns
lret
decb
xor
imul
push
in
in
xchg
jmp
test
sub
inc
mov
shrb
movsl
in
add
add
mov
andl
loopne
mov
inc
mov
xlat
out
jbe
cmc
sarl
cmp
push
cmp
and
fistpll
dec
rclb
mov
sub
sbb
cld
and
loope
fsubp
mov
pop
lea
jle
push
cmp
std
jl
cmp
add
ss
popf
pop
sub
inc
sarb
jmp
icebp
xor
les
push
xor
pop
cli
push
mov
push
or
cmp
ret
sub
inc
out
mov
jp
cs
inc
repz
mov
adc
push
push
xor
mov
mov
xchg
xchg
insl
sbb
sbb
je
push
adc
xor
cmp
mov
imul
subb
loop
and
inc
add
cmpsl
daa
add
inc
iret
push
inc
arpl
add
jne
jmp
jnp
rolb
and
cmp
mov
insb
sbb
add
dec
mov
fstl
lcall
add
jb
mov
lret
loope
fs
mov
or
sbb
and
je
lahf
popf
outsl
xchg
js
clc
lods
clc
out
xchg
push
aaa
loopne
decl
test
gs
ds
imul
cli
or
sbb
aas
ja
loop
imul
test
sbb
adc
pop
sbb
inc
inc
ja
mov
jp
or
int
jbe
jmp
mov
cmpl
cmp
mov
out
icebp
add
jge
sbb
jg
xchg
mov
arpl
sahf
add
ret
and
sbb
and
pop
xor
mov
jne
pop
scas
mov
ja
inc
xor
and
mov
xchg
pop
push
jp
dec
stos
fcmovbe
mov
int3
add
repnz
add
outsb
test
jle
adc
inc
outsb
insl
cmp
pop
or
pop
push
rclb
orl
mov
testl
loope
gs
hlt
xor
mov
mov
lcall
mov
in
in
or
shrb
movsb
lds
xchg
xchg
mov
loope
push
or
mov
xor
in
mov
scas
push
push
adc
sub
repnz
cmpsb
mov
dec
int
icebp
xor
clc
xchg
inc
fmul
fnstcw
mov
cmp
pop
dec
pop
sbb
inc
xchg
stos
sub
bnd
or
mov
jb
push
mov
mov
cli
dec
and
jp
adc
push
pop
xchg
fwait
jae
loop
stos
imul
insb
pusha
push
push
stos
lods
jmp
and
lret
lods
pop
mov
test
inc
in
stos
fst
xchg
test
das
ror
mov
fs
fidivs
aad
addr16
enter
mov
icebp
mul
pusha
push
sbb
inc
arpl
imul
incb
negb
push
ret
xchg
dec
cmp
and
adc
mov
insl
push
pop
js
mov
stos
dec
adc
mov
add
adc
xor
stos
jmp
or
xchg
jmp
sub
std
pop
add
adc
xchg
inc
aad
fnclex
in
xchg
aad
jge
insl
stos
lock
iret
stos
mov
push
dec
aas
jns
rcrb
xchg
test
mov
xchg
cmp
mov
shlb
and
out
fsubs
inc
repnz
xor
imul
loopew
sub
pop
push
insl
mov
lock
repz
int3
push
mov
sub
mov
shrb
insl
pop
push
cmp
dec
sbb
fwait
sbb
daa
insb
idivl
mov
jae
mov
out
lcall
or
movsl
repnz
pop
es
jle
adc
ljmp
stc
and
xlat
jmp
or
xor
pop
push
pop
mov
loop
mulb
sbb
enter
cmp
or
sarb
in
add
mov
push
pop
divl
xchg
push
mov
shll
sub
jb
rcrb
push
arpl
jg
fadd
mov
data16
ljmp
inc
xor
mov
and
popa
xor
mov
cmp
dec
and
and
cwtl
push
xchg
es
fwait
sbb
xor
scas
int
test
mov
sbb
and
mov
shrb
ucomiss
mov
jmp
cltd
lock
mov
xchg
fisubrs
inc
pop
je
loopne
xchg
or
sbb
sub
adc
mov
jno
sbb
mov
dec
adc
in
sub
mov
insl
xchg
inc
cltd
clc
bound
xor
sti
std
cmp
xor
notl
mov
pushf
add
subb
adc
mov
mov
sahf
inc
shlb
arpl
shlb
jb
push
dec
or
popa
mov
or
inc
in
fiadds
inc
mov
testb
mov
xchg
in
cmp
out
inc
push
xchg
in
loope
sti
or
fidivrs
xchg
je
fsubrl
imul
imull
ret
cmc
inc
mov
inc
clc
test
mov
fs
mov
negl
or
adc
cmp
mov
test
imul
jbe
test
or
inc
and
sub
test
push
xchg
loope
out
mov
jmp
push
lcall
nop
lret
and
mov
repnz
push
push
jle
jg
and
repz
or
jb
cmp
jg
popw
or
mov
lods
nop
inc
cmp
and
and
dec
iret
test
je
cmp
xor
dec
rorb
mov
lock
jle
sub
jns
jle
sbb
adcl
cmpb
mov
je
sub
mov
mov
fiadds
mov
xor
fbld
clc
lahf
pop
xorb
inc
fisttpll
dec
gs
ljmp
cmp
xor
frstor
pop
sarb
or
lea
and
mov
pop
mov
out
orb
xchg
mov
jno
pusha
cs
movsb
adc
nop
call
add
xor
mov
outsb
loope
and
lcall
or
fistpl
out
inc
daa
jbe
fstp
ficoml
cmp
ljmp
dec
jbe
faddl
jecxz
adc
and
or
aad
gs
xor
jp
mov
and
pop
jb
shll
sub
dec
bound
ds
inc
inc
jae
jb
arpl
gs
lret
mov
inc
push
jg
outsb
add
shll
lcall
or
loop
push
pop
ljmp
xchg
sub
xlat
pop
test
sub
ja
jg
scas
or
aad
push
xchg
in
sbb
jo
sub
mov
imul
add
mov
cs
add
pandn
int
push
loop
sbb
add
icebp
mov
jne
adc
jb
mov
nop
cmp
and
mov
xor
xor
or
pop
cmpsl
xchg
orb
jmp
mov
imul
nop
sahf
push
cmp
cmp
sub
mov
insb
dec
ucomiss
loope
shrl
je
pop
das
xchg
xor
stos
jmp
rorb
fdivr
repz
out
and
xchg
dec
xchg
sbb
add
pop
int
dec
loope
sbb
and
imul
jecxz
cwtl
push
mov
sbb
cmpsb
popa
xchg
and
add
inc
das
mov
sarl
repz
or
mov
insb
es
xchg
adc
out
cwtl
test
lods
xchg
ret
xchg
ljmp
mov
sti
mov
xchg
sub
mov
lock
je
les
jmp
adc
cmpsl
cmpsb
cmp
cli
pop
mov
das
cmpsl
roll
cmp
or
cmp
add
fidivs
mov
hlt
scas
lahf
jae
push
test
or
nop
sarl
push
jl
hlt
cmpsb
fidivl
fdivr
imul
or
in
adc
popa
xchg
sub
shr
sbb
sbb
mov
aaa
mov
mov
inc
in
push
push
or
dec
jg
dec
loopne
sbb
add
xor
and
js
inc
xor
jp
out
pusha
dec
jb
out
stc
mov
mov
fstpt
imul
aaa
enter
xor
ficoms
testb
and
cmp
or
mov
or
scas
cmp
shrb
add
mov
testb
jmp
popa
fdivrp
rclb
inc
mov
or
jns
decb
lret
insl
into
inc
imul
cmp
leave
push
fisubs
int3
fimull
insb
cwtl
mov
shl
pop
adc
out
fcompl
adc
dec
inc
enter
dec
and
loope
dec
cmp
sub
xor
pop
scas
and
jge
dec
mov
jp
mov
aaa
add
jno
loop
and
mov
cmp
je
xor
sub
or
and
fstpl
jno
pop
aaa
int
stos
cmp
call
in
stos
sbb
sub
pop
push
adc
jb
imul
jnp
pop
cmp
xchg
in
addr16
repnz
in
data16
test
divl
push
xor
inc
outsb
mov
sub
cmpsb
adc
stos
adc
je
in
sbb
pusha
bound
jne
clc
cltd
add
jecxz
add
and
mov
push
cmp
cwtl
lret
dec
or
mov
cmp
mov
pop
add
mov
or
lahf
cmp
or
mov
xchg
idivl
scas
adc
es
mov
lods
add
inc
iret
fisubl
les
sbb
fsubl
pop
jb
cmp
es
fcomip
mov
push
mov
mov
push
orb
pusha
cmp
mov
sub
dec
sbb
and
imul
outsl
fldt
xor
orb
leave
cmp
push
out
sbb
roll
rorl
jle
gs
testl
or
push
sub
movsb
sbb
adc
push
sbb
mov
or
fs
mull
sbb
sbb
jle
nop
pop
jnp
out
mov
dec
push
repz
inc
jno
aas
xchg
jmp
notl
addb
xchg
out
fcomp
in
or
fstpl
xor
inc
pop
jae
roll
jns
push
push
jae
or
test
shlb
inc
mov
xchg
or
push
inc
adc
cwtl
loopne
loopne
je
mov
cwtl
in
ret
das
aam
push
inc
daa
ret
mov
leave
and
push
mov
scas
sbb
mov
and
jg
dec
pop
sarl
insl
sarb
sbbl
xor
xor
mov
je
dec
decl
inc
push
cmp
sub
xchg
and
popa
add
mov
inc
mov
mov
jbe
ficompl
icebp
mov
iret
sahf
inc
std
jp
daa
in
enter
stc
bound
ss
or
insl
add
pop
scas
stc
out
in
scas
xor
je
xor
shl
out
pop
popf
mov
mov
je
mov
fsts
shll
repnz
cmp
add
in
or
out
cltd
cmpsl
dec
cld
jnp
sahf
and
pop
xor
push
shll
bound
fs
imul
in
mov
js
lock
jo
stos
push
push
push
stos
lahf
pop
adc
adc
shrd
outsl
or
xor
jge
loopne
and
xor
inc
xchg
dec
addb
mov
add
sub
sti
adc
mov
mov
jno
nop
leave
sysret
hlt
dec
xchg
mov
mov
fldlg2
and
xchg
bound
sub
hlt
xor
pop
sub
decb
jno
int3
xor
outsb
ds
or
scas
xchg
add
test
stos
jne
sub
lods
mov
adc
je
daa
lret
pop
cmp
stos
push
or
fmulp
cmp
cmp
vminpd
das
mov
pop
mov
mov
stc
pushf
or
mov
pusha
out
pop
xor
xchg
shll
insl
ret
and
ror
xchg
mov
push
test
or
scas
push
sub
fists
pop
pushf
adc
repz
daa
out
jmp
xchg
mov
cmp
mov
jnp
and
pop
cmp
push
or
mov
mov
es
jecxz
jmp
inc
or
mov
xchg
pop
inc
inc
mov
pop
xchg
loopne
or
mov
or
mov
mov
icebp
xchg
sub
inc
stos
sbb
mov
push
pop
xor
xchg
lds
insb
push
push
add
sbb
add
inc
jns
mov
jecxz
pop
es
jnp
pop
xchg
out
popf
push
ljmp
stos
xchg
movsb
mov
cmpsb
cmp
or
sub
mov
pop
xor
fwait
std
fdivp
push
or
jle
adc
pop
ficompl
rorl
xchg
iret
fs
adc
push
cmp
imul
test
cli
xchg
mov
leave
dec
mov
dec
loop
mov
repz
fwait
cmp
iret
bound
xor
je
cmp
int
enter
shrb
aam
call
dec
add
push
sub
xchg
sub
add
push
stos
lret
fisttpll
push
daa
daa
imull
mov
out
push
movsl
dec
aad
inc
int3
jno
cmpsl
jns
or
lea
sbb
or
fwait
xchg
push
push
sub
cmp
dec
jbe
or
rcrl
push
and
pushf
repnz
bound
xor
mov
inc
mov
jae
push
int3
xor
leave
clc
mov
xlat
or
jp
mov
sub
int
sbb
lahf
mov
or
jbe
add
lods
ret
int3
fstpt
adcl
test
insl
cmp
add
arpl
pop
pop
jl
mov
push
sub
sbb
xor
xchg
xor
and
mov
mov
push
mov
in
fsubrl
jg
mov
lods
jb
pop
pushf
cmp
jo
test
stos
decl
js
or
out
jg
or
ss
pop
pop
push
lahf
xor
std
cmpsl
lret
fs
and
xor
into
rcrl
jne
gs
dec
jns
iret
scas
or
stos
dec
aad
add
adcl
enter
cmpsb
lock
add
data16
jmp
jmp
clc
mov
or
inc
mov
pop
pusha
mov
lds
and
sahf
xchg
jge
fs
sub
adc
lods
mov
movl
cmc
or
pop
inc
dec
inc
arpl
or
lret
mov
push
lods
mov
shrb
popa
nop
jge
sbb
xchg
push
arpl
mov
push
xchg
stos
sbb
sbb
fistl
sub
or
mov
inc
and
aad
mov
mulb
adc
mov
subl
les
push
inc
dec
dec
outsl
mov
fisttps
stc
jae
fadds
xchg
int
pop
pop
movsl
in
sub
test
ret
ret
cltd
jne
jns
subl
push
jbe
xchg
mov
pop
sbb
mov
push
in
xor
dec
dec
lret
xchg
aaa
icebp
xor
xlat
fnop
pop
cmp
sub
das
lret
jno
xor
aad
test
scas
stos
sbb
sub
int3
lods
cmp
stc
jb
mov
aas
daa
xchg
lahf
mov
cmc
sub
or
addl
in
add
lds
dec
mov
mov
adc
and
lret
movsl
fidivrs
cmp
pushl
sbbb
fwait
notl
jnp
test
lds
lcall
stos
daa
xlat
repnz
inc
fildll
test
sarb
sbb
push
gs
jge
sbb
push
test
add
mov
test
jecxz
lods
inc
mov
mov
out
bound
lret
add
mov
cltd
jl
mov
dec
out
test
push
sbb
mov
dec
mov
lret
or
jle
push
stos
pop
sti
addr16
sbb
push
or
xor
sbb
test
or
or
or
fstps
xchg
pop
aad
loop
inc
xchg
push
int3
and
dec
dec
loope
sub
insl
dec
sub
js
xor
cld
xlat
mov
lcall
and
xchg
movsb
push
sar
popa
add
pop
cmpsb
repnz
and
xor
add
fimull
jns
mov
mov
test
pop
cmp
adc
pop
mov
andl
xorl
xor
hlt
dec
cmp
push
rcr
and
negb
imul
call
sub
movsl
mulb
mov
data16
xchg
ficomps
cmc
jbe
pop
inc
cmpb
repnz
int
mov
cmpsl
sbb
pushf
in
xchg
xchg
pusha
cmpl
mov
and
jecxz
mov
scas
jbe
sub
sbb
enter
lret
mov
frstor
stos
and
andl
adc
jae
mov
sbb
lock
sbbl
sbb
popf
mov
pop
pop
cmp
cmc
pop
int
out
and
mov
std
or
push
pop
stos
in
outsb
pop
paddb
mov
jmp
and
pop
pop
sub
jnp
jecxz
mov
lods
inc
mov
divl
out
mov
xchg
in
jge
or
sbb
mov
dec
inc
sub
fwait
lahf
mov
xchg
fisubrs
adc
pop
aas
xadd
pop
sbb
xchg
or
pop
hlt
push
jb
inc
xor
leave
mov
clc
and
mov
mov
icebp
lods
sbb
loope
movq
idiv
fistpl
xchg
cld
xor
lret
in
cmp
fisubrs
sub
dec
pop
mov
cmp
into
sbb
pushf
push
bound
cmpsl
sub
jae
jmp
idivb
ljmp
inc
push
loop
and
lds
pop
addr16
mov
and
mov
jne
xchg
push
insl
aaa
cmpsl
mov
sbb
or
xchg
bound
addl
mov
fidivl
pop
imul
fistl
testb
or
push
fnstenv
cmc
inc
adc
dec
lods
ja
mov
sahf
and
iret
cmp
pop
lds
inc
and
test
loope
pop
sbb
movsl
cmp
fwait
xor
lret
fistpl
lods
sahf
or
iret
lock
icebp
xchg
repz
sbb
lock
jge
dec
sbb
add
mov
adc
lea
bound
mov
jg
das
cmpb
daa
xchg
stc
repz
and
inc
mov
mov
call
xor
push
add
inc
xor
xchg
add
out
mov
cltd
add
lahf
mov
sbb
pusha
rorl
stos
out
jno
test
pop
xchg
outsl
fsubr
ljmp
lea
and
je
dec
adc
pop
cmp
mov
xchg
add
loope
js
xchg
push
testl
inc
pop
and
or
ss
dec
xchg
outsb
push
mov
andb
dec
dec
andb
mov
inc
push
dec
je
outsl
mov
push
xchg
inc
mov
push
pusha
dec
pop
imul
xor
cs
jmp
data16
sub
nop
andb
mov
mov
leave
jecxz
cmp
sbb
es
cmpb
shl
in
adc
orl
lcall
cmp
jg
cli
add
push
aaa
push
sub
fsubs
dec
in
add
inc
fst
mov
cs
testb
enter
test
xchg
aam
and
lock
xchg
je
or
adc
pextrw
inc
adc
xor
mov
popf
repnz
lea
sub
data16
cld
push
adcl
lret
mov
and
ds
test
and
or
push
sbb
mov
out
mov
sub
mov
inc
pushf
sub
xchg
mov
lds
nop
add
ss
cmpsl
adc
push
xchg
je
inc
fldt
sbb
and
gs
adcl
bound
roll
jp
cwtl
ffreep
pop
adc
test
cltd
jno
out
inc
mov
addr16
jns
jnp
mov
add
iret
test
std
scas
shlb
xchg
xchg
mov
jns
cmp
mov
jae
push
dec
and
std
popf
or
sub
and
cltd
and
notl
dec
jle
cmpsl
jg
mov
notl
push
xor
dec
scas
sarb
lods
mov
mov
jg
pop
fdivrs
xchg
scas
push
in
fwait
mov
in
cld
mov
add
int3
filds
fwait
sub
push
adc
dec
loope
pop
xchg
adc
sbb
cltd
adc
inc
loope
mov
lret
dec
jns
repz
inc
movsl
add
mov
testl
mov
enter
je
mov
or
mov
mov
adc
pop
adc
sub
jmp
sub
lret
popa
dec
outsb
push
cmp
push
inc
iret
les
das
inc
and
les
add
icebp
stos
add
cmp
rorl
lahf
call
loope
or
es
in
fidivrs
cltd
inc
popa
insl
mov
into
repnz
insb
dec
jge
xchg
jb
addl
or
nop
sub
int
and
add
mov
mov
jae
dec
insl
mov
dec
adc
push
stos
xchg
sarb
sbb
dec
xchg
movsb
pop
shll
sub
and
es
daa
sub
insl
jne
mov
stc
adc
sarl
imulb
ret
iret
inc
cli
fldl
xchg
dec
jbe
sbb
test
stos
sub
hlt
in
arpl
cmp
or
xchg
fstpl
cmpb
jbe
popf
pop
pop
arpl
dec
and
adcl
sub
mov
inc
push
pop
subl
jp
or
mov
popa
jmp
std
lods
sub
enter
adc
cs
das
sbb
popf
push
mov
push
loope
inc
xor
add
cmp
or
inc
dec
pop
rcll
dec
xor
scas
cmpl
dec
insl
mov
adc
shrl
xchg
cmpsb
jnp
dec
out
int3
icebp
add
repz
or
popa
pop
shll
sbb
pop
test
test
push
daa
repnz
xchg
pusha
dec
fwait
lahf
js
push
pop
fisubrs
gs
cmc
lcall
push
pop
cmp
movb
push
sub
sub
mov
in
popa
loop
bound
inc
sbb
dec
ret
mov
mov
cmp
pop
lahf
push
mov
fiadds
loope
xchg
dec
fs
push
xchg
lret
fwait
mov
pop
push
add
xor
loope
fs
xor
lea
xchg
jo
add
xor
sahf
inc
subl
add
mov
mov
adc
cmpsb
add
adc
sub
stos
loope
push
imul
mov
inc
mov
fs
xchg
nop
sbbb
fstl
loop
push
xchg
bound
sub
gs
shrb
dec
add
fdivl
fs
outsl
fs
cmp
iret
mov
cmp
mul
jl
xor
or
mov
pop
or
lods
xchg
nop
pusha
dec
out
nop
scas
mov
dec
xchg
lds
data16
lea
xchg
ja
push
cld
jg
test
cmpsb
mov
pop
or
addb
outsl
iret
frstor
adcl
std
xchg
cmp
les
imul
adc
es
out
or
daa
sbb
xor
icebp
sbb
rorb
movsb
test
sub
into
clc
cmpsl
shl
cmp
jbe
xor
popf
xor
and
loop
mov
or
jmp
pop
popf
rolb
xchg
mov
arpl
adc
lds
test
outsb
push
jmp
cmp
sbb
xchg
mov
movsl
mov
fadds
in
mov
pop
pop
testb
orb
arpl
dec
test
dec
daa
add
jae
add
mov
mov
cmp
xlat
xor
fwait
or
ds
outsb
or
mov
fs
movsb
sub
orb
fistpl
pop
pusha
pop
inc
test
xchg
adc
xlat
pop
shlb
cs
pop
jae
sub
lcall
es
jl
xchg
lahf
ret
cmp
jg
decl
in
sbbl
xchg
cmc
push
fmuls
decb
sbb
into
outsl
and
mov
insb
and
sub
ljmp
push
sti
adc
mov
js
fnstcw
repz
mov
or
xlat
mov
fldt
popa
cmpsl
daa
gs
clc
inc
fmulp
jne
push
jnp
mov
scas
and
xlat
cltd
ret
push
scas
in
sub
jb
sbb
fwait
cmp
lahf
pop
mov
jno
loop
test
inc
sub
test
sti
and
fcmovb
pop
out
lds
shlb
jb
addr16
sbb
jle
add
pop
stc
or
fstl
int3
cmp
dec
gs
mov
outsl
imulb
js
les
mov
jge
or
mov
adc
lock
jp
fcoms
divb
pop
fstps
int3
imul
mov
faddp
inc
in
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
sub
adc
rolb
cltd
pcmpeqb
out
scas
xchg
in
test
sub
mov
call
ds
mov
in
lds
mov
mov
imul
out
mov
or
xchg
push
sar
mov
adc
js
lahf
scas
aas
lock
inc
cmp
sub
test
lcall
mov
sarl
jne
loope
mov
callw
outsb
mov
and
movsl
pop
pop
cmp
mov
mov
es
dec
jg
ds
lds
adcb
jne
pop
mov
push
mov
sahf
mov
mov
aad
sarl
lcall
mov
xchg
sbb
aas
test
jno
inc
int3
in
xchg
out
mov
dec
jno
mov
jle
xor
dec
push
addr16
in
rorb
xchg
iret
xchg
cmp
adc
rcrl
inc
and
sub
aam
cmc
mov
aaa
and
sar
lret
pop
dec
jp
inc
inc
adc
je
xor
and
jl
andl
xor
faddl
in
fstps
jns
sub
lds
scas
jb
mov
push
lds
repz
pusha
adc
and
adc
inc
xchg
cmpl
shrb
sar
and
aaa
pop
loop
sahf
fcmovnb
fidivs
push
cmc
pop
cmpl
nop
inc
xorl
cld
sbb
xor
cltd
gs
aad
sbb
inc
clc
inc
or
xor
rcll
cld
ja
add
cltd
ja
int
dec
xor
mov
adc
fbld
mov
scas
jle
adc
aad
andb
sbb
xor
adc
inc
dec
cmp
mov
aam
push
and
loopne
test
adc
gs
shlb
add
add
cld
sbb
adc
xchg
stos
fcmovnb
jge
adc
fldt
jb
jo
addr16
or
mov
mov
add
es
ljmp
out
push
jle
imul
xchg
cmp
outsl
call
fdivs
jb
inc
pop
mov
mov
cmpsl
inc
xchg
test
adc
les
enter
fldz
in
in
int3
mov
cmp
cli
sub
test
sbb
aas
and
sbb
pop
sub
lahf
sub
sub
sbb
lahf
and
loopne
push
jb
mov
jne
xor
jbe
fucomi
mov
adc
sub
and
enter
xchg
ret
stc
test
insl
sub
push
mov
pushf
orl
dec
mov
mov
das
sbb
or
mov
out
xor
fisubs
loop
dec
in
jmp
inc
mov
cmp
xor
jns
stc
push
inc
ret
push
sti
add
sbb
push
mov
cld
sub
xchg
fisubrl
idivl
loop
push
pop
pop
cmp
lock
int
and
adcl
or
fwait
sub
sahf
pop
fucomip
sub
je
mov
jmp
pushf
adc
mov
minps
addr16
dec
jmp
mov
pop
popf
loope
repz
dec
ja
pop
xlat
imul
jle
add
xchg
xchg
gs
or
push
pop
xchg
xchg
fdivp
push
pop
addr16
es
add
xchg
nop
xor
cwtl
leave
or
jno
add
xor
adc
movsb
movsb
faddl
cltd
and
cmp
sbb
sahf
inc
xor
pop
xor
fcmovnb
inc
clc
aad
clc
mov
shr
inc
scas
aad
pop
jns
testb
aad
cmpsl
jno
xchg
mov
mov
jmp
out
in
sbb
mov
sahf
xor
lods
add
xchg
shlb
jmp
ljmp
and
jecxz
jle
mov
outsb
pusha
sbb
stos
jmp
fnsave
fidivs
test
and
xchg
std
mov
inc
loope
and
hlt
cmp
aad
loop
xchg
lcall
push
sbb
push
jo
mov
sbb
jp
push
mov
lea
in
imul
je
jae
inc
sbb
pop
sub
test
enter
dec
mov
pop
xchg
mov
cmc
pop
mov
push
outsl
inc
int
push
imul
dec
mov
repnz
movsb
jb
loop
pop
jle
testw
stos
mov
cli
out
insb
pop
test
push
push
sbb
out
mov
fs
out
pop
cs
sub
shl
dec
aas
fcmovb
bound
xchg
pop
or
nop
mov
adc
pop
loopne
mov
bound
outsl
fistl
xchg
mov
call
enter
sti
mov
xchg
test
inc
push
imul
xlat
aad
mov
mov
pop
push
std
jns
loope
dec
add
xor
stos
or
outsb
stc
add
cmpl
cmp
insl
or
cmp
movsl
push
lcall
int3
mov
popf
mov
aaa
jnp
fwait
xor
scas
sub
int
ret
das
push
int3
sti
inc
dec
jbe
jp
ss
mov
cmp
shlb
pop
aas
std
inc
cli
inc
and
leave
mov
loopne
test
fimuls
insb
test
sbb
popf
xchg
mov
or
mov
bt
mov
test
add
jbe
mov
or
and
mov
mov
jnp
and
cmp
mov
ret
loope
xor
xlat
clc
mov
mov
push
bound
jns
cmpsl
jge
les
arpl
ficoml
andps
push
push
ret
mov
mov
add
int3
insl
ss
add
pop
adc
sub
in
sbb
jge
jg
mov
xchg
call
mov
jno
fs
lds
cmp
xchg
lcall
jl
fdivrs
add
jne
or
arpl
out
aaa
add
mov
lret
mov
lds
mov
stc
inc
push
stos
pusha
cli
daa
xchg
loope
imul
mov
dec
cmp
mov
and
mov
hlt
outsb
mov
stc
gs
inc
pop
xchg
lret
mov
pop
xchg
jle
shrl
stos
in
movsb
jmp
movsb
je
and
lods
pusha
adc
sub
outsb
inc
scas
jmp
outsl
call
push
and
in
adc
or
test
mov
cmc
in
shr
ret
push
adc
push
and
ret
nop
jp
mov
arpl
pushf
push
sbb
aad
mov
out
in
aam
push
mov
sbb
dec
ror
out
jne
jp
aad
add
mov
ljmp
and
lret
icebp
lret
cwtl
leave
ljmp
ret
mov
lock
push
pushf
movsb
dec
sub
movsl
push
popa
mov
jl
aad
ds
fstpt
arpl
inc
addr16
test
dec
ret
jge
jecxz
int
cmc
call
mov
aad
sarl
sub
test
sbb
fidivs
cmpb
cmp
pusha
aad
lods
loop
sub
insl
dec
test
int3
les
push
xchg
stos
sarb
jp
ja
gs
test
lret
dec
sahf
icebp
xchg
sbb
ret
fcompl
fs
repnz
out
add
andb
mov
mov
lcall
rcrl
mov
push
test
push
inc
out
mov
xchg
push
nop
repnz
mov
xorl
mov
into
ss
xchg
cmp
sub
sub
xchg
data16
mov
cmpsb
mov
das
sarl
push
jp
mov
cmc
je
dec
mov
push
jl
test
subl
mov
ja
cs
adc
ja
rol
mov
test
js
cmp
xor
lea
pusha
fstps
daa
pop
inc
mov
mov
mov
fbld
xchg
das
arpl
ljmp
inc
fwait
scas
xchg
out
jo
ret
mov
mov
adc
sbb
xchg
xchg
repnz
test
aam
and
xor
mov
mov
rcrl
mov
inc
lods
out
aaa
sub
mov
in
popa
fs
jns
inc
adc
dec
jno
lea
push
adc
out
xlat
outsb
add
sub
inc
jge
jmp
mov
out
stos
xchg
setno
and
out
pop
arpl
jl
jo
mov
cmp
out
xchg
cmp
daa
xor
fidivl
dec
les
bound
imul
or
lods
adc
jns
and
lret
inc
sbb
call
push
jle
scas
adc
sbb
inc
out
mov
imul
jns
or
lds
ror
loope
xchg
mov
push
jno
mov
sbb
mov
inc
pop
xchg
adc
pop
sub
xor
xchg
loop
mov
fxch
fnsave
sbb
push
push
sbb
loopne
xor
bound
std
outsl
bound
xchg
adcl
loope
js
repz
mov
cld
cld
inc
addr16
mov
mov
pop
ret
ret
scas
ss
sbb
mov
xchg
xorl
fists
dec
or
push
add
jg
sbb
mov
in
mov
popa
cmpsb
xlat
je
dec
and
adc
cmpb
and
cwtl
mov
inc
cmc
or
mov
movsb
test
pushf
ljmp
jne
ljmp
clc
cmc
jl
cmp
or
int3
int
xchg
xchg
add
rclb
fisttpl
push
dec
sti
lret
popf
inc
jnp
cmp
sub
mov
call
sub
push
lock
jo
in
test
clc
pop
mov
cmpsl
jo
jb
orb
int
push
push
inc
push
push
data16
xabort
icebp
pop
loope
mov
mov
mov
jecxz
outsl
mov
mov
imul
ret
shrl
mov
outsl
cmp
cmp
or
sub
pop
push
adc
inc
ret
and
pop
jns
push
add
cld
gs
xor
pop
jmp
push
out
lcall
or
sub
bound
imulb
hlt
test
dec
sbb
repnz
icebp
mov
ret
sbb
push
mov
push
cmp
nop
jp
adc
jmp
das
mov
dec
ficomps
iret
push
pop
jge
in
dec
test
pop
pop
out
mov
in
leave
scas
loop
movsb
inc
push
cmp
push
and
in
popf
pop
cmp
or
iret
std
mov
mov
jp
das
in
mov
inc
push
adc
dec
xor
mov
jmp
mov
cltd
mov
add
sub
ss
mov
pop
stos
dec
movsb
or
sahf
xor
adc
sahf
out
aam
inc
loope
aam
ret
cmp
in
rep
xchg
push
aam
jmp
out
mov
mov
mov
push
scas
jnp
mov
in
lret
insl
in
push
mov
cmpsb
mov
adc
lds
popf
mov
xchg
popa
dec
or
mov
ret
lret
data16
cmp
inc
xchg
jne
nop
jae
lcall
clc
inc
fwait
shll
gs
cld
movb
js
insl
push
aam
insl
cs
xor
out
fildl
fs
push
pushf
lea
and
fisttpl
dec
or
ficoms
inc
xchg
in
xchg
sahf
aam
jb
mov
mov
out
fadds
in
sbb
psraw
jmp
loop
lds
rcrb
ret
jmp
adc
imul
sub
jmp
mov
push
inc
arpl
mov
sbb
fisubl
sbb
adc
mov
cmpsl
xor
inc
pop
sbbl
movsl
int3
jo
pop
into
mov
in
jno
and
mov
jl
push
push
xchg
xlat
int3
out
lcall
enter
or
inc
stos
and
call
mov
adc
scas
sub
idivb
dec
sub
xor
jecxz
into
xchg
push
jle
lock
loopne
pop
fdivrl
or
and
out
push
icebp
scas
fwait
mov
mov
cmp
incb
xor
cmpsl
jle
imul
mov
pop
out
cmp
outsl
xor
shll
push
arpl
mov
xor
push
jo
out
dec
mov
mov
and
cmp
sub
arpl
out
mov
cmp
and
xchg
adc
repnz
mov
mov
sbbb
push
hlt
pop
push
mov
scas
xchg
lret
gs
push
mov
adc
sub
inc
imul
cmpsl
push
xor
arpl
dec
push
orb
sbb
dec
mov
icebp
pop
lods
dec
inc
inc
push
fidivrs
mov
leave
out
data16
scas
rcrb
xor
xor
into
xchg
or
notl
dec
lds
fdivs
ljmp
mul
mov
xchg
sbb
push
push
cmp
test
stos
loop
fcmovnbe
and
out
cmpsb
sub
jl
push
pop
pop
pop
iret
fs
push
clc
outsl
lock
mov
xchg
repnz
pop
fdivs
and
xor
int3
pop
lods
mov
pop
xchg
push
mov
sub
jnp
ljmp
mov
jge
cmp
sub
mov
push
or
dec
into
push
cmc
pop
mov
add
inc
or
pop
adc
loopne
shll
outsl
stc
cmp
mov
jno
pushf
cld
stc
mov
cmp
sbb
scas
call
xchg
jae
insb
push
or
enter
ja
add
and
fildll
mov
add
mov
adc
sbb
pop
popf
or
sti
jnp
sbb
jle
dec
rcll
sbb
or
sub
xchg
or
das
lock
lods
or
add
jne
add
sbb
insl
dec
icebp
dec
fcos
add
cmp
cmp
and
sar
or
clc
xor
cld
and
aad
push
sti
xor
subb
int3
pop
jb
inc
inc
cmp
lods
movsl
jmp
testb
or
inc
mov
rcrb
inc
cmp
test
and
ja
xchg
xchg
je
movsb
push
icebp
sbb
adc
stc
and
rcrb
cmpb
adc
jo
push
outsb
mov
jns
lret
xchg
xchg
pop
mov
imul
orl
add
loope
popa
jbe
cmc
or
std
repnz
push
pop
shll
ret
lret
lock
sub
int3
pop
les
bound
pushf
jne
lcall
add
lret
add
mov
dec
fbld
inc
add
repz
ret
add
dec
xor
lahf
sbb
sub
test
pop
pop
push
dec
in
sbb
subl
test
cli
jb
xchg
add
jb
pop
mov
les
mov
nop
add
adc
mov
cwtl
xchg
dec
sub
xor
and
fs
cld
pop
ret
flds
into
and
and
jbe
fcomi
loope
jne
cmp
or
jo
in
jp
xor
std
push
xchg
cmpsl
fldenv
push
popf
sub
sahf
push
mov
roll
lret
loope
repz
xchg
xchg
out
cs
sub
call
push
mov
add
out
inc
push
xchg
bound
mov
shlb
inc
pop
leave
jge
enter
jmp
insb
popf
int3
es
push
mov
add
mov
fidivrl
push
insb
daa
fldcw
stc
cld
xor
jmp
push
jp
stc
xchg
pop
adc
mov
xchg
sub
push
bound
dec
rcl
mov
add
jl
out
inc
push
test
dec
imul
movl
pop
pop
fs
pusha
push
or
faddp
les
mov
mov
sbbb
mov
pop
jno
jle
cmc
fsubrs
in
xlat
pushf
push
or
das
sbb
arpl
push
shlb
mov
loope
stos
lcall
sbb
fs
xchg
sub
movsb
cmp
test
dec
mov
sub
cmp
push
addr16
jnp
jl
adc
pop
add
xchg
jecxz
fs
out
xchg
xchg
sbb
mov
aas
sub
jne
xor
arpl
fisttpl
clc
adc
mov
movsb
pop
in
mov
xor
enter
push
mov
add
add
fnstcw
xor
mov
les
xchg
fdivl
cmp
int
addr16
testb
cmp
inc
test
lds
mov
es
push
xchg
mov
mov
or
jecxz
repz
pop
and
jl
imul
roll
outsl
pop
or
mov
jg
xor
das
outsl
mov
pop
jle
out
arpl
or
outsl
pop
addr16
dec
adc
cmpl
popa
lret
mov
leave
fadd
xor
pop
mov
inc
jne
jne
ds
sbb
mov
out
test
xchg
pop
lds
push
out
mov
inc
cmp
mov
popf
mov
lret
popf
push
mov
cli
pop
rorl
xchg
pop
mov
or
push
push
imul
jmp
in
jns
aas
mov
daa
pop
pop
push
or
std
pop
loopne
outsl
pop
loopne
loopne
mov
in
lock
inc
or
mov
fistps
fldt
mov
stos
adc
mov
loopne
mov
jae
inc
out
mov
scas
xor
inc
push
mov
jo
dec
fwait
popa
test
mov
or
pop
stc
cmpsb
sbb
movsb
mov
jp
clc
sarb
fdivs
mov
les
aam
fwait
pusha
dec
mov
xlat
sub
pusha
xchg
mov
das
in
mov
in
adc
in
arpl
fldt
push
enter
dec
add
jmp
mov
cmp
fidivrs
push
int3
lods
pop
jp
jge
or
xchg
xor
cmpsl
dec
push
ljmp
or
cwtl
in
inc
hlt
mov
sti
and
je
jmp
xor
cmpsb
movsl
ja
sbb
sbb
xchg
inc
sub
adc
scas
dec
cld
rorl
push
push
push
mov
adc
jg
cmp
lahf
push
push
jecxz
sbbl
repnz
sub
xchg
shl
gs
fdivrl
ficomps
push
roll
fisubs
mov
shlb
int
dec
xor
addr16
cs
sahf
fcmovne
sbbb
jl
sub
out
gs
data16
and
cli
cmp
mov
mov
das
push
ret
pop
clc
test
clc
out
pop
nop
inc
mov
movl
jp
movsb
lcall
dec
adc
fxch
test
fld
mov
rcrl
mov
data16
aam
mov
data16
cmpb
mov
jno
sub
cmp
add
call
jbe
insl
cmp
pop
scas
and
insl
sub
in
mov
jae
push
pop
cmp
fisubs
cmp
cwtl
xchg
mov
push
add
pop
mov
and
imul
and
roll
mov
xchg
mov
imul
jb
inc
sub
hlt
pushw
xchg
jne
scas
loop
ffreep
sbb
popf
xor
dec
xchg
mov
sarb
loope
out
loop
aaa
xchg
addb
lret
or
push
orl
mov
in
sbb
adc
out
ret
or
add
andl
jno
stc
repz
pop
cwtl
xor
xor
mov
adc
xchg
mov
inc
stos
jp
sbb
mov
jns
movsl
add
subl
stos
out
push
test
dec
mov
cltd
test
jbe
loop
cwtl
icebp
scas
adc
repnz
cs
int3
jmp
mov
out
lods
pop
sbb
mov
adc
inc
mov
popa
and
lods
rcll
cmp
cwtl
arpl
cmp
add
jge
ficompl
push
mov
fbstp
xchg
mov
or
push
divb
insl
out
cltd
inc
mov
arpl
fnstcw
test
push
fistpl
in
mov
add
mov
pop
add
sti
enter
lret
mov
and
push
mov
hlt
or
idivl
add
or
sbb
cmp
fstpl
hlt
fldenv
js
push
jo
adc
lock
lcall
push
inc
inc
outsl
in
dec
stos
sbb
sbb
pop
jmp
xchg
push
inc
jl
icebp
adc
xor
xchg
cmp
lock
divb
cli
aam
cmpsb
jg
fsts
pushf
imul
inc
mov
push
inc
cltd
shlb
dec
loope
jmp
insb
push
jecxz
mov
pop
cmp
xchg
int3
lods
movsb
cmp
mov
push
dec
aaa
cmp
in
imul
andb
jl
push
cmp
sahf
xor
adc
jmp
loope
dec
jb
sbb
push
xor
test
outsl
xchg
xchg
dec
ja
cld
hlt
test
jmp
jnp
jmp
add
aad
std
fadds
loope
ret
loop
inc
jns
popa
aaa
or
pusha
call
lock
aad
pop
pop
pop
ss
xchg
dec
push
into
fptan
cmp
fbstp
into
dec
adc
int
ja
ret
inc
jns
lahf
or
out
cwtl
stc
fdivp
jo
push
mov
and
call
adc
into
cmp
mov
mov
sub
pop
mov
mov
in
push
lods
xor
add
mov
leave
cwtl
pop
pop
loop
lret
fdivp
mov
mov
test
or
xor
jb
imull
jo
pop
push
sbb
xchg
cmp
orb
cmp
adc
push
movsb
hlt
hlt
mov
or
mov
xchg
popa
aam
adc
divb
das
lods
push
sahf
and
xor
insl
in
dec
inc
mov
cmpsb
pop
imul
adc
push
dec
testl
movsb
jae
push
int
shlb
mov
lcall
xchg
push
ds
dec
pop
inc
xchg
ds
sbb
arpl
lds
dec
lds
ret
leave
js
push
shl
add
sar
jb
and
and
dec
out
imul
lahf
jge
push
jbe
lods
pop
outsl
icebp
popf
cmp
xchg
loope
dec
add
outsl
fiadds
ret
pop
out
push
imul
rcrl
cmp
fmuls
cmp
sbb
sbb
in
sub
jno
mov
xlat
mov
cmp
iret
push
aas
mov
mov
mull
mov
sahf
insl
lods
cmc
or
xlat
dec
leave
jbe
sub
push
imul
mov
mov
leave
scas
jb,pt
test
into
rorb
add
cmpsb
insl
jns
mov
fnsave
or
mov
inc
mov
sub
dec
push
jns
xor
inc
shl
test
dec
rclb
lds
mov
and
out
xor
jge
movsb
jmp
and
jg
push
dec
jae
pop
enter
imul
mov
cmp
dec
into
mov
fsqrt
add
mov
adc
gs
and
je
int3
sub
aaa
inc
aaa
movsb
mov
fmull
xchg
ss
mov
pop
gs
push
ror
scas
ljmp
test
jo
inc
cltd
xchg
add
jns
loop
lods
addr16
dec
push
dec
inc
aas
andb
clc
xchg
pop
repnz
cmc
filds
out
sarb
imul
lcall
into
and
jne
aad
popa
int
repz
out
leave
sub
iret
icebp
sarb
lea
xor
or
sub
and
push
cmp
popa
pop
push
lret
jae
loope
divb
arpl
push
sub
popa
mov
icebp
lds
pop
lods
add
stos
pushf
pushf
arpl
dec
and
dec
inc
loop
shr
sub
fstpt
jae
jne
shlb
mov
into
pop
cli
int
inc
iret
jns
mov
jmp
add
loope
lret
xchg
and
adc
sbb
mov
lds
fstpl
add
and
xlat
jg
cltd
push
xor
les
cmp
push
jle
ficoms
std
lock
mov
mov
pusha
push
icebp
sbbb
into
jg
fildl
lret
popf
mov
sub
inc
mov
outsb
push
xor
adc
push
loopne
js
fsubs
jg
mov
pop
mov
lret
mov
repnz
jo
push
adc
fcoml
outsl
mov
cmpsb
stc
addr16
rcrb
stos
xlat
cmp
add
adc
inc
inc
adc
popf
and
mov
sarl
jle
xor
ds
cmpl
inc
xor
mov
and
add
aas
xchg
jae
orl
int3
mov
ds
push
cld
add
dec
pop
hlt
pushf
or
dec
cli
cmp
ljmp
js
js
dec
cmp
ret
push
inc
mov
xor
inc
je
or
push
and
test
sub
xchg
jns
xchg
data16
push
pushl
ficoms
arpl
dec
pop
cltd
shr
and
fstl
outsl
inc
mov
aad
add
insl
es
insb
ds
sqrtps
fwait
sbb
test
mov
repz
popa
inc
inc
pop
dec
in
and
lcall
push
movsb
xchg
jle
jnp
stos
popf
into
lods
dec
lret
divl
es
pop
lea
nop
sbb
sbb
daa
out
dec
or
dec
lret
in
pusha
adc
aas
or
vpsrad
add
and
arpl
push
lret
add
jmp
stc
jp
cmc
push
sub
sti
out
dec
insl
sub
inc
jmp
jle
xor
pop
mov
lea
xchg
daa
xchg
cmc
nop
adc
inc
mov
loope
cmp
xor
dec
cmpsb
fucom
mov
out
dec
add
clc
sbb
movb
inc
popa
cltd
in
fildl
arpl
mov
sbb
add
cmp
daa
and
mov
rclb
push
or
test
cmpsb
cmp
repnz
sub
sti
adc
stos
mov
pop
out
das
ja
mov
outsb
lcall
cmpsl
in
pusha
lret
adc
hlt
inc
jno
mov
or
cmp
test
fwait
push
das
orl
sub
sub
pop
pushf
shrl
cmp
rcll
sbb
movsb
repz
jo
mov
rcrb
mov
mov
rcrl
nop
outsb
sub
sti
orb
dec
xorl
or
cmp
dec
clc
cmpsl
test
or
rcrb
stc
hlt
mov
cwtl
rcrb
push
movsl
dec
inc
addr16
sub
add
or
xor
jo
mov
adc
aam
mov
js
in
push
cmp
mov
fninit
fnstenv
ret
or
jmp
pop
sti
ss
mov
fstl
pop
in
outsb
movsb
mov
andl
add
pop
xchg
pop
push
sbb
fistps
ror
fldl
aas
sbb
popf
sbb
js
mov
icebp
movsb
insb
push
xlat
mov
mov
nop
cmpsb
mov
add
cli
inc
or
push
loopne
adc
pop
add
dec
stos
push
mov
adc
insl
stc
out
in
sub
pop
mov
pusha
scas
adc
cld
lahf
incb
xlat
and
mov
mov
aad
repnz
jae
lds
neg
or
xor
adc
push
adc
lods
adc
sub
ja
inc
outsb
dec
add
sub
add
xor
mov
mov
arpl
pop
mov
inc
sarb
push
test
in
push
test
xor
pusha
cld
addl
out
ficompl
stos
and
int3
push
xor
incb
mov
xor
movsb
and
mov
jne
or
mov
xchg
mov
ss
xchg
xacquire
repnz
cmpl
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
out
movsb
jb
dec
push
push
sub
push
push
sarl
fdivl
lahf
rcl
sub
mov
sub
sarb
orl
fstpt
divb
add
rcrb
in
adc
push
mov
jnp
or
xor
sbb
push
push
es
xchg
pop
pop
add
pop
sub
xchg
fisubrl
fimuls
daa
pop
mov
js
fimull
lcall
je
std
mov
outsb
pop
push
in
dec
dec
adc
lds
insl
mov
lea
cltd
btc
sbb
ror
mov
aam
test
loop
adc
rolb
test
pop
negl
jl
aad
popa
mov
enter
call
cld
inc
std
iret
xchg
aaa
xlat
addr16
std
lcall
dec
mov
dec
callw
inc
gs
push
hlt
inc
add
push
fdivrs
lahf
jns
xor
push
lock
decb
sub
addb
and
ret
pop
sbb
loope
pop
lret
push
add
insl
outsb
rol
jno
and
add
mov
mov
dec
or
sub
mov
mov
and
popf
sbb
out
sbb
dec
sarb
mov
and
daa
insl
inc
push
mov
adc
das
or
xchg
dec
or
inc
adc
xor
test
mov
popf
xchg
dec
mov
sbb
push
xchg
add
ss
cmp
jecxz
pusha
mov
mov
and
shl
pop
test
les
sub
jns
pusha
ljmp
jg
iret
xor
mov
clc
jnp
xor
sarb
jo
mov
push
xchg
arpl
lods
jmp
in
rep
inc
fistpl
mov
or
shl
and
mov
inc
loop
enter
aad
pop
pop
mov
sub
and
rorl
rclb
or
push
cld
mov
out
cmp
hlt
dec
jno
pop
ret
dec
addr16
int3
popf
pop
das
push
jb
or
popa
insb
aad
add
xor
dec
ss
inc
jl
mov
pop
mov
nop
lret
pop
xor
ljmp
aaa
pop
arpl
dec
js
call
inc
mov
xchg
xor
orl
loop
movl
push
or
aam
xor
mov
jle
scas
adc
clc
gs
or
push
inc
loope
sti
test
stc
imul
idiv
imul
xor
mov
dec
into
sar
dec
jne
xchg
mov
into
sbb
clc
insb
ret
nop
sbb
repz
push
jb
scas
pop
cmp
cmpsb
aad
sbb
inc
or
cmp
stos
or
dec
sti
jg
test
xchg
out
mov
pop
fsubrl
cmpsl
sbb
add
rcrl
jp
jle
imul
lea
sarl
clc
jne
pop
test
ret
scas
mov
daa
xlat
mov
pop
or
xor
mov
inc
pushf
mov
xor
jns
incl
jb
sbb
rclb
sbbl
pop
popa
sub
add
fs
push
popa
fnstsw
call
sbb
test
cmp
in
inc
pop
leave
int3
data16
jp
dec
xchg
xor
pop
ffree
xchg
xchg
pusha
cli
in
aam
and
movb
lods
cmc
out
movsb
rorb
out
mov
and
pusha
testb
xor
insb
negl
cmpsl
mov
sbb
mull
addl
leave
fiadds
xor
cmp
mov
push
out
ljmp
xor
rcll
sbb
and
int3
adc
pop
scas
mov
xchg
mov
pop
or
pop
clc
pop
inc
or
mov
add
outsl
mov
outsb
mov
xchg
mov
add
sub
idivw
movsl
xor
pusha
ret
add
shlb
std
inc
push
add
and
clc
dec
mov
test
xchg
adc
cmp
xor
xchg
cmp
mov
in
push
fimull
mov
inc
stos
fldenv
into
aam
lret
xor
cmp
cmp
out
fimull
jle
je
lcall
scas
fmul
enter
lods
inc
mov
lods
or
ljmp
mov
out
pop
out
mov
mov
sub
es
inc
pop
cmc
lock
or
es
cmp
mov
ds
inc
dec
in
cltd
pop
fists
or
scas
jp
out
or
or
inc
pop
push
inc
jp
mov
les
insl
pop
cmp
inc
insb
cld
add
cmp
and
cld
test
rolb
test
cmpsl
mov
dec
std
out
push
inc
rorb
mov
fiadds
sbb
inc
push
int3
cwtl
scas
loopne
mov
push
jle
shl
jnp
xor
movsl
mov
jge
mov
or
pushf
aas
adc
or
sub
push
jns
mov
jmp
test
cmp
out
mov
hlt
or
cmpxchg
or
cwtl
mov
repnz
jecxz
mov
aas
xor
in
fidivrl
dec
sbb
cmp
sub
std
xlat
pop
xorl
cmp
aad
mov
add
cmp
inc
xor
xor
ror
cmpl
fisubrs
sbb
inc
lock
gs
dec
les
stc
pop
fldl2e
cmp
push
xchg
push
xor
sub
ret
jb
pop
in
dec
cwtl
fisubs
jae
inc
repnz
es
xchg
pop
jmp
add
add
mov
loop
and
push
cltd
jecxz
mov
rcrl
stc
sub
jp
xor
mov
pop
ret
adc
ret
push
push
push
loopne
jnp
out
fnstenv
in
adcb
mov
xorl
adc
shl
gs
jb
xchg
cmp
test
aam
scas
jb
push
xor
scas
mov
dec
xor
mov
sub
cmpsl
lods
ss
add
cli
or
xchg
cmp
fcomps
std
and
pop
int
pop
add
aam
dec
inc
mov
add
push
sbb
loope
in
push
pusha
mov
sub
ja
cmp
cltd
clc
add
dec
inc
mov
dec
je
roll
cmp
in
jp
jno
sub
imul
or
adc
xor
loop
cmpsb
or
aam
adc
loop
lods
mov
push
push
or
fidivs
fildl
pop
int
cmp
loopw
stc
push
movsl
add
in
ja
or
aas
mov
out
ljmp
xchg
xchg
enter
push
push
out
js
add
dec
cmpsl
popf
icebp
mov
xchg
sub
pusha
pop
push
sahf
add
pop
dec
inc
and
pushf
pop
stc
inc
test
rclb
adcl
call
push
jo
out
popf
jle
mov
jnp
lret
in
out
in
roll
pop
pusha
loopne
test
ljmp
stos
fstp
rcrb
outsl
cld
in
inc
mov
scas
nop
xchg
lret
fcompl
add
pusha
ret
push
cld
lods
add
pop
pop
dec
cmpsl
test
dec
jb
or
je
loop
mov
mov
sub
or
push
and
push
jne
push
fisttps
repz
pmullw
mov
dec
add
cmpsl
jae
dec
jns
loopne
add
mov
icebp
mov
imul
mov
sti
in
insl
add
data16
js
ljmp
sbb
xor
repz
gs
incb
inc
bnd
jo
fwait
movsb
pop
mov
mov
nop
cmpsl
data16
cs
aam
inc
add
insb
outsb
aaa
jmp
dec
leave
xor
daa
inc
push
insb
sbb
dec
loope
mov
cltd
gs
insb
xor
jl
and
dec
ficoml
scas
outsl
lcall
icebp
jbe
test
xchg
and
lds
xchg
mov
dec
adc
lods
call
pushl
xchg
es
js
jmp
push
insl
inc
lods
out
xlat
or
mov
mov
call
pop
sub
xlat
ds
adc
fucomp
adc
jle
and
push
dec
dec
loopne
pop
dec
pop
jmp
lret
movsl
jg
pop
lds
sub
add
push
out
aaa
gs
push
jmp
xor
popa
hlt
xchg
cltd
xchg
xor
add
inc
pop
icebp
xchg
cmp
in
lret
das
mov
sub
in
popa
repnz
jmp
xchg
popa
mov
cld
negl
gs
jbe
popf
xchg
lds
lea
pop
mov
dec
cwtl
push
cmp
xchg
push
sub
ret
add
push
add
cmp
popa
out
mov
cli
mov
fildll
jle
cmpsl
lahf
daa
dec
xor
and
mov
mov
push
mov
mov
jg
dec
inc
pop
xchg
lds
icebp
sub
fists
jl
dec
xor
xchg
fldenv
xor
mov
jg
sub
movb
cmpsl
inc
fsts
repnz
xor
loope
jnp
push
stos
mov
aam
sub
xchg
in
sbb
lahf
sub
cli
cmp
repnz
push
mov
repnz
adc
imull
fldl
push
out
and
in
fsub
cwtl
icebp
cmp
jbe
loope
and
rcrl
popa
inc
call
fisubl
shr
mov
cmp
xor
test
jnp
mov
mov
mov
lcall
mov
cmpsl
mov
fnstenv
rcrb
lahf
test
out
xor
cmpsl
jbe
xor
popa
jae
ja
push
stos
es
rcll
adc
or
cs
xor
call
imul
xchg
imul
mov
mov
add
xchg
xchg
mov
scas
mov
push
dec
cmp
sbb
xchg
mov
int
adcb
lods
cmp
push
mov
sub
sub
or
scas
test
daa
add
addr16
shll
and
inc
xchg
pop
fimull
out
dec
jmp
pop
aad
xchg
inc
leave
gs
out
pop
jl
sbb
cmp
jge
cmp
ds
push
pop
or
jae
test
or
cli
jb
sub
std
and
cmp
cltd
subb
fstpt
rcll
adc
mov
sub
data16
in
ja
jecxz
fsubp
pop
in
xor
sub
mov
dec
push
cwtl
inc
dec
mov
mov
movsl
jg
mov
push
movsb
mov
xchg
cmp
lock
inc
xchg
inc
insl
dec
jmp
lret
shrl
and
sbb
and
subb
js
mov
jmp
jno
jle
lcall
pushw
mov
add
mov
add
in
xchg
xchg
pop
divps
lds
int
dec
mov
popa
inc
movsb
xlat
dec
incl
lret
sbb
add
jo
sbb
xchg
rcrl
fcomps
in
mov
xchg
fisttps
pop
mov
out
clc
dec
cmp
loopne
popa
jmp
addr16
or
dec
stos
push
add
and
ret
push
negl
adc
dec
jbe
imul
cmpsb
pop
lock
scas
cmp
test
imul
jmp
sti
loopne
leave
lods
pop
push
mov
mov
sbb
nop
cmpsl
call
cmp
das
rcrb
jo,pn
insb
insb
lret
jnp
xor
sbb
jnp
hlt
cmpsl
outsb
les
aas
movsb
mov
dec
ljmp
bound
mov
sbb
daa
pushf
pop
dec
xchg
leave
pop
in
xchg
scas
cmp
add
cltd
sub
aad
incl
cmp
jae
cwtl
push
push
orl
jg
fcomps
or
xor
pushf
inc
stos
jle
xchg
pop
pop
sti
jae
rcr
mov
bound
xchg
pushf
idiv
push
imul
addr16
mul
xor
mov
insl
insb
aaa
mov
lcall
fadds
adc
call
je
adc
dec
scas
addr16
push
stc
jno
sbb
adc
ljmp
adc
pop
bound
mov
cltd
pop
pop
xchg
adc
imul
sub
aad
or
push
roll
mov
lahf
inc
pop
xchg
push
or
int3
leave
add
mov
test
icebp
shll
pop
lods
adc
clc
cs
sub
shrl
xlat
push
stos
jbe
cld
sub
mov
pop
jb
insb
fwait
movsb
ja
mov
insb
or
hlt
data16
push
outsb
enter
dec
add
fs
frstor
cmc
adc
jle
push
sti
outsl
xchg
inc
popf
cmc
or
pop
or
dec
imul
sub
mov
repz
adc
pop
inc
leave
cmp
mov
fwait
push
mov
mov
out
fxch
mov
jne
lea
sub
xchg
adc
lods
pop
jecxz
xchg
mov
jge
sub
adc
or
dec
sub
push
lahf
sbb
push
adc
js
push
add
dec
pop
dec
punpckhbw
xchg
push
jo
dec
add
mov
push
jg
or
push
stos
add
sub
sub
push
sbb
jmp
sahf
setl
xchg
sbb
push
fs
add
test
fistpll
push
out
adc
pushf
in
mov
dec
jne
fsts
inc
bound
push
cmp
xor
adc
fdivrp
and
fimuls
mov
xchg
adc
sub
xchg
out
roll
inc
inc
mov
pop
adc
inc
jg
imul
push
or
leave
adc
fldt
ret
jp
dec
dec
inc
out
dec
lret
movsb
scas
mov
into
jns
rorl
or
xchg
jecxz
out
les
movsl
sbb
lods
mov
rcr
test
imul
xor
dec
xchg
push
or
xchg
adc
sbb
rclb
out
adc
mov
xchg
jnp
stos
data16
mov
rolb
cld
inc
mov
je
roll
in
or
imul
jae
lock
test
aad
insb
sbb
scas
test
vpperm
mov
sbb
cwtl
mov
or
xor
cltd
sbb
sarb
adc
mov
dec
mov
lods
dec
fmul
mov
loope
pusha
aaa
lret
jecxz
dec
pop
in
out
sub
into
in
into
adc
out
imul
dec
jp
das
mov
xor
loope
adc
dec
adc
daa
adc
cmpsl
aad
mov
lods
add
loope
pushf
enter
ret
xor
lea
inc
ds
adc
das
in
into
xlat
push
jge
mov
out
or
mov
xchg
adc
addr16
enter
mov
inc
out
lock
mov
push
mov
xor
push
push
loopne
inc
stos
pop
lahf
xchg
decl
pop
aaa
repnz
dec
pop
cmp
xor
mov
test
ficoms
sub
sub
adc
pop
pop
icebp
les
xchg
push
xchg
movsb
insl
mov
fimull
or
sub
cmp
mov
scas
push
jno
dec
dec
xchg
movsb
loope
push
mov
les
lcall
pop
jp
xor
dec
test
imul
data16
mov
addb
aam
mov
out
push
mov
add
stc
aam
insb
pop
imul
daa
flds
cli
adc
insl
cmc
repz
out
stc
mov
loopne
fimull
aad
rorl
fldt
jns
xor
pminub
dec
cmp
push
dec
xchg
cmp
mov
pop
xchg
out
hlt
dec
test
rcll
fbstp
mov
sbb
cmp
popa
or
lds
cmpb
cmpsb
lock
dec
shlb
mov
fsubp
lock
xchg
scas
push
mulb
dec
jnp
cld
cmc
dec
scas
add
cld
push
and
pop
push
dec
aam
inc
dec
es
call
mov
in
popa
mov
mov
lcall
mov
loop
cltd
bound
xchg
lods
add
push
mov
cmp
pushf
fs
es
push
or
adc
mov
push
mov
sbb
outsb
call
or
jle
in
sub
insb
xor
mov
dec
dec
sub
cwtl
sbbl
fisttps
sbb
ret
gs
mov
lcall
xchg
mov
shl
cmc
sahf
jnp
popa
ret
mov
outsl
lret
sbb
pop
fdivl
xlat
push
push
push
insb
ja
test
push
or
inc
into
aaa
lods
sub
rep
pusha
cmp
mov
mov
or
test
ljmp
dec
inc
iret
push
pop
aas
add
sarl
leave
adc
hlt
sbb
setb
iret
call
inc
inc
mov
test
repz
jmp
push
imul
das
jl
xor
lahf
jg
aas
aaa
pop
adc
xchg
xchg
in
xchg
mov
adc
es
sub
adc
xchg
stos
mov
lea
bound
sub
sub
pop
mov
and
stos
mov
sbb
rcrl
test
sub
subl
fcomi
xchg
mov
and
push
adc
sub
aad
xor
dec
dec
xor
les
mov
and
mov
in
sub
mov
stos
pop
daa
jns
imull
jnp
sub
loop
fldl
xor
divl
scas
mov
cld
adc
adc
sub
pushf
or
pop
in
mov
mov
movsl
leave
inc
push
adc
in
dec
xor
inc
inc
aad
sub
daa
sub
mov
repz
jb
icebp
fiaddl
aaa
jle
inc
ss
nop
ja
test
shrb
lea
mov
cltd
sub
push
mov
in
sbb
mov
sahf
dec
jnp
add
inc
iret
xor
test
push
psllq
adc
jmp
push
cmp
pop
sub
push
fistpl
mov
in
xchg
pusha
inc
cmp
lods
pop
pop
push
sti
fnstcw
leave
pop
repz
out
sbb
mov
iret
test
scas
xlat
popf
loope
lret
add
mov
out
jmp
cmp
jmp
lds
jne
or
mov
jle
add
mov
shll
movsl
jno
add
in
idiv
les
mov
sbb
xchg
stos
fxch
mov
jmp
ret
inc
js
cltd
les
insl
arpl
cmp
mov
mov
cli
or
sbb
fwait
dec
pop
testb
stc
cli
test
jae
jnp
outsl
insb
lods
mov
and
push
push
repnz
movsb
lahf
mov
fwait
adc
cmp
jnp
cmp
leave
jg
and
jb
ret
fiadds
mov
inc
scas
cmp
adc
sub
add
insl
xchg
cltd
xor
sub
js
pop
ret
mov
ret
pushf
adcl
jge
and
popf
jecxz
shrl
push
mov
xor
iret
push
jb
mov
sub
mov
add
loop
cmp
cmpsl
rorl
pop
mov
int
xor
sbb
mov
or
cmpsb
shrb
in
xor
shlb
and
sbb
mov
in
loop
in
mov
loopne
sbb
inc
dec
sbb
dec
ljmp
cmp
das
mov
arpl
aaa
shll
and
lea
jecxz
jo
mov
popa
cmp
int
es
pop
dec
ss
jg
stc
ss
pop
cmpsb
inc
jmp
bnd
mov
mov
pushf
fldl
repz
cltd
std
or
ret
lock
pop
sbb
test
sub
mul
xlat
push
dec
ss
cmp
andl
sbb
xchg
roll
dec
dec
inc
push
ss
xchg
hlt
test
mov
or
int
inc
aad
cld
fwait
xlat
push
std
jg
jmp
daa
shll
sbb
dec
cmp
pop
ret
jecxz
push
imul
stos
pop
mov
sbb
imul
arpl
xchg
data16
or
xchg
ds
cmp
or
inc
lea
pop
jno
mov
es
fisttpl
and
sarl
jl
rcrb
imul
adc
icebp
daa
pop
mov
ds
stos
lds
adc
inc
cmp
pushf
xchg
pop
rclb
and
ret
inc
push
sub
fnstcw
push
fldt
xchg
jb
test
lret
lds
push
inc
cmpsl
cli
stos
xchg
jne
inc
jno
xor
sub
sbb
sbbl
mov
pop
adc
xorl
test
xor
das
loope
xchg
insb
jmp
and
inc
fmull
mov
ljmp
lret
sub
sub
sbb
popf
in
adc
out
fdivrs
loop
ficomps
cmp
test
addb
cmp
ret
cmp
das
push
shll
mov
test
push
cmc
adc
sub
inc
pop
arpl
cmp
xchg
sbb
and
mov
adc
out
dec
loope
outsb
outsl
popa
inc
add
enter
enter
adc
push
add
popa
jb,pn
lahf
in
sub
bound
lret
mov
inc
jmp
push
shl
out
jle
repnz
mov
sub
addr16
mov
pop
sub
test
push
mov
lds
dec
adc
loopne
inc
fcmovnbe
pop
cld
aaa
mulb
cmpsl
loop
std
xchg
pop
pop
pushf
aad
mov
movsb
les
lods
insl
cmp
fadd
insb
pop
dec
cmp
es
nop
mov
shlb
mov
pop
sbb
inc
in
adc
shl
sbb
xchg
orb
into
outsl
add
lods
andb
cmp
in
jb
dec
icebp
mov
fldenv
sbb
lahf
add
aad
pop
aaa
decb
iret
mov
mov
mov
test
dec
movsl
push
imul
out
sbb
or
xchg
inc
sarl
stos
bound
pop
rcr
cmp
mov
pop
outsl
loop
movsb
fmull
lock
sbb
add
aas
fadd
out
ja
adc
shr
or
shrl
xor
das
ret
out
imul
push
test
ja
in
inc
mov
mov
rcrb
imul
pop
pushf
leave
push
xchg
inc
popl
jge
push
sub
cli
adc
mov
jmp
into
sbb
jae
aaa
roll
lahf
js
mov
push
and
ret
pop
enter
xchg
movsb
out
sbb
das
mov
movsb
shlb
insb
fcomip
jns
pusha
add
jmp
mov
cwtl
adc
je
mov
lods
push
in
std
sbb
adc
das
test
or
out
pop
adc
gs
rcll
push
push
call
lcall
cltd
mov
mov
or
add
push
add
xchg
in
nop
sub
sub
sbb
lods
pop
and
inc
test
push
int
inc
inc
jo
in
fldt
pushf
and
xchg
shrl
cli
jno
sub
jne
aas
add
loop
sbb
inc
push
shlb
push
aam
dec
mov
sub
enter
xchg
sti
js
jne
xor
stos
add
add
adc
dec
push
cs
and
push
inc
pop
push
jmp
sub
or
iret
xor
add
xchg
push
mov
das
sbb
cld
push
into
sbb
pop
imul
or
sbb
shlb
xchg
pop
filds
xor
sbb
or
adc
sbb
sub
or
xor
sbb
xchg
je
stos
sbb
jns
sti
bound
in
popa
adc
mov
jmp
pop
cmpsb
xor
sbb
shlb
jne
bound
pop
lods
sbb
addr16
jl
mov
rclb
pop
fbstp
adc
inc
aaa
outsb
call
mov
and
jae
das
mov
test
inc
jg
sarl
dec
daa
dec
inc
pop
scas
xchg
or
pop
mov
cmp
in
test
lock
jmp
andl
mov
cmp
mov
int3
lea
lahf
or
mov
rcrl
jge
add
inc
pop
cli
adc
dec
cmpb
push
dec
sbb
jb
fistpl
decb
xor
ds
adc
add
fs
cmp
pop
adc
lods
jle
fs
sub
adc
scas
shll
fidivrl
sub
xor
fmul
xor
inc
insl
fisubrl
mov
popf
jl
aas
or
in
in
test
cwtl
xor
cld
mov
push
and
pushf
push
adcl
das
lcall
inc
scas
es
xor
scas
and
outsl
sahf
cmp
push
fldl
mov
ror
mov
out
add
aaa
out
rclb
inc
add
xchg
dec
out
add
mov
push
repz
testb
xchg
push
lret
dec
lods
daa
aad
mov
out
lret
pop
out
fisubl
popl
ja
push
fadds
dec
pop
pop
lods
into
les
out
insb
iret
decb
test
pop
insb
push
into
sub
inc
lds
push
and
imul
lcall
loop
jge
inc
ss
and
cli
push
es
mov
sub
sar
pop
xor
sub
mov
hlt
mov
dec
scas
mov
or
add
inc
jno
gs
pop
dec
lret
sbb
aaa
and
fidivl
scas
sbb
arpl
enter
or
stos
leave
cmpb
jo
fnsave
jg
sub
popf
je
ret
dec
fisubrl
cli
mov
push
int3
stc
mov
pop
rcrb
stos
fists
pushf
lcall
pop
pop
and
jp
cmc
dec
push
fcompl
adc
mov
push
xchg
xchg
sub
ljmp
lods
mov
fwait
jnp
imul
push
fsubr
and
and
push
mov
mov
push
cmp
in
mov
mov
or
push
popa
or
insb
mov
cmp
inc
bound
int3
mov
ss
das
adc
ret
adc
into
xchg
inc
add
lods
andb
outsl
shlb
les
or
sti
cli
adc
push
movsl
gs
sub
test
das
testl
jmp
shl
and
cwtl
repnz
hlt
lea
cmp
roll
cmp
sub
inc
fs
jno
xchg
mov
je
insb
sarb
push
in
lds
ret
push
inc
aam
ja
lods
iret
shlb
cmp
sbb
popf
divb
xor
aad
jns
mov
sub
mov
mov
pushl
xorb
dec
test
jg
daa
fistl
xor
and
imul
inc
imul
mov
jns
icebp
and
aad
into
das
jno
xchg
addr16
mov
and
inc
ret
xchg
xchg
cmp
jae
sbb
adc
lret
imul
shl
mov
aas
inc
cltd
pop
or
cmpsb
lds
add
jl
das
adc
repnz
test
or
and
les
jmp
lret
mov
out
xor
iret
mov
outsl
insb
sub
xor
cld
adc
mov
lea
sub
lcall
adc
adc
sub
pop
in
jb
lods
cmc
adc
bound
mov
insb
jl
and
xchg
add
xor
xchg
pop
add
out
mov
outsb
xor
shlb
pop
sbb
fstpt
mov
mov
xlat
aam
es
in
scas
js
xchg
mov
push
mov
nop
ss
push
mov
cmp
inc
addr16
lret
jecxz
inc
aam
mov
loopne
cmpsl
loop
imul
mov
jge
loop
in
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
mov
push
push
sub
push
push
sti
aas
sub
cmpsb
ficompl
xchg
daa
cmpsl
decb
inc
lahf
icebp
call
mov
mov
push
inc
push
sbb
out
arpl
push
fsubl
bound
fldl
rclb
fwait
xlat
cmp
test
jmp
mov
cmpsl
test
add
adc
push
and
ss
push
and
inc
add
add
lea
pop
lret
cmc
push
xchg
pusha
xchg
cwtl
push
test
mov
jo
loop
daa
scas
xchg
lcall
cmpsb
decb
or
test
pop
and
adc
dec
dec
ret
jge
aas
test
add
dec
into
dec
cld
jmp
jb
or
xchg
out
js
push
aad
pop
cmp
bound
popf
dec
icebp
rcr
cmp
fstpl
les
cmpsb
into
outsl
xchg
mov
xor
movsl
sti
push
adc
inc
mov
sub
xchg
aam
add
adc
shlb
pusha
xchg
mov
and
mov
pop
add
fcompl
cmp
jns
pusha
ret
xorl
inc
push
imul
test
and
fs
dec
mov
mov
xchg
ss
in
scas
mov
fs
add
in
hlt
fpatan
nop
into
std
xchg
inc
mov
xorl
addr16
jge
ja
jg
or
and
lea
or
mov
push
cs
ret
ret
shlb
cmpsb
fists
cmp
push
out
and
imul
xor
sbb
sub
jno
dec
hlt
jge
in
sub
fimull
dec
into
in
or
inc
mov
test
loop
bound
jnp
inc
in
add
add
mov
and
les
fs
aaa
rorb
adc
aam
ljmp
inc
pop
pop
mov
and
out
push
jnp
push
das
jo
pop
in
sti
sub
push
sbb
loope
jo
mov
mov
cmp
ljmp
in
gs
lods
push
out
pop
dec
xchg
adc
mov
adc
sub
cmp
sbb
jp
dec
pop
inc
imul
repz
ret
aas
mov
fnstcw
or
add
in
clc
shl
push
mov
testl
dec
inc
or
inc
mov
lods
hlt
ss
js
mov
lcall
and
int3
push
mov
pop
pop
dec
scas
and
dec
xlat
iret
clc
bound
in
xor
adc
mov
mov
push
jge
lcall
cmp
xchg
test
sbb
jmp
lcall
rolb
sbb
mov
leave
sbb
mov
fwait
aas
and
pop
mov
fisttpl
out
bound
cmp
out
add
and
lahf
test
sbb
ds
xor
idivb
lea
sbb
iret
fildll
sub
arpl
in
mov
std
inc
fcoms
dec
push
and
imul
mov
add
mov
int
or
sbb
adc
daa
push
and
jmp
andl
add
loopne
sbb
jb
push
add
xor
int3
and
xchg
inc
loop
imul
icebp
shll
push
jo
push
add
sbb
out
in
sub
adc
mov
pop
xchg
les
mov
dec
jns
jae
jae
mov
push
call
mov
mov
sbb
mov
or
mov
jge
push
jo
enter
mov
out
adc
cmpsb
jb
lods
out
jp
sub
add
adc
adc
pop
sbb
mov
lea
jb
in
sti
add
mov
mov
xor
jns
out
fstpt
adc
sbb
popf
mov
int3
pop
fucomp
sub
xchg
adc
add
xchg
out
testl
leave
pop
xlat
jle
push
xor
mov
ret
neg
xor
cs
sarb
mov
xchg
scas
mov
jnp
mov
sub
mov
repnz
std
push
add
call
ret
push
mov
lods
mov
gs
int
les
xlat
je
adc
in
pop
dec
jnp
inc
aam
pop
out
mull
push
fucomp
dec
rcrl
icebp
pop
jecxz
insl
pop
adc
popl
push
lods
adc
jl
mov
xchg
call
rcr
scas
lret
add
daa
cli
pusha
pop
xor
enter
mov
arpl
jnp
jne
shll
inc
loopne
add
add
jl
push
fsubs
cmp
ljmp
hlt
jle
jle
pop
mov
data16
ret
outsl
pop
fldcw
mov
popa
shlb
push
xor
xor
lock
push
jbe
jp
movsl
aas
sti
fildl
popa
call
mov
pop
cltd
push
or
out
jp
int
push
fmull
add
loope
xchg
xchg
push
mov
mov
pop
cwtl
ja
adc
inc
jmp
cli
pop
das
mov
fwait
add
mov
mov
jg
mov
adc
stos
push
fcompl
leave
sbb
out
adc
lods
lret
xchg
mov
add
das
rep
mov
mov
fucomi
test
movsl
outsl
sub
inc
shr
std
insb
int
adc
cmpsb
test
and
lret
or
jno
test
xchg
popa
pop
into
insb
out
ljmp
mov
sub
sahf
fdivrl
mov
lcall
mov
ret
sahf
xor
pusha
xor
outsb
ja
scas
jecxz
mov
fcoml
mov
lea
jle
mov
in
mov
lea
xchg
fidivl
pop
add
aam
loop
cmp
xchg
xor
stos
cmp
dec
rolb
rorl
or
movsl
in
cmp
dec
aam
rorl
push
mov
pop
xorb
pop
sarl
mov
out
sbb
mov
jle
xlat
pop
insl
outsl
idivl
jmp
jo
dec
hlt
scas
pop
xchg
inc
icebp
jmp
mov
dec
mov
int3
push
adc
jae
in
and
dec
dec
movsl
inc
fldt
outsb
and
sbb
push
arpl
je
inc
push
icebp
push
rcrl
or
add
lcall
mov
nop
or
jo
sbb
adc
dec
fs
loope
and
jmp
xchg
push
mov
xor
pop
shll
ret
sahf
in
shlb
cmp
pushf
xchg
push
add
dec
dec
loope
fimuls
dec
jp
pop
cli
mul
shrb
ficoms
aam
shrb
mov
jmp
outsb
inc
jecxz
jno
repz
inc
adc
sub
in
ja
not
or
sub
pop
adc
mov
scas
std
jge
or
pusha
mov
aas
insl
or
xchg
loop
inc
idivl
jnp
mov
mov
jp
sub
push
mov
js
inc
stos
mov
add
xchg
sbb
into
pusha
push
dec
ja
je
adc
mov
enter
xchg
out
inc
scas
push
ret
ljmp
rcrl
pop
pusha
sarb
push
push
jle
out
push
add
cld
xchg
fs
inc
fcomps
and
stc
pusha
jge
and
mov
daa
popa
or
int
or
stc
popa
in
sbb
cwtl
fistpl
inc
jp
xor
push
mov
sbb
sub
xor
rorl
pop
adc
jno
aad
insb
mov
cld
cmp
repz
sub
mov
lret
mov
sbb
mov
fs
dec
push
adc
push
fsubs
outsl
mov
and
pop
jbe
mov
in
pop
jae
or
das
stos
nop
xchg
jnp
push
pop
mov
pop
bound
mov
and
jae
jb
std
insl
sub
ss
jne
imul
movsl
popf
std
lret
jecxz
imul
inc
daa
mov
addr16
out
aad
cmpsl
inc
icebp
adc
data16
adc
call
loope
repnz
mov
dec
dec
imull
or
lods
and
push
add
xor
neg
cmp
dec
xor
sub
mov
dec
adc
ljmp
std
sub
insb
addb
and
pop
mov
sbb
push
and
pop
ljmp
jae
repnz
lcall
cli
aas
mov
inc
push
jae
out
push
rclb
xlat
add
mov
iret
sub
sbb
and
add
mov
xchg
pushf
push
adc
outsb
mov
je
inc
ljmp
xor
mov
push
jg
into
xchg
out
in
scas
cwtl
inc
dec
inc
and
add
and
add
push
movsl
iret
mov
xchg
mov
lcall
mov
pop
pop
loope
push
sub
aam
aas
sub
cwtl
or
int
dec
ret
fldt
test
aam
push
xor
or
pop
jb
sub
push
aaa
call
int3
fisubl
xor
or
fwait
scas
and
jo
jae
test
mov
mov
push
dec
in
adc
push
xor
in
fldenv
sbb
xchg
lock
mov
repnz
sti
orl
dec
gs
push
push
mov
pop
cmp
lret
mov
cmp
jecxz
pop
je
ret
mov
je
mov
les
xor
jae
out
scas
cmpsl
dec
jg
insl
stos
mov
or
fnop
mov
lret
add
aaa
push
sti
add
pop
cmp
les
push
dec
jge
mov
jg
push
adc
and
mov
and
xlat
sbb
fs
jnp
sub
or
stos
repz
jnp
sbb
and
xlat
xor
adc
xchg
testl
and
faddl
ret
sbb
xchg
icebp
arpl
sbb
dec
mov
int
adc
inc
and
inc
dec
push
dec
jno
insl
jp
push
inc
dec
lds
inc
mov
lods
sbb
jmp
push
fistpll
mov
fucomi
les
jb
cld
or
test
cltd
int3
inc
in
sbb
jmp
pop
sub
bound
je
push
add
mov
xor
xchg
xchg
imul
jno
mov
ds
bound
lret
or
mov
loope
je
push
mull
sbb
mov
insb
stos
push
bswap
sbb
xor
push
enter
push
dec
fwait
int3
xor
mov
mov
adc
sub
pop
dec
aam
fxch
fdiv
push
mov
out
test
loopne
xor
ret
in
scas
fcmovnu
pop
and
test
imul
jmp
aaa
sub
jg
pop
dec
adc
sub
fs
ss
sub
orb
jge
fists
xchg
jnp
pop
insl
bnd
mov
test
in
cmpsl
clc
orb
mov
xchg
fisubrs
popf
aaa
xchg
sub
inc
ja,pn
dec
les
adc
jnp
xchg
rolb
stos
push
sar
mov
insl
movsl
js
sahf
push
sti
call
mov
dec
mov
shll
dec
aas
inc
hlt
mov
jbe
sbb
jg
mov
fistpl
dec
fcompl
mov
fisubl
les
sub
mov
imul
stos
arpl
clc
lcall
adc
jecxz
imul
jmp
mov
daa
cmp
arpl
ret
movsl
jbe
push
adc
or
dec
int
and
inc
cltd
mov
add
nop
push
xlat
jecxz
push
in
and
adc
out
xor
mov
mov
or
inc
es
mov
lock
int
mov
dec
inc
lods
jl
packuswb
sar
in
fiaddl
mov
pcmpeqb
sub
pusha
ss
shr
sbb
add
mov
out
mov
out
pop
push
jle
sbb
in
jg
mov
mov
adc
jl
ljmp
xor
sub
jno
lods
bextr
stc
and
cmp
jmp
lds
pop
adc
pop
xlat
add
jns
mov
jbe
das
inc
xchg
fstp
fildll
mov
and
add
andl
addr16
lahf
cmpsb
shll
jecxz
mov
and
pop
addr16
cmp
xor
pop
xor
test
cmc
nop
push
insl
adc
and
sub
pop
jl
fsubrs
lret
push
daa
xchg
addl
je
dec
lods
sbb
ret
call
mov
adc
or
pop
xchg
out
pop
in
cmp
arpl
leave
or
repnz
and
std
repnz
dec
mov
xchg
out
addl
insl
xchg
bound
jo
aaa
subb
cmp
out
ss
pop
and
cs
fldt
cmpsb
fstpl
push
movsb
xchg
jns
fs
int
add
bound
pop
xchg
xlat
jecxz
nop
or
mov
jmp
lods
inc
push
arpl
pop
cli
cmp
and
xchg
arpl
testb
mov
push
cld
mov
push
add
outsb
sub
call
shrb
imul
cmp
jnp
das
xor
push
ja
inc
jnp
popa
xor
dec
shrb
mov
xor
adc
add
push
movsl
inc
mov
sub
sub
push
fadds
jne
fnsave
add
add
xchg
mov
mov
repz
pop
sub
ficoml
clc
adc
xor
jae
ret
loopne
push
das
gs
enter
pop
stos
mov
leave
push
loop
mov
ficomps
pop
rcr
out
jbe
add
jb
cmp
nop
cmp
es
das
cltd
lret
mov
outsl
mov
mov
and
cmp
sub
jecxz
test
xchg
test
stos
movsl
push
xor
dec
lahf
mov
cmp
mov
jnp
push
mov
and
stos
push
out
xchg
cmp
xchg
mov
out
mov
lods
cltd
aad
mov
mov
push
repz
or
jbe
insl
mov
sbb
sub
mov
pop
inc
pop
shll
fwait
mov
inc
inc
fwait
bound
sbb
lock
xlat
lock
lret
inc
mulb
popa
ja
jno
or
inc
lret
stos
jp
insl
mov
xor
stos
movl
sub
insl
stos
loopne
mov
cli
sub
mov
icebp
xchg
insb
sbb
xor
icebp
jne
setp
jg
aad
shl
jge
xchg
pop
lea
xlat
cmpsb
call
popa
push
jmp
xor
movsb
xor
pop
cltd
ret
inc
push
cmp
sbb
add
outsb
xor
mov
in
out
sbb
out
lcall
adc
mov
jne
mov
push
sti
mov
xor
int
popf
lods
sti
outsl
mov
repnz
pop
loop
xchg
rcrl
hlt
sub
out
xchg
mov
cmp
xor
xor
inc
and
les
adc
mov
fmulp
xorb
mov
mov
push
in
mov
mov
and
adc
js
mov
std
dec
je
inc
add
jne
daa
insl
mov
xor
dec
loop
pop
jnp
mov
out
aaa
lret
cld
or
and
cmp
hlt
jl
or
jp
gs
adc
lea
push
div
add
shl
dec
sub
mov
pop
dec
push
mov
push
sub
movsl
jp
mov
outsb
xchg
xchg
leave
pop
inc
xchg
incl
hlt
mov
cmp
loop
mov
rcll
or
ja
pop
test
mov
mov
rclb
pop
clc
mov
adc
arpl
mov
mov
out
ja
inc
lahf
mov
dec
sahf
adc
in
test
lods
xor
adcb
mov
push
flds
into
call
stc
jmp
mov
mov
fcom
test
fnsave
jb
ret
lods
or
arpl
and
dec
mov
pop
test
adc
jb
test
sub
mov
mov
inc
pop
mov
ret
sbb
call
mov
pop
divb
and
into
fisttps
arpl
ljmp
std
sti
outsb
scas
xchg
ja
add
cmpsb
push
std
xchg
mov
call
adc
jnp
nop
dec
mov
cmpsb
inc
add
es
mov
sub
xchg
mov
loope
pop
cwtl
test
out
jge
mov
imull
call
scas
std
rorb
addr16
repz
in
test
test
test
lret
lret
and
decb
or
pop
xchg
inc
test
add
inc
mov
mov
daa
ja
mov
push
iret
sub
xor
insl
push
stc
jmp
orb
jbe
ds
sub
fsubl
dec
pop
lahf
inc
xlat
pop
mov
icebp
or
test
sbb
aam
fcmovnu
cmpsb
cli
inc
jp
xchg
mov
icebp
jp
add
sub
shrb
pushf
cmp
mov
xchg
pop
inc
jo
call
add
nop
adc
mov
mov
nop
lcall
jecxz
xchg
adc
inc
roll
int3
dec
mov
sbb
cmp
test
loop
sub
push
sbb
test
adc
fisttpl
arpl
loopne
das
mov
dec
nop
fldcw
cmp
ds
jne
mov
mov
out
mov
cmp
jns
pop
test
repz
sbb
outsb
jne
int
mov
out
and
cmp
das
jae
repz
pusha
fs
inc
adc
sahf
sbb
int3
outsl
add
mov
mov
or
push
inc
das
das
out
or
add
push
xchg
mov
jno
cwtl
pop
adc
mov
in
rcr
and
test
pushw
fsub
sub
cwtl
pusha
dec
into
pop
insl
arpl
jne
mov
dec
xorl
sbb
lock
in
fs
xchg
mov
out
xchg
mov
cmc
dec
cmp
push
movsb
add
hlt
mov
add
mov
dec
mov
push
ja
cld
fldcw
movsl
cs
or
xchg
add
fdivp
fisubs
lods
clc
lods
sbb
dec
out
push
pop
repnz
mov
shr
xor
cmp
xchg
xor
movsl
ds
fwait
notb
and
push
push
hlt
dec
inc
mov
ret
sbb
mov
ja
cld
and
cmp
aaa
mov
xchg
test
cmp
mov
jmp
lock
add
dec
mov
lds
pushf
nop
adc
mov
clc
dec
mov
cwtl
out
pop
mov
sub
sbb
fs
and
ja
negl
aad
and
push
push
cld
and
cmp
cli
pop
mov
loopne
adc
jge
push
aad
fstps
aaa
or
cmp
lcall
js
push
push
inc
fstl
jle
sti
jns
adc
or
mov
out
sbb
sub
movl
mov
and
enter
xchg
xchg
pop
push
add
push
adc
je
popf
xor
xor
xor
adc
sbb
dec
fisttps
sbb
in
mov
stos
call
vpcmpeqw
cmp
xchg
iret
nop
or
int
xor
jbe
adc
js
sbb
lods
or
and
pop
ljmp
and
aad
mov
imul
mov
pop
adc
and
das
push
or
and
inc
test
xchg
pop
inc
jmp
sub
loopne
lods
dec
sbb
xor
mov
or
call
ret
push
dec
push
mov
xchg
mov
or
pop
inc
ficoml
jne
push
mov
jge
xchg
jge
pop
stc
hlt
and
and
xlat
aad
es
dec
and
mov
inc
in
xor
adc
mov
shr
mov
mov
pop
clc
loope
mov
adc
push
daa
or
inc
scas
movsl
sub
or
mov
sub
fucomip
or
mov
sub
push
jge
sub
jle
or
aam
ss
jle
es
cmp
pop
std
mov
xor
xorb
int3
sbb
sub
xor
add
dec
sub
lock
sub
clc
dec
push
pop
mov
cmp
out
shrb
clc
test
ret
pop
lods
mov
push
or
sub
mov
add
hlt
cmc
sbb
repnz
xchg
jp
das
test
js
cwtl
mov
mov
ret
cmpsb
mov
inc
fdivrl
sub
idivl
rorl
xchg
shr
push
push
push
pop
mov
mov
add
mov
das
shrb
dec
test
pop
ss
arpl
sbb
pop
scas
mov
jo
movsl
mov
push
sbb
cmc
add
mov
xchg
sub
jecxz
hlt
xorl
out
lods
and
cmpsl
adc
jb
in
lds
jp
das
scas
push
mov
leave
test
dec
mov
push
mov
push
sbb
lds
or
cwtl
movsl
sub
adc
sbb
mov
fdivrs
fnstenv
imul
and
fmul
adc
xor
pop
imul
fstp
call
das
outsb
call
icebp
add
shrl
sub
inc
and
cmc
or
jl
shl
adc
xor
push
scas
lock
les
push
xchg
stos
jle
mov
arpl
pop
loop
mov
mov
xchg
sarb
loopne
cmp
sbb
lods
inc
and
adc
jp
mov
test
push
stos
out
dec
sub
xchg
mov
imul
jp
pop
push
dec
test
leave
insb
pop
icebp
iret
popf
int3
call
popa
in
stos
push
sbb
in
sub
cmp
es
xor
push
ja
mov
pusha
sub
fsubr
jg
xor
pop
push
add
in
bound
into
xchg
fsub
mov
fwait
mov
mov
xor
sti
mov
push
fnstsw
and
xchg
fdivrp
jp
dec
jg
clc
imul
inc
arpl
and
add
adc
pop
and
mov
imul
nop
adc
or
xchg
call
mov
bound
xor
repnz
sub
xchg
cltd
pop
int3
pop
lret
insl
aad
sahf
int
inc
push
aaa
into
icebp
arpl
mov
mov
mov
fcompl
decl
popf
fldcw
jb
cmp
mov
nop
jo
out
mov
mov
push
decl
into
fwait
sbb
push
lret
pop
xchg
jl
cwtl
mov
test
mov
into
rorl
mov
repnz
mov
cs
cmp
cmpsb
jbe
adc
mov
lret
jle
pop
data16
mov
cwtl
push
scas
lea
jnp
dec
pop
lret
daa
push
sbb
xchg
fcmovbe
cmp
add
pop
adc
mov
push
lcall
pop
loop
nop
mov
mov
arpl
cmp
xchg
xchg
mov
lods
dec
dec
imul
fs
insl
xchg
mov
out
jge
mov
dec
repz
mov
cmp
push
xchg
dec
cmp
int
lods
mov
out
lods
and
fistps
mov
rcrl
and
shrl
subl
mov
sbb
sub
push
lods
pusha
outsl
enter
mov
xor
into
pop
mov
xor
clc
or
lahf
nop
lods
outsb
pop
mov
xor
add
or
cmp
mov
mov
cmpsl
jle
mov
mov
pop
inc
pop
push
adc
push
mov
das
add
mov
cmp
enter
inc
push
or
push
fs
outsb
cmp
rcrb
mov
cli
rolb
int3
aaa
xlat
dec
lret
fimull
flds
fcom
or
inc
adc
adc
lret
andl
xchg
xor
sub
test
repnz
mov
sub
mov
cli
js
data16
pusha
fcmovbe
mulb
mov
mov
dec
rcll
dec
mov
divl
call
mov
fimuls
jle
mov
jg
in
sub
inc
movsl
cmpsl
dec
xorl
outsl
in
shrl
mov
adc
in
xor
xchg
xchg
jmp
sub
sub
sbb
ljmp
xchg
in
cmc
rorl
test
addr16
push
inc
jns
ret
and
xchg
pop
and
mov
js
adcb
sahf
add
or
fisubs
sub
inc
hlt
add
jne
sbb
addl
sub
and
out
jne
mov
jns
shrl
ret
das
pop
out
xorl
push
ret
pop
add
je
cltd
fdiv
dec
out
push
jp
cltd
icebp
pop
mov
dec
addr16
and
daa
jecxz
test
test
jmp
stc
inc
fistpl
xchg
xchg
testl
lahf
pusha
inc
loope
call
arpl
loop
sub
dec
inc
popa
cmp
xor
scas
lret
jg
mov
aaa
push
xchg
es
xchg
out
ficompl
or
inc
out
xchg
add
sbb
xchg
stos
xor
les
enter
sbb
jp
xchg
lods
std
push
mov
gs
sub
add
faddp
pushl
pop
mov
xchg
and
pop
pop
adc
pop
arpl
sbb
fdivrs
pop
loopne
andl
cld
cmp
pop
xchg
aaa
nop
imul
mov
sub
or
add
mov
pop
in
repnz
outsb
or
xchg
enter
fiaddl
adc
ret
jg
jge
mov
into
mov
adc
add
jg
orb
repnz
jnp,pt
mov
mov
cmp
push
inc
out
jge
imul
das
popf
dec
inc
fisubl
xchg
and
mov
loopne
inc
dec
test
inc
jbe
sub
bound
pushf
lahf
mov
push
pop
stos
sbb
stos
sarb
jmp
std
ret
scas
imul
repnz
mov
inc
xor
lret
push
jns
inc
mov
cltd
push
cmpsb
movsbl
iret
jg
jp
js
jno
add
psllw
imull
in
jnp
sarb
imul
test
add
rolb
cmp
ds
decl
cmpl
xor
xchg
int
out
xor
sbb
stos
mov
pop
inc
pop
call
loope
jp
mov
pop
mov
hlt
imul
in
pop
movsb
sbb
cld
adc
shll
gs
sbb
lock
repz
cli
push
push
pop
cmpsb
idivb
sarb
xlat
pop
cmp
dec
sbb
xchg
lds
xchg
pop
test
add
shrb
cmp
ds
out
xchg
sub
pushf
test
cltd
and
hlt
sti
jg
sub
mov
dec
ja
sar
leave
xchg
mov
mov
dec
and
dec
pop
fadd
sub
and
into
dec
js
fcmove
push
jmp
aaa
push
adc
int3
repnz
pop
dec
jno
bound
cmpsb
mov
orb
xchg
inc
pop
outsb
cmp
insb
push
les
xchg
jl
mov
mov
pushf
cmpsb
iret
ljmp
pop
mov
mov
cli
fs
mov
lods
int
scas
repnz
xchg
xchg
jp
sbb
add
push
push
dec
loopne
hlt
je
add
and
movsb
cmpsl
ret
cmpsl
int
rcr
imul
movsb
xchg
mov
jne
repz
out
movsl
mov
repz
mov
lods
enter
add
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
insb
int3
outsb
jno
push
push
sub
push
push
pop
fcoml
scas
mov
cmp
or
sub
repnz
dec
mov
or
cmp
orl
xlat
icebp
mov
mov
nop
cmp
add
sub
push
inc
sub
out
mov
dec
or
xchg
and
inc
adc
cld
push
xchg
stc
pushf
rcl
xchg
mov
jne
aam
inc
leave
xchg
sbb
js
ja
cmp
adcb
popa
and
or
hlt
sarb
cmpsl
mov
sub
jge
jp
xor
push
push
out
cli
incl
sbb
int
add
mov
push
pop
adc
push
addr16
insb
insl
sbb
mov
xor
or
inc
lcall
xor
adc
cmpsb
jge
shrb
xor
adc
addl
data16
jb
and
dec
stos
cmp
pop
and
adc
mov
jecxz
cmp
mov
or
sbb
cmp
sub
mov
cmc
mov
or
push
ss
push
sbb
cmp
mov
testl
sbbl
aam
jb
sub
xchg
and
movsl
pushf
gs
xchg
aaa
fildl
push
popa
out
out
mov
cs
xchg
gs
lcall
into
stos
loope
or
mov
shll
mov
data16
sarb
sbb
or
mov
xchg
cmovae
sub
data16
rcrl
lods
or
js
pop
outsl
addr16
jbe
div
fiaddl
int3
es
and
loopne
fwait
imul
mov
out
lret
dec
stc
dec
xchg
add
push
and
jae
mov
fiaddl
inc
repnz
jp
mov
pushf
cmp
jecxz
lds
mov
cmp
xchg
push
stc
enter
mov
and
frstor
cmp
sbb
sbb
int
and
add
out
scas
sbb
pop
xchg
xchg
push
adc
mov
inc
shlb
ret
in
sub
xor
in
fimull
and
cmp
push
mov
cmpsl
in
pop
pushl
inc
mov
add
sbb
aad
movsb
adc
int3
iret
mov
test
clc
fnstcw
cmp
mov
cld
inc
jae
int
inc
ficoms
mov
data16
cmp
push
add
push
adc
pushf
lcallw
jo
jl
sub
pop
mov
mov
or
pusha
sarl
xor
pusha
xchg
out
je
sub
mov
and
and
outsl
iret
leave
cmpsb
mov
jne
mov
inc
aas
imul
add
xchg
into
inc
cmc
gs
mov
fbstp
sub
mov
loope
outsb
adc
lcall
xor
mov
add
fsubrs
mov
scas
outsb
mov
push
xor
jae
sbb
mov
and
pop
icebp
mov
movsb
lock
insl
sbb
pop
testl
mov
lds
mov
or
shr
ret
pop
jb
outsb
add
mov
push
aad
nop
into
sub
setge
inc
outsl
lahf
mov
inc
insl
jge
nop
jo
into
imul
cmp
or
cltd
or
cmpsl
jge
les
dec
jb
push
adc
push
shlb
insl
push
inc
push
xor
xchg
insb
dec
in
xchg
push
repnz
inc
sbb
cmp
push
mov
lret
xchg
or
add
cld
daa
jnp
popf
imul
test
cmpsb
cmpsl
pop
mov
pop
jecxz
inc
js
and
rorl
scas
daa
mov
mov
mov
and
jae
into
mov
cli
dec
xor
int
adc
cld
mov
xor
sahf
inc
sahf
mul
js
jne
pusha
xor
das
mov
out
push
shlb
movsl
xchg
lret
inc
adc
sahf
adc
adc
push
fistps
cmp
rolb
icebp
gs
rolb
and
test
jnp
pop
pop
movsl
xchg
dec
jae
and
jbe
pop
sbb
pop
jno
jno
xor
bound
adc
lcall
jmp
out
popf
add
push
push
rorb
xchg
les
ss
popf
lahf
jb
mov
outsb
cmp
pop
test
mov
outsl
push
in
negl
push
mov
lret
loope
popa
adc
jl
push
dec
leave
imul
mov
xchg
imul
inc
cmp
lds
incb
pop
or
movsl
cmpl
sbb
and
xchg
mov
stos
mov
sbb
cmpsb
adc
jbe
lahf
addr16
pop
outsb
pop
push
dec
js
xchg
fwait
jns
and
jae
sahf
pop
ret
jne
gs
jecxz
adc
pop
dec
addr16
push
lea
sti
fstl
out
or
ss
hlt
pop
mov
mov
jae
outsb
pusha
xchg
sbb
sub
fiaddl
clc
push
xor
push
jg
jmp
movsl
pop
fs
pop
sbb
insl
sti
leave
sbb
pushf
xorl
aad
aaa
xchg
addr16
xchg
xchg
mov
mov
ret
in
push
lds
jno
xor
mov
pushf
and
adc
fcom
int3
cli
pop
mov
mov
inc
jl
or
aaa
iret
cmp
lret
jno
mov
repz
fildl
xor
leave
xor
sahf
sarb
imull
fwait
std
out
push
cmp
ret
xchg
push
cmpsl
jae
push
jo
sbb
lods
dec
lock
pop
inc
popf
mov
inc
and
or
jb
aas
mov
pop
mov
lock
xchg
cmpsb
sar
push
out
lds
out
out
hlt
inc
pop
mov
psubb
lea
add
jbe
xchg
or
aad
fildl
sbb
in
scas
in
movlps
daa
jno
int3
push
stos
sub
into
into
fistl
xchg
jb
lea
out
sub
lock
addr16
arpl
ds
in
sbb
mov
cmp
inc
out
lds
ljmp
stos
imul
scas
mov
das
jbe
sarl
mov
sbb
imulb
inc
jne
cmpsl
movsb
adc
outsb
mov
mov
addr16
aam
sub
push
or
adc
out
push
dec
fisubs
jae
lret
imul
jnp
jnp
jmp
pusha
sub
cmp
jne
mov
or
xor
push
rcrb
shlb
jne
ds
stc
ljmp
aad
xchg
push
subl
push
imul
mov
insl
das
sbb
lea
insw
cmp
repz
push
sub
out
or
mov
dec
jmp
xor
dec
inc
outsb
cmpsl
xchg
adc
aaa
dec
jl
scas
adc
xor
pop
cs
insb
push
xchg
mov
cmp
leave
sub
stos
push
and
cmpsb
mov
inc
push
stos
imul
dec
andb
push
lods
lods
test
push
xchg
cmp
imul
fsubl
loopne
movsb
cmpsb
pop
test
repnz
jnp
andb
fsts
add
repnz
pop
rorl
aad
mov
int
aas
je
out
push
dec
sbb
rolb
mov
int3
jecxz
or
jmp
xchg
xor
fisttpll
pop
pop
daa
jae
cmp
rclb
jge
cli
shl
sbb
lods
inc
inc
mov
pop
adc
inc
inc
ljmp
cmp
test
push
in
pop
call
cwtl
mov
xor
push
lods
mov
jle
push
xor
cmp
mov
rcrb
cmp
pop
aam
stos
adc
inc
mov
add
or
cmc
pusha
jbe
lods
enter
sub
mov
sub
in
sbb
adc
pop
push
pushf
fdivp
add
mov
std
std
mov
mov
inc
dec
aam
ss
pop
movb
into
cmp
repnz
xor
in
sub
es
adc
adc
and
and
push
lret
push
jg
test
mov
pop
sar
lods
lds
outsl
add
mov
insl
cmpxchg
out
sub
int
cmp
pushf
mov
cmpl
mov
psubq
rcll
pop
lods
test
mov
js
fwait
test
ret
fcoml
mov
mov
jp
cmp
add
shrb
scas
push
mov
pop
and
dec
xlat
pushf
jnp
push
or
push
aam
jge
xor
idivl
xor
jge
ds
jae
and
lds
push
scas
out
add
rcl
mov
js
ja
xor
sub
mov
jge
sbb
cmp
jl
mov
in
mov
add
orl
xor
test
xchg
testl
and
cmp
push
cmpsb
aad
std
inc
pop
ss
pop
aas
and
xchg
orb
sub
xor
pushf
out
movsl
clc
nop
imul
mov
adc
xchg
mov
daa
cmpsl
and
or
sbb
add
mov
add
lea
push
in
imul
dec
es
sub
lahf
inc
push
xchg
and
int3
int
ss
sub
mov
pushf
jp
mov
cmpsb
hlt
arpl
divb
cli
std
jns
aas
std
dec
sti
or
inc
icebp
mov
mov
mov
sub
aas
outsl
loop
push
repnz
pop
mov
mov
fdivrs
lds
sub
pop
inc
xor
aad
dec
pop
fs
mov
sti
mov
push
jnp
lods
in
loop
push
and
xor
push
dec
imul
pusha
inc
gs
outsb
test
aad
dec
int
mov
push
rorb
gs
js
clc
test
pop
push
xchg
push
mov
push
sub
xor
pop
mov
jae
or
in
xchg
inc
xor
push
jae
loopne
pop
push
test
lcall
pop
or
mov
jbe
call
jae
hlt
stos
mov
rclb
rcrb
xor
test
aaa
or
fisubs
sti
rolb
je
lret
adc
and
sub
hlt
add
aad
adc
and
lret
xchg
outsb
jae
sub
std
roll
push
add
data16
ret
and
scas
mov
jo
out
dec
pop
cmc
andb
push
insb
lods
inc
sbb
and
push
cs
dec
in
dec
lcall
add
mov
pop
mov
fistpll
out
lahf
jb
loope
test
enter
bnd
adc
addr16
push
pop
shl
icebp
loope
aad
popa
jge
push
pop
push
outsl
nop
pop
xchg
sub
inc
mov
test
sub
outsb
sti
sti
cmp
jae
mov
dec
clc
xchg
pushl
push
popa
jl
cwtl
std
lahf
xchg
mov
mov
jp
lock
sbb
jg
mov
jmp
stos
dec
shr
mov
xor
ljmp
sub
stos
push
adc
jle
arpl
jmp
imul
subb
mov
aad
into
into
je
sti
fildll
negb
xor
test
in
push
add
les
data16
sbb
jge
sbb
jae
cmp
cmp
fucomp
add
shrl
test
pushf
sahf
jp
jge
inc
lds
or
mov
sti
dec
xchg
sbb
jne
xlat
cmp
outsb
lds
int3
popa
stos
inc
lahf
inc
shl
fistps
jg
pushf
aam
mov
cmp
adc
xor
push
leave
add
push
and
mov
in
mov
sti
push
jno
in
xor
lods
leave
std
mov
and
test
adc
pop
mov
sti
push
sbb
mov
or
jmp
mov
sub
mov
cmpsl
push
rcrl
push
sbb
sbb
aad
loop
xorl
fcmovnbe
out
mov
mov
jnp
lret
cmp
pop
mov
add
pop
jmp
mov
cmp
les
hlt
pop
loope
pop
fmull
jo
add
stc
imul
cmpsl
outsl
les
mov
add
push
jmp
mov
adc
out
test
push
sub
cs
dec
in
aaa
add
inc
pop
sbb
pop
mov
cmp
gs
pop
dec
and
push
pushf
int3
sti
push
loop
mov
sbb
xchg
test
jp
lahf
jno
gs
mov
pushf
jb
mov
pop
cmp
and
or
push
pop
xchg
xchg
leave
ds
les
mov
sbbb
cwtl
pop
adc
into
out
xchg
or
shrl
cmpsl
push
pop
jp
inc
xchg
mov
out
btr
push
mov
jae
add
mov
push
fdivrs
pop
and
mov
mov
adc
adc
or
bound
adc
je
movsb
stc
and
cmpsl
out
ret
push
jge
dec
in
pop
in
pushf
rorl
xor
mov
pop
jmp
sarb
or
dec
out
ficoms
popa
fs
imulb
jno
mov
in
cmp
xchg
mov
int
mov
inc
push
test
imul
inc
jo
hlt
push
insb
mov
jge
add
jge
roll
sub
sbb
mov
stc
ret
push
pop
movsl
mov
je
push
sbb
dec
insb
ffree
xchg
arpl
movsl
mov
rol
sbb
lock
test
jae
inc
xor
loope
pop
pop
push
gs
or
addr16
xor
push
mov
stc
popa
pop
mov
cld
mov
dec
push
push
xor
leave
mov
mulb
dec
xchg
repz
imul
inc
adc
add
int
inc
pop
outsl
or
xorb
dec
sbb
aas
out
push
xrstors
and
das
lret
fsubr
and
push
dec
sahf
mov
sar
sub
mov
xor
dec
rorb
or
mov
inc
divl
out
and
cwtl
sub
lahf
inc
out
and
or
mov
adc
fisttpll
aad
clc
rcll
push
movsl
mov
jmp
xor
test
xor
test
jne
shrl
cltd
fcoml
xor
test
xchg
daa
daa
out
mov
movsl
push
rcrb
aam
loope
adc
imul
cmp
test
inc
sub
add
clc
data16
ficoml
aaa
xor
add
shrb
xor
lret
push
or
add
pusha
mov
mov
xadd
mulb
jmp
adc
and
push
mov
cmp
mov
and
sarl
push
sub
mov
mov
out
push
outsl
ds
cli
mov
iret
mov
dec
jb
mull
lock
mov
xchg
cmp
insb
cltd
add
aaa
cwtl
push
sub
fst
outsl
and
mov
out
fs
loop
add
jne
call
std
cld
xor
cmp
inc
inc
js
mov
or
fnsave
adc
add
or
cmp
stos
and
int
xor
inc
or
fnstenv
scas
lock
mov
and
add
lea
or
ds
cmp
xchg
xchg
mov
ja
or
jne
insl
clc
cmc
and
inc
lds
pop
orl
and
cmc
fildl
pop
mov
cltd
into
dec
mov
outsb
out
imul
or
cmp
mov
sub
mov
xchg
mov
sbb
movsl
mov
sub
addr16
mov
ljmp
ficoms
fdivrp
cli
insb
xor
fs
jl
mov
and
aad
mov
shrl
dec
movsb
xor
pop
push
cmp
mov
pop
scas
jl
popa
dec
add
cmp
stos
sbb
or
pushf
xchg
add
lahf
pop
into
leave
push
pop
ret
fcomip
pusha
hlt
dec
outsb
fists
fwait
test
lods
mov
xchg
pop
push
mov
mov
adc
stos
sarl
shlb
jle
stos
cmp
out
iret
mov
out
int
sti
adc
outsb
rol
xor
inc
aaa
repnz
lds
push
inc
mov
xor
xchg
aas
out
cmp
or
push
mov
dec
jmp
mov
testl
repnz
xchg
cs
push
stc
lahf
iret
mov
xchg
aas
test
ja
ss
mov
cmp
xchg
lcall
lds
das
das
lcall
loopne
inc
mov
insl
cmc
int3
jp
mov
ret
addr16
jp
xlat
mov
lahf
adc
out
and
jmp
hlt
je
sbb
test
shll
cmp
std
test
sysexit
mov
adc
xchg
fsubrs
ror
test
syscall
mov
xchg
daa
pushf
fwait
inc
adc
mov
xor
fldl
mov
sbb
loope
fwait
das
add
and
dec
mov
xor
inc
inc
pop
repz
xchg
mov
sub
pop
les
sub
cmp
jmp
lds
outsb
cltd
addr16
test
jo
imul
push
adc
push
ret
push
pushl
xor
xlat
imul
scas
cs
dec
test
fdivr
jp
out
dec
mov
fadds
inc
mov
in
sub
ds
add
xchg
sbbb
pop
aas
out
xchg
adc
imul
cmp
cld
dec
sti
mul
push
mov
scas
aam
sti
pop
fstps
xchg
outsl
adc
xor
in
jno
or
jb
mov
mov
aas
filds
xor
sarb
push
dec
test
inc
jns
sub
shll
ud1
push
mov
add
insl
jne
push
int3
mov
dec
xor
and
int3
sub
cmp
jbe
mov
in
cmp
cmp
xlat
mov
movsbl
mov
or
mov
or
mov
sbbl
lcall
scas
outsl
movsl
adc
pop
cmc
pop
ret
lcall
push
sarl
adc
lret
rcr
pop
jnp
jp
aam
movsl
cwtl
mov
andb
lret
fwait
fwait
lods
xor
pop
fidivrl
std
fwait
std
movsb
std
push
daa
nop
mov
icebp
out
or
sbbb
aad
jp
xchg
xchg
cmp
scas
dec
js
pushf
push
xor
mov
add
xchg
pop
aas
xor
adc
sahf
adc
js
out
aaa
mov
jl
pop
out
icebp
es
push
pop
xor
mov
negb
push
mov
dec
pop
shrl
mov
sub
push
pop
xchg
mov
or
jnp
push
jp
mov
lea
aas
stos
cmp
jo
lcall
and
aam
iret
xchg
inc
fsts
enter
sarl
dec
shlb
into
daa
lahf
and
adc
add
test
lret
mov
jl
pop
mov
push
xchg
push
mul
insb
out
int
iret
inc
test
mov
stos
daa
data16
lods
sub
insl
xor
jo
inc
scas
sub
ror
mov
decl
sbb
add
mov
add
movsb
lods
mov
mov
mov
mov
imul
cmc
lahf
fs
mov
sbb
xor
push
mov
or
mov
sbb
sub
movsb
cs
ret
in
scas
mov
mov
cmpb
mov
add
outsl
ret
lret
xor
rcrl
sbb
int
inc
imul
aam
push
arpl
clc
fs
lret
sbb
daa
jl
push
mov
lcall
test
push
mov
dec
dec
es
mov
xchg
cmpsb
jo
xchg
js
inc
sarl
jae
xchg
ds
add
dec
pop
mov
push
sbb
and
sub
xor
xor
mov
iret
lds
mov
inc
flds
js
iret
fnstsw
ljmp
adc
incl
xchg
jbe
iret
call
xchg
movsb
ret
in
mov
add
push
sahf
xchg
or
cmp
pop
or
pop
pop
dec
loopne
cmpsb
and
pop
aad
mov
pushf
std
and
ss
stc
mov
cltd
sub
add
cmpb
icebp
jecxz
aam
repz
loop
jle
mov
pusha
pop
test
mov
push
pop
imulb
pop
in
test
lods
movsl
adc
jecxz
enter
mov
inc
mov
sub
in
jl
outsl
repnz
jl
es
and
js
lds
cmc
sub
jge
pop
jno
shr
mov
jmp
imul
loope
outsl
push
dec
mov
push
push
inc
mov
xor
cmpsb
outsl
fstps
or
inc
ja,pt
xor
dec
dec
push
fcomip
icebp
pop
pop
ds
sarb
es
stc
clc
test
or
je
push
arpl
lahf
mulb
mov
xor
fldt
mov
sbb
ret
dec
imul
add
dec
pusha
fisubrl
gs
ja
push
fs
rorb
out
mov
std
mov
sbb
push
or
or
fs
sub
aad
mov
dec
xchg
sub
fstp
rcll
inc
sub
jo
jb
call
sub
mov
dec
dec
jnp
loopne
pusha
add
push
lods
popa
xor
sar
mov
cmc
lahf
inc
sbb
cmpl
mov
add
outsl
sbb
inc
scas
aad
aaa
or
int
aas
orl
xlat
mov
loop
addl
sub
movsb
or
mov
jo
and
sbb
cltd
arpl
mov
aad
scas
mov
cmpsl
je
jmp
mov
add
fcompl
addr16
push
sbb
pop
fnstsw
out
mov
sub
dec
fcoml
jge
cmp
xor
push
mov
xchg
sub
popf
hlt
mov
xchg
shll
sbb
add
inc
and
out
mov
orl
push
test
dec
mov
ficomps
dec
pop
stos
mov
inc
lods
shll
xor
stos
dec
jo
mov
add
out
push
arpl
adc
sbb
jbe
xlat
xchg
inc
inc
cmp
sub
add
lea
stos
loope
imul
aaa
movsl
idiv
ret
addr16
pop
cmp
or
jns
loopne
enter
negl
cmp
cld
mov
xchg
sub
push
std
add
dec
and
cmp
out
adc
push
pusha
sub
mov
xchg
jmp
inc
sub
mov
lods
inc
sbb
mov
loop
roll
mov
hlt
cmp
outsl
bound
loop
mov
add
lods
hlt
sbb
cmpsb
sub
xlat
dec
or
in
cltd
and
push
movsb
in
in
mov
je
pop
jge
dec
and
add
cmp
or
cwtl
imul
cmpsl
jae
test
or
scas
sub
data16
push
adc
imul
mov
mov
icebp
xor
mov
pop
mov
jmp
ficoml
push
cmp
lock
ljmp
xchg
dec
movsl
add
aas
lds
cltd
daa
cmp
fisttps
les
imul
sub
enter
mov
adc
ljmp
fstpl
enter
jno
sbb
int3
jle
xchg
push
cmp
pop
jge
pop
push
inc
pop
mov
jno
roll
inc
aaa
rcll
mov
add
pop
out
outsb
ds
pop
push
cs
dec
xchg
movsb
clc
inc
or
ja
ret
outsl
xchg
aad
icebp
pop
aaa
roll
and
xchg
jb
movsb
pop
or
or
cmc
stc
outsb
fistl
icebp
aaa
out
fmull
cli
imul
clc
and
mov
xchg
or
cmp
ss
mov
imul
pusha
int3
loope
cmp
and
inc
sbb
std
xor
and
loope
xchg
pop
or
adc
mov
pop
push
sub
sahf
test
dec
sti
xlat
pop
addr16
lods
jp
in
xchg
push
jo
inc
push
pop
mov
lock
and
sbb
push
mov
cli
mov
mov
sbb
pop
sub
mov
xchg
jb
adc
push
xchg
imul
mov
xchg
ret
aas
filds
imul
jae
sub
jecxz
loope
enter
jp
or
mov
stos
hlt
popf
xor
and
js
or
pop
cltd
mov
push
cli
loop
sub
pop
rcr
lcall
inc
add
arpl
mov
xchg
arpl
adc
lock
nop
loope
sbb
push
scas
iret
xor
leave
add
jae
mov
test
leave
movsl
push
push
xor
movsb
aad
dec
xchg
mov
or
popf
out
adc
adc
shrb
add
outsb
jnp
mov
cmp
movsb
aam
cwtl
loope
loope
rcll
or
xchg
mov
xchg
mov
push
xor
sub
add
std
adc
mov
popf
inc
xchg
cmpsb
pop
add
xchg
insl
xor
repnz
add
stos
aam
inc
int3
movsl
or
cmp
mov
jns
loope
inc
cmp
testl
mov
pop
xchg
push
push
mov
or
add
xchg
jne
div
rcl
adc
mov
daa
cli
push
sub
sub
cltd
int
cli
add
pop
sbb
push
js
mov
jne
sub
add
push
into
js
push
call
mov
data16
scas
js
gs
inc
ljmp
scas
pop
cmp
sub
divb
add
sbb
mov
adc
sbb
mov
insl
loope
sbb
push
mov
lcall
ret
test
pop
inc
sti
stc
sub
xor
stos
arpl
push
fimull
mov
sub
call
inc
xchg
dec
mov
sahf
cs
or
sbb
mov
inc
call
sar
add
mov
leave
pop
out
sbb
out
inc
mov
jno
pop
xor
and
jle
das
inc
out
jae
mov
outsl
mov
inc
add
push
hlt
fs
movsl
mov
mov
xchg
addl
xchg
fdivr
add
out
fldenv
xor
subb
imul
sahf
dec
push
in
fadd
in
movsl
cmp
arpl
jle
mov
loop
or
push
cmp
mov
insl
xchg
in
loope
or
popf
iret
mov
jno
mov
mov
jmp
in
mov
dec
mov
mov
imul
stos
xchg
sub
cmp
lahf
jle
inc
pop
fwait
int
lcall
xlat
fsubrs
cli
ss
adc
js
ds
int3
inc
ret
loopne,pn
pop
adc
sbb
add
sahf
jle
xchg
inc
shrl
fcmove
push
pop
push
cli
sbb
out
rorb
ljmp
lds
mov
les
sub
cli
inc
aas
and
test
cmp
lret
adc
test
stc
sbb
cmp
rcrb
xchg
xor
into
incb
mov
xor
insb
movsb
lock
jb
pop
mov
nop
lret
mov
sub
gs
ja
push
daa
cmp
mov
inc
cmp
dec
loopne
test
leave
or
jge
in
ret
dec
dec
cmpb
add
adc
scas
int3
adc
inc
iret
and
push
jb
rorb
imul
mov
jne
inc
adc
mov
sub
je
xor
cmp
fst
xor
mov
sub
fstpl
test
fidivrs
xchg
jo
jo
xchg
cmp
cmp
adc
data16
sub
mov
out
test
pop
add
and
call
jecxz
and
daa
arpl
sub
xor
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
sbb
xchg
sub
push
push
sub
xorb
repz
push
cmp
test
sub
cmp
mov
inc
and
aas
adc
cld
and
js
or
and
push
push
shrl
jnp
fdivp
lret
movsl
xchg
leave
mov
dec
je
sbb
daa
push
jge
outsl
add
sbb
adc
or
in
mov
and
jae
jl,pn
popf
xor
jae
loope
push
loope
jns
or
aas
in
jbe
xchg
dec
adc
mov
jecxz
xchg
ret
and
int3
mov
aas
stos
lds
xchg
adc
outsb
add
imul
cltd
ljmp
arpl
sub
inc
inc
bound
loop
cmp
dec
ret
push
jb
adc
movsl
imul
sub
ljmp
inc
cmpsb
adc
mov
pop
or
aas
sbb
scas
push
fs
pop
adc
ja
rolb
xchg
mov
dec
pop
push
pop
adc
add
dec
mov
fisttps
jns
xor
lea
and
je
aad
mov
or
add
jge
popf
cli
stc
and
push
test
lcall
jp
fwait
shll
sbb
outsl
push
clc
mov
cli
pusha
rcll
stos
and
sbb
dec
rcrl
dec
or
cltd
mov
or
jmp
inc
ljmp
inc
movb
xchg
sbb
daa
imul
jae
push
mov
push
jbe
sub
sahf
jge
jg
icebp
loope
fists
and
iret
adc
in
dec
mov
pop
scas
insl
xchg
popf
loopne
xchg
inc
call
ja
mov
or
in
into
outsl
dec
data16
sbb
sahf
cld
jle
mov
pushf
jbe
sub
xorl
inc
inc
stos
mov
mov
pop
ret
sub
in
or
popa
jo
outsb
pop
cmc
inc
mov
femms
shrl
and
and
push
les
pop
inc
add
xlat
or
and
inc
test
add
fstps
sbb
mov
insl
rcrl
mov
addr16
mov
insb
insb
jns
insb
dec
sbb
addb
in
das
aaa
clc
sub
mov
sbb
add
or
adc
lret
pop
enter
imul
xchg
jbe
ja
pop
in
int
inc
cmp
movsl
fcom
test
int3
add
inc
jne
push
ja
cmpsb
cmp
fcomi
mov
pop
decl
push
dec
sub
xor
push
ljmp
pop
xlat
adc
lahf
cmp
lods
dec
outsb
clc
inc
xchg
shlb
or
mov
sahf
lahf
mov
hlt
in
mov
mov
pop
lcall
or
lds
mov
push
and
jo
jns
xchg
mov
cwtl
xchg
sbb
hlt
movsb
xchg
in
jo
dec
mov
add
popf
and
je
mov
inc
push
stos
dec
std
xchg
out
dec
add
rol
std
xlat
fimuls
fdivl
xor
aaa
sbb
inc
dec
jg
clc
sarl
in
repz
imul
mov
push
mov
adc
dec
cwtl
xchg
stos
fsub
lret
jp
dec
cltd
syscall
gs
enter
sub
pop
or
and
lods
add
sti
xor
xor
adc
and
mov
fisttpl
add
inc
cld
jl
pop
push
mov
dec
leave
mov
or
sub
stos
ljmp
pop
mov
pop
pushf
sbb
xor
lret
adc
jb
xor
popa
test
pop
cs
daa
pop
sarl
jns
dec
sbb
dec
xor
mov
stos
sub
cmc
leave
push
or
movb
xchg
ljmp
push
rclb
cmp
cmp
int
cmp
pop
pop
iret
xchg
pop
ss
rcrb
fld
fisubrs
hlt
test
inc
pop
pop
or
sahf
lods
add
inc
push
xchg
adc
jl
pop
jne
cmp
test
xor
push
es
mov
mov
pop
arpl
in
lret
and
and
inc
cwtl
call
movsl
lods
xchg
xchg
out
push
int
jl
sub
xor
xor
jne
jg
sarl
xchg
xchg
sahf
and
dec
imul
dec
fiaddl
stos
loop
fdivl
xchg
ja
ret
mov
inc
shrl
stc
lods
inc
pusha
loopne
push
sbb
sti
or
iret
pop
fistl
adc
push
or
lahf
push
fistpll
movsl
pop
aam
int3
aad
iret
ret
mov
cs
insb
pop
adc
into
aad
xchg
dec
lahf
fldt
out
pusha
ret
mov
sbb
call
mov
mov
sbb
xchg
fisubrl
push
inc
push
ljmp
add
xor
cmp
or
icebp
rorl
sbb
mov
or
pop
cvtpi2ps
xor
stc
popa
les
call
mov
xbegin
stos
test
mov
jge
lea
xchg
and
or
lret
sbbl
and
fnstsw
out
data16
cmc
mov
arpl
adc
and
js
mov
push
adc
notl
mov
cmc
mov
sub
insb
xchg
out
loope
rcrl
testb
pusha
xlat
mov
dec
mov
bound
ss
imull
mov
jbe
je
rclb
mov
sarb
rcll
hlt
aaa
xor
popa
dec
jmp
or
fstl
xlat
push
lods
lods
jb
push
jge
push
jmp
and
cmp
sbb
std
push
aam
xor
push
jg
call
push
orb
mov
stc
pop
test
mov
and
sbb
or
lock
mov
cwtl
push
xchg
mov
icebp
stos
add
xacquire
xchg
fcoms
xor
sti
cmp
xor
outsl
addb
dec
mov
rcl
mov
int3
ret
lcall
ret
stc
fmuls
inc
mov
ret
fmul
push
adc
pop
lea
sub
inc
inc
fistpl
jae
mov
xlat
sub
lock
divl
pop
pushf
in
or
jg
add
or
xchg
sbb
ljmp
mov
daa
icebp
sti
adc
add
sbb
or
dec
xchg
ret
push
into
or
xchg
mov
or
push
push
enter
addr16
clc
inc
sub
cs
inc
lods
arpl
jge
add
adc
lock
aam
mov
sarb
stos
mov
ret
fmull
mov
sbb
test
aas
nop
lcall
enter
inc
pop
out
leave
dec
jle
ret
xchg
mov
or
test
mov
jl
push
xchg
mov
and
jmp
xor
mov
sbb
mov
cmpsl
add
sarl
jns
je
sbb
jecxz
test
mov
sub
add
xor
push
dec
nop
add
sbbl
loope
add
sub
lock
or
xchg
ja
and
mov
test
cmp
add
mov
loop
jg
mov
stos
adc
bound
hlt
or
mov
dec
cwtl
xorb
mov
lods
sub
loop
scas
fstl
mov
gs
push
pop
enter
les
fs
scas
cmpxchg
sbb
gs
pop
cmpl
push
into
jg
pop
cmpsb
mov
movsb
xchg
push
jecxz
cmp
stc
lret
test
inc
and
mov
insl
les
xor
imul
pop
cmp
dec
jmp
jp
arpl
mov
repnz
push
push
mov
hlt
jp
jg
sub
and
inc
mov
sbb
and
push
and
xchg
lretw
notb
in
and
mov
adc
mov
mov
lcall
stc
mov
nop
adc
add
dec
into
inc
inc
push
aaa
sub
pop
test
cmpsb
dec
jg
leave
decb
cmp
sub
std
jne
dec
or
daa
and
xlat
stos
cmp
jmp
movsl
xchg
pop
mov
adc
adc
scas
dec
ret
rcr
xor
adc
pushf
push
mov
fcmovnb
nop
test
and
jns
mov
outsb
aaa
add
or
mov
aas
ret
pop
inc
xchg
or
in
iret
repz
in
xor
pop
fadds
das
adc
push
xchg
sbb
fldl
sbb
pusha
gs
fnstenv
xor
call
fcompl
and
push
push
in
pusha
stos
and
push
and
pop
dec
stc
push
adc
sbbl
stos
mov
jb
scas
push
aas
rclb
ffree
jnp
das
pop
sbb
outsl
mov
xchg
insb
daa
cli
das
sub
addr16
mov
or
into
lock
jo
inc
dec
lods
pop
fisubrs
call
xchg
xchg
leave
mov
add
jle
xchg
cmp
adc
movsb
cmc
cmc
or
lret
icebp
sti
incl
pop
sub
andl
pop
adc
scas
cmc
mov
cmp
mov
ja
fldt
adc
arpl
fsts
in
mov
stc
or
pop
lcall
adc
je
mov
test
pop
jae
fmull
mov
dec
lret
dec
add
hlt
or
push
or
icebp
inc
shll
dec
hlt
inc
icebp
les
cmc
ss
inc
sahf
and
mov
mov
fisubrl
mov
into
add
daa
dec
sbb
cmpsb
sbb
bound
movsl
mov
push
jnp
das
js
dec
sub
add
test
test
aaa
rolb
xorl
sub
pop
or
xchg
cmp
inc
stc
inc
fildll
mov
cli
mov
xor
insl
sub
daa
jns
xor
pop
adc
xchg
arpl
jae
cmp
adc
pop
xchg
ljmp
lret
jno
ds
fwait
adc
ret
ret
repz
push
lea
mov
xor
les
mov
cmpsb
pop
movsb
std
mov
jge
sbb
dec
roll
imul
push
add
mov
dec
cmp
mov
ds
mov
test
les
or
hlt
cmp
das
pop
lahf
outsl
mov
sti
push
add
pop
insb
or
in
push
push
repz
fadd
gs
fcompl
dec
mov
mov
sub
lods
call
mov
das
inc
pop
fcompl
insb
int3
ret
xchg
ret
rcll
dec
fidivl
add
in
aas
add
je
mov
jg
jne
adc
jge
dec
insb
fwait
repnz
arpl
in
jbe
stos
mov
nop
test
add
or
jne
imul
add
mov
in
sub
mov
jbe
int
lods
jo
inc
fiadds
div
iret
loopne
sbb
sbb
outsb
shll
add
andl
and
xchg
pushf
push
mov
sub
mov
dec
insb
pop
hlt
scas
test
cmc
mov
scas
add
adc
xor
sar
push
sbb
xlat
add
lret
jecxz
inc
mov
sbb
cmp
fildll
movsb
popa
ret
xchg
sub
add
xor
pop
daa
add
push
mov
aaa
inc
push
lods
sbb
dec
out
cmp
mov
cmp
shll
xchg
xor
idiv
jne
das
sbb
faddl
dec
push
sbb
je
rolb
xchg
xor
repnz
in
in
aam
clc
dec
sbb
cmp
test
xchg
pop
insb
movsb
lret
mov
push
mov
mov
and
sub
out
mov
repz
aad
xchg
fsubs
test
xor
out
pusha
and
xchg
maskmovq
testl
or
test
lcall
addr16
or
out
push
mov
mov
cltd
pop
mov
xchg
scas
and
add
pop
and
jp
mov
out
add
sbb
mov
fstpt
fisttps
mov
sub
outsb
inc
icebp
sbb
pop
mov
and
dec
pop
fisubl
in
cmpsl
sub
mov
shrl
andl
lret
gs
push
stc
add
es
icebp
mov
mov
loope
frstor
pusha
pop
jbe
insl
push
pop
clc
lret
movsl
xor
push
insb
dec
adc
in
mov
cwtl
adc
mov
mov
xchg
test
daa
add
pop
xchg
stos
jmp
repnz
cmp
pop
roll
std
push
sbbl
fadds
loop
and
pop
lock
jmp
push
dec
lahf
mov
inc
sub
xchg
mov
cwtl
enter
pop
cli
adcl
test
stos
or
mov
or
nop
xchg
ja
pushf
rcll
sub
xlat
push
mov
fildll
pop
fnstenv
sarl
call
mov
lcall
sti
mov
cmc
xor
push
inc
int3
stos
cmp
ljmp
test
inc
das
iret
mov
sarb
jmp
fs
mov
cmpsl
push
loope
in
xchg
daa
sbb
sbbb
sbb
jmp
inc
outsl
cmp
loopne
pop
pop
dec
cld
insb
and
insl
sub
mov
sub
test
je
mov
dec
cli
loop
sbb
cmpsl
mov
sahf
xchg
push
in
or
sahf
xor
cld
std
pusha
add
mov
adc
test
fs
shlb
pop
aam
and
adc
pop
or
mov
and
in
stos
in
aaa
fildl
into
rclb
into
imul
data16
rclb
nop
movsl
push
ss
cmp
daa
cwtl
mov
daa
lea
incl
push
int
insb
das
popa
add
mov
inc
test
loopne
daa
lods
sub
daa
cwtl
push
sub
and
jno
ficompl
xor
xchg
add
in
enter
int
shrb
mov
jg
jae
xor
aaa
mov
add
sbb
add
push
pop
pop
jmp
lds
and
pushf
mov
gs
fdivrl
sahf
mov
mov
ss
mov
cmc
adcl
dec
outsl
jecxz
jae
mov
out
ds
cld
imul
shrw
mov
mov
jbe
jb
xchg
jl
ret
lret
add
jg
dec
arpl
pop
xor
push
imul
loopne
push
pusha
neg
cwtl
imul
rcrb
adc
and
daa
nop
pop
lock
xchg
test
gs
das
gs
pop
mov
icebp
sbb
and
ljmp
jns
mov
xchg
mov
xchg
pop
imulb
xor
loopne
sub
movsb
cmp
mov
dec
insb
enter
in
loopne
pop
xchg
adc
aas
mov
or
lods
dec
add
ret
and
mov
decb
push
imul
mov
iret
lock
add
jp,pn
jecxz
imul
aas
adc
and
pop
stos
cli
xlat
xorl
cmp
push
das
inc
cltd
push
pushf
pop
xor
testb
pop
out
or
dec
or
out
test
into
mov
or
push
mov
pop
jns
popa
hlt
das
es
outsb
daa
or
fxch
xchg
std
push
mov
xchg
int3
sub
push
out
dec
lds
and
mov
pop
ss
mov
jb
push
cmpsl
xchg
sbb
mov
sbb
ljmp
xor
loop
mov
fwait
xchg
cs
fiaddl
lods
nop
dec
sahf
in
sbb
jmp
mov
mov
lret
push
mov
shll
insl
mov
mov
cltd
insb
sbb
addr16
mov
mov
and
movsl
es
add
fstpl
cs
dec
iret
pop
cwtl
sti
mov
jae
out
outsb
nop
cld
les
and
mov
mov
and
jmp
imul
ficoml
fs
jnp
pop
or
mov
mov
inc
mov
push
lods
mov
incl
adc
cmc
mov
rclb
and
outsb
pop
and
sub
pop
xchg
lcall
cwtl
jnp
sti
mov
mov
test
lock
dec
xorw
aas
adc
imul
jecxz
mov
stc
sbb
or
pop
dec
data16
repz
cmp
lods
ret
cmp
loopne
jbe
scas
and
adc
adc
inc
addb
fwait
rol
and
xorl
add
std
out
xchg
lcall
divb
aad
sbb
mov
cmp
std
stos
fwait
dec
lock
movsb
jg
jg
data16
or
loope
inc
cmp
sub
jle
dec
mov
fimuls
jnp
xchg
sbb
out
add
pop
mov
pop
cmpsl
dec
or
rclb
loope
push
adc
and
fnstcw
xchg
loop
add
int3
loop
xchg
ficompl
jmp
sub
mov
std
xlat
pop
lahf
inc
outsl
lcall
cmp
dec
jne
mov
call
fimuls
movsb
add
psrld
addb
call
xor
cmpb
mov
hlt
mov
ds
int
sti
imul
mov
jne
fcmovne
in
lahf
mov
jmp
in
clc
xor
mov
mov
lds
xchg
ficompl
push
mov
fcompl
sarb
cmp
cmc
scas
ret
addb
and
mov
lahf
call
mov
scas
scas
sub
sbb
jle
jbe
out
shrb
pop
push
inc
jbe
incb
in
and
popf
jle
loope
xchg
in
push
xchg
and
sbb
and
push
pusha
adc
test
les
pushf
or
and
mov
cltd
pop
out
es
adc
lea
jp
sub
add
std
mov
jp
xchg
aam
stc
popa
add
jecxz
mov
jae
cmp
je
mov
mov
dec
or
cwtl
fdivr
dec
sahf
mov
pop
mov
fld
popa
sbb
push
int3
rorb
hlt
adc
xor
scas
pop
popa
ja
mov
sbb
and
shr
jo
rolb
add
scas
or
xchg
fucom
dec
test
sbb
mov
cmp
mov
sbb
imul
enter
int
sub
lds
ljmp
add
add
add
cwtl
xor
cmpb
sbb
cmpsb
fimuls
push
or
sbb
dec
push
nop
pop
xchg
push
pop
xchg
xorb
xchg
scas
stos
push
fistps
push
mov
pop
or
lret
pop
jmp
sbb
rol
test
clc
lods
sub
sbb
out
add
xor
call
jns
je
push
iret
sub
clc
dec
adc
lods
sub
jmp
lret
out
mov
int
leave
pop
mov
outsb
mov
movlps
mov
test
sub
cmp
and
leave
notb
sub
call
dec
adc
xchg
fimull
popa
adc
pop
mov
dec
xor
push
and
push
lds
aas
mov
and
fwait
lahf
sahf
outsl
dec
imul
mov
into
mov
xchg
push
lcall
shll
inc
xchg
outsl
mov
mov
ret
mov
pop
mov
dec
sbb
add
lret
divb
pop
inc
lds
das
fwait
push
ret
ds
cli
sbb
xor
fs
mov
push
ret
sbb
and
enter
lea
repnz
rcrl
dec
aas
ret
cmpsb
jl
cmp
xor
pop
dec
jmp
mov
xchg
rclb
push
jl
xchg
xor
rorb
xor
dec
insb
shll
ret
and
pause
xchg
jns
testl
push
lcall
dec
jp
mov
jo
xor
lret
push
les
pusha
xor
clc
cmp
xor
movl
shl
jg
cmp
lods
sub
cmc
popa
cs
xchg
out
push
test
dec
mov
fs
outsl
lods
fcoms
mov
or
insl
in
test
mov
and
cmpsb
ljmp
and
lcall
xchg
divb
or
fsubl
insl
mov
sub
pop
adcb
shl
sub
add
or
ret
dec
mov
xchg
hlt
call
inc
cmp
test
pop
pop
pop
or
adc
clc
out
pop
clc
jge
mov
imul
cmpsl
insb
or
jmp
mov
out
inc
imull
lret
setae
aam
loope
mov
push
add
popf
shll
ja
add
xor
inc
addb
mov
jns
cmp
stos
sti
or
ret
ficomps
pop
lock
pop
popa
lret
inc
ret
jnp
imul
jp
scas
in
add
mov
fistpll
xchg
shl
mov
jecxz
mov
imul
sub
mov
and
lret
test
lret
mov
sub
xchg
leave
fcmovb
int3
aas
popa
in
loopne
push
xor
lret
xchg
movsb
scas
mov
out
cmp
ds
xchg
jle
pop
xchg
mov
leave
loop
adc
cmpsb
es
or
xchg
and
cmp
mov
and
pop
cmp
cld
cltd
jle
cmp
fadds
pop
call
sbb
mov
push
cmp
inc
and
into
in
mov
icebp
mov
mov
cmp
test
mov
xlat
push
sarb
lcall
sub
popf
pop
ds
repz
push
loope
gs
add
xchg
or
outsl
or
xor
inc
cltd
das
cld
cli
mov
ss
ja
pop
hlt
push
adc
adc
insb
int3
add
mov
clc
notl
xchg
fld
outsl
enter
add
mov
add
sbb
mov
ss
jns
les
mov
and
lahf
jb
or
push
cmpsl
dec
push
popa
mov
sub
sbb
xchg
inc
xchg
ret
filds
and
lds
data16
and
jg
mov
sub
cmpsb
mull
cmpsb
pop
cmp
aam
das
xchg
insb
sahf
popa
add
dec
cltd
push
cmp
aaa
loope
dec
dec
and
ret
es
jne,pn
aam
shrl
jg
dec
les
movsl
xchg
int
cli
bound
arpl
test
or
jo
mov
ret
test
scas
int3
mov
iret
cld
lock
adc
popf
test
js
adc
aas
dec
pop
fstpl
and
sub
sbb
push
fsubl
pop
push
jne
adc
jb
pop
mov
mov
inc
popa
in
repnz
movsb
mov
sbb
aaa
push
js
mov
insb
jae
pop
add
ret
mov
fs
imul
and
xor
cmpsl
aad
int
inc
aad
cltd
mov
enter
and
popf
cmp
pop
sub
das
lret
jno
aad
ror
xor
or
fsub
sub
popa
mov
mov
imul
into
arpl
mov
xchg
pop
or
aas
pop
adc
dec
iret
cmp
inc
shll
pop
sahf
push
loopne
das
mov
pop
das
pusha
pushf
cmp
xchg
fisttps
xchg
roll
movb
xor
test
mov
iret
ret
mov
xchg
jp
cmp
mov
push
xchg
jecxz
mov
mov
stos
mov
int
push
daa
dec
push
cli
mov
in
pop
es
pop
jl
ljmp
in
add
shlb
add
add
inc
push
ljmp
mov
xor
pop
mov
jb
dec
fyl2x
lods
or
push
adc
push
in
pop
roll
sbb
cltd
sub
sarb
adc
dec
jo
inc
jle
jbe
mov
ljmp
mov
inc
fstpl
pop
ds
add
fisubrs
add
mov
and
fists
testl
mov
stos
and
jp
jecxz
test
in
and
fs
and
ficomps
inc
cwtl
pop
jno
cmpl
imul
or
mov
or
stos
mov
fisttpll
or
sub
pop
xchg
xchg
adc
int
push
outsl
jecxz
jmp
adc
push
cmp
jno
push
lods
xchg
mov
andl
lahf
sbb
xor
sbb
lret
inc
push
aad
cld
push
jl
mov
loop
scas
movsl
bound
sti
xchg
insb
mov
push
ret
aad
cltd
fiaddl
mov
xor
test
incl
repz
popf
mov
dec
mov
pop
sahf
cmc
test
jg
dec
cmp
fidivl
or
inc
es
ret
lret
push
cs
xchg
push
jno
and
sub
dec
lods
and
fs
dec
mov
mov
ret
fsubrs
nop
bound
stc
xchg
mov
xor
adc
mov
popl
shl
gs
mov
mov
pushf
addr16
sub
shlb
xchg
and
stos
and
xor
inc
fcoms
and
jne
imul
insl
and
dec
lret
push
lcall
insl
xor
push
or
ss
mov
andb
js
jmp
push
loop
pop
in
bound
xlat
sbb
std
xchg
pop
roll
stc
fidivrs
stc
jno
pop
cwtl
xchg
push
das
scas
fwait
in
push
aaa
dec
dec
sbb
mov
jp
mov
push
outsb
pusha
leave
adc
in
sbb
or
cs
daa
movsl
sub
cmpsb
js
mov
add
lret
mov
push
out
imull
xchg
das
inc
sti
sub
aas
popf
sub
lret
inc
imul
push
je
stc
cmpsb
loop
fwait
inc
pusha
mov
pop
adc
xchg
fidivrl
mov
js
mov
adc
jmp
rcll
pop
mov
fs
iret
ds
or
into
xorb
adc
cmpsb
orb
in
call
or
lods
inc
add
fstpl
mov
fsubl
bound
pop
aam
cmp
xor
adc
sub
test
popa
jbe
shlb
add
cmp
sahf
lret
jl
sub
fisubrs
mov
sbb
push
mov
out
fmuls
rorl
or
mov
pop
insb
stos
xlat
leave
jae
xor
mov
lcall
ljmp
sub
fs
mov
lock
push
adc
adc
or
rcrb
cltd
xor
bound
sbb
mov
clc
clc
dec
mov
adc
xorb
bound
xlat
icebp
sbb
adc
loop
adc
pushf
shlb
lods
rcrl
mov
fsts
xor
add
lea
adc
lahf
push
cwtl
rcrb
xchg
mov
fisubl
clc
outsb
fisubrs
pop
push
mov
in
cmp
inc
out
adc
dec
fstps
dec
fs
and
pop
jg
and
mov
mov
pop
loop
loop
dec
mov
push
subb
dec
mov
sub
mov
and
pop
subb
push
cmpsb
jg
sub
aas
rcr
cwtl
push
push
or
int3
jl
pop
scas
add
push
xchg
mov
popa
lret
ror
xchg
mov
xchg
sahf
sbb
clc
cs
sahf
xchg
test
lcall
sub
sbb
lock
fbstp
jl
push
inc
push
xchg
in
jmp
adc
mov
pop
pusha
in
add
repnz
cmp
mov
mov
xor
push
sbb
adc
stc
iret
test
ret
lods
cmp
daa
mov
mov
xor
mov
push
and
inc
fstps
dec
mov
aaa
inc
mov
jae
and
sti
add
inc
aas
inc
xchg
mov
xchg
movsb
mov
das
jle
mov
xchg
lock
or
push
ss
enter
test
aad
rcl
cmp
outsl
inc
rol
inc
aad
int3
and
pop
es
push
loop
test
cmp
fiadds
push
xchg
dec
push
jb
xor
sbb
cmp
and
mov
mov
push
adc
sti
scas
mov
dec
mov
out
enter
shr
mov
mov
or
jmp
pop
insl
sub
cmp
icebp
or
jb
push
push
push
sub
push
push
mov
mov
and
inc
lds
push
retw
mov
pop
mov
daa
mov
push
adc
outsb
adc
pop
fisubl
sub
call
mov
inc
ja
movsl
adc
out
sbb
xchg
xor
sbb
xchg
cld
rol
mov
insb
push
in
xor
out
sub
jo
cld
mov
mov
or
add
add
cmp
cli
dec
mov
pop
add
mov
repz
in
syscall
js
notb
out
stos
je
aam
ljmp
ljmp
fdivrl
mov
orl
sub
mov
rorb
daa
dec
movsl
int3
aaa
lahf
inc
in
mov
mov
sub
imul
xlat
icebp
mov
dec
lret
inc
mov
sub
sti
mov
adc
mov
ja
inc
outsb
cmp
fsts
adc
jno
cld
jle
aad
jg
mov
lret
add
lea
cmp
dec
subb
add
loope
fdivs
jle
lret
out
lock
jg
push
ficompl
mov
mov
mov
lcall
or
fsubs
xor
jae
mov
push
lret
fadds
nop
stc
fimuls
adc
adc
test
iret
cs
mov
cmp
xlat
jne
sub
mov
pop
mov
les
les
sbb
test
pop
add
add
xor
mov
shrb
fmuls
sahf
mov
cmc
push
aaa
ja
mov
pop
dec
jne
xchg
rcr
pop
popf
idiv
lret
push
ss
lods
hlt
mull
ss
and
hlt
in
call
fnstsw
cwtl
mov
push
out
fcoml
sub
mov
fstps
jle
jp
mov
cmpsl
lahf
pop
sub
aaa
arpl
scas
mov
sub
aam
hlt
pusha
popf
cmc
mov
or
xor
lret
xor
icebp
push
pop
push
aas
daa
repnz
mov
dec
repz
nop
fstl
aad
adc
popa
int3
pop
ds
xor
xor
icebp
dec
xchg
daa
scas
mov
or
pushf
pushf
xchg
jbe
hlt
cltd
sbb
sbb
arpl
xchg
arpl
sahf
xchg
pop
and
lods
xchg
bound
xchg
outsb
leave
insl
xchg
dec
cmp
fwait
sti
popa
sarl
adc
sbb
fwait
pop
lret
jo
dec
pushf
push
mov
and
inc
jb
push
push
aaa
add
inc
xor
sbb
mov
es
cs
jp
ss
mov
imul
shl
jg
cmp
leave
lret
xchg
notb
pop
jns
push
xrelease
adc
movsl
xor
add
jae
test
xor
inc
fildl
fcoml
dec
mov
ljmp
into
jne
fsts
scas
jns
push
pop
std
lods
aas
insl
sub
xchg
rol
ljmp
aam
jl
and
cmpsb
stos
stos
mov
loopne
dec
pop
ret
test
in
inc
add
dec
mov
mov
repnz
inc
and
mov
push
shlb
cmpb
pop
sti
jle
mov
adc
call
push
out
fisubs
sub
jecxz
mov
xor
jmp
mov
in
test
incl
aad
std
cwtl
mov
lret
loopne
and
ds
outsl
mov
push
stos
jmp
cmp
data16
sub
or
push
jb
mov
mov
mov
add
cmpsl
into
lds
push
and
xor
cld
adc
push
std
scas
popa
lock
inc
sub
sbb
xchg
mov
cwtl
or
xor
and
leave
pop
es
imul
fs
sbb
cmp
jnp
jne
leave
push
pop
lahf
fldl
sub
jecxz
add
bound
jbe
mov
int3
daa
add
and
lock
sti
cmc
popa
xchg
sbb
adc
inc
ss
and
enter
andb
in
dec
gs
pop
adc
dec
lea
jg
movsb
loopne
pop
dec
imul
xchg
adc
hlt
rorb
aas
ljmp
dec
sub
insb
add
add
push
jecxz
ret
mov
dec
xchg
or
fxtract
xor
xor
and
addb
lea
cmp
add
leave
outsb
jl
add
hlt
mov
movsl
push
cmp
gs
insl
aad
adc
dec
xor
and
bound
mov
fs
jmp
in
adc
movsl
jl
scas
call
lret
hlt
ja
sbb
sub
insl
sbb
inc
sub
cld
andb
lods
lret
or
ja
pushf
mov
lods
movl
mov
mov
jmp
cltd
inc
hlt
push
mov
shl
inc
or
loopne
push
sub
or
mov
lret
or
sbb
mov
mov
fisttps
push
imul
sbb
mov
and
out
sub
cs
rolb
es
iret
leave
xchg
and
repz
pop
jle
gs
test
rorb
fucom
push
out
popa
sbb
push
sbb
clc
lahf
xchg
ja
jb
pop
adc
xchg
movl
mov
outsl
out
push
loope
xor
jnp
and
pop
xchg
out
mov
jge
das
imul
mov
or
inc
adc
xor
dec
and
push
test
iret
pop
inc
aas
daa
in
lcall
leave
mov
xor
in
add
lods
pop
or
mov
cmp
cmc
xchg
xor
lods
mov
cmpsb
or
mov
mov
cmp
dec
and
fldl
in
imul
nop
fs
xchg
dec
add
incb
adcb
rolb
insl
cmp
add
ret
xlat
jns
iret
enter
lds
jnp
sti
xor
push
pusha
lret
mov
xchg
lea
es
inc
addr16
insl
inc
cwtl
jns
sbbl
push
pop
cld
push
scas
rcrl
in
xchg
adc
outsl
add
ds
fs
push
mov
cmp
repz
sub
push
jecxz
cmp
cli
pop
ret
jae
sahf
ret
adc
xorb
xchg
jno
or
pop
mov
sub
sub
xor
jmp
fldt
and
jmp
dec
xchg
or
out
or
mov
shll
sahf
das
or
les
mov
repnz
push
ljmp
mov
inc
fsubr
push
mov
mov
aaa
mov
jb
add
sbb
mov
mulb
jno
or
in
mov
test
addr16
fsts
ljmp
pop
jb
jge
sub
mov
subps
dec
mov
scas
call
xor
cmp
mov
fs
sub
in
ljmp
fiaddl
jns
and
fidivs
icebp
push
mov
mov
add
rclb
sahf
cmc
jmp
mov
insb
mov
pop
mov
dec
and
mov
push
movsl
add
or
ja
clc
lret
arpl
out
ror
or
iret
and
std
imul
pop
lock
stc
pop
nop
xor
jb
sti
hlt
sbb
jp
aas
xor
mov
outsb
add
dec
jnp
out
xchg
mov
std
push
popa
in
push
ss
push
jge
in
adc
mov
or
pop
insl
mov
pop
shrb
mov
popf
pop
fnstcw
in
cld
push
or
mov
sub
adc
movsb
and
andb
lock
push
out
in
inc
xchg
push
add
dec
bound
mov
push
lahf
or
xor
jmp
xchg
popa
jb
jg
xchg
popf
sub
pop
jp
push
enter
dec
cmp
add
jle
sbb
les
je
fwait
add
sbb
adc
jp
call
sbb
cmc
jbe
or
ret
lea
cwtl
cmpsl
out
pop
add
lods
call
aas
stos
cmp
mov
sbb
xchg
and
test
cmp
adc
pusha
cmp
cltd
push
hlt
sbb
xor
cwtl
mov
stos
js,pt
lock
or
bswap
jbe
dec
insb
aas
std
pop
insl
loopne
mov
stos
xchg
mov
mov
xchg
lock
push
pop
int
orb
cmpb
imul
dec
lock
sbb
add
aam
dec
shll
icebp
inc
lock
mov
cmp
stc
mov
jae
arpl
or
jae
repnz
loope
dec
pop
loopne
lret
mov
shlb
push
inc
sub
pusha
cwtl
pop
cmp
sub
ss
popf
mov
jecxz
cmpsl
and
push
inc
and
mov
in
fidivs
fwait
jecxz
cmp
dec
loope
fiaddl
sub
js
orb
int
leave
xchg
dec
scas
fisubrs
out
ds
sub
jo
ret
inc
adc
pop
test
std
inc
imul
ss
iret
jae
btc
xor
data16
pop
jp
push
jno
into
lcall
cmc
dec
incb
sbb
sar
or
stos
insb
xchg
fdivrl
jo
cmc
push
add
sub
sbb
cmp
std
dec
push
mov
mov
adc
scas
pop
cmp
mov
mov
insl
mov
adc
jmp
add
arpl
cmp
imul
sub
insl
js
xchg
int3
cltd
ljmp
push
imulb
lock
inc
jb
mov
jns
add
or
aaa
scas
loope
mov
inc
dec
jno
fmulp
sarb
jbe
mov
add
mov
jnp
mov
test
stos
or
clc
dec
mov
ds
sbb
dec
fs
xor
dec
sbb
cmpsb
lcall
cmpsl
mov
aam
cmp
add
ljmp
bound
and
add
scas
dec
imul
cmpsl
dec
fisubs
and
mov
push
lock
mov
and
ds
sbb
pop
dec
mov
or
inc
loope
jb
sbb
adc
fsubrl
mov
xor
call
inc
mov
and
inc
and
push
pop
lock
dec
pop
jp
xor
repz
js
add
push
xchg
roll
push
push
stos
jno
pop
sub
hlt
daa
jle
pop
xchg
cltd
and
js
lods
and
adc
nop
fidivl
mov
and
rcrb
xchg
sti
leave
pop
nop
lret
or
xor
shrb
push
leave
and
mov
sub
imul
enter
inc
xchg
sub
pop
imul
xor
enter
aas
sub
ss
fwait
out
addr16
cmc
in
cld
movsl
xor
cmpl
mov
in
inc
or
clc
mov
jl
fcompl
mov
icebp
sbb
fisubl
cmp
dec
adcb
mov
dec
and
mov
int
xchg
cmc
pop
pop
std
sub
add
mov
cmc
add
data16
push
pop
xchg
mov
xchg
add
test
inc
sub
sbb
xor
mov
mov
pop
sahf
inc
jbe
add
frstor
je
xor
or
mov
sarb
and
pop
out
lret
je
jg
loop
paddsw
cld
test
jp
daa
lret
jae
stos
popa
push
hlt
push
iret
ss
aad
rolb
imul
fnsave
je
xchg
pop
popf
into
xor
icebp
dec
mov
or
mov
cld
test
in
add
cmp
pop
mov
sub
push
jl
mov
or
lea
and
xchg
xorl
add
pop
aad
add
ja
sub
test
xchg
and
in
add
adc
das
popa
jmp
jg
in
push
ljmp
in
cmpsl
lahf
push
insl
or
pop
jg
mov
inc
bound
mov
inc
fsubr
fwait
aaa
cmp
stos
mov
mov
into
in
inc
out
xor
mov
push
testb
push
jne
pop
push
mov
push
push
sbb
pop
fildl
and
imul
fs
aaa
or
movl
jne
jb
mov
sub
mov
sbb
lret
scas
gs
mov
dec
mov
add
cmp
movsl
pushf
lcall
mov
jecxz
mov
cmc
in
insl
test
or
shrb
dec
xor
vpaddusb
jecxz
cmp
nop
mov
cmp
jl
xchg
inc
pushf
lahf
and
imul
scas
add
out
int
inc
orb
push
leave
push
mov
mov
xchg
ret
test
sub
iret
imul
jg
js
mov
and
das
cmp
xchg
cltd
fistps
push
ljmp
rorl
pop
sbb
in
cmp
and
aam
jnp
dec
mov
xchg
lcall
inc
leave
mov
je
imul
sar
xchg
mov
fildl
addl
and
jnp
xchg
aaa
ljmp
lods
cwtl
push
inc
lret
pop
jbe
sbb
notb
in
lret
stos
iret
aas
addr16
shl
shll
les
xchg
imul
jnp
cmpl
nop
mov
fwait
and
arpl
xor
fs
addl
mov
or
das
mov
movb
cli
lock
sub
adc
int
insb
arpl
mov
enter
mov
mov
jecxz
movsl
mov
or
mov
sbb
orl
sbb
dec
and
shrb
xchg
ljmp
ficompl
pop
pop
out
fstpl
dec
hlt
addr16
lds
push
aaa
lods
nop
aad
xor
jnp
adc
adc
mov
sbb
loopne
cld
xor
jmp
mov
scas
jl
push
push
mov
push
mov
dec
xor
add
mov
add
lds
jno
mov
stc
inc
sub
add
mov
pop
push
push
shl
lock
gs
jnp
push
lods
cld
mov
jo
xchg
xchg
mov
xor
call
sbb
mov
sbb
aad
shlb
js
adc
push
cwtl
dec
pop
fcmovnb
ret
mov
pop
andb
inc
sbb
insl
sbb
mov
test
xchg
iret
add
adc
dec
pop
jmp
xchg
xchg
sub
cmp
push
jne
inc
inc
fmul
inc
mov
xchg
adc
xor
loopne
mov
lcall
stos
shl
das
ds
mov
adc
xchg
push
add
jno
popa
out
pop
xchg
add
cmp
dec
insb
aam
inc
xlat
jae
or
lcall
cmp
xchg
ja
fs
or
iret
out
xor
cltd
int
in
inc
std
scas
lock
cmp
adc
or
dec
cmp
inc
shrl
decl
and
dec
in
fidivrl
cmp
fmul
and
ret
in
stos
rol
das
and
cli
inc
xchg
xlat
call
mov
push
pop
xor
idivl
andb
and
dec
in
adc
cltd
call
xchg
xlat
ds
cli
pushf
cmp
mov
push
loop
outsb
movsl
inc
scas
aam
pop
ljmp
pushf
cs
xchg
ljmp
popf
mov
ret
xchg
adc
xchg
or
mov
sbb
loope
mov
inc
aas
loop,pt
hlt
add
mov
mov
mov
imul
lahf
inc
insl
inc
or
leave
pop
shll
and
jp
push
push
in
sub
ss
neg
and
xchg
mov
sti
pop
andl
jbe
jl
sbb
stos
adc
test
xorb
xor
cmp
sahf
jb
fdivrl
jns
xchg
loope
lds
out
pop
into
cmp
inc
aas
repnz
jae
shl
jge
pop
push
gs
pop
pop
js
fcmovb
xlat
call
dec
test
pop
out
xor
adc
pop
mov
lock
cmp
stos
dec
dec
hlt
or
pusha
clc
jg
pushf
mov
dec
das
mov
jg
xchg
xchg
movsl
mov
aas
mov
xor
inc
add
xchg
sahf
mov
movl
push
fcmovnb
dec
icebp
cmp
xchg
dec
call
sbb
xchg
outsl
cmp
cltd
inc
cli
loopne
jecxz
int3
dec
mov
test
in
push
sahf
sbb
jnp
daa
push
repz
jecxz
fcom
add
sbb
jne
call
dec
pop
mov
adc
mov
das
in
push
pop
push
das
xor
js
inc
jne
loop
add
add
sahf
push
fidivs
xor
cld
sub
inc
mov
loop
cmpsb
cmp
stos
pop
das
push
inc
clc
xchg
das
xchg
inc
inc
cld
aad
or
mov
clc
push
lcall
js
jp
pushl
cld
lret
das
imul
xorb
xor
xchg
mov
stc
xor
sub
pop
fscale
xor
ret
movsl
cmpsl
xchg
dec
mov
jnp
hlt
dec
and
aas
push
aad
outsl
xchg
push
repz
inc
flds
xchg
daa
add
lret
cmpsb
outsb
test
push
icebp
and
push
aam
jae
mov
xchg
adc
shl
jae
mov
push
cli
mov
popf
loope
sbb
or
lea
popf
int
add
push
mov
xlat
xlat
shrb
add
jne
jp
sbb
mov
fbld
mov
and
rolb
cmpsl
punpcklwd
lock
mov
dec
jle
scas
jb
cwtl
xchg
not
das
scas
mov
lods
mov
sub
and
push
movsl
dec
in
aam
jns
mov
stos
mov
addb
or
cmpsl
fdivrl
xor
mov
pop
into
jle
mov
adc
sbb
ss
std
cmp
fcompl
xor
sbb
mov
mov
aas
mov
jae
xor
movsb
inc
jns
push
cmp
xchg
ret
inc
in
mov
fldenv
dec
add
xlat
jle
inc
or
pusha
fbstp
cmp
cmp
xchg
les
rorl
xchg
cmp
je
mov
inc
dec
sbb
add
adc
jg
sbb
outsl
shrb
pop
inc
xor
adc
dec
and
push
bound
mov
divps
lret
aaa
add
push
sub
test
push
cmpsl
mov
jno
mov
jne
fnsave
mov
add
push
and
add
aad
pop
pusha
and
movsl
jge
fcmovb
add
in
mov
ret
lahf
or
clc
xchg
hlt
mov
adc
push
cmpsb
flds
in
or
pop
jle
sbb
xchg
mov
dec
frstor
xchg
inc
xorl
dec
mov
imul
push
mov
ljmp
xor
add
mov
adc
iret
push
fstpt
call
push
push
sub
fcoms
outsb
aam
rcl
or
outsl
xchg
popf
incb
arpl
and
ret
or
rolb
mov
out
or
sbb
jg
fisubrs
cmp
mov
xchg
call
mov
dec
ljmpw
mov
xor
ret
mov
call
jae
cmc
push
pop
add
aas
fstpl
jo
xor
sbb
sub
and
lret
data16
scas
add
add
cmc
fisubs
test
xchg
stos
mov
lcall
sub
aaa
pop
stos
inc
sub
popa
cmp
fldl
imul
nop
sbb
lods
dec
addb
aam
xchg
cmp
pop
in
cmp
fs
or
or
inc
popf
popf
inc
popf
ljmp
xor
push
cmp
out
xor
lods
or
cmpsb
push
test
cmp
cli
mov
js
mov
scas
add
jnp
sub
out
push
xor
lock
notl
pusha
xor
out
push
in
mov
sbb
sbb
mov
out
add
add
xchg
ljmp
mov
push
adc
pusha
lea
add
testl
mov
dec
cmpsl
jnp
jle
dec
test
outsb
push
out
mov
push
aam
in
ss
lods
dec
movsl
mov
xchg
mov
or
sbb
mov
aam
repnz
aam
rol
inc
and
loopne
or
cmp
jp
cmp
push
into
in
fcomip
outsb
fwait
mov
and
in
jecxz
lcall
lods
or
add
xor
sbb
jae
adc
and
sub
dec
mov
push
pop
sti
and
sbb
jnp
enter
test
cmp
sarb
je,pn
movsl
adc
and
daa
mov
rcrb
lcall
push
addr16
in
pusha
jnp
dec
es
fistl
mov
aas
ror
mov
shll
daa
cwtl
push
lea
in
cwtl
out
movsl
iret
mov
sub
pop
cmp
add
les
cmpl
mov
add
out
imul
movsl
dec
lea
insb
subl
xor
or
dec
adc
or
sbb
sub
xchg
xchg
jp
movsb
sbb
aaa
xor
shrl
cwtl
add
pop
jge
and
rclb
push
xlat
pop
pop
jno
fisttpll
testb
call
int3
xor
xchg
mov
mov
add
dec
std
cmp
add
xor
inc
into
jbe
add
mov
cs
push
add
add
or
dec
add
jb
ror
xor
mov
adc
hlt
push
sub
das
sub
or
or
lods
dec
xchg
mov
sbb
fwait
test
loop
pop
cltd
scas
adc
adc
push
sbb
mov
jae
xchg
cmp
mov
pop
orb
jmp
cmp
repz
repnz
outsl
nop
mov
stos
inc
cmp
xchg
dec
test
cmp
and
cmc
dec
int3
imul
sti
enter
stc
sub
fcoms
cli
push
fcompl
mov
jb
lea
jae
je
xor
jb
push
popa
movsb
mov
cltd
xchg
outsl
mov
and
push
addr16
out
cmp
lahf
jae
mov
enter
mov
stos
loopne
push
add
sub
aaa
mov
sub
mov
ds
ds
jmp
cs
dec
aas
rcr
sub
dec
cs
xor
je
and
pop
mov
inc
sub
xchg
mov
mov
sub
adc
jle
in
aas
cmpsl
test
and
popf
mov
and
call
jae
add
ja
test
mov
pop
ret
cli
pop
fisubrl
mov
pop
xor
sub
add
push
fimuls
rclb
pop
aaa
and
pop
insl
aam
xor
std
decb
mov
xchg
inc
int3
dec
mov
xor
popf
es
aaa
repz
inc
ret
lea
adc
jo
mov
out
push
mov
mov
cmp
jno
sub
add
pop
lcall
data16
lods
movsb
ljmp
add
popf
dec
out
hlt
jge
jno
and
std
test
mov
test
or
sub
mov
mov
xor
sub
inc
xchg
mov
or
adc
lock
test
sub
mov
cld
stc
enter
inc
adc
cmc
push
test
mov
scas
das
stc
lea
daa
jle
stos
std
addr16
fs
daa
imull
pusha
xor
sbbl
fs
imull
test
jno
mov
cmp
lret
fs
js
pop
pop
ficoms
stos
roll
idivb
mov
pop
sarl
sub
popa
adc
loope
in
xor
cld
enter
mov
xchg
imul
lea
outsb
test
imul
adc
mov
scas
enter
sub
mov
inc
sbb
mov
pop
movl
xchg
xchg
push
mov
sbb
lret
or
les
mov
clc
inc
out
popf
fcoml
dec
stos
es
lcall
movsb
rcl
mov
pop
and
adc
mov
lods
insb
mov
fidivrl
ss
inc
daa
xchg
sbb
mov
lcall
in
add
push
test
jge
dec
xor
adc
fwait
pop
popf
into
inc
adc
jecxz
es
or
adc
xchg
mov
dec
pop
addr16
cmpsb
cli
mov
outsb
xorb
insl
lods
scas
mov
pop
ret
out
pop
dec
or
add
stos
jbe
and
movntps
or
lods
or
fwait
mov
stos
inc
add
mov
jmp
in
jmp
popl
outsl
cmpsl
adc
jg
pusha
lods
lret
xor
das
sbb
gs
inc
bound
add
xchg
mov
jnp
les
or
add
mov
js
push
movsl
pop
push
add
mov
mov
nop
lock
cmpl
sti
add
sbb
cwtl
push
pusha
std
sti
xchg
dec
inc
cli
jb
pop
scas
lock
mov
push
jno
add
scas
pop
ds
sbb
aas
icebp
mov
dec
leave
adc
rolb
andl
sub
or
in
mov
test
push
mov
leave
roll
fmul
pusha
clc
sbb
mov
lcall
xlat
das
mov
sbb
mov
pusha
pavgw
xchg
pop
push
cmp
out
add
roll
stos
xor
xchg
js
leave
lret
mov
jp
inc
leave
lods
rcrb
outsl
cmpsb
aaa
mov
sbb
daa
sbb
jl
ss
fnstcw
in
les
dec
mov
mov
dec
mov
inc
sub
aas
jno
mov
loope
pop
pop
push
int
sbb
ss
xchg
nop
cmp
repz
mov
int
lret
xchg
jmp
xchg
inc
pop
or
mov
pusha
jg
jbe
out
std
xchg
scas
test
fwait
inc
test
xor
adc
mov
push
dec
in
in
dec
cmc
mov
cld
adc
cwtl
cmp
or
mov
imul
sbb
add
jmp
hlt
pop
push
inc
sbb
lret
mov
or
imul
loope
mov
mov
push
sar
inc
adcl
mov
bound
pop
cmpsb
movsb
clc
xchg
mov
loopne
es
in
jno
jne
repnz
jecxz
scas
sbb
outsb
sub
das
push
int3
mov
mov
mov
mov
shlb
inc
mov
roll
sahf
lahf
out
xor
mov
fsubl
push
je
call
dec
dec
or
dec
test
pop
jne
push
call
inc
pushf
das
arpl
scas
aad
subb
push
mov
cli
adc
cmp
lods
popa
inc
pop
pop
andb
in
out
jle
lock
mov
mov
repz
out
jp
gs
scas
aam
push
inc
inc
scas
fbld
test
or
push
insl
push
out
sti
mov
adc
push
sub
fs
lahf
fists
movsl
pop
sbb
addl
ret
hlt
xchg
jge
or
test
and
dec
add
jbe
jl
stc
iret
nop
jg
sti
push
bnd
pop
jg
sub
mov
push
cld
mov
xchg
jnp
cmp
mov
mov
lret
ja
adc
out
test
in
cld
leave
rolb
xchg
sbb
pop
sub
jg
sub
scas
mov
clc
out
adc
lret
xchg
cwtl
decl
or
xorb
js
test
lret
cld
subl
push
and
repnz
orb
jecxz
push
rcl
mov
cli
stc
xchg
mov
or
jne
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
lea
push
sub
push
push
sub
pop
push
xchg
mov
pop
ss
pop
loopne
adc
jg
sbb
jne
inc
iret
loopne
aam
mov
cwtl
push
and
and
clc
fucomi
cmp
jb
pushf
xor
sub
jmp
ja
xchg
add
adc
and
rolb
jno
imul
adc
loop
and
bound
pop
rcrb
ret
loope
mov
cmp
jae
fbld
ljmp
pop
shrb
mov
mov
test
enter
fstpt
sbb
dec
mov
lcall
mov
jo
stos
movsl
loopne
xchg
sbb
push
aam
js
test
fildll
mov
inc
pusha
xor
push
lods
xchg
fnstcw
daa
shll
mov
testb
out
cmp
xchg
push
push
testb
push
add
negl
rorl
aam
iret
xchg
add
fisttpl
adc
sub
pop
or
je
icebp
mov
sbb
push
pop
and
cld
mov
xchg
mov
mov
fdivrl
popa
dec
pop
mov
mov
mov
push
jmp
sub
xchg
inc
pushf
rorl
cmp
jb
pop
xchg
scas
fnstcw
mov
xor
xor
arpl
mov
push
cmp
mov
xor
push
mov
lock
popf
jge
xor
mov
test
or
dec
movsb
je
mov
movsl
push
lcall
mov
pusha
mov
into
xchg
mov
gs
push
cmp
icebp
jne
xchg
in
mov
in
lea
nop
push
mov
movb
and
nop
and
jnp
call
fldl
add
pop
inc
adc
ja
pop
push
fiaddl
imul
cmp
repnz
insb
invd
pop
mov
add
mov
add
xchg
push
pop
mov
or
and
sbb
sti
fcmovnbe
and
xchg
mov
and
pushf
fdivrs
add
push
mov
fisubrl
iret
movsb
cs
sbb
or
add
or
loopne
cmp
daa
dec
sbb
mov
push
inc
xlat
push
lcall
in
or
cmp
aad
out
cmp
pop
imul
loop
xor
cwtl
pop
cmp
xor
fbld
rcr
data16
cs
adc
stos
xor
std
sbb
aaa
cs
gs
jo
push
out
add
test
mov
mov
jle
test
mov
xchg
out
push
add
lret
mov
mov
sahf
outsl
xor
hlt
add
inc
pushf
loop
push
rcll
fldenv
cmp
icebp
push
jo
cmp
jns
sub
or
mov
pop
mov
out
out
subb
lahf
mov
mov
stc
push
andb
mov
jno
imul
mov
fists
mov
inc
xchg
jl
jae
xor
mov
dec
in
jle
jnp
push
mov
icebp
inc
ss
push
leave
mov
pusha
aad
inc
or
shlb
pop
imul
arpl
push
mov
or
ljmp
test
ss
leave
push
push
cmpsl
jl
mov
cltd
fimull
sarl
sub
stos
popf
inc
insl
cmp
testb
in
inc
or
pop
or
and
out
repz
and
xchg
scas
cmp
ret
add
mov
icebp
jnp
and
imul
jns
ss
filds
add
cmp
enter
inc
icebp
mov
or
bound
rolb
cmc
xchg
cli
lret
insl
out
bound
ss
gs
test
mov
inc
mov
movsb
xor
sbb
outsl
repz
bswap
repnz
push
cmp
insl
movsb
adc
adc
shlb
in
sahf
repz
out
inc
add
mov
push
aad
mov
mov
aas
pop
mov
mov
jbe
dec
or
inc
pop
inc
sub
fcoml
sub
mov
ljmp
dec
inc
fucomp
dec
les
sub
nop
jns
sub
inc
inc
sub
bound
aad
repnz
adc
mov
push
movsb
jmp
cld
push
pop
sbb
xchg
add
pop
mov
dec
jne
and
push
pop
loopne
or
jns
std
xchg
ret
mov
rolb
dec
push
insb
and
fstpt
mov
inc
hlt
cmc
out
or
jae
shll
test
xlat
sbb
jo
sub
into
pop
add
inc
sbb
cwtl
push
shlb
inc
inc
test
fneni(8087
lcall
test
xchg
mov
enter
mulb
push
movsl
mov
je
adc
jmp
sbb
jns
push
add
mov
or
icebp
cmc
stc
fadds
loop
xor
in
inc
and
mov
adc
xor
mov
aam
addr16
psubd
xchg
lcall
and
icebp
or
out
cmp
xchg
clc
mov
mov
sti
pop
or
sbb
mov
stos
fsubrl
out
mov
aaa
pop
mov
pop
adc
or
jg
jp
inc
cmp
mov
dec
fcoml
imull
fmuls
pop
pop
cmpsb
sub
lret
sbb
cmp
pop
sub
adc
movzbl
stos
mov
inc
test
repnz
jo
pop
adc
sti
xchg
sbb
lods
inc
pop
adc
dec
popa
out
sub
mov
pop
mov
dec
push
or
or
scas
cmp
sahf
cltd
cwtl
insl
fs
jg
fisubl
popf
std
mov
pop
ja
loop
cmp
or
xchg
js
xchg
in
mov
dec
add
cwtl
or
loop
mov
and
jp
ljmp
loop
jae
xor
cmp
or
lret
clc
scas
mov
sub
fwait
dec
test
mov
xchg
xor
imul
mov
leave
add
push
and
stos
sbb
popf
fisubrs
jb
repnz
xchg
add
mov
push
xchg
enter
cmp
xlat
pop
sahf
fcmovnbe
mov
fcompl
xchg
faddl
dec
fdivl
sbb
lds
add
sbb
xor
shll
jmp
mov
pop
mov
ret
jecxz
dec
fldenv
into
sub
mov
mov
xchg
arpl
cmp
cld
dec
ss
je
inc
xor
cmpsl
ja
ljmp
or
ret
data16
pop
add
jae
lahf
sar
push
push
xor
in
xor
aad
outsb
push
cwtl
add
ds
add
sarb
lods
push
jb
xor
pop
mov
out
aam
test
adc
popa
shlb
jne
push
aam
mov
sub
add
pop
cmp
leave
ja
pop
fwait
jb
adc
es
and
test
pop
mov
mov
jno
out
jmp
or
xchg
scas
ss
aas
dec
jns
and
pop
cltd
and
les
aad
jb
dec
fucomp
movsl
cmpsb
push
inc
ljmp
pop
jge
icebp
roll
sti
enter
push
insl
ja
sti
mov
loopne
imul
mov
sti
push
and
imul
in
adc
sbb
mov
subl
or
mov
push
sub
adc
imul
sub
pop
ror
nop
fidivrl
in
test
andb
aam
and
jmp
shl
or
lods
mov
lret
xchg
mov
mov
cmp
stos
enter
dec
sub
ret
dec
std
loope
fisttps
cmpsb
aas
cld
movsb
push
cmpsb
out
and
jp
mov
pop
pop
leave
sub
push
dec
int
daa
out
mov
inc
push
jl
scas
cltd
cltd
or
aad
scas
xor
fildll
lods
inc
inc
xchg
push
enter
sub
mov
add
cmpb
xchg
out
cmpl
andb
xchg
iret
outsb
mov
hlt
xlat
push
jns
add
fisubs
stos
pop
mov
icebp
pusha
sbbl
and
xor
mov
ds
push
pop
or
sbb
stc
xor
add
addr16
or
loopne
lret
xor
cli
arpl
pushf
push
and
fadds
mov
mov
jle
adc
mov
loopne
call
data16
out
jg
cli
and
insb
mov
jbe
mov
flds
ja
mov
sarl
addr16
sbb
ret
inc
mov
jns
mov
add
enter
sti
mov
insb
loopne
clc
push
aam
cld
js
push
and
add
add
mov
fcompl
push
stc
mov
aas
test
sub
js
ret
xlat
pop
jmp
movsb
pusha
cmp
sbb
mov
pop
outsl
xchg
int3
gs
movsl
cmpsb
add
or
sbb
lods
test
mov
push
push
mov
or
aas
or
inc
ret
inc
movsl
pop
sti
push
pop
push
add
orb
mov
int
or
ss
mov
xchg
xor
mov
lret
jns
fildll
repz
lods
pop
mov
lods
fldenv
aaa
lcall
cwtl
popf
cmp
scas
outsl
and
xor
hlt
cmp
imul
cmp
dec
or
mov
pop
aaa
daa
daa
sbb
ljmp
pop
ja
xchg
insb
inc
or
movsl
cmp
push
push
aas
mov
and
and
mov
repz
cld
adc
jbe
xor
push
cltd
mov
sbb
dec
xchg
pop
in
sub
loope
scas
std
ds
xor
loopne
test
sti
pop
xchg
xor
mov
sub
lret
lods
shlb
pop
xchg
out
adc
sti
xchg
pop
sbb
cmp
aam
xor
sarb
mov
repnz
xchg
loopne
adc
test
gs
and
jl
bound
xchg
jmp
xchg
bound
cld
mov
mov
sub
rclb
mov
stos
test
sti
nop
scas
cmpsl
sbb
and
out
stc
lret
xchg
imul
jns
gs
in
or
ja
or
daa
jno
lds
popf
call
sub
adc
adc
pop
rcrb
xor
xor
ret
je
xor
lahf
clc
inc
xor
fs
subl
aaa
ja
mov
sub
xchg
aaa
fcompl
xchg
add
mov
sbb
sbb
inc
fldenv
loopne
jle
jb
lock
mov
inc
mov
daa
xchg
das
dec
in
lcall
xchg
add
das
aam
dec
fnstenv
test
lret
or
nop
aaa
les
mov
jecxz
loopne
or
mov
sbb
mov
nop
pop
mov
insb
or
fs
push
pop
mov
and
mov
pusha
adc
mov
ja
repnz
lcall
xchg
outsl
loopne
fsubl
xchg
pop
xchg
out
pop
mov
add
loop
roll
pusha
pop
mov
xchg
or
xchg
repnz
addr16
mov
push
pop
fwait
lcall
imul
loopne
popf
dec
js
jns
cltd
ja
cmp
xor
sub
inc
adc
inc
adc
mov
push
xor
push
imul
in
cli
add
lret
cmp
push
call
rorl
mov
std
sub
push
sbb
xchg
cmp
xchg
data16
inc
push
jle
cltd
into
pop
inc
or
dec
push
adc
xchg
inc
cmpsl
or
in
xor
inc
pushf
in
sarl
and
mov
enter
aad
mov
bound
push
icebp
inc
fists
inc
out
popa
loopne
or
push
dec
into
ret
xchg
pop
hlt
shrb
jns
and
mov
jle
or
loopne
adc
add
out
icebp
push
sbb
xchg
adc
xorb
out
add
push
dec
xor
push
addb
movsb
push
cli
js
insl
inc
mov
es
pop
and
ret
dec
mov
outsl
push
xor
mov
lahf
add
adc
hlt
leave
icebp
imul
pushl
mov
int3
fnstenv
outsb
or
pop
adc
jo
cs
jb
movsl
jmp
mov
rolb
scas
jle
mov
push
rcrb
jae,pt
sbb
aam
mov
cmp
add
jno
dec
xor
push
ret
mov
int3
mov
das
leave
dec
pop
fucomip
outsl
in
ss
mov
out
mov
cmp
cmpsl
sub
inc
mov
jbe
imul
jl
inc
push
int3
lcall
mov
or
in
and
jno
scas
cmp
lds
scas
daa
rorb
or
stc
repz
adc
mov
inc
imul
roll
inc
sub
popf
outsb
pop
loopne
in
and
scas
ja
in
or
push
xchg
repnz
clc
mov
xor
cwtl
jo
mov
sbb
push
cmpsl
lods
in
inc
dec
and
adc
mov
int3
into
rolb
aaa
mov
mov
and
or
divb
jb
loope
fs
inc
and
popw
sbb
jle
lods
std
addb
pop
mov
mul
dec
mov
and
inc
shll
repnz
lret
mov
mov
push
inc
scas
mov
pushf
test
mov
lods
rcll
sbb
test
ss
mov
minps
mov
fisttps
push
pop
sbb
push
arpl
or
fmul
fstpl
pop
mov
fiadds
lock
mov
adc
shll
pop
out
int3
insl
mov
mov
add
adc
outsl
sub
scas
mov
shll
jo
sbb
mov
jae
inc
mov
or
dec
hlt
cmp
sub
mov
sub
jmp
sahf
popf
mov
mov
sbb
or
stc
mov
xor
mov
lds
jge
pop
fmull
jbe
sbb
and
xchg
jo
leavew
imul
jecxz
rcrb
inc
mov
popa
rorb
mov
out
jp
xor
test
or
dec
mov
mov
and
enter
repnz
sar
inc
in
jp
repnz
cmpb
out
push
fiaddl
adc
mov
jp
push
adc
popa
jmp
push
inc
xchg
fstps
dec
loop
push
adc
scas
dec
cltd
mov
lret
movsb
dec
shl
out
js
pop
xchg
scas
mov
jb
test
mov
fwait
or
push
mov
push
leave
sbb
js
xor
inc
xchg
cmpsl
dec
or
int3
xor
adc
push
gs
std
jg
push
fiaddl
hlt
jp
pop
sbb
dec
mov
mov
test
jnp
mov
idivl
xor
inc
sub
dec
push
insl
push
ret
addr16
push
adc
repz
mov
repz
ss
out
and
cs
mov
mov
dec
arpl
addr16
add
cli
lds
jns
inc
addr16
sbb
pop
and
cmpsb
lock
adc
insb
bound
movsb
sub
pop
cmc
mov
push
test
pop
push
int
enter
fisubrs
dec
subb
mov
mov
popa
nop
mov
sbb
or
sub
pop
add
cmpb
and
mov
jnp
xchg
xor
jo
imul
inc
push
sub
add
xor
mov
add
inc
cmc
flds
fildll
out
cmp
adc
mov
stos
adc
test
or
and
ficompl
dec
jp
jnp
sub
mov
rorl
push
dec
iret
das
xor
pop
fnstcw
sahf
xchg
mov
adc
sti
int3
adc
outsl
sbb
push
loope
sub
xchg
cmp
jg
aas
in
test
jg
ret
ficoms
sub
test
dec
jb
icebp
jb
push
jns
aas
dec
add
aas
adc
roll
mov
inc
aam
rolb
mov
sbb
and
push
mov
daa
xchg
mov
cld
adcb
add
lahf
shll
jno
xchg
jne
leave
push
jno
insb
out
sbb
ja
pop
sti
add
mov
cmp
out
int
fldl
in
fscale
adc
repnz
aam
test
ss
out
das
lret
out
adc
int3
enter
pop
mov
clc
mov
cli
sub
fistps
mov
and
mov
jnp
cld
dec
xchg
popa
movsb
in
mov
or
cltd
data16
xchg
lret
and
jp
divl
lahf
push
movsl
cmpsb
or
push
mov
push
add
scas
push
mov
sbb
xor
inc
add
pop
adc
and
push
lcall
dec
and
scas
push
sbb
pusha
sub
lods
insl
in
xor
mov
mov
sbb
arpl
ss
push
and
mov
xor
jp
cmp
or
sub
aaa
mov
out
jae
cmp
dec
sub
popf
cwtl
lds
cmp
cmp
out
adc
pop
cmp
mov
or
xchg
jmp
dec
mov
ss
sbb
lds
out
push
push
jecxz
sbb
and
sbb
sub
test
pop
mov
add
pop
pop
dec
jb
dec
mov
or
mov
sub
lock
dec
adc
jne
dec
loopne
loopne
or
sahf
adc
or
popa
rol
das
int3
ja
loop
popf
lret
aaa
xchg
pop
lds
mov
adc
out
sub
addl
bound
lods
cmpb
pop
rcll
jecxz
inc
test
mov
call
gs
pop
push
jg
mov
adc
loop
sub
pop
and
and
jge
sub
add
xchg
pop
mov
aaa
adc
call
push
rclb
inc
cmp
movsb
sarl
lods
int3
popa
shl
mov
push
aam
push
adc
nop
xchg
jl
or
insb
sahf
out
mov
stos
lcall
lahf
push
call
lret
jns
pop
leave
and
push
fisubrs
push
lock
pop
test
or
and
adc
xor
push
daa
pop
add
xorl
mov
dec
sti
mov
mull
mov
jp
fsubrs
aaa
nop
daa
mov
push
mov
addr16
ljmp
loope,pt
sbb
mov
push
in
mov
xor
pop
cmp
lret
les
inc
cmc
gs
loop
mov
test
fs
out
leave
sub
mov
or
idivl
or
test
sbb
mov
mov
and
iret
bound
xlat
xorb
add
fsub
lds
daa
addw
inc
ficompl
adc
mov
sub
or
cltd
out
leave
xor
mov
xor
insl
hlt
sarl
outsl
test
fiadds
mov
mov
xchg
cltd
int3
loope
ficoms
adc
arpl
mov
push
scas
mov
xor
or
push
rclb
jo
cmp
or
xchg
mov
leave
jmp
pop
sbb
jg
stc
pop
pop
jg
popa
shl
add
test
mov
xchg
scas
cld
cmpsl
dec
inc
out
nop
loope
jae
test
rclb
ret
scas
ja
inc
insl
push
popa
sub
andb
adc
mov
pop
or
in
adc
push
jns
dec
xor
push
fsubrl
in
hlt
jmp
ljmp
mov
fildl
and
or
push
mov
imul
sarb
mov
push
popa
std
jae
lods
jle
dec
jge
cmpsb
or
xchg
lock
add
aas
push
adc
push
mov
aam
roll
sahf
idivl
divb
mov
movb
jbe
in
imul
cmc
pop
arpl
test
pop
lret
xlat
sti
or
dec
xchg
jbe
xor
dec
mov
test
dec
pop
movsl
xor
lret
add
sub
shrl
cmp
jge
xchg
jnp
add
cld
test
mov
into
lods
jecxz,pt
pop
stos
jo
push
repz
cmp
cmp
inc
lods
dec
mov
adc
sub
es
xlat
cwtl
popf
sbb
fcmovnb
pop
fadd
add
clc
bound
adc
lods
dec
add
inc
xchg
jle
mov
cmp
dec
stc
sub
scas
sbb
dec
cmp
jbe
or
or
jl
aaa
xor
shl
fwait
sti
divl
pop
push
and
xor
adc
cmp
mov
roll
sbb
xchg
ja
push
push
cmpsb
mov
mov
jae
rolb
stos
adc
and
enter
cmp
xchg
out
cwtl
jmp
pop
mov
rcll
movsb
pop
pop
arpl
mov
jno
bound
insl
int3
jae
rcll
sub
and
and
stos
cmp
jecxz
xor
cli
gs
sbb
ds
enter
push
aad
push
ljmp
mov
repz
sub
lods
icebp
aam
or
mov
aad
jp
sub
js
jno
call
in
xchg
push
inc
pop
mov
pusha
adc
rcll
imul
adc
jb
ljmp
shr
lret
cs
jne
andb
push
mov
lds
in
xchg
mov
push
or
fs
lods
leave
jp
add
xchg
mov
mov
xchg
daa
pop
test
inc
fisubs
nop
pop
lds
in
sub
xlat
es
dec
jl
sub
cmpsl
out
das
arpl
adc
push
push
push
pusha
mov
gs
aaa
loopne
cld
lds
sub
sub
out
adc
mov
stos
test
subl
divl
inc
repz
int
lcall
and
or
hlt
fcmovb
lret
in
and
adc
sarl
test
pop
inc
inc
inc
adc
push
fmull
mov
lock
dec
push
xchg
gs
pop
in
xor
xchg
lea
or
jns
outsl
mov
and
sub
insb
sbb
jge
ja
jo
out
mov
push
fstl
push
inc
pop
pop
jge
and
cmp
or
mov
loopne
sbb
lods
sub
es
les
loop
pop
shll
dec
decb
pop
out
mov
inc
jne
sub
fldcw
add
lahf
cvtps2pi
rcrl
jecxz
dec
add
imul
fisubs
les
jge
push
sbbl
sahf
xchg
xchg
xchg
mov
inc
fidivrl
fstpt
xchg
ja
push
aad
movsb
adc
sbb
mov
les
aam
roll
aad
div
xor
scas
lret
cs
jp
outsb
cmp
mov
das
and
shrl
mov
shl
pop
push
jbe
push
pop
mov
lock
sbb
js
push
mov
in
jle
out
outsb
push
jno
mov
and
mov
shll
into
pop
lret
pop
stos
push
lds
dec
jle
test
mov
cli
fidivrs
jb
lret
es
mov
or
lcall
cmp
xor
jne
ret
outsb
dec
xchg
sub
fistl
sti
movhps
mov
inc
outsb
decl
loop
mov
inc
lods
cwtl
repnz
in
pop
xor
sub
adc
push
imul
dec
fnstsw
mov
dec
cmpsb
cld
mov
outsb
mov
mov
mov
xor
pop
push
lcall
adc
pusha
aam
or
xchg
cmp
jae
daa
sbb
test
sahf
insl
ljmp
sub
mul
sahf
jo
push
lock
cmp
mov
testl
inc
xchg
adc
mov
stos
xor
push
sti
mov
dec
pop
mov
ffree
xchg
xchg
sub
mov
call
adc
pop
push
mov
fcmove
lret
or
jge
add
pop
hlt
pop
imul
dec
jecxz
imul
pop
inc
cwtl
xlat
or
stos
inc
xlat
inc
pop
or
inc
in
je
faddl
leave
fcmovb
ja
std
xor
jne
and
inc
sbb
xchg
dec
sbb
sub
test
cmpsl
fadds
push
or
sbbb
dec
mov
mov
push
leave
push
in
sar
loopne
xchg
cmp
jle
jb
rclb
push
mov
mov
jge
addr16
inc
stos
into
mov
add
test
cmc
aas
mov
scas
stos
shlb
fs
scas
lret
xchg
mov
movsb
mov
mov
xor
fstpt
sysret
and
sti
scas
mov
aad
call
inc
jnp
jae
adc
fisttpll
pop
or
jne
outsb
nop
and
sti
aad
sbb
sarl
dec
jbe
push
cld
add
std
sbb
xor
xor
mov
cmp
pop
fidivs
fldcw
xor
xlat
pop
push
inc
sub
pop
inc
mov
inc
mov
shlb
cld
mov
push
shrl
fdivrp
pop
jmp
xlat
xor
xor
addr16
cmp
adc
or
cs
pop
fwait
les
dec
pushf
mov
and
jb
popa
pop
or
push
movsl
icebp
adc
or
sub
dec
ja
and
clc
sbb
int
stc
lock
mov
mov
aad
sbb
test
jmp
sbbl
push
push
xchg
sub
inc
loopne
pop
lock
adc
xchg
mov
jmp
sahf
pop
movsl
sbb
or
mov
inc
inc
pop
xchg
jns
push
push
mov
cmp
leave
mov
lcall
pop
and
mov
mov
leave
dec
cmp
stos
sbb
xchg
popa
sbb
xlat
xor
pop
lcall
mov
lahf
or
xor
es
in
sub
in
pop
cmp
gs
jae
sbb
popf
or
adc
vmwrite
jecxz
push
fsubrs
mov
js
in
mov
dec
rcrl
mov
sar
int3
dec
je
lret
xchg
ja
jp
push
je
fcomip
mov
jl,pn
loopne
xchg
push
sub
test
les
adc
sbb
push
lock
add
push
int3
pop
push
cmp
inc
xor
or
clc
xchg
xchg
lret
and
dec
mov
jo
fidivl
icebp
movsb
adc
int
ljmp
sbb
or
mov
mov
mov
mov
mov
xor
lds
fbstp
nop
es
cmc
cmp
mov
ljmpw
enter
xchg
inc
out
rcrl
mov
fdivrl
int3
mov
jle
push
aaa
xor
sbb
cmc
cwtl
test
pop
data16
xchg
loop
insb
sub
int3
ljmp
aam
leavew
js
jb
push
cmpsl
dec
jmp
dec
mov
aad
xor
shlb
jmp
inc
call
je
out
inc
dec
icebp
shll
jb
xchg
loop
xchg
loop
int3
mov
stos
icebp
push
in
loopne
xor
lahf
adc
mulb
out
jecxz
mov
cmpsl
out
pop
dec
movsb
pop
and
xlat
cmp
imul
out
sub
sbb
or
aas
enter
sub
xor
sbb
daa
mov
jnp
test
les
in
mov
push
adc
in
test
aad
lds
icebp
decl
xor
xor
test
sti
insl
jb
insb
mov
fistl
xor
lret
test
mov
cld
call
push
add
out
mov
call
scas
lods
dec
shlb
sbb
xchg
pushf
jp
jnp
mov
cmpsb
sub
pushf
leave
push
fptan
repnz
add
push
add
aam
gs
repz
xchg
or
or
adc
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
dec
aam
push
out
mov
dec
jecxz
inc
das
mov
int
mov
popf
pop
enter
int3
aaa
mov
cmc
cmp
xchg
dec
cld
dec
sub
lods
es
in
sub
sub
fwait
sbb
and
push
cmp
or
cmpsb
jne
pop
jne
jl
jmp
arpl
mull
xor
mov
test
lahf
dec
fldenv
ret
out
cmp
dec
sub
inc
gs
push
adc
xchg
packuswb
jecxz
xchg
int3
mov
xor
cltd
xor
cmp
jge
ss
add
jp
dec
aas
nop
mov
insb
aad
pop
mov
ret
xchg
mov
jae
gs
mov
dec
popf
cwtl
test
xor
hlt
mov
sbbl
sub
iret
pushf
and
ds
push
mov
and
cmp
loopne
add
call
sarb
adc
inc
pop
aas
dec
mull
shlb
arpl
test
jns
stc
rcll
and
push
jge
stc
dec
int3
cld
or
leave
cld
xor
mov
shlb
push
xchg
sbb
dec
aaa
push
arpl
mov
pop
stc
xor
out
inc
enter
les
jp
adc
add
push
int
lods
leave
and
mov
aam
xchg
cmp
mov
xor
mov
mov
pushf
mov
je
xchg
dec
rorl
stc
imul
sbb
sti
mov
xor
add
sub
lods
lret
ljmp
enter
leave
push
inc
mov
repz
shl
adc
nop
mov
adc
pop
shrb
int
enter
cli
scas
daa
out
es
popf
xor
pop
out
mov
lock
push
adc
adc
fisttpl
sarl
mov
mov
in
es
jp
jo
in
daa
pop
lahf
mov
inc
or
fldcw
in
fs
sbb
sub
xchg
out
xor
lods
inc
or
xchg
jne
int
ljmp
and
enter
mov
adc
push
dec
mov
pop
imul
pop
xor
ja
pop
pop
gs
cltd
sbb
stc
dec
lea
ret
movsb
fwait
pop
and
mov
jp
dec
jae
in
mov
sarl
testl
incl
inc
bound
push
and
sahf
idivb
sbb
or
movsl
add
test
sbb
in
insb
cwtl
bound
in
pop
adc
pop
xor
xlat
sub
lret
out
jle
cmp
rclb
xchg
cmp
sbb
and
jno
mov
cld
movsb
jl
and
xchg
hlt
stc
mov
mov
adcb
shll
jo
lods
lds
fidivl
notl
or
fiadds
imul
sahf
sub
mov
push
mov
mov
xchg
out
jne
add
in
and
xchg
sbb
xchg
iret
inc
movsb
sub
std
ja
xchg
lds
jnp
xchg
mov
inc
nop
fwait
addb
dec
inc
repnz
mov
and
sub
xor
mov
push
hlt
inc
push
scas
sbb
jo
fbld
daa
in
dec
loope
and
cli
popl
pop
sub
int
sub
or
int3
add
in
rcrl
icebp
and
mov
mov
adc
sub
cmp
push
cs
mov
je
sub
push
xlat
mov
jno
fwait
out
aad
ds
fistps
cld
out
cmpsb
movsl
jo
rolb
sub
inc
hlt
mov
cld
pushf
mov
test
aaa
fildl
aad
adc
inc
jnp
in
cli
enter
stos
rclb
in
push
orl
fcmovbe
std
fucom
sub
add
and
inc
subb
mov
imul
loope
dec
icebp
inc
cmp
cmp
mov
mov
or
inc
rcll
sahf
push
mov
push
sub
dec
clc
dec
aad
mov
fsubrp
inc
jmp
dec
lds
ret
stos
push
movsl
mov
movb
xchg
addb
movsl
sbb
imul
movsb
fsubs
add
call
ret
xor
shrb
mov
add
jp
lock
push
movsl
mov
push
mov
xor
shr
popf
sahf
in
aaa
out
mov
push
jno
fisttpl
stos
cwtl
jle
push
and
scas
push
repz
daa
int
test
add
push
ret
loopne
pop
cli
fstpl
fsubr
ljmp
add
repnz
adc
sbb
sbb
push
dec
pushf
inc
adc
shlb
lret
ss
dec
int
xchg
divl
arpl
inc
aad
or
mov
leave
loop
adc
and
cmp
stos
lcall
jg
jmp
repnz
aaa
pop
imul
inc
mov
mov
mov
jns
addr16
ret
rcrl
popf
dec
inc
std
mov
dec
cs
fimuls
mov
aad
cmp
aaa
ja
push
addb
rclb
ficoms
popf
ss
mov
add
mov
or
or
addl
xchg
mov
jb
mov
xor
bound
dec
enter
loop
daa
xchg
mov
movsb
dec
sub
fidivrs
fsubrp
jns
fisubrl
or
shl
sub
inc
inc
ffreep
popa
lea
sub
shlb
cli
add
xchg
cld
in
test
ds
inc
ds
loopne
int
mov
jns
inc
adc
in
lcall
cmpsb
mov
jecxz
fwait
or
xor
xchg
call
adc
out
in
cmc
test
lret
adc
jl,pn
inc
xchg
adc
mov
inc
pop
fiaddl
xchg
xor
iret
mov
addr16
jns
and
pop
jmp
lea
aad
mov
or
adc
stc
daa
outsl
leave
xor
in
pop
sub
pushf
cmpsl
xlat
push
dec
in
xchg
cmp
test
jge
mov
rcll
out
repz
fsubrs
adc
mov
mov
cltd
in
daa
lret
jbe
sub
xor
jno
lret
jnp
popl
or
aaa
xor
lahf
jne
fbld
movsb
fadd
out
sub
mov
mov
cmpsb
pop
stc
lret
xchg
xchg
mov
xlat
test
popa
shlb
cmp
jmp
xor
loopne
sti
jecxz
cmp
mov
addb
dec
push
lods
pop
mov
aas
lds
bound
mov
cmc
cmp
test
push
pop
iret
adc
adc
out
in
dec
lea
adc
sahf
clc
out
out
jl
and
jb
jge
sbb
adcb
mov
cwtl
pop
movsb
movsl
lock
rcr
outsb
xor
push
xor
mov
fsubp
ds
pop
jbe,pt
jo
ficoml
add
inc
ja
outsb
push
mov
cmp
adc
lret
lods
jne
adcb
push
sbb
ja
mov
sarl
stc
jg
mov
dec
scas
fstpl
shr
mov
jmp
push
mov
pop
inc
xchg
fwait
icebp
sub
xchg
orl
imul
mov
inc
xor
loop
sub
ret
or
push
lods
int
mov
xchg
inc
mov
bound
sub
hlt
xor
and
pop
add
scas
and
aaa
nop
clc
pop
adc
push
push
push
ss
ret
jo
mov
mov
xor
ljmp
sbb
push
xor
pop
cmp
sub
lds
fmul
push
das
pop
je
pop
lret
ljmp
adc
mov
fstl
dec
dec
xor
push
dec
aas
test
mov
push
adc
inc
test
pop
setle
sub
orl
daa
xor
mov
pusha
cmp
int
jl
sbb
inc
fnstcw
adc
fsubr
out
fstl
js
aas
imul
jns
mov
dec
je
push
xchg
test
adc
in
dec
rcll
repz
mov
sti
mov
lahf
sub
adc
jo
cmp
add
pop
sub
jle
jmp
dec
fsts
js
xor
out
inc
popf
lcall
in
jp
iret
mov
or
iret
jnp
jae
int
shl
out
test
cmp
aam
and
repnz
mov
mov
jmp
mov
mov
popa
ret
mov
ret
inc
mov
leave
dec
jp
bound
adc
cltd
jl
pop
sbb
ret
add
xor
les
fnstsw
xor
adc
ss
pushf
sbb
xchg
lahf
dec
xchg
xchg
mov
mov
outsl
testl
ret
fidivs
jp
adc
jbe
incl
in
sub
sub
rorb
dec
test
lahf
fwait
push
jle
mov
xor
in
icebp
xorb
enter
pop
mov
fsubrs
sbb
inc
xor
push
out
imul
pop
cmp
out
pop
pushf
dec
or
push
addr16
mov
sbb
push
lods
sbb
mov
sub
lahf
lret
cmovg
rorl
pop
subl
adc
loopne
mov
scas
movsb
sti
imul
push
nop
pop
lock
jnp
mov
cli
loop
xchg
cli
enter
xor
sub
adc
lods
adc
push
dec
imul
inc
jge
cs
dec
test
cmp
loope
dec
xchg
dec
sbb
add
mov
sbb
or
test
fildl
mov
jo
shll
out
mov
mov
out
subl
in
jp
inc
sub
inc
xlat
iret
pop
cmpsl
in
psllq
and
mov
test
in
filds
jo
mov
loope
inc
mov
sbb
sub
and
jb
add
sub
jbe
imul
inc
les
pop
out
fistpl
pop
mov
lea
mov
test
inc
mov
inc
mov
inc
movsl
daa
inc
add
dec
inc
xorb
jb
sub
or
dec
ss
sahf
sub
icebp
insl
xchg
imul
lret
rorl
or
jge
add
test
test
test
pop
push
dec
dec
inc
push
icebp
dec
lahf
and
mov
je
das
out
xor
data16
jo
in
fisubs
sbb
das
in
imul
rorl
mov
test
ljmp
test
jbe
flds
sub
push
or
add
test
iret
out
mov
cmp
or
sbb
inc
and
leave
leave
jns
or
imul
outsl
jge
hlt
test
xchg
out
adc
mov
pop
popf
int
movsb
sbb
lea
jae
ds
data16
aaa
mov
inc
cmp
jae
mov
xchg
in
das
lods
test
push
inc
sub
mov
cmpsl
or
cmpsl
xchg
shll
add
sbb
enter
out
xchg
inc
andb
push
sbb
and
sahf
push
mov
stos
pop
add
dec
mov
mov
lret
pop
iret
adc
or
dec
push
dec
xchg
jnp
sbb
fcmovu
pusha
xor
and
pop
test
cwtl
daa
lods
insl
popa
push
push
ret
daa
pusha
and
push
test
mov
out
ret
stos
es
mov
inc
pop
push
push
and
pop
jno
int
rcll
data16
sarl
push
jb
xchg
mov
adc
int3
leave
pop
jne
shlb
fs
in
scas
fnstsw
lahf
test
fsts
aas
inc
mov
jns
stos
adc
xlat
std
repnz
xchg
lret
add
in
pop
lods
test
popa
pop
cli
fldt
adc
cs
loope
stc
push
fstp
push
push
pop
fsts
aaa
pop
mov
pop
arpl
mov
ss
sbb
xor
push
add
stos
add
jecxz
loopne
jo
rcrb
ds
mov
fildl
push
mov
xor
add
nop
and
adcb
jnp
sub
add
test
cmp
xchg
iret
inc
and
mov
daa
fmull
sub
out
pop
inc
cltd
xchg
mov
sub
pop
adc
jle
imul
jmp
loopne,pt
incb
idivl
addr16
inc
and
push
or
sbb
ret
stc
add
jnp
xchg
bound
and
addl
pop
mov
into
dec
xchg
in
mul
ss
jg
mov
mov
imul
pop
fsts
cld
mov
rol
inc
pop
xor
mov
adc
mov
pushf
pop
add
pusha
pop
jl
dec
faddp
adc
mov
outsb
lret
jno
dec
adc
scas
es
push
pop
jmp
jb
sbb
xorl
aaa
lods
cwtl
mov
jmp
push
sbb
sub
shlb
mov
int3
pop
push
push
push
into
jnp
popf
pushf
scas
mov
clc
dec
insl
pop
pop
sbb
es
jge
xor
fcmovnu
inc
pusha
das
lds
mov
dec
xor
sbb
js
rclb
push
pop
inc
shll
mov
xchg
cmpsl
mov
jb
shll
or
lcall
push
mov
je
adc
lret
adc
lahf
pop
cmp
inc
push
lahf
xor
xor
dec
sub
dec
xor
dec
loop
mov
lcall
mov
cwtl
and
movsb
inc
int
mov
mov
inc
mov
or
scas
push
in
inc
xlat
jg
dec
or
lea
and
mov
mov
mov
test
sub
inc
fnsave
rorl
sbb
hlt
sub
mov
in
xor
fstpl
nop
sbb
adc
cmp
js
enter
add
lcall
das
sbb
cmpsb
pop
shrb
stc
std
in
inc
fwait
mov
mov
xchg
xor
into
scas
pop
pop
pop
pop
lods
sub
sub
adc
inc
daa
pop
iret
aas
inc
arpl
inc
adc
int3
dec
push
cmp
cmp
adcb
cld
add
mov
pop
idivb
mov
adc
push
ljmp
inc
shlb
ret
push
jne
jbe
insl
pop
hlt
push
or
frstpm(287
adc
sub
mov
or
sbb
in
xchg
sti
add
xor
mov
icebp
bnd
rcrb
adc
idivl
and
mov
add
subb
mov
pop
imul
stos
mov
pop
jmp
mov
ss
adc
movsb
aas
aaa
xor
jmp
jp
movsb
add
rcl
fs
mov
jg
jnp
xchg
arpl
call
test
mov
mov
mov
or
mull
xchg
mov
imul
jecxz
adc
and
rorl
xchg
inc
test
loop
mov
movsl
sub
sub
sbb
gs
shl
sub
pop
daa
subb
cmp
push
in
icebp
xchg
pop
loope
lods
ffree
push
fwait
jo
fisubs
cmpb
xchg
out
leave
add
inc
mov
sbb
or
notb
xchg
imul
lret
shrb
cmpsb
jne
scas
pop
sti
mov
mov
push
in
stos
aaa
adc
pusha
fsqrt
dec
xchg
movsl
aam
or
jb
dec
inc
push
enter
popf
dec
inc
xchg
ljmp
iret
setge
imul
movsl
inc
lcall
add
mov
hlt
dec
rclb
or
sub
lahf
jle
outsl
pop
xchg
mov
pushf
push
xchg
dec
push
cmpsb
sub
ret
orb
popl
jbe
pop
mov
adc
sarl
inc
pop
cwtl
lret
out
mov
mov
insb
jmp
and
and
inc
and
insl
cmp
pusha
jns
xchg
stos
pop
fdivp
out
cmc
std
je
mov
rcr
fcom
inc
jmp
lahf
or
xor
xor
xchg
jae,pn
mov
fmulp
loope
bound
jp
xchg
sbb
mov
sahf
scas
inc
push
push
jae
add
pop
adc
je
mov
out
out
pop
arpl
aaa
cmc
adcb
cmp
dec
push
sub
mov
repnz
jns
lock
xchg
dec
lds
in
add
jbe
insb
mov
mov
iret
pop
push
adcl
lret
inc
dec
cmp
lahf
lods
adc
dec
pop
push
sub
pop
hlt
adc
jmp
xchg
push
mov
xchg
dec
and
or
test
push
add
mov
pop
fcoml
mov
cmpsb
shlb
dec
dec
mov
in
loope
aas
repnz
icebp
cltd
xor
scas
in
sub
mov
out
jb
jmp
push
mov
dec
dec
imul
xchg
cwtd
cmp
cmp
scas
jb
cmpsb
mov
nop
test
cltd
mov
bound
test
mov
xor
inc
sarl
mov
nop
cmc
sbbl
lods
or
mov
fxch
adcb
xor
popa
mov
cmp
ror
pusha
mov
jne
jae
inc
push
mov
fs
dec
shlb
punpckhbw
dec
push
ret
into
jne
and
leave
jb
mov
dec
movsl
push
outsl
test
fisubrs
lret
negl
xchg
push
push
adc
negb
cmc
xor
add
adc
out
insb
lds
xchg
test
mov
jmp
shlb
pop
sub
add
push
xorb
sti
out
push
shl
arpl
test
rcrb
cmp
inc
and
sub
les
or
push
in
fidivs
in
popl
je
je
mov
test
clc
adc
mov
inc
pcmpeqw
fwait
push
sub
rcll
ja
jge
cltd
push
push
aad
jge
xor
mov
sub
xchg
mov
adcl
push
xor
cmp
test
lret
mov
mov
sub
dec
mov
push
outsb
push
outsb
fcmovb
int3
div
movsl
sub
xor
push
fsubrl
push
shlb
or
stc
cmp
pop
test
pop
call
push
jb
and
adc
mov
gs
dec
clc
loopne
mov
iret
cmp
mov
sub
mov
outsb
daa
dec
in
cmp
mul
pop
test
inc
scas
inc
loop
enter
sub
outsb
cmp
repz
mov
fprem
push
push
out
jb
and
sbb
int3
repz
lret
daa
mov
rclb
inc
lds
sub
xor
dec
repnz
mov
subb
movsl
pushf
and
sbb
push
push
cwtl
jmp
pusha
rcll
sar
js
cwtl
xor
lret
test
pop
outsb
push
mov
mov
in
lods
jno
jp
bound
or
fwait
arpl
inc
test
push
ss
cwtl
in
or
insl
jo
add
dec
inc
or
adc
jae
ret
data16
push
mov
xor
jle
ljmp
fsubrs
fdivs
push
ds
jns
dec
add
add
fstpl
add
add
or
or
out
inc
mov
lock
loope
sub
cld
push
ficoms
xlat
in
iret
into
cmp
jecxz
fdivrl
das
push
pop
xchg
jecxz
and
aas
push
dec
sbb
sub
mov
xchg
push
inc
sbb
stc
sub
mov
mov
bound
sbb
push
jmp
or
fucomp
cvttps2pi
loopne
in
pop
pop
cltd
sbb
imul
fildl
lret
test
imul
push
xchg
add
pop
movsl
jnp
sbb
inc
loopne
stos
inc
jle
scas
rcll
in
fcompl
bound
or
fisubs
fisttps
jecxz
fadd
rcrb
push
dec
sbb
sub
pop
outsl
mov
jg
jbe
dec
cmp
subb
mov
test
jne
les
testb
clc
mov
xor
mov
cmp
scas
xchg
es
adcb
or
shll
jmp
hlt
push
or
push
cmpb
xchg
in
or
stos
imul
test
jl
es
mov
sahf
push
cmp
push
and
lods
add
jbe
dec
push
jne
xchg
subl
mov
inc
xor
jecxz
fidivrl
cmp
mov
aad
mov
lods
sub
jo
dec
sbb
inc
iret
cld
mov
xchg
jecxz
icebp
xor
fcompl
and
or
out
lock
sub
les
cmp
push
jg
and
add
arpl
push
pop
mov
stos
stos
fwait
inc
cs
jecxz
repz
aad
bound
ss
cmp
xchg
cmp
fildl
push
sbb
repz
out
mov
pop
cmp
nop
sahf
movsb
fsubr
dec
push
repz
xchg
loop
rcll
repnz
ret
enter
fisubrs
pop
lock
xchg
pop
nop
dec
insl
sbb
adc
inc
adc
add
add
popl
lret
in
mov
xchg
ja
jbe
jo
fadds
test
sbbb
cltd
scas
popa
jecxz
pusha
mov
cmp
dec
cmp
xchg
scas
cs
lcall
add
sub
sub
fildl
out
jg
std
jo
add
mov
cmp
mov
mov
imul
pop
push
stos
mov
jg
cli
xchg
mov
cltd
adc
dec
sbb
pushf
movsl
nop
call
loopne
pushl
mov
pop
fcomps
jle
or
mov
and
cmp
xchg
test
jge
sti
pop
scas
push
adc
lea
ret
pop
cmp
xchg
lods
pushl
leave
insl
ss
outsl
mov
cmpsb
push
pop
mov
dec
fbld
jl
sub
loope
sbb
sahf
add
sti
hlt
pop
add
fdivrl
dec
mov
pop
shll
sub
int
sahf
aas
les
mov
inc
sub
push
dec
add
or
data16
inc
ss
into
pop
mov
pop
jmp
movsb
arpl
lea
sti
je
pop
dec
lock
or
cmp
pop
call
and
mov
enter
add
xchg
cld
inc
es
cltd
sub
cmc
adcl
shrb
or
mov
xchg
cmc
cmp
addr16
dec
inc
shrl
and
mov
int3
push
imulb
and
and
es
sbb
dec
add
mov
jnp
dec
lods
mov
or
sub
jno
ljmp
addb
iret
loope
rol
xchg
sub
lea
xor
and
loop
push
xor
dec
outsl
cmpsb
call
add
jg
xchg
jnp
cmp
lock
xchg
movsl
adc
fildll
repz
sbb
inc
push
add
jg
in
std
pusha
ds
inc
push
hlt
lock
loopne
aam
xor
movsb
xor
xchg
iret
mov
pshufw
xchg
xchg
cmp
test
or
push
out
leave
fldcw
lret
aaa
scas
add
movsl
xor
out
pop
stc
jbe
aaa
and
xor
xchg
ret
movsb
and
icebp
fnstcw
aam
jnp
dec
fcos
cmp
or
or
scas
add
fisubl
mov
adc
mov
sbb
stc
mov
imul
cmp
shll
cmp
dec
insb
dec
or
in
jnp
sahf
pop
sub
stos
out
out
push
clc
pop
pop
ljmp
repnz
pop
pop
lock
cmp
cmp
repz
xchg
daa
inc
or
add
stc
pushf
mov
xorl
cwtl
push
adcl
aas
lahf
mov
fiadds
xchg
lock
and
jmp
cld
mov
xchg
ljmp
testb
cmp
rcrb
fisttpll
insl
mov
fxch
jb
mov
mov
int3
stos
xchg
cmp
pop
cmp
insb
or
or
mov
cmp
xchg
je
lods
test
repnz
fsubs
sub
xchg
mov
test
cli
adc
fcompl
jnp
xchg
adc
out
test
mov
jnp
test
aaa
cmc
cld
jl
jae
shrb
lret
fnstenv
mov
push
imull
and
int3
dec
std
push
int
mov
in
rcrl
das
loopne
fs
insl
inc
jmp
mov
sub
xor
cltd
inc
pop
repz
and
mov
fsubl
dec
dec
fnsave
aaa
inc
push
daa
orb
out
xchg
pop
mov
incl
pop
sti
fisubs
push
push
dec
push
add
lret
or
xchg
shr
int3
jge
lods
push
sbb
dec
jo
mov
leave
and
out
mov
fistpl
push
xor
jbe
pop
sub
hlt
and
jl
xchg
push
sarb
inc
jmp
mov
ds
mov
jns
dec
and
out
adc
pop
leave
xor
mov
shrl
adc
mov
pop
icebp
in
inc
jnp
push
xchg
mov
rclb
or
adc
xor
mov
jnp
mov
cs
mov
or
add
mov
cmp
lods
mov
out
std
add
mov
mov
scas
jl
aam
out
jae
xor
sbb
mov
imul
cmp
adcb
bound
fistpl
addl
test
and
lods
xchg
lds
xor
fsubrs
mov
sub
and
xchg
loop
sub
repz
fmull
add
and
scas
outsl
push
ret
xchg
stc
cli
xchg
pop
xchg
stc
xor
scas
jb
subb
dec
sarb
push
fwait
pushf
sub
sub
xchg
push
addr16
fmulp
adc
xor
jo
lods
pop
orb
pushf
adc
add
add
pop
lock
pop
lods
fmuls
push
ficompl
cmp
std
mov
imul
inc
scas
xlat
fwait
stos
sbb
loop
mov
dec
inc
xor
sub
jae
inc
xor
mov
popa
mov
mov
fidivl
pusha
pop
pop
xor
imul
mov
bound
mov
shlb
xchg
jp
nop
fwait
int3
adc
jnp
push
repnz
mov
sti
fnstcw
xlat
and
popf
push
ss
sbb
sub
scas
into
jne
or
movsl
imul
lods
je
xchg
repz
in
cli
test
in
xchg
jl
cwtl
or
outsb
cld
inc
add
in
adc
int
push
pop
aam
test
sub
je
or
mov
je
or
xchg
roll
mov
add
popa
test
mov
aas
mov
dec
sub
popl
sti
mov
dec
jle
adc
ss
test
xor
int3
dec
test
aaa
mov
mov
xor
in
dec
je
out
add
insl
add
mov
sub
repz
inc
sub
idivb
push
dec
push
ret
roll
jnp
mov
jne
jg
std
push
dec
loope
xor
mov
jno
iret
les
pop
push
push
pusha
int3
xchg
jg
xlat
mov
dec
std
jl
sub
popa
dec
dec
fdivl
iret
dec
insb
test
inc
jl
fisubl
xchg
push
sbb
push
repnz
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
push
pop
mov
or
sub
push
push
add
test
push
outsb
pop
js
jno
dec
imul
outsl
cmpsb
mov
into
jb
pop
add
icebp
dec
jno
mov
repz
pop
dec
cmp
std
mov
bound
xor
xchg
dec
movsl
call
das
or
sbb
and
jp
jl
push
out
subl
enter
les
out
cmp
loopne
ret
mov
hlt
cld
xabort
cmp
xchg
jl
movsl
jno
add
cli
sahf
mov
push
jp
xchg
lahf
test
iret
jns
mov
es
adc
mov
inc
data16
cmp
mov
aas
ja
repnz
cmp
mov
lds
dec
sbb
sub
and
lret
push
and
imul
mov
mov
add
out
mov
aaa
aam
ja
jns
jle
mov
cmp
dec
mov
pop
mov
mov
sbbl
or
mov
push
cmp
cmpsb
sti
roll
dec
push
enter
shl
daa
test
int
mov
sahf
jl
sub
xchg
jbe
shll
imul
pushf
pushf
dec
sbb
adc
fcmovne
repnz
iret
and
outsl
sti
addl
in
fwait
xor
mov
fidivrl
inc
inc
scas
add
loope
xor
push
daa
cs
mov
push
negl
push
xchg
jno
addr16
push
push
push
sub
es
mov
add
bound
mov
repnz
sti
pop
sub
leave
adc
xor
mov
sub
call
es
test
adc
dec
xchg
in
mov
cli
cmp
subl
sti
negb
clc
mov
stos
fs
mov
push
push
adc
movsb
popa
loope
std
jecxz
mov
hlt
cwtl
inc
xchg
lcall
cmc
std
or
icebp
mov
add
fiadds
xor
loope
movsb
loopne
ja
addr16
mov
inc
shr
mov
fildll
out
loope
or
xchg
subl
daa
dec
xchg
mov
ficompl
mov
ss
add
mov
push
shr
leave
loope
test
fldenv
aas
xchg
add
frstor
cmp
push
scas
mull
dec
lods
xchg
sub
arpl
insl
mov
xchg
jle
ss
mov
xor
test
xchg
dec
sbb
jae
add
mov
cltd
or
fwait
test
aas
jbe
ret
ljmp
lods
xchg
mov
test
push
loope
xor
jbe
ss
divb
fiaddl
push
in
test
out
dec
sbb
mov
jp
pushf
add
popf
aam
xor
pop
call
xor
adc
pop
shr
jnp
and
shlb
xor
into
nop
add
mov
mov
shrb
stos
test
or
xor
jb
stos
mov
pop
fmul
jmp
imul
cli
mov
sub
fadd
bound
mov
mov
arpl
cmp
ljmp
out
mov
je
and
clc
es
lret
pop
bswap
add
add
insb
pop
js
pushf
fsubr
negb
aam
bound
rclb
cmp
inc
aam
das
jb
xor
mov
pusha
inc
addr16
push
adc
dec
int
xchg
in
sub
inc
cmp
or
xchg
loop
add
mov
ljmp
push
dec
imull
mov
scas
cmpsl
jp
mov
fists
daa
add
cwtl
test
xor
dec
and
or
adc
fwait
or
ljmp
and
inc
push
or
in
mov
sbb
mov
fcoms
mov
sub
das
push
ret
test
sarb
xor
imul
pop
sub
cli
dec
loop
sbb
fcmovne
and
lea
gs
push
xor
insl
sbb
jle
xchg
aad
cmpsl
testb
cs
dec
xchg
std
pop
push
xor
lcall
mov
in
dec
dec
daa
sbb
inc
in
aas
dec
jmp
cmp
adc
pop
fs
in
popa
push
test
insb
scas
sbb
add
arpl
jmp
shl
fsubrs
push
repnz
mov
in
pop
or
loop
lods
add
cmp
dec
idivl
or
cmpsl
fldenv
stos
push
push
fsubl
xchg
int
jecxz
cmpsb
fnstsw
f2xm1
mov
xchg
dec
cli
xchg
mov
test
mov
xchg
rcll
mov
mov
pusha
ja
icebp
cmp
push
cmpsb
mov
xor
js
repnz
mov
pop
push
adcl
imul
shrb
mov
pop
sahf
lcall
adc
jne
and
cltd
dec
pop
mov
sbb
mov
pusha
or
shr
sub
inc
ds
mov
inc
xchg
fldenv
pop
sbb
es
xor
sub
push
or
in
dec
dec
aaa
mov
xor
popa
in
add
mov
orl
daa
ljmp
cld
rcrl
lahf
jp
out
call
mov
iret
fstp
xchg
rorl
mulb
testb
stos
inc
sbb
mov
ret
inc
adcl
nop
xor
js
ljmp
icebp
inc
pop
sub
xor
push
xchg
enter
push
lahf
fisttps
fcmovbe
adc
pavgw
mov
xchg
fstpt
cwtl
xor
pop
mov
mov
clc
jp
sbb
push
cmp
and
sub
adc
repnz
mov
jl
mov
rcll
adc
loopne
out
xor
jecxz
inc
xchg
push
fisttpl
xor
inc
push
mov
cmp
in
rcrb
scas
arpl
arpl
adc
loopne
int
sub
lock
int
es
daa
cmp
lret
negb
ljmp
and
pop
pop
dec
sbb
pop
push
sti
mov
or
repz
daa
or
adc
xor
es
jo
cwtl
test
ss
fmuls
xor
repz
lahf
xchg
sbb
dec
or
mov
cmp
inc
sub
inc
jecxz
lods
lods
iret
sub
roll
int
mov
sbb
push
mov
sbb
inc
sub
or
xchg
out
mov
ja
sub
loope
pop
jl
xor
adc
inc
fistps
stos
xchg
inc
icebp
sub
xchg
mov
cmp
call
in
popf
push
sub
sub
pop
cld
mov
test
xchg
jb
mov
sbb
int
pusha
jg
mov
addr16
div
sub
sub
and
cs
mov
orb
lahf
and
popf
add
mov
dec
mov
pop
hlt
and
push
jno
sub
lret
pop
adc
sub
aam
shr
lret
int3
xor
je
es
push
jl
cltd
dec
ret
inc
push
aas
inc
push
mov
xchg
imulb
and
lods
xchg
jae
outsl
xchg
sub
inc
mov
pop
es
bound
add
shll
rolb
push
arpl
popa
xlat
outsb
pop
aaa
or
or
adc
in
popa
nop
ss
sub
scas
cltd
adc
add
repz
add
jbe
lock
mov
dec
jmp
popf
and
popf
dec
mov
scas
int3
lcall
and
dec
xchg
pop
pushf
fs
std
jb
iret
adc
xchg
xor
pop
arpl
hlt
mov
jae,pt
pop
xchg
mov
cwtl
cmc
idivb
lea
fwait
ret
das
sbb
ja
lods
jbe
les
lret
push
fmulp
dec
dec
loopne
scas
adc
out
mov
push
sub
dec
jge
fnstsw
stos
bound
cwtl
repnz
xchg
sahf
pop
inc
lods
stos
xor
inc
sub
xchg
xchg
and
popa
out
test
mov
aad
and
pop
lea
jbe
pop
loopne
mov
ja
xchg
aaa
dec
cltd
rcll
sbb
lds
pusha
mov
aas
andl
or
mov
sti
fsubs
xor
push
pushl
jb
insl
pop
leave
sub
mov
pushf
dec
sub
popf
lret
pushf
int3
or
pushf
clc
jl
ltr
dec
mov
out
mov
sbb
daa
push
push
jmp
daa
test
cmpsl
jg
push
inc
jecxz
dec
lcall
das
iret
repnz
jne
adc
subl
lods
inc
lods
mov
ffreep
lcall
js
adc
jbe
push
sti
fidivs
les
aas
aaa
inc
adc
int3
in
sub
mov
mov
mov
daa
sub
sub
leave
dec
mov
or
dec
xor
outsb
push
test
xor
cmp
push
aaa
push
fisttpl
xchg
popa
into
xchg
pushf
lock
lods
push
inc
enter
sti
sub
mov
inc
mov
outsb
in
fidivs
imul
xchg
or
sbbb
add
mov
mov
rolb
movsb
pusha
xchg
repz
dec
dec
inc
sbb
test
and
rcll
inc
insl
jge
lahf
je
adc
loope
in
lahf
inc
adc
xchg
xchg
inc
mov
push
mov
xor
push
mov
and
dec
adc
pop
fisubrl
fistpl
inc
cmc
test
and
jmp
dec
cmc
js
jae
in
and
jnp
dec
adc
loope
fistl
push
lret
jae
xor
out
mov
sti
mov
call
cmpl
mov
cmp
test
repz
xchg
and
fwait
fs
mov
mov
pop
shll
cld
flds
mov
mov
je
xchg
sarl
dec
and
mov
jb
ficoml
sbb
xor
or
stc
mov
lret
push
sbb
mov
adc
pusha
lock
push
out
sahf
add
push
in
inc
bound
loope
mov
and
sti
cmp
sbb
cmp
outsb
push
fwait
and
out
movsb
stc
inc
lds
mov
ret
adcb
mov
mov
mov
adc
daa
dec
sub
push
sbb
jno
lcall
sub
mov
jbe
leave
je
add
psllw
push
cmp
sti
xor
fcmovbe
push
lret
pop
mov
pop
push
stos
dec
sub
aam
fsubrl
pop
push
xchg
cld
jle
test
mov
jns
fcmovnb
jnp
sub
dec
int3
and
stc
sarl
mov
mov
rorb
jp
pop
sub
andb
pop
adcb
mov
lea
push
mov
mov
bound
das
or
xchg
lret
inc
cmc
or
and
cli
or
out
jb
adc
cld
int
fimuls
inc
mov
cmp
jae
ss
test
adc
push
or
jo
ds
ret
insl
and
adc
lods
shrb
push
mov
mov
cmc
xor
fisttpll
addl
stos
adc
int3
xor
movsl
xchg
iret
mov
imulb
or
xor
iret
addr16
mov
aam
mov
idivl
cmp
icebp
imul
cmp
sub
xchg
je
mov
jmp
aad
pop
push
pop
jbe
scas
es
add
inc
mov
lret
or
lock
out
call
jb
mov
mov
lahf
dec
out
adc
out
adc
in
js
sbb
js
jno
sti
lods
into
imul
push
jns
adc
cwtl
leave
iret
jg
addb
sub
mov
mov
mov
lea
lods
inc
mov
and
ljmp
sbb
push
shr
int3
dec
in
mov
mov
pushl
sahf
es
xor
push
sahf
insl
sbb
dec
cmp
popl
in
mov
rorl
jmp
push
and
out
aas
mov
outsb
inc
loopne
add
mov
sbb
pop
shll
in
sbb
das
daa
pop
adc
cmp
das
lahf
mov
add
cli
sub
cmc
push
popf
movsl
sahf
mov
push
xchg
cmpsb
adc
jmp
or
xor
xor
jo
loope
repnz
pop
inc
push
shll
and
lds
mov
jp
ljmp
aas
jno
int
mov
aaa
push
xchg
jecxz
hlt
adc
aam
dec
and
sbb
push
pushaw
cmp
mov
fidivrl
and
iret
xchg
pop
test
mul
jg
repnz
mov
xor
fmull
ljmp
cmp
mov
nop
stos
mov
loopne
stc
in
out
sub
ret
xor
adc
fadds
ss
mov
xchg
sbb
and
sbb
lea
std
mov
xchg
xor
sub
inc
xchg
ds
push
insl
adc
and
sbb
and
jae
mov
iret
adc
rcrb
dec
repnz
and
jns
or
lock
sub
into
ljmp
push
in
test
jp
lret
movsl
jo
or
xchg
pop
cmp
and
cmp
sbbb
sahf
fwait
cmp
inc
xor
push
and
push
leave
xor
in
xchg
lahf
xchg
sbb
je
mov
cwtl
loop
add
movsl
sbb
xor
stos
pop
mov
add
mov
cmp
xor
outsl
jecxz
loope
stos
pop
data16
jae
mov
enter
idiv
mov
or
xor
fsubl
mov
pop
jp
dec
pushf
mov
mov
ror
clc
fildl
imul
xchg
fwait
lods
or
mov
push
vmulpd
lds
cmp
pop
shll
jge
movsl
adc
sub
outsl
fadd
pop
dec
mov
shrl
mov
pushf
inc
lock
push
lea
cmp
inc
mov
mov
sbb
mov
mov
adc
pop
mov
xchg
in
jge
jmp
xchg
fdiv
imul
shlb
xor
lea
mov
cmpsb
mov
dec
movsb
mov
and
js
sarb
mov
push
in
xor
inc
jp
inc
pop
and
pop
xor
jecxz
dec
and
push
dec
shl
in
inc
int3
and
pop
leave
scas
divb
pop
xor
scas
js
xor
xor
leave
out
gs
or
lock
xor
jne
sub
fcmovbe
dec
xchg
out
mov
fxam
mov
mov
mov
push
add
lds
clc
pop
loope
mov
jp
das
inc
popa
mov
cmp
mov
ret
mov
out
loop
or
sbb
loop
sbb
leave
lods
push
mov
pop
jp
cmovp
aam
jo
repnz
lahf
mov
scas
cld
jp
and
ret
imul
mov
add
aam
pop
jp
fimuls
aaa
sti
mov
mov
jnp
sti
mov
xchg
mov
mov
pusha
dec
ja
jmp
popf
inc
cmp
setne
repnz
add
iret
fsubrl
jecxz
sahf
and
mov
dec
std
adc
movsl
sahf
pop
mov
xlat
push
pmaxub
das
sub
mov
push
shl
push
rcll
adc
fsubrl
mov
loopne
or
iret
push
cmc
pop
xchg
addr16
repz
out
test
jl
add
cmp
shrb
jle
lret
test
test
cmpsl
pusha
out
enter
fcoml
ret
and
inc
jle
cmp
mull
dec
inc
repnz
mov
in
aam
add
or
or
icebp
cmp
jge
xlat
outsl
or
rcrb
cmp
inc
inc
rcr
jle
test
test
jns
push
mov
mov
faddl
or
in
mov
loope
pop
xor
repnz
pop
jne
outsl
and
lret
test
jmp
push
jmp
xchg
lods
pop
sti
hlt
mov
dec
inc
roll
dec
in
cld
mov
decl
push
cmc
mov
pusha
fisubrs
jle
xlat
lret
std
mov
add
inc
aad
cli
mov
xchg
test
push
and
es
loope
std
push
mov
xchg
mov
sahf
xor
orl
insl
inc
mov
out
push
inc
or
push
jge
xchg
scas
cs
jno
lock
fidivrs
es
fwait
push
push
test
scas
adc
addr16
into
idivl
dec
fisubrl
cmp
jae
shrb
push
cs
iret
jp
sbb
mov
rorb
mov
daa
xchg
push
cmc
mov
push
nop
sub
and
enter
and
jns
pop
push
sbbb
outsl
jmp
push
das
or
xor
into
test
adc
mov
ljmp
repnz
jl
jmp
mov
lahf
ss
bound
subb
out
pop
or
mov
push
in
es
xor
cltd
test
xchg
aas
xlat
test
mov
movsl
hlt
shr
and
cltd
jge
and
scas
fs
loopne
xor
mov
lret
es
mov
into
xor
aaa
pop
jbe
cmp
push
cmpsl
cmp
icebp
jg
jo
push
aad
std
mov
jmp
sarb
int3
jbe
xchg
push
ja
aad
scas
jno
cwtl
rcll
mov
int
stos
inc
fs
pop
mov
sbb
mov
imul
or
mov
ja
and
mov
push
ret
xor
in
loopne
bound
mov
jecxz
xorl
int
mov
adc
cmp
outsl
push
push
dec
fnstenv
leave
stos
inc
jae
data16
push
pop
repz
jno
dec
cwtl
cmp
icebp
mov
xlat
and
sbb
and
cmp
dec
call
cs
out
mov
pop
shrb
imul
cwtl
mov
xor
fldenv
mov
filds
xor
int3
push
add
pop
ss
adc
scas
ss
iret
cmp
jl
fwait
std
add
sub
ja
mov
jno
and
dec
jp
mov
in
cmp
mov
xor
or
cmp
ret
es
mov
mov
out
xchg
dec
inc
nop
lds
in
and
mov
mov
xchg
xor
mov
jmp
andb
test
fimull
iret
into
mov
shl
xor
incb
out
xor
mov
fidivrs
and
cmp
pop
sbb
ljmp
dec
xchg
jns
popa
sbb
outsb
ss
cmpsl
clc
push
xchg
inc
push
ljmp
push
xor
cmp
arpl
add
pushf
push
les
imul
and
mov
outsl
dec
loopne
xlat
jp
sbb
test
add
pop
mov
imul
cmp
inc
sub
cmc
or
test
and
push
push
inc
mov
xchg
rclb
aam
jbe
jae
add
xchg
test
mov
insb
adc
iret
cld
repnz
dec
xchg
mov
pusha
and
push
enter
sbb
jb
iret
pop
jno
scas
jle
outsl
int
jae
pop
push
cmp
jb
inc
cwtl
sbb
mov
sbb
ds
mov
dec
aaa
test
cmp
in
dec
mov
sahf
mov
imul
sub
pop
mov
gs
pushl
cmp
or
sbb
ret
icebp
and
cmp
cmp
push
outsl
or
sbb
xor
xchg
repz
sti
cltd
mov
shrb
das
mov
sti
aas
repnz
inc
push
daa
cmc
cmp
jno
adc
sub
push
jecxz
fabs
ror
fwait
mov
pop
out
jno
pop
ljmp
stos
outsl
jp
mov
jne
test
rclb
fnsave
aad
lcall
mov
je
fldt
inc
sub
inc
gs
mov
not
and
cmp
dec
mov
pushf
aad
lahf
les
fbstp
inc
or
cmp
push
and
orl
mov
xchg
pop
push
xchg
or
jmp
ficoms
jle
xor
repnz
cmp
stos
xchg
sbb
jno
pop
lods
mov
ret
testb
pop
sub
mov
cli
jg
pop
dec
add
sub
or
push
mov
sbb
popa
sub
adc
ljmp
xlat
insb
int3
imul
popa
mov
fcoml
mov
fadds
iret
jne
nop
test
ss
push
out
mov
lds
hlt
xor
add
sbb
mov
inc
int3
push
cmp
push
into
xchg
ret
push
sub
out
or
jne
sub
and
sbb
xor
roll
imul
jge
jmp
icebp
dec
ret
dec
fcoms
shlb
push
push
inc
inc
sbbb
aaa
aaa
xchg
stc
inc
test
and
sbb
push
dec
insb
cltd
fistps
js
test
ljmp
fcoml
mov
xchg
inc
movsb
mov
mov
insl
mov
jnp
ss
in
xor
push
gs
push
sub
cs
std
icebp
push
mov
cmp
push
jge
js
jge
adc
jg
aaa
sti
adc
popf
fsubs
xchg
or
jecxz
push
jmp
inc
push
cmpsl
mov
push
mov
xchg
popa
or
test
test
je
mov
jo
jle
sub
sub
das
push
sbb
pop
cs
lret
stos
stos
rorl
sbb
imul
shr
bound
notl
cltd
cmpsl
xor
cmp
insb
in
xchg
push
cmp
orl
pop
or
fwait
jbe
push
cld
sub
fnstcw
mov
dec
sahf
mov
cmp
mov
push
cs
movsb
jns
test
lods
xchg
lock
aas
repz
jle
inc
inc
jo
sub
addr16
aad
stc
loopne
repnz
mov
add
fistpl
flds
mov
repnz
out
adc
fidivrl
or
addr16
mov
fiadds
scas
jb
repz
pop
dec
push
push
test
inc
pop
orb
aam
movsb
dec
sub
mov
popf
test
dec
xchg
push
test
sub
enter
xor
loope
and
lods
fs
scas
and
mov
loopne
cmp
es
popa
add
and
aam
push
cmp
cmpl
scas
xlat
pop
fimuls
jmp
lret
ret
sub
push
sti
sub
movsb
cmp
negl
les
jmp
test
cmpsl
xor
notb
xchg
imul
jge
fsubs
cmp
lahf
mov
inc
in
outsb
mov
neg
mov
ret
add
shlb
shlb
sub
xchg
pop
push
rcr
and
jmp
daa
icebp
loopne
xchg
mov
dec
mov
push
es
jp
rcrb
sti
mov
dec
shl
fnstsw
inc
dec
jo
and
jbe
dec
loop
cli
int
xchg
cs
xlat
sbb
mov
add
or
repz
lret
loopne
fisubs
xor
insb
sti
mov
pop
repnz
scas
jbe
repz
popa
mov
andl
shll
xchg
pusha
scas
fstpt
test
ret
cmp
cmpsb
ja
and
adc
pop
test
out
jmp
jl
inc
xor
mov
cld
mov
add
jecxz
pop
je
stos
cmc
aam
mov
fwait
dec
ud0
and
and
jle
push
mov
std
xchg
or
stos
sbb
mov
mov
orl
sub
pop
mov
outsl
cmpxchg
mov
jns
das
mov
int3
xor
or
jbe
mov
loopne
cmpsb
xchg
loope
mov
dec
push
fisubs
xchg
lcall
je
adc
sub
test
dec
test
outsb
nop
lret
and
adc
inc
or
stc
inc
add
js
jecxz
sbb
ret
sarl
data16
ljmp
stos
das
in
cld
xchg
push
mov
int
pop
or
stos
cmp
and
or
out
jl
push
jns
test
popa
cvtpi2ps
dec
mov
je
lea
and
mov
mov
inc
loopne
stos
fldt
inc
in
es
fsubrl
out
xor
test
insl
xchg
xor
pusha
push
in
xchg
out
loope
or
push
sbb
imulb
leave
adc
in
hlt
and
xchg
push
ret
xor
xchg
lcall
mov
mov
aaa
lods
and
cmp
sbb
sbb
mov
negl
sahf
pop
cmp
adc
mov
add
push
xchg
dec
fwait
movsl
mov
int
es
fmul
cmpsb
testb
jnp
imul
cmp
or
adc
cmp
xor
movsl
fwait
js
push
rcrl
dec
imul
mov
enter
xchg
cmp
icebp
repnz
jno
mov
jecxz
out
and
mov
ss
sub
dec
push
cwtl
in
or
mov
push
sbbb
gs
test
pop
dec
cli
stc
imul
js
sub
int3
imul
and
stos
adc
cmp
xchg
jle
roll
jge
out
pop
mov
adc
out
es
inc
lock
mov
xlat
jmp
loope
stos
add
push
movsl
sub
stc
jge
add
mov
xor
sub
shl
repz
loopne
push
jo
inc
hlt
pop
cltd
sub
outsb
push
or
inc
pop
dec
mov
out
adc
sbb
enter
sub
adc
cmp
pop
movsb
jns
in
xor
outsl
shll
in
sub
in
push
add
repz
add
adc
and
mov
jmp
mov
mov
cmpsb
lds
and
sbb
pop
out
xor
stc
daa
or
xor
xor
xchg
adc
mov
fisttpll
arpl
lcall
dec
outsb
sbb
mov
test
shl
enter
dec
or
aad
and
sbb
pop
js
pop
adc
dec
cmp
fistpll
and
dec
cs
and
orl
xchg
pop
dec
mull
dec
cmp
cltd
jbe
insl
push
ret
cltd
loop
loop
dec
push
sub
pusha
popf
negl
sub
mov
sti
mov
rsqrtps
fbstp
inc
stc
push
aam
orb
pop
cli
test
or
jo
cmp
cmp
ffreep
cltd
aas
pop
imul
addr16
push
lock
jns
fcmovb
lods
out
shrb
dec
out
jmp
cmpsl
xchg
jmp
mov
sub
mov
pop
sahf
lret
dec
mov
pop
jns
pop
repnz
inc
sbb
and
mov
sub
fimull
stos
add
rclb
movsb
in
outsl
iret
jmp
out
inc
or
fsubrs
sbb
sub
lods
in
xor
out
mov
idivb
or
mov
in
add
jnp
push
enter
add
scas
outsb
test
pop
pop
and
imulb
xchg
xchg
adc
xor
xchg
jmp
shlb
enter
lods
out
adc
jo
cmp
movsb
sbb
adc
bound
in
popf
push
jl
mov
push
ret
add
movb
sarl
imul
or
mov
xor
and
adc
and
push
gs
test
fcmovnb
or
cmp
sub
xchg
inc
lret
xor
cmp
inc
mov
xchg
jmp
fmull
int
xchg
mov
mov
jo
clc
pop
mov
ss
push
std
pop
pusha
adc
sti
push
test
std
in
jl
ret
push
dec
int3
cwtl
mov
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
mov
inc
or
xchg
int
push
or
fstpl
xchg
frstor
jb
les
jecxz
gs
clc
rclb
rcll
aas
and
imul
sub
push
cld
sbb
mov
adc
lea
mov
test
mov
out
int
or
sub
int3
arpl
cmp
mov
xlat
pop
inc
loopne
pushf
lcall
sbb
add
std
pop
sbb
cltd
cltd
mov
pop
cmc
pop
movsl
mov
pop
push
pusha
js
test
inc
dec
popl
ljmp
jmp
andl
inc
sti
ret
push
dec
int3
adc
addr16
push
shrl
jnp
loope
leave
mov
push
push
mov
stc
jo
and
or
int
cs
xchg
loop
fiaddl
mov
xchg
hlt
mov
cmp
lea
cmc
mov
add
mov
push
in
es
test
cmp
push
mov
popa
jae
sub
xchg
xchg
daa
int3
jae
int3
and
mov
lock
popa
pop
inc
bound
mov
lret
aas
ficoms
les
or
xor
pop
sbb
pop
movups
add
out
popf
das
sbb
add
xchg
ds
xchg
mov
jae
ret
pinsrw
in
cmc
leave
test
mov
push
je
stos
and
insb
sub
fwait
adc
bound
int
fwait
push
mov
test
aaa
jne
outsb
fwait
add
fwait
dec
mov
call
repz
shll
lock
stos
sub
mov
inc
test
and
sub
lods
ljmp
adc
mov
ja
rorb
xor
pusha
xor
rcrb
push
fcmovb
and
pop
stc
lods
lods
adc
int
mov
add
inc
dec
or
sbb
mov
cmp
xchg
fwait
lret
fiadds
fstl
mov
jno
sbb
or
jl
lock
mov
scas
je
or
sbb
sbb
xor
rorb
cmp
insb
fcomps
inc
gs
mov
or
dec
and
shr
fucomp
mov
out
adc
push
inc
sahf
insl
lods
addr16
mov
add
push
sub
outsl
cs
jbe
xchg
adc
fmull
jo
push
adc
clc
jecxz
in
lret
sbb
lcall
inc
xchg
repnz
clc
mov
ds
adc
xor
inc
cmovnp
repz
push
lock
dec
sbb
push
cmp
dec
cmp
jbe
adcb
repz
push
stos
mov
ja
jae
pushf
mov
cmp
xchg
outsb
rcl
cld
cmpsb
lds
clc
popf
int
mov
mov
push
aaa
jmp
mov
jl
jge
mov
ljmp
jae
xor
jb
test
push
add
mov
fdivr
mov
pushf
jbe
in
stc
jae
jp
ds
movsl
lret
mov
dec
movsb
fsubl
sub
dec
sub
inc
fcomi
movsl
push
rol
mov
fnstcw
jp
les
sub
ja
xor
mov
rorb
int
cwtl
xlat
mov
dec
jmp
lahf
dec
cwtl
xlat
jns
hlt
into
call
push
mov
test
icebp
cli
mov
sub
push
ds
inc
jo
mov
xchg
sbb
cld
pop
mov
imul
pop
out
cmp
push
push
popa
clc
sub
aaa
lods
or
dec
jne
out
lods
imul
mov
data16
cmpsb
mov
push
dec
sahf
inc
xlat
arpl
lods
inc
cmp
in
lods
in
cmp
cmp
jl
stc
xor
and
jle
fs
xchg
add
adc
fwait
lock
out
popf
imul
in
and
outsb
and
insb
jg
lods
pop
dec
pop
bound
jbe
out
mov
je
inc
xchg
mov
or
inc
add
out
rclb
fldt
in
jnp
lods
insw
push
dec
push
pop
sti
loope
dec
and
or
mul
dec
sub
in
rcl
repz
lods
sbb
or
repnz
push
xor
push
out
je
add
cmc
or
idivl
xorl
sbb
inc
push
mov
pop
int
idivl
popf
mov
sub
mov
cmpsl
mov
subb
fwait
mov
out
mov
mov
dec
aaa
ds
lods
jne
rorl
pop
push
pop
loopne
test
sbb
cwtl
subb
and
cmp
jmp
std
sbb
xchg
push
inc
out
orl
or
nop
xchg
movsl
repnz
adc
and
push
adc
les
fcomps
mov
push
fcmovb
push
shll
sbb
pop
mov
sbbl
mull
mov
add
pop
fwait
pushf
jecxz
dec
shlb
sahf
insb
in
std
mov
sbb
pusha
out
mov
sbb
leave
lea
mov
jne
inc
leave
xor
nop
fisttpl
xchg
dec
mov
adc
movsb
ret
mov
jmp
add
data16
addl
push
push
pushf
mov
or
push
aaa
mov
pusha
in
stc
js
inc
test
sbb
imul
lods
mov
cltd
mov
xchg
sub
mov
ds
jns
pusha
dec
jo
cmp
push
in
xor
mov
mov
inc
xor
fwait
mov
pop
dec
jnp
iret
lret
push
ret
leave
xchg
dec
movsl
and
jb
jne
and
dec
imul
lahf
jns
dec
in
cmp
repz
xchg
bound
push
pop
sub
shlb
adc
xchg
push
stos
fldcw
pop
push
nop
test
repnz
movsl
mov
ljmp
push
test
repz
inc
icebp
and
pop
inc
sbb
enter
into
clc
add
mov
inc
pusha
js
push
push
in
xchg
dec
cmp
andb
sbb
jl
in
mov
add
jno
fldt
mov
sub
icebp
cwtl
flds
loop
daa
add
mov
add
or
cmp
clc
call
mov
sub
bound
inc
dec
jecxz
outsl
inc
sahf
sbb
cmp
negb
dec
lods
push
pushw
adc
mov
jns
mov
cmp
xor
or
push
or
adcb
cli
popf
fisubl
ljmp
push
jnp
mov
shlb
xchg
fstl
ja
daa
jle
add
fsubl
outsl
xlat
mov
test
jno
movsl
xor
fisttpll
xor
mov
sbb
dec
les
mov
jge
push
xor
xor
push
inc
fistps
rcll
mov
fnstcw
pushf
xor
dec
idiv
add
adc
and
push
xlat
loopne
inc
cmpsb
push
mov
stc
daa
cmpsl
sub
mov
fdecstp
mov
test
push
dec
movsl
pushf
ret
stos
lret
call
enter
dec
push
scas
addr16
push
mov
in
test
add
inc
lcall
sahf
xchg
xor
test
out
fsubr
fiaddl
lea
aas
mov
cltd
leave
jno
pusha
push
cmpb
je
fsubs
pop
pusha
jecxz
pop
roll
negb
mov
fcmovnbe
andb
mov
pop
jb
rol
insl
shlb
xchg
daa
pusha
movsb
mov
test
lret
push
gs
lock
gs
shlb
enter
add
sbb
shlb
fldl
outsb
dec
jmp
mov
mov
mov
mov
mov
or
mov
or
shl
jg
cs
movl
mov
mov
xchg
jns
push
pop
lahf
inc
or
ret
jne
orb
dec
lds
and
mulb
es
and
mov
mov
add
sbbl
outsl
xchg
pop
mov
add
xchg
cwtl
fsubr
icebp
and
xchg
jnp
insl
js
jmp
pop
inc
jecxz
pop
fimuls
sub
pusha
fmuls
lret
push
and
lahf
push
pop
jmp
aam
stos
dec
sbb
push
mov
jae
adc
sbb
or
negl
lea
xchg
and
cltd
pop
xor
dec
out
std
stos
or
pusha
aad
in
and
stos
cmp
inc
jge
scas
sbb
mov
sbb
push
mov
mov
pop
mov
outsl
or
add
imul
in
les
and
popa
lock
jmp
pusha
adc
je
outsl
sbb
fnstcw
dec
adc
mov
ret
sbb
jle
xor
or
mov
mov
dec
cmp
icebp
scas
sbb
jle
lret
and
mov
cmp
rcr
psllq
gs
movsl
jp
daa
sub
jmp
shrb
sbb
xchg
popa
push
inc
popa
mov
fs
int3
lahf
into
adc
adc
es
test
mov
in
push
push
std
mov
sub
pop
cltd
mov
push
inc
hlt
fs
nop
sub
add
mov
xor
insl
int
dec
inc
rclb
mov
mov
jnp
sub
icebp
xor
daa
lret
sahf
pushf
pushf
stc
push
sbb
fbstp
mov
cmp
inc
mov
add
decl
ret
es
lock
enter
setns
aad
add
dec
lds
xor
out
cmp
repz
jl
pop
xchg
push
sbb
and
clc
or
inc
pop
cmpb
lcall
std
dec
jbe
ja
add
push
jo
pushf
pusha
mov
xor
lret
mov
xor
cmc
mov
fsubl
adc
repnz
pop
and
stos
mov
shl
test
pop
mov
jle
and
ret
mov
test
and
xor
dec
xchg
mov
mov
inc
lods
sbb
fcmovb
xor
sub
aaa
leave
imul
push
adc
xchg
inc
sbb
xchg
ja
cli
mov
and
mov
jne
adc
repnz
jae
dec
cmpsl
jg
mov
ds
cld
dec
mov
adc
cmc
int3
adc
cmc
push
jp
ret
mov
xchg
mov
dec
push
or
xlat
and
mov
add
dec
sbb
fistpll
adc
mov
sub
jae
into
cmp
push
mov
ret
cs
leave
fidivrl
ret
mov
dec
stos
fwait
xchg
jp
xchg
shrb
scas
mov
sbb
cmp
test
cltd
mov
lret
push
movsb
inc
xor
scas
add
in
jle
mov
lret
inc
and
aad
outsl
add
cmp
pop
aas
rol
notl
mov
push
pop
jl
push
dec
shl
pop
mov
das
lret
add
push
sbb
testl
pop
pop
ret
inc
int
dec
ja
add
jns
inc
icebp
aam
dec
pushf
fcomp
lret
dec
jp
mov
cmp
jmp
dec
fidivrl
xor
rsm
mov
pop
clc
mov
sbb
mov
sbb
outsl
aam
mov
loopne
push
bnd
js
xlat
sbb
cmpsl
push
push
push
and
xor
ret
pop
sub
cld
xchg
xchg
pop
repnz
andb
jb
push
and
lods
fcom
xor
xor
jbe
ficompl
sbb
out
push
add
pop
jmp
rolb
or
sbbl
mov
push
loopne
aaa
mov
lret
sahf
xchg
mov
lret
jecxz
add
imul
pop
out
call
mov
sbb
and
das
movsb
xchg
pop
push
adc
std
cmpsl
pushf
dec
mov
fbstp
adc
and
xchg
jle
push
xchg
addr16
pop
or
xchg
jecxz
add
daa
pop
push
mov
hlt
bound
aam
xor
sub
adc
fnstcw
hlt
pushf
movsl
leave
jne
test
dec
out
mov
shlb
sub
movntps
cmp
sub
pop
push
and
pop
dec
ss
inc
outsb
sti
jnp
cmp
xchg
loope
loopne
ds
jnp
add
orb
adc
lods
mov
inc
inc
jo
xchg
pusha
cmp
jp
js
sub
shll
pusha
inc
mov
in
outsl
fsubl
add
mov
cld
fwait
mov
add
mov
jp
dec
mov
mov
sbb
sti
push
shr
xchg
out
lret
inc
adc
xchg
or
jo
xlat
imul
mov
stos
mov
xor
adc
in
inc
jae
outsb
stos
pop
adc
test
lock
movsb
aam
ret
inc
pop
cld
jle
clc
rorl
xchg
or
inc
stc
inc
pop
fs
movsb
sarl
insb
std
mov
stos
xchg
mov
push
xor
lods
ret
arpl
movsl
aad
out
add
popa
sahf
or
mov
test
push
sub
gs
adc
push
pop
adc
sub
adc
decb
repnz
sbb
xchg
or
jecxz
frstor
xor
adc
jae
mov
mov
popf
push
cmpsl
push
andl
cmpsb
in
data16
mov
xchg
pop
andl
and
jecxz
in
inc
sub
adc
inc
gs
out
mov
leave
lods
clc
add
dec
test
iret
lods
jb
scas
ficomps
push
sub
loopne
jbe
and
dec
push
inc
pop
sub
iret
test
sbb
sbb
jae
adc
out
out
jmp
call
xchg
cmp
rcl
cmc
sbb
fs
xor
shll
mov
in
out
jae
dec
scas
pop
or
pop
divb
int3
mov
add
sbb
movsb
mov
push
sbb
xor
jg
jmp
addr16
lods
add
lds
jno
xchg
jb
sti
scas
idivb
iretw
jb
jb
pop
xchg
jle
inc
fstpl
leave
lea
mov
mov
mov
cmp
add
push
in
test
mov
dec
stos
adc
scas
add
bound
inc
not
mov
sub
clc
dec
ret
mov
mov
scas
mov
push
lahf
add
jge
pushf
leave
inc
xchg
leave
mov
fcmovnb
rclb
scas
dec
inc
adc
dec
adc
dec
repnz
iret
push
jg
mov
imul
in
hlt
fcmovbe
cld
popf
das
xor
xchg
ljmp
shl
sub
fsubrs
movsb
or
pop
and
adcb
repz
pop
data16
std
or
pop
mov
scas
cmc
xchg
pop
pop
or
mov
sti
out
daa
jno
sub
adc
movsl
inc
out
inc
pop
push
in
aam
cmp
jnp
fnop
or
xchg
int
fidivs
sbb
add
cmc
iret
testl
or
in
xchg
adc
fsubrs
mov
and
lods
movsl
sarb
lret
lcall
lcall
jl
out
adc
outsb
add
mov
aaa
adc
out
mov
xlat
sbb
loop
cs
cmp
or
inc
jmp
testl
adc
xor
vpsubd
aam
jmp
lods
jb
sbb
sub
sub
mov
test
lcall
ljmp
inc
mov
repz
gs
leave
out
add
push
dec
in
int3
sub
inc
dec
repz
jl
cmp
jl
pop
adc
add
inc
jecxz
or
push
cltd
lret
add
scas
movsb
add
inc
mov
popl
mov
sbb
movsl
ljmp
push
arpl
js
mov
xchg
xchg
xchg
dec
lea
sti
stc
insl
fidivrs
cmp
mov
call
jg
jge
mov
data16
cmp
cmp
push
movsb
imul
mov
mov
aam
fnsave
addr16
lret
outsl
mov
xor
push
xchg
data16
fstp
lods
clc
sbb
gs
or
stos
and
shl
xor
mov
ss
mov
and
sahf
or
inc
pop
gs
mov
fdivl
out
push
add
insl
sub
cmc
cli
mov
pop
or
iret
and
sar
inc
cmp
js
dec
xchg
adc
aaa
and
mov
push
gs
ljmp
test
cmp
loope
sar
scas
push
mov
jno
mov
push
dec
orl
mov
push
int
and
into
into
xchg
into
dec
fcoml
add
dec
mov
lea
xchg
add
pop
rol
ljmp
ljmp
jecxz
add
or
adc
outsb
push
jmp
repz
lea
das
mov
ret
inc
sti
xlat
shll
mov
xchg
daa
xchg
sub
pop
xchg
mov
adc
sub
je
aas
cmp
xor
fstps
in
sub
inc
mov
insl
loop
push
push
push
sub
dec
js
add
or
sub
adc
ljmp
das
xchg
sahf
cmp
jmp
sub
test
sbb
mov
and
dec
or
mov
jge
aas
jmp
push
ret
clc
inc
sbb
dec
xchg
dec
sub
pop
in
shlb
dec
jle
xchg
mov
pusha
shlb
cmc
shrb
lds
adc
lret
pop
mov
es
fisubs
scas
dec
and
lea
aad
cmpsl
imul
lcall
pmullw
out
xchg
xchg
rcll
das
cmp
out
mov
inc
sbb
es
in
jmp
fmull
jp
gs
sbb
push
or
es
pop
loopne
lds
mov
outsb
mov
add
mov
mov
test
stos
cs
xor
cwtl
out
fistpl
xchg
sti
test
and
pusha
cld
xor
insl
popf
and
add
in
lock
test
jmp
mov
sbb
out
add
addl
cld
fdivl
cmp
push
shrl
add
aaa
cs
mov
mov
fs
clc
inc
or
out
into
mov
clc
loope
mov
adcl
daa
mov
sbb
cli
mov
stos
mov
push
jb
mov
cmp
dec
sarl
insl
out
lds
push
push
loope
cmp
ja
movsb
sub
shlb
jl
stos
jne
enter
mov
pop
push
sbb
mov
sbb
dec
lahf
add
lods
adc
or
fidivrl
gs
or
jae
sti
fstpt
jne
loope
stc
add
cld
xchg
loope
js
cmp
cmpsb
loop
or
lea
sbb
mov
xchg
sbb
jp
cmp
test
imul
imul
aam
mov
icebp
call
xchg
pop
shr
mov
and
out
dec
push
popf
add
xchg
out
inc
outsl
push
dec
loope
es
test
inc
in
je
and
dec
shr
shl
mov
push
xlat
lahf
insl
insl
or
dec
cmp
mov
arpl
and
mov
add
movsl
or
jno
clc
mov
ss
repz
fstl
pop
push
jne
aam
sub
aas
or
les
push
mov
insl
lock
sub
sbb
push
xchg
and
addl
adc
add
enter
outsb
dec
aas
mov
jne
jae
test
out
pop
sub
and
jmp
je
into
cld
or
inc
stos
addr16
ret
push
lahf
lahf
fmulp
cmp
sbb
lret
je
cmpsl
or
or
xor
adc
decb
iret
mull
stos
mov
mov
les
inc
or
sbb
inc
and
scas
jge
cmp
add
or
push
subl
addl
add
xlat
push
out
jb
dec
inc
adc
sbb
push
lret
test
pop
out
shlb
inc
jnp
inc
sbb
lods
mov
popa
and
mov
popa
pop
gs
cmp
loope
cmp
xor
in
xchg
insb
icebp
inc
mov
or
outsl
sbb
or
cmp
push
adc
mov
adc
into
jns
push
mov
mov
mov
xlat
jle
mov
out
add
sub
mov
loop
and
sahf
mov
pop
dec
dec
mov
add
in
or
adc
xchg
loop
fistpl
cmp
andb
std
or
cmp
jmp
adc
daa
cld
mov
imul
inc
lods
aas
outsb
ss
stos
or
and
ret
dec
testb
sub
std
jmp
dec
mov
in
mov
jl
mov
sub
mov
cmpsb
jg
cmc
inc
adc
shl
js
enter
popf
in
jmp
inc
sub
cs
mov
cmp
enter
inc
pop
jbe
xor
or
inc
sbb
dec
mov
test
xchg
jne
push
xor
scas
push
jl
xchg
cmp
sahf
leave
sbb
fmul
call
xor
xor
insl
dec
dec
mov
mov
jae
repz
or
push
jg
add
ds
jo
push
gs
sbb
rclb
mov
jb
or
add
sbb
pop
add
xor
xchg
je
xchg
movsb
arpl
pop
pop
xchg
xchg
sbb
jbe
lds
or
nop
rcrb
xchg
cmp
jne
jnp
jb
scas
cmp
mov
repz
out
xor
push
push
mov
xchg
call
fs
fidivrl
bound
pushf
pop
adc
inc
mov
out
jae
cmp
jle
movsb
push
iret
jl
mov
test
clc
push
scas
xchg
xor
pop
xchg
orb
faddl
adcl
mov
mov
cmp
cld
fs
jp
sub
pop
jne
xchg
sub
or
lods
pop
jmp
gs
sub
roll
mov
adc
imul
mov
shr
lret
add
or
sbb
sbb
inc
out
xor
test
push
aad
std
dec
mov
pop
sub
or
push
insl
outsb
mov
je
inc
jns
sub
cmp
out
or
mov
loop
push
mov
pop
cmpsb
push
cmp
jnp
sub
pop
pop
in
cli
mov
repnz
cmp
ret
rcrb
or
ud1
dec
fnclex
mov
jno
sub
lock
loope
je
into
stos
pusha
dec
orb
jmp
mov
mov
es
push
lea
cmpsb
push
test
mov
adc
daa
pop
cmpsb
pusha
inc
or
and
xchg
xchg
sub
push
nop
ret
add
mov
mov
mov
mov
xchg
xor
push
sub
cmp
mov
mov
adc
lods
inc
stos
ja
lcall
pop
jecxz
mov
iret
cmpsb
les
and
and
mov
inc
lea
loope
jmp
and
sub
in
stos
and
mov
clc
das
jns
into
push
test
and
cmp
jo
pop
je
negl
lods
ljmp
push
gs
mov
jecxz
jb
outsl
jecxz
sbb
fimull
or
pusha
cmpsb
add
insb
pop
jb
cltd
mov
cmp
int
sub
cmp
xchg
inc
dec
push
les
cs
mov
or
mov
cmc
inc
call
in
xor
inc
ljmp
adc
push
cmp
cmp
fwait
cmp
in
js
and
lret
cltd
daa
adc
cmp
in
testl
mov
pushf
fwait
xchg
push
mov
or
dec
xlat
dec
sub
out
dec
xor
out
daa
xchg
scas
in
push
or
iret
insb
and
lock
faddl
and
mov
test
dec
imul
jmp
mov
insl
out
push
scas
loopne
adc
hlt
aam
xchg
mov
pusha
cmpsl
xchg
sarl
xchg
xchg
mov
push
out
sub
or
pusha
sbb
cltd
sub
add
or
mov
sahf
mov
and
cmpsl
pop
ficomps
jae
orl
imul
adc
inc
adc
xchg
sahf
mov
pop
je
inc
cli
jl
outsb
push
mov
cmp
stos
jg
inc
stos
add
jmp
sbb
jnp
cltd
cli
inc
fldenv
fldenv
popf
dec
loopne
mov
iret
cld
or
into
enter
andl
imul
xchg
andb
push
sarl
sub
pop
aaa
push
jbe
out
mov
adc
push
cmp
jne
stos
stos
cmpsl
or
inc
jae
inc
int3
lahf
in
jb,pn
xor
in
icebp
mov
jbe
jmp
stc
cmc
rolb
sbb
hlt
fstps
or
repnz
mov
movsb
mov
mov
lret
loope
inc
dec
or
push
ljmp
dec
test
dec
sbb
sarl
xchg
sbbl
scas
jl
pop
rcrb
nop
iret
int
pop
stos
fbstp
pop
xchg
pop
pusha
aad
scas
mov
inc
sub
and
xor
fistps
aas
pop
cmp
mov
and
sub
int3
pop
push
int3
sub
ffreep
xlat
test
adc
push
fstps
imul
std
in
mov
sbb
sbb
sub
mov
sub
ret
mov
jg
movsb
pop
in
lock
arpl
xchg
jl
xchg
push
jnp
mov
ljmpw
repnz
out
jno
sbbb
push
cli
cmpsl
push
clc
aaa
pop
pop
cmpb
jle
mov
sbb
mov
mov
cmp
ss
jbe
imul
scas
xchg
and
pop
xor
fmul
sub
sbb
xchg
stos
dec
pop
mov
or
and
sub
xor
fadds
add
jb
mov
gs
das
int
mov
or
je
sub
sbb
push
add
xor
mov
push
stos
jge
lahf
adc
movsl
xor
test
ss
or
xchg
or
clc
js
xchg
lock
jge
scas
xor
adc
push
std
cs
push
test
shrl
pusha
es
dec
xchg
sub
fs
in
mov
pop
ds
in
les
mov
mov
fisttps
sbb
xor
testb
adc
mov
add
lea
sbb
xor
mov
dec
jle
repz
mov
or
sbb
sbb
sub
pop
inc
and
lods
mov
cmp
mov
aas
dec
mov
cmpsb
ret
test
push
addr16
fucomip
gs
leave
adc
or
xchg
or
fnsave
adc
in
in
test
lods
sbb
mov
or
adc
push
insb
sar
and
lcall
sbb
xor
add
aaa
xchg
add
push
cmp
loope
loopne
or
jbe
add
mov
mov
dec
push
xlat
loopne
fsubrl
or
call
in
jle
or
int3
pop
shr
jbe
dec
mov
out
scas
mov
mov
js
je
into
orl
dec
cmp
icebp
mov
int3
push
std
test
in
cli
fidivs
pop
jns
inc
or
jecxz
test
addr16
dec
mov
cmpsl
fsubl
cmp
or
repnz
push
inc
mov
mov
sbb
sbb
xor
fbstp
cld
mov
lret
push
mov
popf
xchg
fpatan
test
add
jae
sub
lcall
mov
inc
insl
fidivs
or
js
jle
ret
stc
jno
ret
das
lret
mov
dec
pop
arpl
xor
sub
and
lods
xchg
lock
and
add
dec
add
mov
punpckldq
or
inc
cs
mov
mov
inc
sbb
stc
add
pop
movsb
mov
rcr
fcomp
xchg
jbe,pn
ljmp
mov
ljmp
bound
pop
outsl
fildll
push
sbb
jge
xor
add
imul
xor
iret
sub
jmp
xor
es
mov
adc
and
jmp
mov
xchg
ret
cmpsl
clc
pop
jnp
or
fadds
outsb
jne
je
jb
movsb
sub
ret
test
aad
ret
lds
sub
push
pop
ret
roll
pop
call
or
das
aaa
dec
cmp
xchg
cltd
adc
decb
inc
addr16
adc
inc
fisttps
test
cmp
dec
hlt
cs
lahf
mov
or
or
and
jmp
sbbl
lods
mov
dec
bound
add
loop
xchg
mov
mov
jle
xchg
jg
fwait
xor
rcrb
fcomi
dec
push
inc
jb
or
pop
or
andl
loopne
jne
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
pushf
outsb
jb
add
loop
push
push
mov
lock
mov
xchg
xor
xchg
push
push
lret
or
xchg
xor
mov
push
aam
push
sbb
and
test
out
insb
icebp
sub
dec
push
mov
add
repz
lret
xchg
dec
add
insl
and
xchg
sub
sub
dec
adc
push
add
sbb
mov
cmp
aam
xor
out
xor
stos
std
orb
dec
ds
fstl
andl
mov
stc
jb
aad
jb
cmp
loopne
lahf
jg
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
