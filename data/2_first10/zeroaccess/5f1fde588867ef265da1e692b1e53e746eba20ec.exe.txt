push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
popf
mov
jl
jle
jl
xlat
cmp
ffree
pop
push
add
pop
add
xor
ret
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
push
inc
adc
repnz
leave
jp
push
sbb
sub
addl
and
idivb
shlb
call
jae
aam
ss
jmp
out
mov
push
test
shrb
sbb
mov
dec
jle
push
mov
jno
pop
lcall
or
sbb
std
out
out
xor
stc
loopne
mov
or
sbb
adc
adc
mov
ret
adc
dec
inc
push
dec
xchg
shr
into
dec
add
daa
clc
inc
es
mov
call
sahf
es
xchg
cmp
out
push
cs
jno
or
lods
into
fistpll
pop
outsl
dec
push
divl
addsubpd
inc
dec
iret
in
push
loopne
rcll
lcall
in
fidivs
incb
inc
inc
push
add
mov
fstpt
mov
aaa
imul
mov
fcmovnbe
mov
ljmp
pop
push
jecxz
insl
into
add
xchg
sub
movsb
mov
mov
and
stos
fimull
xchg
push
add
popa
pop
jno
pop
test
add
fiadds
jl
movl
sbb
xchg
jo
xchg
xchg
pop
out
mov
pop
add
xchg
jge
dec
lods
ljmp
xchg
push
pop
jb
outsb
sbb
push
popa
dec
je
dec
mov
out
std
lret
jnp
adc
cmpsl
pushf
movsb
mov
mov
mov
adc
ss
fmuls
fucom
jmp
mov
movsl
jmp
mov
and
data16
leave
adc
dec
cmp
adc
push
popa
mov
loopne
push
leave
add
leave
inc
shlb
push
dec
cmc
lahf
push
clc
repz
fs
loopne
mov
mov
lea
lret
cli
push
mov
xor
jle
addl
pop
jmp
or
add
mov
subb
inc
or
adc
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
add
in
pop
addr16
jl
jle
jl
imul
repnz
cli
ljmp
int3
imul
push
xor
test
xor
mov
xchg
iret
imul
cltd
ffree
mull
and
and
jns
mov
ja
mov
jo
pop
and
aas
jne
push
test
mov
mov
sub
or
mov
xchg
cmpsl
mov
fimull
inc
cmpsl
ds
jl
pop
je
aaa
sbb
dec
cmpsl
xor
cli
sbb
fwait
sbb
and
push
call
inc
insb
imul
and
mov
mov
ror
cli
sub
push
mov
je
lcall
push
popf
pop
and
sub
push
xor
xlat
lds
push
push
adc
add
cwtl
push
adc
push
adc
cmp
and
aad
jnp
in
popa
inc
xor
mov
push
or
pop
jae
mov
ficoml
orl
fsubl
mov
aas
dec
push
nop
jns
lret
mov
mov
mov
pop
inc
fidivl
js
sti
inc
sbb
imull
loope
adc
andl
jno
rorl
mov
add
pop
rclb
test
mov
js
mov
sub
sbb
push
push
or
jo
sub
out
in
or
adc
mov
inc
inc
nop
pop
rcl
scas
adc
push
int3
or
cmp
pop
int3
push
adc
mov
mov
ss
push
std
xor
icebp
push
cmp
mov
mov
cmp
and
mov
popf
sbb
clc
mov
jae
pop
inc
sub
mov
insb
stos
cmpsb
mov
inc
insb
pop
push
frstor
or
ficompl
mull
mov
stos
jae
movsb
fidivl
lods
stos
dec
dec
test
pop
or
daa
pop
jne
inc
subl
mov
and
pop
lret
rorb
jne
rolb
inc
mov
dec
pushl
out
scas
xchg
add
leave
dec
js
dec
or
adc
mov
imul
gs
cwtl
xchg
rorb
mov
insb
jae
iret
js
lea
scas
inc
insl
sti
add
outsb
mov
in
stos
inc
sti
mov
mov
jmp
push
push
jo
iret
xchg
test
adc
lods
cmpsb
mov
int
arpl
movsl
inc
das
inc
and
inc
xchg
sub
or
dec
push
lods
rorl
inc
jp
xchg
jl
or
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
loopne
xor
dec
jnp
jl
jle
jl
out
pop
andb
scas
and
jae
dec
test
mov
mov
test
mov
cmp
sbb
inc
mov
xlat
push
mov
fs
cmpsl
jnp
das
cmp
and
push
push
jmp
pop
js
mov
outsl
in
pop
xor
into
cmp
inc
fwait
sbb
inc
nop
sub
sbb
xchg
dec
clc
repz
jmp
movsl
decb
int3
fld
push
rorb
aaa
add
xchg
popl
mov
les
mov
divl
adc
imul
jp
mov
push
icebp
mov
cmp
mov
add
mov
adc
pop
pop
test
xchg
and
jl
fcoms
sub
das
xchg
roll
sti
ja
sub
out
movsl
push
adc
mov
cmp
repz
fisubl
nop
mov
or
ret
inc
in
mov
xor
out
fwait
popa
std
push
div
subl
std
inc
add
stos
sbb
dec
popf
push
clc
cmpb
ret
jg
push
je
jae
cmp
cmpl
xlat
push
jne
mov
xorb
cmpl
outsl
jmp
rcrb
je
mov
imul
lds
or
sub
pop
mov
push
sahf
scas
mov
ss
inc
push
repnz
movl
ss
push
jbe
jnp
enter
fstpt
aam
out
scas
jbe
or
cli
mov
mov
mov
outsb
or
adc
test
xor
cld
ljmp
pusha
std
lret
dec
jge
adc
lea
mov
out
xorb
rolb
shlb
gs
mov
out
insl
mov
inc
std
inc
fistl
fldt
lods
mov
outsl
dec
xor
stos
sahf
jge
sub
adc
loope
lods
icebp
clc
out
arpl
test
in
aam
sbbb
shrl
and
inc
shlb
dec
shr
and
fnstsw
aaa
popa
insb
pop
test
clc
out
sbb
cld
fisubs
dec
out
aad
mov
sbb
and
popa
mov
fsub
mov
popl
adc
scas
cld
mov
jbe
push
xor
fisubrs
test
pusha
jns
pop
lds
gs
movsb
cmp
xor
arpl
iret
frstor
push
inc
push
pop
sbb
in
add
repnz
push
out
mov
cli
jb
and
xor
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
insl
xor
mov
lea
test
ds
push
je
inc
loopne
pop
hlt
pop
jg
and
xchg
rcr
inc
add
push
sub
cli
js
xchg
sbb
sbb
and
aam
adc
daa
dec
or
lea
int
add
fstpl
pushf
insl
pop
and
shll
xchg
xchg
imul
stc
fildl
jne
xchg
or
pop
call
sbb
mov
int3
xchg
popf
pop
dec
mov
push
dec
sbb
imul
sub
mov
adc
cmp
imul
mov
fdivrs
dec
sbb
std
cmp
jle
std
scas
cs
adc
arpl
mov
xchg
or
and
mov
in
movsl
je
jge
sbb
outsl
int3
and
das
call
jns
icebp
sub
adc
enter
dec
pop
sbb
insl
sub
fs
imul
icebp
lock
sbbb
sbb
les
pop
je
mov
popf
push
in
ja
and
and
insl
add
push
lock
mov
push
xchg
push
mov
xchg
add
cmp
out
push
jo
push
jb
mov
pop
sbb
das
cld
pop
push
mov
jl
fdivs
xor
push
mov
mov
jl
in
cmp
and
imul
push
outsl
int3
dec
xchg
clc
sub
add
inc
push
or
jne
jmp
mov
insb
loop
cmpb
xor
pop
cli
xchg
cmp
dec
movsl
adc
aaa
sub
shlb
cltd
sbb
pop
jge
cwtl
lret
inc
dec
and
out
fstp
xor
sbb
adc
cltd
xchg
pop
mov
in
sti
xchg
cli
outsl
stos
rorb
sub
xchg
pop
mov
pop
shl
dec
jge
and
mov
clc
inc
adc
pop
mov
lahf
add
ror
jb
pusha
xchg
inc
std
test
mov
jp
loope
sub
dec
mov
cmp
cmc
sbb
fld
jp
mov
ret
loope
cld
aad
outsb
rcrl
fisubl
test
rcr
fsubs
mov
pop
inc
add
mov
jnp
orl
mov
lock
mov
adc
out
cwtl
lret
cmp
ret
arpl
dec
js
js
call
repz
ret
cmp
ds
mov
mov
jns
or
pop
mov
jge
lret
int
and
adc
fcomps
pop
and
inc
mov
ljmp
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
or
addr16
jl
sbb
dec
fbld
mov
sbb
jbe
dec
pop
push
jno
adcb
mov
or
mov
xchg
out
pop
sub
sbb
xchg
js
rorb
inc
insb
insl
jecxz
rclb
leave
sbb
lahf
sbb
insl
fstpt
mov
push
dec
sahf
neg
cwtl
pop
inc
push
shr
mov
bound
mov
pop
cli
push
sbb
jp
sub
pop
or
iret
jno
dec
push
pop
jmp
fcompl
push
xor
cmpb
mov
jp
fsubr
lods
lcall
push
popf
loop
outsb
scas
test
vpsllq
mov
dec
repz
dec
inc
rorb
adc
outsl
fiaddl
sbb
test
mov
cwtl
rcrl
mov
loop
adc
dec
dec
daa
fwait
mov
adc
mov
ret
inc
aaa
gs
sub
cmp
mov
cmp
sbb
pop
cwtl
mov
or
and
or
arpl
mov
sbb
orb
rolb
jns
insb
mov
mov
hlt
mov
ret
push
mov
add
jp
cmp
mov
fnsave
pop
pop
ss
and
jne
inc
push
sub
or
js
xchg
sub
fnstenv
mov
pop
jmp
lahf
ret
dec
inc
mov
mov
inc
or
decb
in
mov
pop
rcl
sahf
inc
sbb
add
push
add
inc
cmp
cs
jbe,pn
je
push
cwtl
popf
add
into
nop
adc
mov
loope
nop
or
in
jno
movsl
pushf
push
or
pop
in
int
shlb
mov
call
roll
add
sbb
sub
sub
mov
mov
data16
add
aaa
loope
popf
jae
cs
push
fimuls
cmpsl
clc
aas
es
or
dec
iret
jl
cmc
sbb
js
imul
pop
fwait
push
xor
pop
push
or
aaa
lods
loop
mov
loop
jge
dec
in
inc
push
cmp
lods
xchg
sahf
and
jge
js
sti
call
mov
pop
dec
cmpb
loopne
cld
in
xchg
add
mov
add
xchg
xchg
out
jb
adc
jno
xor
outsl
push
aad
push
cwtl
loopne
add
inc
lret
nop
push
in
rcrb
leave
sbb
mov
jmp
sti
adc
mov
cmp
gs
data16
insb
cmpl
add
mov
pop
ss
jl
ret
xchg
jb
inc
ds
int
int
test
dec
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
or
fcomps
je
lar
lods
sub
mov
int
mov
jle
xchg
and
ret
in
dec
jle
push
push
add
dec
test
vmovshdup
fistl
inc
pop
mov
mov
jb
sub
scas
test
jp
xchg
and
mov
add
push
mov
repnz
shlb
jl
lods
cs
pop
add
popf
ret
mov
inc
xchg
sbb
cmp
add
fcmovu
push
orb
jg
mov
mov
aam
dec
jecxz
aad
fistps
jne
movsbl
in
lock
xor
rolb
outsb
cmpsl
daa
or
ljmp
sub
jecxz
push
fsubp
les
mov
jbe
cs
gs
filds
add
imul
addb
das
pop
sbb
push
or
repz
fstpt
mov
dec
inc
cmpsb
xor
sbb
arpl
stos
insl
sbb
push
push
jmp
and
lret
cli
fnstcw
mov
dec
ror
cmp
inc
jo
jnp
jmp
hlt
push
cwtl
cmp
adc
adc
pop
movsb
repz
push
and
adc
divl
das
jl
mov
pop
mov
mov
loope
mov
dec
sbb
mov
cld
cmc
loopne
lods
popa
jns
mov
xor
adc
sbb
xor
shr
xor
nop
std
pop
xchg
add
fucomip
inc
jno
int3
cltd
mov
stos
lods
add
mov
fcoms
pop
into
sbb
jae
insl
cmpl
pop
push
adc
mov
fstps
sub
shlw
mov
ljmp
movl
xchg
icebp
push
addl
ljmp
push
mull
mov
js
jbe
popa
pop
or
cmp
cmp
popa
nop
rcrl
xchg
lods
mov
mov
inc
loope
pop
stc
adc
and
es
fistl
int
daa
mov
jae
mov
hlt
stos
and
je
push
xor
xor
aam
iret
out
mov
mov
mov
test
xchg
lcall
mov
jbe
add
jecxz
mov
sbbl
scas
fbstp
mov
icebp
out
cmp
es
mov
lcall
xor
sub
push
or
notl
fidivl
dec
enter
pop
jne
inc
sbb
dec
aam
sbb
nop
xor
lea
mov
mov
cmp
jmp
mov
jne
adcb
xchg
insb
jge
ljmp
jl
imul
mov
mov
movsl
cmp
xchg
pop
ret
sbb
pop
stos
dec
push
or
repnz
cli
push
fstl
imul
cmp
nop
lock
mov
lcall
pop
lea
jmp
insl
xchg
imull
sbb
pop
sub
div
rcr
rcrl
popa
fadds
pop
addb
enter
push
jg
jg
addr16
out
jae
ret
xchg
pop
adc
push
fisttpll
push
mov
roll
addr16
hlt
sbb
mov
call
cmpsb
ss
mov
dec
movsl
sbb
icebp
loop
mov
outsl
in
push
mov
and
push
cvtpi2ps
add
or
mov
pusha
pop
test
test
mov
jecxz
cmpsl
xor
jnp
add
push
daa
sbb
arpl
daa
add
shrl
int
lcall
mov
insb
ret
ror
add
sbb
cmpsb
push
pusha
xorl
adc
pop
sbb
lock
imul
loope
mov
fwait
adc
sbb
hlt
push
push
adc
clc
je
imul
sub
push
aam
mov
pop
mov
loopne
leave
enter
sbb
mov
cwtl
add
sbb
xchg
test
pop
bound
mov
cmp
jae
push
pusha
xchg
shll
xchg
bound
xor
mov
mov
in
out
push
sbb
xorl
mov
mov
sbb
jl
daa
xchg
push
pop
or
jae
lcall
test
xchg
repz
or
xchg
popf
movsl
add
fcomip
mov
popa
sub
icebp
xor
cli
push
test
add
sub
inc
add
cmp
xchg
in
sub
repnz
jnp
jo
dec
xor
enter
pushf
lahf
std
jnp
lahf
xchg
ja
in
dec
lret
sub
cmp
rcr
or
and
bound
movsl
ds
add
mov
adc
cmpsb
enter
cmp
sub
mov
lock
movsb
sub
or
push
mov
pop
cmpsb
jbe
in
xchg
push
adc
loope
push
inc
mov
and
js
cwtl
mov
and
arpl
jl
mov
andl
and
xorl
adc
pop
iret
loope
mov
data16
out
mov
sub
pop
shr
mull
xchg
mov
jmp
add
js
js
jnp
xor
sahf
dec
inc
adc
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
pop
nop
cwtl
jg
or
jle
jl
mov
loopne
outsb
mov
jb
int
add
dec
jnp
cvtdq2ps
inc
loope
mov
or
mov
in
mov
mov
mov
and
rcrb
notb
add
xchg
cmp
out
stos
fwait
shrb
mov
xchg
arpl
sub
inc
mov
frstor
jae
iret
loop
dec
in
push
mov
sub
in
add
xchg
out
mov
xor
push
aas
loope
in
cmpsl
cmp
into
and
add
jg
and
outsb
cmp
repnz
and
sahf
jnp
and
shr
pop
int3
and
xchg
hlt
cmp
push
not
jnp
mov
adc
sub
shl
cmp
in
fstpt
cmp
rcrb
and
xor
or
hlt
mov
pusha
push
mov
inc
repz
sub
dec
mov
rol
int3
call
mov
js
jne
mov
pop
cmp
push
inc
xchg
and
jo
out
mov
jmp
cmp
test
mov
push
insl
add
cmp
push
sti
subl
sti
cmp
and
or
lahf
jmp
fsubrp
or
ljmp
mov
push
add
sub
inc
fidivs
ja
dec
add
stos
insl
and
mov
dec
stc
dec
xchg
lcall
jg
pop
sahf
jle
and
std
out
adc
dec
sbb
leave
pop
roll
cmp
lds
adc
or
push
xchg
sub
sub
jecxz
mov
sub
push
push
jmp
xchg
push
out
mov
shll
movsb
nop
in
divps
cmp
pop
ds
xchg
cli
xchg
mov
test
inc
adc
mov
xor
cmpsb
add
sahf
and
jb
xchg
xor
loopnew
push
push
and
negl
out
inc
xor
hlt
in
push
pushf
popa
sbb
repz
or
jg
adc
pop
xchg
sbb
sbb
mov
nop
sbb
add
lods
js
sub
adc
mov
adc
mov
shlb
test
js
aaa
subl
cltd
insb
push
push
fldt
mov
pop
mov
ret
insl
adc
pop
mov
jo
add
adc
sbb
push
mov
mov
xor
or
orl
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
iret
inc
pushf
sbb
adc
jl
and
mov
outsl
push
fwait
mov
sbb
mov
stc
outsl
push
mov
xchg
push
xchg
aad
adc
ja
repz
dec
aam
jo
test
icebp
pop
adc
daa
xlat
xor
fisttps
fsubp
mov
ds
or
or
pop
rcrb
push
inc
popa
pop
test
stc
sub
cli
jmp
pop
mov
bound
sahf
push
jp
andl
movsb
push
jecxz
inc
inc
cmp
cwtl
leave
sahf
sub
xchg
cmpsb
mov
mov
pop
jg
loope
outsb
dec
stc
inc
jl
push
mov
movsb
je
iret
mov
fidivrs
pop
movsb
movsb
jecxz
sbb
dec
dec
cmp
aas
or
cmp
inc
mov
bound
inc
loope
fs
mov
push
ret
ss
lods
add
cmpsb
clc
call
loope
stos
pop
out
push
fistl
dec
fdivl
je
loop
add
and
insb
or
jne
pop
mov
push
and
mov
xor
sub
pop
ja
data16
xchg
sbb
mov
cmpsl
outsb
push
fiaddl
mov
pop
loopne
sub
inc
jge
push
aad
into
imul
mov
or
popa
subb
jbe
outsl
jl
pop
daa
jl
cwtl
cmpsl
mov
mov
in
hlt
loopne
ds
enter
jo
mov
rorb
lods
mov
xor
adc
push
jbe
dec
lahf
pop
fs
cmc
mov
jno
jmp
xchg
jmp
and
sbb
adc
and
or
add
jmp
mov
mov
and
dec
sub
xchg
push
cltd
fwait
mov
cmp
cmpsb
pop
xor
jns
xor
ret
es
and
or
sbb
sbb
out
arpl
fs
cmp
sbb
jecxz
lea
dec
in
and
fdiv
mov
lods
testb
adc
sbb
adc
lds
outsl
mov
adc
xchg
pop
sub
ret
pop
sbb
cmpps
cmp
incb
rcrl
outsb
nop
sub
adc
hlt
out
sbb
mov
in
fnop
inc
mov
xchg
push
enter
xor
cmp
xchg
into
jp
push
scas
faddl
out
mov
mov
fisubl
mov
gs
and
and
test
xchg
xorl
push
test
movsb
addb
inc
sub
mov
push
mov
jno
addl
jne
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
and
das
push
jl
addr16
jl
das
jae
shlb
sti
sbb
mov
mov
testl
lahf
pop
fistpll
mov
repnz
out
or
ljmp
mov
inc
ds
cld
loopne
dec
inc
push
push
enter
aad
dec
std
lds
push
inc
or
pop
add
add
lods
mov
or
push
daa
sub
ret
add
pop
in
add
das
test
aam
inc
loop
sahf
addr16
decl
push
jnp
inc
cli
test
dec
or
xor
lea
lcall
and
adc
pop
dec
test
mov
sub
int
gs
sub
test
jg
mov
daa
jnp
or
addr16
aaa
mov
movsb
mov
mov
adc
inc
mov
test
mov
jge
cmc
or
jecxz
out
mov
inc
mov
mov
roll
push
ds
push
inc
dec
sbb
add
popa
test
jmp
mov
scas
mov
push
call
fidivl
fsubrs
out
out
icebp
imul
mov
jle
cltd
sbb
js
pop
mov
push
xor
push
bnd
idivl
or
pop
js
mov
jmp
sub
negb
bound
jae
pop
pop
ficoms
and
cwtl
sub
mov
ds
adc
dec
ret
aas
lods
fwait
fisttpl
mov
fucomip
and
stc
aas
js
pop
test
out
mov
xchg
pop
dec
popf
jno
mov
mov
or
sbb
aam
mov
dec
stos
adc
mov
adc
lret
in
xor
dec
rolb
jne
pop
mov
add
inc
sbb
in
lcallw
inc
loope
test
rorl
cmp
mov
clc
ret
imul
subl
int3
nop
fs
out
cmp
aad
in
jo
scas
jge
pop
fstps
jns
adc
mov
push
inc
call
lret
cli
xlat
dec
ret
dec
in
mov
pop
pop
cmp
sbb
and
je
bound
sub
cmc
fidivrl
test
into
lods
loop
into
or
xchg
add
fs
xlat
in
testb
xchg
out
jge
pop
mov
test
xchg
repnz
mov
lds
call
std
stos
pop
jo
jb
imul
jle
int
or
cmp
fnstcw
adc
push
test
ret
lods
mov
out
or
mov
cmp
pop
insb
jo
scas
loop
mov
or
in
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
and
adc
jg
jl
add
call
cmp
mov
pop
shlb
xor
xchg
adc
loop
dec
add
add
pop
jl
insl
or
popa
inc
jge
dec
fwait
pop
push
mov
and
mov
mov
xchg
repnz
sahf
imul
jne
jmp
rolb
das
ds
mov
jb
ret
movsl
pop
mov
dec
into
movl
jo
push
loope
or
mov
je
push
fcomps
insl
or
idivl
mov
pop
repz
fidivl
adc
test
shr
sbb
ret
inc
pop
xor
shr
out
in
sbb
jle
mov
and
andl
jb
sbb
xlat
xor
sub
inc
mov
inc
cs
mov
xchg
pop
or
fisubrs
cltd
ret
into
pop
pop
push
std
mov
in
hlt
adc
fs
jg
push
and
cld
shll
in
cmp
ficoml
dec
mov
sbb
in
pop
or
repnz
lret
xchg
dec
sahf
leave
in
jmp
adc
loop
cs
mov
cli
test
inc
or
jge
mov
jns
xor
mov
test
stos
xlat
dec
mov
xchg
dec
cwtl
jnp
cld
dec
pop
pop
shlb
enter
jo
mov
dec
lock
pop
xchg
es
mov
stos
or
mov
sub
mov
push
cmp
lock
rclb
shl
add
and
mov
cmpsl
mov
pop
outsl
in
sub
fisttpll
pop
xchg
jle
sub
push
test
lret
lea
add
mov
add
jge
push
js
test
sub
in
outsb
enter
stos
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
add
sbb
jl
in
inc
std
mov
jne
fs
push
bound
cli
lock
movsl
and
xchg
or
mov
repnz
out
roll
or
enter
aas
arpl
push
clc
lods
jecxz
or
jecxz
test
js
mov
sub
inc
jge
add
out
dec
and
sub
sbb
loop
push
mov
add
mov
outsb
jp
adc
push
test
fdivrs
push
and
inc
js
test
cli
inc
xchg
pop
push
repnz
and
mov
or
sub
push
xor
int3
adc
sahf
js
lahf
addr16
adc
fcomip
jge
scas
mov
xchg
add
cmc
aaa
shrl
mov
mov
imul
lahf
mov
pop
mov
sbb
mov
mov
je
daa
push
mov
xchg
sub
push
jecxz
stc
mov
mov
and
cli
sbb
in
add
in
aaa
lea
jge
add
adc
imul
add
push
xlat
rcrb
fwait
xchg
sub
push
in
filds
hlt
xchg
pop
mov
push
push
inc
xchg
rolb
sti
sti
add
mov
dec
lret
scas
sbb
fidivl
cmp
fwait
sub
fmul
bound
test
out
mov
jae
outsb
ret
scas
outsb
int3
shl
or
adc
subl
pop
inc
insb
push
cwtl
mov
jnp
push
inc
mov
mov
int3
fs
rolb
das
mov
aas
or
mov
push
sub
dec
sbb
shlb
dec
xchg
xchg
jns
inc
add
mov
pop
jns
rcrb
mov
js
add
inc
clc
jmp
sarb
sarl
or
iret
je
jl
insl
jg
jl
jmp
outsl
or
fs
sbb
les
icebp
add
rcrb
pop
dec
in
push
pop
inc
dec
push
inc
dec
shll
bound
sti
fwait
bnd
or
and
loop
pop
jno
mov
popa
jae
insl
popf
popa
cld
cltd
idivl
test
outsl
xor
mov
jge
jmp
adc
call
mov
and
push
cmc
pusha
shl
inc
adc
ja
jb
dec
adc
pop
lods
fwait
in
sub
and
rclb
aam
add
mov
sub
xor
jbe
repz
sti
jg
or
outsl
push
xor
push
dec
add
jbe
dec
xchg
sbb
push
andl
movzwl
or
pop
lds
fisubrl
adc
icebp
es
and
mov
xor
mov
nop
jle
sbbb
out
shll
imul
mov
pop
push
mov
xchg
fmuls
xchg
jb
or
mov
test
pop
xlat
stc
idiv
jmp
aaa
notl
adc
leave
dec
add
into
and
mov
scas
fisttpll
push
or
dec
lcall
mov
cld
mov
in
and
icebp
adc
mov
lret
pop
out
sub
stos
mov
dec
add
out
adc
std
repz
in
sbb
pushf
mov
lcall
ljmp
sbb
add
xchg
imul
scas
xor
sub
scas
and
mov
es
mov
xchg
adc
pop
inc
pop
outsb
mov
push
lods
addr16
push
and
popa
mov
push
lock
int3
daa
push
mov
fiaddl
cmc
inc
ret
jge
popf
popa
shlb
pop
add
add
dec
or
arpl
aas
cwtl
pop
loope
mov
jl
jg
jl
lds
sub
jmp
fcmove
xchg
adc
jecxz
jmp
inc
ror
cmp
test
dec
test
test
jecxz
jno
mov
and
scas
into
imul
pop
cltd
gs
das
shlb
jge
jp
push
sbb
lret
mov
xchg
pop
push
cltd
pop
and
xchg
andb
xchg
orb
sahf
push
sbb
push
mov
pop
sub
add
sti
sahf
cmpsl
decb
push
cs
jno
mov
insb
std
hlt
js
jmp
and
std
call
bound
hlt
cmp
popa
add
testb
lods
fcomps
arpl
mov
jns
push
push
inc
pop
fwait
inc
inc
les
cmp
cmp
and
mov
lds
and
cwtl
cmpl
movsb
add
mov
popf
scas
xchg
xlat
xchg
stos
movsb
repnz
mov
sbb
cmp
mov
test
lea
popf
push
inc
pushf
movsb
push
mov
ret
dec
movsl
push
dec
cld
mov
lea
push
enter
xor
push
push
sbb
jl
arpl
push
outsb
arpl
mov
in
scas
xor
dec
sub
mov
pop
pop
fldcw
mov
mov
insl
cmc
hlt
insl
clc
ds
je
and
inc
les
or
pop
sbb
dec
push
mov
jb
pop
cltd
or
add
xor
into
xchg
je
sbb
push
inc
jp
mov
cld
imul
out
cs
mov
mov
icebp
dec
pushf
mov
sub
out
xchg
cmpsl
shlb
insb
mov
mov
pop
rorb
cmp
cwtl
add
dec
cltd
fwait
jg
decb
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
lds
jl
insl
jg
jl
jb
inc
in
loop
adc
es
jo
pop
jg
jb
out
stos
mov
dec
loope
repnz
iret
das
mov
mov
pop
xchg
repz
push
mov
lods
scas
repz
dec
neg
stc
clc
jmp
mov
fsubrs
daa
fcoml
adc
sub
pop
adc
push
insl
mov
pop
or
dec
out
lahf
subl
push
mov
xchg
bound
lcall
sub
js
lcall
add
or
das
movsl
shrb
jo
push
inc
push
fstp
jns
leave
sub
inc
xchg
subb
pop
das
out
jl
daa
xor
and
ret
lods
xlat
loop
push
push
dec
pushl
dec
pop
int3
mov
dec
faddl
in
mov
popa
insl
jmp
outsl
cltd
xor
cmp
nop
push
cmp
sarl
push
xor
bound
shrl
into
test
mov
addb
add
test
popa
push
inc
jno
in
repnz
cmp
enter
mov
aas
xor
add
xor
xor
push
loopne
outsb
and
fisttpll
std
das
fdivs
call
dec
dec
loopne
stos
xor
out
dec
outsb
push
inc
fxch
lods
lret
jns
movl
mov
in
cwtl
xor
fdiv
cli
sub
push
hlt
cmp
inc
push
iret
and
xchg
cmp
inc
sub
push
push
push
xchg
sbb
int
push
fildll
jl
lock
andb
mov
clc
xor
js
fwait
mov
gs
das
leave
mov
movsl
xchg
sub
sbb
cmovo
jne
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
xlat
mov
push
sub
dec
je
cld
sarl
mov
loopne
dec
xor
loop
push
inc
or
cltd
in
sti
or
jg
push
add
popa
mov
mov
jbe
xor
mov
mov
sub
dec
std
jge
es
pushf
popl
ffree
fldl
mov
rcrl
mov
sub
jmp
xor
add
out
dec
xchg
cmpsb
outsb
into
neg
sahf
lret
mov
das
imul
pop
xor
ds
lods
cmp
pop
lret
ficompl
mov
lret
sub
scas
iret
pushf
jg
iret
dec
jg
pop
add
pop
insl
lret
xchg
push
cld
xor
push
mov
jno
ja
mov
add
push
add
mov
cmp
lret
aas
fisubrl
inc
jecxz
gs
pop
popa
jmp
add
pop
dec
jle
sarb
mov
jb
fadds
lock
xchg
xor
sbb
jl
test
cwtl
loop
jne
sbb
mov
push
imul
adc
insl
test
adc
in
dec
fidivs
sub
out
scas
insl
push
data16
aam
pop
pop
adc
dec
and
popf
or
sbb
mov
ljmp
xchg
sub
jo
icebp
pop
stos
rcll
ds
mov
jne
sti
notb
aaa
jnp
push
mov
push
sbb
and
icebp
push
pop
bound
mov
ss
and
ds
xchg
jl
ljmp
test
push
mov
adc
jmp
fildl
add
cmp
mov
sub
popf
leave
pop
vmovsd
jno
sahf
pop
xchg
test
test
lea
adc
sbb
pop
ret
push
mov
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
mov
and
jl
jg
jl
dec
push
enter
sub
sti
inc
out
xchg
in
je
xchg
fwait
mov
jbe
subl
std
or
std
scas
xchg
loop
loop
adc
jae
xor
sahf
aaa
pop
leave
and
cmc
or
into
mov
mov
pop
std
ja
movl
nop
sahf
inc
jb
popf
addr16
and
cltd
pop
jb
ss
popa
xor
xor
cmp
sub
cmpsl
scas
push
fmuls
pop
push
push
push
aam
dec
dec
mov
or
inc
test
xor
ds
jp
imul
dec
int
test
sbb
data16
fsub
jmp
push
xlat
mov
ret
shll
xor
test
ja
fsubr
enter
pop
jmp
cmp
pop
rol
inc
xchg
test
cmpl
mov
nop
add
aas
adc
das
repz
rol
mov
into
sbb
push
xlat
jl
mov
push
outsb
stos
sbbl
sbb
setno
rcl
mov
push
xlat
loop
jae
icebp
lahf
push
xchg
cmc
jmp
sar
idivb
loope
scas
xchg
add
fimuls
imul
lret
add
out
jbe
inc
mov
mov
cmp
push
sti
in
mov
push
or
cli
sbb
xor
mov
aaa
out
repnz
pop
decl
repnz
int3
clc
xor
and
sub
mov
ss
add
add
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
cmpsb
push
loopne
out
jl
stos
jg
jl
jns
or
push
aam
sar
ja
decb
jno
and
aad
fldl
or
pushf
inc
int3
inc
jg
xchg
cmc
popf
inc
es
enter
push
sahf
sahf
movsb
xchg
jl
pop
in
jne
xchg
cvtps2pi
ss
jmp
mov
stc
ljmp
pushf
xorb
int
int
pop
add
or
sbb
cltd
xchg
mov
sbb
subl
incl
faddl
mov
pop
xor
or
lds
dec
xchg
push
lret
push
int
push
xor
lret
daa
lahf
jbe
pop
or
cmp
aaa
or
pop
pushl
dec
pop
sbb
push
fwait
jbe
mov
enter
mov
clc
mov
sub
dec
divb
lock
xchg
je
xor
lds
js
in
add
in
out
mov
cltd
sti
and
mov
or
ror
roll
cmp
xchg
js
je
sbb
xchg
mov
aam
or
xor
dec
cmp
push
pop
push
fistps
ljmp
xchg
scas
pop
scas
mov
jg
and
sbb
mov
add
imull
mov
sbb
out
adc
out
test
mov
in
push
adc
mov
fs
arpl
cltd
inc
ja
xorb
xchg
cmpsl
test
leave
jl
inc
fdivrl
in
ds
mov
dec
int3
js
xchg
jmp
mov
dec
lock
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
decb
jl
jg
jl
and
push
icebp
mov
push
adc
sbb
lea
pop
xchg
cmp
inc
jb
lock
and
and
add
fstpl
mov
jecxz
je
mov
push
cltd
pop
in
jmp
popf
xchg
and
pop
jg
fcoms
xor
loopne
push
adc
imul
testb
dec
push
les
outsb
lret
jle
sbb
dec
mov
pushf
outsl
jno
pop
pop
je
add
mov
imul
xor
push
or
idivb
jmp
imul
out
cmp
dec
add
shlb
movsl
jl
adc
test
adc
push
lret
incl
jns
inc
pop
fistl
mov
sub
clc
ret
mov
fadds
pop
cmp
jbe
sti
mov
dec
pop
mov
inc
out
xchg
adcl
lods
jecxz
cmpsl
ffreep
xor
dec
pushf
xchg
and
pop
mov
mov
lahf
push
test
insl
and
in
mov
adc
int3
out
dec
stos
test
xchg
push
sbb
mov
jne
fdivrl
xor
pusha
push
inc
lret
movsb
data16
sbb
ss
sbb
sti
sbb
mov
pop
sbbb
xor
repnz
xchg
lahf
addr16
or
cmp
stc
nop
out
lds
xor
push
faddl
repnz
fdivl
inc
mov
inc
pop
cli
adc
cltd
scas
orl
jae
lret
mov
bound
inc
movl
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
dec
add
jl
stos
jg
jl
lods
add
sbb
insb
lea
dec
dec
and
lods
loope
pop
fnstcw
or
xor
insl
dec
outsl
scas
push
pop
cld
loope
or
lcall
xchg
stos
push
lods
dec
les
dec
jecxz
pop
clc
mov
xor
xchg
jne
sub
push
sbb
sti
iret
repnz
lods
fidivl
pusha
add
xchg
jnp
adc
xchg
cltd
out
fwait
decb
test
fisubrs
pop
jbe
addl
sti
jp
test
xor
fisttps
rcrl
jno
jb
adc
stos
fisubs
les
test
test
mov
sbb
mov
fadd
icebp
push
sub
sbb
adc
int
in
pop
lock
faddp
push
icebp
int
outsl
xchg
xor
and
cltd
mov
lods
inc
jae
mov
dec
pop
fxch
nop
mov
pop
vmwrite
stos
pop
pop
mov
push
sub
fstl
mov
inc
inc
add
in
cmp
mov
pop
add
or
cmpsl
sbb
jge
fs
jns
mov
mov
sub
movsl
icebp
mov
out
push
aam
add
int3
xor
movsl
scas
aad
or
xor
add
in
adc
fbstp
cmpsl
adc
xchg
lods
sbb
add
mov
dec
hlt
xchg
dec
add
cmc
rep
and
xlat
sub
push
mov
mov
ljmp
ss
inc
jbe
lret
mov
and
cld
dec
int
push
shlb
les
out
sti
push
daa
fwait
mov
bound
jge
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
aas
in
test
jl
cmp
repz
stc
lret
jg
outsl
or
mov
xor
repnz
adc
adc
test
mov
enter
or
jne
xchg
xor
add
repz
cmc
clc
push
lods
pop
stos
insl
pop
lcall
in
sub
fidivs
push
jle
rcrl
pop
cmp
ficoms
cmp
sub
jge
aad
xchg
je
pop
lods
mov
xchg
or
add
mov
sbbb
out
jle
mov
mov
int3
add
clc
movsb
scas
mov
xchg
cmp
push
jbe
movsb
push
inc
push
pusha
xor
jne
mov
out
das
mull
leave
ds
movsl
cs
mov
adc
pop
and
movsb
movntq
mov
mov
cmpsb
int
jnp
dec
cmpsb
push
adcl
movsb
nop
repnz
jb
lods
cmp
testl
or
js
add
add
dec
mov
into
notl
jmp
mov
push
and
int3
shll
push
pusha
shll
sti
pop
jnp
xor
test
into
mov
mov
jno
nop
mov
push
add
jno
mov
jbe
lret
xchg
mov
fistpl
mov
inc
lods
leave
movsl
or
jle
lods
lret
mov
outsb
and
jns
in
sub
popl
adc
fistpll
push
sub
push
fwait
push
jns
stos
jecxz
sbb
jle,pt
leave
dec
or
ljmp
cmc
inc
mov
lods
or
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
xor
push
xor
jl
stos
jg
jl
test
lcall
mov
mov
movsb
pusha
dec
jg
mov
mov
mov
rorl
lcall
mov
mov
in
out
sub
mov
mov
xchg
test
pop
add
test
pop
gs
fsub
andl
fldz
cmc
in
sub
popl
or
aam
jge
rcrl
cwtl
and
cmp
mov
push
ror
adc
push
hlt
in
jo
test
push
xchg
or
into
add
clc
xchg
in
mov
push
outsb
inc
scas
inc
into
sti
or
int3
xchg
push
inc
mov
fmul
fstpt
xlat
mov
test
fcompl
inc
xchg
jmp
cmp
pop
and
pop
std
out
mov
jno
test
sub
sbb
mov
clc
jmp
pop
aam
mov
cmpsl
and
and
lcall
pop
leave
repz
mov
jmp
popf
adc
int3
daa
sarl
add
es
xchg
xchg
movsb
push
aaa
jne
rcll
inc
adc
out
lods
mov
sub
sbb
cmc
mov
inc
rol
cmp
ja
repnz
pop
mov
sub
xchg
jns
in
jo
int
call
ror
push
out
xor
or
xor
ds
outsl
mov
mov
cmp
or
xchg
xor
jb,pt
mov
mov
jecxz
subps
adc
mov
mov
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
mov
loopne
fimuls
push
test
roll
mov
xlat
xorl
loope
das
daa
pop
or
sbb
sub
add
mov
xchg
insl
dec
ret
mov
mov
or
fisubrl
push
in
cmpsb
outsl
loope
clc
xchg
test
adc
bound
jge
cld
inc
lret
mov
fwait
inc
jo
mov
push
sub
imul
jno
fs
push
xor
add
mov
outsb
repz
xchg
jmp
adc
mov
sbbl
dec
pop
out
mov
add
dec
out
int3
xchg
mov
aas
dec
mov
push
cmpsb
mov
cmp
fdivl
mov
dec
xor
or
pop
add
mov
or
push
mov
loope
lret
jle
popa
stc
bound
cmp
lahf
xchg
mov
cmp
stos
inc
out
mov
sub
sbb
adc
xchg
popa
mov
icebp
jno
xchg
inc
cli
jbe
pop
dec
ret
mov
psubsb
inc
sbb
mov
sub
xchg
call
add
or
adc
pop
dec
jl
or
insb
test
andb
mov
push
nop
test
lods
out
push
test
adc
lds
and
xor
adc
inc
clc
hlt
ret
add
rep
jmp
sbb
loopne
sbb
fisubrs
jecxz
pusha
pop
mov
shll
test
in
outsb
in
in
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
lahf
add
call
stos
jg
jl
mov
pop
call
cmc
call
ljmp
pop
add
mov
or
lods
xchg
push
mov
std
jl
mov
in
add
out
xchg
imul
dec
imul
cmpsb
cld
inc
add
inc
jo
push
test
sbb
call
and
pop
jecxz
mov
mov
leave
rolb
ret
sbb
scas
les
xchg
fxtract
mov
scas
jge
fwait
bound
insl
pop
insl
rorb
jg
inc
clc
or
es
cs
mov
jmp
xchg
cmpsl
sbb
inc
stc
stos
cmpsb
popa
dec
dec
movsb
cwtl
or
jle
jo
mov
aas
mov
cs
push
ret
or
cwtl
cmpsl
mov
ljmp
mov
sub
in
into
mov
dec
test
sbb
push
inc
cli
cmpsb
pushf
sub
and
dec
pop
cld
or
xchg
mov
gs
repz
mov
mov
inc
mov
mov
test
mov
fwait
mov
push
pop
jecxz
inc
test
lods
ficompl
les
mov
imul
mov
and
pusha
fwait
insb
mov
mov
test
mov
mov
dec
ss
xchg
fldcw
jbe
sbb
mov
push
push
pop
out
pushf
mov
test
jge
push
push
mov
clc
xor
repz
adc
push
sub
movsl
add
cltd
or
mov
ljmp
add
or
and
decl
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
dec
or
jl
mov
jl
mov
fbstp
fdivrs
adc
cmp
test
add
inc
outsb
lods
sub
sub
sbb
inc
sbb
addr16
repz
sarl
xor
add
jnp
shlb
adc
lahf
pop
rcl
outsb
dec
ret
pop
inc
ret
pop
sub
fldl
sbb
stos
cmp
push
jns
dec
loop
push
sarb
push
inc
push
mov
inc
pop
or
jp
outsb
or
pop
jmp
xchg
stos
decl
jle
aaa
cmp
push
movsb
andb
sbb
add
jo
mov
cmpl
xchg
popf
ljmp
pop
push
and
xchg
cld
loope
fldt
clc
fs
shrb
mov
jge
movsl
das
sbb
aaa
lahf
insb
ljmp
mov
les
push
dec
ja
jle
rcrl
fwait
das
cmpsb
daa
arpl
insl
fwait
xchg
jbe
loopne
inc
sbb
dec
pusha
aad
aas
cmpsb
stc
and
jbe
xchg
cmpsb
mov
loopne
and
sbb
fisttpl
dec
jnp
scas
push
iret
jp
jnp
sti
sub
xchg
imul
cmpl
test
dec
shrl
fistl
mov
add
leave
insb
mov
test
dec
mov
mov
xor
mov
cmp
enter
jmp
jl
mov
xchg
mov
or
ficompl
es
fcmovnb
ljmp
rcrl
jle
cs
stos
push
dec
das
test
call
iret
stos
fcomps
sbb
stos
dec
ret
and
or
lea
xchg
sub
je
enter
xor
in
bound
dec
and
and
cmpsb
sbb
jbe
pop
mov
adc
in
in
adc
lea
mov
addl
fadd
int
cltd
fldenv
je
aam
xor
aas
es
xlat
stos
lds
lahf
cmc
sub
fucomip
in
orb
jp
jbe
cmc
push
jno
or
mov
in
sbb
sbb
ja
jge
xor
xchg
insl
inc
sbb
xor
jne
adc
lcall
mov
movsl
jne
mov
insb
nop
xchg
pop
xchg
adc
add
and
test
shl
xlat
orl
pop
out
cli
xchg
lcall
jnp
xlat
sub
xchg
inc
lret
out
jmp
and
mov
xor
or
mov
push
js
cwtl
jg
rolb
sub
pop
jge,pt
popa
and
jae
stos
rclb
jno
cwtl
imul
stc
loope
mov
adc
add
adc
sub
fwait
xchg
xor
icebp
popa
and
out
dec
and
fs
mov
sbb
xchg
imul
dec
sbb
out
mov
xchg
adc
jmp
out
dec
je
xor
mov
sbb
push
popa
dec
jp
mov
fisubrs
pop
popf
fwait
aam
cltd
in
add
shlb
lahf
rol
add
fadd
nop
mov
ja
movsl
leave
enter
lea
pop
pop
xor
mov
cmpsl
fwait
push
pusha
or
popa
or
gs
xchg
mov
cmpsl
mov
jge
jo
dec
pop
inc
or
jo
push
int
adc
mulb
push
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
sti
push
cmp
ss
mov
jl
push
mov
das
or
nop
push
enter
xor
enter
sub
adc
insb
mov
lods
cmpb
mov
xchg
add
mov
pop
cmpsl
push
and
repnz
xor
cld
and
pushf
insb
aaa
inc
xor
cmp
scas
add
mul
pop
imul
fs
add
popf
sbb
inc
pop
jecxz
inc
pop
lea
jns
inc
out
pop
hlt
inc
fs
mov
hlt
repnz
pop
push
adc
stos
mov
push
inc
in
mov
lcall
pop
xor
shll
repz
add
clc
pop
lods
inc
adcl
inc
jb
sub
jae
je
cwtl
sbb
push
subl
jg
cmpl
push
adc
cmp
rcrb
arpl
and
xor
or
iret
insl
iret
jb
out
xchg
cli
xchg
das
js
add
insb
je
mov
or
out
mov
add
movsb
jne
jbe
sub
imul
fucom
add
or
add
daa
orl
dec
inc
cmc
push
gs
adc
inc
lods
sub
mov
sub
cmp
cs
mov
int3
sub
push
mov
jge
mov
lock
jmp
call
mov
and
adc
rolb
daa
imul
test
dec
jg
insl
insb
jp
gs
jae
mov
loopne
fwait
xor
xchg
jnp
lock
xchg
sbb
pop
int3
es
pop
sub
mov
test
outsb
xchg
and
ljmp
adc
fs
shlb
in
pop
out
sbb
dec
fwait
inc
push
jnp
je
jle
loop
lods
xor
pop
stos
lahf
in
add
adc
sbb
test
inc
jl
push
movsl
sub
jbe
je
outsl
xor
push
lcall
or
push
lds
dec
jnp
es
dec
notl
ss
xchg
insb
lret
jp
fisubrs
in
pop
fimull
clc
dec
mov
ret
iret
cs
mov
adc
test
push
inc
inc
push
xchg
popa
sbb
int
aam
add
sarl
mov
mov
cmp
or
ret
xlat
fwait
mov
clc
or
lcall
mov
dec
mov
sub
je
jmp
out
popf
sub
jge
sub
and
dec
xchg
pushf
outsl
add
mov
and
adc
push
jle
push
in
adc
inc
movsl
and
bound
or
xchg
pop
jmp
xor
sahf
mov
cmp
jg
shlb
xor
push
shll
outsl
mov
int
gs
clc
stc
mov
lret
std
inc
fisttpll
mov
iret
mov
int3
sar
push
stos
stos
aad
fdivrs
in
lds
sbb
orl
aad
insl
push
and
loope
nopl
int
out
hlt
jb
repnz
jns
cmp
js
push
test
jbe
int
sahf
push
mov
mov
popa
push
xlat
cmp
or
cltd
icebp
cltd
xchg
jge
fdivrs
mov
cmp
lahf
pop
maskmovq
testl
inc
cld
xor
pushf
clc
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
shll
mov
and
mov
out
dec
bound
rorl
je
pop
stos
int
xor
and
test
loope
mov
mov
sbb
mov
test
movsl
cmp
pushf
mov
jnp
bound
pushf
mov
dec
dec
aad
add
xchg
xor
test
lods
xor
outsb
jo
daa
xor
cmpsl
sub
stos
aaa
sbb
jne
test
lcall
lea
xor
jbe
cltd
adc
dec
stos
test
outsb
cmp
and
or
sahf
les
xchg
fsubrs
rcrb
pop
adc
test
test
mov
cmp
and
aam
mov
jb
test
nop
out
loopne
das
mov
aaa
cld
lock
in
inc
fnstenv
data16
sub
idiv
into
fs
jb
xchg
pause
fistpll
jl
jb
xlat
imul
sbb
mov
popa
sbb
pop
out
add
imul
mov
xchg
xchg
pop
jo
cmp
call
sti
and
jmp
sbb
negw
push
inc
cld
vcvttss2si
dec
inc
test
iret
or
xchg
push
ds
test
add
jns
inc
push
xchg
arpl
mov
cmpsl
clc
arpl
aaa
pusha
mov
or
or
repz
stos
jp
test
inc
jge
xchg
pop
js
push
mov
and
test
mov
push
xchg
jno
xchg
pop
mov
pop
ds
inc
sarb
pop
fcoml
dec
out
das
rclb
addr16
gs
jmp
fmull
xor
xchg
cwtl
push
in
pop
jo
add
cmp
dec
or
xor
push
xor
mov
xchg
push
jmp
divl
in
sbb
xchg
sti
inc
xor
ds
getsec
jns
inc
outsb
cmp
xchg
popa
mov
xchg
xchg
int3
cwtl
rorl
and
push
hlt
leave
ja
xchg
xlat
test
jge
cli
add
lods
lret
cmp
aaa
fucompp
dec
stos
lea
push
leave
push
push
adc
arpl
aad
mov
das
shll
and
xor
mov
pushf
loopne
dec
ret
and
xor
xorb
js
adc
pushf
add
in
mov
loopne
shl
imul
call
cmp
pop
or
jne
jle
mov
cli
les
pop
mov
lea
sti
cmp
das
aas
push
aam
sti
inc
cmp
sahf
pop
ret
dec
arpl
xorb
adcl
mov
out
mov
pop
xor
xchg
push
ss
cmp
lcall
push
ret
xchg
fmull
into
cmc
xchg
jmp
mov
cmpsb
out
pop
pop
imul
lods
inc
or
clc
pop
testb
popa
mov
cli
pop
stos
push
sbb
outsl
mov
inc
int
shll
mov
push
js
ljmp
mov
or
call
xchg
iret
fistl
xor
add
sub
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
clc
pop
inc
inc
add
dec
lock
mov
subb
or
pop
adc
cmp
xchg
test
das
sub
test
xor
pushf
push
int
shrl
xor
jns
test
and
ror
mov
mov
cmp
xor
test
dec
add
or
jg
cmc
sub
lds
push
imul
adc
aad
add
mov
inc
int3
cwtl
pop
push
ds
sahf
pop
je
call
jns
adc
enter
mov
and
stos
movsb
jb
ljmp
shll
add
sbb
lret
pop
mov
in
ds
push
dec
fdivrl
notl
jns
arpl
mov
aam
mov
inc
jo
hlt
lcall
inc
shlb
xchg
les
fwait
aas
or
in
ret
push
cs
in
mov
std
push
aad
jbe
dec
push
add
pushf
insb
scas
mov
add
stos
mov
int3
mov
imul
adc
out
pop
mov
subb
rolb
and
inc
lock
notl
ret
gs
fidivrl
sbb
and
sbb
cwtl
dec
inc
jg
imul
adc
push
mov
outsb
mov
xchg
xchg
iret
sub
mov
enter
movsl
aas
or
inc
outsl
pop
sarl
sub
dec
dec
push
shll
dec
imul
inc
push
xchg
xor
add
sub
jle
mov
xor
pop
test
test
adc
jl
sti
xchg
add
je
pop
in
cld
inc
mov
cmp
push
pop
adc
js
fisubs
mov
cmpsb
ret
sbb
js
or
out
dec
inc
pop
lar
ja
dec
aam
sbb
jg
add
movsl
adc
aas
pop
cmp
inc
flds
sub
or
int3
add
aam
inc
or
inc
jge
xchg
and
scas
push
pop
cmp
ror
out
jl
ret
and
push
jo
in
mov
xchg
sbb
pop
sbb
movsb
je
fists
sbb
sub
ds
dec
jecxz
add
dec
cmp
pop
roll
not
xor
dec
pop
mulb
pop
xor
pop
pop
or
into
sahf
xchg
adc
xchg
cmp
call
popa
jns
mov
sbb
push
pop
cmc
and
xor
out
or
icebp
mov
jg
lcall
cmpsl
push
int3
mov
imul
add
pop
out
inc
fnsave
repz
mov
pop
push
movsb
hlt
sbb
nop
cli
inc
lods
clc
and
adc
adc
dec
dec
push
dec
push
lds
sub
in
pop
and
jo
movsl
orb
mov
repz
repz
cmp
and
mov
outsl
pop
fstpl
gs
pop
jge
mov
xchg
inc
loopne
xchg
pop
mov
add
lods
into
adc
adc
aam
lods
push
sub
dec
mov
sti
add
xchg
sahf
loop
sbb
cld
cmp
jp
cmovb
mov
mov
inc
in
push
jge
push
xchg
mov
xor
divb
test
mov
mov
stc
in
insb
loope
mov
lcall
decb
mov
mov
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
jle
dec
sti
xor
jl
xor
jl
enter
nop
pop
jmp
dec
fs
or
add
jo
mov
jp
add
int3
shl
pop
data16
adc
lret
jl
or
mov
pop
xor
and
lret
jne
adc
dec
enter
push
imul
or
jae
push
add
and
xchg
push
push
pop
pop
cmp
mov
push
sub
push
or
cmp
xor
outsl
mov
icebp
mov
aaa
test
lods
jns
in
std
shll
dec
cmp
loopne
fs
mov
xchg
loope
pop
cmp
jb
ds
mov
push
std
dec
decl
add
or
jmp
mov
aaa
mov
xchg
ja
mov
sbb
movsl
gs
and
pop
leave
lcall
loop
repz
mov
xor
xlat
dec
adc
cmpsb
push
cwtl
iret
xchg
lock
and
and
jle
pop
xchg
insl
data16
add
sub
daa
mov
xchg
add
xchg
sbb
in
repz
mov
jb
shll
or
int
je
roll
addr16
pop
xor
fstl
push
sbb
scas
add
push
or
inc
sarb
icebp
xor
test
int
push
gs
aad
push
mov
xchg
sar
je
repnz
fbstp
inc
or
sub
sbb
and
sub
pop
ljmp
or
sbb
in
pop
and
sbb
dec
test
loopne
dec
fwait
ret
mov
jb
jne
sbbb
ja
fimull
sub
hlt
or
add
mov
adc
sahf
out
dec
sbb
jecxz
insb
inc
loope
xchg
jmp
jl
mov
jl
insb
mov
mov
insl
mov
mov
jno
outsb
inc
push
pop
sarl
ret
in
lret
ja
or
cmp
out
lret
fdivrl
push
mov
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
cmp
mov
xor
jl
add
cli
add
sbb
cltd
jno
or
out
lods
mov
cmp
dec
sbb
xchg
add
cmc
add
neg
xor
fdivr
imul
scas
out
inc
bound
insl
xor
mov
adc
lock
fwait
push
pop
outsl
dec
lcall
cmp
orb
or
mov
push
sbb
fs
push
push
xor
sub
fcmovne
lcall
xchg
adc
stc
mov
fldenv
pop
jae
orb
stc
pop
stos
in
mov
mov
xchg
inc
cs
inc
and
fsubrs
push
push
mov
add
movsl
jo
daa
mov
lock
xchg
jb
push
mov
sbb
daa
xchg
je
dec
push
pop
sahf
jmp
xor
les
mov
incb
in
or
push
sbb
lahf
das
hlt
fwait
repz
sbb
lds
jne
xor
lds
in
sti
xor
sub
rorb
es
xor
rorb
push
fiadds
push
mov
pop
cmp
js
adc
push
push
insl
das
in
mov
mov
jg
sub
and
rcll
aas
ja
mov
push
gs
imul
adc
mov
mov
pop
shrb
dec
lods
loop
bound
lcall
cmp
outsl
xor
inc
dec
pop
in
insl
or
inc
cwtl
mov
dec
jne
pop
rcrl
mov
xchg
and
lahf
nop
dec
push
sbbb
negb
fistpl
adc
loopne
test
popa
lods
and
push
jge
jae
jo
sub
xor
pop
inc
push
or
xor
pop
cmp
inc
cmp
sub
push
popf
cmpsl
icebp
sbb
xchg
js
imul
jecxz
jbe
jo
out
test
dec
xchg
sbb
and
arpl
in
jae
or
cmp
fmulp
inc
inc
imul
sub
mov
mov
add
push
add
add
int3
mov
jo
xchg
jmp
push
test
inc
lods
jl
xor
jl
cmp
mov
cmp
sbb
jae
add
lods
pop
sbb
scas
xchg
cmpsl
scas
ja
aas
jmp
mov
push
es
cli
mov
bound
sarb
and
je
fsubl
and
mov
test
cmc
int
add
out
and
mov
mov
push
es
jbe
xor
xor
xchg
flds
mov
pop
push
xor
mov
sub
push
and
test
sub
nop
cmp
push
test
adc
or
dec
clc
jbe
ret
sbb
addr16
mov
xchg
and
fimull
fadd
stc
inc
fwait
rorb
int
mov
iret
loop
inc
cmp
outsb
orl
xchg
xlat
into
pop
pop
sub
mov
popa
and
scas
rorb
inc
mov
jns
or
rolb
movsl
in
ds
cmc
loope
icebp
jns
fisubrs
sbb
cmc
or
mov
dec
lods
mov
lock
dec
fistl
in
repz
add
arpl
add
xor
shrb
fs
jne
sbb
push
and
sbb
pop
fldcw
cmpsb
ret
aad
jg
mov
movsb
scas
adc
fadds
in
mov
popf
or
xchg
leave
push
outsl
iret
popa
es
adc
test
or
pop
gs
xor
lahf
sar
mov
aad
adc
cmp
adc
pop
sub
fwait
sahf
loopne
pop
mov
or
aas
jp
inc
cmp
daa
jecxz
mov
mov
int
xchg
or
xchg
pop
adc
scas
xlat
mov
dec
or
imul
jo
dec
in
loopne
icebp
or
jns
in
push
mov
js
xchg
jnp
pop
stos
pop
jecxz
mov
in
fildll
faddl
xlat
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
adc
xor
jl
jge
aaa
lea
inc
and
dec
sub
add
test
xor
inc
inc
inc
sub
add
cmpb
orl
push
cltd
int3
add
shll
inc
popf
frstor
inc
setnp
imul
test
push
leave
push
push
inc
push
lcall
cmp
pop
sbbl
or
mov
jge
jmp
mov
add
imul
lds
mov
mov
rcll
in
mov
dec
gs
into
popa
imul
sub
outsl
cmp
loope
dec
scas
rol
in
pop
insl
jno
fsqrt
cli
sar
sub
fwait
mov
pop
or
inc
mov
xchg
add
pop
lods
xchg
pop
fistpll
inc
pushf
jno
push
push
ret
out
ficomps
pushf
mov
loop
cwtl
mov
pop
xorb
cmpsb
xor
mov
inc
inc
or
out
adc
pop
push
dec
jns
adc
inc
in
fisttpll
popa
or
iret
adc
or
nop
adc
pushf
jns
popf
sbb
aaa
cwtl
out
dec
fs
pushf
mov
xor
scas
push
add
pusha
out
int3
int
xchg
mov
mov
pop
mov
loop
pop
rcrl
add
negl
pushf
fimuls
movl
xor
shll
mov
data16
mov
repz
adc
inc
dec
jbe
dec
pop
sub
pop
inc
jmp
cmc
push
outsb
push
sub
xor
mov
lds
test
adc
or
repnz
pusha
cli
popa
bound
push
sub
pop
dec
adc
lock
pop
fs
dec
mov
inc
pushf
arpl
aam
push
insl
push
adc
je
lret
push
fisubs
pop
xor
xorl
cld
pop
repz
das
arpl
jne
repz
lahf
sub
jmp
in
cmpb
movsl
stos
inc
xchg
data16
lds
add
xchg
lods
adc
lret
xor
je
daa
out
dec
int
cmp
mov
hlt
push
ret
out
cmp
sahf
inc
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
ret
xlat
jns
jl
jmp
aam
pop
sbb
fisttps
xchg
add
inc
xor
push
pop
xor
in
mov
je
or
imul
cmp
adc
call
addl
dec
int
xor
jae
and
push
pop
adc
cmp
push
pop
inc
clc
lods
inc
ret
rolb
aaa
lods
out
mov
push
push
add
fcomp
jno
xor
jb
xchg
push
xorl
imul
jle
sbbl
and
loopne
xchg
jl
and
vcvtpd2dqy
aam
pop
ret
in
adc
jbe
mov
mov
jle
mov
xchg
inc
movsb
sbb
pop
adc
mov
rorl
nop
mov
int3
push
mov
fidivs
dec
aam
add
add
adc
addl
mov
inc
push
iret
jl
xor
mov
pop
inc
mov
pop
pop
sbb
stos
lea
jg
sub
dec
test
cld
dec
sub
mov
jnp
aaa
mov
pop
mov
sbb
mov
in
mov
adc
data16
mov
aaa
sbb
adc
clc
nop
fwait
out
cmc
cmp
lods
into
daa
cs
and
jns
fcoml
jbe
xchg
cmp
push
cmp
repnz
xor
xchg
test
fiadds
mov
push
and
add
ss
sarb
data16
sarl
xchg
stc
mov
mov
mov
or
add
add
and
fidivrs
in
or
outsb
sub
xlat
jns
dec
repz
out
pop
lods
sahf
je
data16
insb
in
out
xor
mov
mov
jae
data16
addl
xchg
adc
push
dec
scas
ror
ds
mov
lds
xchg
enter
sub
loope
or
sbb
nop
jle
aas
rolb
leave
cmc
jae
add
sarl
add
pusha
mov
lods
add
fsubrs
xchg
and
inc
outsb
cwtl
jbe
loope
int3
xchg
cmp
sub
out
and
sbb
mov
cltd
pop
or
mov
pop
mov
insb
or
inc
jp
or
push
push
in
lds
cmp
sub
sub
bound
out
pop
ja
mov
xor
insl
add
es
mov
loop
pop
xorb
into
out
jb
movsl
add
or
xor
inc
mov
cmpsb
out
into
cmp
fidivs
fadds
mov
jae
jmp
imul
leave
cmc
mov
vcomisd
lods
cld
iret
pusha
inc
push
xor
jge
cmp
jecxz
jb
push
outsl
sub
push
add
push
xchg
cmpsb
imul
sub
js
lcall
std
incb
ljmp
insl
out
xchg
repnz
inc
sub
jo
popf
adc
or
xchg
pop
sbb
cmp
clc
or
mov
andl
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
jnp
addr16
iret
jl
xlat
jns
jl
outsb
arpl
les
push
loope
dec
std
mov
inc
lods
sub
clc
enter
sahf
sbb
pop
movsl
inc
inc
repnz
xchg
and
lahf
mov
cmp
popa
test
insb
add
ja
jae
in
and
jge
dec
mov
test
cld
add
imul
jnp
dec
test
sub
jbe
mov
mov
mov
dec
adc
sbb
pop
mov
inc
nop
loopne
fcomps
js
cs
add
loopne
lock
cmp
pop
xorl
dec
xchg
mov
inc
sbb
sub
push
pminsw
mov
pop
xor
mov
daa
out
cmp
cmp
test
aad
and
ror
fnsave
lahf
imul
and
cmp
cmp
xor
gs
jbe
xorl
sub
das
add
jbe
rcll
sbb
adc
popa
stos
mov
ret
or
adc
push
lret
rcrb
xchg
leave
inc
test
js
mov
fbld
imul
jns
xor
jae
sahf
xor
repnz
jge
or
iret
xchg
and
push
cwtd
pop
frstor
les
sbb
pop
aaa
out
cld
mov
stos
pop
jns
inc
add
iret
jl
or
push
aaa
sub
jp
fnstsw
repnz
popf
lods
push
xchg
andb
dec
cmp
shlb
fistl
stos
es
out
pop
das
insb
mov
rcrl
fisubl
rcr
push
jns
lcall
fisubrl
xor
je
sbb
leave
insb
push
mov
sub
or
jns
pushf
js
out
hlt
test
cmc
push
push
insb
imul
add
sub
lahf
sbb
pop
cmpsb
lcall
js
and
mov
xchg
add
arpl
int
xchg
addr16
lods
fbstp
push
mov
sbb
adc
invd
popl
xchg
rcll
mov
add
popf
scas
movsb
jno
fldenv
sub
scas
jmp
sbb
sar
and
jo
loope
psllw
dec
ficoms
ret
dec
andl
xor
lret
fsubrl
jae
adc
jo
cwtl
scas
clc
cmp
rol
and
inc
mov
and
stos
rcrl
mov
inc
mov
js
leave
push
adc
dec
in
ja
push
movsl
jmp
cmc
ror
je
lea
lret
inc
popa
or
negb
mov
mov
xchg
test
xchg
mov
push
sbb
and
and
add
pushf
ret
or
ss
mov
outsb
jecxz
sahf
mov
into
icebp
sub
cmp
mull
or
lret
por
cmpsl
pusha
jmp
fsubrl
push
mov
div
in
aam
adc
dec
push
sbb
int3
add
movsl
std
arpl
add
pop
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
sbb
jb
enter
jns
jl
nop
jecxz
add
cmc
push
and
push
std
cmp
jle
adc
push
inc
mov
xchg
and
lret
jmp
cmp
lret
test
lock
bound
notb
in
test
push
add
and
orl
push
stos
mov
xchg
jo
or
outsb
mov
scas
lds
and
add
inc
outsb
dec
test
inc
xor
mov
fincstp
into
in
inc
sub
and
mov
push
mov
mov
cmp
mov
sub
lods
sbb
inc
imul
cwtl
push
adc
or
mov
sub
inc
pop
and
xchg
fildl
nop
mov
add
xchg
xchg
clc
in
push
bnd
inc
jl
xor
pushf
aad
push
lret
adc
leave
mov
and
mov
mov
pop
jns
xchg
sbb
sub
sub
aas
sbb
out
mov
out
or
out
adc
add
nop
orl
lret
mov
out
add
into
add
add
out
rep
mov
mov
dec
jbe
mov
mov
pop
xlat
push
mov
aad
push
mov
or
fwait
mov
dec
cld
clc
hlt
dec
jg
cmp
xchg
dec
inc
push
mov
dec
shll
inc
xchg
inc
pop
fwait
mov
lcall
sbb
arpl
loopne
and
iret
out
shll
mov
mov
shr
les
or
add
jne
mov
shrb
pop
pop
mov
push
cwtl
insl
shrl
flds
mov
test
mov
push
sahf
outsl
gs
xchg
sub
outsb
dec
cmpsb
aam
scas
imul
xchg
fs
inc
jb
das
xchg
paddusw
and
int3
leave
lds
rcll
cmp
movsb
les
add
repnz
into
add
lea
add
call
gs
cld
repz
mov
xor
pop
adc
add
sbb
fwait
mov
and
rcr
inc
arpl
sub
and
mov
outsb
xor
jmp
adc
cmpsl
les
xor
or
out
push
push
jp
jns
pop
inc
add
fists
imul
xor
adc
imul
cmp
cmc
inc
fadds
popa
pop
ja
outsb
cmp
cld
imul
stos
xlat
mov
adc
fdivl
movsb
movsb
stc
push
call
fisttpll
movsb
pop
rcrb
mov
xor
subl
lcall
xor
es
cmp
mov
xor
and
add
push
outsb
mov
nop
out
jmp
jmp
inc
pop
daa
jne
push
scas
out
or
mov
inc
adc
lahf
sub
pusha
aad
mov
pop
scas
xchg
fistl
sbb
sbb
cmpsb
inc
aam
je
ds
adc
pop
ss
add
add
add
add
sbb
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
aam
jl
jns
jl
testl
in
jg
or
jo
push
sbb
cmc
xchg
pop
clc
mov
pop
lret
push
xchg
push
nop
stc
xor
ljmp
xor
aas
mov
das
mov
inc
cmp
pusha
dec
push
cmp
xor
push
cmp
mov
mov
sub
outsb
push
dec
jns
and
mov
inc
stos
lds
stc
push
xor
scas
dec
mov
cmp
repnz
out
lret
in
inc
pop
pusha
push
push
inc
xchg
scas
in
push
jnp
aad
notb
adc
scas
mov
or
push
and
arpl
inc
xor
inc
add
data16
imul
sbb
arpl
lret
outsw
shlb
jle
sub
shr
adc
push
aaa
sbb
mov
dec
pop
pop
ret
addr16
sbb
hlt
sub
xlat
arpl
jns
adc
ljmp
dec
dec
aam
dec
out
data16
mov
xchg
ja
dec
pop
enter
jno
push
es
mov
aad
inc
lds
inc
addl
and
popf
pop
mov
mov
inc
lcall
pop
pop
imul
loop
add
fnsave
pop
out
xchg
rcrb
push
pop
fidivl
jo
ror
stc
int
hlt
je
out
xor
mov
jl
mov
pop
cmp
mov
leave
int3
xor
inc
inc
sbb
stos
fadd
in
mov
hlt
sti
or
in
aad
adc
les
cmpsb
pushf
mov
imulb
insl
leave
jb
mov
or
ss
xor
setae
add
iret
sub
xchg
das
add
cmpsb
sahf
rcll
shrl
out
fsubs
std
mov
cli
outsb
test
fldt
mov
lock
popf
and
sbb
out
push
add
adc
jae
mov
and
push
es
cmp
jo
jg
fdivrp
or
fnstsw
ljmp
lcall
add
or
or
and
pop
outsb
fstpl
icebp
mov
sbb
adc
mov
js
inc
outsl
pop
xor
les
adcb
push
or
mov
movsb
clc
repnz
inc
dec
cli
inc
mov
cmp
inc
adc
scas
pop
push
sbb
sub
mov
add
add
popf
pop
ret
call
push
jnp
popf
add
pop
add
mov
xchg
add
sub
cmp
mov
or
mov
and
and
adc
aam
js
cmc
movsl
xor
clc
mov
cmp
stos
add
dec
cmc
mov
adc
sbbl
jae
inc
fldenv
inc
pop
mov
xchg
scas
addr16
dec
mov
sub
xor
or
imul
test
mov
cmp
jmp
cwtl
mov
mov
or
out
outsb
adc
jl
jns
jl
dec
ljmp
insb
clc
add
std
test
or
scas
cltd
stos
fisttps
inc
push
adc
inc
ds
lds
add
jmp
ja
pop
cmc
xor
push
xchg
into
xchg
cmp
js
out
jecxz
xchg
rcll
cmc
and
repnz
popa
fs
mov
mov
and
cs
mov
dec
stos
jge
pop
adc
popa
repz
or
jae
aad
call
add
mov
sbb
mov
bound
ror
pop
inc
mov
sar
push
stos
jne
aam
lret
add
xor
cwtl
imul
clc
hlt
shr
scas
xchg
and
add
fcmovnb
dec
into
fstps
out
aad
sbb
mov
mov
add
cmpb
mov
ds
loopne
pop
fs
xor
pop
adc
jge
mov
aad
rcrb
push
lcall
jb
inc
aad
jnp
and
test
lahf
push
cmpsb
mov
add
lods
cmp
call
test
dec
pop
daa
pop
push
loop
push
pop
pop
pop
nop
je
sub
mov
mov
push
pop
or
addr16
test
push
arpl
pop
das
dec
mov
lea
enter
adc
mov
arpl
daa
ss
int3
xor
out
cmp
mov
add
sbb
pop
mov
sub
leave
pop
mov
fdiv
inc
mov
fidivs
dec
adcl
inc
dec
test
mov
xchg
sub
mov
mov
pushl
push
lock
enter
addr16
adc
adc
adc
xchg
int
cmc
notb
push
jl
mov
lea
adc
mov
xor
cltd
add
cmp
cmp
lods
ljmp
or
pop
mov
or
inc
add
mov
lret
adc
adc
mov
imul
jo,pn
insb
push
xchg
jle
std
xor
test
sub
arpl
or
dec
into
mov
out
loop
repz
mov
sbb
lds
enter
jmp
ret
mov
mov
cmp
stc
push
call
cmpsb
mov
sub
fidivl
loopne
lcall
mov
cli
inc
xor
in
sahf
sbb
dec
mov
cmp
sub
cmp
jp
and
ja
icebp
inc
cmp
jne
xchg
adc
repnz
jecxz
lret
inc
mov
adc
inc
shr
out
cmp
or
imul
sbb
fxch
adc
add
mov
mov
lods
fidivrs
into
xor
ficomps
xor
popf
cmp
sarl
cmp
bndstx
outsl
xor
lods
cmp
ja
adc
sbb
or
or
pop
or
mov
aaa
mov
mov
rcr
in
mov
test
mov
inc
jne
dec
aaa
adc
test
inc
in
or
jno
add
pop
jns
fs
add
push
sbb
sarb
jns
jl
mov
jge
mov
popa
jecxz
mov
aas
repnz
into
scas
popa
test
dec
in
jno
inc
dec
das
and
and
jg
mov
out
sbb
das
das
popl
cmp
pop
xchg
adc
push
pusha
addl
mov
push
sub
lret
test
xor
outsb
jg
call
js
in
js
xchg
dec
sub
outsl
les
jl
repz
fs
dec
mov
jo
les
fsts
out
setb
cld
mov
add
ret
lods
xor
xchg
and
fistpl
xchg
aad
out
and
pop
jb
insl
loopne
sbb
mov
cmp
sahf
fs
add
ss
movsb
cmp
jp
cmpsl
mov
inc
filds
adc
dec
in
xchg
pop
mov
pop
dec
ret
pop
pop
xor
jbe
xchg
lock
lods
sbb
imul
movsl
mov
sbb
outsl
adc
jno
cmp
jge
jns
push
pop
inc
out
sub
xchg
enter
les
sub
shlb
cmp
repz
jg
pop
dec
imul
push
cmpsl
lods
loope
mov
scas
lcall
lods
mov
push
push
adcl
mov
sahf
out
cs
iret
ret
aaa
pusha
xlat
out
push
lock
or
test
push
hlt
sub
mov
aas
xchg
adc
in
mov
pusha
int
loop
ljmp
movsl
mov
in
subl
push
dec
daa
xor
inc
call
mov
mulb
push
pop
jecxz
sub
dec
icebp
mov
mov
repz
sbbb
mov
loop
add
repz
mov
lods
and
aam
xchg
dec
or
xlat
inc
js
mov
mov
mov
in
loope
push
in
stos
fimull
jg
ret
test
xchg
adc
mov
lea
fisttpl
mov
push
icebp
xor
test
sub
fiaddl
pop
or
dec
adc
fcmovb
scas
adc
out
call
push
das
push
into
pop
les
adc
jecxz
push
test
iret
xlat
lcall
and
cltd
cmpsb
sub
xor
push
je
or
ja
mov
in
test
mov
cwtl
outsb
push
stc
add
mov
or
or
mov
mov
pusha
in
test
pop
stos
insb
out
pop
jle
fldenv
add
pop
push
adc
and
test
cs
fidivrs
das
movsb
push
adc
scas
xor
std
mov
pop
fcompp
shrb
xor
data16
adc
push
adc
dec
lret
into
adc
test
mov
cmc
and
push
add
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
push
pusha
sbb
fidivrs
jns
jl
out
xor
lds
dec
dec
mov
and
data16
leave
add
rorl
xorl
cmp
inc
out
xor
iret
incl
aad
and
icebp
mov
add
or
add
hlt
loopne
out
inc
ljmp
sbb
movsb
mov
inc
int3
sbb
loopne
vpminsw
fdivrs
xor
fadds
add
jne
jno
loope
daa
cmpl
jo
call
mov
iret
test
and
xchg
cmp
xchg
dec
popf
push
imul
pop
loop
into
fwait
jae
das
scas
xchg
pop
in
sbb
or
jmp
adc
jae
pop
add
out
sbb
pop
and
stos
sarb
jecxz
dec
add
pop
shlb
nop
mov
test
in
pop
rorb
xchg
and
nop
or
or
ljmp
mov
popa
sahf
pushf
clc
and
shll
cmc
cmpsl
fdivl
out
or
fcmovne
ljmp
jge
hlt
inc
sar
ja,pt
sub
push
inc
push
jecxz
fsub
push
sub
out
add
or
repz
mov
or
inc
inc
xlat
inc
ljmp
and
push
and
es
popa
cld
inc
mov
hlt
mov
jg
push
ror
dec
rorl
sub
dec
data16
cmp
lret
and
fidivs
sbb
adc
lea
lcall
inc
aaa
adcl
xchg
repz
jle
mov
std
mov
pop
add
out
sbb
mov
cmp
dec
and
xchg
mov
cmpsl
adc
sub
insb
inc
cwtl
push
jecxz
daa
sub
ret
or
xchg
push
jge
inc
or
xlat
mov
xchg
xor
outsb
rorl
inc
in
lods
popf
xchg
mov
fdivs
repz
enter
adc
test
jmp
pop
mov
leave
sar
sub
mov
dec
hlt
add
stc
or
mov
jno
sbb
mov
js
jp
leave
mov
arpl
js
fidivrl
inc
fidivs
ds
mov
and
aad
mov
lret
mov
pop
adc
inc
inc
stos
aam
and
incb
fsts
subb
lods
ja
mov
icebp
adc
outsl
add
mov
jg
pop
hlt
xchg
lahf
lods
cmpsb
out
das
mov
or
jg
and
xchg
negb
arpl
cmp
push
pop
das
push
daa
dec
or
add
inc
pushf
or
add
mov
in
jecxz
pop
jmp
call
loopne
call
ret
pop
mov
lods
inc
add
inc
mov
xchg
and
lcall
inc
pop
inc
leave
mov
sahf
stos
mov
push
js
cmpsb
pop
jno
cmpsl
icebp
repnz
xchg
es
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
sbb
jl
xlat
jns
jl
addr16
repnz
cmp
arpl
cmc
cli
push
push
cmpsb
cwtl
pusha
and
mov
and
call
jnp
les
sbb
inc
xor
mov
push
push
jno
push
push
aad
scas
leave
jnp
sub
lds
inc
fiaddl
lret
adc
push
test
xchg
sbb
dec
cli
push
mov
mov
je
xchg
adcl
push
adc
push
enter
xor
fwait
stc
and
ret
popa
xlat
xchg
sub
pushf
mov
into
pop
dec
test
stc
test
sub
mov
inc
mov
ss
jo
aad
jle
aam
es
hlt
lahf
addl
mov
dec
leave
lods
pop
fdivs
or
vpandn
faddl
ret
nop
lret
pop
bound
in
and
add
out
and
shl
shl
push
jae
cmp
pop
notl
and
mov
jle
into
gs
mov
mov
imul
lods
mov
mov
mov
mov
fwait
lods
add
jno
cmpsl
sub
xchg
xor
aad
insb
mov
mov
pop
dec
add
cmp
mov
mov
xchg
test
dec
test
cli
int3
and
sbb
divl
out
jmp
push
lods
push
outsb
add
mov
cs
lcall
cs
xchg
xchg
dec
sarl
pop
filds
xor
mov
daa
dec
shlb
jp
push
add
fisttps
mov
test
push
push
outsl
stos
decl
inc
mov
stc
mov
sbb
or
sub
aaa
and
sbb
insb
mov
mov
fwait
test
stos
push
pop
aaa
push
mov
mov
adc
mov
nop
lcall
adc
xor
jbe
ja
andb
mov
insl
push
jmp
xchg
shll
jne
loopne
sub
sub
mov
jle
loop
dec
or
xchg
or
aad
es
or
sbb
lcall
ficompl
inc
int
jno
add
adc
mov
movsb
ficoml
jns
dec
cmpsb
jnp
data16
fidivrs
cltd
cmp
imul
aad
dec
iret
test
pop
jg
and
and
cmp
xchg
push
jge
inc
xchg
inc
lahf
filds
add
hlt
add
lahf
inc
sbb
pop
popf
cld
shll
shll
fldenv
sarl
jne
sub
inc
add
lock
adc
stc
mov
test
repnz
loopne
cmp
jecxz
pop
push
fs
bound
imul
mov
jno
out
in
sub
les
push
movsb
lcall
and
push
imul
je
out
stc
and
jl
push
movl
roll
mov
fcoms
pop
insl
cmp
push
adc
add
lods
outsl
aas
mov
gs
outsb
imul
loopne
push
clc
mov
xor
jmp
inc
pusha
sub
sub
shl
pusha
in
jl
jns
jl
mov
imul
lea
popa
aas
insb
push
jecxz
mov
nop
fidivrl
nop
filds
jne
jnp
jno
xchg
or
call
mov
pop
ljmp
jb
ja
aas
leave
rcll
clc
xor
jno
push
jb
xor
int
xchg
sub
std
iret
stc
xor
jnp
rorl
sub
shlb
je
popf
std
mov
xor
lcall
mov
adc
fsubrl
scas
mov
dec
mov
mov
fwait
cmp
mov
rclb
out
roll
cwtl
ss
je
jne
and
enter
popa
fwait
push
das
lea
cld
test
sbb
add
mov
test
call
mov
cmp
in
jg
xchg
jp
push
sbb
sbbl
aas
mov
into
pop
cli
xlat
jle
push
pop
std
adc
adc
pop
or
js
lods
inc
jge
mov
icebp
sbb
adc
jl
mov
shrl
stos
and
sbb
notb
scas
mov
mov
fdivr
mov
outsb
leave
cltd
dec
mov
leave
jnp
cmp
cmc
mov
pop
rcll
out
sbb
dec
pop
imull
cs
inc
push
pop
add
lea
push
pop
out
mov
mov
push
inc
decb
inc
lcall
jo
leave
push
movsb
orl
mov
test
adc
aam
addl
cmp
pop
mov
pop
mov
pushf
das
iret
fstps
clc
sub
pusha
cmp
push
inc
xchg
fcoml
jecxz
xchg
xchg
or
shrb
outsb
lahf
pop
data16
xor
dec
sub
test
mov
arpl
jmp
push
mov
pop
dec
pop
test
ss
std
shll
sar
pop
or
bnd
push
push
cmpsl
pop
cmpsb
push
push
mov
dec
inc
pop
mov
jge
sbb
ficomps
cwtl
aas
push
jo
fs
adc
cwtl
push
rcr
jecxz
mov
mov
pop
negb
mov
outsl
adc
sahf
lods
xchg
mov
cmp
jne
insb
lahf
xchg
jne
jmp
jb
cmp
xchg
jo
addr16
pop
testb
fistpl
lcall
dec
sbb
jg
int3
add
lret
mov
bound
outsb
cltd
das
sbbb
mov
xlat
sti
fimuls
arpl
push
jb
add
pop
push
ss
adcb
sbb
rolb
fld
jb
mov
loopne
and
push
imul
pop
dec
shll
aas
cmp
bound
test
cmp
jmp
mov
ss
mov
test
pop
popf
inc
mov
sbb
insl
jo
pop
das
jg
mov
mov
inc
mov
rcll
mov
pop
js
in
lds
xchg
int3
add
imul
sub
jmp
or
jb
mov
push
sbb
jne
loopne
jl
jns
jl
js
dec
xor
je
xchg
jmp
dec
pop
mov
xchg
dec
fwait
mulb
test
sub
and
push
adc
test
jne
ljmp
sub
sti
inc
sub
out
push
sahf
popa
or
rorb
int
fcomip
stc
ss
pop
dec
js
and
jge
adc
mov
mov
in
scas
pop
out
fdivl
push
lods
sbb
jnp
jp
push
push
rcrb
pop
sub
pop
jb
lahf
jbe
stos
mov
push
decl
lods
pop
push
sbb
pop
push
bswap
es
jne
pop
bound
test
ret
mov
mov
fcmovnbe
test
lcall
xchg
sub
adc
push
mov
xlat
lahf
xor
pushf
outsb
mov
ficomps
lcall
inc
in
cmp
sub
cmp
add
mov
mov
js
int3
mov
insb
lret
lods
push
add
in
adc
xchg
mov
les
lock
xchg
mov
sub
and
add
idivb
pop
outsl
add
loop
adc
push
sbb
in
cmpsl
pop
push
jp
xchg
sahf
aam
sbb
popf
sbb
rolb
test
sub
loop
hlt
fsubs
mov
insb
enter
aaa
ljmp
cmpsb
pop
test
ficoml
mov
aas
stos
mov
or
jmp
cmp
and
add
dec
call
or
mov
inc
call
outsl
rcrl
movsb
and
popa
push
lret
mov
test
push
inc
ss
fxch
push
jb
std
ss
jmp
pop
orb
scas
mov
or
dec
inc
decb
and
lea
push
or
dec
popf
jp
shrl
push
lret
xor
jno
and
pop
xchg
mov
add
jmp
mov
jle
pop
jbe
fisttps
repnz
and
pop
shrl
int3
fcoml
insl
flds
mov
dec
mov
ficomps
icebp
xchg
jl
and
lahf
subl
les
cmp
loopne
sub
pop
cmpb
mov
mov
lods
out
arpl
repz
pop
jg
stc
aaa
js
int3
and
je
inc
ficoml
pop
loope
repz
fldcw
shlb
pushw
leave
mov
repnz
jg
adc
cmp
cmp
shlb
imull
insb
mov
lods
mov
push
sbb
and
xor
movsb
aas
sbb
jbe
xor
mov
push
bound
jne
mov
daa
insl
nop
scas
inc
lods
imul
insl
rolb
pop
mov
es
mov
sti
clc
sub
mov
add
xchg
jmp
outsb
adc
rolb
mov
xchg
pop
push
loope
xchg
xor
push
ret
inc
popf
sbb
lcall
mov
js
jge
push
and
sub
psadbw
inc
in
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
les
mov
adc
mov
pop
xor
mov
xor
and
cmp
pop
inc
pop
xchg
pop
mov
pop
jmp
aaa
test
addl
xchg
sub
or
add
push
jg
dec
cmpsl
cmp
fdivrs
or
sub
inc
insb
scas
fs
pop
ss
fs
dec
add
ss
jle
adc
fmul
mov
rcrl
mov
dec
add
pop
daa
mov
sbbb
sub
add
pop
xchg
lret
mov
idivl
ss
out
aas
dec
jno
daa
xor
push
jns
cltd
xor
adc
push
sub
adc
push
je
ret
cmp
jmp
xchg
adc
push
pop
nop
jnp
pushf
cmp
cli
jae
inc
rcrb
or
push
add
enter
xchg
sti
xor
mov
aad
dec
popf
or
xor
xchg
pop
jno
jne
addb
jg
ret
mov
or
cmp
add
adc
inc
popa
add
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
sub
dec
mov
jl
adc
fisubs
int3
or
cmp
leave
xor
adc
int
addr16
insl
pop
ljmp
inc
cmpsb
jl
popf
or
mov
mov
cld
xor
shlb
jnp
jbe
xchg
mov
out
jg
push
test
mov
xor
in
sub
aad
lock
and
cmc
shl
sbb
jo
mov
dec
in
movsl
jle
iret
in
stc
xor
inc
mov
xchg
shr
xorb
adc
mov
xor
int
and
mov
xchg
mov
dec
dec
add
lock
jmp
xor
iret
mov
lods
lcall
adc
sbb
adc
cld
sbb
sbb
jmp
dec
ret
cmp
add
in
lcall
inc
ret
pop
adc
ja
mov
xchg
xlat
push
mov
std
scas
rcl
xor
int
inc
enter
jae
pushf
cmp
add
movl
jne
andl
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
scas
inc
xchg
lods
dec
out
jl
adc
test
arpl
cmp
jbe
jecxz
add
sub
sbb
jge
push
popa
lahf
sub
aas
outsb
bound
mov
jbe
sbb
pavgw
or
addr16
inc
xchg
jp
and
in
test
add
sbb
dec
rorl
and
mov
jl
int3
pop
push
dec
pop
adc
sbb
mov
lods
insl
out
sub
dec
sbb
mov
sbb
jbe
test
pusha
xchg
adc
aad
sub
cmp
mov
fnstsw
push
cs
cmp
popf
xchg
movsb
xchg
scas
stc
and
lahf
mov
ljmp
push
imul
js
adc
xchg
cmp
mov
mov
dec
push
insw
dec
cmp
or
sbbb
cmpsb
ljmp
and
xchg
cwtl
add
xchg
add
mov
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
jns
jl
lea
jecxz
xor
sub
mov
push
movsb
repnz
jmp
pop
mov
pop
stc
jb
xchg
flds
and
jbe
cli
jp
adc
scas
fistl
divl
pop
in
inc
fdivp
out
adcb
push
repz
and
cmpsl
cmp
xor
sahf
and
or
frstor
movsl
pop
dec
jb
inc
iret
inc
xor
cmpsl
js
add
inc
mov
mov
shll
aaa
test
cwtl
cmp
bound
aaa
pop
data16
push
xchg
add
mov
sbb
and
stos
and
test
test
jnp
leave
lods
in
adcl
push
cmp
es
lret
mov
dec
and
push
fcomip
or
lock
ljmp
not
mov
cmp
jg
mov
jbe
jno
sete
inc
pop
sbb
sbb
mov
rolb
mov
test
xchg
sub
push
mov
xor
mov
cmp
pop
jl
inc
and
cmp
xor
pop
or
push
enter
adc
pop
in
mov
adc
sub
cli
sahf
popf
sub
enter
and
sti
in
orl
push
mov
imul
xchg
mov
outsl
mov
push
mov
mov
pop
cli
or
pop
mov
push
aam
rorb
movsl
jbe
inc
push
mov
xor
jge
mov
mov
into
xor
push
mov
mov
add
ret
in
pop
nop
roll
jmp
das
sbb
push
sbb
hlt
loop
sti
or
xor
pushf
arpl
pop
in
hlt
mov
mov
mov
and
push
daa
aad
je
ja
xchg
repz
mov
sbb
jle
fcmovne
out
dec
xchg
outsl
loope
addr16
sarb
popa
mov
sahf
loopne
fiaddl
test
fs
push
gs
call
hlt
in
pop
cltd
bnd
ret
hlt
dec
dec
jbe
pushl
mov
ds
mov
cmp
pushf
ja
es
leave
lret
sti
sbb
and
movsb
fidivrl
and
sub
inc
subb
cmpl
sahf
aas
out
outsb
scas
inc
fldenv
scas
outsl
jae
cmp
std
inc
mov
scas
cmp
or
cli
sar
ja
fdivrs
xor
sti
ret
pop
cmp
mov
js
add
fistl
repnz
fildl
sbb
shll
enter
ja
and
adc
jnp
into
mov
push
mov
pop
adc
adc
ja
sub
xor
movsl
pop
push
jbe
inc
cmc
cmp
test
mov
lret
pushf
jle
adc
icebp
int
iret
inc
cmp
xchg
pop
mov
push
sub
push
cmp
mov
dec
lret
mov
int3
cmp
and
inc
add
add
add
or
adc
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
jge
xlat
add
ljmp
mov
sub
test
sub
lret
dec
hlt
dec
out
sbb
adc
xchg
sbb
lods
clc
adc
pop
repnz
icebp
lods
mov
cwtl
xor
xor
dec
popf
sub
sub
sub
pop
jae
icebp
cmp
mov
test
les
xlat
xor
inc
jnp
icebp
shl
lods
jle
pop
mov
jmp
inc
sub
mov
lahf
imulb
stos
cmpsb
std
cmc
dec
iret
pop
mov
leave
and
dec
cs
mov
push
jne
outsl
jecxz
in
pop
fdivrs
daa
fwait
or
mov
mov
push
add
or
cmp
mov
mov
pop
xor
jb
in
mov
push
or
andb
mov
mov
lods
in
dec
in
xor
dec
jb
leave
xchg
sti
mov
mov
cmp
xor
repnz
or
sbb
ret
movsb
xor
scas
push
cltd
pop
or
lcall
call
or
je
loope
test
fwait
cmpsb
inc
lret
jb
out
adc
fisubrs
sysret
push
push
and
jmp
cld
jno
sbb
cmp
out
outsb
jecxz
jne
sbb
cmp
lock
sbb
imul
push
ljmp
push
sarb
data16
testl
int
sub
fnstcw
push
lods
jae
or
nop
sub
in
jg
sbb
or
jne
jg
jne
sbbb
popf
jge
int
pop
lret
dec
pop
fwait
addr16
mov
movsl
or
fucom
jae
sbbl
cmp
mov
sbb
or
push
mov
loope
shrl
inc
mov
pop
jo
push
push
insl
jnp
or
out
push
pop
shlb
jl
ja,pt
mov
dec
int
popf
out
flds
jb
push
xchg
and
jne
xchg
lods
cli
fwait
jne
inc
adc
sub
pushf
jle
xor
pop
jge
cld
mov
andl
dec
daa
jp
sbb
mov
pop
cmp
pop
and
popf
sar
sub
push
adcb
adc
mov
mov
int3
mov
cwtl
pop
stos
les
or
mov
xor
mov
xchg
shrl
aad
jl
xchg
loop
sti
in
nop
mull
in
dec
mov
lcall
es
fidivl
pop
mov
iret
fldl
jbe
arpl
sbb
testl
in
sti
xchg
sbb
dec
xor
jmp
mov
add
xchg
jl
stos
mov
or
in
out
pop
mov
sub
sbb
test
dec
adc
pop
inc
dec
xchg
pop
cmc
and
pop
loop
mov
push
movsl
lds
sub
in
mov
data16
leave
adc
arpl
mov
xchg
inc
sub
pop
test
mov
push
cld
xor
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
aas
cmp
mov
jl
lret
jl
mov
mov
mov
pop
in
fdivp
xor
or
lock
and
test
dec
mov
cmp
iret
scas
insl
pop
into
int
xor
test
cmpsl
stos
shrb
jecxz
fsubr
decb
ret
aaa
lahf
ja
mulb
add
ds
lret
popf
imul
fadds
test
icebp
arpl
and
test
loop
out
cmp
shl
xchg
mov
in
xor
scas
mov
inc
inc
cmp
xor
aaa
add
xchg
sbb
sbb
adc
ret
mov
inc
cmp
mov
push
mulb
sarb
jge
xchg
add
sahf
dec
mov
dec
push
repnz
int
or
repnz
mov
push
ljmp
xor
adc
mov
or
scas
iret
call
int
fsubr
adc
sub
sub
jge
jno
ds
pop
loop
ror
ret
fwait
jae
dec
push
das
or
or
jle
mov
in
jae
cmp
xchg
loopne
scas
es
movsl
xor
dec
cmp
outsl
iret
pop
lahf
in
pop
cmp
iret
adc
cmp
mov
and
sub
dec
sub
sahf
pop
sarl
leave
sub
xchg
mov
dec
jbe
dec
fmull
push
xchg
mov
pusha
ljmp
test
pusha
and
pusha
jnp
repnz
rolb
fsubr
int
les
test
pushl
adcb
loope
add
cmp
inc
in
fstpt
push
push
jl
mov
imul
andl
xchg
add
add
cmp
inc
ja
inc
fadds
mov
mov
ficoml
repz
inc
dec
xchg
mov
aaa
and
push
mov
popa
scas
in
movsb
pop
mov
jb
mov
adc
cmc
jge
sbb
fmuls
pop
mov
cmp
pop
pop
scas
sbb
jae
sub
xchg
and
mov
mov
cmp
shlb
mov
ret
imul
or
mov
and
or
nop
gs
frstor
jg
mov
add
repz
ret
daa
inc
push
mov
and
lods
jp
inc
push
mov
addb
sahf
mov
adc
andb
inc
and
xchg
test
xor
pusha
push
add
inc
loope
xchg
xorl
cmp
sarb
outsl
dec
adc
int3
dec
rclb
outsl
fsub
cltd
mov
mov
pop
and
push
or
int
mov
sub
xchg
xchg
pusha
push
test
aad
test
movsb
push
mov
cld
out
lahf
sub
pop
imul
scas
xlat
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
and
cmpsb
addr16
lret
jl
outsb
mov
jne
stos
add
loop
call
lea
inc
mov
les
mov
fwait
or
mov
cmp
dec
cli
inc
and
lods
hlt
int3
shl
push
std
inc
fidivl
cmp
xor
push
repz
lock
aaa
ja
movsb
xor
xchg
dec
in
sub
roll
pop
mov
cmp
xchg
loope
mov
xor
mov
out
shll
mov
and
in
mov
adc
add
aam
add
push
add
cmp
outsb
push
pop
movsb
iret
add
xchg
mov
fwait
lahf
pop
inc
cltd
jb
imull
push
aaa
push
arpl
xor
mov
push
inc
sub
mov
mov
addr16
push
scas
cmp
imul
sbbb
mov
adc
pop
push
xchg
nop
adc
and
negl
popa
roll
xchg
ret
jns
fwait
aam
adc
mov
and
push
jno
call
adc
add
mov
push
jg
cmp
pop
xchg
negl
sbb
iret
test
es
cmpsl
fnsave
sub
ja
lock
pusha
jo
inc
dec
push
jmp
cmc
loop
nop
aas
loope
cmp
mov
mov
pop
cmc
insb
insl
xor
fbld
insl
fisubrs
inc
pop
stc
enter
push
pop
add
inc
imul
mov
cltd
shlb
adc
scas
stos
mov
push
ljmp
iret
sub
and
loope
cmp
sbb
mov
adc
mov
jns
in
and
fprem1
in
push
dec
mov
int3
fisubl
repnz
mov
mov
xchg
mov
cmp
jno
mov
jnp
aad
mov
cmp
jmp
aas
movsl
push
push
xrelease
mov
aaa
popf
cmp
xchg
popf
insb
mov
ret
jecxz
aam
and
fsubrs
test
cmp
fildll
xor
aas
inc
mov
data16
movsb
les
xchg
mov
scas
gs
inc
jns
mov
andl
outsl
inc
or
out
adc
lcall
call
or
das
jb
in
lock
data16
mov
jecxz
mov
mov
std
push
cld
lock
xchg
and
mov
sbb
sub
ret
mov
dec
pop
test
rcl
mov
xchg
pop
enter
fcompl
cmpsb
ja
es
ja
das
push
jl
add
int
test
xchg
jnp
adcb
lock
xchg
fstpl
bound
push
push
aam
jne
sub
xchg
jle
jecxz
daa
jnp
cwtl
xchg
xchg
cmp
jne
loop
jbe
adc
adc
jae
or
outsb
orl
sahf
xor
enter
es
push
inc
mov
sahf
inc
or
add
add
imul
mov
jmp
icebp
cs
ja
jno
mov
sub
scas
cmp
jns
jl
mov
idivl
adcl
inc
push
dec
ret
add
fdivp
rol
rorl
xor
inc
and
xlat
mov
jne
lods
cmp
dec
je
mov
push
pop
pop
icebp
fs
or
jb
pop
lock
data16
jmp
cmp
adc
jbe
push
loope
popf
jnp
dec
jae
sbb
rorl
sub
push
int
test
daa
jae
mov
loopne
mov
ror
xchg
lds
jmp
addr16
out
or
ds
mov
add
xor
sbb
shll
push
jmp
cmc
stc
add
cmpsl
cli
test
mov
aas
les
pop
adc
in
push
test
movsl
and
push
mov
mov
mov
mov
mov
sub
out
pop
adc
add
scas
jl
in
lahf
adc
mov
jno
push
add
out
std
js
test
test
test
dec
sub
push
push
loopne
loope
adc
faddp
ret
loope
xchg
pmulhuw
mov
in
fcomp
fistpl
cli
xchg
jmp
adc
fdivl
and
popa
or
pop
std
lods
dec
jmp
xchg
xchg
fwait
cmp
popa
into
mov
cmp
imul
mov
out
jne
pop
lods
push
adc
lret
push
stc
and
out
or
sub
inc
and
orl
add
cvtps2pd
into
loope
flds
rclb
js
xor
dec
jmp
push
add
jecxz
out
dec
mov
lret
mov
into
mov
jbe
jge
lret
jmp
and
sub
inc
cmp
aaa
and
xor
xchg
lahf
jg
or
and
push
inc
mov
add
sbbb
lea
fs
and
out
cwtl
mov
inc
inc
jmp
imul
call
sbb
cmp
adc
inc
and
rorb
pop
dec
shlb
lods
mov
and
scas
addr16
lret
xor
mov
mov
xchg
cmp
and
lods
mov
sub
or
outsb
bound
movsl
inc
xor
loop
sub
mov
jg
mov
xchg
out
cmp
lcall
add
xchg
mov
pop
test
repz
jbe,pn
mov
insl
dec
xchg
xor
test
out
jmp
xchg
in
or
sbb
sub
ja
aas
setns
ljmp
ja
sbb
fs
lods
aas
mov
adc
mov
xrstors
jp
and
sarb
xchg
pop
lods
pop
cltd
cmp
int
mov
jmp
aam
inc
jbe
aad
fisubrs
out
aaa
shl
fsts
mov
xor
sbb
push
pop
adc
arpl
sbb
jp
mov
mov
sbbl
add
scas
stc
mov
sbb
cmp
pop
push
rorl
loopne
add
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fcoms
stc
jl
lret
jl
test
jno,pn
lds
and
inc
fsts
imull
call
in
mov
pop
inc
fmulp
jnp
lds
sub
sub
fisubrl
mov
fnstcw
lods
xchg
xchg
xor
push
in
pop
aaa
or
mov
ss
addb
scas
xchg
adc
shll
mov
sub
call
jg
mov
mov
jge
int3
call
adc
pushf
fwait
dec
mov
adc
das
stc
notb
mov
push
popa
cltd
adc
or
icebp
inc
mov
adc
imul
jnp
loope
add
adc
ljmp
iret
aaa
loop
out
insl
add
scas
add
jno
dec
test
out
lret
insb
mov
mov
outsb
cmp
and
xor
dec
daa
int3
popf
scas
addb
mov
mov
xor
in
lahf
aad
mov
fdivr
jmp
mov
xchg
adc
fists
sbb
icebp
cmp
pop
jbe
push
add
jmp
cmp
xchg
cmp
mov
cmc
movsl
jp
xchg
adc
aaa
mov
ret
movsb
mov
cltd
outsb
adc
cmp
push
lock
in
mov
or
jl
adc
sbb
mov
stc
push
push
push
push
or
xchg
push
inc
pop
xor
dec
clc
push
repnz
rolb
fisubrl
nop
jmp
aam
lea
and
sbb
movb
xlat
sarl
in
je
push
fwait
rcll
xchg
and
inc
sbb
push
pop
pop
repz
imulb
fs
push
jg
and
xor
out
js
daa
jle
stos
stos
xchg
mov
dec
or
inc
ja
and
aaa
push
test
mov
jae
jns
fsubrs
pop
les
and
pushf
gs
add
sub
das
xor
loop
ds
jp
pop
ret
test
or
clc
adc
xchg
mov
sub
ftst
cs
sbb
fwait
sub
xorb
add
mov
scas
scas
cmp
dec
inc
add
xlat
sbb
enter
jmp
cmpsl
cmp
dec
ljmp
imul
xchg
pop
cmpsb
push
les
cmp
clc
inc
sar
dec
push
mov
xchg
pop
les
inc
outsl
andb
adc
in
cmp
pop
push
mov
lock
cmp
push
addr16
mov
sahf
insl
stc
das
aaa
mov
das
dec
mov
and
or
shll
cltd
jmp
lcall
int3
pop
push
lea
pop
dec
xor
frstpm(287
cmp
inc
hlt
test
ja
movsb
mov
add
sbb
out
cmp
jp
pop
out
mov
pusha
andl
cmc
pop
mov
aas
cmpb
stc
push
out
imul
pop
inc
mov
mov
stos
mov
mov
cmp
aad
cwtl
push
sub
std
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
ljmp
lret
jl
inc
loop
pop
lds
xlat
mov
mull
pop
movsb
pop
addr16
loopne
cmp
jns
inc
dec
mov
test
jb
jg
mov
xor
xchg
stos
add
mov
adc
xchg
test
enter
ja
push
mul
add
adc
xchg
mov
nop
nop
fisttpl
mov
notb
pop
add
pop
jmp
xor
mov
shrl
stc
repnz
push
into
fdivs
shlb
subl
xchg
bound
in
and
cmpsb
out
xor
movsb
xor
sub
int
or
inc
out
pop
sbb
out
loop
push
out
stc
out
mov
mov
daa
imul
sbb
dec
sti
repz
pop
add
jmp
mov
jo
or
pop
fsqrt
fwait
sbb
mov
aas
fnstenv
jno
xchg
push
mov
es
mov
push
push
movsb
in
or
add
push
lret
incb
inc
addl
cmp
rorb
mov
rclb
sbb
xor
test
cmc
pop
out
movsl
movsl
leave
ret
xlat
rol
loop
test
jecxz
lds
movsl
ret
out
aam
test
or
outsl
shlb
sbb
lock
call
mov
cmpsl
sbb
xchg
sub
imul
scas
cmpsl
xchg
xchg
stos
repz
cltd
js
add
mov
sbb
aas
inc
andl
ja
les
lcall
loope
fwait
mov
adc
dec
mov
sbb
or
sub
daa
scas
cmpsb
pusha
daa
scas
in
mov
nop
xor
mov
jns
fisttpll
dec
lret
imul
cmc
inc
push
xchg
sbbb
daa
jbe
sbb
call
add
insb
enter
out
out
in
out
push
mov
shrd
popf
imul
out
pop
lock
xchg
lret
dec
sub
jle
mov
test
sbb
sub
cmp
subb
ss
and
push
xchg
lock
sub
aaa
mov
dec
mov
fs
cmp
lret
divl
or
ror
jb
and
push
mov
xchg
lcall
sbb
xor
cmp
jae
cld
into
popl
pop
in
nop
dec
cli
stos
xor
aam
xor
mov
xlat
cli
push
bound
mov
aaa
outsl
sbb
pop
clc
mov
mov
in
loopne
jmp
jae
ljmp
and
pop
nop
sbb
mov
mov
lret
xlat
scas
push
pop
jns
das
mov
dec
cmp
aam
data16
outsl
js
xchg
out
rcr
and
pop
mov
mov
mov
xor
test
xor
imulb
mov
jae
inc
pop
mov
popf
stos
cmpsb
mov
daa
das
stos
inc
dec
sbb
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
and
aas
xchg
jns
jl
fcompl
mov
push
push
lock
in
lock
cmp
jo
decb
pop
jl
push
inc
xchg
sub
add
or
or
fistl
cli
stos
ret
out
and
xchg
scas
add
rclb
and
dec
pop
mov
leave
insb
std
push
or
jnp
cltd
sbb
xchg
cmp
sub
sahf
in
loope
cmp
sbb
shl
mov
mov
jno
and
dec
clc
lcall
cs
inc
inc
dec
and
xor
pop
jge
pop
int3
xchg
mov
push
scas
or
sbb
adc
cmpsb
outsl
mov
jecxz
daa
movsb
or
fisubl
ret
xor
aad
movsl
rcll
bound
std
push
lds
sub
sbb
dec
push
adc
mov
fnstenv
xlat
jne
pushf
fiaddl
inc
call
outsl
and
in
adc
xor
in
dec
fwait
je
pop
lods
pop
xor
hlt
lds
and
loope
repz
enter
pop
add
sbb
fbld
sub
jb
lods
loope
out
push
aam
test
pop
cmp
pop
in
in
mov
stos
aaa
or
mov
enter
dec
leave
cmp
inc
test
inc
xor
movsb
add
inc
mov
gs
jne
xchg
pop
arpl
into
cmp
call
mov
jne
sbb
hlt
push
hlt
cmpsl
jne
ja
mov
scas
mov
xor
xor
push
stc
sub
adc
ret
sbb
je
mov
mov
or
frstor
and
cmp
jno
jns
enter
loop
push
mov
add
pop
stos
push
sbb
sub
insl
add
or
outsb
daa
pop
cwtl
leave
fdivrl
ds
leave
xchg
aam
hlt
dec
pop
xor
adc
test
or
jle
mov
je
cmpsl
movl
sub
add
or
aaa
sub
idiv
and
push
dec
int
and
pop
orl
adc
scas
shl
dec
imul
sub
or
mov
mov
and
leave
fsubrs
in
rcr
sub
adc
ret
loopne
add
out
add
xchg
test
pop
aad
adcl
and
out
or
xchg
addr16
inc
mov
mov
sub
push
sbb
ljmp
inc
inc
or
mov
lock
push
outsl
in
inc
sbbb
mov
xlat
fildll
mov
mov
cmp
or
rclb
xor
js
push
sbb
arpl
lods
xor
call
test
jb
adc
iret
aas
lahf
jl
dec
addr16
adc
add
mov
out
int3
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
lea
sbb
lret
jl
lcall
inc
pop
lods
or
sbb
cmp
inc
add
xor
dec
sti
dec
fildll
or
mov
or
xorl
popf
or
dec
aad
sub
sub
xlat
movsb
mov
pop
shlb
adc
jns
add
mov
lahf
jge
pop
pop
add
xchg
push
test
sbb
pop
sub
dec
mov
sub
push
scas
cltd
and
sbbb
mov
fcos
out
shlb
xlat
in
pop
mov
jmp
aaa
aad
jecxz
lds
into
sbb
aas
pop
or
cmpsb
mov
inc
faddp
orps
cmpsl
rolb
gs
fwait
xor
dec
sti
pop
movsb
out
jne
pusha
sub
jg
inc
mov
cmpsl
xor
xchg
in
dec
mov
xchg
leave
stc
sbb
scas
sahf
mov
int3
lods
jge
dec
insl
add
les
or
adc
mov
scas
jbe
repnz
enter
imul
imul
mov
dec
imul
mov
lea
outsb
imul
adc
cmp
xor
add
xchg
pop
dec
pop
inc
adc
add
pop
adc
popa
repz
xchg
inc
pop
int3
icebp
mov
push
mov
adc
ret
fldcw
inc
ret
jmp
pcmpgtd
rclb
xchg
cli
out
adc
mov
je
rcrl
mov
jg
std
adc
lds
inc
fsubrs
call
fnstenv
inc
mov
sub
gs
and
cs
aaa
pop
mov
lcall
cmpsl
rol
jnp
lahf
scas
dec
push
shlb
sarb
cltd
repz
scas
enter
and
ret
mov
xor
mov
sarl
mov
add
add
mov
sub
push
jne
jae
jl
lcall
cmp
mov
jg
mov
or
add
cld
pushf
cmp
insl
lea
xor
out
inc
push
insl
xlat
es
bnd
xchg
fmulp
and
jp
test
push
sahf
es
mov
push
sti
ret
je
outsb
xchg
mov
mov
ds
pop
and
push
sub
pop
clc
das
lret
inc
fdivrl
sub
pop
sbb
outsb
sti
jle
in
mov
movsl
or
popa
push
jb
pop
xchg
arpl
sub
sub
dec
mov
lock
mov
mov
inc
stos
or
jmp
fisubrl
and
scas
inc
pop
cltd
mov
cmp
cs
ds
pop
dec
dec
sbb
insl
lds
adc
adc
mov
out
inc
cs
push
dec
pop
aas
es
mov
and
cmpsb
push
mov
inc
ret
lcall
lods
and
clc
cltd
out
ljmp
sar
out
in
xor
repz
mov
sar
pop
and
ret
int3
or
cwtl
je
lock
shrb
pop
xchg
aam
mov
sub
out
xchg
insb
mov
push
fmull
rol
call
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
jo
subl
add
test
cmpsl
jno
xor
cmpsb
lret
jecxz
into
in
iret
fcmovnu
sbb
cmp
xor
cmp
imul
xchg
out
xchg
adc
sbb
movsl
mov
or
in
push
fdivp
add
fcomip
sahf
cmp
push
mov
cwtl
icebp
inc
mov
in
adc
sbb
test
push
cmp
dec
inc
inc
mov
out
sbb
out
fwait
pusha
sbb
and
lret
dec
inc
int
ror
and
dec
jecxz
mov
xor
mov
xchg
sbb
adc
sub
enter
cli
xchg
jnp
loopne
lahf
inc
lock
mov
loopne
arpl
std
mov
fcomps
cwtl
mov
sbb
mov
cli
std
cld
pushf
mov
dec
in
inc
mov
add
fdivr
out
adc
cmp
jle
add
dec
cmp
subl
cmp
sub
jmp
mov
lcall
sbb
out
add
inc
pop
add
pop
aaa
mov
insb
rorb
in
jno
sti
mov
dec
mov
add
mov
inc
or
sbb
sbb
jno
mov
cmpb
mov
shrb
dec
sbb
and
jae
or
sbb
add
mov
mov
sbbb
inc
nop
jno
sbb
dec
mov
mov
mov
cmpsb
mov
int3
mov
in
jmp
int3
push
inc
and
insb
out
stos
insl
fsubr
push
stos
iret
cmpsb
pop
dec
lds
xchg
add
jae
in
mov
sbb
jae
rcll
scas
dec
mov
in
cmp
lahf
push
enter
push
in
ret
adc
adc
jne
adc
lahf
pop
jg
jae
dec
mov
mov
outsb
mov
jbe
lock
orb
jmp
adc
xchg
jbe
xchg
xchg
mov
push
sub
pop
pop
repz
or
mov
pop
pop
mov
js
push
adc
jnp
mov
dec
pop
sbb
repnz
sbb
in
mov
sbb
loope
int
push
sbb
sbb
or
adc
adc
sarl
lcall
xor
aam
inc
cmpl
js
mov
and
mov
xchg
shl
inc
stos
stos
test
bound
lea
scas
idivl
into
mov
dec
add
jno
jg
add
xor
les
xlat
pop
aad
xor
mov
add
xlat
mov
inc
sub
outsl
insl
dec
clc
test
mov
jns
rcl
orl
xchg
inc
or
fimuls
shll
lret
push
jne
and
sti
stos
stos
fmul
call
shrb
mov
and
push
movsl
push
add
jmp
jmp
push
daa
inc
imul
xchg
popf
pop
sbb
test
mov
jns
jl
sub
xlat
adc
movsb
xor
or
sub
cmp
mov
jbe
addl
enter
js
fs
out
and
and
fwait
aam
ficoml
mov
outsl
decl
or
xor
xor
adc
mov
add
fldl
pushf
dec
ss
enter
std
mov
xor
insl
or
hlt
popf
movsb
nop
sti
ret
dec
aas
or
pop
roll
inc
aas
and
push
adc
nop
cmp
in
pushw
aaa
aad
cld
ja
and
imul
mov
cmp
lods
mov
pop
sbb
in
mov
test
aas
xor
out
adc
insb
movsb
stos
cli
pop
mov
inc
push
jmp
xor
aaa
add
test
pop
xor
scas
or
test
push
sub
and
pop
inc
mov
jb
lahf
gs
gs
mov
push
add
cli
imul
lods
ds
xchg
fldenv
mov
je
lods
stos
xor
mov
add
mov
ljmp
cmp
dec
mov
pop
leave
lea
test
jmp
fsubrl
and
aas
mov
mov
mov
add
iret
mov
pushf
xor
movsb
daa
ss
clc
lret
mov
cld
pop
cmc
xor
movsl
dec
pop
in
jae
mov
sbb
fnstsw
mov
jle
jns
add
pusha
js
mov
mov
inc
add
pop
mov
jno
pop
cmpsb
push
fistpll
mov
sbb
mov
cmovae
mov
mov
aas
mov
int3
sar
stos
mov
sub
jecxz
lahf
mov
ljmp
mov
push
repnz
mov
add
popa
enter
das
sub
xchg
in
adc
bound
push
mov
rcl
sbb
and
mov
or
push
cmp
mov
jecxz
int3
aad
mov
ret
inc
repz
push
push
sub
sbb
jle
repz
jno
cmp
rcrb
pop
cmpsb
jb
decl
jnp
incb
testb
insl
xchg
push
movsl
add
out
nop
mov
xor
mov
loop
outsb
je
push
out
insl
scas
sbb
lods
fs
mov
ret
repnz
cmc
vmovntdq
lahf
jl
inc
mov
pushf
cmp
sbb
xchg
outsl
pushf
xor
divl
fimuls
xor
loope
inc
stos
cli
jmp
mov
xor
cs
xor
or
sbbl
std
mov
stc
in
mov
rcrl
testl
data16
dec
or
in
pop
sbb
xchg
mov
cmp
mov
out
bsf
enter
pop
mov
cmp
arpl
jle
imul
cmp
jnp
and
movl
push
cmp
ret
cmp
add
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
mov
jl
lret
jl
cmc
fbstp
pop
xor
jl
dec
stos
and
call
jb
ja
lea
into
andl
lret
adc
in
std
insb
pop
or
inc
jae
std
add
mov
mov
scas
add
stos
mov
inc
imul
push
shrb
pop
xor
sbb
aam
scas
aad
shl
lcall
mov
mov
cmp
mov
arpl
in
outsl
xchg
or
xlat
inc
test
cmp
shrb
xor
jmp
sbbb
mov
lods
test
andl
pop
sti
mov
popa
xchg
xor
aas
adc
fdiv
stos
xchg
lock
jmp
mov
shrb
and
push
out
add
repnz
lret
cmp
adc
fs
mov
jl
test
cmpsl
jp
dec
pop
cltd
lods
add
in
or
clc
xchg
pushf
inc
ret
call
or
shlb
xorb
sbb
loope
jg
add
js
leave
lea
sub
mov
sbb
sti
xchg
cmp
ljmp
pop
push
in
xor
cltd
dec
fcmovnu
xchg
jbe
out
or
fsubp
call
je
scas
xchg
sbb
fcoml
test
popa
loope
fdivrs
aad
jne
adc
into
pop
divb
inc
sub
mov
loope
and
xor
inc
ljmp
and
and
xchg
ja
leave
pop
fs
jae
xor
push
sub
pop
adc
lods
aas
cmpsl
dec
pop
callw
mov
mov
loop
imul
jns
and
xchg
dec
dec
push
pop
insb
cli
pop
or
xor
rcrl
mov
pop
dec
xor
in
xor
stc
mov
mov
or
jo
in
shll
mov
mov
adc
push
ljmp
add
push
sarl
xchg
and
inc
jae
adc
fstpl
fs
gs
xor
dec
fs
filds
push
mov
jnp
xchg
fimull
mov
fildl
mov
lret
arpl
or
sub
in
and
gs
cltd
cmp
out
int3
hlt
fwait
push
push
add
fcomps
cmp
insb
je
ja
rolb
xor
add
and
and
fiadds
subl
js
les
pop
shll
gs
in
shrl
in
pop
test
mov
xchg
addr16
inc
push
push
andl
clc
push
div
xchg
test
pop
jmp
cmp
fs
je
or
in
mov
mov
or
nop
ror
jns
mov
dec
aaa
push
orl
xchg
mov
jbe
test
inc
scas
in
sbb
lock
enter
adcb
stos
cs
dec
mov
test
pop
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
pop
in
lea
jl
lret
jl
mov
inc
xchg
stc
and
cmp
add
mov
int
fimuls
idivl
addr16
mov
cmp
pop
hlt
push
sbb
push
push
test
aad
lcall
jge
inc
mov
scas
sti
xchg
dec
mov
addr16
push
and
leave
pop
psraw
shl
push
rorb
jmp
xchg
loopne
testl
int3
jb
push
hlt
adc
iret
push
movsl
js
xor
fimull
pop
subl
into
push
add
fisubrl
popa
mov
out
orl
pop
imul
dec
cli
clc
cs
test
lods
out
jge
jae
das
outsb
jae
xchg
fs
inc
xor
xchg
sbbl
les
jbe
mov
lods
sahf
mov
fsubs
mov
test
outsb
mov
clc
pop
push
xor
insb
cmp
push
loop
dec
inc
outsl
xchg
jne
sti
and
addl
psrld
add
jno
mov
incb
aad
leave
data16
or
jecxz
push
mov
sarb
push
pop
adc
adc
movsb
jg
into
loop
and
in
mov
loop
mov
ret
xchg
shll
ret
xlat
dec
cvtps2pd
pop
bound
test
jg
jne
push
cmp
mov
or
shll
push
cmp
hlt
or
shll
jnp
ljmp
pop
sub
dec
rcll
sub
leave
pop
cmp
xchg
jg
iret
mov
add
gs
inc
cltd
lds
xchg
pop
push
lods
mov
pop
mov
dec
out
and
dec
cwtl
sub
cmp
daa
js
mov
cld
mov
dec
ljmp
mov
pop
xor
lock
outsl
sub
xor
sbb
adc
lea
ljmp
data16
dec
lds
fs
jns
movsl
dec
cwtl
loopne
dec
into
repz
cld
mov
push
inc
out
and
arpl
mov
and
mov
and
aas
aaa
mulb
mov
jb
push
icebp
lods
lret
push
mov
mov
fisttpll
lds
jge
sub
mov
xchg
sub
push
ljmp
lds
sbb
ficomps
and
xchg
ja
sbb
xchg
lods
popf
xchg
mov
push
int
aam
sub
pushf
fsubl
jl
sti
mov
arpl
pop
inc
fsubs
or
cmp
fnstsw
sbbl
add
icebp
mov
sub
fstps
fsubrs
adc
negb
or
les
push
and
inc
ljmp
daa
push
rcll
cmp
ds
mov
xor
push
pop
cmp
mov
xor
add
in
sti
es
mov
jg
cmp
xor
adc
mov
sti
insb
pushf
xchg
lds
mov
pop
daa
bound
dec
mov
or
cmc
pusha
add
add
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
jecxz
lea
cmp
jl
hlt
aad
and
jno
jl
mov
int3
mov
add
stos
push
mov
gs
cmp
inc
les
jae
sar
addr16
pop
mov
les
ljmp
ficoms
dec
adc
repnz
scas
les
daa
iret
hlt
mov
cmp
not
mov
push
int3
mov
xchg
sub
scas
pop
ds
push
jo
loop
cmp
push
arpl
sti
je
jae
lcall
and
es
ret
dec
call
push
aam
add
push
dec
popf
add
inc
stos
dec
in
aas
rcr
mov
test
test
or
sar
js
test
xor
cmp
or
jmp
pop
mov
sub
mov
jo
or
nop
mov
jl
mov
mov
mov
in
or
out
mov
fistps
jle
xchg
sbb
aaa
add
stc
stos
loope
arpl
pusha
cmp
gs
mov
push
popa
sub
jl
lahf
or
das
popf
lds
or
test
fnstenv
lret
pop
scas
dec
xorl
mov
jbe
ds
jg
mov
push
cltd
faddp
mov
xchg
xchg
cwtl
sbb
dec
mov
rcrb
cmp
pushf
fnstsw
cmp
lock
jae
xlat
push
into
test
pop
std
sub
inc
lret
push
ss
xchg
test
dec
test
push
mov
addl
popa
mov
gs
ret
push
std
mov
rolb
rcrl
jns
ret
mov
sub
cmpsl
mov
xchg
sbb
cmp
jl
dec
lret
xchg
leave
mov
inc
pop
mov
cmc
fmull
or
cmp
mov
sbb
adc
dec
adc
sbb
call
out
push
cmp
loop
jg
stos
xor
lahf
jmp
lcall
movsb
and
xchg
mov
xchg
xchg
xchg
orl
push
or
mov
cmp
dec
sub
push
clc
cmp
pop
sub
mov
push
jg
shll
jno
xchg
dec
jle
or
into
aaa
dec
mov
add
jl
daa
int3
insl
test
enter
sub
sahf
mov
aam
and
xchg
dec
inc
lret
pop
loope
dec
pop
cli
scas
mov
iret
fstps
loop
or
stos
shrb
xor
jbe
cmc
add
mov
cmp
adc
cmp
xchg
xchg
pop
xor
add
icebp
in
xchg
fbld
cmp
push
xchg
arpl
mov
sti
fwait
push
xor
xchg
lahf
clc
add
aad
cltd
sbb
fwait
xchg
lock
push
shr
inc
cwtl
cwtl
xor
stc
jo
sti
sub
imul
lods
cmp
jae
jecxz
cli
ret
cli
push
fidivrs
mov
xchg
lret
mov
sub
je
adc
not
sahf
test
popf
leave
lea
cmc
adc
inc
mov
inc
out
enter
inc
aaa
mov
and
and
pop
jmp
dec
add
jno
push
adc
mov
xor
add
imul
jmp
lret
jo
or
jmp
sahf
xor
insb
cmp
mov
lahf
jl
lret
jl
fnsave
jg
xchg
push
and
push
inc
add
mov
xchg
mov
or
pop
pop
or
cli
stos
jo
cwtl
mov
or
movsl
adc
adc
cmp
pop
xor
jno
ss
or
mov
sub
xor
add
mov
sbb
addl
mov
xchg
insl
mov
inc
outsb
or
aad
cltd
pushf
out
ss
dec
into
sbb
outsl
cmpl
cmc
lahf
cmp
mov
jno
test
sub
icebp
adc
inc
dec
jge
jecxz
mov
inc
call
add
fadds
push
loope
aad
inc
dec
push
mov
js
jne
pop
or
dec
fldl
rolb
or
push
sarl
daa
lods
mov
add
and
in
jne
xor
scas
mov
lea
mov
and
sub
jge
xchg
aas
push
adc
mov
iret
xor
mov
sbb
jmp
hlt
mov
rol
cmp
xchg
test
push
jns
sbb
lret
xor
xlat
test
and
out
push
adc
jge
jmp
or
das
jmp
out
and
push
cmpsl
and
or
call
in
out
inc
nop
xchg
cmpsl
ja
jge
lcall
rol
cmpsb
icebp
sub
scas
mov
fs
or
sarl
inc
xor
popa
pop
lods
jmp
ret
jmp
xchg
inc
les
and
stos
imul
adc
or
fs
dec
or
ja
add
add
mov
fimull
fwait
ret
lea
rcrl
inc
out
inc
sahf
pop
push
lret
cmp
ret
dec
rcr
jmp
les
inc
fstps
pop
loope
mov
mov
sbb
cld
call
mov
lret
mov
xor
xchg
mov
adc
idivb
xor
outsl
pop
pushf
mov
dec
mov
inc
pop
jp
popf
int3
aas
leave
jg
mov
ds
addl
outsl
lahf
pop
pop
sbb
movsb
stc
cli
sti
add
out
jmp
lods
outsb
lcall
add
mov
sbb
jae
clc
push
mov
mov
mov
push
mov
fld
jle
into
xlat
dec
lea
mov
gs
push
dec
inc
or
xor
test
sub
adc
sqrtps
dec
ret
adc
int
adc
aaa
cmp
clc
push
mov
in
les
popf
mov
dec
rclb
cmp
fidivrs
arpl
sahf
faddl
mov
sub
pop
cmp
push
push
xor
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
sbb
cwtl
jl
lret
jl
cmp
adc
movsl
test
inc
repnz
mov
cwtl
push
xorb
dec
jo
sbb
idivl
dec
daa
icebp
ljmp
mov
adc
insb
sbb
push
jbe
paddusw
and
mov
push
mov
jle
jns
mov
adc
fwait
mov
cld
xchg
imulb
lds
shlb
loope
into
jle
push
cmp
outsb
insb
cmc
adc
fwait
inc
nop
sbb
cmp
stc
cmp
and
pop
dec
mov
cmpsl
in
lds
gs
sbb
mov
and
icebp
mov
pushf
xor
shlb
xor
movsl
adc
je
sti
repz
cmp
out
je
outsl
imul
mov
adc
mov
mov
adc
push
add
cld
mov
and
lcall
scas
int
lret
dec
mov
cltd
popf
mov
stos
lahf
mov
mov
add
lds
pop
or
push
loop
repz
repnz
insb
adc
jle
jno
push
mov
mov
fcmovnb
pusha
sbb
mov
inc
xchg
mov
mov
js
pop
or
mov
add
inc
lods
rclb
aad
insb
ja
sub
mov
ficompl
pop
sub
popf
in
in
leave
bnd
bound
lahf
dec
test
ljmp
mov
in
jo
inc
lret
lods
xlat
pop
push
dec
and
inc
das
idivb
ret
dec
daa
mov
or
sub
pop
imul
inc
and
pop
mov
jb
inc
pop
dec
inc
fldenv
mov
ljmp
and
mov
cmp
rcr
dec
dec
movsl
inc
stos
sbb
push
xor
xor
mov
mov
push
or
arpl
stc
subb
fcomps
dec
mov
cwtl
mov
xchg
jmp
sbb
insb
sti
cmp
cmpsb
sub
nop
out
fildl
pop
inc
jp
sbb
xor
fisubrs
ret
push
mov
pop
pop
xchg
inc
je
fwait
and
lret
loopne
push
dec
and
add
and
pop
xor
pushf
mov
dec
sbb
jmp
inc
pushf
mov
push
pop
pop
sbb
adc
lods
es
xor
inc
sbb
adc
or
in
mov
lea
jae
sbb
loop
imul
into
or
push
jbe
xchg
stos
enter
mov
movsl
arpl
shlb
or
aas
or
ret
aam
mov
mov
mov
pop
add
stos
xchg
out
or
sti
pop
mov
push
jl
pop
mov
push
mov
subb
push
jmp
inc
clc
mov
push
sub
jnp
cli
mov
sbb
hlt
lret
pushf
mov
push
shlb
into
sarb
mov
adc
das
and
mov
push
push
xorl
pusha
sub
andl
or
sti
add
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
fldenv
jl
cmpsl
jns
jl
sub
mov
lret
and
lahf
sub
pop
lret
xchg
cmp
adc
fdiv
ret
inc
stos
ds
stos
sbb
add
fwait
ret
and
cmpsl
loopne
loope
mov
repz
jns
popf
mov
les
arpl
adc
and
stc
jne
popa
push
xchg
icebp
pop
inc
addr16
loope
dec
dec
sbb
mov
pop
pop
rcll
cmpsl
sub
mov
cltd
stos
scas
push
addr16
mov
aad
out
addr16
pop
push
xor
mov
sahf
inc
fdivs
lods
mov
cltd
aaa
cmp
or
mov
mov
aaa
lods
mov
cwtl
mov
in
jnp
cmp
sbb
lcall
push
jmp
jmp
pop
insb
jne
mov
pop
pop
add
and
sub
adc
std
xor
lea
imul
sub
shlb
inc
pop
and
insb
out
sahf
mov
xor
insl
repz
inc
mov
push
push
or
loopne
push
inc
jns
rorl
rcrb
cltd
jmp
sbb
jbe
or
jge
jns,pn
pop
andb
int
cmc
xchg
adc
sub
pusha
lret
jo
fsub
je
adc
movsl
aad
iret
mov
int
divl
cltd
cmpsb
or
jp
jge
arpl
jecxz
sbb
cmp
pop
ror
mov
aaa
mov
outsb
push
fld
jmp
lods
cmc
les
bound
cmp
add
add
adc
mov
sub
xlat
lock
in
push
dec
bound
cmp
scas
stc
and
or
out
pop
out
mov
shlb
stos
int3
ret
lock
inc
xchg
ja
fcmovnb
mov
adc
adcb
pop
mull
inc
xor
jno
stc
mov
jae
lret
push
and
test
mov
pushf
imul
jo
xor
and
mov
cmp
adc
addl
in
mov
outsl
sbbb
fildll
sub
mov
outsl
je
pop
jmp
mov
jecxz
push
adc
lods
bnd
in
xor
and
add
jge
fs
loop
mov
push
imul
insl
inc
sbb
cmp
in
rorb
mov
aad
mov
and
arpl
lods
inc
adc
jp
adc
jne
xlat
insb
rolb
dec
mov
lahf
ljmp
in
mov
adc
aas
mov
pop
inc
jbe
add
dec
sub
xchg
in
mov
jl
inc
jle
js
imul
aas
out
push
pop
sub
loope
jbe
or
push
dec
int3
aad
shrl
out
lock
in
in
inc
xchg
adc
lods
data16
cwtl
adc
xchg
sub
sbb
outsl
repnz
pop
loop
lods
ja
inc
aaa
add
pop
mov
loop
mov
mov
mov
cld
mov
mov
out
cmp
sbb
enter
dec
ds
shll
mov
sbb
fimull
dec
cmp
xchg
dec
testb
rep
cs
cli
lods
iret
iret
pop
inc
mov
jecxz
mov
sahf
sbb
inc
jg
xorl
out
add
roll
add
push
aam
jns
adc
jl
jns
jl
pop
cmpsb
or
jns
or
pushl
jbe
sbb
cltd
out
sub
cli
add
cmpsl
je
in
mov
xor
mov
out
lods
dec
mov
int3
fscale
sbb
ret
jmp
sub
pusha
jno
fcmovne
gs
fsts
movsb
xchg
das
push
xor
and
xchg
gs
sub
aad
mov
sub
decb
std
imul
mov
push
push
cltd
mov
pop
je
and
roll
fcomip
dec
mov
jp
push
mov
mov
movsb
in
out
test
dec
xchg
push
or
sahf
fcmovnbe
mov
xlat
sbb
sbb
in
mov
jo
adc
adc
lahf
and
loop
add
ljmp
or
push
push
inc
adc
dec
mov
adc
repz
stc
call
mov
pop
add
adc
adc
mov
xchg
push
mov
cld
mov
pop
cmp
sbb
mov
aaa
xorb
push
pusha
bound
sbbb
outsl
xchg
xchg
cmp
cmpsl
aaa
dec
inc
in
jecxz
cmpsb
pusha
add
sbb
or
repnz
mov
ret
jo
repnz
mov
mov
in
sti
jb
ret
fildl
int
inc
pop
movsl
lret
dec
fnstcw
xchg
out
xor
inc
ret
mov
test
jo
push
jo
into
fistps
xchg
in
mov
mov
mov
pop
mov
aaa
js
adc
lea
push
fcmovnbe
scas
aam
adc
in
aam
fbld
xchg
fstpl
movsb
mov
cmp
mov
popa
notl
cmp
push
or
imul
subb
inc
push
daa
xchg
xor
faddl
ss
or
push
mov
cwtl
imul
aam
xchg
add
push
cltd
sub
add
cmpsb
cmp
cmp
in
push
lock
jne
je
xor
sbb
enter
inc
aas
and
jno
mov
sbbb
mov
test
addr16
mov
push
adc
or
rolb
pop
dec
stc
cli
inc
inc
mov
les
je
call
out
ficoml
stc
push
movsb
daa
cwtl
mov
sub
sbb
fwait
stc
or
push
pop
je,pn
push
inc
jb
mov
sti
add
loopne
sbb
pusha
out
sbb
scas
sbb
jne
lahf
lcall
push
and
push
fnstcw
adc
iret
push
sbb
les
out
lods
mov
and
inc
mov
cmp
movb
push
or
iret
shll
xlat
out
rorl
clc
ljmp
mov
and
inc
lods
cmp
and
loopne
push
and
fucomip
inc
aaa
fidivrl
ret
js
cmp
stc
cmp
ljmp
and
push
push
jg
movsl
dec
jnp
dec
lret
jp
or
xor
mov
lahf
shl
xchg
fcoms
nop
push
mov
adc
cli
scas
stos
mov
clc
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
mov
jl
cmpsl
jns
jl
sarb
mov
lret
lret
xor
cmp
xlat
fadd
inc
push
mov
push
test
mov
add
inc
iret
imul
rcll
pop
jg
inc
dec
inc
cwtl
cmpsb
mov
jmp
dec
push
sbb
and
decb
into
adc
in
add
jl
and
sbb
jecxz
es
imul
push
cmp
fiaddl
jnp
jecxz
or
jne
repnz
rorl
jle
aaa
popa
shll
scas
imul
add
lock
mov
aaa
and
gs
dec
std
test
xor
or
mov
jmp
cmp
fbld
jns
jl
push
push
sub
or
hlt
into
push
add
roll
inc
or
ljmp
cmp
mov
std
jle
fwait
mov
pop
sarb
addr16
out
hlt
movl
js
pop
or
sbb
outsl
stos
jle
jge
push
das
icebp
push
ja
cmp
xor
out
popa
shlb
xchg
xor
mov
mov
je
flds
push
ljmp
jb
inc
xbegin
jnp
imul
push
jle
mov
mov
mov
or
mov
xor
sbb
insl
das
mov
dec
clc
rcrl
and
je
jno
daa
bound
in
xchg
in
loopne
aas
jae
leave
lods
loopne
lahf
xor
mov
movsb
stc
cmpsb
daa
aas
stos
hlt
fmull
int3
sbb
icebp
fstl
pop
negb
sahf
xor
into
movsl
pop
jge
repnz
test
mov
pop
xlat
mov
pop
inc
sub
push
out
pop
lcall
cli
out
imulb
testl
jne
mov
jb
out
setnp
fwait
sub
mov
pop
mov
notl
jns
imul
or
and
inc
loopne
orl
pop
iret
mov
andb
repz
or
add
dec
ret
call
out
push
pop
inc
int3
cmp
imul
insl
test
dec
mov
enter
shlb
add
stc
loopne
es
test
jo
push
xor
fwait
sub
and
and
mov
xlat
lods
cmp
shlb
les
cmp
mov
xor
sti
das
inc
addr16
mov
inc
popa
int3
xchg
and
xchg
inc
cwtl
insb
repz
divb
loope
adc
xchg
mov
push
shrl
mov
xor
aaa
mov
hlt
out
cmpsl
sti
mov
inc
inc
daa
push
sbb
cmp
aam
mov
push
xchg
lret
push
aaa
pop
sbb
fcomi
xchg
pop
int
push
push
or
cs
scas
fldln2
fwait
mov
mov
push
mov
jle
sbb
push
push
or
cwtl
mov
and
shl
pop
xor
stc
and
sub
fbstp
add
imul
xchg
cmp
test
icebp
add
sti
cwtl
or
mov
xor
add
mov
jmp
push
mov
test
xchg
jo
ds
jl
add
repz
cld
jp
je
mov
or
pop
hlt
lock
cmpl
ret
cs
dec
lds
lock
mov
pushf
out
pop
sbb
int3
insb
lahf
cmpsb
jle
dec
inc
xchg
lods
xor
push
sahf
dec
xlat
fistpll
mov
mov
xchg
pop
test
iret
mov
mov
push
and
test
jne
clc
imul
xchg
or
out
mov
cbtw
xchg
cmp
subl
pop
outsl
call
mov
and
add
int
ds
scas
mov
inc
dec
pop
enter
cld
adc
xchg
cltd
adc
mov
sub
push
mov
cmp
xchg
in
mov
inc
in
mov
pop
xor
adc
sbb
xor
lods
loop
cmp
jge
dec
dec
in
insl
stc
lret
imul
and
pop
or
xor
test
out
ret
jl
lods
push
out
pop
sahf
dec
sbb
xchg
sub
mov
dec
xchg
xchg
rcr
mov
addl
sub
sahf
cld
push
stc
mov
sub
xchg
inc
fbld
insb
pop
pop
xor
stc
out
mov
inc
pop
out
jp
mov
test
outsb
mov
notb
or
pop
movsb
xor
push
dec
sub
push
inc
pop
cmp
hlt
mov
lretw
cs
pop
loope
or
add
or
les
clc
fsubrs
cwtl
inc
jne
mov
mov
repnz
mov
mov
fsubs
push
aad
xor
loopne
iret
test
cwtl
cmp
int3
data16
sub
insl
sub
sbb
dec
and
scas
jno
fwait
push
cmp
cli
repz
jl
insl
add
lods
push
fldt
mov
mov
rolb
mov
leave
pop
push
or
xor
rcll
and
xchg
sbb
lods
xchg
stc
cmpsb
xor
mov
mov
fisttps
fdivs
iret
pusha
sbb
cld
pop
adc
sbb
pop
adc
jecxz
jecxz
mov
movsl
shrl
lea
test
rol
dec
pop
scas
push
cld
inc
loope
mov
push
adc
mov
xor
inc
sbb
push
test
enter
inc
sub
vmwrite
stos
xchg
in
jp
pop
cs
mov
and
push
mov
fdivl
scas
fistl
mov
jecxz
frstor
cmp
push
add
aad
dec
dec
mov
inc
outsb
cmp
std
mov
mov
stos
lods
lahf
sahf
lret
fiaddl
in
adc
loopne
dec
movsl
jo
loopne
cmp
in
sub
sbb
mull
inc
pop
push
fisttpll
xlat
sbb
movsl
cmp
cs
popa
daa
push
or
das
sub
push
mov
sbb
pop
leave
lret
roll
insb
push
mov
or
mov
data16
mov
dec
adc
nop
jp
xchg
out
repz
ret
cmp
test
int3
push
movsb
sbb
mov
mov
adc
dec
dec
ret
in
int3
std
lret
cwtl
in
pusha
jns
out
ds
xchg
sbb
mov
xor
jne
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
ja
stos
jl
cmpsl
jns
jl
js
xchg
and
dec
out
jo
cmp
or
arpl
xor
pop
data16
das
pop
popf
push
mov
in
pop
push
sbb
mov
dec
ud0
jns
fs
imul
or
nop
mov
inc
sbb
or
xor
dec
imul
je
xchg
stc
pop
xchg
int
xlat
push
out
xor
in
dec
xchg
adc
int3
loopne
idivb
cmc
dec
push
xor
cld
xchg
cmpsb
ficoms
push
popa
lea
and
enter
jne
test
cmpsb
ds
jmp
pop
cmp
dec
pop
cmp
add
sub
pop
outsb
adc
mov
stc
push
inc
addl
mov
mov
add
fisttps
repnz
ds
adc
xchg
out
ljmp
add
cmp
cltd
int3
out
js
mov
or
xchg
mov
rorb
add
dec
repz
mov
jae
adc
imul
and
ds
pop
pushf
and
dec
or
dec
sarb
xor
mov
pop
adc
jmp
cmp
mov
cli
or
movsb
mov
cs
jmp
xor
and
dec
rolb
clc
enter
lahf
xorl
sbb
sbb
jb
aam
inc
xchg
or
add
pop
mov
lahf
mov
shl
and
rep
mov
push
and
adcl
std
jmp
adc
fidivs
xor
mov
addb
fimuls
jp
xlat
mov
loop
jb
imulb
sbbb
dec
sbb
add
sti
mov
push
pop
add
and
popf
sbb
lcall
pop
jmp
sysret
lock
mov
ja
add
mov
xchg
or
add
rcrl
sbb
jno
outsl
test
mulb
dec
int3
in
push
test
pop
push
je
xor
cltd
dec
xchg
inc
jno
dec
cwtl
cmpsb
xchg
or
mov
pop
sub
push
in
mov
cmp
ret
xchg
inc
rcr
mov
out
shlb
icebp
jle
jg
jo
pop
and
adc
mov
and
mov
fxch
sub
fnsave
fs
nop
or
add
xchg
cmp
or
in
adc
xchg
mov
mov
gs
mov
mov
cmp
adc
bound
push
loope
dec
jne
mov
push
add
mov
insb
dec
rcr
jmp
xchg
mov
lahf
into
sbb
mov
inc
leave
fsubrl
icebp
call
test
mov
mov
int3
add
mov
gs
jb
add
in
xor
mov
push
aad
popf
out
faddl
shll
xor
nop
std
mov
lods
jbe
cli
xchg
dec
xor
daa
scas
ds
sbb
out
cmpsb
cmp
rolb
jae
hlt
sti
scas
cmp
shlb
add
push
sub
add
jae
insl
mov
or
dec
xchg
mov
movsl
jp
leave
ret
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
add
das
add
push
pop
xlat
ja
movsl
push
fldt
sbb
jb
mov
fcomip
mov
jb
imul
je
scas
negl
jle
xor
jns
in
mov
adc
sub
jmp
fildll
add
int3
mov
adc
inc
pop
xchg
mov
or
scas
jg
inc
push
xor
mov
sahf
shlb
adc
fcoml
xchg
fs
add
ffreep
add
subl
orb
fwait
sbb
aam
data16
jbe
hlt
xorl
lcall
adc
in
push
fstps
pop
imul
test
mov
jbe
cmp
dec
sbb
sbb
jecxz
ljmp
scas
pusha
sbb
cmpsb
addl
or
icebp
jmp
cmp
in
and
out
imulb
lds
daa
mov
mov
test
push
mov
dec
add
scas
rclb
pop
push
leave
movsl
push
inc
test
jge
xor
lahf
shrl
testl
arpl
pop
call
push
push
or
ljmp
rcrb
clc
xor
xchg
jmp
or
push
mov
movsl
and
jp
ss
fs
test
push
mov
std
jmp
incl
mov
gs
sub
cltd
mov
jmp
popf
mulb
mull
xor
movsl
xchg
add
sbb
push
icebp
mov
inc
push
mov
arpl
inc
sbb
js
xor
popf
je
negl
adc
and
and
mov
xchg
mov
stc
cmpsl
ja
jb
cmp
cmp
push
dec
jo
aam
repz
jo
cmp
repz
inc
fmulp
sub
jge
push
es
jo
xchg
jnp
lcall
sarl
mov
jo
mov
mov
cmp
jo
js
fiaddl
fiaddl
cmp
jne
lds
sti
mov
sti
inc
out
jl
bound
jle
sub
sub
sbbl
sub
mov
lds
or
rol
pop
pop
mov
icebp
sub
mov
jbe
xstore-rng
cmpsl
shl
pop
and
xchg
add
lds
dec
mov
mov
mov
sbb
sub
andl
xor
cmp
jne
adc
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
push
dec
aas
jo
mov
jl
jle
jl
fdivs
incl
mov
mov
jge
cmpl
ljmp
mov
adc
or
xor
loopne
in
push
add
int3
shr
cmp
rcr
addr16
call
jp
mov
inc
hlt
sub
divl
inc
dec
cld
clc
sahf
mov
push
push
repnz
insl
out
outsl
jne
loope
cld
mov
arpl
lahf
add
jmp
dec
pop
xor
insl
ljmp
cmc
ja
adc
dec
mov
or
xchg
mov
pop
push
xor
pop
insl
out
test
jbe
leave
push
xchg
mov
push
aam
or
push
das
mov
aaa
les
push
mov
xchg
mov
mov
mov
jmp
jno
adc
jbe
repnz
fsts
dec
sti
pusha
adc
push
test
xor
push
xlat
dec
mov
imul
dec
daa
xorb
jmp
outsb
in
es
testl
push
jge
popf
xchg
mov
cli
mov
and
push
mov
sti
js
inc
push
test
sarb
icebp
pop
lods
mov
lret
ljmp
lods
dec
loop
ret
pop
sub
push
jae
mov
cmpsb
mov
imul
fdivrs
pop
aas
adc
je
lods
mov
ss
movsb
inc
sbbl
aam
jmp
mov
ret
cmpsl
or
xlat
cwtl
fdivl
roll
scas
les
and
cld
fimull
xchg
sbb
into
mov
lods
inc
adc
cld
dec
pusha
andb
mov
or
push
mov
nop
jbe
dec
ret
push
push
dec
jbe
mov
mov
sahf
inc
xor
push
lcall
or
cmp
iret
jns
pusha
mov
pop
shl
das
xchg
push
xchg
subb
xor
sbb
scas
mov
rol
pop
jnp
gs
outsl
lds
push
aaa
pop
data16
mov
test
sub
cli
mov
fsts
or
cwtl
pop
push
adc
negb
add
mov
daa
pop
add
mov
mov
vmread
mov
push
popf
and
pushf
ret
cld
xchg
adc
insl
repz
and
popa
jmp
inc
movsb
push
fdivs
ret
inc
pop
inc
adc
add
dec
mov
fmul
std
out
jnp
pop
jo
cs
adc
mov
mov
add
mov
mov
jmp
in
jae
jge
bound
clc
push
or
outsl
mov
jl
pop
fimull
popf
sbb
push
fidivrs
mov
jo
mov
loop
in
outsl
aam
lret
mov
vorps
cmc
movlhps
inc
add
jbe
insl
aam
sbb
pop
stos
mov
push
xor
and
faddl
pop
pop
shll
mov
push
and
movsb
cli
sbb
loop
pop
mov
jnp
fidivs
inc
add
addl
pop
xorl
xchg
mov
cltd
xchg
insl
mov
or
and
out
inc
insl
insb
pop
std
rcrl
jne
testb
enter
xchg
jns
xor
jae
arpl
ret
stos
jmp
sub
and
sub
ficomps
sti
adc
inc
jge
or
or
popf
out
in
ds
sbb
aad
xchg
mov
xchg
xor
fdivr
mov
or
push
jecxz
inc
inc
shll
fwait
push
xchg
dec
push
xchg
sub
arpl
in
frstor
pop
adc
test
insl
pop
fisttpll
adc
cs
sbb
in
pop
xor
icebp
cli
dec
test
test
fdiv
sub
rorb
adc
movsb
mov
xor
cmp
mov
das
mov
cmpl
outsb
vunpcklps
sub
sbb
lcall
dec
pop
jnp
bnd
enter
les
and
xchg
mov
gs
daa
loop
pop
movsl
inc
mov
lods
cwtl
out
clc
xchg
sub
test
out
mov
xor
mov
rcll
clc
lret
enter
adc
insb
out
cmc
ret
test
test
es
sub
mov
cwtl
and
sbb
mov
push
mov
pop
lea
or
xchg
push
pop
int3
add
push
sub
sub
incb
stos
sub
sub
cmp
push
std
call
mov
movsl
das
jge
xlat
pop
scas
jg
mov
xlat
mov
mov
or
lahf
inc
addr16
add
mov
loopne
add
lods
les
jbe
leave
adcl
inc
cmp
sahf
adc
sti
out
or
or
and
in
adc
int3
push
cmp
push
pop
cmpsl
imul
in
imul
pusha
jmp
push
cmp
bound
sub
rorb
push
add
add
xor
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
sub
cltd
sbb
jg
jl
dec
gs
fmuls
orb
aas
jecxz
jmp
xchg
jl,pt
inc
fdivrs
pop
jno
sbb
add
jl
pop
push
mov
adc
inc
mov
jnp
mov
int3
push
imul
mov
fldl
lcall
sub
cmp
mov
sbb
shrb
mov
aad
push
jle
jmp
push
scas
add
mov
lods
arpl
cmp
ror
nop
xchg
dec
fnstcw
or
insl
dec
insl
xor
jge
pop
mov
enter
loope
loopne
gs
cmc
mov
mov
test
cmpsb
jle
push
cmpsl
mov
rolb
fists
mov
xor
dec
into
pop
cmp
push
sti
repz
insl
jg
pop
insl
fdivrp
push
jle
adc
aaa
sbb
inc
clc
mov
mov
and
jecxz
lds
or
adc
scas
xchg
add
adc
adc
insb
jnp
popa
jae
push
sbb
cmp
inc
je
inc
int
inc
cld
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
in
out
mov
jg
jl
add
scas
jl
push
add
mov
roll
leave
arpl
movsl
pop
mov
push
bnd
jecxz
inc
jns
push
stos
xor
imul
shll
mov
dec
shll
sti
adc
cmp
lock
inc
pop
ljmp
fistpl
push
cltd
jns
aaa
dec
jae
adc
fsubrs
scas
pop
out
mov
mov
inc
jnp
lret
and
sbb
in
andl
andb
push
les
push
xchg
jno
popa
daa
sub
dec
mov
add
mov
adc
sbbb
lahf
hlt
sbb
jl
jnp
jg
inc
mov
sbb
pusha
or
popa
insl
shrl
sbb
and
inc
lea
sbb
stos
loopne
mov
ret
lea
xchg
push
xchg
shrb
inc
sub
or
ss
decb
js
mov
inc
mov
adc
sbb
jnp
lret
sbb
enter
pop
xor
insl
add
sub
outsl
movsb
pop
mov
addl
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
imulb
adc
jl
push
lock
rcrb
cmp
mov
xor
mov
lret
push
xor
dec
xchg
lcall
jno
daa
imul
fisubrl
repz
lods
iret
lods
aaa
hlt
pushf
fsts
jno
pop
shll
cvtdq2ps
stos
cmp
lret
mov
push
repnz
scas
addr16
clc
push
loope
sarl
or
loop
sbb
jle
mov
push
pusha
int3
adc
mov
push
xchg
std
pop
pushf
cld
push
or
stos
mov
xchg
push
push
es
js
test
rcll
ss
insl
scas
jge
mov
push
popa
jo
call
hlt
outsb
je
outsb
jne
es
adc
lcall
shrl
icebp
repz
lret
in
inc
inc
cmp
addr16
testl
inc
dec
data16
into
lds
push
dec
bound
mov
adc
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
mov
jl
adc
jl
jmp
inc
inc
jne
sbb
xor
and
lret
test
add
adcl
rclb
mov
dec
cmp
or
popa
daa
sub
cmc
into
sub
cltd
popa
mov
mov
aam
inc
pop
cmp
in
sarl
mov
repnz
out
or
jg
mov
out
add
les
mov
test
mov
pop
adc
xchg
dec
cs
mov
xor
xchg
lret
add
xor
into
fdivrs
gs
out
xchg
jge
decl
repnz
xchg
jae
xor
jl
and
pop
mov
mov
scas
pop
outsb
in
push
pop
inc
scas
dec
xor
enter
lcall
adcb
ljmp
sub
dec
stos
cmp
or
add
mov
imul
test
mov
adc
mov
ljmp
or
in
rorb
mov
add
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fdivr
imul
adc
jl
daa
jp
jmp
dec
mov
loopne
xor
repz
jns
cmp
lea
clc
inc
mov
scas
aaa
inc
lds
mov
loope
fdivrp
mov
scas
rorl
pop
test
jmp
rclb
jae
out
adc
inc
inc
into
out
push
icebp
and
adc
or
aad
jp
jge
out
scas
testl
and
in
jbe
push
lock
pusha
mov
jb
lock
jmp
dec
push
movsb
das
fwait
int3
push
mov
jno
mov
xchg
mov
sbbl
sbb
push
decb
pop
int
cmp
movsb
imul
imul
add
push
fnstenv
repz
xchg
fists
xor
jns
jg
dec
sub
in
mov
loop
inc
ljmp
ret
sbb
dec
pop
lret
dec
std
sbb
mov
lret
push
out
push
popl
pop
push
fs
aad
popf
push
push
lcall
flds
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
inc
lea
jnp
inc
jl
adc
jl
ds
or
dec
lods
pop
xchg
les
ret
dec
xchg
xor
jae
inc
cmp
fists
mov
insl
mov
jmp
push
mov
xor
pop
xorl
xor
addr16
or
rcl
adc
std
dec
testb
add
push
enter
and
pushf
push
xchg
aas
pop
or
pop
pop
leave
xchg
cwtl
mov
test
mov
jnp
cwtl
arpl
pmulhw
pmaddwd
lea
icebp
add
test
pusha
dec
cmp
xor
stos
rcl
mov
das
pop
push
cmp
aaa
cltd
sbb
push
in
lods
fsts
sub
push
arpl
jbe
mov
xor
and
xchg
mov
xor
cmpsb
or
mov
leave
jo
jne
add
loopne
jnp
and
pop
stos
mov
popa
sti
sbb
pop
cwtl
out
push
orb
fmul
popa
mov
into
sbb
int
sub
push
dec
mov
icebp
mov
dec
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
ret
jl
adc
jl
jo
push
jno
es
mov
adc
jmp
xlat
push
or
xchg
cli
into
out
movsb
notb
mov
push
js
xchg
xchg
inc
dec
hlt
notl
in
sarb
addb
jno
push
and
shrl
push
aad
xchg
pop
int
movsb
dec
dec
mov
cmpb
movsl
add
push
mov
sbb
out
fwait
jle
sahf
add
lock
mov
fs
ret
xchg
aam
imul
popa
add
and
mov
add
sub
inc
mov
push
sarb
push
jae
stos
das
dec
data16
leave
and
or
test
rcrl
outsb
jno
in
shlb
sbb
int
mov
dec
das
daa
push
sub
cmpsl
pop
mull
addr16
mov
cld
or
fcompl
outsb
lods
cmp
fnsave
xchg
sbb
xchg
out
jecxz
adc
mov
imul
cmpsb
mov
stos
adc
scas
add
mov
jmp
pop
shlb
mov
cmp
adc
jl
adc
jl
and
dec
adc
and
or
mulb
or
out
shl
xchg
mov
adc
mov
cwtl
lods
dec
dec
mov
fdivs
ret
jecxz
cmpsl
fdivl
add
xchg
mov
cmp
mov
test
ljmp
mov
in
aad
icebp
arpl
fdivrs
pushf
inc
adc
push
add
inc
les
aam
dec
mov
in
mov
xchg
add
or
nop
dec
mov
push
add
mov
sbb
in
mov
subb
dec
inc
in
outsl
clc
mov
push
repnz
lret
or
dec
push
fldcw
add
xchg
subb
lds
dec
rcl
insl
cmpsl
pop
adc
cmp
pusha
test
adc
mov
xor
jmp
mov
inc
insl
cmp
decl
push
arpl
jb
les
mov
fisttpll
jbe
in
xlat
xchg
lock
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
xchg
push
cmp
mov
jl
jg
jl
imul
mov
jp
mov
int3
movsl
add
cmp
or
dec
ja
cmp
pop
aas
xchg
xchg
xorb
mov
cs
mov
and
push
ss
add
dec
mov
and
sub
mov
int
push
xor
jno
testb
mov
dec
push
scas
punpcklbw
int
mov
aaa
mov
push
fdiv
pop
dec
or
ret
adc
push
out
maxps
xchg
rorl
pop
into
sarl
mov
add
cltd
push
and
and
push
mov
std
mov
cwtl
jnp
mov
push
loopne
rclb
loop
cli
sub
push
int
pop
and
xchg
sahf
cmp
mulb
fcoms
cmpl
mov
fs
ret
push
popf
sbb
hlt
push
inc
std
lods
bound
add
mov
pop
sub
ja
pop
loop
xchg
sub
insb
mov
repnz
add
call
xor
inc
cmp
je
xchg
jmp
push
fsubr
imul
enter
sbb
adc
jl
sti
or
dec
scas
imull
cmpsl
or
cmpsb
ljmp
xor
jb
inc
sbb
push
push
repz
add
push
loope
jns
in
mov
popa
cmp
inc
or
iret
inc
movsb
inc
shl
cmpl
loop
dec
imul
das
notb
push
inc
jbe
popf
shll
cmpsl
test
add
sub
movsb
in
mov
je
sub
out
mov
xlat
mov
xchg
and
jmp
sub
xor
pop
es
repnz
jno
pop
dec
ret
mov
testl
xchg
push
in
jbe
out
add
cmp
adc
pop
jp
or
lcall
jno
push
sbb
and
mov
test
cmc
mov
cmc
pop
pop
dec
sbb
fst
jne
pop
scas
dec
lods
cmp
idivb
dec
pop
mov
jp
pusha
icebp
ret
dec
popf
movsl
inc
fimuls
in
xchg
insb
insl
push
js
xor
shl
loope
push
cmpsb
adc
or
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
lds
cmpsb
dec
inc
jl
adc
jl
ret
inc
xchg
or
xrelease
lret
push
mov
mov
or
or
js
xchg
popf
lcall
outsb
ja
push
xchg
jmp
bound
neg
cmp
lods
add
xchg
imul
nop
cltd
clc
pushl
test
js
cmp
xchg
lds
inc
rcr
adc
jl
movb
movb
mov
pop
and
pop
ficompl
cltd
ficoml
insl
cmpsl
daa
pushf
das
xchg
lock
mov
incl
xchg
call
push
add
xchg
mov
sub
sub
mov
pop
imul
xor
or
and
mov
test
outsl
sub
adc
dec
dec
shr
push
xchg
fmul
movsl
inc
dec
dec
xchg
cmp
xor
in
out
pop
mov
loopne
add
test
lds
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
stos
aam
into
add
pop
add
add
into
sub
in
dec
out
out
outsl
es
inc
cwtl
arpl
mov
push
sbb
and
cltd
fsubl
xor
xor
outsb
push
int
adc
fdivs
mov
or
imul
push
adc
lret
iret
enter
fst
cs
out
aas
sbb
aas
repnz
dec
xor
sub
adc
iret
cli
sub
jnp
sbb
add
adc
lds
fstpt
add
ja
loop
or
int3
movsb
nop
out
xchg
jle
mov
jbe,pt
lock
add
push
cli
dec
or
gs
lret
adc
jo
and
jg
iret
dec
mov
std
mov
dec
andb
sbb
out
sub
dec
movb
data16
or
mov
sbb
lods
push
pop
sbb
mov
int
das
iret
aas
out
inc
add
sub
cld
daa
arpl
mov
int3
push
lret
pop
add
push
pusha
in
jle
mov
cmp
ja
iret
add
pop
add
add
xor
pop
mov
jle
stos
aad
cmp
sahf
mov
mov
mov
pop
add
cmpsl
pop
pop
data16
or
xor
inc
sti
or
sbb
out
xchg
push
lret
mov
mov
sub
stos
lods
cmp
fstpl
pop
xchg
ret
xchg
pop
cmpsl
or
mov
pop
nop
push
adc
loopne
test
imul
jno
insl
push
inc
jp
sbb
inc
mov
push
pushf
cmc
pop
enter
mov
cwtl
js
cmp
popf
icebp
loop
add
cmp
call
xor
jo
movsl
xchg
clc
push
xchg
lret
enter
aas
mov
mov
fistps
pop
inc
push
pop
xchg
clc
lret
push
shlb
jmp
dec
std
xor
sar
subb
adc
and
addr16
bound
sub
rcl
dec
mov
cld
add
adc
mov
push
add
arpl
rolb
add
add
add
orl
jae
stos
lds
xor
pop
and
pop
lret
and
cmp
push
ret
jp
and
xor
push
jb
pop
fisubrs
movsb
jle
mov
sub
add
call
cmp
jmp
fistpl
test
sbb
ja
imul
and
cmpb
jnp
pop
xor
add
lds
aam
xor
sub
arpl
repz
jge
jbe
dec
lcall
xchg
fxch
and
sarl
cmp
sti
xchg
jmp
int
xchg
cli
mov
addr16
testl
das
das
inc
call
mov
push
fwait
jl
mov
fsubp
mov
cwtl
cmp
icebp
xchg
sahf
scas
insl
adc
ja
jp
ds
add
xchg
movsb
lods
pop
sahf
jl
addr16
add
subl
idivb
mov
add
add
pop
add
add
sbb
inc
or
push
mov
jne
push
movsl
pop
or
mov
leave
scas
incb
mov
xorl
sub
fs
call
mov
push
repz
mov
je
popf
mov
scas
mov
loopne
mov
loop
ficomps
inc
fmul
cmp
aam
ficoms
inc
test
bnd
pop
test
add
fcoms
mov
jp
mov
push
pop
xor
inc
decb
mov
xchg
mov
subb
jnp
fnstcw
jp
imul
ds
cmp
inc
xchg
mov
dec
sub
xor
fidivs
push
ja
mov
inc
mov
mov
mov
xor
lock
stc
in
cmpsl
mov
mov
and
cld
dec
xor
pop
jae
or
ss
pop
xchg
inc
sbb
pop
add
add
xchg
jnp
xor
jns
mov
adc
inc
imul
xorl
inc
into
pop
call
ja
xor
sub
pop
jle
xor
mov
xchg
outsl
shl
mov
lea
and
push
movsb
mov
iret
sbb
mov
cmc
mov
sub
insl
imul
pop
sbb
sbb
mov
push
mov
sub
lret
loope
sub
dec
adc
push
jge
test
mov
mov
push
push
push
mov
sub
stmxcsr
das
mov
push
sbb
add
add
je
adc
scas
pop
ljmp
pusha
aaa
out
inc
push
xor
outsb
fimull
aad
addl
xchg
les
and
gs
jp,pt
in
push
shl
mov
jns
stc
mov
mov
add
jg
cmc
insl
cmc
out
lcall
mov
sub
adc
add
pop
add
add
test
lahf
lret
push
divb
fwait
popa
xchg
mov
adc
and
leave
mov
jmp
pop
fisubrs
je
mov
enter
or
aad
adc
data16
ja
clc
iret
sub
push
jnp
std
mov
pop
or
out
mov
stos
push
mov
loop
mov
mov
movsl
jo
or
pusha
pop
jae
sbbl
sub
cmp
or
js
inc
ss
arpl
repz
mov
adcl
outsl
shr
cmp
xchg
adc
notl
pop
mov
stc
push
dec
cmpsb
adc
xchg
push
xchg
xchg
push
push
and
dec
subl
mov
cmpsl
and
mov
pop
repnz
popa
lea
icebp
in
imull
add
fwait
push
jmp
dec
lods
int3
addb
mov
fstpt
fstl
push
test
or
and
rorb
jle
add
outsl
jle
aam
aam
xchg
les
pop
add
add
orl
jnp
lds
pop
mov
daa
mov
icebp
fisubrl
mov
pop
or
bound
mov
jge
and
testb
sahf
jno
pop
lds
cmp
aaa
outsl
fs
aaa
xchg
repz
mov
xorb
int3
dec
mov
test
mov
fcmovbe
gs
xor
out
jno
adc
pop
enter
std
adc
in
cmp
cwtl
cld
dec
push
jnp
outsl
orb
pop
in
js
mov
fisubs
ss
or
icebp
dec
fwait
aas
jno
out
into
mov
ficoml
push
in
dec
testl
cs
adc
push
dec
mov
push
mov
pop
cli
xchg
sbb
not
loop
pop
cmc
or
cmpsl
mov
inc
fistpll
sbb
popf
sbb
and
or
das
mov
dec
mov
lret
push
add
jle
and
scas
sti
jle
sbb
in
insl
push
add
pop
add
add
jnp
jl
adc
sbb
mov
mov
imul
jg
mov
xor
rcr
ja
add
mov
mov
add
xchg
dec
out
adc
or
push
lods
add
lds
arpl
add
loopne
mov
cwtl
pop
cmpsl
lock
xchg
gs
fimull
sarl
inc
inc
jmp
push
js
incb
dec
xor
stos
aaa
mov
sub
inc
jae
cmp
inc
mov
cmp
lret
xor
pop
sbb
jecxz
add
inc
lods
imul
les
mov
xchg
jle
dec
add
lods
jb
jnp
xchg
jb
cmpsb
add
sbbb
ret
sbbb
pop
sbbl
bnd
enter
sbb
or
inc
incb
jmp
cmp
stos
in
push
enter
add
negl
sbb
fnsave
and
add
add
fsubrs
das
int3
imul
pop
adc
fcompl
sbb
lret
push
jp
adc
or
je
addr16
pop
mov
dec
shlb
xchg
loop
js
mov
or
or
mov
xor
mov
dec
scas
and
or
leave
idivb
inc
cltd
add
pop
cld
rcll
test
es
in
pop
pushf
ljmp
sub
clc
sub
dec
mov
xchg
mov
cmp
mov
nop
ret
or
rcrb
push
pop
adc
add
and
jge
stos
jmp
shll
mov
cwtl
sub
iret
inc
cli
in
test
xchg
repz
adc
in
add
cli
xor
xchg
test
out
xchg
xor
pop
cmp
aas
icebp
int3
popf
nop
add
sub
xchg
mov
lods
mov
fsub
mov
add
add
push
jl
jle
insb
inc
xor
push
lahf
shlb
fadds
add
add
add
into
popf
push
xor
lcall
leave
movsb
mov
xchg
mov
lods
sub
fcompl
fsubrs
jne
int
dec
loope
cltd
push
sahf
push
mov
add
mov
lret
and
cmp
test
call
aas
push
mov
xlat
popl
mov
scas
adc
mov
mov
pop
outsl
sub
push
daa
mov
cmp
mov
mov
enter
movsl
outsl
push
mov
or
lea
mov
addl
push
pop
insb
pop
rcrl
enter
sarl
add
push
xor
sbb
sbb
push
push
sbb
mov
rclb
push
cmpsb
jp
pop
subb
addr16
mov
cmp
sbb
dec
testb
mov
inc
add
mov
inc
push
in
aad
push
xchg
add
jge
inc
add
add
add
fwait
mov
sbb
add
add
add
add
mull
arpl
mov
imul
cmc
sbb
mov
in
inc
movsl
push
push
fimuls
in
lahf
jmp
mov
out
enter
inc
xchg
mov
hlt
sub
mov
sbb
xor
xchg
repz
or
mov
sbb
xor
lds
or
push
iret
outsb
pusha
arpl
lea
pushf
adc
cmp
xor
lret
cmovle
push
push
lcall
sub
repz
scas
out
xor
or
gs
repnz
test
clc
outsl
sub
sahf
xor
or
int
imul
call
xlat
lcall
aas
movaps
or
jecxz
movsl
push
mov
int
pop
sub
in
push
lret
xor
push
shlb
cmp
adc
mov
into
xchg
sbb
scas
xor
and
xor
fwait
adc
dec
shlb
add
add
add
data16
jne
mov
xchg
pop
mov
cmp
add
pop
add
add
lods
cli
cmp
sti
jns
inc
inc
insb
ja
dec
xchg
and
imul
into
rcrl
repnz
out
jo
sbb
xchg
pop
rorl
cltd
les
divb
imulb
add
pushf
in
dec
into
add
adc
or
push
call
repnz
push
and
mov
out
sub
jo
cmp
sarl
loopew
mov
mov
insl
mov
mov
mov
stc
push
stc
lods
lahf
cli
addl
sub
aam
ss
out
xchg
pop
mov
out
xchg
bound
push
or
movsl
inc
mov
sbb
pop
std
outsb
push
mov
and
and
pop
imul
push
cmc
jecxz
pop
inc
loopne
les
fwait
push
gs
sub
push
and
fs
push
in
or
dec
arpl
sub
xchg
in
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
sub
ds
shl
cmp
inc
push
xchg
repnz
inc
sbb
outsl
cld
ret
cmp
pop
push
mov
mov
inc
jge
repz
mov
inc
xchg
xchg
insl
and
mov
mov
pop
cld
cld
sub
out
sbb
cmpsl
or
idivb
mov
negb
xchg
aad
or
jecxz,pt
push
mov
push
xor
loopne
inc
lods
xchg
cwtl
jmp
sarb
mov
pop
cs
push
mov
mov
sub
bound
push
fidivs
scas
or
cmp
and
xor
pop
sarl
js
cli
bound
and
jns
loopne
xchg
aad
push
sub
es
pop
jp
mov
cmpsb
or
push
cmp
stos
lock
cmp
dec
pusha
jns
adc
out
data16
mov
scas
loope
arpl
lret
add
add
pop
sarl
lods
std
mov
sahf
mov
dec
faddl
add
add
add
adc
inc
cmp
ljmp
pop
into
add
or
aaa
jno
mov
mov
and
jo
mov
insb
dec
pop
hlt
mov
cmp
inc
mov
sbb
pop
xchg
aaa
fidivl
push
pop
ss
ja
daa
xorb
and
push
mov
es
cwtl
xor
xor
push
push
cmpsl
aaa
mov
jg
aam
ss
sub
enter
out
data16
cmp
fmul
push
fimuls
clc
sbb
mov
les
push
fimull
loopne
jne
cmpsb
xchg
divb
dec
jge
outsb
push
lahf
mov
test
jle
cmc
daa
sbb
or
xor
lahf
inc
mov
inc
mov
or
cmp
in
dec
sbb
cmp
xchg
adcb
push
addr16
cmp
mov
ret
adc
and
jnp
mov
sbb
fdivrs
into
sub
and
dec
xchg
ret
or
fldlg2
mov
add
repz
std
repz
rclb
cmp
add
pop
add
add
add
lds
insb
jb
out
ja
xor
gs
out
mov
rcrl
rol
mov
fistpl
stos
insb
fidivs
lret
imul
leave
imul
jo
clc
xor
outsl
mov
ret
add
int
mov
jae
sub
jno
push
repz
adc
jp
pushf
mov
push
mov
loopne
adc
cwtl
mov
inc
mov
jmp
ds
pop
add
pop
lods
pop
decb
pop
std
ds
test
loope
adc
jmp
adc
loop
xor
sub
das
aad
cltd
out
and
xor
mov
jne
push
inc
es
test
ja,pn
and
idivb
cwtl
adc
and
je
out
ja
shll
sbb
scas
fstl
sbb
xchg
pop
sub
xchg
mov
adc
movsl
dec
sub
cmp
xlat
or
or
add
lock
cmp
cmp
pop
jb
cmp
push
fiadds
add
add
add
and
or
lds
leave
cmp
push
push
test
jge
pop
stos
add
xchg
or
xchg
xor
cli
xlat
push
add
fldenv
out
mov
cld
add
pop
jecxz
mov
sub
stos
call
jg
jl
fimull
xor
sbb
sbb
test
out
xchg
data16
movsl
xchg
cmp
gs
push
cwtl
mov
push
mov
adc
dec
cmp
add
cmpsl
add
jmp
inc
add
xchg
push
mov
lcall
push
dec
xor
movb
push
push
cmpsl
inc
lock
ret
sub
lds
div
aaa
outsl
fwait
jecxz
lret
jge
sbb
or
outsb
into
or
int3
notl
dec
add
mov
push
jo
in
call
dec
mov
test
ss
js
fs
daa
sbb
movsl
cwtl
jnp
lret
pop
add
mov
mov
jecxz
icebp
xchg
pop
filds
add
add
add
jmp
and
push
dec
xor
aam
pop
mov
xlat
into
push
hlt
dec
pushf
cwtl
cmp
and
pusha
adc
ljmp
stos
mov
test
or
xchg
in
test
iret
faddl
push
faddl
inc
cmc
xor
imul
aam
pop
pusha
adc
cmp
jns
pushf
ret
push
inc
or
xchg
lock
mov
add
sbb
push
cmp
hlt
xchg
push
add
mov
js
jb
es
out
xor
jbe
rcrl
lods
out
lret
fisubrs
stos
aam
mov
inc
negl
adc
movl
ja
cmpsl
loop
dec
loope
jae
mov
mov
lret
mov
hlt
call
ja
call
fcoms
icebp
jo
dec
cld
push
iret
shlb
add
xor
pushf
ret
popf
xor
imul
add
xchg
in
mov
incl
cld
fldenv
pop
add
add
xchg
faddl
icebp
mov
sbb
mov
inc
std
or
loopne
add
loope
ds
jecxz
jnp
es
shl
xchg
stos
movsb
call
sbb
and
dec
stc
fistpll
push
cmpsb
iret
jp
fistpl
fmulp
adc
lods
push
bound
into
stc
add
addr16
mov
pushf
jbe
out
cld
mov
pop
mov
dec
cmp
sub
jp
jns
hlt
xor
psrlq
fucomi
fs
cmpl
inc
cmp
mov
repnz
dec
push
fwait
cltd
xchg
sub
mov
insb
inc
or
mov
xchg
mov
mov
jns
inc
les
mov
aaa
iret
jno
mov
xor
jmp
xor
mov
movsl
rcll
xchg
or
mov
or
adc
nop
popf
push
add
sub
in
negl
es
int
fists
imul
add
add
add
add
sub
test
xchg
ds
adc
pop
sbbb
out
jb
movsb
cmp
pop
and
aaa
mov
mov
fucomi
and
mov
add
es
jnp
cmp
aaa
outsl
fidivrl
sti
or
jno
aam
std
aam
cmp
sbb
xor
test
bound
add
stos
popf
jbe
pop
sub
les
sub
in
test
int
jb
lock
sbb
ljmp
push
loop
inc
mov
add
xchg
mov
mov
insb
mov
lahf
mov
xchg
or
cmp
cltd
rcrl
mov
xor
repnz
mov
js
insl
mov
orl
scas
pop
clc
lret
cmc
mov
inc
test
adc
pop
leave
add
add
icebp
add
mov
jge
nop
mov
jb
add
pop
add
add
sbb
fdivr
iret
add
pop
push
mov
cmpsb
iret
psrad
mov
movsb
pop
inc
subl
cmpsl
push
xor
jg
add
jo
shlb
adcl
daa
dec
jge
or
call
jo
and
jo
andb
xor
xor
cmp
subb
inc
lds
js
or
or
ljmp
xor
cwtl
test
lods
sarb
push
xchg
ss
push
iret
loopne
xchg
and
addr16
add
push
pop
adc
in
xchg
rolb
mov
cmpsb
dec
cwtl
dec
shlb
sbb
or
je
xchg
arpl
lea
into
aad
xor
pop
ret
sub
incl
inc
xlat
sub
push
gs
push
push
push
sahf
jmp
mulb
jecxz
fdiv
sbb
dec
jl
cmp
mov
push
jno
mov
mov
pop
add
add
dec
in
lea
orl
std
pop
icebp
stos
mov
aam
xchg
div
xchg
or
daa
imul
call
adc
cmp
fs
xchg
shrl
jl
out
xor
cmp
lret
dec
test
and
dec
stos
ret
shrl
or
pop
inc
ftst
mov
lret
aad
jae
mov
cmc
sub
sub
ja
jns
push
ret
pushf
push
jp
mov
and
sub
call
test
sub
sbb
in
negb
jnp
mov
leave
loope
insb
cmp
jl
add
dec
arpl
loop
subl
add
add
or
popa
pop
mov
inc
inc
lods
adc
inc
pushf
stos
sub
mov
int
daa
cwtl
xor
push
and
shll
in
je
jecxz
or
xchg
std
or
pop
aad
or
sbb
pushf
push
adc
mov
mov
stc
sbb
add
repnz
add
pop
call
mov
mov
add
add
add
add
jl
gs
scas
adc
inc
mov
mov
bound
sti
and
sub
subb
push
jo
sbb
iret
ret
sub
xor
movsl
pusha
fldcw
mov
jl
mov
lcall
mov
sub
jne
cmp
loope
inc
dec
dec
mov
movsb
or
ret
mov
or
aaa
mov
out
pop
sti
shr
push
mov
std
mov
mov
add
cmp
push
cmp
enter
add
std
cmp
int
ror
stos
dec
shl
fstpl
cmp
inc
test
or
in
orb
mov
daa
inc
addl
fisttps
inc
lret
sub
imul
xor
mov
adc
cli
xor
push
mov
shlb
xor
add
mov
push
decl
jg
push
enter
add
add
add
scas
mov
push
jb
sbb
or
sub
and
inc
push
cmp
fs
cli
clc
mov
into
stos
mov
xlat
les
cli
push
xor
push
mov
ds
and
cli
addr16
rcll
aas
in
jne
aas
or
sbb
outsb
xchg
out
mov
inc
jg
mov
inc
push
jbe
mov
xlat
xor
or
inc
jl
adcl
sub
into
andl
sbb
imul
xchg
out
push
fbstp
xchg
insl
ret
pop
or
lock
jb
stc
int
jg
and
hlt
cld
into
iret
retw
loopne
flds
add
sti
call
jns
xor
jge
add
pusha
mov
jg
aas
hlt
adc
or
mov
rcrl
cmp
mov
pop
rcll
xor
xchg
inc
mov
and
cmp
sti
fsubp
jmp
fwait
xchg
imul
mov
add
pop
add
add
test
inc
ret
jle
pop
xor
iret
insb
push
push
roll
jae
ljmp
xchg
fmuls
fdivs
adc
scas
mov
adc
insb
adc
add
add
add
dec
push
push
pushf
fsubrl
ds
or
std
pop
mov
adc
push
mov
add
stc
test
fimull
test
lahf
jns
add
pusha
xchg
lock
mov
es
outsb
add
repz
and
repz
shlb
popa
adc
aas
jge
test
or
add
cmp
loopne
pop
adc
fisttps
cmpsb
adc
and
inc
sysret
outsb
stc
dec
test
push
insl
pop
fs
jnp
in
es
pop
and
lcall
sahf
push
xchg
insl
mov
adc
add
xor
mov
pop
fidivl
jg
fistl
es
rorl
es
xchg
idiv
add
add
outsb
xor
test
inc
adcb
add
pop
shll
inc
int
lcall
jecxz
sar
mov
mov
jne
das
jno
adc
mov
adc
or
addr16
outsb
sbb
bound
cmp
adc
shld
popa
and
ret
sub
adc
nop
xor
hlt
mov
cmp
imul
push
push
jle
mov
jmp
sbb
xchg
mov
sarb
sub
xchg
shlb
lret
cld
mull
xor
rorl
dec
aad
fldt
mov
mov
out
xorl
inc
aad
mov
icebp
add
mov
int
cli
aaa
fwait
mov
in
cli
jp
repz
lods
sti
cmp
sbb
nop
jge
pop
cmp
jecxz
loopne
insb
xor
cltd
es
push
ret
xchg
mov
cmp
rolb
add
inc
ror
lock
jnp
xchg
cmp
pushf
call
add
pop
roll
movsl
inc
cmp
jb
ds
lcall
pop
pop
add
in
mov
xchg
fbstp
stos
pop
sbb
cmp
das
testb
cmp
out
inc
pop
loopne
mov
and
fmull
das
mov
cmp
out
mov
mov
pop
repz
sarl
test
push
addr16
or
test
push
lods
mov
mov
xor
jge
push
pop
movsb
clc
sbb
adc
and
in
pop
dec
ljmp
xchg
inc
adc
jnp
sbb
adc
in
test
inc
or
dec
imul
mov
xor
cmc
mov
in
ljmp
divps
push
push
pop
js
xor
call
push
pop
bound
movsb
lods
les
or
mov
int
jp
arpl
add
add
repz
fisubrs
jno
test
mov
add
add
push
push
hlt
cmc
js
mov
xchg
and
enter
dec
mov
sbb
xor
xchg
sahf
repz
cs
cmpsl
jp
xor
mov
fiadds
xchg
fnstsw
pop
aam
dec
call
mov
or
push
mov
cmp
mov
arpl
xor
xor
inc
sub
xor
xchg
std
daa
inc
xchg
cmp
push
xchg
cmp
dec
jl
push
ds
xchg
dec
int3
push
and
xchg
fisttps
in
cmp
arpl
scas
stc
mov
aaa
cmc
cli
outsb
jo
pop
cmpl
mov
jne
mov
jbe
mov
xchg
gs
mov
xchg
lret
xor
mov
jae
push
mov
sbb
cmpsl
push
pop
fisubrs
insl
cmpsb
out
mov
sarl
in
cli
mov
jns
adcb
ja
out
mov
mov
sti
repz
stos
ljmp
jne
sahf
fadds
insb
jb
or
dec
and
xor
inc
ss
jo
fidivs
xchg
inc
test
jb
mov
lret
hlt
aam
pop
sbb
test
fisttpl
mov
iret
je
mov
cmc
xchg
fildl
jecxz
clc
or
xlat
sub
arpl
mov
inc
mov
or
ja
dec
dec
test
leave
cmp
push
int3
inc
andl
sub
xlat
fwait
dec
les
je
push
iret
movsl
iret
inc
jno
sarl
leave
push
cmpsl
movsl
lret
adc
int3
fnclex
sub
lock
stos
fldl
pop
enter
jle
in
inc
push
pop
in
sti
scas
or
fstp
test
std
push
jns,pt
test
aas
mov
xchg
jae
jnp
push
jecxz
lcall
mov
movsb
scas
xchg
shll
scas
sbb
inc
in
shll
test
add
scas
push
repz
cmc
scas
cwtl
sub
repnz
mov
add
pop
add
add
jl
mov
add
dec
dec
std
mov
jne
mov
bound
jb
js
inc
and
ljmp
add
adc
pop
ds
ret
and
cld
pushf
sahf
popf
mov
sbb
jno
test
xor
sbb
and
mov
mov
pop
inc
arpl
pop
sbb
stos
add
sbb
pop
xchg
pop
adc
pop
ret
pop
cmp
jecxz
jne
in
pop
insb
stos
subb
subb
xor
push
or
dec
mov
mov
mov
push
add
sbb
popf
out
mov
outsb
das
divl
pop
fnstsw
sbb
xchg
xor
adc
jp
arpl
and
das
iret
imul
xchg
mov
dec
xchg
inc
pop
stos
in
jns
mov
pop
xor
lret
lret
jp
lret
pusha
rorb
enter
mov
pusha
cld
mov
add
add
test
jg
cs
int
push
sub
into
push
jo
rorl
and
jecxz
cmpsb
test
repnz
and
or
adcl
je
aad
xchg
mov
cmp
pop
mov
loope
icebp
jnp
sarb
xor
jae
loop
mov
jno
inc
insb
fwait
jbe
xor
and
xchg
paddsb
mov
popf
daa
mov
adc
lods
inc
inc
add
jbe
stc
es
aaa
cwtl
jle
mov
and
lock
pop
sub
or
call
sbb
mov
in
pop
xor
stos
push
sbb
out
sbb
ja
nop
arpl
mul
inc
push
inc
jno
cmp
js
mov
dec
push
xchg
xchg
sbb
jno
sbb
repnz
rcrl
cmp
arpl
xor
sub
packssdw
or
add
gs
testl
insb
ljmp
add
add
inc
pusha
andl
adc
loope
js
xchg
or
xlat
ret
push
inc
xchg
mov
dec
shlb
pop
xchg
add
das
xchg
test
cmpsl
pop
dec
push
push
mov
flds
or
std
and
test
mov
fcmovbe
inc
aam
pop
mov
into
test
cmp
fwait
mov
gs
lock
pop
arpl
nop
dec
sub
mov
jle
inc
sub
ja
stos
es
adc
ljmp
stos
mov
out
shll
adc
in
xchg
es
stos
mov
cwtl
fstpt
cli
jbe
movl
jge
xchg
mov
loop
lods
scas
pop
lret
mov
dec
cltd
sub
leave
test
in
cmc
shlb
lods
fwait
insl
jnp
push
xor
repnz
sar
shll
cmp
jge
hlt
mov
in
mov
rolb
xchg
cli
add
pop
subb
add
add
xchg
mov
or
sarl
add
pop
add
add
lcall
push
div
sahf
sahf
fsubs
movsl
lods
dec
out
rorl
sub
mov
push
xchg
stc
or
in
les
lahf
aad
adc
sahf
fsub
subb
sub
cwtl
in
out
mov
iret
hlt
xchg
sbb
xor
rorl
push
pushf
xor
insb
push
daa
rcrb
shrb
imul
adc
mov
inc
mov
cld
jg
fstpt
lock
sub
fstl
lcall
daa
jl
mov
xlat
jno
ffreep
mov
or
popf
jmp
out
add
adc
sbb
scas
loopne
aaa
xchg
mov
shll
sahf
sbbl
mov
mov
pop
xchg
loopne
sahf
and
stos
ds
es
pop
xchg
pusha
jmp
arpl
mov
loop
push
test
mov
mov
fstpl
int
add
pop
add
add
inc
jnp
loope
mov
scas
icebp
iret
push
mov
adc
orb
push
mov
xchg
jle
inc
pop
jl
pop
jbe
js
dec
out
fstl
push
mov
int
cmp
mov
out
mov
or
aaa
inc
jg
jae
or
stos
js
lahf
pop
cmp
ret
int
gs
sti
cmp
ret
cwtl
out
in
sahf
dec
dec
inc
jb
test
sub
popf
pop
addr16
xor
inc
insb
roll
mov
outsb
and
bound
call
les
or
cmc
mov
sub
xor
scas
ds
xchg
data16
xchg
add
add
test
jnp
cmp
push
or
lret
mov
lahf
jl
mov
mov
or
pop
push
jle
xlat
stos
cmp
xchg
dec
das
test
xor
clc
fwait
mov
push
mov
dec
movsl
cld
dec
add
std
fstl
jg
add
cwtl
mov
inc
sub
push
inc
dec
in
stc
xchg
add
push
inc
pop
jns
aas
lods
fmull
dec
arpl
pop
aam
add
pop
add
add
add
xchg
sarl
cltd
add
pop
gs
aad
cli
test
daa
mov
push
sbb
push
fs
orb
xor
xorl
mov
inc
mov
arpl
xchg
pop
ss
xor
lcall
into
inc
or
popf
lret
loope
aaa
imul
jbe
call
jecxz
pop
mulb
pop
rcrb
cmp
jne
add
xor
fistpll
xchg
addl
dec
testb
inc
xor
ret
sub
jns
cmp
adc
dec
hlt
mov
ss
xchg
mov
xchg
add
sti
filds
xchg
mov
sub
jbe
adc
pop
push
insl
out
xchg
and
adc
aaa
insb
daa
imul
cmpl
xor
mov
fdivrp
mov
jbe
jno
ja
push
xor
scas
pop
ss
mov
add
jnp
mov
mov
adc
add
add
add
dec
cmp
fwait
add
push
nop
mov
jne
xor
mov
mov
push
pop
push
loop
mov
sub
or
outsb
fsubrl
push
or
and
js
mov
test
jg
test
outsl
lods
into
gs
hlt
repnz
insl
scas
cmp
ljmp
xchg
inc
adc
push
jmp
push
add
in
add
xor
inc
jbe
ljmp
mov
enter
xlat
and
lds
stos
addr16
cli
dec
push
lods
jle
gs
or
mov
mov
or
aaa
or
pop
xchg
std
bound
mov
sub
ljmp
mov
ret
push
mov
getsec
or
and
cpuid
or
daa
xchg
call
imul
loop
push
mov
inc
xchg
xchg
popa
adcb
jae
push
or
imul
test
add
add
repnz
pop
add
add
dec
popf
pmaxsw
sti
and
push
sbb
test
dec
aas
push
insl
sub
xchg
jbe
dec
outsb
repz
jne
mov
push
and
lcall
mov
mov
test
lret
xor
mov
mov
sahf
pop
rcrl
adc
lods
iret
mov
add
shll
aad
sbbl
in
aad
mov
inc
mov
rorl
and
xor
push
orb
int3
push
mov
push
ret
xchg
xor
pop
pop
sti
jns
daa
clc
adc
and
jecxz
or
mov
cmpsl
push
popf
xchg
jecxz
or
xchg
lahf
xchg
cmp
mov
daa
call
cld
pop
add
adcb
in
cmp
xor
arpl
and
shlb
dec
loope
js
add
inc
push
jae
lcall
add
xchg
mov
idivl
data16
xorl
scas
cmp
andl
std
rolb
loop
cmpsb
pop
mov
sub
pushf
jp
aad
pop
mov
mov
or
or
mov
jp
data16
mov
push
lret
inc
push
dec
xor
pushf
repz
pop
icebp
cmp
outsl
into
jecxz
cld
pop
adc
pop
and
dec
mov
scas
gs
icebp
stos
fs
mov
xchg
into
push
movsb
jl
dec
xchg
je
add
sahf
jae
in
test
sub
ljmp
cwtl
stc
out
adc
insb
mov
or
or
add
sbb
stos
sbb
cs
movsb
nop
mov
jnp
pop
inc
mov
out
addl
inc
cmpsl
addr16
mov
push
push
stc
test
ss
cmp
loope
mov
sbbb
inc
mov
rolb
aam
inc
or
in
adc
dec
push
pushf
or
mov
add
mov
fdivs
fdecstp
lock
add
pop
add
add
lock
in
cwtl
xor
xor
ss
jb
fs
add
out
aad
cmp
push
test
lock
fistps
ja
dec
add
jl
add
call
shll
neg
repnz
arpl
cmp
xor
cmp
movups
dec
loopne
mov
mov
sbb
sbb
mov
inc
mov
xchg
cmp
jnp
rorb
xchg
ret
pusha
inc
mov
ss
cmp
popf
fs
daa
or
jne
mov
pop
aam
sbb
xor
shrb
insl
mov
push
jl
lods
loop
dec
dec
xchg
aas
xchg
mov
cmp
xor
xchg
pop
repz
and
cmp
das
ret
fwait
and
enter
pop
imul
inc
adc
mov
mov
inc
in
movsl
aam
fmull
pushf
add
push
pop
push
jmp
sbb
int
xor
pop
add
add
outsb
inc
inc
mov
imul
push
xchg
inc
data16
mov
adc
mov
mov
shrl
dec
inc
lret
add
push
sbb
out
xor
push
sbb
jnp
jbe
jbe
push
frstor
cld
gs
and
rcll
sahf
arpl
cmp
jno
pop
sbb
inc
in
insb
sbb
and
into
adcb
andl
iret
sarl
mov
aam
add
scas
pop
mov
les
push
xchg
sbbl
push
pop
push
cs
xchg
stos
xor
cmc
add
dec
and
movb
leave
lods
push
mov
jecxz
jb
cmpsb
xchg
icebp
aaa
push
js
das
and
cltd
arpl
fisubl
push
movl
adc
xor
hlt
sti
jo
and
and
mov
fiadds
gs
movsl
js
andb
inc
xlat
xchg
lock
add
add
pop
lods
pop
cli
cmc
mov
repz
testb
pop
add
add
xor
push
and
movsb
jg
test
adc
sbbl
mov
aaa
inc
add
and
aam
xchg
adc
insb
out
jecxz
aas
loope
and
daa
mov
jmp
fcompl
les
cmp
add
xor
fistps
enter
cmpsb
pusha
jne
insb
ds
in
adc
scas
xor
ds
popa
in
xchg
aam
out
xchg
and
sarl
leave
xchg
sub
jnp
sti
jb
sub
imul
fiadds
add
int3
pop
mov
in
jmp
mov
xor
andl
mov
iret
mov
shll
or
and
nop
xchg
cmp
push
movsb
nop
clc
aad
adc
es
mov
leave
jne
loopne
or
or
mov
xchg
ret
cmp
xchg
outsl
cmpsl
push
or
js
rorb
test
fcmovnu
jno
filds
das
stos
cltd
inc
popf
jae
out
pop
dec
add
mov
clc
add
pop
add
add
sbb
js
jp
inc
aad
fisubrl
push
es
jne
adc
jae
mov
lcall
js
push
cmp
push
push
insb
dec
bound
ss
mov
mov
fsubrp
lods
adc
xchg
inc
aas
xchg
in
mov
xor
out
ret
in
mov
mov
mov
add
mov
mov
fwait
push
xor
fs
mov
or
fbld
rcrb
out
and
lods
push
scas
pop
mov
mov
loop
adcl
mov
pop
adc
rcll
dec
jg
lret
lret
jmp
arpl
mov
imul
mov
stos
mov
mov
sbbb
movsb
dec
insl
mov
lods
or
mov
mov
nop
test
aam
int
mov
mov
es
inc
or
add
pop
add
add
mov
xor
out
sbbb
cmp
or
cmp
dec
lcall
fiadds
or
pop
xchg
mov
pop
mov
sbb
cmc
lods
push
std
jae
xlat
jno
xor
sub
xor
je
jge
inc
add
push
scas
or
cmp
mov
cld
push
scas
out
or
fistps
xor
jecxz
mov
push
jg
lahf
mov
fisttpll
push
dec
lods
push
repz
or
mov
aas
push
jb
dec
sub
imul
aam
sub
pop
dec
sbb
psllw
in
inc
jae
orb
sahf
xchg
jae
enter
fwait
test
jae
mov
mov
push
mov
cmp
stos
cmpsl
mulps
cs
fs
leave
call
cmp
fucomip
inc
cmp
fisubrl
test
push
je
mov
add
add
arpl
addr16
add
mov
xchg
mov
add
add
add
loopne
imul
insl
dec
jbe
mov
xchg
ret
iret
in
hlt
das
mov
mov
es
push
cmp
mov
and
icebp
out
push
repnz
xor
lock
cmpsb
ret
int
or
aas
jge
or
mov
lods
jge
xchg
in
add
jbe
rcrb
movsl
not
pcmpeqw
loopne
fisttpl
mov
fcmovnb
push
cmp
test
and
and
mov
mov
jne
jb
cmc
adc
sub
fstp
popa
fisubrs
int3
insb
loop
add
aas
pop
test
mov
xchg
lds
sbb
outsb
cmp
xchg
leave
sub
push
xor
mov
fwait
jg
pop
jl
xchg
or
ss
mov
adc
hlt
ds
pop
lods
jae
sbb
sbb
rcrb
stc
mov
add
adc
jle
push
mov
mov
pop
mov
add
add
out
out
pushl
ja
push
xchg
inc
jns
sti
add
pop
add
add
pop
dec
mov
arpl
push
bound
or
cmp
push
pop
push
add
jmp
or
movsb
xchg
pop
cwtl
cmp
xorl
fucomi
adc
lods
mov
out
loop
sub
stos
repz
xor
xchg
mov
in
mov
xor
pop
xchg
iret
xor
aad
mov
push
push
scas
lahf
add
in
jae
push
aaa
or
rol
xor
jnp
and
lret
jno
mov
daa
xchg
test
pop
pop
iret
lods
cmpsl
sti
pop
lcall
xchg
dec
xor
cmpsl
or
adc
movb
or
int3
into
adc
sub
mov
xchg
xor
outsb
push
push
sub
push
loop
xchg
cmpsl
daa
daa
mov
mov
add
movsl
ret
shlb
push
mov
test
push
scas
decb
outsl
push
add
add
add
int
gs
div
adc
and
sbb
push
in
sub
cld
stc
enter
out
add
push
shrl
fildll
mov
jbe
popf
and
lock
adcl
mov
stos
int
xchg
sbb
xchg
into
add
test
fldt
stos
outsb
push
mov
jae
adc
pushf
test
jmp
fcompl
js
clc
jmp
adc
push
cmpsb
inc
icebp
cmp
pop
lods
xchg
out
sbb
icebp
inc
lods
jnp
dec
add
add
mov
lahf
popf
sbb
das
outsb
fninit
mov
rorl
inc
or
pop
les
les
and
aaa
pop
cld
inc
jmp
inc
rorl
in
movsb
and
movsb
test
in
dec
add
push
test
mov
sbb
mov
and
add
xchg
and
movsl
mov
mov
mov
out
in
movsb
sub
add
pop
add
add
ljmp
fs
pop
sti
ja
ret
xor
rcrl
mov
aam
sub
push
inc
mov
inc
nop
lret
shll
imul
adc
sub
jecxz
xor
stos
and
push
in
ja
mov
shll
pushf
and
in
cli
mov
cmp
das
inc
outsl
inc
out
mov
loopne
add
pop
js
lcall
push
movsl
sbb
icebp
cmc
sahf
add
pop
mov
aas
in
aad
xchg
icebp
push
subb
movsb
in
aam
enter
popf
inc
and
sub
jl
adc
daa
push
sub
inc
int
and
and
in
push
mov
push
testl
cmpsb
or
cmp
dec
lret
add
movb
lcall
sbb
mov
inc
sbb
push
cmp
cmp
adc
mov
out
jp
xchg
outsl
mov
add
fdivl
mov
adc
add
add
add
add
imul
pop
fdivp
call
cmp
jne
js
mov
pop
and
inc
sbb
notl
add
cltd
pusha
pushf
js
mov
stos
lahf
aaa
push
dec
inc
pop
lock
movsb
lock
seto
adc
loopne
mov
aaa
or
pushf
ja
outsb
pop
shr
xchg
aam
dec
sub
push
int3
inc
inc
mov
and
cmpsl
stos
pop
pop
inc
push
sti
add
ss
mov
vunpcklps
ja
js
mov
imul
aaa
ja
ficoms
adc
dec
pop
and
push
lret
xchg
adc
scas
inc
mov
stos
sahf
test
pop
vcvtpd2ps
push
les
outsb
or
inc
nop
loope
add
and
std
push
ret
sbb
pop
inc
stos
mov
popf
adc
fwait
hlt
lret
mov
sbb
xor
std
ds
jo
rcrl
orl
add
mov
mov
xchg
mov
incl
add
add
add
sbb
mov
fdivs
add
and
push
xor
test
add
jecxz
mov
movsl
adc
sub
dec
aam
test
insl
push
test
icebp
ja
jne
loop
inc
mov
pop
insb
mov
cltd
pushl
jle
and
dec
sbb
xchg
shrb
push
adc
inc
in
pop
into
push
gs
mov
cmc
test
pop
or
popa
sti
outsl
in
in
stc
dec
int3
loopne
sub
mov
stc
callw
push
psllw
mov
out
sahf
lea
xor
inc
and
lods
push
and
shr
scas
shr
mov
test
xchg
xor
adc
sbb
ficoms
jns
pop
test
ret
add
lock
fcomps
hlt
xchg
je
add
or
pop
movsl
xorb
lahf
lock
decl
mov
dec
pop
pushf
and
add
mov
xor
cmp
add
add
ffree
or
test
pushl
jns
js
or
sbb
lahf
sbb
int3
sarl
mov
adc
adc
jne
bound
mov
fs
repnz
aaa
pop
push
pop
push
ljmp
add
inc
pop
push
jns
popf
cmpl
add
mov
or
int3
aas
jp
ror
ja
rcr
xor
or
daa
sub
aad
jae
rcr
pop
add
arpl
ror
mov
test
fcmovnbe
sub
mov
pop
or
ss
mov
cmpsl
fcomps
cmpsl
lret
test
ret
cmp
adc
xchg
pop
ja
dec
sub
out
push
lahf
dec
out
mov
sub
lds
ljmp
int3
cltd
enter
ja
xchg
repnz
pop
push
icebp
cltd
stos
sti
sub
mov
stc
imul
ljmp
add
add
hlt
fisttps
test
les
inc
add
add
add
add
addl
call
cmpsb
ret
and
xor
rorb
add
fwait
and
jl
fs
ficomps
pop
fwait
cmovne
lcall
stos
adc
pop
movsl
mulb
push
pop
sahf
inc
pop
fldt
lds
jl
mov
xchg
add
cmpb
fwait
cld
xchg
fldenv
push
dec
loop
xchg
pushf
imul
jmp
push
xchg
lea
enter
cli
cmc
clc
adc
and
jge
mov
adc
repz
cmc
push
aad
sub
mov
push
mov
ficomps
ss
pop
loopne
xor
xchg
sbb
xor
push
fs
push
sarl
push
mov
ret
xchg
out
popa
je
mov
fbld
aaa
adc
xchg
jge
mov
sbb
mov
fisubrl
addr16
js
mov
jb
stc
jle
sahf
mov
mov
into
fwait
cmc
pop
sub
dec
add
add
add
add
push
adc
test
jecxz
xor
sbbl
sbb
fisubs
fwait
jno
ja
or
mov
mov
cs
mov
jp
xchg
push
mov
adc
jmp
push
rcll
js
adc
bound
subb
fs
popl
mov
jp
aad
inc
inc
xchg
push
lods
mov
jb
test
out
or
out
js
icebp
mov
dec
pop
xchg
leave
jl
shrl
dec
test
xchg
clc
lea
add
jo
cs
sbb
int
in
xchg
and
push
and
fsubp
mov
roll
mov
push
int
ja
push
mov
mov
inc
mov
icebp
adc
mov
push
sbb
adcb
jne
or
jl
test
out
mov
pop
mov
pop
pop
sbb
add
pop
add
add
xor
jbe
stos
sub
pop
pextrw
outsl
sbb
mov
orb
mov
jmp
pop
xor
and
dec
sub
mov
inc
ret
sbb
lcall
cmpsb
loop
sub
js
dec
popf
jb
push
cmpsb
fisttpl
inc
jmp
and
or
shr
xorb
loope
mov
ljmp
jo
lcall
pop
dec
mov
mov
test
arpl
jno
adc
fimull
test
mov
jl
push
jmp
aas
xchg
lahf
call
push
cmp
scas
mov
cmpl
and
dec
mov
test
and
jb
or
mov
xchg
sub
and
xor
inc
loop
add
dec
adc
or
and
mov
add
ljmp
push
stc
cmc
and
push
bound
add
inc
out
aas
mov
scas
adc
add
add
add
add
fsubp
lahf
adc
scas
fstps
push
sbb
add
or
les
loope
mov
mov
js
cmpsb
inc
daa
mov
push
ret
xor
xor
mov
mov
push
cmp
xor
mov
lea
pop
jge
out
in
add
orl
outsb
negl
aam
int
and
mov
mov
and
and
lret
mov
sarb
mov
scas
pop
mov
stc
js
outsl
mov
pop
fimuls
js
jns
test
test
xor
cltd
xor
mov
push
xchg
gs
jae
pop
and
sbb
mov
lock
fnstcw
leave
mov
ffree
ret
cld
lcall
jmp
adc
or
dec
push
xorb
lea
in
das
jae
lret
fnstsw
mov
scas
mov
and
push
bnd
jl
movsb
mov
pusha
add
add
jns
fs
dec
adc
sub
aad
dec
push
xor
shr
imul
sub
xchg
les
sub
lock
jnp
mov
out
fucomp
fs
xor
mov
in
adc
push
std
mov
cmp
jb
adc
negb
out
addb
jp
inc
sti
add
xor
or
and
cli
aaa
lret
xlat
into
xchg
icebp
loope
pop
xchg
jecxz
mov
test
call
add
addr16
je
nop
jp
roll
fs
daa
enter
aam
cmp
adc
pusha
cli
or
sbb
mov
sub
sbb
lahf
imul
xor
scas
sti
adc
push
loope
enter
repnz
not
ret
jl
pushf
dec
push
aam
lds
repnz
dec
bound
aas
mov
inc
dec
jne
adc
sbb
add
or
sbb
in
out
ja
fists
jecxz
lods
addr16
add
pop
add
add
jno
mov
sbb
add
fdiv
in
sahf
pop
adc
xor
cmc
jae
add
sbb
stos
mov
stc
xchg
mov
mov
inc
mov
repz
out
lods
shlb
clc
add
mov
pusha
rcll
iret
pop
lds
test
cmp
dec
bound
xor
fcompl
fnsave
test
mov
inc
negb
dec
and
out
mov
jle
imul
sub
daa
lods
das
adc
leave
adc
jno
dec
in
lods
popf
add
outsb
jns
stc
mov
lcall
and
mov
clc
aas
jne
jl
fstl
out
shrd
pop
data16
ficoms
daa
add
mov
cmp
cmpsl
sahf
push
inc
testb
pop
lods
outsl
push
jae
lahf
inc
test
sub
adc
dec
mov
cmp
scas
test
in
daa
jle
add
pop
add
pop
add
add
dec
sbb
sbbl
xor
cmp
adc
mov
rorl
add
hlt
insl
push
hlt
fisubrl
movsb
jmp
scas
aaa
dec
adc
inc
pop
inc
mov
inc
stc
add
into
xorl
xchg
sbb
adc
cmpsl
pop
cmp
lea
je
xor
fisttps
popa
push
fldcw
cmp
data16
lods
inc
lret
pop
cmpsl
inc
or
test
pusha
iret
push
ret
mov
out
jecxz
test
repnz
pop
gs
sbb
jmp
push
mov
mov
mov
adc
sub
pop
int
and
imul
lock
fsubrs
sti
and
scas
cltd
jecxz
and
mov
imul
idiv
lock
stos
mov
jnp
pusha
sub
cmp
out
push
loope
pop
sbb
sub
adc
mov
jg
idivl
mov
sub
add
pop
add
add
mov
lret
add
push
loop
arpl
inc
push
fnstcw
pop
iret
cmp
fildl
push
orb
jnp
jnp
cwtl
stos
scas
je
insl
in
lcall
sub
pop
mov
sbb
push
sbb
inc
hlt
dec
xchg
jae
jae
mov
paddusb
inc
cmpsl
add
pminsw
roll
xor
fs
push
jb
out
jecxz
mov
xor
pop
push
pop
std
lods
mov
push
pop
popf
insl
ret
aam
scas
push
push
inc
imul
cmpsl
sub
je
dec
mov
xchg
les
inc
mov
mov
push
nop
iret
js
pop
sub
movsb
lods
ret
fsubr
sub
and
rcrb
lods
popa
xor
xor
push
add
inc
daa
lret
nop
incl
flds
in
stos
adc
xor
xor
and
push
xchg
adc
cmpsl
push
mov
add
sti
jg
les
dec
jl
add
pop
add
add
jl
push
add
push
out
leave
lea
sbb
jne
aas
je
cli
xchg
xchg
push
add
lea
in
ljmp
scas
xchg
stos
adc
lret
ljmp
jae
outsb
rcrl
dec
inc
adc
lds
mov
push
push
mov
je
sub
ror
cld
flds
pop
fsubp
xchg
cmp
push
lea
les
or
and
jnp
mov
pop
pop
xchg
pop
cmpl
mov
mov
pop
push
push
lret
jnp
ds
ljmp
jns
pop
call
xlat
aaa
ds
jg
es
sbb
xor
pop
das
add
push
xor
rcl
insl
pop
xchg
dec
repz
cli
das
cmpsb
sbb
pop
das
movsl
inc
cmc
inc
les
pusha
mov
mov
dec
movsl
push
xor
je
lcall
add
scas
aam
jnp
fnsave
xchg
mul
idivb
pop
add
add
stos
push
xor
mov
rorl
sti
jne
xor
mov
and
aas
repz
rorl
xchg
mov
xchg
xchg
out
sbb
sub
enter
mov
call
loopne
rorl
dec
sub
pop
jge
cmp
jb
cltd
loop
loope
xlat
inc
sbb
sub
in
enter
push
cld
mov
add
fs
dec
xchg
xchg
dec
sbb
push
fdiv
push
sbb
stc
div
es
lods
cli
adcb
dec
cmp
and
rorb
xlat
int
test
cmp
mov
sbb
fsts
test
mov
repz
lods
or
icebp
js
add
fdivl
jne
repnz
dec
jne
and
mov
mov
cmpsb
sub
inc
inc
rcrl
imul
inc
sbb
cmp
add
push
sbb
add
mov
jno
std
outsl
mov
inc
loop
dec
sub
mov
add
add
add
fidivl
pop
outsl
cmc
stos
xor
pop
or
testb
lock
dec
cmc
push
and
or
dec
fnstcw
jo
orl
jg
mov
aas
push
push
lcall
movsb
les
ret
xchg
lcall
pop
popf
rcl
and
xchg
addl
clc
sti
loop
mov
mov
xchg
lret
test
insb
std
pop
in
das
sub
aaa
call
stos
and
insl
xchg
and
cmpsl
adc
mov
pop
cld
cmp
cmp
cs
lret
call
xchg
or
into
push
mov
aaa
dec
mov
loop
push
pop
mov
xlat
cli
dec
xchg
ja
cmpsb
lock
aad
inc
int
jle
mov
or
adc
push
rolb
dec
pop
sbb
orl
jns
daa
fidivs
addb
add
add
jmp
ficoml
and
or
add
add
add
pop
and
or
out
iret
dec
dec
xor
ja
inc
mov
loop
dec
jns
jo
mov
jnp
push
xchg
adc
lret
push
or
inc
in
add
xchg
mov
test
les
dec
cmp
cmp
into
lret
jne
int
sub
xor
pop
adc
sub
test
jns
scas
js
sub
and
cld
mov
ja
aad
das
mov
mov
ss
cmp
mov
cld
aaa
call
mov
dec
sub
jns
sub
jbe
lcall
dec
aam
enter
cmpsb
inc
sar
std
mov
adc
mov
and
fcoml
ret
xchg
ucomiss
mov
push
ss
std
jge
or
fucom
inc
mov
lahf
or
adc
push
add
std
xchg
insb
fisubs
rcr
or
add
xor
negl
mov
nop
cwtl
or
add
push
inc
mov
or
sbb
idivl
loope
xor
fdivrs
out
fs
js
test
push
cmpsl
loopne
cltd
push
xor
and
popa
pop
out
add
add
or
rclb
add
add
pop
adc
pop
addr16
adc
outsb
mov
add
test
and
lods
or
mov
cmp
xor
cmp
cmp
stos
lret
and
fnsave
or
daa
jecxz
js
dec
testb
lods
out
mov
pop
cmp
mulb
mov
mov
adc
pusha
or
cmpsb
xchg
aam
movsb
inc
shld
xor
mov
sahf
stos
insb
rcrl
push
and
cmpsl
ljmp
cltd
mov
dec
arpl
jo
mov
mov
arpl
lret
dec
or
add
cli
inc
jg
int
cs
dec
packsswb
push
add
pop
add
add
out
ret
mov
ret
push
add
jae
das
aad
xor
pop
in
xor
ffree
stos
or
mov
imulb
mov
mov
inc
call
mov
sub
add
or
pop
insl
das
cmpsb
popf
or
mov
xchg
jne
repnz
and
icebp
mov
dec
lods
std
mov
pop
sub
shll
jb
ja
ficoml
scas
data16
sub
out
sub
cmp
daa
sti
in
data16
cld
sbb
cli
push
dec
test
insl
cmp
aad
out
lcall
pop
jmp
push
fsubrl
or
add
inc
pushf
cmp
dec
mov
dec
loop
test
lods
jmp
ror
out
aaa
xor
test
outsb
pop
pop
idivb
scas
push
addr16
add
fimuls
mov
push
stc
mov
add
xchg
std
cmp
jle
fistps
push
sti
mulb
add
add
lds
out
cmp
ja
je
sbb
sub
adc
xchg
cmpsl
test
scas
int
repnz
loop
testb
lods
mov
stc
push
add
cmp
or
fistpll
push
insl
fisttpl
inc
xor
mov
inc
lods
popa
jmp
rcrl
scas
popf
jl
adc
out
cmp
out
in
mov
sub
paddb
test
adc
hlt
cmp
into
enter
adc
mov
dec
stc
in
mov
pop
outsb
pop
jmp
dec
pushf
or
testl
cli
hlt
inc
outsl
lods
pop
daa
lock
divl
push
push
adc
xchg
lds
fiaddl
in
mov
ljmp
dec
stc
adc
mov
pop
cmp
out
lock
mov
sahf
xchg
xchg
or
dec
mov
in
sbb
pop
mov
push
aaa
imull
movsl
in
insl
lret
psllq
xchg
pop
lds
xlat
fimull
idivb
add
add
add
movsb
aad
xchg
push
dec
mov
mov
imul
call
in
pop
cmpsl
jmp
cmp
dec
fs
mov
cwtl
xor
es
shll
push
pusha
test
outsb
xchg
pushf
sar
add
pop
fdivr
enter
mov
jle
test
fbstp
jp
xchg
dec
mov
test
push
xor
inc
addr16
fisubrl
rorb
test
inc
mov
jmp
cmp
stos
sarl
nop
lock
jle
xor
hlt
push
dec
daa
inc
daa
outsl
inc
lahf
mov
shrl
inc
fcoml
push
dec
mov
in
cmpsb
int
inc
shlb
popf
movsb
les
push
pop
xlat
fists
lret
mov
lds
jbe
or
dec
xchg
push
xchg
call
test
adc
in
mov
dec
mov
add
sub
iret
outsb
jmp
in
pop
outsl
int
adc
mov
add
pop
add
add
pushf
lods
ds
mov
adc
test
adc
shll
mov
adc
imul
fiaddl
fcompl
add
mov
je
mov
cmp
mov
cmpsl
pop
mov
lds
in
sbb
mov
sub
jmp
xchg
pop
call
dec
idiv
mov
clc
jle
insl
cmp
mov
idivl
or
sub
pop
add
movsl
mov
mov
inc
scas
xor
or
fwait
inc
and
push
mov
sbbl
adc
push
mov
pop
xor
iret
cltd
outsl
mov
movsb
jno
inc
dec
fidivs
neg
mov
cmp
push
test
cmp
xchg
ja
enter
and
xor
xchg
add
mov
int3
enter
cwtl
das
or
nop
or
sbb
inc
pop
repnz
adc
mov
add
xchg
add
std
sbb
stc
cld
or
xchg
pop
movsb
pop
mov
add
add
cli
lcall
mov
andb
or
mov
jae
ficoms
push
and
sbb
dec
inc
dec
xor
int
mov
in
jl
adc
outsl
cmp
cmp
popl
and
jecxz
push
mov
lcall
lcall
mov
fists
imul
or
rorb
mov
pushf
inc
lods
outsl
cmp
outsb
sbb
movsb
call
jnp
mov
push
sbb
cmp
jo
loopne
dec
popa
cmp
xchg
loopne
sbb
dec
lahf
add
mov
insb
outsb
mov
mov
sub
bound
push
pop
dec
sub
jp
in
sbb
jne
pop
inc
daa
hlt
inc
pop
add
jecxz
jle
mov
cmpsb
shlb
push
jo
test
inc
outsl
hlt
xorl
add
add
pop
test
scas
repz
cld
arpl
shll
adc
add
add
add
cli
movsl
int3
inc
mov
paddsw
fldt
inc
jp
in
cmc
repz
mov
stos
add
enter
js
cmp
xorb
xchg
fwait
jge
cmp
mov
int
lods
xor
sub
pop
aas
push
sti
pop
adcl
mov
and
mov
out
pop
add
jl
push
push
or
or
in
dec
xlat
sarb
jo
mov
cmp
cmp
inc
daa
xchg
xchg
outsb
movl
jp
dec
and
sbb
loopne
cmp
add
sti
push
sub
out
lock
dec
jns
sbb
jbe
das
lods
push
push
mov
fs
pop
jno
push
dec
dec
sub
and
push
mov
lret
mov
sbb
cltd
ljmp
mov
xlat
sbb
pop
stc
inc
fiadds
add
dec
pushl
xor
dec
daa
leave
adc
add
add
add
xlat
lcall
arpl
lea
pop
xchg
test
sub
push
sbb
addr16
cli
fisubrl
fistpl
or
push
sub
mov
gs
xor
lea
add
leave
sub
mov
jmp
pop
daa
stos
and
popf
mov
xchg
add
mov
and
jge
in
and
or
int3
push
jl
mov
addb
xor
aam
add
inc
inc
xchg
incl
or
sbb
adc
mov
add
in
jns
shlb
xor
test
push
out
cmp
push
in
sbbl
dec
mov
xlat
sbb
in
sub
in
out
or
negl
cmp
mov
cmpsl
aam
data16
mov
test
ds
mov
ud2
in
push
movsl
fiadds
pop
sub
inc
ja
pop
aas
pop
jmp
mov
rclb
add
and
bound
pop
adc
inc
mov
imul
mov
mov
sbb
inc
pop
mov
pop
call
pop
mov
out
rclb
xor
fwait
jp
xchg
pusha
js
subl
push
xchg
adc
or
mov
xchg
out
lcall
xlat
movzbl
sub
pop
enter
aad
or
xchg
or
push
stc
in
mov
imul
clc
sbb
sbb
repz
mov
pop
lret
das
push
into
flds
es
jl
xlat
stos
pop
push
and
sbb
mov
repz
sbb
or
mov
sbb
pop
cmp
mov
scas
adcl
roll
push
mov
cmp
imul
je
lea
jl
sbb
repz
push
add
xchg
jae
ja
div
fisttpll
push
xlat
push
add
pop
add
add
mov
pushf
les
in
stos
out
push
daa
pop
jno
stos
jns
ret
jb
mov
nop/reserved
gs
sbb
adc
bound
xchg
mov
int3
iret
sub
cs
aad
clc
push
or
jp
fimull
fmulp
dec
pop
jne
sub
or
insb
out
sbb
lcall
adcl
ja
or
int
mov
mov
mov
pop
in
scas
mov
out
xchg
ss
in
xchg
in
mov
dec
cwtl
outsb
cmp
fildll
gs
inc
lods
mov
and
fs
add
adc
dec
mov
push
and
adc
aam
outsl
jns
inc
dec
pusha
pushf
xor
adc
xchg
xor
xchg
sbb
push
sbb
imul
cmp
jo
sbb
shl
push
cld
pop
add
cli
std
jg
mov
ret
jg
pop
add
pop
add
add
xor
lahf
fsubrl
lods
inc
aam
sub
mov
pushf
sub
sahf
in
mov
cld
or
cwtl
cmpsl
cmp
cmp
test
fidivrl
xchg
out
fs
out
add
movsl
cli
fcomps
gs
sbb
aad
mov
dec
in
mov
xor
pop
and
cltd
jecxz
mov
or
mov
ret
sub
mov
ss
inc
cwtl
push
leave
mov
scas
cmp
repz
aad
mov
cmp
jg
aam
xchg
enter
mov
sub
sbb
sub
sbb
add
inc
fisttpll
jnp
add
mov
mov
cmp
push
dec
stos
mov
and
ret
pmaxub
inc
inc
xchg
cli
jmp
mov
add
fnstcw
icebp
test
xor
pushf
movsl
mov
xchg
addb
cli
stos
jmp
add
out
dec
std
add
add
mov
std
incl
mov
mov
add
add
add
clc
movsb
jl
outsb
repz
push
arpl
inc
adc
inc
lds
sub
mov
es
xchg
dec
icebp
andl
jne
and
push
push
mov
nop
xor
adc
inc
mov
loope
xor
push
push
push
cltd
insb
pop
pop
dec
mov
pushf
pop
andl
mov
mov
jle
sbb
and
adc
mov
mov
enter
adc
jmp
xchg
scas
test
pop
int
mov
std
scas
sub
pushl
add
push
dec
fiaddl
int3
jmp
not
xchg
inc
lcall
push
sub
sbb
push
cmp
pop
lret
dec
dec
jecxz
fucomip
adc
jmp
fsubl
out
mov
xor
orb
mov
and
ret
dec
mov
mov
and
std
add
es
jg
pop
pop
mov
xchg
mov
sbb
add
add
add
repnz
dec
and
push
scas
ds
jmp
xor
popf
lock
repnz
pop
adc
addr16
subl
cltd
loope
inc
fcomp
cltd
mov
loope
outsl
int3
add
xchg
movsl
xchg
popa
fcomp
push
aaa
mov
cmp
pop
scas
repnz
mov
test
xchg
mov
dec
imul
or
mov
nop
or
cmp
imul
ds
jge
clc
imul
sti
cmp
mov
aad
dec
out
loop
jne
or
jbe
cltd
call
xchg
daa
mov
fsubrl
lods
enter
push
enter
test
inc
or
orb
out
fstps
jns
cmp
enter
push
add
rcr
add
dec
les
mov
fnstcw
out
dec
dec
int3
adc
push
clc
or
mov
add
sbb
add
add
add
inc
aaa
loope
cmp
push
arpl
pop
push
push
push
mov
les
aad
push
pop
push
fwait
das
mov
mov
or
pop
push
cmp
sub
sub
mov
dec
test
loope
in
es
dec
fisubl
mov
pop
lods
xchg
lcall
lret
push
in
cmpxchg
mov
sbb
sub
xchg
push
and
lea
pop
push
jg
cmp
mov
test
lods
jg
lahf
inc
push
pop
inc
dec
gs
cmc
lret
fs
jmp
ss
mov
into
mov
test
jmp
dec
mov
fsubrp
sub
mov
mov
mov
mov
rcll
std
mov
loopne
push
rol
pop
dec
test
adc
fimull
push
gs
dec
shl
dec
ljmp
jo
jo
cmc
pop
lret
pop
mov
or
sti
fmulp
cs
outsb
cmp
mov
adc
sbb
sub
xchg
add
stc
lods
xor
xor
loop
sbb
add
pop
add
add
scas
iret
js
pop
xor
mov
mov
dec
sbb
inc
lods
aad
dec
mov
push
rcrb
mov
ficomps
sbb
rorl
data16
mov
mov
jle
cmpsb
out
pop
xor
pop
aaa
or
xchg
popf
pop
xchg
out
xor
cmp
outsb
stc
icebp
jo
fdivrl
or
sarl
jg
xchg
rol
sub
adc
cwtl
or
mov
mov
and
insb
jmp
sub
add
lcall
imul
mov
jmp
into
xchg
cld
scas
and
push
repz
and
int3
call
in
das
xchg
add
notb
push
pop
mov
scas
int
add
js
lret
jnp
rol
insb
fdiv
add
push
lahf
loope
repz
pushf
scas
push
andl
add
add
mov
ficoms
stos
sbb
jmp
ljmp
lret
add
pop
add
add
mov
rcrl
out
outsb
insb
xchg
test
add
add
je
jg
enter
jns
leave
cmp
stos
mov
inc
rcrb
repz
fcmove
xchg
mov
push
ficoml
xchg
imul
out
out
lahf
mov
xor
sbb
mov
mov
mov
lods
insl
or
ror
mov
push
int
cmpsb
cmc
sbb
popa
ss
and
mov
int3
ds
jae
sahf
nop
mov
bound
sbb
jp
mov
jle
inc
sub
adcb
add
mov
sub
hlt
push
sbb
mov
popa
mov
outsl
jle
jnp
and
mov
inc
mov
dec
xor
push
dec
aaa
sbb
shlb
push
or
mov
jb
mov
pop
inc
pop
mov
and
mov
add
adc
jle
xor
in
nop
sub
and
fwait
movsb
mov
cwtl
cmp
push
inc
ss
lcall
push
dec
jmp
add
mov
out
arpl
aas
push
scas
enter
add
pop
add
add
ja
push
or
jge
xchg
test
add
xor
jne
mov
inc
pop
sub
mov
imul
and
rcll
scas
add
dec
dec
adc
lret
int3
out
xchg
cmp
xchg
adc
scas
adc
mov
push
jle
push
jmp
lret
jecxz
push
int
cmp
cmpsb
cmpsb
hlt
sbb
call
push
sbb
xchg
orl
xchg
lcall
mov
sbb
sbb
iret
loopne
sbb
push
xlat
pop
stc
pop
mov
insl
dec
mov
and
sub
das
das
sbb
fs
add
lods
inc
mov
repz
pop
pop
int3
rcl
mov
addr16
arpl
cmp
or
pusha
push
jne
sub
mov
push
test
mov
mov
push
jnp
out
pop
sbb
jo
test
add
lea
aaa
add
sbb
out
cld
mov
jnp
jo
nopl
add
add
add
rolb
in
bnd
adc
fisubrl
aam
imul
loope
pop
scas
mov
mov
stos
cmp
lcall
adc
repnz
pop
sbb
arpl
push
ss
sbb
xchg
negb
aas
inc
jecxz
jg
push
lret
inc
test
les
xor
gs
mov
xor
mov
mov
ret
sti
sbb
jno
aaa
inc
add
in
das
push
or
cmp
jne
into
xor
cld
pusha
push
stos
push
imul
std
pop
inc
mov
es
inc
jb
int3
mov
jae
cmp
add
lea
stos
jns
arpl
jg
adc
mov
mov
int3
pop
movsb
addb
js
mov
pop
add
mov
xchg
cmp
or
inc
mov
adc
fs
jo
addl
add
popf
clc
pop
or
mov
fistl
mov
add
in
add
cmp
out
lock
add
add
pop
add
add
push
pop
mov
sbb
insl
inc
jne
out
mov
int3
out
das
sub
je
arpl
xor
out
hlt
or
xor
pop
push
icebp
add
sub
inc
xor
sbb
sahf
mov
mov
mov
jp
sbb
fsubs
xor
xchg
aas
cmp
sarl
or
or
inc
test
add
rcrl
jmp
xchg
push
hlt
jne
dec
out
ljmp
loopne
jae
aad
hlt
cmp
push
aam
pop
jmp
and
inc
xor
stos
roll
xchg
dec
and
push
jle
push
pop
cmc
inc
xorb
or
inc
sti
adc
or
sub
or
scas
je
jnp
sahf
data16
mov
fidivl
mov
jecxz
inc
xchg
outsb
movsb
pop
pop
sbb
fcmove
sbb
mov
inc
inc
inc
jecxz
test
sbb
cmp
rolb
outsl
mov
add
add
add
jae
push
cmp
fwait
orb
jle
rorl
mov
push
fdivl
mov
lret
xchg
jecxz
aam
pop
jge
or
stos
mov
cmp
dec
sub
or
push
add
pop
aas
sbbb
sub
fstl
or
leave
or
clc
test
sbb
and
mov
pop
add
nop
add
mov
outsl
sbb
rsm
push
lahf
push
mov
mov
push
daa
or
dec
jnp
pop
movsl
jb
movsb
stos
fisubl
jae
and
jmp
pop
jecxz
or
adc
clc
vmovapd
or
outsl
jno
in
test
sub
shrb
call
mov
xor
insb
fcmovne
jmp
push
dec
and
ja
shlb
mov
and
jno
sub
lahf
nop
cs
jl
jecxz
mov
or
test
mov
dec
idivl
cld
fcmovbe
out
insl
icebp
lcall
add
pusha
mov
mov
mov
out
and
xchg
xor
pop
out
lret
mov
shlb
test
push
hlt
dec
xchg
or
aad
mov
inc
jo
inc
pop
icebp
sbb
xchg
sbb
aad
ficomps
ja
fadd
pop
je
ret
mov
mov
push
ret
add
aaa
xor
rolb
out
adc
jae
jne
add
vrcpss
inc
gs
lret
xchg
icebp
sub
sbb
repz
mov
fs
push
jp
mov
mov
jns
jno
push
daa
sbb
and
jg
push
ljmp
scas
xor
pop
inc
call
inc
jecxz
out
fcomps
jle
xchg
cwtl
xor
idiv
inc
push
les
sbb
mov
jecxz
clc
cwtl
mov
cmp
bound
mov
cmp
std
sub
jle
sub
sbb
add
ret
mov
iret
mov
or
add
pop
add
add
jbe
rcll
hlt
push
xchg
mov
ret
imul
jne
scas
ret
and
pushf
icebp
neg
fdivrs
inc
push
shlb
bound
cwtl
testl
ljmp
sub
pop
cmpsb
sub
daa
sbb
push
dec
ret
mov
mov
mov
xchg
or
xor
inc
ficompl
xchg
test
push
test
call
or
mov
push
add
push
lret
pop
aad
jae
cmp
aaa
gs
fwait
loope
scas
xor
xchg
idiv
std
aad
imulb
negl
repnz
sub
iret
push
push
test
sub
ficomps
call
sub
cs
ret
loope
aam
popf
adc
out
test
fs
inc
decb
mov
jp
inc
scas
orl
into
sbb
out
ret
cli
incb
or
lahf
and
cmp
add
pop
add
add
or
repz
fsts
lret
sub
jbe
xchg
pop
pushf
cmp
pop
pop
fdivl
jle
in
das
mov
push
and
adc
clc
sbb
mov
pop
in
ret
mov
jo
cmp
dec
jg
sub
out
push
jle
lods
call
jne
add
push
mov
sbb
and
lock
xor
fidivs
repnz
push
pop
jnp,pn
xlat
enter
cmp
adc
pusha
add
outsb
out
fdivl
lock
xor
cmp
jecxz
xor
js
rorl
jo
ret
inc
cmpsb
arpl
push
pusha
sbb
mov
rclb
push
je
jb
jge
in
jmp
in
jp
jno
mov
shld
push
pusha
cli
mov
mov
xlat
test
jg
lods
mov
pop
stos
inc
je
movl
sbb
dec
add
xor
clc
cli
clc
sarb
js
lds
and
add
imul
cltd
mov
cmpsl
lcall
cmp
dec
and
xor
mov
movsb
test
cltd
mov
cmp
push
jle
xor
out
mov
fldcw
dec
xor
sbb
cmp
popa
sub
push
hlt
das
popl
sahf
jb
dec
out
cmp
dec
int3
popf
fnstenv
aas
and
nop
mov
es
mov
hlt
or
outsb
cmp
cmp
shrb
jle
push
popf
fs
dec
mov
fwait
jne
mov
pop
aas
xchg
and
in
outsb
inc
add
fisubrl
and
pushf
cli
shr
jg
out
data16
mov
jne
sbb
pop
adc
add
add
imul
add
imul
loopne
rorl
mov
push
rclb
movsb
aam
aas
andb
push
push
pop
and
adc
rolb
test
imul
add
push
cmp
outsb
popl
add
pop
add
add
dec
xor
xchg
push
in
adcb
ja
or
mov
insl
jge
and
pop
fldt
inc
out
mov
rorl
mov
pop
rcrl
xchg
mov
popa
and
repnz
aas
and
fsubrs
hlt
and
mov
in
divb
mov
jae
xorb
xchg
fwait
mov
inc
jb
js
cmp
xor
aaa
shl
jne,pt
dec
hlt
push
push
xlat
sbb
jnp
mov
rolb
mov
inc
jl
cmp
in
pop
push
or
out
pop
add
pop
xchg
stc
lret
hlt
xchg
adc
cmp
dec
dec
daa
pop
adc
lret
inc
into
cmpsl
ljmp
subl
and
popf
mov
dec
sti
subb
sub
or
xor
add
or
push
imul
in
out
in
inc
add
xor
mov
nop
call
imul
add
es
data16
pop
sub
daa
aas
popf
add
daa
add
pop
add
add
fsubl
in
inc
push
aas
ret
jae
int
enter
rorb
inc
xchg
ljmp
or
mov
mov
mov
mov
mov
sbb
es
jle
inc
je
loopne
or
add
mov
aam
aaa
jecxz
jmp
sbb
jecxz
aam
imul
pop
jl
cmp
jmp
add
push
push
and
sbb
push
clc
sub
orl
xchg
movsl
sbbb
push
int
xchg
push
scas
pop
cwtl
xchg
sub
shrb
filds
sub
sbb
adc
ret
sub
mov
push
cld
push
cmp
movsl
sbb
gs
jno
jmp
rcrb
rep
cmpsb
imul
int
mov
scas
mov
aas
jecxz
jmp
clc
mov
fldcw
xlat
mov
insl
dec
sub
add
add
add
sub
fidivrs
xor
sbb
dec
inc
jecxz
call
mov
or
and
pop
xchg
pop
xchg
jbe
and
mov
arpl
xchg
mov
data16
jae
pop
pop
mov
adc
mov
aas
and
cltd
outsl
imul
mov
out
or
inc
popf
cmp
pop
test
loop
or
add
inc
cltd
loopne
push
mov
pop
fnstsw
stc
or
fwait
xchg
int3
addr16
das
and
sbb
movsl
jp
push
enter
scas
dec
push
les
push
dec
dec
bound
orb
cli
jle
push
test
jp
aam
sbb
mov
lahf
mov
lahf
jno
ds
jno
pop
je
aam
pop
std
ret
aam
nop
out
push
jno
jg
ja
ror
mov
leave
push
inc
mov
xchg
lret
mov
faddl
movb
mov
repz
push
sti
cmpsl
push
mov
xchg
jmp
add
pop
add
add
insb
sub
dec
inc
add
mov
dec
stos
outsb
call
rol
xchg
mov
das
data16
scas
add
aad
leave
lods
lcall
pop
int3
mov
dec
sbb
mov
popa
iret
je
stos
sbb
in
insl
arpl
jno
cmp
sub
cmp
lock
add
pop
sti
test
or
mov
jmp
and
imul
add
std
cmpsl
mov
pusha
ss
movsb
xchg
fwait
call
mov
pop
xchg
jns
cltd
outsl
mov
dec
aaa
dec
divl
mov
enter
out
jp
add
inc
jecxz
loop
adc
scas
xchg
xchg
fnsave
mov
lret
sub
cwtl
lahf
dec
fadds
sub
pop
enter
negb
push
and
std
mov
ljmp
cmp
add
add
mov
sub
shrl
pop
scas
aad
push
jno
test
ret
loopne
cli
in
sbb
mov
jbe
jo
mov
mov
cltd
dec
sbbb
pop
js
lock
sub
push
into
mov
add
dec
pop
mov
ficoms
push
sub
mov
mov
cmpb
clc
push
cs
pop
icebp
es
jbe
mov
out
push
movsb
pop
dec
cmpsl
ss
push
cmc
clc
sub
pop
enter
sub
mov
aaa
cli
das
scas
dec
adc
fdivl
imul
int
cs
mov
add
inc
lock
test
cmp
cmp
cwtl
test
shll
sub
mov
lea
scas
leave
pop
clc
filds
insb
xchg
stos
pop
mov
add
push
aaa
mov
ss
sti
pop
jae
and
sar
inc
fidivrl
loope
arpl
add
lds
xchg
and
sbb
stc
add
push
data16
add
pop
add
add
jg
lods
imul
insl
sub
lds
or
mov
jg
mov
dec
push
fsubrp
dec
jno
xor
cs
lea
mov
sub
inc
jnp
out
xor
ficompl
mov
adc
ljmp
mov
outsl
pusha
test
sbb
sahf
and
loop
fcmove
mov
adc
mov
icebp
inc
inc
inc
inc
out
cmpsb
mov
jnp
dec
jno
sub
lcall
push
dec
repnz
insl
sbb
out
jne
inc
popf
lret
cli
xchg
mov
mov
data16
push
popf
push
lds
dec
jmp
and
sbb
pop
jge
jmp
out
imul
add
xor
jbe
cmp
out
movsl
aas
cmpsl
adc
mov
mov
jo
rorl
jae
fidivl
add
add
xchg
ficomps
cmp
loopne
xchg
adc
add
pop
add
add
mov
cmpsl
xchg
pop
push
adc
cld
push
insl
movsl
popf
aaa
cltd
pop
lock
cltd
jle
xchg
dec
cmp
or
scas
cmp
jmp
xchg
loop
test
out
aam
push
je
fsubl
loopne
push
dec
push
and
gs
pop
hlt
push
mov
sub
rcll
lret
std
adc
push
stos
addr16
pop
sahf
imul
xor
xchg
nop
pop
repz
pop
rcrb
pop
pop
mov
sub
stos
loop
adc
hlt
xor
push
mov
outsl
mov
push
xor
enter
cmc
adc
pop
imull
adc
jne
mov
mov
dec
dec
aad
xchg
xchg
mov
push
and
mov
or
imul
repz
lock
pop
in
adc
out
xor
bnd
cs
imul
inc
jge
test
mov
cli
add
sbb
sub
adc
add
lods
xor
mov
js
addr16
divb
add
pop
add
add
add
lret
iret
sbbb
fwait
sbb
popf
add
jo
les
sub
fcoml
mov
sti
stos
arpl
mov
into
out
loope
sarl
mov
dec
arpl
test
and
inc
rcrb
mov
push
jnp
mov
jmp
fisubs
mov
repz
test
dec
insb
inc
sahf
lret
shll
in
sub
mov
filds
in
xor
jmp
or
icebp
pop
add
jmp
ret
mov
push
test
icebp
jno
mov
lret
and
shrl
bswap
dec
mov
je
loope
xor
mov
shl
cmp
loop
adc
and
decb
test
aas
aam
and
cs
lock
imul
dec
mov
mov
aam
sbb
out
outsl
sbb
in
mov
sarl
add
add
lret
mov
sub
test
js
add
pop
add
add
scas
lret
or
jmp
mov
clc
jae
jnp
jnp
jnp
mov
sbb
mov
stos
jle
in
push
test
lods
xchg
fmuls
movb
xor
repz
cmp
addr16
push
xchg
imul
mov
xchg
jno
rorb
push
adc
fsubs
das
jbe
aad
fldl
out
shl
loop
frstor
fiaddl
addr16
push
ss
pop
sbb
mov
pusha
out
xchg
sbb
imul
outsl
dec
adc
adcl
sub
mov
mov
dec
or
push
sub
pop
push
and
push
inc
jne
shll
mov
ret
jg
repnz
adc
andb
js
xchg
hlt
test
mov
gs
xchg
fisubs
pop
push
sarb
je
les
pusha
mov
push
sub
jnp
xchg
sub
sti
pop
jge
divb
lret
jb
jg
add
pop
add
add
push
sbb
or
xchg
int3
push
arpl
push
or
dec
mov
cmp
dec
pop
scas
imul
xchg
push
mov
mov
push
mov
cmp
and
ret
repz
ja
rcrl
and
cld
pop
pop
push
and
out
scas
and
fistps
jmp
lcall
jl
pop
fstpt
pop
push
mov
sahf
and
jo
dec
cmpl
int
inc
sub
ret
sbb
xor
in
and
jnp
xor
fidivl
pop
xor
je
test
test
loope
mov
or
mov
imul
insl
je
aad
jp
arpl
adc
outsl
ds
sub
mov
lahf
in
sub
hlt
shrl
push
cmp
or
dec
mov
call
add
fsub
std
in
popf
dec
int
hlt
add
xchg
add
add
aam
lcall
xchg
sub
add
push
add
xor
pop
jo
vpshufhw
adc
or
pusha
adc
push
mov
mov
xchg
jbe
dec
cmp
mov
mov
and
xchg
jecxz
mov
cwtl
xchg
push
pusha
popf
nop
pop
enter
lcall
xlat
push
mov
xor
shll
das
push
aam
xchg
faddl
imul
mov
scas
imul
xchg
orl
inc
ja
cmpsl
daa
shl
mov
mov
daa
or
sbb
pop
mov
and
aaa
fadd
call
into
outsb
hlt
cmp
movsb
lahf
loop
mov
push
test
inc
aas
nop
inc
cmp
movsb
cmc
sbb
out
test
sub
lcall
cmp
outsl
inc
popf
pop
mov
fcoms
loop
out
add
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
or
or
popa
jge
pop
in
fsubr
cmp
mov
pusha
xchg
cmpsb
pop
push
out
cld
mov
fisubl
arpl
sbb
mov
add
cmpsl
xchg
mov
add
aas
hlt
dec
push
lods
pushf
sbb
mov
or
add
mov
mov
and
mov
cmp
lret
insl
shll
add
in
jmp
mov
xchg
or
aas
pop
aaa
int3
and
push
cmpsb
subb
das
add
mov
aas
mov
test
cmp
movsl
call
or
mov
adc
sub
mov
popa
jg
or
sti
test
xor
add
cld
outsb
notb
fisubl
hlt
int3
mov
inc
lock
xchg
ror
jo
or
jbe
sbb
stos
adc
nop
push
jecxz
fldt
mov
push
sti
das
ret
lods
daa
into
mov
cmp
add
mov
sub
jno
in
outsl
xchg
adc
cmc
jp,pt
lcall
ds
xchg
nop
jp
sub
mov
jg
xor
mov
xor
push
cmp
mull
sahf
or
jo
rcl
mov
pop
fwait
decl
xor
test
pop
add
gs
dec
sbb
les
bound
test
pop
stos
bsf
xchg
js
pop
insb
pusha
adc
jnp
xor
je
movsb
pop
stos
sbb
sti
mov
jecxz
orl
ret
lods
xchg
popf
cmpsb
popf
mov
mov
fiaddl
lds
stc
lock
sub
int
jmp
repz
stc
cmp
push
mov
stos
xchg
int3
mov
loopne
roll
dec
jbe
inc
sti
mov
dec
sbb
mov
dec
out
outsl
jns
cmpsb
cmc
inc
xchg
call
cld
clc
xchg
repnz
dec
sub
mov
out
add
push
ret
cmp
sti
aad
loopne
push
xchg
ja
xor
add
add
add
cmp
aad
xchg
xchg
push
dec
jno
pop
mov
std
mov
xchg
push
out
leave
cld
pop
dec
jbe
jns
loope
js
std
sahf
lods
jo
mov
test
fiadds
movsl
add
jmp
mov
dec
pop
testl
pushf
xor
cld
loope
jno
rorb
rcll
xchg
lds
mov
inc
lret
inc
push
cmp
mov
fs
sbb
rorl
push
iret
dec
aaa
fbstp
lret
sbb
and
je
or
jbe
out
jnp
jno
jp
and
aad
faddl
pop
rep
in
ret
lods
jmp
dec
icebp
dec
jp
mov
test
sahf
mov
or
inc
popf
push
mov
push
add
dec
xchg
inc
push
aam
push
xlat
sbb
mov
fmull
out
stc
pop
fnstenv
cmp
and
mov
sbb
popa
push
mov
cmc
shll
add
cmp
jge
stos
sbb
in
mov
add
add
inc
push
and
mov
jecxz
jge
xor
jnp
xor
hlt
sarl
movsl
xchg
aaa
cmp
pop
xchg
int3
cs
cmp
lods
shlb
mov
mov
enter
inc
add
addr16
testl
xchg
jae
adc
test
mov
icebp
insb
sbb
add
jno
xchg
test
sbb
scas
push
xor
xchg
into
rcll
adc
mov
xchg
add
repnz
mov
pop
xchg
rclb
addl
das
arpl
xchg
add
add
cld
xchg
shr
fsub
sti
stos
scas
mov
xor
cmpsb
lock
pop
mov
dec
cli
fstpt
gs
mov
loop
cwtl
leave
sub
jle
ja
dec
inc
stos
push
lcall
cmpsl
stos
jp
xchg
pop
mov
pop
xlat
shll
add
rclb
fwait
aad
xchg
and
test
add
add
gs
sub
sub
sahf
jmp
shlb
repz
mov
repnz
test
inc
popa
fildll
xor
push
int
int3
or
test
shll
jbe
add
das
cmpsl
test
dec
xchg
dec
cmp
cli
jp
mov
lahf
gs
mov
insl
sub
sub
mov
test
cmp
pop
sahf
adc
popf
scas
push
ret
hlt
insb
cmp
out
out
in
stos
mov
iret
jno
xchg
js
cmp
jne
aaa
adcb
lret
dec
pusha
inc
push
adc
scas
and
mov
cs
inc
leave
imulb
scas
mov
add
sarb
and
sbb
sbb
lcall
aam
lock
sti
loope
mov
sar
add
call
add
dec
mov
sbb
push
lods
xor
add
jbe
idivl
mov
cmp
add
add
add
data16
mov
dec
fiaddl
xor
fst
xchg
into
mov
and
fimuls
xor
bound
add
or
inc
out
pop
xchg
push
xchg
sbb
jmp
push
and
addb
cmp
fsubs
cmpsl
jmp
pop
into
out
rol
add
lock
sub
xlat
cmpsl
mov
xchg
inc
jae
out
out
lahf
mov
inc
dec
data16
jno
mov
test
or
or
in
mov
pushl
mov
pop
sub
test
jl
xor
add
push
cltd
xor
add
lds
jge
mov
ret
jecxz
pop
jb
scas
test
pusha
cmp
imul
cmp
in
jp
scas
aaa
idiv
test
dec
cs
mull
sbb
imul
pushf
xchg
sub
mull
sub
enter
sub
sldt
add
add
outsb
sub
stos
fs
push
pop
or
and
pushf
divb
add
add
pop
scas
sbb
xor
mov
cs
jne
sub
pushf
pop
lods
cs
cmpsl
sar
push
push
sub
adcb
push
xor
bnd
add
out
mov
pop
addr16
ret
test
aam
push
sub
cmp
add
cwtl
aad
cli
dec
push
leave
inc
sub
repnz
adc
outsl
insb
sbb
popa
mov
mov
and
inc
nop
fimull
jmp
fidivl
adc
int3
push
mov
mov
pusha
add
xor
mov
or
xor
mov
jb
jo
pop
rcll
cmp
and
add
xlat
dec
in
test
jnp
dec
rolb
fst
jno
xor
and
and
pop
mov
mov
sub
xor
insb
mov
xchg
cmpsl
leave
pop
shll
movsl
imull
xchg
les
scas
fistpll
inc
ljmp
add
pop
add
add
fadds
loop
pop
lods
lock
test
lahf
xchg
push
gs
in
mov
shr
xchg
mov
xlat
dec
fmul
stc
inc
or
inc
jns
cmp
cmp
sub
cmc
jmp
jl
pop
mov
or
inc
into
insl
clc
movsl
dec
cmp
jb
cld
outsb
mov
or
cmp
xchg
mov
adc
jl
push
and
jnp
lock
jns
fsubrs
dec
xchg
and
pop
mov
or
jo
xor
xor
fistpll
mov
call
idiv
cmpsb
cwtl
xor
xor
xchg
push
inc
mov
aam
xor
add
aad
jns
pop
ljmp
loop
lock
sbb
jp
xchg
xchg
imulb
jnp
jl
mov
aad
dec
pop
in
xor
fsubp
rorl
test
aaa
leave
and
sbb
jnp
jnp
cmp
out
lahf
push
pop
lcall
add
add
add
fstl
insl
clc
pop
sub
mov
mov
xor
shll
mov
repz
icebp
mov
shrb
in
and
mov
mov
ja
frstor
stos
movsb
aad
inc
rcrl
popf
test
pop
outsl
adc
fcoms
push
mov
mov
push
adc
lret
ret
pop
xchg
add
mov
or
mov
push
fsubrp
outsl
js
nop
cmp
test
xchg
dec
outsb
loope
nop
jg
movsl
cltd
fwait
sbb
jo
add
dec
jnp
shl
mov
mov
xlat
filds
xchg
push
jp
cmpsl
cltd
test
jle
inc
je
inc
and
sti
xor
inc
mov
sub
dec
enter
push
mov
inc
mov
insb
outsb
into
in
sub
xor
xchg
mov
jnp
mov
cmp
adc
dec
jl
es
xor
xor
icebp
push
add
add
adc
dec
ja
aas
mov
hlt
imul
add
add
daa
mov
push
pop
mov
xor
aas
ficoml
lods
mov
popf
cli
adc
aam
pop
or
lock
cmpsl
rclb
hlt
xchg
pop
mov
inc
xor
int
sbbl
xor
shlb
lret
pop
mov
ljmp
sub
int3
xchg
shrl
push
mov
scas
gs
jmp
sahf
xor
mov
sar
ja
out
jns
popa
jg
xchg
jne
dec
sub
xchg
inc
mov
sbb
push
insl
fisubrs
dec
cmp
xchg
cld
add
ja
xor
mov
and
push
mov
gs
xchg
xor
push
int3
daa
in
test
adc
mov
jbe
xchg
sbb
and
das
cmp
lods
repz
add
add
pop
add
add
cmpsb
mov
jno
in
int3
dec
jnp
xor
mov
arpl
test
ljmp
sub
cli
sub
and
dec
jno
jo
out
push
orb
inc
loop
pop
xchg
pop
xor
js
movsl
sub
sbb
stos
sub
mov
mov
inc
outsl
xchg
push
add
sbb
pop
jg
roll
push
aaa
notl
outsl
sub
dec
fiadds
xchg
cmp
test
dec
jne
sbb
xor
mov
jb
pop
out
fisubrl
jb
jnp
adc
daa
or
loopne
cli
adc
pusha
ret
mov
push
lret
in
lret
aam
ja
pop
mov
hlt
outsb
ljmp
pop
mov
sub
jo
insl
xchg
sbb
bound
out
pop
cmp
xor
aas
daa
push
cld
push
std
jmp
pop
adc
enter
add
pop
add
add
arpl
and
xor
sbb
inc
aas
mov
xchg
jp
inc
jge
push
or
jnp
jae
dec
nop
cmpsl
imul
pop
fistpl
rorl
je
std
jne
mov
les
mov
lds
mov
push
nop
clc
adc
xor
push
sbb
push
and
std
dec
add
test
cmp
cld
xorl
xchg
loop
ret
ret
pop
sarb
cli
mov
pushf
cmp
dec
test
dec
sub
popf
xchg
push
push
mov
shll
les
sbb
add
mov
orb
dec
sub
insl
js
pop
and
push
mov
xchg
inc
lods
dec
imul
pop
iret
stos
jo
xchg
mov
xor
add
mov
ret
in
dec
adc
imul
and
lods
imul
dec
push
add
sbb
dec
push
out
jge
lret
das
loope
add
pop
add
add
in
jmp
mov
into
sbb
test
sbb
inc
mov
sbb
push
scas
xlat
call
outsl
xor
inc
in
xchg
ljmp
ret
adc
fsts
or
pop
sub
xor
lret
jbe
out
fistpl
add
enter
push
pushf
and
mov
call
sbb
jne
cli
outsb
bound
jne
cmp
pop
andl
popf
data16
push
repnz
dec
jle
mov
cmp
and
xchg
stos
orl
and
inc
stos
imul
in
mov
and
mov
cmp
mov
sub
cmovb
adc
pop
push
mov
push
fnstsw
xchg
dec
aas
jg
dec
stos
leave
mov
ljmp
fnstenv
and
lret
repnz
mov
stos
add
push
mov
mov
add
pop
add
add
xor
fidivl
ljmp
sbb
imul
mov
ficoml
sub
jge
mov
jecxz
sub
pop
lea
fsubrs
sbb
out
loopne
xchg
stc
leave
dec
call
in
inc
loop
sbb
repz
movsl
repz
pop
sahf
mov
push
mov
or
clc
add
cmp
divl
rclb
repnz
mov
fistpll
inc
ds
xor
mov
mov
cwtl
ss
pop
stos
in
outsb
and
and
cli
das
mov
pop
dec
lcall
mov
das
and
lahf
jb
mov
pop
adc
mov
out
jbe
mov
add
lcall
jnp
fistpl
popa
xor
insb
or
pusha
repz
leave
sub
push
jecxz
int3
mov
push
mov
lcall
add
jg
xchg
cmp
xor
out
aas
add
pop
add
add
pop
faddp
add
leave
repnz
adcb
inc
add
insl
out
xchg
sarl
push
dec
pop
insb
fbstp
ror
int3
aaa
xchg
lahf
addb
sub
mov
cwtl
ja
gs
loopne
es
add
lds
and
in
test
imul
sub
pusha
xlat
enter
lea
fistpll
pop
clc
das
adc
lods
loope
xchg
fwait
push
push
jg
test
int3
mov
loope
cmp
mov
push
push
aas
fndisi(8087
cmp
inc
push
inc
repnz
dec
jle
test
cmc
sbb
pop
sar
stos
mov
insl
jg
sbb
outsl
sbb
add
inc
loope
cmpsb
gs
mov
sbb
xchg
or
dec
push
js
dec
jae
pusha
xor
mov
mov
and
insl
pop
adc
rcrb
ret
lret
cmpb
pop
xchg
xor
add
push
dec
lret
jmp
imul
push
and
add
pop
add
add
lods
add
sub
adc
cld
mul
adc
popf
add
or
sub
mov
cmp
imul
mov
fwait
adc
xchg
lahf
sbb
cmp
mov
xchg
sbb
daa
aad
jmp
adc
pop
xor
in
rorl
outsl
mov
dec
ds
daa
add
add
aaa
jno
cli
fcmovnbe
jnp
nop
pop
daa
fnsave
scas
xchg
fstpt
imul
sbb
dec
mov
mov
inc
in
jb
sub
stc
xor
sbb
jbe
xchg
adc
pop
mov
mov
popf
cs
pop
testb
lds
repz
scas
inc
pop
mov
cmp
rclb
icebp
sbb
fimuls
enter
imul
lds
cmc
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
in
pop
mov
pop
jne
xor
fstps
fidivrl
sarb
xchg
movsb
stos
and
push
stos
repz
mov
pop
and
ret
lock
arpl
sub
fdivrl
scas
outsb
push
shll
adc
outsb
jl
mov
cmp
xlat
fsts
jmp
popa
out
mov
es
cmc
sahf
bound
daa
in
fsubrs
iret
xor
sarl
inc
aas
adc
or
fisubrs
in
lds
jecxz
push
mov
out
lds
lret
cld
lcall
popf
fs
pop
xlat
mov
pop
divb
je
fdivr
push
fbld
loope
dec
or
fildl
sete
adc
dec
xor
dec
stos
pop
mov
cltd
xchg
jb
test
sub
mov
mov
adc
xchg
scas
mov
and
add
jne
into
ljmp
add
sub
jns
imul
ja
xchg
add
pop
add
add
and
popa
sub
jno
push
mov
cmp
jecxz
mov
sbb
pop
insl
stc
call
inc
add
ret
mov
andb
stc
and
call
or
out
repnz
decl
filds
dec
sub
cwtl
cld
fadd
and
push
or
xchg
add
cmp
cmp
sub
mov
enter
mov
std
mov
jge
sub
cmp
fst
sub
pop
leave
arpl
xor
cltd
adc
out
and
cli
out
inc
ret
dec
xchg
push
dec
das
mov
dec
movsl
aad
jne
aas
sar
sbb
fmulp
stos
fmull
xchg
mov
cmp
lret
pop
and
mov
add
fidivs
shll
jnp
daa
mov
mull
pop
adc
push
jl
push
ja
pop
cmpsl
aaa
fists
add
ret
jg
jmp
repnz
jmp
inc
add
pop
add
add
adc
push
bound
out
push
dec
sub
jnp
push
cwtl
cmpsl
bound
sub
fmuls
pop
add
and
stos
repnz
mov
scas
out
test
ret
mov
push
jmp
stc
mov
and
insl
mov
pop
cmp
das
aaa
mov
js
inc
jae
add
inc
sbb
mov
fisubrs
sbb
inc
add
pop
add
loope
test
mov
aad
ss
mov
adc
icebp
das
xor
mov
pop
lods
loopne
sarl
jl
xchg
in
mov
sti
pop
and
cmp
mov
movsl
push
mov
mov
addr16
pmaddwd
inc
inc
pushf
xchg
repnz
movsl
xchg
sub
sahf
icebp
fnstenv
cltd
daa
pushf
jg
fwait
jne
add
mov
lcall
xchg
ja
je
push
push
xchg
js
cmc
inc
dec
dec
push
fadds
add
in
inc
lahf
cmp
and
cwtl
cmp
add
add
das
mov
and
fnstenv
movzbl
inc
add
pop
add
add
sub
or
jno
sub
cmp
icebp
cmpsl
push
ljmp
cmpsb
sti
xor
ret
jne
outsl
cs
push
sub
aas
dec
shrl
adcb
and
into
xor
pop
or
arpl
and
sbb
pop
stc
loop
orl
pop
mov
jg
flds
das
and
aam
pop
sub
enter
mov
push
mov
inc
inc
repnz
insl
leave
add
dec
fwait
pop
adc
aad
mov
les
out
mov
jmp
shl
push
test
movsb
cmp
mov
dec
mov
mov
into
jnp
adc
or
push
bound
jp
and
fnsaves
lcall
cmpsb
mov
sub
loope
cmp
or
sub
insl
sbb
sti
mov
adcb
fidivs
inc
or
inc
icebp
hlt
gs
adc
ficoms
or
loop
inc
add
pop
add
add
aas
adc
and
ljmp
inc
add
dec
xchg
inc
loopne
popa
repz
cmp
dec
sub
mov
mov
pop
mov
mov
dec
lods
sbb
out
push
lods
cmp
cmp
inc
mov
lea
fs
cmp
aam
add
cmp
dec
mov
mov
rcr
push
mov
jle
mov
add
xchg
jae
popl
inc
inc
aad
mov
fdiv
push
jmp
js
xor
aas
pop
or
push
mov
pop
sar
shll
scas
inc
xchg
dec
fdivl
mov
in
out
push
popa
pushf
mov
dec
sti
in
add
dec
and
gs
cmpsl
mov
push
mov
outsb
xchg
sbb
rol
jecxz
addr16
aam
jne
or
pop
outsl
aaa
hlt
mov
push
js
mov
fadds
xlat
add
aas
gs
mov
bnd
and
add
add
add
mov
sub
js
adc
xor
adcb
shr
dec
sub
mov
int3
sub
xchg
fscale
pushf
push
rorl
mov
pop
xchg
adcb
cmc
neg
push
mov
ljmp
je
and
xor
rclb
xchg
sbb
js
sub
lcall
sub
add
pop
lahf
dec
pop
push
pop
das
int3
or
and
mov
xchg
in
jae
or
ljmp
xor
mov
scas
mov
xor
shrl
je
cmp
xlat
pop
ss
fstpl
decb
iret
out
shll
pop
xchg
ret
pop
xor
or
sbb
and
or
insb
inc
sbb
push
lret
jecxz
in
jns
lods
insb
movsl
jg
add
out
fnstsw
sbb
pop
add
add
push
or
iret
mov
push
ja
mov
aad
in
js
mov
jb
mov
cld
cmp
movsl
cltd
and
imul
lock
jecxz
dec
lret
pop
gs
popf
mov
push
das
sbb
dec
in
mov
sub
fisttpl
test
xchg
fldenv
push
cs
sbb
adc
jnp
push
aaa
in
push
xor
std
out
cld
imul
movsl
mov
inc
scas
pop
in
leave
cmp
in
rcr
inc
fistl
fsubrs
or
mov
rolb
test
sub
jl
testb
cmc
xchg
fstl
stos
push
loopne
enter
stc
leave
cmp
mov
popa
cs
out
mov
out
mov
stos
fcmovu
dec
iret
fldcw
shll
add
mov
pop
loop
push
out
loop
test
rcrb
sub
inc
and
or
dec
test
sub
fildll
mov
sub
cs
add
pop
add
add
call
jae
pushf
imul
in
or
pop
dec
jp
push
movsl
xchg
mov
push
pop
push
sub
cmp
out
shl
lock
or
test
push
add
xor
add
lods
in
mov
add
sub
dec
push
cltd
iret
aas
cmp
mov
lods
shll
mov
mov
stos
hlt
repnz
add
jno
rcrb
and
and
pop
movnti
out
jno
push
fldenv
mov
fimuls
xor
cmp
fldenv
cmp
pop
sbb
inc
sub
je
out
xor
mov
mov
sbb
in
mov
lds
nop
insb
push
ljmp
sbb
rcl
xor
sahf
jne
push
icebp
in
shll
jbe
mov
data16
mov
mov
dec
mov
adc
jns
dec
jno
add
jmp
out
aas
push
xor
cmp
add
pop
add
add
dec
addr16
mov
iret
push
loop
push
cli
or
imul
jns
inc
cld
movsl
jo
hlt
cmp
push
scas
dec
jmp
xlat
push
enter
addr16
push
adc
clc
outsb
das
jl,pt
sub
cmp
loopne
pop
pop
loopne
jns
dec
cli
push
icebp
daa
lods
lods
movsb
lods
push
jae
mov
push
cmc
stos
in
mov
jg
push
xor
sub
cli
fwait
inc
cmpl
fistps
cmp
push
lea
dec
ja
jge
test
aad
jo
std
jbe
mov
hlt
icebp
inc
and
xor
cmp
pop
out
nop
xor
jg
or
fwait
sub
cli
sub
add
jns
dec
inc
fwait
mov
frstor
dec
enter
fwait
movntq
out
mov
push
lret
inc
mov
and
pushl
ds
mov
jns
aas
mov
stc
fwait
stos
fld
jp
ffreep
sti
sub
mov
add
add
imul
out
mov
xchg
jecxz
mov
dec
add
pop
add
add
das
mov
movsl
mov
loopne
ja
xchg
fs
inc
loopne
push
stos
arpl
popa
shlb
sbb
aas
xchg
fldenv
cld
stos
cmp
or
dec
sahf
psrad
xchg
jg
rolb
leave
lea
jnp
in
cmp
or
test
push
mov
cmp
sbb
fwait
out
js
push
movsb
aad
xchg
not
ja
xor
xor
dec
jb
imul
pop
mov
and
or
iret
shll
in
rcll
mov
xchg
pop
xor
adc
ret
jnp
cli
jne
jae
xchg
ror
into
negl
icebp
or
xor
dec
ret
lea
out
xlat
ds
mov
popa
in
shrb
jge
insb
or
xchg
scas
sub
push
stc
mov
mov
xor
jo
divl
fbld
test
stos
std
adc
jmp
add
add
dec
stc
mov
pop
sub
fucomip
lock
inc
dec
add
pop
add
add
pushf
pusha
in
push
fwait
aam
or
sbb
cltd
cltd
fs
or
out
mov
xor
sub
mov
mov
pop
adc
and
jg
out
clc
sub
shlb
in
sub
xor
mov
shrl
fsubs
fdiv
pop
lret
popf
jmp
mov
aas
or
hlt
pop
sbb
shrl
jmp
sbb
das
rclb
inc
rorl
fldt
jmp
lods
test
inc
pop
pop
lret
rcrl
sbb
popf
add
cmpb
into
sbb
int3
cwtl
out
dec
mov
stos
in
popa
ljmp
mov
cld
mov
push
cmpsl
sub
je
fbld
xlat
test
fimull
movb
push
or
rorb
cmp
mov
jns
dec
loope
dec
orb
pop
add
clc
mov
xor
push
cs
aam
repz
xchg
cmp
jle
jg
cld
dec
loope
sbb
faddl
dec
add
pop
add
add
push
ret
cmp
xchg
push
sbb
and
lods
das
mov
xor
enter
add
iret
test
in
cltd
fnstcw
pop
sub
loope
mov
sub
and
int
arpl
cwtl
pop
lret
xor
cmpsb
pop
call
movd
inc
out
dec
lcall
jecxz
xor
lret
pop
setp
das
iret
jg
imul
icebp
sarb
push
mov
out
sub
push
xor
cmp
in
into
adc
sub
mov
stos
leave
inc
fs
or
pop
or
push
pop
lea
cmpsb
lea
push
stos
pusha
mov
xchg
mov
sbb
fnsave
xor
sub
cmpsb
dec
xlat
push
jecxz
mov
and
jmp
jbe,pn
xor
inc
repz
adc
incl
mov
xchg
mov
mov
dec
add
pop
add
add
dec
cmp
scas
imul
aam
mov
pop
scas
cs
inc
jge
lds
add
cli
jmp
pop
out
xor
push
push
out
sub
sbb
rcrb
mov
fldl
test
and
jge
add
popa
fistl
daa
neg
outsl
fmulp
dec
cs
call
inc
jg
dec
ret
or
iret
cmp
dec
or
xchg
pop
ss
fs
nop
in
cmp
daa
xchg
pop
imul
scas
inc
call
cltd
cmpsb
pop
mov
push
inc
mov
push
mov
mov
leave
loop
push
mov
jle
mov
inc
stos
push
repz
xor
scas
inc
andb
mov
ret
jecxz
sub
sub
sbb
int3
ljmp
push
push
aad
mov
xchg
jno
inc
and
add
jb
mov
andl
or
mov
fwait
mov
and
pop
dec
add
pop
add
add
cmp
adc
jmp
mov
mov
mov
insb
inc
arpl
in
and
jle
pop
mov
jbe
cmpsl
ret
fimull
mov
test
mov
push
dec
inc
mov
pop
xor
sarb
mov
sahf
ss
cmc
in
flds
fdiv
xor
jl
cmp
push
jb
mov
mov
dec
pop
test
arpl
adcl
pop
pop
andb
dec
clc
movsl
pop
dec
push
mov
jmp
sarb
pop
jo
inc
imul
daa
push
cmc
popf
fabs
dec
xchg
pusha
mov
mov
movsl
scas
adc
lds
imul
sbbl
cmp
jmp
pop
out
enter
pop
xor
repnz
sbb
call
mov
imul
push
inc
mov
push
push
dec
pop
xor
fsubrl
mov
out
cmp
cmc
push
adc
ret
pop
push
add
pop
add
add
inc
ss
fcomps
sahf
push
aas
iret
les
pop
push
or
inc
es
mov
fcomp
dec
jecxz
nop
in
mov
xchg
mov
ss
pop
scas
mov
dec
ret
cmp
stos
cmp
or
mov
in
add
jno
imul
inc
mov
add
sbb
lods
push
in
ljmp
bnd
movsb
jmp
mov
mov
ret
mov
dec
or
leave
pusha
fs
lret
cmp
jp
jne
push
inc
fisttps
pop
imul
inc
popa
inc
mov
stos
fcoml
out
add
fsubrl
lahf
mov
adc
xor
push
lcall
cwtl
sbb
push
test
xchg
shlb
mov
loop
sti
shlb
jne
shlb
fsub
jmp
pop
dec
out
jecxz
and
loopne
dec
aas
je
leave
xor
mov
daa
add
push
shll
out
je
pop
inc
pop
test
xchg
push
add
pop
add
add
jl
notl
shl
pop
repnz
and
or
jne
pop
cmp
sbb
cmpl
jbe
outsl
or
icebp
in
xchg
or
mov
idivb
and
lcall
mov
in
dec
mov
cs
cli
loop
dec
xlat
mov
xchg
mov
aas
lea
lahf
int
jp
jne
rol
lods
out
cmp
inc
cs
push
mov
add
and
dec
int
sub
imul
out
xlat
fbstp
cmp
adc
outsb
arpl
pop
sub
and
jecxz
cmc
sub
xchg
andl
inc
mov
in
clc
cmc
bound
push
frstor
iret
or
dec
scas
jge
add
mul
insb
dec
cli
cmp
and
cwtl
adc
sub
lock
loope
inc
shlb
out
jge
add
out
lcall
lock
mov
add
add
add
lea
dec
lods
cmp
add
arpl
or
stos
repz
mov
adc
faddl
adc
jge
mov
xchg
xchg
mulb
clc
sbb
inc
add
push
sbb
aaa
mov
fnstcw
jne
mov
push
or
pop
js
inc
jecxz
push
mov
addr16
inc
sahf
imulb
adc
dec
dec
int3
dec
ds
sahf
aam
data16
inc
xor
xchg
stos
lea
nop
aam
lea
pop
mov
dec
mov
in
ret
int3
jge
incl
or
lock
or
sbb
lock
cmp
xor
adc
enter
mov
xchg
orl
push
push
pusha
xor
popa
fwait
inc
inc
mov
addb
mov
out
jne
sarl
es
dec
test
cltd
xchg
pop
adc
push
push
xchg
int
call
notl
dec
or
add
jbe
idiv
imul
or
xchg
add
add
add
or
pop
xchg
sti
sbb
cmp
adc
pop
mov
out
cwtl
fsubl
or
mov
dec
lcall
inc
mov
out
pop
sbb
pop
mov
jne
add
mov
adc
xor
cmpsl
add
stos
sub
insb
lahf
int3
gs
popa
ficomps
pop
add
jg
shl
or
mov
jp
cltd
inc
setle
lds
mov
loopne
lods
sub
xor
in
fsubl
push
ror
dec
or
movsl
dec
cmpsb
pop
mov
stc
shr
push
and
cmpb
jp
sbb
fnstenv
gs
enter
lret
jge
je
shlb
jmp
or
cltd
sahf
cmpl
andb
pop
je
sbb
add
jnp
dec
aad
sbb
push
loopne
ja
insl
aam
dec
pop
or
jae
fwait
cmp
xchg
xchg
dec
push
dec
lea
pop
add
add
aas
push
xchg
sbb
push
mov
sti
mov
inc
repz
pop
xchg
sti
imul
ret
daa
mov
sub
repz
outsb
sbb
int3
sub
xlat
or
testl
push
negl
fimuls
clc
mov
lret
jb
das
stos
mov
push
rclb
xor
ljmp
aas
fs
mov
sub
pop
jl
js
shr
mov
pusha
cmpsb
mov
mov
lds
lret
mov
dec
pushf
enter
pop
and
pusha
xchg
jecxz
inc
push
cmpsl
jo
and
xor
outsb
int3
pop
xchg
fldenv
sub
js
mov
fnstenv
jb
mov
rcrb
in
xchg
je
add
xorl
inc
xchg
fidivs
fstpl
add
clc
mov
mov
pop
fistpll
push
add
pop
add
add
push
stos
ja
mov
xchg
push
daa
and
mov
push
inc
test
add
mov
data16
subb
pop
idivb
mov
into
hlt
lods
push
mov
cmc
cmpsb
jle
fistpl
sub
inc
fwait
cld
arpl
jae
dec
lahf
cmp
adc
mov
pushf
ret
xchg
jl
fadds
pushf
lods
loopne
imul
mov
dec
fistps
loopne
cmpl
or
insb
dec
inc
dec
xor
jns
sbb
pop
sub
mov
inc
loopne
or
cmp
add
daa
ret
lea
or
shll
pop
cltd
test
test
insl
stos
jne
cmpsl
push
ret
inc
inc
insl
sub
ss
nop
inc
xor
test
inc
js
mov
adc
adc
imul
fwait
pop
cltd
adc
jg
sbb
mov
aad
push
in
mov
or
xchg
rorl
inc
dec
movsb
add
shr
mov
mov
mov
pop
add
add
and
insl
mov
leave
pushf
lea
push
out
dec
out
xor
sub
std
movsl
xor
lods
loopne
sbb
sub
add
xor
das
cmp
dec
jb
pusha
scas
out
insl
lods
or
push
in
adc
xchg
aas
sti
rcrb
inc
mov
cltd
ffreep
xchg
xchg
cli
inc
int
mov
sarb
xchg
fcmovu
push
jae
std
and
xor
insl
test
jp
sub
xchg
inc
adc
mov
inc
adc
ffreep
das
cmp
cli
xor
cmc
lcall
imul
lock
and
push
aaa
cmc
mov
hlt
sbb
ss
add
dec
mov
sbb
and
les
mov
aad
jl
push
loope
int
mov
stos
ja
aaa
ret
jno
test
or
fdivs
adc
add
pop
add
add
decl
sub
rorl
outsl
pop
into
and
mov
sbb
mov
aas
xor
leave
les
dec
mov
out
sub
cli
insb
push
jno
fidivl
sbb
testl
jbe
sti
lds
dec
xchg
mov
daa
out
inc
xor
enter
fisttpl
cmpsb
xchg
rorl
xchg
sahf
cwtl
aam
push
mov
mov
dec
pushl
xor
cmpsl
mov
repz
mov
sbb
mov
lret
cmp
out
je
adcl
lock
or
jb
aaa
push
imull
ds
cmpsb
inc
add
jnp
gs
fisubrl
mov
xchg
dec
mov
test
push
icebp
cmp
sub
in
rorl
sub
jle
testl
pop
inc
mov
cmc
in
jmp
cmpsl
adc
adc
mov
and
das
jmp
xchg
call
add
add
add
cli
push
popa
sahf
mov
push
mov
movsl
ficompl
xchg
sub
in
sti
and
mov
dec
jns
mov
jmp
or
and
outsl
scas
xchg
pop
dec
icebp
jae
ss
iret
call
out
push
out
mov
leave
es
loopne
adc
out
shufps
out
sub
push
bound
ds
out
outsb
and
adc
jle
lcall
mov
mov
xor
add
dec
push
int3
or
pop
jecxz
pushf
mov
inc
add
ret
mov
daa
jle
jecxz
xchg
inc
clc
sub
cmp
test
push
mov
push
std
dec
mov
lods
testl
les
pop
sbb
mov
push
fs
sbb
aad
or
mov
cld
jo
js
es
test
sbb
pop
pop
sub
fisubs
add
movsb
jae
jnp
mov
jne
ret
mov
sahf
pop
add
pop
add
add
push
insl
movsb
xorl
xchg
mov
adc
mov
imul
imul
dec
fbld
outsb
dec
mov
xor
or
roll
adc
lret
repnz
sarl
inc
push
int3
int
inc
mov
xchg
inc
adc
dec
xchg
imul
lods
xchg
or
insl
out
mov
or
xlat
jl
push
mov
inc
gs
and
inc
xor
jg
cmp
jg
pushf
push
mov
and
imul
lret
lahf
ja
mov
sbb
rorb
pop
add
jle
mov
fmuls
gs
or
aas
int3
add
fst
mov
je
cmpb
idivl
daa
dec
xchg
xor
iret
gs
xor
sbb
pusha
xchg
jle
ljmp
mov
fs
lds
imul
cmpsl
dec
jne
lahf
mov
add
add
xor
std
test
lcall
pop
add
add
hlt
out
andl
xor
out
jns
das
imul
push
fs
ss
leave
hlt
xchg
dec
stos
cmp
dec
jle
add
stc
in
mov
lahf
xlat
repz
xchg
mov
outsb
dec
loope
cmp
push
mov
outsl
pushf
sub
jne
aas
mov
repnz
mov
loope,pt
hlt
xchg
in
stc
cmp
lret
addr16
repnz
jl
stc
add
out
shlb
lods
test
fwait
push
outsb
or
dec
dec
nop
orb
push
addr16
lock
add
and
aad
scas
outsl
or
addr16
mov
jne
xor
frstor
out
jo
dec
inc
sub
cli
mov
je
jp
ja
dec
or
add
jp
lock
and
iret
adc
jne
xor
stos
push
ror
dec
xchg
adc
adc
jnp
inc
xor
add
mov
pop
stc
lahf
addr16
lods
pop
add
pop
add
add
push
jno
mov
dec
push
mov
push
cs
xchg
cmpsl
jmp
insl
imul
cmp
cmp
dec
imul
ds
mov
xchg
fnstcw
cwtl
inc
pop
adc
loop
xlat
sbb
dec
hlt
jg
inc
fdivrp
dec
int
data16
and
jp
mov
xchg
aas
fbstp
lahf
aam
adc
clc
jmp
sub
sarl
enter
mov
xlat
pop
iret
or
and
fcompl
jo
imul
sahf
jle
movsl
fstl
pusha
lds
lahf
imul
test
xchg
mov
jne
push
mov
push
ret
and
loopne
faddl
jmp
pop
fstpl
xor
sbb
cmpsb
daa
ret
enter
pop
sub
int3
imul
and
cmp
adc
cmc
sub
pop
shr
test
sub
ds
testl
add
push
into
push
mov
push
cmp
add
add
or
xchg
xchg
cmpsb
int
push
out
aam
pushf
fistl
inc
cs
mov
mov
call
outsl
in
jno
imul
sub
ret
xor
adc
int
popa
gs
cmp
mov
xchg
dec
mov
cs
dec
outsb
mov
test
xchg
addr16
out
das
mov
push
hlt
data16
pop
dec
jmp
fmulp
or
insl
add
mov
cli
and
pop
subb
shl
dec
scas
add
ljmp
sbb
dec
cmp
inc
mov
adc
jns
mov
rclb
mov
lds
lds
sbb
popl
add
push
mov
mov
stos
lea
imul
mov
push
mov
adc
and
popf
add
into
push
and
mov
sub
ds
dec
popa
mov
add
add
test
icebp
divb
or
int3
jmp
push
mov
push
out
gs
and
shll
nop
ja
cmp
das
shrb
mov
dec
popa
sahf
movsl
imul
inc
fcmove
sahf
push
and
jp
imul
sbb
lds
in
xchg
adc
in
xchg
pop
push
pop
and
xchg
negl
jge
gs
and
inc
rcll
or
xchg
fwait
lea
in
std
fsub
js
insb
pop
mov
sbb
xchg
div
cmc
aad
mov
into
xor
jp
xchg
push
jmp
inc
inc
cmp
cmpsb
lods
js
pop
sub
icebp
push
movsl
cmc
and
enter
mov
sub
adc
mov
test
cmpxchg
inc
cmp
pop
mov
inc
mov
sub
sbb
jle
outsl
dec
and
add
lahf
pop
lret
inc
and
int3
rcrl
pop
add
add
mov
loope
ret
push
xchg
cmp
sub
movsb
pop
out
sbb
pop
ret
or
into
mov
jecxz
and
mov
cld
mov
movsl
scas
xchg
push
cs
xor
jne
pop
adc
mov
dec
push
lahf
inc
mov
add
hlt
lahf
fisubrs
adc
rorl
fucom
lock
out
iret
aas
xor
ja
pop
hlt
and
dec
mov
add
adc
inc
repz
mov
sbb
mov
push
pop
test
aaa
lock
je
inc
pop
aad
shll
xor
nop
ja
cltd
stc
push
xchg
push
sbb
lods
pop
jp
inc
movsb
imull
sub
xchg
mov
dec
jbe
adc
push
lea
push
popw
pop
push
jbe
sub
xchg
aas
mov
adc
mov
movsb
dec
sbb
and
out
xchg
cmp
std
jmp
add
idiv
jg
pop
and
pop
xlat
xor
pop
add
add
into
in
xlat
or
cld
xchg
lds
test
hlt
push
mov
ret
lods
aas
aaa
push
dec
outsl
push
out
data16
imul
pop
mov
mov
pop
mov
cmc
dec
loop
rol
xchg
lock
loop
in
push
jae
jecxz
or
cmp
leave
or
add
xbegin
mov
mov
sbb
in
cmpsl
pop
adc
push
or
mov
outsb
jle
mov
cmp
jg
rolb
cmp
cltd
mov
cmpsb
in
ret
and
sub
add
adc
and
mov
push
jmp
dec
xchg
xchg
adc
push
pop
das
push
cmp
into
adc
int
popf
xchg
lods
sub
jbe
enter
and
lahf
cld
or
inc
xor
ret
xchg
int
jle
ffree
xor
sub
cmp
repnz
push
pusha
cltd
inc
and
add
add
pop
mov
mov
add
mov
pusha
add
pop
add
add
jo
pop
cmp
mov
xor
jne
loopne
push
aas
lcall
bound
test
stos
scas
add
jo
testb
xchg
mov
loope
mov
fistpl
sar
sub
adc
inc
mov
mov
andb
out
outsb
push
ja
jl
andl
or
lahf
rolb
xor
jge
and
and
fnstsw
or
dec
outsb
pop
repz
adc
pushf
scas
ficoms
pop
cmp
pop
pop
pushf
or
xor
mov
jecxz
movsb
in
pop
les
leave
loopne
xorb
xor
aad
mov
pop
mov
pop
nop
ds
mov
jmp
mov
and
in
daa
jge
mov
insb
adc
adc
push
jne
ds
cmpl
repnz
movsb
jle
stc
test
popa
lock
add
popa
add
pop
add
add
dec
fcoml
rcr
mov
add
dec
fcoml
shrb
les
notl
push
or
aaa
adc
add
pop
lea
ficomps
and
fs
pop
cmp
mov
pop
dec
daa
push
std
cwtl
xchg
out
fiaddl
mov
shlb
xchg
jecxz
sbb
and
push
in
nop
fstl
leave
fwait
push
test
ret
stos
int
push
dec
and
jne
jae
sbb
out
sbb
aaa
push
das
xlat
xchg
jp
popf
adcb
pop
out
scas
sub
movsl
test
js
inc
mov
inc
adc
sub
sti
iret
dec
cwtl
and
add
add
dec
stc
inc
jg
cltd
pop
icebp
mov
sbb
sbb
add
push
cmp
bound
xlat
xchg
lret
add
stos
je
pop
pushl
incl
stos
sub
stos
out
jmp
sub
xchg
out
adc
frstor
add
add
add
dec
and
test
push
adc
insb
mov
cmpsl
pop
pop
mov
pop
adc
in
cmp
inc
dec
sbb
push
rorb
sub
es
sbb
rcll
sub
ret
stos
popf
addl
jp
lcall
ret
xor
sub
push
or
ds
cwtl
ret
push
jl
arpl
fbld
orps
add
shlb
les
lea
mov
mov
xor
in
or
mulb
inc
gs
sub
pushf
fptan
mov
and
clc
sub
cltd
push
sub
sub
mov
xchg
inc
insl
push
mov
imul
into
inc
mov
mov
pop
adc
or
xor
inc
push
push
bound
loopne
sbb
imul
adc
lret
mov
or
jg
clc
and
in
jecxz
pop
add
mov
fnstenv
lret
mul
arpl
add
add
add
jo
cmpsl
ror
adc
mov
mov
sub
popf
scas
lret
mov
out
sbb
in
cmp
divl
daa
jg
inc
and
imul
adc
dec
push
cwtl
jne
addl
test
loope
jecxz
pop
aam
or
fnstcw
or
dec
mov
xchg
mov
cmp
popf
test
pop
mov
pusha
mov
cld
inc
test
dec
imul
nop
inc
adc
movsb
test
sub
jne
push
pop
xor
push
pop
cwtl
add
pusha
jle
mov
fsubrs
sarb
loope
lret
ret
out
jbe
fld
dec
push
jno
push
mulb
enter
xlat
ja
repnz
mov
data16
pop
dec
movsl
push
in
outsl
sub
ljmp
lods
pop
mov
lahf
push
in
mov
jnp
jle,pn
fcmove
adc
pop
jmp
add
cld
je
jbe
decl
rcll
add
pop
add
add
ljmp
ds
out
jg
adc
mov
sub
xchg
cld
jecxz
push
lods
sub
cs
pop
andl
outsl
or
lahf
test
adc
ja
adc
push
int
pusha
mov
mov
fisubrl
add
sbb
das
push
push
dec
popf
jmp
sub
ljmp
push
cmpsb
jg
or
repnz
aam
or
cmpsl
popa
sub
into
scas
insl
cltd
sub
mov
xchg
jmp
fidivrl
addr16
sbbl
xor
shrl
lods
push
call
loope
cmp
push
and
jnp
and
mov
jmp
mov
or
leave
out
push
shlb
imul
subb
movsb
xchg
gs
dec
adc
pop
movsl
in
jo
aad
dec
pushl
sbb
repz
lods
add
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
imul
xor
xchg
das
leave
mov
pop
dec
stos
stos
mov
test
jns
repz
cmpb
xchg
idiv
push
mov
icebp
sbb
dec
push
fidivl
roll
jl
sub
dec
jbe
xor
jb
xchg
jmp
mov
int
xchg
ud0
jp
mov
pop
js
mov
dec
fsubs
cs
cmp
pop
dec
daa
adc
test
cs
in
adc
outsb
fnsave
sbb
lds
stos
adc
es
or
sbb
icebp
sbb
pop
test
addr16
mov
dec
sbb
pop
adc
jbe
iret
jecxz
mov
popf
xorb
push
shlb
ret
dec
scas
sar
mov
loopne
cltd
sub
sbb
es
sub
sub
lahf
adc
rolb
mov
mov
push
jg
shll
stc
add
pop
add
add
test
push
jnp
and
invd
and
mov
jnp
jecxz
pop
iret
enter
in
sbb
add
ret
js
imull
push
insb
out
int3
mov
jns
je
dec
rol
xchg
sbb
xor
out
xchg
pop
cwtl
imul
push
jg
pop
test
cmp
ljmp
call
aad
subl
scas
sub
sbb
pop
aas
out
pop
dec
or
cld
in
arpl
imul
dec
fiadds
je
or
popf
mov
cmpsl
jnp
pop
add
xchg
jno
lds
or
hlt
shlb
aam
xor
jbe
mov
pop
stc
push
mov
inc
or
add
je
cs
dec
stos
cltd
pop
jle
ficompl
pop
incl
xchg
pop
movsl
xlat
and
push
pop
xchg
inc
das
push
xchg
cmp
add
mov
fucomip
lock
cmp
push
add
add
mov
lds
int
inc
adc
jnp
out
ja
repz
adc
lret
daa
lea
adc
cmp
inc
mov
rolb
out
mov
pop
lret
sbb
sub
je
mov
cltd
imul
ja
popa
jns
mulb
lcall
aam
xchg
roll
icebp
scas
cmpsb
stos
fisubs
push
xchg
outsb
into
mov
lcall
xor
pushf
mov
inc
xchg
fistps
ret
mov
pop
push
ljmp
hlt
cmp
leave
sub
ret
loop
push
sbb
adc
iret
aam
sti
mov
mov
in
mov
aad
inc
or
dec
or
mov
lret
push
mov
fwait
into
pop
outsb
outsb
add
sbb
daa
jbe
insl
shll
mov
jnp
push
icebp
pop
adc
imul
dec
out
iret
jmp
das
mov
rolb
imul
add
jne,pn
in
sub
xchg
rol
xchg
test
jnp
imul
sub
ficompl
xor
jo
mov
fimuls
pop
adc
addr16
daa
lea
adc
dec
scas
out
jmp
add
xorb
movsb
call
call
push
cs
mov
dec
add
xchg
sub
stc
xchg
sbb
pop
mov
or
fcom
je
add
dec
addr16
inc
mov
enter
inc
mov
dec
dec
xchg
insb
add
fidivrs
push
sbb
loope
cmpsb
movzbl
arpl
sbb
adc
mov
out
in
push
cmp
add
lret
aad
iret
pop
pushf
test
push
sbb
cmp
rdpmc
cmpsb
negl
cld
adc
ret
fdivl
dec
cli
leave
jecxz
call
xchg
data16
pop
fcompl
cmp
cmpsb
push
jnp
std
cmpsb
pop
or
lret
inc
inc
test
pop
add
add
sti
lahf
fsubr
xor
aad
repz
pop
sub
cmc
rorb
or
and
sub
js
nop
push
out
stc
jmp
pop
std
dec
xor
mov
ss
call
push
out
lods
inc
fcmovbe
jmp
inc
jbe
out
add
les
icebp
adc
lcall
rcll
add
shlb
cli
aaa
inc
sbb
cmpl
jo
test
aad
and
aam
shrl
xor
inc
shr
adc
adc
mov
adc
andb
xor
jne
lods
xlat
call
cmpl
cmp
cmpl
push
loopne,pn
arpl
push
cmp
push
pop
enter
ret
sahf
sbb
ret
cld
and
xchg
push
pop
adc
jmp
jnp
and
loope
and
sub
cmp
add
add
neg
std
fsubrs
adc
jne
lcall
add
mov
imul
push
lret
jmp
dec
xchg
mov
sbb
jno
lcall
inc
push
sti
jb
sbb
sbb
fildll
pop
stos
movsl
xorb
push
pop
xor
pushf
push
cmp
pop
movsb
insb
mov
loop
jb
xor
and
leave
sub
in
mov
cmp
cmp
mov
cmovnp
jl
outsb
pushf
xchg
xchg
adc
jb
mov
pop
aad
push
xchg
sub
cmc
jb
mov
hlt
add
mov
sbb
mov
lods
pop
jns
imul
jmp
add
imul
pop
sub
cs
shlb
push
cltd
or
icebp
push
das
icebp
movsb
cs
pop
mov
lock
push
push
mov
pop
in
data16
pop
in
popf
std
xchg
subl
inc
and
rclb
lds
xchg
out
stos
xor
jp
cmp
push
subb
in
push
mov
leave
xor
insb
add
pop
add
add
std
lock
push
adc
jle
test
lcall
clc
das
loopne
mov
sti
in
mov
adc
gs
movsb
nop
add
mov
mov
mov
mov
mov
in
ss
push
rorl
pop
push
cmp
pop
inc
xchg
ficoms
fwait
mov
mov
jo
add
pop
aas
xchg
mov
lods
push
test
or
and
cmp
jnp
cld
int
xchg
scas
cltd
roll
stos
mov
loope
mov
out
cmpsb
jmp
movsl
aaa
or
movsb
mov
xchg
call
push
push
and
cld
mov
out
xchg
aad
or
jmp
sbb
cmpl
adc
lcall
aad
imul
imul
sub
sti
notl
fdivrl
in
inc
mov
sub
xor
nop
imul
pusha
pop
insl
adc
aad
scas
add
ja
out
and
outsl
fcomp
mov
and
add
add
add
xchg
insl
xchg
ret
movsb
sbb
rolb
inc
clc
imul
mov
or
hlt
adc
ss
and
sbb
add
push
push
stos
cmp
gs
push
les
mov
adcl
repnz
fisubrl
mov
pop
rcll
xor
add
dec
pop
fistpl
aam
stos
call
add
push
dec
xchg
dec
adc
jns
dec
aaa
es
or
inc
shl
pushf
push
jmp
or
pusha
ja
das
push
push
outsl
popf
sahf
gs
jb
and
mov
negb
mov
sub
lea
pusha
push
test
mov
mov
cmp
xor
daa
das
jge
sbb
jle
cltd
scas
stos
inc
in
cmpsl
adc
and
dec
ds
pop
jae
push
and
movsl
push
shlb
jnp
pop
xchg
or
mov
add
sub
ja
aad
add
push
inc
cwtl
and
outsb
add
pop
add
add
pop
out
incl
sbb
jae
cltd
test
mov
sbb
mov
inc
sbb
scas
adc
dec
fdiv
cli
mov
add
inc
jl
cmc
pop
pop
pushf
loope
aas
push
test
outsb
push
jae
add
bound
mov
hlt
rcl
cmp
cmp
sbb
repz
out
lea
push
mov
int3
or
jle
mov
and
lret
negl
mov
inc
ficomps
push
lods
lcall
call
rolb
cmp
push
and
decb
icebp
push
push
pop
inc
or
not
nop
addr16
shlb
sub
rcrl
jno
mov
rol
stos
repz
dec
ficomps
push
lea
pop
inc
jmp
add
mov
mov
div
movsl
or
jp
jno
inc
xchg
dec
out
inc
cmovne
cli
or
int
mov
jnp
inc
cmp
lods
movsb
xor
add
add
add
jae
cmp
testl
mov
jno
xor
in
outsl
mov
movsb
mov
jge
out
jno
jnp
popa
push
pop
or
stc
dec
sbb
mov
xlat
out
into
stos
test
mov
pop
jbe
rcll
xor
xchg
mov
outsl
dec
hlt
out
das
sub
add
scas
mov
lahf
inc
repnz
addb
xor
scas
push
cmc
stos
or
mov
psubusb
js
and
mov
ljmp
push
fdivl
pop
idivl
and
sub
pop
dec
ljmp
push
imul
dec
sbb
jmp
mov
and
in
js
push
psrlw
add
dec
push
shlb
push
es
insl
cmp
cmp
aaa
xchg
push
fists
sub
xor
cld
mov
add
cli
xchg
jle
rol
call
cmp
add
add
add
and
movsl
mov
cld
stc
push
nop
dec
or
mov
adc
in
xor
or
jns
enter
mov
lods
inc
fs
cmp
ret
loope
dec
xor
adc
mov
push
jne
test
jl
hlt
push
adc
jg
xchg
aam
mov
ficompl
stos
insl
jecxz
movb
loope
xor
std
sub
data16
shr
rolb
xchg
into
mov
ja
cmp
rcl
shrb
add
jmp
and
repnz
dec
cmp
iret
xor
mov
inc
xor
xchg
mov
xor
jb
je
popf
nop
aaa
stc
arpl
int
fbld
jecxz
dec
sbb
imul
scas
jne
repnz
xor
mov
jecxz
inc
mov
mov
mov
mov
inc
or
in
jmp
sbb
sub
insl
xlat
mov
inc
aaa
dec
fwait
jnp
aad
push
adc
sbb
jno
add
add
add
push
cmp
or
es
push
fsubrl
dec
jno
sub
mov
pop
cmp
inc
inc
ss
mov
daa
mov
jmp
add
add
mov
cmp
lahf
add
insl
cmpl
and
insl
cmp
fcoms
test
and
in
sbb
mov
test
cmp
movsl
ret
cltd
jb
mov
mov
std
xchg
push
adc
sbb
jp
xchg
aas
stc
das
add
imul
and
cmpsb
stc
loop
push
outsb
push
mov
jp
inc
outsb
xchg
add
xchg
or
dec
add
sub
add
fsubr
inc
ret
cmp
pusha
pusha
sbb
inc
outsb
or
pop
adc
mov
cmp
and
mov
adc
or
inc
mov
cs
mov
xchg
xor
xchg
add
std
mov
fisttps
jb
add
add
add
xor
xchg
xchg
scas
sbb
movsb
mov
and
adc
mov
ljmp
pusha
rclb
or
sbb
es
iret
mov
adc
test
in
sub
leave
and
jmp
push
dec
clc
xchg
adc
push
cmp
adc
dec
or
inc
es
pop
aaa
push
in
test
or
sbb
je
test
in
mov
popa
add
and
pop
add
js
daa
cmp
int3
inc
add
or
cwtd
cwtl
iret
add
or
loopne
xchg
arpl
das
fsubl
lret
mov
mov
cld
call
push
sahf
cld
lret
sahf
cli
xchg
sbb
jmp
les
ljmp
dec
in
and
dec
lret
adc
lds
mov
in
nop
mov
ret
call
gs
pop
and
mov
mov
adcl
xchg
filds
outsb
mov
dec
jae
add
add
add
mov
in
pop
repz
lods
cmp
mov
xchg
mov
xchg
dec
rorl
fprem
pop
dec
dec
test
mov
movsb
testl
dec
inc
loop
pop
gs
cmp
xchg
sahf
mov
out
pop
adc
repz
and
div
shrl
and
add
das
pop
out
icebp
push
lds
mov
cmp
shlb
pop
or
pop
adc
mov
jo
or
xchg
stos
aad
ret
aaa
inc
add
cmp
ds
fwait
xor
aas
loopne
xchg
inc
cmp
fisttpl
iret
sbb
popf
xor
jbe
xchg
cmp
mov
mov
loopne
imulb
sub
stos
and
out
scas
and
mov
popa
sbb
add
and
pop
pushf
loop
inc
fwait
pop
push
push
hlt
add
xchg
dec
sti
adc
inc
in
mov
mov
out
lahf
aaa
inc
or
je
add
add
add
insb
sbb
xchg
add
inc
aam
cmc
subb
mov
add
cmp
mov
icebp
lret
sub
cmp
fcmove
es
dec
xchg
aas
pmulhuw
push
cmpsb
pop
fildll
push
mov
test
repz
push
dec
xchg
faddl
in
cmpsb
cwtl
xchg
aas
jp
dec
aam
ret
dec
das
ds
lahf
repnz
das
adc
pop
int
xchg
jmp
sub
jae
cwtl
hlt
inc
sbb
test
mov
inc
sti
sub
jmp
test
xor
test
xchg
sub
mov
cmp
sbb
hlt
sub
int
jb
shll
add
adc
call
lret
push
jl
orl
sti
cmp
add
lret
pop
enter
lret
xlat
test
cld
xchg
ds
aas
pop
scas
sbbl
add
divl
dec
jno
subb
add
pop
add
add
pop
push
xor
xor
xor
mov
lock
repz
pop
dec
xor
cmp
rorl
and
sub
xchg
data16
xlat
es
pop
test
add
xchg
lock
sbb
lea
inc
cltd
push
call
sbb
sub
aad
sbbl
loope
mulb
mov
mov
popf
fs
cmp
data16
leave
adc
xor
lds
pop
mov
xor
cld
adc
gs
push
pop
ja
cmp
in
dec
fsubs
lds
dec
add
fcomps
mov
and
jb
mov
imul
bswap
push
adc
inc
add
jo
or
mov
loopne
into
sti
cmpsl
fs
mov
dec
sub
lock
mov
data16
add
fisubs
mov
xchg
inc
lock
sbb
or
pop
add
add
mov
jae
pop
jo
mov
sbb
adc
add
mov
int3
outsl
pop
aas
imul
test
int3
pusha
sub
add
shll
sti
sbb
push
xchg
xor
fsubl
fcomi
pop
mov
sarl
inc
ja
divb
imul
leave
mov
scas
adc
jno
and
push
inc
xchg
push
mov
mov
mov
sub
or
aaa
or
mov
bound
cs
ds
pop
in
push
shr
adc
negl
insb
lods
dec
and
sbb
inc
inc
leave
adc
xor
xchg
inc
mov
cmpsb
sbb
xor
js
arpl
mov
inc
push
add
and
pop
addr16
inc
or
jb
mov
cmpsl
dec
mov
cmp
inc
push
mov
inc
test
mov
dec
data16
add
mov
outsl
jne
ljmp
std
insb
call
pop
add
add
mov
shrb
sti
dec
cs
jge
mov
fisttpll
dec
jnp
or
popa
or
cmp
mov
rorb
lods
dec
rol
pop
inc
xchg
int3
pop
sarl
enter
dec
or
adcl
ljmp
nop
sbb
xchg
test
adc
fldlg2
or
xchg
inc
add
sbb
lahf
loop
push
clc
adc
adc
adcl
outsl
or
sbb
add
xor
cmpb
jno
jl
xchg
lcall
out
hlt
cs
aas
mov
sub
test
out
fcomps
inc
mov
xchg
call
rcrb
xor
mov
mov
jno
inc
xchg
negb
mov
pop
divl
lock
aas
cmp
lods
inc
lahf
cli
inc
xchg
stc
movsl
cmp
and
sbb
add
add
testl
shll
add
pop
add
add
sub
int3
pop
repz
fs
push
xchg
mov
xorl
fldcw
mov
jge
push
add
or
fs
aam
fidivrl
or
jne
and
lret
jo
push
inc
repz
cs
into
adc
lcall
addl
inc
test
out
push
mov
sarl
push
jg
fwait
jno
mov
outsl
movsb
stos
imul
cwtl
imul
mov
or
mov
js
shll
loope
scas
lock
nop
xchg
push
pop
repz
sub
mov
fcomip
xor
pop
sub
cwtl
dec
sbb
mov
xlat
dec
cmp
notl
js
pop
repnz
and
cmp
lea
cmp
jl
xor
xor
ja
mulb
sub
add
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
rcr
cmp
inc
pop
mov
cli
pop
inc
mov
fidivrl
subb
xchg
lds
adc
inc
fstp
out
mov
mov
jle
sbb
add
xchg
call
addb
subb
lret
push
sbb
lcall
mov
stos
lods
cmp
mov
stc
mov
dec
lock
sub
or
ss
jp
cmpl
push
jg
adc
mov
adc
js
negb
mov
rorl
out
fwait
sub
lock
dec
imull
icebp
cwtl
pusha
ljmp
inc
fucomi
pop
xlat
lahf
xor
mov
aad
fsubrs
push
divl
fiaddl
xchg
adc
mov
sub
and
cli
adc
sti
es
inc
dec
movsb
or
jl
xchg
jae
add
cmpsb
lods
rcrb
cmp
add
pop
add
add
xchg
sub
mov
mov
popa
sub
nop
pop
push
push
pusha
push
dec
cmp
push
mov
adc
adc
loope
push
data16
cld
push
enter
insb
pop
push
sahf
ficoms
in
nop
cmpl
jge
lods
add
cs
int3
cmc
popa
movb
sbb
cld
aaa
pop
xor
xor
test
cmp
sub
mov
sbb
and
pop
adc
dec
push
pop
dec
adc
pop
enter
subb
push
lods
dec
dec
add
mov
dec
ljmp
sub
xor
and
jno
stc
test
xor
pop
adc
mov
mov
lock
mov
in
out
idivb
xlat
rcl
jl
iret
xchg
add
jl
sbb
in
jle
pop
sub
addr16
neg
testl
xor
cli
mov
jl
adc
add
add
add
jmp
mov
xor
stos
adc
inc
sub
inc
pop
aad
orps
es
cmp
jmp
insl
cltd
int
xchg
sub
les
je
lret
movsl
notl
dec
jle
sbb
jl
dec
cmp
sbb
cli
negb
scas
daa
lcall
fstl
or
dec
mov
fwait
xchg
out
dec
mov
dec
mov
or
or
lahf
or
sbb
es
xchg
cli
cmc
aaa
cmovne
out
pop
lcall
fimull
scas
pushf
mov
stos
jg,pt
mov
nop
into
push
fisubs
loope
xchg
test
les
shll
loop
jmp
out
lds
cld
sub
and
fwait
adc
es
mov
shrl
sbbb
push
pushf
dec
std
cmp
adc
pop
xchg
aad
inc
andl
add
test
inc
jbe
stc
push
jg
loopne
jl
add
add
add
xchg
push
test
cmpsb
adc
cmp
fcompl
jmp
adc
pushf
inc
cmpsl
add
cmp
push
mov
arpl
aad
sub
xlat
mov
int
pusha
gs
adc
cmp
mov
dec
adc
movsb
mov
xchg
sub
or
jge
ss
scas
mov
dec
cli
cmp
mov
sbb
je
sub
movsb
aad
scas
jecxz
xlat
sbb
adc
mov
in
repnz
jl
push
and
in
mov
mov
fucom
jns
mov
add
add
dec
mov
nop
test
in
dec
in
jg
data16
adc
mov
pop
fsubs
int3
popa
and
jo
push
mov
leave
imul
adc
push
pushf
rclb
mov
add
xchg
xchg
jns
dec
out
movsb
adc
out
jge
add
add
add
loope
test
out
mov
dec
mov
sbb
fbld
rcll
jecxz
push
sub
mov
fsubl
call
or
inc
jns
mov
rorl
xchg
js
add
rcrb
push
popf
and
int
mov
add
cmpsl
add
icebp
fs
cmp
and
gs
jmp
out
mov
int
nop
sbb
jmp
addl
mov
movsb
ud2
ja
lea
mov
je
fs
out
out
shll
push
fstpl
lgs
mov
dec
iret
and
sbb
in
lods
pop
leave
cmp
fildl
xor
repnz
push
sbb
inc
rol
into
or
add
cltd
stc
dec
push
pusha
negb
sub
jmp
iret
icebp
cli
fiaddl
add
aaa
test
fidivrs
or
leave
cmp
out
call
or
scas
lcall
xor
xchg
das
pop
sti
lcall
add
xchg
add
loopne
fnstcw
push
mov
popa
dec
insl
add
mov
pusha
dec
loopne
xor
xchg
mov
lods
inc
dec
pop
pop
iret
push
adc
xchg
faddl
stos
or
rcl
insb
cmp
repz
cmp
pop
mov
jecxz
cmp
or
fiaddl
lea
test
arpl
insl
pop
mov
loop
fs
mov
lds
sbb
fstps
in
sub
jns
sub
mulps
jmp
mov
idivb
jmp
mov
mov
cmp
dec
fdivr
sub
mov
shrl
cmp
cmp
test
or
pop
lret
mov
adc
popa
push
fdivrs
jb
mov
lcall
or
cltd
out
add
or
je
push
mov
mov
mov
mov
add
mov
idiv
fnsave
outsb
adc
add
add
add
outsb
scas
in
xor
pop
pop
idiv
adc
inc
pushf
jno
popa
jmp
xchg
or
fbstp
cld
sbb
sahf
push
pushf
lret
cmpsb
dec
cmp
fwait
xchg
xor
and
das
fcmovb
les
sub
shlb
adc
push
test
pushf
divb
dec
inc
pop
cmp
or
xor
andl
stos
data16
mov
insl
dec
cmp
inc
mov
daa
leave
xor
cmp
insb
das
sub
push
push
mov
push
pop
inc
and
cmp
in
ret
std
and
add
sbb
dec
inc
or
add
xor
lahf
icebp
jnp
stc
or
lods
test
fildll
pusha
xchg
fsubrs
arpl
in
scas
mov
lret
fwait
repnz
scas
in
into
dec
mov
cmpsl
adc
imul
xchg
lods
lods
shlb
and
push
or
push
adc
add
call
xchg
aaa
jno
addb
pop
add
add
xchg
cmp
dec
cmp
mov
rcrb
andb
cmp
fsts
mov
bound
gs
lret
pushl
pushl
mov
push
cmpsl
push
test
ss
sbb
adcl
dec
fwait
cli
in
andl
movsb
mov
bound
mov
dec
add
or
pop
push
repnz
mov
fstps
mov
imul
mov
mov
cmp
sub
xchg
jo
les
lahf
sbb
lahf
shl
pushl
mov
les
cmp
mov
push
in
das
mov
mov
push
xchg
xor
jp
cmp
ss
fists
inc
hlt
pushf
mov
cld
dec
leave
addr16
shll
mov
repz
mov
mov
xor
call
push
hlt
stos
gs
sbb
jge
and
add
sti
iret
test
sub
mov
iret
in
scas
addl
add
ret
dec
jge
cld
push
std
mov
mov
in
pop
add
jbe
add
lods
xchg
pop
sbb
fcmove
stc
add
sub
lods
insb
out
out
inc
cli
pop
mov
and
imul
mov
pop
xchg
and
sbb
mov
add
rol
mov
push
push
mov
mov
jl
sbb
mov
mov
int3
sub
fldt
jbe
es
inc
and
xchg
sub
test
xchg
cmp
sbb
shlb
sbb
popf
mov
js
in
testb
frstor
jbe
pop
xor
pop
gs
sahf
aaa
popf
and
jne
ret
fnstsw
inc
js
pusha
fstpt
jmp
nop
stc
mov
test
insb
out
ficoms
sbb
mov
repz
jl
xor
jae
cmpsb
sbb
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
mov
add
pop
add
add
std
das
fstpl
or
xchg
xor
ds
or
movsl
jle
adc
rorb
pop
sbb
cmc
dec
cmp
adc
clc
mov
or
and
push
mov
cmp
mov
rcll
mov
jo
push
mov
in
sub
push
dec
add
out
jecxz
jne
inc
rep
inc
or
sub
jae
gs
arpl
data16
aaa
cld
sti
pop
jno
add
mov
inc
dec
adc
cmp
jmp
adc
cmp
daa
cmp
out
mov
ja
hlt
es
and
adc
or
push
mov
out
sbb
push
lock
pop
jo
movsl
divps
pop
lods
jle
fidivrl
sbb
out
sub
xchg
jo
xchg
adc
pop
movsl
or
insb
out
dec
je
cmp
jmp
std
add
mov
cmp
addl
pop
add
add
inc
sub
movsl
jl
call
test
dec
dec
jns
outsb
sbb
loopne
jge
sbbb
pop
dec
add
pop
test
and
sbb
aaa
dec
mov
gs
lcall
sbb
mov
adc
sbb
mov
mov
int3
ss
pop
shl
insl
sbb
sub
sbb
inc
jecxz
mov
sbb
cmpl
jbe
dec
popf
xorl
das
mov
in
stc
sub
ss
dec
mov
mov
jmp
sbb
mov
std
add
inc
inc
mov
xchg
mov
into
mov
aaa
popf
sub
fsubs
outsl
movl
pop
jg
pop
xor
jns
push
xorl
mov
xor
lahf
addr16
sti
and
cmpsb
add
add
pop
test
ljmp
roll
jg
test
add
add
add
cld
cmp
dec
mov
pop
adc
fistl
push
stc
repz
push
mov
dec
push
jmp
sub
in
mov
out
adc
pop
inc
stc
xor
ffree
lds
iret
mov
adc
push
jmp
mov
push
scas
mulb
inc
push
shll
dec
pop
out
leave
xchg
inc
enter
fidivs
jo
adc
lret
out
leave
sub
pop
mov
test
in
lret
push
add
add
mov
cmpsb
sub
test
push
test
in
sahf
cmp
and
sub
call
xor
jb,pn
mov
dec
jl
lcall
sbb
dec
gs
inc
adc
jns
cmpsl
sub
mov
ret
les
loopne
test
pop
aam
fwait
popf
mov
adc
in
add
arpl
jnp
sbb
adc
movsl
jmp
pop
add
add
mov
subb
adc
test
out
and
fidivrs
jbe
fsubs
shlb
xchg
pop
ret
push
scas
ja
add
test
ljmp
lahf
and
fdivr
fimuls
in
sbb
repz
inc
pusha
mov
pop
pop
daa
push
loop
scas
add
cmp
mov
pusha
outsl
outsb
add
lods
jnp
sarb
into
sub
les
jmp
xchg
sub
out
mov
adc
arpl
sub
sbb
add
xchg
rclb
jno
in
jl
pop
mov
xchg
inc
sub
mov
inc
neg
mov
mov
int3
test
jnp
add
lcall
cmp
sbb
and
jae
das
mov
outsl
pop
inc
popf
inc
pusha
inc
pop
scas
gs
aaa
dec
jp
lret
mov
push
aas
or
mov
lock
mov
add
add
add
xor
cmp
adc
and
mov
insb
push
pop
lods
sar
dec
ljmp
pop
test
hlt
jne
daa
inc
addr16
data16
inc
push
lods
mov
bound
push
aam
push
repz
pop
jnp
jnp
xor
jecxz
inc
movsl
and
into
test
sbb
lods
or
adc
xor
cmpsb
enter
inc
lahf
sub
pop
push
xchg
mov
les
jnp
push
mov
call
roll
mov
cmp
pop
mov
cli
jle
enter
xlat
dec
cmp
sbb
loopne
dec
icebp
pop
cmc
test
outsl
xchg
sub
add
icebp
stc
and
fs
mov
dec
xor
jae
lea
inc
ret
rorb
ffreep
mov
or
mov
in
roll
jmp
add
and
sbb
mov
outsb
pusha
dec
cli
add
push
outsb
fisubrs
adc
test
xchg
add
add
add
jmp
or
mov
sbb
add
xlat
sbb
mov
jge
inc
sub
add
pop
inc
lock
scas
pop
int
add
add
arpl
mov
icebp
mov
in
mov
cmpsl
imul
and
into
mov
mov
inc
mov
repz
sub
jle
inc
shrl
aad
mov
cld
push
int3
jecxz
mov
mov
test
push
lret
cwtl
pop
fistl
cmpsl
jge
lahf
cmpsb
ret
repnz
xchg
data16
sbb
adc
in
jb
repz
icebp
pop
inc
pop
push
std
mov
jg
add
dec
mov
xchg
and
xchg
outsb
adc
cmp
mov
mov
and
jne
das
jnp
pavgw
sbb
xchg
pusha
enter
cwtl
inc
ja
test
jno
std
xlat
gs
inc
pop
sti
adc
jne
psrlw
fimull
add
mov
xchg
and
add
add
add
aas
lcall
out
out
pop
mov
add
repz
inc
mov
jo
adc
jecxz
js
popa
lea
mov
xor
cmpsl
je
pop
rol
sbb
jg
test
mov
out
aaa
movsl
frstor
les
outsl
xor
xchg
cmpsb
push
inc
xchg
popf
inc
push
and
mov
push
std
xchg
xor
sub
mov
mov
or
pop
or
test
xor
cmpsl
mov
or
test
pushf
add
push
fnstenv
sbb
push
or
out
fwait
inc
dec
jbe
shrl
fsts
cmp
movb
cmpsl
ret
inc
das
adc
inc
repnz
les
loop
cmp
cmc
inc
sub
xchg
cmp
jg
shl
or
pop
mov
out
jge
addr16
dec
stos
dec
into
mov
mov
int
scas
xor
add
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
jle
das
mov
popl
mov
push
xchg
push
xchg
push
cli
inc
cmp
xchg
push
mov
lahf
add
test
fldt
stos
imul
mov
pop
lcall
in
ss
in
lcall
in
loope
add
push
jg
into
xlat
mov
mov
mov
pop
jns
push
pop
not
sbb
int3
cmpsb
cli
inc
mov
xor
dec
mov
stos
sub
ret
push
pop
cmpsb
fs
cs
sysret
ss
loopne
add
repz
or
repz
mov
sbb
pop
roll
pop
and
mov
pushl
xchg
push
ja
test
xchg
inc
xor
dec
pusha
incb
stos
in
inc
pusha
stos
int3
ljmp
dec
ret
or
and
jbe
stc
xchg
pop
push
push
inc
movsb
rclb
inc
mov
std
add
adc
std
and
xchg
rcrb
mov
add
add
add
fldt
out
adc
mov
gs
ret
mov
das
cmp
sub
and
ss
dec
ret
movsb
xor
cltd
pop
je
cmp
jns
stos
mov
cld
ficoml
ret
adc
xchg
outsl
mov
mov
mov
aas
dec
jno
push
jbe,pt
pop
sbb
mov
xchg
scas
loope
in
xor
jno
stc
mov
fldt
xchg
aas
es
fstp
aaa
add
mov
fisttps
scas
jg
pop
sub
pop
das
pop
and
sti
cmp
inc
and
add
fadds
mov
repz
push
ds
or
andl
outsl
movsb
mov
xor
lds
pop
mov
and
loop
jno
jno
js
jl
xchg
loopne
popf
orl
repnz
pop
mov
cmp
lcall
add
add
mov
add
cmc
mov
add
add
add
jo
cmpsl
enter
dec
aam
in
push
sub
xchg
push
and
jns
lcall
movsb
lods
pop
cmpsb
mov
loopne
push
lods
popf
jne
or
sub
xchg
jb
flds
imul
push
jbe
mov
scas
lods
or
pop
inc
movsl
lcall
jnp
dec
in
and
and
and
mov
dec
je
loope
arpl
sbb
lret
ret
dec
sub
cli
xchg
mov
push
imul
jnp
pmulhuw
mov
pop
into
jb
mov
sti
jno
fwait
add
pop
je
inc
cmp
jmp
fidivl
ss
add
mov
fsubrs
mov
leave
adc
jmp
jl,pt
or
push
jne
pop
and
movsb
js
or
data16
jno
sub
out
jge
int3
das
shrl
push
stos
imul
jl
lret
pop
cld
dec
je
or
inc
jne
das
push
insb
jb
sub
inc
or
test
out
xchg
xchg
fdivrs
cld
mov
add
add
add
sbb
cmc
pop
xchg
cmp
and
xchg
sub
pop
nop
in
push
xlat
mov
sbb
fbstp
cmp
adc
loope
inc
xchg
jge
xchg
rolb
and
sti
push
mov
imulb
jmp
xlat
sub
leave
dec
sub
and
adc
test
inc
mov
inc
jns
lock
insb
pusha
and
inc
les
repz
in
mov
mov
jb
loop
cmp
jp
cmp
fdivl
pop
adc
es
sbb
xor
jge
inc
xchg
outsl
repnz
pop
adc
mov
daa
stos
ss
dec
cmc
hlt
mov
imul
iret
dec
mov
and
mov
and
in
or
xchg
aad
jge
xchg
mov
push
push
sti
sbb
scas
or
mov
pop
xor
add
ljmp
dec
push
ret
les
ljmp
add
aaa
jg
push
xchg
je
xchg
cld
fwait
es
mov
int3
push
cs
cli
fs
in
mov
or
in
mov
int
pop
pop
jo
mov
cmp
int3
jnp
sbb
mov
lret
pop
xchg
mov
call
xor
das
and
sub
test
es
mov
or
pop
jecxz
cmp
push
xchg
mov
mov
jge
push
or
imul
sub
movsl
cmpsb
or
and
in
mov
jmp
xchg
cs
push
sbb
nop
cmp
mov
sbb
and
jns
sub
pop
jmp
enter
push
adc
pop
or
aas
mov
cmp
dec
je
cwtl
mov
xchg
int3
clc
add
cmp
xchg
dec
xchg
mov
xor
add
xchg
ret
out
jl
and
mov
add
add
aaa
shlb
cmc
div
mov
shrl
or
add
pop
push
or
dec
push
push
mov
insb
and
popa
dec
jne
cli
sbb
sarb
inc
movsb
mov
test
ljmp
jg
dec
jae
push
inc
movl
sub
push
push
mov
sbb
sub
mov
xchg
cli
mov
movb
lock
xor
repz
jle
lcall
lea
popa
mov
add
mov
mov
clc
jnp
or
imul
mov
jg
int
sbb
movsl
sahf
loop
lds
out
loop
aas
fs
nop
fs
adc
jnp
int
cmp
dec
test
int
ret
dec
adc
jl
xchg
pop
pop
arpl
inc
rcll
data16
adc
xchg
in
imul
mov
popa
push
ds
pushf
xchg
add
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
add
lea
out
jns
sbb
test
xor
mov
test
or
popa
push
sub
pushf
les
adc
mov
mov
xor
inc
sub
pushf
xor
cld
jle
in
daa
jl
xor
in
vsubps
and
pushl
shlb
pop
inc
mov
xchg
push
std
ret
pop
lods
xchg
pop
notb
nop
cmp
das
mov
rcrb
orl
mov
outsb
cmp
cmp
loope
inc
or
pop
repnz
adc
mov
xor
jae
inc
loope
xchg
add
cld
push
push
sbb
scas
mov
dec
lret
or
jge
je
xchg
fimull
add
test
icebp
cmp
addr16
mov
notb
fisttpl
or
filds
xchg
add
add
arpl
cmpsb
jcxz
mov
mov
add
add
add
push
shl
mov
xor
mov
in
mov
cmp
repnz
jl
imul
xchg
cmp
out
insl
rcl
imul
cmpb
mov
fwait
stos
mov
jp
scas
sub
ss
mov
xor
popa
scas
xchg
gs
push
dec
cmp
call
adc
aas
fadd
adc
jbe
loop
cmc
aaa
aam
pushf
lcall
xchg
cs
mov
daa
adc
sub
xor
adc
movsl
mov
add
lcall
pop
dec
ficoms
xchg
idivb
adc
addb
sti
jbe
int
mov
test
pop
push
arpl
dec
movsb
push
arpl
and
fwait
lahf
pop
jae
jae
dec
fs
cmp
cmp
out
daa
clc
jns
test
negb
sub
or
xlat
movsb
and
clc
jnp
jg
in
cli
push
cmovns
xchg
add
pop
add
add
xor
fninit
inc
jo
in
rorl
mov
fbstp
repz
mov
xchg
gs
push
xchg
fldenv
push
pop
inc
or
adc
jno
mov
test
xor
shlb
xor
xlat
xchg
movsb
sub
sar
gs
mull
nop
out
mov
dec
cmp
ret
cmp
xor
xor
loop
outsl
cltd
sbb
mov
in
pop
lret
xchg
popa
mov
jge
push
lods
imul
dec
mov
pop
ficompl
jecxz
js
sbb
xor
dec
int
pop
push
mov
xor
mov
cmpsb
push
sarl
dec
inc
mov
dec
or
in
and
mov
lret
aad
xchg
lcall
scas
sbb
sbb
jle
mov
adc
fdivrl
sti
lods
adc
inc
loop
dec
out
push
imul
stos
cltd
add
cmp
cmpsl
mov
add
lods
faddl
fbstp
cld
fidivl
in
or
add
add
add
stos
es
sbb
inc
sbb
popl
xlat
outsl
mov
imul
cmc
bound
cmpsl
pop
pushf
arpl
xor
rorb
fcmovbe
mov
loope
inc
shll
int
mov
nop
sub
nop
test
addr16
aad
push
jmp
mov
cmp
sti
xor
xchg
ret
xchg
sarb
std
repz
dec
add
out
into
inc
cmpsl
jmp
loop
mov
and
or
popa
movsb
jmp
xor
sbb
scas
es
aad
mov
cmp
jne
adcl
inc
xchg
lahf
or
fldenv
sub
sti
in
xchg
fists
push
nop
xchg
ds
gs
pop
add
je
xchg
fiadds
mov
pushf
jo
and
sub
aas
testb
mov
cmpsb
pop
push
shrb
push
cs
add
mov
add
jl
sar
std
jle
testb
pop
out
mov
pop
add
add
icebp
fbld
in
cwtl
cmp
call
inc
test
mov
insl
pop
ret
xchg
pop
sbb
lahf
add
cld
sub
lods
lret
xor
adc
jbe
imul
aaa
jae
mov
fwait
mov
pop
pop
jb,pt
lret
aad
stos
sub
push
lret
xor
mov
add
popl
push
sbb
fisubrs
add
jb
call
mov
out
inc
dec
jge
stc
cwtl
add
mov
sbb
sahf
fiaddl
clc
fwait
mov
pop
mov
or
dec
fisubrs
std
imul
adc
iret
gs
inc
mov
adc
into
cmp
or
mov
cmp
push
stos
fisubl
sbb
fcmovnb
loope
sbb
mov
stc
jle
dec
cmp
xchg
aaa
loopne
add
jbe
fisttpl
ret
add
add
cwtl
or
stos
xchg
cmp
mov
xor
add
pop
add
add
aad
add
out
popa
inc
lret
pop
sbb
ds
mov
int3
jno
shll
ja
fcomps
xchg
outsl
imul
clc
sbb
out
and
sub
cmp
dec
movsb
pop
sbb
xchg
pushf
stos
mov
out
stc
out
or
pop
fdivrs
repz
scas
xlat
xor
xorl
pop
scas
mov
ret
addl
fadds
dec
jl
call
push
push
mov
stc
repz
cwtl
jg
pop
test
inc
ret
jae
jmp
pop
movsl
jg
pop
decl
sbb
push
out
xchg
gs
cltd
mov
lods
out
inc
jbe
mov
lret
shll
mov
movsl
in
or
cmp
jg
dec
cli
faddl
dec
pop
sub
xlat
pop
stos
push
test
insb
xor
arpl
lods
pop
aam
arpl
test
pop
push
ret
lret
xor
add
jl
sbb
mov
add
outsl
sti
outsl
sub
pop
cmp
add
pop
push
mov
xchg
mov
aas
mov
in
repz
jge
repnz
cwtl
jbe
std
pushf
or
sub
fists
xchg
int3
vpshlq
inc
sub
iret
popa
ds
das
out
mov
jb
push
inc
add
push
jns
mov
sub
test
pop
test
stos
jno
xlat
pop
xchg
nop
cmpsw
aam
mov
mov
mov
xchg
and
and
push
xor
or
test
dec
pop
mov
mov
or
pop
nop
stos
jmp
and
clc
xchg
add
lods
pop
repnz
mov
cmp
dec
rolb
add
xchg
loope
das
sbb
sbb
data16
repz
push
jge
add
mov
jl
sti
nop
push
shrl
push
push
jecxz
jmp
and
xchg
xor
adc
icebp
adcb
cmp
aas
add
add
add
dec
std
out
xlat
aas
insb
lods
ret
imul
add
shrb
dec
push
push
mov
cmpb
mov
pusha
adc
push
mov
insl
aad
xlat
jge
adcl
cmp
cltd
add
inc
inc
xor
sbbb
iret
dec
inc
pop
xor
lods
dec
jmp
icebp
mov
sahf
pop
pushf
ljmp
daa
shlb
pop
sub
inc
data16
sar
sbb
rcrl
cmp
push
xchg
ffree
add
and
ljmp
popf
popf
or
xor
adc
add
add
jle
and
aaa
fisubrs
mov
xor
adc
cmp
cmp
addb
clc
mov
dec
sub
in
jbe
lret
mov
js
loope
mov
jb,pn
call
xor
imul
outsl
fistpll
mov
cwtl
add
pop
add
add
adc
sub
movsb
or
addl
lds
sbb
lret
and
jo
jmp
test
push
clc
cmp
cmp
test
jecxz
inc
xchg
stos
addr16
push
hlt
ds
and
ja
lock
sahf
pop
repz
or
loope
xlat
rorl
ret
fadd
mov
xor
aaa
dec
ret
jge
jb
loope
jbe
mov
jne
push
pop
pop
inc
cmp
into
outsl
sbb
xchg
add
or
adc
pop
cmp
out
rcr
orl
or
loopne
sub
sbb
cltd
iret
mov
sahf
push
jle
fsubp
sbbb
cwtl
add
aad
pop
lret
push
loopne
fs
jnp
push
adc
pop
sbb
dec
cmpsl
movsb
cli
test
push
popf
dec
dec
mov
in
cltd
mov
outsl
pop
test
sahf
jge
lret
inc
fmulp
cmpsb
mov
arpl
shr
stc
imul
add
lret
sbbl
xorl
das
std
lock
cltd
add
pop
add
add
add
lods
stc
jae
xchg
stos
mov
jno
jae
add
dec
mov
repnz
xchg
cmp
cs
mov
sub
push
push
pop
push
cld
xorb
cmc
popf
push
xchg
fcoml
sub
ficomps
ret
ljmp
ds
jl
sbb
cs
push
pop
mov
push
xchg
ds
push
bound
loop
in
dec
and
repz
cmpsb
insb
loope
jmp
scas
bound
nop
outsl
or
es
mov
mov
stos
lds
rcrb
mov
pop
jge
testl
pushf
mov
lcall
mov
xor
enter
leave
push
icebp
shll
jb
lret
dec
mov
jle
mov
and
inc
xor
jmp
push
or
jnp
push
outsb
addr16
cmp
gs
pushf
xchg
mov
add
add
imul
sbb
leave
dec
jb
or
add
add
add
pop
mov
repz
cmp
movsl
pusha
fwait
add
push
movsb
stc
popf
bound
shlb
sub
adc
cmp
cld
fdivp
sbbb
cmp
or
push
cmp
xchg
mov
outsb
mov
add
xchg
dec
out
xchg
xchg
test
jle
inc
clc
or
push
mov
rol
mov
mov
add
scas
xchg
sbb
sti
pop
mov
mov
jae
mov
pusha
scas
in
inc
jne
mov
loope
nop
adc
mov
out
push
les
push
push
jg
or
sub
lcall
aas
das
loop
xchg
mov
jl
sbb
in
push
inc
lods
jns
movsb
aaa
pop
es
test
jp
pop
clc
into
add
or
enter
push
and
pop
fs
movsl
mov
and
add
mov
cs
stos
xchg
inc
jp
pop
fwait
add
pop
add
add
push
or
test
cmp
int
or
push
pop
mov
stos
inc
fs
je
jmp
cmp
mov
out
shrb
fs
sbb
es
movsb
cltd
pop
jle
test
sti
in
ss
mov
sbb
mov
and
fsub
ljmp
rcrl
pop
jmp
adc
ret
push
pushf
and
cli
sbb
push
adc
jl
mov
adc
push
adc
inc
scas
mov
and
mov
aaa
xchg
adc
mov
pop
lods
int
ss
ffree
ret
mov
mov
je
cli
cld
pop
repz
sub
pop
fwait
movsl
ljmp
add
ss
int
mov
mov
mov
inc
jmp
negl
dec
or
rclb
and
or
mov
xor
mov
int3
xchg
aas
add
cwtl
loope
mov
inc
dec
ret
inc
pop
in
mov
cltd
sub
out
xor
cld
subl
add
pop
add
add
xchg
jb
ja
xchg
sbb
pop
test
xchg
int
jmp
in
les
mov
add
mov
hlt
sbb
daa
or
xor
xor
stc
imul
mov
sti
add
lds
gs
xchg
pop
sub
fucom
fwait
ret
lahf
xlat
fadd
pop
fsubrs
das
leave
sbb
ljmp
ret
push
and
sub
mov
push
clc
push
add
popa
lods
xchg
sbbl
stos
dec
ds
add
popa
dec
sti
cmp
mov
jl
leave
iret
ror
jmp
in
mov
addr16
sarb
add
sti
or
push
push
insl
sbb
add
mov
mov
cli
int3
mov
add
icebp
and
popf
aaa
add
pusha
test
je
push
ss
bound
insb
popf
add
pop
add
add
push
not
mov
pop
into
jg
dec
push
loop
sahf
test
xchg
inc
cmp
xchg
xlat
push
cli
andb
lods
in
aas
fists
sub
mov
sbb
push
sub
cwtl
mov
imulb
icebp
inc
gs
inc
mov
pop
std
cmp
pop
inc
mov
stos
and
fimuls
lret
aas
hlt
cmp
jmp
mov
or
cmpsb
outsb
int3
hlt
outsl
xchg
pop
addr16
cmpl
pop
es
fistl
mov
xor
iret
jmp
mov
je
gs
scas
and
out
cli
pop
loopne
pushf
data16
fistpll
mov
aaa
in
cmp
fistpl
and
push
fdivrs
loopne
jno
dec
jl
negb
faddp
lods
pop
cmp
mov
cli
mov
insl
push
int
not
push
cmpsb
xchg
or
fidivrs
subb
sub
pop
dec
add
mov
repz
repz
xor
in
sahf
add
pop
add
add
push
xor
inc
inc
push
lds
and
inc
aad
mov
xchg
mov
mov
add
xor
nop
xchg
mov
mov
out
outsb
repnz
and
or
shlb
prefetcht1
dec
and
in
adc
stc
jne
adc
jmp
fsubrs
mov
std
dec
ljmp
int
das
mov
loopne
stos
cmp
test
push
pop
cli
and
repnz
dec
lds
jbe
xchg
mov
jbe
ret
test
testl
sbb
std
add
mov
imul
loop
and
fldcw
outsl
mov
jge
sub
leave
dec
and
sarb
mov
test
mov
jecxz
or
mov
lahf
sub
mov
jl
cwtl
add
jo
mov
stos
in
dec
cmp
inc
mov
out
pop
add
sbbl
sahf
aaa
fldl
movsb
mov
mov
pop
or
mov
lahf
add
pop
add
add
lret
enter
inc
or
pusha
test
jecxz
sti
nop
cmp
lahf
xor
pop
inc
xor
cmp
and
sbb
pop
shrb
adc
arpl
imul
cltd
cmp
sahf
adc
fistpll
jbe
mov
stos
cmpsl
adc
xor
repz
adc
test
jecxz
je
ret
imul
je
or
adc
popa
mov
fldt
in
mov
push
push
adc
in
add
mov
punpcklwd
dec
fs
mov
xor
mov
bound
insl
out
aad
adc
ds
mov
into
hlt
pop
lea
cltd
pushf
add
mov
mov
adc
xlat
mov
sub
sbb
mov
nop
daa
pop
push
stos
adc
cmp
mov
in
insl
jl
xor
sub
out
mov
mov
add
std
stos
sbb
out
mov
add
push
sub
sub
insb
pop
loope
lods
lock
das
mov
sbb
sar
int3
sbb
rolb
jo
insl
jne
ret
cmp
cltd
nop
rclb
and
and
push
sub
jge
shll
lahf
test
mov
enter
xor
das
test
xchg
iretw
and
hlt
pop
ret
mov
mov
popa
insl
cmp
enter
clc
lar
jl
sub
pop
jbe
adc
mov
push
mov
jb
lcall
fildl
add
cmp
aam
rsqrtps
sub
mov
stos
aas
mov
shrb
mov
repnz
cmp
mov
cwtl
sub
jnp
cld
aam
fs
fstl
push
daa
push
jae
stos
add
xchg
cmpsl
repnz
arpl
scas
pop
sub
popf
xor
add
inc
fdivl
push
jg
mov
add
sub
stos
pop
mov
imulb
jl
jae
sbb
mov
cmp
push
fstl
roll
push
pop
sub
jns
add
fnsave
adc
jnp
cmc
add
jbe
xchg
aad
inc
jg
ljmp
add
push
pop
scas
loope
jnp
ds
sub
push
xchg
push
testb
pop
js
mov
xor
dec
dec
outsb
xchg
test
fs
inc
fisttpll
inc
mov
mov
aaa
sti
jne
rcrl
xchg
pop
cmp
adc
iret
dec
sub
dec
sbb
test
sbb
mov
arpl
repz
xchg
mov
gs
pop
repz
push
mov
fwait
iret
movsb
sbb
sbb
stos
mov
cmp
icebp
jae
inc
insb
mov
mov
push
iret
insl
mov
ss
loopne
js
decl
data16
daa
stc
scas
add
sbb
mov
push
lea
add
pop
add
add
pop
in
jbe
sub
les
and
lcall
dec
imul
add
add
push
into
bnd
lods
movsl
clc
icebp
xor
popa
add
xchg
mov
mov
inc
inc
shlb
and
dec
into
loope
inc
leave
addl
filds
gs
xor
pop
clc
rclb
pop
jno
pop
iret
and
mov
sbb
xchg
xor
outsb
pop
pop
xchg
jo
test
dec
inc
orl
clc
sbb
sbb
add
adc
pusha
vdivsd
adc
daa
daa
dec
cmc
icebp
or
cmpsl
sub
mov
mov
add
xor
je
mov
int
jne
pop
adc
and
nop
xor
iret
mov
loope
fisubs
xlat
popa
add
enter
ja
cmp
pop
test
stos
hlt
jmp
jmp
mov
xchg
mov
add
fildll
fsubrs
sub
hlt
sti
enter
rcrl
sub
addr16
sbb
sarb
test
add
in
cmc
push
pushf
sbb
daa
and
mov
loope
mov
jecxz
push
icebp
addr16
mov
pop
cmp
mov
cltd
dec
test
sub
mov
jge
inc
js
jmp
and
cmp
push
lods
adc
call
cs
addb
sbb
iret
xchg
in
push
inc
mov
popf
outsb
xor
pusha
pop
xchg
or
ror
cmp
mov
sbb
jno
xchg
daa
and
ja
mov
sub
push
sub
inc
lret
pop
jne
dec
les
jge
push
cmpsl
xchg
sbb
pop
cld
push
and
push
mov
lds
jmp
incb
mov
test
mov
loop
and
je
jmp
add
push
nop
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
test
and
movsb
cwtl
adcb
js
dec
pop
xchg
jns
ret
lcall
fisttpll
jg
in
std
jge
or
cmp
js
jno
jp
in
pusha
psubb
mov
rorl
sbb
mov
fldl
stos
hlt
dec
inc
or
icebp
adc
out
xchg
insb
mov
and
das
xchg
loopne
mov
data16
inc
and
xor
mov
mov
in
mov
push
pushl
dec
mov
test
push
xchg
in
add
sbb
xchg
pushf
in
loop
dec
mov
jl
and
int
jle
iret
mov
sbb
lret
js
hlt
jmp
cli
adc
aaa
jo
inc
mov
or
icebp
popa
sahf
gs
sbb
push
fcoml
mov
jb
cmpsl
jnp
enter
sbb
pop
fists
cmp
data16
pop
add
add
repnz
mov
pop
sbb
inc
imul
push
mov
subl
rcll
pop
adc
scas
mov
pop
push
int
out
and
shll
sub
mov
cmpsl
repz
repnz
cs
insb
decl
adc
xchg
scas
pop
popf
pop
jae
js
outsb
arpl
mov
mov
inc
push
push
call
enter
scas
stos
and
pop
cltd
sub
dec
shlb
addr16
mov
lcall
pop
nop
mov
mov
mov
popa
ss
das
and
leave
add
add
les
dec
addb
aad
push
mov
jge
xchg
lret
das
aad
cmp
push
mov
das
jno
pop
inc
je
ds
test
lock
pop
orl
sub
sub
and
lcall
std
in
mov
iret
stos
cmpsb
add
pop
add
add
mov
test
insb
sub
cmp
insb
call
imul
les
sub
pop
push
ja
inc
mov
adc
xor
and
pop
out
xor
sbb
and
aad
ret
or
ja
mov
jp
pop
fdivp
add
or
push
ret
lock
in
inc
sub
push
pop
pop
out
or
enter
or
loop
shl
jae
or
bound
mov
pop
ret
mov
xor
lahf
cmp
mov
add
in
dec
xor
mov
mov
or
xor
mov
cmp
add
jns
cwtl
push
pop
inc
cmp
ss
fsubrs
ja
adc
inc
push
fisubrs
je
loopne
push
fcoml
lret
jmp
push
or
pop
inc
or
push
sbb
rorl
add
mov
push
sti
jmp
pop
dec
pop
movsb
lea
xchg
mov
add
pop
add
add
mov
inc
lock
andl
fnstsw
in
cmpsb
jns
hlt
jmp
ja
and
push
pop
push
negl
jb
sahf
aam
ss
je
and
xor
xor
add
int
scas
shl
push
jmp
xlat
fistpll
push
or
cmp
push
inc
call
cmp
and
shll
pop
shlb
adc
pop
std
sbb
fmull
pop
mov
sarb
xor
loop
jo
das
and
inc
jne
sbb
jnp
push
sbb
repnz
add
ror
pop
aaa
or
pop
sub
imul
iret
inc
adc
inc
mov
rorl
frstor
incl
test
cmp
cwtl
or
mov
mov
sub
inc
mov
outsb
cmp
pop
aad
sbb
xchg
adc
sbb
mov
add
jecxz
lock
fmuls
dec
mov
add
add
mov
faddl
push
and
rolb
sub
fisubs
movsl
jo
push
adc
das
fisubrl
es
mov
arpl
dec
push
pop
adcw
dec
lret
mov
dec
out
test
sbb
xor
push
cwtl
adc
lcall
mov
icebp
pop
mov
ficomps
mov
pop
dec
out
jle
mov
lods
imul
pusha
xlat
fistpll
mov
push
xor
ja
jge
lret
les
cwtl
mov
lods
insl
mov
and
lods
push
adc
inc
dec
je
test
fldl
in
or
and
xchg
push
dec
mov
pop
sub
ficoms
inc
pop
movsb
sub
addr16
aam
sub
mov
in
mov
enter
sbb
loopne
sub
push
into
mov
jno
arpl
dec
xchg
and
mov
cld
mov
add
add
pop
add
add
fwait
pop
adc
cmp
pushf
push
gs
mov
ljmp
pop
add
jo
shld
sbbb
mov
cs
sbbl
sbb
pushl
push
ljmp
repnz
add
dec
stos
sbb
popa
dec
mov
and
jmp
or
mov
out
outsl
dec
sbb
insb
pop
adc
outsb
mul
add
and
aad
in
sub
andb
xchg
ret
xchg
stos
mul
test
movsb
sub
inc
mov
es
mov
imul
jecxz
scas
jae
and
mov
andl
lods
rcl
jnp
nop
lahf
pop
mov
add
fsubl
pop
popa
insl
xchg
imul
and
xchg
lea
idivb
or
cmc
push
sahf
adc
xchg
lods
arpl
ljmp
jl
add
out
cmc
mov
mul
dec
xchg
stos
add
pop
add
add
lods
sub
mov
sbb
daa
insl
lcall
leave
movsb
mov
divb
and
dec
es
stos
jmp
add
lret
inc
rolb
xor
jmp
popl
ljmp
fnsave
scas
push
sbb
jae
hlt
lods
iret
fnsave
movsb
or
mov
inc
xchg
pop
or
movsl
mov
dec
push
mov
adc
rorl
imul
sbbb
hlt
sbb
mov
add
fcmovne
test
cmp
cmp
daa
pop
sub
in
loop
out
pusha
pusha
mov
outsb
test
test
jmp
fstps
and
movsb
out
scas
loope
xlat
inc
mov
test
sub
push
pop
jmp
xchg
and
dec
mov
adc
loop
xor
fnstsw
stc
pop
inc
pop
jge
inc
and
inc
bound
push
paddb
fucomip
std
dec
std
pop
cmp
cmp
fcomip
leave
jo
stos
add
pop
add
add
repnz
dec
mov
xor
in
movsl
mov
push
fwait
or
hlt
cltd
inc
inc
push
dec
mov
movsb
add
imul
jecxz
xchg
shrb
cltd
mov
cltd
cmp
sub
inc
int
push
cli
iret
dec
xor
mov
fadds
jns
cs
imul
xor
aaa
sarb
or
arpl
stos
jo
outsl
push
stc
mov
adc
in
jns
dec
hlt
cmpsl
xchg
pop
pop
pop
int3
push
ljmp
jno
lea
fdivrp
xchg
pop
pop
push
ret
leave
adc
adc
sub
das
pushf
mov
mov
adc
stos
nop
push
cmp
sub
add
pop
addr16
sbb
jg
mov
pop
push
js
pop
lods
add
and
aas
and
xchg
jmp
mov
aaa
sbb
push
push
lods
jns
mov
mov
add
add
fidivs
loop
ljmp
es
adc
lods
add
pop
add
add
mov
mov
icebp
rolb
add
cltd
push
mov
pop
cmp
loop
and
mov
mulb
enter
hlt
sti
jns
dec
pop
fdivrp
ljmp
lahf
insl
bnd
mov
js
orb
imul
xor
mov
jle
or
ds
fimull
sahf
push
inc
pusha
cmp
nop
lock
jae
xchg
pop
xchg
test
movsl
adcl
addr16
stos
jmp
jno
shll
test
ja
cmp
cs
ja
sub
pusha
mov
mov
inc
pop
cmp
sub
mov
cmp
sub
into
dec
or
mov
xor
mov
xchg
loop
loope
bound
pushf
fisubrs
push
push
pop
jp
je
js
stc
pop
sti
js
in
fmul
insb
lret
and
jmp
mov
sub
daa
or
stc
jp
add
xchg
jg
jmp
std
push
int
stos
mov
add
pop
add
add
jae
jle
sbb
pop
jae
movsb
cmp
or
mov
dec
sub
mov
repz
jnp
lcall
mov
mov
pop
sbb
and
cmc
inc
xor
mov
add
hlt
out
sbb
dec
mov
roll
out
cltd
sbb
add
jecxz
jae
loop
roll
out
push
ror
mov
dec
or
pop
add
pop
arpl
in
lock
in
mov
jge
mov
leave
mov
icebp
fdivl
aaa
data16
inc
jb
fsubrs
mov
adc
push
clc
idivl
add
xchg
popa
test
sub
pop
mov
cmpsl
loop
adc
mov
pop
movsl
out
xor
mov
pop
inc
dec
adc
int
sbb
roll
sbb
sub
add
xor
dec
sarb
lds
add
pop
add
add
jg
add
adc
stc
lcall
sbb
ds
dec
sub
push
lahf
mov
adc
aad
sar
ja
lock
jecxz
jae
xchg
sub
clc
xor
hlt
mov
pop
call
outsb
shrl
sub
mov
xchg
cmp
in
pusha
sub
dec
in
pop
mov
test
adc
lds
nop
pop
jo
inc
xchg
xchg
or
or
xchg
inc
mov
flds
add
into
out
sbb
adc
mov
sbbl
add
xchg
mov
push
mov
in
sub
dec
ja
lock
push
add
add
clc
add
or
mov
mov
aad
sub
and
xchg
in
fmuls
std
leave
sarb
jne
outsb
lcall
sbb
roll
mov
xlat
cmp
popa
shll
push
pop
xor
cmp
or
ljmp
add
lret
sbb
clc
inc
ret
pop
in
add
outsb
ds
push
push
fidivs
in
arpl
sbb
adc
out
pop
pushf
inc
dec
repz
data16
xchg
cmp
mov
ja
cmp
dec
inc
sti
dec
pushf
cwtl
push
leave
or
pop
push
inc
push
fldenv
lea
inc
divl
in
int3
popa
jne
xchg
sub
jno
cmp
andb
mul
aas
xlat
stos
out
in
and
imul
shr
cs
cmpsl
mov
add
in
inc
lds
pop
in
mov
push
ret
repz
lods
cmpl
or
call
xchg
pop
aad
sbb
xchg
fsincos
ret
mov
ja
adc
jp
gs
das
inc
and
ret
bound
sbb
sbb
lds
cwtl
add
fs
enter
addr16
addb
or
dec
mov
mov
popf
jl
or
es
les
mov
ret
ja
test
test
xchg
icebp
mov
add
add
add
sbb
sub
add
jb
inc
ret
mov
sahf
mov
mov
icebp
mov
jb
mov
xchg
insb
cmp
or
fisttpl
repnz
add
adc
in
sub
mov
dec
and
jl
mov
cmc
mov
pop
xor
and
mov
mov
scas
and
aaa
sub
mov
lcall
sbb
sub
aam
pusha
or
test
loopne
mov
lahf
or
lret
in
sub
inc
cltd
mov
push
js
and
hlt
clc
inc
pop
subb
xchg
fs
mov
lea
jno
pop
xor
fbld
in
call
sub
pop
movsl
mov
loopne
mov
movsb
ds
andl
sbb
jge
sarb
aas
cltd
outsl
sbb
mov
lds
lret
push
mov
sar
mov
dec
cmpsb
mov
add
clc
pop
stc
out
push
push
xchg
data16
rol
fs
mov
add
add
add
insl
subl
sbb
mov
aas
repz
fxch
enter
scas
pop
xchg
mov
sti
int
sub
sarl
scas
adc
lcall
jl
jg
jg
sbb
loopne
pop
sbb
jae,pt
xchg
xlat
arpl
mov
inc
xor
lcall
pushf
jl
xchg
fldenv
in
inc
testl
mov
loop
repz
movsb
call
mov
jl
rcl
mov
ret
outsl
aas
int
mov
lea
stos
adc
jne
enter
fildll
popf
iret
je
pop
ja
xlat
jbe
outsl
aad
divb
out
aas
and
push
subl
negl
cmp
inc
inc
or
sub
fsubrs
jle
inc
lock
xchg
and
call
shlb
gs
loop
xchg
enter
popf
test
lds
cli
lcall
test
pushl
add
imul
test
cmp
pop
cmc
lcall
dec
pop
cli
push
sbb
jne
outsb
xchg
push
fsts
clc
ljmp
lods
shld
call
fdivr
xchg
xor
dec
mov
pop
filds
push
push
or
xchg
inc
mov
dec
cs
inc
mov
mov
call
popf
lea
sarb
les
repz
scas
xor
sbbl
push
push
test
mov
cmp
adc
out
or
pop
xor
les
fcompl
xchg
mov
mov
lods
loope
nop
shl
ret
imull
push
test
pop
or
sbbb
sti
lods
mov
xchg
xchg
ficoms
mov
popf
mov
push
inc
gs
loopne
xor
fsts
stc
mov
xorl
movsl
jns
cmp
add
add
add
and
push
or
lret
jo
xor
lods
iretw
fcoms
xchg
or
daa
in
sbb
pusha
rcll
mov
hlt
aaa
out
push
cmpsl
add
mov
xchg
cld
pop
in
xchg
jmp
fstpt
ljmp
sbb
adc
call
aad
and
jno
outsb
push
ret
fsub
inc
mov
movsl
fwait
mov
adc
out
mov
push
scas
mov
les
or
outsl
cmp
sbb
jae
into
in
or
test
mov
add
jmp
lods
jne
jge
xor
int3
mov
ja
mov
test
out
pop
jno
cli
dec
or
popa
cmpsl
mov
divb
cmp
das
pop
sti
repnz
inc
jg
jle
mov
js
out
jne
xchg
adc
lds
add
pop
sbbl
cli
test
or
or
add
add
or
outsb
test
in
pop
inc
loope
xchg
adc
fbld
dec
mov
fst
daa
cmp
es
adc
xlat
mov
sti
inc
dec
mov
cld
repnz
xchg
pop
inc
or
pop
cmpsl
fists
dec
call
sbb
sarl
jge
or
xor
add
and
movsl
int
xchg
jg
add
mov
ja
adc
xlat
pushl
lds
sbb
adc
and
cpuid
ds
mov
scas
aam
xchg
jl
in
mov
jbe
add
hlt
jae
fwait
mov
dec
stc
pop
mov
std
cmp
pop
lea
adc
lods
jae
jge
jle
pop
insb
aaa
cld
arpl
dec
pop
xchg
push
dec
inc
xor
pop
jl
sbb
mov
dec
iret
mov
enter
sbb
jge
mov
loope
mov
jecxz
out
arpl
sbb
mov
adc
add
pop
add
add
pop
sub
test
mov
xchg
orl
mov
xor
sbb
ss
ret
or
mov
or
rcl
mov
push
fmull
add
dec
mov
and
lods
aad
rcll
inc
pop
es
int
loop
pop
loope
pusha
adc
fimuls
add
jecxz
rcrl
mov
in
sub
pop
les
pop
rdmsr
mov
jb
push
clc
int3
rcll
movsb
nop
or
adc
or
push
cld
add
or
imul
adc
mov
loopne
or
add
sti
test
jle
push
sbb
lcall
dec
sti
dec
arpl
mov
pop
xorb
divb
jae
cmp
adc
jno
outsl
stos
jg
or
mov
mov
addr16
jb
mov
sub
xchg
pusha
jl
mov
push
xchg
test
jg
xor
stos
jae
div
sbb
add
mov
test
gs
jo
add
fidivrl
nop
cwtl
call
xor
repnz
repnz
inc
das
jle
nop
aaa
jmp
jge
das
mov
push
popa
mov
loope
aaa
dec
push
clc
cmp
sub
mov
push
mov
pop
and
inc
ficoms
jge
mov
jl
outsb
mov
add
ja
and
adc
fucom
pop
in
mov
and
sti
inc
fdivrl
call
pop
ja
push
arpl
or
stos
add
pusha
in
jge
aam
aam
xor
jp
nop
cmovb
inc
out
add
in
xchg
ficomps
xchg
and
sbb
jg
nop
mov
dec
sbb
out
xor
mov
mov
jecxz
mov
movsl
dec
cld
cmp
sbb
push
popf
in
nop
xchg
dec
in
daa
push
push
sti
mov
xor
out
add
adc
in
lcall
xor
movsb
cmp
popf
and
add
or
cli
push
test
push
rcrb
in
push
cmc
mov
mov
cwtl
insb
sahf
push
or
mov
in
aaa
sbb
inc
lret
push
dec
pop
dec
lret
ljmp
xchg
mov
in
jmp
leave
pop
fldcw
cmp
cmpsb
fisttpll
in
or
fnstcw
lahf
pusha
addl
cmc
sti
jbe
mov
xchg
pop
out
es
mov
xchg
jmp
xchg
sub
and
and
xchg
jb
outsl
xchg
or
popa
xor
mov
loope
add
js
mov
inc
in
pop
mov
xor
mov
dec
out
cmp
clc
cmpb
ret
test
mul
pop
cmp
pop
cmp
pop
clc
and
mov
clc
xchg
push
mov
mov
aad
sub
push
fildll
jle
lahf
push
and
repnz
xchg
scas
jmp
aam
addl
xor
adc
fistps
js
mov
add
sub
jg,pt
adc
outsl
xlat
push
jbe
nop
sub
add
ja
pop
cmp
je
or
jne
mov
int
mov
xchg
ja
adc
out
cmp
sub
testb
push
and
mul
inc
int3
sbb
neg
pop
icebp
xlat
enter
cmp
test
movsb
add
popf
sub
pop
or
addr16
mov
or
rcrl
push
pop
push
lock
or
clc
adc
mov
mov
xchg
cmc
insb
inc
fsubs
and
and
je
insl
adc
iret
outsl
xchg
popf
shrl
imul
jno
jg
sbb
push
shl
jle
lea
pushf
pop
sbb
lahf
and
push
push
jb
cmc
in
js
mov
xchg
stos
lret
nop
mov
and
sub
dec
repz
outsb
lods
cs
mov
fistpl
mov
addl
mov
or
xor
dec
test
cmpsl
xor
sti
or
inc
xorl
add
add
out
idiv
outsl
mov
in
xor
add
in
std
xchg
out
rclb
inc
fs
icebp
xor
ja
sti
cmp
cmp
adc
pop
mov
stos
jbe
cmp
fnstenv
das
inc
push
orb
xchg
enter
int3
sbb
add
push
sti
jp
mov
loop
mov
jmp
add
and
pushf
jnp
cmp
movsb
xor
sbb
sub
pop
inc
pop
cmp
pusha
mov
sub
mov
adc
sbb
mov
xor
or
jecxz
add
notb
js
call
pop
or
cmc
xchg
or
mov
jg
outsl
aas
popw
push
mov
sbb
jle
div
sti
and
xchg
ficomps
pusha
int
negb
scas
inc
cmpsl
inc
addr16
int
stos
xchg
mov
add
xchg
xchg
stos
xorl
push
mov
and
add
dec
push
add
xor
mov
ucomiss
es
aaa
mov
add
mov
mov
mov
movsb
mov
and
pop
or
enter
inc
mov
xchg
mov
cmpsl
or
add
jp
cmc
add
loope
push
cmp
outsl
dec
pushf
inc
jge
cmpsl
or
pop
fsubrl
sub
insl
mov
and
pop
mov
push
aas
arpl
dec
xchg
push
test
pop
addr16
adc
sbb
repz
fnstenv
cmp
cld
fnsave
out
push
leave
popf
cwtl
int
xchg
aad
add
gs
adc
xchg
stc
and
xchg
notl
dec
jae
jb
jb
in
je
adc
pop
sbb
jbe
mov
pop
call
out
push
leave
adc
in
xchg
mov
xor
aad
push
iret
dec
outsl
mov
test
sub
sbb
je
fistpll
sub
pop
inc
int
mov
adc
push
int3
xor
fisttpll
adc
xchg
mov
add
add
fistpll
call
add
mov
add
in
cld
pop
rolb
nop
pop
mov
pop
mov
movsl
dec
mov
xchg
push
mov
cld
push
xchg
dec
stc
out
or
xchg
pusha
mov
ja
sbb
mov
loopne
mov
mov
scas
data16
dec
mov
push
ljmp
xor
add
add
inc
es
les
pop
adc
lcall
or
inc
lods
pop
fisubrs
cmp
cmp
push
lea
in
inc
cmp
sbb
mov
int
mov
fucomp
xor
shl
adcl
and
xchg
popa
divb
dec
nop
mov
mov
leave
sub
clc
pop
into
imul
scas
cltd
jno
sub
and
adc
icebp
jne
outsl
lret
lds
jnp
push
into
imul
add
std
sti
leave
sti
iret
jmp
dec
mov
scas
inc
mov
add
add
sub
pusha
push
push
xchg
cmp
dec
ljmp
les
imul
and
mov
lea
jmp
and
rclb
mov
aad
adc
mov
pushf
js
cmp
ret
pushaw
sbb
mov
mov
dec
jno
fs
lret
aaa
mov
dec
and
xor
jno
xchg
arpl
jp
pop
inc
jg
lods
scas
sbb
cld
inc
mov
fs
pop
scas
inc
out
xchg
inc
je
xchg
popa
es
rcll
sahf
lods
jmp
fwait
int
sub
in
mov
scas
jno
dec
insb
nop
or
mov
gs
mov
daa
adc
popa
shrl
ds
test
iret
xchg
pop
addr16
in
push
mov
sub
fwait
xor
inc
push
aas
xchg
mov
not
int3
div
mov
mov
imul
add
mov
xchg
pop
mov
inc
clc
dec
mov
add
cmpsl
adc
in
scas
and
dec
outsl
dec
stos
and
inc
inc
hlt
mov
or
or
add
gs
or
mov
jns
out
ret
xor
loope
int3
sbb
inc
and
mov
enter
xchg
flds
sub
adcb
loop
orl
push
mul
adc
ljmp
add
daa
mov
cmp
lods
push
test
bound
fsubl
dec
adc
add
push
and
mov
cmp
lcall
cmp
or
jmp
mov
jle
ficoml
fadds
out
test
xchg
inc
xor
sub
push
sahf
push
push
inc
xor
loop
sub
mov
std
dec
adc
cmp
xor
stos
sub
stos
andl
pop
lock
dec
lds
add
fwait
mov
or
jg
mov
xor
sub
push
mov
add
xchg
ljmp
xchg
lcall
call
lods
jl
or
xchg
jecxz
insl
fs
push
mov
mov
mov
scas
sub
dec
add
mov
loopne
cmp
cmpb
mov
jle
mov
adc
les
add
xchg
add
pushf
add
lret
adc
outsb
punpcklwd
fistps
stos
cltd
jmp
sbb
and
cmp
roll
xor
mov
jnp
divb
dec
pop
push
cmp
lock
fs
cmp
loop
xchg
adc
out
js
fistl
rolb
push
push
inc
lret
leave
or
es
arpl
mov
mov
les
das
lret
lock
dec
hlt
xchg
or
inc
movsb
jnp
jge
ja
loop
dec
sbb
outsb
test
mov
cld
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
xor
push
pop
pop
and
in
adc
cs
add
mov
les
loope
ret
cmc
add
int
or
push
iret
pop
inc
dec
ljmp
std
test
filds
mov
lret
ljmp
mov
shl
movsb
jle
xlat
enter
std
and
imul
cmp
popf
out
mov
xchg
mov
lcall
addr16
add
push
xchg
dec
fbstp
jl
mov
add
push
addl
shrb
inc
lret
sahf
push
inc
jl
mov
and
jecxz
orl
cmc
cmp
les
push
test
shrl
jo
std
js
sbb
and
or
mov
mov
cmpl
popl
fdivl
add
pushf
shrb
xchg
mov
mov
pop
add
add
xor
scas
mov
pop
mov
addb
inc
sbb
sbb
hlt
lods
mov
fisubrs
sub
mov
rcr
sbb
cmpsl
sarl
aad
dec
out
mov
or
popf
or
das
sub
adc
or
adc
push
sub
leave
add
in
testb
je
lea
es
call
add
into
push
or
push
sub
dec
mov
push
icebp
xchg
fs
xor
push
lock
mov
jne
mov
push
inc
imul
adc
jge
sub
das
insb
mov
mov
test
jno
repz
arpl
stc
add
testl
inc
and
mov
add
dec
lock
add
cmp
mov
ljmp
ficomps
pop
scas
dec
pop
xor
test
push
cmc
add
test
mov
fucomip
imul
add
add
jae
mov
mov
ljmp
addr16
or
iret
dec
adc
adc
scas
out
test
fdivs
fnsave
lret
xor
cs
sub
push
es
jle
pop
dec
xlat
aaa
and
icebp
sbb
sbb
data16
add
lock
fsts
or
and
inc
and
jl
dec
mov
adc
cmp
push
sub
lret
ljmp
cltd
push
adc
xor
nop
in
sub
mov
xchg
jo
sbb
leave
movsl
or
adc
mov
lret
pop
stos
testb
and
bound
xlat
shrl
jmp
dec
movsb
movsb
mov
pop
pop
xor
push
jecxz
testb
add
xchg
xchg
push
clc
xchg
in
repz
and
cmp
rorb
fldt
cmp
insl
icebp
movsb
orl
jg
jne
jne
jg
loop,pt
lret
jne
outsl
ret
add
pop
add
add
jle
stc
xor
ljmp
test
in
dec
or
inc
sub
xchg
push
mov
sahf
sub
sub
clc
jno
cmp
mov
scas
cmp
or
xchg
rep
enter
pop
jmp
std
push
fwait
push
cli
sub
out
jp
jns
push
mov
push
jge
add
xchg
push
sbb
push
imul
or
mov
lds
arpl
movsl
mov
cli
inc
mov
sbb
imul
pop
les
out
int
jne
test
lret
movsl
cmp
stc
add
adc
sbb
into
push
and
jbe
cmp
jae
inc
mov
adc
popf
sub
std
dec
fidivrl
outsl
hlt
push
inc
ljmp
cmp
outsb
adcl
addr16
int3
pushf
in
add
dec
pop
mov
mov
dec
add
and
jbe
add
pop
add
add
nop
aad
sti
xor
xlat
mov
test
iret
dec
or
addb
cmc
add
cwtl
out
aad
jmp
mov
lret
mov
push
pop
in
ds
mov
test
loopne
out
adc
push
sub
or
push
fdivp
mov
out
mov
xchg
andl
adc
xchg
insb
sbb
sbb
notl
sub
ret
pushf
jecxz
pop
add
sub
std
inc
aad
loope
es
call
cli
std
dec
enter
xor
mov
imul
loop
add
or
push
jmp
testb
ret
push
cmpsl
cmp
jecxz
push
stc
cltd
mov
mov
or
xor
loopne
les
jo
dec
add
repz
lods
jae
sbb
jae
je
iret
and
ds
jmp
popa
hlt
push
psubsb
push
push
and
add
add
outsb
jle
lods
testl
jmp
pop
jge
add
pop
add
add
pop
adc
std
stos
jae
or
aad
xchg
mov
scas
shlb
icebp
add
insb
ja
mov
pop
cmp
sub
mov
add
and
sti
test
push
xor
fldcw
sub
mov
cld
dec
mov
imul
test
dec
or
les
jno
or
push
es
movsb
mov
and
repnz
mov
inc
cli
in
test
xor
sub
psrlw
push
jg
mov
push
lods
sti
sbb
addr16
mov
std
out
cld
sub
lds
out
and
jp
dec
rol
aas
push
rorl
push
mov
mov
mov
dec
iret
lahf
push
add
adc
arpl
add
add
xchg
out
push
shr
mov
push
fwait
mov
inc
and
add
mov
arpl
jle
mov
test
add
pop
add
add
fnstcw
pusha
mov
repnz
test
out
push
ficoml
push
negb
cwtl
andl
xor
or
mov
cmp
shll
pop
mov
aad
inc
jp
jecxz
sub
add
dec
popf
jg
ja
aam
cmc
jle
or
cmpsl
mov
pop
xlat
pop
mov
mov
fistpl
decl
std
sbb
mov
xchg
das
mov
into
movsb
pop
cmp
adcl
sti
inc
fnstcw
inc
fmuls
jge
stc
dec
and
sarl
mov
mov
cmpsb
and
lods
sub
mov
mov
xor
scas
sbb
xchg
jbe
adc
mov
dec
fistl
pushf
adc
inc
leave
push
cld
inc
cltd
xchg
cmp
leave
fwait
dec
sahf
mov
push
ja
or
aam
repnz
push
or
sbb
cmp
add
out
sti
xlat
push
aam
or
movl
add
std
or
and
shrb
bound
rcr
adc
push
lahf
pushf
in
dec
dec
xlat
sub
faddl
adc
cmp
pop
xchg
mov
mov
sahf
or
mov
sbb
div
cmp
or
mov
or
pop
and
push
push
push
loope
pop
add
pushf
push
push
mov
cs
xor
mov
outsb
add
mov
negb
rcll
imul
sti
js
out
fs
pop
sub
pusha
fisttpl
mov
xor
daa
int3
jne
xchg
pop
pop
and
out
dec
jg
sbb
es
sbb
test
push
jne
xor
fisttpl
add
mov
stos
mov
rclb
cmpsb
loopne
push
clc
aas
sti
mull
aam
add
push
sub
cmp
jg
dec
das
pop
mov
push
sub
xchg
enter
add
add
test
mov
cli
jecxz
adc
mov
push
or
adc
insl
inc
xchg
jbe
insb
roll
xchg
push
fwait
ret
dec
sahf
lods
lret
ficoms
dec
sbbl
fmull
mov
pushf
jge
fcomi
xchg
dec
inc
mov
add
mov
dec
lea
cwtl
xchg
cmp
sbb
inc
addr16
lods
test
pushf
sbb
daa
insl
aad
in
inc
jnp
aad
mov
pop
sbb
push
sbb
mov
aad
jecxz
sbb
stos
ds
adc
pop
fsubrs
or
sbb
sar
addr16
insb
adc
and
inc
ror
shll
ret
add
adc
mov
scas
mov
jb
inc
pusha
jnp
pop
cli
xchg
sar
cmp
clc
jge
shll
xchg
or
push
stos
push
or
inc
cmpsb
dec
test
sbb
data16
sbb
add
xor
fistpll
out
repz
pop
xchg
cltd
leave
add
pop
add
add
aam
stc
fstpl
int3
ret
pop
shll
inc
xlat
mov
mov
sub
inc
and
jne
pop
ret
jns
cmp
dec
adc
pop
lds
pushf
push
dec
jne
xor
cmp
inc
loop
or
sbb
add
cmp
cwtl
sahf
movhps
pop
xchg
in
push
jb
push
scas
add
mov
lret
sbb
xor
cmp
js
dec
cmp
mov
pushf
xor
in
jno
mov
jae
call
xor
push
pop
gs
cwtl
push
pop
aam
fldenv
lahf
mov
out
decb
add
inc
cmp
mov
adc
lahf
inc
outsb
lods
fisubrl
sub
mov
and
in
jmp
or
movsl
and
mov
test
ja
cld
adc
xchg
push
cmp
out
push
add
mov
and
lret
pop
add
add
in
jmp
add
repz
mov
add
out
test
pop
mov
aad
sti
pop
xor
push
or
pop
mov
aam
sbb
push
adc
pop
xchg
outsl
popf
ss
lods
and
sub
stc
xor
adc
mov
adc
enter
dec
rcrl
dec
das
mov
fwait
mov
adc
test
icebp
mov
andl
mov
pop
xchg
test
xor
pop
lahf
test
rclb
push
arpl
xlat
aaa
mov
pop
decl
xor
mov
and
push
pop
sbb
icebp
mov
cmp
jns
clc
add
add
dec
or
sub
in
int3
inc
and
aad
loopne
sarb
pop
adc
mov
mov
jno
data16
divb
xchg
bound
xchg
add
enter
in
adcl
cmpsl
lret
add
pop
add
add
pop
xchg
push
sub
bnd
pop
lock
push
push
mov
imul
stc
push
ja
shrl
add
loopne
pop
les
dec
add
das
xlat
iret
jns
imul
fdiv
mov
into
fstl
jnp
hlt
icebp
add
mov
nop
pop
clc
xchg
mov
cmp
aam
pusha
stc
pop
sub
cmpb
ja
lock
in
mov
cmpl
xchg
mov
movsb
mov
decl
pop
cmp
mov
nop
movsl
aas
dec
dec
dec
dec
rcll
lea
cs
lahf
mov
xchg
loop
lock
insl
repz
sub
push
test
xor
xchg
pop
adc
cmp
mov
mov
xchg
add
dec
das
fisubrs
xorl
in
iret
lret
insl
add
fimuls
in
test
in
jnp
orl
add
imul
cmc
decl
repz
int3
add
pop
add
add
lods
jnp
aam
cwtl
test
insb
pop
xchg
cli
dec
push
aad
add
jle
lods
ja
in
mov
roll
mov
inc
pop
ret
setnp
xchg
lock
mov
nop
in
mov
xchg
or
das
mov
inc
ljmp
push
mov
jnp
sub
pop
push
icebp
scas
pop
nop
fdivrl
insl
pop
dec
fisubs
loopne
push
push
xchg
add
das
inc
shr
ret
ds
shlb
enter
ret
rolb
mov
and
or
or
cmp
sub
adc
popa
mov
mov
das
sub
sub
xor
sbb
xor
cs
xchg
out
clc
insl
adc
out
push
scas
inc
inc
add
mov
out
sti
fidivrs
arpl
movsb
test
mov
mov
push
mov
add
repz
xchg
sbb
lods
jo
cmpsb
xchg
lods
add
ja
iret
arpl
or
sti
push
insb
mov
add
pop
add
add
mov
pop
jb
test
mov
or
js
mov
dec
into
or
inc
mov
xchg
or
dec
xchg
and
xor
add
push
cli
shlb
insb
lahf
adc
rcl
xchg
jb
icebp
dec
icebp
xor
mov
cltd
in
and
mov
inc
in
pop
mov
mov
or
inc
insb
rcrl
test
pop
pusha
test
aaa
insb
lock
in
imul
jp
mov
pop
ss
xor
arpl
ljmp
or
in
inc
inc
push
test
adc
add
cmp
hlt
and
adc
jp
fstp
push
and
cmp
ret
or
sbb
inc
sbb
ja
jge
pop
ss
adc
add
and
repz
inc
and
loope
xchg
or
mov
out
out
out
into
shlb
ret
mov
add
add
shrb
jbe
aaa
push
out
xchg
roll
out
xchg
sbbl
leave
push
js
fisttpll
sbb
movsb
dec
adc
loope
jge
popa
sub
pop
mov
outsb
mov
andl
or
aaa
mov
sbb
push
cmp
scas
push
adc
cwtl
mov
popa
dec
dec
jmp
in
rorb
ja
cld
mov
jns
jno
cmp
pop
mov
inc
lret
stos
mov
push
popl
push
add
jae
dec
mov
xor
ds
leave
pop
mov
data16
pop
cld
jmp
popa
xor
subb
aad
sar
xchg
jo
adc
insb
push
mov
ror
adc
lods
clc
dec
push
push
mov
mov
cmc
out
sbb
push
xchg
addr16
mov
sbb
or
cmpsb
xchg
fmull
push
and
mov
add
loopne
and
je
out
mov
movsl
mov
add
pop
add
add
lods
push
cld
jge
mov
clc
and
dec
ffree
mov
xchg
sub
pop
cmp
mov
fdivrs
movsl
dec
pop
add
cmp
test
lret
mov
imul
mov
jmp
shlb
and
mov
mov
or
inc
hlt
push
in
out
ss
popa
dec
pop
pop
fucom
stos
lahf
ret
iret
loopne
lock
cmp
lahf
fidivs
add
movsl
stc
dec
jecxz
in
sti
xchg
xchg
out
and
push
ja
sarl
mov
fsubp
lea
fiadds
repnz
testl
stos
pop
mov
push
xor
mov
hlt
dec
adc
data16
out
sbb
mov
xchg
add
dec
mov
repnz
subb
outsl
ret
sbb
out
lea
mov
pop
ret
call
push
mov
add
add
dec
daa
dec
das
outsb
imul
sub
lret
lret
add
add
add
rcrl
xor
je
shlb
mov
push
jae
push
or
cli
stos
jae
dec
lcall
sub
call
loop
xor
dec
dec
iret
mov
cli
fisubl
jne
mov
xor
and
jmp
mov
jmp
andl
jnp
jno
mov
jl
lret
add
or
or
pushf
imul
insb
stc
dec
loopne
pop
dec
sbb
push
and
in
in
xchg
xchg
sub
sti
clc
and
xchg
xor
pop
pop
mov
ss
gs
add
and
inc
sub
fwait
fcmove
dec
push
subb
psubq
xchg
sbb
fs
pop
mov
or
inc
sub
leave
ret
cmp
mov
and
mov
adc
add
shl
inc
add
fdivl
call
out
lahf
xor
add
rcl
add
pop
add
add
js
xchg
push
insl
out
push
testb
mov
test
xor
push
pop
fdivl
sahf
int
test
pop
pop
fs
loope
movsb
pop
xchg
mov
aad
test
jns,pt
mov
in
nop
les
mov
aas
nop
idiv
mov
pop
add
dec
jecxz
lds
jecxz
xorb
xor
xor
aaa
andb
std
insb
cmp
mov
scas
xor
xorb
sub
adc
cs
xchg
maskmovq
negl
fdivr
xor
pusha
mov
dec
adc
imul
loop
popf
mov
daa
mov
pusha
ljmp
movsb
xorb
enter
icebp
int
loopne
add
pushf
arpl
outsb
lock
xchg
cld
push
shrb
popf
inc
sahf
mov
push
arpl
xor
add
cld
aam
movsb
rorb
sbb
daa
sbb
add
neg
outsl
xor
flds
xchg
icebp
fcom
add
pop
add
add
inc
in
lds
or
mov
mov
or
push
mov
cli
movsl
push
jecxz
loopne
push
adc
in
out
sub
jg
inc
push
and
add
insb
test
orb
cld
daa
sti
gs
pop
repnz
call
pop
adc
jno
std
jb
gs
mov
cmpsb
sar
jae
sbb
dec
adc
inc
cmc
push
push
fimuls
pushf
pop
adc
xchg
je
xor
mov
test
ficompl
dec
popa
mov
jg
out
mov
out
outsl
mov
dec
sbb
dec
insl
dec
cld
push
loopne
bound
xor
icebp
add
sub
adc
out
push
push
fdivrl
or
loop
mull
aaa
mov
pop
lods
pop
shlb
outsl
mov
ror
enter
inc
push
in
pop
and
ficompl
sar
sub
mov
cmp
jo
add
add
sbb
in
and
sahf
jle
add
pop
add
add
inc
inc
fmull
imul
sub
mov
inc
push
ror
xor
dec
jnp
inc
cwtl
sub
xchg
or
pop
pop
inc
mov
sbb
mov
pop
or
xlat
andl
dec
int3
loop
mov
pop
push
js
leave
jnp
xchg
test
in
push
adc
test
mov
mov
mov
ja
stos
push
pusha
sub
xor
ljmp
push
add
or
leave
lea
add
jg
xchg
add
cmpl
cmp
aaa
mov
xchg
ds
pushf
xor
jb
test
mov
test
or
stc
jle
dec
lcall
popa
mov
lds
pusha
dec
sub
pusha
xchg
inc
sbb
divb
mov
fdivrp
scas
popf
aas
aam
dec
cmp
push
popf
jae
fstpl
push
xchg
stos
enter
add
ds
stc
test
aam
add
add
add
faddl
inc
cmpsl
mov
sub
jecxz
mov
sbb
insb
xlat
inc
insb
add
xlat
addr16
roll
outsl
rorb
add
mov
jle
imulb
lods
divb
cmp
int
insl
add
sub
adc
pusha
mov
les
dec
shlb
inc
lahf
push
stos
insb
in
sbb
insb
ja
cmp
fucomi
fistpll
ret
and
mov
pusha
lret
sbb
mov
lock
jbe
or
jp
xchg
jae
mov
shlb
push
sbb
out
js
mov
mov
mov
mov
add
inc
pop
mov
test
daa
movsl
mov
loop
xchg
lods
lds
scas
jbe
je
jg
mov
mov
lods
test
cmc
jnp
jo
xorb
js
pop
inc
adc
push
sbb
das
sub
mov
ja
cmpsb
mov
dec
aas
mov
xor
in
cmp
xchg
and
idiv
lahf
insl
jae
fcmovnu
mov
add
pop
add
add
pop
pusha
jns
scas
ds
jns
std
or
orl
xor
test
mov
mov
sbb
mov
loopne
cmp
sbb
inc
mov
loop
adc
mov
xor
das
push
sub
imul
std
xlat
das
mov
adc
in
add
scas
inc
push
std
push
stos
jge
aas
mov
adc
stos
loope
push
xchg
lret
pop
push
test
scas
jbe
push
push
xor
inc
frstor
sub
movsl
pusha
pop
push
jnp
push
dec
repnz
fstpt
xchg
loopne
xor
push
sbb
jbe
push
add
push
ja
jae
stos
mov
stc
push
subl
icebp
or
mov
push
cli
arpl
fwait
or
jae
lret
add
and
mov
repz
das
sub
add
push
xor
fisubrl
pop
mov
inc
cmp
or
cmp
fildl
cmp
jg
xchg
mov
or
add
add
add
aas
add
mov
outsl
lea
fcmovu
mov
push
ja
loopne
cmp
mov
pop
adc
les
jle
cmpsb
lcall
out
repnz
mov
adc
dec
and
jb
pop
xchg
ret
hlt
jo
test
mov
jg
pop
jo
fs
jns
nop
push
jb
fistl
jp
jle
lods
lret
out
pop
dec
ja
push
shll
ret
cmp
xchg
loopne
xchg
mov
loopne
mov
icebp
rcrb
inc
jns
outsb
in
mov
inc
mov
in
cmc
add
pusha
mov
mov
push
in
sahf
out
jmp
gs
cmp
mov
dec
jp
push
not
fisttpll
mov
cs
pop
fwait
in
adcb
out
mov
pop
inc
inc
mov
in
test
dec
lret
dec
fists
daa
sbb
add
imul
cld
push
inc
faddl
add
add
add
iret
mov
push
or
and
cmpsl
mov
mov
gs
mov
mov
test
js
cmc
pop
imul
or
mov
cmp
xlat
cmp
loop
add
fdivs
cli
mov
imul
or
jbe
aam
in
sahf
and
or
pushf
fnstsw
dec
popf
les
outsl
lahf
or
mov
in
pop
cli
cwtl
cs
cld
and
cmc
in
in
cmpsl
mov
jo
data16
or
mov
sarb
fildll
cwtl
xchg
sbbl
xor
lea
out
lods
std
je
bound
mov
fcmovne
sub
cs
fidivs
or
orb
cmpsb
andb
inc
mov
pop
sbb
les
sarl
data16
xorb
mov
inc
mov
sar
jg
imul
add
psubusw
push
adc
xchg
sbb
lea
add
add
add
dec
je
test
dec
push
cmp
xchg
xchg
pop
push
mov
jecxz
push
nop
pop
or
xlat
sbb
fists
call
icebp
nop
pop
jbe
sub
xchg
cmpsl
sbb
andl
cmp
idivb
inc
test
outsb
cmp
pushf
jnp
mov
and
cmp
jae
sbb
rclb
data16
lods
aaa
xchg
inc
scas
idivb
pusha
sbb
fs
jne
xchg
pop
dec
add
icebp
sub
pmulhuw
data16
xchg
mov
sbb
mov
sub
stc
mov
mov
mov
sahf
imul
jno
mov
xor
mov
push
cmpsb
jno
fistpll
dec
mov
mov
mov
pop
aaa
push
fcmovb
pop
jl
pop
adc
push
inc
outsl
inc
mov
sbb
outsl
insb
js
inc
pushf
dec
xchg
ds
pop
lret
jnp
in
sbb
sahf
cmc
fsubrp
jnp
push
xor
jae
sbb
fiaddl
add
add
add
popf
mov
xor
test
adc
addr16
ja
or
imul
stos
movsb
mov
fsubp
mov
outsb
faddl
xor
and
inc
mov
out
push
cli
xor
cmp
mov
in
cltd
xor
subb
cmp
clc
ret
cs
es
std
cmp
loope
mov
dec
gs
cmpsb
add
hlt
pop
int3
out
adc
out
into
mov
push
movsl
icebp
pop
js
xchg
sub
fnstenv
push
or
mov
lretw
and
mov
sbb
mov
and
jecxz
xor
or
icebp
dec
ljmp
in
mov
jne
add
pop
xchg
dec
adc
popa
mov
sbb
hlt
cld
pop
loop
scas
or
bound
cmp
mov
sub
nop
and
shlb
testb
add
add
jle
jg
std
fisttpl
inc
push
pop
push
mov
fildl
add
add
add
sbbb
popf
pusha
add
cltd
les
dec
fwait
loop
in
jbe
xchg
out
iret
push
clc
mov
rcrb
jns
loop
inc
lods
mov
lea
jnp
mov
push
iret
inc
sbb
and
and
pop
xchg
push
mov
mov
lret
push
dec
js
jns
push
xor
mov
add
pop
sbb
cmc
mov
xor
addl
add
out
jp
lret
mov
mov
inc
cltd
lods
fst
xor
xchg
int
shlb
in
pop
adc
xchg
cmp
hlt
les
orl
add
adc
lods
sbb
lahf
or
xor
imul
lods
mov
psubb
jle
xor
pushf
inc
mov
cmp
jno
fwait
xchg
fwait
xchg
les
jbe
ret
mov
and
mov
and
cmp
dec
cmp
cmp
ljmp
in
sbb
add
add
add
mov
pop
jl
insl
mov
test
jp
cmp
lods
cmpsl
xchg
adc
jb
sbb
push
hlt
push
add
aaa
xchg
movsb
sbb
shlb
mov
push
adcl
adc
and
scas
fst
je
xor
loop
addb
andl
push
jae
and
mov
jle,pt
dec
mov
lock
addr16
jo
jns
push
arpl
cli
lods
add
jno
cld
arpl
adc
cmpsl
rcrl
ret
jmp
cli
loop
xchg
push
add
out
push
adc
and
rcl
pop
scas
mov
pop
loope
mov
scas
mov
leave
jp
xchg
ret
lock
mov
fcoml
pop
in
pop
sub
into
test
rcrl
xchg
jno
js
cwtl
dec
test
nop
mov
add
orb
push
dec
jb,pt
add
sbb
jmp
addr16
andb
push
fldl
add
add
add
dec
lcall
movsl
repnz
enter
push
mov
jb
sub
mov
out
mov
cs
push
repnz
sbb
scas
push
ret
ds
xchg
leave
fbld
xor
sub
nop
cmpsl
push
add
loopw
dec
hlt
sbb
xchg
decb
icebp
in
sub
jmp
xchg
push
xor
ficoms
jb
mov
mov
loopne
into
stos
or
ret
hlt
and
lret
xlat
xchg
sti
push
push
mov
inc
sbb
inc
lcall
movsb
fiaddl
mov
sbb
push
cmpsl
std
adc
lock
push
add
add
inc
or
fidivl
addr16
mov
ret
lods
imul
int3
cld
clc
mov
adc
xor
jmp
xlat
aad
push
jne
loopnew
jmp
mov
jg
sahf
ret
push
and
push
mov
add
push
out
jb
shrl
and
add
add
fwait
xor
imul
aas
dec
loopne
or
cld
cli
in
push
daa
shl
push
fdivr
clc
mov
jno
cmp
fs
insl
dec
dec
clc
int3
stos
sbb
out
shl
test
push
loopne
outsl
or
test
sub
jle
mov
shlb
jmp
test
jl
xor
sub
popl
or
dec
and
leave
pop
mov
push
inc
movsb
sub
sbb
cmp
divb
dec
pop
sti
pop
and
dec
jg
insb
and
and
mov
pop
scas
filds
jle
cmp
mov
shrl
pop
cmp
sbbb
push
out
shr
push
mov
jp
popf
push
push
hlt
inc
out
sti
mov
cmpsl
sub
subb
pop
pop
xchg
lret
mov
daa
outsb
jb
mov
loop
dec
and
shll
mov
outsl
xchg
ljmp
add
jg
mov
lcall
iret
mov
stc
push
out
lods
sub
add
pop
add
add
mov
mov
xor
or
mov
push
jns
mov
pop
xor
add
or
and
or
cmpsl
mov
nop
adc
xchg
sbb
and
loop
iret
push
lds
addr16
rol
add
cs
int3
pop
es
xchg
test
pop
mov
push
adc
jg
or
adc
lock
pop
clc
es
mov
mov
inc
imul
repnz
in
inc
pushf
pop
xchg
movsl
js
rol
leave
aaa
and
mov
ret
or
xor
scas
jae
or
into
push
push
in
dec
jno
jbe
mov
int
jmp
cwtl
cmp
xchg
es
loopne
jl
cs
cmc
out
andb
or
or
data16
pusha
and
adc
inc
xchg
push
or
pop
dec
mov
aas
cltd
nop
add
mov
jns
in
mov
or
loopne
add
add
add
pusha
jecxz
jo
mov
clc
int
lock
movsb
cmp
jns
push
inc
mov
xchg
int
xor
sbb
jl,pn
lea
outsl
jne
and
add
test
dec
es
cld
out
mov
push
fsubrl
mov
cmpsb
adc
in
mov
mov
or
push
push
les
xor
sbb
mov
xor
push
push
movsl
dec
std
dec
ret
outsb
mov
int
shll
rclb
cli
cmc
dec
jle
or
xchg
fs
jmp
iret
mov
int3
push
dec
mov
and
cld
jnp
sbb
sahf
add
test
push
cltd
arpl
sahf
jl
cmpsb
test
mov
dec
dec
out
dec
jmp
loope
in
inc
mov
lock
clc
shrl
jo
mov
leave
jns
push
shrb
sti
mov
mov
loop
jl
test
movsl
out
fnstcw
inc
sbb
jp
push
add
fadd
fsubp
jnp
mov
sub
cmp
add
pop
add
add
pushf
mov
cld
loope
ss
movsb
adc
lret
in
mov
add
shlb
ret
sub
test
sarl
dec
pop
ja
or
mov
cmc
popa
fnstenv
mov
adc
fmul
test
or
cmp
xor
adc
shlb
lock
cmc
aaa
mov
sub
gs
push
lock
rclb
stos
cltd
out
jp
xchg
sbb
mov
stos
mov
jge
pop
sti
cmp
frstor
aam
stos
add
mov
pop
dec
xlat
jecxz
packsswb
jno
adc
jnp
xorl
mov
mov
mov
int
outsl
fisttpll
inc
lcall
cmp
leave
mov
scas
push
jno
jge
add
into
std
loopne
xlat
push
pop
and
rorb
stos
xor
and
or
lock
push
insl
pushf
aas
scas
pop
test
out
mov
push
cmp
sub
cld
cli
jle
fmuls
jge
mov
inc
loop
add
add
add
pop
dec
icebp
fsub
add
xor
les
cli
mov
cmp
push
adc
sub
dec
ret
jno
cltd
pop
loopne
push
subl
pop
push
mov
and
or
iret
inc
notl
push
pop
push
cwtl
jnp
add
test
lods
mov
es
aam
loop
out
test
je
push
push
or
push
js
push
test
push
mov
xchg
popf
jecxz
std
xlat
xor
dec
sub
push
test
loop
dec
out
sub
mov
pop
mov
jl
mov
lcall
mov
mov
sbb
fidivs
push
aad
fisttpll
adc
test
and
xchg
imul
aas
and
mov
arpl
shlb
jmp
insb
dec
and
cmp
les
lea
pop
jbe
ja
sti
ret
or
pop
cwtl
stos
call
add
add
add
jl
fs
mov
cmp
insl
jno
adc
imull
stos
psllq
das
sbb
fsubs
mov
shlb
pop
ljmp
les
add
pop
imul
jl
lods
or
jae
jle
popa
loopne
test
xchg
add
xchg
and
add
mov
notb
ja
jae
cs
cli
lock
addl
add
xor
fs
xchg
sub
out
lea
inc
jge
js
dec
inc
mov
cmpl
and
inc
sub
cmc
push
xlat
mov
sbb
or
adc
in
leave
cmp
popf
stos
or
clc
jle
outsb
xchg
pop
jle
mov
mov
call
loop
divl
mov
add
into
arpl
cmp
sub
add
pop
add
add
mov
add
fisttps
xor
out
pusha
mov
xchg
insb
pop
gs
sub
pop
into
or
and
or
mov
jmp
int
out
in
push
xchg
jno
popf
xor
bound
outsb
mov
mov
adc
pop
xor
mov
shl
cmp
sub
jb
in
pop
dec
andl
out
mov
dec
mov
loop
jo
roll
cmc
xor
jl
lods
xchg
jle
sti
lahf
xchg
sbb
xchg
insl
shr
sar
or
test
mov
jg
sti
inc
das
xchg
cwtl
adc
mov
stos
imul
push
jno
push
cmpsb
pop
sbbl
sbb
lcall
xor
push
xlat
pop
jmp
jg
mov
push
jg
cmc
inc
fsubr
mov
xchg
dec
mov
shlb
inc
and
ljmp
cmpb
in
xchg
add
ja
incl
add
inc
push
in
add
add
add
scas
ret
or
fcoms
add
data16
lods
mov
sbb
in
shlb
jo
aas
das
add
shll
scas
in
addr16
arpl
cli
fsubl
mov
lods
ja
mov
mov
sbbl
popf
add
outsl
pusha
arpl
ret
ds
push
pushf
or
out
sub
sbb
mov
xchg
fisubs
and
rcr
imul
ljmp
out
xor
and
out
cld
mov
movb
pop
in
cli
call
cmc
add
pop
pop
popa
loopne
fwait
les
sub
iret
jb
repz
adc
sub
clc
aad
test
cmp
cli
mov
pushf
mov
ss
jnp
push
rorb
clc
hlt
mov
push
mov
cmc
movsb
jge
int
test
xchg
and
pop
mov
inc
sbb
add
add
lock
jg
mov
push
push
pop
out
add
add
add
stc
or
idivb
ds
sub
pop
daa
xchg
xorl
fcmove
push
inc
pop
std
fnstenv
jecxz
inc
test
pusha
ret
dec
sub
stos
dec
sub
cwtl
mov
mov
fsubrl
test
cwtl
push
leave
cwtl
sbbl
fstpl
xchg
je
push
pop
jo
out
out
sti
jl
jns
out
pop
or
cmp
xchg
adc
xchg
mov
or
mov
and
pop
jge
aaa
insl
dec
add
push
ljmp
insb
xchg
sbb
std
lods
test
arpl
jmp
cmp
jecxz
cld
mov
aad
sti
or
pop
cmc
sbb
divl
sub
jo
lods
xor
push
aam
jb
cmp
fnstenv
push
daa
dec
adcb
jmp
jne
pop
int3
aas
pop
outsl
fs
add
sub
or
aad
psrlq
rolb
sti
sti
add
pop
xlat
fldt
push
imul
add
xchg
and
mov
or
lea
cmp
test
inc
gs
adc
mov
out
xor
lret
xchg
in
pop
bound
and
fbld
mov
shlb
push
pushf
xchg
jae
js
out
movsl
andb
jp
pop
aam
cwtl
out
and
testb
sbb
insb
push
xor
jne
push
sbb
leave
into
stos
icebp
mov
lock
pop
popa
add
pop
dec
or
push
enter
jg
adc
fimuls
and
pop
out
xchg
aas
xor
aam
stos
and
leave
mov
cmp
push
movsl
jp
push
jb
daa
stc
sbb
add
out
jbe
push
je
pop
aas
out
ljmp
jle
mov
in
mov
test
inc
and
pop
imul
stos
fdivrs
or
cltd
jg
clc
pop
mov
pop
xorb
or
xchg
aaa
pop
add
mov
dec
js
stc
mov
mov
sub
add
pop
add
add
sub
push
sub
pop
jmp
std
pop
lahf
les
jecxz,pt
sub
out
xor
inc
repz
int3
cmpsl
xor
daa
jnp
jae
adc
xchg
mov
testl
in
xor
ret
xor
outsl
lds
imul
push
in
in
shrb
fbld
mov
cmp
dec
outsl
cmp
outsl
mov
fnsave
sbb
scas
adc
pushf
mov
pusha
jl
out
inc
lods
inc
les
hlt
out
pop
pushf
mov
mov
or
and
loop
fucomp
bound
add
inc
mov
inc
loop
daa
push
sub
pop
jl
add
shlb
jbe
sub
shll
jb
push
pop
push
sbb
adc
jns
pop
push
jb
cmp
xor
cmp
xor
xlat
add
insl
repz
jae
jg
dec
xor
add
add
add
clc
popa
repnz
repz
sbb
cltd
inc
movsb
out
push
psraw
lahf
aad
popf
sub
dec
out
test
lds
or
xor
adc
outsl
out
and
pop
push
repz
sahf
das
mov
mov
pop
stos
pop
movsb
mov
popa
and
lret
cltd
fisttps
and
cli
xchg
mov
notb
mov
subb
lods
mov
dec
dec
xor
mov
mov
out
pusha
adc
insl
sub
loope
dec
insl
push
pop
fnsave
test
nop
xor
addr16
rcrb
out
gs
sub
mov
add
into
scas
loop
fwait
test
sub
xor
adc
nop
and
mov
ljmp
imul
lret
ret
sbb
dec
inc
enter
fisubrs
sbb
cmp
jnp
es
loope
ljmp
push
pushf
test
xchg
pop
fyl2x
lea
inc
cmp
loop
adc
adc
enter
sbbl
cltd
add
inc
into
mov
je
cli
cwtl
mov
pop
and
ljmp
outsb
jmp
insl
in
ror
push
push
cwtl
gs
das
fsubrl
scas
xchg
sbb
pusha
xor
fisubl
pop
outsl
pop
adc
mov
popf
add
les
pop
loope
fisubl
fsub
fcmovbe
mov
stos
cmp
push
xchg
xchg
notl
xor
ss
sbb
mov
sbb
fidivl
lret
loope
push
insl
movsl
repz
xor
sub
out
dec
adc
xchg
pop
xor
mov
out
add
in
sbb
xchg
rol
ror
pop
ret
lock
stos
cli
sub
push
jns
test
mov
data16
push
mov
push
out
lods
xor
aas
xlat
jns
mov
inc
sub
add
add
add
loope
lret
inc
cwtl
sub
gs
xor
outsb
jae
and
das
in
add
adc
in
das
mov
cs
ficoml
fnstenv
and
mov
pop
or
lock
mov
lods
xchg
xlat
fisubl
cwtl
sbb
je
jne
mov
movsb
jns
sub
outsb
and
lret
inc
popf
push
mov
loope
lahf
lea
cltd
dec
inc
jae
and
mov
loopne
adc
ret
ds
push
cld
sub
adc
sbb
adc
cs
mov
jecxz
in
pop
movsb
jns
loope
cmpsl
jns
mov
mov
fsubrp
cmp
sbb
sub
jae
xlat
adc
mov
push
dec
inc
or
shrl
mov
je
inc
scas
mov
hlt
clc
pushf
cltd
adc
mov
mov
cmp
mov
sub
decl
add
jb
scas
incb
out
dec
out
xor
out
mov
pop
add
add
scas
dec
repz
xchg
pop
test
lock
jle
and
jl
cltd
xor
fs
dec
arpl
out
lods
testb
test
mov
sbb
jmp
xorb
jne
jae
ror
sbb
push
rorl
sahf
jp
outsl
push
mov
mov
fdiv
lea
mov
mov
cmp
daa
das
outsb
gs
aam
adc
xor
and
xchg
and
jne
arpl
mov
ret
jns
fldt
in
push
pop
iret
cwtl
cmc
mov
mov
or
jb
aas
dec
jnp
dec
mull
scas
mov
xlat
outsb
push
sahf
pop
ror
mov
ss
cmp
or
leave
add
rclb
test
fwait
lods
shll
inc
sbb
mov
std
xchg
push
ss
pop
push
mov
sbb
mov
inc
xorl
push
bound
mov
xlat
mov
push
jle
mov
add
pop
add
add
pop
sbb
fs
pop
mov
out
rorb
jo
mov
fists
mov
in
mov
xchg
outsl
cmpsb
mov
cmp
lock
jge
jne
fistpll
jl
aam
test
mov
les
or
lea
push
cld
adc
or
inc
xchg
mov
adc
xchg
inc
clc
pop
push
nop
xchg
inc
lcall
aaa
sbbl
inc
dec
inc
jns
push
lret
adc
sub
fcompl
xchg
sbb
rorl
add
push
lret
fcomps
sbbl
hlt
mov
repz
mov
test
push
int3
or
imul
out
xor
jg
addb
lds
push
ret
xchg
cltd
insl
or
mov
pop
lea
add
add
mov
aas
mov
mov
test
pop
add
add
push
arpl
inc
inc
jne
data16
data16
sub
popa
mov
or
lret
xchg
sbb
clc
adc
cmp
sub
and
cmp
jne
lods
mov
andb
in
mov
jo
orl
push
mov
xor
pop
and
cmp
jbe
in
and
inc
sub
mov
insb
out
gs
es
or
push
jmp
addr16
cmpsl
enter
insl
movsb
inc
sbb
sbb
insb
mov
fcoml
jns
xchg
roll
int
inc
jne
loopne
arpl
loopne
ret
xchg
outsl
jge
jmp
ja
add
test
xchg
xchg
dec
addr16
cltd
mov
das
pop
into
adc
lret
cmpsb
arpl
add
push
ja
cmp
jo
lret
sub
push
ljmp
or
dec
pop
add
sti
sbb
addr16
xor
aas
mov
pop
daa
push
aam
xchg
add
mov
sti
mov
add
movsl
pushf
out
add
pop
add
add
outsb
push
jnp
inc
or
sbb
sbb
pop
fdivr
test
fnstenv
dec
gs
xchg
js
fcomps
roll
add
aaa
data16
jo
fildll
out
ja
jl
inc
gs
dec
lahf
addr16
sub
fstpt
in
fcmovu
push
movsb
shlb
fisubs
sbb
cld
inc
mov
into
rorb
nop
call
popa
push
mov
add
add
sbb
outsl
cmpsl
dec
insb
adc
dec
mov
iret
mov
aas
push
dec
xchg
sbb
push
or
mov
adc
shl
stos
insl
adc
hlt
and
sub
or
shll
test
sbb
inc
arpl
fcmovb
jo
dec
fisubl
inc
cltd
leave
mov
icebp
loopne
dec
loope
cmp
movsb
lods
inc
or
clc
cli
inc
mov
cltd
enter
out
xchg
cmpb
cltd
jmp
and
fldcw
add
into
adc
neg
jge
mov
stc
fists
dec
outsl
mov
add
add
sbb
xchg
shl
dec
push
adc
es
stc
imul
das
cmp
xchg
and
dec
out
addl
sbb
pop
js
xchg
mov
push
push
ss
and
aaa
sub
mov
vmovups
cmpl
mov
insb
push
mov
cltd
jae
in
js
push
sub
fstps
dec
and
and
sarb
jno
fsubl
push
mov
out
adc
pushf
push
pop
sbb
adc
js
xchg
xor
lcall
pop
cmp
fld
rcrb
push
outsl
dec
movsl
icebp
mov
mov
push
stc
daa
imul
sbb
mov
lock
inc
xchg
jmp
xor
inc
pop
or
sti
dec
fdivrl
inc
pop
ljmp
inc
lret
dec
adcb
mov
outsl
aas
pop
jns
pop
add
lds
orl
pop
cmp
outsl
jg
jg
xor
cmc
sbb
add
add
add
sbb
les
mov
into
cmpsl
imul
push
adc
lods
fnsave
divl
shll
in
lods
sub
call
fwait
mov
jecxz
push
xorl
or
scas
xor
push
stos
xor
fdivrp
imul
mov
xor
adc
lea
cmpb
rolb
jge
or
mov
jge
pushf
pusha
inc
and
and
and
stos
test
and
inc
shl
mov
adc
mov
xchg
pop
bound
gs
jl
mov
cmc
xor
pop
add
cmp
cmp
xchg
dec
popa
jmp
scas
out
pop
xor
cwtl
test
push
stos
adc
mov
shrb
aas
stos
and
ret
test
mov
movsl
pop
cmpsb
fldl
mov
popf
mov
add
mov
mov
ds
adc
push
int
ret
ja
and
aaa
divl
cmp
add
add
add
ja
mov
jne
push
jo
movaps
ja
shlb
out
rcr
push
add
stos
sbbl
dec
jae
add
pop
popa
ljmp
fdivs
cltd
cs
mov
mov
std
sbb
or
jg
lods
sbb
cltd
scas
cltd
std
fucomip
in
mov
movsb
sbb
shlb
lret
sbb
insl
mov
push
test
mov
cmpsb
pop
test
xor
push
out
decb
ret
rcl
push
inc
movl
adc
xor
push
call
fldt
in
sub
jle
dec
mull
cld
inc
imul
in
in
mov
lret
sub
inc
dec
repz
ret
lods
pop
mov
mov
jp
dec
jne
mov
xchg
lods
jl
in
cmpl
lock
imul
sub
and
scas
mov
shll
add
mov
cmc
mov
pop
lods
push
xor
pop
add
add
mov
call
inc
and
clc
push
cltd
fisttps
dec
lahf
hlt
ss
out
fcmovnu
xor
leave
lods
sub
adc
in
les
mov
into
in
pop
addr16
inc
jo
mov
stos
jns
mov
mov
fistl
cli
in
popf
pop
rclb
repz
test
popa
jbe
sbb
aad
addl
sub
lea
cmpb
xchg
int3
pop
xor
sbb
mov
leave
mov
xchg
cmpl
sub
test
hlt
pusha
mov
pop
jmp
sahf
movsb
push
jno
mov
subl
push
xor
out
add
ja
cmp
push
lcall
dec
add
push
lahf
cs
and
sbb
push
je
cli
lahf
leave
sub
insl
gs
add
sub
push
cmpsl
insl
hlt
adc
movsl
loope
loopne
pusha
inc
cmc
add
jne
add
dec
ret
add
pop
add
add
xor
mov
dec
mov
xchg
pop
shll
mov
adc
mov
les
stos
xor
sub
and
or
cmp
push
daa
pop
clc
mov
out
repnz
and
call
aaa
add
mov
and
sahf
outsl
lcall
out
mov
jg
mov
rcll
sbbb
cmp
ss
sub
test
aad
pop
fists
inc
aas
fadds
hlt
lea
in
ljmp
inc
loopne
pop
stos
lret
mov
lcall
xchg
pusha
sahf
sub
xchg
push
add
test
inc
sahf
imul
scas
movsl
insb
rcr
call
mov
movsl
sbb
push
jl
leave
jno
sbb
jo
dec
aad
lahf
sarb
ljmp
adc
mov
repnz
push
les
mov
sub
call
lcall
jg
sub
scas
fdivr
fnstcw
mov
and
js
cmc
add
pop
add
add
or
mov
xorb
cmc
mov
cmp
and
std
scas
mov
shr
mov
inc
pop
sahf
mov
adc
shll
lcall
pop
push
mov
rol
and
loope
jns
cmp
sbb
mov
imulb
clc
mov
xor
lcall
pop
cmp
xchg
adc
pop
and
and
mov
stos
xor
cmpsl
pop
stos
xor
xchg
sbb
jl
sbb
add
sub
outsl
sti
cmc
test
xor
and
mov
sbb
rorb
add
cli
sti
sub
push
inc
bound
pop
js
mov
gs
jle
out
sbb
push
and
sbb
mov
inc
mov
arpl
popa
es
jp
ret
sbb
jecxz
stos
add
add
xor
sub
pop
das
int
add
pop
add
add
inc
sub
stos
pop
pop
mov
dec
inc
arpl
inc
sbb
or
dec
fwait
cmpsl
out
leave
cmpsb
inc
cmpsl
push
lahf
out
shll
jne
ljmp
xchg
sbb
adc
jp
sbb
push
inc
std
push
mov
mov
cmp
adc
add
cld
fldcw
xor
dec
lods
dec
insl
cwtl
mov
cmp
and
js
mov
push
shr
sbb
and
sets
cli
outsb
dec
iret
rcrl
push
add
xor
les
mov
mov
dec
pop
push
iret
stos
dec
fs
mov
dec
loope
inc
orb
les
and
std
jb
add
lret
xor
fstpt
pusha
inc
cmp
mov
mov
lods
sti
cmc
cmp
clc
mov
clc
adc
loope
add
mov
jae
popa
jl
push
pop
sbb
xchg
push
subl
add
add
ds
in
idivl
call
sbb
mov
aam
add
pop
add
add
push
dec
sbbb
push
mov
test
mov
cld
sahf
or
cwtl
sbb
pop
aaa
jecxz
rclb
mov
divl
mov
jbe
dec
fcomp
jb
rcll
orb
and
xchg
mov
jae
fmulp
and
and
rcl
cs
pop
inc
sbb
imul
push
insb
lahf
in
jnp
sub
or
aas
mov
xor
and
aaa
sub
shrl
xchg
and
or
scas
xor
data16
mov
or
push
inc
in
mov
cmpsl
pop
jecxz
mov
arpl
pop
add
xlat
cmp
dec
push
push
pop
leave
dec
adc
imul
stc
push
inc
daa
movsl
out
mov
ljmp
or
in
mov
loope
xchg
jmp
xchg
or
js
iret
ja
mov
sti
mov
dec
and
push
cmpsb
mov
add
jecxz
inc
cli
aas
clc
fdiv
jne
dec
xor
clc
add
pop
add
add
cmc
stc
outsl
arpl
jnp
dec
xor
push
fimull
jb
clc
jle
fldenv
mov
mov
gs
fldlg2
xchg
insb
ds
mov
int
lcall
add
sub
xchg
imul
in
test
mov
mov
xlat
mov
rorl
lahf
push
test
insl
ljmp
fs
lcall
out
sbbl
lea
xor
push
or
iret
push
movsb
jnp
rcll
pop
xchg
jecxz
jge
inc
dec
jne
and
scas
sub
into
dec
push
sbb
xchg
sahf
loopne
imul
xor
pop
mov
inc
icebp
fsubl
and
jo
cmp
fcomp
test
mov
inc
loopne
or
fcoml
outsb
loopne
mov
movsl
push
enter
scas
mov
int3
dec
mov
adc
aam
xlat
roll
xchg
xchg
jl
test
imul
mov
jg
sbbl
add
mov
lcall
dec
add
add
add
inc
sar
cs
xchg
scas
push
sub
or
inc
inc
push
fs
xorb
loop
push
scas
sbb
nop
dec
push
push
movsl
adc
jnp
cmc
lcall
or
sbb
in
or
repz
ss
insb
stc
add
jbe
insb
adc
dec
out
cmc
xchg
mov
loopne
scas
mov
mov
std
sbb
sbb
xor
sub
add
lahf
test
pop
aas
dec
ret
das
test
pop
jecxz
mov
mov
outsl
mov
lret
sbb
lret
ss
xor
or
inc
jo
mov
mov
lahf
or
xchg
ret
ss
stc
and
icebp
push
rcrb
xchg
or
xchg
push
sub
test
sub
or
mov
das
push
std
shlb
repz
movsb
insl
lcall
xor
pop
icebp
jns
xor
and
add
jae
cltd
dec
mov
jge
lock
add
pop
add
add
jbe
std
cwtl
inc
rcrl
es
dec
sbb
shrb
aam
and
je
fdivl
out
scas
mov
cmp
rol
jbe
jl
test
lods
rorl
filds
fstps
shll
insl
iret
mov
dec
scas
aam
push
mov
mov
jecxz
jne
stc
imul
push
loope
pop
popa
and
sub
psrlw
idivb
xchg
push
push
xchg
mov
sbb
xor
pop
pop
rol
sbb
je
jmp
enter
ds
scas
lods
push
aaa
push
jb
adc
insl
cmp
push
daa
and
mov
pop
mov
add
dec
or
add
xchg
sub
pop
setae
mov
inc
pop
pop
out
jno
cli
test
rcr
pushf
push
popa
out
cmp
cmp
or
push
aas
fwait
jae
xlat
es
add
push
into
nop
out
cwtl
jle
pop
or
dec
insb
jnp
sti
add
pop
add
add
addr16
mov
cwtl
mov
add
jle
pop
repz
scas
rorb
xor
cmp
xor
push
xchg
pop
cltd
mov
push
pop
sub
es
adc
popa
push
push
aaa
repz
xchg
pop
pop
add
cmp
add
dec
mov
push
adc
xchg
sub
aas
incl
and
mov
jne
sbbl
and
mov
idivb
call
test
cmpsb
cltd
xchg
mov
xchg
or
push
pop
js
fidivrs
sarl
leave
cmp
push
pushf
lods
ja
scas
insl
ret
aas
pop
popa
push
cmpsb
add
je
les
inc
inc
and
mov
jne
imul
push
jo
adc
pop
push
sti
pop
in
out
or
mov
pop
ret
add
dec
mov
mov
call
dec
add
test
jg
in
jmp
cmp
mov
pop
add
add
jo
test
dec
or
lahf
movntq
or
test
daa
inc
outsb
repz
jno
pop
adc
aaa
and
test
jo
cmp
aad
add
mov
pop
sbbb
imul
loope
int3
mov
ret
insb
add
pusha
fwait
mov
mov
jnp
pop
ljmp
xor
out
stc
push
dec
mov
imul
mov
and
inc
in
inc
cs
cmc
cmp
mov
xlat
fdivs
dec
or
jge
cs
or
and
push
bound
andb
movsl
jae
dec
inc
mov
fwait
mov
push
ret
ja
and
jmp
test
mov
mov
xchg
jle
xchg
out
insb
jo
adc
clc
outsl
imul
insb
inc
cmp
mov
push
fcompl
outsb
add
movsb
push
in
cmc
jne
rorl
inc
std
add
pop
add
add
jge
nop
stos
loope
das
mov
test
sti
lret
jle
fbld
roll
icebp
push
push
push
mov
mov
cmp
shr
cmp
mov
pop
cwtl
jecxz
or
jle
pusha
sbb
test
push
sarl
jecxz
add
lret
push
stc
mov
fmuls
sub
mov
xor
daa
push
xchg
fldt
jbe
xchg
leave
into
xchg
orb
lea
push
xchg
pop
popa
repz
push
daa
rclb
cld
ficompl
push
mov
jl
mov
mov
mov
xlat
push
push
push
push
xchg
xor
add
push
mov
cld
jbe
xchg
pop
lcall
dec
xor
scas
jmp
shl
shrb
imul
jns
insl
sub
rclb
out
mov
fsubr
add
lods
mov
leave
xor
xor
or
push
jl
dec
xchg
inc
test
push
dec
jecxz
ljmp
sbb
shlb
aas
out
sbb
adcl
add
add
add
sbb
stos
mov
fwait
and
lret
inc
inc
js
sbb
or
test
ja
mov
push
pop
jno
outsl
repnz
bound
pop
mov
into
nop
xchg
int
shlb
inc
dec
rcrb
cmp
out
mov
dec
mov
jno
xor
cmpb
mov
shlb
pop
mov
inc
mov
test
sahf
push
movsl
sub
mov
mov
enter
mov
jns
sbb
cmp
in
popf
push
or
cmc
xor
dec
movsb
xchg
mov
into
add
mov
call
jmp
inc
add
repnz
push
jno
mov
aaa
dec
pop
adc
and
adc
into
mov
repnz
cmp
outsb
negb
movb
loope
mov
adc
gs
sarl
in
adc
pop
ret
fsubrs
and
add
mov
lcall
and
or
add
pop
add
add
xor
pop
dec
gs
dec
sahf
pop
test
pusha
mov
pop
or
xor
xlat
and
cmp
shll
pop
mov
add
into
imul
test
shll
stos
push
shrl
lret
push
fs
sti
add
lret
sbb
pop
stc
adc
mov
add
mov
and
nop
pop
mov
add
jbe
sarl
inc
imul
jg
jae
cmpsl
pushf
arpl
sti
fsubp
aad
adc
jl
jg
inc
sti
aad
sub
mov
or
jle
xchg
push
xchg
jno
and
outsl
pushf
icebp
lea
stos
sub
inc
fs
sub
push
push
mov
repz
insl
xchg
push
xor
out
lahf
faddl
lods
pop
jo
ljmp
dec
rol
lret
clc
int3
jae
adc
mov
add
pop
add
add
adc
repz
aaa
adc
cltd
jge
sub
inc
xor
mov
sub
add
sub
mov
mov
adc
leave
or
in
sub
and
mov
in
int3
dec
sbb
pop
aam
push
sahf
rorl
push
andb
gs
fcomip
les
aas
aam
push
das
lds
int
daa
out
inc
mov
dec
enter
mov
loopne
cmpsl
icebp
cmp
rcl
sub
scas
pop
popa
inc
jl
pop
leave
fmul
sahf
cmpsb
xchg
push
pusha
movsb
sub
adcb
js
adc
xor
addl
mov
jecxz
pop
push
pop
add
mov
xor
sbb
sbb
orl
testl
fld1
pop
add
xor
cli
mov
adc
call
and
mov
lret
mov
push
fistps
add
std
aaa
mov
mov
jae
insb
jmp
enter
xchg
cmc
shlb
mov
lods
push
xor
mov
push
xchg
rorb
repz
aaa
outsb
ljmp
add
cmp
sub
mov
pusha
out
mov
cmp
cmp
cmpsb
sub
gs
ss
popa
xchg
test
subl
mov
das
xorl
xchg
stc
shl
test
mov
and
test
mov
adc
rcrb
shl
out
adc
scas
loopne
jns
sbb
fbld
mov
aaa
mov
out
incl
xor
jae
test
push
cwtl
mov
ljmp
add
aad
arpl
je
add
in
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
xor
inc
add
xor
inc
add
xor
inc
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
in
cmp
inc
mov
sbbb
jge
add
add
pop
jno
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
