push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
lods
cmp
jle
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
add
out
mov
scas
jae
pop
mov
loopne
lret
xchg
mov
sub
ds
lods
das
cmp
fs
jnp
andb
sbb
in
aam
aad
rcrb
and
mov
dec
push
push
and
or
data16
fwait
pop
arpl
sbb
mov
in
mov
push
lret
sub
adc
cmp
shlb
in
jl
ljmp
aam
and
pop
push
jge
cltd
jne
cmp
sbb
into
mov
mov
adc
outsl
pop
xor
test
mov
adc
jge
and
and
push
xor
roll
shll
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
fldenv
jle
jg
jle
dec
and
lcall
es
cvtps2pi
mov
pushf
fdivrl
xor
pop
pop
aam
or
mov
pop
or
ret
aaa
fisttpll
rcr
push
out
adc
les
sbb
inc
adc
mov
cmp
sbb
scas
adc
outsl
out
jne
inc
xchg
mov
pop
sub
mov
ret
xchg
movsl
fcmovb
ret
mov
loope
xor
test
or
insb
mov
or
lret
gs
call
cmp
or
pop
add
push
xor
es
mov
jmp
xchg
icebp
pop
mov
int
ss
call
shrl
into
jno
cwtl
and
cmc
jmp
add
into
push
movsb
sahf
out
mov
mov
mov
sub
mull
add
push
fmull
cmc
cwtl
xchg
xor
and
sbb
das
mov
fcoml
inc
int3
cmpsl
lahf
ficompl
rcrb
push
adc
pop
pop
add
fmuls
mov
fsubrp
pop
fistps
call
out
ret
adc
xor
mov
cmpsl
pop
push
lods
scas
loope
xchg
test
fisubrl
decl
daa
fsub
sub
icebp
sbb
add
and
lods
insl
push
lret
movsl
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
sub
jge
jle
jg
jle
aad
xchg
int
sub
enter
mov
sbb
xchg
fwait
sarl
dec
jecxz
faddl
sbb
push
mov
xor
pop
push
pop
out
data16
ret
pop
and
loopne
pop
mov
sahf
das
mov
sub
jecxz
adc
insl
mov
pop
loope
mov
in
insb
mov
sbb
sbb
push
mov
cltd
aam
nop
mov
pop
push
xchg
adc
ja
dec
imul
clc
mov
out
call
mov
pop
cmpb
and
dec
cmc
loop
push
xchg
push
and
jae
jo
push
movl
sbb
push
mov
jmp
jbe
cmp
mov
in
aaa
cltd
or
and
in
inc
rcrb
cli
daa
push
jg
push
stos
jecxz
jg
or
pop
dec
imul
mov
mov
pop
cs
loopne
das
jge
lahf
fwait
pop
mov
cltd
push
xchg
pop
out
daa
pop
jne
sub
dec
xchg
fwait
dec
es
mov
jmp
push
or
sub
lahf
movsl
xchg
jae
jb
jno
jp
cmpsl
enter
enter
repz
incb
leave
xlat
notl
lahf
sti
mov
mov
xor
fdivl
pop
xchg
xchg
cmp
test
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
inc
push
cmpb
cli
jg
jle
mov
lahf
cwtl
cmp
mov
sbbl
or
es
mov
adc
pop
mov
movsb
jle
cli
jo
sti
mov
and
dec
daa
push
std
je
push
and
cmp
scas
repnz
mov
lock
add
and
pop
or
ljmp
cli
push
dec
sbb
fists
aaa
pop
jge
mov
fists
sbb
mov
and
test
stc
call
xchg
outsl
mov
out
push
xor
xchg
cmp
cmpsb
pop
sub
in
das
out
rolb
pushf
cmp
sub
mov
or
mov
cwtl
mov
pop
jns
clc
in
and
add
loopne
cmp
xchg
mov
enter
out
mov
pop
pop
stc
dec
jns
mov
je
stc
sar
test
mov
pop
mov
sbb
in
mov
and
dec
pop
push
test
jne
fnstenv
les
push
jle
or
jne
xchg
je
push
jecxz
mov
xchg
jecxz
push
ret
add
in
pop
aaa
aam
into
add
push
mov
and
jb
mov
cmp
stc
sbb
inc
adc
xchg
mov
ds
push
out
jecxz
psubq
sarb
jmp
test
punpckldq
adc
adc
fwait
lods
out
sub
inc
and
add
add
jmp
push
dec
imul
addr16
js
jle
jg
jle
ja
mov
or
pop
ja
mov
cmp
add
movsb
push
mov
in
rcrb
mov
loope
divb
inc
mov
push
pop
ror
daa
xor
add
add
cltd
test
mov
or
in
add
daa
jmp
gs
popa
pushf
or
and
xchg
sbb
pusha
xor
mov
fwait
pop
mov
xchg
pop
jns
negl
out
cmp
out
pop
mov
ret
or
cwtl
mov
pop
mov
inc
push
pop
cwtl
push
idivl
xor
iret
mov
ljmp
lret
andb
sbb
adc
jae
daa
mov
and
das
ret
fs
inc
inc
inc
lock
xchg
xchg
ja
int
jo
inc
ss
add
sub
cmp
jle
cs
xchg
sub
fwait
or
jmp
add
lret
cltd
enter
jo
fstl
push
mov
scas
outsb
add
fnstsw
fsubl
mov
data16
adc
mov
xorb
insl
movsl
ja
sbb
or
sub
fs
ds
push
addr16
sub
aas
sbb
pop
lret
js
enter
and
xor
hlt
mov
sub
or
pop
sbb
fsts
rclb
int
lock
aad
xor
inc
add
inc
xchg
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
repz
movsl
mov
jns
jle
jg
jle
sbb
pop
inc
iret
sub
loop
inc
pop
jl
mov
popf
ja
nop
push
jmp
out
pop
shlb
ljmp
aam
lock
movsb
dec
dec
sarb
aam
and
clc
mov
or
or
subb
popa
push
mov
lret
mov
mov
decb
adc
mov
jb
sub
ja
pop
in
mov
fwait
testl
rcrl
in
dec
test
lcall
push
jp
incb
lds
mov
push
ret
xor
xor
lods
lods
add
add
cmp
mov
sarb
mov
pop
adc
out
inc
and
in
push
scas
push
sbb
sti
inc
adc
scas
ret
ret
mov
shlb
xor
aaa
repz
stos
sbb
incb
out
mov
push
addr16
stc
push
and
repnz
inc
push
sahf
jns
push
arpl
jge
repz
in
adc
gs
mov
xchg
pop
pop
mov
jbe
lods
add
jnp
add
hlt
xchg
pusha
ja
rorl
inc
rolb
lret
mov
daa
imul
loop
adc
inc
cmpl
jo
orl
or
mov
pop
stc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
or
cli
jg
jle
and
pop
cmpsb
dec
repz
aam
push
adc
push
jns
out
sbb
jnp
dec
mov
xchg
cmpsb
sbb
jbe
push
mov
mov
push
jmp
xchg
in
loop
add
lods
insl
pop
lcall
inc
pop
movsl
rcl
subl
adc
jl
add
enter
jo
lods
ljmp
jmp
and
or
push
lcall
add
cmp
pop
dec
fwait
mov
sub
pop
loope
pop
jmp
push
dec
jle
adc
mov
jg
inc
dec
add
bound
xchg
in
enter
add
dec
addl
repz
dec
stos
popa
jo
xchg
sahf
cmpsb
mov
lret
pop
test
sahf
mov
mov
or
repnz
xor
mov
sbb
loope
pop
mov
and
xchg
push
jge
xchg
adcb
ds
in
mov
inc
bound
push
adc
bound
loope
movsb
addl
xchg
aam
jl
in
mov
mov
js
or
fisttps
pop
rcl
pop
sbb
cli
dec
bound
lahf
mov
add
mov
aad
out
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
jb
pop
mov
test
cld
shll
pop
or
hlt
pop
nop
jle
or
adc
cmp
or
fists
rcrl
jp
out
push
sbb
das
pop
stc
sub
sbb
jmp
pop
nop
lahf
xchg
cmp
pop
pop
jb
push
and
push
push
in
xchg
sub
mov
or
rclb
das
push
adc
inc
loopne
pop
push
xchg
stos
in
sarb
add
fldcw
mov
push
ret
subl
fldl2t
xor
rcll
les
dec
loopne
repz
jne
test
aam
mov
aad
pop
xor
pushf
leave
push
xchg
pop
adc
mov
dec
cld
push
mov
movsb
pop
loopne
cltd
and
lods
inc
shlb
dec
and
test
lret
fsubrs
sarl
cmpsl
xlat
or
scas
push
sbb
movsl
lods
roll
xchg
cmp
imul
pop
mov
and
fiaddl
jno
jl
sub
popf
pop
push
pop
push
pop
xor
cld
dec
ja
dec
push
cli
fs
lahf
and
or
test
xchg
mov
mov
or
out
mov
mov
popa
or
pop
xchg
faddl
adc
and
bnd
pop
scas
jp
xor
out
cltd
adc
adc
stos
shrl
incb
add
jmp
cmc
dec
and
jno
push
mov
push
lds
push
add
cli
jg
jle
mov
mov
into
out
xchg
cmp
enter
test
jl
pushf
popf
repz
jns
jb
stos
jbe
test
add
or
call
shll
mov
test
xchg
pslld
cmp
lret
xor
sbb
int3
xor
pusha
hlt
popa
repnz
xor
push
mov
xchg
or
mov
loop
xlat
mov
cmp
mov
fidivrs
stos
out
dec
dec
push
in
cmp
cmpsl
jp
adc
in
sub
enter
test
aas
sub
cs
lret
lahf
in
ret
fwait
and
cmp
xor
daa
xor
cmp
cltd
scas
and
in
mulb
into
lods
mov
xchg
cmp
pop
int
stos
xor
and
mov
imul
dec
push
inc
sbb
mov
sub
mov
js
jno
lahf
mov
pop
movaps
mov
sbb
mov
jo
add
push
out
test
adc
pop
js
fcompl
lods
jb
or
imul
pop
movsl
sbb
cmpsl
mov
xor
sbbb
fdivrs
mov
or
or
gs
add
xor
xor
pop
cld
add
cmp
or
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
shrl
xchg
cmp
add
cli
jg
jle
mov
pushf
adc
nop
xchg
out
data16
dec
sub
xchg
pop
xchg
push
dec
dec
mov
enter
jbe
jmp
femms
sub
adcb
pop
packsswb
ret
pop
cld
mov
xor
adc
out
int3
cmpsl
lcall
mov
hlt
popa
inc
nop
icebp
arpl
fs
dec
mov
jl
mov
adc
pop
dec
testb
aad
fbstp
mov
xchg
pop
sti
mov
and
cli
int
cmp
lods
faddl
mov
sub
dec
in
xor
jbe
cwtl
scas
inc
movsb
sub
std
int
shlb
stos
sub
fucomi
les
cmp
out
ss
lret
and
loope
jecxz
cmpl
mov
js
and
sbbl
dec
cmpxchg
inc
jae
loop
xchg
xor
je
sahf
mov
shlb
lret
pop
in
mov
push
cs
les
cld
movsl
mov
leave
cli
xor
pop
sbb
dec
or
loop
aaa
push
mov
out
add
inc
push
jmpw
fcmovb
test
jb
call
std
dec
inc
push
out
mov
dec
mov
mov
popf
sbb
rcrl
mov
lret
pusha
js
mov
sub
idivb
repz
mov
pop
xchg
pop
inc
es
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
sbb
lock
add
cli
jg
jle
icebp
arpl
rcrl
sub
int3
mov
cltd
sub
int3
push
pop
outsl
fwait
cltd
in
push
scas
sbb
roll
pop
jecxz
popf
dec
ret
inc
es
lret
loope
xacquire
mov
leave
add
push
bound
and
add
cld
scas
cmc
fcompl
cltd
adc
inc
push
xchg
mov
adc
lahf
or
mov
js
and
add
test
jg
adcl
jno
adc
pop
fisttpl
mov
mov
bound
pop
xorb
mov
test
subb
jb
je
jnp
cltd
fdivp
fwait
dec
push
mov
out
lret
inc
aad
nop
out
dec
mov
sub
hlt
inc
mov
jmp
orl
cwtl
sub
mov
or
pop
in
or
fstps
lods
iret
add
lods
xchg
cld
cmp
cltd
push
mov
std
ljmp
jbe
pop
sbb
push
pop
mov
outsb
xchg
popf
mov
push
jnp
push
adc
or
sub
adc
imulb
std
jno
out
je
adc
mov
scas
arpl
xchg
mov
add
cmpsb
pop
aad
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
aas
fmull
jle
jg
jle
push
loope
cmp
mov
repz
push
inc
gs
xchg
adc
mov
or
ret
jle
sahf
ss
lds
test
xor
jge
xchg
dec
mov
ficompl
imul
mov
xchg
cmp
jge
jo
sbb
cmp
adc
stc
scas
shll
leave
out
push
rclb
les
or
cwtl
pop
insb
mov
pop
pop
push
scas
cmp
xchg
int3
out
dec
mov
xor
mov
fnstenv
shl
ja
add
fst
divb
sbb
jb
fneni(8087
inc
pop
cwtl
jp
jl
outsl
sub
mov
mov
popf
fcomps
adc
cmpsb
andb
pop
xchg
pop
jg
push
or
iret
mov
pusha
cmpsl
fsubrl
mov
push
movsl
push
aaa
mov
cmp
lcall
call
push
in
int
daa
add
js
jg
outsl
sub
outsb
xchg
icebp
stc
pop
loop
inc
fsubl
repz
scas
jp
in
inc
hlt
mov
iret
mov
mov
imul
dec
mov
sub
xor
add
jge
jno
sub
inc
in
lock
cmp
insb
push
in
lods
je
lea
lods
rcll
cs
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
mov
or
jle
jg
jle
inc
mov
push
and
pushf
stos
das
out
lret
ds
repnz
pusha
or
jl
subl
cs
in
dec
lcall
jae
jno
pushf
icebp
xor
cmp
imul
or
ja
aad
add
ret
arpl
push
adcb
or
inc
sbb
add
iret
out
std
ret
jae
pop
adcb
sahf
outsb
scas
mov
xor
adc
cmc
mov
dec
inc
xchg
insl
outsl
ljmp
or
xor
push
sbb
shll
mov
imul
mov
mov
push
dec
mov
cwtl
rclb
sbb
jmp
mov
dec
mov
sbb
es
rolb
or
xlat
imul
ficoms
add
add
pop
int3
dec
jl
cmpsb
push
mov
pop
cli
lahf
cmp
ss
xor
mov
push
inc
es
imul
test
push
cmp
das
ljmp
push
in
stos
outsl
or
les
mov
fists
push
sbb
jecxz
rorb
adc
aas
fmulp
jbe
lahf
roll
and
xchg
pusha
sbb
mov
add
in
pushf
scas
fmull
xor
out
pop
fs
aas
pop
ds
inc
jo
mov
or
ja
mov
push
outsb
push
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
fnstcw
or
jle
jg
jle
jo
xor
in
push
enter
int3
mov
iret
mov
jae
mov
xlat
mov
xchg
pop
dec
imul
clc
lds
and
dec
and
std
shrb
sbb
es
cmp
or
mov
ss
mov
cmp
xchg
pop
sbb
in
and
sub
popa
or
es
adc
repz
or
xchg
pop
iret
popa
test
or
frstor
je,pt
test
in
dec
sbb
int
dec
in
sti
sbb
sarb
push
fs
jge
mov
pusha
mov
in
xor
add
js
outsb
mov
sarb
dec
cltd
jmp
lock
dec
sub
jle
test
sahf
filds
jno
das
arpl
loopne
mov
stc
adc
mul
or
adc
xor
test
ljmp
lcall
jge
cmc
jnp
stos
aas
movsl
lcall
vmovntpd
dec
push
or
sub
or
neg
lret
out
aaa
sbb
negb
stc
xchg
dec
cmp
or
loop
mov
sbb
daa
xor
mov
sbb
js
jp
mov
dec
sub
adc
jmp
test
mov
push
inc
adc
mov
bound
test
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
fnsave
jle
jg
jle
cmp
negb
or
leave
mov
ljmp
sub
pop
lcall
cmpsb
dec
xchg
add
fdivrp
xor
inc
enter
xor
xchg
aaa
lret
pop
or
push
pop
jle
sub
jmp
cmpsb
call
jle
out
imul
fldenv
bound
ds
mov
shll
jno
inc
sub
mov
icebp
or
dec
das
adc
xchg
enter
test
lcall
push
push
imul
mov
cmpsb
addr16
mov
in
outsl
call
test
pop
xlat
sti
push
sbb
and
mov
inc
mov
inc
shl
insb
xor
dec
cmp
push
or
xchg
add
daa
cmp
enter
adc
xor
into
sbb
js
sbb
nop
mov
decb
cmpsb
xchg
push
xchg
xor
nop
jl
xlat
gs
sub
inc
xor
jmp
inc
inc
das
aam
iret
fistps
jno
xorb
in
mov
add
push
rcrl
lret
mov
sbb
xor
data16
pushf
dec
mov
cmp
jae
adc
test
mov
imul
sbb
adc
callw
cmp
movsl
movsb
loope
cld
mov
cs
xor
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
push
cmpsl
mov
jle
cli
jg
jle
sti
mov
sub
or
fstp
movsb
mov
das
cmp
sbb
inc
lret
dec
loop
out
pop
int
mov
dec
gs
dec
and
fscale
push
stos
cs
enter
test
repz
aaa
adc
xchg
mov
das
outsl
mov
ljmp
stc
call
xchg
lahf
je
int3
sarl
test
shlb
or
push
pop
add
xchg
mov
addr16
jb
jecxz
jg
cmp
ja
popa
and
sbb
jnp
or
aam
mov
pop
movsl
and
sub
cmpsb
popa
and
inc
pop
testl
inc
xor
fsubrs
das
and
arpl
mov
xorb
sbb
or
loop
shrb
jns
pop
and
arpl
push
cmpsl
cwtl
sub
inc
push
lods
pop
add
add
fisubrs
pop
inc
aad
call
adc
xchg
and
and
xor
xor
test
jae
shl
inc
lods
rsm
adc
pop
notl
push
jg
into
test
push
mov
mov
data16
paddusw
cltd
sbb
sub
sub
stos
outsl
and
lret
jnp
mov
push
jmp
xchg
fldenv
shlb
push
and
call
or
jns
xchg
fnstcw
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
cmp
ds
jle
cli
jg
jle
and
push
sub
push
mov
xor
shrb
loope
ja
xchg
push
call
fnsave
cmp
js
pop
les
shrl
shll
mov
add
out
fs
ret
fildl
add
and
xchg
adc
dec
mov
sbb
and
push
pushf
jecxz
add
mov
fadds
dec
sub
inc
shll
mov
loope
or
jnp
inc
pop
add
mov
mov
jecxz
ss
mov
jg
and
das
orb
dec
push
in
fmul
and
data16
mulb
xor
sbb
dec
popa
test
mov
fwait
or
dec
in
push
mov
sbb
adc
in
das
jb
cmp
mov
insl
mov
loop
jae
int3
push
mov
jbe
push
ds
mov
inc
jae
add
dec
sbb
fisubrs
lods
ret
push
or
fildll
xchg
pop
pop
hlt
or
xor
jl
pushf
hlt
daa
outsl
mov
leave
and
sbb
scas
lods
xlat
sbb
int3
sar
xchg
insl
mov
cmpsl
ret
pop
sub
pop
xor
ffree
sbb
ss
mov
mov
push
jno
mov
cli
je
xchg
call
mov
mov
add
pop
jmp
add
mov
adcb
dec
mov
jg
jle
sahf
push
or
xor
out
ja
loop
loop
sbb
mov
cmpl
jle
negl
icebp
fstps
movsl
cmp
push
inc
jecxz
jae
inc
inc
int3
inc
bound
jle
adc
mov
xchg
push
outsl
fdiv
shlb
in
cmp
and
je
adc
xor
dec
pop
xchg
sar
mov
iret
movsl
insb
movsl
movsb
jge
ja
push
ljmp
enter
ds
adc
mov
mov
sub
add
test
pop
jmp
pusha
ja
pop
cmp
ret
es
push
xor
rorl
mov
aad
cmp
iret
push
insb
in
imul
jnp
out
jmp
fsts
or
stc
leave
sub
jns
ret
pop
pop
push
rep
clc
lcall
sbb
aam
js
out
xchg
jg
xor
gs
jp
xchg
mov
out
cmp
je
jo
retw
and
xor
and
jno
mov
insb
fcomps
adc
lods
daa
sub
fstl
in
fstps
mov
mov
or
or
jae
mov
mov
jge
push
dec
enter
jno
add
ljmp
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
push
adc
jle
sbb
xor
mov
sub
xchg
dec
cmp
daa
lds
pop
or
lret
pop
fwait
inc
xlat
stos
gs
ds
jp
lds
push
xchg
cmpsb
pop
sub
outsb
xchg
push
rol
mov
insb
int
push
fnstsw
push
xor
in
xchg
add
push
add
jae
adc
and
stos
ficompl
jp
inc
lret
popf
es
or
and
xor
clc
insb
xor
push
add
outsb
or
add
subb
cmp
sub
xor
adc
mov
pushf
scas
jge
int
iret
push
mov
imul
negb
mov
rclb
push
adc
nop
cmc
xchg
test
adc
xchg
sbb
dec
xchg
or
and
and
mov
add
adc
jp
ss
or
or
and
out
xor
xchg
lcall
mov
sbb
mov
inc
push
pop
cld
sarb
aad
test
mov
es
jmp
adc
shlb
push
xchg
adc
fs
push
cld
aam
fdivr
xor
push
out
gs
add
cmp
popa
lds
jge
dec
dec
fwait
push
push
or
mov
sub
test
fabs
loope
mov
jecxz
dec
jp
or
ljmp
add
adc
bound
sub
rorl
mov
clc
shlb
lret
mov
sti
jbe
in
addr16
xchg
inc
sub
pushf
stos
and
or
pop
lods
bound
int3
imul
lea
fldt
lret
mov
stos
aas
scas
jle
pop
mov
repnz
scas
xor
stos
add
push
pop
pand
xchg
cmp
pusha
cmp
das
xor
add
sbb
leave
jbe
sbb
pop
dec
jo
cs
and
imulb
outsl
daa
pop
sar
mov
pop
test
outsb
das
mov
adc
scas
inc
xchg
imul
int
outsl
jl
cmp
push
push
mov
xor
mov
cltd
jmp
test
push
fistps
int3
stos
push
rcrb
mov
into
jle
mov
mov
rcr
cwtl
sub
movsl
fcmovu
pop
jbe
inc
ficoms
sbb
shll
xchg
jne
lds
pop
sahf
fimuls
dec
and
xchg
popa
roll
sbb
and
std
repnz
pop
sub
inc
mov
jle
sbb
or
cli
push
mov
jmp
dec
ljmp
inc
les
test
inc
add
sub
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
sub
sub
adc
pop
jl
jle
dec
pop
sbb
mov
repnz
inc
xchg
sub
hlt
push
lret
mov
cs
push
xor
loope
adc
fstps
push
andl
out
add
outsl
shrl
mov
pop
jp
lods
lds
dec
js
loop
xchg
sbb
movsb
scas
cwtl
hlt
cmp
paddd
dec
cltd
mov
jbe
filds
adc
add
push
ds
lcall
enter
push
shr
jle
das
or
mov
push
cwtl
leave
leave
adc
inc
mov
and
loope
gs
mov
adc
xorb
ds
gs
inc
out
fwait
xchg
sub
push
outsb
inc
mull
fs
mov
dec
pop
xorl
fnstcw
stos
loop
and
fisttpll
jmp
in
cltd
ss
sbbb
aam
in
jg
out
imul
loop
in
mov
pop
dec
enter
insb
and
and
mov
cmp
pusha
xchg
addr16
inc
lcall
sub
outsb
jmp
lods
test
push
data16
cmp
ret
out
testb
insb
scas
out
pop
add
inc
mov
int
push
sub
pop
adc
mov
shl
push
xor
es
imul
and
pop
mov
sub
pop
xchg
ss
push
aam
sbbl
cltd
or
sub
lods
pop
sbb
push
dec
mov
push
lds
inc
mov
insl
dec
daa
adc
cmc
inc
pop
lcall
popf
pop
cmp
fdivr
dec
repz
shll
jno
jge
inc
je
ds
int3
loop
mov
push
mov
in
fwait
push
fstpt
outsb
adc
adc
sub
add
scas
dec
aam
jmp
add
rorl
stos
pop
cmpsb
lret
stc
out
pushf
mov
or
jl
pushf
cmc
loope
imulb
mov
jg
inc
cwtl
shrl
push
int
xchg
jns
aad
xlat
cmp
dec
or
loop
cmp
sbbb
in
fcmovnu
les
ret
inc
cmc
stc
call
fldl
adc
loopne
inc
mov
pop
call
jae
insl
mov
adc
lret
cltd
adc
xor
test
push
int
mov
jg
fadds
sbb
or
fadds
aas
xchg
mov
scas
pop
mov
xchg
out
mov
ret
addb
loope
jle
or
mov
add
push
push
test
mov
xor
push
push
and
retw
scas
aas
adc
and
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
or
test
pop
jle
pop
jl
jle
push
push
shl
ljmp
mov
sahf
cmp
xchg
cltd
xchg
cmc
jbe
fbstp
pop
or
jg
adc
mov
adc
test
insl
sub
jecxz
dec
pushf
push
inc
mov
movsl
dec
stos
mov
dec
inc
in
in
enter
dec
lret
iret
mov
sbb
js
sub
cmp
push
jo
mov
mov
out
mov
mov
mov
aaa
divb
int
push
in
bound
and
push
je
fcomip
fstpt
xchg
leave
lods
sti
mov
jnp
push
cs
repnz
xor
adc
mov
push
jg
jo
or
xor
lahf
lahf
rol
push
fstpl
arpl
push
popa
cmp
jp
arpl
testb
add
sbb
loop
jl
lock
loopne
sbb
inc
dec
xchg
fildll
leave
mov
sbb
hlt
pop
fidivs
or
adc
xor
dec
sbb
enter
stos
adc
sbb
dec
movsb
call
test
inc
mov
xor
hlt
mov
dec
jp
scas
shlb
sbb
movsl
mov
push
mov
stos
sbb
sub
xor
dec
push
or
movsb
insl
cmp
insb
out
mov
jmp
test
inc
cmpsb
aaa
movb
nop
outsb
lea
dec
movsl
cmp
adc
bound
ljmp
push
push
fmuls
cmpsl
out
or
cmpsb
push
out
mov
into
data16
cmp
push
sub
push
mov
icebp
fwait
push
pop
mov
sti
pop
js
cmpsl
jp
mov
pop
push
xor
fadds
mov
clc
in
xchg
mov
pause
xor
hlt
mov
fs
fidivrl
push
sub
roll
mov
shr
outsl
adc
or
lea
lods
jns
add
mov
mov
jmp
mov
ljmp
sbbl
mov
enter
mov
mov
shrl
fiaddl
loope
mov
int3
pop
test
jnp
adc
sbb
jg
cmp
adc
xlat
in
mov
cmp
and
mov
sub
cmp
add
jge
sub
test
sbb
push
outsb
xchg
jg
icebp
adc
aam
cmpsb
sub
int3
pop
fidivl
pushf
jo
sub
shrb
adc
lret
inc
sahf
scas
loopne
sbb
fcoms
inc
jbe
or
popa
add
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
pop
dec
enter
jle
jl
jle
fcomps
xor
out
xchg
mov
or
xchg
mov
adc
int3
aas
pop
push
loopne
aam
sbb
mov
inc
notl
push
jo
icebp
std
mov
popf
pop
xor
addr16
mov
push
std
dec
fcmovb
cmp
push
and
jne
push
int3
adc
cld
jge
or
pop
sbb
mov
mov
adc
cmp
mov
inc
mov
xchg
popa
xor
xor
add
sub
inc
and
xchg
int3
inc
scas
jae
sbb
lods
add
sub
leave
lcall
mov
add
dec
sub
into
add
rcll
dec
sbbl
jl
sbb
inc
pop
pop
mov
insl
mov
jmp
lea
mov
mov
mov
or
push
jo
repnz
jmp
int
push
rcl
adc
cli
push
bound
in
pushw
aaa
cmp
test
jb
shrl
nop
xchg
pop
xchg
push
add
es
lock
sub
jae
lcall
roll
hlt
fisubs
sbb
pop
mov
adc
mov
ja
aad
aas
or
cmp
loop
rclb
mulb
sub
ss
int
and
add
neg
or
out
or
fiaddl
xlat
sbb
ljmp
rcl
in
call
daa
and
addr16
in
xor
call
jmp
hlt
dec
rcl
pop
xorl
imul
inc
xchg
pop
aas
jno
sub
out
cmc
mov
iret
hlt
call
mov
stos
mov
jge
pop
push
in
cmp
popf
imul
stc
mov
ljmp
xor
out
lret
test
mov
scas
inc
lods
adc
inc
addr16
adc
pop
and
add
add
arpl
fs
and
adc
pop
ljmp
push
test
pop
stos
push
mov
pop
jmp
cmpsl
xchg
lcall
cs
mov
stos
cmp
test
xor
icebp
or
push
and
adc
push
mov
loop
test
movsl
mov
loop
push
stc
lahf
sub
or
adc
and
cmpsb
mov
xor
jbe
pop
ja
sbb
ficoml
call
cmpsl
loopne
mov
nop
jp
push
ljmp
or
xor
add
mov
push
aad
sarb
pop
rcl
repz
and
dec
xchg
add
in
push
out
lods
aas
scas
jo
arpl
clc
jmp
add
dec
popa
jno
jne
xor
jle
and
jle
jl
jle
insl
fbstp
test
dec
lret
int3
push
hlt
insl
outsb
adc
xchg
sbbb
scas
les
ds
in
and
inc
xchg
dec
and
mov
fidivl
xor
mov
xchg
mov
adc
pop
jg
or
mov
fwait
mov
sub
mov
lret
iret
in
subb
push
add
xor
in
shll
xchg
mov
test
mov
mov
pop
dec
ret
jle
repz
cs
adc
jno
jmp
rolb
pusha
or
and
push
stos
mov
shrl
in
ja
dec
or
cli
test
xor
jmp
cmpsl
and
lds
sbb
add
mov
shrb
push
mov
pop
inc
leave
jmp
jnp
mov
pop
lret
xchg
test
daa
out
incl
xchg
sbb
cmpsb
test
out
mov
add
aaa
cs
jmp
pop
mov
jmp
push
enter
dec
out
mov
sbb
pop
dec
sbb
into
lods
xchg
mov
xchg
lds
lods
icebp
and
add
push
dec
dec
int3
insl
mov
mov
push
outsl
xor
mull
mov
cld
xchg
mov
pop
scas
out
movsb
xchg
arpl
jmp
ret
ja
push
outsb
sbb
jmp
mov
mov
pusha
pop
mov
adc
push
mov
rclb
xor
movsl
mov
xorb
mov
lahf
popa
inc
fldt
adc
mov
mov
rolb
ja
movsl
fnsave
pop
lahf
insl
call
into
leave
add
jo
inc
ror
sbbl
stos
inc
xchg
lcall
test
push
push
inc
sbb
dec
xorl
aaa
es
pop
sub
cs
outsl
sbb
aaa
cmc
repz
jl
cmp
ret
in
bound
shlb
pushf
or
mov
adc
insl
xchg
sub
inc
jmp
push
xchg
repnz
lret
lea
stc
xchg
ret
mov
fiadds
sbb
xchg
ret
popa
shl
cwtl
ret
lcall
dec
cmp
fcomip
or
popf
stos
aad
jbe
or
clc
xchg
aam
xlat
js
or
testl
mov
rcll
gs
add
mov
pop
movsl
adc
xchg
mov
push
inc
sub
mov
stc
cmpsb
and
and
jp
ljmp
push
lcall
mov
gs
mov
scas
inc
aaa
mov
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
jbe
ja
mov
jl
jle
push
popf
popf
or
popa
sahf
cmpsb
xorb
mov
sti
cmp
or
out
ret
add
lahf
in
jmp
adc
pop
jae
mov
or
test
jo
fs
sbb
movsb
in
dec
inc
test
insb
push
imul
in
pop
popf
sarb
pop
out
dec
stos
iret
or
and
pushl
nop
lods
dec
and
call
cld
mov
clc
pop
ss
mov
test
lods
int3
popf
dec
in
pop
and
outsl
pop
xchg
or
mov
movsb
out
or
jae
sbb
in
jno
jmp
aad
cmp
mov
push
loop
scas
lock
xchg
mov
dec
mov
and
rcrb
jge
mov
inc
bound
lds
in
inc
dec
mov
xor
loop
mov
push
sub
push
jno
or
iret
cmp
pop
pop
out
pusha
mov
dec
call
pop
das
push
adc
and
adc
shll
and
sub
leave
cmp
insl
mov
sub
and
sbb
push
push
inc
sbb
inc
shlb
mov
imull
dec
cmp
xlat
mov
fdiv
mov
jmp
adc
and
addr16
pop
out
or
jl
mov
fdivp
imulb
mov
push
lds
mov
push
lea
je
es
add
div
jmp
mov
mov
loop
adc
outsb
xor
cmpsl
inc
stos
les
decb
lods
xchg
pop
adc
mov
pop
fisttps
push
imul
repnz
cmp
xor
fdivrs
xor
sub
xlat
adc
dec
mov
mov
jo
inc
out
out
test
test
sub
sub
push
cli
sub
fiaddl
jbe
ret
inc
xor
ljmp
mov
hlt
ret
daa
push
jbe
int
or
inc
lock
push
fisubs
push
push
jmp
dec
mov
mov
xchg
cmp
movb
loope
add
aas
push
addr16
inc
pusha
pop
xchg
mov
inc
inc
add
xor
push
sarb
scas
sahf
arpl
stos
test
push
arpl
and
lods
out
pop
jns
ds
sbb
test
push
mov
std
into
push
jmp
fstl
jecxz
xor
dec
test
mov
mov
sarl
push
dec
mov
subb
fmull
push
adc
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
stc
xor
mov
jl
jle
js
xchg
je
mov
fmuls
xchg
pop
fs
mov
add
push
mov
mov
scas
stos
cmp
aas
mov
jp
jmp
pop
mov
mov
sbb
jno
lcall
notb
pusha
mov
dec
jecxz
push
xchg
dec
enter
rcrl
xor
insl
nop
loope
lcall
pop
dec
iret
push
pop
mov
lcall
mov
icebp
inc
mov
push
cmp
ret
or
inc
icebp
jnp
xor
lds
lahf
adc
scas
stc
inc
fists
lahf
jno
fists
loopne
inc
inc
into
push
xchg
pop
sbb
les
ret
sbb
jmp
in
mov
xor
and
leave
jecxz,pt
rcl
fs
dec
sbb
mov
out
mov
xchg
adc
mov
add
sbb
jmp
add
xchg
arpl
push
xorl
mov
xchg
int3
xchg
int
ljmp
dec
testb
jg
inc
mov
dec
jne
mov
in
push
jno
sti
loope
jae
cld
sbb
stos
ljmp
sub
cmp
lods
add
xchg
adc
pushf
mov
dec
nop
sbb
loop
and
inc
subl
clc
xchg
int3
push
or
sbb
jne
dec
add
adc
cwtl
cwtl
icebp
ss
sbb
jns
sahf
mov
mov
fisubl
and
xchg
nop
in
movsl
mov
fildll
sbb
scas
daa
pop
aas
cwtl
cmp
pop
frstor
aam
inc
push
cli
xor
add
xchg
xchg
icebp
mov
sbb
inc
mov
fldt
or
and
and
mov
outsl
xchg
pop
lcall
mov
stos
jnp
cs
and
mov
popf
dec
adc
push
jmp
pop
push
jle
and
inc
xor
mov
iret
test
sbb
punpckldq
fs
inc
jb
imul
cmp
push
fstpl
push
jbe,pt
sbb
int
xchg
xchg
std
leave
push
fldcw
out
adc
jo
neg
and
add
ret
ret
insl
shl
popl
inc
dec
cmp
loopne
stos
in
jmp
lock
jecxz
clc
loopne
pop
and
mov
cmp
jle
jae
in
and
jne
push
pop
cmp
push
and
pop
mov
ss
lahf
pop
adc
pop
or
lret
les
xchg
push
js
ja
cltd
jge
sub
cmc
mov
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
sub
jle
pop
jl
jle
ret
out
movsl
mov
xchg
and
jle
and
mov
std
adc
iret
shll
pop
das
test
cmc
movsb
outsb
call
push
aaa
pop
mov
pop
jecxz
mov
cmp
les
adc
mov
daa
push
mov
inc
mov
push
jle
adc
cmp
aam
add
push
bound
xor
jmp
ror
push
sbb
fwait
pusha
inc
sbb
mov
fwait
stos
clc
sahf
sbb
jno
sub
repnz
ljmp
mov
mov
adc
sahf
repz
incl
add
pushf
outsl
popf
mov
imulb
adc
enter
sub
mov
jg
aad
repz
out
sub
add
sub
imul
inc
or
into
das
std
scas
sti
xchg
call
mov
dec
mov
dec
inc
loope
outsb
dec
mov
dec
stos
xchg
scas
sub
mov
js
lahf
rcll
push
daa
cmp
push
test
push
cmp
pushf
inc
addr16
icebp
sbb
push
jb
cmpb
dec
jb
mov
xor
add
pop
inc
mov
or
mov
loop
enter
sbb
add
cmp
enter
lcall
icebp
xchg
mov
arpl
into
cs
enter
ficompl
sub
je
movsb
dec
inc
enter
inc
jmp
pop
imul
jbe
rorl
jbe
in
xchg
outsl
xchg
imul
mov
push
stc
sbb
jge
fidivl
jmp
addr16
inc
cmp
push
fistps
rorl
mov
sbbl
repz
scas
outsl
cltd
ss
daa
add
dec
or
out
jg
iret
lahf
mov
mov
mov
syscall
lret
adc
or
or
mull
push
test
sbb
fbld
xor
mov
filds
loop
inc
pop
lret
adc
mov
mov
not
mov
sbb
sbbl
push
sub
lods
or
orb
mov
mov
lods
pushf
push
arpl
mov
fldpi
call
imul
shrl
repz
xchg
in
jl
out
jmp
lcall
dec
imul
mov
inc
mov
negb
adc
loop
fcmovbe
clc
in
dec
mov
psrlw
jbe
or
fdivrs
adc
or
bound
xor
or
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
dec
rol
imulb
jle
jl
jle
shrl
insl
jno
jbe
ret
outsl
lds
cmp
ret
inc
add
adc
dec
jns
lods
iret
pop
std
add
add
bound
std
negl
lahf
or
outsl
in
int
ds
fs
and
cmp
xchg
jnp
xchg
mov
ror
movsl
mov
dec
mov
lods
and
jmp
mov
aaa
fcoms
mov
xchg
sub
push
movsb
je
adc
add
adc
pop
leave
lods
pop
es
mov
cmpsl
or
sbb
mov
pop
push
jns
add
or
bnd
cs
arpl
mov
les
sbb
stos
cmc
push
sahf
mov
decb
ds
sarb
out
js
call
jecxz
sti
pop
xor
jle
iret
jp
inc
testl
daa
arpl
cmp
sbb
jno
fisubrs
add
int
or
cmpsl
inc
jmp
or
daa
outsb
jnp
js
sbb
nop
xor
pop
and
pop
inc
sahf
mov
and
sbbl
xor
sub
cmp
jge
or
xor
fsubl
mov
arpl
hlt
in
cwtl
cmp
sub
fcoml
lahf
hlt
lcall
fs
xchg
jp
hlt
xchg
ficomps
in
jg
add
xchg
push
mov
mov
mov
ffreep
push
mov
sub
or
jbe
dec
sub
or
add
popf
inc
lahf
int3
push
xlat
or
faddl
out
mov
in
pop
popa
orl
loop
pop
dec
int
clc
sbb
sub
in
push
or
ja
mov
xchg
popf
lret
and
fstpt
adc
movsl
mov
bound
das
and
loope
addr16
mov
aad
lret
cmc
nop
jmp
sub
xchg
imul
stos
push
inc
in
rcrb
fisubrl
pop
lea
dec
pop
push
lods
adc
jno
jmpw
lods
clc
push
pop
pop
cmp
xchg
adc
add
add
or
adc
fwait
sbb
imulb
cmp
aas
decb
or
dec
divb
mov
enter
push
das
adc
into
dec
inc
lcall
loopne
add
push
jnp
jns
add
mov
push
loope
mov
shlb
dec
lods
mov
and
mov
fstpl
pop
in
adcb
stc
sub
mov
dec
sub
push
or
cli
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
push
mov
pop
jl
jle
adc
in
mov
les
adc
mov
mov
mov
std
pop
xor
lods
lcall
or
fwait
add
push
xor
xchg
cltd
aaa
movsb
int3
cmp
cmp
sbb
adc
mov
aas
jmp
lods
mov
xlat
lea
xor
mov
cmp
adc
fdivs
xchg
ds
clc
jb
mov
lcall
xchg
aas
aad
mov
shll
repz
insb
inc
je
mov
fnsave
pop
cmp
mov
mov
push
sbb
mov
pop
sti
fs
add
sub
jp
jmp
adc
dec
movsl
xchg
fwait
test
inc
fcoms
or
orb
fdivrs
inc
inc
stos
xchg
inc
repnz
xchg
rcrl
mov
or
pop
mov
movsl
push
mov
xchg
test
sub
rcrl
loope
jb
jae
add
jmp
fisubl
push
add
imul
jmp
inc
fwait
stos
cmpsl
out
sub
sahf
adc
sbb
pop
pop
mov
add
jge
in
jle
test
jge
add
sbb
cmc
mov
and
ret
push
js
mov
stos
imul
mov
std
sti
lea
aaa
jl
ljmp
cltd
jge
push
dec
lods
leave
mov
pop
fidivrs
push
lret
push
pop
mov
jb
out
test
out
xchg
outsl
lcall
add
sub
addr16
dec
negl
mov
pop
std
xchg
or
rolb
mov
imulb
xor
mov
rclb
shrl
gs
fdivrs
or
mov
adc
pop
in
sbb
or
out
jmp
insb
mov
in
add
clc
inc
sub
std
sbb
lods
pop
mov
sbb
mov
idiv
jnp
or
ljmp
test
push
in
cs
push
jp
dec
add
pop
mov
xchg
mov
mov
es
aaa
pusha
fwait
cmp
pinsrw
ret
lret
outsb
push
sbb
test
pushf
sbb
sahf
xchg
outsl
and
pop
mov
pop
das
lds
ret
insb
pop
mov
or
stc
xor
test
lods
dec
test
mov
movsb
dec
adc
push
xor
cmp
cs
cmp
repz
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
insb
ret
sarl
ss
sub
jle
roll
xor
cmp
cld
adc
sbb
mov
inc
and
leave
xlat
xchg
out
cld
add
xlat
pop
or
push
add
add
and
add
gs
mov
jne
dec
inc
inc
jne
mov
or
imul
in
jmp
jne
dec
mov
scas
pop
rorl
mov
push
and
or
mov
and
sub
mov
arpl
lock
add
push
adc
and
mov
xlat
xor
sub
mov
or
sahf
jne
iret
push
gs
and
xchg
sbb
loopne
mov
das
dec
cmp
inc
and
test
insb
inc
push
push
dec
mov
arpl
gs
sti
cmp
push
inc
mov
leave
xor
sub
sub
mov
inc
mov
fs
incb
pop
add
scas
mov
xlat
out
push
sub
jno
and
xor
jb
and
movsl
jl
test
aam
mov
std
enter
dec
into
popa
add
mov
imul
mov
addb
or
sbb
lds
scas
int3
aad
mov
push
jo
dec
sbb
lea
lds
mov
dec
jbe
leave
and
xor
sbb
movsl
jns
pop
mov
mov
jecxz
jnp
mov
imul
out
sbb
movsb
or
lea
push
cmp
sahf
sub
and
mov
add
cmp
jns
in
mov
and
mov
frstor
nop
sub
outsb
fcoml
push
mov
push
popf
jnp
aaa
pop
sti
xor
lret
jg
or
xchg
dec
mov
cmp
rolb
outsb
and
add
pop
mov
sub
daa
cmp
xor
and
in
sbb
repz
or
xlat
ret
ljmp
gs
mov
ss
pop
xorl
xchg
sub
in
loope
pop
jbe
fs
lret
inc
xor
mov
inc
xor
jne
filds
mov
cmp
daa
lret
arpl
addr16
sti
dec
pushf
in
leave
add
mov
and
arpl
outsb
enter
mul
or
cs
decb
push
adc
inc
into
cwtl
dec
dec
outsb
arpl
xor
or
adc
fsubrl
lahf
shrl
and
jg
jle
ss
mov
inc
xchg
add
mov
jl
outsl
mov
mov
test
popf
mov
xchg
dec
les
loop
jbe
sub
add
jecxz
cltd
jp
psubw
jb
sbb
test
adc
xchg
inc
adc
jnp
jnp
std
rcrl
mov
subb
clc
std
or
test
mov
jge
nop
add
int3
pusha
rorb
xchg
divl
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
std
pop
cmp
mov
and
cli
mull
cmp
xor
jne
pushfw
hlt
jno
out
xchg
dec
repnz
push
mov
sbb
push
mov
xor
dec
dec
add
pop
adc
mov
pop
jo
xchg
cmpb
push
fistpl
mov
fmuls
movsb
lret
subl
inc
ds
sbb
sbb
movl
mov
mov
pop
aam
mov
lret
xchg
pop
pand
mov
cmc
dec
mov
ficoml
pop
jns
mov
je
dec
shlb
data16
fcmovnbe
mov
mov
or
sbb
call
add
mov
dec
and
pop
das
jmp
nop
pop
adc
loop
testl
je
test
cmp
add
cltd
pop
push
push
mov
dec
test
jp
stos
in
jns
jle
add
mov
cmp
mov
xchg
in
sub
repnz
enter
dec
pop
cltd
testl
clc
dec
lcall
mov
jne
es
dec
xchg
mov
pusha
or
stos
out
mov
ja
mov
push
push
movsl
cli
cmpsb
jo
loopew
or
movsb
loop
das
aad
cwtl
pop
and
movsl
ret
xchg
daa
movsl
and
adc
mov
jle
out
in
test
xor
xor
sbb
outsb
inc
aas
adcl
and
pop
push
hlt
addb
xchg
add
fs
scas
cmp
push
dec
lcall
test
jae
aam
test
jmp
ds
lret
or
dec
leave
aad
lahf
xchg
pop
push
ljmp
xchg
bound
jbe
xchg
mov
call
ffreep
pop
imul
roll
inc
flds
outsl
in
push
roll
cwtl
sub
cs
daa
insb
and
xor
push
mov
lods
jne
mov
pusha
dec
dec
adc
sbb
cmp
gs
mov
push
dec
mov
scas
sti
jg
fstpl
fcmovnb
or
mov
inc
pop
push
add
test
mov
jge
xor
out
sub
mov
sub
sub
cmp
pop
aam
push
outsb
pushl
out
js
je
ljmp
test
lods
mov
mov
stc
jg
rcrl
push
rcll
mov
and
jge
push
cmpsl
pushf
js
mov
js
sbb
sub
mov
in
sbb
bound
enter
test
push
insb
ret
into
cmp
fstl
cs
sti
fildll
enter
push
in
jmp
ja
inc
inc
or
idiv
and
iret
pop
outsl
cmpl
xchg
and
enter
test
cmc
scas
out
inc
lret
xchg
bound
adc
sub
clc
test
icebp
neg
jmp
jne
sub
test
test
mov
sub
clc
cmpsb
xor
sub
jle
in
or
cmp
jae
loop
dec
xchg
sub
cmc
xchg
gs
fildl
negb
lds
inc
sub
adc
outsb
data16
mov
xchg
int
ds
mov
insl
sbb
sar
aas
mov
aad
sub
stos
adc
or
cmp
xchg
pop
pop
popa
lret
dec
in
inc
or
aas
idivl
dec
xlat
jl
mov
mov
sub
mov
test
xor
lock
mov
movsl
stos
add
and
gs
pushf
cmp
or
shll
dec
addb
xchg
dec
xchg
add
jmp
jo
and
fdiv
insl
cmp
mov
push
test
or
fucomip
cwtl
xor
out
jnp
imul
in
ret
xchg
imul
push
popa
or
sub
aas
lahf
neg
sti
lret
or
cmc
inc
push
cmp
inc
rcrb
sahf
lock
push
add
repnz
jbe
test
imul
rolb
or
xchg
cmc
and
sbb
push
lret
inc
inc
cwtl
cli
mov
fistpl
int
ljmp
bound
out
das
sub
xchg
je
dec
mov
test
shrl
jl
jge
xor
stos
sbb
add
call
push
lods
je
leave
cmp
add
ret
gs
lds
jno
push
push
mov
inc
adc
call
and
adc
pop
outsl
add
in
int
add
ds
ret
inc
inc
sub
loop
cmpsl
or
xor
or
fs
push
jo
push
in
roll
or
cmpsb
add
lods
out
cmpsb
mov
outsl
imul
pop
shll
ret
dec
add
adc
xchg
sbb
std
jl
roll
adc
shl
and
popa
sub
inc
loope
out
sbb
pop
xor
enter
inc
push
xchg
pop
push
fcoml
aaa
xchg
call
das
mov
push
jo
mov
xor
aas
adc
and
insl
mov
insb
cmp
out
lret
loope
inc
scas
iret
cltd
stos
leave
mov
loop
imul
inc
imulb
xchg
lea
inc
enter
ja
push
andl
add
std
inc
and
xchg
out
leave
lds
jne
pop
xchg
push
repz
xchg
lock
sbb
mov
adc
sub
pop
xchg
sub
and
sti
mov
test
cmp
ficoml
add
and
mov
adc
push
xor
ret
add
cmpsl
push
mov
repnz
xor
dec
adc
sub
pusha
mov
dec
fs
and
sarl
lods
jp
cwtl
arpl
jle
inc
mov
pop
dec
jecxz
sbbl
ja
pusha
rep
movsb
stos
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
dec
scas
scas
pop
push
aas
jle
sub
jle
mov
cwtl
push
int
add
xchg
ja
add
fstpt
addb
mov
rcrl
adc
jmp
rorb
mov
stc
jne
adc
pop
pop
test
cwtl
sahf
pop
sub
shl
inc
fbstp
fidivl
push
movb
sub
testl
ss
cmp
fsave
mov
xchg
jbe
pop
and
adc
xchg
aad
mov
cli
adc
int
leave
mov
xorl
aad
aam
stos
rclb
sub
pop
and
mov
mov
call
inc
in
stc
arpl
fnstcw
xor
push
loop
shlb
cmp
mov
cwtl
lds
jecxz
aad
jns
gs
mov
sahf
clc
dec
jae
or
int
mov
cmp
gs
adc
sbb
or
adc
ss
dec
jns
add
int3
popf
pop
mov
jg
ja
xor
stos
fdivrs
xor
arpl
and
cmc
cmp
xor
cmp
outsb
into
cmp
mov
fsubrs
mov
in
scas
dec
cltd
arpl
fsub
insl
push
or
vmwrite
mov
mov
or
sahf
push
sbb
loope
pusha
dec
dec
xor
mov
xchg
in
sub
cmp
mov
imul
lds
hlt
aam
loope
sysexit
cli
stos
ret
and
sbb
ret
jnp
ss
roll
jge
hlt
mov
sub
nop
pop
gs
sbb
pop
push
dec
and
stos
mov
pop
dec
imul
arpl
and
outsb
mov
dec
jmp
inc
inc
cmpsb
inc
push
stos
test
xchg
ffreep
enter
pushf
push
xchg
add
dec
cmp
dec
inc
hlt
push
out
push
push
mov
mov
pop
xchg
mov
xor
or
test
and
or
scas
dec
nop
in
cmp
fcoms
xlat
dec
xchg
jnp
aad
sub
lock
into
movsb
push
add
fistpl
notb
cmpsb
repz
idiv
push
add
sti
xchg
jnp
or
sahf
push
mov
incb
pushf
and
add
pop
mov
popf
adc
push
xor
cli
sbb
dec
push
bnd
test
or
jae
mov
mov
fistpll
insb
shll
pop
sti
xor
dec
ror
push
test
sbb
dec
cmpsb
and
mov
and
lret
aam
mov
push
idivb
cmp
mov
insb
dec
or
add
dec
dec
dec
mov
imul
imulb
cmpsb
adc
adc
fdivrl
call
fdivs
sub
js
jecxz
movsb
pop
cltd
jle
add
bound
jmp
pop
jl
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
in
add
jle
mov
add
out
insl
cmpsl
sti
inc
cmp
js
ret
imul
mov
inc
aam
mov
push
mov
shrl
pop
dec
popa
gs
repnz
adc
shlb
dec
in
cmp
push
cli
inc
adc
sti
dec
jns
xchg
push
push
inc
cmp
dec
push
in
xchg
sbb
popa
cld
xchg
push
add
mov
addb
sar
sub
sbb
fsubrs
in
mov
xor
fistpl
inc
nop
sbbb
mov
ljmp
mov
sub
test
lret
dec
pop
add
enter
lock
cmpsl
cltd
aaa
leave
sub
mov
subl
int
mov
addr16
icebp
mov
out
cmp
mov
mov
mov
xor
sar
dec
jle
dec
rep
push
je
jbe
leave
or
push
jb
and
outsb
jle
push
mov
xor
les
mov
xchg
cmp
dec
jns
mov
push
mov
mov
mov
movsb
dec
out
adc
sarb
jb
cmp
or
cld
in
mov
lcall
in
mov
xchg
sqrtps
xchg
xor
cmp
lahf
scas
out
push
lret
fdivr
dec
lret
xor
aad
jnp
jne
test
adc
repnz
pop
je
pop
movsl
pop
and
int
cmp
scas
add
mov
insl
mov
mov
scas
stos
call
xorb
mov
scas
jecxz
ret
xor
mov
ret
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
stos
fwait
in
inc
cmp
mov
or
pop
xchg
push
in
cltd
push
adc
jmp
or
pop
leave
push
or
sub
testb
iret
incb
xchg
pop
jnp
iret
scas
in
mov
sub
bound
inc
inc
jge
hlt
in
out
jecxz
cwtl
and
jae
dec
push
xchg
sahf
dec
push
or
shlb
sbb
push
shll
aas
jno
adc
scas
loop
adc
push
inc
push
sahf
cmpsl
xchg
jl
dec
mov
mov
push
sub
cmp
repnz
pop
pop
xor
sahf
inc
fldcw
das
mov
aaa
sti
sbb
cmp
add
mov
ret
or
in
ljmp
cmp
xor
mov
xor
adc
pop
jle
cmp
loop
push
xor
sub
ss
mov
xchg
mov
out
inc
dec
push
int3
adc
sub
xchg
loopne
out
add
jg
enter
sarl
adc
and
pop
loope
pop
sbb
loope
jbe
add
mov
cli
cs
mov
dec
jb
xchg
jmp
jne
push
xchg
sarb
mov
scas
bound
scas
shr
imul
xor
lods
in
dec
ljmp
fdivrs
int
dec
xchg
mov
pop
mov
jne,pt
sbb
adc
xor
cmc
icebp
shll
mov
xchg
cmpsb
mov
ljmp
pop
sbb
cli
test
sbb
aas
test
xor
xor
in
add
pop
arpl
fisttpl
push
cld
ja
mov
mov
pop
xchg
push
out
lock
outsb
sub
lods
and
push
xchg
out
mov
repnz
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
ret
fistl
mov
mov
xor
mov
lds
cmp
mov
jns
gs
pop
mov
jmp
and
leave
cmpsb
mov
lods
pop
or
mov
or
rcll
pop
push
inc
scas
insl
cld
hlt
jge
mov
shlb
or
ja
push
jle
lcall
xchg
jae
andb
addr16
pop
jle
jo
xlat
mov
pop
inc
scas
jns
cmp
pop
jmp
enter
ljmp
fnsave
mov
leave
imulb
fs
mov
mov
subl
jns
sub
and
aas
inc
xchg
sti
add
pop
jo
sbb
sbb
fwait
andl
mov
push
mov
sbb
sbb
mov
iret
pushf
and
mov
lret
mov
mov
jmp
sbb
cmp
sbb
int3
and
shrl
xchg
andb
fwait
jg
insl
push
push
fsubrl
cwtl
xchg
dec
mov
addb
loop
cs
xchg
sub
sub
push
arpl
mov
pop
sub
fcompl
les
insl
loop
ja
bound
or
rol
ret
mov
and
sub
and
movsl
loopne
imul
ljmp
inc
sbb
or
push
out
and
lock
cs
idivb
repz
adc
fidivrs
pop
or
aaa
pop
test
jbe
movsl
pop
cmp
or
pushl
call
test
jmp
and
in
popa
push
lret
xchg
pop
jecxz
repnz
les
mov
sub
mov
inc
dec
divl
jbe
nop
adc
cmp
jae
fcmovne
ss
scas
lret
xorb
gs
xchg
and
es
dec
addr16
jb
pop
mov
out
out
lcall
call
sarb
std
and
leave
xchg
or
jecxz
push
inc
jle
push
dec
pop
pop
adc
sub
cld
pop
dec
adc
adc
and
mov
push
test
movsb
cmp
lock
mov
movsl
inc
sub
mov
andl
mov
mov
xor
jb
adc
jl
mov
sbb
std
les
pop
insl
aam
jno
jae
outsl
ja
pop
je
xchg
ficoml
xor
pop
add
xchg
pop
orb
inc
cld
mov
dec
xor
lds
mov
inc
cli
sub
sub
loope
stos
mov
movsl
std
mov
lret
xchg
or
cwtl
gs
inc
popa
imul
mull
gs
mov
shll
jb
xchg
mov
dec
frstor
dec
ja
cwtl
xor
jbe
mov
outsl
ja
int3
cmp
xchg
lea
es
inc
push
cmpsl
xor
clc
mov
jo
movsl
lret
xchg
jle
inc
loop
mov
xchg
out
push
lret
cli
aad
dec
sar
push
pop
mov
lcall
adc
jbe
rcll
in
lcall
cmp
push
rorb
faddl
push
mul
mov
rcl
rcrb
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
lea
or
jle
add
mov
lods
gs
pop
push
xchg
lret
in
ds
clc
pop
fwait
xor
push
cmp
inc
xor
lret
aad
pop
mov
fwait
or
psubw
xchg
dec
pop
call
pop
scas
popf
int3
imul
push
testl
mov
imul
dec
clc
into
sub
dec
mov
cli
lods
int
subl
enter
sti
sub
sbb
ret
scas
pop
sbb
popa
pop
aam
movsb
mov
sub
push
jp
adc
sub
stc
pushf
into
es
push
neg
push
push
xchg
and
rolb
int
xchg
mov
lods
mov
dec
fidivs
lock
jg
adc
pop
decb
in
outsl
dec
nop
mov
pop
fwait
push
or
add
lret
pop
bound
xchg
mov
push
cltd
inc
jbe
in
and
outsl
es
cmp
xchg
mov
in
out
jo
ss
mov
test
js
mov
xchg
mov
jnp
add
pop
dec
nop
js
adcl
lcall
jae
lods
clc
jo
fwait
lods
lret
mov
dec
repnz
fidivrs
xor
push
inc
lock
insb
movsl
mov
ror
pop
enter
inc
inc
scas
sbb
mov
out
or
xorb
xchg
xlat
pop
addr16
iret
adcb
mov
add
fdivr
push
dec
xchg
add
dec
xchg
lret
sub
pop
stc
loopne
xlat
sahf
es
inc
scas
xchg
sarl
scas
pop
adc
mov
ds
xor
jae
mov
pop
bound
negb
push
repz
mov
incl
lea
and
adc
cli
js
mov
repnz
out
adcl
sbb
jp
dec
or
push
lahf
sub
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
pop
rorl
adc
jle
add
add
or
cmp
lods
out
ds
mov
shr
sti
lods
sbb
sub
pop
add
int3
call
sbb
cmp
mov
dec
pop
out
jg
pushf
and
add
cltd
icebp
loopne
nop
pop
pop
loope
add
ja
mov
or
push
stos
push
pop
cmc
movsl
adc
sbb
mov
mov
andb
fiaddl
leave
inc
or
cmp
fdivp
sub
dec
out
int3
repz
dec
and
jo
test
mov
std
xor
xchg
lock
rcrb
mov
jp
push
jnp
enter
int
in
fimull
xchg
xchg
arpl
mov
inc
mov
arpl
data16
jno
mov
dec
xor
add
jmp
cmp
daa
into
sbb
mov
push
push
push
addl
jge
push
pushf
rorb
loope
dec
fwait
jo
push
push
loope
rol
lods
xor
imul
adc
call
lret
pop
sbb
cmp
add
mov
sub
je
and
mov
adcb
aad
loope
sbb
mov
sub
daa
push
mov
clc
enter
jg
icebp
adc
test
nop
rcrl
icebp
fisubrs
sti
mov
mov
mov
test
test
shrb
jmp
cvtps2pi
sub
mov
movsb
xchg
sub
scas
mov
mov
test
mov
cli
xchg
lods
xor
pop
xor
daa
mov
jecxz
inc
pop
xchg
push
inc
jbe
jb
fs
repz
aas
sub
insb
cltd
sbb
or
les
rorb
xchg
xchg
daa
jnp
sbb
enter
into
fwait
pop
sbb
sbb
into
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
sti
das
mov
into
jle
add
rorl
inc
loope
or
sbb
dec
xchg
aaa
sub
add
lds
inc
sub
popa
xchg
inc
aaa
data16
and
fnstsw
xchg
repnz
cld
or
cli
mov
jnp
cmpsb
lock
pop
cli
cmpsb
xor
outsl
pop
mov
lret
jno
repz
inc
dec
push
jle
mov
xor
sbb
cmc
and
ret
jo
int3
popf
add
aaa
jbe
aam
inc
cmc
jmp
and
mov
xchg
cwtl
mov
cwtl
fs
insb
inc
xor
jg
ret
fadd
pop
push
cmp
fistps
inc
xchg
push
aad
mov
imul
int
mov
fs
in
xchg
stos
fcmovne
mov
sbb
scas
jo
xchg
jb
hlt
imul
pop
inc
sub
into
cmpsl
movsl
jp
shll
shl
fsubrp
inc
lods
lcall
or
mov
cltd
test
sub
cmpsb
shr
pop
and
ret
xor
fistpl
stos
or
pop
loopne
inc
dec
jecxz
and
pusha
sti
sarl
fwait
mov
cwtl
pop
aas
repz
mov
and
les
jmp
jg
fs
cmp
fcoml
imul
fdivr
into
xor
test
sub
leave
add
xchg
mov
dec
mov
stos
mov
shlb
shlb
mov
xchg
rcr
mov
cmp
insl
mov
dec
xor
dec
aas
loope
loope
addr16
jae
sarb
rorl
mov
push
dec
inc
lock
pop
and
push
fstps
or
jmpw
jmp
xor
pusha
mov
pushf
cmpsl
jb
or
loope
pusha
xor
add
or
sbb
fs
mov
insb
shrb
cs
hlt
lret
push
aad
fistps
sbb
stc
dec
mov
das
inc
and
outsb
pop
outsb
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
ja
adcl
add
aaa
sbb
lahf
mov
in
push
stc
xor
pop
and
stos
lock
or
xor
scas
and
in
into
pop
jecxz
push
mov
lods
mov
cmp
fistps
sub
pop
cmp
aam
jae
in
dec
in
ret
test
out
insb
mov
mov
push
mov
outsb
test
pop
mov
jmp
addr16
daa
sbb
jg
or
sti
cmp
mov
lahf
jae
or
sahf
call
pop
or
mov
inc
cmp
or
clc
out
cmp
push
loopne
pop
pop
pusha
fildl
push
lcall
sbb
adc
daa
enter
add
pop
and
dec
jnp
fs
test
dec
inc
inc
int
cmp
pop
lcall
repnz
mov
orb
mov
ja
mov
dec
push
rol
and
test
or
adc
insb
in
das
ljmp
inc
daa
popa
xor
loope
pop
loop
or
and
pusha
xchg
mov
push
stos
lea
ljmp
adc
outsl
jmp
fldl
outsl
test
cmp
push
cmp
fcmovne
xor
aaa
addr16
stos
xor
xchg
xor
jno
dec
sete
subl
lret
xlat
mov
jo
mov
xor
mov
stos
addr16
cmpsl
xchg
xor
es
dec
test
aas
jno
cmpsl
jp
xor
jb
xchg
add
xor
shll
dec
add
mov
add
add
push
and
cmp
lods
pop
enter
cltd
and
lock
hlt
adc
xlat
lds
sbb
into
sbb
mov
popf
pop
cmc
push
xlat
rcr
into
pop
test
mov
ret
pop
sub
daa
sbb
cmp
cltd
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
mov
lret
and
jle
cmpsl
fildll
xchg
push
dec
outsb
test
pop
mov
mov
andb
mov
loopne
rclb
jns
xchg
out
pop
imul
pop
push
xlat
push
sarl
or
inc
rcrb
shl
stos
jg
int
or
mov
scas
fldenv
adc
mov
add
add
push
in
sub
dec
xor
xor
loopne
enter
and
cwtl
xchg
dec
imul
clc
ret
dec
cli
xchg
cmpsl
mov
sub
sub
out
dec
pop
mov
xor
call
cmpsl
fldlg2
xchg
dec
rcll
jne
movsl
xlat
imul
jle
pop
pop
and
aas
mov
lret
arpl
inc
iret
mov
das
jl
sarb
stos
push
sbb
enter
jno
daa
cmp
je
xor
ror
jnp
or
flds
and
jb
jne
out
xor
mov
xchg
daa
cmp
xchg
sub
inc
push
lock
mov
sbb
jbe
dec
call
or
test
and
maxps
int
cmpl
adc
imul
lods
mov
inc
sbbb
dec
xor
xlat
scas
mov
mov
mulb
sahf
mov
cmpsl
xor
and
jb
mov
filds
adc
or
nop
insl
inc
pushf
je
cltd
cmp
mov
and
into
hlt
and
pusha
cmp
inc
pop
push
in
adc
push
push
inc
push
dec
or
inc
xchg
adc
cli
sub
jcxz
or
test
rclb
and
ret
jnp
js
jle
cmp
imul
pop
les
hlt
fimuls
mov
adc
push
push
jmp
push
gs
adc
sbb
xchg
push
pop
push
inc
fcoml
cmp
add
jae
mov
dec
mov
jge
fistpll
adc
mov
imul
pop
fdivl
inc
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
imul
jle
jl
jle
jle
ljmp
insl
xchg
imul
in
push
ja
repnz
idivl
cltd
adc
sti
pop
sbb
dec
repnz
push
xchg
rclb
aam
sbb
jg
or
sbb
aad
loopne
push
out
sbb
jno
cmp
mov
mov
xor
sbb
stos
jns
dec
enter
mov
jae
jecxz
negb
pop
mov
and
push
jg
in
inc
shll
pop
and
and
andb
rcl
adc
cmp
or
xchg
mov
cmp
enter
sub
aaa
xor
stc
ret
ljmp
arpl
divps
mov
push
shll
mov
andb
call
lret
jno
xchg
hlt
dec
daa
push
inc
sar
fs
lods
pop
lock
xchg
push
faddl
loopne
rol
ljmp
xchg
mov
mov
adc
int3
out
xchg
maxps
mov
cmp
xor
jbe
push
xor
dec
and
imul
xchg
mov
cs
jae
pop
mov
add
in
fcmovbe
jns
push
push
and
adc
dec
or
lret
xchg
mov
in
jns
or
push
lods
push
pusha
mov
inc
scas
inc
push
roll
or
dec
push
lds
rclb
cld
arpl
sbb
mov
dec
clc
xchg
or
mov
pop
jo
xor
or
cmpsl
test
or
cwtl
inc
hlt
stc
je
mov
negl
sbb
pop
xor
sub
dec
inc
pop
mov
cmp
adc
push
or
push
pop
dec
jmp
std
movsb
out
ja
scas
mov
jge
jmp
push
cmpsb
pop
fcmovu
sbb
jge
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
sbb
jl
jle
jmp
inc
fstpt
dec
out
in
jmp
push
dec
call
aas
jb
sbb
pushf
test
xor
sub
jmp
adc
sbb
xchg
sub
cs
enter
cwtl
ljmp
loop
and
mov
ja
sbb
jns
add
sub
xchg
mov
ret
dec
clc
in
cmp
xchg
jb
ret
jle
sub
aas
xor
cltd
testl
cltd
mov
out
dec
aam
jp
adcl
test
inc
test
add
xchg
sbb
pop
pop
pop
outsb
mov
mov
sub
shl
call
mov
lea
addr16
out
xchg
mov
pop
xchg
pop
insl
add
fldenv
inc
sbb
cli
sbbl
mov
cmpsl
jns
out
add
fmuls
insl
in
es
out
dec
xor
sahf
pop
addl
pop
add
adc
leave
cltd
cmovl
and
mov
inc
jmp
jns
lcall
fidivs
idivb
mov
call
adc
xchg
cld
mov
testb
cld
mov
sub
xchg
push
pushf
xchg
pusha
sbb
mov
push
repnz
test
push
jp
ror
inc
sbb
cmp
mov
loopne
nop
push
aaa
fcoml
mov
jl
adc
push
mov
mov
mov
push
and
xchg
jp
nop
xchg
cmp
or
retw
or
add
cli
xchg
cmp
fldcw
sahf
push
lock
daa
sub
sbb
sbb
popa
mov
push
xor
push
arpl
sbb
mov
rcll
jg
call
add
jne
in
hlt
push
test
mov
out
popa
mov
jecxz
push
xlat
fistl
pop
sahf
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
xchg
mov
jle
and
jle
xchg
or
imulb
loopne
and
stos
or
gs
les
jno
insb
out
test
and
cmp
scas
cwtl
push
ljmp
scas
ret
jno
repz
xor
ljmp
mov
xchg
movsl
push
pushf
inc
pop
pop
add
push
arpl
push
stos
leave
or
xor
xchg
cltd
cmp
pop
test
inc
sbb
int3
out
std
data16
dec
lcall
lret
int3
cmp
xchg
sbb
loope
jae
fbld
lcall
in
rorl
imul
and
call
or
stos
adc
dec
mov
push
je
mov
ja
cmp
lea
inc
cmc
or
sub
dec
jp
mov
sub
mov
mov
loope
lock
lock
ret
mov
inc
imul
or
pop
mov
mov
push
pop
mov
xchg
jo
inc
ljmp
test
jmp
fimuls
mov
cmp
xor
out
fdivl
xlat
out
loopne
cmp
mov
mov
cmp
add
ja
xchg
adcb
inc
mov
push
lcall
imul
pop
iret
call
test
dec
cltd
xor
roll
cmp
mov
out
add
aaa
cmp
mov
fistpll
mov
or
xchg
add
inc
sbb
xor
adc
pushf
xchg
xor
mov
addl
cltd
ds
jecxz
ds
movhpd
or
imul
xchg
pushf
daa
iret
xor
push
sbb
mov
fistpl
cltd
lcall
call
adc
push
xchg
popa
push
jbe
mov
outsb
test
cmp
pushf
mov
and
add
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
inc
adc
dec
data16
and
jle
add
or
cld
negb
imul
sbb
das
cmp
in
cmp
jno
pop
dec
aad
pop
pop
lods
mov
adc
in
dec
add
jp
daa
and
dec
das
sub
jp
nop
mov
mov
pusha
andb
leave
movsb
fdivrl
clc
sti
dec
jle
mov
xchg
push
cli
inc
mov
and
fstps
adc
and
jg
pop
pop
jae
lret
nop
aam
mov
bound
jmp
mov
add
sahf
mov
inc
mov
insl
rclb
dec
shl
popf
or
aam
into
fsubrs
push
addr16
add
inc
push
arpl
jmp
pop
filds
xchg
pop
cmp
repz
xorl
xchg
std
push
add
mov
leave
jl
mov
fcompl
lea
mov
pop
or
mov
cld
ret
push
push
lret
sti
pop
lock
call
daa
or
scas
repnz
aad
push
sub
add
jo
dec
dec
lahf
imul
jae
and
xor
mov
and
lea
pushf
into
xor
scas
in
pusha
lods
inc
mov
in
lcall
int3
aaa
stos
in
pop
cwtl
popa
repnz
jle
mov
sbb
jae
rolb
pop
lods
adc
inc
sub
mov
subl
cmpsl
fs
mov
nop
or
jecxz
cmp
xchg
test
stos
adc
jno
hlt
dec
lcall
out
aad
loopne
dec
adc
sti
movsb
adcb
stc
xor
in
mov
xor
fisttpll
packssdw
xchg
cwtl
push
and
jmp
outsl
lcall
dec
cmp
rcl
mov
cmp
in
push
test
push
stos
lahf
push
mov
push
adc
xor
cmp
ss
stos
scas
iret
add
jno
int
into
mov
pushf
and
paddsb
or
xor
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
enter
les
add
dec
incl
add
xor
dec
repnz
cmp
xor
mov
aam
cs
in
shr
mov
adc
sbb
rcrb
mov
inc
xchg
sub
push
mov
in
ja
out
xor
inc
push
cltd
adc
dec
loope
les
aaa
jb
inc
add
ss
jle
in
inc
negl
ret
mov
rolb
jno
push
jle
sub
jecxz
dec
test
pop
jns
pushf
xor
jl
cld
mov
addr16
or
cmp
push
loopne
sbb
mov
sub
mov
lret
je
mulb
stc
cmc
and
cmp
lods
dec
addr16
xchg
ja
or
bound
movb
mov
add
cld
adc
in
pop
mov
pop
sbb
xchg
test
sbb
adc
ja
gs
idivl
movb
push
xor
nop
and
push
aam
or
je
adc
pushf
outsl
jmp
cld
pop
subb
dec
xor
push
dec
repnz
push
das
out
xor
xor
ret
jno
cmp
mov
pop
test
pop
in
mov
fidivrl
mov
jle
adc
jecxz
pop
fs
adc
adc
mov
inc
sub
sub
push
movsb
jp
fcomps
jae
and
adcb
pop
add
cltd
add
fwait
add
and
mov
fisubs
andl
out
jo
mov
xchg
icebp
arpl
out
int
jg
or
js
push
data16
dec
pop
test
sub
idivb
jno
loopne
push
mov
loop
test
ret
sub
das
adc
lods
cmc
mov
fs
mov
fmuls
cwtl
fcompp
mov
imul
movsb
or
icebp
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
orb
and
jle
mov
mov
popf
pop
ficomps
or
ret
mov
arpl
lds
aas
xor
insb
mov
lea
mov
push
mov
inc
mov
les
fdivrs
and
xchg
dec
popa
mov
fidivrl
sbb
cmc
sub
cld
mov
out
popa
and
loop
sbb
sub
adc
jle
repz
inc
lret
xor
inc
dec
mov
push
cmp
je
cmpb
pop
inc
and
loope
imul
or
sub
cld
adc
popa
mov
mov
lret
xor
negb
insl
xor
sbb
xor
pop
jo
lods
xor
jnp
xlat
mul
xchg
pop
adc
cs
mov
cmp
subl
sbb
mov
shll
inc
ljmp
nop
in
in
and
adc
mov
clc
loope
hlt
pop
arpl
pop
dec
dec
mov
pop
sub
sub
rcrb
jbe
mov
test
xor
fistpl
xchg
xor
gs
xchg
adc
xchg
shll
adc
out
jno
ret
mov
cmp
inc
mov
scas
fcomi
cmp
mov
repnz
inc
add
add
xchg
xor
in
pop
cmpsb
icebp
stos
jbe
mov
out
cmp
scas
fbstp
jp
shrb
add
and
pop
xchg
push
mov
out
cmp
mov
add
mov
xor
sub
stos
in
sbbl
xchg
dec
inc
add
les
cmp
cmp
fisubs
pushf
xchg
in
sbb
shll
leave
stos
jne
imul
dec
rorl
and
arpl
ljmp
repnz
jno
mov
push
mov
mov
sahf
pop
gs
or
shrb
out
sbbb
lods
xchg
sbb
hlt
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
repnz
movsb
fcomp
jle
and
jle
data16
cmp
fs
mov
push
push
pushf
mov
xor
rcrl
ffreep
dec
mov
inc
add
pop
ret
test
in
in
test
adc
dec
fcmovbe
std
and
out
xor
lcall
mov
test
mov
jns
out
sub
add
lock
push
inc
mov
leave
pop
mov
std
rcll
jl
adc
add
add
loope
push
ret
mov
lds
sub
mov
mov
xor
int
push
stos
add
mov
jns
addr16
xchg
xchg
push
in
mov
mov
mov
jb
xor
arpl
cmc
sahf
mov
jmp
mov
sbb
andl
jge
out
or
and
sar
mov
test
mov
outsl
and
cltd
cmpsl
pop
cmp
in
sub
mov
jle
pushf
enter
jecxz
push
popa
dec
clc
fsubrs
lea
cli
repz
loope
outsl
out
lods
in
mov
cwtl
daa
mov
xor
pmulhuw
mov
ss
jmp
in
pop
xlat
call
rcll
shlb
mov
push
aas
xor
or
xchg
fdivrs
push
dec
in
push
inc
add
daa
xchg
fcomi
icebp
scas
pop
add
int
mov
ja
push
mov
cwtl
cmpsb
push
add
and
popa
into
in
rcr
inc
movsl
cmp
call
mov
nop
loope
or
ret
sub
mov
add
gs
sbb
outsl
jb
mov
lock
cltd
rclb
jns
popa
movsl
sbb
fadds
xor
jp
pushf
cmp
jecxz
es
push
loop
sbbl
sti
in
bound
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
cmp
push
dec
out
popa
jo
movsl
jae
jno
clc
sbb
int
popa
stos
xchg
fcoml
insl
xchg
dec
xor
jo
test
hlt
test
sahf
loope
mov
inc
add
xchg
insl
loope
movsl
jmp
mov
add
xchg
pop
fdivl
cmpsl
jbe
push
aaa
aaa
pop
dec
jle
fdivl
fadds
test
leave
adc
fstpl
sbb
xor
cmp
cli
addr16
enter
inc
jbe
int
xlat
xlat
loop
sbb
lcall
fwait
jge
das
cmpsl
mov
sbb
lcall
call
xchg
sbb
xchg
xor
push
stos
mov
in
jge
ja
out
gs
mov
and
out
pop
adc
ficompl
repnz
and
dec
les
pusha
jg
mov
lock
cmp
and
jae
ss
lea
cmpsl
sub
in
rcrl
out
sub
sarb
adc
hlt
sub
pop
cmc
mov
push
js
adc
xchg
and
jb
daa
into
inc
xchg
sub
jle
push
jge
stos
mov
adc
mov
lea
ret
aaa
aam
int
push
mov
pop
push
sub
mov
shlb
stc
rorl
es
xlat
mov
nop
dec
movsl
jle
out
xor
xor
push
cli
lret
mov
data16
or
or
mov
fucomi
mov
pop
adc
lea
stos
lret
and
inc
adc
aaa
adc
iret
and
xor
mov
ljmp
cmpsl
and
cmc
pop
in
adc
push
ljmp
adc
repz
pop
mov
push
push
dec
push
pop
es
push
inc
in
loopne
repnz
mov
jle
dec
jge
stos
xor
inc
aad
movsl
or
sub
xor
inc
pop
cwtl
es
scas
jb
insl
rcll
lcall
sub
adc
cmp
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
lea
repz
mov
jle
cmp
mov
jae
sub
xor
push
push
mov
sbb
not
in
xor
xchg
mov
jp
xor
or
inc
dec
std
jne
mov
and
clc
inc
jge
punpckldq
adc
add
pop
mov
mov
call
aad
mov
xor
sahf
insl
push
sub
dec
mov
mov
bt
call
dec
mov
xor
into
xchg
lret
fwait
inc
and
mov
mov
in
js
mov
and
fiadds
popf
cmp
dec
ljmp
inc
shr
repnz
dec
mov
stos
cmp
or
int3
adc
ds
jg
fisubl
sub
cli
testl
fs
mov
insb
and
xor
push
stc
xor
inc
aam
sahf
adc
dec
or
test
inc
loopne
ret
pop
mov
shld
cmp
sub
adc
mov
xchg
clc
sub
shl
test
in
adc
insb
les
push
sub
test
daa
ds
outsb
xor
imul
sub
aas
xchg
ljmp
push
cli
shl
dec
je
or
mov
dec
out
add
movsb
popf
mov
loop
add
int
daa
data16
adc
adc
sahf
dec
mov
shrd
addr16
xchg
mov
push
mov
call
jne,pt
rorb
jo
int
bound
push
jg
fwait
nop
mov
stos
or
std
sub
out
jmp
mov
pop
out
cmp
subb
xlat
fbstp
into
sbb
pop
lcall
push
cmc
gs
dec
dec
or
in
iret
mov
adc
lods
cmpsb
inc
negl
and
sbb
gs
sbb
push
aad
and
adc
loope
je
fbstp
notb
cld
mov
push
or
pop
in
mov
mov
and
jle
jne
aas
pop
cmpsl
inc
mov
push
push
sbbl
jmp
lds
popa
mov
fisttpll
loopne
in
jle
jl
jle
out
mov
jnp
cmpsl
xchg
mov
loopne
sbb
je
movsl
cld
xchg
and
mov
or
jno
xlat
es
pop
pop
ds
push
dec
xor
cmp
cmp
inc
rorb
mov
out
subl
mov
xchg
rorl
pop
xchg
pop
xchg
cmpsl
jecxz
dec
mov
dec
fldt
inc
lret
push
pusha
ret
pop
pushf
mov
testl
ficomps
mov
xchg
sbbl
cli
mov
je,pt
inc
jge
imul
mov
mov
cld
sbbb
cmp
sti
fwait
cmpb
fbld
cld
addl
adc
push
notb
int3
dec
int3
stos
mov
ljmp
ljmp
inc
push
popa
outsl
movsl
sub
mov
loopne
popf
xchg
sbb
mov
mov
pop
jle
dec
movsb
jnp
in
mov
pusha
stos
iret
or
lods
or
mov
in
sbb
test
out
pop
test
cmp
push
js
test
stos
nop
xor
sahf
inc
sbb
dec
jmp
push
mov
and
push
and
add
inc
xchg
add
and
hlt
or
push
clc
pusha
leave
mov
xor
xadd
mov
push
or
sti
sbb
adc
outsb
loop
mov
inc
inc
lcall
inc
sub
sbb
lds
mov
lock
mov
push
imul
jp
jno
push
pop
into
push
movsb
fists
mov
mov
sub
dec
scas
adc
push
mov
mov
arpl
jns
or
add
pusha
add
vpaddw
or
push
xor
enter
enter
and
notl
pmaxsw
outsl
ret
lcall
daa
push
aaa
imul
out
aad
dec
repnz
mov
mov
pop
sub
outsb
cmp
xchg
push
pop
pop
mov
add
out
add
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
adc
mov
jle
jl
jle
pop
mov
and
das
mov
mov
sbb
rcr
insl
loopne
test
adc
loopne
push
mov
test
or
inc
push
out
fdiv
cli
jp
cs
dec
xor
divb
imul
in
fnstenv
js
outsl
push
aaa
loop
out
fistpl
arpl
sub
idivb
pop
sub
or
loopne
outsl
pop
fwait
int
inc
cmp
xchg
jmp
outsl
add
cmp
movsb
insl
andb
add
clc
into
inc
loope
cmc
repnz
ret
sbbb
sbb
inc
lods
fs
dec
fisubs
movsb
inc
jne
xchg
fcompl
repnz
jg
jne
jae
out
seto
int3
jae
mov
mov
je
hlt
jl
sub
cmp
jl
jo
les
js
xchg
jg
fdivs
push
add
rcrl
sti
test
lods
push
dec
cltd
adc
enter
jmp
popf
in
xlat
mov
int3
out
inc
jmp
mov
iret
cmp
or
and
sbb
cmc
fadds
faddl
cmp
icebp
cmp
lret
aaa
outsl
mov
lahf
or
les
adc
pop
inc
jnp
xchg
dec
shl
cmp
cli
add
xor
aad
xchg
shl
and
and
rclb
sub
dec
xlat
cmpsb
sar
daa
out
loope
and
fisubrl
addr16
mov
or
sbb
push
into
add
mov
xor
sub
jecxz
les
sbb
shll
lock
sbb
jb
dec
les
out
data16
stos
adc
ja
hlt
xor
in
loopne
paddsb
outsb
or
jge
add
and
mov
out
jmp
mov
popf
roll
roll
dec
xchg
jp
pushf
mov
mov
hlt
out
jo
and
movsl
pop
add
popa
inc
test
scas
add
inc
jmp
icebp
lret
fisttpl
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
outsl
adc
jle
cmp
inc
cmpsl
inc
cmp
mov
xor
and
test
ds
xchg
mov
frstor
xchg
cmp
aas
jge
lret
hlt
xor
data16
push
add
mov
dec
in
mov
xor
roll
ss
iret
jb
pop
test
aad
cmpsb
sub
jge
mov
les
pop
andl
shrb
cmpb
enter
arpl
into
jecxz
push
and
sbb
jmp
stc
adc
scas
mov
and
mov
pop
ss
aam
fs
adc
push
mov
loope
jge
push
scas
mov
dec
xchg
scas
mov
fwait
outsl
mov
adc
je
jbe
lods
mov
jno
sbb
cmp
pop
aaa
sbb
pop
fsubrp
gs
cmp
ret
mov
shlb
sarl
sub
arpl
cli
rolb
mov
int3
ljmp
insl
pop
cmp
movsl
out
test
pop
xchg
cmp
xchg
lret
test
out
insl
cmp
loopne
fsubrp
pop
fisttpll
in
les
push
xor
scas
les
mov
mov
movsb
movsl
decl
nop
push
out
int
lret
loop
inc
in
aam
inc
fbld
iret
mov
repnz
and
ljmp
insl
pop
jmp
pop
cmp
out
scas
gs
outsb
aad
mov
aas
pop
faddl
cwtl
and
fnstenv
jecxz
icebp
subl
nop
xchg
stc
pop
pusha
movsl
xor
in
dec
fistpl
dec
mov
dec
cmp
pop
pusha
sub
jbe
pop
inc
pop
xlat
dec
mov
nop
lods
std
clc
add
cmp
into
cmpsb
cli
or
and
rorl
ds
out
jecxz
and
les
jmp
mov
mov
jmp
ret
adc
xchg
aad
sub
push
sub
xor
mov
and
shr
in
rcrl
dec
sub
outsb
xchg
aad
ljmp
lret
inc
test
jbe
fmull
call
jnp
inc
add
add
add
push
add
add
shlb
jnp
inc
add
jnp
inc
add
add
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
sti
cs
cmp
jle
jl
jle
mov
jl
mov
lcall
sti
pop
pop
cmpsb
push
sub
add
xchg
cmp
sbb
bound
cmp
icebp
out
cmp
enter
add
mov
push
popf
setns
mov
scas
push
and
push
mov
sarb
ja
push
push
aad
jecxz
pop
cmp
push
lock
int
mov
into
mov
mov
rolb
ds
push
call
ror
addr16
gs
outsb
inc
aam
rclb
mov
xor
or
pushf
js
fisttpll
inc
cmpsl
xorb
dec
test
repz
xchg
aas
xor
dec
cmp
and
ret
testb
orl
xchg
push
jmp
mov
subl
stos
jae
in
or
sbbl
cmp
test
jns
push
arpl
inc
addr16
arpl
popa
out
lods
dec
push
mov
jge
mov
add
mov
int
jns
test
daa
stos
dec
into
dec
jbe
dec
mov
shrl
or
scas
icebp
leave
sarl
jne
or
pushf
fstl
mov
rorb
mov
test
inc
shl
ret
loopne
repz
fmull
sbb
cltd
std
fcmovu
jl
icebp
xchg
pop
inc
mov
aam
jge
push
aad
js
jmp
cmp
fistps
cltd
inc
jg
jne
movsl
pusha
jle
jns
push
xchg
jno
mov
cmp
push
fs
aam
and
icebp
xchg
and
mov
adc
mov
xchg
sar
rclb
xchg
push
xor
mov
jbe
inc
or
insb
xchg
dec
out
adc
jle
out
sbb
adc
jmp
gs
pusha
xor
ret
int3
add
pop
push
shrb
test
ret
cmp
icebp
xchg
mov
das
fisubs
adc
in
shlb
push
or
aas
dec
mov
test
icebp
ss
xchg
or
jge
fdivrs
std
xor
add
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
xchg
out
push
in
jle
cmp
or
out
mov
add
fnop
cmp
mov
in
scas
es
jno
ret
jbe
xor
add
ret
es
in
add
pop
rcll
ds
stos
sub
andb
xor
sub
mov
sbb
push
mov
aad
stos
pop
xlat
push
adc
in
mov
les
ret
push
cmp
jno
lods
dec
daa
inc
clc
mov
pop
in
or
popf
iret
lock
mov
mov
imul
data16
std
ret
cmp
add
pop
stos
lods
pushw
xchg
fbstp
dec
cmpl
cwtl
mov
arpl
into
out
cmp
dec
dec
hlt
cld
outsl
icebp
add
sarb
in
test
repnz
push
pop
mov
pop
ss
jmp
push
or
sub
add
imul
pop
mov
pop
icebp
dec
aas
pop
xchg
repz
roll
into
xchg
sbb
lods
sbb
fucom
xchg
or
xor
imul
fmull
dec
push
shr
jle
mov
mov
flds
aaa
jns
xchg
xchg
cmp
push
sahf
lcall
cmp
adc
fbld
test
ss
and
daa
outsl
popa
je
add
lea
cltd
lods
push
jbe
scas
movsb
nop
jns
inc
rcll
rcrl
push
inc
les
sbb
mov
scas
jge
mov
movb
jo
sub
not
pop
jb
mov
sbb
inc
push
in
cmp
jb
and
mov
or
test
or
int
sub
jnp
or
xor
xchg
loope
xor
mov
test
adc
push
lret
jae
and
iret
and
inc
lods
xchg
sti
pop
push
out
mov
adc
cmp
xor
jecxz
rcr
enter
insb
adc
jo
cmp
adc
jp
push
mov
cmp
dec
ret
pop
testl
inc
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
lods
jecxz
inc
shr
jle
cmp
jmp
addr16
sub
callw
mov
jge
cmc
jnp
mov
clc
lret
fwait
rolb
fsubr
out
shrl
sub
into
push
loop
xchg
push
mov
call
pop
mov
add
mov
nop
ds
stos
mov
xchg
jbe
add
fcomps
cli
mov
testl
mov
addr16
repnz
mov
sub
jmp
lahf
jnp
pop
shlb
loope
push
or
ret
push
int3
jbe
push
push
arpl
ss
xor
dec
sbb
jecxz
xchg
mov
pop
cmp
lea
and
mov
lods
xor
pushf
data16
jecxz
cltd
sub
mov
std
out
push
or
shl
test
icebp
push
sbb
jmp
push
es
pop
mov
sbb
jns
sub
pop
adc
out
push
sbb
and
jb
mov
add
adc
outsl
mov
in
pop
cmp
push
fdiv
and
and
jo
sbb
loope
jne
leave
cmpsb
jge
xchg
jb
jnp
sti
jo
sar
insb
lods
pop
cmp
mov
xor
lds
adc
cmp
out
and
stc
ja
lahf
es
fdivs
jne
jae
fisubrs
rcr
sub
lods
test
mov
jbe
fidivl
loop
dec
out
mov
xor
jl
jg
nop
cmp
xor
lock
out
fs
add
fdivr
inc
mov
rcl
pop
mov
sti
out
test
lods
jg
shll
hlt
jg
cld
cwtl
mov
sti
test
mov
sbbl
mov
add
xor
dec
cmp
jbe
outsb
popa
xchg
clc
jle
cld
cmp
aaa
fistps
ljmp
test
sbb
jle
lock
ret
lods
sub
push
ja
jmp
fimuls
sbb
push
mov
sahf
stos
lods
adc
cwtl
lds
inc
loop
movsb
bound
enter
or
jmp
inc
add
je
add
outsl
cmp
add
add
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
xchg
jb
add
sub
andnps
movsl
xchg
clc
cli
mov
cmp
inc
push
in
adc
scas
lret
sbbb
xor
pushf
sub
ss
cltd
fst
vmwrite
fwait
push
dec
imul
andb
or
cld
repnz
sbb
jge
js
shll
adc
in
jbe
sub
je
cmpsl
push
popf
stos
cmp
pop
mov
sub
xchg
push
or
loopne
cli
mov
xchg
adc
mov
push
fdivl
cmc
incb
es
into
jmp
xchg
lock
push
adc
lcall
sbb
cld
pusha
shl
inc
jg
xor
sahf
daa
inc
mov
jno
cltd
aas
mov
jle
xchg
pop
fadd
vandnpd
pop
and
lret
adc
jno
insl
inc
mov
fcmovu
popl
repz
fmull
mov
inc
into
or
pusha
jmp
mov
sbb
and
jle
jecxz
loope
inc
push
inc
add
xchg
cmp
mov
movb
sub
aad
scas
imul
or
push
mov
cmc
out
out
xchg
pop
mov
and
push
add
push
icebp
cld
and
mov
add
dec
mov
sub
sbb
popa
mov
cmp
hlt
pop
push
and
xlat
mov
push
out
les
ret
cld
pop
ds
outsl
test
ja
jg
xor
decb
sub
adcl
icebp
ror
ds
mov
and
bound
btr
fs
inc
sahf
mov
adc
imul
fsubrl
fwait
and
xchg
aaa
out
sbb
loope
mov
mov
and
push
sahf
fnsave
std
sub
fisubrs
adc
mov
pop
inc
cmpsl
es
stos
rcrl
lcall
push
and
pop
int
mov
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
jecxz
jae
idivl
cmp
shrl
stc
pop
sub
mov
cmp
add
cmp
testb
xor
xchg
stos
cwtl
mov
cli
inc
insl
push
push
jnp
xlat
mov
push
outsl
jbe
out
mov
clc
push
inc
mov
jbe
orl
xchg
lock
fwait
xor
bound
testb
and
mov
or
inc
cmc
add
and
adc
jb
popf
lcall
ljmp
cli
mov
cli
adc
inc
sbb
dec
lret
lret
cwtl
pop
mov
cli
jle
jg
mov
mov
xchg
cld
xorl
test
dec
mov
pop
and
mov
cld
jmp
cmp
push
push
push
and
enter
pop
inc
sub
ja,pt
loope
cwtl
shrl
leave
jle
aas
icebp
sahf
xor
add
xchg
cmpsb
gs
lahf
or
dec
push
inc
das
insl
mov
jp
out
sub
popa
cmp
imul
and
jo
mov
lret
loope
fucomi
mov
sub
outsl
push
jl
lea
mov
inc
cmp
cltd
sub
jecxz
rclb
inc
mov
shll
clc
int3
mov
xchg
cli
lahf
pusha
mov
addl
stc
add
push
sbb
rorb
clc
sub
call
lods
out
jecxz
or
and
xor
adc
mov
jb
and
punpckhwd
push
in
xor
adc
xchg
sub
lahf
imul
mov
jmp
test
push
js
jl
mov
mov
inc
cmpl
in
scas
or
cwtl
cmpsb
inc
insl
aas
push
insl
jno
jmp
cld
dec
jno
and
mov
xchg
inc
mov
add
xchg
ret
cmpl
ficompl
call
mov
cmp
mov
sbb
mov
cmp
scas
xchg
push
mov
jo
add
daa
ret
cmp
ja
mov
leave
xor
xor
dec
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
xchg
jae
arpl
bnd
cmp
jbe
adc
ja
xor
push
lock
sbb
mov
sub
hlt
cmp
enter
or
pop
adc
mov
dec
sub
sub
fildl
cmp
pushf
xor
lret
hlt
xlat
mov
mov
in
in
cltd
xor
int3
pop
mov
mov
xchg
xchg
outsb
pop
add
jg
pop
sub
int3
pop
jnp
and
imul
jns
mov
xor
mov
lret
lret
or
cmc
adc
push
or
pop
pop
popf
push
push
aas
inc
mov
scas
fidivrl
xor
pop
pop
pop
mov
mov
mov
mov
pushf
ss
addl
jle
je
in
pop
pushf
mov
dec
inc
outsb
adc
test
cmp
pop
mov
stos
push
or
leave
lret
fcoml
mov
sbbl
cmpsb
and
mov
sub
stc
pop
push
push
daa
push
push
or
jge
das
scas
pop
push
clc
jmp
pop
or
cmc
adc
ljmp
pop
hlt
test
into
cltd
mov
mov
into
push
icebp
or
mov
and
mov
sub
and
test
mov
fbstp
pop
xor
aam
ficompl
or
inc
mov
or
or
or
cmp
aaa
outsl
cmp
xchg
data16
mov
ja
aam
ss
sub
cltd
inc
xchg
in
mov
cld
push
jg
sahf
xchg
jle
fsubrp
arpl
jge
xchg
mov
hlt
arpl
hlt
sbb
clc
cmp
push
les
jnp
lret
pusha
and
mov
xchg
js
add
jge
inc
push
pop
or
mov
pop
or
cltd
outsl
fstl
adc
adc
mov
pop
cmp
mov
daa
aaa
xor
dec
push
jecxz
cmp
stos
mov
ret
test
push
mov
adc
rcl
in
ror
sub
add
mov
cmpb
dec
aas
push
adc
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
hlt
push
loop
call
jl
jle
shll
cmpsb
push
mov
pop
mov
arpl
inc
and
mov
addr16
rcr
dec
stos
fs
push
or
outsl
push
jge
lcall
push
xor
movsb
mov
and
sbb
jo
inc
jecxz
xchg
cmp
push
cmc
rol
jb
dec
mov
enter
daa
inc
or
lret
pop
nop
pop
xchg
mov
in
aam
xchg
loop
std
enter
dec
fstpt
out
aas
pop
cmp
push
data16
adc
dec
jle
sub
jne
xor
test
cmp
jmp
xor
mov
shlb
je
imul
and
idiv
pop
xchg
cmp
mov
pop
bound
sarb
cmpsl
shll
jnp
sti
dec
add
sub
fdivl
pop
inc
push
leave
fsubs
lcall
in
jne
sbb
mov
mov
fsubrl
addb
xor
cld
pop
sti
outsl
and
push
call
push
ret
mov
cmp
out
xchg
mov
iret
sbb
outsl
sub
ss
mov
stos
mull
repnz
stos
push
shlb
fsub
push
nop
adc
mulb
or
repnz
iret
jg
scas
pop
fistps
shrb
dec
mov
jle
sub
repnz
sbb
mov
repnz
push
js
or
nop
cli
out
adc
pushw
mov
fwait
pop
decb
mov
mov
pop
sub
dec
push
sub
or
lret
addr16
jnp
sahf
cmp
out
sbb
mov
lahf
popa
mov
out
inc
mov
inc
clc
ja
mov
add
stos
lock
andb
sbb
addr16
aas
pushf
out
call
inc
cmp
and
and
fstpl
flds
and
sbb
sub
xor
daa
jnp
movsb
and
fidivs
insl
xor
in
cmp
jne
adc
push
inc
xor
clc
xor
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
sarb
jle
cmp
cs
je
dec
xchg
scas
sub
js
shlb
push
push
add
pop
in
aam
loop
pop
aas
pop
js
iret
inc
push
stc
jmp
xor
cmp
mov
dec
sbb
sbbb
push
mov
es
std
enter
fdivrs
jg
enter
out
clc
inc
in
into
mov
bound
outsl
faddl
jno
out
add
clc
sahf
loop
mov
popf
sub
add
xchg
and
push
or
or
cmpb
ja
mov
insl
inc
cmp
cltd
inc
add
outsl
cmp
lret
repz
add
push
xchg
jle
fwait
push
push
xchg
push
or
sub
mov
and
sbb
test
arpl
cmp
add
icebp
dec
in
jg
outsb
xchg
jecxz
sarl
aam
test
mov
pop
inc
pop
outsb
inc
xor
push
mov
fstps
mov
stos
gs
pop
add
mov
fimuls
add
pushl
out
add
packssdw
std
jmp
mov
xchg
push
adc
cmp
mov
mov
xchg
andl
ljmp
inc
pushf
lds
outsl
shlb
xlat
aad
xor
and
mov
dec
lock
adc
into
xchg
mov
add
mov
or
push
mov
outsl
repnz
sub
clc
lock
aam
fldcw
add
out
jns
dec
cs
in
pushf
lret
lcall
mov
shl
and
int
jbe
cmpb
out
xchg
jg
enter
jle
mov
push
add
cmpsb
ja
inc
jecxz
sbb
jg
das
jg
std
mov
sub
fwait
xlat
pop
xor
stos
sahf
sti
stos
cwtl
adc
push
pshufw
add
test
dec
mov
push
lret
pop
cwtl
mov
push
jb
cmp
int
orl
push
aad
cmp
clc
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
daa
out
jl
jle
cmp
cmp
mov
cmp
mov
popf
in
arpl
xor
jmp
sbb
int
daa
sub
xchg
ret
xor
xor
popa
into
fisubs
pop
xorl
call
mov
ja
int
xchg
sub
cmp
jo
cmp
pop
jns
popa
mov
outsl
add
shrl
mov
lock
leave
jne
dec
xchg
aaa
div
adc
outsl
repz
mov
hlt
cmp
push
and
sbb
movsl
xchg
rclb
ss
push
mov
pop
cmp
out
inc
jp
nop
sbb
fsubr
adc
movsl
arpl
in
dec
sahf
mov
mov
movsl
xor
and
adc
sub
nop
fisttpll
jae
dec
iret
enter
mov
icebp
push
and
cli
insl
xor
jge
ret
and
mov
lahf
push
or
testl
pxor
push
loope
ret
push
call
ljmp
adcl
adc
or
push
and
fwait
or
mov
push
mov
in
ret
sahf
pop
in
mov
sbb
cltd
rol
inc
mov
fmull
mov
push
jb
mov
jne
loop
fiaddl
sbb
jmp
cwtl
inc
inc
xchg
aam
jl
les
movsb
xor
imul
xor
jns
mov
jne
fisubs
mov
add
add
lea
lock
xor
mov
shl
imul
stos
mov
aaa
and
call
into
cmpsl
cmpsb
aas
js
mov
into
out
push
outsl
adc
inc
sbb
mov
int3
and
jbe
stc
int
adc
mov
mov
loopne
fiaddl
cltd
xchg
push
daa
sub
xor
adc
ja
cmpsl
push
pop
popa
sub
test
mov
addr16
inc
sahf
push
xor
mov
pop
dec
mov
ret
and
cmp
out
lret
pop
out
pop
and
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
mov
sti
jle
cmp
and
xor
iret
pop
mov
push
pop
pop
dec
imul
jnp,pt
mov
dec
test
in
idivl
test
xor
and
stc
jnp
in
adc
int3
andb
mov
add
lds
mov
aaa
add
nop
mov
hlt
cmp
cmp
xor
jge
inc
out
cltd
stos
push
xchg
lcall
imul
call
inc
adc
xchg
jmp
mov
push
add
cmp
jb
mov
add
lret
rcrl
adc
lods
cmp
scas
xchg
dec
gs
or
sub
cmp
mov
jp
dec
insl
daa
popa
ffree
xchg
inc
call
adc
cmp
mov
adc
iret
out
sub
xchg
jge
jecxz
or
push
mov
add
mov
orl
sbb
jle
pushf
mov
xor
lods
fptan
mov
jecxz
lahf
xor
aas
or
mov
loop
inc
negb
mov
and
popf
push
lahf
lcall
adc
cmp
adc
mov
mov
stos
push
rcrb
sub
lret
xchg
popf
std
jno
xchg
mov
mov
pushf
in
sub
and
cmp
xchg
sub
cmp
mov
out
xor
push
push
mov
fidivs
push
mov
push
test
lods
jbe
ja
es
and
fistpll
rcrl
enter
adc
leave
dec
outsl
push
add
cmp
in
dec
xorb
ja
loopne
pop
jecxz
adc
lods
es
pop
dec
insl
inc
jns
js
lahf
pop
pop
sbb
xor
pop
xor
sbb
add
cmpsl
mov
inc
xor
das
sti
rcrl
and
add
xor
pop
decb
inc
sbb
ret
fyl2xp1
scas
seta
xchg
loop
mov
dec
or
out
daa
xchg
jne
mov
or
xor
sbb
jmp
fnsave
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
stc
cmp
jle
jl
jle
mov
pop
jnp
lods
mov
adcl
dec
dec
mov
movsb
and
aam
add
stos
inc
xchg
pop
cltd
mov
add
stc
imul
or
sub
leave
jecxz
test
jo
pop
mov
lcall
gs
mov
mov
xor
pop
imul
or
mov
shlb
cmp
hlt
scas
or
adc
sub
cmc
sub
loop
mov
sub
jns
out
decl
add
inc
adc
or
dec
sub
push
js
lcall
mov
mov
adc
aam
test
aad
sbb
imul
out
dec
xchg
dec
je
fistpll
test
lret
ds
roll
sub
xorl
ss
lods
or
lock
arpl
fdivrl
or
add
out
test
fnstenv
mov
in
adc
insl
mov
push
sbb
enter
inc
in
pop
mov
int3
outsb
scas
outsl
sub
sahf
scas
jle
mov
inc
lea
pop
xlat
dec
sbb
scas
mov
daa
sbb
inc
push
add
cmp
dec
pop
push
in
inc
jae
sbb
in
fcmovnbe
adc
jmp
mov
xchg
sub
jmp
jne
cmc
frstor
sbb
jecxz
negl
cltd
lret
jo
clc
stos
adc
loop
fldcw
lods
sbb
ss
test
fcomps
push
push
enter
stc
mov
fisubrs
mov
lock
pop
push
adc
and
pop
add
pop
lods
dec
push
aam
ja
outsl
paddusw
in
adc
mov
mov
sub
inc
push
inc
push
cmp
imul
mov
inc
jno
sub
ja
shl
sbb
mov
rcrb
ret
cmp
out
xor
aad
loope
push
js
mov
mov
in
testb
lret
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
in
stc
dec
xchg
cmp
stos
fs
xor
ret
les
xor
insb
xor
cwtl
data16
lcall
int
mov
fsubs
fs
lret
cmpb
sbb
js
mov
lcall
dec
loopne
into
or
xchg
loop
add
sbb
loopne
xchg
sbb
sbb
repz
shll
adc
cs
fmuls
xchg
test
aam
jge
dec
adcb
jle
cmp
clc
or
mov
xchg
sub
in
jns
shr
dec
pop
push
cli
out
pop
push
lret
iret
dec
mov
and
sub
je
cmp
iret
outsb
lods
test
dec
dec
pop
mov
repnz
pop
adc
mov
pop
inc
jg
stos
add
idivb
cli
jp
mov
xor
jo
xor
iret
xchg
test
pushl
sub
jl
mov
out
xor
dec
or
cmp
movsl
adc
test
add
daa
cmp
xchg
push
mov
scas
dec
adc
push
jp
int
lret
xchg
mov
mov
mov
inc
sahf
xlat
or
int
xlat
loope
fidivrl
jae
jne
xor
pop
inc
stos
enter
xor
dec
jnp
mov
sub
lods
std
mov
daa
jno
lret
cmp
push
jmp
jae
and
sbb
or
shl
ja
xchg
cmc
inc
mov
push
push
sbb
or
repz
dec
call
fisttpl
orl
repnz
pop
fldenv
stc
loopne
call
jmp
fcoml
shlb
push
fwait
test
xchg
pop
fidivl
push
adc
test
lret
or
and
jns
in
into
repz
mov
mov
push
sbb
shr
mov
pop
pop
sbb
fcompl
je
xchg
mov
adc
imul
ljmp
es
jp,pt
sbbb
add
push
int3
dec
and
call
cli
sub
hlt
mov
fisttpll
or
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
xor
jle
jl
jle
sub
push
cmpsb
test
cmp
sbb
daa
mov
or
inc
fidivrl
adc
enter
mov
out
and
jmp
lea
cmpsl
xchg
or
mov
and
jb
adc
sub
cmp
es
shrb
add
jae
test
fcoms
lret
stos
shlb
cld
popa
lods
arpl
lock
out
es
xchg
push
mov
mov
pop
mov
mov
scas
push
cmpsl
and
stos
out
or
mov
cs
fwait
push
cmpsl
dec
lock
fidivs
dec
jg
adc
pop
mov
in
sti
imul
push
stc
push
pushf
sub
scas
rorl
jge
xchg
inc
scas
cld
lods
sahf
jp
mov
mov
lods
xor
outsb
pop
ficoms
es
xchg
push
les
mov
mov
cmp
icebp
push
shrb
cs
movsl
push
sbb
movsb
pusha
mov
jg
lods
ljmp
xor
rorb
ja
jmp
xchg
sub
sbb
or
mov
repnz
nop
test
adc
hlt
jmp
pusha
push
dec
in
adc
aaa
jl
or
ljmp
call
jecxz
mov
dec
ret
and
and
pcmpgtw
xchg
jp
mov
sbb
xlat
test
movsl
xchg
lock
mov
or
push
lock
ljmp
xchg
pushf
xor
arpl
loopne
je
movsl
push
jmp
cmp
xor
movsl
sub
push
dec
inc
ret
and
adc
jl
shl
jo
jne
pop
mov
push
lret
push
jmp
pop
daa
xor
je
call
and
jnp
xor
xchg
stos
mov
or
stos
inc
push
push
mov
ljmp
cmpsb
aaa
xchg
pop
xor
movsb
mov
daa
scas
icebp
jg
in
sub
pop
fldl
inc
popa
cld
xchg
in
and
pop
sub
ljmp
into
adc
in
aam
sbb
push
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
fildl
jl
jle
jne
xor
inc
orb
movsb
lcall
xor
mov
inc
aad
outsb
push
cli
loopne
fildl
sbb
cmp
pop
test
jl
fidivl
xchg
cld
sbb
sub
xchg
add
push
out
mov
push
fwait
xchg
sub
xchg
mov
mov
xor
test
push
or
movsb
mov
or
ficompl
dec
adc
push
cwtl
fidivs
lds
test
loope
arpl
sub
sub
pop
jl
ss
xor
cmp
je
loope
hlt
ljmp
in
pop
aam
mov
sub
push
cli
cld
fs
outsl
pop
fsubrs
dec
and
les
or
jns
or
mov
imul
or
pop
add
mov
sbbb
or
sbb
lret
cmp
and
mov
xchg
lcall
lcall
or
pop
cli
or
xchg
xchg
divl
pop
ret
out
mov
pop
sbb
insb
out
lods
lret
and
cmp
out
arpl
cli
movsb
sti
sub
add
dec
icebp
fnstsw
pusha
add
push
dec
and
lret
xchg
into
mov
ficompl
fmuls
xchg
mov
mov
cwtl
sub
inc
jns
loop
push
sub
lds
jnp
inc
movsb
sub
pop
adc
jbe
mov
push
jge
sbb
pop
sbb
out
aam
adc
add
lock
sub
sub
inc
nop
sub
pop
push
add
mov
test
push
mov
fwait
movsl
or
jbe
adc
pop
fistpl
dec
data16
int
aam
sub
hlt
or
xchg
xchg
lock
xor
inc
mov
mov
lds
lock
orl
jecxz
insl
pop
pop
jp
arpl
rorb
sub
mov
inc
shlb
jle
vmread
addr16
fidivl
imul
push
mov
adc
lcall
adc
shr
add
add
mov
cwtl
mov
mov
cmp
jl
cwtl
mov
cmp
movsl
aam
lret
add
fldenv
enter
out
ret
aad
iret
or
pop
or
adcl
gs
out
dec
je
lock
xchg
lret
xor
cmp
insl
in
fisubs
jg
lea
sbb
xlat
xor
sbb
jg
sbb
sbb
stc
fwait
xchg
into
test
imul
jo
cmp
mov
mov
dec
test
mov
loopne
pop
ret
scas
daa
inc
jle
xor
aaa
jbe
test
mov
mov
mov
pushf
sbb
fildl
sbb
mov
or
cmp
xchg
add
lahf
dec
sti
ret
sub
pop
inc
pop
cld
mov
adc
cmpsb
in
loope
push
test
dec
push
iret
addr16
fucomip
xlat
inc
xchg
sub
or
dec
fs
dec
mov
xor
and
in
cmp
or
cmc
jno
scas
sbbb
pop
push
or
jge
xchg
imul
leave
insb
subb
cmp
clc
add
in
pmuludq
jb
sti
shlb
stos
pushf
mov
jo
out
dec
mov
dec
mov
jbe
fldt
inc
mov
xchg
outsl
daa
jno
jbe
mov
cmp
out
lds
lret
into
int
stc
or
loopne
jge
fwait
stc
pusha
cmp
int3
pop
hlt
cmpsb
shl
in
jmp
mov
sahf
iret
inc
cli
xor
or
xchg
inc
and
inc
ds
leave
imul
push
sub
les
stos
cs
mov
das
push
xchg
int
jle
loop
sub
jno
sbb
pusha
inc
push
in
jne
sub
push
mov
push
mov
inc
mov
fwait
in
iret
into
fcomps
jg
dec
push
sbb
xchg
or
add
pop
pop
shll
std
xor
pop
mov
xlat
comiss
push
into
je
shl
out
rol
lcall
inc
popf
scas
in
mov
and
add
outsl
divb
scas
push
and
xchg
mov
icebp
insl
jo
loop
mov
jns
sub
out
sub
ljmp
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
mov
stc
bound
jle
add
xchg
mov
icebp
sti
inc
outsb
sbb
mov
aam
sub
pushf
or
or
rclb
xchg
cmp
add
lds
sub
mov
mov
idivl
mov
xor
dec
ret
lock
out
ret
xor
testl
mov
push
adc
out
adc
xor
rclb
lcall
fs
xchg
iret
pop
inc
lcall
xchg
addb
lea
mov
mov
lcall
repnz
outsb
mov
movsb
pop
sub
insl
sahf
adc
mov
sarl
pop
inc
adc
lea
smsw
cmp
shlb
imul
fcomps
jmp
ds
jnp
xor
inc
cmp
push
int3
nop
adcl
xchg
es
pop
mov
leave
or
mov
push
mov
rcrl
adc
sti
xchg
inc
xchg
repz
int
cmp
cmp
pop
xchg
sti
psrld
addr16
xchg
adc
or
call
lret
jge
rcr
inc
pop
dec
xor
out
lret
lret
push
push
jp
pop
push
mov
arpl
test
enter
negl
pushl
and
dec
or
rorl
push
pop
mov
xor
mov
scas
jp
dec
out
fs
adc
in
cmc
call
or
cmp
pop
or
mov
testb
imul
cltd
lods
dec
gs
loope
xchg
iret
xor
sbbl
cmp
mov
aaa
mov
and
xlat
xor
in
push
mov
mov
push
push
pop
mov
mov
mov
insl
mov
mulb
dec
jb
sub
xchg
loope
jg
push
jg
je
loope
xchg
addr16
sbb
and
cmp
sub
xchg
mov
fnstenv
clc
sub
test
sbb
xchg
xor
fnstenv
je
jg
flds
add
push
std
dec
sahf
push
push
add
or
lret
mov
cmp
stc
daa
fmuls
aad
ret
in
sub
aas
ret
mov
mov
push
int
std
iret
mov
jbe
fwait
add
das
icebp
jmp
cmp
in
ljmp
shll
cs
call
je
in
in
cmp
lock
mov
das
out
sub
add
jnp
mov
out
test
imul
aad
pop
adc
mov
pop
jl
into
push
cltd
scas
outsb
cmp
lea
cwtl
scas
pop
inc
mov
rclb
es
pop
bound
in
pushf
data16
sub
mov
shll
hlt
lds
dec
add
decl
mov
inc
lahf
fstps
ret
mov
xor
aaa
lret
adc
fstpl
adc
inc
lret
mov
sub
inc
dec
popa
and
rclb
pop
mov
mov
pop
aaa
fs
test
xor
loope
mov
mov
pop
and
cmp
pushl
fdivrs
push
xchg
test
jl
negb
jne
rclb
std
lahf
es
ds
stos
or
and
es
mov
add
mov
inc
push
push
jp
mov
mov
mov
lahf
rcrl
push
and
test
and
pushf
stos
sub
sbb
scas
pop
clc
test
sbb
enter
out
ljmp
jmp
call
je
dec
aas
lock
movsb
jno
dec
jle
aad
cmp
movsb
into
loop
lret
cli
or
in
jmp
fisttps
fwait
adc
imul
dec
test
outsl
jno
or
pop
adc
ficoms
inc
bound
fadds
sbb
lret
subl
jge
enter
adcb
repz
adc
inc
mov
dec
aas
fidivl
out
and
movsl
in
inc
aam
push
dec
dec
in
jle
jg
cmc
ret
jo
xchg
jle
xor
pop
int3
jge
insl
sub
cmpsl
jecxz
sbb
les
std
or
addr16
jns
xor
inc
in
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
jae
push
mov
cmp
arpl
pop
psraw
in
mov
mov
int3
mov
loopne
mov
pop
or
dec
ja
adc
into
mov
lock
stos
mov
ss
lcall
mov
sub
dec
adc
push
call
pop
in
push
shrb
mov
aam
sbb
pop
insb
into
ss
push
adc
sahf
or
jle
xchg
lods
aaa
pop
push
push
inc
lahf
gs
mov
push
xchg
jns
test
dec
or
adc
push
mov
jmp
stos
ficoml
lods
xor
scas
data16
jne
xor
insl
jg
imul
sbb
pusha
jae
fsub
pop
xchg
xchg
bound
dec
push
jp
hlt
push
jp
xchg
imul
das
push
cltd
mov
pop
daa
xchg
fwait
lahf
pop
dec
rclb
roll
pop
pop
pop
add
mov
sub
es
cmp
pop
push
mov
pop
cmpsl
lret
xor
inc
adc
push
pop
add
insb
out
xor
mov
sbb
in
loope
mov
inc
cmp
xor
pop
add
and
mov
hlt
inc
push
lea
jnp
imul
cmp
mov
popa
or
bound
icebp
bound
pop
mov
addr16
test
scas
pop
cmc
sub
adc
sbb
test
pop
inc
lret
jmp
mov
cmpb
loopne
inc
inc
jp
and
inc
cmp
dec
outsl
add
sbb
cmc
lret
jnp
pop
or
clc
and
sub
stos
jne
subb
shlb
xor
dec
stc
sbb
and
or
sahf
push
jbe
dec
in
lea
clc
in
sti
mov
inc
ret
sti
mov
or
js
dec
or
lods
push
test
fdivs
rolb
into
movsl
test
cld
xor
repz
xor
out
enter
lahf
fs
push
mov
sbb
std
jecxz
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
mov
xchg
jle
cmp
lds
fidivrs
cli
js
cld
jno
xor
xchg
dec
jl
aam
xchg
stos
adc
xlat
sub
mov
push
mov
mov
shrl
xchg
lcall
je
je
imul
stos
fisttpll
fildll
clc
sbb
mov
mov
in
or
mov
or
xor
add
xor
mov
lret
std
pusha
stos
movsb
movsb
clc
ret
idivb
adcl
lcall
imul
ja
lret
or
jns
jg
pop
xchg
insb
pop
xchg
jmp
pextrw
mov
test
jae
adc
jecxz
shrl
cwtl
inc
mov
push
dec
mov
sbb
cmp
adc
xchg
fxch
pop
add
int3
movsb
sar
pop
popa
dec
inc
xor
push
adc
lahf
xchg
xor
push
mov
jno
or
push
mov
jecxz
xchg
in
push
imul
out
push
mov
jecxz
adc
add
jo
xor
jo
cmp
popa
push
aaa
cmp
hlt
xchg
jmp
cmp
cmp
dec
push
sub
push
push
data16
inc
in
fisttpl
cmp
push
dec
cmpsl
or
mov
push
out
stos
orl
mov
pop
pop
mov
xor
psubq
add
aad
mov
push
sti
add
jb
mov
dec
and
jg
mov
loopne
shlb
push
push
insl
push
jl
outsb
repz
mov
push
or
int
test
shl
into
sub
dec
mov
adc
pop
stc
scas
fisttps
testb
stc
sub
inc
sbb
fs
out
mov
and
mov
xchg
stos
mov
jne
push
and
mov
push
xor
or
push
je
scas
add
mov
or
mov
jb
sub
xchg
inc
out
in
add
into
cmp
push
dec
push
add
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
cmpsb
or
jp
jle
jl,pt
jle
fs
cli
sbb
stos
iret
mov
add
mov
xor
push
mov
sbb
orb
rol
dec
ffreep
ret
adc
push
or
mov
sahf
cmp
orb
adc
sub
xchg
add
xor
jb
cmpsb
test
jbe
sbb
xor
fs
in
dec
add
cmp
xchg
sti
sbb
imul
mov
subb
rcrb
shlb
movsl
test
pop
mov
fsubrl
or
ja
or
cmp
insb
das
push
movsb
mov
nop
inc
loop
jno
pop
dec
mov
mov
ficompl
testl
fucomi
insl
jl
xchg
repz
add
cmp
fwait
fwait
xor
out
jecxz
test
push
mov
hlt
pop
movb
jb
push
pop
jbe
cmpsb
cmp
push
js
call
fmul
mov
mov
out
jmp
data16
mov
shrb
sbb
jl
loopne
pusha
fsubrs
mov
inc
mov
or
push
call
push
push
cmp
popa
sub
out
jne
mov
mov
xor
dec
js
test
lret
jb
or
pushf
and
test
repz
out
jge
lods
neg
cmpsb
ja
inc
out
sub
cmpsb
sub
xchg
inc
incb
mov
call
mov
push
repnz
cwtl
loop
jb
inc
repz
inc
xor
mov
cs
lret
cmp
xchg
xchg
xor
cltd
aas
pop
sbb
jno
cli
mov
enter
add
sbb
add
or
enter
sbb
sti
divl
sub
lahf
inc
xlat
and
push
jno
test
add
mov
out
xchg
shrb
adc
sub
leave
add
lock
xor
mov
mov
clc
xlat
dec
daa
pop
mov
push
cmp
lcall
fstps
sbb
mov
clc
or
lds
in
mov
inc
in
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
xorl
cmp
jle
mov
stos
ss
inc
mov
lock
daa
aaa
loopne
cmpsb
outsl
jecxz
add
inc
das
adc
out
xor
test
pop
outsb
std
aas
notl
pop
adc
push
repz
xchg
inc
or
icebp
nop
inc
and
jns
hlt
arpl
rcl
rcl
dec
pusha
mov
popf
cwtl
xlat
fwait
rorb
xchg
adc
into
stc
mov
mov
loopne
into
das
push
mov
pop
mov
leave
jo,pt
mov
insb
mov
inc
jae
sub
mov
pushf
inc
aam
arpl
adc
mov
mov
lret
dec
inc
cmp
loope
out
and
mov
cmp
and
fidivs
loope
orb
pop
adc
rorb
jge
pop
fists
cs
scas
test
adc
push
aas
and
mov
and
sub
xor
clc
sbb
and
add
push
push
das
sbb
in
dec
shr
pop
pop
fs
lret
stos
push
std
cmp
jle
or
clc
mov
das
shll
adc
sub
pop
adc
nop
repz
dec
mov
and
or
scas
adc
pop
pop
xchg
dec
add
dec
frstor
mov
daa
jecxz
adc
mov
xchg
sar
mov
add
into
flds
fidivl
mov
jno
imul
pop
mov
push
push
insl
add
push
insl
out
xchg
pop
push
adc
arpl
int3
mov
xlat
pop
sub
aad
ja
int
push
dec
adcb
add
pop
popf
outsl
test
add
mov
ret
push
cs
inc
push
cmp
xor
lock
lret
inc
mov
sarb
sbb
inc
stos
dec
pop
into
shrb
adc
mov
xchg
dec
pop
or
int3
add
ljmp
mov
pusha
jl
lock
cmp
addr16
testb
test
jle
dec
mov
dec
mov
xor
jb
xor
pusha
xor
mov
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
int
adc
mov
jb
pop
sub
sub
xchg
sub
addr16
cld
popf
dec
dec
inc
faddl
and
and
adc
push
or
std
call
scas
sbbb
out
inc
jo
fisttps
jno
out
dec
test
stc
sbb
mov
hlt
xlat
push
adc
in
enter
fists
jno
mov
xor
fsubl
dec
inc
lret
or
fwait
jmp
xor
inc
jecxz
flds
fiaddl
inc
and
mov
cmc
jbe
cs
adc
adc
push
jb
sarb
repz
xchg
dec
shr
jmp
cli
in
sub
js
ja
push
loope
cmp
adc
loopne
outsl
fucom
push
cmpsb
iret
push
stc
jg
and
sahf
mov
mov
int3
out
push
test
sbb
pop
mov
mov
lods
insl
fnsave
mov
testb
push
pop
push
adc
sub
mov
jo
push
mov
hlt
ja
movsl
fildl
jbe
cmp
cmp
lods
std
push
int
inc
or
xchg
or
nop
stc
sub
pop
mov
sub
sbb
sub
push
mov
dec
popf
fucomi
pop
push
inc
cmp
gs
in
sbb
mov
inc
and
cmp
imul
push
call
aaa
xor
sub
xor
imul
fmul
inc
pop
cmp
js
mov
sbb
mov
pushw
stc
insl
test
xchg
mov
mov
in
ss
outsl
sti
stc
jno
xchg
fs
xchg
mov
les
je
mov
xchg
pushf
push
xchg
or
int
adc
scas
jns
lods
ss
mov
dec
push
inc
cmp
movsl
sarb
mov
xor
inc
add
ret
adc
mov
mov
lret
cmp
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
mul
ljmp
adc
jle
aad
aaa
jg
aas
or
insl
pop
daa
sbb
pop
sub
loop
jo
mov
es
cmp
xchg
negb
cli
dec
and
mov
lret
mov
sub
std
mov
add
aas
cwtl
inc
xor
leave
pop
mov
jbe
outsb
mov
push
mov
cmc
jae
add
inc
push
insl
lods
stos
xor
mov
push
pop
add
and
push
adcl
pop
imul
cmpsl
mov
lods
arpl
cltd
movsl
or
stos
add
ffreep
cmp
fdivs
sbb
cmpl
adc
nop
mov
jle
fwait
decb
pop
pop
fistl
add
jbe
pop
cltd
jmp
test
lods
mov
mov
jns,pn
xchg
jmp
add
mov
cmpsl
test
aas
mov
lcall
pop
ret
stos
out
adc
pop
cmp
and
subl
push
or
mov
jmp
cmp
shll
xor
stos
pop
mov
jle
adc
jle
hlt
cmp
mov
lea
or
mov
cwtl
fwait
out
or
addr16
outsb
cli
fmul
or
or
mov
mov
push
adc
test
fs
in
rcrb
or
aad
sbb
mov
push
push
imul
sbb
stos
mov
fldcw
stc
xor
test
popa
pop
ds
ret
mov
push
cmp
mov
inc
shl
dec
cmp
int3
mov
adc
mov
mov
mov
push
aaa
into
shlb
sbb
sub
cmc
push
xor
andl
xor
adc
imul
or
cltd
and
insb
inc
add
fcom
mov
xchg
std
xor
jmp
dec
jmp
xchg
mov
jg
mov
mov
insl
in
dec
mov
bnd
call
les
lods
jecxz
mov
xor
les
sbb
jne
pop
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
and
jle
adc
jle
or
pop
mov
lds
lahf
adc
nop
adc
fcomps
enter
fdivl
pop
mov
bswap
adc
loope
pop
icebp
cmpsb
in
loope
mov
in
mov
aad
push
test
js
push
push
or
into
and
loope
bnd
dec
mov
cmp
insb
rorb
fnstsw
shlb
push
daa
imul
jg
push
mov
push
aas
inc
xchg
fbld
ja
in
mov
xchg
daa
jle
cli
fcmovne
push
pop
dec
ffree
or
loop
cmp
test
je
test
int
jmp
idivl
sub
inc
xchg
test
push
jp
scas
add
dec
jg
xchg
ret
pop
loop
out
mov
jmp
clc
cmp
sbb
xchg
loopne
mov
movsw
push
lds
jp
sub
cmpsb
ljmp
dec
or
mov
jmp
clc
mov
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
xchg
mov
push
cwtl
jle
adc
jle
jl
pop
adc
xchg
mov
insl
in
sbb
popf
and
xlat
mov
dec
repnz
add
sahf
movsl
or
mov
int
sub
stos
pop
bound
pop
test
cld
sub
sbb
push
xchg
cmp
bound
sbb
lahf
cmc
sbb
push
dec
bound
cmpb
adc
mov
mov
jo
push
daa
mov
add
mov
fildl
movsb
xchg
ud2
sbb
xlat
sahf
idivl
je
cmc
test
sub
or
and
ss
jb
dec
add
mov
jp
nop
mov
lock
xor
mov
arpl
dec
or
fwait
lcall
pop
shr
sub
ret
xchg
je
out
push
or
ljmp
push
sahf
sbb
jmp
cmp
into
add
test
fwait
idivl
mov
shlb
inc
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
add
dec
sub
jle
mov
aad
shrb
inc
stos
xchg
ret
shll
jns
cwtl
adc
adc
lock
lret
jp
add
pop
neg
pop
stc
insl
lea
sbb
decb
sub
jle
arpl
scas
cmp
inc
mov
cld
ret
xchg
mov
int
insb
in
imul
scas
aaa
lret
daa
ret
mov
lahf
daa
ret
push
frstor
fucomi
dec
test
or
sub
sbb
xchg
ror
in
push
inc
mov
les
push
fwait
ret
push
test
sub
lret
mov
insl
pop
sub
mov
dec
pop
scas
rorl
aas
pop
inc
pusha
sbb
cmp
push
xor
data16
test
testb
mov
pop
lock
std
jl
mov
scas
pop
push
sahf
push
adc
mov
ret
pop
inc
les
or
imul
repz
mov
or
xorb
mov
out
rolb
cmpsb
repz
fsts
inc
out
cmpsl
mov
mov
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
pusha
mov
fdivrl
cld
dec
hlt
popl
push
inc
and
and
sub
add
addl
mov
xlat
leave
cmp
or
mov
inc
push
pop
test
push
out
popa
xchg
adc
int3
or
lock
mov
mov
xor
ss
or
add
shr
mov
aad
push
out
cmp
outsl
mov
mov
in
xchg
fidivrs
push
lock
cmp
sbb
inc
shl
jo
sbb
movsb
loop
mov
std
hlt
mov
adc
cwtl
ja
sub
cli
cmpsb
stos
fsubs
xchg
pop
jb
scas
fistl
popw
mov
jno
adc
mov
loop
mov
lahf
fidivl
outsb
sbb
out
lret
mov
mov
ja
sahf
xchg
ror
adc
outsb
jne
and
ret
insl
xchg
push
inc
mov
loope
push
fnstenv
pop
inc
push
adc
mov
movsl
cmp
stos
insb
shlb
rorl
subl
inc
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
xor
jle
adc
jle
imul
shrl
lods
ffreep
mov
insl
xor
addl
mov
jecxz
cmp
mov
lds
pop
push
xlat
adc
sub
add
sub
mov
movsb
xor
or
mov
mov
cmpsl
push
insb
imul
test
jmp
pop
pop
cmp
mov
nop
mov
fistl
dec
imul
pop
xor
sub
sub
lods
xlat
scas
jbe
out
gs
or
pop
in
cmp
rcrb
pusha
push
mov
mov
insb
leave
cmpsb
pop
xchg
cli
pop
mov
jle
stc
clc
cmp
or
xlat
inc
test
lods
mov
pusha
or
mov
mov
mov
pop
adcb
incb
adc
sar
dec
lods
hlt
inc
push
test
sarl
push
loopne
or
stos
pop
mov
sahf
shl
sbb
hlt
mov
test
stc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
in
movsb
jle
adc
jle
adc
popf
dec
dec
subb
push
mov
gs
gs
into
jne
add
lds
push
push
sbb
jns
mov
addr16
leave
jge
out
cmp
lcall
jg
outsb
add
sub
mov
adc
sub
or
cld
mov
cmpsl
push
cld
cmp
fwait
or
pop
cmp
push
mov
and
subb
cmp
adc
adc
ficoms
out
mov
fcoml
jg
mov
ret
out
xor
add
mov
and
lahf
sahf
xor
aas
add
mov
sbb
pushf
mov
fstpl
pop
sbb
jecxz
call
dec
inc
jge
cwtl
sub
out
cmpsl
out
sahf
sub
pusha
jl
lcall
add
xchg
popf
adc
leave
sbb
repz
dec
cli
push
in
lcall
stc
xchg
movsl
xlat
movsl
popf
push
popf
rsqrtps
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
enter
jle
jg
jle
stc
push
xchg
lahf
data16
lret
xor
shlb
int3
or
jo
sub
das
es
add
push
xchg
dec
jne
out
or
jbe
cmp
mov
into
dec
int3
cmpsl
notl
fidivl
aaa
or
adcb
pop
pop
cli
push
jg
mov
out
sti
int
nop
jge
hlt
imul
outsb
pop
scas
popf
sub
xor
xor
into
or
xchg
sub
sarb
push
xor
mov
int
mov
shll
aas
add
push
into
test
in
sub
pop
xor
pop
jno
adc
adc
cmp
int
bound
bound
int
js
in
test
in
add
loop
fdivrl
clc
mov
sub
jge
mov
popa
in
and
cld
mov
jmp
idivl
sbb
mov
push
push
cmp
add
out
pusha
push
and
lea
add
sub
mov
mov
xchg
cmp
std
or
pop
add
nop
mov
jge
mov
popf
movsb
ds
in
cli
or
cmp
push
lods
sbb
aas
add
test
mov
repnz
into
mov
cmp
sbb
aas
push
inc
push
jmp
shrb
ja
and
test
cltd
xor
das
cmp
jbe
add
cmp
fdivs
inc
inc
fbstp
ror
adc
push
jp
jmp
fwait
int3
mov
outsb
cli
inc
inc
cmc
jne
and
daa
ret
sti
aam
mov
jg
aaa
mov
out
cmp
lret
jns
addr16
adc
jl
outsl
dec
das
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
rcrb
popa
dec
xor
bndldx
loope
int
push
push
dec
mov
jecxz
orl
fwait
mov
cld
pop
imul
or
outsb
cli
inc
jp
sti
mov
mov
imul
xchg
sub
sbbb
stos
movsl
popf
outsl
pop
push
push
dec
sbb
dec
popf
push
mov
adc
notl
leave
pop
mov
ja
dec
hlt
pushf
lret
xchg
dec
loopne
dec
and
pop
faddp
sub
pop
lods
in
fistpll
test
cmc
lcall
mov
subb
push
leave
pop
dec
or
or
in
push
in
mov
mov
or
mov
xchg
test
mov
mov
inc
xor
addr16
cmp
scas
adc
adc
inc
sub
std
add
ret
mov
adc
ljmp
xlat
dec
sbb
insb
shrl
mov
sbbl
call
mov
xchg
xor
aad
in
mov
dec
push
out
jmp
mov
inc
sti
rolb
mov
xor
aas
lret
call
pop
cmpsb
sbbb
cmpsb
ds
movsb
repz
sbb
adc
stos
xchg
pop
sbb
gs
sub
mov
sub
in
xlat
and
dec
sbb
rcrl
insl
jmp
mov
inc
cmp
cmp
cmp
or
push
mov
adc
cmpl
jecxz
mov
xor
into
fldl
mov
dec
cmc
jb
xchg
pop
sub
jnp
fsubl
cmpsl
arpl
cmp
xchg
sub
pusha
into
repz
mov
or
adc
mov
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
gs
mov
jle
shrl
pmaxsw
xchg
mov
sti
xchg
lret
xchg
loope
lret
xchg
jnp
pop
fdivrl
inc
insb
mov
fstpt
sarl
mov
outsl
sbbb
pushf
mov
iret
test
les
insb
mov
test
xchg
and
clc
test
loopne
data16
pusha
fnstenv
push
outsb
ret
jmp
or
popf
js
movsb
es
jge
xchg
add
sub
sub
movsb
sbb
fists
or
js
dec
pop
sbb
xchg
lods
inc
orb
push
cmpsl
pushf
cmp
mov
das
xor
mov
or
nop
ror
jg
push
call
ret
mov
push
cmp
int3
pop
jo
mov
mov
xor
dec
pop
and
inc
mov
fcoms
mul
add
cmp
sub
loop
jae
lret
mov
pop
shlb
cmc
dec
das
pop
push
test
pmaxsw
fwait
xchg
repnz
call
jecxz
xchg
mov
push
daa
xchg
in
outsb
or
lods
icebp
push
out
mov
pop
mov
push
mov
adc
xchg
test
xor
mov
pop
inc
xchg
lret
outsl
enter
rcrb
scas
push
and
jle
push
xchg
mov
test
pand
pusha
mov
dec
sub
jae
mov
add
movsl
mov
push
int
ja
lcall
cmp
gs
stos
popf
jmp
cwtl
jecxz
clc
sub
cmp
stos
jae
mov
mov
adc
dec
rcl
dec
add
add
mov
push
mov
cwtl
xor
mov
in
xchg
stos
pop
ss
xchg
bound
or
enter
scas
add
imul
out
scas
inc
js
out
insb
xor
imul
loope
inc
pusha
pop
xchg
dec
clc
sbb
and
outsb
testl
pop
push
es
sahf
lds
or
push
push
dec
pop
ljmp
in
push
jle
pop
hlt
loope
cmp
xchg
dec
sub
es
pop
movsb
xchg
or
mov
jo
cwtl
jns
icebp
in
setno
ret
lock
cmp
cmp
jns
enter
push
push
jnp
mov
fs
cmp
mov
stc
xlat
movsl
iret
sti
sbb
loopne
jns
popa
fidivrl
bound
xchg
in
jo
mov
jmp
push
lds
adc
jle
pop
sub
loope
nop
movsb
sub
push
shlb
cmpb
pushw
pusha
in
cmpxchg
mov
mov
dec
or
xor
mov
add
xor
cmpsl
cmp
add
add
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
dec
aam
jle
jl
jle
pusha
adc
mov
add
lret
add
and
addr16
cld
scas
xchg
xchg
decb
dec
cmp
scas
jmp
jle
shrl
add
inc
mov
pop
mov
aam
adc
test
cmpsb
out
incb
dec
add
push
mov
add
pop
sbb
cmp
adc
push
xchg
pop
jne
or
lock
lock
loope
pop
test
mov
in
std
test
and
adc
push
jns
mov
sbb
lods
aam
jmp
cmp
popa
mov
jmp
into
xchg
inc
mov
pop
jl
jle
sahf
rorl
push
orl
sarl
inc
std
mov
mov
hlt
out
push
rorl
jge
push
cmc
add
push
push
adc
sbb
xchg
push
mov
incb
push
enter
lds
stos
mov
popf
iret
sti
pop
sbb
lods
xchg
mov
data16
push
and
mov
and
push
outsl
aaa
xor
out
iret
cwtl
push
int3
cmp
pop
lock
push
repz
or
fmuls
xlat
rcll
push
insb
mov
inc
repnz
sub
cmp
pop
shrl
fcom
pop
fbstp
adc
outsl
mov
xor
es
mov
push
in
std
adc
push
rcll
mov
andb
push
mov
call
mov
lea
push
jge
inc
xchg
add
dec
scas
mov
ss
xchg
jne
adc
shlb
rcl
outsb
icebp
mov
movl
mov
out
or
test
arpl
mov
ds
popa
pop
aas
dec
sarl
sub
sub
add
lock
dec
xor
cmp
push
xchg
test
xlat
mov
test
lcall
sbb
mov
cwtl
xlat
dec
fwait
out
test
cltd
iret
shll
fisubrs
dec
sbb
adc
sarb
mov
pop
jp
jecxz
mov
and
cld
lret
std
or
dec
inc
xor
mov
arpl
imulb
pop
and
xchg
repnz
adc
aas
sub
ds
and
aaa
ds
fildl
jecxz
inc
cmovns
arpl
xchg
roll
fistps
dec
pop
or
rcll
sub
push
xor
mov
jle
out
mov
jecxz
sub
jb
out
and
cmp
xchg
lods
mov
add
frstor
add
xor
pushf
or
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
adc
jle
jl
jle
repnz
xor
stos
arpl
jnp
jo
jo
adc
insb
popa
in
mov
lcall
rcrb
subl
jbe
inc
and
dec
repz
ja
rcl
xor
inc
xor
iret
xchg
mov
xchg
sti
and
scas
movsb
or
sub
jb
in
fwait
xlat
push
inc
mov
xchg
loope
dec
xlat
mov
pop
mov
leave
xor
dec
mov
push
in
mov
xchg
mov
mov
xchg
or
orb
mov
dec
in
and
jne
adc
lret
adc
cwtl
lret
dec
in
dec
add
fnstsw
cld
push
jle
loope
xchg
mov
or
dec
outsl
mov
mov
nop
rorl
sub
jecxz
das
mov
and
xchg
inc
lods
scas
jae
lds
dec
push
mov
or
cmp
fs
mov
inc
jae
arpl
sub
cmp
add
dec
xchg
and
out
xchg
mov
pop
pop
aas
sub
arpl
mov
jle
andb
pop
mov
cli
jge
ret
outsb
push
mov
sbb
cmpsb
sbb
or
ret
outsb
cltd
mov
dec
imul
in
push
rcrl
add
ret
out
inc
and
les
and
or
sub
lret
pop
and
mov
jecxz
aas
dec
daa
icebp
sbb
jmp
sbb
loopne
rcr
rcll
pushl
arpl
mov
test
jmp
and
imul
call
out
mov
sbb
pop
test
mov
aad
and
sub
ret
push
push
push
rsqrtps
cmp
popf
sarl
pop
lcall
dec
test
sbb
cmp
outsb
add
hlt
stc
icebp
sub
sbb
sub
or
mov
mov
loopne
decl
pusha
jle
mov
addr16
stos
cmp
fisttps
cmpsl
test
das
outsl
cmp
or
ret
hlt
addr16
inc
mov
mov
xor
hlt
or
cltd
cs
mov
leave
out
mov
pop
std
jbe
xchg
xor
lods
lea
sarb
xor
jle
call
test
shrb
mov
sbb
jl
nop
push
out
mov
xlat
pop
loop
mov
ficompl
pop
dec
xor
jns
mov
inc
shll
dec
xchg
xchg
push
pushf
addl
inc
aad
fs
pop
jp
lcall
and
mov
adc
dec
andps
dec
inc
std
insb
scas
in
jmp
push
sub
jmp
int3
mov
inc
fimull
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
sbb
jg
mov
jle
jge
jle
xor
popa
pop
jle
je
mov
xchg
es
dec
je
fs
ja
adc
mov
sbb
outsb
mov
jp
imul
push
iret
jns
inc
cmp
or
lods
add
jb
daa
fnstcw
std
fs
int3
or
jle
jns
xlat
mov
mov
lahf
mov
cs
aam
adc
dec
xchg
movsb
pop
lret
inc
add
jmp
mov
ljmp
adc
int
cmc
pop
stc
in
negb
jns
sbb
sbb
adc
ljmp
cltd
addr16
sub
mov
or
shll
pop
lret
addr16
xor
jecxz
das
pop
int3
mov
out
dec
jne
in
in
loop
push
mov
cmp
addr16
jb
mov
push
es
sbb
pushf
mov
sbb
sub
inc
or
sub
dec
test
repz
je
shll
mov
movsb
mov
jmp
enter
test
and
mov
dec
add
repnz
push
mov
add
dec
pop
cmc
ficoms
xor
jb
sub
mov
dec
adc
cmp
lock
adc
sbb
movsb
jl
fs
fdivrs
lahf
and
cmp
int
mov
cltd
out
adc
test
int
and
mov
fwait
lcall
or
out
bound
and
dec
fnstsw
dec
test
cwtl
mov
imul
pop
lea
scas
out
inc
dec
add
or
iret
data16
sbb
sbb
ficoml
test
sbb
in
pop
popf
inc
lods
mov
jno
mov
sarb
pop
aad
dec
push
mov
pop
sub
push
cmpsb
sbb
mov
mov
int
adc
dec
fmulp
in
pop
push
mov
je
movsl
sbb
xor
mov
xchg
ljmp
mov
mov
popf
test
jb
and
sub
or
rcrb
loopne
jnp
mov
cs
out
out
add
pop
jecxz
or
sahf
mov
inc
lahf
ret
dec
arpl
mov
jae
pop
pop
mov
out
cld
add
int3
shrl
int3
mov
addr16
adc
lea
dec
stc
add
rclb
fisubrl
subl
mov
pop
cmp
dec
add
shr
popa
mov
and
push
jno
imul
or
cmp
xor
pop
jg
js
cmp
pop
imul
cmp
gs
fildll
sarb
jmp
or
pop
jno
xchg
add
xchg
sbb
mov
jle
jge
jle
push
xlat
test
mov
adc
adc
cmpsb
test
mov
dec
mov
bound
bound
mov
rolb
sub
mov
mov
sbb
cs
jl
in
adc
dec
out
sbb
mov
xchg
out
add
roll
inc
mov
mov
movsl
fdivl
in
dec
cmp
ret
mov
and
sub
dec
lods
cmp
fstpt
sbb
faddp
inc
sbb
mov
test
add
andb
xchg
push
mov
je
adc
dec
xchg
inc
fidivrs
cmp
add
cmpsb
test
loopne
test
push
cmc
mov
pop
push
fucomp
dec
inc
xchg
insb
dec
sub
xor
movsl
mov
inc
leave
mov
xchg
adc
fidivl
ja
cmp
das
mov
sbb
jg
add
mov
ljmp
fidivrl
pusha
cmpsl
movsb
mov
pop
inc
jl
je
cmp
das
push
scas
cld
pop
fcmovnb
call
xorl
scas
add
nop
pushw
int3
push
test
ror
fldcw
xchg
mov
clc
sub
rorl
outsl
les
push
ret
arpl
in
int
adc
mov
orl
popa
testb
int3
cltd
mov
int3
lea
jns
mov
in
in
in
iret
in
test
push
out
test
sahf
xor
mov
jle
stos
cmp
stos
jne
or
mov
dec
fnstcw
push
and
das
rcrb
cmp
subb
int
sbbl
insl
ss
jp
push
lock
xchg
dec
lea
mov
and
lcall
call
std
fisttps
mov
mov
or
adc
dec
shlb
mov
dec
cli
jp
int3
int
inc
push
jnp
xorb
xor
mov
xrstors
jne
loopne
add
cmp
mov
mov
out
imul
xor
cltd
xchg
stos
sub
sub
pop
lahf
mov
imul
test
es
dec
daa
add
pusha
mov
push
addr16
neg
push
push
mov
popf
repnz
jp
and
xchg
outsl
cwtl
dec
pop
sbb
adc
sub
jns
repnz
fisttps
imul
out
cmp
out
and
sti
nop
pop
repnz
pop
mov
add
dec
xchg
xchg
mov
cmp
mov
or
sbb
push
mov
lods
shll
and
pop
lret
stos
adcl
lds
sbbb
xchg
loope
inc
jecxz
push
mov
lret
sbb
icebp
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
sti
sbb
scas
jl
jle
orb
imul
dec
fstpt
push
jb
dec
mov
sbb
js
mov
lcall
scas
ja
repnz
mov
into
mov
int
pop
inc
pusha
fildl
cmp
sar
out
sub
xor
hlt
out
shlb
call
stos
add
sub
pop
les
in
add
mov
loope
call
cmpb
pop
test
add
mov
lods
xchg
cwtl
movsl
aam
mov
cmpsl
iret
adc
mov
sub
push
insb
inc
pop
fdivs
mov
out
inc
and
ljmp
outsl
or
cmp
xor
mov
out
jnp
mov
movsb
lods
and
or
xchg
push
push
ljmp
mov
mov
inc
mov
pop
gs
movsl
shlb
lods
ss
mov
mov
mov
pop
sub
dec
pop
inc
xor
outsb
loopne
pop
lret
sbb
jb
repnz
mov
jae
loop
shr
pop
inc
mov
sti
or
in
add
ljmp
test
fildl
mov
out
push
popf
push
mov
fcoms
jbe
cld
dec
add
mov
pop
cmp
dec
popf
sbb
sbb
mov
xor
fsts
cmc
repnz
mov
dec
cmp
pop
or
cmp
dec
pop
mov
jo
popa
dec
pop
adc
lret
and
stos
add
sub
inc
pop
ljmp
cmp
xlat
or
fucomi
call
les
std
jb
xor
mov
shlb
and
push
enter
and
xor
in
mov
mov
push
mov
mov
ss
jp
xor
in
xchg
pop
pop
gs
dec
or
dec
dec
aas
mov
sbb
or
and
mov
or
icebp
mov
sub
out
cmp
adc
cmp
or
cmp
cmp
aaa
fildl
pop
push
xchg
repnz
ret
or
fcmovnu
repnz
push
pop
stos
xchg
sub
fcomi
adc
fstps
mov
lds
scas
test
dec
loopne
imul
int
sbb
cmc
sarl
jo
daa
mov
sub
ljmp
les
out
in
lahf
fldenv
sbb
xchg
rorb
test
cld
lcall
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
or
push
movsl
inc
repnz
dec
sbb
xor
dec
mov
sbb
push
xorb
xchg
adc
mov
mov
test
jp
enter
in
adc
add
jge
pop
xor
scas
imul
scas
sub
sub
add
mov
push
jle
pop
decl
cmp
sbb
icebp
push
or
xchg
stos
and
push
push
mov
xor
xlat
test
jb
xchg
cmpsl
push
inc
adc
adc
movsb
sbb
inc
push
les
xchg
inc
and
stc
pop
call
pushf
mov
mov
pop
lods
mov
inc
ja
xchg
leave
fnstsw
push
xchg
mov
leave
pop
std
mov
cli
out
or
mov
jge
and
leave
sub
and
adc
outsl
popa
sbb
jne
outsb
inc
mov
stos
les
test
jbe
jno
sub
stos
push
subl
cmp
push
mov
inc
cmp
lock
push
lea
fnstcw
lea
aad
lahf
sahf
add
andb
add
cmpsb
mov
nop
mov
push
mov
lds
insl
inc
mov
jge
sub
pop
sahf
es
scas
adc
in
adc
sub
in
dec
fucom
dec
addl
dec
dec
arpl
sub
adc
ret
or
je
pop
add
jb
sub
test
scas
xchg
jno
or
mov
ljmp
dec
testb
inc
mov
adc
clc
push
std
je
dec
xor
cmp
jbe
lock
mov
mov
out
lods
ret
pushf
cmp
adc
jmp
test
cltd
mov
sub
movsb
sub
mov
sbb
scas
xor
jl
add
mov
mov
pop
jmp
stos
lret
pop
std
sub
pop
inc
loope
int3
pop
clc
int
xchg
movsl
xor
lret
dec
das
aad
aam
or
jp
jo
out
xchg
test
push
and
les
push
addr16
pop
or
mov
stos
jae
push
cmpsl
sahf
pushf
pop
pop
ds
gs
pop
scas
rcrb
into
push
inc
fisttpll
push
loop
mov
cmpsb
test
add
jmp
add
fdivl
lock
xchg
pop
pop
cmpsl
mov
jle
jl
jle
int3
mov
dec
xchg
or
or
push
or
mulb
or
bswap
sub
mov
fstps
scas
into
mov
jb
out
daa
je
ds
lret
ljmp
ret
xchg
push
sahf
sbbl
dec
cmp
insb
aas
imul
pop
mov
sbb
jge
sub
mov
sbb
adc
loope
cmp
and
jnp
xchg
aas
loop
stos
lock
fistpll
mov
dec
das
sub
ljmp
loope
or
jmp
int3
ljmp
in
pop
mov
and
sti
in
rcl
cmp
cmp
aam
sbb
mov
ss
mov
xchg
xlat
jo
push
jns
mov
mov
stos
sbb
mull
cmp
in
les
cmp
gs
inc
js
and
adc
adc
xchg
mov
fcomps
and
pop
cli
ret
int
rcr
aam
shrb
movsl
push
jmp
and
popf
fdivrl
mov
add
push
clc
push
stos
mov
mov
inc
mov
dec
jbe
sbb
or
jecxz
dec
and
mov
mov
push
enter
add
mov
inc
push
jae
xor
pop
mov
cld
and
xorb
mov
dec
adc
inc
movsb
outsl
or
mov
into
and
lahf
fs
lods
scas
push
push
rcll
aam
cltd
lock
hlt
ljmp
cmpsl
mov
xchg
in
and
loope
gs
cmp
mov
add
or
xchg
std
pop
nop
mov
jecxz
and
inc
sub
jns
add
out
pop
loope
inc
inc
scas
sbb
add
push
out
inc
jp
push
adc
js
jnp
xchg
xchg
xchg
scas
lcall
cmpb
sub
fld
into
into
repz
mov
imul
scas
mov
push
lret
or
or
cld
lret
notl
mov
pusha
arpl
xor
enter
loope
sbb
cmpl
repnz
jge
xchg
lea
jo
lds
jns
popf
ja
sbb
add
inc
movsl
movsl
or
pop
ret
sbb
sbb
and
mov
int3
jno
jnp
add
add
add
push
push
lock
outsb
dec
mov
fwait
jmp
jle
scas
jl
jle
push
inc
aas
pop
dec
mov
push
cmpsb
push
ficoml
xchg
push
mov
hlt
sub
push
xchg
pop
ds
or
pop
loop
mov
rcr
stos
sbb
jmp
or
mov
pop
sar
fs
jl
cmp
cmp
fistl
ret
pop
rcr
mov
pop
xchg
push
dec
mov
iret
inc
sbb
lods
addr16
or
scas
js
js
mov
add
js
testb
cld
sbb
dec
cmp
cmp
jle
in
notb
les
mov
mov
inc
mov
decb
cmpsb
dec
sti
sti
mov
cmp
es
dec
xlat
popl
roll
shll
push
push
lods
cmp
addb
lret
jge
push
mov
ret
rcrb
sahf
aam
test
pop
xor
and
push
rorl
addr16
mov
imul
nop
enter
aas
cmc
mov
dec
dec
rol
mov
pop
iret
ljmp
aam
orb
in
sub
and
xor
pop
adc
outsb
cmp
xor
lds
pop
scas
push
inc
xor
pop
mov
mov
ret
inc
jmp
sarb
mov
fdivp
roll
inc
lahf
adc
rol
or
mov
sbb
loopne
outsl
adc
int3
movsb
lds
pop
or
orb
push
mov
test
fimuls
cmp
in
dec
outsb
aam
xor
dec
pop
scas
repnz
rcll
xchg
mov
in
mov
jae
adc
int3
jno
mov
nop
push
daa
cltd
fsubr
popa
ja
loopne
iret
mov
xchg
jecxz
pop
xchg
hlt
aaa
das
lds
dec
in
rcll
insl
pop
sbb
and
sub
and
aaa
mov
nop
sbb
cmp
gs
adc
jns
cmp
lret
inc
cmpsb
push
and
cs
dec
inc
sarb
jecxz
sub
add
fcomps
out
dec
add
xchg
aaa
cmp
mov
or
xchg
adc
jle
int
sbb
imul
adc
jno
xchg
pushf
inc
jle
loope
or
out
out
inc
inc
addr16
cmp
mov
dec
pushf
cmpsl
fcmovne
push
mov
cmp
shrl
or
adc
adc
cltd
jp
pusha
or
mov
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
sti
dec
out
inc
jle
scas
jl
jle
xchg
push
repnz
loope
roll
and
add
outsb
jnp
sbb
lcall
push
addr16
jecxz
mov
in
xor
xorb
mov
xchg
or
mov
mov
inc
into
js
dec
cwtl
cmp
mov
sub
cld
dec
push
aam
mov
mov
cpuid
pop
mov
enter
aam
lods
outsl
pop
ss
mov
std
dec
test
das
mov
movsl
jle
dec
jge
dec
ret
mov
jge
std
fnsave
stos
push
mov
inc
inc
pop
imul
std
add
fst
std
pop
lcall
sbbb
jl
sub
mov
in
fcmovnu
in
in
pop
jno
les
sete
ja
jbe
xchg
mov
mov
test
xchg
or
outsb
into
pusha
ficomps
int
xor
mov
bound
rol
test
xor
sahf
lcall
setl
jbe
push
jb
pop
pop
in
jecxz
stc
mov
add
pusha
dec
cmp
lret
jne
jge
inc
xor
or
lret
inc
je
stos
xor
xchg
sbb
dec
shll
imul
cmp
jnp
or
loop
mov
xor
inc
arpl
inc
mov
sarl
jae
lds
and
xlat
add
mov
dec
test
or
add
lock
aad
test
and
shlb
cmp
out
inc
leave
cmovl
iret
xchg
sub
mov
jle
adc
aam
repnz
fwait
sub
nop
push
fwait
xchg
pusha
sub
dec
cltd
cld
pop
into
jns
dec
cmp
leave
push
push
gs
insl
add
loopne
test
iret
xchg
loopne
push
adc
sbb
daa
mov
sub
xor
hlt
dec
lret
pop
jo
fmul
loop
xchg
xor
pop
mov
in
pop
mov
dec
lret
das
mov
pop
aam
pop
dec
dec
xchg
jecxz
and
adcb
mov
cltd
cli
inc
sbb
ror
in
push
call
mov
jl
push
xchg
xchg
and
lds
mov
in
cs
lods
and
cmp
jecxz
je
lret
and
dec
rorb
jl
jp,pt
lcall
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
dec
stos
add
jle
scas
jl
jle
stos
fdiv
jb
popf
sub
pop
hlt
pusha
adc
jecxz
or
sub
mov
pop
loope
mov
inc
stos
xor
jae
adc
nop
fdivr
sbb
sbb
xchg
jp
sub
jnp
jns
lock
imul
stc
add
scas
ja
sub
scas
xchg
ds
mov
xor
icebp
addr16
pop
jmp
daa
in
shr
lea
push
pop
mov
cmc
pop
js
cli
das
in
sbb
and
sbb
stos
pop
test
jle
push
dec
jno
popf
add
push
cmp
test
push
incl
adc
sahf
inc
lock
or
inc
jp
push
inc
es
push
mov
xor
inc
pop
jbe
insb
stos
sub
mov
fstl
aaa
pop
scas
mov
pop
push
sub
cmpsb
xchg
jecxz
cmp
aas
dec
or
mov
sub
js
lcall
push
mov
pop
ja
dec
cli
xchg
cmp
mov
sarb
mov
xchg
in
fadd
loop
sbb
mov
dec
nop
js
popa
ds
jae
pop
notl
jns
clc
mull
push
sbb
or
outsb
shrl
nop
lods
pop
push
pop
xchg
mov
lea
rolb
mov
fisttpll
jg
mov
insb
daa
adc
mov
imull
sub
mov
add
push
rolb
dec
jecxz
jmp
ja
push
xchg
insb
cld
add
mov
xor
dec
aad
sarb
hlt
adc
jnp
enter
cli
sub
mov
fstpl
adc
in
adc
mov
push
sti
and
pop
mov
cld
adc
mov
nop
sub
jo
into
cmpsb
xchg
mov
xchg
sub
jno
dec
push
stc
sbb
cmp
add
ds
ss
cmp
fildll
jns
std
rep
fdivr
fisttpll
loope
push
adc
jb
aam
jne
sbb
dec
and
adcl
xchg
fsubl
sub
push
cmp
or
andps
stos
cmp
or
rorl
xchg
push
movsl
bound
addb
enter
rol
outsl
push
xchg
pop
cmp
pushf
jbe
pop
adc
movsb
in
mov
jecxz
lods
outsb
xchg
push
mov
lea
pop
cmp
cmp
push
in
ret
push
movsb
notb
mov
daa
jnp
fisttps
sbb
push
or
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
add
cmp
xchg
jle
jg
jle
xchg
mov
loop
and
movsb
out
fwait
adc
dec
pop
scas
mov
imul
sub
cmp
lret
mov
push
sub
cmp
add
loop
pusha
fsubrs
push
push
in
popa
adc
adc
sub
adc
cmp
mov
mov
mov
int3
fimull
pop
divl
lcall
pop
shll
sub
cltd
adc
aas
in
popa
push
iret
sub
loope
pop
les
sbb
in
std
xchg
mov
jnp
jnp
mov
pusha
inc
lahf
sarl
xchg
in
and
inc
in
scas
inc
test
jnp
nop
lock
cld
mov
lods
adc
pop
adc
aam
fcmovbe
jbe
insl
cmp
and
andb
lret
insl
sub
loopne
mov
icebp
pop
push
fisttpl
adc
outsl
sbb
adc
mov
lods
mov
decl
sub
pop
cmpsb
mov
hlt
mov
xchg
dec
jbe
jecxz
sub
out
lods
mov
pop
push
ret
xor
jmp
sub
leave
dec
subps
push
js
and
pop
push
xchg
jmp
rcl
sub
out
mov
inc
pushf
push
adcl
outsl
movsb
pushf
insb
xor
daa
mov
dec
mov
xor
js
adc
inc
rcrl
imul
enter
mov
test
stc
mov
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
fldln2
inc
out
sub
jle
movsb
jg
jle
movsb
and
insl
lods
pop
gs
cmp
mov
xchg
inc
dec
mov
in
push
jp
cmp
bswap
mov
inc
inc
fstpt
cmpsl
out
jmp
lods
sub
movsb
outsb
rcl
cmp
aaa
imul
cmp
call
jg
adc
shrb
mov
jnp
lock
fbstp
cmpsb
add
dec
or
jle
pop
clc
shll
cmp
fwait
cwtl
fidivrs
xchg
push
push
mov
scas
add
mov
lods
xchg
push
ja
or
mov
mov
jge
aaa
xchg
push
pxor
fcoms
sbbb
lock
orl
ds
in
in
add
and
out
push
xchg
and
addr16
mov
mov
hlt
mov
movsl
cmp
cmc
jmp
xchg
imul
adc
inc
xchg
jecxz
and
add
or
je
std
pop
pop
sbbb
js
adc
pop
mov
sbb
push
pop
bound
ret
jno
xchg
stos
inc
icebp
not
das
cmp
ss
ret
xor
daa
inc
inc
xor
cwtl
cmp
mov
lahf
pop
fldenv
in
adc
in
lahf
jge
sbb
pop
fcomps
xchg
sbb
jp
movsb
xchg
adc
fimull
js
cmc
push
cmc
jae
ficoms
cmp
dec
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
faddp
lret
roll
add
add
into
in
push
fnsave
fnstcw
fisubrs
jb
stos
sti
xchg
aaa
leave
std
iret
dec
ret
ret
arpl
daa
jecxz
data16
add
dec
in
push
inc
lds
sbb
or
and
stos
imul
mov
mov
in
cmp
xor
adc
mov
dec
inc
jmp
lret
or
sti
adc
sub
lahf
fidivs
and
lds
inc
push
fimuls
add
cld
and
dec
mov
jbe
movsb
or
dec
jns
push
push
mov
pcmpgtb
aam
cmp
sbbb
or
xchg
xchg
inc
xchg
sbb
mov
in
cmp
dec
adc
iret
sub
dec
add
daa
mov
lret
repnz
fldt
jge
and
and
inc
pusha
dec
fwait
mov
pop
clc
leave
adc
sbb
mov
push
pop
ficoml
in
jle
lcall
or
rolb
add
add
arpl
xchg
gs
or
mov
xchg
add
fwait
cld
sbb
pushf
movsl
cmp
push
aam
sarl
aad
add
in
jl
data16
mov
mov
fidivrs
out
dec
daa
dec
iret
fimull
mov
das
mov
mov
lods
test
push
data16
in
push
mov
and
xchg
dec
inc
add
push
leave
data16
icebp
jmp
lret
sbb
cmpsl
loopne
rcrb
sbb
fildl
ffreep
enter
jmp
mov
icebp
fcmove
fdivl
ljmp
sub
ds
xchg
pop
imul
loope
xchg
cmp
cmp
jb
pusha
inc
lahf
pop
xor
movsl
cld
aas
scas
inc
pop
jae
mov
add
cmpsb
lds
jl
outsl
adc
push
and
or
in
icebp
push
pop
fdivrp
mov
fstl
xchg
sbb
add
add
mov
push
cmpl
in
add
add
add
pop
enter
rol
sarl
stos
jns
jle
jo
mov
mov
outsl
sub
xchg
imul
into
xchg
leave
sbb
ja
push
push
or
out
pop
sbb
add
enter
jnp
xor
scas
push
mov
addr16
rcrl
jb
jno
mov
jns
push
jno
dec
cld
mov
ret
dec
iret
pushf
int3
inc
jge
mov
or
popa
popf
sti
xor
es
adc
xchg
fisubrs
lret
orl
push
jo
inc
in
push
push
nop
push
aas
add
push
pushf
roll
sub
push
jecxz
sbb
pushf
add
mov
xor
or
sub
inc
out
or
imul
popf
pop
lock
sbb
or
mov
jbe
mov
dec
mov
daa
test
mov
inc
mov
adc
mov
add
add
mov
roll
fdivs
int
aam
add
add
xchg
and
xchg
cmp
or
mov
popf
imul
pop
out
je
jns
xchg
sti
dec
je
call
outsb
jge
mulb
repz
adc
mov
testb
push
aas
fstps
sub
mov
inc
fwait
gs
lahf
sbb
xor
lock
pop
movsb
jle
ds
orb
enter
and
jecxz
in
lods
mov
and
add
fisttpl
enter
adcb
add
cld
inc
ds
push
fisubrs
call
movsb
cmc
pop
test
lods
fisubrl
xchg
xchg
pop
repnz
pop
mov
orl
ret
je
cld
bnd
les
push
dec
push
call
add
or
jbe
adc
add
into
sbb
adc
xor
mov
nop
stos
xchg
mov
ktestb
test
dec
dec
int3
pushf
push
push
pop
jae
or
pop
dec
or
adc
add
add
add
divb
stc
mov
cwtl
pcmpgtw
add
lcall
mov
push
cmp
push
mov
push
xor
cmp
mov
jbe
push
xor
xchg
je
orl
inc
xchg
aaa
enter
adc
lea
lcall
lea
inc
cmpsl
cmp
fucomi
sti
outsl
or
ficompl
not
push
nop
and
outsl
mov
aam
xor
jl
xlat
lock
mov
mov
rorl
sub
nop
lds
mov
dec
in
adcl
fstpt
and
fs
int3
sub
insl
inc
mov
mov
cmpsb
xchg
in
xchg
outsl
add
inc
out
shll
cmp
enter
icebp
jb
decb
xchg
cld
out
mov
cbtw
fildl
and
xchg
jp
mov
out
mov
adc
lods
xor
add
add
cmc
insl
cmc
out
lcall
enter
cmp
lock
add
add
add
test
push
aam
xchg
push
jle
dec
aaa
test
lcall
les
dec
or
inc
cmp
dec
xchg
pushf
hlt
stos
inc
dec
jl
lods
sbb
push
lcall
add
pusha
ja
ja
shrl
and
hlt
out
gs
pop
adc
cmp
xor
ss
enter
insl
or
mov
fwait
int3
mov
lret
sbb
inc
daa
sbb
push
scas
dec
iret
in
rolb
xor
ljmp
fildl
call
jo
cs
mov
inc
out
iret
or
mov
xchg
push
add
lods
push
sub
dec
add
and
jg
cwtl
xchg
mov
arpl
out
mov
mov
jno
jecxz
mov
fidivrl
mov
pop
test
mov
bound
fs
jle
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
ljmp
insl
push
add
dec
pop
fcomps
xchg
outsl
movsb
repnz
xchg
mov
cmp
cmpsl
add
mov
fs
push
xor
mov
aas
inc
lock
or
loopne
mov
dec
cmpb
xchg
stc
mov
xor
jo
sbb
sub
push
in
pop
inc
sarl
in
or
mov
lcall
movsl
rol
cmp
add
cmp
popa
loopne
faddl
push
ljmp
repz
pushf
in
gs
andl
int3
ret
push
sub
adc
cli
inc
jle
push
fists
jge
dec
xor
mov
adc
mov
cmpsl
jecxz
cmp
inc
mov
faddl
incl
pop
jmp
sbb
fidivrl
cmp
sbb
psrlw
xchg
xor
push
jo
cld
enter
cmp
add
add
jle
and
scas
sti
jle
pop
push
pop
xchg
insl
lods
adc
fadds
add
add
rorl
xlat
pop
inc
add
movsb
call
jns
sub
mov
fstpl
and
mov
ss
mov
mov
call
scas
out
test
mov
test
lcall
inc
jno
out
mov
inc
fldl
jae
sahf
push
cmp
xchg
out
jns
ret
adc
rcrl
mov
inc
pop
sub
xor
and
xchg
imul
ss
scas
dec
and
mov
mov
insb
in
dec
dec
test
nop
ret
jae
push
sbb
ret
jno
pop
xor
xchg
lds
lahf
repnz
xchg
pop
xchg
shll
loope
sti
adc
mov
js
or
je
mov
dec
bound
cmp
jl
cld
inc
mov
add
mov
call
push
lahf
fnstcw
ss
lahf
stc
bound
xor
add
add
ja
fsubr
adc
nop
loope
xchg
test
add
mov
int
and
mov
cmp
mov
cld
inc
pop
fwait
rol
and
fisttps
cld
cwtl
sbb
movsb
add
or
pop
dec
clc
add
scas
aaa
jg
mov
daa
in
sbb
dec
ficompl
inc
pop
mov
xchg
rorb
sbb
test
scas
imul
cli
dec
adc
sbb
out
mov
sbb
icebp
xchg
mov
add
popl
jle
loopne
std
cmp
lahf
mov
fsubrs
push
sbb
jo
daa
adc
int3
dec
pop
pop
call
xchg
cltd
jecxz
hlt
push
hlt
jb
mov
jae
dec
mov
mov
stc
push
rorl
stc
icebp
gs
aad
movsl
shrl
daa
lret
jge
leave
je
fcmovnbe
adc
scas
movb
add
xor
push
jl
jle
insb
out
adc
add
fildl
add
add
mov
test
mov
pop
cmpsb
xor
mov
push
rcrl
fs
add
xor
inc
adc
pop
filds
jo
aam
mov
xor
xchg
cmp
push
adc
and
nop
pop
dec
test
cs
xchg
push
outsb
mov
xor
pop
aas
add
pop
out
inc
loopne
sbb
imul
arpl
lret
xor
jbe
jns
roll
data16
setp
push
jne
push
popa
movl
popf
push
push
dec
xlat
push
inc
or
mov
jmp
or
jnp
or
fdivr
fwait
rorb
aam
cmpsb
dec
lahf
je
push
ja
jecxz
mov
mov
jb
xor
fsts
clc
mov
pop
cmpsb
lcall
jo
adc
cwtl
insb
jecxz
fs
mov
negl
test
mov
mov
fwait
das
push
xchg
mov
add
add
fwait
mov
in
xor
adc
add
add
add
add
pop
jp
cmp
cli
xorb
ficompl
sub
insl
push
cmpb
add
fwait
xor
xchg
lock
cmp
jnp
cmc
cwtl
sub
loope
cmp
cmpb
das
hlt
sub
clc
or
jle
mov
ret
cmc
dec
nop
xor
dec
or
sbb
jg
inc
jl
xor
cmpsl
std
out
jg
leave
test
add
sahf
inc
xor
mov
cmc
adc
gs
cmp
xchg
ljmp
pop
int
cmp
stc
sub
icebp
js
lock
pushf
jecxz
cltd
dec
cmpsl
mov
aam
int3
addb
shrl
mov
inc
xor
and
cmp
sbb
xor
or
cltd
outsl
and
dec
mov
mov
aas
ficomps
mov
out
mov
sub
out
sub
xor
aaa
aaa
data16
jne
mov
lcall
add
add
add
push
xlat
pop
scas
test
add
dec
popa
jne
sub
hlt
rorl
loop
mov
inc
xchg
push
add
jle
nop
inc
rcrl
ficompl
cmp
adc
mov
mov
mov
stos
sub
int
jge
stos
jge
js
xor
dec
addb
jecxz
test
mov
fildl
mov
clc
pop
aaa
lret
xchg
dec
jecxz
ret
sbb
ret
sub
jg
outsl
mov
rorb
push
push
sub
xor
daa
sbb
and
push
ret
mov
xchg
push
ficompl
cs
pop
mov
push
ret
adc
jg
mov
nop
jae
xor
adc
mov
mov
push
mov
outsb
call
mov
jnp
sbb
sub
int
push
mull
mov
stos
or
subl
hlt
popa
repnz
inc
jnp
add
jnp
sti
xchg
lahf
mov
fcoml
add
add
add
adc
xor
rorl
out
std
fimuls
pop
popl
enter
xchg
loope
mov
mov
xchg
or
and
jno
dec
ds
gs
push
mov
aad
mov
cmpsb
jne
stos
add
cmpsb
push
mov
repz
cmp
lcall
nop
out
lret
push
imul
fldl
cmc
add
hlt
dec
jo
jne
movsl
cmp
negl
test
in
push
jp
cmp
mov
jle
int
cli
mov
inc
leave
dec
adcb
mov
mov
jp
fnsave
inc
mov
ret
ja
sub
nop
test
jg
xchg
sub
ret
stos
pusha
pop
cmpb
pop
sub
xor
js
sbb
add
ljmp
out
adc
dec
pop
das
xchg
xchg
xchg
repz
sub
lret
nopl
sub
pop
sarl
mov
mov
add
add
pop
out
mov
pop
mov
xor
mov
mov
mov
pop
icebp
stos
mov
xchg
lock
pop
jb
fwait
pop
jge
cwtl
xchg
cltd
xor
stos
ss
jp
shrb
in
add
adc
inc
dec
fcomp
cmc
lahf
testl
sub
je
mov
and
mov
out
jg
cli
lods
push
lea
sub
add
or
and
fcompl
sbb
in
aam
inc
dec
addb
out
fbld
cld
mov
rclb
pop
xor
cld
outsb
inc
xchg
pushf
mov
add
xor
mov
loopne
push
fs
repnz
adc
addr16
lock
cmc
mov
sti
aad
dec
dec
rcrb
in
add
fildl
out
or
fstl
ret
scas
test
push
push
shrb
lock
insl
lock
std
repz
push
add
add
add
pop
xor
adc
mov
or
ja
sub
gs
ja
int3
push
mov
cmp
mov
xchg
dec
jmp
stos
push
cmc
mov
pop
pop
mov
fnsave
rcll
int
sub
cmpb
add
aad
mov
pop
pop
orl
pop
pop
dec
jmp
in
dec
mov
mov
push
lock
or
cmpl
dec
popf
mov
aam
mov
pop
mov
shl
in
ljmp
dec
jecxz
xor
in
js
lods
fstpl
sub
test
lret
mov
adc
push
das
hlt
cs
and
inc
aam
cltd
dec
rorb
lea
xchg
movsl
das
rol
outsl
aam
adc
sub
add
fldcw
ljmp
sbb
xlat
ret
sbb
test
lds
cmp
pushf
into
in
stc
call
in
sub
cmp
arpl
je
mov
add
add
add
xchg
enter
push
xchg
popf
fs
jmp
sbb
jge
int3
je
mov
mov
shll
lret
js
jno
sub
inc
pop
rcrb
xchg
push
clc
sti
xchg
mov
mov
rcrl
mov
les
add
pop
sub
jbe
aam
jns
movd
js
xor
out
jne
pusha
aad
mov
adc
jl
jl
adc
adc
ficomps
sbbl
xor
pop
rclb
inc
jmp
xchg
cmp
sbb
cltd
sbbl
pop
push
sbb
xchg
jae
inc
and
sub
cmp
sti
add
mov
mov
sub
cmpsb
or
adc
das
pop
mov
aas
xor
mov
sub
out
daa
mov
or
ret
push
lret
mov
xchg
push
imulb
or
sahf
scas
inc
repz
add
insl
lcall
mov
inc
sub
pop
mov
sbb
add
add
add
xor
and
push
mov
jle
pop
loope
cmp
xchg
dec
fcomp
sub
mov
ret
shlb
lock
mov
clc
gs
sub
add
ss
icebp
lret
sahf
ret
mov
cmp
stos
stos
or
cmc
and
flds
icebp
mov
scas
lret
jne
dec
nop
lret
push
and
inc
sub
cmp
shlb
mov
lret
fdivrp
fcomps
push
fimuls
add
cltd
js
into
aaa
imul
lods
aas
dec
mov
xchg
mov
add
jnp
add
xor
mov
adc
jl
jns
push
std
ljmp
pop
xor
mov
adc
xor
xchg
in
sbb
mov
xchg
push
mov
stos
pop
jne
cmp
mov
iret
test
push
dec
push
test
jmp
jb
xchg
lret
xchg
in
mov
incl
shll
push
shlb
add
add
add
dec
lret
fsubrl
sub
pop
sbb
jle
or
pop
fwait
test
out
or
mov
jne
xchg
test
push
inc
xlat
adc
and
lret
jecxz
cli
int3
jb
inc
or
mov
outsb
pop
imul
jnp
pop
ret
in
loope
jne
jno
fcoms
add
std
jp
jp
fldenv
pop
ror
ret
jle
jnp
cmp
mov
xchg
dec
add
pop
fcomp
dec
add
add
inc
test
sbb
out
stos
xchg
je
inc
scas
gs
mov
sub
jnp
cmp
jp
xor
rcrl
leave
inc
cmp
cmp
sti
or
lret
dec
ds
and
shrl
jmp
xchg
push
out
outsb
mov
jecxz
xchg
jo
mov
inc
inc
mov
in
negl
sub
movsb
sbb
cltd
adc
add
add
add
scas
xor
mov
cld
cmp
fdivrl
enter
push
pop
lahf
push
and
das
mov
sbbb
pop
mov
and
das
dec
jb
jp
xchg
iret
xor
adc
dec
pop
inc
adc
jno
sub
enter
incb
mov
stos
fsubl
dec
push
fisubs
push
movsl
jecxz
lahf
cmp
xchg
repz
mov
cs
dec
jecxz,pt
cli
mov
sbb
pushf
jl
mov
or
adc
cs
cmp
mov
shl
pop
pusha
gs
sbbb
adc
testb
mov
adc
loop
pop
push
pop
enter
or
mov
mov
or
cmc
movsb
lahf
imul
and
adc
cld
sti
jmp
push
ja
movsl
mov
fistpll
stc
dec
push
faddl
add
add
add
xor
cmp
ss
mov
push
rorl
fwait
in
lods
fisubrl
mov
push
push
and
mov
and
adc
or
cli
dec
inc
or
adc
add
enter
out
mov
mov
loope
subb
jb
fwait
lds
jno
pop
cmpl
xchg
and
inc
jge
out
jbe
je
movsl
inc
pop
pop
push
fadds
sarb
in
jecxz
dec
push
xor
fucomip
adcl
idivl
pop
test
add
es
xor
movsl
jle
stos
jge
test
das
fwait
in
pop
jo
sti
jecxz
or
xchg
shrl
cmc
and
sub
push
sbb
jne
int
iret
pusha
ss
cs
xlat
adc
xor
mov
inc
movsb
stos
and
mov
bound
rcrl
add
addr16
inc
fwait
lret
stc
push
lgs
cmp
mov
push
push
push
mov
mov
add
add
xor
xor
and
dec
clc
xchg
adc
loopne
xchg
setns
fnstenv
sub
dec
xor
cmp
lea
cli
ja
ljmp
arpl
adc
sbb
test
arpl
ss
mov
add
dec
jno
dec
mov
add
inc
mov
fcoms
push
sahf
cmpsl
pusha
incl
shr
ror
fildl
xor
add
sbb
rorb
in
hlt
fs
cli
fsubrs
jnp
mov
je
ret
inc
aaa
and
test
ret
mov
inc
cltd
inc
imul
mov
outsb
pop
lds
jge
jo
lock
movsl
stos
mov
xor
push
add
xor
push
sarl
inc
jmp
call
jb
mov
xchg
test
clc
cmpsl
das
jle
mov
iret
cmp
xchg
push
push
add
xchg
add
add
repnz
add
pop
lcall
les
aad
mov
add
add
add
xor
or
insl
or
gs
std
decb
nop
push
cld
popa
pop
cmp
lds
add
dec
mov
sub
push
pop
insl
xchg
xchg
cwtl
ret
arpl
xchg
arpl
jo
test
popa
cmpsb
xchg
jmp
jae
jnp
lcall
push
push
arpl
leave
pop
or
clc
mov
jecxz
cmp
and
push
out
pop
rclb
sub
popa
cmp
sbb
insl
and
cmp
ja
inc
js
adc
fmull
jle
addr16
adc
mov
xlat
cmp
ja
mov
imul
and
sbb
sub
mov
shrl
mov
je
jno
adc
outsl
jb
aad
xchg
or
rcrl
std
sbb
mov
cmc
ret
lods
pop
and
xchg
inc
ja
xor
push
push
add
xchg
incl
add
add
mov
push
decl
pop
movsb
sbb
xor
add
add
add
mov
cmp
stos
rcr
pop
out
add
sbb
mov
jmp
mov
pop
cmpsb
ret
call
std
aad
sub
lock
mov
ljmp
test
fsub
popa
cmp
cmp
popf
movsb
andl
xchg
mov
cs
push
in
or
jl
rcrb
decl
jns
mov
addl
mov
idivb
arpl
loope
lahf
dec
xchg
mov
jle
sbb
lods
push
sub
scas
rolb
xchg
mov
mov
xchg
or
mov
addl
lea
scas
roll
pop
and
jb
mov
add
inc
sub
cmpsb
pavgb
xchg
cmp
cli
jbe
out
dec
outsl
mov
scas
dec
jb
fnsave
sbb
add
and
cmp
sti
fsubp
inc
push
sub
ret
add
add
add
outsb
hlt
mov
or
insb
cmpsl
clc
out
test
fwait
mov
add
flds
movsl
inc
mov
cli
mov
dec
loop
xor
xlat
inc
int
lods
add
mov
inc
int3
xchg
pop
out
js
pop
es
out
fwait
xor
inc
in
mov
sbb
xorl
inc
push
xchg
pop
addb
sub
mov
insl
sbb
push
insl
mov
stos
xor
mov
mov
jmp
stos
and
in
lds
in
mov
and
cmpsb
repz
je
sub
cli
enter
cltd
jle
mov
xchg
xchg
xor
jnp
shll
jge
aad
out
or
loop
jbe
add
popa
mov
add
adc
xor
add
cs
sbb
pop
and
or
ljmp
inc
mov
shr
and
cltd
ret
sbb
sbb
add
add
outsb
xor
mov
lcall
ljmp
push
or
adc
cwtl
adc
jne
cs
mov
cltd
iret
dec
xlat
lds
sub
rcll
xchg
leave
cmp
and
pusha
inc
stos
sbb
push
jge
data16
movsb
sbb
hlt
aas
arpl
push
or
add
xlat
adc
test
xchg
and
sub
loop
out
add
in
add
mov
pop
mov
mov
jge
lahf
xchg
paddb
scas
in
xor
movsb
je
sbb
je
das
fstps
xlat
and
jbe
and
mov
push
lahf
lcall
nop
push
xor
jns
popf
mov
mov
mov
nop
xchg
loopne
ljmp
test
or
inc
cltd
jl
loope
inc
sub
push
mov
imul
jns
and
clc
fwait
sbb
sbb
testb
clc
mov
add
inc
ror
lock
jnp
xor
xchg
cwtl
ret
xchg
pop
inc
jmp
add
add
call
nop
sbb
mov
and
xor
mov
adc
jae
movsl
ret
sbb
stc
into
je
sbb
ja
es
pop
das
xchg
fwait
idiv
nop
xor
lods
push
jb
popa
clc
lods
push
sub
adc
movsl
pop
dec
ds
adc
std
mov
movsb
add
dec
cwtl
dec
call
dec
mov
fcomps
xor
jp
jne
push
iret
push
negb
ljmp
adc
pop
xor
mov
aad
outsl
push
push
pop
xor
stc
jp
pushl
lret
jo
mov
int3
aad
sbb
fcmovnu
imul
or
inc
jne
test
add
and
mov
pop
lods
cwtl
or
or
xor
data16
add
mov
xchg
dec
lods
sbb
ret
fdivr
subb
test
sub
sbb
push
jp
ss
and
repz
fisubs
add
movsb
inc
in
add
add
add
sbbb
xchg
mov
icebp
jne
xor
add
test
or
or
mov
call
sbb
jno
lcall
jae
lret
jl
sub
in
mov
mov
mov
inc
xchg
test
in
mov
es
jno
loopne
mov
loopne
mov
and
adc
or
xchg
mov
and
mov
lods
pop
adc
call
incl
and
das
cli
jne
add
dec
add
push
fsubrs
popa
inc
jp
inc
rorb
scas
cltd
xchg
popaw
push
ret
sbb
lcall
xchg
stos
pop
sub
hlt
rcrl
ljmp
inc
shll
sub
xchg
adc
movsb
mov
imul
dec
mov
jl
rorl
aam
inc
sub
sbb
data16
xchg
int3
inc
aas
ss
test
fwait
dec
dec
out
sbb
ret
inc
dec
in
add
add
add
adc
fdivl
inc
cld
addr16
dec
push
push
mov
jge
scas
sahf
xor
subl
dec
xchg
sub
fnstenvs
jp
notl
fwait
adc
xchg
out
lods
loopne
and
jecxz
push
and
sub
sbb
xor
mov
or
int3
andl
mov
je
mov
xor
add
pop
aaa
xchg
ss
in
push
daa
push
dec
push
push
adc
add
push
lods
mov
test
mov
lret
push
popf
aas
mull
cs
int3
add
push
or
scas
shlb
mov
inc
lahf
sbb
sub
fcoml
and
or
js
sbb
adc
btc
stos
int3
fcompl
ljmp
pop
lock
or
test
scas
lock
mov
xor
sub
lds
xor
pop
dec
dec
push
xchg
lret
mov
add
add
scas
push
repz
cmc
scas
sub
mov
dec
out
add
add
add
inc
outsb
bound
test
pop
dec
push
in
inc
jbe
push
mov
mov
leave
pop
gs
push
in
inc
cmp
sub
adc
and
sarb
mov
out
dec
lock
daa
xor
push
in
outsl
outsb
mov
lcall
out
fwait
ds
mov
adc
sbb
or
es
xchg
cld
mov
jle
sarl
dec
or
mov
leave
notb
xchg
and
popf
out
in
inc
psubw
adc
sbb
mov
or
add
out
mull
imul
ret
push
xchg
fsub
lahf
dec
cli
movb
inc
or
pop
mov
xor
xchg
or
dec
aam
pop
push
sub
mov
jae
pop
fs
or
sahf
or
jo
xchg
clc
push
mov
lret
pusha
rorb
cmpsb
mov
test
push
out
add
add
add
std
clc
jmp
cmp
icebp
lret
add
in
loope
cld
adc
out
leave
push
mov
pop
mov
jle
jmp
or
repz
data16
repnz
push
bound
in
loopne
pop
mov
sti
adc
mov
test
outsl
xor
sti
out
pop
jecxz
lahf
pop
std
mov
and
inc
mov
sbb
insb
shll
mov
ss
iret
hlt
out
sub
bound
cmp
jbe
push
outsb
xchg
add
aaa
mov
insb
js
cmp
aam
cli
out
daa
jns
mov
lock
pop
mov
jo
xor
pushf
xchg
mov
cmc
ret
pushf
xchg
xchg
xchg
test
xchg
into
jp
pop
xor
cmp
cltd
jnp
out
dec
push
sbb
jecxz
aaa
xor
fcmovne
cwtl
aad
adc
or
mov
popl
movsl
cmp
test
fcomp
sbb
add
add
gs
testl
mov
add
add
add
jg
or
xchg
push
call
mov
push
mov
dec
icebp
sub
push
sub
hlt
test
add
insl
andb
jmp
jo
data16
fld
add
cs
std
pop
sbb
movsl
ds
lcall
pop
je
inc
out
sti
dec
dec
repnz
shl
cli
pushf
mov
dec
ss
out
ljmp
out
and
jno
mov
xlat
scas
pop
shlb
fadds
lods
or
and
xchg
push
in
movsb
cmpl
cmpsb
scas
js
jns
mov
sbb
test
jge
imul
xchg
mov
jo
xlat
cmpsb
sub
dec
sbb
sahf
out
cwtl
pop
mov
jge
leave
adc
jp
dec
int
xchg
aam
adc
dec
mov
mov
jno
ja
push
aas
push
pop
push
add
and
daa
lahf
mov
pop
das
and
icebp
add
add
add
mov
add
or
pop
and
cmp
lcall
sub
push
and
addl
icebp
shlb
data16
mov
addl
loop
xchg
or
mov
lods
mull
and
mov
xor
lahf
fildll
cld
pop
insb
jne
fwait
xor
std
jle
sub
mov
sbb
mov
jp
pop
pop
mov
cmpsb
push
test
push
int3
push
test
addr16
sub
aaa
roll
push
and
jge
movsb
popa
mov
add
mov
lahf
shlb
mov
rolb
mov
pop
aas
inc
int3
push
inc
dec
cmp
xchg
push
mov
mov
push
jnp
test
or
scas
mov
int3
and
mov
xor
jmp
mov
aad
sub
or
mov
add
add
fucomi
xor
in
pop
repnz
add
add
roll
xor
in
into
pop
lcall
repz
add
xchg
xor
inc
add
lcall
inc
fcompl
les
in
fcmovnu
push
sbb
sahf
dec
iret
cmpl
daa
lock
shll
xor
lahf
mov
xlat
dec
rcll
lcall
popa
xor
and
out
dec
rcll
jg
lret
mov
mov
movsl
jnp
out
dec
out
shr
jl
sahf
pop
cld
adc
mov
mov
mov
or
inc
jnp
dec
mov
dec
xchg
in
das
cmp
pop
sbb
mov
fcom
pop
add
add
xor
scas
fcoms
sbb
ss
daa
test
jnp
sbb
jge
lahf
bound
push
mov
lret
iret
push
lods
aad
or
jge
pop
fdivl
pusha
movsb
aad
lods
stos
pop
jbe
push
inc
pop
jns
aas
loopne
sub
xlat
lock
repz
add
add
add
stc
mov
out
gs
inc
cmp
out
lds
rorl
cltd
jns
push
push
cmp
ss
pop
adc
mov
stos
ljmp
xor
xchg
mov
xchg
std
fcmovnbe
inc
movsb
jg
add
push
js
ror
lods
in
aad
aaa
mov
sahf
adc
fwait
into
cmp
imul
psraw
pop
xor
lret
push
sbb
loopne
xor
repz
lret
cmp
and
and
sub
mov
xor
fwait
and
pop
sub
dec
jl
fcomps
fwait
xchg
fs
sbb
add
add
popa
jp
inc
insb
jp
mov
pop
enter
stos
push
xchg
cmp
orl
shll
jecxz
cmp
cmp
pop
pusha
pushf
hlt
add
rol
or
insl
mov
bound
fmul
adc
add
cmpsb
sbb
jnp
mov
lret
ja
hlt
add
add
add
test
jbe
sub
std
dec
fidivrs
arpl
jg
xor
jmp
pop
xor
nop
decb
insl
mov
cld
fmuls
jl
popa
cmp
rcrb
rcrb
jne
jo
add
cmp
xchg
and
mov
mov
and
in
fstl
mov
mov
cs
xchg
adcb
inc
adc
xor
stos
sbb
jle
jecxz
mov
inc
push
mov
jbe
pop
repnz
cmp
sahf
push
xchg
ss
unpcklps
jg
call
xchg
sub
adc
xor
dec
push
jno
push
xor
xchg
js
pop
and
iret
cltd
inc
cmovl
xlat
mov
mov
fistpll
sub
xchg
lods
adc
aaa
aas
shr
ss
xor
mov
faddl
sbb
sub
mov
adc
mov
sub
imul
mov
cmc
add
add
add
push
mov
or
xor
lea
jae
enter
adc
sbb
cmp
xor
leave
pop
shrb
push
lret
dec
sbb
out
mov
mov
cwtl
jns
xchg
jnp
mov
test
ret
popf
xor
fwait
imul
mov
push
pop
inc
fs
fsubrl
mov
test
add
sub
inc
mov
mov
push
dec
adc
push
inc
decl
outsl
push
rclb
sub
jne
sbb
sub
loop
sarb
pop
faddl
je
lcall
mov
jns
inc
pushl
xor
lock
test
sti
xchg
pop
cmp
addr16
std
xor
mov
dec
lods
jne
sub
scas
mov
mov
and
jmp
out
mov
dec
pop
aad
imulb
mov
ret
xor
cmp
out
in
add
add
fdiv
mov
lea
mov
insb
testb
add
add
dec
sahf
mov
aaa
inc
pop
lods
test
jnp
push
arpl
mov
popf
mov
into
adcb
push
test
cmpsb
mov
aaa
ss
insl
rorl
inc
jne
out
jo
pop
sub
ss
test
in
popf
cmp
jmp
cmp
jns
mov
aas
jmp
pusha
xchg
sub
mov
mov
mov
mov
sub
cmp
jp
push
ror
cld
sbb
ss
fcoml
pop
ss
push
mov
xchg
andl
out
enter
js
pop
nop
mov
int3
pminub
dec
addr16
push
pop
mov
outsl
pop
test
out
cmc
and
inc
in
hlt
mov
dec
lahf
sbb
cmp
pop
push
inc
jmp
adc
adc
jmp
outsl
lods
mov
mov
pop
sub
rorb
adc
loopne
into
sahf
add
aaa
lock
in
test
mov
fimull
pop
cmp
add
add
add
dec
nop
pushf
clc
outsl
jp
dec
js
movsb
xchg
pop
mov
mov
sub
insb
xchg
shlb
add
cmpl
aas
mov
pop
push
out
sbb
dec
and
loop
sbb
sbb
lret
dec
adcb
ja
test
into
out
mov
push
mov
dec
or
lahf
test
fwait
movsb
mov
cwtl
pop
mov
repz
sahf
mov
insl
cmp
aas
rclb
nop
or
hlt
push
addr16
rcrl
scas
mov
jo
ret
shrl
fimull
jg
adc
mov
orl
icebp
xor
mov
inc
jns
in
aad
push
test
inc
jne
inc
dec
mov
repz
repnz
js
daa
popa
loop
test
flds
clc
sbb
shrb
cld
push
cmp
mov
js
cli
dec
mov
or
add
add
push
pop
push
jmp
sarb
outsl
je
add
add
add
push
inc
ss
cmc
daa
es
mul
leave
push
inc
add
xchg
cmpsb
mov
dec
and
or
pop
cmp
mov
mov
dec
push
inc
popa
jl
fisubs
push
loope
leave
loopne
in
nop
xor
xor
xchg
add
rclb
into
adc
sbb
and
dec
and
cmp
sbb
mov
jge
movsb
subb
cmp
xchg
icebp
fxch
push
stos
scas
sub
pop
dec
push
sub
and
cmc
mov
psrlq
lds
insb
lret
mov
xor
outsb
inc
pop
out
subb
call
jg
mov
jo
fadds
mov
mov
inc
idivl
insl
add
adc
push
xchg
imul
in
daa
inc
imul
fcomi
ds
sub
addr16
imul
or
sub
xor
leave
add
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
push
lcall
add
add
pop
mov
aam
and
jbe
xor
les
je
mov
or
std
mov
pop
lret
sbb
xor
shlb
mov
pushf
mov
imul
sub
insb
imul
pop
xlat
les
ja
cmp
imul
xchg
inc
mov
sbb
pop
add
jo
rolb
cli
loop
repnz
pushf
xorb
push
sti
addr16
jbe
int
or
insl
cmpsl
cmp
sbb
jle
lock
sarl
xchg
cs
sub
sbb
mov
sahf
push
popf
mov
push
jns
loopne
test
movsb
fsubp
out
dec
mov
fnstcw
out
fdivrp
mov
pop
mov
gs
mov
mov
or
add
jne
and
jb
int
mov
or
jle
subb
lock
mov
dec
loop
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
jno
pop
int3
out
inc
ljmp
xchg
addr16
nop
dec
dec
repnz
data16
loope
jno
xchg
mov
jmp
add
adc
lods
sub
cmc
xchg
lods
lret
aas
fldln2
jmp
pop
sar
std
in
and
cmp
or
ja
add
push
cmpsb
inc
ret
dec
dec
out
pop
mov
add
add
and
leave
sbb
pushf
into
out
adc
int3
mov
and
push
int3
and
sbb
jmp
inc
std
adc
aaa
pushfw
test
cli
lods
stos
sarl
add
push
ljmp
repnz
jl
orb
dec
pushf
mov
pop
fistpl
and
sub
sub
or
dec
mov
sub
int3
stc
or
sbb
or
in
mov
pop
or
cmp
push
xor
insl
cmp
dec
popa
sbb
cmpsl
and
sub
add
aam
int
aaa
das
aam
mov
add
add
add
lods
xor
and
insl
push
mov
add
loope
ds
and
jmp
push
aam
repz
push
xlat
sub
test
stc
int3
pop
inc
mov
xchg
sar
xchg
push
mov
iret
cmp
jp
dec
imul
ds
inc
ljmp
adc
cld
fucomi
cmp
int3
mov
arpl
icebp
outsl
xor
ret
test
push
incl
and
xor
pop
aam
scas
test
add
stos
lahf
out
rorb
jg
mov
push
xchg
into
ljmp
in
jle
shlb
mov
test
aad
jae,pn
xor
pop
lods
jg
daa
mov
andl
in
outsl
aas
imul
xchg
pusha
xor
hlt
fs
xchg
inc
mov
loop
imul
adc
pop
arpl
addr16
sub
cmp
lods
ret
add
add
add
jnp
lock
lods
or
add
and
adc
xchg
ja
and
pop
and
mov
xor
mov
fldenv
xlat
lds
add
scas
jle
jae
mov
lret
sub
ljmp
sbb
dec
sbb
in
hlt
jb
cs
jmp
sti
adc
sub
mov
mov
icebp
pusha
ret
lds
scas
mov
pop
enter
sbb
out
sbb
outsb
fisubs
push
out
or
push
adc
cmp
mov
aaa
cmp
fsts
lret
add
test
in
es
push
pop
test
push
add
testl
outsl
imul
popa
ds
out
cs
gs
int
jno
add
add
out
out
pushl
xchg
xor
inc
stc
cs
add
add
adc
loop
scas
and
mov
test
cld
mov
or
popa
mov
scas
cmp
mov
imul
dec
sub
xor
mov
sub
test
ss
xchg
fistps
add
arpl
in
sarl
mov
xor
test
pop
loop
outsl
cli
or
xor
or
scas
pop
jmp
pop
jmp
pop
push
mov
jne
insb
stos
inc
int3
cmp
pop
enter
lcall
imul
stos
add
mov
push
sub
das
xchg
fcmovne
cmp
cmpsb
test
mov
pop
pop
scas
sub
mov
pushf
adc
inc
jnp
sub
or
in
or
jmp
gs
pusha
ret
hlt
pusha
icebp
pusha
adc
leave
mul
xchg
mov
aad
adcb
push
stc
test
push
scas
mov
scas
or
mov
add
add
add
push
add
push
sbb
mov
fnstcw
lret
lds
push
or
das
imul
loope
inc
fstps
or
cmpsl
loop
testl
push
sub
mov
idivl
iret
std
mov
aam
daa
popf
jbe
mov
cli
mov
sub
outsl
pop
sbb
add
cmp
arpl
clc
addr16
call
and
outsb
or
dec
xor
xchg
xorb
jg
dec
sub
or
mov
mov
mov
jno
std
lea
xor
push
jmp
xor
jno
dec
fwait
mov
insb
or
mov
jg
and
aad
sahf
push
and
test
out
add
or
stos
and
mov
xor
les
popf
sbb
or
xchg
push
lret
aaa
xchg
and
movsl
mov
mov
mov
fcom
nop
incl
add
add
cwtl
in
aam
pop
ja
ja
loop
sbb
mov
adc
sbb
rcrb
push
movsb
jno
out
sti
dec
dec
cmc
xchg
sbb
sub
sbb
sbb
daa
sub
xorl
pop
aad
dec
dec
std
in
lret
inc
cmc
cltd
leave
xlat
in
mov
dec
in
or
in
jl
jno
imul
sahf
dec
cmp
stos
inc
pop
sub
or
das
int3
xchg
movsl
push
push
hlt
repz
ret
fcoms
sub
popa
dec
sarb
push
pop
cmpl
lock
xchg
add
lret
dec
jnp
loope
and
push
test
mov
xchg
pop
aaa
pushf
jbe
or
sbb
pop
outsl
ja
add
pusha
dec
dec
imul
fst
push
scas
sub
xor
and
lods
cmp
mov
stos
lds
mov
insl
xor
fdivl
mov
lcall
add
add
out
insb
mov
dec
jmp
out
xchg
mov
loope
cmp
inc
rolb
out
push
sti
cli
mov
mov
mov
push
push
jmp
js
repz
jbe
jae
mov
jne
mov
enter
dec
mov
mov
lret
sti
das
pop
push
push
loopne
daa
jae
fimuls
dec
cltd
mov
test
in
mov
dec
int3
lds
add
mov
cld
pop
ret
add
faddl
add
push
adc
pop
jne
add
out
xchg
pop
loope
scas
jl
cmp
and
lods
sub
test
adc
cs
inc
cmpsl
and
les
and
cmc
out
adc
fistpl
inc
mov
cli
and
cmp
jl
shll
sbb
pop
xchg
push
pushf
outsl
dec
mov
pop
xchg
bound
cmp
xchg
and
sub
add
add
mov
mov
lods
imul
pop
sbb
jg
add
add
add
xchg
dec
scas
pop
adc
jle
shll
inc
stos
sti
xor
inc
jae
fcomps
xor
add
sbb
notb
cli
test
js
mov
loop
test
int
mov
xchg
out
pop
xchg
ret
xor
jae
outsb
push
pop
and
push
adcb
or
jb
mov
mov
cmp
jns
in
lret
xchg
mov
dec
icebp
mov
sub
andl
push
shrb
add
shll
fbstp
inc
inc
dec
mov
xchg
mov
into
iret
add
scas
push
movsb
pop
and
sub
dec
popf
sbb
adc
lar
jnp
jl
ja
aam
movsb
fs
pmaxsw
inc
lock
nop
pop
fstps
stc
fldcw
mov
and
mov
jge
ror
push
sarb
add
jns
push
adc
add
xchg
sub
scas
or
cmp
popf
enter
add
add
add
pop
into
mov
and
fcoms
jg
push
push
mov
icebp
into
lea
insb
adc
jp
push
cli
mov
mov
das
outsl
hlt
cli
loopne
rcrl
pop
add
loop
aad
dec
ret
stos
mov
add
push
add
mov
ja
jecxz
pop
xor
aad
loopne
pop
aaa
lods
bound
xchg
mov
sub
sbb
mov
dec
lods
dec
data16
sbb
icebp
dec
fistl
sbb
adc
push
ljmp
insl
mov
mov
mov
mov
scas
mov
add
out
mov
or
popa
scas
cmp
mov
cmpsl
jl
in
cmpsl
out
mov
cmp
jl
nop
jae
mov
es
jmp
and
push
lcall
adcl
add
add
hlt
fbld
jne
xchg
mov
add
add
cmpsl
aad
pop
add
sbb
or
insb
les
icebp
push
mov
add
jecxz
push
inc
addb
push
dec
jl
lahf
mov
dec
add
lahf
pop
outsl
ds
xchg
pop
lds
ds
outsb
cmp
dec
std
dec
cld
pop
sbb
ret
sub
mov
sub
sti
mov
gs
stos
lcall
mov
jnp
popf
iret
sub
adc
imulb
pop
mov
mov
cmp
jecxz
enter
jbe
lcall
pop
xchg
sbb
push
aas
mov
pop
js
mov
mov
iret
mov
adc
pop
mov
cmp
pusha
fwait
sub
mov
lcall
push
out
mulb
aaa
mov
mov
popa
je
jecxz
into
dec
out
xor
inc
roll
add
add
into
fwait
add
mov
cld
movsb
add
add
add
xchg
roll
pop
fdivrl
jb
mov
call
jbe
ss
lds
stos
and
call
push
push
aad
imul
lock
xchg
movsl
push
or
dec
mov
jg
test
xor
ret
sub
xchg
mov
loop
mov
cmp
adc
mov
stos
test
stos
xorb
xchg
cld
jmp
sub
push
xor
mov
mov
scas
mov
fidivl
cwtl
and
xor
xor
jbe
sub
mov
gs
es
add
xor
fstps
dec
mov
jo,pt
sbbl
js
int3
in
sti
xlat
inc
fstps
xor
out
mov
cmp
fcmovnbe
ret
pushf
fildll
mul
loop
lcall
jl
test
out
mov
pop
sarb
in
scas
sarb
add
add
xor
xchg
jnp
insb
jecxz
stos
push
cmp
popf
jmp
sub
hlt
mov
out
leave
popa
fldl
mov
inc
or
xacquire
faddl
jnp
scas
lahf
aas
xorl
mov
ja
sahf
jnp
push
inc
cmp
aam
cmp
cwtl
scas
cmp
mov
adc
call
fisttps
jno
in
dec
xchg
roll
cmpsl
daa
mov
shlb
jge
jecxz
mov
jno
aad
outsb
loop
mov
mov
out
subb
and
sbb
mov
in
fisubrs
jb
into
pop
sbb
outsl
mov
push
fistl
int
repz
jae
and
ret
movsl
cli
lods
jg
repnz
inc
xlat
mov
loop
and
xchg
adc
cmpsb
xor
xor
and
add
add
inc
out
aas
mov
shlb
push
inc
xor
push
add
add
add
popf
stc
ss
insl
popa
pop
mov
push
push
xchg
push
push
repnz
xchg
jp
stos
sbb
ret
insl
mov
test
push
adc
int
inc
into
in
fldenv
popa
movsb
add
cltd
dec
aas
and
cmpsl
scas
ljmp
xchg
inc
je
inc
gs
adc
xchg
jl
stos
fildl
dec
adc
adc
and
xchg
pop
repnz
push
cmp
dec
cltd
push
add
int
je
ss
in
mov
out
les
add
cltd
adc
sbb
pop
cmp
jae
ljmp
lods
cmp
imul
push
lret
xchg
leave
cmpsb
ljmp
aad
adc
mov
jae
xlat
mov
scas
es
hlt
call
dec
dec
cli
fwait
adcb
adc
aam
dec
adc
test
in
arpl
loopne
fstl
cmpsl
leave
or
push
repnz
add
push
bnd
dec
leave
and
imul
add
add
into
push
lret
mov
and
adc
cli
push
sub
inc
imul
adc
lods
das
addr16
cli
push
cmp
add
jle
push
movsb
enter
js
sub
xchg
leave
movsb
jle
push
fsub
xchg
dec
jmp
scas
into
mov
incl
cld
inc
cmp
cli
insl
nop
dec
xchg
lea
subb
cmpsb
xchg
in
test
ficompl
mov
fldenv
xchg
xor
loope
mov
dec
pop
mov
mov
movsb
mov
shl
xor
pop
adc
pop
xlat
iret
dec
mov
sub
sbb
and
sbb
push
in
jbe
or
lock
mov
out
movsb
xchg
int3
xorb
and
or
mov
outsb
lahf
jge
shll
bound
dec
add
leave
jmp
inc
and
imul
mov
loop
into
icebp
push
and
push
sbb
inc
jg
lret
ftst
sbb
in
out
ja
filds
lea
mov
add
add
add
lahf
rcr
test
jge
inc
out
lret
mov
lea
int3
jl
test
call
or
mov
cmp
out
mov
dec
xchg
rol
inc
std
or
leave
jecxz
repnz
mov
mov
idiv
mov
mov
sbb
xorl
or
push
push
clc
in
fwait
ret
gs
aad
sub
jo
cmp
ja
pop
mov
sub
mov
xchg
js
push
hlt
rcrb
cmp
adc
pop
insb
mov
push
mov
in
push
push
or
rcl
or
mov
jnp
or
pop
mov
push
cmp
sub
sub
data16
add
xchg
fidivs
jge
shrl
inc
loopne
push
dec
and
das
dec
mov
push
xor
push
addr16
and
add
scas
test
in
inc
push
or
decb
add
add
cli
sbb
adc
arpl
insl
xor
insl
push
outsb
popf
and
xchg
pop
adc
dec
and
gs
lcall
lods
xlat
dec
dec
inc
xor
cli
stc
add
mov
jp
ljmp
add
out
aaa
jl
enter
mov
rorb
shrl
hlt
enter
inc
adc
mov
mov
in
mov
cmp
fwait
dec
scas
mov
hlt
add
out
rolb
xor
js
push
hlt
lret
xor
test
mov
mov
add
popa
lahf
sti
lret
xorl
cwtl
in
addr16
pusha
rcr
mov
dec
xchg
enter
mov
cs
pop
jg
sub
ret
popf
mov
inc
stc
js
enter
cmpsb
aas
inc
inc
or
clc
lods
popf
ss
mov
shlb
adc
xchg
push
jo
mov
jg
neg
pop
daa
inc
add
fmull
mov
add
add
in
outsb
fst
pop
fs
pop
mov
pop
movsb
xchg
mov
lods
ret
stc
push
mov
addl
sbb
aas
test
sbb
mov
inc
and
mov
ja
repz
pop
popa
loope
jg
cmpsb
test
xchg
cwtl
jp
xchg
cmpsb
jnp
cmp
mov
sbb
jbe
xor
cmp
mov
jp
mov
cmp
inc
call
outsl
add
mov
mov
fdivl
movsb
jbe,pn
jge
ljmp
mov
bound
mov
or
std
in
xchg
ret
ss
nop
ljmp
in
push
fldcw
gs
dec
cmp
mov
sahf
adc
push
fildll
push
clc
js
sub
inc
push
push
stc
outsl
xchg
imul
xorb
fildll
dec
stos
rcl
das
loop
cmp
sti
jg
cmp
je
stc
mov
add
add
add
mov
mov
mov
push
idivb
jae
test
push
in
or
aam
or
fbld
addr16
test
add
mov
insb
sbb
add
dec
add
add
cs
shl
xacquire
dec
dec
cmp
sbb
add
and
inc
test
daa
fldcw
push
ret
cmp
pop
dec
aaa
ret
lods
jns
insl
cmp
push
mov
scas
stos
jno
testl
and
in
sub
ja
mov
inc
mov
aad
daa
out
insb
push
inc
sub
popa
pop
mov
push
js
stos
lret
push
push
inc
ficomps
ljmp
daa
cltd
rcrl
pop
jp
mov
xchg
jle
xchg
and
das
in
pop
mov
lea
mov
mov
mov
subl
scas
aam
jnp
fstp
fcompl
sbb
fwait
cltd
les
add
add
and
outsb
xor
dec
sub
pop
dec
out
mov
adc
push
mov
xor
testl
dec
push
out
mov
out
mov
xchg
or
or
adc
dec
mov
iret
les
fs
adc
dec
imul
pop
lcall
push
das
jns
sbb
test
push
outsl
mov
aam
lret
xchg
fisubl
xchg
xor
cmpsb
lock
popa
pushf
insl
or
adc
fistps
adc
inc
mov
inc
sub
mov
int
pop
jnp
das
test
test
insl
xlat
or
mov
or
les
popf
cmp
aam
adc
dec
addr16
divl
lret
arpl
or
push
cmpsb
cld
mov
inc
xor
movsl
lcall
inc
jl
scas
lret
out
add
lods
pop
xchg
mov
add
add
outsl
mov
add
lahf
mov
add
add
ljmp
clc
iret
sub
or
pop
xchg
dec
test
cmp
test
jo
lret
inc
shlb
leave
popf
dec
push
and
adc
xor
ss
mov
pop
pushf
xor
fisttps
daa
mov
inc
xor
xchg
mov
jo
pop
adc
insw
ret
push
aaa
xor
inc
sub
cld
lret
xchg
rolb
fyl2x
sub
rorb
orb
fbld
cmp
sbb
fildll
fs
jmp
js
pusha
adc
xchg
fistpl
xor
pop
mov
push
xchg
dec
mov
divb
lods
adc
loope
push
insb
or
sahf
push
scas
mov
in
cmpsb
or
pushf
inc
imul
rolb
stos
mov
ljmp
xor
sbb
loopne
sub
roll
into
rclb
sahf
test
mov
daa
add
add
sbbb
loope
jmp
fucomp
int3
sub
add
add
add
fnstsw
sbb
orb
and
xor
loop
in
shl
adc
add
xor
orl
xchg
push
cmpb
xor
into
arpl
jnp
sbb
cmp
lods
or
xchg
jle
inc
pop
pushf
sub
push
sub
sbb
fisttps
lods
imul
sbb
add
subb
push
inc
shlb
dec
int3
mov
loope
mov
inc
xorb
out
push
add
dec
and
push
pop
mov
lds
cmp
push
lret
sub
dec
inc
sub
sbb
cld
jmp
mov
mov
xchg
rol
mov
in
adc
and
mov
cmp
int3
push
adc
jns
idiv
das
dec
sub
sub
dec
das
cmc
clc
cwtl
jne
lds
pop
aaa
or
pushl
xchg
sub
xor
mov
add
xor
test
loope
xchg
sgdtl
add
add
ror
mov
lds
or
dec
sub
adc
cmp
jbe
lds
push
into
cltd
addr16
scas
filds
and
pushfw
jnp
or
push
mov
xor
pushf
mov
sbb
js
inc
and
out
xor
in
outsl
cmp
mov
mov
jl
imul
jge
dec
adc
mov
gs
push
outsb
mov
popa
mov
and
lret
or
jae
ret
sbb
lea
adc
clc
sahf
or
push
cmc
rcr
mov
shlb
aas
mov
sbb
adc
outsl
inc
in
mov
add
mov
orb
mov
int
pushf
popa
inc
jp
mov
mov
pusha
push
adc
in
mov
fstpt
movsb
jnp
jno
out
jno
sbb
push
xor
in
dec
push
jnp
or
into
out
add
add
cli
inc
jg
int
xchg
lods
or
add
js
adc
add
add
std
scas
xor
lcall
rorb
mov
dec
call
imul
sbb
push
mov
push
out
mov
pop
ljmp
dec
pushf
xor
jg
sub
pushf
push
stos
or
or
dec
pop
cmc
inc
dec
iret
cmp
ja
popf
pop
mov
add
push
cmpsb
mov
push
addr16
xor
mov
mov
data16
pusha
mov
lds
fidivrs
push
pop
dec
fcoml
mov
mov
xchg
xor
jne
ljmp
cli
addr16
push
and
out
push
mov
repz
rclb
pop
xor
shll
or
les
inc
and
sbb
cmp
push
shrb
dec
mov
mov
or
cmp
out
leave
and
sub
ss
fadd
sahf
mov
add
lock
std
cmp
jle
fistpll
ss
push
cwtl
ljmp
add
repnz
loop
lcall
in
call
outsl
cwtl
rorl
out
push
in
pop
xchg
jmp
xchg
popa
mov
mov
loopw
and
inc
pop
push
hlt
sub
and
mov
adc
gs
lock
mov
and
enter
dec
jo
xor
popf
add
jmp
adc
fwait
mov
jnp
jecxz
sub
xacquire
arpl
xorl
test
lret
leave
push
repnz
xchg
bound
push
push
sbb
out
jns
rcrb
aas
mov
daa
pop
imul
lahf
sub
repz
data16
mov
dec
inc
inc
rcll
lret
adc
ret
adc
movsb
mov
das
loopne
pop
dec
jl
mov
int3
and
xlat
push
xlat
xchg
pop
push
std
out
inc
mov
mov
push
xchg
pop
lds
xlat
ficompl
inc
and
add
add
add
jne
mov
fwait
xchg
fwait
add
and
push
stos
fucomip
fcoms
jge
clc
inc
stc
repz
cld
outsb
bnd
cmp
clc
aaa
imul
cmp
xchg
movsl
sub
cmp
pop
inc
imul
jecxz
shrb
sub
xchg
cmpsb
xchg
sarl
xlat
cmp
sbb
xor
daa
out
ret
push
xchg
sbb
fwait
repz
sbb
mov
mov
cwtl
mov
xchg
hlt
popf
add
push
and
daa
push
sbb
imul
test
mov
call
xchg
xor
outsb
in
outsb
adc
lret
sbb
push
adc
push
mov
jns
or
fisttpll
repz
js
cs
rorb
stos
es
sub
mov
push
leave
mov
rorl
pusha
mov
add
add
sub
iret
outsb
jmp
push
test
std
push
add
add
dec
test
add
lahf
mov
xchg
mov
mov
jg
mov
scas
adc
jb
and
adc
lods
xor
or
and
scas
inc
adc
adc
sub
dec
scas
mov
rcrb
sbb
jbe
lods
int3
rolb
push
movsb
push
out
cmpsb
inc
mov
and
sti
xor
out
clc
int3
pushf
push
leave
jg
mov
xchg
or
rclb
loop
pop
mov
sbb
into
fstl
and
and
push
cmp
mov
jae
xchg
pop
mov
push
loopne
sahf
jmp
js,pt
pop
and
mov
xor
add
pushf
or
mov
pop
mov
xchg
fmull
sub
xorl
imul
dec
icebp
xor
mov
and
je
jno
push
in
jmp
sbb
out
testl
pop
dec
mov
add
add
std
sbb
stc
cld
or
sub
adc
add
add
je
mov
cli
pop
push
loop
xor
mov
mov
sbb
cmp
clc
lcall
sti
neg
lock
bnd
inc
sti
cmp
lea
int3
popa
push
or
test
int3
mov
lret
xchg
es
push
xor
rcrb
mov
mul
xor
out
mov
in
push
mov
test
mov
mov
and
push
push
sub
and
mov
hlt
sub
sbb
and
add
xchg
jmp
mov
lcall
loope
xor
loope
cmp
mov
js
adcb
shll
ja
and
fldenv
mov
movsl
push
test
dec
sbb
mov
push
neg
insl
sub
mov
int3
cwtl
mov
add
mov
aam
fimull
jp
lods
push
in
jmp
pop
in
int3
push
sti
in
mov
fwait
negl
adc
pop
xchg
cmpsb
mov
adc
add
push
mov
adc
rcll
and
call
push
mov
add
mov
sti
xchg
fidivl
in
les
jbe
sub
adc
lcall
addl
xchg
push
lods
lahf
repnz
mov
dec
and
mov
leave
popf
add
dec
dec
daa
xchg
ljmp
sub
dec
sbb
in
xchg
ror
in
cmp
stos
neg
call
in
xchg
stc
lcall
fwait
icebp
pop
call
xor
xchg
dec
cmp
sub
sub
pop
repz
inc
jno
mov
scas
or
jle
mov
push
sbb
sbb
pavgb
mov
and
push
or
rep
inc
rclb
arpl
shll
cli
or
lcall
and
add
add
dec
pushl
lods
mov
mov
add
add
ja
push
mov
pushf
jno
bound
aad
and
and
in
cmp
pop
std
sbb
cli
sahf
fwait
cltd
cmpsl
mov
stc
shlb
cmpsb
fidivrs
aam
push
add
push
rcrl
jmp
test
addr16
cltd
fidivrl
fcompp
loop
nop
dec
fimull
repz
adc
adc
in
xor
hlt
push
sbb
jl
into
inc
xor
xchg
and
test
sbb
mov
mov
pusha
pop
xorl
lock
jne
pushf
test
outsb
mov
das
mov
push
lea
sub
add
cmp
mov
test
imul
mov
fwait
mov
sbb
sub
xlat
je
cld
jno
mov
push
push
cmp
mov
mov
sub
aaa
pop
jmp
mov
iret
mov
ret
jmp
sbb
pop
sub
inc
ja
pop
aas
dec
push
mov
lock
add
add
add
adc
push
frstor
or
and
mov
push
mov
mov
xlat
popa
adc
pop
push
sar
cld
bound
jp
icebp
imul
mov
cmp
cli
jo
push
pop
repz
lock
aas
loop
popa
int
inc
xlat
stos
into
repz
xor
into
dec
pop
add
xor
cmc
stc
popf
shll
jae
decl
xchg
test
movsb
push
mov
mov
scas
or
icebp
xlat
int
xchg
fcomi
dec
jl
or
mov
ds
dec
xchg
insl
lcall
not
pop
subb
push
ja
and
or
sub
sahf
jnp
xchg
hlt
subb
dec
pop
sbbb
pop
rcl
fwait
push
mov
stos
add
sub
and
inc
fisttpll
ret
int
fcmove
sub
enter
mov
sbb
repz
jae
ja
div
mov
mov
sbb
add
add
jbe
pop
dec
lahf
scas
inc
lods
mov
cmp
push
jmp
dec
pop
push
jne
add
jne
push
popf
jne
mov
mov
jae
ret
aad
xchg
push
loopne
divl
lahf
ret
push
lahf
or
popa
pop
mov
stos
mov
inc
jns
jle
xchg
inc
jno
pop
xor
pop
test
and
adc
lcall
pop
inc
xchg
push
ret
push
leave
rcrb
lahf
bound
cmpsl
push
adc
shrl
mov
jnp
scas
mov
pusha
leave
cltd
hlt
ret
cmp
movsb
sarl
sub
push
lock
rep
shlb
test
mov
mov
mov
lds
adc
adc
xchg
les
repz
incl
fcoml
sub
repz
xchg
mov
js
mov
cltd
arpl
dec
push
cmpl
in
sbb
xor
cli
std
jg
push
pushf
dec
pop
pop
test
clc
sbb
add
add
push
dec
xor
mov
lret
push
and
sub
sarl
mov
aas
in
mov
mov
shr
in
cwtl
fists
rcll
addr16
mov
push
jle
fs
and
cmp
pop
mov
mov
or
xchg
mov
jl
jl
into
jl
sbb
mov
mov
mov
imull
sub
cs
fdivl
rolb
cmp
mov
cmp
push
fimuls
mov
push
lret
xchg
enter
subl
mov
dec
pop
or
mov
shrl
ljmp
stc
sbb
in
ret
mov
rol
push
dec
mov
insb
roll
or
nop
sti
ljmp
and
nop
sahf
gs
ja
or
dec
or
xor
adc
jns
in
movsl
testl
incl
sbb
mov
sbb
add
add
push
aad
sbb
cmp
xor
dec
dec
je
mov
push
fdivrs
bound
and
stc
adc
pop
insb
cmp
jmp
add
fbstp
or
xlat
pop
std
jmp
mov
mov
sub
loope,pt
add
loope
and
repnz
or
stos
xlat
mov
addr16
pusha
fcoms
xchg
add
push
rcrl
cmp
pop
ret
pusha
sub
ljmp
push
outsb
scas
jne
in
sbb
push
jo
mov
int
aaa
cmp
xor
xchg
inc
jno
lds
nopl
andl
bound
push
mov
xlat
lret
pop
lea
push
pop
and
fwait
cmp
cwtl
cmp
dec
ds
call
cmpsl
xor
and
mov
ss
xchg
jp
add
add
es
jg
pop
or
xor
or
add
add
cli
lock
inc
imul
mov
ja
adc
adc
test
sbb
mov
push
adcl
aad
mov
mov
in
pop
mov
or
lret
mov
dec
xlat
fcomps
mov
sub
pusha
sub
stos
xor
imul
fs
xchg
cld
pop
popf
push
jle
add
js
lea
pop
fstl
nop
dec
mov
push
mov
jle
faddl
cmc
push
push
ret
iret
inc
cmp
push
movsb
adc
jl
inc
sub
push
xor
in
inc
inc
test
mov
pop
insl
sbb
xchg
mov
dec
xor
mov
cmp
cmpsb
fistpll
or
mov
add
pop
xchg
pop
je
mov
fbstp
insb
add
outsl
jnp
cmp
mov
aaa
sub
jae
roll
test
add
adc
xor
stos
mov
ds
rolb
add
add
or
dec
push
cmp
sbb
add
std
in
xor
decl
sbbb
adcb
xchg
adc
xchg
sub
testl
dec
jno
enter
stos
data16
cmpsl
pop
lret
or
mov
fs
mov
ret
ret
mov
out
int3
lea
jle
cltd
mov
fldt
int
gs
test
or
ljmp
dec
daa
add
mov
push
fiaddl
fcmovbe
cmpsl
fadd
lret
fbld
popa
sub
popf
lahf
xor
mov
and
lods
jne
push
aas
in
clc
imull
mov
mov
sub
pusha
sbb
lods
ds
push
insl
sbb
adc
push
sub
scas
cmpsl
orb
cwtl
orb
or
pop
or
inc
jno
sbb
daa
repz
mov
adc
add
pop
hlt
sub
lea
pop
or
lods
adc
add
add
stc
lods
xor
mov
scas
aas
or
add
add
add
or
ljmp
push
dec
inc
push
inc
adc
push
scas
and
in
sti
mov
and
mov
aad
inc
inc
pop
mov
imul
nop
or
inc
cmpsl
lret
dec
cmpsb
or
sbb
bound
ljmp
filds
mov
inc
idivl
lea
imul
out
mov
inc
jno
cmpsl
mov
into
shrb
pusha
jae
inc
dec
pop
sti
stc
int
push
mov
cmovbe
and
mov
sub
push
push
add
divl
fsubrs
icebp
or
in
pop
mull
and
test
lahf
stc
add
xchg
lds
ds
mov
cmpb
das
cmp
jns
out
and
cmp
lods
xor
mov
ja
ret
lock
dec
lods
shll
addb
add
sub
add
fiadds
xor
jmp
add
ficoms
stos
sbb
call
mov
or
add
add
add
ds
rcll
pop
xlat
cmp
lods
fcoml
sarb
adc
mov
jnp
xor
xor
lods
mov
cwtl
mov
sbb
cwtl
sbb
mov
mov
and
sbb
inc
or
bound
or
jle
mov
jg
loop
push
mov
dec
adc
cmpsb
mov
fsubrp
into
pop
mov
andl
jge
push
jmp
stos
xchg
jg
xchg
cltd
or
push
cld
mov
mov
out
sbb
mov
loope
addr16
mov
mov
je
ss
xor
in
ja
pusha
jge
inc
add
popa
notb
xlat
xor
push
sub
outsb
or
lods
out
lods
adc
pop
lea
clc
xchg
xor
repnz
ss
mov
sub
push
adc
pop
test
xlat
pop
into
cmp
inc
out
aam
adc
push
ljmp
mov
out
stos
jge
or
cli
pop
sub
and
add
add
les
aad
fidivs
iret
data16
js
dec
dec
and
sahf
aas
push
jmp
sbb
xchg
and
sarl
pop
mov
jbe
outsb
pop
adc
movsl
jae
inc
in
les
nop
inc
mov
or
inc
sbb
scas
sub
in
dec
sub
addr16
cli
mov
pop
addr16
mov
push
xor
orl
jg
mov
or
ret
mov
inc
fistpl
mov
jne
push
ret
sub
movsl
pop
mov
pusha
roll
xor
in
into
enter
orl
xsavec
or
sbb
inc
sti
jle
fsubrs
andb
clc
jb
adc
add
les
outsl
xchg
ret
rclb
inc
inc
add
sbb
cmp
xor
sub
ret
out
scas
ljmp
add
dec
or
out
xchg
iret
push
aas
lea
outsl
adc
add
add
add
pop
roll
push
adc
addr16
mov
mov
xor
xchg
pop
add
pushf
add
dec
fstpt
ret
or
mov
and
in
jnp
repnz
sub
sbb
and
js
shlb
push
or
popa
lcall
sbb
test
lea
pop
test
and
outsb
xor
and
repz
int3
add
push
out
addb
pop
cmp
mov
mov
pop
adc
push
and
mov
lea
or
dec
inc
and
and
xor
push
popf
xchg
add
sti
mov
inc
cmp
fwait
xor
adc
sbb
mov
xor
push
jl
mov
fs
xor
cmpsl
add
mov
pop
adc
lret
push
add
add
in
add
cmp
out
loope
jns
mov
and
add
add
inc
cld
mov
test
dec
out
test
push
jmp
sti
add
dec
mov
pusha
mov
push
inc
cmp
cmp
insb
sarb
inc
xchg
and
and
fidivrl
adc
push
ja
sbb
sbb
jecxz
movsl
mov
mov
pop
lcall
js
pop
fiadds
bound
jae
cmp
sub
lods
int3
jmp
sti
stos
in
mov
sbb
int
dec
xor
nop
xchg
adc
mov
or
pop
insb
rorl
icebp
in
into
pop
fcoms
test
pop
lahf
dec
arpl
fidivl
mov
hlt
inc
mov
rol
jae
fstp
mov
jae
fists
push
inc
or
jecxz
lods
mov
mov
enter
fstpt
adcb
xor
mov
jg
and
aam
lods
push
pop
das
fsubr
mov
cmp
ror
mov
add
test
sbb
sti
push
mov
fstps
add
add
add
add
idivb
fbstp
dec
mov
nop
dec
sub
cmpb
insl
xchg
jnp
mov
mov
inc
push
imul
dec
jp
pushf
shrb
in
cmpsb
mov
and
nop
jg
mov
push
inc
fsubrp
dec
cmpsl
mov
jns
and
mov
sarb
mov
push
scas
jg
xchg
icebp
xor
mov
pop
xor
and
or
int
das
mov
bound
mov
cmpsl
or
clc
sti
pushf
and
js
in
hlt
add
jne
mov
dec
outsb
out
addb
xor
pop
push
xchg
aas
jno
mov
cmp
daa
dec
rorl
stos
push
mov
xor
lahf
add
int3
push
aad
jg
int
jg
dec
iret
mov
jle
in
dec
movsl
movsb
jae
aas
imul
les
add
mov
dec
idivl
cld
ret
add
push
cmpsl
xor
and
add
add
mov
mov
stc
lods
push
rcrb
adc
sub
jo
dec
shlb
mov
cmpsl
adc
sbb
jae
cmp
mov
jle
mov
fiaddl
jbe
jnp
loopne
push
mov
mov
shlb
daa
jno
jmp
fstl
shrb
neg
fs
mov
aas
xchg
mov
mov
mov
push
imul
mov
push
mov
pushl
dec
adc
test
xor
push
push
mov
shl
mov
aas
ss
mov
mov
sarl
jb
lcall
xor
int3
push
int
cld
mov
test
cmp
push
adc
sbb
mov
sub
inc
pop
addl
popa
mov
cltd
push
xor
sub
fiaddl
ret
mov
iret
mov
lods
std
movsl
xor
and
add
xchg
fsub
dec
cmp
dec
aad
cmp
subb
push
hlt
je
pop
enter
insb
jle
pop
jle
pop
sbb
lds
jne
push
gs
int
fs
mov
leave
xor
fs
xchg
fwait
sub
push
mov
xor
dec
add
loop
add
aam
jae
and
inc
ret
push
roll
hlt
outsl
pop
ljmp
mov
cmp
fs
fs
xor
mov
scas
xor
inc
mov
xchg
dec
xchg
or
xchg
jns
jae
pop
enter
adc
int
jle
das
mov
sub
rcr
repz
into
pop
clc
pop
cmpl
dec
fidivrl
push
gs
cld
pop
out
and
fnstenv
xchg
inc
xor
jecxz
adc
dec
movsb
sbb
ds
pop
jae
shll
push
das
les
ss
cmpsb
cmp
hlt
or
jg
arpl
or
out
add
add
add
xor
cmp
ds
mov
push
and
iret
mov
sbb
push
movsl
add
repz
dec
popa
stos
in
dec
push
push
mov
ljmp
cmc
repnz
movsl
xor
xchg
outsl
cmp
fnsave
je
movsb
mov
loopne
add
mov
cmp
loopne
mov
jmp
mov
or
jge
lret
xor
je
shlb
dec
sbbl
icebp
pop
push
dec
jecxz
aad
jp
mov
push
xor
mov
or
les
mov
out
fdivr
jns
xchg
lcall
push
cmpsb
mov
fdivr
into
inc
lea
aaa
lds
mov
out
into
fisttpll
sub
fildll
mov
jae
push
stos
and
fsubs
sti
hlt
fisubrl
in
cltd
mov
loope
ja
testl
add
add
xor
clc
cli
clc
sarb
sti
mov
ret
daa
add
add
add
pop
ret
jne
mov
mov
loop
mov
ret
jecxz
subb
mov
arpl
aam
cmp
hlt
xor
sub
inc
and
fsts
push
add
xchg
mov
addl
mov
sub
inc
pop
sbb
push
pusha
lods
cmpsl
push
dec
lock
jge
pop
repnz
rep
ljmp
push
jmp
lret
inc
arpl
lret
add
pop
adc
cmpsl
jg
mov
repz
imul
aam
inc
adc
jno
or
inc
adc
loope
shlb
push
dec
jmp
clc
inc
negb
jne
jmp
lock
jo
inc
and
push
cmc
pop
aad
and
stos
sub
add
mov
or
push
pop
fcomip
lahf
hlt
cmp
enter
orb
sbb
cmp
or
fadd
sub
out
pop
adc
add
add
jnp
out
mov
hlt
aaa
xor
add
add
add
roll
imul
mov
and
push
xor
pop
xchg
fdivrp
push
sub
xor
into
sahf
mov
sub
mov
inc
lods
jecxz
mov
pop
sahf
xchg
or
sub
mov
inc
add
add
mov
mov
pop
scas
mov
fwait
xlat
push
inc
lea
movsb
lods
add
ret
testb
fistl
jge
dec
mov
outsb
pop
mov
je
or
push
ret
loop
lret
gs
cmpsb
loop
mov
or
fwait
push
lods
icebp
das
dec
cmp
jp
xchg
test
sbb
jl
ja
add
in
in
es
fstp
and
loopne
mov
fbld
push
jae
and
push
jbe
or
cwtl
out
mov
jae
push
adc
cs
sub
add
pop
jp
imul
daa
loop
mov
and
add
es
data16
insb
daa
mov
enter
xor
add
add
add
jmp
pop
inc
or
mov
std
cmp
xor
nop
pop
pop
daa
outsb
enter
rcll
pop
push
sub
pop
push
lods
inc
cs
mov
pop
insb
cmpl
jno
push
scas
mov
jge
xor
jbe
xor
and
int
outsb
pop
loope
dec
sti
dec
ret
xor
mov
mov
jne
xor
scas
dec
fucom
xchg
enter
lss
push
cmp
dec
dec
mov
inc
or
dec
cmpsl
in
adc
sub
sahf
pop
faddl
mov
loope
in
xchg
and
int
push
shrb
cld
add
pop
out
jle
add
gs
jmp
popa
push
lods
mov
jl
movsb
adc
cmp
and
mov
and
mov
je
cmc
jge
mov
xor
in
jmp
sub
mov
addl
add
add
dec
mov
imul
adc
add
add
jp
mov
int
mov
mov
or
mov
xorb
adc
fists
repz
mov
sahf
popf
cwtl
mov
scas
popf
call
jae
add
int
andb
into
jno
fldt
or
mov
out
or
or
push
fst
mov
push
pop
js
cmpsl
cmpsl
adcl
fs
adc
cmp
push
and
cmp
in
jl
push
mov
mov
in
das
ds
push
fst
or
into
dec
das
cmpsl
pop
lahf
xor
loope,pt
jo
sbb
lret
enter
mov
stos
and
mov
lods
mov
sbb
in
xchg
dec
out
mov
ss
je
rcr
inc
pmulhw
int
add
out
mov
lods
xchg
jae
pusha
cmpsl
fwait
or
add
jbe
hlt
es
les
add
in
inc
add
add
add
and
push
sti
cmpsl
enter
jmp
test
cmp
add
add
add
or
jmp
clc
daa
notl
insl
push
shll
pop
xlat
aas
xchg
shlb
sbb
fld
xchg
cltd
sbb
sbb
bound
lret
mov
fwait
pop
and
jbe
dec
inc
jl
jns
fisttpl
outsl
imul
and
bound
aam
out
jb
xorb
xor
dec
leave
cmc
push
xchg
sub
insl
inc
inc
mov
lret
cmp
pop
cmp
jo
gs
movsb
or
std
cmp
add
xor
aaa
shlb
sub
jle
push
outsb
adc
repnz
negl
dec
mov
aam
dec
mov
and
fistpll
cmp
test
push
mov
cmp
popa
cmp
push
es
pop
mov
or
mov
cwtl
outsb
add
jno
ss
movsb
lock
add
add
add
mov
std
mov
dec
push
addb
add
add
mov
pop
mov
jnp
mov
data16
xchg
pop
push
push
sub
pop
push
and
cld
sub
fisubl
dec
push
push
mov
sub
out
mov
lods
push
jg
sbb
rcr
aad
fwait
xchg
cmp
mov
inc
push
cli
insb
add
xlat
lock
cli
mov
mov
ret
xor
lret
cmp
mov
pop
inc
mov
ror
pop
movsl
xchg
fdivrs
xchg
pop
mov
enter
inc
push
movsl
rolb
mov
das
mov
outsb
les
xor
aas
test
add
lret
mov
sti
rcrl
lahf
idivl
inc
xchg
or
fs
xor
loope
pop
xor
ret
pop
adc
fadd
xchg
cli
dec
jle
addr16
cmp
aas
push
out
mov
xor
out
xchg
scas
xchg
mov
sbb
lods
push
xchg
fnstenv
lds
xchg
and
inc
and
lcall
add
add
add
and
cwtl
stos
cmp
test
add
divl
frstor
leave
mov
sbb
sbb
ret
daa
mov
repz
adc
sub
mov
jmp
push
fcomi
sbb
les
fsubrl
lods
mov
in
fidivrl
mov
mov
fsubl
addr16
stos
lds
mov
pop
inc
orb
bound
pop
push
lods
mov
and
outsl
daa
sti
dec
int3
pop
xor
push
out
ja
mov
cltd
test
push
dec
aam
neg
and
fildl
or
sbb
push
sbb
sti
cmp
and
dec
in
inc
imul
pop
loop
adc
and
xchg
cmpb
mov
pusha
cwtl
mov
je
cmp
jae
mov
jb
mov
addr16
repz
mov
inc
ljmp
add
add
fiaddl
ret
ficomps
cmp
lahf
mov
int
dec
add
add
add
inc
xchg
jl
outsl
inc
mov
lahf
dec
pop
leave
xchg
les
movsl
or
jmp
data16
lret
mov
push
mov
imul
pop
repnz
ss
or
bound
xchg
jle
les
out
jae
sti
sbb
sbb
mov
dec
mov
push
int
aaa
push
inc
gs
out
add
roll
test
jb
aad
add
cli
jecxz
cs
cmp
dec
push
scas
pop
pop
in
mov
jmp
and
xchg
movsb
call
sbb
mov
int3
ja
sub
push
inc
test
in
test
sarl
push
dec
test
mov
cli
lock
xlat
ljmp
inc
inc
mov
das
icebp
push
mov
enter
push
test
sbb
inc
pop
lods
push
sbb
add
dec
xlat
mov
mov
sbb
sti
arpl
ja
sub
add
sub
dec
das
add
add
add
xchg
or
push
push
xchg
sub
cli
mov
lcall
and
push
je
pop
call
dec
xor
or
bnd
adc
mov
out
std
and
lods
in
mov
jmp
test
cmpsl
ss
push
data16
imul
aas
enter
daa
int
add
pop
out
repz
repnz
dec
jp
mov
scas
xchg
mov
push
clc
push
jecxz
xchg
mov
int3
jg
add
orl
movl
in
shll
aad
jae
mov
sbb
add
je
push
xor
cmpsl
bound
pop
mov
ret
fiadds
cmp
mov
fistps
addr16
push
mov
fdivs
or
sbb
fistpl
adc
sbb
and
push
fldl
mov
add
add
lret
mov
or
lret
xchg
test
xor
add
add
in
out
push
mov
and
mov
inc
xchg
xchg
mov
jbe
adc
out
jnp
xor
dec
mov
in
rcrl
pushf
mov
vsubss
xchg
popf
repz
hlt
std
add
icebp
xchg
jp,pt
fnstsw
lahf
fmuls
xor
mov
shll
fcompl
into
std
in
out
sub
ret
rolb
cmp
out
insb
xlat
bound
cmp
mov
out
fwait
outsb
mov
scas
add
shlb
leave
aad
jo
sub
mov
adc
popf
pop
fildl
lret
sub
jnp
insb
lods
out
fdivrl
iret
sbb
scas
xor
je
sbb
scas
ret
jmp
dec
push
js
sti
enter
inc
into
adc
cmc
xor
and
fdiv
jo
inc
dec
add
cmpsl
lret
outsl
stc
das
out
adc
inc
sub
sti
pop
jge
neg
hlt
add
scas
push
xor
add
add
xchg
adc
clc
pop
and
out
inc
stc
push
out
pop
xchg
rcr
nop
mov
adc
xchg
or
dec
ja
jg
fiaddl
add
ret
xchg
bnd
mov
xchg
mov
pop
jo
mov
sub
xchg
jbe
jp
sbb
rorb
faddp
std
sbb
inc
out
mov
lcall
push
mov
jne
dec
mov
jo
mov
jmp
sub
or
addr16
frstor
cmp
pop
inc
imul
cld
dec
add
xchg
pop
addr16
dec
fidivrl
scas
xor
jl
test
pop
bound
jl
sub
xor
adc
pop
cmc
das
ficoml
dec
fistps
dec
dec
std
mov
ja
and
aaa
mov
stos
pop
jmp
inc
pop
test
sbb
xor
push
cld
mov
xchg
pop
add
iret
sub
add
add
fsub
std
in
popf
in
stc
jmp
cltd
jle
adc
add
add
add
aaa
xchg
ljmp
and
stos
lods
gs
dec
mov
arpl
cli
arpl
xchg
imul
std
jecxz
jle
fdiv
adc
test
fdivp
xchg
lds
inc
push
xchg
shlb
inc
iret
mov
xchg
inc
pop
dec
movsb
scas
or
inc
enter
push
sub
daa
sti
cli
sub
fchs
cltd
cmp
mov
or
std
popf
lret
mov
sti
cmp
cltd
je
inc
dec
cmp
and
leave
out
dec
and
pop
or
ljmp
outsb
inc
arpl
xchg
jnp
xor
into
xchg
and
xor
sub
push
cmpsl
mov
imul
pop
repnz
ret
or
lret
jae
xchg
popf
popf
sbb
popf
cwtl
test
and
movsl
leave
inc
mov
test
fisttpll
sub
jl
xlat
pop
jp
jnp
sti
xchg
jle
jp
lods
mov
sbb
add
add
sbb
inc
shll
test
js
cmp
adc
pop
clc
lahf
outsl
cld
lods
or
fsubrl
sbb
xlat
pop
xchg
add
in
or
movsb
inc
sbb
xor
adcb
xor
xor
fmuls
in
lds
or
leave
inc
push
add
mulb
push
lahf
mov
mov
xor
popf
sbb
daa
mov
pop
mov
mov
test
sbb
pop
int
cmp
jmp
sbb
and
and
cwtl
rcll
mov
cmp
sbb
pop
push
and
pushf
cmp
stc
int3
lods
jnp
and
cwtl
stos
cmp
imul
lcall
xor
mov
cmpsb
adc
aam
pop
cmp
pop
adc
dec
dec
es
scas
mov
push
jmp
push
movsb
enter
mov
add
add
push
sti
decb
mov
ds
xor
add
add
incb
push
and
sbb
mov
adc
mov
or
out
loope
sub
mov
pop
xchg
mov
cmp
int3
insb
daa
push
mov
leave
pand
inc
icebp
rcr
fdivp
mov
cld
mov
xchg
xor
imulb
in
nop
or
iret
and
jl
fisubrs
push
sbbb
fs
mov
daa
xor
test
mov
push
dec
out
sbb
and
jb
add
sti
cmp
sub
dec
hlt
cmp
pop
sub
sbb
jge
addb
out
pop
test
into
sbb
and
cmp
jae
pop
inc
jg
imul
in
inc
loop
cmp
adc
iret
mov
xchg
jle
loop
cmpsb
pop
cltd
std
mov
negb
loopne
imul
or
movl
mov
loop
fwait
push
ret
cmp
xor
hlt
aam
xchg
loopne
xor
add
xor
inc
dec
pop
hlt
out
dec
or
out
shrl
rclb
in
xchg
mov
sbb
cmp
icebp
mov
cmp
sbb
adc
das
cld
jae
loop
es
dec
int
clc
rcll
test
pop
bnd
mov
les
mov
mov
mov
mov
lret
mov
rcl
push
popf
adc
pop
sahf
jge
mov
mov
subb
lods
and
mov
cs
pop
lret
in
mov
push
mov
xchg
xchg
and
outsb
jg
cli
cmp
cmp
imul
shll
in
roll
cmpsb
sub
test
imul
popa
jg
imul
int3
in
xor
or
rclb
js
mov
and
add
add
cmp
jge
stos
lea
shrb
mov
push
add
add
sub
gs
inc
into
aas
repz
rorb
or
cmp
das
das
fwait
clc
cmp
sub
push
mov
sbb
sahf
mov
fbstp
xlat
daa
fdivrl
stos
cmpsl
fiaddl
and
repz
and
xor
and
ljmp
pusha
or
mov
roll
pop
mov
push
cmp
push
cmpsb
int3
cltd
lds
sti
cmp
add
push
in
call
sti
lcall
and
pop
jno
scas
notb
mov
mov
push
stc
mov
jae
push
loope
gs
pop
adc
pop
jbe
insl
movsl
cli
push
insb
jecxz
imul
sbb
sahf
push
rolb
movsb
dec
repnz
dec
test
cltd
loopne
lods
nop
ret
stc
mov
mov
push
das
xchg
sbb
cltd
fldt
push
xor
imul
add
add
rclb
nop
lcall
aaa
add
add
add
adcb
mov
add
push
mov
imul
je
minps
xchg
pusha
popa
jb
sahf
rorl
movl
push
pop
mov
cli
lahf
gs
lds
xor
xor
mov
out
cmp
mov
clc
aas
loop
lcall
popf
or
or
scas
pop
movsb
pop
xchg
data16
icebp
cld
mov
sub
push
pushl
pop
daa
fwait
jle
cmp
pop
scas
icebp
lock
mov
fnstsw
loope
add
adc
into
jge
push
or
fnstcw
pop
push
adc
sub
push
pop
ret
out
add
or
dec
or
loop
and
test
call
xchg
ss
dec
loop
jnp
mov
jecxz
add
mov
jge
adc
cs
jb
cmp
cmp
add
add
jbe
idivl
or
add
ljmp
add
lret
pop
leave
dec
mov
andb
or
sahf
fstps
mov
and
add
ret
insb
cmp
xor
aaa
test
push
shlb
stc
adc
mov
jp
hlt
popa
jo
fldenv
lret
jo
call
pop
lods
mov
imul
sub
push
inc
movsl
gs
adc
pop
cmp
idiv
mov
in
dec
sbb
inc
outsb
popf
push
les
and
and
xor
outsl
jp
testb
push
shlb
faddp
stc
aam
adc
jno
jns
pop
test
movsb
jmp
push
inc
mov
cmpsl
mov
adc
pop
sbb
mov
push
sahf
jbe
and
rdtsc
mov
jl
jno
xchg
mov
lods
jbe
cmp
dec
test
inc
pop
sub
mov
mov
cmc
mov
dec
and
outsb
sub
stos
fs
jmp
leave
aas
dec
ds
je
add
add
add
xchg
mov
aam
jae
mov
je
push
mov
jl
sub
xor
insb
push
loope
in
or
push
jne
dec
inc
inc
pop
out
movsb
outsl
enter
mov
cli
in
out
inc
add
test
in
loopne
test
in
mov
fst
push
test
sbb
idiv
sbb
mov
outsl
pop
dec
repz
push
jp
pop
xor
aaa
mov
mov
je
jg
iret
rclb
inc
jno
test
cwtl
rolb
push
sub
int3
test
sub
xchg
and
mov
cmp
das
imul
pop
and
pop
es
adc
int3
into
mov
iret
jle
adc
sbb
sbb
mov
arpl
push
pop
sub
push
adc
pop
js
sub
jbe
addr16
fadd
push
pop
mov
inc
les
scas
fistpll
outsl
testl
add
add
add
mov
inc
and
push
sahf
dec
jno
negb
movsl
repnz
inc
sub
jp
mov
out
idiv
adc
stos
or
stos
xor
stos
mov
lods
hlt
mov
in
jae
jae
out
xchg
push
cmp
xor
add
inc
ja
push
popa
arpl
or
dec
push
adc
push
adc
mov
pushf
pop
push
mov
sbb
and
mov
dec
imul
pop
mov
push
sbb
lret
lcall
ret
sub
shrl
pop
mov
push
xchg
jbe
loop
mov
iret
or
push
std
cmpsl
xor
arpl
lods
add
out
xchg
and
mov
sbb
jno
add
icebp
ja
popa
stos
mov
jb
daa
xor
sahf
adc
scas
ss
push
iret
or
xchg
inc
pop
sbb
jg
ret
mov
loope
or
stos
cli
into
les
sbb
jnp
jnp
cmp
movsb
push
sbb
data16
je
cmp
add
add
outsl
and
sub
adc
hlt
insb
lret
insl
or
cmp
sti
add
add
mov
decb
lock
jle
out
pop
fcoms
add
push
push
fldenv
mov
fcomip
repz
adc
adc
idivb
mov
clc
sahf
add
fdivr
rclb
pop
aas
hlt
pop
sub
cld
int3
inc
imul
fcomp
pop
xchg
sbb
ja
sub
mov
inc
dec
xor
add
outsl
xor
sbbl
les
xor
and
mov
out
add
jbe
bound
outsl
xorb
sub
add
repz
imul
fsts
dec
outsl
sub
bound
hlt
sbb
outsb
hlt
repz
cmp
ret
incb
lods
sbb
outsl
mov
fcmovb
jns
subl
lret
outsl
lret
mov
out
jmp
orl
add
add
jg
sub
sub
fcmovne
incl
xchg
or
outsl
jbe
xchg
mov
push
data16
adc
out
decb
ds
subb
fdivrs
xor
pop
adc
mov
adc
out
mov
cmpl
or
xor
xor
int3
mov
jmp
mov
pushf
iret
jnp
lea
sbb
inc
fnstcw
mov
xchg
adc
leave
and
fwait
pop
bnd
xchg
mov
aad
sub
call
icebp
dec
mov
sub
jp
arpl
xchg
cmp
and
adc
imul
pop
fnstsw
pop
repnz
pop
push
aam
add
inc
sub
or
xor
addr16
imul
add
loope
cwtl
xchg
sub
ret
cwtl
popa
js
inc
add
mov
xchg
and
push
pop
xchg
sub
outsl
mov
sahf
dec
in
fiaddl
mov
dec
lea
pop
lods
icebp
fwait
aas
and
das
cmp
lods
repz
mov
stc
aaa
fldt
test
add
std
ret
in
lret
lods
inc
ja
xor
push
xlat
jg
scas
mov
push
int
lahf
stos
pop
inc
xchg
rcrb
nop
sbb
xchg
mov
lock
adc
pop
mov
mov
cmp
arpl
sbbb
or
xchg
inc
shrl
jno
out
test
xor
int
sbb
sub
jbe
pushf
add
xchg
inc
jle
mov
cmp
push
jno
cld
out
dec
jns
lock
adc
lret
cmp
lea
mulb
cmp
je
add
sti
jp
mov
xor
repnz
out
inc
mov
and
lahf
rcrb
xchg
add
push
jo
pop
add
or
inc
add
hlt
push
cmpsl
test
inc
sti
xchg
lcall
add
clc
ljmp
test
sti
jmp
inc
mov
add
add
daa
push
cld
push
std
jmp
dec
push
jecxz
mov
add
add
add
push
xchg
adc
xor
push
inc
in
insb
sub
std
ret
js
lcall
movsl
pop
mov
push
lods
iret
sub
enter
insl
fadds
xor
push
or
add
jae
pop
pop
or
dec
imul
add
imul
nop
push
push
mov
je
cli
push
mov
int
add
in
push
aaa
pop
shl
mov
mov
cmp
push
int3
sbb
insl
aaa
cmp
aad
mov
mov
jae
mov
out
dec
test
xlat
jae
sbb
out
das
sbb
jge
sbb
in
nop
stos
or
pusha
sub
pop
jns
jl
mov
xor
mov
sbb
mov
sub
mov
xor
pushf
in
aas
imul
add
push
lcall
pop
xor
movsl
loopne
push
push
and
and
out
pop
jecxz
das
dec
jb
dec
es
add
dec
push
add
sbb
dec
push
out
aad
adc
cli
ljmp
add
mov
dec
bound
sbb
popa
pop
push
bound
lahf
mov
fs
fildll
das
xor
and
repnz
cmp
xlat
mov
pop
shr
push
jns
lret
sahf
daa
popf
xor
sub
out
scas
sbb
inc
push
hlt
pop
stos
popa
pop
je
mov
xchg
or
es
popa
xlat
jnp
int
jo
int3
dec
lods
cltd
xchg
negl
fidivs
mov
dec
lea
dec
push
repnz
neg
xchg
push
dec
pop
mov
xor
lcall
in
imul
jo
pop
pop
adc
jne
jns
ficompl
int
cld
mov
sub
ljmp
das
inc
sbb
and
hlt
dec
leave
in
retw
stos
aaa
out
pop
icebp
rcr
adc
add
dec
dec
stos
in
mov
ljmp
addr16
into
hlt
sbb
xchg
fcomp
ret
mov
adc
inc
addb
js
add
add
idivl
or
ds
or
add
add
sub
or
out
jmp
lea
mov
popf
insl
imul
mov
aad
out
lahf
aam
push
add
outsl
and
inc
mov
cmpsb
jno
or
leave
popf
mov
lahf
sbb
mov
push
mov
xor
mov
or
bound
sbb
xor
clc
ja
shll
comiss
imul
jne
or
dec
mov
lret
bound
push
mov
hlt
lock
xlat
pop
xchg
inc
add
fdivrl
mov
mov
mov
xlat
push
push
dec
jmp
mov
lods
xor
add
push
mov
push
mov
shr
sbb
pop
mov
test
adc
pop
mov
jbe
jecxz
dec
gs
int
lods
push
orl
add
mov
repz
add
mov
ja
jg
xchg
orl
pushf
xchg
inc
add
add
add
pop
jne
cs
push
mov
inc
out
adc
xchg
insl
test
imul
scas
sbb
sti
pop
imul
arpl
xor
cmp
filds
hlt
ret
jle
xchg
adc
pop
jmp
add
mov
push
and
xlat
insl
scas
cmp
xchg
jp
mov
push
cld
out
test
xor
mov
fldcw
push
repnz
fimuls
or
and
shrb
bound
lods
lds
sbb
arpl
mov
sub
adc
cmc
mov
dec
xor
daa
mov
leave
cmp
je
mov
adc
clc
ljmp
add
xchg
int
shl
pop
inc
mov
mov
hlt
int3
mov
test
arpl
jae
jbe
arpl
xchg
dec
lcall
loopne
lods
and
dec
lret
jmp
imul
aaa
je
leave
call
add
add
or
add
xor
pop
pop
imul
fstpt
cltd
lcall
xchg
arpl
aad
and
jne,pn
test
jecxz
mov
cmpsb
scas
scas
jmp
rcrl
out
push
lods
sub
add
in
movsl
cmc
cmp
out
fisubrs
mov
jecxz
popf
gs
push
mov
cwtl
dec
lcall
cmp
sub
mov
cmpsb
or
hlt
cmp
divl
sub
add
aam
mov
sahf
and
and
lods
aam
int3
adc
push
and
push
daa
icebp
cmp
lret
loope
cmp
call
arpl
jle
out
fbstp
sbb
int
pop
sbb
rorb
lock
test
cmpsl
xchg
ja
mov
or
inc
cs
inc
test
fimull
adc
pop
neg
in
aad
push
data16
pop
fcmovnbe
cltd
loop
in
dec
mov
xorb
bound
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
arpl
add
lods
mov
clc
rcll
imul
dec
sub
negl
mov
flds
imull
mov
push
xchg
mov
jb
mov
mov
cmp
pop
cmp
jns
cmp
repz
mov
movsb
dec
out
push
and
add
dec
daa
and
clc
pop
fdivrs
or
clc
jb
std
insb
xor
mov
in
xor
movsb
adc
lds
mov
data16
adc
iret
test
outsb
in
or
iret
lret
pushf
cmpsb
dec
sti
xchg
js
xor
pop
shll
dec
xchg
xor
movsb
scas
jns
mov
mov
gs
aam
pop
or
mov
in
ljmp
mov
aad
sub
dec
xor
mov
aam
scas
into
je
cwtl
jmp
add
jns
xor
jg
movb
inc
add
add
add
sarl
jne
test
mov
mov
punpcklbw
inc
enter
aam
mov
sub
inc
cmpsb
push
jle
add
sbb
push
add
sbb
jo
dec
or
stc
int
arpl
daa
push
mov
mov
fstps
mov
out
mov
and
add
push
rol
daa
stos
imul
mov
imul
loope
in
ficoms
lds
sub
shll
or
jle
mov
mulb
adc
int
push
idivb
js
add
andl
xchg
packsswb
imul
js
jne
movsb
call
xchg
jmp
ret
dec
jmp
or
aas
cltd
adc
jmp
ds
xchg
fs
dec
fmull
cld
cmp
sub
fsubs
add
add
ret
jg
decl
rol
in
ror
movsb
inc
add
add
add
unpcklps
cld
mov
add
imul
push
lcall
out
adc
into
movsb
ljmp
sbb
pop
sbb
pop
movl
mov
in
mov
sub
jle
cltd
push
mov
mov
arpl
and
jl
arpl
rcll
std
das
loope
sbb
outsl
test
aas
mul
adc
jo
cmp
jmp
stos
dec
ror
mov
rcrl
mov
push
pusha
jnp
sbb
sbb
dec
aas
std
sbb
aas
mov
jle
pop
and
loope
aad
push
leave
cmp
sarb
xchg
loope
dec
and
mov
repnz
and
stos
sahf
sbb
sbb
sub
xchg
jecxz
sub
dec
mov
out
jmp
imul
outsb
jge
cli
pop
inc
pop
adc
push
dec
or
add
add
das
mov
out
aad
or
and
add
add
rorl
mov
outsl
mov
sbb
inc
leave
clc
arpl
mov
cmp
push
inc
cmp
xchg
mov
xchg
adc
and
ja,pt
or
test
jge
and
leave
and
adc
mov
jecxz
xchg
mov
lahf
lods
pop
addr16
rclb
pop
je
mov
or
lea
pop
test
rclb
or
lods
cmp
cltd
adc
loope
icebp
sbb
mulb
add
adc
icebp
jbe
aaa
paddw
fnstsw
mov
outsl
dec
rol
fprem
xor
and
dec
popf
fsubrs
mul
and
add
xlat
std
xor
push
out
rorl
out
aas
pop
je
mov
sbb
dec
xor
mov
aas
cmp
outsb
call
push
mov
iret
loopne
int3
mov
or
jb
add
add
hlt
gs
dec
adc
cli
add
add
push
adc
pop
cmpsl
push
hlt
testl
rorl
stos
ja
mov
gs
movsb
adc
lods
sbb
imul
mov
cld
loopne
scas
xchg
mov
cmp
movsl
pop
xor
flds
sub
cmp
jae
lret
js
mov
mov
and
rcrl
aad
mov
lea
daa
cld
clc
enter
incb
and
fldt
inc
js,pt
push
cltd
loope
push
mov
mov
nop
pop
sub
dec
out
lods
cmpsl
xchg
mov
push
sbb
mov
flds
mov
xor
mov
xchg
jle
dec
push
scas
ret
shrl
mov
movsl
xlat
mov
mov
sbb
add
aad
outsb
mov
loop
pop
idivb
nop
lahf
pusha
les
pop
xchg
or
sahf
xchg
aam
pop
sub
ds
add
aas
gs
pop
repnz
dec
add
add
add
das
outsb
ficomps
sub
dec
jg
pop
test
in
scas
clc
outsl
cmp
jns
es
ds
sbb
rclb
scas
test
mov
mov
js
mov
in
insb
in
bound
and
fwait
adc
int
imul
xchg
mull
mov
cltd
push
fimuls
lods
push
sub
sti
mov
sbb
push
push
xchg
xchg
arpl
cmpsl
mov
test
dec
nop
push
xchg
mov
mov
decb
push
dec
lret
movsb
stc
dec
stc
es
mov
sbb
jl
iret
sbb
mov
bswap
xlat
jno
bound
ljmp
add
rcll
sbb
fstps
cmp
repnz
repz
cltd
mov
ja
inc
scas
dec
and
es
push
sub
xor
lds
adc
iret
dec
lcall
adc
and
add
add
out
fisttpll
lock
data16
mov
add
add
add
inc
dec
popa
lret
popa
sti
movsl
xchg
mov
pop
outsb
dec
test
test
cmp
pop
ror
jmp
xchg
je
call
mov
out
std
xlat
addr16
lahf
notb
test
xor
jmp
in
xor
add
dec
jecxz
ffree
jno
cli
add
xchg
test
xchg
aad
push
push
imul
fisubs
mov
pop
add
xchg
stos
and
dec
fldenv
pop
push
mov
repnz
xlat
divl
inc
and
jne
fildll
fxch
sbb
inc
out
dec
and
les
xchg
pop
push
jae,pn
mov
jbe
fs
imul
pop
notb
sub
sub
mov
push
lcall
mov
add
jbe
xor
cmp
repz
sbb
mov
clc
adc
and
and
into
adc
add
fildll
mov
ljmp
add
add
add
mov
mov
addl
mov
js
mov
fwait
lcall
int
fiadds
pop
mov
xor
pop
stos
std
clc
ds
xchg
cmp
adc
out
test
movl
mov
insb
xorl
test
shlb
movsb
adc
daa
mov
mov
push
shl
pop
sub
fiaddl
data16
ret
lret
rcrb
add
cli
mov
clc
pop
push
and
arpl
xlat
mov
jecxz
push
sub
pop
mov
jne
aaa
xor
cs
cmpsl
scas
fsubl
adc
push
popf
and
and
testb
sbb
add
pop
pop
int
inc
pop
xor
cmpsb
add
lret
daa
rolb
mov
mov
inc
popf
outsl
mov
je
in
lcall
out
cmc
and
mov
mov
mov
movsl
sbb
add
add
jmp
out
aas
jo
sahf
jb
dec
movsl
mov
add
add
mov
jge
or
sti
xchg
xchg
test
testl
push
test
sub
andb
repnz
jg
jno
push
mov
dec
push
mov
cwtl
sbb
insb
sbb
dec
out
mov
lods
pop
inc
cmpsl
mov
xchg
pop
adc
orl
add
in
jp
inc
jecxz
and
inc
cmp
enter
add
popf
out
sbb
dec
xchg
push
or
ror
dec
cld
imul
repz
popf
das
loop
push
outsl
sub
popf
cmc
dec
mov
popf
sub
push
rorb
cmp
sub
test
pop
xchg
pop
mov
adc
dec
cltd
sub
stos
xor
mov
or
jnp
xor
mov
cltd
dec
inc
and
lods
lea
popf
pop
lret
rcrb
sbb
mov
cmp
imul
out
mov
mov
rolb
add
add
jmp
jb,pn
and
jo
pop
jns
imul
shr
mov
lock
dec
lret
inc
mov
inc
dec
jbe
sub
and
inc
inc
and
adc
pop
adc
stos
xchg
sbb
jmp
dec
jne
push
pop
cwtl
cmp
frstor
xchg
xchg
pop
xchg
lds
cmp
shrb
das
inc
clc
cmp
mov
jae
test
scas
sbb
pop
stc
xor
insl
movb
cmp
mov
sbb
cmp
rorl
sbb
faddl
ds
dec
movsl
sub
notl
sbb
xlat
xorb
je
and
cmp
cs
adc
push
sbb
gs
shrb
push
mov
and
sbb
dec
fildl
dec
ret
pop
mov
lods
mov
push
sub
jb,pt
lods
bound
mov
rcrl
imul
js
add
dec
stc
mov
ljmp
les
add
add
mov
adc
adc
popa
dec
mov
ss
adc
sbb
movsl
lds
adc
and
jbe
lock
push
jmp
xchg
push
fstp
mov
jnp
add
push
test
mov
cli
and
in
push
in
cmp
push
mov
push
inc
sub
pop
outsb
adc
cmp
push
push
lods
push
xor
pop
push
sbb
addl
popf
push
js
adc
pop
outsl
decl
aam
pop
pop
int
mov
out
ljmp
hlt
loope
xchg
push
push
cld
xchg
mov
outsl
inc
jbe
lods
movsl
adc
aaa
out
sub
pop
lret
imul
data16
cli
or
sbb
add
xchg
inc
or
das
jnp
dec
pop
inc
sub
loope
negb
lret
sbbl
mov
cwtl
das
xchg
cmp
jle
jg
cld
lcall
mov
dec
add
add
add
and
int
test
jmp
push
jmp
test
sbb
test
pop
sbb
icebp
stc
int3
inc
jle
sbb
mov
fiaddl
jb
ds
pop
je
xor
mov
ljmp
movsl
push
imulb
or
fisubl
add
dec
jnp
pop
bound
daa
lods
mov
pop
inc
mov
mov
das
cmp
imul
add
scas
inc
aad
pop
mov
pop
insl
sub
mov
ror
fiadds
and
test
out
je
outsl
add
cbtw
cmovns
repnz
pusha
outsb
subl
cs
pushf
mov
pop
xchg
mov
int
jp
das
ret
and
and
mov
mov
adc
mov
notb
data16
mov
aaa
imul
pop
and
and
mov
ret
popa
pushf
pop
mov
jle
inc
sbb
filds
out
push
mov
mov
xchg
mov
pop
cmp
dec
add
add
add
mov
mov
pop
add
mov
loopne
sub
mov
xchg
xor
aaa
add
and
adc
ljmp
push
push
pop
adc
aas
push
mov
add
ret
cmpsb
leave
and
jge
daa
iret
fimuls
pushf
mov
jnp
loopne
adc
jp
jl
pushf
sub
sti
push
pop
mov
fstps
lcall
sbb
cli
repnz
aad
xchg
ss
pop
stos
xchg
cmpsb
sahf
mov
push
into
xchg
sbb
iret
imull
cmp
scas
dec
sti
fidivrs
mov
rcrl
inc
mov
or
sbb
cmp
in
pusha
dec
mov
leave
ja
notl
adc
push
sub
hlt
dec
daa
sbb
push
jno
and
nop
xor
fstps
cmp
rcrb
lods
in
dec
push
in
into
and
inc
sub
or
mov
and
adc
rclb
add
add
test
leave
pop
and
hlt
dec
imul
sub
andl
cwtl
xor
mov
lret
jecxz
push
iret
arpl
xor
hlt
fsubp
jns,pn
mov
lods
into
ljmp
and
in
aam
inc
sub
dec
leave
mov
cmpsb
cmp
test
push
xchg
test
lahf
cld
and
test
lods
pop
outsb
addr16
dec
sbb
pop
fnstenv
gs
mov
mov
das
scas
pushl
or
test
adc
out
lds
xchg
mov
and
outsl
push
ret
inc
ljmp
jae
movsl
pop
sub
push
jmp
imul
lock
add
test
std
hlt
sarl
pop
das
cmp
inc
or
insl
loopne
insl
xchg
mov
enter
mov
mov
or
inc
cltd
adc
push
popf
fsubrl
mov
out
cmp
ret
or
xor
rolb
add
add
pop
in
xchg
xchg
mov
jle
daa
mov
mov
cmp
cmpsb
or
mov
jmp
xor
sar
lea
xchg
and
bound
cmp
xchg
pushf
inc
fistps
sti
push
mov
in
adc
inc
pop
add
mov
sbb
inc
dec
sbb
cltd
jb
orl
mov
mov
lods
std
push
and
xor
aad
aas
ljmp
lea
xchg
jecxz
pop
sti
cltd
inc
leave
lods
xchg
cmp
in
push
in
inc
add
stc
jns
imul
dec
std
imul
lds
adc
aaa
mov
stos
jl
aad
test
xchg
out
or
dec
outsb
adc
icebp
stos
rcrb
mov
test
sbb
pop
mov
mov
repnz
fidivl
jno
outsl
insl
adc
cmp
adc
rcl
and
cmp
dec
in
pop
mov
testl
add
add
push
shll
out
pop
pop
pushf
push
mov
jb
fcoms
add
add
mov
jecxz
push
and
sub
mov
adc
shl
lods
iret
adc
push
push
pop
cmc
gs
mov
pop
mov
vpmaddwd
scas
pushf
js
jo
lahf
aaa
xchg
jp
pop
mov
test
je
mov
rcl
out
jl
inc
mov
sarl
das
push
lret
xor
sti
aad
push
stos
jle
adc
push
aad
cwtl
out
test
mov
daa
jns
insb
pusha
jle
xchg
nop
mov
mov
xor
dec
mov
in
dec
sbb
aam
cmc
in
jne
fidivrl
fwait
push
xor
scas
aas
rcrb
gs
inc
dec
rcrl
aas
jns
std
sbb
dec
mov
mov
sub
mov
and
mov
test
pop
push
arpl
inc
and
movl
add
stos
push
lcall
hlt
mov
push
jecxz
fcoml
add
add
mov
lret
adc
jae
fdivrp
cmp
js
mov
in
imul
push
rorl
mov
sub
aaa
or
jl
js,pn
push
xor
jae
popf
sbb
movsb
cmp
or
imul
inc
aad
fldt
gs
nop
andl
mov
xor
ja
mov
les
ljmp
push
das
jecxz
inc
ss
std
adc
stc
mov
mov
bnd
lds
jo
dec
loopne
xchg
mov
lcall
andb
cmpsl
xor
inc
jle
inc
add
call
add
mov
insb
mov
mov
mov
sahf
popa
mov
dec
popf
mov
bound
shrl
or
sbb
push
das
pusha
loope
scas
sub
gs
out
adc
xchg
jge
iret
sbb
sbb
iret
bound
imul
mov
add
add
sub
aad
push
cltd
push
xchg
imul
sbb
clc
sti
mov
mov
movsl
mov
pop
divb
lcall
adc
scas
mov
hlt
push
dec
in
rolb
imul
leave
push
cmc
iret
xchg
lock
int
les
pop
push
jb
cmp
adc
les
out
cmp
sbb
addl
out
pop
rorb
ja
mov
in
cmpsb
dec
inc
das
mov
mov
mov
mov
cmpsl
sbbl
dec
movsb
sti
hlt
ds
mov
jmp
mov
out
out
gs
movsb
leave
push
mov
loop
enter
adc
sub
mov
inc
cmp
ljmp
movsl
daa
jp
icebp
and
jecxz
test
xchg
and
adc
sarl
je
fcmovne
arpl
cmp
std
cmp
dec
pop
mov
adc
cmp
dec
jae
fwait
cmp
stos
sarb
in
add
add
add
sub
pop
dec
jmp
inc
push
jo
inc
popf
dec
std
das
in
xchg
mov
cli
movswl
jl
xchg
add
mov
subb
jbe
mov
add
mov
dec
jl
jg
je
out
data16
and
adc
add
pop
rol
sbb
shll
addr16
xor
mov
lcall
nop
jbe
aas
dec
in
sub
nop
xor
or
shlb
lret
repz
pop
outsl
push
push
pop
sub
push
cmc
xor
fstl
mov
add
cmc
xor
jo
daa
in
push
stos
dec
dec
xchg
lcall
ljmp
pop
icebp
xor
inc
mov
test
push
ret
je
enter
and
psubusb
mov
je
pop
test
pushf
jl
adc
push
inc
std
les
fimuls
jo
scas
jae
add
add
clc
mov
and
hlt
cmpsl
xor
add
add
add
sarb
xor
xor
addb
cs
dec
sub
fsts
ss
pop
scas
test
xchg
loope
or
arpl
jbe
lcall
mov
cmpsl
les
daa
dec
or
pop
jb
push
jmp
inc
sbb
repnz
pop
cmp
sub
pusha
dec
sbb
imul
loop
push
lock
jno
push
lods
mov
jmp
cmp
scas
adc
mov
cmpsl
inc
ds
mov
sbb
dec
ss
adc
aaa
adc
rorb
test
xchg
jne
cmpsb
mov
ror
test
int3
fnstsw
in
push
mov
fdiv
and
fildl
into
fistps
adc
add
jge
fbstp
pop
lods
iret
ja
mov
shrl
dec
std
add
fldcw
add
add
jno
add
add
shr
mov
sbb
add
add
add
pusha
fs
lds
repz
out
jg
in
xor
push
or
jns
jle
popf
inc
loop
lcall
xchg
push
paddq
push
arpl
sbb
or
sbb
mov
dec
push
shlb
jg
shl
inc
pop
mov
flds
roll
push
imul
mov
jno
sub
pusha
cmpl
or
cli
sub
aas
aam
shll
add
fisubrl
add
sub
hlt
lahf
sbb
xlat
es
push
fwait
push
dec
and
add
and
ret
mov
gs
les
lods
iret
mov
ja
stc
jl
dec
and
jmp
dec
test
shrb
cli
pop
push
arpl
xorl
xor
sub
inc
mov
aad
lret
xchg
dec
and
ret
mov
test
or
fdivs
sub
cmp
pop
add
add
add
pop
icebp
aas
iret
icebp
rclb
pop
iret
gs
mov
inc
mov
xor
mov
movsb
inc
cmp
sub
xchg
aam
in
jno
jecxz
inc
and
dec
sub
push
and
daa
fwait
inc
or
cmp
add
jmpw
test
movsb
or
adc
ljmp
enter
or
or
test
xchg
addr16
adc
sbb
xor
mov
loop
jg
enter
sti
loop
mov
stc
mov
xor
sub
jae
add
xchg
sbb
mov
stc
sahf
imul
popf
xlat
jp
test
out
push
push
xchg
push
inc
xor
jns
dec
xchg
adc
pop
xchg
popf
call
sub
ljmp
xchg
sbb
sub
push
push
cmp
mov
pop
fmuls
push
das
sub
add
add
mov
pusha
pop
das
stos
loope
pop
add
add
add
mov
pop
sub
and
mov
and
das
xor
scas
icebp
mov
push
rcrb
xor
ret
lock
or
cmp
lock
pop
mov
nop
inc
std
in
repnz
and
ds
xor
lock
inc
pop
enter
push
jne
pop
out
jno
je
push
movb
scas
loop
test
push
lahf
add
outsb
sub
popa
fcompl
nop
mov
data16
push
sub
bound
sbb
xor
lret
js
inc
shl
mov
jl
sub
mov
dec
in
push
rolw
dec
xchg
jo
hlt
push
aad
cmp
inc
and
inc
arpl
out
dec
negl
and
ret
sbbb
mov
pop
xchg
pushf
jp
imul
pop
lock
fcompl
frstor
hlt
ds
inc
les
jg
push
sub
mov
fsubl
mov
ja
mov
sub
popf
clc
pop
add
add
add
and
adc
loop
mov
ds
xor
in
dec
cmp
pop
icebp
push
ror
pop
dec
xor
es
mov
rorb
mov
inc
push
sti
sbb
add
jmp
mov
dec
dec
ficomps
push
daa
xor
data16
sahf
push
jecxz
add
adc
nop
cs
pop
xor
sub
jp
dec
aam
dec
je
lahf
cwtl
add
outsb
sub
hlt
fdivs
out
cmp
sbb
sar
test
adc
mov
cmp
mov
push
xchg
jecxz
xchg
gs
test
aam
daa
adc
hlt
sub
gs
dec
lods
push
cwtl
jmp
mov
lds
add
jmp
mov
inc
mov
inc
mov
mov
inc
subb
xchg
add
sub
loop
and
cmp
dec
loopne
or
decb
add
add
xor
xlat
out
cld
loopne
in
cld
pop
add
add
add
jns
mov
sahf
enter
imul
aaa
clc
stos
rorl
test
xlat
sbb
mov
subl
imul
iret
add
ds
popa
inc
add
inc
sbb
jbe
mov
jne
std
mov
add
gs
daa
jg
pop
or
imul
pop
push
and
lcall
lret
jns
adc
pop
lods
insl
push
orl
cwtl
cmc
fsubrl
inc
pop
sbb
stc
int
jmp
sub
jb
inc
rcrb
icebp
stos
sahf
mov
cmp
js
cmpb
sbb
je
xchg
sub
cmp
outsl
or
mov
repz
jmp
mov
repz
je
mov
sti
les
ror
les
cmp
aas
aaa
mov
fbld
jge
jl
std
or
clc
ja
in
or
or
mov
mov
in
adc
lcall
add
mov
push
lret
aaa
gs
dec
incl
xchg
insb
arpl
sbb
adc
mov
pop
inc
aad
clc
xlat
stc
push
adc
mov
adc
ds
xchg
scas
lret
bound
mov
lret
js
jle
stos
in
mov
add
sub
jae
rorl
inc
jns
addl
fs
dec
lahf
dec
cmpsb
jmp
bound
xorl
or
lds
mov
and
add
pushf
outsb
mov
cmc
mov
aas
cltd
cmovg
in
mov
jnp
aas
int3
aas
mov
lds
je
cld
jns
ljmp
jbe
mov
xchg
popf
lods
cmp
lods
pop
and
ja
fistpll
les
divl
mulb
lods
cmc
movsl
test
push
or
push
int
dec
cltd
jg
ds
js
xchg
push
xlat
inc
out
into
push
push
inc
lahf
mov
add
add
add
add
call
inc
test
pop
repz
aam
sbb
movsb
inc
in
mov
hlt
lock
inc
fnstcw
mov
test
xchg
sbb
dec
mov
ficompl
gs
mov
in
ret
cld
ficomps
je
in
jb
xlat
daa
pop
imull
pushf
jl
incl
inc
pop
cmpsb
mov
cld
divb
mov
xor
jle
push
push
lret
pop
roll
lds
cs
inc
jb
ror
daa
mov
or
test
push
and
sbb
in
imul
push
cmp
xor
xchg
fwait
adc
fstpt
jg
cmpsb
addb
loop
sar
sub
int3
mov
imul
xorb
imul
and
inc
test
insb
sub
cmpsl
sub
mov
jbe
jns
add
xlat
add
ret
xchg
js
cmp
add
add
xchg
inc
shl
xlat
mov
jg
or
or
add
add
pop
test
mov
outsl
test
loope
in
or
pop
xchg
sub
mov
jne
push
pop
iret
or
cmp
lods
scas
iret
jns
jge
dec
or
fwait
mov
cmp
outsl
imul
add
dec
loope
xor
cmp
add
xor
mov
cmp
dec
add
push
dec
out
sub
lds
iret
jb
or
dec
sbb
sbb
fdiv
mov
repnz
arpl
jge
dec
shlb
pop
push
sbb
das
lock
ret
aam
adc
add
stos
mov
fwait
mov
mov
push
ret
ficoms
cmp
lret
imul
push
dec
cli
ret
jae
xor
xchg
ljmp
dec
mov
cs
mov
gs
stos
outsb
ret
scas
hlt
push
xchg
xchg
adc
push
fldt
mov
dec
test
hlt
inc
outsb
dec
mov
push
push
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
add
add
add
ljmp
popf
lods
rcrl
xchg
ljmp
jl
std
sbbl
inc
mov
or
inc
hlt
jle
dec
add
sbb
dec
stc
movsl
pop
insl
bnd
pop
fisubs
fistpl
pop
les
in
pop
dec
mov
cli
movb
out
pop
imul
sbb
dec
inc
mov
xchg
mov
add
push
fwait
fstpl
pop
mov
lcall
mov
jg
daa
dec
fdivl
out
adc
inc
xor
and
and
scas
dec
popf
push
xor
imul
cmp
dec
jnp
aad
clc
pop
inc
pop
adc
js
or
pop
imul
mov
addr16
jbe
out
iret
dec
leave
lds
int
sbbb
pop
push
mov
sbb
inc
leave
out
sub
call
add
add
idiv
jg
sub
push
fists
popa
add
add
add
jecxz
aad
pop
int3
xor
std
fs
jns
lahf
pop
mov
jp
ss
inc
mov
xchg
xor
and
je
bswap
call
out
lret
adc
sub
mov
rolb
loope
shl
mov
rcrb
dec
jl
test
push
mov
and
jne
sub
xchg
mov
std
ret
sbb
std
and
sub
lods
mov
mov
dec
sub
out
sbb
add
inc
int3
push
xchg
or
or
nop
mov
mov
or
insl
loop
iret
test
fbld
xchg
or
mov
and
dec
lds
and
enter
iret
daa
xor
pop
lcall
notb
push
popa
inc
push
inc
inc
pop
mov
fstps
mov
adc
add
add
add
cmp
push
les
sub
cmp
mov
inc
lods
sub
adc
dec
insb
pop
mov
mov
add
inc
cmc
sub
pop
fistl
mov
rcrb
push
test
adc
out
cmp
jo
mov
mov
pop
enter
lds
add
or
xchg
lcall
xchg
pop
mov
and
mov
ljmp
jns
iret
lret
mov
lock
fdivr
mov
sub
add
or
dec
sub
aam
fiadds
dec
push
xor
jns
aaa
cli
sub
or
popf
pop
xlat
or
pop
div
mov
xlat
std
stos
xor
mov
fistpl
xchg
sahf
faddl
inc
jmp
xchg
adc
loop
je
popa
mov
ja
hlt
or
cmpb
adc
add
jno
cmp
insb
outsl
adc
pop
cs
sbb
ljmp
add
repnz
movsb
jle
arpl
movsb
sbb
add
add
inc
or
loopne
xchg
rcrb
iret
fcomps
mov
inc
jo
cmp
test
cmc
inc
adc
std
mov
mov
jo,pt
or
xchg
cmp
lods
and
out
jge
jo
aas
lret
out
jg
adc
ret
push
or
and
into
repz
xor
xor
in
ficoml
mov
out
loope
push
mov
xchg
mov
dec
xor
mov
out
xor
or
push
pop
jecxz
lret
mov
mov
inc
sbb
cs
out
call
sahf
xor
gs
or
pop
leave
repnz
sarb
xchg
dec
idiv
xchg
loope
jge
push
add
dec
fldt
mov
jge
xchg
insb
dec
fists
int3
pop
mov
sub
lahf
iret
jae
rcl
jne
sarb
icebp
mov
das
mov
dec
pop
push
in
out
jecxz
fdivrl
pop
cmp
stos
sub
stos
out
jmp
sub
inc
push
mov
add
add
jae
bnd
cmp
fs
scas
and
mov
icebp
push
push
clc
xor
and
push
or
js
and
data16
jmp
lcall
cmp
fwait
lea
stc
mov
shlb
jnp
xchg
sub
mov
stos
std
cmp
rcl
dec
dec
out
push
pushf
aas
or
arpl
ja
xor
cmp
aas
xlat
dec
push
dec
aaa
fstp
movsb
test
adc
add
inc
scas
lret
popa
mov
or
dec
fiaddl
insl
lock
insb
push
or
and
gs
aad
or
arpl
mov
lret
ja
or
fwait
movsl
fbstp
inc
push
xchg
mov
add
pop
in
inc
mov
push
or
testb
shlb
jecxz
dec
add
jb
imul
ror
sub
add
fcompl
mov
inc
mov
mov
nop
hlt
mov
push
in
add
add
mov
fnstenv
daa
int
shll
add
add
add
inc
mov
push
out
jo
pop
adc
push
xchg
jns
les
sbb
sbbb
mov
dec
xchg
jg
lret
leave
icebp
aas
mov
sahf
add
jno
addl
push
sbb
out
aas
pop
lret
ret
xchg
add
andb
inc
adc
jg
push
rol
xor
sub
xchg
mov
in
sbb
pop
popf
jl
jg
jnp
lds
inc
jle
inc
sbbb
fdivr
gs
out
push
in
fdivrs
mov
xor
lock
loope
jmp
inc
test
in
insb
ljmp
leave
imul
xchg
popf
stc
outsb
popa
inc
jecxz
cmp
or
sub
or
ja
in
cmp
outsl
push
xor
xchg
add
icebp
mov
cmp
cmc
cmpsl
dec
cmp
cs
and
aam
lret
in
and
push
mov
cmpsl
je
fimull
push
inc
outsl
add
jmp
xchg
icebp
cld
je
jbe
jns
sbb
sti
mov
add
add
jecxz
fildll
adc
xchg
cld
xchg
dec
imul
hlt
mov
sub
scas
pop
loopne
mov
sbb
pop
clc
cmp
jo
mov
scas
cmpsl
or
icebp
xchg
xchg
sub
cli
stos
jp
pushf
aam
and
jp
pop
loope
xchg
fisttps
aad
add
cmp
inc
je
movsb
cmp
sub
pop
fldt
pop
sub
rorl
push
stc
adc
jl
lcall
rcll
xor
sbb
in
sbb
sub
pop
or
mov
xchg
pop
cmc
call
mov
aas
or
imul
std
mov
push
mov
dec
outsb
or
cmp
adc
cmp
push
push
test
call
jge
jp
fsubr
adc
inc
add
and
ja
cmp
push
cltd
jmp
fildl
or
dec
ja
add
add
add
jb
lret
loopne
mov
repnz
lahf
jo
out
ss
fidivrs
imul
xchg
xchg
lcall
push
push
lock
push
insl
cmpb
lock
adc
pop
fists
adc
repz
adc
fdivl
mov
jge
stos
cmpsb
in
loopne
les
popa
mov
and
iret
xor
jo
das
fidivl
jne
pop
xchg
popa
cmpsl
mov
mov
push
push
scas
or
jne
mov
fidivs
into
out
pop
mov
lcall
test
sbb
cs
mov
ret
xor
dec
lock
mov
decl
je
aam
pop
sub
fsubp
xor
aas
ds
mov
shl
fcomp
inc
rcll
mov
test
sti
sti
push
xchg
daa
cmp
test
popf
and
mov
aad
pop
scas
mov
mov
mov
mov
push
jg
dec
xchg
dec
popa
push
and
sub
add
add
add
fwait
xchg
cmc
or
dec
dec
lea
out
std
push
pusha
aas
pusha
stos
jg
std
arpl
mov
add
jo
in
push
mov
cmpsb
mov
das
or
add
sbb
xchg
mov
insl
or
inc
xchg
ret
push
lret
jns
sub
jg
lods
pop
insl
mov
icebp
daa
nop
divl
popa
or
ffree
test
repnz
jl
cmpsb
bound
or
orb
pop
std
loop
cld
xchg
outsb
int3
jg
pop
adc
rorb
stos
nop
dec
pop
jne
int
mov
sti
inc
xor
scas
nop
aas
pop
sarl
jbe
outsl
test
fwait
pop
bound
adc
shrb
jbe
adcl
pusha
sahf
inc
jns
mov
xchg
inc
sbb
dec
cld
sub
mov
imul
testl
iret
mov
fucomip
push
insb
xor
cld
cld
aaa
stc
xor
add
add
jge
push
xchg
sbb
mov
sub
sub
sbb
xchg
pop
in
adcb
push
xor
mov
fwait
mov
in
mov
or
xor
out
out
mov
xor
xchg
jmp
sub
shrb
or
mov
mov
mov
push
dec
mov
dec
lret
jnp
lods
and
jne
imul
xchg
xchg
push
in
cli
inc
out
mov
stos
xor
das
lea
stos
push
mov
test
dec
pop
outsl
cmp
out
sub
pusha
xor
pop
test
adc
mov
lods
mov
cmp
mov
ljmp
shrl
filds
xor
int
out
adc
testb
pop
pop
jns
fistpll
icebp
mov
rcl
and
mov
scas
push
fadds
in
add
add
dec
out
iret
jmp
aas
in
push
data16
add
add
push
or
lds
sub
ss
or
imul
ret
mov
call
add
movb
mov
xchg
aad
popa
mov
xchg
and
pop
sub
jmp
mov
mov
insb
rcr
sbb
arpl
cmc
in
jmp
add
cmp
popf
decl
sbbl
add
movsb
push
lret
scas
int
jne
mov
mov
sbb
sub
xor
mov
test
and
ja
jns
jbe
and
enter
pop
and
outsb
notb
stos
and
jp
sbb
jns
jp
inc
and
sub
out
mov
fists
push
aam
in
jmp
sbb
jp
frstor
imul
add
jno
jns
xor
xchg
pop
sbb
fstpl
mov
int
adc
push
int3
data16
lea
cmpsb
ret
push
mov
pop
cs
add
add
std
cmpsb
pop
dec
sub
sub
and
scas
cmp
add
add
scas
in
sbb
pop
test
lods
testb
cld
adcl
xlat
in
stc
daa
cmp
clc
pop
mov
hlt
sub
aas
xor
enter
inc
add
and
cli
sub
mov
inc
cld
out
arpl
jecxz
mov
mov
jae
int3
jns
ss
xorl
jp
xor
push
push
decb
add
xchg
in
popa
stos
sahf
leave
mov
ljmp
clc
inc
sub
xchg
aam
mov
pushf
jmp
mov
push
pop
adc
pop
fisubs
js
dec
jge
loope
jae
and
negl
dec
data16
aam
ds
fiadds
data16
sbb
pop
push
stos
insb
repz
mov
lcall
mov
mov
mov
popf
lcall
sahf
dec
ficoms
movsl
dec
xor
in
lods
imul
neg
std
sub
dec
and
or
cmp
add
add
add
hlt
mov
push
std
cmp
test
in
cs
xchg
data16
mov
ret
jae
inc
cmpsl
fidivs
pop
xlat
inc
lods
bound
loopne
pop
pusha
push
push
sub
push
jnp
mov
loopne
sti
jmp
movsl
jge
and
leave
hlt
dec
mov
outsb
leave
jl
sub
cs
inc
jp
lret
push
pop
test
fdivr
fnsave
cltd
rcll
dec
and
jnp
adc
inc
mov
and
clc
cmp
jns
out
jne
aad
fadds
mov
cld
inc
stos
pop
xchg
pop
cli
sarb
out
xor
in
andb
pop
aas
js
aas
dec
mov
pop
in
push
addr16
push
dec
push
int
daa
in
xor
pop
iret
adc
neg
sti
pop
or
add
repnz
jbe
cmp
es
mov
inc
push
dec
cld
and
push
mov
push
jo
test
add
add
cs
xor
cltd
dec
push
adc
insl
add
add
add
xor
mov
mov
mov
in
pop
sub
xchg
mov
pop
cmpsl
int3
lahf
mov
inc
mov
adc
mov
fwait
push
and
popf
push
pop
add
pop
dec
shlb
mov
sbb
lret
or
sbb
mov
sub
popa
inc
fldenv
lret
xor
cmp
adc
xor
xchg
repz
inc
dec
push
or
dec
sbb
fwait
lods
call
mov
arpl
daa
and
subl
enter
pushf
mov
ret
loope
negl
and
jbe
pop
add
sbb
add
xlat
int
movsl
xor
lret
sbb
mov
roll
adc
out
cmc
cmpsl
sub
aad
sarb
ds
lods
popf
cmp
mov
stos
out
mov
dec
test
add
add
ja
out
sbb
mov
add
add
cs
inc
jle
cmc
mov
xor
and
adc
les
mov
push
mov
mov
push
dec
push
mov
in
in
dec
cmp
and
sbb
adc
fadd
pop
mov
jne
pop
js
cmp
xor
rorl
lahf
sbbb
xchg
in
push
dec
and
out
mov
cmp
shlb
mov
lock
adc
push
hlt
stc
in
and
xchg
rcrb
jecxz
and
sti
cmpsl
jge
push
rorb
cmp
mov
idiv
dec
cmc
pop
sti
je
push
push
cmpsb
xchg
lods
push
xor
add
jo
outsl
jp
filds
xchg
mov
ljmp
xchg
or
mov
scas
adc
sbb
dec
rclb
and
xor
cld
fisubl
sub
jl
push
jg
in
or
je
jle
imul
lds
imul
add
sub
ja
mov
adc
outsl
add
add
add
jg
jp
push
add
sub
add
insl
sbb
add
out
lret
scas
sbb
std
cmp
cmp
add
sub
inc
ljmp
mov
jo
add
adc
push
inc
mov
lods
lcall
flds
jbe
add
cwtl
ljmp
xchg
push
sbb
mov
and
sbb
add
pop
mov
lods
and
aas
mov
in
in
and
and
in
mov
cld
and
fptan
popa
add
ja
or
xchg
mov
test
popf
out
aam
out
test
adc
pusha
imul
dec
mov
inc
test
cmp
push
push
push
mov
add
and
mov
inc
repnz
push
pop
call
popa
mov
test
xor
nop
add
add
cmp
jnp
outsl
cmpsb
loopne
enter
jo
add
add
cmc
jl
mov
imull
add
inc
inc
cmp
ja
add
add
mov
cmp
sbb
jmp
xor
out
ret
ss
sti
sahf
movsl
dec
int3
cltd
call
and
out
mov
xor
push
pop
scas
xchg
xlat
icebp
jmp
pop
out
cs
test
shl
cmp
fcoms
into
mov
adc
sbb
ret
inc
sub
lea
mov
jmp
or
mov
mul
mov
aaa
adc
shll
cmp
fwait
dec
data16
or
pop
repz
addr16
adc
bound
rcll
cli
leave
cmp
cld
sub
rorb
mov
cmp
mov
sub
cmpsl
mov
inc
mull
jge
and
jb
test
dec
push
cmc
daa
and
push
mov
aam
negl
les
xchg
push
mov
cli
xchg
jle
push
je
push
mov
add
add
add
arpl
mov
inc
sub
cs
and
mov
mov
sub
lock
sbb
pop
sbb
cmp
mov
imul
sub
outsb
cmp
xor
loop
inc
imul
mov
adc
cmpsl
repz
mov
loope
inc
cmpsl
ss
cmpsb
fs
inc
or
xchg
idiv
mov
lcall
xadd
stos
jmp
xor
or
mov
and
jnp
inc
aad
jmp
lods
ror
enter
movsb
outsb
dec
cmpl
xlat
insb
sbb
add
mov
sub
xchg
das
mov
lahf
jne
out
out
icebp
or
jp
and
out
push
aas
andl
les
loopne
add
cmpsb
loop
es
adc
lods
out
and
mov
std
push
pop
adc
mov
jo
add
add
fwait
jnp
aad
sbb
daa
adc
jb
add
add
mov
call
and
sahf
mov
jge
iret
cmp
sbb
jl
mov
stc
mov
or
xor
jle
test
sbb
add
scas
js
hlt
xor
mov
cltd
loop
jmp
push
out
js
mov
std
pop
pop
pop
cli
stc
sub
decl
add
jl
mov
mov
es
mov
movsl
xlat
xchg
push
lahf
inc
jle
push
mov
shr
ja
adc
jnp
fsubl
gs
cmp
pop
jo
dec
adc
aad
cwtl
mul
or
jg
add
shlb
bnd
push
cmp
sarl
rcrb
aam
jge
shll
andl
mov
mov
add
xor
bsr
popa
js
repnz
hlt
cmpsb
sub
jmp
daa
fadd
dec
push
dec
les
dec
mov
adc
insl
add
mov
std
mov
sub
ss
add
add
add
pop
mov
fldl
imul
rorl
xchg
xor
mov
lods
mov
mov
pop
fisttps
nop
push
push
imul
in
stos
mov
dec
out
adc
push
mov
leave
fs
lock
out
bound
mov
daa
loope
bound
fsubl
dec
dec
loope
push
fisttps
ds
xor
jns
stos
pop
jo
enter
dec
or
ja
xchg
es
test
mov
movsb
jno
push
mov
sub
jbe
in
enter
lahf
aas
ficoml
scas
sub
adc
lea
andl
mov
into
and
mov
popf
into
mov
push
mov
and
xlat
jno
mov
fs
cmc
cmpsl
push
shll
orl
aas
fidivl
or
lock
push
stc
insb
adc
dec
or
pop
push
jecxz
stos
int
xchg
test
adcl
xchg
fisttps
mov
lcall
add
add
push
in
in
insb
ljmp
mov
andl
mov
je
add
jp
mov
sub
daa
out
mov
jns
test
stos
mov
adc
loopne
dec
fsub
pop
sub
jns
mov
outsb
ret
in
push
je
pushf
xlat
xchg
xchg
jae
and
andb
xchg
cmp
shl
mov
xchg
xor
or
xchg
mov
mov
push
cmpsl
mov
push
andl
imul
adc
lcall
xchg
and
aad
loop
popa
loope
repnz
ret
cltd
sub
mov
mov
arpl
scas
adcl
movsl
sub
outsb
shll
enter
mov
fildl
sbb
dec
call
cmp
xchg
xor
xor
push
adc
adc
sub
xchg
pop
loopne
xchg
adc
jle
call
add
add
bound
sub
sbb
jne
add
add
jnp
lds
or
imul
xorl
xor
lods
fistpll
xor
popa
bound
xor
cmpsl
dec
out
js
mov
xchg
push
lea
sub
push
or
popf
aad
aam
in
shlb
imul
and
mov
push
jge
les
inc
idivb
repnz
cmpsl
xchg
and
into
mov
or
mov
jnp
mov
outsl
out
pop
repnz
aaa
fistl
dec
es
outsl
popa
mov
test
push
xchg
push
or
aas
setne
fstp
mov
dec
es
movl
push
stos
lods
adc
andb
mov
nop
movsl
arpl
mov
xchg
mov
fisubl
or
jae
sti
jno
orl
add
jecxz
mov
ss
mov
adc
add
divl
in
sub
fs
add
add
dec
int
xchg
sahf
lods
jmp
mov
in
rcl
jo
inc
pop
sub
mov
imul
dec
sub
pop
push
lock
jmp
sbb
stc
sbb
pop
add
je
push
lea
mov
pusha
add
pusha
insb
inc
je
xorl
ds
adc
mov
sbb
mov
and
sbb
mov
ret
jbe
push
das
push
or
push
ds
sbb
or
cmp
std
xor
pop
loope
clc
les
out
pop
push
push
syscall
push
cmp
sub
xor
mov
jle
jp
or
xor
sbbl
mov
fisubs
push
pushf
xor
push
fs
testb
mov
orb
sbb
jb
loope
push
out
nop
sahf
jg
ss
lds
add
add
fisubs
mov
mov
jo
push
add
add
mov
mov
imul
das
jae
dec
pop
inc
sbb
xchg
loop
lods
xchg
aas
jne
xchg
inc
in
repz
jns
clc
scas
int3
lcall
loopne
stc
xchg
mov
and
xlat
out
nop
adc
bnd
fisttpl
movsb
data16
mov
addr16
add
jmp
shll
or
sub
mov
test
xor
adc
out
andl
sub
pop
popa
jae
mov
dec
push
and
dec
iret
cli
jmp
inc
pop
sahf
rcll
jecxz
mov
test
int
mov
xchg
andb
in
lock
lock
outsb
xor
xor
xor
mov
cmpsl
ss
xor
enter
mov
push
rcr
jmp
jp
pop
ljmp
xor
testb
inc
sub
pop
dec
addb
arpl
pop
addr16
pop
shlb
mov
sub
pop
ljmp
add
mov
xor
add
or
xor
push
and
push
sub
mov
fwait
pop
into
push
fmuls
add
arpl
jmp
dec
mov
jo
into
pop
dec
ficoml
daa
mov
arpl
push
jge
push
sbb
bound
out
push
and
ficoml
cmp
out
xchg
not
clc
movb
mull
mov
lret
jno
mov
dec
xchg
mov
bnd
pop
aaa
lods
xor
or
popf
stos
inc
js
ds
idivl
sbb
mov
scas
and
jns
lods
xor
or
mov
or
inc
repz
pop
fs
js
loop
in
fiadds
ds
mov
rcl
cmp
fxch
and
dec
push
fdivs
jne
mov
sbb
in
cli
inc
das
mov
out
and
or
mov
add
add
testl
movsb
jo
add
add
add
movsl
or
xor
cwtl
dec
and
pop
pusha
sbb
loop
dec
fnstsw
lds
cmp
sbb
fsubrs
mov
in
add
or
jne
mov
sbbb
movsb
mov
and
jle
push
pop
stos
popf
into
loope
and
clc
push
lahf
aas
push
in
lcall
into
stc
mulb
xchg
mov
xchg
push
lea
add
outsl
mov
mov
pop
mov
sbb
in
lock
scas
fisttpl
out
and
sahf
sub
sti
xor
les
test
sub
mov
xchg
add
and
inc
dec
inc
and
mov
xor
shr
shlb
sbb
dec
lahf
jmp
daa
imul
push
ljmp
fadd
xor
addl
jl
xor
jle
hlt
xchg
into
movsl
int3
aam
lock
inc
dec
inc
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
mov
mov
shl
lds
ja
lock
in
fildl
loop
shlb
mov
daa
dec
mov
push
mov
testl
call
push
sub
jbe
daa
stc
sbb
sub
test
pop
mov
pop
xor
dec
jne
dec
mov
out
sub
repz
mov
call
push
xor
or
sahf
push
sub
sbb
pop
sbb
adc
outsb
or
lret
add
push
rcrl
mov
or
cmp
mov
leave
xchg
pop
cmpl
push
ja
test
iret
jae
and
adc
repz
out
mov
pop
fstpl
pop
hlt
test
js
xchg
inc
mov
lahf
ja
ljmp
jbe
push
nop
adc
imul
ret
sbb
pop
fnstenv
mov
cmpsb
push
sbb
lcall
add
add
jae
or
int
shrb
pop
xor
cmpl
mov
std
pop
iret
roll
int3
adc
inc
jo
notb
scas
clc
adc
sbb
movsb
call
sbb
or
or
xchg
roll
adc
icebp
sub
mov
inc
and
mov
mov
pop
iret
pop
nop
jg
xchg
testb
scas
inc
cmp
ret
push
xchg
addr16
xchg
pop
mov
jge
fldl
mov
sub
adc
loop
iret
mov
clc
pop
dec
jge
dec
nop
jecxz
pop
rcll
test
sbb
cwtl
arpl
add
jne
mov
or
dec
sbb
adcl
dec
shlb
xor
dec
inc
daa
shrb
or
jno
push
mov
xor
or
out
cmp
cmpsb
and
push
inc
in
test
lea
fistpl
xor
cli
mov
push
stc
xchg
out
jl
add
add
add
mov
or
jno
lahf
push
cmp
lret
leave
aaa
mov
inc
sti
dec
mov
inc
lods
add
jae
adcl
xchg
pop
sbb
mov
jb
add
mov
dec
dec
push
adc
ret
mov
push
sbb
imul
scas
inc
xlat
pop
lcall
cld
xor
pop
sahf
xor
int
or
fnop
pop
push
lds
fistpl
sbb
pop
sarl
cmc
into
leave
rol
rclb
scas
inc
add
jnp
jmp
mov
filds
and
mov
ds
sub
enter
lds
jge
add
add
push
push
push
and
xor
jp
sub
xchg
adc
push
fisttpll
inc
xor
inc
cmp
jb
test
lods
xchg
xchg
call
add
test
lcall
lret
cmpsb
cmpb
add
add
or
stos
lock
xor
mov
jle
cmc
xor
jmp
adc
ret
dec
aad
pop
mov
imul
push
or
pop
xlat
cwtl
dec
inc
sahf
adc
aam
inc
inc
loopne
pop
push
dec
push
shlb
stos
fs
jno
lea
repz
inc
pop
dec
lods
iret
mov
dec
frstor
mov
cwtl
call
and
popa
scas
sti
xor
and
xchg
mov
mov
ja
cltd
into
or
aad
cs
movsb
in
mov
aam
sti
mov
xchg
fs
adc
nop
sahf
sub
dec
arpl
adc
mov
sbb
push
add
test
hlt
or
movb
sbb
fiadds
xor
inc
and
and
xor
and
test
mov
inc
mov
xor
sbb
sub
add
add
xchg
xchg
jns
jmp
mov
je
add
add
dec
jae
xor
push
out
xor
xchg
xchg
mov
push
mov
jle
mov
adc
push
lods
or
or
and
dec
xchg
test
icebp
jge
enter
adc
and
dec
je
in
cmp
fstpl
sti
mov
lcall
insl
mov
jmp
push
ds
push
aas
movsl
push
mov
in
xor
sbb
divb
mov
lea
out
lret
sahf
movsl
sub
pop
shrl
mov
adc
xchg
mov
cmp
ds
push
add
cmpsl
jmp
jmp
idivb
jp
movsb
sub
iret
cli
or
mov
ljmp
mov
scas
xchg
in
mov
push
iret
adc
outsb
mov
xor
jge
scas
scas
lcall
adc
sbb
inc
xlat
ljmp
add
add
enter
push
das
outsb
mov
xchg
fstps
pop
cmp
ds
sub
jno
jl
cmpsb
cmp
mov
add
dec
out
popf
ss
outsl
shll
and
loop
fdivs
or
jmp
xchg
xchg
lahf
sub
sbb
push
xchg
gs
sarl
xchg
jbe
xchg
push
xchg
outsl
xor
jae
mov
ljmp
sub
jmp
mov
adc
pcmpgtb
jg
dec
inc
inc
mov
or
mov
ljmp
push
movsb
adc
or
sbb
rorl
push
cmp
sbb
insb
pop
dec
xor
sahf
sub
dec
fld
fcom
mov
ret
mov
outsl
ret
setle
xor
pop
dec
das
daa
mov
aas
adc
mov
and
and
pop
pop
fistpll
jp
xchg
cli
or
add
add
mov
idiv
jne
iret
inc
xchg
addb
add
add
loopne
and
xor
lret
cmp
sub
imul
insb
sub
jmp
xchg
ret
mov
add
in
mov
imul
dec
add
shlb
sti
sub
mov
in
loopne
push
shl
push
cmpsl
ja
in
movsl
stos
subb
fistpll
mov
int3
cmp
pop
imul
mov
dec
jne
and
sbb
scas
add
mov
mov
in
hlt
jo,pt
je
mov
and
cli
cwtl
push
or
mov
loop
dec
pop
int3
out
daa
and
adcl
notl
pop
add
out
jo
popf
sahf
jmp
repnz
add
xor
mov
stos
mov
and
and
sub
pop
rol
cmp
insl
nop
xchg
pushl
sub
insl
mov
int
addl
add
mov
adc
out
jmp
shlb
pushf
fnstenv
cmp
stos
add
fdivl
test
mov
clc
out
jne
cmp
dec
aam
mov
mov
xchg
decb
add
xor
xor
int
pop
dec
popa
dec
stc
loop
jbe
je
cmp
cmc
cmp
shrb
cmc
shrb
test
sahf
push
sub
lods
mov
xchg
int
inc
dec
xchg
fdivr
sub
dec
adc
lret
call
sub
fimull
inc
mov
pop
sbb
sub
lret
cmp
inc
mov
mov
imul
or
movsl
ret
testb
jnp
cmpsb
push
data16
test
jb
outsl
insb
ljmp
mov
jno
mov
mov
loop
ja
mov
pop
add
add
add
sti
iret
ss
push
jno
add
add
add
add
fidivs
xor
in
sti
xchg
add
mov
or
mov
call
lock
clc
ss
jg
sub
adc
cltd
cmp
xchg
cmp
in
cmp
cmpsb
pop
ficomps
jno
imulb
lods
imul
jle
lret
mov
xor
je
or
std
inc
mov
popa
xchg
sbb
push
inc
or
sub
in
cmp
ljmp
lock
and
push
add
cwtl
lret
lock
lds
inc
outsl
mov
adcl
test
lock
mov
adc
mov
hlt
cmc
jnp
sub
ds
dec
push
pop
inc
data16
leave
and
adc
scas
stos
mov
out
rcrl
fdiv
in
cld
xchg
fistps
js
inc
xor
sbb
std
lcall
loopne
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
jo
or
add
add
adc
mov
cmc
rol
test
and
xlat
inc
or
pop
push
mov
into
push
rolb
loopne
insb
mov
dec
jns
adc
cmp
rolb
xor
cwtl
ljmp
or
cmp
mov
dec
sbb
insl
dec
xor
pusha
xchg
divl
or
add
fwait
pop
fidivl
ljmp
jle
rcll
xchg
test
jmp
add
ret
mov
xor
addr16
stos
mov
adcl
push
push
cs
in
jbe
lds
mov
shlb
pop
outsb
imul
mov
push
bound
inc
adc
pop
iret
call
mov
movsl
in
xor
jb
push
xchg
sub
mov
adc
enter
push
inc
int3
loope
add
add
mov
mov
mov
rcrb
add
mov
lds
addr16
jg
subl
ficompl
jae
pop
pop
incb
sbb
sti
imul
cmp
mov
xor
mov
mov
out
mov
mov
inc
pop
test
iret
xchg
push
lds
mov
ret
adc
push
mov
mov
or
cld
ret
mov
sbb
int
cs
mov
dec
stos
shl
popa
lock
sub
daa
scas
fwait
fwait
leave
cld
in
popa
cwtl
push
sbb
leave
jle
inc
mov
test
sub
or
and
les
and
les
jp
pusha
or
das
das
mov
xor
sub
movsb
push
or
and
jge
adc
ret
or
addr16
pop
imul
mov
or
scas
inc
std
cmp
xlat
sbb
mov
xlat
inc
xor
les
mov
push
mov
shl
and
out
ljmp
lock
xchg
adc
add
add
adc
add
add
addr16
loop
sub
pop
xchg
mov
mov
cmp
outsl
cs
inc
inc
rcll
cmpsb
pop
xchg
pop
fmul
inc
into
xchg
pusha
ds
sub
loopne
js
mov
and
movsb
dec
sti
in
cmp
stos
ljmp
mov
jge
je
pop
ret
pop
movsb
inc
lods
push
jmp
cld
sti
sub
add
es
adc
in
pop
sbb
dec
pushf
cmp
jecxz
inc
xchg
iret
es
jne
ss
pop
dec
lods
aad
push
std
mov
lds
pop
enter
ljmp
cmp
rolb
in
xchg
stos
notl
decl
pop
imul
pop
push
imul
jecxz
lahf
imul
cmp
or
into
jns
imul
push
jnp
sbb
push
xor
xchg
movsb
xchg
add
add
aaa
dec
sbb
mov
adc
jo
movsb
lea
jns
fildll
fsubs
test
stos
push
xor
lahf
test
mov
sub
imul
and
push
push
sub
inc
xlat
hlt
fildl
stc
sarl
mov
jge
xlat
fimuls
test
shll
lcall
jns
aas
mov
mov
sahf
leave
mov
and
into
push
jg
and
jne
pop
cmp
imul
add
imul
push
and
sbb
xchg
dec
loope
outsb
fstpl
iret
cld
sub
mov
jae
testl
push
cmp
mov
xor
lret
lds
xorl
ret
jo
insb
mov
jmp
dec
stos
aas
int3
imul
mov
pop
sub
rolb
add
add
aas
or
mov
movsb
push
mov
test
add
add
add
jns
les
sbb
xchg
rorl
add
jge
and
mov
jb
or
push
jo
je
add
call
sbb
stos
add
or
call
rcr
dec
or
mov
add
dec
sbb
shr
mov
jge
out
icebp
dec
and
pop
cltd
leave
adc
popa
mov
and
push
inc
lods
xchg
ret
stos
pop
jo
mov
data16
orl
sahf
cmp
clc
insl
hlt
mov
mov
mov
xor
add
jl
xlat
sub
in
stos
fdivrl
mov
inc
xchg
mov
push
lds
jb
push
int
mov
imul
push
xchg
mov
fs
mulb
in
or
hlt
add
adc
shlb
add
cli
stos
loope
xor
push
daa
xor
insb
fidivl
bound
jno
lods
mov
add
add
sbb
inc
int
lret
inc
mov
gs
shrl
lret
xchg
add
mov
jle
mov
call
cmpsl
roll
rolb
cmp
popa
js
jl
in
clc
mov
cmp
xchg
stc
test
aas
xchg
pop
lea
lret
ljmp
or
imul
ja
mov
mov
arpl
cmp
pop
cmpsb
jecxz
dec
add
inc
inc
mov
xor
cmp
inc
and
test
arpl
repz
xor
xor
ficompl
jg
sarb
hlt
or
pop
jg
ds
sbb
and
in
sbb
arpl
in
sub
lea
stos
in
pop
icebp
push
cwtl
rclb
fcomp
sbb
xor
jno
adc
mov
lahf
adc
fcoml
std
shrb
xchg
dec
mov
loop
mov
mov
imul
sbb
rol
push
popf
stc
cmp
mov
jns
clc
mov
mov
add
add
add
mov
addb
daa
adc
sbb
push
cmc
les
push
xor
lods
mov
ds
add
and
jb
ds
cmp
sub
cmp
adc
mov
inc
stos
xor
add
xchg
adc
push
mov
stos
or
lahf
pop
pop
adc
jae
jg
sbb
push
and
lds
dec
out
lahf
sub
adc
rolb
xchg
sbb
or
ljmp
lock
int3
and
push
addr16
das
mov
adc
popa
cmp
ja
pusha
cwtl
scas
pop
popf
or
cmp
mov
pop
jno
and
lods
pop
pop
idiv
loopne
sbb
jecxz
cmpsl
stos
jle
fnsave
inc
jo
leave
out
mov
js
mov
push
loopne
sbb
xor
add
int
fstp
iret
push
cmpsb
fadd
dec
jae
pop
jo
mov
add
add
xchg
mov
mov
push
mov
mov
inc
outsb
dec
jne
and
jmp
add
stc
xor
pop
jne
hlt
sbb
pusha
mov
nop
cwtl
dec
add
mov
inc
pop
mov
insl
push
xchg
mov
rcrb
jg
cmp
imul
sbb
hlt
ljmp
mov
cmp
sti
pop
sbb
lcall
mov
or
or
adc
sbb
ljmp
int3
bound
aaa
push
xorb
popf
lock
out
fidivs
or
dec
test
popa
pushf
iret
jecxz
popa
repnz
das
cs
pop
cmpsb
xchg
rclb
or
jp
push
ffreep
cmp
mov
or
lods
push
xchg
sbb
or
jns
mov
push
gs
pop
aas
test
jns
and
push
leave
sti
enter
lds
clc
hlt
out
neg
inc
mov
add
add
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
pop
sbb
mov
jle
cld
mov
sbb
jecxz
mov
stos
cs
mov
inc
outsb
das
fdivl
insb
mov
fwait
inc
sub
jmp
or
stc
shll
xor
or
jmp
scas
xchg
jb
xchg
adcl
xchg
std
sbb
pop
sub
cmpsb
std
jo
into
pushf
lock
fistpll
pop
stos
xchg
mov
jnp
lock
iret
add
mov
push
bound
jne
in
movsb
je
add
mov
daa
test
dec
jnp
aaa
aad
testb
movsl
xor
scas
mov
mov
into
xor
sub
jge
inc
nop
and
lahf
pushf
ret
mov
xor
int
lcall
sub
sahf
loop
mov
lahf
cmp
pop
jnp
xor
mov
fisubl
and
lods
les
jnp
mov
icebp
out
xor
mov
add
add
xor
add
push
arpl
push
inc
push
enter
icebp
fcoml
adc
divl
adcb
imul
in
mov
xchg
or
in
dec
or
aad
out
out
push
aad
jge
adc
ljmp
mov
pop
inc
and
xchg
subl
sub
inc
arpl
mov
push
mov
push
dec
pop
sahf
and
aad
xchg
pop
xchg
cmp
cld
inc
xchg
jb
add
lahf
mov
scas
mov
es
jl
mov
dec
enter
mov
ds
insl
nop
dec
addl
pusha
lret
mov
mov
sub
pushl
push
and
or
pop
cltd
orb
fnstcw
out
jl
divps
ret
push
int
test
push
push
fnstcw
pop
mov
pop
push
and
mov
cmp
xchg
jl
addr16
add
add
les
fcomps
add
lea
add
add
sbbb
imul
xchg
jb
push
int
gs
xchg
mov
testl
ja
jmp
jns
cmpb
xor
stos
movsl
push
pop
and
adc
leave
leave
xchg
lret
sub
sbb
cmp
ret
mov
inc
cmpsb
fmull
test
repnz
push
pop
sti
xor
inc
call
add
pop
and
movsb
fdivrs
or
mov
test
xchg
filds
jl
inc
xchg
mov
cmp
jo
rcrl
xor
lods
jno
fstps
and
clc
pop
int3
or
add
daa
popa
inc
mov
mov
xchg
mov
lea
xchg
sub
addr16
pmulhw
insb
pusha
or
clc
sub
orl
mov
pop
mov
out
dec
pop
sub
pop
imul
sbb
test
shrb
stos
pop
ljmp
dec
mov
mov
add
add
add
cs
mov
int
xchg
pop
sbb
es
addr16
cld
stc
sar
mov
sbb
das
push
imul
mov
sub
fwait
ja
jg
xchg
in
shl
jg
arpl
xor
stc
aaa
ret
adc
aaa
xor
sub
push
pop
cmp
loope
mov
sti
imul
mov
icebp
cmp
int
cmpsb
lods
fistl
mov
dec
jne
call
xchg
push
popf
js
je
inc
cmp
and
js
inc
cmpb
adc
push
sti
addr16
inc
add
sbb
and
imul
out
adc
inc
pop
shrb
popf
push
repnz
push
push
mov
cmp
adc
jge
cmc
fsubs
sbb
push
loop
dec
shll
mov
mov
inc
dec
cmpsl
int
fs
cmp
mov
adc
cli
int3
sub
mov
insb
sbb
popf
loope
test
add
add
aaa
shlb
cmc
div
testl
jno
popl
add
add
jnp
adc
jmp
lahf
test
lds
mov
cmp
pop
push
into
inc
jbe
xchg
add
dec
mov
cmpsl
je
lods
add
call
daa
movsl
nop
mov
jae
xchg
negl
jp
adc
adc
mov
dec
addr16
int3
aas
adc
and
mov
jp
adc
adc
aam
out
cmpl
fstl
in
or
and
push
hlt
out
es
jl
std
sub
sbb
test
cltd
rol
aad
call
setns
push
sahf
lods
fsubr
lret
pusha
clc
inc
xchg
mov
shrb
cmp
pop
icebp
mov
sub
out
mov
dec
iret
mov
adc
leave
push
xchg
pop
pop
push
inc
lret
mov
cmp
roll
mov
pop
sbb
pop
push
nop
push
sahf
rcr
pop
adcb
dec
out
test
nop
add
add
add
xchg
mov
or
and
add
enter
lods
mov
push
not
mov
xor
cmpb
aas
xchg
adc
jge
imul
cld
mov
lea
sahf
addr16
push
imul
or
xchg
xor
add
test
es
gs
jp
xchg
fdivl
dec
aaa
ss
mov
dec
dec
mov
jmp
fwait
shll
and
jne
lret
push
in
xchg
mov
sub
dec
aaa
jnp
jl
mov
cld
mov
jo
ljmp
movsb
adcl
mov
sti
mov
pop
mov
push
cmp
mov
mov
lret
rcrl
xchg
shlb
decb
arpl
sbb
scas
bnd
inc
leave
hlt
sbbb
add
add
popf
imulb
sbb
jg
mov
add
add
arpl
cmpsb
jcxz
fimull
rclb
add
lcall
push
lret
mov
arpl
ds
dec
sub
arpl
in
dec
mov
int
lock
sbb
or
out
ljmp
fistpl
jne
mov
stos
pop
aas
addr16
repz
xchg
mov
rcrb
fwait
add
in
and
loopne
jle
inc
call
pusha
xor
je
mov
sub
not
cmp
and
int
and
cmp
jno
fldenv
add
inc
dec
dec
hlt
pushf
repnz
fwait
shlb
jmp
jo
test
inc
mov
jns
popa
pop
lods
inc
xchg
popa
mov
repnz
mov
jns
outsb
mov
fisttps
mov
pop
sbb
sbb
cmpsl
mov
jne
pop
mov
fidivrl
mov
ror
xor
xor
adc
add
pop
or
shl
fs
ljmp
add
clc
jnp
jg
in
cli
enter
ss
inc
aam
xchg
add
add
add
mov
lcall
jl
push
hlt
push
adc
fldl
cmp
shll
xor
mov
mov
add
sarl
push
pop
movq
push
fstps
xor
popl
add
mov
popf
rcll
xor
xor
ds
js
lea
andb
dec
jge
insl
shrl
es
cmpsl
fisubrl
cmp
pop
sbb
test
daa
shrl
test
mov
pop
je
movsb
lret
popa
cmpsb
xorl
adc
mov
sub
adc
ret
dec
jecxz
adc
sbb
outsl
insl
sbb
leave
mov
test
popf
mov
sub
jno
dec
push
outsb
add
push
jne
aaa
test
pop
rorb
orl
js
into
mov
jg
ret
call
xchg
or
pop
dec
mov
inc
sahf
xchg
ljmp
cld
gs
mov
fcoms
add
out
inc
jb
xor
lret
jmp
pop
in
pop
xchg
pop
nop
inc
cmp
sti
xchg
test
xchg
xchg
mov
mov
arpl
iret
jecxz
or
in
ljmp
addb
inc
push
test
push
and
pop
add
adc
sub
repnz
xor
or
inc
lret
pop
fwait
mov
out
into
repnz
loope
int3
nop
pop
push
mov
int3
and
push
and
aad
or
ret
scas
repnz
divb
mov
aas
clc
xor
cmp
adc
xchg
out
xchg
mov
or
fdivrp
ds
loopne
adcb
shrl
cld
clc
inc
inc
movsl
jns
dec
push
push
sub
sub
jae
sbb
mov
xchg
sbb
and
push
pop
mov
jmp
sub
lcall
enter
jl
sar
std
jle
pop
popf
scas
jae
xor
add
add
jecxz
notb
mov
les
jp
mov
pop
out
xchg
jge
push
call
and
clc
mov
ret
cwtl
push
push
mov
pusha
enter
pusha
test
pop
mov
jo
out
ret
test
jmp
xchg
inc
dec
sbb
jecxz
sar
or
out
push
sbb
test
out
lods
clc
mov
cwtl
std
cmp
mov
pcmpeqd
lcall
scas
push
scas
inc
cmp
test
jle
adc
gs
xor
xchg
jbe
fs
insb
mov
xchg
call
lea
mov
in
popf
test
movsl
xor
or
sbb
cltd
rolb
enter
inc
push
sbb
sbb
xor
push
mov
fisubrs
out
shr
loopne
inc
jl
xor
aam
add
add
cwtl
or
stos
xchg
cmp
in
mov
jnp
loopne
add
add
add
ja
aas
fstpt
and
fnstenv
subl
outsl
inc
out
imul
add
scas
or
jns
push
mov
daa
in
dec
lock
lea
cld
pop
lock
repz
push
push
arpl
or
fs
xlat
imull
mov
xor
jge
xor
ljmp
bound
dec
pushf
cmp
repnz
jb
and
enter
or
pushf
in
xchg
cmp
call
mov
jbe
cmpsb
mov
imul
pop
fistpl
lcall
aad
mov
movsl
iret
jmp
cmp
rcr
popf
sahf
lds
lfs
out
pop
dec
pop
ss
mov
push
push
pop
js
pop
addr16
and
cwtl
lods
fdivs
loope
imul
push
fcomps
sbb
hlt
add
cmp
popw
and
fwait
and
popa
mov
xorl
in
add
add
add
vpmacssdd
add
negb
xchg
cmpsb
xor
mov
mov
dec
roll
aad
ja
dec
fcmovnbe
push
push
cmp
ret
adc
dec
movsb
mov
and
nop
mov
jae
loope
jne
cmpsl
inc
pusha
jle
jg
repnz
add
enter
mov
xchg
dec
les
in
sub
or
mov
fiaddl
aam
pop
lock
imul
dec
rclb
das
sar
xlat
cmpsb
mov
push
mov
fdivl
cltd
cld
xor
scas
xchg
lcall
dec
sub
out
mov
mov
test
cld
adc
sti
dec
add
jmp
sti
jb
lret
cmp
popa
xor
div
imul
push
test
aam
pop
shr
pop
insl
shrl
out
in
push
lahf
and
add
add
push
and
xlat
aas
dec
sbb
or
call
add
add
inc
pop
ja
int
leave
xchg
outsb
enter
cmp
test
das
nop
sbb
gs
lret
hlt
outsb
loopne
movsb
mov
jae
push
movl
add
xchg
xchg
sbb
ret
sbbb
cmp
aad
movsb
sahf
or
pop
xor
or
cmp
xchg
mov
popa
mov
ljmp
mov
sub
mov
or
dec
adc
push
ds
es
inc
rcrb
adc
adc
xchg
mov
sub
mov
mov
ja
jno
ja
inc
add
sbb
mov
xor
xor
lods
icebp
int
xchg
fsubl
andb
add
push
notrack
scas
cltd
ja
add
mov
push
mov
xchg
mov
lahf
push
push
or
sbb
das
fstps
mov
lea
imul
outsl
vmwrite
add
cwtl
add
add
add
in
rorb
sbb
roll
das
inc
sahf
pop
jecxz
insb
sub
popf
loopne
sbb
xchg
mov
scas
imul
cwtl
call
clc
stos
jo
cwtl
leave
inc
sti
ror
or
adc
das
xor
xor
mov
mov
push
inc
xchg
add
inc
sbb
aam
testl
mov
leave
push
fnstsw
add
add
xor
cmp
shlb
sub
lret
jne
lret
pop
cmc
jmp
sub
insw
mov
in
cmpsl
fidivs
imulb
pop
in
cltd
js
std
imul
movsb
mov
push
mov
mov
aad
mov
and
inc
repz
mov
lea
stos
mov
or
cmp
cltd
sbb
mov
stc
mov
and
or
jne
clc
aas
sbb
imul
imulb
sbb
xchg
cmp
rcl
js
mov
adc
sbbl
popl
inc
jns
cltd
add
add
add
cld
mov
adc
fwait
cwtl
cltd
in
cmp
lock
mov
jb
push
sbb
in
mov
leave
in
pop
repnz
fistps
push
dec
mov
mov
sahf
aas
mov
jns
fidivrl
popf
aas
pop
dec
mov
jbe
jnp
xlat
stos
mov
dec
das
lahf
mov
dec
sub
js
adc
cmp
fwait
test
mov
pop
out
ss
mov
jle
add
pop
add
inc
std
adc
test
push
lock
repz
cmp
sahf
mov
pop
aaa
fwait
shll
sub
mov
stos
jp
int
fisubrs
shrb
test
jmp
or
addr16
mov
mov
mov
xor
push
dec
mov
daa
mov
pop
cmp
mov
push
cs
fcomps
pop
outsb
lret
popf
jl
mov
cs
sub
aaa
aaa
pop
and
nop
or
movsl
pop
push
mov
mov
imul
movsb
and
adc
lcall
shll
fsubrs
jne
jg
sub
or
cbtw
loope
idivl
loop
pop
jmp
mov
lahf
loope
xchg
mov
pop
popl
dec
or
notl
fs
dec
xor
imul
test
fstps
inc
in
nop
test
outsb
shl
xor
sbbl
scas
cmp
lret
ret
mov
pop
ss
cwtl
clc
les
xchg
js
fyl2x
addl
stos
aam
sahf
push
test
sub
xor
sbb
cmpsl
jmp
cmp
and
pop
sbb
dec
cmp
arpl
inc
mov
adc
arpl
mov
jo
sub
sbb
int3
pop
lea
cmpsb
cmpsb
pop
pop
mov
gs
aad
or
andl
ljmp
or
movsb
add
mov
fsubl
add
ret
adc
inc
mov
ss
add
add
mov
sub
lahf
mov
mov
add
add
pusha
add
popa
push
or
fstl
jge
stos
adc
push
push
inc
push
es
je
or
mov
scas
sbb
or
sbb
popf
and
pop
data16
xorl
mov
mov
inc
mov
test
xchg
outsl
sub
dec
movsl
cwtl
out
cmpsb
imull
mov
dec
pop
int
fnstcw
int
mov
xchg
int
fsubrl
mov
inc
js
int3
cmp
pop
ss
imul
xchg
testl
test
dec
push
cmp
icebp
sbb
loopne
xchg
sub
leave
xchg
or
jbe
bound
out
push
test
sub
add
dec
push
daa
xchg
mov
in
mov
clc
cmp
cmp
scas
sub
push
and
idiv
adc
dec
pop
cld
subb
ljmp
in
cltd
sub
out
inc
sub
or
push
fcom
cld
pushf
add
add
add
jnp
outsl
icebp
dec
ljmp
jg
je
mov
lret
andb
dec
stc
xor
in
jbe
std
pop
xor
push
adc
test
test
jle
inc
jb
fistl
xlat
xor
test
cmp
daa
adc
inc
inc
stos
incb
pop
jg
aad
movl
pop
mov
add
outsl
fxch
jl
cld
adc
pusha
mov
add
or
add
ja
fstp
add
rclb
sub
push
adc
outsb
push
and
pop
pop
pop
mov
clc
sti
pusha
sarl
ret
cmp
adc
jbe
fidivl
sbb
ret
scas
in
pushf
inc
mov
lds
or
addl
jmp
mov
idivl
js
sbb
mov
inc
mov
imul
pop
mov
loop
test
mov
cld
mov
add
add
jle
sbb
imul
xchg
add
hlt
add
ret
dec
or
loop
popf
mov
add
pop
jp
xchg
jns
mov
adc
push
mov
stos
in
or
cmpsl
mov
bswap
cltd
push
jl
jp
inc
imul
add
js
mov
lods
aam
jle
movsl
push
jg
ret
xor
xchg
mov
rep
xor
mov
pop
sbb
and
adc
je
subb
jl
es
rolb
and
repnz
popa
aam
fnstsw
popfw
mov
sahf
pop
je
adc
ljmp
insb
popa
cli
das
cmp
dec
aaa
loopne
sub
and
xchg
imul
ja
push
sub
idivb
les
mov
fstps
mov
jmp
sub
leave
lds
mov
push
insw
stos
repz
push
pop
outsl
ds
or
or
lcall
es
add
add
add
add
mov
inc
mov
cltd
xor
xor
ret
mov
lcall
push
inc
fs
imul
lahf
push
fcoms
movsl
imul
push
mov
sub
add
cli
lods
dec
push
mov
adc
inc
and
cli
pushl
xchg
cli
ljmp
add
pop
dec
es
fwait
insl
sahf
sbb
mov
subb
mov
add
ds
add
pusha
add
addr16
dec
mov
add
pop
sbb
dec
pop
push
sub
fldenv
mov
fisubs
dec
lods
aam
into
mov
xor
inc
or
xor
aam
push
push
jb,pn
jl
pop
stc
mov
and
xor
push
in
push
mov
mov
ja
push
inc
dec
inc
insb
mov
lcall
mov
add
scas
jbe
or
dec
lock
mov
xchg
push
out
fldenv
cmp
push
sbb
cmp
add
movsb
mov
mov
inc
inc
add
mov
add
xchg
fistps
push
popa
les
in
stc
adc
mov
clc
push
pop
in
cmpsb
jmp
add
sbb
lcall
movsb
mov
mov
mov
sahf
pop
decb
fwait
insb
sub
or
iret
jle
lods
lahf
scas
add
lock
scas
jbe
jb
sub
dec
or
add
cs
icebp
jo
jg
mov
xchg
pushf
rorb
cmpsl
dec
mov
je
adc
popf
nop
pop
lds
add
push
pop
xor
dec
xor
cmp
push
push
leave
push
scas
xlat
xchg
push
repnz
imul
cmp
jmp
lret
fsubr
xlat
inc
add
and
out
loop
dec
test
imul
lds
dec
jo
popa
jle
gs
xchg
mov
pushf
out
dec
test
lret
jmp
adc
jge
aas
fisubrs
iret
ss
sub
aam
add
into
mov
cmp
test
testl
add
add
std
inc
mov
push
aas
or
add
add
add
cmpsb
push
or
movsb
sub
pop
jnp
push
fstps
out
addr16
es
bound
pushf
leave
ds
ss
out
push
xchg
test
xchg
pusha
jmp
pop
test
pop
pop
ds
orl
or
in
mov
lret
or
pop
push
inc
hlt
cmpsb
push
and
test
jecxz
mov
pmullw
fsubr
fists
cmpsl
in
xchg
push
and
jg
and
jle
push
gs
sbb
or
fsub
aad
std
test
popa
jecxz
idivb
out
je
xchg
jo
fsts
rclb
fidivrl
fwait
or
insl
sbb
outsb
dec
push
int3
xchg
sbb
cltd
out
mov
ljmp
lea
sub
in
ds
dec
add
push
test
aaa
jg
dec
sbb
rcll
and
xchg
mov
ret
sub
data16
test
push
push
inc
fdivl
push
dec
mov
adc
add
mov
lea
pop
insb
sbb
dec
mov
or
lret
adc
mov
cli
sbb
mov
mov
repnz
scas
xchg
repz
push
fs
pop
scas
mov
mov
outsb
inc
sub
sarb
mov
cs
out
mov
jl
scas
adcb
sbb
jae
and
adc
cmp
xchg
insl
int3
jno
out
mov
lds
pusha
fldcw
xchg
stos
sarb
xor
jb
pop
gs
push
mov
aaa
loop
mov
lock
mov
jnp
mov
cmpsb
mov
push
push
or
pop
mov
lods
push
lods
rclb
or
push
jmp
add
lcall
fmull
and
test
mov
pop
jmp
mov
lahf
dec
std
sub
cmc
or
add
add
sbb
mov
sbb
js
add
add
add
add
cmp
dec
and
jbe
xor
cmp
push
rorb
mov
cmp
xlat
pop
xchg
dec
jl
in
bound
or
aaa
and
aam
iret
out
xor
ss
adcl
pop
call
in
inc
add
adc
movsb
stc
pop
jae,pt
mov
xor
mov
jne
mov
in
xchg
loopew
mov
mov
ss
mov
fisubrl
jns
ss
ja
loopne
lret
jbe
or
xchg
andl
imulb
flds
jge
les
in
mov
sub
inc
inc
pop
mov
lock
leave
pop
xchg
pusha
or
ljmp
dec
xor
mov
adc
add
add
fisubl
jecxz
loope
cmp
sti
lret
into
mov
in
std
iret
jb
stc
lret
push
jle
and
adc
sahf
gs
add
add
stos
hlt
jmp
cmp
jbe
cld
pusha
inc
fcompl
movsb
add
add
add
leave
in
test
into
push
jbe
cs
fildll
in
cmp
imul
in
add
lret
sub
xchg
pop
test
push
pop
sahf
mov
mov
mov
mov
shlb
pop
mov
pop
jne
insl
adc
aaa
inc
bound
xchg
ljmp
iret
ss
fwait
test
inc
leave
in
fdivr
add
test
pop
dec
sbb
mov
mov
or
and
test
jle
sub
out
adc
pop
add
xchg
sbb
fidivl
inc
gs
push
lahf
out
mov
dec
ret
add
movsl
push
sbb
xchg
lret
cmp
imul
adc
jnp
andl
add
sub
adc
mov
shlb
in
or
fsubr
adc
mov
sub
jbe
imul
add
out
xlat
out
jg
in
xor
fnstcw
mov
pop
sbb
add
add
add
cmp
sahf
out
jp
mov
les
stc
arpl
fnstsw
xchg
stos
negl
test
xor
pop
cmc
sbb
nop
inc
js
and
inc
inc
inc
icebp
sub
lahf
inc
xor
dec
dec
imul
lahf
lods
jno
lods
jne
cmc
enter
test
das
gs
mov
iret
jb
jg
iret
fldt
int3
mov
sub
fiadds
and
inc
or
notb
jecxz
sub
xchg
mov
xor
aas
mov
test
mov
test
push
lock
in
mov
jge
out
push
xchg
xlat
pop
imul
xchg
push
testb
push
sti
cmpsl
mov
stos
or
jbe
testb
leave
jnp
pop
adc
adc
mov
mov
inc
dec
xor
ror
in
inc
iret
push
dec
jl
sti
sbb
dec
jmp
movq
add
add
mov
inc
fwait
lds
jo
fldl2e
movsl
push
lcall
add
sub
lahf
aam
jmp
mov
bndldx
pop
sahf
test
sbb
dec
jae
aad
add
js
insl
mov
pop
mov
mov
in
sbb
add
ret
jle
sahf
sarb
hlt
ljmp
push
in
push
rorb
mov
jo
imul
jb
aad
jp
or
int
add
in
ret
sub
subb
out
mov
push
mov
push
imul
or
jns
sub
xchg
mov
loop
in
test
xor
jo
jno
aas
pop
scas
mov
push
xchg
inc
xchg
sarl
loope
mov
ret
hlt
mov
test
xchg
pop
lcall
in
mov
and
jge
dec
mov
out
hlt
rcrl
mov
test
and
mov
mov
cmpsb
divl
arpl
push
xchg
pop
insb
inc
lcall
std
inc
jne
xorl
adc
cmpsl
add
add
add
dec
test
out
xor
cld
mov
adc
inc
jno
ret
inc
xchg
imul
mov
sbb
inc
vmovntps
mov
and
movsl
lret
xlat
lock
and
xorl
jne
addb
cmp
lcall
les
in
rcl
add
js
aam
ja
mov
jbe
or
mov
xchg
xor
rcll
in
jne
ja
mov
mov
adc
push
inc
rorl
dec
enter
insb
or
adc
stc
pop
shrl
ret
xor
leave
push
in
inc
adc
ljmp
jle
loop
xchg
jne
cmp
sbb
and
imul
mov
mov
movsb
xor
imul
lods
fdivrl
lahf
or
inc
push
lret
jnp
sti
jmp
push
mov
imulb
test
add
add
pop
ds
lock
loop
out
out
mov
lea
loop
add
rcr
adc
or
daa
aam
pop
add
push
loop
cwtl
outsb
insb
xchg
inc
test
xlat
sbb
sub
imul
fcoms
push
jecxz
pop
sbb
test
stos
mov
and
push
jns
ja
sub
fisubl
dec
int3
fsubrs
int
adc
scas
mov
lds
pusha
pop
dec
pop
xor
das
data16
clc
movsb
aaa
ret
push
inc
sbb
or
xchg
imul
cmp
cwtl
jo
cmp
sti
jmp
and
test
mov
mov
and
inc
in
mov
pusha
pop
divb
or
mov
mov
outsl
or
fldenv
out
out
mov
or
sub
call
jp
cmp
iret
sub
xor
mov
add
add
jecxz
lock
push
les
add
add
add
fs
insb
fwait
xor
jo
and
add
xchg
add
xchg
inc
cmp
lret
xchg
push
insl
fdivrs
xor
shlb
fisubl
fdiv
movsl
lret
aas
mov
inc
loope
lcall
adc
cld
movsb
faddl
push
mov
cwtl
mov
in
mov
shl
cmc
in
sbb
scas
push
mov
jp
mov
leave
rorl
in
pop
addr16
mov
shrl
push
fists
mov
xchg
inc
pushf
lret
jne
jo
mov
xchg
cmp
mov
cmp
enter
in
jl
pop
sub
sbb
jb
out
mov
mov
cmc
and
pushf
adc
lock
push
pushf
sbb
stos
inc
out
lret
cwtl
cld
xchg
mov
aam
mov
mov
pop
mov
xor
imulb
lea
add
rol
ja
add
add
cld
mov
leave
fmul
aad
xor
add
mov
push
jno
aad
xchg
fisttpl
jo
xor
lret
jg
add
pop
lock
inc
pushf
insl
ds
mov
adc
rol
add
jae
and
test
ret
addr16
jo
loopne
xchg
insl
xchg
cmpsb
cmp
xchg
mov
push
jno
lret
xor
out
stc
cwtl
mov
imul
mov
jle
ss
mov
xchg
sbb
lods
into
daa
bound
pop
xchg
sahf
add
sub
pop
adc
rorb
insb
clc
filds
jp
push
or
popa
popa
pusha
pop
imul
inc
les
adc
mov
mov
dec
or
shll
rclb
or
fists
add
and
test
push
outsl
in
push
in
sub
push
sbb
sbb
add
mov
dec
das
pop
out
cmc
mov
clc
inc
inc
xchg
xor
add
add
add
out
mov
jns
mov
xchg
sub
add
out
dec
stos
push
add
fiadds
aad
in
cs
or
dec
mov
clc
pop
push
jl
dec
aam
sbb
cmpsb
fnstenv
push
adcl
sub
push
cmp
std
lahf
dec
jl
movsl
push
jnp
hlt
insb
lret
mov
int3
mov
mov
orl
pop
out
loop
filds
jns
imul
aam
xchg
and
mov
jecxz
shr
xchg
pop
js
adc
jge
outsl
inc
push
imul
sub
jecxz
lock
cmpsl
pop
and
pop
cli
cmp
mov
xor
jmp
lahf
in
dec
sub
mov
das
ss
scas
pop
sub
repnz
inc
push
mov
sbb
shrl
inc
xchg
movsb
and
shrb
fucomip
std
dec
std
pop
lcall
xchg
pop
push
shlb
add
add
pop
mov
or
xchg
test
mov
fiadds
sub
popa
xchg
push
insl
daa
mov
insl
sti
aas
js
icebp
jle
fstl
pop
das
xchg
les
fildll
sub
fistpll
lcall
jo
in
outsb
inc
out
stos
and
push
sbb
mov
sub
and
mov
cwtl
js
pop
pushf
loope
aad
lods
jne
sbb
scas
inc
lods
mov
push
insl
pop
or
out
xorb
mov
or
nop
sbb
sbb
xorl
mov
mov
outsl
and
shrb
mov
push
sub
push
jo
rorl
pushf
mov
loopne
mov
xchg
bound
mov
aam
push
lcall
addr16
fwait
push
fs
mov
ret
pop
stos
sbb
ljmp
addl
add
fidivs
loop
ljmp
jns
cmp
add
add
add
test
sahf
mov
out
fs
imul
dec
and
adc
addr16
sbb
das
shlb
andb
xor
lcall
stos
iret
xchg
mov
mov
out
cvtpi2ps
dec
jne
cltd
push
int
cld
dec
cmp
jnp
das
mov
push
and
mov
mov
fidivl
hlt
jmp
sub
scas
mov
push
in
sti
jmp
mov
fwait
popf
and
inc
nop
scas
and
into
je
pop
pushl
sub
cmp
psrlq
sbb
fistps
lret
popf
jle
pop
das
aas
pop
js
pop
add
daa
gs
fsub
add
xor
sub
test
jo
inc
dec
into
inc
notl
dec
adc
leave
jnp
icebp
add
mov
cltd
sahf
cmp
dec
gs
insb
clc
mov
lods
call
push
movsb
cmc
scas
pop
test
add
push
xchg
jg
jmp
std
mov
fisttps
inc
scas
add
add
add
loop
dec
das
sahf
jns
lock
cmp
or
sbb
negl
data16
daa
inc
add
mov
rcll
les
push
sub
pop
inc
push
std
sbb
shrl
ds
int3
sbb
dec
cld
outsb
sbb
outsl
loope
and
rcl
push
or
jle
mov
mov
pop
cmp
movsl
sub
imul
or
dec
push
sub
xchg
aaa
and
and
pop
pop
add
push
das
bound
mov
inc
jnp
jnp
push
imul
aam
sbb
mov
push
push
mov
xor
push
push
xor
sbb
sti
sbb
mov
mov
dec
sub
sti
push
ret
cmp
push
daa
inc
out
inc
jge
mov
xor
in
jge
subl
scas
xor
sti
nop
fistl
mov
adc
adc
jg
or
repz
bound
add
add
xor
inc
mov
push
jne
scas
add
add
add
rol
cs
sbb
aam
dec
jmp
repz
stc
xchg
and
rorl
mov
jne
pop
pop
add
xchg
inc
mov
sub
popa
pop
fldenv
outsb
dec
mov
mov
rcrl
or
mov
jmp
nop
and
in
iret
int
mov
and
fldenv
pop
rcll
sbb
and
call
cwtl
frstor
mov
mov
sbb
inc
test
aam
cltd
push
mov
pop
push
dec
dec
add
fwait
jmp
mov
cwtl
das
push
fcomps
sub
fs
ret
mov
clc
push
xor
std
jne
dec
push
imul
mov
dec
or
adc
jg
ljmp
mov
add
xchg
inc
mov
cltd
sub
ret
xchg
inc
mov
push
pop
xor
cmp
inc
call
push
mov
add
add
call
adc
outsb
adc
aas
call
aaa
sub
out
or
std
cmpsl
push
into
pop
movsl
es
arpl
xlat
frstor
push
data16
adc
xchg
cmpsl
add
lea
lea
shlb
mov
adc
out
mulb
cmp
push
out
mov
rolb
imul
xchg
imul
and
mov
jo
lods
out
and
popa
pop
ret
jle
cmpsl
adc
in
es
shlb
aad
lcall
rcr
cld
mov
push
loop
cmpsb
jne
pop
jge
xor
nop
sbb
inc
adc
enter
push
aaa
fcompl
dec
jmp
or
lea
mov
xlat
jns
pop
or
mov
xchg
jg
sbb
ret
dec
dec
cltd
sbb
xorb
es
les
mov
arpl
in
dec
mov
add
add
mov
cld
cmp
mov
cmc
fistps
test
inc
fldl2e
out
imul
addr16
inc
jo
pop
loopne
jns
testb
mov
pusha
fnstcw
inc
into
icebp
lret
dec
mov
add
add
scas
pop
repz
cs
imul
jecxz
mov
push
mov
iret
or
aas
fsts
int3
pusha
push
test
push
das
cmp
lods
addl
ret
mov
ja
inc
jecxz
push
call
mov
adc
xchg
push
xchg
out
test
rcll
add
sbb
cmp
push
jb
clc
leave
pop
push
adc
fs
movsl
scas
fsubr
jl
xchg
icebp
jp
mov
clc
cmovs
cmpsl
inc
or
mov
fstpt
mov
adc
or
sub
dec
sub
xlat
inc
dec
or
pop
stc
out
push
pop
bound
mov
mov
add
add
jns
adc
push
fcompl
test
mov
lea
stos
shrl
out
add
jo
repz
int3
lods
scas
and
test
rol
daa
mov
push
mov
gs
mov
or
jp
xlat
lods
sti
icebp
lcall
sub
repz
scas
pop
pop
sub
cld
dec
pop
outsl
fcmovb
xor
pop
pop
fbstp
icebp
mov
xchg
pop
sub
or
mov
out
xrelease
fsubr
mov
sub
mov
fistl
jne
fs
mov
ret
jo
add
push
dec
push
cmp
inc
and
pop
inc
movsl
sbbl
cltd
jge
sub
jecxz
bound
cld
repz
fldt
fwait
add
push
add
jmp
push
xchg
daa
ret
popf
divl
jg
insb
and
aad
dec
outsb
das
imul
in
out
test
add
add
push
mov
lcall
push
push
mov
add
add
call
xor
mov
scas
xchg
mov
popf
test
loop
repnz
sti
in
pop
push
ljmp
mov
inc
pusha
imul
jb
bound
jne
out
fmuls
mov
jne
jbe,pn
insl
mov
jb
test
pop
sbb
pop
lock
mov
orl
test
pop
xchg
adc
int3
mov
notb
pop
cmpsb
jle
int
jns
xchg
push
mov
lds
dec
cmp
pop
cmc
dec
pop
aad
cmpsb
inc
in
cmpsb
pop
sub
dec
aad
mov
mov
iret
or
pop
jle
test
fisubrl
inc
jno
push
ljmp
sbb
xor
xchg
sub
xchg
adc
add
mov
adc
into
push
push
repz
leave
jno
js
xchg
repz
sbb
test
sbb
cmp
les
mov
push
add
shll
arpl
push
dec
xorl
insb
lret
pop
dec
pop
mov
add
add
mov
push
scas
loope
cmpsl
shrl
dec
shl
push
shl
in
mov
nop
cmpb
int
jnp
pushf
xor
imul
pop
cmp
stc
xorl
leave
sbbl
lds
sbb
jae
sbb
sbb
mov
pop
add
add
out
jae
xchg
cltd
popa
adc
mov
mov
xchg
aas
fidivrs
mov
stos
in
or
mov
mov
jo
int3
dec
jl
inc
sbb
insb
jbe
daa
sbb
dec
mov
test
lahf
into
pop
jge
inc
and
cld
xor
mov
addr16
bound
or
cltd
cmpsl
inc
mov
adc
push
xchg
jmp
adc
mov
ret
mov
mov
pop
addl
lret
mov
popf
add
pop
sbbl
fstp
rorl
fcompl
add
add
lret
jg
xchg
mov
fiaddl
lds
fnstcw
dec
mov
pushf
adc
scas
sti
rcrl
mov
je
pusha
es
ds
add
pop
inc
stos
xlat
leave
xor
sub
insl
stos
jl
in
clc
mov
rcll
and
in
test
stos
fcmovnu
lret
jl
adc
mov
negb
mov
xchg
fnstsw
icebp
mov
xorl
stos
idiv
pop
test
mov
adc
mov
out
push
mov
loope
and
push
or
sahf
sahf
xchg
addr16
pop
cmp
inc
cmp
push
xchg
jp
or
nop
and
fadds
xlat
sti
test
dec
jle
cmp
lds
dec
jl
jb
out
std
push
jno
pop
xor
lret
arpl
pop
mov
testb
clc
jo
pusha
xchg
flds
add
mov
aas
sub
rol
cmp
and
imul
movsl
lret
add
loope
mov
jecxz
out
mov
imul
xchg
dec
mov
popa
mov
std
or
pushl
jbe
testb
add
test
mov
fs
repnz
aas
xchg
in
push
and
dec
sub
jge
dec
pop
loopne,pt
es
rcl
mov
pop
inc
xlat
rclb
cmpsl
hlt
int
repnz
pushf
repz
dec
jle
sub
mov
lea
mov
mov
bnd
je
aam
adc
sbb
push
dec
scas
stc
mov
es
add
push
lods
xchg
outsl
stc
dec
adc
sbb
mov
imul
fdiv
or
and
jg
sahf
inc
bound
mov
out
jle
xchg
pop
rorb
add
or
lcall
aaa
inc
xor
sub
adc
ficoms
xchg
test
aas
ret
ja
cli
or
inc
push
ret
mov
add
std
test
jg
into
lret
orl
add
add
xor
cmp
cmp
inc
inc
es
aad
mov
pusha
inc
xchg
mov
outsb
sub
in
imul
dec
cmpsl
adc
adc
das
pop
pop
push
dec
ret
xlat
fucompp
mov
dec
cmp
mov
cmp
jle
mov
add
int
scas
dec
in
jbe
in
sahf
enter
sub
cmpsl
jnp
std
pop
add
out
sbb
sbb
scas
push
addb
mov
xlat
lds
pop
ss
arpl
sarl
jmp
push
sbb
mov
and
popf
inc
jno
fisttpll
loope
in
mov
mov
mov
mov
pop
pop
in
aaa
aam
dec
inc
mov
out
pop
or
adc
lock
clc
fcoms
add
dec
and
cmp
mov
lock
dec
fildll
or
and
xor
mov
add
lock
in
lcall
jae
dec
mov
sub
add
add
xor
aam
int
jae
jae
pusha
and
cmc
mov
add
nop
cmp
incl
or
pop
movsl
out
pop
inc
adc
inc
mov
movsl
adc
xchg
inc
in
xor
dec
mov
mov
dec
in
push
sub
or
mov
push
pop
cmpps
push
mov
test
jno
sti
inc
cmpsb
push
mov
lds
cs
ficompl
cmp
ljmp
xchg
push
xor
cmpsb
sbb
sub
jg
adc
shll
mov
jg
mov
out
ds
xchg
rclb
sbb
notl
rorb
xchg
aaa
repnz
mov
cmp
xor
pop
in
in
ror
jne
pop
jae
add
cmp
sahf
cli
call
pushl
inc
mov
xchg
sbbb
aad
cmpsb
jno
mov
inc
dec
or
jg
dec
arpl
adc
add
add
out
cltd
push
pop
outsb
sub
pop
cs
and
ret
in
sub
insl
ret
push
xor
mov
xorl
push
imul
mov
lds
jno
push
icebp
xor
test
ss
cmp
push
pop
or
dec
clc
ficoml
lods
std
aaa
xchg
pop
das
in
scas
sbb
and
sub
sti
rcrl
pop
pop
or
loope
mov
popa
jne
and
sbbl
ds
dec
or
ror
out
mov
push
popf
sub
xchg
loopne
mov
cld
movsl
mov
jo
pop
sub
mov
add
push
jecxz
scas
fstpt
aas
test
mov
lcall
inc
lahf
into
mov
into
xchg
jp
mov
or
mov
divl
loopne
sbb
ficoms
js
sbb
jne
dec
pop
jb
insl
sbb
outsl
mov
bound
add
add
add
aas
insb
dec
mov
iret
aaa
popa
je
push
mov
outsl
mov
testl
mov
and
mov
pop
inc
in
shll
lods
fstpl
and
xor
push
fcompl
dec
pop
push
pop
addr16
enter
cmc
imul
or
js
and
fsub
inc
rclb
push
shll
cld
scas
mov
lcall
sbbb
rcl
testb
push
loope
sbb
adc
jp
cmpb
mov
jae
pop
bound
in
lret
add
push
mov
pop
lods
out
mov
cs
rolb
in
cli
popa
cltd
pop
lods
xor
dec
cli
push
dec
popf
push
ja
inc
xor
js
pop
hlt
mov
jmp
jle
cld
pushf
fwait
mov
pop
dec
mov
push
sub
sbbb
xchg
ret
fs
jmp
add
inc
fbld
mov
pop
popf
pop
inc
xchg
je
add
add
add
sub
xor
enter
mov
mov
movsl
iret
and
and
xor
pop
jecxz
fwait
sub
sbb
cmp
frstor
sbb
insl
lcall
adc
sub
fbstp
dec
pavgw
xchg
adc
repz
sahf
cmp
std
ja
out
decl
rcll
out
adc
sub
jge
stos
lret
inc
xorb
sub
lods
paddsb
fmull
jp
in
lcall
xchg
push
enter
and
lret
mov
adc
aaa
xor
pusha
jae
int3
dec
outsb
bound
mov
stos
iret
mov
mov
jmp
xchg
out
les
pop
fs
and
cmpsl
add
inc
jb
decb
cs
stc
mov
orl
outsb
out
pop
cli
loope
stos
lret
pop
fimuls
mov
push
push
call
les
add
add
add
dec
sti
femms
xchg
imul
rcr
sbbl
mov
data16
shrl
pop
jae
pop
popa
mov
push
sbb
lret
or
fnsave
push
cmp
push
les
les
push
mov
lret
cmp
dec
mov
jmp
faddl
addr16
sbb
and
mov
dec
idivl
imul
inc
jp
jecxz
xchg
add
jno
in
mov
jne
xor
into
push
or
mov
mov
mov
xlat
aad
out
push
das
push
mov
mov
mov
sar
popa
xor
ficoms
and
std
aad
hlt
das
mov
jmp
mov
pop
cld
je
xlat
mov
dec
jo
xchg
add
and
cmp
daa
test
pushf
lret
mov
cmp
and
push
jnp
jl
loop
movsb
adc
add
into
std
sti
leave
sti
iret
jmp
jnp
and
add
add
or
outsb
stos
out
ljmp
cmp
xor
adc
cmc
addb
inc
xchg
and
push
mov
jge
cld
pop
pop
test
jne
outsb
mov
mov
jecxz
xor
lret
jmp
sub
or
fxch
sub
gs
mov
mov
mov
push
sbb
cwtl
cmc
orb
pop
pusha
into
lahf
cwtl
ljmp
mov
fisubl
pop
into
in
movsl
stos
pop
ret
stos
enter
mov
mov
xor
jne
out
adc
dec
int
xchg
push
cmp
cmp
sub
fstp
cld
std
repnz
lds
mov
stos
cmp
lcall
and
mov
pop
ds
adc
pop
insb
xor
lret
jo
test
mov
mov
es
pop
je
in
cli
mov
push
enter
mov
jno
and
xchg
mov
mov
xor
xchg
jo
mov
add
adc
xor
or
xchg
push
aaa
mov
lahf
add
das
divb
mov
pop
mov
add
jmp
test
pop
mov
negl
pop
out
mov
cs
xorl
jns
js
sarl
stos
xor
call
inc
xchg
mull
inc
das
fnstcw
inc
popl
out
jmp
sbb
out
andb
dec
scas
loopne
or
repz
loope
xchg
inc
mov
fs
adc
lock
lods
cmp
push
sub
or
xchg
repnz
bound
rorl
dec
inc
cmpb
mov
ficomps
push
jle
pushf
jmp
pop
jmp
ljmp
mov
mov
sbb
in
add
negb
cmp
or
xor
lret
mov
xor
pop
jecxz
adc
pop
xchg
addb
add
fwait
mov
or
jg
mov
sahf
loop
leave
sub
aas
test
add
pop
hlt
dec
sbb
xchg
bnd
jno
push
jge
pop
pop
loop
mov
ret
mov
sub
or
shrb
or
aam
mov
adc
cmp
test
cltd
push
xchg
push
jmp
jle
sbb
dec
dec
in
aam
insb
daa
jbe
fsubs
dec
xor
xchg
das
or
mov
and
pop
sbb
mov
insl
mov
mov
lds
imul
ficompl
test
cmp
idivl
adc
xor
test
ljmp
mov
test
cmp
int3
pop
loop
jns
aaa
into
lret
std
das
pop
mov
or
adc
add
cld
pop
test
shrb
sahf
jae
jbe
xor
adc
stos
and
stc
out
outsb
pop
xor
pop
fcoml
iret
data16
jbe
in
push
iret
dec
sbb
mov
mov
xor
push
cld
pushl
cld
sbb
mov
add
add
add
stos
inc
and
jl
in
sbb
dec
cltd
and
push
outsl
leave
ds
sub
bound
mov
movsl
mov
fildl
inc
jge
push
or
cmpsl
sahf
mov
fwait
cmp
or
pop
test
or
inc
out
or
and
jb
push
jns
push
pusha
pop
out
fstpt
shll
popf
ficoml
je
shlb
sbb
xor
adc
je
mov
shll
jbe
jb
punpcklbw
out
popa
aam
mov
dec
mov
jb
cli
in
int3
jl
cli
clc
call
jmp
mov
hlt
fldl
jo
in
mov
push
ret
add
inc
or
mov
cmp
sub
out
adc
mov
and
cmpsb
cli
popa
push
sahf
rcrb
or
inc
xlat
pushf
shrb
lcall
hlt
push
or
mov
add
add
add
movsl
imul
xchg
jmp
xor
imul
dec
out
imul
divb
mov
sub
add
xchg
jnp
aas
xchg
push
testb
push
fdivrs
jo
jb
sub
fcomip
aad
push
loop
mov
or
aas
fcomps
mov
jmp
inc
inc
sbb
push
xadd
incl
inc
pop
addl
xchg
cmovne
pop
inc
popf
lods
xchg
imul
xchg
outsl
inc
jecxz
divl
xchg
xchg
orb
movsb
cmp
inc
lcall
aam
push
ja
cmp
sbb
loop
fidivrs
push
adc
jno
out
ds
test
aaa
aam
inc
or
mov
in
lods
out
mov
pushf
inc
adc
insl
into
cmp
adc
push
inc
andb
rolb
add
add
test
mov
aas
scas
fpatan
or
or
add
add
pusha
into
push
inc
jg
cmpsb
adc
popa
or
subb
decl
and
xor
std
mov
mov
cmp
adcl
into
lahf
dec
dec
xor
scas
out
xchg
pop
add
frstor
scas
dec
dec
jo
out
push
adc
mov
in
movl
fcomps
lret
mov
in
mov
fmulp
fcompl
jo,pn
add
cmp
inc
and
rorb
cmc
stos
mov
dec
leave
adc
mov
xchg
fistpl
sub
mov
popf
xchg
je
adc
xchg
mov
push
and
mov
jnp
cltd
xchg
in
test
aam
sbb
and
push
cmp
inc
sbb
icebp
lret
xor
adc
jmp
adcb
cmp
sub
iret
stos
jecxz
add
mov
repz
outsb
pop
inc
iret
mov
add
jg
jne
jne
jg
loop
mov
lret
add
add
add
int3
gs
inc
fsubrs
xor
or
mov
out
das
les
lock
jae
xchg
rol
sub
jae
cs
jno
mov
mov
cmp
mov
fadds
sub
pop
out
xchg
lret
sbb
pop
or
nop
mov
xchg
andl
mov
into
push
cmp
outsb
cs
push
adc
pop
or
shr
pop
arpl
sub
and
xor
into
fmuls
or
cmc
ficoml
imul
xchg
mov
push
mov
mov
je
mov
mov
mov
jle
push
imul
out
inc
mov
push
test
aam
shll
icebp
es
ss
lods
pop
fdivs
inc
add
mov
es
mov
das
push
dec
ljmp
sbb
mov
cmc
mov
negb
add
add
cmp
jecxz
sbb
jg
xchg
mov
ja
jp
dec
mov
filds
movsl
push
in
bound
pop
mov
push
rclb
xor
loope
push
ljmp
dec
pop
add
iret
or
cmp
pop
sub
test
sbb
ffreep
cmp
clc
outsb
or
cmp
push
xlat
sub
push
add
sub
mov
nop
fdivrs
in
test
add
fiadds
cmp
in
fwait
mov
scas
lahf
inc
mov
jecxz
lea
and
pop
sub
enter
pop
xchg
aaa
cmp
out
add
push
add
push
jb
push
push
push
clc
xor
adc
lea
into
hlt
mov
push
jb
jle
imul
dec
lcall
sbb
xor
xor
jl
xchg
out
push
mov
adc
and
outsb
jle
lods
testl
lds
add
add
jl
push
xchg
push
fs
bound
cmp
mov
inc
stos
mov
shlb
imul
sbb
aad
ret
cmpsl
jmp
sub
data16
repz
pop
mov
inc
ja
xor
add
xlat
xchg
sub
cli
mov
cmp
push
loopne
and
xor
mov
cmp
mov
sbb
aam
push
inc
cmc
xor
stc
into
and
mov
mov
sub
aas
je
sbb
sbb
call
sbb
xor
cwtl
dec
fs
add
pop
es
cwtd
cmpsb
lea
int3
cs
call
aad
push
dec
sub
and
in
xor
loope
movaps
sbb
sbb
aad
dec
push
push
call
ljmp
lret
ljmp
add
add
mov
xchg
insb
pop
int
jae
movb
add
add
stc
ss
insl
ss
inc
adc
inc
mov
sub
mov
fidivrs
fdivr
gs
jle
cmp
mov
sarb
loopne
push
mov
inc
inc
push
or
or
add
inc
xor
push
add
lds
pop
cmp
outsb
add
scas
push
and
orb
mov
out
xor
adc
sbb
jnp
in
addr16
xchg
ret
xor
adc
fsubrp
push
xor
cmpsb
pushf
xorl
cwtl
mov
es
push
or
jl
mov
imulb
xor
mov
push
and
or
mov
dec
cmp
insb
clc
adc
out
inc
xor
dec
lret
jg
sbb
lret
dec
and
cmpsl
jg
pop
jg
push
pop
aaa
ss
cmp
pusha
fldenv
std
add
ja
lahf
jecxz
int
outsl
xchg
dec
test
sbb
xlat
in
aad
pop
cld
clc
jp
movl
add
mov
pop
or
nop
lret
repnz
imul
cmpsl
jns
inc
inc
into
ret
dec
or
icebp
in
jb
cmpsb
jl
mov
scas
mov
pop
xchg
sub
add
push
pop
push
daa
dec
adc
sub
out
dec
loopne
xor
test
test
jne
cltd
shlb
out
ljmp
push
mov
fcomp
jbe
push
jo
das
jmp
dec
xchg
mov
dec
cwtl
sti
sub
imul
int3
xchg
sbb
fisttpl
and
mov
hlt
pop
outsl
push
ds
or
xchg
add
mov
mov
rorb
or
push
sbb
or
inc
data16
jne
add
mov
jmp
mulb
and
mov
js
ljmp
mov
das
aad
dec
data16
sbb
add
add
push
sub
cmp
jg
and
mov
fisttps
add
add
add
mov
sbb
rorl
faddl
shlb
xlat
imul
repnz
mov
xchg
inc
sub
in
cld
cmpb
push
jmp
jecxz
incl
xor
xor
jp
adc
dec
cs
inc
add
or
sbb
or
rcrl
imul
xchg
scas
sub
inc
das
movsb
push
pushf
xor
dec
mov
dec
scas
in
pop
push
fwait
pop
cltd
pop
aad
inc
adc
add
and
cwtl
jl
jl
addr16
xchg
jae
add
dec
lcall
pop
jno
imul
cmp
aas
push
dec
fidivl
or
loop
nop
cltd
paddb
cmc
mov
pushf
push
jge
inc
jb
xchg
fsubrl
cmpsb
dec
in
in
andl
cmp
add
mov
loope
add
add
xor
fistpll
out
repz
fcoms
inc
cmpsb
add
lods
leave
add
add
add
sbb
insb
lahf
dec
dec
or
bnd
arpl
mov
popa
loop
btr
inc
lea
ret
mov
jl
daa
test
or
test
sahf
outsl
xchg
pushf
pop
xchg
loope
pop
dec
adc
fisttpll
orl
arpl
cmp
adc
push
adc
xchg
sub
cmc
mov
fbstp
test
shl
pop
popf
movsl
cli
jno
adc
sbb
adc
jge
xchg
adc
out
xorl
int
inc
sbb
push
adc
mov
xor
add
sub
jecxz
pop
and
rolb
jmp
jmp
fs
jae
jno
xchg
dec
sub
jp
mov
xchg
es
and
push
add
pop
loop
lret
mov
jge
adc
jo
jl,pn
jbe
push
lds
out
sub
mov
test
push
adcb
add
add
mov
mov
or
popa
lret
add
add
add
sbb
mov
bound
mov
hlt
fdivrs
int
adc
insl
cld
jle
shlb
rcrl
insl
jno
ja
ret
sbb
fists
outsb
sbb
sub
mov
mov
inc
cmp
ja
pop
lret
cmc
psrlq
int
popa
dec
das
mov
cmp
inc
lcall
popa
popf
jnp
cmc
fistps
xlat
and
lahf
andb
inc
push
in
sbb
insb
fdivrp
fcomip
xchg
fmull
mov
and
ss
lret
cld
movsl
mov
inc
adc
dec
fbstp
dec
jbe
xchg
inc
mov
in
mov
xchg
cmpsl
insl
jae
push
mov
test
ficoml
mov
rorl
sbb
mov
in
push
jae
cli
push
cmp
mov
sbb
push
xor
jp
push
sti
scas
pop
es
repz
cmp
stc
enter
in
sbb
push
inc
ret
movsl
mov
add
add
add
adc
or
jno
mov
jle
out
jmp
pop
std
pop
scas
xchg
or
add
mov
insl
inc
cmp
fwait
ja
xchg
in
cmc
xor
xor
pop
cmp
mov
jmp
out
ss
xchg
cmp
sbb
lcall
adc
push
cmp
ds
lret
xor
sti
out
bnd
sahf
lods
cmp
sbb
xor
pop
cmp
push
dec
xchg
sti
popa
mov
mov
pop
andl
cwtl
mov
jmp
jmp
js
add
mov
pop
test
popf
inc
pushf
mov
mov
cs
mov
scas
cmp
or
sbb
jmp
fxch
xor
jmp
mov
lock
std
inc
mov
mov
jge
orb
jg
jl
cmp
iret
scas
sbb
mov
shlb
jne
imul
cmc
call
inc
push
popa
mov
int3
add
add
add
jo
rsqrtps
push
mov
inc
popl
and
aam
dec
cld
out
sub
bound
mov
dec
and
add
dec
loop
or
cli
push
xor
or
dec
add
orb
rolb
rcrb
push
push
or
xor
insl
leave
push
gs
lods
sbb
dec
mov
pop
daa
nop
inc
pop
in
nop
enter
into
div
insl
dec
iret
rcrl
push
pop
xor
jl
hlt
sar
pop
movsl
imul
es
add
sub
xchg
int3
and
test
setl
rcrb
cld
mov
mov
mov
inc
call
pop
xlat
adc
enter
push
lods
mov
inc
sbb
cltd
in
cmp
mov
addr16
divb
mov
leave
nop
icebp
jecxz
cmc
popa
lcall
cwtl
pushf
into
cmp
and
cmp
movsl
mov
iret
sub
mov
add
add
add
shrl
xchg
in
xchg
cmp
add
xchg
push
cltd
fstpt
fdivl
mov
iret
dec
mov
mov
lahf
lcall
cmp
mov
mov
cmpsb
mov
jmp
push
push
sahf
cmp
stos
test
repz
inc
incl
cmp
popf
idivb
add
adc
and
push
sub
inc
nop
aaa
jnp
stos
mov
xchg
cld
and
fisubs
mov
push
pop
loopne
xor
das
out
xchg
sti
adc
inc
mov
sub
pop
nop
and
mov
pop
daa
or
cmpsl
sbb
xor
imul
sub
mov
arpl
mov
ret
notl
sub
push
ja
sti
stc
push
test
or
push
pop
in
sti
push
or
into
sbbl
out
dec
xlat
inc
negl
add
add
out
into
gs
cld
test
into
add
add
add
xor
roll
imul
lret
mov
or
mov
cmp
into
dec
test
ljmp
out
test
mov
loopne
stos
loopne
xor
in
leave
test
into
push
pusha
xchg
xor
in
out
jne
dec
mov
test
xlat
out
sarb
shlb
mov
fnstcw
pusha
int
mov
lret
inc
or
lds
xor
inc
popa
mov
xchg
jno
div
inc
dec
mov
mov
stos
pop
xchg
jae
sbb
mov
inc
mov
orps
cmc
divb
mov
dec
loopne
hlt
dec
cmpsb
mov
jecxz
test
push
and
movb
iret
mov
cmpsb
xchg
mov
jae
push
stos
cwtl
stc
loope
sbb
push
mov
addl
int
imul
int3
ss
mov
mov
xor
stos
mov
pop
pop
fcompl
mov
movsb
loopne
and
je
out
mov
dec
inc
cwtl
dec
iret
add
add
add
mov
mov
mov
int
sbb
pusha
das
mov
fadds
push
mov
and
scas
ret
mov
loopne
sub
jmp
out
filds
and
sbb
rcr
cwtl
mov
insl
lret
mov
jmp
aam
jne
in
xor
sbb
dec
cmp
and
jae
inc
gs
mov
popa
icebp
js
test
sbb
or
shrl
es
add
adc
and
push
or
movsl
xlat
sbb
test
aas
ret
jbe
cmp
jb
aad
out
push
jl
mov
int3
hlt
cmp
fstpl
push
and
addr16
push
je
or
or
fcom
inc
aad
pop
das
jmp
pop
popf
push
cmpsb
adc
push
scas
pop
or
mov
xchg
stos
sbb
jae
cmpsb
outsb
aam
outsb
mov
push
cltd
adc
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
loopne
enter
add
add
add
cmp
shrl
fdivl
mov
popf
ljmp
mov
jg
out
test
repz
cld
adc
stos
and
aad
inc
mov
hlt
sub
out
frstor
push
imul
add
shlb
mov
jb
imul
push
inc
mov
dec
jmp
pop
dec
fmull
push
pop
mov
call
decb
mov
push
fcom
int
pop
cmc
mov
lea
jbe
imul
xor
shrb
push
in
pop
push
cmp
adc
fidivrs
sub
pop
jle
outsb
int
sub
pop
mov
sub
cld
xchg
icebp
lcall
ret
and
into
adc
lcall
test
xor
mov
jo
scas
test
nop
fidivs
pop
sarl
dec
mov
gs
pop
sub
inc
cwtl
shll
into
mov
xor
push
inc
cmp
add
add
popf
mov
lahf
ret
or
shlb
add
add
pop
mov
dec
push
popf
sub
mov
hlt
movsb
data16
inc
lahf
mov
xorb
mov
roll
pushf
call
insb
pop
orl
cli
addr16
je
jo
test
mov
jmp
ja
mov
stos
lret
and
stc
xor
fcmovnb
sbbb
adc
aam
ret
sub
xor
add
mov
dec
lret
mov
cmp
lsl
jno
in
mov
mov
out
and
test
loopne
imul
scas
popf
fidivs
int3
mov
inc
mov
sub
adc
sub
mov
std
jmp
xor
jecxz
shl
pop
out
or
adc
dec
jns
mov
or
adc
bound
sarl
scas
or
xchg
out
mov
jbe
nopl
sub
repz
add
add
neg
outsl
push
xchg
or
rolb
add
add
adc
xchg
sbb
push
cs
sub
cmpsb
adc
pop
out
lret
sbb
ljmp
jg
cmp
pop
push
jo
adc
cmp
int3
xchg
pop
pop
imul
inc
push
lea
fdivr
pop
in
sbb
loop
mov
xchg
cltd
mov
mov
jmp
pop
jnp
jmp
lock
push
repz
pop
out
push
jmp
leave
xchg
fisttpll
cmpsb
mov
cmp
push
pop
or
out
enter
lods
jle
mov
cmp
and
lods
addr16
dec
fidivrs
cmp
mov
insb
pusha
xchg
mov
or
jmp
pop
cmp
std
ss
mov
repnz
imul
ficompl
ja
test
repz
loop
negl
je
sbbb
mull
inc
sbb
and
aas
xchg
insl
push
lods
rcrl
rol
mov
sarb
add
add
add
sbb
sub
dec
push
add
add
add
push
inc
imull
adc
pop
out
rcr
insb
adc
aam
jno
pop
mov
jnp
sbb
mov
jo
cmp
mov
mov
dec
test
pop
imull
icebp
lcall
mov
jnp
int
xor
shll
popf
xchg
and
dec
pop
jne
or
fdiv
xchg
mov
in
jmp
pop
jae
sub
fadds
ja
pop
dec
loop
mov
jnp
stc
sbb
mov
xchg
lds
movsb
sbb
aad
and
pop
sub
jle
sub
mov
imul
pop
int
test
jecxz
xchg
push
or
aas
popa
push
jo
jae
xchg
mov
mov
adc
cmp
icebp
enter
mov
mov
dec
ret
cmp
popa
dec
dec
lcall
push
incb
add
add
ds
jae
inc
mov
add
add
mov
adc
or
ret
mov
mov
nop
fiadds
subl
fildl
stc
add
add
clc
pop
lret
adc
ss
push
sub
out
xor
insl
mov
jb,pt
js
fsubrp
lock
push
call
lcall
in
and
jmp
push
sti
dec
out
ds
pop
xchg
out
mov
jne
rorb
mov
sub
inc
ss
jno
mov
dec
stos
cmp
aad
shl
add
mov
pop
insl
sub
insl
pop
and
sbb
mov
mov
cmc
pop
iret
hlt
out
frstor
pop
push
inc
test
or
push
pop
fs
aas
ss
sub
pop
enter
jo
cld
jae
in
lock
fbstp
data16
in
ficoms
sbb
push
cld
cmc
xchg
pop
ja
fcoml
shrl
dec
loope
orl
cmp
xchg
and
idiv
lahf
insl
mov
lods
iret
add
add
add
movsl
data16
or
scas
xorb
repz
push
jae
call
clc
push
inc
sbb
dec
lods
rcr
scas
push
stc
inc
fildll
sub
pop
push
jecxz
shrb
mov
sbb
loopne
pop
gs
add
fildl
hlt
adc
jmp
jge
jle
aad
cmpsb
dec
jle
inc
sub
andb
or
sarl
fistps
aaa
cltd
in
pop
mov
cmpsl
insb
repnz
not
push
imul
mov
xlat
mov
xchg
popf
cmpsb
dec
loope
lret
popf
pop
lods
xlat
inc
je
dec
jge
int3
sbb
ret
adc
mov
data16
dec
pusha
pushf
adc
sbb
loopne
pop
and
js
dec
out
into
xchg
inc
pop
addr16
mov
sbb
adc
inc
in
or
leave
lock
in
or
rorb
add
add
xchg
ja
push
jg
leave
or
rcr
mov
add
add
out
mov
mov
sbb
popa
jns
and
xchg
lea
pop
and
pushf
mov
fstpl
loopne
or
std
test
faddp
fs
mov
out
mov
add
mov
test
add
shl
loopne
jne
adc
sarb
cmp
push
push
test
movsl
mov
mov
mov
mov
data16
adc
cmp
push
xorb
mov
jno
cld
cmpsb
mov
imul
or
lds
testl
sub
add
and
lods
and
inc
add
add
icebp
into
xor
push
pop
ja
fcomi
aas
cmpsl
mov
aaa
test
lcall
jb
or
add
and
add
dec
stc
sub
inc
mov
lods
call
fists
shll
push
fisttpll
sbb
out
pusha
fcmovu
icebp
rol
push
out
add
add
int
out
out
imul
nop
xchg
movsb
or
dec
sbb
xlat
add
add
add
and
enter
push
pop
cmp
fsubrs
jae
cltd
lods
hlt
mov
adc
jns
xor
mov
mov
clc
andl
adc
mov
pop
xchg
and
stc
sti
aam
out
push
cmpsb
mov
rep
out
les
test
add
or
pushf
repnz
fs
leave
add
sbb
nop
icebp
lods
lock
jno
ret
adc
inc
lods
xor
sbb
loopne
xor
dec
mov
dec
and
push
pop
inc
mov
mov
jb
cmpsb
test
addr16
out
ffreep
cmp
mov
jbe
push
fdivl
fsubrs
adc
pcmpgtd
test
xchg
xor
mov
cmpsl
hlt
jne
ss
pusha
xchg
add
cmc
lea
xor
mov
mov
jae
adc
int
add
dec
cmpsb
inc
repz
out
fldcw
push
in
sub
and
fadds
add
add
popf
bound
ret
ret
jmp
lods
or
aaa
popf
or
cld
out
cmpb
shrb
scas
stos
into
push
sub
loopne
ljmp
ss
inc
and
and
hlt
pop
pop
sahf
popa
movsl
and
out
or
push
xchg
push
push
add
scas
sti
add
and
cmp
adc
fldcw
dec
popf
xor
stos
pop
mov
rolb
dec
popf
dec
pop
scas
adc
lret
xchg
imul
mov
ds
ss
cli
out
xchg
data16
xor
das
mov
imul
lret
xor
rolb
jecxz
mov
mov
xchg
lret
push
stc
fisubrl
clc
hlt
xor
jne
mov
xor
fnstsw
adc
out
out
hlt
jp
dec
sbb
sub
lcall
mov
push
cs
or
pop
mov
pusha
sub
sub
dec
into
hlt
xchg
incl
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
repz
in
flds
add
add
arpl
push
inc
inc
mov
xor
lea
movsl
jmp
insb
dec
inc
dec
sarl
sbb
mov
adc
les
xchg
clc
inc
decb
cmpsb
mov
xor
shrb
fs
sub
mov
into
mov
jle
pop
sarb
push
mov
and
out
cs
ds
incl
test
xchg
repnz
into
mov
cmc
xchg
into
fwait
pop
add
filds
leave
cld
add
cmp
or
jle
cmp
gs
gs
sahf
jo
test
pop
cwtl
out
aam
dec
mov
fisubrl
or
jnp
push
mov
negb
add
in
sub
jge
and
movsb
in
sub
loope
cmp
fnstcw
scas
fwait
popf
cmp
adc
xor
dec
push
cmp
sbb
ret
add
pop
dec
jle
jg
std
fstpt
xchg
sahf
mov
fiaddl
add
add
adc
stc
mov
cmp
sbbb
xchg
push
jmp
adc
cmp
jmp
jge
lock
cmp
cmc
sub
jge
or
adc
repnz
clc
lret
pop
idivl
add
inc
pushf
out
aad
fistpl
lods
ret
arpl
xor
sbb
mov
movl
int
and
cmp
divl
cld
je
into
dec
fdivrs
mov
addl
pop
mov
in
mov
popf
adc
and
bound
stc
call
xor
xchg
mov
loop
cmp
mov
cs
xchg
mov
cmpsl
jb
inc
sub
xor
arpl
mov
insl
not
iret
and
push
call
and
xchg
setns
add
push
push
push
popf
test
adcb
icebp
in
jl
scas
xor
popf
popa
xchg
and
decl
push
and
pop
dec
fcoms
cmpsb
lret
je
push
cmp
ljmp
das
xor
add
add
iret
mov
cmp
mov
ljmp
cmp
pop
dec
mov
pop
sbb
mov
push
jmp
out
jae
data16
lds
inc
dec
inc
cmpsb
pop
mov
cwtl
mov
pop
jg
push
out
in
jb
mov
mov
dec
test
jne
sub
es
scas
cmpsb
sti
lods
pop
mov
leave
push
cli
mov
jbe
daa
xchg
push
or
dec
xchg
fmuls
jg
lret
int
loopne
push
dec
xchg
lods
repnz
arpl
cmp
mov
mov
hlt
loopne
xchg
cwtl
fadds
sub
cmc
pop
xchg
mov
test
xor
mov
cwtl
hlt
popa
das
cmp
out
daa
xchg
insb
sbb
xorb
fdivl
je
sub
insb
sub
repnz
cmp
sub
jge
mov
xchg
fs
xchg
pop
loop
and
addr16
sbb
filds
mov
imull
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
outsl
mov
xchg
std
je
mov
and
pop
fucomp
mov
xchg
lcall
and
outsl
or
jo
ss
sbb
movsl
cltd
cmpb
xchg
xchg
out
popf
xchg
cmp
jecxz
cs
aaa
daa
fcoml
lret
pop
xor
dec
add
in
and
xchg
stos
jno
iret
cmp
int
mov
or
inc
xlat
lahf
sub
in
push
testl
pop
outsl
push
sub
cltd
push
push
adc
in
cmp
mov
mov
and
xchg
out
jne
xchg
std
inc
push
inc
xlat
mov
mov
push
out
test
stc
sub
jecxz
test
inc
dec
sub
sbb
xor
insl
testb
or
cmp
iret
and
mov
pushf
push
ds
fs
clc
pop
rcrb
cmp
mov
in
hlt
lds
xlat
iret
inc
das
inc
paddw
and
add
cmpsl
fimull
faddl
icebp
sar
add
add
add
adc
mov
or
es
push
xor
test
and
fnstenv
rorb
xchg
xchg
push
mov
mov
test
cmpb
or
ljmp
mov
or
fdivrp
mov
cli
sahf
sbbl
add
and
or
or
push
xor
pop
cmpsb
and
push
ds
scas
imul
bound
imul
pcmpgtw
fistl
push
add
ret
pushf
ficoms
xchg
add
ja
sbb
scas
or
cmpsb
popa
lcall
cmp
mov
fxch
or
into
lret
sbbl
adc
and
cmp
repz
mov
ljmp
xor
jl
and
sbb
inc
pop
aaa
push
jl
adc
pop
js
mov
imul
and
and
loopne
scas
in
inc
popl
add
add
mov
lcall
fisttps
or
add
add
add
add
sbbl
stos
xchg
adc
dec
add
lods
pop
sub
cld
leave
add
push
dec
mov
nop
and
jecxz
ds
mov
lea
call
jp
fcmovu
stos
adc
and
dec
sbb
jne
ja
addr16
ds
and
lock
mov
xchg
sti
cli
roll
pushf
sub
xchg
dec
call
mov
mov
out
nop
push
dec
leave
cs
sbb
jnp
and
lret
inc
std
sub
int3
in
scas
adc
das
ss
mov
ljmp
icebp
xor
mov
mov
daa
jno
xchg
push
add
aas
pop
dec
cmpsb
jmp
xor
sbb
int
ret
int3
ret
ret
inc
push
ss
int3
mov
cmp
cmpsb
scas
ljmp
clc
mov
dec
and
out
push
mov
sbb
jns
xchg
xchg
mov
and
add
add
add
add
ljmp
pop
ja
arpl
subb
fidivrl
movsl
pop
mov
push
jecxz
add
jb
jmp
and
test
xchg
ja
nop
mov
insb
imul
inc
sbb
into
addr16
mov
jmp
lcall
add
mov
lcall
cwtl
insb
mov
jl
mov
std
pop
test
lea
adc
sub
std
push
repz
mov
pop
mov
out
out
add
js
push
lea
scas
leave
xchg
test
sbb
mov
push
scas
ret
aaa
lock
push
popf
and
jae
xchg
fs
fidivrs
add
pop
dec
adc
call
test
pop
xchg
cmp
addr16
das
sub
stos
sbb
ret
pop
addl
out
xchg
push
jae
fadd
fsubp
jnp
or
cld
std
add
movsb
or
add
add
add
mov
cld
xchg
jmp
movsl
or
mov
ja
mov
jmp
sub
xor
or
loop
jge
inc
adc
icebp
cmp
mov
andb
pop
fbstp
xor
mov
inc
add
add
hlt
inc
ja
lahf
pop
push
icebp
mov
cmp
das
dec
pop
pusha
inc
stos
inc
lock
aam
lds
stos
insl
lret
inc
add
rcrl
push
pop
jbe
imul
sub
lcall
mov
xchg
mov
test
mov
pop
loope
mov
mov
nop
dec
int3
fdivrp
dec
mov
std
add
imul
lds
sub
inc
stos
into
push
imul
xchg
fs
ss
dec
mov
pop
rolb
fbld
dec
xor
inc
mov
mov
into
inc
pop
xlat
iret
fsts
xor
fldcw
mov
jg
sub
repz
push
cmp
sub
cld
cli
jle
dec
nop
xor
hlt
or
add
add
add
mov
push
fldt
popf
adc
add
push
xor
add
adc
xchg
adc
les
out
xchg
dec
add
mov
data16
xchg
fsubr
ljmp
in
loopne
xor
bound
and
sbb
fsubr
leave
push
push
mov
int
mov
fwait
call
mov
mov
mov
and
sbb
pop
sub
jno
pmulhw
ret
std
fldenv
or
sbb
mov
in
xchg
inc
xchg
jb
mov
mov
mov
test
test
inc
mov
arpl
xchg
in
push
fsubr
lods
push
jns
icebp
repnz
mov
push
into
sub
push
xchg
lods
je
and
cmpsl
and
and
mov
jmp
jle
dec
or
dec
movsb
fldenv
add
lea
pop
jbe
ja
sti
aaa
out
ja
jle
xchg
adc
add
add
add
in
mov
add
jg
mov
push
mov
inc
dec
jbe
jg
cltd
out
je
popa
aad
std
mov
mov
cli
lods
movsb
pop
add
fdivp
fdivrl
and
xor
add
cmp
stos
jmp
mov
inc
sti
orl
cmpsl
or
aam
dec
sub
pop
or
aad
pop
aad
shrl
add
adc
stc
lods
stos
fwait
mov
rcrb
icebp
and
jb
inc
mov
shll
xor
ss
ret
inc
mov
cmp
jne
adc
subb
daa
xorb
hlt
xchg
add
stos
dec
mov
xchg
xchg
jle
aam
or
pop
lcall
push
in
pop
out
pop
sub
test
rclb
pop
xchg
not
in
sub
dec
adc
cmp
insb
into
lds
movsb
data16
adc
subl
lret
inc
push
test
ror
cltd
outsl
mov
aaa
pushf
lds
pop
adc
add
add
add
pop
mov
pop
and
pushf
push
pop
loope
in
jg
mov
fucom
fdivrp
std
and
jp
xor
cs
movsb
in
and
imul
or
std
lods
sub
push
jg
in
lods
scas
sarb
sub
add
lret
fisubl
mov
xor
jge
cs
out
and
int3
cmp
rcll
sarb
and
pop
lods
stc
jg
or
leave
mov
stos
enter
repnz
sbb
mov
punpcklbw
test
cmp
sahf
xor
push
push
movb
das
imul
lret
fisttps
in
rclb
std
int3
roll
enter
aad
push
mov
xchg
and
repnz
sbb
xchg
loopne
cmc
mov
mov
sbb
or
mov
cmp
jno
pushf
dec
nop
push
sub
cmp
mov
push
stos
stos
repnz
add
cltd
cmc
adcb
fcos
pop
mov
fcompl
in
add
add
pop
es
popa
imul
jmp
xchg
ficoms
mov
enter
push
inc
aam
aas
jo
into
dec
outsl
xchg
leave
jp
sbb
mov
jno
repnz
aad
mov
dec
stos
xchg
icebp
sub
cwtl
inc
pop
pop
pop
adc
or
rsm
lods
jmp
mov
repz
rcll
xchg
repz
push
leave
adc
adc
lahf
cmp
xchg
sarb
lock
inc
sub
fcompl
mov
mov
int3
pop
aam
nop
xchg
jb
mov
mov
cmp
rorl
cwtl
dec
cmp
dec
stos
sub
cwtl
pop
mov
mov
cmp
push
or
and
xchg
scas
inc
mov
in
add
or
out
push
pop
or
xchg
xchg
add
and
movb
out
inc
call
movsb
movsb
repz
lock
jg
in
and
aad
pop
sbb
add
add
add
jb
fwait
mov
out
shrb
data16
loopne
pop
inc
shll
in
mov
sbb
cs
daa
cmp
cmc
jmp
dec
xchg
jmp
add
add
idivl
xchg
or
nop
dec
inc
push
mov
mov
lret
dec
mov
or
cmpsl
faddl
test
nop
lret
stc
ficoms
pop
and
dec
stc
mov
lods
notl
dec
push
into
xchg
aam
pop
push
pop
aas
mov
add
inc
shll
jecxz
xchg
adcb
sub
pop
mov
sub
shrl
mov
cwtl
add
adc
dec
jmp
mov
jb
jp
push
fdivs
imul
imull
pop
pop
adc
cmpsl
std
rol
lret
mov
xorb
mov
out
add
jecxz
arpl
unpckhps
icebp
pusha
push
divl
shrb
gs
hlt
lret
and
mov
outsl
mov
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
mov
add
add
add
cmp
jmp
mov
stos
xor
mov
jae
cmpsl
mov
out
scas
push
lea
aaa
mov
mov
adc
mov
aad
jp
fs
mov
mov
cmp
std
negl
mov
push
inc
or
sbb
xor
inc
add
pop
pop
pop
or
dec
mov
sub
lcall
jns
daa
lret
push
mov
loopne
lahf
inc
dec
call
lret
mov
jbe
mov
mov
jne
mov
pop
xor
push
enter
test
lcall
pusha
jp
loop
push
xchg
rorb
inc
adc
fnstcw
lock
test
rorb
popf
mov
stos
push
orl
sbb
test
repnz
xlat
xor
mov
and
xchg
mov
pop
es
mov
add
mov
dec
js
stc
mov
dec
int
sar
mov
and
add
add
add
shll
ljmp
sbb
std
mov
push
hlt
adc
lret
lds
test
inc
idivl
dec
jl
stos
mov
mov
or
arpl
pop
or
lahf
ljmp
icebp
pop
mov
push
scas
cltd
into
std
imul
adc
mov
push
insb
lcall
or
mov
jnp
xchg
cmp
mov
adc
xchg
xchg
out
out
sbb
and
cs
inc
call
pop
and
bound
inc
cmpl
pop
rcll
es
xor
lret
sub
xor
push
mov
das
xor
push
lds
pop
jnp
imul
sbb
fs
orb
hlt
inc
mov
add
sbb
aad
mov
fistpl
push
pop
cmpsl
leave
sub
add
add
insl
repz
fwait
jns
jns
or
add
add
jae
hlt
mov
fisubrs
xor
dec
push
mov
int3
ja
xor
jnp
xchg
add
mov
adc
inc
ljmp
fcompl
jbe
jmp
loope
pop
outsl
dec
xor
fwait
pop
mov
leave
sub
lret
push
mov
mov
mov
adc
jo
pop
mov
jge
outsb
pop
fisubrl
cli
push
xor
out
nop
add
mov
xlat
fwait
cmc
insb
jp
mov
popa
ja
cmpsb
pusha
stos
iret
sti
dec
or
pop
push
sub
dec
cmp
add
sti
int
aaa
movsl
or
cwtl
sub
orb
jg
xor
pop
cltd
add
negb
xchg
dec
pop
pop
push
aaa
cmpsl
cmp
sub
sarb
mov
sub
xchg
mov
inc
imull
fs
cmp
lret
pop
movsl
xor
add
add
mov
pxor
jnp
adc
jne
dec
mov
add
add
add
ja
gs
mov
sbb
jns
out
inc
insl
mov
int
in
cmp
dec
sbb
add
rcll
dec
jp
pop
dec
fistpl
sarl
ljmp
jmp
pushf
sub
clc
int
sub
pop
mov
mov
sbb
mov
adc
jo
fnstenv
and
jns
and
inc
dec
dec
fstpt
cmp
mov
aaa
pop
shrb
xchg
jo
cli
mov
push
fistpll
push
push
arpl
cmp
xor
cwtl
popa
iret
sbb
and
or
xchg
sti
mov
cmpb
pop
xchg
cmp
cs
int3
pop
dec
lcall
in
mov
mov
cmpsl
fnstsw
dec
movsl
test
push
or
jp
int3
aas
adc
imull
cmp
hlt
lds
inc
idivl
cmp
int3
add
mov
push
sbb
out
lods
xor
aas
xlat
fistl
das
rclb
add
add
adc
xchg
sbb
mov
mov
sub
mov
mov
enter
and
xchg
sub
sbb
push
push
jae
dec
test
into
sub
mov
loope
outsb
scas
dec
push
imul
ljmp
insl
lock
push
bsf
push
dec
xchg
dec
dec
adc
je
out
enter
rcr
and
shll
cmp
cmpsl
out
lea
dec
and
jle
inc
jecxz
arpl
sbb
cmp
and
insl
outsl
lahf
xchg
test
dec
imul
aaa
sbb
dec
out
outsb
mov
jge
mov
sbb
xchg
inc
push
loop
or
mov
push
xor
dec
mov
and
aam
into
aad
and
inc
pop
pop
aas
xlat
inc
cs
test
fistpll
jecxz
mov
fwait
ret
rclb
addb
adc
add
add
jb
scas
decb
fisttps
jbe
xorb
add
add
ss
int
and
dec
arpl
mov
lock
fcomps
mov
inc
aas
insl
mov
dec
sub
pop
movsb
cmpsb
rcl
repz
lds
add
test
jns
xchg
into
xchg
sahf
mov
push
jae
cmp
fcom
bound
mov
mov
inc
jns
pushf
mov
dec
stos
jp
loopne
test
rolb
movl
pop
jg
insl
es
or
mov
es
push
push
imul
jb
add
ds
cmpsb
sahf
cmpsl
or
and
ss
push
push
push
push
push
popf
cmpl
bound
je
jae
sbb
and
dec
sbb
daa
mov
sbb
in
rcl
mov
out
insl
shrl
adc
sbb
adc
repnz
pop
pop
push
fldcw
xchg
lods
pop
xor
xor
xchg
movsb
add
add
mov
xlat
mov
xchg
aaa
dec
xchg
pop
cmp
add
add
add
in
nop
mov
mov
cmp
jle
frstor
popa
enter
das
or
ds
sbb
test
pop
inc
and
adc
push
mov
movsl
icebp
ja
or
jl
dec
mov
pusha
adc
dec
dec
dec
negb
loope
add
ret
or
insl
jle
inc
ja
cltd
or
adc
cmp
int
shll
hlt
push
dec
adc
dec
push
mov
push
fwait
call
mov
imul
fdivr
dec
or
cmp
xchg
lahf
push
xor
and
ret
movsl
add
mov
hlt
dec
mov
xor
mov
push
mov
inc
jmp
leave
xchg
xor
sub
push
push
mov
rcrb
sbb
or
jbe
dec
out
mov
pop
push
and
xchg
push
or
pop
cmp
outsl
js
sbb
popa
mov
lods
cmp
lods
aas
mov
ror
cmp
add
add
add
pop
pusha
or
push
data16
adc
jp
or
jb,pt
jl
lods
cmp
insl
popa
shrl
mov
adc
xchg
push
pop
pop
arpl
hlt
cwtl
dec
add
ret
cmpsl
add
adc
stos
xor
das
subw
arpl
cmc
idivb
cmpsb
stos
dec
fisubrs
ja
pop
mov
mov
out
stos
xor
push
adc
daa
ljmp
cmp
jae
in
paddq
pop
leave
imul
and
mov
dec
jnp
mov
dec
mov
lcall
inc
push
sub
ret
or
adc
add
xchg
push
orb
adcl
cmc
ja
sbb
pop
outsb
lods
ficoml
lea
divb
outsb
fnstcw
movsb
inc
mov
adc
notb
and
sub
mov
rol
pop
or
and
stos
mov
add
add
mov
sti
mov
dec
jnp
pop
inc
out
add
add
add
or
stos
cmp
and
pop
sub
jno
fbstp
or
inc
jno
push
pop
stos
arpl
enter
push
ret
arpl
adc
jl
or
dec
addl
adc
or
mov
mov
xchg
ret
jbe
mov
imul
scas
repnz
mov
or
out
ja
mov
pop
test
enter
mov
in
test
imul
pushf
das
lret
gs
mov
ss
push
dec
xchg
adc
inc
loope
adc
lods
movsl
xchg
lret
xchg
rcr
push
sub
xchg
cmp
cmp
ljmp
inc
lock
jge
leave
mov
in
fsubrl
aam
repz
fidivs
movsl
and
add
in
mov
fsubr
jo
dec
adc
mov
add
add
into
adc
neg
jge
xchg
jns
cmpsb
jp
addb
add
add
lods
movsl
insl
movsl
xor
inc
adc
xor
movsb
fwait
pop
jne
jne
jb
xor
and
jne
shll
xchg
shrl
hlt
mov
dec
mov
jmp
adc
cmp
or
jg
mov
mov
rcr
cmp
sub
iret
sbb
into
aad
add
nop
movsl
jl
in
hlt
sbb
xor
and
loope
or
repnz
jnp
adc
aas
fdivr
jne
inc
pop
lds
xor
icebp
jae
leave
mov
rolb
add
mov
loope
inc
mov
insl
add
cwtl
push
je
jb
xchg
sbb
lret
cltd
pop
rcrb
pop
jb
out
adc
lahf
mov
push
out
push
gs
add
loopne
dec
lea
inc
js
ds
mov
adc
cmp
pop
mov
jo
push
push
int
stc
in
adcl
pop
cmp
outsl
jg
jg
sub
fidivrl
bound
dec
icebp
add
add
add
add
stos
xchg
and
pop
les
mov
pop
adc
cli
push
xchg
dec
mov
pop
sbb
sub
fbld
pop
adc
andb
addb
daa
and
mov
movsl
dec
sub
dec
pop
mov
mov
sbb
imul
xchg
dec
lock
sub
and
popa
mov
pop
imul
dec
or
ficompl
or
cmovo
xor
cmpsb
lock
adc
std
test
popa
xchg
shll
xchg
xor
out
decl
inc
push
test
sbb
fstpl
mov
inc
sub
out
fidivrl
addr16
mov
shlb
js
aad
js
hlt
add
sbb
xchg
sbb
push
jb
push
les
mov
std
imul
es
push
jecxz
aam
pop
sub
xchg
aad
js
es
insl
pop
cld
mov
add
ret
ja
and
aaa
divl
mov
and
add
add
mov
cmp
xor
stos
clc
ret
arpl
xor
scas
repnz
cmc
xchg
insl
jecxz
mov
inc
stos
addr16
lret
js
nop
fstl
push
addb
loopne
xor
std
mov
mov
xchg
xchg
ds
pop
ds
pop
cwtl
jmp
dec
addr16
mov
movsb
mov
push
sub
addb
cmpsl
outsl
cltd
or
and
mov
cltd
and
xchg
movsl
adcl
stos
enter
mov
clc
pop
rorb
mov
in
xchg
mov
xchg
or
rolb
das
xchg
mov
pop
mov
sub
je
mov
js
call
pusha
aaa
insb
mov
aaa
rcll
int3
nop
jno
xchg
arpl
or
jno
inc
movb
push
mov
ss
dec
cmpsb
jmp
test
cs
repz
inc
mov
in
xchg
jecxz
jmp
mov
repz
add
add
add
js
inc
jmp
add
pop
cmp
adc
push
mov
outsb
xor
sbb
mov
shll
unpcklps
lret
or
insl
bound
out
in
pop
add
inc
xchg
xchg
cmp
or
dec
sbb
lret
pop
mov
mov
mov
pop
fs
clc
jl
inc
mov
enter
sub
jno
call
add
jo
pop
mov
insb
adc
pop
movsb
xchg
or
out
inc
ljmp
dec
cmp
insb
in
sub
push
ss
in
mov
cmp
int3
out
test
jl
es
sub
arpl
jge
sub
lea
sbb
icebp
shll
mov
pop
jmp
lahf
push
fists
test
pop
das
push
in
jb
jae
loop
jmp
in
lds
fwait
outsb
dec
jle
jne
pusha
popf
pop
sbbl
hlt
add
add
add
stc
mov
cwtl
jmp
mov
push
cmc
lret
mov
fcmovnbe
mov
cmp
jecxz
out
out
fnstenv
sbb
or
cmc
cli
sahf
test
inc
cmp
xor
push
mov
xor
cmpsl
leave
fstl
xchg
stos
mov
addr16
in
mov
cmp
ds
clc
xchg
pop
pop
or
cmpsb
or
sub
jecxz
das
or
xor
gs
jo
xor
ljmp
movsl
repnz
popf
or
test
jno
aaa
lods
mov
push
inc
dec
jecxz
sar
test
mov
out
repnz
test
push
and
mov
in
inc
or
xchg
xor
dec
ja
lcall
pop
cmp
call
jecxz
jns
add
adc
mov
sbbb
or
inc
test
roll
add
sub
scas
fdivr
fnstcw
jecxz
test
pop
cmc
add
add
add
pop
jmp
rol
inc
test
xor
loopne
push
push
dec
out
xor
int
lret
push
xor
sti
stos
dec
mov
dec
push
push
mov
jae
sub
mov
mov
or
or
xchg
lret
jns
push
pushf
imul
in
push
dec
add
xor
or
and
jmp
je
and
mov
mov
movsl
pushf
cwtl
shrb
dec
lea
out
andb
jae
inc
int3
push
mov
data16
add
clc
jmp
cwtl
pop
rol
inc
fistpll
cmpsl
test
adc
sbb
inc
bound
mov
mov
imul
cld
sub
xor
cli
test
add
cmp
inc
mov
sbb
aas
int3
fwait
jno
mov
gs
mov
pop
jmp
or
addps
je
inc
out
or
out
xchg
addb
mov
add
add
add
xor
jb
jae
sub
testb
add
add
call
fs
inc
insb
rcr
pusha
stos
hlt
dec
push
ss
xchg
xchg
shll
mov
jge
enter
divl
jnp
aaa
pusha
jnp
stos
cmp
mov
and
mov
dec
mov
pop
lock
lcall
call
xchg
scas
and
xchg
xor
sub
or
mov
scas
dec
jns
leave
pop
sbb
mov
push
lea
pop
dec
cmpsl
mov
or
pop
in
hlt
lock
lods
pushf
js
outsb
mov
clc
outsl
aam
inc
add
dec
addr16
in
push
mov
dec
and
lahf
std
xchg
sbb
pop
fbstp
shll
adc
bound
lret
jnp
and
movsb
or
pushf
es
adc
test
pop
inc
xor
jecxz
ret
push
sbb
cwtl
sub
and
cwtl
mov
pop
push
rcl
pop
add
mov
fisubrs
mov
add
adc
int
in
idivl
js
mov
repnz
imul
testl
add
scas
jae
and
rcrb
rorb
push
loop
or
lret
mov
lds
adc
push
jmp
adc
lcall
in
mov
shl
test
pop
pop
xor
dec
addr16
or
mov
sbb
jo
mov
ficompl
dec
lahf
fisttpll
mov
push
pop
push
imul
mov
jnp
inc
fisttpl
xor
xchg
lods
push
fwait
sbbl
xchg
seta
ja
cmpsb
add
add
inc
arpl
and
add
mov
sub
int
pushf
lods
orl
ds
cltd
push
jno
test
adcb
xor
cli
aas
push
cmp
pop
dec
mov
cs
and
jno
dec
push
sub
mov
fnstcw
pop
add
xchg
fbld
mov
add
add
jecxz
inc
cli
aas
into
lret
xchg
shll
fs
add
add
add
ret
fdivp
leave
cmp
cmp
test
or
inc
inc
test
push
ret
loope
fs
movsb
sub
fdivrp
add
push
sahf
gs
mov
adc
repnz
jg
mov
sti
ss
push
outsb
inc
xchg
and
inc
dec
push
push
xor
cli
sbb
mov
xor
xor
insb
sbb
or
xchg
push
or
and
mov
lods
mov
mov
push
sbbl
mov
jmp
lea
aas
leave
fistps
inc
scas
iret
xchg
cmp
jge
mov
pop
jmp
sub
test
jbe
lret
outsb
mov
xor
outsb
scas
fprem1
jg
scas
mov
or
les
in
mov
insl
mov
lds
jge
js
or
out
jge
ss
inc
jns
outsl
clc
xchg
pop
add
cmp
loopne
scas
push
adc
mov
lcall
xor
movsl
inc
push
add
add
int3
cmp
mov
push
insl
daa
into
sbb
ljmp
mov
out
pop
jno
int3
push
jbe
lock
mov
jbe
xchg
add
sub
shr
in
les
push
pushf
std
xor
mov
ret
data16
out
jb
aam
ret
xchg
adc
fisttpll
bound
xor
and
push
mov
or
xlat
jg
adc
rorb
out
outsl
fbstp
fneni(8087
jle
or
mov
jl
adc
bound
adc
movsl
lods
mov
mov
insl
dec
xor
sbb
daa
pop
scas
lock
fidivs
cmp
pushl
mov
test
shr
lcall
cld
adc
jp
mov
mov
das
xor
push
cmc
cmpsb
shrb
sub
movsl
lcall
leave
lcall
push
fisubrl
js
aaa
jae
cltd
dec
mov
jno
and
add
add
add
xor
iret
gs
cmpsl
orl
ljmp
push
in
adcb
and
ret
jns
sbb
aas
addb
push
rcr
mov
sar
test
dec
aam
das
inc
sbb
adc
jae
xchg
jp
mov
fbld
loop
xor
inc
cli
xor
out
cmp
xchg
daa
push
ret
sqrtps
add
jmp
sub
ljmp
mov
mov
mov
arpl
xor
mov
sub
scas
fsubrl
add
test
jmp
or
sbb
push
daa
add
push
inc
xor
fs
outsl
dec
ds
jmp
mov
je
lret
xor
push
shll
cmp
pop
icebp
mov
mov
xlat
push
xor
push
xchg
push
int3
add
pop
enter
ds
into
nop
out
cwtl
jle
push
sub
dec
push
xor
jo
add
add
add
pop
or
push
shrb
fmuls
jo
add
push
shrl
jmp
loope
lea
mov
popa
adc
mov
mov
arpl
mov
cmpsb
jecxz
xor
sub
xor
inc
mov
mov
xor
ficoml
sbb
stos
sbb
rorl
jno
fdiv
mov
add
dec
andb
outsl
icebp
pop
cmpsb
mov
pusha
dec
adc
sub
mov
fwait
test
std
jno
sub
mov
ror
int3
ljmp
mov
repz
js
dec
in
inc
sbb
sbb
std
test
nop
stos
fbstp
gs
pop
enter
pop
lods
aas
fcoms
shlb
fstl
sarl
xor
inc
sub
cmc
or
ret
stos
push
lret
daa
mov
adc
subl
aad
sbb
dec
xlat
dec
cmc
sbb
mov
add
add
test
jg
push
pop
push
mov
je
add
add
add
je
push
fdivs
daa
mov
xchg
adc
sub
add
movsb
adc
js
cmpsb
les
mov
pushf
and
jae
xchg
cmp
mov
mov
mov
dec
and
inc
loopne
lock
lea
imul
imul
cli
lcall
add
dec
aas
rcll
or
xor
movsb
or
andl
loop
push
cwtl
push
cwtl
jle
and
cmp
iret
mov
sbb
xchg
xor
imul
pop
dec
arpl
sub
call
add
mov
jmp
adc
iret
fdivl
cwtl
outsb
cwtl
insl
mov
orl
dec
adc
das
mov
mov
xor
ret
scas
push
pop
jbe
das
or
fcmovnbe
icebp
fucom
push
inc
int3
or
loopne
sub
or
andb
adc
movsb
push
in
cmc
jne
sbb
js
sbb
js
add
add
add
mov
sbb
movsb
bound
adc
aaa
mov
sub
mov
es
sub
negl
cmp
in
insl
dec
add
mov
aam
mov
dec
ret
mov
in
push
xchg
jp
scas
push
push
and
push
inc
in
shll
shll
fnsave
shr
mov
stc
push
sub
pop
push
sub
cmp
das
sbbl
loope
push
push
pop
inc
movsb
xor
push
sbb
pop
sub
ds
mov
cwtl
out
inc
push
mov
arpl
fiaddl
mov
mov
pop
rorl
addl
lcall
mov
shll
pop
inc
test
lret
xor
pop
rorl
in
ss
pushf
icebp
pop
repz
cmp
push
ret
push
repz
not
mov
loopne
faddl
jae
sbb
shlb
aas
out
int3
mov
adc
add
add
add
pop
sbb
dec
mov
inc
aam
pushf
pop
dec
bound
pop
dec
add
movsl
mov
lock
xor
testl
dec
sbb
test
and
inc
cmpsb
lret
nop
sbb
dec
ss
inc
push
sub
or
das
cmpsl
xchg
lock
or
out
test
mov
xchg
or
andb
xchg
push
inc
jl
add
dec
out
xchg
mov
inc
addr16
pop
into
xchg
cwtl
pusha
xchg
add
adc
push
jnp
mov
iret
and
stos
out
pop
pop
adc
xchg
imul
icebp
push
cmc
jmp
mov
stc
test
and
adc
push
mov
mov
and
fld
sahf
xor
bnd
ret
xor
test
cmc
iret
cltd
in
jno
aas
lret
or
xchg
jge
mov
movsl
aas
pop
stos
xlat
xor
jb
sbb
test
add
mov
lcall
pusha
testb
add
lret
push
push
nop
das
adc
push
pushf
sbb
xor
sbb
and
lds
sahf
push
inc
pop
lcall
xchg
sti
mov
cs
ret
mov
or
cmpsb
cmc
gs
aam
scas
fisubrl
xor
or
hlt
or
sbb
pop
pushf
push
jno
adcb
and
in
ret
loopne
and
iret
bound
mov
scas
arpl
test
xchg
inc
and
pop
xchg
lret
inc
inc
xchg
out
test
aad
sub
push
mov
ret
jb
test
mov
subl
and
push
jae
daa
xor
loopne
out
int3
pop
jb
popf
sub
or
adc
loopne
clc
stos
mov
clc
xchg
mov
mov
mov
lods
push
push
jo
movsl
dec
rol
lret
clc
cmc
inc
stos
repz
pop
cmpsb
and
add
add
add
jno
lds
or
cwtl
jb
cltd
xor
adc
inc
add
mov
addl
fimuls
mov
es
shll
adc
and
pop
daa
lock
dec
bound
pop
stos
cmc
cli
xor
cmc
in
xchg
jmp
push
leave
or
and
cld
xchg
dec
adc
sub
cmc
push
adc
xchg
lods
push
repz
sbb
jle
inc
xchg
rcrl
roll
push
mov
shrl
into
mov
push
pushf
loopne
cmp
jns
jnp
pop
pop
xchg
mov
jl
test
or
insb
rolb
mov
adc
xchg
idivb
fnstenv
push
and
add
mov
sub
scas
cmp
jbe
jle
aas
enter
outsl
cmp
fwait
popa
or
jmp
stos
addr16
cmpsb
cmp
xor
lea
lcall
push
fdivrs
add
add
std
aaa
mov
shll
jo
add
add
add
add
rorb
ljmp
adc
cmpsb
in
push
scas
daa
cmpsb
cmpsb
sbb
and
adc
mov
xorb
int3
cwtl
in
fs
mov
xor
mov
fmul
lea
dec
adc
inc
fchs
add
or
jl
pop
and
jge
repnz
or
cmpl
fisubs
mov
mov
adcb
in
out
scas
je
push
inc
inc
xchg
adc
push
xchg
shr
ljmp
xchg
pop
add
repz
lock
fwait
mov
jge
xchg
fcmovnu
cmp
jb
aaa
aad
rol
xor
sarb
lods
push
test
cmp
insb
shrb
ret
push
movsl
push
rcrb
sub
aaa
sub
out
mov
inc
add
movsb
xchg
add
in
stc
movsb
icebp
dec
lods
push
add
lea
add
add
insl
aam
mov
scas
add
xchg
and
mov
add
jbe
add
mov
push
adc
add
loop
unpcklps
lods
push
insl
cmpsl
int3
je
mov
shlb
mov
arpl
cmp
or
movsl
cltd
imul
pop
repz
ljmp
in
js
jne
aam
jnp
jmp
leave
and
push
jmp
cmpl
nop
mov
mov
pop
inc
jno
scas
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
aaa
inc
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
cmp
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
xchg
cmp
fwait
cmp
lahf
cmp
mov
cmp
stos
cmp
scas
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
mov
in
pmuludq
idivl
js
add
add
jns
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
