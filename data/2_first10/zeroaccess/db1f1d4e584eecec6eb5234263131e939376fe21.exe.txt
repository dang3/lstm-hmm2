push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
jmp
adc
xor
test
jg
js
mov
jp
cld
pop
jp
and
daa
cmp
jno
jne
scas
jbe
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
and
fsts
jb
outsl
daa
push
xor
push
xchg
pushf
imull
and
lock
fistpl
adc
mov
fisttpll
pop
aaa
out
mull
idivl
adc
adc
scas
inc
sbb
gs
dec
out
cmpsl
fbld
mov
xor
jbe
int3
popf
jns
icebp
mov
cltd
outsb
xchg
mov
push
jl
mov
gs
mov
or
and
nop
lds
add
sbb
mov
lret
sub
fadds
sub
repnz
repz
das
cs
fdivrl
adc
adc
scas
xchg
cmpsb
inc
cwtl
sub
inc
mov
cld
push
sub
pop
cmc
out
add
mov
adc
jae
pop
sub
or
sbb
lret
inc
stos
outsb
mov
xchg
mov
dec
xlat
movsl
add
call
add
jns
mov
ret
lock
push
fimuls
xchg
pop
or
imul
cmc
sbb
cs
je
mov
subl
movsl
dec
xchg
push
repz
lahf
movsl
cmpsb
pushf
inc
fcompl
xchg
das
sbb
mov
xor
rcrl
jb
jb
mov
sbb
or
pop
push
outsl
repnz
or
outsl
add
sbb
adc
pop
mov
push
pop
lds
clc
xor
fsubrp
es
sahf
mov
stos
sbb
inc
sahf
fisttpl
mov
or
stc
xchg
sub
cmpsb
mov
xchg
xor
ljmp
cli
fnsave
out
shlb
and
push
dec
lds
scas
mov
pushf
je
cs
lods
push
outsb
cs
xor
popa
sub
adc
imul
fwait
jns
cld
push
and
sti
add
loope
pop
nop
out
xor
mov
dec
mov
sbb
jp
push
xchg
dec
loop
mov
cmp
test
scas
dec
cmp
push
fsubrl
test
add
pop
data16
imul
int3
inc
outsb
and
mov
bound
inc
pop
test
mov
cmc
das
aaa
mov
shl
loopne
push
scas
adc
xchg
push
enter
xlat
mov
xchg
cmp
push
push
lea
sbb
sub
xchg
mov
push
sbb
pop
das
lds
movsl
dec
fdivrs
loop
mov
call
in
addl
jp
jge
out
xchg
imul
mov
shll
addr16
add
fdivrl
adc
sahf
push
cmpsl
xor
movsl
adc
sbb
js
push
dec
aad
push
jne
pop
cli
cltd
outsb
loope
movsl
sub
or
push
mov
jecxz
imul
sbb
je
mov
lds
dec
push
xor
mov
js
loopne
dec
out
orl
xlat
fldt
inc
or
cmp
xchg
sub
dec
dec
dec
xchg
mov
ret
mov
xchg
sbb
cmc
daa
mov
xchg
adc
add
jnp
xor
xorl
lods
inc
nop
dec
in
gs
out
pop
xchg
push
insb
xchg
aam
add
pop
bnd
push
int
mov
dec
pushf
jnp
mov
adc
dec
mov
divb
aas
xor
arpl
out
cli
out
dec
negb
in
nop
sub
pop
cld
bound
int
pop
cli
xchg
out
ss
insl
out
sbb
push
fisubs
jp
addr16
rcll
loope
sub
imul
jnp
or
sbb
pop
aam
pop
mov
sub
scas
dec
inc
pop
leave
aad
lods
outsl
sbbl
std
addr16
xor
sbb
or
sub
pop
pop
push
pop
xor
push
cmpsb
add
dec
ja
test
mov
or
sbb
or
pop
xchg
aad
jne
fists
dec
pop
outsb
mov
mov
inc
mov
loopne
push
pop
in
dec
fcoms
sbb
jl
jl
andl
shr
push
jns
jns
aad
rolb
mull
dec
data16
mov
aad
mov
mov
mov
jbe
movsl
push
xor
adc
mov
aaa
adc
mov
out
adc
adc
mov
aaa
stos
mov
imul
sbb
bnd
and
imul
push
mov
scas
inc
inc
mov
cs
fdivl
jle
pop
xor
das
inc
mov
das
push
jge
enter
scas
sbb
adc
cs
pop
cwtl
jle
mov
xchg
orl
adc
inc
pop
ds
adc
aad
adc
clc
push
das
sti
ret
repz
cmpl
or
push
and
jbe
mov
sub
and
lret
mov
inc
sbb
in
sub
fdivs
mov
mov
cmp
int3
insl
dec
lret
and
pushf
xchg
cmp
cmp
and
lret
fs
sbb
out
jno
call
and
lock
sbb
add
outsl
mov
lret
add
mov
pop
and
xchg
les
hlt
ja
daa
out
into
mov
dec
mov
jmp
lds
xchg
jecxz
fwait
call
inc
fstpt
or
jl
je
aad
xor
pop
cmp
fwait
mov
jp
add
push
jno
aas
push
inc
bndldx
ror
pop
lahf
push
sub
pop
int
frstor
lcall
jae
subb
push
mov
push
xchg
insl
pop
inc
test
arpl
sahf
std
call
lods
lock
cs
sub
inc
sub
inc
int
xchg
loope
shrb
ljmp
std
rorb
jno
cmp
fldcw
add
test
imul
out
rclb
int3
mov
insb
sahf
jbe
cmc
icebp
icebp
dec
push
mov
repz
mov
inc
jp
xchg
inc
dec
jae
pop
jmp
nop
mov
jle
and
add
lock
jns
push
cmp
mov
rorl
pop
jno
lahf
xlat
pop
ljmp
xchg
adc
xchg
push
mov
fwait
out
inc
leave
add
lgs
movswl
jle
sub
pusha
je
movsb
hlt
mov
sub
xchg
lods
nop
int
mov
stos
lods
adc
jnp
movsl
or
das
mov
stos
shll
insb
outsl
faddp
mov
and
test
rcll
int
adc
es
lret
cs
mov
and
rcrl
jmp
insb
scas
cmp
mov
mov
jns
sub
rclb
shrb
xchg
and
or
push
xchg
in
dec
sbbl
xor
popa
das
pop
sub
repz
add
fsub
cmp
arpl
inc
sbb
jae
sbb
jb
fdivs
or
aas
xchg
pop
and
push
push
ds
aam
jo
or
push
pop
jno
inc
imul
cmp
out
mov
test
push
cmp
add
push
add
vmovss
pop
mov
add
pop
mov
adc
xchg
js
inc
cmp
and
scas
pop
sub
jmp
jae
mov
adc
cmp
cmp
pop
shr
lods
in
shrb
sub
xchg
out
and
mov
sub
sub
out
jae
push
clc
sub
ss
mov
add
and
mov
or
pusha
mov
jp
imul
inc
mov
out
mov
in
in
das
das
cld
cmp
cmp
sbb
insb
jae
adc
ds
pop
mov
xor
out
mov
mov
xchg
loopne
xor
aas
xorl
and
fldl
cli
add
jne
and
jge
and
imul
dec
add
insb
dec
mov
jg
out
add
pop
inc
das
popf
cmp
push
pusha
ret
xchg
xchg
repz
inc
cmpsb
add
add
jae
jmp
adc
shll
les
xor
push
mov
out
adc
pop
inc
in
cmp
iret
pop
lahf
xor
int
push
add
out
mov
jg
test
mov
adc
rcrl
in
stc
pop
pop
loopne
addr16
mov
scas
popa
xchg
adc
inc
cmpsl
mov
adc
rcrl
test
in
and
ja
ss
nop
dec
mov
xor
in
rcrb
insl
mov
shr
dec
iret
bound
negb
cmp
aad
pop
fwait
je
ljmp
xchg
and
dec
jge
sti
dec
sar
fwait
imul
mov
dec
jl
fwait
outsb
fwait
xchg
sbb
sub
lock
lret
imul
or
cmp
stc
or
ret
mov
push
scas
pop
ret
dec
dec
cmpl
je
lods
pop
mov
or
xor
jmp
inc
js
add
mov
jae
push
movsb
ret
stos
rorb
movsb
out
std
jo
jle
pusha
xor
inc
lret
lret
xchg
lock
insb
data16
push
ss
mull
mov
jb
ss
adc
leave
sub
mov
adc
in
cmpsb
inc
insb
mov
and
fisubrl
cmp
movl
and
mov
adc
rorl
add
loop
mov
popf
stc
cmp
cltd
ja
cltd
mov
dec
loop
mov
inc
xlat
push
mov
fs
ret
and
cmp
adc
sbb
stc
pop
push
jne
int3
fs
mov
push
hlt
outsb
sub
aas
dec
or
lods
inc
jl
divl
pop
loope
sbb
and
movsl
jbe
push
fmul
adc
push
aaa
loopne
push
xchg
jo
push
ret
cmpsb
jnp
das
call
movsl
push
nop
pop
test
stos
xor
fdivp
andl
fidivrs
addr16
jecxz
ja
in
dec
cli
mov
mov
add
pop
lret
js
dec
scas
sbb
mov
cmp
lods
lock
stc
arpl
sbb
mov
lahf
and
xchg
in
in
xchg
loop
inc
sub
inc
lret
aaa
xor
add
xchg
jecxz
xor
sbb
pusha
push
inc
in
call
jno
in
xchg
lods
cli
jns
fmul
xchg
pop
mov
gs
jg
sbb
std
xchg
ja
mov
stos
out
dec
dec
xchg
inc
loop
ljmp
int
shll
push
pop
mov
xchg
cmpsl
cmpl
lahf
xchg
fimuls
inc
and
or
pop
mov
dec
add
ret
mov
shlb
xor
jge
adcl
mov
lock
push
aam
pop
pushf
dec
out
cmp
push
je
push
adc
jae
xor
lods
and
mov
xor
inc
mov
bound
lods
fcmovu
je
fwait
add
or
jns
sbb
leave
inc
je
call
mov
xorb
xchg
roll
mov
pop
shrb
dec
pop
xor
pop
adc
or
or
arpl
sub
pop
pop
test
outsl
jne
daa
xchg
cmp
mov
mov
mov
sbb
pop
cmp
int3
iret
pop
subl
lahf
pop
sbb
mov
pop
loop
pop
outsl
cmp
test
addr16
dec
cmp
sbb
hlt
or
inc
icebp
mov
hlt
pushf
rclb
xor
push
xchg
mov
push
out
popa
cmp
sbb
aas
out
dec
movsl
addb
sub
xchg
jle
and
sti
inc
jl
lret
jp
fldt
stos
add
push
cld
inc
or
inc
adc
in
fadd
aaa
inc
pop
test
call
andb
xlat
rclb
sub
pop
xchg
mov
sub
mov
xor
add
sti
icebp
push
ljmp
cmp
push
scas
dec
test
push
adc
dec
xor
cmp
sub
inc
rorl
repnz
movsl
mov
sub
shll
or
mov
mov
cmp
xchg
ret
pop
dec
jle
fistpll
mov
hlt
sbb
repnz
movsb
and
je
inc
pop
dec
adc
pop
fildl
add
cmc
pop
cmovle
gs
push
popa
xor
add
cmp
call
sbb
call
dec
test
int
mov
sbb
loope
jl
rcll
lea
int
push
sub
popa
sahf
and
sbb
or
pop
jo
cmp
pcmpgtb
out
pop
out
mov
stos
fcompl
jae
nop
mov
loop
mov
cld
push
jbe
dec
xchg
ret
imul
lret
addr16
nop
arpl
pop
mov
cmp
dec
sub
daa
sub
prefetch
or
mov
in
mov
ja
int
gs
mov
adc
or
mov
daa
adc
clc
add
pop
push
out
mov
mov
sub
mov
adc
mov
shrl
or
stos
lcall
faddp
adc
push
jne
test
xchg
fnstenv
fs
imul
pop
dec
add
cmp
lcall
subl
imul
mov
dec
pop
gs
mov
adc
sub
inc
mov
or
mov
testb
jp
mov
push
stc
sub
cli
pop
xor
divl
sub
jp
leave
or
std
jno
cwtl
jns
fisttps
test
sbb
cmc
jno
fstpt
jl
cld
cmp
xor
iret
xchg
xchg
xchg
lods
cmp
gs
cmc
imul
sbb
in
and
xor
gs
mov
inc
jp
lods
sbb
or
jmp
frstor
pop
mov
jle
shl
lds
out
rorb
cwtl
or
sbb
or
add
dec
cmp
sbb
repz
fcom
mov
xchg
stos
lods
add
sub
cld
pop
add
push
cs
cmpsl
add
adc
dec
cmp
pop
cltd
jb
push
test
mov
pop
gs
addr16
out
out
lahf
xchg
sbbl
das
popl
push
push
pop
bnd
loop
sbb
movsl
imul
mov
add
test
adc
cmp
repnz
push
xor
sub
cli
sbb
pop
scas
lods
sub
lods
lret
jno
ja
pop
jle
sbb
sbb
insl
addr16
outsl
aaa
sub
popa
cmp
mov
cmp
inc
fs
jbe
or
ljmp
add
insb
jmp
movsb
and
mov
rclb
inc
mov
fs
cmp
addr16
xchg
iret
mov
sub
pop
xorl
push
or
sub
filds
mov
cmp
popf
pushf
cmpsl
repnz
and
sbb
sbb
cs
icebp
arpl
push
pushf
dec
loopne
dec
jl
cltd
cmp
je
mov
dec
movsl
xchg
cmpsb
imul
mov
mov
add
les
adc
add
adc
nop
pop
insl
mov
arpl
stos
loope
dec
ficoms
sarl
push
sub
push
cmp
cmc
push
push
scas
mov
insl
ja
mov
cmpsb
cmp
and
jg
ficompl
mov
xchg
call
jge
sti
push
add
ljmp
mov
ret
push
mov
dec
sub
push
aam
push
out
sarb
enter
aaa
xor
mov
push
mov
inc
pusha
push
rorl
mov
adc
sti
repz
loop
sbb
jbe
inc
mov
mov
stos
or
jnp
mov
jmp
sbb
sbb
jp
jp
icebp
jg
sub
mov
mov
lcall
ss
or
or
xchg
mov
jns
jle
sub
es
add
lods
pop
xchg
lods
scas
push
sbb
inc
pop
movsl
dec
inc
inc
ja
lods
out
fldcw
in
call
push
adc
jnp
cmp
stc
add
mov
ja
push
cmp
or
stc
xchg
xor
movsb
incl
aaa
and
or
mov
sub
cmpsl
cmpsb
jae
arpl
mov
repz
dec
call
das
or
jmp
mov
nop
cmp
ja
pusha
loope
mov
and
lds
into
inc
sahf
adc
les
add
mov
cmp
jp
fsubr
pop
or
fcomp
xor
and
add
pop
outsl
add
adc
mov
inc
pusha
call
cli
or
sbb
imul
cli
jmp
dec
mov
fimull
xor
sub
mov
outsl
push
xor
cmpsb
jns
mov
mov
cs
push
js
test
movsb
test
lret
cli
mov
xchg
imull
adc
movsl
inc
aas
mov
popf
sbb
add
imull
imul
outsb
or
jb
movsl
data16
mov
or
popf
add
inc
xlat
fwait
int3
int
mov
js
fidivrs
mov
pop
push
out
pop
jge
lcall
and
out
xchg
out
or
mov
int
paddd
insl
cmp
outsb
test
fistpl
outsl
xchg
cmc
fadds
test
scas
call
in
addl
and
out
nop
loope
pop
iret
into
jge
or
filds
stos
mov
gs
sub
xchg
xchg
imull
cs
or
sarb
cmp
or
ljmp
sahf
inc
jg
add
add
push
lret
pop
ss
add
fnsave
ja
ficoms
fsubrs
dec
adc
dec
gs
jae
mov
aam
cmpb
pop
and
in
out
arpl
mov
sub
pop
adc
adc
pop
cs
hlt
lcall
ficoms
cmpsb
push
inc
fisttpll
or
pop
lret
stos
jmp
inc
xchg
xor
ret
insb
mov
fisttpll
mov
or
and
push
mov
mov
in
pop
jg
jbe
mov
es
movsl
or
mov
jno
fistps
testb
fbld
or
push
and
cmpsb
movsb
xor
mov
mov
aas
div
sbb
mov
daa
cmp
pusha
push
pushl
adcb
rorb
out
jg
push
mov
out
int3
ss
popa
aam
sbb
sti
adc
out
push
std
mov
loop
push
das
jge
xlat
icebp
enter
ljmp
aad
push
rolb
popa
or
icebp
mov
cmp
mov
mov
mov
incb
mov
xor
mov
pop
xorl
loope
pop
divb
mov
lods
das
xchg
mov
add
xchg
mov
arpl
add
or
push
aam
fdivrs
xchg
sahf
call
jbe
lds
scas
sahf
popa
pop
adc
ljmp
push
adc
jl
aad
popa
inc
pop
sub
dec
test
in
push
lods
mov
out
push
xor
jl
jbe
out
insl
ficoms
loop
sbb
and
jl
xchg
dec
push
or
xchg
cwtl
pushf
test
mov
lds
sbb
xor
xor
loopne
fstpt
loopne
jbe
filds
rol
xor
xor
rcl
addr16
movsw
hlt
dec
out
int
jae
sub
sub
popf
xor
adc
out
cli
test
mov
and
cmc
mov
add
out
dec
mov
loop
dec
test
push
inc
int3
and
scas
xchg
call
in
pusha
mov
in
lods
scas
subl
int3
ror
jl
sbb
sbb
fdivs
jmp
pop
push
mov
push
mov
fucomp
inc
mov
imul
ds
sahf
add
cmp
popa
or
pop
jae
dec
cmpsb
cmc
mov
add
inc
cld
inc
insb
xor
stos
fwait
pop
lods
add
xchg
and
xchg
jle
cld
xchg
mov
mov
fcoms
iret
cltd
sbb
pop
lds
into
push
push
data16
add
and
leave
mov
push
sub
push
test
lods
pop
mov
ds
out
mov
or
mov
mov
xchg
pop
cmpb
repz
lcall
cmpsb
or
outsb
mov
push
or
in
mov
stos
lea
mov
push
jmp
and
xor
mov
mov
int3
or
fsubs
insl
sub
test
xchg
icebp
test
pandn
push
push
pop
and
or
xchg
mov
movsl
lea
mov
mov
stos
inc
test
pop
jne
lock
lret
inc
mov
add
mov
das
stos
sub
adc
nop
ret
jns
or
dec
cltd
jle
xor
and
push
lahf
cmpsb
pop
mov
gs
out
or
cmc
dec
xor
aas
cli
aas
pop
ja
cmpsb
xchg
cmpl
jne
sbb
pop
scas
insb
in
les
aaa
cld
insb
imul
scas
sbb
jg
or
mov
aaa
out
pop
pop
pop
mov
aas
repz
jmp
xchg
or
xor
sub
in
repz
mov
sbb
push
cmp
in
or
push
inc
add
inc
popa
insl
add
adc
add
ror
addr16
sub
cmpsl
xorl
adc
cltd
pop
sbb
push
imul
aam
inc
jecxz
push
jno
xor
cli
std
mov
pop
xchg
fs
pop
jbe
mov
mov
sbb
inc
pop
pop
mov
roll
popf
clc
hlt
cmp
push
add
pop
jnp
test
mov
push
dec
test
ss
repz
xchg
sub
and
cmp
xor
mov
jge
or
dec
cmp
je
push
push
aas
out
xor
aaa
mov
sub
jns
test
nop
xchg
mov
in
mov
push
inc
fstpl
push
fchs
mov
mov
cli
and
sbb
dec
and
aas
cltd
stos
xor
cmc
ljmp
xor
mov
xor
sbb
and
push
es
test
es
add
enter
dec
adc
xor
add
sbb
mov
std
sbb
cltd
mov
or
sbb
sub
in
jae
adc
or
call
lods
out
enter
cmc
test
fistpll
out
aad
jns
loopne
mov
into
pop
jg
nop
ror
in
frstor
outsl
sarb
dec
scas
mov
je
out
inc
sbb
jp
pop
xor
sbb
and
outsb
lret
aas
sub
adc
jl
es
aad
sub
cmc
mov
testb
enter
xchg
pushf
sub
data16
dec
popf
inc
test
pop
sub
xor
out
pop
mov
adc
and
xchg
leave
dec
add
cmp
lret
or
test
add
mov
aaa
in
out
cmpsl
xchg
push
push
xchg
cld
or
sub
rcl
fistl
daa
dec
xchg
cwtl
bound
pop
sbbb
enter
push
adc
inc
mov
inc
sbb
sub
jb
je
mov
fstpt
mov
add
xor
out
cltd
insb
out
scas
in
jne
mov
mov
inc
inc
jecxz
pop
pop
stc
adc
pop
mov
xlat
std
sbb
js
imul
shlb
stc
cmp
data16
and
or
lods
inc
pusha
inc
icebp
iret
xor
jne
sbb
or
dec
std
cmp
data16
cmp
js
and
xor
or
fdivrl
or
mov
mov
mov
push
mov
ret
sbb
inc
add
pushf
popf
jns
fistpl
cmp
dec
sarl
movsl
sbb
imul
daa
jle
cmp
jne
mov
xor
sbb
fwait
add
adc
mov
push
pop
fcoms
in
lret
inc
rcrb
xor
xchg
in
dec
jmp
sti
lods
push
dec
jge
ret
cmp
mov
jnp
into
xor
addr16
je
fldt
and
mov
push
sub
loopne
xchg
dec
pop
iret
push
push
pop
and
pop
imul
lcall
sub
dec
cltd
sub
lahf
pop
insl
aad
arpl
nop
cli
stos
dec
loop
dec
sub
push
push
std
clc
cmpsl
aad
pop
mov
icebp
pop
lods
jnp
mov
push
ja
outsb
mov
adc
mov
xchg
inc
pop
bound
outsb
mov
pop
out
mov
addl
out
into
out
mov
inc
inc
fnstsw
dec
pop
and
cli
sub
arpl
mov
lahf
leave
sub
jnp
jl
pushf
stos
pop
out
insb
lods
cmp
sbb
cmp
jp
jge
sub
fwait
lcall
inc
stc
mov
test
and
scas
test
and
lds
imul
test
pop
loopne
movsb
sbb
or
inc
and
cld
jnp
nop
dec
mov
fimull
xchg
test
in
mov
cmpsl
cmp
pop
fildl
lcall
ret
es
and
push
sub
int3
mov
push
push
mov
mov
and
clc
xor
idiv
cmp
push
cmp
sbb
xchg
mov
rorb
addr16
xchg
shlb
sub
add
jnp
xchg
dec
jo
and
movsl
fdivrl
dec
test
xchg
pop
and
mov
fsubr
cmp
inc
in
lods
mov
inc
sbbl
es
jecxz
cltd
in
popf
inc
pop
iret
out
xor
addr16
das
jo
mov
jne
cmc
int
notb
or
rclb
xchg
mov
aam
xor
push
cli
mov
dec
movsl
pop
pop
pusha
out
sarb
or
sub
repz
int
sub
xchg
xchg
lock
imul
and
daa
jge
nop
mov
les
mov
iret
fnstsw
mov
imul
inc
fstp
fisubl
and
pmulhuw
out
std
fimuls
stc
hlt
addl
or
dec
push
jae
in
leave
pop
lea
pop
push
shlb
adc
inc
inc
cmpsb
xor
mov
addr16
jmp
jg
lock
mov
fdivs
jae
shll
dec
mov
hlt
xor
arpl
push
adc
js
mov
cwtl
lret
negl
scas
xor
loope
sub
data16
dec
mov
pop
adc
shr
lahf
pop
popa
dec
loop
jo
fwait
loope
das
movsl
push
add
daa
pop
cmp
popf
add
pop
shr
lock
sub
loope
mov
sub
sarl
aad
sbb
in
add
clc
mov
jo
xchg
jo
clc
jns
notb
mov
lret
lods
sbb
mov
mov
xchg
ficoml
xchg
push
clc
mov
xlat
ljmp
divps
mov
xor
dec
and
push
xchg
cmp
push
ret
push
jo
and
int
dec
jecxz
in
xor
push
stos
loope
xchg
pop
and
add
psubq
inc
aaa
xor
xor
cmpsb
insb
cmp
and
inc
das
jno
sub
mov
lock
cld
inc
xchg
jo
push
cld
adc
add
rcl
pop
sub
pushf
dec
push
sbb
jns
sub
ljmp
mov
cmc
push
cmp
negb
pop
subl
and
shrb
jl
mov
adc
sbb
or
sbb
imul
xchg
mov
cmpsb
cmpsl
or
test
into
push
mov
cmp
dec
jnp
movsb
push
fiadds
movntq
sbb
ljmp
into
cwtl
mov
jo
out
mov
lcall
cmp
inc
dec
rorb
lcall
fidivl
mov
hlt
jae
xchg
push
icebp
inc
not
dec
imul
stc
lods
jmp
fisubs
dec
popf
push
or
jmp
mov
dec
scas
out
in
sti
out
mov
dec
enter
nop
fildl
jbe
ror
xor
mov
push
adc
mov
xchg
cmp
pop
adc
out
dec
data16
mov
cmpsl
rcrl
ret
loope
cmpsb
loop
gs
fistpl
in
xor
push
xorb
jns
jbe
movsb
inc
dec
psubw
fstps
test
pop
fmul
aam
test
dec
push
int3
cltd
sub
aad
ljmp
insb
pop
push
sbb
lahf
jns
repz
test
in
dec
in
xor
rorl
dec
popa
daa
loope
nop
arpl
mov
inc
xor
sahf
mov
pop
or
xchg
push
and
icebp
sub
add
mov
xchg
xor
sub
test
in
sbb
xchg
add
adc
dec
cld
xor
dec
pop
pop
test
cmc
xchg
dec
jle
fnsave
pop
pusha
pop
testl
jmp
pusha
into
xchg
pop
lea
sbbl
lahf
stos
aaa
inc
aad
lret
dec
arpl
repz
cli
arpl
insl
mov
mov
cld
ljmp
inc
mov
dec
mov
je
cmp
add
push
dec
sub
divl
mull
and
ss
push
inc
cmpsb
adc
jecxz
xlat
popf
inc
add
mov
jno
into
mov
rclb
xor
sub
mov
or
add
lock
push
stc
xchg
popf
ret
jl
sbb
cld
lods
addr16
in
mov
adc
mov
inc
jo
out
dec
push
push
hlt
clc
flds
jp
cmp
arpl
and
pop
or
testb
imul
lods
sub
out
inc
xchg
pop
sahf
sbb
xor
add
test
scas
stc
xor
xor
aas
lds
push
fdivs
push
xchg
xlat
inc
pop
stc
lret
arpl
sub
cltd
movsb
call
mov
xor
push
ret
push
in
stos
lcall
rcll
fstpt
test
repz
cmpsb
aas
mov
dec
xchg
sbb
sbb
mov
sub
movsb
inc
add
inc
lock
adc
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
mov
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
jmp
cmc
cld
mov
test
outsl
mov
cld
pop
jp
test
mov
add
jo
add
xchg
lods
cli
les
fcompl
roll
movsb
dec
mov
jnp
and
and
jmp
stos
arpl
push
jge
jmp
push
outsl
dec
nop
sbb
and
or
test
sub
push
dec
mov
fisubrs
enter
lock
cltd
pop
or
nop
repz
daa
jnp
xor
add
sub
push
mov
enter
sahf
cmp
sub
into
loope
das
add
sahf
mov
jnp
sbbl
sub
jo
movsb
cs
sub
aas
in
mov
sbb
sahf
xor
xchg
jnp
shll
stos
popf
cld
enter
jnp
movsl
push
pop
std
pop
mov
gs
ja
inc
pop
adc
pop
int
jns
aaa
or
insb
in
pop
inc
mov
popl
cs
call
sub
in
pop
add
shrb
jae
push
and
cmp
test
push
les
add
mov
jns
jae
cmp
sub
test
add
pop
flds
sarb
jo
push
xchg
xor
cmp
pusha
sti
pop
cs
out
jae
push
cs
ret
popl
mov
jmp
ret
lock
mov
ret
cmp
dec
or
pop
mov
xlat
nop
push
cli
mov
popa
adc
pop
add
pop
add
ja
outsb
cltd
pop
outsb
sbb
cs
mov
lds
dec
loope
cmpb
sub
add
cli
push
popf
aaa
adc
out
arpl
pop
mov
and
dec
test
push
mov
into
push
dec
mul
pop
les
mov
inc
in
ret
adc
xor
aam
adc
mov
and
nop
jnp
lds
pop
flds
in
out
in
andb
sbb
daa
mov
pop
in
cli
repz
inc
cs
sbb
add
sbb
iret
out
xlat
sbb
adc
std
mov
jg
add
lea
sub
sbb
mov
adc
lds
mov
dec
lock
add
lock
fidivl
cltd
pop
ret
fstpl
hlt
ds
lods
mov
mov
sahf
push
sbb
call
push
mov
movsb
ds
cld
pop
xchg
mov
adc
aad
sub
mov
arpl
mov
or
mov
pop
ret
fmuls
aad
dec
jb
xchg
inc
test
data16
je
ja
outsl
pushf
and
or
cmpsb
inc
mov
adc
loope
in
mov
cmp
jae
pop
stc
push
and
jo
inc
shrb
push
push
fdivrl
daa
bnd
hlt
divb
stos
push
movsb
outsb
xchg
push
push
std
cli
inc
add
int
outsl
dec
loop
jecxz
and
scas
cltd
fdivl
push
fisubl
aam
jp
cmp
sti
mov
xor
jns
ffree
loope
xchg
fldcw
mov
sub
inc
inc
pop
xor
out
and
inc
or
pushf
jmp
jmp
fwait
or
iret
add
mov
das
jge
sbb
mov
cs
shrl
outsl
mov
inc
dec
int3
mov
movsl
sub
push
fs
jmp
inc
out
mov
in
pushf
in
call
stc
dec
jge
lret
pop
push
loop
shll
jp
mov
in
jp
fsubs
addr16
push
unpcklps
rol
mov
stos
dec
test
xchg
out
subb
fadd
mov
xor
fcomi
jle
mov
mov
fsubrs
ret
fistpll
xchg
int3
and
cmpsb
cmp
out
xor
scas
insb
lea
dec
jb
daa
les
movsl
out
in
bound
push
fwait
aam
sbb
popa
divb
pop
mov
daa
clc
bound
dec
lds
cmpsb
xchg
mov
cld
xchg
add
popa
iret
fs
push
mov
mov
scas
inc
cmp
sbb
test
and
int3
loope
cltd
pop
pop
dec
mov
flds
ss
pusha
js
pop
lret
fisubrs
push
push
adc
rcll
jns
jbe
xor
sbb
lock
iret
lret
pop
les
cmp
push
shrb
sarl
sahf
pop
loopne
mov
and
jns
dec
jle
popa
enter
dec
into
lret
pusha
faddp
jmp
or
call
and
in
pop
std
decl
inc
ficomps
cmp
xor
adc
mov
or
sub
jno
push
xor
out
jno
popf
mov
dec
pop
adc
nop
into
mov
leave
lods
hlt
lea
inc
or
inc
cmc
and
jae
mov
fstl
sbb
insl
out
loope
push
xorl
xchg
mov
iret
pushf
fisubrs
pushf
xlat
shlb
cltd
pop
je
call
pushf
movsb
test
lock
cwtl
sub
or
cmp
or
sbbl
jns
int3
inc
xchg
mov
pushf
pop
and
pop
mov
pop
ss
xchg
pushf
jnp
xor
mov
popw
imul
cmpl
mov
and
out
pop
hlt
cltd
mov
cld
sbb
add
int
cmp
rclb
push
insb
jmp
push
test
xchg
and
popa
and
ss
and
movsl
cltd
xchg
push
push
jns
cmp
roll
inc
sbb
add
add
adc
dec
mov
sti
sub
cmp
lds
rorl
jmp
cmp
sbbb
es
std
pop
dec
shll
sub
pop
push
jno
hlt
data16
icebp
xchg
xchg
mov
pusha
or
push
sub
sbb
aaa
mov
xor
add
adc
mov
test
mov
add
outsl
out
jbe
leave
pusha
cmp
sbb
movsb
adc
in
shlb
mov
jecxz
pop
inc
xchg
jmp
stos
jnp
shrl
fsub
sbb
adc
pop
push
push
or
clc
test
rol
push
inc
pop
das
jmp
mov
mov
daa
ss
lcall
jns
dec
fsubrl
mov
pop
and
jmp
or
mov
jp
cltd
fs
fimuls
mov
cmp
loope
adc
push
push
mov
test
aas
shlb
and
call
sbb
xor
mov
or
imul
push
xchg
cmp
mov
mov
jge
jno
and
push
imul
int3
jo
pop
push
adc
shr
cmpsl
cmpl
push
or
outsb
test
mov
push
push
push
cli
mov
mov
ds
data16
jne
adc
jno
test
mov
xchg
test
and
and
out
outsl
adc
es
adc
jmp
cwtl
subb
pop
movsb
bound
scas
out
lds
jns
xchg
fmuls
xor
lcall
pushf
scas
stos
add
jecxz
pop
cmp
scas
lcall
test
and
ficomps
inc
pop
adc
mov
movsl
push
lahf
push
xchg
daa
mov
outsl
lods
stos
sbb
pextrw
cmpsl
and
call
inc
push
mov
lea
add
or
in
pop
adc
out
lock
in
movsl
jmp
xchg
mov
je
jge
cwtl
aas
clc
and
icebp
fnsave
dec
xchg
jns
mov
jae
repz
out
mov
frstor
xlat
push
and
bound
scas
aad
and
cmpsl
mov
es
stos
jge
inc
add
ret
jae
std
pop
xchg
dec
xlat
mov
pop
stc
add
dec
lock
pop
mov
rorl
movsl
ret
femms
stc
aam
adc
sbb
cmp
call
fnstcw
cmp
xchg
sub
push
push
push
stos
loope
mov
push
pop
lods
dec
jnp
scas
stos
sub
pop
push
iret
inc
mov
sub
cltd
xor
xchg
fwait
cmpsb
inc
out
hlt
les
in
dec
and
sbb
or
fidivrs
ljmp
cli
test
cmp
inc
inc
repz
push
shlb
mov
int3
mov
xchg
mov
push
xor
and
les
in
repz
shrb
jbe
xchg
jns
aad
xchg
mov
pop
or
sahf
test
jmp
push
jns
loope
jle
insb
sbb
jg
pop
popa
cmc
cli
popa
cwtl
adc
push
mov
out
and
mov
add
jmp
sbb
cmp
jg
sub
inc
insl
mov
mov
loop
test
mov
push
xchg
push
popa
call
ret
inc
mov
pop
dec
push
xchg
adcb
ret
outsl
xchg
mov
fsubr
out
jbe
cmp
jb
inc
fisubrl
js
mov
daa
and
clc
push
ss
pop
in
push
fs
cmc
fbstp
lahf
pop
mov
mov
adc
test
inc
test
or
stc
stos
sbb
adc
or
les
adc
adcb
hlt
lahf
or
js
or
mov
inc
loopne
aaa
scas
loopne
in
mov
xchg
and
fisubl
loop
dec
js
lock
aaa
lods
mov
xchg
cli
push
mov
push
aaa
push
pop
push
dec
inc
pop
sti
faddl
add
rcrb
sub
repnz
insl
mov
stos
mov
fsub
and
loope
arpl
popa
cmpsb
xor
hlt
fbstp
test
je
inc
cmpl
mov
jne
mov
movsb
subl
loop
loope
out
inc
jnp
addb
xchg
lahf
cwtl
add
sbb
fdivrs
cld
fidivl
fistps
pop
int
arpl
xor
push
pop
sub
jns
mov
inc
jl
mov
jb
mov
jae
std
test
jne
adc
pop
or
pop
or
test
fincstp
pop
ljmp
shl
out
sahf
aad
jbe
addr16
shll
adc
sub
into
mov
nop
sub
mov
and
aad
loopne
enter
sbb
jmp
cmpsb
add
jnp
inc
ja
dec
pushf
outsl
push
dec
repz
pop
mov
dec
pop
push
mov
mov
push
adc
addr16
jb
sbb
out
inc
xchg
xlat
nop
jge
xchg
and
mov
int3
cld
shrb
mov
shll
push
inc
inc
xchg
outsb
stos
push
xchg
icebp
sub
cmp
mov
sbb
dec
fmulp
scas
js
and
clc
cmpsb
add
aad
pop
adc
aad
call
pop
add
lcall
in
push
xchg
fwait
js
cli
push
int
nop
lret
jmp
bound
stos
jp
and
rcl
jae
adc
mov
inc
cltd
hlt
in
inc
push
jp
cmp
inc
inc
inc
andps
leave
insb
and
jl
jp
in
jle
dec
cld
pop
xchg
shlb
es
and
dec
sar
stos
into
imul
shrl
sbbb
sbb
imul
and
push
jns
pop
or
add
test
pop
pop
mov
stos
gs
pop
icebp
sbb
and
push
fs
out
in
jne
es
push
sbb
jno
scas
std
gs
movsl
cmp
dec
cmp
xchg
mov
adc
jne
aad
sub
ljmp
sub
push
jp
aas
jg
jle
xor
sbb
inc
cltd
jno
popf
lock
mov
push
rclb
pop
and
js
jo
sbb
cmp
dec
out
adc
repnz
mov
jp
int3
cmp
push
mov
mov
push
pop
sbb
push
mov
fsubrs
xchg
fwait
push
or
inc
pop
scas
or
inc
mov
cmp
mov
pop
gs
sti
or
pop
sub
clc
push
xchg
cmpl
adc
adc
pop
pop
or
leave
pop
xchg
pop
add
subb
mov
pop
jbe
adc
fst
xchg
jb
jo
xor
mov
xchg
inc
push
sarl
mov
mov
test
sbb
add
push
mov
stos
sarb
es
xchg
inc
mov
add
shll
dec
sub
sub
mov
sbb
mov
scas
lds
sub
push
sbb
scas
pop
sub
adc
rcr
popf
mov
pop
inc
je
sbb
and
mov
loop
fwait
lds
xchg
pop
mov
aad
das
or
inc
testl
loop
and
rolb
inc
shlb
adc
stos
aam
std
dec
fidivrs
lret
aas
mov
dec
pusha
mov
adc
icebp
pop
mull
xor
push
int3
movsb
push
mov
out
iret
shrb
xchg
mov
out
push
stc
test
sub
cmp
jmp
lcall
addr16
and
aam
pop
or
xor
jge
in
les
test
out
inc
jl
orb
cwtl
bound
aaa
sahf
xchg
push
xchg
pop
pushf
stos
aad
mov
mov
fiadds
cmpb
or
jne
push
or
shrl
aas
rorl
push
jge
in
xor
popf
adc
lret
adc
pop
xlat
ja
scas
add
xchg
stos
sub
mov
push
and
jecxz
pop
push
ja
pop
loopne
mov
push
leave
and
aaa
mov
lcall
mov
mov
mov
pop
inc
cmp
add
pop
mov
pop
out
testb
sub
fnstcw
mov
fsubs
mov
cmpb
bound
fs
mov
xchg
inc
ja
ljmp
xchg
loope
xchg
movsl
mov
out
js
imul
push
add
pusha
popa
cltd
mov
hlt
jo
or
and
roll
jno
cmp
push
loop
das
dec
cmp
pop
or
insb
mov
inc
push
mov
popa
inc
cmp
jo
cmp
mov
sbb
loop
cld
ljmp
int3
sub
mov
pop
mov
adc
insb
dec
add
outsb
pop
add
jecxz
cmpsb
jle
inc
leave
orb
xchg
out
sti
divl
xchg
or
jp
cmpsl
add
sbb
mov
clc
in
inc
mov
sub
movsb
push
fistl
cmp
js
xor
mov
adc
incl
dec
mov
enter
mov
insl
stc
cmpxchg
fstl
pop
mov
mov
sahf
mov
test
lods
mov
cmp
xchg
mov
aaa
rcrb
ljmp
rorl
lods
push
jb
xchg
fidivrs
lret
mov
pop
add
mov
in
mov
fdivrl
pop
adc
js
inc
adc
jle
sbbb
lock
cmp
mov
outsb
popf
fnstcw
lcall
sub
icebp
pop
adc
and
daa
pop
dec
xor
push
and
pop
jmp
sub
out
push
adc
cmpsl
dec
xor
mov
xchg
xchg
inc
add
aas
lcall
dec
fistpll
sahf
dec
sub
cmpsl
nop
movsl
fstps
loop
jns
pop
sub
daa
cmpsl
xor
xor
lds
mov
pop
adc
fwait
sahf
jno
push
aas
xchg
test
cmp
pop
inc
ljmp
in
loope
cwtl
inc
frstor
add
adc
cmpsb
mov
push
cmpl
push
repz
mov
in
stc
dec
cmp
movsl
dec
dec
adcl
mov
sbb
xchg
lahf
stos
call
mov
rorl
or
sub
pop
cmp
lock
aaa
push
iret
lret
repz
repz
mov
and
cli
and
popa
push
mov
jo
in
adc
inc
mov
xor
js
xchg
cld
leave
adc
and
dec
es
xchg
cmp
xchg
daa
push
xchg
sti
pop
jge
cmpsb
std
mov
cld
and
test
dec
shrb
sbb
or
cmp
leave
adc
lretw
ficomps
in
push
ljmp
add
mov
mov
fdivr
dec
or
fistpl
xchg
das
cmp
pusha
inc
push
pop
push
leave
sub
es
jp
dec
jle
pop
jl
mul
inc
lea
or
mov
lcall
pop
sahf
dec
mov
scas
lret
xchg
lret
jbe
fcmovnb
shrl
lahf
inc
push
sbb
stos
mov
dec
ljmp
aad
xor
pop
call
outsl
mov
mov
jns
mov
pop
fwait
pop
iret
test
inc
jecxz
pushf
stos
cli
repnz
push
add
add
sbb
cltd
sbb
or
imul
or
push
arpl
sbb
sub
and
xchg
enter
jp
dec
lahf
das
adc
sbb
dec
ret
adc
adc
sbb
push
sti
dec
lahf
mov
adc
dec
pop
dec
mov
lods
mov
stc
mov
out
cmpsl
inc
hlt
cmp
rcrb
mov
cmc
mov
jle
lods
loopne
mov
xchg
or
inc
movb
jae
popa
leave
ja
mov
sbb
adc
cli
add
xchg
je
cmpsb
mov
enter
mov
scas
gs
stc
incb
cltd
and
leave
xchg
adc
push
das
cltd
add
dec
jmp
mov
pop
push
fs
outsl
scas
ret
lods
jge
js
imul
pop
mov
mov
cmpb
jecxz
aam
fsubrs
sbb
test
stc
cmp
cld
stos
sub
test
pop
xchg
mov
fldl2t
jo
mov
mov
inc
clc
lods
sbb
out
push
fdivrl
add
push
cmp
sbb
ret
dec
xor
xor
icebp
inc
cmpsb
loop
cmp
incl
mov
inc
test
xor
out
movsb
ljmp
jp
cltd
jbe
lret
or
fwait
mov
or
push
cld
mov
movl
mov
cmpl
lcall
loopew
repz
adc
std
xor
orb
lods
mov
mov
cmp
fnstenv
push
loopne
loope
insl
adc
cld
mov
xchg
test
push
cmp
sahf
mov
push
aad
or
imulb
xchg
push
pushf
mov
mov
popf
ja
adc
mov
lods
mov
and
xchg
and
adc
or
subl
pop
gs
in
inc
stos
mov
fnstcw
dec
sbb
sbb
jbe
jg
fsubl
loopne
call
outsl
mov
xchg
mov
mov
cmpb
sub
mov
in
mov
push
mov
xchg
inc
inc
mov
mov
xlat
lret
fiadds
xor
dec
adc
dec
rol
loopne
mov
add
movsb
pop
ret
in
lret
iret
mov
and
stos
mov
sbb
ret
pop
stos
lret
push
mov
icebp
in
fwait
sbb
data16
into
test
jo
loope
pop
xchg
jecxz
insl
push
jge
mov
lcall
or
call
dec
inc
loopne
test
or
mov
mov
shll
bound
testl
enter
cli
lea
dec
and
push
arpl
sub
adc
and
sub
push
jge
jl
or
fdivs
das
push
cwtl
jno
out
es
repz
or
jecxz
sub
scas
mov
sbb
jae
fisttpll
mov
mov
and
push
mov
outsl
fbstp
xor
rol
imul
push
xchg
imul
or
loopne
fisttpl
popa
dec
xchg
mov
add
lods
dec
xchg
xchg
outsl
pusha
dec
inc
fstps
push
insl
or
shrb
repz
cmpsb
loop
ret
int3
popf
or
outsl
lds
pop
lea
jecxz
dec
in
std
repz
mov
dec
pusha
fadds
test
mov
adc
icebp
and
mov
je
mov
xchg
xlat
mov
push
xchg
xchg
idivb
pushf
and
pop
or
xlat
and
mov
addb
ss
sub
push
mov
push
lcall
xor
insl
xchg
in
nop
loopne
jl
ljmp
nop
jae
add
js
inc
sbb
push
mov
sbb
sbb
fidivrl
lret
push
ficoms
sbb
or
outsl
push
loop
jne
mov
insb
xlat
mov
lods
jo
sub
bound
gs
into
mov
jbe
mov
lds
imull
popa
push
sahf
iret
adc
inc
ss
or
cmp
and
or
in
fisttpll
mov
mov
mov
inc
lds
adc
xchg
clc
stos
stos
clc
xchg
or
lea
rcll
jne
inc
incl
insl
movsl
addl
popf
xchg
push
cmp
adc
outsb
insb
xor
jb
xchg
xor
cmc
push
inc
jb
mov
xchg
aad
arpl
int3
jne
movsb
outsb
sub
mov
jle
rolb
int3
sub
rcrb
push
xor
sub
test
cwtl
mov
std
testl
cli
adc
outsl
jge
mov
es
nop
adc
push
cmc
ret
jbe
cld
inc
jl
or
nop
xor
sub
push
mov
loope
test
scas
mov
mov
mov
or
add
insb
pop
adc
pop
sub
shld
mov
test
sahf
dec
lret
or
mov
mov
lret
pop
fdivrl
movsb
lea
mov
ljmp
out
xchg
jns
push
scas
imul
sub
aas
mov
cmc
jp
sbbb
aam
ss
mov
xchg
xchg
stos
lods
mov
mov
sub
lahf
jae
sub
cmp
iret
mov
ljmp
sbb
iret
jp
inc
movswl
adc
lahf
mov
cwtl
sbb
or
jbe
cld
int
mov
ljmp
mov
jmp
inc
movsb
cld
fs
daa
shrb
push
ficompl
xchg
and
xchg
stc
lock
push
xlat
xor
pop
push
faddl
loop
ficoms
mov
mov
and
mov
dec
gs
add
test
test
mov
call
cmpsb
gs
pop
cmp
sub
or
fs
cmp
scas
mov
jb
in
pop
cltd
scas
arpl
lret
test
or
aam
jmp
cltd
and
rolb
rclb
jbe
sub
ja
jno
push
push
adc
iret
pop
fsubl
das
cmp
xchg
cs
adc
test
inc
test
idivb
pop
push
xchg
pop
mov
js
fdivrs
in
divl
ret
xor
lret
jecxz
and
loopne
pop
cld
sbb
lcall
into
lcall
jb
out
mov
sbbb
mov
inc
push
jb
cvtdq2ps
inc
lret
loope
ret
cmp
outsb
fadd
jae
test
test
xor
ficompl
aas
or
xchg
push
mov
jns
rcll
insb
loop
repnz
adc
inc
imul
mov
xor
xchg
adc
push
dec
mov
sbb
mov
adc
mov
icebp
iret
inc
sub
stos
add
cld
jno
mov
in
or
lock
adc
sbb
adc
std
mov
sub
arpl
sub
mov
push
jno
testl
mov
je
push
ror
test
mov
inc
jecxz
sbb
ds
fbld
or
adc
hlt
mov
dec
jo
or
add
dec
sub
scas
xlat
loop
loopne
and
cmpl
iret
outsb
dec
les
stc
push
aad
sub
mov
pop
ds
dec
jp
jnp
lods
dec
testb
lahf
flds
push
cs
fwait
out
xor
addr16
pop
jb
in
hlt
push
mov
icebp
pushf
mov
fwait
out
enter
aam
loope
jge
aas
push
fcoms
aad
daa
inc
xlat
orl
ljmp
std
aam
mov
push
daa
cli
push
in
push
stc
push
mov
call
shl
aas
ret
aam
int
jmp
jnp
dec
js
shrl
es
sub
sbb
add
push
xchg
mov
or
stos
adc
cli
sub
lret
cs
mov
push
push
xor
mov
push
mov
jp
adc
mov
rolb
push
xchg
test
lret
mov
add
loopne
movsb
push
mov
scas
sub
xchg
or
enter
iret
jge
nop
and
imul
fbstp
shll
jge
sub
inc
aaa
into
lods
inc
push
test
lret
mov
lret
movsb
rcrb
ret
xchg
push
call
cmpsb
shll
aam
clc
mov
out
xchg
mov
call
in
out
jecxz
gs
push
pop
dec
mov
sub
cmp
pop
pop
call
jbe
jecxz
sbbl
testl
js
aas
aad
xchg
sbb
es
outsl
popf
mov
iret
sub
in
or
mov
push
inc
push
mov
movsb
adc
sbb
cmp
inc
jns
inc
mov
into
inc
daa
add
fistpll
ficoml
leave
add
rcrl
les
push
cltd
xor
std
rolb
pop
pop
clc
xchg
daa
jle
xchg
adc
movsb
inc
mov
out
repz
in
leave
and
pop
lods
mov
sub
inc
popa
push
mov
cmp
ret
sub
pop
sbb
inc
icebp
dec
inc
lahf
mov
xchg
pushf
int
std
or
pop
sub
mov
ret
sbb
mov
popa
push
gs
inc
mov
out
add
pop
add
sub
call
xchg
push
dec
aaa
in
repz
subb
xchg
jb
fdivl
xchg
ja
sub
lcall
and
in
icebp
js
loopw
shr
stos
jle
pop
popf
dec
emms
pop
push
jae
xchg
pop
clc
mov
xchg
lds
push
fcmovb
test
fidivrs
pusha
insb
push
xor
lret
jo
push
or
lahf
jnp
in
xorl
xchg
enter
popa
in
cli
push
bound
daa
mov
addr16
repnz
fwait
cmp
xor
jg
icebp
mov
daa
lds
adc
shrb
jne
push
and
out
jg
cltd
lock
inc
nop
cli
mov
dec
insl
lods
mov
cmpsb
test
inc
aas
lret
jp
stos
das
bound
mov
popl
jge
clc
inc
je
mov
jnp
push
pop
mov
or
push
push
rcrb
xor
and
pop
lock
test
mov
jae
loopne
ret
cmp
push
ds
dec
jns
mov
aas
fldcw
pop
jmp
popf
xor
addr16
xchg
cmp
out
mov
idivl
and
sbb
pop
inc
icebp
icebp
int
loope
cmp
das
jecxz
dec
fwait
adc
aaa
add
ret
insl
negb
arpl
dec
dec
mov
xor
ret
aaa
add
mov
lcall
lods
xchg
pop
out
ret
mov
sbb
sarl
jo
dec
outsb
aad
mov
nop
ljmp
pop
mov
test
imul
dec
lds
mov
or
pop
insb
stos
in
outsb
jns
cmp
ror
and
lods
mov
pop
sbb
fadd
es
mov
sbb
push
aam
stc
xor
nop
inc
lods
pop
adc
jl
or
pop
mov
inc
fs
push
test
mov
jb
gs
out
xchg
pop
and
push
and
popf
in
imulb
cmp
dec
movsb
mov
mov
fcmovnbe
mov
and
sbb
jle
push
dec
aaa
lea
out
cmpl
pop
arpl
and
mov
mov
idivl
ds
stos
jmp
incb
jl
out
push
icebp
push
arpl
scas
and
jbe
xchg
mov
inc
xchg
dec
outsb
mov
insl
repnz
cmc
xchg
rclb
out
sarl
andb
int
test
out
pop
pop
sti
scas
mov
push
cwtl
jbe
mov
xchg
push
push
add
push
adc
xor
lahf
dec
cltd
setae
jbe
inc
jne
in
cld
sub
fstp
pop
pushf
faddl
enter
lret
fnstcw
cmc
push
jmp
mov
leave
pop
cmp
pop
pop
jecxz
adc
lret
in
or
cmp
stos
mov
sbb
inc
fmul
push
outsl
stos
xor
push
add
repz
pop
mov
pop
jo
xchg
push
dec
roll
mov
pop
and
shl
call
sarb
mov
mov
xor
pushf
ss
cmpsb
fdivs
xchg
pop
xchg
xchg
mov
xor
enter
sarl
fisttpl
pop
sahf
jbe
mov
inc
ss
jg
lea
roll
adc
fstl
leave
inc
loope
and
xchg
clc
shll
ljmp
add
jnp
cmpsb
stos
add
sbb
lret
mov
lock
sub
scas
outsl
or
test
cmp
and
add
pop
cmp
push
or
lds
and
int3
sbb
stc
mov
push
out
mov
loope
inc
and
pop
aam
pusha
and
add
cmpsl
arpl
adc
mov
test
and
ret
lret
add
xchg
test
imul
jge
pop
orb
dec
je
cmp
inc
xchg
mov
bound
cmp
movsb
shll
sbbb
shlb
mov
lret
loopne
lds
cmp
leave
sub
xchg
repnz
pop
es
ja
xor
lret
cmpl
inc
jmp
cmpl
push
add
jecxz
aaa
push
dec
jg
test
jae
sbb
adc
and
sub
jg
xchg
cld
dec
mov
push
imul
or
lret
imul
mov
sub
or
dec
inc
outsb
mov
ficoml
or
push
cltd
pop
addb
mov
popf
mov
sti
pop
xor
clc
jge
repnz
das
imul
dec
pop
ja
shl
xchg
add
cli
mov
mov
cmp
dec
and
ss
aas
test
jp,pn
jl
mov
mov
and
lret
scas
bound
push
push
jle
lret
mov
mov
sarb
xor
or
push
scas
jmp
mov
inc
adc
cmc
jl
iret
sbb
fsubrp
jns
inc
and
nop/reserved
xor
inc
xchg
inc
insb
inc
push
hlt
push
push
rcl
test
lock
stc
shlb
lcall
sahf
pop
mov
test
fs
hlt
movsb
outsb
sub
mov
jmp
mov
mov
jae
scas
bound
inc
int3
or
add
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
jmp
pop
add
add
xor
scas
mov
jp
cld
pop
jp
and
pop
repnz
scas
add
out
and
or
jge
leave
mov
push
inc
xor
lahf
das
ja
test
stc
aad
sbb
push
mov
add
cmp
out
cmpl
ret
xlat
xchg
das
inc
sub
dec
ja
dec
icebp
sti
mov
cmp
jecxz
mov
mov
andl
mov
scas
dec
xor
xchg
rcl
cmpsl
movsl
and
dec
imul
sub
and
das
and
fisttpl
adc
inc
shrb
lea
dec
and
lods
and
lret
or
jle
and
pop
or
ds
es
push
mov
movsl
mov
dec
sub
cmp
mov
movsb
or
mov
mov
dec
pop
jns
add
data16
rclb
pop
mov
sub
xchg
les
je
ret
mov
in
leave
fcomps
jns
mov
addl
adc
lcall
jecxz
xor
nop
adc
xchg
sub
sar
mov
push
in
cli
out
adc
popa
push
ret
and
xorb
mov
adc
mov
insl
cmc
popa
push
cmc
insb
mov
xchg
sar
jae
fwait
push
cld
push
sti
adc
dec
and
cmp
mulb
mov
test
addr16
aas
xlat
nop
cld
sbb
into
jne
dec
ret
cld
out
cmp
insb
add
addr16
rcll
jo
jbe
loope
daa
loopne
sbb
add
lods
ret
ret
repnz
mov
in
lea
pusha
xor
cmc
imul
add
or
sbb
fdivs
cli
mov
pop
add
jno
loope
or
push
or
negl
adc
xor
cmp
push
rcrb
lods
fnstenv
xor
test
push
enter
pop
leave
or
sbbb
ja
cmp
pop
jge
call
mov
inc
pop
adc
lret
xchg
movsl
outsl
mov
mov
stos
sub
mov
adc
push
mov
xlat
dec
cmp
ja
dec
cmc
cmp
clc
in
rol
insb
mov
cmp
shlb
movsl
sub
adcl
mulps
add
inc
mov
xchg
sbb
movl
imul
sbb
xchg
jo
inc
shlb
popa
cmpsw
cmc
lock
mov
jae
ds
out
lock
ret
and
xor
pop
mov
shr
pop
in
xor
aam
xchg
into
test
cmc
mov
pop
mov
and
outsb
mov
lahf
pop
adc
push
jmp
aaa
add
fwait
jbe
imull
sub
mov
push
jne
xor
mov
insb
gs
sub
fstl
movsl
out
pop
nop
and
loopne
rol
fwait
adc
test
push
cmpsb
and
stc
cli
lds
movsb
aas
mov
test
dec
mov
pusha
pop
push
imul
cmc
popf
jne
sbb
lret
cmp
in
mov
adc
aaa
aad
dec
cld
ljmp
ja
push
pop
pop
adc
mov
jle
or
into
inc
inc
setno
add
sarb
in
push
out
out
mov
cltd
or
ljmp
mov
insl
in
mov
mov
push
push
xchg
sub
mov
mov
mov
insb
leave
jl
dec
inc
cmc
cmp
xor
fildll
adc
sbb
aaa
cmp
inc
jg
sub
cltd
jmp
addr16
in
add
xor
hlt
in
pop
aam
fstp
or
lret
and
add
adc
shrl
xchg
outsl
clc
pop
xchg
sti
push
fistpl
jnp
outsb
jp
or
mov
and
fsubrl
cltd
xchg
icebp
sbb
int
shl
xor
jle
and
repnz
cmpl
adc
add
in
scas
and
or
andl
push
jl
loop
add
push
popf
mov
dec
add
lcall
pop
mov
insl
or
fsubl
jo
push
sub
int3
inc
test
mov
cs
ljmp
sbb
inc
and
adc
xchg
lds
sub
inc
sbb
and
jno
std
inc
cmp
enter
jge
aam
aaa
xchg
sbb
or
cwtl
aad
jbe
aam
call
mov
mov
push
cmpsb
into
in
add
scas
push
or
mov
adc
add
adc
cltd
mov
bound
cmpb
xor
xchg
jecxz
inc
cltd
out
mov
subb
dec
cld
pusha
sbbl
xchg
sarb
stos
jp
and
ds
cwtl
dec
inc
pushf
int
scas
lret
popf
icebp
sub
pop
insb
fsubrl
sbb
ret
ret
jecxz
mov
fidivrl
rcrl
and
in
rcrb
add
fistpll
lret
sahf
in
and
mov
xchg
xor
pop
mov
nop
jne
lahf
mull
fwait
aaa
pop
xchg
clc
pop
sub
cmp
adc
xchg
movsl
fstp
jo
dec
cmp
inc
sbb
xorb
xchg
xchg
jnp
aam
inc
icebp
addb
dec
mov
xor
inc
stos
dec
add
inc
testl
in
hlt
shl
lahf
loop
lahf
jecxz
js
sub
stos
in
pop
mov
repnz
xchg
mov
test
pop
pop
jb
jno
push
push
mov
adc
push
add
lcall
sbb
outsb
lret
lea
lcall
sti
aas
aaa
sub
cltd
pop
fstpt
add
stc
aam
aaa
movsl
repz
fldl
pop
addb
popa
sbb
and
jmp
fcompl
dec
gs
insb
adc
push
sti
xor
pushf
outsb
jns
dec
rcll
jl
sub
loope
push
push
sub
or
inc
loopne
inc
insb
cmp
mov
testb
dec
mov
or
nop
pop
push
cmp
arpl
sar
shrl
loope
int3
dec
dec
sub
push
push
push
push
das
orb
popf
push
fs
push
hlt
sub
mov
imul
xchg
daa
out
cmp
popf
push
std
xchg
leave
cmpl
iret
dec
stos
mov
ret
and
or
and
jnp
ret
xor
insb
ds
hlt
pop
and
dec
loope
mov
jns
cmp
out
mov
mov
xorb
mov
dec
mov
push
stc
jo
enter
or
jp
enter
adc
call
or
sbbb
jge
mov
and
nop
or
jge
adc
inc
jmp
jbe
insl
mov
out
mov
outsb
add
stc
jbe
inc
inc
pop
pop
inc
jae
push
dec
sbb
jecxz
inc
flds
push
add
test
jns
or
jle
sbb
add
push
jo
push
dec
or
mov
fdivrs
adc
or
inc
inc
jle
xchg
xchg
mov
add
mov
es
adc
xor
fs
out
push
pop
out
leave
cmp
ficoml
and
cs
xchg
out
outsb
push
out
test
out
les
data16
mov
arpl
inc
addl
imul
or
push
push
mov
mov
sbb
mov
xchg
and
pop
cmp
int3
insl
or
lea
imul
push
xlat
lret
loope
fbld
scas
mov
dec
leave
adc
das
and
shlb
lret
sahf
cmp
jp
mov
movb
push
push
mov
cmp
js
movsb
jle
lcall
jbe
sub
xchg
pop
or
aam
mov
loop
fidivrl
stc
adc
loopne
dec
ret
cwtl
dec
cmp
mov
push
test
and
loopne
pcmpgtw
push
push
xor
pop
out
aam
push
mov
lahf
mov
aas
pop
and
enter
arpl
jae
repz
mov
std
or
ss
mov
insl
lock
sub
cli
or
xchg
cwtl
add
divl
test
jae
sbb
iret
mov
lea
cmpsb
icebp
or
mov
dec
xor
push
cmp
enter
les
dec
imull
adc
outsl
jbe
xchg
daa
lcall
jns
ficoms
je
inc
imul
and
repz
out
mov
adc
dec
dec
push
push
adc
push
inc
cltd
daa
pop
addl
outsl
mov
stos
inc
js
cmpl
adc
inc
xchg
cmpsl
repz
xlat
jne
cmpsl
lock
cmp
inc
outsl
mov
jecxz
pop
xlat
mov
dec
fwait
pushaw
push
mov
lcall
sub
mov
aam
jge
cmc
push
sub
addb
mov
lret
int
sub
xor
aas
jp
loope
sub
xor
cld
or
call
mov
add
inc
iret
jne
insl
push
lods
movswl
xor
movsl
je
mov
cmpsl
xchg
mov
scas
jl
xlat
cmp
mov
in
lret
inc
shl
loopne
ja
or
arpl
icebp
jo
adc
xchg
sub
lods
sar
fdivl
je
add
and
or
mov
lock
pop
pop
or
dec
icebp
jb
sub
daa
and
rol
fistpl
sbb
adc
dec
js
pop
adc
inc
adc
insl
ds
push
outsl
fldenv
or
xchg
in
lret
jmp
enter
or
rorl
jns
mov
std
test
mov
insb
scas
shl
int3
xlat
mov
push
popa
xor
pop
mov
and
adc
sbbb
add
dec
sbb
lock
push
cmp
push
out
push
push
inc
inc
cmc
push
pop
bound
negl
es
cltd
dec
daa
stos
pop
and
stos
ret
ds
rclb
das
jge
mov
dec
stos
mov
add
std
scas
and
pop
sbb
sbb
gs
inc
adc
out
xchg
push
fcmove
xchg
sbb
lock
lods
sti
dec
in
jb
mov
jmp
xchg
mov
pushf
xor
mov
jo
lods
fsub
dec
jmp
aad
mov
sti
pop
sbb
imul
inc
sub
sub
push
mov
stc
sub
pop
sahf
cmc
sar
xchg
cwtl
cmp
mov
movsl
inc
pop
sbb
in
inc
jno
xchg
add
pop
imull
or
aam
lea
and
xor
sub
jb
loope
and
sbb
movsb
shl
dec
pushf
or
push
xchg
mov
sbb
sbb
adc
cmp
jg
lods
ss
sbb
sub
cmp
in
das
adc
aaa
push
shlb
xchg
lock
jae
jbe
push
or
jbe
xor
jmp
rorb
popf
in
inc
push
rorl
imul
pop
lods
cmp
add
add
dec
push
add
push
fs
xor
int3
ret
mov
mov
test
adc
shll
decl
pusha
adcl
mov
xchg
dec
xchg
call
sbb
mov
pop
mov
add
scas
test
mov
out
jmp
dec
and
in
imul
dec
mov
ret
sbb
jne
and
popf
jecxz
addr16
cld
sarl
loope
sbb
xor
flds
push
inc
mov
adc
inc
xor
ljmp
dec
mov
mov
lret
cmpsb
popf
sbb
mov
gs
test
push
pusha
mov
cmp
cltd
adcl
insb
loop
dec
je
movsl
xadd
mov
pop
mov
imul
subl
cld
negb
push
mov
addr16
das
sar
add
cmpsl
into
enter
dec
mov
sarb
mov
xchg
sbb
jl
lea
add
adc
fisubrl
cli
sbb
xchg
mov
or
cmpsl
sub
jp
shl
push
aad
fnclex
adc
test
das
mull
sbb
ljmp
jle
dec
mov
push
aam
gs
sub
test
cwtl
jne
sub
in
arpl
adc
clc
aad
unpcklps
das
xor
mov
mov
daa
arpl
insb
lods
scas
call
sahf
mov
cmp
cld
cmp
shl
mov
bound
mov
flds
pop
cmp
movsb
sbb
xor
loop
lock
fnstsw
xor
dec
les
ljmp
pop
dec
or
lods
cwtl
sub
pop
pusha
add
jns
inc
cmp
repz
out
cmp
out
sub
jmp
cmpsb
mov
mull
mov
add
or
cmpsb
dec
push
mov
or
adc
xor
mov
xchg
nop
and
adc
dec
push
pushf
or
js
pop
add
sub
insl
lcall
xor
mov
pop
imul
dec
lret
push
jnp
daa
xor
sub
fldenv
xor
sbb
pop
sub
push
jne
out
repnz
lret
pop
add
push
or
aad
adc
or
xchg
rclb
dec
mov
dec
jns
sub
rclb
or
xchg
stc
cmp
das
pop
or
inc
ljmp
jg
lds
xlat
push
push
out
lods
mov
repz
fcmove
stos
jnp
mov
in
or
sti
fisubrs
push
push
rcrl
or
aad
aad
iret
frstor
and
xor
cmc
or
add
push
ficompl
jp
test
push
lea
mov
xor
call
cmc
jnp
push
inc
dec
mov
scas
loope
pushf
adc
sbb
jge
lods
jno
and
lock
out
adc
lds
add
cmp
pop
jbe
hlt
mov
push
lret
cmpsb
cmp
inc
lock
out
add
imul
add
movsb
bound
and
xchg
fs
jecxz
add
xor
mov
test
cmpsb
adc
aad
xlat
sbb
leave
cmp
jne
inc
movsb
popf
leave
bound
sbb
jl
mov
pop
out
cmp
imul
sbb
xlat
xchg
mov
pushf
or
cmpsb
into
ret
push
repz
mov
sub
imul
lcall
sbb
fnstsw
int3
xor
cmp
ja
mov
add
ss
fldl
je
in
dec
sar
push
ds
outsb
popf
gs
fisubrs
sub
xor
jle
es
mov
fs
movsb
mov
sbb
mov
xor
xor
stos
cmovge
iret
loop
test
lcall
mov
pop
push
cmc
dec
sub
cwtl
adc
xorb
mov
adc
cmpsl
inc
and
xchg
aam
dec
mov
push
mov
insl
mov
stc
pmaddwd
dec
fwait
mov
cmc
push
movsb
and
lods
jmp
dec
js
mov
ror
push
and
mov
and
adcl
insl
mov
jo
mov
jp
sahf
hlt
and
orl
mov
jmp
xor
ds
xchg
mov
int3
ss
outsl
idivb
out
add
addr16
mov
inc
iret
and
inc
add
dec
pushf
cmpsl
shrl
xchg
cmp
dec
mov
push
push
dec
loop
out
leave
or
fbstp
sub
mov
jg
inc
ret
lret
jmp
and
imul
out
gs
inc
in
scas
xchg
lcall
sarl
or
push
jno
mov
test
push
test
xchg
ja
mov
push
push
pop
lret
or
ret
js
scas
mov
leave
push
lods
jne
mov
mov
aam
data16
int3
cmp
rorl
cli
jne
xchg
rclb
sub
mov
fidivl
xor
icebp
adc
push
jno
mov
add
sub
out
cltd
aas
push
aas
push
loopne
mov
sbb
pop
sub
insb
addl
out
test
mov
dec
fildll
lods
icebp
xor
adc
orb
add
ret
adc
cmp
mov
dec
mov
and
lds
dec
push
xchg
stos
inc
dec
sti
ret
lods
ret
or
mov
fistpl
imul
aam
sbb
and
push
inc
cmc
inc
mov
int
mov
in
push
inc
fdiv
cmp
and
xor
xor
adc
imul
and
jle
xchg
adc
ja
lea
lahf
pop
out
or
cmpsl
sub
hlt
imul
call
loop
and
popw
or
or
jmp
loope
aad
push
loope
mov
test
fcoms
movsl
pop
mov
das
dec
add
fistpll
add
or
xorb
push
imul
clc
add
xor
sub
and
cmpsb
adc
int
add
test
aad
jnp
xlat
add
push
lea
cmp
loope
scas
fimuls
adc
cmc
xor
mov
das
faddl
lods
bound
xor
cmpsb
cmpsl
dec
out
std
and
mov
out
mov
lods
iret
xchg
daa
movsl
cmpsl
ds
add
add
adc
into
sub
call
hlt
or
mov
jg
out
test
pop
in
push
adc
add
and
cmp
mov
mov
in
mov
mov
in
test
dec
insb
sub
daa
in
aad
stc
push
ss
test
fwait
add
adc
adc
popf
adc
in
jo
sar
shrb
addl
cld
pop
repnz
stos
test
fimull
test
les
and
push
je
fistpl
xor
cltd
mov
mov
add
leave
fwait
adc
sub
xchg
mov
aaa
cwtl
add
orb
xchg
lds
je
imul
adc
lods
lds
pop
cmpsl
mov
push
fld
lret
sbb
mov
mov
lcall
stc
pop
int
lret
push
adc
shll
xor
movsb
mov
mov
jmp
jmp
mull
adc
and
xor
push
and
pop
sbb
dec
push
dec
js
cmpsb
pop
pop
iret
fnstsw
or
push
pop
mov
push
push
mov
aaa
stc
jmp
sarl
or
scas
insl
test
mov
idivb
mov
xchg
imul
fcomip
out
movsb
pop
xchg
cmp
xor
insl
jge
mov
movsl
lret
stos
mov
push
cmpsl
pushf
aad
lea
adc
hlt
test
mov
subb
and
jae
mov
xlat
mov
ss
int
stc
mov
mulps
repz
out
sahf
mov
out
lcall
aad
sbb
rcr
stc
out
filds
lods
out
mov
pusha
mov
fnstsw
push
ror
sbb
rorb
push
hlt
jns
movsb
lret
or
or
pusha
mov
mov
mov
fstpl
aad
mov
in
lahf
mov
popa
cmp
sbb
fmul
push
test
jo
and
cmp
sub
and
pop
outsl
jbe
or
mov
sub
outsb
push
xchg
rorl
dec
dec
mov
cli
pop
jne
mov
adc
fwait
mov
fldcw
add
cwtl
sub
mov
aad
in
std
data16
testb
enter
dec
pop
daa
scas
push
cmp
xchg
outsl
jne
mov
push
sub
xor
insb
sti
mov
pop
dec
jbe
xchg
jmp
pop
add
sub
in
inc
out
add
sub
sbb
in
sbb
adc
enter
in
or
or
insb
mov
ljmp
pop
icebp
xchg
mul
fs
cmp
je
lcall
pop
dec
daa
add
mov
cmpsl
roll
out
add
pop
cmpb
aaa
insl
pop
mov
sbb
jnp
push
sbb
xchg
jl
jle
mov
cmp
lahf
lods
test
cmp
push
arpl
mov
xchg
or
add
dec
xor
std
xchg
shll
jbe
inc
mov
andl
test
push
out
sub
cmp
stos
sahf
lds
fstpl
hlt
and
pop
dec
cmp
dec
rcll
add
aas
mov
lods
sahf
popa
xor
repz
add
or
scas
pushf
pop
mov
pusha
shll
ss
fdivs
repz
sub
fidivs
aas
jg
lock
outsb
cmpsb
cmpsl
cmp
cmp
mov
clc
lods
jecxz
dec
pop
leave
fstpl
fmull
add
sbb
sbb
out
dec
jp
outsb
jne
movsb
fld
ror
and
mov
sbb
and
orb
dec
dec
dec
mov
pop
sar
add
lret
xor
es
pop
fimuls
add
or
fimull
shl
loopne
in
push
xchg
pop
aaa
imul
aad
jmp
mov
add
imul
push
mov
jp
roll
sub
arpl
setne
inc
xor
jl
adc
out
push
inc
add
enter
notl
lret
aam
add
dec
fldcw
jae
nop
jmp
push
call
test
decl
shrb
pop
mov
dec
stos
stos
xlat
add
jp
shlb
fsubrl
inc
in
repnz
or
scas
mov
mov
mov
dec
push
cmp
cmp
xchg
inc
push
dec
xor
or
iret
inc
ds
sbb
mov
inc
lahf
cmp
mov
fiaddl
out
pop
test
testb
rcl
push
cmpl
mov
and
push
push
add
jnp
cmp
jge
mov
lret
xor
mov
sarl
in
daa
lock
sub
xor
movsb
cld
cmp
cmpsb
push
sarl
iret
idivl
mov
fimuls
je
in
mov
pop
loopne
jne
adc
jns
xchg
cmp
pushf
pop
xchg
fstpt
icebp
add
sbb
xlat
in
jecxz
ret
adc
cmpb
test
or
ljmp
pushf
and
repz
and
cmpsb
test
stc
aad
test
push
es
jnp
repnz
sub
mov
pop
orl
dec
inc
iret
lahf
loope
sbb
push
nopl
xchg
jl
shrl
icebp
fcmovb
xor
xchg
into
lret
daa
test
aad
jae
pop
cmp
lock
ja
adc
subl
xor
adc
aad
xchg
mov
xor
push
adc
push
dec
mov
mov
cmp
punpcklbw
cmp
pop
pushf
in
enter
fimull
cltd
ljmp
cmpsb
xchg
mov
add
cmp
jae
xor
cmpsl
imul
push
popf
adc
aas
cmpsl
mov
popf
lods
nop
test
test
jnp
and
inc
test
out
add
shl
loopne
gs
stos
mov
jle
pop
mov
jl
sub
or
xchg
mov
lds
cltd
adc
or
lcall
cld
or
imul
mul
jecxz
lods
add
ljmp
test
test
pop
outsb
sti
cmpsb
sub
adc
mov
xchg
push
fcmovb
pop
mov
and
lods
jbe
fstpl
cmpsb
mov
cmpb
push
xchg
pop
repz
loope
xor
inc
cli
add
es
ficomps
adc
in
sub
je
dec
add
push
pusha
imul
out
pop
into
push
arpl
scas
aad
popf
pop
pop
lock
and
repz
or
push
cs
test
or
cli
stc
outsb
xchg
and
pop
ret
push
push
jl
add
lret
testl
inc
dec
mov
xor
sahf
inc
xorl
xorb
mov
xchg
jge
cmp
fstpt
nop
jge
fldt
ss
push
pop
cs
jno
cmpsb
js
push
inc
lock
push
das
lret
shl
insb
sub
push
cltd
insb
les
jge
sub
outsl
mov
push
push
scas
adc
daa
ljmp
dec
sub
ror
pop
pushf
mov
sbb
sub
fimull
lds
scas
loope
add
cmp
enter
dec
sub
pop
dec
sub
inc
inc
shrl
push
push
push
addr16
fdivs
dec
xor
orl
imul
jecxz
dec
sub
xchg
adc
dec
push
mov
push
mov
aaa
into
ja
sarb
mov
call
into
xlat
rorl
sub
rorb
or
xchg
dec
das
aas
loope
pop
aas
jmp
lahf
movsl
mov
sbb
sub
adc
stc
pusha
repz
adc
ljmp
mov
or
and
sbb
jp
push
sub
in
cltd
data16
add
cld
inc
enter
clc
adc
or
mul
sbb
scas
jb
fdivs
ljmp
xor
loope
lahf
and
or
sbb
pop
cmc
and
cli
pop
pop
in
push
xor
ljmp
add
mov
lret
dec
rcrl
sbb
cmpsb
test
inc
cmp
fidivl
dec
and
dec
add
adc
sbb
movsb
in
xchg
ljmp
and
sahf
loope
lret
cltd
sub
repnz
lods
pop
inc
mov
xchg
xchg
jge
test
cltd
fmuls
insl
jge
sti
jae
pop
or
scas
repz
inc
push
out
jl
mov
and
mov
or
jecxz
inc
push
push
sbb
pop
fcmovne
sub
scas
inc
adc
or
test
cld
jge
mov
xchg
aam
movsl
sti
push
int3
dec
lds
mov
stos
stos
xor
daa
pop
xchg
xor
mov
loopne
fisubrl
xor
xchg
dec
push
sub
xchg
out
rclb
rorl
testb
mov
call
cltd
inc
in
aam
mov
in
pop
sbb
fnstenv
adc
mov
or
push
dec
rorl
aam
sub
adc
pop
shr
gs
das
sub
mov
sub
scas
fbstp
bound
inc
dec
mov
cmp
mov
jl
mov
cld
mov
xlat
xchg
in
xor
scas
mov
mov
push
jle
mov
ret
lret
xor
dec
mov
out
je
rclb
and
sub
lcall
add
rcl
cmpsl
out
test
ds
stc
jbe
and
cmp
lahf
cmp
sbb
loop
jno
ss
std
mov
sti
sti
xorl
mov
aas
jge
cmp
rorl
cwtl
clc
and
ror
insl
testb
mov
std
dec
inc
or
sbb
xor
movsb
cmp
inc
daa
daa
jbe
pusha
mov
repz
xor
stc
test
sub
lock
in
push
cmc
inc
mov
pushf
loop
ljmp
pop
orl
dec
iret
rclb
cmp
call
movsb
or
mov
fwait
ljmp
or
jno
fidivs
je
repz
or
and
push
jge
mov
push
dec
pop
movsb
sub
push
mov
mov
xchg
loopne
pop
xor
je
test
and
mov
pusha
pop
push
sbb
dec
cwtl
ret
hlt
push
push
or
xchg
pop
mov
or
test
enter
cmpsl
lods
icebp
xor
inc
dec
or
jmp
out
fs
or
rclb
bound
out
fstl
cmp
ds
sub
rcrl
mov
mov
testl
dec
pop
add
sub
sub
subl
push
sub
or
adc
jb
adc
cmc
int3
data16
xor
xor
mov
icebp
push
jb
or
data16
sub
lret
out
sbb
jmp
jae
jns
mov
les
cmp
sub
push
xor
push
es
sti
je
jecxz
sub
xor
or
pop
fs
and
xchg
lret
loop
fs
jns
fiaddl
fwait
sbb
mov
push
inc
mov
and
and
sbb
fistpll
inc
daa
cld
aam
xor
xor
scas
mov
in
sbb
call
mov
rcr
adc
nop
or
add
mov
add
mov
sbb
push
adc
jnp
pop
sahf
rolb
fisubl
push
push
xchg
fcompl
shl
cwtl
sahf
cltd
jnp
xchg
jmp
push
test
mov
movsb
sti
mov
and
sbb
and
mov
loope
test
jmp
xlat
sbb
cld
enter
call
ret
jl
daa
or
repz
fisttpll
cmpsb
ljmp
mov
push
lcall
lds
jne
loopne
add
mov
ficoml
movsb
xchg
mov
dec
cmp
adc
or
daa
sub
jnp,pt
mov
psrld
push
fists
ja
outsb
int3
loopne
and
mov
shl
dec
in
lret
filds
jbe
jae
out
cmp
mov
rolb
shrb
testb
lret
fidivrs
leave
cmp
xchg
lahf
cmp
push
mov
enter
adc
xchg
scas
dec
jg
push
add
add
xor
xchg
adc
dec
mov
sahf
mov
adc
xchg
adc
inc
and
jp
in
arpl
pop
stos
ss
or
lea
pop
lds
fwait
mov
mov
add
xchg
push
sbb
sbb
fxtract
rcl
push
add
xchg
dec
and
test
xchg
lahf
push
cs
pop
roll
int3
cmp
int
sahf
aas
movsl
mov
push
jns
mov
cmp
movsl
sbb
in
ret
negl
lahf
testl
into
cltd
dec
movsb
shlb
push
fwait
std
punpckhdq
push
out
add
adc
lods
ss
clc
xlat
add
mov
out
lods
sbb
or
test
pusha
test
jae
les
inc
inc
dec
xor
jno
pop
out
je
pop
movsl
ja
test
stos
jg
nop
je
mov
lcall
insl
and
mov
sti
lea
bound
push
mov
aad
das
imul
faddp
pop
ss
xchg
or
mov
mov
sub
jns
lods
push
push
jg
push
addb
add
dec
pop
loopne
mov
testl
stos
repnz
sub
adc
add
mov
mov
jmp
and
notb
xchg
dec
in
mov
push
ds
pop
jp
ds
iret
loopne
sqrtps
mov
cmp
xchg
popa
movsb
fmuls
cs
sahf
mov
and
cmpsl
mov
inc
pop
daa
daa
stos
imul
call
inc
bndstx
and
mov
fyl2xp1
cmp
inc
mov
fnstsw
xlat
movsb
imul
cmpsl
sbb
xchg
jmp
xchg
cmpsl
jmp
imul
mov
outsb
push
jmp
les
fdiv
push
mov
mov
dec
rcrl
and
lret
jns
rcrl
test
cmp
call
inc
mov
hlt
scas
sub
in
lret
jno
jmp
clc
neg
insl
mov
rolb
test
js
rcll
inc
jge
cmpsl
dec
inc
cmp
jmp
xor
mov
add
mov
aad
scas
sbb
int3
stos
xor
lcall
fsubrl
and
xorb
lcall
into
aas
ds
lods
sbb
mov
lahf
sub
inc
mov
in
outsb
add
je
add
lods
outsb
inc
int
jb
stos
hlt
xchg
aaa
hlt
sub
sub
ret
test
xor
mov
fs
adc
inc
insb
cwtl
cwtl
incl
pop
inc
scas
lea
movl
add
add
outsl
jne
jbe
adc
xchg
xchg
pop
scas
stc
add
fs
add
nop
or
js
pop
sbb
andl
into
xor
ret
pop
push
push
or
mov
arpl
dec
and
hlt
add
test
xlat
jo
adc
in
or
out
aam
add
mov
cmp
sahf
jb
pop
push
dec
xor
aam
ficoml
test
fstps
jmp
xor
stos
cltd
in
and
idivb
dec
push
xor
jae
and
pop
rcrl
rorb
pop
jae
push
push
add
xor
pushl
das
cmpsb
mov
push
push
mov
push
cwtl
test
cwtl
mov
mov
push
push
ds
sarb
sbb
addr16
in
test
push
out
add
lock
push
jno
pop
mov
test
adc
aad
movsb
into
inc
lahf
cmp
cmpsl
adc
test
mov
xchg
outsl
aaa
cmpb
mov
or
dec
mov
cmp
mov
jnp
and
pop
push
xor
mov
sub
data16
jnp
xchg
pop
lds
push
cmp
mov
jle
les
cli
and
rcr
imul
imul
testb
inc
xchg
cmc
aad
sarl
popf
dec
outsb
lods
ss
ss
rcll
rclb
push
jle
mov
stc
jae
xchg
add
pusha
icebp
gs
subl
mov
or
out
sub
push
stos
mov
scas
adc
int3
js
dec
and
push
scas
in
mov
aaa
sbb
xor
inc
ss
out
lock
popa
std
sub
and
test
lods
adc
outsb
jb
dec
repz
mov
out
add
dec
or
or
shrl
or
int3
cmp
mov
and
inc
push
xor
adc
mov
fcomps
pop
mov
rcll
imul
xor
xor
jo
shrb
lea
pop
scas
jo
cmpsl
subb
xor
cltd
jp
push
jno
pop
xor
enter
iret
fcmovb
adc
pop
mov
cmp
dec
mov
addr16
ficomps
aaa
push
arpl
pop
sub
daa
insl
popa
mov
addl
lock
enter
cmpsl
push
push
lock
aaa
jnp
push
std
push
jnp
jmp
sub
bound
loope
inc
sub
out
ljmp
inc
mov
mov
fiadds
aaa
cmpsb
jne
fldt
mov
cmp
mov
push
cli
xchg
rcrb
sahf
pop
test
es
ret
sbb
adc
pop
test
js
negl
call
add
push
jno
scas
sub
and
adc
scas
lock
mov
into
pop
ret
scas
mov
cltd
in
cmc
inc
and
and
cltd
xchg
subl
je
test
cmp
dec
xor
imul
push
mov
mov
xor
loop
icebp
and
mov
mov
adc
mov
fsubr
call
or
dec
dec
and
mov
out
loope
mov
jge
leave
test
jne
inc
stos
cwtl
sub
cld
and
sbb
add
sub
or
sub
sbb
in
mov
mov
mov
stos
xor
add
xchg
subl
jno
repnz
add
aad
cwtl
sbb
fsubs
out
mov
mov
xor
cmp
fcomps
cmp
enter
adc
ds
hlt
test
mov
xchg
dec
jne
nop
addr16
jg,pn
idiv
cmpsb
lret
sbb
jbe
cmp
or
jns
xlat
xlat
std
push
adc
outsl
xchg
repnz
fidivs
rcr
adc
xchg
push
dec
mov
mov
adc
test
rorl
out
leave
in
stc
add
lock
ret
mov
adc
adc
std
mov
push
subl
pop
cmp
mov
adc
jno
cltd
push
std
cmpsb
test
stos
xchg
cwtl
popf
mov
jae
insl
sbbb
int3
jge
sbb
mov
add
out
cld
xor
int
jae
mov
mov
add
int3
int
pop
xrelease
or
cmpsb
mov
mov
jge
daa
and
jmp
or
mov
in
mov
daa
test
outsb
jmp
fs
xchg
add
pusha
in
ret
inc
push
mov
fdivp
and
fildl
or
or
push
fildl
lods
gs
sbb
xor
es
push
adc
push
daa
dec
and
adc
jb
push
int3
xchg
sbb
and
or
and
sub
or
pcmpeqb
lods
mov
dec
jbe
jl
test
inc
data16
imull
dec
ja
sub
enter
dec
jl
xchg
push
sbb
push
mov
popa
cmp
push
adc
rclb
push
add
jecxz
inc
repz
dec
pop
rorb
cmp
add
inc
add
mov
dec
push
lods
sti
dec
inc
jmp
es
mov
cmpsl
subb
popf
add
push
shrb
xlat
pop
vinserti32x8
pop
icebp
fistpl
dec
jg
push
push
repz
loopne
jmp
addr16
out
and
mov
mov
mov
mov
xchg
popw
out
inc
xor
insl
fcomps
ds
jb
int3
fidivs
bound
sbb
ja
out
or
dec
push
ret
and
cwtl
cli
out
movsl
stc
bound
inc
mov
add
fstp
xchg
mov
xor
stos
inc
cwtl
ljmp
mov
arpl
cmpsb
dec
aad
and
lea
pop
mov
dec
pop
shlb
mov
loope
inc
and
stos
cld
adc
loope
test
sbb
cmpsl
cmpsl
fsts
sub
and
mov
or
gs
add
lods
lock
mov
popf
scas
or
adc
pop
fs
fcompl
repz
mov
insl
loopne
xchg
cmp
xchg
cmpsb
pop
popf
outsb
idivb
jo
mov
movb
mov
cmp
dec
icebp
push
testl
mov
insl
popf
xchg
pop
mov
lret
pop
pushf
aas
insb
add
mov
call
nop
or
roll
push
inc
mov
test
xchg
dec
stc
pop
add
stos
pop
fbstp
out
add
xchg
mov
sbb
pop
test
xor
xchg
pop
in
cmp
fstps
mov
push
add
pop
mov
adc
or
loope
or
mov
icebp
rclb
repz
dec
or
mov
fucomi
test
aas
ds
add
out
in
mov
and
mov
popf
incb
gs
pop
sub
daa
pop
mov
loopne
mov
sbb
push
leave
fisttpll
xor
mov
int
mov
push
cltd
aad
jg
mov
mov
clc
test
jbe
jle
push
or
mov
movlps
push
lcall
fistps
in
push
rorl
scas
mov
in
lods
jg
xchg
and
aas
out
negl
sbb
rorb
push
out
inc
pop
aam
or
pop
push
adc
lock
mov
jmp
and
adc
paddsb
stos
repnz
ljmp
popf
xchg
xchg
sub
setle
js
cmp
outsb
imulb
jnp
push
push
push
xchg
add
lcall
jmp
gs
ret
leave
ja
test
xor
or
iret
icebp
cs
pop
and
adc
mov
adc
mov
xor
insb
int3
stc
je
in
leave
push
xor
stos
les
shlb
add
xchg
imul
cld
aad
in
out
sti
push
test
in
nop
lret
push
addr16
xor
dec
loop
jle
jg
pop
add
inc
and
lcall
cltd
add
inc
es
push
jl
mov
pop
leave
pop
int
or
or
lods
sti
mov
rorb
sbb
and
rorl
xchg
cwtl
js
inc
or
inc
jmp
fwait
mov
lods
ret
jge
ret
fisttps
cltd
loope
mov
ja
xor
aam
movhps
adc
cmpsl
in
fadds
dec
enter
add
outsb
jle
into
pushf
pop
mov
shl
adc
push
push
mov
sbb
inc
loope
adc
in
inc
sub
jle
pop
out
sbb
enter
mov
mov
xor
lret
mov
push
jae
mov
fbld
push
sti
jle
push
arpl
repz
mov
pop
ja
loope
out
xor
dec
movsl
rorb
setae
cmpsb
add
sarb
daa
test
cld
call
test
roll
sarb
movsb
das
fs
movsb
adc
fcmovb
and
es
outsb
and
lcall
icebp
xchg
cli
test
jg
xor
mov
push
ret
xchg
mov
cmp
ret
ja
jmp
push
push
sbb
mov
inc
bound
cmp
mov
dec
pop
mov
cli
and
cli
popf
pop
daa
or
in
sbb
leave
out
xor
outsl
insl
jbe
jbe
dec
stos
dec
lock
adc
push
int3
sbb
sub
cld
dec
jae
andl
xor
fisubl
inc
dec
push
pop
lds
lret
je
mov
dec
pop
aad
push
jp
fisubrl
fstpl
js
sahf
ret
les
adc
inc
lds
test
popl
pop
xchg
pop
cld
jns
adc
cmp
cmp
lcall
pushf
clc
out
sti
imul
das
dec
mov
add
ja
sbb
add
sarb
loop
jae
xchg
push
int
add
in
pop
addr16
lods
xchg
inc
sub
jns
sub
lods
xchg
or
cmpsb
repz
sarl
int3
add
mov
lds
ret
push
sub
jns
fisubl
outsl
scas
sub
sub
cmp
inc
shr
loop
in
pop
and
fwait
cmp
xchg
mov
rcl
clc
testb
in
das
xor
xchg
das
and
cmp
and
sarb
dec
xchg
popa
push
mov
mov
xor
jl
mov
scas
xchg
adc
jl
and
add
pop
mov
js
popa
fldl
outsl
fldenv
or
xlat
adc
test
add
mov
push
pop
andb
jnp
xor
aam
lods
int3
ss
mov
jecxz
sbb
dec
push
lea
dec
mov
and
or
add
movsb
xchg
push
push
add
xchg
into
or
mov
ret
jl
sti
mov
shrb
inc
add
stc
pop
insl
and
cmp
pop
daa
insb
sti
mov
jle
mov
inc
inc
repnz
bound
xchg
out
sub
add
xchg
in
push
dec
js
jmp
sub
and
pop
insb
repz
and
int
rcr
lods
xchg
mov
bound
popa
lds
xchg
popf
imul
pop
xor
pop
aaa
bnd
ss
xchg
rcrl
cltd
fsubr
and
movsb
stc
adc
shlb
or
pusha
mov
push
add
lock
push
or
test
mov
sub
adc
jnp
sub
cmc
xor
test
iret
sbb
std
jb
adc
cmpsb
pop
stos
insl
lret
cld
les
dec
mov
push
iret
xor
mov
add
xor
pop
xchg
mov
repnz
adcb
fmull
add
clc
xor
test
add
ljmp
push
jb
pushf
fnstcw
cli
out
mov
jle
jl
add
outsb
cmpsl
enter
leave
mov
test
jecxz
push
mov
imull
rorl
jo
stos
mov
xor
fstps
insb
int3
sub
pushf
add
jns
add
mov
das
mov
testl
je
pop
pop
push
and
sbb
int
xchg
and
cmp
test
loopne
pop
xchg
imul
icebp
rcrl
arpl
push
add
popf
xchg
mov
xorb
sbb
inc
rcrb
xchg
es
bound
pop
fildl
sbb
push
push
out
repz
lods
out
rol
push
enter
add
add
das
mov
lods
jne
xor
mov
das
push
mov
adc
js
sub
or
adcl
arpl
mov
pushf
add
jge
jge
cwtl
cmp
outsb
xor
xor
stos
aas
jbe
out
dec
and
mov
pop
jns
jns
call
movsl
mov
xor
ljmp
cmp
mov
mov
lcall
mov
mov
jmp
fwait
pushf
push
test
jg
or
push
cmp
insb
pop
fisttpll
scas
push
sbb
mov
or
sti
clc
mov
and
sti
jmp
cmp
insl
add
test
loope
inc
lods
in
out
mov
out
mov
mov
mov
out
daa
jae
and
rclb
and
fldenv
adc
dec
add
add
jmp
repz
mov
insl
repz
push
pop
or
pop
adc
mov
mov
mov
cmpsb
jns
aas
adc
int3
mov
sbb
sub
repnz
mov
fmuls
jl
jae
dec
add
cmpsb
clc
pop
lock
pop
gs
flds
ds
push
adc
notl
movsb
mov
sub
and
pop
jl
cltd
mov
jnp
test
lea
jecxz
ret
xor
sbb
out
xorb
pop
mov
lahf
mov
ret
imul
mov
or
test
insb
cmpb
jge
and
leave
sbb
shll
adc
dec
ss
fldl
insb
rorl
xorl
mov
out
cwtl
xchg
popf
insb
push
loope
cld
das
out
loop
inc
xor
sub
lods
xor
repz
sub
push
lahf
fldl
icebp
stos
nop
in
call
mov
cmp
lahf
jmp
mov
adc
int
sti
loopne
jg
aaa
fs
mov
jp
jmp
out
sub
aas
and
xchg
insl
loope
and
adc
leave
push
mov
push
push
cmp
sub
rorl
mov
je
mov
stos
test
mov
fwait
mov
repnz
rorb
sub
xchg
xchg
gs
push
mulb
dec
or
xor
rol
fisubrl
jmp
xchg
inc
addr16
or
fdivs
mov
mov
push
pop
sub
sub
arpl
mov
arpl
stos
in
push
pop
inc
cwtl
shlb
mov
jae
adc
sub
mov
repz
mov
jl
dec
push
cmp
fnstcw
loopne
int
filds
test
mov
xor
pop
push
and
pop
fidivrs
mov
adc
mov
add
sub
fs
xchg
dec
fildl
inc
in
dec
jae
subl
cmp
setae
dec
arpl
call
adc
jg
mov
sti
mov
lods
xor
mov
sub
mov
pop
or
stc
outsb
ja
or
mov
pop
dec
stos
xchg
mov
ljmp
cmp
dec
xchg
inc
in
aaa
adc
or
pop
data16
inc
mov
outsl
dec
mov
jp
sbb
je
sub
mov
cmp
push
dec
cwtl
iret
mov
mov
popa
sub
xchg
inc
loope
daa
push
aam
fcomps
adcl
sbb
jg
stc
outsb
ss
pop
push
or
pop
pop
int
je
mov
jns
xor
fs
add
xchg
jne
push
sub
sbb
mov
imul
lahf
nop
mov
xor
cmc
enter
ficompl
and
lock
stc
pop
test
jp
xchg
rorb
out
adc
dec
test
or
or
lahf
inc
iret
mov
rcll
add
mov
cmp
cmp
mov
mov
jns
mov
or
xchg
in
xchg
fiadds
or
das
pop
mov
lods
insb
rcll
shlb
mov
xchg
repnz
pop
xor
push
pop
adc
hlt
mov
push
fwait
push
dec
dec
cwtl
fldenv
cmp
fcom
sti
scas
nop
testb
add
mov
ret
icebp
cmpsb
fwait
pop
adc
cmovae
mov
mov
dec
lahf
fucomp
popf
pushf
cmpsb
adc
xor
aam
lock
pop
mov
iret
scas
aaa
mov
dec
push
sub
imul
push
inc
stos
cli
popa
stos
push
cmpsl
imul
push
jbe
rolb
addr16
xlat
cmp
insb
mov
imulb
pop
arpl
sahf
dec
mov
xchg
xor
popf
jnp
and
inc
int3
cmpsl
ljmp
pop
adcb
test
mov
mov
imull
int
faddl
push
adc
lock
int
sahf
push
shlb
pop
sbbl
cmp
in
push
xor
xchg
inc
fdivl
lahf
inc
xor
test
mov
push
sub
ret
adc
adc
icebp
jle
sub
rclb
stos
std
andb
cmp
test
enter
outsl
cmp
dec
push
mov
cmp
lahf
mov
jmp
stos
dec
data16
jnp
push
xchg
das
scas
sub
sti
cmp
inc
cmc
scas
fdivrs
dec
cmp
cmp
cs
mov
repz
lock
movsb
gs
adc
gs
mov
pop
pop
lret
nop
ja
inc
add
xchg
daa
mov
or
xchg
adc
sub
movzwl
movsb
pop
sbb
inc
sub
jns
push
cs
and
jns
cltd
sub
in
out
imul
mov
inc
jmp
into
ljmp
testb
dec
insl
dec
daa
xorb
xor
int3
xor
jns
je
dec
iret
cli
jle
rorb
sbb
jp
mov
sbbl
icebp
jle
dec
xchg
push
int
mov
ret
adc
add
push
enter
iret
in
lea
sub
pop
push
sub
clc
pop
in
mull
orb
das
jecxz
mov
jae
mov
mov
clc
stos
in
js
bswap
arpl
rcr
dec
sahf
mov
lds
xchg
sahf
dec
xchg
ficomps
std
mov
push
and
fsubl
sti
xchg
movsl
ret
adc
mov
mov
add
xchg
ja
es
pushf
mov
jo
imul
jmp
jae
mov
out
mov
mov
scas
inc
mov
xlat
cwtl
insb
dec
push
add
cmpsb
push
cmc
in
xor
or
push
add
sub
dec
jecxz
mov
stc
xchg
push
cwtl
cmp
out
movb
fistps
push
adc
inc
jmp
inc
adc
cmp
pop
push
lea
push
call
sub
pop
mov
test
cmpsb
jmp
mov
push
dec
adc
sub
divl
or
add
mov
xchg
test
out
jmp
lret
pop
jle
dec
and
aad
sub
push
mov
mul
add
dec
lock
fwait
and
cld
xor
aaa
sub
mov
jb
xor
mov
popa
repnz
repnz
das
mov
push
lea
jo
xor
or
subb
test
add
mov
cmp
lret
sti
inc
fwait
jbe
jg
mov
in
movsb
loop
sbb
jo
xchg
arpl
and
pop
adc
enter
pop
stos
test
adc
or
jmp
shrl
cmpb
or
stos
fnstenv
test
gs
jo
imul
push
jle
push
or
mov
scas
sti
das
shlb
or
adc
subl
outsl
and
ret
push
xchg
ljmp
out
arpl
and
lods
jecxz
int3
dec
mov
pop
cs
js
andb
fmuls
mov
inc
syscall
push
cmp
dec
loopne
rcr
call
mov
jo
rcll
xchg
les
sbb
call
and
jg
jmp
and
and
clc
in
xchg
mov
pusha
fdivrs
pop
jns
out
out
dec
daa
sbb
pusha
shl
dec
in
rclb
rcrl
lea
cld
or
cwtl
inc
and
mov
outsb
outsl
dec
pop
dec
or
cmpsl
pop
or
andl
push
jae
fldl
cltd
outsb
icebp
fcomp
mov
pop
cmp
and
inc
adc
cwtl
sarl
lret
adc
lods
mov
fsubl
fwait
sti
loopne
mov
cmpsb
xor
jbe
shlb
adcb
inc
ss
ss
test
std
xlat
adc
add
push
fmul
adcb
mov
lods
push
jne
push
add
push
add
xchg
jb
mov
ficoms
popf
or
lcall
xchg
daa
insb
out
dec
xchg
xor
test
sub
inc
mov
xchg
in
xchg
stos
in
and
out
mov
xor
xor
cltd
jmp
stos
jbe
inc
mov
cmpl
dec
jg
jl
pop
cmpsl
dec
test
xchg
xchg
sbb
adc
jg
stos
xchg
push
cld
or
daa
sbb
xor
lods
lock
dec
shll
xor
stc
imul
adc
inc
mov
arpl
fldt
xor
inc
add
mov
in
cmc
sbb
mov
mov
movsb
mov
fwait
sub
int3
dec
les
cmp
jns
scas
ja
mov
insb
sbb
push
push
jp
and
xchg
adcb
icebp
push
fiadds
ds
xor
mov
ja
adc
and
leave
jmp
out
clc
cli
xchg
pop
mov
inc
imul
pop
xchg
add
mul
imul
mov
push
cmpsl
mov
jns
lods
enter
movsl
fs
rcl
push
mov
pop
sub
jp
outsl
lods
mov
mov
roll
ret
mov
cmp
add
ja
jnp
ret
pop
movsb
inc
clc
push
mov
imul
call
mov
popa
shlb
cs
call
push
movsb
mov
fstpt
test
data16
jge
sbb
inc
dec
js
popf
sbb
out
test
jno
insl
pop
je
aas
add
mov
jge
and
fucomip
pushf
push
iret
inc
loop
inc
jb
xor
lds
into
lods
pop
xor
mov
or
lahf
add
sahf
push
in
push
adc
lock
add
or
scas
ja
pop
shrb
imul
sub
adc
xchg
adcb
flds
shrl
fidivrl
lock
cmp
xchg
pusha
xor
mov
sbb
dec
dec
xor
jo
in
out
insb
fmull
lds
or
inc
inc
jbe
les
sti
arpl
lods
xchg
test
fistl
mov
jne
mov
loopne
pusha
pop
jp
shr
pop
xchg
cmpsl
and
mov
add
cmpsb
fs
jle
aas
mov
fstpl
xchg
aaa
and
in
lret
xor
in
push
popa
push
xchg
xor
out
pop
cmc
mov
push
int
movl
or
add
sub
xor
mov
and
cmp
inc
js
push
outsb
and
punpcklbw
out
jo
test
loop
scas
rcl
xor
andl
cmp
stos
and
jns
data16
mov
adc
xchg
inc
sbb
les
stc
ret
dec
sarl
mov
imul
jne,pn
push
pop
nop
iret
add
lret
in
in
cltd
ljmp
sub
push
jp
adc
push
jge
inc
lret
sbb
xchg
push
test
xor
sti
or
and
cwtl
test
or
push
xchg
jge
xor
stc
push
cmp
add
jp
xlat
arpl
mov
mov
mov
push
movsl
loope
out
je
movsl
repnz
cmp
inc
pop
xor
insl
jbe
add
testb
call
xchg
cmpb
mov
pop
lea
jb
leave
ds
movsl
xlat
repz
sti
cmpsl
into
fimuls
adc
xchg
push
enter
push
mov
outsb
jo
pop
addb
pop
mov
nop
sub
dec
and
lods
mov
jno
push
xor
test
mov
xorl
insl
cmp
inc
add
movsl
test
imul
xchg
icebp
mov
or
pop
adc
sbb
fldl2t
fdivl
in
insl
repnz
mov
loopne
cs
mov
xchg
aas
push
inc
sbb
add
scas
daa
fnsave
loop
lret
out
or
cltd
add
sbbb
lret
clc
cmp
mov
xchg
jp
xchg
ret
mov
pop
mov
pop
cwtl
sbbl
orb
inc
mov
lea
je
sub
push
xor
push
sarl
mov
mov
fnsave
mov
dec
and
addb
push
jg
fisttps
push
xchg
fcomps
xor
ret
sbb
and
mov
hlt
rorl
leave
cmpsl
or
arpl
fsubl
cmc
scas
push
mov
cmp
xchg
cld
and
sarb
sub
rcrb
sbb
mov
outsb
push
xlat
js
push
mov
xchg
test
outsb
sub
push
inc
testl
add
mov
popa
repz
jbe
or
arpl
push
data16
xlat
es
jb
lahf
or
sbb
mov
daa
add
out
test
insb
and
in
clc
mov
in
sub
in
inc
lret
xor
and
cmp
in
dec
test
cld
dec
jnp
cli
ror
push
ss
jle
test
mov
cmp
jecxz
ss
addr16
cwtl
sbb
aad
push
add
lahf
nop
in
insb
jno
push
cmp
push
adc
pop
aad
ret
lock
lcall
xchg
xchg
cltd
or
inc
xchg
shl
mov
adc
cmp
adc
xor
mov
dec
nop
cwtl
repz
movsl
stos
lahf
fldt
or
push
lds
popf
pop
lds
aaa
mov
incl
adc
shll
movsl
push
mov
cld
jge
arpl
xor
ja
inc
lods
insl
ret
jge
sbb
cld
jno
mov
pop
adc
enter
jle
sub
lods
in
cmp
nop
pushf
enter
add
dec
lahf
pop
subl
fcompl
lods
iret
push
sbb
xlat
add
stc
pusha
stos
mov
rclb
push
mov
pushf
pop
cli
or
push
xchg
call
sub
cmp
sub
test
xlat
adc
adc
dec
xor
daa
xchg
inc
ret
enter
sub
xchg
pushl
fbld
popf
out
jmp
mov
insl
jnp
jb
cmc
out
or
shl
test
and
mov
loop
loop
nop
jb,pn
in
iret
xor
mov
dec
sahf
jge
ds
rcrl
aaa
filds
push
jnp
sbb
xchg
mov
clc
push
mov
mov
sahf
out
sti
dec
mov
push
lock
cmp
into
cs
and
cmp
sahf
pop
pop
loope
inc
shlb
outsb
add
insb
enter
or
not
push
mov
and
sub
or
adc
ds
jne
daa
cmp
in
jne
and
orb
test
leave
xor
jg
jge
mov
jge
pop
pop
jecxz
mov
pop
add
mov
jmp
xchg
pop
sbbb
loopne
hlt
lods
dec
aad
sub
push
xchg
fdivs
es
push
jl
je
push
jl
xchg
xor
pop
sub
imul
scas
fwait
mov
jae
popl
xlat
in
jne
cmp
pop
mov
cld
and
fistl
cli
fldenv
push
data16
aas
push
dec
cs
lret
aad
orb
xor
inc
lock
sti
je
dec
inc
mov
aas
inc
shlb
mov
mov
adc
test
outsl
or
in
sbb
shl
pushf
push
aam
mov
sub
fistl
pop
mov
sub
add
pop
push
stos
pop
pusha
pop
pop
popf
je
shrb
rclb
push
or
ret
pop
mov
add
jl
movsl
and
test
cld
adc
idivb
pop
inc
pop
scas
cmc
and
ss
ret
mov
aas
xor
fdivs
mov
xor
pop
filds
pushaw
out
sub
sbb
jb
push
std
add
pop
mov
mov
mov
imul
movb
lahf
mov
xchg
cli
inc
std
test
fdivp
xchg
or
loopne
repz
adc
pop
pop
enter
in
xor
cmp
aas
cmpsl
push
ja
pop
ret
cwtl
jle
add
cmc
ret
sarl
gs
fwait
dec
xor
notl
jmp
sti
and
fs
nop
es
adc
push
xchg
or
or
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
xor
jmp
push
cmpb
mov
icebp
cltd
xchg
sbbb
hlt
jp
fstpl
jp
or
jp
in
xor
ret
jmp
rclb
test
lods
fdivr
out
out
and
cmp
arpl
ds
daa
inc
mov
bound
loopne
add
pop
aaa
lret
sub
icebp
cmp
adc
test
sub
adc
mov
cmc
pop
cmp
xor
jb
lods
adc
aad
int3
mov
cmp
loope
or
enter
fmull
scas
jg
enter
pop
test
push
pop
clc
dec
jl
les
icebp
jae
sub
clc
sahf
mov
imul
mov
push
xor
push
cmpsb
call
add
adc
loope
jne
ds
xchg
leave
fisubrs
mov
cmp
jp
fidivrl
sub
fcoml
adc
insb
fadds
bound
fcomps
xlat
push
adc
lahf
mov
or
adc
insb
dec
cmp
insb
jge
fcompl
repz
jo
xor
leave
pusha
lods
jb
pop
lret
hlt
rorl
popa
jnp
adc
les
in
int
mov
push
mov
sbb
sarl
addr16
dec
aaa
jae
insl
dec
cmp
lock
test
mov
mov
movsb
cmp
sbb
aaa
cli
inc
adc
jno
outsb
push
lret
pop
sbb
and
stos
or
pop
pushf
stos
fldt
or
sbb
cld
dec
push
dec
lret
call
sbbl
notl
cwtl
in
movsl
int3
stos
movsb
xlat
and
jmp
sbb
rcrl
push
xor
aad
mov
dec
insl
in
fildll
inc
and
push
shll
int3
jne
or
xlat
imul
jno
daa
mov
iret
push
daa
and
jb
cmp
push
cmpsb
mov
cltd
mov
push
enter
xchg
jb
scas
mov
mov
mov
popa
adc
mov
int
mov
addl
sbb
loope
cmp
pop
insl
in
test
sub
test
sarl
fstpl
and
pop
repnz
cmp
mov
jmp
rcl
inc
cli
mov
jge
push
push
mov
scas
xor
je
ds
pop
ret
fsts
arpl
adc
out
cltd
mov
pop
mov
and
repz
stos
dec
add
jg
shrl
rol
mov
negb
push
hlt
out
cmc
dec
mov
adc
jb
aam
mov
push
data16
mov
and
or
addb
jl
xor
xchg
jne
fstp
arpl
xor
das
inc
lcall
aaa
jecxz
ljmp
jnp
mov
call
addl
pop
push
je
movsb
push
cld
pop
cmovle
pop
lret
sbb
mov
or
call
test
xor
mov
js
jae
in
clc
cmpsb
sub
add
cli
and
push
loop
mov
adc
out
nop
adc
inc
inc
cmp
sarb
inc
arpl
subb
cmpsl
movsl
nop
jge
jle
xor
call
mov
adc
leave
push
pop
hlt
xor
sbb
iret
inc
jae
cmpsl
das
ss
xchg
sahf
cli
xchg
dec
pop
fidivrs
icebp
jo
cltd
cmp
mov
mov
and
jne
push
mov
jmp
loopne
outsl
mov
xchg
stc
and
jle
cmp
bound
scas
mov
mov
sbb
push
out
xchg
mov
xchg
mov
jecxz
or
cmp
aaa
into
jecxz
cmp
sub
add
loop
jecxz
jo
sbb
xlat
lret
movsb
int
stos
je
sub
scas
sub
lock
jl
xchg
sbb
sbb
xor
insb
jo
lret
cmp
or
lds
inc
nop
dec
out
mov
pop
test
mov
mov
pop
cmp
dec
cmp
in
push
xor
xor
jnp
or
add
insl
inc
sub
frstor
pop
xchg
or
bound
push
sbbb
inc
hlt
pop
xchg
test
rolb
call
xor
and
xchg
popf
sub
push
jbe
push
mov
mov
xor
les
mov
xor
stc
xor
out
push
cmp
jge
fbld
gs
stc
mov
test
mov
shll
xchg
shr
jae
inc
xchg
idivl
xor
pop
stos
add
push
lahf
mov
aas
xor
cmp
push
push
mov
mov
sub
xor
lods
jle
out
mov
fnstcw
movsl
mov
arpl
cs
int3
daa
rcrb
jp
jo
xchg
out
shrb
or
rol
mov
fwait
xchg
cli
in
enter
sbb
mov
lret
fisubs
in
xlat
fisubrl
je
aaa
sbb
and
stc
and
rorb
xchg
mov
cmp
mov
movsl
in
xor
add
daa
pop
xor
lea
xor
or
and
roll
sub
cmp
imul
popa
lods
push
jmp
lcall
jmp
dec
adc
pop
adc
dec
dec
stos
inc
xor
roll
jb
mov
push
repz
adc
mov
int3
mov
pop
jmp
xor
test
mov
push
lcall
mov
xchg
push
pop
jbe
jecxz
mov
jl
xor
mov
scas
nop
nop
push
push
jg
jae
les
push
int3
jae
push
fsubp
insl
lods
shrb
or
add
js
cmp
movsb
jg
jecxz
xlat
leave
insb
aad
out
adc
pop
loop
mov
dec
mov
pop
stos
inc
test
sti
push
pop
inc
sbb
popf
popl
loopne
cltd
mov
shll
sbb
insl
push
or
lea
lret
ss
xor
pop
jnp
scas
inc
sarb
ss
pop
fbld
ss
push
repz
sub
shr
std
xchg
mov
call
fcmovnu
xchg
and
dec
push
jne
iret
push
mov
or
enter
jecxz
fld1
sub
aam
mov
out
or
xchg
add
std
dec
pop
jge
int
outsb
mov
nop
imul
aam
es
je
pop
dec
or
mov
jne
push
sahf
in
push
inc
outsl
mov
sti
ficoml
dec
imul
loop
jl
sub
and
in
and
fimuls
rcrb
scas
jmp
lea
popf
cwtl
xor
jns
mov
je
icebp
pop
push
bound
xchg
popl
lods
clc
push
add
xchg
out
popa
out
ret
xorl
push
adc
xchg
mov
outsl
lcall
lahf
dec
adc
or
xchg
flds
sub
repnz
dec
jp
mov
mov
ja
mov
mov
enter
scas
dec
or
mov
hlt
rorl
sub
outsb
lret
sbb
xchg
and
out
call
sbb
dec
add
jl
lods
add
lods
xchg
lret
addr16
mov
and
ds
jecxz
inc
call
sbb
and
hlt
push
mov
loopne
or
add
add
lock
mov
and
outsb
enter
xchg
pop
xchg
aad
jnp
lret
mov
xor
xchg
sub
fwait
lcall
jns
mov
addl
add
pop
xor
inc
dec
jbe
ret
sbb
lods
push
scas
cli
mov
dec
movsb
inc
jg
stos
jne
cmp
in
std
or
dec
add
jecxz
mov
push
loop
mov
adc
ficoml
lock
stos
gs
sahf
and
clc
popfw
mov
push
popa
cmp
out
xchg
lahf
add
mov
test
sbb
add
push
or
nop
addl
xlat
xor
dec
xchg
les
pop
enter
add
dec
mov
jb
gs
pop
lret
nop
in
lds
dec
mov
cmp
sbb
cmp
mov
lahf
push
jp
cmp
adc
loop
ljmp
dec
push
cs
inc
mov
mov
into
mov
inc
mov
in
loope
sub
das
sbb
sarb
mov
push
clc
out
cwtl
lcall
cmp
outsb
js
cmpsb
aam
rolb
or
shlb
jnp
cmp
ja
popa
call
out
bound
aaa
sbb
cmp
aad
and
xchg
loop
mov
mov
in
sub
dec
sti
mov
xchg
cmp
or
sar
pop
add
into
xor
es
std
push
ffree
pop
lret
mov
push
negb
fnsave
or
cmpsl
shrl
jne
add
or
mov
pop
in
mov
rolb
mov
cmp
mov
mov
ds
es
lret
ja
inc
xchg
xor
cmpsl
jae
lock
subb
xor
daa
cmpsl
add
cld
mov
and
xor
enter
jp
jl
loopne
sbb
add
xchg
push
or
jle
mov
bound
hlt
and
push
icebp
cmovbe
lahf
inc
mov
inc
inc
outsb
inc
gs
lahf
inc
push
sbb
sub
fdivrl
push
mov
mov
les
push
add
stc
pop
adc
jle
stos
jno
andb
pop
jae
xchg
ljmp
inc
xchg
or
lock
cmp
arpl
jae
pop
xchg
mov
repnz
test
mov
outsl
xor
jnp
jbe
add
push
xchg
mov
jg
sbb
cmp
cmp
cmpsl
shlb
stos
xor
aaa
xor
and
xor
cmp
xor
cltd
mov
mov
add
popf
imulb
dec
jae
mov
movsl
mov
jecxz
or
push
popa
mov
js
adc
jmp
shll
test
mov
pop
sub
jbe
out
xor
jo
push
subl
add
fsubr
sub
or
mov
mov
sub
popf
jecxz
dec
mov
sahf
leave
cltd
cld
cmpsb
movsl
imul
push
lea
inc
mov
pop
out
cmp
push
repnz
lods
dec
loopne
pop
clc
iret
pop
jmp
mov
iret
cmp
test
mov
iret
jno
loope
andl
xchg
mov
ds
aam
sbb
cld
leave
aam
adc
jp
sbbb
cs
das
lret
xchg
dec
icebp
mov
and
pop
out
mov
jecxz
push
inc
add
fdivrp
mov
ljmp
jno
pop
mov
cmpsl
jl,pn
cmpsb
hlt
add
outsl
mov
arpl
cmp
mov
cmp
and
sub
out
faddl
dec
push
es
jecxz
sbb
das
xor
ficoml
ljmp
inc
or
imul
mov
fidivrl
inc
pop
mov
sbb
jg
shl
loop
mov
paddusb
icebp
ljmp
mov
add
test
lcall
xchg
pop
inc
add
dec
or
sbb
shrb
jb
sbb
and
aaa
push
pop
mov
fcomi
add
mov
xor
dec
bound
scas
push
aaa
pop
fadd
imul
dec
stc
cmpb
add
or
ja
ljmp
rcrl
mov
cwtl
jecxz
mov
mov
cmp
xchg
jno
push
push
leave
inc
inc
xor
mov
adc
cs
scas
rcrb
and
push
cltd
cmp
fdivr
inc
jae
fldenvs
add
mov
insl
mov
sbb
sub
popf
sbb
jb
push
jo
adc
push
sbb
add
sahf
fsubrl
lds
xor
pop
push
mov
xlat
adc
sub
push
mov
ret
shrl
pop
sti
aad
fdivrs
pop
mov
imul
mov
inc
js
ja
push
fisttpl
mov
mov
add
loopne
jns
stos
test
sub
lret
adc
xchg
lcall
fstpt
dec
xor
jne
sbb
into
xchg
jl
pop
gs
popa
leave
adc
cmp
daa
mov
lods
scas
loop
fidivl
cmp
xlat
jns
xchg
ret
ljmp
mov
jne
icebp
xor
sub
adc
repz
icebp
pop
addr16
repz
les
jmp
mov
and
int3
mov
lea
mov
mov
xchg
mov
adc
push
mov
sub
fistpll
out
inc
cmpb
or
std
xor
inc
adc
sub
fs
daa
xor
fldt
fdivrs
int
pop
jp
int3
xchg
cmp
mov
shrb
xchg
xor
dec
scas
insb
xor
push
sbb
bound
sahf
add
pop
call
mov
pop
jle
insb
lods
mov
xchg
inc
rorb
test
dec
mov
and
jno
mov
pop
iret
or
in
es
jmp
jl
mov
insl
jb
movsl
imul
mov
shr
out
inc
jb
xor
pop
shlb
jmp
in
or
mov
and
jecxz
imul
repnz
jo
mov
stos
ss
es
sub
and
mov
aaa
mov
add
xor
rcr
inc
jns
out
ficoms
add
imul
das
sub
in
rorb
scas
popf
xchg
rcrb
stos
inc
std
add
loope
xchg
xchg
sahf
inc
lods
movsl
push
leave
pop
push
adc
add
mov
or
push
jl
fisubrl
out
cs
scas
std
cmp
mov
xor
adc
jno
ror
xchg
mov
pushf
popf
scas
arpl
call
xchg
lods
movsl
push
add
jae
pop
jns
xchg
inc
cmp
and
pop
sbb
inc
cmp
adc
sub
outsl
orl
ss
in
sub
mov
addb
jo
mov
mov
shrb
int
rorb
cmp
sahf
loop
mov
paddusb
dec
cmp
or
xchg
adc
jg
xchg
mov
std
insb
cmp
sbb
lods
cmpsl
lret
test
lock
dec
jno
adc
cmp
xor
mov
hlt
inc
aad
sub
int
in
repz
cmp
cwtl
ljmp
adc
add
sub
popa
push
sub
xchg
xchg
mov
shl
outsl
sub
ret
fidivl
outsl
lahf
stos
pop
repz
fidivrl
jl
dec
sti
ljmp
imul
sti
cmpb
stc
push
adc
xchg
rol
cmc
sub
ret
pushf
lcall
insl
in
xlat
or
add
ss
dec
shll
jg
leave
push
lock
ret
jmp
add
jecxz
cmp
out
mov
test
sbb
iret
adc
adc
imul
imul
or
inc
rorl
mov
divl
lds
leave
push
sub
fs
sbb
mov
add
dec
mov
mov
xchg
lock
movsl
sub
jbe
inc
mov
sub
sub
call
inc
pushl
aas
pop
dec
jbe
popa
adc
mov
adc
pop
inc
mov
adc
loope
pop
push
ret
outsl
int3
lret
add
negb
lds
mov
nop
insb
xchg
rcrl
hlt
cmp
fildll
sub
cwtl
sar
and
and
push
out
mov
test
lret
in
mov
daa
cmpsl
mov
inc
movsl
mov
lods
mov
mov
dec
jo
sbb
data16
ds
cmp
push
pop
cld
dec
aad
inc
xor
stos
xchg
cmp
xchg
dec
mov
ret
mov
out
cmp
stos
add
fxch
push
add
iret
leave
xchg
mov
push
insb
jb
cmc
nop
call
mov
mov
insb
fdivrs
ficomps
sub
sub
test
dec
xor
test
int
arpl
lahf
movsb
popf
es
inc
das
sbb
shlb
mov
jne
or
pop
mov
xchg
enter
jb
popa
cld
adcb
pop
lahf
stos
pop
mov
out
adc
pushf
jno
aas
ja
imul
adc
pop
jne
sub
adc
inc
push
test
dec
fsubp
mov
sub
xor
lea
pop
jo
out
adc
fnstcw
data16
push
outsb
rcrb
push
jge,pt
fcomps
scas
sbb
inc
test
sahf
pop
xchg
test
adc
xchg
outsb
scas
inc
scas
movl
adc
xchg
and
pop
fisubl
into
iret
sbb
inc
mov
loopne
cmp
dec
outsl
dec
subb
rcrb
in
call
fcoml
xor
push
imul
jbe
dec
rclb
sbb
rcl
outsl
orl
in
call
push
or
or
int
cltd
pop
insl
inc
mov
adc
sbb
or
mov
mov
faddl
je
test
pop
call
mov
dec
inc
lahf
outsl
pusha
pop
dec
cmpsl
movsl
mov
aaa
mov
leave
and
push
ret
pop
inc
jno
sbb
cli
cmpsb
ret
xorb
mov
pop
inc
jg
mov
sbb
loop
test
cli
lods
loope
push
jb
or
enter
inc
mov
jecxz
int3
mov
into
into
idivl
xchg
or
repz
mov
out
xchg
lea
xor
cmpl
pavgb
add
lret
aaa
push
mov
pop
fidivl
cmp
iretw
or
cmp
jl
push
cmpl
repz
push
xchg
int3
ficomps
mov
mov
inc
shrb
in
ds
pop
sbb
xlat
imulb
ja
pop
fstl
shlb
cmp
sahf
jns
ror
mov
andb
cltd
test
jno
outsl
pushf
inc
pop
lods
inc
movsb
xchg
mov
arpl
hlt
jge
ds
pop
sbb
fwait
je
test
pop
mov
movsl
icebp
insl
loope
insb
scas
or
mov
into
lods
mov
jle
mov
in
stos
movb
mov
push
in
mov
inc
add
mov
mov
xchg
add
fiaddl
mov
xchg
cmp
mov
pop
je
int
pop
sbb
loopne
les
push
mov
ljmp
add
pop
mov
lds
mov
adc
aam
mov
test
and
mov
pop
inc
mov
xchg
adc
and
jnp
mov
scas
or
data16
pusha
pop
mov
in
aas
jne
add
xor
jno
fdivp
les
test
sbb
cmp
gs
xor
rol
jo
adc
dec
dec
shlb
cli
adc
adc
cmp
inc
mull
fidivrl
pushf
xchg
sub
test
push
add
popf
mov
jge
mov
aad
fs
or
lods
pop
add
out
push
add
daa
xchg
xlat
inc
mov
std
fnsave
pop
je
mov
xorb
jle
inc
mov
jae
outsb
jp
js
sti
lods
cmp
xchg
fcomps
lods
pop
pop
cmc
hlt
mov
cli
sahf
jnp
mov
jne
or
sbb
loopne
inc
mov
mov
sub
addr16
imul
sub
jecxz
imul
xchg
inc
pop
or
fmull
and
lods
inc
adc
jnp
dec
push
pushf
sbb
xchg
aas
out
push
and
xchg
insb
aam
in
gs
push
add
or
adc
xchg
cmp
sub
sarb
mov
or
cmp
pushf
movsb
xchg
sti
pop
or
mov
jnp
mov
imul
int
add
xchg
mov
xor
xlat
add
cld
mov
mov
inc
mov
mov
bnd
hlt
sub
mov
das
pop
inc
inc
push
cld
or
inc
push
adc
jp
jg
lret
mov
subl
sub
xchg
cmp
mov
dec
idiv
int
scas
incl
adc
int3
jp
icebp
dec
fs
out
pop
hlt
stos
push
movb
je
sub
lods
mov
xchg
in
filds
lcall
stc
fs
mov
icebp
mov
mov
lahf
push
repz
push
jl
jbe
imul
and
xlat
cmp
add
pop
insl
sub
das
jae
outsl
stos
mov
dec
bound
popa
xlat
cmp
cmpsl
shr
fimuls
and
pop
sti
or
adc
test
xchg
and
inc
fildl
inc
leave
jb
insl
jg
jns
mov
sub
push
fwait
adc
setbe
cli
xor
adc
jl
cmp
std
dec
fbstp
jne
addb
in
mov
push
sub
pop
lea
adc
push
out
sub
outsl
cmp
fwait
ljmp
push
sub
cmpsb
in
roll
sti
jae
les
ja
pop
mov
xor
xchg
pop
mov
in
sub
mov
push
inc
jb
ret
add
mov
in
ss
add
mov
mov
push
movsb
call
ja
jb
jecxz
mov
mul
in
push
cmp
add
pop
icebp
divb
xchg
xchg
xor
lods
push
and
xchg
ja
xchg
and
pop
rcrb
in
in
fwait
stos
push
mov
mov
sub
cmpsb
popa
sub
add
in
sbb
fadd
mov
outsl
dec
hlt
pop
cmp
bound
les
add
enter
shlb
aad
push
fs
and
and
push
and
and
jg
orb
sar
iret
inc
pop
jle
addb
pop
cmp
lock
outsl
clc
loopne
mov
inc
lcall
lahf
or
sub
sub
out
inc
and
mov
jmp
mov
or
jo
or
loope
jle
fcompl
sub
xor
cmp
cmpsl
mov
xchg
int
or
cmpsl
mov
push
pop
subl
leave
mov
cmpsl
ret
call
dec
je
scas
int3
rclb
sbb
shlb
ror
int
cmp
in
loop
xchg
xchg
das
lret
add
out
out
fdivl
vmovss
inc
mov
mov
les
or
add
fs
out
cmpb
adc
test
rcl
scas
fldl
mov
loopne
mov
test
add
mov
mov
stc
jnp
es
mov
xor
cmp
jle
shll
sti
inc
lcall
jmp
cmp
repz
adc
sbb
lock
leave
icebp
mov
pop
or
insl
fidivl
and
icebp
insb
or
sbb
std
jle
xchg
jb
fmul
dec
mov
popa
sbb
fiaddl
clc
stos
jno
leave
setno
jns
out
jnp
test
adc
or
nop
imul
ljmp
loope
aas
les
cmp
xchg
pop
sbb
and
sub
mov
jne
sub
fimull
jp
cmp
mov
mul
fstl
pop
stc
jne
push
adc
rorb
dec
pop
and
xor
fstl
mov
mov
dec
fucom
push
mov
mov
ds
shlb
cli
mov
sub
jge
aaa
mov
jne
mov
cmp
pop
lret
pop
mov
add
inc
jmp
movsb
xchg
sbb
outsl
out
mov
add
xor
movl
test
mov
adc
sbb
sub
ret
mov
int
imul
das
cmp
inc
inc
or
jmp
loopne
sub
add
cltd
jg
adc
js
jae
mov
xchg
sub
mov
out
push
out
cmp
lods
test
cmp
lds
ret
les
clc
imul
xchg
leave
jmp
xor
ja
push
shr
inc
outsb
outsl
dec
pop
jl
lahf
ljmp
roll
xor
stc
dec
dec
cmp
inc
dec
push
adcb
nop
scas
or
shrl
imul
or
add
aam
js
mov
or
sahf
dec
loope
dec
jge
sbbl
mov
and
fcoml
adc
iret
jb
scas
jmp
and
pop
mov
movb
sti
inc
mov
rorl
jecxz
or
sahf
xor
jmp
movsb
scas
nop
repnz
lods
sub
lret
jmp
sarl
mov
pop
mov
jno
aam
cmpsl
mov
add
mov
sahf
jb
xor
sbb
insb
xchg
std
rcrl
pop
shrl
je
add
dec
jmp
repz
dec
in
jp
fnstcw
or
daa
push
test
inc
inc
dec
xchg
fcompp
sbb
mulb
pop
sub
sub
adc
xchg
cwtl
lea
iret
inc
sub
gs
popf
xor
lahf
and
sub
cmp
ret
jae
xchg
ret
jl
mov
mov
leave
xchg
divl
into
pushf
cmp
popf
jle
daa
xor
inc
cmp
mov
mull
test
push
je
xor
daa
mov
add
roll
pop
mov
push
and
or
rcr
cmp
push
call
inc
and
pop
jbe
fstpt
repz
cmc
mov
insl
xor
gs
dec
pop
sbb
cli
lcall
ror
dec
adcl
xchg
sub
leave
shrb
inc
add
lret
cmp
rorb
pop
xchg
pop
or
and
xor
dec
scas
xchg
repnz
repnz
leave
dec
test
mov
push
push
lods
loopne
cs
add
cltd
mov
popa
pop
push
jae
add
sbb
mov
cltd
dec
adc
push
je
dec
pop
aas
sqrtps
lcall
jle
in
pusha
mov
prefetcht1
insb
pushf
sti
inc
cld
aad
pop
push
out
rclb
sub
xor
sbb
js
mov
arpl
mulb
or
fstps
pop
xchg
add
cs
xchg
in
add
inc
movsb
imul
push
jmp
add
inc
sahf
enter
lcall
cltd
adc
loop
jmp
inc
dec
pop
inc
dec
lcall
test
in
xor
jbe
pop
nop
mov
pop
rcll
leave
gs
call
and
add
or
data16
add
dec
in
adc
jbe
mov
lahf
jnp
mov
fstl
push
dec
push
out
ret
or
and
test
sbb
jg
repnz
out
inc
aaa
js
test
mov
lods
cmp
test
stos
das
imul
cmpsb
mov
in
mov
out
cmp
xchg
xchg
mov
rcrb
add
jp
mov
jp
cmp
xor
mov
ja
push
clc
inc
mov
gs
popf
test
add
aaa
in
xchg
sbb
ja
push
adc
jae
xlat
jno
mov
sbb
mov
outsb
or
xor
repnz
ljmp
mov
pop
inc
push
jb
mov
mov
sbb
xor
jecxz
sahf
stos
sub
addl
rcrb
add
jo
arpl
hlt
push
sbb
loopne
mov
pop
arpl
enter
push
xor
rclb
sbb
cs
loopne
aad
lcall
pop
int
insl
jns
movsl
lock
mov
mov
mov
lods
pushf
adc
sbb
inc
or
imul
and
cmpsl
add
xchg
add
scas
push
and
bound
jecxz
pushf
cmpsb
in
loop
enter
pop
pop
sbb
mov
adc
pop
movsb
cmc
loop
xchg
pop
push
dec
dec
sub
int
xchg
iret
nop
scas
jg
mov
push
push
mov
stc
repnz
xchg
rcrb
out
add
jl
gs
loop
pushf
mov
lea
in
mov
data16
insl
jo
mov
shll
imul
push
lcall
push
jmp
in
dec
subl
pop
stos
inc
dec
pop
shufps
leave
jecxz
cmpb
repnz
cltd
roll
mov
ret
cs
add
daa
es
nop
lahf
lcall
out
push
scas
jbe
iret
cmp
insl
mov
in
sahf
fcoms
lret
xor
orb
cmp
or
aam
pop
sub
sub
cld
mov
stos
jb
xchg
mov
lock
and
xchg
dec
es
lods
lcall
inc
inc
sti
fucom
stos
or
in
jb
fsubp
xchg
cli
inc
sbb
js
je
scas
push
aad
cmc
dec
ja
or
cli
cltd
dec
es
sbb
arpl
push
shrb
loope
mov
testb
jnp
fisubrl
repz
stos
icebp
mov
xor
mov
sub
xchg
xchg
mov
out
xchg
xchg
sbb
inc
add
pop
mov
cli
out
pop
cmpsl
test
ret
dec
cs
and
or
scas
imul
test
loop
cvtps2pd
mov
cli
dec
mov
pushf
iret
push
push
out
pop
jae
mov
shll
cwtl
fs
mov
mov
xchg
mov
sbb
les
lahf
stos
les
and
or
enter
push
cmp
sub
rclb
fstpt
jecxz
xchg
ret
mov
jo
jmp
cmp
add
xchg
out
dec
or
or
arpl
push
cmp
repz
xchg
xchg
shlb
cmc
leave
fs
inc
stos
cmp
mov
adc
dec
outsl
jl
mov
xchg
les
fcomps
xchg
ja
inc
pop
or
lock
shl
jbe
jmp
js
orl
and
loopne
iret
adc
orl
mov
repnz
mov
dec
fldcw
out
jb
push
dec
cmp
data16
xor
ljmp
test
push
pop
cli
adc
out
push
sahf
xor
sub
lret
aaa
jecxz
pop
add
cmp
iret
mov
pop
xor
outsl
xchg
out
lahf
mov
jns
out
mov
testb
add
lods
rol
inc
rcrl
lret
or
out
repz
frstor
stos
jno
xchg
add
sub
sub
adc
jo
inc
stc
and
mov
pushf
shld
xlat
sub
dec
fldenv
sbb
adc
stos
and
test
sub
scas
rolb
inc
cld
mov
add
adc
add
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
andl
push
adcl
mov
andl
xor
push
neg
mov
subl
add
mov
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
sbb
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
mov
mov
sbbl
xor
mov
sbb
add
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
sub
lea
orl
xor
subl
xor
cmp
je
inc
mov
addl
xor
xorl
add
movl
cmp
jne
xorl
pushl
call
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
add
and
mov
mov
addl
mov
notl
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
ja
test
mov
testb
leave
jp
fstpl
jp
loopne
sbb
adc
cld
push
cmpsl
mov
insb
or
jmp
inc
loop
push
aad
xchg
cli
in
or
mov
je
adc
movsl
dec
inc
cmp
cmp
jp
faddp
mov
pop
nop
pop
mov
cs
dec
ja
adc
insb
cmpsl
in
dec
add
and
ficompl
out
xchg
xchg
mov
cmp
mov
push
call
clc
fldcw
mov
aaa
inc
jo
sbb
lods
add
or
stos
sbb
aas
pop
xor
xor
pop
pop
stos
jb
ret
sbb
dec
xorl
mov
mov
hlt
xor
loopne
mov
pop
inc
ss
rorb
inc
movb
mov
shll
fldcw
push
lds
loop
and
inc
lahf
mov
cmc
idivl
push
mov
lea
je
ds
loop
mov
int
mov
xorb
mov
insb
adc
jl
inc
test
inc
fwait
nop
add
mov
in
xchg
sbb
lds
xchg
jl
test
mov
mov
rorb
dec
lds
fcompl
push
add
dec
outsl
outsl
fldcw
gs
test
jle
mov
mov
jl
lret
js
push
xorl
mov
outsb
dec
in
xchg
les
clc
testb
stc
adc
arpl
dec
jnp
imul
pusha
divb
data16
popf
pop
xchg
scas
jecxz
test
les
mov
inc
push
lods
ret
mov
mov
xchg
mov
xchg
and
fstpt
repz
aas
xor
jbe
dec
addb
mov
ret
movsb
lret
mov
jno
jecxz
or
xchg
add
mov
test
lahf
ja
stc
adc
adc
lea
push
jo
push
in
push
ficoms
dec
negb
dec
sub
adc
bound
scas
repnz
inc
addl
xor
sub
or
jae
sub
xchg
aad
or
jecxz
insl
pop
stos
outsl
pop
push
xchg
shll
xor
inc
popf
cmp
mov
mov
aam
fldt
fwait
cmp
or
lret
stc
fcmovnu
insl
ret
and
jp
jg
popf
pop
xor
inc
inc
push
ret
out
in
loope
jo
push
xor
nop
cmp
mov
hlt
xlat
and
popa
mov
mov
lret
mov
mov
call
sub
push
bnd
clc
inc
jecxz
arpl
push
sbb
ss
xchg
cmp
push
sub
in
shll
in
mov
xlat
mov
push
shll
loope
cmpb
inc
movsb
test
aas
mov
sbb
mov
mov
jno
and
shr
cmpsb
adc
sub
mov
nop
mov
and
and
inc
cmpsb
int3
mov
imul
and
shll
mov
or
daa
push
ret
xchg
inc
jbe
mov
inc
das
dec
pop
mov
dec
and
or
pop
aad
mov
cmpsb
stc
enter
cmp
cltd
stc
popa
inc
mov
mov
inc
adc
cmpsl
in
mov
mov
inc
in
mov
pusha
mov
out
movsl
add
inc
movsb
pop
sti
pop
dec
xchg
mov
in
xor
push
cmp
xor
push
pop
aam
jg
or
jge
movsb
pop
jecxz
pop
mov
ss
mov
fwait
mov
mov
rolb
cwtl
sahf
or
adc
mov
sub
popf
pushf
mov
movsl
sahf
add
or
outsl
test
in
inc
rorl
mov
cltd
pop
sar
aaa
out
mov
xchg
outsb
dec
es
adc
dec
cmp
loope
xor
arpl
fists
cld
xchg
mov
stos
call
imul
pop
xor
sbb
movsl
movsl
insb
js
push
insl
adc
mov
imul
cltd
ds
dec
enter
fmuls
push
jecxz
test
ljmp
adc
movups
fwait
aam
and
adc
xchg
push
fst
inc
mov
inc
inc
sub
aas
and
push
mov
jecxz
jmp
sub
inc
mov
mov
push
pop
nop
into
das
mov
add
pop
cmp
test
mov
pop
je
out
sub
sarb
or
and
sub
outsb
ficoms
shlb
add
stc
xchg
fiaddl
and
idivb
test
xchg
icebp
sub
fdivrs
rorl
insl
xchg
cvtdq2ps
pop
nop
shrl
shrl
jns
out
jle
arpl
xor
adc
pop
rolb
xchg
lods
movsb
mov
out
loopne
xchg
cli
cmc
in
pusha
xchg
hlt
mov
xchg
xchg
fisttpll
mov
lahf
lret
xor
inc
loope
and
push
add
cmp
jle
adc
loop
mov
mov
mov
and
or
testb
es
js
mov
xor
xchg
ret
movsl
jecxz
stos
outsb
jecxz
mov
imul
mov
mov
ds
fists
neg
mov
fsts
inc
inc
pop
push
cli
or
fwait
imul
mov
loopne
hlt
nop
jb
ret
popf
stos
dec
imul
lds
loopne
mov
xor
mov
mov
mov
add
insb
popf
push
mov
xor
and
jne
pop
xchg
repnz
mov
je
unpckhps
push
or
lock
jb
lret
pushf
cmp
cwtl
lods
fmul
push
or
cmp
adc
push
lea
fistps
jns
popf
lods
fwait
test
sbb
or
outsl
inc
loope
fwait
imul
or
call
and
mov
shlb
loop
xorl
cs
mov
sub
xchg
dec
pop
lock
std
std
jno
rcll
xchg
sbb
mov
subb
mov
dec
lock
das
jle
adc
fdivs
xchg
dec
mov
jg
and
insl
test
xor
sbb
sub
push
lea
push
push
in
ds
ffreep
xchg
pop
mov
xchg
stc
inc
outsl
add
add
adc
sbb
fcomps
mov
xor
pusha
cmp
scas
int3
or
push
inc
iret
cmp
mov
ficoml
dec
outsl
push
jnp
jae
scas
add
push
mov
aaa
loop
roll
adc
in
dec
gs
dec
sbb
gs
sbb
pusha
iret
mov
mov
inc
stc
clc
ds
pop
pop
mov
dec
mov
pop
dec
mov
xchg
pop
dec
lods
fisubs
xor
ss
jns
out
cmc
xchg
scas
pop
loop
xchg
and
cmpl
mov
sub
dec
add
out
insb
aaa
xchg
push
hlt
icebp
mov
sub
sub
jl
add
mov
jmp
jb
pop
sub
jge
xor
repnz
cmp
adc
mov
pushl
adc
dec
int
repnz
mov
mov
mov
popa
push
data16
push
or
int
mov
test
mov
and
mov
inc
sub
push
ficoms
cmp
jne
addr16
shll
fistps
jl
fldcw
in
mov
cmp
test
jle
test
xchg
adc
out
cli
mov
jo
clc
pop
dec
pushf
lock
clc
mov
or
aad
jmp
and
mov
leave
addb
dec
repz
push
mov
mov
and
mov
clc
dec
pop
les
adc
push
repnz
push
pop
xchg
sub
or
cli
clc
sbb
push
loope
sahf
outsb
subl
push
xor
call
push
xlat
js
sbb
dec
das
push
mov
movsb
cmp
inc
sbb
xchg
jb
push
jno
mov
nop
inc
fsubr
push
add
out
jnp
test
sbb
xchg
jmp
rcrl
nop
and
lret
adc
cmp
test
stc
xchg
cltd
mov
sbbl
mov
mov
lret
jl
imul
gs
cs
xchg
nop
push
add
fidivs
jns
movsb
or
in
xor
loope
arpl
test
cmpb
dec
dec
jp
mov
inc
ja
clc
out
es
fimull
and
xchg
mov
lods
shl
imul
push
inc
jne
dec
xchg
mov
push
push
or
mov
pop
in
fadds
mov
pop
scas
xchg
aad
pushf
outsb
sti
mov
into
insb
dec
fisubl
sbb
dec
push
pushf
dec
fwait
add
rorb
lret
jnp
pop
call
sbb
aam
inc
loope
lods
sub
dec
sub
dec
push
popf
xchg
or
mov
cwtl
test
push
jno
es
daa
xchg
pop
stos
aam
adc
addr16
jne
out
sub
insl
sbb
cmp
add
mov
jae
sbb
es
mov
pop
ret
inc
xor
push
fwait
scas
jbe
out
ret
mov
daa
repz
das
cltd
out
test
jge
lds
je
and
adc
cmp
lea
xlat
dec
hlt
and
cmp
pop
inc
xor
jne
movb
inc
daa
pop
scas
inc
aad
dec
leave
pushf
dec
stos
mov
xor
add
and
icebp
in
pop
clc
jno
repz
mov
mov
les
mov
pop
pop
push
pop
arpl
or
xor
jge
cmp
or
sub
jne
inc
push
xorb
imul
inc
cmpsl
jb
cmp
movsb
fwait
adc
push
cld
insb
fwait
push
dec
popf
push
cmp
cmp
push
and
cli
stos
xchg
sbb
sbb
pop
xchg
sub
call
mov
dec
ja
aas
mov
jg
push
aam
movsb
cld
push
add
sbb
subb
xchg
pop
adc
mov
sbb
cmpsl
arpl
pop
inc
aam
pop
hlt
loop
movsl
push
stos
inc
cmp
inc
sub
test
mov
dec
inc
mov
mov
sbb
and
cmp
push
xchg
mov
and
arpl
sbb
cmpsl
rcrb
fs
fmulp
push
aam
xchg
bound
inc
repnz
mov
pop
xlat
lcall
and
inc
loope
add
sbb
jge
mov
stc
xor
lret
mov
push
fildll
add
popa
addr16
xchg
sahf
xchg
in
ja
pop
loopne
mov
cmp
out
and
scas
adc
insl
dec
xlat
add
mov
xor
shrl
jmp
jg
movb
xor
xor
subb
lea
stos
adc
cmpsl
push
imul
repnz
adc
add
sub
insb
jge
push
jecxz
mov
aas
dec
xor
push
fsub
ss
pusha
pop
js
test
out
outsl
ljmp
in
pop
dec
mov
push
arpl
sbb
addb
aaa
popa
jno
les
pop
ljmp
fnstsw
dec
cli
or
lahf
idivl
iret
xchg
sbb
loop
sti
lods
pop
and
dec
cli
add
jge
fsubr
cmp
adc
inc
jmp
or
movsb
push
jle
pop
ss
out
mov
jns
inc
inc
out
adc
adc
fs
cmp
negb
cs
cmp
mov
imul
sbb
push
push
add
insb
dec
mov
or
mov
add
xor
cmp
pop
and
montmul
cmpsb
inc
push
xchg
cli
mov
mov
int
push
sub
ss
mov
mov
xor
dec
push
cmp
mov
jecxz
sbb
aaa
mov
cmp
hlt
push
imul
jae
push
adc
xchg
xchg
es
mov
popf
shll
shll
adc
out
pop
sub
shlb
jp
fwait
aad
jne
or
xor
inc
sbb
mov
mov
shr
mov
stos
xchg
scas
jb
data16
bound
cmp
mov
ja
and
add
add
dec
enter
cltd
jno
mov
xchg
jl
lret
dec
push
fs
xor
neg
aas
mov
lret
movsl
aad
int
inc
push
scas
test
test
leave
in
or
push
popf
push
mov
push
mov
mov
aad
ljmp
out
cmp
xor
scas
and
lods
popa
or
mov
loopne
rolb
sub
insl
xor
mov
out
mov
add
out
or
and
cwtl
cmc
jae
add
and
sbb
jae
aam
mov
cmp
lods
insl
int3
add
nop
adc
jmp
xchg
push
push
lds
test
adc
fdivs
data16
pusha
arpl
mov
ds
mov
enter
xchg
pop
jae
push
push
popa
mov
fisubs
and
or
or
mov
pop
inc
mov
fbld
jnp
aaa
lock
push
cli
rcr
push
ret
call
fcomps
inc
xchg
es
adc
in
push
mov
data16
mov
add
xchg
pop
pop
mov
push
divl
fsubs
jbe
cltd
loope
lock
add
in
ss
mov
add
or
cltd
icebp
stc
movsb
repz
xor
or
mov
es
rorl
scas
fbld
ffree
inc
bound
and
repnz
jp
or
xchg
stos
and
data16
insb
aam
push
dec
jo
xchg
lahf
pop
testb
push
mov
inc
xchg
es
xchg
je
push
mov
maxps
dec
popa
ss
mov
enter
mov
or
rcrb
cmpsb
lret
frstor
xor
jge
iret
fsubp
mov
daa
cli
iret
pusha
inc
cmp
andl
mov
mov
mov
adc
mov
clc
out
dec
xchg
mov
push
push
fists
xchg
sbb
jns
fnstcw
dec
fs
mov
dec
fcomps
and
int3
sub
add
pop
lret
faddp
sbb
mov
icebp
mov
xchg
dec
hlt
ljmp
mov
fwait
or
sbb
xlat
cmp
arpl
xchg
aad
outsb
mov
stos
leave
fsubrs
cmp
fimuls
sub
ds
mov
cmp
clc
call
hlt
in
inc
les
sbb
xchg
shll
fs
cmc
outsl
outsl
xor
xchg
sub
cld
cmpsb
daa
xchg
inc
xor
sbb
mov
insl
and
pop
or
jno
rcrl
xchg
ja
ss
jg
push
xor
lea
clc
insl
mov
int3
imul
inc
add
adc
cwtl
int
std
jno
dec
out
push
cli
jge
test
mov
mov
xchg
mov
lahf
jbe
push
sub
dec
out
sub
xchg
movsb
dec
dec
in
mov
mov
lods
xchg
in
aas
mov
push
xorl
aaa
mov
insl
in
pop
dec
mov
cmp
insl
in
push
out
call
inc
jge
cmpsl
out
aaa
hlt
xchg
stos
cmp
fbstp
push
inc
xchg
mov
leave
cld
pop
cmc
subl
aas
subb
data16
gs
orl
sub
loope
aaa
stos
dec
int
repz
sub
pop
lods
je
lahf
mov
orl
pop
mov
and
push
lea
cwtl
jno
ja
mov
je
dec
push
hlt
jbe
ss
cld
cmp
dec
insl
cmp
lret
add
and
xor
dec
xchg
into
inc
insl
cmp
ja
xor
imull
sbb
repz
gs
mov
fldcw
push
jge
fstpl
xchg
push
pop
mov
dec
addl
sbb
mov
fs
xorl
ljmp
cmpsb
pop
xor
and
add
xor
shrl
inc
jge
push
fsubrl
pusha
push
mov
jnp
jae
mov
stos
mov
int3
push
jo
pop
add
or
les
mov
shlb
js
movsl
inc
mov
lods
push
jmp
push
inc
mov
je
mov
sub
cld
insl
movsl
rorb
arpl
or
mul
daa
icebp
pop
sahf
hlt
and
mov
sbb
pop
xchg
lds
xor
aam
jmp
pop
push
faddp
mov
fdivl
dec
test
push
cmp
pop
add
xor
pop
xchg
mov
rcll
cwtl
dec
pop
mov
sub
mov
adc
inc
cmc
sahf
push
dec
or
push
repz
add
lret
pop
push
adc
push
cmp
mov
xor
lahf
and
aad
in
mov
xchg
leave
hlt
pop
cld
int
mov
jnp
xchg
stc
dec
mov
popa
xchg
arpl
das
jne
addr16
sub
inc
adcl
movsb
cmpsl
mov
add
add
push
xor
shrb
or
jb
push
pop
push
out
sub
pop
cmp
inc
and
add
test
lock
mov
sbb
dec
inc
aas
cltd
mov
out
insl
xchg
pop
mov
outsb
xchg
mov
mov
jecxz
xchg
ja
cmc
sti
fwait
xchg
xchg
push
jae
test
js
jb
xor
sub
pop
pop
push
dec
sbb
ja
mov
and
lods
mov
loopne
cmp
ret
jge
inc
push
or
inc
mov
inc
push
fidivs
sbb
fnstsw
enter
ss
ds
jne
arpl
dec
pop
test
sub
xchg
pop
push
hlt
mov
or
subl
sar
mov
inc
loop
cmc
push
int3
inc
dec
add
and
xchg
sbb
fldcw
cld
pop
mov
dec
popf
mov
mov
mov
pop
push
sub
je
out
add
icebp
mov
push
jl
repz
loopne
inc
gs
jle
jg
int3
jecxz
loop
add
sub
imul
adc
mov
sbb
pop
fdivr
loop
hlt
pop
mov
movsl
inc
mov
xor
and
pop
push
scas
cmp
je
adc
sti
push
and
int3
dec
mov
jle
inc
cmpsl
fcmovnbe
and
add
mov
or
mov
frstor
cmpsb
dec
pop
sub
insl
and
dec
js
dec
inc
adc
ss
cmp
push
int
fldenv
xchg
bound
push
sarb
push
int3
roll
aas
lcall
adc
lahf
lahf
aas
fmull
imul
mov
imul
mov
arpl
sbb
je,pt
shr
jae
dec
cmp
jmp
mov
cmpsb
test
call
and
fisubl
imull
dec
jp
arpl
ret
push
push
mov
pushf
subb
out
arpl
jno
fwait
dec
mov
clc
xchg
out
sbb
dec
jp
ret
jg
decl
clc
cmp
popa
outsl
mov
int3
cli
pop
inc
mov
ret
pushf
addr16
stos
xchg
sti
mov
mov
dec
jo
mov
test
incl
jmp
adc
push
test
inc
or
testl
push
imul
pop
adc
mov
mov
test
notb
loope
lea
jmp
and
lock
aas
adc
mov
jns
andb
pop
or
or
repz
push
mov
xchg
in
inc
fxch
xor
call
js
aaa
and
mov
or
mov
add
shrl
lock
push
inc
jp
clc
inc
inc
push
hlt
in
ljmp
jg
inc
test
cmp
adc
sub
inc
pop
fnsave
ja
clc
dec
sub
lods
xchg
inc
pop
cmp
mov
ret
outsl
pusha
adc
std
sahf
inc
pushf
mov
inc
in
iret
call
sbb
xor
xor
cli
jmp
into
push
repnz
inc
psadbw
out
dec
mov
and
jle
outsl
imulb
sub
jmp
pushf
cmp
adc
sub
and
pop
daa
mov
mov
cltd
or
jg
stc
jp
mov
sub
imul
rcrl
test
call
jle
adc
call
add
add
int
scas
lds
mov
dec
and
ret
clc
jp
push
ds
mov
sbb
xor
insb
jle
mov
xlat
mov
inc
jle
mov
jp
outsl
stc
ja
mov
mov
sbb
cwtl
lret
int3
stos
lods
mov
arpl
push
sub
test
fs
xlat
add
fimull
fiaddl
je
rolb
jp
cmp
adc
sahf
and
cmp
fwait
sti
dec
bound
arpl
mov
cmpsl
push
sbb
mov
ljmp
or
icebp
sbb
mov
sarb
dec
inc
arpl
lods
mov
jns
adc
xor
mov
iret
xchg
int
mov
insl
dec
jp
or
sbb
dec
dec
in
add
in
pushf
in
ret
icebp
sbb
sbb
fdivrp
adc
and
xchg
add
inc
inc
mov
in
add
std
cld
mov
and
cs
pop
leave
test
jns
jo
pusha
mov
mov
jne
cmp
sub
leave
fbstp
pop
sbb
out
icebp
and
fs
jns
xchg
sbb
xchg
sub
out
in
rcrl
sar
push
push
ficomps
clc
sbb
ret
ja
mov
add
movb
out
or
icebp
dec
stc
ljmp
out
inc
sbb
or
ret
pop
mov
mov
cmp
sahf
pop
sub
stos
inc
xor
sahf
andl
xchg
lret
inc
inc
arpl
popa
inc
dec
loop
shl
mov
subb
scas
sub
inc
fwait
xchg
dec
fsubs
fnstcw
ss
jle
mov
push
mov
add
mov
mov
adc
shl
stos
and
sub
ret
ljmp
mov
clc
div
out
push
add
mov
repnz
movsl
aam
mov
sub
mov
mov
fsub
xchg
mov
inc
pop
jnp
mov
jbe
stc
fs
js
sbb
jmp
shrl
shrb
leave
adc
movsl
mov
add
jmp
mov
add
pushl
xor
pop
das
notl
and
jle
les
out
lahf
inc
test
and
inc
lods
add
sub
jbe
test
cmp
loopne
stc
lahf
stc
xchg
clc
lahf
fs
mov
sub
fsub
xchg
scas
or
xor
pushf
dec
pop
push
pop
dec
mov
push
das
cmp
lods
push
std
dec
adc
inc
push
pop
jns
nop
aam
loop
movsl
ret
into
mov
mov
lcall
cmc
repz
stc
lcall
dec
inc
or
fdiv
jle
sbb
dec
push
pusha
xchg
sub
aam
xchg
jnp
mov
mov
notl
pushf
mov
adc
dec
fnstenv
movsl
or
inc
xor
and
rcr
aam
jecxz
and
and
jbe
leave
inc
mov
push
aad
mov
jl
xorl
sub
loope
dec
test
out
inc
pushf
pop
adc
movsb
call
cmc
out
jo
lret
les
into
je
sbb
into
xorb
shll
jg
insb
test
int3
cld
and
pusha
jno
sub
test
outsl
fmuls
mov
sahf
int3
add
cmovo
cwtl
jmp
hlt
add
xor
cwtl
aam
es
adc
cmpsl
push
imul
jae
cltd
imul
xchg
in
mov
pop
cmp
cmpsl
out
add
in
jo
js
mov
fucom
clc
insl
jg
xchg
and
test
xor
popf
mov
popf
xor
cmp
mov
xchg
fidivrl
inc
repz
jbe
es
jae
jo
in
xchg
into
call
and
xchg
inc
fwait
ds
dec
lret
mov
push
test
lds
fs
add
add
cmp
cmp
mov
dec
adc
xchg
cmp
jae
adcb
jecxz
fcmovnbe
and
fwait
xor
dec
dec
shr
jns
xchg
jecxz
dec
lods
and
inc
rclb
push
jp
mov
nop
dec
mov
push
push
enter
data16
sbb
push
jecxz
jmp
inc
dec
fisttpll
ret
push
push
jecxz
xchg
enter
adc
out
fnsave
js
pusha
and
cltd
rclb
lock
lret
xor
mull
outsl
xchg
and
jp
mov
or
scas
repz
push
and
cmpb
std
int
sarb
mov
pushf
add
inc
mov
lea
sub
dec
in
xor
jle
inc
fisttpl
shr
imul
xchg
lret
mov
pop
dec
loop
mov
sti
mov
jge
push
mov
cld
shrb
add
adc
pop
add
fmul
push
out
jmp
dec
lret
mov
jnp
lock
and
dec
iret
xlat
sub
jnp
lods
mov
inc
dec
jno
test
push
hlt
adc
jo
repz
scas
int3
ret
mov
out
sbb
loope
mov
pop
mov
mov
mov
cmc
dec
sbb
mov
mov
push
lret
sub
rolb
adc
sub
push
mov
fwait
dec
push
stos
sub
push
xchg
pop
cmp
lds
xlat
daa
jp
ret
and
rcr
inc
or
lahf
in
into
pop
movsb
mov
andl
fcoms
dec
arpl
mov
xlat
repnz
inc
mov
mov
pop
and
stos
cmpsb
push
fwait
addr16
and
dec
jns
stos
iret
pop
movsl
or
in
pop
xor
xchg
cld
push
nop
jnp
test
bound
cmp
cmp
pop
jbe
mov
loopne
es
dec
dec
sbb
fisubrl
rcrl
push
pushf
cmp
icebp
dec
sar
mov
out
push
mov
sub
xor
cmp
and
stc
cli
xchg
call
jns
lcall
clc
cmpsl
xchg
sub
aas
mov
mov
stos
call
or
outsl
pop
xor
cltd
inc
movsb
andl
stc
jns
push
gs
xchg
and
push
jnp
pop
inc
pop
mov
mov
imul
jp
clc
inc
sub
aam
xlat
xchg
mov
ficomps
shlb
out
mov
xor
dec
jo
fnstsw
popf
dec
lock
xor
cmp
mov
arpl
xor
mov
jl
inc
xchg
jge
lock
mulb
sbb
push
scas
dec
inc
cmc
repz
je
add
dec
xchg
jp
mov
push
ds
cmovnp
dec
movsb
jg
or
push
sub
inc
test
sti
sub
push
mov
aas
jno
pop
ljmp
popf
cmc
xchg
add
mov
outsl
xchg
sub
mov
js
dec
cmp
mov
int
sbb
out
lahf
jge
pop
add
and
and
arpl
xchg
and
lret
jecxz
in
fstpt
xchg
inc
scas
cltd
xchg
rcrb
test
pop
in
in
jmp
ret
and
add
ja
test
push
mov
in
add
push
xchg
mov
enter
xor
orb
sbb
xchg
lock
loopne
js
repnz
jecxz
es
clc
iret
out
pop
and
xchg
lret
pop
cmp
pop
xor
movsb
xchg
mov
int3
lods
pop
enter
xor
dec
pop
cs
pop
xchg
or
pop
in
jle
inc
sbb
lock
cmp
cmp
in
lds
pop
xchg
call
shl
scas
fldl
pop
stos
je
aad
sti
lds
mov
cld
cli
jne
movsl
cltd
pop
cwtl
jo
jg
lock
insb
pop
cmpsl
loop
pop
dec
cmp
sbb
mov
pop
test
sbb
outsb
xchg
int
xchg
adc
and
aas
sub
into
dec
addb
out
xor
fldcw
clc
out
fwait
xor
push
mov
or
cs
inc
mov
loopne
xor
ljmp
daa
push
or
int3
adc
jnp
xor
sahf
mov
mov
frstor
jbe
cltd
out
insb
xchg
add
shlb
dec
dec
fistpll
clc
jge
jb
jno
jge
in
cmp
movsl
addr16
icebp
xchg
fsub
lahf
push
cltd
popf
fimull
push
push
sbb
nop
add
stos
mov
gs
mov
ja
xchg
mov
add
jno
xor
mov
pop
dec
jg
adc
arpl
loopne
daa
aaa
sahf
mov
xor
insl
mov
dec
popf
xchg
jnp
mov
add
xorl
fiaddl
in
aad
movsl
test
or
adc
lods
loopne
inc
and
popf
xor
sbb
inc
jbe
ljmp
out
dec
and
outsb
jle
arpl
aad
pop
or
bound
test
jmp
pop
adc
dec
loopne
adc
and
cmp
xchg
lahf
jl
shrb
sub
mov
sbb
xor
xchg
push
push
ljmp
adc
adc
ret
iret
xchg
mov
sbbl
loopne
std
repz
jmp
scas
dec
jmp
pop
testb
jl
addr16
sub
dec
jno
movsl
mov
repnz
or
cmc
mov
out
sbb
cmpb
xchg
xor
ret
stos
popf
data16
mov
jl
lods
jns
sbb
jbe
jmp
inc
or
adc
pop
test
popf
jae
call
jecxz
cmp
mov
lds
xchg
jae
mov
mov
and
fwait
add
push
lahf
and
mov
pop
sub
xchg
push
pop
in
push
hlt
mov
lock
push
mov
jge
xchg
cmp
pop
int
mov
scas
xor
stc
push
jne
push
lods
mov
mov
inc
addb
insl
mov
in
xchg
cmp
dec
push
cmp
jge
gs
shl
jo
lret
xchg
cmp
mov
inc
mov
add
xor
and
lea
test
sbbb
dec
push
mov
iret
aas
xchg
jmp
nop
iret
insb
roll
push
imulb
sahf
cwtl
movsb
inc
rclb
mov
in
ja
sahf
add
or
addr16
xchg
sub
jns
adc
xchg
sub
mov
push
clc
mull
add
sbb
and
out
add
inc
xor
cmp
cmp
jbe
clc
lds
or
je
pop
leave
xchg
jae
or
adc
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
sbbl
movl
andl
mov
mov
mov
addl
xor
xorl
add
andl
mov
and
mov
xor
push
mov
mov
adcl
add
mov
and
mov
sub
mov
mov
mov
movzwl
sbb
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
sbb
mov
or
movb
lea
movl
cmpl
je
cmpl
jle
jmp
push
pushl
call
mov
dec
mov
jmp
mov
adcl
mov
mov
xor
dec
addl
mov
and
movl
jmp
sub
call
ret
int3
pop
mov
cmpsl
out
mov
lods
jp
pop
pop
jp
addb
pushf
outsl
xor
xchg
push
add
imul
xchg
push
push
movswl
cs
jle
mov
mov
into
xchg
in
rcl
and
int
dec
ds
test
adc
outsb
xchg
push
fwait
outsb
mov
repz
add
int
inc
and
cld
test
jnp
testl
dec
jmp
jns
xor
clc
xor
cli
mov
mov
and
clc
sahf
or
fsubrs
mov
test
cmpsb
sahf
cmp
xchg
mov
mov
pop
pop
jle
pop
inc
loope
popf
mov
clc
xor
stc
inc
push
pop
cmpsb
out
xchg
lods
push
jmp
add
inc
inc
cmc
xchg
mov
pop
sbb
mov
sub
nop
int3
sbb
push
xchg
jmp
repz
jae
mov
dec
jae
mov
pop
or
inc
ja
sub
dec
and
leave
ret
jp
ja
enter
xchg
leave
ficoms
dec
mov
xorl
dec
lcall
inc
aas
pop
call
or
dec
push
ret
jp
outsl
jns
xor
pop
adc
mov
dec
std
add
ja
imul
push
arpl
xor
inc
aam
popa
fs
xor
in
mov
cmpsl
inc
dec
cmp
lret
gs
add
sbb
mov
movsb
ret
and
mov
cmp
leave
shll
int3
loopne
adc
shlb
add
ja
std
add
ds
loope
stc
xchg
sbb
pop
aad
addr16
into
adc
push
das
inc
inc
xchg
mov
gs
lret
dec
cwtl
dec
nop
adc
pop
push
push
movb
ret
sbb
cld
lds
jno
test
call
xor
inc
into
or
sub
xchg
xor
nop
cli
xchg
imul
ss
mov
push
aam
push
adc
out
es
mov
and
adc
push
push
push
xchg
xchg
pop
sub
leave
ret
shll
push
xchg
xchg
pop
sbb
js
iret
push
out
sbb
adcb
scas
out
hlt
cli
ds
roll
adc
jb
mov
or
dec
lahf
adc
negb
loop
cmpsl
lret
jns
adc
cmpsb
jmp
sbbl
int
cmp
repnz
into
add
sub
cltd
push
jo
aam
pop
imul
out
cmc
cs
roll
jmp
sub
jecxz
add
iret
loop
xor
dec
xchg
lret
rcll
push
jl
jle
cmp
lcall
pusha
mov
jns
push
jle
add
pop
sbb
dec
mov
mov
aas
dec
daa
xor
outsb
data16
or
icebp
sub
pop
pop
dec
cmp
fcom
leave
fcomp
and
test
mov
outsl
out
cmpsb
push
call
aaa
aam
scas
add
imul
pushf
mov
daa
dec
pushf
pop
cs
cltd
jmp
dec
lock
push
mov
mov
push
popf
pop
shrb
inc
pop
sub
popf
out
lea
sti
andnps
in
inc
pop
xchg
das
push
pop
push
xchg
sbb
in
es
mov
lea
pop
push
dec
lea
ds
cmc
gs
dec
loopne
testl
mov
adc
mov
sbb
jne
mov
jle
mov
jge
mov
fsubp
add
rcll
pop
pop
movsb
int3
addr16
xor
sub
lods
push
out
xchg
mov
ficompl
iret
sti
popl
push
out
shll
dec
jnp
loopne
mov
pop
stos
fs
lret
jbe
or
notl
fnstenv
int3
add
iret
push
cmp
inc
cmpl
cli
dec
popf
xor
cmp
in
jmp
outsl
arpl
xor
push
lcall
fildl
ret
dec
xor
lods
dec
fstps
adc
str
fsubrl
gs
cld
repnz
pop
mov
out
rcll
push
stc
mov
jo
bound
cltd
loopne
or
xchg
dec
mov
out
sbb
xchg
add
pusha
data16
scas
movsl
ret
cmpsb
mov
movsl
pop
ror
ds
pusha
aam
or
shlb
cmc
inc
inc
ret
test
sub
lcall
xor
repz
sub
out
movsb
and
call
icebp
add
ljmp
add
mov
mov
aam
cmc
in
loopne
pop
bound
movsb
xchg
stc
push
mov
mov
push
inc
pop
dec
pop
or
and
aas
push
std
jle
ret
out
aam
or
out
sahf
lahf
iret
test
xor
bswap
jo
test
scas
fimull
mov
pop
pop
mov
pop
jae
xchg
rolb
int
popl
iret
jl
mov
into
jnp
dec
mov
pop
js
and
jno
call
dec
ss
sbb
jp
aad
xchg
inc
or
pop
or
xchg
add
pop
fadd
repz
outsl
mov
sbb
pop
cmpb
and
adc
int
jns
adc
jnp
in
inc
nop
add
dec
pop
test
mov
popa
test
insb
stc
divl
scas
and
rorl
jecxz
dec
add
movsb
xchg
stc
nop
push
and
stos
nop
inc
popf
cwtl
adc
sub
fstpl
sub
xor
fs
mov
lcall
movsl
add
or
or
insb
lret
cmp
outsb
rcll
jno
sbb
ds
daa
xorb
inc
inc
faddl
pop
orl
jae
sbb
fs
push
inc
push
pop
push
cmp
daa
incb
sbb
dec
fwait
repnz
test
je
outsl
sub
sbb
lcall
outsl
adc
and
scas
bound
push
adc
dec
push
out
test
test
repz
std
cmp
arpl
cmc
icebp
out
or
aam
cmp
cmc
pop
and
lock
repz
jge
arpl
mov
mov
or
add
sub
les
in
pop
ficoms
fisttpll
cltd
int3
repz
es
iret
popf
shrd
dec
insl
push
lahf
sbb
jg
jmp
mov
test
sbb
outsl
test
outsb
mov
jno
xchg
push
subl
fcomip
mov
addr16
std
adc
out
sub
xlat
icebp
or
and
pop
mov
daa
fmuls
aad
subb
rorl
or
xchg
push
sub
mov
out
je
out
arpl
mov
xor
ret
arpl
or
sub
push
pop
jmp
in
cmpsl
es
sub
fdivrs
xchg
les
jnp
sbb
cmp
pop
adc
mov
add
arpl
out
in
or
pop
shll
ljmp
add
sub
push
das
jg
std
dec
push
call
and
cmp
inc
fwait
stos
repz
jae
repz
inc
aam
rcrb
jmp
idivl
cmp
mov
sti
js
fnsave
lcall
ret
ret
fsub
mov
inc
das
popf
add
ds
call
gs
int
mov
test
scas
push
jecxz
jge
xchg
push
xor
push
jo
mov
test
daa
xchg
cld
inc
incl
pop
pop
mov
mov
push
je
cmc
dec
inc
sbb
xchg
and
js
arpl
cltd
mov
push
in
jb
outsb
push
add
inc
loopne
sub
mov
fnstenv
icebp
aam
fsubr
repz
iret
jnp
jae
mov
repz
add
jbe
in
push
scas
xchg
or
jl
clc
ret
insl
into
push
repz
stos
ja
fs
cmpb
test
repnz
lahf
push
mov
rclb
push
or
sbb
push
inc
xor
pushf
lahf
adc
mov
inc
andb
pop
or
mov
inc
sahf
ror
iret
hlt
push
mov
idiv
sub
cli
dec
pop
in
filds
jecxz
xchg
repz
stos
orl
mov
push
cmp
and
push
hlt
mov
call
jno
cmc
xchg
xlat
insl
mov
insb
fdivrs
pop
mov
adc
out
pop
xchg
xor
inc
imul
inc
dec
sbb
fists
pop
mov
xor
push
inc
int3
fimuls
jle
shr
scas
jge
bound
pusha
jmp
aad
mov
pop
rorb
fcmovnbe
xchg
jge
imul
adc
ret
xor
test
shrl
pop
fildll
fwait
mov
repz
ljmp
fisubrl
in
in
inc
rcll
jbe
mov
je
add
adcl
lods
loope
and
mov
scas
fisubrs
and
push
pop
jne
xor
cltd
dec
add
mov
cmpsb
cmp
loop
pop
ret
insb
adc
sbb
or
movsb
mov
or
xor
cmpl
inc
mov
lret
dec
imul
mov
push
dec
mov
sub
fsubl
jl
jl
mov
xlat
test
cltd
aaa
mov
pop
jno
out
mov
mov
xchg
push
mov
mulb
pop
xor
cmp
mov
fldenv
ret
repz
adc
adc
lret
rorb
popa
sub
jb
pop
jle
pop
sub
push
cltd
push
push
push
cmc
jg
cmc
mov
adc
out
imul
add
add
jmp
cmp
jle
icebp
shlb
leave
out
orl
xchg
jmp
jp
loop
lock
mov
aas
mov
cmp
pop
orl
mov
in
loopne
sub
and
into
mov
mov
ljmp
mov
xor
dec
cmp
push
sbb
mov
mov
or
sbb
jb
sahf
cmp
adc
add
sub
inc
inc
xor
jmp
mov
into
sar
xlat
popa
jle
cmp
sbb
lcall
xor
test
jno
dec
inc
sub
mov
nop
jnp
outsb
xchg
fbstp
sar
imul
lds
adc
lret
add
lock
inc
cmpsl
paddusw
enter
out
push
ficoml
xor
lds
fcomps
gs
push
nop
movsb
ss
push
mov
lahf
ljmp
repnz
int
push
xchg
mov
dec
out
rcrb
cmpsb
shl
mov
mov
out
sbb
ja
mov
xor
iret
xor
shll
pusha
jg
and
rcrl
loopne
repnz
jo
inc
mov
pop
pop
adc
mov
les
shr
sbb
mov
add
sub
cmp
sbb
inc
stos
xchg
lods
xchg
stos
inc
sahf
fidivs
cmp
adc
enter
add
pop
xchg
mov
lods
mov
stos
and
lahf
push
fcmovbe
or
xor
cmp
stc
aaa
sbb
add
adc
rolb
sub
add
push
aam
fnstenv
mov
add
hlt
jae
fcoml
mov
fidivs
fnstcw
std
test
sbb
cltd
shlb
inc
repz
push
in
sub
lcall
loopne
addr16
cmp
imul
scas
call
push
test
incb
js
mov
sub
xchg
fstps
es
cmp
jae
sbb
jne
cmc
sbb
jo
jo
dec
jno
sub
out
jnp
mov
cmpsl
inc
pop
and
inc
pop
push
mov
stos
mov
rclb
ss
movsl
mov
or
test
iret
inc
movb
cmp
imulb
xor
std
xor
sub
cmp
jmp
xor
rcll
ljmp
loop
arpl
sub
xor
cld
fs
xlat
popl
push
push
out
pop
jo
jl
aam
sbb
mov
inc
ljmp
inc
adcl
jecxz
xlat
mov
xchg
inc
push
and
cs
leave
loop
push
mov
add
cs
bound
mov
aad
sbb
arpl
repz
divb
shlb
leave
xor
dec
jp
and
mov
mov
iret
and
stos
jnp
mov
xchg
dec
mov
clc
push
pop
imul
test
mov
ds
rcrl
les
movsl
andb
jge
mov
fldcw
add
mov
jns
inc
dec
mov
aam
and
mov
shrb
fs
mov
movsb
fs
xor
arpl
dec
test
sub
negb
pushf
das
or
and
sbb
sar
sbb
mov
mov
dec
adc
roll
inc
cmpsl
and
or
addr16
push
mov
add
jecxz
mov
mov
stc
cld
nop
mov
jae
dec
xchg
sbb
push
outsb
ficompl
jb
cmp
js
mov
add
xchg
imul
and
mov
push
sub
test
test
inc
lods
jne
movsb
into
inc
push
and
xchg
hlt
mov
push
pop
in
lret
xchg
sbb
sbb
aaa
sti
inc
shlb
mov
je
popf
outsl
jmp
push
jg
sbb
sbb
jl
push
out
push
sub
xor
aad
cmp
addb
aaa
jne
sbb
add
sahf
and
xchg
pop
scas
jmp
jne
cmpsb
xchg
mov
pop
dec
add
xor
sub
cmpsb
and
or
imul
lds
sbb
lods
fsubp
xor
dec
test
and
sub
push
imul
adcb
xor
and
sbb
scas
cmpl
ret
bnd
ret
inc
mov
inc
sub
je
shlb
xor
and
mov
or
pop
and
stc
jg
lcall
or
daa
or
jle
push
xchg
and
clc
imul
je
push
xchg
pop
jg
dec
xlat
or
dec
or
adc
cli
jns
std
ja
xchg
imull
xchg
fwait
addl
lods
test
bound
and
aaa
outsb
sbb
popa
in
imul
inc
fmul
jbe
insl
sbbl
mov
cmp
out
pop
mov
xchg
sahf
pop
push
daa
mov
arpl
push
inc
sub
leave
call
sub
jge
stos
jns
fstpl
shrl
adc
xlat
sti
sti
push
lea
sbb
bound
mov
push
and
das
jp
mov
arpl
scas
movsl
xchg
stos
add
int
cli
js
out
cwtl
or
movsb
inc
cmp
jmp
pop
popf
sahf
xor
ret
jne
iret
jmp
outsb
scas
lahf
xchg
roll
jecxz
jecxz
add
cli
into
adc
adc
mov
cmp
rcr
lds
clc
aas
and
jno
cmpsb
fisubs
leave
lock
repz
insb
fldt
sbb
iret
sti
scas
lods
cld
push
push
sub
jle
fistl
in
test
fisttpl
mov
xchg
pop
jg
jge
push
xor
repz
add
lock
add
cmpl
inc
and
popa
and
in
sub
ficomps
mov
adc
pop
sub
mov
rol
cld
and
xlat
fs
add
push
add
push
xlat
ja
nop
addr16
xor
call
push
or
sbb
cmp
mov
mov
ret
mov
movsl
push
aam
mov
pusha
and
push
and
inc
jne
and
aaa
push
push
sub
sub
outsl
dec
ja
xchg
xchg
sub
nop
sub
lds
out
xor
or
leave
adc
sbb
out
jmp
pop
mov
aad
or
scas
fnstcw
mov
inc
cmp
js
or
jecxz
insb
jp
mov
decb
cli
sub
pop
dec
call
or
sub
inc
or
jo
add
es
xlat
lcall
aas
jbe
mov
shrl
pop
imul
jbe
pop
cld
jae
sub
xorl
leave
mov
into
cltd
xor
xchg
arpl
sbb
cmpb
bound
orl
aam
in
roll
fdiv
lods
popf
pop
mov
adc
aad
mov
jmp
sbb
cmp
in
push
test
push
in
int3
mov
rorl
or
xor
mov
and
mov
dec
jno
mov
out
sbb
outsl
test
iret
cltd
sbb
or
mov
testl
int
inc
cmpsb
xchg
adc
sti
testb
lret
lods
daa
aam
scas
leave
mov
or
adc
leave
adc
jmp
test
or
ja
add
inc
xchg
imul
cmp
ds
mov
das
or
out
dec
insb
sbb
mov
testl
mov
lahf
je
adc
loopne
mov
add
cwtl
adc
pop
test
int3
jae
or
lret
lods
jmp
xchg
push
dec
in
or
lods
aas
icebp
imul
sub
or
lret
ljmp
dec
icebp
jecxz
mov
xchg
movsb
in
sub
es
push
xor
xor
stos
clc
mulb
out
ljmp
mov
sub
add
sbb
mov
hlt
lds
cmp
mov
cmpsl
in
mov
icebp
dec
pushf
insb
xchg
out
iret
or
cmpsl
cmp
data16
ss
loop
popa
pushl
sub
dec
sub
mov
xor
sbb
mov
cmp
cwtl
les
fists
pop
mov
lea
xor
adc
push
popf
sub
mov
pop
xchg
push
bound
push
jp
cmp
fsubrp
mov
divb
inc
call
gs
sbb
push
insl
sbbl
imul
cs
lret
rorl
sub
lahf
cmp
popa
clc
push
mov
xor
mov
mov
jb,pt
fiadds
jmp
shr
sbb
subl
div
or
pop
dec
rclb
fistpl
popf
out
sbbb
test
mov
and
push
movsb
gs
push
cmp
inc
xor
les
or
and
add
inc
mov
out
jo
jmp
mov
pop
js
scas
jecxz
pop
add
dec
push
out
cmpb
sbb
lahf
jl
fcoml
adc
jmp
jnp
pop
fs
and
nop
mov
inc
adc
sbb
mov
mov
cmpsl
adc
icebp
in
cmp
lods
ror
or
push
mov
adc
out
rorb
adc
out
sbb
cmc
pushf
sub
and
cmp
and
dec
push
outsb
cmp
jo
shrl
inc
sub
mov
jp
pop
push
mov
loope
in
stc
and
ss
in
mov
add
cltd
out
sahf
mov
ds
jnp
dec
sub
dec
mov
shl
in
mov
mov
xchg
mov
lea
scas
out
lods
or
ja
mov
cld
jno
cmp
jb
roll
ja
movsl
ret
mov
adc
pop
in
nop
enter
popf
mov
dec
fistl
pop
inc
mov
lcall
push
insl
sub
in
pop
pop
jae
mov
lock
inc
adc
xchg
cld
fadds
sub
xor
pusha
or
pop
lret
pop
scas
jge
cltd
fidivs
lcall
and
repnz
jmp
cmp
cltd
out
inc
fldenv
negb
and
and
sub
push
mov
mov
push
popf
pop
pop
mov
cmpsl
imul
scas
mov
gs
movsl
adc
pop
fninit
or
cltd
lock
sti
add
and
inc
xchg
and
cmpsl
xchg
test
sbb
push
jmp
lods
shrb
cmpsl
xchg
or
dec
gs
add
adcb
cmp
jg
dec
fwait
pop
push
pop
outsl
jns
or
sti
dec
shlb
dec
jns
sub
inc
int
out
ret
nop
inc
out
dec
into
aaa
xor
lret
adc
pop
pop
rolb
add
ss
push
or
aas
pop
lds
pop
jmp
adc
mov
in
test
lock
popl
cli
cli
sbbb
in
in
adc
dec
pop
clc
mov
in
scas
lea
push
sbb
sub
inc
subl
shlb
pop
adc
andb
or
cld
jecxz
mov
add
mov
das
inc
jecxz
jmp
mov
movsb
xor
fwait
ds
xchg
jnp
xor
xchg
pusha
iret
loopne
jp
jb
stos
aad
cmc
mov
shl
aam
ljmp
fisttpl
dec
or
sbb
fidivl
ss
pop
adc
inc
push
or
push
imul
lret
in
or
stc
sub
jg
add
sarl
fidivl
shl
popf
sbb
js
mov
cmpsb
shl
jecxz
add
adc
lock
mov
xchg
andb
stc
cld
hlt
pop
xchg
sti
mov
fidivl
mov
jns
lret
adc
pop
sub
out
test
scas
push
cmpsl
or
pop
add
dec
movsb
inc
lock
mov
into
test
iret
cwtl
sub
adc
xor
scas
mov
cmp
add
mov
pop
fwait
and
sub
and
pop
icebp
lock
pop
lret
enter
mov
adc
icebp
dec
out
movl
psrld
popa
or
ret
dec
mov
cmp
dec
jmp
fcos
int
dec
push
mov
ret
cmpsl
imul
mov
pop
push
rcrb
jno
repnz
mov
dec
cmovns
movsb
ret
mov
jo
test
es
ja
outsb
mov
jnp
sub
hlt
xor
mov
push
push
es
gs
fdivl
adc
mov
fidivrs
jecxz
add
ret
ret
fistl
mov
inc
shll
movsl
mov
jnp
out
mov
inc
sbb
dec
clc
fcoml
lcall
inc
lahf
mov
push
negb
pop
call
adc
pop
add
cltd
add
fcoml
sbb
test
push
test
int
insl
daa
shlb
and
mov
mov
xchg
stos
cmpsl
cmpsb
dec
cmpsb
push
nop
mov
jl
iret
xchg
mov
jecxz
mov
cmp
push
inc
mov
jmp
rorl
mov
sub
clc
push
adc
push
mov
add
xchg
daa
mov
bound
dec
pop
add
cmpsb
sti
test
ss
daa
lds
and
xor
xchg
cmpsb
cmp
roll
pop
xchg
add
dec
xor
movsl
cmpb
movsl
adc
fwait
lods
cmp
cmp
push
adcb
sahf
dec
mov
dec
fmulp
dec
or
mov
mov
lahf
xor
cltd
mov
sub
xor
daa
leave
add
pop
pop
std
push
mov
mov
divb
or
test
std
or
adc
adc
ret
xor
pusha
pop
test
nop
jne
jbe
movsl
pop
pop
js
sbb
ret
icebp
adc
cmpsl
pop
add
jecxz
inc
mov
inc
xor
push
pop
mov
subb
stos
dec
test
and
es
push
mov
cmp
cmp
pop
cs
jnp
or
mov
fildl
loope
roll
dec
pop
divb
imul
into
cld
cli
inc
push
cli
jbe
loopne
je
sub
roll
or
mov
push
outsb
movswl
fsubr
lcall
in
test
das
and
jmp
aas
dec
lds
dec
call
mov
mov
outsl
dec
xor
fsubs
sti
and
jb
xchg
push
andb
addr16
popf
mov
out
jae
out
fcomps
pushf
insl
xchg
imulb
cwtl
adc
hlt
mov
or
xchg
sub
cmp
icebp
leave
std
mov
xor
out
test
rorb
aad
pslld
or
js
out
sub
test
pop
je
sbb
jp
fadds
dec
push
mov
pusha
leave
unpckhps
push
jmp
clc
fiadds
mov
enter
lea
inc
mov
in
loope
out
sti
xor
inc
adc
mov
iret
shlb
scas
adc
leave
or
sbb
lretw
fs
or
lods
push
xor
xor
es
je
jo
jecxz
push
jb
mov
cwtl
inc
mov
adc
fwait
mov
mov
mov
xorb
pop
mov
lcall
add
daa
movsl
cltd
sbb
lahf
iret
lods
call
xor
mov
xchg
dec
xor
test
clc
jg
and
ret
clc
push
fldt
fstpt
jmp
cwtl
dec
mov
rorl
aaa
loop
pop
lock
ss
and
jns
dec
xchg
mov
leave
jae
inc
scas
icebp
pop
loope
xor
or
xor
aad
pop
ret
ss
enter
mov
scas
mov
call
and
pusha
sbb
xor
ds
lock
or
aam
outsb
iret
stos
or
mov
int3
leave
ds
stos
cmc
loopne
loopne
adc
dec
pop
inc
fadds
mov
add
es
dec
pop
add
lods
fisubl
xchg
cmpsl
xor
std
sub
cmp
sub
sahf
push
mov
das
xor
sub
inc
shr
ljmp
sbb
jno
push
mov
cld
cmpsl
js
fcomip
fcom
xor
cs
jle
rorb
sti
loop
mov
cmp
ljmp
xor
movsl
stos
lods
lret
add
gs
dec
in
jb
cli
inc
jae
addr16
fsubs
mov
mov
mov
mov
mov
sub
pop
int
mov
mov
mov
imul
xchg
xchg
add
aas
data16
pushf
ja
call
adc
shr
push
xchg
jmp
int
mov
sub
mov
js
inc
xchg
jnp
adc
mov
sub
ficomps
adc
loop
xor
cmp
movl
push
jl
sbb
mov
in
nop
push
mov
or
add
pop
add
push
popa
dec
push
or
repnz
cmp
es
push
xchg
lahf
add
aas
push
int
out
sarl
xchg
gs
jns
mov
and
jmp
dec
jae
xchg
js
pop
xchg
pop
daa
add
xchg
mov
repnz
or
and
push
push
pop
sub
clc
insb
mov
sub
movsl
shl
flds
imul
fldcw
cwtl
cmpsl
dec
pop
lods
in
mov
adc
in
sbb
mov
leave
test
push
mov
inc
mov
jns
pop
repz
adc
ss
inc
mov
sbb
adc
outsb
int3
pop
pop
sbbb
fimull
je
outsb
stos
popa
adc
pop
sbb
xor
out
add
jl
es
mov
test
dec
mov
std
in
hlt
data16
testb
inc
xor
cmp
xorb
xorb
mov
inc
add
cmpsb
or
adc
jle
xlat
inc
movsl
push
cmp
pop
mov
sub
mov
hlt
xchg
and
call
cmp
mov
lock
cs
sub
call
faddl
jp
in
adc
sub
xchg
rorl
out
int3
add
mov
mov
nop
mov
push
cs
sbb
imul
scas
or
jnp
rolb
xchg
push
mov
cld
rolb
decb
popf
sbb
pop
pusha
push
jno
sbb
std
dec
in
test
sbb
or
js
into
adc
fiaddl
or
sub
sub
lahf
xchg
stc
adc
sbb
jno
xchg
xchg
stos
mov
xor
xchg
js
xchg
cmp
mov
adc
jbe
fildll
sti
sbb
nop
lahf
adc
mov
pusha
mov
fildll
inc
inc
and
hlt
jp
imul
xchg
xor
mov
and
pop
pop
push
sub
je
aam
sub
xor
hlt
pushf
mov
mov
fwait
test
sub
add
cmpsl
into
xchg
jnp
mov
comiss
cltd
or
xchg
ds
jge
mov
mov
xor
inc
jnp
movb
aas
fstpt
fildll
mov
fisttpll
sarb
xor
enter
jmp
sub
pop
cmp
or
xor
inc
xlat
or
ja
pop
cmp
sbb
adc
sahf
cli
or
insl
or
jb
jmp
jae
add
inc
inc
addb
or
cltd
and
pop
add
dec
push
test
adc
xchg
in
dec
sti
xchg
mov
cmpsb
outsl
and
lods
stos
pusha
push
movsb
iret
add
rdtscp
repnz
gs
mov
mov
mov
jg
es
fidivs
scas
dec
or
or
loope
jmp
inc
cmp
pop
fcmovbe
push
outsl
lcall
imul
inc
scas
sbb
outsl
loop
mov
stc
push
mov
iret
dec
mov
pop
mov
arpl
sub
push
std
popf
xor
mov
jnp
in
out
inc
mov
sti
cmp
in
lods
lods
xchg
cmp
and
xchg
ljmp
jle
inc
mov
mov
xchg
data16
jl
sbb
cld
and
lds
pusha
cld
add
jae
movsb
cmpsl
dec
cmp
jl
add
in
xor
orb
iret
jle
and
cli
push
sub
dec
push
loopne
add
pushf
inc
pop
leave
or
push
lods
test
add
scas
mulb
mov
fadd
test
aad
das
inc
xor
ror
dec
int3
inc
dec
pop
or
mov
adc
fisttps
aas
popf
sahf
outsb
push
subl
pop
and
mov
push
mov
sub
dec
ja
dec
sahf
push
lcall
test
sbb
std
mov
cltd
inc
insb
mov
dec
and
aaa
jns
jns
vpshlb
add
lret
addr16
imul
incl
stos
ljmp
sbb
and
std
xchg
aam
cmp
jo
pop
pop
mulb
or
mov
inc
stos
cmp
out
aas
adc
mov
out
dec
dec
add
fdivr
sub
and
pop
sub
xor
cld
movsb
int
lods
scas
ret
and
inc
sahf
imul
xchg
push
push
xorl
movl
sub
jmp
adc
lea
cmp
cwtl
std
sub
pop
jp
arpl
incb
sbb
test
xchg
mov
and
ficomps
cld
sbb
jge
mov
sub
and
outsb
add
push
out
inc
inc
jb
dec
sub
sbb
inc
ret
and
push
xchg
mov
shlb
dec
mov
push
mov
inc
dec
sub
repz
xor
popa
jnp
or
shll
fcompl
imul
jle
in
pop
sbb
mov
jl
add
pop
aam
popf
xchg
mov
add
addr16
es
or
out
cmc
lds
and
jno
dec
sub
rclb
shrb
test
and
std
and
dec
int
mov
mov
enter
out
mov
adc
jmp
dec
movsl
ret
stos
add
daa
imul
in
push
cmp
push
lret
jnp
in
mov
pop
mov
jg
lcall
pop
push
insb
push
dec
push
mov
fmull
sahf
pop
cld
jl
sbb
mov
hlt
add
mov
push
add
cwtl
test
dec
cmpsb
xchg
pop
mov
mov
ficoms
add
aaa
mov
push
xchg
xor
inc
sbb
push
push
inc
adc
dec
xchg
adc
movl
xchg
test
xor
dec
inc
pop
and
lret
aad
push
cmp
and
cld
pop
inc
call
pushf
mov
cwtl
jmp
out
aad
ds
mov
outsb
mov
xor
push
shll
and
shrb
in
push
pushf
lods
or
lods
mov
rorl
xor
jle
or
jbe
inc
cmc
mov
inc
bsf
add
adc
ljmp
mov
inc
mov
insl
xor
inc
shrb
add
adc
sbb
sahf
xchg
mov
scas
push
movsl
dec
push
mov
cmpsl
mov
mov
jg
inc
xor
sub
sahf
pop
fldcw
scas
inc
cld
scas
mov
push
outsb
cwtl
mov
into
shrl
lods
dec
mov
lods
and
jge
daa
jecxz
mov
mov
test
mov
shl
ret
and
adc
push
or
lret
aaa
cmpsb
repnz
sub
lret
in
pop
mov
jbe
mov
push
sub
test
loope
cld
insb
cmp
out
shll
ret
inc
lds
stos
dec
pop
or
xchg
in
pop
pushf
fcomip
in
push
fdivp
or
xchg
adcb
push
xchg
jecxz
pop
or
add
mov
sub
shll
test
dec
addr16
out
ret
and
sbb
pop
mov
ss
and
je
push
sub
xor
scas
mov
mov
mov
sbb
adc
pop
dec
inc
and
repz
mov
ss
fidivl
mov
stos
adc
add
ss
sub
jnp
pop
jge
cmc
out
push
pop
mov
adc
clc
pop
xchg
xchg
jae
test
in
aas
xchg
xor
push
scas
inc
jp
push
jg
and
sub
fwait
cltd
es
cmp
gs
mov
loop
fld
mov
pop
inc
cltd
cwtl
notl
add
stos
lock
push
jmp
fisubrs
js
cmp
lcall
xchg
mov
cmp
scas
stos
gs
add
sub
adc
leave
pushf
mov
push
mov
cmp
add
inc
cmp
or
pop
in
imul
jp
sbbl
pop
stc
dec
stos
stos
movsl
jbe
shll
jp
push
test
xchg
sbbl
clc
jle
adc
scas
insl
insl
aaa
enter
adc
xlat
xchg
leave
cmp
inc
iret
jae
push
xor
xor
call
and
dec
inc
pop
mov
and
popa
popa
scas
mov
dec
or
mov
sbb
movsb
sub
adc
fabs
into
outsl
rorb
sbb
cmp
out
enter
dec
test
testl
into
lock
xor
mov
mov
movsl
loopne
rorl
push
cmpsb
and
xor
je
fisubl
cmp
pop
sbb
cmp
and
clc
sbb
jg
scas
pop
dec
xchg
dec
jecxz
iret
and
out
jmp
jns
inc
sub
lahf
sub
cmp
aaa
jno
and
ret
or
jnp
push
lds
sbb
inc
cmp
addl
std
mov
icebp
in
mov
mov
mov
outsb
mov
add
or
out
cmpsb
jmp
pop
loop
push
fcomi
mov
roll
jle
dec
mov
mov
imull
and
push
clc
test
decl
sbb
insl
sbb
out
stos
adc
xlat
jo
outsl
lahf
inc
fldcw
mov
fdivrl
je
movsb
sub
insb
push
scas
ret
ds
or
jmp
inc
mov
ds
or
push
shrb
cmp
js
push
popf
xchg
ja
dec
inc
and
inc
data16
jae
xor
sahf
loope
xlat
dec
inc
test
test
mov
lret
rcrb
ror
jg
inc
push
gs
mov
leave
shrb
push
dec
ds
pop
imul
movl
mov
in
xchg
jp
imul
xor
mov
ret
leave
inc
mov
push
sti
push
lock
fdivrl
imul
pop
mov
daa
adc
jb
push
test
mov
and
dec
or
outsb
mov
cmpsl
int3
lret
aam
pop
cmpsl
mov
test
adc
adc
mov
sarl
lret
jg
cmp
enter
sub
adc
mov
pushf
xchg
nop
repz
pop
push
push
xor
mov
adc
mov
jo
stos
push
sub
jns
pop
inc
ljmp
sub
jnp
pop
clc
dec
cld
out
dec
lods
lods
dec
push
jmp
pop
push
pop
sub
push
dec
clc
sarb
out
cwtl
imulb
xor
shll
or
popf
ds
inc
lret
inc
xchg
push
stc
lods
iret
mov
dec
mov
cmp
stos
adcl
mov
shr
mov
and
outsb
mov
testb
stc
jmp
cltd
mov
mov
cmp
xor
insl
and
push
cmp
inc
pop
ss
rorb
cmp
jmp
imul
push
inc
into
adc
nop
std
pop
dec
call
mov
loop
arpl
jmp
insb
imulb
stos
ret
jbe
mov
xor
icebp
mov
and
add
out
fsubrs
rol
inc
dec
lret
jl
push
inc
sbb
aad
jnp
jmp
mov
cmp
fistpl
cli
xor
dec
cmp
fcmovne
xchg
insb
orl
mov
shll
ljmp
lods
insb
xor
decl
insl
push
jbe
sar
pusha
pushf
xchg
mov
cmpsb
adc
mov
dec
fstl
jo
je
ret
loope
sbb
test
hlt
mov
fmulp
scas
sbb
mov
cli
cmp
cwtl
addr16
es
mov
cmp
jge
dec
popa
scas
jp
push
mov
pop
aaa
sub
ds
movl
jle
jmp
aad
testb
inc
sub
call
les
fsubrl
dec
pop
pop
push
pop
mov
sub
sub
fwait
xchg
pop
mov
div
insl
xor
xor
cmp
jg
test
cmp
rcll
pop
push
cmc
jl
cli
cld
dec
punpcklbw
test
inc
inc
push
test
jge
inc
loop
push
cmp
sub
ret
xor
cmp
fwait
icebp
dec
loopne
in
mov
mov
push
mov
mov
push
fdivl
inc
imul
push
cmp
je
in
insb
sub
rclb
out
xorb
pop
jns
cmc
pop
pop
xchg
mulb
cmp
sub
xor
je
mov
mov
xor
dec
movsb
fsubrp
mov
adc
mov
or
mov
andl
clc
mov
or
aam
jmp
daa
dec
and
inc
xor
shlb
cmpsl
push
movsl
cwtl
popf
inc
outsl
push
jbe
inc
stc
xor
das
jno
sub
fidivs
sbb
xchg
jl
cmp
or
lock
pusha
adc
in
outsl
push
adc
jg
in
mov
jns
mov
sahf
push
push
pop
or
movsb
mov
and
xchg
hlt
sbb
jle
dec
cltd
mov
pop
stc
sbb
repz
loope
in
push
and
hlt
cwtl
cmp
push
pop
notl
inc
adc
pop
repz
pop
inc
sarb
inc
xchg
push
push
popa
jp
movsb
or
cmp
adc
mov
leave
xchg
dec
bnd
jbe
mov
ror
rorl
dec
popl
loopne
push
aad
loope
sbb
in
and
jmp
dec
stos
enter
inc
xchg
jo
pop
sub
mov
pop
pop
or
mov
xchg
sub
subb
xor
adc
mov
iret
in
push
or
and
pop
or
mov
xor
jecxz
les
fists
xchg
push
xlat
sbb
pop
and
xchg
gs
arpl
lcall
test
sub
out
mov
add
jl
adc
mov
cmpsb
add
jne
xchg
nop
stos
lea
fdivrs
cmp
push
cmpsl
movsb
leave
pop
pop
in
sbb
aaa
cmp
mov
lcall
mov
mov
loopne
jns
ljmp
inc
sub
js
lret
lret
notb
or
rolb
push
add
dec
ja
jae
fwait
in
mov
out
dec
mov
xor
pusha
jae
and
xor
inc
dec
xor
push
dec
add
push
pop
mov
hlt
ret
push
jl
enter
mov
and
aas
icebp
xchg
enter
sbb
add
std
fmul
scas
div
popa
pop
fldl
repnz
pop
ss
shrb
stos
mov
sbb
imul
sbb
xchg
inc
jnp
movsb
mov
push
lret
inc
pop
out
in
pop
mov
fistpl
into
ljmp
popa
add
add
mov
imul
inc
sbb
pop
testl
pop
or
dec
imul
lahf
pop
adc
clc
mov
stos
mov
inc
sbb
clc
xchg
adc
nop
clc
jg
nopl
push
pop
bound
ss
xchg
out
pop
mov
jle
movsl
leave
add
xchg
sahf
test
pop
dec
inc
movsb
adc
sahf
shlb
jecxz
xchg
xchg
dec
jo
stc
insb
pop
push
jmp
adc
test
cmpsl
adc
mov
out
xor
xlat
out
cwtl
mov
sbb
dec
inc
ret
add
pusha
mov
pop
pop
dec
aam
int3
mov
xchg
mov
pop
xchg
test
inc
nop
aas
xchg
inc
les
leave
push
push
call
cmpsl
mov
jno
aam
sub
push
jae
xor
int3
cmp
inc
mulb
fists
push
imul
sbb
jno
dec
arpl
lcall
imul
add
addr16
mov
sahf
shlb
imul
or
pop
fcmovb
xchg
shlb
shlb
lds
popa
in
jae
cltd
or
mov
sub
movsb
shll
pop
cld
dec
nop
pop
test
repnz
push
add
xchg
adc
cltd
mov
in
inc
shl
xchg
je
fistpll
sub
rorl
mulb
mov
gs
push
jno
lock
or
mov
add
data16
into
push
inc
xor
cmp
push
int3
xchg
adc
xchg
out
mov
jo
xchg
add
out
mov
mov
xchg
pop
movsb
sub
imul
dec
add
aam
lods
xlat
stos
xor
pop
aas
xchg
cmpsb
cltd
or
pop
scas
out
or
bound
fdivl
xchg
insl
pop
adc
mov
mov
rorl
pop
dec
jl
add
test
scas
imul
mov
mov
shlb
mov
and
je
push
and
inc
fistl
xlat
mov
xor
push
adcl
popf
testb
lock
xchg
movb
adcb
mov
jmp
pop
shlb
jle
ret
inc
loopne
fdivrl
jp
roll
xlat
aaa
popl
clc
add
out
cmp
icebp
inc
and
or
sbb
in
pop
lahf
ret
mov
mov
cmp
data16
mov
sub
cmpsb
and
jae
mov
call
push
add
add
xor
sub
jge
push
daa
cld
sub
xchg
xchg
ficoms
adc
sbb
xlat
in
sbb
mov
xchg
iret
mov
add
movsl
lds
es
lret
loopne
inc
sbb
lea
sbb
push
daa
lret
iret
mov
imul
adc
xchg
jno
mov
popa
xchg
adc
fdivrl
dec
push
cmp
mov
sbb
fcmovnb
or
daa
test
andb
ficomps
insb
mov
add
mov
xchg
mov
out
hlt
addr16
js
subl
jl
pop
xchg
dec
mov
xor
xor
xor
aaa
int
dec
shrb
ja
nop
mov
push
cs
xor
cmp
or
aas
sub
jge
jo
ficomps
dec
and
int3
outsl
mov
mov
jg
push
sub
sub
in
mov
mov
dec
push
mov
iret
icebp
adc
pop
adc
std
mov
cld
sbb
aaa
sbb
js
stos
jg
adc
fdivr
lods
adc
add
mov
fistpl
mov
mov
out
insb
lahf
sbbb
rorl
sub
sbb
enter
xor
xchg
mov
dec
scas
jle
cwtl
inc
lock
stos
rcr
and
xor
push
ss
cmpl
xchg
pop
xchg
lods
mov
pop
adc
jnp
pop
dec
in
sar
pop
popf
jmp
daa
ret
icebp
pop
roll
sbb
stos
loopne
loopne,pt
push
insb
xchg
dec
adc
jle
or
adc
cmp
call
inc
insl
test
jnp
leave
lods
mov
shl
cld
push
sbb
push
mov
add
pop
cld
repz
or
fdivs
cmc
xchg
cltd
pushf
push
cmpsl
xchg
jl
jb
je
mov
inc
adc
mov
pop
sub
mov
lea
fisubs
fnsave
lds
jg
aaa
in
jne
test
push
scas
int
add
inc
push
rcll
rclb
test
lahf
push
or
cs
int3
ljmp
jp
jno
sahf
ret
icebp
push
and
add
aad
adc
push
ljmp
or
mov
add
xchg
push
mov
jle
jns
stc
mov
dec
inc
mov
jno
mov
jo
sub
outsl
xor
xchg
and
pop
mov
dec
rcr
cmp
pushf
cmp
and
dec
outsl
fisttpll
or
pop
ljmp
mov
pop
inc
aas
scas
xchg
test
stos
sub
add
mov
out
je
jle
add
aam
das
es
in
out
jl
push
jge
sub
mov
jge
fs
jne
or
and
aas
sbbb
outsb
pop
outsb
cwtl
dec
pusha
aaa
data16
push
scas
dec
sub
sbb
outsb
jno
sub
pop
mov
fnsave
loope
mov
inc
pop
fidivs
int
imul
xchg
xchg
jmp
lahf
mov
loop
in
bound
aam
mov
push
dec
xchg
shrl
aam
mov
xchg
negb
and
mov
in
popf
enter
ret
adc
outsl
movsl
mov
pushf
bound
fmuls
xor
sbb
pusha
stos
jmp
loope
add
test
sub
outsb
pusha
adc
jp
or
mov
pop
in
mov
addr16
jns
je
fildll
or
push
leave
loop
mov
fisubs
shlb
adc
push
or
push
movb
pop
or
pop
and
mov
int3
sbb
loop
orb
and
mov
in
fucomp
sbb
mov
cli
mov
psubw
push
dec
lret
mov
xor
mov
mov
repz
add
jne
imul
jbe
sub
in
call
jp
lcall
sti
add
push
cmc
push
fwait
cmp
dec
fwait
add
xchg
adcb
sub
xchg
fidivs
inc
repz
add
aam
xchg
fistl
shrb
inc
sbb
orb
ss
outsl
lret
icebp
ljmp
fiadds
or
or
stos
insb
add
inc
cmp
adc
out
mov
dec
jno
pop
push
xor
lcall
add
imulb
and
mov
jp
stc
mov
add
imul
sti
mov
cmp
lea
mov
and
lahf
adc
pop
testl
std
mov
mov
aas
rcll
pop
jl
out
mov
pushf
pop
es
pop
mov
mov
shll
xor
inc
cmpb
popa
ljmp
xchg
sbb
or
sbb
in
inc
fistps
add
cmp
out
add
rorb
mov
mov
cwtl
mov
scas
mov
daa
adc
lret
push
inc
js
arpl
lds
inc
inc
xchg
push
lods
clc
stos
ds
and
pushf
fadd
enter
adc
sub
mov
mov
pop
in
xchg
mov
jmp
inc
cmp
sub
addr16
push
std
push
xor
ljmp
arpl
mov
add
out
add
rolb
les
xchg
sbb
loopne
cs
pop
jmp
pop
pop
jmp
mov
out
or
lock
xchg
adc
xchg
ss
xor
insb
push
push
xor
sub
xor
test
dec
setle
aaa
loop
xchg
xor
sub
and
lds
movsb
movsl
test
mov
push
sahf
ret
daa
sub
xor
aam
xor
mov
shll
and
leave
testb
jbe
loope
shr
dec
adc
jb
hlt
ljmp
es
xlat
mov
jae
daa
shlb
jmp
push
loop
or
cmp
dec
arpl
add
xor
push
jae
shlb
test
icebp
sti
dec
inc
mov
mov
test
or
sbb
adcb
xchg
or
jno
ret
jp
push
xor
les
inc
mov
test
pop
fldcw
aam
pushf
enter
xchg
ds
jno
push
pop
cwtl
or
mov
mov
push
andb
sbb
push
push
in
inc
out
rcrl
mov
out
sti
cmp
jl
push
sbb
flds
int
out
pop
inc
lods
inc
fisubl
lods
shlb
mulb
cs
add
sbb
test
xorb
in
out
dec
arpl
enter
enter
imulb
sub
pop
cmp
daa
lea
push
jl
nop
push
popa
pop
fldt
sub
pop
movsl
pop
cld
xor
or
adc
add
xchg
enter
mov
stos
in
cmp
dec
out
push
mov
sub
jmp
sahf
mull
hlt
adc
popf
cmpb
ret
pop
inc
cmpsl
stc
test
mov
lods
pop
jp
imul
mov
in
popa
dec
mov
data16
lods
js
das
repz
and
and
sbb
ds
scas
sub
mov
adc
fcompl
dec
and
pop
mov
test
cmp
lea
fs
and
inc
fimull
fstps
mov
dec
and
hlt
push
or
sub
pop
insl
hlt
and
inc
xor
jp
pop
pop
pop
pop
xor
xchg
or
in
inc
push
or
outsb
cmp
lcall
sub
mov
je
stos
jo
xor
pop
mov
xchg
inc
mov
pop
cli
sbb
lcall
or
jg
mov
pop
inc
adc
faddp
mov
and
mov
xchg
cwtl
in
dec
pop
sub
addl
sbb
fsub
ss
push
push
movsb
mov
lods
or
inc
stos
push
pop
lret
imul
or
leave
stos
sbb
popf
push
out
jns
xor
lds
test
dec
pop
or
imul
lret
lds
int
fsubp
mov
lds
arpl
sub
or
in
fnstsw
cmp
add
pushf
test
ficoms
or
mov
pop
lret
bound
jmp
negl
xor
xorb
sahf
imul
push
stos
inc
mov
inc
enter
dec
lahf
fimuls
push
hlt
mov
pop
dec
or
sbb
add
orb
and
rclb
jae
pause
adc
and
sbb
sbb
mov
fbld
sbb
add
dec
xchg
movsb
adc
ret
lock
movsl
xor
pop
jge
xchg
movsb
inc
add
mov
subl
lds
inc
shrl
cld
pusha
cmp
xor
aaa
bnd
sahf
xlat
jnp
test
jo
test
inc
and
inc
or
jne
or
pop
std
stc
mov
mov
push
mov
movb
xor
ret
dec
and
jnp
arpl
dec
sbb
adc
scas
lret
inc
sbb
pusha
xchg
xchg
jnp
in
dec
cmp
ret
test
cmpsl
mov
aad
in
in
aad
sbb
es
fisubrl
std
sub
insb
in
xor
inc
jmp
ss
std
pop
push
lock
cmpsl
xchg
fistpl
xor
scas
bound
and
xchg
sub
inc
repnz
ret
and
aas
lds
out
cmp
testl
loope
add
cmp
pushf
push
jno
lods
incb
xchg
mov
stos
es
or
stos
xchg
loope
add
sar
test
sub
add
mov
pusha
push
sti
xorl
mov
xlat
cmp
pop
aas
pop
pop
sub
insl
cmp
mov
insl
into
and
jmp
pop
xchg
sbb
imul
adc
popa
or
xchg
push
xchg
mov
arpl
jecxz
xor
and
add
mov
dec
jge
xchg
lods
call
pop
pop
aam
xor
ljmp
mov
add
data16
lock
xor
or
mov
cmp
xlat
std
js
push
sbb
pop
pop
push
das
out
pusha
jnp
scas
push
popa
cltd
and
and
push
out
addb
mov
es
push
add
mov
xlat
in
or
add
mov
shl
jns
jo
add
sarl
cli
rcrl
shrb
cld
sbb
jl
and
pop
dec
clc
ds
nop
popa
ljmp
xchg
sbb
movsl
out
lods
ss
jno
aaa
call
xchg
push
jmp
std
insb
adc
or
hlt
insb
ret
fistpl
ja,pn
sbb
inc
sbb
fs
scas
mov
enter
jp
mov
cwtl
or
lahf
lea
fcom
sbb
pop
or
cld
outsl
push
mov
ret
mov
sti
push
or
enter
loope
cwtl
ret
ficoml
out
cmp
mov
subb
sub
xor
add
xlat
jmp
hlt
stos
imul
xor
test
dec
jno
push
mov
fisubrl
jb
jnp
sbbl
or
std
jecxz
testl
lea
daa
loope
push
and
xor
add
in
inc
mov
sub
aam
xchg
dec
out
xchg
sub
dec
stc
gs
mov
xchg
xchg
and
dec
pop
xchg
jmp
pop
mov
lret
inc
or
adc
repnz
ficoml
dec
push
and
xor
push
pop
mov
inc
jne
cmp
inc
jne
js
dec
into
sub
fcomps
int
mov
push
add
add
dec
ss
sbbb
push
ss
dec
cmpsb
out
out
ret
inc
adc
lahf
test
cmpl
jg
mov
jne
aas
and
in
shrl
ret
cmp
aad
push
int
test
sbb
mov
or
test
push
mov
jge
pop
jle
mov
sbb
jbe
addr16
lahf
mov
cmpl
xchg
sbb
mov
mov
fildl
ljmp
push
mov
mov
fisttps
cmp
xor
dec
stc
jb
and
lret
push
test
lcall
daa
int3
adc
push
and
cmp
mov
xor
jne
add
adc
push
rorb
mulb
int
int
js
pop
movb
decb
aaa
out
jne
lods
subb
hlt
negb
lret
mov
notl
sub
push
xchg
mov
adc
enter
cmp
ret
pop
jg
sti
pushf
mov
cltd
adc
je
cmpsb
shl
add
jns
mov
lea
cltd
dec
std
outsb
out
jg
inc
fdivr
test
dec
std
mov
xorl
addr16
pop
fisttpl
sub
out
mov
out
icebp
mov
adc
je
dec
push
xor
dec
jno
dec
adc
dec
stc
into
jne
insl
addr16
insl
aaa
je
jns
mov
xor
mov
xchg
mov
outsb
in
push
push
hlt
js
std
pushf
pop
fwait
jnp
adcl
sbb
or
xor
add
mov
lret
jg,pt
daa
mov
add
cwtl
test
jge
pop
push
xchg
xchg
push
sub
xor
sbb
ss
ror
shlb
mov
and
xlat
cmp
and
sbb
mov
ret
mov
aaa
cmc
dec
ficomps
insl
in
pushf
and
out
aaa
lods
imul
mov
stos
xor
mov
dec
xchg
sub
pop
xchg
mov
add
dec
add
movsb
jg
fidivrl
and
stos
push
icebp
movsb
add
xchg
mov
push
dec
jns
nop
push
cmp
hlt
mov
cmp
and
and
pop
nop
add
popf
pushf
pushf
out
sub
jge
fcmovu
xchg
dec
iret
repnz
sbb
rcl
fsts
popf
jl
xor
xlat
adc
sub
leave
fwait
push
imul
mov
enter
out
scas
jg
sbb
test
sub
out
popl
mov
mov
insl
daa
cmpsb
dec
jnp
cmp
test
mov
push
sti
inc
sbb
and
addr16
in
mov
mov
pop
cltd
inc
cmp
mov
repnz
gs
push
jno
or
pop
insl
lds
mov
inc
cwtl
in
imul
mov
dec
add
shlb
pop
cltd
adc
xchg
cmp
jns
sbb
lret
movsb
fcoms
pop
fdivs
sub
mov
js
fdivs
mov
adc
xchg
mov
jo
xor
addr16
push
jb
cltd
xchg
sbb
ficompl
push
jmp
adc
push
cmp
xchg
xchg
roll
jb
adc
mov
pop
dec
pop
or
pusha
xor
in
mov
inc
push
sti
aaa
or
pop
mov
mov
fadd
iret
std
out
mov
lret
cli
stos
dec
mov
or
pushf
pusha
cli
call
mov
inc
jb
mov
js
fidivrs
and
orl
call
mov
push
movsl
insb
cmp
inc
movhps
pop
sarl
aam
cmp
push
jmp
loope
dec
lods
inc
ffree
dec
or
sub
pop
insb
add
into
scas
es
daa
sub
adc
call
push
add
ja
fistpll
xchg
and
mov
data16
sbb
pop
lods
jecxz
or
inc
imul
sbb
outsb
mov
jp
mov
in
sbb
pop
and
mov
mov
jno
pop
adc
mov
push
imul
inc
aas
test
push
push
pusha
dec
movsl
mov
jp
int3
insb
or
xor
jnp
jne
out
jecxz
jmp
mov
sub
cmpsb
push
clc
inc
xchg
ficoml
insl
pop
add
inc
add
dec
mov
push
iret
jl
jbe
mul
mov
add
add
xchg
sub
or
xor
jne
sbb
xchg
inc
xorb
mov
push
lahf
mov
das
pop
pusha
ret
mov
push
orb
pop
mov
cmpsb
adc
in
pop
lock
adc
mov
repz
scas
push
and
jecxz
jae
adc
add
repnz
adc
mov
push
ljmp
cs
sbb
mov
push
push
outsb
pusha
jb
xchg
inc
lds
push
into
sti
xor
aad
mov
mov
cmp
push
xchg
bound
or
call
inc
stos
fidivrs
shlb
inc
fisubs
lret
pop
inc
or
sbb
data16
int
jl
jg
lahf
fs
shll
push
scas
mov
into
sub
pop
out
mov
jno
sub
ds
fwait
movsb
test
inc
mov
ss
iret
mov
sub
inc
push
jmp
clc
repnz
imul
push
mov
adc
sbb
jnp
xchg
insl
in
lds
pushf
push
ds
sub
mov
fldt
pop
lret
mov
add
dec
and
clc
and
lock
lea
sbb
sub
pop
push
pop
fwait
aam
shrl
mov
add
push
mov
sbbl
xor
and
mov
push
sbbl
add
movl
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
sbbl
xor
add
jmp
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jb
mov
mov
xor
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
mov
add
movzwl
mov
adc
mov
negl
movzwl
xor
add
mov
mov
mov
inc
mov
movl
cmp
jne
add
mov
mov
add
xor
add
sub
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
xor
andl
mov
inc
mov
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
add
mov
and
movl
sbbl
movl
movl
mov
mov
neg
mov
movzbl
sub
xor
add
mov
mov
mov
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
adcl
xor
xor
xorl
sub
sbbl
sub
xor
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
imul
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
or
mov
sbb
mov
add
mov
movl
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
add
adcl
and
mov
neg
mov
mov
lea
mov
mov
mov
and
mov
mov
movl
sub
add
mov
subl
mov
xor
add
movl
jne
movl
jmp
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
adc
xor
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
mov
subl
mov
xor
xor
orl
sub
sub
andl
xor
mov
mov
mov
mov
jmp
and
mov
mov
subl
xor
adcl
xor
addl
sub
notl
sub
xor
mov
sbb
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
push
and
mov
fnsave
inc
data16
pop
pop
jp
push
popa
mov
xor
stos
and
ret
mov
cmp
jmp
sbb
xchg
mov
push
and
loope
sarb
cmp
inc
imul
adc
pop
mov
out
and
rclb
xchg
outsb
imul
bound
fcmovnb
fimuls
sbb
orb
pop
mov
aad
adc
jmp
jns
stos
xchg
sub
and
and
dec
cmp
loope
xchg
push
cmpsb
mov
fidivl
test
sbb
loop
mov
xor
inc
jmp
xchg
mov
cmpsb
inc
ljmp
pop
pop
or
cmp
mov
cltd
into
cmp
test
xchg
stos
aas
cmp
push
ds
inc
and
cmc
lods
xlat
inc
stc
cmp
int
pop
fstps
sbb
push
pushf
lret
in
pop
icebp
sub
add
sbb
int
pop
lcall
inc
iret
xchg
and
jne
mov
out
xor
roll
arpl
loope
push
mov
movsl
inc
adc
push
dec
or
cmpsl
jmp
fwait
jbe
lds
cmp
mov
mov
test
lret
orb
arpl
mov
pop
pop
mov
je
stos
ja
test
inc
ret
int
jp
call
bnd
lock
outsb
mov
mov
and
mov
sbb
ret
inc
inc
dec
stos
cwtl
inc
xor
and
xor
jnp
ret
std
push
cmc
xchg
mov
pop
lahf
insb
mov
adc
int
shlb
inc
sub
mov
pusha
ljmp
test
cmpb
mov
lahf
cs
cmp
adc
cmpsl
mov
cmpl
add
jecxz
jns
ja
lods
adc
push
inc
mov
repnz
fiaddl
inc
xor
outsb
xor
inc
push
ja
repnz
and
mov
lcall
push
and
mov
leave
in
add
xchg
sbb
mov
and
aas
mov
sub
cmp
cwtl
and
dec
imul
into
por
add
iret
mov
push
lods
mov
xchg
icebp
jecxz
xor
pop
dec
or
inc
lods
lret
in
mov
sub
lea
popa
xchg
iret
and
fstpt
aas
mov
or
rolb
pop
jno
xor
xor
dec
mov
or
jae
mov
mov
scas
data16
bound
scas
dec
mov
and
test
push
adcw
and
jl
inc
rclb
xor
or
mov
cmp
jle
lea
fidivs
dec
mov
jns
xchg
mov
push
popf
cmp
push
cmp
xchg
cmp
pop
fcomps
pusha
inc
mov
cmpsl
shrb
nop
and
cmpsl
fmull
bound
in
data16
in
fidivs
pop
imul
jae
mov
cli
cmp
or
ret
jnp
imul
jne
xchg
xchg
outsl
outsl
xchg
adc
sbb
das
pop
gs
xchg
inc
push
mov
cmp
sahf
mov
movl
ret
sbb
xchg
add
mov
dec
xor
in
inc
jne
jbe
aad
ljmp
adc
push
shll
lret
dec
fstpl
inc
ficompl
es
push
rcrb
sarl
into
and
daa
jecxz
sarb
push
scas
inc
lods
xchg
rcrb
data16
aad
mov
mov
aam
cwtl
cmp
cltd
mov
outsb
sub
xor
adc
add
jbe
inc
addr16
outsl
cmp
rorb
cmp
sub
xchg
call
mov
push
sarb
inc
lahf
scas
push
mov
sub
sti
sbb
mov
cmc
jecxz
in
sbb
in
loopne
lods
dec
addb
add
or
inc
les
mov
outsb
imul
cmp
popl
int3
pop
mov
nop
mov
pop
fs
xchg
or
dec
sahf
data16
mov
or
xchg
dec
test
xchg
cmp
xor
outsb
call
orb
jo
pop
fcoml
dec
mov
nop
push
and
xlat
jle
enter
repz
repnz
cltd
cwtl
rolb
mov
lods
idivl
mov
call
pop
push
out
mov
dec
repnz
dec
lret
cmp
mov
and
and
push
aad
jnp
aas
xorb
jle
push
clc
ret
daa
push
push
sub
mov
jle
add
icebp
shl
sub
mov
mov
orb
pop
leave
cmp
sub
push
out
sbb
inc
dec
sub
out
test
loope
inc
dec
pop
jp
ja,pt
movsl
fdiv
sbb
outsl
jnp
push
xlat
mov
shlb
ss
xchg
js
xor
adc
mov
jo
sub
pop
xor
fisubl
jmp
in
push
pop
out
repz
push
mov
mov
or
sub
dec
testl
movsb
and
pop
sbb
outsl
xor
call
fldcw
out
push
int3
stos
test
rcll
insb
mov
ret
and
outsl
in
mov
or
std
lret
mov
lds
sub
lret
adc
push
dec
scas
mov
mov
fbld
jmp
imul
mov
das
aaa
popf
add
shll
mov
popa
stos
mov
fucom
nop
push
jmp
aad
dec
sahf
outsb
add
xchg
jmp
aad
dec
mov
mov
sub
pop
cs
push
xchg
or
push
dec
xchg
enter
call
dec
out
scas
leave
mov
push
test
dec
lret
adc
push
pop
dec
push
or
jbe
leave
mov
lret
mov
popa
mov
jbe
cmp
mov
jae
and
and
mov
repz
pusha
inc
movsl
fs
mov
xchg
or
outsl
gs
lret
pusha
mov
mov
dec
loopne
jo
jmp
inc
lds
cmovle
jns
pop
mov
jle
inc
arpl
dec
cmp
gs
out
mov
into
mov
cmc
fwait
or
dec
sbb
enter
push
or
sub
pop
xchg
mov
rcll
lods
lea
mov
lcall
sbbl
out
sbb
cld
andl
lock
shr
push
loopne
xchg
into
inc
dec
lea
jecxz
std
out
test
mov
fists
or
int
add
movsb
adc
pop
sub
sahf
loop
fs
jg
scas
aas
push
jmp
cmp
pushl
ret
out
ljmp
fdivrs
lret
mov
jns
xor
dec
fnstenv
int3
lret
sti
sahf
rcll
pop
adc
push
xor
aaa
push
sbb
dec
mov
sub
shlb
shlb
rol
pop
jno
shrl
int
test
jecxz
stc
icebp
xchg
repnz
xchg
and
pusha
mov
in
sub
lods
fidivl
fdivs
repnz
data16
popf
and
mov
imul
repnz
inc
int
cmpsl
adc
or
dec
cmpb
mov
fidivl
ret
jb
pushf
test
mov
jbe
mov
mov
sub
jo
std
mov
jp
into
dec
mov
push
pop
ds
movsl
pop
mov
sub
sbb
cmp
repz
movsl
xor
adc
clc
cmp
imul
jp
incl
js
sub
jmp
test
inc
lahf
ret
aam
inc
mov
jb
mov
mov
aad
out
out
xor
aas
fs
das
push
mov
xchg
out
jmp
dec
pop
mov
test
int3
or
in
lods
mov
or
pop
fists
call
shlb
leave
das
xchg
movsb
sarb
xchg
loop
push
mov
inc
cmc
pusha
sarl
dec
sbb
push
ja
lea
xor
adc
xor
push
push
outsb
scas
mov
mov
ja
xor
ss
movsb
xor
out
insl
dec
mov
sbb
fisubrl
push
dec
ds
sub
aam
push
xchg
jmp
insl
lds
jns
roll
filds
mov
mov
inc
jl
xchg
daa
lds
and
lods
jmp
cmp
das
ret
jne
aas
in
inc
cli
xor
pop
xor
fdivs
int3
cmp
daa
mov
add
add
xlat
test
xlat
popa
out
stos
adc
pop
je
xchg
cmp
hlt
stos
mov
popa
mov
test
push
sbb
jns
pop
mov
ja
dec
jb
xor
pushf
movsb
sbb
leave
imul
pop
adc
addr16
cmpsl
aam
ja
xchg
insl
dec
pop
sub
or
lret
dec
mov
inc
mov
adc
pop
cs
repnz
sti
lcall
add
andb
xchg
jno
inc
mov
xchg
mov
cmp
into
gs
pop
stos
xor
mov
mov
nop
mov
loopne
iret
sbb
in
ja
loopne
fsubrs
lcall
sti
popa
jmp
je
ja
adc
test
fwait
and
push
popf
cmpsl
ret
adc
pusha
dec
xchg
out
and
in
inc
divb
scas
lea
xchg
mov
dec
sub
inc
out
cmp
lods
adc
add
sub
cmp
jge
ja
cmp
hlt
test
insl
cmpsb
pop
push
inc
and
rcll
mov
xchg
arpl
sub
cs
popf
insl
repz
cmp
test
mov
cmp
addr16
cltd
incb
test
in
cmpsb
jmp
add
pop
sub
aas
ljmp
xlat
pusha
and
sbb
xchg
pop
xor
mov
movl
negl
loopne
scas
and
add
add
sbb
push
sub
sbb
jg
mov
sub
mov
push
pop
loopne
data16
mov
or
inc
mov
pop
mov
ljmp
lahf
inc
rclb
jg
or
test
arpl
xor
dec
pop
fnstcw
xor
in
mov
in
pop
dec
push
pop
loopne
jbe
aaa
jns
or
loop
push
inc
addr16
xchg
hlt
dec
xor
dec
add
cs
push
xor
into
out
mov
std
jp
cltd
pop
xchg
lods
fs
sbb
push
leave
sub
push
mov
sbb
adc
enter
cmp
fistpl
pop
shrb
stos
into
jg
cmp
dec
cmpsl
cmp
jecxz
addr16
or
xchg
xchg
jmp
inc
pop
add
or
js
push
mov
cmp
shlb
sub
cld
or
dec
jle
mov
xchg
mov
aaa
cmc
and
lret
add
jmp
xorl
outsb
push
ja
icebp
stos
lahf
sbb
jnp
mov
and
test
scas
add
sbb
pop
jno
pop
nop
and
fidivl
in
inc
bound
xchg
push
mov
add
mov
xor
stos
jns
add
outsl
sbb
add
and
dec
dec
movsl
insl
push
scas
xchg
les
add
lcall
jp
and
push
mov
orb
dec
push
adc
loop
inc
aaa
adc
loop
dec
in
mov
inc
pushf
lods
jbe
sub
mov
xchg
test
adc
adc
mov
aas
cld
jg
push
insb
das
out
ror
fs
jecxz
and
push
or
mov
jb
cmpsl
pop
in
repnz
sub
sbb
jne
dec
pop
and
out
pop
jbe
or
movsb
clc
add
pushf
jmp
sub
lods
push
scas
movsl
cmp
aam
pop
mov
pusha
or
fwait
and
mov
jb
xlat
fstpt
jo
das
fcoms
enter
cmc
aaa
dec
test
pop
cmpsl
or
ja
xor
in
inc
and
dec
into
mov
mov
push
add
xor
gs
ret
mov
inc
movsb
inc
mov
or
fcoml
xchg
inc
lret
adc
mov
and
jb
pusha
das
dec
xor
into
gs
imul
rcl
push
add
adc
xchg
lret
sub
loope
bound
je
imul
sbb
outsl
jl
subb
cmp
pop
sahf
fstps
sbb
pop
xchg
movsb
bound
sbb
push
pop
ret
mov
mov
pop
clc
jg
sbb
sub
lahf
test
jmp
cmp
push
cmc
scas
cwtl
stos
add
shll
cmc
jmp
mov
enter
mov
add
mov
push
adc
fisttpll
push
inc
leave
cs
push
jg
pop
push
pushf
mov
or
mov
dec
jns
pop
jge
add
and
je
enter
icebp
stc
into
icebp
add
pop
jne
arpl
rcll
and
aad
std
pushl
pop
or
mov
sarb
jbe
and
or
not
xchg
mov
sub
mov
notl
mov
es
fdiv
inc
bound
aaa
out
mul
push
sbb
stos
xor
push
testl
lahf
divl
dec
mov
aaa
subl
rolb
xchg
jae
pusha
divl
jmp
inc
gs
and
aas
and
cmp
ds
dec
cmp
push
lock
mov
ss
jecxz
stos
jg
out
pop
sbb
hlt
mov
std
sahf
cmp
ljmp
xor
das
jp
scas
js
mov
loopne
fimull
bound
clc
ljmp
fcoml
imul
mov
lcall
scas
loope
daa
push
xor
or
pop
or
push
popa
pop
xor
xchg
pop
xor
inc
lahf
dec
cmpsl
xchg
into
push
rorb
sbb
pop
xlat
leave
cwtl
xor
sub
lcall
sti
cmpsl
push
sbb
xchg
int3
roll
ret
adc
pop
bnd
add
std
pop
xor
mov
pop
push
inc
std
sbb
xlat
cmpsb
adc
xchg
xchg
cmc
and
out
jg
jg
mov
repnz
int
in
xchg
cltd
outsb
mov
arpl
pop
fildl
es
mov
lcall
adcl
xchg
hlt
pop
push
loopne
test
arpl
ret
and
adc
leave
add
push
add
hlt
outsb
hlt
loop
sbb
or
push
inc
repnz
sub
pop
pushf
xchg
test
ret
add
lods
sub
mov
nop
push
dec
sub
cli
scas
adc
int
xor
loope
jne
clc
fwait
in
test
cmpsb
imul
nop
stos
jo
aaa
je
gs
xlat
call
xchg
sahf
shr
pop
push
in
arpl
jns
dec
adc
xor
adc
repnz
jns
repz
data16
dec
push
cmc
dec
mov
mov
mov
mov
fdivrl
mov
das
add
pop
push
xchg
out
sub
mov
add
dec
push
fildll
xor
jns
or
dec
xor
fs
mov
sbb
lock
out
mov
cmp
psrld
dec
sbb
or
rorb
push
aad
movsb
inc
orb
mov
add
xchg
cmp
lret
sub
cmpsb
cwtl
dec
bound
sbb
jmp
gs
jmp
xchg
sub
aam
bound
xchg
fwait
cmp
sub
mov
cmp
cmp
adc
dec
fdivrs
test
movsb
fstpl
pop
or
fs
enter
dec
or
add
push
ret
xor
call
xchg
ret
inc
fwait
xlat
lret
push
repnz
jno
xchg
mov
ljmp
mov
sbb
xlat
sbb
push
aad
and
jp
neg
mov
lock
mov
dec
jmp
adc
mov
les
insb
stc
push
and
pop
ret
dec
fcmovu
mov
push
xchg
mov
repz
or
ds
cmpsb
das
jl
inc
aas
mov
mov
mov
jbe
xchg
loop
sub
inc
mov
or
ficoms
and
mov
mov
adc
jge
adc
lock
jge
addl
xchg
data16
stos
jo
jp
inc
rolb
hlt
pop
push
jae
xor
mov
mov
std
in
mov
sub
dec
das
sub
pop
cli
cld
ljmp
cwtl
and
lods
cwtl
dec
and
movsl
push
leave
inc
fldl
sub
jo
imul
sbb
mov
je
and
add
loopne
test
push
loop
mov
inc
in
sahf
mov
adc
cmpsl
jle
incl
dec
cmp
mov
cli
ret
adc
push
push
sbb
sarb
and
into
or
pop
or
push
ja
addr16
adc
xchg
jmp
rorl
push
out
in
es
jno
jo
sub
daa
insb
aaa
fidivrl
dec
xchg
xlat
loopne
clc
and
out
mov
imul
pop
xchg
mov
imul
xor
pop
jne
popa
dec
negl
pop
leave
test
inc
es
jne
adc
push
mov
pop
mov
push
pop
stos
lret
xchg
xor
mov
cmc
out
jb
cmpsb
les
icebp
mov
int3
cmp
jmp
push
lret
pop
mov
push
fmuls
or
jg
or
out
dec
mov
cmp
add
xchg
jae
ud2
mov
mov
push
dec
bound
lock
xchg
iret
pop
rol
jnp
xor
and
int
ljmp
sbb
repnz
mov
jnp
into
push
inc
xor
xchg
mov
mov
xchg
loope
cmpl
pusha
ss
stc
push
xchg
lods
jbe
or
stos
mov
ffree
jl
insb
sahf
jns
shll
and
inc
inc
mov
sbb
idiv
mov
fs
push
cltd
push
cltd
adc
movsb
pop
cld
push
dec
pop
popa
gs
fildl
add
hlt
pop
sub
xchg
repz
cs
test
xchg
and
cmpsl
jne
xor
push
rcll
das
inc
loope
movsl
ret
fimuls
sub
mov
das
push
inc
pusha
dec
dec
mul
push
jno
cmp
xor
jmp
and
rcl
loopne
mov
lahf
enter
enter
es
int
sub
jnp
test
call
rorl
fdivrs
jge
test
in
arpl
fmuls
push
xor
mov
sub
mov
dec
sbb
cli
fistpll
cmp
int
popa
aam
in
inc
jbe
mov
cwtl
sahf
js
test
pop
cli
int3
mov
addl
fistpll
popa
push
outsl
mov
push
mov
and
pop
out
rcrl
stos
idiv
jb
lahf
sbb
push
shlb
jae
lds
sub
sub
mulb
inc
js
lods
andb
push
outsb
mov
cltd
mov
lea
loop
mov
stos
cmp
xchg
mov
jp
mov
dec
sahf
data16
or
repz
push
inc
xor
push
cmp
jl
fistpll
das
lret
or
push
pop
or
testb
jo
mov
jo
scas
jbe
jo
xchg
mov
pop
outsb
in
dec
xlat
mov
xchg
jp
inc
inc
inc
loop
idiv
test
sub
sub
xchg
xchg
and
cwtl
popf
mov
cmpsb
mov
dec
jno
aas
dec
into
nop
fnstsw
add
mov
dec
and
sbb
cmp
in
aam
cmp
test
mov
inc
mov
mov
adc
mov
inc
cmpsb
ja
jmp
stc
pop
testb
shlb
out
cmp
jnp
xchg
aad
mov
xchg
adc
aam
es
cmp
cmp
fs
andl
lret
cmp
mov
adc
jecxz
sub
mov
pop
scas
sbb
or
xor
push
or
push
or
call
sub
sub
stos
jo
ss
mov
xchg
push
xor
jmp
aam
add
xlat
ffree
gs
ret
or
lds
test
push
xchg
push
cmp
sar
lock
shlb
dec
jo
sub
cmp
add
imul
mov
sbb
xchg
loop
test
adc
push
sub
icebp
cmp
vmaxps
jmp
mov
add
nop
insb
aad
test
xor
mov
cmpsl
jae
mov
mov
ret
cmp
mov
out
pop
sbb
test
dec
mov
sub
adc
pop
mov
cli
pop
ss
scas
xchg
mov
insb
dec
xor
dec
lods
pop
jae
stos
popf
jl
cmpsl
loop
inc
mov
push
lods
xchg
out
mov
push
aam
xor
sub
mov
mull
mov
cmp
adc
les
jnp
pop
je
lea
scas
loop
popf
out
or
add
xchg
cmpl
xor
xor
out
xchg
sub
out
mov
ret
lret
adc
fwait
xchg
xor
xor
mov
shll
scas
mov
inc
loop
pop
insb
cmpsb
lret
shrl
mov
add
mov
dec
out
xorl
movsb
call
xchg
addb
jno
dec
sbb
mov
dec
adc
pop
cmp
fistl
hlt
testl
mov
mov
and
inc
mov
xchg
arpl
aaa
xor
test
clc
cmc
xor
or
and
sub
fidivrs
popa
pop
sub
movsl
int
dec
mov
stos
loopne
push
pop
loop
pop
pop
or
les
std
xor
in
data16
outsl
mov
icebp
das
jno
xchg
mov
int3
jb
push
inc
sbb
mov
decb
insl
mov
jle
and
inc
sbb
shrb
movsl
lret
sbb
mov
testl
in
and
cmp
or
or
mov
pushf
or
movsl
test
mov
cli
ljmp
dec
sub
cwtl
xchg
and
stos
shl
sbb
sbb
mov
mov
fnsave
jae
and
push
aam
push
addr16
mov
sbb
cli
ss
imul
and
ret
ficomps
mov
stos
pusha
inc
ficomps
xor
fcomi
int3
lods
push
hlt
or
mov
lock
int3
out
push
sbb
je
xchg
cltd
movsb
mov
push
int3
lret
push
sub
sti
adc
rsm
sti
mov
pop
daa
push
cs
inc
into
cld
mov
aad
xchg
int3
fidivrs
lahf
sti
or
test
xchg
and
aam
sbb
mov
lods
imul
xchg
lods
jg
aad
dec
pusha
xchg
ss
and
pusha
hlt
int3
inc
hlt
or
orb
fcmovnb
fidivs
lds
in
mov
leave
divl
pop
dec
xor
sbb
mov
jmp
ja
cmpsb
jecxz
mov
xor
push
cmpsl
or
jle
pop
xor
xchg
imul
or
mov
stos
lahf
xchg
aaa
neg
in
mov
cmpsb
je
mov
gs
xchg
add
sub
in
jp
test
sbb
rcrl
inc
int3
pop
cmc
pop
push
add
push
andb
mov
inc
inc
std
pmullw
mov
idiv
mov
or
out
mov
jns
or
jb
fiaddl
cmp
movsl
xchg
adcb
mov
call
xor
inc
lds
push
jne
xor
repnz
mov
loop
push
mov
movsl
dec
mov
dec
inc
movsb
sti
push
fistpll
xor
xor
dec
jns
pop
xor
hlt
cmp
sbb
shlb
push
or
dec
sarb
iret
cmc
inc
and
cmp
xchg
sub
test
icebp
xchg
xchg
nop
xorl
xchg
dec
dec
fsubl
cmp
fs
mov
sbb
pusha
into
cmp
sbb
mov
push
lret
ret
roll
sub
mov
jns
jecxz
mov
jecxz
jle
or
dec
outsl
dec
fcoms
xchg
inc
mov
mov
rolb
sbb
xlat
fists
mov
hlt
push
jge
lret
rorl
sbb
ljmp
icebp
pusha
mov
in
lcall
or
dec
int
dec
inc
mov
add
mov
cmp
jg
add
push
ds
insb
test
cmp
mov
jo
inc
call
sub
mull
movsl
out
iret
cmp
rol
sub
xchg
in
ja
pop
in
xlat
ss
imul
in
or
add
call
ljmp
mov
iret
test
pop
ljmp
loope
lock
lods
cmp
sbb
inc
pop
pop
daa
push
jle
inc
popa
adc
adc
in
scas
xchg
fstl
mov
pop
lret
sbb
das
rorl
sbb
in
mov
or
insb
xchg
cmc
add
movsb
adcb
mov
mov
scas
cmp
lcall
adc
push
mov
jne
jg
sbb
mov
jmp
and
jne
test
and
jns
mov
mov
pop
mov
jb
mov
imul
out
pop
add
in
sub
outsb
cmp
ja
movsl
mov
test
hlt
jmp
mov
nop
aad
lods
lock
out
push
frstor
xor
push
loopne
adc
aad
fwait
add
sbb
cmc
pop
loope
add
add
add
test
xor
in
push
inc
lcall
mov
xchg
lcall
ret
loopne
cmp
mov
loop
aad
popa
pop
xor
out
addl
inc
aam
lea
sti
mov
pushf
test
or
add
mov
movsb
inc
fbstp
ja
xor
inc
int
jne
adcl
xchg
inc
pop
cmp
add
nop
inc
pop
fldcw
mov
xor
mov
inc
and
in
add
mov
rclb
addr16
cmpsl
sahf
popf
sti
xchg
aaa
popa
mov
push
fldenv
mov
push
icebp
mov
push
leave
ret
pop
xor
cmp
push
call
push
mov
nop
rolb
rcll
jne
inc
jnp
movb
push
fiaddl
xor
mov
xchg
push
xor
lods
cmc
into
into
repnz
test
inc
test
adc
sub
push
out
add
in
and
mov
jae
cwtl
mov
push
xor
fisubs
je
stos
or
mov
cmp
arpl
popf
cli
jge
or
popf
inc
insb
repnz
addr16
cmp
push
sbb
dec
ljmp
mov
or
and
fstp
decb
jns
shrb
daa
xor
icebp
xchg
and
sbbl
or
sbb
lods
inc
and
lret
lahf
fs
mov
and
xor
stos
dec
mov
jge
aaa
dec
arpl
push
cmp
lcall
lea
stc
popa
mov
or
andl
mov
mov
test
shll
rorl
inc
leave
out
movsb
sbb
fstpt
sti
aaa
dec
aaa
lea
lret
xlat
and
frndint
sbb
or
add
enter
adc
test
ss
xchg
sahf
stos
mov
repz
xchg
dec
cli
or
es
es
jge
adc
pop
mov
sub
lea
jnp
bound
sbb
loope
rcr
fimuls
xor
sbb
and
inc
or
cwtl
cmp
pop
dec
xor
aam
out
dec
or
mov
stos
jne
das
dec
inc
movsl
mov
in
int3
std
adc
add
adc
dec
jle
lret
or
in
cmovp
inc
stos
or
je
outsb
or
ret
lods
imul
shrb
movsb
js
fcom
or
mov
in
in
xchg
push
jb
sub
inc
xlat
mov
ficoml
iret
mov
in
enter
jae
repnz
repz
sub
pusha
dec
cmpsb
xlat
dec
or
insb
inc
adc
lahf
cld
sarl
cli
xchg
stos
jmp
and
add
pop
mov
hlt
cmp
popf
cmpsb
pop
nop
inc
adc
rclb
dec
lret
fisttps
in
jae
cwtl
jecxz
xor
cld
xor
xchg
jns
and
in
pop
add
xchg
mov
mov
sub
inc
inc
fucomip
sub
scas
jg
lea
adc
mov
push
xchg
out
and
addr16
mov
inc
fildll
dec
sub
test
mov
add
movsb
test
fcoms
or
das
int
pop
outsl
lret
cmpsl
sahf
jmp
pop
jns
jl
inc
sub
or
outsl
test
mov
incl
xchg
dec
jnp
mov
stc
push
push
ljmp
sbb
fstpt
push
mov
fstp
jb
ds
cld
repnz
adc
push
repz
push
fidivs
test
filds
cld
loopne
jo
repnz
mov
mov
je
daa
lcall
xor
aam
push
je
jns
loop
push
and
rcrb
xchg
loop
loop
mov
cmp
daa
inc
or
and
jnp
dec
jae
repnz
mov
lock
lret
adc
lods
adc
fwait
popf
xchg
adc
cmp
ret
insb
loopne
loope
xlat
mov
pop
mov
add
test
push
outsb
jg
dec
ss
divl
fisubl
mov
sub
xor
push
fwait
repnz
pop
aas
js
cmpl
adc
out
pop
dec
push
xlat
incl
inc
aaa
cmpsb
shrl
add
arpl
shlb
add
fs
mov
bound
cmp
mov
inc
or
enter
pop
inc
push
out
pushf
repnz
jmp
jae
outsb
es
pop
dec
add
mov
insl
pop
add
xchg
sbb
loopne
pop
dec
fbld
outsl
daa
xchg
push
mov
dec
push
add
xchg
ljmp
sub
jbe
stos
in
ret
inc
pop
int3
push
idivl
dec
fidivrl
adc
inc
or
pop
in
pop
pop
adc
popf
xor
adc
pop
nop
jp
pop
or
cmpsb
outsb
jle
icebp
inc
inc
inc
cltd
xchg
xchg
mov
adc
xchg
dec
xor
inc
popf
sbb
rorb
cmp
fcmovbe
popf
cmp
sub
scas
dec
mov
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
jmp
aam
sbb
test
sbbb
cmp
pop
pop
jp
mov
adc
mov
add
or
stc
add
fadds
divb
repnz
and
movsb
and
add
mov
cmp
fdivrp
add
mov
push
test
test
divl
jne
cmp
pop
mov
push
cltd
or
or
sbb
xchg
mov
sub
jmp
xchg
lds
js
dec
fwait
repnz
sbb
sbb
sbb
scas
sbb
shl
jo
push
rorb
jnp
mov
hlt
xor
cs
cld
xchg
cld
inc
push
dec
test
mov
adc
cs
ret
cmp
or
sub
filds
leave
rol
xor
and
dec
stc
call
scas
xchg
inc
movsl
rorb
shr
inc
cmc
stos
pop
xor
dec
sahf
iret
data16
mov
sbb
xchg
push
ljmp
les
incb
pop
ja
sbb
adc
mov
cmc
add
rolb
add
dec
mov
xchg
addr16
lock
xor
in
jmp
or
gs
mov
dec
mov
push
cmp
inc
jecxz
mov
out
pop
stc
sbb
push
pop
push
mov
arpl
or
shrl
pop
push
push
or
dec
sub
sti
mov
pop
jg
ficomps
dec
push
sbb
add
andl
mov
out
cmp
push
aam
jne
jge
in
mov
out
sub
rcll
fbstp
aam
xchg
xor
cmp
test
pop
mov
fs
inc
mov
push
sbb
cli
std
cwtl
notb
mov
sub
or
js
pop
jg
xor
xchg
test
jns
jo
aad
lock
adc
movsb
fstpl
cmp
sbb
sub
clc
mov
cltd
scas
xor
jecxz
scas
cli
icebp
insb
cs
test
dec
mov
in
in
mov
add
add
mov
adc
cmp
xlat
sub
jne
push
in
add
cmpsl
mov
inc
rorb
in
aas
jle
xchg
cmp
lods
mov
push
pushf
call
call
int
or
popa
dec
dec
nop
adc
mov
lret
imull
int
cmp
sbbl
ficomps
add
inc
adc
dec
out
aam
insl
push
and
and
lds
mov
stos
mov
jle
mov
push
lods
cmp
sahf
xor
in
mov
fsubp
gs
dec
cmpb
dec
inc
std
outsb
inc
inc
in
fnstsw
xchg
movsl
inc
stos
push
lea
mov
dec
mov
shrb
sbb
dec
mov
sub
inc
aas
lcall
lea
fs
mov
aad
dec
and
mov
mov
mov
adc
or
push
adc
rclb
and
out
mov
bound
or
sub
fidivl
sar
imull
pop
push
leave
aaa
lret
sub
and
fisubrs
dec
push
loop
cli
jns
lcall
xchg
or
cmpsl
movsb
mov
pop
add
lret
insl
and
lock
fldt
into
adc
pop
mov
add
repz
mov
mov
adc
xor
jae,pt
clc
inc
shrb
sbb
int
mov
jbe
jo
pusha
ret
pop
sub
dec
or
dec
cmp
daa
movsl
inc
push
lret
in
mov
std
mov
insb
aad
test
pop
pop
loope
jnp
shll
or
fistl
jmp
xchg
pop
push
rorl
dec
fsubrs
push
mov
aaa
and
jnp
mov
pop
xchg
fiaddl
arpl
rol
cwtl
xchg
call
mov
sub
ret
mov
pop
loope
add
add
cltd
adc
sub
jno
lea
pushf
xchg
daa
dec
das
int
sbb
adc
mov
cmc
mov
into
mov
xchg
xor
xchg
push
sahf
cmp
mov
add
dec
mov
dec
inc
push
cmp
mov
jge
push
bound
adc
pop
mov
sbb
cmp
mov
inc
cmp
rcl
stc
xchg
sbb
xor
leave
sti
dec
and
jge
mov
push
dec
mov
mov
mov
repz
je
cld
stc
sbb
xor
int
ffree
xlat
xchg
das
pop
in
rol
pop
ret
rclb
mov
lods
mov
fisubl
sub
pop
arpl
fimull
sub
mov
je
mov
inc
test
inc
dec
mov
lret
enter
sub
sbb
mov
bnd
mov
out
xchg
enter
cmpsb
sbb
jge
lock
in
mov
lahf
pushf
pop
pop
push
push
enter
test
test
sub
add
cltd
pop
ja
jbe
and
fadd
jne
fbld
mov
lds
cltd
mov
sti
add
aas
or
cmc
rol
pop
cli
je
push
out
rorl
inc
inc
mov
add
jge
inc
cli
xchg
fadd
test
es
rclb
mov
adc
out
ficomps
mov
int
xorl
popf
fsubr
mov
mov
movsl
jno
mov
pop
pushf
bswap
movsl
mov
add
in
popa
mov
insb
repnz
add
test
lret
pop
push
push
jo
xchg
xorb
add
add
daa
clc
mov
adc
daa
icebp
adc
add
add
lahf
inc
cli
das
inc
jb
pop
fcoms
inc
cld
mov
pop
mov
mov
jne
sub
mov
or
js
lahf
push
fwait
imul
imulb
dec
leave
outsl
repz
addr16
ljmp
pop
decl
sbbb
mov
faddp
rorl
mov
mov
jg
dec
add
pushf
fadd
stos
mov
fisubrl
in
push
push
push
xlat
push
jo
inc
decl
scas
mov
fwait
cltd
inc
pop
in
jecxz
mov
int
jmp
dec
push
popa
lret
cli
addr16
faddl
outsl
push
and
sbb
fs
enter
jns
pop
popf
push
mov
mov
scas
or
in
jg
and
sbb
pop
dec
icebp
in
enter
sub
scas
xchg
xor
xchg
ja
adc
sbb
xchg
div
bound
popa
and
adc
dec
lcall
xchg
loop
xor
iret
and
pop
aad
mov
rcrb
or
inc
jmp
mov
loop
push
dec
js
push
cmp
stos
ficomps
xchg
push
rcrb
adc
pop
sub
adc
mov
sarl
test
arpl
adc
push
sub
xor
mov
xor
sub
and
pushf
jbe
std
in
repnz
dec
add
jp
xor
mov
fs
dec
cld
fsubl
push
mov
sbb
push
cltd
adc
out
or
inc
jmp
sub
inc
xchg
stos
test
xchg
cmc
es
pop
ror
pop
clc
ret
push
inc
into
and
sub
mov
adc
sbb
inc
mov
negl
mov
add
cld
lods
stos
cs
jg
lods
xchg
outsl
in
loopne
clc
out
mov
les
test
cmp
and
aas
inc
aam
ljmp
in
inc
and
repnz
push
fisubrs
mov
push
and
xchg
lea
jp
mov
fldcw
mov
or
sbb
shrb
jp
int
mov
bndstx
jecxz
in
movsl
bound
in
cmp
outsb
adc
fxch
in
and
or
jle
sub
rcl
lahf
mov
and
add
mov
loopne
jb
std
dec
into
mov
aad
push
in
adc
int3
sbb
inc
aam
adc
push
out
insb
inc
pop
call
mov
sti
stc
idiv
and
test
cmp
pop
cmp
std
jb
aas
jbe
scas
xor
andb
cmp
jnp,pn
clc
lods
push
jns
movsb
push
mov
pop
or
xorb
push
outsb
loopne
rcr
ret
stc
pop
inc
mov
movsl
movsl
jecxz
inc
aas
adc
sbb
test
nop
popf
loopne
xor
push
add
inc
jge
mov
xchg
movsl
jnp
push
out
mov
jg
push
adc
xor
sub
enter
int
shufps
leave
jns
xchg
ljmp
call
pop
pop
xchg
bound
test
push
adcl
orl
add
sbb
push
orl
outsb
jne
arpl
cmp
fidivrl
sbb
pop
add
stos
jge
adc
fld
test
pop
movsl
inc
sbb
arpl
iret
xchg
lcall
ret
fnstsw
xchg
adc
mov
cltd
out
es
inc
xlat
or
push
adc
pop
lds
test
iret
mov
fcoms
jmp
push
push
lock
push
or
pop
jne
cmpsl
ds
daa
loop
sub
test
lods
or
ror
sbb
or
popa
fisubs
cwtl
pop
push
insl
and
rcll
out
xchg
inc
mov
adc
out
je
test
fisubl
call
subb
xor
push
femms
mov
dec
cwtl
in
fldl
mov
movsl
punpckhbw
sti
mov
mov
inc
push
neg
inc
sbb
push
adc
xor
or
fdivl
dec
jecxz
dec
cmpsb
lds
int
test
fwait
icebp
daa
call
xor
adc
gs
aas
std
sbb
push
andb
repnz
repz
mov
fstps
lea
pop
test
push
sarb
mov
les
add
sub
ljmp
shrb
insb
mov
add
pop
xchg
pop
mov
shlb
bound
rcrl
push
out
push
leave
stos
jge
lds
repnz
scas
adc
mov
in
pop
lret
jo
pop
xchg
mov
push
xor
mov
mov
frstor
std
incb
popl
cmp
fldcw
bound
dec
or
inc
int
mov
pop
mov
jp
cs
sbb
jmp
popf
lods
cmc
jbe
adc
mov
push
imul
das
xchg
sbb
cli
rolb
xor
mov
movsl
dec
xor
xchg
jmp
loopne
pop
jae
les
adc
sbb
cmpsb
lods
stc
or
pop
dec
sbbb
bound
imul
xchg
jae
pop
xor
mov
mov
scas
sbb
leave
data16
sub
cmp
mov
daa
icebp
incl
in
dec
and
dec
popa
out
scas
mov
cmp
loopne
ret
outsl
gs
jge
in
xlat
push
test
mov
test
dec
push
and
adc
cwtl
jl
sbb
and
mul
mov
cmp
mov
inc
adc
sahf
clc
movsb
scas
cld
ss
or
mov
lds
push
inc
xor
xrelease
pop
cs
and
mov
out
rcrb
aaa
in
notl
lret
jg
cmp
mov
ret
dec
xor
int3
adc
jb
xor
insb
inc
je
cmpsl
or
mov
loopne
call
adc
push
imul
subb
or
pop
adc
adcl
jnp
sbb
ret
sub
cmp
divb
dec
ja
sbb
pushl
sbb
xor
add
cwtl
cmp
mov
xchg
scas
out
push
xchg
or
outsb
sub
andl
dec
and
jle
fildl
or
jno
lods
or
dec
aas
fnstsw
mov
in
add
or
flds
fwait
pop
imul
jl
int
xor
sub
ret
int
adc
push
cmc
mov
pop
push
and
iret
stos
test
imul
out
sbb
mov
mov
jle
dec
sub
pop
mov
jno
push
sarb
add
or
nop
aad
clc
mov
enter
sub
inc
das
lds
inc
neg
sbb
insb
and
adc
or
xchg
inc
lods
ljmp
pusha
mov
bound
push
test
mov
push
test
test
dec
loop
ljmp
inc
ds
mov
out
out
lods
fcoms
pop
cld
push
sub
outsb
icebp
adc
push
decb
aad
insb
dec
fwait
movsb
and
or
sub
cmpsb
xchg
mov
aam
push
jp
mov
and
cmp
mov
in
pop
ja
cmp
pop
or
fcmovu
fidivrl
xchg
nop
mov
xor
clc
push
popa
pop
pop
add
sub
cmpsl
decl
dec
jnp
test
add
jge
arpl
fisubl
je
dec
data16
pop
or
adc
cwtl
dec
dec
ret
out
js
incl
pop
ficomps
and
mov
jne
push
jmp
insl
adc
loope
and
addl
or
pusha
jmp
xor
jnp
inc
mov
movsl
pop
mov
sbb
idivl
jle
imul
arpl
fwait
adc
cmp
mov
pop
gs
enter
and
repz
lods
in
test
ret
dec
aaa
int3
pop
test
push
inc
fdiv
push
jg
lods
xchg
push
jae
cld
and
xchg
mov
pop
int
sti
xchg
shl
popa
cli
dec
popf
push
in
lods
leave
adc
pushf
fisubrl
push
xor
adc
add
or
push
dec
mov
or
fdivrs
arpl
add
ljmp
imul
cmp
stos
stos
or
sti
dec
and
loopne
in
icebp
jns
push
jnp
xor
pop
std
fistps
punpcklbw
movsl
aaa
push
fucom
and
xchg
addl
jne
sbb
cltd
mov
push
sti
xchg
jge
ja
jle
jno
add
jmp
jmp
jp
cmpsl
jle
adc
repnz
mov
mov
dec
sbb
sahf
fnstsw
movsl
add
rcl
inc
movsl
mov
sub
enter
add
into
xchg
jns
outsb
sahf
lods
sbb
std
adc
adc
daa
jbe
popa
sub
sbb
or
push
lea
jo
jge
inc
inc
inc
dec
lock
aas
rolb
ja
push
mov
loopne
addr16
push
mov
jecxz
call
loop
push
addr16
shrb
fsts
pop
mov
xorb
movsb
rorl
lock
push
mov
push
xchg
js
aad
bound
xchg
mov
push
in
mov
pop
test
cmp
add
jo
pop
and
test
icebp
lcall
inc
push
inc
sub
aam
cwtl
sub
scas
or
pop
pop
lock
add
dec
in
pushf
fiaddl
inc
loopne
inc
add
inc
or
fcmovbe
jno
sub
call
pop
js
out
mov
add
push
dec
mov
mov
popa
in
shll
pusha
orb
sub
pop
ds
stos
insb
push
xchg
stc
inc
fwait
xchg
data16
cmpsb
aas
mov
xor
lret
pop
loopne
in
stos
add
pop
mov
fdivrs
cmp
fdiv
jmp
leave
dec
dec
jp
les
icebp
pop
and
pop
repz
or
out
jno
cs
pop
loopne
aam
mov
dec
push
outsb
aas
cmp
or
mov
mov
outsb
dec
push
lock
aas
out
cs
xor
sub
fcoms
gs
sbb
mov
mov
subps
scas
sahf
rorb
iret
and
repz
inc
js
orl
mov
cltd
daa
sbb
imul
mov
adc
cmp
xor
les
sbb
mov
sub
loopw
xlat
cmp
and
xchg
out
jb
mov
call
js
xor
jge
sub
out
mov
in
mov
shl
sub
lds
ljmp
jno
push
arpl
jg
stos
pop
or
pushf
mov
mov
pop
aad
mov
in
jmp
adc
sbb
mov
fidivl
clc
lret
jnp
or
push
sbb
outsl
orb
pop
sbbl
and
xor
pop
mov
enter
jae
cmpsl
inc
mov
jo
mov
jecxz
out
mov
aas
inc
sbb
xchg
jns
push
jge
cs
loopne
jbe
xchg
daa
aas
movsb
cmp
setbe
rolb
outsb
mov
or
jno
ja
shrb
or
dec
mov
or
arpl
xchg
shlb
call
hlt
sbb
rcl
fnsave
ret
mov
sbb
add
inc
test
decl
in
add
or
test
inc
fidivrl
fidivrl
pop
xor
xchg
in
jmp
cwtl
xor
ds
xchg
add
dec
adc
jno
add
lds
jb
push
mov
fsubr
lods
sub
rcrb
aad
pusha
sub
les
cld
lret
mov
out
cld
repz
test
dec
test
dec
inc
pop
mov
jo
js
jae
aad
push
popf
into
mov
jne
sbb
dec
sahf
in
or
leave
push
rorb
mov
pop
push
add
dec
dec
lds
les
mov
mov
push
push
mov
popa
jmp
xchg
lds
xor
mov
adc
cmc
lahf
inc
sbb
pushf
icebp
inc
jno
mov
jecxz
jge
clc
sahf
pop
scas
and
cmc
insl
stos
lcall
mov
xchg
pop
xchg
je
sbb
fnstenv
sarb
movsl
mov
out
inc
frstor
xchg
mov
cwtl
mov
sub
or
nop
mov
dec
sub
add
fstpt
cmp
bound
fwait
mov
in
pop
xor
repnz
fcmovne
mov
mov
xchg
test
je,pn
shll
lcall
pushf
adc
dec
cmp
cld
pop
mov
ret
cmp
sbb
dec
mov
adc
adc
mov
test
movsl
dec
lret
out
popa
and
mov
or
dec
ja
sbb
xchg
insl
pop
fists
dec
dec
sub
test
shll
iret
adc
das
test
dec
icebp
xchg
addl
ret
xchg
add
fcmovbe
mov
mov
call
nop
cld
mov
divb
movsl
jae
pop
out
fsubl
xchg
mov
sarb
in
dec
dec
lock
sbb
cmp
lods
sub
rcrb
inc
clc
loopne
aad
ss
cltd
scas
mov
push
sbb
fnsave
cwtl
ss
cmpsb
loop,pt
mov
mov
cwtl
int
jbe
stc
aad
ljmp
sub
push
mov
mov
dec
ret
fsubs
sbb
adc
push
scas
repz
fadd
out
sub
les
ss
pop
fucomi
pop
jno
sub
xchg
dec
mov
mov
jecxz
rcrb
lds
pushf
gs
cltd
les
push
rcrl
cmp
mov
pop
adc
fsubr
mov
or
sub
mov
lock
hlt
inc
fwait
shlb
loop
pop
lock
lret
mov
cs
addr16
stos
sub
lcall
push
xchg
cltd
dec
dec
mov
mov
out
and
sbb
sub
lahf
cli
sahf
js
cmp
movups
cmp
mov
dec
xchg
bound
push
mov
stc
sbb
fmull
leave
das
inc
lahf
addr16
add
movsl
cwtl
in
lret
cltd
adc
scas
jns
popa
ficompl
lods
ss
or
xchg
repnz
je
enter
or
sbb
jo
push
inc
cmpsl
shl
and
notb
fadd
adc
inc
mov
cmp
mov
add
icebp
inc
sahf
out
push
ja
xchg
pop
mov
loopne
xchg
rcll
jmp
mov
dec
mov
inc
or
lea
in
sahf
push
sub
adc
out
scas
dec
lret
jne
nop
insb
outsl
cmp
ds
cli
int
sbb
inc
mov
js
mov
push
sub
lods
and
pop
dec
test
stos
mov
rcrl
daa
sahf
aam
push
je
aaa
repz
push
fs
pusha
arpl
mov
add
in
inc
push
cwtl
sbb
mov
shl
lods
pop
push
jecxz
into
inc
out
mulb
xchg
pop
aad
add
mov
out
mulb
and
cmp
rcl
cmc
out
nop
in
mov
testl
gs
dec
lahf
inc
shrl
and
push
or
push
stos
xor
mov
jno
and
fwait
orl
lea
shlb
jg
mov
sub
test
mov
sub
add
pop
shlb
jp
scas
add
cmpsb
out
sub
mov
arpl
pop
cmp
cmp
roll
xchg
idivb
and
xor
pcmpeqb
ds
repz
cmpsb
scas
cmp
daa
rorl
sub
lods
jnp
inc
push
jb
stos
stc
test
and
hlt
gs
push
test
jg
ljmp
cwtl
jne
ret
mov
dec
push
mov
add
push
jno
jl
xchg
mov
fcomip
sub
dec
fsubs
sub
aaa
out
icebp
pop
stos
dec
push
hlt
mov
inc
es
subl
rcr
jno
sub
or
xchg
mov
cmp
and
jae
int
les
cmc
adc
xchg
lahf
out
subb
test
inc
push
rcrl
lods
adc
jecxz
jno
dec
std
add
xchg
cltd
dec
pop
sahf
iret
mov
dec
xchg
mov
pop
adc
pop
jp
mov
leave
sbb
xorl
sarb
leave
insl
ret
int3
or
fidivs
out
testb
daa
adc
lret
inc
jp
mov
xchg
jno
and
push
mov
imul
in
cwtl
out
nop
pop
inc
clc
shlb
test
cwtl
xchg
test
mov
repnz
xor
or
cld
mov
dec
pop
decb
mov
and
in
pop
mov
pop
jne
lods
jp
std
ljmp
test
xor
dec
xchg
pushf
addr16
jns
lds
sbb
dec
fdivrs
icebp
imul
and
sub
test
xor
test
mov
pop
shll
lods
jge
sbb
daa
shll
out
stos
push
sbb
in
aam
cli
push
push
ficoml
push
nop
int3
ret
fisttpll
popa
scas
cmpsb
mov
push
shl
les
pop
pop
jbe
lahf
pop
mov
xor
or
sub
jnp
shrb
ljmp
mov
mov
sub
push
int3
iret
pop
imul
pusha
mov
clc
mov
fistpll
adc
js
xchg
sub
iret
divl
mov
cwtl
jecxz
in
aam
out
pusha
popa
jae
ret
jg
or
loop
mov
fs
shrl
cld
fstpl
cmpsl
xchg
rclb
cltd
xlat
mov
notb
sahf
jmp
int
push
ret
xlat
or
fs
iret
push
pusha
out
addl
sbb
or
cmpsb
fisubs
test
ss
or
mov
and
imul
mov
add
in
sub
cltd
jl
xchg
add
push
pushf
fs
and
and
stos
push
sub
test
mov
repz
xchg
arpl
pop
mov
jbe
sbb
mov
mov
pop
jg
loopne
stos
jae
es
lret
ret
xchg
add
movsl
add
adc
sub
ja
xchg
mov
pop
sbb
jecxz
jo,pn
and
jge
rcrl
pop
movsb
or
popa
and
sub
mov
call
lock
in
push
icebp
xchg
dec
jb
cmpsb
addr16
jnp
insl
jno
inc
xor
out
sub
cltd
inc
or
out
lret
pop
push
inc
jae
mov
push
or
jge
xchg
sbb
loop
cmp
and
scas
jnp
pop
xor
cmp
pop
out
inc
pop
dec
mulb
lds
fiadds
add
test
rcll
pop
int3
mov
cmp
xchg
fimuls
sub
sbbb
lods
xor
bound
andb
movsb
std
ss
lods
adc
and
mov
jg
pop
sub
lods
jmp
jge
outsb
add
xor
cmpsb
lret
cs
test
or
jnp
aaa
insl
inc
negb
dec
ja
cmpsb
dec
cmpb
addr16
push
lods
xor
outsb
scas
daa
dec
mulb
roll
lods
test
das
jno
loop
call
push
out
daa
or
icebp
enter
mov
inc
xchg
pusha
jo
repz
andl
jae
and
mov
dec
fstl
jae
ljmp
mov
repz
or
cwtl
sbb
cmp
cmp
xchg
cmpsl
push
dec
and
shrl
ror
lds
cltd
arpl
sbb
dec
xchg
jno
dec
and
mov
sbb
out
test
jne
cwtl
in
xchg
sub
fldt
pop
cmp
or
fildl
in
mov
inc
xor
std
xchg
xor
mov
jbe
xchg
push
roll
sub
dec
push
push
adc
fs
dec
pop
daa
xchg
mov
inc
jnp
mov
mov
push
das
stc
aaa
hlt
sbb
ret
cmc
xchg
push
or
cmp
lds
sbb
add
mov
call
in
es
or
jmp
xlat
into
jns
adc
stc
push
sbb
sub
xor
mov
clc
ljmp
into
cmc
inc
leave
inc
lahf
icebp
mov
or
sti
out
jle
pop
aad
ss
push
dec
adc
inc
imul
gs
mov
ret
push
xchg
add
sbb
sbb
xor
icebp
movb
mov
ja
or
addr16
repnz
and
into
push
jmp
sub
insl
ljmp
aas
xchg
and
jl
ljmp
ret
xchg
in
ja
xchg
outsb
insl
lret
test
test
popf
mov
jl
filds
out
int
mov
inc
test
jns
xchg
dec
xor
das
mov
loopne
adc
xchg
ret
sub
clc
decb
cmc
cmp
push
cmp
cmpsb
in
mov
loop
mov
pop
sahf
test
sbb
inc
pusha
inc
sbb
pushf
hlt
jmp
lds
lods
outsb
ret
fcmovb
or
cvtpi2ps
insl
cmpsl
dec
xchg
imul
jb
or
nop
cmp
xor
jno
sbb
clc
hlt
inc
sub
pusha
sbb
push
ficomps
dec
pop
xchg
xchg
push
rclb
add
xorb
mov
insb
inc
leave
xchg
lahf
or
xchg
pushf
adc
out
jbe
popf
add
cltd
xchg
inc
ret
aam
mov
jp
scas
pop
push
in
inc
repnz
ds
lahf
jo
daa
jg
shl
pop
add
cmc
mov
pop
mov
sbb
pop
stc
iret
int3
xchg
addl
sub
push
std
gs
js
ret
sbb
sbb
dec
fidivrs
and
mov
xor
int
clc
mov
popl
pop
in
int
cmpsl
dec
cmp
dec
sub
or
push
xor
sub
xchg
das
and
mov
enter
mov
sub
int3
cmpsb
mov
jl
push
inc
cmpsl
clc
push
repnz
bound
inc
or
add
pop
dec
std
sti
nop
loope
cmp
das
or
test
outsb
enter
lea
mov
adc
sarl
mov
xor
popf
xor
out
or
jns
push
jno
mov
out
inc
out
inc
int
out
sub
adc
popa
sbb
mov
rcll
aaa
shr
loop
pop
inc
lock
fistps
push
mov
pop
and
push
adc
lock
test
mov
push
push
insl
ds
mov
inc
lcall
outsl
ffree
in
lret
add
popf
aad
and
outsl
cmp
adc
lahf
mov
out
cmp
out
pop
stc
test
and
ficoms
ret
jl
push
jecxz
out
sti
fwait
das
jnp
dec
imul
xor
out
test
andl
pop
jns
or
iret
enter
dec
movsl
sarl
std
repnz
cmp
fistpl
jecxz
sub
cwtl
movsb
in
pop
push
jae
scas
inc
fsubrs
pop
adcb
ds
inc
xor
lret
jg
cmpsb
std
test
cli
std
les
bound
mov
and
add
mov
and
lcall
xor
xchg
dec
sub
pusha
push
push
sbb
push
into
scas
lcall
loopne
hlt
jl
sbb
xor
push
dec
in
pop
stos
test
fisubrl
ss
push
mov
jbe
xchg
sbb
push
leave
dec
and
fmuls
mov
cld
mov
fisubs
fbld
inc
jne
dec
out
faddl
enter
out
xor
sar
mov
cmpl
jmp
lahf
nop
out
sbb
in
jnp
jae
decb
cmpsb
loop
inc
arpl
mov
out
lock
loopne
add
pop
test
insl
hlt
mov
cmc
loope
jmp
sti
lea
cmp
flds
sbb
cmpsb
mov
sub
mov
sbb
ss
bnd
push
mov
mov
test
loop
mov
divl
test
jl
mov
mov
xchg
mov
negb
xor
push
cltd
stos
push
cld
lods
lea
fists
ss
xchg
js
aaa
insb
fs
push
scas
pop
xchg
cli
cmp
imull
repz
mov
sbb
sub
dec
jge
cltd
mov
sub
mov
pusha
dec
and
nop
sbb
mov
mov
pop
std
test
data16
sbb
loope
xchg
xorl
ds
sbbb
cmp
push
push
mov
sbbl
mov
jge
je
in
test
xor
push
mov
and
jae
mov
inc
inc
jo
or
aad
pop
sbb
xor
outsb
push
add
leave
mov
lods
arpl
push
pop
push
inc
lahf
sbb
inc
sti
sub
lcall
fdivr
int3
loop
aaa
icebp
dec
sbb
les
xchg
sub
stc
test
out
rorb
mov
jne
adc
lock
push
sbb
adc
enter
loop
test
lahf
loop
add
movsw
dec
add
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
inc
push
xor
push
mov
mov
add
mov
decl
mov
mov
mov
xor
movl
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
movl
sub
mov
or
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xorl
add
mov
mov
sub
mov
orl
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
push
call
cmpl
jb
mov
addl
mov
adc
sub
or
mov
orl
subl
mov
mov
sbb
sub
adc
mov
add
orl
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
xor
add
dec
mov
jmp
mov
mov
sub
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
jmp
jge
pop
add
sti
jge
jne
pop
in
mov
je
jns
pop
pop
jp
mov
les
and
add
adc
adc
loop
pop
imul
cmp
mov
inc
adc
xchg
sar
jo
pop
xchg
lea
inc
lret
inc
cmp
pop
out
mov
sub
xor
dec
clc
test
lock
ret
push
mov
stos
loope
mov
lea
rorl
cltd
sahf
ja
mov
bound
and
mov
das
jl
jne
ds
aaa
push
pop
sbbb
lock
loop
sbb
cmc
dec
mov
sbb
adc
or
into
in
jl
mov
pop
mov
fmull
fdiv
movsb
idivl
fs
dec
out
test
jb
jns
cmpsb
pop
jbe
push
fistl
mov
mov
sahf
and
dec
adc
add
outsb
mov
adc
scas
rcrb
lods
dec
insb
ret
lcall
cmp
xor
adc
adc
xchg
cmpsl
inc
xor
xchg
aas
icebp
xchg
enter
jle
pop
push
mov
sbb
roll
push
cwtl
push
sub
push
enter
cmp
and
xor
int
pinsrw
lcall
leave
sbb
icebp
pop
cltd
mov
jb
inc
out
roll
adc
movsl
sahf
xchg
and
pushf
mov
mov
movsb
popa
fldcw
dec
fnstenv
std
enter
jecxz
mov
incl
mov
jmp
daa
sbb
outsb
xor
es
es
icebp
mov
mov
mov
sub
cmp
pop
rcl
push
mov
test
push
or
xor
pop
dec
and
sbb
test
cmc
clc
ret
pop
inc
das
pop
fs
mov
and
ss
ret
pop
scas
xor
push
stc
out
repnz
lea
in
mov
rcll
add
push
push
sbb
dec
push
sti
call
cld
cs
sbb
jl
push
cld
fsubrs
fisubrl
and
cmp
enter
out
cltd
xchg
mov
lret
xchg
sub
fcomps
les
push
mov
aas
push
xor
lcall
cmp
out
mov
hlt
lds
xor
imul
or
dec
dec
mov
and
mov
xchg
out
cmc
imul
lods
cmp
mov
mov
xchg
int
int
mov
push
faddp
sub
loop
shll
mov
incl
jp
hlt
mov
jns
jno
aam
or
xchg
fisubl
xor
insl
mov
cmp
cmpsl
leave
jne
or
sbb
out
fiaddl
aaa
push
adc
das
in
and
leave
test
xor
cmpsl
roll
push
cmc
shr
ss
sub
stos
mov
sti
push
dec
adc
insb
sbb
ret
jmp
fcomps
jecxz
xchg
cmp
ss
subl
mov
jecxz
cmpl
fistps
lods
test
test
mov
repnz
push
push
aas
xchg
push
jbe
daa
push
loopne
out
in
xchg
cmp
lcall
dec
mov
xor
dec
jge
faddl
push
or
xor
jbe
pop
add
mov
addb
mov
popa
ret
xlat
mov
rclb
and
sbb
xorl
pop
push
xor
movsl
pop
mov
push
jns
out
enter
push
and
or
xor
cwtl
out
add
rcrl
jae
xor
enter
pop
iret
push
pop
add
es
call
subl
int
sahf
mov
rcrl
mov
and
cmp
cmp
push
mov
dec
stos
inc
movsb
iret
cmpsb
out
ja
jle
pop
pop
jno
sub
hlt
xchg
xlat
push
jmp
and
sub
fistpl
out
and
repnz
jmp
or
xchg
cltd
repnz
fs
sbb
dec
mov
xor
and
mov
test
mov
iret
pop
out
mov
roll
popl
test
mov
cltd
xor
sbb
sti
push
insl
fsubs
xor
pop
jb
outsl
sub
and
cmp
inc
pop
xor
push
mov
and
push
mov
xor
ds
imul
sahf
jo
enter
or
repz
jmp
inc
inc
pop
push
cmpl
jbe
xor
stc
xor
jge
and
mov
push
ljmp
in
fwait
add
xorb
lcall
fwait
cmp
stc
and
cmpsw
push
pop
jmp
mov
xor
jnp
mov
mov
cmp
pop
mov
adc
xchg
shrb
pop
bound
ss
cld
fadds
adc
sbbb
lods
mov
fisttpl
stos
dec
or
jmp
xchg
inc
push
sbb
js
ret
sbb
cs
push
mov
pop
xor
jp
sbb
arpl
pop
push
cmpsb
cmpl
mov
pusha
mov
dec
sbb
les
xor
imul
mov
movsb
cld
rcll
arpl
repz
xor
cmp
lods
pop
out
push
lcall
ss
fs
sub
int3
sbb
adcl
add
jp
fnsave
cli
rcrl
mov
cmp
shll
js
jecxz
sbb
shr
sbb
cld
out
data16
popa
sbb
enter
push
cmp
sbb
sbb
or
out
jg
add
push
mov
sbb
lcall
cs
and
insb
je
lds
fimull
orl
push
sbb
mov
stos
xor
push
sbb
imul
adc
mov
mov
sub
les
cwtl
popa
mov
lcall
push
dec
mov
push
mov
or
in
jnp
and
imul
mov
mov
sbb
sub
fs
mov
push
inc
push
test
add
jg
inc
shll
push
lret
fisttpll
add
test
outsl
sbb
ret
rorl
popa
rcrl
fiaddl
mov
in
push
mov
aam
jbe
xor
test
pop
adc
dec
cmp
cmp
xor
add
mov
ret
pop
in
xchg
push
jno
push
xchg
bound
push
hlt
sub
pop
mov
mov
lock
fs
xchg
ret
test
imul
aad
mov
or
push
push
or
cmp
leave
push
rcrl
cmpb
imul
mov
mov
or
stos
xlat
outsb
xchg
mov
fstpt
test
rorb
enter
xor
cmp
out
adc
push
loop
jp
scas
push
pop
int
push
into
fmull
inc
pop
sub
gs
mov
stc
or
xchg
or
sbb
std
testl
clc
shll
pop
sub
adc
xor
movsb
fdivr
aad
sahf
sbb
gs
fldenv
gs
imul
xchg
icebp
dec
mov
mov
pop
cmp
xchg
pushf
mov
pop
ja
adc
jbe
jbe
mov
insb
jecxz
sub
movsb
into
out
or
scas
rorb
xor
sti
fidivs
jge
lcall
lods
lret
adc
push
xor
sbb
adc
test
fwait
shrb
repnz
pushl
or
mov
std
clc
or
dec
lds
mov
addr16
xchg
xchg
mov
test
imul
dec
mov
pop
gs
sub
aad
pop
or
and
dec
add
lods
mov
push
nop
sub
pop
or
pusha
sahf
cs
popf
push
aas
pop
mov
iret
repz
lret
test
shrb
repz
in
mov
push
mov
jmp
dec
fdivrl
push
adc
mov
ds
lock
add
outsb
dec
stc
jle
cmc
adc
mov
jbe
mov
mov
cmp
push
out
xchg
inc
and
fisubrl
gs
inc
ss
dec
jb
and
cmpsl
push
sub
mov
psubsw
cmpsb
daa
in
mov
xchg
inc
add
xchg
add
scas
hlt
and
mov
add
inc
sbb
daa
cmpsb
add
hlt
out
in
fisubrs
fs
int3
push
inc
xor
loopne
lret
mov
in
icebp
pop
jnp
notl
push
add
add
xchg
and
xor
test
add
lret
jns
jb
xchg
into
test
adc
std
stos
sbb
cs
cmp
int
adc
cmc
add
and
out
adc
cmp
cmpsl
inc
das
and
inc
popf
in
iret
xchg
cld
jmp
in
mov
xchg
insb
paddw
pop
out
push
jmp
or
or
pop
mov
sbb
push
movsl
mov
lods
lock
xor
out
ret
cmp
mov
inc
jmp
cmp
dec
stc
out
jl
xor
daa
fbld
push
push
imul
inc
adc
cmp
xor
push
dec
jg
stos
pop
dec
or
fs
lds
jle
out
xorl
or
outsl
jno
cmp
ss
mov
pop
sub
pop
loope
sub
filds
pop
pop
in
icebp
scas
inc
push
idiv
pop
mov
xchg
and
sbb
xorl
icebp
pop
add
in
ds
out
add
insb
pop
inc
lea
lret
outsb
or
lret
pop
call
pushf
test
push
xchg
xor
lret
and
jle
loope
sbb
push
jecxz
sub
or
and
mov
adc
or
in
ja
roll
mov
lret
mov
int3
ljmp
inc
imul
inc
xchg
test
mov
iret
sbb
pop
sbb
jns
mulb
imul
mov
pop
cmp
icebp
test
leave
int3
call
inc
scas
fbld
movsl
pusha
xor
and
push
xchg
sub
dec
mov
dec
push
gs
pop
fstps
cmp
mov
cli
adc
adc
or
mov
movsl
sbb
dec
leave
pop
ret
jns
imul
loope
nop
mov
pusha
les
divl
fsts
cmc
or
cmc
sbb
in
enter
and
adcb
inc
jo
and
and
addr16
pop
and
les
cmp
or
arpl
xchg
dec
in
lock
aaa
jge
dec
adc
cld
repz
sbb
sbb
ffreep
dec
mov
aad
sbb
sbb
add
mov
xchg
mull
fidivl
stos
mov
jl
insl
in
pop
cmp
push
cwtl
test
test
or
lret
mov
fwait
inc
jno
imul
arpl
stos
daa
lahf
mov
mov
or
repnz
xor
scas
or
pop
mov
ljmp
in
jge
pop
dec
push
mov
pop
push
icebp
mov
fidivl
pop
or
mov
fildl
in
inc
or
cmovl
sbb
mov
sarb
push
adc
xchg
inc
dec
sbb
mov
jmp
shll
cs
mov
cltd
clc
sub
hlt
mov
lret
sub
imul
push
mov
sub
xorl
sub
movsb
mov
adc
xchg
stos
fdiv
adcb
xchg
cmp
fiadds
jo
in
test
xor
mov
jbe
nop
lret
lods
inc
adc
push
add
inc
mov
jno
cmpsl
sbbb
enter
mov
fmul
pop
mov
pop
repnz
mov
enter
cmp
sbb
out
mov
mov
lods
mov
bound
dec
xor
insb
pusha
cmp
call
into
pusha
push
sub
xor
fisubl
mov
bound
xor
push
inc
or
cli
repnz
push
out
adc
jg
mov
in
jle,pn
and
ds
cmp
pop
mov
lock
sub
push
hlt
fistpl
pusha
cli
popa
pop
adc
mov
and
xchg
mov
mov
xchg
pop
js
and
stos
jo
dec
repnz
bound
mov
mov
sbb
scas
int
inc
fcom
arpl
mov
and
or
dec
mov
dec
or
in
mov
addl
shrl
pop
loope
xor
jo
dec
xor
rorb
outsl
in
sbb
into
lret
cmpsl
ljmp
mov
mov
divb
jno
and
stc
outsb
xor
sub
into
pushf
jge,pn
pop
ret
js
loope
hlt
or
jns
out
bt
call
aam
xchg
sbb
pop
loope
jp
or
aaa
and
ffree
bound
xchg
or
mov
loope
mov
sbbl
mov
jb
jecxz
push
xor
popl
int
scas
mov
adc
adc
ret
jmp
push
jmp
add
mov
cmc
addr16
popa
pop
mov
and
sbb
jl
dec
aas
xchg
test
push
movsl
mov
scas
xchg
imulb
inc
outsb
lods
inc
pop
mov
aaa
cli
rcrl
cmp
inc
ss
ret
fwait
push
cmp
imull
ds
dec
jb
pushf
insw
fsubs
stc
xchg
jmp
jecxz
push
loop
mov
xor
xor
les
pop
ja
dec
sbb
std
inc
jle
mov
jg
andl
fwait
mov
lret
jecxz
sidtl
and
jecxz
inc
sbb
mov
js
cmp
jbe
jne
inc
push
adc
mov
pop
sub
dec
ds
rcrb
jno
xor
fidivs
adc
rcr
mov
loop
es
or
dec
pop
popa
inc
fiadds
inc
xchg
outsb
mov
dec
in
test
pushl
adc
jno
pop
std
mov
test
xor
push
fimuls
pop
nop
jns
jg
ja
add
xor
jnp
mov
fwait
sbb
push
xchg
lds
mov
xor
mov
mov
outsl
jl
xor
nop
dec
mov
mov
or
lret
add
pop
push
insl
mov
ja
mov
mov
pop
ja
sub
int
repz
lods
mov
xchg
movzwl
ret
lahf
sbb
cmp
or
push
sbb
out
mov
inc
ljmp
loop
jb
cwtl
push
add
add
jecxz
lahf
mov
fimull
scas
mov
out
mov
add
popf
inc
sahf
sahf
and
sub
mov
imul
out
imul
ffreep
jmp
insb
add
add
and
mov
mov
aad
das
mov
sub
mov
pop
mov
fisubs
cmp
sbb
push
jnp
dec
vmread
fs
sbb
mov
and
out
dec
mov
sbb
adcb
add
xor
aam
ljmp
sub
je
bound
leave
pop
mov
sbb
mov
in
loope
addr16
sbb
idivl
call
and
mov
rcrb
repnz
inc
mov
mov
in
ds
push
xlat
push
dec
test
cmpsl
pop
pop
inc
mov
repz
mov
int
pop
nop
push
jl
sbb
scas
adc
inc
mov
scas
or
mov
mov
orl
rep
xchg
and
jp
cvttps2pi
sbb
in
push
les
adc
sub
loope
or
outsl
stc
js
ss
call
mov
lea
adc
lcall
test
inc
fwait
shll
out
mov
in
call
inc
aaa
inc
add
jb
inc
push
inc
imul
ja
inc
sahf
or
mov
das
mov
imul
or
jns
lret
mov
das
imul
jg
bound
or
xor
xlat
sbb
xorb
test
jo
loopne
pop
repnz
jmp
mov
mov
push
leave
lock
mov
adc
imul
xchg
add
rcll
sti
add
jge
dec
jno
dec
xchg
sbb
mov
mov
fsubl
and
hlt
sub
daa
repnz
mov
enter
jbe
out
inc
push
cmp
pop
testb
leave
push
pop
pushf
popf
cltd
das
ret
inc
out
or
out
nop
sbb
sub
dec
rclb
lcall
negb
negl
divb
std
sti
xor
pop
into
push
cmp
push
mov
cmp
lea
lret
sub
ljmp
cwtl
into
gs
mov
cmp
xchg
frstor
fdivrl
inc
loop
push
add
and
xchg
inc
aam
pop
cmp
mov
dec
adc
jl
pop
lea
xlat
repnz
or
inc
adc
popf
mul
je
and
inc
scas
ret
inc
adc
fdiv
sbb
inc
adc
loop
dec
mov
roll
adc
jp
mov
xor
pop
rorl
aas
lods
es
xchg
in
ss
xchg
push
mov
jno
xchg
sbb
out
ret
insl
lods
ja
lock
enter
inc
xor
int3
sbb
mov
push
adc
inc
add
pushf
mov
inc
jecxz
pop
insb
adc
outsb
lahf
out
sahf
jo
xlat
pop
xor
iret
pop
addr16
lods
push
mov
pop
jno
popf
xchg
mov
les
pushl
rcrb
cmpb
minps
rolb
sbb
xchg
cmp
mov
ss
fadds
out
add
xor
push
mov
cmp
test
cmp
insl
or
nop
stos
fs
or
cli
push
dec
stos
das
sbb
mov
scas
xor
push
cmp
xchg
clc
test
adc
aaa
and
mov
mov
xchg
add
pop
jbe
and
inc
pop
int
outsl
jb
cs
lods
dec
arpl
xor
lods
mov
and
jg
jecxz
pop
sbb
ficoml
dec
mov
push
pop
shrb
sbb
imul
xchg
cltd
icebp
jl
cs
jbe
jo
outsl
gs
xchg
push
cmp
mov
push
js
shrl
lods
leave
xchg
aas
out
xchg
adc
pushf
adcb
and
hlt
mov
inc
mov
sbbl
jle
fwait
mov
push
cli
lahf
in
mov
push
pop
inc
add
push
andb
inc
pop
into
push
cwtl
rorl
out
lods
xchg
jne
aam
adc
sub
ficompl
mov
mov
add
jnp
shlb
xor
aad
cmp
jno
nop
sahf
orl
cs
or
daa
leave
loope
push
push
repnz
iret
mov
out
mov
inc
test
hlt
fnstcw
sbb
scas
pushf
adc
in
ljmp
lret
cmp
test
mov
pop
je
int
jb
push
stos
push
sbb
ficompl
inc
fwait
pop
ljmp
imul
cmc
push
mov
mov
mov
outsb
mov
loop
data16
in
add
fidivs
lock
mov
lret
mov
aad
dec
lea
popa
je
or
leave
incb
sub
xchg
fmul
pop
xchg
mov
loop
xchg
loop
repz
cmp
add
movsl
push
mov
dec
push
or
call
inc
jo
cmp
scas
add
xchg
stc
stos
movsb
pop
jge
xlat
mov
push
ds
push
insl
inc
inc
jecxz
mov
cmp
pop
inc
sbb
fistpl
filds
xchg
enter
lret
push
ss
jmp
xchg
lds
leave
sbb
loope
adc
mov
clc
xchg
dec
dec
shufps
push
pop
hlt
xchg
ret
out
mull
or
xor
movsl
rolb
jne
daa
or
or
push
fs
inc
add
mov
cmc
ja
xor
inc
daa
scas
sbb
push
mov
ss
pop
push
jns
daa
sbb
lcall
es
xorl
mov
cmp
pushl
in
mov
dec
mov
dec
ljmp
jl
in
aad
xchg
sbb
notb
cmc
and
lcall
fcomi
into
fwait
sti
hlt
cmc
pop
adc
popa
fcoms
je
fildll
lahf
test
push
dec
mov
sbb
push
mov
xchg
ljmp
sub
jno
sbb
push
ljmp
sbb
lret
adc
imul
xor
outsb
or
lods
push
or
into
shr
or
ljmp
adc
sub
jp
pop
sub
jge
jl
mov
adc
sbb
xchg
ffree
lahf
sub
in
cmpsb
add
mov
insl
in
inc
cltd
test
ficompl
aaa
cs
ds
ret
movsb
scas
shrb
push
xchg
loop
xor
jno
sub
xor
dec
inc
mov
push
jle
xchg
les
mov
mov
sub
mov
xchg
out
and
jnp
fidivl
testb
fidivl
mov
test
mov
out
push
add
cmpsl
adc
sbb
mov
lods
push
lret
mov
xchg
pop
addb
test
sub
mov
adc
dec
mov
lock
mov
xchg
mov
adc
cmpsl
mov
mov
movsb
insl
jbe
js
xor
ja
fiadds
push
into
jne
ret
fbld
loope
and
push
cwtl
dec
outsb
hlt
stos
push
sbb
adc
push
ret
sub
jne
lock
sti
scas
xor
or
adc
inc
push
jno
ss
jo
xchg
push
rcl
jno
or
test
icebp
adcb
in
aaa
stc
cmp
push
out
sar
cltd
sbb
sahf
inc
cmp
xchg
push
adc
std
prefetchnta
push
xchg
imul
lahf
mov
cld
out
push
lock
push
mov
pop
jo
dec
xchg
sbb
adc
jbe
or
enter
leave
xchg
adc
dec
dec
push
xchg
mov
pop
jmp
xchg
shl
mov
loopne
loope
ret
xor
int3
sbb
shll
push
sbb
xor
aas
adc
cli
dec
adc
popa
subw
cmp
les
push
stos
jp
int
sub
out
jp
rclb
test
mov
push
clc
jb
dec
out
icebp
pop
icebp
std
repz
mov
mov
scas
and
mov
js
js
lea
es
jp
inc
xor
test
xlat
pushf
adc
out
jo
into
push
cwtl
lret
cld
rorb
je
rcr
inc
inc
add
lret
push
mov
js
pop
jle
xor
lahf
and
insl
pop
imulb
inc
call
jmp
push
leave
jb
pop
aam
test
ror
popf
inc
scas
arpl
xor
lea
jns
fwait
mov
xchg
popa
add
jmp
mov
aas
push
inc
fxch
mov
pop
xor
sbb
sbb
dec
cld
fs
add
sub
mov
or
sarl
movsl
xor
push
pop
mov
js
jns
popf
std
cmp
frstor
lcall
int3
mov
sbb
insb
add
dec
inc
jg
inc
mov
sub
stos
inc
xor
push
shr
push
sub
xlat
mov
aaa
sbb
fs
mov
je
ja
push
insb
inc
popa
add
mov
adc
cmpsb
leave
cs
cmp
mov
cmp
mov
xchg
in
mov
inc
pushf
das
push
cmpsb
jns
es
xchg
imul
imul
jns
les
inc
ror
test
mov
repnz
pop
cltd
dec
adc
mov
dec
imul
pushf
psllw
push
push
mov
and
xor
mov
ljmp
out
movsl
mov
shl
imul
pusha
dec
jmp
inc
es
ss
daa
jns
insl
das
xor
mov
cmpsb
fldcw
loope
mov
stc
and
ret
in
cmp
cwtl
mov
sbb
xor
shlb
mov
sub
mov
out
adcl
push
stos
mov
dec
sub
stc
int
loopne
xchg
mov
and
mov
popa
jbe
arpl
ret
fistpll
mov
nop
rdtsc
repz
dec
inc
add
cmp
nop
adc
fidivl
cmpsl
push
jae
mov
xorl
pop
xor
xchg
jle
jno
dec
xor
push
inc
adc
push
inc
mov
lahf
mov
adc
mov
ds
inc
shrb
jmp
adcl
xchg
xor
add
pop
sbb
cmp
aad
call
push
cwtl
jbe
bound
outsb
or
cmp
insl
scas
outsb
mov
iret
xor
cs
xor
movsb
mov
lea
test
std
lahf
fidivrl
mov
cmc
movsl
jno
cmp
cmpsl
loopne
xchg
ljmp
dec
int3
xor
ds
subps
adc
mov
mov
subl
fbstp
in
jbe
xor
xchg
stos
cmpsb
je
fdivrl
push
in
push
sub
cmp
movsb
add
dec
jno
cmp
shll
out
pop
push
pop
xchg
add
iret
adc
mov
test
loopne
adc
dec
cmp
add
lods
cmp
xor
add
sbb
mov
enter
add
cmc
movzbl
dec
jb
lret
jge
into
xchg
push
in
stc
or
sub
push
ljmp
in
ss
jae
mov
pop
idivl
or
fbstp
mov
jecxz
rorl
cmpsb
sbb
loope
clc
movsb
dec
ljmp
std
or
lea
push
dec
inc
clc
and
or
xor
pop
das
xchg
sbb
adc
pop
pop
addr16
cmpsl
xchg
cmpsb
xchg
cld
cli
inc
inc
jecxz
jbe
pop
rcrb
insl
and
sub
ja
fcmovu
cld
ror
fst
out
xchg
or
ror
mov
cmp
or
sub
sbb
xchg
clc
jmp
fnstenv
pop
fcmovnu
xchg
adc
lcall
xor
addl
add
mov
pop
test
stos
pop
sub
jp
loope
loope
lds
inc
pop
bndldx
pusha
dec
int
scas
xchg
ret
scas
jmp
push
lret
or
add
mov
cmc
dec
jb
or
mov
mov
or
stos
and
int
nop
sti
mov
in
fwait
in
mov
repnz
les
shrl
mov
and
call
jl
sbb
scas
bound
lahf
and
and
adc
mov
xor
str
jnp
jae
mov
repnz
ds
insb
aad
ja
lds
enter
cmp
sub
or
mov
xor
or
xchg
mov
jae
jle
cmp
jbe
daa
xchg
imul
mov
pop
cmp
or
scas
pop
mov
out
pusha
jbe
dec
push
repz
int
cmc
cwtl
mov
add
pop
push
aad
inc
sar
addr16
gs
mov
imul
adc
mov
in
pop
pop
ror
cmp
ds
rcll
jle
mov
popa
les
inc
call
punpckhdq
add
jbe
stc
push
imul
jbe
mov
test
mov
jo
mov
sbb
movsl
mov
iret
inc
movsb
addr16
xchg
fnstenv
loope
pop
mov
imul
das
stos
cmp
jo
adc
je
scas
adc
adc
push
ficompl
into
mov
dec
fisubl
or
cs
out
inc
movsl
jmp
xchg
or
test
cmc
testb
or
adc
mov
xor
aam
sar
cmpsb
lock
leave
jbe
nop
xchg
test
inc
dec
and
or
push
insb
or
pop
outsb
insl
outsb
push
mov
pop
inc
inc
xor
mov
cmp
mov
sub
push
sarb
stos
incb
loopne
repnz
inc
inc
cmp
inc
mov
arpl
cmp
scas
cld
cs
fs
xor
xor
mov
shlb
lea
mov
pop
dec
pusha
push
sub
movsb
sarl
repnz
ds
xchg
mov
dec
dec
daa
das
notl
pop
jmp
mov
fstps
iret
fldt
lea
mov
outsl
push
mov
fnsave
pop
insl
pop
outsl
fnstsw
xchg
xor
jns
imul
ljmp
lods
jg
insl
fdivrs
pop
divl
and
push
xor
dec
aas
and
fwait
lcall
clc
mov
sub
push
imulb
and
dec
dec
sub
push
jbe
xor
outsl
aad
ss
xchg
mov
or
jmp
dec
sti
mov
xchg
addl
ret
and
jbe
add
dec
shll
lret
gs
mov
push
sahf
adc
loop
adc
imul
adc
aad
aam
push
popf
cmp
adc
sbb
mov
icebp
lods
insb
out
jb
mov
icebp
movsl
das
add
adc
mov
leave
sbb
xor
out
jp
pop
inc
cmp
movsl
lods
jno
and
push
lds
mov
pop
push
mov
cmp
lods
mov
fxch
cwtl
je
sbb
popf
insl
rcll
pop
mov
repz
out
jg
inc
pop
cmp
mov
mov
jge
cmp
daa
cwtl
sub
aam
mov
and
in
cmp
mov
xchg
sbb
jnp
pop
pop
sti
aas
xchg
stos
xchg
mov
ror
push
iret
add
adc
ror
dec
lret
lahf
add
lock
jmp
cmc
cltd
mov
popa
xor
add
mov
adc
je
andl
lret
pop
sbb
mov
outsb
insb
add
sbb
dec
add
pop
fs
cli
jbe
testb
push
ficomps
fsubrp
xor
xchg
inc
add
add
mov
jmp
jb
sbb
lret
mov
aas
sub
or
jns
pop
pop
jp
clc
aas
fwait
cmp
xor
inc
das
adc
loopne
push
lods
jno
push
or
xchg
xchg
push
push
aas
mov
push
lea
inc
pop
xchg
dec
mov
insl
and
aaa
int3
cmpl
push
xchg
dec
fidivs
inc
adcl
sub
js
jno
mov
into
sbb
lret
push
in
add
out
mov
pop
daa
cmp
loope
lcall
push
in
add
mov
rcl
cmp
cmp
ret
nop
mov
shrl
mov
push
test
mov
jge
push
mov
push
lock
sbb
jns
and
inc
mov
int3
lock
pop
dec
ffreep
out
push
rcll
sti
xchg
gs
frstor
cmc
xchg
xchg
jb
das
sub
ds
leave
in
and
in
dec
sbb
shll
xchg
imul
xor
jle
test
leave
sti
adcb
jo
movsl
lods
mov
adc
cmpsl
hlt
cmp
dec
mov
icebp
call
repnz
jecxz
nop
inc
push
addr16
mov
inc
ljmp
and
std
and
aas
pop
mov
mov
mov
lcall
sub
outsl
xchg
sahf
cmp
call
jle
popa
negb
mov
das
push
jns
or
dec
adc
lea
paddq
xchg
push
adc
xor
jns
inc
xor
mov
fs
cld
ljmp
add
cmp
push
subb
cmp
ja
scas
mov
inc
test
jns
lods
sub
ja
dec
ret
jge
jno
mov
cli
jg
incl
pop
test
div
lods
imul
push
data16
js
sub
fwait
pop
jnp
mov
mov
push
ljmp
enter
lret
xor
in
js
mov
mov
dec
mov
xchg
mov
outsb
pushf
fidivrs
addr16
lret
js
mov
push
dec
fidivs
inc
add
fdivrs
mov
popa
inc
addr16
jecxz
fldenv
cld
out
push
movd
nop
and
push
test
idiv
inc
shl
mov
add
rclb
sbb
mov
add
stos
jp
mov
mov
ljmp
jg
pop
pop
adc
pop
xchg
stos
negl
mov
push
sbb
jl
fnstcw
mov
enter
inc
fnstsw
jnp
mov
mov
loope
jne
xor
call
inc
out
pop
shlb
cmp
jl
pop
xor
fdivrs
movsl
rcrb
mov
repz
test
stos
popf
mov
push
lret
and
aam
shlb
daa
jmp
scas
mov
dec
stos
daa
jbe
dec
xor
inc
pop
dec
lods
notb
loope
adc
jle
repz
ja
pop
loop
rorb
inc
cmp
mov
jge
rorl
imul
push
mov
sbb
call
outsl
fs
cmpsl
jae
loopne
xchg
test
and
and
adc
mov
jno
mov
ret
xchg
ret
pop
js
out
insb
hlt
jp
out
out
loopne
daa
cmpsl
fdivs
add
mov
xchg
out
push
shrl
outsb
pop
sti
xchg
inc
fsub
js
or
ret
add
sbb
aaa
push
pop
lods
ret
jecxz
or
sbb
loope
fs
vpand
push
aaa
and
dec
je
lcall
mov
push
popf
mov
sub
cs
and
push
sbb
mov
sbb
sti
loop
and
clc
stos
or
xor
outsb
es
mov
rcrb
mov
fwait
pushf
call
mov
mov
jnp
and
push
jnp
call
bts
out
sub
push
or
jl
popf
cmp
popf
push
or
ret
popf
or
jno
jge
test
test
popa
mov
or
sbb
xchg
cmp
fldl
call
lret
or
xorl
fisubrl
cs
add
inc
push
or
cwtl
daa
test
jmp
scas
add
push
dec
xchg
lahf
data16
adc
sahf
call
es
adc
xchg
or
xlat
mov
jae
mov
inc
clc
sti
scas
mov
cmp
mov
mov
jb
outsb
mov
call
std
stos
in
mov
and
push
sub
push
and
xor
mov
jno
es
dec
jp
mov
xchg
mov
xchg
jecxz
mov
push
xchg
jnp
mov
push
or
aad
and
lret
mov
xchg
lea
pop
add
pop
and
idivb
pop
lcall
stos
jno
cmpsb
or
dec
inc
xchg
imul
dec
adc
mov
mov
adc
test
sub
xor
dec
leave
daa
or
sbb
or
xor
push
fdivrl
fwait
xchg
dec
pop
imul
out
inc
jg
and
cmpsl
pop
pop
jnp
bound
sti
lock
decb
push
lods
sub
inc
xor
ss
or
sub
fwait
pop
push
push
cltd
rcll
inc
dec
jl
mull
pusha
xor
negb
mov
mov
lds
cmp
inc
pop
test
pushf
xchg
imul
lock
sbb
in
sub
push
out
xchg
lea
stc
out
push
test
imul
cld
xchg
mov
xchg
andb
add
loop
stc
pmaddwd
aam
mov
nop
mov
jbe
ficomps
fiaddl
push
fsubl
das
xor
dec
out
mov
add
xchg
push
jmp
cmp
bound
cmc
in
loop
in
fldenv
lcall
push
mov
test
jg
testl
fs
fstpt
in
add
sbb
jbe
inc
fistl
xchg
ret
xchg
or
jno
pop
idiv
nop
jge
adc
lret
push
inc
add
mov
add
lds
inc
xchg
movsbl
lds
inc
lds
adc
inc
js
pop
fstp
mov
sbb
adc
popa
mov
dec
mov
fwait
jg
fisubrs
pop
shl
push
pushf
adc
sti
mov
gs
sti
dec
sub
int
ret
pop
mov
jge
inc
mov
inc
sbb
mov
jae
mov
fistl
cmp
inc
cs
inc
nop
xchg
addr16
int
ljmp
xor
push
aad
iret
xchg
mov
orl
movsl
cld
adcl
das
mov
xchg
mov
mov
jae
mulb
sahf
add
sti
hlt
scas
jb
cli
cmp
out
fisttps
push
cmpl
mov
and
xor
push
adc
movsl
lds
mov
and
andl
dec
xchg
loope
ficoms
adc
mov
push
cmovne
out
push
add
xor
push
sbb
push
leave
lea
aam
shll
jp
adc
icebp
adc
jmp
arpl
pop
sub
scas
xchg
rorb
test
jl
push
hlt
sbb
pop
enter
mov
jns
ficoms
ds
xor
subb
es
hlt
push
sub
mov
jg
aas
sub
fildl
inc
aad
jl
mov
sbb
sbb
xlat
lcall
shll
stos
mov
or
hlt
xchg
xchg
xchg
popa
push
xlat
mov
inc
in
loopne
dec
imul
jge
sahf
sbb
fistps
in
lret
daa
mov
or
fabs
or
sub
jnp
cmp
repnz
inc
xchg
mov
cmp
jo
cmp
cmp
mov
xlat
and
loope
cmc
xor
sbb
add
fsubr
sarl
fisttpll
cmc
mov
xor
out
cltd
clc
pop
and
jle
or
les
push
push
jno
add
xlat
xor
or
cmp
push
fcmovnb
push
jnp
fwait
mov
je
adc
fidivl
mov
push
pop
lock
xor
test
in
mov
fisubrl
out
aam
inc
sbb
or
sbb
loopne
arpl
ljmp
mov
ss
je
mov
mov
lds
dec
sti
push
nop
imul
lods
or
and
in
dec
nop
xchg
push
ret
pushf
dec
jecxz
and
jne
lahf
inc
jp
rcll
insl
cmp
out
std
bound
std
ret
ret
adc
pushf
cmp
or
sbb
mov
ds
ljmp
add
dec
icebp
in
imul
xchg
shlb
les
pop
jo
xchg
dec
and
jmp
aad
cmp
leave
sbb
mov
pop
push
mov
aad
inc
mov
pop
cmpb
leave
and
add
jbe
fistpll
call
dec
cmc
mov
adc
sbb
cmpsb
cwtl
mov
mov
inc
rcrl
jo
pop
js
xlat
add
popa
pop
scas
jmp
ljmp
push
dec
push
push
xor
pop
nop
mov
mov
test
xor
add
jae
mov
call
push
mov
mov
imul
into
cmp
mov
scas
jns
ss
scas
cld
xor
leave
mov
mov
outsb
test
jl
add
gs
jns
stos
add
mov
inc
cmp
insb
mov
popf
pop
inc
and
and
pop
jle
mov
sti
sub
xor
leave
aaa
push
je
cs
clc
dec
fistl
loope
xchg
fnstcw
js
sbb
push
scas
xchg
call
push
pop
push
push
fsub
arpl
stos
and
leave
push
add
mov
sub
subl
inc
and
mov
lcall
cmpsb
jb
nop
ljmp
pop
mov
out
mov
cmp
fstp
shrl
sti
imul
mov
mov
mov
loop
int3
rolb
lcall
pop
leave
sahf
lods
add
pop
push
andb
js
sub
rcl
loope
in
mov
pop
lahf
or
jne
gs
out
and
iret
es
xchg
xchg
fsts
dec
inc
icebp
out
mov
sbb
jle
xchg
sbb
push
sub
add
addr16
mov
xor
aad
xchg
jnp
xchg
xchg
pusha
andb
lret
sub
cmp
cmp
and
and
mov
in
mov
bound
mulb
push
lods
inc
das
clc
mov
mov
jno
ret
sbb
icebp
sbb
bound
fsubp
push
iret
push
je
xchg
cs
fcoml
mov
mov
add
xlat
mov
leave
cmc
inc
ljmp
pop
dec
xor
cmc
dec
mov
jg
pop
not
or
and
leave
sub
add
repnz
sub
lds
fwait
or
cld
movsl
xor
inc
test
cmc
or
adc
push
push
fdiv
mov
jmp
jb
pop
in
fxch
pop
sbb
pop
dec
add
movsb
xor
in
or
and
cmpsb
nop
mov
pop
loopne
lret
mov
cmp
sarl
lods
mov
and
sub
sbb
mov
outsl
sub
sbb
xchg
in
loopne
adc
fcomps
xchg
and
lds
in
mov
lret
adc
jmp
fsubs
xor
xchg
adc
dec
or
cmp
fcmovu
sti
shl
test
xor
push
ret
or
pop
enter
test
gs
mov
adc
lret
mov
adc
loope
adc
lods
jnp
mov
sti
xchg
popf
imul
cld
jne
mov
mov
adc
shrb
push
push
iret
inc
or
mov
je
hlt
mov
jmp
mulb
xchg
mov
mov
imul
inc
addl
ret
pop
fmull
xchg
dec
sbb
ret
loopne
xor
and
push
inc
rcl
out
mov
push
xor
cmpsb
sbb
cltd
adc
mov
or
mov
mov
mov
fnstcw
push
subb
dec
xchg
daa
popf
xor
arpl
inc
loopne
loopne
cmpsb
jecxz
xor
inc
out
inc
loope
xchg
xorl
ret
mov
stos
xchg
and
ljmp
fsts
jnp
sub
mov
dec
mov
fiadds
lock
mov
and
cmp
add
aas
cld
cmp
or
push
pusha
insb
jl
popa
xchg
enter
add
pop
xchg
dec
inc
mov
sub
test
xchg
push
push
jb,pn
sub
mov
or
jo
xchg
loope
fmul
out
push
push
ds
mov
sbb
repnz
and
or
or
cltd
into
dec
stos
push
sbb
into
and
xlat
rorl
pop
push
je
xchg
lret
fisubrl
pop
loope
pop
nop
outsb
adc
lods
inc
stos
out
xor
cmpsb
and
mov
cwtl
out
xchg
inc
dec
imul
add
stos
decb
jnp
jmp
bound
push
imul
aaa
inc
repnz
dec
aam
add
lret
or
add
data16
jl
popf
cltd
sub
sti
aaa
push
inc
ffree
inc
in
adc
and
dec
sbb
stos
push
jmp
jnp
xchg
das
hlt
orl
cmc
mov
add
pop
xchg
loop
filds
add
ret
mov
sbb
addr16
pop
add
mov
pop
insb
sbb
and
adc
ljmp
jo
mov
xor
push
sub
jbe
hlt
call
mov
aas
adc
fwait
idivl
cltd
fucomp
mull
in
stos
pushf
or
idivl
mov
cltd
push
inc
pop
jp
aas
lea
test
sahf
out
cmp
xchg
cli
outsb
inc
and
cmp
push
jno
test
cmp
or
lods
lds
sbb
punpckhdq
push
push
les
and
cmp
sbb
dec
mov
movsb
fs
jmp
and
push
fiadds
add
out
inc
call
inc
sbb
cs
push
or
sbb
int3
mov
test
mov
int3
daa
in
jae
dec
jb
pop
xlat
lds
arpl
add
xchg
sbbl
in
xor
cmp
dec
push
xchg
addr16
xorb
sbb
pushf
ss
jbe
icebp
cmp
xor
jbe
bound
mov
gs
adc
sbb
mov
mov
xchg
inc
int
cmp
xor
or
pushf
out
dec
sbb
cli
test
imul
insb
inc
movsb
cltd
outsb
inc
xorb
jle
gs
popa
xor
mov
mov
xchg
sahf
mov
jns
adc
jo
pop
pop
shlb
ja
aaa
repnz
jle
push
std
push
loop
pop
jle
testl
scas
repnz
aad
les
insb
sbbl
jbe
movsl
incb
mov
push
cmp
outsb
nop
in
or
push
outsb
mov
sub
mov
in
pop
dec
lock
out
adc
pop
push
pop
adc
lds
sbb
ret
aad
dec
xchg
stc
pop
inc
xlat
iret
inc
bound
xchg
fcompl
lods
das
pop
data16
mov
js
push
out
sbb
mov
or
lods
scas
fdiv
push
aas
push
sub
mov
mov
aad
jp
dec
test
mov
jge
xor
mov
repz
xchg
xlat
jbe
inc
std
cmp
mov
fs
cmp
aam
rorl
sub
cmpsl
outsb
lret
popa
push
mov
push
vunpckhpd
bound
pop
mov
cmp
pop
popf
roll
aad
pusha
in
in
lods
inc
movsb
or
push
or
xlat
cmp
xor
scas
pop
cltd
jns
xchg
or
xor
pop
jbe
or
add
push
jae
xchg
loopne
int
fstps
push
push
incb
in
cmpsb
sbbb
adc
subb
lea
lods
mov
fs
xlat
mov
pop
add
push
inc
ret
std
hlt
mov
fs
sbbl
mov
lock
cmpb
push
mov
cld
or
repz
jecxz
fs
pop
sbb
idivb
aad
dec
cmpsb
sbb
adc
dec
inc
push
jae
sbb
movsb
jecxz
mov
cmp
mov
add
pop
add
loop
jg
scas
pop
sbb
mov
adc
sub
dec
out
sub
fldt
or
mov
push
dec
sub
inc
pop
sub
or
push
xchg
scas
dec
testb
sarl
add
xor
xorl
adc
mov
sbb
sarl
testb
sub
mov
xchg
mov
js
dec
sahf
mov
and
or
jl
jb
mov
cltd
adc
push
or
imul
fnstcw
mov
outsb
sbb
mov
repnz
loope
lret
mov
test
addl
popf
mov
xlat
and
cmc
sti
mov
add
fstl
xlat
pop
cmp
sbb
xor
cld
sbbb
and
hlt
mov
movsb
lods
cltd
ljmp
insb
adc
mov
push
into
adc
add
push
pop
rcrb
or
xchg
push
das
mov
mov
or
inc
scas
insl
in
xchg
pop
aad
or
rclb
cmc
push
mov
out
or
mov
nop
sbb
inc
adc
and
adcb
or
sarb
ja
mov
mov
flds
mov
push
movsl
mov
pop
xchg
scas
mov
push
aad
lret
jg
popf
lret
push
pop
jb
imul
ror
ret
das
rcl
cs
shll
jae
mov
cmpb
or
fcmovnbe
jge
or
cs
pop
ss
push
leave
outsl
scas
mov
and
mov
cmp
dec
insl
jecxz
add
dec
xor
outsb
cmovne
push
repnz
inc
inc
aam
ror
cmpsb
inc
jmp
daa
fstps
stc
inc
es
fsubrs
adc
jbe
mov
dec
or
add
daa
push
push
loopne
sbb
sub
push
add
sbbb
hlt
sub
dec
xchg
push
dec
jb
jle
mov
dec
mov
jle
test
mov
jno
pop
int
test
xor
dec
cltd
stos
ljmp
dec
cmp
lds
xor
jle
mov
xlat
or
into
arpl
jl
mov
arpl
rcll
cmpl
xor
arpl
daa
div
and
outsb
leave
ja
ret
roll
dec
and
loopne
pusha
ret
test
mov
push
mov
into
into
rolb
xchg
and
inc
popf
mov
push
lcall
lods
inc
push
pusha
and
test
jne
jl
shlb
dec
dec
push
push
sbb
jp
pop
lret
daa
mov
jne
mov
jmp
shrb
ja
ljmp
mov
movb
and
dec
inc
imull
sbb
mov
mov
add
jp
or
lock
jl
adc
add
pop
outsb
movsl
add
push
movsl
sahf
fcmovu
adc
and
sbb
jecxz
jge
clc
scas
lods
xchg
pop
jmp
dec
mov
mov
sbb
mov
iret
inc
inc
aaa
fcom
sti
jl
jne
loopne
pop
jecxz
rcr
mov
lods
xchg
cli
repnz
scas
cwtl
lret
xlat
movsl
inc
in
mov
cmpsb
xor
cmpsb
pop
mov
sbbb
test
int
push
lods
jno
push
mov
incl
inc
clc
jae
xor
or
lret
pusha
inc
out
mov
mov
lahf
daa
leave
pop
mov
xchg
sbb
int3
outsl
mov
sarl
addr16
ja
cmp
sbb
add
test
aam
pop
ret
or
movntq
out
or
lods
adc
call
sti
xchg
imul
xor
lock
cmp
xchg
nop
leave
jg
lods
lea
push
sbb
loop
push
jno
fnstenv
outsl
dec
push
sti
jne
or
arpl
cmp
adc
sub
ficoml
jg
mov
cmp
and
repz
adc
add
sahf
je
mov
jnp
lret
jo
nop
cli
ss
pop
pop
jp
dec
mov
push
jb
insl
in
leave
rcl
fsubrl
es
and
sub
mov
insb
dec
repz
xchg
rcrb
dec
or
in
or
jns
icebp
xlat
xlat
inc
shll
push
jne
pop
cltd
sbb
imul
incl
out
adc
lea
or
test
cmp
aam
stos
xchg
addr16
stos
cli
dec
cmp
pop
cltd
mov
lahf
loopne
push
out
imul
jp
and
lds
mov
out
out
push
sub
stos
int
cli
jmp
xchg
push
jmp
xchg
mov
mov
mov
mov
mov
add
lea
lods
stc
fnstenv
fnstcw
add
sbb
inc
and
cmp
pop
adc
sahf
call
sub
imul
popa
test
fucomi
cli
cmc
mov
lea
dec
mull
fs
add
loop
adc
cltd
jns
xchg
dec
mov
into
sar
test
mov
sbb
and
pop
xor
pop
xchg
enter
in
popa
dec
push
psllq
jbe
sar
rcll
cmpsl
xor
mov
call
hlt
mov
daa
mov
das
dec
pop
sub
fsubs
pop
adc
dec
ljmp
ret
push
jp
or
ret
mov
dec
cwtl
out
cmp
mov
cmp
hlt
mov
inc
shr
cmp
cmp
ja
jp
fisubs
pop
shrb
arpl
in
inc
out
cwtl
jle
cltd
jecxz
lret
push
mov
test
das
repnz
cli
xchg
add
lock
jge
push
lahf
mov
xor
pop
pop
and
sub
sub
jecxz
mov
push
mov
adc
cwtl
pop
xchg
inc
mov
pop
mov
push
dec
mov
mov
lahf
dec
mov
adc
shll
or
daa
sub
pusha
or
fmull
fdivrs
xor
bound
mov
xchg
adc
pop
data16
xchg
lcall
jbe
cmc
stos
dec
dec
jbe
stos
std
or
xor
add
xor
mov
scas
mov
jge
push
mov
insl
push
cmp
sarl
loope
dec
mov
cmp
pop
fbstp
xchg
into
mov
test
clc
cli
arpl
add
jp
pushf
cwtl
dec
scas
les
push
jl
or
enter
inc
cmp
add
inc
pop
jmp
std
add
sar
lock
dec
das
xor
inc
fists
add
addb
mov
jae
mov
sub
or
fmuls
and
movsb
call
mov
xor
xor
pop
jbe
leave
xor
icebp
lret
xor
mov
sub
pop
xchg
xchg
data16
fcomps
std
testb
inc
mov
mov
insb
std
mov
jno
test
add
dec
insb
push
fwait
psadbw
sub
rorl
das
add
lods
jle
lea
inc
out
sub
movb
bound
lret
jl
ds
aad
repz
add
fisubrl
inc
int3
push
pusha
repz
add
and
xor
scas
stc
mov
cmpsl
cmpsb
push
dec
dec
imulb
dec
cmpsl
sub
fsubp
fnstsw
sahf
mov
pop
fldl2e
hlt
dec
loop
notb
in
sub
ret
cmp
pop
dec
mov
in
push
cmp
jae
lret
sub
loop
mov
dec
jge
add
jo
in
cmc
test
int3
andb
xor
xor
sub
add
aaa
pop
xchg
pop
loop
cmp
out
xchg
and
xchg
cmp
sub
or
sahf
fsubr
lods
hlt
jecxz
data16
andb
dec
fsubl
cmpsb
sti
enter
pop
jo
icebp
test
jmp
add
and
pop
arpl
mov
dec
mov
mov
lock
mov
aaa
mov
loopnew
sbb
xor
inc
and
dec
jbe
int
insb
ds
loopne
fadds
jmp
inc
pop
cmpsl
dec
mov
pop
inc
xor
rolb
inc
js
adc
fcomp
dec
mov
and
or
mov
fs
in
pop
push
or
pop
lcall
sahf
lcall
movsb
bound
adc
pop
imul
jo
inc
aas
mov
aam
xlat
push
pop
nop
jo
push
push
roll
dec
sbb
mov
and
push
aam
arpl
in
hlt
in
dec
jp
decl
sub
mov
push
popf
and
or
mov
mov
pop
cmp
sub
mov
outsb
push
jmp
movsl
cmp
jne
and
cmp
cld
dec
pusha
xorb
addl
or
push
ret
sub
out
push
sub
push
repz
clc
mov
dec
ffree
test
inc
adc
bound
out
or
mov
add
push
jae
mov
push
stos
jb
jns
adc
adc
pop
pop
push
jmp
sbb
and
add
scas
in
clc
push
rcrl
cltd
and
and
iret
sbb
jns
stos
mov
inc
or
loop
mov
inc
es
cltd
cmp
out
push
shlb
jo
push
dec
add
xor
mov
sbb
cmp
gs
add
xchg
nop
pushw
xchg
mov
or
mov
pop
sub
ljmp
test
push
ficoms
and
xchg
fsts
mov
shr
push
adc
push
sub
popa
lcall
subb
xchg
dec
jbe
fnstenv
call
sub
dec
and
loopne
neg
mov
sub
and
mov
jnp
pop
lods
mov
jae
fsubrl
jno
xchg
repz
imul
aam
sub
or
jmp
stos
lret
cmp
pop
pop
cmp
imul
push
inc
scas
jb
fistl
fcoml
or
es
inc
mov
xchg
mov
pop
test
mov
and
mov
adc
push
inc
xchg
dec
aad
imul
ljmp
and
dec
aam
jae
sbb
bound
cmp
mov
jle
add
iret
stos
mov
cwtl
adc
or
pop
fnstenv
mov
dec
push
roll
cmp
inc
daa
jno
mov
lea
sbb
push
mov
je
pop
push
push
aam
ret
out
jns
push
xor
sarl
push
mov
xor
sub
fsubl
in
clc
sbb
enter
lret
push
int
js
dec
pop
push
cmpsb
into
cmpsb
dec
inc
cmc
push
adc
add
cwtl
mov
fmul
cmp
test
dec
in
mov
mov
cli
scas
xchg
pop
or
out
adc
orb
sbb
mov
repnz
xor
repnz
movsl
les
std
mov
inc
mov
stos
js
jecxz
jbe
cmpsb
and
in
or
and
sti
pop
ret
jecxz
fstpt
mov
stos
fsub
pop
ud1
adc
stc
xchg
dec
mov
mov
adc
dec
push
push
mov
lds
popa
jg
pop
push
mov
and
mov
jno
jnp
jne
mov
sar
xchg
dec
subb
xor
cmpsl
add
add
movsb
bound
xor
push
clc
adc
xor
cmc
sub
nop
dec
in
mov
sbbl
es
cld
xchg
insb
int3
lock
cmp
push
jge
fst
fisubrl
inc
lods
cltd
pushf
pop
movsl
in
std
sbb
jecxz
nop
nop
fists
outsb
jge
ss
push
pop
mov
mov
enter
jae
cmp
xor
lret
cld
in
cwtl
xor
leave
popl
mov
mov
icebp
call
xchg
aam
inc
sbb
sub
pop
stc
leave
xchg
ljmp
cld
movsb
lods
fs
jmp
lret
filds
jmp
enter
mov
and
fwait
enter
pop
lods
dec
push
fxch
xchg
insb
cmp
mov
fcoml
lahf
cltd
movsb
push
les
dec
dec
xorl
out
addl
mov
jnp
mov
mov
mov
xchg
mov
mov
jp,pn
fldcw
adc
cltd
dec
jbe
jae
mov
push
stos
sbb
mov
mov
xor
push
js
or
mov
or
add
mov
push
and
mov
into
pop
sub
mov
cmpsl
subl
and
mov
pop
inc
mov
ja
mov
loope
fstpl
sub
mov
ds
jne
inc
and
hlt
sbb
mov
pushf
aaa
mov
push
and
adc
push
nop
clc
sar
cmp
sbb
out
push
shlb
pop
jno
adc
xor
aas
jmp
fsub
ret
and
inc
xor
mov
call
and
mov
inc
push
fnstenv
psrlq
cmp
jne
out
idiv
fistpll
adc
insl
stc
push
ret
pop
jge
fsts
ds
sbb
stc
lods
jb
icebp
nop
stos
pop
or
cmp
sti
mov
xchg
aad
sbb
scas
jbe
dec
push
lods
xchg
xchg
loop,pn
xor
xor
xor
iret
daa
xchg
push
xor
sbb
sub
cmpsl
clc
scas
int
mov
ret
leave
addr16
popa
rcrb
divl
sbb
lret
xchg
roll
xor
imul
rcrb
scas
aas
sub
adc
out
ret
out
mov
xchg
pop
push
push
push
push
loopne
std
push
or
ret
xorl
rclb
stos
pop
in
mov
mov
div
std
sbb
pop
rcll
out
cs
pop
xlat
or
outsl
dec
pop
test
jle
in
inc
jno
or
sub
inc
push
jb
mov
repnz
rcrb
cmc
in
xchg
lods
cmp
mov
push
cltd
outsl
mov
dec
fs
movsl
pushw
or
test
ret
clc
jp
stos
mov
cmp
sub
jb
xor
jl
data16
jbe
mov
mov
push
mov
mov
sbbb
mov
adc
jmp
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
lea
or
mov
xor
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
addl
mov
sbbl
xor
subl
add
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
sbb
push
adcl
mov
adc
mov
mov
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
pushl
call
cmpl
jb
xor
mov
andl
add
cmp
movl
je
mov
jmp
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
subl
xor
push
sbb
add
add
xor
mov
add
push
mov
adc
mov
xor
movl
xor
movl
cmp
jne
movl
cmp
jne
movl
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
xor
mov
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
sub
addl
push
push
xor
movl
push
call
mov
notl
push
mov
addl
lea
andl
push
push
subl
push
push
sbbl
call
movl
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
push
xorl
call
test
movl
jne
orl
push
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
push
call
test
movl
jne
movl
mov
mov
xor
addl
lea
orl
push
mov
sbbl
xor
lea
push
and
mov
sbbl
pushl
addl
call
adcl
mov
andl
mov
movzbl
sub
xor
lea
sub
mov
mov
incl
xor
addl
xor
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
call
cmpl
jb
mov
subl
xor
lea
movl
mov
push
cmp
movl
jbe
sub
mov
xor
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
movl
sub
orl
xor
andl
mov
adcl
lea
sbbl
mov
xorl
lea
orl
mov
subl
lea
andl
push
push
push
push
xorl
call
movl
shl
cmp
jne
notl
push
call
adcl
test
movl
jne
addl
push
call
test
jne
push
lea
xorl
push
push
adcl
push
push
call
shl
cmp
jne
push
call
test
movl
jne
sbbl
push
xorl
call
test
movl
jne
sbbl
push
lea
push
push
push
adcl
push
call
movl
shl
movl
cmp
movl
jne
push
subl
call
adcl
test
movl
jne
orl
push
call
adcl
test
jne
orl
push
lea
subl
push
notl
push
subl
push
xorl
push
call
shl
movl
cmp
movl
jne
push
call
subl
test
movl
jne
subl
push
call
test
jne
negl
push
lea
push
push
addl
push
notl
push
movl
call
shl
cmp
jne
push
addl
call
orl
test
jne
andl
push
xorl
call
orl
test
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
shl
cmp
movl
jne
xorl
push
call
orl
test
jne
push
subl
call
test
jne
orl
push
orl
lea
andl
push
addl
push
push
adcl
push
call
shl
movl
cmp
movl
jne
push
call
test
movl
jne
incl
push
sbbl
call
test
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
push
call
test
jne
xorl
push
lea
push
xorl
push
andl
push
push
decl
call
movl
shl
movl
cmp
movl
jne
sbbl
push
orl
call
test
jne
andl
push
call
xorl
test
movl
jne
push
incl
lea
push
xorl
push
xorl
push
adcl
push
call
movl
shl
movl
cmp
jne
push
call
test
jne
push
call
test
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
push
call
test
je
xor
jmp
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
or
mov
sub
mov
mov
adc
movl
sub
mov
and
jmp
and
push
sti
shlb
jg
fsubrl
nop
scas
sarl
sbb
jp
cmp
in
out
sub
cmp
cmpsl
mov
int3
mov
outsl
movsb
daa
or
testb
test
pop
cmpsl
rcrl
push
and
mulb
aam
mov
sbb
mov
push
cmp
daa
push
sbb
add
mov
pop
test
in
xchg
in
adc
xlat
pop
cwtl
in
pusha
mov
push
or
aaa
add
movsb
mov
out
int
out
mov
cmp
jnp
mov
inc
xadd
lahf
cld
imul
idivb
stc
inc
out
iret
lock
adc
sbbb
sti
std
xchg
mov
add
jmp
out
xor
icebp
push
dec
sbb
and
shll
adc
fsub
leave
xor
pusha
cmpsl
inc
dec
xor
pop
sbb
fildl
daa
pop
and
and
adc
sarb
xchg
jp
sahf
mov
or
cmp
or
pop
adc
cmp
dec
jb
sub
xorb
or
dec
xchg
insl
enter
adc
js
xor
mov
jae
andb
push
fwait
testl
popa
lods
adc
lods
in
jmp
and
rcll
test
xchg
lods
enter
cmp
xor
xor
push
fnstsw
and
dec
ret
or
and
mov
pushf
or
add
xchg
bound
mov
popf
mov
jmp
enter
mov
push
xor
push
cwtl
test
jo
outsb
lock
das
sub
mov
arpl
sub
add
mov
cli
lret
xchg
pop
ja
and
fldt
xchg
adc
inc
jge
jp
cmc
clc
ds
jecxz
sbb
or
add
enter
cmc
push
cmp
add
mov
js
cmp
fimuls
daa
clc
xchg
iret
stos
stc
leave
test
cmp
sahf
mov
mov
dec
mov
mov
add
call
ret
mov
insb
int
bound
test
jbe
hlt
cli
pusha
lods
rorl
dec
or
shrl
pop
ret
dec
add
hlt
xchg
push
xlat
mov
mov
mov
in
loopne
fsub
inc
inc
push
fildll
dec
add
and
test
in
jne
jns
cmp
jnp
lcall
into
cmp
clc
inc
mov
mov
aad
xor
mov
test
fnsave
test
je
push
mov
mov
jo
mov
cli
icebp
arpl
inc
into
aad
pop
mov
push
push
imul
inc
xor
scas
sbb
outsl
and
lock
jge
jp
mov
mov
out
aad
cwtl
out
or
loope
in
stos
mov
push
push
outsb
test
inc
xchg
xlat
outsl
cmc
out
fistps
stc
into
dec
repz
and
enter
aaa
icebp
or
mov
jle
movl
scas
dec
push
shlb
xor
jns
rorb
stos
fisttpll
mov
lods
push
dec
mov
and
cmpsb
jl
cmp
popa
clc
dec
dec
push
mov
cli
fdivrl
fucomp
push
or
and
lods
mov
xlat
fnstenv
and
aaa
sbb
mov
push
or
addr16
sub
cmp
fwait
inc
sbb
push
jns
addr16
sub
cmp
pop
dec
cmpsb
js
push
or
aaa
popa
mov
in
adc
cmpsb
imul
pop
push
inc
dec
mov
test
decb
nop
cmp
in
xlat
pop
addr16
lea
fs
push
lock
sbb
clc
pop
xor
mov
test
and
sahf
jb
movswl
mov
cmc
mov
lods
or
lea
loopne
es
mov
rclb
les
repnz
sbb
idivb
sbb
mov
mov
or
mov
pop
addl
leave
adc
aas
inc
jecxz
sub
fbld
stos
jb
ret
mov
repz
je,pt
cld
out
lea
lea
scas
insb
add
push
add
movsl
inc
ficomps
into
test
xchg
enter
repnz
xchg
sbb
les
sub
subb
shlb
cld
aad
xchg
call
outsl
push
rorb
inc
jbe
inc
sub
in
xor
fidivrl
mov
jno
pop
pop
jno
aam
mov
iret
je
lock
dec
push
mov
mov
xchg
cmp
jb
and
ljmpw
lods
pushf
sub
and
mov
mov
push
sbb
mov
inc
mov
lea
mov
sbb
cmpsl
push
jae
dec
test
repz
sub
mov
dec
jae
mov
sub
gs
and
out
aad
xor
xchg
mov
cmp
fwait
fs
and
aad
push
or
lock
and
and
mov
and
mov
mov
mov
jge
mov
xchg
out
cli
add
push
roll
or
rcrb
fcoms
in
and
adc
dec
icebp
test
rcl
movsb
pop
or
call
outsl
out
das
pop
sub
lahf
fisubs
xchg
pop
pop
mov
sub
clc
in
cmp
mov
xor
loop
sbb
lcall
push
outsl
xchg
or
cmp
cs
rcrb
lret
sahf
mov
das
pop
stc
stos
add
cmp
mov
mov
inc
notl
sti
or
push
mov
xchg
pcmpeqd
imul
inc
inc
mov
dec
rorb
lods
fs
sahf
pop
ret
dec
data16
push
ficomps
mov
orb
out
imul
aas
stos
aaa
daa
sub
cmp
stos
imul
mov
pop
push
inc
mov
push
shlb
xchg
ljmp
jg
or
or
dec
stc
stos
stos
cmp
inc
in
cmp
push
inc
mov
pop
je
mov
lret
push
loope
std
rclb
popl
insb
and
mov
dec
dec
push
cld
popf
cmpsb
adc
jecxz
push
pop
pop
mov
lahf
daa
mov
popf
lret
mull
jl
mov
xorb
adc
mov
inc
or
lret
clc
loop
cmp
orb
fwait
or
outsl
inc
mov
rclb
call
add
cmp
loop
scas
xor
jmp
fwait
adc
mov
sub
pushf
push
mov
push
sub
test
aas
inc
je
out
or
cmpsl
iret
add
andb
fistl
js
enter
movsl
xchg
or
sbb
push
push
data16
leave
pop
push
into
dec
lea
sbb
xor
xor
mov
arpl
and
pop
movsb
cs
jne
jo
xor
jnp
outsl
mov
ffree
adc
test
mov
cmpsl
dec
sahf
sbb
fisubl
sub
and
push
mov
inc
jmp
cmc
dec
push
dec
adc
jmp
pop
cs
or
test
jnp
mov
sbb
shl
pop
lret
jmp
jae
andb
pop
testl
sbb
popf
ljmp
add
icebp
dec
fprem
mov
add
imul
pop
mov
and
xchg
scas
or
adc
inc
data16
pop
test
sti
arpl
int3
dec
ret
insl
ss
rcr
adc
out
xchg
pop
cmovl
xor
test
cmp
dec
fldt
pop
and
loope
xchg
repz
mov
hlt
ss
dec
xchg
push
pop
sub
xchg
inc
pop
pop
mov
stos
je
jb
inc
sahf
scas
jp
imulb
fsubp
adc
xlat
add
fldl
imul
dec
add
arpl
and
ljmp
scas
je
test
fs
push
xchg
fmuls
ja
adc
test
test
das
dec
shr
push
testb
xchg
adc
inc
imul
mov
dec
loope
cmp
lea
inc
loop
ss
imul
xchg
daa
push
xchg
mov
dec
into
xchg
subl
pop
sub
sbb
xchg
sbb
call
jb
push
mov
push
nop
pop
sbb
jae
scas
push
out
mov
mov
std
adc
adc
mov
mov
sbb
pop
je
and
movsl
mov
fisubl
movsb
inc
mov
divb
push
repnz
sub
jp
movsb
inc
mov
lods
dec
loop
ss
cmp
dec
int3
ja
push
cwtl
popa
in
scas
mov
push
and
imul
sub
pop
pusha
mov
push
jns
dec
xchg
pop
filds
addb
inc
add
imul
dec
inc
stos
js
or
pushf
out
xchg
xchg
test
shr
xor
pop
cmp
out
lahf
inc
add
sub
sub
mov
mov
push
int
rolb
rcl
xchg
cmpsl
mov
mov
pop
pop
sub
inc
dec
aam
push
ror
in
sub
sub
and
mov
jnp
mov
sbb
stos
cmp
dec
pop
jle
sbb
push
mov
das
in
push
cmp
shrl
gs
cmp
mov
mov
fs
push
or
mov
push
adc
out
fisubl
xlat
mov
ficompl
shl
in
cmp
bound
and
jns
push
push
shlb
sub
aad
leave
mov
sbb
xchg
xchg
add
daa
sti
enter
inc
imul
in
daa
mov
stos
call
cld
mov
push
mov
in
sub
stos
pushf
outsb
xchg
jae
ficomps
mov
sub
push
xchg
into
loopne
add
sbb
jno
mov
sub
push
out
dec
aad
pop
lea
jae
in
cmc
lods
shrb
add
xor
sbb
ret
enter
fidivrl
lret
push
and
ds
add
mov
xor
cmp
je
mov
dec
in
inc
mov
adc
inc
arpl
clc
push
cmp
hlt
frndint
mov
cmp
cmpl
sub
dec
pop
adc
shll
insl
test
mov
orb
mov
add
shl
mov
cmp
cmp
sbb
xchg
xor
jge
loopne
cmp
xchg
mov
out
rclb
lahf
jg
mov
in
imul
bound
mov
ja
add
pop
adc
inc
outsl
les
sub
jb
pop
testb
mov
mov
dec
mov
xor
sti
sub
fimuls
rcl
push
stos
lock
js
arpl
add
adc
std
push
popf
jmp
test
insb
pop
sub
add
cli
stos
mov
adc
and
mov
push
jle
inc
push
out
bound
pop
lods
icebp
and
mov
pop
push
outsb
or
mov
mov
add
push
jne
dec
mov
sbb
jnp
and
sbb
rcll
stos
cmp
inc
mov
ret
sub
popf
icebp
ss
push
js
dec
cmpsb
hlt
add
push
xor
or
int3
inc
add
xorb
or
scas
rcr
test
xchg
sub
xchg
dec
sbb
cmp
scas
push
dec
mov
lret
sub
outsl
cmp
int
pop
inc
fwait
xor
fwait
mov
mov
push
jb
mov
fwait
ljmp
sbb
jne
jnp
adc
mov
pusha
movsb
les
rcrl
and
enter
mov
mov
xchg
lahf
cmp
sub
dec
fcomps
mov
jns
cmp
inc
adc
in
push
orb
jno
loope
or
jp
idivl
iret
and
fcomip
popa
jbe
xchg
and
mov
out
sarb
icebp
adc
lea
outsb
jnp
add
lock
and
clc
jnp
lods
aaa
xlat
mov
gs
arpl
cmp
jne
pop
xchg
mov
popa
out
cmp
xor
mov
push
jmp
push
adc
cmp
and
mov
pop
icebp
or
in
mov
imul
dec
negb
or
pop
orb
sub
inc
shrb
jge
cmp
mov
pushf
in
add
leave
sub
scas
mov
std
test
movl
xchg
cmp
adc
mov
mov
call
and
xor
sbb
dec
sbb
dec
pushl
jnp
push
pop
out
push
arpl
iret
es
ret
mov
dec
mov
cmp
cld
and
mov
jge
xchg
dec
faddl
sti
gs
aas
gs
lods
add
rcrb
jp
js
or
fmulp
int
fnstsw
cmp
adc
mov
imul
mov
push
mov
scas
mov
decb
add
stos
rcl
imul
and
dec
dec
pop
repnz
mov
inc
aas
mov
cs
pushf
fwait
sbb
fisubrl
inc
test
and
je
jae
cld
loope
xor
jp
push
and
jmp
hlt
daa
lds
and
iret
adc
shl
cmp
lock
mov
ret
stos
nop
mov
or
pop
cmp
inc
lahf
inc
lods
xchg
sbb
loop
lret
jmp
cmpsb
xchg
push
lock
pop
jne
mov
lods
sahf
and
inc
jmp
xor
push
in
cltd
adc
jmp
push
sub
add
pop
cmpsl
daa
pop
mov
inc
dec
pop
xchg
andl
jns
inc
fildl
jg
mov
loopne
and
pop
add
add
xor
add
cmp
cmp
enter
loop
and
jg
sbb
addb
mov
icebp
mov
sub
sub
jno
aaa
pushl
mov
mov
das
adc
movsl
lahf
out
cmp
xchg
flds
sbb
adc
mov
and
sub
dec
jp
sub
pusha
scas
out
dec
or
inc
cmp
icebp
mov
lret
mov
scas
lods
out
add
mov
mov
push
jmp
mov
jge
fwait
sti
ljmp
out
mov
ja
xchg
push
sbb
pop
lcall
dec
or
or
fildll
pop
dec
out
jp
mov
nop
loop
cmc
mov
mov
imul
push
inc
dec
lret
adc
mov
lahf
paddw
loopne
or
push
xchg
stos
inc
sbb
aas
dec
loop
push
jecxz
imul
aad
and
repz
mov
iret
jg
add
cmp
or
cli
sbb
fs
lret
or
fs
mov
mov
cld
lea
push
inc
xchg
movsb
out
lea
shrl
addr16
lds
mov
pop
lods
sub
pushf
mov
inc
stos
jl
addr16
mov
jo
sbb
mov
pusha
adc
in
and
mov
clc
ja
lods
cmpl
es
mov
push
lcall
adcb
in
pop
sub
dec
pop
add
ret
das
jbe
jo
xchg
into
icebp
jno
jnp
pop
iret
js
pushf
mov
movsb
das
xor
xor
lcall
mov
bound
movsb
mov
mov
or
sub
rcr
insb
push
je
enter
loopne
test
ss
mov
xchg
rclb
adc
ret
xor
cmp
divb
lock
rcrl
pop
insb
sbb
rolb
adc
push
jno
out
in
or
imul
jmp
adc
push
dec
dec
sub
mov
mov
mov
out
jg
mov
xlat
jnp
inc
shl
pop
cmp
loop
mov
js
movl
mov
cmpsb
xchg
mov
mov
lahf
xchg
dec
and
cmpsb
imul
scas
mov
sbb
dec
mov
sahf
dec
fistps
xchg
pop
pop
push
shl
cmp
movsb
mov
push
mov
cmp
sub
mov
jge
and
imul
jge
add
jge
or
test
jae
inc
mov
sbb
imul
fdivs
fistps
pop
pop
or
fmul
sbb
mov
pop
stos
nop
dec
test
cld
push
imul
iret
int3
or
push
sti
push
sub
mov
std
adc
push
inc
testb
adc
mov
cmpsb
and
adc
paddusw
fsubs
popa
subl
sbb
push
mov
jmp
fstl
loope
rcll
test
adc
pop
cmp
aas
xchg
adc
popf
mov
pushf
nop
fisttps
inc
arpl
cmc
loopne
fstpt
sbb
fwait
movsl
cmp
out
ror
imul
add
push
mov
inc
sub
sub
in
jecxz
push
mov
jb
pop
jl
or
mov
mov
adc
mov
add
lds
movsl
and
jns
pop
outsb
stos
pop
aas
cmp
fidivrs
sarb
rorb
inc
fdivs
dec
test
imull
pusha
mov
sub
dec
sub
sub
xor
jg
mov
mov
faddl
movsb
data16
test
stc
lcall
ljmp
cmp
sub
mov
adc
cmpsb
cltd
pop
loopne
jae
dec
popf
mov
fldt
mov
push
mov
sub
dec
push
call
add
mov
adc
test
dec
test
pop
jo
mov
loop
aaa
push
lahf
jge
mov
rclb
jnp
dec
and
aam
daa
imul
xor
push
popa
scas
stos
jnp
dec
mov
insl
mov
jno
insl
pop
mov
mov
cli
mov
mov
lea
jne
insb
add
arpl
cmp
or
add
push
mov
dec
les
sar
cmpsl
adcl
mov
mov
xchg
dec
popa
imul
dec
mov
nop
rcll
pop
dec
mov
xchg
cmp
test
adcb
mov
daa
icebp
cmp
mov
mov
jo
fld
repnz
jle
addb
pop
mov
outsl
pop
push
xchg
push
ret
mov
sbb
call
dec
imul
xor
ds
jge
int
mov
push
mov
out
mov
inc
push
cli
push
daa
insb
push
cmc
ja
push
push
mov
or
bound
inc
test
inc
ret
ret
pusha
inc
cmpl
cwtl
mulb
enter
fdivl
cli
les
or
pop
and
adc
jge
xor
pop
mov
sbbl
testb
adc
movsb
arpl
aas
mov
in
lods
xchg
or
je
pop
mov
jl
ss
mov
adc
pop
insl
mov
call
mov
ss
int3
xor
cmp
mov
pop
jmp
outsl
inc
and
dec
pop
inc
xchg
push
xor
adcl
push
and
mov
subl
mov
sahf
out
out
push
mov
fnstsw
decb
aaa
cs
int3
aad
rcrb
aas
mov
pop
push
jnp
xchg
sbb
std
push
nop
and
mov
es
sub
popa
int
sub
mov
pusha
scas
cmpsb
out
xor
pop
push
mov
cmp
das
mov
iret
xchg
push
push
cs
imul
cmpsl
test
js
lods
mov
movsb
rorl
dec
xor
bound
aas
sahf
adc
sbb
sbb
xor
repnz
arpl
cmpsb
aad
adc
or
push
cmp
fs
pop
jb
jb
fsubrs
cmp
xlat
movb
decb
or
lahf
mov
jp
data16
cmp
add
sub
adc
fsts
xchg
clc
lahf
imul
mov
mov
inc
in
mov
cli
mov
add
push
push
test
or
enter
add
sbb
add
movsb
mov
pop
jb
mov
insb
loopne
mov
fld
scas
pop
push
cmp
in
decl
jp
fnstsw
hlt
cmp
stc
lods
mov
jae
lea
out
pop
shll
insl
js
add
jle,pt
test
xchg
cmc
ja
bound
test
shr
add
cmp
xlat
ret
sub
sub
rolb
sbb
cmp
adc
addl
or
ja
pusha
repz
cmpsb
mov
lret
jp
pop
pop
jnp
xor
add
sbb
js
mov
sub
jl
leave
mov
movsb
add
push
std
stos
add
cli
dec
sbb
movsb
mov
fcmovnb
inc
xlat
jbe
jecxz
xchg
ficompl
lret
sub
and
dec
add
lods
aas
sub
mov
enter
shlb
std
jne
pop
pop
xchg
xchg
sbbl
mov
pushf
jnp
or
lea
push
cmc
mov
pop
push
fildll
arpl
sbb
imul
clc
ficoml
cs
cwtl
xor
mov
jle
ljmp
or
fildl
dec
repz
pop
mov
insl
cli
add
pop
add
mov
push
pop
fbstp
sub
mov
sbb
mov
or
movsl
adc
mov
lds
sub
sahf
shlb
cs
dec
mov
jbe
movsb
inc
mov
test
jns
loop
subb
mov
cmp
adc
repz
out
dec
lret
fucomi
dec
xchg
add
pop
into
sbb
jno
repnz
mov
ljmp
push
pop
pop
cmp
or
cmc
mov
inc
leave
arpl
in
jmp
lds
cmpsb
dec
in
cmpsl
psubsb
pop
fcmovnb
mov
inc
cs
inc
xor
roll
fbstp
into
jp
in
pop
ljmp
push
mov
test
iret
data16
in
mov
stc
mov
xor
adc
mov
push
mov
adc
int
mov
cmc
cltd
add
mov
scas
out
push
and
divl
les
cmp
jo
mov
fists
fcmovnbe
mov
push
push
pop
mov
push
daa
fcoml
add
adcb
push
cmc
and
sbb
push
jo
icebp
es
lock
mov
sbb
sub
push
xchg
pop
or
push
test
mov
shrb
xchg
scas
adc
in
cmpsb
cmp
das
pusha
or
pop
aam
and
pop
pop
in
jmp
xchg
jge
aaa
adc
aam
xchg
xchg
mov
add
pop
sbb
pop
mov
sbb
nop
adc
ffree
fs
stc
sub
push
push
dec
in
dec
movsb
inc
and
imul
pushf
popf
test
out
cmp
xor
int3
scas
and
mov
pop
stos
jnp
pop
pop
stos
negb
ja
dec
scas
scas
inc
maskmovq
testl
cld
inc
jbe
jbe
jae
ret
mov
leave
cld
adc
mov
test
mov
pop
jp
imul
cmpsl
fiaddl
out
jl
sbb
xchg
stos
enter
nop
jns
lret
dec
bound
pusha
add
arpl
int3
jae
mov
test
sbb
sub
iret
cmpsl
jp
lds
add
pop
test
scas
int
mov
mov
lock
outsl
xlat
cmpsb
mov
push
pop
xchg
test
add
xchg
xorb
fwait
xchg
lcall
fisttpl
daa
and
sub
mov
jae
sub
shr
pop
push
xchg
aam
mov
jbe
mov
fisubrl
mov
insb
cmp
sub
mov
mov
outsl
shl
mov
pop
je
sub
pop
push
lods
stos
mov
adc
jl
add
mov
dec
push
xchg
icebp
dec
and
mov
xchg
jp
push
mov
jp
inc
arpl
std
stos
movsl
repz
mov
mov
ss
js
icebp
or
push
jns
mov
push
pop
cmp
jb
pop
jne
mov
push
loopne
cmpsb
std
mov
aas
or
enter
push
int3
insl
insl
fldenv
mov
cli
mov
int3
sti
sbb
fstpt
enter
addr16
pop
hlt
xor
test
rcr
xlat
outsl
mov
sti
push
adc
gs
add
sub
loope
sbb
push
test
lret
sahf
add
xchg
sbb
pop
pop
mov
sub
or
pushf
ret
lcall
rorb
mov
xor
js
jg
lret
cmpsl
xor
adc
adc
pop
sbb
arpl
add
jno
pop
inc
push
sub
fistl
lods
in
stos
mov
and
int
arpl
or
xchg
inc
or
insb
movsl
sbb
out
add
jg
call
xor
adcb
cli
loope
leave
jl
mov
xchg
mov
lods
enter
or
push
jae
insb
jmp
jle
dec
xor
push
filds
scas
lods
sbb
and
jp
dec
mov
aam
pop
adc
scas
loope
dec
dec
test
daa
stos
arpl
push
aaa
xor
cs
lahf
or
adc
xor
sarl
pop
popf
out
xor
pop
jmp
xor
mov
jp
dec
das
mov
or
cmp
cli
dec
jg
fisubrl
icebp
les
mov
mov
ljmp
push
mov
xchg
sub
sbb
aaa
test
push
mov
push
cmc
adc
and
pop
aad
mov
leave
push
lock
push
push
push
outsb
shll
lcall
fdivl
push
mov
add
sbb
aad
ljmp
add
mov
mov
lret
push
shlb
inc
lcall
push
sti
add
mov
adc
das
icebp
and
pop
orl
jl
jecxz
cmp
bound
pop
mov
aas
jne
aaa
cwtl
sub
jg
or
adc
std
fisttps
icebp
jmp
iret
in
push
jecxz
add
inc
jb
mov
rcll
ljmp
xabort
aaa
scas
pop
adc
jp
pop
jg
pusha
add
sub
into
xor
out
test
jns
imul
mov
add
roll
daa
data16
push
cmp
testl
cltd
and
divb
mov
bound
and
and
sbb
sub
outsb
sahf
inc
mov
js
sarl
lock
mov
ljmp
add
cltd
inc
mov
outsl
cwtl
cmp
add
cmpsl
mov
push
pop
adc
lret
push
cmp
scas
lea
dec
lahf
or
loopne
test
addr16
jg
scas
sub
push
fisubl
add
inc
and
aam
dec
shl
fwait
movsl
xor
mov
dec
pop
lock
sti
or
scas
sub
push
adc
stos
xchg
popa
cmp
sub
push
int
xlat
xchg
mov
mov
xchg
and
inc
testb
push
cld
add
test
leave
ret
mov
ss
jecxz
fists
in
jmp
push
pop
imul
hlt
jns
dec
fcmovnb
or
or
sbb
sbb
data16
test
insb
adc
out
scas
cwtl
scas
mov
xchg
icebp
std
xor
sbb
test
paddusw
iret
dec
sbb
into
cmp
ljmp
out
loope
rclb
cmp
lods
icebp
mov
xlat
jns
jecxz
pop
xchg
xor
mov
dec
aad
sahf
mov
nop
xor
xchg
mov
xor
lret
jmp
mov
sbb
js
pop
int3
test
call
sub
push
sub
filds
stos
cmpsb
imul
add
sbb
and
push
mov
mov
mov
xor
ss
pop
push
shll
cwtl
xor
js
pandn
adc
adc
subl
or
testl
and
lods
adcb
mov
fisttps
pop
aam
cmp
mov
xchg
or
std
scas
xchg
data16
mov
mov
outsl
mov
mov
iret
shlb
subl
xchg
imul
icebp
mov
dec
std
push
lret
jl
inc
jbe
push
cmpsb
iret
dec
cmpsl
adc
movsb
in
sbb
adc
in
pop
add
push
hlt
leave
out
fcmovb
jnp
sub
xor
xchg
bound
popf
pop
xor
push
jo
adc
cwtl
aam
orl
sbb
fnstsw
mov
mov
bswap
jmp
gs
lcall
stc
or
movsl
and
loop
lock
jns
add
out
in
push
or
ret
arpl
test
pushf
jle
mov
mov
and
iret
repz
out
testb
mov
mov
lahf
mov
orb
jno
stos
decb
mov
jg
stos
icebp
jbe
rclb
add
in
or
adc
sti
rcr
ret
push
mov
mov
dec
nop
sahf
das
sub
mov
jbe
cs
dec
lret
add
inc
add
mov
push
popfw
aad
test
ja
cld
jo
cmpsl
loope
or
test
aad
push
sub
xchg
sbb
push
jb
ret
adc
cld
negb
mov
int3
jbe
push
daa
mov
lods
mov
pop
lea
sub
std
std
cmp
insb
xchg
repz
test
flds
js
push
clc
push
add
mov
aam
xor
xchg
std
mov
in
push
xor
push
es
mov
pop
out
push
sbb
lods
add
pusha
inc
dec
scas
jp
cmp
pop
gs
std
mov
sub
outsb
flds
mov
push
stos
xchg
pop
add
out
lcall
mov
rorl
pop
xor
inc
pop
jecxz
fnstcw
mov
jle
xchg
xor
test
in
and
or
mov
mov
xor
xchg
dec
es
mov
shlb
ja
ss
in
lds
xchg
test
add
cld
push
shll
lds
jo
ret
sub
loopne
mov
adcl
pop
xor
jne
adcb
fcomps
insb
aam
jp
xchg
shll
push
jns
sti
stos
sbb
aad
sbb
sbb
mov
out
enter
mov
stc
stos
in
jp
push
xchg
clc
in
xchg
cld
scas
sub
inc
mov
pop
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
and
xor
xor
mov
subl
push
mov
add
cmp
je
adc
mov
mov
adc
mov
xor
xor
orl
add
adcl
add
movl
adc
adcl
xor
movl
mov
push
adc
xor
xor
add
mov
add
movl
adc
subl
xor
xor
cmp
movl
jne
cmp
jmp
xor
stos
sub
cmc
cmp
dec
mov
jp
pop
jp
cld
cli
fs
adc
fsts
and
dec
aas
fimuls
ret
mov
and
xor
adc
push
pop
sbb
mov
push
jg
sub
mov
dec
fadd
in
je
jns
add
xchg
movsl
inc
xchg
jge
cmc
sbb
sbb
stos
shlb
aas
push
xchg
sarb
arpl
mov
xlat
pop
popa
xchg
xorl
jle
lds
jp
jg
ljmp
fisubrs
mov
into
adc
into
sahf
mov
jle
mov
push
shll
xor
inc
xchg
out
and
test
pop
insb
jbe
filds
hlt
jle
xor
sbb
add
mov
cli
clc
lods
push
call
jne
cmpb
fcomps
sahf
std
and
cli
mov
ss
jmp
lahf
in
mov
stos
lods
xor
cmp
leave
mov
mov
dec
or
xor
xor
test
leave
cld
mov
lcall
pusha
xchg
dec
push
lods
inc
pop
or
test
out
movsb
jo
mov
dec
in
imul
jo
inc
cli
cmp
vsubsd
jo
ret
lsl
mov
add
and
mov
jmp
xor
inc
sbb
mov
out
stos
and
or
mov
jge
jle
aaa
mov
mov
fidivs
adc
xchg
imull
mov
mov
insl
adc
jae
xchg
sub
and
into
sbb
push
sub
cltd
es
pop
inc
shr
call
leave
and
jo
shll
pop
xchg
lret
fistpll
mov
sti
pusha
aam
jae
xlat
std
insb
and
push
lock
pop
jns
xchg
xchg
mov
cld
add
xchg
negb
test
xor
ja
mov
mov
mov
lret
out
scas
mov
test
jg
dec
xor
and
jl
inc
mov
sarl
push
dec
mov
and
addl
pop
cli
xor
insl
jbe
pusha
xchg
and
mov
addl
cltd
mov
mov
sub
xchg
stos
in
imul
push
pop
sahf
xchg
or
fs
add
xor
gs
xchg
xchg
mov
mov
xchg
dec
mov
or
je
pop
popf
mov
mov
adc
mov
mov
out
mov
int3
lock
push
mov
roll
add
push
mov
jg
mov
adc
lret
push
mov
or
sub
arpl
or
sub
enter
push
push
cld
dec
jl
pop
hlt
push
or
pop
stos
subl
jecxz
test
out
addb
out
xchg
lods
pop
test
or
into
jns
fidivl
mov
ret
mov
call
xor
pop
hlt
adc
or
pop
cltd
mov
aad
test
or
jge
mov
scas
adcl
pop
pop
in
lods
sub
outsb
leave
pop
incl
test
imul
imul
adc
bswap
pop
and
ret
mov
sub
mov
cmpsl
mov
inc
data16
pop
fs
pop
icebp
lock
lret
faddl
in
push
js
sbb
pop
sbb
cs
lcall
adc
push
rorb
sbb
cmp
icebp
js
jecxz
shl
xor
outsl
fisttps
mov
cs
mov
cwtl
cltd
add
js
pop
scas
and
cmp
call
notl
sub
push
ja
or
rcrb
lea
test
xchg
aad
repnz
mov
loope
add
pop
jbe
hlt
mov
jo
xor
pop
bnd
rol
clc
out
xchg
aaa
dec
push
pop
xchg
jnp
mov
ficoml
sub
cltd
test
imul
and
loopne
xchg
mov
cmp
push
mov
data16
push
cmp
sbb
mov
push
add
outsb
dec
jg
pop
xchg
repz
cmpl
aas
mov
ljmp
mov
or
lods
inc
xor
add
lea
mov
adc
out
gs
fiaddl
xchg
mov
arpl
je
sbb
dec
je
hlt
sub
cmp
div
push
inc
cltd
cld
mov
or
fwait
or
jns
xor
stos
sbb
jb
cmp
cmp
lea
lds
sub
and
and
fs
push
dec
leave
movsb
add
fiadds
fadds
fs
sub
dec
cli
cmp
add
or
scas
xchg
out
int
enter
sahf
addr16
jnp
pushf
mov
cmc
dec
orb
cmp
aam
loope
enter
pop
mov
cmp
stos
mov
sbb
fwait
imul
stos
mov
mov
dec
ja
dec
ficomps
pop
push
loop
sub
into
decb
test
int3
inc
mov
xchg
pusha
xchg
or
lcall
or
dec
cmp
cwtl
jo
and
cld
push
pusha
jp
mov
fsubs
xor
jg
lock
xor
je
or
loopne
cmp
jb
dec
loop
stos
in
imul
and
xor
pop
mov
or
mov
outsl
and
repnz
sti
dec
out
sbb
outsl
jp
sbb
leave
mov
push
lods
mov
mov
dec
xchg
xor
mov
in
arpl
xchg
push
nop
in
cmpsl
test
pop
cmp
or
ljmp
aam
pop
jle
or
or
fcmovnu
jl
das
lea
das
cld
outsl
cmc
xchg
push
fnstcw
xlat
mov
cwtl
dec
add
int
adcl
lea
les
push
imul
in
test
xlat
fidivs
mov
mov
ds
mov
xor
je
push
scas
in
inc
subb
adc
clc
scas
ds
xor
clc
or
sti
cld
cmp
or
sbb
data16
ffreep
sbb
test
pusha
jecxz
dec
in
loop
inc
xchg
rorl
filds
cmc
rcl
sbbb
js
or
lret
pop
lcall
fimull
or
mov
or
pop
rcrb
js
mov
xchg
jne
popf
or
mov
out
leave
fstpt
out
mov
shrl
mov
sub
repz
or
inc
cmp
sub
inc
xchg
repnz
add
mov
arpl
imul
and
daa
cs
inc
pop
adc
popf
out
daa
or
or
sahf
dec
lret
jb
sbb
and
xchg
out
jmp
mov
rol
jns,pt
mov
mov
fisttps
fdiv
fmull
into
xchg
inc
imul
dec
je
jno
cmpsl
add
insb
mov
push
push
push
stos
sbb
jne
js
into
mov
faddl
and
lret
push
jmp
addl
jnp
and
mov
test
or
lahf
loopne
cmp
mov
mov
fnstcw
mov
adc
shl
test
sbb
push
fsts
mov
popf
push
insb
pusha
sarb
mov
adc
into
nop
pop
sbb
movl
stos
mov
mov
cmp
push
or
lret
cltd
mov
repz
jge
push
in
mov
adc
inc
fs
leave
pop
or
test
enter
pop
sub
loope
push
lcall
scas
in
xor
mov
jl
pop
popa
jle
shll
sbb
fdiv
cmp
test
sub
data16
ficompl
xor
lea
clc
int3
pusha
pop
sub
cmpsb
add
jne
dec
inc
out
sub
je
ss
cltd
mov
ds
pop
outsb
and
pop
outsb
add
insb
lods
testl
sub
je
ds
scas
popf
or
jge
push
lock
cmpsb
push
mov
pop
fstpl
jecxz
jb
mov
dec
mov
xor
sbb
cmc
xchg
mov
daa
push
in
mov
inc
js
ds
adc
loope
or
mov
scas
stos
cmpsb
inc
mov
cmp
out
jg
shl
mov
xchg
xchg
loope
xor
ror
sbb
xchg
sbb
pop
xchg
bound
jge
pop
xchg
sub
inc
mov
lock
or
dec
cmp
mov
or
popf
bound
scas
repz
movsl
outsb
add
and
pop
fimull
mov
std
insl
inc
das
push
push
xchg
adc
cmp
xor
ret
aas
mov
cmp
mov
cmp
out
cmp
mov
jmp
cld
enter
retw
popa
lret
push
cltd
mov
test
fdivrl
jae
push
sbbl
inc
cmpsb
nop
loope
xor
sbb
mov
sahf
sbb
out
outsl
ss
loopne
sahf
addr16
out
adc
and
into
cmp
push
jae
inc
fs
loopne
movsl
in
xchg
mov
mov
dec
imul
jns
sahf
push
pop
cmc
xchg
add
xchg
js
loopne
jne
xchg
xlat
jo
xchg
cmp
push
inc
adc
cmp
cld
imulb
pop
fmull
sbb
lret
xchg
or
xchg
fisubl
pop
xchg
fisubl
jb
xchg
hlt
mov
inc
cltd
xlat
mov
xlat
xor
popa
dec
in
aaa
int
pushf
stos
aam
jb
mov
jl
ds
add
fcomi
ja
int3
out
dec
jmp
or
dec
xchg
cmpsb
add
xchg
jg
or
add
push
mov
lahf
or
inc
stos
jp
push
xchg
fs
mov
test
push
outsb
rorb
inc
mov
mov
in
hlt
push
fbld
pop
lods
outsl
mov
jno
inc
clc
mov
mov
cmc
dec
and
mov
insl
scas
add
and
xchg
adc
in
and
fildll
dec
xlat
jl
subl
movb
sub
push
jns
lret
xor
inc
int3
push
aam
xchg
clc
and
and
or
cwtl
std
fcomi
sub
into
or
lock
outsb
jno
push
jecxz
mov
mov
fsubrs
icebp
jl
add
jbe
das
clc
addr16
push
mov
mov
pop
lods
cmp
lret
rcrb
mov
cld
jno
aam
ljmp
lea
insl
ret
push
cmp
xor
ret
add
jle
adc
repnz
dec
mov
fdivrl
lods
in
jne
roll
adc
insl
lods
dec
sub
mov
adc
add
nop
fisttpll
cltd
sahf
loope
mov
insb
loope
arpl
dec
movsb
xchg
pusha
add
jb
imul
cwtl
adc
test
lds
outsb
sbb
popf
aad
push
inc
pop
aaa
addl
in
aas
push
pop
cmpsb
xchg
sahf
or
pop
in
mov
cld
mov
push
lods
sbb
xchg
sarl
ss
test
adc
fmull
loop
lcall
sub
push
add
and
icebp
ss
xchg
jno
aas
xchg
pop
cmpsb
enter
jo
arpl
iret
xorl
in
lahf
xor
dec
bound
sbb
and
in
pop
insl
cmc
in
pop
stos
adc
cld
pushf
shl
out
mov
mov
ja
stos
push
push
lret
xchg
cmp
insb
adc
ret
add
nop
and
mov
aaa
test
xchg
mov
pop
pop
jg
int3
dec
jl
inc
pusha
sub
pop
nop
test
lcall
push
outsl
jecxz
push
pop
mov
dec
fadd
push
mov
iret
jp
pop
dec
rcl
pusha
cmp
xor
icebp
xchg
jne
mov
push
push
pop
cmc
cmp
aad
sbb
and
mov
lcall
fdivl
mov
add
jle
dec
fs
aam
dec
es
lret
aam
or
adc
xor
xchg
popa
pop
xchg
out
sub
loope
int3
popa
ss
pop
inc
inc
lahf
cmp
dec
adc
lret
lea
adc
aas
addr16
mov
pop
ret
std
add
std
dec
in
jle
xor
lods
into
xlat
jle
inc
add
mov
cmp
int3
mov
insl
inc
push
sbb
mov
fstpt
mov
or
hlt
and
fs
popf
mov
xor
imul
stc
adc
out
push
pop
cltd
in
pusha
mov
xor
push
push
xchg
push
std
cmp
push
cmpsl
mov
pop
xor
and
mov
rorl
les
dec
lret
fstpt
pop
sahf
mov
fsubrl
int3
dec
lods
bound
mov
arpl
mov
jno
mov
bound
xor
jecxz
xorb
sbb
dec
sbb
sub
pop
and
xchg
dec
enter
inc
add
mov
lea
fsubl
dec
fcmovnbe
or
jne
sbb
add
cli
test
jno
and
xor
or
xorb
lret
dec
jb
seta
aas
mov
stc
xor
jp
cmp
inc
or
cwtl
adc
adc
pop
loop
pop
and
xchg
push
push
cmp
lret
cwtl
pushf
mov
pusha
xlat
fldl
stos
sub
lods
jno
outsb
repnz
ffree
sti
les
jae
in
push
gs
inc
repnz
xor
divb
inc
insl
sbb
out
cmp
ret
imul
js
sub
movsl
incl
aas
jle
add
push
jmp
push
pop
pop
jp
loopne
inc
test
and
fs
dec
imul
mov
or
js
enter
push
jge
leave
int3
rcr
xor
out
jmp
ficompl
mulb
repz
mov
les
lahf
and
cmp
fisttpll
js
rorb
gs
shrb
sub
xor
faddl
mov
jecxz
sub
fstps
push
push
pop
fsubrl
mov
outsl
mov
mov
dec
cld
ret
add
xchg
jo
pop
cmp
sub
ja
sti
inc
imul
enter
mov
add
inc
jo
mov
movsb
or
and
fbstp
scas
sub
loop
in
push
mov
repnz
mov
add
test
and
mov
push
add
lret
shrl
lea
fsubrl
jbe
xchg
int3
jecxz
pop
aam
js
or
jnp
dec
int3
jne
incb
out
jns
or
bound
push
push
test
sub
scas
mov
jno
ds
test
rorb
mov
adc
push
stos
outsb
jnp,pn
mov
orl
bound
sbb
pop
subl
lret
cld
aam
out
mov
fmull
inc
jmp
or
sub
outsl
cmp
ret
scas
and
pop
nop
push
test
pushf
sub
xchg
in
in
call
enter
pop
es
into
loope
stc
inc
or
push
lods
rcll
inc
xor
clc
and
jmp
popf
in
xlat
mov
out
mov
test
iret
aad
pop
sbb
sbb
or
inc
xchg
jns
mov
adc
pop
sbb
xor
inc
mov
ss
jl
in
push
dec
rorl
push
addr16
sub
nop
lock
xchg
mov
stos
adc
mov
mov
adc
test
lea
push
pop
cmpsl
mov
bound
mov
cld
iret
and
pushf
inc
xchg
push
dec
lcall
push
xor
je
pop
sbb
add
push
and
jg
stc
jnp
int
sbb
fwait
sar
xor
inc
push
mov
mov
pushf
lods
iret
push
sub
pop
sti
outsb
mov
pop
lea
mov
mov
add
push
mov
repnz
mov
mov
jmp
jbe
adc
mov
out
mov
and
mov
and
std
jns,pt
mov
add
out
xchg
js
push
jae
adc
mov
push
pushf
flds
je
jbe
dec
ret
lret
pusha
or
push
shl
cmpsl
popf
inc
jmp
push
popa
cmp
mov
ret
push
or
js
test
cli
mov
sahf
mov
xor
xchg
mov
mov
inc
das
xlat
sbb
inc
in
xchg
jns
je
cli
in
jp
add
pop
stos
test
mov
cmp
push
xchg
cs
mov
addr16
or
es
fmull
mov
adc
push
out
nop
popf
fimuls
inc
subb
jnp
push
mov
push
leave
xchg
fbld
jnp
pusha
sti
adc
jnp
xor
outsb
xchg
push
fucom
sti
out
inc
or
hlt
rcll
mov
lahf
in
push
mov
and
and
mov
push
gs
rep
mov
mov
fistps
xor
push
xchg
jg
adc
in
adc
scas
in
xor
cmp
dec
dec
jne
pop
mov
in
sub
repnz
insl
hlt
aas
cld
xchg
add
rcrl
inc
test
outsl
mov
adc
dec
pop
cmp
es
push
ret
cmpb
cltd
lods
test
lods
movsb
mov
mov
out
cmovb
test
mov
mov
outsl
loopne
clc
cmp
je
xchg
inc
stos
pop
scas
cmpsb
and
xchg
std
xor
push
sbb
fnsave
popf
mov
jle
in
incb
popa
cmp
mov
mov
out
push
jmp
jmp
mov
lahf
and
sbb
and
sbb
jbe
ffreep
lcall
das
shll
movsl
lret
cs
xor
scas
push
and
scas
xor
test
scas
mov
dec
push
pop
adc
xchg
mov
lahf
sahf
imul
add
aaa
xor
and
pop
int3
mov
lahf
test
add
pop
and
hlt
cld
mov
fildl
mov
imul
insl
xchg
jmp
in
sarb
rcrl
xchg
mov
push
cmpl
lret
or
xor
add
mov
in
clc
push
je
imul
pop
push
xor
lods
xor
push
mov
into
mov
lds
push
pop
mov
mov
outsb
outsl
jno
int3
push
or
loop
pop
rcll
inc
iret
xor
sbb
or
out
mov
dec
pop
mov
sub
mov
and
cwtl
ficomps
arpl
jle
add
insb
cwtl
mov
or
sub
repz
dec
mov
mov
jo
out
and
stos
andb
dec
push
and
and
inc
hlt
fwait
in
imul
pop
test
cli
jb
jne
inc
sbb
cmpsb
push
and
icebp
push
cltd
insb
pop
inc
scas
cmp
stc
jb
fwait
mov
jge
push
sbb
cli
movsl
add
add
data16
in
ljmp
adc
mov
lret
dec
iret
xchg
and
insb
retw
sbb
mov
cmpsb
and
pop
push
das
jecxz
and
mov
daa
adcl
xor
sysret
loop
in
nop
dec
push
add
divl
stos
mov
and
mov
mov
jle
push
or
inc
or
in
in
jno
aam
fcmovbe
mov
mov
cs
push
xchg
lods
push
mov
mov
mov
mov
jl
aad
repz
jbe
rcll
or
mov
dec
lahf
in
jb
mov
push
dec
sti
loop
inc
or
cltd
clc
xchg
fnstcw
call
sub
in
mov
mov
fldt
sahf
sbb
aad
add
xchg
mov
inc
xchg
or
and
cmpl
outsb
mov
pushf
pushf
mov
mov
cld
jl
shr
stos
in
add
enter
daa
dec
fsubl
movsb
mov
in
out
inc
sub
insl
and
into
jnp
xchg
leave
aad
add
mov
bnd
out
and
in
fnstcw
inc
adc
ja
or
aad
aad
fsubr
rorl
bound
add
pop
mov
ret
adc
xor
shrb
push
gs
inc
ss
push
ds
adcb
in
xor
pop
add
jns
lds
sbb
cmp
dec
ds
mov
ss
into
inc
or
push
sbb
negb
fs
sub
movsb
and
shlb
das
rclb
decb
cmp
cmc
push
dec
in
std
addr16
or
or
jecxz
insb
mov
adc
ds
or
rcll
inc
icebp
repnz
stos
test
pop
data16
cmp
push
or
test
imul
sub
xchg
mov
and
inc
mov
mov
out
sub
mov
inc
loop
test
loop
push
jmp
aas
gs
mov
test
mov
push
adc
js
inc
add
popa
mov
daa
jnp
insb
mov
pop
cli
je
outsl
adcl
rclb
loop
ret
imul
jno
cmp
ret
orb
and
dec
mov
in
mull
movsb
outsb
xorl
aas
imull
outsb
pop
mov
mov
pop
sarl
sub
enter
mov
sbb
jne
mov
mov
add
add
nop
ss
jne
adc
fimuls
ljmp
inc
repz
mov
pop
aaa
sub
scas
sarb
push
out
scas
repz
pop
pop
nop
mov
mov
dec
fwait
cmp
cmp
lods
clc
aad
jne
shrb
jmp
adc
jg
add
dec
test
mov
mov
push
push
cmp
imul
pusha
pop
ret
push
inc
add
pushf
js
push
aad
xchg
xor
in
out
fadds
pusha
pop
mov
inc
sahf
mov
mov
and
xor
sbb
stos
mov
nop
cmc
movsl
lcall
and
sub
and
mov
xor
inc
stc
xor
pop
fisttpll
mov
ljmp
xchg
dec
or
jo
mov
jp
sbb
push
dec
sbbl
rclb
cmp
stos
movsl
sub
push
and
push
sbb
dec
dec
sub
ret
mov
ljmp
push
fcmovb
xor
cmp
xchg
adc
mov
cmp
mov
or
sub
push
out
xchg
sbb
push
mov
lods
and
fdivl
xchg
xchg
cmp
rorl
arpl
gs
loopne
xchg
std
xlat
mov
fsubrl
js
cld
hlt
xchg
ret
fnstsw
xchg
sub
out
test
aam
movsl
in
push
test
push
stc
ljmp
clc
mov
fdivrs
aad
adc
mov
rol
adc
dec
jae
add
mov
cmp
mov
jae
xlat
mov
popf
cmp
or
clc
push
pop
dec
popa
aam
and
lds
push
out
cmp
xor
xchg
cwtl
rcrl
mov
ficompl
out
repnz
or
ret
mov
cmp
mov
jl
dec
jg
iret
enter
jecxz
xor
fnstenv
clc
xchg
add
push
fdivrl
hlt
movsb
dec
jne
int
mov
lods
sub
jl
mov
div
push
cld
or
jo
xor
fs
cmpps
inc
neg
insl
pop
pop
clc
mov
push
jecxz
in
pop
int
mov
adc
aad
rcrb
add
cmp
ds
mov
fldl
rcrb
movsl
cmp
pop
movsb
or
pop
cmpb
mov
out
mov
mov
push
test
jmp
popa
add
ds
aas
jecxz
pop
mov
add
xor
fistpll
nop
and
add
dec
gs
ret
or
test
mov
stos
adc
sbb
pop
sub
enter
inc
movsl
pop
inc
jp
push
xchg
xchg
fcoms
and
out
xchg
inc
push
addb
jo
testb
xor
adc
push
mov
addl
mov
or
gs
iret
in
outsl
pop
dec
adc
sub
xchg
std
mov
dec
xchg
into
pop
call
stos
add
jno
js
pop
fisubrl
cmp
ret
and
fdivrs
int
add
jo
sahf
xchg
mov
mov
mov
lods
xor
adc
mov
lea
cltd
xor
addb
testl
mov
stos
inc
xchg
insb
inc
mov
repnz
sub
pop
inc
xchg
mov
stos
or
aad
jno
push
adc
ss
lahf
mov
daa
in
cmc
inc
push
insb
sti
iret
sub
fistpl
popa
mov
cmp
mov
push
std
jnp
loope
mov
add
add
adc
subl
arpl
mov
inc
in
rolb
int
scas
xor
ficomps
pop
sbb
mov
pop
xor
lods
and
xor
popa
test
insl
jle
dec
fldl
dec
cmp
pop
mov
cmp
lcall
push
mov
adc
push
push
sbb
or
xor
aam
call
ja
dec
outsl
int
mov
inc
dec
sarb
mov
lahf
and
jns
push
mov
shl
icebp
inc
mov
push
lds
cvtps2pd
dec
inc
call
orl
movsb
and
movb
out
repnz
cwtl
jns
adc
in
cltd
xchg
sub
divb
xor
mov
lahf
xchg
mov
xchg
inc
popf
das
xchg
cmpsl
fwait
lahf
inc
xor
aas
jecxz
sbb
xor
pop
add
mov
mov
pop
mov
xchg
pop
popa
test
mov
xor
loope
aad
enter
mov
mov
mov
cs
movsl
dec
pop
or
js
setne
push
sbb
jnp
mov
push
stos
push
adc
mov
das
fidivrl
mov
push
and
xchg
sahf
sbb
jo
cmp
dec
mov
cmp
in
test
pusha
roll
faddl
mov
les
fsts
jmp
mov
stc
mov
pop
stos
js
push
mov
and
sbb
test
dec
in
xchg
fisubl
cmp
cltd
xor
scas
sahf
pop
add
mov
or
pop
cmp
mov
jg
jecxz
push
sub
cs
push
push
push
out
cltd
mov
xorb
cmp
sub
gs
mov
in
dec
jae
fwait
out
or
pushl
arpl
xchg
jns
push
jecxz
jmp
inc
xchg
xchg
lds
mov
imul
sub
sti
daa
dec
pop
xchg
or
jmp
clc
xor
mov
dec
mov
pop
push
mov
test
aaa
mov
push
lret
mov
lock
out
mov
mov
dec
mov
xchg
ret
ja
xchg
fadds
insl
scas
jno
loope
and
lret
cmp
jl
cs
lds
xor
add
addr16
imul
test
xor
sbb
push
movsl
and
jbe
mov
adc
shll
mov
outsb
mov
lock
lods
out
dec
mov
sub
xchg
mov
push
pop
jge
aam
in
lea
insb
adc
push
sub
sbb
loopne
add
mov
add
push
divl
cmp
add
test
jbe
div
bound
cwtl
inc
or
sbb
popa
push
mov
fidivs
test
mov
adc
and
in
xor
sub
xor
xor
aad
rcrb
mov
into
xchg
loopne
xchg
push
mov
mov
push
sub
iret
dec
push
push
pop
je
repz
fwait
lret
pop
add
lea
cltd
cld
dec
in
push
adc
mov
imul
jp
xor
mov
int3
cmc
lds
cmp
loopne
mov
xchg
sbb
fmull
out
pop
jp
add
inc
xchg
movsb
mov
sub
mov
iret
subl
into
aas
idiv
or
cltd
xor
or
pop
cs
pop
jp
sbb
mov
dec
lret
adc
push
aaa
mov
inc
test
mov
leave
and
add
jp
jns
xor
mov
mov
pop
imul
cmp
push
iret
je
xlat
mov
pop
fisttps
adc
or
sbb
sbb
sub
lock
and
loopne
cmp
jge
test
stos
repz
ja
cmc
push
mov
push
mov
mov
mov
aad
incl
movsl
xor
mov
clc
mov
imulb
pop
or
mov
xor
push
dec
mov
inc
mov
xor
loop
push
ret
fildll
idiv
loop
xor
dec
pop
sub
cmpsl
popa
xchg
in
leave
pop
push
mov
sahf
adc
out
lock
addr16
pusha
jp
xchg
push
jne
inc
shr
xchg
pop
jbe
jo
shrb
lds
in
cmc
jg
out
push
in
push
ss
xchg
loopne
push
in
xor
adc
xchg
repnz
pop
lods
fs
data16
ds
and
call
lods
in
ret
fistps
lcall
fildll
mov
jns
mov
pop
sbb
xchg
in
mov
stos
mov
pop
jno
cld
cs
test
test
or
push
pop
and
mov
lea
sub
and
addr16
addr16
stos
icebp
xor
cmp
jno
dec
es
push
jbe
test
xor
fisttpll
or
inc
out
inc
imul
fsubrs
stos
fadd
push
mov
inc
jecxz
int3
inc
add
jb
pop
cmp
dec
movsl
fwait
test
xchg
xor
into
inc
lds
out
mov
mov
inc
aaa
std
jmp
data16
mulb
or
sub
xchg
aas
pop
loope
jae
lods
pop
cmp
out
cmpsb
out
nop
repz
jae
cli
imul
xor
inc
sub
stos
mov
xchg
subb
inc
addr16
ds
xor
xchg
sahf
dec
test
adc
out
loope
aas
xchg
dec
jnp
jnp
mov
pop
mov
add
jmp
sub
mov
mov
mov
xor
jmp
sbb
stc
sti
xchg
xchg
jae
dec
cmp
mov
aas
je
jp
inc
cltd
pop
std
pop
aam
sub
enter
mov
add
mov
and
xchg
mov
mov
faddl
inc
in
xchg
pushl
aam
gs
xchg
scas
pushw
repnz
xchg
ljmp
pop
jae
push
or
cmpb
push
test
mov
inc
xor
mov
imul
stc
shrl
xor
mov
pop
pop
or
xor
or
push
ret
lret
cld
and
out
mov
or
xchg
ja
test
jo
or
xorl
xor
in
mov
cmp
nop
mov
test
jl
mov
pop
add
xchg
inc
mov
lock
mov
mov
mov
dec
xchg
popa
inc
cmp
std
daa
push
dec
pusha
jno
adc
aaa
dec
js
mov
inc
cld
xchg
nop
push
or
mov
int
repnz
cwtl
arpl
push
ret
xchg
ss
test
aaa
jge
mov
sbb
pop
ds
loope
jae
jno
sbb
mul
inc
and
loop
pushf
mov
int
movzwl
test
mov
add
xchg
mov
fimull
push
push
fidivs
xchg
fiaddl
rcr
fstpl
test
adc
lahf
or
sbb
inc
fidivl
jne
call
mov
xchg
hlt
jno
out
cmp
scas
stos
mov
jbe
cmp
xorb
iret
rcrl
cmp
lock
push
mov
xchg
aad
xor
mov
call
dec
into
dec
sub
in
fdiv
fdivrp
fdiv
leave
push
dec
fstps
mov
xorb
adc
add
xor
out
inc
mov
add
sahf
lock
jbe
mov
fsubl
cmpsl
mov
and
sub
sbb
movaps
adc
and
cmp
pop
cmpsb
inc
push
and
push
sbb
mov
repnz
pusha
movsb
addl
jge
divl
rcll
pop
in
fmull
add
mov
xorb
outsb
mov
fmul
lret
and
sbb
pop
mov
inc
mov
sbb
std
and
outsb
adc
pop
lods
ja
test
notl
mov
lahf
mov
mov
xor
and
sub
mov
cltd
mov
sar
test
jb
pop
cmp
cmp
inc
xlat
aam
cmpsb
mov
in
mov
mov
sarl
push
test
inc
or
out
ss
xchg
sub
scas
loop
rcl
sub
cmp
and
jge
in
pop
shll
out
popa
jo
fidivl
jg
cmp
sahf
scas
jae
pop
sbb
and
sbb
sbb
stos
mov
pop
jge
xchg
xchg
data16
jne
mov
dec
xor
sub
mov
cmp
jae
cmp
outsb
ret
idivl
jne
push
inc
mov
mov
int
pushf
gs
xchg
jle
pop
mov
test
push
mov
cmp
mov
ret
pushf
sbb
mov
loopne
add
mov
sahf
inc
scas
push
insb
mov
and
repnz
adc
xchg
pop
jge
aas
pop
pushf
sbb
ja
shrl
cmpsl
dec
mov
subl
pop
fidivrl
xchg
mov
rcrb
shll
push
scas
pushf
jecxz
popa
jl
add
add
push
mov
pushl
jmp
pop
or
mov
cmp
shrb
dec
inc
push
repnz
ds
mov
add
mov
xchg
jnp
cmpsb
adc
push
push
adc
call
or
ja
dec
pop
data16
dec
mov
leave
dec
inc
out
leave
fidivrs
push
push
fwait
ljmp
or
sbb
and
leave
loope
out
popa
mov
and
xchg
subl
inc
addr16
inc
sub
scas
insb
in
je
inc
push
xchg
ret
pop
mov
add
pusha
adc
mov
jl
pop
fdiv
ja
imul
adc
je
and
cli
add
mov
movsl
push
and
or
nop
cmpsb
fsubrs
loop
or
stos
iret
or
xchg
sqrtps
ret
das
inc
aam
out
in
inc
imul
inc
cmp
adc
push
jg
stc
add
inc
xchg
jp
test
mov
mov
add
mov
xchg
rolb
cmc
adc
imul
into
mov
fdivrl
push
cmp
in
bound
lods
sbb
fdivrl
jae
in
cmp
push
push
or
les
xorl
lods
sbb
or
inc
xor
jmp
xchg
mov
and
imul
dec
xlat
popf
sbb
sahf
cmp
pop
adc
dec
push
nop
lds
nop
cmp
test
andb
and
mov
mov
aam
inc
push
arpl
jne
mov
gs
jno
xor
sbbb
leave
dec
jo
ret
or
aam
pop
stos
sbb
fmul
add
fs
or
iret
push
push
leave
push
or
push
cli
ret
xor
cmpsl
shl
test
cs
xchg
loope
push
in
insl
pop
adc
adcb
cmp
pop
sbb
and
cmpsl
push
inc
shll
sub
ja
push
jl
in
movsb
test
fs
lock
mov
jmp
sbb
sub
cwtl
or
fwait
test
push
movaps
jne
push
test
stos
fs
pop
push
std
repnz
pop
jns
and
mov
sbb
and
ret
call
scas
jb
das
das
mov
call
pop
rcl
jle
test
adc
or
add
push
pop
mov
inc
loope
pop
in
ror
xor
subl
mov
fcomip
mov
push
popa
arpl
sbb
in
push
pop
xchg
lods
sub
pop
mov
cwtl
lods
fwait
pop
mov
mov
cmpb
scas
clc
mov
xor
mov
mov
fidivl
inc
and
stc
out
cmp
mov
imul
xchg
or
test
shrb
xchg
ljmp
xor
out
andb
popf
lods
cmp
push
mov
outsb
jb
lahf
sub
lods
lcall
mov
fcompl
fwait
int
int3
daa
out
cmp
pop
xor
addr16
adc
fldz
xchg
ss
dec
pop
nop
xor
mov
push
pop
push
jg
mov
xorl
cwtl
mov
xlat
lock
cld
stc
add
iret
int3
stc
rcrl
negl
addr16
inc
outsl
inc
dec
repz
inc
inc
lods
loop
inc
xor
lea
add
mov
loope
imul
movsb
aaa
subl
mov
dec
push
je
xchg
adc
xchg
or
cmp
fidivrl
mov
mov
dec
dec
lods
jmp
cld
out
loope
push
push
dec
in
mov
mov
mov
xchg
add
mov
stos
and
sub
sub
aas
jmp
xchg
lcall
cmp
jnp
cmp
mov
sub
fldt
push
je
add
adc
add
es
mov
lret
sti
jecxz
rorl
xchg
mov
jae
imul
pushf
push
pusha
and
les
jmp
fstps
jle
dec
sub
add
adcl
fisttps
icebp
shlb
mov
fsub
inc
adc
push
ja
ret
xor
rcr
addr16
mov
gs
sub
in
test
push
xchg
clc
mov
xchg
notl
mov
arpl
xchg
xchg
inc
mov
cmc
stc
notb
adc
and
ja
outsb
iret
mov
xchg
add
sub
or
roll
and
mov
aad
in
dec
cmc
mov
sbb
ja
andl
fnstcw
sahf
xchg
jg
loopne
pop
xchg
icebp
or
xor
lods
push
mov
inc
push
add
subb
int
mov
cmpsb
dec
or
mov
adc
scas
inc
ljmp
sbb
movsb
ss
mov
push
stos
xchg
jae
aam
lea
rcl
dec
cld
sub
test
ja
dec
mov
cmc
lds
jp
push
pushl
in
mov
shrb
push
andl
dec
sbb
pop
in
rcr
jo
dec
outsl
xor
lahf
push
cmpsl
fs
sti
xchg
enter
or
out
jecxz
sub
scas
add
add
lds
enter
aad
jbe
xor
rcrl
push
pusha
push
jle
xor
outsb
test
stc
add
inc
mov
push
addr16
xor
cmpsb
xlat
push
mov
jno
nop
shlb
dec
push
pop
adc
je
and
aad
mov
ss
sbb
aam
incb
stos
fadd
xchg
and
sub
ret
fdivs
jae
push
repz
xchg
call
popa
pop
cmpsl
inc
lds
mov
stos
and
push
pop
int
arpl
sub
gs
pop
dec
xchg
lret
and
stc
push
cwtl
outsl
mov
hlt
loop
add
or
and
daa
imul
pushf
or
cmp
mov
js
js
and
sub
mov
xor
loope
fbld
outsl
mov
les
leave
addr16
adc
in
sub
das
jno
jmp
loopne
popl
mov
mov
and
sbb
push
aaa
xchg
jmp
or
push
push
test
lcall
or
cmp
aad
mov
negb
js
or
xorb
sbb
dec
xor
mov
or
mov
rcrb
add
lock
ret
sub
pop
or
test
loope
adc
ret
ja
dec
loop
sub
cli
loope
ret
jo
adc
and
imul
gs
mov
sbb
aam
push
sub
scas
movsl
movsb
sbb
je
js
fld
jle
xchg
mov
dec
lods
sub
ss
cld
cmp
repz
pop
dec
dec
adc
mov
xor
les
movsb
addr16
inc
mov
inc
mov
rcrl
dec
mov
pop
push
pop
lods
push
sub
xchg
lahf
outsb
adcl
pop
cmc
jp
into
inc
lahf
add
dec
shll
adc
push
add
adc
push
mov
sub
imul
fiadds
or
addl
xchg
xlat
cmp
rcl
jmp
and
ss
sbb
lret
mov
dec
pusha
xor
pop
jl
mov
lret
sahf
or
popl
adc
mov
dec
jno
dec
and
jns
push
mov
dec
sbb
pop
xchg
addb
add
mov
cmp
fimuls
test
loope
repnz
lds
mul
fwait
jne
adc
sahf
xor
fdivl
repnz
pushf
je
add
and
lahf
cltd
sbb
push
hlt
pop
mov
lret
add
lcall
mov
mov
xor
out
sbb
bound
xor
into
call
sbb
les
pushf
test
xchg
cld
imul
fsub
push
or
mov
js
cli
pop
lret
cmpsb
sub
mov
pop
adc
and
cltd
nop
jl
xchg
adc
fists
pop
jo
jge
push
fcoms
cmp
call
insl
subl
jae
push
in
test
rcll
xchg
sbb
pop
sub
repz
mov
mov
fimuls
lods
fcompl
int3
mov
mov
subb
das
je
out
cmp
sub
jae
jmp
cld
ret
sti
fiaddl
or
test
jne
dec
mov
xor
sbb
mul
movsl
inc
dec
cwtl
jge
adc
dec
or
inc
mov
fadd
sub
push
in
add
cli
sub
and
mov
ds
mov
add
nop
in
outsl
scas
pop
test
mov
ja
xlat
add
stc
or
cmpsb
test
pusha
mov
out
movsl
inc
pop
mov
jmp
cmp
and
decb
stc
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
movsbl
or
mov
mov
mov
sub
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
push
andl
mov
mov
movl
mov
or
push
mov
mov
mov
and
mov
or
xor
xor
and
mov
subl
add
sbbl
add
imul
movl
mov
movl
cmp
je
or
mov
mov
mov
xorl
xor
sbbl
lea
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
pushl
push
push
pushl
call
jmp
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
ss
add
add
add
add
xor
add
adc
add
inc
add
add
add
push
push
inc
push
fstps
jns
jnp
dec
int
lock
out
sbb
add
add
pop
push
popa
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
