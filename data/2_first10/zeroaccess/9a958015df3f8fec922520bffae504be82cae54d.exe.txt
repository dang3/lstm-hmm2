push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
and
sbb
mov
mov
clc
out
or
nop
mov
adc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
mov
add
outsl
das
or
in
pop
sub
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
idivl
or
bound
icebp
daa
fcomi
pop
sub
movsl
jecxz
out
gs
dec
popa
and
add
pusha
pop
int3
loope
jb
cwtl
fs
dec
mov
adc
rorb
and
xchg
outsb
or
dec
mov
test
fimuls
hlt
xchg
stos
fidivrs
xchg
aad
or
mov
mov
cltd
outsb
ret
adc
mov
sbb
and
js
scas
test
adc
push
arpl
or
jne
push
xchg
or
fdivrs
es
sbbl
jae
jl
cmp
sbb
xchg
pop
addr16
es
mov
mov
stos
scas
bound
inc
cmpsb
xlat
sub
inc
mov
fildl
pop
xchg
lret
push
fdivrp
pop
mov
in
xlat
xor
push
adc
in
inc
stos
xchg
adc
addr16
or
mov
adc
pusha
fildl
and
inc
lret
sahf
sub
jns
push
dec
xlat
outsb
mov
sbb
in
xchg
fcomi
adc
cmpsl
cld
mov
mov
adcb
fwait
mov
outsl
push
mov
cmc
fbld
or
xor
and
push
cmp
mov
arpl
mov
icebp
dec
fwait
inc
rcll
xchg
xrelease
cmp
dec
es
sub
adc
test
fadds
dec
das
jg
pop
adc
adc
cmp
and
pop
or
inc
dec
jmp
dec
ja
stos
repz
out
rorb
mov
sub
push
insb
int
and
xor
jecxz
pop
lock
insl
das
fstpt
jno
add
mov
mov
jae
repz
lahf
popf
lret
ret
divl
arpl
cmpsl
out
test
or
sbb
out
cltd
clc
and
sbb
hlt
mov
sbb
push
xchg
sbb
xor
ficoms
fucom
addr16
lahf
dec
rorb
lret
jp
jmp
and
loopne
inc
out
adc
rcl
pop
es
inc
aas
out
lds
sub
and
and
add
repz
aas
inc
pop
xlat
xchg
pop
xchg
int
sbbb
xor
stc
shr
mov
pop
mov
sub
xchg
xor
dec
mov
call
mov
roll
sub
mov
jno
jmp
imul
add
sub
popf
pcmpeqw
data16
cmp
dec
dec
fwait
ljmp
adc
add
jl
cs
add
fdiv
aad
pusha
cmc
sbb
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
sub
movsb
mov
js
subl
adc
insb
out
scas
pop
rorb
xor
int
xchg
cmp
dec
jns
lods
nop
ja
jmp
mov
int
in
lods
es
iret
push
scas
mov
jle
adc
cmp
jmp
pop
mov
arpl
fldt
out
and
mov
ja
jb
mov
or
jle
mov
or
lods
adc
daa
pop
dec
push
inc
pusha
jle
aas
ss
lahf
lcall
ret
jbe
ljmpw
push
not
pop
out
jmp
mov
iret
sbb
add
mov
out
mov
xchg
xor
in
aad
xchg
cwtl
movsb
pushl
dec
cmpsb
mov
lcall
mov
out
jle
popa
inc
adc
xor
test
loope
psubq
imul
ret
je
xchg
es
fstps
in
or
addr16
stc
sti
outsl
mov
pop
dec
jne
ret
dec
mov
push
fimull
pop
test
fld
stos
mov
lahf
lock
and
jmp
or
fisubrl
cmpsb
and
sbb
lods
lods
out
mov
sbb
jp
jmp
xorl
in
outsl
lods
sbb
in
pop
pop
cmp
mov
cld
xchg
push
dec
insl
dec
pop
aam
jge
xchg
push
jge
adc
xor
arpl
cmp
push
add
rcll
jle
pop
bound
cld
lods
adc
ljmp
dec
adc
mov
mov
enter
pop
scas
xchg
fwait
roll
xor
jl
adc
in
lcall
filds
and
mov
cmp
lret
mov
cmp
or
cmc
in
pop
mov
pusha
xchg
sbb
hlt
bound
out
std
dec
xchg
add
fsubr
cmc
pop
pop
pusha
lahf
out
or
sbb
jo
cld
imul
jo
aam
xor
rolb
add
sub
ret
pop
add
cmp
fstl
sar
or
movsl
dec
bound
out
mov
push
inc
loope
add
push
and
jae
xchg
pop
mov
ret
jg
and
mov
fsubl
aam
push
push
xor
jmp
std
push
inc
data16
mov
call
hlt
sub
pushf
insl
add
and
push
lods
lea
pop
test
pop
ja
cmc
and
insb
stos
in
jae
cmp
push
mov
lock
les
call
xchg
sbb
insl
mov
in
sbb
jns
push
arpl
lret
call
jbe
sahf
push
arpl
iret
mov
sti
into
test
dec
es
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
jo
or
sbb
adc
sbb
jnp
xor
mov
movb
pop
pop
xlat
sbb
movsb
or
cltd
hlt
dec
pop
inc
sub
outsl
push
inc
and
inc
cmc
pop
sub
std
jp
add
icebp
les
out
adc
lcall
sub
add
insb
inc
dec
and
lods
sbb
xor
sbb
in
adc
movsb
sti
stc
jae
push
es
notl
cmc
adc
ror
sub
inc
out
jne
xchg
fmul
mov
pop
mov
lea
out
mov
mov
test
sbb
xchg
pushf
pop
cmpsl
ret
leave
jl
les
std
cli
loopne
push
sub
cld
mov
fcomps
dec
fisttps
loop
loop
mov
int
xchg
jge
repz
ret
fisubrs
loopne
pop
push
mov
sbb
xchg
fwait
mulb
fwait
add
mov
in
call
mov
mov
aaa
jmp
out
mov
mov
inc
test
jp
jo
mov
sbb
fimuls
mov
aam
pop
xor
adc
and
popf
pop
mov
enter
insb
mov
addr16
sbb
and
popa
ljmp
add
pop
push
out
adc
rcl
jbe
and
add
push
cmpb
aas
pop
xchg
dec
and
shlb
xchg
loop
jb
cmp
mov
fldenv
out
mov
push
repz
sbb
inc
push
mov
jmp
loope
cli
mov
mov
mov
mov
or
pop
pop
stc
jp
cmpl
adc
pushl
bnd
sub
icebp
inc
mov
stc
pusha
fbstp
rcrl
lret
mov
adc
ja
xchg
filds
sbb
cmovge
xchg
movsl
testl
sub
addl
add
arpl
xchg
test
xchg
fisttps
mov
sub
ds
mov
scas
es
push
adc
icebp
xor
test
notl
imul
fcomps
sub
push
es
iret
xchg
lods
movsl
mov
into
xlat
daa
or
mov
rcrb
sub
xchg
or
rcll
inc
mov
sub
jg
and
push
xchg
push
adc
xchg
mov
dec
gs
and
add
push
iret
inc
mov
cmp
mov
xchg
push
dec
jno
sub
cmp
pop
clc
push
xchg
ret
dec
cmpsb
roll
sub
fldenv
insl
fdivl
andb
xchg
orl
cltd
push
fdivs
xorb
jb
xor
imul
sub
xor
fcoml
insb
cli
push
xor
jmp
sub
jmp
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
xor
repnz
add
sbb
adc
sbb
subl
loope
imul
lock
jg
sbb
loope
mov
pushf
out
and
mov
out
cli
outsl
sti
lods
push
cmc
or
sbb
and
dec
aad
test
mov
int
cmp
daa
adc
dec
jb
fistps
mov
jo
stos
mov
dec
outsb
inc
lods
or
repz
aas
push
rolb
inc
inc
lods
les
cmp
int
mov
imul
cmovo
push
sub
add
lret
cltd
fstl
ja
std
mov
and
push
xchg
mov
out
jg
test
and
out
fisttpl
fmull
jecxz
adc
push
cltd
test
int3
mov
dec
and
mov
dec
jle
ret
pop
outsl
fstpt
jb
push
mov
outsb
loopne
aad
cmp
loopne
xor
push
mov
push
mov
push
fidivrs
in
jnp
adc
mov
hlt
addl
or
xor
repnz
xor
jo
or
push
push
adc
lret
and
shl
sub
repz
mov
mov
sbb
stos
sub
sti
std
mov
rcrl
rcrb
fcomps
pop
pop
add
es
add
cmp
sbb
shrl
rorl
nop
jae
icebp
adc
mov
add
sub
xchg
stc
mov
push
push
std
int
std
jl
xchg
adc
int
adc
add
int
clc
mov
xor
scas
jbe
addl
sbb
xor
dec
push
outsb
and
sbb
or
decb
adc
sbb
push
jb
clc
in
in
filds
cli
scas
ret
nop
popf
sub
loope
mov
pop
jne
inc
jl
ja
mov
sbb
das
and
jmp
fdiv
in
addb
ficomps
inc
and
sarl
out
sbb
mov
int3
imul
pop
les
adc
testl
inc
xor
sub
rol
cmc
mov
xchg
add
clc
shll
push
jbe
push
sarl
stos
jno
add
cmp
in
adc
push
lea
cs
adc
stos
addr16
pop
lds
inc
mov
push
push
sti
or
orl
inc
cmp
mov
arpl
pop
xchg
out
xchg
in
or
pop
mov
mov
cmp
ja
mov
shrb
xor
push
smsw
cmpsb
mov
mov
xchg
jg
or
dec
adc
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
cmp
stos
inc
cld
sbb
and
sbb
push
sub
push
jge
lods
sbb
and
add
or
jmp
mov
and
xchg
inc
and
ficoml
rclb
inc
jle
lds
mulb
mov
call
pop
xor
shrb
lahf
sub
test
push
push
mov
push
out
inc
fcomp
ja
mov
insl
lahf
out
int3
in
scas
xor
cmpl
lods
sbb
push
scas
sbb
push
mov
sbb
pop
mov
pop
sbb
in
jle
mov
adc
pop
leave
out
call
test
fbstp
pop
clc
fcmovne
arpl
mov
dec
orl
inc
xchg
push
inc
mull
popa
divl
and
adc
push
insl
imul
sub
sahf
push
cwtl
and
loope
push
lds
jle
pop
cmp
negl
jb
ja
fs
orl
xchg
pop
inc
mov
xchg
sbb
lret
in
loope
sbb
push
and
scas
out
lahf
jp
cltd
fcmovu
lahf
test
shrl
aas
int3
imul
rorb
setle
mov
test
xor
mov
sar
gs
imul
dec
xchg
stc
push
mov
push
inc
repnz
movsb
and
ret
sub
sti
sub
cli
loop
fisubs
outsb
repnz
out
xor
data16
jns
test
cmp
xor
or
shl
inc
pushf
icebp
push
xchg
xchg
nop
dec
jnp
stos
mov
sub
mov
xchg
cmpsl
popf
gs
ss
mov
shl
xor
xchg
mov
adc
push
push
stc
sbb
movsb
add
fdivrs
out
dec
mov
dec
std
lcall
and
jbe
mov
cli
inc
jae
test
stos
jns
lea
pop
mulb
sbb
jnp
rorl
mov
mov
or
scas
mov
cmp
jns
adc
iret
jmp
jae
xchg
ds
rclb
pop
jge
dec
push
mov
push
cmp
fnstenv
ficompl
aaa
int
jnp
fwait
stos
jmp
mov
cmp
pop
push
jno
les
rclb
mov
shll
mov
jmp
push
enter
movsb
call
xor
adc
loope
jl
mov
ss
jecxz
jp
sarl
mov
sbbb
mov
in
mov
adc
lds
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
rcrb
and
sbb
mov
adc
cmpsb
iret
pop
loope
in
mov
sub
lret
mov
dec
or
xorl
in
in
mov
rclb
sahf
daa
mov
push
aas
jg
sbb
std
sub
add
push
or
lahf
pusha
xchg
scas
push
jmp
in
cltd
push
and
xor
out
mov
cmp
adc
test
inc
mov
pop
push
call
out
cmp
jp
dec
mov
bound
xbegin
jbe
sub
xor
pop
jmp
sbb
and
jo
mov
mov
sahf
dec
push
iret
sub
loope
dec
int3
iret
popa
mov
adc
push
stos
pop
int3
dec
xchg
mov
fs
ret
push
int3
cmp
xor
enter
scas
jg
or
sub
mov
lret
add
in
add
mov
pop
lcall
imull
and
fsub
or
adc
inc
aaa
lcall
inc
enter
les
orb
cmpsb
cmp
push
xchg
jnp
dec
aas
fiadds
aas
insl
icebp
mov
sti
xor
mov
orb
mov
xchg
bound
push
loop
add
mov
and
push
call
add
pop
pop
mov
jg
or
cltd
mov
in
rcrl
adc
cli
mov
and
xchg
ja
adc
mov
mov
push
cmc
inc
fildl
and
jp
and
jbe
cmp
clc
test
mov
and
andl
mov
add
inc
or
sbb
mov
jae
stos
icebp
shlb
dec
lds
repnz
push
jl
lds
les
lock
mov
mov
outsb
inc
fdivl
cmp
pushw
js
daa
cwtl
and
cmpsl
jne
lcall
inc
mov
pop
sub
inc
push
mov
scas
push
and
jno
fwait
mov
frstor
add
mov
pop
cmpsb
stos
dec
subl
pusha
mov
pop
loopne
xor
xchg
cs
sbb
pop
test
cli
add
cmp
subb
mov
inc
mov
rolb
mov
arpl
out
or
cs
dec
in
in
mov
in
xchg
out
lods
and
cmp
fwait
loopne
fs
xor
push
dec
sub
or
mov
in
inc
mov
jmp
scas
push
repz
cmp
fisubrl
push
push
or
es
andl
movsb
test
call
pop
popa
ljmp
lret
pop
mov
lods
icebp
mov
mov
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
loope
push
lock
and
sbb
stos
sub
mov
jns
scas
inc
mov
pop
clc
pop
je
jae
repnz
adc
jnp
in
or
pusha
add
cmp
xor
repz
stos
jmp
cmp
dec
outsl
aaa
mov
xor
das
fildl
xchg
mull
imul
ds
cs
or
push
push
jnp
andb
or
jae
add
ds
add
js
addb
addr16
shrl
mov
inc
jp
out
pop
rolb
icebp
mov
add
xor
push
loop
push
es
out
mov
mov
int3
inc
xor
adc
sub
lods
stc
and
push
xor
dec
es
cltd
adc
pop
sub
loop
inc
test
pusha
jge
out
inc
arpl
cmp
xchg
test
stos
xlat
mov
mov
mov
imull
out
add
add
dec
lods
push
pusha
lcall
dec
fs
ror
and
mov
pop
sbb
mov
pop
push
pop
xchg
inc
lahf
stos
sahf
gs
sub
data16
mov
xchg
cmp
shrl
jns
stos
or
js
sub
outsb
cmc
sarl
test
mov
sbb
pop
sbb
hlt
jmp
and
imul
imul
mov
in
xchg
lcall
in
fmulp
cs
xchg
sbb
pop
insb
xor
cmpsb
out
jne
xchg
mov
mov
jne
xor
fnstenv
clc
fistpl
in
sti
lcall
sub
push
inc
dec
pop
push
or
pop
test
xor
mov
popl
loope
hlt
mov
adc
adc
or
lea
movsb
popa
sub
add
bound
test
pop
scas
lods
shll
dec
mov
ret
push
mov
xchg
inc
loop
mov
inc
sbb
test
xchg
in
ljmp
lods
xchg
jp
mov
xor
dec
xchg
cmpsb
rorl
sahf
inc
adc
movsl
push
out
push
pop
xor
mov
fnstsw
mov
jns
pusha
addr16
jb
adc
pcmpeqb
xlat
jbe
fstpt
pop
cmpsb
jns
mov
xor
and
movsb
push
negb
fdivl
push
dec
dec
push
mov
imul
pop
loope
xchg
jecxz
adc
repnz
gs
cmpsl
in
int
xchg
fcoms
mov
mov
fsubl
mov
cmp
out
cwtl
in
mov
adc
ds
lret
popa
pushf
jmp
and
popf
add
ret
sub
mov
shrd
jmp
out
push
push
push
mov
ret
mov
pop
jmp
sbb
adc
sbb
mov
pop
sub
loope
cmp
ja
movsl
mov
xor
icebp
stc
inc
or
lods
pop
mov
ss
xor
pop
and
popa
xchg
mov
xor
adc
adc
fdivp
and
test
lret
sbb
into
cmp
adc
sub
sbb
testl
int
cld
cmp
cmp
xor
push
jmp
add
jge
or
xor
fldt
add
arpl
mov
pop
sub
adc
outsb
js
and
cltd
xchg
jae
jne
pop
jnp
and
mov
in
dec
fimull
xchg
stos
xchg
mov
add
mov
xor
dec
scas
add
clc
dec
fimull
sbb
xor
sbb
mov
xor
push
inc
mov
out
sub
mov
arpl
adc
mov
incb
lods
sbb
jbe
es
cmpsl
in
leave
inc
test
adc
and
es
mov
pop
aaa
arpl
push
xor
test
dec
cmp
cmp
jbe
or
mov
fwait
inc
sub
incb
int3
mov
sub
sub
lods
jae
enter
lret
jg
test
andl
push
cld
mov
ljmp
das
clc
xchg
icebp
fisubs
scas
xlat
push
xor
subl
lfs
inc
imul
mov
stos
stos
shrl
les
mov
or
dec
push
dec
cli
in
cld
add
xor
mulb
cmpsl
faddl
cli
sbb
pop
loop
loope
xchg
or
sub
sub
inc
mov
xor
jl
mov
cwtl
sbb
inc
jae
cmc
shll
negb
mov
or
pop
mov
and
fs
or
jae
mov
jno
sub
mov
jle
aad
hlt
sub
inc
jbe
andl
jns
mov
jmp
push
aad
or
int3
sbb
pop
jno
leave
cltd
dec
mov
testb
ret
mov
mov
in
roll
sbb
int
stos
adc
xlat
addr16
jp
les
lahf
pop
ret
aam
jle
call
and
mov
mov
popa
jno
int
call
cmp
sbb
mov
daa
mov
mov
or
loope
push
cltd
pop
orl
adc
jnp
mov
fistl
mov
adc
sbb
dec
add
ret
mov
fisttpl
mov
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cwtl
pop
jo
in
sbb
adc
sbb
mov
lock
mov
sti
hlt
or
and
and
sahf
inc
addl
adc
daa
mov
pop
mov
adc
and
push
fcmovu
fs
dec
jnp
cs
cli
jg
mov
dec
pxor
mov
dec
int3
test
jp
pop
push
sbb
xchg
cmp
addl
push
insl
decl
popf
cmp
imulb
sbb
and
xchg
or
xor
add
outsb
loopne
gs
in
movsl
fwait
sar
pop
or
push
sbb
dec
mov
pop
jmp
repz
daa
leave
movsb
adc
push
or
sbb
mov
bound
lcall
outsb
jle
mov
jno
jne
adc
or
loop
rcrb
adc
xchg
mov
aam
dec
addr16
xchg
mov
or
cmp
stos
adc
pusha
cmpsl
mov
fxch
jo
inc
sti
fldcw
stos
sbb
push
dec
into
mov
icebp
out
push
lds
test
repnz
scas
int3
push
cmp
aas
fdivr
in
clc
orps
sub
aad
push
mov
std
daa
neg
mov
aas
outsb
into
iret
xor
jl
lods
data16
jl
pusha
xchg
jb
stc
sti
outsl
mov
outsb
cltd
outsl
dec
pop
je
push
movsb
stos
cmp
fsubl
sbb
adc
gs
sbb
shlb
cmpsl
fildl
popl
cli
aas
push
in
adc
outsb
pop
sub
dec
lods
push
fildl
movsl
mov
cs
cmp
or
pop
xor
mov
or
mov
mov
inc
aaa
cmp
popf
iret
sbb
fsubrs
cmc
jmp
in
sbb
mov
ds
fscale
add
test
stos
cld
or
stos
sbb
sbb
add
mov
cmpsb
mov
stc
and
shlb
or
or
dec
xor
repz
movsl
dec
test
sub
jge
fucomp
cltd
aaa
adc
adc
inc
mov
aas
jbe
push
arpl
adc
repz
nop
sbb
push
push
ret
mov
xor
cmp
dec
cmp
je
xchg
sbb
pop
mov
movsb
jns
adc
rorl
cmp
aas
jp
adc
xchg
xor
bound
xchg
in
scas
jne
and
ss
xchg
inc
dec
jbe
mov
mov
pop
xchg
adc
mov
cmpsb
cmpl
cmp
sti
or
pop
sub
je
and
mov
cmp
test
dec
popf
es
inc
leave
test
or
mov
mov
jmp
nop
dec
nop
add
lock
pop
mov
sbb
and
sbb
mov
insl
cld
sub
in
dec
jle
xchg
and
jmp
pop
mov
sti
test
mov
lret
mov
in
cli
mov
fistl
rolb
loope
test
sub
int3
push
cmp
pop
int3
or
shll
cli
adc
data16
cld
xor
cmc
inc
sbb
ret
and
out
jnp
mov
xchg
ljmp
jmp
subb
inc
xchg
jmp
sahf
xchg
dec
xor
pop
mov
into
inc
into
fisubl
aad
jb
jp
dec
lret
lahf
cld
das
jmp
sub
dec
fwait
adc
sub
xchg
shlb
fsubs
mov
lahf
or
fucompp
repnz
fstps
add
and
pusha
movsl
pusha
fisttps
push
lret
adc
cmp
inc
push
dec
ret
dec
and
cltd
iret
cmpsb
rcrl
test
dec
xor
movsb
cltd
pop
pushf
cmp
je
mov
sbb
movsb
rol
mov
fwait
mov
stos
in
scas
sub
pop
stos
iret
fs
jbe
roll
sbb
int
sbb
and
xchg
and
fs
cmovns
faddl
dec
and
in
pop
xor
jge
adc
mov
mov
and
jle
pop
lahf
sub
mov
scas
addr16
xchg
xchg
insb
pop
std
jo
add
lret
stc
xchg
loop
sbb
add
mov
sahf
mov
or
lcall
cmc
shll
sbb
sub
cld
add
push
popf
dec
std
cmp
push
pop
cmpsb
ja
ljmp
mov
and
jle
jns
add
pop
xor
lds
inc
cli
sub
mov
nop
aaa
fprem
jp
ss
pop
adc
insl
imul
push
xor
cs
xchg
sbb
dec
add
je
mov
outsb
sbb
xchg
sbbl
lahf
push
sub
mov
loopne
stc
lret
sbb
shll
adc
cmc
xchg
dec
scas
mov
push
mov
nop
out
nop
cmp
incb
mov
shlb
insl
loop
mov
mov
fdivs
xchg
into
sbb
mov
fcomps
push
jmp
push
lcall
and
imul
xchg
hlt
lock
out
pop
cmp
out
ljmp
jl
addb
subl
adcb
jns
fld
lcall
lahf
and
dec
std
in
cmp
in
insl
push
lea
mov
mov
incb
add
arpl
icebp
jbe
stos
xor
mov
lods
jmp
inc
sbb
push
xchg
pop
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
int3
inc
fistpll
xchg
adc
adc
mov
dec
inc
fwait
and
into
push
xlat
das
mov
and
add
cmp
out
jl
sahf
fldt
adc
pop
jge
mov
inc
mov
shrl
outsb
test
jbe
jae
stos
lods
inc
cmpsb
push
jmp
ds
jns
les
xlat
jnp
arpl
pusha
enter
mov
cmp
cmpsl
add
imul
and
lcall
adc
mov
test
leave
xchg
into
cmp
mov
inc
and
sbb
lret
fdivrl
mov
xchg
mov
pop
fld
popa
mov
dec
and
bnd
cmpl
movsb
movsl
dec
sbbl
frstor
mov
out
test
sbb
lods
inc
pusha
enter
and
xor
nop
or
mov
outsb
test
dec
out
js
les
mov
mov
mov
cmpsl
jg
nop
outsl
fwait
bswap
stos
mov
and
cmpsl
add
dec
mov
jae,pn
push
sub
mov
lcall
jno
popf
mov
adc
ljmp
xchg
or
es
or
xchg
jns
push
sti
and
sbb
or
inc
ljmp
pop
sbb
fsubrp
sbb
out
xchg
bound
xchg
dec
jl
fbstp
cmp
sub
jae
sub
dec
add
daa
rclb
mov
pop
mov
mov
xchg
or
outsl
add
xbegin
push
xor
or
mov
in
xchg
xor
mov
pop
xlat
jmp
cmp
fnsave
pushw
dec
int
pop
mov
scas
pop
out
jmp
and
jo
sub
pop
mov
in
outsb
pop
pop
mov
orb
fisubl
jp
es
xor
mov
jmp
and
pop
push
cmp
xchg
stc
testl
adc
pop
pop
ret
lock
mov
xor
jbe
in
sbb
jo
lods
nop
xor
mov
or
adc
cld
add
adc
cmp
ss
and
mov
xor
xor
lods
pop
pop
add
sbb
out
pop
lret
pop
cmp
push
aaa
pop
pop
mov
jle
out
sahf
and
xor
pop
jo
insl
add
add
jle
push
and
data16
jnp
nop
aam
lahf
sub
ds
iret
ja
push
lahf
lret
mov
ss
add
or
lea
sbb
inc
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
or
rcrl
sbb
adc
sbb
add
enter
jecxz
mov
cmovb
addb
inc
dec
cmpb
fadd
scas
inc
dec
enter
mov
sbb
xchg
sar
xchg
mov
push
and
leave
mov
inc
out
ret
sbb
clc
cld
bound
andnps
scas
push
pop
int3
sbb
or
fstpl
hlt
jno
ret
push
enter
andl
mov
sub
lods
cmp
inc
mov
int3
add
int
lods
std
cmpsl
xchg
jo
sub
dec
xchg
dec
mov
int3
sub
inc
cmp
cmpsb
lea
and
orb
std
or
cwtl
push
shrb
test
cmpsl
or
jns
sbb
mov
lret
push
lds
sar
lret
test
rorl
adc
mov
sbb
imul
pop
inc
pop
addb
sub
and
pop
scas
pop
mov
shlb
jl
or
inc
dec
cwtl
mov
repz
lea
dec
imul
sub
inc
das
add
incl
daa
add
jmp
icebp
lds
rolb
mov
or
mov
in
push
mov
addr16
jmp
and
adc
js
and
pop
inc
mov
add
daa
xchg
xor
sub
cmp
dec
inc
dec
inc
popf
popl
xcrypt-ctr
cmpsl
fiadds
mov
or
insl
push
cmp
fcmove
or
movsb
enter
cmc
push
stos
cmp
movsl
push
adc
adc
jne
fldl
inc
push
mov
sar
pop
in
xor
imul
jae
jecxz
stos
xchg
ret
mov
test
loopne
movsb
stos
addr16
fimuls
xchg
movl
mov
scas
or
cmp
mov
test
mov
lods
ds
mov
dec
mov
out
xchg
sarl
fsubp
sub
dec
orl
dec
sarb
cwtl
inc
jecxz
push
mov
mov
jg
dec
test
mov
cs
fistpl
add
pushf
stos
mov
mov
xchg
cli
mov
and
xor
xchg
mull
mov
lock
in
sbb
cmpsb
cmc
mov
add
shll
sarb
cli
push
out
stos
int3
andl
mov
mov
jno
jl
test
mov
sub
cmp
mov
mov
sbb
add
pop
xor
out
mov
mov
or
stos
xor
or
or
aas
dec
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
mov
int
sbb
adc
sbb
cld
fbstp
mov
nop
insb
repnz
sub
or
adc
addl
int3
imul
lods
mov
dec
inc
push
and
mov
test
imul
inc
aam
push
movsb
push
ucomiss
push
popf
cli
jo
jbe
push
mov
mov
fiadds
or
int
adc
rclb
ss
ljmp
cmp
push
push
inc
push
lahf
in
repnz
mov
jbe
jp
subb
adc
push
daa
inc
mov
pushf
mov
int3
insl
inc
push
jmp
push
mov
jns
movsl
lods
std
imul
ret
fisttps
jg
xlat
or
imul
xor
jo
sbb
sti
leave
cmpsb
js
push
inc
or
lcall
mov
cld
pop
lds
and
push
mov
add
or
ds
xchg
adc
dec
cmp
xchg
es
mov
outsb
int
ljmp
xchg
add
lea
fsubrl
push
outsb
pop
mov
and
xchg
mov
xchg
cwtl
and
mov
push
cli
or
inc
and
and
sbb
loope
mov
sbb
idiv
mov
jns
push
imul
mov
test
pop
add
and
and
jne
jecxz
xchg
dec
popa
shl
sub
cs
cwtl
ficoms
or
and
xchg
add
adc
inc
xchg
aad
add
xor
rol
aaa
insb
push
adc
cld
sub
arpl
pop
jnp
je
pop
addr16
pop
adc
arpl
jl
inc
mov
mov
push
xchg
mov
ljmp
push
dec
je
fistpl
mov
adc
cmp
jp
inc
push
pop
ret
icebp
cmp
ds
sbb
and
add
scas
imul
mov
or
es
jns
in
rclb
adc
mov
adc
ja
cmp
push
xor
adc
adc
add
aaa
cmp
and
add
and
rcrb
jmp
jae
lock
cmp
cwtl
xchg
daa
dec
scas
jp
scas
sbb
push
jne
jle
jno
rclb
test
pop
dec
cld
dec
adc
inc
les
sti
mov
xchg
lds
push
pop
movsb
xchg
push
scas
out
inc
mov
push
mov
or
outsb
cs
imul
lock
inc
pop
jae
lret
mov
cs
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
sbb
sbb
and
sbb
dec
lret
cmpsb
jo
orb
jl
rcll
loopne
inc
pop
jg
pop
js
insl
das
cld
jno
pop
inc
lods
pusha
jmp
out
adc
mov
out
les
fnsave
std
outsl
or
push
mov
fisubs
lret
or
jmp
mov
pop
in
pop
enter
lahf
inc
mov
sub
dec
add
mov
mov
xchg
les
pushf
popa
inc
pop
popf
mov
and
jp
jbe
and
or
mov
pusha
mov
dec
and
cmpsl
lret
aas
jecxz
icebp
adc
sub
aaa
notb
mov
mov
movsl
ss
mov
mov
ds
jle
imul
jne
iret
sub
aad
adc
mov
add
xor
xor
adcl
rcr
in
inc
cmc
sub
push
int3
ds
movsl
cli
pop
lods
dec
mov
push
xchg
jnp
outsl
mov
into
jmp
sbb
loop
lcall
movsl
cmpsb
xchg
icebp
sub
cmpsl
nop
pop
and
fmuls
std
jae
mov
cmp
jb
cmc
or
and
xor
aad
cmp
inc
adcb
push
in
cltd
pop
fsubrp
xchg
addb
pop
loop
stos
aad
div
negl
or
inc
pop
and
jmp
out
sub
add
jp
xchg
mov
jnp
aaa
mov
pop
add
in
ljmp
fstpt
loopne
inc
inc
mov
mov
into
in
push
cmpsb
mov
outsl
pop
lea
mov
in
sti
mov
xchg
mov
test
and
or
sbb
push
scas
sti
push
ds
cld
data16
add
inc
push
addb
scas
loop
push
insl
shll
mov
push
push
enter
jmp
sub
rcl
sbb
inc
out
call
xor
and
push
jmp
and
push
push
fmulp
movsl
mov
test
add
push
add
pop
fldl
addr16
fildll
movsb
pop
out
int3
popa
add
in
push
pop
js
mov
test
or
inc
mov
cmp
aaa
sub
push
mov
call
mov
cmpl
adc
dec
lods
pop
push
jo
and
push
push
mov
lods
cli
cmp
xrelease
fstpl
sbb
ret
stc
sbb
sub
jmp
test
xchg
es
insb
sub
fnstcw
cmp
mov
xlat
and
xchg
int3
mov
mov
loopne
jo
cmp
sub
mov
mov
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
cld
xchg
sbb
and
sbb
rcl
fiadds
fucomp
ret
fmull
xor
mov
push
std
jp
cltd
pop
adc
jp
xchg
scas
xor
fs
test
lret
xlat
xchg
ja
mov
adc
mov
ret
pop
sub
fcompl
adc
scas
std
adc
fistpll
sti
lret
push
lea
clc
xlat
pushf
lret
cs
addb
into
sbb
leave
mov
fwait
cwtl
stos
in
or
mov
add
dec
xorb
mov
jo
dec
sub
inc
or
movb
push
stos
add
les
lret
sti
xchg
sub
xor
dec
xor
dec
mov
pushf
pop
pop
mov
push
int
and
push
loopne
cmpsb
jb
loop
xchg
test
adc
dec
movsb
push
push
call
push
arpl
jp,pn
mov
jmp
inc
and
xchg
int3
es
pop
or
mov
sarb
jb
xlat
inc
test
addb
and
cmp
aad
out
adc
or
push
pop
inc
jle
jl
adc
aas
aad
imul
and
or
aam
es
push
pop
sti
xlat
gs
jbe
push
cmp
jne
mov
mov
iret
push
xchg
insb
xchg
js
cltd
mov
adc
stos
or
mov
jne
push
iret
push
nop
push
shl
mov
inc
jb
inc
imul
push
cmpsl
pop
cmp
pop
inc
pop
loope
das
stos
mov
or
andl
ja
test
test
sbb
outsb
repnz
out
xlat
negl
les
fmull
dec
scas
pop
fsubrs
dec
shrl
jle
imul
shl
jo
jne
jae
jg
sub
dec
push
in
jbe
adc
cmp
insl
enter
xchg
push
sbb
test
mov
fnsave
rorb
push
jb
nopl
fsubl
cmpsb
mov
aaa
xor
orl
sub
sahf
mov
dec
loop
xor
mov
mov
pop
or
imul
enter
and
adcb
fidivrs
pop
adc
jge
add
int3
pop
mov
xor
cmp
outsb
je
fisttpll
mov
in
or
insl
pop
jno
pop
push
out
jbe
or
fisubs
movsl
xchg
ds
clc
mov
movsb
cli
outsb
xchg
arpl
pop
fstl
rcl
outsb
gs
insb
ss
dec
push
xor
mov
es
std
jp
jecxz
or
push
lods
push
inc
cmp
in
add
icebp
dec
fsubl
jo
loope
aad
or
arpl
int3
dec
cmp
out
repz
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
stos
cwtl
mov
sbb
lock
add
mov
in
ret
mov
lea
cwtl
push
insb
scas
and
jl
add
jge
loop
push
sti
sub
dec
ljmp
cmpsb
xor
sbb
sti
bound
xlat
fmull
mov
enter
or
and
bound
gs
bound
mov
mov
es
adc
out
or
movsb
lods
sub
aaa
xrelease
lahf
loop
dec
sub
arpl
sti
xor
bound
xor
xor
bound
mov
hlt
test
push
xchg
pop
stos
sbb
and
sub
aam
add
and
jbe
rorb
mov
sub
adc
sub
sub
mov
addr16
inc
push
call
and
test
jae
outsl
mov
push
add
inc
dec
fadds
or
out
sub
adc
je
and
lock
or
gs
inc
pop
pop
movsb
sub
fnstenv
jle
mov
jns
sbb
sub
cmp
shr
push
sub
jp
imul
gs
push
sub
clc
mov
aas
cmp
frstor
mov
cmp
pop
adc
cmp
repz
or
mov
cwtl
rolw
fs
dec
jmp
add
inc
out
adc
cmpsb
jo
push
movsl
aaa
push
scas
scas
lock
in
xchg
mov
and
xchg
sbb
xchg
test
dec
in
add
sbb
xchg
push
mov
inc
ret
or
cmp
inc
filds
sub
mov
scas
jns
add
cmpsl
xor
ret
aas
push
mov
cmp
dec
pop
dec
jp
xor
imul
mov
xchg
add
movl
sbb
or
nop
xchg
mov
idivl
stos
shlb
pop
fcmovu
mov
mov
cmpsl
sbb
mov
sbb
test
jno
push
xchg
lods
push
adc
and
shlb
shrl
sbb
stos
jb
js
movsl
cmpsb
xchg
xlat
bound
mov
or
adcl
cmp
cmp
cltd
push
dec
jnp
inc
mov
jbe
lods
test
dec
out
into
loope
mov
mov
mov
mov
add
inc
lret
test
lods
sbb
sbb
sub
cmp
pop
call
xor
mov
xchg
dec
mov
jo
mov
xchg
jno
nop
orb
arpl
jmp
adc
cmpsb
and
sub
push
or
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
les
mov
and
sbb
scas
js
pop
mov
sub
test
add
pop
lods
nop
dec
sbb
pop
push
pop
dec
pop
shrl
sarl
shrl
cmp
nop
and
push
jmp
xor
add
shrb
test
mov
adc
pusha
stc
lea
popf
mov
xchg
inc
scas
adc
dec
and
jg
mov
mov
mov
or
pop
cmp
mov
jecxz
aam
xor
jp
in
add
dec
mov
mov
sbb
push
test
push
shlb
pop
syscall
sbb
add
icebp
jge
or
bound
push
pop
pop
and
dec
sub
mov
fwait
imul
out
fildll
jmp
dec
pop
adc
jge
sub
mov
cmp
sbb
and
mov
loope
loop
sbbb
push
setb
out
pop
es
or
fwait
mov
cmp
jne
mov
rcrl
test
daa
adc
cmpsb
mov
daa
data16
test
int
and
push
adc
lcall
xor
lock
cmp
lahf
pop
xchg
sub
cmp
lret
cmp
cmp
and
daa
pop
popf
out
jmp
sub
jge
xchg
adc
pop
xor
mov
jnp
mov
scas
inc
mov
fs
js
jmp
cld
jne
fisubrl
cmpsb
mov
or
sub
dec
test
xlat
stos
jo
je
or
adc
cmpsb
xchg
cmp
outsb
fdivs
inc
cltd
fsubl
test
xchg
jb
jge
dec
icebp
gs
mov
mov
int
pop
inc
add
push
add
or
inc
out
rorb
sbb
shr
jbe
push
scas
cmpsl
aas
cmp
jo
jg
dec
cmpsl
sbb
repz
enter
xchg
push
cmp
arpl
inc
cmc
test
out
std
inc
aas
leave
insl
jl
out
adc
jecxz
pop
lock
inc
test
test
incb
pop
xchg
imulb
mov
in
jecxz
adcb
in
addr16
cmpl
shlb
outsb
das
das
aam
popf
aad
in
call
or
mov
scas
int3
sbb
sbb
inc
sbbb
mov
fcompl
xor
inc
mov
sbb
divl
jno,pt
cmp
pop
dec
sti
sbb
push
mov
push
or
fcmovnu
inc
cld
inc
pop
test
and
rcrb
adc
mov
push
add
test
push
ficompl
popa
hlt
fisttps
cmp
fadd
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
scas
pop
das
pop
mov
push
scas
and
roll
or
aas
xchg
sub
jno
negl
mov
hlt
push
daa
xchg
clc
mov
ret
inc
rorb
jg
in
dec
xchg
lods
sub
rcll
xchg
jecxz
jbe
arpl
insb
dec
pop
mov
cmp
dec
pop
scas
add
or
cmpsl
mov
jnp
or
mov
cmp
std
repz
push
in
sbb
push
pop
stos
jbe
icebp
xchg
rcll
js
rclb
or
icebp
jl
jmp
sbb
fistl
ja
mov
sbb
push
aaa
mov
xchg
mov
jb
imul
push
mov
repz
jecxz
dec
jl
test
dec
xchg
cmpsl
xchg
lret
mov
mov
dec
cmp
imul
and
stos
repnz
imul
jbe
push
jns
test
daa
orb
adc
int
sbb
ds
sub
push
js
nop/reserved
jae
pop
aad
inc
xor
adc
sarb
sbb
lock
dec
stos
lcall
mov
sub
and
ljmp
les
or
mov
popa
dec
mov
fiaddl
sub
sbb
fcomip
stos
xchg
ret
jmp
push
jo
dec
scas
lock
push
cld
add
push
inc
les
sub
push
sbb
push
pop
das
addr16
inc
in
repnz
std
out
in
push
imulb
outsb
loope
stos
push
mov
and
js
in
std
dec
into
sbb
cmp
and
pop
xor
inc
sub
mov
lahf
insl
jp
jbe
adc
inc
push
inc
push
fidivl
push
scas
pop
daa
mov
inc
jp
cmc
jbe
mov
or
mov
iret
std
pop
sti
aad
ror
mov
jnp
std
sub
xchg
cmc
xchg
or
mov
addl
rcrb
jbe
jbe
mov
push
dec
mov
cmpsl
mov
pop
and
sarl
xor
mov
movsb
mov
fidivrl
pop
push
and
jno
mov
sub
sbb
mov
push
ret
mov
add
jg
mov
adc
pop
mov
mov
inc
leave
mov
enter
hlt
cmp
imul
pop
jecxz
out
or
dec
sub
subb
mov
imul
popa
jb
outsl
mov
orb
ljmp
xchg
sbb
int
mov
jnp
pop
imul
bound
jae
sub
push
inc
popf
or
addr16
cmc
jo
fdivrl
lods
lods
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
pop
push
stos
mov
sbb
and
sbb
dec
push
sub
fiadds
pop
js
cwtl
xchg
mov
pop
add
xor
xchg
mull
out
dec
dec
or
mov
int
sbb
stos
arpl
jle
xchg
jp
mov
add
nop
sub
inc
loopne
sbb
jnp
icebp
push
pop
inc
andl
jecxz
popa
mov
cs
test
mov
push
jg
sahf
cwtl
jp
aas
pop
sbb
std
push
mov
mov
cmc
sub
daa
mov
lea
push
test
and
jp
sub
test
rcr
jl
dec
add
leave
inc
in
or
fldenv
cli
and
mov
aas
sbb
add
lea
jmp
ds
sbb
test
push
stos
call
iret
dec
sub
rcll
out
popa
into
sarb
mov
sub
jae
and
jns
insl
jle
push
or
outsl
mov
mov
cmp
mov
cmp
fs
daa
inc
xchg
in
add
test
je
mov
or
shrb
jecxz
xor
mov
je
je
jnp
xchg
or
jne
je
sub
cwtl
in
mov
add
cmpsb
into
mov
repz
push
lods
es
test
xchg
add
ja
jecxz
imul
push
and
loopne
or
pop
xchg
mov
dec
daa
hlt
pushl
popf
iret
dec
mov
pop
int
pusha
leave
inc
and
fimuls
lods
lock
jae
and
inc
faddl
pop
in
sbb
jmp
and
adc
cmp
into
jg
addl
and
sbb
push
popf
in
xor
addr16
inc
pop
push
sub
inc
pop
sbb
inc
jno
in
mov
mov
jg
fstps
out
jnp
repz
dec
sub
xchg
jnp
sub
and
stos
cs
scas
test
and
out
cmp
clc
push
inc
push
repz
les
xor
jne
gs
push
push
push
pop
ja
push
jo
xor
fcmove
and
xchg
fisubrs
out
sbb
imull
inc
clc
mov
cmpsl
sub
sub
xchg
cmp
insb
in
sub
inc
filds
xchg
in
mov
div
daa
mov
data16
ret
imul
sub
mov
dec
xchg
js
xchg
and
mov
jb
jno
push
add
or
out
adc
out
xor
pop
pop
push
mov
sbb
mov
pop
xchg
das
sahf
add
ds
inc
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
or
mov
sbb
mov
out
movsb
enter
stos
cmp
stos
adc
push
add
sbbb
xchg
pop
pop
int3
adc
fst
psubsw
add
cmp
fistpl
add
nop
or
xor
and
or
loop
ja
jbe
in
movsb
inc
sbb
xchg
cltd
sub
push
pop
dec
mov
add
lods
pop
sub
ss
xchg
sbb
popf
ret
pop
mov
cmp
std
cmp
sbb
movsb
cmp
jne
mov
or
jg
mov
pop
and
ds
lock
ss
add
lahf
int3
call
cwtl
jg
jne
add
sbb
adc
pop
cmp
push
push
out
out
and
lea
sub
in
push
jmp
or
jecxz
dec
push
push
mov
movhlps
or
lahf
int3
lahf
aaa
rolb
ljmp
ret
cmc
sub
cld
ljmp
lret
cmp
inc
push
daa
and
loop
roll
pop
jbe
dec
out
dec
inc
in
cmp
xor
test
xor
pop
push
js
mov
pushl
cmp
enter
add
and
outsl
fistps
adc
cmp
mov
add
gs
stc
ljmp
mov
fsubrp
jno
movsl
repnz
pop
jp
mov
sub
mov
sbb
jb
rcrb
notl
push
jge
push
dec
jbe
aad
sub
add
add
push
adc
pop
cs
cltd
push
es
dec
jl
push
jbe
xor
into
enter
mov
adc
ljmp
push
jp
mov
dec
pop
lods
jnp
adc
orl
push
xlat
and
lcall
push
shll
mov
pop
pop
jecxz
mov
xchg
push
adc
dec
cmp
or
push
dec
pop
decl
push
daa
push
rorb
push
mov
inc
je
stc
dec
cmp
and
pop
xchg
sub
imul
iret
fwait
stos
call
lods
movsb
or
and
mov
push
mov
xlat
inc
mov
mov
std
and
xchg
popw
in
jb
xchg
iret
jo
clc
inc
xchg
or
xchg
pop
inc
aas
xor
fstps
jns
sti
adc
pop
cmc
rolb
xchg
ds
sub
test
add
or
xchg
fstpt
sarb
insl
pop
cmp
cltd
and
xchg
cmp
jne
xor
daa
std
add
xor
cmpsl
sbb
mov
jge
clc
jns
sub
adc
add
ret
fisubs
dec
stc
enter
push
lahf
or
nop
mov
sti
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
push
jae
mov
popf
sbb
and
sbb
je
xor
loop
jo
jae
add
pop
loopne
dec
cmp
jle
jl
pushf
or
sti
sub
mov
mov
inc
jns
repz
inc
sahf
in
and
daa
pop
cltd
xchg
cmc
cltd
mov
or
repnz
repz
xor
mov
lret
cmp
mov
cmpsb
rcrb
mov
pushf
mov
push
rorb
mov
cli
pop
out
ror
loop
mov
lahf
aam
dec
int
sahf
cmp
inc
or
cs
mov
imul
call
adc
lret
mov
lock
cs
popa
je
or
lods
cs
arpl
test
arpl
pop
jge
shrl
jmp
int
mov
mov
std
subl
out
leave
jne
fnstsw
dec
imul
cld
fcoms
or
or
enter
scas
push
fmull
icebp
push
xchg
add
scas
inc
adc
fsubrl
sub
clc
scas
add
movsb
pop
mulb
mov
cmp
or
fldenv
sar
adcl
add
fidivrl
adc
and
gs
out
pusha
cs
xlat
js
shll
push
sub
cmp
jecxz
jmp
ret
gs
xchg
xor
dec
cmpsb
int
jp
in
pop
mov
loope
xor
or
adc
loop
sbb
xlat
faddl
mov
xchg
dec
ss
int
mov
daa
inc
out
pop
pop
scas
mov
fdivl
addr16
mov
bound
jmp
pop
or
popf
sti
inc
aas
cmp
ds
jb
xchg
lods
imul
aaa
out
cltd
mov
xor
mov
push
stos
fistl
scas
xchg
outsl
adc
std
sub
or
mov
dec
or
test
inc
jnp
pushl
cmpsl
ja
fidivrl
jl
jno
mov
sarb
outsl
xlat
jle
mov
int3
mov
aas
cmpsb
pop
movl
lds
fsub
repz
push
lds
jae
insb
push
push
scas
cmp
jp
mov
jae
mov
or
pop
stos
mov
and
popf
sub
cli
cwtl
int3
fdivs
int
pop
lods
adc
das
sbb
cmp
cmp
int3
add
cli
mov
pusha
cmovb
int3
xchg
jge
push
xor
lret
fsts
pop
mov
hlt
pop
push
inc
xor
loope
neg
mov
pop
and
inc
inc
cld
test
mov
push
out
leave
add
adc
fcoml
ret
pop
or
ret
xchg
push
jo
push
outsb
ret
mov
ljmp
inc
mov
loope
int3
and
imul
test
xor
aaa
movl
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jl
xchg
sbb
and
sbb
or
mov
xchg
fimuls
daa
je
lcall
sahf
mov
cmpsl
xchg
int
inc
mov
sub
sbb
outsb
hlt
pop
sub
decb
rolb
push
jne
sbb
ficompl
sbb
insb
cmp
add
xor
ja
sub
add
xor
push
push
cltd
jo
xchg
push
mov
or
loopne
and
aaa
cmp
aas
xchg
cmp
std
sahf
das
sub
mov
pop
sarb
inc
or
jae
push
loopne
divb
inc
push
sbb
mov
and
stc
adc
dec
or
loop
cmc
call
aad
or
loop
in
jae
hlt
pop
rcr
pop
mov
in
and
int
xor
addb
cmp
sti
pop
mov
sub
inc
and
push
add
or
cmpsl
or
into
mov
mov
fstl
pop
scas
cmp
cmpsb
inc
xor
iret
cmp
sbb
cmp
bound
mov
mov
adc
ret
jo
jl
xchg
add
mov
ds
fdivs
dec
aaa
jne
dec
inc
and
dec
jns
ss
add
xchg
push
mov
xor
xor
sub
scas
call
mov
add
xchg
pusha
pop
ficoml
and
mov
inc
insb
xchg
jl
sub
pusha
mov
mov
xor
xchg
movsl
and
pusha
cmp
jl
sbb
cmpsl
fcompl
mov
sahf
xchg
jecxz
sub
addb
jno
dec
xor
mov
rorb
test
in
xchg
test
sbb
inc
je
push
arpl
rol
sbb
sbb
mov
fldt
addl
lods
or
outsb
cmpsb
insl
mov
sub
lcall
sbb
xchg
test
xor
sbb
mov
loopne,pt
xchg
in
push
loope
add
loop
mov
push
pop
flds
into
jge
lahf
sarl
lods
shlb
je
xor
popf
cmp
test
add
std
nop
outsb
into
add
inc
aaa
loop
into
pop
jb
cmpsl
js
out
adc
popa
pushf
xchg
dec
dec
inc
adc
hlt
inc
sbb
jge
in
into
push
aaa
aam
mov
es
mov
mov
popf
push
mov
int3
mov
xchg
shrb
jbe
lds
in
xchg
adc
xchg
push
adc
je
dec
movl
aas
mov
rcrl
xchg
and
loop
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
or
sbb
and
sbb
xchg
jnp
ret
lods
icebp
xor
cmc
addr16
lds
or
es
jne
clc
jmp
lock
out
gs
decl
and
push
std
xor
loop
popf
notb
or
mov
and
hlt
push
add
sbb
int3
pushf
insb
mov
xchg
mov
mov
js
dec
jg
xlat
sub
lcall
outsb
pop
inc
dec
movsb
cmp
push
insl
nop
ficoms
jle
push
movb
loope
pop
push
add
das
jb
je
addr16
lods
jo
into
sub
xchg
mov
dec
stos
nop
sub
or
mov
pop
cwtl
je
mov
mov
inc
out
sbb
dec
cmp
iret
xchg
test
test
adc
outsl
mull
rolb
dec
push
inc
aad
nop
dec
jb
adc
fcomip
int
lods
cmp
aam
andb
xchg
and
movsb
inc
outsb
add
push
add
xchg
push
loop
cmpl
adc
sub
xor
sbb
or
je
pop
xlat
fistps
jl
xchg
pop
cmpsl
divl
into
ret
inc
enter
ret
enter
inc
mov
push
test
adc
jae
call
gs
rorb
test
sub
xor
outsl
mov
nop
jmp
xchg
fldcw
xorb
call
scas
xchg
dec
dec
xor
dec
sbb
dec
icebp
push
inc
adc
cmp
aam
xor
aad
out
inc
or
jae
sbb
mov
xchg
sub
xchg
adc
outsb
and
add
out
cmp
xchg
push
jg
movsl
into
mov
dec
aaa
inc
add
into
inc
mov
jbe
aas
push
xchg
mov
pop
mov
inc
ret
fs
in
enter
dec
and
push
aaa
jnp
push
loope
jno
mov
inc
mov
sarb
add
mov
out
test
inc
sub
mov
mov
xchg
icebp
iret
jnp
cwtl
cmp
and
push
xlat
jae
and
jge
es
xor
sub
cmpsl
dec
rcll
pop
push
inc
cli
scas
xor
add
or
adc
inc
movsb
jb
cmp
ret
xchg
jmp
pop
inc
xchg
ret
cmp
stos
and
std
cmp
push
imul
push
movsb
and
rep
fistpl
out
rorl
vpmulhuw
xchg
push
pop
lahf
mov
enter
dec
mov
mov
sub
jmp
daa
add
orl
les
fcompl
notb
insb
pop
and
std
adc
pusha
sub
dec
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
cltd
xlat
scas
xor
sbb
fisubs
sbb
repz
fsts
sti
cmp
out
mov
mov
push
stos
test
inc
filds
adc
dec
add
lret
pushf
ss
jno
pop
or
std
xchg
out
movsb
cmp
lds
cmp
add
xchg
or
mov
ljmp
lret
pop
and
repz
and
sarl
sub
test
pop
sahf
push
in
mov
repnz
ret
imul
push
mov
cld
jbe
xlat
add
push
add
popa
in
inc
inc
mov
lods
pavgw
mov
xchg
pop
inc
enter
sub
push
jl
fdivs
adc
mov
mov
subb
jp
add
stos
adc
mov
mov
sub
mov
les
loop
shlb
sub
push
sub
daa
sbbb
push
ljmp
dec
push
pop
sub
pop
std
mov
inc
and
lock
sbb
nop
xor
add
add
sarb
and
adc
xlat
movsl
sub
icebp
lret
jg
sbb
fs
pop
sbb
mov
jae
xchg
inc
pop
popf
addr16
push
add
test
sub
push
imul
dec
jno
mov
xchg
fmuls
push
stos
push
dec
xor
loopne
je
adc
inc
add
lcall
sub
mov
sub
jg
cmp
cmc
xchg
push
int
test
adc
jno
imul
push
inc
imul
push
imul
shll
fldl
popf
add
mov
cmp
sub
test
and
add
xor
mov
and
cli
push
inc
stc
adc
popf
pop
jg
mov
jp
jno
mov
outsl
stos
inc
xlat
and
cli
jb
lcall
jl
pop
cld
shll
fiaddl
xchg
cmpsl
cwtl
out
arpl
jmp
mov
lods
ret
jb
dec
lods
negb
test
icebp
lret
sbb
in
fcoms
inc
dec
adc
imul
pop
pop
ffreep
ret
addr16
dec
and
jmp
sbb
or
aaa
cmpsl
sbb
lcall
aad
sahf
xchg
pop
js
daa
pop
cwtl
xor
sub
mov
add
cwtl
cmpsl
ss
inc
inc
add
int3
lcall
repnz
and
xchg
pop
mov
xchg
dec
lret
xor
aas
ljmp
inc
mov
addr16
sahf
or
mov
ret
in
xchg
pop
jmp
lea
mov
xchg
push
dec
dec
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
rorb
sbb
adc
sbb
push
and
push
jbe
ret
mov
test
outsl
inc
pusha
add
rcl
xchg
cwtl
stc
call
add
xor
sub
lcall
adc
popf
xor
jge
fwait
mov
cmp
fldenv
out
sub
xlat
fildll
nop
or
js
dec
orl
fisttps
mov
mov
mov
insb
mov
cli
call
shlb
mov
ret
std
ret
insl
aam
cwtl
xor
dec
test
xchg
lds
test
ficoml
mov
repnz
and
std
fld
push
inc
or
in
sbb
mov
popf
xor
pop
push
pop
mov
sub
inc
pop
xchg
push
cmp
sub
push
cmovb
loopne
mov
insb
dec
dec
movsl
repz
das
mov
push
aam
push
js
pop
shlb
sub
add
sub
ss
mov
sub
mov
mov
inc
or
sub
shl
sbb
pushf
add
jbe
add
pop
push
dec
hlt
mov
movsb
scas
add
push
or
inc
sub
mov
xchg
mov
adc
jmp
adc
pop
or
in
aas
fdivs
es
fwait
adc
out
sub
jle
inc
mov
sub
in
mov
call
fsubl
pop
out
out
or
aad
outsb
in
sub
dec
ljmp
fstps
adcb
and
rorb
inc
in
xchg
xchg
bound
popf
repnz
aam
mov
cmc
xchg
test
xor
js
jmp
sahf
fidivl
inc
cli
ja
sub
pop
stc
adc
dec
dec
cmp
in
sbb
pop
in
pusha
cmp
jne
mov
insb
pop
decb
imul
mov
jno
imul
mov
es
fimull
sbb
jne
push
int
pop
aam
push
es
mov
pop
xchg
mov
jb
adc
movsb
iret
iret
push
popa
movsb
vpcomud
cli
lds
clc
aaa
sbbb
cmp
adcl
rclb
push
push
and
cmp
dec
inc
lock
xchg
mov
push
outsb
xchg
sbb
fldl
cmp
sbb
std
clc
test
movsb
test
xor
xor
test
jge
pop
cld
or
addb
ds
mov
sbb
jae
mov
mov
xor
arpl
cmpsl
scas
inc
sub
mov
mov
call
or
mov
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jle
jg
sbb
adc
sbb
push
test
fisubs
movsb
aaa
out
outsb
push
adc
repz
popfw
dec
adc
add
sarl
test
shrb
jo
movsl
outsl
out
mov
inc
sub
xchg
cmp
gs
mov
pop
dec
je
in
lds
inc
testl
jnp
leave
jle
aad
cmove
fs
inc
cwtl
cmp
add
lahf
jae
inc
pop
movb
xchg
scas
jle
mov
jne
sub
jbe
aam
or
jno
jp
ljmp
cmp
cs
stos
mov
lret
sbb
mov
mov
jge
or
imul
incl
leave
adc
push
adc
mov
aas
das
aas
dec
scas
mov
xor
pushf
cwtl
sub
jnp
lret
rorl
das
add
sub
mov
or
cltd
push
mov
mov
jge
pop
cmp
or
push
lock
mov
jnp
cwtl
mov
inc
stc
dec
es
pop
push
mov
mov
cwtl
in
insb
xor
rorl
insb
leave
mov
movb
add
mov
fcmovnb
jne
mov
add
aad
push
sub
xchg
mov
js
mov
mov
xor
je
jmp
pop
add
jo
xor
shr
and
xchg
mov
hlt
popa
xor
rorl
imull
mov
fdivr
cmp
mov
and
subb
lcall
addb
xchg
cmp
aaa
ret
and
and
mov
lds
movsb
sub
mov
cmp
xor
push
fsub
xlat
daa
xor
repnz
std
aad
aad
test
push
adcl
or
and
adc
lods
cmp
dec
xor
jbe
ja
stos
cmp
shlb
movsb
mov
clc
ror
or
lcall
fisubrl
inc
and
stos
loop
dec
loopne
mov
push
jae
lea
pop
cli
iret
jo
bound
push
sub
mov
loope
jno
add
mov
in
dec
sahf
sbb
aam
cld
cmpsb
push
int
pop
roll
das
addr16
and
outsb
pop
fistpl
and
pop
xchg
loope,pn
fs
adc
and
scas
inc
jbe
push
jo
in
in
repz
lods
std
lret
out
add
pop
cwtl
sbb
xchg
std
mov
ficomps
cli
push
xorb
ret
mov
call
aam
dec
pop
mov
out
pop
mov
lret
mov
mov
mov
in
lcall
xchg
xor
sub
adc
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
xchg
das
mov
and
sbb
call
sti
lret
jg
test
int
cmp
xor
stos
cwtl
adc
mov
clc
mov
add
addr16
loope
sahf
mov
in
in
adc
sbb
mov
sti
adc
pop
arpl
shll
rcrb
mov
adc
out
push
xchg
outsl
mov
sbb
fbstp
cli
sub
fsubr
incb
xor
sub
sub
sbb
or
es
push
pop
and
fdivp
pop
adc
in
mov
or
lahf
sub
inc
xor
mov
lods
sub
rolb
sub
les
dec
in
pop
sbb
dec
movsb
pop
cltd
pop
addr16
xchg
repnz
mov
cmpb
stc
es
mov
shll
test
loopne
dec
shlb
pop
mov
je
pop
clc
sbb
push
mov
test
mov
iret
pop
das
into
mov
repz
xchg
popf
mov
inc
and
jmp
lret
cmc
inc
pop
lahf
lcall
mov
jo
lret
ljmp
mov
xor
adc
or
ljmp
repnz
ljmp
addr16
push
dec
jle
adc
popf
push
jne
mov
lock
leave
movsb
test
push
inc
xorl
xor
xchg
dec
leave
cltd
mov
cltd
aaa
ss
jno
out
js
mov
mov
arpl
mov
bound
cld
mov
xor
pop
loop
xor
fs
xor
push
fwait
jmp
xor
mov
stos
inc
rol
and
dec
and
ljmp
mov
jne
cld
xor
fldt
fadd
and
mov
andl
jb
pop
cmpsb
cmp
ret
fdivr
negb
jb
sub
jns,pt
out
inc
xchg
es
scas
push
sahf
pop
leave
sbb
sub
lds
test
fsubl
dec
pop
jp
xlat
and
push
adc
mov
outsb
repz
mov
pop
mov
aas
test
xchg
ret
imul
into
cmc
cmp
lret
push
dec
sub
mov
fwait
lahf
out
bswap
mov
cmpsb
push
pop
pop
lret
mov
jo
dec
push
mov
jnp
xor
cmp
add
xor
push
add
adc
push
andb
mov
adc
jg
pop
mov
outsl
jle
insb
push
repnz
mov
pop
xchg
or
repnz
pop
cmp
lea
xor
or
dec
jp
rorl
nop
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
pop
add
mov
enter
data16
dec
fmull
sbb
les
call
adc
jnp
jnp
push
xchg
sbb
imul
cmp
sbb
inc
mov
daa
ss
lods
negl
in
mov
mulb
outsb
call
cwtl
int3
sahf
xor
loop
insb
frstor
out
or
mov
mov
aaa
sub
xlat
mov
cmp
lahf
fsubs
imul
cmp
lret
mov
rol
xor
lods
mov
call
fwait
add
in
adc
sbb
xor
dec
adc
imul
sti
int
nop
ja
lret
xchg
mov
pop
dec
jmp
cmp
out
hlt
fucomip
ret
sub
jbe
popa
mov
inc
push
xchg
xor
call
add
push
movsl
pop
jno
cmp
ljmp
fadd
pop
fildl
add
enter
or
out
cmp
xchg
aad
mov
sub
pop
gs
cmpsl
xor
repnz
sbb
mov
xlat
mov
out
adc
lahf
lods
mov
repz
and
pop
cs
dec
daa
ja
mov
call
inc
jge
xchg
inc
mov
push
jnp
test
pop
or
jmp
jb
aaa
mov
inc
add
jecxz
cmp
pop
pop
sub
mov
sub
aad
push
jmp
mov
cmpsb
or
push
cli
jl
je
out
rorl
xchg
add
sbb
ret
jg
ss
hlt
iret
sbb
add
roll
fs
fwait
call
cmp
mul
cmp
cmp
inc
aas
fwait
in
sahf
jno
or
aad
fistps
bound
mov
mov
jl
mov
cmp
call
mov
sahf
out
cmp
xor
in
mov
aaa
mov
in
shrd
aaa
mov
repnz
ss
movsl
adc
mov
mov
add
mov
add
push
outsb
xchg
fdivp
jns
add
test
out
icebp
or
xchg
xor
fisubl
aam
cmp
call
in
mov
cmp
fsubrl
dec
sub
jno
sub
movsb
inc
ffreep
fiaddl
popa
aad
sub
loope
xor
sub
test
add
inc
loope
jmp
lds
adc
add
jae
dec
shlb
popf
leave
push
rorl
and
ja
lahf
pop
rcll
pop
leave
inc
pop
inc
mov
cwtl
mov
insl
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
or
stos
add
sbb
adc
sbb
or
cmp
add
pop
xor
sbb
adc
jnp
cltd
mov
add
addb
cmp
imul
pusha
dec
jle
aad
data16
daa
xorl
pop
mov
lret
ja
pop
movsl
xlat
out
insb
or
lcall
popf
mov
idivl
popw
and
iret
lock
nop
sub
pop
arpl
pop
jg
mov
adc
mov
aaa
push
fidivrs
int3
insl
and
or
dec
lret
fadds
cmp
xlat
jne
mov
pop
pop
loopne
add
sbb
inc
jl
and
dec
leave
ffree
std
pop
fcoms
jp
cmpsl
push
sub
sarl
jp
cli
leave
arpl
adc
loop
mov
adc
out
push
jmp
xor
enter
jg
dec
mov
jg
adc
inc
adcl
lods
mov
into
jecxz
jb
dec
xchg
enter
gs
and
jno
or
sbb
push
inc
push
mov
mov
bound
or
ret
test
loope
or
push
test
push
dec
repz
imul
mov
push
and
push
sahf
pop
xchg
mov
movsb
inc
aam
cmp
cmp
andb
jnp
mov
pop
pop
xchg
pushl
in
xor
cwtl
push
push
or
into
push
mov
lds
iret
movsl
cmpsl
push
mov
stc
pop
push
mov
fsubp
or
dec
mov
fcomps
repnz
jae
inc
in
leave
repz
xlat
xchg
mov
xchg
loop
js
in
aad
xchg
dec
inc
arpl
push
dec
adc
lods
mov
dec
fcoms
sti
iret
xlat
loopne
aas
xchg
push
mov
fs
imul
mov
mov
mov
xchg
hlt
push
cmp
negl
push
xchg
addb
xchg
movsb
sbb
sbb
ficompl
xchg
push
jle
sbb
push
test
jl
fldcw
ljmp
jmp
cs
inc
mov
dec
push
sarb
mov
inc
fnstsw
sub
inc
es
lock
add
test
xlat
out
leave
jae
subl
cwtl
jns
fs
adc
inc
mov
pop
stos
push
div
in
loope
sub
or
xchg
dec
aas
lock
or
sahf
mov
add
xchg
or
mov
mov
iret
add
lds
lcall
mov
push
icebp
mov
push
lea
frstor
imul
mov
ja
loop
scas
xchg
xchg
xor
pushl
mov
cmp
ret
cmp
jmp
add
add
jmp
jmp
and
push
sbb
push
pop
daa
stos
or
sbb
adc
sbb
mov
xor
int3
loopne
jns
in
xchg
sub
aaa
sbb
ret
xlat
ret
pop
xchg
sbb
into
jbe
adc
sbb
pop
cmp
pop
ds
frstor
mov
xor
pop
sub
add
adc
lret
loopne
out
shlb
mov
dec
mov
pop
add
push
pop
sub
out
fildll
sub
jb
pushf
test
mov
push
mov
and
fstl
sub
xchg
cltd
cmc
cmp
xor
cwtl
jmp
cmp
mov
mov
cmpsb
pusha
cmpsb
fdivr
mov
fisubrl
mov
cmp
ja
jl
mov
jns
cwtl
mov
out
rcrb
and
sbb
adc
jle
cmp
push
add
pop
and
stos
push
jno
mov
and
jnp
lret
inc
cs
xchg
stos
adc
push
fisubrs
repnz
xlat
sub
push
mov
test
movsb
outsb
je,pt
outsb
jns
insl
sub
into
xorb
push
jecxz
lret
orb
repnz
ss
sub
or
or
cmp
in
aam
js
aam
mov
dec
push
sbb
and
inc
lods
in
lods
mov
jg
stos
push
cmp
cmp
scas
out
pop
scas
js
stc
pop
jp
mov
mov
je
into
imul
sar
xchg
mov
mov
mov
cmp
cmpl
subb
rorb
sub
fs
xchg
jo
xor
xor
aaa
int
cmp
shl
pop
sbb
mov
test
cmp
xor
int3
mov
mov
sar
ja
sahf
lret
pop
dec
cmp
lods
hlt
insl
and
sahf
adc
cmp
xor
cmp
push
daa
or
fistpl
insl
cmp
pop
mov
and
and
aas
jg
orb
ljmp
dec
jno
jno
outsl
sbb
xchg
sbb
or
mov
pop
sbbb
cmp
insb
pop
daa
cs
aam
dec
add
xchg
push
jo
cmc
push
pop
sub
bound
jmp
and
add
add
adcb
lea
add
and
out
push
insb
cltd
xor
jge
cmovno
add
push
idivb
loopne
int3
test
adc
jg
add
ljmp
sbb
sahf
aas
xor
sti
push
icebp
int
in
mov
jae
aas
xchg
jns
call
fs
mov
adc
mov
in
das
jl
leave
xchg
xchg
test
shrb
mov
cs
xchg
pop
push
add
xlat
fs
pop
ja
xchg
pop
addr16
ljmp
in
xor
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
push
jle
popa
sbb
and
sbb
clc
clc
stc
into
add
adc
lret
mov
lea
sbb
pop
test
unpckhps
mov
mov
loopne
cld
dec
cmp
leave
int
out
nop
rolb
rcr
xchg
mov
sbb
mov
daa
out
sbb
stos
pop
test
cmpsl
pop
adc
fcmove
mov
or
ret
lods
add
pop
xchg
inc
lock
jl
mov
hlt
mov
imul
push
adc
ror
dec
dec
popa
or
arpl
sbb
dec
pop
aaa
js
arpl
sbb
sub
dec
add
sbb
fdivrl
mov
stos
dec
test
in
leave
dec
add
pop
xchg
fisttps
insl
dec
adcl
mov
mov
pop
mov
sbb
call
mov
cld
cwtl
loop
jle
fsubp
lcall
xorb
je
hlt
aas
mov
in
sbb
inc
andl
mulb
sub
outsb
ficompl
outsb
stc
jl
es
pop
aaa
gs
add
jge
test
into
leave
mov
pop
repnz
and
loop
inc
push
enter
mov
or
mov
xor
mov
inc
xor
and
addb
sub
stos
inc
and
xchg
pcmpgtw
fwait
lods
popf
imul
lahf
shrl
xor
mov
lret
shrb
mov
mov
fisttps
jecxz
pop
lods
xor
mov
mov
ljmp
push
mov
stos
push
imul
add
sub
shrd
or
push
cmpb
mov
lret
ss
push
shlb
jne
mov
std
inc
stos
loope
aad
out
adc
jmp
xchg
push
or
add
jbe
int
jle
adc
jne
icebp
imul
dec
sbb
pop
testl
jnp
mov
mov
xchg
or
cmpsl
add
push
nop
pop
dec
cwtl
pop
fldenv
les
add
movsb
xor
test
push
xor
dec
cmp
addr16
cmpl
test
add
lds
push
in
sbb
jecxz
sub
scas
outsb
and
lea
shrl
shl
dec
or
fs
xchg
outsb
jmp
aad
fsubrl
mov
mov
jg
sbb
or
cmpb
dec
push
sbb
pop
mov
repz
clc
mov
lret
pushf
pop
xchg
cmp
pop
and
test
jmp
enter
push
sarb
int
xor
fidivrl
inc
jo
ljmp
lods
jg
lahf
popf
mov
push
fldt
dec
adc
rorb
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
fdivs
sbb
sbb
adc
sbb
fmull
nop
jge
jbe
or
lahf
add
cmp
sahf
mov
sub
jge
stos
sbb
push
iret
adc
adc
out
dec
test
out
cmp
or
sub
int
jge
jo
sbb
dec
shrb
mov
pop
lret
sbb
xor
push
scas
mov
lods
in
xchg
xchg
in
dec
mov
enter
in
mov
es
xor
dec
in
or
es
or
int3
sub
aad
int
les
and
xor
mov
dec
or
idivb
push
or
and
inc
mov
cmc
inc
mov
pop
ds
fdivs
mov
push
cmc
push
daa
sti
pop
loope
inc
xchg
mov
mov
rol
mov
fldl
mov
in
fs
xor
or
push
add
mov
jns
dec
lods
mov
cmpsb
dec
inc
xchg
cmp
outsl
lret
jle
mov
mov
push
jns
cwtl
mov
pop
shr
inc
les
out
arpl
sbb
es
inc
dec
xor
and
jmp
mov
call
add
and
inc
movsb
shll
aas
mov
ret
push
cld
xchg
and
cmp
mov
xor
cmp
adc
cmp
cmp
sbbl
aam
inc
cs
push
mov
rorb
ret
jg
loopne
hlt
cltd
dec
dec
insl
icebp
addl
xlat
inc
push
jge
push
in
popf
jl
mov
outsb
or
mov
sbb
insl
add
jg
lret
lea
dec
xor
dec
bnd
push
mov
into
push
push
popf
mov
dec
sbb
push
adc
or
out
cwtl
jo
xor
repz
clc
cltd
cmpsb
sub
push
fildll
sahf
cmc
repz
dec
push
leave
filds
popa
mov
or
outsb
addr16
nop
out
lods
sub
fs
je
mov
mov
push
push
sub
mov
ret
xor
mov
adc
mov
ja
dec
xlat
sub
sti
mov
in
aam
xor
xor
jp
daa
mov
loop
push
stos
mov
cld
mov
pop
ret
addr16
pop
adc
icebp
pop
pop
loop
andb
hlt
or
sbb
and
test
out
in
mov
mov
loop
out
mov
ficoml
xchg
jo
cwtl
push
pusha
and
dec
inc
fadd
loope
insl
repz
shl
pop
aas
cs
shlb
fistpll
loop
inc
push
insl
mov
popa
in
and
push
call
fstps
add
inc
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
xor
mov
and
sub
sub
fnstcw
daa
imul
push
leave
jl
insb
sarl
ja
outsb
into
fnsave
xadd
jge
shll
pusha
jno
lcall
xchg
jnp
shlb
mov
dec
movsl
arpl
or
mov
pop
jno
or
aas
out
push
jmp
rcrb
mov
out
ds
ficoml
outsb
add
psubsw
flds
sbb
cmpsb
push
das
inc
jle
popa
pop
push
lahf
rolb
and
mov
ljmp
cmp
cmovl
sbb
cmpsl
xor
xor
std
movsb
repz
sbb
pop
es
inc
sbb
or
andl
cmp
insl
int
into
int
push
inc
and
jo
push
push
ret
inc
sub
flds
sub
jno
arpl
push
pushf
mov
mov
xchg
xchg
or
popa
jmp
pop
sti
mov
mov
js
in
test
jg
cmp
fidivrs
ss
push
inc
nop
repnz
xchg
cmpsb
cmp
ds
jno
jge
jno
jle
pop
push
mov
xor
push
aaa
aam
pop
mov
outsl
adc
adc
out
push
and
adc
loope
insl
stos
jnp
dec
stc
mov
mov
pusha
fiadds
inc
sub
mov
xchg
data16
ljmp
jno
add
push
inc
cmpsb
mov
jl
mov
lods
pop
fs
add
ret
cli
pop
sbb
ja
inc
xchg
push
xlat
in
push
push
push
jb
add
mov
jne
mov
fsubrs
push
bound
out
mov
mov
ret
jge
xlat
push
imul
xchg
fadd
cmpsb
jo
jae
xor
inc
mov
mul
sub
push
sbb
lods
iret
cmp
fistpll
shll
xchg
sub
lret
dec
icebp
mov
cmc
repnz
sti
les
gs
imul
ljmp
lds
mov
xchg
push
das
adc
pusha
cmp
jne
xor
sarb
xchg
inc
and
aaa
or
pop
inc
ss
js
shrl
or
sbb
insb
inc
cld
push
aad
shll
push
jecxz
add
das
pop
ds
sahf
and
jb
mov
adc
and
cmc
data16
js
or
mov
mov
sahf
cld
jecxz
cs
push
mov
movsb
mov
mov
shrl
lods
out
push
adc
mov
sahf
inc
cmpsl
jbe
and
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
sub
idivl
mov
adc
gs
push
adc
push
lods
int3
subb
sbb
mov
or
adc
rcr
mov
push
pop
adc
cs
das
rorl
ret
inc
pop
adc
sbb
not
es
sti
rclb
mov
out
pop
cmp
fs
data16
or
xchg
sub
and
cwtl
mov
jae
clc
or
xchg
fwait
jns
in
cli
or
sbb
pop
por
push
cld
adcb
int3
mov
xchg
adc
and
lods
add
push
or
icebp
push
ret
pusha
jmp
addb
mov
adc
movsl
fwait
pushw
in
jnp
push
or
or
xchg
lret
popf
xor
stos
xchg
pushf
mov
add
cmp
in
sahf
mov
addr16
push
mov
xchg
pop
push
inc
scas
scas
loope
enter
movsb
xchg
out
jno
jg
inc
sbb
mov
test
pop
cmp
es
fldt
nop
pop
pop
repnz
int
jae
sub
adc
enter
insl
xchg
add
movsl
pop
xlat
add
pop
cmp
shl
or
in
adcl
jns
orl
out
int
add
popa
push
and
mov
addr16
mov
cli
inc
mov
pop
les
mov
inc
lds
out
clc
nop
cmc
leave
pop
js
fwait
loopne
mov
adc
jl
jecxz
xor
idivb
mov
hlt
xor
popf
jle
dec
and
jl
cltd
mov
pop
inc
xchg
mov
xor
jne
decb
inc
add
mov
ffree
fdivs
sbbb
cmc
aas
pusha
movsb
dec
push
dec
cwtl
push
shrl
mov
popa
lds
jne
push
xchg
mul
scas
add
fwait
or
jae
stc
pushf
scas
popf
bswap
mov
jmp
sub
leave
int
arpl
push
push
ret
adc
test
jg
sbb
mov
cld
push
ret
out
inc
dec
mov
shll
add
cmp
jae
sahf
sub
popa
or
and
icebp
rorl
orl
es
jmp
das
mov
jne
mov
inc
shll
mov
testb
decl
or
popa
sbb
cmp
mov
shr
out
test
and
call
jl
or
sbb
ds
pavgw
mov
push
arpl
icebp
cwtl
int
enter
test
cli
adc
mov
mov
inc
adc
sub
outsl
xchg
push
popf
mov
and
or
cwtl
mov
sbb
dec
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
ret
push
push
dec
sbb
add
sbb
es
sub
into
popa
fldenv
in
inc
mov
inc
test
push
and
lds
cmp
push
jmp
push
cmc
loopne
ss
mov
orl
in
push
inc
mov
adc
fcos
xor
aad
notl
add
cld
sahf
fwait
lcall
mov
loopne
push
dec
and
xchg
lds
inc
fwait
fs
mov
xchg
outsl
cmpsl
pop
enter
mov
sahf
xchg
cmp
int
inc
adc
pop
dec
and
pusha
and
int3
mov
push
std
or
mov
fisttpl
sub
sbb
and
and
iret
xchg
sbb
std
sub
xor
mov
adc
lcall
dec
subb
mov
dec
mov
inc
jp
ret
aad
cmpsl
jne
adc
sbb
inc
inc
mov
inc
sub
cmpsb
pop
xor
lds
adc
cli
add
int3
xor
jmp
ss
lcall
into
and
out
xor
push
subb
lds
jmp
pop
scas
or
mov
cmp
aas
mov
ja
imulb
pop
enter
mov
jge
lods
pushf
pop
mov
pop
insl
out
push
xchg
cwtl
inc
int
fcompl
push
mov
movsb
inc
mov
cmp
inc
insb
lock
cmp
iret
and
push
cs
sub
or
cmp
arpl
lods
fnsave
outsb
push
pop
ljmp
das
add
and
gs
pop
lea
mov
iret
shl
or
xchg
push
scas
ljmp
ja
push
fdivrl
push
imul
aaa
push
mov
inc
push
mov
icebp
clc
adc
cld
adc
daa
lods
xor
jne
pcmpgtb
fisubrl
cmp
inc
rcll
aaa
js
xor
popa
cltd
bound
push
mov
adc
mov
in
push
add
cli
enter
or
shrl
mov
arpl
pop
jbe
cmc
fwait
jmp
mov
or
es
or
popf
push
adc
pop
mov
fstpt
sbb
jo
je
push
xor
scas
mov
mov
add
sbb
jge
push
aas
ds
cmp
pushf
loop
outsl
pop
cmp
movsb
daa
xchg
push
fld
fwait
out
ss
arpl
cmp
aas
fdiv
or
jns
mov
push
popa
mov
or
data16
xor
scas
lods
outsl
out
xchg
popf
popf
push
repnz
push
mov
movsl
sti
xor
enter
aad
push
pop
ss
aad
xor
lret
rcll
push
pop
in
cmp
xchg
and
inc
mov
idivl
dec
loopne
jne
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
loop
jo
inc
sbb
add
sbb
xchg
adc
cs
jne
and
stos
aas
mov
aam
jp
int
push
movsl
daa
xchg
leave
gs
addr16
cmp
sarl
sub
xchg
and
leave
sbb
and
add
inc
in
mov
pop
call
pop
stos
shll
jle
mov
repnz
fisubrl
pushf
xchg
pop
iret
sbb
inc
fwait
sub
pop
mov
add
repnz
xchg
cmp
test
cmpsb
mov
sbb
nop
aad
scas
shlb
jle
and
cmp
sub
and
decb
test
rol
bound
hlt
je
outsb
jo
ss
xchg
bound
lcall
fwait
xchg
pusha
or
cmpsl
jge
ja
daa
xchg
xor
ret
or
mov
lret
rorl
popf
in
cmpsl
add
push
nop
push
clc
rcpps
inc
cmp
jmp
rcrb
fisttpll
js
fimuls
ljmp
jnp
xor
je
repz
jp
jns
mov
arpl
adc
cli
and
pop
aas
adc
lods
cmp
dec
adc
adc
push
pop
add
aad
jl
icebp
mov
les
lds
adc
jl
data16
inc
in
mov
pop
out
mov
mov
inc
clc
and
or
mov
mov
jle
pop
jle
sbb
push
sbb
popf
xchg
and
cwtl
test
cmp
mov
rorl
add
jb
imul
dec
inc
ret
aam
rcrb
push
jne
sub
cmp
cmpsb
inc
inc
leave
dec
sub
movsb
mov
fwait
or
push
dec
repz
xor
dec
test
adc
fst
movb
ds
addr16
xor
outsl
loop
in
iret
aam
jecxz
xchg
xchg
test
jb
aas
sub
lcall
out
sbbl
push
loope
mov
xor
iret
and
cld
jl,pt
stos
push
and
inc
repz
and
andl
js
fmul
mov
mov
decb
inc
fmuls
xchg
fcomi
xor
pop
xor
inc
out
movsb
xor
jmp
leave
in
mov
mov
mov
aad
mov
and
loope
call
xor
into
pop
bound
push
sarl
rcrl
shl
stos
js
inc
fwait
movl
adc
out
jle
pop
add
dec
xchg
jecxz
dec
addl
xchg
movsb
sbb
jno
imul
push
mov
ds
sbb
sbb
push
or
pushf
std
mov
push
negl
jnp
addb
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
je
fnstsw
cmp
sbb
dec
negl
jg
daa
jmp
jbe
push
lock
test
icebp
xchg
les
mov
jae
lahf
pop
cmp
cltd
repz
rclb
dec
lds
lret
or
mov
mov
adcl
add
add
add
cwtl
int3
loop
int3
stc
pushf
xor
push
xor
push
mov
jns
push
mov
shrb
out
nop
rclb
push
adc
insl
sbb
or
xchg
aaa
mov
mov
xchg
fadd
xor
pop
js
cld
arpl
push
loopne
adc
adc
and
mov
mov
dec
stos
ret
xchg
iret
je
out
lahf
push
icebp
ss
out
int3
nop
negb
jl
test
loope
std
adc
inc
gs
fcom
cmp
ret
inc
ja
in
icebp
leave
pop
xchg
jb
push
mov
sub
sti
xlat
dec
or
mov
sub
mov
mov
sbb
rolb
dec
cmpsb
hlt
aas
in
repnz
iret
repz
loope
lds
fsts
push
mov
sbb
outsb
loope
int
cmpsb
mov
sbb
sti
dec
inc
jae
jg
roll
ja
ret
add
mov
mov
cmpb
out
adc
icebp
arpl
fdivrs
imul
xlat
mov
insl
mov
inc
not
xor
subb
outsb
jg
negl
mov
push
aas
inc
stos
xchg
mov
sub
mov
stos
cld
das
les
mov
fsubr
fdivl
sbb
imul
call
fisubl
xor
aaa
out
cmp
push
sub
push
mov
loopne
sahf
sub
mov
iret
adc
fidivrs
xorl
in
je
orb
xor
sub
sub
rol
in
xor
loop
mov
or
pop
cltd
xchg
or
or
nop
lea
mov
hlt
mov
pop
jne
cs
cmp
pop
out
xlat
jne
fimull
pop
mov
adc
fcmove
ds
or
add
arpl
leave
subb
shr
or
pop
push
mov
and
fmull
icebp
imul
cwtl
mov
aad
fucom
cmp
or
inc
push
xlat
or
dec
adc
lret
shlb
pop
repnz
jle
push
pop
jg
jmp
mov
std
fadds
lcall
mov
call
push
fisttps
add
cmpsl
cmpsb
data16
pop
mov
sbb
cmp
outsb
pop
xchg
clc
push
adc
mov
decb
jno
rorb
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
cmp
call
adc
sbb
pop
loop
pop
outsb
sub
rcrl
jge
cli
xchg
sbb
cmpsl
push
mov
xor
ss
arpl
dec
mov
dec
jmp
pop
fldcw
icebp
in
dec
add
mov
or
xor
adc
push
iret
or
jo
mov
pop
addr16
clts
fcom
xchg
pop
mov
mov
cmp
into
pop
pushf
pop
ja
daa
mov
sarl
pop
je
lds
fisubrs
test
jne
and
mov
inc
pusha
orb
xchg
test
pop
jnp
adc
loopne
nop
adc
ja
pop
fnsave
mov
add
inc
ss
les
test
ficoms
cmc
pop
ja,pt
jge
outsb
cli
cmpsb
pusha
mov
push
push
lcall
pushf
add
fisttpll
lret
dec
sub
push
sub
dec
insl
mov
bound
cmp
jl
clc
call
sbb
push
mov
insb
lods
ds
iret
add
enter
push
push
scas
pop
mov
pop
sbbl
jb
sub
pop
jl
je
sbb
add
fldl
ss
ret
xchg
pusha
out
lea
rcll
test
mov
sub
aam
sahf
or
stos
std
shrb
je
rclb
dec
or
jge
sahf
sub
fsubp
mov
daa
in
clc
sbbl
and
xchg
es
out
jne
xchg
add
xor
mov
hlt
mov
movsb
lret
mov
loop
scas
loop
dec
fimull
inc
dec
dec
cwtl
cmc
sub
or
cs
jne
dec
mov
in
xchg
mov
cmc
cltd
jg
add
and
loopne
das
cmp
pop
dec
lcall
pop
add
je
mov
vandps
mov
cmp
jns,pt
add
insb
lret
outsb
or
and
loop
mov
repnz
mov
xor
rcrb
cmp
adc
cmp
xor
dec
jmp
rolb
add
mov
mov
add
test
rcll
push
mov
insl
inc
mov
test
test
sbb
mov
rcll
and
or
mov
addr16
push
mov
push
outsb
mov
and
andb
call
or
pushf
mov
mov
int3
fsubr
or
out
add
int3
lret
and
push
mov
jge
enter
mov
mov
pusha
and
mov
mull
push
cmp
loopne
out
jmp
js
sub
clc
push
int3
xchg
adc
jl
outsb
sub
cmp
aaa
mov
adc
daa
or
cmpb
pop
dec
fildll
add
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
jno
shlb
sbb
add
sbb
cmp
insl
das
xchg
inc
push
xorb
js
fcompl
jbe
and
mov
push
or
fildl
mov
stc
movsb
push
scas
jg
jg
lods
xor
jle
hlt
dec
and
push
data16
xchg
push
lcall
push
mov
push
cs
sbb
dec
aaa
or
mov
pop
mov
jl
push
jp
xor
pop
test
push
bound
or
das
or
mov
sahf
mov
mov
sbb
mov
aas
adc
mov
hlt
aad
sahf
adcb
fsub
adc
divl
repz
sbb
std
mov
std
pop
dec
js
insl
mov
mov
enter
lea
jae
cmp
popa
fstp
repnz
jb
mov
loopne
lods
or
mov
xor
jl
cmp
ja
jp
divb
or
sarb
daa
test
es
insl
cli
ret
js
iret
xchg
or
pop
fildl
cld
mov
add
fbstp
mov
shlb
pop
sahf
add
adc
mov
arpl
mov
faddl
xor
add
addl
cli
dec
and
shld
inc
out
neg
aas
lods
loope
dec
xchg
mov
lea
push
pop
dec
mov
push
mov
cmp
outsl
test
and
in
lret
sbb
gs
outsb
xchg
or
mov
xchg
xchg
test
shrb
jecxz
imul
push
lret
mov
sbb
nop
cmpsb
inc
dec
in
loop
add
cmp
into
into
jne
push
sub
xor
in
mul
lea
aas
leave
in
xchg
inc
fsubr
mov
dec
inc
add
fsincos
sbb
sahf
icebp
dec
and
mov
imul
cltd
inc
dec
call
mov
jg
idivb
xchg
clc
fmul
arpl
imull
adc
mov
rcl
mov
cmpsb
out
lea
bnd
mov
fdivrs
sbb
mov
lds
mov
in
inc
mov
mov
clc
xchg
sub
pop
insb
cmp
jnp
add
fnsave
loopne
mov
lahf
in
push
ret
ds
cmp
cmp
insb
movsl
mov
or
dec
nop
mov
sub
mov
icebp
repz
movb
mov
lock
xor
mov
bound
push
mov
mov
mov
cmp
dec
lds
cmpsb
dec
scas
mov
out
sbb
inc
jmp
out
sbb
push
push
insb
nop
dec
insl
xor
js
cltd
xlat
mov
xchg
mov
loopne
add
adc
aaa
mov
push
add
jmp
add
push
sbb
ja
cmpl
sbb
adc
sbb
leave
fiadds
pop
mov
cmp
and
cmp
jge
in
outsb
sub
into
or
dec
ljmp
add
fbld
push
cmp
and
lahf
xchg
std
sti
pop
lock
ss
cmpsb
mov
fsubr
add
addr16
roll
mov
sbb
xchg
mov
fists
push
jb
js
xor
mov
and
pop
and
in
mov
mov
mov
addr16
inc
push
cli
out
or
repz
sub
dec
lea
test
mov
push
or
cmpsb
inc
repz
pop
arpl
sbb
stos
daa
mov
mul
mov
loope
add
test
jns
inc
mov
add
or
xchg
inc
or
jae
je
imul
stos
pushf
je
jecxz
rorl
nopl
sub
das
enter
cmp
push
mov
cmp
loop
into
hlt
mov
inc
fldenv
push
xor
inc
adc
loope
push
or
or
dec
sub
sbb
sub
icebp
dec
js
mov
rorl
adc
mov
sbb
push
loope
daa
shr
cmp
sub
inc
ljmp
sub
cltd
mov
lahf
mov
xchg
push
push
int
into
and
int3
mov
sbb
adc
loop
les
cmc
les
loop
ss
jne
and
daa
imul
xor
mov
in
add
lods
add
and
insb
push
dec
stos
or
aas
push
cmc
lods
loope
insl
imul
xor
inc
jecxz
pop
sub
mov
dec
xchg
pop
std
and
lods
rcll
mov
jo
std
daa
pop
dec
sub
dec
mov
jecxz
loopne
sbb
fcompl
xchg
ljmp
inc
jne
inc
test
es
jl
sbb
addr16
cmc
outsb
or
cmp
std
add
pop
call
notl
nop
and
out
popf
mov
sub
imull
sub
mov
lea
push
cmpsl
cmpsl
repnz
andb
mov
inc
inc
inc
js
insl
gs
jge
mov
cmp
jno
sub
sbb
mov
stc
mov
adc
lock
je
jp
in
in
test
outsb
lock
sub
movsb
rcrb
mov
stos
repnz
clc
in
into
add
shrl
and
je
mov
jno
or
in
and
push
and
jmp
sahf
sbb
adc
cmp
cmp
shrl
and
in
cmc
sub
push
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
cmp
sbb
add
sbb
dec
iret
adc
ret
dec
add
xchg
pop
loope
lods
pop
loop
xchg
adc
sub
cmp
faddl
in
addr16
insb
mov
pop
ljmp
pop
mov
rcr
or
mov
div
pop
pop
or
in
push
sub
pop
fwait
rolw
and
out
pushf
xchg
movsb
andl
lds
mov
jge
fistps
lods
mov
test
jle
or
cmc
jae
aad
lret
cld
jo
sti
inc
xchg
mov
ja
pop
lcall
add
jbe
inc
test
daa
mov
imul
imul
push
sub
gs
outsl
stos
stc
lea
xchg
xchg
mov
cmp
push
cmp
xchg
icebp
leave
scas
fwait
sarb
jne
jne
mov
lret
js
mov
xor
cmc
mov
mov
fldenv
inc
add
vunpcklps
jne
pop
outsl
or
cmp
add
fisttpll
xlat
pop
es
cmc
fdivs
out
outsb
insb
push
dec
hlt
leave
cld
mov
xchg
es
shlb
push
stos
clc
mov
inc
or
or
mov
stos
xor
out
adc
test
xchg
or
arpl
mov
scas
in
xchg
push
pop
inc
pop
lea
imul
push
jno
in
pop
jle
or
mov
adc
data16
jl
sbb
or
add
pop
jmp
insb
adc
dec
jl
cld
gs
sub
fisubs
jp
jnp
adc
cltd
sub
setl
rcr
imul
pusha
cmc
iret
or
push
fwait
cmp
dec
xchg
outsl
mov
testl
pop
mov
mov
push
jno
dec
jae
jge
cltd
data16
lret
mov
rep
ds
sub
into
cmp
lcall
mov
lods
lods
or
pop
mov
mov
lcall
pop
jp
lods
lods
or
inc
lock
jo
ds
adcb
out
and
xchg
orb
pop
std
ss
movsl
mov
mov
push
add
xorl
inc
ja
jg
out
sbb
inc
dec
stc
or
and
xchg
test
xchg
ret
sub
fs
or
adc
pusha
add
aaa
popa
and
mov
sub
or
hlt
lret
notl
inc
lea
cmc
xchg
rorl
adc
mov
sbb
mov
cs
arpl
push
ja
push
mov
xor
or
jb
sub
push
scas
loopne
xor
jecxz
scas
imul
pop
sbb
in
xor
lret
xchg
sahf
movl
mov
jecxz
inc
adc
dec
mov
adc
mov
mov
xor
divb
xor
std
push
ret
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
ret
and
add
sbb
shll
sahf
or
loopne
jo
pop
les
xor
push
inc
and
or
gs
out
add
mov
insb
push
dec
negl
add
arpl
lahf
lea
repz
jg
ret
add
mov
lret
jbe
aaa
lahf
mov
push
mov
imul
adc
arpl
cwtl
shll
jns
call
lea
int
sbb
test
subb
mov
roll
sbb
cmp
test
push
cmp
dec
lcall
stos
std
sbb
or
mov
xor
dec
aam
movsl
mov
addl
sub
or
dec
scas
mov
pop
dec
in
into
shlb
mov
adc
cmp
sbb
mov
cwtl
leave
xor
cmp
cwtl
rcl
std
fwait
nop
stc
int3
mov
pop
test
cmpsb
enter
jmp
push
movsl
jnp
aaa
test
cwtl
repz
sti
or
add
mov
add
loopne
jmp
inc
sbb
and
inc
scas
ljmp
xor
push
ret
cmp
xchg
idivl
dec
lcall
ljmp
lret
mov
stc
mov
jg
mov
mov
sub
jne
cmp
arpl
addr16
in
xor
and
je
and
shr
and
rcrl
jg
shll
repnz
idivl
xchg
subb
out
push
js
cmp
lret
sub
aam
hlt
outsl
std
pop
pop
enter
lods
shl
adc
fsub
and
js
outsb
mov
mov
push
mov
outsl
pop
outsl
aas
loop
xchg
bound
xchg
jecxz
xor
sub
fdiv
pushf
mov
pop
mov
inc
xchg
inc
jnp
jg
push
add
test
lcall
pushf
hlt
mov
mov
xor
push
pop
sarb
sbbb
ds
mov
or
shlb
push
xchg
lods
mov
into
mov
xchg
movsb
out
xor
jmp
push
mov
sbb
lods
aaa
lret
xor
mov
inc
mov
and
es
push
sub
and
cs
fidivrl
dec
push
ficoms
dec
fsub
mov
stos
add
mov
or
mov
cs
test
out
and
mov
mov
std
jb
in
push
adc
repz
ljmp
cld
xchg
cwtl
out
and
xchg
stc
mov
push
imul
hlt
jmp
loopne
pop
inc
mov
faddl
xchg
faddl
clc
ficomps
sbb
je,pt
movsb
leave
cmpsl
inc
stos
jmp
xor
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
jo
sbb
sbb
adc
sbb
in
sub
fwait
imul
andl
mov
sub
fistpl
or
enter
xor
xchg
jp
jecxz
mov
inc
je
inc
gs
cmpl
hlt
out
mov
push
arpl
addr16
inc
fadds
pop
ret
mov
sahf
mov
dec
test
xchg
out
iret
int3
aam
and
ds
cmp
aas
mul
adc
cmp
ficompl
mov
sub
add
iret
cmpl
fistpl
add
push
cmp
arpl
sub
movsl
inc
jl,pn
mov
sbbl
lds
jp
xchg
mov
push
aaa
dec
push
addr16
clc
dec
notl
dec
arpl
mov
repz
pop
push
jmp
xchg
rclb
inc
push
or
pop
mov
ja
pop
sbb
cld
cwtl
xchg
mov
cmp
xchg
fidivrs
push
jbe
iret
jo
mov
in
sti
repz
jnp
xchg
push
mov
cmp
xchg
or
sbb
ds
pop
inc
mov
add
inc
mov
mov
sbb
sub
into
inc
mov
push
bnd
orb
push
and
loope
cli
inc
dec
jmp
and
mov
xchg
test
and
test
mov
and
enter
cs
shlb
ficoms
adcb
mov
outsl
inc
adc
lahf
mov
mov
test
andl
adc
and
mov
jnp
mov
enter
jmp
fmuls
or
xchg
push
out
sub
dec
and
imul
add
xor
dec
pushl
adc
movl
jp
cmp
inc
adc
fisttpl
cmpsl
xchg
shrl
aad
mov
aam
rcl
loope
cmpsl
pusha
out
ficompl
repnz
add
cmp
inc
lahf
aaa
jns
mov
iret
shlb
xor
aaa
loope
rolb
popf
inc
das
push
cmpsl
and
and
and
cli
push
dec
push
inc
dec
add
gs
jge
fbstp
mov
and
lock
daa
rclb
lret
mov
jns
mov
add
stos
fcomi
adc
fldenv
mov
mov
dec
loope
xor
mov
jecxz
inc
push
push
or
test
pop
out
mov
into
mov
jnp
push
das
into
mov
mov
jbe
push
jge
sahf
outsl
ret
stc
repz
testb
cmp
sbb
fbld
mov
mov
xchg
idiv
test
xchg
imul
push
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
imul
sbb
adc
sbb
pop
mov
push
jae
fdivr
test
imul
add
pop
pop
imulb
jns
icebp
cmpsb
push
int
or
dec
inc
hlt
sub
push
jns
mov
jmp
and
jg
jns
mov
dec
xchg
xor
mov
scas
mov
mov
push
inc
insl
sub
jl
sar
aad
push
xor
in
out
sarl
imul
xlat
adc
stos
imul
cmc
sbb
adc
mov
pop
jae
call
insl
cs
cmpl
sbb
xor
ja
or
call
mov
xchg
cwtl
das
stc
dec
push
adc
xchg
dec
jg
jbe
idiv
pop
dec
mov
das
nop
or
push
call
scas
and
fldl
cmp
hlt
stos
pop
pop
and
stos
cmp
insl
sub
pop
pop
jge
add
adc
mov
sub
ret
fsubl
jns
or
psrlq
mov
mov
sarb
scas
loop
push
fdivs
roll
jb
xor
or
std
push
testb
sub
stos
into
mov
insl
imul
xchg
ret
dec
in
push
inc
int3
movb
inc
insl
shlb
xor
cmpsl
out
filds
inc
jg
mov
out
in
mov
dec
daa
xchg
adc
dec
mov
outsl
push
lahf
scas
jnp
inc
outsl
adc
fwait
inc
mov
jb
mov
xchg
lret
mov
lcall
imul
mov
jmp
push
dec
insl
imul
and
lods
lcall
lock
pop
leave
cmp
rorl
jmp
dec
jnp
jle
leave
scas
pop
and
in
nop
or
outsl
aad
fs
insb
leave
cmpsb
push
std
aas
rclb
out
icebp
push
add
mov
and
lret
insl
dec
rol
mov
push
xlat
or
push
ret
inc
mov
pop
mov
dec
sub
xor
inc
mov
sbb
popa
mov
pop
sbb
scas
orb
cmp
fcomip
add
aas
adc
cmp
cwtl
jl
mov
inc
mov
in
add
cmpb
aas
jg
fcmovu
insl
add
das
arpl
inc
rorl
les
sbb
mov
movsl
daa
in
and
sbb
mov
lret
je
std
aas
and
fisubrl
pop
and
inc
mov
pop
movsb
or
lock
sbb
out
imul
fnsave
sti
ss
pusha
xchg
cld
out
in
push
add
adc
mov
dec
in
and
cmp
xchg
lret
jae
add
jp
mov
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
test
inc
or
sbb
call
xchg
adc
and
pop
sti
pop
lds
int3
in
and
push
or
add
cwtl
ja
mov
push
ffreep
mov
cmc
xor
fistps
sbb
sbb
mov
push
push
mov
jp
push
fidivs
xor
sbb
js
cltd
mov
mov
mov
aam
push
xbegin
into
inc
test
mov
outsb
in
adc
xchg
cmp
roll
mov
xor
mov
in
out
es
in
jo
jge
pop
test
push
jae
test
cmp
sub
add
and
mov
es
xchg
imul
inc
divl
jae
add
adc
out
or
sbb
mov
push
sbb
icebp
cmp
xchg
pop
cwtl
hlt
pop
jno
cld
fiadds
enter
or
inc
mov
cs
pusha
nop
and
mov
rcrl
push
sub
cltd
js
call
std
fisttpl
sub
movsb
addl
push
mov
pop
pop
sbb
andb
movl
das
ret
inc
pop
mov
test
push
js
test
lahf
pusha
add
dec
sbb
lcall
enter
dec
adc
fisttps
mov
iret
sbb
inc
int3
fstpl
xchg
pop
sub
dec
dec
jecxz
rorb
sub
xchg
aaa
popf
sub
push
gs
pop
and
int
mov
xor
arpl
cmp
je
xchg
or
mov
xchg
lret
lods
mov
adc
lahf
repnz
scas
push
pop
dec
inc
dec
jb
lds
rcr
in
js
jge
jno
xchg
inc
jb
cmp
push
jns
mov
adc
sahf
test
imul
sahf
ds
push
test
pushf
mov
mov
lods
pop
shll
ljmp
lcall
shlb
daa
jnp
mov
dec
stc
test
adc
add
sbb
mov
cmpl
jbe
and
pop
fisubl
roll
xchg
js
ret
mov
or
fwait
push
ljmp
xor
jle
fisttpll
mov
push
cmp
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
sub
sbb
test
sbb
adcb
xor
loop
jae
int3
cmp
pop
push
push
rol
sti
hlt
rcrb
imul
insl
aas
ret
lods
push
xchg
into
mov
dec
dec
sub
xchg
inc
repnz
mov
fsubrl
or
in
lahf
push
push
fisttps
push
rcll
lods
out
ja
cltd
fwait
notb
repz
outsl
movsb
aad
arpl
addb
cmp
cmpl
dec
cmpsl
mov
push
daa
mov
aad
lret
xchg
lret
fld
mov
mov
jg
jno
ja
push
push
scas
sub
jnp
dec
add
jnp
dec
out
xchg
cwtl
mov
cmpsb
xchg
mov
inc
addb
sub
flds
mov
repz
outsl
inc
hlt
sub
leave
ljmp
fs
cmp
push
imul
jnp
mov
mov
out
insb
test
add
test
aad
sbb
xchg
xchg
arpl
push
sbbb
xchg
sarl
and
lods
mov
add
iret
pop
pusha
rcll
repz
or
jle
push
negl
xchg
testb
test
jnp
push
ja
pop
loopne
lods
fwait
add
into
std
out
scas
subb
xor
test
into
rorl
cmc
mov
xchg
jge
gs
adc
pop
cmpsb
sub
add
mov
insl
xchg
mov
dec
sbb
adc
xor
imul
push
imul
andb
pop
mov
dec
in
mov
adcl
mov
insl
inc
mov
jle
insl
add
mov
cs
std
add
push
push
orb
mov
cmp
sbb
and
in
and
push
push
xchg
aam
push
in
in
add
or
sbb
mov
or
push
lods
xchg
mov
test
testl
pop
jne
sub
shll
sbb
and
bound
cmp
aad
inc
adc
sbb
adc
lock
xor
and
outsl
jo
xor
push
cmc
cmp
cmp
sbb
lahf
les
loopne
mov
jg
xor
adcb
sub
xor
push
test
ljmp
mov
imul
sbb
jb
outsl
inc
rclb
ret
cmp
rcrb
xchg
fistps
xor
inc
jo
add
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
ficoms
stos
popa
add
sbb
inc
or
mov
or
cmpsb
fidivl
pop
or
pop
mov
das
incb
insl
push
movsb
clc
push
add
mov
loope
xor
cmc
in
jg
ficompl
clc
les
adc
ficoml
in
push
je
bound
jne
push
mov
pop
xor
addb
mov
popf
cld
loope
addr16
pop
out
dec
sbb
mov
pop
mov
cmp
subl
jmp
xor
fiaddl
popa
adc
cli
xor
inc
lods
leave
fs
scas
call
movsb
in
test
xchg
dec
call
sbb
sub
jnp
int3
add
inc
repnz
mov
push
sub
fstl
lock
inc
outsl
orl
lret
adc
enter
xor
adc
cmc
cltd
ficompl
fcmovnu
sbb
ds
jecxz
out
mov
pop
scas
sub
cmpsl
pop
sarb
lret
pop
outsl
xchg
mov
pop
dec
add
sbb
loope
jg
mov
mov
push
dec
fcompl
jns
out
pop
arpl
out
jne
cmpl
sahf
jg
adc
icebp
loope
dec
sbb
mov
cmp
adc
or
pop
fstpt
xor
pop
popf
or
cmp
aam
jne
add
ret
aam
xor
sbb
adc
jo
mov
or
das
push
add
inc
ss
xor
in
sbb
mov
push
ret
or
mov
out
cmp
push
cmp
mov
xchg
das
hlt
adc
pop
stos
sub
jmp
test
push
and
fsubr
mov
sahf
cmpsl
mov
and
cmp
div
jecxz
xchg
cwtl
pusha
or
and
into
or
int
mov
mov
lret
pusha
decb
ss
test
jne
jae
scas
mov
std
add
icebp
jl
sbb
sbb
pop
sub
xchg
mov
jns
mov
xor
js
push
out
dec
and
lods
sbb
andl
data16
inc
mov
mov
cmc
paddusw
sar
jge
adc
dec
lahf
mov
xchg
imul
pop
pop
data16
insl
shufps
sbb
rcrb
dec
jb
lret
mov
lea
roll
mov
sub
sbb
cmp
mov
pop
push
jl
idivl
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
jb
stos
lock
sbb
test
sbb
cmp
jge
sub
jge
pop
sub
sub
mov
sbb
test
mov
adc
push
fbstp
lea
sti
xor
ss
inc
shlb
shlb
push
outsb
insl
mov
mov
stc
jg
inc
dec
or
pop
enter
inc
mov
mov
dec
xlat
push
mov
xchg
push
daa
aaa
adc
inc
sti
call
push
adc
push
rcll
mov
cmpsb
lea
mov
xor
and
mov
mov
icebp
xor
push
int3
mov
adc
in
jmp
leave
test
sub
lcall
test
fwait
fwait
jo
inc
mov
shlb
adc
ds
pop
adc
mov
pop
enter
loope
jbe
pop
je
adc
andl
push
sbb
jbe
pop
dec
movsb
and
or
inc
fstpt
xor
mov
push
mov
and
adc
mov
and
dec
xor
out
mov
iret
xchg
aad
lcall
pusha
sub
xor
push
sub
shlb
enter
stos
adc
sbb
add
loopne
mov
nop
imul
or
inc
stc
add
mov
pop
add
sbb
mov
jle
cmp
sti
adc
clc
adc
push
sub
and
mov
sbb
inc
nop
and
aas
or
in
adc
rcrl
movb
repz
jl
movsl
clc
pushf
jo
adc
rol
mov
shll
sbb
std
sub
out
xchg
pop
add
jno
fbld
xor
jg
je
iret
pop
fdiv
push
jno
and
jae
xlat
add
sbb
and
sbb
into
es
sub
push
clc
fidivrl
mov
es
xor
popa
adcb
cmp
fstl
lea
xor
xor
push
fwait
xor
arpl
xchg
or
inc
mov
inc
pop
pop
out
mov
les
mov
xor
mov
repz
sarl
mov
jns
lret
add
add
sbb
popa
pusha
aaa
or
jns
push
mov
test
or
mov
insl
mov
push
sti
sub
aas
das
test
rolb
inc
insb
stc
mov
xor
ror
jno
sbb
jp
pop
mov
mov
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
addb
xor
sbb
cmpsl
mov
push
repnz
inc
dec
push
mov
jns
pop
in
dec
pop
cmp
jge
sahf
mov
dec
and
mov
mov
dec
mov
mov
mov
std
pop
inc
mov
push
sarl
outsl
outsb
jb
pop
adc
test
xor
sbb
lret
and
push
pop
lea
mov
xor
xchg
mov
dec
jo
mov
lock
or
test
and
dec
std
dec
ret
mov
inc
push
and
cmp
and
gs
pop
xor
ja
dec
push
sbb
xchg
lahf
add
adc
dec
jmp
out
mov
jne
aad
sbb
jecxz
imul
addr16
jp
jbe
in
ja
mov
sbb
adc
fwait
ret
scas
adc
xlat
and
dec
jbe
or
stos
add
iret
mov
stos
fwait
dec
or
out
push
adc
addl
mov
insl
xor
xlat
leave
imul
jno
ror
lret
xor
loope
jg
lret
fbstp
mov
inc
and
pushf
mov
sbb
xchg
xchg
lds
xchg
jo
cmpsl
lret
xor
rcrb
dec
mov
fnstcw
mov
jl
negb
cwtl
dec
mov
aas
repz
iret
rolb
sbb
pop
add
adc
mov
cmpsb
lock
inc
pop
lds
cmp
call
cmp
lock
mulb
mov
pop
call
lahf
pop
stc
sub
mov
lcall
shl
popf
or
adc
js
outsl
jg
mov
imul
inc
test
fldenv
fisubl
scas
xchg
enter
repz
int
sahf
gs
mov
cmpsl
pop
inc
adc
push
adc
push
mov
ss
test
sahf
mov
outsb
mov
lcall
dec
test
pop
imul
mov
pop
lret
pushf
jp
dec
sahf
mov
rol
adc
imul
int
jo
lods
loop
mov
notb
lea
add
enter
sub
loope
fnstenv
mov
cltd
sbbl
jo
mov
adc
mov
fstl
mov
repz
jl
xor
xor
leave
adc
call
sub
sub
ret
and
mov
xor
movl
movl
jmp
aas
mov
mov
dec
mov
jns
adc
sbb
test
sbb
aaa
jge
fdivp
rcrl
or
daa
lods
mov
ret
push
xchg
iret
orl
mov
lret
mov
mov
dec
xor
loopne
and
fnstsw
icebp
dec
jno
cmpsl
pop
push
sub
shlb
lea
mov
and
push
mov
sub
pop
je
bnd
cmp
push
mov
mov
imul
loopne
jno
loope
daa
ljmp
in
inc
rcl
test
dec
and
sbb
pop
aam
cli
fdivrl
addr16
fmuls
cwtl
jle
mov
rcrl
mov
fimuls
ret
fstpl
add
loopne
inc
fists
add
pop
jp
push
mov
sbb
mov
push
mov
popa
outsl
xor
aas
jb
mov
bound
cmpsb
inc
insb
jl
icebp
stc
sti
mov
out
adc
imul
cmc
jp
mov
mov
xchg
mov
out
outsl
jns
mov
mov
xor
lock
xor
cmc
sarb
outsl
sbb
pusha
hlt
rorb
fwait
mov
and
mov
sub
mov
fdivs
mov
dec
lahf
push
imul
lahf
xchg
add
fisubs
std
dec
ret
xor
adc
xchg
les
and
jle
mov
sti
sahf
rcrb
xor
and
iret
mov
xchg
jo
xor
daa
xchg
xor
lods
rorl
pop
or
clc
test
lret
jle
pop
and
cmp
shlb
mov
fwait
xor
fstl
cmpsl
out
and
cmpsb
inc
and
dec
pop
stos
mov
xchg
push
add
sahf
stc
addr16
leave
pop
or
cmp
lret
jl
push
push
dec
rcr
inc
cmc
push
mov
xchg
fbld
fs
push
sub
lahf
pop
divb
ja
pop
popa
dec
mov
test
fsubl
test
push
ficomps
xchg
push
cmc
xchg
int
cld
repz
add
js
mov
adc
jl
and
xchg
lock
out
or
mov
stos
mov
nop
test
out
mov
sub
lods
jge
loopne
mov
add
or
push
stc
ror
xchg
push
adc
or
clc
push
lock
sbb
lcall
mov
push
cmp
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
cmp
jle
ljmp
jg
testl
mov
loope
pop
mov
push
sub
scas
cs
pop
test
call
loopne
pop
in
xchg
xchg
inc
cmpxchg
xchg
dec
cmp
popa
andl
daa
je
in
mov
shlb
pop
aad
add
ficomps
jl
push
lods
fs
in
cld
rcl
sbb
pop
push
jmp
notb
cmpsl
jle
pushf
fldl
nop
or
sub
fdivl
jns
lcall
fcmovnbe
fbld
lahf
sub
in
sti
dec
inc
loope
std
push
jbe
and
jecxz
aaa
xchg
dec
fsubrp
mov
adc
adc
daa
jle
cli
push
loop
or
add
rorb
pop
jge
xlat
lcall
xor
dec
test
data16
es
cmp
sub
pop
out
lcall
sbbl
mov
popl
leave
mov
xchg
cmpsb
scas
ja
push
jae
xchg
ljmp
out
aas
mov
mov
mov
ret
test
xchg
push
pop
les
inc
ror
push
push
push
xchg
mov
mov
js
mov
dec
pop
mov
pop
movsb
mov
mov
jp
dec
hlt
and
jo
xchg
mov
and
push
xchg
mov
loope
mov
out
repz
ds
mov
ret
or
inc
inc
and
test
adc
push
dec
xlat
repz
and
std
or
xchg
lods
pushf
mov
ja
sbb
leave
movsl
scas
mov
xchg
push
mov
sbb
test
pop
out
xchg
dec
in
fwait
call
fsub
xchg
into
mov
pop
lds
mov
push
sbb
loope
pushf
lods
xchg
loope
xor
aas
sub
mov
cltd
push
fisubrl
jecxz
push
out
dec
inc
sub
pop
shll
outsl
push
sub
scas
and
xor
das
add
mov
xor
jbe
mov
imul
push
inc
popl
dec
jbe
cmp
cmp
sub
mov
stc
jns
stos
in
push
xor
push
outsl
adc
outsl
mov
dec
mov
and
int3
push
insl
push
adc
adc
pushf
lahf
das
idivl
sahf
cmp
mov
xorl
cmp
sarl
shll
push
pop
daa
aad
lcall
mov
xchg
or
adc
cmp
and
jne
mov
adc
scas
add
js
into
out
adc
jle
sbb
sbbl
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
xchg
dec
jle
out
sbb
ljmp
push
cld
fldl
mov
push
call
stos
inc
sbb
shll
pop
dec
insb
pusha
push
mov
popf
aam
push
pop
and
dec
int3
or
leave
ret
push
jg
cmp
daa
mov
push
cwtl
loopne
mov
mov
mov
jl
je
jno
jbe
sbb
mov
xchg
inc
in
fsts
outsl
xor
jecxz
jno
cld
jb
pushf
fstps
xchg
fwait
mov
add
inc
pop
jmp
fistl
xor
popf
jp
push
sub
cli
and
push
jns
mov
mov
dec
std
mov
ret
mov
push
fisubl
cld
xchg
push
pushl
cmp
shr
push
cli
pop
ja
lret
rcl
nopl
jecxz
sub
lcall
ret
ljmp
leave
ss
pop
mov
adc
jp
fdivrl
mov
xor
ja
les
popf
sub
je
fisubrs
mov
sbb
pop
xor
add
aad
cmp
insl
or
add
xchg
stos
sbb
xchg
xchg
jb
jecxz
cmp
lret
in
or
enter
sahf
or
inc
jns
stc
add
cmp
sbb
subl
jnp
iret
inc
stos
cwtl
mov
sbb
inc
movsb
test
enter
dec
pop
lods
rcrl
sub
testl
jmp
test
mov
and
adc
sahf
sub
jg
arpl
rcll
cld
fisubl
jns
enter
inc
mov
mov
inc
pop
lcall
sub
jl
inc
cltd
dec
insl
ds
mov
dec
inc
or
jns
ds
rolb
out
xchg
outsl
push
out
mov
fstpl
stos
jmp
dec
inc
inc
mov
add
fldenv
or
sbb
aam
test
pop
mov
add
and
sar
adc
xchg
int
hlt
lret
add
flds
jo
mov
xor
out
sub
mov
je
iret
add
call
lock
push
push
push
hlt
and
or
lds
xchg
mov
pop
sti
rcrl
push
xchg
mov
aam
sti
aaa
mov
out
test
push
pusha
das
hlt
outsl
jmp
adc
clc
loope
je
js
sahf
or
ret
push
xor
decl
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jl
loopne
sbb
sub
test
inc
lods
cmp
in
mov
push
sbb
pop
sti
out
lret
mov
jecxz
or
mov
jo
xchg
mov
jle
and
icebp
lea
cli
faddl
or
stos
fs
pop
ljmp
cmc
mov
cmc
roll
jne
pop
mov
inc
rcll
and
out
and
xlat
mov
js
xchg
call
in
dec
imul
lcall
fdivp
rcll
fmuls
out
pop
sub
lcall
in
shrb
mov
inc
icebp
adc
iret
ss
int3
mov
iret
mov
jo
mov
push
imul
inc
jbe
pusha
or
cltd
jp
addb
leave
adc
xchg
adc
push
in
mov
mov
cmc
shll
iret
mov
clc
fidivs
ficoms
loop
mov
fwait
jecxz
push
pop
add
jle
push
fdivr
mov
test
outsb
mov
sti
cli
scas
mov
mov
pop
sbb
and
cltd
push
xchg
adc
negl
xor
mov
xchg
cmp
out
add
popa
adc
mov
cmp
movsb
xchg
repnz
aaa
inc
pop
push
mov
and
cmp
in
xchg
ljmp
dec
adc
das
pop
cmp
xor
xchg
mov
push
in
repnz
or
fmul
movsl
adc
sbb
enter
mov
arpl
dec
sbb
cmpsl
in
jge
in
jmp
pop
mov
insl
pushf
mov
fisubrs
add
rorl
and
xor
sub
movsl
insb
movsb
ret
stos
add
jbe
mov
mull
pop
out
negb
test
punpckldq
push
repnz
rcrb
aas
sbb
shlb
dec
mov
add
push
jnp
sbb
and
stos
mov
mov
test
rorb
imul
jecxz
and
cld
and
jo,pt
cmp
fisubrs
das
jne
test
ljmp
pop
vpshlb
int
cwtl
std
rcrl
das
mov
insb
cmpsb
mov
popf
push
cld
mov
mov
out
dec
add
pop
xor
popf
fstl
je
leave
xchg
mov
lock
mov
or
cld
repz
xor
in
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
nop
dec
jle
ficompl
sbb
adc
sbb
std
fdivp
test
out
jmp
xchg
std
mov
repz
add
int
push
fwait
ds
jl
and
mov
adc
nop
in
ss
cmp
frstor
lcall
loopne
xchg
and
sahf
add
pop
les
xor
mov
fisttpll
jo
shr
popf
mov
push
mov
cwtl
sbb
pop
mov
in
cmp
scas
xor
js
aas
dec
test
adc
sbb
push
lods
push
divb
ss
dec
test
cmp
sbb
jae
cmp
adc
outsb
aas
xchg
xor
add
int
push
dec
push
push
mov
dec
mov
dec
je,pn
scas
insb
add
xor
sbb
daa
pop
adc
push
or
imul
jle
lret
ss
es
stc
fcmovnu
out
aas
and
xchg
inc
jae
cs
sub
ljmp
pop
sbb
faddl
ljmp
in
xor
aas
mov
dec
aad
add
sbb
sbb
jb
bound
rcll
mov
fsubs
dec
dec
pop
cli
out
adcl
inc
gs
mov
push
pop
inc
xchg
xor
sbb
jno
daa
mov
test
xor
and
cmpsb
lret
mov
out
cmp
xorl
cmp
mov
xchg
lret
xor
in
xchg
cmp
fisubrs
jnp
and
icebp
shll
adc
iret
sub
int
adcl
int
or
fstpl
jb
in
dec
cmp
xor
and
cmp
je
inc
or
push
xchg
movsl
cli
jne
dec
dec
pushf
xchg
push
cmp
push
mov
mov
cwtl
es
push
push
push
and
push
adc
std
shlb
dec
mov
cmp
mov
jg
cmp
mov
test
jns
push
xor
inc
mov
mov
stos
inc
pop
pop
cmc
outsl
push
push
pop
jo
xlat
into
jl
loop
data16
les
dec
pop
mov
cmpsb
repz
loop
std
jp
mov
stos
inc
out
jl
in
fs
and
in
nop
cmovp
jne
sub
sub
push
xchg
push
or
ds
fisubrs
cmpsl
jb
and
mov
ud1
les
or
imul
or
std
mov
dec
scas
sub
enter
pop
mov
pop
mov
xchg
ljmp
jle
into
push
fnstsw
sbbb
adc
popf
movsl
mov
dec
in
in
jge
arpl
mov
jg
push
scas
loop
mov
fcoms
stc
add
lods
popa
into
repnz
pop
cld
xchg
jo
rclb
add
in
lret
sbb
and
cwtl
push
out
fs
mov
fbstp
add
frstor
pop
dec
mov
fidivs
pop
adc
xchg
jecxz
mov
jnp
lret
sub
mov
mov
mov
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
pop
inc
push
aam
sbb
adc
sbb
loope
es
sbb
cltd
sub
stc
lock
pop
add
jns
add
adc
or
mov
stos
aaa
aad
adc
push
lahf
pop
iret
cld
lahf
lea
jle
pop
movsl
shr
bound
test
or
xchg
ret
gs
xor
aam
push
add
jmp
or
push
call
aas
adc
pop
xchg
loop
push
mov
push
in
jg
dec
imul
cld
sbb
fwait
sarb
jne
pop
fs
jne
dec
mov
daa
push
cltd
pop
jbe
push
sbb
rcrl
jnp
dec
mov
mov
cs
or
sub
xor
pop
mov
mov
lea
mov
push
xor
inc
inc
cli
jnp
jl
pop
push
and
ds
ljmp
ds
mov
bound
xor
push
sub
pop
add
out
or
lds
xchg
pop
test
outsl
sbb
pop
test
jnp
repz
push
mov
xlat
xor
fwait
mov
mov
aaa
and
movzwl
mov
bound
mov
call
push
or
jnp
push
cmp
in
add
ja
popf
xchg
push
popa
leave
sub
jnp
mov
sahf
cmp
or
cmp
mov
sbb
jg
sub
faddl
ljmp
fiaddl
and
mov
mov
scas
dec
bound
orb
jp
in
jmp
icebp
mov
lahf
out
and
jo
sub
mov
push
mov
mov
add
adc
push
fs
or
jbe
repnz
mov
xchg
int3
mov
jecxz
ret
and
into
arpl
insb
outsl
mov
xlat
xor
mov
inc
ret
and
xlat
lret
jno
out
mov
cwtl
sub
das
jae
pop
pop
cld
pop
pushf
jge
outsl
and
push
shll
xchg
cmp
push
repnz
push
fs
add
or
adc
clc
xchg
mov
testl
outsb
ficomps
cs
pop
mov
loop
and
stos
in
jo
mov
rol
push
mov
pop
jl
and
nop
mov
mov
dec
sub
xlat
ret
adc
sub
mov
into
mov
insl
push
push
rcl
xor
test
je
xor
cmc
cltd
out
dec
pop
scas
jo,pn
out
inc
jmp
cmp
or
fs
pop
xchg
lods
repnz
cmp
mov
xor
mov
cmp
flds
jae
loope
cmp
cmp
movsb
jbe
ljmp
sub
daa
adcb
pop
inc
mov
or
cmc
sbb
mov
into
dec
push
leave
push
push
adc
leave
into
pop
inc
test
adc
fdivrl
add
or
out
jle
push
sahf
fisubrl
mov
cmp
cmp
mov
cltd
jle
sbb
adcl
mov
or
xchg
outsb
clc
movsl
jns
scas
xor
out
test
adc
shll
fsubrs
push
fld
or
xchg
test
xlat
pop
xor
cmp
push
loopne
pushf
or
pop
jns
mov
push
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
loope
scas
idiv
popa
jo
mov
push
mov
dec
push
ficomps
jnp
mov
sti
repz
xchg
mov
nop
fldcw
aam
and
mov
jo
mov
xor
dec
cwtl
xchg
daa
mov
jb
dec
icebp
mov
push
jmp
test
jbe
adc
add
scas
inc
scas
mov
sbb
pop
in
bound
lds
je
xchg
shll
cmp
je
jecxz
mov
loopne
das
nop
mov
xchg
and
rorl
out
ret
aad
int3
cs
ss
xlat
daa
fsub
sub
lret
pop
push
aas
xor
push
sbb
inc
mov
stos
rcl
dec
adc
roll
mov
leave
or
xor
test
lcall
jnp
into
out
adc
jmp
aam
dec
call
in
movsb
mov
xchg
mov
sub
mov
sbb
jl
cltd
daa
test
push
jbe
or
jns
mov
cmp
xchg
adc
outsb
cs
add
pop
pop
xlat
cmp
mov
vmovq
push
data16
xor
dec
ljmp
out
ficoms
arpl
cmp
jmp
enter
dec
lahf
lods
push
js
out
testl
int3
jmp
fdivs
cmpsl
jae
inc
dec
mov
jmp
int3
clc
insb
adc
jp
adc
std
pop
sahf
stos
sub
adc
sbb
adc
dec
pop
stc
mov
add
sub
pushf
and
dec
fs
daa
pop
add
or
pop
out
pop
lock
mov
pop
jnp
jg
add
int3
mov
rclb
daa
xchg
clc
and
andb
mov
rcll
mov
js
cmp
aam
push
dec
ja
in
popf
mov
push
xchg
jb
sub
cs
test
inc
cli
mov
pop
in
mov
push
lds
out
add
inc
fdivl
cld
fdivp
int
es
loope
mov
lcall
scas
pushl
dec
out
mov
and
add
pop
adc
ds
fstp
mov
inc
movsl
xchg
xchg
repz
cmp
mov
push
adcb
xchg
dec
xor
in
sbb
int
inc
inc
sub
iret
cwtl
add
dec
enter
ja
rcl
std
and
dec
push
divb
sbb
test
dec
jae
int3
les
stos
xchg
mov
in
leave
lcall
sbb
rol
popf
cld
mov
mov
xor
adc
inc
jg
or
xor
mov
adc
add
xchg
or
xor
xlat
stos
or
lock
out
adc
dec
or
aas
mov
fwait
mov
xor
stos
push
jae
jl
mov
icebp
push
push
mov
or
inc
pop
stos
out
xchg
lcall
shrb
pop
mov
loop
mov
nop
push
mov
cmp
insl
jnp
mov
lahf
test
in
add
pop
divl
or
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
test
sbb
xor
sbb
sub
and
fdivl
gs
xor
sub
je
out
cmc
arpl
fs
mov
xlat
imul
fbld
inc
repnz
data16
or
mul
gs
insl
cli
scas
push
mov
das
push
and
cmp
inc
es
mov
mov
mov
adc
out
scas
sub
mov
sbb
and
xchg
add
repnz
out
rcll
adc
cmp
stos
or
jb
repnz
test
testl
paddb
data16
inc
inc
fiaddl
lret
rolb
sub
fdivp
mov
inc
pop
in
adc
sti
popa
leave
test
sbb
outsb
xor
dec
loop
lret
lock
out
hlt
pop
cmp
mov
or
xor
cmp
jnp
enter
lret
mov
adc
mov
test
or
jmp
push
ds
negl
enter
inc
xor
in
je
lds
jmp
xor
fdivr
push
aaa
arpl
cmc
stos
in
xchg
sbbl
cmpsl
ret
pop
jns
dec
cmpsl
adc
aad
call
mov
out
cmp
lcall
add
dec
mov
ljmp
aad
clc
ljmp
cmp
fcoms
jle
scas
mov
dec
ja
mov
cmp
sub
icebp
mov
bound
mov
sub
cmc
adc
inc
pusha
ljmp
test
dec
add
or
scas
jge
mov
jns
rolb
mov
test
mov
inc
cmp
xorl
int
or
das
in
in
or
mov
in
cmp
icebp
inc
or
xor
out
xchg
sub
ds
loop
mov
fnstcw
inc
add
jno
fbstp
insb
cwtl
push
cmp
mov
loop
bound
lock
inc
outsb
xor
dec
push
rolb
mov
call
out
pushl
in
outsb
mov
pop
dec
lds
js
xchg
or
jbe
out
notb
jns
test
addr16
sbb
pop
insb
fwait
jg
mov
xor
jb
mov
mov
daa
jo
cltd
into
addr16
adc
mov
pop
fsubrl
lds
push
sub
and
mov
dec
hlt
mov
rcl
les
clc
or
mov
mov
jne
sahf
sbb
insb
shr
mov
xor
outsb
sarl
ljmp
dec
cli
aaa
adc
mov
jnp
jno
scas
pop
rcl
loop
adc
scas
sbb
push
jo
add
mov
ljmp
sub
lret
es
xor
and
scas
adc
in
xor
or
add
cmp
mov
xchg
add
inc
mov
pop
add
aaa
daa
sbb
pmaxub
sbb
sarl
test
pop
push
bound
or
xchg
outsb
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
test
jle
mov
sbb
pop
pop
jmp
stos
and
mov
je
rclb
ret
imul
push
mov
mov
subb
in
sbbl
push
and
hlt
aaa
adc
repnz
je
dec
dec
or
gs
and
test
ja
pop
or
dec
cmp
mov
sbb
sar
scas
sbb
push
pop
mov
add
sub
ljmp
in
fsubrs
mov
pusha
cs
fs
out
and
pop
in
mov
mov
data16
mov
cmpl
mov
arpl
ficomps
test
pop
mov
cmp
leave
and
subl
clc
in
mov
leave
sahf
lea
mov
in
jb
testl
sub
mov
mov
addb
sahf
and
mov
adc
mov
fnstsw
cmpsb
push
arpl
clc
pop
out
inc
andb
jecxz
cmpsb
mov
push
aad
insb
enter
push
xor
push
adc
test
cld
sbb
add
xchg
inc
xor
inc
icebp
fdivrp
bound
mov
dec
pop
xchg
jl
jo
inc
test
mov
or
pop
or
in
inc
lods
xor
sub
mov
call
pop
scas
pop
int3
repnz
xchg
push
mov
mov
or
sub
sub
jecxz
add
mov
mov
hlt
xchg
lret
std
adc
in
fwait
gs
push
pop
cmp
cmp
adc
test
nop
out
and
and
and
jge
sbb
pop
pop
pop
fldt
cld
test
jb
inc
or
ja
and
sub
sbb
repnz
push
js
in
push
push
jo
fsub
arpl
push
aas
xlat
in
push
call
mov
xor
adc
and
adc
popf
loopne
jb
cmpsl
mov
jmp
scas
jne
push
inc
jb
ret
inc
push
jp
loopne
cs
aam
xchg
lahf
dec
mov
lods
mov
out
stos
push
addl
fcomps
jg
pop
dec
pop
jbe
mov
insb
jae
cmp
mov
test
add
lahf
dec
add
mov
aas
jl
fbstp
dec
cmp
cmp
cmp
dec
and
dec
mov
nop
in
fimuls
inc
mov
fwait
arpl
in
ljmp
inc
lret
daa
test
ror
add
mov
xor
push
loop
cmp
rorl
mov
and
sbb
and
jbe
jle
fisubrs
into
push
mov
repz
mov
imul
push
sbb
xor
xor
cwtl
jno
adc
shrl
rorl
pop
mov
stos
jb
sbb
jno
xchg
out
sub
jg
dec
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
addr16
enter
xor
sbb
dec
sub
xchg
cmp
or
out
les
xor
nop
jmp
movsb
andl
and
adc
jmp
push
mov
in
xchg
jne
mov
push
xchg
lahf
pop
mov
repnz
icebp
cmp
fldcw
dec
xchg
les
fidivrl
sbb
jne
nop
pop
or
mov
push
lock
iret
jno
stc
add
pop
out
out
movsb
add
add
mov
or
push
ss
jae
clc
mov
fldl
push
or
sbbb
jl
sub
loop
rclb
sub
aas
mov
sbb
xlat
push
cmp
pop
push
jnp
nop
es
inc
sub
xchg
adc
fwait
xor
ja
inc
out
mov
gs
fsts
pop
pushf
stos
mov
gs
lret
mov
fisubrs
filds
insb
mov
mov
dec
sub
push
or
cvttps2pi
adc
push
lock
mov
andl
lret
mov
popf
jle
lods
in
hlt
xchg
inc
cli
shll
jns
pusha
dec
ret
pop
bswap
and
jecxz
or
push
mov
std
inc
xchg
mov
out
mov
sub
pop
hlt
push
and
notb
mov
lcall
cwtl
cmp
aad
popf
or
out
cltd
ja
sahf
jnp
xor
add
inc
insl
jbe
test
adc
cld
jne
cs
scas
push
sub
sbb
push
je
lods
mov
xlat
mov
mov
clc
rcrb
cmp
repz
dec
xrelease
xor
jg
jns
dec
sbb
je
sub
divl
jmp
dec
nop
dec
cwtl
jmp
popa
in
xchg
arpl
xchg
sbb
movsb
jae
mov
clc
xor
daa
dec
sub
arpl
push
lods
push
mov
xchg
test
inc
mov
outsl
inc
fimull
dec
push
sub
jl
xchg
push
jae
add
xchg
outsl
push
or
dec
dec
iret
inc
pop
nop
sbb
xor
enter
andb
ds
scas
dec
pop
clc
cli
xor
mov
jle
ret
mov
mov
mov
xchg
stos
faddl
xchg
sbb
movsl
ja
test
std
pop
dec
aam
in
orb
test
or
dec
lods
jle
dec
push
fdivs
push
cmc
fs
mov
in
lahf
fstpl
or
lcall
sub
xchg
mov
mov
xor
daa
xor
sub
mov
fbld
arpl
dec
popf
jecxz
push
aam
xchg
add
std
out
sbb
jne
clc
mov
cmp
xchg
leave
mov
sti
lcall
int
je
sbb
pusha
mov
and
leave
pop
add
xor
xchg
testb
mov
popa
mov
and
lret
mov
pushf
arpl
adc
addr16
xchg
or
mov
call
adc
outsl
pop
sub
pop
stc
addr16
mov
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
daa
mov
sbb
xor
sbb
scas
sub
fimuls
pop
xchg
push
xchg
jecxz
push
jae
adc
fcomps
and
repnz
inc
movsb
xchg
incl
inc
ret
and
ror
fiadds
and
add
mov
mov
mov
sahf
push
cmp
push
ljmp
jb
push
and
out
pop
push
sbb
incl
idivb
mov
push
shlb
lahf
jb
mov
mov
rcrb
xor
dec
push
dec
fwait
pop
dec
lret
pop
mov
sub
add
ret
lods
in
addr16
aam
cwtl
lcall
call
shrb
jbe
int
sub
lret
push
sbb
addr16
sti
mov
push
sub
lock
sti
mov
les
sub
jecxz
loopne
jne
rcrl
pusha
dec
sub
and
fisttpl
jg
fadds
lods
aaa
and
filds
arpl
cwtl
mov
adcl
mov
movb
outsb
sub
ljmp
test
out
sub
or
mov
cmpsb
mov
mov
pop
std
ljmp
bound
pop
inc
xor
nop
xchg
stos
xlat
jbe
xchg
icebp
xchg
jo
xor
pop
jnp
scas
call
hlt
ret
pop
adc
pusha
outsl
sub
out
inc
popw
incb
pop
mov
pop
into
lods
xchg
jne
imulb
fsubrs
sbb
out
pop
xor
xor
pop
jecxz
cmpsb
adc
mov
push
pop
test
push
shlb
sub
fucom
mov
push
pushf
push
bswap
push
and
out
jno
insl
jbe
sbbl
sub
mov
dec
jp
mov
pop
mov
rorl
lcall
imul
ror
out
jmp
mov
inc
mov
sti
xchg
add
xchg
pop
push
fwait
clc
into
lcall
popa
sbb
mov
sub
mov
cs
addps
mov
mov
xlat
or
or
mov
pop
sub
fmulp
fidivl
scas
test
mov
cmp
loop
or
ret
mov
std
into
or
aam
pop
dec
pop
leave
repz
in
adc
sbb
dec
add
add
imull
sbb
sub
cmp
rcrl
ds
adc
sub
push
dec
jp
addr16
arpl
adc
call
subb
or
dec
ds
add
je
shlb
push
leave
mov
mov
xchg
add
rclb
or
mov
movntps
movsl
cwtl
lahf
movsb
add
mov
adcl
mov
mov
es
push
and
notb
mov
ss
adc
fisttpl
fdivs
fnsave
fmuls
adc
jmp
scas
add
lds
lods
lret
mov
mov
cmp
inc
inc
mov
movsl
or
outsl
popf
adc
and
and
and
lret
bound
lahf
inc
decl
xor
out
mov
xor
test
mov
jae
jle
loope
jmp
jno
pop
mov
sahf
stc
push
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
and
jl
stos
sbb
test
xor
fisubs
jno
xor
pop
enter
or
flds
jg
mov
jbe
pop
inc
ja
sub
movsb
out
pop
fwait
inc
push
hlt
jmp
leave
rorl
mov
cmp
sti
ret
pop
and
mov
push
xor
jb
pusha
out
mov
testb
xor
mov
ret
mov
lods
sub
mov
aas
jo
or
cltd
cmp
scas
fucom
sahf
in
mov
mov
sub
mov
dec
adc
sbb
arpl
cmpsl
xchg
lea
push
shrl
xchg
mov
dec
jecxz
adc
add
mov
add
lock
adc
nop
sbb
or
fisttps
cld
or
test
dec
jb
lock
mov
test
xor
push
mov
orb
sub
pop
inc
stos
mov
pop
cmp
cmp
jne
mov
mov
pop
jae
xchg
jb
mov
ffreep
lea
xchg
bound
cmp
lret
sub
xor
fwait
iret
into
mov
inc
sbb
loop
jno
push
mov
mov
into
pop
orl
sbb
pop
push
fistpll
or
inc
imul
push
clc
dec
mov
xchg
imul
adc
call
pop
mov
lods
imul
cmpsl
sub
fwait
ret
aam
mov
push
xchg
pop
repz
adc
sbb
sub
incl
and
add
cs
mov
idivb
mov
mov
scas
scas
dec
insl
adc
test
cmpsl
cli
pushf
sbb
push
fcoms
push
push
adc
cmp
stos
stos
push
jne
fbstp
mov
cli
repz
xor
cli
xlat
push
cmp
push
mov
jmp
iret
mov
in
stc
inc
ret
cmp
pop
sub
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
js
add
subl
fsubrl
mov
push
aaa
xlat
mov
or
es
add
arpl
jecxz
mov
inc
jae
sbb
adc
xchg
clc
xchg
push
jecxz
scas
pop
int
repnz
sarb
or
pop
push
movsb
xchg
mov
or
fwait
inc
arpl
or
push
ljmp
mov
ror
sbb
jnp
mov
lds
mov
cmc
sbb
mov
push
nop
pop
mov
mov
sub
lods
mov
clc
sub
sbb
shll
in
pop
inc
idivb
xchg
outsl
adc
aas
and
in
sbb
pop
hlt
sbb
inc
cmc
xchg
xchg
and
mov
in
adc
jb
dec
call
push
fstpl
fildl
xchg
aad
or
popl
adc
mov
xchg
cs
jle
stc
fdivrs
mov
dec
sub
pop
jns
sbb
jnp
adc
jg
sub
sbb
or
cmpsl
dec
lahf
xchg
jg
enter
pop
add
push
or
pop
jmp
repz
adc
stc
es
and
pop
cs
jnp
in
dec
popf
mov
push
cltd
mov
shlb
pop
inc
arpl
or
jmp
imul
jmp
push
es
lods
lods
pop
sub
jle
sub
mov
mov
aas
arpl
movsb
subb
jbe
sub
lcall
add
adc
pop
out
or
jns
xchg
sub
cmpsb
pop
movsb
lcall
adc
fnstsw
xchg
pop
mov
push
int3
cmpsl
aaa
add
xchg
mov
nop
sub
inc
jp
inc
outsb
adcb
arpl
pop
fisttps
loope
sub
cmc
pop
sub
pop
cmp
or
or
mov
scas
ret
sub
mov
cmp
ret
fiadds
sbb
jae
xchg
pop
ljmp
lea
call
push
lock
push
jmp
sub
and
jb
push
stos
push
or
sbb
sbb
rcrl
addb
inc
lret
and
pushf
mov
mov
dec
fstps
shlb
sbb
push
cmp
push
jb
xchg
sub
in
sbb
xchg
mov
push
xchg
pop
mov
bnd
ud1
inc
js
pop
jmp
in
push
es
popa
xor
data16
hlt
add
std
ficomps
cmp
es
xchg
jno
hlt
and
jmp
lods
std
cmpsl
sub
enter
mov
ret
jp
push
xchg
icebp
mov
fnstenv
add
cmp
dec
sbb
fistps
add
mov
cmpsl
repnz
sub
jno
stos
jo
sbb
pushf
sbbl
inc
and
les
stos
mov
pop
out
jne
data16
push
dec
pop
adc
daa
lcall
cltd
dec
jb
in
jmp
cwtl
es
sub
mov
jns
fsts
sub
jo
mov
aad
cmpsl
mov
and
aad
mov
inc
stos
or
mov
aam
jl
out
mov
stc
sub
mov
xchg
cmp
mov
lcall
mov
test
mov
or
cmp
mov
and
push
inc
adcb
or
mov
out
nop
mov
xchg
fs
jle
sahf
mov
inc
adc
mov
fs
aas
adc
lock
add
jae
aam
rcr
scas
adc
cmpl
call
rorl
cmc
push
in
int3
pop
ja
inc
and
jmp
inc
out
pop
fbld
or
jmp
mov
push
aaa
popf
out
jno
adc
inc
fcomps
jecxz
adc
nop
jle
in
mov
cmpsl
ljmp
or
movsb
test
ss
push
or
mov
fistpll
insb
sub
mov
mov
insl
test
xchg
and
mov
iret
mov
sub
mov
ret
sub
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
imull
mov
test
push
orb
lds
insl
ret
out
mov
in
mov
loope
out
stos
mov
mov
sub
lds
inc
inc
cli
arpl
mov
js
xor
rcll
push
sub
in
push
subl
add
add
nop
cmp
jg
orb
hlt
imul
outsl
cltd
test
in
loopne
insb
push
addr16
xor
jl
aad
jle
xchg
cmpsb
imul
jp
hlt
xchg
test
mov
xor
mov
mov
push
add
cld
loop
imul
iret
mov
xchg
dec
mov
adc
push
stos
ljmp
pop
jp
movsl
out
bound
inc
dec
mov
xchg
negb
sub
addr16
jecxz
mov
sub
scas
nop
das
aas
fildll
dec
ja
out
fnstenv
in
lret
lods
leave
xor
sub
mov
cmp
dec
fcom
std
xchg
pop
mov
cmc
sbb
ljmp
adc
xor
dec
mov
sbb
xor
sub
inc
mov
cs
xor
xchg
mov
mov
shrl
cmp
test
mov
pop
and
cmpsb
mov
and
ss
ss
pop
scas
add
xchg
jp
adc
and
mov
adc
fucomp
in
cmp
xchg
dec
into
ds
push
adc
adc
add
ret
pop
xchg
xor
push
mov
enter
xor
xlat
imul
call
sbb
repnz
jns
dec
adc
and
movsl
cld
mov
data16
xor
pushf
rcl
adc
adc
fucomip
adc
stc
jns
stc
pop
sbb
cmc
push
mov
push
call
xchg
sbb
adc
nop
sub
inc
mov
adc
rcr
dec
aaa
mov
mov
pusha
in
dec
stos
flds
xchg
lret
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
jl
mov
test
into
push
lahf
mov
repz
or
push
xchg
pop
test
mov
sbb
pusha
pop
ds
xchg
mov
cltd
inc
xor
subb
inc
outsb
cmpsb
inc
lods
cmp
sbb
imul
mov
inc
and
aaa
mov
sub
and
mov
test
sub
and
jbe
sbb
xor
or
ds
jge
jne
popf
adc
mov
cwtl
setp
xor
cmp
jl
cs
jae
xchg
xchg
cmpsb
add
jp
stc
mov
aaa
sbb
and
popa
sub
dec
and
jno
adc
fwait
sbb
adc
mov
mov
push
sbb
lret
add
cltd
adc
lea
cmp
inc
mov
iret
jecxz
sbb
add
in
fwait
ss
fidivl
testb
jmp
outsb
and
mov
inc
hlt
cs
in
lds
lahf
shrl
mov
insl
xlat
fs
roll
leave
mov
popf
dec
cmp
cmp
hlt
push
sar
das
aam
rorb
cmp
es
sbb
fs
and
aam
and
clc
add
cmpsl
jecxz
rcrb
mov
xchg
repz
in
mov
pop
mov
shll
hlt
or
punpcklwd
or
addl
pop
pop
out
movsb
inc
jno
cs
arpl
incb
mov
mov
out
shlb
push
mov
leave
mov
aam
pop
das
cmp
add
dec
cmp
stos
xlat
fadd
dec
mov
mov
mov
in
rorl
popf
jmp
lds
inc
dec
mov
in
mov
inc
iret
shr
push
mov
das
out
pop
dec
cld
ret
push
xchg
and
test
mov
dec
out
sbb
inc
sbb
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
scas
pop
das
mov
mov
ds
push
repnz
xchg
rorb
cmp
xchg
mov
xchg
movsl
hlt
gs
mov
into
popa
cmp
aas
rcll
xor
pop
jl
or
lock
push
es
mov
xchg
pop
push
and
and
mov
xor
cmp
jb
cs
adcl
jge
test
mov
lahf
out
jecxz
jno
mov
adc
mov
mov
and
add
pop
cmpsb
imul
sarb
mov
pushf
cltd
js
jns
adc
rcll
or
int3
nop
sti
scas
sbb
sub
sub
enter
cli
xchg
jne
jbe
stos
jns
imul
adc
adc
leave
test
inc
cmp
jnp
loop
ljmp
xor
jp
mov
adc
push
enter
or
mov
sahf
mov
jmp
xchg
mov
call
loop
push
inc
inc
mov
loop,pt
xchg
in
cli
xchg
jge
xor
addr16
sbb
sub
jg
jb
repnz
sbb
bound
test
daa
jmp
into
mov
adc
dec
cwtl
adc
inc
push
mov
shrb
push
inc
mov
loope
std
cmp
dec
and
or
sub
xchg
cmp
mov
insl
rcll
add
sub
add
dec
stc
and
jmp
inc
lahf
mov
push
xor
cmpsl
xchg
pop
cltd
xor
stos
or
andb
push
rorb
cmp
aad
jo
add
cmpsl
pop
jl
imul
ret
pop
dec
sbb
pop
movsb
sbb
daa
aad
outsl
jge
inc
adcb
push
xchg
rorl
fstpl
push
das
pop
ret
sbb
mov
and
mov
pop
movsb
out
mov
push
sub
push
or
icebp
mov
xor
or
jmp
push
and
mov
jl
nop
sbb
test
nop
aad
lret
imul
add
fidivl
jno
ret
adc
xor
hlt
frstor
cmpsl
push
push
jmp
and
xlat
mov
mov
lock
push
inc
decb
push
in
rcr
mul
int3
dec
xor
sbb
mov
fstl
insl
mov
pushl
sbb
shrl
and
enter
jne
cmpsl
jle
dec
divl
dec
int
sub
fwait
repnz
xchg
sub
cmpsb
arpl
movsl
mov
push
push
inc
cmp
adc
cmp
and
iret
inc
stos
adc
sarb
movsw
lahf
jne
lret
cltd
enter
popf
mov
jmp
mov
mov
ret
enter
add
or
ror
sti
rcrl
or
push
mov
outsl
out
addr16
mov
push
out
sti
subb
pop
pushf
dec
adc
jb
lahf
call
sbb
push
dec
adc
xchg
ret
cmp
les
mov
cmp
fdiv
call
dec
push
or
in
movsb
rcl
xor
mov
ds
sti
xorl
imul
sahf
jb
stc
ljmp
inc
mov
ljmp
and
inc
cmp
and
cmp
ds
fwait
inc
pop
mov
jb
stc
lods
lahf
lret
sti
int3
fbld
xchg
pop
dec
test
mov
or
fsubrs
cmp
sti
push
mov
push
xadd
pusha
mov
mov
xlat
orb
dec
pop
sub
jle
ret
add
jne
ret
jp
clc
cmp
mov
mov
or
in
stos
add
mov
push
fsubrl
mov
iret
scas
repz
and
outsl
mov
xor
popa
jo
xor
test
cmp
icebp
cld
andl
sub
leave
icebp
dec
sub
int3
lret
cli
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
xor
test
jle
notb
and
das
xchg
lock
and
mov
inc
cmp
lods
push
dec
sub
push
pushf
push
sti
add
cmp
sub
movsb
fisubs
js
push
iret
xchg
push
cld
jns
das
xchg
imul
jecxz
dec
push
addr16
pusha
xchg
cmc
orl
push
shrl
and
sbb
sbb
pop
into
shll
ljmp
xchg
mov
movl
xchg
mov
hlt
xlat
mov
scas
idivl
add
pop
cltd
popf
int
mov
add
pusha
mov
popa
push
into
xchg
dec
push
add
dec
xchg
sti
ss
lods
dec
fucomi
mov
scas
fimuls
inc
int
mov
incl
out
jbe
lods
stos
in
imul
pop
jb
hlt
pop
add
pop
and
movsl
xchg
xchg
jmp
mov
mov
cli
dec
and
adc
out
mov
add
subb
mov
adc
mov
jo
ds
jl,pt
out
cmp
mov
rcl
movsb
inc
enter
lret
dec
aas
movsl
movb
inc
xchg
adc
std
xchg
movsb
imul
sbb
push
push
test
sub
pop
push
push
imul
cli
and
cmp
psraw
jmp
addr16
push
jmp
adc
ss
dec
ret
int3
mov
inc
into
imul
jecxz
mov
ss
packssdw
xor
push
rcll
in
loopne
jecxz
mov
sub
or
push
jns
fldenv
xlat
add
imul
xor
repnz
sbbb
cmp
mov
mov
leave
jg
mov
sub
mov
mov
xchg
pop
rorb
jmp
inc
aaa
cltd
push
test
cwtl
xor
es
xchg
push
lret
lods
push
mov
pop
mov
pop
in
and
mov
leave
push
dec
sbb
mov
or
jecxz
or
pop
jno
and
add
adc
push
xlat
mov
inc
add
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
push
xchg
sbb
sbb
pushl
leave
or
ja
inc
test
lds
cmp
cld
xchg
test
call
push
movq
rol
dec
pusha
je
jns
sub
dec
pop
adc
inc
fisubrs
mov
aad
pushf
mov
mov
fimull
push
mov
jmp
aam
pop
subb
sub
inc
add
pop
fcompl
mov
mov
jns
and
in
lods
lret
fcompp
shl
inc
orb
ret
jg
fwait
push
sub
jno
jb
cli
mul
push
sbb
sti
divl
or
mov
aas
or
xchg
pop
sub
add
push
int3
sbbb
mov
loope
push
orl
pop
mov
and
pop
ljmp
adc
or
add
fwait
jg
movsb
xlat
pop
push
ret
lcall
mov
inc
xchg
mov
jl
movsb
iret
or
dec
fidivs
jle
in
call
jo
aaa
adc
imul
jle
shlb
sub
out
xor
pusha
mov
cmp
sahf
xchg
nop
push
and
add
push
into
and
cmp
mov
test
pop
jnp
cmp
jbe
push
add
add
scas
dec
repz
jbe
leave
sub
xor
mov
adc
imul
iret
xor
inc
cmp
pop
adc
pop
out
mov
push
lcall
enter
xlat
xchg
testb
int3
pop
mov
popf
cmp
sbb
mov
cmpl
movsb
aas
xchg
mov
fldcw
mov
jno
add
adc
dec
repnz
lods
divl
movsl
inc
mov
cmc
in
mov
imul
movsl
pop
js
mov
push
lds
sub
pop
scas
dec
lcall
lcall
jp
add
cltd
dec
lahf
jbe
xor
add
in
cs
flds
rclb
cwtl
jg
jo
sub
fiadds
adc
and
dec
jno
nop
mov
jge
mov
hlt
jp
int
int3
pusha
fs
mov
std
xchg
fisubrs
lock
jmp
out
lods
push
mov
and
xchg
pop
mov
mov
xchg
xchg
into
push
in
and
add
ret
lods
dec
test
repz
xor
dec
mov
add
jmp
sub
rcr
ret
inc
push
loopw
mov
ja
lret
add
xchg
inc
cmpsb
ret
add
jl
hlt
pop
jl
lret
les
mov
or
xchg
xor
out
cwtl
add
frstpm(287
mov
stc
cld
inc
adcl
cltd
sbb
xchg
sub
mov
repz
sub
shrl
dec
loop,pn
inc
fstpl
aam
adc
shlb
or
loop
and
sarb
xor
and
movl
jmp
into
jne
inc
sbb
pop
clc
push
mov
fadds
sbb
push
jl
push
sbb
filds
stos
add
leave
and
sbb
fdivr
adc
jle
add
out
xlat
sbb
xor
inc
out
inc
bound
push
notb
movsb
push
aam
inc
xor
inc
jb
inc
mov
dec
scas
xor
xor
push
ret
jb
push
insb
int3
rolb
call
subb
js
jne
pop
mov
out
jge
fcoms
fcoml
xorl
sub
cs
mov
aaa
mov
jb
dec
hlt
bnd
pavgw
mov
test
mov
mov
adc
or
jl
cmp
lods
jo
and
mov
pop
pop
ret
jo
and
or
loope
jns
int
xor
les
push
jl
je
xchg
or
sbb
pop
add
inc
repz
inc
fisubrs
xchg
ss
shll
push
rorl
adc
mov
push
xchg
ljmp
dec
incl
daa
sahf
push
push
nop
icebp
mov
into
push
jbe
es
mov
push
or
xor
scas
mov
icebp
sub
in
adc
jle
jecxz
sbb
xchg
scas
cmpsl
aam
hlt
mov
jb
xchg
mov
in
mov
xor
adc
mov
stos
sbb
inc
mov
lret
add
sub
jo
out
inc
lcall
lods
cmpsl
loop
pop
and
pop
sub
pop
and
addl
fcompl
jg
add
fwait
sub
mov
mov
fsub
jle
bound
pushf
xorb
jno
flds
sahf
lret
mov
ret
xchg
popa
scas
xchg
mov
cmp
sahf
in
sarb
ja
and
fs
pushf
xor
mull
cmp
adc
pop
inc
jo
sbb
mov
jle
xchg
cmp
clc
mov
arpl
adc
push
mov
insl
and
and
and
sbb
adc
dec
mov
push
popf
das
test
ss
cmp
mov
inc
xchg
icebp
loope
mov
pop
jge
push
and
clc
add
pop
call
mov
es
jns
cmp
pop
push
out
pusha
imul
inc
or
inc
cmp
push
push
incb
mov
cmp
and
xchg
test
inc
sbb
gs
rorl
js
fwait
test
dec
add
int
jo
inc
mov
popf
jne
gs
xchg
pop
mov
in
aaa
mov
faddl
inc
xchg
pop
push
dec
lret
arpl
xchg
xor
pop
outsb
mov
js
imul
xor
cmp
and
sbbb
rcrl
test
addb
aam
hlt
aas
cmp
pop
pop
loopne
cmp
xchg
addb
add
out
loop
cwtl
pop
out
dec
loopne
adc
sti
cmp
int3
scas
orb
jmp
ds
push
jmp
jg
aam
movsl
pop
xchg
pusha
xor
std
cwtl
in
jnp
and
es
ret
inc
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
ss
fdiv
pushf
lret
mov
cltd
adc
aad
inc
scas
out
mov
inc
or
xor
sub
stos
out
shlb
xchg
out
pop
mov
ja
shrb
jecxz
lret
ja
mov
jbe
inc
pop
mov
push
mov
shrl
gs
std
fstpt
mov
nop
in
jp
bound
mov
aas
out
mov
inc
ss
fisubrl
lds
aaa
dec
mov
mov
ss
push
scas
cltd
cmp
cmp
mov
sub
pusha
fistpl
stc
push
jb
iret
push
cmp
sub
popf
jnp
rcr
lds
or
pop
repnz
dec
mov
leave
imul
das
lret
inc
ret
popf
mov
dec
adc
popa
insb
push
or
mov
inc
pop
cmpsl
and
add
xlat
cli
scas
addr16
int
movsl
dec
inc
popa
jo
and
cmp
inc
pop
inc
mov
mov
pop
lods
jecxz
in
rorl
inc
idiv
pavgw
mov
adc
nop
add
inc
frndint
mov
repnz
pushf
lds
xor
and
outsl
push
jl
stc
inc
jge
scas
movsb
sti
subb
test
xchg
inc
stc
mov
subl
pop
jns
mov
loop
pop
inc
test
stc
mov
pop
mov
mov
mov
push
pop
push
sbb
sbb
into
negl
lret
xchg
push
pop
repnz
add
cmp
xlat
inc
add
in
in
lods
fs
pop
sub
dec
add
out
loopne
add
in
xchg
inc
loopne
mov
push
icebp
cmc
mov
cmp
ret
or
xor
iret
test
outsl
fs
inc
add
aam
out
adc
rorb
out
mov
hlt
movsb
push
int3
adc
dec
inc
in
add
cwtl
into
pop
sar
movsl
outsl
xchg
push
sub
mov
dec
add
jb
sbb
dec
add
test
lcall
jg
addr16
shr
jnp
adc
pop
sub
pushl
adc
pop
cmp
int
test
or
push
lods
stc
std
rcr
out
popa
aaa
enter
cld
outsb
mov
int3
adc
jp
inc
pop
test
loopne
adc
jl
inc
mov
ljmp
adc
ss
test
sbb
je
push
push
iret
popa
lock
xchg
loopne
mov
xchg
mov
or
fwait
rdpmc
out
aad
jecxz
mov
inc
xorl
cld
pop
rolb
push
mov
icebp
and
sbb
jbe,pn
xor
into
mov
xor
xor
push
cmp
jmp
fistl
sbb
jg
lret
bound
movntq
fadd
or
aaa
and
pop
fisttpl
pop
add
jl
repnz
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
js
dec
fistpll
shrb
stos
inc
dec
in
cs
subl
cmp
pop
nop
sub
pusha
ret
pop
mov
in
dec
xchg
mov
shrl
pop
mov
push
pop
in
lcall
xor
jbe
and
mov
ficoms
ja
lahf
fsubs
fildll
gs
test
push
shll
mov
in
out
das
popf
push
mov
out
dec
adc
subb
mov
inc
idivb
xchg
cmp
mov
jno
outsl
imul
nop
int
jmp
adc
xor
decl
pop
jp
adc
and
jmp
push
sub
push
and
es
mov
rcl
mov
jmp
adc
in
lret
out
xor
mov
data16
out
pop
jmp
push
xor
dec
and
fbstp
fisubl
xchg
xchg
adc
jp
lret
and
cmp
mov
push
pop
mov
fldlg2
out
push
aas
push
mov
ret
hlt
mov
dec
clc
fdivs
adc
aas
popa
into
lods
jne
inc
xchg
and
out
rcl
data16
mov
fsubs
daa
mov
rcrl
sbb
rorl
mov
push
dec
jecxz
shrb
sbbl
mov
and
push
cmp
mov
mov
fcoml
sbb
insl
shlb
lods
inc
in
dec
in
jmp
sub
sub
jno
cmpsl
xor
or
xchg
xchg
lock
aas
inc
in
clc
or
inc
popf
jae
sub
dec
test
cli
icebp
mov
sbb
jg
push
out
mov
in
inc
mov
in
fstp
cmp
add
negl
cltd
adc
repz
add
pop
loopne
xchg
or
stc
sahf
jg
icebp
jle
pop
add
pop
dec
mov
or
adc
je
out
xchg
or
lret
inc
xchg
dec
es
sbb
subb
push
in
pop
mov
dec
sbb
loope
loop
mov
pop
pop
sbb
lahf
rol
push
sti
or
loopne
and
xor
nop
push
xor
xchg
inc
repnz
and
add
hlt
pop
ds
mov
adc
mov
mov
adc
or
xchg
mov
gs
pusha
fwait
test
add
inc
pop
stos
xlat
pop
in
jle
mov
and
sub
mov
cmpsb
push
inc
pop
add
test
pop
and
pushf
mov
sti
pusha
es
inc
mov
push
test
cli
xor
icebp
jle
insl
out
lock
mov
sbb
bound
scas
ja
pop
inc
and
test
sbb
mov
and
aaa
in
xlat
xor
stos
push
lcall
dec
add
or
ds
lods
addr16
push
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
push
insb
sbb
jns
sbb
ss
test
jp
test
stos
mov
or
jns,pn
sbb
pop
mov
ja
jae
xchg
filds
pop
enter
es
sarl
in
mov
mov
addr16
movsl
xor
movsb
sub
and
push
es
and
sub
jnp
jge
mov
or
sahf
insb
insb
fcoml
stos
mov
call
xchg
xlat
repz
sbb
inc
push
lods
leave
mov
stc
mov
movsl
fisttpll
cld
rolb
cmp
mov
mov
loope
jns
test
sub
cmp
leave
out
rol
xchg
add
shlb
jns
out
bound
jge
adc
notb
sbb
test
push
addl
adc
divl
inc
or
sub
sbb
lahf
movsb
sub
cld
lods
int3
jae
mov
fmul
xchg
pop
repnz
dec
insl
push
fs
push
and
pop
js
jne
enter
mov
jo
inc
insl
stos
sbb
xlat
dec
jnp
mov
mov
enter
mov
je
xor
mov
loope
imul
out
out
imul
push
popf
jl
push
xchg
xchg
dec
cwtl
pushf
cld
lea
fcomps
jmp
push
jg
cmp
mov
cmc
pusha
pop
mov
arpl
mov
call
jge
js
jge
xor
dec
cmpsl
add
or
lret
lea
push
sbb
stc
mov
fwait
push
sub
sahf
sub
mov
in
lret
bound
aas
out
xor
push
mov
hlt
lock
xor
mov
jnp
int3
mov
popfw
popa
out
push
sbb
or
bound
lahf
mov
xor
push
bound
cmp
mov
sbb
mov
and
rep
or
pop
popf
call
ficomps
aad
cmpb
pop
pop
fwait
andb
les
dec
in
aam
sub
sub
sub
insl
add
xor
cmpsb
jb
xchg
lods
dec
xchg
jle
push
in
not
imul
xchg
addb
mov
xorb
lds
sub
das
sub
jb
outsb
adc
stos
data16
dec
mov
popf
push
leave
mov
jb
hlt
mov
mov
xlat
xchg
mov
dec
jge
out
xchg
movsb
mov
repz
mov
test
out
outsl
jb
fiadds
in
add
scas
enter
nop
lahf
mov
mov
ljmp
adc
mov
push
push
lods
sbb
lahf
mov
dec
push
sub
clc
inc
dec
stos
insl
arpl
into
or
enter
add
test
jno
cmp
xchg
xor
mov
ret
movsl
pop
inc
out
mov
inc
fbstp
mov
xor
stos
aad
lret
aaa
fldenv
lock
ds
movsl
aam
pop
cmp
inc
sub
test
mov
pop
add
sarb
mov
mov
loop
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
andb
mov
data16
jns
sbb
sbb
push
lods
or
in
fildl
inc
pop
pop
push
jnp
sub
mov
imul
loope
iret
mov
jmp
push
insb
pop
inc
iret
jle
loopne
jb
fdivs
outsb
dec
push
sbb
jb
inc
data16
sbb
xchg
add
lock
fsubs
xor
stos
mov
sbb
jl
xchg
mov
xchg
fs
rorb
in
cmpb
inc
jo
cmpsl
adc
or
push
push
adc
and
sub
xor
xor
sbb
inc
and
sbb
in
push
ljmp
push
movsl
aas
fstpl
xchg
mov
pop
fisubrs
out
fsubrl
fidivrs
cs
inc
pop
mov
push
out
ljmp
or
lock
inc
scas
leave
js
ljmp
mov
je
cltd
addr16
fwait
sub
and
dec
stos
push
or
jp
dec
movsb
ficomps
push
lods
out
in
push
push
jnp
std
cmp
pop
loopne
lock
or
cwtl
mov
mov
cmpsb
psadbw
xor
cmpsb
lret
aas
cmpsb
pusha
out
mov
cmpl
and
inc
lahf
inc
ljmp
push
xlat
pop
in
mov
xchg
mov
mov
xor
aad
daa
cltd
lahf
das
or
xchg
sub
imulb
cs
mov
cmpb
push
test
push
sub
inc
push
xor
sbb
in
les
xor
push
inc
sarl
adc
loop
and
repz
xorl
clc
fs
fdecstp
movsl
in
test
test
inc
ret
movsb
mov
jbe
call
mov
call
mov
fwait
cmp
jp
es
mov
xchg
outsb
aaa
rcrb
cwtl
dec
jb
lcall
ficoml
ljmp
movsl
push
pop
pop
jp
ss
push
pop
int
aad
fdivrs
std
jo
outsb
push
sti
mov
out
rcr
pop
push
rolb
sti
xor
xor
or
je
es
stos
adc
jo
mov
imul
xlat
test
dec
int3
addr16
scas
mov
add
xchg
shlb
in
bnd
sub
das
gs
xchg
cld
push
xchg
sbb
pop
popa
ljmp
sbb
data16
fwait
jle
ret
pushf
ds
in
jnp
xor
dec
and
pop
mov
adc
pushf
insb
ss
test
push
lcall
mov
pop
int3
sar
sbb
pop
push
test
ret
xchg
mov
mov
aaa
fnstsw
pop
ret
mov
inc
dec
xor
imul
test
sbb
cmpsb
popf
loopne
mov
xchg
mov
adc
sub
out
leave
mov
aaa
jecxz
aaa
pop
lahf
jnp
pop
pusha
jnp
ret
xor
lds
out
psubsb
int
call
enter
mov
xchg
aaa
and
adc
pop
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
jmp
pop
sbb
jns
sbb
jle
xchg
fisubs
cmp
pop
outsb
out
pop
jno
lds
jno
inc
enter
mov
push
jns
lret
sbb
negb
push
pop
pop
shll
mov
mov
jmp
push
mov
xor
rcrb
data16
negl
jle
test
cmp
cli
or
xchg
movsl
inc
xchg
test
mov
insl
jecxz
mov
fwait
cmc
gs
scas
xchg
daa
lahf
icebp
stc
sahf
pop
push
mov
inc
ljmp
iret
add
xchg
cli
inc
add
mov
push
popf
inc
stc
enter
adc
mov
mov
mov
loope
adc
fistpll
mov
outsb
daa
xchg
fidivl
cmp
and
sbb
push
cmp
int3
and
cmpsl
rcll
inc
stc
rolb
imul
lds
pop
inc
inc
pop
outsl
roll
out
fmuls
inc
jmp
ret
je
or
test
popa
aaa
cld
pop
cmc
jg
cmp
sub
push
out
insl
imull
int3
xor
test
lods
xor
pop
inc
test
dec
xchg
mov
insl
push
int3
mov
imul
dec
mov
ret
mov
insb
cmp
test
imul
test
jmp
push
lret
xor
lods
inc
jo
push
aaa
je
out
mov
xchg
jmp
cltd
shrb
push
add
popa
sub
inc
adc
push
mov
hlt
or
push
gs
mov
cld
or
sub
and
scas
dec
outsl
push
or
lret
nop
sar
pop
ret
loop
lcall
rcll
cmpsl
cmp
pop
sbb
and
in
sbb
push
lods
jecxz
xchg
and
push
push
shrb
push
or
push
push
cld
outsl
mov
ret
xor
das
sbb
data16
jle
dec
xor
pop
pusha
inc
dec
pop
xchg
test
fisttpl
in
fdivl
mov
mov
push
inc
pmaddwd
lods
mov
inc
aaa
scas
xchg
jl
mov
popf
push
outsl
mull
or
rcl
jb
rcr
mov
sub
icebp
xor
push
sub
mov
sarl
mov
inc
xlat
lret
inc
clc
sbb
dec
push
xchg
ret
mov
aas
xchg
test
mov
lcall
jecxz
repz
sub
in
lea
sub
pop
mov
sar
sub
movsl
mov
aam
icebp
pop
jne,pt
hlt
add
push
jo
or
mov
lcall
sbb
cmovg
or
or
jno
xacquire
and
jge
or
xchg
xchg
push
je
into
fwait
mov
mov
jo
xor
mov
cmp
xchg
fcmovb
invd
std
xor
push
ret
andb
inc
mov
roll
jecxz
mov
and
iret
mov
jb
call
jne
js
lahf
sahf
push
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
xchg
mov
sbb
sbb
mov
add
push
xchg
stos
jnp
sbb
pop
jl
ret
fiaddl
pop
push
inc
sbb
adc
sbb
push
out
iret
adc
rorb
jmp
rcrb
daa
insl
add
ret
test
stos
outsb
cli
inc
in
movsl
pop
aas
sbb
xchg
cmp
insl
outsb
lods
push
xchg
sbbl
imul
popa
ror
adc
out
test
sbb
insl
repz
jmp
or
cltd
ret
xchg
xchg
js
sbb
mov
icebp
push
das
adc
pop
cmp
out
sbb
cmp
lds
fs
sbb
lea
xchg
xor
stos
dec
xchg
or
mov
enter
test
data16
add
cmp
xchg
push
leave
sti
inc
insb
xor
xor
push
jecxz
push
test
rep
cltd
lcall
mov
push
sub
or
aaa
cmp
iret
push
xor
ljmp
call
div
hlt
lcall
out
xor
jge
jecxz
fimuls
pop
cltd
leave
out
push
lods
shll
scas
mov
jns
xor
or
stos
dec
xchg
adc
dec
int3
aas
mov
mov
popf
lock
push
cld
dec
jg
jp
xor
rclb
pop
sub
pop
mov
inc
sbb
cmp
leave
or
add
xor
adc
jnp
cmp
and
mov
pop
out
inc
adc
lahf
pop
push
dec
fisubs
xchg
dec
inc
inc
fwait
ret
mov
scas
pop
jecxz
outsl
shll
push
mov
mov
mov
in
lea
adc
add
clc
dec
add
mov
push
lcall
sub
xchg
xor
aad
sub
dec
adc
ds
sarl
and
scas
mov
lret
es
xorl
push
inc
scas
add
lret
inc
mov
ret
inc
adc
data16
es
repz
cmp
push
das
mov
mov
aad
sub
call
and
adcb
dec
push
mov
ds
das
lcall
int3
lods
mov
fistpl
xor
pop
es
jbe
mov
in
dec
out
sbb
in
mov
sub
hlt
mov
jb
das
mov
clc
mov
movsb
or
jp
aaa
std
add
mov
add
ljmp
lcall
sbb
inc
jecxz
int
sbb
pop
das
sbbl
cmp
int3
dec
decl
push
daa
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
jl
push
sbb
and
sbb
int
loopne
inc
xor
pop
shrl
dec
xchg
push
mov
sub
and
xchg
jge
sbb
jmp
cmc
push
ds
into
scas
xchg
inc
xor
jo
dec
jnp
xor
xor
inc
push
mov
mov
arpl
ss
movsl
jge
mov
shlb
call
fstp
jp
dec
pop
sub
ss
jbe
cmc
adc
outsb
arpl
sub
js
sub
sbb
lahf
xchg
cmp
cltd
scas
int3
dec
dec
ret
xchg
cwtl
outsb
in
mov
out
mov
call
das
popf
mov
sub
mov
cmp
in
and
stos
stc
mov
dec
cmpsb
stc
and
add
xchg
into
xor
sbb
or
loopne
pop
sbb
mov
or
mov
add
rorl
icebp
ds
out
jb
inc
push
mov
inc
mov
insb
into
fwait
jne
xchg
jo
arpl
and
push
xchg
push
jle
fs
jno
int3
lret
std
scas
sar
push
fcomp
out
push
test
pop
pop
push
mov
rolb
iret
cltd
cltd
bound
ss
out
adc
jae
pop
and
aaa
out
enter
inc
repz
shl
add
jecxz
cmp
int
cmpl
int
adc
and
push
mov
cli
add
insl
adc
mov
inc
pop
aas
aad
out
or
popa
mov
pop
push
mov
fimuls
ret
xchg
dec
out
jnp
pop
sub
xchg
mov
sbb
sbb
cmc
in
adc
js
mov
jg
lods
ja
lods
incb
fldcw
mov
mov
into
xorl
mov
insl
jo
xorb
sbb
aad
clts
or
shrl
pop
fcmovnb
imul
cwtl
xor
outsl
cmp
jno
jmp
xor
cmpsb
mov
jae
sub
dec
mov
push
lret
jg
xchg
adc
stc
mov
stc
fistpl
out
dec
push
in
fwait
aaa
in
mov
add
add
cmp
adc
fisubl
mov
mov
push
or
add
inc
fnsave
xchg
cmpsl
mov
jb
inc
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
rcrl
dec
sbb
scas
adc
sbb
sbb
imul
xor
popf
xchg
dec
xchg
enter
pop
cmp
cmp
ret
jmp
sbb
popa
in
jecxz
mov
out
push
out
ficomps
gs
in
cmp
in
ret
add
cwtd
mov
mov
mov
cwtl
xchg
aam
fstps
out
int
fldl
sub
mov
subb
popa
xor
ds
cli
adc
gs
scas
cmp
arpl
inc
iret
loopne
aam
xor
mov
sti
iret
and
push
call
push
mov
addr16
and
mov
mov
repz
mov
rcrb
dec
call
mov
stos
ss
and
test
icebp
xchg
cmc
out
push
imul
lret
or
arpl
sbb
mov
shlb
inc
fcmovb
dec
js
out
jnp
rep
add
adc
mov
cmp
mov
loopne
out
push
or
lret
sbb
fistl
cs
movsb
ds
inc
faddl
adc
or
sub
lcall
mov
mov
mov
cmp
xor
jns
pop
sbb
push
rclb
ja
and
cmpsl
aas
cmpsb
aad
push
add
xor
lahf
and
je
movsb
sub
out
cmpsl
jne
lea
xchg
loope
arpl
pushf
adc
scas
clc
mul
inc
cmp
ret
sbb
inc
inc
pop
loopne
cmp
movb
daa
pop
call
mov
fmull
movsl
and
cs
jg
fldcw
pop
sarb
lods
test
cmp
pop
dec
imul
lcall
jno
sbb
insb
mov
cmp
inc
lcall
inc
lret
push
push
or
movsl
and
lret
or
in
data16
mov
fnsave
sub
cli
bound
ds
xor
pop
dec
push
nop
in
adc
jecxz
insb
cmc
test
into
xor
push
cld
mov
jmp
or
rclb
shlb
mov
into
adc
sbbb
ret
test
xor
shll
lret
js
in
push
enter
add
out
clc
test
scas
ljmp
into
mov
in
call
xor
int
sbb
arpl
out
mov
push
ret
dec
in
cmp
rol
pusha
rcll
add
jns
mov
bound
xor
mov
hlt
jle
cwtl
pop
out
loop
sbb
iret
add
loope
repnz
and
mov
adc
xchg
cmp
sbb
or
icebp
sti
cwtl
loopne
push
insl
rorb
inc
dec
adc
stos
fwait
cmpl
mov
enter
xchg
pop
and
pop
push
and
shrb
inc
nop
mov
ret
adc
or
into
adc
hlt
sbb
stc
mov
sbb
push
es
in
xchg
inc
fsub
sbb
mov
pop
inc
add
call
dec
cmp
dec
enter
nop
xchg
push
ret
or
push
jnp
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
mov
adc
sbb
adc
push
dec
mov
dec
pushf
push
dec
mov
mov
fwait
mov
xchg
xor
sbb
dec
cmp
dec
lret
sbb
imul
outsl
xchg
xchg
icebp
push
mov
arpl
scas
sahf
psubd
out
xchg
cmpsl
orb
ja
movsl
popf
push
repz
ret
ficomps
adc
and
popf
mov
aad
dec
aaa
pop
daa
ss
inc
pop
inc
cli
dec
popa
sar
mov
pop
lods
push
addl
adc
enter
inc
das
cwtl
xlat
mov
insb
iret
int3
pop
out
mov
scas
fs
fmull
inc
xchg
dec
pop
fwait
sub
iret
xchg
cmp
cli
jmp
pop
lods
cmpsl
cwtl
ficoml
push
shlb
mov
test
or
jp
push
sbb
test
xor
fcomps
sbb
dec
js
inc
jle
dec
lods
out
pop
push
imul
repnz
mov
in
lret
jecxz
out
movsl
xchg
jmp
sti
cmp
repz
call
in
jb
push
ret
into
adc
xchg
mov
jp
adc
repnz
scas
sti
lret
mov
es
cmp
pxor
dec
data16
pop
insb
je
adc
fadds
pop
sbbb
nop
mov
jnp
mov
jge
xchg
scas
cltd
cs
outsb
pop
jbe
out
dec
das
xor
cmpsl
inc
mov
jmp
cli
push
cwtl
shlb
es
insl
mov
and
ja
pop
pop
jbe
cmp
in
imul
push
call
ret
imul
scas
and
jnp
dec
ret
hlt
xorb
xchg
and
inc
and
cmpb
and
stos
dec
adcb
pop
popf
jecxz
lea
das
pop
ffreep
mov
sbb
ret
or
push
xchg
inc
test
lods
in
cmp
fs
mov
pop
and
data16
out
je
addr16
adc
daa
out
cmc
inc
add
pop
ret
pop
loope
and
mov
jnp
imull
cwtl
dec
lea
mov
cld
xchg
jp
mov
shlb
or
mov
sti
dec
mov
mov
mov
pop
js
negb
cmpsl
mov
jnp
imul
out
sub
and
jp
adc
ret
adc
push
sahf
clc
shll
xchg
xchg
inc
xchg
adc
and
fcmovb
push
pop
les
imul
test
iret
adc
cmpsb
test
ficoml
xchg
or
add
pop
pushf
xor
aam
and
mov
jp
out
push
out
push
shrb
aas
push
cmpsb
inc
testb
aad
pop
jb
lods
mov
rcr
and
fadd
xlat
jg
test
mov
mull
popa
mov
test
inc
pop
lock
lods
jg
cld
jge
std
or
cmc
mov
cmpsb
mov
add
test
aam
stos
sub
xchg
adc
cmpsl
mov
cwtl
add
lret
fldt
je
ss
lretw
inc
cmp
inc
and
adc
pop
sbb
sbb
lcall
test
sub
cmp
rorb
out
fwait
mov
imul
rorl
push
cmovp
nop
sub
sbb
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
sbbl
sbb
notb
sbb
xor
push
inc
push
loopne
test
imul
insb
cmpsb
divb
insb
sbb
adc
add
lods
xor
jecxz
pop
mov
icebp
lds
mov
dec
lcall
mov
in
and
stos
add
psubusw
lret
mov
mov
mov
lcall
clc
cmp
cs
stos
es
sbb
xchg
xchg
data16
add
cmpsl
jns
jecxz
aaa
add
call
iret
add
xchg
cwtl
sub
inc
jge
jbe
fiaddl
popa
jne
insl
ja
mov
mov
ja
jne
or
sbb
push
pusha
and
xor
and
dec
sbb
sarb
xor
push
mov
xchg
sub
push
jbe
add
icebp
mov
adc
mov
dec
mov
test
fidivrs
shr
lea
mov
adc
testl
sub
lret
lock
pop
adc
es
out
sub
aam
test
inc
lods
jnp
dec
mov
add
mov
inc
mov
xchg
loop
pop
add
loope
dec
cmpsl
dec
les
stc
inc
fdivrl
sub
vcvtss2sd
mov
xchg
mov
test
sarl
mov
adc
icebp
cmpsb
adc
push
mov
mov
dec
jl
repnz
js
inc
and
sbb
fdivrs
scas
inc
mov
and
jge
mov
push
mov
cli
and
mov
jl
call
fsubs
insl
sub
popa
gs
sbbl
loopne
add
jns
scas
mov
loope
jne
mov
popf
push
pop
out
je
mov
lock
dec
leave
inc
sub
lods
push
pop
scas
repnz
push
stc
pop
dec
xchg
call
popa
stos
out
jg
lret
test
or
into
addb
inc
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
jle
jmp
sbb
adc
sbb
pop
dec
sub
inc
jbe,pt
push
push
pop
icebp
jecxz
ret
sbb
jmp
xchg
xchg
jle
or
mov
mov
push
xchg
mov
cltd
cwtl
sbb
in
jg
loop
ror
dec
lods
in
sti
inc
lret
pop
mov
xchg
out
xor
rclb
nop
insb
xchg
decb
xchg
clc
bound
lock
stos
or
cmp
out
xchg
mov
add
cmpsl
idivb
out
xlat
jecxz
and
jg
jp
jno
add
sbb
outsl
shrb
in
and
ror
mov
insl
das
mov
sub
fwait
cmp
jb
or
dec
and
inc
push
fisttpll
ret
int
mov
inc
mov
jbe
inc
dec
cltd
sbb
popf
imul
push
jns
jl
inc
jbe
sbbl
rcl
jns
adc
pop
in
push
stc
cli
mov
aad
mov
jp
sbb
inc
addl
fsubrs
ss
push
lret
test
adc
sub
adc
movsl
div
lods
mov
xlat
push
ds
out
sarl
jle
stos
in
scas
imul
aas
movsl
imul
or
lods
cmpsl
stc
push
cmp
movsb
lret
fwait
pop
mov
and
test
and
aaa
push
aas
or
jl
mov
mov
divb
or
mov
jbe
inc
inc
lret
je
push
lods
and
ds
sub
aad
push
dec
arpl
cmp
movsl
mov
lea
jb
xorb
jbe
sub
orl
repz
sub
jns
mov
push
cmp
int
bound
or
insl
in
add
lds
test
lcall
push
data16
or
loop
sub
sub
fldcw
mov
fs
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
inc
cmp
jl
sbb
notb
sbb
xlat
shl
int
mov
insb
mov
push
cmpsb
cmp
lods
leave
mov
les
push
lcall
jb
sub
lock
shrb
repz
cmp
icebp
cmp
xchg
test
insl
scas
mov
adc
xchg
roll
xchg
daa
mov
outsl
ret
or
xor
outsl
pop
mov
cmp
or
jnp
mov
repz
cmc
mov
xor
clc
frstor
jecxz
in
jnp
inc
decl
out
aas
jg
push
loope
outsl
je
fildll
enter
cmp
sub
out
movsb
mov
xor
into
out
sbb
in
mov
orb
out
sub
xor
inc
mov
cmc
inc
jo
cmc
outsb
pop
out
jns
lds
fistps
or
and
ljmp
fsub
sub
jne
bnd
outsl
das
sbb
inc
adc
and
push
cmc
divl
fdivp
subl
test
dec
mov
adc
fisubl
loope
mov
or
or
push
ds
inc
leave
lret
pop
lods
jne
jp
sub
mov
shl
ret
adc
orb
in
inc
push
add
fldl
add
sbb
xchg
fidivl
pop
xchg
lcall
popa
loope
xchg
jecxz
ds
cmp
push
mov
pop
imull
stos
hlt
sbb
cmpsb
pushf
lret
js
inc
sbbb
std
cwtl
aad
jp
sub
mov
add
xchg
ret
xchg
inc
fwait
mov
es
scas
loope
mov
fmuls
add
fcoms
jecxz
dec
xor
out
leave
dec
push
dec
dec
adc
xor
jnp
ret
out
aad
scas
cltd
or
pop
jno
sbb
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
push
fsubrp
inc
pusha
add
ror
ja
fwait
ret
or
dec
mov
call
mov
rolb
out
adc
xor
cmp
cmc
das
je
jo
popf
cmc
push
repz
and
or
sbb
adc
xchg
icebp
xchg
push
testb
aam
fmulp
mov
jo
sbb
cmpsb
jg
call
and
push
imul
mov
dec
sbb
mov
push
pusha
dec
movsb
and
in
sub
jecxz
or
add
lret
mov
cmp
jge
xor
clc
adc
lahf
pop
mov
add
pop
dec
in
mov
pop
cmpsl
lods
lahf
xchg
in
cmp
ret
scas
cmp
movsb
out
push
xlat
add
rclb
sbb
lret
push
or
add
mov
insb
xchg
xchg
jo
jmp
sbb
mov
in
ss
push
rorl
mov
push
fisubl
push
sbb
pop
jnp
insl
sbb
jecxz
sub
xchg
ja
push
gs
sub
add
insb
fsubs
push
xor
inc
imul
or
jl
xchg
nop
dec
arpl
sti
push
xor
or
inc
mov
xchg
push
les
rcll
jmp
pop
repnz
insw
mov
loope
cmp
out
movsb
js
inc
add
inc
outsb
push
mov
mov
les
mov
inc
xchg
mov
or
or
cltd
aaa
fs
inc
subl
pop
push
and
sbb
popa
popf
loop
test
in
sti
loopne
test
push
fisubrs
mov
shll
movb
sahf
psubq
inc
pop
jl
adc
out
out
xchg
fiadds
fxch
fs
pushf
cmp
xor
dec
inc
dec
cltd
mov
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
push
sbb
outsb
pop
andl
xor
jno
int3
in
shrb
sub
js
sarl
adc
fdivrs
push
stos
dec
inc
cltd
shl
jl
lods
nop
xchg
and
cmp
push
stos
pop
in
jp
leave
xor
xor
jmp
in
cwtl
lahf
ljmp
push
push
loopne
push
in
cmpsl
addr16
rcr
lahf
scas
xchg
scas
push
xchg
icebp
repz
push
sbb
fwait
mov
cli
adc
cmp
inc
and
test
arpl
dec
outsb
aas
add
sbb
cmpsb
push
inc
mov
imul
jb
fs
pusha
xor
cli
adc
and
mov
jmp
or
js
push
mov
rclb
ret
and
test
jb
popa
xchg
rorb
jno
xor
dec
cwtl
aad
mov
sub
sub
mov
das
daa
je
or
mov
xchg
fistl
add
in
lea
jbe
add
daa
enter
push
pop
test
cmp
pop
jae
mov
push
lock
fmuls
fsubrp
pop
inc
mov
jmp
cmp
je
lock
lods
xchg
inc
ljmp
mov
push
outsl
sub
lea
inc
pop
mov
add
push
pusha
fwait
loopne
rclb
mov
and
add
fnsave
inc
mov
cmp
fildl
push
dec
mov
add
xchg
mov
sub
cmp
mov
inc
repz
ljmp
cmp
xchg
les
mov
ret
fbld
cmc
pop
pop
sbb
xchg
xchg
outsl
adc
movsb
arpl
lds
mov
pop
rol
aad
mov
pop
lcall
xchg
xchg
pop
xchg
cwtl
mov
repnz
mov
fstl
pop
iret
mov
pop
or
pop
cwtl
scas
and
push
cmp
das
ds
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
sbb
mov
notb
sbb
fisttps
add
sub
movsb
push
add
jmp
mov
ret
sub
int3
xorb
in
inc
mov
or
in
xor
jo
bswap
lahf
xor
pushf
ficoms
scas
jbe
stos
stos
mov
pop
mov
push
jne
mov
dec
fidivrl
push
mov
add
and
or
fsubs
mov
ds
push
movsb
adc
mov
inc
push
or
push
mov
push
dec
add
xor
xchg
stc
jo
mov
and
sbb
daa
sub
jp,pt
test
inc
sub
scas
sbb
push
mov
push
xor
mov
gs
fs
mov
mov
int3
imul
mov
pop
ljmp
xor
xor
push
xor
outsb
mov
jmp
lods
sbb
xor
mov
pop
jo
psubw
sub
mov
mov
xchg
push
loopne
xor
mov
xchg
or
xchg
cmpsb
sbb
cmp
mov
ljmp
mul
inc
xor
stc
daa
lcall
rolb
rolb
into
in
js
arpl
and
in
outsb
lds
repz
mov
jg
lcall
push
pop
out
pushf
repz
insb
xchg
fwait
xor
pop
shrb
enter
jns
xlat
je
sbb
mov
das
or
ja
insl
mov
inc
push
out
sbb
inc
mov
inc
lock
and
pop
add
into
les
cmp
out
mov
pop
mov
push
fidivrs
lahf
fbstp
test
sub
jae
cwtl
std
or
addr16
lea
and
out
insb
pop
pop
mov
mov
enter
sbb
cmpb
xor
dec
inc
subb
xor
lods
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
jg
ffreep
pop
push
ud0
sub
mov
pop
or
clc
add
sub
push
in
rorl
insb
or
shll
pop
mov
lock
sub
pop
out
push
sbb
push
mov
pop
dec
ja
fs
mov
mov
mov
cld
in
sbb
jge
inc
add
or
pop
leave
xor
add
fwait
pop
test
jno
pop
clc
outsb
popa
mov
aam
or
mov
call
mov
aas
call
mov
fwait
jbe
stc
test
jne
xor
popa
fiadds
ljmp
inc
cmp
mov
mov
add
cmpb
pop
mov
mov
ja
sahf
dec
loop
add
sub
jl
cli
pop
ljmp
and
cli
mov
sete
js
push
aas
mov
dec
cmp
mov
mov
ret
xrelease
jo
adc
mov
inc
cmp
leave
mov
push
into
cs
xchg
frstor
or
sub
push
lods
mov
dec
pop
ljmp
sub
addl
int
sbb
outsl
es
pop
xlat
mov
adc
or
adc
xchg
cmp
push
push
pop
sub
mov
cmpsb
jnp
icebp
or
adc
push
cmp
adc
test
mov
mov
ss
testl
aad
lock
jno
xor
mov
push
sub
xchg
cmp
test
addb
out
jnp
clc
cmp
fcomi
mov
jo
scas
pop
es
pop
fwait
xor
and
aad
in
add
lock
cmpsb
pop
jmp
push
mov
jle
imul
cwtl
push
pop
jnp
sti
jo
decl
jge
jg
push
add
adc
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
mov
jecxz
fldt
sbb
push
or
lret
lea
dec
inc
jecxz
in
or
data16
movsl
pop
pop
or
andl
mov
call
test
aad
inc
jnp
inc
mov
iret
daa
xchg
mov
enter
jb
pop
int
push
pop
jae
leave
sub
ret
xor
inc
adc
pop
push
cmpsb
decl
popa
loope
mov
jmp
cmpsl
cli
and
sbb
scas
mov
ret
ljmp
add
orb
or
cmc
test
sbb
insl
cltd
lods
pop
pop
dec
lret
leave
push
icebp
mov
cmpsb
and
push
daa
mov
xchg
sub
fisubl
aam
shrb
xor
sahf
adc
pushf
dec
sub
into
push
mov
outsb
cmpsl
cmpsb
cs
jmp
pop
cmp
or
movsl
mov
fwait
jnp
insb
jg
or
push
pop
push
inc
jno
cltd
ja
xor
add
sahf
jg
lds
arpl
and
es
xchg
dec
mov
scas
pushf
dec
fwait
and
xor
mov
movsb
loop
enter
push
hlt
adc
clc
cwtl
xor
lock
pop
ret
xchg
lds
xor
cmpsl
in
mov
inc
cli
cmpsl
sbb
dec
push
xchg
sbb
push
push
jns
addr16
jb
jmp
pop
xor
test
xchg
xor
and
cs
or
lods
or
push
ljmp
sti
not
mov
adc
add
sbb
mov
dec
in
cmp
lods
frstor
mov
xchg
xchg
adc
popa
pop
fldcw
push
xchg
mov
ficompl
push
jno
fwait
xor
lret
hlt
xor
push
rcll
cmpl
ss
lcall
push
and
cmp
lret
bound
pop
in
fisttps
call
mov
mov
rorl
add
jle
rorl
lods
mov
inc
mov
jb
vpavgb
movsl
pop
mov
inc
rorb
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
jle
sbb
sbb
sbb
iret
inc
cmp
adc
sbb
push
mov
jl
mov
dec
lret
shlb
icebp
cmp
in
pop
ds
andl
mov
cwtl
into
jmp
push
add
aam
jecxz
pop
and
xchg
dec
pop
popa
out
not
xor
mov
out
sub
inc
out
es
adcb
rorb
push
sub
pop
mov
loop
jg
arpl
mov
fwait
mov
imull
cltd
clc
popa
iret
addl
xorl
in
cmpb
jns
push
dec
mov
mov
xor
aam
lret
or
mov
decl
repz
call
push
cwtl
fwait
mov
push
lret
mov
fs
mov
or
mov
enter
shrl
jle
insl
push
add
cmp
lock
maskmovq
mull
mov
notl
mov
fmuls
dec
ret
fistps
xor
mov
out
call
mov
sarb
in
aam
push
negb
xchg
aam
sbb
mov
xchg
adc
mov
sub
int
cmp
ja
in
lods
jae
repz
push
sahf
scas
and
mov
lcall
push
fiaddl
pop
ljmp
sbb
outsl
lods
sbb
or
fidivs
xor
lahf
adc
mov
cmp
adc
dec
jns
movl
leave
push
or
cwtl
jecxz
pop
xor
adc
std
push
push
push
mov
adc
repnz
cmp
iret
imull
cmp
je
int
lds
ret
push
out
xor
rcrb
clc
jg
mov
push
subl
push
pushf
push
mov
jns
lock
xchg
int
aaa
test
push
gs
je
inc
push
cmpsb
xchg
pop
sbb
jp
pop
notl
adcb
mov
adc
jge
stos
mov
mov
dec
in
push
mov
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
stos
inc
sbb
sbb
adc
sbb
cs
mov
push
aaa
pop
imul
mov
mov
andl
aaa
cmp
ljmp
or
add
push
or
sbb
sub
cli
fwait
sub
push
outsb
in
adc
and
or
cld
and
lds
cltd
xchg
jns
lods
xor
stos
movsb
shr
int
adc
scas
lods
inc
repz
bound
adc
mov
inc
xchg
add
shr
cs
pusha
inc
inc
mov
cs
out
stos
into
dec
les
mov
lcall
mov
mov
cmp
lcall
aas
into
mov
fildll
xchg
hlt
in
or
mov
and
cld
cld
xor
pop
and
dec
jno
dec
dec
bound
int3
jl
push
rorl
fistpl
cmp
jg
push
mov
int
xor
loopne
popa
mov
push
push
cs
jecxz
inc
iret
lods
adc
outsb
out
in
in
andl
ret
xor
rcl
sbb
sar
idivb
in
outsl
in
sub
push
jmp
jnp
daa
lret
popf
outsl
sbb
in
add
aam
call
es
mulb
pop
xor
repnz
inc
leave
pop
dec
push
outsl
pop
in
scas
clc
ja
ljmp
dec
mov
mov
inc
lds
lahf
sub
mov
lea
mov
int
test
or
xor
mov
leave
loopne
mov
dec
addl
xor
ficoml
adc
pushf
shrd
dec
js
pop
pop
enter
ds
insl
test
in
pop
inc
daa
pusha
add
test
scas
jl
and
xor
push
clc
sbb
test
sub
and
loop
imul
inc
mov
xchg
jbe
out
cltd
jp
ds
dec
rorl
mov
add
mov
mov
out
inc
cs
adc
xchg
mov
jle
sub
stos
adc
enter
rolb
imul
xchg
ja
xchg
push
jbe
arpl
jae
add
sahf
sub
push
decb
push
pusha
adc
jp
xchg
push
out
jmp
in
adc
cmp
xchg
dec
sub
xchg
sbb
mov
or
lret
push
jg
imul
addr16
leave
pop
push
sbb
dec
mov
out
not
sub
and
mov
push
xchg
je
dec
ja
and
pop
enter
push
push
and
daa
inc
ret
pop
or
cmp
cld
and
adc
cs
mov
inc
pop
jae
stos
pop
pop
jbe
jecxz
mov
lcall
mov
xlat
jmp
das
scas
xor
out
and
daa
mov
sbb
xor
aam
imul
sub
pop
scas
call
aad
push
cmpsb
int
dec
and
leave
xchg
xchg
sub
mov
cld
div
aad
cmpsb
cwtl
popa
cli
or
inc
and
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
xor
jge
inc
adc
sbb
adc
sbb
add
xor
cs
push
jl
inc
sbb
add
test
jb
mov
cmp
mov
ja
dec
pop
scas
pop
iret
jne
stos
sub
ja,pt
call
scas
or
cs
push
loopne
mov
fisttpll
jbe
push
mov
or
clc
xchg
xor
mov
ret
jg
loop
ret
pop
inc
out
stos
ja
aaa
hlt
dec
pushf
lcall
cmp
sbb
pusha
addr16
mov
loope
or
cwtl
ficomps
fs
lods
mov
cmp
fsts
mov
mov
dec
je
sbb
fcmovne
sbb
mov
pop
shll
out
pop
mov
pushf
cmp
lea
cmp
out
cld
adc
js
mov
mov
dec
and
jp
std
mov
mov
sub
in
dec
fistps
popf
in
mov
inc
add
fwait
xor
test
xchg
popf
cmp
xor
cmc
fs
adc
xor
lcall
xor
sub
sub
sub
pop
loope
push
mov
lea
call
data16
sti
mov
js
fdivp
xchg
mov
cmp
repnz
out
mov
jp
dec
rcl
dec
ja
sti
push
or
xchg
ret
xchg
sub
in
lret
pushf
sub
movsl
push
movsb
xchg
into
hlt
in
sub
dec
hlt
fidivrs
xor
push
test
or
lcall
shlb
movb
and
les
out
push
cs
das
ffreep
pop
jne
pop
push
sub
ret
adc
xchg
sub
push
cmc
xchg
inc
push
in
mov
call
or
dec
lret
mov
pop
int3
enter
fdivs
outsb
sahf
mov
add
dec
outsb
insb
push
sbb
cld
rcrl
dec
pop
jb
and
movsb
cmp
sbb
ljmp
push
addb
rcll
inc
mov
cld
sahf
cltd
gs
cmc
sbb
movsb
jge
aad
xchg
movsl
mov
loop
mov
fildl
mov
pusha
mov
dec
sub
push
sub
dec
icebp
ror
sbb
jns
dec
inc
mov
sahf
jg
adc
arpl
ficoml
outsl
lret
adc
insl
testb
mov
xorb
es
test
mov
push
xor
popf
xchg
outsl
mov
mov
in
jp,pn
mov
cmc
add
jne
add
push
sbb
adcl
subl
sub
not
push
inc
sub
jg
xor
test
cltd
cltd
fistpl
pushf
out
xchg
push
test
jo
movsb
iret
inc
cmp
add
push
insb
arpl
adc
mov
sarb
mov
enter
jae
in
push
in
pop
ret
mov
jne
out
mov
cmpl
std
or
add
push
xorl
jae
outsb
xchg
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
lahf
aaa
push
or
sbb
adc
sbb
dec
jg
and
stos
dec
add
stos
or
pop
mov
mov
ss
or
mov
aad
jle
adc
stc
or
jae
rcrl
mov
loope
pop
and
sub
mov
add
jbe
movsl
lret
cmpl
inc
lcall
sahf
push
xor
sub
mov
test
or
sub
addb
mov
pop
push
setl
popa
loopne
mov
push
icebp
sbb
test
pop
or
arpl
call
sbb
xor
mov
jge
jl
xlat
xchg
sbb
das
jns
pop
jbe
icebp
mov
and
or
adc
rolb
test
fldt
jl
lret
aas
or
sbb
out
xchg
notb
dec
mov
popf
mov
xor
jmp
ret
out
stos
jp
dec
xor
mov
loope
loopne
mov
jo
ljmp
shl
inc
fucomi
push
and
das
call
mov
lods
jne
rol
xchg
cld
adc
inc
pop
dec
inc
push
push
inc
adc
out
xor
outsb
dec
adc
xor
insb
les
mov
push
inc
add
popf
enter
cmpsl
les
dec
and
ret
rorl
fdivs
inc
and
test
inc
xor
fnstcw
mov
jb
lods
mov
mov
jge
fisttpll
xchg
push
jecxz
inc
xchg
mov
shrl
std
pop
jle
sbbb
out
sbb
flds
int
mov
mov
js
adcb
adc
icebp
xchg
js
test
mov
inc
push
dec
sub
aas
xchg
movsl
push
xchg
imul
movsb
aaa
mov
xor
adc
call
mov
xor
cmp
sbb
int3
loopne
mov
and
push
lahf
push
clc
pop
call
lock
xchg
iret
add
nop
xchg
xor
adc
mov
add
and
jmp
adc
std
mov
inc
popf
decb
rorb
jp
pop
jb
pop
add
mov
popa
not
xchg
mov
int3
outsl
fcoms
push
xor
mov
shlb
or
pop
dec
pushf
inc
test
call
movl
fldl2t
pop
lods
adc
out
adc
scas
lcall
in
adc
cmp
mov
lock
mov
mov
shl
pop
mov
cmp
inc
outsb
xbegin
scas
stos
insb
xor
out
sub
stos
adc
shll
add
fwait
ja
rcr
out
fsts
pusha
and
and
adc
aas
or
pop
pop
sbb
lock
mov
movb
fstps
gs
mov
lret
or
push
push
data16
cld
cmp
out
repz
stos
data16
inc
scas
insl
pop
popf
xchg
iret
out
addr16
push
push
xor
mov
cli
pop
loope
adc
jmp
mov
subl
jmp
mov
push
in
xor
mov
push
sbb
adc
sbb
cmp
int3
adc
loop
out
mov
outsl
mov
es
or
mov
pop
xlat
das
pop
sub
and
push
lahf
lock
jp
mov
movntq
push
ljmp
dec
pop
xchg
jl
push
dec
or
xlat
cmp
mov
cwtl
daa
sub
insb
out
js
sahf
xor
sti
add
aad
ret
pop
jl
repz
cld
scas
adc
cmp
fmuls
push
adc
fistl
cmp
call
hlt
jae
push
nop
inc
mov
repnz
inc
xlat
sahf
and
xchg
test
call
push
mov
dec
cli
lods
lea
psrad
test
cmpsb
fists
ds
cmc
sbb
sub
add
lock
outsl
rep
pusha
das
xchg
pop
pop
je
add
cmpsl
stos
rcll
sub
mov
xchg
jge
clc
sbb
sarb
loopne
mov
push
test
fisttpll
cwtl
arpl
out
adc
out
xchg
sub
sub
push
mov
lret
pop
xor
in
dec
or
xchg
mov
sbb
mov
aad
andl
cmpxchg
mov
loopne
insl
sub
xlat
addr16
mov
mov
mov
cmp
sarl
fistps
loope
into
fwait
sbb
xchg
push
arpl
jle
sub
mov
mov
filds
xchg
shl
fisttps
ss
adcl
mov
fimuls
and
in
dec
sbb
test
sbb
clc
jns
add
in
or
sbb
or
arpl
jg
popf
and
scas
or
pusha
sub
inc
icebp
jo
push
ret
outsl
or
aam
and
inc
adcl
imul
mov
stos
push
subb
shll
lods
jg
rorl
inc
dec
pusha
das
xchg
jmp
and
jo
cmpsl
mov
movl
cmpsb
adc
cmp
inc
pop
daa
in
sub
ret
fs
xor
mov
sti
adc
lods
inc
jl
les
lods
dec
adc
outsl
fldenv
push
jmp
jp
pop
js
gs
pusha
mov
sub
loope
fs
lds
jnp
fistpl
pop
lods
xor
mov
push
outsl
dec
addr16
test
ret
aam
adc
divb
orl
push
out
xchg
rol
sbb
push
cmp
imul
mov
mov
sub
sbb
add
call
push
js
rcrb
stos
sub
popf
inc
or
and
adc
mov
lcall
mov
repnz
sbb
dec
imul
mov
and
inc
inc
in
push
mov
fiadds
dec
jbe
cmpsl
xor
inc
mov
js
sub
mov
jecxz
icebp
mov
sub
xor
and
ljmp
ljmp
xor
cmp
lds
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
cmc
xor
repz
iret
xchg
jo
int3
adc
ret
mov
out
xchg
daa
fisubrl
pop
xor
loopne
imul
or
shrd
in
int
adc
mov
dec
xchg
push
sbb
push
mov
push
mov
pop
adc
rorb
xchg
nop
xchg
mov
xor
hlt
mov
inc
xchg
adc
push
unpcklps
dec
xor
xchg
lahf
jno
cmp
arpl
inc
outsb
pushf
das
or
jge
into
jp
xchg
and
cli
and
daa
in
cwtl
mov
ficoml
les
adc
pop
push
sub
or
or
inc
mov
int
jae
add
mov
mov
adc
dec
jp
std
mov
and
xor
je
or
out
and
popa
cmp
adc
int3
mov
ljmp
out
or
pop
nop
inc
xor
loopne
mov
fwait
pop
mov
je
sub
mov
sub
mov
lea
mov
xchg
dec
aas
iretw
or
sahf
ret
lret
mov
les
out
xchg
fcoml
cmpsb
push
ljmp
les
pop
int3
push
and
xor
int3
and
jle
push
dec
mov
sub
inc
shrb
int
adc
xor
imul
push
xor
xor
ds
movsb
scas
mov
push
cmp
pop
cmp
mov
xchg
notl
mov
inc
out
daa
sub
dec
ret
idivl
int3
push
lods
pop
adcb
cmp
xlat
adc
ret
dec
int
push
xchg
or
mov
dec
or
jno
mov
clc
sbb
xlat
bnd
rcr
aas
movsb
mov
push
mov
jno
fsave
dec
popf
adc
int
lds
xchg
or
and
in
lods
sub
out
lods
xchg
mov
xor
mov
jl
lahf
pop
scas
push
pop
les
idivl
jmp
jecxz
adc
sub
mov
in
pop
sahf
add
adc
pop
xlat
scas
sub
lahf
divl
push
icebp
loope
das
cmpsb
test
sub
mov
int
dec
mov
lock
je
xchg
adc
scas
inc
incl
aaa
sbb
dec
inc
inc
mov
movsb
out
test
cs
sub
scas
lods
mov
lods
cmc
xor
mov
adc
pushf
mov
xchg
ljmp
and
popa
sub
push
fsubs
stos
cld
dec
xor
cmp
into
sti
loop
adc
ret
mov
sbb
cmpsl
into
pop
repnz
cltd
jne
mov
ljmp
sbb
shll
add
inc
fmul
lahf
adc
arpl
ret
xor
sub
pop
scas
jae
sub
stos
or
jl
mov
orb
sub
out
les
mov
adc
mov
pusha
jecxz
push
cmpsl
lds
test
and
jecxz
std
das
pusha
dec
subb
jmp
jmp
mov
xor
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
inc
and
push
sbb
adc
sbb
das
mov
stc
sbb
enter
cmp
dec
sub
imul
adc
rol
mov
fpatan
dec
data16
push
fdivs
push
dec
ss
into
cmpsl
cli
jae
xchg
or
fmul
lods
sub
xchg
movsb
ljmp
xor
jnp
cmp
add
and
cmp
jne
lcall
icebp
scas
adc
scas
adc
shll
cmp
mov
repz
adc
lods
xchg
jo
int
ret
xor
inc
or
push
int
adc
xchg
xchg
loopne
jl
aaa
cltd
or
fwait
stos
ljmp
ljmp
push
outsl
xor
imul
mov
data16
test
cmp
or
test
push
and
out
mov
mov
sbb
add
insb
sbb
or
std
jp
stc
mov
jge
fildll
mov
jnp
in
jo
repz
push
jp
or
pop
mov
mov
dec
xchg
jmp
add
pop
mov
mov
or
stos
push
sbb
aaa
lret
pxor
fcomps
cmp
insl
adc
mov
inc
sub
loop
ds
xor
jmp
mov
mov
out
mov
lret
push
or
repnz
sub
in
cwtl
popl
aam
fidivrs
lods
icebp
dec
fucom
adc
mov
dec
das
dec
stos
or
fisttpl
jmp
inc
scas
xlat
std
xchg
test
mov
std
jb
ss
dec
pop
cmc
mov
outsb
stos
ja
push
jne
sbb
add
popa
call
mov
jp
jae
popf
mov
mov
daa
push
mov
lock
xorb
into
cmpsl
and
inc
cld
jp
out
lea
ja
mov
insl
dec
mov
sub
cs
mov
js
lahf
xorb
jl
js
fildll
ret
dec
xchg
pop
into
loopne
out
fucomp
mov
xchg
stc
dec
call
in
jo
insb
cmpb
movsl
xchg
dec
sbb
dec
sti
and
jne
mov
adc
xor
test
cmpsb
rorb
cmp
cmp
leave
sbb
imul
mov
inc
and
pop
adc
jle
pop
xor
sbb
cmc
mov
aas
insb
add
and
hlt
enter
js
or
cmpsb
repnz
data16
cwtl
adc
daa
ret
and
inc
jb
jg
sbb
and
add
push
pop
pop
dec
ret
test
mov
stos
jmp
adc
pop
in
jg
out
movl
inc
sub
outsl
leave
or
jmp
xor
mov
rcrb
and
stc
push
stos
add
pushf
pop
cmpb
or
shrl
test
cli
js
push
lods
repz
rol
xchg
in
pushf
cld
rcl
out
out
jae
jb
cmp
es
jecxz
shrb
push
daa
idivl
xchg
jno
dec
call
lret
andb
sub
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
push
sti
loope
jnp
in
sub
mov
sti
pop
leave
rolb
mov
adc
xor
fisubl
rorl
and
nop
sbb
add
jp
inc
js
out
in
orb
push
test
mov
dec
adc
ja
mov
lods
sbb
leave
pop
sar
xchg
sub
pop
jo
xchg
dec
xchg
jle
imul
adc
stos
aaa
lea
lods
mov
cmp
mov
movsl
xchg
sbb
addl
rorb
int
out
mov
cs
in
sbb
push
dec
bound
sti
xor
mov
push
orb
dec
ljmp
cld
cmp
adc
dec
std
mov
lret
mov
push
negb
popa
jo
test
sarb
push
cltd
mov
iret
xor
sarl
ret
jns
pop
lret
jge
dec
in
out
cmpl
icebp
inc
shlb
xchg
lock
mov
mov
fidivrs
ljmp
outsb
lea
xor
lock
sahf
or
loop
jne
pop
js
inc
shl
mov
adc
adc
xchg
mov
cmpsb
mov
pushf
xchg
xchg
shlb
out
push
add
int3
cmc
mov
xchg
cmp
mov
insl
xor
pop
jne
mov
pop
mov
xorb
jle
sbb
jnp
mov
cltd
shlb
sub
icebp
xor
imul
xchg
sub
rcll
jmp
sarb
inc
dec
inc
dec
jle
stos
pop
xchg
sub
jmp
movsl
lock
les
xchg
sbb
add
push
or
iret
shlb
inc
ds
loope
jb
mov
mov
xchg
popf
cwtl
shl
xchg
mov
repnz
cmp
sub
jp
out
xchg
adc
int
nop
incl
std
das
jmp
stos
or
mov
std
ret
pop
xor
iret
div
and
sbb
lds
iret
inc
pop
sub
fsubs
inc
and
scas
ret
mov
jmp
nop
out
cmp
xor
xor
and
divb
jp
jbe
mov
fwait
push
mov
testb
or
cmp
xchg
or
xor
lahf
dec
add
lcall
clc
pushf
push
add
pop
xchg
push
adc
add
jo
lods
jo
incb
pop
jle
mov
cmp
add
sbbl
pop
daa
sbb
xor
shrb
jle
outsl
sbb
mov
mov
pop
mov
ficoms
push
and
call
nop
out
jo
pop
loope
xor
rorl
or
jecxz
cmpsl
and
pushf
sbb
movsl
ret
fisttpll
mov
mov
addr16
sar
adc
aam
dec
cmp
inc
and
lods
ljmp
push
lea
cmpsl
xor
push
xor
in
add
mov
je
pusha
addr16
mov
mov
cmp
jno
add
mov
test
sub
ljmp
pop
xchg
loop
and
jo
loope
loopne
inc
lcall
xlat
sbb
jno
xchg
nop
cltd
dec
pop
and
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
enter
inc
jmp
sbb
imul
sub
mov
jbe
mov
fsubrs
jle
dec
xchg
outsl
mov
adc
clc
jnp
mov
cmp
mov
xor
pop
fs
mov
sub
pushf
sbb
or
jecxz
orb
add
mov
pushf
dec
jae
test
mov
sbb
inc
mov
xor
pop
arpl
insl
sbb
ret
pop
dec
sub
xor
leave
cli
dec
je
out
std
fmulp
mov
adc
lds
loope
shll
inc
movsl
mov
fsubl
fwait
arpl
add
mov
adc
ja
in
or
mov
dec
pushf
dec
addb
aad
test
push
jbe
popf
cld
roll
fists
je
popa
leave
mov
jl
aaa
mov
cmp
in
inc
mov
shlb
inc
outsb
movsb
cmp
stc
loope
cmpsb
aad
addb
and
add
stos
lret
push
pop
inc
jecxz
jmp
push
mov
in
ds
out
in
cmp
out
ja
xchg
sbb
jl
pop
dec
pushf
jbe
adc
xchg
pop
push
pop
xor
sub
jp
adc
les
jge
negl
mov
fidivs
mov
popl
shrl
jl
ds
xor
mov
cmp
cmp
xchg
cltd
and
stos
lods
leave
cwtl
ffree
sahf
xlat
call
ljmp
pusha
out
pop
mov
cmp
popf
aad
loop
mov
ret
adc
test
mov
and
xchg
lahf
mov
lcall
xor
sbb
add
inc
paddusb
sub
stc
or
xor
jmp
mov
mov
int
sbbb
pop
inc
stos
mov
mov
pop
nop
add
push
test
insb
mov
pop
loope
push
dec
data16
test
xchg
stc
lahf
adc
xchg
add
mov
iret
pop
add
in
outsl
and
popl
inc
shll
pop
lret
cmpl
or
pop
adc
mov
jmp
stc
pop
ds
inc
mov
mov
pop
inc
or
pop
mov
jb
mov
imul
pop
jb
xchg
or
mov
jae
or
dec
mov
mov
dec
mov
lods
or
aas
push
cmpsl
sar
jbe
xchg
cmc
push
aas
xchg
inc
jl
xlat
pusha
out
add
xchg
cmp
jne
roll
mov
jae
adc
fadds
das
repnz
push
mov
ror
inc
ror
sub
or
lahf
mov
sub
lret
xchg
xorl
cltd
pop
sbb
test
lahf
cmpb
rcl
add
xor
or
sub
fwait
pushf
les
popa
call
ljmp
out
out
xor
xchg
lds
popl
test
cmp
jae
push
in
pusha
cmp
xchg
xor
call
cmp
movsl
addr16
sbb
add
jmp
repz
push
daa
fisubrl
cmp
mov
push
cmpsl
cmp
push
sub
jbe
fnstsw
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
clc
push
loope
sbb
adc
sbb
lea
out
sahf
push
sti
jo
in
xor
sbb
movsb
sahf
rol
incb
jp
mov
and
loope
ja
cmp
aam
sub
insl
loopne
push
roll
lds
fidivrl
jge
negl
or
sub
sbb
shll
mov
sub
mov
loopne
sahf
cmp
cmc
adc
enter
xchg
leave
bound
push
cmp
stos
push
cmp
inc
loope
ret
jp
push
adc
shrb
or
loope
mov
or
push
mov
xchg
arpl
xchg
adc
movsl
iret
mov
fs
in
stos
das
sub
dec
mov
add
jne
mov
xchg
mov
xchg
stos
cmp
scas
lock
mov
mov
dec
cmp
pop
lret
pop
stos
fdivl
jbe
insb
pop
mov
adc
notb
adc
jb
mov
cwtl
mov
lds
inc
pop
addr16
les
cmpsb
cmp
sub
stc
movsl
mov
outsb
adc
pop
mov
js
jmp
arpl
pushf
mov
lds
outsb
cmp
loopne
sarl
cmpsl
sbb
jnp
in
js
sbbl
and
pop
iret
daa
mov
jb
mov
pop
mov
test
and
push
pop
int3
roll
out
loope
filds
sbb
xchg
data16
cld
and
xor
and
push
imul
das
enter
fstpt
fidivl
inc
and
mov
and
push
insb
adc
push
pusha
jmp
lds
aad
mov
popa
lret
or
push
fsubrs
cmpsb
xchg
pop
adc
pop
cmp
mov
inc
push
push
inc
xchg
xchg
rcll
pop
ds
pop
push
rorb
rolb
add
xchg
mov
lods
and
cmp
jecxz
or
xchg
lds
test
ljmp
xor
out
sbb
mov
inc
mov
or
sbb
fwait
add
pusha
into
fstpl
scas
test
frstor
sarb
inc
lods
inc
leave
addr16
cld
or
adc
push
fsts
fdivrl
pop
mov
push
cmp
stc
mov
ja
mov
sbb
inc
pop
in
outsl
test
or
jmp
out
lock
fwait
adc
and
lea
mov
push
addr16
jns
sub
int
push
imul
ficompl
xor
std
ds
int3
adcl
mov
pop
and
stc
flds
add
push
mov
xchg
insb
out
xchg
push
mov
jo
adc
data16
aad
xchg
or
xchg
mov
adc
andb
stc
int3
stos
dec
add
jg
pop
idivb
lods
or
push
sar
mov
dec
cmp
mov
push
pop
mov
mov
aad
adc
and
data16
leave
adc
mov
incl
ds
rcll
jg
cs
loop
mov
lret
pop
jmp
pushf
sahf
mov
movsb
idivl
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
dec
aam
jo
fistl
sbb
adc
sbb
filds
dec
pushf
pop
nop
adc
inc
mov
fsubrl
push
jg
and
mov
inc
jge
ret
test
repz
jle
std
cmpl
lds
mov
outsl
in
jecxz
lret
pusha
cmc
xor
ss
or
mov
repnz
jb
std
std
mov
pushf
ljmp
popa
sbb
aas
aad
loope
sbb
fnstsw
mov
inc
and
shll
orb
dec
push
dec
pop
sub
or
aad
rclb
or
sub
dec
jmp
daa
out
mov
insl
push
scas
divl
aas
fsubrs
daa
mov
bound
lods
jae
sbb
shrb
push
xchg
dec
es
inc
inc
jle
inc
xchg
xchg
aad
daa
push
add
enter
dec
inc
ret
bound
std
push
fcmovbe
gs
cwtl
jb
in
mov
les
mov
call
shl
xor
and
push
xlat
pop
out
ds
dec
mov
cltd
lods
jecxz
cmp
sbb
nop
jb
adc
mov
in
fisttpll
aas
ss
cli
pop
add
jge
xchg
ja
cmc
icebp
cwtl
ja
lret
push
and
push
cmpsl
jmp
mov
sbb
sbb
pmulhuw
insb
gs
xchg
push
mov
sub
dec
out
in
cmp
xor
xor
test
lods
cli
or
or
push
jbe
mov
fdivrl
pop
data16
push
sbbl
cmp
cmp
ss
jg
ret
sub
mov
adc
cmp
test
shrb
mov
imul
sti
mov
add
pop
xchg
push
ss
mov
or
cmp
jne
fnstenv
ds
push
cld
pushf
add
add
mov
popa
lahf
bound
push
inc
xor
jnp
mov
cmpsl
mov
inc
lods
jnp
and
mov
sbbl
loopne
icebp
and
cld
cltd
sub
xchg
jo
ret
inc
imul
xor
jne
aam
xor
push
sti
shrb
ja
dec
imul
in
pop
pop
push
and
mov
sbbb
inc
push
dec
cmp
push
into
xchg
or
cmpb
jle
imul
mov
imul
leave
cwtl
jmp
mov
adc
lret
pop
aas
loopne
cmp
adc
xchg
lret
jmp
mov
dec
enter
into
mov
pusha
pop
xorb
and
div
xchg
sti
pop
xor
test
insb
dec
adcl
fsubrs
lahf
push
ljmp
orb
mov
mov
shlb
inc
xor
lret
push
loope
iret
sub
sub
lcall
xchg
rcrb
sbb
shl
andl
or
sti
mov
ja
outsl
bound
cmpsl
mov
dec
dec
sarb
cmp
into
popa
aam
mov
push
mov
iret
arpl
push
and
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
mov
dec
jle
rcll
sbb
adc
sbb
cmc
mul
rcll
jl
repz
mov
ja
xchg
inc
aas
xchg
into
sbb
inc
outsl
xor
cmp
push
bound
mov
fdivs
mov
push
mov
add
ret
xchg
out
call
pop
jmp
mov
pop
aad
movsb
popa
xchg
scas
sbb
testl
sbb
jb
mov
or
pop
lcall
icebp
clc
jle
mov
fsubl
out
lahf
inc
outsb
dec
jbe,pn
jns
imul
add
js
rol
jmp
inc
mov
push
mov
daa
lds
out
cs
mov
xlat
push
push
xorl
outsl
das
inc
cmpsb
jmp
cmp
es
jge
adc
xor
rcrl
test
adc
lock
jbe
adc
ds
push
pusha
pusha
ficompl
js
std
stc
dec
call
stc
sub
inc
data16
sub
jne
jnp
or
lcall
jns
orb
mov
add
lcall
inc
js
outsl
stc
adc
or
divb
lock
bound
lea
pop
sbb
test
in
pop
cmp
loop
imul
mov
mov
and
pop
inc
pop
orl
add
xchg
lods
xchg
mov
and
mov
jecxz
lods
popa
sbb
scas
cmp
mov
xchg
and
lret
push
xchg
mov
adc
test
mov
mov
or
scas
push
pop
sti
sub
adc
jnp
sbb
js
lods
or
mov
adc
sub
inc
inc
mov
mov
lock
mov
repnz
in
mov
jecxz
js
inc
dec
adc
cmp
or
es
mov
notb
movsb
sahf
mov
mulb
cli
mov
nop
sub
clc
mov
adc
orl
and
pop
lcall
cwtl
sahf
lea
in
push
push
cmpsb
jecxz
mov
movsl
aad
inc
das
mov
mov
je
inc
je
hlt
popa
mov
cmp
sti
mov
enter
cmp
cmpsb
test
push
mov
adc
adc
mov
daa
pop
jne
andl
cmp
jae
imul
jge
add
jl
or
sbb
adc
jbe
loope
mov
lods
imulb
imul
rclb
mov
xchg
jo
push
sbb
and
sbb
pop
xchg
sti
add
pop
mov
jmp
xlat
add
andl
insb
xchg
mov
cmp
jl
cmp
jge
stc
scas
test
or
jg
leave
sbb
rclb
xor
dec
cli
sub
bound
dec
add
mov
add
adcl
push
mov
ja
inc
jb
cmpsb
out
es
pop
mov
repz
or
or
scas
adcl
insl
inc
out
sbb
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
mov
mov
sbb
sbb
dec
arpl
mov
popf
push
mov
jge
popf
dec
lds
mov
and
ficomps
cmpsl
pusha
addb
xacquire
scas
mov
mov
out
cltd
or
mov
lock
xor
jle
rcr
repz
rcr
pop
ucomiss
xchg
push
mov
clc
sub
mov
popa
out
inc
lret
sub
dec
rcrl
outsl
jno
jno
jo
sub
incb
aaa
push
push
adc
pusha
in
jg
inc
scas
js
sub
in
notb
adc
lret
loop
aaa
outsl
addr16
push
je
sub
fidivrl
out
push
insl
xor
and
push
arpl
test
jae
pusha
push
push
rcrb
repz
lock
mov
adc
arpl
hlt
add
or
and
shrb
stc
push
imul
imul
pop
mov
inc
xchg
mov
push
movsl
or
add
in
stos
mov
cltd
and
adc
jle
test
jno
fldt
dec
mov
jae
loopne
cmp
push
divb
out
clc
add
fstpl
add
push
xor
mov
push
es
je
stc
mov
dec
aaa
mov
cmp
push
jmp
ss
cmp
add
push
cmpsl
fnstcw
add
aad
add
in
pop
sahf
sbb
xchg
jg
out
dec
loope
sub
inc
xchg
daa
cmp
cmp
rsm
adc
push
cmp
loop
inc
rorl
jl
pop
in
xor
cli
lcall
lahf
gs
xor
pop
test
dec
jge
in
inc
es
fsubs
arpl
int
sub
fisttps
xor
jmp
mov
outsb
mov
les
xchg
test
in
inc
pop
rolb
cmpsb
dec
adc
insl
shr
mov
push
dec
cmp
pop
mov
shll
sub
xchg
jbe
add
popa
scas
ret
cmp
in
sbb
cmpsb
xor
in
pop
lock
jl
sti
ret
sub
mov
push
mov
sbb
dec
dec
cmpsb
mov
mov
cli
mov
lock
jecxz
dec
adc
fcomi
movsl
inc
inc
adc
mov
shll
inc
add
mov
sbb
xor
mov
in
push
cwtl
ja
xchg
xchg
add
andb
sbb
addr16
or
adc
fidivl
dec
dec
out
fwait
cmp
xchg
xchg
xor
decl
mov
enter
out
xor
data16
dec
icebp
call
ja
add
push
ds
xor
sti
imul
and
mov
dec
mov
mov
mov
cmp
ficompl
add
adc
adc
add
jbe
inc
ret
fisttpl
pushf
test
jbe
lock
xorb
daa
call
addr16
cmp
cmp
mov
ficoms
orb
loopne
jmp
lcall
cmpsl
adc
sub
lock
aam
or
cmp
add
daa
sbb
push
xor
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
dec
jo
lds
sbb
adc
sbb
loop
movsl
or
ret
data16
sub
data16
insl
insb
test
test
ret
cmp
mov
xor
add
loop
jb
jbe
cmp
outsb
push
dec
dec
mov
fdivl
xchg
pop
repnz
pusha
ds
add
call
mov
test
unpcklps
sub
fisubrl
add
lahf
add
sub
xchg
inc
int3
lret
imul
xor
mov
fcmovb
ror
addr16
lret
lahf
ja
sbb
push
iret
mov
fldt
dec
mov
jecxz
imul
jb
jg
in
cmp
push
adc
decl
mov
movsl
jge
pop
scas
lcall
aam
dec
jecxz
into
adc
cmp
push
sbb
xchg
fucomp
push
pop
mov
mov
dec
and
and
sub
dec
lods
cmp
xchg
andl
dec
xchg
aad
dec
cld
fisttps
fidivl
inc
lahf
and
and
xor
fstpt
dec
and
xor
cli
dec
cmp
sbb
movsl
adc
and
aas
or
sbb
mov
push
subps
daa
push
mov
sub
ds
dec
outsb
dec
push
xchg
mov
movsl
jecxz
fimuls
fldcw
adc
fwait
mov
lret
lea
jmp
cmp
adc
inc
stos
adc
adc
dec
stc
icebp
gs
popa
xor
push
jp
inc
and
adc
repz
stos
push
movsl
cwtl
loope
popf
lock
andl
mov
mov
fisttpl
nop
jno
inc
inc
loop
popf
test
outsl
lret
sub
call
add
dec
jmp
push
adc
fcom
adc
xchg
xlat
xchg
and
iret
in
pusha
mov
jmp
imul
xorl
in
mov
shl
leave
fistpl
pop
daa
lahf
push
sub
imul
mov
in
cmpsb
cmp
ret
rcr
jle
mov
cmp
mov
popa
mov
jle
loopne
mov
inc
notb
add
mov
lods
mov
inc
js
imul
fisubrs
rcl
inc
sub
int
xchg
mov
lds
mov
popf
je
popf
data16
cli
in
lcall
xchg
out
cmp
mov
mov
repnz
std
out
js,pn
sti
js
fstpl
cld
int
xchg
inc
mov
dec
iret
jno
inc
cld
mov
jne
sub
pop
sub
out
cmpsb
inc
sbb
push
xor
popa
mov
and
adc
or
mov
arpl
add
add
pop
lds
das
dec
xlat
cmpb
mov
or
movsl
adc
and
cld
pop
mov
mov
pop
orl
push
inc
sub
mov
stc
loope
leave
rcl
push
inc
movsb
pop
in
es
xchg
call
stos
loopne
nop
testb
and
je
and
out
pushf
decl
inc
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
sbb
sbb
mov
test
xchg
repz
fs
shl
pushf
idivl
test
rcrb
and
xlat
in
push
in
mov
push
inc
imul
idivb
jle
pop
mov
push
lds
imul
inc
mov
cwtl
cmpsl
and
xchg
xlat
cmp
push
xchg
stos
push
jno
mov
add
into
xchg
out
mov
mov
sarb
ret
xor
sub
shll
push
rep
inc
aam
testb
xor
mov
push
fwait
into
and
jp
loop
jb
add
xor
sub
das
into
lea
add
mov
and
outsb
jmp
lcall
sbb
dec
fsubr
push
mov
dec
sbb
push
lea
stos
or
jge
push
add
movsl
divb
sub
or
popa
mov
sti
pushf
sbb
sub
cli
shll
sub
and
pushl
and
sbb
adc
movsb
push
orb
data16
into
ficoml
repnz
cli
ss
pop
mov
packssdw
mov
jle
cmpsb
popf
sub
movsl
and
push
ss
pcmpgtb
imul
add
lahf
push
mov
rorl
std
add
and
pop
mov
cmp
xor
jae
adcl
sub
lds
das
jne
sub
test
out
mov
xchg
daa
mov
inc
in
sbb
xor
mov
stc
sub
fisttps
xor
xchg
popa
dec
cltd
push
jne
cmp
inc
cmp
in
xchg
push
mov
into
dec
call
add
mov
fcomps
adc
cmp
loop
jmp
or
push
adc
cld
and
das
push
jle
sub
fmull
vaddsubpd
xchg
and
je
loop
test
jne
xchg
mov
mov
icebp
inc
testb
mov
or
xor
dec
jp
aaa
imul
sub
and
daa
std
cs
aas
iret
mov
mov
or
jl
aad
mov
dec
js
aad
inc
inc
loopne
out
insl
mov
fwait
adc
in
popa
and
jle
cmp
jle
sub
divl
fcmovnbe
in
stos
fwait
push
rol
and
add
xorb
mov
sbbb
arpl
lahf
xor
inc
mov
lods
fdiv
jo
ret
jg
inc
adc
sub
inc
cld
mov
pop
push
stos
mov
mov
adc
adc
jns
xor
lret
inc
sbb
xchg
pop
lds
or
jbe
mov
dec
cmc
call
cmp
inc
fsubp
adc
xor
adc
adc
int
inc
xor
inc
xchg
ret
adc
mov
shll
mov
xor
jp
ja
jnp
cmp
or
adcb
adc
imul
stos
sbb
cmc
mov
dec
cli
fwait
movsb
and
jp
incl
stc
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
shlb
stc
xchg
xor
dec
dec
int
lret
jne
mov
and
lahf
fistpll
mov
adcl
dec
adc
shrb
jmp
mov
xchg
out
in
aam
imul
in
aaa
cmp
sbb
hlt
movsb
dec
cmpsb
out
mov
sub
xor
paddb
add
adc
and
int
push
mov
sbb
mov
insb
cmp
data16
lea
mov
repz
sbb
xor
stos
nop
into
subl
ret
rorb
aad
add
xchg
sub
ljmp
dec
cld
xchg
push
mov
xchg
xchg
icebp
int
loop
push
sahf
push
jno
pop
xchg
cmp
rcrl
popa
jns
or
cld
adcl
ss
mov
sahf
pop
sub
add
aam
mov
loop
mov
fldl
jo
xor
xchg
mov
popa
cwtl
fs
xchg
fmull
xor
xchg
stos
out
and
shrb
inc
aaa
lcall
xchg
roll
test
inc
push
clc
call
enter
je
inc
inc
push
mov
and
into
div
aad
dec
push
sbb
push
sub
jae
mov
xchg
aad
adc
in
mov
repnz
cld
xor
fnstenv
add
sub
addr16
aaa
scas
and
les
inc
pop
cltd
and
jmp
xlat
pop
mov
out
sub
imul
cmp
xchg
sub
repnz
hlt
inc
sbb
add
push
fsubs
pop
push
mov
cmpsl
xchg
addr16
jo
xor
shlb
shlb
sub
pop
pop
adc
push
testb
or
xchg
pop
lcall
aaa
int
add
popa
add
dec
and
jmp
pusha
movsl
push
xor
insl
jo
ljmp
ror
and
shr
dec
std
shrl
and
lea
xchg
pop
shll
pop
jp
imul
mov
idivb
jne
mov
mov
bound
int3
inc
aam
push
mov
mov
pop
int3
adc
mov
jo
scas
jmp
int
or
fs
or
mov
movsb
xor
add
sub
jmp
cmp
stc
cmc
xchg
pop
ret
jbe
mov
cwtl
dec
mov
xchg
lcall
ficompl
lea
dec
jecxz
fs
mov
push
je
add
mov
dec
sbb
enter
inc
add
push
cmp
jl
out
xor
gs
fstl
mov
mov
enter
xchg
xchg
mov
push
sahf
jp
and
dec
ja
sub
sub
insb
inc
push
je
cmp
adc
xor
cmp
mov
adc
cmpsl
sar
aad
mov
andb
repnz
or
lahf
subw
inc
xchg
jmp
shrb
push
mov
mov
outsb
fsubl
cli
and
insb
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
fisubrs
xor
cmpsl
ret
jp
scas
int3
stos
out
mov
add
xor
mov
subb
or
dec
cmp
jnp
inc
iret
mov
jle
mov
call
and
mov
lds
jmp
btr
dec
stos
pop
add
mov
push
movsb
sahf
push
stos
xor
push
pushf
jne
mov
push
or
xor
mov
add
mov
sub
cmpsl
aad
ret
inc
leave
cmp
mov
mov
sahf
popf
repnz
std
inc
mov
mov
push
pop
popa
add
push
cwtl
mov
fadds
jo
inc
cmp
and
or
scas
arpl
aas
std
mov
sbb
adc
pop
cs
movsl
sbb
and
int3
lods
mov
icebp
shl
ret
xchg
es
movsb
dec
je
cmp
leave
and
fwait
dec
cmp
cmp
and
fs
dec
fidivs
sbb
out
js
rolb
adc
push
or
stos
cmp
jb
mov
fistps
in
aam
xchg
xor
add
outsl
and
lret
jne
pop
mov
stos
js
mov
ds
insl
adc
xchg
loopne
pop
pop
pop
insb
sub
leave
mov
in
push
cmp
sti
lods
mov
mov
mov
loop
mov
ds
xchg
movl
popa
pusha
dec
sub
aad
dec
aaa
push
or
dec
mov
jns
in
int3
outsb
adc
test
mov
ret
lods
xor
in
out
mov
jge
loope
lock
ret
in
pop
subl
div
mov
inc
and
and
loop
lods
in
inc
pop
push
mov
add
mov
dec
push
shl
std
xor
mov
adc
shlb
cmc
js
and
in
call
fcomi
popa
mov
mov
inc
jle
in
bound
rcll
jecxz
push
xchg
lahf
aas
push
xchg
testl
mov
xorb
loopne
out
xor
and
sbb
and
sub
xor
sub
pop
push
add
ljmp
fstpt
test
add
push
shll
pop
inc
dec
repz
inc
cmpb
jl
out
aad
xchg
sbb
push
mov
jmp
nop
les
fs
adc
fdivr
std
mov
or
andb
lea
cwtl
mov
repz
cld
sbb
push
dec
sbb
sarb
jle
divb
or
jns
push
push
pop
divb
mov
ljmp
inc
adc
hlt
std
ja
cltd
out
outsb
ss
cmpsb
ss
imul
iret
jp
dec
ja,pn
mov
js
jp
popf
or
nop
cmp
dec
call
lods
pop
aaa
clc
add
cltd
sbb
cs
pop
fstpt
add
leave
outsb
jnp
push
xor
adc
jecxz
outsl
mov
imul
sbb
dec
add
add
bound
inc
pushl
cld
pop
ljmp
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
push
lods
mov
test
sbb
cmp
jp
stc
jnp
push
add
ja
push
shll
repz
enter
adc
into
es
and
pop
sbb
add
adc
add
dec
aas
jmp
mov
cmp
xor
fwait
aam
mov
sbb
push
mov
mov
ret
jge
mov
les
push
pop
inc
mov
movb
xor
sbb
cmp
rcl
adc
xlat
nop
pop
xor
hlt
das
sbb
lods
and
pop
cld
iret
leave
inc
xchg
rep
xchg
xchg
hlt
cvtdq2ps
or
dec
in
cmp
lret
std
dec
fwait
sbb
fwait
dec
rcr
int
out
test
mov
push
popl
jnp
add
adc
mov
aam
or
and
dec
mov
movsl
fsub
sbbl
test
fucom
je
mov
shr
mov
mov
jl
mov
adc
pop
subb
xor
push
jp
loop
pop
lahf
and
insb
inc
add
inc
xchg
inc
jb
and
xor
mov
pusha
and
insb
or
mov
stos
das
test
stos
mov
call
ret
in
stos
push
pop
cmpsl
mov
movsb
dec
leave
adc
lcall
ds
adc
lcall
pop
mov
inc
xor
outsl
ljmp
and
jle
or
and
aaa
mov
xchg
fcmovb
movsb
mov
in
aam
pop
pop
mov
out
or
fsubs
cld
popl
lods
loope
addr16
mov
rorl
mov
imul
mov
jne
jl
adc
clc
push
mov
add
rclb
mov
int
adc
sbb
and
xchg
in
ficoml
mov
push
loopne
ja
jns
and
dec
mov
data16
inc
faddl
sbb
inc
mov
mov
pop
jne,pt
mov
ss
cmp
scas
mov
call
mov
bound
mov
mov
cli
imul
lods
out
in
inc
pop
add
mov
cwtl
pop
mov
dec
js
mov
and
cwtl
cmpsl
ss
cmp
outsb
adc
shrb
sbb
jns
xchg
or
rolb
xor
shlb
sub
lock
out
les
mov
fsubs
adc
fcompp
incb
adc
loope
push
adc
imul
into
add
adc
pcmpeqw
popf
ret
mov
pop
pop
xchg
sub
dec
cmpsl
das
lods
mov
scas
dec
and
mov
mov
cmp
adc
jbe
mov
push
icebp
add
push
jne
imul
or
jmp
dec
pop
adc
ds
pop
add
divl
or
jo
orb
pop
inc
mov
xchg
int3
or
ljmp
mov
add
sub
idivb
cmp
xchg
mov
in
jl
xchg
cltd
lea
arpl
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
inc
addr16
sbb
adc
sbb
es
test
fisttps
cmpsb
es
cmpl
adc
loope
imul
iret
inc
jl
xor
repnz
popa
ret
lods
data16
jmp
xor
lret
and
inc
pop
sbb
movsb
fs
in
pop
cmp
mov
inc
dec
pop
inc
int
pushl
add
pushf
inc
mov
inc
sub
test
ret
add
adc
lea
adc
sahf
cmp
cmpsb
push
scas
xchg
or
cld
imul
pop
int3
shll
and
in
jnp
sub
dec
push
bound
add
push
lds
xchg
imulb
mov
add
push
xor
cmp
add
push
enter
ljmp
movsl
in
mov
iret
jnp
out
xor
jle
je
inc
repz
adc
rorb
lcall
xchg
ss
imul
call
setbe
sbb
jl
sub
icebp
div
pop
inc
ss
xlat
mov
xchg
stc
sub
leave
out
iret
aam
jecxz
mov
pop
or
and
xor
mov
loopne
sbb
out
mov
test
jb
test
ror
loope
fwait
scas
gs
ret
fstps
ss
mov
inc
popf
fsubp
mov
test
outsl
jo
addl
adc
xchg
nop
sahf
and
sbb
sub
loope
xchg
rolb
pop
fnstsw
adc
cli
and
movsb
fwait
mov
negb
call
mov
xchg
or
inc
neg
dec
sbb
cmpsl
movsl
nop
fwait
ds
sub
inc
and
loop
mov
dec
scas
push
jo
pop
rcl
jo
lods
cmp
or
sarl
jl
daa
loope
push
push
fs
xchg
inc
test
scas
xchg
imul
dec
dec
icebp
pop
testb
adc
lcall
xchg
into
out
sbb
les
and
in
jmp
inc
cmp
dec
xchg
sub
cltd
shll
clc
mov
outsl
jp
dec
pop
test
loope
inc
mov
fidivl
outsb
xchg
xor
faddl
nop
push
cmpsb
mov
fcomps
mov
arpl
pop
inc
outsl
or
test
rolb
aas
or
sarl
pop
sar
out
lret
pop
fidivl
xchg
ret
insl
divb
lds
shrl
mov
push
or
repnz
xchg
subb
es
pop
dec
push
test
lcall
push
iret
std
gs
ds
cmp
ret
mov
sbbb
push
cmp
adc
fidivrl
mov
mov
loop
in
push
mov
lods
sub
jmp
clc
data16
jbe
xchg
lea
aam
mov
push
in
movsb
iret
stos
push
jb
bound
imul
xor
jg
nop
fcmovnu
push
in
cmp
adc
inc
mov
adc
sbb
sar
aam
add
or
roll
es
mov
enter
push
fcompl
cmc
lahf
jb
push
add
sti
push
test
jle
and
xor
js
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
lods
xchg
mov
and
sbb
sbb
mov
xchg
fbld
lea
pop
jl
popa
lret
aad
mov
jno
shlb
inc
mov
add
mov
ljmp
adc
popf
xchg
dec
ja
aad
sub
stos
push
dec
arpl
push
cmp
mov
add
pop
jg
xchg
out
insb
es
mov
pusha
cmp
jecxz
mov
test
lods
push
adc
jle
rcrl
dec
jmp
scas
push
push
stos
lods
fisubrl
dec
je
addr16
movsl
jne
xor
cmpb
push
jns
jne
mov
xchg
sbb
adcb
in
cmc
stos
aas
mov
fs
je
dec
out
sahf
push
xlat
sub
inc
jo
pop
mov
xchg
ss
adc
jp
jge
mov
fnsave
sub
push
sbb
sub
arpl
out
addb
xor
pop
jns
lds
mov
shrb
inc
add
mov
iret
mov
mov
pop
fs
lret
push
daa
sbb
lahf
lock
mov
xorb
push
sbb
xchg
or
movsb
loopne
or
push
out
out
mov
cmp
jne
popf
mov
pop
enter
fsubl
adc
pop
loope
cmp
xor
push
out
in
dec
les
sahf
xor
ret
daa
sub
add
std
sub
or
cmp
mov
test
icebp
mov
lret
stos
cmp
dec
xor
sub
pop
mov
lods
out
inc
outsl
inc
dec
or
jg
js
fildl
xchg
aam
inc
add
rcrb
mov
and
mov
mov
mov
sub
stos
stc
push
mov
pop
lods
sub
xchg
push
stos
dec
fistl
scas
hlt
cmpsl
std
lods
sbb
add
ja
or
mov
into
pop
into
int3
sbb
imull
cltd
add
gs
jge
inc
xchg
fs
cmp
ret
push
jmp
xchg
insb
push
adc
push
popa
insb
test
hlt
fwait
rorb
out
fwait
insb
lret
mulb
movsb
fcoml
nop
jl
jecxz
push
xchg
adc
lret
jg
pushf
mov
cld
add
lock
mov
mov
fidivs
sbb
pop
movsl
push
cs
jo
sub
aad
roll
inc
ljmp
push
imul
stos
xchg
call
xor
inc
test
adc
mov
mov
pop
and
sub
gs
std
std
lcall
cmp
xchg
fsubrs
rcl
mov
lcall
enter
fisubl
std
jno
ljmp
or
push
cmpsb
pop
fadd
add
sarb
cmp
int
in
loopne
cmp
pop
jl
test
inc
frstor
xchg
aad
loopne
adcb
or
movsb
mov
cmp
aad
push
sbb
iret
insl
fisubl
dec
sti
out
movsb
xor
lods
xchg
cmp
add
subl
das
fs
fldcw
and
ds
cwtl
es
fisubs
sub
add
shlb
aad
fcom
sub
jo
add
or
or
dec
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
jg
mov
and
sbb
fxch
mov
das
enter
ficompl
cmp
cmpsl
popf
arpl
push
inc
adc
sbb
inc
push
popf
dec
shl
mov
insb
std
addl
pop
rol
cltd
test
ljmp
inc
daa
or
test
rolb
int3
in
cli
sub
imul
and
jl
push
xchg
repz
scas
dec
fistps
sahf
insb
into
pop
mov
xor
test
prefetchwt1
out
xchg
cs
negb
pmaddwd
and
pop
sub
enter
andb
or
mov
jecxz
shll
jo
popf
js
and
push
sti
mov
add
fsubrl
loopne
dec
jne
shlb
inc
ja
push
inc
push
add
pop
in
ss
cmpsl
or
in
out
push
popa
adc
roll
pusha
mov
pop
mov
rcl
pop
xchg
jl
fldt
push
jecxz
jg
sbb
push
test
stos
or
xchg
cmp
imulb
inc
jl
inc
mov
pop
fwait
std
arpl
movsl
call
push
add
xchg
dec
mov
pusha
test
push
xor
imul
add
out
std
mov
jae
icebp
push
rorl
pinsrw
push
sbb
bound
stos
lock
push
mov
out
negl
sub
mov
test
mov
mov
or
out
pop
or
pop
dec
jp
stc
jle
mov
xchg
cli
jp
jae
jmp
adc
mov
fnsave
cmp
push
jecxz
pop
lods
mov
mov
scas
dec
jno
xchg
data16
gs
mov
enter
mov
in
out
mov
inc
sbb
sub
test
cmp
imul
pop
cmp
mov
iret
mov
loope
inc
push
xchg
xor
jo
cmp
cmpsl
jle
cmp
mov
xor
adc
xchg
imull
xchg
lods
jo
inc
add
aas
aaa
jbe
fmul
pop
xor
jg
mov
pop
jecxz
subb
xor
add
xor
sbb
cs
call
and
clc
hlt
mov
rcrl
es
adc
cmpb
clc
push
scas
orl
dec
inc
inc
arpl
inc
xchg
cld
mov
mov
int
mov
lds
sub
add
mov
lret
gs
cmp
dec
lods
int
inc
arpl
lods
mov
lock
push
imulb
aam
or
xchg
or
pop
mov
sbb
mov
add
movsb
cmp
and
movsb
jae
rclb
iret
push
scas
mov
imul
or
add
mov
dec
xchg
int3
imul
cmp
cmpsl
es
mov
arpl
loope
movsb
pop
test
adcl
lea
aaa
sbb
sbb
jmp
mov
sbb
jg
cli
out
inc
ss
mov
or
push
cltd
fs
stos
mov
aam
push
sub
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
cmc
data16
mov
and
sbb
push
sub
loope
cmp
cmpsb
add
and
pop
cs
or
pop
loopne
arpl
divb
xorl
xchg
cmp
mov
into
pop
leave
lret
jb
jp
xchg
cs
pop
cs
or
es
add
mov
cmp
scas
sbbb
out
cld
inc
jmp
mov
mov
jecxz
data16
pop
jmp
fmul
jp
sub
cmp
mov
js
daa
mov
imul
xor
hlt
cmp
mov
out
push
push
xlat
out
arpl
outsl
std
fs
scas
pop
pusha
loopne
shll
bound
js
roll
aaa
inc
movsb
pop
fcmovne
ret
sbb
push
fs
sub
jmp
popf
outsl
shll
adc
mov
scas
push
mov
bound
lahf
push
mov
pushf
jnp
push
sbb
fnstcw
test
pop
xchg
mov
jo
mov
sbb
cmpsl
inc
add
imul
in
mov
sbb
lret
adc
pusha
mov
mov
xchg
cs
enter
je
leave
and
adc
inc
cmp
cs
xchg
fstps
inc
imul
out
in
jg
pop
lds
or
or
mov
jge
inc
xchg
pop
and
stc
sahf
xchg
cmp
sbb
test
flds
popw
jno
daa
loop
ja
leave
sbb
popf
test
lock
adc
mov
arpl
int3
rolb
imul
jmp
pop
inc
dec
mov
cmp
mov
jno
ds
das
and
shlb
add
scas
pop
into
mov
or
xor
sahf
adc
bnd
shlb
sar
mov
in
jae
inc
arpl
subb
popf
pusha
mov
dec
pusha
sub
popa
jmp
dec
mov
add
push
dec
repz
add
pslld
int
mov
rcr
test
aaa
lcall
mov
out
mov
loopne,pn
and
jae
add
aaa
adc
ret
push
data16
jno
int3
push
jns,pn
aad
lcall
pop
jle
ffreep
sub
ficompl
int
divl
sbb
push
jmp
lcall
or
bound
jo
cmp
roll
mov
mov
sahf
insb
pop
xchg
addr16
or
bound
imul
push
mov
loop
popf
in
inc
push
je
sahf
mov
icebp
xchg
pop
adc
clc
xchg
push
push
call
xchg
lahf
adc
sahf
stos
or
fistl
and
adc
and
or
ror
cs
adc
sub
dec
int
sbb
dec
jae
xor
ret
int
dec
aad
inc
mov
xchg
xorl
sub
pusha
cmp
inc
ret
push
lahf
sbb
imul
mov
add
inc
aas
mov
ja
lret
inc
movsb
ljmp
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
dec
xchg
stos
mov
xchg
sbb
adc
sbb
adc
scas
iret
shrb
push
hlt
or
pop
es
dec
mov
adcb
push
cld
shlb
movsl
lods
xchg
jb
dec
jne
mov
adc
mov
lock
pushf
addr16
mov
jl
xlat
mov
push
jg
mull
into
adc
sbb
push
lea
outsb
pop
aad
loop
nop
mov
popa
shrl
das
mov
mov
jp
jp
ret
and
inc
lret
inc
dec
jp
add
movsl
insl
mov
pusha
imul
leave
call
andl
outsl
pop
pop
in
sub
daa
adc
aad
xlat
pop
pusha
fdivp
mov
xor
scas
jne
xchg
scas
sahf
push
sti
fdivrs
push
popf
push
mov
or
pusha
imul
popf
pop
cmpl
lds
add
subb
fcomi
imul
lret
jbe
lret
cmc
fcom
jns
sbb
sbb
add
sbbl
push
mulb
and
gs
pusha
out
clc
mov
or
ss
leave
out
jbe
ljmp
aad
xor
mov
ss
dec
into
xchg
pop
mov
ss
sbbb
data16
mov
cmpsb
fwait
cmc
xchg
lods
adc
jae
fst
movsb
add
aaa
lds
sub
icebp
pop
pushl
sub
stos
inc
out
cmp
xchg
cmp
into
mov
les
mov
sbb
or
pop
sbb
push
pusha
inc
fidivrl
arpl
jne,pn
xor
or
dec
push
fstl
enter
sub
insl
add
or
fistps
mov
int3
mov
mov
icebp
push
sub
js
pop
aam
inc
test
hlt
cli
push
add
cmp
cltd
dec
outsb
inc
daa
lret
mov
xchg
mov
das
inc
push
add
popw
jg
enter
adc
adc
repz
fldl
mov
mov
sbb
jae
inc
test
addr16
leave
ljmp
jle
pop
mov
dec
jmp
sbb
pop
push
cmc
iret
testl
jo
dec
subb
mul
mov
pop
inc
dec
dec
dec
daa
notl
push
mov
or
dec
rcrb
or
dec
sbb
je
fldl
shlb
repnz
stc
mov
sub
jae
aad
xlat
stc
addr16
lea
mov
and
cmp
arpl
add
cmpl
cmp
push
sbb
jno
inc
add
pop
in
out
mov
pusha
pop
mov
pop
in
sbb
mov
dec
or
leave
and
push
push
loopne
sub
daa
mov
dec
xchg
pop
or
adc
ss
mov
cmp
lods
jl
imulb
push
std
testb
push
sub
les
xchg
das
mov
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
pop
jo
jg
sbb
adc
sbb
pop
xlat
sbb
push
lods
ja
addr16
loope
fsubrl
stos
pusha
dec
jno
and
cld
jp
jae
into
cltd
xor
sbb
sbb
sbb
rorb
orl
js
icebp
pop
jo
cli
xor
mov
cmp
mov
sbb
pop
mov
iret
shl
dec
xlat
add
push
rcrb
loopne
mov
loopne
xorl
xchg
fstpl
push
fldt
lea
push
pushf
call
in
mov
call
es
lahf
fisubs
or
cmpsl
pop
dec
movsb
dec
add
jb
imulb
addr16
xor
inc
popf
sbb
mov
lahf
sti
mov
add
xchg
mov
cmp
fistl
and
mov
or
sbb
push
repz
lods
imul
and
je
add
pop
movsb
fsubrs
sbb
cmp
mov
inc
jl
rorl
pop
jmp
lock
mov
mov
push
ret
or
dec
mov
pop
pop
scas
iret
cld
jg
sub
sub
xchg
add
out
in
and
mov
nop
addr16
es
ss
repz
cmp
push
or
out
cmp
xchg
bound
mov
pop
push
pushf
aad
cltd
in
mov
sub
cwtl
xor
mov
mov
xchg
icebp
push
popf
jl
repz
fidivl
mov
sub
inc
adc
stos
test
mov
push
mov
cli
push
nop
sub
lret
push
lock
outsb
inc
insl
jne
mov
cmp
faddp
cmp
cli
pop
jecxz
adc
lds
leave
leave
cmc
add
ret
xchg
cltd
iret
shlb
sti
xor
aas
cmovns
negl
ror
sub
les
xchg
adc
jmp
mov
cmp
notb
fcomip
mov
jle
adc
shlb
out
xor
shl
stos
loopne
cmp
ljmp
in
sub
js
hlt
mov
add
mov
ss
into
inc
pop
fldt
faddp
jmp
mov
and
mov
ret
loop
popf
pushf
es
push
aad
or
pop
jl
outsb
xor
ds
arpl
push
inc
cmp
mov
add
out
shll
fidivs
pop
jmp
fisubl
sub
mov
in
mov
inc
out
pop
outsb
inc
ja
inc
xlat
jl
and
test
mov
fsubrp
cmp
loope
jg
mov
add
xor
jae
pop
jns
xchg
xchg
mov
arpl
jge
aas
cmc
and
xor
inc
sub
je
in
stos
sti
jle
fnstenv
jl
mov
push
pop
and
in
fucomp
push
mov
lea
jp
and
test
subl
mov
mov
xor
mov
lock
pop
and
mov
rcrl
insl
out
mov
mov
int
or
pop
stc
movsb
adc
scas
inc
insb
push
cmp
jno
mov
jnp
sarl
sub
cmpsb
outsb
xchg
jo
pop
dec
out
jl
mov
clc
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
sub
out
mov
sbb
adc
sbb
pop
pop
sub
sti
stc
fisttpl
or
mov
ss
and
cmp
cmp
mov
cs
mov
xor
test
jb
out
in
push
outsl
jns
stos
jnp
rorl
dec
mov
test
dec
xorb
inc
fadds
cwtl
fsub
aad
inc
push
or
roll
test
mov
dec
cwtl
dec
sti
jmp
xchg
sbb
pop
push
pusha
and
repz
ret
cmp
faddl
mov
mov
loope
mov
jmp
jmp
pop
and
aas
hlt
dec
sub
push
rclb
inc
or
pop
rorb
lcall
mov
lahf
dec
aad
add
xchg
xor
subb
sub
or
lret
cmpsl
rclb
ret
jge
mov
das
stos
cld
insl
mov
add
push
xor
in
mov
rclb
jb
mov
fiaddl
cli
popa
jae
mov
ja
loopne
inc
imul
sti
cmp
dec
rclb
adc
inc
add
or
daa
ror
pop
ss
repz
loopne
jecxz
push
cltd
dec
cmp
dec
mov
push
mov
aaa
repz
call
xchg
rclb
xchg
sbbl
or
jle
xchg
outsb
ss
cmpsb
cmp
test
imull
shr
jbe
sub
jle
inc
pop
and
call
mov
imul
jecxz
xchg
add
sbb
cmp
jle
mov
xlat
pop
out
add
sbb
std
ret
sbb
add
xor
lcall
lods
shl
paddusw
incb
test
cmp
loop
cmpsl
push
and
iret
sub
mov
fs
xchg
cmp
insb
pop
mov
mov
pushf
mov
push
ja
mov
aam
pop
jno
lea
pop
add
pop
leave
mov
out
clc
sub
cmp
mov
cltd
add
xchg
mov
xchg
cmp
fwait
lcall
and
jge
xchg
mov
je
push
in
mov
outsb
mov
sbb
test
insb
add
rcr
sbb
and
cmp
cmp
dec
mov
jp
ja
push
inc
shlb
mov
lcall
stos
sbbl
sbb
icebp
test
inc
jmp
adc
addl
jmp
push
icebp
decl
jne
sarb
movsb
std
mov
sub
js
loop
xor
cmpsb
lcall
xchg
call
test
sbb
cli
in
not
sub
mov
cmpsb
jns
or
icebp
push
xor
mov
and
lahf
push
xchg
daa
mov
sbbl
inc
mov
or
pop
ljmp
push
lea
sub
cli
push
or
cltd
or
push
outsl
jae
enter
or
mov
sub
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
pop
jne
xchg
jno
sbb
adc
sbb
jnp
dec
lds
cmp
ret
sub
adc
loopne
insb
mov
sub
fidivl
lock
add
sub
int3
out
xor
ret
pushf
or
in
xlat
inc
jmp
sbb
fsubrl
or
add
lahf
icebp
mov
sbb
loopne
and
mov
xor
ss
sbb
pop
mov
jb
jne
sub
mov
xchg
or
push
inc
in
addl
lods
xor
fs
scas
add
dec
or
sbb
in
xchg
mov
lea
push
std
inc
scas
push
ja
lds
sbb
pop
xchg
inc
inc
xor
pusha
in
js
mov
clc
mov
jg
aad
test
pop
sbb
and
and
scas
and
push
jge
mov
clc
movsl
outsb
icebp
adc
in
in
xchg
mov
cld
xchg
ljmp
data16
fwait
daa
mov
pusha
pop
loope
movsb
in
insl
xchg
jl
pushf
fs
cmp
sub
jbe
or
in
mov
or
xor
data16
push
orl
cmp
idivl
sub
pop
insl
ret
sub
sub
fwait
fwait
lret
fwait
mov
aad
shlb
out
and
jecxz
dec
sahf
jb
mov
fcmovu
xlat
jns
cmp
test
in
popa
call
pop
pop
pop
mov
gs
stos
sbb
mov
or
sub
je
scas
lret
test
arpl
ss
data16
add
pushf
icebp
scas
inc
mov
stc
sbb
mov
jno
fs
call
cld
shlb
mov
push
int
or
loopne
pop
sbb
dec
aas
es
jnp
sbb
cmp
lret
mov
xchg
enter
movsb
leave
jge
mov
es
fadds
cmp
xchg
adc
movsl
pop
mov
lret
dec
shll
sbb
dec
xor
pop
mov
sub
xchg
pop
and
cmp
fisubs
add
in
mov
sahf
sti
mov
add
stc
or
lret
cs
xchg
or
cmpl
mov
push
mov
mov
jle
push
pop
sbb
lahf
push
shl
xchg
mov
mov
stos
cld
add
or
pop
sub
mov
mov
dec
mov
mov
inc
adc
test
jnp
cli
sbb
xchg
pop
jb
shl
ror
adc
lahf
dec
lret
inc
jne
imul
test
sbb
stos
shll
xchg
jp
adc
xchg
mov
push
dec
jnp
mov
leave
adcl
sbb
clc
sub
push
sub
scas
rclb
test
hlt
icebp
mov
bound
shrl
and
add
pop
movsb
out
jnp
dec
cmp
lahf
cmp
das
inc
or
jmp
movsb
lods
incl
mov
leave
inc
xchg
or
std
pop
repnz
arpl
pop
mov
mov
mov
pand
sub
push
cmc
or
popf
xor
dec
pop
fidivrs
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
sub
jo
imul
and
sbb
xchg
lock
cli
test
lcall
fadds
sahf
lock
or
push
clc
or
jns
cmpl
ljmp
sub
lahf
test
pop
xchg
mov
pusha
and
jae
and
cmp
jmp
push
in
dec
adc
push
xchg
xor
mov
xor
inc
mov
orl
mov
fnstsw
jno
insb
push
add
imul
jmp
scas
cwtl
icebp
or
rcrl
inc
jnp
roll
inc
xor
test
imull
or
aad
pop
int
or
and
stos
bound
test
pop
hlt
sbb
pop
or
aaa
dec
jecxz
inc
lcall
arpl
xor
loope
jmp
jae
sbb
jl
adc
lahf
aad
mov
mov
pop
xor
inc
add
mov
test
leave
dec
lock
adc
ljmp
popa
adc
jg
jbe
mov
and
lret
stos
scas
scas
mov
loopne
xchg
xor
test
fisubrl
enter
iret
pop
xchg
mov
xchg
arpl
dec
add
lret
mov
mov
add
aas
xor
cmovle
shrb
fisttpll
add
jae
xor
loopne
rolb
cwtl
arpl
add
mov
sub
roll
orl
lods
mov
cmc
iret
into
xchg
push
lds
xchg
mull
cmp
xlat
cmp
sub
shrb
icebp
enter
dec
repnz
mov
lea
adc
insb
ja
aad
lcall
xchg
push
pop
fdivl
outsb
inc
andb
dec
dec
mul
out
and
loope
pusha
or
cmp
popa
movsl
mov
or
out
mov
jge
subb
mov
lret
push
push
outsb
lods
jb
pusha
mov
sub
or
dec
xchg
fstl
jb
ds
or
lds
cld
or
lahf
inc
in
and
das
xchg
xchg
adc
pop
fcoml
mov
call
jl
push
ret
push
adc
cmpsl
mov
push
dec
test
imul
push
cs
fidivl
icebp
push
mov
mov
jno
bound
pop
cmp
cltd
inc
ds
lock
xchg
push
lcall
xor
inc
push
ljmp
xor
sub
orl
fwait
cwtl
xorb
adc
std
add
push
imul
aad
push
movb
dec
xchg
pop
add
lret
mov
dec
les
mov
cmp
sbb
nop
mov
xchg
gs
jo
sbb
test
outsb
cmp
leave
mov
insb
fwait
pop
popa
mov
subl
and
or
stos
mov
mov
xchg
or
outsl
inc
ret
shl
mov
xchg
dec
add
dec
dec
cmc
sbb
fiadds
add
das
std
push
adc
mov
cmpsl
mov
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
pop
leave
sub
and
sbb
js
fs
and
jp
popf
push
jg
mov
or
xor
xor
jecxz
jae
add
dec
cmc
sub
jecxz
fisttpl
pop
push
out
bound
hlt
dec
stc
pop
cmp
jmp
or
dec
xlat
scas
clc
sub
je
jecxz
fisttpl
mov
stc
movsb
push
cmp
sbb
pop
jno
cmp
cmp
push
rol
add
lea
imul
cmc
out
mov
cmc
arpl
pop
movsl
mov
and
sub
out
subb
or
test
pop
mov
or
hlt
loope
ret
and
pop
xor
popf
imul
bound
adc
stos
sub
lret
fcomip
pop
add
and
mov
jbe
dec
scas
in
xor
mov
repnz
xchg
fistl
push
and
fidivrl
add
negl
xchg
push
addl
mov
scas
adc
stc
lods
dec
mov
sbb
add
push
dec
mov
adc
and
jmp
orl
mov
pop
out
sbb
sahf
fldcw
inc
lahf
jecxz
sti
cmp
pop
sti
movsb
out
cmp
test
sub
and
add
push
notl
sub
push
mov
sarb
sbb
pushf
cs
out
jbe
shrl
cli
test
je
insb
jl
cmp
mov
inc
dec
dec
lea
pop
inc
mov
dec
add
leave
cmpsb
cli
in
push
jbe
mov
push
cmp
data16
mov
xchg
rorb
bnd
es
jno
into
imul
dec
push
test
cs
icebp
sbb
push
add
pop
mov
mov
fidivrl
mov
iret
in
mov
mov
mov
test
aad
xchg
cmp
sbb
dec
cmp
mov
push
adc
out
std
cmp
sti
int3
mov
stc
mov
in
jp
jo
imulb
cli
push
lahf
rcrl
fildll
push
lods
cs
xor
xchg
adc
inc
lahf
lods
push
xchg
mov
pop
xor
and
fcomps
sti
bound
int3
sti
movsb
cld
cmpsl
fiadds
xchg
notb
shlb
add
adc
add
imul
inc
rorl
cmp
cmp
or
fstps
movsl
xchg
pop
mov
mov
xlat
scas
mov
sub
sbb
xor
in
push
cmc
out
shll
scas
push
fildl
mov
sub
jmp
inc
leave
out
stos
ror
xor
enter
jmp
ds
add
jbe
adc
test
dec
fbld
lea
fs
shl
jp
push
mov
sarb
mov
fbstp
lods
and
pop
mov
mov
pop
xor
add
xchg
stos
fisttpl
mov
dec
pop
adc
add
cmp
mov
or
cmp
mov
inc
or
adc
xchg
fldenv
xchg
mov
add
into
mov
test
xor
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
pop
push
stos
mov
push
sbb
adc
sbb
add
out
in
adc
mov
jmp
mov
out
jno
cld
mov
lahf
inc
jae
repnz
dec
pusha
jno
mov
jne
sbb
push
mov
enter
sahf
cmp
adc
fisubrs
xchg
bound
movsl
cmpl
popa
stos
ret
movsb
fimull
in
mov
sub
pop
jbe
nop
sub
sbb
notl
sbb
push
fnstenv
jbe
jo
jp
mov
pop
test
push
cltd
mov
push
rcrb
push
sub
adc
stos
inc
or
or
repz
mov
sub
ljmp
scas
stos
pusha
test
popa
cmc
add
dec
mov
cmpsb
dec
cmp
xor
push
dec
push
dec
test
push
int3
inc
push
and
xchg
adc
lret
lea
or
inc
cmc
pop
push
pop
sbb
pop
jns
test
daa
rcll
rcll
xor
mov
dec
cs
repnz
xchg
push
sti
icebp
adc
sub
mov
test
leave
sub
cmpsb
sub
lret
and
and
push
inc
gs
inc
lods
sbb
xlat
lds
test
imul
outsb
popf
movlps
decb
ja
jecxz
or
inc
je
sti
ret
test
and
into
fldenv
seto
or
leave
fimull
scas
dec
cmc
mov
lds
sub
pop
pop
stos
adc
pop
subb
jp
imul
cmp
push
and
and
dec
push
cwtl
data16
shrb
int3
jae
push
into
ja
cld
nop
push
ss
cmc
loope
pop
fsubs
or
cmp
push
pop
lret
mov
add
and
push
das
push
cs
lds
xchg
out
and
jmp
adc
shll
inc
ret
pop
jne
fidivrl
jo
cmpsl
fs
push
lret
pop
push
push
int3
sbb
xchg
fwait
jb
leave
out
pop
push
and
jle
add
fs
out
std
and
mov
and
outsb
jmp
pop
shll
xchg
sarb
int
cmp
int
pop
stos
mov
daa
jo
bound
inc
in
inc
push
int3
gs
or
mov
mov
mov
insl
sub
cwtl
xor
lahf
inc
mov
inc
in
stos
sbb
les
in
iret
inc
cli
xor
je
popa
jo
push
cmp
mov
pop
stc
lcall
ret
loope
inc
dec
daa
sub
pusha
sub
int
das
js
cmpl
cwtl
lret
cmpsl
test
outsl
cld
pusha
imul
scas
add
inc
pop
insb
jmp
sahf
push
pop
xchg
xchg
jecxz
jbe
xchg
ret
cmpsl
outsb
xor
or
idivb
mov
fiadds
push
repz
loope
inc
xor
inc
jl
xor
cmc
je
mov
popf
mov
ret
cmp
mov
fdivr
xchg
mov
test
out
mov
jge
sbb
sbb
ss
xlat
int
pop
xor
xchg
mov
lcall
call
bnd
add
stos
cmpsb
decl
lea
test
incl
lret
call
test
std
decl
shlb
add
fmuls
decl
ret
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
jecxz
stos
mov
adc
sbb
cld
sub
idivb
mov
sub
and
jmp
in
sbb
sbb
inc
shlb
push
jo
pusha
mov
mov
imul
inc
insb
xchg
push
scas
movsb
xor
lods
push
push
sbb
mov
cmp
or
int3
xchg
hlt
cmp
cmp
cmpb
mov
arpl
cs
fldenv
xchg
and
or
dec
daa
loope
cmp
and
test
in
and
xorb
fnstsw
movsl
or
sldt
mov
movsb
jne
dec
jae
imul
xor
gs
test
jmp
jl
inc
jbe
push
mov
daa
jmp
pushf
add
cmp
jmp
js
or
stos
inc
sub
jnp
lea
in
ds
loopne
ret
inc
pusha
ja
jp
sarl
sub
clc
and
adc
std
outsl
in
pop
jb
scas
or
sbb
mov
fs
loopne
push
xor
fwait
push
fdivs
cmp
rorb
inc
filds
cltd
mov
syscall
adc
pop
xor
imul
xchg
add
jo
mov
in
adc
lea
lret
xchg
push
jmp
xor
je
lret
pop
addb
flds
cmp
call
pop
ror
cmpsb
stos
jne
fs
push
das
scas
jg
mov
fidivrs
ja
pop
hlt
jmp
inc
rclb
ss
add
loop
test
out
and
and
js
jno
rclb
mov
loopne
add
in
ljmp
adc
mov
shll
and
addr16
mov
jns
int3
sbb
pop
add
fidivl
push
jl
aas
scas
aad
xchg
adc
popa
mov
fiaddl
mov
add
int
in
rcrl
pop
ja
or
les
xlat
sbb
daa
mov
ret
outsl
syscall
pop
adc
test
imul
cwtl
sahf
mov
out
jmp
enter
xchg
das
incl
stos
pop
divl
xchg
aad
push
mov
test
outsb
or
jo
call
pop
pop
mov
movsl
xlat
mov
lods
xchg
adc
adc
in
add
mov
je
std
xor
inc
dec
dec
repnz
aas
stos
xchg
pop
lock
rcrl
dec
inc
cmp
jb
push
add
loopne
cmp
test
popa
imull
inc
scas
push
xor
push
xchg
addr16
fwait
cmp
push
aam
addr16
pop
stos
lcall
test
imul
sub
jne
into
movsb
insb
xchg
xchg
pusha
mov
pop
jmp
jno
insb
imul
scas
mov
pop
fbstp
dec
and
xchg
sub
and
pushf
and
scas
inc
daa
xchg
loop
repz
ja
lea
in
insl
xorl
mov
incl
jp
add
xchg
in
lods
stc
cmp
mov
std
jno
or
das
and
mov
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
dec
mov
sbb
adc
sbb
push
test
lods
in
fcomi
add
mov
daa
dec
mov
sub
pop
imul
lret
mov
jle
cmc
pop
lahf
adc
addr16
jb
xchg
dec
lods
xchg
jmp
mov
inc
les
inc
push
mov
sti
jp
out
inc
out
fcoml
outsb
data16
jbe
jno
cmc
cmc
lcall
icebp
jb
cmp
iret
insl
xchg
subl
mov
xchg
lods
movsl
leave
sub
push
int
ror
int3
pushf
pop
outsl
and
inc
cmpsb
sub
in
adc
fucom
push
push
sbb
aad
xchg
push
es
ss
outsb
not
fnsave
mov
cmp
sbb
and
ss
lods
inc
cmpsl
icebp
jg
lret
das
adc
xor
dec
dec
jle
push
and
pop
in
out
sub
jno
push
inc
test
hlt
pushf
icebp
aad
pop
repz
repnz
in
ret
inc
mov
mov
cmp
sub
jnp
ja
add
inc
cmp
dec
sbb
and
jae
inc
add
and
pop
int
jmp
shl
sub
into
sbb
xchg
inc
loop
in
xchg
xchg
adc
jo
shl
push
xor
cltd
repz
in
or
jle
mov
mov
cmp
int3
lods
mov
loope
test
popa
orl
shll
pop
shll
inc
xchg
jbe
xor
outsl
xor
xlat
lcall
jge
inc
jecxz
sbb
sub
lods
lds
cmp
dec
xchg
call
add
lcall
cmp
test
xchg
or
inc
leave
sub
ja
jmp
call
lahf
lret
mov
mov
mov
loop
sbb
inc
mov
push
loope
subl
pop
pandn
mov
xor
pop
push
adc
cs
dec
sub
clc
or
jl,pn
stc
imul
je
or
repz
addr16
flds
out
mov
pop
mov
jne
shll
mov
pop
sub
mov
ljmp
cli
inc
xor
jmp
add
push
scas
push
cli
imul
xor
fildl
test
mov
push
push
dec
dec
lods
jbe
ret
jb
cmp
dec
shll
scas
jne
and
subb
lcall
aam
aam
les
arpl
loopne
inc
repz
in
popf
int
and
fcoml
mov
retw
jae
dec
add
loop
cmpsl
gs
divb
into
mov
iret
pop
pop
xlat
ja
xchg
and
sub
mov
sbb
jmp
mov
push
jmp
mov
lods
mov
pop
pop
xor
push
imul
dec
outsb
sub
int3
mov
push
mov
xchg
lcall
lahf
jnp
ds
sbb
pop
push
mov
aad
orb
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
push
xor
sbb
adc
sbb
jp
cmp
inc
inc
xchg
scas
push
add
lret
push
push
xchg
cwtl
ja
jge
shr
sub
xor
enter
cwtl
not
push
jnp
xchg
out
adc
sub
xchg
fcmove
in
cltd
daa
mov
push
enter
lods
mov
in
testl
jb
dec
insl
test
inc
pop
jmp
inc
into
add
add
int3
out
arpl
ficoml
inc
cwtl
inc
mov
inc
aaa
xchg
mov
into
insb
outsb
int3
fidivl
scas
lret
xor
add
jnp
mov
popa
push
mov
insb
push
fninit
ret
int3
adc
dec
stc
mov
push
mov
jo
sbb
test
daa
sbb
mov
into
and
or
inc
bound
cwtl
or
mov
shll
pop
ds
jbe
xor
mov
mov
inc
pop
ret
jae
outsl
sti
xchg
scas
and
jnp
lret
or
or
divb
pop
pop
popa
mov
xchg
or
pop
out
scas
pop
pop
mov
js
mov
lret
mov
cmpsb
sub
mov
cld
cmpsb
mov
jge
and
daa
lcall
fwait
sti
pop
sub
mov
addr16
sbb
mov
test
mov
fwait
lret
imul
hlt
iret
out
cmp
push
add
jg
fbstp
enter
cli
aad
outsb
pop
xchg
ja
pusha
into
es
mov
jle
push
lret
mov
scas
mov
push
fcmovnb
int
jp
lret
addb
cmc
cltd
out
sbb
inc
rolb
fsubs
imul
lret
lods
fs
lret
scas
shrb
shlb
data16
dec
jle
dec
jmp
faddl
inc
xor
lcall
rorl
sbb
jno
and
jmp
dec
mov
and
adcb
scas
pop
fistpll
mov
scas
je
push
in
push
lahf
test
cltd
push
mov
jns
pop
jg
rcrl
aas
outsl
mov
aaa
inc
and
pusha
insl
dec
mov
sbb
mov
and
xchg
lea
mov
xchg
jnp
loop
mov
adc
mov
mov
outsl
adc
mov
xchg
lods
inc
pop
jne
xor
pushf
or
shrb
les
push
insl
call
insl
insb
sbbb
ss
lea
mov
inc
rclb
mov
jo
movsb
dec
dec
addb
arpl
out
lds
inc
push
mov
scas
push
dec
push
dec
lret
bound
xchg
shll
cmp
sub
xchg
dec
dec
imul
sbb
mov
adcl
scas
mov
add
mov
fstl
adc
enter
rorl
lods
bound
mov
mov
cld
fcompl
jecxz
icebp
jge
enter
cmpsl
inc
xlat
repnz
add
pop
popa
pusha
sarb
out
mov
push
int3
or
sub
xchg
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
cmpsl
xchg
cmp
and
aam
pop
jmp
inc
cmp
les
add
test
mov
loope
adc
in
or
mov
mov
clc
ljmp
call
fistl
add
add
mov
jb
dec
or
mov
mov
lock
push
loope
xlat
out
fnstenv
data16
push
pop
inc
out
mov
test
and
sub
mov
xor
jmp
xor
sub
icebp
ds
fwait
or
loope
mov
push
mov
test
cli
cmpsb
xchg
in
ljmp
push
fsubrl
mov
sbb
dec
fadds
mov
aam
mov
inc
lahf
incl
jge
xor
inc
roll
mov
and
cmp
repnz
lods
insl
mov
push
or
loopne
or
mull
pop
mov
imul
fisubrs
xlat
testl
mov
dec
pop
jbe
inc
aas
inc
xlat
roll
xor
cmp
popa
movsl
mov
sbbb
xchg
ja
or
push
jne
dec
test
addr16
and
mov
mov
outsl
push
inc
enter
xchg
das
imul
ja
inc
fnstenv
out
and
push
push
test
pop
sub
mov
mov
mov
imul
mov
arpl
loop
sub
cli
inc
rclb
mov
test
inc
int
xchg
mov
or
jp
movsl
jnp
iret
push
arpl
lods
push
add
aam
or
loopne
bound
or
subps
push
jb
jg
fstpl
xlat
xchg
mov
xor
push
int3
sahf
arpl
mulb
negb
dec
sub
xchg
lret
je
int
or
push
sbb
cld
mov
outsl
cwtl
nop
loop
cmp
push
aaa
sbb
sbb
add
jge
xchg
cmp
xor
lock
mov
adc
mov
lret
inc
cmp
lods
or
orl
notb
mov
in
jge
jecxz
push
push
dec
mov
mov
ret
dec
and
ljmp
sbb
cmpsb
fistpll
mov
push
inc
in
gs
add
pushl
mov
mov
out
push
mov
jns
cmc
dec
or
sbb
mov
in
scas
mov
popl
dec
mov
cmpsl
pop
sbb
mov
ret
in
mov
mov
sti
mov
cmp
out
and
push
mov
popa
in
rolb
cwtl
fimull
mov
popa
jnp
dec
rcr
into
sbb
std
mov
push
cmp
shlb
adc
jne
sahf
sub
dec
mov
pop
adc
and
pop
mov
cmp
mov
and
cld
jle
jo,pt
push
mov
inc
pusha
dec
pushf
jb
leave
cld
testb
mov
lcall
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
stos
out
push
sbb
adc
sbb
jae
sub
fwait
xor
repz
je
xchg
jmp
inc
iret
dec
cmp
push
inc
mov
mov
xor
js
sahf
dec
pop
cltd
loopne
bnd
adc
jno
cmpsb
adc
cli
adc
and
xor
loopne
iret
jb
fcmovbe
shrb
push
jle
aas
mov
push
rorl
loope
lahf
dec
pop
stos
sarl
push
fsubrp
jge
repnz
jg
ja
jge
mov
dec
push
xchg
subb
imulb
xor
dec
pop
and
xor
xchg
popf
lds
test
mov
gs
and
fs
or
out
lock
pop
or
mov
les
mov
push
lret
mov
pop
mov
xchg
dec
lods
frstor
adc
mov
cmp
adc
and
call
adc
sbb
jmp
xchg
inc
stos
sahf
jns
xchg
ljmp
add
out
stc
jg
xor
insb
jnp
mov
jmp
fdivrl
push
xchg
clc
xchg
jo
push
outsb
out
and
mov
sbb
jne
add
cmp
inc
lods
xor
jo
or
pop
inc
mov
pop
mov
nop
in
sbb
adc
js
xchg
sub
push
mov
xor
add
jbe
sub
cmp
lock
jb
mov
mov
mov
jae
jo
out
or
cmc
xor
mov
in
or
cmp
out
jg
mov
je
fnsave
cwtl
adc
inc
push
cwtl
and
lcall
hlt
rolb
push
ffree
aas
and
add
int3
jae
mov
andl
mov
mov
cmpb
out
aam
fwait
pop
pushf
push
cmp
cmp
ljmp
das
divl
cld
push
sub
mov
out
call
lret
sbb
pop
or
arpl
mov
jb
pop
inc
addr16
jmp
enter
push
mov
insl
mov
mov
decb
stos
jmp
iret
add
xchg
sahf
dec
popf
sub
je
shr
dec
lea
jle
mov
mov
mov
subb
mov
xor
subl
dec
push
loop
xor
ret
xchg
fwait
in
jl
mov
in
xchg
adc
mov
add
push
pusha
loop
out
jbe
dec
pop
mov
inc
rcr
aaa
xor
in
mov
or
cmpsl
inc
adc
dec
adc
ret
xchg
aaa
or
sti
sub
xorb
rclb
pop
dec
out
adc
cmp
testl
mov
nopl
adc
push
aaa
cwtl
add
loope
in
xchg
mov
lods
shrb
xor
outsb
mov
push
sbb
fldt
pop
pusha
mov
ljmp
sbb
cld
dec
dec
push
lea
fiaddl
pop
push
shrb
insb
pop
xchg
cmp
out
aad
jbe
or
inc
out
mov
jns
divl
rclb
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
ret
icebp
xor
sbb
adc
sbb
mov
xchg
mov
movb
jecxz
xor
cmp
sub
shll
xchg
jle
out
dec
jge
sub
adc
out
cmp
or
dec
mov
loope
dec
hlt
mov
repz
hlt
inc
and
add
repz
scas
xor
popa
insb
push
scas
pusha
fcompl
inc
shl
jnp
push
data16
imul
test
hlt
popa
ret
sti
add
inc
sahf
xchg
popa
fimull
scas
cs
pushfw
xchg
push
mov
mov
mov
sub
push
push
mov
sub
cmp
es
ds
sbb
jns
push
push
and
cmpsl
pop
test
pushf
cmpl
and
rorb
adc
pop
subb
mov
xchg
iret
cmpsb
xor
dec
xchg
cmp
sbb
jmp
xchg
cli
repz
mov
inc
shr
push
aam
jb
std
pop
shl
out
hlt
cli
outsb
imul
lahf
lret
mov
push
sbb
add
dec
in
dec
testb
mov
incb
sbb
mov
cmp
sub
xchg
int3
jo
je
jmp
jbe
push
bound
push
xchg
repz
ds
and
out
rclb
xor
mov
jp
mov
fs
sbb
into
sbb
pop
in
out
push
mov
fcomi
das
loope
dec
sbb
mov
icebp
inc
sbb
sub
std
fwait
add
jl
in
push
cmc
fwait
loope
pop
mov
out
adc
rcrb
jbe
push
and
cmp
push
dec
mov
push
push
lcall
xchg
adc
inc
cwtl
inc
sahf
outsb
adc
xchg
push
cs
mov
pop
dec
mov
call
cli
ljmp
aam
or
mov
pop
and
call
xor
adc
pusha
xor
mov
aaa
jle
test
inc
ds
adc
aad
mov
mov
sbb
jns
push
imul
sbb
repz
and
push
stc
xor
jmp
sbb
das
sub
cmp
inc
arpl
push
pop
jne
cmp
push
in
lcall
int
or
fisubrs
in
dec
cmp
mov
jge
mov
pop
pop
push
jb
or
mov
cmc
jo
adc
or
inc
mov
out
shr
add
inc
mov
stos
add
lret
dec
daa
mov
lahf
mov
adc
mov
mov
jl
push
push
push
add
inc
pop
aam
arpl
clc
and
shl
mov
daa
push
add
pushf
pop
sarl
lcall
outsl
ret
loop
fnstsw
xchg
xchg
ss
xor
cmc
jmp
aaa
in
cmp
inc
pop
sbb
sub
xchg
pop
inc
imul
sar
add
ljmp
insb
xchg
cli
stos
dec
mov
insl
mov
cltd
add
imul
dec
arpl
aaa
popa
sbb
cli
push
or
mov
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
ss
sbb
adc
sbb
cmpsb
xor
adcl
xlat
out
das
pop
mov
scas
adc
je
aad
mov
mov
sbb
push
inc
fnstcw
pop
sbb
mov
jg
leave
mov
lods
int
dec
data16
mov
aaa
andl
push
cld
or
push
push
jmp
push
movsb
add
fwait
jns
mov
pop
inc
jle
mov
mov
inc
inc
sbb
inc
mov
push
push
mov
stos
call
sub
jns
stc
fs
fwait
rcrl
cmpsl
call
adc
inc
push
pusha
jg,pn
mov
out
sbb
rorb
das
rcr
push
xchg
or
loope
shlb
mov
cmp
or
inc
mov
mov
aas
mov
mov
inc
cmc
or
mov
subb
push
out
xor
push
or
xorb
pop
je
lock
pop
xlat
imul
clc
push
push
bnd
jae
gs
jne
sub
lea
inc
and
mov
shll
cli
cld
stos
cmp
xor
stos
mov
jnp
pop
mov
mull
add
stc
aaa
push
inc
dec
repz
mov
mov
inc
subl
xchg
push
ss
dec
xor
jg
push
std
mov
icebp
scas
mov
xor
jmp
jo
jbe
xor
popf
push
pop
jmp
ret
mov
adcl
sbb
imul
sti
mov
ss
fsts
add
xchg
jge
push
xchg
es
sbb
jbe
xchg
ja
sbb
jns
in
dec
xor
mov
and
daa
and
mov
cmp
cmp
add
adc
repz
int3
in
and
into
pop
jae
cmc
adcb
mov
pushf
add
cs
or
mov
xor
rorb
or
cmp
push
fsincos
into
cmp
push
cmpsl
cmp
scas
xchg
push
xchg
mov
flds
adcl
movsb
jb
decb
push
mov
dec
or
and
push
lret
cmpsb
xor
mov
cmp
push
push
adc
cmpsb
clc
jo
push
repz
push
xchg
and
adc
es
fucomi
repz
fwait
lahf
dec
std
shr
lret
cmpsb
loope
and
cltd
lea
xorl
test
dec
lea
in
enter
testb
mov
aas
es
jns
icebp
cmc
out
jns
or
lcall
cli
mov
dec
scas
sahf
mov
sub
add
inc
xlat
jbe,pn
aad
clc
mov
out
mov
ss
js
mov
repz
insb
movsl
sbb
mov
seta
jmp
sub
mov
mov
pop
jo
das
jbe
sub
in
lods
fs
clc
test
ss
fs
mov
or
bound
and
mul
pop
daa
push
jb
iret
cmc
jmp
aad
xor
jb,pn
adc
adc
insb
sub
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
xchg
mov
and
sbb
inc
cmp
adc
cmc
pop
cmp
enter
shll
xchg
inc
iret
mov
mov
and
popa
dec
enter
out
gs
out
sbb
fsubr
rcll
stos
push
ljmp
pusha
mov
nop
aas
jle
rcl
push
ds
pop
mov
dec
loop
dec
mov
mov
shlb
leave
push
in
lock
cmp
mov
xor
lcall
mov
lds
stc
insl
sub
test
xchg
test
jae
out
or
ret
xchg
xchg
outsl
jl
pushf
sbb
inc
aas
sbb
fstpt
addr16
pop
or
push
cld
cmp
jecxz
test
jae
dec
push
movsl
sub
inc
insl
fdivrs
or
into
dec
add
push
out
push
inc
sub
mov
adc
mov
or
and
adc
bound
loope
mov
fbstp
jle
in
sub
stos
lock
shll
fisttpll
pop
sbb
dec
inc
fisubs
pop
je
or
test
pop
int
mov
ficompl
jg
decl
scas
int
leave
mov
stos
mov
fnstsw
pop
test
xchg
lret
pop
dec
cmp
pop
mov
imul
dec
jbe
cmp
pop
push
push
int3
test
and
arpl
inc
push
mov
or
lret
aam
pop
movsl
mov
ret
sub
jns
push
xchg
jbe
xchg
cmpsl
test
ret
ds
mov
xlat
fmuls
lea
xchg
sub
sub
and
dec
mov
fdivrl
jo
lods
sbb
les
sub
mov
sbbb
mov
out
push
test
fcmovbe
dec
leave
repnz
and
push
mov
fidivrs
mov
sub
call
pusha
xchg
test
push
jb
je
and
sbbb
pop
nop
mov
sub
popa
enter
and
mov
jno
lock
movb
mov
push
adcl
lock
push
sbb
ss
mov
pop
cltd
divb
clc
fisubs
xchg
push
mov
mov
pop
test
xlat
flds
and
jne
outsl
pusha
add
insl
aam
andl
mov
push
popa
pusha
lods
jge
ss
jns
out
inc
insl
shrl
stc
repz
repz
adc
mov
pop
jb
rclb
dec
leave
xchg
xor
push
gs
sub
fstpt
sbb
dec
movsl
xchg
icebp
aad
scas
das
decb
jp
push
ss
movsb
iret
or
xchg
ss
dec
sti
repnz
cld
and
in
mov
add
lcall
je
pop
push
pop
test
jne
in
js
pop
cmp
pop
or
pusha
bswap
movsb
dec
in
jg
cmp
out
lahf
fnsave
mov
sbb
dec
fiaddl
movsb
dec
adc
cmp
dec
add
imul
dec
mov
xor
test
scas
popf
dec
mov
mov
add
adc
decl
pushl
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
lods
xor
push
sbb
sbb
xor
das
and
lcall
fs
faddl
loope
xchg
inc
adc
addl
sub
sahf
push
pop
adc
loop
and
pop
mov
adc
lds
add
push
test
icebp
test
popf
xor
adc
cmpsl
sub
jle
mov
fstpt
mov
adc
xor
sbb
or
test
xor
sahf
jns
lret
xchg
cmp
adc
pusha
mov
hlt
mov
iret
scas
or
jns
shrl
push
fistl
or
mov
clc
je
jne
aas
xchg
test
popf
lcall
mov
mov
pushf
cmp
xorb
dec
stc
fnstenv
and
pop
aas
mov
mov
pop
cmc
rol
pop
dec
mov
jmp
iret
cmp
sti
call
cmp
cmp
insl
push
inc
pushf
lock
jno
push
and
add
in
les
cmc
xchg
xchg
pop
out
push
pop
sbb
adc
ds
in
rolb
loopne
mov
hlt
insl
fadds
shrb
dec
xchg
push
sbb
and
push
pop
inc
adc
ljmp
cmpl
je
mov
stos
ret
addr16
add
cmp
cmp
cmp
es
pop
decb
cmpsl
int3
xchg
pushf
neg
mov
add
mov
movsl
scas
f2xm1
sahf
mov
mov
cmp
outsb
mov
xchg
xchg
jg
lock
enter
sahf
push
mov
loope
inc
add
test
aad
in
mov
test
adc
push
push
ja
in
xor
data16
adc
sti
movsl
jns
sti
mov
xchg
dec
cmp
pop
ror
sbb
jno
je
or
fists
int
icebp
jmp
lahf
cmovg
jmp
pop
push
pop
scas
outsl
sti
leave
mov
fistpll
ds
ss
xchg
ds
clc
push
decl
ret
mov
xor
pop
push
add
fidivl
inc
aam
add
and
xchg
mov
int3
push
add
ds
mov
std
out
fwait
loope
in
mov
fwait
mov
imul
fsubs
pop
inc
gs
lret
dec
push
out
in
js
jecxz
sbb
xchg
pop
inc
daa
lea
jbe
rcr
lret
dec
mov
es
ljmp
and
push
jns
jmp
inc
cld
xchg
fisubrs
push
sub
xor
and
rclb
enter
xor
adcb
or
mov
jle
pop
inc
call
enter
stos
push
xor
lods
push
push
fildll
jmp
add
dec
mov
jmp
cmp
pop
or
fxam
hlt
pushf
out
enter
cmpsl
mov
inc
inc
dec
enter
mov
and
push
notl
mov
popf
sub
pop
pop
iret
icebp
sbb
repnz
sbb
fildl
rcrl
js
test
or
add
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
jl
pop
push
sbb
adc
sbb
dec
int3
push
ret
dec
pop
pop
outsl
xor
dec
fs
fstpl
jne
dec
jecxz
pop
inc
fstl
lds
mov
adc
out
inc
sub
sub
adc
jnp
daa
pushf
out
movsb
sbb
call
push
jae
ljmp
mov
es
mov
test
out
das
fisttpl
mov
sub
js
add
push
out
dec
fs
iret
adc
pop
decl
xor
addr16
hlt
sub
mov
ljmp
inc
mov
and
mov
dec
mov
adc
dec
dec
lods
push
cwtl
shlb
out
xchg
cmp
imul
adc
jecxz
insl
adc
or
aad
in
leave
je
lret
xor
outsl
int3
cltd
push
clc
pop
js
dec
mov
lods
dec
add
adc
dec
out
imul
push
rorl
dec
rcl
dec
ret
dec
pop
dec
xor
shr
lods
enter
stos
das
xor
lock
cltd
push
mov
imul
or
sbb
ror
sbb
jg
jp
sub
popf
mov
cmc
xchg
call
movsl
jno
jge
or
out
and
jge
push
movups
inc
adc
jge
inc
call
and
jp
jns
fisttpll
mov
into
mov
sbb
push
ljmp
scas
push
push
movsl
push
adc
xchg
inc
gs
addr16
pop
add
push
and
ds
enter
cltd
cmc
push
pop
sahf
fwait
scas
sarb
decb
mov
inc
aam
xchg
sub
xor
out
and
in
adc
jle
mov
or
pop
mov
mov
xor
mov
out
lods
jnp
cmp
mov
in
arpl
inc
fsts
sahf
movsb
pop
sbb
ret
sub
mov
lds
xchg
mov
xchg
mov
insb
arpl
mov
mov
ljmp
dec
loopne
jbe
xor
adc
ljmp
mov
repz
nop
gs
jl
push
dec
ror
jmp
xchg
xor
add
and
imul
pop
mov
inc
icebp
lds
dec
and
clc
mov
in
adc
aad
cmp
pop
mov
sbb
add
stos
into
jb
inc
loope
fstps
sbb
pop
lret
or
sub
ss
jbe
cwtl
inc
push
mov
je
in
sar
cmc
push
scas
popf
or
fsubl
sbb
inc
test
mov
jnp
stc
pop
sub
pop
adc
xorl
adc
sbb
jno
and
sbb
rcrl
lock
nop
test
jl
daa
hlt
push
dec
xor
add
in
and
std
dec
pop
cmp
xor
mov
inc
ss
adc
jb
add
xchg
sidtl
mov
cmpsb
xor
add
xlat
add
dec
mov
sub
push
mov
mov
icebp
dec
xor
roll
nop
jbe
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
dec
jg
and
push
sbb
sbb
pusha
fwait
mov
xchg
dec
xor
mov
pop
xchg
sub
jnp
imul
jmp
sub
jle
mov
jns
dec
push
xchg
xchg
mov
testl
xchg
cmp
mov
jp
out
mov
jp
int
aas
pushf
pushf
in
add
loopne
pop
cmpsb
data16
dec
adc
popf
adcb
insb
sbb
in
repz
xchg
pop
outsb
lcall
jne
cli
shll
cmpsb
xchg
inc
outsb
mov
lods
test
mov
xchg
orb
mov
jp
ret
imul
ret
sbb
xchg
aad
dec
or
call
xor
mov
ss
popf
adc
sbb
lock
sub
clc
dec
add
jne
cmpsb
cmp
xchg
or
scas
add
push
pop
outsl
cmp
aad
and
mov
cmp
mov
xlat
add
andl
dec
dec
mov
std
iret
enter
pop
notb
fs
jge
inc
stos
lea
sub
sbb
cld
out
aas
movsl
xor
sahf
movsl
leave
les
add
je
je
push
bound
int3
stos
pop
mov
addr16
lcall
push
adc
adc
out
xchg
push
sbb
jle
inc
aam
out
jge
push
data16
pop
jl
lretw
and
aaa
sub
into
sbb
shrl
imul
sbb
in
push
mov
shl
int
insl
xchg
cltd
dec
cmp
fwait
test
dec
cltd
sarl
mov
mov
iret
lock
jns
mov
nop
popf
add
lods
sarl
and
adc
add
icebp
fisttps
popa
ljmp
lds
loopne
addl
addb
pop
xor
xor
aad
flds
movsl
ljmp
call
div
xchg
jle
sub
xchg
aas
js
inc
xchg
xchg
sbb
sahf
js
decl
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
addb
add
add
add
add
add
add
test
add
faddl
add
add
add
lock
add
add
add
add
add
insb
mov
add
add
enter
jp
add
dec
xchg
add
int3
test
add
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
mov
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
int3
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
cmp
inc
add
inc
add
inc
add
daa
inc
add
inc
add
add
jg
add
add
daa
inc
add
es
add
inc
add
daa
inc
add
lret
push
movsb
scas
or
movsb
dec
es
add
es
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
daa
inc
add
inc
out
mov
inc
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
add
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
xor
add
sub
add
add
scas
lcall
das
dec
add
sub
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
scas
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
mov
inc
add
addl
mov
addl
scas
addl
mov
inc
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
into
addl
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
push
adc
bound
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
inc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
test
add
add
jl
add
nop
test
add
add
mov
test
add
test
add
test
add
add
adc
add
xchg
add
xchg
add
add
pop
xchg
add
add
add
add
lahf
add
addb
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
cmp
add
pop
xchg
add
add
jb
add
test
add
cmpsb
xchg
add
add
loop
add
xacquire
add
xchg
add
mov
add
add
mov
add
add
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
inc
mov
add
add
push
add
jp
add
mov
add
stos
mov
add
add
loop
add
add
add
cld
mov
add
mov
add
mov
add
mov
add
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
