mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
fadd
aam
nopl
jmp
mov
ffree
xchg
sub
les
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
cmp
mov
mov
add
jp
push
fcomps
ljmp
jmp
addb
cltd
popa
xor
cld
gs
mov
inc
adc
mov
jb
cmpsb
xor
imul
call
and
xchg
jl
inc
push
sbb
fimull
popf
push
mov
xor
lcall
mov
mov
sti
addr16
ret
dec
pop
mov
sti
aam
jmp
push
rcr
int3
dec
lods
xor
push
lea
mov
xchg
jbe
test
adc
jge
subl
push
mov
nop
jae
imul
add
sub
xchg
cltd
gs
fidivrl
lods
negb
mov
cmp
repz
jnp
xchg
pop
idivl
xlat
pop
rclb
push
ror
imul
dec
lret
lcall
xor
inc
adc
je
jmp
lock
jne
je
leave
mov
mov
add
jmp
imul
fisubs
lcall
js
inc
lcall
or
mov
dec
dec
pushf
out
sub
pop
fistps
ljmp
cmp
lods
in
hlt
mov
mov
insb
jecxz
push
lods
jg
ret
pop
and
pop
jmp
sbb
xchg
lock
shr
cmp
inc
js
adc
mov
jl
pop
outsl
push
js
or
lock
std
movsl
lods
pop
repnz
cmc
pop
push
add
into
in
js
xor
xor
xor
int
lret
add
add
and
dec
fildl
hlt
mov
pop
jle
adc
pop
mov
dec
xchg
sub
mov
push
and
and
out
mov
popf
cs
lods
aas
or
ud1
or
std
dec
push
mov
mov
push
push
repnz
das
in
fildl
sub
push
cmp
out
mov
push
gs
pop
add
cwtl
loopne
hlt
out
in
lret
cltd
mov
fwait
repnz
sbb
fistpll
lods
sub
popf
xchg
sub
lea
test
cld
aad
or
leave
enter
sahf
das
sbb
sub
int3
dec
test
fnstsw
push
lret
mov
sbbb
mov
mov
sbb
stc
insb
test
shll
push
dec
sub
mov
push
mov
mov
int3
push
out
xchg
xchg
sarl
push
mov
pop
push
movups
les
mov
mul
mov
jns
xchg
push
mov
sub
int3
cmp
dec
and
pop
dec
mov
mov
leave
ficompl
cmp
cmpsl
imull
das
inc
pop
lock
leave
fwait
loopne
aas
dec
inc
cld
sbb
pop
pushf
xor
loop
push
arpl
sub
ljmpw
je
inc
mov
in
dec
sub
jge
inc
sub
movsb
push
mov
xchg
pusha
cltd
and
add
hlt
in
popa
inc
cs
aas
clc
leave
fstl
xchg
fldcw
sub
movsb
jmp
cwtl
jnp
and
mov
imul
or
fisubrs
mov
mov
lcall
ret
imul
adc
fsts
call
mov
das
repz
rcl
in
adc
fs
mov
lods
xor
jmp
fsts
int3
dec
adc
movsl
int
cmpsb
dec
stos
mov
jl
push
popaw
sbb
fs
dec
imul
sbb
cltd
inc
pop
int
stos
dec
push
mov
or
icebp
lret
insb
pop
add
dec
out
stos
sbb
or
push
std
std
dec
sbb
cld
pop
vaddsubpd
jo
sbb
sbb
mov
aam
lahf
dec
push
rolb
rorl
lret
add
mov
das
aam
incb
xchg
push
inc
nop
icebp
insb
xchg
mov
cvtpi2ps
pop
clc
pushf
push
jbe
sbb
mov
in
xor
cmp
stos
test
js
or
ds
mov
rcrl
mov
sub
mov
adc
pusha
adc
pop
dec
popa
pop
mov
aaa
inc
jno
fidivrl
lock
movsl
icebp
push
and
les
ret
xchg
test
mov
and
push
push
and
cltd
repz
pop
sbb
mov
add
sub
jae
mov
in
ss
vphaddwq
shll
inc
jl
xor
cmpl
ror
mov
or
pop
mov
out
xchg
addr16
leave
cmp
adcl
jns
sub
es
mov
mov
scas
mov
push
cltd
ficomps
cmp
inc
xor
scas
or
lods
js
leave
negb
push
or
jno
mov
dec
push
fnstsw
out
out
mov
adc
mov
mov
jl
sbbb
popl
pop
cltd
mov
mov
sarb
mov
or
cmp
repz
out
enter
popf
out
mov
jg
cmovo
push
mov
icebp
push
dec
add
mov
addb
out
loope
mov
adc
xor
mov
inc
ficoms
or
mov
test
repz
popf
add
rcrb
add
test
leave
mov
xor
ds
movsl
int3
sahf
testb
sub
mov
lret
and
xlat
jo
in
jnp
cmp
call
mov
xor
cmpsb
dec
and
sbb
add
out
or
mov
inc
ret
xchg
in
dec
mov
add
mov
push
scas
sub
xor
mov
inc
hlt
xchg
scas
rclb
std
xchg
pushf
push
fidivrl
adc
cmpsl
lahf
push
hlt
aam
pop
adc
repz
push
popf
mov
pop
pop
or
lods
repnz
lods
in
cmp
adc
shl
mov
jnp
inc
sbb
js
dec
fwait
scas
cwtl
lds
pop
pop
mov
movsb
cmp
repnz
mov
leave
jns
dec
das
aam
jp
cmpsb
subb
js
test
es
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
psubb
int
xchg
inc
test
test
inc
push
popa
cmp
jne
mov
loopne
sub
sahf
xchg
mov
adc
int3
add
mov
jae
movsl
xor
lods
scas
push
dec
std
xchg
aam
je
dec
sbb
pushf
inc
and
in
call
icebp
xchg
push
mov
add
jno
cmc
ljmp
stc
mov
nop
or
aaa
loop
out
dec
sbbb
push
push
sbb
dec
enter
cmp
int3
inc
dec
dec
fstpl
add
filds
cld
or
loope
pushf
in
jb
inc
mov
mov
push
mov
sbb
inc
into
xchg
and
ljmp
repz
sti
daa
aam
push
pushf
pop
mov
sbb
cmc
mov
call
fldenv
push
push
call
xor
into
cld
cmpsl
pop
mov
xor
add
inc
test
lret
cs
cmpl
xchg
into
lret
fwait
das
stos
fists
inc
es
sub
dec
xchg
mov
stc
fprem1
loopne
mov
inc
adc
jge
or
neg
pop
scas
rcll
lods
fildll
mov
push
inc
cmc
fistpl
cmpsb
mov
push
mov
pop
sbb
xor
mov
xchg
xchg
int3
xor
jmp
fmuls
ret
adc
xor
and
mov
or
add
shll
mov
adc
sbb
push
cmp
fildll
aad
sbb
ss
add
scas
inc
in
rcll
xchg
movsl
aas
sub
jmp
inc
and
lcall
add
and
stc
and
sbb
cmp
jno
lea
push
or
cmp
jae
ljmp
popa
outsl
cmp
out
cmpsl
pop
cltd
inc
jmp
movsb
inc
or
mov
mov
movsb
pop
add
inc
mov
rcrl
loopne
cmpsl
iret
imul
inc
jmp
sub
push
adc
int3
loopne
and
inc
mov
fs
mov
loopne
jecxz
mov
or
dec
mov
mov
rsm
fdiv
mov
xchg
jg
dec
outsl
jp
rcl
mov
in
or
mov
gs
aad
jmp
popf
jg
fdivs
imul
add
lahf
and
lea
push
test
not
mov
pop
push
pop
je
dec
add
insb
das
repz
rcrb
push
mov
sub
data16
stc
pop
cli
add
sub
mov
scas
or
mov
fsubs
imul
sbbl
pop
movsb
mov
daa
cmp
jp
push
mov
test
stos
imul
cmpsl
into
dec
pop
or
mov
outsb
push
das
loopne
sar
mov
push
jecxz
jg
fdivl
mov
ljmp
int3
out
cwtl
mov
cmpsl
jbe
adc
in
call
dec
pop
xchg
das
insb
loop
dec
out
stos
cmpb
mov
inc
xchg
ficoml
fstps
fdivr
mov
das
pop
mov
dec
xor
das
xchg
inc
pop
xor
cli
addr16
mov
push
xchg
push
mov
rolb
lea
shl
dec
movb
mov
out
mov
lcall
or
mov
test
dec
les
sub
test
stos
dec
aaa
xchg
lahf
test
popf
stc
xor
loopne
pop
fidivl
repz
in
cltd
xor
sub
gs
add
or
dec
int3
out
jmp
mov
or
jo
inc
inc
or
fisubrs
jae
push
js
mov
out
lds
rorl
inc
add
pop
mov
movsb
daa
mov
mov
mov
movl
xchg
dec
or
mov
lea
jne
or
and
stc
and
xor
les
add
idivl
in
jnp
movsb
imul
lahf
mov
lds
int
cld
cmpsl
and
dec
fwait
push
arpl
in
int
cmp
xchg
inc
add
fistl
mov
js
outsl
push
or
jne
and
dec
pop
ret
repnz
int
xor
dec
or
fldt
hlt
js
add
mov
jmp
sub
out
dec
arpl
fwait
mov
sarb
lahf
iret
dec
ret
mov
pop
popf
sub
loopne
push
xor
ljmp
clc
push
adc
push
fstl
mov
dec
ds
sahf
sbbb
faddp
sbb
in
inc
xor
pop
push
push
fdivrl
cmc
mov
jp
push
xlat
jbe
add
cltd
test
xchg
ds
lods
pop
sbbl
clc
dec
mov
inc
mov
dec
inc
and
orb
jg
dec
xchg
in
sbb
adc
jne
dec
xlat
popa
xchg
nop
in
je
jns
lods
jno
mov
sbb
adc
cwtl
cmp
push
pop
xor
gs
shlb
mov
ds
scas
in
cmp
js
test
or
sub
sbb
pop
loopne
daa
sbb
sbb
and
sbb
out
jl
and
pop
scas
out
es
inc
xor
ja
sarb
mull
pop
roll
mov
cli
jl
cmp
pop
mov
cs
aaa
in
mov
xor
push
fldenv
dec
cmpsb
ljmp
inc
mov
and
dec
jbe
incl
push
aad
inc
sbb
add
sub
faddp
adc
adc
mov
xchg
pop
out
mov
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
jp
nop
xorb
mov
cmpsl
es
pop
leave
mov
ret
dec
jne
aaa
pop
push
sub
lahf
inc
inc
repnz
cmp
inc
jp
insl
scas
lds
mov
scas
aad
inc
mov
mov
sbb
or
lods
jecxz
adc
cmovb
clc
push
mov
cli
jl
cwtl
push
xor
js
inc
jmp
dec
cmp
int
inc
test
inc
mov
out
aas
gs
cmpsb
pop
or
add
pop
mov
add
pusha
mov
aam
or
inc
cmp
fwait
xchg
mov
andb
adc
fmul
loopne
pop
arpl
enter
in
fisubrs
ror
jl
or
fcoms
add
adc
dec
inc
dec
cli
xchg
in
insb
lea
gs
inc
loopne
and
mov
xor
lret
adc
push
lock
and
xchg
push
cltd
inc
aad
int
movsl
bnd
mov
sub
mov
bound
jbe
incl
pushf
pop
fdivl
jnp
push
dec
or
mov
scas
jmp
shll
sti
rclb
scas
mov
sbb
cmp
dec
or
out
fldcw
insl
xchg
in
mov
faddp
dec
daa
xor
push
and
mov
mov
xor
lcall
nop
xlat
cmp
popf
dec
or
fisttpll
rorb
xchg
cwtl
inc
sbb
xchg
fidivl
dec
jmp
xchg
cmp
adc
or
fiaddl
shld
xchg
inc
idivl
in
fsubl
repnz
cmp
sti
cmp
add
imul
lret
mov
mov
push
filds
out
insl
mov
jecxz
dec
or
mov
push
sahf
inc
outsb
pop
roll
dec
ljmp
inc
mov
enter
jno
jp
fwait
pop
xchg
cld
and
inc
or
push
jl
pop
arpl
or
jl
push
mov
pop
push
xchg
adcl
jbe
dec
outsb
clc
ficoms
mov
sahf
sub
mov
lcall
popa
scas
jecxz
imull
push
and
or
mov
push
mov
mov
aad
fldt
dec
jl
lahf
mov
pushf
push
xor
sbb
jg
aas
inc
inc
or
mov
ret
dec
jbe
bswap
jae
ret
mov
bound
test
xchg
jmp
loope
shl
nop
rorb
or
or
sub
xchg
pop
pop
test
aad
mov
lds
mov
dec
test
inc
cmp
divb
sahf
add
xlat
push
out
or
xor
push
push
subl
dec
rcll
mov
fwait
cmp
add
mov
fsubrl
cld
mov
repnz
cwtl
fcmovu
loop
xchg
mov
add
dec
push
cmp
and
ret
imul
or
out
shll
cmp
pop
or
movsb
add
jmp
pusha
mov
cltd
addl
sarb
xchg
fisubrl
fldt
cmp
lock
jno
dec
stos
arpl
adc
mov
lds
or
mov
dec
ret
and
filds
sbb
jge
ljmp
sub
inc
lcall
jge
stc
jg
dec
fists
push
loop
mov
sbbb
jmp
cli
popfw
push
scas
jecxz
scas
pop
pushf
add
sbb
or
mov
jmp
sti
mov
mov
int
imul
pop
inc
call
sahf
cmp
lcall
ja
or
jnp
jp
or
add
mov
iret
seta
popf
pusha
out
push
pop
push
sarl
jae
pop
pusha
mov
stos
jl
inc
pop
subb
jns
mov
int3
test
loopne
adc
xchg
pop
push
iret
jmpw
std
xor
movsb
ja
pop
notl
aam
popa
pop
pop
or
pop
iret
add
push
push
xchg
and
jl
iret
adc
mov
shlb
fsubs
mov
lods
fs
mov
mov
test
sahf
leave
xchg
test
cmp
dec
or
jmp
xchg
mov
dec
ret
sub
ret
xchg
xor
into
js
or
cmpb
movsl
sbb
xadd
ljmp
out
aas
pusha
xor
xor
push
inc
repz
into
cmpb
add
stc
pop
jp
out
pop
dec
test
rcll
mov
sub
xor
mov
push
enter
mov
sbb
insl
lods
xlat
sbb
or
sarb
iret
testl
int
jb
push
push
dec
mov
mov
ljmp
cwtl
add
test
orb
loop
rorl
add
dec
fmulp
jle
mov
ret
popf
add
insb
ljmp
rcrl
insb
inc
out
int
lret
fidivrl
inc
in
pop
or
add
push
cwtl
out
jo
in
fldenv
push
pop
data16
ljmp
outsl
jecxz
and
fidivrs
cmp
icebp
test
pop
xchg
mov
test
repnz
add
and
jns
ss
leave
icebp
adc
xchg
int3
scas
cmpsl
push
das
sbb
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
xchg
pop
xchg
xchg
fimuls
pinsrw
movlps
fsts
out
clc
idivb
pusha
sbb
inc
sub
inc
pop
rcrl
outsb
ja
movq
mov
imul
div
and
lcall
out
mov
scas
rolb
dec
loope
mov
push
std
pop
movsl
lcall
lds
pop
int3
cli
mov
mov
or
xor
fidivl
mov
mov
cmp
sbb
testb
repz
jae
sbb
dec
jae
mov
jecxz
push
mov
insb
repnz
stos
sbb
daa
mov
imul
sbb
data16
jecxz
gs
mov
std
sub
and
outsl
mov
mov
mov
dec
fcoml
loop
xchg
push
jnp
cwtl
add
ss
mov
mov
mov
sbb
mov
cmpsb
insb
fisttps
mov
mov
cmpsl
into
add
mov
mov
or
sub
dec
mov
cmp
inc
cmpb
ret
cli
js
sbb
mov
xlat
addb
cmp
push
jecxz
dec
testb
shrl
push
inc
and
ljmp
inc
add
gs
jbe
aaa
repz
out
xor
cmc
dec
outsl
dec
mov
sbb
ljmp
dec
in
jne
cmpsl
popf
push
xchg
into
dec
pop
and
stc
aas
mov
mov
adc
pop
or
add
and
or
or
or
xor
pop
mov
xor
lcall
fs
add
and
jb
mov
add
mov
xor
cmp
sti
jecxz
inc
imul
cmp
inc
call
xor
push
or
pop
js
fdivrp
pusha
cmc
cld
sbb
mov
dec
jg
cld
cmpsl
add
xchg
mov
js
call
sbb
movsb
iret
int3
in
xchg
sbb
jb
nop
int
dec
mov
sub
ret
das
decl
lahf
and
ss
mov
aam
or
adc
jb,pn
pop
mov
out
bound
jmp
ljmp
xchg
lahf
les
pop
push
add
fwait
pop
sbb
xchg
fsubr
sarl
in
iret
jl
sub
and
xor
add
cltd
push
xor
pusha
push
aad
pop
dec
lret
das
adc
mov
rep
dec
xorb
add
jmp
push
in
cmpl
imul
stc
add
dec
in
sbb
xchg
mov
sbb
incb
push
jo
lret
pop
cmpsb
shr
mov
xchg
dec
aaa
mov
dec
mov
jmp
rolb
xor
daa
sbb
sbbl
xchg
pushf
cmpsl
inc
pop
aaa
mov
push
aad
mov
add
mov
psubw
sbbl
sbb
aas
or
enter
int3
mov
nop
mov
xor
mov
mov
cwtl
fs
into
pop
add
scas
mov
js
mov
dec
mov
xchg
inc
jno
dec
mull
idiv
mov
lret
cmp
inc
out
testl
inc
push
xchg
pushf
mov
adc
loop
dec
inc
mov
lea
cmpsl
rcll
xor
pop
xchg
cwtl
clc
jecxz
aas
dec
sub
std
cmp
test
sti
shll
xor
sahf
js
outsb
inc
fmul
ja
mov
push
imul
cmp
xlat
jo
xlat
mov
cld
filds
cmpsb
inc
pop
cmpsb
push
push
xor
imul
jg
enter
sbb
mov
dec
push
ja
add
cld
lods
test
sub
out
scas
sbb
outsb
sarl
xor
add
lods
mov
or
arpl
lods
inc
adc
pop
push
sub
cli
fucomp
mov
iret
push
ja
mov
dec
sti
dec
pop
jg
loope
insl
idiv
fstpl
sbb
shl
aad
dec
xchg
lret
aas
gs
pusha
jg
imul
fdivrl
cwtl
jge
insb
dec
cmp
fdivrl
push
rcrl
pop
cs
and
jle
adc
jae,pn
rep
mov
out
mov
cmp
lcall
or
fisubs
testl
xchg
push
sbb
jp
xor
and
fs
lcall
scas
pop
pusha
xor
or
les
jno
mov
frstor
or
add
ret
test
or
inc
mov
fcmovbe
or
fcmovnu
ja
xor
into
mov
adc
sub
sar
lcall
xor
or
inc
pop
mov
ljmp
rcr
adc
pop
mov
icebp
jno
mov
mov
icebp
lret
push
imul
pop
xchg
sbb
mov
xchg
push
sbb
xor
insl
test
imul
or
lret
or
add
aad
add
sbb
adc
push
jp
mov
cmp
push
push
ja
fwait
jp
jg
loopne
repz
nop
mov
inc
adc
xchg
push
aad
leave
lock
notb
cli
and
xor
dec
xchg
mov
xchg
cmc
daa
fldenv
jnp
sub
pop
rcrb
out
lret
push
ror
cmp
int
pop
add
cmpsb
mov
lahf
popl
aam
in
and
sub
fwait
popf
dec
imulb
fstpt
push
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
pushf
xchg
cmp
pinsrw
add
mov
insb
adcb
jb
bound
sbb
and
int
dec
sbb
pop
push
pop
out
popa
sbb
xlat
das
bound
arpl
pop
pop
adc
add
push
iret
call
cmpsl
addr16
cmp
cmp
add
xchg
pop
cmp
cmpsl
jns
lret
test
sbbl
in
add
mov
cmc
pop
int3
pop
cmp
push
pop
rclb
jge
pop
lea
in
pushf
jle
repz
pop
jge
dec
ds
mov
ljmp
arpl
adc
shlb
push
mov
test
sbbl
mov
xchg
sbb
push
add
mov
cmp
mov
lds
xchg
fiadds
outsb
and
jnp
aas
inc
xor
push
je
mov
lds
adc
ret
call
xor
arpl
push
popa
or
test
cmpsb
imul
imul
stc
loop
jo
adcl
orl
ss
mov
icebp
testb
mov
xor
push
les
or
inc
xor
push
aas
mov
pop
jb
mov
insl
insb
pop
aaa
xchg
or
sbbl
xchg
xchg
dec
js
jmp
jecxz
std
call
in
imul
outsb
jns
push
or
jno
popf
aas
sbb
pop
outsl
xchg
les
jb
loope
mov
sub
mov
or
push
mov
mov
clc
movsl
or
jnp
pop
xor
fistl
aaa
cmp
in
cld
stc
jl
or
fidivl
inc
orb
shll
lret
xchg
add
adc
mov
and
add
cmp
stos
fs
inc
nop
sub
movsl
movsl
add
adc
mov
xchg
mov
fistl
popa
jbe
add
rcll
mov
pop
xor
out
dec
repnz
stos
pop
cmc
insb
pop
pop
and
pop
and
cld
jle
pop
cmp
cmp
xor
sbb
sub
and
rorb
outsb
rolb
cmpsl
cmp
mov
pop
dec
loopne
mov
mov
outsl
add
int3
mov
movsl
push
push
xchg
jecxz
push
xor
fnstcw
aaa
cs
sbb
mulb
in
in
clc
sub
and
repnz
sub
mov
mov
add
xor
loopne
or
rolb
ficomps
jge
aaa
cmpsb
push
jns
insb
sub
push
adc
xchg
aad
sub
sbb
mov
push
pop
loopne
addr16
test
stc
pop
push
push
mov
out
pop
outsb
sbb
cmpb
adc
rcll
int
or
loopne
lahf
dec
aaa
or
inc
jmp
xor
cwtl
shlb
outsb
movsl
stos
sbb
enter
popf
inc
lret
cmp
out
loopne
aam
adc
ror
add
xchg
imul
dec
outsb
jl
jecxz
lcall
jle
rolb
xor
aas
repnz
imul
test
sbb
mov
psubusw
jne
and
sbbb
xor
lea
les
pop
pop
pushf
out
jb
cmp
ror
xor
push
fwait
or
mov
pop
or
sysexit
les
jnp
jg
scas
lcall
aaa
mov
sub
cwtl
enter
ret
cld
imul
fcoms
test
data16
mov
les
repnz
push
mov
aad
cs
test
pop
mov
pop
movsb
and
jbe
callw
mov
jle
rorb
dec
xchg
gs
rclb
mov
xlat
insl
push
negl
aas
test
aaa
push
cli
leave
mov
jge
add
sub
and
mov
aas
dec
xlat
loope
mov
sub
jp
loopne
frstor
out
in
mov
jae
fs
jo
dec
and
mov
leave
jg
cmpsb
inc
ret
fs
pop
pushf
mov
sbb
das
sbb
cwtl
in
ret
iret
pop
add
lods
leave
js
mov
jg
jge
pop
or
inc
mov
ss
int3
cmpsb
adc
pop
adc
ss
sub
and
jae
adc
shlb
mov
lea
inc
loope
lret
inc
in
xchg
pop
cmp
sub
pusha
and
jo
xchg
shr
into
iret
jge
mov
push
jns
lret
mov
jb
gs
arpl
sub
push
je
mov
aam
pop
iret
push
pop
int
lahf
idivb
xor
adc
sahf
call
mov
push
jp
sahf
movsl
out
push
or
mov
pop
lods
loop
test
adc
shl
addr16
mov
je
mov
nop
outsb
mov
push
mov
push
dec
adc
cmp
xor
fidivrl
pop
mov
enter
inc
rcrb
pop
mov
mov
xor
sbb
or
lods
pop
mov
xchg
aam
or
cmp
lcall
test
cmp
sbb
das
push
push
add
pop
fcompl
iret
clc
dec
mov
sbb
mov
sbb
in
lods
jp
add
repnz
hlt
push
fnstcw
xlat
aaa
xor
pop
xchg
mov
jg
ljmp
add
leavew
lahf
imul
jp
adc
pop
stc
inc
int3
cs
pop
test
cmpb
jbe
mov
lret
daa
pop
xor
pop
mov
xchg
test
pop
sbb
lock
jno
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
inc
in
rorb
pinsrw
psrlw
xchg
test
mov
add
scas
in
push
mov
arpl
push
adc
mov
dec
push
ret
addr16
pop
repz
shlb
or
lea
hlt
jns
sahf
fsubrl
adc
pop
fists
out
sub
push
inc
rcll
dec
add
lods
imul
incb
xchg
mov
inc
jne
ljmp
sbb
lcall
xor
jmp
jns
sub
mov
adc
xchg
lahf
inc
sahf
sbb
mov
dec
fyl2x
jecxz
inc
inc
push
sbb
dec
or
pop
cmp
pop
out
push
sbb
dec
mov
lods
loopne
mov
mov
lcall
decl
je
gs
shlb
ljmp
xor
ss
pop
inc
mov
mov
fmul
mov
in
fs
jae
pop
out
dec
inc
push
imul
jmp
repnz
push
das
ss
sub
push
cli
cld
cltd
nop
imul
test
sub
fcmovbe
add
push
push
data16
push
xchg
cs
sbb
ret
cmp
loope
fadd
addb
ds
push
adc
int
ds
sub
iret
stos
cmp
sub
jmp
aas
sbb
popa
dec
xchg
ret
push
pop
loope
jge
dec
mov
and
je
imul
xchg
sarl
lahf
push
or
jae
sbb
jle
hlt
xorl
loope
pushf
pop
das
xor
shll
cmpsl
ret
aad
mov
loopne
dec
mov
ret
movsb
cs
mov
mov
sbb
testl
xchg
pop
lahf
mov
dec
ja
aaa
adc
adc
jae
xlat
add
inc
imul
cli
stc
cmpsb
call
inc
in
sti
inc
ret
hlt
mov
inc
inc
or
out
add
repnz
mov
cmp
push
addl
sbb
adc
repz
jnp
pushl
adc
mov
inc
mov
mov
es
xor
outsl
xchg
xchg
dec
shlb
bound
cs
scas
xorl
out
stos
and
mov
scas
js
iret
negl
adc
xchg
push
hlt
dec
es
mov
and
add
pop
das
sbb
mov
daa
mov
addr16
adc
out
push
add
js
mov
int
ret
dec
mov
insl
repnz
orb
mov
dec
aad
adc
les
and
call
mov
adc
cwtl
push
es
ffreep
cmpsl
aaa
pop
mul
push
rcr
shr
data16
or
mov
jl
xchg
xchg
fldt
inc
subb
pop
dec
sub
mov
xor
cmc
stos
fdivp
pop
xchg
iret
shrl
jg
fdivr
rorb
ja
popf
test
das
jne
arpl
outsl
lea
shlb
push
jecxz
xor
or
addr16
cmpsb
mov
xor
pop
movsl
aad
pop
cmp
adc
mov
sub
popa
in
cmp
xor
mov
mov
push
xor
cmp
test
test
xor
xor
xor
mov
and
fildl
ret
sub
add
add
movsl
aas
icebp
mov
loop
shll
mov
mov
lds
int3
jmp
inc
push
jnp
add
or
push
cmp
dec
mov
cs
pop
nop
iret
mov
testb
out
movsb
and
imul
mov
sub
push
out
add
icebp
in
xchg
insb
pop
orb
adc
sub
adc
loop
test
and
test
mov
loopne
arpl
mov
lret
xchg
aam
fsubp
std
sub
inc
stc
in
jb
leave
aam
popf
je
cli
clc
repz
sbb
ljmp
pusha
out
outsb
clc
pop
adc
fsubrl
push
arpl
mov
enter
mov
ja
xchg
cmp
xor
loopne
xchg
fs
mov
cmpsb
icebp
adc
loopne
push
or
sub
sahf
jmp
mov
nop
mov
in
xor
push
mov
cwtl
xor
testb
pop
rol
xchg
popa
inc
outsb
scas
dec
repnz
js
inc
pusha
subl
stc
repnz
aas
mov
xchg
pop
movsb
imul
xchg
adc
cs
dec
cld
mov
xchg
and
enter
push
mov
inc
jl
in
xor
ret
push
sub
js
push
sub
and
pop
adc
test
fcoml
mov
mov
js
jb
add
mov
repz
jge
push
jge
into
mov
sarb
add
jns
add
movsl
fisubs
xchg
hlt
sahf
add
ja
lods
pop
shll
xchg
inc
cmp
in
and
fimull
jbe
leave
gs
and
cs
cld
jp
adc
inc
enter
sbb
inc
push
push
dec
xchg
push
xchg
adc
idiv
jmp
sbb
outsb
in
mov
scas
or
sbb
xorl
adc
xchg
inc
sbb
mov
repnz
jl
mov
fidivrs
hlt
lock
jno
mov
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
or
insb
xchg
mov
pinsrw
psrlw
xchg
cmpsl
xchg
sub
out
out
fs
arpl
incl
mov
add
cltd
sbbb
mov
roll
dec
pusha
insl
repz
sbb
jl
shl
pop
daa
cmc
out
xchg
add
or
ljmp
push
mov
mov
scas
mov
sub
leave
pop
sbbb
stc
arpl
jp
add
dec
fnstcw
cmp
mov
iret
dec
ret
pop
push
cmp
mov
inc
pop
aad
sub
repz
mov
adc
mov
movsb
xchg
sub
adc
in
xor
push
mov
repnz
aas
hlt
pusha
insb
out
push
sub
pop
fldl2t
adc
fisttps
mov
je
lods
fwait
mov
xchg
popa
jno
sbbb
push
mov
popf
add
pop
add
ret
mov
jg
jg
xchg
jmp
loope
aam
dec
in
hlt
jns
lds
xor
sub
sbb
jae
arpl
cmp
enter
push
sbb
pushf
ret
sahf
add
jo
or
daa
lods
pusha
dec
xor
addr16
push
or
add
push
fs
int
repz
hlt
sbb
push
arpl
jmp
repnz
cmp
loopne
cmpsb
movsl
jle
jne
push
aas
popf
in
xor
dec
xchg
daa
add
insb
jno
mov
jb
fcomps
mov
push
aam
add
dec
inc
outsl
movsl
mov
jp
push
cli
ljmp
sbb
jo
js
sti
test
adc
jbe
xor
insl
or
xchg
imul
jp
in
sbb
inc
pop
jae
add
sarb
or
ret
mov
sub
push
push
inc
out
mov
xchg
cmp
pop
aas
call
test
les
popf
stos
mov
cmc
inc
add
popa
cmp
mov
jl
fmuls
or
inc
add
xor
outsl
cltd
mov
xchg
jge
cli
pop
push
pop
fists
pop
mov
mov
aad
adc
cmpsl
sub
cmpsb
imul
xchg
mov
outsb
dec
leave
div
push
outsb
aad
int3
pop
popf
add
scas
and
pop
test
inc
mov
int
ljmp
and
push
lretw
popf
lods
add
xor
scas
push
sbb
aam
cmp
jl
out
fcomip
sub
cli
out
adc
jmp
nop
rcrb
daa
sarl
sbb
jb
repnz
or
mov
add
push
aad
sbb
cld
ljmp
stos
int
rclb
iret
add
into
shll
adc
mov
sbb
or
out
push
jne
movsb
cmc
or
pop
insl
xchg
jecxz
lahf
addr16
int
dec
in
scas
jg
adc
and
sahf
mov
adc
pop
add
rcrb
mov
pop
xlat
mov
shll
add
add
movsl
jmp
mov
outsb
push
lds
mov
jge
and
mov
jmp
sub
imul
cld
xchg
inc
add
cmpsb
in
adc
jbe
add
jle
xchg
test
fisubrl
clc
sbb
insb
and
mov
fadd
or
sub
pushf
push
daa
ja
imul
or
pusha
push
enterw
clc
dec
adc
call
pop
inc
gs
iret
out
repz
in
jg
add
pop
mov
dec
xchg
es
push
sbb
stc
sbb
fucompp
and
inc
sahf
enter
xor
out
add
insl
lret
bound
xor
cltd
mov
inc
inc
pmaxsw
jmp
fdivl
push
xchg
sbb
mov
mull
mov
repz
jae
rcrb
cmp
sarl
sbb
or
pop
insb
or
into
mov
push
pop
cmp
or
movsl
movsl
pop
sub
dec
push
fldcw
mov
inc
mov
insl
cmpsl
icebp
adc
jmp
xchg
repnz
mov
push
cli
add
add
cmpl
arpl
add
xor
insb
jnp
fdivrs
and
repnz
mov
mov
fnstenv
cmp
outsb
sub
mov
sbb
addl
fistpl
jle
jns
jp
inc
mov
jb
sbbb
jbe
data16
dec
pop
ds
into
or
aas
xchg
pop
hlt
mov
cwtl
lahf
aam
mov
jmp
sar
jnp
call
push
cmp
or
pop
push
or
xchg
stos
add
mov
pop
dec
add
inc
aad
popf
xchg
test
inc
push
iret
xchg
jmp
scas
push
ja
enter
push
inc
lahf
cmp
fimull
test
jns
xor
push
xchg
xchg
cs
mov
xor
add
icebp
pop
das
and
daa
sti
setb
pop
imul
or
lds
andl
imul
cvtps2pd
lods
out
adc
test
dec
mov
mov
xchg
xlat
cmp
fs
pop
punpckhbw
inc
mov
mov
into
decb
adc
xlat
iret
mov
jne,pt
je
popf
js
out
mov
ret
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
clc
sub
test
pinsrw
paddw
sbb
mov
mov
mov
mov
in
push
add
or
idiv
adc
inc
fiadds
fsub
jl
xor
mov
cmpsl
stos
xlat
into
aaa
push
jo
into
dec
daa
aam
jnp
mov
movsl
fldl
and
ljmp
xchg
mov
aad
dec
ja
std
mov
mov
cmp
and
ja
pop
stos
push
cwtl
std
cmpsb
mov
test
mov
mov
data16
cwtl
pop
pop
mov
jg
pusha
jg
into
fstl
and
mov
dec
es
dec
or
fnsave
adc
xchg
sbb
int3
subb
shrl
faddp
and
pop
rcrl
mov
or
adc
xor
add
push
mov
sbbb
push
je
std
ret
mov
and
fiaddl
std
add
lea
inc
addr16
and
mov
dec
aam
jp
stos
call
mov
mov
jl
cmp
mov
sbbb
loop
dec
add
movsl
push
adc
xorb
xor
dec
imul
xlat
mov
fdivs
insw
or
mov
add
iret
sbb
mov
mov
popa
xchg
pop
outsb
mov
jno
stos
pop
cmp
jecxz
adc
nop
aad
lahf
movsb
push
or
cltd
pop
loopne
adc
pop
xadd
jne
aaa
inc
lock
test
loop
and
shll
sub
push
and
lods
cwtl
mov
lods
push
pusha
pop
ljmp
call
cmpsl
sub
pop
push
sbb
std
jne
push
dec
cmp
push
in
lret
inc
jbe
push
out
repnz
les
out
sbb
pop
mov
add
sub
cmp
add
or
xor
sti
rcrl
out
lods
insb
add
lock
pop
lcall
inc
cli
orb
sub
bound
outsb
ja
dec
xor
or
fistl
jmp
mov
adc
rcll
out
pop
lahf
rcll
ds
push
mov
insl
add
out
cmp
lds
adc
lret
roll
ljmp
scas
pushf
repz
popf
jg
inc
gs
cwtl
cmpl
and
lret
nop
cmp
call
fidivs
or
imul
push
jmp
push
pop
js
out
lea
inc
gs
sbb
push
sub
loopne
and
jle
xor
mov
xchg
and
test
inc
mov
push
inc
addb
mov
sub
outsb
fmul
xchg
adc
out
and
pop
sub
pop
mov
fisubrs
lods
scas
push
sbb
imul
xchg
pop
and
insb
insb
mov
rorl
insl
sub
ja
pop
mov
jb
lret
or
xor
call
cmp
sbb
loope
pop
ljmp
adc
xchg
dec
mov
popa
inc
xor
hlt
or
jp
loope
jno
add
stos
add
aaa
daa
push
inc
xor
jg
xchg
push
xchg
ljmp
add
imul
dec
xor
mov
sarb
add
cli
fcom
xchg
arpl
lahf
ljmp
fsubl
out
out
rolb
ds
insb
leave
push
notl
sbb
shlb
jmp
insb
xor
jl
inc
sbb
mov
int
cmp
mov
scas
dec
dec
fstps
xchg
pushf
aas
imul
mov
pop
lcall
aam
test
inc
adc
or
fldcw
jno
push
jo
aad
lods
jge
outsb
sbb
loope
jge
mov
out
dec
push
mov
sbb
mov
dec
sbb
fsubs
sub
ret
jecxz
adc
dec
sbb
popl
ret
js
push
cmp
pop
aam
adc
mov
adc
xchg
jae
cmp
stc
cwtl
bound
rcll
xor
sub
jle
sbb
jecxz
hlt
or
mov
cwtl
int
mov
out
push
mov
in
xchg
push
out
push
push
push
es
fpatan
push
jo
ret
inc
dec
xchg
orb
dec
pop
loop
add
repnz
dec
bound
mov
arpl
les
divl
push
dec
ja,pn
adc
or
fldt
mov
ret
out
stos
push
movsl
xor
push
out
cmp
test
cmp
xchg
bound
outsl
mov
push
imul
mov
or
jae
insb
ja
fsubrl
sahf
jp
nop
cltd
sbb
movsl
or
ljmp
js
stos
repnz
sbb
mov
xor
test
cmp
cmc
jg
shlb
adc
test
outsb
sub
and
cmp
and
pop
cmp
mov
adc
hlt
mov
es
sbb
out
pop
pop
aad
xchg
test
xor
leave
cld
js
pop
pushf
int
mov
sbb
lcall
xor
in
stos
cmpsl
push
div
pushf
mov
rorl
in
mov
lock
sub
inc
inc
test
outsl
sub
dec
cmp
clc
mov
mov
xlat
icebp
push
fcmove
cld
push
or
pop
in
mov
xor
and
ret
fwait
or
pop
or
jo
sbb
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
push
inc
into
xchg
pushf
pinsrw
sete
adc
push
out
push
sarb
cwtl
add
leave
jl
cmpsb
add
xchg
gs
sbb
lret
daa
mov
or
lds
mov
xchg
sbb
jae
hlt
cli
out
ret
cmpsl
pop
test
hlt
pop
sub
jae
mov
ds
std
or
inc
jl
movsb
inc
mov
adc
dec
pop
shrb
loope
in
nop
les
pusha
out
sbb
fisubrl
inc
and
jnp
pop
adc
mov
add
daa
inc
movsb
sub
scas
adc
mov
add
pop
addb
push
jle
pusha
jnp,pn
xchg
mov
pop
push
lods
divl
add
cli
loope
loop
jp
ret
jae
cli
mov
xor
sub
inc
movsl
jb
bound
xchg
xor
shrb
clc
adc
cwtl
sarb
nop
in
adc
cld
shll
mov
pop
std
push
rolb
lea
dec
idivl
push
cs
mov
sub
mov
scas
mov
callw
leave
jnp
or
adc
and
int
inc
sbb
inc
sahf
aam
dec
dec
lods
icebp
fiaddl
sub
rorl
xchg
lock
pop
pop
es
push
pop
mov
andb
xor
fwait
jb
pop
lret
rclb
sbb
cli
idivb
dec
xchg
xchg
dec
inc
repnz
lock
enter
enter
or
sbb
jge
es
std
mov
or
mov
jnp
in
push
cli
es
jmp
lds
jae
push
pusha
and
fxch
or
loopne
je
xchg
test
mov
aam
adc
imul
fs
lods
pop
inc
aas
jecxz
fsts
jno
ja
sbb
loop
jecxz
sbb
scas
sbb
shll
mov
loopne
inc
shll
xchg
or
sub
and
jns
fdivrs
adc
xchg
bnd
adc
dec
into
inc
movsb
fldt
cmp
or
mov
mov
pop
les
jmp
popf
in
xor
sarb
pop
stc
xor
or
mov
jmp
ljmp
fcomps
stos
pop
popf
and
cmp
add
add
popf
lds
in
decb
mov
mov
mov
int3
in
test
in
push
jl
and
lds
jg
mov
ljmp
pushf
nop
or
or
dec
mov
and
adc
jmp
dec
jg
scas
fnstenv
sub
ret
or
imul
sub
mov
repz
outsl
jg
scas
push
js
movsl
mov
aad
sub
shll
fs
mov
movsb
xchg
and
insl
pop
mov
mov
push
adc
rcll
js
fdivl
shlb
mov
int
jl
movsb
and
popf
enter
push
mov
adc
stos
movsl
lahf
lea
dec
jne
outsl
xor
cltd
enter
arpl
aam
mov
scas
jno
and
scas
cmp
mov
adc
stos
stos
mov
cmpl
xor
fisubrl
adc
ds
in
ret
inc
pop
or
mov
mov
push
sbb
bound
mov
jae
sbb
jg
ja
push
dec
sub
aaa
enter
out
scas
loopne
in
jo
sti
icebp
stos
pushf
ds
stc
xor
mov
loope
adc
dec
pop
mov
popa
stos
imul
jns
mov
cmp
add
xor
mov
push
popf
out
sbb
cmpsl
add
into
fnsave
outsl
cmpsl
cmp
cmp
arpl
test
or
pusha
pop
sub
mov
insl
pusha
mov
notl
xor
mov
enter
pushf
mov
pusha
movsl
xlat
and
test
add
mov
shl
jecxz
cmpsb
movsl
in
cltd
int3
adc
dec
and
loopne
test
and
lret
insl
loope
pop
push
mov
adc
add
add
add
inc
dec
xor
pop
fsubrl
mov
lods
mov
iret
xchg
loope
or
das
dec
sub
push
out
outsb
mov
roll
out
pusha
mov
jle
pop
lret
pcmpgtb
loop
mov
mov
subb
sbb
dec
jno
out
stos
add
rol
adc
icebp
dec
icebp
test
cmpsb
inc
jb
out
dec
pushf
adc
xor
push
dec
push
enter
popa
or
sub
and
xor
pop
jbe
negb
into
ds
fs
add
int
fcoml
lahf
push
ljmp
push
cli
push
bound
inc
test
gs
xor
loopne
fcomp
stc
mov
fdivs
push
xor
sub
scas
addr16
cmp
das
in
xchg
out
pop
adc
imul
fistps
or
jp
sub
dec
out
jle
add
add
repz
adc
addr16
mov
aas
push
push
fs
push
aad
push
inc
push
insl
sbb
scas
or
fdivrl
push
pushf
cmpb
jb
pop
fdivrs
scas
es
dec
sub
lods
fbstp
push
mov
pop
xchg
adc
lcall
push
mov
inc
insl
xor
sub
and
pop
ret
fwait
test
lods
ljmp
inc
sub
jo
imul
add
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
out
loopne
mov
add
setl
push
mov
and
xchg
dec
out
adc
sbb
jne
je
insb
xlat
xor
cld
fistpll
push
inc
adc
add
jnp
ljmp
in
pop
and
cmp
inc
cs
fs
mov
mov
xchg
xor
test
jns
neg
aad
mov
les
cltd
imul
push
mov
aam
loope
jl
add
cmp
in
mov
mov
adc
outsl
in
daa
jle
sbb
lret
sbb
and
ja
push
sbb
lods
lret
es
sub
xor
push
cmp
xchg
mov
int3
insl
xor
daa
pop
cmp
dec
and
jle
sbb
cmpsb
loope
mov
cs
call
xor
jns
mov
pop
sub
mov
sub
mov
js
inc
mov
imul
test
f2xm1
ds
loop
cmp
lcall
add
jb
mov
fwait
or
pushf
sub
in
pop
mov
cld
pop
and
outsl
loope
cltd
imul
cltd
popa
push
movsl
enter
xchg
movsl
fsts
push
addl
and
outsl
inc
mov
stos
dec
sub
popf
jo
aas
leave
jns
dec
pop
jle
mov
out
mov
hlt
imul
lds
mov
mov
sub
pop
icebp
out
cs
cmp
sbb
ja
mov
mov
adc
popa
cmp
inc
cmc
xchg
neg
ret
push
xor
xchg
push
bound
cld
inc
in
mov
pop
dec
cmp
or
in
ja
dec
mov
and
fwait
in
data16
cltd
dec
test
clc
cmp
push
cmp
jmp
adc
or
fisubl
jns
fwait
std
add
repnz
ljmp
shll
push
cmp
loope
leave
test
scas
les
test
fidivl
hlt
and
mov
pop
or
mov
mov
movsb
mov
xor
jle
push
cmc
aam
cmpsl
push
out
inc
in
push
and
xchg
leave
inc
inc
mov
mov
test
add
out
pop
push
stos
in
cmc
mov
dec
inc
notb
dec
add
mov
lods
xor
dec
out
pop
in
das
mov
sbb
mov
and
cmpsl
cmpl
rcl
out
lahf
jno
dec
cltd
dec
cmp
fidivl
push
mov
adc
and
and
xlat
mov
pop
jle
sahf
aam
packuswb
out
mov
adc
sub
adc
jl
arpl
in
mov
dec
jae
cmpsl
rclb
lcall
or
ret
call
xor
imul
mov
add
insl
push
inc
pop
outsl
popa
sbb
hlt
cld
push
loopne
dec
dec
ss
add
cmc
dec
mov
shrb
in
mov
pop
int
jns
sbb
pop
stos
aad
pop
pushf
xor
stc
add
pop
mov
mov
pop
pop
cmp
inc
push
icebp
inc
mov
xor
into
pop
jecxz
or
in
mov
es
mov
lret
movsb
mov
and
mov
test
sub
out
sbbl
pushaw
pop
dec
aam
fs
and
mov
jmp
jbe
pop
leave
sbbl
in
sbb
lret
mov
imul
add
adc
rcl
add
mov
xor
jmp
mov
faddl
xor
pop
cmp
jno
or
ja
sbb
outsl
ss
push
js
inc
push
lret
cmp
mov
jne
int3
ficomps
xchg
lods
rcll
sti
lock
imul
scas
dec
mov
fs
sub
inc
cmp
jg
add
in
jae
inc
inc
out
jmp
dec
js
add
gs
ficoml
cs
dec
xchg
dec
xchg
test
lds
jge
inc
iret
xchg
jecxz
into
and
jecxz
sub
xor
jne
js
aad
xchg
hlt
jnp
imul
in
pop
out
xchg
ret
sar
add
lods
and
fcmovu
xchg
movsl
or
jl
testb
mov
rorl
or
pop
fistpl
test
out
stos
sbb
imul
arpl
push
lret
jge
imull
xchg
push
inc
mov
cmp
addr16
xchg
ret
imul
enter
mov
add
or
xchg
data16
jmp
out
add
mov
pop
pop
and
out
mov
pop
add
xchg
ret
scas
test
push
ret
inc
pop
rolb
cmp
xchg
das
psubsw
cmp
lods
call
leave
and
push
enter
insl
idivl
inc
ret
or
imul
sbb
in
sti
je
fldl
leave
sbb
les
pop
imul
and
mov
inc
add
mov
inc
pop
or
adc
repz
sbb
std
pop
pop
mov
stc
lock
inc
jle
lcall
cmpsb
enter
icebp
push
mov
pushf
sub
dec
loopne
ss
inc
into
inc
mov
pop
push
jns
or
jo
stos
cli
rolb
jne
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
mov
pinsrw
bndldx
iret
dec
pop
js
sahf
aas
and
cmp
out
pop
inc
repnz
pop
push
adc
jl
cmp
add
dec
mov
lcall
in
movsb
mov
xchg
repnz
mov
das
ret
add
imul
cmpsl
dec
call
push
jl
mov
shr
loopne,pt
insb
and
dec
pop
dec
jp
sub
ficomps
sub
jne
sti
xchg
sub
mov
lret
scas
cmp
inc
mov
mov
frstor
push
pop
jle
ljmp
jb
jno
xchg
cwtl
inc
adc
loop
jg
and
xchg
push
aad
xchg
fsubs
stos
jl
pop
sbb
and
shll
adc
jb
aad
bound
or
clc
xor
lret
ss
sub
sahf
inc
jae
ss
sahf
adc
aam
push
clc
stos
jno
outsl
jns
aas
es
xlat
xor
popf
leave
mov
sub
mov
push
mov
mov
adc
mov
sbb
pop
in
xchg
mov
mov
sub
sbb
mov
xchg
pop
mov
sub
dec
pop
adc
out
mov
jb
mov
push
cs
push
arpl
repz
lods
scas
xor
neg
in
popa
sarl
mov
out
pushf
xor
mov
pop
inc
cmp
jns
int
shr
sbb
and
xor
push
push
mov
ret
idivl
xchg
pop
jmp
mov
testb
jb
int
xchg
mov
scas
push
push
push
cmp
fcmove
imul
xor
inc
sub
movd
mov
or
and
jo
pop
pop
add
imull
cmpsb
sub
imul
jecxz
cld
enter
xor
xchg
cwtl
in
jp
fisttpll
rcrb
add
pop
ja
push
lcall
sbb
cmp
add
inc
inc
gs
mov
std
adc
aas
add
jecxz
jbe
arpl
mov
adc
pop
rcl
enter
int
lret
outsb
int
cmp
or
mov
insl
fsubrs
cmp
outsb
xlat
jo
xchg
pop
push
lods
add
aam
dec
loopne
mov
fldcw
mov
fiaddl
cld
mov
xchg
gs
lret
js
outsb
xchg
jbe
cmpsl
jl
xor
or
xchg
sahf
lret
xchg
and
push
in
adc
cmp
adc
rorl
mov
ror
pop
xor
push
pop
xchg
push
js
shr
clc
mov
dec
gs
decb
sbb
add
sarl
sbb
pop
push
std
dec
xor
movsb
cmp
adc
fsubl
sti
xchg
js
adc
hlt
lcall
mov
std
add
sbb
push
inc
push
jbe
jg
mov
push
stos
sbb
sbb
subl
nop
jge
and
or
add
std
sahf
pop
jno
jo
xchg
jg
jg
or
or
push
shrl
aas
leave
je
xor
ja
sbb
push
cmpsb
div
fs
mov
add
push
mov
dec
jge
pop
sub
jb
sub
jb
incl
jmp
fs
dec
outsb
fwait
jno
mov
jle
paddb
mov
mov
add
cli
jg
insb
xor
inc
mov
add
imul
push
int3
add
stos
ss
ss
testb
xchg
mov
aaa
jle
inc
adc
mov
and
int3
cmp
ret
push
pop
and
pop
or
call
inc
loopne
pop
je
mov
add
and
push
xchg
push
dec
cwtl
mov
daa
gs
in
sbb
insl
cmp
sbb
add
push
fildl
pop
mov
div
movsb
push
outsl
je
mov
jle
fsts
add
jb
xor
dec
dec
jae
xchg
loope
lret
insb
sarb
fwait
dec
pop
adc
aam
inc
stos
dec
js
fcoml
cmp
xor
mov
pusha
mov
pop
mov
in
ja
push
mov
dec
sub
fdivrl
outsl
dec
mov
and
cmp
push
adc
stos
lahf
or
iret
std
xchg
or
mov
sbb
out
imul
out
cmp
sti
add
ds
add
pop
inc
mov
in
xor
gs
push
icebp
or
sti
cmp
push
mov
jbe
lahf
ss
lock
ljmp
pop
inc
addl
movsb
mov
out
lahf
jae
loope
mov
clflush
mov
cld
sub
or
ss
divl
test
int3
call
popa
xor
cs
or
dec
push
lret
es
and
movsb
push
inc
jge
into
bound
int
es
pusha
or
test
mov
or
jae
call
fmul
adc
mov
lods
pusha
mov
mov
pop
sti
stc
out
inc
xchg
or
inc
jg
imulb
push
mov
inc
aam
mov
sbb
push
ret
push
cmp
add
pop
and
lahf
aad
or
out
jmp
into
xor
mov
adc
jns
sub
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
ficompl
add
loopne
in
ljmp
pop
fidivl
adc
lds
out
inc
mov
and
pushf
pop
push
rcr
rorl
insb
sbb
aad
xchg
outsb
pop
aam
insb
aas
jne
mov
xlat
lea
sbb
setge
in
sub
xchg
xchg
adc
fildl
xchg
push
pusha
das
xorb
std
jl
dec
repz
ret
jp
or
pop
subl
in
push
idiv
sub
stos
test
lds
cs
or
rol
imul
iret
push
cmp
jno
cmpl
pop
mulb
xchg
aad
pop
je
adc
ret
xor
cmpsl
stos
mov
shl
add
mov
lock
stc
pop
mov
inc
mov
addr16
gs
out
xor
jmp
xlat
jl
lcall
fcomps
pop
test
nop
clc
xor
mov
xor
idiv
hlt
imul
mov
movsl
xchg
adc
test
mov
dec
xor
mov
stos
xorb
mov
bound
adc
rcll
inc
ret
fstl
fmuls
orb
sbb
rsm
ss
xorl
or
jae
nop
mov
xchg
add
add
xor
or
add
inc
bound
mov
loop
dec
sub
jge
ret
mov
add
into
pop
mov
or
imul
adc
stc
js
mov
scas
jg
dec
mov
xchg
sub
cmp
cltd
inc
mov
aad
ss
cmpl
cmp
popf
mov
dec
push
add
les
aaa
mov
aaa
lret
inc
ficoml
cmp
jae
jno
push
movsl
push
mov
or
in
mov
decl
sub
cltd
int
xorl
push
mov
xchg
jle
mov
cmp
pop
ds
add
adc
xchg
mov
cmp
in
adc
xchg
push
lods
adc
aas
jae
and
daa
pop
xchg
addl
xor
cli
das
xchg
insl
jmp
sbb
enter
and
push
adc
repnz
test
js
lds
add
ja
jmp
xor
add
fsubrs
adcb
ret
shlb
lods
pop
lret
daa
scas
popf
add
jbe
or
mov
shll
aam
mov
repz
mulb
inc
jne
repz
rorb
pop
shlb
test
inc
cs
fnsave
pop
adc
pop
jae
pusha
xlat
lahf
xor
cwtl
aaa
cli
fimuls
lcall
push
aaa
lods
jle
mov
adc
pop
cmp
std
out
addr16
sti
insl
mov
mov
cltd
sbb
add
adc
jp
jp
push
pop
sbb
orl
fcmovnb
mov
add
enter
in
mov
inc
repz
jno
scas
negl
lret
fadd
sti
fcomip
sbb
je
jg
cltd
inc
jp
xor
push
mov
stos
inc
push
imul
pop
dec
fisubrs
xchg
push
sub
shr
ljmp
mov
jge
inc
popl
dec
pop
add
xor
dec
inc
ja
xchg
loope
lods
ret
fldt
xchg
push
insb
jle
cmp
ss
jae
adc
and
movsl
and
insl
lock
into
sbb
pusha
testl
aaa
and
mov
pop
cmp
pop
fmull
imul
lcall
ret
push
test
pushf
fs
mov
stos
in
push
sbbl
jmp
push
outsb
or
xchg
mov
dec
out
pop
emms
xchg
cmp
test
call
dec
add
cmp
mov
call
pop
cli
cmp
in
or
xchg
sti
dec
pop
xor
sti
aas
add
fldt
test
outsb
push
ds
lods
in
mov
gs
or
pop
pop
rorl
add
inc
in
jbe
mov
pop
push
in
clc
lock
stos
adc
and
pop
push
ja
xor
mov
cli
or
gs
loop
cmp
repz
daa
aad
cmp
fnstcw
mov
mov
inc
test
rcll
fisubrl
mov
test
fsubs
mov
cmp
int3
fimuls
ret
xor
or
xchg
mov
mov
mov
xor
mov
add
push
shll
xor
adc
jge
mov
lock
xor
push
lds
xor
adc
jne
test
das
push
ljmp
dec
idivl
mov
push
jg
pop
mov
and
sbb
mov
sub
lea
daa
out
xchg
and
xor
mov
pop
push
adc
push
sahf
pop
xor
bound
sbb
inc
add
ljmp
andb
ffree
mov
mov
inc
mov
scas
mov
addr16
jne
pop
pop
jl
and
xchg
xor
jmp
add
lods
nop
jne
or
sub
leave
dec
arpl
mov
pop
ret
or
lods
in
loope
ja
sub
lret
fsubrp
cwtl
scas
jbe
xor
xor
lret
push
sub
mov
roll
mov
rcrb
pop
mov
cmpb
rcl
xor
xchg
jp
in
int3
std
xchg
icebp
loope
rcll
fwait
mov
sub
and
hlt
cmc
inc
jmp
or
xor
dec
pop
mov
repz
add
fsts
out
xchg
xlat
xor
shll
mov
lahf
lcall
and
gs
repnz
outsl
xchg
push
mov
xor
xchg
dec
cltd
and
shl
jo
jg
xor
cmovs
dec
es
and
adc
inc
mov
hlt
clc
and
in
mov
out
leave
pop
add
out
jge
stos
pop
lahf
cmc
pop
cmp
mov
add
cvtpi2ps
push
dec
inc
push
adc
out
test
jg
xlat
pop
jle
jnp
enter
adc
cs
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
jo
xchg
push
vmwrite
sub
inc
or
loope
push
pop
and
mov
inc
out
jo
inc
lock
mov
imul
movsl
add
divl
fdivrs
push
lock
jns
shlb
push
fcmove
adc
and
mov
in
pop
scas
push
mov
lahf
in
inc
or
lock
sub
jb
mov
cmp
push
sub
xchg
nop
lods
pop
in
popa
xor
cmpsb
movhps
fmul
aam
fs
aas
outsb
inc
xlat
pop
out
sahf
inc
movsl
inc
cmp
std
icebp
add
loop
cmc
lea
inc
call
dec
pushl
jo
call
ljmp
movsb
cmp
jb
dec
lock
clc
dec
push
shl
dec
fldl
dec
mov
nop
pop
mov
call
adc
mov
lahf
jnp
mov
xor
out
dec
mov
loop
sub
pop
call
ja
rcr
push
ret
add
outsl
jle
std
xor
outsl
cmc
fbstp
or
jns
fnstenv
mov
add
outsl
in
sub
mov
jne
fdivl
rol
lret
push
scas
fcmove
lret
xchg
in
xchg
hlt
pop
fidivl
scas
aaa
sahf
stos
mov
imul
sub
jbe
cmc
pop
jmp
jb
jl
ret
sbb
mov
lahf
mov
outsb
mov
cmc
mov
rorb
jae
stos
lret
int
hlt
mov
mov
xor
mov
jo
inc
and
dec
int3
xor
xchg
insl
lcall
jmp
jp
cltd
xchg
pop
aad
movsb
mov
ret
sbb
pop
mov
and
or
sbb
les
mov
in
mov
cmp
inc
insl
mov
mov
jo
push
push
and
add
mov
xor
cmp
shrl
pushf
xchg
fldcw
in
or
not
jo
fwait
adc
jmp
mov
jae
frndint
xor
movq
fwait
push
sbb
push
loope
cmp
or
and
and
sbb
mov
addr16
mov
push
add
fiadds
cmpsl
insl
dec
mov
xchg
and
sbb
mov
mov
sbb
js
mov
xor
xchg
cmpsl
mov
sub
dec
xor
leave
cmpsl
fisttpll
cli
ss
cs
outsb
push
jg
pop
mov
cmpsb
pop
shrl
es
xor
xchg
sarb
mov
adc
mov
mov
pop
inc
mov
std
mov
int3
mov
shlb
jns
insl
inc
mov
push
lret
push
test
in
nop
dec
in
lret
push
xchg
cmpsl
aaa
inc
loopne
lcall
outsl
ljmp
mov
xor
cld
sbb
mov
cld
idivl
testl
in
xor
pusha
adc
das
or
insl
mov
outsb
cmc
cmp
xchg
in
xor
xchg
fmull
push
push
test
lods
lcall
fnsave
jp
dec
xor
inc
jno
int3
idivb
fnsave
xlat
adc
jne
pop
mov
mov
js
mov
mov
mov
add
dec
mov
mov
add
shr
push
scas
inc
xor
data16
jmp
data16
cmp
add
rcl
xor
and
enter
cmp
imul
out
push
mov
in
and
xlat
dec
xor
dec
ret
bound
mov
adc
adc
int
jp
int
ja
lea
pop
mov
das
xlat
sub
xchg
inc
inc
cmp
test
dec
inc
jnp
mov
inc
loopne
in
mov
push
jo
sub
cmp
inc
imul
push
sub
push
aad
ss
adc
xchg
repz
jl
jmp
ret
sub
popa
sub
adc
fs
sarb
ljmp
xchg
push
rclb
cmpsb
in
cmpsb
frstor
xor
hlt
leave
xlat
mov
imull
js
or
sahf
out
mov
mov
js
xor
lret
jbe
filds
in
ja
push
jo
les
xor
mov
pop
xor
mov
hlt
out
movsb
jp
mov
fsts
jno
insl
fnstenv
mov
and
mov
ja
push
loope
push
out
xchg
ret
add
push
mov
push
push
dec
outsl
or
inc
push
lahf
mov
ficoms
lods
out
sti
cmp
mov
adc
jno
ljmp
movsb
ret
ret
lds
insl
mov
cmp
div
xchg
mov
flds
jg
arpl
push
or
repz
cmc
adc
push
pop
into
mov
mov
pop
mov
decl
test
sub
cmc
push
jnp
lock
inc
inc
invd
inc
or
mov
leave
cld
xchg
insl
or
xchg
xor
pop
xchg
sahf
mov
ljmp
and
and
xchg
cwtl
int
add
sub
rolb
out
sbb
cmpsb
jle
rorl
scas
adc
subb
or
mov
lret
xchg
or
jno
ret
sub
cmp
push
sbb
mov
mov
std
packuswb
int3
flds
jg
imul
push
cmp
insl
mov
xor
neg
mov
scas
sbb
rcrl
xor
incl
pushf
pop
test
and
and
sti
inc
add
mov
imul
mov
movsb
xor
sub
mov
push
dec
out
jns
aaa
lret
lret
sbbl
mov
push
push
insl
jecxz
mov
dec
out
out
sub
orl
pop
loopne
xchg
scas
shll
xor
out
lock
pushf
imul
xor
out
andl
rcl
fdivr
std
mov
stc
sarb
xchg
shll
mov
add
sub
cmp
lods
in
stos
push
repz
adc
push
pusha
repnz
or
mov
fsubl
dec
jmp
shr
and
mov
inc
paddw
or
lock
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
dec
jl
stos
pop
add
xchg
cwtl
pushf
xchg
icebp
lock
pop
fwait
ret
add
dec
pop
push
movl
mov
cmp
dec
lret
push
imul
stc
jb
sub
mov
in
xchg
xor
sbb
cmp
adc
inc
mov
jmp
addr16
mov
pusha
or
dec
sub
mov
mov
sub
dec
cli
aad
aaa
mov
and
cmpsl
sbb
int3
mov
mov
sub
mov
scas
or
in
xor
inc
lret
push
neg
inc
mov
shll
cmpl
dec
and
fs
loop
in
push
xor
fnstsw
mov
xchg
repz
into
jno
xchg
add
gs
jne
bnd
cmpxchg
sbb
je
jle
in
push
add
mov
pand
and
sbb
std
xchg
cltd
shrl
push
or
and
mov
or
je
scas
pop
mov
xor
in
lret
xor
xor
pop
pop
ret
cmc
jae
stos
sub
sub
mov
mov
dec
jge
xbegin
cld
ds
mov
pop
cltd
dec
dec
xlat
movsb
or
imul
nop
add
std
xchg
fnstsw
add
ja
fisttps
mov
test
test
xchg
jae
dec
movsl
ret
stos
lcall
adc
dec
xchg
rorl
or
mov
testb
mov
push
push
jne
movsl
xchg
or
repnz
and
loop
addps
inc
outsl
enter
popf
cmp
loop
adc
inc
jg
test
pop
mov
insl
shrb
push
or
or
fistpl
stc
xor
jnp
fbstp
mov
inc
push
aaa
lahf
stc
inc
xchg
sarb
pop
pop
je
rorl
cmp
push
decb
fisttpl
xchg
scas
mov
add
push
pop
lds
adc
mov
daa
mov
lods
sub
clc
dec
inc
pop
jl
int3
mov
cmp
mov
repz
pushf
hlt
xor
inc
daa
test
mov
jb
movsb
dec
das
mov
jge
callw
inc
int3
in
jbe
cmp
xchg
jp
int3
or
push
mov
dec
loop
or
out
aam
aam
movsl
call
ficomps
sbb
pusha
and
lods
andb
nop
subb
enter
out
daa
xchg
fstpt
test
add
pop
mov
nop
push
inc
jns
dec
jb,pn
lret
faddl
sub
mov
pop
push
insb
mov
dec
loopne
int
cli
cmp
cmp
push
into
daa
shrl
scas
adc
inc
adc
outsb
jecxz
fnsave
xchg
sub
add
mov
pusha
imul
dec
dec
push
mov
enter
sbb
inc
dec
and
mov
mov
lahf
cld
iret
enter
mov
dec
das
callw
mov
push
mov
sbb
fs
mov
les
adc
xchg
cmp
shrl
cli
and
cmp
push
dec
add
jne
cmp
hlt
imul
dec
xchg
and
imul
dec
mov
and
push
sahf
cmp
sub
ret
lea
xchg
pop
icebp
out
xchg
adc
inc
fsubrl
bound
push
lods
negl
fmul
sbb
mov
rolb
xor
xor
movsl
and
outsb
adc
mov
in
in
sarb
fdivrl
pop
inc
mov
rcr
xchg
dec
fimuls
outsl
mov
jge
aas
lock
scas
cltd
test
jge
test
push
cld
add
dec
mov
nop
push
pushf
jbe
cltd
addr16
push
daa
sub
fdiv
fistl
add
jne
sub
cli
sbb
xchg
and
incl
dec
fiadds
idivl
jmp
cs
dec
cmpsb
and
mov
pusha
sti
addr16
mov
cmp
xchg
cmp
imul
sub
roll
out
jmp
sbb
fwait
ds
comiss
stos
adc
or
repz
outsl
cwtl
or
push
dec
out
ds
cmp
ret
fdiv
xchg
inc
cmpb
stos
sbb
cli
mov
dec
jg
insl
mov
jmp
and
push
mov
mov
sub
and
cmpsb
push
mov
int
xchg
push
cli
leave
movsl
mov
mov
lods
cmp
add
ret
test
push
test
jno
mov
jbe
ljmp
dec
pop
stc
pop
lods
inc
mov
inc
aad
sub
xor
bound
lods
mov
sbb
sbb
mov
add
push
cmpsl
push
das
fld
xchg
sub
sub
push
loop
cld
sub
mov
into
int
xchg
xor
cmp
sbb
or
mov
xchg
not
pop
jp
adc
dec
and
rorl
lock
mov
sub
rolb
dec
jle
xorb
sbb
xor
insl
fdivl
xchg
and
in
arpl
int3
pop
sbb
sbb
negl
dec
push
jne
lock
nop
data16
test
sub
rorb
into
dec
mov
sbb
push
pop
fnstenv
call
lods
inc
lds
xor
or
xor
cmp
mov
mov
dec
inc
mov
push
pop
fwait
addb
out
ret
fisubl
ds
js
cmp
lcall
push
js
pop
test
rclb
xlat
loopne
sub
js
fiadds
std
xchg
pop
push
jno
pop
dec
sbb
push
jl
out
arpl
sbb
les
leave
mov
sbb
in
ja
cmpsb
sub
loope
rclb
inc
lret
or
sbb
xchg
xchg
cmc
insl
push
mov
push
lock
cmp
test
pop
subl
icebp
or
jbe
push
repnz
daa
pop
mov
mov
jbe
inc
mov
loopne
inc
jmp
ss
xchg
out
in
pop
bound
inc
mov
xchg
inc
fwait
lods
dec
xchg
jae
fucom
arpl
loopne
mov
xchg
fcoml
dec
jne
pop
cmp
mov
int
aad
mov
xchg
add
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
dec
xchg
add
jns
cmp
or
mov
xor
push
in
int
dec
repnz
in
inc
cmc
mov
ljmp
insb
jmp
push
hlt
add
rorb
inc
popf
scas
inc
xchg
addb
push
xchg
out
rol
sbb
sub
dec
cmp
jbe
stos
inc
add
das
mov
mov
into
mov
xchg
test
mov
fwait
mov
loopne
cmp
pop
mov
add
sbb
sbb
mov
mov
lahf
mov
repz
pusha
push
jb
mov
inc
add
xchg
sbb
roll
sahf
pop
mov
rolb
pushf
es
dec
les
push
xor
cmp
fldcw
adc
sbb
xchg
jmp
addl
jl
jg
xchg
lcall
mov
mov
push
cmc
loopne
addr16
mov
repz
ret
scas
jmp
outsl
mov
pushf
dec
xchg
enter
aaa
dec
aaa
dec
push
ret
xor
jl
in
bound
aad
inc
mov
das
gs
iret
lret
pushf
popa
ja
fsts
mov
leave
mov
out
std
mov
mov
lahf
jno
mov
pop
lods
jb
es
dec
cmp
movsb
xor
xor
cmp
push
mov
mov
aas
mov
test
pop
and
divb
pop
xchg
dec
push
xchg
fdiv
add
mov
lahf
subl
mov
sub
xor
scas
cmc
fimuls
push
push
add
shll
test
cld
outsb
cmp
jns
pop
ret
dec
mul
cmpsl
xor
add
je
sub
pop
dec
aaa
in
movsb
rorb
mov
pop
aaa
push
aam
push
gs
icebp
adc
cmpsb
adc
add
jbe
imul
push
inc
repnz
ljmp
or
mov
mov
imulb
shlb
mov
clc
mov
xor
push
scas
in
lods
cmp
pop
push
pop
fisubrs
mov
jnp
ja
aaa
insl
dec
dec
mov
push
jne
dec
dec
pop
sbb
xchg
mov
jns
fimull
xor
sub
cmp
outsb
inc
mov
movsl
pop
push
inc
mov
dec
mov
and
sub
and
das
pop
xchg
aad
adc
cmp
mov
mov
mull
mov
and
push
test
mov
stc
sub
push
pop
mov
mov
push
add
ret
dec
fs
jg
jecxz
xor
stos
mov
pusha
out
cltd
dec
in
shll
pop
fcomps
lods
mov
repnz
add
cmpsb
aas
adc
and
push
out
pop
pop
popf
dec
push
mov
js
rcr
cld
jle
cli
jle
push
mov
les
xor
cmp
pushf
sub
xchg
xchg
push
mov
cmc
mov
mov
jmp
sub
cld
sub
test
sahf
mov
movsb
roll
adc
fimuls
call
adc
and
in
sahf
mov
scas
ljmp
pop
pop
and
fildll
xchg
mov
mov
mov
rcrl
jle
mov
add
mov
mov
push
sub
push
aas
xchg
and
lret
jle
mov
inc
fistps
ljmp
and
mov
bound
hlt
cli
dec
adc
cltd
sahf
test
test
rol
xchg
lcall
aam
xchg
outsl
jns
inc
mov
icebp
fiaddl
adc
fxtract
sar
addb
mov
jnp
std
int
mov
jb
pop
inc
dec
or
xchg
mov
pop
mov
data16
or
fidivl
mov
sub
stos
jl
push
dec
cmpsb
xchg
insb
mov
xlat
mov
pop
dec
rol
scas
das
outsb
mov
scas
sub
pop
mov
fisttpll
test
mov
cwtl
or
push
jo
insb
ds
std
fwait
inc
testl
les
push
cwtl
les
pop
mov
addr16
subb
leave
je
dec
dec
test
fmul
int
lods
adc
idivl
sbb
sar
mov
inc
pop
cmp
cmp
mov
mov
xchg
sub
iret
daa
insb
add
pusha
push
ud2
fnsave
fadds
test
cmp
mov
dec
mov
out
rcrb
push
mov
es
dec
lcall
and
sti
sub
dec
mov
dec
and
dec
mov
fsubs
pop
mov
sbb
fsubr
cmp
mov
pop
and
loopne
cltd
stos
xchg
jae
sub
in
xchg
xchg
or
or
xor
cmp
test
enter
mov
pop
in
mov
jge
pop
mov
push
and
xchg
ficomps
cmp
xchg
loopne
xor
aad
jl
test
jmp
dec
es
inc
fimuls
pop
test
cli
xchg
push
dec
dec
psubusb
push
push
dec
popa
push
movsb
arpl
xchg
and
add
mov
jbe
xor
and
insl
lret
xchg
daa
lea
dec
leave
or
imul
lcall
shr
inc
shl
pop
mov
sub
lcall
adc
sbb
in
pop
lock
outsl
xchg
adc
sub
lret
stos
pop
xlat
notl
xchg
xor
dec
fidivs
pop
inc
cmp
sub
subb
ss
insl
into
xchg
in
and
sahf
enter
test
jg
mov
inc
xchg
sbb
in
jle
xor
jge
rorb
lods
sbb
lret
hlt
push
loopne
aam
mov
and
push
dec
or
mov
mov
ja
enter
in
test
hlt
cmp
test
shr
mov
and
dec
fst
or
xchg
dec
leave
jno
cmp
imul
jmp
mov
mov
dec
sbb
cmp
dec
aaa
jbe
push
insb
sbb
push
pop
cmc
jg
shll
inc
imull
add
popf
outsb
xchg
daa
jl
mov
jle
inc
addr16
movsl
das
xlat
pop
sti
mov
add
xor
cld
ljmp
data16
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
stos
mov
add
aam
loopne
repnz
cmp
clc
jg
stos
cmp
into
in
xchg
pop
mov
dec
mov
in
lret
mov
push
rcrb
xchg
inc
jb
push
dec
mov
iret
push
mov
scas
ds
rclb
lret
or
and
xchg
inc
push
adc
add
aaa
jge
cmp
add
stos
lds
push
xchg
jle
mov
inc
inc
sarl
mov
cltd
and
dec
mov
hlt
mov
into
mov
test
add
cli
mov
xchg
fwait
add
mov
loop
mov
fsubrl
stos
mov
aaa
adc
dec
dec
xorl
push
mov
je
lods
nop
ja
icebp
lock
loope
out
cmp
mov
jno
mov
xchg
mov
push
and
mov
aas
xchg
movsl
jge
or
stos
sarb
subb
shl
xor
fwait
lea
cmpsl
lods
shl
add
dec
std
cmp
xchg
jns
dec
push
ja
cmp
mov
sub
daa
jne
xchg
insl
ja
mov
ss
sbb
rol
mov
add
rcrb
and
imul
les
jno
inc
shrl
xchg
divl
xchg
sti
ds
lcall
inc
leave
push
xor
mov
test
je
adc
push
mov
test
cs
jge
push
adc
push
or
and
push
lods
test
xorl
enter
mov
std
lock
aaa
aaa
out
xchg
or
cmp
push
subb
rorl
add
inc
test
sub
jle
lahf
sbb
jno
push
pop
out
jb
adc
adc
add
lcall
sahf
lea
mov
aad
std
inc
aam
scas
jne
add
test
pop
mov
cmp
xchg
add
xor
aad
xchg
xchg
add
mov
inc
shl
jnp
adc
add
push
mov
out
lock
pop
lret
and
daa
xchg
sbb
lds
and
leave
call
fwait
sub
jp
bound
inc
jb
mov
mov
sbb
mov
mov
in
add
xchg
add
nop
dec
sub
xchg
mov
popa
or
fyl2xp1
daa
pop
aam
das
lahf
jae
test
adc
rorl
xor
addr16
in
ljmp
popf
adc
mov
or
in
stos
cmpsl
and
adc
jge
subl
lret
or
lea
pop
dec
dec
in
ds
fs
mov
inc
gs
andl
fwait
mov
mov
and
movsl
jae
mov
fwait
shrl
sti
stos
dec
nop
repz
shr
mov
xchg
sbbl
mov
or
jmp
adc
dec
push
and
stos
insl
xchg
xchg
push
fcoml
inc
cs
mov
adc
sbb
or
test
or
fidivrl
popa
xor
lock
cmpl
mov
sub
outsb
repnz
mov
cmp
popa
fiadds
push
mov
shl
jg
xchg
dec
push
adc
mov
fsubrp
adc
les
add
mov
es
cld
std
sbb
jmp
xor
outsl
mov
mov
xchg
sub
push
sbb
jmp
std
jb
xlat
repnz
insw
int3
cltd
rorb
push
xchg
loopne
or
mov
or
xchg
jb
lock
ljmp
out
cmp
pop
cmpl
repz
push
aaa
adc
pop
imul
shr
aas
test
push
jmp
dec
sarb
rorl
popa
dec
xor
xor
sahf
pop
lds
fwait
xor
std
pop
stos
xchg
pushf
scas
add
sub
lods
dec
or
xor
mov
out
hlt
adc
mov
and
insb
push
or
jecxz
jge
inc
divb
or
push
ss
mov
and
pop
and
pop
rdtsc
inc
fdivl
stos
stc
mov
xor
testb
in
das
adc
ficoms
repz
bsr
outsl
mov
dec
mov
popf
fbstp
push
sbb
push
adc
lahf
sti
jg
jbe
push
idivb
pop
gs
in
mov
adc
pop
in
cmp
mov
divl
xor
ja
mov
shll
xorl
aas
mov
dec
stos
loopne
sbb
stc
add
lds
push
pop
fisubrl
in
mov
push
cld
push
stos
into
inc
mov
mov
pushf
sbb
mov
xchg
cli
orl
mov
enter
pop
cmp
fadds
lock
setne
cli
mov
lds
rclb
add
mov
xchg
cmpsl
add
out
mov
mov
jmp
adc
sub
xchg
insb
mov
cmp
or
fstpt
mov
dec
xor
stos
sti
test
dec
test
sbb
pop
jl
mov
or
adc
cmp
imul
fmuls
lret
loope
es
push
or
or
inc
adcb
sbb
jns
jb
inc
mov
shll
aaa
leave
pmaddwd
je
les
xchg
out
ret
negl
mov
imul
fs
xchg
inc
pop
loope
rcll
xchg
cmp
loop
pop
mov
lcall
or
sti
pop
leave
xor
mov
mov
nop
cwtl
xor
out
cltd
mov
sbb
jge
dec
mov
or
in
outsb
push
into
mov
out
inc
test
inc
push
popa
dec
icebp
js
mov
add
jl
les
sub
cmp
jae
test
cmp
lcall
mull
pop
addr16
inc
aam
xchg
fs
push
pop
rorb
les
in
sbb
or
mov
dec
nop
repz
sbb
bnd
jge
addr16
rcll
or
lods
test
aad
cld
notl
aad
inc
cmp
lea
mov
cmpl
sti
sbb
enter
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
in
mov
add
mov
repnz
adcb
adc
add
mov
inc
dec
cwtl
dec
adcb
scas
lahf
shlb
loop
mov
xchg
scas
hlt
mov
imul
int3
js
sbb
inc
xchg
outsb
in
pop
lret
jmp
movsl
pushf
pop
ss
popl
rcrb
dec
imul
pop
inc
aad
inc
gs
jg
add
xchg
mov
outsl
gs
hlt
cli
pop
jmp
sti
cmpsl
dec
outsb
sbb
fildl
push
movsl
in
test
xchg
out
lcall
pop
jo
das
aad
mov
mov
movsb
push
mov
pushf
mov
pushf
rcrl
jle
in
les
aas
adc
int3
xchg
sarl
rorl
dec
inc
scas
mov
sahf
cmp
cmpsb
fcoml
push
test
js
icebp
pop
movsl
or
jne
testl
hlt
push
push
cs
jg
jge
or
test
jl
loope
jg
push
aas
fdivrs
mov
shrl
addl
sub
sub
movsb
mov
in
mov
pop
lods
pop
daa
enter
mov
pop
lea
cmp
aad
mov
mov
cmp
lds
repnz
inc
cmpsl
pop
xor
xor
dec
pop
sbbb
jp
inc
inc
jne
xchg
das
mov
je
cmp
push
in
pop
mov
shlb
dec
shl
popa
cmp
into
inc
fdivrs
cmp
inc
es
adc
lods
sbb
jb
inc
push
mov
adc
sub
ret
adc
out
sub
negl
cltd
sub
jnp
adc
mov
lcall
xchg
and
add
clc
loope
push
adcl
pop
push
subl
jge
pop
sbb
dec
idivb
scas
or
adc
cmp
popf
insl
mov
jb
mov
push
xor
mov
add
shlb
ja
mov
icebp
loop
push
out
mov
repnz
pop
inc
inc
xor
jg
cwtl
push
arpl
xchg
mov
mov
jp
mov
jg
gs
dec
jo
bound
xor
fs
mov
out
cld
rorl
xchg
icebp
nop
js
cmp
rcrl
adc
pop
clc
mov
add
xor
mov
ljmp
xchg
loopne
mov
adc
test
ret
xlat
aaa
add
popf
dec
scas
fbstp
dec
es
dec
xor
mov
push
scas
ljmp
sbb
jbe
inc
jno
fistpll
inc
xchg
fildl
lcall
push
mov
insb
mov
aaa
or
adc
cli
popf
jg
subl
inc
pop
mov
pop
and
inc
loopne
popa
mov
pusha
ljmp
sub
repnz
bound
xor
push
adc
dec
pop
mov
test
cmp
dec
inc
mov
pop
xchg
or
jno
sar
jno
xor
pop
push
push
cmpsb
pop
cmp
or
push
mov
in
pop
xor
in
ss
in
ss
mov
mov
adc
jp
test
cs
stos
fwait
inc
push
sub
loope
jns
repz
mov
and
gs
les
cmp
mov
clc
pop
cs
add
push
inc
enter
and
cwtl
int
sti
cwtl
mov
aad
mov
daa
lahf
sbb
lock
je
es
push
ds
cmp
push
cmpsb
testl
shlb
jnp
add
jns
jg
fidivs
sahf
and
adc
mov
call
idivl
fistpl
stos
cmp
scas
push
inc
lds
xor
dec
cmp
xor
jne
in
pusha
mov
int3
mov
cmc
mov
cmp
int3
push
add
cmp
fwait
lret
icebp
cmp
xor
popa
and
or
mov
jns
mov
sbbb
push
out
mov
pop
ror
lcall
das
loope
xlat
out
xchg
and
jmp
add
sahf
sbbb
mov
out
lahf
mov
cmp
adc
push
adc
inc
cmp
xor
daa
out
lods
xchg
sarb
lock
adc
test
pusha
mov
cmpsl
leave
mov
xor
adc
mov
sbbb
sti
lret
ljmp
push
or
loope
addl
xchg
mov
xchg
stos
enter
jnp
or
cmpsb
cld
pop
sbb
and
orl
int3
cli
push
xchg
add
mov
pop
ficomps
scas
mov
xor
gs
mull
lods
mov
mov
mov
mov
cmp
test
xor
xor
mov
data16
add
mov
mov
and
sbb
push
fs
sbb
xchg
fwait
cld
ja
rcrl
mov
inc
jno
ret
shll
mov
and
imul
jecxz
add
leave
cld
into
mov
sub
jns
jo
imul
popf
add
out
mov
les
pop
ds
mov
outsl
push
fnop
push
movsb
sarb
pop
push
mov
push
push
jl
int3
fsubl
ret
mov
cld
inc
xor
cmpsl
sub
jo
sbb
mov
fbstp
push
popf
cmp
adc
adcl
and
adc
xchg
in
mov
jbe
mov
pop
mov
fisubl
dec
jne
stos
arpl
pop
je
in
jp
mov
and
test
outsb
mov
sti
leave
std
and
cmp
push
loopne
jb
into
sub
adc
mov
repz
pop
sub
and
test
sbb
pop
out
cld
pop
cmp
scas
lock
call
mov
rcl
sbbb
xchg
add
scas
xchg
xor
out
push
xchg
cmpb
icebp
jbe
ljmp
lea
decb
imul
and
push
fnstcw
or
push
mov
aam
dec
shll
fmull
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
pop
shll
pushf
xchg
bound
popf
jo
mov
jl
mov
mov
inc
jl
xchg
negl
xchg
rolb
fimull
mov
sub
outsl
or
xchg
divl
and
adc
cmpsb
push
loop
stc
adc
mov
push
adc
loope
push
push
dec
inc
es
je
bound
lahf
sbb
loop
push
mov
cmc
push
mov
dec
loop
aam
mov
jns
insl
mov
dec
lret
mov
adc
push
mov
pop
outsb
xchg
and
das
shll
adc
cwtl
outsl
sub
jl
ficoml
add
test
and
pop
sahf
add
jb
mov
mov
mov
cmp
push
lcall
aaa
and
sbb
push
jnp
loop
sbb
sub
sahf
inc
cli
loope
jbe
xor
imul
lret
mov
push
xor
or
les
inc
addr16
mov
insl
movsb
cmp
and
pop
fwait
or
and
pop
xor
sub
pop
fldl
cmp
es
inc
int
sub
push
mov
mov
int
fisttps
push
adc
inc
inc
mov
sub
or
lret
pop
fstl
adc
mov
mov
fcmovnbe
jp
jle
mov
fistpll
mov
repnz
lahf
cs
movsb
push
or
loopne
jbe
jge
pop
pop
xor
js
das
adc
ficomps
adc
cli
cmp
out
incl
or
xor
xchg
inc
inc
push
das
xchg
mov
xlat
xor
push
inc
cwtl
or
add
sub
outsl
push
add
ljmp
loopne
dec
ja
fidivs
mov
mov
sub
std
popf
cmp
aam
pop
mov
aaa
jmp
xchg
sub
jnp
pop
insb
xchg
sarb
add
int3
jnp
fdivrl
scas
push
into
push
or
add
jnp
add
mov
test
shrb
sub
xchg
addr16
xor
mov
loopne
fists
cs
idivl
and
jle
sbb
dec
ja
mov
push
or
in
gs
mov
je
outsb
ja
adc
das
test
lret
repz
popf
cmp
xchg
push
loope
dec
add
jmp
xchg
jp
call
cmp
mov
push
adc
aam
scas
out
push
pop
xor
cmpsl
notl
aam
xor
lret
push
pop
inc
pop
cmp
scas
repz
xor
out
push
in
or
adc
aas
andl
adc
in
adc
inc
xor
ds
push
ret
aaa
mov
sub
mov
jecxz
out
shr
jecxz
mov
inc
addr16
inc
inc
testb
push
sarb
pusha
lcall
pop
mov
stc
clc
dec
jg
add
pop
mov
pop
lea
push
ficomps
orb
add
cmc
out
dec
stos
cmp
icebp
shr
xchg
mov
jbe
jns
inc
out
inc
cmpsb
mov
mov
sahf
sbb
sub
pop
mulb
int3
add
cs
jno
sub
push
arpl
mov
dec
xchg
clc
add
xor
jb
xor
aam
and
adc
inc
bound
xor
imul
mov
cld
pop
movsb
mov
mov
xchg
in
insl
push
push
ds
stos
cmp
ret
rolb
out
pop
jbe
xor
jns
jnp
sahf
sbb
aas
push
sarb
xor
cld
popa
cmp
mov
pop
dec
xor
cltd
cmp
jge
xor
in
loop
cwtl
jle
scas
fiaddl
fists
mov
insb
icebp
jl
add
mov
bound
jns
mov
sbb
sbb
movsl
mov
stc
into
lock
mov
pop
dec
out
mov
out
or
add
leave
sbb
dec
xchg
inc
stos
lret
hlt
vfnmsub213pd
movsl
bound
push
lret
jl
add
in
repnz
mov
shlb
sbbb
arpl
mov
subl
inc
jg
xlat
add
ljmp
mov
into
xchg
mov
int
add
mov
jo
jle
nop
sub
dec
dec
mov
sbb
movsb
mov
push
lcall
fistpll
sbb
sahf
call
clc
arpl
jbe
ret
repz
jo
add
enter
mov
fstps
xchg
ja
mov
lahf
and
in
mov
lods
repnz
mov
negb
and
out
gs
xor
sub
push
cmc
std
xchg
fsubrs
andl
jnp
std
fldl
out
and
out
inc
int
fdivl
jecxz
fldt
movsl
xchg
cltd
add
mov
in
jl
sub
mov
sbb
pop
lods
stc
jge
and
jg
xchg
mov
pop
jbe
xchg
adc
mov
dec
outsl
xor
in
in
push
or
mov
sbb
sti
or
mov
dec
add
out
mov
sarb
jp
sti
jl
and
and
and
fs
rcl
and
enter
inc
push
pop
daa
arpl
roll
mov
push
jae
psllw
outsb
je
pop
sub
arpl
mov
test
cld
wbinvd
push
push
in
sbb
into
pop
out
fmull
push
push
les
dec
data16
jg
test
cltd
xchg
out
sahf
adc
cmp
adc
adcl
aam
xchg
stc
inc
lods
int3
inc
insl
sub
arpl
shl
hlt
push
in
lock
pop
jnp
outsb
stc
add
mov
sub
out
lahf
roll
lahf
es
es
lods
jno
test
pop
sbb
rorb
jns
mov
aad
add
and
jp
mov
dec
aad
xor
mov
call
jmp
iret
inc
xchg
xchg
jp
popf
mov
fwait
or
arpl
pop
cmp
push
mov
sub
lahf
jmp
jo
mov
inc
xchg
imul
js
lahf
shrb
and
fcomip
ss
push
cwtl
sti
scas
lret
jns
popf
add
or
ret
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
jmp
add
dec
mov
adc
mov
adc
jne
mov
jge
push
and
call
pop
int3
cmpsb
or
mov
xlat
divb
push
jo
xor
scas
inc
insl
ret
adc
cli
cld
xchg
das
xchg
cltd
inc
scas
mov
or
jo
mov
stos
jo
adc
and
push
mov
or
test
sub
andb
mov
sahf
int
dec
sbb
pop
sub
cld
pop
adc
rclb
xor
ret
loope
xlat
fiadds
and
stos
or
sub
adc
jl,pt
cmp
cmp
movsl
into
popa
cmpsb
iret
scas
fdiv
cmp
mov
sti
mov
cmp
lcall
inc
rorb
test
enter
mov
adc
adcb
leave
mov
test
fists
cmp
aam
out
das
loope
ret
std
arpl
es
int
xchg
or
inc
xchg
fiaddl
dec
iret
insb
or
fisubrs
or
inc
in
dec
xchg
mov
inc
cli
insb
pop
dec
jmp
dec
shrb
retw
ret
scas
sub
inc
push
cli
dec
ud0
mov
push
jle
inc
jmp
push
push
push
je
inc
int
dec
push
sarb
dec
xor
popa
sarl
jle
subl
sbb
push
dec
sti
scas
jmp
push
lret
adc
sub
test
ss
shl
fcmovb
lock
mov
add
push
in
shl
int
cli
mov
or
loop
lods
xchg
inc
test
mov
je
mov
cli
lds
mov
scas
mov
pop
xchg
loop
and
fidivrs
cli
pop
xchg
mov
cs
jp
test
mov
sbb
enter
fimull
punpckhdq
xchg
dec
sahf
jno
and
int
mov
ljmp
mov
mov
je
inc
pop
arpl
stc
mov
inc
sub
in
repnz
lods
cs
test
lds
fisubs
jecxz
mov
je
mov
xor
add
cmpsb
rorl
aad
popa
sub
repnz
pop
cmpsl
adc
mulb
scas
inc
or
xchg
mov
test
pop
dec
add
dec
or
mov
dec
loopne
xlat
aas
pushf
aaa
xchg
push
fdivrs
lds
xchg
jle
jno
inc
sub
adc
scas
fdivl
mov
test
inc
mul
sbb
repnz
dec
icebp
sub
lahf
jne
mov
xlat
in
inc
push
mov
popf
pop
imulb
imul
ljmp
insb
or
scas
jl
pop
jnp
add
mov
cmp
xchg
adc
cmp
push
dec
lock
jnp
int3
sub
mov
iret
scas
jnp
pop
push
out
repz
sarb
pop
xchg
xchg
je
bound
gs
ss
mov
pop
sarl
push
mov
fstps
outsl
imul
loop
sahf
xor
aam
xor
pop
in
dec
mov
mov
or
aas
aas
cmpsl
sub
and
pop
push
or
push
mov
sub
jns
jbe
xor
aas
jo
int
pop
das
xor
je
pop
push
clc
mov
push
inc
insl
mov
xor
popf
cmp
roll
addr16
leave
add
dec
jge
push
es
push
xlat
outsb
inc
imul
in
hlt
mov
daa
aam
popa
xor
jg
mov
rorl
ja
sbb
push
iret
das
and
mov
into
arpl
jno
jb
or
fimull
pop
mov
xor
call
mov
mov
xor
mov
jge
outsl
mov
mov
push
jne
fwait
xchg
insl
leave
adc
stos
xlat
sub
lea
mov
xor
test
scas
wbinvd
sub
into
sub
jmp
push
lods
sub
icebp
dec
mov
in
cmp
in
mov
jle
pop
lret
fsubs
push
sbb
int3
or
das
and
xlat
insl
sbb
test
mov
jmp
xor
or
cmpsl
add
arpl
lea
subb
xor
push
call
arpl
sti
stc
mov
sbb
fldpi
enter
xchg
cmpsb
fwait
sbb
mov
sbb
push
pop
or
cmp
sar
call
mov
xor
push
nop
ljmp
cwtl
jno
mov
mov
jnp
repnz
in
push
add
jle
jnp
mov
dec
mov
cmpsl
lret
push
sub
inc
loope
movsl
nop
rolb
xorb
js
pop
rorb
les
push
xchg
rcll
xchg
pop
xchg
pop
lds
mov
aaa
mov
mov
inc
fistpl
jmp
sbb
pop
cmpsb
and
imul
mov
push
or
dec
loopne
or
jb
ss
sbb
jne
and
fbld
xchg
mov
in
jnp
xlat
dec
imul
fidivrl
push
sub
in
ror
push
xchg
testb
mov
xchg
imul
and
into
mov
fstl
push
and
cwtl
mov
mov
cmp
stos
sbb
lods
and
into
jge
repnz
xor
ss
dec
or
movsb
sti
xor
shl
idiv
and
cli
fbld
aaa
in
arpl
sbb
aad
ss
shll
jbe
inc
nop
add
in
ret
rcrl
scas
enter
pop
or
mov
mov
ja
ror
add
lea
fcmovb
sbb
mov
pop
mov
fistl
inc
pop
pusha
daa
pop
sbb
icebp
cmp
mov
xor
rorl
jnp
out
stos
adc
das
sub
push
push
cwtl
mov
out
imulb
fs
cmp
or
pop
adc
mov
or
pop
ret
adc
outsl
in
mov
loopne
sub
in
daa
mov
lret
test
das
push
xor
test
adc
jne
ja
rcl
xor
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
dec
inc
or
add
push
std
loope
inc
sub
jbe
sbb
jg
lea
insl
add
lods
ret
ds
push
and
or
test
add
hlt
jnp
push
stc
xchg
rorb
pop
sub
dec
flds
movsl
pop
outsl
or
in
jmp
and
and
mov
ja
mov
cmp
arpl
sbb
outsb
mov
leave
mov
xlat
mov
jbe
sbb
xor
xor
mov
xor
inc
mov
inc
push
cmp
cmpsb
faddp
push
out
mov
add
lods
mov
adc
mov
add
sbb
movsl
pop
ljmp
lock
cmp
dec
jecxz
cltd
jae
lods
xchg
out
imul
mov
shrl
imul
scas
orl
add
and
dec
dec
movsl
mov
repz
pop
xchg
inc
iret
test
shll
cmp
xchg
stos
sub
inc
roll
cmpb
pop
ja
cmp
mov
cmp
xor
outsl
popa
les
out
xchg
pushw
xor
push
mov
call
loopne
arpl
and
sub
insb
pop
cmpsb
je
lcall
inc
cmpsb
cmp
popf
sbb
jo
push
add
cmp
or
xor
out
outsb
fucomi
jns
dec
sbb
inc
scas
jbe
loop
pop
test
cmp
out
inc
mov
or
or
data16
xor
fsubl
int3
sub
divb
cmp
mov
push
jecxz
pop
enter
fldcw
loopne
fistl
aas
mov
dec
or
cltd
sbb
dec
mov
lcall
push
inc
jae
xor
orb
jle
rclb
push
pop
cld
mov
cmp
xor
inc
dec
dec
lahf
push
je
sbb
dec
pop
push
xor
inc
mov
add
sbb
jle
jb
mov
in
dec
cld
mov
ret
push
loopne
mov
lea
dec
loope
test
scas
aaa
xchg
or
dec
notb
in
xor
stos
stos
pop
cwtl
push
dec
fs
fstpl
inc
adc
jnp
inc
mov
dec
mov
mov
sahf
add
sbb
arpl
cwtl
mov
fstpt
out
or
and
in
shll
push
addr16
mov
aas
cld
push
inc
cmpsb
stos
xchg
scas
xor
xor
or
push
pop
ss
adc
aaa
mov
or
add
dec
lock
int3
mov
ss
xchg
leave
sbb
fwait
andl
mov
or
fdivp
test
scas
iret
pop
sbb
stc
jbe
push
mov
mov
jnp
xor
repnz
filds
push
flds
dec
cmp
retw
or
test
enter
fcompl
testl
mov
mov
sub
mov
das
jno
ficompl
xchg
das
xchg
cmpsb
jbe
arpl
ss
xchg
cmp
dec
sarb
dec
xchg
add
repnz
in
mov
orl
ljmp
and
push
insl
xchg
fimull
add
test
test
popl
test
lock
cbtw
aad
sub
adc
sbb
loopne
int
and
mov
das
sub
and
popa
lahf
emms
inc
js
lea
dec
inc
je
sub
sub
lcall
ror
out
sbb
xor
das
jno
mov
xor
mov
and
inc
fidivl
loope
xor
fxtract
fsubs
ret
xor
inc
pop
xchg
ja
enter
jge
scas
iret
mov
int3
repz
aam
in
das
testb
pop
shr
repnz
icebp
pop
jp
cmpsb
push
mov
lcall
lahf
pop
and
cmpsl
adc
xchg
int3
dec
repz
lret
sbb
daa
xor
mov
mov
mov
sbb
mov
bound
xchg
cmp
sarb
test
dec
pushf
shll
cltd
and
sbb
or
out
mov
xlat
inc
xchg
mov
mov
jmp
or
lea
inc
int3
faddl
or
loop
pop
inc
jae
inc
mov
into
add
mov
in
add
fisttpll
sbb
and
xchg
lahf
push
jbe
fildll
ret
js
pushf
jmp
cmp
popl
mov
jno
xchg
out
mov
and
sub
idivb
pop
cld
lock
popa
test
lods
clc
fisttpll
push
inc
scas
fidivl
jmp
cmpsl
lcall
in
sbbl
add
xor
dec
test
ret
and
sbb
cmc
jmp
pop
add
out
ss
dec
sbb
and
pushf
jno
lods
sub
and
cmp
je
pop
xor
lock
or
test
sahf
mov
mov
xchg
icebp
xor
adc
sbb
xchg
pop
add
scas
popa
das
jne
mov
and
and
popa
dec
aaa
mov
mov
xlat
xor
outsb
push
lret
test
jecxz
jl
adc
jmp
pop
std
fwait
mov
mov
js
mov
shrl
push
pop
mov
test
iret
cmpsl
roll
imul
and
pop
jp
inc
ret
es
or
add
sarb
ror
popa
push
fwait
pushf
pop
testl
cmp
loopne
stc
push
sub
xchg
call
mov
mov
sub
lock
cli
lcall
push
sub
and
out
add
sub
rcrb
mov
std
push
inc
jge
xchg
jno
scas
xor
xor
and
cmp
sub
mov
ss
inc
movsl
outsl
add
xor
jecxz
enter
jb
movsb
pop
in
or
push
adc
loop
jo
mov
popf
add
sub
jg
in
jns
mov
inc
mov
gs
fisubrs
jns
aaa
push
ss
popf
cmp
cmp
lods
sbb
push
dec
add
icebp
push
push
pop
jmp
sahf
sbb
pop
fsubp
jno
adc
scas
cmpsb
lods
es
inc
sub
push
nop
mov
lahf
adc
or
add
adc
ficoml
mov
in
inc
sub
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
stos
js
cli
add
sbb
cmp
dec
movsb
cmp
fldcw
lret
lcall
rcrb
adc
add
push
test
pop
sbb
lret
cs
cli
push
jg
cmp
mov
clc
adc
mov
pusha
adcl
rcl
fnstcw
jae
icebp
out
arpl
js
or
arpl
jno
pushl
cmp
sub
cmp
mov
jbe
push
sbb
aaa
jnp
or
sahf
cld
cmp
mov
test
shrl
sub
scas
sub
fbstp
into
or
out
push
push
loop
jecxz
sub
pop
cmpxchg
xchg
mov
jg
mov
push
cmp
sbb
out
mov
xchg
mov
mov
jo
sbb
xchg
int3
push
std
push
xchg
cmp
ja
sub
es
shrb
pop
lret
fld
rcrb
sarb
notl
fsubrs
es
das
cmp
mov
jae
xor
push
jb
add
jle
pop
bnd
data16
push
imul
imul
scas
pop
pop
dec
imul
jne
xlat
popf
rcr
push
aam
mov
sub
or
out
jb
xchg
push
fwait
test
sbb
test
pop
subb
nop
loop
sahf
inc
fwait
xor
icebp
sub
cmp
dec
arpl
les
push
mov
aad
mov
inc
sbb
ljmp
mov
sub
fstps
imul
xor
test
or
xchg
xlat
pop
jp
fnstcw
push
bound
in
orb
xchg
or
jge
int
test
push
nop
cli
adc
dec
jl
movsb
std
mov
inc
lods
mov
shll
add
fcoms
mov
pop
inc
push
es
lea
inc
in
xchg
adc
or
rol
in
or
sti
data16
mull
add
jge
loopne
adc
add
data16
and
mov
or
inc
cli
cmpsb
shl
stos
ret
cli
cmp
out
mov
sbb
mov
scas
movsb
ljmp
insb
ja
mov
mov
ljmp
cmp
mov
imul
xor
pop
out
adc
cltd
inc
mov
lcall
sub
jp
sub
jb
sbb
call
jne
xchg
fbld
inc
mov
mov
lret
xchg
outsb
add
lret
repz
movsl
xchg
jmp
enter
into
ffree
push
stc
inc
push
movsl
mov
add
aaa
pusha
jge
and
sar
jb
cld
leave
fwait
add
mov
dec
jnp
pop
jb
adc
jb
inc
push
scas
scas
xor
repz
cmpsb
add
push
add
dec
test
in
pop
ror
dec
add
or
sahf
addr16
cmp
jb
idivb
mov
jge
mov
daa
pop
lahf
stos
scas
mov
or
pop
ret
loope
icebp
jnp,pn
add
shl
adc
daa
out
adc
cmp
mov
mov
popa
xor
jl
fwait
test
adc
xchg
or
or
orb
call
jp
sbb
cmpsb
jns
sub
mov
add
fildll
insl
or
loop
dec
out
shll
jle
in
add
adc
jl
add
jge
mull
pop
xchg
pop
inc
outsl
sub
rcr
mull
pop
pushf
popa
push
xchg
aad
mov
mov
pop
mov
les
adc
into
cmp
je
lea
sarl
push
fisubs
sbb
outsb
dec
out
or
cld
xchg
sub
inc
sub
jp
inc
xchg
loope
xchg
gs
shl
pop
adc
push
aam
sbb
inc
sti
push
xlat
or
sti
orb
in
or
jnp
jg
sbb
add
inc
add
xor
jno
xor
pop
cmpb
sbb
out
ret
dec
sti
out
pop
jb
xor
mov
dec
mov
push
loopne
xor
xchg
add
and
gs
mov
add
gs
popa
int
pop
fisttpll
sub
fsubrl
jg
jecxz,pt
ret
xor
jno
jbe
test
mov
je
test
or
nop
lret
and
aad
rorl
mov
lock
xchg
nop
stc
mov
call
nop
pushf
mov
or
mov
jmp
sbb
cmpsl
loope
shlb
sbbl
test
and
ret
lods
movsb
popf
gs
mov
pop
popa
sbb
addr16
loop
arpl
inc
mov
mov
inc
daa
repnz
es
pop
sarb
or
cld
mov
add
dec
adc
pop
movsb
jne
ret
out
dec
jnp
jp
pusha
mov
je
fnsave
enter
les
jnp
jno
sub
jge
cmpsb
cmc
pop
in
push
or
popa
jbe
movsb
mov
mov
jbe
inc
inc
xchg
mov
out
or
out
adc
dec
icebp
xchg
push
jo
sub
mov
inc
rcll
fdivrl
arpl
dec
jne
stos
dec
imul
xchg
cs
xor
shll
mov
insl
pop
fistps
sub
cmpsl
jl
sbb
js
mov
scas
push
les
dec
jg
pop
add
insb
ret
movsl
fistps
cmp
xchg
icebp
filds
push
sti
movsb
inc
fnsave
inc
jns
add
negb
jnp
jecxz
mov
and
ds
mov
js
rorl
fldenv
mov
imul
mov
mov
mov
push
test
xor
cmp
mov
loope
xchg
sub
nop
pop
mov
pause
arpl
xchg
pop
cmpsl
sti
imul
pop
ret
add
insl
mov
fdivrl
add
repnz
sti
sbb
adcl
dec
cmpsb
int
in
mov
pop
adc
aad
dec
cmp
call
outsb
clc
xchg
xor
push
dec
mov
inc
dec
andl
mov
pop
jnp
es
or
sti
sbb
add
call
aas
dec
sbb
sbb
imul
icebp
jmp
lcall
out
fsubrp
das
xchg
adc
mov
js
repnz
imulb
add
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
jg
mov
add
adc
mov
jne
test
mov
cmp
popl
xor
push
sub
into
insl
cmp
in
pop
push
cmp
ja
movsl
loop
lret
mov
pop
outsl
dec
ja
in
mov
mov
cmp
scas
jge
jp
lret
sub
mov
and
outsb
push
into
out
lea
sbb
out
inc
jns
jge
loope
into
mov
outsb
loopne
in
cwtl
and
popa
lahf
sbb
js
aad
popf
shl
fdivs
sub
cli
mov
sbb
pop
dec
rorl
aam
aas
cmp
insl
mov
xchg
fs
in
pop
jmp
cmp
cmpsl
lcall
push
or
xchg
shlb
and
addr16
sbb
xchg
mov
jmp
sbb
movsb
in
call
mov
cmp
add
pop
add
sub
xchg
loope
sub
test
mov
xchg
nop
movsb
xorl
arpl
enter
imull
in
and
pop
pop
arpl
pop
cmp
xchg
mov
movsb
fs
pop
icebp
les
pop
mov
jb
cmpsl
mov
jge
and
sarl
push
push
ss
push
and
jecxz
xchg
and
xchg
mull
bsf
enter
mov
repz
in
xchg
out
jae
inc
pop
insb
mov
je
or
out
xchg
lahf
dec
out
das
insl
loopne
lods
jae
repz
mov
push
in
repnz
dec
imul
decl
pop
into
cmp
push
mov
jne
jmp
mov
dec
into
inc
pop
pushf
cli
or
into
fwait
sbb
lahf
add
xchg
and
arpl
lock
ds
jns
dec
ds
xchg
rorb
jnp
mov
sbb
insl
jne
jns
lret
and
fidivl
hlt
les
sub
xchg
repnz
dec
xor
clc
sbb
inc
es
ret
mov
jl
ror
ret
adcb
aam
adc
xlat
jns
mov
movsb
mov
mov
int3
inc
in
scas
jae
outsb
addr16
jne
rorl
sbb
inc
xor
push
mov
xchg
subl
xchg
and
or
imul
int3
sbb
push
jl
std
loop
mov
cli
and
or
int
inc
into
out
outsl
jb
lods
cmpsl
scas
fisubrl
fs
cld
repnz
mov
cli
fwait
mov
mov
xchg
repnz
jmp
pushf
xchg
inc
popf
dec
pop
pop
add
sti
loopne
push
or
ss
push
lea
xchg
inc
jp
xchg
test
lret
and
popa
sbb
insl
aaa
mov
popf
mov
push
mov
jne
pop
enter
mov
ror
xor
or
adc
sub
add
rorb
in
repz
loopne
dec
pop
mov
jns
xchg
jnp
lods
insb
pshufw
stos
inc
pop
cmp
add
add
xchg
mov
fcompl
pop
je
push
sub
xchg
mov
out
mov
loopne
shrl
pop
lods
add
jg
scas
fnstcw
push
cs
shlb
mov
lods
xchg
fwait
stos
bsf
dec
fidivl
add
inc
int
lea
sbb
xlat
addr16
icebp
or
sbb
sbb
xor
mov
push
sub
xor
mov
mov
xchg
xchg
sub
sbb
shr
jecxz
pushw
pop
jo
xlat
adc
jl
inc
idivb
enter
inc
int
add
aaa
and
inc
fistpl
inc
int3
addr16
mov
shrl
lea
xor
add
orl
mov
jae
std
gs
ja
mov
bound
popf
ffree
sbb
dec
sub
sub
in
mov
loope
jo
fwait
into
decb
add
out
std
sub
out
and
aas
pop
cmp
xchg
mov
std
negb
test
mov
jbe
sub
jne
or
and
enter
fbstp
adc
lock
rcll
jnp
and
cmp
orl
lds
xchg
mov
xor
js
push
orl
in
mov
outsb
adc
add
int
cld
mov
push
addr16
negb
and
idivb
mov
ja
dec
xchg
push
adc
sub
stc
in
scas
subl
shl
mov
sahf
jo
pop
sbb
push
fdivrs
data16
adc
ljmp
xlat
add
inc
jo
dec
incl
or
xor
idivl
sbb
mov
dec
test
shrl
and
dec
inc
and
adc
sub
shlb
dec
inc
lds
mov
mov
dec
jo
std
push
xor
aaa
xchg
arpl
inc
mov
jecxz
loop
out
push
xor
push
push
test
daa
adc
mov
cmp
pop
lcall
icebp
or
lock
fdivrl
sub
repnz
les
mov
decl
scas
fcoms
xchg
or
jno
mov
dec
notl
xchg
mov
sub
lgs
and
jnp
mov
jns
outsb
inc
and
xchg
push
mov
xchg
lahf
sub
mov
cvtps2pd
sub
jns
adc
mov
ret
xlat
bound
aad
out
mov
xlat
xchg
repnz
inc
fwait
dec
test
icebp
jno
dec
daa
notl
sar
cmpsb
push
xor
les
xchg
mov
or
outsl
sbb
pop
push
nop
inc
cwtl
subb
sbb
mov
xorl
mov
inc
aas
inc
cli
or
adc
push
lods
fs
aas
cmp
xchg
int3
cld
mov
mov
dec
int
sbb
pop
xor
xor
repnz
and
iret
push
insl
repz
add
loop
or
imul
mov
add
lret
cmp
sbb
std
fndisi(8087
ds
sbb
arpl
stc
cmp
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
setnp
stos
push
lcall
cmpsb
test
cli
and
mov
dec
xor
lock
xchg
mov
cmpl
fidivrl
ljmp
out
lret
and
jae
cmp
cltd
add
mov
or
repnz
mov
jecxz
cld
sub
popa
xchg
sbb
or
mov
sbb
push
outsb
push
outsb
mov
sbbb
in
test
cmc
cmp
adc
ljmp
mov
or
cmpsl
xchg
inc
roll
mov
ret
loopne
adc
aad
pop
fdivl
adc
mov
xor
or
push
pop
mov
xor
les
shrl
nop
pop
loope,pn
jns
pop
jmp
ljmp
mov
cwtl
xchg
inc
xchg
sti
mov
mov
sub
mov
ljmp
nopl
shrb
add
insb
push
push
jbe
adc
pop
pop
mov
pop
subl
repnz
sub
lret
call
pop
mov
pop
push
mov
sub
test
dec
fwait
js
fisttpll
shll
imul
mov
or
inc
out
mov
cltd
xchg
out
add
pushf
stos
push
jno
lahf
and
mov
loop
pop
cli
stos
and
xchg
jns
push
mov
or
fwait
pop
add
jge
popa
xchg
loope
shrb
orb
push
arpl
lcall
jge
loope
inc
push
je
adc
shrb
mov
cmp
fwait
cmp
int3
test
scas
and
aas
pop
mov
bound
mov
dec
xchg
mov
dec
out
fnstenv
sub
out
scas
pop
lcall
lods
jecxz
out
sarb
inc
out
push
push
sub
push
dec
sbb
mov
fs
fimuls
jae
addb
adc
cwtl
data16
imul
jg
xchg
cld
cmp
das
adc
jnp
into
pop
cmpsl
xor
push
xchg
push
sbb
out
lods
ljmp
pusha
insl
lahf
xlat
xor
pop
push
xor
lahf
arpl
dec
div
fsubrs
mov
into
nop
jnp
xchg
jl
lock
xor
in
push
mov
sub
movsl
xchg
idivl
adc
jge
add
and
xchg
and
jb
icebp
aad
fbstp
or
sti
pop
mov
ss
adc
lret
in
mov
and
scas
fistpl
adc
ljmp
cmp
rolb
mov
sbb
push
push
fisttpl
iret
fldcw
adcb
pop
xor
ja
lahf
stc
sub
mov
cmp
push
push
nop
jmp
repz
daa
jb
mov
xchg
cmpl
mov
xor
jge
mov
ds
pop
imul
cmp
outsl
clc
ss
enter
bndstx
rolb
sahf
cmp
inc
dec
in
pusha
loopne
pop
hlt
adc
pop
fimuls
decb
clc
pushf
mov
sti
jg
adc
sub
inc
lret
pop
loope
add
add
xchg
dec
xor
lock
out
out
out
push
add
and
sbb
mov
jge
or
subl
cmpb
aad
inc
ds
cmp
dec
jmp
sbb
push
cmp
jmp
fs
mov
addb
dec
fdiv
test
jmp
enter
jno
subb
pusha
add
test
sub
repnz
adc
fbld
xchg
push
xor
lret
ret
xor
inc
inc
mov
push
shl
daa
cmpsl
jmp
loopne
push
scas
movsb
mov
jbe
fmul
js
repnz
dec
lcall
xor
xchg
push
jecxz
ret
icebp
xchg
xchg
cmp
cmpb
subl
mov
fldenv
mov
mov
mov
dec
arpl
gs
xor
and
add
arpl
mov
sbb
sbb
cs
nop
ret
rcrl
aaa
outsb
mov
xchg
fmul
pop
jp
cli
jmp
out
insl
mov
xchg
inc
shll
cmc
dec
cli
aad
inc
push
inc
lods
ljmp
jp
outsb
dec
mov
in
push
in
data16
loopne
pop
aad
inc
dec
cmp
fsub
in
stc
js
mulb
mov
dec
stc
daa
xchg
or
or
sbb
mov
cmp
int3
sahf
jns
xchg
dec
lcall
xchg
pop
rol
xchg
arpl
sub
push
hlt
ret
xchg
imul
jno
mov
pop
jb
and
xchg
sbb
std
ret
mov
dec
leave
je
mov
loope
push
subl
adc
xor
add
xorb
adc
pop
add
outsl
pop
adc
jo
and
inc
jp
mov
mov
movsb
jb
pop
mov
mov
data16
push
sarb
adc
jnp
jne
roll
icebp
xchg
mov
fildl
mov
aas
inc
jmp
xor
mov
mov
cltd
mov
pop
dec
add
ret
loopne
test
push
loop
jae
es
in
adc
aaa
cmpsl
fcomi
iret
pop
push
jle
sub
lods
pop
subl
adc
test
lods
pop
xchg
add
shrl
ds
pop
ja
add
push
sbb
push
push
or
and
icebp
mov
add
push
cmp
inc
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
aad
and
or
loopne
out
mov
ret
mov
jg
ljmp
mov
pusha
inc
loopne
mov
adc
test
lcall
jae
pusha
aaa
out
lret
dec
dec
cs
mov
lret
or
push
and
aad
cli
pop
ret
vandnps
inc
imul
hlt
int3
jbe
gs
mov
mov
aaa
mov
mov
jl
mov
cwtl
pop
fsub
pop
and
push
stos
insb
xor
sahf
sub
in
cmp
insl
jbe
sub
out
inc
pushf
pop
loop
inc
jae
cmp
inc
mov
xchg
mov
cmp
pusha
add
inc
mov
hlt
or
inc
xor
mov
xchg
leave
ljmp
int
sub
mov
add
xchg
add
rcll
movsl
test
fisubrs
and
test
adc
out
aad
jle
or
lret
mov
int3
dec
and
pop
int3
adcl
mov
jno
xchg
adc
cltd
mov
dec
or
mov
sub
lods
pusha
and
push
sbb
xchg
andb
sti
mov
push
iret
lret
repnz
mov
sahf
movsb
inc
add
bound
in
daa
fstpl
add
push
pop
xchg
hlt
stos
and
jge
cmpsb
mov
jne
jne
inc
out
push
imul
xchg
outsb
xchg
insl
stos
aaa
jb
and
call
cmc
push
shll
stos
mov
mov
pop
mov
gs
inc
jecxz
rcr
or
lret
cwtl
push
mov
push
mov
mov
rcrl
push
movl
pop
add
inc
mov
push
mov
loopne
jecxz
push
xchg
loop
ss
pop
lea
push
pop
outsl
ljmp
cmp
dec
out
push
inc
loopne
or
pop
inc
xchg
lods
pop
cli
inc
cld
push
iret
out
push
icebp
scas
jl
fcoml
push
scas
and
sub
lods
push
push
pop
pop
lcall
adc
or
repz
js
dec
push
dec
test
mov
adc
xchg
cwtl
add
bound
cmp
out
xchg
fs
dec
pop
xchg
ficomps
push
std
xor
push
mov
jnp
and
and
test
lock
mov
cmp
addr16
cmp
push
mov
jb
mov
xor
stos
int3
leave
xchg
subl
and
mov
pop
mov
out
xchg
dec
leave
inc
mov
std
psubd
adc
jne
out
pop
shrl
xor
outsl
jp
jae
jo
or
push
gs
ja
jmp
sub
in
shl
pop
sti
adc
incl
cwtl
push
popa
jns
testl
lcall
mov
cmp
push
sub
cmp
lret
xlat
fisttpll
and
jmp
mov
add
fwait
imul
cmp
fisubl
loop
and
push
xor
push
sahf
inc
xor
jbe
pop
fcoms
or
popf
daa
outsl
fidivrl
bound
aaa
jnp
mov
pusha
aaa
mov
push
mov
sbb
jnp
test
xlat
fdivrs
xorl
popa
in
cmpsl
js
or
fsubs
scas
into
stc
push
mov
pop
sub
in
fs
push
add
scas
mov
cmp
xchg
jg
in
imul
pop
jge
jmp
add
jp
ja
jbe
lods
movsb
stos
pop
test
mov
cmp
push
sbb
mov
dec
outsl
or
jno
xor
dec
outsl
popa
push
fnstsw
sub
subl
rcll
sub
push
xor
pop
lds
sub
dec
fcmovu
js
in
lock
inc
mov
jbe
cmpsl
jb
push
sbb
and
adc
xchg
enter
mov
shlb
fisttpll
iret
jns
cs
gs
cmp
sahf
jg
test
ja
rorb
scas
mov
sti
bswap
int3
sub
test
or
dec
cld
mov
pop
stos
hlt
or
cld
sbb
js
adc
jl
call
fbld
out
lret
xchg
push
popa
inc
inc
sbb
cmc
negl
and
cmp
je
jp
add
sub
sub
push
imul
movups
rol
out
push
xchg
inc
adc
add
cmp
je
cwtl
mov
push
mov
mov
stos
mov
bound
add
pop
and
add
or
repnz
jmp
cmp
cld
sub
inc
aaa
inc
add
out
test
rcll
jle
in
test
test
mov
or
int
adc
dec
out
shl
mov
out
test
insl
insl
push
dec
aaa
jnp
stc
xor
sbb
mov
or
sbb
sub
push
ret
mov
jp
xor
ficompl
dec
lock
into
mov
cmp
pop
jne
int
leave
push
dec
addr16
or
xchg
cli
mov
in
xlat
mov
dec
mov
lcall
cmpsb
mov
dec
movsl
cwtl
fsubr
lcall
sbb
jne
cmp
test
aaa
aaa
sahf
out
movsb
xchg
jnp
or
or
add
in
add
and
push
mov
jae
or
push
hlt
outsl
adc
cmp
jne
sbb
inc
enter
pop
pop
jecxz
jns
data16
into
aas
xlat
cmpsl
push
xchg
loopne
pop
and
inc
fbld
test
cmc
rcr
cmp
lcall
add
in
push
and
sub
dec
iret
popf
bound
test
xchg
fwait
inc
push
sbb
push
repz
ss
inc
loop
inc
add
xlat
arpl
test
out
std
jbe
pop
or
std
jae
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
mov
mov
invd
add
mulps
rolb
test
stc
add
js
push
out
inc
dec
outsb
mov
icebp
push
imul
jne
mov
or
push
push
inc
pop
xchg
sbb
shlb
movsb
and
cltd
push
rcr
push
inc
jg
popf
ret
dec
dec
repz
fiaddl
sbb
insw
mov
fsubrl
lret
das
in
lods
mov
xchg
mov
cmc
xor
in
adc
dec
std
aad
adcl
pusha
push
ss
and
icebp
mov
lret
mov
mov
repz
jb
addr16
mov
adc
sarb
push
insl
sub
inc
mov
adc
std
mov
insb
jne
jmp
lods
insl
clc
xchg
mov
xchg
mov
and
cwtl
dec
xchg
add
ja
insl
cmp
cmp
xchg
and
lret
dec
sub
pop
inc
jle
inc
ss
pop
mov
mov
mov
pop
mov
rclb
pushf
cmp
mov
imul
scas
mov
jl
movsl
inc
cwtl
sub
test
dec
orb
push
and
mov
rolb
cmc
push
int
sbb
roll
pop
mull
out
add
xchg
push
gs
xor
push
jmp
or
and
arpl
popf
or
xor
mov
scas
shlb
adc
inc
out
xor
clc
mov
xchg
xchg
clc
and
ja
stos
fisttps
movsb
add
jbe
or
fcomi
sbb
shlb
adc
adc
add
les
clc
fsubl
stos
dec
nop
popf
xchg
adc
leave
scas
cmp
fstl
adc
out
sar
cs
mov
jns
movsl
mov
gs
xor
xor
jne
int3
je
inc
pop
int
insb
in
popf
sbb
loop
push
sbb
andb
dec
and
repz
adc
lea
mov
mov
or
inc
test
mov
push
cs
pop
push
push
sub
pop
fdiv
push
inc
mov
enter
stos
out
into
sbb
es
les
push
xor
cmpsb
and
pop
and
cmc
sbb
int
mov
dec
jl
and
jg
lahf
or
jg
nop
add
push
push
inc
scas
cmp
das
loope
mov
lret
movsl
sbb
push
inc
xchg
xor
push
bound
rol
jecxz
push
adc
jae
cmc
cmp
test
mov
mov
push
jle
mov
mov
das
mov
cwtl
ret
sub
pop
jge
data16
test
leave
push
cmpb
adc
push
ljmp
ljmp
xlat
mov
dec
or
insb
pop
jae
push
xlat
es
outsb
lret
sbb
clc
int
arpl
cs
cld
out
lea
popl
es
add
mov
cmpsl
insb
lahf
repnz
mov
int
mov
iret
mov
inc
nop
mov
ljmp
ret
push
sbb
adc
fldt
sbb
mov
and
iret
mov
xchg
aaa
add
call
aas
and
cmp
iret
pop
pop
rcr
push
sbb
push
cmp
shl
mov
pop
mov
scas
sbb
push
mov
jbe
sbb
mov
fcompl
fdivrs
rol
add
lds
mov
rcrl
pop
ret
adc
or
push
xor
sub
sar
mov
jb
jae
cmp
xorps
bnd
es
insl
mov
filds
sub
lret
clc
mov
int
push
adc
xor
aam
hlt
mov
fwait
in
xor
mov
fucomi
aaa
jae
push
and
pushf
outsl
in
lds
fidivrl
shll
adc
pcmpeqd
out
sbb
repnz
out
xchg
leave
and
in
jno
adc
into
sar
add
and
into
shll
idivl
test
adc
push
or
int
shrb
jb
loope
call
movsl
adc
add
cmp
nop
and
fwait
mov
rcrl
cmp
hlt
pop
std
jecxz
mov
cmp
pop
sqrtps
mov
or
dec
xor
popf
jg
dec
adc
inc
movsl
xchg
xchg
mov
jge
mov
test
rclb
mov
jne
lret
jno
lahf
xchg
gs
repnz
dec
cs
pop
cmpsb
inc
leave
lahf
mov
nop
popf
and
adc
xchg
mov
ljmp
loopne
test
jl
push
xor
adc
mov
mov
mov
mov
cmp
sub
mov
xchg
pop
pusha
jecxz
int
pop
in
aam
add
cli
fs
cmc
pop
aaa
bound
add
stos
bnd
movsb
push
ds
or
jno
cmp
push
gs
insl
push
ss
sarl
or
fdivr
dec
and
fsubl
lahf
sbb
sbb
icebp
aam
scas
jg
loope
inc
popa
mov
xor
xor
pop
adc
and
int
push
xlat
xchg
push
popf
inc
pop
push
fsts
cmp
cmp
outsb
nop
fwait
ja
and
test
sub
mov
push
rcrl
mov
imul
dec
in
jmp
imul
stos
movb
in
xor
loop
inc
add
test
or
cmp
jmp
sbb
movsl
sbb
dec
cmp
pushl
lret
int
jb
and
push
dec
sub
adc
ljmp
dec
and
sahf
cltd
imul
sub
pusha
dec
sub
and
mov
adc
xor
pop
fwait
sub
mov
shrb
iret
cmc
push
ds
inc
push
outsl
arpl
aaa
mov
and
mov
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
sqrtps
movsb
add
out
movsl
insb
xchg
dec
seta
ds
dec
inc
jl
leave
test
adc
mov
xchg
xor
mov
or
in
int
xor
push
jns
lahf
aaa
subb
test
mov
dec
pop
sub
pop
sbb
push
sub
movsb
mov
adcl
dec
rolb
aam
mov
xor
aam
xchg
inc
test
pop
dec
hlt
hlt
lret
or
xor
mov
lret
inc
movsb
mov
test
jle
mov
jnp
jae
pop
cld
lods
filds
or
outsl
cmp
push
insl
fmull
pop
fs
sbb
jle
pop
in
sbb
push
push
push
or
ja
pop
jo
push
cmp
pop
lea
mov
xor
clc
push
fmuls
or
inc
jg
test
int
dec
pop
sub
inc
pop
dec
aad
mov
das
gs
mov
in
or
pop
mov
xor
jmp
in
subb
push
aas
pushf
rorb
inc
pop
outsb
iret
shll
xchg
addb
lret
mov
test
jge
out
or
clc
lods
mov
fucomip
push
out
adc
mov
cmpsl
mov
je
negl
adc
loopne
fcompl
imul
jmp
xor
fiadds
inc
popf
cvtpi2ps
push
add
jmp
out
jnp
popf
cltd
and
mov
test
jg,pn
scas
xlat
mov
mov
mov
icebp
sbb
jns
inc
lds
icebp
jmp
aaa
mov
inc
or
lods
outsl
adc
push
dec
mov
fstps
push
movb
add
cmp
or
lock
push
sub
iret
loop
push
dec
jae
jnp
leave
cmc
into
sbb
jg
test
sub
or
clflush
mov
aam
dec
cwtl
dec
cltd
out
ja
cmp
rolb
iret
adcb
out
out
cld
xor
push
loop
imul
call
cmp
pop
loop
sarl
push
fwait
dec
xor
cs
nop
fcoml
dec
fadds
in
arpl
adc
aad
push
xor
scas
les
xchg
jp
ds
push
lahf
lahf
mov
ss
dec
inc
mov
mov
inc
dec
insl
and
jl
icebp
mov
push
sar
mov
adc
dec
mov
scas
sub
sbb
or
daa
cmp
xor
cmp
inc
lds
jle
mov
cmp
or
dec
insb
aad
mov
sbb
jecxz
aam
dec
or
outsl
ret
mov
inc
jp
jg
cld
sbb
iret
inc
jae
ljmp
fs
pop
lds
ljmp
fcompl
lea
movsb
mov
dec
push
aad
lock
pop
cmpsb
pop
popa
sbb
mov
sbb
push
add
outsl
xchg
arpl
mov
pop
ret
loop
fs
pop
cmp
fstl
icebp
frstor
jg
mov
xchg
mov
jns
push
xchg
sub
pop
xchg
mov
pop
outsb
pop
imul
cmp
push
cmp
adc
pop
add
aam
mov
dec
shll
or
ds
das
xchg
cli
cwtl
imul
mov
mov
dec
cld
cs
sbbb
add
dec
fsubrs
sbb
cmp
or
add
ret
repz
mov
lock
test
dec
addr16
adc
add
or
pop
scas
jle
nop
mov
mov
adc
fcoml
test
dec
arpl
mov
cmpl
cmpb
daa
cld
fwait
repz
and
add
cwtl
pop
mov
imul
or
and
mov
push
pop
lods
ds
aam
aaa
insl
test
movsl
jbe
inc
sarb
pushf
sbb
xor
dec
sti
xor
mov
sbb
imul
mov
or
stos
out
jae
test
in
aam
data16
aad
fldcw
sar
cmpsl
and
sahf
divl
jbe
inc
xor
mov
sbb
outsl
mov
mov
inc
dec
add
rcl
jo
ss
lods
dec
push
mov
mov
jno
and
mov
stc
and
push
pusha
daa
pop
mul
fsts
and
pop
inc
push
aam
jbe
lret
pop
adc
loop
sti
iret
jne
gs
xor
in
popl
data16
push
or
enter
out
dec
inc
lret
xor
cwtl
scas
scas
aad
inc
pop
pop
jle
stos
sub
sahf
popf
or
sub
jo
js
fistl
repz
int3
js
inc
setae
push
mov
jmp
fisubrs
inc
decl
push
in
sub
and
cli
mov
cltd
aam
subb
popf
sbb
movsb
movsb
jno
imul
xor
pusha
xchg
fistpll
and
add
sahf
cmp
lods
sarl
cli
push
or
js
jno
lret
loop
push
insl
adc
in
mov
xor
clc
lds
push
and
inc
mov
cmp
mov
lock
dec
test
pop
pop
sub
fsubl
mov
insl
jns
mov
cmp
les
lods
dec
test
push
mov
loopne
cmpsl
push
mov
mov
xchg
mov
flds
mov
fndisi(8087
pop
loope
dec
cs
out
push
fistps
mov
cmp
data16
adc
pop
mov
sti
outsl
test
enter
lea
aas
pop
or
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
aas
aas
push
xchg
add
cvtpi2ps
aad
cmp
xor
jecxz
leave
addr16
fwait
aas
jnp
mul
jmp
lret
push
gs
movl
push
adc
cmpl
add
and
lods
or
xchg
aam
or
push
flds
inc
addr16
dec
push
fprem
in
js
into
cld
loopne
call
jge
inc
aaa
mov
int3
dec
push
insl
roll
fdivrl
inc
or
adc
dec
mov
sbb
lcall
leave
push
xorl
nop
inc
fisttps
cmc
push
push
push
lods
arpl
sbb
sub
add
fsubr
cmpsl
mov
enter
add
xor
call
dec
mov
mov
mov
adc
xor
cmp
rolb
mov
das
add
jbe
cmp
sarl
shll
into
push
mov
fcmovnb
stos
pop
xor
pop
pop
bound
fiaddl
aad
push
js
fcompl
jecxz
ficoml
popf
lret
mov
mov
std
cltd
repz
dec
mov
or
jae
divl
xchg
mov
sahf
scas
sub
or
ret
mov
and
inc
pop
pop
aad
and
les
sub
enter
scas
jg
xorl
and
mov
sub
or
sbb
dec
push
rorb
ljmp
jg
xchg
lds
mov
adc
jecxz
xchg
fstps
xchg
cmp
sarl
mov
cmp
jge
imul
lds
stos
lahf
push
or
mov
cmpsb
cltd
mov
aad
dec
addb
fwait
test
dec
test
dec
mov
mov
jmp
daa
sub
or
lret
sub
mov
cmp
test
and
je
leave
shl
push
push
mov
sarw
cli
pop
fs
inc
inc
decb
repnz
mov
pop
xchg
icebp
fisubl
or
sub
movsl
lret
pop
in
push
les
adc
mov
cli
jecxz
mov
mov
test
stos
sub
pop
call
sub
inc
jp
test
pop
mov
cmp
out
shrl
jge
sub
stos
mov
push
xor
push
js
cmc
dec
test
ss
or
hlt
inc
mov
sbb
push
jb
and
in
sbb
lock
mov
ret
add
daa
sub
rol
pop
cmpsb
xor
stos
scas
and
pop
sbb
cmpsb
fdivrl
sub
jne
imull
dec
push
adc
daa
push
into
xlat
lea
test
loope
mov
mov
sub
pop
icebp
pop
fs
mov
fistps
or
ljmp
cmp
sarl
push
or
stos
pop
pop
sub
mov
stos
movb
icebp
push
ja
loopne
pushf
rcrb
jmp
inc
call
mov
mov
dec
xchg
insb
push
sub
ficomps
sbb
push
adc
cmp
jae
loopne
aad
or
xor
push
mov
test
jnp
mov
jle
dec
and
xchg
fwait
jp
dec
mov
jns
lock
mov
out
and
sbb
loope
sub
sbb
lea
pop
jg
or
sbb
in
inc
jl
bound
out
jo
cld
jb
sbb
and
out
mov
popa
es
pop
test
jns
lods
aaa
mov
and
push
cmpsb
sti
push
sbb
sbb
rcll
and
dec
add
dec
push
sbb
gs
pop
dec
jl
dec
sbbl
jg
and
daa
scas
or
and
movsb
lods
rcrb
jg
lret
pop
jnp
lahf
fucomp
adc
jo
xchg
cmp
imul
pop
xchg
cmpsb
push
or
pop
push
mov
jno
lahf
fnstsw
testl
in
aaa
test
add
xchg
gs
mov
push
outsl
dec
frstor
stc
bound
int3
push
fisubrs
and
dec
mov
fdivr
aam
adc
movsl
inc
cmp
imul
cltd
cmc
scas
lret
outsl
inc
cwtl
xchg
dec
fisubl
ja
or
inc
push
jmp
das
adc
add
push
sub
fadd
push
mov
mov
outsb
popa
iret
insl
rorl
xor
inc
data16
xchg
iret
xchg
or
movsb
xchg
pop
scas
inc
inc
pop
stos
push
sub
jecxz
sbbb
mov
mulb
scas
inc
sar
call
jmp
dec
dec
idivb
jmp
inc
xor
mov
dec
jae
test
fnstenv
mov
insl
add
push
dec
addl
adc
push
cwtl
scas
mov
lcall
jp
out
push
inc
mov
pop
repz
cld
repz
xchg
sti
into
push
inc
jl
mov
jmp
test
ljmp
aas
xorb
and
cmpsb
shlb
jno
push
outsl
js
cmp
push
lahf
imul
pusha
xor
mov
adc
lret
mov
mov
push
jle
push
pop
insl
dec
jns
call
mov
shrb
pop
and
and
lret
push
test
subl
cmp
mov
xor
mov
add
cld
xor
jmp
outsl
flds
fistpl
and
push
ja
negb
in
into
fsubl
mov
and
mov
sbb
std
pop
aaa
lods
in
adc
dec
mov
push
dec
pop
sbb
adc
sub
sbb
mov
aas
enter
rorl
xor
pop
mov
loop
push
lds
nop
lods
inc
or
or
sbb
idiv
jmp
mov
xchg
mov
aad
mov
or
jbe
sbb
or
aaa
and
jecxz
loopne
adc
pusha
fucomp
imul
out
lret
sbb
mov
outsl
lret
shrl
jl
push
mov
outsb
adc
mov
xchg
mov
lods
insb
out
out
jo
es
fcomps
add
or
sahf
scas
movsb
sbb
sbb
enter
dec
iret
mov
outsb
arpl
mov
mov
inc
xchg
rep
cld
fistpl
add
aad
flds
scas
push
push
dec
adc
inc
out
jle
les
sbb
ret
dec
shrl
push
push
mov
inc
mov
or
loop
cmp
pop
dec
out
call
ljmp
cmp
out
call
pushf
enter
dec
movsl
ret
xlat
jmp
out
dec
test
int3
sti
stc
push
imul
mov
and
insl
movsb
adc
test
mov
orl
cmpb
fs
dec
mov
out
shl
and
bound
pop
enter
xor
cltd
mov
popf
jg
loope
xchg
jbe
rcrb
int
cmp
subb
mov
scas
adc
dec
leave
or
push
icebp
aad
inc
arpl
sbb
int3
mov
or
push
dec
repz
xor
jle
xchg
ja
les
push
pop
ds
and
and
and
xchg
test
sbb
loope
xlat
insl
test
dec
aas
outsb
fstps
les
aam
idivb
cltd
or
push
adc
lret
gs
jmp
or
inc
ljmp
fcmovbe
cmpsl
xchg
rorl
addb
mov
fwait
bound
mov
sti
pop
mov
les
jmp
inc
xchg
js
mov
inc
xchg
ljmp
gs
pop
test
shll
movsb
pop
sub
add
dec
push
push
popa
cmp
push
std
scas
jbe
and
jp
orb
dec
insl
out
in
xor
mov
xor
adc
add
dec
mov
or
loop
ret
pop
jl
xchg
pop
std
clc
data16
mov
sbb
mov
sti
cwtl
js
scas
popa
dec
fnstcw
push
xchg
xchg
push
jae
fimull
jne
leave
test
add
leave
imul
std
imul
push
ror
mov
mov
xchg
rorl
divb
push
jmp
jb
xchg
js
mov
cmp
es
and
mov
mov
mov
std
jnp
es
dec
clc
in
popf
leave
mov
fldl
dec
sub
es
insb
pop
push
pop
jl
into
push
jecxz
adc
shl
and
cmpsl
insb
pop
leave
std
add
xor
popf
pop
push
test
sti
mov
pop
adc
lods
mov
test
dec
push
mov
shrl
mov
ss
and
xchg
jns
cltd
push
sub
mov
dec
in
into
cmp
pop
daa
push
or
popa
mov
test
xchg
jbe
mov
mov
mov
mov
imul
cli
cmpsb
pop
bound
ss
cmc
pop
xchg
push
mov
das
mov
cmpsl
aam
in
repnz
scas
testl
sub
push
into
shl
bndldx
stc
jbe
sahf
lods
push
es
xchg
into
push
enter
pop
mov
in
mov
add
mov
pusha
xchg
pusha
xchg
sbb
cmp
and
sti
addb
inc
cmp
outsb
outsl
mov
std
push
sub
faddp
lock
pop
jmp
mov
sbb
jns
cmp
xchg
std
cmc
xchg
in
pop
dec
xchg
hlt
in
cmpsl
lds
push
cmp
loope
mov
pop
jmpw
add
das
mov
inc
cmp
mov
pushf
incb
test
lock
inc
push
inc
pop
sbb
dec
xor
xchg
ljmp
cli
je
and
mov
shl
lods
ret
popf
stos
cmpsl
jae
in
jns
adc
push
pop
sub
jb
jns
xchg
mov
xchg
mov
xor
lcall
sub
decb
fdivs
out
es
insl
lods
push
mov
gs
adc
rcr
rcrl
test
sub
clc
add
shrb
fmuls
and
leave
stc
lods
adc
inc
lds
movsl
mov
jae
orb
cs
add
outsl
xchg
cmpb
jae
push
inc
xlat
aad
sarl
std
rcrl
test
sbb
sti
mov
push
loope,pn
cmp
jae
push
lds
push
mov
mov
dec
sbb
lea
mov
call
in
inc
int3
sbb
jae
scas
sbbb
ret
rcll
pop
or
sbb
rorl
dec
cmpsl
sub
sarb
std
push
and
add
and
jl
mov
or
and
popf
adc
pop
fsubr
aad
gs
inc
sub
add
into
lock
out
ljmp
fmull
pop
aas
xor
movsb
sub
jmp
aas
xchg
aaa
push
pusha
dec
adcl
adc
jo
jge
shl
data16
cmp
dec
pop
fsubl
inc
leave
and
or
add
sub
adc
bnd
movsb
xor
cmc
mov
cmp
push
push
in
push
shrb
adc
jp
sub
in
fdivp
test
js
jecxz
push
xlat
lret
jl
ret
lods
out
fsubs
mov
mov
dec
insb
mov
clc
decb
rcrb
inc
add
addr16
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
mov
or
cmovl
sbb
ret
pop
and
inc
into
sti
ror
test
aaa
inc
aad
shl
cmp
and
dec
fsubrl
sbb
push
es
dec
sar
pop
mov
xor
mov
sub
pop
push
pop
jns
pop
es
stc
and
pop
xchg
sub
cmp
lcall
jae
sub
sbb
int
aam
lods
iret
mov
dec
adc
xchg
orl
sgdtl
shll
push
jb
mov
lahf
js
aaa
ljmp
xchg
stc
loopne
mov
adc
fwait
cmp
subb
ficoml
xor
fsubs
inc
xor
xor
jae
sbbb
inc
push
xchg
enter
pop
jbe
test
xchg
mov
ret
es
and
rclb
shrb
incb
les
repnz
and
inc
nop
adc
movsl
sbb
das
repz
xor
xchg
mov
xlat
push
notb
ja
mov
jnp
cmpsl
cwtl
int
push
es
mov
jge
ss
cmp
jae
pop
sub
stos
flds
mov
sbb
xor
mov
divb
mov
in
sub
mov
in
inc
sbb
je
or
xor
shll
dec
jmp
inc
ljmp
icebp
pushf
in
shrb
es
rep
ds
add
sahf
iret
lods
in
dec
jo
mov
sahf
sub
xor
dec
mov
push
adc
inc
jl
pop
int3
lock
movsb
enter
and
jle
fwait
sbb
push
push
int3
cmp
jl
mov
jb
and
repnz
icebp
int3
mov
mov
adc
test
outsb
pop
in
lcall
in
and
leave
cmc
lahf
push
inc
mov
mov
push
scas
xlat
inc
xchg
xlat
stc
lods
jmp
xchg
mov
xor
cmp
cld
pusha
ja
fcomps
and
cmpsl
sbb
sub
mov
mov
adc
insb
mov
pop
inc
sbb
inc
or
fisubl
outsb
sbb
outsb
sbb
cmp
adc
push
clc
cltd
test
sbb
adc
hlt
stc
int
lahf
push
jns
pop
mov
test
loope
dec
shll
mov
cmp
xchg
cli
and
iret
lock
inc
pop
cmc
and
mov
aad
loopne
mov
mov
push
cmp
scas
pop
rol
add
and
push
iret
lock
in
fidivrl
jb
dec
mov
and
cmp
mov
mov
push
mov
ja
mov
xor
out
arpl
sbb
sbb
pop
inc
std
aad
pop
cmp
and
es
mov
sub
imul
adc
and
sbb
xor
fstpt
lods
mov
or
sbb
mov
pop
daa
jns
arpl
fld1
stos
cmp
rcll
pushf
cld
mov
mov
aam
mov
and
fdivr
push
sbb
pop
mov
adc
pop
sti
jl
xchg
insl
push
adc
outsb
sbb
pop
enter
xor
fsubrl
cwtl
stc
mov
fidivs
dec
jg
out
mov
sarl
xchg
mov
push
xchg
aaa
mov
mov
into
stos
sub
pop
insl
sbb
push
pop
ds
shll
repz
icebp
je
adc
sub
sub
int
inc
jne
jne
dec
outsb
shrb
fadds
imul
ds
jle
pop
dec
xchg
pop
pop
push
jo
cmpl
scas
pop
fdivrl
sub
xor
stc
mov
fcoml
rol
add
cmpsb
imul
mov
dec
ret
es
and
cwtl
cltd
cld
mov
mov
les
ja
or
xchg
incb
test
adc
cmp
push
and
decb
adc
es
scas
cmp
xchg
cmpsl
and
sbb
adc
xor
xchg
int3
push
add
dec
sti
rorl
test
mov
cmc
cmp
jl
lahf
outsb
xchg
xchg
ds
and
pop
inc
mov
mov
add
pcmpeqd
sbb
pop
adc
jno
and
ds
mov
loopne
adc
fisttpl
int3
aaa
xchg
pusha
ret
ficompl
fucomp
dec
jns
rcll
or
sti
lahf
dec
jmp
push
js
adc
out
aam
push
jmp
mov
pop
cmp
or
adc
pop
xchg
cmp
dec
enter
ret
mov
mov
ss
pusha
repz
pop
mov
int3
mov
mov
sbb
leave
sbb
dec
and
or
insl
sub
ja
in
or
pushf
pop
sahf
inc
movsl
add
pushf
xor
test
shl
loop
mov
cmp
xchg
mov
dec
add
dec
jno
dec
adc
dec
or
or
xchg
pop
xorl
mov
mov
or
addr16
sbb
adc
push
mov
fwait
stc
and
cmp
sahf
cld
xchg
addr16
movsb
cmp
dec
or
stos
inc
cmpl
shll
aad
and
decb
xchg
push
scas
popf
sbb
in
dec
cmp
sahf
arpl
push
cltd
rolb
adc
xor
sub
fistpl
and
xchg
add
addb
ds
scas
inc
mov
in
mov
push
jns
lret
lcall
xor
or
aam
push
cwtl
aas
enter
dec
inc
or
adcb
and
ss
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
or
mov
add
lgs
lods
rorb
int
bound
dec
cwtl
ja
sahf
mov
repz
push
add
and
aad
repz
cmp
fldl
sti
insb
arpl
push
cmp
inc
fistpl
and
imul
in
test
repz
gs
xchg
fstl
add
mov
ds
cmp
adc
icebp
adc
fwait
data16
pop
addl
inc
mov
add
out
jb
cmp
dec
aas
xchg
add
stos
clc
shlb
pop
sarb
or
cmpsl
jge
sub
into
test
rolb
cmp
mov
into
rcrb
jb
into
sub
xchg
pop
sarb
pop
mov
scas
mov
test
dec
iret
aaa
lods
out
pusha
cmpsb
push
or
inc
mov
repz
mov
icebp
or
sbbl
dec
mov
arpl
idivl
mov
popa
clc
jo
sahf
imul
xchg
jg
out
pop
pushaw
ljmp
pop
int3
insb
das
std
lods
and
lds
repz
out
push
pop
das
jg
mov
fucom
push
push
arpl
ret
fmuls
je
mov
cmc
xchg
jmp
xor
rcl
out
loope
cltd
lret
mov
sbbb
jne
test
clc
sub
mov
arpl
frstor
push
out
cld
movl
fistps
stc
fbld
das
mulb
mov
pop
and
cwtl
stc
or
ljmp
out
cs
fmull
cwtl
push
cli
fstpt
fisttpll
insb
jbe
push
or
sbb
pop
xor
sahf
mov
sbbb
movsb
cli
inc
pop
dec
mov
sub
aam
add
outsl
xorl
or
sbb
in
pop
stc
cmp
add
jnp
data16
inc
in
in
rcrb
fisttps
loope
lahf
push
mov
sti
pusha
jle
mov
aas
fcmovnu
shlb
mov
fdivl
ficomps
ret
dec
jl
movsl
scas
add
add
sub
shrl
lahf
xor
arpl
mov
or
ret
iret
pusha
xor
in
cwtl
mov
sub
or
subl
mov
imul
pop
pop
cmc
jp
add
jecxz
rorl
lcall
jmp
mov
mov
ret
adc
je
in
inc
int3
ret
mov
mov
xchg
dec
insl
lcall
in
adc
hlt
jb
imul
xor
pop
popa
push
dec
mov
cmp
in
cmp
movl
cmpsb
scas
mov
xchg
and
push
push
test
rcll
pushf
add
or
in
sub
add
ret
out
dec
popf
outsl
jecxz
dec
xlat
aas
mov
ss
test
jg
xchg
inc
cmp
push
inc
insb
and
jecxz
in
sub
inc
push
sub
or
into
lcall
fimull
adc
cmpsb
sbb
rcll
dec
outsb
xchg
xchg
inc
pop
repnz
mov
mov
mov
xchg
push
repnz
shl
out
jo
pop
fildl
in
ja
pop
mov
or
std
or
ljmp
pop
mov
lret
test
xor
neg
dec
or
lods
in
in
outsb
clc
std
jns
sti
data16
mov
jecxz
mov
out
dec
xchg
fucomi
lea
aad
jnp
lahf
jp
push
loope
push
sub
cld
icebp
sbb
cmp
std
xlat
push
mov
mov
sbb
push
xchg
sbb
mov
aas
mov
in
add
repnz
loope
lock
in
add
lahf
pop
adc
add
cltd
js
push
xchg
add
stos
js
imul
push
cmpsb
ret
ffreep
xor
push
mov
inc
push
pop
int3
leave
pop
fstp
inc
out
cmp
xor
sub
push
fisttpll
xchg
cmpsl
lcall
xchg
sbb
jle
adc
xchg
aam
pusha
cmp
jo
bound
push
jmp
mov
loop
icebp
dec
enter
ds
mov
das
add
inc
push
sub
and
mull
mov
lret
es
lds
mov
and
jg
jmp
ficoml
sub
cwtl
push
xabort
adc
push
cmpb
adc
insl
inc
xchg
stos
and
xor
and
leave
add
arpl
sbbb
xor
sti
or
ljmp
imul
nop
fwait
xor
sbb
mov
int3
sub
jb
or
and
mov
das
lcall
cld
in
gs
xor
je
imul
push
jge
mov
adc
in
and
mov
fidivrs
arpl
cmp
jae
pop
fstps
mov
xchg
jo
rcll
jns
aam
mov
mov
and
and
sub
mov
jle,pn
pushf
mov
push
lcall
sbb
or
and
or
popa
inc
movsb
fcmovne
add
jbe
stos
mov
mov
iret
out
cs
leave
addb
inc
insb
subl
ret
adc
pop
popf
test
in
cmpsl
cld
out
pushf
add
mulb
jg
cwtl
push
ret
jae
daa
mov
lret
jg
mov
sub
orb
dec
jg
lock
and
insb
xor
dec
and
cmp
add
rcll
and
push
or
jbe
out
and
inc
test
mov
ljmp
sbb
ret
pop
negb
or
or
ror
fcmovu
sub
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
sahf
push
mov
or
pcmpeqw
cmp
jl
popf
test
imul
mov
leave
pop
outsb
mov
add
xor
xchg
js
cmp
fwait
insb
and
and
aad
dec
test
mov
mov
adc
mov
popa
or
sbb
xchg
mov
mov
loopne
lods
mov
cmpsl
add
pop
or
jmp
fsubrl
pop
fldcw
inc
dec
sub
push
push
and
lret
gs
pop
pop
scas
xchg
daa
rcll
sub
xor
movsb
jle
movsb
icebp
test
push
pop
mov
push
lods
sahf
leave
xor
ret
mov
push
sbb
sub
xor
js
mov
sub
mov
mov
je
push
jp
jmp
pop
add
fcompl
movsl
cmp
jp
push
dec
test
popa
out
or
jle
rorl
ljmp
jmp
dec
dec
int
mov
mov
jle
lahf
mov
add
out
xchg
add
jl
xlat
jae
mov
inc
stos
push
fsts
pop
and
sub
lahf
pop
jmp
lds
pop
jecxz
clc
loop
cld
jmp
fnstenv
inc
out
in
pop
push
adc
or
mov
push
aas
fwait
add
in
xchg
push
xlat
mov
lahf
dec
aaa
fbld
sbb
sub
rcr
popa
aad
stos
negl
fldenv
dec
jle
repz
lcall
fistpl
jbe
imul
xchg
jnp
sub
sbb
jle
xchg
add
lods
sbb
dec
mov
lods
std
adc
pop
sub
push
repz
filds
and
decl
stc
cmp
and
jecxz
insb
push
mov
xchg
adc
mov
cmc
xor
insb
ds
cmp
or
add
sbb
add
std
lods
cld
push
mov
dec
in
inc
test
lret
imul
popa
iret
pop
pop
fistps
out
lock
sbb
cld
dec
xchg
push
sbb
mov
jbe
cmp
sbb
xchg
in
dec
test
test
push
int3
xchg
movsb
sbb
push
es
pusha
xchg
mov
jo
adc
mov
mov
daa
jns
das
and
ljmp
pop
gs
cmpsl
xor
xor
sbb
or
int
pop
gs
cmp
ret
lahf
mov
cmp
ficomps
push
fmull
popa
dec
int3
nop
and
sub
xchg
inc
xchg
daa
stc
ret
mov
in
or
pop
call
mov
jmp
push
leave
mov
sub
jne
adc
movsb
shrl
lods
jp
push
std
jb
ror
aaa
clc
adc
add
xlat
cmp
lcall
pop
mov
jge
sub
fucomi
inc
sub
call
jnp
out
test
stc
int
sbb
cs
xor
dec
insl
sbb
inc
and
jmp
pop
gs
dec
mov
sbb
cmp
stos
stc
xlat
mov
sub
loope
or
icebp
mov
ds
jno
xchg
add
push
push
shrl
dec
aaa
push
pop
out
dec
sahf
fimull
pop
ds
aad
mov
bound
scas
decb
mov
pop
sub
cmc
cmpb
mov
movsb
push
or
pop
aas
test
enter
xor
xor
pop
outsl
cli
xchg
jl
push
sub
xchg
lds
jnp
cld
jl
addr16
gs
adc
lock
lods
nop
lods
pmuludq
or
mov
sti
neg
lea
jne
sub
inc
ljmp
jmp
jns
divl
aas
push
test
in
nop
and
sbb
add
lahf
arpl
dec
jbe
out
mov
daa
adc
mov
sub
mov
jae
mov
and
add
and
xor
jo
sbb
mov
je
mov
pop
outsl
pop
pushf
cld
jae
iret
dec
mov
push
pop
pop
in
or
jns
dec
jge
push
or
int3
mov
jno
shl
jb
imul
push
ss
mov
sub
ds
in
xchg
add
xor
sbb
and
lea
adc
aam
jns
addr16
mov
sub
loopne
xchg
lds
arpl
sbb
popa
imul
push
mov
dec
outsl
adc
xchg
dec
or
pop
push
cmp
mov
hlt
in
fdivrl
pop
fdivl
add
adc
gs
jecxz
test
fstpt
push
mov
adc
cmp
jle
in
mov
lar
lahf
inc
mov
and
mov
and
sub
sbb
xchg
pop
enter
inc
int
movsb
clc
dec
outsb
mov
popa
sub
push
and
adc
add
cwtl
in
mov
jg
sub
aas
rclb
pop
fxam
inc
mov
ret
cltd
add
pop
insl
ret
push
fsubrl
out
imul
daa
cmpb
pop
fwait
js
ljmp
adc
xor
shll
les
inc
pop
popf
out
jle
sarl
mov
mov
mov
sti
in
cmp
xchg
clc
inc
icebp
and
outsb
inc
mov
aad
lret
sub
jl
cmp
lcall
fninit
rorl
pop
jl
push
es
adc
mov
or
and
mov
and
or
mov
dec
xchg
push
mov
out
xor
mov
std
jle
sbb
or
insl
pop
and
inc
add
icebp
mov
or
shlb
add
and
shrl
adc
xchg
outsb
push
rcl
mov
and
add
aad
std
mov
sub
xorl
xor
imul
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
punpcklbw
mov
lcall
mov
mov
cmp
jno
pop
rcrb
xchg
dec
gs
cs
jnp
shlb
or
pop
das
icebp
sub
mulb
adc
pop
loope
jge
pop
cmp
ret
es
in
mov
das
lahf
sub
cli
test
dec
aas
push
cs
fwait
imul
popa
or
dec
rolb
mov
js
jg
sbb
mov
shl
or
mov
arpl
dec
adc
in
mov
sbb
dec
inc
cs
inc
cmpl
jo
rolb
xchg
sub
inc
push
ja
push
movsb
jo
inc
shll
es
aam
std
dec
jbe
cs
out
adc
fidivl
add
test
sub
jmp
sub
adc
sahf
outsb
das
pop
xchg
xchg
fmuls
cmp
scas
insb
dec
mov
lahf
cmp
inc
push
nop
insl
pop
lock
arpl
xchg
inc
pusha
pop
adc
out
push
insl
arpl
jnp
xor
xor
jnp
into
cmp
inc
mov
xchg
dec
lock
insl
or
adc
mov
stos
xchg
cmpsb
call
stos
inc
sbb
cmpsl
or
mov
xor
in
ja
pop
sub
outsb
cld
mov
fbstp
lea
dec
scas
pop
out
dec
cmp
daa
inc
and
hlt
mov
jne
aas
adc
test
sub
insl
cmp
inc
arpl
jne
iret
pop
aam
out
loopne
das
xor
shl
ret
inc
cltd
or
and
pop
xchg
push
and
lret
in
cli
sub
add
dec
xchg
mov
inc
push
mov
xchg
mov
call
and
cmovge
pop
jp
das
xor
add
scas
jmp
es
std
cs
ja
dec
out
jo
lods
push
ss
ret
xchg
pop
xlat
ljmp
sub
scas
faddp
icebp
out
ljmp
xchg
stos
in
iret
mov
add
inc
test
or
ret
fadds
xchg
outsb
into
cmp
adc
into
push
xchg
out
xor
adc
xchg
cmpb
jae
clc
scas
das
aam
movsb
mov
in
or
push
dec
scas
sarb
loope
mov
mov
add
dec
xchg
inc
and
test
pop
into
std
das
push
cltd
jno
or
push
cmp
orl
jae
dec
aas
sbb
push
sbb
out
sbb
ds
mov
and
mov
cmp
jecxz
leave
imul
jl
rcr
xorl
xor
jo
shr
xchg
push
mov
mov
inc
xchg
add
movsl
in
repz
inc
jg
out
cmpsl
rorb
push
push
insb
mov
ss
sub
movsb
xchg
shr
lcall
rcr
mov
imul
sti
push
ljmp
xchg
xor
stc
sub
outsb
sarb
or
inc
movsl
bnd
mov
jb
shl
inc
int3
repnz
mov
mov
pop
pop
lds
imul
push
mov
ljmp
mov
mov
lcall
push
movsb
movsl
into
in
pop
popa
aam
lock
jl
add
mov
aam
add
add
rclb
loop
jnp
ret
mov
jno
xchg
fwait
js
mov
jno
std
imull
fs
cltd
dec
lds
cmp
cwtl
repz
push
add
lret
lds
jge
ja
leave
je
mov
pop
push
loopne
lods
ficoml
cmp
stos
mov
mov
mov
mov
fs
imul
stos
fisttpll
jle
aam
pusha
pop
out
adc
and
repnz
adc
in
sbb
dec
sarl
lcall
shll
inc
jb
insb
xor
mov
scas
mov
cmp
and
pop
dec
pop
mov
add
jmp
out
das
xor
push
dec
xchg
sub
cld
sbb
cmp
stos
fisttpll
cmp
mov
cmpsb
ss
cmc
pop
and
dec
sub
les
cmc
sub
inc
testl
cmp
dec
mov
mov
cmp
nop
nop
inc
pop
push
xchg
mov
push
call
ljmp
sbb
push
push
xchg
lock
mov
out
jae
xor
fistl
pop
lods
xchg
push
xor
fidivl
add
dec
nop
arpl
cltd
cmp
mov
ror
outsl
int
mov
leave
push
mov
jge
inc
vpsllq
mov
and
fcompp
aad
jbe
negb
mov
fsubrl
mov
push
fwait
pop
xor
push
pop
and
dec
cmp
stc
mov
shrl
cmc
nop
flds
sbb
cmc
test
dec
stos
ss
xlat
jl
insl
inc
sti
cmp
aad
xlat
mov
mov
or
shll
mov
mov
sbb
cwtl
or
pushaw
pop
call
outsb
sub
mov
lds
repz
iret
inc
stos
inc
mov
or
gs
mov
add
mov
out
jecxz
cmpsb
into
mov
push
cmp
pop
jp
and
xchg
adc
lcall
mov
mov
ror
in
add
xchg
hlt
sbb
mov
push
cmp
aam
js
or
push
pushf
mov
call
je
add
orl
add
pop
out
sub
fnstsw
popf
call
xor
into
mov
repnz
pop
add
push
ljmp
cmp
jnp
pusha
neg
mov
sub
in
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
cmp
invd
add
psrld
xor
jbe
js
and
adc
pop
movsl
pop
and
sub
push
enter
add
sub
jl
test
hlt
lcall
jecxz
sub
push
imul
or
cli
aaa
loope
jbe
rcrl
dec
fwait
pushf
add
jl
xchg
call
fs
mov
inc
orb
mov
fstpl
jnp
push
jno
dec
adc
xchg
lods
std
shr
jle
cmp
imul
bound
ljmp
hlt
sahf
xchg
sbb
into
insb
inc
cmpsb
or
mov
add
push
sbb
jmp
in
inc
jecxz
iret
cmp
xor
and
mov
mov
pop
cmc
mov
pushf
mov
xor
pushf
jae
ffree
push
sahf
inc
mov
mov
mov
mov
push
push
addl
mov
fwait
push
scas
mov
and
inc
lahf
pop
out
add
imul
dec
pop
mov
punpcklbw
push
or
dec
and
mov
jne
sbb
popa
sub
loopne
mov
sub
pop
mov
cwtl
stos
mov
loope
stos
rcll
jmp
cs
push
lcall
push
inc
mov
daa
pop
pop
mov
test
lods
and
xor
push
mov
jno
pop
or
arpl
out
cwtl
push
sub
push
pushf
xor
push
and
das
lcall
adc
add
stc
pop
pop
aas
cmp
testl
insl
cmp
xor
mov
sub
test
outsl
jle
push
pop
jns
cli
push
sahf
xor
mov
dec
pop
sahf
fstpt
in
sbb
roll
adc
ds
data16
cmp
mov
stos
inc
stc
mov
pop
cmpsl
push
push
rorl
mov
pop
jmp
sbb
in
mov
mov
pop
out
mov
ret
adc
dec
test
mov
push
clc
sbb
lret
adc
scas
jg
mov
cwtl
push
call
rolb
or
mov
shlb
xchg
mov
ljmp
lahf
rclb
push
xchg
rcrb
sahf
fs
xchg
mov
aam
out
pop
repz
aam
cld
jecxz
push
mov
sub
jecxz
or
pop
push
add
lahf
arpl
das
ret
adc
rol
in
lock
or
pop
sbb
sahf
cmpsb
lret
or
ret
pushf
cwtl
pop
imul
call
rclb
repnz
lar
ret
nop
cmc
js
inc
pop
jmp
adc
mov
push
ret
mull
cmp
stos
cmp
je
or
cs
push
mov
fcoms
pushf
cltd
push
cwtl
mov
shlb
push
out
mov
inc
mov
inc
test
nop
rcrl
gs
jne
lret
inc
push
mov
or
outsb
psraw
std
push
mov
cld
sub
das
mov
aam
addr16
mov
mov
and
xchg
mov
and
iret
test
dec
imul
mov
ret
xor
lret
jno
incl
std
xchg
pop
in
imul
fadds
inc
imul
inc
lods
test
loope
lret
mov
jp
insb
scas
jl
push
xchg
mov
or
jnp
mov
fcmovnbe
stos
mov
lret
mov
jo
add
mov
leave
js
stc
fptan
scas
add
clc
cwtl
mov
enter
jb
inc
push
xlat
cmp
incb
imul
or
fdivl
test
adc
lret
outsl
cmpsb
mov
sub
inc
push
sub
ret
shll
add
notl
je
stos
xor
adc
adc
mov
mov
push
add
clc
pop
aaa
ss
cwtl
lahf
xlat
fs
frstor
dec
adc
fndisi(8087
xchg
xchg
jne
dec
imul
rclb
dec
jge
jo
loopne
fwait
sub
popl
xchg
scas
das
insb
mov
inc
mov
cmp
daa
ss
mov
jne
repnz
roll
cmpl
subl
dec
add
mov
inc
add
mov
aam
and
push
pusha
push
mov
or
xor
arpl
cmc
inc
lcall
test
push
loop
imul
in
sub
popa
inc
lret
pop
popa
jmp
sub
ja
sbbb
or
xchg
mov
popf
aad
cld
or
cmp
or
lods
pop
movsl
in
cmp
dec
dec
lock
dec
popa
pop
hlt
xor
add
or
mov
rclb
and
cmpsl
jae
push
adc
cmp
and
push
movsl
mov
jl
enter
pop
dec
xor
dec
pop
jno
cmp
xchg
inc
pop
stos
inc
inc
jmp
mov
mov
xchg
and
out
xchg
dec
xchg
test
clc
bound
jno
stos
stos
cmp
jle
mov
and
adc
xlat
shl
insb
int3
pushw
xchg
ret
push
outsb
sbb
pop
inc
in
ja
inc
cltd
or
jns
or
xchg
shrl
arpl
dec
sub
pop
ret
mov
je
mov
int3
xor
std
and
icebp
and
add
pop
adc
sub
sbb
jo
dec
jo
mov
mov
dec
mov
mov
jnp
lds
je
push
stc
xchg
pop
lods
aam
mov
sub
adc
xchg
dec
je
xchg
cmp
les
mov
xchg
mov
sbb
push
in
mov
lods
or
sub
adc
out
and
insl
xchg
and
push
add
pusha
lahf
aas
sti
aas
pop
or
ss
cmp
invd
add
cmovge
rclb
fstps
push
int
lods
adc
xchg
jl
sti
sbb
ret
stc
cltd
imul
sbb
mov
pop
push
testb
jae
jne
or
clc
adc
add
dec
in
ds
xchg
sarb
call
adc
xchg
je
jg
push
pop
and
shr
xchg
fcmovnbe
rcrb
pop
push
arpl
adc
dec
scas
sub
stos
arpl
sub
dec
sarl
movsb
shll
jbe
mov
addl
data16
popf
cmp
jl
divb
std
or
sarb
fstps
fs
das
push
hlt
pusha
fnsave
add
cmp
and
push
aad
outsl
jecxz
gs
jno
xlat
xor
lea
adc
push
lock
xor
inc
mov
mov
and
sbb
or
push
shll
push
ret
push
ds
fidivrs
loopne
cmp
rcll
adc
push
push
jmp
pop
sbb
cmp
cmp
dec
fadds
inc
dec
xor
fstps
jne
lock
mov
pmulhuw
pop
inc
push
fnstsw
mov
into
sti
nop
xchg
push
cmp
stos
iret
enter
mov
movsl
divl
hlt
xor
hlt
stos
adc
hlt
pop
jmp
push
mov
pop
jge
gs
cmp
xchg
negb
adc
out
shrl
data16
mov
test
bound
rcrb
mov
stos
jp
dec
es
dec
rcrl
stos
inc
jp
sub
addb
sti
pop
mov
rolb
nop
inc
fwait
sub
xchg
fmul
addb
jno
fmulp
add
or
mov
gs
pushf
jb
int
jbe
pushf
sahf
and
test
outsb
stos
push
jecxz
cmp
push
fstl
out
mov
cmc
data16
mov
jg,pn
movsl
cmp
fsubl
fcomp
mov
sub
dec
xor
into
ljmp
je
test
add
pop
or
adc
mov
rolb
rcr
lods
leave
hlt
mov
adc
dec
or
dec
sti
xor
inc
push
mov
test
insb
sub
pop
das
sbb
cmp
sahf
jno
mov
sbb
push
dec
jle
sub
jae
je
lahf
push
jb
popa
xchg
lock
adc
sbb
loop
imul
mov
adc
cmc
lods
jp
punpckhdq
int3
pusha
jmp
cmp
mov
movsb
popa
mov
out
mov
pop
pop
lahf
mov
cmp
loope
ror
xor
and
daa
nop
and
daa
int
pusha
lret
push
rclb
or
inc
scas
sub
sub
mov
mov
ret
popa
mov
push
push
shl
movsb
pop
imul
test
sbb
cmp
loope
into
bound
push
and
xlat
stos
int
xor
mov
dec
cmp
adc
inc
lahf
inc
pop
loop
lcall
stos
lods
mov
mov
ds
testb
jo
jmp
pop
dec
mov
in
stc
and
mov
cmp
add
inc
inc
and
test
cmp
push
aaa
int3
shll
clc
jmp
data16
pop
or
push
aad
cmp
es
and
rclb
jmp
sub
es
add
inc
dec
lea
scas
mov
mov
out
pop
xor
pop
insb
popa
int
test
pop
mov
aas
aas
cmpsb
xor
add
out
aam
loop
pushf
or
or
pop
sarl
fwait
jmp
int
inc
cmp
add
addl
shl
mov
gs
lret
sub
cmp
adcl
xor
outsl
leave
jne
inc
mov
enter
xchg
pop
sbb
leave
ljmp
data16
sub
rorl
cmp
scas
pop
dec
es
out
and
jnp
in
sbb
pop
xchg
jge
nop
mov
mov
or
rol
pop
jg
loopne
sub
pop
fs
lods
adc
dec
xor
xchg
cld
jle
push
enter
std
pop
lcall
pop
fists
mov
dec
sbb
inc
xchg
hlt
mov
scas
add
mov
mov
push
mov
push
pop
int
jmp
push
mov
cmpsb
xchg
jno
out
and
aam
inc
or
out
jge
mov
fistps
pop
push
loopne
addb
xchg
negb
insl
mov
cmp
mov
jg
xor
cmp
push
gs
lods
xchg
jo
iret
sahf
lea
popf
xor
push
dec
outsl
push
jnp
lea
add
adc
fs
sbb
lods
inc
ja
pop
lret
pop
lret
scas
rcrl
fwait
ljmp
popa
push
scas
rorl
add
stc
mov
fwait
or
test
sub
cmpsb
or
sub
dec
lret
movsl
rorb
push
and
cmp
clc
test
jl
mov
jnp
fisubrs
mov
aas
or
or
pushf
into
jecxz
div
outsb
aam
test
lods
imul
scas
cli
popf
lret
je
mov
push
push
xor
adc
fwait
or
pop
stos
in
add
mov
mov
mov
pop
test
sbb
mov
adc
fsubrs
adc
popa
mov
jnp
mov
call
in
mov
push
adc
mov
js
inc
mull
push
cmp
jmp
mov
add
mov
incl
lret
sub
sbb
outsl
and
lds
into
jo
lcall
insl
sbb
mov
adc
jne
push
repnz
nop
xor
daa
pusha
xchg
cwtl
icebp
sbb
orl
lcall
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
pmullw
sub
jno
jp
mov
stos
arpl
lret
loope
or
leave
test
sahf
push
nop
out
or
pop
inc
jbe
pop
push
insb
cs
fwait
out
push
mov
jle
mov
and
pop
or
jnp
xor
paddusw
add
sub
lods
add
out
mov
jo
add
ret
aas
add
cmp
fstp
and
or
out
push
xchg
scas
arpl
das
cs
cmp
in
add
not
pop
movsb
pop
inc
scas
gs
iret
pushf
dec
adc
mov
dec
insb
adc
push
je
shlb
dec
xlat
shlb
cmc
xor
sbbl
in
mov
mov
push
jge
push
ret
daa
dec
pop
mov
jp
lods
sarb
mov
fwait
enter
pop
fwait
xor
rcr
jmp
jo
cld
dec
out
in
sub
xchg
aad
imul
dec
pop
ficoms
sbb
push
adc
xchg
xlat
test
popl
cmp
and
bound
iret
fdivl
mov
sahf
mov
and
jl
loopne
out
jae,pt
cmp
js
lret
test
or
mov
enter
add
lcall
rclb
cltd
lcall
add
push
or
sbb
pop
cmp
sti
mov
adc
and
push
movsl
cs
mov
bound
sbb
jnp
ljmp
add
ja
ljmp
sbb
add
xchg
cwtl
jmp
cmp
cmp
mov
js
xor
mov
fisttpll
push
sti
fistpl
mov
dec
in
rol
mov
jne
and
pusha
or
popa
cmp
pop
aas
xchg
push
xchg
aaa
mov
test
mov
scas
outsb
rol
push
and
dec
daa
inc
andb
inc
nop
je
pop
in
push
aaa
out
lods
imul
pushf
or
mov
insl
ja
add
fs
xchg
push
pop
or
add
stos
inc
ret
mov
add
xor
hlt
into
stc
mov
jge
fldt
push
mov
lret
jle
in
adcl
pushf
add
and
inc
js
loop
mov
jp
add
imul
push
test
push
mov
pop
xchg
call
xor
call
mov
adc
push
faddl
adc
nop
pop
fcmovbe
stc
lods
cmp
pop
cli
inc
cmp
punpcklbw
xchg
push
xor
sbb
stc
sbb
lods
jle
aam
xchg
adc
cmp
inc
movsb
out
add
xchg
adc
sub
in
dec
loope
repz
mov
cmpsl
cld
xor
shrl
mov
push
push
fs
cmpsb
sti
inc
cmp
mov
inc
xchg
and
add
mov
push
dec
bound
bnd
jbe
js
std
sbb
pop
push
mov
jle
movsl
add
and
inc
cmpsb
popf
dec
jnp
sarb
and
bound
fs
pop
icebp
movsb
jecxz
and
dec
xorl
xchg
fstps
test
dec
fdivp
mov
xor
xchg
outsl
jae
fwait
int3
jo
jp
sub
xchg
mov
ss
adc
or
out
repnz
mov
lea
imul
cld
in
sub
mov
popf
xor
jns
mov
out
and
ljmp
dec
aad
pcmpgtb
fnstcw
out
das
cltd
and
sbb
pop
fildll
movsb
jmp
aas
out
je
jmp
popa
mov
dec
cli
mov
fs
inc
push
pop
push
test
movsl
in
pusha
xor
adc
pop
lds
push
jle
lret
loop
mov
mov
pop
mov
idiv
shlb
sbb
ja
inc
xchg
sub
fmull
ss
test
sub
push
or
decl
add
mov
outsb
push
jmp
stos
ret
sti
or
push
shll
jo
rolb
mov
or
pop
shrd
cs
xor
loopne
inc
shll
mov
xchg
test
out
mov
lock
loopne
cwtl
lcall
add
cmp
imul
sub
push
xor
cs
push
jp
imul
popf
les
aas
jmp
int3
cs
insl
lret
sbb
xchg
dec
int
pop
xchg
xlat
mov
inc
add
mov
cmpsl
or
loope
xchg
cmpl
or
mov
es
push
add
clc
xor
fnsave
add
mov
test
jg
mov
push
in
shll
push
mov
nop
sbb
pop
pop
loope
or
mov
les
push
cmp
push
jo
push
sub
jnp
loopne
dec
push
lods
data16
nop
cmp
int3
dec
jno
and
xlat
les
mov
jne
xchg
pushl
pop
std
aaa
cmpsb
test
and
insb
cmpl
jmp
and
adc
xchg
icebp
add
or
les
jno
ret
dec
sub
adc
mov
std
sarb
inc
or
imul
inc
mov
call
es
pop
pop
push
cmp
pushf
cvtps2pd
pop
xchg
xor
jge
xchg
aaa
daa
test
sbb
add
jle
jns
xchg
lods
in
sbb
test
mov
adc
sbb
lret
fidivl
out
divl
lock
push
enter
loope
leave
sahf
xchg
pushf
gs
and
popf
lahf
sarl
sarb
push
testb
and
leave
pop
pop
and
out
pop
fisttpll
or
sbb
pop
das
mov
jmp
jbe
aaa
ja
popa
cmp
push
in
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
inc
mov
push
lock
invd
add
andps
mov
inc
add
mov
jne
imul
fildl
pop
pop
inc
ret
or
fcoms
leave
mov
lods
mov
mov
cmp
push
mov
jne
cmp
xor
clc
repnz
mov
xchg
or
xchg
xchg
clc
pop
cmp
xchg
mov
mov
push
insb
outsb
xlat
ja
ficoml
jno
iret
pushf
int
in
lock
and
push
subl
inc
pop
aas
or
call
push
mov
imul
sahf
das
sahf
adc
adc
leave
pop
sub
cmpsl
sub
fisubrl
push
adc
fisttps
or
inc
ss
mov
xchg
iret
aam
mov
outsl
std
xor
movsl
xchg
int3
jnp
cmp
les
mov
lret
stos
loopne
add
sub
inc
sbb
test
cmpsb
out
cli
pop
jo
pop
push
dec
cmc
fsubl
sub
xor
pop
loopne
dec
sbb
cmp
jb
imul
dec
jle
jg
adc
push
jecxz
pop
lcall
mov
jl
jmp
cmp
mov
out
sahf
fcomps
and
sbb
stos
js
loopne
out
insb
push
or
xchg
jne
mov
add
mov
or
arpl
out
lcall
js
sub
cli
and
imul
mov
int3
inc
out
iret
cwtl
pop
shr
rcrl
lret
inc
or
outsb
jmp
sub
push
das
sbb
xor
daa
adc
inc
popa
pop
jl
icebp
aaa
fists
sbb
cmpsb
dec
enter
push
push
xchg
xchg
xchg
stos
hlt
and
imul
push
in
scas
xor
adc
add
xchg
jge
cs
and
and
mov
mov
mov
sbb
ret
fldenv
pop
inc
inc
mov
mov
lock
mov
aam
inc
fisubrl
test
cs
xchg
mov
pop
insl
aaa
rorl
pop
in
push
or
mov
push
bound
sbb
sub
xor
inc
movsb
xor
nop
ret
sub
pop
jge
xchg
push
je
mov
fwait
and
add
out
aaa
inc
pop
dec
mov
test
pop
mov
cmp
lcall
sub
popa
lods
lods
ds
call
shrl
loopne
and
jns
fnstsw
push
pop
in
xchg
aam
into
test
inc
arpl
imul
mov
jo
stos
dec
xchg
push
lods
dec
gs
cwtl
and
mov
lea
xchg
repnz
dec
rcll
out
sub
sahf
test
dec
movl
pop
cs
and
xchg
jecxz
jnp
xor
sti
ret
jo
or
cltd
lahf
sub
movsl
mov
add
fidivl
fdiv
inc
imul
mov
enter
inc
cwtl
ds
cmp
xlat
pop
jo
shlb
ja
outsl
lods
es
es
pop
test
jmp
loop
push
pop
scas
push
fbstp
jns
loop
mov
xchg
lea
cmc
jbe
push
cmpsl
xchg
xchg
mov
adcl
push
mov
outsl
arpl
jmp
pusha
add
sbb
pop
scas
arpl
adc
jle
pop
push
mov
add
cmp
movsb
sarb
push
lds
xchg
dec
into
jecxz
xchg
xorl
push
rep
jmp
in
inc
ss
and
popa
popa
dec
mov
in
pop
mov
add
in
daa
push
fwait
mov
sbb
adc
lret
mov
sbb
or
shl
xor
into
ss
pop
iret
or
xchg
inc
into
out
call
dec
scas
sahf
addl
mov
xchg
cmp
in
sub
jbe
dec
std
popa
js
aam
scas
fs
rcll
cmpsl
sub
adc
dec
xchg
cmp
test
in
idiv
add
stc
adc
ja
pushl
test
cmp
icebp
aaa
ljmp
inc
lods
inc
inc
ret
jg
cli
jp
fld
rorb
add
test
lret
cli
cmp
pop
imul
adc
in
pop
jb
mov
cmpsb
and
loop
cli
pushf
insl
test
ror
lods
dec
pop
and
test
mov
into
pop
push
mov
sub
in
mov
sbb
mov
mov
lods
jbe
sbbb
add
das
lea
cwtl
sbb
xchg
cmpsl
xchg
push
dec
les
inc
arpl
jl
loopne
cmpl
repnz
rcrb
and
mov
xor
jp
call
iret
sahf
sub
insl
mov
outsb
mov
cli
dec
lahf
jl
bound
aaa
jecxz
sub
add
sbb
cmp
push
xor
push
sbb
ljmp
fs
popa
fs
jne
and
add
or
pop
popf
push
lods
imul
sbb
in
sahf
xchg
rclb
loopne,pn
mov
int3
cmpsb
std
fbld
and
mov
test
jb
push
push
jae
xchg
inc
adc
or
add
leave
popa
bound
xlat
dec
mul
ljmp
mov
decb
sub
cmpsb
fs
jns
sbb
mov
and
test
ret
in
lret
xor
mov
mov
sbb
xor
jge
stos
and
movsl
scas
and
jl
popa
inc
and
fwait
dec
sbb
jecxz
aas
xchg
shlb
lods
inc
cmp
movb
repnz
mov
sbb
push
pop
in
xor
rcrl
mov
pusha
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
mov
and
push
xchg
mov
mov
mov
arpl
mov
mov
lret
pop
mov
xor
imulb
sub
and
jae
xchg
add
add
inc
pop
lret
jg
sbbl
clc
fbstp
mov
loopne
push
ljmp
in
jmp
cmp
fsubs
icebp
out
mov
pop
insl
addr16
mov
loop
test
incl
insl
xor
dec
lahf
aad
sti
call
pop
mov
xchg
lds
jg
arpl
ds
imul
pusha
std
ss
testb
xor
fmul
xor
outsl
ja
push
xor
mov
int3
push
dec
data16
sar
sub
lods
sahf
inc
lcall
int
jle
jmp
jo
les
in
mov
sbb
filds
inc
cwtl
shrl
xchg
push
fisubrs
and
mov
inc
cmp
lret
mov
push
and
je
mov
pusha
sbb
dec
xchg
inc
mov
push
stos
sub
pop
xor
addr16
sub
push
dec
xchg
add
fmull
cltd
pop
add
ljmp
xlat
fcoms
cmp
jg
lcall
lahf
in
pop
lahf
je
adcl
fimull
xor
fisubs
insb
and
nop
push
xchg
sbb
jo
adc
or
lods
xor
pop
ljmp
lcall
inc
fwait
clc
and
ficomps
push
xor
leave
inc
out
rcll
push
and
or
lods
in
cmp
adc
loope
inc
xor
cld
filds
sbb
popl
in
add
push
jg
mov
stos
movsl
daa
popa
mov
inc
rcrl
out
adc
dec
mov
jp
push
pop
stos
lahf
jne
stos
out
and
xchg
mov
xor
adc
cli
fldl
and
loopne
cmovo
pop
adc
mov
imul
ror
mov
add
fisubs
cs
dec
mov
rcll
inc
loope
dec
test
daa
popf
mov
mov
mov
pop
jb
adc
jge
test
popf
cmp
aaa
test
iret
inc
sahf
add
mov
dec
xorb
add
sub
dec
inc
stos
adc
test
test
loope
iret
inc
pop
mov
and
cltd
pop
arpl
sbb
out
loop
mov
nop
aad
bound
pop
and
fisttpl
test
outsl
push
jge
ret
stc
cltd
sub
push
mov
cmpsb
mov
and
pop
jle
add
dec
shl
inc
sti
cmpsb
mov
xchg
adc
insl
inc
push
mov
sub
xor
mov
cs
mov
adc
pop
sti
lret
in
outsb
shlb
adc
popf
and
aad
push
fwait
or
mov
setns
popa
jns
mov
mov
cmc
mov
pop
int3
sarb
movsb
es
lds
lcall
lea
or
push
clc
out
push
ficompl
aad
push
xor
lods
jmp
xor
jae
outsl
sbb
paddusw
push
cmpsb
xor
adc
into
xchg
add
sbb
push
push
int
add
push
jl
scas
xchg
jmp
mov
fdivs
je
mov
sbb
push
lock
mov
js
sbb
aad
cmp
lock
jne
ret
adc
push
jp
or
in
push
mov
adc
xchg
inc
inc
cmc
xor
push
aam
cmp
sbb
lock
sub
lea
mov
and
negl
mov
rcll
popa
adc
and
mov
dec
sub
data16
cmpb
adc
sbbb
imul
add
ud1
lock
imul
lcall
jge
shrl
das
push
or
adc
mov
sub
push
in
push
cmc
dec
inc
stos
test
shrb
repnz
call
and
rol
push
dec
or
fldl
stos
pop
loopne
pop
push
out
mov
addr16
adc
rolb
inc
inc
shl
adc
add
mov
pop
dec
add
xor
pop
nop
in
inc
sbb
sub
cwtl
mov
mov
outsl
aas
ja
in
xlat
jno
inc
mov
ret
lods
test
test
mov
mov
sahf
mov
out
es
pop
xchg
inc
mov
hlt
pop
addr16
or
sub
ljmp
lock
xor
aad
mov
adc
sub
sbb
mov
pop
cwtl
push
lds
movw
mov
sarl
fcmove
mov
push
cmc
xor
outsb
push
movsb
add
aad
lahf
cmp
dec
cli
push
jle
push
cwtl
icebp
outsl
cmp
and
ljmp
add
test
add
xchg
test
xchg
fimull
mov
addb
shll
sbbb
loope
pop
aaa
or
xchg
push
shll
jbe
xchg
push
sti
pusha
inc
pop
loopne
movsl
inc
push
or
out
mov
mov
movsb
inc
push
add
dec
dec
stc
inc
sub
in
fs
xor
adc
adc
lds
or
hlt
leave
imulb
daa
fidivl
and
std
movsb
pop
jbe
inc
sti
lock
adc
cmp
out
aam
xor
push
movsl
insb
pop
mov
cmp
sub
int3
add
nop
mov
rorb
ret
xchg
dec
movsl
pop
mov
push
mov
bound
rolb
jae
or
cmpsl
jo
mov
enter
xlat
jnp
es
mov
insl
inc
push
lea
sub
xor
mov
xchg
push
push
push
aad
xor
adc
jle
or
xchg
push
popf
cmp
pop
jo
cwtl
bound
jl
sub
xchg
xor
and
inc
jae
outsl
fnstsw
and
ds
fcmovu
test
mov
add
cmpsl
rolb
iret
adc
inc
pop
fidivrs
dec
paddusb
mov
in
out
mov
cmp
imull
leave
jle
out
popf
push
dec
je
sbb
sbb
mov
inc
pushf
push
sub
in
push
cmp
and
inc
and
test
pop
ss
mov
push
jno
dec
pop
mov
daa
in
inc
shr
xchg
mov
pop
iret
fldt
mov
jo
jb
cltd
add
in
jmp
inc
jbe
sub
xor
pushf
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
daa
push
mov
and
push
cmp
push
out
ss
test
xor
fcoms
icebp
push
pop
cmp
fisubs
add
fs
jl
push
push
push
jge
out
inc
jle
bound
stc
negb
adc
or
or
inc
popf
pop
stos
ficoms
push
mov
icebp
negl
xchg
mov
sub
movsl
push
test
mov
jbe
push
or
loope
and
testb
jge
push
push
clc
add
pop
movsb
icebp
loopne
and
std
dec
shll
cli
mov
inc
cmp
pop
js
cmp
add
mov
icebp
sub
out
cmp
fisubrl
aaa
xchg
rcrb
lods
lret
sub
add
mov
inc
cmp
cmpsb
cwtl
sbb
dec
sbb
mov
and
out
inc
ret
mov
sti
xor
ss
xor
mov
mov
add
mov
push
fs
xchg
adc
loop
xor
dec
pusha
daa
or
inc
jb
insl
out
ret
add
pop
mov
mov
into
jb
cli
ja
cwtl
adc
or
test
sahf
loop
mov
sbb
push
inc
sahf
and
mov
push
test
movsl
push
pop
pusha
shll
ja
add
dec
inc
pop
lods
push
pop
rolb
fwait
stc
decl
pop
add
bound
ret
xchg
insl
daa
out
cmp
add
jg
loop
adc
or
and
adc
es
push
arpl
insb
vsubss
lods
in
test
lahf
shl
jb
xchg
push
je
cmovbe
lret
sti
mov
push
jp
dec
aaa
fwait
mov
or
fistpl
repz
sub
insl
push
cs
pop
pusha
push
mov
das
pop
outsb
out
xchg
mov
sahf
mov
test
sbb
ds
ss
pop
popa
cmp
mov
pop
cmp
dec
push
ss
jb
pop
sbb
insl
in
dec
mov
pusha
mov
mov
xchg
aaa
adc
pop
mov
pop
sub
outsb
jns
lods
shl
mov
mov
in
and
or
subl
jo
into
fucom
fldl
inc
dec
jle
jns
insb
cli
mov
rorl
mov
fwait
push
mov
sub
mov
out
mov
pushf
ja
push
outsl
dec
faddl
fistpll
std
push
jg
out
or
push
adc
sub
push
push
sahf
clc
mov
inc
add
mov
cmp
aaa
cs
mov
jb
stc
push
pop
in
xchg
nop
mov
push
jae
iret
aad
enter
cmp
sbb
xchg
jl
outsl
repz
out
sub
add
test
ret
mov
inc
xlat
jnp
sbb
fsts
or
pusha
xchg
ss
pop
jbe
es
cmc
jmp
lock
pop
mov
incl
mov
and
int
shl
icebp
sbb
and
mov
inc
movsl
xchg
gs
insb
js
pcmpgtd
xchg
push
iret
add
jecxz
and
mov
mov
loop
dec
fwait
sub
fnstcw
jmp
push
xor
pop
and
mov
adc
dec
mov
jle
in
test
lahf
test
inc
cmp
scas
inc
xor
mov
push
test
fildl
fwait
sub
bound
xor
mov
scas
test
and
inc
clc
enter
ds
int3
cld
adc
ret
jb
or
pop
sbb
stos
xchg
sub
out
lahf
mov
fidivl
lret
or
jge
mov
fisttpll
fstps
jecxz
popl
or
popf
lods
jne
sub
pushf
mov
and
mov
push
mov
pop
push
push
mov
mov
sti
cmc
fiaddl
xor
dec
add
or
sub
mov
mov
push
jmp
mov
fidivrs
xchg
addl
or
ja
cmp
imul
mov
push
aam
jns
lods
push
sub
inc
mov
sahf
mov
insb
mov
in
mov
push
ret
mov
stos
repnz
xchg
jge
push
push
mov
cmc
cmp
mov
push
jns
mov
mov
pop
stc
mov
cmp
test
addr16
gs
or
mov
sbb
or
in
add
sbb
in
add
sub
mov
cmp
fisttpll
xchg
adc
lret
jne
add
ss
xchg
cmp
cmc
js
ss
mov
xchg
inc
xchg
xor
mov
mov
push
adc
add
cmovbe
xchg
jbe
jmp
fildl
lds
pop
test
push
movsl
inc
movsb
jmp
or
and
cs
push
aam
sti
mov
xchg
stos
mov
lea
cmp
cmpsl
jle
lea
xchg
out
bnd
movsl
xor
and
mov
jns
sub
pop
lahf
inc
sub
ret
nop
outsl
subb
shl
iret
mov
sti
add
fisubl
fdivs
xor
cmpsl
push
sbb
dec
mov
call
test
movsb
loope
inc
xchg
and
jnp
or
mov
in
popf
scas
xorl
jge
push
xor
add
jns
dec
sbb
ja
test
jp
sti
or
retw
mov
adc
adc
jmp
scas
adc
sub
fisubrl
mov
xchg
repz
popf
push
mov
imul
rcrl
mov
ljmp
xchg
fidivrl
push
inc
into
and
inc
push
jmp
outsl
lret
push
rcll
and
in
cmp
or
jp
pop
stos
ss
leave
pusha
push
push
mov
inc
rorl
push
shlb
das
jle
jle
pushf
mov
test
mov
scas
leave
hlt
ror
jecxz
cmp
insl
pop
push
xchg
out
cli
fadds
pop
ljmp
cmpsl
push
loopne
aam
out
das
aas
movsl
loopne
rcrb
ret
xchg
sbb
adc
inc
out
mov
ja
push
rcrb
jg
gs
mov
sahf
pop
divb
inc
dec
jno
xchg
sub
in
xchg
shlb
icebp
jbe
pop
shlb
in
mov
xor
roll
jnp
je
mov
xchg
bound
pushf
and
xor
bound
jae
dec
cmp
mov
add
into
pusha
cmpl
xchg
test
jl
mov
js
dec
fisubl
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
lret
dec
pop
pop
mov
bswap
jge
js
xchg
adc
int
addb
hlt
sbb
pop
and
scas
insb
hlt
bound
lcall
sbb
cmp
xor
mov
repz
push
add
mov
or
data16
mov
das
leave
and
sub
sub
outsb
cld
mov
xchg
dec
jne
cmpsl
loop
sbb
lcall
les
sbb
add
leave
stc
insb
add
pop
pop
inc
sbb
sbb
shll
mov
rolb
cmp
lock
jle
push
mov
xor
hlt
roll
cmp
out
je
mov
inc
loope
jnp
pusha
das
push
mov
ja
cmc
jo
mov
aaa
sti
pop
stos
sahf
sbb
push
jno
or
xor
or
addl
out
in
pushf
add
inc
mov
dec
ss
scas
in
popl
aaa
test
jae
ficoms
jbe
gs
loope
push
ret
js
mov
and
sbb
mov
mov
cmp
jge
and
jb
sbb
mov
cmpb
xor
jbe
sub
inc
xor
sub
jns
cmp
cmpsl
movsl
in
sub
or
loop
mov
daa
out
adc
stos
fimuls
push
pop
jae
pop
jle
out
pop
inc
cltd
pushf
lret
mov
cmpsb
and
dec
dec
arpl
pop
fcoms
shl
or
aam
in
iret
xchg
in
dec
and
popa
ss
xchg
pop
jle
ret
adc
inc
jle
scas
xorb
sub
in
lcall
add
aam
stos
in
pop
push
or
cltd
imul
rcrl
aaa
mov
jno
xor
xchg
or
ljmp
dec
insl
mov
push
repnz
push
es
dec
mov
pop
fstl
or
scas
cmp
shll
xchg
add
and
ret
ror
dec
cltd
cmp
sbb
and
das
fs
call
imul
fwait
scas
shrb
adc
jnp
imul
jmp
sbb
repz
xchg
mov
mov
fsts
es
push
aam
daa
jne
nop
xor
push
xchg
inc
test
idivl
icebp
jo
mov
das
daa
pop
dec
jecxz
xchg
mov
sbb
push
outsl
les
push
pop
and
loopne
mov
test
xlat
mov
push
mov
sub
xlat
mov
xchg
leave
outsl
or
sbb
sub
lods
icebp
mov
add
jns
mov
fdivrl
sahf
push
mov
dec
mov
sub
stos
push
push
aaa
in
dec
jae
mov
dec
mov
test
lahf
scas
aad
jae
push
loop,pt
or
mov
daa
adc
mov
outsb
xor
jge
jns
dec
ss
stc
sbb
xchg
pop
xchg
mov
mov
adc
fldl2e
mov
subl
sahf
testl
enter
pop
cmc
divl
add
cwtl
xor
pop
mov
fcoms
in
push
aas
xchg
lods
leave
xor
dec
das
push
cmpsl
sahf
cs
leave
scas
jns
dec
aad
fimuls
push
inc
and
sub
mov
cmp
sbb
imul
enter
xchg
sahf
push
xchg
test
je
push
int3
in
sbb
sbb
outsl
jg
add
mov
bound
jmp
sub
mov
mov
imul
cmc
jg
sbb
push
mov
sbbl
loope
inc
push
in
push
xchg
js
sub
out
inc
mov
mov
push
lret
std
mov
or
out
cltd
sub
mov
cmp
inc
add
icebp
ret
scas
jecxz
xchg
xchg
and
cli
mov
hlt
xchg
xor
jne
add
insb
popf
adc
movsl
fwait
mov
sub
test
lahf
xor
jbe
cmp
js
in
xlat
jno
xor
push
jp
daa
test
test
mov
push
sbb
add
loope
sub
ljmp
stos
jl
repz
out
mov
and
call
add
aam
pop
aam
test
lock
pop
mov
test
sbb
cmp
aas
jmp
out
mov
xchg
imul
pop
add
aam
mov
push
aam
mov
dec
push
mov
pop
xchg
mov
scas
clc
je
add
mov
or
dec
jg
or
cwtl
dec
push
into
or
mov
es
xchg
subb
or
ret
or
mov
sub
xor
sub
mov
sahf
loopne
mov
mov
adc
or
mov
sbb
push
outsl
lock
mov
lret
dec
ret
enter
dec
dec
fwait
xchg
xchg
lock
jns
pop
ja
pop
out
push
adc
imul
xchg
cmpsl
add
int
mov
nop
sbb
add
daa
or
xorb
inc
arpl
or
inc
jg
sbb
mov
inc
inc
cmp
lods
or
dec
movsb
xor
sub
push
repz
jecxz
sub
and
dec
cmpsl
jno
cltd
repz
addr16
cmp
push
sar
push
jne
shll
mov
es
adc
pop
jns
lea
imul
test
cmp
std
dec
push
scas
xlat
lret
loop
or
scas
rclb
push
lcall
mov
sub
gs
lret
inc
or
lds
loopne
pop
ljmp
adc
mov
popa
ficoml
cmpsb
movsl
cld
addr16
lods
mov
dec
sbb
cmp
cmpsl
sub
mov
pop
lea
sti
int3
adc
push
lret
insl
cmc
sub
mov
mov
or
jg
leave
iret
add
xchg
xchg
jae
nop
pop
jno
mov
jecxz
in
xchg
das
dec
sbb
data16
push
fldt
push
sbb
cmpsl
sti
sbb
and
dec
cli
mov
les
mov
in
cli
push
pop
movsl
push
jbe
scas
mov
loope
push
inc
add
and
call
loop
adc
shr
pop
dec
ret
mov
scas
cmp
push
inc
sub
inc
imul
fidivl
jmp
into
add
or
call
notl
mov
movups
pop
mov
fsubr
adc
daa
rep
outsb
pop
insl
sbbb
xor
repnz
popa
mov
out
pop
into
cmp
pop
dec
push
add
gs
js
mov
ljmp
je
icebp
es
mov
push
push
mov
stos
rcrl
in
jecxz
and
into
enter
insl
cmpsb
xchg
xchg
mov
sub
scas
adc
mov
and
push
shll
xlat
arpl
or
rclb
int
iret
lcall
test
mov
add
adc
orb
test
test
stc
sbb
mov
ljmp
fwait
movsl
xchg
xchg
and
mov
jl
xchg
movsl
sti
xchg
lods
push
mov
mov
out
dec
jns
pop
lock
cmpsb
push
lret
pop
cs
mov
pop
lcall
add
cmpl
jo
add
add
test
sbb
pop
fwait
jae
cld
jae
and
adc
popf
aas
cld
test
inc
scas
mov
mov
fistpll
insb
xor
hlt
jp
xchg
aas
lea
xor
pop
xchg
cltd
popa
add
xor
jb
mov
add
fs
int
cmp
push
jl
dec
dec
stc
mov
xchg
ljmp
push
nop
out
cwtl
or
dec
push
hlt
outsb
add
in
inc
pop
mov
dec
rolb
inc
cli
sbb
iret
mov
std
imul
jno
aad
lock
push
insl
dec
mov
fmuls
fyl2xp1
loope
enter
push
ret
aad
gs
dec
fisttpl
iret
loop
outsl
idivl
mov
nop
mov
mov
nop
push
pushl
mov
mov
cmp
pop
mov
push
xor
sub
sbb
pop
jmp
dec
and
aad
cmp
fiadds
cld
inc
inc
icebp
popf
rclb
and
fcos
mov
inc
shll
pop
xchg
dec
popl
push
mov
aas
pushf
push
sbb
movsl
adc
push
dec
pushf
push
repnz
push
mov
pop
cmp
sub
adc
push
dec
mov
lods
decb
mov
lods
and
pop
out
fcompl
add
fildll
stc
jnp
xchg
pop
mov
imulb
pop
sbb
mov
adc
mov
loop
lods
sub
les
imul
mov
mov
lods
or
cmp
testl
iret
nop
cltd
int
js
push
ljmp
add
mov
push
mov
xchg
xchg
or
lods
testb
cmp
lds
lret
loopne
jecxz
pop
push
enterw
insl
setne
std
out
call
or
aas
pop
sbb
jb
mov
mov
push
push
cs
adc
pop
sbb
jmp
pop
mov
xor
push
fldt
int3
and
jns
int3
jnp
sub
pop
adc
xor
and
imull
enter
xchg
shr
rorb
out
leave
imul
cmp
cmp
jmp
jae
mov
movsl
push
mov
xlat
jmp
inc
mov
leave
movl
mov
out
sub
pop
dec
dec
mov
mov
fwait
repz
leave
jp
xchg
xchg
mov
jno
lds
filds
inc
in
lahf
ds
inc
mov
out
mov
xor
mov
adc
or
es
stos
push
test
pusha
iret
xchg
jnp
ret
xor
jne
movsl
xchg
stc
imul
cmc
mov
aam
out
mov
test
add
fisubl
imul
mov
pop
dec
sbb
outsb
in
inc
out
sub
loopne
mov
adc
test
sbb
adc
js
test
mov
push
fwait
mov
sbb
shrl
pusha
push
sbb
push
xchg
mov
mov
fdivs
iret
adc
mov
push
xor
pushf
mov
add
sbb
sbb
or
mov
fnsave
xor
sti
ret
out
cmp
push
jo
sbb
xchg
insb
imul
movsl
inc
icebp
movsl
push
inc
ja
jge
mov
push
add
scas
adc
das
rcrl
mov
test
insl
test
pushf
mov
cmp
sbb
icebp
inc
out
pusha
jns
das
sti
cs
pop
cwtl
inc
inc
push
xchg
aaa
ret
ljmp
enter
insb
lods
cmp
adc
mov
cmc
push
push
mov
int3
sbb
add
xchg
xchg
cmp
sub
mov
std
xor
dec
ficoml
xchg
imul
cmp
sbb
int3
mov
push
in
add
mov
std
xchg
push
xacquire
push
loopne
mov
cli
stos
sahf
cmovp
arpl
decl
mov
sbb
mov
lret
xor
mov
cmpsb
push
loopne
push
dec
test
stc
je
mov
addr16
jnp
xlat
and
adc
test
leave
ds
dec
stc
leave
orl
fsubr
add
push
fiaddl
into
push
repnz
sbbb
lcall
push
addr16
mov
or
mov
xchg
out
sbb
loope
mov
and
jmp
dec
orl
out
fiadds
fs
bound
push
push
insb
jg
ja
pop
push
daa
sub
jecxz
cmpsb
ja
adc
cwtl
sbb
pop
fsubp
inc
jp
push
pop
aaa
jl
sarl
stos
enter
mov
dec
mov
mov
pop
xor
iret
push
dec
pop
and
sub
and
lret
shl
dec
movsb
push
jb
popf
dec
aas
cmpsl
jl
leave
shlb
fdivr
rcll
rcrb
jno
or
pop
fs
pop
popf
inc
movsl
fisttps
repnz
pop
jbe
mov
cmp
inc
iret
inc
cmpsb
xchg
jns
in
outsb
pop
aas
es
subb
cmp
int
jno
adcl
outsl
cmp
pmulhw
test
jb
sub
data16
inc
xchg
clc
test
cmpsb
ja
out
add
mov
into
in
inc
mov
das
inc
lods
jae
pushf
sbb
ja
dec
ss
lret
fmull
ja
xchg
mov
mov
jbe
dec
jmp
lock
aad
lods
loopne
xchg
ret
dec
lret
leave
mull
rcll
ja
cld
xchg
xchg
pop
push
scas
adc
es
test
orb
push
mov
in
and
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
mov
in
adc
and
fisubrl
shlb
pusha
fldenv
jns
xor
or
inc
and
or
xor
cmpsb
in
jne
jo
adc
imul
xchg
push
dec
xor
mov
lahf
adc
mov
mov
adcb
ret
pop
gs
sbb
inc
fcomi
or
cmpsl
xchg
jbe
and
out
jg
je
xchg
mov
mov
mov
cmp
jns
pop
addr16
xchg
sub
fstl
adc
xchg
insb
xor
aam
cltd
mov
sbb
in
sbb
sbb
mov
loope
adc
xchg
fs
jae
icebp
popa
imul
arpl
cmpsl
xchg
xchg
mov
test
add
add
out
sub
sub
jno
cmpsb
fstl
lods
nop
fmuls
pop
lods
or
nop
push
imul
ja
cmp
push
insb
mov
movsl
mov
mov
iret
decl
outsb
dec
mov
adc
pop
imul
add
cli
or
push
sbb
inc
outsb
jl
push
icebp
cmp
lcall
xor
dec
sbb
lcall
sbb
jnp
push
mov
ss
push
mov
mov
jmp
push
push
jp
or
dec
xchg
cwtl
insl
jo
aad
insl
sbb
cmp
mov
scas
sub
jns
je
das
cmp
or
lock
jg
jb
outsb
sbb
cmc
jmp
jg
xor
repnz
subb
test
cmp
inc
loope
js
xchg
idivb
xchg
inc
xor
mov
sub
sub
jbe
jge
dec
inc
insl
mov
rcll
imul
jnp
bound
push
add
ja
fsubr
ret
dec
lea
fs
xchg
inc
adcb
mov
sub
and
push
xor
stos
dec
jp
mov
mov
pop
cmc
shll
inc
daa
sbb
imul
out
mov
lahf
xchg
pop
cli
inc
mov
add
push
inc
lret
cmpsl
xor
mov
movd
aas
mov
fstps
ja
jp
inc
jae
mov
rcrb
add
cld
dec
shrb
stos
xor
lea
data16
aam
xchg
cltd
jge
out
mov
and
adc
mov
jno
jmp
into
cwtl
loop
bound
add
xlat
lcall
jne
ret
in
aam
loope
scas
sbb
mov
mul
in
shll
cli
lock
push
inc
or
out
xor
or
push
and
xor
pop
aad
cmp
in
cs
or
ljmp
cmpl
test
daa
fs
rol
jp
es
insl
jmp
idiv
movsb
jp
and
stos
test
clc
aam
push
mov
mov
adc
pusha
xlat
mov
adc
fs
mov
and
es
mov
push
movsb
jmp
push
cmp
imul
adc
sub
pushf
cmp
ja
adcb
adc
ja
clc
inc
cltd
cmp
add
les
xor
aad
push
cld
mov
inc
adc
cld
or
pop
lahf
dec
push
shl
in
adc
repz
inc
dec
jmp
loope
fldenv
inc
xchg
test
xchg
inc
sub
or
fs
fs
or
sub
scas
cs
test
sti
aaa
outsb
xchg
mov
std
fcomps
sbb
in
xor
xor
add
or
out
push
stos
add
jmp
pop
push
pop
fdivrs
enter
mov
mov
shlb
ret
sbb
xchg
stos
test
movsb
and
mov
xchg
pusha
imul
shll
mov
cld
pop
into
push
jmp
cs
jo
and
in
cmp
movsb
xchg
scas
add
xchg
imul
subl
mov
stos
cli
push
sub
ror
mov
sbb
popa
xor
jb
mov
gs
fcmovne
loope
out
jle
pop
fwait
xor
mov
test
bound
sub
inc
das
fdivp
and
lds
into
scas
mov
cs
push
dec
push
add
ds
mov
inc
sub
push
mov
and
push
xor
mov
and
mov
lods
lods
jno
xor
fnstsw
les
push
popf
pop
sti
pop
cld
xlat
dec
cmc
imull
mov
cltd
cmp
rcl
cmp
ret
jnp
insl
fstpl
push
out
jg
jbe
sub
sbb
aas
outsl
sub
mov
add
jl
add
lock
and
lahf
and
pop
adc
lret
outsb
cmpsb
add
xor
mov
test
aad
flds
into
sbb
enter
sbb
mov
insb
inc
insb
cmp
adcl
pop
fisubl
aas
pop
daa
lods
call
push
lea
ret
fildl
xor
mov
cmpsb
movsl
jp
xchg
sub
lods
movsl
ficoml
push
and
pusha
sbb
sbb
or
mov
adcb
mov
xor
repz
sbb
mov
inc
iret
dec
pop
mov
bound
jmp
push
dec
or
pop
loopne
mov
rclb
mov
aas
jmp
mov
fstpl
aam
lods
pop
loope
jb
xchg
lea
lret
sahf
adc
and
dec
test
test
sbb
stos
dec
rcrb
or
fadds
fldcw
clc
mov
fcoml
mov
lcall
clc
aas
stc
cmp
add
cmp
out
stc
enter
hlt
in
addr16
pop
int3
push
push
in
je
into
cs
call
inc
subb
mov
pop
sub
sbb
sub
inc
dec
fnstcw
sbb
mov
je
jmp
sbb
popf
push
aaa
pop
push
mov
or
jae
in
and
mov
mov
xchg
cs
xchg
pop
add
out
jecxz
inc
sub
cmp
pop
fprem1
sub
xor
ds
mov
aaa
lcall
not
mov
mov
repz
add
test
in
add
fsubl
ljmp
xor
mov
xchg
jge
or
in
cmp
vcmpps
pop
icebp
lcall
in
scas
jg
ss
subb
or
iret
das
lahf
fld
mov
jecxz
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
pop
jmp
adc
and
movsb
repz
push
in
adc
sub
xor
fsubrl
aam
sbb
test
gs
leave
xchg
ss
add
call
jne
xchg
jb
adc
inc
dec
call
cs
sub
lds
jge
fucomi
dec
jle
fld
mov
dec
add
movsl
rcrb
cmpsl
pop
lock
mov
push
sbb
push
mov
fdivp
dec
push
mov
ds
andl
dec
mov
arpl
dec
cli
outsl
mov
jmp
pop
lcall
mov
out
add
pop
xor
inc
ret
imul
imulb
pop
dec
sbb
xor
cmp
sbb
movsl
jns
push
ss
in
je,pt
xchg
out
cmp
push
xor
sahf
cmp
imul
cli
and
jg
push
xchg
scas
and
xchg
addr16
jae
stos
inc
sbb
mov
push
in
movsl
nop
dec
ret
sub
shl
repz
lret
stos
sub
mov
fnstsw
add
jo
popf
mov
xchg
fwait
or
bound
dec
or
hlt
inc
push
js
imul
add
call
fadds
movsl
mov
orl
xchg
aas
stos
or
mov
dec
das
dec
pushf
fcmovu
jge
or
and
sbb
fsubrl
mov
xchg
sbbb
jnp
inc
mov
outsl
es
jecxz
iret
or
sub
sub
pop
iret
js
lods
push
out
mov
dec
loop
test
xchg
fildl
dec
xchg
insb
cmp
mov
lret
jge
add
lret
lret
mov
xor
jge
nop
inc
and
mov
pop
xchg
push
bswap
ss
xchg
sub
int
shr
jne
push
jecxz
jnp
sub
sub
daa
jecxz
imulb
nop
sub
cmpsb
or
movsl
add
add
loope
jno
dec
push
sub
ja
sub
sbb
out
les
pop
fistpl
push
sub
push
outsb
shlb
adc
shlb
cmpsb
adc
xchg
adc
lods
lea
inc
aaa
add
insl
cmp
sub
add
ret
mov
cmc
cld
sbb
adc
flds
ljmp
sarl
es
and
out
ljmp
adc
jmp
popf
xchg
jae
cmc
sbb
leave
xchg
jmp
imul
inc
mov
adc
sbb
xor
aaa
fldt
cmpsl
mov
jecxz
pop
sbb
cli
and
inc
imul
out
xlat
mov
iret
push
mov
cmp
push
jno
xchg
imul
repnz
xchg
dec
xor
sbb
in
xor
jno
mov
into
notl
jb
in
add
in
out
cmpsb
adc
mov
sbb
mov
lods
hlt
gs
iret
cmp
add
arpl
xor
and
in
xor
adc
les
insb
sub
add
aaa
repnz
jo
test
insb
or
addr16
shrl
mov
sbb
pop
cmp
inc
mov
sbb
cmp
jae
int3
loope
pop
and
movsb
repnz
adc
push
add
or
pop
mov
cmp
pop
mov
cmp
jp
out
sahf
sub
aam
inc
push
call
sbb
nop
and
out
imul
lahf
push
ret
or
or
gs
and
pop
arpl
sarb
sbb
out
xchg
rorb
add
and
lahf
inc
das
jo
arpl
adc
push
add
sub
enter
nop
cmp
pop
aam
push
add
mov
or
fnsave
pop
inc
push
jne
mov
fldl
sbb
adc
xchg
in
aam
sub
or
inc
js
or
fidivrl
lret
cltd
outsl
cmp
lds
ss
sbb
int3
and
enter
clc
ss
daa
in
mov
clc
sbb
mov
ds
pop
xor
in
ja
mov
and
sub
fsts
mov
call
mov
jp
push
push
jge
xor
xor
clc
insl
push
movsb
icebp
xchg
sti
jle
ds
xor
inc
shll
cmpxchg
addr16
js
push
loop
lcall
fsubs
fs
je
or
dec
sbb
leave
subb
or
in
cwtl
icebp
jne
pop
or
repz
popa
subl
inc
jmp
xor
fldt
push
inc
mov
and
js
push
nop
jne
xchg
mov
ss
pop
sub
clc
mov
xor
sub
int3
ret
cwtl
push
fidivl
mov
pushf
lock
movsb
jmp
pushl
xchg
movsb
pop
fsubrl
clc
dec
mov
mov
add
inc
or
cmp
push
inc
lds
mov
xchg
jge
pop
fsub
stos
sub
addb
pop
mov
insl
pop
cmp
cli
scas
jle
xor
nop
pop
mov
jecxz
es
test
inc
xchg
push
mov
sub
or
loope
sbb
add
std
mov
fs
ds
sbb
push
mov
jg
pop
dec
push
inc
mov
outsl
push
arpl
pushf
shlb
notl
mov
cmovge
cwtl
icebp
dec
jmp
cltd
aam
pop
dec
lret
rcl
push
je
inc
insl
jo
pop
jbe
cmp
inc
mov
inc
out
aam
dec
cld
sarl
push
iret
cmpb
lods
inc
push
sub
mov
dec
push
xor
inc
or
es
inc
jbe
or
sub
lret
sbb
int
pop
out
and
scas
icebp
jg
fidivrl
sub
jnp
gs
clc
ss
xchg
add
frstor
imul
inc
mov
aad
cwtl
or
sbb
or
mov
je
mul
dec
shl
sub
mov
xchg
movsb
jb
mov
mov
or
push
jae
add
push
push
fsubp
lock
shrb
and
scas
imul
mov
add
dec
je
addl
stos
fucom
sbb
mov
out
lods
popf
test
mov
aas
mov
popf
fnsave
les
xchg
mov
cmp
jo
subl
pmulhuw
cmpsb
pusha
fxch
outsl
mov
hlt
push
mov
adc
jg
cmp
pop
enter
inc
add
nop
movsb
jle
shrl
mov
loopne
xor
mov
jmp
cmc
xchg
cmp
push
mov
adc
dec
push
inc
int3
adc
and
xchg
inc
lods
stc
int3
mov
or
and
sarl
xor
add
xchg
mov
xchg
ljmp
int
push
jge
into
xchg
ss
jb
add
shrb
lock
pop
mov
pop
pop
inc
pop
xor
aad
dec
les
and
fldcw
mov
sub
sbb
xchg
sbb
jns
xchg
cmp
push
gs
xchg
pop
rcrl
mov
mov
jle
or
xchg
outsb
cmp
sti
push
iret
les
xchg
xor
in
inc
outsl
scas
jnp
das
dec
lret
xchg
mov
pop
mov
mov
movsb
push
clc
sbb
cli
jl
les
xor
dec
rorb
sbb
das
loop
adc
sub
jne
jmp
cld
sub
repnz
inc
incl
sbb
sarl
in
sarb
loopne
or
dec
pop
pop
jl
cmpsb
xchg
rcrb
daa
addl
add
out
adc
iret
cwtl
lock
gs
ds
popa
pop
cmp
outsl
fstpt
mov
push
inc
push
dec
cmp
sbb
es
loop
cld
add
xor
dec
sub
sub
mov
jge
pusha
out
mov
js
ds
cmpsb
ret
or
test
jecxz
out
test
cmp
cld
fwait
cmp
cmp
mov
and
pushf
fbstp
hlt
sbbl
xor
or
mov
push
add
jmp
pop
scas
fst
and
push
vmwrite
roll
and
les
int
test
dec
popf
xchg
xchg
mov
mov
xor
mov
icebp
xchg
jae
sbb
and
lahf
pop
or
cmp
inc
jge
pop
icebp
xchg
call
scas
repz
jb
call
ret
sbb
adc
sub
dec
lea
jecxz
mov
push
mov
mov
xlat
xor
fs
push
jnp
jbe
xlat
inc
iret
and
mov
repz
push
imul
jno
hlt
cwtl
add
lcall
xchg
call
add
sbb
stc
f2xm1
das
xor
jb
movsb
in
add
ret
mov
insl
add
sbb
out
cld
cmp
xchg
rcr
jecxz
mov
cmp
push
or
insb
add
fcompl
fistl
das
pop
lret
push
xor
dec
mov
add
xchg
cmpsl
dec
mov
imul
pop
mov
inc
dec
fs
insl
outsl
mov
mov
xchg
out
imulb
xlat
xor
ds
xchg
mov
arpl
lods
in
sarb
xchg
movsl
push
cli
xchg
shll
adc
jp
cmp
adc
loop
xchg
stos
add
lret
sbb
push
mov
cmpsl
fisubs
lea
sbb
mov
mov
xor
adc
dec
xchg
and
sbb
xchg
push
and
shrb
sbb
cwtl
inc
adc
mov
imul
dec
pop
xchg
in
jb
inc
or
cmpl
or
fs
frstor
mov
scas
movsl
xor
mov
jnp
faddl
cli
lret
addb
sub
jmp
push
fisubs
rcll
add
xchg
add
ds
sbb
pop
sub
inc
jmp
js
cmp
fisubrs
cmp
lods
aas
jg
mov
xor
es
ds
adc
test
dec
dec
lret
cmpsl
jmp
std
lcall
mov
jmp
lea
je
adc
test
cmp
cmp
jae
pusha
cmp
push
xor
push
xor
mov
jbe
push
into
cmp
aaa
sbb
mov
fldl
mov
int3
fildl
test
lcall
add
loop
push
movsb
out
lds
xchg
pop
into
test
jecxz
scas
or
pop
hlt
mov
dec
and
leave
adc
inc
nop
or
insl
filds
mov
xchg
insl
xchg
sbb
xor
pushf
in
insb
movsb
mov
pop
cmpsl
in
enter
stos
js
negl
push
jp
lahf
inc
adcl
inc
lcall
add
aad
mov
test
jo
imul
push
clc
in
nop
lahf
ret
mov
pop
pop
inc
jmp
push
sub
adc
or
xor
outsb
roll
test
dec
ds
add
out
or
xchg
xchg
in
inc
imul
pop
stc
fcomi
mov
and
clc
add
pop
mov
test
shr
pop
fcomps
lods
mov
push
mov
push
mov
sarl
sbb
leave
push
mov
movsb
cmp
push
jbe
ljmp
inc
jmp
aam
sub
and
push
mov
and
ds
cmp
xchg
ljmp
cmp
cmc
arpl
das
call
cmp
mov
cld
nop
ss
or
cmp
lea
leave
fs
xchg
mov
push
rcr
mov
leave
mov
dec
in
jae
xchg
jmp
mov
mov
push
sub
aaa
ffreep
lahf
and
fildl
mov
in
cwtl
mov
xchg
in
fimull
mov
sub
flds
jl
sbb
mov
push
cwtl
std
lds
jp
aas
ficoml
pop
lea
inc
dec
insl
jno
mov
xor
pop
and
ds
fisubrl
popf
addl
popa
xor
xchg
call
xchg
and
inc
jae
addr16
leave
mov
in
in
jo
in
xor
std
and
mov
aaa
out
and
ffree
pop
sbb
adc
add
mov
test
aaa
mov
and
xor
dec
push
hlt
add
sbb
adc
pop
jo
dec
sti
bound
lcall
ss
inc
insb
mov
xchg
test
jl
jns
adc
aad
pop
dec
aad
cmp
loope
cmp
jns
out
adc
movsl
mov
jb
imul
dec
fsubrs
ret
aam
fisubl
xchg
iret
lods
cmpsb
repz
jmp
out
mov
inc
cmpsl
shrb
dec
cmp
les
cld
lahf
dec
push
jecxz
mov
arpl
mov
faddl
cmove
bound
pop
add
inc
lret
push
ucomiss
aad
pop
jno
arpl
pop
and
xchg
pop
inc
push
out
jae
mov
mov
idivb
dec
shl
fldt
adc
cmc
mov
ja
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
push
pop
mov
rdpmc
sub
ficompl
ja
cwtl
daa
test
jbe
mov
test
cmp
in
sbb
test
pop
divl
add
sub
push
or
lock
sbb
mov
pop
mov
adc
ja
and
mov
out
mov
call
cmp
sahf
xlat
idivl
jbe
fdivl
xlat
pop
push
fwait
push
mov
cmp
aaa
loope
cmpsb
cltd
inc
je
push
or
mov
xchg
fprem1
sbb
outsl
push
pop
nopl
movsb
dec
xchg
jmp
xor
dec
notb
in
pop
mov
dec
pop
mov
dec
jmp
aad
dec
jb
lcall
je
cmpsl
push
leave
pop
xchg
jb
add
cmp
xchg
mov
mov
into
daa
or
dec
pop
pop
inc
adc
or
push
das
mov
pushf
push
sub
sbb
mov
test
mov
lods
ljmp
and
repz
and
arpl
sub
push
pop
fwait
cs
mov
lcall
and
rorl
add
sub
jnp
jne
inc
outsl
xchg
std
mov
out
sbb
aaa
mov
int3
pop
scas
cwtl
add
pusha
inc
subb
cltd
pushf
int
mov
mov
in
jnp
int
jp
loope
les
in
inc
mov
jo
sub
mov
xor
inc
flds
mov
ds
lret
mov
inc
sbb
push
sub
je
pop
mov
out
out
push
pop
aad
negb
neg
pop
cld
sti
fstps
push
jnp
xchg
movsl
aam
cmpsb
mov
std
in
sahf
push
bound
test
mov
sbb
lahf
pop
shlb
lret
sbb
xor
stc
xor
mov
popa
mov
lock
enter
and
inc
lds
stos
push
filds
jne
lahf
cmpsl
les
je
sarl
int
pop
mov
lods
movsl
inc
mov
lret
stc
pop
inc
or
popf
lock
mov
push
dec
jo
movsl
jge
orl
mov
lock
stos
ja
bound
cltd
rorl
push
and
pop
mov
lea
and
mov
jb
jo
jno
mov
bswap
pop
rorl
adc
insb
bound
jne
ds
js
or
scas
mov
or
out
push
into
pusha
dec
jns
pop
xor
stos
inc
sbb
mov
out
mov
dec
lock
std
or
fsubs
clc
xchg
lret
mov
aam
test
sub
xchg
out
xchg
cltd
hlt
mov
insb
push
out
scas
jle
aam
div
js
lret
gs
nop
mov
mov
pusha
inc
ret
repnz
sbb
fstps
pop
inc
push
das
mov
jb
cmp
mov
mov
insl
push
xor
outsb
dec
or
lcall
dec
nop
adc
adc
cmp
pop
aas
dec
adc
outsb
and
aaa
lahf
or
out
adc
and
adc
or
mov
imul
ja
mov
xchg
imul
out
iret
into
shl
es
and
adc
jp
add
sbb
ret
sarl
inc
sbbl
cld
mov
cs
enter
scas
jmp
push
lahf
adc
scas
loop
popl
push
int3
push
xlat
pop
push
dec
cmp
and
arpl
fs
mov
inc
test
fs
or
lcall
mov
imul
push
es
inc
repnz
and
out
ss
jl
mov
sti
je
loop
insb
push
cmp
lahf
cmpsl
lock
in
mov
jb
ss
inc
xor
xchg
fwait
in
sub
les
test
in
add
xchg
xchg
push
jo
inc
cmp
out
dec
arpl
ret
aaa
sub
stos
mov
inc
stos
lea
jmp
shlb
ret
out
data16
sahf
popf
mov
dec
jl
out
push
dec
ret
dec
bound
sub
xor
pop
push
mov
mov
scas
jns
xchg
rorb
out
outsl
ret
jns
mov
xchg
shll
dec
rcrl
rolb
repz
out
push
push
cmc
xchg
cld
shll
mov
test
mov
or
adc
lea
or
sbb
rorb
pop
xor
sarb
adc
scas
lret
xor
or
addr16
pushl
ljmp
ret
fadd
int3
or
fcoml
shll
mov
mov
roll
xor
cwtl
testb
dec
and
jle
xor
mov
dec
mov
test
adc
cmpsl
dec
in
subl
scas
mov
sti
inc
leave
inc
jne
adc
movsl
xchg
aas
cmpsl
dec
stos
call
cs
pushl
and
rcl
lahf
fs
inc
jecxz
or
inc
cmpsl
aas
aaa
jnp
lods
into
imul
out
mov
pop
mov
dec
jnp
jle
jecxz
sub
out
lcall
insl
fwait
inc
aam
das
adc
call
std
adcb
hlt
rcll
xchg
gs
call
jbe
or
loop
xor
inc
scas
jmp
mov
int3
ds
es
inc
addb
test
insl
js
inc
aas
add
mov
adc
lahf
xchg
pop
out
lods
negl
cwtl
lea
add
lods
dec
aad
or
mov
cli
stc
ds
inc
inc
aas
or
inc
xchg
stos
and
loop
sarb
testb
mov
adc
addl
test
cwtl
adc
repnz
sbb
cmp
insb
and
lret
sbb
popf
int3
nop
push
sub
push
test
ret
xor
cmpsl
push
and
orb
sub
jb
xor
imul
inc
mov
mov
push
enter
lods
push
adc
and
fs
xchg
push
push
add
cwtl
lahf
ret
sub
jns
inc
and
ffree
add
pop
mov
sbb
call
int3
imul
rcrb
pop
fdivrl
sbb
sub
sbb
add
and
dec
pop
dec
andl
mov
mov
sbb
xchg
dec
jge
stos
lods
add
inc
popf
push
aam
test
adc
and
and
inc
cmp
hlt
fwait
in
sbb
in
and
mov
mov
inc
jecxz
outsl
pop
xchg
xor
movsl
jp
push
mov
cmp
push
sbb
sub
je
jmp
scas
mov
cwtl
inc
rcrl
jg
mov
xor
and
and
jmp
jne
add
subl
xchg
xchg
repnz
js
ret
and
loopne
sub
inc
push
and
sbb
andb
dec
int3
mov
fiadds
mov
dec
fs
insl
xor
or
fstpt
inc
mov
jecxz
xchg
loopne
cmp
popl
and
mov
jae
sub
movl
int3
xchg
outsb
fdivrp
fs
dec
andl
fimull
hlt
mov
cs
xchg
scas
xor
xor
push
daa
sub
push
das
push
cmpsl
andb
cmc
mov
xchg
in
mov
jne
inc
mov
scas
jnp
dec
jnp
rcrb
sbb
cmp
mov
cli
fdivrs
daa
cmpsl
pusha
es
fistl
pop
shlb
pop
repz
enter
shl
xchg
jmp
icebp
insb
test
mov
clc
lahf
cmpsb
jg
sbb
and
fwait
leave
ret
fsubs
pop
xchg
push
xchg
xchg
icebp
cmp
jecxz
int3
sub
lods
jge
jmp
mov
out
daa
paddw
jbe
mov
inc
aaa
fcomps
pop
sub
notb
adc
lcall
and
inc
push
pop
popf
lods
ss
popf
call
and
stc
push
or
sub
mov
mov
mov
outsl
and
inc
insl
outsl
ja
aad
xchg
mov
sbb
ljmp
push
add
pop
addb
sarl
lea
sbb
pusha
sub
ret
xor
cmp
outsl
daa
fists
pusha
loope
je
addr16
stos
std
mov
xor
fstp
das
or
cld
dec
ret
sub
inc
push
push
xor
jb
cmp
and
pushf
dec
out
push
mov
pop
adc
add
scas
out
out
pop
jne
int3
push
repnz
rcrb
dec
or
mov
enter
rcrb
arpl
cli
stos
sbb
or
aam
ljmp
imul
imul
aam
add
sarb
ja
xchg
lods
adc
test
ja
push
cli
add
cmpb
in
enter
mov
sub
and
outsb
bsf
adc
imul
loope
std
sbb
bound
loope
outsb
inc
in
aas
xchg
xchg
xor
add
xor
enter
cmp
sbb
cmp
sub
shll
pop
mov
mov
push
in
cmp
and
insl
mov
ja
push
sub
leave
xor
xlat
mov
aam
test
scas
loope
push
mov
daa
jae
jbe
stos
stc
mov
out
lret
inc
xchg
imul
rdtsc
stos
mov
rcl
addr16
das
lcall
xchg
mov
ret
repnz
sub
sub
faddl
out
sbb
xchg
push
cmp
mov
add
cli
push
in
push
sahf
xlat
aad
nop
into
aam
movsb
sub
mov
or
cmp
xchg
jno
inc
pop
sbbb
sub
repz
xor
in
lods
push
ret
push
mov
mov
jae
mov
pusha
adc
les
push
lock
inc
xor
lea
xchg
je
daa
mulb
outsl
dec
ja
cwtl
movsl
xchg
lretw
enter
sbb
xor
imul
adc
lcall
out
mov
mov
adc
xor
and
lock
les
sqrtps
xor
mov
pop
pusha
sub
divb
les
cwtl
push
xchg
sbb
or
fs
mov
les
mov
sbb
jno
ret
sbb
cwtl
call
xor
pop
ficoms
pcmpgtb
push
jp
inc
in
mov
jbe
adc
insb
ret
iret
cmpsb
sub
jo
notl
pop
int
xchg
and
rorl
inc
ss
xorb
dec
daa
pop
outsb
mov
loopne
mov
push
mov
inc
scas
dec
mov
sti
mov
cmp
mov
jp
mov
pop
xchg
inc
mov
sti
sti
and
psubusw
lds
cli
popf
mov
js
int
mov
cmp
xchg
mov
dec
mov
and
rolb
or
inc
push
scas
push
xor
and
frstor
pop
ljmp
dec
sub
cli
cmpsb
mov
addr16
or
outsl
mov
push
add
dec
lret
mov
je
dec
bound
xor
mov
mov
enter
pop
je
cmp
mov
jno
mov
adc
cltd
lahf
mov
addb
popf
mov
rcrl
mov
pop
xchg
add
mov
inc
mov
outsl
cwtl
loopw
lds
or
mov
fsubl
stc
and
pop
and
jns
or
and
mov
pusha
xor
pop
inc
in
pop
jno
iret
repz
dec
pushf
jb
das
mov
push
mov
fcomps
adc
mov
es
push
into
pop
xchg
lret
adc
push
lods
mov
add
movsb
add
mov
inc
xor
rcrb
bnd
dec
jle
add
pop
pop
outsb
dec
call
push
sub
adc
jle
lret
cmpsl
xchg
in
shrb
pop
insb
repz
mov
sub
lock
loopne
adcl
mov
or
movsl
push
jle
les
pop
cmp
aaa
fstpl
ret
and
mov
mov
adc
mov
push
fs
xchg
lahf
jecxz
shlb
movsl
jecxz
sub
ss
mov
jno
ss
sbb
sbb
cmp
sbb
lahf
sub
in
sbb
roll
push
sbbb
add
xchg
hlt
and
repnz
cmpsl
sub
xorb
jle
int3
mov
jl
sub
cmc
popf
dec
pop
cmp
add
dec
daa
daa
je
hlt
cmp
rclb
jg
shll
stos
in
mov
jnp
add
stos
cmp
mov
aad
pop
adc
dec
dec
clc
loop
sub
push
popa
loopne
pop
repnz
inc
pop
js
jae
xor
or
loop
dec
adc
dec
dec
push
aad
pop
mov
loope
jle
pop
mov
push
inc
sub
shrl
ljmp
and
sub
xchg
dec
scas
mov
adc
and
enter
push
sbb
ss
adc
xor
jno
js
xor
and
adc
cmp
mov
sti
rolb
adc
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
push
lahf
cmp
js
adc
and
insl
push
jo
pop
cmp
dec
push
fimuls
xchg
or
inc
inc
je
lcall
sbb
cmpsb
mov
jg
cmp
or
je
pop
xor
icebp
dec
cltd
add
mov
stos
mov
jmp
adc
adc
push
push
push
lcall
xchg
pop
inc
inc
or
mov
mov
imul
add
mov
nop
sbb
fldcw
stos
arpl
pop
into
dec
icebp
pusha
xor
in
lea
mov
xorl
iret
std
inc
add
aad
lods
mov
pushf
dec
mov
dec
shll
loope
mov
mov
mov
adcb
xchg
or
add
cltd
fstpl
in
jae
shl
mov
inc
add
pop
push
jmp
gs
xor
fmull
jne
xor
push
xchg
clc
sarb
outsl
icebp
outsl
cmpsl
xor
cwtl
jo
incl
or
jno
sbbl
mov
cmp
mov
mov
or
icebp
outsb
cld
adc
mov
pop
ljmp
inc
popf
lods
ja
imul
adc
push
arpl
in
mov
xor
push
dec
mov
cmp
imul
testl
dec
loopne
jmp
push
std
sbb
shrl
adc
inc
inc
jne
cltd
repz
fucom
daa
stc
jmp
addr16
ss
aas
shr
mov
mov
rclb
int3
pop
inc
push
pop
js
cmp
in
repz
scas
bound
jmp
popf
jae
dec
mov
push
sub
jo
cmp
mov
inc
add
sub
jns
imul
mov
loope
pop
and
or
les
adc
pop
add
jle
sub
sti
out
jmp
nop
lahf
xchg
dec
pop
mov
popa
inc
outsl
das
mov
inc
mov
lcall
stos
and
jge
sbb
push
push
sbb
rolb
jg
aaa
xor
and
ljmp
cmovge
loopne
aad
scas
icebp
and
ds
adc
and
jg
ss
mov
xchg
loopne
adc
shrb
jno
jle
push
lods
xor
sub
jmp
add
xchg
scas
mov
cmp
mov
adc
mov
or
das
stos
dec
mov
xchg
ljmp
sub
stc
push
bound
lret
cmp
ljmp
fistpll
filds
mov
mov
add
xorb
or
fldl
out
xchg
imulb
xor
and
pop
jl
or
inc
shl
inc
sub
sub
mov
or
mov
gs
jo
pop
stc
bound
push
lret
xchg
pop
int
mov
sbb
push
lret
mov
dec
mov
cmp
decb
and
dec
dec
push
pop
inc
mov
mov
dec
inc
in
enter
and
cmp
push
adc
sub
dec
movsb
aas
pop
jecxz
loop
xchg
mov
fldl
xchg
in
jg
mov
push
sahf
daa
cltd
push
loope
subb
lahf
in
out
pop
jbe
cmp
subb
dec
sti
add
adc
xchg
xlat
sbb
and
cmpsb
scas
bound
mov
je
fs
test
mov
sbb
xchg
cli
push
pop
mov
ljmp
sbb
pop
aas
lahf
out
fcompl
mov
pop
and
xchg
adc
push
stos
xor
test
arpl
sti
lds
rcrb
sbb
and
daa
or
out
bound
xchg
fwait
mov
popa
or
adc
mov
pop
stc
std
mov
cmp
add
subb
mov
mov
ljmp
sbb
add
out
sbb
cmp
rcl
popf
adc
mov
push
inc
pop
mov
inc
sbb
inc
cmp
pop
les
int
lcall
and
push
inc
cmp
cmp
mov
and
mov
jge
movsb
sub
ret
adc
int3
xor
push
pop
mov
sub
add
call
cmpsl
fstpt
jg
adcb
mov
leave
adc
cmp
pop
and
iret
inc
add
pop
cmp
pusha
sub
sbb
cltd
cltd
ss
and
jl
push
mov
jle
js
push
ret
xchg
and
jmp
andb
jp
shl
icebp
mov
inc
mov
sub
push
sbb
stc
test
sub
xor
adc
mov
xor
bound
or
mov
add
ja
jle
cmp
xor
nop
mov
jl
insb
dec
push
out
mov
or
inc
pop
mov
push
adc
xor
sub
xchg
pop
aaa
dec
dec
rcrl
xchg
out
mov
mov
lret
jbe
insb
jnp
mov
mov
std
call
mov
fs
cmpsl
push
mov
push
sbb
push
mov
repnz
mov
inc
xchg
enter
divb
pop
sbb
inc
sub
stos
dec
dec
fimuls
cmp
stos
outsl
sti
mov
fidivs
pusha
xchg
dec
imul
fcomip
call
push
push
dec
push
inc
fsubrp
es
sub
pop
pop
dec
sbb
mov
nop
call
out
in
inc
stos
mov
stos
sahf
and
les
mov
push
scas
sbb
xor
mov
repz
icebp
adc
dec
loope
xor
mov
imul
add
ret
fdivrl
lret
mov
into
jge
stos
sub
out
mov
fucomip
ret
fcoms
sub
jge
loopne
movl
fs
loopne
sub
outsb
ret
addb
popa
sbb
push
int
inc
arpl
out
jge
pop
pop
mov
pop
mov
xor
push
xchg
mov
rcl
mov
and
imul
js
mov
push
mov
inc
cwtl
add
sbb
rcrb
mov
or
ficompl
mov
mov
xchg
pop
pop
fsubl
and
loope
rcrb
lea
mov
pop
icebp
mov
inc
adc
lea
loopne
test
popf
shr
cmp
fadds
xchg
test
mov
pop
shr
ja
cs
mov
dec
idiv
aaa
cltd
pop
add
xchg
popf
push
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
pop
xchg
xchg
pcmpgtd
das
xor
or
subb
repz
pop
mov
adc
dec
je
push
rcrl
sub
dec
push
jmp
add
or
notl
or
cmp
mov
fisubs
fwait
add
out
dec
sub
adc
enter
arpl
jg
inc
inc
lcall
test
xchg
inc
lcall
jmp
sbb
mov
shl
ret
aam
loop
sub
es
adc
pushf
pushl
loop
jb
adc
outsl
or
adc
xchg
fwait
xchg
xchg
ds
dec
mov
scas
mov
movsl
mov
not
aad
or
leave
add
clc
push
loopne
pop
out
je
icebp
negb
cwtl
xor
mov
jno
push
push
stos
and
adc
jo
xchg
push
jb
xor
mov
mov
and
imul
imul
addl
dec
cs
jno
inc
xchg
lods
fmuls
or
lock
cld
shrl
cmc
dec
fwait
adcw
jnp
cs
imul
test
sub
xchg
push
in
cltd
mov
xchg
lret
sbb
xchg
leave
fidivs
popf
adc
mov
and
pop
jo
fsubrl
push
movsl
ret
aad
es
jg
sbb
leave
nop
roll
pop
cli
or
pop
mov
sbb
jmp
mov
jl
sub
inc
hlt
pop
lret
and
push
push
and
lds
inc
adc
push
dec
lret
enter
dec
loopne
test
dec
mov
cmp
mov
lea
jg
stc
pop
scas
mov
inc
dec
pop
inc
aas
mov
push
fstpl
stos
sbb
dec
arpl
punpckhbw
in
dec
mov
mov
jge
cmpsl
mov
divl
rorb
bound
lods
pop
push
insl
jle
mov
and
xchg
inc
aas
xlat
mov
jns
and
inc
sub
addr16
dec
pop
xchg
scas
sbb
aaa
in
in
lods
cmp
sub
data16
mov
push
push
fldl
in
mov
inc
mov
fsubl
adc
cmp
pushf
idivb
daa
or
stc
push
imulb
add
mov
push
movsl
out
or
mov
fisubs
cmp
arpl
lds
push
jecxz
adc
mov
push
aam
and
mov
ret
and
lods
clc
sub
adcl
and
xor
dec
lods
inc
sbb
aam
testb
push
js
or
inc
add
rorb
fwait
je
cmpsb
dec
pop
adc
and
out
mov
and
mov
adc
mov
inc
dec
jae
jae
cwtl
cmpsl
jmp
pop
sbb
std
loopne
mov
add
add
push
mov
leave
jb
mov
out
xchg
and
push
test
les
out
out
pop
stos
pop
or
xor
jl
mov
pop
xor
adc
rorl
test
loope
gs
outsl
out
and
outsb
add
outsb
and
aaa
inc
idiv
popf
or
imul
into
mov
fmull
mov
jmp
pop
and
pop
jmp
imul
xchg
bound
loope
out
jmp
dec
xchg
pushf
xlat
mov
ss
les
jl
inc
and
pop
sbb
xlat
ds
adc
cmp
outsl
test
cld
dec
xchg
fucomp
mov
or
mov
cli
mov
pusha
loope
scas
push
addb
xor
adc
dec
and
sub
sbb
pop
sub
jecxz
js
xchg
repz
arpl
jmp
cmp
dec
push
sub
jl
pop
sbb
mov
stos
out
xor
das
sub
stc
sub
pop
call
int3
pop
loope
mov
sub
stos
repz
gs
jle
jno
inc
xchg
popf
std
adcb
scas
mov
rol
int
pop
sbbl
lret
dec
loop
cltd
mov
sbb
pushf
test
xchg
lods
or
mov
shll
jl
dec
into
or
xor
dec
xlat
movsl
fwait
jle
iret
stos
push
sbb
sbb
dec
mov
or
das
dec
cli
rorl
shrb
mov
mov
sbb
loop
cmpsb
fwait
or
sbb
in
ds
xor
arpl
or
pop
mov
cwtl
mov
pushf
and
dec
mov
or
icebp
cmp
push
jg
pop
or
lock
rep
test
inc
mov
mov
dec
daa
add
xchg
in
adc
pop
push
cmc
cmpsb
test
xlat
sti
shlb
dec
pop
cmpsb
outsb
and
sub
cmp
push
sbb
add
je
cld
stc
xor
inc
imul
push
dec
sbb
popa
roll
stos
xchg
call
stos
push
int
das
lock
out
cmp
sub
sbb
xor
rcrl
and
nop
mov
sub
ret
movsl
mov
lods
insb
leave
fcoml
push
xor
lahf
divl
shrl
push
in
and
in
mov
movsl
popa
adc
xor
xor
sub
cmp
int3
push
sub
inc
insl
add
seto
out
mov
push
mov
adc
adc
std
adc
pop
enter
pop
push
jle
sbb
mov
jnp
popa
push
xchg
mov
dec
clc
mov
outsb
das
jnp
push
mov
push
lahf
xor
int
add
lahf
aaa
cmp
and
enter
fsts
xor
pop
dec
int3
mov
xchg
scas
mov
aam
push
push
fstpt
pusha
dec
mov
mov
imul
and
jg
rclb
jge
adcb
addr16
pop
sub
fildl
push
mov
jl
pop
and
popa
shlb
cli
sub
inc
cs
jae
cmp
mov
xchg
outsl
mov
xor
dec
out
sub
mov
aas
mov
xor
xchg
inc
into
mov
rclb
jecxz
jno
dec
fwait
sub
mov
sub
and
daa
push
jp
xchg
mov
push
psrlq
ficomps
pushf
push
cmpsl
mov
fsubrp
fwait
in
arpl
hlt
mov
pop
inc
cmpl
push
pusha
ror
leave
je,pt
rcrb
jmp
or
sbb
hlt
fnsave
adc
subb
jno
lock
lret
loope
lock
sti
jnp
jg
lea
inc
jp
mov
lods
cmpl
push
push
jmp
sbb
push
adc
xchg
int3
xchg
jp
dec
cwtl
nop
adc
and
mov
decl
dec
sub
or
mov
sar
or
and
pop
adcb
pop
and
insb
icebp
jo
xor
or
pushf
jmp
jl
pop
xchg
jp
fs
xor
repnz
and
sub
xchg
aam
ret
mov
fiaddl
insb
dec
imul
jb
out
iret
mov
in
mov
and
loopne
or
outsl
lods
popa
pop
jae
and
push
fsts
xor
jae
sub
mov
or
cmp
lock
mov
mov
adc
stos
sahf
adc
popa
xor
cmc
or
mov
es
mov
nop
adc
rorb
bound
mov
xchg
mov
xor
mov
popa
std
fidivs
movsb
das
cmc
xor
scas
aam
pop
sbb
mov
or
jae
jb
pop
xor
mov
fisttpll
xchg
push
loopne
jmp
shlb
lock
mov
xchg
cmpsl
mov
push
jl
in
jmp
das
cmp
pop
cwtl
xor
push
jbe
enter
sbb
insl
xorl
xor
ret
dec
stos
aas
loope
insb
inc
adc
mov
aam
jo
popa
cwtl
outsb
xchg
in
jmp
xchg
iret
mov
inc
sbb
or
stc
call
push
aas
inc
lcall
dec
jg
mov
and
call
or
fidivrl
xchg
or
mov
jmp
mov
cmp
adc
or
lods
adc
xchg
repz
dec
xor
cltd
sbb
xchg
outsl
add
mov
loopne
mulb
and
lahf
mov
int
ss
xchg
rcll
cmpsl
or
xchg
lret
loope
push
jmp
pop
aaa
jecxz
les
cmp
fildl
dec
in
lcall
sub
dec
loope
test
loopne
pop
mov
adc
xchg
xlat
gs
adc
adc
addr16
inc
or
xchg
clc
push
jo
mov
push
arpl
sbb
xor
pop
rolb
mov
shl
xor
repz
jns
jecxz
mov
and
push
add
cli
jecxz
and
jmp
addb
xor
enter
mov
pop
lret
lret
test
hlt
cmp
pop
xor
das
mov
sbb
mov
dec
add
pop
and
sbb
add
xchg
pop
add
shrb
xor
test
pop
fs
repz
sub
xlat
push
aas
repnz
int
inc
mov
leave
xor
cmpsb
lock
scas
adc
jne
xor
push
push
daa
adcl
pop
jnp
in
orb
popa
les
or
push
in
adc
pushf
js
or
pop
or
sbb
cmpb
push
pop
das
movb
jmp
add
dec
mov
call
mov
outsb
pop
das
pop
cmpsb
jmp
daa
dec
xlat
lea
xchg
dec
pop
pop
push
out
std
sub
pusha
pop
clc
clc
outsl
inc
xchg
push
cmp
cmpsb
int
ss
jno
xorl
sbb
sub
js
dec
out
test
pop
call
in
cmc
adc
rcrb
dec
pop
pop
and
out
dec
call
repz
xchg
xor
in
cmpsl
insl
cmp
lahf
loop
dec
notb
scas
aaa
outsb
pop
push
mov
jne
es
imul
rorb
push
jl
cmp
sub
mov
sbb
cmc
fistps
lcall
aad
pop
cmp
arpl
test
rcll
mov
cld
scas
jl
psrad
mov
ljmp
arpl
sub
fmull
stc
xchg
ret
outsl
movl
das
pushf
push
insl
sub
push
xchg
sti
sbb
sub
mov
fildll
dec
pop
divb
xchg
imul
les
jno
pop
dec
in
xor
inc
and
iret
jbe
mov
mov
sub
inc
mov
stos
std
clc
xor
insl
or
lods
push
or
shlb
cmpb
sbb
pusha
or
xchg
mov
and
pushf
daa
push
adcl
dec
loop
mov
pop
cmp
out
pop
add
movsl
fs
dec
sbb
leave
inc
xchg
movsl
xor
jno
cs
and
add
rcrb
pop
js
mov
pusha
cli
js
test
xor
addr16
pusha
movsl
fldt
and
sbb
push
imul
arpl
push
and
cwtl
out
out
das
in
hlt
mov
push
out
cmp
ljmp
movsl
shrl
mov
insl
stos
mov
pop
test
imul
mov
push
mov
or
rclb
xchg
pop
loopne
xchg
testl
mov
mov
dec
mov
jg
dec
jp
pop
std
push
xchg
pop
insl
hlt
ljmp
outsl
mov
mov
cmc
bound
jl
out
or
aaa
adc
pop
roll
insb
mov
shlb
jb
sbb
or
es
subb
lret
ds
fwait
xchg
lds
inc
push
cmc
jge
fildll
cmc
xchg
in
lods
lret
xchg
fstpl
dec
push
shr
sub
out
out
cmc
mov
sub
sbb
or
jbe
lds
cmpxchg
dec
cmp
jnp
xor
add
mov
mov
adc
sub
push
in
pop
insl
stc
test
jg
clc
arpl
mov
push
pop
xor
push
outsl
clc
mov
scas
daa
or
push
and
jmp
sti
jbe
call
dec
jb
and
loopne
cmp
bound
mov
outsl
or
fdivrp
mov
adc
call
mov
mov
push
push
push
push
mov
mov
inc
lds
push
rcr
xor
push
fdivrl
les
test
nop
cwtl
add
jae
imul
insb
arpl
loop
inc
inc
mov
xchg
imul
xchg
cltd
call
addr16
sub
out
not
cmp
fldcw
daa
adc
sbb
lea
cmpsb
ss
lds
fldt
push
fisubrs
pop
sbb
sbb
in
imul
push
and
test
xor
push
push
cmp
or
dec
data16
adc
inc
jl
out
call
movsb
adc
mov
lcall
test
mov
aam
inc
or
push
or
pop
lahf
in
aad
mov
inc
pop
mov
xchg
sbb
mov
adc
mov
add
xor
push
lock
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
mov
xchg
jno
push
cltd
cs
sbb
and
pushf
scas
add
and
insb
js
insl
testl
adc
out
lret
cld
push
jle
sbb
mov
push
jnp
outsb
cmpsl
cld
arpl
mov
pop
mov
std
aad
ja
scas
scas
aaa
mov
adc
mov
iret
push
clc
stos
idivb
cmp
cwtl
cmp
xchg
push
add
pop
or
or
imul
sub
mov
xor
mov
stc
or
inc
pop
jg
repz
add
inc
sbb
clc
dec
mov
cmp
xor
cmp
repnz
fmuls
into
and
js
out
mov
xchg
decb
js
insb
add
mov
cmp
or
pop
daa
fsubl
xor
dec
pop
add
dec
cli
in
push
movsl
sub
pusha
dec
or
cmp
mov
push
ja
adc
ret
pusha
fistl
inc
ds
jne
xchg
movsb
mov
mov
adc
mov
subb
arpl
mov
jle
mov
or
call
insl
mov
pop
mov
lahf
jge
xor
push
xchg
adc
cmp
lods
test
fucomi
pusha
mov
data16
push
js
test
sahf
sub
push
sub
mov
cmp
iret
push
cltd
repz
ficompl
cmc
rol
sbb
rcl
push
mov
and
jb
movsb
ficoml
inc
xor
aam
adc
fwait
mov
gs
mov
lock
into
sub
adcb
inc
fstps
mov
int3
push
jb
outsb
aad
mov
xor
idivb
mov
or
pop
push
imul
mov
cwtl
adc
push
mov
mov
scas
and
fisubrl
std
inc
or
push
test
pop
mov
xchg
adc
mov
das
imul
push
sti
xor
mov
mov
push
sub
fistpl
xchg
ror
popa
inc
cmp
inc
shll
cwtl
mov
mov
push
lock
and
push
push
add
mov
push
popa
cmp
repz
sbb
cmp
pusha
cltd
hlt
dec
leave
cs
xor
into
in
xor
pand
mov
xchg
leave
lahf
clc
fldt
xchg
cmp
or
pop
and
jge
pop
sbb
xchg
outsb
pop
cmp
pop
aam
pop
sbb
xor
dec
add
mov
xor
xchg
push
pop
mov
mov
add
or
cmpsl
fyl2xp1
jmp
adc
push
leave
movsl
in
or
orl
or
pop
fadd
sahf
push
add
mov
push
pop
add
push
mov
pop
out
push
push
orl
adc
dec
mov
push
jp
hlt
cwtl
icebp
loopne
push
in
mov
dec
jl
xchg
cs
or
aam
push
aaa
hlt
and
mov
push
inc
pop
sub
dec
ret
add
jae
lcall
popa
ret
mov
xchg
popf
mov
dec
cmp
rorl
mov
push
addl
pop
aam
adc
and
mov
js
pop
out
jo
mov
xorb
pop
sbb
jns
aad
nop
push
loopne
fmulp
xchg
cmp
sbb
jecxz
or
xor
mov
ljmp
xchg
lahf
outsl
jbe
ds
test
pop
mov
call
inc
sbb
push
sbb
addr16
int
jne
cli
inc
loope
mov
pop
pop
and
jae
mov
or
push
cmpsb
jg
ss
sbb
outsb
shl
arpl
cli
into
ret
int3
adc
inc
mov
mov
repnz
cld
popa
mov
jae
out
push
icebp
xlat
fdiv
int
in
pop
dec
inc
jmp
test
ss
sub
jo
fildl
movsb
jne
stos
push
cmp
jp
sbb
aam
dec
mov
pop
sbb
loope
cmp
call
femms
adc
add
sbb
pop
pop
adc
jl
xor
pop
mov
inc
add
gs
add
pop
push
outsb
or
test
add
pop
gs
pop
std
lcall
test
mov
leave
fisubrl
fwait
adc
loopne
adc
xor
lcall
sub
cmp
push
mov
ljmp
mov
sub
loopne
fldenv
in
jne
push
jle
mov
sahf
test
cmc
jmp
xchg
xor
insb
idivl
xor
cmp
fsubs
sub
lods
jge
xchg
cmp
inc
or
mov
xchg
xchg
add
cs
adc
mov
js
add
pop
out
adc
mov
mov
cs
and
les
repnz
insb
jb
loopne
leave
mov
mov
hlt
cmp
mov
mov
idiv
sbb
mov
addr16
das
xchg
xchg
leave
movsl
hlt
mov
and
rdpmc
test
fucom
inc
movsl
xchg
xchg
mov
sub
rolb
xchg
jmp
jb
ficomps
out
in
and
xor
push
mov
push
pop
cltd
cmpsb
repz
and
adc
mov
aas
mov
js
or
xchg
dec
cmp
in
mov
push
ficompl
aad
fsubl
ljmp
aaa
filds
adc
mov
add
popf
call
inc
push
sti
pop
test
mov
add
cmpsb
adc
pop
pop
lcall
leave
mov
and
iret
out
dec
pushf
cmp
lea
cmp
sub
mov
mov
inc
jge
sub
es
es
leave
and
mov
inc
adc
outsl
xchg
je
fdiv
jb
jbe
and
xor
ret
pop
ja
cmp
cltd
xchg
arpl
inc
cmp
cli
xchg
jb
scas
mov
cmpsl
sbb
adc
aad
outsl
cmpl
ds
adc
add
xchg
nop
rol
mov
mov
in
pop
test
adc
sbbl
fs
imul
jbe
shr
xchg
and
mov
ljmp
mov
xor
mov
dec
push
stc
out
repz
sbb
sbb
mov
mov
pop
xor
mov
xor
or
adc
lods
loope
pop
adc
cmpsl
rcl
in
arpl
xchg
jo
outsb
aam
sbb
jb
into
das
sub
testl
pop
rorb
sti
pop
and
imul
push
mov
xor
mov
mov
xchg
mov
push
aaa
cld
dec
inc
das
inc
mov
pop
mov
and
rorl
cltd
xlat
or
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
lods
mov
jno
cwtl
ret
daa
int
sbb
xor
daa
mov
rorl
fidivrl
sti
mov
lret
roll
ficoml
jnp
pop
rolb
rcll
inc
mov
imul
or
mov
int3
jno
pop
loope
mov
pop
mov
cmp
mov
xor
mov
xchg
dec
and
jb
lcall
or
sbb
adc
lea
in
mov
cmp
lds
outsb
cmpsb
fsubs
jo
lret
repz
jo
fisubs
mov
sub
pop
add
ror
loope
xor
sub
lret
mov
mov
movsb
pop
xchg
mov
push
mov
cld
xchg
cmpsb
jbe
int3
orb
mov
sbb
loope
mov
cmp
test
xchg
xor
mov
das
movsb
push
iret
mov
test
clc
pop
cmp
bound
loopne
sbb
mov
pop
sbb
in
enter
shl
pminub
inc
sti
or
aas
push
lret
ja
dec
lahf
sarb
jae
mov
loop
aam
or
cli
scas
std
icebp
test
push
push
fisttps
dec
repnz
cmc
or
stc
mov
push
inc
shll
arpl
out
mov
pop
jb
cmp
mov
pop
aam
mov
sbb
xor
or
sbb
scas
cmpb
outsb
jo
bswap
mov
enter
mov
shll
adc
stos
inc
int
in
call
gs
arpl
mov
and
jbe
aas
sub
daa
dec
push
sar
rcll
lods
call
mov
lcall
lds
mov
sub
jg
sub
fwait
lds
cmc
test
cmpsl
fdivrl
cmp
xchg
jno
pop
aam
or
std
cmp
jp
loope
std
pop
fwait
hlt
sahf
icebp
test
fcompl
out
fistl
cwtl
enter
sub
in
fyl2x
xchg
mov
jns
mov
xor
outsb
push
ds
mov
subl
idivl
lock
in
ficomps
lds
xor
fcmovnbe
stos
stos
dec
jp
pop
adcb
sbb
push
ja,pt
pop
sbbb
lods
xchg
std
jecxz
and
addr16
outsb
into
ss
arpl
into
stos
sbb
xor
or
in
sbb
movsb
arpl
push
cld
xor
lahf
adc
adc
in
push
test
mov
xchg
inc
lods
pop
sub
inc
jmp
adc
push
rorl
mov
pop
sbb
mov
and
lock
pop
or
xchg
sub
gs
inc
sbb
fdivl
mov
scas
mov
cmp
int
inc
mov
lock
mov
sub
js
xchg
inc
lahf
ljmp
ja
cwtl
lret
out
xorl
outsb
push
mov
mov
nop
sbb
pop
mov
js
mov
popa
outsb
mov
dec
adc
sub
fdiv
jmp
pusha
ljmp
jo
ds
test
dec
push
mov
out
shl
in
push
and
call
xchg
xchg
fnstenv
imul
lahf
rcll
cmc
cmp
sbb
rol
adc
roll
pop
and
jb
jp
test
cmp
cwtl
cmpsl
adc
pushf
adc
gs
xchg
loopne
shll
fimuls
inc
mov
test
mov
cmpsl
xchg
inc
hlt
pop
lds
test
in
dec
and
dec
les
push
or
jmp
mov
ss
int
inc
out
mov
aad
jg
jecxz
loopne
or
mov
es
sbb
mov
subl
sarl
les
pop
sbb
test
adc
push
inc
movsl
inc
pop
mov
mov
xor
das
jg
cmp
or
inc
adc
dec
adc
mov
sbb
mov
and
movsl
push
data16
in
xchg
cmpsb
fnstenv
rorl
sub
sub
and
cld
nop
pop
mov
xor
sub
fsubrs
out
sub
mov
mov
nop
adc
and
xchg
adc
inc
iret
xchg
lds
fdivr
adc
xor
sbb
loope
jge
mov
or
sbb
in
ret
mov
andb
dec
js
cs
lea
mov
jecxz
push
xor
mov
jae
clc
and
xchg
push
in
adc
or
cmpsl
pop
mov
int
xchg
xor
sbb
mov
mov
pop
rorl
cmpsb
clc
bound
add
rolb
adc
jnp
jb
fnstsw
push
jl
ja
lds
inc
dec
aaa
pop
in
sub
pop
dec
inc
in
sahf
xchg
xchg
mov
in
and
outsl
mov
pop
xor
jle
test
add
stos
imul
cmp
xchg
in
ret
mov
mov
add
dec
andb
xor
into
orl
jp
idivb
jo
nop
or
roll
in
cmp
adc
jg
mov
inc
movsl
mov
mov
push
cmpsb
call
cli
in
in
loopne
inc
lds
sbb
cmp
mov
and
sbb
das
frstor
lea
mov
inc
cs
add
push
addr16
por
imul
mov
test
jmp
cmp
or
ds
inc
jmp
fcoms
dec
femms
xchg
and
fdivs
push
inc
mov
cli
sub
mov
or
mov
cs
shrl
ds
push
mov
mov
std
pop
notb
mov
dec
inc
jmp
inc
sub
xchg
push
lds
and
outsl
xor
add
mov
mov
inc
and
shrl
sbb
aam
push
mov
in
cmc
dec
xlat
push
out
int3
mov
cmc
push
xchg
adc
push
sarb
test
nop
je
cmp
sbbb
sbb
push
pushf
repnz
and
aad
mov
sbb
mov
andb
popa
stc
jmp
xchg
lret
mov
out
shl
lods
jnp
cmpsb
leave
inc
inc
or
adc
dec
mov
mov
push
clc
jb
sbb
dec
add
jg
and
mov
popa
dec
in
loopne
scas
dec
loope
frstor
loope
push
lods
xchg
arpl
nop
xor
int
nop
mov
enter
jmp
incl
pushf
data16
jg
scas
iret
in
jg
loopne
mov
sub
ja
pop
imul
jle
ret
dec
addr16
jbe
pop
int3
fwait
idiv
cwtl
mov
nop
mov
xchg
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
in
rclb
pmulhw
ss
stos
outsb
push
mov
fcoms
in
xor
mov
shl
js
fucom
pop
out
stos
sbb
andl
lahf
jae
adc
incl
dec
rolb
jge
jbe
out
jge
adc
es
and
outsl
nop
inc
sbb
add
loopne
xchg
inc
in
cs
push
pop
xchg
popa
outsb
stos
and
fbstp
cld
insb
xchg
test
stc
arpl
or
int
or
sub
mov
or
iret
mov
sub
dec
mov
andb
add
dec
bswap
pop
and
or
xchg
lods
mov
or
hlt
push
pop
jne
into
sub
fwait
xchg
sbbb
xchg
daa
pop
test
mov
dec
pushf
mov
cld
stc
sbb
inc
nop
or
insb
fs
out
adc
and
cmp
add
and
sub
pop
arpl
sbb
xor
adc
repz
mov
and
lahf
and
jo
call
cmp
xchg
xchg
lcall
sbb
movsl
jecxz
pop
mov
negb
mov
lods
imul
sub
dec
aas
xor
push
add
add
shll
lds
fs
pop
sub
fisubl
les
dec
data16
pop
or
push
pop
int
jbe
int3
mov
jmp
enter
clc
mov
loopne
rorl
ficoms
lret
jecxz
sbb
and
and
xor
shlb
adc
or
lahf
in
mov
lods
test
mov
jle
inc
push
sahf
loop
popa
mov
sub
mov
mov
ljmp
cmp
out
inc
test
into
fs
jge
dec
adc
jecxz
push
fldcw
cmpsl
gs
arpl
push
pop
xchg
sti
pop
out
out
imul
or
ss
mov
das
stos
fs
outsl
xchg
jns
ret
addl
pop
jb
std
jmp
or
adc
jo
lods
mov
jnp
xor
xchg
add
enter
xchg
divb
repnz
stc
cld
std
stos
mov
loopne
dec
insb
loopne
stos
orl
mov
ret
in
cmpsl
or
pop
mov
stc
or
mov
pop
fnstcw
scas
aam
repz
push
repnz
or
sbb
xchg
jbe
cmc
icebp
mov
test
es
mov
das
outsb
ljmp
outsb
in
and
xor
je
out
loope
loope
neg
lods
je
imul
out
push
aam
test
sub
in
out
xor
mov
repz
pop
jne
gs
mov
xchg
jne
call
push
push
movsb
outsb
cmp
adc
dec
jns
push
insb
push
push
jge
xchg
pop
xor
push
sarb
and
movsl
lock
pop
sti
xchg
into
cli
mov
cmp
xchg
ret
push
mov
test
andl
vcvtss2si
icebp
add
movsb
pop
aas
jle
push
xor
test
faddl
adc
rcrl
cmp
push
loop
popa
or
call
sub
xchg
push
repz
push
pop
cli
cltd
dec
fistps
sub
sbb
and
jle
push
add
sbb
mov
ss
lock
push
loope
lret
add
mov
xchg
sbb
fsubrl
lcall
ljmp
ja
adc
or
repnz
mov
je
mov
faddl
das
add
sbb
ret
popf
shlb
add
sub
lret
pop
popa
fldcw
pop
sbbl
decb
fldenv
dec
inc
mov
push
inc
movsl
aad
sbb
out
jecxz
dec
sbb
in
mov
adc
mov
pusha
xchg
mov
jle
jo
add
cwtl
mov
adcb
jae
mov
xchg
sub
ds
and
mov
mov
test
mov
cmp
fldcw
jns
lahf
mov
dec
leave
jge
in
sub
dec
roll
jb
jl
cmp
fsubrs
iret
aam
xchg
dec
dec
jmp
fdivrs
es
sub
movsb
ljmp
jne
mov
scas
mov
jo
xor
xchg
jp
test
out
mov
int
mov
sub
or
cwtl
mov
lods
loopne
aas
mov
ror
mov
lods
xchg
hlt
les
push
lods
orl
ss
mov
cmp
lahf
divb
jl
fstpt
lds
xorb
push
add
and
je
enter
push
call
mov
ror
outsl
ficompl
ss
or
test
dec
popa
orb
dec
data16
and
nop
lds
sub
mov
mov
aaa
xchg
dec
jno
dec
in
ret
xchg
pusha
test
rcrb
lahf
lahf
shrl
popa
loop
cmc
sbb
fisubs
push
leave
add
jmp
gs
mov
pop
mov
sub
dec
mov
test
sub
adc
cmpsl
push
mulb
dec
or
jge
mov
pop
nop
push
cmpsb
pop
mov
shrl
pop
jg
fbld
push
int3
or
inc
cmp
mov
mov
xor
jp
inc
enter
addl
lcall
push
outsb
movsb
std
lret
cli
inc
pop
dec
movsb
cmp
pop
push
inc
imul
xchg
cwtl
or
test
adcl
lds
mov
dec
inc
push
test
mov
and
and
push
and
sub
jl
lea
lret
iret
scas
call
movsb
jae
stos
push
int
pop
rcl
adc
test
incb
sbbl
cmpsb
or
test
jl
in
mov
roll
lods
testb
aad
cmp
in
pop
or
ljmp
or
mov
cmpsl
cltd
lock
xlat
jl
inc
cmpsb
call
pop
adc
lea
jmp
push
jmp
sub
inc
sub
mov
scas
sbb
test
shl
test
mov
lods
sbb
scas
sbb
fsubr
test
les
pop
and
inc
repz
adc
mov
push
sahf
addl
dec
add
mov
add
aam
cltd
push
rcll
add
es
adc
push
lds
lcall
push
sub
inc
js
push
sbb
sub
pop
sbb
mov
arpl
shll
xchg
push
cld
int
push
out
in
ds
mov
cs
adc
xchg
sub
sahf
inc
nop
push
int
scas
mov
lcall
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
adc
addl
clc
sti
in
cmpsl
mov
fnsave
jmp
mov
xchg
syscall
insl
xchg
sbbb
add
push
leave
add
scas
lcall
cs
sub
daa
es
push
lahf
dec
and
push
mov
or
pop
adc
clc
arpl
test
mov
add
lds
jmp
lcall
enter
xorl
cmpsb
and
sbb
add
imul
popa
sbb
les
pop
sbb
inc
xor
loope
pop
aaa
jp
cmp
lods
pop
popf
mov
pop
jmp
adc
adc
mov
jge
ljmp
xchg
bound
push
xchg
es
mov
push
pop
orl
lret
out
in
sub
push
enter
pop
mov
xchg
jb
cmp
cmp
idiv
gs
dec
pop
call
pop
or
test
test
movsl
sub
sub
push
int3
or
fnsave
lds
jo
ret
adc
stos
mov
dec
ret
jne
xor
sbb
mulps
js
pop
addb
inc
popa
xchg
sbb
mov
stc
or
ret
popa
clc
test
add
and
loope
push
lret
xor
pushf
into
fs
dec
or
dec
lods
fiadds
in
xor
jg
cmc
adc
xchg
cmp
inc
aas
and
mov
mov
out
loop
xor
jno
push
jns
movsl
ficomps
fidivrs
int3
xchg
out
jno
sub
pop
adc
jnp
mov
cmp
dec
cwtl
fcomp
or
xor
sbb
pop
add
xor
dec
add
mov
in
std
mov
jle
push
ds
sbb
shl
xor
popa
jnp
jecxz
or
mov
int
lahf
fsubrl
ficomps
mov
pop
ret
pusha
pop
cwtl
mov
je
push
cmp
sbb
inc
cwtl
jne
sbb
hlt
in
xchg
lods
test
aas
subl
sub
push
stc
pop
sub
ja
jo
arpl
push
mov
sbb
ss
inc
fistps
pop
addb
sub
shrl
push
pop
int
adc
jl
cmc
test
dec
xchg
je
or
add
mov
les
or
lret
mov
lahf
mov
shl
adc
loopne
inc
ret
jge
xlat
js
scas
or
push
or
loope
mov
leave
push
or
cmp
xchg
aaa
pop
mov
sbb
inc
mov
idivl
dec
lods
les
and
or
push
loope
mov
or
pop
jnp
push
fisttpll
sbb
sbb
sub
clc
push
xlat
aas
adc
in
roll
jne
addr16
shl
in
push
add
pop
xlat
arpl
xchg
sbb
cmp
scas
dec
xchg
xor
dec
fiaddl
mov
mov
sbb
dec
sar
inc
fcompl
jo
pop
add
dec
sahf
pop
roll
pop
sbb
dec
xor
lea
sti
fimuls
in
popf
push
cli
mov
fsin
lcall
jge
movsb
mov
xchg
sub
push
cs
push
mov
fnstsw
stos
xchg
xchg
fsubr
bts
dec
roll
push
adc
pushf
inc
xchg
add
mov
push
int
mul
or
daa
mov
xchg
sbb
jg
xchg
pop
jno
pop
dec
lret
sub
mov
lock
mov
dec
fisttpll
test
xchg
jp
mov
jmp
mov
pop
pushf
xor
into
sbb
dec
inc
dec
pop
sbbl
and
sub
mov
push
call
icebp
int
fimull
push
mov
adc
mov
add
pop
fcoml
pop
lock
xchg
ds
xchg
mov
sub
cmp
xorl
dec
scas
mov
push
adc
mov
call
push
pop
adc
or
push
mov
or
xor
test
jg
ficomps
sti
add
or
mov
xchg
mov
sub
gs
mov
pop
mov
loopne
push
inc
xchg
das
dec
jecxz
sbb
and
js
in
icebp
mov
xchg
outsb
jecxz
adc
dec
das
jp
mov
sbb
icebp
and
mov
dec
inc
imul
shrl
into
push
xorb
xchg
arpl
cmp
pop
out
popf
sub
in
jl
fs
out
mov
cmp
mov
jmp
gs
pop
rolb
lret
cmp
rcll
sti
outsb
mov
ja
jo
std
fs
pop
outsb
or
fs
sti
pop
in
pop
jnp
sub
sbb
xor
dec
loopne
sbb
inc
jbe
ja
lret
mov
ds
and
jns
inc
loopne
mov
divb
cmc
sbb
arpl
nop
and
mov
lret
fmulp
addb
imul
lock
xchg
pop
inc
add
test
sbb
jns
sub
adc
stos
or
cmpsl
test
xor
mov
jbe
cmp
xchg
mov
dec
mov
jb
in
sub
in
loop
pop
test
shl
mov
in
movsl
sub
movsl
dec
popf
lcall
adc
mov
mov
popa
and
dec
int
rcrl
ficompl
repz
cmp
out
aam
lret
sub
loop
add
mov
mov
cld
ja
xchg
shll
mov
into
lods
sbb
div
or
mov
nop
sub
cmp
cmp
sbb
inc
or
jns
add
xlat
xor
jb
data16
xlat
push
loop
daa
mov
cltd
cltd
add
rcl
jle
jns
in
add
daa
push
mulb
xorb
jge
dec
dec
lcall
mov
push
mov
add
sbb
lods
in
adc
and
adc
xchg
jecxz
adc
inc
push
push
in
inc
fidivl
cwtl
out
enter
add
mov
fistpll
daa
cld
jg
and
dec
or
jnp
xor
insl
push
jne
or
lcall
ret
sbb
lods
rol
out
pop
mov
out
push
jle
lock
arpl
xchg
mov
jbe
addl
mov
fsub
xor
aam
inc
jge
aaa
cmpsl
cli
mul
push
iret
push
lea
js
aad
daa
and
scas
nop
test
xchg
sub
out
es
pusha
jne
pop
out
hlt
jp
lds
aaa
lret
test
sbb
popf
adc
cltd
cli
xor
pusha
jns
loope
shll
stos
mov
jp
aad
andb
cmpsb
pop
cmp
jb
lahf
mov
xchg
shlb
enter
inc
enter
clc
inc
inc
add
add
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
pop
lods
jecxz
or
mov
add
push
stos
or
inc
sub
cmp
sar
into
cli
mov
inc
jb
mov
sub
and
and
push
mov
insb
imul
fwait
sbb
ja
stos
lahf
or
adc
fdivrp
repnz
cmpsb
xor
push
stos
or
mov
lcall
enter
sahf
pop
bnd
pushf
mov
pop
mov
mov
sbb
xlat
sub
pop
or
pop
mov
pop
add
dec
pop
jmp
jo
jmp
lds
or
fwait
arpl
inc
fwait
test
and
aad
movsl
je
mov
mov
aam
out
ljmp
push
into
xchg
push
pop
pop
cli
fadd
jno
jle
daa
push
mov
or
test
lock
inc
xchg
mov
out
sti
mov
push
fstpl
fisubl
add
and
inc
jmp
std
inc
ja
adc
sbb
jmp
xchg
fadd
les
and
mov
jne
mov
xchg
cmp
call
sub
mov
mov
xlat
push
mov
jae
push
ljmp
insl
cmp
test
xor
dec
adc
push
or
vcvtsi2sdl
ret
jp
cmpsb
xor
and
imull
dec
and
xchg
sub
int3
mov
je
cmp
mov
ss
pop
cld
sub
mov
xor
jnp
movsb
adc
adc
jmp
xor
call
arpl
sbb
repz
push
jmp
pop
cmpsl
lods
test
mov
ja
xor
aaa
cmpsb
icebp
repnz
adc
es
mov
xor
cmpsl
ret
aam
fbld
into
push
loopne
data16
psrad
push
xor
das
mov
lods
pop
pop
movsb
mov
and
mov
or
cmc
xchg
push
sarb
imul
xor
mov
test
dec
push
jmp
sub
dec
or
jb
xchg
subb
ffree
mov
push
pop
int
adcl
ret
loope
cmp
lret
popf
add
mov
lds
pop
outsb
test
mov
pop
sub
xchg
pushf
push
cmp
ret
sbb
imul
adc
push
lahf
sti
pop
hlt
inc
inc
and
iret
mov
cmp
mov
shll
inc
push
add
xchg
pop
stos
inc
andl
leave
enter
jo
xor
push
add
cli
hlt
jecxz
pop
roll
das
cmp
cmc
lea
out
pop
ret
mov
lods
lds
pop
stos
push
mov
gs
xchg
fnstsw
lahf
rclb
adcl
cwtl
aaa
push
jno
sbb
ret
mov
divb
pmulhuw
loop
cmpsb
imul
cmpsl
pop
cs
cld
pop
adc
outsl
push
cmpsb
mov
stos
mov
jbe
in
pushl
push
imul
jbe
in
mov
loop
std
mov
dec
mov
scas
pushf
outsl
mov
adc
jle
fwait
xchg
scas
jae
sahf
pop
sbb
loopne
imull
pop
fiadds
pop
je
cmp
hlt
js
mov
leave
cmp
iret
xor
sub
outsl
sbb
cmp
xor
mulb
xchg
xor
movsb
jecxz
xchg
fsubrl
push
sbbl
xchg
jmp
xchg
andb
jg
xor
gs
mov
add
and
data16
and
mov
out
jecxz
push
push
mov
rolb
gs
arpl
clc
call
jge
adc
mov
dec
ror
mov
ss
es
cmp
pop
insl
test
inc
adc
xchg
dec
xor
lea
lret
test
in
dec
cmpsl
add
pop
mov
mov
lds
pop
lahf
pushf
jp
popf
mov
cltd
call
mov
imul
mov
pusha
lods
pop
mov
das
dec
pop
jl
and
add
mov
fnstsw
inc
test
ljmp
ss
outsl
aaa
es
arpl
adc
arpl
lock
lahf
mov
xchg
test
ss
pushf
dec
mov
or
or
push
mov
or
cmpsl
lock
call
mulb
mov
cmc
fwait
dec
orl
inc
bound
repz
shlb
inc
inc
xchg
jo
stos
insb
pop
adc
rorb
mov
mov
out
add
test
jmp
jge
fcmovnu
push
ljmp
daa
mov
xchg
push
mov
xchg
push
dec
das
or
clc
push
push
lea
push
push
xchg
push
ret
daa
dec
pop
arpl
xor
push
pop
fdiv
sbb
sub
pop
mov
jmp
iret
shrl
popa
dec
or
sysenter
push
mov
cmp
pusha
ljmp
mov
call
and
mov
push
cmp
lods
fstl
scas
xchg
popf
xor
sub
pop
inc
mov
sti
cmpsl
cmp
sub
and
lods
push
mov
push
push
fldl
sahf
pusha
sar
and
dec
sbb
inc
adc
xchg
out
idivb
outsb
mov
pop
add
mov
push
loope
sub
fs
pop
mov
sbb
dec
popa
sbb
mov
add
adc
inc
mov
lods
xchg
cmp
in
and
mov
dec
sub
sbb
mov
test
cmp
xchg
insl
mov
cwtl
add
popf
jo
imul
jle
aam
dec
jo
jmp
jge
inc
mov
jns
cmpsl
lret
push
push
fstps
cmpsl
test
pop
mov
jno
pop
sbb
fstp
mov
jge
out
jae
movsl
sub
mov
mov
jg
sbb
lods
mov
mov
mov
and
dec
loopne
xchg
or
addr16
sbbb
pusha
jo
mov
xchg
in
cmpsb
dec
mov
jne
adc
cmp
in
sbb
sbb
pop
lods
and
pop
cmp
or
adc
lahf
in
mov
mov
pop
jmp
scas
mov
test
xchg
ss
push
jp
imul
adc
xchg
mov
mov
repz
sbb
repz
cld
in
ret
adc
stc
insb
clc
push
xchg
popl
notb
inc
dec
aad
insl
mov
jle
adc
sub
in
jl
cmp
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
push
adc
push
loope
adc
addl
lret
xchg
cmpsb
inc
fisubl
leave
xchg
jg
ret
sub
dec
je
leave
sbbb
les
sbb
sahf
rcl
pop
je
sbb
mov
fcomps
xor
loope
into
dec
negl
cwtl
mov
shl
mov
adc
cmp
aaa
push
pop
cmp
mov
mov
stos
sub
push
js
shlb
or
repz
js
mov
pop
push
addr16
sub
mov
loope
xor
sbb
das
out
out
inc
int3
pop
cmp
dec
inc
hlt
in
out
mov
std
fidivl
pushf
cmp
mov
mov
cld
inc
out
stos
in
js
loopne
inc
imull
pop
es
lret
lock
std
fadds
xor
push
cltd
xchg
add
mov
push
gs
mov
jb
and
sub
mov
fstl
jo
pop
mov
xorb
pop
jecxz
ret
mov
rcr
mov
pop
and
gs
in
das
xor
ljmp
mov
cli
and
jb
mov
ret
xor
das
xor
mov
loope
jo
or
jg
or
mov
xor
sbb
adc
in
jmp
repz
xchg
cmp
rcrb
mov
push
sub
jecxz
mov
out
testl
lcall
pop
aas
ss
mov
sub
cli
loopne
fstpl
fdivr
lea
outsl
cld
xor
dec
ljmp
stos
movsb
mov
les
rolb
push
addr16
mov
push
sub
leave
lds
mov
inc
xchg
dec
aaa
notb
hlt
js
pusha
dec
in
dec
addr16
dec
int3
cmpsl
inc
scas
popa
xlat
rolb
adcl
pop
sbb
fidivl
iret
jge
sbb
ja
adc
cs
xchg
xchg
sub
cmp
inc
out
lods
xorl
cmpsb
xor
in
test
insb
mov
xlat
imul
aaa
bound
loopne
jbe
lods
mov
jns
mov
mov
sub
icebp
das
push
sbb
fistl
decl
das
xor
jns
ds
inc
lods
outsl
vmovdqu
icebp
or
mov
icebp
loop
dec
mov
sbb
lock
fs
out
lea
jb
cmovl
insl
mov
mov
sbb
mov
rcrl
fldcw
fnstsw
loopne
repnz
pop
popf
rorb
pop
or
inc
out
fdivrl
lcall
mov
stos
dec
rorb
dec
pop
push
jns
add
xor
cmp
mov
hlt
pop
insb
cld
mov
aas
cmp
sub
sub
mov
add
pop
pop
mov
or
das
jg
fwait
aam
mov
adc
push
js
sub
or
stos
movsb
stos
mov
test
sbb
mov
aad
imul
test
lret
insb
jne
loop
gs
adc
jecxz
jmp
dec
test
cmpsb
pop
xchg
outsb
mov
jbe
cmp
push
lahf
in
mov
stos
pop
add
xor
mov
pop
jne
inc
cmc
inc
rorb
dec
push
scas
hlt
jns
jle
add
push
insl
push
repnz
pop
pop
mov
hlt
push
daa
xchg
or
pop
or
push
sbb
ficoms
mov
add
add
and
fistl
arpl
dec
push
lret
cli
test
movsb
rcll
jb
jle
leave
mov
sbbb
jl
popf
movb
sbb
dec
sub
dec
xor
sub
hlt
outsl
mov
adc
js
and
ds
mov
add
ja
mov
pop
mov
push
push
dec
adc
gs
xchg
mov
mov
mov
loop
adc
push
pop
pop
mov
pop
mov
std
add
jmp
xor
mov
and
mov
int
test
dec
push
sbb
xchg
in
dec
addr16
and
or
mov
xchg
mov
jg
ss
subl
jle
daa
lea
dec
xor
int3
mov
mov
in
dec
and
arpl
lret
pop
jb
pop
dec
xchg
fxam
push
sub
inc
inc
stos
and
rorl
xor
mov
add
jmp
ret
or
inc
repnz
ljmp
out
scas
or
xchg
mov
aaa
cltd
scas
push
cmp
mov
add
ret
xchg
xchg
nop
jge
jae
adc
lahf
and
les
sub
xor
mov
add
add
xchg
fsub
push
movsb
jnp
push
or
cmp
xchg
psllq
popa
daa
mov
stos
xor
cld
xchg
or
imul
or
cmp
sub
stc
shrl
or
jae
push
out
sub
decl
and
fstpl
xchg
mov
mov
jle
pop
mov
andb
cwtl
cmpsb
jp
lcall
add
scas
cmpsl
xor
int
mov
pop
iret
inc
push
jmp
adc
sbb
lock
ficoml
cmp
imul
out
movsl
cwtl
in
mov
hlt
cmp
push
lret
movsb
push
insb
stc
repz
sti
rorb
push
sbb
xor
adc
je
hlt
int3
xor
xor
cmp
dec
or
movsl
mov
add
sbb
ret
adc
pop
pop
xlat
add
adc
out
fcomps
aam
or
insl
ror
test
pop
gs
int3
movsb
fistl
mov
loop
pop
jg
fstpl
push
cli
mov
jge
push
sbb
cmpsb
xor
mov
push
lret
cmp
mov
icebp
mov
popf
outsb
sbb
ljmp
movsl
or
mov
xor
aaa
add
out
addr16
mov
test
out
dec
ja
pop
ja
adc
aas
xchg
sub
mov
xchg
lret
xor
test
add
stc
pushf
pop
lret
aam
hlt
mov
push
adc
loop
shll
and
xor
pop
or
int3
jmp
stc
aas
cli
jecxz
jae
imul
leave
push
pusha
aas
and
iret
cwtl
or
or
mov
push
mov
sarl
add
and
sti
adc
lods
gs
push
xor
fwait
scas
pop
ficoms
xor
cmp
adc
jg
movb
add
lods
xchg
inc
iret
adc
mov
cwtl
pop
aam
jle
or
push
out
mov
mov
lahf
dec
imul
loopne
push
inc
pop
push
xchg
mov
arpl
out
inc
inc
ss
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
mov
jbe
mov
arpl
stos
pop
js
orb
xchg
fisubs
mov
aas
addr16
into
mov
cltd
mov
mov
mov
addr16
call
jae
pop
clc
push
test
mov
inc
dec
inc
sub
stos
push
sbb
xchg
hlt
xchg
push
sbb
mov
or
sbb
hlt
add
xchg
mov
cmp
lock
xchg
fnstenv
aaa
stos
pop
cmpsl
mov
stos
xchg
mov
add
add
mov
std
jge
js
jg
stc
pop
dec
aad
out
or
mov
mov
xlat
imul
fdivrs
sub
sub
mov
sbbb
int3
fs
cmc
out
xchg
mov
mov
add
or
mov
jb
jne
mov
lret
out
xchg
xchg
inc
aad
dec
lds
mov
jno
mov
sub
mov
cmpsl
pusha
xchg
int
cmp
aas
sbb
and
pop
jbe
dec
mov
cltd
xchg
pop
sarl
sbb
dec
adcl
mov
xchg
add
loope
aam
in
cmpsb
pop
sub
sbb
bound
mov
pop
sahf
push
mov
inc
sub
cmpsl
adc
cmp
jle
pushf
ret
dec
add
stos
popa
inc
xor
dec
lods
rol
out
xchg
ds
sti
es
aam
repnz
sub
pop
ss
movsl
insl
jp
inc
das
insl
pushf
in
shl
xor
shr
jle
pop
and
xchg
sub
sahf
out
test
cmp
fimull
gs
or
add
lahf
je
sti
adc
xor
popf
cmp
push
jge
fisubrs
into
pop
repnz
into
call
push
inc
mov
jns
stc
push
inc
aad
cld
mov
nop
xchg
xor
mov
repnz
adc
push
movsb
inc
xchg
imul
repnz
mov
jnp
sahf
fstpl
sub
jnp
dec
ss
cs
out
sti
clc
jno
jns
ljmp
pop
shr
cmp
cmp
lret
cmp
iret
inc
cmp
lcall
and
inc
xor
addr16
enter
lock
push
nop
cwtl
jbe
and
inc
pop
xchg
cmp
loop
cmp
lcall
cmp
andb
fstps
xchg
adc
cltd
stos
jl
add
xchg
pop
hlt
push
pushf
cmpsl
or
push
mov
scas
lods
stos
loope
or
mov
ja
dec
xchg
xchg
ss
roll
xchg
sbb
jp
sahf
lcall
or
shrb
pop
dec
jo
iret
aam
testl
add
push
aaa
lds
lock
jmp
clc
mov
inc
mov
das
out
and
ror
sub
mov
loopne
movsb
jno
jb
cwtl
cwtl
ret
inc
stc
into
in
pop
pop
push
cwtl
sbbb
rcrb
adc
iret
daa
mov
icebp
jl
mov
std
xchg
dec
xorl
mov
test
insl
or
jge
cmp
lret
pop
cwtl
cmp
dec
adc
fwait
dec
pop
test
adc
add
mov
lods
jecxz
shrl
jne
jno
je
cwtl
push
mov
ret
add
test
cmp
sarl
pop
mov
or
cmpl
xchg
push
ret
lret
repnz
cmp
fldcw
arpl
lret
ljmp
mov
adcl
adc
test
mov
out
or
imul
push
loop
int3
jo
aad
adc
js
cmpsb
loope
mov
pop
mov
dec
push
popa
jecxz
pushf
mov
push
lods
mov
lds
add
lret
test
sti
das
popf
movsb
cmp
mov
int3
jae
sbb
add
fdivl
mov
pusha
fwait
call
cs
stos
push
pop
les
leave
push
cmpsl
gs
jl
lcall
popa
xor
pop
filds
sbb
nop
xor
pop
lds
jg
mov
push
int3
sub
subl
sub
arpl
es
dec
adc
les
out
ds
lret
dec
les
mov
ret
xorl
pushf
dec
notb
jl
js
pop
jg
push
call
pop
cmpsb
bound
cs
ss
loop
pop
jb
mov
mov
lea
xlat
into
lcall
xor
add
pop
pop
loope
loope
enter
mov
sub
imul
xchg
aam
hlt
imul
xor
jns
call
pop
jb
jmp
cmpb
popf
movsb
mov
and
inc
add
xor
int
cmp
lods
test
clc
pop
divb
lods
push
sti
fcmovbe
icebp
xchg
xor
enter
sub
adc
cltd
pop
les
inc
sbb
hlt
out
cltd
jae
pop
test
cmp
je
inc
insb
and
cmp
mov
push
fnstcw
imul
fstp
mov
jbe
push
mov
sahf
aaa
sarb
sbb
inc
out
or
lea
and
fs
leave
sbb
jne
push
pop
and
cwtl
pop
imul
dec
mov
out
das
gs
fcoml
xor
sub
or
rcl
xor
rolb
xlat
dec
adc
arpl
pop
inc
mov
notl
popf
inc
mov
xlat
cld
pushf
je
into
testb
mov
sahf
dec
jne
imull
sarl
inc
pop
xchg
jae
mov
rcrl
and
ret
dec
aam
jecxz
sub
jmp
je
xchg
add
in
mov
cmpsl
push
pop
lods
mov
mov
mov
test
rcrl
loopne
sub
sub
xor
and
int3
inc
rorl
and
xchg
mov
cld
cmp
test
out
insl
lahf
sbbl
cmc
pop
repz
xchg
xchg
jg
add
mov
xchg
add
inc
out
jp
mov
sahf
out
mov
in
xor
pushf
in
lret
xchg
aad
mov
jbe
fsubrp
nop
popa
adc
sbbl
push
fdiv
ret
push
pop
push
lock
or
mov
lret
fcomps
std
dec
std
xlat
outsl
enter
mov
pop
mov
mov
int
pop
lods
test
mov
xchg
push
jle
imul
outsb
or
lock
push
pushf
jl
inc
call
and
sbb
cmc
ret
repz
lret
xor
mov
into
jbe
mov
and
in
aas
xorb
pop
ja
cmp
pop
idivb
add
pop
outsb
jle
rcrb
aaa
out
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
adc
addl
shll
add
push
adcl
movsb
push
js
outsb
inc
inc
lods
ljmp
ds
test
lcall
xchg
jecxz
test
push
inc
mov
jbe
pop
sbb
testb
xchg
mulb
sub
xchg
fcmovnu
into
call
or
push
adc
mov
pop
dec
cltd
lahf
push
loopne
mov
lock
push
sar
inc
sar
pop
enter
inc
add
sarl
xor
mov
out
xor
jns
in
or
inc
mov
sub
sbb
jno
or
lock
ljmp
or
inc
mov
cmp
loop
test
add
mov
sub
pusha
arpl
fsubs
orb
push
xchg
ds
test
add
popf
push
ss
mov
in
mov
add
mov
sbb
outsb
adc
add
add
shl
push
stos
mov
pop
or
cltd
sbb
mov
cmp
xchg
in
dec
cmp
jle
sbb
xchg
test
out
hlt
lcall
icebp
push
popa
rolb
pushw
cmpsb
xor
xchg
adcb
xor
std
repz
push
ds
pop
xchg
leave
cmp
push
fimull
mov
or
incb
into
or
push
sbb
push
or
sbb
cmp
xchg
shrl
add
xchg
xor
mov
int3
mov
sbb
std
mov
mov
loopne
or
dec
mov
mov
mov
sub
clc
mov
ja
push
add
dec
mov
addr16
mov
and
scas
cmp
or
lret
cli
push
push
out
cld
sbb
add
js
or
adc
push
xchg
xchg
mov
sbb
popf
mov
dec
pop
enter
lods
aam
lds
jne
daa
inc
add
sub
jnp
test
sub
pop
fnstcw
mov
out
push
and
and
adc
pop
pop
and
mov
dec
arpl
addl
imul
cmp
xor
sbb
stos
xor
sti
fsubs
in
lods
pop
jbe
xor
mov
leave
hlt
inc
decl
test
outsl
sbb
cs
or
icebp
pminsw
lret
sbb
roll
xchg
out
idivb
fwait
inc
mov
push
xlat
sbb
cltd
rorb
pop
mov
insb
xor
pop
in
xchg
mov
stos
movsb
sbb
enter
int
inc
mov
dec
jns
sbb
fisubrl
push
iret
ret
xor
mov
jle
out
mov
cmc
mov
sbb
mov
test
jb
icebp
shr
scas
in
mov
js
mov
hlt
cmp
into
scas
je
not
iret
or
dec
inc
cmpsb
hlt
out
insb
lahf
mov
std
and
ret
daa
call
pop
add
movsb
xchg
test
jno
add
sbb
sbb
pop
ja
cmp
loopne
aad
leave
repz
cmp
cmp
xchg
iret
mov
jl
sahf
cmpsb
inc
test
pop
negl
push
popf
mov
or
pop
inc
push
pop
lea
cld
dec
ljmp
sub
inc
sbb
add
pop
xchg
jns
fsubrl
dec
es
shll
pop
clc
rorb
push
cli
push
or
ret
jge
mov
or
leave
je
imul
cli
shr
mov
pop
adcl
fs
jnp
xchg
pop
out
jne
out
mov
icebp
inc
sub
ds
dec
xor
fimuls
fidivl
loop
aaa
out
sbb
push
lea
push
cmp
jae
jne
xorb
add
stc
xorb
xchg
push
mov
sti
and
iret
jl
cmp
cwtl
and
shrl
loop
and
jo
shlb
int3
fwait
leave
sbb
lds
gs
xor
mov
dec
jmp
mov
dec
cmpl
add
pop
push
jno
pop
mov
mov
xchg
mov
movsb
and
xor
jle
outsl
mov
dec
fstl
fs
popf
out
hlt
ss
push
jp
jns
inc
and
in
loope
xor
xchg
daa
jp
cmp
push
enter
push
xor
fsubl
pop
fsubs
pop
jnp
in
inc
insl
in
jno
mov
cmp
enter
dec
insl
push
repnz
pop
pop
and
data16
xchg
incb
aaa
xor
jne
test
std
sub
dec
cmp
mov
sahf
dec
loopne
adc
jnp
or
cmp
icebp
dec
in
push
sahf
xchg
rclb
cmp
jbe
into
mov
xor
lods
mov
xchg
xchg
jmp
ret
cvtpi2ps
cltd
aam
dec
sub
dec
sbb
imul
adc
dec
mov
out
inc
inc
and
push
push
rcl
dec
arpl
out
arpl
hlt
pop
mov
js
jp
aaa
data16
xor
mov
leave
ret
or
sub
dec
and
clc
lahf
xchg
mov
arpl
fistl
pop
pop
int3
clc
push
es
jnp
dec
into
es
pop
fsubs
cmpsl
push
enter
jl
cmc
mov
cld
aaa
addr16
sbbb
std
and
xor
lock
lret
pop
in
into
or
int3
bound
sub
jae
in
insb
test
jecxz
insb
mov
icebp
repnz
mov
mov
test
cwtl
dec
mov
xor
and
xor
push
pop
jl
ja
test
shrb
jp
pop
pop
mov
jmp
pop
jge
mov
sbb
mov
pop
sbb
or
fstl
imul
icebp
jmp
cld
dec
popf
nop
mov
or
push
push
and
ds
ret
lods
roll
popa
call
jbe
out
out
dec
adc
jae
sbb
pop
mov
cs
popf
jne
lret
fadds
fdivrl
mov
mov
adc
into
xlat
lcall
mov
sub
cmc
jnp
inc
adc
ljmp
or
xchg
push
or
outsl
pop
aas
jae
enter
inc
push
adc
mov
out
jl
add
mov
xor
xchg
cmp
ja
push
adc
xor
jg
and
loop
jb
pop
out
cmc
mulb
subb
jg
xchg
jecxz
pop
push
adc
cwtl
jb
icebp
fistps
rclb
fdivs
dec
xchg
popa
scas
in
sarb
lahf
jns
lock
aas
sbb
inc
add
rclb
scas
dec
sbb
out
pop
mov
inc
or
adcl
repnz
aad
lret
pop
jg
gs
test
dec
ret
int
push
mov
or
mov
dec
sbbl
xchg
push
mov
sbb
gs
mov
jle
inc
xchg
lds
sbb
test
out
push
adc
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
pushf
inc
cmpsb
js
cli
adc
ja
packuswb
pop
mov
std
jno
movsb
jb
or
ss
jo
dec
and
push
mov
lret
faddl
popf
divb
scas
dec
pushf
inc
fcomps
in
xchg
stc
and
fnsave
dec
mov
mov
lahf
addr16
mov
out
test
stc
mov
pop
mov
lret
xchg
repnz
out
jbe
mov
repnz
lret
jge
sbb
fcoml
mov
add
push
lock
or
aaa
cmp
fbld
adcb
push
mov
sub
fidivs
addb
mov
adcl
nop
inc
push
adc
cmp
aad
lods
repnz
lcall
cmp
xchg
and
inc
rorl
inc
cmc
xchg
cmp
sbb
lods
out
jb
mov
jbe
imul
cwtl
ret
testl
sub
clc
jecxz
push
inc
or
inc
push
push
iret
fbld
sub
fsubr
out
sub
scas
cmp
cmp
jo
mov
pusha
and
pop
mov
pop
sub
out
xchg
sbb
out
popf
sti
pop
and
add
dec
sahf
pop
je
xor
mov
aam
sub
sahf
rcr
and
fyl2x
lock
movsb
xchg
add
pop
xchg
in
rorb
or
shrb
inc
pop
dec
inc
add
adc
dec
aad
mov
pop
mov
filds
xor
fdivs
stc
gs
outsb
mov
mov
stc
inc
mov
mov
cmpsb
in
mov
and
cmpsl
or
int3
fsts
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
