push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
xchg
outsl
cmpsb
add
jl
add
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
aad
not
rolb
mov
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
call
ret
fstp
lock
in
cmp
clc
int
out
cli
stc
repz
loope
shll
stc
in
out
hlt
cmp
int
rol
cmp
sbb
xchg
lock
xchg
xlat
call
std
in
in
int
iret
iret
aam
into
sti
leave
fsubp
filds
enter
out
fnstenv
int
fcmovbe
into
cmc
cmp
fmulp
dec
sar
fprem1
aam
call
xchg
shl
rol
loop
xor
cld
icebp
cmp
testb
lock
ljmp
xchg
in
ret
icebp
in
repnz
sarl
lock
cmp
into
rcr
out
stc
ret
mov
jmp
out
in
mov
lock
int
cmp
std
call
clc
mov
out
enter
xchg
ret
out
in
xor
stc
xlat
cmp
clc
shl
aas
clc
push
ljmp
lret
out
mov
repnz
not
fdivp
div
fidivl
sbb
loopne
in
in
xchg
jmp
sub
shl
ror
lret
cmp
icebp
and
xchg
in
xchg
fsub
in
xor
icebp
clc
cmp
iret
idivb
rcr
cli
adc
loop
loopne
mul
test
int
lret
sub
out
xor
cmp
hlt
std
cmp
jmp
loope
loope
icebp
out
fstl
lret
xor
lret
fnstsw
leave
cli
in
cmp
rol
repz
ljmp
out
out
xor
fnstenv
fcomi
lret
xchg
mul
mov
aas
xchg
ljmp
fnstenv
shll
cmp
icebp
cmp
out
cli
test
shr
mov
call
fldln2
xlat
ds
cmp
xlat
out
cmp
stc
mov
out
lock
mov
xor
icebp
cld
jecxz
icebp
imul
shr
fdivr
cmc
lret
out
faddl
fsubr
leave
cmc
shr
ljmp
divl
cmc
stc
test
loope
in
leave
xchg
int3
loop
xchg
out
fsub
xor
cld
cmp
cmp
sbb
lret
xchg
shr
xchg
lret
repz
xor
cli
lret
out
repz
in
or
xor
shr
out
cmp
aas
cmp
fadds
jmp
in
test
out
aad
jecxz
xor
ljmp
fcomp
fyl2xp1
out
jecxz
in
fisttpll
cmp
cmp
int3
aam
icebp
rolb
rcl
int
clc
sti
in
mov
out
shr
rol
enter
out
out
inc
idiv
in
enter
leave
int3
sti
nop
adcb
into
xor
rcl
int
aaa
cmp
stc
ds
out
cld
addb
mov
popl
ljmp
lret
loope
cmp
cmc
test
out
or
ljmp
cli
shr
xlat
loopne
aaa
shr
fst
leave
fldl2t
jmp
out
hlt
call
rcl
into
enter
cld
aaa
fdivrp
in
mov
jecxz
mov
out
int3
fsubrp
mov
xor
jmp
rcl
cli
cmp
loopne
rorl
orb
int3
out
fdivrp
xor
fnstsw
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
into
xor
jl
addb
jl
in
lock
ljmp
ret
call
loopne
lea
jmp
lock
cld
ljmp
stc
enter
into
xchg
lock
hlt
in
cli
aam
into
shl
loopne
fsubr
test
out
mov
lret
xchg
mov
in
fld
fcmovb
lock
aam
ljmp
cld
enter
in
iret
jmp
test
loope
ret
ss
repz
cld
leave
push
fcomi
fiadds
cmp
mov
fsubr
fstl
xor
leave
cmp
shll
icebp
cli
shl
ss
jmp
hlt
cli
jecxz
test
fsubrp
aaa
xlat
out
sbb
cmp
loope
xlat
stc
in
lock
int
out
loopne
repz
jmp
icebp
or
aam
roll
mov
enter
xchg
int
test
aam
jmp
std
cmp
aad
cmp
jecxz
loope
fadd
std
jmp
mov
jecxz
xor
in
fcmovne
into
leave
xor
iret
iret
cmc
out
aas
hlt
sti
sti
ret
mov
cli
out
sti
into
icebp
xor
shl
xlat
xlat
cli
fst
call
loope
orb
fdivr
nop
xchg
mov
decb
sub
cmp
ljmp
rol
stc
lret
clc
std
xlat
xchg
lret
mov
xor
shr
icebp
loop
fsincos
repz
ds
cmp
std
jmp
loop
ljmp
loope
cmp
sti
test
hlt
cmp
fnstcw
aas
out
ds
lret
clc
mov
lock
int3
jmp
into
out
icebp
cmp
addl
lret
out
mov
iret
iret
das
lret
cmp
leave
ljmp
cli
fsubr
in
in
loope
movl
stc
cmp
lock
icebp
cmpb
into
in
aad
mov
out
xchg
mov
int3
fnstcw
stc
cli
stc
lret
loope
cmp
fldl
mov
cmc
cli
iret
enter
shl
in
xor
sub
cli
into
fst
lret
icebp
test
xlat
incb
jmp
ljmp
out
fcomip
repnz
xlat
std
std
sti
ffree
mov
in
hlt
lret
into
in
in
into
xor
xor
ds
fdivrl
aas
test
loope
leave
aam
and
int3
mov
repz
loopne
shr
xlat
icebp
lret
cmp
addl
faddl
loope
shl
xor
ljmp
in
clc
rcr
aam
fsubp
out
ljmp
xchg
cmc
das
enter
shlb
aam
roll
ljmp
and
sub
aad
ret
shl
aad
out
fldlg2
add
aam
shl
not
out
mov
lret
ret
xor
cmp
out
aas
cli
loope
sarl
fmull
idiv
mov
lret
xchg
xor
xor
lock
cmp
hlt
mov
cli
ret
lret
in
out
loopne
xchg
hlt
out
aaa
shr
xor
cmp
int3
test
test
jmp
leave
call
nop
test
sar
call
xor
std
cmc
test
rolb
jmp
ljmp
cmp
call
sti
int
roll
test
out
out
sub
xor
cli
rcr
out
ljmp
roll
call
jmp
out
in
ljmp
in
cmc
test
out
jmp
decb
cmc
iret
cmc
cs
cmp
in
idivb
cmp
cmc
loopne
test
in
loop
xchg
aad
into
divl
lret
call
into
inc
ds
cli
mov
test
test
lret
xchg
in
xor
jmp
lock
hlt
addl
lret
xchg
or
incb
ror
ljmp
loop
not
rol
enter
jmp
enter
in
shrb
stc
aam
clc
repz
icebp
push
ljmp
inc
add
add
add
add
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
inc
dec
mov
jl
add
cmc
flds
std
out
loopne
call
loop
loopne
shr
xlat
in
xor
and
stc
fiaddl
orb
cmc
mov
int
aaa
sub
out
lret
icebp
sti
shl
cmp
stc
jmp
jecxz
loopne
repnz
adc
out
clc
aad
out
sar
rcl
jmp
decb
xchg
in
in
out
enter
in
aam
into
cmp
cld
rolb
xchg
test
mov
rolb
aaa
fdiv
out
fnstcw
jecxz
hlt
shl
call
stc
xchg
xlat
lret
ror
int3
call
faddl
addb
loopne
out
ret
call
fnstcw
shl
fcmovne
cmpl
cld
ljmp
mov
call
out
sub
cmp
int
sarl
out
rcr
aam
test
out
rcr
mov
fucomi
in
cmc
in
cs
stc
out
iret
out
call
shl
idivb
in
ljmp
repz
rcl
hlt
aaa
jmp
rcl
cmc
ljmp
sub
call
aad
enter
repnz
in
xor
int
aam
rol
div
sub
not
test
enter
enter
jmp
mov
into
shl
imul
cmp
aas
repz
std
xlat
aad
cmc
ret
mov
fsubrp
mov
das
aad
clc
jmp
fcomi
imul
in
fcomp
fildl
repz
fcoml
cli
repz
cld
fmul
cmpb
sti
out
and
stc
loop
lock
loop
cmc
cmc
jecxz
in
aaa
sar
loopne
repnz
sar
sti
sti
xchg
sbb
call
fdivr
lret
aaa
jmp
lock
into
testl
call
out
xchg
sbb
out
ret
out
test
sti
out
jmp
cmp
fndisi(8087
jmp
cli
clc
lock
lock
lret
rcr
in
enter
divb
repnz
std
loopne
loop
out
test
lret
icebp
lret
loopne
cmp
fnsave
xor
leave
iret
out
xlat
hlt
aad
aam
sbb
cli
lret
jmp
jmp
vpsrlq
das
call
xlat
cmp
movl
repz
jmp
repz
fcom
std
ror
idiv
fcom
fsubr
mov
std
lock
int3
in
in
ds
xlat
lret
fcmovu
lock
div
jecxz
rcl
shl
fmulp
mov
mov
xchg
xor
cmc
xor
clc
repz
out
in
fld
fstp
ret
int3
rol
orb
xor
in
shl
repz
std
loopne
ds
ret
mov
test
ror
xorl
hlt
cmp
cmp
fnstsw
rol
out
loope
cli
xchg
cmp
loop
ffreep
aaa
out
ret
div
in
lret
adc
in
shl
ror
fmull
mov
shr
ret
int3
iret
int
test
rcr
fdivrp
div
clc
icebp
sbb
mov
xchg
ljmp
enter
aam
cmp
fcmovbe
rcr
lret
loop
int
xchg
xchg
xchg
ds
icebp
fcmovnbe
cmp
xor
idivl
ljmp
fmull
out
lret
sub
lret
ss
cmp
into
cmc
cmp
addb
xchg
mov
in
ret
lock
cld
aad
into
rcl
adc
shl
fsubp
fcmovnb
popl
cld
cld
out
in
iret
leave
cmc
lret
fcmove
cmp
int
ffreep
fucomip
in
mov
idiv
mov
clc
mov
ret
fadd
repnz
cmp
fst
rcr
call
lret
in
int3
in
xor
lock
out
rolb
rcl
out
stc
loopne
lret
clc
mov
xchg
adc
sar
rcl
loop
das
out
out
ds
jmp
cmp
add
rol
in
int3
mov
repz
ds
in
lret
lret
rcl
shr
cmp
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
lea
or
add
enter
cld
add
mov
lea
aam
aad
leave
sub
lock
shl
cmc
mov
out
fldpi
cld
orb
int
leave
lret
fmul
sar
div
test
leave
loop
call
loopne
fcmovu
mov
ror
aaa
sti
rcl
cmp
sti
fyl2xp1
repnz
test
std
xchg
shl
fst
in
lea
lret
rcr
in
not
stc
std
imul
icebp
or
fsqrt
mov
lds
jecxz
hlt
iret
aaa
repz
clc
cmc
lret
leave
aaa
xor
in
cld
roll
fisttpl
jecxz
out
xor
cmp
leave
aas
fidivl
rcr
ret
rol
jmp
iret
fsubr
jecxz
int
and
test
cmc
cmp
rcr
stc
addb
enter
test
shl
roll
lret
hlt
xor
ffreep
loop
cmp
aad
sbb
lret
loopne
mov
in
hlt
idivb
cmp
fucomip
lret
cmp
lds
cmp
ljmp
mov
rcl
int
enter
mul
or
loop
call
in
jmp
repz
xor
int
aad
cmp
fldl
xlat
decb
in
and
xchg
jecxz
leave
ljmp
aas
cli
repz
xor
testl
hlt
cmc
fdivs
xor
iret
jmp
shl
out
sti
rcl
sbb
sti
vcmpsd
int3
aam
rcl
vmaskmovdqu
jmp
cld
ljmp
cld
fisttps
loop
clc
out
jmp
xchg
out
lret
jmp
hlt
cmp
int
fdivr
aam
cmp
aad
loope
hlt
shl
loopne
in
lret
test
mov
mov
ror
lock
rol
int3
cmp
out
fadd
repz
loopne
cli
lock
call
xor
sub
div
repnz
fcmovnbe
aam
cld
fmulp
test
mov
cs
out
ror
cli
fidivrl
shl
ret
addl
loop
loope
das
out
xor
repz
fprem1
aaa
out
icebp
fnstcw
addb
xchg
jecxz
call
iret
jmp
div
test
sti
faddl
in
mov
out
out
std
repz
lock
cmp
idivb
ljmp
fdivrp
hlt
std
mov
mov
mov
fmulp
xchg
into
lret
int3
loopne
ror
fdivrl
cli
xor
iret
hlt
hlt
ftst
fmul
mov
fsubrp
lret
in
cmc
ljmp
ss
fsincos
ret
loop
out
ret
rorb
out
aam
jmp
cmp
xor
fxch
out
or
cli
addl
stc
in
lock
xchg
jecxz
ss
aad
fxch
cld
repz
xchg
jecxz
in
int
jmp
fucomp
loope
xchg
iret
cmp
std
out
cmp
xchg
loop
mov
std
decb
aad
vpsubusb
call
out
in
shr
loope
in
xchg
nop
adcb
mov
not
cmp
ret
icebp
test
out
call
faddl
int
aad
ss
out
cmc
stc
cld
in
loopne
fsub
cmc
std
mov
icebp
and
les
aas
enter
iret
fsub
loopne,pt
cmp
clc
out
testb
test
aam
test
xlat
cmp
ljmp
addb
faddl
call
in
cli
rcl
lret
addb
aam
test
jecxz
int3
mov
out
cmp
into
cmp
xor
cmpb
repnz
shl
mov
rcl
fcomip
jecxz
into
loop
div
clc
rcl
enter
in
into
stc
xchg
int3
xchg
jmp
jmp
aad
lret
ss
sti
adc
test
mov
xchg
call
iret
out
lock
shr
aam
ds
fcomip
aam
ret
mov
xor
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
xor
addb
jl
iret
into
sbb
out
ror
xlat
sti
clc
xor
call
mul
rol
xor
mov
icebp
int
lret
int
fcmovu
idivl
rcl
iret
addb
jmp
hlt
cli
in
xchg
mov
in
fcom
fxch
in
int3
clc
fpatan
not
cmp
ret
call
lret
lea
xlat
leave
jmp
aaa
enter
loope
icebp
ret
xchg
idiv
fisttpl
test
jmp
icebp
xlat
sti
sti
out
imul
iret
in
test
repnz
repnz
test
cld
cli
filds
xor
hlt
cmp
loope
shl
mov
jmp
leave
jmp
jmp
jmp
fucomip
fcomp
mul
std
incb
fdivr
xlat
sbb
flds
sub
out
in
idiv
int3
call
sar
cli
ret
jmp
iret
in
fisttpl
cs
into
fcmovnbe
fsubr
in
xor
shr
hlt
cld
ret
flds
in
xor
aam
rcl
cmp
out
ret
std
aas
aas
sbb
test
test
orb
in
loope
cs
sar
repz
int
sti
cmp
mov
sti
ret
in
out
cld
out
lret
xlat
das
mul
out
imul
cmc
lock
jmp
test
in
fprem
in
lock
xor
idiv
das
out
cmp
in
inc
fcmovb
testb
cmp
xor
std
mul
cmp
ss
into
lock
in
cmpl
out
repnz
mov
into
in
lock
div
shr
loope
xchg
loop
rol
cmc
cli
lret
loop
xchg
xchg
test
cs
fdiv
hlt
aad
cmp
cmpb
neg
mov
cli
std
mov
repz
hlt
cmp
fmulp
call
clc
in
in
fxam
sub
call
fucomp
cs
xor
ss
into
aad
icebp
testb
add
fdivr
loopne
int
in
lret
in
aam
xor
xor
ss
int3
aaa
cmp
xchg
jmp
lret
lock
nop
lret
lret
in
xor
shl
cmc
rcr
test
mov
in
test
xchg
xor
rcl
cmp
lret
cli
shl
lret
cmp
xlat
enter
out
test
enter
lret
sti
out
jmp
flds
xchg
fxch
in
xlat
sti
ficoms
das
rol
out
out
rcl
xlat
dec
aas
repz
jmp
lea
mov
loop
int3
aam
int
hlt
cmp
fcom
xlat
aam
enter
xchg
lret
in
loop
std
int
cld
ret
hlt
icebp
in
cli
out
test
sti
or
fiadds
in
aam
xor
aad
repnz
ret
xchg
out
orb
leave
loop
mov
cmp
sti
std
fcmovnbe
leave
jmp
ror
out
neg
aam
out
in
xchg
jmp
out
aaa
ljmp
cmp
out
idivb
cmp
cmp
cmc
enter
fcomip
out
int
cs
repnz
fcom
cmp
jmp
aaa
icebp
sbb
call
in
out
jmp
xor
sub
ljmp
fyl2x
repz
lock
int3
xchg
enter
shll
shl
xor
shr
aam
cmp
xorb
aas
aad
loop
std
in
into
mov
iret
test
jmp
les
cmp
enter
lock
fcmovu
ret
loope
orb
enter
sub
call
idivb
jmp
in
out
ret
rolb
loope
test
in
jecxz
aaa
repz
xor
sar
int
fcmovne
sub
iret
hlt
out
inc
loopne
clc
movl
jecxz
xor
leave
fnstsw
sar
std
std
shl
div
clc
std
cmc
loope
mov
fucomp
xchg
xchg
out
out
call
xor
ds
cmp
aam
ds
mov
in
loopne
out
enter
mov
mov
jmp
aam
into
lret
rcr
fstp
les
mov
jl
add
xchg
xor
rcl
shl
ljmp
cmp
cmp
fcmovnbe
faddp
loope
iret
fimull
ljmp
aaa
cmp
out
ds
hlt
cld
fmulp
mov
in
cmc
xchg
lret
lret
repz
repz
icebp
cmp
mov
test
in
mov
ljmp
xor
sarb
repnz
jecxz
aam
xchg
rol
testb
xchg
iret
or
das
cmp
out
lret
repnz
aas
sarl
ds
out
testl
repnz
enter
cld
cmp
cmp
imul
repnz
hlt
fld
fiaddl
int
fcmovbe
lock
in
icebp
xor
das
cli
ss
repz
aam
iret
stc
std
fmuls
iret
cli
in
mov
aam
ds
fsub
in
call
std
aas
aad
xchg
ljmp
mov
xchg
xchg
aad
shr
rcl
in
leave
sti
aam
aas
call
test
in
shl
fscale
mov
sti
mov
aam
out
repnz
out
hlt
std
loope
into
in
fcmovnbe
aam
xchg
test
fcmovnu
int
sti
jmp
cld
add
in
imul
ljmp
int
clc
jecxz
std
idiv
ret
in
in
loop
mov
xor
aam
xor
ss
loopne
ds
not
call
iret
sbb
lock
loop
into
leave
shr
repz
cmp
xor
aas
aad
test
hlt
mov
rcll
ljmp
repz
sbb
repz
lret
sbb
iret
out
lret
out
cmc
ret
in
fdiv
cmp
cmp
loopne
in
jmp
cld
clc
in
in
test
out
hlt
std
fsubr
cmp
cli
out
xor
adc
call
leave
call
clc
fdivr
cmp
call
cmp
std
clc
jmp
ret
xchg
ljmp
cmp
in
lock
repnz
jecxz
and
test
fcomip
enter
xchg
out
jmp
ret
lret
sti
imul
idiv
fildl
aad
repz
loope
ljmp
ljmp
lret
int
aaa
cmp
fabs
rolb
hlt
movb
aaa
icebp
shr
int
idiv
shr
cmp
faddp
hlt
in
cmc
testl
divl
sar
cmc
cld
cld
hlt
idivl
ds
shl
mov
ljmp
out
enter
ret
rcl
repnz
or
mul
lds
lret
enter
int3
lret
clc
in
int3
ljmp
neg
rolb
fmulp
sti
nop
mov
xorb
repz
fsubr
leave
leave
fcmove
into
out
faddl
mov
lret
f2xm1
xchg
nop
out
mov
aaa
repz
lret
jmp
in
cli
cli
neg
loop
fdivrp
clc
cmc
std
cli
mov
icebp
lock
lea
in
icebp
in
out
fistpll
lret
fdivrp
out
ret
std
filds
int
lret
jmp
xor
out
cmp
fucomip
loope
fucomi
cmc
cli
sar
aam
or
xchg
hlt
out
xor
int
std
stc
loope
in
in
jecxz
lock
loop
jecxz
out
out
leave
out
xchg
aam
xor
xlat
stc
lret
stc
dec
imul
out
test
roll
hlt
jmp
xchg
jmp
imul
hlt
leave
ror
cmc
jmp
cmc
in
cld
out
cld
ret
fcmovnb
mov
xchg
cli
cld
testb
int3
out
das
in
cli
jmp
call
repz
in
in
lret
out
jmp
in
iret
into
not
das
leave
jmp
jecxz
shl
cmc
mov
loop
call
loop
in
stc
int3
repz
cmp
stc
cmp
out
mov
leave
fimull
repnz
lock
out
into
clc
ss
std
leave
in
aas
aad
lock
fsub
lret
test
lea
loop
xchg
enter
fidivrl
fcomi
iret
fcmovnu
fcmovnbe
loope
ss
cmc
cli
clc
cld
jmp
addl
loop
xor
add
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
mov
jl
addb
jl
out
cli
cmp
fdivrp
cmp
int3
cmp
ret
mul
jmp
in
xchg
cmc
out
cmc
mul
in
fdiv
rcl
sti
lret
jecxz
in
aas
aad
mov
ds
fldpi
mov
fsubr
xor
stc
rol
out
divl
aad
fadds
jmp
iret
mov
loop
ret
icebp
xor
xor
ret
test
enter
clc
enter
out
test
icebp
out
enter
into
xlat
aad
sar
out
cmc
rolb
call
repnz
call
aam
out
stc
test
rcr
jmp
in
cmp
fstp
lret
leave
ss
xor
int3
aaa
clc
hlt
int3
in
clc
jecxz
rcr
ljmp
jmp
stc
into
lock
in
lret
cmp
aam
into
rcr
xchg
cmp
xchg
orb
in
rcl
jmp
into
clc
test
fcmovu
lea
jmp
jecxz
xor
fnstcw
ror
into
cmp
loop
ffreep
sarl
cli
ret
imul
cli
ret
addl
stc
repnz
fyl2xp1
stc
jecxz
out
hlt
in
cmp
loop
repnz
sub
jmp
iret
std
shr
clc
fucomip
cmp
fndisi(8087
shl
in
leave
cmc
xchg
xchg
lret
shr
jecxz
icebp
out
stc
repnz
jmp
repnz
roll
out
test
aam
jmp
jmp
xlat
das
enter
iret
iret
loopne
ret
xchg
les
jecxz
cli
adc
out
int3
lret
in
repz
out
aas
fcmovnu
fdivp
jecxz
decl
xchg
rcr
xchg
xor
repz
shlb
cmp
sarb
test
ror
lea
loopne
ljmp
call
int3
cmp
out
sbb
mov
shr
in
jmp
test
call
into
out
ffree
aam
in
mov
dec
in
mov
xchg
out
lret
xor
add
out
icebp
enter
cli
fsub
stc
call
jmp
ret
fxch
jmp
lock
iret
test
out
fsqrt
xchg
mov
in
enter
enter
fdivr
cmp
ds
adc
sti
shl
lret
in
in
jecxz
test
icebp
jmp
hlt
aad
xor
jmp
adc
in
xor
decl
mov
mov
out
clc
clc
hlt
cli
fcmovnb
int3
call
rol
fcomp
cmp
ret
sub
test
xchg
in
and
les
fxch
hlt
lret
icebp
in
mul
test
flds
lock
iret
fsubrp
icebp
repz
out
stc
cmp
xor
ret
std
fmul
call
in
icebp
xchg
out
into
out
enter
jecxz
loopne
out
std
mov
xchg
mov
out
out
fxch
lock
clc
out
aaa
hlt
cmp
incb
enter
mov
xchg
fsub
lock
out
sub
aad
in
fnstcw
cmp
ror
xlat
in
aas
fsub
add
mov
cli
call
out
xor
mul
cmp
xor
push
ret
out
loop
stc
cld
sti
jecxz
fldl
jecxz
xor
aas
cmp
icebp
cmp
lock
shl
leave
jmp
fsub
in
out
xor
xor
int
jmp
fmul
ss
aas
addl
test
test
mov
ljmp
cmp
cld
fstp
in
in
cmp
aad
call
in
ljmp
xor
rcr
rcr
fiaddl
cli
and
dec
sti
orl
lret
fistpll
loope
mov
aam
std
lds
jmp
orb
iret
cmc
fmul
cld
cmp
lret
xlat
cld
loopne
out
xlat
imul
mov
rcr
loopne
ljmp
stc
jmp
in
cli
cmp
clc
in
test
sub
xchg
jmp
int
sub
int
call
aam
mov
jmp
sarb
enter
fidivl
mov
mov
jl
add
ss
jecxz
test
aam
into
out
mov
into
xor
cli
test
shl
xlat
aad
fstp
out
lret
in
fmuls
fsubrl
aaa
hlt
fcmovnu
out
call
adc
rolb
fcmove
leave
mov
call
icebp
xor
xor
aam
notrack
ret
mov
loop
loope
xchg
jecxz
loop
fldt
hlt
sti
ror
repnz
into
hlt
xchg
ljmp
out
out
iret
cmp
leave
aas
aam
cmp
cmp
or
lret
shr
ret
out
aam
in
out
sti
cmp
cld
fadds
incl
lea
rol
into
repnz
out
out
stc
ljmp
lock
stc
loopne
std
mov
jecxz
in
in
test
fdivp
rcr
int3
test
rcr
mov
mov
mov
repz
jmp
clc
iret
hlt
sar
fmul
lock
fnstcw
hlt
lock
ljmp
in
mov
aam
int
shl
xor
iret
fidivs
aad
int3
rcr
shl
loopne,pt
fiaddl
xchg
jecxz
fadd
rcl
int3
aaa
aam
ss
icebp
cmp
lds
fsub
fisttps
cs
ljmp
ds
sar
ror
mov
jmp
into
into
bnd
add
sar
int3
cmp
cmp
in
ljmp
aad
enter
mov
int
xlat
shll
enter
into
aaa
clc
lret
hlt
out
fucom
div
aas
out
xor
call
mov
jmp
ss
cmp
ror
sarl
cmc
xor
out
fucomp
enter
nop
ret
lock
int
jmp
cmp
int
cmc
ret
sbb
mov
in
lret
into
stc
shr
aad
ror
std
rcr
test
test
test
int3
xchg
in
test
rcl
iret
sti
dec
repnz
xlat
fdiv
loope
cld
ret
ret
sti
stc
mov
mov
iret
int
icebp
ror
repnz
cmp
stc
jecxz
icebp
testb
mov
in
hlt
xchg
div
xor
loop
cli
in
fdivl
stc
fmulp
iret
shl
jmp
loopne
stc
call
mov
rcr
out
rol
fucomp
int3
stc
in
jecxz
xchg
ret
mov
lret
std
ljmp
jmp
ljmp
cli
out
in
rcr
sbb
aam
ljmp
xor
icebp
enter
iret
int
jmp
fcmovu
fsubr
out
fadds
and
call
lds
rol
cmp
hlt
shl
loope
adc
imul
fsubr
clc
mov
int
out
lret
hlt
int
fmulp
cld
cmp
in
sti
leave
or
rcr
int
in
int
shlb
xor
ret
cmp
aad
call
test
fucomp
out
std
lock
jmp
out
jmp
fdivrp
jmp
fcmovu
out
loop
or
out
mov
xor
iret
call
jmp
cmp
aam
iret
rcr
ftst
jmp
ds
in
xchg
mov
fimuls
idivb
cli
ss
rcr
cmp
ret
fucomp
in
rcr
int
lea
aaa
sti
aad
out
ljmp
sti
xchg
call
jmp
xor
xor
fnstcw
repz
test
clc
ffreep
sub
xchg
loopne
int3
in
cmp
in
out
sti
cmp
out
lock
cmp
lret
enter
fidivs
in
call
cli
aad
cmp
fdivp
sti
std
cmp
call
lret
fsubrp
ljmp
iret
ss
sar
std
leave
enter
iret
ss
addl
and
subb
int3
int3
call
ss
repz
in
xlat
fcmovnu
fsubr
and
loopne
in
repz
int3
sti
leave
fdivl
fcom
in
cli
decl
mov
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
xor
and
add
loop
rolb
cld
in
mov
clc
shl
into
sarl
cmp
out
cli
jecxz
bnd
jecxz
cld
or
lea
imul
hlt
enter
out
sarl
int
in
jecxz
clc
out
mov
mov
xchg
loop
xor
div
xor
cli
enter
stc
test
aad
repz
neg
lret
mov
rcll
fincstp
leave
xor
jmp
out
out
cmc
icebp
fsub
repz
shl
ljmp
xchg
mov
xor
in
aaa
cmc
sarb
jmp
mov
clc
shl
lret
std
in
int
test
shl
jmp
aaa
sti
in
sti
fst
in
call
icebp
stc
int
loopne
decb
lock
sti
icebp
divl
loopne
ret
cld
stc
fxch
lret
loopne
out
mov
ljmp
iret
call
fcom
stc
std
out
repz
cli
mov
fsub
shl
lret
xor
shl
in
std
cld
int
cmp
out
xor
xchg
adc
orb
out
in
jecxz
vshufpd
clc
lret
xor
cmp
orl
icebp
xchg
in
shr
leave
jmp
fadd
cmp
cmc
cmp
stc
in
ljmp
mov
out
shlb
in
int
ljmp
loop
hlt
addb
decl
das
hlt
fpatan
xor
into
out
in
fxam
cmp
in
inc
out
out
mov
in
out
hlt
xor
shll
out
out
hlt
fiaddl
out
cmc
ret
out
fdivrp
adcb
xor
jmp
icebp
sar
lret
int3
loope
cmp
lock
cmp
mov
xchg
leave
inc
loope
in
ror
out
cmc
leave
aam
hlt
rolb
cmc
not
fdivrs
in
in
jmp
loopne
fcmovnu
call
aam
xlat
xlat
roll
addb
les
iret
out
cmc
fsubrp
ffree
aas
cmp
ss
stc
add
test
out
icebp
orl
in
call
jmp
loope
and
xlat
roll
ljmp
imulb
shl
xlat
lret
aam
cli
out
fldlg2
mul
and
mov
loop
test
orl
lret
out
icebp
fucomip
in
cld
cmp
cld
idivl
add
lret
jecxz
fisttps
fnstenv
iret
sti
ss
idiv
in
stc
lock
incl
cli
xchg
mov
sti
std
cli
xchg
shl
fmulp
jmp
xor
std
repz
lea
ljmp
cmp
lret
xor
ds
int3
repnz
fimull
jmp
mov
jecxz
xlat
xor
cmp
clc
cld
clc
repnz
fldz
iret
aam
stc
idiv
int
mov
in
std
and
jecxz
sarb
repz
repz
cmpb
out
cmc
ret
sar
ffree
in
movl
repz
in
stc
aam
stc
xlat
xchg
fucom
sar
mov
lret
loope
in
mov
xlat
mul
out
lock
lock
incl
xlat
jecxz
out
fistl
rol
jecxz
xor
enter
cld
std
lock
lock
mov
lret
fst
roll
jmp
cmp
in
inc
cmp
and
neg
hlt
sub
lock
incl
rol
in
loop
ss
fdivr
sarb
in
enter
fdiv
loopne
rcl
xor
enter
fcmovnbe
sub
repz
fscale
mov
sbb
test
fstl
lret
aam
cmp
cmp
aam
ret
testb
mov
in
das
xor
xor
cmp
out
sti
cmpb
fcomp
test
fsubr
in
out
ror
sub
mov
cmp
std
aaa
aad
lock
not
jecxz
ret
incb
xchg
mov
in
shrl
xor
xor
ljmp
aas
mul
test
loop
fisttpl
test
add
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
mov
and
jl
add
mov
mov
fsubrp
repnz
icebp
enter
enter
icebp
sbb
mov
xchg
out
rcl
in
rol
cmc
sti
cmp
loop
sbb
sti
sti
fsub
loopne
cld
in
and
cmp
hlt
aaa
aaa
in
fnsave
incb
test
mov
xchg
xlat
fcmovnu
nop
loope
int3
out
in
lret
cs
sarb
int
out
fldl
out
ljmp
out
shlb
in
out
std
in
aam
fdivrp
fsubr
fprem1
cmp
icebp
fcmovu
xor
mov
out
lret
aam
fcmovnbe
aam
fcom
clc
repz
sti
std
lock
fpatan
mov
out
jmp
test
in
roll
cmp
enter
in
fidivrs
aaa
shl
aad
in
aad
std
mov
cs
ljmp
loopne
lock
fcmovbe
cmc
mov
sbb
out
test
sar
out
ljmp
into
cmp
into
int
int3
int3
fdivrs
mov
cmp
loop
loopne
cmc
rol
leave
in
test
imul
cmp
cmc
lret
sti
shl
xchg
lock
mov
jmp
xchg
in
xor
clc
fnstsw
fcmovbe
hlt
fdivp
std
lock
stc
jmp
out
or
lock
in
xlat
sti
xor
in
cmp
shl
xor
neg
sbb
in
icebp
repz
mov
rcr
cmp
aas
cmp
mov
test
aas
sub
std
jecxz
icebp
push
idiv
aad
vpsadbw
aaa
cmp
xor
cmp
mov
fcmovbe
xchg
ficoms
fcmovbe
ror
ljmp
loopne
in
cmp
cld
lret
ds
into
in
xchg
loopne
jmp
cmp
fucomi
fcomp
in
cmp
loope
adc
xlat
test
lret
sub
xor
iret
xor
repnz
out
repz
aam
roll
adc
loopne
nop
fldl
rcl
xor
out
iret
int
repz
loopne
rolb
fdivr
xchg
rcll
shl
hlt
stc
rolb
test
mul
fisttpll
call
lock
sti
cli
ljmp
cmp
rol
loope
faddp
sar
cli
in
iret
int
test
ret
cs
cmp
cld
addl
fsubp
ljmp
sub
aam
les
ljmp
cli
cli
shl
repnz
xchg
xlat
mov
test
xchg
xchg
in
call
int
out
fxtract
out
repz
loop
cli
addb
int3
fucomp
nop
imul
loopne
into
ret
divb
xor
icebp
iret
repz
ret
out
ret
xchg
mov
xchg
ret
out
shlb
ss
incl
out
adc
int
mov
leave
addb
loop
in
cli
mul
cmp
lock
inc
and
std
aad
fstp
cmp
vpsrlw
aaa
jmp
imul
xor
out
cmp
out
mov
idiv
enter
lret
repz
lds
in
in
in
leave
aad
lret
xor
icebp
cld
shl
ds
lret
mov
mov
in
into
xor
in
int
bnd
aam
testl
ljmp
fldz
rcl
out
rcl
lret
out
cmp
clc
idiv
ret
hlt
cmp
fiadds
rcll
imul
sar
lock
fcmovnb
sti
cli
cmp
rcl
out
loopne
in
icebp
enter
cs
test
int3
cld
int
fucomi
cmp
xchg
in
out
test
or
popl
cs
shr
sti
sti
hlt
cmpb
hlt
ds
aam
mov
in
xchg
fdiv
cmc
xor
jmp
fcomp
cmp
div
int
icebp
rol
roll
sub
movl
leave
fucomi
rol
cmc
fmulp
fsubr
stc
cld
xchg
clc
mov
fdivrp
out
ljmp
xor
icebp
xlat
incb
fucompp
loope
call
add
sahf
add
add
les
rcr
fxch
enter
sbb
sub
add
cld
loope
das
aaa
leave
int
icebp
sti
cs
out
in
fildl
lea
out
repz
fidivl
ljmp
cld
out
stc
fldl
xchg
lock
aad
fsubr
cli
cli
loope
fmul
rcl
loopne
cli
xchg
cmc
test
in
fcoml
xor
cmpl
fcmovu
hlt
out
jmp
fsub
rol
mov
test
in
loop
imul
aas
xor
adc
test
incb
loop
int
clc
shl
cmp
repnz
loopne
fucom
into
leave
loop
fildll
call
repnz
fnsave
loop,pt
aaa
loop
jmp
mov
call
ret
ss
fcmovbe
cmp
xlat
cmp
aam
fcmovnb
loop
test
test
hlt
aaa
out
lret
les
cld
jmp
stc
addb
mov
neg
orb
repz
in
iret
cli
aaa
enter
aas
ret
repnz
out
in
lds
into
fists
cmp
out
in
test
cmp
fiaddl
stc
loope
jmp
fninit
sbb
xbegin
fadd
iret
ds
ror
std
movl
in
jmp
enter
in
aad
aad
cld
into
cmp
loopne
fdivrp
and
fdivr
cli
fucomip
nop
mov
out
fsub
cmp
aam
roll
icebp
sti
hlt
stc
mov
loopne
ljmp
lock
icebp
clc
jmp
aas
cli
cmp
xlat
ret
repnz
cli
enter
mov
fucomp
in
in
loopne
int3
jecxz
jmp
clc
rcl
fmul
fneni(8087
ds
loope
out
test
clc
enter
test
in
ss
rcl
iret
aad
loopne
xchg
jecxz
fdivr
ljmp
cmp
cmp
in
out
leave
cmp
aas
fmul
in
fsubp
clc
loope
fmull
xchg
out
sub
aad
ljmp
jmp
lock
loope
ds
in
call
int3
fcmovnbe
lret
aam
ror
hlt
int3
sarb
ds
loop
aas
sub
lds
rcl
icebp
repz
cmc
enter
fnstsw
xor
sti
repnz
fcmovnu
lea
mov
mov
xor
enter
in
fmul
fdivr
sbb
rolb
test
fucomp
cld
in
fldl
jmp
into
jmp
rolb
xchg
leave
out
or
shl
jecxz
jmp
in
vpsrad
cld
stc
cld
ljmp
mov
fisttpl
in
loope
ljmp
cmp
cmp
dec
ret
xor
lock
in
mov
clc
call
iret
test
mov
jmp
out
out
hlt
rcl
xlat
ds
cmc
lock
lock
fsubr
test
lock
aad
repnz
in
iret
leave
icebp
cmp
fcmovb
in
aam
stc
cmc
enter
dec
mov
lret
rcr
xchg
repz
xor
out
std
cmc
ljmp
addb
cli
std
xchg
loopne
imul
hlt
in
fmul
lret
cli
stc
hlt
fdiv
testb
out
cmc
fisttpll
in
mov
sub
out
clc
xlat
out
out
sarl
push
fcmovnu
ret
lock
cli
xchg
repnz
lock
ret
shl
std
xlat
cmp
fdivr
aaa
sbb
std
aad
in
xlat
xchg
clc
in
leave
lea
cmp
fcmovbe
out
fst
int
fcmovb
fsubp
rol
out
mov
loope
call
xor
repnz
sarl
ror
clc
std
idiv
hlt
jecxz
out
aam
call
fcmovnbe
iret
jmp
call
aaa
call
sarl
jmp
enter
shl
repnz
ljmp
clc
cmp
repnz
fincstp
jecxz
rorb
ret
mov
lret
shl
in
in
aam
jmp
fcmovnb
into
loope
in
cmc
ffree
enter
xchg
icebp
push
rorb
xor
jmp
enter
vpsubusb
sub
xor
pop
mov
add
iret
stc
cmp
rcl
ds
repnz
loop
std
ret
jmp
in
loop,pt
aaa
xor
shl
cmp
loop
sbb
ds
fimuls
xchg
xor
cs
in
icebp
rcl
ret
xchg
clc
nop
jmp
rcl
repz
iret
cs
fistpll
test
aad
in
fsubr
jmp
out
enter
aam
cs
ss
stc
or
adc
stc
xchg
loopne
rolb
ljmp
enter
in
shl
aas
int3
cmp
fsqrt
incl
ljmp
in
in
xor
lock
out
repnz
int
fldl
cld
call
leave
int3
xchg
int3
xlat
ret
ljmp
rcl
into
sbb
cmp
neg
out
ljmp
repz
shlb
jmp
in
jecxz
ret
fcmovbe
cli
rorb
sti
lret
test
out
mov
loopne
int
in
call
rcl
out
lock
out
out
xchg
test
xchg
or
xor
in
aam
fdivl
sti
icebp
repz
fsincos
cmp
add
sti
incl
int3
enter
call
test
jmp
loopne
fdivr
lret
out
jmp
test
loope
repnz
out
int3
test
aas
repz
mov
add
iret
jmp
loop
ljmp
lret
hlt
cmp
rcl
jecxz
fiadds
out
rolb
ret
out
xlat
stc
ffree
aas
test
shr
clc
ret
in
mov
lret
repz
ror
out
lret
xor
push
div
cmp
div
xchg
mov
out
out
cli
out
fmulp
lret
int3
in
out
cmp
std
xor
mul
cmc
fdivr
fcomip
fld
sub
shl
jecxz
iret
shl
cmp
cmp
cmp
neg
cmp
in
xlat
clc
loope
test
ret
fiaddl
xor
xor
rol
cs
aas
imul
incl
cld
repnz
fucomi
fmulp
cli
incl
out
lret
shlb
out
cli
ds
xchg
rcr
mov
addb
xor
cld
cmp
aas
rcl
loop
sti
lds
imul
test
dec
cmc
xchg
loope
repz
cmp
jmp
leave
jmp
iret
rcr
rol
out
and
out
test
hlt
das
jmp
int
lret
xlat
int
aad
sti
roll
lret
into
xchg
in
icebp
fsubr
shr
fcmove
aad
test
hlt
aad
xchg
cmp
out
xchg
fmulp
cmc
repz
not
aad
repnz
fsincos
clc
sti
jmp
in
loopne
xchg
shl
loope
xor
into
ss
rcl
into
clc
cld
div
and
adc
lock
xchg
cld
rcl
sub
out
clc
out
fcmovu
loopne
sti
iret
loopne
test
sti
fadds
cld
mov
lock
clc
xor
loop
pushl
cmp
fidivrs
sti
cmp
addl
jecxz
imul
xlat
into
imul
fst
repnz
stc
rol
xlat
bnd
mov
out
aad
aad
stc
fstpt
out
jmp
clc
sbb
icebp
shr
out
stc
xlat
lret
sub
xchg
loopne
lock
in
lock
jmp
rcl
hlt
xchg
cmpl
test
roll
ror
out
ror
sti
jmp
xlat
xor
loop
mov
ljmp
xchg
xchg
out
les
out
in
icebp
jecxz
lret
jecxz
std
hlt
rol
call
xor
mov
das
aaa
stc
out
int3
sti
cli
call
aad
mov
enter
mul
mov
lock
hlt
fld1
icebp
cmp
fcmovne
sub
cmp
out
orb
vpcomuq
clc
loopne
xor
clc
xlat
cmp
ret
aas
roll
int3
shl
repz
out
lret
int3
lret
cmp
int
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
push
in
mov
xor
add
shr
icebp
fnstcw
xlat
div
clc
xchg
test
hlt
mov
jmp
into
fsub
ljmp
jmp
sarb
shr
jmp
lock
aaa
out
out
fcmovb
hlt
cmp
xlat
iret
cmp
lock
shl
out
std
in
mul
and
sub
repnz
lock
cmp
lret
repz
hlt
roll
loope
fiadds
test
ror
leave
xor
out
jecxz
call
fsub
ret
fcmovnbe
testl
out
call
fcmovnbe
cmp
shl
filds
out
fadd
xchg
rcr
rorb
out
ror
aad
cmp
icebp
cmp
std
rcl
repz
xchg
fadd
sbb
xor
jecxz
cmc
call
loope
cmp
cld
in
loope
out
loope
xchg
ret
in
shl
into
div
jmp
int3
aas
std
xchg
fdivr
hlt
in
out
mov
lea
in
iret
std
idiv
cmp
iret
imul
fcomp
test
stc
repz
xchg
out
std
loop
fidivs
call
in
cld
xor
loope
aad
xor
mov
fsubp
xchg
loop
lret
iret
sub
call
lret
cmp
mov
aad
or
loope
in
nop
shr
iret
in
out
lret
fsub
cmp
cmp
shl
test
cld
test
in
int
jmp
iret
loop
xlat
not
int
clc
stc
fdivrs
sti
cmp
shl
mov
sti
in
ffreep
faddl
loope
aaa
div
cmp
fistpll
enter
fdivp
hlt
loope
incl
mov
cli
mov
sti
ljmp
std
fucomi
rcr
std
neg
mov
fimull
cmc
cmp
sti
stc
lock
lock
clc
cmp
xchg
fldl
in
shr
ret
out
aad
ret
shr
cmc
rcl
ret
jecxz
ret
shl
mov
loop
fdivr
loope
leave
test
jmp
sub
int3
into
xor
sar
cli
ds
rolb
testb
enter
int
ljmp
test
fdivrp
imul
sub
xchg
lock
int
rol
call
ror
cmp
iret
cmp
icebp
jmp
clc
fsub
in
xchg
jmp
icebp
stc
clc
shl
sar
test
cli
xor
call
mov
lret
inc
ror
repnz
call
aam
out
repz
shl
ret
test
stc
cld
rol
out
xchg
out
xor
xor
cli
fstp
ss
int3
jecxz
xlat
std
ds
loope
xchg
nop
shr
xor
in
xor
shl
lret
ss
loop
aad
shl
neg
std
cli
loop
jmp
aam
xor
ror
lret
cmp
fcom
aad
fcomi
in
rolb
ljmp
xor
aaa
call
ror
into
rcr
xchg
aas
xchg
cli
mov
incb
int
leave
in
repz
jmp
std
clc
repz
aad
out
ffreep
std
shl
ljmp
in
iret
loop
int
lret
bnd
jmp
loopne
std
loop
aam
std
shl
xlat
faddp
xchg
sub
ss
aam
xor
cmp
jmp
out
addb
sti
shl
fcmovnu
xchg
or
imul
std
rcl
lret
fchs
and
loop
in
sti
lret
xchg
xor
lock
stc
in
xor
ret
cmp
sbb
aas
mov
stc
stc
nop
cld
in
lret
shlb
loopne
cmp
shl
sar
std
loop
sar
xchg
fscale
sub
xchg
lret
mov
cmc
fnsetpm(287
out
aaa
xor
cmp
test
addl
out
into
fisttps
ret
cmp
in
icebp
loope
repnz
out
test
in
xchg
lret
call
sub
cmc
leave
sarl
ret
ret
out
sbb
lock
cmc
loop
in
in
ror
xlat
enter
mov
mov
jmp
ret
int
xor
test
ss
addb
jl
repz
mov
stc
xchg
out
mov
xor
cmp
into
cli
xor
fmul
jmp
cmp
fcomp
ret
clc
ret
iret
int
std
in
xchg
jecxz
ds
int3
sub
in
lock
fsubrp
iret
sar
neg
test
fadds
mov
loop
loopne
xchg
das
loopne
sti
cmc
out
iret
lret
xor
ret
clc
ss
fstpt
test
mul
icebp
in
fisttpll
into
lret
cmp
fmul
lret
test
cld
ret
sbb
enter
int3
leave
repz
xchg
in
rcl
out
in
aam
aam
loopne
out
lock
icebp
loop
clc
in
mov
out
hlt
das
xor
out
xor
cmp
xchg
aad
movb
ljmp
in
cmp
enter
ror
xor
rcr
lock
in
ljmp
sbb
repz
xor
xor
rcr
shr
rolb
std
test
cld
shl
jmp
jmp
jmp
repz
shl
addb
fisttpll
shl
fsub
lock
clc
in
iret
icebp
sti
clc
loopne
in
mul
les
leave
enter
cld
xor
into
cmp
fnstenv
lret
loope
cmp
cli
out
clc
test
lret
ffreep
fucom
out
cld
lret
shr
aaa
xor
cmp
cmp
fcmovnu
ror
aam
aas
sar
hlt
loopne
or
ljmp
not
out
mul
hlt
jmp
int3
idivb
and
ret
jecxz
mov
shl
jmp
xor
into
ret
idivb
cmp
ljmp
fcmovu
jmp
ret
loope
sub
xor
cli
aad
cmc
jmp
ds
out
fucom
test
loopne
les
in
shl
ret
fxtract
sbb
sar
in
neg
test
fisttpll
fsubrp
pushl
fyl2x
fcmove
lret
ljmp
cmp
mov
jmp
rcl
add
hlt
xor
xor
clc
hlt
fxam
lock
testl
sub
xchg
int3
cmc
out
jmp
cli
out
push
repz
ret
sti
sti
sti
fninit
or
ret
xchg
fidivs
out
jmp
xor
mul
in
in
repnz
mov
jmp
fisttpll
jmp
out
int
aam
lret
out
sti
cmp
fidivrl
cmp
fildl
mov
out
loopne
dec
loope
xlat
xor
in
stc
xor
ds
aad
loop
out
in
in
cmp
sub
rol
loopne
aaa
sar
icebp
aad
not
cmp
add
rol
orl
mov
lock
clc
repz
hlt
jmp
repz
div
orb
sti
out
incl
out
lret
sti
cmp
leave
rcl
fcomp
clc
repz
mov
icebp
in
cmp
xor
rolb
aad
mov
call
div
cmc
jmp
sar
aad
clc
lret
cmp
idiv
test
cmp
test
call
adc
int3
cli
out
out
shl
shl
shl
jmp
cli
leave
nop
enter
loop
shl
lock
repnz
fcmovnbe
rcr
ds
ftst
mov
in
xor
aaa
aad
int
fidivrl
fadds
dec
int3
fmuls
fdivr
aaa
lock
stc
cmp
lret
div
std
rol
not
rcl
mov
fucomip
lret
mov
aam
cmp
lret
rol
out
fsubp
adc
cli
fildl
call
mov
sub
sub
cmp
cli
cmp
out
rorl
loopne
xchg
mov
lock
out
aam
sarb
lret
hlt
shl
xchg
in
call
out
repz
cmc
fidivl
into
lock
stc
cmp
aam
test
shl
mov
fdivr
xchg
jmp
iret
int
xlat
out
idiv
ss
xor
lea
jmp
rcl
int3
iret
rol
shll
or
xchg
sarb
jl
vcmpsd
in
in
shl
fsubp
leave
xor
int
sarl
ljmp
rcr
movl
out
rorl
ror
repz
out
addl
repz
imul
int
fldl
fmull
sub
aam
sti
cmp
fincstp
fucom
ffreep
ljmp
cld
loopne
xchg
icebp
in
xor
xor
fcmovbe
enter
in
out
cmp
test
mov
fdiv
loopne
xchg
inc
lret
stc
into
clc
idivb
std
cmp
out
filds
fiaddl
xchg
xchg
int3
imul
out
xor
neg
out
fld
cmp
hlt
ret
mov
ret
cld
loope
test
lret
shl
hlt
sarb
incb
fiaddl
call
aad
lret
fmul
repz
out
rolb
les
cmc
xor
cs
cmp
icebp
loop
shl
xlat
ret
call
aam
std
mov
enter
int3
test
loopne
ret
jmp
sti
into
sti
lret
lret
cli
aad
in
cmc
cli
cmp
stc
rorl
shl
repnz
cmp
cmp
iret
into
test
rol
mov
nop
leave
out
mov
out
in
cmc
repz
aas
fdivr
mul
cmp
in
ds
call
rcll
shl
xor
aaa
stc
cmc
loope
xchg
movl
cli
decb
fyl2xp1
repnz
fdiv
aas
jecxz
icebp
in
repz
in
sti
jecxz
faddp
fidivs
bnd
xor
aaa
cmp
aaa
cmp
repz
in
and
leave
movb
jmp
rcl
shr
ss
cmp
ds
jecxz
rcll
out
out
sar
ret
out
cmp
rol
stc
call
xchg
nop
std
loopne
hlt
fucomip
cs
sarl
cmp
out
aam
cli
rol
repz
rcr
fnsetpm(287
fucomip
sti
mov
in
iret
xchg
out
rol
mov
repnz
fabs
inc
out
loopne
jmp
dec
out
mov
xor
out
into
icebp
rcr
out
jmp
std
hlt
sti
cmc
sbb
mov
out
aad
cmc
shrb
int
lock
repnz
xlat
cmp
xchg
jmp
lret
clc
addl
xor
jmp
fsubp
rcl
cld
stc
and
xlat
testl
xchg
out
ljmp
fdivl
sar
fistpll
in
lds
lret
test
out
loopne
enter
int3
in
clc
int
fidivrl
addb
test
incl
cs
cmc
jmp
clc
cmp
shl
cmp
mov
xchg
in
loopne
leave
in
ss
in
cld
cmp
aaa
test
ret
sar
faddl
enter
cmc
xlat
rcr
stc
xor
lret
fdiv
icebp
in
loopne,pt
mul
hlt
enter
test
ljmp
repz
xlat
sti
iret
xor
loope
fdivr
out
stc
clc
shl
sti
mov
leave
ror
jecxz
loope
xor
lock
std
sti
stc
out
xor
cmpl
jecxz
mov
test
out
clc
fildl
cmc
xor
xor
loope
xchg
filds
leave
mov
test
aaa
out
sub
cmp
lock
aaa
fmul
enter
out
roll
leave
in
nop
into
mov
cmc
sti
repz
repz
aam
ror
faddl
repnz
orl
loopne
lret
cmp
ret
out
into
int
incb
filds
stc
fcmovnbe
loopne
mov
call
ror
jmp
into
hlt
cmp
cmp
mov
in
fndisi(8087
mov
cmc
xchg
jecxz
out
divl
xor
cmp
shl
not
ret
stc
std
dec
leave
ret
mov
fisubrs
call
vpandn
cmp
fsubp
cli
int3
fsub
incl
sti
loop
into
sub
mov
movzwl
cmp
jmp
lret
rcr
int
orb
stc
sar
mov
addb
jl
xchg
iret
iret
xchg
aam
ret
xor
cmp
clc
testl
stc
in
lds
sti
int3
repnz
into
ljmp
repz
std
jecxz
repnz
leave
mov
in
mov
cld
out
lret
ret
shr
hlt
fidivrl
cmp
cli
fst
stc
cmp
rcl
jmp
jmp
out
in
fsubp
xor
jmp
cmp
sarl
fcomp
aad
out
loopne
xlat
mov
leave
int3
ret
lock
into
sub
xor
ss
out
fsubr
in
cmp
std
clc
shl
enter
jmp
std
out
jmp
ret
lock
std
cmp
into
cli
out
aas
in
mov
lret
mov
lock
in
loope
sub
call
test
cli
testb
jecxz
fmull
mov
rol
xor
into
div
fnstcw
repnz
icebp
shl
lock
and
in
loopne
imul
mov
xchg
jmp
leave
aam
fmul
fldl2t
sar
fdivr
repnz
xchg
in
loopne
and
xchg
rcl
cmc
cmp
xor
xor
out
sar
sarb
mov
lret
in
xchg
sub
lock
int
out
ljmp
fadd
rol
cmp
shl
mov
fadd
in
loopne
aas
aaa
lret
aad
cmp
cmp
fsub
neg
loope
rcl
cld
loop
in
in
mov
repnz
aaa
icebp
fidivrl
rcl
repnz
into
testb
mov
incl
jmp
xor
ljmp
ret
into
cld
xchg
loop
lret
mul
mov
xchg
iret
out
icebp
repnz
cmc
lret
leave
fadd
cmc
fxch
loop
fcmovbe
adc
xchg
cli
mov
shlb
rcr
fidivrl
in
idiv
sti
jmp
fnsetpm(287
movb
mov
ss
aaa
xor
xor
loope
xlat
sbb
aam
decl
in
fdiv
out
aad
sarl
ret
cli
loop
repz
repnz
call
lret
fdiv
clc
cmc
iret
iret
fucom
aad
shl
mov
icebp
out
std
in
in
not
out
fyl2xp1
loope
sbb
fsubrp
ds
fidivrl
fstp
lret
shl
lret
in
lret
fucomi
div
cmp
loopne
in
in
fisttps
fucom
test
xchg
xor
icebp
stc
div
sti
fcmove
sar
ror
loope
cmc
aad
mov
in
mov
sar
aam
stc
out
stc
int3
enter
cmp
fdivrs
loop
icebp
ds
fucomp
fmulp
in
lret
jmp
in
in
lock
xlat
ss
xor
fcomp
loopne
out
hlt
fimull
incb
lret
loopne
xor
sub
aaa
aam
lock
out
into
fadd
rolb
int
test
repnz
ret
xlat
xor
hlt
cmc
xor
neg
aam
loope
in
out
fmuls
aas
xor
fdiv
cmp
cmp
into
clc
ds
xor
xlat
flds
ret
into
jecxz
out
loop
divl
cld
xlat
in
cmp
hlt
faddp
enter
mov
iret
enter
jmp
into
into
jmp
cmp
xor
xlat
leave
cmpl
or
sti
repz
cmp
int
leave
int3
loope
dec
loope
out
call
repz
xor
out
icebp
into
neg
aam
aad
sub
leave
fadds
shl
ss
enter
xorl
div
in
call
in
stc
sub
loope
xor
xlat
rcl
ss
aas
ret
faddp
test
out
test
xchg
call
out
in
jecxz
cmp
rcl
int3
jecxz
fsub
sar
ds
mov
jmp
cld
and
loope
out
xchg
loope
cmc
out
int3
in
cmp
cmp
aad
icebp
std
out
in
repnz
add
test
stc
sti
iret
xchg
repnz
int
loopne
fcmove
cmp
out
jmp
icebp
rcr
loopne
in
ret
out
fldl
shl
in
cmc
ds
ss
loopne
aad
xlat
test
in
int3
into
xchg
mov
movzwl
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
fldlg2
xor
shr
jmp
xlat
shl
sbb
shl
add
ret
enter
repnz
xor
in
out
xor
hlt
int
add
rcl
sti
cmc
incb
out
jmp
in
into
hlt
out
in
xor
shll
fmul
cmp
loopne
aas
test
in
add
lret
jmp
repnz
ss
fyl2xp1
call
ret
sbb
test
clc
out
int
shl
in
lret
into
in
leave
sti
cld
loope
aad
int
fcomi
ret
jmp
stc
cli
xchg
jmp
les
fldln2
int3
fucomi
cmp
repnz
ret
fnstsw
cmp
fiadds
loope
mov
xchg
mov
in
aam
rcr
leave
fdivrp
hlt
xor
aas
out
adc
mov
loope
hlt
xor
repz
int3
ror
lock
cmc
cmp
out
aad
aam
cmp
sti
iret
mov
loop
leave
ret
rol
ss
lret
aad
cmp
cmp
test
fcmove
jmp
repz
cmp
int3
jmp
int3
cmp
cmc
cmp
fsqrt
jecxz
in
test
jmp
fdiv
aaa
cmp
idivl
fsubp
mov
sbb
repnz
cmc
hlt
shl
jmp
call
fldz
incb
fsub
mov
fsub
out
ss
aam
aam
not
ret
fmuls
mov
lret
xor
aaa
in
cmp
lret
aam
rol
shl
cmp
in
jmp
in
fmulp
lret
xlat
lret
ret
out
lds
out
fildl
std
jecxz
mov
fcmove
icebp
rorl
ret
xor
cmp
out
fidivs
shr
idivl
shl
xlat
fmul
enter
std
fcmove
repnz
shrb
lret
out
aaa
ds
xlat
xchg
loop
cmp
int3
in
mul
repz
cmp
jmp
sarl
int
rcr
ret
stc
in
loop
clc
fxch
mov
in
test
aas
shl
jmp
lret
fucomi
shl
in
aas
shl
orl
xchg
icebp
repz
leave
xor
in
lock
repz
out
aad
into
rol
fldl
out
in
icebp
ret
aaa
in
in
aad
out
icebp
shl
lds
cmp
and
xchg
int3
xchg
out
rcr
xchg
cmp
lock
icebp
fucomp
cli
rcl
loopne
fsincos
sti
lock
ficoms
xchg
into
in
cmp
out
into
repnz
shl
vpsllq
ret
in
mov
jmp
xor
cmp
int3
aam
xor
lock
cld
fldl
cld
in
into
iret
xchg
ljmp
cmc
in
int
idivb
idiv
cld
rol
ret
in
xchg
fsubr
mov
int
jmp
cli
cmp
push
adc
iret
ds
clc
leave
test
ljmp
xchg
mov
iret
repz
stc
fsubr
jmp
xor
sar
call
icebp
out
fdivrp
into
mov
out
aad
fdivs
cld
out
cmc
out
adc
sti
shl
out
cld
cmp
fucomip
in
shlb
fnstenv
ljmp
shl
ffree
repnz
clc
lret
mov
mov
xchg
out
xor
jmp
rol
cmp
ror
in
rolb
out
orb
loop
leave
jmp
aaa
loopne
cmp
int3
cmp
aad
mov
iret
xchg
xchg
int
xlat
sub
fucomi
lret
ss
fucomp
cmp
testl
mov
out
mov
aad
cs
ss
xor
clc
lock
int3
adc
xchg
xor
mov
test
rcl
hlt
icebp
sub
repz
fidivrl
stc
cmp
cli
lock
out
in
idiv
out
shr
lret
jmp
call
cmpl
ret
jmp
leave
jmp
out
fcomi
mov
int
icebp
fld
lret
ss
jmp
aad
repz
stc
into
icebp
rcr
out
incl
jmp
shrl
divl
sarb
sub
mov
jmp
jmp
rcl
rol
fstp
jl
fsubs
jl
addb
jl
out
xor
hlt
ljmp
add
enter
ret
fst
icebp
fnstenv
shl
aad
jmp
loope
fldl
cld
cld
xchg
mov
enter
not
int3
les
rcl
lret
into
fmul
rcl
xlat
test
mov
out
mov
adcl
cli
cmp
out
sarb
faddp
in
addl
out
in
rcll
call
not
int
in
cmc
std
ret
rcr
fcomip
in
in
cld
loop
mov
aad
shl
hlt
in
lret
std
hlt
shl
shl
cmp
rol
sbb
orl
repnz
out
rcl
loop
cmc
xlat
aas
leave
xor
hlt
ret
aas
test
cmc
or
fcoml
int
shr
shll
hlt
cmp
ret
loope
in
sti
cmp
xchg
std
das
sar
lret
cmp
testl
in
loopne
in
call
call
jmp
out
lret
lock
rol
aas
cld
ffree
and
in
jecxz
ret
int3
xchg
ror
stc
lock
das
cs
inc
cmp
sti
sar
shl
jmp
test
nop
fsubr
ljmp
sti
fcomp
out
ss
ret
shl
ss
call
leave
jecxz
icebp
orl
stc
into
iret
out
cmc
addb
decl
in
loop
shl
leave
ss
das
fsubr
or
std
ds
bnd
ljmp
out
out
cs
jecxz
sti
ror
fneni(8087
sar
stc
aam
hlt
repz
in
testl
loope
rol
aaa
lret
ror
cmc
xlat
cli
aas
clc
sti
cli
rcr
cmp
addb
mov
shr
ror
xor
enter
repz
rcl
adc
cmc
lret
ret
mov
frstpm(287
fiadds
in
leave
cmp
call
lock
mov
int3
in
loope
out
cmc
das
out
jecxz
ss
fneni(8087
shr
repnz
std
repz
leave
in
loop
ror
vpsubsb
enter
cmp
cli
cmp
shl
aam
in
loop
std
out
faddl
aaa
xor
cli
xor
aad
iret
lret
out
int3
out
fdiv
loope
cld
jmp
mov
cli
mov
loop
loopne
idiv
in
rcl
test
inc
stc
repnz
ljmp
repz
call
shl
lret
cmp
shl
xlat
cli
mov
fsubrp
loope
icebp
cmc
icebp
xor
cli
test
fdivrl
ss
rcl
out
stc
aam
jecxz
clc
fisttpll
mov
sub
aad
cmp
xor
sti
addl
fsub
xchg
mov
addb
stc
clc
hlt
in
in
iret
cmp
cmp
enter
hlt
icebp
aaa
repz
out
fdivs
fidivrl
lret
lock
mov
inc
jecxz
loopne
icebp
lock
aaa
lret
cmp
call
add
shl
lock
jecxz
cld
sti
leave
fsubp
shl
adc
jmp
aas
cmp
rol
out
addl
test
call
loop
hlt
sti
fdivrl
in
dec
lret
flds
enter
mov
rcr
jmp
cli
sarl
ss
aad
out
sar
xlat
cmc
test
in
mov
call
call
iret
xor
aas
div
lock
fsubp
mov
sti
mov
xchg
xchg
sar
mov
rcl
ljmp
cmp
loopne
cld
fld
std
repz
in
iret
in
nop
mov
in
shrl
cmp
sti
cld
sbb
aad
aas
shl
filds
out
mov
xor
fcomi
call
xor
roll
mov
call
cli
div
faddl
ret
xor
idiv
testb
rolb
leave
lock
clc
aam
xor
lea
mov
jmp
mov
lret
fnstenv
rcll
iret
jl
addb
jl
cmp
ret
aam
incl
jecxz
in
xchg
xchg
mov
test
int3
out
repnz
loop
ffreep
cmpb
ret
in
loopne
fcmove
repnz
out
out
cmc
fxtract
cli
fsub
enter
sti
rcr
xchg
xchg
call
adc
mov
aam
repz
fistpll
cmp
cli
rcl
rol
shr
faddl
xchg
fimuls
int
clc
jmp
aas
leave
rcl
aas
cmpl
repz
fcmovnu
ror
hlt
in
jecxz
fcmovu
sub
loop
cs
divb
aas
incl
fcmovbe
hlt
int3
call
iret
xchg
xor
shll
jmp
aas
rcr
roll
out
leave
std
in
orb
in
ss
cld
cmp
cmp
test
mov
lock
hlt
repz
enter
in
in
cli
icebp
xor
repnz
testl
ret
int
hlt
ss
into
cmp
fmul
xlat
loop
cmp
in
lret
jmp
shlb
ret
out
int
call
sti
into
ds
jmp
test
out
call
ss
jmp
sar
test
ds
out
fisttpl
imull
aaa
enter
lock
test
cld
out
enter
mov
sti
fmulp
and
cs
xlat
aam
jmp
jecxz
lock
lock
std
loopne
xlat
int
incb
ret
lret
xlat
imul
cmp
cmpl
lock
rolb
rol
call
ds
out
leave
int3
in
aaa
xor
cmc
out
vpxor
jecxz
stc
mov
in
adcl
jmp
divb
hlt
stc
loopne
les
lret
jmp
shl
ss
leave
cmp
rcr
iret
rcr
cmc
loope
sub
cmpb
fucomi
and
lret
into
lret
les
sar
test
cmp
aad
faddl
adc
out
shl
sar
leave
fcmove
into
shl
cmp
out
div
loopne
jmp
frstpm(287
fists
out
f2xm1
aam
sti
leave
lock
in
std
lock
ret
repz
xchg
cmp
mov
out
cmp
ljmp
aam
ret
fsub
fcmove
popl
mov
aas
xor
fsubr
clc
adc
iret
hlt
ffree
rorb
fsub
iret
icebp
mov
sar
frstpm(287
cmp
leave
cmc
iret
fmulp
clc
stc
repz
ffree
mov
lock
out
loop
ret
out
sarl
cmc
cmp
clc
cld
rol
mov
loope
lea
mov
jmp
das
jecxz
clc
out
shl
shr
in
cmc
out
loop
fcmove
movb
loopne
adc
in
out
shr
rcr
aad
rcr
hlt
cld
ret
filds
stc
out
mov
aad
into
ftst
ljmp
clc
into
mul
rcr
out
jmp
int3
nop
add
xor
out
xor
rol
cmp
xor
cmp
in
into
test
not
ret
ret
mov
out
out
aad
in
jmp
cmp
hlt
jmp
rolb
ret
loop
sti
mov
repnz
out
hlt
xor
in
hlt
std
ljmp
std
mov
xlat
cld
leave
fmulp
enter
lret
sub
stc
jecxz
lock
sti
in
rcl
iret
sbb
div
orb
shl
cld
in
repnz
rcr
lret
in
loope
out
repnz
ds
ffree
repnz
in
test
ror
mov
in
enter
cmp
cli
cli
int3
ror
stc
repnz
out
mov
mov
cs
fcmovne
repz
shl
les
les
cmp
xor
xor
cmp
out
loop
les
out
int
lock
mov
ss
ret
aam
xor
lock
test
hlt
cmp
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
fdivrp
loop
cli
out
jecxz
fdivrp
mov
loop
ret
cmp
xor
cmc
stc
xor
fnstcw
fucompp
cli
ljmp
loopne
shr
div
cli
xor
cmp
adc
lret
call
mov
lock
mul
iret
ljmp
cmc
fsubr
rcr
addl
test
lret
hlt
jmp
into
stc
sar
aad
aam
aad
or
vpaddusb
mov
in
test
sub
ret
int
test
fcmovbe
cmc
cmp
dec
rol
fninit
idiv
and
mov
rcll
enter
in
out
out
in
int3
loope
shl
sar
repz
out
fucom
lret
xor
cmp
xor
rcr
clc
cmp
loop
cmc
jmp
imul
cli
cld
repnz
lock
cli
cmp
std
fcom
hlt
test
loopne
flds
cmc
adcl
call
fidivrl
sbb
loop
cmp
orl
xor
std
int3
repnz
loope
loope
clc
cmp
test
mov
sti
lock
hlt
cs
sub
in
aaa
cmp
in
in
ror
std
ret
loopne
mov
jmp
fcmovne
cmc
shl
out
loop
cli
clc
lret
ror
and
fildl
hlt
dec
int3
fiadds
aas
shl
hlt
jmp
out
repz
cli
cld
cmp
call
jmp
into
std
aad
cs
enter
fidivl
cmp
shl
xlat
fsubp
mov
in
mov
idiv
hlt
cli
jmp
rol
loopne
mov
jmp
lock
out
xchg
mov
jmp
iret
fadd
call
xor
cmp
loopne
in
mul
xlat
stc
stc
clc
fld
loope
mov
mul
jmp
int
sbb
rcr
testb
test
cmp
lret
into
stc
cmp
cld
loopne
repz
aas
repnz
lret
in
sti
mov
xchg
sub
cli
aaa
idivl
lret
ss
loop
ret
ret
inc
xlat
mov
mov
jmp
jmp
imul
xor
not
aad
fsubr
cmp
decl
iret
out
int
shrb
loop
sar
xor
flds
cli
fdivp
aam
fcmovne
lret
in
ljmp
in
sti
repz
repnz
icebp
loop
mov
fdivr
std
xchg
cmp
fldln2
stc
lret
cmp
in
rol
mov
int3
and
decl
int3
rol
fucomi
ljmp
sar
sti
test
mov
test
hlt
lret
rcl
xlat
iret
cmp
lret
lret
in
les
call
clc
int3
clc
mov
aaa
out
shl
fdiv
shl
sbb
repz
in
loopne
or
icebp
loope
rolb
lret
out
iret
xor
cmp
and
cmp
fcmovne
loopne
cli
lret
fmul
xchg
loop
shll
sarb
rcl
out
rcl
repz
aad
aad
faddp
hlt
leave
mov
lret
aad
out
xor
int3
repz
call
aam
rcr
cmpb
fsincos
ljmp
mov
in
out
lret
jecxz
xor
fyl2x
shl
icebp
out
pushl
cmpb
incb
into
lock
xchg
xchg
cmc
in
lock
xor
hlt
sarb
cmc
cmp
lock
clc
out
loopne
loop
clc
out
int3
shl
in
int3
xlat
jecxz
jmp
leave
test
rcr
mul
shl
cli
add
enter
mov
jmp
int3
sarb
out
idiv
aam
aas
fcmovbe
cmp
loop
aad
loop
ds
repz
xor
lret
iret
fxch
call
loope
aad
sbb
fst
std
cld
in
out
lret
fcmovu
cmc
lock
fsub
filds
out
leave
leave
fisttps
in
sub
xor
cmc
call
rolb
mov
movl
jmp
jmp
ret
lret
enter
dec
xor
hlt
jl
addb
jl
jecxz
mov
out
xchg
int3
ret
clc
int3
fcom
loope
shr
sbb
shl
std
mov
out
dec
sub
shr
fcmovu
iret
repz
fnstsw
aas
cmp
xlat
cmp
enter
iret
in
lock
dec
jecxz
sub
xor
out
int3
cmp
aas
neg
in
ret
test
lret
jmp
cli
in
hlt
mov
repz
out
repz
sarl
rcl
fstp
ds
idiv
in
mov
or
jmp
xor
aas
iret
repnz
xor
loopne
stc
in
fcomp
leave
xchg
xor
mul
enter
sti
leave
fiaddl
fdiv
shl
cmc
xchg
loop
int3
in
rcll
call
test
shl
adc
les
repnz
nop
call
ljmp
cmp
in
ret
stc
xchg
add
xchg
jecxz
ror
shl
clc
hlt
cmp
cmp
icebp
add
hlt
rol
cld
aam
ds
fildl
int3
fsubp
sarl
icebp
lret
cli
in
in
int3
loop
aas
cmp
orb
ljmp
xor
cmp
cmp
int
loope
mov
sar
call
into
std
xchg
in
xor
jmp
in
aas
shl
aad
in
sbb
test
int3
mov
fsubr
loope
inc
xor
out
call
fsub
ds
jecxz
inc
xlat
ljmp
pause
iret
repnz
ds
fprem1
hlt
in
jmp
loopne
hlt
cld
rcr
in
les
xchg
in
mov
ljmp
xor
sub
sti
into
loope
xor
cld
mov
lret
xchg
cmc
lret
fistpll
out
mov
jecxz
lret
in
xchg
xlat
shr
repz
cld
loopne
sti
sti
shl
movb
test
test
jmp
in
jmp
out
sti
lock
repnz
mov
test
out
mov
sub
lds
out
jmp
in
add
std
xchg
test
sti
ljmp
in
in
enter
out
xlat
iret
ss
cmp
out
call
movl
test
shr
repz
repz
fdecstp
loop
in
aam
leave
xchg
fucomp
in
xchg
out
repnz
fcmovnbe
fidivl
lret
cmp
in
xchg
xchg
in
call
mov
xlat
enter
jmp
or
out
cli
cmpl
loopne
fdivr
shr
nop
xchg
test
cmp
fxch
repz
fdiv
clc
addl
in
not
mov
aam
xlat
loopne
cmp
std
xlat
fucomip
jmp
loopne
ss
cmp
fisttps
call
xor
xor
in
fucomi
in
cmp
loope
or
out
fiadds
in
loopne
cli
xchg
loopne
fsubrp
in
repz
ss
icebp
fdivrl
cld
ret
int3
lock
jmp
out
lret
clc
rcll
shr
in
int3
out
xor
lret
incl
ror
in
test
out
in
mov
mov
in
iret
shl
test
fadds
mov
clc
fucomip
mov
ljmp
out
aas
sar
sarl
xlat
fsubr
jecxz
clc
mov
test
leave
fxam
in
jmp
repnz
fdivp
aas
out
loope
lds
lret
jmp
cs
ljmp
fcomp
rolb
loopne
test
out
ljmp
aam
ss
fstpt
fnstsw
fdiv
cld
sar
faddp
std
cli
filds
call
in
aaa
std
cld
out
fcomi
rcr
fcmovnu
rol
ret
loop
int
test
out
shll
xor
cmp
jmp
fyl2x
cmp
fchs
cli
call
in
int
test
loop
xor
enter
in
std
out
icebp
out
fcom
fcmovu
fdiv
fldl
mov
addb
inc
or
sahf
add
add
rcl
aad
lret
enter
push
add
jp
jl
addb
jl
shlb
ss
fucomi
ljmp
and
rol
repnz
fucomip
xchg
cmp
int3
shl
sarl
lock
ror
loopne
rcr
aas
out
leave
decb
out
in
out
xor
ljmp
std
jecxz
aam
lea
mov
call
stc
icebp
sti
aas
cmp
testb
div
sti
call
iret
into
ds
lret
rol
std
rcr
cmp
fnstcw
xchg
mov
clc
aam
fmulp
xchg
nop
in
lret
shr
into
imul
ss
cmpl
repz
test
jmp
mov
hlt
xor
shr
enter
incl
sar
shl
sti
mov
xchg
fmulp
loop
lret
int
xor
shl
clc
cmp
cmpl
rolb
jmp
test
mov
xor
repz
fnstsw
int
fsubp
loop
aam
jmp
out
lea
lret
loopne
fldlg2
out
idivl
cmp
ret
fcomip
aad
push
sbb
dec
xchg
rol
sub
xor
shl
cmp
out
vcvtpd2dq
or
call
sub
shl
cmp
cmp
xor
rol
ret
dec
xchg
loop
lret
loop
in
enter
int3
icebp
icebp
rcl
iret
ret
test
jmp
jecxz
call
std
out
out
ljmp
fucomi
ds
sti
xchg
faddl
fmul
mov
test
into
cmp
xor
lret
ljmp
cmp
std
clc
call
xchg
inc
jecxz
into
clc
xlat
stc
test
std
xor
shl
in
sti
clc
in
cli
ret
int
lock
int
repz
cmpl
cmc
lock
rol
cld
idiv
std
jecxz
loop
rol
fcom
fnstenv
xor
iret
lret
jmp
cmc
out
cmp
roll
std
in
in
mov
xor
loop
lret
lock
ret
hlt
loop
les
lret
ret
cmp
sti
fstp
stc
xor
xor
or
rol
mov
lret
jecxz
stc
inc
loope
incb
iret
in
aad
fucomp
call
fdivrp
test
in
cld
lret
xchg
jmp
int3
enter
lock
loop
hlt
lock
xlat
out
ljmp
enter
xor
ror
ror
jmp
in
jmp
addl
shl
mul
mov
sti
ljmp
fsubrp
out
cmp
cli
call
in
lock
frstpm(287
cmp
xchg
xchg
nop
fists
test
in
lret
ret
out
jmp
loopne
iret
idiv
ljmp
lret
leave
aaa
adc
cmpb
leave
mov
loopne
into
xor
ret
loop
loop
out
aad
std
neg
loopne
repnz
shl
loope
std
xchg
icebp
aad
out
jmp
stc
dec
fmulp
fucomip
ret
xlat
mov
lret
ds
cli
std
repz
sar
lock
cmp
xlat
in
in
lock
fcmove
clc
loop
cld
loop
out
mov
test
shl
int
jmp
aaa
in
leave
cmp
rcl
clc
cmc
leave
rolb
std
int3
xchg
jmp
rol
aam
lret
aaa
out
cmc
cmp
icebp
loop
addb
int
enter
loope
xor
cmp
out
enter
sbb
cli
fcmovu
in
test
sub
in
in
rol
cmp
shll
enter
xor
fucomip
shl
and
xchg
jecxz
call
cmp
stc
cld
lock
out
sar
in
mov
in
int
mov
mul
aam
xor
lock
aas
cli
aad
ror
lds
out
ret
xlat
fildl
aam
lock
in
cmc
ror
xor
fdecstp
fcomi
cli
not
mov
into
mov
in
lock
shl
mov
xor
add
jmp
rol
rcr
jbe
push
loope
jl
add
out
xlat
rolb
int
loopne
aam
lret
mov
in
int3
ljmp
fsincos
aam
shl
imul
fdiv
cmp
repz
clc
fstp
lret
shl
iret
out
xlat
loop
leave
aaa
lret
cmp
std
loope
hlt
loopne
testb
xchg
or
int3
stc
lret
jmp
lret
lock
in
cmp
ret
xchg
out
enter
iret
sub
leave
out
clc
lock
cmp
roll
out
out
loop
addl
xchg
xchg
aad
in
out
xor
jecxz
shr
shlb
xor
xor
loopne
cld
ljmp
in
fcoml
in
xor
idiv
cmp
rcl
cmp
into
shl
ret
mov
out
loope
idiv
cli
test
loope
mov
mul
fcmovnb
clc
cmp
cmp
ds
int3
loop
xchg
mov
aas
lret
divl
sti
aad
in
sti
out
int
ret
int
aad
aad
sub
mov
fcmovb
icebp
cmp
std
mov
iret
fsub
sub
loope
fcomp
fcompp
lock
ret
leave
jmp
mov
mov
icebp
cmp
ljmp
cmpl
xchg
fstp
in
mov
aad
int
lret
xor
les
sar
jmp
lock
hlt
aam
neg
out
mov
xchg
test
cld
roll
repz
repz
cmp
hlt
std
cli
ror
repnz
mov
sti
in
fildl
mov
aaa
jmp
cmp
in
test
aad
repz
mov
lret
fucomip
fmul
mov
loopne
leave
repnz
jmp
fdiv
ss
in
rcr
fcmovu
test
xchg
xlat
mov
int3
repz
shr
xor
jmp
cmp
aad
cmp
in
xlat
loop
mov
icebp
lret
push
shr
cs
xor
ss
lret
aas
testl
enter
jecxz
xchg
lea
int3
icebp
lret
xlat
repnz
enter
rcl
jecxz
ret
in
stc
fsubp
cld
in
mov
fdivp
hlt
cs
lock
sti
fucomp
loope
lock
jecxz
test
loope
mov
or
fdivp
xor
out
fdiv
fld
int
fdivp
hlt
xlat
aad
mov
in
mov
jmp
xchg
filds
ret
fsub
int
div
cmp
aam
loope
jecxz
fcmovu
mov
int
in
stc
mov
into
xor
icebp
int3
loopne
hlt
fcmovu
into
cld
out
mov
fsubrp
xchg
lret
icebp
xor
ror
icebp
aas
leave
aas
enter
les
cld
int3
ljmp
in
jmp
in
lret
cmp
testl
loopne
int
fimuls
out
sub
out
das
sti
aam
fmulp
out
loopne
int3
sbb
fimuls
xchg
sub
int
das
ljmp
lret
out
fcmovnbe
aam
cli
stc
in
fucomp
lret
leave
and
int
bnd
out
rcr
neg
cmp
in
xchg
mov
xchg
rol
std
out
cmc
idiv
leave
cmp
cld
aam
ds
xchg
repz
and
xchg
shl
sbb
into
in
out
iret
std
shl
fsub
loopne,pt
xchg
fcomp
fdivr
out
in
jmp
aaa
hlt
cmp
ret
shr
icebp
shll
aad
aad
addb
decl
in
out
add
enter
not
cmp
into
cld
jecxz
ret
icebp
clc
aad
mov
cli
int3
rorb
int
clc
stc
ret
sti
in
cmp
cmp
jecxz
rcr
stc
jmp
loop
in
incb
jmp
enter
shl
cmp
aam
incl
test
mov
fbstp
out
rol
fucomi
stc
cmp
adc
filds
fucomi
out
iret
sub
cs
lret
fyl2x
std
into
out
repnz
fsubrp
lret
sub
out
and
int
fucomi
xor
not
clc
lret
cld
out
test
ret
repnz
mov
jmp
clc
lret
test
mov
ljmp
into
fcmovne
cmp
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
rolb
mov
addb
jl
into
rol
cmp
shl
mov
xchg
lret
test
xchg
in
nop
icebp
jmp
ret
out
fcmove
hlt
shr
cld
cmp
lds
imul
fdivr
loopne
decl
int3
xchg
icebp
das
into
in
out
lock
out
cmp
aad
test
cmp
lret
loope
fcomip
xor
xor
cmp
cmp
shl
std
cmp
out
sarb
vpmacssww
fisubrs
loopne
into
into
int
cmp
loopne
aam
shl
call
ljmp
add
aad
rol
out
aaa
hlt
out
jmp
shr
aad
sti
fstp
jmp
out
clc
mov
int3
mov
jecxz
cli
xor
cmp
lret
in
hlt
rcr
jecxz
xchg
in
jecxz
out
in
repnz
loopne
mul
fdivs
aaa
enter
cmp
loope
ret
loope
ret
inc
stc
into
loopne
mov
aad
ror
clc
in
fnstsw
aas
into
cmp
shl
ret
cmc
add
and
loop
mov
ror
ret
icebp
shlb
cmp
ret
cli
cld
jmp
out
cld
in
adcb
int
cli
int
icebp
fistpll
int3
int3
stc
fcmovbe
jecxz
mov
xchg
icebp
sbb
xchg
nop
icebp
out
loop
repnz
clc
shr
jmp
neg
filds
rolb
repnz
in
in
xor
ret
lock
cs
std
std
cmp
out
mov
fstp
ljmp
in
aam
out
fmul
fbstp
ror
fcomp
loope
xchg
faddl
in
lret
or
ret
cmp
enter
cmp
cmp
shl
lds
int
mov
hlt
ss
xor
int3
cld
aad
icebp
aas
and
idivb
mov
loop
fneni(8087
stc
sti
repz
call
repnz
cld
out
fmulp
clc
aam
repnz
mov
lds
xchg
in
enter
cmp
xlat
xor
fmulp
xor
sar
test
fadds
xchg
icebp
xor
out
jmp
test
aad
loopne
fsubp
stc
adc
cli
loop
in
test
in
in
fcmovbe
leave
repnz
icebp
faddl
std
in
mov
loop
and
rcl
lret
out
lret
out
xor
lock
test
les
call
or
ret
cmc
lret
xlat
shl
roll
fcmovnbe
xchg
fst
shl
mov
rcl
xor
cmc
xor
xor
hlt
loop
out
hlt
lds
xchg
cld
mov
mov
repnz
xor
aad
iret
xor
std
idiv
xor
std
loop
leave
fsub
idiv
in
mov
aad
jmp
repz
int
cmp
loope
xor
loopne
mov
ds
aad
leave
clc
cmp
fdivrs
fucomp
ffree
xchg
enter
in
int
in
loopne
xchg
in
xor
fcmovbe
out
ljmp
cmp
in
addb
leave
fdivr
xchg
dec
adc
cmp
shl
ret
in
loopne
jmp
testb
ljmp
in
cli
ss
in
clc
cmp
cmp
out
test
sti
sub
rorl
shlb
aam
sti
cmp
in
in
fiaddl
stc
orb
ds
fyl2xp1
vpsadbw
repz
repnz
mov
lret
addl
aam
cld
fcmovb
hlt
fistpll
loop
hlt
in
nop
int3
int3
xchg
in
jmp
das
jmp
aam
not
cmc
cld
repnz
div
mov
in
icebp
mov
repz
int3
in
in
push
xor
testl
jmp
out
repz
imulb
repnz
lds
hlt
not
aad
neg
out
mov
xchg
stc
mov
xchg
shl
repz
out
test
cld
shr
fdivr
iret
fdivr
xchg
fisttpl
test
lret
aad
shr
ss
lret
cmp
lock
add
add
ret
xlat
int3
int
cmc
or
idiv
int
decb
jl
loope
repnz
ljmp
loope
div
int3
lret
leave
cmc
fidivl
fcmovu
jecxz
test
into
aas
jecxz
loope
mov
out
ljmp
xor
aad
ror
lret
rcr
repz
int
testl
in
out
addb
xor
cmp
enter
xor
out
in
fldl
fmulp
shlb
fnstenv
cmp
int
call
cmp
rolb
cld
fimull
lret
call
xor
cmp
out
fucomi
div
ret
fdivrs
loop
xlat
test
clc
sti
enter
ror
iret
fucomi
leave
int
cmp
out
int3
xchg
sbb
stc
aam
int
fucomp
xchg
xchg
xchg
xchg
out
xor
out
aaa
out
clc
lock
loope
add
shl
ds
int
mov
in
loop
icebp
in
jmp
leave
fucomp
sarl
loopne
ret
rcl
ret
test
clc
int
fsub
in
icebp
loopne
iret
xorl
iret
cmp
ss
cmp
repnz
aam
mov
sub
xchg
out
mov
fld
icebp
shr
in
hlt
fucomip
iret
rcl
jecxz
rolb
imul
faddl
xlat
out
divl
out
iret
aaa
idiv
in
shl
out
cmp
filds
sub
int3
loop
nop
lea
ret
repnz
aam
call
fst
aad
mov
mov
xchg
cld
mov
in
rolb
ljmp
int
ret
rcl
sti
cmp
cld
faddp
out
aam
sti
sti
test
shll
fcmove
cmp
sti
fstp
lock
in
call
in
cmc
jmp
aad
fbstp
ljmp
aas
test
ret
orl
out
sub
stc
ret
xor
xor
xor
repnz
cmp
out
repz
hlt
sub
mov
jmp
aaa
iret
enter
xor
out
xchg
test
stc
in
repnz
sbb
iret
out
stc
hlt
out
shl
rcr
out
xor
in
rolb
loopne
iret
rcr
in
ror
xor
xor
repnz
shl
std
out
std
cmp
test
or
in
xor
in
cmp
fsub
cld
rolb
sar
stc
rol
neg
lret
lea
xor
in
int3
cmp
leave
cmp
xlat
fdivr
aad
fildl
and
test
out
out
leave
int
jmp
cli
cld
aam
into
cmp
cli
jecxz
loop
cmc
div
mov
clc
rorb
xlat
lock
clc
int
aam
in
int3
xor
jecxz
in
fcos
leave
les
mov
xor
ljmp
out
cmp
test
cmp
cmp
fstl
xor
out
in
aaa
in
aas
cmc
fdivrp
out
imul
repnz
test
xchg
loop
rol
cmp
in
cmc
fildl
ret
cld
fcmovbe
in
fisttpll
loopne
in
repz
lock
in
lret
aam
lret
loop
fneni(8087
iret
std
fildl
lret
mov
lret
loope
enter
xor
ljmp
icebp
sarl
mov
cmc
faddl
lret
ljmp
xor
fchs
repz
ds
mov
clc
nop
ret
lock
into
loop
xor
fsub
in
rol
stc
and
hlt
lret
fucom
fsubr
mov
cmc
into
xor
in
int
int3
push
cmp
jecxz
test
test
fdivrp
call
enter
repz
sub
out
jmp
sbb
mov
std
iret
fdivp
out
fsubr
repnz
enter
loopne
shl
ret
test
xchg
in
test
sti
jmp
rol
out
in
fstp
repnz
xor
in
cld
vlddqu
mov
ficoms
enter
out
rcl
xor
sub
fcmovnb
repnz
in
fmuls
jmp
xor
out
out
not
enter
in
lret
in
jmp
decl
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
or
adc
jl
add
jmp
mov
cli
leave
jmp
int
lret
xor
lret
divl
call
fdivrp
fsub
std
std
repz
lret
out
xchg
out
clc
xor
out
lock
cmp
fldl
int3
call
xchg
mov
shl
aaa
shll
xor
aam
sti
lret
std
test
hlt
test
jmp
dec
icebp
and
ret
out
cmp
ror
fcmove
aad
in
out
into
xlat
repnz
testb
in
hlt
fldl2t
lock
xlat
out
cmp
ljmp
cli
rcr
test
mul
mov
orb
cmp
cli
xor
xor
fucomi
adc
jecxz
sti
xchg
rolb
ret
cmc
loop
ljmp
call
cmc
aas
in
movl
xchg
out
xor
ret
xor
cli
cmp
cmp
fsubr
hlt
aad
enter
xlat
stc
fucomp
shl
int
xlat
out
into
lret
call
xlat
cli
in
mov
into
int
ret
cmp
loop
int3
hlt
out
fcom
fprem1
iret
shl
sar
rol
fiaddl
in
call
sti
aaa
jmp
into
lock
int
repnz
fucom
nop
fldl
shr
enter
jmp
test
std
loopne
neg
ret
cld
movb
in
enter
rcl
int3
cmp
std
ret
into
cli
rol
not
aam
mov
fdiv
mov
in
hlt
icebp
shr
fdivr
leave
out
clc
aas
shl
stc
loopne
orb
in
fldl
loop
icebp
in
hlt
cmp
shr
lret
cmpb
loopne
xlat
mov
loopne
jmp
int
lret
jmp
fstpt
out
xlat
fsub
cmp
sti
cmc
stc
fcom
cmc
lret
jmp
add
shl
xchg
xor
neg
into
fisubrl
icebp
leave
stc
adc
clc
fadds
push
jmp
fucomi
xchg
xchg
xlat
xor
xor
ljmp
adc
in
lret
mov
mov
fidivl
ror
out
jecxz
hlt
orl
dec
shl
in
stc
call
int3
adc
out
cld
mov
fsqrt
ror
rolb
stc
hlt
cmp
shl
hlt
stc
cmp
cmp
lret
std
fadd
filds
hlt
into
lock
cmp
or
ljmp
loop
inc
test
hlt
icebp
rcl
divb
cmp
ds
icebp
fcomp
rorl
call
jmp
push
in
hlt
xor
clc
int3
in
shlb
enter
fnstcw
stc
test
ret
movb
lds
int
out
fldpi
xor
cmp
in
addl
fiaddl
cmc
int3
lret
rcl
shlb
cli
stc
shl
out
loope,pt
clc
mov
xchg
nop
test
ss
leave
jmp
cmp
out
sub
in
xlat
out
xlat
test
clc
ret
mov
call
ret
into
aad
out
lret
cmp
out
hlt
sti
call
xchg
xchg
adc
xchg
int3
xor
lret
icebp
aad
icebp
repnz
mul
fdiv
clc
fcomip
jmp
and
in
ljmp
out
jecxz
ss
int
fcmovbe
xor
loope
xlat
test
ljmp
mov
std
div
cmp
clc
cli
not
ds
les
call
int3
xor
aam
lret
aas
ds
ds
repnz
lret
aas
in
loope
sti
nop
lock
loop
rcl
shl
ljmp
loop
in
adc
test
fdivp
xchg
faddl
jecxz
ljmp
shr
ljmp
aad
rorl
iret
mov
loope
out
orl
cmp
iret
cmp
repnz
cmp
ret
cmc
xchg
orb
xor
loop
ror
jmp
cmp
cmp
hlt
cmc
xlat
clc
and
add
jmp
ror
int
fcmove
mov
push
and
push
adc
add
call
into
out
idiv
int3
aad
int
cmc
cmp
cli
cli
aad
hlt
loop
int3
xchg
fimull
neg
cli
xor
out
int
fsubp
hlt
stc
sbb
faddl
xchg
out
and
rcr
cmp
fdivrl
call
cli
fsubp
fiadds
loope
enter
fimuls
lock
clc
ror
int3
jmp
ss
sti
clc
and
cmp
mov
fdiv
shl
mov
into
call
out
cli
not
in
in
cmp
lret
aam
mov
shr
in
xchg
loope
ss
ljmp
rcr
jmp
aas
loope
in
sti
mov
ljmp
cmc
shl
jmp
out
idivb
ss
loopne
cmp
cmp
mov
in
adc
xlat
jmp
aad
aas
cmp
fcmovnu
xchg
sar
stc
xchg
aam
mov
out
xchg
int
enter
ss
sarl
cmp
int
icebp
loopne
testl
mov
xchg
or
xor
aam
std
loope
hlt
loopne
out
clc
loop
imul
mov
addb
lret
shll
push
sti
int
rcr
out
hlt
jecxz
ljmp
jmp
shr
out
fsubr
cli
in
clc
cli
sarb
roll
sti
and
jmp
std
fimuls
xor
xor
into
cmc
enter
cmp
in
hlt
aad
call
xchg
incl
repnz
xor
out
jmp
aad
ftst
fld
shr
repnz
jecxz
fldl2e
mov
mov
shl
iret
in
neg
sar
fdivr
xlat
fidivrl
fdivrl
test
cmc
cmc
aam
aad
test
lret
sub
xchg
repz
sub
clc
sar
cmp
fcompp
icebp
fcmovbe
sti
cmp
mov
fcmove
out
lock
in
out
mul
out
cmp
fdivrl
leave
int
hlt
cmc
orl
icebp
xchg
fisttpll
int3
stc
int3
icebp
icebp
lret
jecxz
xchg
ret
aad
out
fmul
in
nop
into
sar
rol
loop
int
aam
rcl
rcr
fcmovnu
clc
out
ftst
in
xlat
icebp
xchg
in
enter
loop
rol
in
enter
int
std
aas
ret
shr
cmc
xchg
rol
test
int3
ret
leave
shl
jecxz
iret
repnz
cmp
enter
roll
ds
sub
out
lret
fldcw
out
stc
int3
icebp
loopne
xlat
ds
loopne
test
xchg
fmulp
shrl
jecxz
loop
in
xor
in
cmp
ds
mov
jmp
xchg
ljmp
lds
cld
lret
cmp
cmp
int
xchg
xlat
xchg
enter
leave
mov
cli
test
call
out
in
fcmovnbe
into
in
addl
jmp
in
int3
out
xchg
or
cs
in
leave
in
lock
fcmovne
fsubp
loope
hlt
fcmovb
mov
mov
mov
rol
xor
call
cmc
cli
cmp
filds
test
fucomp
shll
cmp
jmp
fcom
out
rolb
clc
rol
sti
sti
orl
rclb
sub
lret
xor
in
fxch
aad
xor
loope
cmc
call
fucomp
fildl
aam
icebp
into
std
sti
incl
imul
mov
fsub
call
icebp
fucom
in
fdiv
rcl
out
fidivl
repnz
cmp
out
aam
lock
rcl
in
ret
fcmove
jmp
mov
loope,pn
clc
cmp
xor
sti
rcr
jecxz
iret
faddl
in
mov
ror
out
in
xor
jmp
bnd
fucomip
in
ds
out
jmp
std
cli
ljmp
xchg
cmc
ljmp
cmp
iret
cld
cmc
incb
std
leave
in
fcmove
loop
jmp
out
aaa
int
cli
aad
sar
or
hlt
lock
aas
xchg
aam
call
in
shrl
loope
xlat
out
jmp
fadds
shl
roll
in
out
loope
aam
ljmp
add
mov
jmp
xlat
ror
ror
xlat
fisttpl
lock
cmpsb
or
idivb
add
cmp
out
fprem1
int3
int3
enter
hlt
fcmovu
jecxz
ret
clc
fcomp
idiv
out
mov
lret
cmc
xor
idiv
lret
and
stc
mov
fsubr
mov
into
lret
repz
ffree
cmc
lock
std
icebp
lock
out
cli
movl
into
clc
ljmp
out
ror
idivb
ror
testb
xlat
aad
xchg
and
in
rcr
in
into
cmp
lret
out
rcr
adc
addb
int
loope
repz
test
aam
xor
aas
fptan
cmpl
mov
loop
ljmp
shl
xor
in
lock
std
loope
out
hlt
cli
stc
ds
jmp
xchg
fadd
xchg
shr
xchg
shl
cs
xor
ljmp
fcomip
rcl
in
mov
test
out
xchg
sub
shl
out
cmp
fildl
test
clc
out
test
mov
xchg
jmp
clc
ror
xor
jmp
or
cmp
loopne
fld
icebp
out
nop
out
shrl
sar
out
cmc
std
lret
int
fsubp
cmp
jecxz
in
fiaddl
and
loop
out
icebp
enter
flds
loopne
out
mov
loop
mov
repz
aam
xor
out
shr
aam
fucom
ret
xlat
loop
jecxz
repz
in
loopne
out
mov
in
aaa
sub
leave
cmp
lret
jecxz
inc
icebp
rcl
std
adc
aad
loopne
loope
or
jecxz
rol
cmp
fcmovne
ss
repz
cmp
fcom
loope
test
hlt
clc
std
clc
xchg
loop
in
std
test
aam
enter
xor
cmp
shl
shl
test
sti
fcmovne
leave
clc
xchg
in
out
xor
rcr
repz
fucom
repnz
test
loop
ds
cmc
in
jmp
idiv
leave
addl
int3
iret
std
in
jmp
repz
repz
aam
sti
lea
sub
shl
cli
fidivs
filds
jmp
fucomip
leave
xchg
cs
repz
jmp
lock
xor
in
add
mov
fimull
loope
das
loop
ss
in
fndisi(8087
rcr
cmpl
mov
in
sti
iret
lret
in
fildll
rol
out
xlat
int3
xor
sarb
fdivrl
cmp
and
icebp
fcmovnu
sub
xlat
leave
enter
into
out
lock
fdivp
shl
loop
jmp
sbb
fsubr
fists
shr
jmp
ljmp
into
in
xchg
fmuls
out
repz
cmc
ret
std
lret
call
cmp
hlt
rolb
fstp
filds
in
xor
fptan
out
idiv
aam
in
xor
xlat
loopne
mov
in
cli
xlat
std
decb
jmp
sub
hlt
xor
in
repnz
addb
out
sub
call
int3
xor
leave
lret
stc
fcmovnu
lret
stc
out
icebp
testb
loopne
leave
test
out
jecxz
repz
fcomip
out
lock
cli
int3
xor
cmp
shl
shl
aas
icebp
imul
mov
jecxz
cli
jmp
out
fstl
cmc
rol
xor
lock
lret
out
filds
jmp
aam
xchg
clc
test
xchg
fucomi
xor
xor
cli
cmp
loope
icebp
repz
enter
cld
in
jmp
lret
icebp
fsubrp
lock
sub
fnstenv
ljmp
repz
rcl
xchg
stc
jmp
fld
into
mov
push
out
in
xor
jecxz
iret
xlat
fcmovnu
fidivrs
lock
fstp
cli
lock
push
mov
lret
xor
jmp
icebp
ds
fistpll
faddp
test
xchg
mov
xchg
int
shr
out
lret
aam
lret
in
clc
lret
iret
sti
shl
lret
lret
test
xchg
mov
repz
ror
xor
aam
out
cmp
loop
sti
addb
jmp
vpand
fdiv
mov
add
mov
jmp
leave
iret
xlat
rcr
flds
cwtl
pop
dec
aam
rep
cli
jl
addb
jl
f2xm1
icebp
shl
cmc
cmc
clc
cmp
fisttpl
xorb
lret
lret
sarl
aas
in
shl
faddp
lds
fsubp
fimuls
rcl
call
fsubr
leave
enter
hlt
roll
cli
loopne
stc
icebp
lret
lret
jecxz
into
shl
lret
ljmp
repnz
cmp
cli
in
fmull
xor
repz
icebp
fprem1
iret
sti
iret
cmc
jecxz
fdiv
jecxz
int3
flds
xor
das
fistpll
jmp
sti
lret
loopne
out
ds
lret
stc
in
in
lret
xchg
int
xor
sarl
repnz
icebp
fcmove
rolb
xchg
xchg
orb
sub
in
xlat
iret
std
cld
icebp
aam
hlt
xlat
lock
roll
hlt
xchg
clc
clc
sub
mov
clc
lret
stc
aam
cld
cmp
jmp
cli
sti
icebp
nop
xchg
mov
shl
jmp
repnz
cmp
adc
fcmovnb
in
xabort
fninit
enter
into
ftst
ret
into
xor
int
iret
in
ds
int
cmp
rcl
xchg
mov
in
out
jmp
int3
lret
xor
iret
into
aad
fnstsw
jmp
out
test
shl
fimuls
leave
xlat
fnstsw
call
hlt
ss
mov
loope
nop
lock
or
enter
clc
out
stc
lret
fdiv
int3
cmp
hlt
or
fcom
out
into
test
int3
repz
aad
loopne
xchg
sub
lret
jecxz
xchg
mov
repz
leave
sti
stc
in
leave
ljmp
div
and
addb
cld
rcr
xchg
in
xor
sti
cmp
xor
repnz
mul
xlat
cli
sar
cmp
fisttps
loopne
jmp
cmp
fdivl
shr
into
sti
loope
clc
fsubr
fucom
aas
lret
fimuls
loop
cs
out
clc
leave
faddp
iret
cmp
icebp
sar
ds
out
in
jmp
out
xor
shlb
shl
test
clc
xor
rcl
ret
out
in
xchg
icebp
loopne
lds
int
cmc
hlt
enter
imul
ret
fdiv
sti
jecxz
test
mov
rolb
in
fmulp
cmc
repz
shl
fildl
leave
int
repnz
ret
cmc
ljmp
into
test
loop
clc
testb
lret
out
xor
loop
lret
lret
push
cmp
cmp
clc
sbb
out
test
in
out
shll
xor
out
jmp
fldl
fdivrp
hlt
testl
lock
shlb
jmp
int3
cld
aaa
in
in
loop
test
xor
fsubrp
cld
out
in
rorb
ljmp
faddp
in
jecxz
xlat
loope
jecxz
loope
test
jecxz
into
fxch
fcmovu
loopne
ror
shl
in
out
cmp
addb
adc
mul
idiv
loope
fdivr
mov
xor
xor
hlt
loopne
in
adc
jmp
std
fists
enter
ljmp
fadds
clc
add
test
fdiv
mov
cmp
fidivl
cld
xor
into
repz
mov
out
in
mov
nop
xchg
repnz
hlt
aaa
sti
aaa
leave
out
repnz
cmp
lret
icebp
add
ret
in
fmulp
out
shl
ret
into
jmp
int3
aam
filds
fdiv
mov
call
into
ljmp
lret
shr
in
xlat
shr
and
xlat
or
mov
xor
ret
ljmp
repz
stc
lret
shr
loope
ret
rorb
enter
mov
fisttps
enter
enter
cmc
cmp
leave
mov
lret
orl
out
out
hlt
into
jecxz
mov
jmp
leave
int
int
int
mov
aam
xchg
and
sub
jl
ret
sub
out
sti
xchg
iret
repz
into
cmc
jmp
lret
lds
out
lret
cmp
jmp
xor
clc
test
in
incb
out
out
xchg
out
lock
xlat
clc
shl
cmp
fdivr
adc
sti
aam
sar
fisttps
loop
ror
sub
test
aaa
shr
int
leave
fnstsw
fcom
fadd
loopne
in
les
loop
in
repz
hlt
ljmp
clc
fadd
repnz
jecxz
jecxz
sti
mov
iret
in
nop
out
in
into
enter
xlat
out
test
icebp
aas
out
mov
test
test
fstl
repnz
cmp
fcom
rcr
jecxz
icebp
leave
mov
ret
jecxz
xchg
call
repz
out
sti
aaa
fdivr
int
fcomip
cmc
aam
fcmovnu
adc
mov
jmp
mov
lret
dec
hlt
xlat
lret
fucomi
fmulp
shr
sar
in
mov
clc
out
jmp
lret
loopne
cmc
sar
xlat
shl
fsubr
test
add
mov
roll
repz
in
xchg
rcl
ror
jmp
fdivl
sti
leave
fucomip
cmp
in
rol
std
dec
aad
xchg
out
cli
loop
shl
lock
das
in
out
int
int3
xor
loopne
std
fsincos
int3
test
sar
in
cld
mov
in
into
shl
xor
ss
rol
and
cld
inc
xchg
loop
lret
mov
xor
in
in
out
stc
aad
sti
shl
aad
xchg
jmp
clc
test
out
sti
fucom
shl
repz
cmc
lret
stc
cmp
cld
ret
div
rcl
aad
cld
test
mov
out
sub
out
test
in
ljmp
xlat
cmp
in
out
std
int3
mov
in
jecxz
fldl
iret
div
in
shll
aas
fcmovu
int
sar
in
fldl
sti
in
ljmp
iret
div
fnop
aas
xor
fdiv
fildl
ljmp
xchg
in
ret
shlb
sub
aaa
cmp
xlat
in
xlat
jmp
sub
lds
das
cs
clc
sar
fidivrl
lock
aas
stc
cli
in
xchg
out
cmp
jmp
div
lret
sti
call
ror
fadd
hlt
cmp
hlt
xlat
mov
in
enter
hlt
aad
xlat
out
in
fst
and
xor
test
fisttpll
mov
xlat
xor
cmp
int3
rcr
cmp
cld
rcr
std
aad
loope
mov
incb
ljmp
out
fiaddl
neg
mov
repnz
cld
cld
lock
loope
repz
xbegin
or
cmpb
aad
mov
jmp
mov
jecxz
cmc
repnz
int
leave
aad
out
fdivr
aad
ret
fadds
ljmp
lock
xor
lret
ss
stc
fsubr
fidivrs
hlt
aas
std
neg
fildl
lret
div
icebp
neg
cmp
xlat
dec
cmp
sti
mov
fcmovne
mov
lret
xchg
sti
loopne
adc
xor
loop
clc
hlt
cld
lock
faddp
in
stc
in
jmp
loop
jecxz
in
aad
into
cmc
cmp
in
sti
shl
test
fcmovbe
sbb
call
incb
shll
cli
sub
fadd
aad
loope
decl
filds
repz
shl
das
shl
xor
sub
in
jmp
in
loopne
xlat
test
enter
out
in
int3
call
repnz
xor
ljmp
std
leave
xchg
cli
aam
out
loop
test
test
hlt
aam
into
cmp
int
in
test
adc
fdivr
shl
addb
repnz
xchg
in
xor
lds
cmc
leave
stc
clc
rcr
fdiv
fyl2xp1
ds
loopne
repz
clc
mov
rol
sub
xor
fprem
cs
cmp
icebp
cld
std
repz
aam
idiv
orl
vpxor
clc
cli
jmp
xor
fadd
ffreep
aad
mov
jmp
aad
leave
lret
fstp
aad
mov
dec
jecxz
test
add
ret
mov
popl
loopne
ror
jmp
fucom
xlat
ljmp
loopne
repz
mov
in
ret
shlb
enter
into
lock
sarb
in
aas
ljmp
jmp
out
xor
out
into
filds
cli
xlat
xchg
fcmovnu
sub
shr
cld
fcomip
enter
cmp
enter
cmp
testl
cli
out
out
call
fdivs
loop
iret
into
cmp
rcl
dec
hlt
test
test
loop
call
rcl
leave
fldln2
fnstenv
repz
loope
xchg
mov
faddp
test
xchg
xchg
ret
out
out
imul
dec
sti
lret
stc
cmp
mov
in
int
out
leave
sti
cli
int3
out
test
cmc
shll
std
test
shl
icebp
hlt
repnz
leave
jmp
cmp
jecxz
ljmp
aad
xor
test
in
aas
in
loop
mul
adc
ljmp
in
fbstp
ljmp
cmp
fsincos
out
rcr
std
fsub
fninit
loop
lret
ljmp
stc
out
aad
enter
xlat
loopne
rcl
jecxz
out
out
in
sub
cmc
ret
in
cld
cmp
ret
idivb
icebp
fcomi
loopne
aam
mov
mov
out
leave
not
xlat
jmp
fdivl
shr
stc
loop
sti
test
lret
lret
out
fmull
shr
fcmovbe
ljmp
fcmovb
sti
aam
call
fsubr
test
lea
out
fstp
cmp
ds
rcl
ds
lds
test
loope
aad
fisubrl
std
hlt
sarl
into
loop
ds
mov
ljmp
xchg
int3
ffreep
lock
into
sti
repnz
ss
into
dec
rol
fst
pop
loope
mov
leave
xor
aad
aam
hlt
jmp
cmp
in
clc
mul
mov
adc
aam
out
into
shll
into
cmc
sar
pushl
mul
ds
cmp
test
mov
and
rcr
in
not
cmp
repnz
cmp
fadd
rol
cld
aam
loopne
call
into
xor
in
test
lret
int
in
out
out
ret
in
loopne
icebp
xchg
int3
hlt
in
xor
in
sar
ss
imul
loope
loopne
in
test
adc
int
loope
in
ret
shr
idivb
stc
cli
cmp
std
aas
ret
enter
fdivr
int3
ljmp
xor
int3
ljmp
int
sar
ret
xlat
test
icebp
lret
int3
filds
cmp
out
cmc
ds
fptan
ret
xor
fcmovnb
sub
loop
ljmp
clc
divb
clc
cmp
cmp
stc
lock
repz
cmpb
aad
int3
ffree
xchg
ljmp
out
std
shlb
int3
test
xlat
mov
clc
fdivr
mov
in
icebp
jmp
out
xor
out
repz
hlt
loopne
iret
icebp
ret
sar
cmp
mov
filds
loopne
loope
jecxz
xlat
sub
aam
out
out
loope
roll
loop
xchg
in
mov
in
leave
lock
cmp
int
fstp
fbstp
cld
call
addb
xchg
out
ret
repnz
std
ror
in
in
jmp
int3
inc
xor
repnz
aam
out
int
enter
lret
cmp
lds
clc
out
icebp
cmp
addb
xchg
fadd
in
xchg
test
fldl
in
into
cmp
jmp
jecxz
sti
and
out
loopne
rcr
in
test
int3
ret
das
int3
repz
sti
icebp
out
in
jecxz
rcr
filds
decb
jmp
jecxz
loop
sarb
repz
iret
lret
xor
shl
xor
jmp
into
out
test
ss
sar
stc
std
in
repz
ds
int3
fucom
sbb
leave
push
mov
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
hlt
mov
add
into
dec
out
ret
rcl
aam
out
repz
into
stc
int3
out
std
cmp
mov
mov
das
in
shl
rcl
into
out
rol
std
loope
jmp
xchg
in
lock
rcl
ret
leave
in
sarl
cmp
fiaddl
xchg
jecxz
in
xor
xor
idiv
fcmovbe
call
clc
rcr
aad
lret
sti
jmp
mov
mov
leave
int3
icebp
vpsubw
cs
aas
sti
cmp
fldl
fdiv
aam
iret
jecxz
mov
call
not
cld
fdivr
lock
xor
fcomip
cmp
idiv
or
test
jmp
fsub
xor
rcl
aaa
cld
lret
repz
ds
aad
addl
cmp
int3
lret
fcmovnbe
cmp
enter
ds
fnop
ret
mov
out
rcr
ljmp
cmp
out
cmp
fcmovbe
cmp
iret
jmp
neg
fsub
lock
in
shr
into
ss
iret
stc
shr
stc
test
in
rol
ret
enter
clc
repz
xchg
rol
out
xor
lret
ds
int
rcl
ret
std
aad
cmc
fdivrp
orl
loopne
sarb
call
fcomip
cmp
cmp
lret
test
leave
xchg
fadds
rcl
cmc
lock
icebp
into
cmp
into
sar
cmp
rolb
int3
int3
int3
loopne
mov
clc
xor
jmp
jecxz
xlat
jmp
out
sub
out
incb
shl
into
clc
icebp
out
rolb
lock
out
fsincos
out
mov
lock
sub
lret
adc
ret
in
lret
xchg
int3
xchg
std
xchg
aas
rol
cmc
clc
repnz
cmp
call
fcmovnb
loope
ds
fdivr
loope
mov
in
nop
fucomp
lret
loope
test
sbb
sar
stc
shr
jmp
loop
icebp
out
aam
shl
loop
fld1
icebp
int
iret
out
imul
cmp
out
mov
mov
lds
repnz
cli
shr
fcmovnu
enter
sar
fcmovnu
cmc
hlt
movb
dec
std
xchg
shlb
out
in
jmp
lret
sti
into
icebp
fistpll
sub
jmp
call
out
out
shl
out
in
ss
fucomp
xlat
iret
sar
in
ds
loop
xchg
orl
ret
xor
xor
fdivp
call
shl
mov
orl
iret
lret
sarb
aad
fnstcw
aas
ds
call
les
fcomip
out
out
loope
stc
cli
fxtract
lret
shl
in
jecxz
sti
test
decl
out
rorb
xor
cmp
cmc
rcl
ds
xor
out
ror
clc
xlat
out
ret
mov
fucom
int
das
ror
in
int
iret
iret
repz
fidivrl
in
flds
neg
xchg
cld
out
in
hlt
repnz
ret
sar
fcmovb
lret
cmp
xlat
sbb
std
fsub
out
lret
mov
loop
jecxz
out
cs
cld
clc
icebp
fadds
fadd
cmc
out
clc
mov
int3
clc
ret
call
sub
icebp
xor
lret
fdivrp
out
neg
bnd
lret
out
test
call
rcl
loopne
int3
hlt
leave
enter
cmp
icebp
cmc
icebp
idiv
and
mov
ror
out
xor
cmp
fcmovnbe
lret
or
std
test
out
rorl
leave
xchg
shl
jmp
xlat
cld
ss
sarb
cmp
cld
fsubp
mov
mov
shl
out
jecxz
lock
int3
cmp
xor
cli
fistpll
fcmovnb
neg
decb
xchg
out
out
out
repnz
imul
jecxz
leave
sti
int3
shll
aam
sti
addl
in
ret
testl
xor
cs
into
in
rol
clc
int
iret
ds
adc
rcl
loope
cmp
mov
incl
jmp
xlat
aad
rcr
fstp
cmp
mov
add
fsub
cmp
sti
cmp
cmp
loopne
clc
ret
xchg
rolb
call
int3
ror
shll
out
clc
cmc
test
ret
and
imul
mov
fbstp
cmp
cmp
rolb
loope
incb
enter
mov
aad
aaa
shr
loop
aad
aad
iret
call
fstp
testl
mov
fildll
out
rcl
cmc
aaa
xlat
in
int
into
repnz
ds
shl
stc
in
test
in
enter
xchg
out
shl
cmp
neg
cmpl
ss
stc
out
ret
std
std
icebp
iret
jecxz
imul
stc
cmp
fldl2e
push
fdivr
rolb
push
in
lret
in
nop
test
icebp
loop
fadd
sarb
fprem1
ret
xchg
loopne
decb
in
fadd
iret
out
xor
ljmp
cmp
cld
repnz
ret
jecxz
int
int
out
in
loope
jecxz
out
iret
std
sarl
sti
xlat
in
in
stc
faddl
xchg
mov
fiadds
not
aaa
cmp
idiv
sti
fdivr
cmp
fcmovb
out
xchg
xchg
mov
cli
int
repnz
ret
call
enter
clc
cmc
loop
les
in
addb
xor
jmp
xor
clc
fadds
mov
fsubr
call
icebp
xor
call
loopne
in
jecxz
fucompp
mov
xor
in
xor
in
cli
out
cmp
cmp
lret
ljmp
out
std
test
leave
mov
cmc
cmc
lock
shl
aaa
leave
clc
out
cld
loope
jecxz
xlat
loop
ret
aam
mov
fmull
divl
aad
in
div
in
aad
in
cld
loope
ret
mov
jmp
jecxz
in
xchg
ljmp
out
cmp
sarb
loop
out
out
lret
mov
into
mov
out
shrl
xor
sti
aaa
xor
fld
xor
repnz
call
ret
sbb
out
lret
cli
jmp
sti
loop
icebp
cli
std
enter
rcr
fcmovbe
aad
add
loopne
clc
in
xor
jecxz
rol
in
out
repz
cmp
rol
cld
mov
ror
jecxz
fsubrp
sub
repnz
ror
cli
lock
iret
hlt
and
loope
ffreep
int
jmp
fsubr
xchg
fucomp
loope
icebp
fcom
enter
cli
hlt
sar
test
repz
fcmovnb
fneni(8087
out
ficoml
neg
cmp
repz
out
fdivrs
ror
hlt
loop
fmull
repnz
in
call
cmp
in
leave
cli
xlat
xor
sarl
leave
in
loope
xchg
in
out
rcl
out
xor
hlt
call
aad
icebp
in
loope
mov
int
fisttpll
xor
not
std
cmp
xor
std
loope
rol
repnz
jecxz
in
jmp
rol
jmp
xor
int
fstpt
lret
stc
xchg
clc
aad
fcmovne
frstpm(287
mov
loopne
aad
fnstenv
leave
fcmove
cli
cmp
roll
fsubp
ror
jmp
fsubrp
fsub
xor
ljmp
shll
stc
int
cmp
fidivrl
cld
jmp
cld
add
fildl
in
leave
icebp
fsub
cmc
ret
les
call
lret
repnz
xor
shlb
fcomi
fucomi
jmp
addl
sbb
mov
xor
xor
int3
in
rcr
out
fsub
sub
testl
enter
loope
ror
stc
into
icebp
stc
call
cmp
xlat
std
and
loop
ljmp
mov
loop
aam
xor
cmp
clc
test
fucom
aad
rol
call
int
loop
icebp
fxch
in
fucom
jmp
cmc
sti
fucomip
cli
jmp
in
test
int3
in
repz
mov
jmp
jmp
ds
leave
fstp
ret
lds
ret
jl
add
out
leave
cmp
int
aad
aad
div
in
jmp
jmp
lock
loop
out
hlt
enter
ss
push
aas
jmp
hlt
fiadds
int
jmp
repnz
jmp
clc
ss
mov
cmp
fdivp
lret
in
test
lret
not
enter
in
rorl
in
sbb
in
sti
sub
fdivs
cmp
icebp
jmp
fnstcw
shl
cmc
mov
cld
jecxz
orl
ret
aad
cli
fld1
neg
and
icebp
hlt
ret
cmp
out
inc
mov
iret
rorl
idiv
jmp
lock
out
hlt
test
repz
mov
orb
int
cmc
xor
rcl
out
fdivr
test
shlb
hlt
cmc
fsub
mov
out
les
cmc
nop
xor
lds
lret
aaa
cmc
lret
div
clc
int3
shr
testb
std
fiadds
ret
xor
lret
ss
fyl2xp1
sarl
rcr
loopne
mov
mov
cmc
mov
lock
repnz
out
stc
fstp
in
out
cmc
hlt
out
out
vpsubusb
fucomip
int3
mov
in
aad
xor
stc
call
clc
into
int3
icebp
aam
hlt
std
mov
xchg
stc
loope
in
lret
xchg
in
shr
ret
xor
repz
in
cli
clc
shl
rol
movb
std
mov
iret
fdivr
hlt
cmp
rcr
loope
repz
out
cmp
std
cld
stc
xchg
leave
incb
jmp
shr
int
cmc
fidivrs
cmp
fidivrs
loope
xchg
cmc
lret
cmc
in
lds
xor
out
sub
sub
sti
cmp
cmp
mov
out
sub
fst
jmp
fcomp
repz
xchg
fucomip
inc
out
iret
popl
ret
fnstenv
cs
int3
iret
aas
sti
ret
cmp
repnz
repz
into
fsubr
shl
xor
jecxz
stc
sar
cmp
into
jecxz
or
mov
out
ss
xor
ljmp
rcl
loope
std
cmc
test
lea
lock
test
ror
sar
xchg
jmp
loope
cli
jmp
add
xchg
lea
ret
jecxz
cmp
out
iret
in
fstpt
fisttpl
cli
aam
loope
and
xchg
int3
ds
xor
fcmovnbe
cmp
in
icebp
cmc
fstp
fucom
leave
ror
test
sub
out
stc
loopne
ret
in
stc
repnz
ss
rcr
in
fdivr
shl
mul
icebp
ret
in
mov
out
das
out
ss
in
xor
cmp
adc
ret
fldl
repz
repnz
xor
into
aad
cmc
int3
cmp
repz
jmp
jmp
xchg
into
out
xor
int3
jmp
leave
cmp
decb
stc
mov
shlb
iret
ss
clc
aaa
in
inc
aas
xlat
cmp
flds
fucomi
std
mov
fdivp
xlat
into
leave
aaa
repnz
lret
ds
hlt
jmp
sar
or
in
loope
repnz
imul
stc
int
cmc
aas
in
ljmp
loop
out
int
ret
xchg
in
shr
ret
repz
int3
ljmp
cmc
test
mov
fsub
dec
call
fldcw
fsubr
aad
aas
cli
cld
idiv
aam
cmp
add
mov
fucom
xchg
icebp
out
icebp
cmp
jmp
hlt
jmp
ffreep
incb
shr
fld
lret
out
fstl
shr
ljmp
icebp
out
clc
loopne
cld
jecxz
out
repnz
std
xlat
xchg
mov
xchg
out
aaa
shl
clc
lret
cmp
ljmp
loope
shl
int3
out
sti
test
xor
div
call
aam
clc
rcl
orl
nop
out
faddp
stc
xor
leave
cmp
cmp
cmp
add
add
jmp
ror
int3
fcmovne
inc
clc
adc
inc
push
ficompl
dec
xchg
jl
addb
jl
stc
fcmovu
sti
mov
aad
std
testl
ret
loop
int3
xlat
cmp
sti
int3
icebp
rcl
aad
cmp
sti
fadd
fldl
xchg
not
int
hlt
out
out
out
leave
xor
ss
shr
repz
std
shr
leave
xchg
loop
xchg
iret
xor
ret
int3
rol
in
std
int
jmp
stc
sar
out
out
cld
out
out
incl
into
jmp
ret
in
rcr
enter
sti
idivb
ret
in
in
loopne
repz
mov
in
int3
cs
int
cmp
cmp
and
icebp
in
xlat
hlt
repnz
mov
shlb
fdivr
test
in
repz
lea
out
call
ret
fcmovne
shr
int
clc
aad
test
stc
out
std
cld
out
ljmp
not
aaa
fmul
in
into
idiv
cmp
xchg
fadd
rol
xlat
in
in
loop
in
rcr
cmp
fcom
cmp
clc
cmpb
out
xchg
fcomi
jmp
mov
lret
int3
icebp
in
lret
ror
repnz
fadds
cld
out
jecxz
jmp
out
aam
in
aad
fidivrl
fsub
aam
cmp
ffreep
hlt
jecxz
fcomp
call
test
in
int3
cmc
int3
xlat
icebp
cmc
jmp
in
ffree
ds
out
lret
sti
rcll
hlt
lock
ret
cmp
out
in
cli
filds
aad
sar
int3
xchg
xchg
ljmp
idivb
fptan
xor
loope
ret
xlat
mov
sti
xlat
xlat
lret
stc
xor
lret
divl
divl
in
loop
aas
movl
int
xchg
shll
rcl
repz
rcl
std
fcomp
shl
lock
clc
fmulp
leave
leave
loopne
fiadds
aas
loop
iret
int3
out
lret
sarb
cli
cmc
addb
test
enter
shl
int3
sub
iret
lret
shll
cmp
fmul
in
ss
test
test
ret
lret
mov
mov
icebp
mov
in
rol
xor
clc
sti
xor
call
rol
jmp
call
test
enter
ror
fsubrp
ror
jecxz
jmp
mov
cli
enter
rorb
shl
out
stc
cmp
int3
in
loope
fdivr
ljmp
lock
div
lret
std
cs
not
cmp
rolb
sti
call
fmul
mov
jecxz
jmp
cli
aas
aad
int
cmp
into
in
inc
out
jmp
xchg
std
jmp
out
xor
int
mul
shl
sti
clc
repz
leave
mul
stc
cli
test
fmuls
leave
in
shr
jmp
shl
cmc
or
rcl
in
xchg
and
orl
jmp
aad
cli
hlt
stc
std
cmp
ret
out
lret
iret
lret
out
in
call
out
shrb
int3
rolb
repz
faddp
fstp
jmp
fucom
cld
cld
sub
int3
imul
leave
xor
hlt
xor
repz
lret
cmp
and
mov
std
sti
iret
rorb
xor
lret
fnstcw
or
aam
and
int
push
decb
xor
into
in
in
ss
in
out
aad
sti
loope
jecxz
cld
in
cli
cli
ffree
rclb
int
shlb
xor
rcr
cmc
cmp
repz
loopne
ret
hlt
lret
sti
lock
shl
cmc
ljmp
int3
aaa
lret
aam
ds
test
ror
fcmovbe
loop
mov
fdivr
std
xchg
fsubrp
out
in
xor
sar
shl
lock
xlat
out
fnstsw
lock
icebp
adc
out
leave
enter
lret
lret
cmp
test
out
cli
std
ficoms
icebp
xlat
jmp
cli
aaa
cmp
repz
int
sarb
rcr
fisttpll
loope
rcll
hlt
xlat
repnz
xor
fadd
loop
std
into
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
aam
clc
test
lcall
mov
sub
int3
loopne
in
xchg
xor
jmp
repnz
fpatan
cmp
test
test
shl
in
xchg
add
cmp
loopne
jecxz
shl
lret
ffree
int
clc
cld
clc
aas
fdiv
fdivp
loop
fsubp
sti
fcompp
nop
iret
loop
fadd
in
jecxz,pn
fdivs
cmp
fidivrs
in
aas
out
rolb
mov
in
icebp
repz
and
shl
icebp
xor
in
xor
icebp
loopne
fsubp
in
cmp
in
clc
mov
fbstp
repnz
cs
xor
hlt
jmp
stc
sti
int3
out
sar
stc
mov
in
fxch
int
rorb
sub
in
cmp
iret
lret
lock
loop
xlat
fst
jmp
clc
or
inc
in
repz
aad
ret
shr
aaa
xor
icebp
stc
aaa
out
cmp
hlt
rorb
xchg
fucom
shl
mov
div
ss
aad
shr
icebp
call
cmp
mov
mov
int
subl
shr
in
int
fsubp
aas
xchg
ret
imul
xchg
out
test
fmul
xchg
shl
int3
lock
into
out
xor
int3
aas
sarl
test
fyl2xp1
repz
std
stc
ljmp
mov
mov
out
xlat
in
out
fxch
sti
xor
fsubr
into
ss
jmp
mov
loopne
std
or
out
imul
xlat
int
into
cmp
fiadds
sar
fcom
cli
stc
mov
out
int
std
sti
lret
shl
cmp
fcomi
aad
std
out
shr
nop
repnz
aad
jmp
shl
aam
in
shl
loop
jmp
mov
loopne
fists
cs
repnz
ljmp
into
stc
aam
in
std
cli
mov
loope
lock
sarl
cs
ss
clc
loope
repnz
loopne
mov
mov
lret
shl
hlt
mul
in
lret
loop
clc
cs
cli
dec
imul
sti
loope
sar
aam
aam
in
call
jmp
xor
ret
out
lret
shl
lret
call
ret
cmc
loopne,pt
repz
testl
test
ret
xor
clc
xor
shl
xlat
int3
out
fucomi
xor
cmc
repz
clc
ret
fcmove
call
out
ss
iret
lret
cmc
cmp
shl
rcr
in
sti
sub
in
into
fsubr
jecxz
das
xor
cmp
cmp
sti
ss
iret
cli
ret
sarl
into
aam
enter
xchg
cld
in
shl
aad
icebp
rcl
loop
les
xor
loope
in
iret
fdivp
fdivr
aad
out
test
jecxz
incl
fcom
leave
idiv
hlt
clc
call
cmp
loopne
mul
orl
shll
xor
hlt
fyl2x
rcl
lret
frstpm(287
std
aad
enter
into
fucomp
call
sub
lock
cmp
in
stc
ds
cli
lret
leave
jecxz
test
jecxz
out
jmp
divb
lret
icebp
hlt
ss
ss
std
ds
cld
cld
dec
in
cmp
clc
jecxz
jmp
into
hlt
out
xor
jmp
out
enter
repz
ret
shl
cmp
in
shl
call
enter
rcl
std
int3
xor
std
cmp
rcl
cld
aad
jmp
nop
call
cs
ljmp
out
fdivrl
loop
lock
out
icebp
jmp
int
leave
iret
shl
fmul
int3
lret
out
cmp
rcr
shl
fmul
cld
ffree
in
fcmovne
sub
cs
call
sti
cmp
fcomi
div
cmp
loope
leave
loope
and
call
in
aam
fsubr
in
in
jmp
loopne
ror
roll
std
mov
leave
xchg
ljmp
ret
ror
in
cmp
fidivl
shr
stc
stc
fnstsw
test
cli
fcmovu
cli
int
int3
test
xchg
in
loop
xor
in
leave
into
hlt
ljmp
in
ret
rorl
int
or
xchg
nop
hlt
aad
out
lret
out
aad
xor
loope
lock
ds
xchg
out
in
adcl
jmp
icebp
not
out
fidivl
int3
lret
in
not
lds
je
mov
mov
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
fisttps
push
sahf
jl
addb
jl
fadds
hlt
lret
ljmp
lret
icebp
loopne
fldl
mov
icebp
cli
xchg
fcomip
hlt
hlt
cmp
in
jmp
sti
fcmovu
cmp
jecxz
rcl
mov
sti
fmull
sub
fsubr
out
not
enter
sbb
icebp
stc
in
fisttps
nop
lock
in
out
repnz
fcmovu
xor
ss
rcl
mul
loop
xlat
mov
xchg
out
in
ror
xlat
leave
hlt
ss
cmp
fincstp
ljmp
call
stc
icebp
enter
aad
shll
loop
cmp
int3
int
cmp
jecxz
sar
leave
into
fsubr
enter
loope
ss
lret
xor
jmp
std
ret
vpsadbw
out
lret
in
call
lock
cmc
ss
jmp
iret
loop
lds
cld
in
ljmp
rcl
call
jmp
test
lret
and
aad
ret
jecxz
neg
xor
cmc
cmp
fadds
xor
leave
out
in
loop
shr
into
ss
shl
rcr
test
test
jmp
mov
in
int3
int
iret
cmp
clc
enter
rcl
fidivrs
imul
bnd
xlat
hlt
xchg
ljmp
mov
loopne
loopne
sub
into
rcl
hlt
lret
ds
cld
xlat
idivb
not
fsub
jmp
fisttps
ljmp
hlt
xor
icebp
sar
iret
lret
cmc
fildl
out
fadds
loopne
sbb
iret
repnz
xor
cmp
aam
cli
sti
rcr
into
rcr
fcmovnu
mov
enter
xchg
cli
test
rcll
shr
clc
xor
fdivrs
loopne
sar
loopne
mov
enter
in
icebp
xor
fsubr
lret
sar
int
stc
int
cli
cli
test
les
loopne
ror
icebp
aam
ljmp
fdivrl
cmp
shl
enter
fiaddl
out
loop
xor
ss
cmp
enter
jecxz
icebp
loope
loopne
mov
leave
lret
enter
int3
in
fxtract
in
out
fnstcw
iret
aaa
call
mul
sti
mov
loopne
mov
enter
test
xor
fmul
out
in
hlt
clc
iret
icebp
and
cmc
jmp
addl
xlat
stc
icebp
sti
in
orl
cli
aas
lret
lret
icebp
repnz
call
loope
and
jecxz
ljmp
fadd
in
div
shl
cmp
ret
add
ljmp
xor
cld
idiv
fsubp
clc
repnz
aad
xchg
test
cmp
out
in
sub
xor
cli
neg
int
shl
out
icebp
aam
sar
cli
testb
ret
aaa
in
aad
cs
xlat
fsub
rol
cmc
loopne
lds
in
in
lret
repnz
mov
int3
in
repz
out
std
ds
or
repz
mov
iret
ret
ficoml
out
leave
int
aaa
cmc
hlt
std
cmp
ljmp
fldl
in
xchg
in
repz
xor
rcl
rcl
aas
aas
clc
in
aas
ret
inc
div
clc
repnz
fstp
leave
loopne
repnz
sub
into
int3
out
fstp
sti
int3
idiv
fdivp
aas
test
fadd
fstp
dec
lret
xchg
in
das
xor
cmp
fcmovnu
int
aad
int
fmulp
loope
clc
decb
enter
fucomp
int
cmc
out
cmp
cmp
or
loop
jmp
stc
flds
das
shl
cs
fdiv
xlat
icebp
repnz
cli
xlat
sar
cli
loope
faddl
xchg
int
fsubrp
shl
imul
in
into
fidivl
cmp
ret
cmp
stc
loope
test
mov
movb
xor
int
xlat
fnop
fstpt
jecxz
enter
fadds
xchg
out
xor
in
jmp
stc
icebp
not
out
lock
call
aas
clc
in
sub
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
cmc
iret
repz
loopne
loop
xor
int3
fmul
std
fdivrp
jecxz
xchg
out
xlat
stc
icebp
out
repnz
xor
stc
rol
leave
lret
cs
aaa
lret
ds
rol
in
xchg
cmp
test
lret
jmp
std
mov
cs
loopne
ret
cmp
aam
int3
iret
into
jmp
or
jmp
and
fisttps
ss
icebp
fcom
shl
fmul
jecxz
idiv
fdiv
idiv
lret
loop
out
lret
cs
cmp
std
jmp
cmp
roll
cmp
fucomip
cmc
icebp
repz
shll
icebp
cmp
sar
fdivrl
clc
xor
rcr
fiadds
fildl
cld
aad
ret
xor
cmp
enter
ds
loopne
cld
stc
xchg
clc
fmul
neg
in
fldpi
nop
jmp
cmp
xor
jmp
icebp
shl
test
ret
aas
test
in
ds
sub
xchg
das
in
xor
out
cli
rcl
iret
cmc
cmp
cld
xchg
in
mov
out
lret
mov
lock
in
out
lock
aam
repz
jmp
iret
out
faddp
loop
lret
call
xrelease
stc
cmp
int
rcr
stc
addb
addb
out
int
xchg
call
leave
sub
jmp
ds
test
in
xor
fimuls
addl
ret
lret
lock
cmp
std
clc
shl
out
enter
fcomp
out
mov
lock
aad
int3
cli
sti
fsub
add
cmp
fsubr
xchg
loopne
iret
xchg
test
fcmovne
rol
std
or
test
mov
jmp
std
fldlg2
loopne
aam
out
leave
lret
into
icebp
sti
loope
cmc
stc
ret
sbb
loope
fstp
loope
addl
out
sti
xlat
aas
cmp
fcom
repnz
fisttpl
mov
icebp
out
loopne
sarl
cmp
jecxz
std
loop
loope
cmp
hlt
mov
xor
icebp
int3
call
clc
in
cmp
out
cld
out
ret
test
jecxz
in
mov
ret
sti
cmc
cmp
rcl
test
loope
leave
ror
int
mul
in
shl
icebp
out
in
in
jmp
hlt
sti
int
xchg
lret
filds
lret
faddl
ljmp
shr
jmp
aam
flds
mov
fiaddl
int
loop
int
xor
xlat
xlat
iret
imul
into
icebp
fld
out
repnz
mov
jmp
test
sub
int3
xor
repz
fnstsw
cmp
hlt
flds
mov
call
into
ljmp
int
xlat
call
loop
xchg
aas
ret
fucomi
int
aad
iret
mul
out
xor
cmc
std
sarb
cld
int
repnz
sti
fcomp
mov
in
int
stc
jecxz
lret
xchg
xor
lret
cmc
std
fnstcw
sarl
xchg
call
clc
fsts
repnz
xor
lock
into
cmc
int3
stc
aas
cmp
jmp
jecxz
loope
jmp
repnz
ljmp
cmp
rcl
aas
loope
call
dec
out
sbb
xchg
out
cmp
loop
shlb
lret
jmp
jecxz
out
loopne
and
xor
out
mov
jmp
mov
ret
xor
enter
cli
stc
xchg
sar
test
fisttps
shrb
in
sar
iret
enter
int
shr
out
out
ret
lret
mov
loope
xlat
icebp
xor
aaa
div
hlt
repnz
hlt
std
cmp
in
sti
decb
xchg
rcl
imull
ret
xor
lret
xor
sar
loope
loopne
cli
jmp
lock
int
cmc
jmp
leave
xlat
cs
fmul
in
ret
into
filds
ret
fstpt
mov
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
aad
mov
jl
flds
jl
icebp
out
mov
idivb
out
test
lock
fdivr
fcmovnu
rcr
out
fcmove
into
mov
in
rcr
loopne
lret
cmp
cmc
into
loopne
icebp
jecxz
enter
in
call
cmc
fdivrl
das
aam
cmp
iret
fucomi
rcl
jecxz
lret
cmp
rolb
sti
repz
repz
aad
out
fsub
hlt
ss
mul
iret
fdivp
in
mov
ret
cli
lret
int
mov
les
lret
cmp
not
into
in
cld
out
fcmovnu
movb
fxch
std
mov
ljmp
cmp
fdivrs
flds
mov
lea
xor
test
cmp
shl
jecxz
in
clc
ljmp
loop
test
int
fdiv
out
hlt
cmc
repnz
jecxz
sti
cli
loopne
aam
cmp
in
std
xchg
out
mov
xor
jmp
idivb
cmp
and
xlat
shl
call
leave
std
mov
xor
ror
in
iret
hlt
aad
cli
repz
fld
jmp
and
mov
mov
out
sti
icebp
fdivp
aaa
hlt
std
incb
test
lret
out
or
jmp
fcomip
out
ret
leave
jmp
cmp
neg
cmp
test
jmp
jmp
cmc
loope
cli
ror
lret
fistpll
loopne
out
xlat
add
mov
int
clc
fcmovnbe
shr
loopne
sub
xor
lret
iret
lock
cmp
loope
fdivrl
neg
std
clc
out
in
int3
cmc
xor
icebp
lret
out
not
test
repnz
cmc
dec
out
iret
jmp
out
shr
divl
icebp
ss
int3
cmp
orb
lret
jecxz
mov
shrb
leave
cmc
in
lock
rcl
cmpb
ret
cmp
in
fldl2e
test
loope
xchg
loope
out
xlat
sarl
lock
repz
hlt
test
flds
in
int3
enter
cli
mov
ret
in
ror
out
aas
aaa
out
loopne
out
in
out
loop
test
faddl
loope
loope
xor
fcomi
adc
fcmove
test
std
call
sbb
int3
ret
cmc
cmc
in
ret
hlt
aaa
cmp
out
in
fbstp
dec
sar
cmp
jmp
call
loop
test
loop
int
leave
aam
loopne
fldl
xchg
mul
cli
loope
mov
jmp
idivl
ss
cmpl
call
ds
rorl
ret
jecxz
cmp
shrl
fdiv
enter
iret
fcomi
repz
fdivr
in
clc
nop
rcl
jmp
xor
cmc
jmp
lret
cmp
aam
shl
sar
adc
aad
faddl
jmp
int3
orb
repz
jmp
loopne
loop
flds
mov
incb
shl
repnz
fdivrs
xor
ss
ror
test
fcmovb
jecxz
xlat
aad
ljmp
cmc
hlt
shr
icebp
ret
out
aad
in
fcmovu
fucomp
roll
enter
test
shlb
xor
lret
aad
aas
push
cmp
fsubp
fildl
test
jmp
sti
xor
fcom
call
fmulp
sarb
hlt
shl
test
call
shlb
ror
xor
fsubr
sar
lock
sbb
incb
loopne
out
iret
shl
out
sarl
cmc
out
rcl
fdivr
hlt
fiadds
clc
in
lock
xor
xor
into
stc
ror
cmp
aas
in
cmp
loopne
xlat
fimull
fcomi
loop
enter
cmp
fdivrl
into
out
xor
std
cmc
fadd
mul
std
imul
loopne
out
xrelease
jmp
int
cmp
ds
rolb
mov
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
outsw
push
adc
jl
in
std
in
rcl
int
ror
cmp
clc
jmp
jmp
test
sar
in
fcoms
ljmp
xor
in
fidivrs
in
enter
cld
test
fcmove
out
call
into
cld
enter
in
jmp
fsin
std
loope
xchg
enter
out
cmc
int3
in
in
enter
sar
aas
call
sar
enter
faddl
mov
shr
cmp
leave
repnz
fmul
cmp
sarl
fcmove
lret
cld
ret
std
mov
in
fst
call
repz
xor
cmp
cmc
test
jmp
jmp
lock
fbstp
fmul
sti
in
out
int3
out
int
cmp
jecxz
call
loop
mov
out
in
addl
test
fcmovbe
xor
loope
cli
lret
addb
xor
call
call
int
hlt
not
std
aas
fsubr
rol
in
cld
out
cld
cmc
repz
in
ror
aam
iret
jmp
cli
cli
lock
test
leave
mov
ljmp
in
out
out
clc
mov
idiv
test
sti
fmull
int
fsubrl
vpsrlq
int
cmp
rcr
xlat
clc
mov
fstp
cli
mov
aad
in
xor
shr
cmp
loope
cmc
repnz
mov
xchg
jmp
repz
repz
fsubrp
sarb
idiv
cli
mov
mov
aaa
ss
fld1
enter
rol
cld
fst
call
aad
stc
fmul
loopne
out
ret
aam
lret
stc
xlat
test
into
lock
ror
addb
test
out
lock
jmp
xor
int
rolb
mov
shr
enter
call
xor
into
cmp
fcomi
stc
hlt
cli
loop
stc
hlt
mov
jmp
iret
loop
in
xor
sbb
out
clc
leave
sti
xchg
out
addl
out
ror
cmp
fidivrl
loope
aad
sti
xor
ret
fisttps
iret
int
fstpt
aaa
sar
shl
out
ds
iret
into
test
cld
out
addl
in
mul
lret
out
in
fcmovnu
cli
jmp
cmp
cld
xor
ret
sti
ret
mov
mov
fsub
in
out
cmp
cld
shlb
stc
ljmp
cmp
sti
nop
iret
shl
iret
and
in
xor
idivl
cmp
fdivrs
int
out
cli
ftst
test
mov
loop
nop
mov
out
in
xor
jmp
out
fdivp
cmp
fdivrp
out
jmp
ljmp
nop
lea
loope
call
loope
into
jecxz
cmp
icebp
addb
jmp
fisttpl
aaa
out
test
clc
iret
std
in
aaa
rol
fcmovu
ret
into
rcl
loop
leave
loope
and
lret
in
xor
xor
fdivs
repz
not
ljmp
ret
jmp
sub
call
fld
clc
jmp
div
into
std
fcmovnb
loope
leave
cmc
enter
nop
mov
std
xchg
mul
xor
call
ss
enter
and
imul
out
std
enter
fstp
out
jecxz
jmp
lock
idiv
out
clc
cmp
iret
div
ret
shl
in
mov
mov
mov
xor
fidivl
rcl
sti
loope
adc
mov
jecxz
out
jmp
fadd
test
jecxz
in
lret
sti
sti
lds
iret
ljmp
rol
les
out
into
out
xchg
loopne
cmc
xor
ljmp
clc
cmp
loope
hlt
fsub
aam
fnclex
out
test
mov
bnd
aam
fcmove
out
xlat
cmp
sarl
je
jmp
iret
aad
aad
aad
aad
mov
or
ds
mov
jl
add
lock
aam
std
sbb
jecxz
xchg
mov
cs
divl
icebp
into
or
iret
xchg
test
aad
ret
fadds
loope
icebp
xor
int
in
out
xlat
lret
out
shl
repz
jmp
mov
loop
jmp
aaa
aaa
repz
clc
cli
lret
or
ret
fisttps
jmp
mov
faddl
shl
fcmovnbe
sti
aad
f2xm1
std
cld
in
sarb
in
aam
int
fisttpll
ret
int
lret
testl
std
std
jmp
fst
fsub
cmc
hlt
shlb
hlt
shr
lock
ret
testl
xchg
sub
sub
xor
fstp
fcos
into
fmulp
flds
repz
fucomp
loopne
adcb
int
stc
cmp
aaa
cmp
idiv
sarb
fcmovu
adc
add
cld
call
loopne
xor
fcmovnb
int3
hlt
fdivr
out
aam
stc
aam
out
stc
hlt
in
out
enter
iret
out
not
ljmp
out
fcmovnbe
cmp
ret
roll
leave
out
out
into
int
rcl
stc
les
cli
cmc
in
ds
xor
ret
fiadds
orb
fisttpll
clc
stc
cmp
in
cli
neg
int3
in
aad
xlat
call
jmp
orl
icebp
aad
cli
jmp
fnstsw
cld
rcl
fndisi(8087
call
std
test
xchg
lret
ret
leave
in
ljmp
fsin
sti
std
fiaddl
in
mov
xrelease
ljmp
cli
shl
rol
cli
cmc
loopne
faddp
aam
loope
jmp
in
jmp
lock
cmp
repz
enter
ret
icebp
jmp
clc
movb
add
cs
aam
out
int3
shl
aad
hlt
stc
shl
fdiv
xlat
sar
jecxz
out
xchg
in
repnz
das
in
lret
out
lock
leave
shl
fdivrl
test
xlat
ret
leave
loope
dec
enter
fildll
aaa
aaa
cmp
fnstenv
fucomi
sar
stc
jecxz
cli
out
shl
ljmp
loope
shrb
enter
cli
fmul
aam
int3
ret
sti
test
and
fdiv
iret
loopne
test
fidivs
ret
cmc
xlat
fsubr
fdivr
aad
jecxz
fninit
xchg
fscale
leave
in
icebp
test
aaa
in
aam
loop
xor
out
repz
out
ljmp
mov
lret
xchg
fdiv
shl
shl
shlb
out
call
rcl
xor
jmp
lea
jmp
jecxz
fcmovnu
lret
cmpl
cmp
call
leave
leave
loope
out
shl
stc
cld
cmp
fdiv
ljmp
xlat
loope
ret
loop
in
xchg
call
loop
out
xor
aam
int3
sar
rol
mov
out
cld
cld
cld
out
in
out
in
sub
enter
xor
sarl
rcl
cmp
in
mov
fxch
fsub
mov
hlt
into
loope
rcl
icebp
cmp
aad
jmp
fcomp
hlt
aam
fdiv
sar
fsubrp
mov
shl
rcr
aaa
imul
int3
out
icebp
cmp
rcl
sarl
cld
addl
lret
xchg
bnd
rcl
repnz
cmp
lock
faddl
fprem
mov
jmp
cmp
fucomp
aad
xor
cmpb
adc
mov
mov
cs
in
enter
hlt
int
fcmove
cmp
aam
rol
clc
in
int
clc
iret
jecxz
in
pop
xor
sti
fadd
enter
aad
loop
loop
lret
xlat
fchs
in
jmp
aad
hlt
jecxz
ror
les
leave
ljmp
leave
mul
mov
lret
rol
loope
shr
lock
sub
mov
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
adc
inc
mov
jl
add
dec
sarl
icebp
lock
xor
cmc
in
lret
cld
mov
repz
fcom
lret
std
in
xor
mov
mov
in
les
shr
hlt
xor
sarl
out
shl
icebp
ret
test
in
jmp
int
mov
icebp
inc
in
loop
clc
aad
jmp
cmp
cmp
shl
xchg
std
enter
xor
rol
cmp
cmp
loope
flds
cld
call
xchg
xchg
shl
out
ret
sti
fdivrl
iret
int
out
sti
rcl
adc
int
fmul
call
imul
jmp
rcr
aad
shr
loopne
fisttps
xchg
xchg
int3
mov
jecxz
cld
out
aam
cmp
sti
shl
loop
fldl
int3
incb
ret
jecxz
out
sar
ss
call
out
aas
ds
out
xlat
out
out
out
sub
fadd
ss
ror
out
sar
repz
ret
fiaddl
loope
ret
jmp
out
int
out
jmp
fcmove
repz
mul
in
sar
loop
cli
xlat
incl
ljmp
int3
aam
cli
into
out
testl
leave
xchg
rolb
out
out
xchg
sub
rol
fstpt
aas
rcl
cmp
stc
out
loop
in
sbb
rcr
xchg
fsubrp
fsub
sub
aad
lock
aam
into
lock
call
icebp
stc
repz
mov
mov
test
orl
xor
jmp
fcom
cmp
test
ljmp
mov
lret
enter
out
fucomip
ljmp
addb
in
sub
int
ret
imul
aad
fildl
out
addb
int3
test
fcoms
aam
int
int3
cmp
into
out
xlat
rcl
cli
repz
out
sub
roll
cmc
cmp
fst
shl
incb
lret
cmp
sar
xor
ret
lret
lret
cmp
enter
aad
fiaddl
hlt
imul
movl
out
cmc
repz
fidivrl
fdivr
rcr
iret
loope
loopne
test
sti
loope
test
incb
xlat
int3
rcl
ljmp
fdivp
std
test
xchg
rcr
int
and
cli
sar
in
xor
clc
cmc
int3
out
fucomip
cmp
sub
aam
out
faddp
aad
in
mov
iret
in
das
repnz
aam
call
jecxz
loope
xchg
ror
ret
aas
out
cli
mov
xlat
into
shl
cld
call
aad
push
fmull
fmul
into
in
in
bnd
into
out
lret
fdivr
into
rcr
ret
aad
cli
xchg
aam
jmp
in
popl
xor
cmc
cli
out
cmp
cmp
fsub
shl
loopne
ljmp
fiadds
int
lret
cld
out
lock
neg
fadds
fsub
fsub
enter
xchg
nop
int
xchg
leave
shl
shll
lock
test
icebp
in
mov
icebp
lret
xchg
sar
jmp
shl
cmp
cmp
fcomip
fdivr
cmp
fst
aam
cmc
ret
ljmp
aad
sub
iret
xor
loop
cld
xor
leave
fbstp
jecxz
jecxz
sti
loope
in
loop
mov
in
repz
in
out
das
aaa
test
cmpl
mov
loopne
leave
fildl
mov
lock
int3
in
iret
fcmovnbe
fnstsw
ret
fnop
ret
fdivrs
stc
div
loop
fmulp
stc
test
mov
fdiv
cmc
shrb
jmp
cmp
jmp
sti
xchg
repz
loop
rcl
sarl
shl
cmp
test
in
hlt
fcmovbe
enter
out
in
fisttpl
loop
xor
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
mov
jl
lret
in
into
sar
aam
fldl
out
int
mov
icebp
lds
int
repz
fdivrl
fcomp
iret
fcom
sbb
testb
int3
std
loopne
fisttpll
int
jmp
hlt
shl
cmp
sbb
addl
aam
das
stc
out
repz
lret
out
cmc
xor
cmp
neg
in
jmp
cld
xchg
clc
fcmove
cli
ror
hlt
lret
cld
jecxz
sar
jecxz
rolb
mov
repnz
in
clc
stc
iret
cli
jmp
jecxz
loopne
jmp
hlt
lret
enter
fcoml
sub
xor
shl
shl
addb
enter
enter
hlt
rcr
loop
repz
shr
sti
idivb
int
fidivrs
inc
testl
fmuls
int3
out
div
cmp
std
ds
ret
out
rcl
leave
mov
test
xchg
jecxz
ds
aad
int3
out
and
shl
mov
fcmove
int
cli
std
xchg
out
loope
call
stc
cli
fildl
xchg
lret
xchg
into
roll
das
shrl
aaa
imul
add
sub
neg
add
std
xchg
call
int
shl
shr
aas
fld1
fsub
faddl
shl
hlt
stc
ret
mov
loop
lret
shl
cmp
not
aaa
icebp
push
cli
hlt
jmp
jecxz
decb
enter
ljmp
loopne
repnz
loop
std
fdivrp
enter
fidivrs
fsubr
repz
int3
out
out
fcom
cli
fcmovbe
iret
shr
mov
shl
fmulp
and
in
shr
cld
jmp
in
fucomip
in
out
aad
sti
sti
in
out
cld
les
mov
in
stc
and
out
bnd
out
xchg
nop
aad
out
xor
mul
call
and
cmp
xlat
icebp
stc
aad
loopne
mov
fsubr
or
in
lock
in
fldln2
int
into
sar
cmp
loop,pt
aad
test
jecxz
int
out
addb
out
cmc
rcr
aaa
leave
out
cmp
std
fsub
repnz
int3
sbb
shr
int3
out
clc
repnz
fpatan
int
int
shl
cmp
test
lret
leave
notl
adc
ret
fcmove
leave
into
rcl
clc
inc
sarb
lock
fcmovnu
sbb
orb
out
rcl
xor
lret
out
xor
lock
in
int3
cmp
test
test
xchg
shl
leave
mul
xlat
xor
in
std
loope
cmp
aas
stc
and
in
lret
rorb
xor
jecxz
xor
clc
xlat
int3
fdivrs
cmp
fidivrs
cli
test
mov
cmp
enter
fcmovnbe
repnz
ret
lock
out
aad
cli
int
xor
loop
cmp
not
jmp
out
loopne
in
xchg
xchg
in
jmp
fnstenv
imul
sar
cmp
into
loopne
out
std
ret
loope
xchg
int3
xchg
xlat
loop
vpaddsb
jmp
xlat
rol
aam
test
jecxz
mov
mov
mov
xor
cmp
stc
cld
out
fcmovu
cmp
into
test
ret
enter
clc
fsub
xchg
test
repnz
in
xor
fldl
xchg
out
testl
enter
div
rcl
iret
shl
cmp
icebp
not
rorl
fcmovnu
movb
shl
fmul
hlt
cld
icebp
enter
aam
fmul
rolb
fiaddl
xor
loopne
icebp
cmp
xor
lock
int
icebp
xlat
shl
aad
sti
jmp
xor
icebp
out
cmp
shl
hlt
jecxz
out
mov
in
lret
cld
xchg
add
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
into
pop
dec
in
cld
mov
jl
out
leave
enter
int
xlat
lret
cmc
int
cmp
into
sti
xlat
fcmovb
xchg
dec
mov
xor
ljmp
cld
int3
clc
clc
or
aad
loopne
in
in
lret
out
xor
cli
lock
fcomp
in
rcl
int
or
sti
jmp
cmp
rcl
cmp
std
out
xlat
out
out
lock
not
fsub
jecxz
std
mov
into
xlat
clc
cmp
repz
hlt
rcl
shl
ds
cmc
mul
sub
rorl
xor
rcl
ror
out
icebp
and
test
iret
iret
lret
mov
loop
icebp
ljmp
test
cmp
leave
lret
fcmovnu
ljmp
fdivrs
clc
fdivl
repnz
leave
out
sti
loope
in
jmp
aad
aaa
in
repz
int3
jecxz
cmp
aad
leave
ret
fcmovnu
fsub
dec
fistpll
sub
xor
aam
aad
in
cmp
in
shl
cmp
xchg
sti
out
xchg
mov
in
xor
lock
cmc
lret
aam
in
xlat
cld
test
clc
mov
mov
jmp
iret
sti
fnsave
int3
loopne
shl
aam
idivl
in
fimuls
in
mov
icebp
int3
jmp
lret
aaa
cmpb
out
fcmovnu
in
rcl
in
cmp
loopne
loope
shl
ret
imul
aam
cmp
hlt
aas
cmp
fxtract
jecxz
call
cmp
call
hlt
in
das
shl
aam
fdivs
out
ffreep
std
cmp
xlat
mov
not
lret
int
incb
int3
repnz
shll
xor
cmp
int
repz
mov
mul
lds
lea
out
in
fdivl
ljmp
icebp
filds
mov
repnz
shll
xor
fiadds
fdivrp
ffreep
fninit
mov
std
mov
jmp
ljmp
aam
std
cli
stc
fnsetpm(287
lock
mov
mov
in
jmp
in
out
aam
repnz
clc
cmp
call
out
aad
aam
leave
ffree
out
into
xchg
int3
mov
in
cmc
aam
sar
adc
stc
or
fcmovne
stc
mov
sbb
repnz
cmc
call
xor
aad
in
repz
ret
ffreep
fiadds
out
mov
mov
ljmp
ljmp
ds
lret
sti
jmp
out
in
xchg
int
aad
in
cmp
shll
out
cmp
aam
into
cld
rcr
in
int
adcl
xor
fcomp
cmp
int3
fucom
cmp
loop
xlat
sti
test
repnz
rol
fdivr
fdivr
std
icebp
lret
int3
stc
fcmovnu
rol
lret
in
xchg
call
sti
out
cmp
lds
call
fsubr
xchg
lret
lret
in
shl
cmc
repz
cmc
jecxz
cld
vaddsubps
jmp
in
lret
loop
sti
fucomi
int
enter
enter
xor
lock
fprem1
loopne
ret
fld
jecxz
cmc
int
enter
div
ds
cmp
cmp
xchg
fcom
xlat
in
cli
mov
stc
rcl
vcvtdq2pd
xlat
xlat
jmp
imul
cmc
aas
into
roll
sti
std
jecxz
and
fsubrl
ljmp
fucomp
aaa
cmp
lret
mov
addl
jmp
in
cld
clc
sti
fdiv
neg
in
jmp
orb
iret
out
das
repz
leave
fsincos
jmp
repz
test
hlt
jmp
orl
cmc
repz
not
out
xor
cmc
int
fdivrl
cld
cmc
sti
shl
std
fdivr
xor
add
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
cld
in
aam
lret
std
lock
jmp
cmp
lock
vpmuludq
cli
sti
lds
enter
lock
xor
cmp
cmp
clc
cmc
out
xor
xlat
ret
jmp
mov
sub
ror
shlb
ror
fstpt
cs
dec
iret
repz
aas
fidivrl
mov
jmp
loope
xchg
jecxz
clc
in
enter
xor
sar
repz
fdivp
cld
cld
in
ret
loope
adc
ljmp
fdivl
rolb
dec
xchg
lock
shll
shl
xor
in
out
repnz
fildl
jmp
out
test
lret
not
aas
cld
enter
cmp
in
std
les
jecxz
loope
hlt
lret
jmp
cld
int3
iret
aam
sar
aas
in
cmp
popl
out
lock
in
lret
sti
hlt
imul
rcr
iret
rcl
shl
fcomp
rcl
fst
fisttps
xchg
lret
xor
enter
rcl
xor
sar
fmuls
iret
test
or
sub
iret
cmp
aaa
fmul
repnz
ret
xchg
fimuls
call
jmp
ror
repnz
rcl
xor
sar
shl
jecxz
in
out
icebp
rorl
into
fldz
ss
aam
cmp
hlt
in
sbb
clc
int3
loop
icebp
test
repnz
xor
enter
repz
hlt
lock
in
loop
fiaddl
fadds
xchg
in
xor
cmp
cmp
leave
ds
call
int
sti
nop
cli
fucom
in
divl
xor
cli
into
xor
in
std
fnstsw
ret
out
stc
enter
icebp
call
xor
xor
aam
cmp
ror
hlt
aam
aad
in
clc
out
out
mov
test
repz
cmp
xor
xor
aas
fnsave
out
fucomi
rcr
in
fdivr
incb
mov
mov
ljmp
cmc
xor
cmp
repz
cld
ljmp
cmp
and
lret
fsubrp
xor
lret
xor
hlt
incb
hlt
incb
in
shr
mov
lret
xor
xor
std
icebp
lret
ss
in
xlat
loope
cli
rcl
in
aam
loopne
sar
mov
icebp
test
jmp
lret
lock
fstp
sar
cmp
roll
in
test
cli
orl
divb
repz
out
fmul
in
repz
rol
aam
imul
fmull
ljmp
clc
in
xor
jecxz
aas
out
cld
jmp
clc
call
fisttpl
lret
lret
aad
in
cmp
loopne
ds
faddp
xlat
div
test
icebp
repz
out
in
cs
idivl
cmp
in
cmp
not
repnz
roll
loopne
loope
push
xor
sarb
aam
cmp
fiaddl
loop
adcl
rcr
fdiv
ljmp
repz
ret
loope
in
lret
loopne
fcom
cmc
cli
fdivrl
xlat
icebp
repnz
test
loope
in
shl
out
mov
aas
cmp
repnz
clc
fsub
stc
filds
les
rcr
hlt
out
ror
enter
sti
aas
loope
out
ds
lds
into
out
jmp
repz
clc
fdiv
aas
cmp
aam
testl
repz
aad
shr
icebp
cmp
fucomi
cmp
cmp
aad
into
ret
leave
cmp
std
sti
in
nop
lret
fsubp
hlt
cli
iret
into
out
cmp
cli
rcr
loopne
ds
fxch
cmc
hlt
enter
xchg
repz
ljmp
int
div
iret
std
stc
repnz
filds
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
push
mov
jl
add
fsubrp
fsubr
loopne
out
rcr
vpsubq
loope
jmp
sbb
aam
jmp
mov
in
repz
cs
cmp
fadd
in
adc
xchg
jmp
xchg
loopne
div
cmc
leave
repz
sti
cmp
cli
out
jmp
iret
icebp
hlt
out
out
ret
lret
idiv
xor
sar
std
ds
repnz
jmp
lret
loopne
enter
cmp
out
fcmove
repz
mul
hlt
fcmovb
jmp
loope
xchg
int3
test
in
in
iret
cmp
in
stc
xor
lret
fcmovu
iret
test
lret
xchg
dec
enter
in
rcl
xor
in
into
fyl2xp1
cld
int
cmp
ret
fildl
int
into
call
loop
mul
rcr
cmp
and
fiaddl
mov
fcmovbe
std
mov
aam
xor
clc
jmp
ds
aam
lock
fistpll
in
or
call
mul
in
lock
std
xor
out
hlt
hlt
repnz
in
in
jmp
incl
xchg
xor
lret
xlat
jmp
or
cmp
sbb
out
in
test
mov
clc
xor
not
out
lret
sar
aas
ss
cmp
hlt
mov
cli
shl
popl
lret
shl
repz
fistpll
loop
testb
cli
mov
mov
test
jmp
in
mul
div
fcmovne
cli
add
out
sub
xchg
ret
mov
repnz
in
cmp
loopne
stc
ror
cmp
fucom
into
loope
lret
fildll
loop
fcomi
shl
shl
cli
ljmp
aad
rol
test
sti
lret
shl
not
out
enter
xor
aad
clc
repnz
hlt
filds
cmp
out
xor
cmp
aam
lret
cmp
rol
hlt
cld
test
fldl
fildl
cmc
in
int
repz
in
call
int
sub
shl
fcmovne
leave
leave
fmulp
sub
mov
in
xor
rcr
cmp
aam
rcr
dec
clc
aad
out
xchg
iret
xchg
ss
aam
faddp
cmc
testb
or
mov
in
rol
in
hlt
xor
neg
lock
int3
xchg
call
adc
in
orb
into
fcomi
in
enter
fidivrl
repz
sarb
imul
sbb
jecxz
out
xchg
out
and
iret
lret
repz
call
cmp
cli
test
fst
xchg
loopne
cld
sub
jecxz
ror
stc
sarb
jmp
out
int
sar
loop
test
faddp
xor
fmull
ss
les
shl
ret
ret
cmp
jmp
cli
loop
int3
in
hlt
hlt
shl
shr
cmc
enter
loope
jecxz
cmp
repnz
loop
test
out
cmc
call
int
aaa
int3
aam
loope
test
aam
fcmovnbe
mov
test
test
int
jmp
sarb
xor
stc
cmc
into
iret
cmp
jecxz
addl
out
repnz
xor
int
in
and
in
xchg
cmp
fimuls
leave
xor
rcr
iret
cmc
cmp
aad
int3
in
stc
mov
repz
in
mov
rorb
xor
into
cld
ss
int3
int3
repnz
xor
loope
test
xchg
loopne
jmp
idiv
out
aaa
cmp
lret
ds
in
out
lock
lret
iret
in
fsubrl
stc
test
jmp
lock
iret
imul
cmp
hlt
addb
faddp
jecxz
leave
fcmovne
in
loop
loop
cmc
cmc
enter
cmp
xor
mov
jmp
lret
aam
fstp
fisubrl
push
int3
mov
dec
jl
flds
jl
shl
sar
adc
mov
cld
nop
sub
ljmp
fsubrp
ljmp
aad
enter
popl
rcl
xlat
xor
xor
into
fucomip
jmp
call
sarl
aad
jecxz
enter
mov
in
call
cli
jmp
clc
cmp
int3
adc
addl
aam
stc
mov
fildl
loop
xor
sarb
cmp
jecxz
aas
cli
aad
in
fcompp
cmc
fucomip
int3
enter
int3
jmp
xor
out
int
lret
ret
cmp
test
xlat
jecxz
repz
xlat
in
ficoml
hlt
loopne
jmp
out
lret
enter
jecxz
mov
rcr
cld
xlat
sub
int
in
orb
lret
jmp
lret
cli
cmp
sbb
loopne
addb
xor
imulb
in
enter
adc
aas
cli
sar
fucompp
jmp
cld
sub
adc
in
mov
icebp
int
repz
idiv
repnz
in
cld
fcomi
sti
xchg
in
xchg
enter
xlat
ret
int3
aad
cmc
loope
shl
push
xchg
cmc
in
mov
enter
xor
ss
int
xor
sti
cmp
loop
ret
and
xlat
test
repz
int3
iret
xor
sti
repz
loopne
rcl
test
mov
out
std
out
repnz
in
call
into
push
fsubr
cmp
aas
vpaddw
out
nop
leave
xchg
iret
repz
shlb
leave
icebp
iret
cmp
out
into
rcr
repz
hlt
ret
lock
add
jmp
loop
mov
xchg
out
repnz
xor
jmp
rcr
fdivr
xchg
fxch
out
cld
xchg
out
repnz
aad
rol
ss
lock
mul
loopne
ret
stc
mov
clc
in
call
lret
ljmp
call
rcr
cmp
fdivrl
ljmp
fst
nop
out
ds
sarl
iret
jecxz
aas
cld
not
stc
sub
jecxz
call
ret
sub
lret
lock
loopne
sbb
loopne
xlat
cli
orb
ret
ret
fcom
cmp
fdiv
xor
ret
in
fsub
in
in
pause
decb
stc
lret
loope
out
ret
rcr
mov
enter
leave
icebp
in
iret
icebp
test
out
fldt
cmp
call
clc
hlt
sti
sti
rol
stc
xchg
fsubp
in
ljmp
sar
into
cmp
repnz
cli
xor
xlat
call
lret
lock
ds
fidivl
jmp
ror
out
xlat
incl
call
jmp
aas
cmp
in
loope
ss
sti
sar
fdiv
in
in
in
loope
ljmp
dec
cmp
push
test
test
mov
test
filds
repz
out
lret
iret
shl
lret
in
leave
icebp
mov
int3
fisttpll
out
int3
aas
out
fsubrp
fstp
ret
add
lret
fiadds
out
xor
jmp
mul
call
cmp
ret
test
jmp
lret
mov
shl
mov
out
lock
xor
cld
xlat
shr
cld
ror
roll
sti
addb
in
xor
cmc
cs
hlt
xor
rcl
idivl
cld
in
loop
loope
xchg
loop
test
hlt
aad
loope
out
ds
loopne
sti
jmp
and
xchg
in
into
repz
ss
in
out
cli
cld
enter
sti
fstp
cmp
cld
testb
xchg
out
aaa
rol
icebp
icebp
cmp
xor
sarb
stc
test
mov
loop
xchg
iret
mov
lret
in
out
rol
repnz
iret
fnstenv
fcmovnbe
stc
loope
fmull
add
or
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
popa
test
push
add
cld
loopne
hlt
mov
out
vpsraw
in
xchg
jecxz
rcr
out
sti
enter
repnz
int
lret
icebp
int
xlat
imul
xor
xor
sarl
int
int3
clc
int3
vpaddusw
out
sti
stc
adc
cld
in
loope
mov
hlt
ljmp
aad
idivb
repnz
fldl
cmp
ljmp
int
aam
int
icebp
xlat
fnstsw
loopne
cli
fadds
and
mov
in
cld
sub
lret
std
sar
ljmp
in
xchg
jecxz
fcmovne
into
shl
lock
call
fdivrs
xor
aad
cli
into
sbb
stc
fst
xchg
sti
cli
call
aaa
xor
cld
fcos
lret
repz
sbb
or
mov
loope
in
lock
cmc
leave
shl
shl
cmp
aad
shl
fiadds
fsub
loop
cld
shr
cs
in
cld
fiadds
fnstcw
out
loop
out
out
in
or
loop
mov
icebp
out
lret
cmp
cmp
fldl
ljmp
xchg
in
ss
cmp
ljmp
ret
repnz
fcmovnb
in
in
loop
lret
mov
shl
not
lret
fdivrl
in
xchg
xchg
hlt
loope
cmp
lock
xor
lock
lock
imul
repnz
rol
rol
xor
out
cli
loope
repnz
out
sarb
shl
loope
stc
loope
cmp
xchg
fcmovnu
sub
call
fptan
fnop
fcomip
loope
test
shl
shl
enter
cmp
lea
in
cmp
xor
into
cmp
jecxz
repnz
hlt
cmp
jmp
mov
sub
lret
jmp
in
out
std
roll
shl
ret
loopne
mov
mov
lret
shr
out
clc
out
fmul
icebp
xor
imul
out
clc
std
std
loope
cld
in
incb
shl
in
xor
xor
stc
hlt
iret
ljmp
mov
popl
shl
ret
rol
xor
call
int
cmp
into
stc
fdivp
adc
aam
mov
loop
in
rol
ljmp
xor
fld
out
ret
ret
cmc
stc
vpsrad
int
fimull
cs
lret
cmp
into
stc
in
dec
std
aad
std
test
loop
out
in
in
cmc
jmp
xor
ror
repnz
fdivs
in
cmp
lret
xchg
fst
clc
xchg
out
xchg
addl
repz
xor
aaa
hlt
fstpt
ffreep
cmp
cld
in
clc
cli
enter
cmc
loope
in
xlat
rcr
repnz
std
out
loopne
cmp
hlt
enter
loopne
stc
call
out
xor
shr
xor
fsincos
cld
ror
aad
aad
fldl
nop
in
mov
icebp
rol
cmp
ljmp
test
ror
enter
shl
mov
shl
icebp
lret
xor
aad
xor
ret
test
aas
cli
loop
fldl
jmp
jmp
sti
cmp
fcmovnb
cmp
ret
clc
xlat
in
loope
iret
in
incb
ljmp
shlb
aas
in
shr
into
loope
jmp
std
inc
test
cld
ror
cmc
xchg
hlt
ret
in
aam
cmc
lret
jecxz
fdivrp
fadd
aam
repnz
sti
fucomp
cli
lret
in
shl
xor
cmc
fcmovnu
int3
in
faddl
fcom
jecxz
leave
enter
test
out
int
in
not
aam
das
cli
int
lret
cmc
sti
rol
ret
addl
mov
out
das
neg
ljmp
test
rolb
mov
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
dec
mov
jl
lret
jl
out
mov
out
sub
shl
xlat
fmul
neg
fistpll
incl
rcl
cmc
in
ret
mov
test
loop
xor
xor
enter
out
ss
in
cli
rcr
std
xchg
jecxz
mov
leave
in
loopne
in
ret
out
not
stc
into
cmp
repz
rol
mov
faddl
lret
std
hlt
sub
xbegin
int
rolb
cmp
frstpm(287
mov
sub
out
fcomp
cld
iret
jecxz
icebp
xor
aaa
mul
cmc
cld
aam
shr
imul
shl
ds
int
in
repz
xchg
call
sti
cmp
repz
sti
cld
lock
out
sbb
fxch
sti
xchg
orl
jmp
test
hlt
aad
in
ror
leave
out
jmp
icebp
ret
hlt
cmc
sub
rcl
stc
loop
fnstcw
lret
ret
not
fstp
jmp
rol
add
fimuls
in
lret
icebp
sarb
repz
loope
shr
repz
jmp
fcomp
dec
test
nop
in
cld
rol
repz
enter
icebp
cli
ljmp
leave
jmp
mov
jmp
jmp
jecxz
rcl
das
xor
loope
rcr
iret
sbb
add
out
cli
out
mov
mov
out
jmp
loope
aaa
in
leave
lret
clc
lret
cmp
faddp
jecxz
in
int
xor
in
loop
loop
int3
xor
test
cli
aam
xlat
stc
in
popl
adc
into
lock
cmp
cld
aaa
in
stc
repnz
ret
stc
loope
loopne
fiadds
das
hlt
lret
jmp
divb
fnstcw
cmp
testl
out
fldlg2
ljmp
sti
loop
aam
hlt
out
aaa
clc
cmp
int3
sbb
repnz
ret
int
fldpi
mov
fcmovu
xchg
fsub
into
sarb
xor
cmp
fadds
leave
loopne
sti
jecxz
test
lea
out
lret
aas
aam
lret
int
out
std
aam
test
mov
int3
int3
out
ljmp
hlt
fcomip
fcmovb
stc
test
rcr
fstpt
lret
aad
out
add
xchg
fsub
mov
xor
sub
out
ljmp
aam
out
into
loopne
loop
call
xchg
in
loopne
lock
out
out
sarl
loop
sti
shl
std
ftst
and
mov
xor
cmp
call
fcmovu
lock
loope
in
jecxz
xor
xchg
fdiv
lret
fucomp
xor
jecxz
hlt
stc
xlat
fcomip
in
not
cld
orl
roll
xor
fptan
xor
cmp
rcr
cld
repz
cli
ret
loope
mov
hlt
mov
hlt
jmp
ss
rcl
iret
push
loope
stc
in
rol
ror
not
out
xor
out
shl
fcomip
in
lock
in
in
push
cmc
xor
out
loope
iret
ret
in
cmp
cmp
clc
cmp
test
addb
sbb
out
sub
aad
hlt
enter
fucompp
cmp
div
xor
xchg
stc
loopne
cld
test
icebp
sub
in
mov
into
lret
rcr
jmp
test
rcr
fildl
div
iret
cli
dec
in
loope
vpsadbw
iret
cmp
sti
fcomip
fucomip
lds
out
out
clc
fcomp
ret
out
out
lret
rcl
out
lret
fnstenv
lock
int
cmp
aad
sar
jecxz
xchg
into
sti
jmp
shll
repz
xor
int
rcr
int
cmp
fld
cli
cli
loop
idiv
xlat
cld
lret
out
out
jecxz
vprotb
xor
cmp
icebp
cmp
jecxz
rol
xlat
shl
stc
fdivr
lret
loop
in
rol
sar
das
xor
out
imul
fsin
xchg
out
cmp
call
or
out
in
sub
inc
lock
dec
or
push
xor
mov
add
jmp
jmp
aad
shlb
insl
fcmove
test
jl
add
clc
leave
std
test
rcl
out
ljmp
jmp
call
cmp
cmp
rcl
mov
jmp
in
icebp
xchg
call
iret
shr
aam
test
jecxz
xchg
fldpi
out
dec
call
imull
in
divl
cmp
cli
cmp
loop
jmp
jmp
xchg
jmp
hlt
xor
jmp
lock
cmp
imul
std
mov
or
xchg
cmc
aaa
fyl2x
cmp
aaa
ss
cmp
rcr
cmp
neg
or
fucomip
rcl
in
rcl
test
fmul
enter
out
aad
cmp
clc
rol
lea
shl
repnz
in
aaa
fxch
neg
cli
loope
test
repz
aam
sti
mov
enter
xchg
jmp
iret
xor
lock
iret
std
in
cmp
loope
ljmp
ffree
mov
in
mov
fmuls
stc
xor
out
out
repnz
int3
lock
cld
stc
fucomip
mov
sub
lret
cmp
enter
inc
xchg
std
loop
jmp
in
ffreep
repz
int3
sub
loope
lock
and
fucompp
enter
jmp
ss
fsubr
cmp
cmp
sbb
cmp
leave
sar
cld
loop
addb
aaa
in
lock
out
ljmp
sti
ret
repnz
fsubrp
call
xchg
loopne
xor
ret
xor
lret
repz
div
repnz
ret
loopne
int3
fisttpl
shr
ror
ret
lret
shr
push
sar
add
mov
mov
jecxz
out
xchg
xchg
int3
lret
into
cli
ljmp
std
cmc
aad
loop
sti
cmp
leave
jmp
loop
out
xchg
shr
clc
idiv
xor
neg
fucomip
cmc
cmp
fildl
iret
ljmp
ret
fldcw
lret
iret
repnz
or
clc
lret
fucomi
cld
in
repz
std
lock
out
in
fcmovbe
int
shlb
shll
hlt
cmp
repz
hlt
cld
lret
mov
loop
adcb
enter
cmp
stc
fptan
cmp
in
aam
addl
mov
lret
vcmppd
fcmove
aad
fcmovu
fucomi
aaa
sti
ds
mul
fildl
mov
xchg
repz
repz
lret
out
ret
addb
icebp
int
mov
cs
in
cld
hlt
jmp
test
cli
xlat
les
icebp
mov
addl
cmp
push
xlat
out
fcmovne
xor
leave
cmp
fisttpl
ds
cmp
call
loopne
in
cmp
leave
cli
in
shl
mov
xor
neg
aaa
cmp
cld
rcl
jmp
loopne
cmc
fdivr
mov
mov
cmc
out
cs
xlat
ss
icebp
cmc
into
hlt
shl
fld
cmp
out
jecxz
icebp
out
rcl
ss
repnz
ss
lock
hlt
in
fxch
cmp
call
in
xchg
lret
xor
aad
cld
hlt
cmc
xlat
aam
rol
stc
les
mov
std
fiaddl
lret
rcr
cli
lock
test
std
filds
lds
lock
out
fsubr
cmp
hlt
or
ret
cmp
ret
imul
ficoml
loopne
bnd
cmp
aaa
xlat
int3
std
hlt
aas
aas
cmp
ror
enter
loop
out
shrl
ss
in
in
into
dec
shl
int3
test
sbb
clc
xchg
lea
in
fidivl
sarb
ds
aad
jmp
push
add
add
rol
aad
aad
fcmovne
scas
push
mov
cld
cmpsl
pusha
mov
lret
jl
addb
mov
cli
fidivrl
out
fsubr
loope
sarb
clc
clc
fsubr
test
loop
xchg
int
repnz
hlt
iret
rcr
clc
fsub
aas
in
cld
xchg
mov
loope
or
lock
rcl
ret
cmp
fcmovu
in
lret
fiaddl
hlt
in
in
mov
test
xlat
test
icebp
cmp
idiv
incb
cli
cld
xor
sar
lock
in
cmp
jecxz
in
icebp
repnz
sti
test
enter
call
call
fmul
sarl
clc
xor
add
shl
lea
test
fdivs
fucomi
fstp
faddl
aad
std
in
mov
fadds
jmp
repnz
aad
into
int3
cmc
cmc
sti
fdiv
ret
into
jmp
cli
ljmp
out
ror
jmp
idivl
xor
rcl
repnz
mov
sar
in
lea
xor
in
aad
in
int
in
cmp
repnz
iret
lret
shl
ljmp
out
loop
out
cli
jmp
rcl
adc
in
cld
test
std
xchg
out
xor
rcl
das
fdivr
fucomi
jecxz
sub
lds
test
loope
cld
out
in
lret
iret
stc
bnd
cmp
test
fst
stc
out
into
hlt
mul
repnz
repnz
jmp
sti
fcomp
sbb
loope
xlat
jmp
testl
jecxz
out
fcmove
cld
out
cmpb
test
sbb
mov
in
lret
mov
in
repnz
ljmp
rcl
fdiv
cmp
mov
std
xchg
sar
int
call
int
jmp
in
out
in
or
test
addl
xchg
loope
repz
out
cmp
repnz
hlt
rol
aaa
roll
fcmovnbe
fsub
xchg
mov
or
cmc
enter
out
enter
ret
aas
cmp
shr
addb
mov
in
sub
into
leave
into
fcmove
xlat
f2xm1
test
jecxz
jecxz
hlt
xchg
mov
test
fsubr
ljmp
repnz
int
aaa
cmp
repnz
aas
std
aad
out
push
orb
loope
mov
out
lret
shr
hlt
std
icebp
hlt
loope
clc
fstp
leave
xchg
sub
nop
out
mul
lret
cmp
xor
xor
cmp
fstpt
jmp
xlat
xlat
cmp
fneni(8087
int
int3
or
ljmp
int
out
ror
imul
cmc
sti
ret
test
in
jecxz
lret
std
repz
int
loop
jmp
int
call
sti
fnstcw
cmp
shr
xchg
xchg
das
not
fyl2xp1
fcmovnu
repz
int3
decb
xchg
xchg
leave
fxch
in
rcr
aam
leave
xor
not
in
std
out
fiaddl
in
int3
ljmp
ljmp
repz
loope
test
in
std
cmc
out
lret
jmp
rcr
cmp
sarb
loop
aam
aas
cli
push
jmp
adc
shr
into
repz
rcl
xor
test
int
out
idiv
icebp
shl
cli
test
call
out
jmp
lock
cld
ss
ds
out
aad
call
in
nop
fneni(8087
repz
int3
in
lret
cli
icebp
cmp
out
xor
cmc
repz
stc
mov
mul
in
call
xorl
jmp
fst
int
rolb
jecxz
xchg
lret
int
icebp
sub
int
xor
xor
into
test
rolb
icebp
call
jmp
out
repnz
ljmp
inc
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
jle
lahf
and
jl
add
out
div
inc
filds
out
cld
mov
mov
rolb
out
jmp
call
rcr
into
cmp
into
out
lret
repnz
hlt
sub
icebp
lret
clc
hlt
fdivp
or
and
out
xchg
in
lock
jecxz
leave
xor
sar
repz
ljmp
loopne
std
std
out
out
or
decl
idiv
sti
lret
in
clc
hlt
cld
cli
cmp
clc
movb
test
mov
icebp
in
jmp
in
int3
cld
shl
jmp
loopne
xchg
sbb
mov
sbb
shr
lock
lret
call
into
fidivs
cmc
fucomp
mov
fcmovbe
hlt
movl
in
xor
cmp
ljmp
lock
cmp
ffreep
leave
fcmovnbe
adcb
leave
xor
fsubr
cmp
cmp
cmp
fcmovnbe
out
sbb
loopne
enter
shll
out
cmp
rcr
cmc
cmp
in
out
xlat
clc
cmc
cmp
in
xchg
ret
in
neg
xlat
ljmp
cld
jmp
hlt
enter
enter
cmc
divb
sub
loop
lock
into
lret
clc
xchg
lock
ret
jmp
orl
das
ss
cmp
shlb
fsub
fcmovne
adc
loop
fprem
mov
stc
fisttpl
mov
icebp
xor
aad
rcl
hlt
cmp
test
repnz
leave
and
out
repnz
aas
fidivs
xor
xor
loope
cmc
in
into
jecxz
cld
cld
les
repz
loopne
ret
lret
sti
lds
sti
ljmp
rcl
repnz
in
nop
mov
lret
loope
rol
cmp
out
call
cmc
cmp
mov
loope
int
xchg
xchg
loope
int
faddp
in
iret
fcmovnbe
iret
fstpt
jecxz
test
fmuls
rcl
jmp
divl
repz
xor
div
aad
out
ds
les
call
out
xlat
shl
in
cmp
into
repnz
out
jecxz
cmp
jmp
xchg
fcmovnbe
int
ret
sub
shr
sti
aad
sbb
std
shr
out
xchg
lock
int3
imul
fcmovne
jmp
xlat
sar
cld
cmp
cli
in
jmp
orb
add
out
out
cmp
addl
movl
out
mov
in
sub
into
cld
cli
jmp
int3
hlt
cld
in
cmp
rorb
in
orl
in
cmp
ds
ljmp
roll
repnz
repnz
out
lock
cmp
fcomp
test
loope
stc
xlat
neg
xchg
into
mov
repz
xor
divb
rcl
fnstsw
or
repnz
out
stc
vcvtdq2pd
hlt
test
sub
rcl
lret
shl
sbb
hlt
icebp
leave
loopne
ret
aam
leave
xchg
mov
hlt
rol
in
in
call
lock
int3
in
rcr
vpminub
mov
loop
clc
enter
ss
sti
ret
ffreep
loop
enter
sti
mov
sti
out
in
repz
out
loopne,pt
fcomi
cli
loopne
loope
and
nop
cli
out
sub
into
out
out
cld
loopne
in
and
out
xchg
loope
hlt
call
loopne
fsub
xor
rcr
call
fiaddl
loope
call
cld
adc
in
cmc
rcl
xor
cli
dec
cmp
cmp
rorl
loop
sub
stc
xlat
jecxz
into
in
call
cmp
jecxz
cld
loope
rolb
mov
add
jmp
ret
int
lret
sub
pop
fsubr
fs
lret
jl
mov
xchg
test
lret
call
sub
in
sti
ljmp
icebp
int
out
jecxz
aad
jmp
mov
mov
hlt
out
ret
icebp
cld
idiv
sti
cmc
out
sti
ror
add
fcmovnu
cmp
in
int3
out
xchg
test
ret
clc
jecxz
repnz
hlt
repz
fdivp
lock
fdivp
cli
in
dec
xchg
jmp
fcmovu
rorl
ljmp
loope
cmc
aam
sar
out
lret
sti
fcmovnu
lret
out
jmp
xor
idiv
sar
cmp
in
into
testl
test
fcomip
lea
sti
ret
hlt
fcmove
cmp
lock
aam
std
test
int
jecxz
decb
in
aam
out
stc
cmp
std
lret
mov
out
test
jmp
repz
xor
fidivl
cmp
leave
testl
rol
clc
enter
xchg
xchg
xor
shl
into
aad
jmp
out
stc
cmc
shl
rorb
in
in
fists
cmc
sarl
bnd
f2xm1
std
lock
cmc
fcomp
faddp
in
loopne
ljmp
cmc
ret
jmp
rcl
sarb
addb
in
fiaddl
loop
out
xchg
sub
out
stc
ljmp
hlt
cmc
jmp
loopne
aam
loope
loop
enter
loope
loopne
clc
stc
in
ss
iret
repz
leave
hlt
mul
jmp
in
enter
icebp
lret
xor
sti
loope
cli
xlat
repz
jecxz
clc
mov
mov
in
cmp
sar
lret
shll
xor
aas
ret
cmp
loopne
call
out
loopne
out
xor
aad
sarb
int
sbb
ds
out
enter
sti
jecxz
adc
in
ret
aam
fidivl
ljmp
fildl
fucom
shl
fisttpll
jmp
out
ror
in
cmp
enter
aad
test
xchg
stc
fmulp
nop
shl
loopne
leave
repz
clc
cmc
shll
ljmp
out
fsub
shl
cli
loop
test
in
out
xor
in
mov
xor
ljmp
roll
fucomip
ljmp
sub
ss
into
icebp
iret
fdecstp
xchg
idiv
in
ret
xchg
and
in
out
xor
fsub
in
aas
loopne
int
into
repz
aad
idiv
in
ret
xchg
and
mov
rcl
stc
fdivs
sti
ror
cmp
out
cmc
stc
ljmp
in
cli
out
xor
repz
xor
cmp
call
lock
out
fmulp
fdivr
mov
xchg
out
repnz
fsubr
rcr
aad
xor
in
cmc
test
lret
stc
std
sti
jmp
into
out
aam
test
rcr
jmp
in
into
ljmp
cli
rolb
out
out
into
sub
xor
shl
sarl
ss
repz
cld
ret
xlat
hlt
in
std
in
out
lock
lret
les
test
jmp
and
jmp
addb
in
in
shlb
lds
jmp
leave
cmp
jmp
fiaddl
std
jmp
sar
mov
mov
mov
repnz
aad
repz
enter
sub
incb
aad
cmp
clc
repnz
mov
shl
int
aad
int3
stc
cmp
ds
testl
xchg
jecxz
imul
fmul
xor
cmp
cld
fildl
mov
xchg
icebp
ss
xor
cmp
rcr
inc
lret
ror
leave
fcomi
leave
lret
call
loop
jecxz
out
ss
fld
cld
iret
sbb
sti
stc
mov
sti
leave
in
xchg
out
xchg
movzwl
mov
mov
jmp
ds
int
int
int
mov
xor
insb
xchg
mov
jl
add
jmp
mov
fidivrl
out
cmp
testl
jecxz
aad
int
cmp
cli
aam
repz
ss
idiv
cli
fmul
loopne
aam
mov
clc
ljmp
xor
in
call
std
cmp
test
cmp
iret
sti
mov
out
call
xor
fsub
enter
idivl
test
cli
repz
out
stc
out
adc
rol
int
xlat
lock
mul
neg
in
in
repnz
enter
mov
iret
lret
ss
shl
lret
icebp
aam
fiadds
fst
in
cld
jmp
shl
ret
leave
aad
aaa
lret
sar
out
cmp
cmc
and
incl
imul
sbb
ljmp
jmp
ds
cmp
mov
addl
rclb
ljmp
out
cmc
in
test
jecxz
stc
add
int
in
lret
int3
shl
call
inc
adc
clc
sarb
cmp
testb
ror
xchg
in
shl
cmp
in
repz
leave
fcomi
sti
fdivrp
sti
and
test
or
clc
in
jmp
shr
jecxz
xor
out
in
rolb
loopne
icebp
out
loop
or
enter
fsubr
xchg
in
int
das
clc
jmp
out
rol
xchg
jmp
lret
icebp
fiadds
sti
xor
in
fcomip
cmp
rcl
jmp
fsub
int
out
mov
rol
in
in
cmp
clc
loop
cmp
out
addl
int3
mov
fdivrp
cld
lret
not
rcl
out
ljmp
stc
aas
test
mov
icebp
and
loopne
loop
shl
sar
int3
aas
lret
filds
mov
lret
out
nop
xor
in
int
out
aam
leave
rcl
rcl
shr
aad
hlt
testb
cli
jecxz
lret
loop
jecxz
lret
in
repnz
into
shl
std
rol
les
les
in
call
out
xor
hlt
stc
fld
enter
std
rcl
iret
roll
test
jmp
clc
call
xchg
das
imul
out
lret
rcl
in
ss
repz
addl
or
sti
ret
std
out
loopne
in
neg
out
aaa
imul
iret
ror
shl
in
call
lret
lret
out
ret
clc
jmp
cli
fidivrs
in
hlt
iret
cli
rol
xlat
stc
sti
loope
fiaddl
mov
in
aam
ljmp
out
repnz
fadd
sar
ffreep
fisttpl
xchg
sar
jecxz
cmc
clc
sti
fucomi
xlat
out
xor
lock
loop
test
out
loope
cld
out
ljmp
cmp
neg
cmp
xchg
aad
xchg
xchg
roll
out
repz
sti
cmp
fnstsw
loop
rol
lret
mov
cli
call
loopne
loop
shll
cld
int3
ror
int
fidivrl
hlt
icebp
ds
fldln2
fdivr
out
in
loope
xor
loopne
jmp
ds
cld
test
shl
testl
iret
xor
sub
fcmovne
ror
sti
cmp
into
ljmp
rcr
loop
int3
mov
lock
enter
lret
cmp
iret
hlt
aam
and
addl
bnd
icebp
repz
sbb
ret
jecxz
test
clc
jmp
int3
lret
lds
fcom
lret
iret
ljmp
ds
std
cli
int
sti
loope
loopne
in
in
xor
test
ds
repz
rolb
in
xchg
int
repnz
int3
xor
stc
shl
fst
or
mov
nop
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
push
fnstenv
mov
lret
jl
in
icebp
out
fsubp
out
enter
xchg
icebp
xchg
out
repz
iret
lret
xlat
into
div
repz
jecxz
aad
repz
out
loopne
in
ljmp
rcl
sub
rcr
adc
xlat
adc
cmc
aad
ljmp
mov
loop
lret
loop
out
loope
in
fdivr
sti
cmp
ffreep
mov
cld
out
mov
int3
test
shl
in
sar
lock
aas
cli
aad
cmp
loop
clc
out
int
in
enter
iret
ss
adc
icebp
cmp
shl
loope
test
hlt
in
fildll
jmp
lock
out
filds
leave
cli
sub
out
enter
out
ljmp
aas
aas
addl
out
jmp
leave
int3
xchg
in
xor
ss
cmp
shl
sar
cmp
aas
fdiv
jmp
fdiv
decb
ror
lock
stc
in
int3
addl
repnz
xchg
jecxz
cmc
xor
fmul
repz
sub
fcom
xor
notb
int
imulb
int3
in
ret
sarb
flds
aad
rol
orl
ret
mov
in
cli
lret
aas
int
test
into
sti
fsub
mov
cli
mov
int
icebp
out
nop
out
xlat
lret
std
enter
sarl
int3
fadd
rcl
jmp
jecxz
mov
enter
stc
jmp
lret
fcomip
fdiv
hlt
rolb
lret
fisttpl
xchg
int3
cmc
xchg
in
jecxz
cmp
leave
xor
in
ror
xchg
repnz
enter
nop
shl
out
loopne
icebp
rol
xlat
sti
lock
loopne
adc
test
fiadds
jmp
mov
fildll
repnz
into
aam
hlt
icebp
ljmp
std
xchg
test
fmulp
in
repz
ss
rcl
aaa
out
aaa
repz
cmc
iret
ss
shl
fcomip
jecxz
loopne
mov
repnz
xlat
out
ror
jmp
cmp
repz
clc
filds
xlat
fmull
mov
jecxz
ljmp
fdecstp
fdiv
into
lock
add
jmp
int3
shl
ror
jmp
cli
lret
shr
fcmovnbe
cmp
shl
mov
mov
xchg
cmc
into
in
cs
repz
lock
fcmovnbe
add
lret
jecxz
mov
mov
xor
ror
repz
aaa
cli
std
fcomip
icebp
cmc
in
out
xchg
in
fsub
test
in
int3
clc
lret
cmp
fidivrs
ret
mov
jecxz
loope
loopne
fucomp
cmc
xchg
shl
aad
hlt
stc
std
cld
sti
hlt
sarb
in
lret
sbb
jmp
mov
adc
lret
lret
fstpt
rcl
int3
test
loop
rol
mov
fildl
repz
shlb
stc
frndint
int
rolb
cmp
in
mul
cmp
xor
xor
lock
ror
sar
sar
stc
fstp
mov
int
into
fcomip
jmp
int3
xor
cmp
lret
cmpl
jecxz
fsub
cmc
test
jmp
loope
leave
shl
fcmovnu
ss
stc
aam
incb
cld
in
loopne
int3
mov
xchg
cld
mov
icebp
jmp
sar
stc
into
repz
ret
jmp
test
inc
mov
out
in
rcl
lret
std
testl
or
mov
mov
rol
out
rcl
xor
std
icebp
cmp
rolb
lock
lret
loop
test
fldz
cli
cmp
cmp
test
repz
fsubr
decb
inc
hlt
jmp
aad
enter
fsts
hlt
fstl
fdivs
jl
add
int
loopne
out
sub
stc
aad
jmp
jecxz
cli
ret
xchg
mul
fcmove
xchg
int3
aam
in
aaa
ret
das
fsubr
hlt
fcmovu
sarl
icebp
std
aad
or
and
in
loopne
in
out
int
xor
xor
out
frndint
xor
in
jmp
loop
fcomp
xor
fidivs
repz
aaa
aaa
sti
cmp
hlt
int3
loopne
fld
iret
ret
cmp
loopne
test
mov
loopne
sarb
iret
xlat
cmp
in
std
fdivrp
rcr
test
aad
fsubr
mov
out
loope
jecxz
int3
into
fmul
shr
std
fst
sar
aad
repnz
fmul
sti
fucomi
into
loope
ror
out
ret
sti
rcr
std
ret
aas
stc
sti
hlt
filds
lret
in
add
out
push
stc
cmp
stc
ret
repz
aad
mov
out
leave
in
ds
ret
in
in
lret
aaa
repz
test
cld
fnstcw
fcom
or
aad
iret
cmc
aam
fadd
xlat
in
aaa
leave
repnz
xlat
jmp
add
xchg
sti
loope
mov
xor
sti
ljmp
cmp
ret
test
loop
std
lret
test
lret
int3
out
clc
cmp
fucomp
cmp
ss
repz
sar
out
xchg
fcmovne
xchg
xchg
mov
xor
enter
fistpll
iret
sti
icebp
aaa
xlat
idivb
std
cli
out
int3
out
jmp
sub
lret
repz
in
xlat
ds
shr
int
xlat
not
test
cmc
enter
in
rol
mov
shl
fsubr
xor
xor
cmp
lret
loopne
jmp
in
call
xchg
jmp
fidivl
call
cli
icebp
mul
icebp
ret
vpaddsb
imul
enter
loop
ljmp
lret
jmp
cmp
ffreep
into
adc
std
fisttps
shl
shl
out
icebp
fistpll
in
hlt
cmp
fdivp
call
iret
enter
ret
out
ss
aaa
cmp
rcr
shl
div
loope
aam
iret
enter
loopne
aad
repnz
cmc
xlat
cmp
shl
stc
test
aam
fadd
stc
jmp
fimull
mov
fsubp
cs
sti
cmp
icebp
fsub
lock
jecxz
repz
mul
leave
call
out
cli
mov
in
xor
cmc
repz
cli
ffreep
ret
mov
mov
ljmp
hlt
out
out
cmp
sbb
roll
sub
lock
lret
ret
hlt
ss
shl
ret
fcmovbe
repz
bnd
cmp
fsubr
loop
lock
icebp
enter
fmulp
int3
ret
ds
repz
hlt
xchg
jmp
icebp
xchg
enter
fucomp
ljmp
shl
shl
cmp
test
or
ljmp
cmc
in
enter
fcmovnu
shr
sti
rol
xchg
int
orb
xor
aaa
in
fcmovne
loopne
cmp
aas
repnz
jmp
int3
loopne
lret
out
call
shl
aad
cmp
sti
shl
test
aam
xlat
call
nop
xchg
xchg
fildll
in
sub
lock
aad
iret
int3
addl
fcmove
std
rolb
ss
enter
std
cmp
sbb
cmpl
aas
mov
int3
mov
out
xor
neg
aaa
icebp
cmp
jecxz,pt
rcl
stc
xchg
ret
leave
test
std
mov
xchg
xchg
lock
out
ss
lret
into
aas
repnz
ret
or
sti
lock
rcl
out
int
int3
icebp
in
shlb
fdivs
fmulp
jecxz
cli
lock
rcr
lret
cmc
fucom
enter
iret
lret
call
in
cmp
int
sarl
inc
jmp
lret
xlat
aas
fst
fcmovne
mov
imul
lret
jl
jecxz
fdivrp
roll
int
and
nop
out
ljmp
int3
out
out
out
icebp
fiaddl
mov
enter
xchg
shl
ljmp
div
aas
in
repz
shl
aad
dec
in
fdivr
les
fidivs
ret
aas
test
cli
fildl
in
xchg
out
or
vpsubsw
ljmp
xlat
call
int
mov
loope
cmp
cmp
xor
xor
aam
aam
out
rolb
out
repz
ret
lock
cmp
in
xlat
adc
cli
test
lret
repz
fimuls
xor
xlat
xor
cmp
ljmp
addb
in
ret
xchg
lock
in
jmp
int3
out
jmp
fcmovu
loopne
cld
loop
loope
int
mov
xchg
xchg
loop
sub
imul
shlb
cmp
jmp
lret
fstp
in
cld
fistpll
mov
add
fsub
ljmp
leave
vpavgw
imul
aaa
shll
adc
in
fdivp
call
fadds
fsubrl
xlat
xor
iret
cmp
lret
ljmp
aam
cmp
mov
test
loop
icebp
ror
loop
cmc
fldcw
loop
cmp
cmp
aad
jmp
hlt
adc
sti
loope
sti
xchg
iret
leave
in
rorl
repnz
call
adc
rol
xbegin
fsubp
loope
out
mov
repnz
das
lock
jecxz
neg
lret
fdiv
aad
sti
cmp
orl
shll
ret
aad
ss
cmp
aam
shl
fcmovbe
ret
xchg
ret
iret
into
enter
lock
fldlg2
leave
xor
out
fadds
rolb
loope
fcmovb
int
mov
call
shlb
hlt
into
cmp
aad
ret
in
out
ret
repz
test
jmp
loopne
repnz
repz
ret
in
sti
fdivl
neg
out
rol
cld
shl
xchg
loop
jmp
test
lret
fprem
aad
lds
cmp
cmp
cmp
sar
sti
lea
lret
aaa
cs
xor
lret
out
ljmp
iret
fucom
loopne
leave
movb
in
jmp
fdivrs
cmp
ljmp
test
in
test
xchg
mov
loop
xor
xor
cli
sar
sti
ret
faddl
mov
mov
sti
lret
icebp
test
cmc
in
jmp
fsubr
ds
hlt
rolb
leave
out
mov
in
mov
idivl
test
sti
cmp
out
fcmovbe
loope
fcomi
in
xchg
loope
xchg
aas
divb
icebp
imul
ss
ljmp
sar
sti
shl
xlat
in
out
rol
repz
fcmovu
fsincos
cmc
std
rcl
icebp
aad
fcomi
jmp
jecxz
out
cli
shl
xchg
hlt
jecxz
enter
in
cmc
repnz
ss
rcl
ret
mov
iret
mov
std
ljmp
cmp
in
repz
out
loop
loopne
loopne
fsubp
test
iret
stc
std
dec
adc
rol
aad
call
lret
rcl
ret
fcmovnu
idiv
xlat
cmp
mov
mov
rcl
out
sar
fcmovnb
aaa
aaa
lret
fcmovnu
sti
cmp
adc
in
orb
mov
in
in
fxch
cmp
lock
hlt
shl
test
hlt
stc
enter
enter
call
out
aad
fxch
stc
cmp
rol
jecxz
stc
ret
aam
int3
test
in
mov
clc
xor
fadd
aas
int
fdivp
cmp
stc
incb
ljmp
test
cs
leave
neg
fstp
iret
fdivp
xlat
repz
lock
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
cmp
shlb
lret
jl
jecxz
xor
mov
xor
out
out
div
lock
lret
mul
cli
in
aad
fmull
icebp
in
lret
mov
stc
xor
hlt
fdiv
cld
lret
or
sti
icebp
mov
in
cmc
in
in
xchg
adc
ret
sub
not
fstp
cmp
fcmovne
in
xor
rolb
fsubrp
leave
mov
mov
or
aam
lret
xor
out
xlat
or
lock
repz
fsub
cmc
ret
in
lock
shr
lock
shl
lret
ljmp
into
into
iret
cld
test
cli
fdivp
out
in
test
ljmp
hlt
test
jmp
ret
fcmovnb
out
mov
in
lret
mov
rclb
loopne
icebp
in
xor
test
mul
lock
xlat
out
xchg
incb
loope
aas
in
xor
xor
imul
fmul
fdivr
iret
fcmovbe
cli
xlat
decl
std
mov
in
jecxz
aaa
in
pushl
xlat
loope
xchg
in
incl
test
cld
lock
ret
clc
out
std
stc
icebp
or
rcr
jecxz
roll
in
xchg
xchg
iret
ljmp
into
ljmp
addb
fxch
sti
out
loope
int
fsubp
test
lret
test
lock
ret
in
xlat
loope
xchg
jecxz
lock
xor
lret
les
ds
stc
rol
flds
aam
lds
in
jecxz
shl
aad
cli
repz
shl
cmp
std
xlat
xchg
lea
ret
cli
out
clc
idiv
ljmp
shl
cli
test
loopne
fisttpll
fdivs
stc
lret
int3
cmc
icebp
loope
icebp
fcmovnbe
rolb
mov
xchg
std
icebp
mov
out
call
repnz
repnz
aas
shll
iret
fdivrs
clc
jmp
loope
out
cli
mov
shrb
aam
das
cmp
loopne
out
rolb
int3
xchg
int3
repz
dec
rol
jmp
cmp
shl
fnstcw
stc
neg
rolb
fisttpl
orl
ret
cmp
fucomp
clc
stc
stc
sar
test
shl
sbb
in
lea
lret
lea
ds
sub
fstpt
enter
shl
test
jmp
sti
xchg
xchg
out
not
aam
jmp
enter
fdivr
xlat
ret
fsincos
in
leave
nop
out
mov
ret
in
xor
jmp
enter
shl
out
jmp
int3
loope
lret
xor
stc
jecxz
not
ror
stc
clc
lret
sbb
fildl
in
addb
shll
shrb
cmp
loop
out
ljmp
test
mov
enter
aad
cmp
xor
cmp
sbb
fiaddl
ret
out
in
lea
xchg
out
sub
cmp
in
fcomi
std
sarb
loopne
xlat
iret
rol
jmp
incb
out
xchg
aam
leave
xor
rcl
leave
fadds
ret
fcmovb
mov
mov
lea
rcl
lock
xor
sarl
cmp
cmc
fucomip
cmp
addl
xchg
in
loop
out
into
xor
xor
sti
fcmovne
out
cmp
fmul
ljmp
out
in
fldlg2
std
out
sar
lret
rcr
test
stc
icebp
fmul
and
loopne
clc
lock
int3
jmp
enter
repnz
int
enter
xor
call
fcmovnu
fxch
fdivr
fimull
into
in
sarl
int
in
out
std
rolb
lock
jmp
xchg
out
loopne
int
xor
xor
in
cmp
shl
rcr
int3
clc
repz
test
popl
out
fadd
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
es
and
jle
jl
add
cs
int3
int
sarl
sar
icebp
cmp
in
hlt
fcmovnb
ffree
jecxz
shr
lock
aaa
ret
fcmovb
xor
cmp
idivb
testb
sbb
loope
xchg
or
fdivs
out
sar
lret
cld
cmp
into
ds
jecxz
loop
mov
fdivr
int
enter
fprem
aad
cmp
call
hlt
fucomp
cmp
clc
enter
fisttpl
fucomip
mov
clc
out
sarb
fcomp
vpsllw
fadd
stc
test
iret
fmulp
xchg
cmc
int3
call
leave
imul
clc
cmp
idiv
jecxz
ror
in
jmp
in
out
iret
aaa
fldl2e
lret
shl
out
enter
sti
shl
aam
xchg
cmc
in
test
sti
jmp
repz
out
aam
int3
ss
loope
sti
cmc
fcmovnu
adc
jmp
call
xchg
lock
sti
ljmp
lret
aam
rcl
fiadds
loope
fimuls
lock
clc
leave
fdivr
in
sti
int3
cmp
repnz
clc
rol
sti
jmp
loope
loopne
out
rcl
lock
int
not
cld
clc
cli
cld
rolb
fdivp
loope
repz
cs
fmul
fsubrp
sti
rcr
jmp
xchg
test
test
in
stc
mov
icebp
int3
lock
cli
in
test
repnz
cmp
cmp
leave
cmc
test
testl
int3
idiv
cmp
fdivrp
cli
cmp
ret
repz
and
lock
loopne
leave
call
fnstenv
push
fptan
fabs
std
loopne
jecxz
repz
int3
ret
call
leave
jmp
ds
fcomip
addb
jmp
in
fsubrp
aad
sarb
div
aas
shl
aad
clc
xlat
filds
xchg
jmp
xor
jmp
shlb
into
repz
ds
cld
repnz
xchg
fcmovnu
std
in
xchg
ret
ror
fcomp
iret
lock
loopne
ret
int3
cmp
shl
fucomi
fcomip
loopne
fcos
out
nop
rorl
stc
fcmove
cmp
lock
cmc
xlat
loopne
aas
repnz
sti
in
addb
mov
shl
ss
cmp
repz
icebp
fldl
aam
leave
fdivrp
jmp
xor
std
hlt
aad
fcmovnb
repz
mov
cmc
mov
std
test
fimuls
xor
clc
fst
fcomip
lret
clc
sti
lock
aam
fucom
test
fmul
int
iret
fdivp
xor
xor
out
clc
jmp
fnstsw
call
shl
ror
out
aas
enter
mov
xlat
stc
loopne
fidivrl
fsub
rolb
ljmp
sti
mov
loop
int3
shl
cmp
in
ljmp
call
and
iret
test
fidivs
out
ror
xor
in
jmp
stc
iret
out
lock
std
in
leave
out
ret
into
clc
out
cli
cmp
aad
cmp
add
call
addl
into
rol
ljmp
add
stc
orb
fsub
fdivrp
mov
sub
in
xor
fldpi
xlat
fmul
out
cmp
out
and
xchg
ds
f2xm1
std
repnz
out
in
cmc
clc
cli
cli
xlat
rcr
clc
xlat
addl
in
mov
ljmp
not
cmp
lock
ret
out
out
sti
ret
jmp
xchg
fmulp
out
mov
repnz
rol
lock
int3
stc
out
cmp
into
cmp
out
jmp
in
clc
loop
int
jmp
lock
cmp
in
fxch
aad
int
icebp
rcl
clc
cld
test
in
call
into
xor
int3
fdivs
fcmove
fdivp
f2xm1
rolb
mov
jmp
ror
ds
ret
or
das
adc
add
lret
jl
fcmovne
enter
fisttps
xor
sti
ss
in
lret
sub
out
cmc
icebp
fadds
mov
in
aam
xor
leave
xor
aaa
sti
or
fadds
idiv
lret
jecxz
out
cli
in
lea
jmp
cmp
clc
int
cmp
jecxz
xlat
idiv
fists
xor
repz
fdivr
call
sti
out
std
rcl
faddl
clc
loop
xchg
sub
cmp
icebp
icebp
iret
lock
fldl
out
stc
jecxz
mov
nop
incb
int
sti
cmp
ss
adc
cli
aad
jecxz
mov
add
in
lret
aad
xor
xor
cli
neg
cmc
rcr
addl
cmp
lea
hlt
fdivl
cmc
cmp
cmp
ret
xor
xchg
mov
fmuls
lret
rcl
loop
lret
out
cmp
aad
push
shl
aad
int3
into
mov
in
mov
leave
div
lret
cmp
int3
repnz
jmp
sti
int3
mov
mov
cli
roll
xor
shl
cli
fdiv
jmp
repnz
std
repz
repz
addl
addl
aaa
jmp
imul
fucomi
fdiv
addl
filds
loop
lock
clc
jmp
fcomip
divb
cld
icebp
rcl
cli
in
test
rcr
ljmp
leave
lret
xor
into
xlat
cmp
aas
aas
cld
adc
sbb
dec
repnz
das
lret
aad
lock
xor
int3
test
inc
in
ret
int
jmp
mov
fcomip
int
jmp
ss
stc
cmc
fistpll
ds
std
loope
leave
out
testb
jmp
int
out
in
ljmp
out
loopne
sti
fiaddl
int
into
out
into
shr
aaa
not
loopne
lock
xlat
xor
add
sti
or
jecxz
shr
enter
aad
in
fcomip
aad
ljmp
in
xchg
ljmp
iret
fildll
loope
enter
ljmp
shl
std
aas
xlat
or
fsubr
fdivr
sti
jmp
int
loopne,pt
enter
jmp
sub
rcr
xlat
fcmovnu
std
jmp
add
fistl
out
xor
sar
cmc
aaa
loope
ret
std
cmp
fcmovu
fadd
mov
out
xchg
in
loop
vpmulhuw
std
shl
aam
lock
clc
shl
fstpt
cmc
out
aad
iret
fsubp
leave
out
push
xchg
fsubrp
out
ljmp
int
fnstcw
out
cli
or
fcomip
adc
xor
xor
stc
int
aas
stc
cmp
mul
cmc
and
sti
mov
fcmovne
icebp
ret
in
call
cmp
shl
loop
jmp
mov
xchg
xchg
in
leave
call
cld
cmp
cli
fstp
iret
fcomip
lock
jmp
repnz
vlddqu
icebp
clc
jmp
iret
cmp
fdivrp
into
out
xchg
movb
mov
shll
jmp
cmp
xor
aad
rol
fucompp
enter
cli
orl
shr
xor
shll
cli
cli
jecxz
hlt
fstpt
in
in
jecxz
sbb
int3
out
aaa
jmp
shl
cmp
ror
fidivrs
icebp
stc
test
aam
repz
test
jmp
shl
stc
out
test
call
repz
cld
jmp
in
enter
loop
lock
in
loop
sar
ror
cmpl
out
fdivr
cli
repz
leave
in
les
lret
rol
into
lock
cmc
sti
iret
shll
std
cmp
fadd
out
cld
clc
call
xlat
std
lret
xchg
xchg
aad
jmp
ret
push
push
add
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
jmp
jg
lret
jl
stc
xor
iret
cmp
cmc
icebp
out
lock
fcomp
test
test
cld
hlt
in
out
fnsave
divb
cmp
test
hlt
add
roll
sar
enter
cli
cli
cmc
ljmp
repz
testl
out
jecxz
cmp
clc
shr
fstpt
icebp
std
out
addl
fmull
loop
repnz
sti
out
cmp
cmp
fcomp
sar
icebp
idivl
out
flds
loop
aaa
ret
ss
xlat
ds
cmc
ret
cmpb
aam
xlat
call
mov
aas
ljmp
lret
cmp
loop
rolb
loope
repz
into
inc
ss
out
fdivr
lret
sar
fnstsw
std
and
ret
jmp
fsub
call
out
ret
call
cmc
fidivrs
fiadds
sub
loope
test
idivl
ljmp
idiv
repnz
out
in
ret
addl
loope
fcmovu
fimuls
cli
sub
cmp
dec
rcr
add
cmp
lret
xlat
in
jecxz
xchg
mov
lds
xlat
fcmovnbe
in
hlt
add
movl
cld
xchg
xor
out
not
int3
rcr
int
fcmovnu
in
fdivr
repz
fld
rcl
in
aam
ds
sar
cmp
rcl
jmp
fincstp
hlt
clc
xchg
mov
in
fldl
clc
cmp
aam
loope
lret
clc
test
filds
out
call
loop
ss
cmp
sarl
rol
hlt
mov
repnz
or
cmp
int3
sub
xor
out
repnz
aad
cmp
int3
xlat
cmp
add
sti
jmp
stc
xchg
loope
xlat
stc
fdivrs
cmp
hlt
iret
cmpb
fcom
inc
cld
mov
fsubrp
test
movb
leave
ror
int
ljmp
rol
fucomp
xchg
mov
out
aad
int3
jmp
xlat
repz
fdecstp
lds
addb
xchg
mov
into
xlat
out
xor
cmp
in
aas
addb
fiadds
fstp
out
popl
shrb
sti
cld
int
xlat
icebp
int3
movl
mov
sub
pushl
mul
iret
loop
fcomp
out
xor
loop
in
loop
loopne
leave
fcmovne
out
mov
out
enter
xlat
aaa
cmp
aaa
out
sarl
xlat
rcr
test
shr
shr
cli
fimull
out
idivl
in
int3
lds
int3
fdiv
idivb
sar
xlat
mov
fdivrp
fsubr
out
in
in
jecxz
std
in
call
in
enter
fcmovu
aaa
shl
xabort
mov
int
xchg
ror
sub
xor
in
repz
cmc
loope
testb
enter
aam
fcomi
cld
aaa
jecxz
loopne
clc
rol
test
xchg
call
int
or
ljmp
lret
sti
std
cmpb
mov
adcl
out
aad
in
lret
vpaddusw
fcomp
std
jecxz
out
fucomip
repnz
into
ret
iret
aad
fidivrl
shr
shr
in
cmp
std
xchg
dec
cli
fdivr
enter
shrb
in
out
sub
cmp
div
aas
fcmovnb
test
rcl
in
xchg
out
lret
aad
shl
xor
jmp
int
fildl
icebp
std
adc
ljmp
in
out
in
xlat
xor
cli
jmp
rcl
in
repnz
call
jecxz
xor
loope,pt
cmp
fidivrl
add
data16
add
ret
ror
fstp
fcmovnb
in
mov
enterw
jl
add
ret
jecxz
rcl
leave
sti
faddl
nop
mov
out
shl
aaa
xlat
leave
cmp
sti
aaa
add
repnz
sti
clc
jmp
test
lret
xchg
call
not
call
ljmp
lock
std
fcmovb
aad
cli
cli
xchg
cmc
mov
rcl
icebp
lret
call
loopne
int
in
ror
lock
cli
cld
imul
cmp
mov
xor
int
aad
xor
into
fcmovnu
out
test
mul
icebp
xlat
mov
fneni(8087
call
xchg
xchg
enter
stc
loope
cmp
flds
aad
lret
shl
ljmp
fld
lret
sar
fsincos
fcmovu
fcom
fadd
ds
aad
fcmovb
test
lea
repz
fcom
call
ret
rcr
aam
std
lret
decl
in
out
fcomp
fsincos
lret
loope
fdivrp
loop
hlt
lret
popl
in
idivb
sti
out
xlat
cmp
cmc
shr
cmp
int
cmp
movl
fucom
lret
les
rcl
cli
aad
fdiv
out
fidivrl
fcmovnbe
in
xor
xchg
mov
xorb
cs
xor
repz
repz
test
cmc
faddp
std
adc
sbb
xchg
out
xchg
sub
xor
int3
xor
ss
stc
shll
loopne
loopne
std
ret
fimull
rclb
in
lock
hlt
cmp
aad
add
sbb
fcomp
cli
ljmp
enter
xor
jmp
cli
ret
loope
roll
in
xchg
incb
loope
xlat
repz
cld
rol
xor
iret
loopne
imul
leave
repnz
mov
lea
lret
lret
rcl
in
xor
fucomp
rcr
cmp
sar
cmp
repnz
fildl
fsub
shl
fucomp
icebp
fldl
fucom
out
fmul
aas
out
ljmp
aam
shl
into
cmp
loope
aad
ss
test
out
lret
adcb
ljmp
cmp
fsub
int3
rolb
loop
test
out
xchg
mul
loop
in
int3
stc
repnz
fcmovbe
sti
ljmp
mov
xlat
in
loop
fucomip
test
loopne
xlat
sar
xor
loope
shr
in
cmc
in
rcr
cmp
cli
in
int
cli
mov
lret
vcmpsd
shlb
in
int
faddl
jecxz
rol
orl
xchg
xchg
sub
cmc
in
ret
cli
jecxz
fnstcw
aas
ret
ret
fucomp
std
fmul
addb
in
clc
cmp
out
cmc
int3
fldlg2
in
sub
shl
hlt
idiv
out
loop
incl
cmc
cs
ror
cli
jmp
cmp
loope
xlat
sti
lret
enter
mov
in
xor
aam
cmp
fcomi
sbb
cli
loopne
sti
xchg
inc
fdivp
int
nop
xor
shl
lock
icebp
jmp
loopne
cld
faddp
fld
add
out
xchg
cmc
xchg
in
sub
iret
ret
repz
sbb
stc
add
xchg
xchg
test
ror
in
xchg
jmp
not
lret
in
icebp
aam
in
lret
cmp
cld
imul
cld
call
in
mov
lock
out
imull
aad
xor
lock
cli
ljmp
sbb
ret
in
int3
out
test
xchg
sub
in
xor
aas
cmp
std
jecxz
stc
repz
incb
call
ljmp
leave
int3
jmp
aad
test
test
orb
jmp
hlt
out
sub
lret
fmul
aad
aaa
fld
jecxz
cmp
clc
mov
mov
std
lea
nop
aad
ret
icebp
in
lock
enter
in
xor
in
icebp
fmull
in
xchg
loop
xchg
jne
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
mov
adc
lret
jl
mov
fmulp
sti
cli
clc
rcl
repnz
sar
repz
ret
icebp
mov
ds
icebp
out
std
cld
fnstsw
cmp
lock
fcmovnbe
aam
in
out
mov
fcoml
repz
iret
xor
shll
fcomi
in
vpsrlq
out
call
clc
decb
xor
ljmp
hlt
cmc
in
shl
sbb
test
lock
repnz
out
cs
shl
out
xor
fcomi
ffree
std
jmp
mov
xchg
int3
xchg
out
ljmp
ret
int3
out
cli
into
int
lret
cmc
fucom
rol
ljmp
in
cmc
repnz
int
xor
ret
aaa
rcl
in
hlt
loopne
rol
ds
leave
les
imul
ret
xor
repz
repz
lret
fnstcw
aad
ds
in
rcr
leave
addl
fdivs
ret
enter
lret
fcmovu
std
lock
hlt
cmp
faddp
in
lock
rol
leave
ss
enter
cmc
cld
loope
iret
icebp
stc
ljmp
fdivrp
fsubr
cld
sub
lret
int
cmc
out
fdivrl
ljmp
test
jmp
xchg
fcomp
out
lret
nop
adcl
out
fcmovnbe
sar
in
in
fcomp
out
cli
sub
fdivr
ret
int3
in
in
loop
hlt
lret
in
aam
fdivp
sar
sar
xchg
xchg
fsub
repz
repnz
loope
ret
ss
jmp
jecxz
rolb
addb
into
in
fxch
divb
enter
int
and
fcomi
sti
mov
cmp
jmp
iret
shll
out
fidivl
xlat
cmp
out
fnstsw
push
fmuls
xchg
lret
stc
xor
cmp
fsubr
aad
testl
aad
ljmp
xchg
repnz
loopne
sti
in
lret
fcomip
icebp
int
cmc
aad
rol
xchg
in
cli
mov
xor
repnz
jmp
fld
add
jmp
in
mov
nop
enter
cmp
sarb
cmp
fadd
aad
icebp
faddp
add
repnz
out
out
mov
mov
out
leave
enter
cli
std
ss
out
cmp
xchg
test
xchg
out
sub
enter
lret
shr
clc
sar
cli
enter
cld
into
in
jmp
mov
loop
stc
cld
out
repz
jecxz
sbb
mov
out
fxch
out
fcmovnbe
fsubr
out
into
sub
out
cld
int3
fcmove
cld
aam
shl
test
aad
jmp
in
decl
loope
xlat
jmp
lret
out
cmc
cmp
fdivrs
loop
cld
sbb
orb
jmp
int
cmc
aad
aam
lret
into
xchg
test
mov
loope
xchg
xchg
repnz
shl
sub
leave
leave
out
repnz
cmc
cmp
aad
mov
cld
in
xor
fcoms
aad
jmp
fadd
xlat
out
cmp
not
repz
fcmovbe
fsubrp
out
xchg
in
call
out
cmc
loop
xor
imul
shll
shr
stc
fneni(8087
cmc
loope
aam
lds
mov
jmp
aaa
iret
enter
in
sarl
cli
sar
jmp
in
cld
in
xor
not
in
jecxz
sti
out
xlat
xlat
lret
xlat
cmp
cli
ret
xlat
shl
clc
clc
cli
in
loope
in
sub
repnz
icebp
into
shr
aas
out
idiv
xlat
filds
call
mov
or
ret
rol
ss
testb
call
faddl
lret
mov
xchg
xchg
out
jmp
lock
out
aad
clc
in
in
idiv
xlat
in
mov
int
icebp
out
cld
rcl
fdiv
xlat
iret
xor
lret
add
cmp
je
movl
jmp
rcl
rcl
roll
and
add
adc
jl
adc
in
stc
enter
in
repz
xchg
stc
icebp
aad
out
call
aam
test
fiadds
cmpl
fdivr
int
jmp
fldl2e
into
repz
cmp
cli
xlat
cmp
loope
sbb
mov
mul
rolb
ret
iret
int
int3
clc
enter
int
fndisi(8087
cld
test
leave
fneni(8087
shl
leave
in
sti
cmp
lret
into
jmp
lret
int
fcmovnb
fdiv
fildl
incb
out
in
int
in
mov
xor
rol
in
fcomip
xor
push
ds
iret
test
xchg
hlt
fdivrs
lds
int3
repz
out
int3
leave
lds
cmp
cmp
loope,pt
test
aad
rcr
enter
rcl
out
int
into
jmp
lret
icebp
aad
call
test
adc
sbb
test
in
mov
int3
aad
aam
xor
lret
testl
ret
fisttpll
imul
in
enter
repnz
xlat
cmp
rcr
aad
in
std
sti
fildl
jmp
fmul
fstp
ljmp
repnz
repnz
call
test
icebp
or
leave
divl
shl
aam
xlat
xor
cmp
aaa
cmp
aad
xchg
out
out
xchg
leave
xchg
aad
rcr
lret
out
jmp
icebp
fdivr
jecxz
out
cli
rcr
jmp
xchg
sub
test
sarl
repz
out
jmp
idiv
int3
leave
jmp
loope
xor
aam
idivb
jmp
loop
cli
fucomi
neg
ds
cld
std
stc
test
cli
ret
nop
xchg
shr
out
leave
fcomp
aam
icebp
fmul
loope
aam
stc
jecxz
jmp
fdivr
adcl
lock
les
icebp
cmp
into
into
stc
out
loop
test
xlat
sub
in
loop
int
fst
mov
int
ss
cmp
ss
cmp
vpsrlq
sar
leave
mov
ror
call
shr
in
int
cmp
int
cmc
ret
jmp
in
mov
aas
in
xor
neg
xor
cmp
std
stc
jecxz
loop
leave
adc
cli
shl
cmc
in
mov
aam
hlt
xlat
cmc
cmp
fdivp
in
cmc
int
jecxz
repnz
sbb
mov
shl
fimuls
out
stc
out
in
clc
cmp
cmp
rcl
add
cli
enter
in
lret
repz
fucom
rcr
aam
ret
leave
shll
sti
rcr
sarl
int
loop
repz
aas
test
les
out
lret
repnz
div
jmp
cmpb
repz
xlat
loopne
loope
fmul
fcmovb
mov
mov
not
in
int
fucomi
xlat
ds
in
cmp
sarb
std
add
out
jmp
iret
int3
xchg
loopne
loope
into
out
iret
out
fmul
lret
loopne
incb
lock
loope
loop
sti
orl
aaa
cmp
int
icebp
in
ret
xlat
in
std
test
loop
lret
iret
fsubp
in
shr
aam
stc
shl
fdivl
shl
repnz
repz
orl
xchg
shll
loopne
aam
icebp
xor
int
fmuls
loopne
mov
enter
xchg
lock
xor
cmp
sti
out
cmc
int3
shl
fdiv
jecxz
in
mov
call
test
mul
fcmovnu
sti
cmc
not
out
cmp
lret
xabort
in
enter
loope
shl
sti
lret
shlb
cmp
loop
aam
repnz
sbb
jmp
cld
decl
int3
ljmp
fdivr
xlat
iret
cmc
mul
ret
addl
mov
loope
hlt
out
leave
fcmovnb
xlat
rol
lock
loopne
shl
lock
std
mov
call
test
shr
jmp
in
jecxz
faddl
in
lea
jmp
lret
ret
int
jle
shl
or
push
sbb
lret
jl
jmp
call
repnz
ss
cli
lock
cmp
loop
xchg
rol
call
out
xchg
repz
ret
call
cmp
cli
ds
cld
loope
rcr
fdivr
mov
clc
shr
xor
aad
call
cmp
fdiv
cli
clc
cmp
cld
mov
shr
stc
mov
ljmp
repz
clc
lret
stc
xlat
into
aad
sarl
fcmovbe
cmc
mov
cmp
loope
mov
hlt
in
call
loope
cmp
jecxz
incl
out
out
xchg
shl
ljmp
std
iret
aam
fcomi
jecxz
test
sbb
leave
cld
mov
loop
jecxz
xor
cmp
clc
in
idivb
cmp
out
enter
jmp
fcom
loop
aam
cmp
mul
in
iret
ss
ret
repnz
fisttps
rclb
icebp
xor
xor
fdiv
aam
cmp
aam
fmul
test
call
fsubr
call
xlat
out
leave
ret
lret
repz
int
in
out
rolb
loopne
loopne
ljmp
repz
into
fdivr
dec
cmp
aad
jecxz
lret
fiadds
and
iret
jmp
ret
icebp
loopne
lock
test
lret
fiaddl
in
xchg
incl
ljmp
rcr
cmp
ret
stc
cmp
clc
leave
movb
loopne
addl
xor
lret
leave
inc
cmp
and
jmp
add
in
xchg
xchg
leave
sarb
repnz
cmp
xor
loope
out
inc
in
ret
fmul
jmp
leave
fdivr
lock
jecxz
aad
aas
xlat
fsubrp
xlat
aas
ds
and
out
ror
clc
cmp
call
loopne
fadds
call
ljmp
lock
in
rol
ss
and
fadds
out
in
sub
hlt
xor
repz
aad
repz
cmp
fucomi
test
jmp
lret
idiv
stc
mov
ret
xor
ljmp
rcl
idiv
loopne
cmpl
mov
ret
fadds
sub
xor
sub
cmp
lock
rcr
icebp
leave
enter
fimuls
in
ror
xlat
xor
shl
out
fstpt
repnz
loop
shl
lea
xchg
lret
test
cs
loop
ds
cmc
cli
rolb
in
mov
in
sti
xor
repnz
jmp
sti
clc
loope
ds
sti
sti
aad
fucomip
fsubp
nop
cmp
repz
int3
xlat
std
repnz
lret
fucomp
cmc
fcomi
fdivrl
addb
lret
repnz
call
int3
enter
std
into
sti
std
stc
rcl
rcl
loop
cli
clc
out
jmp
xor
enter
iret
xlat
roll
fldl
add
mov
icebp
cmc
shll
shrb
out
in
in
cmp
ret
xlat
mov
in
les
int3
nop
lret
in
jmp
fprem
jmp
std
std
cmpl
jmp
fmulp
or
decb
aad
xor
cmp
cli
sar
repz
clc
test
mov
cmc
hlt
jmp
fsin
adc
ret
out
ljmp
ret
fcomip
dec
stc
std
cmp
std
xchg
xchg
rolb
into
rcr
cmp
or
in
out
xchg
out
decb
xchg
shr
lds
cmp
addl
orl
out
das
jmp
xor
xor
fsub
ds
int
les
in
repnz
shl
aaa
out
stc
mov
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
pop
mov
lret
jl
hlt
jmp
rcr
aad
in
mov
lret
mov
das
xor
xor
xor
out
cmp
stc
loop
xlat
rolb
ljmp
in
repnz
fsubr
out
fsubrp
std
cmp
repnz
mov
fdecstp
mul
std
into
out
repnz
enter
lret
cld
icebp
sar
icebp
ds
loopne
aam
cmc
add
xchg
nop
lret
test
leave
xor
aad
shr
xor
loope
loope
in
aas
out
in
enter
icebp
icebp
fstl
shll
stc
clc
cld
lock
fcmovbe
fdivp
ret
rol
std
in
fucomip
int3
mov
xchg
out
lret
in
hlt
xor
fdiv
std
into
ret
in
mov
cli
mov
in
orl
out
xlat
iret
lock
xlat
icebp
fnstsw
cmp
xchg
mov
lret
cmp
fcmovb
test
incl
stc
int
fnstcw
jmp
aad
cli
leave
fldl
stc
out
fstl
rol
call
aas
ljmp
aam
std
cld
mov
in
ljmp
xor
cld
incl
test
test
orb
std
mov
fmul
call
sbb
aam
call
incb
xchg
lret
xor
out
repz
hlt
repz
les
in
ljmp
fld
sub
cmp
std
lock
movb
sub
in
icebp
in
xor
xor
jmp
neg
out
cli
ret
out
test
iret
fcoml
xchg
jecxz
shl
ret
in
repnz
ljmp
repz
aad
sub
in
in
ljmp
repz
jmp
clc
lret
rol
in
xchg
fcomip
xlat
sti
loope
rcr
loope
fisubrs
ljmp
out
icebp
shl
cmp
idiv
cmp
test
testl
shr
lock
iret
into
rcr
incl
hlt
loop
jmp
cld
xchg
ljmp
sti
fcomi
imul
call
cmp
mov
ljmp
xchg
out
ljmp
sti
into
in
jmp
lret
lock
aam
ret
leave
out
cld
in
into
test
fsubp
jmp
sub
lret
xor
cmp
fcmovnu
into
mov
loope
out
enter
rolb
icebp
in
fldt
aad
aam
in
test
hlt
cmpb
repz
sti
fmul
roll
cs
loop
xlat
jmp
cmc
cmp
aam
xchg
cmc
jmp
in
std
mov
iret
das
in
cmp
out
std
into
cmp
int3
fcmovnbe
aas
cmp
sbb
lret
ljmp
xor
call
icebp
sti
incl
loope
fcmovnbe
mov
ljmp
out
ljmp
sub
ror
test
test
orl
fisttpl
lock
cmp
xor
rcl
aad
or
ret
in
loope
clc
sbb
mov
rorl
loope
enter
jmp
aas
test
fiaddl
mov
addl
sub
ret
cmc
aaa
jmp
aas
add
lds
jecxz
jmp
xor
stc
shr
clc
cli
lret
cli
fcmovnbe
cmpb
xchg
stc
mov
jmp
mov
loope
mov
out
shl
vpsllw
cld
call
ret
cmp
fcmovne
cmp
hlt
out
jmp
std
in
xchg
ror
rcl
aaa
icebp
ljmp
lock
aas
mov
out
inc
hlt
das
out
xor
ss
ss
cmp
fdivr
jmp
lret
test
lret
cld
iret
shll
rol
aam
ss
lock
loop
jmp
mov
xor
lea
mov
jmp
into
int3
ret
ds
jge
jae
mov
pop
lds
add
fildl
loop
int
out
ret
icebp
repnz
jmp
rol
loop
sar
rcr
testb
adcb
aad
enter
cmp
int
cmc
aam
fildl
loope
enter
int
out
int3
in
lret
lret
aad
stc
ljmp
ffree
cld
lret
dec
ljmp
out
xor
hlt
test
aas
xchg
cmc
xlat
enter
cmp
int3
enter
cs
lret
xor
enter
lret
cmp
cmp
roll
cmp
xchg
into
out
xor
shlb
lret
fcmovne
sti
out
clc
fidivrs
cmp
repz
fcom
mov
lret
test
xchg
in
jmp
out
cmp
into
faddl
cld
enter
xchg
jmp
lds
sar
cmp
fdivr
loop
ds
cli
sub
fmuls
xor
iret
fnsave
cs
cmp
stc
stc
cmp
repz
fmull
cmp
addb
cmp
hlt
fst
aaa
aaa
stc
sarl
cld
std
and
loop
in
enter
call
xor
cmp
cmp
cmpb
cmp
into
cmc
cmp
lock
test
out
shl
ret
out
sti
out
clc
les
fcmove
test
cmp
div
cli
fimull
repnz
mov
repnz
std
into
aam
into
int
fcmovu
shl
rolb
test
fcmovu
test
ljmp
rcr
iret
in
hlt
sti
vshufpd
mov
in
out
iret
in
fsubrp
lret
fsub
out
int3
ror
repz
ljmp
in
in
movb
rolb
xor
repnz
icebp
cmp
push
in
fadds
cli
test
int3
sar
ret
out
repnz
lret
shr
cmp
repz
stc
out
leave
std
out
loope
sub
jecxz
in
sar
xor
shr
jecxz
test
flds
lret
in
repz
xchg
mov
xor
in
repz
leave
repnz
xor
rcr
ret
in
sar
fcmove
leave
loop
lock
enter
enter
loop
shl
cmp
loope
loop
aad
xor
out
jmp
xchg
xchg
jmp
aad
lock
cli
out
in
fidivrs
int
icebp
rolb
in
icebp
mov
and
xchg
aaa
hlt
out
xor
repnz
cld
fldl2t
xchg
int3
std
out
sbb
mul
loop
cmp
cmp
clc
shl
icebp
fcmovbe
test
loop
fiadds
mov
in
fxch
ss
shr
aam
fcmovnb
loopne
lock
fadds
xchg
loopne
xor
xor
cmp
fisubrl
iret
shr
roll
test
int
xchg
int3
jecxz
shlb
fdivrl
xlat
ds
test
leave
mov
loop
std
int
bnd
aam
xor
cli
ds
fnstcw
rcr
in
lea
int
lret
neg
xor
in
cmp
cmp
sarl
addb
fiadds
fadd
xlat
aam
vpinsrw
cmc
clc
ds
cli
cmp
cmp
loope
aad
fdivr
enter
ljmp
stc
xor
cmp
iret
repz
cmp
out
sti
icebp
cmc
xchg
cld
xchg
fisttpl
xlat
enter
aad
cmc
repz
ret
fcomip
incl
decl
in
out
push
aam
in
enter
std
cmp
int
aam
dec
ret
repz
shl
leave
addb
in
ljmp
sar
in
sbb
std
in
cli
mov
mov
lret
in
loopne
iret
lds
call
fcmovu
into
out
out
out
in
rcr
jecxz
in
out
stc
xchg
enter
xor
sar
inc
or
aam
decl
add
add
rol
ds
fcmove
fisubrl
movsb
inc
add
jg
lret
jl
in
fucomp
cld
int
in
loop
cmp
movb
into
fnclex
jmp
xor
jmp
repz
fucomip
cmp
cmpl
decb
fcoml
sti
enter
imul
lret
stc
in
aas
rcl
in
xchg
testb
xchg
sub
out
int
mul
shl
cmp
shll
sar
mov
or
fdiv
loopne
clc
xchg
rcl
cmp
enter
aam
into
roll
in
int
cli
mov
jmp
iret
cmp
ljmp
clc
cmp
jecxz
clc
fprem
int3
mov
and
rol
stc
idiv
loop
xor
jmp
ret
fdiv
repnz
cmc
lret
ret
mov
test
lret
fldz
out
enter
idiv
iret
roll
clc
neg
clc
shr
mov
out
out
mov
sti
ss
sti
ret
cmp
idiv
loope
mov
test
repnz
cs
leave
sti
stc
iret
out
cmp
jmp
aam
loop
fndisi(8087
stc
mov
mov
nop
lea
iret
repz
out
hlt
fistpll
shl
ffreep
ret
cmp
jecxz,pt
in
in
mov
test
shr
xor
rcr
in
into
cmc
fcmovnbe
icebp
cld
test
shl
ljmp
fcmovbe
aam
rol
sti
ljmp
faddp
test
cmp
ffreep
loop
ljmp
xchg
aam
cmp
lock
lock
xchg
in
fucomp
test
out
shl
shr
xor
in
jmp
shl
in
repz
sti
iret
out
into
repz
lock
iret
loop
in
cmp
ljmp
hlt
faddl
mov
int3
out
repz
and
out
xor
repnz
jmp
ljmp
repz
fildl
cld
mov
hlt
sub
out
aaa
in
xor
cmp
cmp
cmp
std
fld
mov
std
leave
mov
lea
ret
stc
clc
xor
xor
hlt
cmp
icebp
loop
stc
loop
fmulp
shl
incb
xchg
loope
hlt
int
jecxz
int3
int
stc
filds
clc
cmc
cld
aam
ljmp
lret
jecxz
repnz
fnstenv
into
out
leave
cmp
rcl
out
aas
fcomip
mov
in
xchg
roll
hlt
out
in
fcmove
rcl
in
loope
aas
call
fsincos
xchg
mov
out
icebp
shl
in
enter
ret
cmp
enter
aaa
into
xor
lret
test
xchg
in
shl
hlt
fnstcw
xlat
cld
dec
in
out
repnz
ret
ret
ffreep
cld
clc
int3
ljmp
icebp
out
cmp
fucomip
rolb
cli
aam
lret
iret
fists
iret
sti
fcmovu
cmp
lret
ds
loope
addl
out
leave
out
rcl
shl
iret
cs
lret
in
aaa
jecxz
aad
ret
test
fdivr
lds
sub
lock
aaa
adc
repz
ret
ds
cmc
fimuls
and
imulb
lret
cmp
cmp
fcmovu
aas
cmp
lock
shl
loopne
iret
xchg
and
out
fildll
xor
ror
cmp
or
lock
std
lret
fndisi(8087
vpmacsswd
sti
jmp
out
ss
rcl
roll
lds
xchg
icebp
fucomip
ror
ror
in
leave
shl
fmulp
fdivrs
fstp
hlt
out
icebp
out
ror
cmp
mov
loope
in
into
fcmovnu
in
fnstcw
fdivr
repnz
cmp
hlt
out
test
jmp
fsub
iret
rorl
leave
loop
repnz
shlb
in
aas
in
fdivp
std
out
in
fucomip
fsubr
jmp
fiaddl
jmp
shl
ss
idivl
icebp
xor
jmp
sarl
lret
rcr
fsubr
push
sub
into
sub
lret
jl
call
test
in
mov
jmp
in
idivb
jecxz
test
test
xchg
cld
in
into
orb
aaa
out
xor
rol
shr
icebp
sbb
loop
lret
stc
mov
test
mov
icebp
out
fmul
jmp
cmp
filds
ljmp
nop
in
test
lret
xor
jmp
leave
test
repnz
hlt
in
lret
mov
xlat
jecxz
out
enter
fldl
repz
out
mov
mov
xor
xor
cmp
cmp
mul
in
xchg
movb
in
in
loopne
out
fnstenv
fdivrs
iret
fcomi
sub
sarl
shl
incb
fisttps
repz
xor
repnz
in
lret
jecxz
xor
out
rol
cmp
fisttpll
repnz
add
ret
aad
cmp
fcmovb
fyl2xp1
clc
rol
mov
fisttpl
shl
in
out
cmp
int3
ljmp
fsubr
rolb
fdivp
in
in
xor
xlat
lret
repz
fcomp
loopne
aad
out
xchg
repz
shr
fldl
out
xchg
int3
xchg
shl
call
hlt
xor
lret
and
out
les
xchg
iret
ljmp
call
clc
ret
clc
repnz
in
cmp
xchg
mov
jmp
clc
int3
cmc
aad
cmp
rcr
fcomi
sar
test
mul
jmp
orb
ret
std
repnz
neg
sar
repnz
call
out
loope
std
jmp
stc
lret
out
cmp
sti
rol
xor
fiadds
loop
mov
jecxz
in
enter
fcomi
std
and
incb
cli
out
repz
das
jecxz
int
out
fadds
jmp
repz
mov
or
or
test
cld
jecxz
rcr
sub
cli
idiv
fcmovnu
fsin
ffreep
xchg
cmp
fildl
xchg
call
xor
leave
loopne
cld
dec
loopne
ret
jecxz
lret
xchg
jmp
lret
xchg
adc
mul
xor
xor
lock
div
ret
add
call
add
mov
loopne
repz
xor
call
repz
int
not
loopne
ret
fsubrp
test
fsub
in
fadd
cld
ror
iret
ljmp
aam
cmp
rol
clc
sbb
fmull
jmp
mov
xor
aad
in
pushl
neg
hlt
loope
stc
iret
faddp
std
rolb
call
in
les
jmp
int
ljmp
shl
out
stc
and
call
out
icebp
loopne
cs
sti
fucomi
jmp
shl
add
test
stc
icebp
clc
lret
nop
xor
call
fnstenv
adc
fdiv
fsub
cmp
test
test
mul
repnz
out
ss
ss
cli
in
out
icebp
not
jecxz
cmp
sbb
out
xchg
cli
loope
enter
idivb
in
repz
jmp
shl
int3
hlt
cld
out
ret
fdiv
std
out
mov
lock
fcoml
rcl
aam
icebp
xor
clc
iret
enter
push
cld
lock
int3
loope
rcll
fldl2e
std
xor
cli
leave
cmp
loope
shl
rol
repz
int
fmul
mov
rcl
cmp
lock
repz
cmp
mov
fdiv
lret
aaa
repnz
xor
repnz
cmp
int
in
loop
fcmovnb
ret
and
hlt
mov
lret
xchg
vpmaxub
repz
into
lret
lret
iret
dec
in
in
cmp
bnd
clc
out
in
fiadds
data16
add
int3
fcmovnbe
int
loope
insl
lahf
daa
fwait
iret
mov
das
jg
lret
jl
jmp
aam
int3
icebp
in
cmp
shr
hlt
aas
repnz
in
in
int3
std
in
fldl
loop
int3
aam
out
xlat
in
rcr
fst
test
std
mov
mov
out
aam
clc
stc
out
call
stc
test
roll
lock
fstl
loopne
xor
aaa
cld
clc
cmp
repz
lds
call
jmp
aad
out
aaa
aad
shl
fldl
sar
mov
movl
loop
jmp
out
into
fdivr
ret
cmp
orb
cli
icebp
repz
xchg
ret
lock
repz
cli
out
out
cmp
adc
clc
out
faddl
lock
xor
jmp
call
ret
loopne
rol
mov
cmp
in
jecxz
out
hlt
call
ss
sarb
lret
loope
cld
add
leave
call
cld
int3
rcl
hlt
sub
lock
fcomi
sti
fdiv
out
aas
mul
xlat
mov
orl
repnz
iret
xor
repnz
jmp
cmc
sbb
sti
fcomip
fadd
jmp
fmulp
cmp
mov
lret
enter
cmp
int
out
cld
stc
ret
sbb
mov
mov
jmp
lock
xor
fsub
fsubr
clc
roll
test
ljmp
leave
rol
mul
out
cmp
cmc
cmp
stc
cli
in
lds
cmp
test
fcomi
repz
iret
roll
mov
rcl
jecxz
shl
leave
icebp
in
in
leave
cli
xor
fcmovnu
ss
in
loopne
fdivrp
stc
orl
jmp
cmp
xor
cli
fsubrp
iret
sarl
fcomi
jecxz
rcr
std
sub
cli
out
call
les
out
jmp
cli
xlat
shl
rorb
sbb
fninit
test
out
in
ror
aad
fld1
cmp
lret
rcr
ret
in
lock
xlat
movb
lock
aaa
aaa
icebp
xor
ss
icebp
ljmp
lock
in
or
fiadds
loop
lock
call
xlat
fiadds
test
cmc
repnz
loopne
mov
in
rorb
lock
xor
lock
lret
in
repnz
into
ret
mov
int3
mov
fldlg2
xchg
in
nop
lock
leave
ljmp
in
hlt
cmc
cmc
loope
fdivrs
int
loopne
cmp
hlt
out
jmp
in
rcl
rol
cld
in
xor
faddl
sub
out
rcr
lock
icebp
stc
clc
lock
cmp
fsubp
adc
fsubp
clc
fildl
aad
jmp
cmp
test
loopne
cmp
mul
loop
cmp
cli
mov
ffreep
mov
xor
xor
cld
inc
cmp
loope
repnz
jmp
xchg
int
jmp
das
call
sar
std
aaa
ror
icebp
cli
shl
loope
loope
loop
enter
ror
fldcw
cmp
cmc
std
cmp
icebp
clc
aad
ds
jecxz
loop
addb
in
jecxz
das
aaa
lret
repnz
aaa
cmp
aam
aad
xlat
fsubr
fdiv
testb
call
loope
ret
int
cld
stc
enter
fidivrl
sti
std
loope
xor
addb
fsubrp
repnz
in
int
aam
loope
cmp
test
repnz
fmul
int
mov
out
xor
xor
aad
jmp
fnstsw
cmp
shl
loop
std
ljmp
repnz
xor
int3
test
iret
cmp
int
jecxz
jecxz
jmp
mov
filds
repnz
fdiv
icebp
xlat
fcomi
roll
add
add
iret
sarb
aad
aad
pop
sbb
sbb
push
jg
lret
jl
cld
out
hlt
fsincos
loopne
in
rcll
ret
cmp
xor
in
fsub
sub
lock
sbb
mov
iret
rcl
shl
lock
sti
idivl
sarl
sar
sar
fiaddl
mov
test
incb
shl
out
jmp
fdivp
roll
fildl
cmp
fcomi
in
lret
out
xor
into
out
sarb
cmp
sarb
in
stc
xchg
lret
in
int3
mov
addb
xor
rcr
lret
aad
idivb
repnz
aad
ret
iret
into
leave
into
out
test
shl
xor
enter
sar
sbb
ret
sub
in
cmp
bnd
sub
lds
lock
aaa
out
hlt
jmp
call
jecxz
adc
ljmp
mov
rol
vpsrlw
clc
hlt
in
enter
fcom
ret
ljmp
in
test
cmc
lret
iret
out
shr
int
out
lock
cld
fcomi
not
stc
cmc
repz
xlat
in
clc
sti
mov
xchg
sub
in
fldlg2
in
hlt
fcmovbe
out
cmp
repnz
rol
loop
fcomp
mul
cli
lret
fildl
xor
lds
std
aad
cld
iret
repz
stc
filds
rorb
sti
into
xchg
call
stc
in
in
in
xor
repz
addl
decb
rol
xor
aad
lret
lret
jmp
cmp
in
mov
or
leave
cld
into
xchg
call
xlat
leave
jmp
div
out
stc
test
enter
mov
xchg
xor
fyl2xp1
divl
out
cmp
hlt
hlt
shl
jecxz
ret
test
clc
idiv
flds
loopne
repz
in
sar
idivl
fmul
icebp
ds
hlt
loope
fcmovu
cmc
mov
stc
testl
loopne
cmp
ror
lret
ljmp
add
mov
lea
in
cmp
shlb
fmulp
rcl
aad
out
out
into
icebp
sti
call
in
addl
aam
fnstenv
sti
shr
aad
sub
jmp
mov
mov
filds
lock
jmp
cmp
hlt
std
repnz
out
xlat
rolb
mov
and
call
xor
imul
leave
cmp
fninit
repnz
incl
xlat
fsub
in
enter
sub
cli
aad
roll
aad
aas
into
push
call
leave
nop
fdivp
in
jmp
fnsave
int3
fcmovu
rcr
faddl
mov
jecxz
fiaddl
xor
cmp
xor
lret
clc
test
stc
rolb
orl
rcll
cmc
int
sarl
repz
xlat
sar
iret
les
mov
fldl
xchg
shr
fld
xor
cmc
cld
xor
enter
add
cmp
mov
call
in
in
cmp
shlb
aad
in
sar
ds
fdivr
mul
xchg
movl
aas
hlt
cli
dec
xlat
out
fcom
loopne
in
mov
ficoml
fxch
fadd
lret
sar
loope
int3
in
sarl
cli
leave
fcmovu
jmp
adcl
int3
out
shlb
ds
in
rcr
clc
xlat
fmuls
ljmp
hlt
rcr
into
cld
ret
lret
cmp
in
jecxz
call
fcmovne
ret
popl
div
in
cmp
ror
in
xchg
cld
shl
mov
mov
rol
in
aad
jmp
cmp
cmp
loopne
leave
or
xchg
in
iret
xor
cmc
lret
not
int
lret
sarl
neg
xlat
out
lret
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
call
ss
add
std
fisttpll
out
out
repz
repnz
aad
mov
fcoml
in
in
shr
shl
in
iret
into
call
into
test
ds
fdivrp
les
shl
rcl
ret
aad
leave
jmp
iret
flds
vcvtpd2dq
out
fldln2
leave
lret
orb
repz
fxch
aad
xor
fcomp
in
cmp
std
fscale
or
lret
rcr
shr
aam
aaa
in
shl
in
std
repnz
sbb
fdivp
and
fmul
int3
mov
shl
xor
das
in
loop
xor
lret
hlt
ret
std
jmp
cld
fldl2e
mov
ror
shl
sub
in
hlt
call
repnz
loope
xchg
sti
jecxz
mov
mov
lret
aad
aad
lret
stc
cmp
aaa
int3
jmp
lret
fiadds
std
mov
out
in
hlt
lock
out
ds
aas
cmp
repz
shl
sbb
cld
int
xchg
repz
aas
cmp
in
in
out
mov
fxch
cld
mov
iret
shl
shl
lock
cmc
cmc
cmc
xlat
fadds
lret
jmp
push
jmp
loopne
jmp
aam
fdivs
leave
stc
shl
lret
lret
cmc
fucom
xchg
addl
fdiv
ret
call
fucomip
cmp
test
rcr
stc
out
mov
jmp
decl
clc
icebp
repz
xor
out
not
out
fsubp
aam
mov
out
leave
nop
lds
xor
out
xor
ror
into
lret
test
aad
loope
call
or
in
test
xchg
div
into
lock
aam
cmp
out
into
fsubr
rcr
fprem
aad
enter
call
jmp
aad
int
in
xlat
shl
jecxz
call
fsubp
ljmp
cli
lds
fsubrp
lret
cmp
jecxz
sub
stc
in
lret
test
or
nop
in
aaa
xor
jecxz
cmc
lret
jmp
cmp
xlat
add
sti
xchg
test
xor
out
sti
repz
cmpb
xlat
and
sti
cmp
sbb
shl
imul
xor
leave
aam
std
lret
call
rcl
aad
ffreep
sti
mov
in
mov
in
xchg
repnz
hlt
xor
xor
out
lret
jmp
cmp
sar
cli
call
cli
repz
in
stc
icebp
sti
fucomp
fmul
fsubr
xlat
out
cmp
out
testl
hlt
repnz
in
hlt
clc
aaa
leave
idivb
fnstsw
in
hlt
xchg
in
orb
fldl2t
cmp
cli
clc
out
cmp
ds
mul
loop
fmull
stc
out
cld
enter
loop
fcmovne
jmp
shll
sar
idivl
out
shr
sti
fcmovnu
idiv
enter
hlt
div
repz
xor
in
int
fucom
in
incb
cld
aad
loope
iret
out
mov
aad
jmp
call
in
xlat
xlat
aam
aas
shl
fst
enter
xchg
icebp
shr
int3
into
leave
hlt
lret
in
int3
in
ror
xorl
jmp
test
jmp
xchg
fists
ljmp
jmp
sti
out
jmp
in
and
mov
in
xor
stc
cmp
lock
std
out
hlt
lret
repz
aam
loope
cmp
filds
cli
fisttps
jmp
repz
ss
int3
ds
leave
ret
cli
imul
loope
in
xchg
fimuls
sub
fldz
fcmovu
cmp
call
mov
cli
out
loopne
jecxz
cmp
clc
leave
in
cmc
ljmp
std
test
leave
mov
iret
out
jmp
loope
call
fidivl
idiv
shl
aam
repz
out
mov
std
lea
adc
not
idivl
sti
xabort
dec
ljmp
in
jecxz
les
call
xor
sti
ss
xor
cmp
fildl
aam
aam
int
cli
leave
shr
out
xor
rcr
fcmovu
cmc
out
xor
in
fadd
xchg
jmp
jmp
in
cld
test
lds
div
int3
aad
iret
icebp
lock
cmc
cmp
in
lret
fadds
mov
rcll
adc
push
movl
jmp
into
rol
aad
rcl
jmp
fimull
jl
add
test
loope
sub
loop
cmc
loopne
cmp
xchg
icebp
int3
xorb
jmp
pushl
out
aad
fcmovbe
sti
les
mov
xchg
in
ljmp
icebp
out
aaa
lret
std
into
repz
rol
idivl
loope
sbb
std
loopne
stc
sti
or
filds
enter
out
std
aas
xor
mov
shl
jmp
orb
in
enter
out
cmc
ds
rcr
fcomi
div
repnz
out
test
f2xm1
fucom
loopne
repz
imul
rcl
jmp
xlat
aam
fnstsw
aaa
fcmovu
cld
fisttps
fmul
int3
xchg
sar
fstpt
fdivrs
int3
ss
ret
out
lds
xchg
xchg
xchg
lret
mov
cmp
cmp
aad
cmp
sub
aam
stc
rcl
cmp
int3
dec
in
out
aad
xor
call
cli
cmp
leave
lret
test
fdivrs
hlt
sbb
cli
mov
jmp
jecxz
loop
icebp
jmp
fcom
call
cmp
out
rcl
test
repnz
out
inc
mov
std
iret
out
aad
xor
cmp
cmp
repnz
xor
shl
rolb
mov
loopne
shlb
aam
repz
fstp
lret
fcmovne
incl
xchg
jmp
mov
addb
sub
sti
imul
xor
clc
fprem
incl
rcr
in
repnz
mov
enter
in
cmp
add
aas
out
jmp
mov
fsub
nop
into
mov
lock
sar
clc
cmp
out
out
fxch
addb
hlt
fxch
mov
loopne
mov
in
lock
xor
fscale
ljmp
cmc
mov
loop
ljmp
ljmp
cli
in
hlt
cmp
jmp
lret
lock
and
std
fcmovnu
jmp
mov
in
cmp
leave
aas
iret
dec
aam
loopne
out
repz
loope
mov
leave
mov
test
into
test
sub
ret
xor
shlb
iret
xlat
repz
incl
lret
xchg
fmul
out
test
cmc
xor
int3
into
hlt
jmp
repz
ret
test
rcr
lret
std
jmp
shrb
jmp
out
xor
aam
aam
aad
sub
repnz
orl
shlb
fcomi
rcr
in
shl
aam
aad
into
icebp
mov
ret
in
xchg
orb
aam
lock
icebp
clc
fucomi
in
iret
call
stc
cld
clc
testb
enter
jmp
xor
call
iret
loopne
lock
loop
call
jmp
cli
jmp
loopne
sub
xor
fdivrl
push
enter
shl
xlat
jecxz,pt
flds
out
ljmp
lret
out
sti
loopne
cmp
cmp
shl
mul
rorl
fneni(8087
ljmp
xor
cmp
out
int
shl
cmc
fistpll
aam
faddp
fmull
loopne
out
lret
int
int3
int3
sti
stc
lock
sti
xor
repz
xchg
loope
iret
nop
xor
clc
cmp
cmp
cmp
repz
aad
ret
hlt
aad
and
into
iret
jmp
fxch
cld
idiv
cmp
out
fnsave
fsubp
fsubrp
clc
mov
repnz
rcr
cmp
out
repnz
repnz
xchg
ljmp
xor
out
xor
ljmp
cmp
xchg
stc
xchg
orl
int3
in
xor
cmp
call
rcl
aad
out
cmc
mov
repz
lret
shl
leave
xor
sarl
rcl
lret
jmp
rcr
ret
addl
fildl
hlt
loop
icebp
enter
cmp
repz
jmp
sti
ret
aam
xchg
jmp
push
int3
jmp
ljmp
roll
out
out
mov
loope
mov
cmc
std
lret
loope
iret
shl
icebp
out
xchg
mov
int
lret
aad
xor
cmp
in
fbstp
or
stc
rcr
loope
shl
loope
in
clc
iret
xchg
cmp
in
ror
iret
call
in
loopne
int3
sti
ret
rcl
out
fcmovnbe
movl
loopne
les
into
out
movl
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
inc
xchg
push
push
sarb
add
mul
jecxz
ss
ds
cld
loope
test
repz
in
fcomip
les
lret
shl
in
jmp
cmp
lret
cmp
aam
aam
in
xchg
sub
imul
cs
cmp
ss
cmp
sarl
out
shl
out
loope
leave
loope
mov
repz
lret
ljmp
lret
iret
fmulp
add
aas
test
mov
lret
lret
int3
loop
lret
repnz
out
int3
in
test
lock
into
cli
jmp
fimuls
in
mov
lret
xor
in
cmp
ss
sarl
test
enter
enter
decl
leave
clc
in
repnz
test
int3
add
aad
ret
and
mov
xor
fcom
cld
iret
fxtract
cmp
int
fiadds
aad
xchg
xchg
hlt
ret
into
out
out
lret
leave
xor
dec
ret
in
test
xor
jmp
nop
hlt
mov
xor
div
divb
shl
sbb
cmc
repz
aam
out
int
in
xchg
icebp
shl
repz
cmp
jecxz
sti
into
cmpl
testl
rolb
aaa
fdivs
in
xor
icebp
sti
int
in
std
mov
mov
aas
imul
leave
aad
cld
std
lret
ss
cmp
in
test
leave
test
test
in
into
xchg
jecxz
shlb
fcom
jmp
repnz
out
inc
fchs
sbb
loop
in
mov
loopne
test
cs
lret
xor
lret
rcr
iret
ss
cmp
aam
fdivrp
fcmovnb
filds
xchg
stc
xlat
rcl
cmp
out
fcmovne
cli
rolb
neg
leave
cli
test
call
ss
lret
ds
fsubp
clc
in
repnz
out
loope
int
nop
sti
ljmp
cmp
aad
cli
fcom
ffree
dec
in
loopne
xlat
out
out
test
xor
aad
cmp
aaa
loopne
ljmp
orb
int3
decl
leave
rcl
xor
lret
fdiv
testl
mov
fsubp
ror
into
in
cmp
cmp
int
cmp
ljmp
hlt
hlt
movl
in
jecxz
xor
hlt
stc
fmul
in
ljmp
hlt
mov
faddl
jmp
jmp
hlt
test
aam
hlt
sar
loopne
out
enter
fsubr
fsubrp
int3
in
call
out
cli
fdivr
aad
cld
fcmovb
cmp
out
cli
out
out
rcr
jecxz
jecxz
cmp
cmp
rcl
shl
ret
aas
ret
flds
add
adcb
shlb
fnstsw
cmc
cmp
std
cli
div
loopne
rcl
fpatan
addl
in
int
cs
lret
std
cmp
sbb
frstpm(287
aad
cld
loopne
jmp
out
repz
hlt
jecxz
ss
fcmovnbe
xor
in
test
in
fisttps
mov
cmp
stc
hlt
stc
call
cli
jecxz
push
cld
fadds
fcmovnu
mov
lret
ss
lds
shr
int3
repnz
out
fucom
ljmp
mov
icebp
ret
shr
cmp
lret
ret
shl
in
sti
out
out
iret
lret
test
nop
fisubrs
jmp
sar
loope
div
cmp
aam
jmp
lret
jmp
xor
std
into
call
cmp
cli
out
shl
rcr
xchg
test
out
roll
out
xor
cmc
fidivrs
repnz
ds
test
mov
mov
iret
out
repz
stc
in
out
jmp
rcl
ds
cli
sbb
test
addl
fucom
shr
int3
cmp
int
out
loope,pt
fiaddl
iret
in
ljmp
out
neg
cmp
test
jecxz
shl
ljmp
iret
int3
call
xor
xor
lret
test
shl
std
shl
flds
out
int
sub
xor
lret
in
out
icebp
std
add
sar
jmp
in
out
lret
cli
loopne
fcomip
sub
clc
sti
out
neg
xor
leave
repnz
in
jne
movzbl
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
sub
outsl
les
add
aas
loop
xchg
jmp
xchg
xchg
jmp
xor
les
xor
out
cmp
out
lret
loope
jmp
lret
std
cli
into
std
nop
in
loope
lret
shl
cli
sti
repz
int3
rolb
xchg
lret
clc
nop
rcr
xchg
lock
fdivr
fdivr
adc
in
std
jmp
ret
mov
out
std
fcomi
in
lock
loop
aas
xchg
flds
mov
mov
ds
hlt
lret
xlat
rcl
flds
fyl2xp1
jmp
in
xchg
jmp
cli
hlt
cmp
in
cmp
loope
fcomip
call
mov
repnz
in
rcr
icebp
xor
loop
jecxz
loope
clc
fistpll
call
loopne
test
jecxz
clc
loop
xlat
xor
clc
shl
ret
out
ds
fmull
loope
jmp
jecxz
shr
in
aaa
fidivs
out
hlt
fldz
rcr
jecxz
mov
lret
lret
clc
leave
mov
sar
int
lret
cmp
cmp
repz
in
loop
lret
in
mov
jmp
lret
shl
jmp
in
das
leave
jmp
icebp
jmp
not
loop
test
cmp
xchg
cld
call
sub
ljmp
cmp
jmp
lret
test
repz
repnz
lock
ret
jmp
fldz
std
enter
out
adc
in
addl
icebp
xlat
int3
rol
cmp
fsubr
lock
fmul
ror
fucomp
out
sti
enter
test
jmp
sti
int3
cmp
cmp
sar
test
aad
leave
ljmp
xchg
ror
xor
jmp
stc
rcr
in
not
roll
les
fists
iret
leave
into
cmp
in
dec
lret
aad
jecxz
test
out
call
enter
out
imul
xlat
enter
out
sti
ljmp
rol
loope
aam
and
test
dec
ret
icebp
hlt
clc
aaa
shlb
cli
cmp
shl
idiv
iret
aam
repnz
mov
out
fcmovnbe
jmp
lret
in
mov
aad
aad
enter
out
xor
test
ljmp
xchg
loope
iret
hlt
ds
cmp
test
jecxz
leave
fcmovnbe
ret
mul
decb
ror
lret
xlat
icebp
out
shl
repz
in
aad
shl
out
aam
sbb
cli
fcmovu
int
test
jecxz
xor
ss
sar
stc
lret
enter
cmpb
cmp
lds
lock
test
out
sti
pushl
fstp
out
shl
aas
enter
fmulp
out
fimuls
lret
icebp
xor
in
aad
loopne
xor
fcmovnb
test
jecxz
test
in
jmp
xor
clc
loope
ss
xor
aam
xchg
fcmovb
cli
clc
ficoml
test
repnz
into
loope
sarl
cmp
xor
sbb
clc
int
xchg
out
aam
fld
ljmp
cld
xlat
shl
lds
fcompp
fiaddl
in
shr
ljmp
in
fucomi
cmp
sar
clc
aam
cmc
call
jmp
faddl
in
in
ror
cmp
shl
mul
clc
shl
cmc
leave
in
out
mov
fsubr
ljmp
int
not
repnz
into
cmpl
sar
mov
mov
fsubrp
xor
div
hlt
test
fdivrs
idivl
xor
aad
int
imul
lret
fisttps
jmp
icebp
sarl
fidivl
leave
call
out
std
cmp
movl
ss
ret
sarb
clc
int
in
in
cmp
repnz
hlt
out
xchg
in
adcb
rcl
fmul
call
stc
sti
loopne
rcr
out
test
xchg
ljmp
fucomp
into
hlt
xor
vpsubusw
aad
lret
int3
xchg
cmpl
int3
jecxz
fsub
repnz
icebp
int3
xor
aaa
in
fdivrs
int
shl
rolb
loope
out
std
xchg
test
int3
idivb
out
roll
jmp
mov
in
xor
hlt
aad
leave
stc
lret
cmp
in
into
cmp
out
mov
incl
add
ror
fcmovu
fcmovne
sbb
jo
push
lret
jg
add
cli
jmp
test
lock
iret
iret
shl
icebp
hlt
lret
in
movl
in
shr
adcb
fcmovbe
hlt
fmulp
sarl
aas
out
aad
test
and
jmp
int3
mov
orb
lret
int
cmp
lock
xor
hlt
call
in
clc
loope
mov
cld
lea
iret
xor
in
in
aam
cmp
out
cmp
in
out
std
jecxz
mov
mov
ret
shll
xor
cld
test
icebp
orl
cmp
jmp
ret
std
ljmp
call
xor
leave
stc
jmp
int3
jecxz
xor
clc
cld
and
cli
mov
fucom
lock
aaa
cmp
divb
into
lock
jecxz
in
loope
loopne
mov
loopne
icebp
aam
ftst
lret
call
jmp
cmp
cmp
std
addb
xchg
shl
fdivs
cmp
shl
in
cmp
mov
call
jecxz
xchg
into
xor
out
in
fucomip
leave
ss
clc
xlat
cmp
fcmovnb
lds
in
sti
test
int
fdiv
cmp
out
out
xor
rol
aam
neg
clc
xchg
xchg
aas
cs
int3
out
hlt
shlb
out
idivl
cmc
rcl
hlt
stc
les
test
icebp
jmp
iret
call
fdivrs
fcom
hlt
sub
cmp
xchg
call
test
xchg
xchg
hlt
sarl
xor
cmp
repz
aaa
cmp
test
xchg
ds
leave
jmp
mov
ret
loope
out
ror
int3
fcom
cmp
fcmovbe
fiadds
cld
inc
mov
iret
icebp
mov
repz
iret
repz
icebp
call
xchg
test
call
jmp
xchg
xor
in
cmp
xor
test
ror
out
loopne,pt
mov
std
adcb
jmp
in
cmp
cli
sarb
xchg
stc
cli
call
test
fdivrp
cld
aad
in
out
cmp
jmp
ljmp
roll
mov
mov
int3
int
in
lea
out
iret
clc
int
int3
repnz
into
into
roll
icebp
loopne
xchg
in
out
out
xor
jmp
ret
addb
fld1
leave
in
icebp
out
fadd
ret
shll
xor
xor
repz
out
rcr
cmp
clc
div
sti
loope
jecxz,pt
push
mov
loopne
xor
in
in
cmp
in
cld
ret
fincstp
rcl
sti
cld
test
aam
leave
lret
lret
xchg
xchg
ljmp
aam
repz
fcomi
fidivrs
in
ss
stc
fdiv
enter
mov
xchg
xchg
das
in
ljmp
repnz
fcmovb
repz
std
loop
fldl
xor
aam
cmp
cmp
rcl
repnz
in
addb
mov
xor
cli
cmp
sarl
repnz
cmp
cmp
jecxz
sti
mov
clc
in
fdivrp
fcoml
fdiv
idiv
jmp
addl
std
aas
fcmovnu
fmulp
repz
xor
ret
xor
xor
out
jmp
not
mul
addb
filds
jecxz
xchg
imul
cmc
lret
call
or
int3
ds
stc
xchg
mov
test
orl
das
xor
into
fcmovnbe
out
int
sarb
test
movl
dec
shr
loope
loop
sub
out
cmp
loopne
cmc
hlt
test
out
icebp
shr
std
leave
out
test
mov
xchg
test
enter
iret
rcl
clc
ds
aas
jecxz
in
fadd
test
loop
xlat
mov
addl
leave
into
stc
jmp
cmp
lret
loopne
out
loopne
ret
mov
int
in
test
loope
lret
mov
clc
loopne
aas
ds
cld
sti
mov
mov
loop
xchg
fisttps
stc
repz
xlat
out
cmp
ret
loope
fld
repnz
xchg
ret
xchg
shl
mov
xor
out
shr
cmp
rcl
sar
out
vpsubusw
in
enter
lret
iret
imulb
div
repnz
cmp
cmc
rcl
repnz
cli
icebp
clc
stc
fsubr
out
testb
xchg
jb
add
incl
add
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
in
neg
idivb
in
lret
out
repnz
add
jmp
xchg
in
in
out
lock
rcl
out
out
int3
into
testl
lret
aad
lea
xchg
xchg
rcl
jecxz
std
out
dec
addl
jecxz
int
loope
fisttpl
ljmp
out
clc
fcmovnu
aas
ror
out
out
aam
jmp
jecxz
lret
not
fdiv
in
fucomi
cmc
icebp
repnz
loop
fdiv
ret
stc
mov
nop
or
mov
xor
xor
ror
clc
loopne
ljmp
mov
cmc
ret
in
loopne
repnz
stc
xor
aad
aam
fdivr
in
neg
fcom
fdivr
lret
int
out
lret
shlb
cmp
std
int3
ss
rcl
aas
aam
out
testl
xlat
in
out
xor
in
repnz
cmp
in
aad
xlat
out
stc
fcmovne
mov
std
test
loop
jecxz
stc
out
std
aad
clc
rcr
aad
repnz
loope
enter
std
cli
out
rorb
ljmp
fcmovu
enter
incb
in
hlt
icebp
mov
jecxz
cmp
lret
lock
in
not
fdiv
shl
test
jmp
in
int3
cs
aad
lock
out
fld
mov
cli
in
xchg
fucom
xchg
xchg
lret
cmp
aam
sti
repz
cmp
out
enter
call
mov
int
out
in
xor
in
fdivrl
loope
fstp
icebp
hlt
fsub
xor
aam
out
icebp
icebp
iret
xor
fcos
ror
loope
rol
call
stc
icebp
cli
cmc
cmc
aaa
xor
fincstp
cmp
cmp
fsubp
clc
aas
test
std
in
movb
aaa
ret
lock
ljmp
sarl
out
fmull
jecxz
loop
xor
int3
repnz
in
fcmovbe
fdivr
fdivr
fucomi
jmp
out
call
sarl
int
out
icebp
mul
loopne
ret
ret
aas
out
in
lret
test
testb
shl
aad
shr
lret
icebp
or
shl
fcmovbe
loope
orb
loop
xor
icebp
call
aad
repnz
out
rol
hlt
out
fcmovb
xchg
out
xor
mov
ss
enter
out
ds
addb
jmp
fucomi
iret
call
lock
in
enter
cmp
fdivrl
sarb
cmc
rcr
jecxz
shl
loope
cli
fisttpl
out
xor
clc
enter
idivl
fcom
roll
enter
in
sub
shlb
fnsave
xlat
fistpll
fsub
clc
out
ljmp
rcl
into
aam
xor
les
xor
aas
hlt
fyl2xp1
out
xor
loope
ljmp
mov
cmc
shl
jecxz
call
faddl
fdivrp
in
flds
call
loop
into
sub
cmp
xlat
clc
jmp
cmpb
fiadds
fadd
fcmovnu
mov
aam
into
aam
cs
lret
cmc
iret
loope
ds
stc
hlt
loopne
lret
mov
repz
jmp
int3
xor
shl
out
aam
cmpb
fstp
test
in
sti
in
std
cli
incl
jecxz
loopne
repnz
int3
ss
cmc
cli
into
xlat
test
rol
rol
clc
cli
sti
sub
xchg
in
out
in
ss
repnz
cmp
cmp
flds
ret
sub
loopne
clc
fcomp
jmp
in
lret
in
jmp
into
cmp
cmc
fdivrp
cld
aas
loope
mov
mov
adc
sub
int
call
cmp
ds
cli
fcomp
stc
cmc
mov
xchg
ffree
ror
rol
xor
test
call
cmp
xlat
fcomp
mov
jecxz
test
loop
loope
xlat
jmp
loope
rcl
clc
out
loopne
rcl
or
mov
call
icebp
rol
hlt
enter
shl
add
xchg
mov
mov
leave
call
not
in
iret
cmp
int
cmp
in
std
fmulp
out
lds
aam
xchg
fdivr
out
enter
xlat
das
lret
sub
rorl
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
mov
jl
add
stc
shll
in
icebp
rcr
fdivp
div
repz
mov
into
int3
in
int3
xor
into
lock
shr
lock
cmp
ds
std
aad
ljmp
mov
out
out
out
cmp
in
in
idiv
aad
sarl
mov
into
lret
lock
iret
ret
repz
neg
icebp
cmp
roll
fcmovne
jmp
icebp
in
shl
cld
fdivl
call
cld
aam
xlat
fdivrl
clc
shl
lock
mov
in
repnz
inc
iret
jmp
pushl
stc
cmp
cmp
enter
leave
in
repz
cld
int
xor
enter
xor
int
cmp
std
loopne
sar
xlat
stc
out
testl
bnd
stc
int3
fcmovnbe
ror
rcl
ror
hlt
out
out
adc
rorl
xchg
incb
aaa
aam
repz
cmp
ret
ds
loope
xchg
leave
out
or
repnz
mul
lock
int3
lock
out
idivb
idivl
aad
in
ds
ret
icebp
loopne
fiaddl
shrl
idivl
cmp
jecxz
out
aam
xchg
vphsubdq
in
in
repz
cmc
fdiv
loope
into
clc
rcl
enter
leave
add
enter
adc
xor
jecxz
cmp
cmp
hlt
rol
cld
cli
cmp
ljmp
das
shlb
cmp
cld
jmp
lret
int3
loope
clc
add
jecxz
notb
int3
aam
in
xor
jmp
icebp
aas
aad
call
repnz
fildl
int
in
decb
xor
shll
jmp
std
cmp
rcr
ss
jmp
cld
aam
adc
cld
int
xacquire
in
cld
cmp
std
into
rcr
aam
mul
repnz
out
std
out
loop
out
stc
shr
repnz
cmc
out
fcmovne
hlt
fsubp
fcmovu
ret
mov
flds
test
rolb
ret
cmp
loope
cli
shr
lock
test
ret
in
enter
out
jecxz
ds
cmp
fscale
aas
out
fcomip
xlat
sbb
hlt
pop
lea
repz
hlt
shl
aaa
xor
xor
hlt
test
xor
in
mov
into
clc
icebp
loope
loop
fxtract
in
shl
out
xlat
neg
aaa
sar
std
aas
bnd
xlat
jmp
adcl
cmc
fst
lret
cmp
sti
out
cmc
cld
std
enter
call
int
int
cmp
xor
ror
in
testb
fadds
and
xor
fsubr
repz
lret
test
ret
sti
mov
fdivr
lret
jecxz
call
cmp
lock
clc
shl
rol
icebp
cmp
ret
sti
mov
fucomip
lret
in
and
jecxz
cs
fdivrp
cmp
test
mov
add
clc
in
test
add
jmp
lret
jmp
xor
cmc
lret
testl
and
shl
ror
in
ljmp
cmp
fst
cmp
movb
test
lret
in
mov
xlat
rcr
fcmove
int
ror
rcr
call
test
lret
hlt
shl
out
out
idiv
into
int
sbb
cli
loopne
call
mov
into
mov
out
dec
loope
test
rcl
iret
clc
fldlg2
hlt
xor
lock
jecxz
cmc
call
mov
in
jmp
cmp
cmp
loopne
fdiv
cmp
hlt
jecxz
ds
cld
mov
aaa
xor
aad
ret
cmp
cmp
into
addb
out
mov
std
xchg
xchg
xor
loope
hlt
xlat
repnz
jmp
sti
cli
cmp
test
in
fcmove
lea
in
repz
in
in
aad
shl
ljmp
enter
mov
adc
lret
cli
aam
sti
sarl
sar
aas
idivl
fdivr
idivl
mov
ret
stc
sti
fdivrp
std
faddp
out
aad
fucomi
into
rcl
rcl
xor
fld
sar
out
call
out
xchg
ffreep
fdivs
call
test
in
fcmovnu
cmp
mov
loope
in
loop
loop
nop
fsubrp
xor
cld
xor
cmp
fucomip
mov
mov
mov
mov
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
stos
insb
pop
clc
mov
jg
add
hlt
shr
aad
ret
loopne
clc
mov
out
mov
mov
xchg
ljmp
aam
ror
or
out
xchg
call
iret
lret
in
jmp
out
iret
icebp
cmp
out
jecxz
loope
ret
fsub
loop
out
jmp
cld
lret
lock
lock
jmp
ror
stc
enter
rcl
aad
jmp
jmp
xchg
xchg
mov
hlt
repz
out
aam
in
int
lret
rcl
mov
cld
std
testl
out
rcl
enter
out
aad
iret
loop
sar
repnz
lret
fisttpll
decb
cmp
out
rcl
in
repnz
fmul
shl
testb
fcmove
xchg
lret
out
clc
neg
and
icebp
icebp
test
lock
in
std
dec
or
jmp
enter
shl
xor
lret
into
push
in
fninit
std
loop
in
test
iret
out
xor
clc
shr
ljmp
aad
shr
aam
fsub
rolb
mov
and
xor
call
aam
ss
out
loop
loope
ror
mov
fmull
ds
cmp
sarb
lret
addl
repnz
neg
jmp
vphaddubq
fnclex
hlt
cmp
xlat
in
out
sar
in
icebp
test
add
call
mov
cmp
das
sub
hlt
xor
fprem
sti
jmp
clc
sbb
xlat
cli
cli
orl
mov
rol
in
shl
lret
loopne
shl
shr
cmp
loope
out
test
orb
rol
int
lret
sti
loopne
rcr
fsub
and
lret
loop
jmp
ljmp
cmp
int
in
adc
addl
orl
lock
roll
into
repnz
stc
mov
xlat
fucom
add
call
ljmp
xor
repnz
lock
std
fldpi
int3
xchg
out
iret
xor
clc
int
repnz
fdivp
cmp
lock
xlat
test
icebp
xchg
ret
xor
shl
idivl
fcmovu
shl
fdivrp
aam
mov
fcmovnu
loopne
in
cs
out
in
icebp
std
fsubrp
stc
fld
not
out
rcl
mov
stc
in
jecxz
cmc
and
in
aam
rcr
test
in
cmc
sarb
leave
lret
ljmp
nop
das
repnz
ret
rcl
call
jmp
adc
aam
xchg
out
in
cld
int
shl
in
icebp
sar
shr
aam
sti
fmul
fcmove
fsub
fsincos
ror
mov
clc
in
out
mov
icebp
int3
jmp
aaa
shl
shll
lret
sti
cmp
idiv
frndint
sti
sti
fmuls
adc
loop
ss
int
int
fdivl
aas
out
neg
in
xlat
in
aam
out
add
lret
mov
enter
xor
loop
std
leave
hlt
rcr
divl
cmp
mov
jecxz
lret
aas
out
cs
test
int3
into
shl
out
cmp
jecxz
test
xlat
test
enter
mov
lret
in
jmp
cld
aam
sar
addb
clc
orb
in
ficoml
les
in
cmp
loop
lock
ret
loope
out
out
call
clc
clc
stc
in
int
aad
loopne
repnz
aas
xchg
rcl
hlt
and
addl
shlb
xor
div
aad
xor
cmp
aad
loop
neg
into
shl
test
jecxz
stc
loop
leave
cli
lret
cmp
fdivrs
fildl
leave
loop
enter
mov
out
ljmp
rcr
lret
aad
fcmovnb
rolb
jmp
iret
in
mul
stc
int3
lock
aam
call
rcr
rolb
fcmovnu
into
ljmp
cmp
aam
icebp
lock
out
in
in
test
mul
lds
fucom
into
call
leave
ror
cmp
shl
clc
clc
cmp
test
addb
jmp
into
loopne
lea
stc
fistpll
fyl2xp1
sti
adc
aam
loope
fcmovb
int
cli
xchg
mov
icebp
loopne
rol
cmc
fcmovnu
or
ret
hlt
shl
clc
imul
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
lock
add
sbb
loopne
mov
mov
fsub
in
ret
lret
cli
out
add
repnz
mov
xchg
lock
sub
cmc
jmp
imul
icebp
std
fadd
in
stc
fcmovnu
test
out
mov
xchg
icebp
ret
ret
jecxz
fcmovu
cli
iret
rcr
repz
cld
fcmovu
mov
ljmp
mov
loopne
shl
in
aaa
out
cmp
aad
cmp
jmp
in
jecxz
lret
lea
into
icebp
fcmovnu
int
fxtract
in
in
cmp
out
testl
mov
ljmp
leave
in
int
aad
icebp
loop
test
rol
xlat
jmp
loope
out
aam
lret
icebp
std
in
out
clc
fcmovnbe
into
fildl
enter
sti
fcmove
cli
loop
out
repnz
aaa
fcmovnu
clc
cli
ljmp
cmp
cmc
sti
fmuls
mov
int
shl
xor
xor
in
ds
fdivrp
fsubr
xchg
jmp
out
lret
ljmp
xlat
loope
sar
testb
xchg
lret
in
sub
in
repz
lret
repnz
fsub
jmp
lea
out
into
sub
ret
out
div
lret
iret
fsub
cmp
cmc
fcmove
ftst
sbb
in
in
xor
in
rcr
cld
sub
aam
xor
leave
int
clc
int
out
jmp
mov
xor
in
repz
std
in
cmp
xlat
lock
hlt
les
jmp
sub
cs
fidivrl
lock
cmc
cmp
or
jecxz
fcom
rolb
out
xchg
sti
out
shl
jmp
imul
aaa
out
fmulp
aam
lock
std
mov
aad
xchg
mov
xchg
mov
sti
ljmp
fcom
out
into
aas
aad
hlt
in
jecxz
std
leave
xchg
call
loopne
clc
out
cs
cmp
shl
sar
repz
aam
out
orb
in
shlb
clc
sti
int3
jmp
cmp
out
stc
jecxz
cli
ljmp
iret
jmp
xor
fcmovbe
cmp
ffreep
clc
jmp
call
jmp
xchg
hlt
mul
in
xor
lret
jmp
iret
rcl
sti
mul
mov
xchg
lock
cld
repz
in
cmp
fsubr
cmp
rcl
fcmovnu
in
call
cld
rol
jmp
into
loopne
jmp
lock
shl
aad
cmp
jecxz
sti
cld
sar
sbb
shl
orb
xchg
ret
loope
cmp
ror
jmp
shl
int3
clc
repnz
cli
std
sub
lret
bnd
xor
das
std
xor
in
cld
shl
faddp
test
loopne
test
in
lret
rol
in
cld
lock
cmp
rcl
clc
jecxz
clc
addb
jmp
mov
loope
fadd
clc
cmp
fucomp
sti
repz
in
ret
xchg
cli
out
clc
out
lock
jecxz
out
xor
cmc
rcl
hlt
lret
xor
ret
aad
mov
jecxz
leave
jmp
in
in
fdiv
iret
ss
xor
jmp
xor
fdivr
fcomi
in
out
ljmp
das
iret
aaa
fdiv
divl
leave
int3
cmp
ret
test
jmp
mov
xor
cmp
fnstenv
xlat
xor
lock
clc
xchg
rolb
in
sub
cli
lret
out
in
cmp
sti
fcmovne
aad
shl
sti
enter
enter
decb
lds
cmp
out
out
std
xor
fstpt
aas
leave
in
xlat
test
iret
test
out
iret
xor
xor
leave
sti
sti
xor
cmp
fcmovnu
loope
fdivp
mov
ljmp
out
icebp
rol
enter
loopne
rcr
mul
sar
mov
clc
test
xchg
into
aas
sub
lock
out
lock
fcom
hlt
hlt
loope
aad
mov
in
clc
enter
xor
call
clc
lret
shl
add
aad
fdivrp
jmp
call
in
out
cmp
cmp
testl
out
cld
cli
cmp
shr
out
test
enter
aam
hlt
rcl
sar
cmc
jmp
inc
cld
jmp
iret
int
ret
fstp
sbb
js
jg
add
iret
mov
xchg
lock
leave
ror
xor
ss
repz
fidivrs
jecxz
loope
fsub
cli
out
cmp
xchg
not
out
enter
int
out
stc
sub
hlt
lret
fisttpll
incb
xor
iret
cmp
hlt
sti
cmp
cmp
shl
cld
fcmovnbe
out
out
out
in
xchg
loop
cs
lret
lock
shl
sti
rcl
ret
xchg
mul
shr
cld
jmp
fisttpl
shlb
lock
lret
clc
fsubr
cmp
hlt
faddp
hlt
fadds
orl
icebp
jecxz
in
jmp
fsubr
shl
cmc
int3
cli
cmp
ret
sti
lock
jmp
into
xchg
into
cld
mov
in
xor
call
inc
ds
fdivp
jmp
call
loop
jecxz
enter
std
lret
stc
aaa
sub
cld
out
testb
sti
and
xchg
lret
fsubrp
ss
call
jmp
rcl
fdiv
call
loope
ljmp
loopne
xor
enter
jmp
mov
and
in
in
fdivr
jmp
rcr
sti
lret
cld
repnz
int
addb
out
out
out
sar
out
lret
fldt
cmc
int
rorl
les
leave
rcr
loopne
xor
ret
aad
neg
cmc
neg
into
repz
rol
loope
loope
xchg
orl
in
xlat
shr
fdivp
cmc
aam
sarb
jmp
mov
int
enter
hlt
xchg
xor
loop
repz
out
in
xor
lret
ffree
fsub
test
les
jmp
int
enter
shr
aad
xor
lret
in
les
and
in
loope
jmp
mov
shr
ss
in
aas
repnz
fcom
out
div
cmc
hlt
hlt
in
cli
in
jecxz
jmp
mov
out
fcomi
in
out
aam
hlt
iret
aad
xchg
cmp
fiadds
sub
shr
jmp
idiv
cmc
cli
out
fdivp
ret
aas
icebp
aad
in
lret
fsincos
nop
mov
popl
in
hlt
lock
cmp
cmp
in
shr
clc
stc
mov
addl
aad
stc
cld
cmp
fcom
rcl
not
ds
rcl
lea
fisttpl
shr
cs
shlb
in
fidivrs
addb
ljmp
jecxz
repz
aad
sti
cld
shll
aas
xlat
xor
faddl
cld
stc
shr
aam
cli
xchg
cld
and
loope
in
repz
lock
repnz
fnstcw
cmc
fdiv
faddl
mov
test
fldl2t
enter
ljmp
icebp
orl
clc
sub
xchg
jmp
shl
call
testb
fucomip
loopne
adcl
nop
loope
sub
call
std
sar
cld
sar
xchg
mov
cld
or
out
xchg
aad
enter
iret
aaa
xor
fcmove
sti
in
fdivr
test
ds
test
lret
out
in
nop
out
sub
ljmp
loopne
into
cmc
fucomp
loope
xchg
out
out
loopne
nop
iret
fdivp
sub
loopne
xlat
leave
not
shr
int3
shr
shl
shl
xlat
ds
jmp
orb
jecxz
iret
ret
aam
aaa
out
fcomi
fldln2
lret
loope
lock
in
roll
in
mov
lret
enter
jecxz
sti
shl
shl
push
cmp
shl
vpsadbw
out
test
out
call
iret
out
ror
repz
out
cmc
aam
cmp
cli
imul
stc
out
in
in
mov
jecxz
les
lock
leave
cmc
cmp
in
into
fcom
fcom
and
incl
mov
in
repnz
repnz
clc
out
cmp
rcr
cld
fcomip
cmp
in
jecxz
in
hlt
std
in
out
fucomp
mov
aad
stc
out
aam
neg
fdivr
or
sar
sar
rcr
fmuls
addb
in
xor
loope
in
aad
stc
out
aad
lret
fcmovu
leave
int
repnz
jmp
int3
shr
not
cmc
cmp
loop
sub
ljmp
jmp
shl
lret
sti
cld
ss
loop
icebp
loope
jmp
int
jecxz
loope
xchg
les
test
ret
jmp
rol
sarl
rcl
mov
aaa
mov
jl
add
out
sub
leave
in
fcomip
int3
lret
ds
xchg
xchg
std
in
ret
loop
shl
call
out
clc
aaa
cmp
fcomi
fcmovbe
xor
fld
cld
jecxz
ljmp
aad
cmp
fldl2t
cmp
ds
fucom
rcl
leave
cmc
std
mov
jmp
into
jmp
fdiv
ror
int
in
into
in
xlat
cmp
lock
cmc
filds
enter
out
call
leave
test
sarb
fnstsw
rol
ljmp
xchg
xor
ret
hlt
sar
ret
icebp
iret
repnz
int
cmp
neg
stc
in
loopne
ror
shrl
ljmp
in
hlt
repnz
repnz
mov
clc
ficoms
cs
ret
sti
ret
int3
idiv
enter
cld
xchg
cmp
hlt
out
sar
ljmp
out
lret
rcr
leave
cmp
jecxz
addl
test
iret
call
test
cmp
jecxz
fcomip
push
aad
mul
ljmp
shll
icebp
xor
icebp
cmp
xor
xor
fdivr
cmp
shl
shl
cld
les
repnz
xor
ljmp
aam
repz
rol
mov
out
lret
ficoml
hlt
mov
rcl
fcom
cmpl
xchg
neg
test
ljmp
iret
loopne
xor
loope
ror
lret
cmp
ds
cmc
rolb
ds
ljmp
cs
xor
fucomip
clc
add
xchg
jmp
enter
out
loop
xor
lock
in
jmp
frndint
fucomi
adc
fadd
hlt
aas
sti
mov
call
jmp
in
in
repz
ljmp
cld
xchg
out
into
lock
ss
fxch
ds
ret
icebp
repz
cli
test
filds
lret
enter
fucomi
xor
iret
adc
addb
xchg
ror
out
aaa
xlat
leave
clc
into
cmp
clc
ror
fadd
rcl
test
test
mov
hlt
loop
repnz
fdivp
adc
fadd
loope
std
jmp
fadd
in
xor
xchg
mov
aam
neg
hlt
fstpt
stc
into
idiv
cmp
repnz
test
ffree
iret
mov
div
xlat
xor
xor
iret
filds
xchg
int3
lret
clc
sbb
loop
aad
xor
sub
sar
shll
fdivrp
lock
int3
aas
clc
ret
loope
cmc
lds
loopne
jmp
xor
jmp
mul
out
iret
fcom
int3
addl
iret
jmp
cld
in
ret
xlat
ret
cmp
lret
loopne
fcmove
loop
shl
xlat
fcomp
not
test
xor
lret
sti
cmc
fcmovnbe
clc
lret
cmp
fldl
idivl
clc
loopne
out
shr
jecxz
xlat
hlt
ljmp
std
iret
fdivrp
cmp
lock
aam
cli
stc
dec
icebp
sti
fdivr
aam
hlt
rcl
sti
out
call
repnz
icebp
cld
out
leave
orl
out
mov
ds
aad
sti
sti
ss
test
repnz
in
addl
mov
out
sub
lret
or
fdivr
xchg
jmp
int
stc
jmp
cld
lret
in
lret
ss
stc
lret
xor
icebp
int
fsub
ret
addb
out
loope
nop
out
repz
stc
icebp
into
cmp
cmp
fiadds
mov
cld
std
icebp
ret
jmp
fucompp
xor
stc
shl
rcl
icebp
sar
sti
stc
test
mov
out
repnz
in
ss
xor
out
enter
icebp
in
cmp
clc
fcomi
mov
orb
repnz
sti
cmp
sar
sarb
cmc
inc
fmull
in
adc
shr
repnz
xor
iret
cli
repnz
std
lret
sub
std
test
test
call
int3
in
jmp
rcl
xor
std
cli
iret
aaa
and
mul
ljmp
xchg
fmulp
repz
repz
out
cmp
jmp
in
repnz
shr
ds
mov
cs
in
cmp
jmp
iret
aad
aad
push
vpmacsww
mov
add
iret
fcmovu
sti
in
aam
rol
movb
fisttpl
shr
sar
xor
out
lret
in
aad
roll
loopne
fxch
enter
ljmp
ss
cmp
cmp
rcl
loop
xor
fsub
or
addb
jmp
xor
cmp
cmp
push
lock
mov
out
test
ror
in
stc
xor
in
clc
aam
cmp
cld
cmc
faddp
xlat
fucom
fisttps
jmp
enter
std
cmp
idiv
sti
repnz
sti
enter
mov
fsubrp
aad
fdivs
sti
cmp
aam
call
not
cli
shr
sti
cmp
stc
lock
xchg
lret
loope
out
loop
iret
out
ljmp
fdivp
mov
lock
aad
fldl
mov
out
jmp
out
lret
in
cmp
add
out
mov
lret
jmp
loope
fildl
loop
fld1
in
cld
aas
into
clc
fcmovbe
shl
cld
fildl
stc
cli
addb
shrb
jecxz
xlat
stc
lock
xor
aam
in
roll
fadd
jmp
loop
int
aam
rcr
out
hlt
fidivrl
sar
cmp
faddl
fchs
test
decl
lock
dec
sti
aas
fdivr
ffreep
ret
leave
aam
sbb
out
lock
aam
das
in
in
aad
aaa
sti
cmp
rol
neg
cld
xchg
lret
orb
lret
hlt
ljmp
xlat
fsub
shl
cmc
cmp
cmp
in
shl
fsubp
into
in
loop
shrl
jecxz
jecxz
xor
enter
clc
cmp
fcmovnb
loopne
ret
cld
in
stc
xchg
icebp
jecxz
xor
das
xor
shl
out
cmc
fucomp
lock
sarl
cmp
in
jmp
xchg
loopne
fmul
fidivrs
enter
sar
in
ret
std
mul
test
out
test
rcl
iret
fld
ret
loopne
shr
std
rcr
shl
dec
xchg
int3
rolb
out
fstpt
aaa
in
hlt
fcomip
flds
aad
cmc
loopne
enter
loopne
call
in
out
repnz
fdivr
fmul
ss
stc
loopne,pt
fdivr
test
std
movl
rcl
jecxz
fnstsw
test
fiaddl
mov
std
or
jecxz
lret
ss
repnz
rcr
add
sarl
clc
in
mov
cli
fadds
out
sti
ljmp
test
cld
test
mov
fadds
shl
lret
call
shr
leave
ss
cmp
jecxz
cmp
repnz
testl
in
cmp
out
std
out
repz
lock
rorb
add
jecxz
popl
das
mul
fcom
cmc
enter
rcl
repnz
movb
test
std
mov
shr
aam
iret
aad
cmpl
not
fiadds
ljmp
fdivp
shl
aad
fisubrl
repnz
std
fcomp
cmp
out
loope
enter
in
out
in
mov
jecxz
clc
fcmovne
out
cmp
clc
test
enter
int3
int
ljmp
fisubrl
cmp
test
hlt
test
fdivr
aam
or
icebp
fsubr
mov
into
lret
xlat
int
iret
xlat
cli
hlt
cmp
fnstsw
shl
xchg
aad
repnz
aam
leave
lret
ljmp
in
stc
ffreep
frndint
lret
adc
shlb
hlt
out
xlat
hlt
lret
out
jecxz
div
lock
leave
sti
aad
test
mov
jmp
xor
icebp
cmp
ljmp
int3
sti
fcmovnu
repz
lock
icebp
loopne
int
jecxz
int3
shll
out
sti
ds
cmp
int3
out
in
jecxz
lret
loop
lock
mov
cmp
out
lret
flds
loop
out
fmulp
ror
fcomp
mov
filds
div
cmp
clc
in
cmp
cmp
icebp
fcmovnbe
aas
cmp
cli
sar
hlt
ljmp
rcr
test
out
shr
cmp
int3
fcomp
fxch
repnz
std
in
test
decl
shl
mul
jecxz
fucompp
aam
ss
shl
imul
add
mov
mov
pop
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
jg
xor
std
add
xchg
mov
mov
xchg
xor
cmp
int
ss
xlat
sbb
icebp
rol
mov
cmc
lds
lock
loope
out
jmp
fmulp
cmc
lret
cld
aaa
mul
testl
fdivr
in
shl
in
cli
iret
rcl
xlat
xlat
rcr
int3
test
xlat
int
sti
fsub
leave
in
xchg
jmp
lock
fucomip
loope
fsin
sarl
in
ljmp
fisttps
aam
xor
fcmovnu
sti
std
shl
cmp
ljmp
sub
ljmp
repnz
div
ds
stc
out
roll
out
ret
loop
stc
lret
enter
jmp
int3
xlat
repnz
loopne,pt
sbb
xlat
xlat
aam
enter
orl
repz
lret
cmp
out
test
xchg
fmuls
xchg
xchg
cmc
icebp
in
rcl
ljmp
into
ret
sarl
loop
cmc
rcr
fisttpl
loop
nop
lret
ret
out
xlat
xor
idiv
enter
xlat
fincstp
cmp
aam
clc
in
xchg
mov
ret
test
loope
clc
clc
repnz
mov
cld
idiv
test
loopne
fnstenv
lock
xlat
in
cli
in
sti
adc
addl
lret
iret
iret
in
aad
std
lret
repnz
stc
xchg
cli
ret
out
mov
stc
nop
repz
int3
xchg
xor
loop
in
in
cmp
clc
fistpll
adc
xlat
test
repnz
out
test
xchg
cli
out
lock
jmp
cmp
fdivr
aam
ds
ret
imul
ror
sbb
fcmovne
repnz
int
xor
clc
shlb
cmp
fsubrp
fmulp
ds
sar
mov
mov
ror
cld
in
iret
shrb
lret
aam
idivl
cmp
fdiv
xchg
fdivr
or
test
das
lret
in
out
shlb
div
fxch
stc
enter
clc
repz
ds
idivb
ljmp
out
repz
stc
int
xchg
fiaddl
aad
ss
in
cli
iret
fucomip
lret
aad
cld
int3
rol
ret
leave
fdivr
filds
fmull
mul
cmp
stc
ljmp
iret
add
mov
rolb
int3
cmp
repnz
aad
shl
in
cli
idiv
out
xlat
leave
cld
ljmp
divb
cmp
shl
jmp
cmp
shr
in
xchg
repnz
mov
mov
mov
ljmp
enter
faddp
sar
out
clc
icebp
and
jmp
xor
icebp
int3
aad
rolb
xlat
rcr
ret
loope,pt
xchg
and
das
hlt
mov
in
int3
ljmp
jecxz
fcmovnb
loopne
loope
int3
decl
fsub
xor
out
int3
std
ds
fstpt
cmp
fmuls
jecxz
aad
fdivrp
out
cli
cmc
xlat
enter
ds
cmpb
mov
std
out
int
call
ret
aam
cli
int3
repnz
cli
loop
add
in
clc
test
test
rol
cmc
out
rcr
cmc
aaa
int
cmc
loopne
rol
hlt
ret
cmc
aam
out
fyl2x
out
test
cmc
fisttpll
cmp
xor
icebp
call
icebp
filds
xchg
mov
leave
int3
mov
into
xor
shr
xlat
stc
leave
aam
cmp
roll
lds
lret
call
out
xor
leave
aaa
std
fsubp
shl
aad
fldl
cld
jecxz
mov
out
xchg
fxam
fxch
fnsave
out
iret
xor
jmp
mov
out
fiaddl
ror
rcr
iret
ds
cli
in
loope
cli
fimull
cld
fcmove
mov
in
call
fnstcw
aam
rcr
iret
jne
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
dec
xlat
push
idivl
std
add
fcom
sar
loopne
test
mov
mov
aaa
aam
xor
xor
fucomip
stc
test
repz
mov
dec
in
fabs
clc
sti
sar
in
loope
xlat
vcmpps
leave
cmp
ds
repnz
repnz
leave
sti
xlat
lret
in
mov
shl
cmc
into
call
fdivrp
loop
ret
fst
fiadds
ljmp
int
lret
loope
xor
ret
ljmp
loope
rcl
ljmp
mov
cmc
out
iret
cld
lock
sarl
cld
stc
rolb
or
out
loope
int3
in
in
out
stc
jecxz
in
std
cmp
cmp
idiv
std
fisttps
shl
int
call
fucomi
ss
rolb
mov
jmp
ds
xor
leave
ror
sarl
test
repz
mov
stc
call
into
mov
sub
loop
clc
clc
in
cmp
lock
loopne
fidivrl
decl
xchg
addl
lret
xor
jmp
repz
fdiv
call
loop
lret
xchg
jmp
repz
lret
fst
repz
icebp
div
xchg
not
loope
fcmovne
mov
xchg
jecxz
fnop
ror
out
repz
dec
fdivrs
ds
out
hlt
out
mov
mov
xor
xor
in
in
leave
cld
xor
cmp
cli
cmp
jecxz
xchg
test
fucomip
loop
shl
xor
int
aam
std
lock
xor
lret
out
ljmp
xchg
xchg
jmp
ss
cmp
ljmp
icebp
xchg
xchg
jmp
xchg
ljmp
aam
int3
lret
aaa
into
cli
fucomi
stc
ret
test
incl
xchg
fists
ret
int
out
xlat
cmp
in
std
out
out
sbb
jmp
mov
aad
sub
leave
vcvtdq2pd
repnz
out
lret
aam
xlat
icebp
cld
call
and
push
int3
iret
repz
iret
cmp
neg
into
ljmp
fdivr
jmp
test
mov
fmull
xor
sub
fcmovne
sti
fdivrp
sarl
ds
fmul
fucom
fsubrp
xacquire
shll
in
and
in
loope
clc
in
test
ret
faddl
mov
shll
iret
cmc
into
out
enter
in
rol
ret
stc
clc
leave
out
in
loopne
mov
sar
ss
std
aad
clc
loope
into
cmp
mul
fsubrp
jmp
jmp
loope
lret
xchg
iret
hlt
hlt
cmp
fldln2
clc
bnd
cmp
shl
icebp
aad
call
and
aam
jmp
in
in
stc
ds
test
cld
out
filds
mov
enter
xor
sti
loopne
in
aam
cmp
ret
leave
iret
fiaddl
jmp
enter
cmp
cmc
rcl
test
loop
out
xchg
ds
call
cmc
idivl
std
xlat
repz
sti
fadd
sub
stc
dec
call
not
jmp
loope
xlat
cld
and
call
in
int3
cld
in
addb
iret
iret
aaa
imul
cmc
clc
ds
cld
xchg
in
sub
icebp
out
jmp
loop
cmp
in
call
cmp
xchg
testl
xchg
xchg
out
xor
hlt
fdivrl
idiv
xlat
icebp
loope
aam
ret
stc
jmp
std
leave
fsubr
les
cmc
shl
out
fcmovu
out
xor
and
cli
mov
icebp
cli
out
xchg
jecxz
sub
fcmovu
int3
clc
jmp
fdivrl
fld
inc
test
mov
aam
test
sub
repz
xchg
xchg
int
in
cmc
in
leave
aad
std
xor
lret
hlt
fsub
shl
fiadds
sbb
fcmove
in
repz
cmc
fstpt
sti
cs
int3
xor
shlb
add
jmp
jmp
enter
fstp
fstp
adc
inc
ss
or
jg
std
add
in
fprem
out
cli
loop
out
out
call
leave
in
repz
into
int3
hlt
iret
fsub
loopne
ret
out
fdivr
rolb
int3
xchg
cmp
into
xor
div
clc
hlt
cmp
clc
cmp
rcl
jecxz
test
jmp
int
out
sub
in
cmp
cld
icebp
fadd
ret
aam
call
lret
xor
ljmp
fcmovu
in
loope
clc
rol
hlt
faddl
mov
mov
in
clc
rcr
fcmovne
aad
fcmovu
rol
fsub
clc
cld
sti
in
clc
xchg
loop
aad
enter
out
cld
loope
rcl
hlt
lock
jmp
in
mov
sbb
lret
shlb
hlt
out
ljmp
loopne
loopne
mov
stc
fndisi(8087
in
mov
jmp
xor
in
cmp
sbb
adc
mov
fildl
in
mov
xchg
out
xor
repz
xor
out
cmp
and
hlt
in
fucomi
and
ds
mov
xchg
or
not
cmp
jecxz
std
icebp
clc
call
fmul
fcmovb
roll
out
in
out
xor
ds
xor
clc
cmp
cmp
cmp
iret
jecxz
cmp
xchg
mov
jecxz
loop
loopne
rcl
shlb
stc
fsubr
jmp
out
cmp
cmp
fsubrp
rolb
movl
xor
fadd
lret
call
ror
test
in
sti
in
fimuls
loop
aad
cld
repnz
adc
mov
mov
clc
fucomip
nop
icebp
std
in
repnz
mov
sar
lret
cmp
cld
icebp
fstpt
sti
aad
fimull
out
lock
xlat
out
sarl
cmp
ror
xlat
xrelease
ret
fstl
out
int3
cmc
aaa
stc
aas
cmp
cmp
std
cmp
enter
cli
xchg
test
int3
mov
out
int3
cmp
lock
lock
into
out
hlt
repnz
ret
mov
movb
xchg
in
loopne
fidivl
cmc
aad
fidivrs
lret
jmp
fld
cmc
repnz
fmul
leave
mov
test
loope
xchg
loope
ret
cmp
rcr
dec
out
aas
cmpl
repnz
dec
xchg
icebp
test
sub
loopne
sub
loopne
fcmovbe
out
rolb
cmp
faddp
xchg
movb
clc
faddl
hlt
out
xor
out
fdivrs
cmp
std
and
loope
stc
mov
xchg
out
out
test
aas
leave
lret
sub
into
in
xor
cmp
ret
icebp
repnz
cmp
inc
fmull
rcl
xchg
loop
out
shl
stc
stc
cmp
fcmovnbe
ret
ret
rcr
decb
popl
lock
in
into
sti
call
in
cmp
into
clc
loop
mov
lds
fucomp
fdivp
xlat
ljmp
repz
fucom
int3
rolb
loopne
addl
shl
iret
int
lock
ret
call
clc
jecxz
mov
ret
int3
rcl
out
ljmp
ret
rol
sti
xlat
out
cli
call
or
out
out
lret
cmp
adc
cmp
mov
mul
fucomp
loop
jmp
jecxz
mov
test
cmp
int
xor
push
jmp
out
and
into
mov
xor
imul
iret
in
in
jmp
in
sar
mov
in
std
call
fucomip
nop
lret
iret
jmp
das
repz
cmp
fsub
shl
cmc
cli
incl
sti
loopne
in
ds
xor
int
cmp
loope
ffree
loop
ret
jmp
mov
loop
ret
jmp
xlat
rcl
hlt
in
bnd
sar
and
sti
enter
int3
mov
shll
clc
int
out
enter
out
test
rcl
cli
dec
mov
sbb
fdivr
repnz
hlt
fld
lret
shl
out
in
aam
testb
push
jmp
aad
rcr
fstp
sbb
out
mov
jg
std
add
ffree
add
fiaddl
int3
xchg
lret
shrl
sub
cmp
clc
div
cmp
cld
aas
int3
shl
rcr
loope
in
icebp
out
iret
les
cmp
cmp
fmul
ss
stc
int3
addb
clc
cli
mov
ljmp
int3
aas
lock
aam
fcom
into
fiaddl
fcom
cld
fmuls
shl
hlt
enter
aad
int3
fidivrl
xchg
xchg
fucom
test
in
nop
int
sub
stc
xor
repz
cmp
lock
std
ret
sti
aad
mov
fcmovu
ficoml
ret
enter
fdivrl
std
fcompp
lock
ret
fistpll
neg
jmp
lret
jmp
loop
int3
out
cmp
aam
or
shl
fcmovnu
cmp
loope
enter
sti
loop
loopne
fldl2t
in
in
repnz
aad
stc
xlat
fdiv
incb
lret
out
sti
cmp
shr
xor
aad
rcl
cmp
cld
fcom
cmp
cmp
std
aad
ds
and
sti
enter
lret
in
xor
out
icebp
into
out
fmulp
clc
xor
rol
repz
in
dec
std
iret
repnz
loopne
ffreep
aaa
shrl
loope
lret
aam
ret
fmuls
idiv
xchg
mov
fstpt
int3
jmp
aas
not
cmp
aas
or
lret
ds
out
sub
icebp
xor
xor
repnz
cmp
repnz
aam
ds
fucomip
sti
ljmp
imul
sub
les
lret
ss
cmp
orl
clc
in
dec
shr
shl
aad
cmc
lret
cmp
ds
repnz
sbb
mov
mov
fsub
test
in
lret
ret
cmc
into
rol
sbb
fadd
sar
cmp
fcompp
ljmp
xor
fld
lock
std
rcl
xlat
fadd
shr
mov
fcmovb
rolb
cs
rcl
cmp
cmp
xlat
icebp
cmp
repz
repz
call
fcmovu
xlat
faddl
ljmp
cmp
sarl
call
or
out
out
shl
push
or
popl
ds
cmp
xor
into
repnz
in
out
rcr
in
cld
not
lock
cld
test
jecxz
out
lret
sarl
rcl
icebp
cmp
cld
fucom
xor
loopne
sar
rolb
std
out
in
jmp
lret
das
imul
ret
xor
leave
lret
in
out
fistpll
rol
cmpb
mov
loop
fmulp
jecxz
stc
fucomp
in
jmp
aad
dec
cmp
cmc
mul
ljmp
int
loop
ljmp
ljmp
and
shl
aas
aad
xchg
neg
fldl
in
mul
xlat
fidivrl
in
ss
aas
shl
dec
mov
jmp
call
in
repnz
cmp
icebp
repz
xlat
cmp
adc
loopne
fadd
cld
mov
sti
enter
shll
shl
xor
rcl
in
loop
into
repz
mov
loopne
in
std
test
leave
lret
ss
out
cmp
shl
fcmovbe
clc
ret
std
aad
orb
mov
call
out
hlt
ss
sti
into
cld
shl
std
aad
aad
ffreep
test
repnz
lret
out
hlt
sub
aaa
ffree
in
jecxz
shl
hlt
xlat
in
lret
lret
out
loop
out
aam
fcomp
leave
clc
cmc
clc
cmp
xlat
in
repnz
out
ljmp
cmp
into
cld
xlat
cmp
aas
sti
fadd
test
neg
or
ljmp
idivl
out
cmp
sar
cmp
sti
fldl
fucomip
test
shr
in
xchg
cmc
xor
cs
iret
cmp
xor
iret
int3
loopne
roll
fmull
xchg
clc
fmulp
iret
call
xor
lret
std
testl
test
fsub
xlat
jmp
call
loop
cmp
cmp
in
xor
loope
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
sarb
pop
or
jl
fst
lock
neg
std
ret
leave
mov
std
cld
leave
enter
leave
fstp
clc
out
sti
std
aad
fnstsw
fdivr
in
inc
loope
jmp
shl
in
repz
aaa
aaa
xor
aas
into
cmp
hlt
std
out
and
int3
out
in
fiaddl
stc
xor
enter
sar
ror
std
hlt
in
aas
xlat
cld
hlt
int
std
lret
nop
rolb
sub
in
fsubr
fidivrs
int3
cld
into
icebp
call
in
mov
sti
hlt
xchg
lock
test
cld
ljmp
add
clc
mov
stc
cld
ficoml
ds
into
out
lock
jmp
sarl
fcmovne
aam
clc
fndisi(8087
orb
shlb
xor
fdivr
fcmovnu
mov
rolb
iret
ljmp
rcl
clc
aad
aaa
cmc
in
shl
test
ret
test
loope
lret
xchg
out
mov
out
in
cmp
std
cmp
addl
out
in
xor
out
rcl
stc
das
lret
divl
in
testl
ljmp
lret
in
icebp
in
int
hlt
icebp
loopne
out
in
cli
fsincos
jmp
lock
int3
sarb
lock
loope
hlt
fcomip
rcl
std
rcr
aam
test
test
into
mov
std
xchg
sub
sub
xlat
xlat
xor
int3
fsubrp
aam
in
faddp
ret
and
mov
mov
shr
aaa
rol
xor
fcmovnu
out
fcomp
fdiv
out
ret
in
test
aam
les
std
xchg
jmp
call
shl
clc
cmp
iret
into
iret
idivb
or
jecxz
out
loopne
loopne
xchg
fmulp
lock
in
in
leave
xor
ljmp
aas
xchg
rol
cli
cld
fcmovnu
fiaddl
mov
cmp
aam
clc
cmp
adc
ljmp
mul
shl
int3
xor
xlat
lret
rcr
loop
fsub
mov
add
mov
fadd
out
push
iret
ds
rol
sar
clc
leave
cmp
cmp
cmp
clc
in
ljmp
in
out
int3
les
das
xlat
call
sti
cld
vpslld
aam
fcomip
jmp
call
out
ss
idiv
lret
clc
out
lret
jmp
loop
in
fcomip
leave
lret
orb
xchg
in
in
ljmp
stc
flds
rorl
lret
fcmovb
out
xchg
call
xor
xor
iret
shr
repz
fsub
mov
stc
ret
out
in
into
lock
in
hlt
sub
iret
jmp
fcmovbe
out
enter
in
neg
jmp
cmpl
call
mov
fcomp
leave
imul
repnz
xlat
jecxz
roll
lret
ljmp
shlb
sub
lret
xlat
lret
loopne
sarl
jmp
in
movl
fucomi
in
xor
sti
into
cmc
in
repnz
fld
test
orl
in
int3
fcmovnbe
ljmp
add
xor
hlt
loop
fmul
out
jmp
mov
out
ljmp
hlt
loope
in
std
stc
icebp
in
rcr
mov
les
in
std
stc
cmp
aaa
aas
xor
repz
ds
hlt
out
flds
loop
xor
repz
jmp
jmp
int3
cmp
shl
leave
repnz
stc
fnstsw
adc
int3
sarb
sti
aam
aad
test
std
adc
ret
clc
test
lret
sub
cli
into
xor
int3
repnz
jecxz
in
aad
cmp
fdivl
in
xchg
sti
ret
mov
std
jmp
rol
xor
cmp
fidivl
jmp
hlt
jecxz
icebp
out
mov
testb
rol
jmp
out
hlt
shr
sbb
out
loopne
aad
call
leave
xchg
xchg
in
call
in
jmp
out
in
aad
ret
out
rcr
cmp
rorb
loopne
sti
repnz
in
cmp
into
leave
cld
incl
stc
hlt
cmc
movl
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
jge
in
in
mov
jg
cmpsb
add
out
lret
mov
adcl
cmp
fcmovnu
rcr
rcr
divl
stc
leave
and
xlat
fcomi
into
out
or
div
in
lret
cld
icebp
hlt
stc
sar
out
test
loopne
test
int3
lock
in
shr
enter
std
in
cmp
in
lock
out
stc
test
iret
mov
out
out
aam
repz
cmp
int3
jmp
cli
out
ret
fdivr
icebp
not
shl
cld
loopne
fiaddl
ljmp
xlat
std
test
cmp
loope
sarb
cmp
xchg
lret
mov
in
test
ror
in
hlt
loop
cmp
xor
loope
fadds
lret
fisttpll
xchg
repz
mul
sarl
cmp
icebp
lret
into
cmc
int3
std
faddl
aad
enter
lret
dec
in
into
call
xor
ss
sti
int3
out
ret
out
xchg
fisttps
int3
shr
lret
ss
repz
aas
fdivrl
pushl
std
fcompp
sar
cld
test
ljmp
ss
fucomp
fcmovu
std
ljmp
aad
rorb
into
loop
rclb
xor
enter
loopne
lret
sti
fdivrs
cmp
mov
std
repz
aad
sub
leave
xor
stc
repnz
fcmovu
out
fadds
mov
xchg
decb
das
ret
rcl
jmp
cld
cmp
ror
ret
call
mov
mov
icebp
ret
xor
hlt
call
ret
aad
leave
testb
lret
fsub
hlt
sub
xor
stc
aad
out
loop
cmp
fildl
fcmovnu
loope
mov
mov
adcb
call
fcom
fdivrp
cmp
rolb
mov
lret
loop
xchg
in
xchg
in
xor
ljmp
clc
jmp
rolb
loope
out
iret
xor
iret
sti
ss
int3
fst
clc
cmp
int3
rcr
loopne
enter
shl
mov
cmpl
repnz
in
stc
fidivrs
aam
cmp
fcmovnb
out
fcos
sti
xchg
in
in
out
xchg
aam
les
in
shr
call
incb
hlt
stc
leave
lret
not
out
sti
fdivr
fdivr
shr
jmp
repz
jmp
fstp
aad
aas
cli
xchg
in
vpsubusb
cmp
int
in
in
in
jecxz
shrb
cmp
fistpll
test
call
fld1
jmp
xchg
xchg
xchg
repnz
cmc
out
xor
ds
out
xor
cmp
loopne
aas
in
jmp
lret
ror
aad
cmp
cmp
cmp
enter
idiv
icebp
or
repz
out
in
cmp
std
cld
fsub
out
std
fdivrl
sti
lock
jecxz
and
in
jecxz
fld1
ret
iret
loop
rol
not
sub
fidivrl
enter
mul
or
repz
in
loop
test
xlat
icebp
cs
xor
cmp
cld
ss
cld
loopne
xchg
aad
push
cli
out
xchg
ret
fldl
out
out
xor
hlt
cmc
fdivr
repz
test
xlat
mov
jecxz
clc
ljmp
shrb
bnd
lret
cld
sub
loope
in
jmp
test
mov
in
cs
lock
out
jmp
loop
adc
mov
adc
loope
clc
cmp
imul
jmp
aad
cmp
xchg
in
fcmove
mov
jmp
rorl
ljmp
neg
incl
out
clc
test
int3
mov
cld
fsubp
out
in
ret
cmc
neg
jmp
stc
sbb
in
addb
mov
xor
out
int
into
icebp
fidivrs
into
cld
ret
cmp
aam
lret
jecxz
jecxz
nop
icebp
xchg
cld
lret
int3
rcl
sti
fucom
clc
hlt
int3
shr
jmp
int3
shl
test
orl
repnz
sub
in
xor
iret
cld
aad
std
fcompp
xlat
loope
ds
mov
aam
lret
cli
xchg
fcmovne
std
call
cmp
loop
enter
loope
fucomi
div
aad
rcr
xchg
and
mov
mov
movzbl
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
les
lcall
jl
xor
ror
ljmp
cld
jmp
cli
cli
test
sti
loopne
xlat
jmp
addl
sub
jmp
std
jmp
cli
sarl
cmp
fadd
loop
mov
loope
out
lret
iret
aaa
stc
hlt
in
leave
repnz
call
repnz
jmp
lret
adcl
idivb
sar
hlt
stc
fdiv
cld
loop
mov
mov
iret
sti
test
add
fcmovnb
into
aaa
cmp
std
in
idivb
aam
in
xchg
flds
in
cmc
out
aam
xor
fcmovnbe
aas
loopne
aad
ret
fildl
loopne
rorb
loopne
test
sti
loopne
in
out
and
xor
out
cld
nop
into
jmp
stc
xor
xor
in
cmp
out
cmp
ret
movb
clc
xor
xchg
lea
fld
fnstcw
ss
icebp
cmp
hlt
std
rol
sbb
loopne
sub
and
jmp
out
ss
call
sarb
jecxz
loope
xlat
in
frndint
cmp
in
mov
iret
iret
rcl
rol
call
lock
shl
idivl
jecxz
clc
jmp
loope
icebp
test
imul
aam
aam
ljmp
lock
out
jmp
out
loope
in
xor
leave
in
fcmovnbe
idivb
loope
aam
fcmovu
cmp
out
lea
shl
jmp
cmp
rcl
cmp
aas
ret
mov
leave
clc
xchg
jmp
ss
xlat
std
shl
fcmovne
xlat
repz
and
in
fldpi
in
out
rcr
rcl
vpmulhuw
in
aam
out
loope
int
ret
std
test
in
sti
fucomp
orl
fsub
lock
ret
int
fcmovnbe
out
xlat
out
in
ljmp
into
ds
incb
xchg
loop
fimull
jmp
rcl
lret
cmp
cld
out
fsincos
mov
call
jmp
in
out
lret
cmp
cmp
cmp
lock
std
fstp
fmuls
call
in
ss
out
fcmovbe
fistpll
int3
cmp
clc
shl
clc
test
test
xchg
loop
nop
mov
shl
cmp
in
rol
and
sti
aas
clc
std
aam
idiv
orl
jmp
repnz
into
call
xor
icebp
hlt
enter
leave
call
in
xor
xor
lret
fnstcw
repz
fadds
decb
fdivrp
mov
clc
icebp
int3
in
cmp
int3
loope
shl
aam
cli
rcl
or
enter
test
lret
int
aaa
ljmp
mov
cli
ret
mov
clc
jmp
incl
hlt
aad
fxch
idiv
cmp
aam
icebp
aas
ret
leave
xchg
cmp
enter
xchg
fmul
int3
cmp
cmp
lret
cmc
iret
in
test
cmc
orb
xchg
xor
rol
leave
out
in
xlat
sar
frstpm(287
test
sti
std
inc
call
call
fbstp
out
std
ss
fiadds
aad
ljmp
xchg
orb
call
shr
int
fcomp
adc
div
sti
fucom
add
int
fadds
ljmp
out
sar
jmp
hlt
in
loop
ret
out
adc
jmp
in
hlt
das
shl
aam
lret
cmc
rolb
fiadds
addl
loopne
lret
xor
xor
int3
lock
cld
in
vpavgb
enter
call
jmp
ljmp
stc
cmc
aad
test
call
call
test
xabort
ljmp
xor
sti
mov
movl
aaa
faddp
ljmp
aam
aam
in
out
cmp
lock
fmull
out
sar
repz
sub
lock
ret
aad
call
aam
xlat
xlat
test
lret
test
loopne
test
xchg
hlt
jecxz
aad
xor
xor
int
in
inc
in
cmp
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
sarb
sbb
add
xor
aam
fucom
not
call
xchg
xchg
xchg
and
ljmp
not
sti
cmp
mov
cmc
mov
loope
xchg
cmc
icebp
fldcw
cmc
lock
in
aas
cli
adc
fucompp
add
movb
fsubr
in
lret
xor
out
out
test
cmp
lret
test
in
std
jmp
fmull
mov
cmp
test
stc
stc
hlt
imul
cmp
sar
inc
fadds
iret
sti
call
sub
loop
in
out
aad
fucomi
xor
jecxz
ret
out
aad
mov
shl
int3
mov
hlt
int3
lret
fdivrs
lock
cmp
xchg
jecxz
fisttpl
rcll
jecxz
int
aam
and
xor
flds
sti
fldl
mov
aad
rcl
hlt
repnz
loopne
in
aam
rolb
test
mov
in
repnz
xor
out
fmul
sti
xor
clc
in
fmul
add
in
clc
mov
lock
shl
cmp
ds
fucom
stc
loope
cmc
rolb
jmp
jecxz
sub
leave
in
shl
rcl
add
fcmovb
leave
sub
out
repz
call
aaa
faddp
rcr
aas
aad
fucomi
fmull
adc
stc
ss
lret
cmp
icebp
repz
shl
rcr
sarl
mov
test
in
xchg
loopne
loop
xor
cli
xlat
cmp
std
not
sar
fsub
fsqrt
fsubr
cli
in
fists
out
in
lock
icebp
out
repnz
xor
rcl
enter
loopne
iret
out
mov
iret
loope
aad
out
shl
icebp
test
leave
cmp
rol
sar
hlt
xlat
mov
pop
fsubp
iret
loopne
div
stc
loope
fmul
int3
cmp
in
enter
iret
repz
test
or
out
out
ficoml
out
sar
lret
lock
jmp
cli
rolb
ret
ffree
fdiv
out
xchg
hlt
shr
xlat
xor
fdivs
repz
cmp
cmp
in
in
jecxz
loope
call
mov
xchg
repz
in
iret
in
ret
xor
fdivrs
jecxz
iret
cmp
jecxz
movb
into
mov
into
hlt
in
cmp
cli
fidivl
lock
shlb
fcomp
leave
in
and
mov
ret
xchg
adc
shr
leave
repz
out
sti
imul
cmp
fsub
fmul
jmp
in
clc
cld
call
aas
in
ret
out
jmp
sti
rcr
xchg
loopne
xlat
sbb
cli
fdivr
sti
into
xchg
lret
in
out
fstpt
enter
lock
hlt
into
div
aam
call
adcl
stc
xor
cmp
lret
fsubrp
ret
out
repz
into
addb
enter
fmull
idiv
enter
jmp
aam
loop
aad
hlt
test
and
jmp
mov
out
shl
fst
ss
enter
fcmovb
rcr
ds
out
shlb
lock
xor
in
loopne
int3
aam
test
addb
ljmp
les
out
out
fmulp
xlat
cmp
rol
rcl
in
jmp
out
xchg
shr
ret
leave
rol
iret
cmp
xor
fsub
xor
xlat
idiv
and
call
lea
ret
out
out
stc
xor
jecxz
cmp
xchg
mov
stc
xchg
loope
sub
int3
jecxz
icebp
leave
repz
test
rcl
stc
rcl
cmp
movl
out
in
jecxz,pn
ss
shl
lock
hlt
cmp
cli
lret
loope
iret
out
dec
lret
out
shr
ss
not
int3
out
out
aam
neg
cmp
cmc
ljmp
lret
adcl
std
les
into
cmp
cmc
loop
hlt
shl
stc
call
mov
repnz
aad
ss
into
sar
lock
repnz
xor
ret
idiv
test
out
mov
out
loop
sar
icebp
leave
fdivrs
std
ds
inc
in
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
inc
push
jg
cmpsb
add
xchg
out
loopne
xchg
ljmp
repnz
vpsubsb
cmp
repnz
sti
fneni(8087
in
xchg
icebp
out
repnz
rcl
fidivrl
ljmp
in
mov
xchg
jmp
int3
mov
in
int3
xor
aam
call
adc
iret
mul
icebp
fisttps
out
std
leave
repz
out
xor
iret
repz
std
aam
xor
test
fcmovnb
sti
test
hlt
fadds
mov
xor
sub
repz
cmp
ds
int3
shl
fmul
out
faddp
iret
out
nop
loope
rol
jmp
repz
idiv
cli
sti
cmp
cmp
fdiv
lock
std
hlt
ret
in
fstl
sub
lock
fcmovbe
aaa
not
xor
roll
lret
loopne
adcb
fsub
aam
call
cli
aam
fcomi
cld
les
cmp
xchg
int
repz
jmp
ror
cmp
out
fildl
leave
in
fcmovnu
loope
loope
out
stc
icebp
lret
in
xor
in
test
in
mov
xor
xor
xlat
imul
jmp
cmp
cmpb
fstp
jmp
cld
loope
adc
out
cmc
hlt
fcmovne
icebp
loope
fidivrs
rorl
lret
lret
out
adcl
repz
call
fcomp
cmp
in
call
aam
and
lret
lret
mov
in
sub
xor
shl
repz
cmp
fdivs
stc
xor
stc
rol
cmc
lret
fisttps
rolb
out
into
int
xlat
jmp
neg
fisttpll
hlt
fcomip
lea
in
out
shlb
cli
aaa
iret
lock
into
int
add
aad
movb
jecxz
lret
xchg
lret
lret
iret
out
dec
int
iret
jecxz
aam
in
jmp
test
out
int3
icebp
jecxz
rol
loop
cmp
call
idivl
sti
addb
test
out
out
fists
stc
ljmp
std
int3
rcr
fildl
in
loopne
or
fisttpl
lret
clc
xor
in
lret
out
out
xlat
loop
lock
fadds
lret
out
nop
xchg
aam
sub
std
into
fdivr
cmc
int3
into
cli
aad
cmc
xchg
out
dec
jecxz
test
lock
call
cmp
aad
cmp
stc
cmp
incl
ret
cmp
aad
les
std
fucomi
stc
fdiv
and
ds
mov
in
in
leave
loop
and
ret
ljmp
aam
jecxz
int3
sti
xlat
loopne
shl
enter
jecxz
faddl
xor
leave
cmp
aas
ret
repz
fcmovne
nop
out
mov
shlb
xor
fdivrl
lret
ss
cli
jecxz
loope
fdivr
out
fiadds
jmp
into
fidivl
fscale
int
fsubrp
icebp
ret
jecxz
leave
orb
cmc
xor
lock
call
ljmp
std
div
repnz
rcr
fadds
lret
test
xor
ret
das
in
xlat
sarl
addl
test
jecxz
jecxz
xchg
lret
xor
xor
icebp
in
div
in
int3
int
clc
in
test
les
mov
xor
xor
jecxz
aas
lock
cmc
stc
lret
addb
in
ljmp
icebp
fcomp
fdivr
ds
ljmp
or
loopne
cmp
out
lret
ss
out
cmc
ljmp
loopne
repz
in
in
shl
out
out
iret
iret
out
xor
enter
out
out
vpsubusw
xchg
mov
out
jecxz
mov
std
mov
mov
in
int3
aad
hlt
clc
out
aas
out
fadd
lock
cld
fdivr
rcr
leave
dec
fucom
out
in
shll
stc
fcmovu
lock
jmp
loopne
lock
std
enter
in
fcomip
lret
rcr
vextracti128
cmp
into
icebp
out
out
aad
cld
int
std
sti
lock
shll
fldl2t
ret
add
leave
rcl
fst
leave
pop
push
call
jl
add
nop
icebp
xor
out
loop
aad
cmp
call
stc
loop
aad
int3
mov
xchg
aam
lret
hlt
in
in
icebp
jmp
cmp
into
rolb
hlt
and
test
fcomp
cli
hlt
xchg
rcr
cs
in
leave
xlat
lret
in
out
xor
in
jmp
loopne
addb
jmp
in
fdivl
into
cmp
ret
sti
faddp
mov
loop
sti
fldl
sub
lret
jmp
enter
aad
fxam
mov
nop
mov
ror
not
ret
shl
call
aaa
or
idiv
cmc
xor
loope
faddl
shr
xor
in
out
aad
xor
in
cmp
sbb
ret
mov
in
xchg
out
repz
out
lock
ds
cld
iret
cld
shl
xlat
xchg
icebp
lret
xchg
rcl
cmc
hlt
out
lret
call
rcr
hlt
fdivp
ds
cmc
cmp
decb
xchg
xchg
loope
repz
lock
xor
in
icebp
out
lock
jecxz
lret
test
test
iret
xor
cmp
aam
cmp
aaa
in
sarb
cmc
jecxz
adc
in
jmp
fsubrp
cld
aaa
mov
xor
xor
fcomip
aad
loop
repz
fmul
test
jmp
and
sti
sti
sbb
and
rol
aaa
xor
ljmp
in
and
mov
fprem
lea
in
shl
lret
in
jmp
cmc
loopne
mov
dec
in
cmp
sub
sub
clc
xor
repnz
lock
sar
test
sti
fnclex
div
mov
fstl
xchg
iret
test
leave
cld
aaa
out
repz
repz
xchg
aam
dec
test
loop
lock
xchg
jmp
fsub
in
cmp
rcr
iret
ffree
ret
ret
jmp
ret
out
xchg
loop
ljmp
iret
imul
shl
call
cmc
cmp
mov
fadd
ljmp
repnz
int3
div
cmp
cli
out
fidivrl
rcl
call
clc
out
lret
lock
rol
loopne
jmp
not
jmp
cmp
stc
xchg
in
cmp
lea
ss
repz
pushl
aad
cmp
std
div
aam
in
std
fisttpl
test
fmul
int
jmp
stc
cmp
repz
mov
test
subl
test
repnz
jmp
xlat
lret
cli
rcl
ret
int
loope
mov
cld
in
into
iret
jmp
repz
ljmp
in
out
lock
xchg
fucomip
iret
xor
rol
stc
fidivl
cmp
call
loop
testl
mov
lock
ljmp
hlt
iret
xlat
mul
clc
cld
icebp
in
ljmp
nop
in
imul
cmp
aas
fdivp
into
and
add
mov
enter
enter
cld
in
aad
cmp
div
fcmovbe
call
jecxz
into
fadd
neg
fsubr
out
or
icebp
jmp
fxch
cmp
cld
fdivr
cmp
mov
test
int
xchg
cld
xchg
lret
mov
rcl
into
lock
lret
aam
lret
std
out
neg
fdivrp
cmp
roll
mov
int3
loope
in
lret
cmp
xor
cmp
repz
cmp
in
in
fmull
mov
shl
fucomip
xor
stc
rcl
xor
bnd
sti
repz
sbb
fdivrp
call
repz
iret
jmp
icebp
fcmovnu
int
test
out
fxch
loope
mov
call
sti
ljmp
into
incb
xchg
ret
lret
sti
and
mov
ror
xor
stc
out
int
inc
cld
in
xor
stc
out
xlat
neg
in
loope
fsub
xchg
loope
call
out
iret
leave
ror
fcmovbe
rcr
test
icebp
loop
xchg
out
xlat
iret
clc
fdivrs
cmp
bnd
ffreep
addl
sarl
into
iret
cli
sar
into
xor
add
add
jmp
leave
sarl
rcl
int
mov
and
add
jg
cmpsb
add
stc
leave
icebp
cmp
repnz
les
fsubr
in
and
hlt
imul
jmp
in
clc
repz
mov
rorl
sti
mov
shll
cmp
ror
loop
or
aam
jmp
out
xlat
shr
aam
aaa
in
fdivp
fstpt
repz
rcr
call
fcomp
out
lea
out
xchg
shrb
repz
sti
in
aad
dec
test
flds
aam
cli
lds
ljmp
cmp
enter
out
rcl
int3
int
cmp
stc
fld
decb
call
ds
sar
jmp
cli
fdiv
cld
out
sti
and
shr
mov
and
out
mov
ljmp
hlt
jmp
jecxz
sti
aad
neg
lds
mov
out
jecxz
sti
in
cmp
aad
fcomip
cmp
std
add
in
icebp
fadds
into
ss
ror
iret
ss
cmp
ffree
cmp
rorl
dec
leave
test
xchg
iret
sub
enter
addl
neg
test
ljmp
out
rol
lret
aad
repz
rcr
fcmovbe
icebp
rol
rcr
cli
sti
ljmp
lock
lret
cmp
stc
xlat
hlt
neg
hlt
std
rcr
mov
lock
and
int
out
hlt
lret
lret
cmp
ror
repnz
aad
out
addb
rcl
icebp
shl
std
cmp
sar
out
cld
rcl
clc
mul
mov
out
lret
incl
in
fdivrs
cmp
cmp
test
call
loopne
test
test
fildll
lret
shlb
ds
fucomi
cmp
cmc
out
out
xchg
fsub
loop
jecxz
icebp
jmp
in
int3
lret
ljmp
loop
cli
leave
rcl
leave
call
in
icebp
roll
into
mul
in
out
int
lock
clc
xlat
cli
sti
mul
test
and
cmc
xor
repz
fnstcw
test
out
jmp
xlat
in
std
lea
rol
cs
in
into
out
out
jmp
cmp
not
stc
rcr
clc
in
cmp
fiadds
call
xor
cmp
ds
hlt
fdivr
xlat
fcmovnbe
leave
in
sbb
test
ljmp
sti
leave
and
cmp
fdivr
loop
lret
cli
xchg
movb
ss
fld
xor
ss
fldl
xlat
cmp
jmp
test
xor
xor
loopne
cmp
cmp
test
and
mov
mov
loope
fmulp
nop
dec
leave
out
loop
std
out
ss
aam
ljmp
adc
orl
ret
out
test
aad
hlt
cmpb
shl
decl
loopne
enter
subl
out
into
ss
stc
roll
sti
cmp
lock
and
in
imul
in
out
aad
xor
jecxz
shl
int
iret
icebp
into
out
out
mov
icebp
ror
aaa
jmp
fnop
aam
sarl
ret
jmp
sbb
repz
xor
out
in
fcmovbe
cli
xor
cmpb
lock
shl
xlat
roll
mul
rol
leave
clc
aas
jmp
jecxz
stc
fsubr
cli
jmp
enter
cmp
jmp
ljmp
fcmovne
icebp
fucom
out
ret
mov
sbb
out
rorl
iret
fdiv
out
cmp
lret
neg
out
ret
cld
fsubrp
ffree
xchg
and
lock
loope
fcmovnbe
shl
sti
rol
sti
fstp
mov
mov
fsub
test
leave
ror
aaa
into
rolb
std
idivb
loopne
enter
aam
iret
fcmovnu
repnz
shl
int
xor
cli
jmp
vpsllq
call
fstl
lock
aam
hlt
div
sti
cmp
ret
xchg
out
repz
movl
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
mov
in
std
orb
in
out
out
cli
cmpl
test
fmul
fdivr
cmp
repz
fdivs
aad
out
cmp
lret
roll
aam
ror
in
ficoms
enter
cmc
iret
aaa
fidivrs
int3
fsubp
sbb
cld
xchg
repz
jmp
clc
cld
xchg
std
mov
out
in
call
int
in
ds
std
test
fcmove
out
mov
cmc
fld
cld
xor
sbb
rolb
fisttpl
in
in
repz
cmp
in
jmp
cmp
stc
rcl
aad
call
out
mov
shl
xchg
jecxz
out
loop
icebp
shr
fcmovnu
cmp
sti
ret
lret
out
lea
enter
iret
repz
neg
shl
fsubr
out
ret
neg
mov
loopne
fmuls
in
fsubr
das
rcl
ljmp
repz
cmp
in
test
vpinsrw
jmp
enter
leave
xor
lret
xlat
cmp
mov
lret
int3
xor
add
aam
aad
aam
lret
rcr
icebp
fadd
in
call
cli
int
lea
xor
fcomp
cli
leave
std
repnz
cli
ljmp
stc
aad
ljmp
in
test
ret
xor
cmp
ds
aas
cmp
xlat
ret
test
fucomp
loop
mov
iret
repz
lret
xor
mul
jmp
filds
loopne
test
fcmovnu
mov
mov
ror
imul
xor
cmp
fchs
lret
out
test
clc
leave
aad
sub
loop
into
xor
aaa
repnz
in
into
icebp
std
call
jecxz
rolb
mov
in
mul
xor
xlat
ljmp
idivb
lock
jmp
out
out
rcll
xor
fcom
shl
testl
xchg
cli
test
sti
cld
int3
in
stc
fcmovne
icebp
dec
repnz
mul
aad
fmuls
ret
loop
enter
jecxz
ljmp
lret
cmp
loopne
repz
repnz
adc
shr
out
fidivrs
fcos
cmp
test
ffreep
fsub
test
aam
xchg
shl
dec
test
ret
hlt
lret
repnz
cmp
filds
repnz
call
out
fildl
test
iret
hlt
fidivrs
cmp
sti
test
test
lret
leave
ret
faddl
int3
jecxz
int3
cli
cmp
aam
xlat
ror
fdivp
fsubp
out
xchg
mov
lock
int
iret
jmp
icebp
sbb
aad
cmp
fisttps
mov
out
shll
div
xorb
stc
mov
leave
cli
nop
fdivr
call
aam
out
aas
hlt
loope
aas
int
out
inc
test
in
ljmp
xor
icebp
fisubrl
clc
repz
jmp
ret
ret
cmp
test
cmc
xlat
in
shr
out
out
xlat
ss
lock
cmp
fiaddl
loopne
test
icebp
shrb
out
jmp
shl
icebp
xchg
fdivr
in
repnz
fsub
xchg
xchg
fists
lock
jmp
ljmp
shl
test
nop
fucom
rorl
int
shl
aad
call
cld
ret
adc
idiv
mov
adcb
out
enter
call
fistpll
rol
test
fdivr
fcomip
int3
lock
divb
out
cld
leave
ss
aas
hlt
cli
in
in
call
jmp
int
loopne
decl
fdiv
stc
repz
cmp
int3
jmp
or
rcr
shl
loope
mul
lret
lret
nop
hlt
ljmp
jmp
iret
test
out
cmp
fst
aas
std
out
xchg
xchg
aam
fdiv
in
shl
leave
fcmovnu
fst
aam
ss
repz
cld
ret
out
addb
push
add
movl
jmp
sarl
rcl
rcl
rol
ret
out
push
jno
fsubrs
jl
addl
lret
out
iret
in
int3
out
cmp
jecxz
rcl
stc
jmp
int3
in
mov
rcl
ljmp
idiv
fiadds
in
cli
jmp
std
xchg
aas
icebp
cmp
shr
jmp
cmp
inc
shl
rol
shl
idiv
xlat
fildl
lret
lock
mov
xor
icebp
fidivrl
loope
ljmp
jmp
loopne
repz
ds
loope
test
lock
sti
cli
ret
mov
decl
leave
in
aam
lret
repz
shl
sbb
fistpll
jmp
aad
enter
mov
icebp
das
jmp
hlt
cld
repz
sti
shr
shl
fcmovnbe
test
std
leave
clc
fxch
fstp
ljmp
lock
fadd
ss
lock
cmp
fsubp
ret
leave
test
loope
loop
into
mov
fdiv
xor
sub
int
icebp
ljmp
xchg
rcr
fmuls
les
xor
out
fcomip
call
cmp
loope
ret
lret
mov
out
xor
enter
mul
jmp
ljmp
out
xchg
shrl
stc
mov
cmp
fsubp
incl
cmc
fdivr
ffree
fsub
nop
dec
loopne
xor
lret
jmp
sar
cmp
aam
lock
in
loopne
mov
repnz
jmp
das
repz
fucom
int
flds
clc
enter
call
dec
hlt
aam
clc
cmp
cmc
out
xor
fucom
fcom
cld
repz
sbb
loope
addl
cmp
xor
mov
fdivrp
cmc
lds
stc
lret
sti
cld
xchg
mov
in
loop
into
int
xlat
clc
cli
shlb
shl
xor
xchg
xlat
lds
repz
mov
call
jmp
int
hlt
sarb
out
jecxz
call
inc
lret
leave
and
ret
test
hlt
xor
fucomp
push
aas
fnstsw
out
sbb
out
jecxz
int
xor
lock
out
aam
cmp
ror
ljmp
lret
leave
mov
jmp
shlb
repz
int
ljmp
rolb
leave
xchg
xchg
div
stc
repnz
ror
fst
icebp
out
fld
lds
mov
xchg
sub
lock
out
jmp
ror
rcr
rcr
clc
out
fdivrp
out
jecxz
repz
xchg
into
rol
cmc
aad
stc
into
cmp
ret
test
and
call
sub
rcr
fmulp
sub
xor
jmp
lret
cmp
inc
xlat
fdivr
hlt
call
out
xchg
out
fcomip
rcr
vaddsubpd
fcmove
ljmp
mov
into
sbb
rorl
jmp
out
cmp
fcomi
fdiv
clc
fcmovnb
aam
testl
loop
lret
repnz
in
stc
cmp
aad
std
int
rol
cld
ljmp
test
int
out
stc
cs
stc
fdivrs
call
cld
ds
neg
int3
shl
xchg
ror
in
fxam
aam
lret
sarl
ds
cmp
fcomp
xlat
aas
jmp
fyl2xp1
out
aad
into
xor
xor
fcom
aad
idivb
aad
out
les
ret
std
in
out
lock
repnz
into
sar
not
roll
lock
jmp
fcomp
sar
faddl
cmc
jecxz
ss
in
cld
neg
xchg
rolb
jmp
call
shr
out
shr
std
call
aam
lock
in
ret
mov
mov
ljmp
hlt
loop
in
lret
fnstsw
cmp
stc
fxch
call
mov
shr
into
push
ror
sub
lret
aaa
jmp
in
test
mov
xchg
out
addb
not
sub
out
cmc
repz
faddl
int
in
jmp
repz
out
lea
mov
mov
jmp
sarl
aad
aad
aad
sbb
or
sbb
jg
cmpsb
add
xor
shlb
cmpb
repnz
test
jmp
sub
mov
xchg
fcmove
mov
xor
divb
into
lock
out
hlt
shl
in
icebp
fxch
shl
test
enter
cld
xchg
fsub
in
out
lock
lret
cmc
ljmp
test
dec
sar
jmp
ss
fstpt
iret
iret
ss
cmp
fadd
fst
aam
mov
mov
loope
mov
sti
jmp
lock
aad
rcl
clc
rorl
fdiv
lret
loopne
icebp
mov
fxch
cmp
or
loope
fst
sub
mov
enter
repz
call
sarb
std
cmp
mov
loop
into
out
lret
in
iret
loopne
xor
fnstcw
loope
sar
rol
cld
rcl
out
lret
mov
in
fmull
idivl
aaa
shr
out
cmp
roll
ret
jecxz
aad
stc
rcr
cld
loope
xchg
in
loop
ret
jmp
lret
hlt
loope
test
sar
cmp
std
jecxz
sbb
pop
shll
aaa
int3
out
hlt
aad
iret
cmp
aad
sti
aad
aam
std
cmp
ljmp
das
stc
aam
jmp
jmp
loope
sti
fdivrl
cmp
xchg
in
xchg
xchg
int3
stc
call
lock
ss
fdivr
in
std
hlt
in
ljmp
loope
jmp
jmp
in
idivb
cmp
xor
fucomp
ffree
into
in
sub
sub
enter
out
rcl
bnd
jecxz
iret
ret
cld
loop
test
loopne
xchg
mov
xor
ret
in
fcomip
repnz
fst
fdivp
ret
repnz
int
out
ret
out
loope
xor
int3
into
out
aam
into
xor
aad
mov
lock
in
in
mov
test
rcl
ljmp
repz
shl
xlat
hlt
test
fcoml
in
sti
icebp
cmp
cmp
xor
test
int3
sub
lret
fcmovb
xlat
jmp
cmp
sti
repnz
rcr
in
sti
lret
cli
stc
loop
xchg
call
neg
call
cmp
ret
and
cmc
jmp
jecxz
lret
loopne
das
ret
clc
in
in
fcomi
lret
out
cmpl
sub
std
sbb
icebp
sub
out
jecxz
xor
xlat
hlt
and
fsubrp
ffreep
out
fsubp
loope
jecxz
repz
into
nop
out
xor
shl
repz
xor
cmp
sarb
loopne
in
xchg
call
repnz
jmp
aam
lret
call
repnz
in
out
rcr
rorb
sub
xchg
bnd
ss
int
aam
fucomip
repz
loopne
xchg
cld
lret
out
xchg
ljmp
enter
aam
into
aaa
lock
repz
sti
repnz
sub
incl
ds
fcmovu
rcl
iret
div
jecxz
cmp
aad
test
jecxz
mov
test
xor
xor
shl
neg
in
repnz
repnz
loopne
test
cld
mov
in
fdivr
lock
aam
clc
out
in
shl
cmp
cmp
xchg
fucom
ljmp
fimuls
int
shl
cli
cli
aas
cmp
out
fld
out
fcmovu
out
incb
out
sar
leave
in
repz
icebp
cli
hlt
cld
fstp
out
clc
jmp
sar
ds
xor
aad
repnz
aad
loope
rcl
les
and
int3
sub
in
cmc
aam
cld
loopne
cmp
or
jecxz
jmp
fsubp
divl
std
jmp
enter
repnz
lret
filds
sar
int3
ffreep
mul
loop
cmp
fdivr
xor
xlat
out
add
aad
fcmovnbe
sti
fucomi
test
orl
out
iret
xor
fabs
loopne
loop
loope
std
sar
decl
sti
repz
jmp
cmc
fcmovne
cmp
out
adc
repnz
add
add
ret
fcmovnu
aad
inc
pop
inc
xchg
add
jg
cmpsb
add
adc
call
in
xchg
lret
in
lret
fmul
aam
jmp
sti
cmp
adc
in
jmp
cli
repz
rol
jecxz
rcr
les
into
loope
in
repnz
rcr
lock
cmp
loope
xor
out
jmp
aas
cmp
sbb
cld
lock
test
testl
aam
icebp
out
xor
icebp
call
cmp
cmc
aam
ds
aad
out
loop
out
repnz
and
clc
fld
sar
jecxz
lock
add
loop
mov
sub
fmul
not
not
out
cld
cmpl
aam
jmp
ljmp
out
xor
hlt
fmul
fdiv
repnz
aam
out
repnz
jecxz
shl
fucomp
xchg
ror
std
iret
lock
cmp
stc
aam
or
cmp
icebp
rol
in
test
sti
fdiv
sub
leave
leave
aam
cmp
out
repz
shl
ret
fdiv
aas
jecxz
loope
loop
popl
xor
icebp
lock
jmp
std
hlt
repnz
lock
in
jmp
out
lret
iret
xor
std
fsub
int
cmc
fcomip
cmc
faddl
fcmovbe
stc
hlt
out
jmp
decl
leave
jmp
lret
int3
cmpb
test
fldl
into
adc
aad
in
cmp
aad
out
rolb
loope
stc
clc
in
out
fiadds
loopne
shr
xor
leave
lret
icebp
cmp
cmp
cmc
sar
jecxz
xlat
enter
ljmp
imul
in
out
lret
lret
sarl
repnz
int3
call
jecxz
iret
xor
clc
aam
icebp
hlt
xor
cmp
repz
jecxz
aam
in
jecxz
out
mov
ret
leave
cmp
repz
repz
out
enter
rorb
xor
out
ljmp
xor
out
enter
in
int
fimuls
stc
shlb
cmp
test
mov
ljmp
mov
call
in
repz
movb
loop
sti
in
call
int
mov
jecxz
shl
iret
xor
lret
repz
xor
ljmp
clc
hlt
stc
lds
xlat
jmp
int
xchg
xchg
dec
in
repz
cmp
dec
addb
cld
test
in
mov
fsub
out
repnz
xor
cmp
lock
loop
out
cli
rcl
repz
fneni(8087
loop
int
in
mov
hlt
call
jmp
fmul
movb
icebp
mov
cli
mov
in
out
out
out
xor
lret
cs
fnstsw
into
leave
ret
ret
test
fsin
fmul
ljmp
cmp
sti
repz
repz
int3
cmp
idiv
movl
fcmove
into
mov
xchg
aad
ss
idivb
ror
aaa
fpatan
in
int
sbb
aad
shr
xchg
in
imul
sti
in
lret
into
in
leave
cmp
int
out
clc
cmp
fadds
fadd
std
out
sbb
jmp
rcll
leave
enter
lock
fcmovu
loop
orl
jmp
repnz
shll
int
fprem1
ljmp
repz
test
loop
clc
mov
fcomi
rolb
shr
test
neg
neg
xchg
fdivr
mov
xchg
in
fucomip
leave
fxch
jecxz
in
shlb
in
lock
loopne
fsubr
cmp
enter
cld
out
ret
fldpi
call
fsubr
jecxz
fdivr
cmp
loop
addb
jmp
ror
leave
cld
in
into
cld
cmp
lret
out
and
mov
ljmp
xchg
ljmp
cmc
lock
out
test
push
lds
out
mov
in
xor
ljmp
fildl
fabs
rcr
xchg
icebp
clc
into
out
call
icebp
vpor
cli
sarl
cmp
iret
out
jmp
out
aam
int
into
mov
mov
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
fadds
mov
int3
xor
cmp
fdivr
ror
les
cli
sub
in
icebp
repnz
stc
out
shr
aaa
das
iret
xor
ds
aas
out
fnstsw
mov
mov
sub
in
hlt
lds
enter
in
idivl
stc
cld
jecxz
mov
in
in
cli
out
clc
leave
out
jmp
rcr
stc
aaa
hlt
out
lret
fadds
cli
in
lret
fninit
enter
adc
xor
out
jmp
fmulp
ss
loope
sti
clc
mul
roll
mov
mov
aad
jecxz
cmp
int
into
aam
loope
mul
jecxz
out
sti
hlt
repz
out
mov
sub
loopne,pn
stc
xor
sar
cmc
out
jmp
cmp
out
aad
std
shl
jmp
xchg
lret
aad
aam
jecxz,pn
neg
repnz
sti
ljmp
mov
jmp
roll
cmp
cmp
repz
cmp
ror
clc
test
cld
xchg
into
enter
nop
imul
idiv
aaa
les
out
std
int3
fcos
out
shl
test
aam
mov
fneni(8087
sar
in
nop
fidivrs
cmp
out
cmp
shr
repnz
aas
icebp
out
out
mov
cmp
std
cld
ljmp
sub
fnop
in
aam
xlat
adc
shl
cli
in
xchg
mov
cmc
movl
xor
cmp
rolb
movl
xor
loop
int
lret
in
fadds
add
mov
repnz
jecxz
xor
in
in
ljmp
into
cmp
cmp
cmp
fcmovb
mov
loope
mov
clc
cli
cmp
fcmovu
shll
out
out
loop
repz
shl
jmp
testl
aad
enter
xlat
in
enter
rcr
ret
movl
sti
test
div
ds
call
cmp
shl
loopne
jmp
loope
out
leave
lock
xor
repnz
fcomp
std
icebp
aas
int
icebp
repz
out
leave
clc
test
in
jmp
leave
cmp
xor
shl
repnz
cmp
adc
call
mov
fxch
aam
aam
cmp
lock
int
fstp
sub
in
repnz
ss
idivl
test
shl
fdivp
mov
or
test
mov
cmc
sti
shll
cmc
repz
out
into
std
in
ret
and
xchg
out
fucomip
out
loope
mul
lret
in
iret
sti
cmc
cmp
loopne
test
xor
fcomip
in
icebp
std
xchg
call
in
jmp
in
ljmp
fadd
mov
loop
xchg
adcl
iret
hlt
cmp
repnz
out
sub
or
std
cmpl
shl
stc
shll
aaa
fdivrs
fucomp
cmp
fdivl
out
mul
mul
enter
leave
std
iret
loopne
int
fnstenv
out
aam
out
fcmovnu
fmulp
fcomip
fdivr
rol
cld
fdivrs
fsubr
clc
test
in
repz
leave
cmc
hlt
hlt
sti
in
push
ror
rolb
aad
cli
call
hlt
int3
int
in
jmp
aam
shl
vpaddusw
fldpi
leave
lret
mov
out
out
call
out
leave
int
rcl
cmp
leave
aad
stc
imul
fucom
xchg
loop
jecxz
loope
vpmaxsw
fstpt
into
and
roll
test
mul
jmp
jecxz
out
repz
jmp
std
out
aam
rol
int3
div
shl
cmc
xchg
cmc
ljmp
out
icebp
leave
xor
imull
fdivrs
enter
xor
test
in
out
enter
mov
xchg
sub
rol
stc
cld
jmp
jecxz,pt
roll
fsubp
mov
ret
hlt
call
ljmp
sarb
std
icebp
fcmovu
clc
loopne
ror
jmp
nop
fsubr
into
lret
xor
fcmovne
jmp
fcomi
cmp
add
xchg
aam
ljmp
nop
in
add
jmp
rol
int
fst
fcmovne
xor
mov
cmpsb
add
cmp
in
fdiv
repnz
xor
repnz
out
jecxz
incb
lea
in
into
sarb
cmp
fmul
enter
aam
xchg
cmc
jmp
xchg
mov
in
xor
divl
shl
ss
jmp
jecxz
ret
hlt
lret
rol
mov
fsubrp
loop
fsubrp
in
loopne
sti
rcr
shl
repz
clc
idiv
aad
fmuls
loop
cld
lret
mov
lds
ror
lret
stc
aaa
repz
std
xor
into
icebp
test
sti
int
loop
out
ljmp
fnstenv
xlat
iret
repnz
cli
loop
fsub
fcmovbe
cli
iret
stc
repz
mov
into
ljmp
cmp
lock
sbb
orl
idivl
aad
fidivl
stc
out
xor
cmp
fsubr
jecxz
out
icebp
jecxz
xor
jmp
hlt
clc
stc
out
int3
sar
into
testl
addl
call
call
cmp
out
dec
shl
clc
ret
std
inc
fcmovne
repz
jecxz
jmp
int
int3
jecxz
repz
push
cld
mul
cld
mov
loopne
icebp
stc
in
or
mov
sar
stc
cmc
shlb
sti
int3
std
aad
cmp
movl
mov
cld
shll
in
lock
shl
icebp
cld
iret
aas
cmp
in
testl
cld
sub
out
repz
fsin
cli
ret
neg
into
test
testb
int3
fmulp
rorl
iret
xlat
jmp
cmc
ljmp
out
icebp
in
ret
lds
in
loope
and
div
cmp
cmp
cli
idiv
shl
not
stc
sar
repnz
enter
in
loope
xorb
jmp
test
in
fsub
ret
xchg
iret
out
mov
leave
out
cmp
adc
aam
loop
sar
hlt
int
test
fisttpll
ljmp
ret
out
and
aam
ret
lret
iret
out
nop
aad
icebp
aaa
ror
aam
jmp
cmp
out
loop
frndint
clc
clc
int3
mov
mov
loope
hlt
div
sub
ret
fsub
xlat
shl
in
loope
ror
sar
aas
hlt
fistpll
neg
xchg
mov
xchg
call
out
sub
xor
xor
loopne
xor
lock
fcomp
lret
loop
in
jmp
xchg
xor
lret
hlt
cs
fcomp
cmp
push
sbb
stc
lret
in
mov
call
out
fdivp
out
ljmp
out
ret
ds
cmp
out
sti
fadds
jmp
xor
sarl
into
aas
cmp
cmp
in
fsub
rcr
fimuls
xchg
enter
out
loope
std
ror
cld
clc
aam
in
in
loopne
in
iret
lret
std
addb
xor
leave
std
xor
call
bnd
ret
xlat
call
cmp
fisttps
enter
clc
div
shlb
out
addl
jmp
into
divb
mul
xor
fcmovu
sarb
loop
hlt
iret
aad
ret
fyl2xp1
jmp
in
into
shl
cmp
fcmovu
out
xor
movl
into
icebp
xorb
jmp
ljmp
test
inc
test
cld
test
fcmovne
fadd
lret
jmp
mov
cmp
in
cld
sbb
addl
into
xchg
xchg
xor
jmp
xlat
testl
xchg
int3
mov
cld
loope
cmc
xchg
xchg
lock
repnz
ss
int3
cmc
fcmovbe
icebp
cli
jecxz
addl
loopne
xchg
clc
jmp
lds
in
sub
out
into
rol
fistpll
out
cmc
or
test
int3
clc
xlat
int3
sarb
cmp
cli
cld
fmulp
ds
hlt
repnz
flds
lret
in
int
cld
cli
cli
cmc
enter
icebp
sbb
rcl
call
out
mov
ds
jecxz
int
rcr
iret
aad
shl
pop
jmp
lret
ret
fstpl
fidivrl
shlb
inc
jg
cmpsb
add
out
sti
aas
in
leave
test
incb
repnz
xor
enter
cmc
lret
std
stc
fsubr
testb
faddl
in
ror
leave
hlt
ret
fnstcw
lret
stc
call
repnz
addl
call
xchg
xchg
sub
call
lock
loope,pt
std
cld
stc
out
aam
aam
cmp
clc
cmp
lret
not
out
lret
ss
fcmovnu
out
clc
aas
fnop
repnz
in
fcoml
int3
repz
lock
out
int3
roll
mov
fst
leave
fcomp
std
mov
fabs
xor
aam
cmp
fdecstp
fsub
ret
incb
les
lret
orb
cmc
in
lret
out
cmpl
stc
leave
in
fsubr
clc
rcl
fisttps
rcl
xlat
cmp
repz
std
fmuls
in
ret
repnz
hlt
ret
shl
cmp
ss
hlt
imul
loopne
fcmovu
xchg
in
or
in
cmc
xor
cmp
cmp
ss
xor
xchg
loop
ret
stc
loopne
test
lret
in
xlat
jmp
fcomi
xor
aad
fucomip
in
cld
sub
mov
and
icebp
jmp
fstp
lret
cmp
aad
cmp
std
jmp
fdiv
call
fcomip
test
lret
cmp
out
ffree
out
ds
out
jmp
loope
in
loopne
loopne
out
leave
fdiv
out
cs
leave
ror
sar
call
jecxz
stc
mov
out
leave
mov
mov
ljmp
out
fidivrs
xlat
push
aad
call
movl
das
aad
leave
lret
aas
call
lock
fdivp
lock
sub
mov
fsubp
cld
mov
out
jmp
rcr
fndisi(8087
aam
faddp
adc
mov
out
int3
xchg
in
sub
ror
shlb
cmp
repnz
ds
faddl
mov
mov
repnz
in
cmp
ror
lret
call
cmpb
ret
ret
faddp
lret
inc
incb
aad
ror
ffree
cmc
aas
testb
fadd
loope
xchg
lock
shr
int3
rcl
aam
icebp
xlat
hlt
jecxz
fdivr
cld
cld
jmp
jmp
leave
shl
shl
xor
jmp
int3
out
cmp
rol
cmp
leave
lds
lock
int3
shl
out
div
cmpl
cmpl
fadds
decl
mov
repnz
xor
ret
int
shl
loopne
test
cmc
cmp
out
enter
fisttpll
loop
ret
xlat
leave
aam
fadd
rcl
sti
sbb
mov
ret
fimuls
shl
lock
in
repnz
repz
iret
faddp
cld
mul
test
jmp
jmp
in
repz
xor
loope
icebp
out
aad
repnz
flds
cmp
orl
in
push
aad
in
in
ss
cld
jmp
shr
sarl
repz
loop
addb
aad
repnz
lret
lock
out
out
lret
icebp
loopne
hlt
jmp
repnz
in
fst
in
ljmp
jecxz
xor
hlt
jmp
lret
ror
clc
shl
jmp
fiadds
sar
cld
icebp
jmp
fldcw
xor
xor
shl
cmp
loop
iret
xchg
xlat
repz
out
mov
int3
xchg
mov
lret
shl
stc
cmp
sbb
fiaddl
enter
xchg
jmp
lret
enter
cs
ror
sarb
stc
in
sti
cld
ds
fucom
lret
sti
rcl
les
xor
cmp
loope
into
in
and
std
clc
fsubr
lock
in
leave
loope
fsubr
in
int
fdivrl
test
cli
cmc
sti
lret
test
out
into
aam
iret
ret
int3
lret
out
fidivrs
loopne
clc
sar
ljmp
repnz
xor
in
f2xm1
in
int3
leave
icebp
cmp
aad
fdivp
test
leave
ret
mov
jmp
aam
fcmovnu
mulb
rorl
jg
cmpsb
add
stc
fimuls
ds
stc
call
lock
xor
sti
repz
leave
ret
jmp
mov
xchg
int
xchg
int
lret
jmp
repnz
fisttpl
jmp
loope
shl
sub
loop
test
fcmovnu
leave
aas
aad
ds
fdivr
mov
xchg
sti
lret
into
clc
ljmp
cmp
int
enter
cmp
hlt
rol
cld
or
cli
mov
lret
loop
xchg
lret
ffreep
out
repz
lock
rcl
imul
repnz
out
loopne
aad
mov
sti
jecxz
int3
aam
ret
cmp
aaa
jmp
cmp
sarl
aad
loope
cld
loopne
enter
in
int3
icebp
loop
ljmp
cmc
clc
out
rol
fdiv
mov
enter
ret
test
xor
xor
jmp
sti
loop
cld
incb
fcomp
jmp
ds
enter
cmp
sar
fincstp
out
jecxz
ret
cmp
jmp
jecxz
cli
out
xorb
cmp
test
lret
sarb
push
iret
mul
sti
loop
enter
in
ret
out
stc
sub
jmp
fcmovu
aas
ret
ror
and
sbb
fimuls
mov
jmp
xor
ret
aaa
out
in
cld
fnstcw
aas
fdivrl
testl
cs
repz
cld
lock
fnstenv
cli
cmp
clc
into
fists
loop
in
enter
xor
loope
cmc
xchg
not
ret
fadds
mov
lret
test
cmp
ljmp
loope
test
fadd
clc
in
stc
lret
test
nop
loopne
into
loopne
hlt
out
int
out
dec
hlt
aam
les
idiv
enter
out
cld
mov
xchg
fcompp
in
icebp
fcomi
int
std
shlb
ror
into
repz
out
mov
in
lret
jmp
xchg
ret
icebp
int
out
fucomi
into
cmp
lock
shl
movl
mov
lret
jmp
lret
sarb
sbb
addb
lret
cld
in
icebp
shl
loop
loop
repnz
shl
jmp
cmp
call
loopne
ret
mov
mov
std
int3
addb
aam
out
shr
aas
jmp
in
cmpb
jecxz
decl
nop
out
test
aas
out
fucomi
ljmp
test
addb
adc
enter
out
enter
lret
aas
hlt
repz
repnz
in
int
out
xor
xlat
ss
jmp
loopne
xor
loopne
cmc
mov
rorb
stc
lret
iret
int3
aaa
cmp
aas
into
fdivrs
leave
hlt
aad
aam
leave
loope
test
icebp
xlat
shlb
mul
leave
idiv
jmp
out
loop
and
leave
jmp
jmp
iret
orl
lret
idivb
into
rcl
ss
clc
shl
ret
jmp
mov
out
mov
int
clc
ret
clc
fcom
ds
test
aad
leave
in
test
xor
jmp
icebp
stc
jmp
loopne
cmpl
add
nop
and
cmc
enter
in
idiv
clc
fsubrp
rcl
shr
loope
roll
fucomip
xchg
in
mov
xor
icebp
std
jmp
cmp
aad
aam
fdivp
xchg
enter
aad
in
out
aad
out
sarl
in
faddl
cld
stc
lea
or
in
leave
cmp
cmp
out
fmulp
into
ret
shl
aad
les
jmp
iret
imul
int3
in
leave
aam
std
clc
cmc
loope
out
int
inc
sar
cmp
loopne
xchg
shr
xchg
rcl
aam
clc
xor
iret
fistpll
cmp
cmp
loopne
sub
rorl
in
enter
out
out
leave
sti
int
sarl
in
or
lock
test
jecxz
les
cmp
aaa
enter
sar
ds
cmp
sub
mov
cli
into
decl
aaa
jmp
inc
call
mov
add
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
dec
pusha
xlat
jle
jg
cmpsb
add
hlt
lock
iret
ljmp
out
clc
xchg
call
loope
out
enter
rol
int
clc
sar
xor
ljmp
ret
sti
sti
aam
ret
mov
enter
cld
hlt
ret
aaa
loop
cmp
shl
orl
out
iret
lret
dec
iret
in
repz
cmp
lock
test
aad
sbb
xchg
test
mov
icebp
jmp
cmc
out
cmp
out
int
testb
ds
fldl
in
int
lea
cmp
lret
call
rcl
in
shl
sub
call
cld
jmp
das
loop
ss
fucomip
cmp
fnsetpm(287
loope
jmp
loopne
idiv
jmp
in
iret
xchg
in
xor
into
in
fld
fcomi
cld
cmp
incb
neg
mov
loopne
xchg
addb
fcomi
xor
fiaddl
sar
rol
repnz
out
mov
iret
sti
clc
out
lret
fstp
ds
cmp
neg
ret
cli
incb
stc
out
fisttpll
xor
ss
clc
fadd
cmp
addb
xchg
repnz
repnz
fnstcw
fnstsw
fyl2xp1
repnz
aad
mov
int3
in
lret
xchg
fmulp
aad
in
in
out
xor
jecxz
in
fdiv
fdiv
rolb
int
sar
fucom
ds
lret
in
repnz
fcomp
out
aas
ffree
rcl
aas
mov
lret
add
or
out
ror
call
call
sarl
and
into
flds
xchg
or
xor
aaa
ret
enter
cli
fdivs
repnz
ret
out
cld
addb
loope
fiaddl
fcmovne
iret
cld
cld
lock
into
ret
in
rcr
test
hlt
mov
jecxz
mov
cmc
xchg
ds
xor
hlt
cmp
jmp
loope
jmp
repnz
sti
aam
in
jmp
enter
xchg
in
lret
xchg
jecxz
lret
repz
cmp
repz
ds
stc
in
aaa
aad
stc
xchg
stc
loop
sar
shl
sub
das
fucomi
jmp
into
lock
ror
iret
ds
not
testb
in
fimull
in
int3
xlat
lock
aas
lock
rcl
out
hlt
cld
in
jecxz
xlat
jmp
mov
mov
hlt
das
sarb
shll
div
cmp
hlt
fmul
adc
ret
in
fiaddl
iret
std
mov
xor
shr
call
rcr
jmp
fstpt
cmc
ret
aad
ret
test
lret
jecxz
shl
adc
aaa
test
fcom
sti
out
fdivr
faddl
jmp
push
test
nop
out
int
call
cmc
iret
out
cmp
cmp
fisttpll
loop
jecxz
xlat
cmp
fdiv
rcr
into
aam
loopne
cmp
into
xchg
hlt
in
mov
into
mov
out
cmp
fdivr
cmp
in
shr
ret
icebp
stc
test
stc
inc
call
leave
in
cld
out
icebp
jmp
clc
iret
int
idivb
ss
xor
std
xor
fiadds
out
in
lret
aaa
int
shl
fxch
cmp
neg
iret
into
div
testb
in
cld
lret
call
lret
cmp
lock
rcl
fcmovu
div
leave
enter
out
lret
out
leave
icebp
rcr
jmp
lret
cli
cmp
out
aas
test
flds
xchg
orl
xor
in
cmp
aas
adc
loope
in
mov
loope
cli
popl
aam
sub
repz
aam
enter
fcmovnbe
stc
ret
cmc
mul
lds
mov
out
jmp
cmpl
jmp
hlt
out
into
sub
iret
mov
xor
ror
int
cmp
shl
cmp
in
cmp
repnz
loopne
in
testb
fsubrp
in
xlat
lret
fcmovne
hlt
idiv
ds
cmp
clc
xchg
loop
out
in
shl
aas
fpatan
fistpll
xlat
jmp
test
xchg
repnz
in
in
repz
cmp
call
andl
jmp
mov
jmp
iret
aad
aad
adc
lea
push
dec
jg
cmpsb
add
fadd
fcmovbe
rolb
cld
xchg
fxch
ljmp
loopne
into
aad
fnstcw
cmp
aad
shl
call
in
loop
in
fimull
loopne
int
fstp
in
sti
cld
cld
ss
cli
add
cld
xchg
xchg
fdivp
jmp
aaa
loop
jmp
cmp
cli
lock
loop
xlat
out
rcr
xchg
ljmp
xor
call
shl
ret
jmp
out
xchg
out
ljmp
repz
jmp
sbb
jecxz,pt
std
xchg
cmp
and
nop
iret
cld
or
out
aad
rcl
cmp
out
enter
cli
sarb
fsubr
testl
rcl
hlt
enter
in
lock
loope
out
ret
ds
sub
movl
ret
cmp
icebp
leave
icebp
cld
fdivrs
lret
fucomip
neg
xchg
sbb
cmp
mov
out
std
lret
enter
test
cmp
in
fidivrl
fcos
loop
ret
leave
dec
std
fcmovbe
cld
in
mov
das
out
xor
aam
clc
int
lock
in
xlat
ds
add
mov
loopne
shl
decb
xor
fcomp
fsub
iret
fcmovnbe
push
aas
fdivrl
jmp
fadds
xchg
lret
enter
in
rol
fdiv
loope
sar
aam
roll
vpmaxub
enter
nop
lock
jmp
xor
lock
aam
call
loop
in
test
ret
enter
cmc
hlt
hlt
aas
loopne
in
in
loop
jmp
shl
xor
lds
aam
icebp
fcmovnu
out
fldl
clc
loope
in
out
std
in
xor
jmp
loope
cmp
rol
testb
fadd
out
loop
into
in
in
lret
std
cmp
fdiv
aas
faddl
shl
clc
ljmp
mov
repz
vpsadbw
icebp
fdiv
sti
shl
rcl
cmpl
fsub
fcmovu
cld
hlt
clc
jmp
call
out
xlat
imul
jmp
lret
out
ror
ret
ret
cmc
icebp
loopne
inc
fisttpl
out
shl
sub
iret
in
fcmovnbe
icebp
call
cmp
test
mov
fcmove
clc
clc
or
and
out
in
ljmp
lock
in
jmp
aas
test
std
jmp
and
icebp
nop
xchg
roll
lret
clc
repnz
ljmp
repnz
call
cld
rcr
cmp
xlat
lock
in
loope
xor
cmp
fisttps
lock
sub
sti
out
cli
fdivp
xor
cmc
fucom
fimull
xchg
les
loopne
xor
ss
into
xor
aad
cmp
cmp
hlt
sar
cld
cld
fcom
call
lret
cli
mov
xchg
loopne
repnz
cld
aaa
imul
aas
rol
sar
shl
cli
sbb
loopne
dec
and
xchg
test
out
xor
cmp
fstpt
iret
xor
fcomip
sarl
repz
in
lret
fiaddl
xchg
rcl
sar
repnz
aam
cmp
ror
loop
out
call
std
out
mov
shr
jecxz
xor
xor
repz
cmp
rcl
lds
sub
xor
shl
lock
lock
incb
ret
fsub
cmp
in
shlb
lock
iret
std
imul
rcl
repnz
in
idivb
aam
repz
clc
decl
ljmp
int3
fsubr
aas
icebp
aas
ds
xchg
flds
call
out
aam
jmp
out
iret
fptan
loope
cmc
test
ret
xlat
test
mov
cmc
jecxz
cmp
fnstsw
xor
loopne
sar
repz
fadds
out
out
repz
cli
ljmp
imul
icebp
aad
cmc
hlt
int
stc
cmp
sti
cmc
xlat
call
or
lret
xor
rcr
int3
cmp
cmpl
sarl
aad
repz
stc
fxch
enter
jmp
xor
xlat
sub
cmp
fsub
aad
test
xor
loop
mov
jmp
mov
int
mov
ret
test
push
jg
cmpsb
add
hlt
jecxz
xchg
call
aaa
iret
hlt
shr
out
ds
fadd
cmp
idivl
aad
test
orl
xor
xor
fcmovnu
fadds
fcmovnbe
fdivrp
loope
lret
fcomip
lret
xchg
repz
into
aaa
xlat
cmc
out
fstpt
loopne
in
rol
aas
fsubr
call
enter
shl
xchg
in
call
cmp
fsub
enter
ffree
shl
in
mov
sti
cli
cli
loop
int
jmp
loopne
xor
clc
out
cmp
in
in
repnz
out
inc
sub
in
mov
rcl
cmp
cmp
cmp
or
stc
ret
jmp
fscale
shr
in
test
fsubr
icebp
cmc
in
lds
iret
jmp
loope
xor
into
in
fiadds
mov
xchg
out
fmul
fsubrp
fsubr
stc
imull
leave
fucomp
jmp
push
clc
loop
xchg
fcomip
enter
mov
std
cli
movl
dec
icebp
loopne
fcmovnbe
ror
rol
lret
fistl
mov
fisubrs
ljmp
rcr
out
loop
cmp
adc
sbb
cmc
out
call
aam
call
in
test
testl
iret
enter
stc
shl
jecxz
xor
in
out
xor
int
shl
jmp
fdivr
div
ljmp
call
icebp
in
cmp
clc
into
out
testl
jecxz
shl
call
sarl
rolb
ret
stc
in
cli
iret
fmul
xchg
mov
fld
lock
int
sti
jecxz
roll
test
out
mov
lret
in
int
aaa
jmp
into
aaa
cmp
sbb
rcl
testl
xchg
xlat
xor
aaa
enter
hlt
fcomip
cmp
testb
sti
fcmovb
shr
cli
xor
ror
ret
shr
leave
das
in
out
leave
lret
ds
rcr
test
leave
orl
out
int3
aad
out
ss
aas
icebp
sarb
rol
add
aam
cmp
test
cli
lock
das
icebp
ret
sti
fcmove
cmp
int
cmp
hlt
cli
rcl
cmp
enter
shl
mov
cli
aam
out
into
aas
or
rcr
shr
repz
jmp
imul
sub
icebp
lret
loopne
lock
lock
cmp
roll
fisttpll
loope
leave
cmc
int3
divb
lret
std
icebp
jmp
push
aad
aad
lock
fcomip
std
mov
clc
lret
cmp
in
aad
xlat
call
lret
dec
out
stc
xor
fucomp
fst
mov
in
leave
fisttpll
xchg
mov
stc
cmc
ss
cmc
shr
sar
iret
ret
ds
ret
in
icebp
out
shl
cmp
shr
aam
call
ret
aam
in
stc
xchg
mov
cmp
ljmp
fdivrs
aas
xchg
ret
mov
test
shr
xor
lret
not
hlt
fmul
sar
repnz
fld
stc
repnz
into
xchg
mov
fucomip
int3
cmc
out
out
cmp
leave
call
idiv
rcl
not
cmc
faddp
sti
lret
test
test
addb
aam
repz
cmp
jmp
test
fstpt
clc
and
test
mov
xchg
out
cmp
xor
lret
jmp
repnz
out
faddp
aad
hlt
stc
fstp
in
out
xchg
hlt
cs
int3
divb
sarl
ds
lock
out
cmc
into
fucom
fsubr
clc
loop
jmp
xchg
xchg
lock
jmp
xor
sar
std
repz
fiaddl
ror
fcom
cld
mov
fstp
int
divb
aad
xor
cli
xlat
call
into
fiaddl
fadds
adcl
aaa
aad
std
aad
cmp
add
sti
fmuls
cli
jmp
int
jecxz
test
ror
std
in
rcl
and
cmp
xlat
loope
and
fcmovu
xchg
mov
xor
std
std
shr
into
int
incb
xchg
jecxz
fucomi
xchg
xchg
iret
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
shlb
lock
leave
fdivr
xor
cld
test
ret
aad
idiv
ljmp
fldl2e
ror
cmc
std
cmp
loope
in
fistpll
xchg
decb
call
shr
repz
aam
in
neg
int
cmp
les
lret
mov
aam
aaa
xor
lock
cmp
shl
loopne
shl
fmulp
leave
jmp
in
stc
leave
out
xor
cld
ss
cmp
test
std
fucomip
fndisi(8087
stc
in
xchg
sti
adcl
fldz
std
fiaddl
clc
cld
jecxz
ret
xlat
lret
add
out
int3
xchg
lret
in
enter
stc
clc
std
stc
hlt
cmp
add
mov
mul
fmul
hlt
fsubrl
ret
jmp
aad
lock
shl
in
rcr
ret
fidivrs
cld
mov
loop
out
mov
xor
stc
out
shl
int
loopne
neg
and
loope
ret
fiaddl
shr
xor
in
lock
xor
cmpl
in
imul
cli
mov
mov
xor
jmp
loopne
lret
fcmove
frndint
not
xlat
iret
sarb
repnz
fcos
jecxz
sti
out
hlt
cmc
out
rol
cmp
repnz
in
lret
loop
loope
fcomi
loopne
jecxz
and
lret
roll
aad
sti
ret
div
ror
in
ret
rcr
sti
incb
enter
xchg
cmc
in
xor
shl
xor
lret
fcom
hlt
fsub
aam
and
xor
cs
repnz
fucomi
cmp
cmp
rcl
in
lock
jecxz
loope
fcmovu
fmull
out
leave
shlb
lret
int
in
cli
aad
out
lret
std
fprem
xchg
stc
hlt
jmp
jecxz
iret
ljmp
xor
out
rcr
sti
neg
cmc
cmc
inc
add
leave
int3
adcl
fsubr
cmp
fyl2xp1
cli
int
ror
int3
hlt
roll
out
ftst
fsubrp
xchg
decb
rol
out
jmp
imul
sti
cmc
cld
xchg
cld
loope
fucom
mov
xchg
loopne
lret
leave
xor
cli
neg
cmp
ljmp
in
sti
ret
mov
sti
loop
ror
xchg
cmp
sub
xlat
lret
int
fcmove
fnstsw
clc
test
cmp
ljmp
mov
into
jmp
jmp
shl
ljmp
loop
in
out
xchg
fdiv
fucom
iret
icebp
shr
rcl
ss
repnz
cmp
sti
out
loop
loope
lock
call
mov
loopne
ss
aad
hlt
aad
lret
loope
rcl
repz
loope
jmp
ss
xor
cmp
into
cmp
fcmovne
fcmovbe
incb
call
rorl
int3
xor
lock
fst
loope
int
in
test
out
in
leave
enter
ffree
loop
xchg
jecxz
call
int3
shl
sti
hlt
sarl
cmp
decb
out
fldl
stc
sti
sar
out
lret
ret
jecxz
lock
jecxz
call
nop
mov
jecxz
cmc
iret
in
cmp
cmp
stc
in
aas
test
fcomip
jecxz
test
lret
test
leave
lock
loope
loop
icebp
std
repnz
cmp
repnz
fsub
sub
les
int
lret
aam
cmp
call
fstpt
cmp
cmc
out
fistpll
jmp
mov
int
xchg
cld
mov
xor
jmp
push
addl
flds
out
call
xor
lock
aas
cmp
std
mov
fucom
ret
std
jmp
lea
fnstcw
int
call
cmp
rolb
enter
addl
xor
repnz
xlat
ret
xor
cmp
and
leave
movb
hlt
shl
out
cmp
rol
xlat
adc
aam
fst
mov
sub
repnz
sub
xor
lret
divl
jecxz
ds
rcl
cmc
mov
lret
loope
std
mov
fdivp
divl
lret
int
xor
jp
jmp
inc
cld
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
cmp
cmpsb
pop
jg
cmpsb
add
adc
iret
adc
faddl
std
in
loop
aam
repz
out
aaa
fidivl
xlat
cmp
cmp
cmp
enter
in
test
or
xlat
lock
out
rcr
hlt
jmp
stc
ljmp
xlat
aam
fiaddl
xchg
into
lock
int3
leave
in
call
cld
fsubr
cmp
xchg
in
sbb
fdivr
repnz
loopne
lret
xor
out
rol
leave
stc
int
test
xlat
aam
add
loop
fadd
stc
jmp
nop
les
shl
call
shll
aas
loop
loopne
fucom
rcr
fmul
movb
mov
xor
leave
cmc
aaa
out
cmp
out
out
iret
sarb
cli
lret
aam
cld
cld
in
call
ljmp
in
out
cmp
icebp
clc
ret
into
addb
cld
sti
cli
fmull
ds
in
in
in
iret
out
addl
loopne
fadds
aam
repz
shll
std
fcmovne
jmp
stc
aas
cmp
xlat
loopne
in
std
mov
out
test
repz
xor
leave
fidivrs
shl
fmulp
fprem
cld
xchg
std
mov
mov
in
int
icebp
out
in
icebp
ljmp
ret
fcomi
aam
cld
hlt
std
jmp
orl
hlt
sar
fidivl
inc
loopne
loopne
xor
fdivrp
in
loop
loop
ljmp
fldz
not
fcomi
sti
out
into
into
cli
cld
sar
repnz
aad
and
cld
sub
int
cmc
iret
xor
shl
cmp
not
clc
test
cld
test
fmull
loopne
roll
in
in
lret
iret
jmp
aad
cmp
loop
cmc
mul
jmp
mov
out
fisttpl
fdivs
mov
in
adc
loop
mov
mov
out
adcb
loope
shlb
fnsave
xor
repnz
cmp
fcmovnbe
in
loopne
mov
in
std
leave
rorl
jmp
aas
loope
addl
cmc
hlt
fyl2xp1
fld
fxch
nop
loopne
orb
in
cmp
jmp
int
fnstsw
testb
enter
int3
aad
repnz
repz
dec
iret
faddp
fdivr
std
shr
ffree
loopne
out
out
loopne
xchg
rcl
shlb
lock
cmp
or
ds
add
shl
mov
iret
repz
icebp
shll
ror
xor
rolb
icebp
lock
test
leave
hlt
repnz
into
iret
lret
ljmp
cmp
xor
movl
out
hlt
in
mul
fnstsw
out
mov
fdivr
xchg
mov
ss
in
ss
ror
in
hlt
cmp
loopne
aam
in
mov
or
into
repz
loope
repnz
cli
fsubr
xor
cmp
ret
ljmp
push
sub
in
sti
vpmulhuw
rcr
aas
icebp
xorl
xchg
ffreep
ret
loope
mov
fiadds
fisubrs
stc
hlt
cmp
iret
out
fdivrs
stc
sar
stc
cld
ss
clc
call
xlat
jecxz
int3
fucomp
mov
ss
xor
aam
enter
cmp
or
aas
loope
in
in
xchg
std
jecxz
lret
stc
out
cmp
mov
cmp
out
into
rcr
test
flds
int
enter
ror
cmc
iret
out
lret
fldz
rol
in
cmp
cli
cmp
repz
fdivr
fiaddl
repz
sarl
in
ret
jmp
clc
aam
aad
aas
out
loop
ljmp
jmp
int
out
in
out
div
loope
and
test
ljmp
xor
in
fnop
fnsetpm(287
lret
lock
cmp
loopne
cmp
cld
out
fdivr
mov
test
ffreep
mov
xor
loopne
stc
fcomp
out
repnz
loope
repnz
shl
test
incl
jecxz
mov
aam
int
in
enter
cmp
loope
test
cli
xchg
loopne
fcomip
shll
jecxz
xor
div
std
icebp
aam
ds
add
add
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
pusha
jg
cmpsb
add
enter
enter
mov
jmp
out
aad
std
aad
hlt
sti
test
xor
in
and
adc
int
xor
lret
cmp
fcmovnbe
cli
lock
cld
cli
loopne
mov
call
imul
cli
movb
loopne
leave
fidivl
out
hlt
sti
cli
lret
fsubrp
clc
hlt
in
mov
clc
call
repnz
jmp
cmp
fptan
ret
fmul
in
sti
call
in
jecxz
nop
nop
xlat
rcr
stc
xor
out
test
cmp
in
in
out
jmp
shl
repz
aaa
enter
out
idiv
cmp
loope
aas
fcmovu
out
test
xlat
hlt
in
fmulp
int
in
shl
nop
sub
repz
aad
repnz
int3
cld
out
fadd
fucomp
fucom
ret
call
test
addl
xlat
out
aam
cmp
shl
fdiv
aam
lock
out
xchg
xchg
in
cli
xchg
ret
cs
xor
rcl
cmp
ret
neg
sar
in
enter
out
xchg
into
nop
hlt
aam
loop
into
in
ss
jmp
loop
in
sti
ret
out
loop
orl
xchg
repnz
lock
in
xor
aas
and
out
aam
lret
mov
iret
mov
int
call
clc
in
repz
cmp
enter
enter
shl
in
mul
rcl
ss
out
xor
leave
shr
sar
out
repz
loop
mov
or
in
das
hlt
iret
aaa
in
into
idivl
xor
std
jmp
loope
mov
xor
jmp
xor
rcr
in
cld
lock
lock
in
in
loopne
lret
out
mov
jmp
aaa
stc
cmc
cld
icebp
cld
loopne
addl
sti
hlt
fdecstp
clc
popl
xor
cmp
into
enter
rol
fadd
out
aad
incl
xchg
in
cmc
lret
out
fdiv
in
cmp
xor
div
jmp
loop
aad
call
test
nop
rcl
xor
in
aam
jmp
sbb
jmp
vpminub
xchg
xchg
sub
repz
sti
xor
call
out
aam
jmp
enter
out
lret
lret
nop
test
iret
hlt
int3
ljmp
idiv
shl
out
iret
sti
fiadds
out
xor
ss
aaa
fst
test
cmc
mov
out
xchg
iret
out
ret
xor
fdivs
int3
div
ljmp
repz
orb
in
in
int3
cmc
loope
xor
stc
cmc
repz
lret
sar
jmp
lret
in
loopne
mov
ds
xor
xor
out
aam
ljmp
xchg
fsubr
cli
loope
out
xchg
loopne
fmull
in
rcr
int
fcomip
add
cmp
xchg
std
std
test
in
test
fdiv
cmc
fnstsw
aam
loop
ret
mov
fmulp
in
shr
das
jmp
loopne
cmp
icebp
into
cli
sti
cmpb
std
into
testl
loop
call
test
shr
shlb
fstpt
lret
aam
or
ds
in
mov
enter
in
iret
jmp
xchg
ror
ljmp
out
xor
sar
cmpb
mov
fstp
out
ljmp
xchg
fidivs
xor
cmp
icebp
cld
jecxz
fucom
aad
sti
ljmp
int
into
test
ss
out
icebp
rcr
loop,pt
shl
into
cmp
cmp
in
cld
int3
or
iret
out
rclb
out
jmp
std
aad
not
fdivrs
repz
out
cld
test
int3
clc
ljmp
das
lret
in
jmp
cli
repz
push
xchg
lock
ljmp
divb
not
out
fdiv
call
fdivr
clc
hlt
sar
loopne
div
lret
ljmp
ret
sti
cmc
xor
out
jecxz
ret
not
xchg
fsub
fsubr
int3
test
fucom
cmc
test
mul
shrb
icebp
call
neg
aam
rol
ror
aad
ffree
leave
stc
iret
in
mov
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
test
fs
cmpsb
add
in
test
xlat
fcom
lret
xor
cmp
out
cmc
clc
loope
rcr
aam
fsubr
nop
xchg
int
decb
lret
stc
sarb
int
xlat
loopne
add
mov
in
out
iret
jmp
xchg
xchg
xor
xor
out
jmp
sub
shl
cmpb
idivb
jmp
fdivr
cli
jmp
xchg
int3
xor
lret
call
divl
aad
shl
cmp
clc
rcr
rol
std
out
xchg
int
leave
out
aad
fstp
enter
fst
out
faddp
clc
fsubr
fucomp
int
into
out
cmc
in
xor
enter
jmp
repz
int
in
shl
sbb
mov
jmp
jmp
lret
in
test
repnz
repz
cmc
leave
std
ret
and
les
jmp
cmp
cmp
rcl
aad
cli
xchg
jmp
cli
xchg
aad
clc
shrb
jmp
sar
aaa
clc
fst
rol
incb
enter
jmp
call
fdivr
repnz
repz
mul
out
int
fcmovb
stc
iret
cmp
xchg
loopne
in
repnz
xor
lock
icebp
fdivrp
hlt
in
out
leave
mov
test
cmp
jmp
clc
int3
loopne
int
repnz
lock
cmc
sti
fsubr
rol
xchg
int3
call
aam
sar
fdivr
hlt
xor
ljmp
cld
loop
int3
fdiv
ror
test
xchg
aas
shl
cmp
ss
lock
sub
stc
fcmovnu
ljmp
mov
loope
rcl
ljmp
leave
fmulp
ret
aam
repz
lock
call
testl
loopne
jecxz
stc
jmp
xlat
loope
xlat
sti
idivb
xchg
mov
std
sbb
int
mov
mov
xor
cli
cmp
cmp
rcr
loope
loopne
lock
incl
clc
in
xchg
xor
lret
lret
enter
aad
idiv
aam
hlt
shl
fcmovu
test
nop
leave
out
hlt
int
enter
ss
aam
cmc
clc
in
iret
lds
stc
sbb
test
cli
call
out
sti
ss
ljmp
clc
vpmaddwd
idiv
fstpt
idiv
mov
xor
aam
sti
ror
ljmp
test
test
incb
lret
cmp
iret
lock
iret
in
cmp
loope
fdivrp
lret
in
cli
mov
jecxz
fistl
loopne
lret
out
xor
std
loope
fnstsw
adc
aad
ret
xor
loope
incl
xlat
rcl
call
int3
cmc
hlt
cmp
int
test
ret
out
decl
fildll
std
xlat
sarl
cmp
repnz
ror
test
fimull
in
aam
shr
xor
lock
not
xor
in
repz
shl
sbb
movl
jmp
loopne
shl
rcr
lock
repz
lret
cmp
int3
fildl
ljmp
xchg
dec
fsubp
fcom
sub
aam
lret
std
hlt
ror
iret
out
rorb
roll
mov
xor
lock
stc
xor
shr
icebp
in
cmp
aad
call
xchg
fmul
addl
jmp
loope
cmp
cmc
call
fisttpl
enter
jmp
lret
cli
hlt
fcomip
cmp
stc
cmp
aad
enter
leave
fmul
test
jmp
out
imul
repz
out
leave
neg
xlat
into
push
repnz
cmp
sbb
aad
shr
in
out
int
icebp
iret
lret
loop
fstp
lds
ljmp
and
aaa
xor
xor
aad
fsubr
sti
lret
cld
ds
lock
test
lret
out
sub
imul
hlt
repnz
lret
iret
ds
rcr
loop
jecxz
out
addb
add
int3
int3
xor
aam
in
les
jecxz
testl
loopne
lock
into
xor
cli
repz
fmulp
cmp
sarl
jecxz
add
sub
in
mov
shl
clc
hlt
int
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
mov
iret
movsb
imul
add
ljmp
hlt
aas
loopne
in
jmp
leave
shr
decb
ss
fcmovne
xor
iret
fdivr
aas
aam
test
add
int3
int
or
aad
ret
lret
icebp
int
test
std
xlat
cmc
int3
jmp
in
out
into
enter
cmp
sar
xor
ds
cmp
adc
hlt
mov
jecxz
test
std
loopne
rol
lret
fcom
out
aad
out
cmp
loope
leave
filds
icebp
roll
rcl
repz
clc
fcom
fcmovnb
ss
int
int
div
cmp
sar
std
movb
in
ret
in
icebp
sti
shr
int
icebp
xlat
out
ret
ret
fadd
mov
mov
int3
leave
fildl
shl
ret
xor
cli
sti
cld
jmp
cmp
ret
fadd
jecxz
out
test
mov
mov
xor
shr
hlt
div
jmp
lock
cld
ffreep
testl
lea
shl
fxch
xor
shll
ljmp
cli
aam
xchg
call
ret
jecxz
cmp
jmp
int
cmc
out
rol
aad
xchg
lret
xchg
xchg
in
lret
call
std
cld
ret
xlat
stc
decl
xchg
out
xchg
xchg
out
lret
out
div
into
into
cli
rol
cmp
lds
repnz
mov
mov
fiaddl
ret
rcr
in
std
hlt
icebp
fcmovne
aam
stc
mul
sti
test
fcmovnu
fstl
xchg
rol
repnz
out
aad
ljmp
sbb
int
ljmp
in
xor
jecxz
stc
enter
in
lret
clc
aam
sarl
clc
lea
loop
out
loopne
into
cmc
ret
fld
jmp
cli
jecxz
icebp
push
repz
idiv
fisttpll
cmc
std
mov
xlat
fcomp
int
jmp
ds
loope
cli
roll
sti
fsubr
mov
test
mov
xor
aad
aas
int3
xlat
in
out
cld
cmp
stc
rolb
lret
int3
lret
jmp
lock
lret
cmp
cmp
test
fadds
lea
sti
sti
ficoml
ret
cmp
int3
fdivr
repz
test
mul
repz
fsubp
in
sti
fcmovnbe
jmp
test
in
out
xor
iret
cmp
not
cmp
fcmovbe
cld
fmul
fmul
test
mov
hlt
loope
xlat
cmp
call
fdiv
sti
roll
xlat
ret
fcom
out
xchg
int3
nop
aad
cmp
stc
out
shl
leave
addb
sti
sbb
out
int
jecxz
out
shl
test
icebp
cmp
loope
ffreep
iret
aam
rol
cld
loopne
cld
mov
lret
fsub
in
aaa
ss
test
cmp
ror
cmp
and
mov
faddl
xchg
out
loopne
call
xlat
stc
imul
shl
sti
flds
loop
cli
int3
ror
cld
in
cs
loopne
fdivr
call
fidivl
fcmovnu
clc
ret
stc
in
test
iret
xchg
jecxz
mov
cmp
leave
icebp
ds
loopne
hlt
loope
div
fiadds
out
int
loopne
loop
out
in
xor
fdivrl
loopne
xchg
iret
dec
xchg
ljmp
out
ljmp
in
in
out
sar
ds
test
in
test
in
fdivrp
icebp
shr
aaa
iret
fcmovnu
out
aaa
call
ret
cmp
test
loop
leave
sti
fucom
loopne
loope
mov
ret
jmp
cmp
test
loopne
jecxz
clc
fcmovne
shl
fcmovne
mov
in
out
fdiv
xor
cmp
fdivrp
sarl
sbb
adc
popl
loop
mov
rol
in
cli
jmp
icebp
jmp
cmp
cmpb
ret
test
lret
int3
popl
iret
nop
repz
in
jmp
cmp
lret
aas
roll
mov
decb
leave
int3
ljmp
sti
std
cmp
ror
into
push
xchg
out
out
fiadds
icebp
imul
cli
jmp
in
in
lret
in
cli
les
jmp
int
ret
fcmovu
add
dec
mov
lds
add
rcr
jmp
in
repz
out
shl
loop
ror
lret
ss
fnstcw
not
in
fcomip
in
mov
dec
aam
cs
cmp
rol
ffreep
idivl
cmc
cmp
xlat
mov
fcmovbe
and
leave
rcr
aam
sar
aam
cmp
rcl
fpatan
sti
loope
clc
fcmovne
clc
test
xchg
xor
into
out
clc
ljmp
rcl
mov
in
out
lret
shr
leave
aad
ret
fcmovu
cmp
div
jecxz
loopne
rcr
fmulp
sti
orb
xor
fmul
cmp
shr
loop
xlat
sti
in
fcmovb
mul
mov
clc
loop
fcoml
out
rcl
iret
fdivrp
int
xlat
cmp
fsub
jmp
fstp
out
std
mov
call
call
sar
xlat
out
ret
shl
jmp
xchg
ljmp
ds
out
out
iret
lret
int3
fmul
lret
cmp
std
hlt
test
out
call
lock
repnz
in
cmp
icebp
int
iret
rcr
in
in
ljmp
jecxz
icebp
int
in
idivb
jmp
lret
loope
icebp
loop
iret
loop
test
ljmp
shlb
out
lret
fucom
out
cmp
ret
fnstcw
xor
incl
loope
int
fdivrp
sub
in
cmc
not
fpatan
shl
cmpl
cli
cli
aas
les
aad
jecxz
xchg
sub
fcoml
in
sub
fucomi
icebp
clc
aam
clc
shl
incl
in
xchg
jecxz
repz
xor
cs
into
fldl2e
cmp
fsqrt
sar
shr
call
neg
enter
ljmp
lret
xor
aam
repnz
cmc
rolb
aam
loopne
fcmovb
clc
out
in
test
repnz
icebp
out
cmp
xor
cmp
cmp
shl
fadd
loop
enter
icebp
fcmovu
repz
div
ds
cli
into
clc
xlat
cmp
xor
xchg
in
out
lds
out
aam
aaa
xor
out
das
int
fdecstp
icebp
idiv
aaa
fcmovb
xlat
push
fsub
aas
test
mov
jmp
into
shl
lret
leave
lret
hlt
sar
jecxz
vpand
fmull
lret
mov
jmp
lret
cld
jmp
jmp
out
test
stc
test
repnz
lea
in
aad
int3
aaa
les
cmp
stc
sarb
addb
xchg
lock
xor
divl
cmp
cld
in
fdivrp
into
fadd
addb
nop
xchg
cld
into
adcb
loop
clc
fsubrp
iret
fucomi
divb
cld
cli
cmp
adc
cld
add
nop
mov
mov
in
into
sub
ret
clc
cli
loope
rolb
cmp
out
loopne
loope
mov
out
repnz
out
jmp
ret
add
aas
xor
jmp
iret
lret
iret
jecxz
ret
hlt
lret
in
cli
aaa
xlat
aad
test
cmc
movb
in
mov
rorl
aam
leave
int
sar
lock
lret
sti
cmp
mov
in
cli
std
xchg
out
in
loop
repnz
xor
sub
leave
cmp
cmp
add
xlat
xlat
fdivp
stc
cmp
out
lret
lock
ror
cmc
enter
icebp
rolb
call
cli
cli
in
xchg
loopne
xchg
aam
fdivr
int
clc
std
fdivrl
loopne
hlt
ret
loop
rol
fcmovu
lret
in
xchg
jecxz
icebp
int3
xor
fnclex
fstpt
into
ret
sar
xchg
xor
mul
iret
xchg
lret
repz
xor
into
sub
in
cli
in
int
aad
clc
cmp
cmp
fiadds
aad
in
xor
shll
iret
enter
cld
out
ds
ret
ror
leave
fdivrp
fcmovnb
jmp
push
out
ret
xor
leave
fidivrl
cmp
cmp
cmp
test
jmp
mov
lret
mov
xchg
ret
shr
std
int
test
fcmovnu
neg
xchg
mov
lret
out
xchg
loop
xor
sti
div
fprem
clc
cmp
std
loop
stc
sub
jecxz
out
test
imul
sub
mov
jmp
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
fists
jg
cmpsb
add
out
xchg
ret
xor
div
sti
lock
out
cmp
in
test
adc
sar
mov
ret
cmc
loop
xor
fmul
iret
hlt
xor
dec
cmc
in
test
loope
rol
hlt
test
ljmp
into
ds
sub
cmp
fdivl
hlt
out
out
out
fst
neg
clc
idiv
std
mov
int3
ljmp
sarb
loope
test
adc
aam
xchg
fcmovne
lret
ljmp
fcom
sti
cli
clc
cmpb
test
mul
mov
in
jecxz
iret
jmp
push
call
cld
cmp
lret
sti
stc
cmpb
fmul
in
aad
fmul
jmp
in
out
nop
rol
xor
lret
idiv
fcmovu
repnz
fildl
cmc
loop
in
mov
iret
jmp
sub
icebp
out
rcl
into
fcmovu
test
clc
cld
adc
cmp
enter
leave
jmp
xor
ret
vaddsubpd
aas
aaa
stc
cmp
cmp
test
mov
loop
rorl
cmc
in
out
fsincos
leave
cmp
aam
cmp
ret
roll
sbb
int3
mov
ror
fld
aam
out
out
call
jecxz
not
out
ljmp
cld
subl
aad
ljmp
fadd
cmp
aad
in
mov
in
mov
xor
cmp
fcmovnu
aam
xor
repz
roll
ljmp
loope
repz
xor
fcmovne
xlat
lret
shr
xor
out
cmc
loopne
call
iret
mov
icebp
or
int3
ret
hlt
cmp
shr
cmp
fsubrp
fscale
test
mov
icebp
decb
aam
shrb
out
ror
fnstsw
ss
adc
sbb
cmp
hlt
in
mov
mov
into
xchg
ror
clc
xor
out
repz
lock
test
add
in
loopne
into
icebp
into
rorb
call
sti
repnz
or
mov
in
mov
lock
leave
std
ljmp
cli
jmp
sarb
sti
fcmovbe
ret
aas
lock
test
fcmovbe
std
fisttps
shr
xor
call
hlt
lret
shr
adc
loopne
repnz
les
leave
lret
in
mov
cmp
in
cli
lock
cmp
aam
ds
ret
cld
xchg
int
leave
mov
rcl
sub
out
xor
aad
enter
xlat
xor
aad
fucom
mov
out
sub
loop
in
fucomi
fcmove
loope
test
fmuls
out
std
clc
repnz
shrb
lret
shlb
icebp
cmp
cmp
repnz
cmp
loop
cli
xlat
orb
cld
loopne
les
leave
out
enter
repz
rol
out
aas
adc
loopne
fimull
out
cmc
enter
jmp
out
ljmp
fdivr
mov
loop
in
into
fsubr
in
rcr
loop
xbegin
cli
push
in
xlat
cli
aam
fcomi
xlat
fadd
out
aad
fcmove
incb
out
xor
mov
fyl2xp1
lock
rcr
leave
sti
test
int3
sti
iret
nop
xchg
repnz
xchg
xor
icebp
shl
jmp
rolb
mul
in
filds
mov
int
xor
fcomi
fucomp
aas
fdivrp
idiv
adc
sti
mov
out
jecxz
std
leave
roll
in
ret
jmp
cmp
fnstenv
loopne
xchg
aad
cld
cli
std
into
ljmp
xor
cmp
clc
cmp
std
cmp
lock
mov
shl
loope
nop
in
lret
call
shl
hlt
xlat
cmp
in
idiv
ds
mov
movl
lock
int3
in
neg
out
sarb
ljmp
mov
mov
adcb
xor
aaa
xor
into
lret
ffreep
cmp
aas
out
call
cld
fsub
std
fisttps
call
icebp
enter
fdivr
out
add
movb
mov
out
xchg
shr
lock
mul
std
sar
cmp
loopne
loopne,pt
ret
in
xlat
loop
int
addb
shl
aaa
sti
je
mov
addl
jmp
jmp
vpsrlq
rcl
aad
xchg
mov
in
xor
test
jns
jl
add
fdivrl
xlat
sar
ret
xlat
sbb
out
fildl
lds
out
int3
aad
jmp
cmp
fldln2
ret
sarb
or
mov
fiaddl
aad
ss
call
adc
in
cmp
test
cli
aam
in
ror
out
and
ret
cmp
jmp
cmp
out
test
std
repz
loop
roll
sub
stc
clc
fmul
cmp
in
repnz
cli
incl
fdivr
xchg
ret
cs
lret
shl
mov
add
in
xchg
aad
xor
aaa
int
fdiv
cld
lock
cld
loopne
test
mov
mov
enter
icebp
lock
cmp
ret
xor
in
xor
int3
jecxz
rcl
rcl
rcl
jmp
mov
into
xchg
mov
in
leave
xor
not
fldln2
in
lret
divb
out
std
test
mov
cld
mov
loop
xor
in
loope
sar
lock
stc
hlt
in
stc
out
cmp
int
out
aaa
int3
loop
xlat
in
idiv
cmp
ljmp
cmp
xlat
std
aam
out
xchg
sub
out
sub
repz
fcompp
cmp
ret
aas
out
shl
in
mov
shl
adcb
lret
xor
cmpb
sti
fisttps
int
add
shl
stc
fscale
out
in
xlat
rcl
ds
roll
rol
xchg
lret
in
out
out
ss
hlt
sbb
out
fldl
dec
rorl
fxch
in
enter
fiaddl
out
fscale
in
mov
mov
lock
out
out
xor
xor
out
enter
ret
ror
loop
loopne
ljmp
sub
shrl
fcomi
ss
iret
adc
and
repz
in
leave
shl
test
jmp
fsubr
out
enter
out
fbstp
ret
in
fsub
fmulp
in
loop
int
std
xchg
aas
ret
jmp
jecxz
jmp
fcomi
aas
fcmovne
jecxz
rcl
call
xchg
shr
rol
repz
sub
div
clc
out
hlt
cmp
aas
icebp
stc
rcr
rcl
and
orb
cli
in
lret
iret
cmp
cmp
inc
ror
jecxz
fmuls
in
fmul
int
shr
repz
xor
cmc
xlat
sti
aam
ret
orl
iret
nop
and
leave
shl
ss
into
sti
int
cmp
xchg
stc
loope
mov
lret
loop
mov
in
repz
xor
into
lret
aam
clc
out
jmp
iret
faddl
sub
cs
jmp
fnsave
neg
loope
cmp
cmc
orb
int
cmp
lret
xlat
into
fdivr
out
test
int3
lret
aam
ror
fdivrp
mov
orb
iret
iret
les
cmp
neg
ror
out
shr
ret
ret
vpmulhw
sub
fmull
std
cmp
cmpb
add
cli
ds
mov
mov
repnz
xlat
loop
jecxz
iret
std
out
out
aas
ror
addl
mov
jmp
idiv
test
idiv
shl
ss
iret
cmp
xor
cld
in
cli
fucom
aam
out
f2xm1
imul
ror
sti
ss
aam
ret
and
loopne
test
out
loopne
int
das
ljmp
cmp
ds
cmc
adc
in
loopne
loopne
rclb
shr
lock
cld
cmp
icebp
int3
ljmp
call
xchg
out
leave
icebp
out
call
lret
dec
inc
idiv
faddl
cld
fcmovnu
in
in
lea
repz
sti
ss
sarl
ret
stc
loope
add
std
leave
addl
hlt
aam
cmp
out
repnz
test
cmc
cli
jmp
out
sub
std
iret
aas
xor
in
jmp
iret
enter
fisttpll
je
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
test
jle
jge
jl
test
std
incb
enter
out
fcoml
xor
aaa
cld
fcomip
repnz
out
shr
sbb
cmp
ljmp
loope
mov
iret
loop
xor
fsubr
aad
test
not
clc
repz
and
test
out
out
in
lret
out
cmp
ljmp
stc
jmp
iret
mov
loop
lret
cmp
stc
cmp
rcr
std
loop
xchg
incl
fmul
cmc
jecxz
in
leave
shr
shl
jmp
cld
fsubr
cmp
jmp
faddp
iret
loop
nop
jecxz
nop
sub
aad
lock
ljmp
aad
mov
xchg
in
cmp
call
cmp
shlb
jecxz
inc
ret
aam
hlt
lret
cld
int
mov
iret
bnd
out
hlt
fcmovbe
repnz
sar
testb
mov
fcoml
clc
fxch
out
dec
idiv
int3
aad
cmp
mov
mov
cmp
mov
lret
ret
jecxz
cld
repnz
ds
ds
loopne
shl
hlt
cld
sti
out
jmp
mov
sub
cmp
xor
cli
leave
enter
int3
ret
out
mov
mov
shl
xor
clc
roll
shl
cmp
xchg
out
loopne
nop
loopne
repz
aam
fdivs
hlt
cli
in
jmp
out
ds
test
out
shl
lock
and
lret
mov
in
in
not
ss
in
lock
repnz
aas
loope
leave
xchg
ljmp
hlt
int
jmp
jmp
out
into
jecxz
rcr
fdiv
std
fdivrp
leave
jmp
aad
int
clc
xor
cmp
cmp
roll
fnstsw
sti
lret
xchg
in
cmp
into
lret
cli
test
out
out
rol
in
enter
cmp
loopne
fstpt
into
fsubrp
sar
sarl
cld
lds
fsubp
fisttpl
test
ds
in
std
clc
aam
sarb
repz
stc
loop
movl
jecxz
mov
jmp
jmp
cs
loopne
fst
cld
aam
jecxz
cli
fdiv
int3
call
jmp
cmp
repz
repz
add
shl
add
test
out
leave
fcos
xchg
in
stc
cmp
rcr
icebp
cmp
cmp
loopne
addb
loope
xchg
fcomip
cs
aam
rcl
cmc
iret
into
hlt
rcl
int3
and
mov
out
cld
ljmp
aaa
cmp
fsubp
out
rol
into
xor
filds
filds
out
hlt
rcl
cmc
iret
lret
in
shl
sti
aad
loopne
mul
cmc
enter
in
jecxz
fcmovnb
enter
loop
call
rolb
cmp
clc
icebp
ret
lock
call
out
addb
sarl
in
xlat
ss
std
repnz
fiadds
cmp
ljmp
test
out
cmc
test
cmc
sub
std
cmp
loope
hlt
mov
fsub
mov
iret
clc
fisttps
sti
leave
iret
out
aas
out
icebp
rol
ds
icebp
rorl
out
mov
loope
div
call
shl
repnz
fiadds
cld
out
mov
ljmp
out
lret
cli
enter
jecxz
lds
call
sti
icebp
out
std
xchg
xchg
sub
test
cmc
repz
idiv
aas
shl
testl
stc
mov
loopne
rclb
xor
in
in
int3
lret
flds
in
fisttps
shl
int
cs
hlt
xor
call
shr
out
sub
xchg
stc
fsubp
ljmp
out
int
xor
icebp
fnstcw
call
rcr
icebp
sbb
out
mov
cli
xchg
in
fiaddl
leave
clc
cs
fstpt
ljmp
fcomp
clc
cli
lret
cli
stc
test
std
rorl
in
cli
fnsave
shl
shlb
out
repnz
mov
loop
in
jecxz
cs
das
iret
sar
aaa
xor
icebp
add
div
loope
shl
std
jecxz
out
lret
out
xchg
call
sarl
out
fdivr
xor
jecxz
rcr
ret
call
out
loopne
shl
hlt
aam
loopne
call
repz
jecxz
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rorb
add
jge
jl
shr
cmp
mov
int3
xchg
loopne
cs
stc
shll
lock
sti
xor
fdivrs
mov
xlat
aas
out
loopne
std
in
nop
mov
xor
aaa
iret
aam
shl
into
fndisi(8087
loope
cmp
test
and
call
aad
xlat
out
icebp
shll
xlat
xor
sar
fdivrl
ret
mov
fcomp
lret
int3
int3
test
cmp
int3
cld
loope
enter
test
cld
aad
fsub
ljmp
shl
ljmp
leave
fcom
cld
lret
aas
out
fsub
fdivrs
in
mov
repz
rcr
repz
ror
out
fnstcw
fucomip
out
sar
sar
test
test
fninit
in
rcr
in
fisubrs
das
into
aam
lret
std
in
repz
clc
sar
enter
xchg
fildl
sub
xor
lock
int3
imul
cmpl
lock
aad
rorl
mov
fyl2x
repnz
cmp
jmp
jmp
fsin
out
sar
in
jecxz
enter
xchg
xchg
cmc
in
loope
shl
cmp
lock
clc
enter
int3
xbegin
xchg
loopne
ret
fsub
cld
lret
shr
clc
cmc
out
fsub
ljmp
test
xlat
mov
repz
iret
lret
loope
iret
hlt
xor
vpmullw
leave
jmp
flds
testl
test
out
shr
fcom
xlat
clc
std
aaa
repz
sub
aas
shr
sbb
repnz
into
shl
loopne
aam
out
call
adc
call
add
sti
ret
in
hlt
ss
aad
lock
cmp
test
addl
xchg
call
out
das
xlat
aad
rcr
ret
test
repnz
aad
mov
lock
xchg
ror
enter
in
test
cmp
cld
stc
in
enter
adc
rcl
icebp
fucomp
in
fsubr
aas
iret
loope
icebp
hlt
inc
aam
xchg
cld
leave
call
xor
sti
out
aas
cmp
hlt
repnz
ffree
loop
dec
call
lret
ror
orl
in
aad
jmp
cli
cmp
cmc
loope
test
test
in
mov
fists
jmp
cmc
in
aam
xor
aas
xchg
ret
in
xchg
lock
rol
xor
aam
sti
out
lret
lock
sar
std
aas
xor
ljmp
xchg
xchg
in
repz
sar
stc
aad
fxch
repz
std
xabort
sti
sti
out
mov
in
ss
into
std
cmp
aad
out
lock
fcmovb
int3
test
in
enter
aaa
repnz
ljmp
sar
lock
mov
jmp
cld
lock
hlt
ljmp
xlat
xor
cmp
inc
sub
leave
orl
leave
cli
out
out
cmp
ss
iret
fcom
sarl
add
fstl
out
jmp
xlat
cs
clc
cmp
cmp
fdiv
cmp
lret
fildl
mov
call
shlb
rolb
rol
jmp
decl
jecxz
xchg
subb
jmp
out
leave
out
movb
fildl
sub
icebp
sbb
into
int
mul
rcl
in
cmp
in
lock
in
out
std
mov
loop
sbb
in
xchg
xor
jmp
xor
loopne
repz
repz
and
xlat
in
cld
fcmovb
cli
test
fsub
mov
repnz
out
call
lock
ret
test
cmp
jmp
xchg
clc
out
fsub
in
in
in
in
xor
xor
jmp
repnz
xlat
faddl
loopne
icebp
fmull
jmp
xor
cmp
jecxz
fcomp
icebp
hlt
loope
test
test
fsub
orb
fdivs
sti
lret
cmp
fcos
out
test
faddl
jmp
ljmp
iret
test
shlb
call
lret
xor
rcl
out
roll
jmp
fimuls
sub
in
out
sub
lock
cmp
jecxz
iret
ret
loopne
fidivrl
in
mov
lock
test
std
jmp
out
clc
jmp
cmc
in
aam
cli
fstp
out
cld
icebp
lret
sbb
ss
repz
lret
stc
ss
ljmp
mov
inc
add
scas
arpl
push
fs
add
incb
add
inc
add
inc
hlt
out
pushf
clc
sbbl
jmp
rcl
int3
fstp
arpl
test
and
push
jle
jge
jl
int3
inc
loope
ret
dec
test
clc
mov
loop
xorl
out
cmp
icebp
xor
sar
rcr
fadd
aad
ret
fstp
in
adcb
xor
xor
sub
xor
enter
cli
fstpt
sbb
cli
lret
out
loopne
icebp
rorb
jmp
into
ljmp
fcmovnbe
out
stc
call
fucompp
ffree
loopne
mov
aam
out
xor
cmp
ss
push
xlat
jecxz
aad
ljmp
out
iret
lret
int3
vcvtdq2pd
xor
loope
cmp
out
out
adc
mov
fstp
out
lret
icebp
not
iret
rol
shr
jmp
hlt
cli
repz
ds
xchg
out
jmp
orb
xor
aad
leave
enter
in
out
rolb
int3
fucom
in
int
xchg
shrl
xor
fucomp
xor
repz
aas
cmpl
mov
int3
in
or
cmp
cmp
repnz
loopne
and
incl
in
call
shlb
aad
cli
int
fucomip
cmp
into
xlat
ret
ds
rolb
xchg
in
adcb
repnz
shr
lret
xlat
fsubp
fadds
test
testb
mov
cld
shr
not
ljmp
cmp
out
call
fildl
xlat
xor
sti
hlt
out
iret
int
enter
aad
test
fcmovnb
mov
stc
fmulp
out
mov
jmp
shl
shl
jmp
in
fidivrs
in
shl
cld
aad
out
lret
imul
in
call
in
clc
cmp
out
out
fnsave
jmp
stc
repnz
addl
out
int
repz
fldz
ljmp
fcomip
cmp
sbb
loopne
xchg
shl
cmc
repnz
int
in
cmp
int
int3
sti
stc
test
sti
test
xchg
out
sub
cmp
in
lret
call
add
shl
cli
jecxz
or
xchg
dec
shl
ror
repnz
cmp
out
aad
ljmp
aad
leave
loope
xchg
mov
test
loop
ret
hlt
jecxz
ret
cmp
cmpb
loope
sti
int
lret
int
rcl
das
jecxz
rol
hlt
rcl
into
cmc
fcos
loop
stc
mul
jmp
in
jecxz
in
xor
lret
fucomp
adc
cli
fcmovbe
mov
cli
in
cld
into
jmp
lret
sti
out
lret
loope
loope
int3
ds
xchg
test
in
cmc
sub
into
mov
cmc
fucomip
cmp
call
clc
les
fptan
sti
testb
int3
repnz
xlat
rcl
lret
aaa
std
sub
clc
fcomi
out
lret
fcomi
in
stc
std
out
test
jmp
aad
loop
xor
sar
fdivrp
or
jmp
and
test
xchg
hlt
into
repz
fxch
das
sarl
repnz
sti
stc
cmp
rorb
mov
mov
xchg
aam
cs
out
clc
aam
adc
out
into
in
cmp
out
ret
int
cli
decb
leave
in
ret
in
aad
fidivl
addl
lds
out
ret
rcl
lret
xchg
xchg
aaa
lock
call
fmul
loope
ljmp
repz
test
test
lret
push
icebp
jmp
xor
leave
into
fdivr
shl
testl
mov
leave
fmull
iret
int
fdivr
aaa
xor
out
ror
sti
fstp
in
in
in
out
test
mov
xchg
ret
imulb
ret
hlt
repnz
enter
icebp
lock
cmp
fsubr
lret
or
sub
lock
aas
repnz
aam
test
int3
and
hlt
ret
aaa
out
in
aas
fdivrs
cmc
ror
ds
loop
loopne
mov
lret
out
xchg
lock
cmc
stc
jecxz
repnz
repnz
aad
addl
cmc
loopne
sti
ljmp
lret
div
repnz
ret
call
cld
in
cld
fcmove
test
icebp
clc
std
shl
in
neg
fidivrs
shl
hlt
addl
mov
repnz
cmc
in
ror
test
rol
xlat
test
clc
cld
sti
ret
orb
and
xor
stc
cli
jmp
cmp
shr
sti
movl
add
movl
jmp
movl
jmp
xlat
enter
enter
xchg
rol
leave
cltd
cs
or
jl
iret
fidivl
cmc
clc
test
fsub
lea
xlat
out
loop
in
idiv
cmp
cmp
clc
aam
out
cld
xlat
aad
enter
out
int3
in
ljmp
repz
shl
cld
call
cmp
xlat
mov
aas
ds
mov
in
fst
mov
shl
fadd
idiv
cli
call
lock
test
ret
jmp
lret
loop
fdiv
jmp
loop
hlt
repz
in
fidivrs
cmp
sti
shl
std
cld
ds
test
out
xchg
neg
fsubp
xor
fucomp
aaa
fsqrt
shl
fcomi
shl
fcmovbe
fidivrl
in
xchg
in
out
xchg
mov
aam
clc
cmp
out
aam
icebp
rcr
lock
sti
sbb
out
ror
fsub
xchg
orl
int
inc
fsubr
loopne
std
into
cld
clc
stc
shl
cmc
xchg
loopne
int
xchg
xchg
sarb
into
xor
iret
icebp
cld
clc
shl
test
repnz
shl
in
xchg
mov
int3
ror
idiv
cmp
cmc
out
imul
cli
fildl
xchg
shr
in
lret
ror
das
loope
cmc
sti
leave
sti
neg
xlat
clc
and
inc
in
out
in
faddl
jecxz
loop
in
clc
fidivrl
lock
sti
lock
jecxz
fcmovnu
std
test
aam
ret
in
call
test
jmp
loop
fnstenv
das
fcomi
aas
out
ds
fcmovnb
jecxz
testl
repnz
call
aam
ljmp
test
aas
and
filds
xor
int3
xor
das
xor
lret
repz
fmul
and
std
cld
fabs
lock
in
mov
divl
test
fdivr
aas
sbb
ret
std
ds
lret
ljmp
out
xor
xor
clc
rcl
lock
std
loopne
rolb
orb
rcl
aad
cmp
int3
shll
cmp
fadd
flds
jmp
xchg
call
loop
int
fcmovnu
out
aas
xor
roll
cld
mov
loop
xchg
icebp
mov
fmulp
clc
int3
out
in
cmc
ds
into
repnz
addb
idiv
sub
loop
cmc
xor
fsub
in
loope
shl
cld
sarb
and
cld
jmp
test
out
jmp
clc
jmp
into
repz
in
fdiv
in
ds
adc
int3
leave
int3
shl
shr
aam
hlt
fcmovu
lock
cld
ret
cmp
bnd
out
ret
sbb
fmull
int
cmc
repz
lock
lock
shl
cld
jecxz
fcomi
lock
xor
mul
int3
int
xlat
cmc
std
cmp
mul
aad
not
out
sti
cli
jmp
call
cmp
div
xor
shl
in
lock
cli
mov
std
fiadds
out
into
in
icebp
aam
clc
out
cld
icebp
fucom
shl
sbb
fsubr
addl
cs
int
cs
lret
fcomp
jecxz
out
sub
mov
ret
and
in
fnstsw
ror
loope
jecxz
in
lds
xlat
fisttps
in
test
divl
aaa
sarb
cmc
not
fcmovbe
iret
rcl
lock
rcl
aam
and
std
fsubr
ljmp
fld
aam
cmp
in
int3
ljmp
faddp
xchg
out
sbb
repnz
repnz
jecxz
stc
lock
in
stc
in
cmp
aas
cld
lock
xlat
fucomp
in
int3
fld
icebp
std
loop
sub
lock
fcmovne
shl
ds
neg
fcomi
loope
fld
idiv
fdivr
test
mov
jmp
int
cmp
jecxz
adc
mov
in
mov
lret
aad
xor
enter
aas
cli
int
rol
in
xor
fmul
cli
jecxz
adc
lock
jmp
in
cli
fdiv
enter
shr
cmc
xlat
out
jmp
xchg
ljmp
iret
xor
shl
xor
int
into
faddp
ret
in
cmp
movb
in
int
sub
icebp
shrb
call
rcl
sti
test
jmp
orb
mov
loope
rcl
xor
repnz
clc
sarl
fiaddl
xchg
jmp
call
into
loope
ljmp
lock
test
stc
out
fcoms
cs
hlt
xor
in
hlt
xor
cmp
ret
add
or
add
test
add
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
out
mov
jle
jge
jl
sar
test
cld
cmp
cld
mov
ljmp
xor
lock
in
stc
out
rorl
sub
out
out
cmp
aam
ss
ljmp
cmc
loope
loope
stc
call
divb
jmp
shl
lret
into
int3
cmp
enter
loope
out
test
shr
loopne
in
aaa
out
lret
xor
into
ss
jecxz
jmp
std
mov
lret
in
aad
ds
fxch
not
cld
cmp
sar
xlat
test
shl
call
enter
in
mov
jmp
lret
rol
ret
fcmovu
std
orl
out
in
aad
lret
cli
rcr
int
call
icebp
out
and
not
fstp
fdivr
xchg
jecxz
out
not
in
hlt
out
cmp
out
fdivrs
aam
ret
aad
cli
sbb
fscale
jecxz
cs
cli
in
into
repz
ret
loop
aas
leave
loopne
jmp
out
test
out
in
xor
out
aas
int
cmp
shl
jecxz
xchg
shl
enter
jmp
xor
shl
out
repz
lret
in
cmc
loopne
clc
in
fmul
mov
clc
mov
ljmp
loope
jmp
out
std
les
ds
out
out
jmp
mov
mov
into
rcl
sub
xor
call
fdivrp
cld
repnz
rcr
inc
std
aad
test
xchg
lock
rclb
out
leave
aaa
cmc
loope
fld
in
mul
lock
xchg
fildl
iret
fucomp
in
ds
xor
into
fmul
jmp
aas
sar
int3
call
stc
cli
sti
loopne
lea
adc
out
lret
shll
cmp
ds
shl
fld
enter
add
xchg
ljmp
aas
cmp
ret
aad
vpmovmskb
cmc
cli
lret
fmull
mov
ret
cmp
cld
hlt
int
in
addb
mov
repnz
xchg
xor
out
jmp
stc
shr
iret
shl
cmp
lock
inc
xchg
ret
aam
idiv
loopne
decl
xor
xlat
call
fdivrs
out
aad
orl
into
in
icebp
clc
shr
cmp
clc
cli
sar
xchg
loop
cli
call
xchg
in
aam
out
aad
lock
lret
xor
xlat
in
mov
out
lret
and
xchg
xchg
shlb
repnz
imul
jmp
leave
cmp
ret
rcr
jmp
out
mov
out
out
in
and
ror
cmp
clc
leave
into
clc
sti
repz
fisttps
leave
mov
lock
iret
int3
call
jmp
rol
leave
ljmp
loope
fimuls
out
fucom
fcmovne
jmp
loop
xor
cmp
cmc
rcr
fucomip
fst
loopne
test
shr
ffreep
cli
fsub
int
xchg
ljmp
icebp
cli
jmp
fcmovbe
cmp
fsubr
aad
in
incl
out
test
xor
cld
in
cmc
aaa
repnz
aas
lock
sub
loopne
fxch
cld
nop
xchg
mov
jecxz
lock
fucomp
rol
repnz
ljmp
out
movb
in
in
iret
idivb
jmp
fprem1
hlt
cli
sti
sar
loopne
neg
xlat
xchg
hlt
lret
int3
leave
enter
int3
xor
cmp
lret
rcr
addl
fmul
nop
test
out
ret
out
sarb
cmp
repz
idiv
leave
fdivrp
xchg
loope
in
loop
out
xor
lret
leave
clc
test
rcl
aam
test
or
cli
jmp
ret
shl
xlat
out
in
in
cld
lock
loopne
ds
xlat
out
shl
aam
xchg
leave
sbb
aaa
into
stc
jecxz
int3
icebp
out
std
cmp
fucom
ret
loop
ljmp
std
test
lret
in
stc
ljmp
icebp
hlt
out
repnz
ds
lret
lret
loop
iret
out
repz
in
xor
shr
ss
int3
lret
sarl
fcmove
rol
fcomip
movl
int
sub
cmp
aaa
cmp
cmp
clc
shr
xlat
stc
loopne
fldl
filds
int
imull
out
rol
aam
xor
ljmp
jmp
mov
mov
test
cli
iret
ror
in
loope
aaa
fnsetpm(287
stc
int3
cli
rorl
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
pop
ds
pop
jle
jge
jl
cmp
cmc
hlt
fcmovnb
loope
xchg
loope
in
sub
aad
ljmp
aam
xor
std
in
mov
out
nop
div
icebp
loop
cmp
cmp
rcr
aas
repz
rcr
test
sti
rcr
ffreep
sbb
lock
cs
out
aam
into
cmp
lret
fcmovb
div
xlat
sub
test
ds
aas
imul
cmc
stc
xor
leave
ret
xlat
int3
in
adc
lret
lret
loop
aam
std
cmp
loopne
sar
out
rcr
frstpm(287
stc
iret
roll
out
loopne
cmc
in
int
fprem
ljmp
shl
xchg
lret
mov
or
rol
in
imul
std
stc
iret
cmp
cmp
loopne
aad
add
mov
into
in
ljmp
cs
in
aaa
repnz
into
loope
rcr
repz
ret
testl
test
out
repnz
roll
mov
stc
loope
mov
mov
ljmp
out
cmp
shl
cmp
clc
ret
xchg
lret
adc
shr
repz
int3
in
loop
lock
aam
repz
std
cmp
loope
lock
mov
lret
fiadds
iret
lret
das
stc
push
cmp
sbb
lock
test
sti
fcoml
xor
xor
in
stc
out
rcl
shl
adc
sbb
call
lret
enter
xor
repz
div
cmp
jmp
xchg
lock
repz
repnz
fcomi
xor
cmp
lds
rcr
loopne
ret
out
sar
xchg
fcomip
xlat
int3
sub
xlat
fcmovbe
shl
repz
shl
in
icebp
jecxz
adc
hlt
div
enter
test
call
in
fcom
in
shl
icebp
lret
cld
cmp
iret
xlat
loope
repnz
xor
enter
test
rcl
ret
test
shll
std
loop
clc
cmp
ljmp
test
rolb
cs
out
in
cmp
aas
ljmp
repnz
mov
into
out
int
std
loope
mov
cld
rcr
testb
hlt
fcmovb
fiaddl
cld
xchg
mov
aad
aam
sti
ror
out
cmp
cmc
repz
fisttps
loopne
aad
cmc
aad
xor
cmp
ror
loopne
repz
hlt
fcmovnbe
aad
fcomi
enter
lock
jmp
int3
cmp
fcmovbe
hlt
addl
std
out
sar
rolb
cli
lock
xor
fidivrl
mul
ret
out
in
in
icebp
filds
leave
in
aad
stc
hlt
cmp
clc
sti
ret
cld
loopne
test
cld
iret
lret
mov
rorb
fnsetpm(287
aaa
std
dec
cmp
in
sar
in
dec
mov
jecxz
test
ss
repnz
out
icebp
mul
mov
jecxz
mov
fiadds
lret
cs
loop
cmp
cmp
fcmove
filds
cld
leave
fcmovnu
xlat
out
mov
out
shl
int
cmp
fcmovu
cmp
aad
movb
xchg
lret
mov
mov
aad
cmp
loop
cmc
jmp
lret
rcr
cmp
faddl
fcmovne
int3
in
out
in
jecxz
out
aaa
rol
call
fidivrs
lock
icebp
loop
xchg
neg
ljmp
repnz
lret
sar
aas
testb
stc
mov
int
test
cli
test
jmp
repnz
lock
sar
cmp
out
leave
iret
cld
mov
loopne
int3
ror
neg
out
fcmove
idivb
sbb
leave
lock
loope
xchg
enter
lret
shrb
leave
repnz
in
leave
std
idiv
loop
in
test
out
jmp
in
aam
in
ret
jmp
xor
out
out
lret
cmp
repnz
faddl
xlat
and
fcmovne
enter
rcl
call
rcl
aaa
leave
int3
ss
in
ret
jecxz
fucom
movl
xor
std
fidivrs
std
int3
fsub
in
loopne
fucom
int3
fcmovne
test
call
shl
xor
fsubrp
xor
aad
dec
testl
out
int3
in
mov
hlt
rol
xor
clc
cmp
sub
sbbl
push
xor
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
movsl
movsl
inc
push
sbb
jge
jl
ror
clc
loope
cli
rcr
repz
jmp
mov
out
mov
ss
out
rcl
lret
ds
ror
out
sti
enter
xlat
mov
enter
loopne
xor
in
out
sarb
in
cli
shr
sub
fcmovu
stc
mov
movb
call
repz
fyl2x
aas
cli
cmp
std
iret
div
addb
out
into
sbb
repz
call
das
cmp
repnz
cmc
aad
shl
cli
jecxz
test
xlat
in
lret
xor
shr
adc
lock
loope
fdivr
jmp
int
cs
in
cmp
jmp
mul
hlt
sar
faddl
mov
div
cs
sub
into
std
fmulp
sar
dec
rcr
out
addb
shl
loop
aad
xor
ss
clc
sti
aaa
in
into
aad
ret
loope
shr
cli
aad
stc
jmp
cld
jecxz
lret
enter
leave
out
cmp
out
repz
in
out
std
sbb
leave
icebp
rolb
test
std
in
ret
sti
cmc
loope
fiaddl
jmp
xor
lret
imul
in
into
fxch
cmp
sbb
test
ds
aad
jmp
rcl
in
call
clc
into
repnz
stc
out
neg
shl
rcl
loope
loope
fdivrp
jecxz
ficoms
aam
clc
cli
in
ror
in
fsub
sar
not
fcomip
out
ret
in
or
fsubr
mov
xlat
loop
aad
test
jecxz
sti
xlat
mov
test
xor
ret
call
xor
test
in
loopne
sbb
int3
fnsetpm(287
mov
decb
fsubr
jmp
cmp
div
jecxz
xlat
loop
in
std
ror
in
stc
lret
lret
ljmp
iret
in
cli
cld
out
in
fnstcw
repnz
jmp
repz
jecxz
lret
aam
shr
std
cmp
neg
int3
out
mul
fld
test
enter
nop
mov
shl
icebp
ljmp
std
xor
mov
xchg
loopne
fsub
iret
lock
aad
icebp
aam
repz
into
icebp
adc
in
ret
loop
in
lret
out
fisttps
int
jecxz
lret
sti
in
rcr
and
call
ret
enter
icebp
ljmp
cmp
in
lret
cmp
lock
iret
cld
rcl
out
cli
icebp
rol
filds
lret
into
rcl
xor
hlt
aad
lock
lret
fcom
bnd
clc
in
clc
aam
mov
mov
lock
leave
xlat
cmc
lret
lock
add
jecxz
in
shr
clc
incl
in
shl
lock
icebp
ds
ljmp
xchg
out
ror
cli
repz
lret
in
xor
cld
sbb
sar
fimull
into
xchg
mov
rol
cmp
aam
xor
aas
lret
cmp
out
jmp
sar
in
mov
in
shl
stc
in
aad
int3
aad
cmc
fdivr
aad
fst
aam
out
and
mov
int3
out
test
flds
int3
rol
roll
test
mov
xchg
shl
into
int3
div
shr
into
xor
add
into
flds
std
out
in
ror
shr
into
not
shlb
in
cmp
lret
loope
in
repz
fisttps
test
ljmp
enter
hlt
out
cli
addb
fneni(8087
xchg
in
mov
shl
loopne
xor
lret
int3
xor
in
fsubr
cmpl
stc
xor
incb
int
rol
rol
lret
fcmovu
xor
icebp
neg
int3
test
lock
shl
loopne
frndint
fisttps
xor
loop
cmp
aam
mul
ffree
sti
hlt
repz
movl
jmp
cmp
aam
rcl
in
in
in
stc
fldl2e
mov
jmp
ss
fdivr
cmp
xlat
aam
xlat
test
mov
call
mov
jmp
hlt
cmc
mul
rcl
rcr
addl
loopne
fmulp
out
in
lret
xor
in
aad
ss
leave
xor
loopne
into
loop
movb
mov
lea
cs
shll
cmp
decb
test
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
xchg
and
jge
jl
hlt
std
ljmp
hlt
loope
loopne
xchg
repnz
mov
stc
hlt
out
clc
fcmovnu
out
ljmp
xlat
repnz
int
xchg
call
lret
cmp
std
stc
fucom
jmp
add
ret
dec
add
int3
mov
mov
rorl
xor
cld
in
cmp
aam
in
cld
out
movl
lock
cmp
in
rcr
ljmp
out
cld
cmp
xlat
jmp
jmp
xchg
mov
xor
stc
aam
sti
sarl
cmp
cmc
cmp
aad
aam
cld
loopne
faddl
enter
ds
cmp
cli
test
mov
ljmp
lea
xor
stc
xor
imul
cli
cmp
repz
test
clc
xchg
frstpm(287
std
int
lret
in
ds
repnz
xor
icebp
fildl
imul
jecxz
in
or
rclb
jmp
loope
or
fsub
shr
sub
mov
in
into
div
sub
hlt
fcmovnbe
cmc
sub
cli
repz
aam
enter
rolb
hlt
shll
aam
sti
ss
fcmovb
lock
hlt
loope
int3
mov
ds
enter
ror
xlat
shl
aas
fcomi
sbb
xchg
hlt
rcll
test
div
int
enter
cmp
fdiv
lock
shl
xlat
aam
fmull
out
adcl
aam
jmp
not
incl
fidivrl
ret
int
cld
iret
fdiv
enter
xor
in
not
icebp
jmp
xor
in
xlat
fucom
xchg
out
xchg
into
ret
iret
jmp
lock
roll
loop
fsub
stc
iret
or
iret
in
int3
jmp
ret
out
bnd
sti
enter
hlt
cmp
rol
in
faddl
fdiv
in
rcl
sub
xor
aam
cmc
cmp
ds
cmc
xchg
test
fprem1
mov
std
test
xor
fcmovne
into
jmp
aas
int3
testl
fsubr
mov
adc
xor
loope
ret
cmp
icebp
cmp
out
aad
ret
hlt
cli
mov
orl
cmp
sarb
cmp
rcl
lock
int
repnz
addl
xchg
icebp
dec
dec
in
xor
out
repz
hlt
into
lock
sbb
cmc
ffreep
jmp
out
out
rol
icebp
sub
xor
lock
aaa
repz
fnstcw
into
in
repnz
lret
jecxz
mov
mov
or
xor
xor
aad
hlt
cli
clc
cld
cmp
loope
shl
std
fcmovb
xor
test
cld
fcom
popl
ret
test
shl
fiadds
dec
cld
clc
ret
ror
in
int
xchg
out
cmc
out
xor
call
in
cmp
cli
shr
test
sbb
fsub
out
xor
fstp
fstp
loope
cli
sarb
cmp
aam
roll
repz
loopne,pn
xor
in
icebp
fnstsw
cmc
std
out
roll
jmp
mov
iret
lock
out
cmc
imul
aam
cmp
out
idivl
flds
ffree
fld
jmp
in
xchg
jmp
shr
xor
fidivl
icebp
testl
call
xlat
fmulp
icebp
xlat
test
aad
into
ret
clc
cmp
out
or
xchg
aam
xor
enter
call
sar
out
sti
test
stc
sar
sbb
fsub
jmp
loopne
fcmovbe
xor
cmc
idivb
out
loop
fsub
repz
xlat
jmp
loop
shll
out
xor
shr
cmp
lock
fisttpl
xchg
call
cld
jecxz
ljmp
int3
in
cld
fsub
cld
jecxz
stc
std
loop
in
out
fucomip
cs
loopne
xlat
std
cmc
hlt
int3
adc
sar
ret
add
xlat
out
icebp
ror
sbb
into
aaa
out
cmp
out
in
fdiv
lret
fcmovbe
cld
test
in
in
mov
out
jecxz
lock
xchg
xchg
lock
sub
cmp
fstp
rolb
fcmovbe
ret
lea
cli
lock
rcr
mov
shll
cmp
xchg
fsubrp
jmp
cmc
aam
enter
sti
xchg
rorb
call
inc
clc
incl
jmp
int
iret
rcl
fsts
fs
jne
jne
les
jl
add
imul
loopne
fidivrl
out
lock
enter
mov
enter
int
rcr
aaa
rol
sar
leave
in
std
in
test
leave
jmp
fucomip
out
iret
sub
shl
repz
shr
repz
fldl
aad
iret
xchg
and
xchg
mul
cld
fcmovnu
ss
ror
lock
ds
in
hlt
and
fildl
call
cld
lock
sar
cmp
xor
call
sub
aam
hlt
cli
cld
hlt
xor
xor
clc
loope
in
xchg
mov
in
int
jmp
ds
hlt
cld
sti
cld
clc
ret
in
sbb
test
std
iret
and
mov
iret
into
out
fucomi
aaa
xor
cmp
loopne
repz
sti
fiaddl
lret
icebp
test
fcomi
xor
xlat
fadd
shl
repnz
mov
int3
subl
shlb
cmc
lret
sti
fstp
jmp
lret
out
fadds
mov
in
shr
cmc
leave
out
lret
ljmp
fcmovbe
in
clc
fimull
jecxz
nop
imulb
in
cli
fucom
div
aad
aam
cmp
repnz
jmp
xor
ljmp
xor
fst
jecxz
cli
lock
clc
dec
hlt
fucomp
jmp
mov
xor
jmp
divl
cmp
ljmp
repz
int
test
orb
into
cmc
aaa
mul
xor
cmp
repz
icebp
cmp
leave
rol
cld
enter
jecxz
loopne
fsubr
rol
fld
xor
clc
leave
in
loope
sarl
repz
out
clc
ret
xor
iret
rorl
jmp
rol
ror
cmp
loop
repz
repnz
out
ljmp
jecxz
aam
aam
fcmovnb
lret
lock
std
ret
jecxz
div
out
loope
fisttpll
dec
or
into
rcl
sar
int
cmp
cmp
loope
ljmp
lret
loop
into
int3
das
in
enter
hlt
hlt
fcomip
call
fucomip
shl
cmp
mov
or
int3
xchg
cld
imull
lock
lock
stc
icebp
shl
into
icebp
hlt
test
clc
test
movb
ret
not
loop
cmp
ljmp
jecxz
xchg
cli
sti
in
clc
fistl
in
repz
repnz
jecxz
cmc
shl
fildl
loopne
roll
in
vpsubq
fucomp
rcr
cmp
in
cmp
call
rol
or
inc
int3
loop
icebp
xor
sub
leave
repz
lret
int3
sarl
iret
cmp
enter
enter
jmp
shl
enter
out
cli
cmp
cmp
sbb
mov
in
cli
out
fbstp
lock
lret
out
xor
repz
fadds
leave
in
lds
loope
repnz
lock
leave
in
cli
fidivrs
iret
rcr
fmull
idiv
cld
fsub
in
int
int
leave
aad
lock
ss
stc
cmc
jecxz
stc
xlat
cld
fildl
in
mov
fcoml
ss
call
cmp
hlt
aad
lret
loop
into
in
lret
ljmp
cli
lret
out
loop
aas
fcmovnu
xchg
out
movb
xchg
xor
mul
lock
cmc
fnstsw
sti
addb
fld
or
into
std
mov
in
ret
lock
aad
fdivrs
iret
loope
in
aam
leave
test
test
in
in
into
fnstsw
xchg
lret
fsubrp
jecxz
fnstcw
enter
enter
test
shr
jecxz
xchg
xchg
faddp
bnd
aam
iret
ss
loop
int
rol
ret
aad
fldl2t
test
int3
out
lret
xlat
int3
lret
ss
fcmovne
cmp
icebp
idiv
fdivrp
push
repz
mov
int3
lret
in
lret
shl
fcmovne
addl
shl
mov
loopne
xchg
stc
into
lret
cli
cli
fld
shr
out
ss
shr
inc
leave
repz
imul
addb
xor
int3
out
aas
aad
shl
ret
int3
cli
fadd
aad
mov
out
mov
xor
divl
sarb
aad
hlt
out
clc
xlat
ljmp
out
xchg
sti
icebp
in
in
mov
imull
sti
ljmp
inc
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
cmp
enter
xlat
loope
mov
xor
jecxz
out
mov
xchg
in
repz
in
clc
into
cld
sub
repz
decb
into
out
lock
mov
into
in
mul
icebp
fnstenv
out
sarl
out
fdivrl
hlt
cmp
ljmp
out
aas
out
xlat
ss
icebp
call
clc
repz
mov
in
mov
in
cli
cld
mov
xor
fld1
jmp
out
aas
sbb
cmpl
lret
ljmp
fdivrp
aaa
clc
ljmp
hlt
fadds
not
call
mov
fimuls
xor
repnz
cmp
fsubr
cld
xlat
loop
cmp
call
in
loope
in
out
aad
int3
cld
rol
cmp
xchg
xlat
mov
out
test
out
jmp
int3
in
out
ret
xor
out
ror
in
call
idivl
stc
in
jmp
lock
ds
in
int3
hlt
jmp
not
iret
loope
in
out
mov
out
test
lock
xchg
xlat
int
xor
cmp
ss
xor
clc
ret
cmc
inc
mov
in
mov
nop
lea
into
ljmp
into
repnz
shl
clc
lock
clc
ret
sub
jecxz
int3
cli
in
std
mov
aam
das
ret
out
xlat
stc
loopne
xlat
cmp
ret
stc
xlat
call
ljmp
repnz
xor
xor
out
inc
iret
jmp
int3
rcl
call
xchg
fsubrp
out
mov
repz
cld
std
out
cmp
sti
stc
test
ds
sarb
out
in
call
int3
in
cmp
rcr
cmc
into
jmp
ret
mov
mov
call
fld
lret
call
cmp
clc
xchg
lock
cmp
fdivrp
loopne
xor
out
cli
fxch
cmp
ss
sti
xlat
rcl
vpminsw
jmp
mov
out
test
out
ss
ds
sti
cmc
shl
stc
add
in
lea
call
xlat
sti
cli
shll
ds
int3
cmp
ret
jmp
out
mov
xchg
fldl
shll
xor
xor
aas
cmp
jecxz
loope
mov
ljmp
lret
in
clc
xor
rcl
cld
out
hlt
repz
loop
sti
hlt
sar
aam
lret
xchg
in
int3
into
bnd
lock
neg
roll
mov
mov
fisttpll
leave
fcmovnb
xlat
xlat
cmp
aad
loopne
aad
sti
xchg
loop
jmp
sti
mov
mov
sbb
jecxz
cmc
clc
xor
lret
out
in
cmc
std
stc
cmc
xchg
hlt
in
enter
mov
nop
xchg
xlat
fxch
int3
in
test
in
call
rcl
std
cmp
fsubp
fcomi
or
jecxz
sub
xor
xor
in
fistpll
out
in
cmp
sar
ror
loop
fadds
loop
in
vpor
xor
repnz
fnstsw
les
cld
in
lret
cld
iret
loop
jecxz
out
hlt
aam
cmp
leave
aad
ret
hlt
rol
leave
loopne
xchg
int
std
lock
in
repz
in
int
jmp
call
into
cmpb
stc
test
aam
lret
out
fmulp
fiadds
cmp
ljmp
or
and
fcmovb
cli
enter
nop
into
out
fimull
sub
cmp
out
fcmovu
in
enter
in
aad
test
mov
sti
in
xchg
xchg
in
cmp
call
std
fcmove
ds
fstpt
hlt
sbb
ljmp
cmp
mul
fcmovu
into
enter
hlt
fcomi
repz
cmp
out
mov
xor
lret
out
aaa
fidivrs
aas
jecxz
cmc
loopne
adc
aam
out
sti
faddl
ret
call
iret
hlt
cmp
cmp
enter
in
out
fcoms
aam
out
in
ljmp
sub
shl
cld
out
xlat
out
in
in
out
xchg
shrb
shl
ret
lock
cld
icebp
fnop
ret
cmp
test
xchg
mov
mov
ret
jecxz
sti
xor
int
aas
fcomi
fsub
ret
rcr
mov
decb
xchg
loop
xor
in
rcl
cmp
testl
roll
lret
cmc
xor
jmp
rcl
aad
aad
rolb
push
mov
jge
jl
lret
xor
clc
fcomi
in
lock
decb
sub
add
sar
stc
ss
adc
xchg
idiv
fstp
std
loop
call
ficoms
out
div
cmp
jmp
repz
or
stc
sub
out
jmp
out
int
idivl
lret
out
neg
test
int3
cld
out
in
in
cld
xor
rcl
lock
xor
fsin
out
cmp
movb
ljmp
in
shr
fcmove
in
icebp
cmp
icebp
cmp
std
in
test
mov
out
in
jecxz
in
nop
loop
cmc
cmc
rcl
lret
aas
out
iret
sarb
repz
call
mov
or
jmp
rcll
int
out
aas
dec
rcr
shl
loop
cmp
sub
xchg
jmp
loop
jecxz
rcl
leave
aad
xlat
icebp
std
idiv
cli
adc
ret
rcr
lret
out
loopne
repz
mov
call
out
flds
out
ret
xlat
in
jmp
iret
out
repz
jmp
out
test
sar
ret
cmp
adc
xchg
test
out
int3
xchg
loopne
fsubp
jmp
cmp
lock
ret
test
cld
loop
vcvtdq2pd
sar
xchg
loope
loopne
ljmp
cli
fcmovbe
idivb
ret
xchg
lret
jmp
test
out
ror
fxch
in
out
clc
xlat
cmp
idiv
fadd
int
out
in
xor
xor
fidivrl
test
rcr
incl
test
xchg
fcoml
cmp
les
lock
jmp
not
fcmovbe
ret
fdivrs
idiv
jmp
cli
fstl
out
in
enter
aam
rol
in
cmc
xchg
sar
in
in
lret
mov
cmp
out
in
ljmp
shl
lret
stc
ds
out
test
aas
aam
cld
out
or
in
neg
cli
int3
hlt
out
fsubrp
fdivrs
imul
jmp
xor
rcr
in
std
loope
mov
lock
xlat
fcmovne
icebp
xor
enter
cmp
out
in
std
fiaddl
sub
xchg
cs
ret
neg
fmul
rcl
ljmp
shl
jmp
ret
fdiv
loopne
fst
int3
divl
ss
fxch
in
clc
idiv
fistpll
idiv
jmp
call
out
rcll
shl
int3
shl
repnz
test
inc
hlt
mov
shrl
repz
hlt
in
jmp
hlt
loopne
icebp
faddp
xchg
ffreep
loope
loopne
mov
shl
xchg
out
leave
xor
fucomip
shl
icebp
div
fcomp
xlat
loope
jmp
loopne
lret
mov
out
push
ss
vpmovmskb
xor
loope
rol
shl
cli
cmc
jmp
in
enter
mov
stc
ss
fcmovbe
cmp
xor
cli
into
sar
lock
fsubp
cmp
in
in
xor
lret
cmc
stc
lret
jmp
xor
fsub
neg
mov
call
sub
test
jmp
int
out
ror
shl
ret
aam
ffree
enter
or
ljmp
iret
fadd
aaa
in
ss
iret
repz
lock
sar
incb
out
lock
lock
repnz
lds
leave
cmp
cmp
repz
rcl
ret
xchg
incb
rcl
hlt
xor
out
fdivs
ljmp
lock
loope
loop
call
lea
shlb
lret
fdivrp
std
lock
fdivr
xchg
cld
loop
hlt
int
jmp
les
lret
cmpl
in
call
sub
in
loopne
out
xor
cmc
aad
aam
sarb
mov
call
enter
xor
rcr
icebp
cli
out
xor
adc
fcmovnb
or
orl
repz
cmp
cld
lret
std
loope
loop
not
sti
mov
fcmovnbe
in
orl
fcmovnb
not
jmp
jecxz
fisttps
std
jmp
lret
nop
shr
das
sub
xor
out
xor
aam
addb
sub
loope
mov
jmp
hlt
ljmp
cmc
aam
cli
icebp
jmp
loopne
lock
sar
out
loop
ljmp
lods
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
cmp
sti
fadds
testb
mov
mov
decl
ret
int
lret
jmp
jmp
or
iret
rorl
leave
mov
lds
int
out
cli
fsub
fdivrp
shlb
xchg
sub
xchg
call
cmp
xor
clc
icebp
iret
loop
iret
icebp
in
call
sti
test
loope
in
ds
sub
in
icebp
in
lock
fxtract
loop
ret
loopne
loopne
and
cli
rcl
out
lret
jmp
jmp
cli
and
ss
mov
rcll
xor
bnd
ret
out
out
fsubp
loope
mov
xchg
xor
aaa
test
cmp
cli
repnz
test
out
enter
icebp
orb
fadd
xor
int3
into
hlt
ret
test
ret
fcmovnbe
mov
fxch
int
leave
int3
int3
loope
lock
out
iret
int
in
cmp
xlat
shll
cld
cmp
test
xchg
fucomp
adcb
imul
out
aad
cmp
sti
loopne
rcl
clc
sti
rcr
jmp
or
nop
fcmovne
std
call
lret
fldcw
cli
fdivrl
rol
ds
faddp
fpatan
fdiv
in
jecxz
rcr
int
mov
xor
lret
cmp
repnz
cmpb
cld
loop
add
ret
repnz
enter
cld
cmp
lret
or
sbb
test
lea
ljmp
ss
rcr
fcmovnu
xchg
idiv
jecxz
mov
test
xlat
sub
aas
aaa
loopne
sbb
shl
mov
out
sbb
sti
int
cmc
shl
out
ss
cmc
shl
int
int3
loop
xor
in
mov
movl
xor
int
enter
ds
ret
sti
ds
jecxz
lret
test
fists
stc
sar
aam
stc
icebp
std
fadds
std
clc
aad
loope
jmp
lret
loopne
ret
in
cmp
lret
icebp
xlat
push
fiadds
aas
fiaddl
sub
not
xor
xor
call
clc
ss
lock
stc
loope
loope
in
loopne
std
cli
int3
xchg
out
in
fnstcw
rol
les
xchg
test
mov
loop
shl
mov
jmp
in
repz
cld
jmp
clc
loope
ffreep
addb
mov
enter
xbegin
ror
cmp
xchg
cld
mov
loopne
xor
repnz
hlt
cmp
xlat
repnz
fdivrl
enter
call
in
fildl
addb
xor
icebp
shr
rol
ljmp
add
sbb
mov
int
icebp
out
int3
out
mov
stc
in
int3
out
xor
addb
aad
test
mov
fmulp
loop
adcl
call
shr
fucompp
xchg
movl
jecxz
xor
fidivl
ss
stc
hlt
test
ds
sti
incb
fimuls
in
hlt
shll
aam
xor
cmc
test
in
ror
xlat
test
mov
flds
lret
xchg
shll
leave
clc
out
xlat
cld
cmp
iret
xor
lock
cmp
int3
icebp
test
in
xlat
lret
enter
cmp
stc
filds
test
xchg
xchg
das
rcl
fsubr
out
div
into
shl
cmp
stc
fmul
jecxz
mov
orb
les
sti
aam
leave
sti
cmp
in
jmp
in
test
test
testb
orb
fsubr
stc
cmp
out
aam
in
cmpb
leave
out
xchg
mov
loope
mov
cs
in
hlt
cmp
icebp
rcr
aad
fdivrp
out
sti
test
out
xor
fcmovnu
loope
mov
out
das
cmp
cmp
lret
leave
cmp
cmp
cmp
fstp
call
mov
loop
loopne
loop
fdivr
shl
xor
cmp
in
shl
jmp
ds
fadd
repnz
call
jmp
aam
out
in
cmc
ret
enter
in
mov
fldl
in
ljmp
div
loopne
out
fldl
clc
out
mov
mov
repz
in
jecxz
push
mov
xor
jmp
ror
ror
rcr
frstor
pop
sub
and
cmp
jge
jl
xor
xor
out
fucomp
dec
stc
fcmovnbe
fstpt
add
fxch
incb
shl
xor
shr
in
iret
stc
in
filds
clc
rolb
fxch
xchg
fsubr
fiadds
lret
call
ss
hlt
out
les
lret
shl
loopne
icebp
xchg
lret
into
rcr
out
fdivrl
cli
out
cmp
shl
test
addl
jmp
icebp
jmp
repnz
cld
cmp
cli
iret
adc
mov
jecxz
test
call
xor
in
into
lock
into
inc
jecxz
loopne
jmp
in
test
cmp
mov
cmc
into
out
cmp
fstpt
iret
test
std
into
fsubrp
fdivr
jecxz
repz
fmull
int
xor
icebp
out
rol
fmul
rcr
ror
in
ljmp
jmp
loopne
icebp
enter
std
incl
repnz
shl
movb
popl
enter
jmp
into
sti
fdiv
out
sti
mov
jmp
decb
aaa
rcr
jmp
rcr
int3
loope
aam
flds
call
int3
test
fucomip
jmp
xor
fdivrs
vpsrld
fstp
fldl
mov
enter
aaa
aad
out
repz
icebp
rcr
xor
xor
fildl
int3
int3
jmp
lea
call
aam
fst
icebp
jecxz
add
mov
rorl
in
ljmp
loopne
stc
cld
fucomi
sbb
fcmovb
mov
enter
lret
xor
rcl
cmpl
hlt
std
loop
in
mov
test
leave
mov
xchg
in
das
in
lock
std
xor
stc
fstpt
not
icebp
mov
loop
sar
mov
jmp
fidivs
vpmovmskb
repnz
fdiv
fucomi
out
into
idivb
cmp
cld
lds
fsubr
out
xor
int
fst
lret
cmc
int
in
repnz
xchg
mov
rorl
aad
cmp
out
sti
fucomip
cld
dec
fadd
cmp
fidivrs
test
jmp
ret
stc
shl
fdivs
leave
ss
cmp
stc
cmp
mul
loop
icebp
ret
sub
ljmp
cmpb
aas
cmp
sar
lret
loopne
mov
out
out
int
int
lret
fdiv
rol
clc
leave
incl
lret
enter
ret
xor
int
ss
ss
aad
flds
fdiv
aam
out
repnz
mov
rcl
jmp
iret
icebp
cli
cmc
aam
jecxz
fdiv
sar
fcmovnbe
neg
sti
out
cld
icebp
icebp
shl
mov
xlat
xor
sub
lret
jmp
repnz
cmp
add
lock
fsubp
cli
faddl
in
int3
shll
vcomisd
cmp
leave
clc
lret
fildl
jmp
ljmp
out
in
mov
jmp
out
mul
int3
int
aaa
incl
cld
std
cli
ret
ret
fucomp
mov
xchg
aam
aam
aaa
cmc
ror
jmp
testl
sti
add
enter
hlt
call
loope
stc
rcl
cld
cli
stc
repz
movb
call
xor
in
cmp
out
out
aas
out
add
sar
mov
icebp
nop
cli
xor
xchg
in
icebp
shl
hlt
lret
lret
adc
out
leave
loope
add
xchg
ljmp
cmc
std
int3
hlt
cmp
stc
sti
sar
fldl2t
jmp
in
into
icebp
jmp
loopne
ss
cmc
stc
leave
aas
shlb
fcos
rolb
mov
rorb
xor
lret
ret
shlb
in
cmp
hlt
repz
aad
enter
out
sar
loopne
xor
lret
in
aaa
cmc
ljmp
vpmaxub
lea
fcmovne
cld
rorl
cmp
lock
stc
enter
incb
hlt
sar
fcomp
leave
xchg
xchg
cld
jmp
ljmp
lret
cmc
into
in
fildl
cli
sub
loop
mov
imul
loop
in
xor
iret
clc
repz
cli
mov
and
icebp
in
and
ss
xor
out
xlat
not
cmp
fcomip
ret
mul
mov
out
popl
out
loop
roll
push
jmp
lret
ds
lret
rol
loop
jbe
rol
aas
jle
jge
jl
sub
out
repnz
out
neg
cli
fcmovbe
incl
faddl
lret
xchg
jmp
fst
cs
cmp
stc
xlat
in
shl
test
fndisi(8087
jmp
out
int
loop
iret
out
out
aaa
xor
clc
repz
xor
cmp
cmp
aas
aad
cmp
fdivp
lret
jecxz
in
mov
cs
cmp
in
int3
enter
cmp
cmp
fadd
out
fiaddl
lea
aaa
cmp
in
lret
test
loop
repnz
hlt
div
xlat
in
in
sti
loop
shrb
out
xor
jmp
int
cmc
std
hlt
xlat
and
loope
clc
lret
in
shl
aas
out
in
imul
aaa
int3
cmc
cmc
faddl
xchg
xlat
int3
mov
mov
ret
not
das
repz
ror
ror
cmp
clc
test
repz
fcmovnb
cld
loop
out
mov
jmp
aad
cs
out
cli
jmp
xor
ds
repnz
test
ljmp
in
call
xor
cld
cmp
lret
hlt
leave
sbb
call
loope
mov
out
ljmp
rolb
fmuls
xchg
xorb
leave
fdivrl
lret
aam
std
rcr
out
repz
stc
std
xchg
in
mov
xor
ret
icebp
leave
ss
ss
std
int3
out
icebp
xlat
roll
xlat
mov
in
loop
enter
ss
loope
ds
ds
fistpll
call
in
jmp
in
rorl
in
out
cmp
into
out
shl
lock
test
movl
in
in
ror
int
cs
in
shl
stc
cld
aam
ret
fisttpll
or
rcl
rol
ror
xor
aam
ffree
aam
test
ljmp
test
call
cli
int3
out
sar
ffree
aad
fadd
xchg
loopne
test
in
jmp
aad
iret
fsubr
cmp
loopne
into
loop
cld
test
hlt
int3
lret
int
rol
jecxz
idivl
cmp
call
int3
fdivr
repnz
repz
mov
out
fdivp
in
int
xor
ret
cmc
cmp
xor
not
mul
xlat
fadd
stc
test
jmp
lock
mul
jmp
cld
into
roll
out
ljmp
jecxz
xor
in
cmc
call
hlt
incb
mov
iret
test
repnz
repz
hlt
cmp
incl
xchg
ret
xchg
filds
out
jecxz
fmul
repz
cmp
ret
out
cmc
add
enter
call
test
cmp
jmp
ljmp
xchg
cld
jmp
ror
decb
into
ss
cmc
out
call
in
int3
fndisi(8087
aad
addb
cli
in
mov
sub
fld
jmp
repnz
sarb
repnz
orl
sub
cs
repnz
xor
adc
xor
mov
rcr
jmp
ret
cli
lds
into
lret
sar
sar
std
iret
repnz
fabs
mov
fldpi
lock
les
xor
lock
icebp
fincstp
fstp
and
int3
rcr
fcmovb
loopne
test
incb
ljmp
iret
lret
cmp
inc
fstp
roll
mov
out
icebp
rcl
call
loopne
out
icebp
shl
hlt
fcmove
stc
add
xchg
repz
mov
fmull
aad
sub
jmp
stc
jmp
cmc
rcl
cmp
cmp
in
aas
in
in
in
cld
lock
loop
in
icebp
lock
sarb
fdiv
shl
lock
mov
call
out
call
sub
cmp
xlat
xlat
call
vpaddw
ljmp
iret
xchg
lret
call
fcmovnu
lock
out
fcmovnu
sti
test
and
loop
leave
out
vpcomuq
jmp
xlat
out
cmp
cmp
loop
repz
fcmovnb
test
lret
int3
and
mov
out
cmp
xor
call
test
test
rcl
jecxz
lret
fcmovnu
lret
nop
lret
cld
rol
div
repz
lret
cmp
fdiv
repnz
ret
fst
int3
fimuls
out
aam
js
inc
add
sub
jmp
rcl
mov
neg
repnz
loopne
mov
jl
add
into
lret
enter
loope,pt
loope
ret
shl
fdiv
orl
xchg
ljmp
xor
cmc
lret
in
loop
testb
in
in
xchg
ret
sub
cmp
fdivr
jmp
in
lret
sbb
flds
mov
int
xchg
in
fnstenv
cmc
enter
out
aad
cli
cmp
in
cli
cmp
fmul
lret
repz
ror
shlb
into
fcmovne
cs
stc
loopne
rcr
jmp
out
jmp
xchg
cmc
loopne
idiv
out
sti
cmc
out
cmp
cmp
incl
call
int
loop
addl
cmp
int
in
loopne
rcr
into
aam
cmp
fprem1
fcomi
xlat
flds
or
clc
repnz
cmc
aaa
sbb
icebp
stc
sbb
idivb
xlat
ljmp
imulb
iret
jmp
int3
lret
xlat
std
idiv
aad
mov
loopne
out
stc
leave
jecxz
in
rol
mov
cli
lret
jecxz
cmp
ds
orb
enter
xchg
xor
iret
in
std
cmp
fdivrs
in
fnstsw
loopne
iret
in
sar
in
test
out
loope
jmp
repz
ljmp
cmp
orl
test
aad
ror
xor
aam
lock
aam
filds
hlt
mov
clc
call
repz
enter
sar
repz
sar
loop
ljmp
xor
aaa
lock
xor
out
cmp
cmp
cmp
aas
cld
ljmp
test
in
jmp
into
aad
imul
ds
and
jecxz
in
out
cli
fucomip
lret
jmp
xor
loope
in
cmc
xor
std
cmp
ret
xlat
aam
cli
test
loope
lret
out
mov
iret
xchg
test
in
lret
repnz
sti
lock
cmpb
rol
cmp
repnz
in
mov
mov
out
lret
hlt
ljmp
fcmovnu
fsubp
cmpb
fincstp
ljmp
mov
xchg
rcl
loop
shr
fsubr
loope
lret
idivl
ret
mov
incl
repz
ret
fcmovu
das
out
cmp
cmp
clc
out
shl
sti
hlt
stc
cli
xchg
sbb
repz
sub
xor
in
cmp
xor
dec
lret
icebp
ret
rcl
incb
out
ror
xor
clc
bnd
sarb
cmp
ds
cld
enter
fucomp
rorb
jmp
stc
cli
icebp
stc
rcl
out
jmp
clc
cmp
fadd
rol
fadd
ret
fdivp
in
mov
loope
lret
repnz
stc
enter
test
out
cmp
lea
xchg
cli
fnstsw
xor
lret
std
not
sti
out
icebp
in
lret
stc
out
cmc
fxam
ljmp
in
jecxz
repnz
sti
shl
aad
leave
lock
int
in
fdivr
jecxz
ror
jecxz
lret
aad
into
jmp
std
ret
cmp
ret
xchg
fdivr
jmp
and
in
aaa
rcr
not
loope
call
loop
enter
out
enter
nop
out
in
into
lret
rcl
cmp
into
jmp
rcr
fcomip
iret
stc
neg
fiadds
int
mov
iret
in
out
fnsave
cld
lock
ljmp
test
aam
aam
mov
xchg
int
lret
ljmp
ljmp
fdivp
jmp
mov
out
in
loopne
adcl
fmul
sti
ljmp
in
loop
xchg
out
sti
fsubrp
decl
cs
ljmp
lret
cmp
cmp
xchg
test
fcmovne
loope
divb
cmp
ss
idiv
aad
aad
rcl
xlat
std
leave
or
enter
cld
cli
fcmovu
in
test
aaa
out
cmp
rol
ror
dec
fcmovb
out
sar
out
xchg
or
lock
in
ror
int3
cmc
cld
cs
ds
clc
sti
xchg
icebp
jmp
or
in
and
lea
fnop
aaa
jmp
ljmp
inc
fcomp
loope
loope
test
repz
jmp
xor
int
ror
cmp
enter
neg
ret
test
rolb
jmp
out
xchg
fisubrs
xor
int
fmul
into
ret
loopne
icebp
rol
and
fildl
subl
xor
xchg
test
add
xchg
add
jmp
int
mov
cmp
xchg
test
jl
add
out
aaa
in
call
in
repnz
fadd
dec
hlt
hlt
int
jmp
test
rcl
aad
ret
in
xlat
int
fxch
sbb
loope
rcl
or
lret
mov
lock
out
in
ss
in
repnz
clc
jmp
cmp
vpaddw
xlat
test
call
loopne
jmp
out
ret
xor
dec
cmp
cmc
repnz
ds
mov
loopne
xchg
test
out
fists
shlb
out
cmp
cli
adc
lret
aam
call
and
lock
xor
ret
jmp
roll
loopne
aad
ljmp
jmp
xlat
lret
hlt
aaa
fcmovu
rcl
cmp
shl
cmc
roll
in
vpsubd
leave
jecxz
xchg
jecxz
leave
ret
sar
clc
out
fst
xlat
cmp
loopne
fdivrp
xlat
imul
mov
and
ljmp
int
jecxz
rcr
xlat
lock
fld
cmp
cmp
in
mov
faddp
iret
xor
lock
icebp
enter
ret
aad
push
fcmovbe
sti
std
jmp
mov
mov
shr
xlat
out
cmp
std
sarb
div
in
loopne
stc
std
jecxz
fucomip
popl
loop
sti
hlt
divl
cmp
stc
lret
fyl2x
icebp
rcr
fpatan
jmp
xlat
fucomip
mov
xchg
mov
xchg
xor
fcomp
xor
out
iret
fsubr
loope
loopne
cld
test
sub
enter
mov
out
rol
aam
clc
idiv
lret
repnz
cmpb
int
les
in
xchg
in
das
jmp
clc
aaa
jmp
cmp
and
std
ret
fiadds
xchg
shr
rcl
lret
lret
cli
repnz
aad
test
lea
mov
lea
xor
out
in
clc
cmp
repz
fst
iret
int3
roll
call
in
in
mov
add
int
xor
repz
cmp
ljmp
adc
std
sar
mov
loopne
xchg
shrl
cs
in
lret
jmp
repz
fcmovnu
mov
xchg
test
out
test
xchg
jecxz
mul
iret
enter
int
xorl
ds
call
lock
ljmp
fsubr
and
inc
in
fsub
imul
jmp
cli
jmp
shl
call
sbb
sbb
stc
enter
call
loop
aas
hlt
jecxz
cli
in
jmp
out
fsincos
fcmovnu
into
aam
and
jmp
lret
loope
xor
test
in
std
fucomi
fdivrl
cli
repnz
call
iret
mov
lock
jmp
divl
sub
out
lock
cmp
lock
ffreep
test
leave
test
jmp
xor
fcmovne
jmp
cmp
add
sti
aam
jmp
cld
repz
iret
enter
cmc
in
idivl
out
xlat
cld
test
jmp
cld
shr
in
icebp
jecxz
into
sub
cli
aad
stc
fadd
shl
into
cmp
sbb
ret
out
mov
xchg
jecxz
mov
ret
ret
leave
sti
out
jecxz
cmp
loope
cmp
faddl
mov
int3
xchg
leave
in
fadd
into
in
fcomip
shl
fiadds
shl
jecxz
jecxz
cli
test
hlt
in
sarb
in
stc
and
into
loop
stc
fcmovnu
out
out
dec
cld
fsubrp
out
xor
aam
aas
shr
jmp
cmp
ret
repz
ljmp
std
jecxz
xchg
call
lret
xor
in
idiv
repz
std
aam
out
sti
leave
or
in
sub
divl
cmp
fcomp
repz
cmc
fnstcw
lock
shl
filds
xchg
out
jecxz
loopne
in
aad
cmc
idiv
xlat
sti
cmp
roll
neg
jecxz
mov
jmp
shll
loope
neg
fcmovu
lock
out
stc
cmp
ffree
cmp
enter
out
aad
xlat
stc
enter
aaa
repnz
std
fdiv
fsub
loop
call
out
mov
std
test
lds
in
clc
rolb
fadds
in
clc
xlat
decb
xor
out
std
int3
hlt
in
out
enter
lock
fcmovnu
leave
ror
ficoms
std
enter
into
ffree
xlat
in
out
in
out
mov
mov
cmp
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
cs
jle
jge
jl
jmp
xor
xor
inc
fcmovb
xchg
hlt
adc
int3
cli
in
shl
loope
shlb
xlat
out
sar
xlat
sti
add
stc
std
test
imul
call
out
xchg
in
in
idivl
into
cmp
enter
aas
faddp
roll
fdivrp
fmul
loopne
or
xor
cmp
repz
ljmp
ret
ret
stc
neg
loope
in
lret
out
int
xchg
leave
hlt
out
in
cmc
jmp
cld
aaa
sarb
cmp
mov
mov
mov
sub
in
mov
iret
shl
cmp
lock
sarl
clc
xlat
fcmovne
fmulp
call
fmul
xor
into
ffree
repnz
cmp
ds
roll
lret
fmulp
ret
lret
in
lock
in
out
out
cld
sti
fsubr
ror
ds
fadds
test
jecxz
std
adc
cmp
dec
ss
clc
fistpll
not
jmp
cld
cld
std
in
jmp
addb
ljmp
cmp
neg
in
sar
sti
in
jmp
xchg
out
shr
repz
xor
clc
int3
cld
repnz
mul
test
call
in
loopne
xchg
xor
ret
shr
lret
repz
in
rcl
vpaddq
jmp
out
nop
repz
mov
in
ss
hlt
iret
cmp
fldl
fnop
sti
call
stc
repz
mov
out
out
xor
jmp
std
shr
adc
aam
xchg
mov
into
int3
adcb
in
xor
aas
add
test
rol
out
test
icebp
jecxz
nop
cmc
xchg
int
jmp
enter
xlat
addl
fldl
out
out
int
imul
sar
ds
std
fsubp
test
mov
ret
fsubp
loope
adc
jmp
out
shl
repz
out
lret
int3
fcmovbe
xor
std
cld
ret
fxch
mov
out
enter
in
jmp
out
imul
fsubr
fucomp
flds
clc
stc
cld
cli
loope
in
lret
test
out
in
aaa
lret
aaa
in
lret
repnz
loope
fcom
test
sti
addl
xor
cmp
cmp
lret
cmp
call
loop
aas
loop
out
mov
loopne
int
out
int3
imull
jmp
std
fcmovne
sarl
jecxz
ffree
cmp
rorl
mov
stc
lret
aas
int3
xor
in
idiv
int
aam
repz
fistpll
mov
int
mov
xor
aam
fdiv
and
xlat
iret
cmp
cmc
shl
in
sub
ret
mov
in
out
call
std
call
loopne
sarb
xchg
cld
enter
mov
fcom
cmp
jmp
fnstcw
rcl
out
sar
fcmovnb
test
shl
out
popl
add
sub
out
cli
std
ror
sub
repnz
loope
hlt
lret
sar
test
or
ret
out
in
cs
xor
xchg
enter
test
xchg
mov
call
cli
cmp
in
cmp
idiv
repnz
hlt
ret
leave
fiaddl
out
roll
xor
xor
fmul
jmp
loop
test
call
jecxz
adc
and
in
in
loop
ljmp
jecxz
ds
loopne
xor
enter
test
into
lock
out
xor
fincstp
lret
lock
clc
and
test
in
cmp
jmp
ss
ljmp
cmp
cmc
test
cmp
jecxz
jecxz
std
mov
repnz
pop
stc
das
call
cmp
fcomp
rol
out
cli
ret
mov
out
lret
out
lock
in
stc
idiv
cmp
ror
aas
loopne
add
decb
fidivs
into
jecxz
ss
xor
jecxz
loop
and
cld
cmp
sti
iret
fdivr
cli
int
loopne
lock
ret
in
leave
xor
sti
repnz
ds
into
cli
sti
cld
neg
cld
in
lret
loop
int
clc
in
fsub
cmp
clc
jmp
ds
idiv
out
xbegin
fcomp
call
sar
out
neg
out
lret
xlat
stc
lock
jmp
test
std
in
in
into
out
std
icebp
ret
ss
lock
sti
clc
fucomip
out
and
ret
cld
xlat
leave
enter
mov
cld
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
lds
cmp
add
repnz
lret
out
fcmovne
lock
inc
out
jmp
lret
enter
repz
into
xor
cld
call
shl
stc
cli
bnd
cmc
ret
fiadds
int
out
ret
out
shlb
into
cmp
in
fnstcw
rcr
mov
mov
jecxz
rcll
repz
in
in
xor
addl
cld
out
cmc
neg
loopne
jmp
sub
jmp
in
iret
aaa
int
test
repz
mov
test
int
mov
cmc
out
repz
cld
cmp
sti
fstp
ret
cld
sar
cld
call
xchg
xor
lock
in
repnz
out
aad
ret
in
xor
loopne
mov
out
lock
lret
in
lret
ljmp
cli
hlt
aad
out
cld
out
ljmp
leave
jmp
call
in
stc
ss
cld
filds
in
ljmp
xor
hlt
jmp
xor
cli
xor
les
cld
in
sti
sti
cmc
lret
call
mov
stc
fidivl
idiv
loop
aam
lock
addl
mov
xchg
mov
out
cld
aad
test
add
in
leave
mov
dec
cld
std
shl
std
mov
xlat
icebp
leave
out
xor
enter
rcr
in
hlt
out
fisttps
int3
cld
icebp
int
rol
repnz
cli
fld1
into
out
leave
repnz
call
in
cmc
icebp
sub
cmc
fnstsw
ret
cmp
in
fcmovnb
les
call
iret
in
xor
stc
out
clc
cmp
cmp
fdivp
fcomip
cli
xchg
loop
mov
leave
faddp
xorb
in
sarb
icebp
lret
lock
test
cmp
leave
in
mov
ss
out
cmp
loopne
icebp
loopne
std
into
cmc
fsin
jmp
int
out
call
aam
iret
ljmp
dec
and
fsubp
incb
mov
pop
hlt
in
aaa
mul
fnstsw
lock
in
fldl
mov
fcmovb
in
lret
ljmp
xor
jmp
lret
loop
ret
stc
xchg
test
in
repnz
cs
sti
out
repnz
in
in
call
loop
neg
aam
loop
fsubr
loop
lret
mov
int3
xchg
nop
repz
cli
int3
xor
stc
fadds
test
neg
xchg
enter
into
lock
in
in
xor
aaa
ret
lret
out
sti
hlt
hlt
out
test
jmp
in
mov
divl
in
in
repz
repnz
loopne
stc
fcmovbe
icebp
mov
xlat
int
in
stc
cld
icebp
enter
test
in
clc
shr
sbb
sti
lock
fmulp
roll
in
call
int3
out
call
adc
flds
ret
out
leave
iret
call
lock
hlt
out
lret
ljmp
loop
repz
cld
xchg
mov
in
ficoms
rcl
icebp
shr
ljmp
test
fcmovnu
ret
iret
out
jmp
xor
out
lock
out
std
loope
fdivp
sar
fnstcw
repz
jmp
lret
xor
lret
mov
repz
cmp
loope
test
call
jecxz
fucomi
std
mov
not
iret
cli
lret
fdivrp
fiaddl
ret
mov
incl
vcmpsd
std
jmp
cmp
ret
out
call
mov
mov
aam
icebp
std
rcr
out
out
cld
cli
aad
ds
sti
fldln2
mov
sti
out
fisttpll
iret
in
cmp
hlt
fcmove
cli
rcl
rcr
ret
mov
in
loope
lock
jmp
cmp
fldl
loope
leave
fcmovnu
clc
xchg
loope
ljmp
out
rcr
rolb
cmp
stc
cmp
leave
mov
int
hlt
shlb
fcmovbe
cmp
cmp
ds
lock
fsub
test
cmp
xchg
xchg
out
out
out
fnclex
cmc
stc
fidivl
fxch
lock
sbb
loop
fiadds
lock
nop
icebp
loope
cs
in
lret
cld
lret
hlt
aaa
ds
rcl
aas
in
out
enter
fucomip
fimull
or
lea
cmp
jne
jmp
int
ds
int
lock
lods
cmp
jle
jge
jl
addl
loop
aam
cmp
hlt
in
rcr
sti
ret
sti
int
jecxz
into
sub
in
das
lret
icebp
aad
lret
int
rcr
lock
test
sar
repz
loopne
fists
aad
xor
clc
test
rol
and
fcoml
test
ror
cli
in
cli
into
lock
stc
xor
incb
in
adc
int
out
leave
call
cmp
addl
int3
lret
out
das
fnstcw
cmp
xor
aaa
xlat
int
in
ffreep
repnz
xlat
enter
cmp
loopne
loop
imul
xor
clc
fcom
aam
test
ret
xor
leave
ljmp
cld
xchg
into
cmc
repz
fistpll
int
mul
xlat
shl
jmp
leave
jecxz
fadd
out
in
jmp
sub
aad
hlt
shlb
into
les
mov
test
jmp
ret
in
in
cmp
jmp
cmp
hlt
stc
hlt
mov
ljmp
test
mov
hlt
enter
stc
div
lret
ss
in
icebp
aad
rorl
xchg
lock
mov
lret
rcl
vpand
ljmp
sar
call
into
xchg
jecxz
std
out
out
cmc
xor
jmp
int
into
lret
rol
repnz
xlat
mov
out
lret
cs
xlat
jmp
in
out
cmp
cli
aad
out
call
in
mov
out
stc
mov
idivl
sar
test
movb
out
fiaddl
lock
ds
cmp
cmp
shl
cmp
cmp
repz
xchg
test
mov
mov
mov
xlat
imul
xor
sti
ljmp
clc
in
sbb
loop
test
int3
sub
lock
stc
iret
fmulp
std
in
in
cli
test
ret
xchg
out
mov
jmp
sub
lret
lret
xor
xor
std
fcmove
xor
loope
cld
fdivp
test
jmp
out
adcl
out
iret
cmp
loop
ljmp
out
std
xchg
mov
out
sub
aad
xlat
cmp
ds
fsub
fsub
cli
lret
loop
in
rol
cmc
hlt
rcr
cmp
sti
sti
fcmove
rcl
fdivr
in
in
ret
icebp
out
int
and
bnd
xor
repz
sbb
idiv
out
lock
movl
nop
sar
xor
loope
rcl
incb
loope
cmc
loopne
fisttpll
stc
int
ret
out
int3
imul
aad
fiaddl
lock
jmp
out
ret
repnz
ror
imul
call
rcr
cmc
rcr
fiaddl
int3
aam
in
ljmp
xorl
test
xlat
call
std
iret
ret
jmp
int
shr
rcr
loop
rol
dec
cmp
stc
int
ds
mov
clc
out
into
into
rcll
lock
sub
cmp
fstp
cmp
sarb
repz
mov
in
cld
xchg
rol
xor
fcmovne
rcr
stc
shl
call
aas
sti
mov
in
xchg
ror
jecxz
fidivl
fildl
clc
cld
cmc
out
xchg
std
and
in
jmp
test
hlt
out
out
ss
test
in
mov
out
repz
lret
xor
rcl
int3
xlat
hlt
enter
aas
ret
ret
lret
mov
in
out
icebp
in
rcl
test
in
fstp
in
cmp
and
jecxz
cld
lea
int3
cli
repz
xor
out
iret
clc
into
aas
jmp
sti
fsub
roll
lret
nop
ljmp
xor
call
cld
in
cld
fcmovnb
fsub
out
jecxz
xchg
mov
out
xlat
fcom
cmp
fdiv
fnstsw
fdivrp
orb
in
out
lock
xor
cmp
shl
hlt
repnz
out
mul
aad
rcl
filds
rcl
repz
sar
in
cli
call
aam
jecxz
xlat
rolb
in
int
int3
out
fisttpll
aaa
sarb
hlt
in
aad
in
cmp
lret
stc
int3
test
in
loop
xchg
inc
or
xor
jmp
int
enter
int
lds
enter
jl
add
xchg
xchg
call
xor
out
aad
fxtract
xor
xlat
aas
aad
cmp
icebp
test
ficoms
xor
enter
cmp
loope
cmp
aad
les
test
int
xchg
mov
xlat
shl
sar
iret
repnz
cmp
std
repz
mov
lret
ljmp
aaa
xor
shl
out
frndint
cld
adc
call
fcmovne
mov
mov
xor
xor
lret
fnsave
cld
std
enter
repz
leave
jecxz
jmp
fimuls
out
aaa
int
xlat
xor
cs
shl
fdivp
loopne
test
lret
fsin
sub
adcb
jecxz
sti
into
aad
and
in
test
fxch
xor
lea
jmp
aad
fnsetpm(287
ror
fmul
call
sar
lock
aas
loop
nop
cld
loop
loop
xlat
div
in
aaa
std
leave
int
rol
fcmovb
out
loope
ret
cld
fsub
in
xchg
lock
ljmp
out
leave
iret
icebp
cmp
fstp
aam
xchg
mov
mov
in
das
xor
leave
out
cmp
hlt
loope
cld
hlt
in
aas
out
lea
lea
iret
cmp
into
lock
sar
clc
lret
loopne
aad
repz
cld
hlt
out
or
nop
loopne
xor
icebp
aaa
jmp
ds
aas
in
ret
sbb
add
mov
out
std
cli
in
test
out
repz
cmp
test
fcmovnbe
sub
stc
mov
test
std
fiadds
repz
enter
lock
ffree
bnd
fmul
shl
cmp
xor
in
shr
in
cli
les
xor
in
testb
jmp
loopne
loopne
into
test
add
ljmp
ljmp
cmc
in
mov
lret
xchg
nop
cld
xchg
lret
loope
lock
repz
cmp
icebp
std
testl
mov
cs
fadd
sub
iret
in
repz
xlat
sti
clc
rcl
stc
repz
in
loope
loopne
lret
ljmp
stc
cmpb
xlat
sti
fxch
shl
add
test
icebp
rcl
lret
idiv
xor
cmp
sbb
aam
bnd
clc
enter
in
loope
out
enter
fdecstp
jmp
rcr
loopne
jecxz
or
in
repnz
into
in
lret
int
lret
cmp
ds
jecxz
mov
out
ror
addb
loop
ljmp
cmp
repz
les
out
fdivl
call
xor
xlat
out
fdivrp
loope
shl
bnd
out
mov
test
out
in
loop
xlat
loopne
in
cld
ljmp
cmp
ds
stc
ret
sti
lea
mov
in
vpsubsw
xlat
aad
stc
lock
out
out
hlt
in
loop
loope
sbb
leave
mov
jmp
mov
in
ret
ret
repz
lret
int
ds
cli
hlt
fildl
jmp
cld
out
sub
out
xor
shll
faddp
in
out
cld
lock
ljmp
jmp
in
jecxz
enter
in
fmulp
push
sti
sti
iret
cmc
jmp
fcomp
in
int
test
cmp
in
into
ss
sti
ds
loop
fiaddl
lret
int
jmp
out
cmc
xor
repz
out
stc
fildl
movl
out
cli
xchg
mov
cmc
repnz
out
jmp
sar
int
std
les
fmuls
mov
int3
loopne
in
aaa
fdiv
into
int3
jmp
cmpl
test
call
int3
loop
mov
xchg
leave
fsub
xor
xor
in
loope
cmpl
flds
loop
fxch
in
out
out
jmp
xor
aas
cmp
cmp
loopne
sti
ljmp
lock
jecxz
aam
xor
cmp
in
out
xlat
rcr
in
lret
lret
roll
divl
lock
jmp
aad
int
loopne
div
loopne
stc
fprem
mov
filds
mul
xor
out
not
cmp
cli
repnz
fst
orl
test
xchg
aam
xor
cmp
loope
out
ljmp
loopne
jmp
ds
ror
aad
fistl
loop
jnp
or
cmp
jle
jge
jl
xchg
xchg
jmp
sti
shr
cmp
in
enter
iret
cld
jecxz
add
fcmovu
xlat
cli
fneni(8087
int3
loopne
loopne
ljmp
stc
aad
lret
int3
into
and
test
mov
iret
loop
in
fcom
out
lock
xor
icebp
loope
hlt
jmp
rcr
sub
int
vpminsw
in
repnz
loopne
cli
ds
xchg
fsub
xchg
test
call
repz
aas
call
rcl
aam
mov
hlt
fiaddl
lea
fdivr
aaa
fscale
in
lret
rcr
aad
loop
test
idiv
fisttpl
mov
int3
loop
xor
cmp
ss
repz
and
xchg
clc
in
hlt
aad
ljmp
mov
stc
das
out
out
not
leave
in
fucomp
xor
fcom
xlat
fld
aad
enter
std
mov
int
out
in
ret
neg
out
ds
clc
mul
fidivrs
out
cli
ljmp
cld
repnz
rol
jecxz
xor
cmp
aam
shl
xlat
leave
mul
in
fimull
test
ret
aam
std
shr
xor
hlt
loopne
cli
jecxz
fcmove
std
clc
xchg
adcl
cli
cmp
jmp
int
cmp
ds
addl
lret
in
bnd
out
xor
out
icebp
icebp
stc
shl
not
stc
cmp
cmc
sar
loope
roll
loopne
mov
in
aad
ret
sti
aad
fucomi
adc
fisttpl
and
lock
iret
sub
into
icebp
cmp
aaa
xor
ljmp
roll
lret
sub
rolb
fsincos
iret
hlt
in
fcomp
aas
into
ret
test
out
ret
xchg
xchg
nop
loope
bnd
in
jmp
cmp
leave
dec
fdivrp
ret
out
ret
fdivrs
loopne
loop
cld
in
cli
repz
out
ljmp
addb
cld
xchg
mov
loopne
loop
repz
repnz
fldl2t
xor
iret
int3
roll
in
out
out
or
in
faddp
lock
into
sti
jmp
cld
aam
out
in
test
repz
rcll
sar
sti
in
cmp
cld
cmp
clc
div
xchg
aam
cmp
xchg
in
clc
ret
std
int3
fldln2
ss
aad
in
flds
leave
filds
lock
loope
jecxz
lret
aaa
shr
and
lock
jmp
out
lret
lret
loop
call
aad
fcmovu
hlt
rcl
adc
repz
call
fmuls
sub
test
lret
ss
call
fldl
in
loopne
sti
int3
xchg
mov
in
out
leave
int3
out
xor
cmp
cld
aas
into
cmp
fcmovnu
lret
leave
lret
std
loope
iret
cld
mov
lret
ss
into
addb
aam
fidivrl
xlat
or
jmp
xor
in
repnz
lret
rcr
hlt
icebp
ss
jecxz
cmp
leave
int
int3
fimuls
out
jmp
xlat
sti
fcom
ds
shl
sub
cli
adcl
xor
lret
leave
jmp
lret
fistpll
aas
hlt
add
cld
aam
jecxz
int
iret
fisttpl
cmc
out
xbegin
clc
jmp
stc
sti
cmp
mov
out
movb
jmp
das
xor
aam
fidivrl
enter
cmp
mov
repz
std
and
nop
xor
icebp
out
fmul
out
cmp
rolb
testb
in
fildl
xor
imul
divl
enter
iret
stc
roll
jmp
fcmovu
jecxz
into
shr
int3
loop
enter
cmp
cld
stc
rol
icebp
rcr
int3
cld
std
lock
xchg
decb
in
rcr
neg
sti
sub
ss
mul
sti
ror
iret
clc
fdivr
testl
lock
in
int
jmp
fstpt
aas
out
rol
cmpb
fdiv
mov
clc
fiaddl
ds
ret
divb
lret
aas
in
fdivr
fmul
ret
xlat
clc
fildl
fneni(8087
fucomi
fsub
xchg
in
lret
fcmovnbe
cmc
jmp
into
sar
cmp
loope
jecxz
addl
mov
ret
enter
cli
fadds
test
call
add
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
push
jmp
pop
cmp
jle
pop
add
out
loope
imul
ljmp
in
in
fcmovne
loope
aas
cld
std
aad
enter
sti
xchg
in
ss
iret
cld
out
not
aad
loope
xchg
sti
fcomi
out
xlat
stc
in
clc
in
lds
loop
xlat
xlat
lock
cmp
fcomip
loop
xlat
shl
loope
hlt
aad
in
cli
enter
xchg
xor
out
hlt
iret
out
idiv
cld
lret
fsubr
ds
mov
std
ljmp
jmp
cmpb
lret
cmp
sti
jmp
rcl
in
sub
testl
adcb
jmp
cmp
int3
cmp
cmp
xlat
loopne
or
out
lret
fsubrp
repz
sti
out
fmul
fst
stc
sbb
fdivrp
incl
repz
lock
int
vaddsubps
cmp
int3
cmp
addb
addl
or
and
fsubp
das
cs
cli
fxch
clc
fadds
lock
xlat
rcl
test
out
fdivrp
rcl
rol
lock
xor
iret
lret
in
or
not
sar
aam
ds
fcomp
adc
lock
xor
in
xor
fdivr
icebp
aad
cmp
ds
loope
out
fildl
lret
fcomi
out
lock
sti
jecxz
in
clc
fdivr
xor
fstp
int3
les
xchg
loope
lret
lret
sarb
jecxz
not
ret
sar
lret
jecxz
int3
int
int
repnz
aam
xlat
fcmove
cmp
xor
iret
repz
dec
fdivp
xchg
leave
ljmp
cmc
not
shll
cld
xor
fstp
into
call
repnz
fcom
std
shl
std
cli
out
adcb
into
cmc
jmp
enter
jmp
int3
cmp
ret
loopne
out
xchg
clc
cmp
shl
test
std
into
aas
std
int3
out
ffreep
xlat
loop
and
loopne
out
roll
cmc
fcomi
jmp
int
cli
roll
bnd
lea
loop
in
in
out
rcl
hlt
aam
xlat
int
sar
lock
rcl
out
cmpb
lret
adc
std
cmc
lret
aam
call
cmp
jecxz
shl
and
mov
or
out
in
int3
in
iret
fld1
ss
lret
repnz
xchg
fxch
in
out
in
jecxz
shr
lret
cmp
std
loope
fdiv
aas
imul
clc
test
out
in
iret
or
aad
repnz
divb
aam
lock
fadd
flds
fsubp
test
fisttps
shr
repz
loope
loopne
lds
fisttps
cld
ljmp
fcmovnbe
cmp
cmp
xor
ljmp
cmc
out
loopne
out
ljmp
xlat
shl
xlat
jecxz
xor
clc
loope
cld
cli
enter
test
adc
xorl
into
rcr
shl
shl
repz
xchg
xchg
int
in
call
std
fcmovne
clc
test
xchg
test
leave
sti
ljmp
adc
repnz
enter
sti
ljmp
out
ds
call
into
cli
int
in
sub
xor
lret
xor
jmp
repnz
ret
fcmovb
out
mov
xchg
sub
repnz
repnz
int
in
sbb
aad
out
fstp
xchg
xchg
ljmp
xor
cli
lret
in
into
cmp
clc
loop
cld
fcmovu
enter
int
shlb
rol
out
rcr
cmc
fldln2
cld
stc
loop
in
loopne
hlt
in
mov
loope
test
loop
out
in
mul
xor
int
cmp
hlt
test
fsubr
fcmovne
test
out
jmp
shll
shr
fmul
lret
ljmp
int3
in
call
mov
call
int3
int
ljmp
divb
aas
lock
repnz
iret
fadds
clc
into
lea
shlb
hlt
jmp
fdecstp
call
fcmovnbe
in
cmc
sar
mov
mov
in
lds
int
out
iret
cmc
loopne
icebp
rcl
divl
aas
loopne
sar
in
sar
cmp
stc
sti
repnz
xchg
call
ljmp
out
ror
fucomip
lret
lock
testb
flds
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
jmp
jl
add
std
leave
in
rolb
into
clc
xor
hlt
hlt
std
fistpll
fsin
sarl
aam
mov
cli
int3
int
jmp
nop
adc
loopne
cmp
ror
fcmovne
enter
jmp
lret
ljmp
int
shl
lock
cs
incb
cmp
fsqrt
xchg
aam
lret
call
test
shl
jecxz
cmp
xor
sar
test
out
ffree
mov
loope
in
in
mov
xor
cmc
jecxz
in
lock
stc
sti
cli
cmp
fucom
cli
sti
out
out
test
adc
out
leave
xlat
rcr
sar
lock
repnz
sar
cmp
rol
ljmp
sti
loop
inc
xor
lret
cmp
xor
ds
addl
fmul
ficoms
icebp
loop
stc
repz
lret
fmul
cmp
stc
icebp
cmc
aam
loop
popl
mov
xchg
xor
cli
xlat
lret
cmp
fcomip
fmull
sbb
fisttpl
xor
xor
cmp
hlt
shl
lock
int
ds
in
xor
addb
sub
aad
sti
into
cmp
icebp
cmpl
fcomi
mov
in
mov
cld
decb
xor
into
fdivr
fcmove
jecxz
ds
ds
fsqrt
cmc
cmp
jmp
fldl
loopne
les
aam
cmp
lret
push
ljmp
in
loop
in
mov
lret
lret
repnz
test
rcr
int
cmc
out
aam
fld
lret
mov
mov
enter
rol
sub
cmc
shl
cmc
call
aad
jmp
fisttps
xchg
xchg
test
xor
cmp
cli
enter
out
call
mov
addb
out
std
lret
out
enter
cmp
fsubrp
cmpb
adc
les
int3
out
mov
leave
cli
repnz
lret
shr
adc
or
fimull
aad
xor
clc
fsub
das
enter
icebp
or
mov
test
ljmp
in
lock
std
sarb
hlt
fcmovne
cmp
jmp
jmp
adc
xchg
lret
xor
into
cs
lret
test
in
xor
loopne
out
out
jmp
clc
jecxz
ss
in
out
fsubrp
test
hlt
jecxz
aad
fucomi
in
sbb
nop
out
loopne
cs
xor
in
cmp
sbb
loopne
hlt
call
jmp
xchg
xchg
rol
loopne
aaa
icebp
shll
stc
sarl
cli
decb
out
out
out
sti
aam
sti
xlat
enter
loope
test
fsincos
rcr
jmp
mov
xchg
cld
fdivr
fcomip
enter
xor
int
or
cld
aam
rcr
jecxz
out
test
in
rcl
repz
lock
cmp
in
in
flds
cli
aam
jmp
ljmp
imull
in
shl
out
div
out
xlat
loopne
in
cmp
in
loope
decl
aam
repz
cld
int3
jmp
cmp
repnz
sbb
test
xchg
jmp
call
ss
ds
cmc
xchg
out
cmp
or
shl
shl
xlat
das
les
cmc
lret
cmp
jmp
out
les
enter
iret
fucomp
orl
jecxz
in
cld
testb
sti
repnz
fcmovnb
std
add
fimull
xor
das
idiv
std
aad
repnz
fdivr
cmpb
sbb
in
fcmove
call
mov
icebp
repz
cmp
cli
in
cmp
adc
cld
ds
fcmovb
clc
lds
fimull
int3
sub
ror
leave
out
cmp
ror
rcr
add
xchg
sti
in
out
out
lret
in
out
xor
jecxz
imulb
fsubr
aas
sar
xlat
sti
cmp
test
fsin
fmul
int3
out
int3
repz
xchg
aam
jmp
cmc
aas
icebp
sar
fsubp
in
loope
mov
rolb
mov
in
hlt
xorl
shr
fnstenv
out
aam
fst
fmulp
repz
lret
mov
mov
loope
out
fbstp
fadd
leave
lret
std
enter
xor
in
loope
and
inc
or
test
inc
add
add
jmp
lret
ffree
fst
in
notl
jmp
push
mov
pop
add
cmp
xchg
jmp
mov
and
in
lret
repnz
ljmp
shl
jmp
out
enter
jmp
rol
leave
repnz
call
lock
incb
les
enter
leave
rol
jmp
cmp
and
shl
div
fdivp
mov
std
shl
into
cmc
leave
cmc
cs
fcmovnbe
cmc
xlat
ss
hlt
adc
ret
mov
in
dec
xchg
shrb
iret
shl
out
fstp
ljmp
fnstsw
movl
cmc
xchg
int
cs
cmp
leave
int
repz
fiadds
cli
cli
ljmp
sub
out
into
xor
in
fcmove
aas
ffree
lock
movl
xchg
lock
jmp
aam
out
ds
cmp
sti
icebp
hlt
icebp
adc
call
out
lock
jmp
lret
shl
ss
jmp
xlat
and
fucomp
lret
stc
lret
ljmp
fnstenv
xor
enter
rcl
sbb
clc
loope
hlt
mov
addb
xor
icebp
out
jmp
sti
sarl
iret
cli
or
test
std
enter
mov
mov
loopne
xor
jmp
xor
fscale
div
shl
aad
clc
xchg
call
mov
in
lret
loopne
in
enter
mul
loopne
loope
les
in
out
push
iret
lret
ror
aam
loopne
shlb
fisttpl
std
call
test
xchg
out
xor
cli
out
fstp
test
loope
test
sub
fmulp
lret
mov
aaa
into
lret
fxtract
shll
out
cli
cmc
in
cmp
stc
repz
fimull
ds
les
fadd
fldt
call
out
ret
ret
testb
enter
out
repz
leave
in
shr
cmc
fyl2xp1
addb
cli
fucom
lds
sti
in
cmc
fsubrp
call
fprem
ss
test
loope
cmc
clc
ds
enter
test
int3
loopne,pt
fld
std
xlat
out
roll
in
loope
roll
lea
loop
in
out
div
sti
idiv
into
rcl
loope
fcom
out
fld
xchg
and
mov
lret
lret
leave
cmc
sar
cmp
ror
clc
fstpt
in
test
jmp
filds
mov
aaa
iret
repnz
stc
xor
in
stc
in
test
add
out
sub
xor
ret
aaa
xor
out
int
sar
jecxz
test
fimuls
lret
cmc
rcl
faddp
out
sub
jmp
in
cmp
or
xchg
loop
loope
orb
loopne,pn
xor
cmp
int3
cmp
test
icebp
fdiv
call
lret
rcl
cmp
loope
rolb
and
adc
shlb
in
ljmp
sarl
cmp
aas
push
fsubr
loopne
mov
mov
jmp
xor
in
cmp
fdiv
cmp
lock
cli
cld
rcr
cmc
cli
or
and
into
ljmp
into
std
ljmp
lock
stc
fstp
test
mov
mov
mov
lock
in
cmp
jmp
rcl
lock
into
fdivr
sub
cld
mov
mov
into
in
xor
cld
cmp
clc
out
shl
out
out
jmp
fxtract
jmp
enter
loop
fcomip
sub
cmp
xlat
les
out
lret
test
aad
fmul
mov
loopne
ljmp
cmp
int
int
aaa
int
lock
loop
loop
out
ljmp
loop
jmp
xor
out
rcl
shr
fcmovu
in
aas
jmp
fneni(8087
out
std
call
ret
repnz
hlt
ds
lret
fcmove
mov
fadds
cs
stc
out
lret
int
aad
stc
fnstcw
ds
icebp
fmuls
iret
iret
fsubrs
ss
hlt
xor
filds
incl
test
decb
into
jecxz
xor
aad
cld
int
std
loope
cmp
loopne
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
mov
jl
add
in
ljmp
les
shl
repnz
fdivrs
cmp
repz
xchg
call
sub
lock
sti
sarb
div
in
xor
bnd
fsub
xchg
out
in
mov
fsub
out
jmp
ljmp
fdivrp
stc
enter
std
jmp
mov
shl
sar
out
xor
repnz
std
aam
in
fdivrl
jecxz
fadd
fndisi(8087
ljmp
mov
shl
in
iret
ss
div
iret
cmp
cmp
neg
cmp
cli
jecxz
loop
cmc
out
call
lret
xor
leave
fdivrl
cmp
sti
cmp
flds
out
call
out
repz
jmp
fidivrl
not
cmp
test
dec
stc
lret
mov
jmp
in
fcmovne
rolb
in
fcmovnbe
aam
fmul
jmp
int
dec
jmp
les
call
ljmp
test
xchg
rolb
mov
loopne
lret
cs
lret
aad
shr
ds
ror
ljmp
cld
fcmovnb
jmp
clc
nop
test
ficoms
into
out
inc
cmp
cmpb
ret
rcl
ret
fsub
nop
adcb
fdivrs
call
dec
std
into
frndint
filds
and
in
mov
enter
fsubrp
jmp
xor
enter
faddl
lock
leave
fld
test
addb
test
xor
clc
cld
cmp
inc
aam
xchg
fst
testb
loopne
in
xor
int3
enter
cmp
cld
clc
cmp
jmp
mov
xlat
imul
xchg
jmp
lock
loop
fnstenv
imul
repnz
xlat
fsqrt
rol
loopne
cmc
stc
out
test
out
int
in
cmc
stc
sti
iret
aaa
ss
cmc
ss
ss
enter
fninit
mov
int
xlat
lret
aaa
lret
fmul
cmp
fdivr
fdivrs
rol
idiv
mov
cmc
xchg
xor
loopne
cmp
fsub
call
iret
in
cmp
xchg
stc
call
lret
decb
out
out
repnz
hlt
shr
fcom
cmp
adc
faddp
fst
lret
clc
in
loop
cmc
in
out
out
out
iret
xlat
lret
in
loope
sbb
cmp
fdivrp
loop
jecxz
out
mov
call
fmul
div
cli
shl
xchg
ds
loop
fucomip
jmp
jmp
repnz
ret
out
leave
jmp
jmp
stc
stc
in
fsincos
loope
fiadds
int3
xchg
out
ds
ret
icebp
cmp
lret
sarb
lret
cmp
loop
out
xlat
cmc
ret
ljmp
cs
lret
hlt
div
ss
cmp
cmp
xlat
sar
fsubr
std
aad
loop
loopne
loop
xchg
mov
shr
rcr
cmp
icebp
cmp
loop
lock
repnz
test
int
xchg
out
shr
repnz
ret
leave
fcmovne
aad
int3
icebp
stc
sti
xchg
int3
in
leave
lret
out
in
aaa
loop
leave
repz
sar
xlat
ds
in
cmp
mov
test
sti
fsubp
xor
rcr
cmp
xor
rcr
jmp
fsubrp
out
clc
int3
shr
cld
repnz
into
xor
div
push
cmp
cmp
testb
mov
out
stc
iret
cmp
fadds
les
sti
sub
xor
jmp
addb
fsub
std
ljmp
into
in
into
fsubp
sub
sub
cli
int
fucomi
in
jecxz
shl
xchg
fsubp
in
fimull
in
xor
cli
repnz
rolb
in
call
icebp
mov
enter
icebp
cmp
shl
shl
out
xchg
icebp
mov
xor
shll
ret
cmp
fdivl
cmp
shll
fucompp
cli
jmp
jmp
out
orl
aad
out
loope
rcr
aam
in
fstp
mov
jmp
iret
in
ljmp
cmp
shl
xchg
in
mov
hlt
jecxz
jecxz
ror
in
neg
cmp
cmpl
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
adc
pop
add
roll
jecxz
fcomip
test
sub
out
lret
xor
aas
xor
aam
sbb
sti
fildl
shl
xlat
int
repz
neg
rcr
jmp
aas
lds
cmp
in
loope
in
in
loop
jmp
fldlg2
jmp
fdivr
fdivr
jecxz
add
in
out
jmp
cli
jecxz
out
xor
ret
in
fcmovu
out
fcomip
cld
xor
test
imul
test
call
shl
mov
icebp
rcl
idiv
lock
sti
adc
loopne
fcmovu
jmp
cli
lock
jmp
ljmp
cmp
out
cmp
out
fadd
clc
clc
mov
test
rorb
stc
int3
xor
cld
out
jmp
cmp
fstp
fstpt
call
jmp
lds
aaa
ret
aaa
cmp
testb
fildl
jmp
lret
xor
ss
clc
mov
neg
aas
cmc
cmc
std
fcmovnb
aam
int3
fcmovu
iret
in
jecxz
jecxz
div
in
vpmullw
fmul
into
int3
jecxz
cmp
sub
lret
int3
fdivr
iret
cld
adc
loopne
jmp
repz
xor
ss
std
xchg
and
lret
fisttps
call
imul
hlt
cmp
rcr
cmp
rol
rcl
xchg
cli
fmul
int
ror
icebp
int
jmp
clc
call
repnz
in
cmp
mov
xor
lock
test
lock
call
shl
loopne
fmull
cld
mov
std
repz
std
int3
jmp
out
fdivr
not
fcmovnu
div
test
shl
enter
lret
out
and
decb
in
sarb
out
jmp
fndisi(8087
jecxz
std
xchg
fistpll
cld
loope
incb
lret
cli
vpmaxsw
icebp
loope
rolb
loope
out
filds
mul
loop
int3
icebp
fstpt
push
out
out
out
jecxz
int
or
into
orb
xor
jmp
idivl
fadd
mul
decb
and
and
xor
idivb
out
repz
lret
out
movl
xchg
cli
in
test
icebp
sub
aam
in
aad
rcr
shlb
cmp
hlt
out
les
in
aaa
leave
rol
aaa
ljmp
cmp
sar
xchg
std
mov
out
jecxz
test
jmp
aam
cmp
stc
test
neg
fyl2xp1
mov
jecxz
shr
les
aad
fmulp
in
ret
repnz
aas
stc
sti
jmp
int
sti
jmp
sti
in
xchg
hlt
jmp
ss
neg
jmp
repnz
clc
in
aas
sbb
out
repz
in
leave
xor
xor
hlt
cmp
in
ss
ret
loopne
cmc
aad
fmul
or
orb
out
xor
out
hlt
aaa
rcr
cmp
rcr
rcr
out
jmp
test
out
clc
and
xchg
xlat
cmp
xor
fsubr
cli
sti
loope
div
ret
ds
mov
cli
pop
jmp
aam
out
in
fnsave
fdivr
xlat
fucom
lock
cmc
jmp
jmp
call
xlat
lock
xor
cmp
aam
jmp
mov
in
jecxz
xchg
mov
int3
repz
call
cmp
fucom
mov
fsub
clc
ljmp
out
fcmovnbe
lock
cld
lret
fcomi
ffreep
test
leave
imul
mov
shl
jmp
repnz
xor
fucomi
sti
cmp
jecxz
sar
sti
aas
aad
jecxz
cli
in
xchg
in
clc
in
aad
test
repz
lds
leave
sti
mov
call
loope
lret
hlt
xlat
in
cmp
loopne
and
flds
in
int
adcb
aam
hlt
shr
jmp
fst
rcl
ds
leave
xlat
in
leave
sub
shr
cld
call
test
xor
std
cmp
clc
cmp
rcl
xlat
lock
loopne
mov
stc
sub
jmp
divb
aad
rcl
cmp
fadd
cmpl
out
loop
in
jecxz
mov
xchg
sub
loopne
cmc
xlat
stc
in
shll
jmp
aas
ror
aas
aad
iret
rol
adcb
push
mov
jle
pop
add
lret
aas
roll
fcmovnu
jmp
test
jecxz
in
hlt
shl
enter
rcr
lock
cmp
rol
std
out
int3
testb
shr
repz
enter
sti
push
cmp
roll
in
xchg
in
ljmp
xlat
enter
cmp
iret
cmp
ffree
ret
out
icebp
std
loope
jecxz
shll
in
ror
enter
xor
or
sarl
rcr
test
xchg
test
shl
ret
repz
xlat
xlat
call
test
call
jmp
lret
hlt
das
icebp
stc
xor
into
ror
xlat
cmc
in
inc
repz
fcmovbe
lds
out
xorb
xor
ret
aam
xor
lret
in
cmp
cmp
ffree
stc
loopne
clc
loopne
adcb
lret
jmp
lock
in
not
cmp
rol
fiaddl
int
test
xchg
repz
out
clc
shl
cmc
fdivrp
leave
in
ds
into
shl
ret
test
sti
cld
neg
stc
fadd
test
cmc
lock
jecxz
fst
sti
add
mov
in
test
icebp
xchg
dec
fsubrp
xor
stc
repz
clc
enter
rcr
shl
filds
xchg
mov
icebp
ror
xchg
lret
repnz
out
rol
out
cld
loop
fcmovnu
fstp
and
in
jmp
ret
test
xor
xor
fcomi
in
shr
rcr
push
fxch
cli
ret
repnz
sub
cmc
repz
out
in
ret
int
cmp
lock
xor
fsubrp
aad
push
std
std
test
aam
mov
sub
in
cs
fdivr
enter
push
cmp
aam
addl
int3
ficoms
aam
lds
iret
cld
loopne
fucom
out
iret
roll
out
fisttpll
mov
not
xor
fcomp
jmp
out
fpatan
fst
repz
sti
jecxz
cld
xchg
fucomi
test
jmp
stc
fmul
int3
ds
sti
loope
cmp
std
aad
idiv
test
jmp
loope,pt
ljmp
aas
lret
lock
hlt
test
in
cld
fmuls
xacquire
in
ret
ss
lret
loopne
cmp
ret
fincstp
cli
int3
sti
into
leave
repz
fstpt
cli
rcr
jmp
ror
ljmp
xchg
test
cli
movl
enter
cmp
into
aas
cmp
aas
jecxz
flds
jecxz
call
repnz
out
in
aam
fcomp
out
rcr
cmp
cmp
fcmovb
rol
fsub
aad
out
jmp
decl
lret
enter
cmp
rcl
jmp
clc
cli
cmp
leave
cmp
out
out
jecxz
fmul
in
hlt
xor
repz
cmp
stc
loope
icebp
loop
out
loope
fiaddl
stc
clc
ljmp
sub
lret
ss
int3
in
aaa
icebp
hlt
xlat
fnstsw
repnz
jmp
loopne
mov
fcmovne
xchg
xlat
leave
sar
lret
cmp
rol
test
leave
in
test
in
mov
repz
shrb
leave
idivb
shr
repz
sar
fdivp
not
cld
cli
call
addb
iret
xor
leave
clc
jmp
repz
addl
mov
lret
in
mov
in
stc
cmp
out
rcr
aaa
icebp
clc
clc
clc
stc
cli
roll
ret
lret
cli
aad
shr
xlat
call
lret
cmp
iret
stc
in
repnz
int3
int
cmc
xchg
sub
out
fucomp
xlat
in
stc
icebp
rol
jmp
lret
fsubr
jmp
loope
mov
rol
repnz
lret
xor
rcr
fdivr
xor
rolb
mov
in
xchg
or
call
in
out
iret
icebp
fmul
int
xchg
idiv
lret
out
loop
test
out
xor
shr
into
in
int3
shl
shl
int3
cmp
clc
sti
fsub
jmp
fneni(8087
mov
ljmp
hlt
xor
int3
lret
cmp
in
std
xor
fsubp
aam
in
sti
cli
lret
loopne
out
xor
call
icebp
ljmp
lock
orl
jmp
in
xchg
ds
lret
aam
int3
cmp
repnz
sarl
test
lock
shlb
iret
stc
xor
mov
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
jae
adc
out
jle
pop
add
sarl
cmp
iret
fcomi
jecxz
testb
in
into
addb
in
int
out
cmpl
roll
lea
lret
xor
lret
iret
iret
call
out
shr
stc
and
out
jmp
mov
into
xor
iret
cmp
xor
ret
fdivr
cmc
flds
fucom
lock
xor
lret
cmp
ss
sub
rcl
leave
fcmovbe
hlt
out
mov
test
ror
in
repnz
in
shr
fchs
fstp
jmp
test
in
in
in
xor
into
aad
enter
ljmp
jmp
call
call
cmp
cmpl
ftst
clc
hlt
ret
fcmove
shl
in
test
ror
repnz
out
lret
ljmp
ret
rcl
rcr
in
enter
call
xlat
fxch
stc
in
iret
neg
in
sar
in
sbb
mov
mov
jecxz
orb
cmp
shr
lock
out
loope
aaa
iret
ds
repnz
in
ret
rcr
xor
stc
xor
leave
cmp
aas
in
ret
movb
out
loope
cld
rcr
ffreep
hlt
xor
out
hlt
ljmp
xlat
fadds
hlt
in
stc
xchg
in
hlt
xchg
loopne
in
shl
iret
idiv
enter
fcmovbe
sar
std
aam
lret
ljmp
repz
jecxz
xor
aaa
jmp
test
fsubr
mov
jecxz
test
into
shrl
int3
in
in
lret
neg
loope
int3
xchg
loope
or
enter
in
aad
ljmp
fcomp
jmp
cld
stc
aad
fcomi
xchg
in
mov
sti
iret
icebp
repnz
cmc
loop
loop
ss
fnstsw
fcom
imul
cmp
test
sub
orb
loope
xor
xor
cmp
xor
fdiv
div
stc
xor
icebp
int
int3
mov
ss
fildl
fidivrs
fsub
fisttpl
lret
ljmp
in
jmp
hlt
lret
sarb
out
hlt
lret
xchg
lret
jecxz
cld
stc
repz
lret
in
fnsave
aam
into
aam
xchg
in
lock
orl
cs
out
cmp
cmpl
fsubp
out
jmp
icebp
shl
adc
aaa
in
xor
ss
xor
repnz
clc
add
cld
out
dec
into
mov
fld
in
out
int3
fstpt
fmulp
cli
rcr
mov
sbb
les
fmul
out
rol
clc
cmp
fnstenv
movb
cmp
and
in
fcmovnu
fstp
cld
shl
aam
repz
fmul
cmp
loope
ffreep
sti
cmp
testb
out
cmc
aad
int3
out
aam
std
in
xor
test
push
loope
testb
jmp
repz
iret
cmp
leave
aaa
in
hlt
in
fcos
cmp
std
mov
iret
mov
test
jmp
div
xlat
jmp
fcmovnbe
xlat
enter
aam
into
shl
test
test
repnz
lret
out
cmp
dec
lret
out
aam
aaa
xchg
cli
mov
cmp
in
mov
call
sub
fldlg2
fsubr
cmp
lret
cmp
cmc
cmp
sarb
shl
imul
ljmp
xchg
mov
lret
shl
ret
jmp
aas
iret
sar
test
fmul
std
enter
test
in
loopne
shlb
cmp
jecxz
xor
lret
clc
aad
in
xchg
testl
sub
aad
iret
ror
cmp
fsin
in
enter
jecxz
cmp
fmull
int3
int3
jmp
jmp
ds
mul
out
out
stc
mov
rcr
jmp
fnstcw
cmp
cmp
icebp
out
fmul
sti
out
icebp
aad
out
rcr
rcr
clc
out
cmp
aam
cmpb
xlat
lret
out
loop
in
in
aaa
icebp
ret
jmp
in
ljmp
cmc
icebp
aam
cmc
sti
adc
loop
std
adc
out
fdivr
int3
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
loopne
sti
push
ret
jl
add
enter
aas
lock
rorb
in
ljmp
cmpb
loopne
hlt
ss
shl
test
cmp
ret
mov
dec
fchs
jmp
shl
fidivs
aaa
aaa
ss
int
sarl
lds
orb
fldl
call
fcmovb
xlat
out
not
icebp
cmc
cmp
icebp
vpmovmskb
cmc
cld
in
std
leave
mov
into
out
out
shr
imul
call
clc
addb
in
xlat
shl
mov
in
jmp
xor
lock
int
call
repz
lock
imul
mov
imul
lock
std
cli
out
ror
cmp
aam
cmp
into
sar
loopne
loope
fstp
testb
loope
mov
in
shlb
cmp
leave
std
ror
loopne
sub
xlat
and
loope
in
sub
mov
repz
repz
cmp
cmp
cmp
hlt
fdivp
stc
call
loope
imul
in
jmp
int3
lret
xor
in
into
iret
int
fidivrs
int
into
xchg
xchg
out
vpsubw
lret
fucomi
icebp
rorl
lret
leave
into
out
clc
xlat
ret
into
cld
adc
mov
jecxz
nop
fcmovu
out
out
ret
int3
rcl
into
in
jmp
jmp
icebp
cli
std
hlt
out
ret
or
xchg
mov
mov
in
ret
fcmove
repz
ds
fstp
xlat
into
sarl
loopne
addb
fsub
rclb
out
in
jmp
loopne
loop
addb
sti
loopne
std
fsubrp
in
mov
xlat
call
cmp
fxch
in
cli
cli
cli
sarb
mov
mov
leave
int
int3
out
out
call
sar
ffree
addl
leave
into
lret
vpsrld
shl
inc
aaa
rol
std
ret
fcmovne
lea
sub
in
fucomp
aaa
shr
aas
ror
in
aas
out
repz
add
lret
ljmp
cmp
cmp
fdivrs
std
aas
cmc
addb
fdivr
fisttpll
jmp
iret
xor
out
not
int3
shl
aad
aaa
loopne
in
fsubr
mov
and
out
ret
repnz
clc
cmp
not
call
idiv
rol
loop
cmc
rolb
int3
fisttpl
ret
out
into
fdiv
aad
shl
cmp
std
rcl
shl
sti
in
out
repz
repnz
in
fldt
cmp
std
aad
clc
fdiv
cmp
mov
sti
mov
rorl
fucomip
fadd
test
aad
out
shl
repnz
shl
aad
imul
idiv
fcomp
leave
xchg
rorb
loop
imul
fdivp
lock
loopne
aas
ror
aam
test
mov
fst
loop
stc
fdivs
mov
repz
fst
cmp
xchg
ds
loope
test
jmp
int
icebp
aad
icebp
hlt
icebp
int
iret
inc
fistpll
cmc
std
aad
fcmovnb
cli
lret
jmp
fsubr
xor
stc
leave
cld
aaa
aas
fidivrs
cli
sti
stc
cli
jmp
std
imul
lret
lret
jecxz
out
shrl
xor
cmp
std
fsubrp
cli
jecxz
ljmp
mov
iret
std
jmp
rol
leave
xor
into
shr
cld
ljmp
out
aas
cld
orl
xchg
sarl
xor
loop
cmc
out
cmp
out
aad
fadds
fisttpll
or
mov
fnstcw
jmp
mov
cmp
cmp
cmp
xchg
mov
mov
in
into
xor
into
jmp
in
in
out
aam
fdivrl
clc
shl
lock
stc
cld
dec
out
adc
out
xlat
xor
rcl
fcomi
aad
fadds
mov
mov
fldl
in
in
int
in
enter
aaa
rcl
ds
in
xchg
cmc
xor
ror
aad
or
repnz
cli
jecxz
out
in
loope
icebp
icebp
shl
xchg
xchg
sub
ljmp
xor
cmp
jmp
jmp
int3
mov
in
enter
int3
hlt
f2xm1
cmc
aaa
lock
repz
xchg
jmp
call
loopne
cld
sub
clc
cmp
xor
int3
xor
aam
aam
clc
cmp
filds
shl
test
call
test
inc
add
cmp
add
test
add
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
imul
mov
pop
add
int
aaa
call
cmp
aas
sarl
cmc
rcl
call
cli
out
in
loopne
in
call
xor
sar
clc
test
xchg
jecxz
repnz
enter
rolb
in
shl
cmp
aad
aaa
jmp
xor
aad
cld
fcmovnu
movl
in
enter
in
call
stc
cmp
sbb
shl
in
mov
iret
fmul
shr
xor
call
xor
fdivrs
div
neg
rcl
ljmp
xchg
xor
into
jecxz
stc
std
cmp
cli
jmp
xlat
and
lret
and
jmp
call
cmp
cld
div
leave
fmulp
out
cmp
fisttpl
addb
mov
int3
stc
aad
ss
cmp
std
adc
cld
fisttps
test
decb
fst
call
cld
cmp
out
loop
aad
xlat
fpatan
sub
loop
out
in
adcl
clc
out
cmp
repnz
std
idivb
loope
jecxz
call
shl
ljmp
stc
lock
fdivr
lock
cld
and
test
mov
rcl
cmc
xlat
cmp
shr
fdiv
jmp
loop
fcmovb
div
ret
std
loop
cli
int
jmp
rcl
fcmove
out
ljmp
aam
repnz
call
shr
std
loopne
icebp
cmc
shl
in
in
out
fcmovbe
jmp
fidivrl
cmp
std
int
loope
icebp
repz
in
shl
cs
cmc
leave
aaa
bnd
iret
loope
cmp
fmul
out
fsub
int
sti
in
jmp
rcl
lret
repz
ror
in
fcmovnu
cli
loope
stc
test
in
addb
aad
call
rcl
ret
stc
adc
leave
jecxz
test
or
xchg
call
out
lds
in
aad
ds
out
leave
fucomip
lret
fsubp
fdiv
mov
decb
stc
jecxz
repz
jmp
cmp
clc
aas
mov
mul
ret
fcomp
lea
hlt
int
fcom
leave
fdivrl
sbb
faddl
jmp
xabort
in
roll
shrl
sar
cmp
in
test
fucom
in
testl
repz
xor
cmc
xor
repz
call
int
loope
cmc
vmaskmovdqu
test
fdecstp
in
ljmp
fisttps
leave
aad
lret
cmp
icebp
shl
sti
cmc
jecxz
orb
icebp
out
icebp
shr
cmc
int
iret
rcr
cli
call
test
out
fsubr
int
test
out
addl
xlat
into
in
xor
cmp
ds
test
roll
mov
cmp
xor
fmul
cmc
xor
rcr
cld
cmp
sarb
ret
inc
mov
mov
leave
xchg
mov
sub
divl
xor
xlat
xor
jmp
in
loop
loope
ret
int
loop
addl
sti
int
addl
shl
jmp
lret
mov
mov
in
out
int3
fsubr
cmp
out
lret
cld
std
test
call
test
repz
cli
cmp
aas
lret
in
xchg
sub
leave
test
in
enter
repnz
fdivs
faddp
cld
aam
mov
in
in
lea
std
int3
enter
xlat
aad
test
icebp
fdivr
adc
cmc
cmp
fldl
out
jecxz
fnstsw
lret
into
call
int
shl
jecxz
loope
cmp
out
lret
call
out
loopne
xor
xor
enter
in
test
loope
fcmovnu
test
mov
filds
leave
xor
cmp
aaa
ljmp
neg
sti
xlat
cld
xlat
fndisi(8087
in
in
int3
jmp
sarl
aaa
cmc
ret
std
out
shlb
std
out
xrelease
fdiv
cli
sti
repnz
mov
nop
out
int3
sub
stc
ljmp
div
rol
cmp
mov
leave
mov
sbb
in
iret
repnz
idiv
ror
rcr
cmp
sub
aad
cmc
mov
mov
int
iret
cs
lret
ljmp
stc
out
test
leave
jecxz
loopne
test
call
cmp
jmp
aad
fstl
sub
dec
jl
jle
pop
add
sub
rcl
cmp
fnstenv
xlat
cmp
cmp
test
cmc
mov
mov
in
leave
in
loope
xor
cs
adc
aad
div
cmp
fxch
enter
mov
in
xor
div
int
int3
stc
not
repnz
ret
faddp
call
out
incl
xlat
lock
repnz
cld
repz
out
test
cli
sbb
into
fimull
jmp
iret
das
idiv
fcmovbe
aas
cmp
fiaddl
aam
in
in
fcmovnu
nop
mov
int
lret
ss
sar
sarl
flds
sbb
ljmp
std
test
rcr
in
hlt
cli
xor
lret
cmp
in
jmp
out
jecxz
nop
sar
subb
aad
cmc
out
xchg
sbb
testb
xchg
loop
jecxz
in
fmulp
xor
cmp
leave
into
out
neg
into
repnz
mov
ds
fmul
int
ljmp
sti
jmp
lret
not
faddl
cli
shr
cmp
mov
in
fsubp
shl
jecxz
cmp
int
hlt
into
dec
icebp
xor
shr
ret
in
mov
enter
into
xor
ss
out
aam
fndisi(8087
test
fildl
in
mov
xor
out
jmp
stc
int
lret
sar
jecxz
sti
loopne
hlt
fldl
repz
xor
ror
cmp
enter
hlt
aas
cld
div
fcomp
aad
or
shr
ljmp
shl
out
cmp
lret
cmp
sti
in
shl
rolb
out
lea
loop
rcl
jmp
in
out
aam
ffree
lock
ret
call
loope
fldcw
call
ss
cmp
cmp
std
aam
jmp
fucomp
out
int
sbb
ljmp
cmp
lock
cli
test
icebp
xlat
testb
out
cld
loope
cmc
repnz
ror
ror
xor
out
and
in
fdivrp
cmp
int3
jmp
fstl
shr
cs
shr
fdivrs
cmp
cli
xlat
push
cmpl
jmp
jecxz
loop
rcl
into
ret
lret
call
clc
repnz
in
rcr
stc
les
out
mov
xchg
xor
xor
int
cmp
rcl
adc
xchg
test
cmp
xchg
loop
ljmp
sti
aam
out
loopne
fprem1
repz
ffree
div
push
jmp
loopne
xor
jecxz
sub
repz
lock
fadds
imul
lret
testb
add
loop
jecxz
std
bnd
aas
aas
loope
aas
fsubr
loopne
fisttpll
mov
rcl
idiv
ret
ret
jecxz
incb
mov
test
call
sub
in
shr
aam
fmul
enter
rcl
push
rol
cmp
xchg
adcb
xor
xor
in
cmp
fsubr
stc
xlat
int3
aam
hlt
cmp
repnz
jmp
and
aaa
shr
cmp
lock
cmp
jecxz
ds
testb
loopne
test
ljmp
xbegin
cmc
roll
shr
mov
in
pop
lret
out
cld
mov
repz
out
int3
call
out
jecxz
fyl2xp1
in
sti
clc
aam
faddl
int3
xor
rol
cli
call
out
aaa
testl
fdivr
cmp
xchg
leave
ss
out
out
aas
cmp
int3
sbb
fcom
vpsadbw
aad
fiaddl
aad
jmp
shr
in
out
leave
std
rcl
and
jecxz
out
jecxz
sbb
loop
lret
xchg
out
div
idiv
rcl
icebp
cmp
icebp
fdivrl
stc
and
aas
rol
sub
rcll
xor
cli
ss
int
rol
loop
icebp
repz
mov
call
enter
imul
lret
enter
in
in
ss
cld
in
cmpl
neg
ffree
in
lret
movb
xor
enter
int
fcomi
addb
aam
repnz
out
stc
mov
sbb
hlt
mul
sti
in
in
cmp
cmp
add
enter
in
fsub
in
out
rolb
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
pop
out
ds
xchg
jle
pop
add
ljmp
cmp
enter
std
rcr
xlat
aad
rcr
in
stc
les
in
int3
repnz
hlt
iret
test
xlat
repnz
cli
cmp
sub
sti
mov
xchg
call
out
rcr
jecxz
sarl
shr
in
lret
addl
xchg
sti
out
out
std
xchg
aad
shll
repnz
out
out
in
fistpll
ret
out
ds
in
out
test
sub
int
fmul
lret
into
iret
repnz
aas
cld
hlt
loopne
jmp
fimull
lret
in
mov
out
icebp
lock
int3
repnz
mov
add
stc
jmp
fucom
mov
int
out
ret
in
aam
cmp
ds
cmp
loopne
jmp
ds
lret
lea
shlb
enter
mul
cld
idivb
aas
rol
lock
fsubr
sti
sbb
in
lds
rcl
imul
cmp
enter
rol
stc
sti
test
repnz
jmp
iret
out
ret
shl
cli
stc
int
aad
repnz
sar
icebp
sti
not
sar
lds
lret
mov
hlt
in
ret
into
xor
jmp
mul
fst
xchg
loopne
stc
stc
or
mov
call
out
cmp
aad
out
hlt
cmp
xchg
xor
in
iret
iret
in
into
bnd
div
flds
cmp
out
faddl
repnz
jmp
cmp
out
repnz
ljmp
cli
in
xchg
repnz
ret
out
icebp
cli
fmul
push
shlb
stc
loopne
rcl
hlt
mov
mov
into
in
repz
ss
test
jmp
cmp
std
xor
mov
clc
in
cli
icebp
cli
shl
int3
icebp
shl
rcr
out
aam
call
repz
sar
fcmovb
out
out
or
cld
out
fucom
push
in
ss
lret
enter
clc
cld
lret
test
hlt
vpavgb
lret
in
xchg
call
shl
jmp
aam
testl
in
xor
cmpb
enter
cli
shr
loope
loope
icebp
fcmovb
fdiv
decb
icebp
adcb
fidivl
into
std
aad
shl
lock
loop
cmp
xchg
cmp
int3
incb
hlt
shll
imul
not
ljmp
fidivrl
xchg
sbb
stc
loopne
cli
fisttpll
loop
clc
divb
repnz
not
fprem
ret
test
shl
ljmp
fsubr
in
out
shr
fsub
aaa
enter
cmp
sbb
xchg
xchg
out
mov
rcr
out
out
lret
xor
idivb
cmp
loope
std
fadd
stc
rolb
into
lock
fisttpl
lock
out
cmp
aam
out
std
cmp
fsubp
loope
aas
sti
ret
testl
shrl
xor
ret
cld
xlat
cmp
cld
neg
ret
rorb
ljmp
repnz
ss
xor
fdivr
leave
ds
fmul
into
jecxz
out
xchg
in
std
into
sub
in
xor
in
cmp
sar
cmp
cmp
cmp
in
cli
ficoms
icebp
xor
jmp
out
cmp
xor
repnz
leave
sar
sti
testb
call
cmp
aas
ljmp
test
fcmovu
in
xlat
loopne
incl
repnz
xor
stc
aam
jmp
rcl
aas
clc
ret
repnz
test
lret
xchg
xchg
in
repnz
clc
fcmovnbe
fildl
fadd
les
std
jecxz
jmp
cmc
shl
aaa
in
hlt
fisubrl
fst
cld
fadds
flds
mov
test
jmp
cmc
into
iret
into
aas
sub
xlat
out
repnz
imul
testb
div
lret
fdivr
shl
xor
cmc
fdiv
ffree
xchg
out
hlt
aad
lret
in
call
in
jmp
iret
cmp
jmp
int
repz
addb
jecxz
decl
cld
shl
loop
shr
in
in
cld
leave
aad
lret
aas
aaa
repnz
fsubr
mov
into
fdecstp
ljmp
cmc
sbb
aam
sar
ds
fdivrp
xchg
les
xchg
fs
add
fs
add
rol
add
inc
jl
add
cli
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
add
jl
add
fdivr
test
sarl
in
enter
lret
cmc
enter
div
ret
sar
cmp
xchg
fldl2e
inc
out
out
loop
hlt
ror
in
hlt
cmc
cmp
icebp
ds
in
jecxz
and
clc
test
incb
into
in
xor
lock
sar
loope
ret
aam
fldl
sub
xor
lret
lret
cmp
clc
cmp
xlat
rolb
loope
fmuls
filds
jmp
fdivr
fptan
jecxz
fldl
rol
call
std
mov
lret
xor
lret
ljmp
cmp
cmpb
jecxz
fsincos
cmp
cmc
roll
div
shll
fdivp
clc
cmp
loop
lock
std
loop
mov
test
nop
hlt
loopne
shr
jmp
call
loope
fcomp
out
fnstsw
out
mov
ds
and
aam
ljmp
clc
fchs
test
in
call
mov
xchg
icebp
leave
lret
sar
loop
lret
aad
hlt
cmc
faddl
adc
fdivrp
xchg
xorl
ret
xor
in
xlat
fcmovnu
aas
leave
loope
faddl
out
loop
xchg
in
loop
repz
ss
in
aad
fidivrs
cmp
cmc
int
clc
imul
test
fdivrp
bnd
ror
fxch
leave
xlat
cmp
fmulp
stc
not
idivb
rcl
les
and
in
hlt
int3
cs
hlt
hlt
shl
cmp
repnz
stc
ds
jecxz
fprem1
call
mov
fcmovu
hlt
shll
leave
in
aad
enter
fcomip
out
shl
cmc
sarl
mov
imul
mov
loop
lea
idiv
ss
in
ss
icebp
out
imul
fdivrp
imul
or
lret
in
loopne
enter
sar
out
jecxz
iret
fistpll
or
fcomp
std
lret
mov
addb
xor
div
fstp
ss
stc
push
hlt
xchg
movb
xchg
mov
out
loope
aad
in
xlat
cmp
cli
fnsave
ret
cmp
addb
fstp
fsubp
cmc
shl
loop
imul
lret
iret
cmp
jecxz
int
fcmovne
xchg
leave
cli
ffree
lea
lea
shrb
fnstenv
ss
rol
dec
fnstcw
xlat
mov
mov
lock
fnstsw
fmul
ljmp
xlat
faddl
lea
lret
rcl
cmp
leave
cmp
cmpb
in
loop
aad
out
iret
in
mov
loopne
into
xor
imul
std
ljmp
fsubp
clc
call
loopne
cld
mov
ljmp
cmp
cmc
imul
repz
or
test
decl
in
shll
ds
repz
sbb
loop
std
xchg
repz
loop
shrl
cmp
cmp
fdivs
stc
cmp
lret
loop
fnstcw
leave
sub
ffree
lea
ret
sub
out
fcom
cmp
jmp
out
out
ljmp
leave
mov
call
push
cmp
hlt
out
rcr
aad
std
out
les
into
lret
loope
test
cld
cmp
cmp
clc
cmp
aam
cld
loope
cli
orl
int
cmp
cli
cmp
ds
xchg
fldz
out
or
in
xor
fnsave
fmul
icebp
hlt
lret
cld
hlt
out
jecxz
sar
out
fildl
nop
iret
loope
rol
aad
cmp
into
repz
xor
shl
clc
fcmovb
mov
out
repz
in
das
fmulp
test
repnz
ds
loope
cld
std
clc
test
movl
int
vpavgw
fxch
icebp
cmp
cmp
or
fdiv
out
jecxz
iret
loopne
out
rclb
sti
aad
hlt
ljmp
iret
sar
lock
incl
bnd
into
aaa
in
xor
fucomp
int3
test
xlat
out
test
jmp
test
xor
cmp
stc
sti
xlat
aas
neg
shl
cld
out
jmp
fsubr
loopne
enter
out
xor
out
cmp
iret
fucomip
adc
cmc
leave
mov
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
xchg
xchg
mov
jl
xlat
fdivr
loop
int
xchg
lock
int3
shrb
fidivs
fyl2xp1
jmp
repnz
std
loopne
fucom
fadds
mov
lret
das
neg
in
in
repz
rcr
aad
jecxz
incl
test
mov
fnsetpm(287
fnsave
shr
jmp
cmc
iret
sar
clc
loope
ds
fcmove
test
xchg
jecxz
in
xor
in
jmp
sarl
in
cmc
leave
test
mov
in
roll
aam
shr
iret
cmp
int
sti
loop
test
shl
idiv
in
jecxz
leave
out
mov
out
in
xor
out
call
fcmovnu
idiv
clc
mov
std
in
in
decl
mov
fcmovb
ror
xor
sbb
flds
fucomip
cld
or
sub
xchg
and
jecxz
call
fidivrs
clc
rcl
out
fdiv
cmc
call
in
out
lret
das
call
sar
call
ds
cmc
jmp
mov
out
lret
out
fimuls
aaa
aam
shr
sarl
fldlg2
sar
lret
cmc
in
in
orb
call
enter
cli
xor
cmp
iret
xor
loope
aad
out
xchg
test
ds
xor
xor
fdivrl
rcl
sar
lock
in
fiaddl
loope
aas
loope
lock
aam
ljmp
icebp
ljmp
mov
rorl
xor
cmp
cmc
aas
add
loopne
fisttpll
sub
repnz
mov
lret
ljmp
cld
fld
aad
fdivrp
clc
sub
ljmp
out
icebp
cs
aam
cmp
rolb
testb
in
shl
in
rcl
clc
div
aaa
fsincos
fcomp
incb
aam
leave
loop
cli
and
iret
fld
test
rcr
ljmp
test
std
clc
ljmp
repz
out
in
jmp
cmp
fnstsw
ds
in
jmp
incb
in
in
enter
repnz
aad
in
xlat
ret
shl
add
rcr
ljmp
lret
div
xlat
lds
cmp
sti
fxch
jmp
mov
divl
iret
lret
cmp
aas
adc
clc
test
xchg
jmp
out
in
leave
faddp
in
cmc
ffreep
stc
in
fcomi
idivb
shl
in
jmp
inc
fadds
mov
xor
sti
aad
aas
cmp
cmc
icebp
std
shl
xlat
fcomip
cmpb
cld
lret
fucomip
test
test
out
jecxz
fstpt
out
cmc
int
ljmp
icebp
ret
mov
int
or
mov
fptan
aam
xlat
aaa
cmp
icebp
cmp
cmp
aam
cld
aas
fldl
in
sbb
into
sub
out
rcl
leave
std
call
adc
cld
leave
sti
leave
iret
xchg
icebp
idivl
call
lock
aam
sbb
clc
stc
fucomp
mov
lret
aaa
cmp
jmp
int
sti
out
int3
cld
fadd
add
jmp
xchg
repz
aaa
int
xor
ljmp
idivb
aam
fucomp
hlt
jecxz
lret
sti
rcr
repnz
xor
sti
xor
clc
hlt
lret
in
cmp
cmp
incl
call
xchg
jmp
xor
xor
cli
cld
xor
repz
imul
xlat
out
fcomp
int
fucomp
ret
xlat
cmp
neg
call
ljmp
call
sti
stc
lea
out
ret
clc
sti
cld
fnstenv
aam
clc
fdiv
les
in
neg
fsubr
test
xor
fdivrs
idiv
rcl
repnz
out
repnz
out
stc
shl
xchg
leave
out
repz
stc
sti
fcmovu
fcmovnu
cmp
cmp
std
rol
call
incl
jecxz
div
stc
lret
in
sar
aad
faddp
out
fimull
shl
lret
ret
icebp
out
lret
fidivrl
int3
neg
std
in
in
cmp
rcr
jecxz
call
enter
call
xor
iret
fmul
cld
jmp
cmc
hlt
ret
shrb
adc
mov
jmp
leave
aam
rcl
aam
insb
bound
movsb
jle
pop
add
test
addl
and
jmp
iret
jmp
lock
fcmovnb
repnz
xchg
cmpl
xchg
incb
xor
int
stc
into
lret
out
call
out
loopne
fcmovnbe
test
and
fmul
call
lret
sti
rcl
into
cmp
aam
xlat
rcl
addl
stc
jmp
in
loope
rcl
ret
fcomp
xlat
aaa
std
cmp
test
lock
and
sti
into
shl
ds
in
cmp
sti
sarl
cmc
loopne
ror
fcomi
loop
jecxz
and
test
in
shl
cmp
fnstenv
call
in
iret
cmc
icebp
idiv
roll
imul
xchg
xchg
fcmovbe
shl
leave
in
iret
out
iret
int3
out
loopne
cmc
sar
lock
loope
orb
int3
jmp
into
iret
fildl
std
aam
out
clc
mov
lea
aaa
enter
ror
icebp
cmp
out
fcmovnbe
in
test
sar
xchg
xchg
lock
in
rcl
leave
clc
jmp
hlt
fcmovbe
cmc
push
xor
jecxz
ljmp
jecxz
lret
fcomi
loopne
ret
aad
call
orb
hlt
ds
out
aam
cmp
int3
stc
testb
out
mov
icebp
lock
xchg
lock
imul
xor
lret
stc
sar
int3
fsubr
cmp
mov
clc
in
add
leave
call
xor
cmp
fcmovu
fdiv
out
ret
mov
std
clc
out
in
xchg
mov
out
shl
fcmovu
ss
cld
rcr
fadd
cmp
mov
int3
lock
xor
stc
fstp
ss
call
out
out
addl
test
ljmp
cmp
jmp
icebp
cli
mov
enter
shr
sub
rcl
in
in
xlat
int3
jmp
iret
idivb
cld
aas
std
cmc
mov
call
mov
out
loop
xor
fsubr
jmp
cmp
addb
addl
fimuls
int3
xor
aaa
hlt
sti
fcmovne
in
in
jmp
fmulp
int
xchg
shr
icebp
mov
int
sub
cmc
fsubr
iret
loop
into
add
stc
std
fadds
std
in
lock
enter
ss
xor
ss
and
ret
repz
fdivr
test
fmul
out
xlat
jmp
int3
call
repnz
addb
loopne
fsub
leave
jmp
shr
shl
out
hlt
xlat
lock
sbb
out
fadd
fadd
cmp
fdivrp
xchg
call
ljmp
in
jmp
jmp
fcmovu
cld
rcl
leave
aam
orb
loopne
rcl
ljmp
enter
sbb
loop
mul
out
cmp
ror
hlt
in
divl
fldz
rol
shl
fxch
mov
loopne
int3
xchg
ror
cmc
sti
in
in
ds
test
sarl
call
shr
sbb
lock
aad
rcr
cld
aas
and
cmp
orl
mov
out
xchg
out
xlat
out
repnz
call
loop
in
clc
faddl
in
loope
repnz
shl
imul
aaa
into
icebp
aas
in
fsub
fidivrs
cmc
fdivrp
fcomp
iret
mov
out
addb
in
les
lret
in
out
cmp
cld
test
clc
std
aas
mov
sub
cli
adc
in
call
in
out
ss
in
shl
clc
test
mov
xchg
test
aaa
jecxz
sti
shrb
aam
cmp
sar
cmp
xchg
dec
call
push
sub
shr
fdivr
call
cmpl
ret
ds
test
nop
iret
in
ret
aam
repz
clc
out
cmp
stc
in
loopne
inc
xchg
in
lret
repnz
xor
lret
call
out
fadds
lret
decb
fst
xor
cli
xor
leave
loope
fsub
addb
neg
mov
mov
jmp
in
lret
aam
sti
in
shl
sti
repz
movl
jmp
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
aam
add
decl
in
in
jmp
icebp
rcr
xor
fucomip
iret
sar
cld
hlt
test
loope
cld
addb
filds
shl
lret
rcl
sti
sbb
test
fsubrp
mov
mov
shr
in
cld
rcl
call
fnsave
lret
into
aas
shl
xlat
jmp
flds
std
nop
std
not
into
ljmp
int
int3
out
fdivrs
ror
xchg
cmpl
int3
icebp
xchg
icebp
call
stc
xor
into
rcl
lock
loop
repz
shl
stc
in
int
xchg
cs
cmp
cld
aad
ds
out
aam
inc
loopne
add
and
out
int3
into
loopne
icebp
das
xor
sti
out
aam
fcom
iret
xlat
rol
int3
shl
add
and
lock
int3
aam
in
iret
repnz
xor
int3
ljmp
fadd
xchg
aad
mov
decl
in
enter
sti
sti
xor
xlat
iret
std
cmc
aas
stc
ffreep
out
loope
clc
lret
test
loopne
in
aaa
loop
cmp
shl
cs
cmp
fmul
aad
ds
and
mov
int3
out
call
iret
xor
test
cmc
repnz
stc
aas
into
jecxz
cmp
fucom
xor
lock
in
das
test
in
ror
stc
loope
std
int3
aad
rcl
stc
clc
fcompp
cli
movl
xor
cmc
fadd
into
cmp
out
aad
cmp
xor
incl
fisttps
fstp
hlt
not
xor
call
addl
xchg
call
mov
fcomip
ret
lock
out
out
lock
out
lock
call
out
xchg
xchg
shl
ret
fldz
fdivrs
into
cmp
sti
test
xchg
testb
icebp
loope
out
cli
lret
add
das
xor
aaa
jmp
flds
and
xlat
cli
jecxz
int3
mov
jmp
jmp
ret
aaa
in
not
aam
jecxz
rol
mov
repnz
mul
mov
xchg
in
jecxz
lock
cmc
aam
cmp
call
aas
hlt
rol
mul
test
fmulp
lret
into
xchg
lret
rcl
xor
aaa
lock
fcomp
std
lock
loopne
faddp
fmull
orb
fxch
cmp
lret
lock
out
test
loopne,pt
les
mov
ljmp
aad
cli
icebp
leave
fnstcw
fdivrl
test
sti
out
xchg
ljmp
mov
call
cmp
mul
repnz
out
xlat
loope
test
rorb
pop
into
cli
popl
fnclex
lock
icebp
into
bnd
aas
iret
aas
cmp
sti
aad
xchg
mov
leave
in
in
ret
xor
jecxz
lret
loope
cmc
idiv
cli
fdivr
fdivr
lds
movb
loopne
jmp
cmp
out
lock
stc
idiv
fsubr
sar
lret
loopne
xchg
loope
shl
xlat
stc
ss
faddl
rcr
jmp
fmulp
fstp
addb
aam
in
cmp
sar
clc
faddl
shr
repnz
into
xor
shl
cld
aas
fcmovnu
ret
repz
cmc
xlat
fcoml
in
lret
leave
cmp
aad
fadds
shl
lret
test
out
in
mov
ror
loop
repz
xor
lock
xor
popl
out
ljmp
lret
fcmove
or
repnz
cld
call
jmp
or
iret
cmc
into
jmp
cli
hlt
incl
hlt
leave
clc
out
in
fistl
faddp
cs
jmp
int3
hlt
ret
std
jmp
ljmp
in
in
xor
rcl
xlat
in
call
ss
std
out
jmp
int3
jmp
int
mov
out
not
into
cld
int3
jmp
faddl
loope
cli
neg
lret
loop
fucomip
in
divl
out
cmp
call
iret
incl
ret
std
loopne
loope
fdivrp
fsubp
lock
clc
leave
repnz
hlt
cld
out
stc
cmp
cli
cmp
fdivrl
xchg
rcl
loop
iret
cld
shl
sub
xor
xor
enter
cmp
int
sti
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
aad
sub
jl
shl
loopne
call
mov
out
sub
int
in
cli
out
cmp
repz
loopne
loopne
test
rcl
xchg
mov
repnz
out
iret
loope
cli
in
testl
std
ror
xchg
aam
sub
rol
fnsave
std
fmul
rcl
testb
ret
idiv
xchg
std
cld
mov
jecxz
shr
lock
fst
addl
leave
mov
int3
ftst
jmp
jmp
shlb
in
adc
ret
ret
test
add
repz
loop
mov
or
repnz
lock
divl
lret
shl
fmul
sbb
fsub
inc
fsub
aam
addl
icebp
xlat
ret
in
lock
aad
loope
aad
adc
shl
cmp
in
ljmp
aad
int3
in
repnz
xor
test
incb
cmpb
std
stc
loope
nop
int3
sub
sti
lock
aaa
repz
lret
aad
xchg
stc
movb
ror
out
adc
into
mul
hlt
cmp
rcl
ds
shl
cld
push
test
loope
fmuls
icebp
out
lret
sti
icebp
sbb
into
rolb
jmp
out
rcr
lds
cmp
cmp
fcompp
loopne
sti
sti
repnz
fmul
filds
out
xlat
aad
lret
int
cmp
enter
shl
lock
cld
xchg
xchg
ror
into
xchg
shl
into
aad
clc
repnz
cmp
rcl
flds
loope
jmp
cld
mov
call
clc
leave
lret
enter
in
roll
in
fdivrp
xchg
aad
fld
out
aad
xor
cmp
hlt
cli
sti
fst
xor
sbb
jmp
out
sti
int
xchg
lret
test
icebp
rcr
addb
xlat
mov
fiaddl
mov
out
ljmp
repnz
xor
sar
iret
fadd
xchg
test
mov
icebp
loopne
rol
shr
cmp
fcomip
sbb
std
aam
loopne
test
clc
clc
mov
sar
icebp
cmc
call
aad
std
cs
in
shr
clc
aam
filds
cmp
in
call
orb
cmp
aad
aas
out
lock
xlat
int
sti
std
mul
cmp
mov
in
repnz
sub
in
xlat
shl
stc
aas
cmp
sar
fadd
cli
xlat
mov
test
int3
or
adcl
int3
jmp
stc
cmp
ds
div
out
flds
in
jmp
leave
repz
iret
into
leave
cmp
cmp
cli
lret
cmp
iret
shl
fadd
in
loope
mov
int3
xchg
xchg
mov
faddp
clc
out
cmp
into
ss
fadds
aad
fsubp
fmul
jecxz
xchg
loopne
rol
lret
in
lret
cmp
shl
ds
out
aad
jmp
int
int
in
sar
xor
jge
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
