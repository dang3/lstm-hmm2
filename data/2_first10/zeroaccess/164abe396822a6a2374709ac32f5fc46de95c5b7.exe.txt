push
mov
sub
mov
mov
sub
xor
movl
not
jmp
cltd
data16
push
push
jge
jge
ljmp
mov
jl
jl
jl
xor
xor
ja
or
cwtl
or
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
adc
cmpsb
pop
jg
scas
movl
mov
add
jmp
leave
mov
pop
mov
les
mov
adc
lods
jl
jl
dec
stos
pop
mov
outsb
or
mov
orl
ds
mov
mov
mov
int
dec
cmp
aad
pop
add
lea
jle
add
xor
inc
mov
push
and
out
test
add
in
inc
dec
push
pusha
push
out
cld
repz
loop
clc
fldt
sti
xor
jne
sti
pushf
mov
xchg
dec
jno
cmp
push
pushf
or
mov
add
ljmp
aaa
movsb
push
psubsw
bound
dec
into
push
or
divl
aad
mov
fildll
cld
lea
xorl
mov
notl
mov
movzbl
adc
mov
mov
xorl
push
sub
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movzwl
and
mov
movl
push
push
or
mov
add
mov
sub
mov
addl
mov
mov
sbb
xor
mov
subl
xor
xor
add
adcl
jmp
rorb
std
std
std
fsubrs
adc
fdivrl
jl
jl
jl
mov
lahf
test
je
lds
pop
and
out
lods
fsts
sub
jp
cmpsb
movsb
sarl
shrb
and
add
cltd
mov
lcall
data16
out
test
dec
addb
mov
out
popa
out
and
lret
roll
pop
in
jb
ror
rclb
arpl
daa
xor
shl
mov
jp
mulb
pop
jne
movsl
cli
add
sarl
inc
lret
adc
dec
cmp
xor
lods
and
sub
div
mov
mov
movl
jmp
mov
nop
jge
jns
imul
jl
lods
jl
jl
xor
stc
call
ror
mov
and
inc
stos
shrb
call
inc
cmp
les
sub
mov
ds
aaa
lods
out
and
in
xor
ds
add
xor
clc
dec
rcrb
and
mov
add
dec
iret
cmpsl
xor
scas
xor
sti
jp
bound
cmpsb
rclb
xchg
push
loop
or
sbb
sub
xchg
rorl
jbe
incl
xor
push
xchg
lea
icebp
das
repz
movl
je
movl
sub
lea
mov
sub
mov
not
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
jmp
cs
inc
add
sbb
mov
jl
jl
jl
xchg
sbb
dec
shll
inc
in
push
fadds
jg
mov
dec
push
ss
sbb
andb
loop
lret
inc
add
or
mov
or
dec
jle
lret
mov
inc
notb
jmp
loop
pusha
mov
in
in
gs
sub
inc
or
add
iret
or
sbb
xchg
insl
ja
cmc
dec
je
mov
aad
call
cs
fwait
inc
pop
das
sub
jmp
mov
dec
inc
jae
xchg
mov
push
mov
xlat
push
xchg
jae
add
push
and
dec
scas
stos
fcoms
or
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
sub
sub
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
jmp
pop
and
jge
pop
in
lcall
in
jno
jl
jl
jl
jno
xor
insb
jno
mov
dec
loopne
outsl
sub
push
or
test
xchg
xor
pop
lods
adc
jmp
in
xchg
xor
test
xchg
out
stos
shll
sbb
jl
push
addr16
sub
orb
cmp
mov
inc
paddusw
xchg
push
fdivrs
shlb
sbb
fs
jae
andl
add
cs
pushf
xchg
in
loop
adc
and
in
cmp
xchg
jecxz
cmpsl
pop
incl
testl
mov
aas
mov
movzwl
mov
jmp
repz
jecxz
push
scas
ror
inc
call
jl
jl
jl
sti
sub
pop
sbb
js
sahf
les
dec
sub
xchg
pop
sub
cmp
mov
std
outsb
add
push
test
sti
pop
jbe
mov
daa
jle
insb
out
shrl
pop
fadd
jno
add
js
in
pop
push
cmp
insl
pusha
mov
and
cwtl
fstpl
mov
loopne
jg,pt
es
push
mov
sbb
enter
inc
jmp
sbb
xchg
repnz
xorb
rcrb
jmp
mov
notl
lods
sub
aam
cld
in
xor
jbe
stc
lea
add
mov
mov
mov
xor
add
imul
sub
jmp
pop
jno
loope
jge
lods
xlat
mov
jns
adc
jl
jl
jl
shlb
ja
test
orl
jo
lret
fnstenv
hlt
test
mov
mov
push
popf
and
mov
rclb
add
lea
jne
jns
pop
xchg
insb
mov
or
inc
pop
orb
cli
rorb
or
negb
int3
and
lds
mov
repz
in
aas
adc
lcall
aad
cld
xor
int
inc
in
dec
ficompl
repz
arpl
mov
gs
das
mov
pop
loopne
dec
aas
enter
xor
inc
out
mov
enter
add
rcrl
loop
inc
je
mov
dec
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
sbb
fcmovu
std
sarl
fstpl
orb
cld
jae
jl
jg
jl
sub
jb
pop
push
addr16
push
imul
or
loope
imul
ds
stc
push
roll
das
mov
adc
popf
loope
pop
mov
out
adc
cmp
fdivrs
rcll
jp
or
xchg
jbe
jne
inc
lods
inc
into
xor
push
sbb
sbb
fwait
shr
or
adc
mov
mov
mov
repnz
cld
test
mov
cli
lret
test
repnz
sbb
fmull
cwtl
jbe
jp
cmp
dec
mov
adc
shrl
jle
lods
pop
mov
mov
cmp
subl
mov
cmpb
pop
cmp
sbb
cli
lcall
lret
lret
in
js
push
test
adc
xchg
inc
std
xchg
sub
mov
loop
and
inc
pop
jne
loop
cmpsb
ds
dec
mov
stc
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
movl
movl
mov
xor
mov
sbbl
mov
mov
adc
jmp
adc
push
pop
aaa
movsb
popa
lods
inc
jg
icebp
jb
jl
jg
jl
dec
or
frstor
mov
mov
repz
or
cmp
push
ja
dec
out
daa
fisttpll
mov
ret
xchg
push
sbb
add
mov
xchg
add
call
xor
sahf
dec
cltd
inc
stc
mov
mov
mov
cmpsb
aas
pop
mov
call
in
add
adc
ja
leave
aaa
insb
cli
jbe
arpl
cmp
xchg
int3
mov
push
cmp
rorl
data16
adc
je
rcl
jp
add
add
jmp
push
scas
ds
sahf
arpl
out
aad
xchg
cmc
sbb
mov
or
jbe
push
add
bswap
inc
pusha
push
enter
pop
pop
mov
mov
out
pushf
pusha
movsl
pop
enter
sub
dec
popf
add
stos
xchg
jno
xchg
push
xchg
rolb
add
sbb
add
mov
cltd
mov
add
jl
jno
jl
adc
mov
lret
hlt
ljmp
push
xor
mov
jne
shrl
rcrl
daa
pusha
and
push
dec
test
sub
je
jno
pop
adc
xor
divb
pop
dec
cmp
fsubl
inc
fwait
test
lret
lock
jb
jbe
xchg
jns
and
push
pushf
out
lods
mov
pop
dec
xorl
adcl
pop
mov
cmp
out
shl
neg
push
cli
daa
xchg
sahf
mov
xlat
out
mov
faddl
fisttpll
outsb
or
push
xor
sub
out
cmovae
dec
adc
lret
les
insb
xlat
insb
cwtl
pop
xchg
loop
xchg
xorb
push
shr
out
push
dec
add
add
xchg
mov
dec
pushl
and
test
lret
aam
push
les
iret
fwait
jecxz
sub
pop
inc
push
and
inc
xchg
jbe
mov
mov
adc
add
and
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
adc
movl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
jmp
loopne
sbb
mov
xchg
inc
pop
push
jbe
lret
divl
jno
jl
cmp
dec
pop
aaa
jno
mov
and
ss
cmp
test
inc
test
push
and
sbb
adc
pop
repnz
pop
mov
lods
jl
mov
dec
fisubl
or
lea
cmpsb
rorl
sbb
pop
lcall
mov
les
pop
jp
lock
fnstenv
cmpl
add
xor
sub
dec
arpl
call
ss
inc
lods
adc
sti
pusha
cld
and
stos
xchg
pop
pop
push
nop
stos
cmp
scas
lret
sub
int
gs
xor
in
add
in
mov
lock
or
dec
call
outsb
not
cld
pop
out
or
pusha
ds
jmp
ficompl
xlat
fdivs
jnp
cmpb
fabs
dec
idivl
iret
arpl
lock
arpl
cmc
xor
lcall
xor
mov
aad
mov
cwtl
shlb
test
test
or
rorb
mov
inc
add
rol
add
xchg
add
cli
je
movl
push
jmp
mov
orl
mov
movl
sub
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
xorl
add
cmp
movl
jb
mov
jmp
fstps
xlat
jns
stc
popa
mov
and
test
jg
jl
imul
ret
cld
jg
mov
dec
in
mov
ja
bound
fidivrl
je
cmp
shll
scas
test
dec
mov
sbb
insl
pop
cmc
mov
xchg
or
pushf
in
pop
push
adc
ret
movsb
push
into
ror
lock
sbb
mov
push
xlat
jnp
scas
cmp
mov
pop
pop
push
in
sti
shlb
fwait
push
xchg
shrb
push
shrb
mov
ficomps
adc
loope
adc
lods
cmp
mov
aas
icebp
mov
sub
jo
dec
sub
or
je
pop
sub
and
pop
mov
xor
push
out
nop
inc
fidivrs
imul
pop
in
pop
movsb
test
adc
scas
test
add
not
xor
mov
add
mov
add
movzwl
or
mov
add
imul
mov
sbb
mov
mov
sbbl
sub
movl
cmp
movl
ja
movzwl
xor
mov
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
fwait
dec
int
fldl
out
loop
aad
and
jl
jg
jl
jo
data16
xor
dec
inc
lret
ja
cli
cltd
push
mov
mov
push
xchg
xchg
outsl
or
push
pop
pop
xchg
loopne
lahf
mov
pop
mov
cmpsb
xchg
movsb
aad
adc
push
jne
lcall
inc
movsl
cmp
pop
mov
rcl
fistpl
mov
loop
sub
repz
fistpll
jp
cmpsb
loope
pop
push
adc
sbb
aas
shll
push
pop
aas
adc
ret
mov
fisubl
xchg
out
jbe
push
loope
mov
sbb
clc
mov
adc
imul
add
mov
mov
xchg
push
xchg
out
dec
ret
add
mov
shr
sub
pop
jmp
sbb
sub
mov
pusha
jnp
insb
lock
xchg
xor
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
in
pop
std
stc
dec
mov
sti
loopne
cmp
jno
jl
xor
in
sarb
or
inc
aas
aas
lcall
clc
test
jno
xchg
mov
push
and
cmp
cmp
and
or
xlat
jno
push
or
inc
mov
vphaddwq
xchg
test
sbb
mov
popf
or
sub
cmp
clc
mov
cmp
and
adc
push
cmpl
ficompl
and
mov
pop
das
mov
pop
fstps
les
jnp
push
sbbb
shl
adc
rcrl
fbld
rep
hlt
xchg
out
jl
push
incl
fnstsw
mov
push
push
js
add
pop
imul
lods
adc
test
mov
into
xor
ljmp
nop
test
xchg
push
and
inc
mov
lds
inc
mov
push
mov
pop
sub
mov
jmp
test
sti
jge
testb
adc
orl
jl
jg
jl
cli
js
shrl
aad
mov
enter
and
inc
jecxz
orl
mov
cmp
aam
jne
test
cmp
inc
lods
and
andl
addl
xor
in
push
fadd
loopne
outsb
dec
mov
cltd
cmpsb
sbb
cs
mov
push
imul
fst
fdivp
out
call
dec
push
sub
and
std
pop
in
pop
inc
and
pop
adc
repnz
cltd
adc
sti
rolb
jmp
xchg
aaa
and
test
push
mov
jae
mov
inc
stc
cmpsl
dec
and
nop
jo
inc
sbb
push
add
out
or
notl
cmc
iret
imul
ds
ret
sbb
xchg
lahf
scas
push
nop
pop
enter
xor
push
xchg
and
je
repz
mov
std
out
imull
mov
pop
lock
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
jmp
push
in
dec
dec
pop
jge
in
std
ja
pop
push
cwtl
mov
or
jg
jl
push
ds
push
sbb
fcoml
fucomi
cmp
mov
movsl
repnz
or
pusha
lcall
addl
jmp
push
inc
inc
ret
leave
jmp
fcmovbe
leave
jb
cmp
addr16
cmp
jp
sbb
shrl
sahf
orb
and
pop
insb
ja
xor
and
dec
adcl
cli
pop
sbb
pushl
jb
loopne
mov
cmc
jnp
add
jmp
push
mov
mov
scas
imull
sub
push
cmp
add
push
rcll
xor
push
aam
aad
into
addl
sbb
mov
xor
lahf
in
mov
shll
imul
aad
leave
cli
add
addr16
test
inc
push
pop
outsl
inc
and
sub
out
cmp
jge
jo
cmp
push
pop
lret
adc
xlat
ljmp
cltd
add
xor
push
in
inc
hlt
xor
pushf
clc
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
inc
imul
jno
in
add
cltd
or
jg
jl
adc
aad
jae
adc
cmpsl
ss
rcrl
popa
cld
lret
stos
mov
add
push
push
hlt
xchg
or
pop
into
jl
push
sbb
sbb
sbb
sub
lods
fwait
dec
loope
and
jge
ljmp
cmp
jle
pop
bound
in
aaa
movsl
xchg
adc
sub
cmp
loop
int3
sar
cmp
dec
cmp
mov
mov
adc
in
pop
push
aam
fstp
bound
and
lcall
in
outsb
sti
sbb
loopne
pop
push
or
popa
xor
or
scas
andl
test
cld
cmp
les
sarb
jl
pop
jne
xchg
adc
shll
ss
sub
fiadds
cmp
addb
mov
repz
popf
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
jmp
mov
mov
mov
push
adc
xchg
pop
inc
lcall
jl
cwtl
pop
loop
insl
mov
loopne
call
and
jne
push
shrl
pop
adc
xor
adcl
adc
mov
daa
in
int
mov
pop
fadd
movsl
enter
ja
sbb
cmp
out
pop
dec
shll
sbb
cmc
hlt
and
inc
cmpsl
sbb
pop
or
or
inc
xchg
dec
dec
cmpsl
pop
dec
pop
xor
lods
xchg
lea
rcr
or
insl
fs
jle
mov
ds
pusha
in
out
xlat
add
pop
xor
loop
dec
or
push
mov
jmp
lods
dec
xchg
or
dec
pop
fcmovb
sarl
pop
jnp
cmp
mov
aad
dec
fs
outsl
pop
jp
mov
add
lods
jmp
int
mov
scas
pop
jmp
data16
test
out
les
out
xchg
mov
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
jmp
test
iret
clc
fnstsw
outsb
ret
popf
aam
out
jae
lahf
or
jl
jl
jl
and
pop
add
jl
xchg
cltd
addr16
xchg
jns
lcall
loopne
rolb
xlat
mov
inc
cwtl
cmpsl
jle
sahf
adc
mov
mov
push
loop
xchg
ss
cld
gs
mov
jb
jge
dec
and
mov
cld
ficoms
idivl
hlt
xchg
mov
pusha
mov
in
cli
outsb
addb
cmp
inc
xchg
fcomip
shlb
jle
nop
dec
xchg
in
out
fwait
mov
jmp
jno
or
mov
add
mov
nop
stc
push
std
les
dec
add
adc
xchg
int
aaa
push
jg
pop
rcpps
sbb
or
out
dec
in
mov
into
test
mov
fidivrl
mov
inc
push
and
push
and
mov
mov
mov
xor
mov
movl
jmp
aas
enter
jge
jge
int
jae
cmp
adc
jl
jl
jl
mov
out
sbb
inc
inc
nop
dec
jnp
sbb
fwait
das
idiv
mul
and
cmp
es
xchg
hlt
xor
add
mov
push
call
imul
movsb
push
mov
xchg
into
xchg
adc
xchg
inc
dec
jae
mov
push
test
faddl
jo
inc
lcall
or
mov
je
cmp
jae
or
outsb
inc
add
xchg
dec
xchg
ret
dec
fsubrs
sbb
fsts
jne
mov
pop
popf
adc
add
movsl
xchg
into
dec
xor
shl
mov
mov
and
jno
in
pusha
negb
xchg
jg
xor
pop
mov
add
add
and
sub
into
lret
into
adc
inc
clc
dec
mov
negl
push
jmp
xor
aaa
pop
pop
fimull
mov
push
jl
jl
jl
addr16
inc
adc
in
adc
jp
push
cmp
inc
iret
xchg
jae
xchg
jno
mov
ret
pop
stc
clc
sbb
fsubrl
mov
js
and
xor
bound
xchg
xor
inc
scas
out
ret
pop
pop
pop
loope
push
lds
xchg
mov
rcrl
and
xchg
xchg
test
xchg
inc
mov
jle
int3
fidivrs
cltd
and
scas
add
aad
mov
fstpl
or
clc
cwtl
das
cltd
mov
jns
imul
sbb
jp
mov
std
xor
add
or
and
pop
jp
jmp
ret
in
shl
cmp
jns
sub
and
cmp
pop
imull
jle
pop
push
xor
cmp
loopne
subb
adc
outsl
and
ljmp
jmp
xlat
push
imul
xor
xchg
push
scas
xchg
push
jl
jl
mov
lcall
or
outsl
xchg
int3
mov
mov
add
dec
push
add
adc
push
stc
inc
push
push
pop
jmp
out
sbb
jns
repnz
aam
enter
mov
push
ss
nop
jge
dec
aas
outsl
stos
in
push
call
ljmp
bound
mov
daa
lock
cli
jno
cs
lea
les
jle
inc
and
sub
rorl
jge
sub
flds
imul
inc
pusha
inc
add
mov
pop
dec
cli
cmc
out
mov
mov
mov
sub
dec
cld
lret
inc
testb
in
xchg
mov
test
dec
mov
les
and
xor
inc
lea
aad
inc
rclb
xlat
pop
insl
bound
mov
or
mov
push
mov
subl
add
cmp
jmp
in
ds
inc
jge
test
testb
ljmp
jl
jl
jl
hlt
daa
shll
inc
cmp
stos
jno
push
xor
sbb
popf
xor
jp
mov
and
pusha
add
in
xchg
ficoms
jmp
data16
and
lea
xor
mov
mov
fnstsw
push
xchg
lock
jge
test
movsb
es
rcl
adc
sbb
or
js
sub
stos
fwait
test
out
sti
add
mov
fsubr
xor
sbb
movsb
adc
fwait
cmp
cltd
call
arpl
imul
fwait
mov
dec
punpckhdq
or
rorl
pop
mov
sub
rcrl
icebp
das
pop
add
pop
mov
xchg
push
aas
dec
sbb
pop
shl
mov
or
add
adc
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
sub
add
orl
xor
jmp
mov
dec
jecxz
popf
jp
sahf
js
xor
add
jl
jl
sbb
jmp
and
dec
mov
popa
ja
sub
cmp
lock
mov
stc
sbb
pop
clc
mov
cltd
mov
dec
sub
and
mov
xor
cltd
pop
push
push
jbe
pop
aam
dec
mov
addr16
cld
sub
sbb
xor
test
inc
add
inc
jae
add
pop
mov
mov
adc
sub
mov
mov
arpl
rcrl
xor
stos
js
xor
test
dec
mov
outsb
lods
mov
mov
lods
pop
fcompl
mov
dec
inc
dec
stos
xchg
pop
adc
lea
fidivs
adc
or
nop
popf
sbb
in
sbb
cmp
xchg
mov
xor
lret
roll
test
nop
jb
cmp
movl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
jmp
jnp
decb
pop
mov
pop
mov
jl
push
jl
jl
rcr
ret
test
out
fldt
sbbb
cmpsl
sbb
or
cltd
sbbb
ret
lds
jmp
sub
inc
dec
or
mov
push
sarb
and
ja
rcr
in
push
mov
pusha
out
les
pop
das
xchg
scas
jge
jns
mov
pop
sbb
sbb
adc
aad
repnz
ljmp
iret
mov
pop
ret
cmc
push
push
mov
subl
xchg
push
mov
inc
mov
icebp
mov
add
insb
roll
stc
push
out
xorl
sti
or
pusha
stc
mov
insb
repz
lret
out
bound
push
add
test
jmp
enter
inc
xchg
mov
int
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movzbl
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sub
mov
mov
sbb
mov
push
mov
xor
cmp
je
mov
mov
sub
jmp
notl
adc
lea
xchg
xchg
cwtl
insl
or
pop
jl
jl
mov
xchg
pop
cmp
or
xchg
mov
shll
and
add
cltd
xor
inc
ljmp
sahf
fsubs
inc
aaa
sti
outsl
fbld
add
push
inc
xor
sti
arpl
inc
ja
das
cmp
ja
test
sarb
inc
enter
addr16
xchg
ret
data16
push
cmp
sbbl
fiaddl
and
push
push
mov
push
sahf
mov
test
push
jl
mov
jne
mov
out
xor
loopne
icebp
add
cwtl
sub
ss
inc
into
mov
jl
arpl
sub
inc
inc
das
stc
shl
aas
rclb
gs
cmp
sbb
arpl
loop
jecxz
sbb
ret
cmp
jne
mov
add
jmp
jmp
xchg
xchg
pop
test
imul
mov
jl
pop
jl
jl
mov
mov
cmpsb
xchg
or
mov
loopne
ret
push
fmuls
inc
sbb
or
add
dec
stos
ret
inc
out
mov
lods
in
xchg
cli
or
insl
jns
ficoml
push
add
push
push
ficompl
and
rcrl
aam
mov
int3
mov
add
out
mov
cwtl
xor
icebp
mov
push
sbb
push
std
or
lods
dec
and
mov
lret
fbstp
cmp
idiv
push
or
jmp
sbb
cmpsb
xchg
and
mov
cmp
inc
cmp
sbb
lock
mul
das
rol
and
cs
inc
sahf
ja
cmp
xor
mov
and
mov
xor
add
add
andl
jg
and
dec
mov
xchg
add
jl
jl
jl
fbstp
jp
shrb
add
dec
js
mov
decb
or
add
mov
jge
cmc
test
mov
incb
movsl
mov
test
mov
sbb
sarb
or
or
enter
fdivl
ret
inc
popf
ret
loope
aas
inc
cld
daa
sub
xchg
xor
xchg
fidivrs
mov
xor
push
inc
mov
data16
pop
cld
arpl
xor
sbb
test
inc
sub
xor
movsl
imull
shr
dec
xchg
adc
pop
xor
mov
dec
or
add
incb
xchg
out
pop
mov
cltd
in
in
out
pusha
lret
sub
add
lods
cmpsb
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
mov
xor
mov
add
jmp
sarb
jge
js
dec
mov
testb
jl
jl
jl
push
cs
imul
cld
lret
rcr
jl
aas
pop
add
inc
inc
sbb
sub
push
ljmp
cmp
enter
adc
xor
jbe
scas
inc
add
out
rclb
testl
or
rorl
out
mov
stos
push
lods
ds
fsubr
lret
loopne
xchg
lods
xchg
cmpsb
pusha
sbb
mov
jno
sbb
inc
mov
lret
add
dec
fidivs
mov
addr16
push
dec
pop
adc
loope
sti
int
xor
enter
sbb
repnz
and
lea
fs
cmp
lret
loope
mov
push
cltd
cs
cld
mov
mov
xchg
mov
sbbl
movsb
out
push
dec
ror
loopne
addb
shlb
xor
mov
or
mov
adc
movb
not
lea
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
sbb
mov
xorl
mov
xorl
xor
xorl
sub
addl
mov
xorl
movl
jmp
xor
adc
in
std
add
cmp
out
push
jl
push
jl
jl
movsl
push
outsb
xor
xchg
mov
lock
mov
aad
adc
push
jae
and
in
sub
xor
or
inc
ljmp
pusha
mov
lds
stos
or
out
xchg
test
cmp
movsb
mov
xor
mov
inc
dec
gs
push
adc
jl
pop
dec
mov
outsb
fsubr
jne
aam
cmc
jecxz
xchg
inc
aad
xor
stc
pusha
mov
pop
sub
divb
cmpsl
jno
stos
loop
pop
data16
or
mov
jp
rcrl
ret
inc
mov
rcr
aam
pop
scas
pop
ja
xchg
push
daa
or
addb
lret
insl
hlt
mov
in
stos
rcll
cmpsl
sti
mov
insl
cwtl
pop
lret
jle
dec
push
and
dec
mov
lcall
xor
aam
inc
lock
pushf
clc
mov
mov
sub
sub
mov
mov
push
xor
movzbl
sub
jmp
cld
pop
cwtl
daa
pop
out
jnp
or
pusha
test
jl
push
jl
jl
push
adc
lea
lret
mov
inc
pop
movsb
js
mov
loop
in
dec
dec
inc
data16
nop
jle
mov
adc
cmp
xchg
ds
rcll
movsb
sub
jno
mov
mov
cmp
popa
dec
mov
out
mov
jecxz
xor
es
into
mov
aad
arpl
jae
xor
dec
inc
adc
cmp
dec
inc
in
mov
jmp
cmpsb
add
fwait
call
icebp
movsb
mov
mov
add
pop
loope
ja
lock
and
popf
popa
sbb
popa
ficoml
test
iret
and
addr16
push
fwait
adc
xor
cmp
push
call
pop
mov
xlat
xchg
loope
xchg
adc
outsb
mov
jb
add
add
add
add
movl
jmp
movl
mov
jmp
sub
cmpsl
sub
sbb
lods
xchg
test
sbb
jl
jl
fdivp
outsl
test
pop
pop
pop
jno,pt
sbb
pop
es
sub
pop
inc
cmp
out
push
cmpsb
jne
add
fwait
cmp
jmp
pop
push
lret
sbb
sbb
jb
cmp
push
add
pusha
cmp
popf
sahf
dec
xor
aad
cmp
mov
daa
add
jo
daa
jnp
sub
mov
xor
jle
push
sbb
push
mov
cmp
cltd
add
outsb
incl
jge
mov
test
sbb
add
jae
mov
add
inc
jmp
add
movsb
mov
cmp
mov
sti
jmp
lods
xchg
adc
int3
pusha
mov
mov
inc
cmp
add
movl
inc
cmp
movl
jb
mov
mov
xor
mov
xor
mov
xor
adcl
jmp
push
ds
fldl
sub
sbb
jl
jl
arpl
or
pop
dec
add
mov
enter
outsl
sub
fldl
push
jle
cmpsl
and
shl
inc
jmp
push
aas
cmc
xchg
sbb
out
in
stos
repnz
scas
repz
mov
ljmp
gs
fidivs
sub
stos
fs
packsswb
imul
jb
iret
mov
std
insb
std
sbb
rcl
popf
mov
inc
inc
stos
mov
hlt
popf
shlb
push
fsubrl
or
call
fisttpl
fs
or
inc
je
pop
imul
mov
lods
in
dec
ljmp
dec
in
push
pusha
pop
inc
push
sub
or
adc
mov
fisubl
mov
sbb
icebp
or
xorb
enter
jp
add
rol
add
cmp
add
test
and
add
add
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
mov
mov
insl
jnp
stc
sbb
nop
dec
shlb
jne
sbb
jl
jl
jns
jb
or
push
mov
jns
lahf
xchg
dec
sub
aas
adc
sbbb
fs
imul
andb
pop
jmp
fbstp
cli
mov
cltd
sub
fadd
fs
addr16
or
mov
jle
aaa
int3
push
mov
subb
mov
adc
insl
xchg
or
imul
dec
ljmp
jne
or
and
and
mov
cmp
jg
aad
pop
and
test
add
adc
ss
dec
jne
mov
push
dec
push
jns
lret
cmp
rcll
ljmp
ss
scas
loopne
jnp
or
sahf
imul
lods
xchg
lock
xchg
adc
popa
das
jmp
es
xor
dec
sub
xor
shll
push
mov
mov
xor
jmp
sbb
mov
std
adc
cld
data16
jl
jl
adc
mov
cmp
adc
sub
pop
add
push
sbb
test
fdivrl
jb
inc
and
or
shrl
aas
sti
mov
sbb
xor
lret
dec
adc
das
dec
xchg
popa
mov
mov
jp
fldt
movl
scas
sub
xchg
lods
sub
cmp
push
cwtl
into
lea
jo
movsl
clc
or
ds
jecxz
and
sub
loopne
pop
and
lock
and
inc
and
push
mov
pop
push
ja
pop
inc
nop
inc
mov
int
call
nop
bound
pop
mov
xchg
push
or
jl
adc
xlat
gs
sbb
mov
lock
aam
mov
ss
xchg
cmc
cs
cmp
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jmp
daa
mov
mov
dec
hlt
in
ficomps
jl
push
jl
jl
out
xchg
out
inc
dec
in
ret
xor
xchg
sub
adc
pop
fdivrs
out
addr16
sbb
cmp
out
test
ds
arpl
out
lahf
xchg
sbb
mov
call
pusha
jl
cmp
pushf
into
loop
cmc
cmp
jns
push
pop
push
ds
and
inc
mov
ss
pop
mov
andl
dec
jo
cmp
pop
xchg
push
jg
outsb
jne
data16
imul
loopne
add
cmp
sub
flds
ds
or
adc
icebp
mov
out
outsl
sub
ds
sub
push
and
cmpsl
cmpl
xor
pop
insl
lods
add
jle
fs
out
lahf
mov
or
pop
inc
xor
xor
lcall
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
jmp
sbb
sbb
cmp
les
mov
jl
push
jl
jl
cltd
xchg
daa
sub
mov
ror
mov
cmp
into
dec
jns
jne
imul
add
pop
xor
inc
cmpsl
imul
scas
and
jns
out
xchg
and
repz
jle
call
jmp
idivb
fcomi
cmp
push
leave
push
push
fs
scas
mov
pop
push
test
push
aam
sub
movsl
mov
mov
and
js
push
add
das
pop
je
test
dec
lods
fcoms
in
mov
jnp
xchg
imulb
fstp
in
pop
xchg
inc
or
in
fistpll
fs
mov
pop
jmp
dec
push
sti
in
test
mov
mov
dec
arpl
add
cmp
pop
mov
cld
sbb
fs
int
inc
xchg
xor
mov
jmp
imul
test
xchg
lret
fstl
pop
jl
push
jl
jl
dec
dec
test
aam
clc
fdivr
sbb
inc
test
cmp
stos
mov
jno
cmp
loopne
nop
xchg
inc
shr
sub
sbbb
mov
pop
scas
and
sahf
cmovp
adc
jmp
outsb
or
push
cmp
shlb
fadd
jg
lcall
push
sub
sbb
test
adc
sub
iret
scas
push
cltd
xchg
std
dec
jbe
pusha
adc
xorb
cmp
fwait
add
xor
scas
ror
cmp
push
enter
xchg
adc
loop
sbb
movsb
sahf
lods
ds
and
filds
outsb
or
inc
cmpsl
sbb
ja
lea
push
movsb
dec
push
outsl
dec
dec
xchg
or
add
mov
pop
leave
ret
push
mov
push
adc
movl
sbbl
mov
xor
add
xor
add
sub
xor
mov
xorl
mov
sbbl
xor
addl
add
mov
adcl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
jmp
movsl
mov
gs
mov
mov
jl
jg
jl
mov
or
dec
fsubl
or
cmp
popf
icebp
and
std
cmp
sub
xchg
stc
sahf
xchg
imul
pop
cmpsb
daa
out
outsl
rcll
pop
mov
out
gs
adc
nop
icebp
push
iret
or
xor
movsb
stos
int3
js
in
push
insl
and
rolb
sbb
movl
mov
push
int
test
imul
call
push
mov
cltd
aad
loope
inc
sti
jmp
push
and
sbb
vunpckhps
stc
bound
test
sub
data16
cmp
jno
int
or
adc
lahf
pop
test
or
xor
cwtl
adc
jno
rcrl
test
call
mov
jno
xor
orb
mov
add
and
in
stos
pop
outsb
mov
test
pop
out
rcll
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
mov
mov
in
mov
jg
jl
jmp
fwait
loope
push
jns
sub
jnp
mov
aad
jb
stos
jmp
repnz
std
lret
aam
add
or
aam
pop
js
mov
icebp
push
cmc
ss
mov
pusha
mov
cld
mov
cmp
mov
xchg
aaa
nop
pop
fwait
inc
sarb
mov
cmp
mov
add
shlb
jo
jne
repz
and
push
loopne
jb
lea
or
call
or
loopne
sarb
jmp
sub
xchg
cmp
pop
js
sbb
idivb
xor
movsb
clc
xchg
into
inc
mov
xor
pop
xor
in
test
mov
loop
lods
sub
roll
lea
iret
or
stc
mov
cmc
dec
pop
mov
and
pop
nop
jle
mov
push
fstl
repz
fucomip
je
mov
mov
in
xchg
int
fstps
loop
imul
scas
in
fidivrl
dec
adc
mov
adc
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
jmp
outsb
stc
sti
movsb
jnp
gs
dec
xchg
adc
jl
jg
jl
pop
fwait
out
fs
sbb
andb
test
or
dec
inc
xchg
scas
jecxz
cltd
sbb
imul
jg
daa
test
mov
mov
mov
mov
test
cmp
cmp
jmp
mov
sahf
cli
pop
adc
add
outsb
and
js
loope
cmp
push
or
call
xchg
leave
sarb
out
imul
inc
les
test
push
mov
push
push
cs
arpl
lahf
icebp
std
repnz
or
fisttpll
insb
xbegin
sub
dec
pop
fadd
inc
test
jae
shll
andb
insl
add
xchg
ret
pop
fs
push
xchg
insl
jl
mov
mov
sub
gs
and
sbb
push
cmc
sbb
les
sbb
jl
sbb
pop
outsl
mov
add
inc
jbe
push
shl
add
test
mov
push
cmpsl
fcomip
adc
and
inc
int
notb
push
and
or
jmp
in
xchg
imul
les
jmp
ja
pusha
jno
jl
adc
jl
mov
lret
lret
mov
dec
push
data16
mov
sub
imul
pusha
fbstp
jmp
add
push
mov
lock
inc
or
xor
dec
outsb
mov
sbb
jle
daa
xchg
jge
gs
mov
lea
enter
adc
sbb
test
lods
pop
clc
jmp
addb
push
loop
bound
pop
add
movsb
and
push
push
xor
jnp
or
jo
fsts
adc
loope
fucomi
shlb
movzwl
sbb
jns
lcall
inc
cmp
push
rol
lods
loopne
das
sub
push
ja
test
and
add
fldcw
hlt
in
fistpll
mov
fsub
pop
stos
ja
mov
test
movsb
add
jnp
stos
mov
cmc
cmc
mov
popf
pop
xchg
xor
xor
leave
pushf
mov
xchg
test
jne
iret
insl
ret
mov
iret
sbb
ja
dec
mov
push
mov
pop
ret
push
mov
push
add
movl
mov
and
mov
movl
mov
xor
add
jmp
jne
xchg
mov
arpl
adc
mov
jl
jg
jl
and
mov
loop
push
std
out
push
xor
cli
or
out
xor
mov
mov
fiaddl
lock
mov
mov
mov
mov
call
repnz
fs
iret
xchg
mov
mov
cmp
cmp
add
ret
mov
xchg
leave
call
test
imul
aad
subb
mov
add
inc
in
add
ret
xchg
out
jns
or
ss
mov
and
fwait
cmp
je
mov
pusha
js
test
jne
xchg
mov
cli
sbb
mov
ljmp
or
jecxz
ret
sahf
xor
dec
fdivl
xor
fcmovb
out
jl
add
sbb
push
push
jb
pop
mov
stos
test
push
xchg
mov
pop
shrl
push
pushf
xchg
stos
xor
mov
mov
mov
dec
shll
jo
cmpsl
outsb
adc
lcall
mov
sub
mov
scas
pop
sbb
jp
pushf
add
mov
add
or
mov
or
mov
not
mov
mov
mov
sbbl
mov
mov
sub
mov
mov
and
jmp
fdivs
dec
stc
gs
jg
pushf
mov
in
adc
jl
jg
jl
xchg
sub
fadds
inc
push
into
mov
iret
lcall
decb
aas
and
jmp
lahf
push
int3
test
xchg
jne
sub
repnz
sub
mov
dec
mov
push
push
inc
add
pop
push
mov
out
scas
icebp
aam
lahf
adc
imul
js
cs
repz
inc
filds
mov
mov
adc
aas
cmp
or
xor
lock
mov
pushf
rcrb
push
mov
fsubrl
fs
push
mov
adc
xor
and
fstpt
mov
dec
nopl
add
pop
jp
fcoml
push
inc
dec
inc
lods
stos
fcoms
je
mov
ret
int3
mov
pop
inc
add
push
lahf
fildl
jb
in
insl
inc
ret
aaa
cs
mov
lods
pusha
push
jbe
jg
mov
fdivrp
aas
test
xchg
mov
into
xchg
xchg
dec
pop
mov
inc
push
dec
call
jecxz
sbb
mov
ror
out
or
test
outsb
jge
jne
out
and
mov
mov
adc
mov
sbbl
jmp
jno
xlat
sti
sti
std
add
mov
push
jl
aaa
jg
jl
ret
sbb
xor
or
repnz
and
xchg
lea
mov
mov
xlat
bound
idivl
pop
xchg
xchg
and
test
jo
mov
enter
ja
lock
sysret
es
mov
and
cwtl
iret
xorl
cmp
cli
push
push
push
xchg
cltd
dec
mov
call
pop
sub
xchg
sub
lock
inc
cltd
cmp
lcall
stos
lcall
mov
mov
and
mov
mov
cld
adc
outsl
xor
stos
int
pop
data16
mov
xchg
in
mov
push
mov
insl
jmp
xor
push
push
call
enter
lret
testl
ret
adc
mov
pushf
in
sbb
mov
fidivs
fwait
shrl
cwtl
mov
nop
fwait
scas
sbb
shll
imul
mov
adc
shlb
xor
pop
add
cmp
popf
sub
pop
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
push
push
push
push
adcl
call
test
movl
je
xor
jmp
andl
push
adcl
call
andl
test
movl
je
push
push
orl
call
movl
jmp
mov
mov
movl
sub
lea
neg
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movzwl
adc
lea
sbb
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
sbb
mov
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
sbbl
add
movl
mov
mov
movl
cmp
mov
movl
je
mov
xor
add
imul
movl
mov
jmp
xor
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
or
mov
mov
add
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
xor
mov
mov
movl
xor
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
negl
mov
add
mov
xor
add
mov
sub
add
mov
or
mov
sub
mov
mov
mov
or
xor
sbb
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
add
adcl
mov
and
mov
lea
or
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
orl
xor
mov
or
add
mov
sub
mov
sbbl
movl
sbbl
mov
mov
movzwl
and
movzwl
addl
add
or
movl
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
orl
add
movl
cmp
jne
mov
xor
mov
xor
add
movl
cmp
movl
jne
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
sub
mov
subl
sub
notl
add
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
movzwl
adcl
add
mov
mov
adc
mov
sbb
mov
orl
xor
lea
adcl
xor
sub
movl
mov
movl
movzwl
movl
cmp
mov
mov
movzwl
jg
orl
xor
sbbl
sub
sbbl
sub
movl
mov
jmp
xor
movl
lea
mov
mov
mov
mov
mov
cmp
je
not
mov
movl
movl
movl
jmp
mov
mov
movl
cmp
movl
jne
not
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
mov
xor
mov
add
mov
movzwl
subl
not
addl
and
movl
mov
movl
mov
jmp
xorl
xorl
mov
pushl
call
test
movl
je
movl
jmp
mov
cmp
movl
jne
mov
movl
movl
jmp
mov
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
movl
sub
mov
orl
mov
add
andl
xor
movl
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
xorl
movl
mov
push
mov
xorl
jmp
mov
data16
inc
xor
inc
jg
jl
fdivrs
jl
sbb
xor
les
pop
and
pop
adcl
fmuls
movsb
cmc
ja
lcall
cmp
lahf
xor
cmpl
sarl
sub
push
rolb
fsub
iret
jb
pop
xlat
arpl
mov
mov
jl
loopne
into
out
xorl
add
clc
xchg
or
aas
pop
aam
insl
mov
adcl
push
dec
push
fcomip
test
shlb
push
lods
out
push
inc
xchg
xor
dec
movsl
mov
or
xor
aam
icebp
out
enter
xchg
mov
add
decl
mov
push
sarl
movsb
call
pop
pop
dec
daa
mulb
mov
fdivr
dec
inc
add
cmp
sub
xchg
xchg
xor
cld
lcall
loop
push
or
shll
mov
cmp
subb
ss
inc
jns
std
decl
sub
sbb
sub
jle
jl
jmp
dec
xor
fildll
fistps
inc
ljmp
jp
icebp
adcb
and
outsl
mov
mov
add
jns
adc
adc
jle
rcl
xchg
js
fwait
pop
xor
pop
dec
sub
sub
dec
into
cmp
xor
adcl
xor
mov
sbbl
add
orl
add
sbbl
imul
movl
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xor
mov
adc
mov
xor
xor
add
add
jmp
dec
cmp
and
jp
pop
inc
push
and
fldt
jl
fdivrs
jl
xchg
pop
inc
sbb
dec
adc
gs
std
push
and
sbb
inc
inc
cmpl
adc
lret
push
add
xchg
jge
sarb
mov
fs
icebp
push
cwtl
ficoml
movsl
iret
pop
incb
js
cmp
xchg
popa
movsl
in
sbb
cmp
stc
pop
lahf
jp
xor
cmp
mov
sub
insl
mov
or
sbb
jle
cmpl
sbb
iret
push
push
adc
in
jp
fdivrs
adc
jns
lods
cmpsb
mov
push
cltd
les
mov
cmp
popf
mov
loopne
faddl
loop
in
call
push
bound
nop
fidivs
xchg
stos
push
lds
jne
and
je
inc
jnp
cmp
enter
sub
push
and
scas
call
int3
or
data16
mov
in
nop
leave
fimull
mov
mov
lods
das
jl
insl
aas
pushf
push
and
mov
cli
cld
cmp
fsubs
nopl
fnstsw
jge
sub
das
push
cmpsb
pop
or
cs
subl
or
adc
test
xchg
or
mov
rcrb
out
jo
scas
jmp
mov
jmp
mov
stc
mov
pop
sub
shll
jl
sub
insl
sbb
xchg
or
ret
inc
inc
lahf
cwtl
rolb
cmp
test
push
mov
fidivs
push
stos
inc
ret
out
xchg
xor
loope
in
lcall
insl
cwtl
loopne
push
mov
jle
inc
pop
adcl
adc
lret
fdiv
cmc
out
into
cltd
outsl
cmc
lahf
cli
rcr
scas
xlat
push
scas
movsb
inc
mov
fdivp
sub
in
and
mov
add
mov
push
outsl
push
mov
mov
icebp
xor
dec
ud1
and
ja
jp
jnp
xchg
test
lea
sub
cmp
xor
cmp
popa
and
es
bound
jecxz
dec
mov
inc
js
adc
mov
mov
pop
adc
call
xchg
inc
ret
xor
inc
jmp
shrl
mov
movsb
insb
decb
push
or
mov
cmpb
jecxz
lods
insl
jnp
iret
pop
pop
or
add
adc
pop
mov
pop
shll
inc
and
adc
mov
pop
jl
xchg
mov
repnz
gs
mov
js
inc
or
inc
cld
mov
xor
xor
add
add
imul
jmp
xorps
lds
in
bound
rcrl
pop
push
fdivrs
jl
pop
xor
xor
movd
pop
inc
fstpt
mov
and
inc
stos
sbb
dec
cld
jle
int3
and
lods
jnp
out
and
loope
jae
popa
push
fwait
cmp
push
sub
or
add
test
faddp
push
cmp
ja
cmp
outsb
lds
xor
jb
mov
jle
outsb
cmpsb
loopne
ljmp
cmp
pusha
out
jbe
adc
mov
add
cmp
xor
aas
les
cmp
inc
push
and
push
mov
lret
and
es
idiv
xor
shrb
mov
in
pop
mov
jae,pn
xor
mov
push
test
and
out
in
movsl
fcompl
js
sbb
mov
mov
pop
rcrl
lahf
push
call
add
daa
dec
hlt
mov
je
cld
int3
mov
lcall
jno
inc
ja
imul
stos
and
orl
cmp
hlt
loop
pop
or
pop
adcl
xchg
lods
loop
mov
bound
mov
dec
jp
data16
xchg
or
cmp
or
add
les
xor
xor
inc
cmp
jne
cmp
mov
je
xor
add
mov
jmp
stos
adc
mov
mov
mov
jl
jg
jl
pusha
xchg
push
out
cmp
inc
outsb
jb
shrb
xor
mov
pop
dec
add
cltd
mov
sbb
mov
scas
xchg
adc
outsb
cwtl
mov
sbb
mov
cwtl
add
hlt
inc
push
fsubp
test
push
pop
xchg
aas
mov
fldl
xorb
push
jns
jns
outsl
jg
mov
stos
jo
icebp
stc
xchg
mov
cvtpi2ps
pop
or
mov
cmpsl
pop
les
dec
das
jge
pop
sbb
aaa
into
movl
ror
scas
cmp
js
in
dec
or
shrl
sarl
or
int3
filds
decl
push
repnz
sbb
mov
jg
mov
push
push
fs
dec
sub
mov
cs
iret
add
lahf
test
adc
mov
jns,pn
outsl
outsl
push
mov
jl
cltd
sub
stc
xchg
stos
insb
push
dec
leave
and
nop
insl
push
nop
or
sbb
call
lret
imul
fsubrs
std
lea
mov
cwtl
push
pop
xor
xor
jg
lods
add
loope
sti
test
pusha
inc
idivb
aam
sahf
and
stos
stc
bound
jmp
adc
mov
dec
insl
adc
sahf
stos
jmp
dec
das
jl
fdivrs
jl
xor
jae
sub
add
aam
sbbl
fdivrs
and
add
lea
lds
mov
ret
mov
ret
rcr
idivl
mov
in
dec
add
mov
out
push
sub
jae
mov
push
jo
sub
xchg
xchg
test
mov
movsb
mov
dec
rep
add
loop
and
and
mov
mov
jge
scas
leave
lcall
fmulp
aam
sbb
stos
sbb
lods
dec
mov
enter
fwait
out
inc
push
dec
jecxz
jg
sbb
pop
insl
fcompl
push
or
mov
sub
and
imulb
es
aaa
sub
mov
ret
jmp
sub
loope
mov
dec
or
out
xchg
pop
popf
pop
jmp
adc
xor
mov
loopne
popa
addl
pop
xlat
divl
out
push
lahf
arpl
pop
dec
xor
inc
out
push
adc
js
inc
mov
subb
jb
pop
in
insb
mov
fwait
leave
les
imul
add
fstpt
or
mov
cmp
jg
lahf
in
scas
outsl
repnz
mov
mov
pop
leave
ret
push
mov
sub
xor
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
xorl
movl
mov
push
mov
adc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
mov
negl
mov
subl
push
push
addl
test
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
or
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
jne
mov
mov
cmc
mov
pop
sub
pop
and
jg
jl
fcoml
insb
fildll
or
mov
cmpsl
mov
push
fnsave
out
sub
mov
lock
mov
ss
mov
insl
test
dec
das
stc
call
scas
adc
xor
test
add
scas
mov
xor
inc
popf
gs
adc
ret
mov
mov
test
fsincos
mov
js
dec
pop
xor
in
mov
pop
test
movsl
lock
inc
push
stos
enter
sti
fstpl
repnz
fcoml
mov
idiv
xchg
inc
fdivl
test
fdivrl
mov
lcall
push
sti
pop
es
ret
mov
adc
out
adc
jo
shll
fimull
adc
adc
rol
mov
adc
push
stos
cli
les
adc
aam
mov
dec
test
outsb
push
int
fisubl
aad
sub
cmp
inc
mov
out
icebp
and
enter
xchg
and
dec
movl
pop
ret
imul
add
and
push
std
cmp
adc
jecxz
lret
add
leave
or
pop
adc
mov
mov
shll
and
mov
ffree
jae
and
mov
and
imul
neg
mov
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xchg
sub
sbb
xor
mov
or
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
jmp
add
sbb
cltd
push
stos
cmp
adc
jl
call
or
mov
push
jg
inc
lea
lods
jecxz
rolb
mov
mov
mov
je
ljmp
dec
repz
lret
xchg
inc
sub
sub
and
bound
ror
cmc
aam
push
fwait
cli
call
xor
sub
push
in
pop
inc
and
enter
or
das
mov
jle
daa
or
stc
scas
push
mov
push
mov
inc
push
fstpt
pop
add
add
aad
mov
push
das
lret
mov
and
out
loope
pop
mov
xor
repnz
mov
popf
fdivrl
ljmp
pop
or
arpl
and
xchg
ret
mov
cmp
pushf
sub
sbb
jp
mov
repz
sub
std
test
and
pop
insb
cltd
xor
imul
xor
and
cltd
sub
pop
add
sbb
lahf
test
fdivs
pusha
fisttps
call
out
imul
das
fnstsw
add
mov
fisttpll
inc
jp
xor
fst
push
or
pop
mov
mov
adc
imul
dec
call
add
add
mov
xor
and
jmp
dec
pushf
adc
repnz
xchg
dec
fstps
ficomps
jg
jl
call
mov
notl
push
and
jbe
aaa
movsb
setae
xchg
enter
adc
jo
adc
or
clc
and
sbb
lods
push
mov
dec
loopne
enter
push
or
xchg
loop
imul
xor
cwtl
jnp
mov
sahf
add
mov
xor
mov
pusha
sbb
jecxz
cmp
pushf
push
iret
dec
fwait
and
imul
mov
sti
jg
cmp
icebp
cs
and
rorl
jle
adc
loop
and
lcall
mov
int3
or
enter
mov
sbb
push
mov
xor
scas
push
dec
bound
jns
fs
pop
test
lds
xchg
push
mov
jno
adc
xchg
movsl
mov
scas
pop
adc
or
cmpsl
mov
test
cmp
xchg
lret
sub
adc
out
in
ds
test
pop
xor
push
ja
and
rclb
pop
in
cmp
sub
pop
daa
dec
xor
scas
push
xchg
test
sbb
repz
xor
jp
or
dec
push
scas
sarb
inc
fidivs
mov
insl
imul
lret
mov
mov
je
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
xor
xorl
add
cmp
jne
subl
pushl
call
mov
xor
add
xor
xor
sub
sub
mov
sub
mov
mov
xor
adcl
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
jmp
lret
idivb
lods
out
scas
xchg
xchg
and
jl
push
and
pop
jnp
gs
imul
into
or
xchg
pop
insl
mov
mov
jge
mov
mov
xchg
adc
out
jmp
add
orl
js
je
xor
add
add
pop
inc
aad
popf
xchg
popa
sbb
addr16
jl
das
pop
fnstsw
cmp
out
cwtl
and
or
sbb
stc
mov
ret
adc
inc
std
sbb
mov
cmp
leave
push
mov
data16
lret
test
ds
jo
mov
jmp
push
jg
push
loopne
ret
sbb
push
sbb
sub
and
pop
lret
sub
in
fbstp
pop
or
mov
jnp
mov
and
inc
mov
mull
aad
push
cmc
pop
mov
sarl
push
jns
outsb
pop
xchg
sti
scas
pop
push
shlb
insb
pop
cmp
loop
lds
out
pop
mov
dec
ret
sbb
mov
and
sub
aaa
mov
add
or
iret
lods
mov
sbb
mov
pop
mov
xchg
sub
jg
ds
push
insb
push
js
shl
shlb
sbb
imul
enter
add
add
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
adc
mov
inc
mov
movsl
out
inc
and
jl
jg
jl
jle
lock
mov
push
mov
loopne
stos
fidivl
cmp
shlb
jge
dec
gs
and
daa
inc
stos
decb
add
arpl
jge
les
mov
jnp
int
inc
ja
cmp
and
mov
bnd
mov
and
xchg
ret
test
dec
ret
xchg
fs
cmp
aaa
aaa
lock
fcomp
mov
int
ret
shl
mov
push
out
ficompl
xor
movsb
lcall
lcall
mov
pop
mov
or
cmc
out
mov
rcll
aas
in
addb
movsl
sbb
add
stc
jns
inc
adc
mov
bound
and
aas
adc
mov
sbbb
or
xchg
xchg
sub
lods
jp
mov
subb
lods
fbstp
adc
push
xchg
cltd
lods
adc
lahf
adc
clc
pop
sub
mov
jmp
into
data16
pop
in
lcall
mov
mov
sub
mov
fldenv
add
dec
push
out
das
test
enter
lods
jecxz
mov
inc
xor
das
sub
pop
mov
adc
adc
sbb
sub
push
and
mov
ja
out
adc
in
scas
shrl
mov
jmp
dec
cli
sbb
test
outsb
jp
out
shlb
out
xor
jl
call
ljmp
mov
loope
fbld
jbe
jnp
rolb
pop
sti
pop
dec
das
sbb
lret
xchg
xor
mov
inc
out
sbb
and
cltd
and
cmc
or
adc
mov
movsl
je
adc
mov
xchg
xchg
lods
dec
out
inc
lahf
gs
out
leave
aaa
push
into
pushf
push
inc
adc
imul
and
stc
lock
jae
pop
adc
pusha
je
pop
mov
cmp
int
sbb
sub
jno
mov
sti
cli
test
inc
outsb
cmpsb
add
mov
or
cmp
xlat
mov
outsb
arpl
lods
mov
jmp
sbb
hlt
push
js
out
daa
xor
out
aas
sub
mov
or
sbb
ja
cmp
mov
push
lret
and
mov
out
rclb
xchg
dec
sub
cmp
ljmp
andl
psubb
sti
mov
and
cmp
or
lcall
clc
movb
or
push
and
or
pop
jnp
dec
es
cwtl
or
movsb
or
testl
adc
mov
into
ss
jg
dec
mov
mov
xor
mov
add
jmp
push
mov
aad
sbb
and
jg
jl
daa
sub
mov
sub
fsub
mov
cmp
sub
jno
push
fwait
lea
sbb
popa
xor
jmp
xlat
mov
xor
test
add
mov
movsb
mov
in
daa
adcl
sbbb
xchg
cmp
sub
jnp
repnz
lods
jg
sbb
mov
or
push
lock
mov
fildll
sub
cmp
push
lods
fwait
into
out
xchg
push
inc
dec
mov
sbb
pop
xor
xor
insl
adc
xchg
lods
xor
mov
mov
mov
push
push
sahf
iret
push
or
sub
je
int
or
push
pushl
mov
add
xchg
mov
adc
push
arpl
add
in
pop
sbb
add
jmp
or
imul
idivl
push
scas
lahf
sti
clc
cmpsb
lds
pop
push
out
je
mov
sbb
aad
or
pop
rcr
push
aam
jp
jb
jns
loope
jmp
dec
fs
pop
stc
in
pop
fwait
aas
ss
js
bound
sub
ret
push
fdivr
push
loopew
jne,pn
adc
dec
lcall
addl
mov
int
jnp
cmp
inc
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
jmp
je
jne
insl
gs
aam
pop
sbb
int
cmp
jg
jl
iret
lock
sahf
cld
rorl
fs
mov
xchg
outsl
lret
rorl
or
gs
fdivrl
inc
pusha
xchg
cmp
cld
imul
scas
and
fwait
add
mov
push
shl
shl
loop
loope
rcl
cli
jge
inc
xchg
jo
pop
pop
cltd
jnp
mov
dec
jg
fsubl
xor
out
push
mov
mov
jl
cmp
and
in
test
or
sbb
sub
mov
cmp
negb
sub
jmp
inc
add
arpl
xor
or
jmp
pop
addr16
inc
lods
push
lds
inc
and
lea
sub
iret
add
add
sbb
cmpsl
out
js
out
out
add
jbe
jnp
push
jb
shlb
fwait
inc
out
pop
stos
jl
jl
mov
lock
pop
sub
out
push
enter
cmp
pop
xchg
mov
cmp
rol
pushf
rcll
testl
cwtl
daa
jo
cli
ret
jmp
ret
js
add
int3
cmp
out
or
scas
add
pop
call
clc
xchg
mov
xchg
or
adc
push
aaa
into
xchg
int
testl
jb
add
fmull
call
rorl
add
call
add
jge
mov
mov
jl
jg
jl
jp
jbe
add
push
sbb
add
xor
je
mov
mov
add
xor
clc
scas
mov
sub
clc
xor
enter
stos
cmp
push
shrb
inc
ljmp
lret
xchg
pushf
push
jb
mov
fstl
dec
push
std
in
xor
call
call
pop
stos
popa
pop
or
jo
fucomp
scas
lds
mov
mov
fucomp
dec
loop
es
inc
xchg
xchg
adc
ss
test
imul
mov
fisttps
push
inc
out
mov
push
cmpsb
push
cltd
xchg
je
cmpsl
out
cmpb
in
lea
adc
or
inc
sub
insl
sub
cs
test
xor
push
inc
out
or
sbb
pushl
imul
or
pop
aam
test
stc
jns
adc
pop
test
push
cmpsl
aas
movsb
xor
insb
jmp
add
cmpsl
imul
pop
inc
adc
cmp
in
out
mov
push
mov
dec
jmp
jg
dec
cld
cmp
loope
sbb
xor
xchg
and
mov
fisubl
sbb
add
fists
jg
push
dec
sbb
xchg
stos
adc
mov
clc
orb
add
ret
out
std
cli
cmp
roll
jl
call
cmp
jle
sbb
pop
xchg
or
cmpb
pop
ficoml
sbb
inc
jmp
jecxz
cld
cmpsl
push
dec
pop
das
sub
cmpsl
jno
cmp
pop
jmp
fiaddl
aaa
cli
roll
test
loop
pop
inc
mov
mov
cwtl
jne
dec
adcb
push
mov
push
cmp
inc
in
sbb
nop
push
jno
out
fdivp
inc
fsubs
daa
mov
lods
jae
and
push
jl
jp
repnz
inc
pop
and
xor
add
pusha
jmp
adc
test
inc
sub
repnz
mov
inc
sub
cli
jo
adc
jae
in
cmp
jge
inc
sbb
icebp
aas
and
loop
stos
push
adc
jle
into
pop
lret
aaa
push
in
fcompl
lods
popa
add
fdivrl
lcall
xor
aam
daa
loop
bound
aaa
pop
idivl
dec
mov
push
pop
cli
dec
mov
xchg
pop
or
in
adc
ja
pop
fcomip
pop
or
and
insb
sbb
pop
js
repnz
sbb
push
dec
addr16
and
push
pop
add
mov
lods
dec
bound
lods
or
imul
or
pop
push
and
xor
shr
add
add
or
je
out
sub
fisttpll
fistpll
jl
call
mov
push
pusha
push
add
and
dec
stos
lods
andb
andb
mov
sub
sarl
mov
es
je
xor
xchg
pop
xor
neg
lds
jae
movsl
bound
push
adcb
adc
insb
jb
stc
mov
inc
divl
jbe
andb
sbb
or
cmp
xor
xchg
popa
mov
pop
push
lret
and
cmpsl
mov
in
or
rol
leave
xchg
xor
fcoml
popf
jecxz
adc
repnz
and
fstps
pop
pop
mov
xor
daa
xchg
xchg
shll
movsb
push
test
imul
jp
cmp
pop
lds
adc
jp
test
pop
cmp
jg
and
jge
pop
xchg
pusha
lock
lea
mov
cs
and
out
test
mov
mov
mov
fldenv
js,pt
lret
xchg
xchg
rorb
aaa
dec
aam
popf
push
pop
and
pusha
ficoms
int3
sub
sahf
fstl
stc
xchg
pushf
inc
dec
aad
add
div
shl
jns
push
dec
or
sbb
push
cmp
or
lret
imul
and
imul
mov
xor
mov
lea
cmp
jmp
test
in
iret
jp
movsl
jge
loope
dec
inc
cmp
jl
jg
jl
leave
pop
push
push
mov
or
test
pminsw
cwtl
lods
sub
outsl
xor
sarl
rclb
add
and
mov
and
xor
lea
mov
lret
icebp
dec
add
loop
jge
adc
sahf
pop
or
push
enter
aaa
ljmp
lahf
or
nop
or
xchg
xor
pop
aaa
jno
cltd
push
popf
add
pop
dec
cltd
or
jne
mov
mov
clc
sub
jmp
cmp
pop
xor
int3
or
loope
mov
ds
fnstcw
stos
mov
adc
mov
fidivrs
loopne
sbb
pop
cmpsl
cmp
jle
ss
fs
movsb
arpl
cmp
js
addr16
pmaddwd
mov
dec
imul
addl
rcl
dec
or
movsb
pop
rorb
stos
xchg
daa
aas
sbb
popa
fcoml
call
cmp
movsl
inc
adc
adc
std
jns
daa
pop
std
out
es
sbb
imul
dec
jns
cmpsl
mov
into
sbbb
fidivrs
xchg
cmp
rorb
jmp
fsubrp
add
sahf
jb
add
or
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
hlt
jecxz
dec
jnp
pop
std
sahf
lret
sbb
jl
call
or
out
push
rorl
fstl
subb
icebp
push
pop
mov
push
nop
loopne
lock
cmpsb
xor
insl
cmpb
insl
insb
mov
jo
and
fwait
mov
rcll
insb
xor
push
lea
lods
xlat
mov
rcrl
pushf
cs
mov
aas
mov
pop
push
add
into
fisubs
ret
stos
gs
cmp
cmp
ret
xor
daa
in
sbb
pop
cmp
inc
sarb
push
ret
push
cmp
pop
or
xor
sti
adc
xchg
mov
movsb
inc
pusha
pop
jle
add
bound
mov
mov
cmp
mov
int
pop
jo
inc
mov
mov
fmuls
jnp
jecxz
ljmp
mov
mov
xchg
push
cmp
add
daa
jg
lea
loopne
and
lret
jne
into
stos
in
dec
jecxz
mov
sbb
jle
movsb
cltd
push
pop
movsb
cmp
adc
rcr
xor
cs
test
rcl
outsl
sbb
out
jl
fwait
jnp
mov
pop
pushf
xchg
aaa
daa
cli
xchg
sub
lods
push
int
clc
xchg
push
fs
or
mov
scas
roll
xchg
push
xor
mov
dec
jmp
xchg
mov
mov
xchg
xor
jg
jl
or
movsb
sub
popf
add
inc
xor
sub
lods
test
js
inc
out
mov
test
loope
dec
bound
jae
insb
aad
mov
add
or
jp
xor
aaa
loop
or
xchg
sti
inc
dec
fisubrl
jbe
mov
arpl
fmulp
and
mov
push
sub
jle
loope
ss
and
dec
pop
pop
scas
inc
jmp
aad
mov
fdivs
push
lods
push
push
jae
add
scas
fistpll
in
jge
outsb
mov
adc
mov
push
jbe
add
mov
cmp
fadd
add
fiaddl
mov
cmc
dec
fistps
dec
jae
jno
and
mov
push
ret
in
push
shll
mov
mov
mov
icebp
dec
sbb
push
xchg
lret
sbb
enter
dec
mov
mov
xchg
mov
and
out
and
fisubs
fs
aas
jbe
sbb
mov
mov
inc
fisttps
mov
pop
or
cltd
ficoms
cmp
pop
inc
lds
dec
cs
jmp
ds
out
clc
xchg
mov
inc
popa
cmc
sbb
sbb
dec
xor
add
pop
mov
pop
jmp
add
lret
mov
push
xchg
shl
das
mov
xor
jl
ret
and
or
mov
cmpsl
rorb
or
jl
lcall
leave
rcl
add
pushf
icebp
mov
add
sub
mov
adc
pushf
gs
or
push
xchg
mov
lea
popf
xchg
aad
sti
add
rcl
mov
nop
fstpt
lcall
ds
pop
frstor
stos
pop
test
xchg
inc
lock
in
jbe
fisttps
iret
daa
add
int
mov
mov
push
insl
in
push
shll
sahf
ljmp
in
push
ficompl
out
xchg
pusha
mov
in
pop
sub
push
xchg
cli
loop
jmp
lods
push
daa
out
insb
test
rcrb
xor
call
repnz
mov
out
xchg
je
mov
mov
bound
out
adc
scas
cmp
push
push
daa
mov
je
xchg
stc
mov
xchg
sbb
jno
adc
sbb
xor
out
fbstp
faddl
add
loope
xchg
andl
addb
sub
sub
xchg
mov
or
pop
pop
leave
ret
push
pop
js
imul
popa
dec
arpl
pop
inc
dec
jne
push
add
add
push
xchg
inc
add
inc
add
or
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
jnp
inc
dec
mov
push
pop
push
mov
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
or
dec
dec
dec
pop
bound
mov
dec
or
dec
jnp
mov
dec
mov
jb
jae
subl
jge
mov
dec
push
dec
mov
dec
jnp
inc
dec
mov
sbbb
xchg
insb
nop
jl
jge
mov
dec
push
dec
mov
dec
or
dec
inc
dec
pop
xchg
pop
xchg
outsl
mov
jge
mov
dec
cs
mov
dec
and
dec
inc
dec
pop
mov
insb
mov
sarb
dec
or
mov
dec
jl
mov
dec
mov
mov
mov
ret
insb
sarb
mov
dec
cs
mov
dec
cs
inc
dec
mov
ret
outsl
shrl
loopne
loope
dec
or
mov
dec
or
dec
sub
dec
mov
rcrb
outsl
jecxz
loopne
lock
mov
dec
pop
dec
mov
dec
mov
loop
jecxz
rep
lock
jge
jl
jge
mov
dec
and
dec
or
dec
sub
dec
mov
add
outsl
adc
and
mov
nop
inc
add
inc
add
inc
add
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
pushf
clc
and
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
subl
push
orl
mov
dec
cmp
inc
add
ja
cli
jne
in
incb
mov
xchg
inc
add
pushf
clc
xor
pushf
clc
xor
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
nop
inc
add
xchg
inc
add
dec
xor
jmp
add
sbb
add
mov
add
dec
add
inc
add
insl
add
add
add
popa
add
push
imul
add
add
data16
add
add
add
add
push
add
add
imul
add
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
outsl
jo
dec
dec
inc
dec
dec
insb
imul
imul
add
dec
add
inc
add
outsl
add
push
push
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
add
add
dec
pop
dec
sub
dec
pop
dec
es
imul
add
dec
imul
dec
sub
dec
sub
dec
push
add
dec
and
dec
sub
dec
and
dec
add
add
push
jge
lea
popf
push
lods
push
mov
push
in
push
std
push
or
push
cmp
push
jb
jae
jo
jno
jbe
ja
je
jne
mov
mov
mov
mov
mov
jl
jge
jge
jge
jge
cmp
vptestnmw
sub
hlt
xor
xor
jno
mov
imul
mov
xlat
movsl
xchg
sub
movsb
jge
fidivs
xor
pop
adc
and
movsl
sbb
add
je
inc
add
shll
mov
inc
add
push
addr16
inc
add
inc
add
popa
dec
push
dec
jne
pop
jns
dec
inc
inc
popa
jns
push
inc
inc
jne
push
push
jno
jb
insw
arpl
bound
js
add
add
push
ja
inc
gs
inc
dec
outsb
imul
push
dec
push
push
push
jne
inc
outsb
jo
inc
jp
add
dec
inc
inc
inc
jbe
push
outsb
add
pop
push
jp
imul
jbe
add
inc
inc
popa
addr16
dec
imul
push
jne
add
dec
gs
outsb
pop
push
push
dec
icebp
iret
mov
loopne
mov
sarb
add
imul
add
in
ret
pop
inc
xorb
insl
mov
testb
cs
insl
rcrl
scas
daa
mov
lret
adc
pushf
mov
jne
sti
movsb
js
add
mov
push
stos
push
adc
outsl
ds
dec
mov
dec
push
mov
mov
xchg
push
sar
lds
mov
cmc
xor
sub
sub
sbb
xchg
jbe
adc
dec
jecxz
mov
mov
testl
sahf
mov
jnp
or
mov
adc
mov
test
lods
mov
daa
mov
or
test
call
sti
out
ds
fstpt
mov
hlt
daa
repz
insb
pop
out
jmp
fcmovnb
sbb
pop
ret
and
add
xchg
sub
dec
inc
rcl
cmp
pop
push
stos
xchg
pop
inc
jnp
jns
fld
and
mov
push
push
mov
loopne
xchg
aad
inc
inc
in
shll
std
mov
fimull
sbb
jns
mov
adc
jge
push
pop
mov
hlt
mov
jne
mov
fwait
cltd
inc
pop
xchg
psubusb
mov
sub
mov
dec
dec
call
mov
cmp
lds
orl
fldl
daa
pop
clc
pop
cmp
fcomps
push
xor
push
push
jl
pop
jne
out
add
xchg
or
push
xchg
xchg
mov
dec
xchg
repnz
pop
hlt
jbe
cmp
jnp
add
sbb
nop
daa
jae
mov
xor
inc
fnstcw
movsb
aaa
ds
pop
js
xchg
mov
or
sti
sar
testb
inc
jb
mov
or
insb
add
cmp
fdiv
or
pop
outsl
sub
add
mov
ljmp
cmpsl
xchg
in
scas
and
sarb
dec
icebp
fwait
or
mov
arpl
aad
push
adc
jne
dec
and
xlat
mov
das
cmc
mov
sarl
cld
inc
addr16
pop
jne
cli
mov
or
sub
pop
lahf
mov
and
lods
fwait
mov
adc
push
jg
and
scas
out
pop
mov
test
and
nop
scas
iret
mov
pop
xchg
pop
xor
push
int
aad
jg
insb
inc
jbe
ret
jle
lcall
test
inc
inc
pop
or
dec
and
adc
lcall
aam
push
fidivrs
out
out
add
jecxz
xchg
inc
mov
in
cmpsl
push
inc
push
mov
pop
pusha
sbb
and
rcl
aad
pop
jno
aas
mov
imulb
sti
les
add
dec
add
xchg
inc
mov
imul
xchg
aad
lahf
jp
and
popf
xor
gs
mov
xor
mov
in
cs
jnp
testl
test
movsl
insb
xor
mov
xchg
sti
add
xchg
fldl2e
pop
out
in
sbb
in
mov
and
cld
fstps
or
cmpsl
xchg
pop
cmpb
pop
add
cmc
into
repnz
sub
ljmp
in
aaa
or
iret
add
mov
xchg
mov
sbb
adc
in
and
test
mov
cmp
mov
mov
adc
jno
es
out
outsl
cmpsb
and
aad
push
inc
das
addr16
insb
xchg
scas
push
mov
stc
adc
fnstsw
pusha
ja
call
jle
or
lock
inc
push
sub
popa
inc
add
and
aam
mov
aaa
and
pop
repz
fwait
jecxz
into
pop
xchg
sbb
das
xchg
insl
xchg
dec
sub
cli
push
iret
dec
mov
cmp
mov
loope
add
scas
lret
xchg
xor
sub
shlb
in
fwait
lods
xlat
jge
lea
inc
add
adc
push
pop
jecxz
stos
or
mov
xchg
xchg
ret
outsb
dec
sahf
aas
mov
ss
roll
inc
sti
inc
mov
sbb
test
pop
jecxz
inc
jle
pop
sub
imul
xchg
insl
clc
and
shll
add
arpl
push
cmp
jle
js
nop
sahf
cmpb
das
ja
inc
shlb
jecxz
mov
insl
ljmp
stos
cmp
jle
mov
in
hlt
add
cmp
loop
sub
cmc
stos
jg
sbb
and
jb
repz
jnp
dec
fnstenv
mov
fnstcw
jne
adc
movsl
in
jge
jno
cli
cli
aam
sahf
xchg
sub
mov
jg
dec
hlt
fiaddl
mov
notl
and
shll
dec
in
or
adc
inc
pop
int3
adc
cmpsb
fcoms
pop
add
xchg
jne
test
out
sti
pop
mov
mov
inc
mov
inc
repz
out
push
pop
shll
fwait
into
js
adc
pop
inc
cmp
dec
mov
dec
mov
nop
out
cmp
or
into
push
fnstcw
xchg
mov
sbb
popf
cltd
ds
and
pop
jbe
sub
add
pop
or
adc
int3
xchg
ss
push
mov
cld
imull
daa
addb
stc
bound
mov
test
or
pop
daa
ja
jmp
pop
mov
sar
nop
jns
add
lds
sbb
mov
push
cli
or
clc
adc
inc
dec
jp
xchg
enter
xor
xor
xlat
pop
sub
xchg
push
mov
lahf
cmp
jne
ret
xor
call
mov
jnp
cltd
pop
pop
movsl
sub
aad
outsb
stc
rcl
fucom
mov
add
ret
popa
or
jge
cmpsb
mov
ds
cmp
mov
pop
dec
mov
in
int
outsl
popf
xchg
mov
jae
inc
icebp
mov
mov
repnz
xlat
mov
ja
inc
mov
iret
insl
inc
mov
fcomps
fisubl
jp
mov
subl
sub
loope
mov
mov
xchg
xchg
add
dec
inc
jo
sbbb
leave
cmpsb
dec
fists
xor
leave
repz
into
icebp
mov
testb
lods
and
repz
sahf
inc
push
jo
test
sahf
aas
js
or
mov
jnp
test
ficompl
jnp
fsubs
sbb
mov
mov
push
xchg
ljmp
pushf
adc
push
repnz
insl
cmp
stos
dec
clc
xor
sbb
add
enter
js
pop
imul
jae
push
xchg
imul
mov
push
pop
mov
outsl
add
or
fildll
out
repz
out
sub
add
imul
add
es
adc
mov
mov
mov
mov
orl
lock
sti
xchg
dec
mov
jle
sub
aad
push
out
push
jno
jns
enter
sbbb
adc
xor
mov
out
xchg
push
xchg
cmp
rcl
inc
das
push
andl
pop
paddw
push
add
enter
je
arpl
add
in
jg
icebp
mov
mov
shlb
jmp
int3
pop
nop
sbb
mov
sbb
and
jg
inc
fcmovne
cmp
xor
sahf
and
mov
leave
aas
sbb
xor
lods
and
fadds
nop
or
nop
sahf
lods
sub
xchg
pop
leave
push
iret
out
jmp
push
into
inc
mov
decl
mov
clc
sbb
sbbl
jbe
jmp
shll
inc
xchg
lcall
xchg
jae
push
in
fstl
dec
arpl
mov
mov
jo
stos
lcall
ret
int3
adc
add
push
mov
insl
cltd
mov
xlat
sub
dec
subb
sbb
scas
insb
sub
xor
xchg
popf
loop
add
nop
lret
test
and
arpl
nop
cltd
jnp
adc
lods
test
push
movsb
dec
mov
mov
and
mov
js
xchg
in
or
std
mov
popa
inc
mov
sahf
or
and
xchg
test
dec
ja
std
inc
or
outsl
faddl
in
jmp
cld
add
sbb
add
out
mov
enter
cltd
lods
out
mov
test
ds
jnp
inc
jne
sbbb
mov
jb
aam
frstor
add
sbb
cmp
call
sbb
lods
fildl
mov
jecxz
icebp
loop
jne
lods
test
ljmp
push
lret
sbb
mov
dec
lret
cli
pushf
pop
cmp
mov
lock
imul
sbb
pop
mov
sbb
push
mov
sbb
mov
add
pop
out
or
movsb
push
add
jmp
mov
notl
mov
bound
jecxz
popf
or
or
xor
xor
sub
into
mov
shld
dec
ds
loope
cwtl
mov
stos
add
add
data16
frstor
pop
and
call
inc
jb
xchg
ret
scas
add
push
mov
ds
cmp
cmpsl
xchg
inc
xchg
lods
scas
cld
jecxz
loopne
shrl
leave
mov
sbb
aad
mov
decb
daa
xor
cmc
adc
jle
loopne
push
sub
dec
out
out
inc
xlat
sub
jle
mov
push
rcrl
fstpt
cmp
sub
add
jmp
xchg
pop
push
into
xchg
add
mov
xchg
or
jecxz
ljmp
imul
ljmp
aaa
test
xor
dec
sbb
cmp
cmpsl
push
adc
dec
and
iret
and
out
lock
xchg
xor
sub
xchg
sub
std
mov
lret
int3
arpl
loope
xchg
andl
mov
fnsave
or
jmp
mov
gs
jne
cmpsb
in
dec
xor
or
pop
addr16
test
ret
sub
sub
push
adc
and
pop
or
repz
out
mov
pusha
cmc
cmpsb
add
lahf
fldt
notl
mov
push
js
aad
adc
cmp
and
out
inc
stc
cltd
add
notb
testl
dec
pop
enter
mov
inc
push
push
jmp
jecxz
out
or
xlat
mov
fstl
sub
sbb
push
test
out
jnp
adcl
push
xchg
inc
filds
mov
fcoml
push
in
xor
cmc
fstpl
pushf
dec
mov
popf
out
aam
xchg
sub
jl
push
mov
mov
mov
loop
call
sbb
add
insb
dec
sahf
adc
in
push
subl
jecxz
scas
jle
hlt
pop
pop
adc
mov
dec
leave
js
xchg
push
dec
outsb
inc
mov
das
inc
iret
jae
out
sub
lret
jb
imul
xchg
push
mov
in
fildll
xor
test
into
lods
xchg
jbe
cmp
scas
imulb
xchg
mov
sbb
or
xlat
jnp
dec
scas
jle
pop
or
mov
inc
lea
xchg
jns
dec
and
sahf
subl
shll
lea
test
cli
sub
push
mov
ss
push
arpl
push
popa
xchg
fsubrl
push
outsl
sub
test
ljmp
cmp
jmp
cwtl
js
sub
pop
pusha
xor
aas
jbe
test
rorb
sti
aaa
pop
data16
mov
cmp
mov
add
ljmp
jbe
cmc
incl
rcrl
nop
push
adc
jb
test
jne
adc
sub
push
aam
icebp
and
pushf
insb
inc
sub
xchg
cmp
ficompl
dec
add
loopne
sbb
int3
vaddss
sub
sub
movsb
and
test
mov
inc
repz
adc
popl
mov
addr16
and
repnz
insb
daa
dec
dec
ss
lret
sbb
and
aas
int3
cmp
push
pop
cmp
call
jecxz
lret
rcrb
inc
xlat
push
test
pop
jle
je
call
mull
add
mov
cwtl
stos
xchg
int3
test
jmp
xchg
inc
inc
aas
mov
add
sub
arpl
adc
jge
orb
cwtl
inc
lea
out
dec
xchg
ja
data16
fnsave
and
imul
push
lea
dec
mov
pop
sar
imulb
fistps
mov
arpl
mov
fists
cmp
je
mov
cltd
push
std
fdivrp
fidivl
fnstcw
fsubr
or
xor
insb
sbb
xchg
mov
mov
inc
xchg
mov
stos
cmp
sti
pop
rcr
not
xlat
xor
ds
loopne
add
movsl
lds
in
mov
pusha
lds
rcrl
push
sbb
data16
xorb
pop
xchg
cs
pushf
imulb
scas
mov
jmp
mov
push
fsubrl
mov
adc
mov
fisttpl
rorb
out
xchg
daa
enter
icebp
xor
inc
enter
ss
and
pop
fcmovnu
pop
xchg
jp
xchg
sub
or
or
adc
in
push
scas
jp
push
shll
push
push
add
imul
add
and
aad
in
xchg
pop
and
and
push
cltd
xchg
data16
jmp
rolb
in
or
movsb
jno
rol
outsl
cmp
sbb
rcl
popa
mov
dec
cli
or
cmpsb
dec
and
mov
daa
xor
push
add
adc
mov
sbb
inc
mov
inc
sbb
jo
add
xor
ret
addb
movsl
mov
mov
data16
inc
lods
xchg
mov
dec
popa
ja
lcall
adc
cld
sbb
cmpsl
shr
es
mov
xchg
mov
cmc
sbb
jle
cmc
decl
cmp
popa
cmpsb
in
sub
pop
mov
pmaddwd
fdivp
repnz
sub
xor
sbb
ds
mov
xchg
adc
fildll
xchg
jg
imul
cmp
mov
iret
hlt
data16
dec
xchg
xchg
mov
rcll
fdivrs
adc
mov
negb
add
cmc
cmp
mov
faddp
fisttps
in
pop
jns
popa
inc
add
pop
test
fdivrl
cmp
mov
mov
push
inc
das
out
jne
imul
test
mov
pusha
cmc
in
sbb
test
push
add
inc
ja
inc
stos
pop
gs
jl
addr16
shll
jno
mov
add
ret
ret
aaa
sahf
outsl
out
mov
dec
iret
bound
inc
loopne
mov
inc
inc
sbb
or
popa
inc
and
sbb
inc
pop
sbb
inc
mov
call
test
ret
popa
fs
lods
flds
jno
inc
dec
insb
mov
mov
cld
mov
pop
repnz
pop
clc
imul
popa
lret
lcall
push
int3
push
data16
scas
mov
push
push
xchg
push
in
movb
add
mov
push
and
lret
jmp
push
js
dec
add
imul
popf
shll
scas
decl
rcl
add
sbb
out
mov
es
mov
xor
daa
jl
cld
imul
cmp
in
movsl
lret
mov
sbb
call
or
adc
mov
mov
dec
fwait
mov
leave
nop
aad
inc
lea
push
xlat
pop
push
cmp
mov
push
jp
dec
int
outsl
mov
dec
push
clc
jnp
fwait
idivl
les
and
push
jb
pop
lahf
push
inc
xchg
mov
gs
test
push
cmp
and
dec
aad
pop
cmpsb
imul
jl
fldl
inc
pusha
rcl
pop
mov
lds
xchg
sbb
cld
sti
and
dec
mov
call
js
push
jb
pop
popa
popf
adcb
shl
inc
mov
lds
pop
push
scas
mov
leave
aad
aad
rcrl
bound
ljmp
negl
test
cmp
jbe
leave
shlb
rorl
jge
lahf
scas
dec
cmp
out
xor
sbb
push
cli
mov
push
inc
mov
clc
dec
inc
jb
push
push
lods
sahf
out
aas
aas
sub
pop
rcrl
pop
lcall
cld
xor
push
and
adcl
gs
and
repz
fmuls
out
and
out
fistpl
xor
or
cmp
inc
cmp
mov
into
cmpsb
pusha
aam
pop
pop
mov
fistpll
inc
mov
shlb
mov
sbb
adc
lret
dec
into
push
lret
scas
pop
lods
mov
mov
push
sqrtps
sbb
sbb
iret
sahf
cli
in
jbe
xchg
mov
jo
mov
rcll
mov
sub
mov
mov
xor
push
cli
enter
dec
jnp
inc
fnsave
xor
inc
negl
and
loop
push
sbb
and
test
cmp
mov
ljmp
cmp
push
or
or
rcrb
mov
mov
cld
jmp
or
mov
xor
imul
cmpsl
mov
adc
jno
cli
pop
xchg
mov
or
sub
icebp
dec
mov
jmp
mov
cld
jle
or
mov
sbb
pop
dec
fsts
push
add
pop
mov
jge
adc
jmp
adc
loope
xor
in
in
aas
loope
sub
stos
adc
cmp
stos
add
insl
mov
mov
cli
in
out
mov
out
push
int
mov
pop
test
stos
adc
mov
mov
pop
adc
mov
sub
stc
xor
pop
xchg
in
add
and
daa
sbb
ljmp
ret
pop
test
dec
and
push
push
data16
push
dec
xor
in
push
cmpb
jg
xchg
stos
jle
push
mov
xor
push
cmpsl
and
mov
and
jb
cmp
mov
scas
popf
sbb
fyl2xp1
nop
stos
adc
add
dec
pop
cmpl
mov
mov
mov
sbb
xchg
pop
add
out
adc
gs
lahf
cmpsb
dec
scas
pop
jmp
aaa
scas
mov
ljmp
jge
inc
aas
mov
xorl
inc
cmp
not
jp
pop
sub
pop
sti
imul
inc
inc
dec
dec
and
les
outsl
ret
mov
sbb
sbb
dec
ljmp
out
adc
scas
cmp
aaa
cld
sub
inc
xchg
repnz
pop
or
cmp
xor
xchg
xchg
dec
into
out
pop
out
cmp
test
sbb
inc
jmp
cmp
shrl
ficoml
mov
adc
push
pushw
jge
sub
lock
xor
or
or
xchg
scas
ja
fldt
push
pop
xchg
xlat
pop
insb
sub
push
inc
add
lock
call
stc
data16
xchg
or
testl
sbb
sub
push
jle
lret
popa
sub
lods
pop
lods
push
daa
fimull
add
mov
adc
mov
sbb
add
add
add
lahf
rorl
pushw
daa
sub
xchg
mov
pop
add
les
idivb
xchg
cmp
subl
lea
add
iret
xchg
mov
les
ljmp
inc
insl
xchg
and
lret
sbb
pop
dec
sub
repz
inc
add
ds
mov
mov
insl
imul
mov
inc
dec
xor
aas
insb
fidivrl
sub
idivl
test
adc
add
xchg
sbb
push
inc
sub
int3
dec
xor
sub
and
adc
mov
mov
xor
inc
insb
out
jb
stos
enter
enter
and
test
cs
mov
scas
lahf
push
testb
bound
push
scas
repnz
test
call
leave
in
cli
mov
jmp
gs
popa
xor
cmp
dec
cmpsb
out
jne
jo
or
mov
inc
jnp
adc
push
jecxz
or
pusha
sbb
mov
sub
mov
xor
push
fildl
and
push
or
lcall
jmp
pushf
leave
sbb
cmpl
xchg
push
ret
je
mov
les
dec
sbb
scas
icebp
mov
or
cwtl
daa
inc
mov
mov
mov
call
xor
ljmp
cs
sbb
pop
fisttps
ljmp
lret
sub
orl
sbb
push
push
inc
jmp
sub
mov
sar
mov
inc
rorl
imul
cli
adc
push
pop
or
fs
jp
inc
jmp
pop
xlat
mov
lods
pop
aaa
pop
stc
sbb
mov
jecxz
xor
mov
int3
or
shl
push
jbe
push
shl
mov
data16
clc
popf
mov
repz
das
call
mov
inc
lret
outsb
or
scas
sub
fidivl
aaa
push
mov
fwait
push
mov
or
mov
imulb
cli
push
push
arpl
in
imul
push
mov
aad
cmp
mov
push
add
adc
pushf
cmp
cmc
mov
das
movsb
cmc
imul
lods
outsl
gs
cmp
ljmp
ds
nop
mov
pop
out
negb
lret
and
mov
or
out
hlt
stc
adc
push
mov
add
add
js
repz
mov
icebp
and
or
and
lods
jno
stos
ret
fidivs
loope
in
cmp
fldcw
sbb
scas
in
mov
jno
cli
jle
xchg
xor
ljmp
pop
test
sbb
test
xor
inc
das
int
sbb
ja
adc
jb
adc
shlb
dec
in
jl
sbb
ds
pusha
test
shl
leave
sbb
fcomps
in
movsb
jne
imul
ficompl
xor
push
pop
add
sbb
insb
sbb
inc
push
nop
jmp
hlt
ja
pop
sbb
and
dec
xchg
lret
std
cs
or
xor
jmp
cmp
mov
fcom
ret
shrb
sbb
and
jecxz
add
daa
imul
sbb
mov
ljmp
dec
or
inc
or
imul
mov
jmp
icebp
jb
repz
dec
lahf
fsubr
aas
mov
test
fs
out
or
push
rcr
out
iret
js
jo
pop
es
push
lahf
arpl
sub
cmp
lock
sbb
dec
push
cmp
addr16
inc
int
mov
cmp
std
sbb
pop
scas
cmp
add
push
inc
rclb
jb
mov
mov
jb
jno
mov
rcpps
xor
repnz
sbb
and
dec
test
addr16
cmp
nop
jbe
jbe
dec
aad
sub
testl
xor
insl
inc
or
inc
andl
loop
lret
or
adc
inc
enter
lret
jne
sbb
sub
xchg
lock
lea
lods
pop
lahf
out
movsb
js
pop
jle
xlat
or
gs
adc
iretw
push
adc
fld
lods
outsl
sbbb
and
dec
add
and
imul
out
mov
xor
xchg
xor
cmp
dec
out
or
pop
jecxz
in
xchg
cmpl
loope
into
or
jbe
fstpl
imull
loope
push
sbb
repz
inc
int3
int
stos
outsl
inc
not
sub
sub
jge
inc
jns
mov
pop
sbb
and
and
jl
popl
test
fsubr
mov
mov
xor
cltd
mov
lret
xchg
js
mov
sub
mov
sbb
pop
pop
loopne
ret
decb
mov
mov
and
outsb
cmp
arpl
lds
shlb
sbb
mov
sbb
xor
mov
inc
popf
inc
lock
call
mov
imul
out
mov
ror
xchg
push
push
notl
or
mov
mov
mov
xchg
aad
mov
mov
sub
ret
pop
cmp
add
jne
out
repz
jmp
lahf
mov
call
push
ja
gs
push
dec
push
cmpl
xchg
das
pop
or
daa
push
mov
sub
roll
shlb
int3
pop
shlb
jle
in
stc
cmp
movsl
push
xchg
mov
adc
das
fwait
add
or
xchg
sub
cmp
mov
rolb
jns
cmpsl
test
pop
scas
cmp
and
adc
dec
shl
out
cwtl
or
out
loop
js
inc
cmp
adc
aaa
xor
push
sarl
sub
incb
jo
inc
rsm
mov
and
test
sub
out
add
fadd
push
popa
iret
mov
mov
add
mov
mov
cwtl
xchg
add
xchg
rol
out
fimull
ficompl
push
fsubrs
ss
in
outsl
xchg
and
fstps
insl
push
rolb
mov
sbb
jo
les
das
lock
out
lcall
addb
add
add
adc
std
out
lods
add
shrl
sbb
data16
imul
add
mov
inc
mov
adc
mov
mov
int3
sahf
and
or
or
inc
pushl
orb
pop
scas
aam
out
dec
lret
in
mov
into
or
xor
add
jns
jbe
je
jmp
inc
pop
pop
pusha
cli
jne
adc
lds
push
mov
lock
addr16
popf
sub
xor
pop
mov
repz
lea
lcall
add
or
xor
fwait
rep
fadds
sbb
int
shrb
aam
sub
movsl
cmp
jnp
stc
lods
cmp
jbe
test
xor
mov
xor
cmp
lea
imul
mov
outsb
jno
negb
int3
add
les
jmp
add
sbb
dec
lret
inc
cmpsb
push
rcrl
subb
sbb
adc
and
insl
push
inc
daa
fbld
mov
daa
test
mov
in
sbbb
sbb
rol
fmull
movsl
sub
mov
jle
mov
fisttpl
xchg
adc
divb
xchg
rorb
inc
dec
int
xchg
add
inc
pop
pop
inc
dec
fprem
cli
sbb
pop
decb
dec
lret
addr16
xchg
sbb
test
fdivs
je
inc
pop
sub
push
and
sub
sbb
jno
mov
hlt
stc
lahf
mov
push
out
out
shrb
adc
add
add
mov
mov
adc
add
mov
loop
mov
int
pop
mov
mov
sub
sub
cmp
xchg
and
and
mov
jns
or
or
pushf
testl
adc
mov
daa
into
shrl
mov
nop
and
es
and
call
out
push
ficoml
cli
adc
stos
inc
pop
jo
sub
jg
repnz
jne
push
aad
nop
out
pop
sar
mov
bound
adc
pop
mov
hlt
mov
call
stc
push
add
sahf
call
and
int3
mov
mov
rorl
cmpsl
subb
jae
jae
push
lahf
add
jno
mov
sbb
adc
sbb
jp
nop
cltd
pop
inc
push
cs
mov
test
add
enter
jbe
mov
push
xor
sub
ret
sbb
les
mov
addl
pop
pusha
mov
jo
push
popf
jge
sbb
inc
movsl
lea
int
mov
bound
xor
jmp
xchg
jae
enter
mov
add
bnd
sub
xchg
lea
add
xchg
jecxz
mov
xchg
cli
es
mov
ret
add
orl
sahf
addb
loopne
jge
pop
cmpsb
pop
rcrl
sub
add
xor
sbb
pop
inc
mov
nop
fcompl
mov
inc
xor
stos
xchg
push
add
pop
cmp
mov
inc
imul
lds
dec
jp
int
rcl
hlt
add
push
and
repnz
fcmovu
pop
cwtl
jle
pusha
filds
cmp
lds
arpl
ljmp
adc
sbbb
nop
xor
aaa
lock
and
rcrb
jo
dec
lods
xor
lea
dec
mov
inc
pop
outsb
pushf
cmp
mov
fisubl
bound
push
fdivrl
mov
mov
xchg
mov
add
sbb
loop
add
xor
insl
sub
adc
cmpb
cs
dec
lret
aas
stc
arpl
pop
ljmp
jb
push
pop
lods
aas
test
inc
inc
rclw
jbe
mov
test
xchg
in
shll
jecxz
mul
int
push
fs
and
mov
mov
stc
mov
in
jge
cli
sbb
mov
push
out
data16
jne
cmp
mov
cld
jnp
mov
push
push
adc
adc
and
jecxz
mov
cs
or
push
mov
js
test
inc
divl
pushl
aaa
mov
adc
jmp
or
rol
cltd
or
and
js
sub
dec
add
inc
push
stos
xor
mov
xchg
jns
cmp
inc
jl
mov
test
sti
mov
xor
push
sbb
or
jecxz
addr16
jae
jbe
and
push
push
cmp
ud1
xchg
sbbb
xchg
lcall
xchg
xor
dec
cmpl
push
subl
insl
jmp
daa
sub
imul
icebp
xor
push
mov
js
mov
push
lea
add
movsl
sbb
fisttps
mov
push
and
jg
dec
mov
sahf
pop
inc
cmp
push
shl
stos
and
ljmp
push
ss
je
fnsave
cwtl
sub
test
mov
mov
cmp
and
or
repz
xlat
inc
mov
adc
pop
mov
popa
aaa
mov
dec
test
addb
push
mov
lahf
xor
dec
rorl
outsb
sub
fdivr
inc
outsb
xor
sub
xor
xchg
push
inc
mov
int3
xor
jnp
ljmp
insb
push
pop
fs
rolb
pushf
inc
in
out
cmp
sub
cmp
rcll
xchg
inc
popf
lcall
adcl
mov
push
fcoml
push
fiadds
stos
sub
sub
testb
ret
mov
in
mov
imul
push
inc
sub
xchg
xor
loop
mov
mov
jo
or
sub
inc
call
imul
inc
repz
pop
push
imul
into
xchg
in
adc
sub
je
and
jbe
xor
sub
mov
lret
or
adc
or
mov
mov
loope
insb
into
std
mov
sub
fldcw
xor
cli
fcmovnu
ja
and
int3
adc
adc
push
nop
test
sub
cmp
push
inc
sub
pop
insb
inc
cld
int
cmpsb
sbb
cmpl
cmp
xchg
cmovo
dec
mov
inc
jmp
xchg
mov
mov
js
mov
xchg
xor
jb
inc
pop
xlat
sahf
mov
pop
in
fnstsw
or
push
inc
or
add
enter
mov
insb
in
lock
cmp
cwtl
sub
xor
xor
mov
cmp
ja
cmc
xchg
and
cwtl
movsb
mov
aam
mov
xor
mov
sub
push
iret
jo
mov
and
mov
push
sub
and
and
mov
in
push
fistpll
mov
inc
or
lahf
testl
lahf
call
cmc
lock
pop
mov
push
fdivrp
sub
cmpsl
and
insb
imul
int3
subl
pushf
loop
inc
mov
mov
push
jb
rcrb
xor
pop
sbb
push
sbb
loop
rcll
int3
push
loop
fstpl
push
jg
ds
or
adc
dec
in
xchg
out
outsb
lods
xor
fxch
xor
call
ret
mov
insl
pop
aas
aaa
rorb
mov
xlat
push
mov
sarl
lods
movsb
add
std
mov
cmp
pop
jns
lock
sub
pop
pop
imul
int3
aad
es
nop
xor
or
add
lds
sbb
out
das
ja
insb
mov
jns
xchg
push
loopne
sti
movsl
jns
cld
scas
fisubl
cltd
mov
pop
sub
xchg
clc
push
in
scas
xchg
lret
xchg
out
cvtps2pd
insb
pusha
xlat
xchg
repnz
inc
fimull
xchg
and
testb
mov
adc
mov
in
out
dec
mov
inc
repz
cmp
push
xchg
fdivp
mov
inc
sbb
hlt
xor
fsts
lods
leave
fmuls
mov
sub
stos
shl
push
out
or
inc
je
ja
mov
jne
push
aam
jae
or
les
xor
insl
daa
fsubl
repz
lahf
xor
mov
dec
testb
jl
les
or
add
sbbb
sbb
cmpsb
xor
in
add
mov
xor
pop
out
ds
int
jl
adc
shrb
lret
clc
lea
cmpsb
push
or
sub
fwait
imul
ljmp
mov
mov
scas
pop
dec
push
call
sub
stos
and
aaa
pop
xchg
aam
mov
xor
xchg
sbb
stos
inc
out
or
pushf
add
mov
xchg
nop
mov
inc
sub
dec
mov
pusha
pop
or
xchg
add
inc
cltd
add
out
lret
imul
subb
ss
daa
aas
repz
mov
pop
ror
xor
mov
mov
cwtl
adc
xadd
mov
movsl
fidivrl
call
mul
int3
repnz
aaa
ss
add
movb
jb
jp
mov
fcomp
add
xchg
ret
fwait
sub
mov
sub
ror
mov
xchg
or
in
lcall
arpl
xlat
inc
and
nop
gs
xor
mov
pop
sub
mov
push
icebp
xchg
push
jb
pop
and
jnp
dec
inc
lock
jnp
in
mov
push
mov
mov
mov
mov
mov
jno
leave
dec
jne
out
imul
out
fisubs
imul
jle
popf
lcall
xchg
xchg
mov
js
pop
je
pop
sbb
cwtl
popa
push
xor
cmp
les
clc
mov
pop
test
dec
fwait
ret
or
mov
iret
and
push
cmpsl
ret
sub
test
imul
push
jno
int3
loopne
daa
add
push
jbe,pt
leave
sub
add
in
dec
lods
repz
mov
or
jo
outsb
lds
bound
push
daa
pop
jns
pop
lret
testl
xchg
stc
cmp
out
in
out
sti
inc
inc
jb
ss
dec
xor
cmpb
scas
int3
popf
mov
ret
mov
icebp
mov
cmpsl
out
jae
xchg
push
mov
ficoml
orb
push
movntps
fwait
sahf
pop
sbb
xchg
pop
outsl
std
dec
out
enter
push
shlb
call
rorb
popa
sub
ror
cmp
mov
iret
ret
std
add
scas
out
and
hlt
inc
lret
cmp
decl
dec
pushf
idiv
and
popf
or
imul
mov
mov
out
xlat
ret
and
lcall
mov
xor
js
test
lea
clc
sub
fs
icebp
cmpsb
mov
je
in
jmp
push
pusha
iret
pop
popl
ret
aas
xchg
mov
cli
or
out
sysenter
push
je
mov
insb
movsb
out
pop
pop
inc
enter
in
xchg
sub
test
sub
jmp
add
fcmove
lds
test
loopne
cmp
mov
cwtl
enter
mov
lret
icebp
push
fs
xor
jne
and
int
pop
cld
mov
push
xor
ret
mov
shll
jbe
adc
jmp
mov
sbb
mov
fildll
cmpsb
ret
and
jle
lock
in
cltd
adc
stos
xchg
pop
jmp
mov
insl
ss
sub
jne
sub
push
jno
cs
rcl
ficoms
into
jne
mov
mov
mov
std
sub
mov
xchg
xor
cmpsl
mov
xor
lret
bound
cwtl
jp
pop
inc
or
movl
hlt
pop
and
out
push
rorl
lock
xchg
mov
lds
lret
cs
jge
lods
xchg
adc
fucomip
adc
cwtl
sub
dec
xchg
jns
pushf
leave
js
fistl
rolb
xor
comiss
lcall
jmp
aaa
dec
cmpsl
fmull
mov
mov
add
popl
ljmp
ss
add
push
pop
pop
jp
or
adc
lret
test
pop
xor
inc
sub
adc
pop
xor
pop
leave
iret
je
pop
dec
adcb
jbe
iret
cmpsb
in
add
leave
cmpsl
test
in
sub
adc
push
mov
mov
jg
sti
and
fdivs
js
orb
test
add
jge
loope
mov
lret
mov
push
sub
pop
push
aas
cmpsb
xlat
sbb
andb
sub
fndisi(8087
jg
es
sbb
loopew,pt
dec
inc
mov
clc
pushl
imul
add
pushf
add
mov
int3
sub
iret
xchg
into
or
je
mov
faddl
jg
add
inc
lods
dec
adc
mov
pop
aam
or
ljmp
cwtl
lea
sub
inc
xor
shl
sbb
or
divl
je
daa
lret
scas
cmp
or
pop
inc
xor
jnp
ljmp
pop
xor
les
test
stos
push
pop
mov
mov
add
sbb
mov
cld
xor
mov
add
sbb
iret
cmp
ret
idivb
sbb
nop
jbe
inc
fdivs
push
push
inc
imul
inc
pop
imul
jnp
testl
xor
xchg
es
jmp
shl
cld
push
xchg
mov
mov
test
sbb
das
pop
jle
loop
push
pop
jecxz
fimuls
lret
xchg
stc
les
pop
jbe
repnz
nop
or
dec
mov
sbb
das
clc
movsl
in
lods
das
int3
pushf
js
dec
adc
mov
xchg
or
adc
fcmovu
ret
mov
mov
and
out
neg
inc
pop
cs
leave
xor
fstp
dec
leave
pop
xchg
dec
insb
pop
clc
mov
jge
inc
aad
xorb
pop
cmp
in
ja
sti
lods
jne
sub
das
push
or
imul
orb
mov
and
inc
outsl
mov
cmp
or
pop
fcoml
push
jb
adc
aad
adc
fbstp
shl
xlat
xlat
xchg
adc
dec
nop
out
mov
mov
scas
daa
andb
jnp
into
ret
xchg
cmp
inc
call
cmpsl
daa
jno
fwait
xor
aaa
sbb
out
mov
cmp
push
adc
lahf
inc
xor
rolb
inc
xor
push
push
mov
pop
repz
inc
xchg
dec
inc
loope
mov
insb
push
bound
pusha
dec
rclb
jecxz
inc
jns
sbb
sub
scas
sub
xor
rolb
movsl
mov
cmp
push
and
movsl
jecxz
push
jg
mov
cmp
hlt
sti
pop
push
iret
cmp
xor
xchg
pop
jo
or
push
mov
sub
rclb
mov
iret
sub
je
stos
aad
jbe
jmp
push
and
mov
cmp
scas
sbb
test
call
dec
stos
shrb
addr16
sahf
mov
push
int3
push
push
rolb
sbb
insl
sbb
or
jecxz
lock
mov
jo
adcl
pop
xchg
lahf
mov
lcall
call
lea
rorl
fdivs
repz
inc
jge
shlb
insb
and
jno
xor
add
out
mov
rcrb
jmp
stos
les
sub
xchg
push
mov
add
jb
iret
rolb
cmpsl
les
jae
jno
inc
es
shr
xor
test
inc
addl
out
mov
mov
sbb
pop
cmpsl
leave
lock
ljmp
mov
cwtl
mov
cmpsb
arpl
mov
dec
lcall
push
cmc
mov
int
xor
jg
jg
out
in
mov
jp
mov
into
pop
pop
clc
push
lahf
enter
cwtl
cmp
iret
adc
scas
js
cmpb
iret
cli
movsb
insl
push
add
out
cmp
dec
jmp
pushf
sbb
jl
loopne
stc
add
cmp
daa
mov
addr16
call
lcall
pusha
fwait
cmpsl
mov
jnp
lret
addr16
xorb
inc
out
ret
and
dec
or
jae
test
mov
jle
xchg
int3
xchg
cld
jg
iret
add
mov
mov
adc
or
popl
mov
xor
sub
lcall
je
jg
xor
mov
in
push
cmp
int
or
test
pop
push
gs
scas
sbb
mov
popa
jl
pusha
cmpl
jge
mov
inc
cld
ljmp
or
imul
jns
lcall
pop
es
add
jle
xchg
into
mov
es
bound
fwait
sbb
sub
pusha
mov
leave
push
push
sbb
loopne
in
add
and
mov
xlat
sti
mov
ja
and
sub
das
jge
xchg
mov
cwtl
and
and
stos
and
mov
leave
mov
shlb
add
xchg
dec
add
pop
dec
push
pop
icebp
rcll
divb
repnz
sbb
icebp
std
adc
jl
dec
shrl
ds
mov
data16
loopne
popf
out
mov
sub
xchg
xor
popa
push
inc
lcall
add
sbb
lds
push
arpl
cli
test
xchg
dec
stos
xor
mov
push
adc
dec
jmp
xor
test
inc
ret
out
dec
jmp
mov
jnp
xor
xchg
add
pop
icebp
in
call
xor
loope
and
bound
iret
pusha
mov
stos
aas
xchg
add
imul
push
push
pop
jg
stc
push
leave
fs
cmp
push
cmc
sub
jecxz
mov
fldcw
jb
mov
cmpsb
ja
xor
xor
cmp
pop
stc
inc
cld
mov
int3
cmp
pop
scas
dec
push
fldt
cmp
add
cmp
mov
cmc
jge
dec
es
cmpsl
mov
add
mov
fsts
push
push
sub
mov
fucomi
mov
pop
sbb
out
lods
sahf
jae
cmp
cmp
insb
xchg
cmpl
mov
push
pop
pop
js
enter
add
shrb
push
pop
jp
pop
cwtl
sub
dec
mov
inc
daa
xor
pop
fdivrl
scas
sub
sahf
lods
jnp
push
subb
mov
cmp
xchg
dec
pop
mov
cmp
enter
adc
inc
pushf
mov
out
repz
aam
mov
cmp
add
pop
xlat
inc
jae
xchg
xchg
call
pop
pop
ja
xor
enter
popa
mov
sbb
add
cmc
cmp
mov
inc
subb
andb
pop
adcl
ds
sub
dec
outsl
sub
pop
outsb
sub
ret
sub
lods
dec
push
mov
sub
push
loopne
push
test
pop
pop
mov
aaa
inc
rorl
inc
jmp
jns
mov
bound
xor
shll
scas
dec
cld
push
add
imul
add
aad
imul
xchg
sbb
jbe
xchg
push
dec
in
push
pop
js
nop
and
mov
xor
and
push
pop
xor
pop
jecxz
adc
push
test
or
or
fisttpl
add
mov
nop
jl
std
push
lret
lods
xor
add
inc
sahf
ret
push
bnd
stos
xor
mov
int
mov
shll
push
clc
xor
jbe
daa
aad
and
enter
out
mov
xor
mov
addb
sbb
sbb
xchg
loop
shll
mov
inc
les
mov
scas
pop
pushf
rcrl
cld
test
mov
fistl
js
jp
out
sub
mov
repz
cld
mov
dec
cmpsl
push
fsubs
inc
pop
cmp
in
sbb
jmp
add
shlb
imul
cmp
inc
jmp
and
stos
cmpsl
shlb
mov
fistps
mov
mov
push
sub
psubusb
mov
aam
cmp
pop
push
mov
mov
mov
or
sub
in
outsl
dec
push
sub
pop
ljmp
in
imull
sbb
fists
out
add
stc
or
mov
rol
sti
xchg
in
add
lcall
ret
jg
std
and
jecxz
loop
inc
icebp
dec
jmp
xor
lods
and
xor
pop
lahf
add
push
add
in
add
jno
mov
imul
movsb
into
xor
jns
sbb
mov
insb
loope
sbb
faddl
rorl
xor
sbb
mov
jno
inc
mov
ss
mov
mov
cmp
mov
out
movsl
addr16
testb
fnstsw
cmc
add
inc
xchg
scas
or
mov
sub
or
ror
icebp
adc
pop
jnp
mov
jns
mov
lcall
mov
sti
sti
mov
aad
lock
adcl
push
sahf
adc
jo
cmp
cmpsl
mov
pop
add
lahf
mov
rcr
xor
sbb
mov
fiaddl
sbb
xchg
sub
adc
pop
adc
cmpsl
dec
or
pop
sub
sub
repz
mov
mov
lock
mov
cld
incb
aas
nop
or
popf
sub
xchg
mov
inc
xor
ljmp
test
scas
or
adc
mov
dec
inc
aas
insl
or
dec
lds
ja
repnz
popa
dec
pushf
cmp
arpl
sbb
jle
movsb
arpl
dec
cwtl
stos
ljmp
lcall
sbb
xchg
sar
sub
or
mul
fimuls
es
and
mov
mov
and
out
sub
mov
sbbl
scas
mov
or
adc
xor
inc
imul
adc
ficoml
mov
mov
sbb
xor
add
arpl
or
sub
dec
outsb
jle
cmpb
sbb
xchg
jo
aaa
xlat
xchg
mov
or
ret
popf
ja
jecxz
movb
je
lods
aam
cld
sub
sbb
sarl
pop
mov
data16
xchg
mov
es
mov
sbb
scas
insl
jg
shll
into
leave
icebp
jmp
push
jne
mov
mov
icebp
mov
js
dec
decb
repz
inc
push
jle
xchg
int
sub
push
mov
xchg
hlt
inc
or
lret
jecxz
ret
out
jmp
sbb
mov
push
adc
int
sub
cvtdq2ps
mov
lods
xlat
popl
fs
iret
imul
cmp
dec
cmpsl
inc
adc
push
inc
scas
xor
int3
enter
fidivrs
cmpsb
leave
adc
lcall
mov
cli
pop
imul
int
xchg
or
rorb
cmp
sbbb
and
cltd
mov
mov
jnp
cmc
mov
adc
mov
movsl
cmpsb
push
lock
jb
ret
je
mov
xor
scas
and
cmp
mov
or
inc
jmp
pop
out
dec
jb
or
and
faddl
ja
das
lods
lock
stos
es
aas
dec
push
cmp
ja
outsl
xchg
inc
daa
xchg
mov
jo
mov
lds
add
pop
aam
cmp
jo
std
dec
inc
in
out
sub
ret
fs
sbb
push
repz
cmp
cli
dec
cmc
push
aam
push
cmp
jbe
pushf
xor
fdivl
push
mov
mov
jmp
jecxz
pop
dec
mov
orl
dec
mov
jg
shrl
outsb
sub
jns
shll
nop
insl
jo
ja
test
sub
imul
in
shll
scas
dec
jl
dec
cmp
cld
fstpt
nop
sbb
push
mov
lods
rcll
cs
cwtl
shrl
add
fisubrl
jae
mov
push
aas
mov
mov
test
mov
incl
clc
push
ss
ficoml
inc
xchg
movsl
push
mov
mov
nop
ss
lahf
jecxz
or
fwait
mov
ret
cmc
cmp
inc
mov
arpl
jmp
sbb
mov
adc
and
mov
lea
inc
cmpsb
sub
push
xor
or
test
aam
adc
pop
popf
sub
das
inc
outsl
loop
mov
js
repz
jl
pop
ficomps
add
sub
ret
stos
push
js
or
jno
jnp
and
ror
fdivr
jnp
imul
adc
subb
ret
pop
and
xchg
iret
in
mov
mov
notl
and
inc
jne
jp
or
enter
pop
push
sbb
mov
scas
jg
sub
add
inc
pop
inc
add
nop
sar
test
xchg
enter
cmp
sub
lds
mov
or
mov
iret
jmp
mov
sbb
xor
lds
xchg
cmpsl
pop
fiaddl
xchg
arpl
adc
xchg
push
enter
mov
insl
call
fwait
sti
mov
cmp
mov
ret
leave
js
xor
pop
and
or
mov
inc
mov
add
mov
loope
imul
adc
fmull
push
add
mov
js
shlb
mov
aad
add
imul
add
mov
dec
outsb
test
push
push
hlt
mov
fwait
inc
in
cmc
loopne
adc
add
sub
dec
test
or
and
mov
cmp
cwtl
pop
das
gs
call
cli
ret
shll
mov
or
aaa
xor
xorl
dec
cmp
sub
lock
addr16
scas
xchg
inc
shrb
push
jno
das
ret
pop
cld
dec
xlat
cli
adc
mov
out
fsubrs
testb
mov
pop
arpl
fxch
jle
adc
stos
or
push
mov
add
mov
out
outsb
push
mov
std
pop
mov
adc
scas
jg
jb
mov
loope
test
xchg
jmp
jle
popa
cmp
pop
gs
jno
push
sub
cmc
pop
mov
in
dec
and
push
shr
in
xlat
inc
push
jmp
cmp
inc
sub
xadd
pop
jne
add
shl
dec
mov
shl
and
shll
aad
or
sbb
mov
popa
cmc
clc
fidivrl
cmp
jno
iret
aad
outsb
mov
dec
ret
lret
cmpl
sbb
adc
aaa
ret
iret
dec
xchg
inc
push
fwait
cld
cwtl
mov
mov
push
clc
mov
addr16
or
xor
aaa
mov
ljmp
inc
and
lret
aaa
adc
xchg
stos
hlt
sbbl
mov
mov
sub
ret
push
dec
popa
jmp
loopne
ja
or
pop
insl
xchg
sub
mov
not
mov
xchg
dec
xor
mov
in
fwait
jmp
or
cltd
in
dec
and
mov
xor
ficoml
fcomps
repz
ds
xchg
cld
insb
sbb
mov
shlb
movsb
mov
cld
in
loopne
fldl
popa
insb
xchg
pop
inc
sub
icebp
insl
mov
stos
int
or
xor
xchg
ljmp
inc
imul
or
push
insb
xchg
xor
mov
mov
aaa
dec
je
addb
push
pop
mov
jnp
aam
cmp
loope
or
repnz
iret
test
adc
rorl
sub
add
imul
xchg
inc
push
test
mov
push
mov
das
jle
or
push
scas
push
pop
rcrb
xorb
stos
sub
adc
pop
lock
mov
or
push
xor
outsb
negb
les
cmp
js
mov
or
lea
push
mov
js
shll
mov
in
aam
jmp
stos
std
sahf
mov
xchg
mov
and
lods
insb
es
mov
push
sbb
pop
xor
inc
mov
call
in
in
out
pop
adcb
pusha
xchg
jg
lds
mov
das
sub
cltd
addr16
out
aas
ja
and
dec
ficoms
push
and
dec
mov
mov
pushf
cmc
arpl
sub
push
xchg
fisttpl
jo
lcall
popf
cmp
cmpb
xchg
adc
xchg
sub
adcl
popf
lock
std
mov
mov
lods
dec
xlat
adc
xlat
and
mov
aad
sbb
arpl
popa
push
fwait
aas
bound
xchg
xor
xchg
mov
scas
iret
out
sbb
imul
pop
mov
pop
loopne
imul
in
les
cwtl
pop
inc
or
mov
mov
aaa
mov
stos
les
and
ret
jnp
or
inc
mov
and
push
stos
push
add
aas
imul
cwtl
cmp
movsl
cmp
ljmp
sbb
and
sti
mov
iret
test
cwtl
push
push
cmpsl
enter
sti
pop
test
lret
rorb
push
iret
int
sub
ja
cmp
mov
out
cltd
arpl
aam
aaa
mov
fisubs
sbbb
pushf
adc
out
jo
vphaddudq
or
cs
iret
test
mov
out
inc
jmp
mov
in
dec
inc
mov
xchg
push
bound
and
nop
sar
mov
xor
dec
pop
cld
dec
pop
dec
jne
mov
imul
lods
icebp
insb
scas
xor
push
stos
mov
sub
adc
xchg
push
cwtl
gs
or
mov
push
dec
xchg
sub
ja
xor
adc
shlb
das
xor
dec
mov
push
jg
jne
sub
dec
ss
pop
lcall
xor
jnp
dec
xchg
pop
fisubl
add
call
jo
lods
rolb
icebp
pop
mov
addb
stc
dec
mov
int3
lods
sub
call
mov
scas
xchg
loope
in
repnz
ret
pusha
mov
lret
sub
clc
mov
sbb
adc
jns
lahf
adc
mov
sbb
jg
sub
insb
dec
mov
imul
shrb
out
ret
sbb
negl
out
pusha
lods
push
xor
sbb
pop
movsl
pop
mov
or
les
or
sub
push
lret
in
movsb
scas
iret
fildll
js
cwtl
xchg
ja
sub
jle
les
aaa
out
dec
add
sbb
add
clc
adc
jo
push
dec
insl
mov
sub
lahf
popf
iret
loopne
ss
les
mov
mov
mov
xchg
ror
push
cmp
mov
push
add
rcr
leave
dec
push
ja
scas
pop
jmp
int
sub
inc
mov
fisttps
lock
jmp
lret
mov
mov
fidivs
xchg
cli
bound
enter
adc
faddp
mov
mov
pop
push
or
dec
inc
cmp
pop
cmp
lcall
sbb
xorl
cmp
lcall
dec
xchg
lds
shrl
fnsave
add
stos
pop
andb
cmc
test
jle
sbb
mov
cmp
stos
pop
subb
mov
mov
and
xor
sub
jle
sub
inc
mov
mov
divps
xor
insl
ljmp
pop
pop
mov
das
pop
outsb
inc
xchg
aas
and
jmp
xlat
jecxz
jae
fnstsw
in
xor
fcoms
fidivl
gs
and
rcl
cmpsl
push
inc
push
int
pop
jle
push
or
or
lds
add
repnz
into
imull
and
inc
mov
add
add
nop
dec
mov
inc
pop
andl
ss
repnz
aam
mov
push
cmpsb
sbb
fldl
dec
in
lahf
sub
mov
andps
cmp
fcompl
movsb
lahf
or
xchg
aas
xchg
cmp
pop
add
xor
je
out
mov
xchg
fstps
push
fs
cmpl
jmp
xchg
ss
jmp
cmp
cwtl
cmp
sub
fs
decl
sti
sahf
xor
push
xchg
pop
add
cmp
jo
cmc
pop
xchg
sbb
add
rcll
pop
mov
adc
sbb
shll
clc
loop
popa
ficomps
nop
fcomps
into
daa
roll
enter
je
repnz
scas
mov
out
es
sbb
in
test
gs
call
movsl
stc
cli
mov
mov
cmpsl
mov
jmp
fstpt
or
addb
ret
cmc
fbstp
pusha
xor
jbe
adc
add
rcll
aam
push
mov
xlat
imul
testl
lcall
jmp
mov
inc
mov
push
jo
adcl
shrl
inc
adc
rorl
sbb
cli
inc
int
fstpl
cmpsl
add
xchg
add
mov
ljmp
jg
pop
sub
std
mov
ljmp
out
cli
xchg
dec
pop
mov
pop
cmp
ficoms
in
std
pop
push
inc
iret
fnsave
mov
or
pushw
or
std
adc
sti
loopne
mov
and
xor
test
pop
and
jb
fsts
mov
cmpsl
mov
fwait
ret
in
sahf
inc
cs
jl
fdivl
in
test
gs
fwait
pop
shrl
or
and
inc
sti
or
inc
or
sub
nop
aas
mov
cmpsb
xchg
dec
das
ficompl
xor
or
adc
mov
adc
out
bound
pop
int3
mov
roll
mov
pop
jne
fstps
sub
adc
and
cmp
aaa
iret
xor
mov
in
xlat
jno
out
push
add
sti
ffreep
in
fildl
adc
andb
mov
std
lods
std
pop
ljmp
push
sub
imul
hlt
insl
mov
jmp
popf
jge
push
daa
push
dec
mov
pop
out
repnz
cwtl
pop
jns
jns
je
push
negl
mov
inc
aas
sbb
mov
lahf
lock
int
ficoml
repnz
js
icebp
mov
jp
push
ret
push
out
inc
cs
dec
loop
push
std
fwait
pop
inc
inc
jne
pop
bound
inc
xor
dec
pop
jo
mov
mov
jne
push
mov
push
push
sub
push
aam
jle
mov
roll
or
stos
fucom
jae
pop
mov
mov
dec
aam
and
out
and
nop
push
mov
andl
pop
jb
inc
xor
jnp
and
dec
lods
pop
int
fcoms
cmp
fsubrs
push
dec
cmp
sahf
xchg
adc
test
dec
or
push
cmp
das
loope
xor
sar
and
sti
push
jmp
mov
cli
push
sbb
clc
es
call
out
cmp
jmp
fistpll
sbb
and
test
mov
sarl
movl
xor
adc
pop
std
imull
adc
js
mov
inc
xor
xchg
shrb
or
lock
leave
xchg
jb
lods
xchg
jb
sbb
loopne
shlb
movsb
mov
adc
ret
jae
xchg
outsl
xor
std
xchg
insb
popa
test
es
and
xor
loope
mov
ss
sarb
mov
dec
or
les
cmp
xor
pop
and
test
into
js
pop
cltd
cli
in
mov
les
pop
iret
mov
jg
ret
in
sbb
andl
sub
stos
mov
rcrl
js,pt
sahf
and
jecxz
jmp
mov
adc
fs
cli
adcb
xchg
outsl
xchg
xorl
xchg
jmp
dec
cmc
adc
aam
mov
mov
out
mov
mov
pop
inc
inc
push
cmp
aaa
inc
pop
push
data16
in
xorps
cmp
mov
sub
pusha
xchg
out
orl
pop
pop
inc
aaa
jg
add
cmc
ret
inc
xor
mov
sbb
test
idivl
mov
adc
scas
mov
cmpsl
fnstsw
lods
test
or
jg
or
lret
jle
push
jno
xchg
inc
les
shlb
cmp
sbb
aas
xor
lret
pop
inc
in
loop
jmp
shlb
mov
and
ds
mov
push
jno
push
mov
mov
arpl
mov
cmp
andb
in
jmp
iret
mov
add
sub
sbb
jmp
mov
shrl
push
pushf
hlt
rcr
sarl
scas
push
adc
or
je
jae
mov
out
aas
jo
out
xor
push
stos
sbbb
pop
aad
lret
cmp
aad
fwait
and
cmp
fcmovbe
ret
mov
inc
roll
addl
shl
push
xchg
and
out
mov
cwtl
fmull
xorl
inc
mov
push
sbb
mov
aaa
add
jecxz
push
jle
sbb
mov
or
ds
xor
and
jmp
test
cmp
jmp
pusha
lods
call
push
sub
inc
rcl
push
popf
adc
mov
testb
jp
jnp
and
test
inc
mov
inc
and
push
dec
cltd
repz
mov
dec
fistps
push
std
and
mov
cmp
aam
leave
xor
data16
xlat
jl
in
pusha
pop
push
sbb
mov
inc
jbe
pusha
rcrl
mov
out
xor
inc
xor
sub
outsb
das
mov
or
fsubl
js
stos
loop
outsb
lahf
cmpsb
das
push
scas
inc
lds
fisttpl
mov
xchg
mov
push
add
inc
je
jne
sarl
push
mov
add
pop
insl
add
pop
je
sarb
dec
push
pop
stos
xchg
add
imul
add
cld
jmp
sbb
adc
push
sub
negb
rorb
in
fs
add
cmc
pop
pop
mov
and
push
into
movsl
aaa
shl
mov
push
mov
rcrl
test
add
data16
out
xchg
jbe
push
sarl
push
mov
dec
sarl
mov
aas
fsubl
and
insl
mov
and
inc
mov
gs
addr16
push
ds
dec
sub
adc
stos
jno
lods
cmp
shrl
jae
pop
outsb
fs
fsubrs
cltd
fst
out
jbe
adc
test
or
push
in
cmp
loop
jmp
fwait
stc
lock
and
cwtl
xchg
ret
add
jp
pop
jns
and
push
add
and
cli
fbstp
sbb
pop
sub
in
pop
fsubl
adc
das
xor
mov
jg
add
jbe
sub
xor
in
insb
scas
xchg
push
test
lock
pop
jbe
jno
xchg
stc
iret
cmp
jge
outsl
pop
inc
mov
icebp
test
andl
mov
push
icebp
movsl
sub
jbe
or
movsl
pop
mov
arpl
and
outsl
inc
mov
mov
mov
mov
xlat
insl
or
push
fsubl
and
jecxz
and
arpl
xor
pop
bound
inc
aam
mov
mov
insl
add
sub
pop
mov
lcall
loop
out
in
pop
dec
sbb
imull
aad
lret
insb
xchg
cmp
and
ds
push
leave
fsin
leave
repnz
pop
and
add
cmc
lret
bound
out
xchg
repz
subb
sub
adc
divb
adc
out
enter
fsubs
push
in
xor
mov
je
jp
mov
adc
jne
add
repnz
lahf
mov
adc
iret
into
push
in
incb
pop
cmp
nop
subl
xor
add
mov
sub
mov
mov
jmp
inc
nop
je
cmp
cmpsb
js
dec
push
stc
test
es
out
ret
xchg
mov
inc
lods
mov
lcall
mov
mov
jmp
xor
inc
dec
jge
hlt
mulb
aam
jnp
cmp
daa
lcall
push
sub
les
ss
into
cmp
es
in
or
shrl
add
ds
in
mov
or
mov
out
and
shrl
dec
push
adc
push
dec
mov
mov
arpl
xor
fwait
cmpsl
sub
jae
cli
subb
mov
sub
js
and
cmp
ret
lahf
icebp
sub
cmpsb
stc
lods
out
test
push
stc
or
push
lods
scas
das
adc
xchg
xchg
cwtl
imul
gs
inc
cltd
sahf
dec
stc
xchg
xor
ret
outsb
sbb
pushf
pusha
mov
hlt
sub
or
jg
cwtl
lds
int
xchg
or
ljmp
in
cmpsb
and
outsb
iret
lods
adc
bound
mov
sti
mov
aaa
cs
cld
xchg
jnp
cmpsb
or
push
dec
jmp
sbb
sub
stos
sbbl
push
mov
pusha
cs
stc
push
mov
xchg
and
xor
popf
jns
pop
daa
inc
idivb
xchg
mov
loop
ljmp
adc
mov
subb
push
add
add
or
movsb
mov
adc
lret
repnz
andb
mov
mov
daa
in
xchg
jg
xchg
std
fs
adc
push
cwtl
aad
mov
pop
in
clc
ficoml
xor
sub
xchg
xor
xchg
sbbb
mov
movl
jbe
jp
cli
xor
sub
adc
xchg
loop
lret
add
sub
dec
jl
sub
pop
ret
mov
movzbl
inc
sti
bound
mov
cmpb
push
lret
xchg
jo
dec
sub
pushf
pop
mov
pop
cmpsb
mov
ljmp
lock
insl
mov
sub
in
and
test
pop
pop
bound
xor
inc
cmpsl
cmpsl
fst
lds
mov
sbb
or
out
xor
mov
ds
jp
mov
mov
sub
push
mov
xlat
sbb
test
clc
push
pop
pop
out
rorl
jecxz
orl
mov
pop
data16
mov
or
pop
iret
test
inc
pop
jl
sub
out
and
pop
add
xchg
in
pop
scas
and
stc
cmpsl
outsl
lea
push
movsb
xchg
xor
mov
jmp
sbb
jg
fisttps
push
lock
movsl
lret
xor
cmpsb
outsl
mov
das
inc
inc
mov
or
xchg
ret
and
xchg
jo
xchg
iret
jp
icebp
xorb
lods
rcll
sub
mov
jne
jmp
and
jge
imul
rcl
or
pop
out
cmp
shl
movsl
or
fstpt
out
sbb
add
outsb
sahf
sbb
inc
pop
mov
fstpl
movsl
xchg
pushf
test
pushf
lock
sahf
add
jnp
loop
cmpsb
pop
jp
mov
inc
add
fsubrs
pop
mov
call
ja
and
cmc
xor
mov
push
xchg
jb
and
pop
lods
inc
jne
sub
aas
or
sub
or
outsl
in
mov
std
cmpsb
pop
dec
jmp
pop
nop
icebp
std
or
bound
xlat
stc
or
xchg
nop
push
xlat
push
enter
pop
mov
pop
dec
sbb
inc
rcll
into
xchg
pop
jb
mov
inc
in
loope
sbb
jecxz
lret
lea
lahf
jg
jge
lods
icebp
aad
mov
out
sbb
in
popa
pusha
iret
neg
xor
jmp
dec
xlat
fidivs
cwtl
jmp
jge
pop
stc
call
add
iret
ficomps
fwait
lock
mov
test
push
cmc
jbe
or
xchg
outsb
push
jge
out
insb
call
lret
cmp
and
mov
xchg
fwait
jge
testl
lds
push
sbb
sbb
jo
mov
or
test
loopne
jae
add
arpl
xchg
inc
scas
jecxz
jmp
jne
pop
ljmp
lcall
fsub
ret
shrd
and
adc
cwtl
adc
rclb
lds
pop
fisttpl
cmpsl
idivl
mov
mov
or
cmpl
scas
pop
jle
jbe
outsl
imul
es
and
cmp
or
mov
dec
jo
out
insb
dec
pop
addr16
jmp
sbb
outsb
sub
sbb
rorb
mov
repz
and
shll
cmpsb
lods
bound
mov
hlt
in
xchg
idivb
into
rorb
sub
pop
push
icebp
xchg
xchg
pop
popf
fists
and
jmp
out
ror
xchg
lret
stos
pop
cmpsl
jo
scas
mov
pop
sbb
ffree
js
jl
in
sbb
stos
rcll
out
lret
in
xchg
push
dec
pop
mov
mov
bound
jge
mov
xchg
xchg
mov
aaa
inc
cmp
mov
idivb
cmp
icebp
mov
adc
xsaveopt
shl
das
add
mov
movsl
clc
sub
mov
cmp
mov
adc
and
push
dec
push
pop
lods
fwait
inc
das
push
xchg
pop
sub
mov
arpl
sub
jo
add
or
je
dec
xorl
mov
test
mov
repz
in
sub
fst
add
cmc
fldenv
jns
mov
xchg
fsubl
jno
cmpsb
pushl
mov
clc
fsubrl
mov
pop
cmc
hlt
fsubl
sbb
inc
orb
andl
jmp
rcll
adc
push
cmp
ja
push
orl
out
add
int3
in
xor
push
dec
dec
adc
repz
xchg
mov
cmpsl
cmp
mov
arpl
bound
mov
sahf
jle
movsl
test
add
mov
test
mov
inc
iret
jmp
test
insl
hlt
sar
sub
imul
mov
jb
dec
jmp
ds
stos
add
sahf
and
and
test
es
sti
std
pushf
dec
adc
sub
adc
aad
cld
das
and
pushf
xlat
and
shlb
sub
mov
adc
out
popa
inc
jge
lcall
inc
push
push
cmpsb
xchg
sbb
jo
fcoml
xor
in
aam
jge
sub
mov
mov
mov
mov
enter
inc
iret
fisttps
mov
gs
shll
and
or
sbb
faddl
push
test
push
adc
dec
and
mov
loop
pusha
std
pop
mov
cmpb
rolb
sysret
pop
hlt
insb
adc
inc
cmpsb
push
test
iret
mov
sahf
inc
out
pop
out
in
data16
cmp
je
and
int
sbb
aam
mov
aad
push
out
dec
lea
repz
mov
fldcw
jmp
mov
mov
cld
xchg
mov
lret
loope
dec
cmp
mov
stos
jg
mov
sub
adc
mov
cltd
mov
push
cmpsb
scas
data16
cmp
mov
push
lret
dec
adc
lcall
insl
push
mov
clc
mov
out
adc
insb
aas
and
leave
dec
xchg
sbb
inc
push
lds
movsl
ss
xor
fdivrl
adc
hlt
js
roll
out
sub
addr16
push
out
cli
inc
movsl
mov
cmp
dec
insl
mov
push
stc
pop
and
sub
subb
mov
xor
ja
enter
xchg
cmp
arpl
jg
in
nop
dec
sub
cmpsb
inc
jl
sub
sti
imul
insb
push
sbb
nop
pop
cmpsl
rcll
addr16
sbb
popf
icebp
mov
inc
mov
xor
sub
xchg
mov
cmpl
cwtl
push
bnd
ss
aas
hlt
inc
mov
into
inc
pop
arpl
popf
lret
movsl
pushf
repz
jl
add
jmp
hlt
notl
int3
sub
inc
flds
cmp
stos
les
xchg
sbb
mov
testl
and
jnp
or
mov
push
xor
mov
in
push
cmp
cmp
neg
daa
mov
sbb
sub
jo
jb
mov
sbb
lret
add
je
shll
fs
loopne
mov
push
in
pop
dec
mov
imull
jmp
ret
inc
mov
fsubrs
mov
mov
inc
mov
lcall
clc
movsl
repnz
idivl
cwtl
mul
cmpsb
lret
inc
shlb
mov
js
iret
cmp
mov
cld
or
roll
scas
nop
sbb
mov
pop
or
mov
jl
pop
fadds
int
or
dec
inc
in
mov
mov
xor
dec
aam
inc
jmp
and
push
nop
adc
pop
or
mov
inc
and
cmp
dec
adc
popf
mov
push
sub
adc
and
hlt
xor
es
pop
sub
iret
inc
cltd
cmc
inc
js
xor
push
or
mov
cmc
imul
call
mov
mov
pushf
imul
cmp
test
jle
add
sbb
push
test
decb
or
sbb
cmp
ret
jle
ret
lods
pusha
jmp
out
rolb
repnz
sbb
imul
jl
pop
loop
jns
sbb
aas
imul
mov
call
pop
scas
mov
pop
lock
adc
push
out
mov
sub
call
or
push
nop
jnp
sub
movsb
fcomip
mov
xchg
inc
pop
add
cwtl
push
pop
imul
shlb
imul
add
xchg
test
out
out
pop
cs
mov
lcall
stos
mov
or
ds
xchg
test
jno
jp
mov
xchg
xor
data16
enter
repnz
inc
fucomi
dec
xor
movsl
sahf
leave
cmpsl
mov
cs
or
push
clc
jne
je
stos
push
add
xchg
scas
iret
mov
adc
jbe
ja
gs
popf
sub
out
out
subb
ss
cmp
fs
inc
dec
cmpsb
lods
push
mov
xorb
add
add
test
js
std
in
mov
jno,pt
pop
sti
andl
xor
daa
out
ficompl
mov
or
jnp
xchg
dec
mull
fucomi
inc
bound
and
fstps
pop
out
ljmp
sbb
lock
mov
sahf
mov
data16
adc
or
ret
jbe
mov
adc
in
scas
mov
decl
push
inc
std
sti
cmp
outsl
fs
xchg
sarb
insl
je
mov
outsb
lods
sbb
jg
push
jge
cmpsb
insl
insl
adc
andb
cli
push
jp
imul
jl
dec
mov
push
mov
xor
xor
adc
xchg
mov
adc
adc
sub
jmp
cmp
outsb
out
shll
pop
mov
test
xchg
ljmp
ja
lret
mov
jp
dec
add
lds
adc
push
inc
inc
dec
xchg
popa
roll
jno
xor
movsb
mov
dec
xchg
outsl
pushf
inc
xor
shl
mov
cmp
mov
les
cmp
enter
sbb
jne
jp
ret
int
mov
aad
push
lods
fidivl
sub
push
add
out
or
xchg
mov
pushf
add
lcall
sub
xchg
jecxz
cmpsb
clc
jecxz
lret
int3
push
xchg
xor
inc
orb
push
das
push
bound
fyl2x
cmpsb
sub
popa
and
mov
mov
sbb
sub
xchg
out
cs
xchg
mov
call
aam
xchg
xor
lods
add
imul
dec
mov
jno
xor
mov
les
fisubrs
insb
fmul
cwtl
in
mov
xchg
dec
push
mov
cmp
pop
das
pop
cld
into
or
and
cmp
inc
pop
clc
ficoms
add
faddl
les
fs
mov
jo
adc
mov
mov
loopne
xchg
cmp
mov
cmp
pop
fiaddl
jp
sub
add
dec
aam
pop
das
mov
jbe
pop
testb
int3
jge
popl
ret
inc
xor
adc
and
imul
add
mov
or
movsl
lods
push
leave
fildl
ret
in
repz
xchg
mov
call
rolb
dec
sbb
mov
sbb
inc
adc
popa
cmp
sbb
sbb
stos
lret
loopne
imul
mov
add
sub
jb
jge
pusha
pop
cmpsl
pusha
neg
js
and
scas
mov
test
xchg
or
push
xchg
add
fidivl
mov
adc
aad
pop
jle
popa
mov
hlt
xor
outsl
cmc
add
xchg
pop
jne
pop
imul
and
pop
je
pop
mov
fcmovnu
push
and
mov
add
cltd
ljmp
inc
fwait
cwtl
inc
push
int
fldt
test
movsl
popa
insl
test
sbb
inc
lock
js
pop
orl
aaa
jo
jge
xor
pavgw
mov
pop
and
push
aam
aam
jns
or
in
xor
mov
lret
jb
jg
push
push
sahf
fs
inc
scas
je
mov
scas
in
mov
in
roll
lods
inc
mov
fs
pushf
loope
fiaddl
xchg
cmp
ficompl
es
sarl
cmp
pop
outsl
sub
stc
lods
jecxz
sub
sbb
outsb
ds
inc
xor
mov
mov
daa
fwait
daa
cli
or
divb
jp
add
lcall
ret
mov
pop
outsl
popa
aam
out
shr
mov
or
cmp
scas
negb
scas
mov
mov
cmp
inc
dec
gs
xor
ret
adc
ja
lock
repnz
lods
jecxz
out
fdivl
pop
scas
push
mov
orl
pop
cmp
xchg
push
repnz
arpl
iret
pop
or
sub
icebp
xchg
mov
push
mov
add
adc
lahf
pop
in
faddl
les
add
push
mov
sub
or
sub
movsl
pop
mov
inc
jb
jo
pusha
loopne
mov
mov
mov
stos
lahf
pop
addr16
stos
clc
adc
scas
add
inc
mov
cwtl
sbbl
aad
jp
jo
lock
frstor
or
push
in
dec
mov
rcrl
divb
sbb
je
cmp
jge
fimuls
imul
cmpsb
std
xor
aas
push
mov
out
push
out
outsb
loopne
sbbb
inc
mov
cmc
add
sar
rcrb
sti
cmpl
shll
adc
mov
jge
mov
pop
jle
enter
push
push
and
aaa
fimuls
sahf
in
into
insl
inc
inc
loopne
fistl
or
push
and
adc
scas
das
shlb
push
mov
dec
xor
xchg
lds
adcb
push
stc
ljmp
lret
dec
clc
cmp
or
xchg
mov
mov
ljmp
mov
dec
mov
mov
add
std
mov
sbb
rorl
cmp
dec
xor
pop
sbb
dec
sub
movsb
push
fstl
xchg
xchg
fcompl
pop
cltd
adc
aaa
popa
fxch
rclb
popa
cmpsl
pop
ds
int3
push
inc
fisttpll
push
mov
imul
mov
stos
out
cli
fwait
xchg
add
mov
into
xor
xor
mov
and
cmp
out
jns
jnp
nop
cmpsl
xchg
push
push
sub
ficoml
or
stos
imul
mov
mov
fstpl
ss
in
inc
xchg
xor
xchg
out
jp
push
pop
loopne
or
loop
and
jns
push
out
dec
mov
xchg
dec
and
and
and
jno
fidivl
inc
int
bound
mov
repz
cmp
cmp
scas
sub
cs
subb
add
aaa
movsl
xor
dec
inc
faddl
lds
pop
dec
pop
and
mov
mov
loope
cmpsl
mov
xlat
test
mov
ds
dec
mov
repnz
repz
xchg
ret
push
push
pop
insb
pop
cmpsb
in
iret
pushf
aam
dec
mov
adc
sbb
lds
shrl
pop
cmp
iret
cmpsl
mov
into
fstl
pop
ds
sub
mov
test
stos
pusha
push
pop
paddusb
clc
insb
mov
dec
sahf
aad
sbb
mov
push
test
ret
pop
aas
bound
sub
out
cs
je
or
xor
out
stc
fcompl
jae
or
sub
mov
daa
pop
mov
int
outsb
inc
dec
fiaddl
fdivl
mov
mov
xchg
iret
mov
test
add
add
jb
mov
dec
and
inc
fisubs
jno
dec
dec
sbb
mov
add
mov
test
sub
scas
sahf
in
test
shlb
add
jg
mov
sub
or
mov
mov
mov
lret
jle,pt
leave
xor
dec
nop
or
aam
xor
or
inc
jne
scas
int3
pusha
jno
lds
lods
les
push
or
sbb
pop
inc
adc
inc
cmp
je
push
jns
cmc
les
daa
movsl
xlat
fwait
in
dec
add
mov
mov
icebp
cmc
sub
lahf
cmp
mov
lods
into
pop
aaa
push
xchg
lcall
pop
jg
xor
sbb
jecxz
sbb
mov
inc
pop
fnstsw
push
int
movsl
add
xchg
xchg
xor
xlat
les
mov
dec
leave
adc
add
nop
nop
mov
push
sbb
mov
lret
pop
fstpl
es
lods
scas
je
cld
jno
and
les
call
aas
xor
jecxz
lcall
xchg
jl
inc
lods
inc
imul
xor
mov
push
dec
push
lcall
inc
push
pop
in
stos
cmp
jns
ret
sub
pop
or
pop
mov
roll
ljmp
jae
mov
fucomip
int3
mov
mov
fldcw
lods
ret
bnd
push
mov
insl
and
mov
mov
jnp
pop
mov
pop
jmp
into
jp
push
fnsave
lock
out
inc
push
mov
ds
bound
jae
and
bound
ljmp
push
clc
jno
inc
iret
add
cmp
daa
rcrl
push
mov
xor
lds
adc
repnz
adc
adc
jns
push
push
test
sbb
cmc
sbb
aaa
sub
pop
lea
fwait
shll
sti
xchg
dec
aaa
sub
sbb
loope
or
scas
mov
fisubrs
decb
or
dec
sub
movsl
iret
int
inc
push
sbb
pop
pop
sub
leave
out
stos
enter
xchg
daa
mov
cltd
jl
fldt
out
inc
cs
ss
out
sbb
mov
call
jns
and
into
sbb
imulb
adc
jecxz
jnp
icebp
add
aaa
or
jle
push
adc
fnstsw
push
rorl
mov
inc
push
sbb
mov
loop
mov
movsl
and
ljmp
inc
pusha
hlt
sub
jle
and
dec
fcomi
push
mov
dec
sub
inc
mov
mov
xchg
xlat
roll
hlt
mov
inc
in
sub
loope
cmp
pop
or
pop
frstor
rolb
jecxz
xchg
int3
fidivl
mov
or
into
mov
addr16
xor
fisubl
jecxz
add
sub
out
mov
xchg
repz
dec
insl
push
dec
mov
pop
lahf
inc
int3
jb
push
add
jle
and
add
sbbb
cmp
std
divl
inc
and
out
dec
push
jae
aaa
and
pop
pop
and
pusha
dec
ljmp
dec
pop
ja
jae
or
leave
es
mov
repnz
inc
dec
enter
aaa
push
js
sbb
clc
inc
in
test
scas
movsl
test
sbb
sub
cmpsb
scas
xchg
imul
loop
inc
inc
pusha
ds
inc
ja
dec
test
dec
ret
ljmp
dec
dec
mov
movsl
add
mov
xchg
cmp
mov
out
neg
aas
inc
inc
pop
lahf
aas
mov
mov
std
fistps
mov
in
int
sarl
mov
xchg
insb
bound
subb
jecxz
je
inc
inc
iret
xchg
jecxz
cmp
ret
aam
dec
dec
xor
inc
sub
jmp
xchg
out
fmull
dec
lods
stc
push
adc
jbe
mov
stos
pop
add
cmp
in
sbb
out
mov
xor
pop
inc
movsb
stos
fnsave
stc
inc
sti
orl
and
mov
ljmp
neg
mov
stos
addb
in
xchg
mov
in
xor
les
xchg
jp
add
or
lock
js
or
jne
stos
in
lods
dec
out
popf
xchg
push
ret
xor
dec
mov
push
add
stos
cmpsl
fwait
dec
add
je
xchg
into
mov
adc
pextrw
adc
jae
test
sti
imul
jp
mov
movsb
mulb
out
xchg
jns
jg
daa
jl
jae
lock
dec
imul
jg
movsl
loop
adc
rorb
jp
lock
icebp
jle
test
dec
pop
add
insb
and
scas
jbe
push
sti
jb
das
das
push
push
int
inc
pop
xchg
xchg
outsl
jns
bound
sbb
repnz
outsl
es
mov
pop
push
xor
pushf
iret
push
lahf
cmc
loopne
dec
push
mov
pop
or
pop
push
out
je
test
jne
cmp
outsl
aam
lods
adc
and
xchg
ret
pop
push
add
mov
outsl
or
sbb
inc
xor
push
xchg
outsl
imul
mov
lret
loope
jle
mov
sub
add
dec
mov
sbb
lcall
add
push
mov
scas
cmpsl
lock
std
or
jmp
repz
sbb
and
sbb
cmp
jge
fldl
lea
or
out
push
and
pop
repnz
push
cmp
jge
adc
shl
divl
das
leave
mov
jnp
mov
pop
aaa
into
ret
add
in
bound
sub
xchg
shlb
dec
or
dec
xchg
mov
push
jg
cs
ja
or
mov
mov
push
mov
ljmp
fsubrs
lea
xor
inc
outsb
adc
stos
jae
bound
mov
mov
push
rol
stc
sbb
gs
insl
repz
inc
xchg
aaa
insl
mov
adc
xor
in
test
cltd
rorb
xor
inc
outsl
int
pop
in
jnp
ret
dec
jns
out
mov
add
sbb
mov
fistl
cmpsl
pusha
outsb
scas
xlat
fldenv
inc
push
adc
lock
xchg
test
out
adc
and
adc
fadds
pop
cltd
and
push
sub
inc
scas
std
arpl
rcl
mov
inc
mov
lahf
mov
dec
or
push
stc
mov
pop
jne
insl
pusha
scas
shlb
adc
add
and
cli
add
imul
pop
sar
sbb
pop
mov
mov
add
add
mov
sbb
sbb
or
les
mov
adc
xchg
lahf
addr16
call
imul
mov
cwtl
js
in
hlt
add
jl
imul
aaa
xchg
out
cmp
ja
test
dec
adc
sbb
or
les
xlat
lock
dec
push
sub
xor
mov
in
push
in
jle
dec
test
ds
xchg
imul
push
jne
xchg
andb
jnp
rcrl
cmpsl
arpl
sarl
jb
xor
mov
jns
nop
pop
cmp
sbb
aas
mov
ror
add
sbb
xor
cld
lcall
cmp
push
or
jbe
cwtl
pop
sbb
cld
aad
andb
pop
pop
mov
jge
mov
fldt
inc
aam
mov
movsb
jge
sbb
or
xchg
cmpsb
sub
outsl
in
push
mov
call
clc
jle
int3
mov
iret
mov
xchg
mov
pop
inc
adcl
jg
lcall
or
popf
xor
and
stc
push
cs
lea
xchg
test
out
lret
int3
shrb
mov
xchg
imul
cmp
loopne
sbb
mov
out
sub
or
or
pop
in
cs
in
imul
jae
in
je
cmpsl
jbe
and
aas
jb
leave
lret
xor
add
ss
data16
cmovl
outsl
movsl
and
clc
movsl
enter
gs
pop
mov
out
mov
cltd
jge
andb
out
xchg
sub
shrl
repz
mov
imul
pushf
adc
jae
fmull
dec
or
xor
adc
test
hlt
push
shlb
test
inc
popf
jle
mov
ds
inc
test
xor
sub
outsl
or
jmp
adc
gs
push
sbb
cli
idivl
mov
mov
loopne
movsl
mov
clc
adc
lret
aaa
pop
insb
stos
sbb
pop
ljmp
sahf
jo
sub
push
scas
int3
data16
orb
cwtl
insl
aaa
xor
jmp
lock
push
dec
clc
push
inc
inc
enter
push
cmp
cmc
ret
movsb
and
pop
std
aaa
int
mov
ja
repnz
add
jno
aad
out
adc
cmp
push
out
mov
push
jno
pop
pop
aad
add
push
sti
push
and
mov
cmc
test
fwait
mov
pop
push
fs
stos
push
std
int
aas
ret
popf
lds
jo
jnp
insb
mov
addl
loope
sti
popa
cmpsb
out
loopne
mov
pop
js
sbb
aam
or
jg
cmp
pop
cmc
andl
and
adc
sbb
nop
dec
mov
cli
cmp
sub
popf
out
sub
insb
mov
sub
out
jns
mov
iret
mov
jne
xor
xlat
mov
cli
push
clc
fimuls
movsb
aam
ljmp
ds
jmp
mov
or
xor
es
fldcw
cli
sub
pop
adc
scas
add
mov
mov
inc
dec
adc
jns
test
cmp
xchg
cmp
inc
cmp
cmpsb
movb
sub
cmp
sub
rorb
adc
and
stos
in
jmp
and
mov
jl
mov
lods
sub
insb
out
dec
sti
gs
pop
jbe
cmp
xor
mov
test
cmpsl
loop
sbb
test
mov
push
leave
mov
jmp
dec
lcall
in
cltd
pop
mov
dec
adc
aam
cmp
cmp
mov
lahf
mov
pop
pusha
and
lahf
sbb
ja
push
fsts
out
add
xchg
and
rcr
cmp
jp
fwait
in
jnp
and
daa
cmp
into
or
cs
ss
jnp
jns
stos
and
outsb
push
inc
jno
imul
add
jo
icebp
je
xor
push
shll
movsb
cmpsb
pop
cmp
lock
add
add
push
jae
into
fdivrs
mov
push
sub
xor
push
aaa
js
jno
subl
daa
jns
push
mov
loopne
pop
jb
in
push
inc
sbb
clc
add
jp
xor
sbb
xchg
test
sub
lds
ret
rcr
cmpb
xchg
ror
mov
cmp
push
lea
cmpsl
divl
fidivs
mov
clc
jmp
outsb
cmc
aas
add
int3
ss
std
popa
lahf
pop
or
mov
popf
cmp
enter
lahf
mov
outsl
add
mov
sub
bnd
dec
cmp
dec
pop
fidivrl
jno
dec
cmpsl
js
add
addr16
lret
push
jne
dec
std
mov
mov
loopne
xchg
popf
add
sbb
call
mov
sahf
ss
imul
or
inc
ror
movsb
mov
inc
push
jg
dec
dec
sbb
cmpsl
mov
or
mov
fnstenv
xchg
push
js
ret
inc
clc
in
ja
pop
push
sub
movsl
pop
dec
or
loopne
inc
pop
stos
push
adcb
or
push
pop
sahf
das
sbb
pop
aam
push
jae
insl
push
sbb
ret
movsl
xchg
push
loope
add
push
sub
ja
push
inc
cmp
jmp
push
lds
and
fcomps
adcb
and
add
mov
fmull
scas
fsubrl
pop
sti
add
xlat
cmp
jno
or
push
or
mov
into
inc
sbb
pop
sbb
sub
repnz
sub
mov
sti
adc
loop
imul
and
aas
xlat
mov
pop
fldl
packuswb
dec
into
in
leave
pusha
mov
mov
in
jg
jg
xor
adc
xor
jle
rclb
xchg
mov
xor
out
mov
xchg
jbe
adc
mov
es
jae
imul
lahf
add
inc
cmp
and
lret
xchg
popf
out
or
sub
imul
sub
mov
std
or
pop
jb
cmp
mov
cmp
mov
pop
das
xchg
or
scas
mov
inc
fwait
inc
inc
cs
xchg
scas
push
jmp
shrl
and
das
pop
jp
xchg
pop
mov
fidivrl
les
add
mov
mov
movsl
inc
jno
mov
add
add
mov
cmp
mov
mov
add
movsb
push
insl
cmpsl
cld
lcall
aam
and
cmpsb
pop
stos
movsl
mov
pop
or
out
in
popf
ss
jge
in
jmp
mov
fcmovnbe
xor
mov
pop
aam
ret
pop
rep
insl
sbbb
inc
lds
lahf
sbb
pushl
mov
jb
mov
or
mov
insb
cmp
pop
mov
push
insl
cltd
push
mov
cmp
das
push
mov
ds
popf
push
pushf
jp
cli
cli
jne
cmpsb
dec
je
imul
aad
mov
nopl
and
leave
mov
jns
jle
sbb
das
lea
stos
cmp
add
pop
ret
add
mov
nop
stc
es
sub
out
pop
aaa
cmp
fs
mov
mov
imul
pusha
call
pop
das
pop
cmp
pusha
cmp
mov
pop
mov
out
adc
neg
xchg
adc
cmpsb
pop
out
sbb
leave
xor
ret
faddp
or
aas
or
aad
jae
sbb
pop
cltd
fcmovnu
aam
add
adc
enter
jecxz
fstpt
out
mov
mov
inc
lret
inc
pop
sub
insb
xor
ljmp
sbbl
ljmp
or
in
test
scas
mov
adc
mov
lret
in
adc
ljmp
sbb
in
dec
lods
push
movsb
mov
insl
jo
pop
icebp
add
inc
sahf
dec
lahf
dec
cmp
adc
pop
dec
xor
int3
jmp
and
addr16
mov
faddl
fisttpll
and
add
mov
mov
int
pop
js
jbe
mov
stos
lods
cmp
imul
or
fwait
mov
jnp
mov
mov
in
sbb
and
fildll
xor
gs
mov
out
dec
xchg
jb
mov
push
fs
push
and
js
jecxz
mov
fs
adc
push
sahf
inc
adc
sbb
mov
mov
out
movsb
push
mov
xchg
push
cmp
mov
mov
nop
xor
test
aaa
lds
test
mov
hlt
jbe
cmp
pusha
mov
out
hlt
pop
clc
fidivrs
gs
repz
mov
popa
jp
jge
lds
das
lahf
inc
mov
shll
clc
clc
push
adc
sub
mov
dec
stc
jmp
push
shll
repz
or
sbb
faddp
fnsave
repnz
mov
rcl
es
stos
jle
push
add
imul
push
pop
pop
ror
roll
xchg
enter
in
cmc
xchg
xchg
cmp
mov
add
stc
xor
or
sti
mov
fsub
inc
cmp
inc
stc
adc
lods
lcall
xchg
xor
xor
cmp
loop
sub
xor
notl
push
mov
jnp
inc
pop
xchg
inc
imul
add
arpl
movsl
cmpsl
in
sbb
faddl
pop
inc
cs
push
jge
mov
mov
jmp
sub
les
out
push
jne
mov
scas
xchg
mov
sub
sarb
test
push
aas
aam
int
push
fwait
scas
mov
mov
xchg
add
pop
inc
popa
les
push
pushf
and
sbb
jno
xor
mov
call
and
stos
stos
movsl
or
fiadds
fadds
aam
mov
pop
sbb
adc
ja
cmp
cmp
push
fstpt
pop
jl
test
in
and
or
sbb
cltd
jmp
cmpxchg
movsl
jecxz
inc
mov
testb
or
clc
daa
ss
imul
dec
mov
filds
stos
ljmp
add
adc
int
sbb
pop
sahf
dec
and
fmull
std
mov
and
jge
ja
add
inc
xor
sti
jp
push
dec
neg
jle
dec
cltd
mull
call
dec
in
mov
mov
cs
ja
repnz
pop
sahf
aas
jae
inc
cmp
into
adc
xlat
cmc
xor
pop
or
lret
scas
scas
sub
daa
enter
loop
xor
lret
ret
mov
inc
fisubrl
popa
jb
cmp
daa
mov
mov
test
sub
sub
mov
add
cmpsl
sbb
and
pop
push
dec
mov
ds
push
imul
outsb
push
mov
repz
ret
add
js
push
inc
jg
cltd
in
adc
stos
inc
mov
cld
aaa
adc
mov
or
jo
jo
pusha
adc
xchg
cmpsb
test
cli
std
mov
cmp
or
push
or
cmp
pushf
cmp
push
xor
xchg
lods
shll
orb
xchg
cmp
ss
ret
into
stos
push
mov
fsts
insl
lcall
test
xlat
push
js
or
dec
scas
dec
je
cmpsl
rcl
push
lahf
mov
adc
pop
xchg
sub
push
jnp
sbb
xor
decb
push
sub
sbb
or
shlb
ret
or
icebp
repz
out
mov
adc
mov
jecxz
cmpsb
mov
setp
push
lret
int
mov
addr16
add
fstpl
xor
xor
rcl
xlat
cmp
and
test
mov
dec
cmpsl
cmp
jnp
mov
push
aad
cmp
bswap
xchg
pusha
cwtl
cmp
and
sbb
pop
inc
inc
or
inc
xchg
inc
pop
je
xor
sbb
pop
pop
lea
cmp
mov
out
lcall
sub
test
subl
sti
mov
mov
ja
jg
inc
out
mov
call
inc
push
mov
jno
loope
adc
out
js
or
addr16
stos
int
mov
push
xchg
andb
sub
divl
rcr
mov
out
into
pop
aaa
fldcw
lret
mov
or
rcl
fs
in
fdiv
or
aam
loope
les
mov
ss
or
arpl
xor
jge
pop
imul
sub
insl
push
mov
sub
iret
inc
and
loope
inc
arpl
data16
leave
and
lret
int
aad
test
add
mov
mov
pop
sub
sub
pop
add
and
push
and
adc
loop
adc
dec
add
pop
stc
cltd
inc
xor
adc
cmc
dec
sbb
lods
sbb
flds
cmp
pop
lea
into
int
fdivrp
push
rclb
push
aas
mov
lods
outsb
fwait
mov
mov
sub
stos
aam
add
out
push
xchg
push
imul
mov
cwtl
mov
sub
dec
mov
inc
jmp
movsb
cmc
rcrl
sub
and
xor
daa
sbb
lcall
push
cld
jl
jbe
adc
scas
test
sub
in
mov
imul
stos
aad
imul
add
pop
fcomps
add
jmp
mov
insl
add
ljmp
jae
in
cld
addr16
ds
roll
cmp
jo
sub
repz
mov
jmp
ror
xchg
jbe
insb
ret
mov
dec
jae
sbb
jne
adc
xor
mov
in
into
and
push
scas
fsubrl
pop
mov
mov
fisubl
outsl
cld
jmp
fcomps
jnp
mov
faddp
incl
sub
ffreep
ret
dec
pop
rcll
test
adc
popf
enter
or
lea
cwtl
in
sub
inc
or
and
adc
std
sbb
push
decb
shlb
mov
movb
lret
enter
mov
and
push
and
shlb
fidivrs
inc
push
dec
es
out
adc
out
out
icebp
xor
mov
arpl
xor
ret
fucomi
test
loope
push
jo
or
out
jb
dec
push
inc
add
or
mov
clc
and
rorb
cwtl
bound
pop
arpl
and
jo
mov
pop
mov
xor
in
in
jl
push
sbb
iret
out
repz
jno
and
frndint
in
dec
xor
stos
ljmp
int3
add
test
insl
test
test
fs
pop
sbb
mov
mov
punpckhdq
sub
les
jo
lods
shlb
add
leave
cmp
push
xchg
pop
adc
pop
xchg
rcr
dec
insl
mov
enter
xor
push
push
xor
jle
out
sub
xchg
cmpsl
insb
mov
xchg
or
outsb
dec
add
aaa
mov
xchg
jo
scas
ret
mov
aas
jbe
test
cmpsl
sub
and
fsts
andb
outsl
mov
enter
popa
xor
stos
mov
xchg
lock
mov
sti
push
movsl
lods
cmp
in
or
push
out
dec
repz
mov
push
stc
sbb
xchg
xor
and
cld
sbbb
push
push
mov
or
lods
movsb
mov
ret
xchg
dec
popf
enter
mov
in
jo
cli
lret
jp
jne
arpl
adc
adc
jmp
imul
cmp
popa
sbbb
repnz
fcoml
pushf
mov
dec
scas
xor
push
loopne
clc
mov
jmp
arpl
and
addr16
cltd
pop
lods
cmp
repnz
arpl
cmp
lds
sbb
jno
mov
push
fidivl
cmp
cs
lea
adcb
dec
sbb
mov
cmpsl
cld
arpl
sub
outsl
xor
push
lahf
push
add
das
sbb
aam
sub
sbb
mov
and
ret
fs
out
popf
popf
push
inc
aaa
mov
xor
mov
lret
xchg
in
insl
cli
xor
push
ret
cmp
aad
mov
mov
dec
jp
inc
dec
mov
stc
push
dec
mov
lahf
xchg
mov
leave
das
and
adcl
xchg
test
jle
pop
mov
aad
mov
fildl
push
mov
sbb
lcall
cmpsl
inc
cltd
ret
cltd
add
pop
fadds
inc
pop
rcll
in
lahf
mov
subl
lods
mov
fcoml
mov
out
cltd
xchg
in
repz
lea
push
int3
mov
inc
or
or
inc
cld
rcll
mov
idivb
and
push
repz
mov
push
pop
ljmp
or
std
pop
ds
out
jns
out
inc
adc
iret
xchg
or
dec
dec
into
clc
adc
mov
dec
outsb
fisttpl
scas
push
pop
test
in
push
jno
out
sar
push
push
dec
cvtpi2ps
push
mov
xlat
cmp
out
pop
in
fbstp
outsl
scas
hlt
rorl
mov
mov
xor
fcoms
daa
sub
jbe
xchg
inc
jns
icebp
jb
pop
jb
cld
dec
or
dec
jl
iret
dec
jne
dec
push
xor
cwtl
lods
enter
xchg
mov
call
xor
pushf
jbe
mulb
stos
and
rclb
cmp
lret
outsl
addb
xchg
lahf
loop
arpl
addr16
xlat
xlat
inc
xchg
in
mov
mov
mov
cmp
xor
out
xlat
cmp
jle
das
out
jl
dec
pop
push
push
daa
bound
mov
add
push
rorl
out
fisttps
mov
xchg
fiadds
adc
dec
adc
or
mov
out
mov
mov
adc
sbb
push
shrb
mov
out
enter
xchg
mov
out
push
push
adc
sbb
mov
out
hlt
into
adc
imull
pop
lock
mov
pop
mov
push
xlat
inc
out
aaa
or
mov
ljmp
ds
lret
dec
mov
shrl
mov
insl
or
stos
mov
pop
mov
sarl
leave
add
mov
cmp
cmpsb
dec
push
xor
dec
xor
es
int
js
fidivs
cmp
dec
stc
roll
mov
int
mov
fs
jle
mov
mov
dec
mov
adc
rolb
mov
pop
xlat
pop
or
push
movsb
pop
sbb
lahf
ds
pop
xchg
ds
push
xchg
int
leave
popa
pop
lods
dec
cmpsl
cmc
cli
test
sbb
andb
loopne
aas
flds
rep
push
mov
jle
sub
pop
adc
dec
add
mov
ret
test
lcall
push
pushf
xchg
test
mov
or
addr16
insl
cmp
js
pop
scas
sbb
iret
into
xchg
push
ljmp
imul
push
test
mov
add
pop
inc
sbb
jnp
lret
nop
push
movb
imul
add
pop
int
ljmp
xchg
jnp
cli
xor
fwait
in
jns
pushf
push
adc
movsb
push
cmp
mov
cmp
sbb
pop
cmp
pop
repnz
divl
movsb
fisubrl
pop
iret
out
leave
shl
dec
sub
int3
mov
and
xor
movsl
aad
and
inc
data16
cmp
xor
nop
sub
dec
jg
cmc
add
pop
fdivs
test
pusha
jl
push
mov
test
dec
pop
mov
adc
and
adc
inc
xor
or
add
popa
mov
in
movsl
addr16
iret
dec
add
imul
orb
push
mov
aad
ss
mov
sarb
in
xor
add
xchg
nop
xchg
je
hlt
shrb
jo
mov
cwtl
push
jnp
add
mov
jns
jb
adc
or
dec
fadds
cli
push
movsl
mov
mov
ljmp
fnstcw
xchg
iret
orb
adc
outsb
pop
popa
loop
sbb
fmuls
movb
cwtl
push
sbb
jmp
mov
movsb
js
sub
fcomp
cmc
push
cmovge
adc
lods
or
out
dec
mov
sub
fdivp
out
sub
push
sub
mov
lea
mov
setbe
jp
and
cwtl
nop
fiadds
in
mov
pop
xchg
and
xchg
cmp
cli
cmp
pop
test
add
push
pushf
push
ja
ret
sbb
cli
push
jl
dec
dec
adc
in
in
mov
xchg
adc
push
sub
popa
or
push
xchg
mov
test
xchg
addr16
scas
or
out
inc
xor
dec
and
fsubl
push
adc
xchg
inc
mov
xchg
xorl
jp
mov
fsubrs
sbbl
gs
lods
lods
lods
inc
pop
in
je
out
decb
pop
mov
mov
mov
bound
fidivrl
xchg
rcrb
jecxz
movsl
mov
pop
cwtl
adc
arpl
mov
fmull
je
xchg
sbb
and
sub
adc
stos
inc
push
out
cmc
add
mov
rcrb
fisubrl
pop
cmp
dec
rcll
xchg
bound
pop
push
jge
pop
cltd
pop
sub
add
push
aad
mov
inc
and
inc
jns
pop
pop
and
neg
loopne
or
ljmp
inc
xchg
or
movl
add
sbb
imull
daa
fs
or
pushf
lock
or
lret
jmp
out
mov
stc
add
dec
subb
rclb
mov
fisubrs
push
sti
das
arpl
push
notb
pop
lock
adc
pushf
xchg
mov
test
daa
mov
mov
xchg
push
cmp
addr16
es
rcrb
filds
and
push
aam
cmp
push
cmpsb
lret
daa
mov
test
lds
push
push
test
rolb
jae
rolb
xchg
push
aad
pop
adc
sbb
sub
ss
jp
cmp
inc
xlat
ss
mov
xchg
lea
xor
cmp
int3
sub
out
lea
notl
cwtl
cmp
sub
loopne
dec
add
push
cli
test
scas
adc
cmp
dec
push
xchg
addb
lcall
in
sub
clc
test
stos
fucomip
cli
xor
hlt
sbb
cmpl
in
and
mov
fldenv
in
ja
scas
adc
mov
out
repz
mov
xor
aaa
aad
insb
and
jns
imul
mov
imul
enter
xor
in
ret
lret
jmp
fisttpll
or
hlt
repnz
pop
xchg
mov
xor
out
insb
adc
sti
std
cmp
sbb
pop
lea
xlat
imul
xchg
hlt
repnz
loop
cmp
sub
fwait
js
pop
idivl
pop
adc
addl
mov
je
popf
push
inc
pusha
in
mov
sub
jae
push
outsl
adc
and
sahf
rcrb
sub
and
mov
cmpsl
and
repz
ja
and
dec
mov
lods
mov
fbstp
xchg
fwait
ss
test
or
xlat
xchg
jbe
in
xchg
shrl
mov
cmp
jl
dec
sub
or
dec
jecxz
shrl
insl
dec
mov
jecxz
mov
std
cmp
fstpl
or
adc
push
orl
jge
movsl
mov
lea
loope
dec
mov
xor
sub
dec
ret
popa
sub
cmp
sub
sbb
add
mov
xor
xchg
lcall
int
mov
mov
repz
imul
sub
jae
xchg
ss
ret
mov
push
adc
cmp
inc
hlt
add
in
jg
cs
pop
fwait
nop
fdivrp
push
adc
mov
out
sub
in
xchg
mov
lret
pop
pop
xchg
dec
test
inc
call
insl
aaa
rcll
push
fadd
xlat
sub
sbb
sbb
adc
push
ret
test
into
es
imul
jg
inc
repz
ljmp
imul
stos
sbb
jne
adc
lahf
subl
lcall
loope
into
ret
or
insl
mov
and
adc
sbb
aam
aad
adc
cs
pop
jmp
lret
mul
stos
mov
jl
repz
or
mov
dec
ljmp
xchg
popa
jnp
push
jge
jb
pop
pop
sub
movsl
js
mov
mov
dec
in
mov
push
jnp
rorl
mov
mov
pop
test
dec
dec
xor
adc
mov
jg
adc
lock
rcl
popaw
dec
push
test
orb
popa
dec
scas
cmpsl
push
mov
divl
out
ds
cmp
push
push
xchg
xchg
mov
sbb
ret
inc
xchg
jp
and
and
imull
test
add
push
xchg
lds
mov
push
mov
xor
push
xchg
gs
je
push
pop
js
inc
mov
xchg
cmp
and
add
mov
sub
jnp
imul
and
or
add
add
imul
add
dec
testb
xchg
sbb
sub
push
rorl
repz
or
pop
push
out
das
fcmovnbe
inc
stos
notl
das
divl
or
insb
test
aad
pop
mov
popf
xchg
cmc
push
in
test
clc
jb
jge
lods
pop
or
push
jecxz
and
dec
ljmp
jno
fwait
icebp
roll
daa
mov
cs
cli
adc
das
mov
mov
jp
les
pop
push
icebp
int
stos
daa
test
mov
dec
icebp
imul
xchg
sbb
xor
lods
dec
pop
aam
data16
add
sub
pop
shrb
jns
outsl
or
rorl
pop
scas
push
call
push
mov
pop
loop
add
and
cs
inc
je
js
ds
ret
mull
cltd
hlt
pand
fisubl
pushf
fcmovu
ja
repnz
dec
imul
gs
gs
aas
aam
lret
xlat
pushf
lahf
adc
and
sbb
nop
enter
dec
test
xor
popf
in
sub
push
lds
and
xor
insb
les
imul
and
mov
pushf
push
xor
mov
int
mov
nop
add
sub
mov
dec
ret
ds
jmp
or
push
leave
sub
push
mov
in
js
xchg
add
rolb
gs
rcrl
fwait
mov
frstor
and
jge
rorb
lods
and
or
pop
fmull
repz
in
jns
lcall
push
xchg
fnstsw
mov
jae
inc
js
in
mov
push
adc
leave
mov
adc
fcmove
imul
stos
mov
mov
lcall
xor
hlt
shl
aaa
into
fldenv
or
mov
mov
mov
dec
lods
pusha
add
pop
jbe
mov
dec
cli
pop
test
mov
out
pop
fidivl
mov
dec
mov
mov
sbb
in
fdivrs
mov
or
mov
or
inc
insb
in
stos
sbb
lods
push
lock
xchg
xchg
lret
cltd
push
xchg
mov
mov
add
cmpb
das
arpl
popa
add
mulb
cld
repz
in
stos
or
lcall
xchg
cmp
popf
jnp
into
cld
cmp
fdivrl
xlat
xchg
aaa
dec
cmpsl
inc
mov
shlb
sbb
mov
cwtl
mov
jo
mov
mov
mov
or
mov
dec
cld
mov
int
jae
and
ljmp
mov
sub
jle
inc
fs
pop
ret
xor
stos
push
mov
xchg
sub
mov
dec
push
imul
pop
dec
push
jl
stc
xchg
push
sub
add
cmpsl
aaa
xlat
scas
push
xchg
scas
pop
icebp
dec
dec
loope
repz
out
xchg
fsts
pmullw
mov
dec
mov
dec
xchg
mov
mov
int3
in
cld
xor
jge
dec
pop
sub
int
push
fisubl
cmp
iret
jl
mov
data16
inc
push
hlt
jmp
fmuls
lock
push
add
cltd
inc
mov
push
cmpsb
sub
stos
mov
fucomi
repz
sub
mov
mov
in
shrb
es
xor
cmc
addr16
lods
cmc
jg
subl
fs
sahf
cmpsl
mov
insl
ljmp
cmpsb
scas
pop
xchg
mov
sbb
in
xor
sub
and
cmpsl
mov
leave
mov
pop
stos
pusha
int3
negl
stos
out
fldcw
scas
mov
add
cmp
cmp
fwait
sbb
popf
call
push
dec
mov
lahf
aad
cld
ja
jno
pop
fistl
lods
mov
jle
hlt
dec
inc
add
test
jmp
jbe
mov
push
stc
fwait
push
orl
fstpl
int
jo
xor
popl
xchg
pop
pop
pop
cwtl
mov
stc
adc
pop
outsl
cmp
fsts
jnp
pop
fwait
sbb
or
movsb
fistps
std
cld
mov
dec
xor
sub
mov
lret
or
outsb
fisubrs
loope
dec
lods
mov
jl
sbb
inc
or
lret
pop
xchg
mov
js
sub
repnz
cmp
movsl
mov
out
in
jecxz
push
icebp
lock
lds
add
lock
lods
sub
ss
in
sub
pusha
fcmovnb
push
jae
repz
roll
popf
push
add
ljmp
in
shlb
or
mov
mov
cld
lods
and
cmp
add
jno
inc
cmp
popa
sub
shl
cld
shll
sub
fcmovbe
adc
test
daa
push
cmp
sbb
outsb
mov
xor
imul
out
xor
lock
lahf
int
das
xor
inc
mov
jmp
popf
xchg
arpl
pop
insl
xchg
sub
cmpsb
andl
cli
cmpsl
shll
fsubrs
push
fsubrs
lods
mov
fmull
cmp
mov
dec
inc
inc
inc
push
mov
cmpsl
rcrl
or
mov
xchg
imul
jns
or
stc
mov
add
mul
imul
leave
sub
leave
pop
add
inc
dec
ljmp
aas
popa
jle
shrb
pop
xchg
fidivl
xchg
loopne
rcrb
hlt
aas
inc
and
dec
sbb
or
push
adc
out
clc
loopne
nop
sbb
std
inc
dec
movb
cmp
xlat
jne
mov
imul
lods
pop
sarb
scas
inc
sti
in
je
dec
lods
dec
aad
je
clc
fcompl
and
xor
gs
lods
push
rcrb
cmp
inc
sar
cmp
ret
push
add
insb
fidivs
push
sub
aam
cmpsb
sbb
inc
pusha
fnstenv
pop
arpl
jae
adc
pop
es
jne
aaa
sbb
mov
sbb
mov
filds
test
sub
jno
dec
push
bound
sbb
data16
sahf
xchg
dec
push
sahf
and
pop
daa
out
in
mov
cmc
sbb
inc
dec
into
adc
je
mov
outsb
outsl
pop
jo
push
mov
and
daa
lcall
cmp
outsb
xchg
sub
stc
ss
mov
mov
or
jp
insb
add
daa
leave
cwtl
orb
sub
push
push
loope
xor
fisttpl
cld
mov
add
in
jp
jp
jnp
adc
push
lcall
pop
add
xor
push
cmp
jbe
fwait
sub
inc
dec
push
lret
mov
pop
cmp
decb
and
jns
adc
dec
dec
mov
in
mov
fdivr
push
adc
jno
popa
movsl
ljmp
xchg
lret
mov
insb
or
cmpsl
xor
inc
mov
dec
sub
pop
scas
jmp
ret
add
int
inc
cli
sbb
jmp
sar
jl
test
loopne
pop
xchg
daa
nop
fldt
mov
arpl
arpl
sbb
jg
mov
push
xchg
push
jo
cmp
pop
xchg
pop
mov
cwtl
lret
push
push
and
pop
pop
fisttps
cmp
ds
in
mov
adc
aaa
popf
sub
and
dec
sbb
sbb
push
mov
pop
dec
mov
loopne
popa
mov
cs
mov
enter
ljmp
push
loope
add
hlt
cmpsb
dec
adc
pop
mov
out
mov
aam
xchg
btr
jl
mov
lahf
pop
cmpsl
jp
fsubrs
adc
jecxz
mov
xor
push
bound
pushf
push
cmp
sarb
sbbb
add
ret
int3
sbb
mov
cmpsl
imul
inc
out
daa
sahf
fstpl
fnstcw
arpl
mov
xchg
sbb
pop
hlt
aaa
mov
pop
aad
mov
movsb
sbb
pop
jp
jge
push
fnstcw
mov
mov
and
and
jle
cmpl
inc
jne
xchg
push
inc
movsl
cld
hlt
call
mov
cmp
popa
loop
pop
ja
add
stc
mov
mov
push
push
xchg
popf
test
mov
aas
insl
scas
das
xchg
mov
lds
push
pop
xor
sub
dec
and
repz
fsubrl
mov
rcrl
sub
sub
xchg
ficoml
push
imul
cmpsl
mov
ret
testb
push
fisttps
iret
insb
aam
imul
or
or
leave
jmp
xchg
lahf
subl
dec
cmp
idivl
xlat
js
jmp
jp
pop
cli
mov
jp
fdivl
lret
dec
push
jno
sahf
adc
in
mov
jns
outsl
lret
scas
jge
push
and
xlat
cli
in
xor
mov
insl
sbb
cmp
cs
jbe
inc
push
test
call
adc
fwait
xor
sbb
mov
subl
inc
outsl
das
push
pushf
or
lods
and
jae
sub
sbb
mov
popf
xchg
dec
lcall
add
adc
sbb
movsl
inc
in
js
adc
push
jmp
outsl
nop
leave
cli
in
mov
insl
scas
mov
lock
clc
add
daa
push
cmp
xor
cmp
pusha
jb
cmpl
jae
push
fidivrl
or
jp
jo
inc
push
adc
cmp
sbb
pop
and
sub
ds
aam
mov
lret
ds
pop
sub
shlb
or
xchg
xchg
orl
fwait
arpl
mov
sbb
or
push
jmp
xchg
mov
mov
xchg
jae
mov
popf
push
sahf
ret
rcr
aam
sub
jecxz
or
pop
and
push
adc
and
xchg
shlb
cmp
ljmp
xchg
popa
test
stc
fidivrl
mov
dec
ljmp
pushl
mov
int3
stos
pop
out
pop
mov
jnp
mov
pusha
push
dec
mov
jno
jae
sbb
popf
mov
shl
push
cmp
sbb
fbstp
mov
mov
fsub
mov
mov
in
inc
mov
sub
aas
pop
in
leave
sub
nop
notl
stos
lret
rol
sahf
out
sbb
or
add
pop
inc
stc
and
mov
popa
fldt
jg
sahf
arpl
andl
jno
or
xor
xchg
and
enter
push
rcrl
xchg
orb
fimuls
or
pop
sbb
pop
scas
add
movsb
fwait
mov
sub
insb
sbb
jmp
mov
jb
mov
outsl
mov
in
cld
rcrb
sahf
outsb
push
imul
xor
stc
lods
popl
cmp
mov
movsb
add
gs
mov
xor
fistps
movsl
imul
shrb
cmp
jnp
jecxz
xchg
add
sbb
push
in
mov
nop
fsts
pop
push
aas
mov
or
xlat
inc
pusha
lret
or
outsl
jbe
lock
adc
inc
scas
bound
ljmp
sbb
lock
mov
pop
xorb
ret
sub
out
cmp
shrb
repz
push
test
out
repz
mov
stc
jecxz
pop
insl
push
ret
hlt
jecxz
mov
mov
arpl
inc
pop
push
fnsave
lcall
andb
cmc
and
jae
pop
cmc
sbb
inc
daa
imul
aam
imull
push
mov
xchg
mov
pushf
or
outsb
and
adc
mov
repnz
enter
or
ret
cmc
data16
cmp
jbe
jmp
out
push
mov
cmpsb
xchg
pushf
icebp
out
inc
cmc
arpl
and
push
dec
popf
xchg
cmp
inc
jl
cld
lahf
mov
fstl
cmp
xchg
in
mov
pop
movsb
push
or
shr
mov
inc
sbb
xchg
cmc
addr16
repz
scas
enter
nop
or
sbb
pop
repz
adc
cld
mov
inc
aaa
xchg
xor
inc
or
add
jge
mov
cwtl
jns
sbb
and
loope
inc
mulb
cli
inc
jmp
sbb
mov
cmp
leave
popf
pop
jae
and
sbb
call
imul
addl
push
sub
decl
shrl
cmpsb
subl
cmp
xchg
mov
pop
sbb
jg
jmp
aad
ja
xlat
fwait
dec
pop
mov
andb
cmp
cs
mov
imul
add
rol
jnp
sbb
sub
mov
cs
in
xchg
sti
call
add
movl
fbstp
gs
rclb
dec
call
or
sbb
cmp
je
jno
cmp
insb
xor
add
lcall
mov
jle
xor
add
imul
add
cltd
pop
test
pop
in
rclb
pop
jecxz
push
ffree
aad
rcrb
ja
outsb
adc
dec
mov
adc
push
in
popa
ss
mov
sub
cmp
push
int
scas
add
and
adc
push
xchg
cmp
jl
push
int3
sub
sub
jb
push
jl
test
cli
sbb
hlt
inc
sbb
and
sbb
je
mov
xchg
add
add
fidivs
aas
test
add
aad
and
stos
add
dec
fdivr
pop
dec
adc
lods
dec
das
sub
xchg
inc
call
out
mov
dec
jge
lcall
fs
std
sub
jecxz
in
pop
xor
mov
pushf
pop
and
pop
mov
imul
push
cmp
lods
push
fsubr
out
pusha
test
clc
ja
loop
inc
icebp
imul
fdivrl
mov
leave
in
clc
dec
dec
cwtl
mov
cmp
mov
push
fiaddl
bnd
imul
pop
push
mov
mov
out
adcb
hlt
sbb
mov
mov
jb
sub
fwait
les
pop
sti
sbb
xchg
cmc
sbb
lock
adc
and
jb
hlt
push
leave
rcr
mov
jle
and
xchg
cmp
pop
cmc
mov
repnz
orw
dec
rorb
inc
out
pop
lods
push
mov
cwtl
mov
je
pop
iret
inc
jmp
xor
not
inc
out
xchg
add
push
jnp
mov
imul
loop
sub
jb
pushf
jle
sbb
cmp
and
inc
push
pusha
xchg
mov
xor
or
add
cmp
pop
leave
loope
mov
out
mov
cmp
pushf
mov
and
or
sbb
addr16
jmp
dec
mov
imul
and
jae
jne
cmpl
hlt
inc
aam
mov
popf
or
imul
xlat
sub
inc
or
fnstenv
push
stc
das
mov
call
int
mov
daa
insb
loopne
and
int
push
xor
cmp
mov
add
sub
lret
fstpl
shlb
std
jle
stc
jecxz
gs
push
pushf
and
add
lea
iret
sti
mov
jge
or
mov
daa
hlt
sub
sub
jmp
mov
xchg
out
outsb
dec
dec
ja
cmp
int3
cmp
lahf
adcl
or
pop
cmp
mov
adc
lods
stc
sbb
push
adc
add
jmp
iret
xchg
fwait
and
lea
mov
mov
sub
mov
add
inc
test
jg
pop
into
mov
fisttpll
ds
in
xor
inc
ret
xor
pop
push
cmpb
xchg
jb
xchg
iret
roll
out
scas
jg
mov
scas
jnp
ljmp
sbb
pop
addl
imul
dec
pop
xorl
outsl
and
out
add
inc
push
pop
aam
outsb
arpl
xchg
dec
xchg
push
cmp
add
pop
sub
cmp
push
adc
fxch
int3
sub
subl
or
jg
scas
sub
ret
das
outsb
inc
bound
mov
sbb
mov
xor
add
ret
loopne
jl
xchg
xor
xchg
in
cld
inc
mov
pop
mov
and
and
jecxz
repz
lods
push
arpl
in
lcall
jmp
movsl
faddl
dec
push
lahf
adc
mov
mov
push
xchg
dec
and
mov
rcl
xchg
sbb
mov
fidivs
mov
sti
pop
xchg
movsb
imul
in
fst
pop
and
in
xor
add
mov
dec
ja
jle
cmp
cmc
xchg
jnp
cmpsl
inc
addr16
lret
sub
sbb
jp
mov
cmp
jg
cltd
cmp
sbb
add
cmp
add
leave
mov
jmp
mov
scas
push
mov
popl
pop
sbb
jle
in
push
xor
ss
das
sbb
fistpl
mov
or
sub
xor
xchg
jle
xor
jge
pop
in
rcll
pushf
in
fidivl
in
dec
push
lock
shrl
clc
cwtl
xchg
and
jno
push
pushf
add
lret
mov
xor
test
mov
push
and
pop
inc
pusha
adc
fdivrl
ja
mov
loop
xchg
popf
inc
stos
sub
ret
pop
or
mov
pop
sub
xor
ffree
ret
sarb
xor
push
mov
adc
pop
and
inc
dec
sbbl
cmp
sbb
pop
cld
or
sub
push
mov
cld
jns
lds
sub
xor
movsb
gs
jp
and
and
or
inc
mov
mov
pop
push
mulb
xorl
mov
call
and
mov
in
dec
fsubrl
cmp
pop
cmc
out
ror
or
pop
jmp
ljmp
std
add
add
iret
xchg
push
mov
in
push
xor
movsl
pop
pop
cmpsb
je
xchg
rclb
sub
adc
sub
jnp
jo
adc
adc
iret
loopne
mov
ja
out
dec
push
cmp
enter
mov
jecxz
das
ret
sbb
sub
icebp
lock
lret
jnp
push
cmpsb
pop
cmp
xor
lret
mov
ljmp
mov
pop
stos
pushf
int3
inc
in
xchg
sti
nop
xchg
mov
mov
pop
repz
cmp
scas
sbb
jbe
negb
in
fstpl
pop
cmp
jmp
addr16
andb
cmpsl
cwtl
in
sbb
and
inc
xchg
push
call
popl
dec
xor
push
push
pop
xlat
std
stc
sub
mov
lods
cmp
and
out
mov
divl
std
mov
std
jmp
in
out
arpl
mov
jb
ds
xchg
lods
enter
sti
lahf
xor
xor
or
and
ja
pop
sub
dec
xchg
sti
int
adc
mov
cltd
mov
roll
push
cli
divb
cld
mov
inc
in
add
add
mov
iret
and
out
and
test
xor
sub
pop
inc
out
rcrl
mov
mov
cmp
cld
add
jno
bound
inc
sbb
adc
sub
pop
in
daa
repz
or
fldl
popa
inc
shrb
pop
mov
xchg
cwtl
xchg
sub
repz
shl
cmp
in
aam
mov
ret
cli
pop
pop
ja
shl
in
adc
notb
lret
dec
inc
jnp
repnz
xchg
xchg
jl
push
xchg
sbb
nop
mov
or
add
ficomps
sti
divb
and
daa
mov
jae
fimuls
cmpsl
int3
stc
xchg
test
je
iret
mov
sbb
and
dec
dec
push
les
pop
push
push
jp
pop
jno
loope
lret
adc
sahf
call
cs
and
in
js
ljmp
sbb
iret
repz
call
mov
lods
test
int
scas
jg
lods
cwtl
and
or
pushf
push
ja
sub
push
aaa
cltd
mov
mov
jg
enter
push
lock
pop
xchg
outsl
dec
in
push
or
scas
aas
jmp
xchg
fbld
jb
jp
fadds
and
push
cltd
imul
mov
mov
dec
cmp
ljmp
cmp
out
loopne
jecxz
xchg
jmp
push
jmp
std
mov
lret
push
push
add
xchg
jbe
mov
sub
dec
mov
mov
dec
mov
jmp
fadds
iret
push
js
je
push
cltd
icebp
mov
pusha
fistps
dec
and
mov
inc
in
ja
rclb
adc
mov
ss
out
iret
cmp
pop
in
inc
jmp
loop
lods
mov
mov
jns
mov
dec
in
ficoms
sbb
push
pop
or
pop
scas
push
sub
xor
mov
push
imul
je
pusha
sbb
mov
mov
inc
mov
and
test
sub
outsl
or
adc
imul
mov
jns
xchg
push
cmp
shl
mov
sbb
lahf
xchg
loopne
dec
push
pop
hlt
cmp
nop
cmc
dec
xchg
gs
aam
jl
sub
and
sbb
pop
adc
or
mov
cmp
stc
mov
repnz
dec
aam
push
sahf
inc
scas
sub
or
int3
push
sbb
loop
add
cld
stos
add
out
mov
outsl
insb
cmp
adc
icebp
mov
mov
orl
add
lret
in
lcall
push
and
imul
lret
into
cld
and
sbb
ljmp
out
loope
push
leave
and
test
int
add
push
pop
repnz
fcmovu
lret
sbb
sbb
stc
rorl
xor
aas
and
xor
rorb
push
xor
cmp
xor
daa
xchg
stos
mov
divl
fpatan
adc
fldt
lret
push
xchg
mov
lea
jl
lods
fsubl
mov
movsb
insl
idivb
jl
es
push
cmc
or
inc
push
pusha
scas
int3
cmpsb
xchg
mov
adc
xor
sbb
mov
pop
xor
mov
jbe
ret
or
out
pushf
pop
dec
jbe
bound
js
fprem1
pop
stos
lods
pop
pop
xchg
mov
movsl
jb
lods
xchg
roll
or
add
xlat
pop
cmp
xchg
repnz
jo
je
lret
inc
fidivs
roll
cmp
sub
or
fistl
insb
sbb
cmp
jmp
sar
xor
je
sub
enter
les
add
and
stos
mov
fdivl
xor
cli
data16
or
sarb
rcrb
mov
addr16
xchg
mov
lcall
in
shll
pop
push
lahf
push
sub
inc
je
cmp
pop
pop
and
dec
push
mov
in
int
and
xlat
jmp
sbb
insb
adc
test
adc
xchg
ret
cli
jmp
dec
mov
insb
jmp
js
aam
add
inc
add
adc
test
mov
addl
push
push
adc
ljmp
or
daa
adc
mov
or
pop
mov
mov
pusha
call
inc
dec
lods
stos
xchg
test
daa
adc
xchg
push
and
jmp
das
jb
inc
icebp
imul
xor
lods
push
or
jno
jo
aad
call
movsb
adc
ljmp
or
test
jge
scas
cmp
xor
cmp
cmp
movsl
push
aaa
pop
ds
jns
mov
xor
sarl
enter
dec
cmc
gs
inc
shrb
sub
mov
mov
aaa
xchg
loope
dec
inc
mov
jo
inc
ljmp
xlat
push
pop
ret
sub
fmull
push
xor
jecxz
mov
fwait
je
adc
sbb
fwait
or
into
sbb
jl
popa
mov
xor
dec
cmc
js
jge
sahf
scas
inc
fwait
sbb
mov
mov
sub
lahf
pop
jmp
cmp
dec
mov
or
out
dec
out
sbb
fcomps
and
lea
enter
test
rorb
cwtl
inc
or
test
sub
cmp
loope
into
push
mov
in
movsl
sbb
test
push
loopne
clc
fcmovnb
fistpl
jecxz
push
clc
rcll
or
push
mov
push
loop
xor
in
adc
sbb
push
jge
pop
xlat
mov
out
sarl
rcr
cmp
add
filds
std
shll
ret
cltd
add
scas
and
orb
inc
clc
and
mov
int3
inc
push
jl
aas
xor
adc
xor
sub
nop
sub
call
lods
daa
and
sub
mov
mov
les
ja
inc
and
push
xchg
stos
pop
xchg
push
lds
sbb
mov
adc
in
add
jo
lock
js
in
xor
dec
xchg
test
je
repz
or
aaa
jg
repz
jecxz
mov
fisttpl
aas
mov
jg
xor
or
notb
cmp
dec
xchg
lock
call
nop
dec
mov
notl
add
jge
sbb
mov
mov
mov
sub
sub
add
jae
pop
mov
aaa
jae
xchg
adc
fs
scas
inc
or
add
ss
or
pop
in
testl
pop
pop
scas
jmp
add
add
mov
cmpsb
pop
ja
sub
dec
int
or
fistps
daa
and
lcall
xchg
popf
and
sub
out
in
in
or
aam
dec
stos
or
loopne
jns
imul
cmpsb
add
cmc
mov
add
fistl
push
sbb
xchg
xor
xor
leave
icebp
and
adc
sub
mov
pop
cmp
mov
cmp
push
js
xchg
pop
outsb
add
rcl
test
inc
mov
or
jbe
into
jne
shlb
jae
adc
xor
adc
xchg
push
das
and
out
adc
cli
jbe
dec
mov
or
cmp
mov
mov
stc
lods
out
push
cmp
fs
ficompl
outsb
scas
sahf
das
xchg
adc
stos
add
jne
dec
ret
adc
in
or
jb
roll
in
sbb
xchg
loopne
cmp
mov
pop
jge
or
nop
popw
cmp
std
aam
out
dec
dec
add
push
mov
inc
sub
mov
nop
sbb
dec
scas
xor
test
std
outsl
xchg
imul
xchg
cmc
push
fisubrl
inc
es
rolb
pushf
in
stos
rorb
pop
outsl
jge
lret
lahf
int
int3
test
sbb
dec
push
data16
movsl
mov
rcl
int
ljmp
jge
repz
sahf
push
pop
jge
nop
push
or
cld
mov
out
pop
push
xor
dec
mov
pop
jno
xchg
add
jl
inc
sbb
jl
hlt
mov
ds
cltd
mov
mov
pop
test
push
xchg
fdiv
out
mov
repz
dec
and
lret
pop
jmp
adc
sarl
inc
mov
mov
pop
or
es
mov
or
inc
sub
ret
ljmp
xor
mov
imul
aam
mov
iret
bt
mov
pop
imul
jmp
sbbb
adc
push
ret
and
out
mov
cmc
gs
gs
add
pop
jmp
stos
ficoml
sbb
xchg
lods
fldln2
outsl
ret
or
mov
mov
mov
push
dec
imul
xchg
dec
daa
mov
into
and
push
lods
and
add
push
test
add
add
int3
adc
cmp
sub
mov
sub
or
shlb
ljmp
lock
sbb
or
repz
leave
out
xchg
cmp
xlat
movsl
mov
mov
dec
in
pushf
cmp
outsl
ficoms
adc
add
cmp
push
mov
add
add
adc
and
xchg
push
movsb
xorb
lods
dec
ret
imul
ss
cmp
aaa
push
jns
in
fistpl
outsb
pusha
pop
sti
call
mov
jns
jae
xchg
lods
mov
dec
hlt
jno
xor
test
inc
jne
mov
pop
loope
daa
sbb
mov
mov
enter
xlat
mov
xor
js
test
cmp
cmc
sbb
out
mov
sbb
add
fcoml
test
mov
adc
mov
mov
inc
pop
fs
mov
test
xchg
inc
push
subl
loopne
rorl
lret
imul
xor
jne
jo
lahf
movsl
movb
das
adc
rcrb
mov
pop
int3
cwtl
push
or
imul
ljmp
jno
adc
andl
xchg
push
mov
push
jno
xchg
or
mov
inc
outsb
scas
sub
and
pop
cmpsl
or
pop
xlat
je
jecxz
nop
mov
adc
in
push
aad
stos
sub
lock
xchg
mov
cwtl
lahf
les
rorb
aas
leave
pop
mov
in
jbe
adc
ret
arpl
daa
dec
add
inc
or
push
outsl
lret
mov
mov
or
and
sti
stos
in
sub
sub
icebp
xchg
pop
sbb
xor
cmc
pop
inc
dec
add
xor
adc
mov
xchg
sub
fisubs
dec
sub
mov
push
fstpl
fistps
mov
mov
daa
loopne
imul
ret
jbe
mov
mov
fisttps
jecxz
cld
pop
xchg
mov
fmulp
leave
je
push
sahf
pop
mov
or
mov
mov
mov
idiv
pop
xchg
push
jbe
or
cmp
rolb
aad
and
repz
jne
xor
repz
mov
pusha
cld
and
add
jge
pop
mov
stos
adc
addb
adc
xchg
mov
jge
aaa
stc
or
dec
pushf
adcl
mov
adc
pop
cmpsl
inc
mov
sar
fiadds
ret
subb
adc
sbb
aas
push
push
pop
xor
jmp
popa
sarb
xchg
ljmp
adc
repnz
fptan
lret
fwait
in
pop
cmp
int
stos
idivb
cli
ret
int
sbb
sbb
adc
repnz
dec
pop
test
pop
loopne
lcall
cmp
mov
and
adc
arpl
popl
jge
pop
jmp
jo
xchg
pop
cmpsb
xchg
loop
movsb
cmp
inc
pop
mov
notb
xorl
test
cli
cmc
sbb
rolb
pop
insl
fadds
cltd
shr
scas
jae
stos
and
mov
mov
pop
add
into
loopne
mov
adc
sub
jge
lock
lret
sub
lock
dec
push
mov
inc
cmp
jg
adc
ja
andl
adc
shr
or
inc
es
mov
push
js
push
sbb
insl
stos
push
or
mov
dec
cli
cmp
adc
mov
shl
cltd
mov
call
sbb
scas
mov
ljmp
xlat
and
gs
sbb
sub
push
mov
addr16
fnsave
enter
cmpsl
je
adc
fstl
jecxz
dec
and
mov
movsb
jmp
jl
stos
jg
cmpsb
add
mov
add
xchg
xchg
pop
add
jne
mov
mov
add
movsl
pop
xor
int
ficoms
lock
sbb
add
imul
add
mov
fs
add
xchg
push
insb
cmp
std
test
ja
dec
mov
xchg
dec
or
lret
aam
in
rorl
mov
cli
xchg
add
addr16
pushfw
cmp
adc
inc
scas
lret
addl
fwait
aaa
out
jg
and
push
sub
arpl
xchg
lods
shll
cmpl
jl
je
repz
xor
cs
dec
dec
scas
or
adc
frstpm(287
xlat
stos
jle
add
or
scas
js
ret
repnz
ss
cli
test
mov
repnz
inc
dec
std
ret
mov
lahf
cmp
faddl
popl
inc
pop
lods
jecxz
cmp
xor
jg
pop
pop
outsl
and
jne
loop
pop
popf
fwait
int3
jns
pshufw
aam
ss
cmp
insb
pop
dec
filds
xchg
clc
xchg
loop
jne
or
rclb
jmp
lods
mov
lcall
ss
pop
les
xchg
push
push
outsl
push
xchg
push
mov
mov
sahf
out
fsubrl
push
aas
push
mov
sbb
mov
ja
inc
pop
sub
arpl
push
jg
lea
outsb
sahf
pop
fldt
sbb
dec
fbstp
sub
mov
inc
pop
cld
pop
cmpsl
jmp
cmp
lret
jmp
sti
out
hlt
mov
test
stos
fdivl
push
jo
je
xor
pop
mov
subl
jae
dec
lock
das
and
sub
mov
sub
pop
jmp
pop
imul
sub
sbb
or
inc
adc
dec
lea
movsb
test
or
scas
xchg
repz
cmc
rolb
int
negl
jge
int
mov
adc
aaa
fxch
add
and
mov
gs
jbe
cmp
cltd
xor
adcl
mov
loope
int
lock
js
jmp
add
pop
out
jp
clc
fstpl
push
inc
push
mov
loop
push
or
adc
rorb
pop
cltd
hlt
push
leave
jg
mulb
or
mov
dec
sbb
daa
mov
pop
xchg
aas
dec
ret
movb
in
mov
mov
imul
sbb
outsb
adc
push
adcl
pop
sti
cmp
cs
pop
sbb
loopne
dec
dec
xor
jbe
jp
mov
xor
bound
push
repnz
fcoml
ret
shlb
lea
repz
rclb
cmp
jle
or
addr16
mov
inc
mov
cmp
rcrb
rsqrtps
pusha
stc
stos
or
jl
aam
cld
aad
dec
mov
jmp
or
sub
fstpl
pop
movsb
jnp
inc
lret
mov
xchg
in
sub
add
mov
add
stc
shlb
sbb
cmp
aaa
cld
or
jnp
mov
cmp
stos
incb
in
fmulp
add
cmp
and
mov
test
pop
mov
ljmp
rcl
xlat
sbb
xor
cmpl
sub
data16
cmpsl
ds
mov
jb
mov
imul
cmc
inc
sarl
pop
js
jg
jo
xchg
fstl
push
add
fistpll
enter
dec
loope
lock
push
popf
lods
sbb
sti
pop
add
sbb
cmp
stos
sbb
fidivrs
mov
push
test
or
lea
clc
mov
add
icebp
aam
loopne
push
sub
fstl
or
insl
dec
movsb
xor
xchg
dec
lods
jne
outsl
jne
jp
shrl
aad
lods
cltd
xchg
pop
lcall
pop
xor
add
cli
inc
add
ds
pop
arpl
pop
sub
push
clc
cli
mov
and
fisubrs
cwtl
inc
cmp
sbb
movsl
jmp
inc
aaa
mov
dec
movsl
inc
fmul
sti
mov
and
add
mov
mov
pusha
nop
inc
lods
scas
sysenter
in
lret
cmp
out
mov
and
jo
pop
inc
xchg
leave
xchg
mov
inc
mov
sub
addb
sbb
int
out
jp
cmpsb
mov
iret
xchg
mov
enter
adc
mov
pop
test
xchg
xor
push
dec
and
in
add
aam
mov
int
scas
sub
fnsave
mov
decl
lahf
push
inc
sbbl
mov
cs
fmuls
xchg
pop
mov
xchg
mov
dec
mov
inc
mov
xor
push
scas
stc
lret
mov
dec
sbb
jns
stos
aas
xor
inc
jo
or
std
sbb
or
sub
pop
mov
fisttpll
inc
js
out
cli
push
arpl
scas
add
push
addr16
in
cld
xchg
jmp
lcall
test
scas
xorb
in
push
mov
ret
mov
mov
ljmp
inc
xlat
push
pop
mov
clc
mov
cli
ret
mov
icebp
adc
mov
cwtl
cltd
push
mov
out
pminsw
clc
jne
ret
push
leave
xchg
int
or
cmp
pop
mov
enter
inc
pop
imul
add
movsb
into
mov
xchg
add
fnstsw
inc
icebp
insl
sbb
or
lret
lret
xor
in
sub
and
rorl
fs
cld
push
push
inc
or
test
sbb
mov
stos
popa
adc
loopne
addb
lret
call
rorl
sub
sub
jno
and
mov
mov
sub
mov
adcl
dec
fdivl
test
xchg
inc
dec
cli
ficompl
ljmp
shl
pop
jge
in
pop
cmp
sub
loope
cld
push
pop
std
lret
mov
lahf
les
das
lock
mov
sahf
dec
movsl
aam
mov
adc
mov
pop
xchg
xor
insb
cs
pop
mov
loope
sbb
gs
cmp
lock
fcompl
lds
fwait
pop
out
dec
mov
dec
mov
sub
pop
loope
xchg
rcrb
add
fmuls
outsb
sub
inc
sbb
push
lea
sbb
pop
aad
lcall
in
call
cmpsb
push
lods
push
adc
into
test
mov
js
loope
push
dec
mov
outsl
movsb
daa
jbe
idivl
mov
adc
add
imul
add
pop
mov
out
xchg
cmc
cld
push
popa
orl
inc
mov
adc
cmp
mov
andb
cmp
aam
insl
pop
sbb
pusha
push
test
pop
xor
les
cmp
mov
nop
or
jl
mov
enter
mov
adc
das
scas
movsb
int
mov
shrl
and
xor
movl
pop
adcb
jo
lods
rorb
adc
sub
in
out
pop
fwait
stos
stos
inc
cltd
in
push
lret
add
and
mov
push
in
loop
bound
xchg
adc
movsb
add
fdivs
push
sub
or
adc
mov
fs
loopne
jmp
imul
mov
pop
push
jb
xlat
sub
out
cmc
sbb
xor
push
subb
clc
push
je
mov
pop
mov
mov
fs
sub
pop
aaa
fbld
je
dec
sahf
mov
jle
adc
out
sbb
mov
lret
in
pop
jo
push
pop
sub
or
mov
repnz
call
xchg
cmc
lock
div
adc
add
pop
scas
andb
enter
fistps
std
scas
and
test
mov
repz
cmc
push
lea
cmp
push
lcall
shll
and
leave
insl
popf
dec
and
lods
jbe
leave
push
es
pop
je
sub
scas
pop
xchg
sbb
jo
xchg
out
adc
pop
repnz
mov
and
addl
and
prefetchw
jbe
movsl
pop
pop
xorb
das
into
and
dec
mov
rcrl
fimuls
mov
dec
cmp
cmpsl
rclb
cmc
into
dec
jo
hlt
addl
add
cli
add
mov
adc
lods
imul
add
jns
nop
sub
jl
pop
xor
add
ffreep
pop
jl
inc
push
les
mov
mov
sub
pusha
stos
lcall
nop
xlat
jmp
sub
cwtl
xchg
in
pop
xchg
sub
push
push
add
and
dec
lret
pop
xor
push
insb
dec
aaa
leave
inc
or
loop
xor
js
mov
outsb
fwait
push
fisubrl
in
jecxz
insl
push
mov
jg
xchg
cmp
cli
dec
adc
mov
fistps
cmp
stc
stos
enter
loopne
or
mov
add
xor
fst
sub
pop
movb
dec
mov
xor
push
or
jmp
dec
push
jo
dec
or
loope
xchg
enter
jno
mov
ds
mov
pop
xchg
add
xchg
xor
pop
mov
jle
popf
mov
ret
rcrl
xor
mov
fwait
popa
xor
testb
leave
imul
dec
data16
cltd
dec
pop
or
pop
imul
loopne
jg
push
stos
pusha
push
int
mov
rol
jmp
xchg
add
data16
mov
jecxz
and
push
xchg
scas
xor
jle
gs
test
push
roll
iret
xor
stos
les
pop
shrl
sbb
cmpsb
inc
out
push
dec
inc
aaa
mov
xchg
mov
imul
jle
dec
rcrb
inc
adc
cmc
or
cli
cmpsb
dec
imul
adc
adc
inc
iret
jae
jle
call
mov
lcall
into
inc
mov
idivl
or
out
and
push
push
cmp
test
inc
inc
sar
pop
cmp
mov
fnstenv
cltd
shr
ss
pop
lret
xchg
mov
add
mov
ja
cmc
in
push
out
daa
push
std
loopne
lcall
push
das
mov
leave
jbe
pusha
sbb
mov
mov
mov
test
in
jmp
subb
out
inc
mov
imul
mov
inc
mov
out
mov
push
lods
mov
pop
pop
push
adc
and
lods
pop
in
iret
jno
cmp
or
fcomi
sahf
dec
push
loopne
loopne
sbb
dec
add
jne
xchg
dec
js
pushf
jnp
cld
stos
stc
sarl
into
sbb
andl
dec
add
adc
pop
mov
adc
mov
xchg
into
mov
mov
es
mov
add
jl
push
or
test
dec
outsl
test
loopne
addl
sti
push
xchg
shrb
cltd
xchg
lahf
fmuls
fisubrs
inc
dec
dec
inc
mov
into
push
lcall
lods
insl
cmc
out
xchg
test
arpl
jle
into
and
jmp
xchg
stos
lea
hlt
jle
imul
mul
push
cmp
push
cmp
cwtl
ret
fdiv
jno
aas
cmpsb
adc
mov
sub
icebp
inc
sbb
scas
insl
fimull
cmpsl
nop
aaa
icebp
xchg
cmpsb
cld
cmp
push
push
int
jb
sbb
fwait
mov
decl
ficoms
test
int3
mov
loope
inc
rdtsc
mov
mov
dec
push
mov
adc
rcll
mov
ret
cltd
ja
push
aad
sbb
test
pop
mov
leave
fisttps
xor
cwtl
outsb
dec
or
xor
hlt
jle
xor
xchg
pushf
fiaddl
int3
jnp
jle
mov
iret
jns
out
add
pop
clc
insb
aaa
icebp
dec
sub
test
xchg
jge
mov
neg
xchg
mov
out
test
daa
cmpb
rcrl
stos
sub
cltd
mov
divl
lods
cmp
jp
xchg
daa
push
andb
push
jo
ss
cmc
popa
loop
in
mov
ja
xorl
int3
jnp
fidivrs
push
add
mul
xchg
js
sub
push
jecxz
fdivs
lret
sub
sub
popf
stos
gs
mov
data16
outsb
insl
dec
add
and
es
inc
in
hlt
adc
dec
dec
or
xchg
bound
mov
jbe
push
mov
rcrl
mov
and
push
jge
jno
mov
dec
into
jp
sti
pop
adc
add
pop
inc
xchg
in
fdivrs
jno
add
lahf
adc
sbb
popa
loope
xchg
mov
gs
xchg
xchg
mov
mov
imul
stc
sbb
hlt
sahf
loope
ljmp
out
cmp
out
adc
arpl
gs
and
das
inc
gs
fimuls
fwait
aas
add
mov
xlat
lea
sbb
add
imul
add
ret
arpl
cwtl
stos
aam
insl
stc
push
and
insl
cld
sbb
mov
pop
pop
pop
and
lret
pop
pop
fldcw
mov
mov
sub
mov
aas
fsubr
leave
xchg
loop
rcrl
inc
lret
xor
xchg
or
jno
pop
push
dec
lock
call
jne
lods
sbb
mov
iret
and
mov
mov
int3
mov
or
cltd
orl
sti
mov
roll
sub
aaa
in
jne
shl
addr16
and
aaa
jmp
sar
fnstsw
push
cli
inc
rcll
push
jp
nop
inc
mov
dec
and
les
stos
adc
cmp
cmp
shrb
leave
test
mov
jb
adc
jecxz
push
or
jl
mov
adc
xchg
mov
jns
add
mov
in
xchg
and
in
ss
in
add
mov
lretw
cmpsl
outsl
inc
xor
std
add
and
icebp
xchg
cld
and
xchg
movsb
push
icebp
loopne
popf
cs
sbb
gs
loop
and
out
and
push
inc
test
xchg
jge
or
mov
fmull
das
imul
out
or
sbb
ja
jno
adc
sub
push
data16
loope
sub
cmpsl
mov
scas
jo
push
add
push
mov
addl
fdivrl
mov
add
pop
jae
mov
js
dec
movl
mov
clc
cmp
sbb
xor
addl
repz
dec
loop
or
mov
or
loop
das
sbb
sub
inc
inc
jecxz
xlat
fimull
stos
mov
cmp
mov
out
lods
xor
movsb
fs
cltd
pusha
loope
mov
clc
inc
jne
imul
jne
adc
loopne
data16
mov
test
inc
and
les
mov
inc
iret
lds
fwait
jo
lods
push
xlat
push
push
dec
outsb
iret
ret
pop
inc
sbb
into
ret
ja
imul
fwait
adc
inc
call
push
leave
std
aad
cmp
and
loope
adcl
inc
les
mov
mov
dec
out
int
jp
push
inc
fs
dec
lock
mov
adc
orl
addr16
test
dec
xlat
mov
clc
mov
cmp
cmp
call
addl
sbb
enter
jo
cs
subb
repz
lret
lods
repz
xchg
scas
loop
jecxz
push
sbb
xor
mov
and
nop
pop
lret
rolb
aam
in
icebp
repnz
in
dec
push
mov
or
cwtl
gs
inc
and
addr16
cmp
mov
stc
aas
cwtl
push
aam
int
add
jnp
mov
dec
and
sub
jno
inc
nop
lea
adc
jl
sub
xchg
popa
cmc
cli
or
fldl
dec
adcl
stos
add
loope
xor
leave
out
or
xor
cmp
pop
or
pop
lds
jne
jmp
sahf
pop
mov
ss
xor
mov
push
add
ljmp
out
push
addr16
or
repnz
xchg
push
stos
jmp
test
shll
lahf
test
int
dec
or
mov
xchg
in
clc
ret
movb
iret
inc
repz
sbb
mov
jl
xchg
imul
fsubl
jmp
pushf
test
push
push
fisubl
xor
xchg
int
mov
in
ljmp
cmp
stc
jmp
pop
dec
loope
leave
aam
pop
mov
xor
cmpb
pushf
shr
inc
xchg
test
dec
in
mov
je
push
jecxz
arpl
ficoml
jae
mov
loopne
into
inc
xchg
jle
xchg
ficoms
pusha
mov
mov
xchg
add
cmp
scas
dec
sbb
mov
push
ljmp
cmp
push
push
repz
jl
jnp
jne
cmp
cmp
out
out
repnz
out
loopne
stos
sub
push
or
ret
mov
push
je
adc
test
cld
fists
mov
inc
mov
push
jno
stc
xor
or
addr16
test
in
cmc
popf
xorl
cmpsl
imul
inc
pop
stos
insl
inc
dec
inc
popf
or
push
mov
push
adc
int3
jge
cmp
mov
jge
mov
jl
imul
ret
decl
ret
lcall
cli
ss
stos
xchg
jo
or
rcr
ja
and
hlt
mov
dec
add
sub
dec
stos
stos
cld
sbb
es
ss
dec
dec
movsl
mov
sbbb
jecxz
sub
mov
outsl
addr16
out
daa
repz
xchg
adcb
and
movsb
loop
test
and
xchg
lods
cmpsb
sub
cmc
mov
movsl
pop
pop
cmpsb
std
sti
cmp
xor
je,pt
push
inc
push
and
xchg
dec
cli
mov
mov
cmp
fiadds
stos
add
je
sub
daa
mov
ret
xchg
stc
js
fmul
xchg
lods
imul
push
lahf
or
lods
adc
pop
mov
mov
push
lret
stos
adc
fs
cmp
call
les
inc
fmuls
mov
adc
xchg
gs
mov
add
lock
pmaxub
mov
rcl
call
jns
and
stc
out
ds
lock
inc
sarl
sbb
xorl
push
mov
inc
in
incl
mov
call
mov
lods
push
cwtl
dec
jne
cmp
loop
inc
je
xor
stc
cmp
and
aad
push
cmc
mov
xchg
mov
nop
lea
and
cmpsl
sub
add
fiaddl
ja
mov
test
inc
jns
idivl
mov
shll
cmpsl
cmp
and
mov
shld
dec
sub
add
adc
adc
mov
cs
inc
clc
fstl
sbb
imull
mov
pop
pop
add
jmp
xchg
lea
test
push
arpl
dec
fbstp
xchg
inc
mov
adc
jo
cmp
nop
mov
jl
cmp
stos
cld
dec
jno
aad
pop
push
das
arpl
push
mov
sarl
cwtl
xchg
ficompl
sbb
mov
mov
push
mov
cli
int3
and
adc
pop
push
or
add
jg
stos
mov
sarb
pop
or
add
add
cltd
or
and
xchg
addr16
jp
fstl
mov
mov
jg
sub
mov
mov
iret
pusha
jecxz
dec
scas
scas
mov
popa
mov
rorl
xlat
dec
push
xor
dec
shlb
and
fsubrl
jecxz
mov
lea
cltd
rcll
es
ja
mov
imul
daa
xchg
cwtl
xor
xchg
push
out
lea
inc
lret
add
mov
push
or
sub
mov
in
and
xchg
ja
adc
add
dec
stc
inc
mov
jl
shll
pusha
sbb
insl
cmpsl
incl
sub
lods
cltd
sub
hlt
test
mov
xor
xchg
insl
adc
jne
add
lock
bswap
les
mov
aam
push
jns
and
sbb
or
cwtl
stos
jb
cmp
sbb
stc
aas
mov
ficomps
cmp
push
scas
movsb
leave
push
stc
add
jno
out
mov
mov
pop
rorl
clc
and
pusha
mov
testl
jl
out
push
push
push
jg
xchg
jl
out
xlat
insb
push
xor
sti
push
mov
pop
mov
dec
xchg
lods
in
mov
imul
sub
les
xor
adcb
xlat
jo
push
subb
ds
and
fisttps
lahf
stos
add
sub
cld
pop
mov
cmc
test
mov
ja
pop
je
mov
cmp
in
inc
ret
lods
test
push
cmc
sub
adc
fwait
out
sub
call
mov
imul
pop
scas
push
push
push
stos
pop
and
sub
or
sub
clc
adc
lds
sbbb
mov
outsb
call
cmp
or
fs
jo
loope
out
or
lret
jg
js
jnp
pop
inc
mov
repnz
gs
aam
jmp
ret
jmp
repnz
leave
mov
repz
sbb
sub
and
cmp
mov
inc
mov
jg
fwait
mov
lods
or
cwtl
xor
test
xor
or
lret
divl
dec
sub
mov
std
and
jns
pop
daa
xchg
mov
je
sub
pop
xchg
popf
movsb
pusha
inc
ret
adc
xor
popa
adc
movl
rolb
divb
mov
pop
in
dec
pop
cmp
mov
dec
test
nop
pop
test
inc
mov
push
clc
inc
mov
sub
xlat
pop
cld
popa
jmp
movsb
stos
xor
adc
push
inc
out
jno
jb
daa
add
pop
or
movsl
and
sbb
cli
fidivs
aaa
jg
popf
dec
cmp
mov
aaa
sbb
jbe
sbb
fs
xlat
mov
and
in
scas
and
adc
adc
pop
xchg
out
test
cmp
xchg
cmpl
mov
loope
aas
out
mov
imull
lcall
fwait
insl
shll
mov
jge
stos
mov
inc
pop
jmp
xchg
pop
mov
inc
in
pop
or
out
inc
adcl
lcall
iret
lcall
cld
jp
repnz
popf
dec
inc
mov
in
lcall
fsubrl
lea
push
dec
js
xor
pop
adc
adc
xor
rcll
arpl
imul
clc
push
xchg
das
or
mov
cmp
jge
pop
push
cltd
xor
pop
mov
sarl
mov
pop
jmp
dec
xor
int3
inc
insl
pop
jno
test
cmp
hlt
jne
cs
xchg
jg
lds
insl
testl
mov
inc
pop
xchg
xchg
popa
mov
popw
mov
add
mov
icebp
aam
iret
xor
add
mov
ss
lret
push
jae
fstpl
in
inc
incb
cmp
lret
or
repnz
int3
sbb
inc
movsb
sub
testb
inc
sahf
sti
and
inc
jmp
cld
jb
xor
push
loop
and
mov
inc
xorl
fdivl
mov
xor
sti
push
and
adcl
pusha
pop
out
mov
fwait
inc
pop
mov
adc
inc
mov
mov
mov
movsb
pushf
adc
lea
mov
subl
jae
rolb
adc
mov
jno
xchg
mov
cmp
loop
xor
push
and
sub
and
popl
mov
out
movsl
add
fldcw
xor
lods
add
hlt
lea
pop
mov
loopne
push
push
mov
xor
mov
aad
push
mov
out
sub
rorb
imul
pop
inc
push
cwtl
mulb
mov
mov
xor
std
int3
fildl
mov
ss
outsl
pop
sbb
clc
out
dec
fwait
jge
lahf
push
ja
xor
push
adc
lods
sahf
nop
in
daa
addb
jmp
dec
sub
sub
sahf
in
or
xchg
out
xchg
cmp
inc
xor
out
mov
sub
insb
or
mov
xor
sub
push
push
insb
data16
cltd
shll
add
subb
fisttpll
arpl
xchg
lcall
inc
iret
movsl
scas
mov
idiv
mov
push
push
sbb
push
add
push
data16
ds
mov
js
adc
mov
dec
mov
jp
sub
mov
cli
sub
jmp
inc
mov
ret
mov
xor
or
mov
scas
loop
and
sub
add
cmp
jne
push
insb
pop
mov
mov
mov
jle
cmp
push
inc
or
cld
xchg
push
test
mov
mov
arpl
jo
fldcw
mov
shll
in
inc
add
jns
aad
lock
mov
inc
push
into
dec
mov
cld
lret
or
iret
sub
add
xor
push
ljmp
jo
pop
xchg
pop
pop
aas
cmp
xchg
inc
lahf
pop
push
add
shll
insb
shll
push
mov
inc
push
push
insb
mov
out
cld
aaa
mov
ds
dec
add
sub
push
ja
ds
mov
arpl
mov
push
jb
mov
cld
add
pop
pop
popf
add
in
xor
sbb
out
cmp
repnz
mov
or
adc
add
add
ds
sub
lcall
insb
add
stos
mov
push
mov
movsl
cmpsl
je
mov
mov
ljmp
pop
hlt
jmp
dec
imul
lods
ffree
cwtl
xor
insb
out
jb
adc
xor
or
repnz
xchg
jne
cmpsl
and
or
push
cmp
inc
add
fstpt
das
inc
inc
fisubl
test
stos
movsl
popa
and
and
push
mov
ret
dec
stc
mov
push
dec
aas
xor
scas
fldcw
jbe
dec
iret
cmp
pop
gs
iret
stos
xor
arpl
call
es
ja
mov
arpl
dec
cs
or
in
mov
add
test
cmpsb
inc
xor
rcl
sub
mov
mov
lods
mov
test
bound
test
sub
and
aad
adc
subl
jp
lret
and
dec
mov
cli
jo
call
jne
call
dec
repz
sti
ret
xchg
mov
es
setle
jecxz
push
movsb
sub
ljmp
xchg
shll
mov
push
push
mov
dec
jne
and
adc
xor
mov
arpl
lahf
ja
pop
mov
xlat
arpl
out
ficoml
xor
in
and
jne
or
maxps
xchg
clc
jae
xor
repz
dec
jnp
pop
pop
addr16
cmp
mov
pop
mov
cmp
pop
out
cmpsl
jmp
mov
pop
sbb
mov
popf
mov
add
arpl
sbb
in
sbb
cs
js
int3
xor
out
cmpsl
pop
fisubrs
test
in
mov
leave
out
gs
fistl
popa
jbe
inc
jno
dec
push
insl
adc
into
aaa
faddl
jno
and
xor
ss
arpl
mov
mov
popa
sub
xchg
xor
xlat
mov
lock
xor
adc
or
mov
or
pop
jne
jge
aad
pop
jbe,pn
call
adc
or
out
cltd
clc
rcll
sub
rorl
repz
test
xchg
pushl
fimuls
cmp
fcoms
pushf
call
inc
enter
xchg
fld
cmp
je
loope
xchg
les
add
repz
es
add
pop
lahf
js
and
pop
push
sub
cmp
fs
imull
dec
mov
scas
rolb
pop
fcos
cmp
test
mov
out
das
jp
xor
or
mov
jmp
dec
pop
mov
sbbb
cli
mov
adc
cli
pop
mov
loopne
inc
fdivs
push
std
dec
in
movsb
xchg
push
cmpsb
loopne
or
and
fidivrs
popa
shrl
cmp
call
adc
call
xchg
xchg
andl
xchg
mov
scas
stos
xchg
cwtl
mov
add
mov
mov
shll
xchg
lds
mov
test
sub
push
push
popf
mull
pop
jnp
push
xchg
sbb
ficomps
imul
mov
repz
jb
loope
stos
xchg
jns
insb
and
int3
and
lret
dec
pushf
mull
xor
dec
mov
repz
out
dec
inc
scas
jo
sbb
xchg
movsl
bound
adc
loop
daa
mov
in
ja
jnp
ret
mov
outsb
pop
inc
pusha
jp
fcmovnbe
lods
bound
sbb
dec
sub
mov
fcoml
dec
ss
mov
mov
gs
ret
gs
mov
lret
pusha
sub
enter
mov
out
sbb
mov
leave
inc
fcomp
mov
or
mov
dec
rcrl
ds
and
jge
shl
js
sbb
ret
xorl
stos
testl
in
jns
in
mov
int
iret
sub
sbb
andb
mov
std
dec
filds
ficompl
lea
cwtl
and
loopne
mov
fmul
and
imul
insb
outsl
jo
jecxz
loope
mov
xorl
mov
int
in
and
mov
xchg
dec
dec
aaa
fildll
imul
sti
out
hlt
inc
inc
jp
cmp
movsl
xchg
loopew
inc
or
cli
cmp
sub
mov
mov
jge
jne
sub
sbb
gs
idiv
jb
imul
push
push
add
or
mov
jno
int
adc
mov
leave
push
sbb
jo
imul
aaa
mov
and
shrl
imul
push
xchg
inc
movsl
pushf
or
add
sbb
into
cli
inc
adc
mov
push
sbb
js
or
cmp
push
ja
mov
daa
in
aaa
or
push
daa
in
pop
mov
mov
adc
push
mov
aam
in
mov
mov
mov
mov
sahf
pop
imul
insb
insb
cmpb
int
mov
loope,pn
add
sub
pushf
sbb
mov
ficomps
fsubrp
add
cltd
lret
mov
sti
dec
xchg
movsl
and
push
je
add
mov
jmp
lret
hlt
jl
push
jmp
jb
push
mov
inc
es
arpl
cmp
addr16
flds
cli
int3
sub
and
outsb
insl
mov
leave
push
subl
add
clc
hlt
pop
xor
adc
jle
repz
mov
sbb
mov
ss
loop
cmpsb
cmp
and
mov
sub
mov
xchg
pushf
lret
int
popf
push
cmp
mov
xor
xlat
pop
pop
inc
aad
jb
and
push
mov
inc
sub
mov
jnp
testl
shl
mov
into
aaa
add
and
popa
jae
xor
stc
mov
in
jae
scas
fistpll
int3
lds
xchg
xchg
in
mov
mov
cltd
jecxz
and
out
ljmp
xor
data16
jae
inc
sbb
mov
lods
and
inc
or
notl
jg
out
or
push
and
pop
or
mov
stc
imul
xor
cmp
out
lods
jnp
dec
lock
jb
dec
or
push
repnz
pop
mov
or
subb
int
sub
push
js
pop
pop
add
andb
cld
bound
inc
iret
xor
add
imul
add
je
mov
inc
rolb
xchg
fwait
leave
sub
loopne
call
mov
jb
push
dec
rolb
mov
cmpsb
push
mov
xor
push
mov
mov
xor
ret
mov
mov
out
lock
cmp
jmp
push
addr16
pop
push
lcall
xchg
pop
cmp
xor
pop
jne
push
lods
sbb
cmp
push
mov
popa
in
sub
cwtl
pushf
jl
push
outsl
dec
mov
jnp
inc
and
sbb
push
mov
push
xor
aam
scas
enter
and
cmp
fnstcw
pop
mov
je
pop
sbb
clc
jp
push
cmp
jle
popa
test
test
xor
inc
mov
cmp
and
out
xor
add
cli
incl
xor
dec
xchg
xchg
into
xor
sub
add
stos
add
xchg
jo
mov
cmp
pusha
gs
ljmp
dec
xor
daa
popf
jmp
xor
adc
mov
repnz
sti
negl
dec
jb
sbbl
pop
shl
ret
mov
fistps
xchg
lods
push
add
cmc
xchg
out
mov
into
scas
inc
and
leave
stc
and
lret
or
into
cltd
ja
imul
incl
mov
or
js
stc
lea
xor
pop
fnstenv
out
push
pop
mov
dec
push
push
shl
jmp
adc
sbb
pop
or
sub
and
adc
push
ret
data16
pop
mov
mov
jnp
jno
sahf
jne
gs
out
aam
fs
imul
lods
cli
mov
clc
xchg
push
sub
mov
xor
xor
out
pop
gs
into
in
dec
add
mov
icebp
mov
sbb
push
mov
aad
dec
sub
mov
jmp
outsl
jp
cli
mov
movsb
notb
mov
jl
xlat
rcrl
inc
or
shl
sahf
jge
pop
mov
cli
divl
cmp
mov
sarl
sbb
lea
push
mov
lret
adc
mov
frstor
dec
lea
ds
pop
and
mov
adc
push
addl
mov
add
xor
rcll
stc
pusha
lock
popa
xchg
cmp
xor
push
dec
mov
push
jmp
xchg
dec
xlat
test
jmp
sbb
push
xor
mov
jle
pop
mov
mov
pop
add
sahf
aam
mov
jbe
xchg
pop
idivl
popa
and
pop
imul
popf
mov
mov
clc
jbe
icebp
sbb
and
push
cmc
cmpsl
pop
cmp
mov
mov
into
push
fstpt
or
scas
and
xchg
lcall
ljmp
sub
in
sub
adc
xlat
mov
mov
rcrb
mov
stos
xor
jbe
insl
mov
jle
inc
jae
test
mov
icebp
and
pop
xorl
and
mov
mov
dec
les
shlb
loopne
in
in
xchg
enter
jne
dec
clts
inc
outsl
jo
std
sub
lret
aas
sbb
xchg
in
or
lds
addb
pop
dec
leave
lods
mov
int
push
sbb
xor
lods
xchg
fdivrs
push
xorl
fsub
pop
mov
repnz
mov
lcall
jno
lea
call
push
dec
cmc
mulb
popf
sbb
fmul
jnp
into
push
jnp
movlps
push
jno
xchg
lds
xchg
test
xchg
jne
mov
xlat
stos
push
sahf
push
pop
jmp
push
mov
mov
add
je
dec
push
mov
adc
hlt
push
mov
loop
jecxz
cld
inc
icebp
jne
or
les
cwtl
idivl
push
call
ret
in
inc
adc
test
mov
fucomi
dec
lods
adc
repz
lods
sub
dec
fdivs
jmp
jle
outsl
orl
adc
cmp
and
lahf
push
pop
cmc
xlat
ret
bound
ds
andl
push
sub
or
adc
movsl
sti
out
adc
pop
mov
pop
icebp
addr16
add
jge
pop
or
lahf
cmp
xchg
cmp
sub
inc
cmp
ss
adc
cmpsb
insl
outsl
push
fstps
inc
xor
adc
and
aaa
divl
lds
push
cmp
mov
inc
pop
popf
jge
or
sbb
push
ljmp
shrb
cmp
mov
cli
cmpsl
jle
lods
stos
inc
lds
stos
pop
jmp
or
fdivrs
movl
outsb
jge
jnp
xlat
into
mov
clc
dec
pop
sub
stos
mov
in
xchg
jne
add
and
sub
jp
mov
pop
xor
lcall
fisttpll
fstpt
inc
or
icebp
xchg
jne
push
push
push
xor
repnz
jbe
pop
scas
sub
jle
loop
orb
or
in
movq
out
mov
hlt
or
sbb
xchg
mov
lahf
call
dec
xlat
mov
mov
sbb
cltd
inc
xchg
sarl
out
push
cmp
xchg
adc
push
lds
js
in
pop
inc
push
mov
popa
int3
int
mov
xchg
lret
xchg
jg
cmc
loope
outsl
or
out
call
mov
jge
jo
shlb
pop
mov
pop
stos
fwait
pop
cmc
fisubrs
pop
mov
lret
adc
push
mov
push
add
sub
xchg
sub
fs
inc
sub
sbb
or
adc
sbb
ds
dec
push
jg
jnp
pop
into
push
loope
bound
mov
movsl
jb
push
rolb
nop
jnp
int3
loop
aaa
imul
xor
outsl
jle
mov
xchg
push
aad
dec
dec
adc
dec
outsb
nop
inc
ficomps
mov
jno
popl
pop
fisubs
mov
sbb
aam
jmp
in
mov
jp
jbe
xchg
dec
push
ficompl
cld
add
cmc
jg
mov
cmp
mov
xor
roll
dec
jo
mov
mov
pop
pop
push
xor
add
fsubrl
cmp
cld
push
pushf
sub
in
mov
push
nop
sub
dec
pop
and
cmpsl
jge
cltd
inc
cld
fs
add
add
mov
mov
pushf
pop
add
imul
add
cmp
cmc
mov
inc
pop
mov
lock
mov
ds
lods
jp
pusha
mov
ret
sub
sar
sub
out
fcoms
int3
and
mov
fsubs
adc
cmp
in
ret
daa
ret
lock
mov
sub
and
fisubrl
push
and
mov
ljmp
fidivrl
pop
mov
and
push
dec
in
lea
cmp
jp
mov
pop
xor
cmp
scas
out
shlb
or
adc
les
popf
mov
lret
xor
mov
lret
test
pop
je
or
push
mov
mov
and
pop
cli
outsl
filds
and
pop
sbb
les
pop
or
lahf
pop
pop
sbb
mov
lcall
xor
mov
ror
xchg
cmp
shlb
and
stos
lods
mov
lret
cmpsb
neg
enter
lret
jmp
cmpsl
gs
sbb
lret
dec
out
pop
pop
call
inc
pop
test
in
xchg
mov
movsb
lcall
push
popa
mov
fisttpl
pop
aam
mov
sarb
xchg
cld
or
stc
flds
fdiv
bound
outsl
stc
mov
shl
pusha
jge
and
aas
loopne
lret
xor
pop
js
add
popf
out
lret
and
shl
dec
pop
mov
jbe
fmuls
cld
sbb
hlt
pop
mov
sub
jg
add
loope
cmpsb
movsl
push
out
mov
fdivrp
out
push
adc
andl
dec
cmc
rorl
lods
sti
adc
test
mull
lahf
pop
ds
sub
mov
cmp
xchg
fwait
cmp
xchg
jne
mov
mov
adc
sbb
lock
pop
cmp
dec
mov
lds
sub
fwait
xchg
in
xor
pop
add
xchg
es
mov
and
or
jnp
sbb
lods
jge
cltd
andb
icebp
xor
ret
xchg
clc
sbb
shlb
mov
dec
mov
fistps
cmp
lods
outsb
in
mov
or
xchg
and
mov
and
xchg
mov
mov
inc
cmp
rorl
pop
pop
and
notl
inc
pop
xchg
jecxz
aas
mov
out
mov
test
ret
pop
imul
dec
test
icebp
in
mov
into
mov
dec
loopne
mov
xchg
dec
push
cmpsl
pop
jb
pop
push
adc
lds
sbb
cmpsb
frstor
repnz
dec
xor
je
inc
jge
aas
cmp
pusha
sbb
mov
xor
stc
popa
jns
and
mov
clc
mov
xchg
test
cmpsb
icebp
rorl
out
jbe
cld
jnp
mov
pushl
sub
add
gs
lahf
outsl
or
cltd
outsb
xor
or
mov
insb
sub
inc
adc
mov
mulb
add
xchg
inc
push
mov
cld
dec
loope
or
dec
lods
or
pusha
xor
in
jno
adc
faddl
cmp
add
cmp
stos
loope
dec
test
leave
shl
and
das
or
je
xor
mov
das
xchg
cmp
jle
pop
or
sub
sbb
jnp
shrl
xchg
sbb
orl
lea
xchg
inc
enter
test
xor
lds
inc
fstps
popa
gs
gs
mov
sbb
cmc
out
cmp
xchg
push
inc
mov
bound
mov
in
mov
mov
insl
pop
or
dec
xchg
cwtl
dec
add
xchg
iret
xor
ss
push
sub
mov
pop
movsl
mov
lcall
pop
dec
test
or
enter
out
jns
icebp
fidivrl
mov
dec
inc
adc
xor
shrl
sbb
outsb
test
mov
push
adc
test
push
mulb
lret
ret
inc
stc
mov
push
cmpsl
and
cmp
je
iret
popa
adc
bound
jbe
inc
sbb
fcmovnu
cmp
xchg
stos
in
xor
jle
pop
cltd
sub
nop
lods
std
loop
cli
xchg
sub
xchg
pushf
test
shrb
out
jg
es
test
dec
aam
mov
or
shr
fadd
test
xor
jle
add
mov
xchg
loope
mov
repz
jg
popf
cmc
in
ret
testb
lock
fsubrp
lods
fdivrl
mov
pop
mov
in
insb
das
mov
aaa
cmc
mov
pop
bnd
std
add
arpl
je
fiaddl
jecxz
xchg
dec
insl
xchg
sub
aam
dec
jl
mov
cmp
add
and
and
dec
je
lea
sub
stos
out
icebp
mov
dec
sbb
pop
inc
add
and
xor
out
mov
push
lcall
jbe
pop
and
js
sbb
insb
push
lods
sub
mov
xor
jae
adc
jae
cmp
cmp
loope
and
pushf
or
inc
inc
gs
loop
clc
shl
cltd
sub
inc
cld
push
mov
pop
xor
sub
mov
inc
pop
popl
cli
fsubrs
xchg
roll
fdivl
pushf
cmpsl
pop
mov
ret
gs
cmp
js
js
pop
pop
sbb
dec
ret
rorb
xchg
dec
pop
cvtps2pi
test
adc
orb
fnsave
mov
push
jmp
lea
pop
push
mov
loop
or
out
pop
add
push
pop
mov
insl
std
ficompl
ljmp
lock
and
mov
push
fisubrl
mov
jae
popf
jno
adc
add
iret
fmuls
mov
cmp
sub
sub
cltd
into
sub
ret
xchg
ficoml
test
cmp
aad
std
lods
mov
or
mov
cmp
lods
and
xor
test
and
or
pop
dec
and
icebp
dec
fwait
test
xchg
adc
fadds
aas
mov
jge
pop
push
fcomps
popf
add
loop
xor
rorl
or
repnz
mov
push
xacquire
mov
jle
pop
adc
mov
fstps
mov
and
pop
xchg
push
jne
mov
add
add
jmp
aad
dec
test
je
repz
cli
sub
push
mov
outsl
mov
xchg
push
lea
sti
pop
lods
into
fisttpl
mov
pop
xchg
pop
daa
add
imul
add
xor
pop
ret
loop
lahf
sub
popa
les
add
sub
leave
popf
add
loope
arpl
daa
fmulp
push
cmp
dec
sub
fdivrl
clc
pop
psubsw
jecxz
in
call
jg
mov
sbb
pop
jbe
cmpsl
test
cmp
push
xor
rcr
dec
mov
add
mov
enter
xchg
out
jge
lods
mov
jno
jle
les
out
adc
inc
outsb
and
fs
lds
or
lds
xchg
lea
add
mov
ds
ljmp
mov
je
or
pushf
adc
xor
xchg
xchg
push
or
es
mov
push
aaa
lds
jb
cmpsl
jg
scas
into
jb
out
je
movb
fisttpl
xchg
adc
jno
cmpsb
jo
adc
mov
test
jle
arpl
pop
pop
and
pop
jmp
cmp
push
sbb
jo
daa
add
pop
pop
dec
in
aas
lcall
sbb
lea
mull
roll
cs
dec
cmpsb
pop
dec
imul
push
xchg
nop
fwait
in
sahf
int3
mov
push
call
adc
bound
cs
lret
cmp
lods
out
jle
or
mov
add
or
clc
push
pop
nop
or
sti
aam
jns
inc
xor
and
pop
or
mov
sbb
dec
into
test
lret
xor
dec
test
or
call
adc
enter
mov
mov
in
mov
mov
fdivr
rolb
lea
arpl
jo
lods
inc
in
inc
mov
dec
add
and
sti
or
and
sub
stos
jb
stos
cmp
xchg
js
jecxz
mov
ret
test
lahf
fbld
sbb
xchg
dec
dec
les
and
in
sbb
aaa
jl
xchg
cmpsb
or
popa
addr16
sbb
out
cld
in
inc
or
imul
call
out
pop
or
dec
xchg
adc
xor
add
xor
mov
dec
out
icebp
mov
scas
es
add
inc
jb
push
or
lock
mov
out
hlt
fcmovnu
mov
js
cmp
sbb
cmpb
insb
int
orl
test
mov
jne
out
outsb
pop
enter
movsl
mov
sti
mov
xchg
movsl
sbb
mov
shll
inc
push
inc
push
pop
xchg
dec
dec
jge
inc
test
push
ficomps
add
jno
testb
fidivl
and
mov
push
xchg
or
negb
push
sub
cmp
xlat
in
push
or
shlb
jl
push
xor
sub
xchg
inc
mov
adcl
jl
loop
jns
pop
mov
cld
mov
aaa
out
adc
push
pop
std
fs
jmp
stos
into
bound
mov
mov
pop
mov
sub
dec
or
inc
pop
push
arpl
lock
cmp
add
stc
push
mov
iret
daa
leave
aaa
inc
and
es
cs
into
xor
mov
pop
mov
int3
stos
jb
add
std
dec
and
lock
testb
xchg
mov
lret
cli
push
adc
cmpsl
jmp
mov
xchg
push
jns
cltd
dec
push
leave
testb
or
fs
push
or
sub
adc
and
push
lcall
out
imul
mov
rdtsc
ja
fildll
mov
ret
and
cmp
icebp
arpl
lcall
jae
imul
cmp
cmp
stos
loope
idiv
arpl
cmp
dec
faddl
das
mov
dec
stos
insb
loope
mov
dec
and
ljmp
push
daa
call
push
ds
lock
dec
test
test
xchg
das
adc
das
adc
add
daa
scas
mov
outsb
imul
sbb
int
cld
or
jmp
icebp
push
pop
add
mov
pop
pop
pop
cmp
pushf
js
xor
js
das
cmp
out
es
enter
loop
insb
mov
cmpsl
nop
xchg
push
popf
cs
push
loope
push
mov
lock
sbb
and
hlt
aas
inc
jns
mov
pop
bound
test
xchg
mov
xchg
stos
sub
mov
scas
cmc
cmp
push
dec
imul
movsl
push
test
roll
push
lds
mov
pushf
jb
sub
inc
mov
xlat
fwait
lcall
enter
push
clc
cmp
mov
cmp
mov
mov
rcrl
mov
inc
dec
mov
popa
rorb
mov
stos
sti
add
fsts
daa
xchg
mov
lahf
push
rcl
add
fcmovu
int
out
or
sub
inc
cmpb
pop
mov
pop
lret
ud2
in
sbb
out
jb
xchg
out
dec
test
xor
repnz
adc
sub
pop
xor
pusha
xchg
push
jne
test
sbb
mov
sub
outsl
or
push
cmpsl
pushf
aas
insb
mov
jl
stos
icebp
dec
je
mov
xchg
sti
daa
xchg
into
orl
jbe
push
xor
push
sub
jnp
pop
gs
mov
cmp
inc
mov
sti
and
loop
lahf
popf
and
sbb
dec
test
inc
sbb
cs
push
pop
icebp
adc
adc
mov
roll
aam
ljmp
insl
flds
cmp
mov
jnp
sbb
dec
les
mov
lea
in
or
fcoml
mov
in
dec
mov
ret
cmp
add
scas
fmuls
push
lret
pop
scas
fwait
cmp
mov
inc
jo
sub
and
mov
dec
pop
mov
sbb
test
push
xor
gs
fcomps
push
clc
out
fcoml
and
jecxz
fiadds
scas
sub
insl
ret
jnp
sub
stos
scas
in
sub
clc
mov
push
out
sarl
jae
sbb
ljmp
in
pop
adc
shlb
lods
xchg
mov
xlat
cwtl
add
jmp
adc
pop
das
pop
ljmp
push
push
mov
mov
ficoms
xlat
and
lret
iret
jne
jecxz
mov
jmp
add
pop
cmpsb
adc
mov
test
mov
add
imul
add
push
sahf
pop
repz
mov
lahf
aaa
fcomps
hlt
add
test
fidivrs
lcall
jecxz
push
jle
lea
push
repnz
or
push
mov
stc
mov
xor
out
pop
cmpsl
dec
sub
add
mov
sbb
fst
flds
pop
adc
cmp
or
sub
pop
movsb
mov
jae
inc
mov
pop
push
lret
pop
aas
out
jnp
icebp
divl
inc
inc
dec
in
bound
xor
lds
jne
sub
subb
fists
fbld
xchg
outsb
xor
je
pop
mov
cmp
pop
mov
aam
jnp
cmp
lret
dec
or
fdiv
add
imul
pop
insb
cmp
adc
dec
mov
out
cltd
stos
lret
inc
xchg
insl
push
or
aas
pop
int
xchg
faddp
out
adc
cmp
xor
lret
rcll
mov
sbb
outsl
inc
jecxz
push
cmp
mov
lods
fcmovb
mov
lcall
in
mov
inc
stos
sbb
in
push
js
mov
mov
lea
or
test
scas
push
cld
mov
arpl
pusha
clc
dec
nop
jle
out
fldenv
aad
inc
test
pop
inc
xchg
mov
dec
sbb
cmp
loop
ss
sahf
inc
jp
push
adc
xchg
test
or
into
movsl
ds
mov
dec
mov
es
push
sti
popf
in
in
inc
stc
leave
and
inc
mov
sbbl
std
add
clc
sbb
xchg
addr16
shll
je
or
xchg
mov
add
adc
iret
mov
inc
pop
lahf
roll
loop
aad
je
cmp
fcomip
push
mov
popa
ret
pminsw
push
cmp
or
fucomp
xchg
hlt
sub
jbe
mov
dec
in
jecxz
jecxz
icebp
dec
mov
push
cmp
adc
jl
dec
xchg
stos
adc
xchg
lcall
insb
ret
jmp
enter
inc
fdivrl
imul
fwait
xlat
jno
dec
sahf
or
mov
fiaddl
ret
add
sbb
dec
arpl
jbe
xchg
cmpl
cmp
push
cmp
repz
dec
mov
nop
iret
inc
popf
mov
arpl
mov
push
ret
mov
dec
adc
xchg
orl
inc
mov
xor
dec
outsb
xor
sbb
sbb
dec
sahf
xchg
mov
in
das
inc
ret
dec
sbb
lods
jl
cmp
mov
fucom
mov
push
shl
sbb
cltd
loope
cmpsb
and
sbb
adc
pop
dec
mov
xor
sarb
inc
ret
adc
sub
mov
in
popf
jg
outsb
inc
ljmp
loopne
sbb
mov
aaa
roll
aad
loopne
dec
repnz
xor
cli
mov
popf
sbb
les
leave
pop
inc
jbe
dec
out
pop
cld
sub
adc
jmp
pusha
inc
push
icebp
insl
or
mov
cmpsb
mov
ficomps
pop
or
jae
dec
stc
and
mov
lods
das
stos
or
sub
xchg
add
mov
dec
mov
lock
mulb
gs
push
lret
mov
pop
cmp
cmp
clc
dec
xor
lods
cmpsb
jmp
mov
loop
xchg
movsb
pop
add
cmp
xor
mov
testl
xchg
loop
jno
faddl
popf
cld
pushf
test
fimuls
adc
shrb
nop
push
or
mov
jp
lea
mov
cwtl
mov
mov
and
inc
movsl
dec
inc
adc
loop
jno
sbb
mov
outsb
cmp
xor
mov
dec
or
movsb
test
std
pop
sub
xorl
outsl
xchg
sbb
and
test
cli
clc
jno
rol
repz
add
ja
xor
inc
aas
adc
sbb
mov
mov
shll
lods
nop
sbb
jp
add
imul
es
int
scas
xchg
dec
pop
mov
mov
dec
aaa
icebp
xor
cmp
int3
shll
in
std
jmp
mov
js
insl
and
mov
dec
ljmp
rclb
or
bound
dec
cmpsl
mull
sbb
dec
rol
dec
pop
js
pushf
push
scas
ja
inc
pop
pop
sub
stos
lods
or
mov
adc
pop
ja
stc
inc
xchg
pushf
xor
lahf
mov
shl
sub
add
mov
and
arpl
push
imul
sbb
lahf
xor
mov
push
xchg
pop
loope
jb
mov
in
adcb
xor
pop
dec
and
fstps
mov
xchg
movsl
jge
pop
xor
pop
sti
in
push
test
mov
inc
pop
inc
lods
fidivrs
mov
add
adc
arpl
jne
jmp
inc
pop
inc
push
jl
push
jmp
add
ss
mov
in
sub
scas
xchg
dec
push
xchg
inc
pop
repz
lahf
cli
cwtl
sti
push
and
mov
ret
xor
jle
inc
lea
push
sti
or
add
jno
mov
fld
clc
lret
sbb
pop
arpl
addb
inc
movsl
cmp
and
xor
out
push
movsl
iret
dec
testb
stos
ror
cwtl
sbb
jnp
lds
mov
ja
nop
xchg
cmc
pop
or
popf
sahf
cli
mov
es
mov
out
cmp
aad
test
jns
adc
dec
sbb
xor
bound
mov
xchg
or
xchg
pop
mov
jnp
push
push
fcmovnb
in
negl
andb
push
jecxz
jmp
cmp
xchg
int3
push
jg
fldcw
sbb
push
sub
mov
pop
sti
xchg
mov
call
fwait
inc
out
jge
xchg
mov
fisubrl
ss
push
and
jp
dec
and
pop
xchg
flds
ss
jle
jnp
and
inc
pop
fldt
xor
sti
sub
lcall
fidivrl
mov
push
mov
pop
xor
inc
push
stc
aam
inc
push
scas
in
jge
nop
mov
push
scas
adc
addr16
in
sbb
insl
les
mov
jae
or
jae
xor
add
cmpsb
mov
xor
int3
pushf
adc
mov
sahf
bound
xchg
jb
mov
outsb
ret
insb
inc
subb
sbb
stos
cltd
fucomp
mov
pushf
or
dec
pop
rcl
inc
pop
js
push
pop
jno
xchg
mov
adc
movsl
pushf
mov
adc
mov
rclb
or
and
cmp
add
pop
add
add
inc
sbbl
arpl
push
add
cmpsl
jne
nop
movsl
cltd
pusha
adc
mov
ds
roll
incl
mov
jnp
pusha
sub
ficomps
push
push
mov
cli
add
sbb
mov
or
in
sub
mov
and
push
sbb
and
mov
jp
mov
inc
aam
cmp
or
loopne
cmp
loope
ret
fbstp
movq
jns
xchg
pop
and
iret
arpl
ret
scas
mov
lods
cmc
aad
push
and
and
lea
pop
mov
loope
cmc
out
push
push
ss
inc
mov
push
lods
add
lds
lods
cmp
sub
movsl
iret
mov
fidivrs
mov
cmp
and
out
jmp
iret
rclb
shlb
iret
scas
sub
sbb
push
lods
push
xchg
pop
repnz
stos
pushw
sbb
sbb
add
pop
std
test
mov
mov
xchg
pop
xchg
jecxz
push
dec
pop
gs
sahf
popf
or
inc
pop
imul
pop
mov
and
fidivs
xchg
popf
mov
cmp
clc
inc
jmp
jns
pop
xchg
cmp
jnp
inc
bound
adc
push
stos
lods
jnp
xor
mov
mov
stc
push
pop
xorl
xchg
pop
adc
inc
test
in
inc
loop
cmp
sub
or
in
rcrb
clc
enter
jge
lods
int
sarb
ljmp
xchg
inc
cld
mov
jp
inc
out
cmp
inc
loop
fdivs
mov
gs
in
hlt
xchg
test
repnz
test
push
pop
add
fldenv
bound
movsb
inc
push
jg
fdivs
out
or
out
out
pushf
xor
nop
mov
into
in
sbb
mov
lret
xchg
orb
push
adc
push
arpl
adc
pop
sbb
push
repz
xchg
pop
mov
or
push
jmp
outsl
loopne
sub
into
add
push
movl
rcll
xor
xchg
stos
ret
int3
push
push
sbb
lret
andb
cmpsl
outsb
repnz
outsl
bound
lret
negl
xor
fs
cld
push
xchg
push
xor
mov
xchg
pop
cmc
sti
lret
rclb
roll
sbb
pop
aad
xchg
ja
out
das
shll
push
dec
aas
mov
push
sbb
adc
stc
fs
and
outsl
shr
mov
adc
repnz
push
and
flds
jge
int3
pop
mov
stos
xchg
mov
sbb
xor
imul
loop
aaa
stos
mov
sub
and
jne
push
jl
daa
fildl
and
mov
lock
inc
add
das
jae
fdivrl
mov
fldl
dec
add
stos
popf
or
imul
push
out
mulb
xchg
divl
movsb
cwtl
ss
add
sub
mov
fcmovnbe
cmc
adc
xor
lcall
sahf
clc
push
movsl
or
fsts
push
xchg
xchg
jb
push
jge
and
or
and
fwait
cmp
arpl
or
pop
int
pop
mov
stos
or
jp
or
xor
mov
in
push
test
in
addl
push
jecxz
and
adc
in
cld
pop
outsl
leave
test
jmp
imul
add
push
xchg
xor
push
pop
and
ss
inc
mov
jecxz
jp
jno
pop
xchg
sarl
xchg
jp
sbb
dec
and
lods
stc
inc
cwtl
xor
lock
sbb
sub
lahf
das
xchg
cmpsb
scas
movsb
mov
adc
mov
xor
and
inc
mov
xchg
out
xorl
cmc
leave
inc
cld
push
mov
sti
ss
mov
test
jp
jb
jns
test
movsb
popf
push
cld
mov
subb
lods
enterw
lret
stos
xchg
lods
push
inc
jne
push
inc
dec
popf
faddp
dec
xchg
inc
sbb
paddd
dec
mov
mov
cltd
fwait
aas
sti
rcrb
xor
sub
mov
pop
mov
push
and
pop
inc
iret
orb
inc
arpl
imul
hlt
xor
dec
loope
push
fsub
push
scas
leave
mov
jg
int
or
ficoms
push
xchg
xor
in
outsl
iret
fistpl
in
dec
sbb
popf
and
xor
iret
icebp
xchg
daa
leave
push
roll
dec
push
sub
inc
jle
std
mov
cmp
push
jnp
popa
out
stc
fwait
add
cmp
mov
repnz
mov
fs
shrl
addr16
idivb
cmp
push
xor
sub
push
xlat
xor
icebp
in
pop
mov
pop
repz
clc
ret
inc
cmpsl
lods
xchg
sbb
call
shlb
push
add
sub
aad
out
cwtl
imul
mulb
ret
imul
xor
ljmp
mov
idivb
dec
push
insb
mov
ficoml
cli
mov
ret
xchg
insl
sub
jge
movsl
lahf
sub
jae
pop
cmc
cmp
movsb
pop
ja
lcall
and
jb
cmp
lds
data16
jb
push
inc
imul
cld
in
insl
inc
mov
repz
stos
sub
push
mov
xchg
rcll
pop
push
sti
pop
pop
movsl
ss
stc
mov
jmp
out
xchg
push
fimuls
adc
push
mov
push
cmpsl
adc
es
pop
adc
xor
inc
mov
pop
pop
rclb
std
mov
nop
mov
fcmovu
inc
pop
lret
inc
mov
in
jl
or
add
cwtl
mov
in
sbb
sub
sbb
lahf
je
fisubl
iret
cmc
mov
daa
cmpsb
cltd
xor
push
sub
jl
std
sbb
lds
or
xchg
and
add
lahf
arpl
mov
imul
fisttps
cmpsb
cmp
mov
cmpsb
imul
push
int3
pop
movsl
rorl
inc
xchg
push
or
aad
add
popa
dec
mov
fsubrs
mov
out
rcl
sahf
xchg
inc
es
and
loopne
sbbb
out
jne
test
pop
lahf
cld
cmp
push
test
jle
xor
dec
in
jecxz
add
fistpll
lea
cs
sub
ficoms
mov
jns
lahf
inc
inc
push
fidivrs
mov
dec
aas
inc
push
jle
mov
shlb
aas
out
mov
jns
push
in
leave
push
xchg
sbb
icebp
loop
dec
shlb
push
stc
test
jmp
push
lods
mov
ja
push
cmpsl
pop
dec
sbb
sbb
prefetchw
push
or
inc
aas
push
jb
lock
sub
sbb
jne
push
sub
ljmp
or
lods
aas
repnz
scas
lods
imulb
push
cmp
cmp
jge
insl
xchg
add
jo
cmc
push
lea
xor
in
xor
cmp
out
or
or
pop
mov
xor
ds
add
fdivl
pop
dec
adc
js
and
aam
daa
mov
imul
cli
push
and
push
push
insl
xor
fs
rcrb
adcb
movsb
out
aam
push
inc
leave
sub
test
dec
aaa
fwait
inc
sahf
xor
push
lds
jmp
xchg
je
lahf
xchg
mov
mov
sbb
daa
pop
mov
cmp
dec
sbb
pop
xchg
mov
jo
out
xchg
fistpll
fsts
ret
mov
cmpsl
movsb
mov
fnstenv
xor
push
sub
dec
mov
xor
cld
loop
lea
mov
dec
fmuls
fimull
xchg
test
cmp
rcrl
and
outsb
loope
sub
pop
mov
test
daa
pop
popa
and
enter
outsb
fistpl
call
adc
push
jae
push
add
push
shlb
ret
or
mov
mov
xor
fwait
test
scas
jne
test
inc
dec
int
imul
stos
sub
cmpsl
loope
xor
sub
insl
or
in
jp
cmp
call
dec
addr16
pop
es
mov
jl
popf
mov
lcall
lcall
std
or
mov
mov
int3
fldt
popf
idivb
lret
xor
mov
lret
xchg
xor
sbb
fmuls
pop
stos
rcr
sbb
mov
cmp
xchg
adc
adc
hlt
jl
into
pop
jmp
pop
mov
shr
inc
or
xor
les
or
push
rcl
cmp
dec
cmc
dec
pop
lds
sbb
pop
jne
or
test
lea
xchg
jo
aad
cltd
test
gs
push
push
pop
inc
dec
leave
cmpsl
push
cmpb
cmp
int
xor
cwtl
dec
lods
mov
lods
out
dec
add
test
xor
das
lahf
aad
add
leave
jnp
fs
jb
xchg
repnz
bound
imul
out
test
mov
sti
mov
inc
jne
cltd
pop
cli
les
mov
lret
imul
xor
divb
les
sbb
inc
sub
push
xor
cmpsb
or
dec
push
ljmp
pop
fnsave
mov
push
pop
jge
ror
mov
sub
xor
es
jg
addl
sbb
or
mov
push
fwait
mov
repnz
imul
cmp
jl
mov
sub
pop
loop
cmpsl
aad
loop
or
test
call
cmp
in
xorb
sbb
insb
movsl
and
jne
xlat
outsb
xchg
pop
or
sbb
sub
cmp
ja
inc
xchg
xor
mov
lcall
loopne
jmp
inc
arpl
and
mov
mov
push
arpl
frstor
xor
fists
out
jecxz
repz
inc
xor
dec
out
dec
pop
enter
pop
mov
in
mov
jo
divl
or
jg
into
jns
and
adc
mov
mov
ds
inc
and
adcl
mov
or
push
or
mov
inc
jl
jnp
scas
sub
and
dec
test
aam
push
lods
hlt
shrl
hlt
xor
leave
subb
xor
xchg
lods
sbb
fcomps
push
sub
and
push
aam
repz
xchg
mov
hlt
jge
cs
fidivrl
push
lahf
in
mov
mov
mov
loope
cmp
imul
sbb
mov
mov
imul
pop
aas
aas
dec
xor
cs
out
xor
test
rorb
pop
push
popf
aad
mov
je
ja
mov
mov
addr16
push
jp
insl
cmp
jnp
mov
negl
jg
push
cmp
repnz
sbb
xor
mov
out
push
rcrl
mov
cmc
push
test
sub
sub
imul
out
les
xor
mov
test
and
add
or
adc
mov
sbb
lods
push
ret
arpl
mov
jb
dec
push
push
and
decb
xchg
arpl
outsl
lcall
movsl
mov
mov
push
stos
sar
inc
jp
sti
push
pop
and
test
cli
imul
mov
ret
jg
inc
dec
int3
fisttpl
adc
jp
push
out
mov
sbb
test
or
jno
mov
adc
or
push
jo
jb
into
rolb
lret
push
ss
inc
sub
addl
xchg
je
xor
xchg
jecxz
adcb
mov
imul
or
inc
pushf
xchg
cmpsl
mov
test
rorl
xchg
cmp
jmp
add
lods
mov
sbb
stos
jnp
movsb
das
jnp
sub
dec
mov
mov
cltd
xchg
repz
xchg
rcr
enter
dec
push
roll
enter
jge
xchg
sahf
push
out
cmp
inc
fmul
sbb
push
lahf
mov
mov
imul
inc
sbb
sldt
add
add
add
mov
scas
mov
lcall
add
add
dec
pop
cmp
fbld
movsl
add
leave
movsl
cwtl
out
cs
and
or
mov
jmp
and
fstpl
lds
lds
vmovd
fnsetpm(287
rcr
mov
fidivl
insl
add
imul
push
xor
jge
movsl
mov
sti
jmp
into
cmp
rolb
fwait
jle
movsb
jl
movsl
movsb
jbe
dec
loope
ds
test
xor
fs
shlb
sbbl
in
dec
push
mov
pop
xchg
adc
sbb
sbb
xchg
stos
jp
pop
sub
outsl
dec
into
lods
cwtl
xor
cltd
lahf
ficomps
xchg
test
shrl
aad
and
sub
hlt
jns
sarl
inc
imul
nop
and
push
push
or
add
repz
inc
mov
or
orb
ret
jge
test
cmc
jg
je
popa
aam
sbb
dec
cwtl
and
mov
loope
mov
pusha
bound
xchg
into
jg
jmp
pop
sti
jl
loopne
xchg
scas
int3
mov
fstl
bound
sbb
mov
mov
jle
iret
das
repnz
mov
dec
cmp
idivb
iret
in
mov
lods
pop
mov
pop
cmp
inc
jae
mov
add
xor
stc
fdivl
xor
sub
push
ja
cmpsb
int3
mov
fwait
xor
add
pop
mov
mov
loope
nop
int
daa
and
es
sbb
mov
sub
xor
lods
shl
in
dec
rcrb
sub
fistpll
stos
popa
cwtl
jbe
popf
dec
fs
inc
mov
test
and
push
cli
shlb
mov
icebp
xchg
push
lret
push
lcall
adc
shlb
cli
mov
sbb
shrl
into
repz
clc
adc
lret
dec
mov
dec
repnz
dec
xchg
mov
xchg
inc
and
or
xchg
lods
in
inc
inc
cwtl
mov
test
or
pop
enter
mov
loopne
sbb
shll
adc
jmp
jo
enter
and
adc
xor
lret
push
fdivrl
push
imul
push
in
sub
and
pushf
fnsave
ret
sahf
shrl
inc
inc
sbbl
mov
or
aas
les
movsl
in
pop
push
sbb
cs
sub
cmp
ss
data16
std
imul
dec
rorb
inc
adc
fadds
mov
les
xchg
mov
add
or
and
pop
mov
mov
push
mov
pop
ds
cmp
mov
add
sbb
mov
or
mov
jbe
leave
jl
popa
test
xlat
adc
outsb
pop
cltd
test
aaa
out
mov
ljmp
dec
and
xorl
jecxz
adc
lods
xchg
stc
sbb
add
xor
cmp
push
cmpl
outsl
mov
call
fiaddl
sub
xchg
or
mov
mov
push
jmp
jmp
push
mov
test
pop
aam
and
scas
mov
xlat
aad
xor
and
inc
inc
dec
xor
pop
cli
jg
lods
pop
bound
enter
adc
loope
insb
jmp
jp
push
mov
mov
daa
lahf
ja
test
mov
xlat
shl
ljmp
sub
repnz
inc
and
fsubrl
jb
push
pop
jo
sub
jo
pop
push
call
repnz
lock
xor
scas
in
movsb
jo
hlt
xchg
lods
or
fstps
lds
cwtl
rorb
and
mov
gs
subl
xor
add
sbb
daa
jno
lahf
add
dec
xchg
pushf
mov
iret
adc
pop
push
sub
jo
into
in
push
cmpsl
jns
mov
push
jbe
pop
add
xor
mov
sub
roll
scas
pushf
and
scas
sbb
sbb
mov
mov
into
push
xor
dec
iret
mov
push
roll
fwait
pop
js
adc
lret
leave
mov
ja
pusha
adcb
xchg
iret
cld
mov
mov
xor
nop
fidivl
int3
dec
sarb
test
pop
xor
push
push
repz
inc
jge
add
in
rcll
hlt
cmpsb
inc
fildl
lahf
push
ret
shl
mov
dec
popa
mov
pop
xchg
in
and
add
xor
jb
loope
sbb
jno
xor
inc
push
and
scas
and
out
sti
cld
jmp
sbb
cmp
jmp
shrb
dec
inc
xchg
push
stos
fidivrs
out
push
or
or
push
add
dec
sub
es
xchg
xchg
hlt
push
mov
into
mov
pop
out
add
xchg
dec
mov
dec
xor
lcall
add
imul
jecxz
push
xor
imul
xlat
loopew
stc
push
adc
mov
xor
and
pop
stos
ljmp
int3
adc
push
aaa
xchg
mov
mov
lret
mov
aad
movmskps
add
dec
int
icebp
and
std
sub
insl
pop
push
loope
jg
push
dec
shl
adc
jae
dec
add
sub
sbb
mov
movsb
push
subb
sub
add
push
and
push
mov
cmc
aas
cmpsl
pop
xchg
iret
insb
sub
jg
inc
mov
data16
xor
ja
xchg
and
push
xor
subl
and
inc
out
adc
xchg
call
leave
add
jmp
dec
es
xor
addl
adc
pop
scas
loop
jb
mov
out
ret
pop
call
repnz
clc
xchg
push
sbb
ss
cwtl
and
and
pop
adc
or
cmpsl
add
sbb
jl
popl
fucom
push
data16
aas
into
mov
mov
dec
shll
cmpsl
cltd
getsec
gs
xchg
inc
or
leave
mov
push
mov
or
mov
add
call
mov
stos
imul
xor
jmp
or
popf
ja
dec
lods
orb
out
mov
call
push
andb
les
sub
add
or
pop
cltd
rorl
add
imul
add
insl
jge
sbb
scas
jge
jle
xor
jns
add
enter
pop
pop
jge
std
sbb
mov
jb
mov
gs
sbb
pop
inc
loopne
pop
enter
outsl
sarl
rol
inc
push
and
inc
xor
mov
pop
mov
in
mov
cld
psubsw
imul
mov
pop
dec
and
push
pop
call
cmpsl
mov
je
add
sti
cmpsb
and
bnd
mov
add
xorb
add
push
lahf
xchg
int3
lret
push
xchg
daa
pop
cmp
aam
sub
mov
stc
dec
jb
jbe
push
xor
cmp
fistpll
call
push
or
daa
movsb
xchg
cmp
je
or
xchg
ret
pop
adc
mov
test
dec
roll
push
ret
pop
fildl
xor
movsb
cli
sub
sbbb
aas
add
lahf
lcall
jnp
adc
xchg
rclb
add
sbbl
adc
cmp
cmp
pop
dec
mov
jmp
scas
mov
xchg
sub
xchg
push
repz
xchg
jp
sbb
or
inc
pop
jne
cmp
inc
jl
pop
jl
add
stos
pop
fs
sarb
push
push
inc
pop
dec
xchg
loop
lahf
xchg
test
jbe
lcall
outsb
or
add
into
rclb
dec
hlt
cmp
jbe
hlt
adc
mov
dec
mov
jg
mov
out
inc
loopne
xlat
clc
or
js
rolb
mov
jo
mov
je
ja
jmp
data16
adcb
icebp
scas
push
mov
adc
pop
lds
lea
int3
xchg
pusha
icebp
mov
xor
mov
insb
jmp
stos
dec
in
fdivl
inc
jl
inc
in
push
xchg
stos
div
mov
fdivs
xchg
add
popl
jecxz
data16
js
sub
pop
jno
sub
mov
sbb
dec
popa
std
aam
pop
pop
cmp
add
call
and
lods
sarl
mov
out
faddp
ret
xchg
into
repz
jge
jle,pt
inc
pop
or
jg
push
cmpsl
hlt
ljmp
stc
aad
jmp
test
jle
icebp
shlb
xchg
mov
cmp
add
jbe
js
mov
jno
insl
or
sub
xchg
cmp
pop
dec
cwtl
ds
sub
jg
xchg
sbb
push
pop
mov
into
and
ud1
mov
sub
pop
mov
adc
clc
jp
dec
into
stc
loopne
jecxz
push
inc
cs
sbb
inc
cmp
mov
les
xor
addr16
std
adc
pop
add
sub
pop
mov
pop
adc
push
or
ss
pop
fsubrs
arpl
dec
or
adc
jbe
ss
pop
lahf
inc
fistps
mov
arpl
push
cmp
jg
clc
scas
sbb
adc
xor
rorl
or
sub
or
sub
fwait
out
arpl
jo
addr16
xchg
test
out
add
mov
adc
enter
cld
outsl
jne
and
shrl
mov
out
dec
inc
jmp
dec
cmp
push
sbb
and
or
das
je
andl
push
add
mov
push
or
or
inc
scas
dec
or
mov
mov
xor
in
in
jp
or
or
sbb
sbb
sub
stc
or
loop
mov
xor
fwait
or
mov
xor
sbbl
clc
xchg
pop
mov
adc
pop
stos
int3
lcall
imul
stc
outsb
pusha
into
fs
push
mov
inc
and
jg
dec
in
add
and
push
jnp
and
jecxz
in
icebp
inc
shl
sbb
jne
jmp
xchg
xlat
add
cmp
jge
fcmovnu
outsb
rorl
mov
cmpsb
sbb
sbb
adc
je
pop
cmp
add
dec
js
dec
xchg
aas
dec
andb
into
lock
cmp
mov
xchg
mov
xchg
pop
loope
adc
dec
adc
mov
xor
dec
xor
push
nop
sbb
sub
sbb
mov
ljmp
loop
outsl
jge
jae
adc
test
aad
push
lcall
imul
sbb
das
fmull
mov
pop
pop
fstl
aam
flds
mov
mov
inc
adc
ret
pop
pop
or
or
data16
fbstp
sbb
pop
pop
adc
inc
lock
rclb
je
pop
jns
loopne
or
adc
jne
pop
push
sbb
repz
inc
sbb
dec
push
dec
test
es
push
pop
xlat
pusha
sub
sbb
scas
emms
mov
fisttpll
mov
dec
loopne
orl
pop
sbb
xor
fldt
sub
sub
cwtl
out
and
dec
js
xlat
push
loope
lahf
and
pop
fstpt
inc
mov
mov
inc
pop
mov
jg
and
rcrb
push
pop
pusha
dec
push
and
jmp
inc
adc
hlt
fcmovbe
pop
call
shrl
cmp
push
xchg
call
xchg
jp
rolb
fisubrl
adc
jns
pushf
add
xor
rorl
ljmp
jl
xchg
inc
sbb
xchg
and
dec
fcoms
add
cmp
inc
xor
and
shll
xor
jecxz
add
repnz
mov
data16
ljmp
test
push
pop
mov
hlt
sub
iret
adc
scas
div
in
jecxz
int
shrl
push
out
lcall
sub
loop
dec
inc
out
jg
mov
lea
push
push
push
pop
xchg
test
xchg
cmp
or
add
jns
repnz
dec
dec
xchg
and
xlat
clc
in
push
mov
cmpsl
and
and
dec
out
ret
xchg
pop
sub
cmp
andl
xchg
push
mov
repnz
cmp
jns
loope
shlb
and
dec
cmp
scas
dec
loop
xor
insb
adc
jmp
je
mov
inc
and
xchg
je
aam
or
testl
aas
and
cmp
add
sub
jmp
mov
orb
clc
cmp
push
add
imul
add
fistpll
fsts
mov
stc
dec
jns
loop
mov
inc
add
outsl
lret
out
popa
and
mov
int3
sub
xor
icebp
or
pop
outsb
test
stc
dec
in
mov
cs
or
sbb
sarl
fwait
movsl
ret
outsl
in
push
mov
push
shl
ds
xchg
and
dec
not
imul
cmp
dec
push
xorb
addl
or
cmp
pop
sbb
mov
fldt
mov
not
sub
out
in
fstps
std
sbb
cmp
lcall
icebp
pop
adc
adc
cmp
cmovbe
int
das
test
lock
test
in
mov
imul
shll
cmpl
push
sub
cs
jle
push
not
jle
pop
adc
mov
xchg
nop
sahf
out
or
sahf
addb
mov
or
mov
scas
jg
clc
or
pop
mov
std
out
lds
mov
or
shll
jecxz
push
dec
lods
inc
rcrl
subl
jmp
jl
xchg
shlb
fiadds
adc
mov
and
xchg
int
repnz
adc
rcrl
pop
or
addl
cmpsb
xchg
outsl
or
xchg
imulb
dec
lea
push
repnz
mov
test
jge
lret
pop
jmp
dec
ror
cs
sbb
inc
and
inc
mov
sbb
or
add
js
in
and
mov
pop
cmpb
xor
or
lea
dec
inc
add
lahf
stos
int3
popf
and
mov
sub
fcmovnb
jle
cmp
push
inc
cmp
iret
test
repz
aas
clc
sti
mov
jbe
lret
mov
inc
inc
lock
pop
shlb
pop
fnstsw
push
or
test
pop
pusha
xchg
cmp
sbb
cltd
loopne
cs
fadds
sbb
pop
icebp
repnz
pop
data16
dec
jae
aaa
fucomp
aam
mov
fimuls
pushf
outsl
push
leave
jo
cmp
test
cmpl
jg
hlt
int3
mov
xchg
in
xor
cmp
ljmp
sbb
or
mov
xor
push
sub
pop
lods
jb
out
mov
into
in
shl
shrl
cli
mov
ss
mov
push
movsb
jae
jnp
aad
push
call
sbb
add
and
mov
mov
ljmp
mov
adc
dec
shll
sbb
jae
sub
jmp
xlat
enter
stos
add
pop
js
fidivl
add
lret
lahf
aaa
lcall
push
sbb
sbb
cmpsb
and
je
jle
pop
movsl
in
rorb
ja
std
mov
mov
and
daa
jnp
push
lock
xchg
and
dec
push
adc
xor
mov
stos
inc
bound
push
mov
in
out
mov
mov
adc
lcall
push
test
or
mov
push
inc
add
dec
or
inc
aas
lret
mov
xlat
fldt
adc
xor
mov
call
rclb
mov
lret
push
dec
lds
out
scas
sub
int
mov
push
insb
jl
pushf
sub
push
in
pop
adc
jecxz
push
xchg
inc
insb
jno
sbb
and
cmp
mov
fcoml
or
fisubs
cli
cmp
lahf
inc
xchg
lds
jno
mov
jecxz
xchg
mov
push
rol
sub
hlt
sbbb
ja,pn
and
dec
mov
sub
inc
nop
pop
loope
and
xlat
ret
adc
and
addb
icebp
cwtl
xchg
dec
xor
repz
mov
fcmovnb
sub
int
loope
push
icebp
push
cmp
out
cwtl
xor
and
sub
fwait
sarb
jo
loope
iret
loopne
js
inc
shrb
cmpsl
push
mov
jg
pop
mov
jbe
jne
les
roll
loope
addr16
adc
dec
xor
stos
push
shrl
aam
fcmovnbe
push
mov
cmc
cmp
std
dec
xchg
pop
xor
sahf
in
loope
or
addr16
std
subb
mov
int
cmpsb
adc
dec
inc
mov
dec
loopne
sbb
pop
lock
mov
scas
jb
out
inc
in
inc
mov
pop
sbb
pop
bound
imul
jle
clc
push
jnp
dec
cmp
cmp
nop
jle
stos
loopne
mov
push
daa
and
add
nop
cmpb
pop
out
movsl
xchg
data16
adc
lahf
in
bound
cmc
imul
xor
out
mov
aam
sbb
push
mov
pop
or
mov
leave
cmp
push
jmp
test
std
rorl
stos
and
ss
and
rcrb
fcomps
mov
dec
mov
in
and
rcll
dec
sbb
insb
les
add
pop
stos
repz
adc
test
mov
lods
jl
cld
mov
mov
mov
movsl
shrl
shll
mov
inc
jl
into
xor
fldcw
rcr
sbb
adc
cmp
mov
mov
fidivs
jecxz
arpl
lret
aas
xchg
sbb
jmp
adc
pop
bnd
loopne
dec
mov
jo
sbb
dec
leave
or
or
aas
lock
shlb
or
aas
pusha
cmp
out
js
sti
lock
jg
xor
push
add
scas
xchg
js
cmpsl
mov
dec
xor
mov
loopne
mov
and
pop
test
xchg
pop
les
pop
sub
test
aaa
daa
int
or
sbb
jmp
jmp
jnp
pushf
sbb
xor
pop
push
stc
cmp
jl
or
test
add
inc
mov
jl
and
ja
or
push
xchg
jecxz
xchg
cwtl
inc
cwtl
jno
cmpsb
pop
fistl
movsl
dec
push
fcmovne
iret
pop
cmc
pop
fsubp
std
into
add
sub
push
dec
enter
in
orl
lods
mov
mov
mov
mov
pop
push
mov
fldenv
pop
ja
rcll
aam
sbb
pop
adc
leave
out
je
inc
leave
adc
out
loop
xchg
sbbl
or
jnp
add
jle
ret
repz
std
jle
loope
mov
dec
inc
test
pop
add
imul
add
inc
fs
lahf
scas
xchg
jmp
aaa
push
call
adc
jmp
cmp
mov
xor
test
adc
sbb
mov
mov
mov
or
add
lcall
nop
xchg
inc
dec
ds
lret
lcall
pusha
pop
aas
push
add
inc
lahf
cmp
fidivrs
movsl
das
dec
jno
or
loop
push
aad
addr16
pop
sbb
push
mov
sub
inc
inc
shll
xor
xchg
out
call
loope
jns
jne
arpl
fsubs
fsubl
jb
push
lcall
pop
arpl
xchg
sbb
push
sti
cmpsb
push
add
adc
push
inc
jb
push
jge
insl
sub
push
jecxz
xchg
mov
movsl
push
mov
adc
mov
adc
cmp
je
sub
cmp
dec
dec
mov
or
nop
xlat
mov
and
inc
addr16
lea
bnd
bound
addr16
scas
or
ss
xlat
cmp
jno,pn
icebp
lret
and
jmp
lods
gs
mov
callw
ss
loopne
xchg
push
cmpb
out
or
push
adc
jnp
int3
das
mov
xor
mov
jb
push
repz
je
dec
mov
inc
sarb
das
or
aaa
test
subl
movl
mov
push
in
stos
mov
mov
jle
inc
ja
lahf
mov
imul
cmp
push
mov
mov
push
lods
dec
in
nop
scas
or
cltd
and
mov
and
sub
sbb
and
or
pop
jo
mov
push
mov
pop
push
out
mov
fistpl
fldz
sti
pop
or
pop
add
jo
sub
pop
mov
jns
sbb
test
sbb
inc
push
pop
pop
push
add
ds
or
jge
loopne
dec
jle
pop
jne
aam
cmp
mulb
inc
inc
push
jecxz
jmp
mov
xchg
aad
jecxz
mov
push
stos
jecxz
fnstenv
mov
aas
and
jl
jle
sub
fcoms
addr16
std
shrl
mov
aas
cli
shll
dec
inc
leave
dec
ret
mov
ljmp
inc
icebp
dec
add
int
xlat
orb
push
outsl
test
dec
sbb
mov
shlb
sub
in
and
in
shl
inc
mov
and
ljmp
xchg
cmc
out
or
mov
int
mov
add
int
sbb
and
cwtl
mov
jne
inc
dec
add
fwait
psubd
mov
xor
ds
sti
inc
adc
out
mov
outsl
scas
in
mov
push
push
sbb
xor
jno
outsb
das
mov
cmp
xor
pop
rclb
data16
std
mov
mov
pushf
lret
dec
popf
pop
jbe
out
shll
inc
and
jg
fistl
loop
aad
adc
cmp
test
in
test
cs
add
xchg
stc
movsb
adc
push
dec
cmc
push
xchg
jns
lcall
mov
popf
subl
cmc
scas
mov
mov
dec
sbb
dec
push
sbb
insb
pop
dec
pop
std
xor
mov
mov
xchg
push
cmp
movsl
mov
mov
sbb
aad
lods
inc
inc
imull
ds
leave
out
sub
xchg
mov
or
sbb
scas
sbb
or
mov
dec
fidivrl
stos
fcoml
sbb
push
std
mov
push
aas
ljmp
adc
and
pop
fwait
pop
lret
cmp
outsl
xchg
lcall
mov
imul
aam
dec
sub
orb
inc
sub
in
outsl
shll
iret
stc
jbe
mov
push
iret
adc
sub
or
jge
cmp
push
cld
nop
pop
mov
notl
mov
int3
out
lahf
lret
pusha
mov
mov
sub
pusha
push
sub
daa
dec
sbb
mov
movsb
push
ficoms
mov
ret
sbb
cmp
fucom
lahf
sub
jno
hlt
les
sub
lock
ljmp
xchg
xor
fdiv
idivl
push
bnd
jl,pn
fdivs
xchg
inc
jno
mov
enter
push
mov
dec
fwait
sub
jnp
xor
hlt
cmp
ss
xchg
les
mov
jp
cs
inc
mov
mov
sbb
and
push
mov
std
leave
testl
push
jle
fs
mov
into
or
mov
cltd
aaa
mov
or
jo
imul
js
cltd
outsl
xchg
pop
xchg
fnstenv
dec
push
push
cli
stos
jne
sbb
mov
hlt
sub
dec
cmp
push
in
cmp
sbb
xor
inc
faddl
arpl
sub
test
mov
push
xchg
mov
popf
loope
mov
pop
das
add
fimuls
xchg
cmp
imul
push
testl
inc
inc
xor
mov
leave
jne
and
dec
add
sub
pop
inc
or
shlb
fdivrs
inc
sbb
and
fsub
pop
int3
mov
pusha
sub
sub
out
pop
gs
std
mov
jae
dec
int
popa
rolb
les
aad
in
mov
xchg
inc
add
scas
fs
lahf
hlt
cli
cmp
out
ss
cmp
or
cwtl
cld
inc
mov
inc
xor
mov
jle
xor
adc
aam
mulb
mov
cmp
fidivrl
out
cwtl
cld
stos
nop
cmp
mov
or
push
cli
roll
adc
lds
jo
pushf
dec
xor
xlat
mov
add
insb
cmp
push
xor
inc
das
dec
inc
xchg
xchg
leave
movsb
pop
sub
lahf
mov
push
jns
bnd
gs
xchg
mov
push
and
mov
or
jbe
sbb
sub
pop
cmpsb
incl
or
adc
rcrl
call
outsl
xor
or
out
xorb
or
jp
inc
jle
out
sbbl
ucomiss
jl
sub
lret
sbb
add
arpl
ljmp
lea
xor
loopne
pop
into
lock
mov
out
lea
fiadds
pop
dec
scas
inc
add
clc
sahf
out
or
mov
add
imul
add
add
add
dec
xchg
push
and
xchg
xchg
sbb
ror
mov
lret
pop
lahf
dec
mov
in
call
jnp
jnp
xor
lds
shlb
mov
loopne
out
jae
rcrb
stc
scas
sub
push
push
insl
fs
mov
loope
arpl
lret
mov
xor
mov
popf
rcrl
movsb
sbb
and
push
jne
rolb
cmc
xor
mov
and
lahf
rorb
mov
pop
jmp
push
stos
sti
popa
leave
icebp
mov
imul
cwtl
push
mov
mov
lods
es
inc
ret
jle
gs
dec
js
or
jmp
lods
inc
aaa
and
adcb
rorl
jnp
mov
pop
sub
dec
pop
xor
addr16
call
test
cmc
add
dec
psubusb
inc
xchg
popa
and
mov
scas
add
add
into
or
dec
and
or
leave
test
inc
jge
add
addr16
or
jnp
push
ja
bound
mov
lods
adc
dec
add
mov
sbb
bound
and
jge
and
aas
and
xchg
mov
fnstenv
cld
scas
cmpsb
mov
push
test
cltd
adc
cmp
jg
lock
fmull
and
inc
pop
mov
mov
cltd
jp
leave
les
cmpsb
iret
mov
call
outsl
call
shlb
icebp
adc
jmp
data16
aaa
mov
or
inc
hlt
mov
mov
test
pop
hlt
lock
sahf
inc
hlt
int
ss
or
aad
xor
movsb
fstpl
rcrb
push
inc
fisttpl
sbb
rorl
repnz
mov
rcr
adc
push
jge
lods
ficompl
xchg
hlt
ljmp
xor
jo
lds
repnz
faddp
aad
hlt
xchg
mov
cmp
dec
decb
inc
cltd
insb
outsl
sbb
xor
push
jno
jp
fwait
mov
and
push
sahf
dec
pop
imul
mov
aam
daa
sub
jmp
sarl
xor
out
push
inc
shll
subb
sub
add
pop
inc
push
inc
inc
ret
pop
xchg
pop
dec
das
jbe
ds
xchg
loopne
loopne
sub
push
or
mov
sbb
aas
clc
popa
mov
mov
or
fs
out
in
gs
push
arpl
add
jmp
mov
mov
jns
mov
je
cmp
cmp
jnp
add
xchg
insl
jmp
jle
xchg
out
imul
or
jmp
xchg
fisttpl
jecxz
dec
fwait
cs
xorb
xor
mov
or
xchg
dec
jnp
xchg
pop
and
pop
insb
mov
lret
cmp
lret
xchg
fadds
pop
outsl
jbe
or
fistpl
push
inc
push
mov
aaa
fmuls
xor
inc
sbb
mov
xchg
ss
fmuls
addr16
shlb
or
cmp
mov
dec
lret
adc
xchg
sub
dec
mov
push
jle
adc
jnp
out
dec
lcall
cli
pop
negl
cwtl
sub
inc
fidivrl
call
shlb
dec
outsb
adc
insl
lock
sub
sub
loop
aas
pop
into
pusha
gs
pop
dec
and
dec
dec
jno
addr16
inc
pop
sbb
or
jg
loop
jle
and
cmp
test
inc
aad
sbb
sbb
mov
mov
pop
inc
mov
pop
das
and
in
daa
mov
dec
aaa
int3
add
pop
push
push
scas
xchg
jo
movsb
inc
testb
cmp
ficoml
cltd
gs
lret
js
cmp
jp
push
fwait
std
push
mov
or
mov
cmp
jo
xchg
adc
inc
out
add
in
clc
xor
loop
jp
daa
mov
imul
xor
sahf
addr16
rcll
int
xchg
or
ja
call
loop
fildll
pop
inc
ficompl
cmp
cwtl
xchg
sub
test
push
pop
cmp
sub
insb
pop
icebp
aam
jo
inc
pushf
mov
test
call
ret
lahf
loope
cmpsl
mov
filds
pop
movsb
cmp
pop
hlt
stc
andb
imul
bswap
xor
sub
aaa
out
push
lcall
cmp
in
jg
xor
pop
push
das
fdivs
arpl
xlat
loopne
cmp
stc
mov
jnp
and
jmp
xchg
cld
mov
jb
into
mov
push
outsb
mov
pop
out
test
divl
cmp
psraw
js
cld
and
test
js
adc
sahf
push
and
cmp
lea
rorb
or
push
sahf
cmc
inc
mov
or
rol
loope
sbb
test
xor
sti
ret
jl
enter
xchg
xor
add
cmpsl
int3
jo
xor
pop
xchg
inc
adcl
test
loope
es
add
pop
pop
sbb
dec
repz
int
push
push
rorl
incl
out
mov
repz
fsubs
outsb
pushf
inc
das
in
ret
lea
in
pushf
sbb
cmpsb
adc
fstpl
call
int3
dec
cli
mov
sub
or
push
jb
mov
jns
fcomps
add
ror
push
int3
push
pop
lcall
push
xor
pop
adc
xchg
clc
and
pop
rcl
int3
enter
mov
dec
ficoml
mov
dec
jecxz
hlt
add
fwait
mov
dec
cmpsb
push
fildll
loopne
pusha
sbb
nop
in
cltd
lahf
mov
icebp
in
sbb
push
lock
mov
mov
push
inc
mov
pop
mov
cld
gs
xchg
pusha
jae
xor
aas
or
dec
mov
sarl
jge
or
das
xchg
lods
push
je
add
testb
clc
cli
jno
aas
mov
lea
out
sbbb
push
xchg
push
mov
dec
ret
xor
je
out
dec
pop
sub
push
xchg
in
push
xchg
pop
jno
shlb
and
inc
in
mov
insl
jmp
adc
jb
xor
in
xchg
hlt
push
imul
stos
add
shlb
jg
stc
ficoms
inc
and
or
add
imul
add
push
and
movsl
sub
pop
sub
xchg
xchg
out
je
sahf
push
aad
test
add
pop
ret
in
sahf
addr16
gs
inc
nop
sub
cmp
mov
pusha
repnz
jo
jp
push
insl
xchg
mov
fstl
dec
dec
negl
repnz
or
cs
test
dec
pushf
and
jmp
inc
sub
mov
push
mov
jle
imul
inc
sub
aas
stc
jne
xor
out
jle
addr16
popa
in
mov
sub
push
push
imul
cmp
loope
loopne
mov
dec
popl
roll
idiv
mov
sub
fiadds
arpl
lods
scas
sub
or
cmpsb
or
fwait
push
shlb
lcall
mov
adc
jp
sub
mov
mov
xor
in
mov
jb
in
inc
dec
shl
loope
mov
int
xor
cmc
cmp
xchg
data16
sti
test
add
and
addb
dec
loopne
xor
fcmovnbe
jbe
fbstp
les
dec
sub
pop
inc
adc
cmp
lods
mov
mov
and
and
and
or
jecxz
push
mov
ds
xchg
lcall
cwtl
stc
cmpsl
fcmovnu
sahf
xchg
pop
cmc
sbb
fld
xchg
outsb
lea
pop
in
leave
push
iret
ret
or
fcomps
and
jae
add
xchg
jmp
xor
mov
jecxz
xor
rorl
leave
mov
sub
lahf
int3
fcoms
dec
imul
jae
xchg
cwtl
mov
mov
jmp
cmp
cmp
push
fs
inc
cmpsb
mov
xchg
subb
out
js
lret
outsb
adc
int
hlt
adc
and
sub
loopne
jmp
sbb
dec
inc
ret
push
data16
lock
pop
mov
stc
int3
iret
test
sbb
xchg
mov
nop
inc
cli
push
mov
sahf
pusha
out
jp
jae
es
pop
inc
test
cltd
or
cmp
xor
fcmovne
jle
mov
jp
mov
pop
push
pushf
xor
sbb
jge
clc
xchg
mov
call
xchg
stc
fldlg2
or
in
es
inc
mov
ret
pop
pop
jns
loop
rclb
and
insb
int3
mov
ja
test
mov
cmp
test
pop
popf
cmpsb
nop
test
and
imull
testl
and
ljmp
push
aam
pop
mull
and
lods
jns
sbb
and
lods
cli
hlt
fldenv
pop
jp
xchg
jo
mov
imulb
scas
fs
int3
pop
sahf
cmp
jmp
insb
inc
pop
push
xchg
and
scas
mov
fnstcw
pop
data16
cltd
in
mov
mov
jg
xchg
cmp
out
fdivrs
xor
inc
out
and
push
pop
repnz
sarb
adc
inc
das
pop
repz
mov
mov
pop
mov
xor
ds
jns
jl
loopne
lret
sbb
add
pop
jno
cmc
lea
daa
jmp
add
add
rol
data16
inc
out
std
pop
push
pop
js
lret
pusha
mov
sbb
pop
push
fs
mov
stos
push
call
adc
jne
lret
jno
cmpl
sbb
fwait
sbb
test
mov
ret
push
psubb
jg
pop
push
sub
idivl
mov
add
stc
sti
enter
mov
jle
xor
and
pop
mov
cld
jecxz
add
loopne
xor
out
add
mov
mov
jg
roll
sbb
and
and
sbb
sar
mov
pop
inc
xlat
xchg
fcoms
mov
sbb
cmpsb
iret
mov
xchg
fldt
inc
jnp
push
adc
adc
pop
jecxz
jno
adc
pop
or
aad
mov
rcl
or
lret
and
inc
push
jl
or
cli
lret
dec
jl
jb
mov
push
jae
andl
out
sbb
lock
jecxz
leave
insl
mov
aam
push
jbe
sub
or
pop
mov
fidivrs
test
imul
adc
insl
fdivrp
int3
gs
or
mov
xchg
fists
dec
cwtl
sbb
lcall
inc
mov
ret
jb
int3
aad
mov
xchg
ret
jmp
or
pop
mov
adc
clc
mov
lret
jns
es
pop
call
lret
fsub
and
addr16
mov
sbb
add
sub
push
test
call
js
aad
fstl
push
sub
sbb
les
sbb
inc
sub
scas
movsl
jo
cmp
sbb
xchg
adc
sub
mov
mov
add
sahf
cmp
and
xorb
sbb
fldenv
rorl
adc
xchg
inc
mov
out
movsl
data16
mov
in
mov
xlat
push
shufps
push
jo
pushl
addr16
imul
in
mov
cmovg
std
int
jg
in
xor
xchg
iretw
fwait
xor
sub
xchg
jno
test
andb
icebp
gs
jg
addr16
and
ss
sbb
or
inc
adc
repnz
cli
icebp
xor
cmp
fiadds
push
xor
mov
int
inc
jae
push
add
sbb
mov
push
xorb
mov
clc
mov
cmp
sub
out
jge
loop
lret
ja
sub
out
cmp
imul
outsl
jl
rorb
cmp
inc
aaa
mov
mov
std
rolb
cmp
dec
cmp
or
or
out
bound
cltd
mov
int3
push
cmp
lods
push
jae
or
mov
lods
iret
xchg
es
xchg
pop
mov
frstor
mov
inc
inc
mov
push
lahf
sub
jp
repz
and
cltd
xorl
rorb
mov
inc
adc
fsubrs
test
aas
sub
jle
mov
cmp
rdtsc
pop
sarl
and
and
add
jmp
push
jmp
aad
das
mov
push
dec
lret
inc
fnstsw
lea
sub
jmp
int
push
lret
mov
ret
dec
sub
jl
mov
adc
ljmp
add
and
mov
pusha
lods
adc
add
add
pop
add
addr16
les
mov
sub
pop
outsl
stc
mov
mov
jge
hlt
add
mov
insl
dec
int
sbb
jne
scas
mul
cltd
bound
mov
adc
faddp
dec
lret
dec
mov
fcmovbe
rolb
rclb
xchg
shlb
jbe
add
push
pop
dec
and
call
add
mov
imul
inc
jne
cltd
insb
mov
lds
push
lds
in
xor
sub
jmp
cmpsl
es
xor
icebp
dec
leave
sub
inc
mov
xchg
cmp
fsubrp
or
in
lahf
add
mov
test
shll
dec
popa
mov
push
mov
pmovmskb
ret
and
add
jle
jnp
mov
inc
sbb
pop
dec
insb
mov
push
mov
dec
or
lret
add
jl
pop
ja
sub
ja
mov
mov
adc
or
cmp
cs
dec
test
fsts
and
scas
out
mov
out
jne
mov
lds
fwait
dec
fimull
pop
sub
xor
ds
sar
jmp
mov
shll
daa
pop
std
lcall
inc
mov
cmp
test
loopne
mov
cmp
pop
outsb
std
pop
scas
push
push
es
lcall
out
aam
ud1
or
dec
mov
sub
or
aas
xor
mov
lahf
adc
pop
pop
xor
and
jmp
movsb
cmc
outsl
in
cmp
add
jmp
pop
mov
test
lea
push
pop
push
insb
data16
xchg
jecxz
scas
mov
mov
or
jg
inc
mov
lods
mov
xor
push
loope
das
xchg
inc
sbb
mov
sub
xor
loope
popa
inc
hlt
add
cmc
pop
adc
pusha
add
aaa
mov
clc
mov
xchg
jle
jns
mov
aad
outsb
int
je
leave
or
inc
inc
pop
std
pop
icebp
or
push
mov
stos
xor
xchg
xchg
add
xor
cmp
cmpsl
adc
cmp
add
mov
aad
ds
jbe
stos
repnz
clc
sub
adc
push
jo
mov
addb
and
andb
lods
cli
sbb
jecxz
xchg
sub
aas
jg
outsb
mov
dec
adc
jae
sbb
out
xor
mov
mov
mov
inc
jmp
cld
dec
fldenv
mov
push
push
dec
stc
leave
ficomps
mov
mov
jmp
icebp
jae
addr16
xchg
loop
lods
xchg
and
fcoms
jb
aam
iret
mov
ret
push
or
imul
sbb
push
daa
mov
test
dec
mov
pop
cmp
and
popa
or
sub
jne
jb
mov
jecxz
mov
in
insl
sbb
ficomps
sbb
push
outsb
sub
int
and
dec
test
aas
mov
jbe
sub
cmp
sub
ret
or
pop
sbb
pop
das
xorb
fdivl
sti
std
std
rolb
add
das
sub
stos
fdiv
ror
aaa
jl
push
push
adc
add
push
fistps
dec
xchg
add
xchg
into
loopne
xor
lret
jge
test
bound
push
lds
push
add
sub
adc
popf
inc
stc
jnp
rclb
mov
test
outsb
js
mov
repz
or
and
iret
arpl
repnz
stos
bound
xor
in
inc
sub
scas
out
je
mov
mov
lods
das
dec
xor
fidivs
push
iret
lcall
mov
sti
subsd
mov
dec
xor
call
test
xor
mov
addl
cli
test
sub
pop
fiaddl
nop
xor
sbb
cmp
pop
jae
lcall
mov
out
push
das
lea
jno
sbbb
mov
shl
xchg
sti
mov
xchg
movzbl
repnz
cmp
fstl
les
xlat
dec
shrb
xchg
mov
inc
xchg
dec
mov
jge
mov
test
dec
repnz
rolb
push
and
add
je
push
mov
mov
inc
xchg
shlb
ret
push
cs
stos
sahf
ss
nop
insl
sbb
xchg
inc
jnp
jmp
push
cli
fistpll
dec
pop
data16
aad
xchg
movsb
cmc
subb
xchg
or
cmp
bound
in
fwait
inc
mov
and
mov
or
sub
movsl
mov
sahf
es
xor
xor
mov
lods
adc
adc
jg
fsubrp
stos
lds
adc
or
negb
loopne
jae
ret
push
jno
cltd
dec
pushl
jmp
je
push
fucom
aas
insl
and
cltd
adc
icebp
sbb
bound
xchg
mov
xor
sbb
dec
and
leave
push
ljmp
xor
lods
jns
sub
outsl
in
out
mov
lds
or
orb
sub
adc
ficoms
insb
hlt
icebp
stos
repz
jge
les
pusha
mov
aad
inc
cmp
adc
xor
add
in
cli
push
fbld
int3
movsb
mov
dec
jp
xor
out
or
pop
jns
ja
data16
stc
bound
lods
mov
rcll
sbb
dec
lea
shrl
shr
mov
xacquire
dec
add
insb
mov
sahf
insb
movsb
inc
mov
push
in
mov
xrelease
push
and
cmpb
inc
add
les
mov
shrb
repnz
cmpsl
incl
aaa
aad
cmc
xor
xor
mov
mov
aad
mov
xor
pop
mov
dec
cwtl
add
in
mov
stc
push
mov
out
sub
gs
adc
mov
mov
inc
inc
out
mov
jecxz
cmp
add
cs
jb
jns
out
jb
pop
inc
out
shr
xchg
pop
lahf
mov
inc
inc
sbb
insb
add
push
sbbl
outsl
lret
sub
loope
push
lods
xor
cltd
xor
cmp
insl
xor
sub
dec
test
dec
pop
mov
pop
cld
add
jo
imul
push
sbb
mov
push
jle
adc
popa
push
pop
jmp
jle
js
aam
lods
sbb
add
add
shll
jg
dec
inc
fadds
jnp
pushl
push
loope
add
test
mov
mov
xor
lods
mov
stos
enter
add
out
cmp
pop
nopl
cmp
sub
and
cwtl
mov
adc
sbb
lods
cmpsb
sub
ljmp
rolb
jb
testb
cs
pop
subb
ja
sub
add
movsl
inc
xlat
fnstcw
repnz
lret
push
adc
ror
das
dec
lods
test
inc
pop
mov
jecxz
sbb
push
repnz
outsl
lods
mov
in
lock
hlt
mov
icebp
insb
xor
or
pop
ret
jo
bound
cltd
roll
dec
mov
jmp
loopne
sub
push
out
in
push
mov
push
test
xor
ja
push
fimuls
and
add
jle
push
inc
sti
cmp
push
imul
xor
or
jae
sub
push
nop
inc
outsb
lods
cmc
cmpsl
out
push
arpl
stos
ror
adc
jle
mov
or
sarl
xchg
adc
inc
icebp
js
jbe
jbe
inc
or
adc
mov
lahf
mov
ja,pt
imul
leave
test
lahf
xor
sbb
xlat
cs
xchg
push
jne
fcmovb
dec
arpl
imul
jno
push
loope
and
and
movsb
in
daa
int3
jecxz
movsl
pop
outsb
mov
and
inc
inc
jecxz
cli
aam
rcll
jge
pop
mov
jle
mov
pop
jne
aam
push
xchg
in
pusha
jo
in
or
pop
lods
ds
jmp
xor
sub
bound
mov
pop
cltd
repz
stos
add
out
fcomps
shrl
xor
mov
sub
and
xchg
fisttpl
push
sbb
mov
push
xchg
inc
test
icebp
inc
and
and
and
arpl
xchg
aam
loope
and
sbb
in
das
sub
push
push
in
adc
inc
fildl
mov
mov
pop
test
mov
fsubrs
inc
mov
sub
loop
sbb
jp
xchg
jecxz
jae
add
in
ss
jecxz
leave
mov
lock
cmpsb
lock
test
sub
xlat
rcll
lods
ja
pop
lock
and
stos
div
out
jl
or
lea
insl
cmp
lcall
xor
iret
jg
enter
cld
data16
mov
test
mov
stos
das
fdivl
imul
pop
jnp
out
xchg
repz
pop
es
popl
pop
pushf
lea
lahf
js
scas
test
mov
scas
xchg
pop
pop
loopne
dec
addr16
loop
inc
fidivrl
sbb
dec
xchg
xchg
sbb
pop
sarb
test
daa
jg
fnstsw
jb
sahf
mov
scas
push
push
mov
or
inc
les
rorb
fucomp
cmpsb
mov
mov
fsubs
jbe
jb
jge
adc
out
and
push
pop
mov
or
pop
push
pop
and
dec
push
cmp
fstl
or
adc
dec
jno
pop
lret
cli
stos
xchg
pop
xchg
dec
jmp
mov
cltd
ja
and
inc
fiadds
push
das
pop
push
adc
xor
inc
rol
sbb
fidivs
or
fwait
lock
loope
test
push
and
cmp
xchg
push
push
movups
aad
into
lds
add
arpl
mov
das
and
rolb
mov
dec
mov
dec
xor
mov
stos
xlat
in
or
inc
int3
lods
sbb
mov
iret
pop
pop
shlb
gs
das
lock
rorl
and
jp
xchg
in
scas
ret
cli
mov
loope
jbe
lcall
mov
mov
cmp
or
leave
mov
sub
sub
or
jmp
repz
dec
mov
sub
fwait
add
nop
testl
mov
incb
stos
jne
je
fsub
jbe
xor
mov
into
pop
adc
test
iret
sub
jmp
and
ret
out
outsb
rcrl
daa
jp
add
movsl
out
cmp
adc
lahf
or
mov
jbe
jg
std
outsl
push
es
fldcw
sarb
ljmp
cltd
js
push
xchg
fisubrl
jnp
dec
jp
or
or
dec
lret
fidivrl
pop
cs
jp
jb
xchg
aam
sub
inc
push
mov
add
mov
sub
loope
jbe
xchg
mov
popf
aas
mov
push
inc
ret
fs
pop
int3
je
cmc
mov
aas
sub
sbb
lds
sbb
es
out
les
outsb
lock
add
in
loope
fsubl
testl
pop
fmull
fdiv
fidivl
testl
jge
mov
seto
pop
ret
sub
nop
fdivrs
pop
out
repz
inc
repz
sbb
inc
push
lods
scas
cmp
and
jae
aam
dec
xchg
cmp
lret
test
add
cmp
cmp
xor
scas
jg
fs
iret
pop
and
adc
ss
xchg
std
lret
push
add
and
mov
inc
ss
adc
das
sahf
shr
cmpsb
pop
cmpsl
rclb
lahf
jae
leave
test
sbb
push
pop
sahf
adcb
loope
push
xor
outsb
in
push
mov
push
ljmp
lods
mov
mov
adc
js
popf
cmp
push
pop
adc
sbb
xchg
jbe
nop
xchg
lods
xor
loop
pop
outsb
and
mov
imul
dec
inc
xchg
cld
sbb
pop
push
fnstsw
push
jae
add
mov
mov
jmp
xchg
push
cmp
flds
adc
fs
or
test
addr16
decl
mov
in
cltd
fsubrs
pop
stc
mov
jge
cmpb
test
xchg
sbb
sbb
movsb
adc
loopne
xchg
scas
pusha
sub
or
test
xor
cli
lods
xlat
sbb
xchg
sbb
ds
xchg
fisubl
cmpsb
sbb
adc
push
stos
fstps
inc
dec
dec
pushl
pop
xor
mov
cmp
and
pusha
rolb
xchg
inc
ljmp
hlt
push
fcmovb
out
xchg
inc
incb
push
jecxz
arpl
adc
addb
imul
add
adc
shrb
sti
into
sub
aas
sbb
mov
or
dec
ss
pop
xchg
popf
add
les
mov
outsl
addb
daa
sub
inc
pop
sbb
cwtd
mov
sbb
test
in
hlt
cs
pop
xor
cmp
test
cld
adc
outsl
mov
xchg
adc
xchg
pop
pop
mov
xor
jle
std
push
mov
jmp
add
push
popa
add
sub
mov
sarb
mov
cmp
and
loope
and
cmp
sbb
or
sub
xor
cmp
inc
daa
mov
or
ja
subl
and
jae
jmp
sbb
insl
inc
decl
inc
adc
and
xor
pop
enter
push
mov
int3
adc
jecxz
loope
add
inc
dec
outsl
or
cwtl
popf
cltd
mov
ficompl
xlat
mov
icebp
iretw
lcall
out
psllw
inc
mov
ds
cltd
mov
jno
test
xchg
sarl
loopne
add
fs
inc
mov
lds
into
xor
arpl
sbb
mov
addr16
cmp
sub
adc
xchg
jnp
arpl
xor
insl
fidivrl
outsb
rcrl
addl
jb
data16
test
icebp
dec
outsl
fs
shlb
dec
aaa
inc
arpl
inc
lds
mov
inc
or
sub
xor
mov
out
adc
movsl
bound
cld
mov
xchg
mov
pop
pop
aas
and
fistpll
scas
push
sarb
stos
jmp
mov
aam
rcrb
sbb
xchg
out
sub
popl
jae
sub
jge
aas
js
xchg
mov
rcrb
dec
mov
sub
ljmp
jl
js
in
mov
add
mov
xor
sbb
inc
arpl
add
adc
ds
sub
rcl
cmp
inc
cli
lea
lahf
fmuls
fsubrs
mov
icebp
mov
sahf
sub
adc
add
outsl
mov
iret
int3
dec
xchg
ss
fsubrl
xorb
insb
loope
arpl
pop
imul
push
jmp
jge
dec
pop
xchg
push
sbb
mov
dec
mov
nop
cmc
js
mov
fimull
xor
mov
mov
test
mov
movsb
mov
aaa
loopne
cmp
sahf
js
test
pusha
dec
push
inc
add
stc
xchg
push
hlt
inc
dec
test
sbb
mov
push
xor
jns
lret
sbb
sti
lds
sbb
cli
pop
scas
mov
push
mov
out
fiadds
stos
and
testl
lcall
push
cmp
test
xchg
cmp
and
xor
mov
mov
addr16
ljmp
call
repz
and
fsubr
in
and
adc
scas
popa
push
lods
push
pop
jp
insl
scas
push
jnp
adc
loope
and
mull
sbb
pop
jno
inc
inc
jne
call
xor
icebp
rorb
dec
adc
push
inc
mov
push
les
cmp
loope
add
xor
mov
add
insb
xchg
add
rcll
push
dec
pop
hlt
jl
dec
nop
imulb
nop
jle
movsb
sti
icebp
dec
push
add
roll
adc
adc
sub
stc
pop
lds
jno
and
xchg
xchg
bound
cli
mov
push
aam
in
gs
sub
adc
lret
pop
out
push
in
xor
outsb
orl
and
inc
jbe
mov
inc
jmp
mov
out
arpl
mov
outsl
ds
stc
iret
test
inc
push
mov
xchg
inc
push
sahf
xchg
movsb
subb
mov
sbb
mov
jae
add
out
or
scas
sub
into
movsb
mov
cmp
cmp
or
cmpsb
xchg
or
sub
loope
out
mul
out
rorb
dec
stos
cmpsl
mov
ljmp
in
les
xchg
call
lods
add
imul
add
inc
aas
icebp
call
pop
fcom
leave
mov
lods
jns
mov
mov
mov
adc
mov
or
sub
mov
sbb
outsb
loopne
data16
cmp
mov
add
sahf
test
sbb
mov
mov
into
popa
push
push
or
into
jns
cs
and
outsb
outsl
inc
popl
add
jp
inc
push
shll
jle
imul
lcall
add
shrb
iret
cmpsl
ljmp
leave
out
lret
mov
xchg
jno
push
adc
push
rol
jg
push
aad
pop
ret
cmp
movl
fiadds
mov
aas
js
lock
sbb
adc
sub
push
inc
out
sbb
nop
cmpsl
sbb
mov
xor
xchg
pushf
fs
lods
popf
sbb
jo
icebp
rclb
push
jo
lcall
fwait
inc
jl
adc
adc
jae
xor
mov
sarb
pop
xchg
les
shll
adc
push
add
pop
jl
pop
push
xor
mov
mov
shrd
das
mov
pop
and
shl
mov
into
nop
lret
or
cmp
push
jl
and
aam
xor
jmp
and
in
sbb
mov
lods
cmp
add
std
push
pop
push
jno
hlt
mov
out
xor
add
sahf
and
das
mov
jo
pop
cmp
pop
mov
adc
or
lahf
pusha
icebp
outsl
fucom
lret
insb
outsb
std
loope
pop
into
ret
xchg
push
inc
adc
inc
pop
and
stc
or
jns
das
mov
push
in
jno
fcmovu
xor
mov
adc
jmp
or
cmp
lret
addl
push
cs
sbb
push
shr
shrb
jge
dec
addr16
push
addr16
add
mov
xor
imul
push
aaa
mov
jns
sub
dec
stos
xor
cmovg
pop
add
aas
pop
push
jb
stc
arpl
xor
jbe
add
imul
add
outsb
dec
sub
fincstp
pop
mov
pushf
lea
dec
xor
fbld
mov
inc
xchg
jae
arpl
lret
jmp
push
add
mov
daa
inc
bound
mov
sub
mov
lds
aas
hlt
aaa
scas
add
inc
int
stos
mov
xchg
hlt
inc
icebp
jp
sbb
lods
sbb
and
pop
push
cmp
jle
fcmovu
lods
adc
shl
jns
fnsave
fs
xchg
fimuls
insb
push
aas
mov
push
mov
jge
daa
xor
sbb
xor
jno
loopne
std
and
rcll
stc
adc
decb
mov
fiaddl
pusha
shlb
and
or
rorb
add
push
xor
mov
mov
pop
dec
mov
mov
loope
fidivl
sub
adc
dec
test
mov
lcall
dec
or
mov
call
sbb
mov
sub
rclb
mov
mov
xor
cld
mov
or
loopne
sbb
cwtl
out
test
fisubl
ds
or
push
xchg
adc
addl
or
jnp
or
mov
sbb
cmpsl
cmp
mov
mov
jmp
dec
cmp
or
sub
dec
stos
je
or
inc
lcall
icebp
movsl
xchg
shlb
sbb
push
repz
add
mov
xor
jp
cmp
das
adcb
jo
scas
add
xor
aaa
psrld
xlat
ja
lcall
imul
inc
jecxz
adc
inc
stos
dec
lea
xor
adc
iret
repz
push
push
mov
pushf
jecxz
cvtps2pi
rorb
cltd
push
aas
repz
cltd
inc
jne
bound
mov
subl
fistpll
dec
dec
fs
mov
das
jb
or
mov
xchg
inc
inc
aas
add
inc
outsb
ss
jle
adc
sti
sti
hlt
mov
push
push
add
sub
pop
mov
inc
int3
ljmp
pop
enter
mov
sti
cmpsl
addr16
jb
in
xor
xchg
rclb
push
lods
jns
aaa
fldt
xchg
shl
rclb
loopne
push
shll
mov
xchg
jne
sub
lcall
push
dec
mov
xorb
dec
out
fnstenv
or
push
ds
push
and
loopne
gs
sub
es
in
fs
dec
jb
jle
repz
lahf
xor
inc
mov
out
pop
ljmp
sbb
movsb
xchg
dec
sub
add
inc
iret
sub
scas
cmpb
cmpsb
sub
fld
jmp
push
pushf
jp
js
scas
sub
in
scas
imull
push
jg
cmp
leave
jecxz
arpl
jle
dec
mov
loop
and
in
mov
data16
js
sub
mov
fidivrl
mov
cmp
or
les
sbb
mov
adc
stc
shrb
adc
sbbb
jns
xor
jl
shr
icebp
push
xchg
mov
out
jae
fcompl
test
scas
leave
xchg
sbb
cmp
push
in
popa
mov
jnp
jl
mov
mov
xor
xor
xchg
das
jge
pop
lods
enter
sbb
lret
addl
cmpsb
sbb
jb
mov
lods
adc
or
lods
sub
lods
stos
pop
jle
dec
outsb
sbb
js
sbb
cmp
jecxz
jb
das
add
rolb
push
cmp
xor
dec
stc
movsl
pop
cmp
movsb
andb
pop
rcrb
push
jae
adc
sarl
cli
sarb
sub
loop
sbb
inc
mov
mov
mov
popa
or
jnp
push
sbb
shlb
aad
repz
in
inc
mov
and
push
and
cmp
rcrl
jl
test
or
insl
push
lea
pushw
lret
repnz
mov
test
push
xchg
jmp
je
sub
inc
mov
out
xor
jnp
inc
mov
or
nop
pop
xor
mov
cwtl
sbb
fisubrs
add
pop
movsb
mov
cs
test
int3
push
pop
sbb
pop
jo
arpl
pusha
jnp
xchg
in
fildll
xchg
insl
js
mov
lret
es
and
js
push
cmp
cmp
inc
std
cmp
out
stc
icebp
and
fidivs
cmp
mov
ss
shlb
add
adc
test
dec
push
mov
xor
mov
dec
shlb
iret
or
in
in
into
mov
adc
mov
adc
imul
dec
dec
mov
cmpsl
inc
push
fs
xor
inc
mov
cmp
xor
out
xor
sub
stos
jo
or
jb
addr16
mov
mov
push
mov
sti
sub
sbb
pop
mov
ljmp
popf
xchg
rcll
mov
inc
movsb
xchg
xchg
sub
push
mov
adc
cmp
jecxz
insl
mov
hlt
pushf
popl
leave
lahf
jno
dec
icebp
and
mov
mov
jmp
and
sub
mov
loope
fprem1
lret
daa
push
ror
stc
mov
or
lahf
lods
out
jle
cmp
pop
stos
mov
mov
push
inc
jnp
pop
or
mov
push
andl
daa
adc
outsb
xchg
or
and
push
xor
pop
xor
sub
outsb
pop
xor
bound
cli
call
mov
pop
sub
add
mov
ljmp
rclb
dec
or
bnd
lahf
push
fisttpll
mov
mov
test
fwait
add
ficoms
adc
cmc
fadds
or
push
mov
xor
les
pmulhw
cmc
jmp
push
jl
add
cmp
xor
add
cs
inc
inc
adc
arpl
lret
bound
lods
mov
adc
lea
jb
daa
insl
jns
mov
xor
cmp
arpl
add
add
das
stos
in
rolb
or
popa
out
movsl
pop
add
lea
into
out
popf
adc
mov
add
add
sub
jns
and
mov
inc
ficomps
aas
mov
dec
pushf
dec
mov
jbe
cwtl
out
pop
in
inc
f2xm1
arpl
cli
xchg
cmp
jge
test
out
iret
out
cmp
scas
mov
sbb
pop
or
gs
add
pop
fsubrl
cltd
xchg
nop
inc
add
mov
add
inc
outsl
cmp
adc
add
in
bound
cwtl
jne
addl
in
repnz
fwait
mov
xor
out
sbb
icebp
ds
loope
mov
mov
push
cmpsl
and
pop
shll
aaa
cli
adc
adc
enter
fisubrs
mov
test
mov
sbb
xlat
test
fwait
loope
or
sbbb
aad
sub
cmp
hlt
sub
int3
std
pop
or
sub
fcmovu
dec
dec
iret
mov
dec
mov
dec
sti
das
sar
jl
add
pop
icebp
cmp
inc
mov
stos
sub
pop
sub
call
arpl
adc
ljmp
rclb
mov
mov
repz
dec
mov
fiadds
jns
out
repz
or
aas
loope
iret
xchg
add
fcoml
out
fcmovnb
int3
in
enter
or
xchg
pusha
popl
jno
jbe
and
adc
mov
sbb
in
xlat
leave
popf
nop
out
add
pop
fsubrl
inc
mov
xor
in
jmp
add
inc
mov
out
sub
cmpsl
cmc
mov
jns
icebp
aas
mov
cmp
addl
insl
cmp
leave
sahf
mov
cmpsb
fwait
mov
pop
inc
cmpsl
xchg
add
adc
xlat
repz
test
adc
gs
push
mov
xor
and
mov
inc
mov
inc
call
pop
mov
sbb
xchg
loope
dec
data16
scas
mov
mov
xchg
std
push
ss
adc
ds
cmpsb
or
lods
ja
inc
popa
sub
xor
pop
lods
mov
movsb
pusha
push
sti
jp
or
jnp
add
mov
mov
push
xlat
js
add
faddl
mov
jnp
loop
lds
arpl
inc
stos
push
movsl
test
es
sbb
xor
stc
or
ror
mov
mov
inc
dec
push
testl
sbb
into
cli
xchg
dec
leave
call
mov
push
pop
push
push
mov
push
mov
sub
xchg
adc
jb
dec
lahf
dec
mov
pop
push
jbe
sahf
icebp
rclb
mov
mov
outsl
bnd
inc
lock
mov
push
in
push
lock
int3
fs
dec
outsb
shll
inc
sub
loop
mov
ss
push
xor
orl
lds
adc
push
repnz
aas
sub
lods
mov
inc
aam
or
jb
inc
jno
repnz
or
les
mov
jecxz
movl
mov
mov
sbb
inc
fdiv
fsubp
daa
imul
std
popa
xor
sbb
mov
add
movsl
shl
push
cmp
scas
mov
out
mov
or
scas
leave
inc
imul
mov
call
lods
jbe
mov
jg
sub
adc
loop
int
pop
je
xor
out
add
mov
test
cmp
jo
leave
push
test
sbb
cmp
xor
mov
daa
vpcomd
xor
sub
push
pop
jo
dec
repz
les
stc
arpl
fisttps
repnz
sub
repnz
mov
xor
gs
cmp
fstpt
add
xchg
xchg
aaa
dec
pushl
popaw
imul
or
mov
imul
xor
stc
lret
sahf
and
mov
shl
jae
pusha
movsb
addr16
sbb
arpl
leave
iret
bound
inc
mov
push
sarb
addr16
test
sbb
icebp
mov
mov
fiadds
in
dec
xchg
fdivrs
jnp
hlt
adc
repnz
arpl
loope
sub
inc
lea
push
lcall
push
lret
push
jmp
sub
lds
fwait
xchg
sub
jl
pop
sbb
cs
neg
ret
mov
into
sbb
leave
pop
cmp
xchg
andb
fwait
xor
dec
call
mov
sub
loope
lock
mov
pushf
add
lret
mov
jbe
adc
add
xchg
push
scas
jnp
mov
cmp
mov
push
push
jle
cmp
ljmp
aas
mov
lahf
out
cmp
inc
imul
call
lret
cmp
lcall
jns
pop
imul
xchg
push
adc
sub
aad
sub
jns
xchg
movsl
mov
aas
shll
mov
into
nop
in
aad
and
lcall
out
jmp
mov
mov
insb
mov
rcr
ret
and
incb
pop
or
aaa
push
push
inc
add
cmpsb
in
pop
push
mov
mov
mov
or
xor
ds
test
add
fisubs
lret
sub
mov
adc
lret
jb
or
xor
fnstcw
and
cmpsb
mov
dec
into
jmp
mov
mov
and
aad
mov
or
xchg
adcb
les
stos
or
mov
jns
lea
xor
hlt
cli
add
outsb
pop
lea
or
loope
push
jb
mov
jl
in
cmp
les
push
xchg
push
adc
and
bound
push
mov
mov
push
dec
adc
jge
inc
add
stos
mov
lret
loop
insb
mov
cwtl
sti
mov
push
ja
rcll
push
pop
cmp
mov
inc
pop
sbb
pop
mov
jp
out
and
aaa
cli
imull
fidivl
adc
lock
movsb
arpl
inc
jno
mov
jnp
inc
jbe
sub
mov
cmp
loop
jbe
pop
mov
arpl
push
push
stos
mov
clc
xchg
rolb
mov
hlt
jg
ret
fcmovu
jmp
ficompl
mov
pop
fldl
mov
pop
add
sbb
andb
xor
jle
push
lock
mov
fsubrl
xchg
dec
jnp
sti
mov
ds
ret
stc
mov
imul
add
pop
adc
jecxz
mov
and
test
popl
rcll
jno
push
mov
pop
sbb
negl
mov
mov
ljmp
cmpsb
addb
xor
pop
cmc
lea
jo
dec
inc
push
lods
pop
sti
out
push
mov
and
mull
test
in
les
out
loopne
mov
repz
push
sub
mov
ljmp
add
sub
outsl
call
mov
orl
aaa
daa
add
mov
dec
cmpsb
fcoms
mov
xchg
insl
mov
cmp
mov
and
fistpl
shrl
out
xor
or
pop
xchg
flds
lds
inc
pop
sbb
mov
hlt
ret
clc
mov
inc
cmpsl
movsb
or
jb
xor
ss
test
adc
in
lret
push
cmpsl
stos
dec
clc
push
test
add
sub
arpl
fwait
cmp
mov
jbe
dec
inc
cmp
in
push
fistpl
ds
fcmovu
adc
lds
xor
or
int3
xor
push
jb
mov
or
and
leave
in
adc
stc
dec
imulb
pushf
sub
stc
jge
add
add
out
jnp
lods
negb
jb
mov
mov
subl
xchg
or
sub
mov
lahf
shll
mov
push
out
fwait
or
pop
sti
dec
ret
mov
les
subl
sti
sub
in
ret
xlat
cmp
xor
rcll
jp
push
adc
cmp
and
add
rolb
icebp
or
push
int
lret
aas
mov
xor
adc
and
arpl
insl
adc
pop
dec
cmp
push
aam
push
adc
cwtl
cltd
ss
into
jmp
lods
scas
dec
mov
addr16
or
cltd
push
and
xor
pop
pop
adc
mov
mov
sub
lret
xchg
das
imul
in
mov
jne
cmp
xchg
pop
sbbb
mov
es
lret
add
daa
lods
cmp
repz
lock
mov
fstl
aaa
lahf
fimull
fstps
xchg
imul
pop
cwtl
jns
mov
sbb
xchg
sub
sbb
xchg
sbbb
adc
leave
fldt
lret
je
ja
fucomip
ret
mov
out
sbb
mov
int3
sub
add
sub
sub
cmpsl
dec
ljmp
ljmp
inc
pop
inc
insb
lcall
jp
out
mov
push
xchg
jge
mov
push
xchg
leave
and
or
int3
jnp
cmp
or
outsl
aaa
fisttps
daa
pop
out
fmull
dec
lcall
xlat
into
xor
ja
pop
sub
pop
push
popa
mov
das
stos
iret
gs
or
cmp
dec
insb
or
out
push
loop
jb
xor
sub
imul
jmp
in
push
jb
mov
lock
adc
scas
mov
mov
dec
jp
pop
push
mov
inc
xor
add
jb
cltd
push
jmp
mov
adc
out
ror
addr16
mov
fstpl
or
cmp
xor
add
jo
jbe
loope
mov
xchg
int3
cmc
pusha
add
fadds
out
loopne
push
sarb
cmpsl
popf
sbb
sbb
loopne
pusha
call
enter
pusha
adc
dec
inc
adc
and
dec
aaa
aad
cmp
jno
int3
or
sbb
mov
sbb
repz
shl
pcmpeqd
add
jle
xchg
push
add
mov
and
lock
test
jb
sbb
and
inc
ds
fiadds
and
loopne
sarl
fwait
and
dec
sbb
push
ret
cmp
cmp
int
repz
push
jle
movsb
adc
or
inc
out
sarl
push
cld
std
jo
mov
mov
icebp
jno
pop
mov
fwait
push
sbb
add
lods
rcrl
in
in
pop
cmp
xchg
int
cli
mov
xchg
mov
data16
sbb
jg
fistl
mov
shll
ret
dec
jmp
add
adc
addr16
aaa
int
mov
push
repnz
movsb
xchg
jl
mov
xchg
shll
jg
test
aam
data16
mov
int3
jmp
mov
pop
scas
sub
mov
sub
mov
hlt
xchg
mov
ds
mov
mov
cmc
sub
in
or
outsl
rolb
int
popa
pop
inc
incb
pop
xchg
pushf
and
pop
dec
xchg
insb
out
ss
rolb
xchg
lods
sbb
mov
ljmp
xchg
lret
jae
testl
subb
jmp
gs
dec
icebp
inc
call
mov
out
and
shl
mulb
xor
fwait
add
cli
out
cmp
xchg
xor
dec
cmpsb
dec
cmp
fdivrl
mov
xor
cmpsl
or
sbb
hlt
mov
xor
add
push
out
movsb
pusha
test
stc
mov
shlb
aad
mov
xor
dec
mov
mov
push
insb
mov
pop
add
mov
cwtl
stc
fcomps
stos
adc
movb
cmp
lock
jo
pop
orl
scas
and
jne
xor
pop
lock
cwtl
dec
popf
insl
loop
scas
mov
cmc
wbinvd
sub
dec
in
mov
daa
ret
mov
insl
jecxz
aaa
fdivrs
fs
mov
jne
cmpsl
dec
cmp
out
jg
inc
mov
add
aaa
cmp
inc
dec
pop
adc
fisubrs
add
push
mov
decl
daa
xchg
inc
or
imul
ret
ret
jmp
jae
fsubp
or
cli
pop
les
sbb
lahf
mov
sbb
sbb
repnz
mov
in
leave
mov
pop
inc
inc
jmp
inc
sbb
bound
and
xchg
push
into
cli
mov
inc
addr16
lret
dec
push
push
push
lcall
cmp
scas
pop
pop
das
clc
xor
mov
xchg
mov
loopne
or
movsb
xchg
xor
out
popa
jg
fs
fwait
jns
jae
arpl
or
pop
sarb
push
push
mov
sbb
cmp
fildl
push
inc
adc
dec
out
xor
xor
and
sub
rolb
add
mov
cli
cmp
mov
fnstsw
imul
add
pop
jp
loopne
popf
xchg
stos
adc
inc
ljmp
adc
les
jae
lret
jecxz
push
out
add
test
mov
enter
and
mov
icebp
and
ljmp
loope
insl
jo
js
ja
rcll
xor
sub
mov
dec
or
xor
pop
stos
jmp
lret
adcb
and
cltd
mov
cltd
add
cmpsl
or
test
int
xor
sub
sub
or
lods
mov
or
movsl
popf
outsb
fistpl
push
bound
test
xchg
pop
stos
and
lods
or
lock
cmp
jns
bound
pop
scas
jne
sub
mov
dec
pop
mov
daa
pop
ss
sbb
loope,pn
xlat
xor
inc
lock
mov
pop
mov
cmpsl
jecxz
inc
add
das
or
int
push
xchg
bound
test
jmp
inc
adc
push
mov
push
xor
cmp
push
sub
je
aad
gs
iret
cwtl
test
ret
push
clc
shlb
movsl
cmp
js
dec
ljmp
mov
aas
int3
push
sub
dec
loopne
jmp
cmp
clc
popa
jno
fxch
into
sbb
mov
sub
cmc
mov
sbb
inc
test
ret
ss
xchg
mov
mov
cmp
sarb
sbb
out
mov
and
xchg
sub
inc
out
iret
xor
cmp
mov
es
movsb
cmp
pop
push
or
lea
outsb
ja
push
aad
lret
mov
daa
cmp
pop
out
xor
dec
cmpsb
je
xorb
lcall
mov
cmp
lock
fwait
pop
and
sbb
cli
adcl
cli
cmp
ljmp
fmul
enter
xchg
xchg
sahf
loope
pop
out
fsubs
lds
iret
fs
or
mov
pop
dec
frstor
pop
hlt
nop
lods
or
inc
mov
cwtl
orl
inc
or
mov
cmp
lock
lea
mov
call
lret
out
jne
in
sub
cmp
and
pop
push
inc
leave
repnz
loop
mov
push
int3
xchg
dec
loopne
or
aaa
xchg
sub
push
setp
dec
xlat
dec
jo
in
adc
shlb
cmp
jge
bound
or
popf
dec
or
fsubs
xor
test
nop
xchg
xor
imul
jl
sbb
push
mov
sub
loop
inc
inc
pop
sbb
lock
fdivr
sbb
outsl
mov
mov
stos
cmpsb
xchg
pop
data16
imul
mov
test
mov
outsl
fmul
mov
fcmovu
xchg
call
xor
add
or
pop
and
icebp
inc
sub
xchg
adc
out
enter
int
push
clc
mov
add
or
cmp
loopne
or
mov
ljmp
adc
js
mov
cmp
iret
xchg
jecxz
lea
jnp
int
or
add
add
push
je
inc
jbe
xchg
mov
sub
xchg
lret
jecxz
lds
xchg
cmp
out
stc
add
xchg
jo
pop
jl
ret
gs
jle
or
lcall
arpl
pop
rorb
push
mov
arpl
aad
jmp
into
and
mov
push
inc
push
jae
ret
cmp
xchg
enter
inc
pop
and
xor
xor
aad
cs
inc
sbb
push
pop
popf
cmp
adc
push
data16
inc
out
inc
cwtl
sbb
and
ljmp
add
push
scas
pop
xor
out
mov
cmc
test
push
fstl
lahf
dec
mov
jbe
jo
sub
rclb
and
dec
jnp
addr16
mov
and
lret
adc
mov
xor
and
cmp
push
dec
jae
xor
fcompl
dec
mull
xchg
in
cwtl
mov
test
sti
inc
sbbb
add
push
add
push
mov
push
adc
mov
popa
in
outsb
repnz
xchg
dec
dec
cs
es
insb
mov
dec
mov
mov
or
into
outsl
popf
inc
xor
int3
insb
fsts
nop
mov
xor
dec
outsl
jns
rol
fnstcw
ficoml
or
popf
lcall
lret
xchg
sub
jg
xor
test
ja
mov
inc
divb
cmpsb
cmp
mov
pop
cmp
pusha
jno
add
add
push
mov
xchg
push
popf
shlb
sbb
ds
movsb
mov
mov
add
mov
and
scas
push
lods
out
out
dec
add
and
stos
cmpsl
pop
adc
je
rcr
in
mov
xchg
test
dec
jno
popa
jae
adc
push
faddl
pop
mov
and
outsl
in
adc
jmp
das
cmp
lret
stos
xchg
push
add
jbe
add
xor
add
sbb
add
imul
pop
shlb
loop
xor
and
pushl
jno
dec
push
and
fnstsw
ljmp
sti
jno
jnp
sbb
add
pop
mov
or
inc
test
jo
inc
movl
push
pushl
adc
pop
in
sahf
int3
push
ss
mov
sub
out
cmp
pop
fmull
addr16
js
inc
mov
adc
popa
xchg
decl
jp
mov
test
lret
dec
filds
mov
inc
cmp
in
aam
push
divl
add
fcompp
mov
daa
add
inc
sub
mov
push
jne
rcrb
std
jne
insb
lahf
jne
inc
outsl
xchg
xchg
lret
pop
sbb
mov
sub
jns
pop
fbstp
cmc
imul
lret
int
push
aam
ss
adc
lods
inc
cmp
mov
hlt
push
lds
push
scas
add
or
inc
fistps
outsb
pop
test
mov
inc
repz
addb
cmp
incl
cmpsl
sti
xchg
ret
mov
pop
fs
pusha
add
mov
rcrb
fwait
and
push
es
push
notl
out
jg
lahf
jbe
movsl
add
push
add
ja
xchg
popf
mov
jg
and
add
into
fldcw
pop
loope
and
pop
push
mov
in
fsubs
pop
and
jb
jae
bound
dec
test
cwtl
push
sub
and
add
sbb
sti
dec
ds
mov
xor
mov
pop
popf
xchg
and
mov
cmp
sub
cwtl
xor
jno
mov
xchg
loopne
lahf
cmp
pop
or
or
adc
insl
mov
or
in
inc
pop
xor
mov
add
fs
push
xor
and
rcrl
cmp
push
jne
in
subb
nop
or
mov
sub
aaa
mov
movsb
and
mov
pop
std
loop
negb
leave
dec
mov
pop
jbe
icebp
cld
xchg
xor
dec
mov
iret
shll
int
fiadds
add
jp
dec
bound
jp
add
sti
push
inc
es
push
pop
dec
imul
repz
ret
rclb
lret
ret
xorl
xchg
cs
filds
mov
xchg
xor
inc
or
xorl
cli
sbb
ds
and
lret
stc
repz
and
adc
cltd
dec
pop
ljmp
mov
adc
sub
push
iret
push
jns
sbb
mov
mov
push
mov
ja
orl
fisubl
movsl
push
fists
fildll
xor
xchg
inc
mov
or
movsl
xor
out
es
jmp
jo
sbb
push
icebp
lds
into
inc
xor
rclb
mov
push
and
repz
inc
add
jno
lds
and
push
nop
test
movsb
push
ficoms
push
jg
repnz
ret
int
lea
fisubrs
lock
repz
jae
sahf
push
mov
outsl
das
lcallw
ds
aaa
scas
jb
adc
clc
mov
push
mov
fwait
sbb
push
mov
mov
cli
cmp
rcrl
mov
out
loopne
fcoml
pop
sub
daa
push
xor
cmpw
repz
sub
or
cli
nop
test
out
sub
int3
xchg
fiaddl
in
fldcw
jecxz
jl
mov
mov
mov
push
push
out
mov
pop
pop
scas
dec
icebp
scas
mov
les
testl
mulb
inc
sub
pop
sarl
jg
cmp
cmp
movsb
sbb
sahf
or
lahf
mov
fbstp
mov
mov
sbb
fldt
lret
xor
pop
xchg
mov
and
pop
in
cmpsb
loopne
adc
jns
adc
mov
push
push
inc
or
mov
daa
mov
add
gs
sub
push
aas
sub
jne
sub
add
pop
aad
mov
aas
int3
xchg
fwait
jge
jge
adc
or
mov
je
lods
lahf
sub
pop
jmp
mov
jno
cmp
mov
xor
cmc
or
sbb
scas
inc
in
inc
loope
xchg
cmp
jp
out
cs
jge
insb
inc
inc
scas
je
std
test
pop
mov
jl
aaa
inc
leave
js
pushl
imul
xchg
fsubs
in
pop
jno
mov
lods
fldt
push
fs
lds
int
into
and
popa
ret
jecxz
sub
addb
je
cwtl
mov
cmpsl
ffreep
repnz
lcall
sbb
jp
ret
mov
sbb
lock
cmp
push
aam
fldl
orl
das
adc
in
cmpsl
adc
mov
ficoms
pop
test
xchg
mov
lea
pop
xchg
es
mov
jnp
or
mov
cmc
inc
rolb
in
adc
ret
inc
push
mov
lock
loope
jmp
repz
lret
ja
add
jo
cmp
push
cmp
aaa
lea
sbb
iret
mov
fisttpll
xor
pop
xlat
jns
or
arpl
cmp
cmp
ja
jae
dec
lds
dec
pop
pop
xor
or
mov
outsl
loopne
js
inc
pusha
aas
jo
pop
addr16
ljmp
push
dec
inc
lods
dec
int3
inc
cmp
pop
add
pop
test
cmpsl
jbe
movsl
insl
sti
mov
add
daa
xlat
push
mov
cmpsb
xabort
loop
jmp
mov
push
fimuls
mov
xor
jb
fidivrs
dec
mov
pop
add
imul
notb
aas
adc
sub
inc
xchg
sar
jb
pop
insb
hlt
inc
add
fildl
sub
sub
dec
jb
aaa
ss
aad
inc
cmp
ror
mov
push
dec
jbe
cld
adc
xchg
mov
sarl
mov
pop
adc
jmp
and
xor
ret
mov
pop
cmc
das
add
or
mov
sti
lret
mov
adc
pop
pop
lods
lret
jo
in
sbb
push
push
dec
nop
leave
push
and
and
loopne
mov
test
mov
mov
adcb
adc
adc
cmp
mov
mov
or
add
xor
int
push
scas
inc
fcmovnbe
daa
pusha
aam
xor
test
mov
lret
push
cmpsl
pop
fnsave
push
imul
fs
imul
adcb
sbb
mov
pop
hlt
mulb
hlt
jno
int
repnz
pop
xor
lods
ja
into
mov
cltd
add
sub
ljmp
ss
rorb
cmpsb
sti
xchg
push
addps
sub
bt
fcmovne
dec
ret
inc
addr16
pop
and
fimuls
jge
iret
stos
mov
aas
mov
jle
pop
lock
fldpi
lods
subb
mov
fwait
jb
jb
pop
shr
dec
mov
pop
ds
and
out
xchg
sub
test
add
jp
or
lcall
outsb
mov
cwtl
cmp
push
ja
mov
mov
leave
pop
test
xchg
inc
xor
or
jnp
xchg
pop
mov
pushf
fidivrs
dec
data16
pop
dec
gs
hlt
mov
xchg
das
pop
cmp
stc
adc
push
mov
dec
das
push
icebp
aam
or
inc
xlat
cmc
push
pop
jns
mov
or
mov
iret
xor
xchg
pop
or
insl
hlt
cld
dec
int3
and
mov
pop
inc
inc
add
in
cmp
mov
cmpsl
push
adc
mov
lret
jecxz
cmpsb
jae
jg
xor
out
lahf
inc
imul
enter
shlb
aam
mov
add
add
sahf
fidivrl
add
out
movsl
and
imul
add
cli
notb
or
std
in
imul
int3
test
sub
scas
push
add
cmp
jnp
mov
cmpb
mov
repz
pop
push
movsl
sub
mov
fcmovnb
cmp
out
enter
jle
lock
xchg
incl
daa
dec
add
ja
pushf
dec
hlt
or
inc
pop
cmpsl
test
test
add
dec
or
imul
add
push
add
jae
lea
movsl
jno
pop
xchg
lods
cmp
xor
mov
fimuls
mov
sbb
mul
dec
push
or
mov
jo
xor
adc
xchg
cmc
push
shll
enter
push
cltd
cmp
mov
dec
and
fisubs
andl
ljmp
sarl
iret
ja
sub
pop
add
pop
ss
andl
shr
sbb
or
push
test
pop
jb
and
pop
add
mov
jns
push
scas
or
fs
and
cmp
lahf
adc
pop
sub
pop
push
inc
or
mov
call
imul
pop
dec
js
mov
cld
and
adc
push
je
ja
sub
cld
adc
xchg
adc
scas
sarl
sbb
les
imul
arpl
repz
shr
sbb
push
rcrb
and
lahf
pushf
fmull
int3
sub
inc
pusha
push
fnstenv
loope
out
adc
pop
imul
dec
fidivl
fucom
rcl
mov
shrb
inc
test
stc
mov
pop
adc
aaa
add
mov
add
and
mov
jae
ds
out
fidivs
add
stos
add
jge
pop
popa
je
arpl
out
mov
daa
jl
bound
add
mov
mov
fmull
jp
lret
roll
lahf
popa
roll
jg
or
inc
repnz
inc
jbe
inc
push
cmp
daa
cmp
mov
stos
gs
in
iret
jns
xor
imul
sbb
add
jp
xor
in
dec
sahf
addl
leave
cmp
inc
das
arpl
ret
fwait
jl
cld
imulb
sbb
or
and
cwtl
dec
lcall
mov
insl
lds
mov
mov
ror
adc
std
scas
inc
enter
or
lea
push
lock
cmp
push
in
mov
xlat
sub
bound
popa
loop
fmulp
jmp
mov
into
mov
xlat
and
outsb
iret
cld
ss
loop
cmpsl
ljmp
test
icebp
sbb
or
pop
jle
cmp
nop
push
cmpsb
sub
mov
pmaxsw
mov
imull
out
sbb
imul
push
jp
adc
inc
mov
inc
adc
lds
sahf
dec
dec
push
popa
push
and
add
scas
add
fsubrl
push
ret
jb
and
mov
faddl
pop
xor
mov
mov
mov
pusha
jbe
testb
int
mov
ljmp
scas
inc
mov
fbld
rcrb
sub
add
lods
or
mov
int
dec
xchg
adc
sbb
xchg
clc
jecxz
xchg
pop
push
or
mov
mov
jmp
and
sarl
insb
xchg
loop
scas
out
fldenv
xor
push
push
inc
arpl
add
and
jle
jmp
and
xchg
jg
movsb
mov
fisubrl
xchg
add
or
xlat
add
into
xor
mov
test
aad
call
imul
xchg
les
cmp
and
jg
inc
push
pop
xor
aaa
xchg
adc
pop
inc
int3
adc
jb
sub
arpl
stc
jae
mov
xor
dec
and
xchg
pusha
mov
xchg
lret
mov
jnp
mov
and
pop
dec
push
add
mov
pop
push
xchg
cmp
jge
xchg
adc
loop
cmp
pop
push
inc
call
bound
cmp
mov
pop
mov
or
inc
mov
cmp
call
lcall
sbb
sbb
xchg
push
jae
sahf
inc
xchg
dec
jmp
add
sub
fistpll
outsb
hlt
push
and
pop
adc
xlat
mull
cmpsl
popf
or
push
adc
pop
mov
int3
push
pop
xchg
jne
fadds
mov
sbb
mov
into
inc
mov
cmpsl
lods
test
nop
add
lret
repnz
js
repz
imul
cmp
lret
gs
mov
and
sub
xor
popf
subl
and
jno
pop
xchg
cld
mov
and
rol
aad
pop
jae
mov
pop
xor
test
pusha
aas
sbb
xchg
and
mov
push
push
call
or
loop
jno
daa
in
shrl
mov
jmp
add
pushf
addr16
jbe
lods
sub
mov
fwait
xchg
das
and
int3
out
add
cmpl
mov
iret
and
loope
xchg
fs
push
leave
push
add
push
cs
jg
shrb
xchg
and
mov
mov
jp
push
in
inc
xchg
push
pop
sbb
and
into
inc
dec
jne
insb
rclb
jae
nop
xchg
xchg
js
fstpl
lea
sub
shl
push
jl
adc
jb
sbb
jnp
cltd
xchg
or
cmp
and
mov
rorl
xor
sub
mov
inc
sbb
divl
rcl
push
repnz
push
xor
sub
push
xchg
adc
or
shr
out
sub
loopne
clc
data16
lods
mov
jmp
out
xchg
hlt
sbb
xchg
icebp
or
cs
gs
mov
loope,pn
inc
imul
iret
sub
add
or
gs
sbb
push
dec
ljmp
mov
push
cmpl
and
xor
aaa
aas
cmp
xor
add
mov
xchg
push
xor
loop
or
lret
push
pop
pusha
test
cmp
sub
lods
icebp
push
std
mov
xor
xor
arpl
lcall
jbe
mov
add
add
test
out
jo
or
lock
enter
in
xor
adc
dec
mov
lods
cmp
jb
fcoml
xchg
sti
push
aad
out
xor
push
test
pop
cltd
in
nop
cwtl
loopne
adc
pop
es
pop
pop
mov
or
dec
cmp
xchg
push
imul
int3
push
sbb
mov
aaa
mov
out
xor
xchg
aas
ja,pn
push
mov
js
adc
mov
ret
ret
fwait
cli
sub
fists
daa
inc
dec
xor
sarb
ret
sbb
ret
stc
lock
mov
mov
pop
enter
or
jbe
sub
shlb
xchg
cmpl
sbb
adc
xor
and
sbb
divb
cmc
xchg
inc
jo
lcall
sbb
xor
pop
test
negl
sar
pop
xor
shrb
hlt
xor
popf
cli
lahf
das
dec
testl
repnz
lds
or
cmp
add
inc
leave
mov
popf
pop
popa
or
jp
and
dec
xchg
mov
jp
mov
loop
adc
push
call
enter
data16
fistl
into
jp
push
push
add
movsb
cmc
mov
aaa
jle
or
scas
jmp
mov
dec
sbb
ds
incb
dec
icebp
ja
jp
lock
cmp
push
pop
jbe
das
sahf
mov
shl
lret
shll
xor
subb
push
mov
and
lock
sub
cmpsl
subb
xchg
xor
pop
hlt
inc
in
xlat
cmp
dec
shlb
loopne
jg
shrb
dec
pop
and
stos
fwait
add
cli
fwait
cs
fsub
js
repz
ss
stc
push
divl
jle
xor
lods
add
in
or
lds
inc
mov
rol
mov
mov
inc
cmp
repnz
cmpsl
add
stos
enter
mov
adcl
repnz
pop
lret
rorl
shl
push
mov
andb
jno
imulb
adc
mov
xchg
inc
test
mov
jecxz
mov
push
lret
xor
shl
pop
loop
inc
dec
or
mov
lret
sub
cmp
adc
sub
popf
lret
shrb
movsb
xchg
ds
ja
mov
push
out
cltd
xor
pop
mov
mov
dec
jo
mov
fsubs
mov
divl
jl
mov
in
mov
movl
xor
pop
and
push
pop
mov
or
push
mov
repnz
movsl
mov
mov
xchg
add
lcall
inc
jp
sub
jmp
ds
rcrl
pop
repz
jg
loope
mov
repz
xchg
xchg
jbe
jmp
sub
push
test
icebp
mov
xor
inc
dec
or
jns
lret
adc
push
icebp
pop
inc
loope
dec
push
mov
ds
pop
or
jae
ret
or
xor
jmp
fdivs
cmp
jno
pop
inc
gs
xchg
lods
cli
mov
insb
mov
jl
push
movl
insb
adc
dec
mov
xorb
xor
mov
and
into
adc
das
push
cmp
sub
ret
lahf
push
lret
adc
daa
mov
push
ds
insl
ljmp
js
scas
cli
sbb
addr16
repz
push
push
jno
int
ret
or
imul
jo
pmullw
lahf
mov
in
mov
mov
into
mov
pop
jmp
into
dec
pushf
test
pop
jns
pop
xchg
pop
test
xor
sbb
mov
cmp
mov
inc
inc
xchg
sub
dec
dec
pop
repz
nop
rorl
lret
dec
and
inc
jbe
pop
pop
out
movsl
mov
aam
and
bound
sub
pop
data16
mov
jecxz
sbb
cmp
and
pop
mov
dec
punpcklwd
xchg
aad
and
fsubrl
lods
sbb
std
sahf
sub
adc
fiaddl
adcl
into
mov
xorl
ret
and
jnp
lret
std
movsb
jne
aas
adc
cmp
fists
fisttps
int
jl
test
fs
int3
popa
inc
mov
gs
inc
and
jbe
lret
add
in
xlat
lret
adc
mov
scas
push
jl
dec
repnz
dec
cltd
hlt
add
into
mov
test
lret
and
gs
pop
cld
push
sti
mov
cwtl
and
mov
sarb
mov
dec
aad
sbb
data16
nop
cmpsb
daa
shlb
dec
mov
xchg
pop
sub
adc
movsb
inc
sub
and
pop
or
cmpb
xor
add
dec
lds
or
shrl
xchg
jno
inc
repz
in
imul
push
cmpsl
rolb
mov
and
lods
lret
les
mov
sub
insb
cmp
sbb
pushf
frstor
sbb
push
pop
jl
push
idivl
mov
cltd
idiv
xchg
mov
fisubrs
mov
lock
ss
sub
mov
aas
rcr
test
shl
out
daa
xor
jp
mov
dec
ret
pusha
loopne
stos
test
fiaddl
push
fdivl
movsb
dec
xchg
mov
mov
mov
xlat
test
push
jnp
add
mov
inc
add
or
fildll
and
test
aad
repz
mov
add
loope
roll
jg
dec
push
pop
and
push
out
mov
pop
out
push
mov
cmpsb
lea
in
aaa
mov
jp
pop
jp
ret
xchg
fidivs
mov
jp
stc
lret
js
icebp
imul
das
sarl
mov
fs
dec
dec
push
xor
sub
sub
test
shll
xor
and
loope
in
out
aad
outsb
inc
outsb
outsb
xor
cmpsl
ss
insl
aas
bound
pop
pop
push
lret
xor
mov
hlt
lahf
or
aam
mov
dec
sarl
xor
scas
jg
inc
aaa
add
xor
push
lea
in
xchg
pop
mov
daa
jnp
int3
outsl
popf
inc
sbb
shlb
add
stc
out
inc
std
fidivrs
movsb
dec
or
xchg
sti
arpl
add
push
mov
ficoml
lcall
stc
inc
add
out
mov
ret
and
sahf
scas
out
jno
adc
out
push
cwtl
loop
xor
inc
and
xor
push
loopne
mov
int3
sti
in
push
mov
je
dec
stc
subl
cs
sub
out
xchg
xor
jno
es
out
push
inc
aad
call
and
dec
test
movsb
stc
fcmovbe
pop
cmp
push
sbb
sahf
scas
or
jle
add
ss
repnz
in
js
jl
repz
xor
popf
xchg
popa
and
fildl
pop
mov
out
call
inc
inc
sub
je
sti
inc
xchg
scas
add
int3
iret
loope
stos
sub
mov
add
add
pop
nop
mov
jg
push
stos
xorb
xor
out
loope
pushf
add
mov
xor
sub
adc
jnp
pusha
sti
fisubs
das
mov
jae
mov
rcr
mov
sub
push
xchg
adc
push
mov
jge
mov
cmp
into
setns
mov
push
push
lret
sub
iret
adc
sub
pop
and
lods
push
sub
cmp
addb
pop
popa
fsubrl
xchg
and
bound
push
cmp
add
int3
push
in
mov
sub
out
fdivl
fisubrs
mov
push
push
cmp
dec
in
sbb
mov
cltd
adc
ds
fcmove
popa
sbb
inc
lret
pop
mov
fucomip
inc
cli
pop
mov
insb
sbb
and
sbb
test
mov
lret
push
mov
test
pop
mov
clc
data16
xor
in
ja
add
fdivl
loopne
push
flds
cmc
lret
test
push
xchg
test
cmpsb
imul
jne
aad
mov
pushf
adc
inc
jnp
test
lods
xchg
out
gs
in
mov
xchg
leave
mov
jnp
xchg
push
aas
loop
enter
or
and
inc
cli
mov
jno
mov
ja
mov
int
fcoml
popf
cmp
mov
jne
mov
imul
sbb
push
lods
out
dec
cmp
and
push
add
sbb
into
cmp
es
mov
xchg
cmp
addb
pop
jle
movsl
lock
dec
pop
repnz
shl
sub
add
call
mov
sub
mov
or
clc
pop
call
jnp
outsb
test
cmp
pop
cmp
out
and
loope
in
enter
orl
mov
pop
pop
mov
sbb
call
jno
aam
jecxz
lret
sti
mov
mov
repz
jecxz
inc
pop
cwtl
loope
in
jb
mov
insl
std
sub
arpl
fs
pop
test
and
and
jle
push
sbb
iret
pushf
adc
jns
mov
rorb
enter
sbb
mov
pop
fisubrs
and
add
or
mov
mov
mov
push
add
adc
xor
pop
stc
icebp
dec
jbe
sub
movsl
jns
jae
dec
cwtl
std
jbe
lret
add
or
sbb
sti
mov
popa
test
imul
jge
cli
inc
xor
ret
lock
popa
cwtl
fisubl
arpl
dec
inc
jle
jl
push
sub
outsb
jno
pop
hlt
sbb
and
sbb
cs
adc
adc
push
fwait
xorl
dec
mov
outsb
notb
imul
add
int3
sub
sub
andb
mov
and
jg
aam
mov
jp
inc
out
xchg
pop
jmp
fs
or
inc
js
cld
sub
xchg
push
cmc
push
outsl
jp
adc
ljmp
aam
out
mov
pop
mov
mov
out
jo
inc
std
movsb
clc
cld
in
pop
popf
nop
jl
mov
pop
repz
dec
iret
sub
and
jae
cltd
add
inc
aas
and
pop
fidivrs
sub
xchg
jmp
pusha
dec
inc
sbb
jge
mov
inc
push
movaps
mov
sbb
mov
pop
notl
mov
sti
stc
jbe
dec
jns
mov
lret
fcmovnb
fisttpll
jno
sti
mov
mov
out
sub
xor
out
repz
xchg
outsb
test
mov
movsb
cmpb
lea
add
push
enter
or
mov
lds
rorb
sub
or
add
cmc
jl
fcomps
movsb
cmp
stos
pushw
enter
lret
jne
sbb
mov
xchg
mov
call
or
imul
lcall
jg
ret
aad
mov
fwait
mov
sub
ret
cld
cmp
lret
aas
inc
xor
mov
lods
xchg
inc
pop
rcl
or
add
mov
push
lds
sti
push
jl
adc
mov
dec
and
into
add
ret
shrl
xchg
mov
xchg
insb
subl
and
mov
and
loope
sub
aad
jns
inc
fdivl
or
jmp
pop
xor
je
pusha
add
jmp
mov
mov
dec
xor
mov
jle
mov
lds
jp
jp
sub
jle
xchg
and
fmull
mov
sbb
dec
or
cmp
jnp
adc
out
in
mov
bound
xor
cld
bound
das
imul
jae
pusha
mov
outsb
aam
call
das
clc
fldt
test
int3
lret
xchg
dec
mov
pop
inc
cld
xor
gs
call
pop
add
and
and
mov
fwait
or
insb
add
mov
jno
add
and
sbb
jg
fimuls
inc
repz
fistl
repnz
pop
push
lock
data16
push
repnz
jbe
mov
cmc
and
cmp
push
jl
mov
aam
fimull
out
dec
repz
sbbb
test
fcoml
pop
int
hlt
mov
int
cmp
xor
cmp
call
in
jge
hlt
jne
and
push
pusha
ja
push
add
add
add
cld
jg
and
jl
into
ret
imul
add
pop
orb
jmp
pop
js
jo
jo
rcrb
adc
jl
sbb
or
lds
mov
icebp
jb
fwait
popf
pop
aad
or
testl
and
fucomip
paddsw
or
test
jbe
scas
push
or
pop
push
fisttps
mov
jge
push
mov
cs
mov
cwtl
and
push
mov
ljmp
cltd
xor
mov
and
xchg
cmpsb
pop
inc
push
xor
icebp
add
les
mov
mov
in
or
push
mov
inc
mov
call
outsb
and
jnp
scas
ret
and
in
adc
fsubp
imul
jbe
pop
pop
aas
push
xorl
out
mov
dec
push
in
fldenv
insb
cmp
negb
push
stos
std
scas
lods
pop
jno
in
aad
inc
and
mov
xchg
mov
out
orl
jp
xchg
subb
inc
cli
add
in
hlt
adc
sub
cmp
mov
shr
jmp
popa
clc
xor
shl
add
mov
cltd
cmp
jmp
jecxz
push
push
aaa
jl,pt
pop
xchg
cmp
adc
inc
mov
sub
cmp
pop
push
push
xor
movsb
cli
jp
mul
lahf
or
and
in
xlat
leave
lahf
jp
xchg
push
shll
xor
or
imul
inc
xor
adc
call
pop
push
lods
les
mov
stos
pop
and
jle
mov
int3
sbb
movsb
int
pop
or
enter
or
nop
test
and
add
je
pop
andl
test
or
xchg
sbb
fbstp
shll
leave
or
enter
ret
je
into
mov
lcall
sub
mov
xor
out
stos
jle
mov
shlb
xchg
or
adc
daa
addb
out
fmul
insl
mov
pop
add
lea
orb
movsb
mov
cmp
add
pop
xor
lcall
shll
aas
push
xchg
in
out
mov
or
adc
cmp
faddl
inc
negb
inc
cmp
stos
insb
mov
dec
lods
lret
inc
lds
pusha
mov
push
mov
fs
into
mov
sbb
push
mov
mov
fildll
dec
fsub
and
push
mov
jge
mov
popa
cmp
loopne
inc
jnp
xor
lods
push
std
or
push
repz
or
jbe
add
pop
in
ds
inc
inc
mov
popf
pop
mov
out
pushf
ds
adc
inc
jl
arpl
mov
or
clc
ret
sub
dec
add
xor
clc
push
push
mov
out
push
xchg
push
add
repz
dec
sti
and
mov
inc
clc
jecxz
pop
adc
outsl
adc
mov
add
dec
xchg
sti
push
xor
xor
jmp
out
mov
dec
ja
pusha
xchg
and
sub
push
inc
sarl
ret
iret
xor
fildl
aad
rcrb
mov
mov
scas
cmp
pop
clc
sbb
cmp
push
jo
movsb
mov
es
out
cld
repnz
pop
fsubs
push
or
mov
push
mov
jmp
bound
mov
mov
jnp
mov
mov
pop
or
imul
ret
pop
roll
mov
inc
in
xor
rol
mov
push
leave
popf
inc
loopne
les
arpl
roll
xor
cmp
mov
or
pop
or
pop
loopne
mov
dec
sub
lock
stc
test
fcmovnu
rcrb
xor
ds
push
es
fsubs
push
arpl
cmp
subb
inc
cmp
inc
cmp
adc
shl
push
je
inc
inc
clc
aad
inc
adc
inc
mov
mov
dec
in
pop
ficompl
aaa
or
rorl
adc
clc
mov
add
add
push
icebp
xchg
cmpsl
lcall
adc
divb
add
bound
sbb
fstpt
hlt
test
cltd
cmpsl
lret
dec
loopne
neg
mov
cmpsl
int
pop
fbld
xor
xchg
mov
sub
pushf
sbb
cltd
jne
or
les
popf
xor
push
arpl
les
and
jg
dec
mov
inc
movsb
pop
push
pushf
cmp
jl
imul
jp
nop
inc
cmp
jno
lods
jmp
inc
mov
leave
jne
clc
pop
mov
inc
ja
outsl
dec
mov
stc
andb
mov
push
jle
xchg
out
adc
jns
dec
cmp
pop
test
es
imul
les
xor
das
sub
mov
fwait
mov
push
outsb
clc
push
push
push
xchg
jbe
pop
mov
adc
hlt
insb
add
pop
push
jg
cmovns
mov
into
sbb
pop
pop
add
dec
repz
cmpsl
repz
and
fucomi
pop
jae
call
stos
addr16
inc
scas
enter
incl
gs
rcrl
or
lods
out
push
xlat
jge
push
push
std
movsl
mov
and
lds
lock
sub
xchg
inc
cltd
mov
mov
leave
sahf
or
in
xchg
ljmp
fdivrs
adc
fisubrs
push
sub
mov
ret
jo
adcl
pusha
or
in
inc
loop
mov
xor
roll
call
fidivl
or
fidivl
mov
mov
daa
fwait
and
mov
mov
mov
mov
shll
sbb
push
jmp
pop
xor
lret
out
repz
jnp
cmp
push
cmp
gs
loopne
mov
cmp
cmp
mov
gs
xchg
movsb
inc
cs
mov
fsubl
push
mov
fadd
imul
fimuls
jmp
pusha
sub
jp
in
sahf
scas
xchg
inc
pop
cmpsb
and
movsl
add
xchg
inc
sbb
stos
sub
fcompl
push
add
pop
lret
cmp
icebp
lahf
dec
and
sbb
and
fwait
cs
or
push
movsl
stos
fistps
xchg
test
shll
jnp
sahf
pop
das
and
sub
jo
jo
ret
aas
mov
mov
jno
mov
jbe
mov
cmpsl
xchg
add
in
and
aas
fcomip
out
or
sbb
cmp
add
imul
add
and
cmc
add
cmpsl
ljmp
test
sti
pop
mov
push
pop
dec
repnz
call
push
imul
pop
adc
add
fwait
adc
pop
adc
cld
ror
adc
mov
arpl
psadbw
negb
cmp
dec
xor
inc
cld
fstl
pop
mov
xor
dec
sub
in
es
xchg
mov
sub
mov
dec
mov
mov
leave
std
pop
and
push
mov
outsl
mov
ror
xor
add
or
stos
lretw
adc
ret
out
xchg
cmpsb
mov
loopne
xor
dec
pop
push
jg
mov
push
movsb
mov
inc
cld
dec
mov
add
mov
jmp
dec
leave
clc
nop
dec
out
mov
lahf
xor
lods
cltd
jno
and
mov
jp
push
push
test
popl
or
test
out
orl
repnz
mov
mov
push
movsb
jbe
js
and
fidivs
loope
jbe
lret
roll
dec
inc
divb
jno
jmp
jecxz
scas
testb
mov
adc
je
insl
dec
xor
and
adc
lcall
pusha
jmp
imul
lcall
dec
ret
scas
adc
psrlw
mov
popf
aas
dec
daa
push
xor
adc
push
cmp
mov
xchg
shr
and
enter
pushf
fcomps
jno
add
adc
push
aaa
inc
push
mov
xor
pop
lods
sub
aam
in
add
pop
rolb
test
out
inc
mov
pop
imul
jo
cs
in
xchg
and
shlb
mov
pop
xchg
loop
pop
jno
cmp
push
sub
sub
lock
stc
je
push
clc
mov
xor
int3
std
inc
xor
mov
inc
mov
adc
arpl
mov
pop
fstpl
jbe
cmp
push
add
cmp
cmpsl
mov
pop
cmp
gs
push
xor
adc
mov
imul
jno
cmp
shll
xchg
jecxz
test
and
jecxz
notb
negb
mov
push
imul
lret
aam
das
mov
mov
jge
mov
bswap
sbb
dec
stos
xor
inc
fwait
cmp
outsb
shlb
adc
xor
dec
push
and
clc
inc
jge
std
mov
and
push
sub
cmp
sub
inc
xchg
push
sub
fcmovnbe
mov
arpl
leave
sub
sub
fdivrl
or
add
stos
mov
mov
std
sbb
jno
sbb
gs
hlt
sbb
loop
push
out
out
stc
popa
xchg
mov
inc
jno
mov
repz
std
add
into
mov
jnp
jno
enter
mov
test
nop
data16
cmpsl
imul
jle
call
ljmp
sbb
fstpt
mov
js
sbb
fnstenv
sbb
test
jmp
or
ds
or
jg
out
jg
iret
push
xchg
mov
sub
cmc
and
notl
mov
movsl
dec
out
cmpl
cmc
jl
inc
xchg
and
int3
push
pop
int3
xor
add
mov
ss
dec
and
push
jbe
dec
mov
xorb
dec
subl
mov
sahf
movsl
and
popf
sti
mov
mov
add
mov
rol
out
js
mov
dec
push
push
pusha
fsubrl
daa
push
call
xor
xchg
jmp
pop
ljmp
xorb
ja
xchg
dec
sbb
mov
in
cmp
ror
fdivrl
into
jge
incb
loop
jb
or
jnp
push
adc
test
push
nop
jnp
mov
sub
cmc
pop
dec
xor
dec
jne
jbe
cmp
sub
notb
lea
sub
lcall
bound
jns
push
jbe
test
jae
fdivrl
inc
cmp
add
jg
and
jne
loopne
jg
in
sahf
aaa
aas
adc
fstps
jbe
pop
mov
out
mov
jno
dec
dec
push
popf
shll
inc
fnsave
sub
mov
mov
stc
dec
fildll
xlat
out
or
in
mov
sarb
xchg
jl
fldt
in
es
inc
fwait
shrb
inc
mov
scas
mov
mov
incb
leave
dec
lahf
and
stos
movsb
cmpsb
iret
xchg
xor
in
jle
push
mov
xchg
dec
sub
inc
ret
es
popa
test
ja
mov
adc
ljmp
sbb
sbb
sub
or
movsl
mov
add
pushf
lcall
pop
lea
adc
inc
test
pop
popa
sbb
lods
lock
mov
add
data16
sbb
popf
xchg
jno
test
lahf
inc
mov
movl
lahf
xchg
lds
leave
repz
xor
or
std
xchg
adc
cltd
out
aam
sub
push
pop
push
stos
or
or
push
inc
dec
sbb
shll
jle
pop
lds
mov
sbb
adc
outsb
cmpsb
sbb
je
lahf
mov
scas
xor
push
jmp
addb
fidivl
fisubl
lods
or
das
std
test
cwtl
std
cmp
mov
mov
add
nop
rcrb
pushf
daa
jle
out
add
aaa
xchg
cmp
insb
mov
add
cli
xchg
add
into
cmp
ljmp
mov
dec
les
or
je
addr16
mov
mov
fnstsw
enter
rcrl
stos
pusha
test
mull
sahf
pop
mov
movsbl
aas
outsb
cmc
and
lcall
mov
or
imul
mov
aaa
stos
xchg
fcoml
outsb
add
inc
into
out
stos
dec
mov
imul
stc
sub
jge
mov
push
and
ficompl
leave
movsb
in
mov
push
sbb
xor
das
or
jp
sbb
outsl
cmp
leave
inc
out
lret
cld
adc
jo
lods
sub
in
aam
lret
ja
daa
inc
call
pop
movsb
roll
add
add
movsb
sbb
mov
pusha
ret
nop
aad
fcmovnbe
sub
repnz
inc
loope
addr16
and
pop
mov
pop
pop
imul
or
mov
adc
xchg
negl
add
shlb
pop
push
jmp
adc
into
es
jle
mov
scas
jg
int
push
sbb
imul
xchg
aas
std
jl
hlt
mov
or
jmp
xorb
xor
cld
fstl
in
out
popa
inc
addr16
adc
enter
test
cmp
inc
xchg
clc
pop
xor
sub
jnp
ret
addl
xchg
aad
xchg
xor
and
push
pushf
add
inc
fwait
lds
add
xchg
sbb
cmp
mov
inc
add
rcrb
outsb
push
xchg
or
iret
adc
xor
insl
push
inc
dec
sub
mov
jns
pop
sbb
mov
std
push
xor
cmovno
push
xor
xchg
xor
sub
lods
jge
ljmp
call
mov
xchg
xchg
or
add
or
jl
fsubrs
dec
cmp
cs
rorb
dec
fucomip
or
xchg
pop
daa
sub
push
mov
daa
cmp
jmp
push
pop
mov
mov
loope
test
lret
add
push
or
add
sub
xlat
mov
push
adc
cmp
pop
popa
cli
jbe
cltd
pop
dec
and
pop
mov
cmp
shll
mov
imul
sub
icebp
cmpsb
sbbb
pop
cmp
fistps
mov
popf
inc
jne
nop
repnz
push
jmp
sub
leave
nop
pop
jbe
dec
pushf
xor
pop
imul
mov
test
add
fiadds
imul
iret
sarb
xchg
cld
sub
popa
in
adc
loop
mov
out
xchg
lock
xchg
xor
push
or
cmp
loopne
fldl
and
sub
jnp
jecxz
fnstenv
mov
push
das
jae
cmp
add
mov
pop
mov
xor
mov
sti
mov
mov
push
xor
push
cmpsb
xor
jg
jl
aaa
or
mov
pop
jno
popa
dec
aaa
cwtl
test
lret
or
mov
push
pushl
jge
jle
and
pusha
mov
in
pop
add
dec
or
sbb
lods
push
jb
aad
pop
jmp
iret
xchg
mov
scas
mov
ss
cltd
ljmp
jb
movsb
out
jg
dec
repz
push
dec
repz
insl
xchg
jo
xor
jmp
mov
cmpsl
daa
xor
sub
mov
xor
sub
adc
pop
jl
add
fldcw
mov
mov
cltd
jle
push
push
jg
adc
fildll
sti
pop
es
fwait
jnp
imul
stc
add
insb
loop
mov
mov
adc
rcrb
sti
es
cltd
movsb
sub
bound
insb
pop
popa
push
ficompl
stc
mov
insb
inc
pop
and
xor
fnstcw
mov
dec
add
in
into
mov
mov
lcall
jb
push
int3
xor
mov
lret
mov
pop
loope,pt
adc
adc
inc
loope
jns
mov
adc
in
in
mov
cmp
lea
ret
rclb
ret
xchg
push
fbstp
dec
fcoml
jmp
push
in
psrlq
jns
movsl
imul
jp
loop
les
pusha
add
or
int
dec
jl
leave
shrl
and
in
fildll
xchg
and
mov
dec
dec
and
insl
stos
jecxz
mov
hlt
lds
pusha
stc
fsubrl
xchg
jecxz
mov
in
imul
sbb
or
push
push
jne
loope
push
add
fistpll
sub
lret
in
int3
mov
test
push
or
mov
sbb
icebp
add
mov
lods
stos
mov
sbb
sub
pusha
adc
in
daa
mov
adcb
mov
push
push
xchg
popa
enter
les
sbb
and
ds
out
push
add
and
lahf
dec
hlt
adc
fdivrs
sbb
shl
cmp
ljmp
lods
test
xchg
add
and
inc
das
push
pop
enter
mov
ret
in
push
pop
in
dec
addr16
push
dec
add
out
shlb
jmp
popa
adc
push
lds
or
inc
xor
movsb
fwait
xor
push
adc
mov
adc
test
mov
cmp
xchg
jbe
in
cmpsl
mov
jecxz
fisubl
or
or
ss
jb
std
mov
lcall
fs
push
xchg
ljmp
cmpsl
adc
enter
mov
and
jp
mov
into
add
dec
or
aaa
fstpl
inc
sbb
imul
dec
notb
popa
mov
inc
cmp
push
pop
ret
mul
mov
repz
sbb
rcll
or
mov
or
cli
mov
outsl
or
sub
jnp
mov
pop
sarl
push
add
sti
or
xorb
pop
icebp
pop
add
xor
test
xor
clc
and
cmpsb
or
push
cld
add
xchg
in
or
rcrl
shlb
push
insl
std
jecxz
popa
decb
pop
xchg
je
sti
xlat
in
mov
add
dec
or
pop
push
mov
pop
push
dec
pop
mov
es
push
jno
push
int3
push
cli
nop
jns
push
subb
mov
fadds
add
dec
and
lahf
in
in
cs
push
cli
ja
mull
adc
xor
xor
insb
icebp
vpmovsxwd
insb
jmp
addr16
lea
sub
loop
inc
aad
pop
mov
nop
aaa
push
sbb
inc
repz
out
dec
hlt
dec
repz
cmpsb
sub
jbe
pop
cmc
mov
clc
push
mov
popa
mov
mov
arpl
mov
fs
mov
add
std
add
clc
lock
movsb
dec
arpl
mov
outsb
lock
sahf
outsb
lock
add
call
imul
cmp
mov
cltd
popa
jecxz
mov
add
push
pop
mov
pop
es
and
psubusw
add
add
mov
and
cwtl
pusha
mov
fldenv
pop
xor
pop
std
adc
or
xchg
push
mov
xor
test
ljmp
sbbl
sub
mov
xchg
adc
mov
xor
xchg
adc
ja
add
dec
rcrb
dec
xor
mov
out
inc
sbb
testl
push
adcb
lret
leave
mov
cmp
mov
pop
inc
fistl
add
and
mov
imul
sub
jmp
inc
xchg
cld
cmp
stc
xlat
mov
clc
clc
and
inc
int
stos
test
jmp
repnz
sbb
cs
mov
add
add
dec
or
push
mov
popf
movsb
cmp
outsl
adc
mov
mov
stos
xchg
idivb
sub
xchg
fcoml
daa
mov
fldt
in
lret
push
lock
out
rcrb
sbb
arpl
mov
into
lds
push
lock
sub
push
ds
dec
scas
xchg
add
push
push
push
aad
sub
inc
test
scas
sub
pop
dec
in
pop
xchg
pop
xchg
int3
imul
mov
inc
xchg
or
loop
pop
jbe
movsl
cmp
push
sub
cmp
std
rolb
xchg
sbb
fcmovne
or
ret
das
or
cs
cmp
std
jns
in
push
scas
sub
pop
insb
xcrypt-ofb
ret
pusha
mov
imul
ss
sub
scas
adc
or
leave
add
cmp
cmp
xchg
iret
rolb
nop
std
dec
cmp
adc
sbb
popl
and
push
clc
push
iret
in
shlb
dec
cmp
sub
pop
aaa
mov
adc
inc
ret
xchg
lods
sahf
sti
and
adc
mov
pop
or
xchg
and
dec
push
adc
jne
sbb
mov
in
cmc
pop
xchg
out
fs
fsubs
cli
es
insb
mov
adc
push
sbb
sbb
shll
sub
xchg
and
inc
adc
andl
pop
push
sbb
sti
inc
dec
inc
xor
es
pusha
in
fwait
sbb
xor
addr16
stc
add
cltd
pop
imul
xor
pop
cmpb
push
enter
xchg
pushf
sub
push
popa
mov
loop
imul
mov
xor
dec
inc
scas
repz
xchg
xchg
or
or
jmp
sbb
fimull
push
pop
fwait
sbb
adc
test
les
mov
xor
repz
mov
add
xchg
sbb
dec
addb
in
pushf
mov
pop
add
or
gs
je
insb
inc
push
jnp
mov
movsl
sbb
sub
xchg
outsb
mov
push
jmp
push
ret
xlat
into
mov
pop
cmp
inc
pop
add
adc
cmc
push
fnsave
fs
dec
inc
mov
shlb
loope
fs
sahf
mov
orl
cmp
mov
mov
push
jnp
repz
pop
mov
pop
or
cmp
inc
sbb
loop
inc
sub
jb
xor
adc
fstl
int
push
jb
shrl
cli
aaa
ret
mov
add
jnp
test
shll
icebp
cmpsb
pop
xor
cmpsl
sahf
lds
popa
inc
leave
lahf
sti
lcall
pmaddwd
movsl
cmp
mov
cwtl
pop
movsl
and
test
ss
fistps
rcr
mov
popa
sub
push
sbb
sarb
sub
sbb
mov
adc
jb
pop
mov
enter
add
jns
cmp
imul
cmp
jo
or
ret
cmpsl
mov
aas
in
lock
dec
ret
aad
push
pop
mov
jmp
dec
das
mov
pusha
sub
inc
dec
sbb
outsl
pop
xchg
js
mov
mov
dec
mov
fsts
scas
jns
insb
std
ja
add
jle
clc
mov
and
mov
add
pop
call
mov
cmp
stos
adcl
dec
jl
sub
jp
pop
sbb
jns
jmp
fildll
in
push
enter
out
push
enter
int
xchg
jmp
jb
sbb
rcl
xchg
adc
mov
push
xor
push
xchg
jbe
jae,pn
jmp
pop
dec
repnz
xchg
sbb
test
xor
mov
adc
jbe
in
sbb
mov
int
mov
pop
push
loopne
dec
jae
test
xor
sbb
lret
push
add
cmc
call
loopne
sub
or
add
xor
push
pushf
ret
ret
xor
mov
into
out
lcall
and
lret
js
es
cmp
xchg
mov
jg
mov
cmp
lods
dec
push
rcr
mov
jg
push
jp
xchg
sub
inc
inc
mov
mov
gs
pop
inc
mov
repz
dec
sub
movb
or
and
filds
pop
dec
jge
inc
push
inc
jl
push
stos
sti
cltd
dec
sub
outsl
sub
loopne
imul
icebp
fs
shrl
cmp
push
hlt
jbe
mov
std
inc
mov
add
loopne
mov
jg
xor
add
pop
jmp
iret
subl
arpl
icebp
stos
xchg
scas
mov
inc
lods
xchg
cli
je
sub
jne
pop
sub
lock
jg
pushf
imul
ret
jns
add
test
push
std
enter
mov
xchg
jle
fmul
jge
dec
ret
and
sub
ljmp
jg
jecxz
mov
int
xchg
cmp
mov
jnp
test
add
xchg
xor
call
inc
fildll
push
pop
push
mov
pop
xchg
pop
sbb
jl
lcall
mov
shll
test
jecxz
cltd
addr16
stos
adc
xor
gs
fwait
outsl
repnz
ss
cmp
stos
test
push
inc
xor
cmpsb
push
xchg
lahf
lds
jno
shlb
xchg
push
lea
inc
out
sti
mov
ja
aaa
test
sbb
adc
sub
ror
pop
mov
cmpsl
and
xchg
jle
mov
push
icebp
insl
inc
xchg
pop
ret
mov
adc
xor
scas
ror
push
pop
mov
cmp
adc
sbb
add
imul
add
cld
daa
sarb
mov
inc
cmpsb
inc
call
and
push
jb
das
scas
and
stos
std
ret
xchg
cld
or
push
leave
pop
lret
mov
lcall
pop
repnz
dec
fnstsw
mov
pop
cmp
sub
xlat
and
in
xor
adc
jecxz
xor
jne
pop
sahf
nop
mov
imul
fwait
aad
cmp
sbb
xor
push
in
cld
outsb
xchg
cli
frstor
adcl
in
sarb
pusha
and
push
xor
xchg
inc
dec
repz
dec
aad
test
ljmp
push
mov
jmp
leave
push
lock
test
inc
push
fldl
sbb
push
mov
rcll
loop
pop
mov
inc
sbb
jp
inc
push
lret
inc
cmpsb
in
jbe
adc
jl
jmp
cli
out
fstpt
ss
push
adc
mov
cmpsb
adc
aaa
test
addl
enter
lds
pop
call
mov
or
cwtl
inc
push
fs
sahf
shl
pusha
push
cmp
sti
mov
jmp
inc
push
inc
jl
inc
ja
or
fs
cmc
jno
int3
bound
xor
es
jne
sub
decb
fdivp
or
leave
sub
lods
outsb
push
or
mov
xorl
mov
mov
fcmovbe
adc
sbb
or
mov
mov
enter
arpl
lock
dec
push
dec
ret
mov
and
stos
pop
sbb
add
cwtl
xlat
bnd
ror
push
arpl
xor
je
jmp
scas
or
loope
outsl
cmp
lahf
mov
dec
fldt
lret
xor
push
movsb
in
stc
ljmp
cmp
outsl
pop
xor
sub
call
dec
sub
dec
xchg
jne
daa
mov
mov
jmp
in
mov
cs
and
pop
mov
lcall
pop
dec
jno
add
xchg
icebp
jp
jno
cmp
add
lock
jg
punpckhbw
cmp
negl
ficomps
jg
bound
xor
jmp
jb
mov
into
jb
lods
fists
mov
pop
jae
sahf
push
cmp
cmc
fldl
scas
mov
push
fldcw
jae
rolb
outsl
outsb
arpl
pop
aas
insl
ret
mov
loopne
leave
aam
in
jl
push
mov
mov
sbb
fst
test
jno
mov
push
daa
adc
inc
jle
push
adc
je
sub
add
pop
cli
mov
shlb
cmpl
xor
in
in
and
in
sbb
mov
sbb
sbb
mov
bound
js
or
daa
daa
aam
xlat
test
and
inc
fsubr
fimull
arpl
imul
lcall
mov
mov
rorl
in
xor
jnp
cmpsb
out
or
push
rep
mov
xchg
mov
inc
daa
inc
std
flds
mov
mov
mov
mov
hlt
push
xchg
mov
mov
mull
pop
push
inc
repnz
fcoms
push
pop
mov
push
and
xor
int3
insb
lea
cmp
test
mov
into
cmpsb
xchg
push
and
push
xor
xor
insl
inc
insl
mov
xorb
test
xor
cmp
jb
ljmp
dec
push
xor
pop
fnstcw
fldl
push
sbb
push
sub
adc
mov
lcall
mulb
lcall
cmpsb
scas
or
inc
call
adc
jne
mov
clc
insb
mov
mov
jne
push
scas
ja
add
in
sbb
sahf
imul
stc
mov
xchg
adcb
movsl
insl
popf
add
inc
test
fidivl
fdivrs
jl
push
mov
push
insl
push
stos
loope
push
xchg
lret
mov
out
shrb
rcrb
mov
inc
loop
mov
mov
dec
cmp
inc
ja
pop
inc
call
hlt
sub
mov
mov
andb
mov
jae
and
pop
in
hlt
push
repnz
inc
into
jecxz
xor
or
pop
out
mov
cmpsb
int3
cmp
jmp
test
add
int3
enter
imul
mov
lahf
icebp
adc
popa
out
jmp
into
adc
imul
adc
subl
pop
mov
addr16
popf
sbbb
sbb
jecxz
mov
add
add
js
adc
mov
shlb
inc
sahf
push
dec
add
aad
cmpsb
pop
aad
clc
test
pop
mov
jg
nop
cltd
rclb
fsts
xor
test
out
sbb
dec
in
xchg
lock
pop
movsb
ret
jns
movsb
inc
insl
xor
out
xchg
cs
enter
das
cld
add
dec
add
dec
xchg
xor
jmp
iret
xor
rol
dec
mov
cmp
sub
repnz
lods
js
cmp
sub
in
repz
cli
test
lods
mov
out
aaa
fcompl
rolb
jmp
mov
mov
inc
sbb
pusha
std
movsl
out
cmpsb
jnp
mov
inc
mov
stos
je
mov
xor
lcall
stc
out
nop
lret
push
repz
sub
popa
scas
enter
ret
outsb
or
xchg
iret
jnp
ret
repz
mov
jp
sub
jbe
loop
repnz
xchg
xchg
test
dec
cmp
jp
jbe
les
sbb
dec
vandnps
aas
pop
cwtl
push
inc
cmpsb
sbb
cwtl
cmp
dec
sub
xchg
cmc
add
lcall
dec
dec
pop
iret
pop
push
cld
fldt
adc
test
in
lods
lcall
fwait
les
sub
iret
lods
xchg
stos
shld
jo
sub
jle
mov
pop
mov
pop
test
sub
xor
nop
and
jbe
test
pop
shlb
jae
clc
jecxz
jo
inc
aad
shll
sub
mov
aad
mov
mov
xchg
mov
and
or
lods
jl
adc
dec
sub
sbb
jo
cs
mov
mov
out
dec
add
ret
lret
xor
cs
pop
mov
jno
inc
int
cmpl
push
lret
lcall
aas
cmp
sub
hlt
emms
adc
xor
loope
icebp
mov
in
ret
dec
in
add
imul
add
hlt
loope
adc
ds
sti
mov
sahf
inc
cmpsb
ss
lcall
mov
test
mov
in
push
add
fs
sub
mov
lods
sbb
xchg
bound
stc
pop
jbe
xor
lods
aad
ds
pop
orl
lods
aad
adc
push
adc
stos
mov
pop
cmp
fwait
sub
out
enter
popf
mov
sbb
in
cmp
js
and
in
mov
mov
push
test
cmp
std
cmp
arpl
leave
shlb
subb
addr16
or
sahf
dec
cmp
jns
jp
stc
sbb
push
dec
jo
test
fs
lods
aam
xchg
movsl
inc
out
adc
push
movl
xlat
pop
cmpsb
fsubrs
adc
insl
icebp
and
push
inc
scas
fdivr
les
dec
xchg
insl
gs
or
add
mov
mov
imul
ss
inc
ja
es
ja
mov
loopne
rcrl
out
out
dec
sub
mov
mov
adc
imul
adc
mov
mov
pop
fimull
fildll
out
adc
outsb
mov
push
sub
cld
ret
pop
jo
sub
rorb
lret
jbe
push
adc
daa
stc
jmp
sub
push
or
loopne
out
shll
mov
xchg
jns
dec
xchg
push
shlb
pop
in
rcrb
inc
jae
fnstcw
or
mov
jne
or
out
sbb
or
adc
ret
aaa
leave
enter
pop
and
iret
mov
test
pop
cmp
and
repnz
xor
iret
lcall
out
into
xchg
popf
push
pop
out
lret
into
add
imul
dec
xlat
outsl
das
xchg
add
jno
test
fmul
fbstp
inc
ffreep
and
cmp
into
inc
inc
sub
lret
and
mov
shl
test
dec
outsl
inc
jmp
mov
in
lret
xor
leave
cmp
or
popf
pop
xorb
jecxz
jbe
leave
sub
mov
in
nop
pop
sub
ljmp
es
das
stc
aad
adc
jae
dec
sar
mov
lds
xchg
aaa
jle
out
xchg
pop
xchg
adc
jle
dec
divl
roll
dec
scas
pop
cltd
enter
test
imul
adc
fcmovnu
pusha
jno
adc
xor
and
jo
fdivp
adc
insb
jp
imul
cwtl
scas
inc
out
inc
push
test
leave
cmp
cs
cmp
lret
call
push
push
xchg
icebp
pop
xlat
loope
cld
lods
int3
dec
cltd
xor
aas
dec
dec
loop
clc
out
inc
sbb
mov
adc
add
stos
shr
jg
mov
and
jecxz
jle
fimuls
cs
and
cmp
inc
inc
xchg
cmp
lret
stc
mov
jns
paddq
outsb
cmpsl
mov
es
or
outsl
hlt
mov
push
mov
push
shll
insb
addr16
mov
pop
mov
push
jbe
push
icebp
xor
xchg
xor
xor
lcall
std
and
xchg
shrl
mov
add
xlat
shl
or
dec
inc
or
mov
fistpll
and
push
stos
mov
stos
mov
pop
pushf
mov
fbstp
inc
call
mov
mov
add
push
rcr
icebp
scas
stc
cmc
adc
in
hlt
test
cltd
add
mov
xchg
mov
jnp
inc
dec
in
in
aad
movsl
data16
popa
add
sbb
in
rorb
loopne
xchg
outsl
or
das
shl
dec
or
int3
or
inc
test
lahf
adc
sbb
insl
je
faddp
lret
mov
add
jle
inc
imul
leave
push
mov
mov
stc
gs
incb
add
lret
cmc
cmpsb
mov
lds
lahf
xchg
imul
aad
or
fadds
jg
cmpsb
xchg
rolb
insl
or
lahf
lods
imulb
lods
push
pushf
and
cmp
vpshab
add
add
hlt
sbb
sub
dec
or
and
xor
push
jg
xor
test
dec
fnstsw
sarb
mov
test
dec
lahf
les
enter
fistps
mov
push
mov
and
xchg
ret
inc
push
aaa
fs
xor
adc
and
data16
sub
sub
jo
sbb
cmp
sahf
popa
mov
or
jp
jg
sti
rcr
push
xor
jp
mov
mov
cli
dec
jae
ljmp
insb
xchg
pop
inc
adc
nop
enter
jne
jb
stos
dec
hlt
adc
jne
outsl
repz
jge
or
add
xchg
push
pop
mov
jno
xor
xchg
stc
add
cmp
test
jnp
lret
and
push
jnp
cmp
aam
xor
stos
mov
adc
sti
xchg
push
cmpsl
xchg
xor
mov
popa
stos
pop
addr16
repz
scas
ret
mov
dec
push
lcall
in
test
hlt
push
xlat
scas
std
lods
ja
lcall
ffree
stos
lret
dec
dec
popa
xor
mov
lcall
or
daa
call
sti
adc
cmp
sub
xor
sbb
dec
jns
and
and
not
in
push
loopne
sahf
loop
mov
dec
dec
cltd
add
mov
call
push
jmp
mov
mov
add
mov
stos
mov
test
dec
ret
xor
push
popf
jne
jle
inc
ss
arpl
js
cli
fisttps
paddusb
push
ficompl
lcall
das
pop
gs
andb
inc
pushf
daa
adc
test
insb
call
fbstp
fwait
sbb
lahf
pop
sbb
adc
insb
jbe
xchg
cmp
mov
fsubl
inc
cmpb
inc
ret
xchg
aam
dec
mov
mov
sbb
push
icebp
fmull
mov
xor
sahf
loope
mov
out
jl
add
mov
addr16
sahf
pop
cld
or
add
add
enter
xchg
test
inc
mov
mov
mov
sub
pop
imul
xorb
loop
aaa
stc
mov
mov
xchg
insl
in
fs
mov
mov
pop
das
call
in
cli
add
rclb
aad
adc
lock
dec
push
out
add
imul
add
xlat
ficompl
inc
mov
mov
pop
je
hlt
mov
lock
adc
xor
mov
dec
aaa
sbb
jmp
add
push
cmp
dec
jmp
leave
clc
adc
mov
fcompp
mov
or
xor
push
pop
xor
imul
loopne
filds
add
xchg
pop
sbb
loope
xchg
mov
xor
mov
jb
fstpt
or
mov
push
out
int3
jmp
or
push
mov
xor
ror
bound
movsl
shll
push
mov
dec
fcmovnb
enter
cwtl
loopne
arpl
addr16
cmp
push
idiv
xchg
adc
dec
out
frstor
push
sub
mov
cmp
leave
int
jbe
xor
dec
add
xor
sbb
pop
aas
test
cmp
int
jae
ds
fs
and
xchg
xchg
stos
leave
pop
les
mov
pop
xlat
ss
pop
fdivrl
xor
das
aam
mov
faddl
push
xchg
sub
inc
add
xchg
icebp
cmp
pop
pop
and
pop
ss
jge
mov
jle
shrb
fsubrl
enter
pop
push
icebp
adc
cmc
popl
movsb
loop
in
ja
cmp
pop
lret
pop
in
jnp
filds
daa
movsb
fsubs
mov
jb
fstpt
fidivrs
cmpsb
jge
add
jae
add
sahf
jmp
xchg
insl
cmpl
lahf
js
push
repnz
dec
inc
sbb
aam
enter
shr
inc
insl
xchg
mov
xchg
sbb
sbb
pop
adc
std
ud2
dec
mov
and
imul
das
test
xchg
in
outsl
nop
insl
pop
pop
mov
xor
ret
mov
and
subb
mov
cmp
mov
leave
jmp
das
sub
jle
les
in
add
rcrb
outsb
lcall
mov
adc
ja
in
lahf
xor
test
pushf
add
lcall
and
dec
mov
add
int3
loope
xor
adcl
or
lods
and
xchg
dec
scas
and
sbb
fcmovne
rcr
cld
sub
enter
inc
iret
mov
add
and
mov
mov
fwait
sub
addr16
js
xor
ret
push
sbb
and
fcoms
mov
lahf
xchg
and
out
pop
ja
jle
lea
out
push
faddl
clc
adc
insl
adc
enter
pusha
sbb
mov
pop
mov
rcrb
cwtl
xlat
inc
lret
popl
lock
inc
aam
ljmp
pop
call
mov
xchg
fistpl
hlt
fcompl
out
stc
push
es
int3
mov
daa
test
and
push
fisubrl
pop
mov
xor
sub
cmpsl
int3
jmp
push
fistpll
mov
lret
out
gs
mov
jmp
daa
jne
xor
mov
lock
lods
or
insl
xchg
out
jno
add
fldt
mov
aad
pop
push
jns
lret
pop
pop
mov
lahf
adc
inc
js
push
add
pop
sbb
lock
xchg
pop
testb
popf
lock
adc
push
mov
sub
ret
out
xlat
push
pop
adc
jg
push
jl
cli
jp
das
cmp
sbb
cvtdq2ps
sub
and
cmp
ds
add
inc
cwtl
sub
les
ljmp
sub
stos
outsl
jb
lea
test
loope
add
mov
outsb
xor
mov
inc
sub
mov
ja
sti
xchg
mov
cmc
xor
mov
add
aaa
xchg
mov
shrb
jno
or
mov
popa
mov
adc
arpl
sbb
dec
les
daa
pop
xlat
subl
aad
aad
adc
mov
into
out
stc
fcoms
ret
add
lahf
scas
sbb
push
mov
cltd
xchg
push
sub
incb
mov
pop
out
xchg
popf
pop
mov
in
out
ds
mov
pop
adc
jae
cld
jg
repz
inc
jo
add
dec
or
test
jnp
sub
xor
rorb
mov
jb
loope
cmp
out
lock
shlb
cwtl
adc
flds
ret
loopne
movsl
sahf
stos
std
leave
aas
popf
ljmp
popa
jo
xchg
jae
push
jbe
xor
out
dec
mov
ljmp
mov
js
lret
push
popf
pop
in
std
sbb
inc
xchg
daa
inc
lcall
mov
fs
aam
mov
or
adc
adc
xor
ss
inc
repnz
fwait
jno
push
in
cmp
insl
clc
pop
cmpsb
lahf
push
daa
fldl
ljmp
xchg
test
mov
shll
cmpb
pop
push
push
test
xor
out
push
pop
fcomp
pushf
pushf
loope
cmpsl
test
mov
push
jae
or
fbld
ljmp
and
bswap
adc
in
pop
test
mov
xlat
sub
pop
repnz
adc
test
push
pushf
push
mov
pop
push
inc
sahf
cmp
and
les
into
xchg
sub
push
cmp
push
push
in
movsb
push
dec
mov
sub
mov
clc
jae
ror
xor
xchg
fsubs
insl
aam
pop
addr16
je
pop
clc
jbe
and
imul
ds
fs
imul
push
xchg
cmp
mov
push
outsl
push
mov
mov
and
mov
jge
jecxz
sub
jle
cmp
push
dec
rolb
jmp
inc
cmpsb
idivb
leave
inc
sbb
scas
lods
sub
div
call
add
add
lods
jmp
loope
roll
jno
jae
cmp
add
sub
leave
lods
add
fistl
sahf
lahf
pop
fwait
mov
ljmp
daa
hlt
fisttpll
mov
inc
pop
loopne
subl
mov
push
in
xor
add
adc
add
jge
cmp
movsb
cwtl
inc
aaa
loopne
cmp
adc
repz
pop
movb
sub
cwtl
jb
call
js
add
jns
push
sbb
out
adc
loope
inc
dec
fdivrs
push
loopne
mov
adc
mov
add
mov
xlat
mov
sarb
add
imul
add
xchg
xchg
push
push
and
popf
mov
lods
mov
shr
mov
repz
addr16
je
fnstcw
rorb
popf
pop
xchg
jle
ret
jo
daa
in
fcmovnu
add
push
push
xlat
aas
jecxz
inc
rcrl
pop
jmp
lret
sub
leave
loop
lock
xchg
xchg
ljmp
gs
popa
cmc
inc
xchg
dec
rolb
stc
push
sub
lret
addl
enter
stos
hlt
cmp
add
scas
or
pop
mov
jbe
xor
shll
lcall
hlt
std
in
scas
sbb
js
sti
fidivl
push
cmp
fistps
and
in
aam
lret
xchg
and
test
mulb
int
or
outsb
aam
test
and
cmc
fidivs
aas
ljmp
xor
xchg
jno
jbe
mov
pop
cli
ja
aaa
sbb
fdivs
adc
mov
int3
lds
sarl
cltd
lock
lret
ja
push
test
jp
test
cmpsb
rol
cmpsb
mov
popf
or
lock
mov
pop
sub
ret
push
cmp
mov
outsb
js
lods
mov
push
repnz
dec
pop
and
pop
je
push
rorb
inc
call
inc
sarl
xchg
dec
dec
inc
fcomps
or
add
pop
xchg
ds
aad
adc
sub
pop
xchg
cmc
or
sbb
int3
mov
cmp
add
ficompl
sbb
dec
stc
arpl
repnz
mov
push
lds
and
sub
ds
enter
nop
jne
jbe
test
movsl
rcrb
add
jno
mov
andb
mov
into
cmp
jmp
jno
mov
add
out
in
xchg
mov
mov
loope
inc
lock
shrl
rol
jb
jae
push
sbb
cmpsl
dec
jg
retw
sub
cmc
out
xchg
pop
rclb
sbbl
shl
shrl
cmp
pop
ret
out
sahf
scas
jp
mov
rcr
lock
stos
out
in
jnp
cmp
sahf
cmp
mov
mov
cli
scas
jns
mov
aas
jae
pop
push
dec
aas
test
cmp
mov
and
and
xor
mov
outsl
sbb
xor
mov
nop
and
ror
enter
cmp
adc
enter
fmulp
insl
scas
jle
add
pop
cmpsb
mov
dec
out
daa
xor
and
and
into
ja
mov
xorl
dec
pop
int
sub
dec
push
dec
xchg
push
in
aaa
add
push
addr16
mov
mov
mov
cmp
pop
ret
jp
fdivrs
daa
icebp
fs
pop
popa
pusha
nop
sbb
addr16
pop
cld
cs
or
shll
sub
cmp
push
lods
jmp
in
xchg
mov
xchg
int
cmpb
mov
mov
ljmp
loope
js
pop
cmc
jl
pop
or
test
jle
aad
inc
mov
push
add
bound
mov
xchg
cmpsb
mov
mov
rorl
lods
xor
movsb
out
movsl
mov
and
das
imul
cmp
sbb
and
mov
jno
jnp
cmpl
orl
pushf
fcmovu
rorb
loopne
aad
mov
push
xchg
mov
js
or
inc
fsubr
lret
notl
pop
or
sub
sarb
mov
and
xchg
pop
jmp
imul
push
iret
mov
stos
dec
ljmp
ljmp
and
ret
xchg
jo
adc
std
cli
int3
or
xchg
or
std
je
mov
rorl
xor
int
or
mov
add
sbb
mov
add
cmpsb
in
popa
fsubl
push
mov
push
jle
int3
pop
jno
ss
jno
sbb
dec
and
test
sbb
push
fidivrs
mov
dec
cld
pop
sbb
sub
mov
jno
movsb
adcb
fwait
push
leave
outsb
pop
sahf
addr16
rcrl
adc
fwait
sub
int
lods
push
cmpsl
cmpb
rcll
and
stos
sub
pop
or
shlb
mov
inc
mov
mov
idivb
jns
push
rep
lds
sbb
cmp
mov
fldl
pop
loope
loopne
jg
movsl
mov
outsb
shl
jns
stos
jne
movsb
mov
mov
rorb
cmp
xlat
rcll
inc
push
aaa
fstps
sub
mov
inc
das
mov
mov
xor
mov
fnstcw
dec
jge
inc
sbb
dec
mov
insb
or
clc
fwait
sti
jecxz
mov
test
inc
sub
addr16
hlt
nop
jge
cmp
sbb
push
inc
sbbl
gs
dec
lahf
or
mov
mov
test
or
push
sub
sub
movsl
sahf
je
sub
sub
popa
xchg
pushf
jb
mov
mov
xchg
xor
jl
push
or
ret
cld
adc
adc
fdivp
iret
sbb
or
jp
popa
mov
add
push
pushf
jnp
mov
push
stos
lahf
mov
adc
fstl
jne
rolb
push
pop
add
pushf
xchg
insl
adc
cmp
insl
cmp
repz
dec
fwait
jmp
mov
push
cmp
inc
jne
inc
jp
mov
dec
sarl
dec
mov
sbb
jge
out
dec
cmp
enter
mov
or
dec
lods
mov
mov
mov
and
cltd
cmc
jmp
mov
push
push
xchg
faddl
sarl
js
jge
aam
push
ljmp
jnp
cli
mov
stos
out
gs
xorb
hlt
lahf
mov
xchg
test
jbe
mov
or
dec
jl
mov
xor
add
xchg
xor
push
pushf
mov
fimuls
das
xor
mov
xchg
mov
pop
fidivl
adc
fnstenv
add
lods
loop
xchg
mov
mov
cli
mov
mov
xor
pop
inc
xor
mov
in
lret
fsubrl
ficomps
dec
xor
outsb
pop
cltd
cmp
stos
in
jp
mov
out
dec
push
mov
fdivrs
movsb
mov
jle,pt
xlat
imul
add
repz
movsb
adc
movsb
inc
je
loope
incb
add
add
dec
jmp
or
mov
adcl
xor
xchg
movsl
sbb
not
je
pop
mov
cmpsb
sbb
mov
imul
pop
in
out
mov
dec
jg
int3
add
pop
jo
dec
inc
push
lock
fistpl
mov
jo
incl
mov
cmp
jae
jmp
pop
xchg
add
les
test
fiadds
in
jo
adcl
or
testb
cld
add
fwait
push
cld
add
mov
fsubl
leave
lret
arpl
adc
lea
lret
sarl
ds
xor
mov
mov
aad
rorl
sub
mov
jge
arpl
gs
mov
fmuls
or
cli
out
and
in
adc
cmc
mov
mov
ds
mov
jo
and
mov
and
xor
mov
lret
sub
mov
fstpt
rclb
jg
add
adc
mov
xor
stos
or
hlt
std
popa
movsl
jne
fwait
push
fsubrs
fidivrs
push
leave
mov
mov
xchg
xorl
xchg
jecxz
insb
imul
mov
mov
outsb
outsl
or
pop
repnz
dec
leave
push
sub
fnstcw
jae
xor
adc
es
out
rcr
jmp
push
adc
jmp
fbstp
aad
lock
fldl
lea
test
lods
pusha
orl
dec
idivb
movsb
inc
dec
pusha
sub
shll
scas
cmpsb
inc
jae
sbb
or
loop
sub
push
fcmovbe
inc
je
adc
ror
pop
jb
mov
or
mov
pop
cmp
arpl
inc
dec
pop
push
mov
inc
lods
pop
out
jl
jne
iret
mov
in
pop
imul
dec
dec
das
pop
ficomps
push
and
inc
vucomiss
cmp
sub
and
xchg
xor
cmp
stos
test
push
mov
add
ds
mov
xorb
mov
mov
rcrl
jmp
xor
into
int3
mov
call
notb
or
cmp
push
lret
gs
inc
mov
xor
test
inc
dec
xchg
inc
xchg
jbe
jecxz
sub
mov
repnz
in
xchg
outsl
sub
fists
mov
cwtl
leave
rolb
sbb
loope
jl
pop
out
nop
outsl
jbe
sbb
fs
adc
xor
push
lods
inc
fisubrs
pop
lahf
pop
xchg
imul
inc
cltd
mov
pop
jle
or
sbb
aas
pop
xchg
jg
mov
clc
pop
jo
xchg
xchg
xor
mov
sbb
or
int3
xorb
adc
jnp
ljmp
mov
clc
jno
rorb
out
jecxz
xor
cmp
fwait
std
hlt
cmc
dec
pop
fwait
pmullw
cmp
cwtl
mov
jnp,pn
mov
mov
ffreep
rcr
repz
push
adc
jp
jge
mov
mov
shrl
das
imul
cmp
cld
mov
add
add
jle
popf
add
cmp
xlat
movsl
incl
mov
cli
dec
and
leave
push
or
pushf
arpl
add
cmp
inc
imul
mov
dec
mov
sti
outsl
cmp
dec
loopne
jbe
cmp
in
and
adc
fwait
ljmp
das
out
ljmp
mov
add
pop
es
sub
pop
pop
adc
cmp
aam
sub
jb
push
inc
out
pop
push
aad
xchg
jb
outsl
ret
lret
adc
or
xor
or
call
jg
cmpsl
pop
inc
sbb
dec
dec
mov
xchg
mov
pop
add
or
push
popa
dec
adc
daa
add
jb
jecxz
jo
movsb
mov
push
sahf
je
xor
scas
addr16
int
in
push
mov
test
iret
repz
mov
test
add
lds
ret
pop
and
xchg
inc
les
sarl
les
mov
pusha
adc
scas
cmp
lahf
pop
and
cmc
outsl
roll
adcl
mov
in
out
dec
jge
stos
lock
mov
sbb
pop
mov
jnp
pop
mov
sti
sub
xchg
pop
sub
into
adc
dec
xor
test
outsb
fwait
cmp
sbb
cltd
lods
daa
outsb
cmpsl
inc
inc
enter
pushl
out
hlt
cli
sti
filds
roll
add
inc
push
cmp
sub
lcall
xchg
dec
fs
mov
mov
out
jmp
inc
adc
gs
jmp
popf
and
jp
push
pushf
pop
inc
repz
jge
bound
lods
jl
pop
daa
test
or
inc
jno
pop
movsb
fdivl
cmp
adc
adc
mov
and
mov
lock
mov
sbb
negl
mov
add
popw
lahf
xor
loopne
xchg
xchg
popa
repz
stos
lret
inc
xor
inc
push
adc
cmp
sub
or
jl
fisubs
stos
pop
arpl
xchg
ja
sub
sub
lea
sbb
sbb
scas
inc
mov
call
xchg
cld
jnp
shrl
mov
hlt
ss
rol
add
mov
repnz
sbb
jecxz
popa
sub
fdivrs
jne
mov
test
and
mov
add
inc
mov
gs
xor
imul
push
ja
pop
enter
fistpll
sub
rcrl
and
pop
lret
jmp
rorb
jno
mov
test
mov
jge
leave
addr16
popf
out
xchg
pop
push
enter
cmp
mov
mov
jl,pn
into
mov
mov
out
shlb
in
inc
test
fcmovbe
cmpsl
fbstp
and
mov
addl
test
inc
dec
dec
xor
mov
mov
jle
in
mov
cmpsb
sbb
outsb
and
addl
lcall
cltd
and
outsl
movsl
pop
nop
cwtl
lea
xchg
call
pop
jb
adc
hlt
shlb
ret
in
jne
lret
fimuls
cmp
icebp
sbb
outsb
rcl
sbb
ficompl
imul
jbe
dec
jbe
ja
sub
lret
loop
xchg
add
add
cmp
jno
xor
pop
divb
add
cmp
add
and
add
adc
dec
adc
add
and
add
adc
cmp
add
push
aaa
pop
dec
push
ss
pop
xor
aaa
dec
inc
add
xor
push
push
push
pop
xor
inc
add
push
pop
push
push
inc
pop
xor
dec
add
inc
ss
push
dec
dec
pop
push
xor
push
cmp
pop
xor
dec
inc
aaa
pop
inc
cmp
pop
push
add
pop
push
push
inc
inc
dec
xor
inc
cmp
inc
pop
push
cmp
add
xor
push
pop
inc
xor
xor
push
xor
xor
inc
push
dec
push
pop
xor
push
cmp
cmp
xor
dec
cmp
inc
xor
pop
xor
cmp
dec
xor
add
push
pop
xor
xor
add
inc
pop
dec
push
dec
inc
pop
cmp
push
dec
push
pop
inc
dec
inc
xor
add
pop
xor
xor
pop
xor
pop
pop
xor
xor
xor
xor
inc
dec
pop
inc
push
push
add
ss
xor
pop
cmp
add
dec
cmp
dec
push
dec
add
xor
xor
ss
dec
cmp
push
aaa
xor
xor
pop
push
push
push
dec
add
push
pop
pop
xor
pop
dec
aaa
pop
xor
xor
xor
add
inc
pop
xor
xor
push
push
inc
xor
xor
push
xor
inc
pop
cmp
pop
xor
add
dec
pop
push
xor
xor
push
dec
push
cmp
dec
add
inc
pop
inc
dec
xor
add
xor
dec
xor
pop
push
add
pop
add
add
aaa
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
push
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
dec
add
add
cmp
cmp
add
dec
add
push
add
inc
add
dec
add
add
add
add
pop
add
cmp
dec
add
xor
add
dec
add
xor
add
inc
add
inc
add
add
xor
inc
add
add
inc
add
xor
push
add
aaa
add
push
add
dec
add
add
cmp
cmp
xor
xor
xor
add
add
add
dec
add
pop
add
inc
add
add
pop
add
pop
add
inc
add
add
push
add
add
add
xor
dec
add
dec
add
add
xchg
jne
add
jne
add
jne
add
jne
add
add
add
dec
add
add
add
add
inc
add
add
loopne
add
movsb
add
add
add
aas
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
inc
xor
add
add
add
jge
add
jae
add
jae
add
adc
je
adc
sahf
jp
add
adc
add
dec
add
add
pop
jge
add
add
add
add
add
add
add
add
push
jge
add
add
in
arpl
add
add
add
dec
jno
outsl
pop
xor
jbe
dec
cs
jo
aas
inc
outsb
gs
je
push
outsl
imul
inc
pop
inc
inc
push
inc
pop
dec
inc
cmp
add
jl
add
jl
add
jl
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
das
jle
add
addb
out
add
dec
jle
add
jns
add
jle
add
add
mov
add
sarl
add
jp
add
add
add
add
add
jl
add
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
pop
add
outsl
jo
jb
jns
push
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
popa
je
add
inc
add
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
bound
popa
jb
push
jae
jb
outsb
je
testb
je
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
jge
data16
add
fwait
add
jo
pop
arpl
insl
outsl
fs
and
insb
outsb
add
and
arpl
jo
add
or
outsl
jne
jo
jb
rolb
jb
insl
outsl
jbe
add
xchg
add
imul
jae
jb
jae
outsb
add
jae
add
add
outsb
add
mov
insl
popa
insb
insb
outsl
arpl
add
add
je
push
add
arpl
popa
je
add
arpl
imul
add
insl
jae
pop
gs
je
add
jo
imul
pop
imul
insl
add
add
jb
jb
outsl
jb
add
add
jb
outsl
jne
add
add
jo
imul
add
jae
bound
gs
add
flds
jae
je
bound
add
gs
add
push
add
arpl
inc
imul
pop
gs
je
in
jae
jb
push
add
jb
arpl
add
add
gs
je
add
data16
add
jb
push
ja
jae
outsl
insb
insb
add
add
arpl
data16
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
mov
data16
imul
je
jo
jb
add
add
outsl
jb
add
pop
pop
addr16
popa
imul
cli
add
jb
outsl
imul
dec
push
push
inc
push
push
cs
insb
add
je
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
jnp
inc
outsl
insb
fs
je
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
pop
add
outsb
fs
imul
gs
add
or
dec
outsl
popa
fs
gs
jne
arpl
add
dec
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jae
inc
jbe
outsb
je
add
inc
imul
outsl
dec
inc
dec
add
mov
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
je
outsl
fs
gs
imul
add
mov
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
and
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
inc
add
gs
imul
jne
push
imul
add
imul
outsb
insb
outsl
arpl
ret
add
jae
jb
insl
jo
add
dec
add
imul
jae
jne
arpl
add
inc
inc
push
add
jno
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
insl
add
je
imul
je
add
add
jae
jb
insl
jo
push
add
add
push
popa
insb
imul
add
add
jae
jb
insl
jo
add
in
push
gs
outsl
insl
insl
push
imul
add
gs
imul
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
into
add
jae
jb
outsb
inc
add
sbb
gs
imul
gs
add
inc
gs
gs
jo
imul
add
sub
fs
je
insl
push
add
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
faddl
push
gs
jb
push
push
add
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
into
add
inc
popa
fs
jb
je
push
je
add
add
je
imul
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
jb
popa
je
add
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
imul
insb
gs
js
gs
imul
gs
add
outsl
jbe
inc
imul
jns
add
pop
add
je
gs
jo
imul
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
in
add
je
imul
bound
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
nop
add
outsl
bound
inc
jb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sahf
add
push
arpl
jo
jns
mov
dec
outsb
jbe
insb
imul
je
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
push
arpl
jl
push
push
outsb
gs
outsl
jo
jo
add
add
jo
imul
gs
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
fs
arpl
inc
add
inc
gs
jne
dec
outsb
jne
add
add
fs
imul
add
popa
jb
outsl
dec
gs
inc
jne
inc
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
mov
push
outsl
push
outsb
imul
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
mov
dec
outsb
je
jb
arpl
arpl
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
add
imul
jae
addr16
add
add
inc
fs
jae
push
imul
arpl
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
push
add
je
popa
jb
outsb
je
lahf
add
jo
je
push
popa
addr16
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
inc
jb
insl
gs
arpl
add
imul
jae
js
rolb
jae
jb
outsb
je
push
add
add
je
jne
jae
jb
sub
inc
push
js
inc
js
add
push
gs
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
outsb
jne
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
imul
add
je
outsl
arpl
add
bound
inc
gs
outsl
jo
imul
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
imul
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
arpl
jo
jns
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
gs
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
je
arpl
dec
outsb
outsw
add
arpl
outsl
push
push
outsb
outsl
ja
add
fs
imul
add
je
inc
inc
js
mov
imul
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
push
gs
imul
js
inc
add
rolb
dec
gs
popa
addr16
outsl
js
js
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
jge
push
push
jb
insb
insb
inc
popa
jb
cmp
inc
push
outsb
jne
popa
imul
add
fs
imul
add
ja
outsb
imul
arpl
mov
push
imul
push
arpl
push
add
addl
outsb
fs
gs
popa
addr16
js
insl
add
je
imul
outsb
addr16
add
jle
dec
imul
jne
je
insl
add
xor
inc
push
gs
add
add
outsb
fs
imul
sub
push
outsb
fs
gs
popa
addr16
imul
add
add
imul
popa
jae
inc
js
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
movb
outsb
fs
popa
jae
add
add
jae
push
jne
je
gs
popa
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
mov
ja
je
je
push
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
jnp
push
push
jb
outsl
jb
add
add
popa
jb
outsl
ja
jb
jne
push
add
mov
jae
pop
gs
outsb
je
mov
inc
jb
ja
arpl
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
add
add
je
outsb
jne
je
insl
dec
inc
add
imul
inc
push
ja
jb
add
jmp
inc
arpl
gs
imul
add
je
jne
jae
jb
outsl
jae
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
jb
popa
je
push
imul
push
add
popa
insb
imul
add
add
popa
jb
jo
gs
jne
push
add
mov
push
imul
ja
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
imul
jae
popa
addr16
add
mov
jo
je
push
popa
addr16
add
js
inc
gs
imul
js
push
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
arpl
insb
insb
push
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jae
push
push
dec
gs
popa
addr16
add
mov
dec
outsb
jbe
jb
push
arpl
xchg
add
inc
imul
jae
popa
addr16
add
mov
inc
jb
ja
outsb
jne
popa
jb
push
push
inc
push
xor
cs
insb
add
int3
add
insb
arpl
imul
add
gs
je
inc
imul
imul
rolb
outsb
fs
popa
je
add
add
insb
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
jb
popa
je
inc
outsl
outsb
je
add
add
je
je
gs
push
outsl
fs
popa
je
push
outsl
insb
imul
add
add
insb
arpl
insb
gs
add
je
imul
movsb
add
je
insb
je
add
popa
je
inc
dec
inc
imul
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
dec
inc
imul
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
imul
inc
js
inc
js
add
add
je
insb
imul
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
out
push
gs
popa
jns
jne
add
jb
push
popa
add
data16
je
imul
dec
jb
inc
js
add
je
bound
arpl
add
push
imul
add
add
je
imul
addr16
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
movl
inc
outsl
outsb
je
push
add
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
xlat
add
je
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
push
gs
popa
jo
outsl
fs
mov
inc
push
je
dec
push
add
mov
inc
outsl
arpl
add
popa
je
dec
inc
push
add
inc
imul
xchg
add
je
imul
addr16
js
add
popa
je
push
popa
je
gs
inc
jb
jae
add
xchg
add
gs
je
inc
imul
bound
imul
inc
jb
popa
je
push
arpl
outsb
add
jo
add
popa
je
push
popa
insb
gs
add
add
jb
popa
insb
imul
arpl
add
je
gs
dec
jne
inc
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsl
jne
fs
arpl
inc
dec
xor
cs
insb
add
adc
mov
adc
jp
adc
adc
adc
in
adc
inc
pop
adc
xchg
dec
adc
xchg
push
adc
or
add
adc
xchg
adc
mov
adc
cltd
js
add
data16
inc
sub
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
pushf
and
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
in
clc
inc
ret
inc
mov
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
out
add
and
inc
mov
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loop
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
call
push
pop
jl
inc
sbbb
test
jmp
push
jne
lea
movl
into
jmp
loopne
rol
call
shr
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
int3
xchg
loopne
xchg
lods
ret
in
inc
dec
loop
ds
movl
loope
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
bound
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
sahf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
sahf
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
insb
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setle
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
or
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
enter
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
out
add
add
and
fs
inc
test
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
sahf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
sahf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
xor
add
into
bound
add
mov
or
add
inc
pushf
add
into
ret
pop
fs
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
fs
mov
je
xor
mov
cmp
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
notrack
or
or
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
leave
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
or
push
add
inc
add
inc
data16
lret
lock
inc
lret
xor
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
sahf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
sahf
sahf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
sahf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
or
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
xor
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
sahf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
push
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
sahf
mov
push
add
cmp
sahf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
sahf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
call
push
inc
push
jae
addr16
stc
imulb
adc
add
add
push
cmp
popa
inc
jns
addr16
pop
ja
arpl
jne
dec
dec
insl
addr16
pop
push
jne
push
imul
insb
jo,pn
bound
cmpb
insl
das
adc
jmp
adc
jecxz
adc
adc
add
pop
adc
xlat
push
adc
cwtl
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
