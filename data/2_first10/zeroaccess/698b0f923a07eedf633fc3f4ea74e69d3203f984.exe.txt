push
mov
sub
andl
push
mov
movl
push
movl
push
call
adcl
test
movl
je
orl
xor
movl
jmp
subl
push
push
xor
subl
inc
subl
push
sbbl
push
xorl
call
test
movl
je
incl
xor
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
jne
sbbl
push
xorl
push
orl
call
andl
test
movl
jne
push
push
call
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
jne
push
subl
push
adcl
push
orl
call
decl
test
movl
jne
push
orl
push
call
subl
test
jne
addl
push
adcl
push
call
sbbl
test
jne
orl
push
push
orl
call
test
movl
jne
movl
push
push
push
call
test
jne
push
push
orl
push
movl
call
test
jne
sbbl
push
orl
push
call
test
jne
push
andl
push
subl
call
xorl
test
jne
push
subl
push
adcl
call
xorl
test
movl
jne
addl
push
orl
push
andl
push
call
adcl
test
jne
orl
push
push
push
call
test
movl
jne
push
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
call
test
movl
jne
adcl
push
push
push
movl
call
test
movl
jne
adcl
push
push
sbbl
push
call
adcl
test
movl
jne
xorl
push
addl
push
orl
call
test
movl
jne
decl
push
andl
push
orl
call
test
jne
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
push
xorl
call
addl
test
movl
jne
push
orl
push
addl
push
andl
call
test
jne
adcl
push
orl
push
subl
call
test
jne
orl
push
andl
push
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
je
addl
xor
jmp
movl
mov
mov
adc
mov
inc
mov
movl
lea
xor
mov
lea
dec
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
adcl
mov
sbb
mov
xor
mov
mov
adc
mov
add
movl
mov
movl
mov
cmp
movl
jne
mov
mov
sbb
mov
xor
mov
mov
xor
sub
add
sbbl
mov
xor
mov
xor
add
andl
mov
xor
mov
mov
mov
mov
mov
mov
sbb
mov
mov
add
mov
mov
mov
not
movl
movzbl
add
mov
mov
orl
xor
orl
add
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
xor
andl
lea
orl
push
mov
and
mov
subl
xor
sbbl
lea
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbbl
pushl
andl
call
sbb
mov
mov
xor
lea
add
mov
mov
xor
xor
subl
add
mov
subl
xor
lea
mov
movl
cmp
jbe
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
mov
or
mov
movzbl
sbb
mov
mov
sub
xor
movl
mov
mov
movl
cmp
jne
decl
lea
adcl
mov
lea
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
test
movl
je
sub
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jb
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
cltd
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
sbb
mov
add
adc
xor
andl
xor
mov
sub
mov
mov
dec
mov
mov
movl
xor
mov
mov
and
add
mov
adcl
xor
mov
mov
xor
movl
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
mov
mov
adcl
mov
xor
addl
add
movl
adc
addl
xor
xor
movl
cmp
movl
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
push
inc
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
addl
mov
xorl
push
adc
mov
andl
add
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
xchg
add
xchg
mov
dec
ja
lret
dec
jp
jp
dec
pop
jp
adc
pop
cmp
popa
cmp
andl
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
adc
sbb
mov
jecxz
std
daa
jns
lods
dec
cmpsb
mov
mov
fcoml
iret
scas
and
push
sbb
test
setle
and
sub
stos
inc
outsb
addb
imul
fstl
lock
leave
mov
mov
sahf
adc
push
mov
bound
imulb
cmpsb
sar
push
in
inc
movsb
pop
divl
xorb
pusha
les
pop
add
sbb
lock
cltd
or
mov
rcrb
cld
dec
addr16
pushf
test
fwait
lods
xchg
sarb
xchg
aam
cmc
jne
mov
cmpsb
dec
out
ret
mov
jg
repz
hlt
inc
jb
fistps
and
daa
jne
daa
adc
cli
fwait
shlb
pusha
inc
cltd
inc
scas
dec
xchg
cmp
insl
daa
iret
enter
divl
outsb
cmp
aad
or
xchg
xchg
dec
xchg
jg
dec
in
call
pop
fldl2e
aas
lahf
pop
sarb
push
cli
xchg
mov
filds
aad
mov
scas
lea
std
andb
insb
add
fidivrl
dec
int3
sub
ss
test
mov
push
aad
dec
repnz
test
mov
push
fldcw
jle
cmp
cmp
mov
loope
test
mov
mov
in
or
gs
jle
dec
ret
xlat
inc
lret
iret
inc
xchg
push
jge
mov
adc
imul
or
jg
in
sbb
jl
frndint
sti
lock
pop
or
js
mov
pusha
pop
gs
xor
scas
cmpsb
jbe
mov
mov
inc
add
mov
cmpsl
test
pop
not
mov
pop
xor
xchg
shlb
mov
in
dec
scas
mov
loopne
imul
and
mov
and
mov
test
add
pop
ja
fisubl
and
sti
push
pop
in
stos
ja
inc
addr16
cmpsl
loop
push
jecxz
adc
push
sbb
out
iret
xchg
xchg
sub
fsubs
or
inc
imul
divb
xchg
mov
mov
xor
add
ss
cmp
cmp
call
clc
dec
setl
sbb
mov
loope
daa
int
xor
mov
divb
sub
mov
adc
int3
cmp
lcall
sub
in
outsb
jns
xchg
icebp
call
rcrb
fdivs
mov
lret
cltd
in
sub
ret
in
js
fdivrs
pop
pop
mov
outsl
popf
sub
imul
ret
xlat
neg
add
cmp
push
js
pop
xchg
divl
push
push
test
int3
and
imul
pushf
test
xchg
out
xlat
cmpsb
iret
sub
cmp
inc
in
jae
xchg
dec
fisttpl
hlt
pop
xlat
fstpt
cwtl
mov
push
jb
mov
jg
push
add
repnz
and
test
inc
xchg
pop
pop
lds
loop
jnp
dec
inc
sub
arpl
mov
jnp
mov
fisttpll
dec
dec
adc
or
push
pusha
inc
mov
pop
xchg
push
addl
mov
cmp
jp
xor
cmp
inc
loop
push
add
pop
inc
jge
xor
leave
pop
das
xlat
jle
or
mov
fidivrl
inc
sbb
out
imul
and
cs
and
gs
push
pop
push
jae
or
add
inc
cmp
in
mov
mov
fistpl
into
sub
cmc
mov
fwait
mov
mov
inc
rorl
push
xchg
arpl
sbb
imul
inc
add
cmp
mov
sbb
test
inc
test
mov
cmp
lret
leave
mov
lea
sub
mov
rcrb
mov
negl
stos
push
aad
pop
mov
sbb
stc
jge
cmpsb
mov
push
outsb
and
dec
repz
arpl
sbb
aam
movsl
lret
mov
pop
pushf
test
sub
push
ss
jmp
movsl
and
gs
xchg
push
out
pop
xor
mov
mov
push
jbe
je
dec
mov
mov
cmp
pop
std
jns
aad
sbb
sbb
fidivl
mov
rsm
sub
mov
mov
mov
repnz
adc
jne
ret
cltd
sbb
bound
cmpsb
mov
pushf
mov
lods
jmp
mov
out
xchg
sbb
add
stc
dec
jb
sub
sti
add
sbb
xchg
push
xchg
out
mov
int
push
sbb
jo
scas
mov
dec
fdivrp
fildll
and
xchg
int3
or
sarb
popf
inc
mov
dec
mov
mov
xchg
adc
dec
pop
xchg
leave
orb
adc
pop
pop
push
popa
into
lcall
mov
bound
jbe
mov
repz
clc
mov
div
imul
loopne
mov
jmp
pop
loopne
popa
ljmp
test
push
push
jge
mov
push
adc
in
out
cmp
jne
out
xchg
fistl
icebp
test
and
stos
outsl
xchg
mov
push
dec
into
and
push
fisubrs
xchg
adc
cmpsb
xlat
sbb
dec
fstp
mov
les
sbb
push
mov
jb
pop
dec
cmpsl
cltd
fwait
and
adc
in
scas
movsl
addb
rorl
dec
scas
popf
cltd
fs
pop
leave
movsb
pop
incl
cmpsl
mov
mov
fdivl
hlt
cmc
mov
and
test
out
iret
jge
sahf
pop
dec
popa
lea
xor
xchg
add
dec
sbb
mov
loope
mov
jmp
xchg
and
push
ss
gs
jecxz
mov
mov
int3
out
pop
xor
lock
outsb
fimull
fisttps
lret
ds
push
sub
lds
addl
push
lea
mov
repz
pop
xchg
loopne
mov
or
add
cmp
sub
mov
pop
add
lret
aam
push
inc
out
in
or
inc
pop
movsb
jl
hlt
xchg
jns
test
mov
aam
das
sbbb
test
jmp
jno
inc
icebp
mov
roll
loop
xor
adc
mov
in
inc
popa
push
iret
test
stc
pop
shl
mov
sub
jne
rolb
mov
cwtl
dec
sbb
sub
or
gs
cmp
subb
add
cmp
sbb
jnp
divl
jmp
dec
pop
movsb
or
imul
mov
rcll
pop
in
adc
mov
xchg
mov
mov
mov
jae
cmc
imul
mov
sbb
mov
cltd
clc
ret
inc
sbb
push
xchg
mov
leave
jno
xlat
cld
dec
shlb
shll
dec
sub
mov
pop
in
fwait
in
add
inc
scas
aaa
jb
dec
jns
ja
adc
and
out
lds
jp
in
outsl
dec
leave
xchg
xchg
ja
dec
jg
into
mov
aam
lods
mov
fucom
and
inc
or
mov
xlat
jno
mov
add
fiadds
pop
repz
popa
scas
and
adc
mulps
and
pop
xchg
outsl
cld
mov
inc
adc
fimuls
mov
fcomp
mov
call
cmp
inc
pop
enter
out
imul
cmp
cmc
fdivrs
push
add
sub
inc
pop
pop
push
mov
fstpl
pop
pop
cmpsb
sti
push
iret
sub
stos
or
jg
jmp
sbb
mov
dec
mov
js
sub
jne
mov
repnz
outsl
dec
xor
mov
inc
xchg
pop
repnz
jg
push
xchg
inc
das
cmp
jecxz
inc
dec
cmpb
dec
popf
pop
out
pop
xor
add
lds
jecxz
dec
int
inc
clc
ret
jmp
push
sbb
insl
pop
jo
add
push
cmc
push
fsubs
sub
mov
ja
lock
stc
and
add
ret
fwait
adc
fdivr
xor
jns
in
mov
mov
add
cmp
pop
int3
jl
lcall
or
cmp
adcb
icebp
imul
mov
jae
xor
enter
mov
repz
int
loopne
andb
stos
hlt
insb
push
xorb
fmull
scas
or
or
ljmp
out
pusha
cmp
mov
rorb
jge
popa
fwait
add
mov
scas
mov
fmulp
jb
inc
mov
fs
je
arpl
or
adc
inc
jne
xlat
add
inc
xchg
sbb
loope
pop
in
outsb
jno
jbe
jb
sbb
das
pusha
or
jle
pushf
sub
jle
mov
adc
mov
daa
into
test
and
jge
out
mov
addr16
jge
xorb
nopl
popa
movsb
outsb
pop
in
pop
inc
mov
xor
xchg
cltd
inc
int
test
daa
lds
cmp
popa
std
shl
js
adc
data16
xor
mov
out
jae
notb
mov
cmp
sbb
cmp
jnp
imulb
fld
icebp
mov
sbb
stos
or
imul
jle
xchg
iret
push
pusha
ret
fdivrl
lds
push
mov
scas
iret
cmpsl
scas
jle
jmp
jmp
fcomi
cltd
and
movsb
xor
cltd
fsubrl
ret
and
test
or
push
sbb
out
xchg
xchg
mov
sub
or
stos
mov
icebp
ret
jl
fs
pop
jmp
and
mov
jnp
and
sub
stos
scas
pushf
push
mov
mov
inc
call
pop
outsl
je
into
jp
mov
sbb
sub
xor
mov
in
sbb
jns
jns
mov
movsl
lcall
in
and
std
pop
lea
xchg
sub
jo
mov
bound
insl
xor
add
shr
or
mov
add
imul
int
out
xor
mov
enter
inc
scas
mov
sub
and
movsb
sub
imul
add
and
daa
jbe
cmp
loop
scas
cmp
inc
cmp
inc
ja
bound
sub
mov
lahf
pop
lea
ret
add
lock
mov
mov
add
push
std
cld
lahf
adc
icebp
lods
cmc
aaa
push
adc
adc
enter
xchg
divl
filds
xchg
xor
adc
mov
test
pop
ror
cmp
mov
jb
scas
xlat
lods
sti
jno
movl
sub
sub
inc
stc
std
fbld
in
push
mov
icebp
sahf
negb
jne
or
outsb
add
lea
or
cmp
cmp
cld
push
shrb
cmp
push
sub
lods
loop
fisubl
inc
lock
fistps
hlt
xchg
hlt
das
push
mov
pop
pop
xchg
ss
xchg
and
insb
dec
adc
arpl
cmpxchg
lahf
aaa
daa
sbb
sbb
or
aas
pop
push
lahf
mov
cmpsl
inc
mov
fs
fcompl
and
das
out
cmpsl
mov
jp
mov
or
jno
fptan
in
push
lods
xchg
mov
fidivs
mov
insl
mov
mov
inc
adc
into
lock
out
cmc
cmp
mov
sub
and
mov
mov
int
xchg
push
fwait
je
addb
or
call
clc
rorb
test
outsb
jae
sbb
adc
sub
cs
outsb
xor
aam
pop
add
inc
es
sbb
insl
cmp
lds
push
or
cmp
inc
loopne
push
sahf
xor
sub
add
daa
cmp
fisubs
out
add
xor
cltd
jg
mov
push
in
mov
dec
data16
adcb
mov
in
fildll
xchg
inc
xor
cld
and
inc
test
xor
iret
fdivrp
outsb
stc
push
std
ds
gs
pop
add
mov
push
pop
movsb
mov
test
sub
xor
mov
adc
push
sbb
lret
decb
jbe
pushf
js
jle
jne
cmp
push
js
jp
pop
popf
in
xor
sti
popl
aad
in
sub
cmp
mov
xor
fimull
cmp
loop
fsin
cld
fstps
dec
adc
cltd
inc
push
int
dec
xor
sbb
jb
xor
push
mov
push
add
js
inc
jae
rorl
push
shl
mov
fdivrs
push
lock
lock
popf
test
xor
mov
mul
adc
fsubrl
out
mov
and
andl
dec
imul
push
cltd
mov
jle
popf
cmp
fstl
push
xchg
icebp
sub
out
or
iret
jno
insb
sbb
sub
outsl
and
cmp
fwait
xchg
add
sahf
mov
xchg
mov
ljmp
ret
pop
xchg
push
mov
std
mov
outsb
xor
xchg
lcall
mov
popa
xor
xor
xor
faddp
cmpsl
loopne
xchg
mov
mov
xorb
push
sub
add
das
test
adc
loopne
fstpt
out
xchg
jp
incl
mov
jo
sub
pop
scas
pop
mov
dec
cmp
jbe
add
loop
fistpll
clc
repnz
xor
cld
jecxz
in
jmp
mov
arpl
addr16
and
pandn
arpl
xor
jg
ds
ss
imul
cmp
dec
data16
rorl
lods
mov
test
ja
dec
repz
mov
negb
xchg
mov
or
fistpl
mov
xor
push
das
xchg
ret
or
aad
pop
divl
xchg
ljmp
fiadds
pop
cmp
push
lods
dec
xor
add
sbb
adc
pusha
fisubl
popa
aam
add
cmpsl
outsl
cmpsl
sub
mov
out
in
fdiv
mov
dec
pop
push
popa
cld
or
lret
push
jl
ret
mov
pop
adc
loope
cmp
mov
add
fcom
clc
dec
call
mov
jge
test
sarl
out
adc
int3
xor
mov
shll
and
test
adcb
int3
nop
sbb
out
inc
andb
or
outsl
push
xor
xorb
test
xchg
cmp
add
adc
mov
mov
add
iret
std
mov
dec
or
pop
jns
out
sti
sub
pushf
pop
in
decl
mov
pop
push
dec
fstl
cmp
cmp
aad
sub
in
shll
sub
sbb
pop
pusha
mov
ret
mov
mov
ja
sbb
push
push
ja
dec
divl
dec
imul
daa
jmp
mov
or
aad
lods
jae
icebp
pop
test
aam
out
movsb
popa
stos
pcmpeqb
push
jns
mov
jb
adc
cld
pop
aam
shll
mov
pop
in
cmp
cmpb
mov
sub
inc
cmp
jl
aam
fucomip
push
xor
adc
jge
inc
jb
insb
and
push
mov
hlt
jne
stc
mov
outsb
stos
cld
pushf
mov
nop
mov
in
out
int3
dec
icebp
cld
xor
and
dec
mov
mov
xchg
sub
sahf
in
les
mov
jae
cmp
movsl
test
jo
data16
arpl
roll
push
std
cmpsb
push
xchg
pop
arpl
popf
lods
repz
sub
adc
pop
fisubl
scas
jle
mov
nop
insb
stos
ret
jo
sbb
jecxz
pushf
jmp
inc
xor
jle
mov
xor
int3
xchg
add
mov
outsb
cmp
cmp
mov
mov
sub
loop
jge
mov
dec
mov
std
mov
jmp
int3
mov
sbb
push
es
addr16
loop
stos
pop
ficoms
aaa
cld
rcll
jp
and
mov
mov
mov
push
push
jno
inc
jecxz
jbe
xor
ror
insl
dec
filds
out
je
dec
add
test
jnp
jo
dec
insl
push
int3
call
imul
jnp
cmpsl
out
das
test
pop
or
adc
pop
xchg
and
sub
sar
and
jmp
dec
jmp
movsb
sarb
cmpsl
cmp
std
rolb
aas
push
sti
ds
adc
sbb
loop
mov
and
push
mov
int3
sbb
jns
jl
aaa
dec
push
stc
loope
push
cmp
mov
adc
test
pop
jbe
mov
add
lcall
mov
add
icebp
imul
pop
push
loope
push
jne
add
add
cwtl
data16
int3
inc
pop
mov
mov
mov
cs
hlt
push
cmp
dec
mov
imul
jo
xchg
cmpl
mov
cmp
test
and
cld
lahf
mov
mov
inc
out
mov
in
fldcw
or
sbb
mov
mov
stos
sub
in
out
orb
std
cmpsl
hlt
aad
or
out
adc
dec
test
dec
and
sahf
pop
mov
add
jl
aad
notb
dec
sti
lahf
movsl
adc
push
xchg
sub
cli
xchg
inc
imul
rclb
mov
pop
test
daa
inc
dec
enter
pop
mov
iret
jnp
jle
xor
xchg
jmp
and
insl
sbb
popa
jmp
ljmp
fidivrs
sahf
inc
adc
or
jno
ret
inc
les
das
incb
mov
adc
in
mov
mov
es
cmp
pushf
lods
dec
adcl
je
in
xchg
cmpsb
add
js
xchg
cmp
pop
jns
xchg
pmullw
inc
mov
mov
push
shlb
sub
fs
inc
sarl
scas
mov
pop
add
lock
rolb
or
xchg
ret
lods
adc
hlt
lods
icebp
cli
push
xor
cs
out
outsb
daa
lret
aam
pop
mov
lret
xlat
jg
cmp
cmp
lods
jne
add
les
xor
sbb
xchg
stos
mov
subl
mov
mov
mov
jnp
adc
stos
divl
inc
and
mov
cli
lahf
adc
lds
ret
rolb
add
push
cmc
cmpsl
and
sub
aad
loopne
sub
fldl
jmp
aam
aad
xchg
ljmp
lods
out
push
aam
lods
movb
cmp
test
push
fistps
xchg
pop
lret
sbb
cwtl
lods
roll
dec
cmpb
cmp
out
xor
in
xor
dec
adc
dec
mov
in
roll
shlb
xchg
lock
pop
das
push
pusha
mov
push
or
lret
inc
stos
adc
xchg
gs
pop
aam
sbb
mov
nop
sahf
ror
or
rclb
ja
mov
xchg
mov
inc
loop
xchg
mov
daa
gs
mov
cs
xchg
ja
out
jne
outsl
int3
push
mov
imul
fwait
mov
mov
repz
mov
cvtps2pi
icebp
mov
pop
xchg
xor
call
aad
jae
testl
jae
cmp
sarb
call
push
testb
out
into
cwtl
andb
mov
cmp
test
inc
mov
cmc
loop
xchg
mov
js
sub
mov
ret
cmc
leave
sub
cmp
or
inc
sbb
xchg
ss
int3
addr16
dec
mov
call
mov
push
adc
jne
dec
popf
push
xor
dec
insl
daa
cmpsb
mov
ss
xchg
lock
mov
in
mov
lcall
in
icebp
sbb
sbb
aad
sahf
jnp
test
jns
xor
mov
sub
cmp
outsl
xchg
imulb
pop
ds
fsubrs
lcall
mov
sbb
fdivs
xchg
divb
sub
or
pop
sbb
dec
mulb
stos
mov
shll
stc
ljmp
sbb
sbb
xchg
mov
mov
in
decl
adc
ds
divl
movsb
adc
imul
rorl
into
cmp
lock
mov
inc
lret
stos
sbb
rcll
add
cmp
cmp
inc
stos
sbb
out
push
xchg
inc
rolb
xorl
pop
test
adcl
pop
fnstsw
xchg
sahf
xchg
push
cld
pop
sub
jle
inc
pop
sbb
sti
or
pop
lock
mov
push
popf
xchg
adc
icebp
sub
inc
fstp
push
lret
es
data16
out
mov
pop
xchg
mov
orl
dec
in
mov
sub
adc
loop
inc
and
lret
sub
jle
aam
in
lcall
push
jb
sub
push
pop
jecxz
sar
test
cmp
adc
lds
arpl
addr16
inc
loopne
or
outsl
rclb
pop
pusha
mov
mov
das
out
xchg
jp
sti
cwtl
xor
js
add
popf
mov
stc
out
mov
imul
pushf
filds
push
loop
jns,pt
lret
dec
loop
into
mov
in
jge
xor
push
repnz
adc
nop
jno
rcr
ret
pusha
fstpt
fsubrs
dec
cmp
push
adc
xchg
sbb
and
add
mov
jg
or
mov
inc
les
daa
fdivrs
out
pop
sbb
sub
outsl
out
decb
mov
ljmp
pop
cmp
mov
jnp
dec
fs
pop
rclb
sub
dec
pushf
test
movsb
roll
cli
shr
nop
jne
inc
sub
sbb
mov
fidivs
aad
negb
adc
fistl
out
add
out
push
and
adc
sub
push
jno
stc
cmpsb
pushf
scas
inc
push
and
and
jp
test
outsb
es
or
sti
cmp
mov
hlt
sub
fidivrl
sbb
sti
movsl
ja
pop
lods
mov
mov
lods
mov
enter
enter
loopne
mov
fwait
mov
fldt
ljmp
ljmp
clc
scas
ja
sti
dec
outsb
sar
jmp
clc
data16
or
push
jo
shl
adc
or
lret
out
outsb
js
xor
js
jo
int3
jle
mov
in
lods
mov
ficomps
mov
mov
out
orl
push
fimull
mov
jmp
aam
ret
enter
cmp
cld
inc
and
dec
shlb
mov
cmp
xchg
ljmp
aas
in
sbb
fmull
and
inc
mov
cmp
adc
xchg
test
rorl
jb
pusha
cmp
js
or
fwait
add
jmp
mov
jno
mov
fcoms
push
in
lods
mov
pop
hlt
mov
ret
jnp
loope
inc
sbb
in
add
push
mov
or
scas
fstpl
cmp
xchg
loope
xor
mov
xor
xchg
xchg
dec
push
dec
cs
xor
add
cmovp
clc
insb
sbb
fdivl
sub
pop
fldl
pop
add
repnz
push
rcl
cld
mov
cmp
jno
scas
and
fldl
jne
jg
repnz
aas
dec
inc
mov
scas
int
out
scas
cmpl
ds
in
mov
fidivrl
adc
or
in
cltd
mov
push
jg
xor
movntps
out
cmp
dec
ret
inc
fstps
sbb
subb
pop
pop
xor
jbe
sub
mull
fcmovbe
push
sub
push
xchg
sbb
or
int3
push
lock
pop
stos
sbb
xlat
js
push
pop
mov
cmp
adcb
in
movsb
push
mov
divb
pop
rorl
sub
push
movsl
mov
cmp
out
mov
mov
xor
cltd
in
subl
mov
frstor
inc
adc
sub
scas
rolb
popa
out
addr16
pusha
mov
popa
jg
mov
sbb
int
popf
imulb
in
push
out
ret
pop
aam
clc
pop
js
inc
mov
sahf
xor
xchg
mov
jge
mov
jns
pop
je
lahf
nop
pop
pushf
adc
pop
cmp
outsb
sbb
testb
xchg
lods
xor
inc
cld
movsl
push
call
loop
xor
addb
mov
or
add
mov
inc
push
mov
call
sahf
scas
dec
add
xor
add
lcall
cld
test
shll
test
hlt
mov
or
and
jns
cmp
inc
mov
aaa
std
inc
xor
mov
pushf
scas
fsubp
ret
dec
or
frstor
jo
shll
cltd
mov
ret
mov
aas
dec
inc
imul
mov
jnp
fsub
cs
jbe
mov
lret
icebp
jns
loope
sbb
into
adc
fldt
je
mov
mov
cs
add
ss
jmp
movsl
cmovle
sbb
aam
bound
pop
and
and
jno
pop
add
mov
mov
in
push
out
sar
ret
cmp
stos
cmp
and
cltd
out
lds
repnz
imul
ja
jae
xchg
ffree
jbe
loope
push
push
enter
movsb
mov
fcmovu
add
jmp
mov
or
xor
xchg
scas
test
xor
inc
mov
fcompl
xchg
jge
xor
jp
xor
in
jg
int
sti
jle
mov
adcl
cld
in
jg
movsl
fsincos
xor
push
pop
cmp
mov
testb
fdivp
and
int3
inc
sub
push
dec
xchg
movsb
jno
inc
mov
movsb
loopne
push
rol
nop
outsl
jo
pop
dec
icebp
jecxz
mov
fsub
or
dec
xchg
mov
roll
inc
sub
jmp
or
pushf
imul
cld
outsb
int
nop
xlat
adc
add
xchg
enter
xchg
clc
int3
xchg
sbb
aad
leave
or
pop
cmp
mulb
fdivrs
mov
andl
xchg
jb
xchg
test
loop
xchg
mov
je
cmpsb
lcall
insw
push
lods
or
xchg
lock
and
pop
in
jae
inc
test
push
repz
sub
arpl
sahf
add
cmp
fmull
xor
or
nop
pop
mov
jno
mov
add
dec
ds
push
idivb
cmp
scas
xor
cmp
enter
mov
xor
inc
jns
aam
cmp
pop
loop
mov
out
movsb
loopne
mov
dec
or
mov
int
xchg
mov
mov
clc
sbb
repz
ja
fsubl
fucomi
mov
jbe
sub
jns
or
stc
es
sarl
jno
add
test
insb
lea
data16
mov
pop
cmpsl
dec
dec
jne
daa
push
or
ja
push
dec
dec
icebp
cmp
popf
testb
rol
les
popf
mov
cmp
add
push
popf
cmp
ds
cmp
mov
push
adc
pop
insl
jg
fcmovbe
mov
lock
and
jmp
ret
ret
testl
xor
lahf
sub
aam
mov
mov
nop
outsl
loopne
jb
jl
sbb
popa
clc
pop
ljmp
inc
stos
inc
cli
xlat
orb
int3
xlat
mov
shlb
inc
dec
sbb
inc
xor
dec
outsb
hlt
xchg
mov
movsl
sbb
xchg
jle
and
cs
inc
or
or
out
dec
gs
ljmp
push
jge
scas
push
ret
test
xor
pop
dec
cmp
lahf
mov
pop
lahf
sub
negb
sbb
jge
pop
sbb
and
iret
jmp
cmp
sub
xchg
and
dec
push
into
xor
push
ds
push
fistpll
cmpsb
repnz
sbb
add
cmp
enter
push
xor
out
push
in
orl
lds
leave
scas
xchg
movsl
sub
mov
ljmp
pop
dec
mov
xchg
xchg
dec
and
loop
pop
and
adc
mov
movb
xchg
mov
fbstp
push
and
inc
or
jl
jnp
inc
cmp
test
ret
test
mov
mov
cwtl
ret
and
add
xor
push
sub
adc
pop
leave
mov
je
sub
rcrb
xlat
sub
dec
inc
sub
sbb
mov
not
and
jbe
hlt
stc
sbb
arpl
xchg
jl
pop
push
mov
jmp
fistl
jmp
xchg
and
jne
outsb
pusha
jae
in
enter
xor
adc
pop
sbb
stos
imul
andl
jbe
jne
hlt
dec
sbb
xchg
jnp
ljmp
fwait
shlb
int3
addr16
pusha
je
mov
add
popa
fisubl
xchg
out
daa
xor
outsb
mov
insb
pop
in
mov
dec
add
pop
xchg
loope
pop
ret
test
and
arpl
push
pop
or
jecxz
jb
xor
movsb
xchg
pop
in
mov
add
adc
inc
sti
clc
daa
insb
fsub
or
gs
cmpsl
jbe
sbb
cltd
loope
push
dec
out
cmp
xchg
adc
xchg
pop
cmp
popf
adc
jae
sub
xchg
cmc
decb
sbb
cld
lcall
fidivs
cltd
mov
push
dec
sub
jmp
shll
fstl
mov
aam
push
cmpl
xor
mov
push
pop
lods
push
pop
cmp
call
sbb
test
clc
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
sub
movl
mov
movsbl
or
mov
sub
sub
mov
xor
mov
sbbl
xor
movl
cmp
movl
jne
xorl
mov
andl
push
mov
xorl
add
mov
and
mov
mov
add
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
subl
push
push
push
lea
push
lea
adcl
jmp
outsl
or
or
mov
pop
jp
ljmp
aas
xchg
out
es
sub
xchg
data16
imul
mov
adc
repnz
hlt
insb
mov
mov
push
sbb
rorl
push
dec
stos
bound
leave
mov
repz
gs
push
and
and
outsb
jne
jle
std
cmp
inc
mov
ljmp
icebp
and
sbb
add
aam
mov
mov
mov
call
dec
pop
sub
cs
sub
popf
out
pop
jns
cmp
outsb
fcmovu
loop
lahf
mov
jo
jo
sbb
out
add
fmull
lds
mov
or
in
neg
inc
inc
add
xor
add
push
iret
in
push
test
gs
and
xor
insb
mov
sub
push
adc
stos
jo
cmp
push
push
ljmp
push
mov
adc
std
mov
xor
je
int3
test
popf
js
mov
push
cmpsl
test
push
add
lea
js
ret
call
out
sub
lea
addr16
lods
outsb
jecxz
sbb
dec
xor
push
data16
mov
fstpt
aam
lods
imul
adc
mov
fsubs
dec
fucomp
out
aam
aam
jns,pn
mov
pushf
mov
jae
popa
jle
or
jno
dec
jbe
jb
lahf
pop
adc
sub
daa
sbb
sbb
out
stos
rorb
scas
sbb
add
xor
xchg
cmp
xchg
push
aad
cmp
xor
jle
pop
lock
pushf
mov
and
xor
pop
ljmp
mov
int3
add
insl
scas
jmp
out
ja
lret
ds
popf
mov
xchg
mov
nop
push
dec
push
or
or
lret
stc
jo
jle
xor
lcall
in
adc
pop
mov
mov
call
push
movsb
dec
push
adc
mov
xchg
popf
mov
inc
test
sub
iret
or
and
out
and
fstp
and
stos
mov
pop
pop
or
xor
cmp
mov
pop
xchg
xor
and
clc
dec
mov
push
sarb
pop
das
push
mov
les
jae
mov
nop
jmp
hlt
aam
out
sbb
and
mulb
and
adc
inc
mov
adc
adc
pop
pop
or
inc
xchg
leave
outsl
sub
negl
icebp
add
lds
and
shlb
aad
add
shl
add
sahf
inc
jle
adc
adc
xlat
lock
and
and
xchg
rolb
cmp
cli
lahf
ljmp
test
aas
mov
insl
jo
or
in
mov
pop
sbb
sbb
xchg
inc
cmp
pop
xchg
mov
loopne
fstpt
jae
sti
mov
outsb
iret
push
adcl
and
sahf
mov
test
fwait
loope
aad
push
jp
mov
add
adc
jo
fistl
jns
dec
imul
add
xor
in
gs
inc
cli
jbe
aaa
sub
cli
bound
sbb
mov
adc
or
sub
or
aaa
cmc
popl
aad
outsl
dec
cwtl
cmp
jae
fisubrl
and
dec
add
dec
cltd
mov
push
data16
pop
sti
scas
repnz
cmp
add
mov
mov
fistpl
and
and
sti
mov
dec
out
pop
fisubrl
pop
out
push
push
bound
dec
jb
fs
test
push
incb
sbb
and
push
scas
xchg
outsl
cmp
imul
arpl
fcmovu
push
popa
test
ljmp
xchg
push
xchg
push
jbe
cld
das
xchg
pop
loopne
mov
dec
xor
popf
loop
xor
mov
xchg
push
ja
mov
mov
xchg
adc
or
dec
push
jo
ja
and
mov
add
in
test
sub
xor
ficomps
stc
pmulhw
in
and
mov
call
hlt
lcall
dec
std
sub
push
sbb
pop
pop
sub
hlt
fcmovu
int3
push
xchg
mov
decb
in
jmp
push
sub
push
dec
imul
sub
call
pop
mov
push
xchg
mov
mov
mov
mov
in
das
mov
inc
dec
push
jae
pop
xor
stc
jae
cli
out
pop
jae
test
sbb
sarl
jb
in
call
pop
dec
ljmp
xor
and
mov
mov
pop
cmp
lds
ds
mov
data16
pop
loop
testb
pop
lods
mov
stos
gs
or
faddl
daa
inc
lret
push
push
addr16
add
ds
or
bound
adc
sbb
lods
jmp
loop
mov
in
fwait
add
sub
scas
jg
imul
in
mov
pop
fcoms
jb
xlat
fistps
rclb
inc
outsl
mov
pop
in
cld
data16
jno
out
fisttpll
adc
adc
stc
mov
icebp
cld
xor
jno
test
mov
cmpsb
mov
xor
arpl
into
je
sbb
cmc
in
push
xchg
and
jne,pn
fwait
sbb
push
lods
mov
pop
pop
inc
cmp
nop
push
int3
mov
xor
adc
push
int3
les
mov
or
jbe
mov
inc
int3
inc
pop
mov
xorl
loope
jmp
cltd
inc
xchg
xor
dec
jmp
sbb
insb
xor
lcall
adc
enter
ret
mov
scas
in
mov
mov
popf
mov
dec
mov
jno
and
add
lea
and
pop
in
dec
cmp
xorl
test
out
call
mov
pop
bswap
push
mov
sbb
add
xchg
xchg
jnp
repz
lahf
icebp
loopne
insl
test
inc
out
mov
test
inc
scas
cmp
jg
xlat
cmp
push
sbb
push
sahf
addr16
pusha
jo
lds
daa
imul
adc
fistl
pusha
inc
in
pmaxub
fcmovne
pop
or
mov
add
iret
jl
shlb
stc
jnp
sub
les
lods
outsl
and
pop
or
pop
xchg
sbb
dec
rolb
sar
and
push
js
pop
and
ds
jl
mov
inc
cmc
ficompl
leave
imul
fistpl
cmp
out
xchg
xchg
jns
daa
jp
sahf
cmp
or
test
jg
js
pop
loopne
lock
out
pop
inc
xor
xorb
mov
aaa
fwait
adc
xchg
das
sub
sub
push
sti
scas
inc
inc
mov
leave
stos
rorl
lcall
xlat
lcall
sbb
fidivl
aad
push
jno
scas
push
xor
cmpl
sbb
adc
leave
gs
out
dec
cs
loop
rcl
sbb
lret
cmp
mov
addr16
fsts
aam
jae
mov
shlw
or
add
cmp
negl
stos
adc
xor
cltd
push
mov
pop
call
int3
rclb
jno
cltd
sahf
divb
jecxz
xor
add
push
jg
and
dec
xchg
jl
das
xchg
cwtl
sahf
or
inc
enter
cmp
fidivrs
sub
das
pop
and
testb
pop
idivl
pop
lcall
rolb
stos
jle
fwait
rcl
leave
fimuls
fisubl
xor
mov
fisubrl
insb
mov
cs
insl
pop
adc
mov
dec
sub
inc
add
out
in
fs
testb
dec
mov
icebp
shll
inc
xchg
inc
clc
jl
pusha
add
xchg
mov
inc
ficoml
push
loopne
out
icebp
push
inc
test
enter
jnp
ja
imul
push
leave
cmp
loopne
mov
mov
pop
test
inc
sahf
mov
mov
std
xor
clc
daa
dec
xchg
adc
inc
stos
clc
scas
adc
lods
dec
test
or
mov
into
xor
sub
scas
pushf
inc
bound
pop
push
mov
mov
sbb
mov
cld
je
xchg
in
and
mov
xchg
fisttpl
popf
bound
in
aam
outsb
mov
icebp
xchg
xlat
icebp
push
sub
mov
sarb
mov
mov
test
add
dec
or
in
dec
dec
int3
fisubrl
mov
jbe,pt
mov
movsb
int3
je
cld
gs
div
pop
mov
in
cmpb
add
aas
push
mov
cwtl
cwtl
in
loopne
ficoms
test
inc
xchg
std
int
out
jo
ja
out
stos
sub
hlt
xchg
sbb
sub
mov
je
test
cwtl
add
cltd
cmp
xchg
jmp
pop
test
pop
popf
les
or
mov
adc
fnclex
xor
jp
repz
loope
rclb
out
shr
adc
jg
xchg
loope
or
add
and
les
or
loopne
mov
jb
or
jg
daa
pop
ljmp
lret
aaa
mov
jno
in
add
clc
mov
inc
int3
dec
popf
lcall
adc
dec
mov
nop
mov
jp
adc
mov
mov
push
out
call
jp
outsb
sub
std
lock
fimuls
sahf
lahf
xchg
cli
or
decl
lret
push
dec
rcl
ja
scas
sbb
push
imul
js
dec
lret
mov
mov
mov
and
and
mov
push
js
jnp
aas
mov
inc
sbb
sahf
bound
cli
cli
shr
and
iret
mov
inc
psubw
push
setno
mov
or
ret
sub
sbb
add
ss
cltd
xor
inc
roll
and
and
and
fwait
lret
scas
fnstsw
hlt
sub
mov
daa
fwait
arpl
xor
xor
in
xor
mov
sub
aaa
out
jp,pn
cmp
lea
test
int
popa
arpl
popa
pop
mov
push
enter
mov
nop
data16
xchg
lock
xor
fildll
inc
adc
or
sbb
sbb
lcall
adc
popa
testl
stc
clc
cmp
mov
sti
shll
xchg
pop
inc
xchg
popa
sbb
add
push
mov
sub
sub
enter
cltd
adc
fiadds
cmp
pop
sbb
les
push
pop
pop
out
je
and
testb
jbe
pop
and
mov
pop
in
fdivr
scas
jecxz
sbb
in
in
jmp
jg
fidivrs
into
rclb
push
dec
or
int3
icebp
sbb
mov
in
xchg
mov
mov
adc
enter
mov
cwtl
fcoms
mov
xor
dec
xchg
lret
icebp
pusha
add
fdivrs
lea
xchg
and
insb
and
fdivs
stc
dec
lsl
ret
fsubrl
xlat
outsl
int3
xchg
pop
jg
mov
dec
jbe
ljmp
loop
jmp
mov
pop
aas
sbb
mov
leave
aad
xchg
mov
fpatan
stos
adc
out
arpl
loop
popf
sbb
xlat
rorb
loop
push
in
decb
sub
jns
int3
pop
jle
cmp
insl
rorl
pusha
scas
inc
xchg
inc
jae
lea
pop
mov
fcoml
stos
push
push
iret
int
inc
xchg
xchg
add
sub
xlat
jle
cld
stos
and
aaa
stos
adc
out
mov
and
outsb
std
popf
add
dec
cmp
fists
inc
xor
dec
add
rorl
mov
xor
cmp
xchg
hlt
rcrl
stc
mov
cmp
and
test
push
jle
fidivs
imul
popf
adcb
cli
arpl
ror
dec
inc
insl
movsl
jae
orl
sub
clc
repnz
sarb
cmp
pop
mov
imul
xor
in
mov
das
xchg
xchg
xor
push
mov
into
mov
jno
dec
ret
lds
loop
sti
mov
es
cld
sbb
push
or
inc
inc
call
xchg
scas
lcall
push
and
or
ret
xchg
adc
cmp
aad
xor
imul
pusha
dec
add
pop
repz
lret
fbld
popa
xlat
mov
fildl
or
repnz
pop
mov
push
lods
repnz
xchg
fstp
sbb
pushf
mov
jp
jge
loop
out
jo
inc
and
call
scas
push
xchg
and
or
mov
shr
or
dec
sub
xchg
out
and
inc
ds
jb
ficoms
fldenv
out
jne
pop
movq
shrl
stos
mov
shll
and
jg
aad
shll
lods
sarb
test
push
fsub
nop
fwait
sbb
cmp
shll
pop
xchg
inc
push
into
lcall
xor
cmp
jmp
in
loope
jecxz
aas
inc
rcrl
jno
adc
mov
jp
dec
jle
arpl
imul
or
lock
stos
jecxz
icebp
pop
jns
xor
xchg
jecxz
aaa
jmp
out
enter
inc
out
pop
cmc
popf
push
dec
inc
dec
mov
lods
dec
cmp
call
into
cld
sahf
je
fistpll
xchg
roll
jno
movsb
lret
lea
std
cmc
xchg
cld
cwtl
daa
cmc
or
mov
call
icebp
sub
pop
cmp
jcxz
call
mov
push
sub
mov
out
jecxz
jno
adc
shl
cli
cli
xchg
cmp
dec
pusha
mov
mov
jl
mov
mov
sub
mov
add
lods
push
cltd
clc
cmc
mov
inc
iret
and
shr
xor
mov
dec
mov
mov
or
xchg
pushf
push
repnz
fnsave
addr16
push
sub
lods
push
fdivrl
sub
sbb
cld
idiv
mov
mov
mov
mov
rorb
iret
enter
jp
pop
mov
into
icebp
inc
pusha
adc
jns
flds
dec
pop
jge
adc
sub
mov
push
mov
fidivrl
mov
jg
adc
push
pusha
ficoms
out
fisubrs
jp
testb
pop
scas
adc
sub
sub
fs
adc
jecxz
inc
roll
ret
stos
inc
dec
aas
in
push
das
pop
fs
mov
mov
jbe
jmp
jle
mov
call
sub
jo
adcl
je
xchg
inc
iret
es
lret
xchg
push
and
xor
negb
repnz
cmpsb
dec
fsubl
xchg
adc
scas
in
icebp
inc
je
fs
mov
dec
jecxz
in
xor
out
xchg
pop
adcb
rcll
divb
fstpl
lahf
pop
test
adc
sub
mov
data16
out
loopne
sbb
xchg
sub
adc
jp
lea
ret
inc
cmp
sub
or
sub
mov
insl
icebp
cmp
loopne
data16
scas
xchg
nop
xchg
mov
aad
aad
lods
repnz
aas
xor
sbb
pop
mov
sbb
push
xchg
and
scas
fistps
xchg
testl
mov
pop
cmp
cmp
daa
push
mov
pop
mov
ja
mov
sub
push
xchg
xchg
ss
adc
ljmp
inc
sbb
out
mov
insl
sub
mov
mov
add
add
push
xchg
jmp
pop
cmc
jp
iret
push
inc
lea
fsubs
mov
testl
arpl
sti
dec
std
scas
int3
jbe
jecxz
jb
xor
std
mov
arpl
mov
jb
pop
ss
jmp
mov
mov
dec
and
es
mov
cmpsl
xchg
ljmp
mov
jns
data16
out
pop
lods
int
cmp
mov
movsl
lea
inc
pushf
pop
iret
cmp
fldenv
push
jmp
sbb
and
lock
stos
cmpsb
pop
adc
or
jne
jp
insb
mov
imull
jl
lcall
subl
adc
scas
xchg
fsubrs
push
cmc
mov
xor
mov
bound
or
mov
popa
leave
loop
lods
repz
test
cltd
mov
in
loopne
cwtl
mov
lds
aam
dec
lea
and
out
lea
add
popf
jno
xchg
cli
mov
ja
popa
inc
jg
mov
xor
pop
out
jle
push
mov
out
test
cwtl
sbb
es
jns
cwtl
out
imul
sub
leave
repz
xchg
sbb
pop
and
sti
push
lcall
jge
ret
xor
jo
mov
dec
pop
mov
pop
hlt
adc
js
stos
js
fcmovnbe
dec
and
leave
push
dec
push
mov
add
outsb
cmp
pop
pop
and
and
push
mov
jbe
jo
jae,pt
cmp
int3
or
mov
pop
jbe
out
dec
mov
push
dec
cmpsl
dec
mov
cld
into
and
xchg
clc
dec
jmp
xor
repz
js
push
lods
inc
add
mov
push
lods
sub
or
mov
pop
push
popa
mov
add
orb
gs
imulb
decl
mov
lea
dec
sub
cmp
pop
lret
mov
aam
cmp
cltd
push
sbb
cwtl
leave
mov
iret
testb
jge
ror
stos
leave
cmc
mov
movsl
push
loop
or
rcl
cmp
icebp
ret
lret
jns
xor
cs
rclb
cli
jne
jge
mov
nop
enter
in
fs
repz
lret
xlat
cmp
getsec
mov
mov
sub
inc
fwait
out
std
and
pop
sub
inc
fildll
push
jns
mov
pusha
jge
out
xor
jmp
bound
dec
test
add
mov
and
mov
out
enter
adc
pop
addl
pop
int
test
das
lods
xchg
enter
cmc
and
fisttps
enter
pop
pop
mov
jp
stos
je
push
pop
iret
fcomp
js
jmp
push
mov
jp
inc
sbb
xchg
and
cmp
bound
jno
outsb
or
sub
jb
fstl
pop
mov
ljmp
scas
std
or
out
push
pop
jno
sahf
cmpsl
sub
mov
and
adc
cmp
or
fs
mov
sub
out
or
and
push
dec
pop
jnp
cmp
lds
ljmp
outsl
rcr
adc
cmp
pop
decb
xchg
sbb
mov
mov
ja
pushl
push
mov
dec
mov
pop
sbb
insl
addb
mov
fistpll
fldl
out
lds
std
push
loope
jg
xchg
fmull
xor
cli
mov
xchg
lods
insl
ror
jne
push
cmpl
cltd
mov
fs
in
mov
divb
xchg
adc
xchg
fstps
push
fucom
imul
lret
mov
scas
lods
dec
ja
insb
fldcw
adc
sbb
cwtl
lock
insl
xchg
out
jmp
add
fs
ja
or
push
cmc
out
xlat
jp
sub
add
lahf
jno
xchg
addr16
jae
mov
adc
in
jge
pop
bound
call
clc
cmc
add
mov
inc
stos
fsubrl
xor
xor
mov
scas
loopne
insb
mov
push
lock
test
call
daa
sbb
push
jg
aaa
imul
ffree
mov
mov
pop
loope
fwait
jge
push
add
pop
sbb
rcrl
pop
sbb
leave
cld
fidivl
outsb
call
mov
ret
subl
test
inc
in
pop
test
and
pusha
mov
fsub
dec
les
fistps
push
addl
nop
adcb
dec
cli
loop
dec
sbb
mov
je
xchg
stos
sbb
and
outsl
jl
xor
push
lods
push
sub
xor
mov
sub
pushf
fcmovu
push
hlt
pushfw
push
pop
pop
cmp
pushf
jmp
mov
push
enter
mov
sahf
insb
mov
cmp
rorl
xchg
lret
stos
in
out
or
jg
and
and
xlat
jmp
push
mov
xchg
or
faddl
nop
pop
pop
push
int3
aaa
push
js
popa
dec
push
mov
popa
jmp
imul
mov
xor
xor
adc
mov
loope
fsubrp
in
mov
mov
push
pop
je
add
jg
pusha
in
daa
cltd
pop
insl
cmc
cmp
neg
cmp
icebp
arpl
xor
jo
lea
aam
scas
cmpb
adc
mov
lock
loop
cmp
jnp
or
imul
lret
fdivrs
mov
sub
lock
xchg
cmc
cmp
adc
icebp
mov
mov
cmp
cmp
sbbb
dec
add
repz
mov
imul
movsb
idiv
lea
jne
icebp
cwtl
dec
lret
xchg
xor
fcomp
out
lahf
xchg
adc
mov
push
pop
inc
cltd
fcmovu
xchg
jnp
mov
decb
and
test
adc
push
xor
fildll
xchg
xor
and
ret
popl
in
mov
add
pop
int3
ret
scas
rcr
loop
ss
cli
das
in
lods
jae
adc
pop
stc
push
lock
jmp
daa
cmpsb
enter
outsl
inc
fisubrs
mov
cmc
fs
stos
or
stos
mov
xchg
ja
roll
xchg
xchg
mov
sub
push
xchg
pusha
aaa
mov
adc
mov
and
js
inc
jg
into
cmpb
lcall
aad
lahf
inc
idiv
in
mov
mov
rclb
cmpsl
fidivrl
sub
sub
pop
push
sbb
aad
inc
xchg
outsl
adc
sub
shr
inc
cmp
aam
bound
push
and
mov
es
cmp
add
lret
repnz
mov
xchg
lahf
xor
pop
gs
pushf
scas
jl
adc
adc
lods
add
jne
int
sub
sub
add
in
sub
mov
jno
fcmovb
mov
sarl
mov
push
pop
mulw
fisubrl
sub
cmp
xchg
push
inc
ds
sbb
cmpsb
dec
and
jb
insb
push
sti
pop
lret
test
dec
adc
dec
push
mov
repnz
pop
pop
inc
sysexit
mov
jg
or
in
decl
andl
mov
push
xchg
mov
shlb
bound
sahf
inc
xchg
stos
jg
jmp
xchg
jl
mov
ljmp
std
sbb
popa
mov
xchg
push
divl
mov
sbb
push
pop
add
cmc
inc
and
dec
xor
mov
ficompl
in
sub
ficoms
lds
pop
adc
icebp
sub
test
lods
xchg
mov
add
sub
nop
and
lds
call
dec
lret
popa
pop
pop
fdivrs
fwait
movsl
add
pushf
xchg
dec
scas
mov
loope
mov
mov
push
outsb
cmp
enter
sbb
fstps
nop
mov
push
cmp
pop
dec
fxch
push
adc
lds
pop
call
lods
in
sbb
rcr
adc
arpl
mov
stos
xor
mov
or
fidivrl
inc
in
repnz
out
pop
xor
sbb
js
mov
mov
and
pop
or
rcll
int3
sbb
pop
push
jp
adc
cmpsl
xor
push
mov
pop
mov
add
xor
sub
jnp
aas
test
push
push
arpl
jmp
push
arpl
pop
inc
loope
xor
jb
lea
or
xor
ret
scas
aaa
sbb
das
adc
mov
leave
xlat
ret
pop
push
decb
xor
push
add
add
test
es
or
dec
push
push
sbb
mov
sti
inc
xor
push
divb
and
push
mov
dec
in
inc
jne
xchg
mov
cmp
jl
fstl
insb
lret
push
adc
pusha
inc
pop
xchg
lds
lods
scas
jmp
aad
mov
sub
jp
pop
std
pop
cmp
lds
imul
jb
test
adc
push
or
add
sub
pusha
dec
sub
out
inc
scas
jmp
fs
xor
pop
negl
daa
enter
mov
stos
hlt
push
iret
xchg
add
clc
addb
mov
inc
dec
hlt
push
in
adc
lcall
lock
adc
test
and
mov
das
dec
inc
mov
fstpt
pop
lahf
stos
stos
movsb
mov
push
orl
das
mov
and
bound
mov
out
mov
and
out
ja
adc
mov
loope
or
and
lods
nop
xchg
loop
jl
mov
or
lahf
addr16
fstpl
and
sbb
sub
inc
xorl
insl
push
mov
and
rclb
sbb
push
js
cmc
stc
clc
inc
mov
outsl
in
jecxz
popf
adc
push
push
cli
in
jl
stc
test
push
js
jg
hlt
mov
mov
fsubrs
sbb
nop
mov
push
data16
pop
imul
mov
add
xchg
dec
nop
mov
mov
ret
sub
sub
or
mov
xchg
mov
xchg
imull
ss
js
xchg
and
push
jmp
imul
gs
loop
add
mov
cmp
adc
adc
gs
movq
mov
dec
or
push
daa
jno
cmp
outsl
shrl
xchg
cmpb
add
push
sub
stos
sbb
sahf
dec
clc
pushf
jg
adc
adc
cli
cmpsl
sbb
add
jecxz
mov
jle
fmull
mov
mov
lret
es
lret
movb
rol
fadd
mov
inc
js
sub
jb
movsb
or
fs
inc
mov
xchg
push
in
pop
out
call
es
int3
sub
sbb
dec
adc
cltd
push
lods
add
cmp
push
mov
into
das
cmpsl
jb
insb
mov
jbe
xchg
xor
and
popa
aas
js
push
mov
outsl
cltd
ss
gs
adc
and
daa
push
jl
es
int3
pop
lahf
call
movsl
add
and
js
cmp
stos
xor
push
jnp
mov
pop
shll
pop
jg
adc
scas
enter
sti
xor
jmp
mov
popa
inc
mov
sub
add
std
mov
add
sahf
std
pop
in
sub
sub
mov
sahf
ja
push
movsb
in
or
shrl
push
iret
fimuls
sbb
cmp
mov
cmp
ret
sahf
stos
stos
stos
xor
mov
mov
enter
ret
cld
push
scas
lcall
cs
cltd
mov
bound
out
aam
mov
ss
cs
aas
xor
jno
push
jge
shlb
shl
mov
inc
roll
push
xlat
mov
inc
je
pop
pushf
cmp
jo
mov
push
aad
xchg
jno
adc
js
add
or
pop
adc
cmp
mov
cltd
test
rorb
dec
dec
leave
mov
or
sbb
lods
jne
inc
sti
and
cmp
mov
add
push
adc
cs
cmp
cmp
mov
jl
nop
das
xor
jnp
sbb
add
pop
mov
jmp
pop
pop
rcrb
mov
adc
cli
fnstcw
adc
je
pop
push
cmpsb
or
jno
lods
ds
cmp
sti
mov
in
cmc
imul
jecxz
testl
sub
outsl
and
pop
add
lds
inc
aam
cmc
or
outsl
ljmp
jecxz
or
cmc
repnz
lods
cmp
lea
cmc
lahf
outsb
pop
not
out
hlt
movsb
add
dec
in
in
and
or
arpl
xchg
xchg
je
and
ficoms
add
stos
mov
lahf
pushf
movsl
add
cmp
mov
xor
stc
rolb
mov
arpl
jb
mov
push
mov
insl
pop
sti
xchg
pop
fbld
inc
or
or
ret
stc
pop
pop
adc
mov
arpl
inc
dec
xor
cmp
mov
fwait
xchg
das
das
jecxz
dec
ret
cld
stc
dec
or
js
mov
jno
lret
sub
sti
das
cmp
cmp
push
jbe
push
setns
lods
fdivrs
mov
mov
leave
xor
inc
clc
add
lcall
pusha
imul
test
and
dec
jp
xor
dec
xchg
lahf
xor
mov
mov
add
or
add
xor
idivb
jns
mov
xorb
mov
into
xor
lahf
fdiv
scas
and
sbb
pop
inc
sub
in
insb
inc
adc
popf
int
pmovmskb
jne
call
stos
dec
sub
pushf
or
sti
sbb
sbb
mov
lods
xor
and
iret
sarl
jle
pushf
mov
sarb
mov
push
pop
add
mov
dec
enter
incl
jg
sbb
adc
sbb
pop
mov
push
ret
jmp
es
pop
lret
dec
dec
jp
xchg
adc
imul
divl
xchg
lods
mov
idiv
test
aas
jmp
adc
fldl
enter
mull
out
mov
jns
sbb
repz
stc
sti
mov
cltd
mov
fwait
push
fadd
cli
std
addb
pop
and
pusha
cmpsl
mov
call
add
je
or
mov
sbb
inc
add
adc
notl
push
push
xorl
push
andl
call
sbb
movl
movl
mov
mov
inc
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
mov
add
mov
sbb
mov
test
movl
je
movzwl
sub
mov
movl
mov
mov
mov
xor
imul
mov
mov
sub
and
mov
add
xchg
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
mov
jnp
mov
sbb
cmp
pop
mov
pop
jp
mov
call
imul
mov
pop
enter
loopne
out
push
lds
ds
inc
cwtl
and
or
xchg
jmp
shr
sub
adc
or
mov
adc
xchg
lcall
xchg
push
push
fyl2x
cmp
lds
fsts
xchg
and
sarb
xchg
sbb
fs
sbb
in
stos
bound
lret
sub
notb
push
xor
push
lret
pop
ljmp
xlat
fsts
roll
xchg
int
pushf
subl
stc
hlt
sub
jge,pt
les
test
cld
cmp
repnz
xchg
cs
mov
cld
xor
test
jno
aad
out
ss
jmp
fidivs
sbb
push
movsb
in
insl
inc
fsubrl
inc
cmp
arpl
push
lods
setg
dec
lods
dec
add
jnp
dec
xchg
jbe
add
mov
mov
sbb
insl
mov
out
inc
dec
sbb
sub
inc
mov
and
mov
pop
jb
popa
sub
imul
lcall
and
frstor
push
in
insb
popa
sub
cmp
rorb
mov
test
out
inc
cmc
mov
jnp
xchg
sub
rorb
scas
repnz
xor
and
sub
sub
aam
rcrl
push
inc
test
mov
jns
and
jne
or
popf
mov
jge
pop
inc
imul
sbb
cmp
jl
jmp
mov
or
mov
into
outsb
daa
cltd
arpl
jo
sub
push
lcall
sbb
pushf
inc
dec
lret
nop
test
mov
out
mov
push
xchg
sub
xchg
es
sub
mov
jo
in
aaa
cmpl
xchg
xchg
call
adc
in
dec
js
mov
in
shll
aas
jns
sub
out
dec
jns
jg
sahf
mov
sbb
sub
iret
lock
stos
fbstp
pushf
inc
or
aam
lret
adc
dec
push
or
mov
test
and
into
enter
cmp
inc
mov
mov
nop
sub
and
xor
cmp
shll
je
dec
xor
push
cwtl
push
mov
addb
pop
and
mov
dec
mov
js
push
pushf
mov
ljmp
arpl
fadd
cmp
fdiv
add
mov
push
xchg
xlat
js
jge
sub
in
or
pop
pop
sbb
into
sti
pop
rcl
sub
inc
jbe
xchg
fucomi
jb
mov
push
xor
bound
dec
out
cmc
mov
lret
push
loop
add
inc
and
hlt
ss
ror
cmpsb
jg
mov
xchg
xor
mov
push
mov
add
push
cmp
jle
xchg
push
xchg
clc
dec
cwtl
shl
imul
movsb
movsl
cltd
dec
mov
jp
lahf
rorl
ljmp
sbb
cmpsl
mov
or
insl
dec
cmpsb
in
xchg
dec
add
out
stos
fisttpl
icebp
jo
fcoms
ret
scas
es
pop
dec
jbe
sub
gs
or
push
push
stos
test
mov
dec
jns
fcmovbe
test
movsl
lods
iret
inc
std
rcrb
xor
les
push
cmp
call
in
xor
repnz
inc
or
cld
mov
pop
or
inc
pop
adc
lgs
bound
das
stos
pop
xchg
cld
xor
cmp
andb
sub
xchg
cmp
mov
sti
dec
add
jae
add
mov
or
sub
ror
out
cs
dec
movsb
sbbb
and
push
lea
mov
push
inc
mov
sub
sbb
lret
mov
and
jle
dec
inc
mov
pop
mov
pop
mov
imul
lea
xchg
in
fs
mov
scas
jb
sub
ljmp
sbb
jmp
cltd
iret
mov
lea
clc
mov
rcrl
xchg
in
mov
mov
jne
push
sbb
add
ret
popl
fmull
mov
mov
rcrl
push
sub
and
cs
out
sbb
jp
ss
popa
mov
cmpsb
icebp
add
into
imul
pop
dec
rorb
ja
jl
mov
lds
lret
xor
push
ljmp
sub
icebp
pop
pushf
mov
cli
push
mov
pop
push
js
ficoms
mov
aam
movsb
ret
cmp
pop
xlat
andl
push
inc
mov
fs
cmpsb
add
outsb
mov
popf
sbb
addr16
ret
mov
sbb
jge
lret
bswap
mov
call
mov
mov
cmp
push
inc
push
aaa
lret
pusha
dec
pusha
mov
push
or
movsb
aam
adcl
arpl
insl
addb
mov
pop
xchg
jge
mov
mov
lea
jns
std
push
lret
loope
imulb
cmp
xchg
rcl
loope
xor
dec
aad
sahf
dec
imul
and
in
inc
pop
lret
int3
mov
std
mov
push
sub
pop
xchg
xor
pop
adc
sbb
or
nop
and
add
jmp
pusha
aad
mov
pop
pop
xor
aam
in
xchg
mov
mov
or
cmpsl
mov
mov
cmp
mov
repnz
scas
repz
aam
insl
mov
mov
out
xchg
mov
out
dec
in
dec
sub
push
in
loop
xchg
pop
jne
ret
icebp
sub
inc
add
or
xchg
push
fdivs
pop
jb
and
repz
lock
xchg
dec
pop
dec
pushf
andb
mov
add
push
push
ficompl
fisttps
imul
sub
insb
mov
mov
repnz
push
push
jae
and
cmp
or
mov
enter
fwait
mov
push
cli
mov
push
cmp
stc
jecxz
mov
mov
sub
addr16
cltd
xor
js
mov
xor
nop
inc
mov
lds
rolb
hlt
loopne
push
pop
ja
xchg
sbb
mov
movsb
xchg
push
mov
jecxz
sti
in
xchg
push
inc
roll
ljmp
clc
jecxz
xor
lret
int
in
popa
lods
mov
js
mov
cmp
hlt
std
fisttpll
inc
lret
sarb
sbb
repnz
cmp
lahf
popl
cwtl
dec
popf
jp
sbb
sbb
pusha
add
setl
sbb
flds
dec
cmp
mov
in
mov
cld
mov
sbb
test
aaa
es
pusha
jnp
inc
mov
in
stos
ret
jg
or
dec
adc
push
cli
jmp
pop
inc
sub
out
sahf
dec
cli
lods
es
xor
clc
pop
mov
pop
leave
add
push
daa
xchg
pop
test
flds
inc
imul
int
push
jge
pushfw
or
out
jno
push
in
in
pop
les
jo
out
movsb
cmc
adc
jnp
inc
xor
push
lret
sahf
jp
push
push
int3
ds
add
pop
and
ret
xor
pop
push
test
xor
push
lret
cmp
sbb
fistpll
aas
xor
pop
arpl
add
push
and
aas
inc
icebp
cmpb
sahf
bound
add
shlb
jne
cltd
push
cmp
rcr
push
fisttpl
dec
fisttpll
cmp
or
and
push
in
mov
mov
xchg
addr16
dec
dec
jae,pn
ret
ret
sub
xchg
inc
das
sbb
frstor
scas
jns
out
jo
insb
adc
push
ljmp
stos
xchg
nop
push
adc
das
out
push
js
cli
dec
sbb
call
adc
iret
rorl
add
les
data16
fisttpll
movsb
jmp
lahf
cmp
ds
fadds
inc
pop
test
inc
inc
pop
fistps
aad
rcll
stos
pop
fildl
mov
daa
push
sbb
mov
inc
stc
mov
aam
cli
test
mov
push
stos
movhps
wbinvd
add
sub
stc
loopne
jmp
sub
lret
cmp
addr16
insb
cmp
xchg
mov
or
filds
loop
scas
ret
or
outsb
in
movl
stos
mov
pop
enter
in
push
je
out
adc
insl
cmp
adc
ss
jae
cmp
icebp
fsubs
sbb
add
imul
nop
xchg
popl
push
and
adc
shll
es
mov
inc
pushf
sbb
mov
call
mov
push
ja
hlt
pop
jp
xchg
sar
sbb
xor
mov
cmpsl
idivb
mov
fistl
jo
push
nop
cmc
ret
cmp
in
test
bound
jge
iret
insl
jecxz
or
cli
mov
std
mov
inc
mov
jns
xorl
mov
fisttpll
dec
cs
std
loop
jmp
xorb
and
addr16
mov
pop
push
dec
push
testl
push
push
cwtl
mov
stos
pusha
dec
push
xor
rcrb
bound
mov
repz
lahf
cmpsb
int
mov
adc
mov
jns
mov
dec
lcall
shll
inc
cltd
lahf
xchg
aad
aas
out
pushl
fiadds
and
cmpsl
adc
shrl
mov
jg
xor
and
rep
sbb
fadd
in
adc
pop
mov
popf
xor
add
jne
stc
add
and
rol
loop
dec
iret
test
add
add
fidivl
pop
and
clc
les
sbb
vmwrite
xor
addr16
sbb
jne
cmc
cltd
fcomi
jo
lret
add
mov
sti
cmc
pop
dec
out
push
fistpll
and
adc
lods
pop
xor
sbb
push
jo
out
je
mov
fidivrs
test
mov
mov
mov
fisttpl
cmpsl
add
mov
or
cld
jle
and
les
sarb
repz
leave
aas
dec
lret
imull
into
mov
xchg
jge
imul
push
push
xor
xchg
jl
ret
sti
dec
fs
enter
imul
fcompl
jecxz,pn
xlat
inc
dec
mov
adc
cs
sbb
insb
orb
xchg
dec
cmp
icebp
repz
sub
mov
cld
andb
adc
fdivr
cmpsb
sub
push
insb
push
mov
add
mov
cmp
movl
cmp
das
fisttpll
push
add
jne
sahf
ss
xor
pop
icebp
jb
xchg
and
jb
aaa
mov
or
fdivl
lea
xchg
aam
lds
xchg
negl
shlb
push
js
mov
push
inc
mov
sbb
adc
cld
aad
loopne
adc
mov
fwait
mov
push
sbb
ljmp
cs
ds
mov
push
sbb
mov
icebp
std
dec
mov
sahf
xor
and
mov
loop
jbe
dec
outsb
and
es
sub
in
ret
jp
lods
xor
sub
pop
xchg
mov
mov
fcomps
in
xchg
test
sub
mov
int
lahf
lods
test
jne
fwait
enter
jle
cmp
cmc
stc
push
push
mov
ljmp
fstpl
push
xchg
inc
aas
mov
inc
incb
loopne
sti
loope
mov
loopne
lock
sbb
adc
jle,pt
fcos
mov
lock
stos
js
in
pop
imul
ds
and
movl
pop
cmp
mov
pop
outsl
rcrl
adc
jle
es
mov
adc
or
mov
mov
imul
cmp
push
shr
ss
xor
jmp
les
inc
es
mov
jle
jno
add
nop
mov
in
pop
lock
or
add
sbb
inc
imul
es
pop
or
out
sbb
pop
jnp
pop
das
dec
xor
in
je
movsb
cli
shr
ret
mov
jae
insb
push
jns
cmp
jg
cmpsl
sub
repnz
push
xor
mov
push
insb
mov
loop
add
cmpsl
mov
add
mov
stos
movsl
pop
cmp
and
pop
movsb
fdiv
fcmovnb
es
push
mov
xchg
cld
push
or
cmpsl
add
pop
push
aas
in
xchg
arpl
pop
cmp
or
sub
sahf
scas
arpl
pop
and
ds
lret
sbb
lret
flds
inc
add
loope
mov
out
cli
pop
cmp
inc
popf
xchg
inc
xor
jmp
adc
bound
inc
mov
sysexit
je
in
int
inc
loop
mov
or
in
add
inc
or
or
iret
pop
shlb
mov
hlt
dec
js
rol
cmpl
outsb
fidivs
mov
mov
push
jno
fucomi
add
clc
jp
xchg
in
or
popf
dec
rol
andl
jo
leave
nop
clc
push
push
pop
scas
add
push
pop
repz
or
sbb
mov
mov
lds
idivb
ss
mov
out
jmp
push
out
ds
arpl
stos
pop
ja
cmp
xor
xor
jne
mov
lcall
adcl
dec
in
int3
shrl
icebp
xchg
mov
jno
push
xchg
add
cmp
fcomps
into
jle
jo
pop
repnz
sub
mov
movsb
int
add
scas
js
mov
hlt
js
dec
dec
xor
in
clc
hlt
jae
xlat
sar
aas
xor
rcrb
mov
aas
adc
xchg
sub
jnp
mov
jle
insl
mov
fs
iret
sbb
pusha
sub
pop
fldenv
fistl
sbb
sbb
clc
cli
cmp
pop
dec
shrb
xchg
adcb
mul
and
push
lahf
vcomiss
bound
aad
stc
fcompl
xor
xchg
jbe
mov
insl
sbb
inc
repnz
push
mov
scas
mov
lcall
lret
cmpsb
adc
dec
pop
outsl
nop
addr16
push
sub
xchg
lcall
ja
jmp
dec
lahf
cli
ror
in
lcall
pop
out
xorb
cmc
nop
or
fucomp
ds
or
inc
push
pop
xchg
dec
push
mov
ljmp
loopne
push
popl
adc
loope
js
outsl
sbb
add
ljmp
and
inc
enter
push
aas
fnsave
imul
and
xchg
and
inc
pop
mov
iret
or
jns
xor
scas
cmp
outsl
add
aad
mov
imul
dec
daa
dec
sub
movsl
and
ja
push
mov
jne
xor
rcrl
push
lock
xchg
xlat
ror
gs
insl
clc
lds
and
push
dec
outsb
inc
shl
mov
fs
mov
cmp
ss
in
sub
jg
jnp
inc
xchg
les
pop
inc
rcrl
pop
dec
test
cmpsb
mov
ret
jecxz
or
stos
jge
adcb
push
mov
jmp
frstor
jo
out
dec
inc
lcall
mov
add
lea
mov
rolb
sbb
xor
adc
ja
int
cmp
and
pusha
rcl
cmp
cmp
push
dec
sbb
movsb
scas
jp
clc
inc
loope
push
subb
push
sarl
jle
orl
fwait
out
int3
loopne
cld
inc
stos
idivl
xor
test
jge
out
stos
lock
push
fadds
adc
out
cmp
push
stos
lahf
and
dec
sbb
inc
shlb
and
mov
loop
push
and
xor
xor
das
adc
pop
mov
add
sahf
lods
test
sub
inc
repnz
pop
shll
cli
cmp
cltd
into
ret
mov
mov
imul
ja
cltd
clc
call
sbb
jle
add
mov
test
xor
clc
xchg
dec
test
inc
repz
test
fmul
pop
pop
stos
inc
inc
out
lock
mov
inc
push
mov
push
mov
mov
out
daa
xchg
and
std
mov
std
push
pop
fwait
mov
lret
gs
shll
dec
xchg
push
or
lea
pusha
cmp
icebp
mov
inc
dec
or
mov
enter
imul
sbb
call
mov
out
inc
nop
ja
imul
imul
aad
sub
scas
cld
fsts
cmp
lret
enter
daa
dec
xchg
pop
jbe
inc
fwait
mov
ss
scas
fstpt
cs
xchg
push
les
in
mov
test
push
or
mov
lods
dec
xor
jmp
lds
or
or
push
lret
sahf
mov
pop
sub
xchg
out
sub
aaa
jo
add
scas
test
inc
popf
push
ds
mov
popa
les
clc
movsb
aaa
jno
push
popa
cli
mov
les
shr
sbb
stos
popf
sbb
test
dec
and
jmp
jb
adc
mov
fcom
out
push
jmp
mov
xchg
jp
pop
out
into
mov
xchg
lods
imul
test
call
addl
mov
sbb
pushf
in
push
ljmp
mov
cltd
mov
scas
mov
lds
push
sti
xchg
orl
les
movsl
daa
and
fsubrl
arpl
jns
pop
stc
sbb
jl
movsl
sub
bound
test
into
mov
adc
int
pop
mov
dec
icebp
push
cmc
sub
mov
pop
and
xor
xlat
inc
movsb
jle
out
and
addr16
roll
pop
rolb
cmpsl
or
fisubrl
es
gs
xor
push
lahf
pop
ja
mov
sbb
push
push
in
in
lock
in
lods
and
stos
adc
fdivs
stc
out
bound
fcmove
pop
out
or
xlat
lret
sub
push
jecxz
jo
xchg
xchg
scas
xchg
mov
imul
fisubrs
into
sbb
int
pusha
dec
cmpsl
rorb
iret
and
xor
pop
adc
xchg
mov
pop
hlt
mov
mov
lock
arpl
fwait
mov
jecxz
out
insb
push
cmp
inc
cmc
call
xor
push
gs
lock
push
ss
jns
adc
mov
fcmove
cltd
rolb
cmp
pop
lahf
jg
mov
call
or
sbbb
xchg
mov
jle
adc
je
adc
scas
add
movsb
leave
sbb
mov
int3
xor
movsl
mov
popa
stc
sbb
fisttps
inc
mov
xchg
add
adcl
add
add
sub
adc
push
push
lret
xchg
frstor
ficompl
sbb
fstp
fstpt
jecxz
imul
cmpl
mov
outsb
sub
add
cmp
jbe
aad
sub
mov
cmc
dec
lahf
pop
mov
mov
jp
iret
push
andl
stos
mov
ljmp
xlat
in
daa
push
ds
mov
xchg
or
pop
dec
mov
add
push
xlat
pushf
loop
sub
jae
icebp
clc
or
mov
push
cmp
push
mov
mov
jl
mov
shrl
jl
fldcw
jmp
lret
hlt
mov
xchg
cmpsb
jg
mov
pop
mov
sbb
popa
mov
cwtl
jb
jl
cmp
imul
dec
andl
or
mov
cmpl
lcall
cmp
mov
lods
stos
add
repnz
test
mov
sbb
shll
jg
mov
pushf
adc
pop
mov
mov
cwtl
popf
or
flds
dec
and
addr16
hlt
and
jp
push
into
cmp
add
push
out
add
daa
pop
sbb
and
js
lods
mov
inc
add
lods
sub
push
cmp
rcrb
xchg
jb
pop
jecxz
int3
xor
add
in
mov
pop
pmaddwd
sub
in
pop
out
push
xlat
aas
icebp
shl
mov
sbb
ljmp
nop
cld
sbb
sbb
cmp
shlb
lret
inc
out
popa
sbb
movsb
sbb
pop
lds
out
ljmp
outsl
pop
sbb
repnz
jae
jnp
and
and
jecxz
ja
and
pop
in
rcll
sahf
fs
xlat
adc
cmp
cmpsb
and
loop
inc
add
xchg
push
or
push
sbb
in
inc
jne
ljmp
add
jnp
mov
sbbl
test
int3
mov
push
inc
sbb
dec
pusha
scas
out
inc
xchg
cmp
and
or
xchg
scas
xchg
stos
xchg
orb
stc
mov
aad
dec
cmp
sub
pop
pop
cmp
shlb
out
in
scas
mov
sub
leave
push
and
xchg
insb
aam
dec
cmc
xchg
and
in
xlat
inc
lcall
cmpsb
cld
aam
cmpsb
jne
dec
sbb
jp
clc
or
sbb
dec
movsb
addb
mov
ss
push
mov
sbb
lds
mov
sub
adc
mov
add
enter
mov
es
ficompl
push
jo
push
jae
jecxz
xchg
add
cmpsb
dec
sbb
pop
adc
scas
movsb
movzbl
mov
push
or
cwtl
inc
push
mov
popa
jb
cmpsb
cld
dec
or
sbb
iret
adc
jecxz
and
pop
scas
cmp
inc
lahf
mov
packssdw
sti
outsl
lods
andb
mov
jae
sub
js
int3
clc
pop
sbb
push
stc
cmpsl
test
jp
movsb
icebp
add
dec
leave
pushl
xchg
adc
into
dec
jno
repz
js
leave
dec
xchg
mov
push
sbbl
dec
scas
pushf
and
les
cwtl
cmp
mov
mov
pop
ret
shl
lods
mov
movsb
mov
fldcw
int3
push
cmpsb
mov
lods
cmp
je
loope
icebp
test
jmp
xor
out
push
push
jae
enter
arpl
or
sarl
mov
insb
push
push
mov
push
pop
movsl
cwtl
and
scas
pop
cmp
bound
test
mov
call
add
jo,pt
daa
imulb
scas
cmp
mov
push
stos
cvtdq2ps
sbb
sub
or
sbb
f2xm1
add
xchg
das
xor
pop
jle
xchg
push
sbb
pop
sbb
sbb
testl
jns
bound
dec
dec
jp
xor
inc
xor
fwait
mov
inc
mov
cwtl
add
pop
adc
mov
outsl
aam
rcrb
bound
dec
pop
jle
xor
push
push
add
out
movsl
movsl
mov
jns
ret
jge
sti
das
xlat
into
dec
add
or
jnp
xor
sbb
ss
jo
pop
pop
outsb
ret
outsb
xor
sbb
lcall
push
aad
and
mov
xchg
subl
mov
or
or
mov
ds
insb
adc
lcall
mov
mov
cmpsb
jno
sub
xor
mov
push
and
add
in
loope
and
or
sub
ficoms
push
mov
int
mov
popa
pop
and
and
divps
cwtl
pop
repz
push
cmc
aaa
fidivs
mov
enter
in
lods
mov
out
push
enter
test
sub
ja
cltd
mov
mov
cmp
cmp
add
jne
cmpsb
js
out
rcll
inc
xor
jg
js
pop
cmpsl
rcrl
and
mov
movsb
out
insl
xchg
jmp
jno
mov
push
or
pushf
push
push
stc
push
xchg
nop
cmp
mov
divl
xor
mov
adc
jbe
daa
jnp
lds
add
sub
mov
inc
pop
inc
push
xchg
inc
gs
shll
jnp
and
push
clc
out
add
fistps
jle
pop
jns
jecxz
inc
mov
fcoms
test
jle
pop
cmp
jmp
mov
jns
mov
and
cmp
test
cs
insl
pop
scas
stos
popf
cmp
cmp
repz
mov
inc
ja
or
sub
clc
push
aaa
inc
shlb
push
add
adc
comiss
or
inc
inc
sub
loop
test
or
cmp
pusha
repz
sub
lock
and
pop
pop
mov
inc
inc
pop
call
hlt
push
fcoms
or
or
ret
xor
xchg
dec
xchg
inc
shl
inc
jns
cli
jae
cwtl
jle
push
movsb
or
mov
mov
int
aas
lret
pushf
call
and
in
mov
xchg
mov
push
sti
mov
xor
in
xchg
xor
ficoms
outsl
lret
mov
loop
aam
sub
adc
push
fimull
cmp
in
push
imul
rcr
fidivs
mov
inc
xchg
sub
sbb
jo
jmp
iret
push
fdivl
mov
lret
adc
jl
out
out
xchg
lods
stc
pusha
stos
pop
mov
push
gs
dec
xchg
inc
dec
popf
xor
push
dec
push
jo
sub
sahf
xchg
loopne
mov
mov
jmp
jecxz
or
ret
mov
cs
mov
push
scas
daa
pop
rolb
inc
push
imul
mov
leave
mov
mov
mov
and
push
add
pop
pop
ret
jnp
cmp
fbstp
ds
fwait
or
add
out
lcall
lretw
gs
xchg
and
lods
sbb
std
fisubrl
mov
pop
div
out
incl
inc
cwtl
mov
dec
imul
ffree
xorl
ret
js
daa
mov
lea
ds
movsl
mov
xor
fdivl
xchg
xchg
jo
cltd
push
sub
xor
aad
rclb
mov
imul
push
push
rcr
add
shrl
mov
mov
lods
mov
dec
into
mov
mov
lods
push
mov
call
aad
adc
mov
dec
movsl
rcrl
pop
nop
xor
jne
jbe
add
jle
imul
call
or
gs
and
testb
or
jnp
lods
fstpt
imul
pop
jne,pn
repnz
mov
sub
lret
inc
adc
pop
push
xchg
push
fisubl
jecxz
outsb
sahf
pop
repnz
xlat
mov
mov
push
and
cmpsb
sti
jo
jg
xchg
cwtl
mov
ja
ror
push
ret
cld
mov
ret
sbb
out
and
jb
shr
jmp
cmpb
outsl
and
push
xchg
scas
call
mov
int
sub
test
int
dec
adc
cmp
test
fstpl
dec
shrl
cmc
mulb
imul
repnz
addr16
daa
dec
push
sbb
jo
jecxz
repz
mov
aas
cmpsb
cmp
test
jl
sub
inc
rcrb
pop
cmp
nop
push
adc
mov
mov
lea
pushf
fistl
dec
out
jg
stc
adcb
dec
jb
popa
push
adc
mov
outsl
in
dec
push
xor
ds
test
inc
test
jecxz
mov
sahf
ret
test
adc
lea
insb
xchg
pusha
dec
ret
adc
push
adc
mov
andb
mov
sbb
pop
mov
push
cltd
ret
clc
dec
pusha
ret
movsb
test
and
mov
int3
xchg
inc
ljmp
add
cmp
xor
aas
lock
cmpl
lock
shll
push
repnz
add
nop
jno
push
mov
xchg
lock
inc
cs
imul
xchg
rcl
int3
jbe
shll
cltd
sub
inc
testl
pop
dec
mov
mov
fcmovbe
fimuls
addr16
iret
push
sub
adc
loope
sahf
psubsw
enter
int
pop
je
sbb
imul
repz
sub
mov
or
lret
push
lods
insl
adc
inc
fisubrs
mov
mov
jns
pop
lea
nop
fidivl
addb
xor
repz
cmp
push
lcall
fcompl
cmp
and
int
dec
out
mov
and
call
loope
inc
add
or
lret
xchg
ja
and
adc
lock
je
repz
sahf
les
cmp
sbb
stc
test
xchg
adc
scas
mov
mov
mov
loope
pop
loop
fildl
mov
int
cmc
jbe
mov
out
sbb
dec
dec
lea
xchg
inc
jns
repnz
inc
pop
dec
psraw
orb
dec
xchg
test
fadd
sarb
dec
mov
push
mov
dec
lods
sbb
ljmp
pop
adc
or
push
add
or
out
stc
shl
add
movsb
test
insl
cmp
sahf
xor
gs
and
hlt
ret
xchg
cmp
clc
dec
ljmp
lret
ds
iret
lret
data16
rcl
dec
stos
fsubl
adcb
idivb
sub
and
jl
shrb
test
int3
jg
hlt
aaa
fiadds
xor
repnz
mov
dec
push
cmp
gs
je
push
xor
pop
enter
mov
jecxz
inc
ret
repnz
xchg
xorl
xlat
sub
or
pushf
lcall
daa
jbe
imul
insl
and
clc
cmc
mov
jecxz
cld
xchg
mov
rorb
inc
je
cs
sbb
popf
jl
test
sub
test
mov
pop
loopne
adc
loopne
xor
nop
mov
sar
jmp
push
test
outsb
xchg
xor
jnp
dec
jp
call
pop
icebp
fdivp
ret
cmp
sub
enter
lods
cs
inc
pop
and
mov
inc
sbbb
lea
push
es
jbe
mov
imul
or
or
push
outsb
pop
and
lret
int3
fs
movb
ds
cmp
jns
ljmp
test
cli
sbb
mov
ret
jle
xchg
sbb
rclb
xor
jb
mov
push
shll
pop
cmp
fiaddl
enter
mov
add
add
add
add
xor
cmpl
jne
push
call
cmpl
jb
sbb
mov
mov
xor
xor
incl
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
xor
mov
or
mov
xor
add
mov
decl
mov
xor
add
sbb
mov
sub
lea
xor
xorl
xor
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
xor
sbbl
add
movl
cmp
movl
jne
pushl
adcl
call
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
xor
sbb
mov
xorl
add
movl
cmp
je
addl
pushl
pushl
orl
call
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
and
mov
and
mov
mov
decl
xor
add
movl
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
sbb
push
mov
adc
mov
push
mov
adc
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
movl
mov
adc
jmp
gs
jne
jle
dec
out
shlb
pop
jp
and
xchg
push
lahf
mov
adc
jle
daa
mov
inc
into
mov
adc
cmp
lds
icebp
push
lods
in
inc
xchg
popa
xor
cwtl
fisttpll
xor
mov
and
xor
sbb
ss
adc
push
sub
or
pop
lgs
xor
or
jge
dec
xchg
push
std
or
clc
jne
movsb
pop
icebp
pop
xor
cld
mov
fldcw
and
xor
add
lods
push
ljmp
outsb
sub
xor
outsl
mov
fnstenv
insl
xchg
xchg
mov
dec
mov
andb
stos
mov
and
lahf
cmp
ret
iret
mov
dec
mov
movsl
popf
pushf
sub
cmp
add
mov
int
movsl
cmp
sahf
notl
pop
andl
mov
jns
sti
xchg
lods
pop
in
loop
insl
rcll
sub
push
adc
stos
xchg
jnp
dec
push
fnsave
pusha
cmpsb
enter
hlt
cmp
cwtl
xchg
icebp
inc
mov
je
cld
push
stos
xor
sbb
es
fdivrs
jbe
addb
add
push
arpl
xorl
jmp
lea
adc
mov
test
mov
pop
sbb
imul
cmp
fbld
pop
gs
nop
sbb
xor
outsb
popa
decl
fisubrs
xchg
in
push
push
je
cli
or
test
push
inc
jo
out
das
or
mov
jb
pop
dec
jb
mov
jnp
ret
subl
adc
sbb
mov
clc
sub
lcall
mov
popf
adc
call
jne
test
ret
adc
leave
mov
popa
cltd
test
add
mov
dec
lret
cmpsl
addr16
jl
stc
sub
shll
jae
mov
xchg
xchg
ss
js
sub
ja
fisttpl
data16
ljmp
xchg
aam
or
js
in
addr16
mov
sahf
mov
xor
fldl
push
cltd
pop
das
fwait
jle
sub
leave
popf
loope
scas
in
push
adc
pusha
iret
jns
lret
adc
sub
mov
xlat
imul
in
loope
stc
ja
leave
mov
jb
mov
shrl
cwtl
lahf
push
inc
jg
pop
or
pushf
movl
fsts
lock
out
adc
sbb
lahf
or
pop
mov
sub
sbb
add
mov
out
push
shlb
mov
bound
orl
nop
push
mov
adc
pop
dec
jmp
nop
mov
call
mov
bound
aad
dec
mov
add
mov
lods
add
flds
cmpsb
mov
insb
dec
ljmp
fdivrp
push
popa
or
enter
jo
cltd
cmpl
in
ret
out
test
cmc
jle
stc
repz
sub
sub
dec
daa
hlt
xchg
mov
xchg
js
mov
insb
cmp
sete
ja
faddp
mov
xchg
aaa
mov
xlat
cltd
jl
js
iret
inc
ljmp
divb
pop
push
stos
aas
pop
inc
js
or
scas
leave
push
lock
inc
rorl
fiaddl
jbe
int3
xor
lods
cmpsl
pop
mov
jp
mov
push
div
lock
test
sti
or
sub
clc
mov
ror
incw
movsb
imul
jmp
jbe
or
lret
add
push
add
hlt
xor
mov
mov
in
or
cld
ret
sub
icebp
fldln2
and
ret
fsubl
hlt
dec
mov
push
and
out
daa
mov
mov
pusha
push
repnz
lods
je
jge
sub
ret
sbb
pop
jno
add
xor
lods
pop
jns
inc
not
and
faddl
call
sub
arpl
adc
adc
add
mov
repnz
fdiv
scas
mov
in
into
sbb
mov
push
popa
or
xor
or
push
inc
bound
insl
cld
cmp
inc
mov
cmp
xor
lret
push
outsl
mov
sbb
mov
xchg
imul
pop
and
push
ljmp
cmc
lahf
aaa
rorb
jne
loop
fmuls
sbb
cmp
add
movsl
push
aam
sub
les
test
cld
jmp
test
outsl
push
rcl
es
and
push
add
sbb
call
sti
jge
push
xorb
jge
roll
mov
insb
xchg
aaa
lret
adc
adc
into
repz
addb
fwait
pop
mov
mov
mov
or
dec
mov
icebp
cmp
frstor
inc
push
pop
push
ds
inc
cmp
stos
out
int
and
mov
rcll
dec
popf
add
xor
lods
in
out
shll
jle
mov
lods
or
icebp
add
je
enter
jge
fimull
test
xchg
test
sbb
push
jbe
repnz
push
jo
sub
push
mov
jb
jne
cmp
lods
daa
dec
cmpsl
lods
adc
sbb
add
in
sbb
lret
cmpsb
push
fwait
cmpsb
mov
mov
neg
adcl
mov
test
test
xchg
jns
in
inc
fadds
fwait
sbb
ficoml
rolb
cmpsl
roll
pop
movsl
mov
jb
shrl
psraw
jecxz
or
cmp
lahf
jl
int
sub
iret
pushw
push
cmpsl
xchg
out
cmp
rclb
sbb
adc
pop
test
adc
adc
xor
xor
fisubs
insb
adc
loope
xor
fistpll
call
loope
push
stc
inc
fwait
and
pushf
cmpsl
xchg
cmpsb
call
pop
clc
dec
call
cltd
movsl
sub
push
in
cli
sub
cld
cltd
add
sub
pop
popf
cld
push
lds
div
and
sub
xor
shrl
adc
jns
push
cwtl
pop
add
mov
pusha
push
ficomps
stc
int3
sarl
push
sub
mov
gs
js
dec
or
out
arpl
add
xchg
insb
rcll
pop
mov
lods
push
xchg
ds
std
movsl
orl
orl
addl
xchg
pop
loope
cmp
mov
push
repz
dec
fyl2xp1
dec
mov
push
nop
aad
add
dec
sub
ret
or
push
mov
mov
jl
cmp
in
pop
test
mov
xlat
jo
test
fimuls
pop
and
cli
inc
repz
sahf
xor
mov
push
and
add
dec
rcll
add
enter
mov
out
add
out
jle
adc
adc
dec
aaa
pop
popa
stc
adc
inc
lea
pushf
xor
xchg
bound
test
sbb
outsl
cmpb
inc
std
movsl
add
fimuls
dec
add
add
add
test
cltd
jno
arpl
int
lret
popa
in
push
pop
fs
repz
stc
lret
xchg
push
lods
dec
cmp
jle
bound
das
bound
fcmovbe
jbe
xchg
mov
and
xchg
in
ss
stos
xor
dec
xchg
cld
sub
decb
mov
push
and
cmp
les
sbb
mov
push
fsubp
xor
or
jl
jg
dec
mov
icebp
outsb
jae
in
repnz
shl
inc
push
jmp
movl
int
popa
and
dec
out
lods
pop
notl
jns
pop
adc
pushf
fbld
cmpsl
sbb
mov
push
cs
mov
cwtl
sahf
dec
or
int
repnz
dec
cltd
sbb
mov
push
add
add
sbb
aaa
push
push
fsubrl
out
xchg
add
inc
aam
cmp
xchg
insb
mov
cli
rorl
push
or
addb
rsm
sub
adc
shrl
dec
inc
add
cmpsl
in
leave
or
sbb
gs
mov
add
outsb
inc
ud0
and
xor
add
mov
adc
pop
fadd
sbb
hlt
inc
popa
xor
fwait
cmpsl
nop
iret
or
sbb
ljmp
lcall
or
imul
aas
mov
mov
jbe
shll
adc
stc
ljmp
mov
inc
scas
aad
pusha
mov
cmp
cmpsb
and
mov
cmp
or
repz
call
push
cmp
xchg
or
mov
or
data16
lods
ds
xchg
lret
test
inc
stc
or
xchg
mov
mov
aas
pop
jo
sub
hlt
mov
xchg
jnp
aad
push
ret
js
stos
jno
sub
scas
inc
js
or
push
test
or
lods
stos
mov
fcompl
xchg
and
or
jmp
jbe
pop
gs
or
fwait
sub
xchg
lret
out
shl
enter
xchg
xor
and
xchg
or
jg
leave
sbb
inc
js
cmp
out
sbb
data16
in
and
or
xchg
test
js
fdivs
sbb
fisubrl
jbe
jl
lcall
jecxz
stc
hlt
cmp
rorl
fcmovnu
jno
add
outsl
sbb
lcall
push
lret
test
fcom
or
pop
jne
scas
sub
sub
test
pop
push
fsubrl
push
mov
mov
jmp
push
test
adc
jbe
push
xchg
ss
cmpb
sahf
dec
push
clc
jge
ftst
mov
sbb
or
xchg
test
or
jne
test
push
imul
jmp
sub
pop
mov
xor
mov
jae
adc
inc
pop
inc
pop
iret
stos
adc
xchg
pusha
cmp
mov
bound
cmp
fisubrs
jge
js
ror
sub
sar
push
fs
mov
mov
sti
xor
dec
mov
and
loopne
push
mov
jnp
adc
sub
push
xchg
pop
mov
test
or
popf
mov
imul
mov
xor
push
cmpsl
xor
mov
movl
cltd
pop
push
xchg
cmp
pop
iret
lds
inc
mov
jg
fnstenv
sub
pusha
cli
push
ret
mov
out
in
gs
dec
clc
mov
ja
call
lea
push
pop
mov
jb
fsubrp
mov
adc
mov
inc
clc
jo
or
lods
outsl
xchg
leave
mov
adc
sar
dec
sbb
fisubs
cmpsb
mov
fnstenv
movsb
in
aaa
jns
xchg
sub
sbb
sub
mov
leave
rcll
pop
add
dec
test
mov
jns
xchg
loopne
fcoml
xchg
sub
xchg
mov
pop
pop
xchg
sbb
jne
adc
sbb
fisubl
xor
bound
pop
call
lahf
pop
jle
add
mov
sbb
test
xchg
push
sub
add
filds
fcomp
jl
fcoml
in
cmp
or
cmp
mov
sub
in
out
inc
out
scas
lret
push
ror
pusha
out
popl
mov
jg
jbe
sbb
cmp
scas
jp
rcll
adc
subl
jge
rolb
xor
jb
dec
push
jno
int3
pop
imul
xchg
outsb
popf
testb
call
lock
pop
xor
dec
lea
mov
fsts
sarb
rorb
jo
adc
xchg
jnp
xor
shl
mov
adc
sbb
push
fs
inc
outsl
mov
in
repnz
js
gs
pop
and
dec
ja
fcmovnbe
push
aas
notb
xlat
mov
in
mov
jb
push
sar
or
out
add
xor
mov
xchg
push
fstpt
aam
pop
sbbb
push
and
pop
jmp
inc
les
mov
xchg
jle
pushf
fldt
in
das
inc
sub
rcll
fwait
imull
fcmovne
fistl
test
sahf
and
adc
outsl
daa
sub
dec
sahf
jbe
cwtl
fistl
fisubl
rcrb
pusha
ja
out
das
adc
mov
rclb
cmp
dec
inc
and
scas
push
cltd
jecxz
stc
popa
xor
jns
xchg
mov
test
dec
sti
cwtl
xchg
cmp
icebp
arpl
pop
mov
aas
sub
and
pop
push
les
das
fcmovbe
push
inc
repz
aam
std
push
ds
sub
xchg
movl
sub
xor
clc
cmc
stos
add
sahf
fldcw
ss
fucomp
xchg
lahf
ficoms
adc
inc
imul
xchg
xor
and
lret
aam
cmp
jecxz
adc
sbb
mov
push
imul
enter
push
loope
pop
fwait
sub
mov
pop
mov
lret
cmp
loopne
push
jecxz
mov
cmp
sbb
xor
inc
int3
jae
jnp
sub
bound
sbb
aam
sbb
std
sarl
xor
sbb
adc
or
shlb
jmp
xchg
lock
pop
push
sbb
test
pop
jae
push
inc
sbb
insb
xor
sbb
out
popf
pop
xchg
popa
loopne
movb
inc
adc
es
notl
xchg
mov
lods
pop
mov
xor
pushf
push
mov
adc
xchg
es
pop
dec
pop
mov
into
push
inc
or
cs
insb
mov
fldenvs
notb
add
mov
xchg
xchg
or
lods
insb
mov
fsin
fcmovnbe
push
inc
movsl
push
das
jp
ja,pn
sbb
mov
xchg
mov
or
mov
xchg
push
sbb
fsubrs
stos
sbb
mov
imul
fsubrl
cmp
push
pop
mov
fdivl
pop
adc
scas
mov
popa
add
add
or
push
mov
adcb
ret
lahf
add
pop
xlat
icebp
xor
iret
sbb
pop
jp
enter
rol
ret
shr
xor
xchg
mov
sarb
jne
jo
mov
std
pop
jle
out
lahf
addr16
mov
adc
aam
fwait
pop
add
and
add
ss
in
adc
xor
pop
out
cmp
adc
test
xchg
and
jbe
mov
shll
ljmp
dec
mov
cmp
xor
dec
push
ss
mov
push
lcall
je
fs
in
scas
xchg
mov
dec
addr16
rorl
stc
in
cmpb
jno
jb
sar
test
mov
add
nop
ret
addr16
dec
jb
inc
adc
leave
pop
mov
pusha
popf
or
enter
mov
and
xchg
xorps
or
mov
lcall
into
mov
sub
sbb
inc
and
add
and
jns
arpl
mov
icebp
pop
xchg
xchg
in
test
push
xchg
subl
or
jbe
add
xchg
addr16
rclb
popa
xchg
ret
dec
add
xor
hlt
mov
rcr
out
pop
ds
sbb
aad
scas
sbb
adc
cmp
xchg
test
adc
pushf
mov
stos
hlt
cmpsw
pop
push
cwtl
andb
pusha
repz
packuswb
loop
jns
xchg
xchg
cmp
adc
xchg
pop
and
mov
xchg
inc
roll
leave
mov
jmp
cmpsl
int
fsubrs
fs
cltd
in
popf
push
jno
jne
sbb
nop
lock
jle
enter
loop
loopne
xor
call
dec
dec
leave
daa
pop
xchg
jns
loop
movb
xchg
mov
xchg
add
insl
shlb
lds
sti
sub
add
pusha
pusha
outsl
push
or
mov
mov
cmp
pop
dec
and
jne
cwtl
xchg
int
or
fisubrl
cmp
push
xchg
xchg
jl
pop
pop
push
cltd
adc
xor
mov
inc
lret
mov
mov
fwait
adc
pop
or
mov
int
jno
adc
pusha
or
lds
mov
imul
jmp
mov
push
in
out
inc
inc
or
inc
outsl
xorl
popa
mov
cld
adc
cmp
inc
ja
add
cmp
js
push
movsl
inc
pop
aaa
push
into
mov
cmc
inc
mov
lret
testl
into
push
ret
shrb
movsl
and
sar
jp
aad
pop
scas
jae
xchg
pop
mov
ret
lea
jp
cmp
or
cmpsb
sarb
mov
cli
jnp
jg
lret
clc
pop
mov
out
or
rolb
xlat
jno
std
mov
xchg
cltd
iret
fbld
pushf
pop
pop
out
int3
adc
add
int3
pop
fstp
sub
adc
imull
ljmp
mov
xor
xlat
aad
push
push
cmp
insb
mov
dec
cmpsl
pop
sub
add
ja
ret
mov
jb
ret
inc
faddp
clc
aad
loope
sahf
fwait
jne
xlat
jmp
test
mov
push
push
jp
pop
add
push
out
decb
scas
sub
sbb
daa
mov
fimull
cmpl
out
lods
push
mov
arpl
add
dec
cmp
mov
and
jb
loope
not
jb
rorb
and
mov
jno
popf
aad
fidivrl
das
mov
push
adc
movsl
js
loope
mov
lret
jmp
daa
icebp
pop
inc
and
out
sbb
push
test
ficompl
push
mov
inc
dec
add
mov
imul
jl
push
mov
sti
xchg
xchg
jmp
jb
add
mov
mov
or
aam
popf
test
int
mov
idivb
movsl
rcl
pop
sbb
aaa
xor
and
cltd
outsl
lahf
dec
push
jg
push
dec
mov
insl
out
and
and
sbb
test
clc
pop
xchg
lret
and
lock
in
and
dec
mov
push
imul
mov
ret
dec
ss
pusha
and
popa
stc
mov
xor
push
scas
mov
inc
jo
mov
jecxz
dec
mov
mov
push
lret
call
stos
mull
mov
pop
adc
adc
mull
and
sti
xchg
push
and
push
mov
loop
rclb
lcall
xchg
xor
fxam
dec
add
add
fsubrl
cmp
push
mov
push
mov
xchg
flds
sbb
js
push
xor
test
or
mov
out
shrl
adc
ljmp
and
insb
pop
push
sub
pop
adc
ljmp
xor
xchg
jne
and
cs
and
sbb
mov
bound
push
inc
mov
pop
das
out
daa
ret
ret
lea
adc
fnsave
push
in
test
pop
in
jg
sub
dec
int
in
in
and
inc
push
xchg
lock
mov
pop
xlat
insb
adc
push
shll
pop
mov
fadds
cwtl
push
pop
cs
jge
pop
sub
inc
test
subb
cwtl
sbbl
mov
mov
sbb
pusha
popa
in
or
cmp
inc
add
and
in
sbb
test
mov
repnz
xor
xor
daa
jle
sahf
imul
aas
cmc
push
pop
pop
dec
pop
jb
mov
dec
in
mov
out
outsb
pop
dec
fsubs
mov
pop
adc
out
cli
jb
movsb
insb
lds
xor
adc
int
xchg
movsl
or
cmp
push
addr16
imul
rorl
inc
xchg
add
stos
sub
push
pop
mov
adc
fcmovb
cmp
les
cmpsl
into
inc
and
mov
jecxz
outsl
xor
sub
adc
dec
fidivs
inc
xor
cmc
lods
push
and
dec
fldl
xchg
sbb
hlt
xchg
and
xor
cmp
mov
push
push
pop
ja
mov
xor
pop
sarb
mov
lret
push
add
call
stc
ret
ja
arpl
push
adc
and
sahf
push
adc
stc
lret
fcomi
sti
sahf
ficoml
or
test
push
dec
mov
mov
pop
outsl
daa
iret
cwtl
mov
fs
mov
pop
push
push
aam
push
jle
inc
aad
outsb
sub
adc
lods
jnp
xor
mov
ja
sti
out
fnsave
je
mov
mov
push
leave
nop
push
je
pop
int
in
mov
ret
sbb
sbb
fstl
sbb
adc
pusha
jbe
add
xchg
jnp
popf
push
adc
int3
inc
and
fdivl
fstl
aas
movsl
nop
lds
jnp
fwait
in
pop
testb
sahf
into
and
mov
divl
mov
push
jnp
mov
out
jne
and
daa
stos
fdivl
imul
ds
roll
out
sbb
scas
fucomip
mov
pop
mov
sub
xchg
mov
fistl
lea
cmp
jns
sub
add
call
jl
sbb
out
test
shlb
and
mov
push
ret
mov
mov
mov
inc
fwait
pop
mov
jns
pop
mov
imulb
jb
add
mov
cmpsb
pop
xor
loope
arpl
cmp
cmp
out
push
sbb
repz
xor
lret
clc
imul
cmpb
ret
test
test
or
dec
scas
mov
cmp
mov
dec
out
es
fildll
rol
xor
std
aam
mov
popf
leave
pop
in
push
mov
es
jge
shlb
imulb
and
or
add
fcmovnu
add
test
sub
scas
sub
out
cltd
stos
icebp
sbb
pop
call
testb
jns
pop
inc
push
inc
mov
out
imul
xor
cltd
cmp
loop
neg
xchg
sub
mov
mov
xchg
loop
lcall
lock
daa
cmpb
mov
pop
pop
sub
sbb
imul
and
mov
pop
xlat
or
lret
test
dec
or
jecxz
mov
inc
dec
mov
leave
xor
pushf
xchg
jns
adc
loope
pop
sbb
test
imul
pop
movsb
or
sti
into
dec
pop
mov
adcl
jl
stos
lea
mov
or
cmc
ds
jmp
jbe
aad
cmp
xchg
daa
inc
mov
sub
lcall
or
je
push
ret
out
pushf
or
push
push
and
pop
jno
push
imul
pop
enter
sub
push
jnp
pop
dec
adc
push
dec
add
xchg
iret
push
rcl
loope
pop
mov
sarb
mov
sub
pop
cs
rcl
mov
inc
jnp
repz
jle
inc
subb
xor
cmp
mov
int
testl
pushf
mov
pop
daa
pop
shl
jb
lods
dec
rcrb
in
xor
dec
and
imul
push
push
je
xchg
inc
les
pop
jmp
pop
mov
pop
lock
dec
mov
dec
pusha
inc
adcb
fdivrp
sahf
mov
lds
mov
inc
test
jl
cmpsb
or
mov
xor
cltd
lret
sbb
rorb
add
dec
mov
mov
mov
insl
int3
fucomi
mov
push
push
mov
sub
data16
outsb
hlt
mov
inc
pop
fwait
xchg
ja
xlat
cwtl
inc
inc
std
icebp
orl
decl
lahf
aam
and
fnstsw
andl
pushl
pop
push
or
jmp
scas
ljmp
movsb
pop
dec
in
pop
addl
mov
dec
fiadds
push
cmpsl
mov
xor
int
cmovne
dec
rcrl
and
and
adc
fstps
out
call
xlat
pop
iret
mov
adc
push
ds
inc
inc
ds
mov
dec
jp
adc
inc
das
movsb
aam
stc
add
adc
aad
add
in
adc
mov
push
dec
push
xor
gs
mov
sub
pop
cmp
xor
add
addr16
add
add
test
int3
push
push
mov
rcrl
fcomip
test
dec
jb
shlb
push
push
adcl
mov
pop
js
sti
sbb
mov
adc
ret
inc
jp
xchg
jb
imul
sti
pushf
mov
movsb
mov
inc
loop
dec
nop
daa
fstps
shlb
push
arpl
fisubs
test
aas
shrl
cmp
lret
pop
dec
mov
data16
je
test
add
decb
insb
mov
out
xor
push
pop
dec
mov
pusha
and
cmp
and
xorl
push
mov
adc
inc
int3
pop
cmpsl
adc
fwait
push
arpl
mov
fwait
or
xchg
mov
dec
test
in
nop
into
int3
mov
inc
popl
mov
dec
or
cmc
repz
adc
js
mov
jo
leave
fildll
push
push
push
jl
pop
xchg
inc
sbb
cmp
je
icebp
or
loopne
jp
jecxz
mov
subl
adc
popa
and
test
outsb
cmp
dec
mov
fwait
or
xchg
lds
xchg
cmp
xor
sub
mov
test
out
lahf
lods
or
add
ss
jmp
add
imul
push
movsl
ss
fidivs
dec
adc
adcb
ret
fld
mov
lret
jne
iret
int
xchg
cwtl
out
cwtl
push
aam
push
es
jo
and
jg
xchg
jnp
mov
lret
add
test
gs
xor
fidivrs
mov
push
push
sarb
lods
adc
js
or
xchg
in
mov
mov
or
shlb
mov
cld
inc
mov
jbe
clc
xchg
xor
and
lods
out
add
mov
jbe
sbb
out
and
ja
mov
inc
xlat
and
data16
mov
push
dec
idivb
out
cmp
sub
dec
inc
jns
cmp
xchg
sarb
lcall
push
fimuls
and
xchg
icebp
scas
mov
mov
cmp
mov
adc
adc
push
adcl
lods
adc
jo
mov
imul
lea
out
jnp
inc
jne
sub
xchg
jne
mov
jge
addr16
call
test
sub
sub
pop
cmc
stc
push
sbb
pop
add
loop
add
imul
lock
leave
scas
shl
in
data16
out
xchg
mov
adc
jmp
lret
sub
ds
inc
dec
jg
sub
imul
xor
mov
or
ss
adc
loop
jne
lock
inc
popf
les
into
clc
es
mov
sbb
push
cld
pop
leave
hlt
fadd
push
xor
lods
enter
adc
jge
inc
ja
fldenv
mov
cmp
daa
repz
stos
popa
mov
jae
bound
jnp
sub
cli
add
inc
fnstcw
xchg
sbb
xor
aad
lcall
ret
nop
imul
cmp
test
fs
insl
dec
ljmp
push
pop
nop
je
mov
mov
push
pop
mov
and
mov
adc
push
xchg
xchg
add
gs
mov
lret
push
xchg
jb
fidivl
int
lods
and
add
or
test
add
pop
xchg
leave
mov
call
and
xchg
insl
jle
lods
clc
jmp
and
cmp
sub
sub
add
sbb
mov
jmp
fwait
pusha
adc
cmpsb
push
pop
ds
mov
push
add
pop
inc
add
not
jp
cwtl
pop
adc
pop
cmpb
inc
ja
or
imul
mov
jl
cltd
cmp
inc
pop
dec
jbe
cltd
add
icebp
stos
outsb
sbb
mov
rclb
sub
cmp
test
outsb
fildll
sti
in
jp
lock
stos
pop
xchg
or
into
xor
fidivl
repnz
incl
fs
ss
movq
adc
jo
push
fisttpll
int3
sahf
movsl
jbe
xor
xlat
repz
xlat
leave
mov
rcll
mov
or
sub
ljmp
loopne
adc
int3
ja
cmp
mov
cwtl
dec
iret
mov
pop
bound
outsb
pop
popa
xchg
push
int3
pop
leave
das
mov
or
shl
pushf
repz
insl
fwait
cmp
jle
imul
test
lahf
sbb
xchg
sarb
jo
aas
sub
mov
popf
add
dec
movl
inc
dec
adc
mov
ja
testl
test
stos
mov
shlb
mov
andl
leave
inc
imul
push
fwait
jecxz
int3
addr16
pop
arpl
es
sub
cmp
cmpb
adc
scas
jno
mov
xbegin
testl
mov
sub
dec
repz
xor
jle
popa
xchg
jmp
sub
cmp
cmc
lahf
pop
enter
jge
jbe
mov
push
sbb
call
cmp
xchg
mov
repnz
cmpsb
bnd
add
hlt
fwait
jg
push
jnp
arpl
add
sub
and
jecxz
add
imul
jns
stos
popf
push
mov
in
push
pop
inc
add
mov
int
mov
and
ror
pop
arpl
sbb
mov
mov
jae
jns
lds
mov
aaa
add
mulb
mov
xchg
push
popa
mov
jb
aam
mov
ret
shr
push
jl
push
xchg
ja
jae
push
pop
or
insb
mov
fidivl
inc
test
fptan
popa
outsb
cld
xchg
mov
in
test
jae
das
sbb
pop
mov
mov
aas
in
scas
sahf
andb
inc
mov
leave
fisttpl
andl
mov
stos
inc
mov
jmp
cmpsl
fnstsw
lret
mov
std
jno
push
jp
in
sub
xor
xlat
fidivl
cmp
sub
xor
dec
in
movl
sbb
mov
or
mov
mov
sbb
sub
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
and
mov
mov
orl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
mov
sub
mov
sub
add
mov
orl
sub
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
adc
lea
and
mov
movzbl
sub
mov
push
mov
movzbl
sbb
mov
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
mov
mov
sbb
mov
xor
addl
add
negl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
mov
add
sbbl
push
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzwl
add
mov
adc
mov
sub
xor
mov
subl
jmp
fildll
push
mov
mov
pop
sub
outsl
lods
out
add
adc
jp
hlt
mull
clc
in
add
lods
xor
stc
fldl
imul
xchg
add
hlt
or
push
mov
in
push
mov
pop
lea
push
xchg
leave
cmp
sbb
dec
out
mov
test
pusha
adc
outsb
int
sbbl
outsl
add
adc
imul
sub
push
dec
push
test
inc
sub
lods
inc
push
popl
xor
push
push
js
xchg
pop
cmp
sbb
pop
int3
jmp
sub
pop
outsl
mov
jg
ljmp
iret
popa
jp
jo
push
stos
jne
popf
xor
xor
xlat
test
in
js
divl
ljmp
sub
lret
inc
jbe
adc
pushf
loop
stc
mov
pop
push
or
pop
cmpsl
and
fists
add
xchg
adc
je
fsubl
test
adc
xchg
dec
jno
xlat
xchg
xchg
mov
push
stos
inc
cmp
adc
jae
xchg
push
fld
out
mov
scas
pop
stos
ret
ja
mov
dec
addl
ja
mov
mov
ret
add
mov
xchg
lret
movsl
dec
sti
pop
scas
fistpll
je
pusha
inc
mov
sub
xchg
adc
push
xorb
test
xchg
out
scas
mov
subb
stos
mov
loopne
jge
jle
out
and
adc
insl
loopne
sbb
loope
cmc
adc
es
mov
lret
cmp
shr
xor
out
fwait
sti
cmp
fildl
push
adc
clc
fcmovne
aam
jno
inc
adc
mov
xchg
ret
in
inc
std
mov
lods
inc
mov
je
dec
inc
les
mull
je
cmp
pop
sub
enter
or
mov
cmp
imul
mov
jne
mov
jae
stc
pop
jp
leave
aas
mov
rcrb
sub
clts
je
fstps
std
iret
pop
add
sub
cmovge
imul
xor
mov
mov
js
inc
push
add
xchg
enter
sbb
shll
std
dec
fimull
xor
jge
addr16
lods
jp
insb
dec
repz
in
xchg
imul
dec
xlat
cmp
sbb
and
pop
cmpsb
xlat
lods
sub
fwait
icebp
aas
xchg
jbe
arpl
ja
daa
and
fistpl
xor
lock
and
push
sbb
insb
jne
push
movsl
and
mov
aas
outsb
sub
nop
jle
push
add
push
xchg
mov
push
out
icebp
pusha
sub
adc
dec
or
ljmp
dec
ss
fistl
lea
xchg
stos
add
inc
std
outsb
lahf
imul
add
push
fdivrl
push
xchg
fcompl
rorb
in
mov
cmp
jmp
test
mov
inc
outsl
ds
mov
sbb
lock
sub
clc
sub
xor
dec
dec
push
icebp
push
rcrl
ret
repz
adc
jno
std
mov
clc
mov
insl
push
fcom
mov
shr
sbb
add
fimull
dec
in
imull
loopne
arpl
ljmp
cli
cmp
shl
push
sub
inc
push
mov
dec
sahf
push
mov
jno
cmc
lds
sarb
push
cs
adc
xor
pop
or
xchg
or
fdivs
inc
add
push
int3
mov
popf
add
sbb
add
inc
dec
or
cmp
dec
xchg
mov
sbb
add
xchg
imull
or
push
enter
je
loop
dec
sbb
in
cmp
mov
mov
scas
jns
add
mov
mov
mov
cs
push
jae
push
cmc
lret
sub
arpl
pop
push
lds
jbe
stos
jns
in
xchg
pop
aas
xor
pop
fucomp
imulb
push
push
sbb
int
add
xchg
xlat
xchg
ret
aas
mov
pop
es
xchg
xlat
data16
cmp
jge
xor
fisttps
adc
gs
add
out
adc
aaa
repnz
or
repnz
testl
dec
jbe
out
mov
nop
scas
fs
dec
fistps
aam
inc
cmp
insl
xlat
fsubrs
int
fisttps
seto
int3
pushf
shrl
pop
sbb
push
sahf
mov
mov
jnp
lret
cmpsl
loopne
add
push
and
stc
pop
outsb
jne
shrl
mov
test
ret
sbb
imul
pop
add
jo
inc
lea
sbb
dec
xchg
dec
loop
int
ret
xchg
jg
xchg
add
scas
outsl
jge
add
jne
sbb
fistl
pop
es
or
cmp
and
mov
repz
test
and
mov
inc
xchg
lret
push
pop
or
in
hlt
fdiv
sbb
scas
jge
jecxz
xchg
or
shl
dec
jl
sub
mov
iret
and
and
pop
push
int3
shrb
sahf
sbb
fadds
lods
cwtl
add
cli
sub
push
loopne
stos
jmp
mov
xchg
insb
movsl
jb
pop
scas
test
mov
rcrl
ja
cmp
cld
xor
and
stos
inc
mov
insb
outsl
jae
aad
jl
shrb
jnp
dec
std
adc
push
inc
sbb
cmp
cmovae
sbb
mov
and
sub
adc
sbb
jbe
sbbb
test
lret
out
and
jno
das
bound
pop
das
icebp
jecxz
dec
cwtl
test
and
sbbb
sbb
and
and
cmpsl
popf
push
pop
cmp
mov
jne
dec
stc
fldl
mov
daa
aam
out
pop
dec
adc
sti
adc
dec
icebp
outsw
ret
mov
xor
jns
xlat
mov
pop
lds
out
push
and
js
mov
jbe
popf
xor
shll
out
aad
mov
loopne
ss
mov
int
mulps
mov
mov
ret
adc
inc
mov
jnp
mov
push
and
inc
sbb
inc
decb
adc
mov
xchg
stos
mov
shll
cli
out
mov
inc
je
sbb
sub
inc
lcall
mov
loope
or
bndldx
out
push
mov
int
jge
fwait
xor
paddd
scas
aam
shlb
fwait
push
ljmp
mov
call
cmp
lcall
in
pushf
adcb
cwtl
sbb
xchg
inc
pop
mov
pop
pop
sbb
das
in
push
in
xor
sahf
cmc
push
addr16
js
sub
and
js
fcmovne
cmp
inc
aaa
icebp
js
ret
dec
sub
popf
lret
mov
sub
cmp
jp
pop
ror
aaa
jno
jmp
sub
gs
mov
insl
inc
je
mov
pushf
inc
and
ss
push
mov
xchg
mov
test
add
out
bound
mov
imul
cmp
jnp
aam
fwait
outsb
aad
cmpl
sub
popa
ret
cmp
cmp
cmp
int
jle
and
fistpll
out
decl
fwait
jae
test
gs
push
sub
fndisi(8087
xchg
cmp
jge
or
or
insb
das
in
aam
jns
cli
testl
clc
and
repz
xchg
or
xchg
subb
lret
push
cwtl
jnp
jg,pt
repz
push
hlt
mov
lds
sub
cmp
or
inc
xchg
sbb
clc
sub
pop
fdivs
jmp
sarl
pop
adc
sbb
xor
addr16
ljmp
lock
mov
mov
pop
xchg
movsl
loope
cmpsl
mov
xchg
cmp
adc
subl
bound
in
jp
pop
jo
inc
fisttps
lods
push
sti
inc
testb
mov
outsb
je
add
cld
xchg
shl
inc
push
mov
pop
aaa
mul
out
iret
dec
cmpsb
add
repz
pop
popf
and
movsb
adc
jne
or
scas
lretw
and
push
bound
jbe
inc
in
or
outsb
lret
pushf
jmp
pusha
rcr
loop
fs
idivl
mov
cmp
rcl
add
and
bound
or
jmp
inc
push
stc
scas
cmp
pop
sub
ror
pop
js
xor
mov
xchg
xor
hlt
sub
fisubl
daa
add
dec
cltd
push
mov
imul
push
icebp
xchg
xchg
pop
mov
sub
dec
int
jle
xor
ret
sub
or
inc
sub
stc
cmp
xlat
mov
xchg
rcrb
push
bound
cltd
mov
dec
fwait
adc
cmp
cmc
sub
fwait
adcl
std
jmp
rorb
sbb
imulb
or
rcl
popa
shlb
xor
aad
cmpsl
inc
push
push
cmpsl
mov
mov
mov
ss
jmp
xchg
mov
cmp
sahf
xchg
cmp
je
pop
leave
fwait
cmp
inc
and
xchg
pop
shrb
popa
test
rolb
imul
lods
jle
xchg
sbb
loop
inc
jecxz
popf
jecxz
js
lea
fistps
lock
push
mov
test
popl
mov
jnp
in
mov
xchg
push
push
sti
dec
mov
mov
mov
pop
orl
insl
xchg
and
shl
and
adc
data16
cmp
cltd
aas
sub
cld
pop
lds
cmp
mov
push
leave
imul
and
popf
roll
pop
movsb
xor
adc
insl
daa
cmp
repz
sub
xor
xchg
pop
dec
into
pop
push
and
cli
ficoml
aaa
fstps
hlt
stos
bound
js
fidivs
push
mov
out
xchg
mov
or
push
jl
ds
ja
xchg
adc
or
push
dec
stos
cld
enter
jmp
bnd
repnz
adc
sarl
add
test
xor
mov
lret
sbb
jno
cmpsb
sbb
call
jmp
inc
pop
stos
sub
fdivs
mov
int3
dec
jae
mov
out
push
jo
sub
adc
jbe
repnz
sbb
dec
xchg
mov
add
in
sbb
js
xchg
out
jge
popa
or
xchg
lods
and
dec
test
stc
insl
and
pop
rcrb
cmp
or
pop
lea
icebp
mov
jp
and
pop
gs
iret
cmp
mov
inc
sbb
push
mov
ror
pop
mov
pop
repz
add
push
cs
fmull
xchg
test
mov
les
jns
mov
dec
sub
lret
outsb
mov
mov
aas
hlt
shl
inc
gs
lock
fcompl
jp
adc
lods
add
pushf
pop
pushl
mov
cmp
pop
sbb
std
xchg
push
cmp
imul
dec
in
pop
jl
and
aas
xchg
imul
cli
shll
jmp
mov
movsb
jno
xchg
lods
sbb
mov
dec
clc
imul
mov
mov
fsubrs
test
jp
dec
testb
lret
pop
jl
sbb
mov
sub
frstor
les
jp
insb
movsl
je
or
push
xor
sub
pop
xor
fildl
cmpsb
add
sahf
push
shl
jmp
fsubl
repnz
adcl
sbb
adc
jb
xchg
push
sub
ljmp
nopl
inc
out
pop
in
imul
xorb
and
add
mov
jge
daa
andps
xlat
add
cmpsl
lret
je
mov
or
adc
jno
sbb
mov
cltd
mov
arpl
repz
outsb
xchg
sbb
inc
xchg
xor
and
add
mov
cmc
pop
or
mov
fbstp
clc
push
iret
cmp
push
cmc
out
pop
data16
repz
and
mov
cs
xchg
roll
iret
or
push
inc
adc
iret
pop
jg
mov
xchg
add
mov
cmp
xchg
pushf
xchg
push
mov
mov
xchg
sbb
fsubrl
loop
out
sbb
test
imul
std
cmpsl
sbb
sub
pusha
std
add
or
mov
jg
icebp
test
add
das
sbb
jno
nop
add
lcall
pop
lock
mov
xchg
ljmp
aas
ss
jg
in
mov
xor
and
mov
mov
stos
jp
popa
and
and
jns
xchg
aam
and
jbe
es
mov
jp
cmp
or
jb
test
mov
cmp
xchg
aad
mov
jae
add
pushf
push
sbb
ljmp
cmp
mov
in
mov
loop
jnp
adc
lret
mov
push
nop
inc
sbb
addr16
loopne
lock
xor
push
cmc
inc
popa
dec
jl
fiaddl
aam
and
xorb
cmp
fimull
loop
shlb
shr
sbb
js
inc
clc
test
lds
insl
sarb
xchg
mov
or
call
std
pop
loop
enter
fisubrs
add
add
pop
lds
push
pop
pop
xor
mov
and
inc
aas
inc
lretw
inc
cltd
js
jo
out
hlt
sahf
inc
dec
adc
adc
faddl
xlat
rol
jne
mov
xchg
lock
fcmovnu
cmp
fcmovnbe
loopne
xchg
add
nop
iret
mull
stos
sub
push
or
movsb
sbb
pop
out
nop
fdiv
cld
and
movsl
mov
mov
lret
pop
and
and
enter
movsb
fiaddl
push
xchg
fmull
test
jns
or
stos
lahf
shrl
stc
jmp
out
test
add
fs
xor
push
push
ljmp
push
aaa
sbb
es
adc
mov
fadds
push
and
addr16
movsb
aas
inc
add
fcmovb
clc
aad
mov
add
cld
xor
test
and
fisubl
cmp
scas
sti
mov
out
push
mov
xlat
rcrl
hlt
into
test
call
mov
xchg
popa
lcall
pop
repnz
fs
hlt
xor
sbb
int3
test
arpl
in
mov
xor
movsl
sub
inc
imul
pop
pop
sbb
fstl
push
lods
mov
movsb
dec
cmp
dec
and
enter
and
dec
fdivs
int
aam
ljmp
rorl
jb
jns
mov
int3
nop
and
xchg
sub
mov
sti
mov
push
imul
sbb
ljmp
enter
inc
nop
dec
pop
rorl
jbe
mov
cmp
mov
push
or
pop
add
pop
xor
jb
movsl
pop
lods
inc
sahf
lret
mov
fmul
push
adc
icebp
dec
test
jae
sub
inc
push
pop
xchg
pusha
ret
push
ret
mov
out
and
cmp
bound
adc
push
jl
xchg
jg
dec
aaa
cmp
stos
cmp
ret
daa
fisubrs
jg,pt
push
inc
xchg
fdivs
and
prefetch
or
call
ret
cmp
pop
aaa
cmp
push
sub
ret
jecxz
fsubrs
sbb
and
jge
sub
scas
aaa
inc
sbb
jbe
or
cli
test
mov
mov
in
fcmovbe
xor
test
cmp
aad
adc
test
push
add
fwait
fs
out
jle
fisubs
int3
call
fidivl
pushf
jo
and
in
movsl
aad
mov
jg
or
andb
jmp
dec
sub
xor
cmpsb
into
stc
xchg
dec
fwait
in
in
cltd
and
div
js
sub
test
fstpt
xor
dec
dec
out
pop
mov
mov
pop
fcoml
mov
gs
jmp
cmp
ss
xor
rol
in
mov
xchg
mov
xchg
jl
mov
mov
orl
mov
insb
lds
xor
sub
jmp
and
or
xchg
mov
imul
mov
scas
popa
data16
add
cmpl
and
mov
nop
jp
aad
and
mov
inc
sbb
movsb
inc
add
dec
cmp
fs
daa
pop
adc
xor
rcl
rcll
fbstp
ljmp
and
inc
subb
insb
push
mov
psubsb
arpl
mov
mov
dec
int3
mov
cmpb
aam
push
das
shlb
cmc
std
adc
jbe
pop
jbe
cmp
sbb
sbb
sub
aaa
notb
repz
arpl
mov
iret
fisttpl
xchg
test
dec
cli
call
pushf
fiadds
add
sbb
mov
andl
icebp
movsl
pop
scas
stc
mov
mov
ret
adc
push
std
mov
mov
movsl
sahf
repnz
into
in
dec
pop
orb
scas
cld
call
lods
xchg
mov
inc
shll
outsl
repz
mov
jns
mov
aam
adcl
push
test
jne,pn
into
out
imul
lock
bound
inc
ds
xchg
sub
jl
insb
xchg
mov
or
repz
hlt
mov
sub
or
aam
mov
cltd
adc
test
insb
ret
sub
xor
sbb
xor
push
rorl
pop
and
arpl
sub
push
pushf
scas
add
sub
imul
mov
cmp
jnp
pop
xor
jnp
sti
cld
insb
imul
inc
cmp
ss
or
jno
clc
loope
shll
xor
lret
aas
fstpt
sub
sbb
mov
xlat
insl
dec
movb
cmpsl
pop
movsl
mov
add
es
fsubl
outsl
sbb
repz
mov
out
sahf
push
out
cld
jno
aad
pushf
rcll
jo
add
imul
dec
fldenv
adc
fisubs
mov
push
mov
ss
jge
pop
aas
or
adc
push
lds
inc
xchg
imul
pop
std
or
adc
sbb
mov
fldcw
xor
adc
nop
sbb
mov
clc
sbb
loope
aad
loop
jno
mov
xchg
jnp
mov
outsb
int3
cmp
pushf
mov
scas
int
pusha
cwtl
aam
mov
xchg
ljmp
lcall
xchg
adc
adc
lcall
sahf
test
imul
daa
jns
mov
push
fsubp
repz
sarb
fwait
lods
sub
divb
ja
cmpsb
cli
mov
jle
cmpsl
out
neg
cs
les
jae
out
pop
jae
cltd
inc
andb
cmp
cld
pop
mov
or
in
dec
inc
fwait
dec
sbb
or
sbb
mov
mov
adc
pop
jl
xchg
je
fnsave
lahf
in
jae
int
sub
or
leave
scas
repz
mov
aaa
pop
pop
xchg
loop
push
push
lods
loope
xchg
pop
cmp
jmp
cmpsl
push
lods
sbb
xchg
out
js
pop
and
cmp
adc
pop
imul
dec
mov
outsb
and
scas
in
adc
mov
dec
jmp
sbb
jmp
jno
jno
jne
jle
nop
fisubs
stc
mov
sbb
or
inc
popf
dec
dec
push
push
lods
lea
dec
pop
cmpsb
js
fs
mov
pop
mov
jl
scas
in
mov
cmp
xor
and
enter
rcrl
sbb
adc
scas
or
outsb
dec
or
jg
adc
lahf
pop
xchg
and
xchg
mov
pop
lret
daa
stc
dec
jl
xchg
sbb
test
pop
loope
xor
pop
adc
push
mov
cmp
sub
data16
pop
mov
sub
mov
inc
xor
mov
ret
add
xchg
cwtl
mov
jnp
pop
sub
loope
mov
or
inc
clc
jmp
loopne
stc
jnp
add
outsb
and
add
lcall
jo
outsb
xor
and
es
fstpl
push
bnd
pushf
pop
clc
aas
push
mov
mov
insb
pop
repz
pop
insb
les
xor
xchg
fcmovu
dec
adc
lock
cld
push
fldenv
push
xlat
mov
adc
rorb
push
fwait
mov
clc
sub
push
into
cli
inc
cmp
pusha
inc
es
xor
pop
imul
pop
cltd
lcall
jl
inc
int3
std
and
call
adcl
fistpl
jge
dec
push
in
or
mov
pop
in
rclb
inc
inc
imul
int3
pop
sahf
sbb
das
add
cwtl
outsl
add
push
mov
or
je
fiadds
mov
fiaddl
inc
cmp
dec
ror
imul
dec
inc
iret
xor
aad
outsl
cmpsb
mov
cwtl
shlb
jno
inc
cmp
adc
mov
std
sahf
js
jp
push
cmp
sub
mov
xor
unpcklps
test
mov
je
mov
mov
js
mov
add
cwtl
ss
mov
sub
call
fildl
rcrb
orb
push
sub
pushl
aad
and
or
out
roll
dec
mov
mull
push
or
in
pop
in
sub
leave
insb
or
jae
insl
std
scas
ds
xchg
pop
insl
pop
addl
push
xchg
mov
mov
fdiv
ret
outsb
pop
in
sub
mov
mov
cmp
lcall
xchg
jecxz
cmc
adc
jns
popf
inc
imul
test
cltd
adc
push
xchg
add
ffree
adc
call
dec
cmpsb
sub
rol
daa
cmpb
push
and
mov
loopne
fsubr
arpl
dec
inc
mov
pop
push
xchg
shll
movsb
imul
xchg
into
push
ja
pop
stc
int3
push
mov
test
insb
test
inc
icebp
int
and
divps
pop
mov
pop
or
out
lds
push
aam
icebp
jmp
sti
fdivs
xor
or
jns
pusha
movsl
dec
fcoms
bound
sbb
sbb
sbb
dec
xchg
mov
call
sbb
addr16
orb
jg
loop
ljmp
jo
inc
sub
inc
or
push
out
cmp
daa
cmp
mov
mov
dec
je
xor
cld
push
and
aam
xor
jnp
mov
daa
dec
dec
imul
out
mov
lods
cmp
enter
jp
test
scas
nop
and
and
notl
aad
cmp
iret
adc
repz
sub
add
scas
xorb
ret
sbb
xor
push
enter
bound
movsb
jle
add
stc
popa
jbe
shlb
add
fidivs
sub
imul
lret
cmp
or
dec
imul
scas
shlb
mov
mov
xor
clc
in
and
rcll
imul
jns
jmp
dec
movsl
lret
lcall
xchg
stc
fnsave
cmp
shll
add
cltd
xchg
popa
mov
unpcklps
mov
outsb
inc
push
lahf
lahf
cltd
imul
add
leave
xor
cs
add
adc
insb
jae
or
aam
xor
mov
pop
dec
push
jg
and
call
adc
push
popa
in
scas
adc
push
cmp
rcr
push
mov
mov
jbe
mov
cltd
xor
mov
fsubrs
sbb
mov
cli
jae
outsl
in
shlb
movsl
imul
adc
mov
pop
aam
mov
stos
test
insl
push
pop
jp
cmp
push
daa
lock
cmpsb
fistpl
sbb
fsubr
mov
jg
outsb
dec
test
imull
jo
xchg
pop
pushf
outsl
sar
out
mov
arpl
or
ljmp
or
idivb
xchg
lahf
sub
fsubs
xchg
lods
xchg
mov
mov
push
lods
mov
push
mov
xchg
cli
dec
loop
int
push
pop
pop
out
pop
das
mov
pop
or
int3
das
lods
xor
jno
pusha
daa
jno
stos
sub
arpl
data16
outsl
xorl
lcall
mov
cltd
sbbb
stos
cltd
mov
out
inc
jb
cld
mov
out
dec
sbb
lcall
xchg
sbb
ss
sti
xor
inc
sbb
adc
scas
loop
mov
popa
and
xchg
in
fxch
repnz
push
adc
xchg
ljmp
je
ja
mov
mov
xchg
xor
push
lods
addr16
adc
loopne
jo
add
sub
iret
out
aaa
loopne
aam
std
stos
js
call
mov
jg
jg
inc
pop
inc
repnz
jne
cmp
pop
jle
or
push
in
sub
out
xor
mov
es
jbe
jnp
mov
xchg
mov
xor
out
xor
stc
or
mov
pop
cli
jp
adc
mov
or
inc
mov
mov
outsl
add
or
jo
jle
js
test
test
mov
cmpb
inc
sbb
mov
daa
fidivrs
int
xchg
gs
pushf
jecxz
arpl
repnz
fists
mov
mov
and
bound
fidivrl
sbb
push
lcall
dec
jns
rcll
bound
mov
pop
mov
sbb
cmp
les
cmp
and
jp
insb
ss
aad
cmp
pusha
std
lods
adc
or
out
pop
inc
jns
mov
lods
xchg
fs
lret
push
push
es
movsl
add
mov
add
xor
in
sub
arpl
mov
xchg
lea
mov
push
out
scas
cmp
xchg
les
push
sbb
daa
repz
mov
out
adc
out
sub
test
adc
dec
mov
insb
in
push
and
push
loop
mov
adc
lods
test
adc
shlb
movsl
xchg
mov
xchg
lcall
sbb
jo
stc
dec
mov
sub
lret
icebp
sahf
arpl
jnp
dec
and
cld
lods
jbe
das
add
mov
sbb
mov
sub
leave
add
sbb
jp
mov
sub
xor
push
push
mov
bnd
jp
push
pop
lcall
mov
and
inc
pop
pop
nop
pop
dec
inc
loopne
inc
cmp
push
insl
fcmovnbe
pop
int
in
push
nop
fwait
mov
cmp
sub
mov
fwait
push
xchg
repnz
test
out
mov
fcoms
dec
push
push
lds
fs
into
das
pop
fnsave
lods
dec
and
pop
xchg
data16
xor
or
dec
out
sub
mov
cmp
addr16
sbb
adc
std
xchg
fs
push
adc
leave
fidivrs
lock
cmpsl
add
outsb
int3
cs
mov
xor
jo,pn
loop
cltd
pop
and
test
pop
movsb
mov
aam
into
jg
xlat
add
addr16
loopne
pushf
jns
mov
inc
popf
aaa
test
adc
nop
ljmp
roll
push
jecxz
pop
xlat
mov
pop
loopne
ljmp
xor
icebp
dec
mov
loop
movl
loop
push
int
xchg
push
enter
rclb
xor
jge
mov
inc
xor
cmp
cmp
in
outsl
inc
push
mov
cwtl
or
lret
mov
mov
adc
popa
cmc
in
xor
jno
jne
and
das
fldt
push
or
sbb
pop
mov
aam
push
in
add
movsl
mov
out
ljmp
pop
icebp
orl
push
inc
pop
fmull
cltd
mov
sbb
and
loope
jecxz
test
jb
inc
bnd
cmp
data16
mov
push
mov
mov
insb
xchg
pop
jp
mov
and
mov
aaa
inc
into
fdivs
push
fdivrl
shlb
jecxz
cli
lret
pop
jge
enter
sub
jae
add
xor
or
adc
adc
mov
inc
cmp
mov
mov
pop
xor
mov
xor
rolb
mov
jb
adc
mov
adc
mov
xlat
shrl
xor
push
in
imul
into
and
dec
push
xchg
pop
push
mov
xchg
cmp
stc
adc
mov
fxch
movsl
sbb
mov
or
test
fiaddl
arpl
std
xor
lahf
xchg
and
popa
lret
outsb
loop
xor
mov
mov
sahf
aaa
sahf
jbe
jp
mov
test
std
xor
scas
dec
data16
xchg
cmpsl
pop
inc
jl
adc
call
rorb
rorl
cmp
jmp
fisttpl
xchg
dec
int3
loop
push
jg
xchg
push
popa
outsb
and
stos
loopne
fimull
mov
pop
popf
insb
push
pop
test
sub
push
push
mov
push
arpl
sbb
mov
cmp
pop
pushf
inc
push
es
sbb
sbb
jge
lock
or
nop
pop
adc
imul
dec
fwait
in
loope
cmp
sahf
dec
sbb
js
ljmp
xor
jecxz
adcb
shl
js
mov
leave
jb
fcmovu
arpl
into
jl
push
or
lahf
mov
lret
sar
je
cwtl
test
cmp
jmp
inc
or
loope
lock
xor
or
pop
popf
incl
lahf
jge
mov
or
mov
sub
lods
mov
or
push
sub
sub
add
xor
or
and
jg
dec
mov
cmpsl
neg
mov
xlat
in
into
test
mov
aad
ja
mov
add
insb
xor
movl
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
call
xor
xor
dec
mov
jmp
adcl
add
movzwl
xor
mov
mov
mov
xor
mov
or
mov
orl
xor
movl
add
movl
imul
dec
mov
andl
xor
adcl
add
cmp
mov
mov
push
movl
je
addl
mov
add
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
sub
mov
neg
mov
subl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
jmp
rorl
xchg
mov
pop
jmp
dec
and
jp
adc
jp
xor
adc
cld
inc
jg
mov
or
sahf
add
jae
mov
pop
cwtl
dec
shll
and
mov
add
fs
adcl
fidivl
outsl
jns
pop
mov
loope
jp
cmp
pop
sbb
inc
nop
and
scas
movsb
pop
outsb
je
fucomip
adc
push
daa
adc
and
push
cmp
aaa
stos
adc
xor
ljmp
or
jg
imul
pop
nopl
cmp
das
inc
add
push
lcall
mov
icebp
ja
push
call
ret
jl
xor
inc
in
push
adc
mov
mov
mov
and
inc
push
dec
lret
xchg
mov
sub
imul
cmc
std
push
and
mov
inc
mov
inc
push
sti
sbbb
dec
dec
loop
cmp
leave
jns
mov
data16
psrlq
pop
scas
test
mov
insb
and
lock
jbe
sbb
xor
adc
jo
fsubl
xor
ror
jo
and
inc
jge
adc
pop
icebp
xchg
mov
filds
jb
xor
mov
in
lea
inc
shrb
jge
out
sub
mov
xchg
cs
push
fcomps
mov
pop
cmp
loopne
ljmp
add
and
dec
fistpl
and
out
add
sarb
or
push
out
jle
mov
mov
adc
xor
lea
imulb
jmp
mov
stos
loope
inc
insb
mov
mov
adc
add
cmpsb
adc
shll
xor
push
jae
cli
mov
push
mov
push
sub
addr16
xor
sub
iret
bswap
out
hlt
mov
and
pop
sarl
outsl
xchg
dec
out
sbb
test
cmp
xor
fiadds
mov
std
stc
jecxz
std
xchg
test
popf
pusha
push
xchg
addb
xchg
mov
fmuls
outsl
or
lea
and
leave
jl
jb
cmpsl
sti
cmpb
dec
adc
xor
sub
pushf
pushf
pop
jg
pusha
iret
repnz
jle
loop
add
mov
fisubl
and
add
negl
jecxz
pop
sub
mov
jmp
mov
cmpsl
rcll
push
daa
or
shl
fadds
pop
or
icebp
mov
pop
jge
jns
lret
adc
lret
jns
lock
push
or
les
incb
adc
push
jmp
pop
outsb
or
xor
mov
mov
push
add
sarl
adc
outsl
iret
push
pop
shll
insb
pop
ljmp
push
adc
fcomps
stc
sub
mov
das
cmp
mov
adc
inc
cmp
xchg
imul
sbb
xor
lret
mov
dec
inc
and
jne
jmp
stc
xchg
mov
lahf
inc
fmuls
enter
outsb
jmp
addb
fisubrl
repnz
mov
cmpsb
lea
movsb
pop
das
shl
sub
inc
mov
xchg
testl
push
popa
sbb
cli
lret
jne
pop
mov
loope
jle
cmp
fchs
sub
jmp
lret
in
mov
repz
orl
pusha
jmp
xchg
mov
jecxz
inc
arpl
decl
sub
icebp
cs
dec
xchg
dec
jl
gs
lea
adc
and
hlt
test
stos
sub
sub
pop
jl
jbe
imul
or
xor
mov
lods
mov
cld
mov
mov
xor
xchg
jmp
ljmp
inc
lcall
cmp
je
and
jmp
xor
mov
hlt
rcll
shrl
dec
sar
add
dec
movb
test
decb
inc
inc
and
mov
fstpt
lods
rcr
xchg
or
std
jmp
sbb
fs
mov
push
adc
fldpi
movsb
mov
mov
push
sub
add
test
insl
subb
inc
leave
mov
loopne
fisubrs
xor
push
jns
push
es
mov
aaa
jae
pop
and
xchg
adc
mov
sar
outsl
rcll
loope
sbb
xchg
nop
mov
cwtl
sbb
xor
pop
jg
pop
mov
xchg
pop
dec
jns
loopne
push
xor
jo
inc
cld
popa
cltd
mov
lea
lds
push
arpl
cmp
pushf
mov
pop
xchg
sbb
dec
lods
mov
push
add
mov
mov
mov
insb
push
push
dec
mov
mov
inc
std
ret
cmpsl
adc
jo
cmp
leave
outsl
loop,pt
dec
lcall
in
out
push
jl
push
pop
push
cltd
cwtl
pop
fidivs
or
mov
das
pop
sbb
pop
hlt
sub
ret
jno
push
int
xchg
cs
push
mov
xchg
mov
push
cmpsb
aam
into
dec
stos
sbb
pop
roll
lret
inc
and
xor
add
adc
push
dec
out
or
pop
dec
jmp
sahf
mov
sbb
cmp
in
out
movsl
or
push
xchg
and
das
cmp
sbb
mov
cld
and
or
lods
loop
cmc
xor
mov
arpl
ljmp
lock
dec
jg
xor
outsl
xchg
jmp
in
jmp
jp
cli
int
or
stos
jle
xor
pop
lods
push
pop
aam
stc
loope
xor
xor
arpl
adc
pop
xlat
pop
xchg
sarb
js
adc
test
inc
jnp
jle
cmp
ret
std
jmp
dec
aas
mov
ja
arpl
jmp
mov
bound
sub
lods
and
loope
stos
push
push
xchg
aam
xor
xchg
sbb
fldenv
jle
repnz
mov
insb
aam
jb
jae
push
jg
out
lock
sahf
sub
push
add
xchg
fsubr
out
mov
and
orb
mov
and
jb
aad
incl
add
adc
xor
nop
xlat
and
lods
fstpt
icebp
shrb
lret
or
es
xchg
adc
sub
push
mov
gs
dec
sub
fsubl
pop
jne
into
cmp
bound
sbb
out
jns
test
pusha
and
outsb
xor
adc
push
cmp
repz
add
mov
sub
push
shll
mov
mov
add
or
int
and
xchg
std
xchg
mov
or
fistpll
xchg
popf
mov
cld
cwtl
out
mov
push
mov
add
fimuls
dec
add
mov
stc
fsts
sarl
jae
in
test
jae
popa
dec
add
and
xchg
jecxz
scas
aas
lea
dec
in
jbe
dec
push
adc
out
stos
adc
cs
jnp
test
dec
push
lahf
xchg
fs
je
cmp
mov
ss
cmp
sub
or
ret
es
sbb
fdivs
popf
mov
jb
sbbb
inc
cmp
das
and
out
jecxz
shll
xchg
neg
or
mov
lret
add
int
cwtl
cmc
inc
jo
push
cmp
enter
lods
cmp
stos
or
and
jo
cmp
or
push
mov
jbe
sbbl
jnp
ss
pop
xor
out
aam
sbb
xchg
sahf
add
or
lcall
push
mov
xchg
lea
rcr
lahf
mov
jge
loopne
lahf
mov
sub
sbb
rcrb
mov
pop
gs
or
or
js
outsl
inc
mov
outsb
insb
fldenv
test
movsl
stos
mov
dec
mov
int3
sbb
es
lods
jbe
or
test
pop
xchg
imul
xor
in
push
mov
sub
js
adc
ret
mov
fcoml
inc
push
fistps
push
orb
movsb
pop
sub
jmp
pusha
lahf
je
jbe
or
rcl
ja
cwtl
sub
cli
out
xor
sub
pop
or
addr16
lods
inc
dec
pop
sbb
daa
or
inc
or
cli
mov
test
adc
mov
jb
mov
jl
mov
cmp
cmp
jl
xchg
les
push
or
roll
decl
dec
out
mov
dec
lock
jne
insb
inc
jle
lret
sub
fists
sti
icebp
mov
lods
pop
jl
push
pop
xor
dec
and
xchg
mov
inc
push
outsl
push
xor
divb
jmp
mov
dec
cwtl
or
rol
rol
sub
push
fwait
cmpsl
sub
movsl
inc
outsb
pop
ds
jecxz
mov
and
adc
fisttpl
lods
sbb
cmp
lret
movsb
adc
scas
push
nop
mov
bound
xorl
jae
jecxz
enter
jmp
pop
jae
loopne
cmp
shrb
aad
jne
loope
add
gs
insl
jnp
addr16
int3
push
lret
jo
or
jns
enter
aad
push
lds
jge
leave
out
loop
jecxz
stos
xor
and
imul
in
push
add
and
fsubs
stc
ja
dec
add
push
jno
ret
push
add
loope
clc
pop
mov
pop
ret
fisttpl
popf
test
mov
in
xchg
xor
in
imul
fnstsw
push
pop
lods
outsb
add
jno
xor
adc
push
xor
mov
xchg
jp
dec
loopne
jae
or
dec
mov
ficoms
or
sbb
stos
mov
pop
jne
xchg
xchg
xchg
xchg
xchg
stos
test
jmp
push
stos
stos
ljmp
jo
in
sbbb
mov
lock
shll
mov
loop
cmp
test
roll
cmc
dec
mov
lahf
pop
inc
daa
ss
sub
fistpll
and
mov
ret
mov
aas
add
fnstsw
push
jecxz
mov
int
xor
mov
fs
sub
es
pushf
mov
xor
xor
or
pop
insl
addl
xor
xchg
mov
es
iret
fimull
scas
clc
cwtl
dec
and
dec
pop
mov
rcrl
lret
xlat
push
mov
stc
test
cmp
lods
insb
jge
or
inc
ja
mov
jg
cmc
aas
jnp
fndisi(8087
push
gs
pop
sbb
sub
cld
jge
inc
xchg
push
and
fildl
sti
xchg
cld
in
fidivrs
stos
and
fldenv
and
out
xchg
sbb
es
xor
and
mov
inc
mov
inc
stos
sbb
in
jle
adc
jmp
cltd
push
movsl
mov
sub
sub
test
mov
ljmp
clc
mov
xchg
and
frstor
fistpll
and
lods
dec
pop
adc
inc
or
push
pop
daa
xorb
dec
mov
mov
lret
fwait
sub
pop
pop
popf
mov
icebp
cmp
inc
cmp
inc
jb
mov
out
xchg
push
mov
push
adc
imul
mov
loop
enter
lret
or
lcall
sarb
fistps
sbb
lods
inc
mov
push
adc
jo
mov
ret
add
faddp
push
jecxz
insl
and
jns
and
adc
xchg
jecxz
rorb
xor
cltd
add
or
push
fucom
cmp
cmp
xor
add
inc
xor
xor
out
cmp
js
fwait
rcr
call
test
dec
aam
lret
test
into
pop
adc
out
mov
sub
aam
in
cmp
mov
mov
and
outsb
and
cmp
repz
in
in
call
add
adc
fcoml
movb
sub
and
mov
jg
inc
mov
iret
add
loopne
hlt
repz
pop
mov
mov
in
push
ljmp
push
fbstp
push
mov
dec
push
xchg
xchg
inc
ja
lea
inc
pop
inc
out
loop
fstl
jo
xchg
mov
fisubl
jb
stos
mov
sbb
push
test
and
outsl
aam
and
adc
add
ja
lret
jmp
sahf
or
sub
subb
mov
rclb
icebp
das
inc
lds
std
rol
or
aaa
mov
cmp
inc
mov
inc
mov
decb
xor
mov
xor
cmp
jmp
push
test
movl
lret
lods
jne
adc
inc
into
adc
fnsave
push
xchg
xchg
push
pushf
pop
andl
and
dec
loope
jl
sub
outsb
notl
dec
stc
aad
mov
pop
iret
mov
mov
iret
ss
xor
int
mov
es
out
pusha
jnp
lods
pop
add
cli
lods
push
scas
add
xor
sub
mov
xor
enter
xchg
mov
movsb
stos
fisubl
jmp
in
inc
xchg
mov
bound
add
dec
sbb
jns
sti
mov
xchg
push
fimull
push
xor
fisttpl
or
out
inc
cmpsb
pop
mov
sarb
js
fwait
push
cmp
mov
and
push
xchg
fisubrl
xlat
js
xchg
mov
mov
push
fldlg2
pop
cltd
inc
into
push
mov
sahf
cmp
jmp
imul
cmp
adc
pop
iret
mov
test
sbb
invd
add
cmp
mov
cmp
jb
sbb
lret
mov
popf
ljmp
or
out
mov
mov
in
mov
mov
mov
xchg
pop
sub
ss
js
inc
jg
in
mov
mov
pop
mov
dec
jne
and
nopl
mov
mov
loope
pop
insl
popf
andl
xor
cmp
dec
int3
lods
push
test
cs
movsl
pop
fisubl
xchg
mov
aam
sbb
pop
repz
lret
stc
pushf
outsl
inc
lods
repz
sub
jnp
cs
mov
std
cmp
adc
into
lea
pushf
cld
cmpl
pop
push
insl
xchg
imul
adc
es
jge
jo
add
dec
add
ret
inc
pop
sub
add
stos
movsl
call
push
fisubrs
cmc
scas
push
lock
in
sub
inc
xor
cmp
dec
cmp
das
js
je
push
scas
je
loope
dec
adc
lods
xor
cld
push
pushf
movsb
call
inc
mov
pop
rorb
sbb
lods
sbb
jns
mov
sub
aaa
push
mov
and
mov
add
mov
mov
or
and
push
and
dec
dec
jmp
rclb
and
xchg
in
add
and
negb
and
push
jbe
pop
xor
popa
adc
lock
out
jge
xchg
dec
xchg
aaa
mov
or
cld
aam
clc
nop
dec
or
adc
ds
insl
add
inc
jns
jmp
adcl
push
popa
mov
push
inc
test
clc
fcomip
lcall
mov
dec
pop
sub
iret
fmul
inc
outsb
mov
inc
adc
in
testb
stos
cli
sarl
inc
dec
test
adc
jmp
imul
dec
insl
nop
pop
push
les
and
repz
es
cwtl
data16
rorb
sti
sbb
js
adc
movsl
inc
jecxz
sarb
mov
push
addl
shr
out
insb
fstps
test
sub
push
jmp
cmp
jmp
aas
call
lcall
xchg
imul
filds
out
mov
cmp
loop
lock
ljmp
and
stos
insb
adc
mov
gs
rclb
cwtl
cmove
jge
jge
daa
push
pop
xor
in
rorb
add
jl
std
mov
movb
test
lret
mov
cmc
mov
jb
movsb
push
xchg
push
jp
cmp
adc
out
inc
and
xor
mov
dec
lret
mov
andl
xor
mov
data16
sahf
lahf
or
roll
mov
add
add
inc
fs
and
push
test
cld
icebp
inc
leave
xor
jg
add
out
mov
in
sub
negl
push
adc
js
cltd
cs
lret
and
fidivl
inc
pop
test
add
mov
out
fdivrl
dec
add
test
and
aaa
cltd
mov
jbe
sbb
push
movsb
mov
mov
xchg
arpl
adc
sbb
mov
shrl
iret
cli
inc
mov
jg
outsl
jo
push
pop
fwait
shll
cmp
fmul
cmpsb
in
push
add
push
clc
subb
bound
sbb
out
sub
aas
int3
fxch
mov
ficoms
jg
mov
in
jmp
je
sub
gs
xchg
cli
in
fs
mov
add
mov
mov
xchg
jecxz
aad
mov
push
adc
mov
lea
icebp
xchg
mov
mov
lahf
mov
iret
mov
loopne
popf
xlat
dec
std
add
lods
ret
popa
jno
sub
shlb
iret
push
out
mov
sub
and
int
xor
cmp
adc
stc
pop
cmc
leave
mov
sahf
ss
mov
shl
mov
xchg
mov
imul
loopne
in
into
jno
cs
jae
outsb
nop
lock
push
cwtl
sub
mov
dec
push
fdivp
adc
lahf
scas
or
stc
cmp
jno
fisubrl
lret
outsb
lods
xchg
pop
mov
inc
mov
aam
pop
jns
loop
jbe
inc
roll
add
push
push
sbb
aad
aas
cwtl
jmp
xchg
insl
dec
sub
insb
lods
add
sti
movsl
popa
inc
sub
and
daa
jmp
fwait
std
test
and
add
adc
inc
in
pusha
push
xor
jns
mov
and
push
out
lret
rclb
mov
cmpsb
adc
test
icebp
adc
adc
ja
push
cmc
lret
out
ja
sub
hlt
test
jge
fbstp
loopne
insb
jb
in
xchg
mov
test
mov
adc
stos
es
je
mov
out
cmpsl
shrb
jbe
loop
and
cmc
aad
jno
in
inc
sbbl
mov
mov
lds
faddp
push
loopne
negb
inc
mov
pushf
lahf
lcall
pop
in
or
add
repz
lods
jno
scas
out
bound
aaa
cmp
mov
push
iret
mov
lahf
inc
outsb
dec
je
outsb
mov
sub
arpl
push
jo
dec
lret
push
mov
push
adc
aaa
js
call
test
xor
dec
scas
pop
cmp
dec
cmp
out
push
inc
and
or
pop
pop
sub
mov
mov
jns
mov
mov
test
fsubr
jnp
or
pop
rcrl
mov
in
repnz
and
inc
mov
aaa
xchg
xor
aad
cmpsl
lahf
cs
adc
jg
inc
xchg
and
ret
xchg
icebp
int
add
sbb
and
ds
mov
popf
repz
push
lret
test
aaa
aad
pusha
ret
dec
andl
and
pop
cmp
push
add
rcrl
mov
mull
ret
cmp
dec
cltd
push
pop
cld
sqrtps
push
ljmp
sqrtps
push
shrl
mov
adc
sti
stos
in
xchg
xor
dec
or
lret
mov
pop
sub
je
add
pop
adc
int3
in
aad
rcrl
loope
pop
loop
mov
xor
push
jb
shl
xlat
lcall
adc
mov
hlt
xor
jle
sbb
adc
mov
sub
jo
test
push
int3
aam
fwait
push
xchg
iret
xor
lea
pop
mov
jne
shll
gs
in
les
outsb
in
add
out
lret
jl
inc
xor
sti
aad
daa
fwait
cmp
mov
jg
sti
fwait
jle
dec
cwtl
cmp
jecxz
fisttpll
cli
pop
stos
daa
fidivrl
xor
add
cltd
push
sbb
push
inc
fisubrs
jg
in
jp
inc
xor
mov
fbstp
idiv
push
fwait
fcomp
lcall
push
lds
push
vmovd
lahf
and
fisttpll
fldenv
mov
sbb
xchg
in
nop
std
jl
pop
mov
push
int3
cmp
int
add
pop
mov
cmp
pusha
xchg
incl
sub
push
faddl
ja
pop
cmp
shrb
or
xchg
sbbl
cmp
adcb
jae
or
sub
and
insl
xor
call
mov
mov
rcr
jle
jmp
push
in
repnz
les
xor
decb
aad
inc
repz
mov
cmpl
flds
imul
insb
or
cs
aam
insl
mov
rorb
pop
jb
scas
sub
jle
pop
fwait
repnz
pop
cmp
fldenv
aaa
xor
jle
adc
adc
outsb
jno
mov
adc
stos
push
xor
push
mov
loopne
js
sarl
inc
xchg
fsubl
rcl
mov
stos
xchg
add
stc
shrl
negb
dec
jns
or
lea
fsubrp
pusha
or
adc
dec
out
push
addb
add
jge
pop
lock
sbb
cmc
call
inc
push
sbb
jmp
or
push
into
sub
repnz
popf
je
mov
push
xchg
xchg
outsl
sbbb
mov
test
in
push
fwait
hlt
inc
mov
sbb
push
xor
popf
adc
sbb
xchg
and
fisubs
fdivs
inc
cmpsl
lcall
xchg
out
idiv
and
or
add
in
sarl
xor
pop
mov
jbe
cmp
notl
push
repz
adc
jmp
lret
cmp
insl
fiaddl
in
icebp
push
pop
cs
ret
enter
pop
dec
xor
addr16
cmpsb
sbb
fdiv
or
outsl
xor
xchg
push
adc
or
push
fstps
and
movsl
fsubl
rcrb
sbb
in
loope
pop
and
pop
sti
loope
xlat
in
loope
iret
jnp
pop
cmp
jbe
mov
cwtl
mov
shl
xlat
sahf
ret
dec
cmp
out
out
jns
movsb
es
jecxz
add
iret
lret
cwtl
jo
mov
lds
push
xchg
mov
ret
stos
rcll
push
sbb
or
dec
cs
lret
mov
rcll
pop
xor
and
pop
enter
inc
inc
push
pop
mov
push
or
mov
movsb
mov
in
jle
lods
xor
xchg
inc
xchg
cltd
cmpsl
jp
cmp
loope
lcall
jecxz
lahf
stos
push
iret
inc
inc
and
mov
fwait
cmp
dec
inc
add
mov
enter
adc
je
lahf
loope
int3
dec
div
outsb
sub
sbb
sti
push
lock
loopne
stos
jmp
popa
and
sbb
enter
repnz
dec
fwait
inc
sbb
stos
inc
ret
push
ret
mov
mov
add
cmc
repnz
mov
mov
and
int3
in
adc
push
or
sub
lods
leave
lods
sbb
aaa
cwtl
rorl
push
in
pop
xor
cmp
fs
ffreep
lret
in
dec
pop
add
dec
lock
mov
xorb
or
sti
pusha
adc
mov
xor
sahf
push
scas
subl
fs
into
loop
es
call
ds
imul
cmp
lods
and
xchg
dec
cmp
cmp
xchg
dec
jge
add
adc
rorl
out
stc
orl
fadd
push
je
cltd
lods
jl
dec
jo
loope
adc
cmc
psllq
xor
rclb
mov
xor
shlb
das
xor
aas
and
xchg
xor
pusha
in
sub
xor
inc
xchg
movntq
out
add
cs
lahf
addl
xchg
mov
mul
lret
jl
jno
in
data16
xor
daa
lret
fmuls
ss
and
mov
or
popf
ret
iret
mov
jecxz
cmpsb
pop
dec
notl
sbb
vmovapd
test
call
cmp
je
cwtl
or
test
and
jno
cmpsb
sti
xor
add
mov
sbb
xor
sub
imulb
rcl
arpl
pop
cmp
xchg
mov
or
lret
cwtl
mov
repnz
mov
dec
lock
aam
jle
popf
jno
dec
jmp
and
aad
leave
fs
negl
pushf
arpl
sbb
mov
sahf
cmp
outsb
rorl
je
jp
jl
sbb
jmp
imul
iret
nop
dec
cmp
js
iret
sub
or
inc
jge
jns
mov
jo
mov
sub
pop
loope
ret
mov
add
push
ljmp
cs
adcl
mov
xchg
in
adc
shlb
xor
shl
outsl
jns
jae
and
push
or
in
push
stos
pop
outsl
or
cmp
jns
out
mov
pop
add
and
icebp
add
xchg
dec
loop
xchg
pop
dec
addr16
test
adc
mov
fcompl
mov
add
arpl
inc
mov
mov
dec
pop
insl
imul
jb
pop
rol
or
push
or
cmpsb
jecxz
inc
mov
fidivrs
outsb
sbb
lahf
fldt
push
mov
out
addr16
push
std
lds
popf
test
dec
xor
or
loope
lods
out
xor
xchg
test
sub
jno
loop
push
stc
repnz
mov
rorb
xchg
test
addb
fisubs
mov
not
push
iret
aad
sub
jle
ljmp
nop
xor
xor
or
xlat
mov
cmpsl
inc
stc
out
lea
sete
mov
fadds
orps
sbb
aaa
in
jo
loopne
cmc
out
lret
pop
adc
in
mov
push
xor
push
leave
icebp
mov
mov
cli
mull
cld
into
sti
dec
in
loope
data16
fnsave
pop
cmpb
and
cs
and
cwtl
and
lcall
cmp
jo
inc
js
pop
pop
mov
roll
lock
mov
loopne
jge
jl
xchg
fstpl
jno
fldln2
scas
jno
sbb
jle
lock
sarb
test
out
jg
sbb
push
mov
sti
mov
sub
jb
and
push
xchg
pop
faddl
into
ret
loope
or
push
and
sbb
sar
inc
xor
push
and
data16
mov
or
fildll
mov
loope
hlt
xchg
int
dec
mov
rcr
in
shlb
les
mov
fidivs
dec
and
jecxz
cmp
cmp
into
pushf
jmp
loope
add
cmc
lcall
stos
xorl
mov
movsb
je
xchg
pop
cmpl
jne
push
dec
mov
fmul
movsb
aas
jg
call
bound
stc
cmp
inc
pop
mov
ss
es
fidivrs
rolb
inc
mov
out
jle
jg
aaa
fdivr
loope
adc
jae
xchg
bound
push
mov
lahf
movsl
outsb
adc
test
fistl
adc
xchg
dec
stos
cmp
pop
xor
adc
and
in
arpl
add
inc
das
mov
outsl
loope
sbbl
xchg
and
cmp
push
lahf
mov
cs
push
repnz
dec
xchg
ss
xor
mov
in
mov
rclb
pop
dec
cli
jmp
icebp
pop
loopne
xor
jns
pushf
push
popa
push
data16
cwtl
inc
mov
cmpl
mov
push
scas
lods
fs
leave
xor
into
push
pop
mov
cs
and
data16
in
jbe
sbb
cmp
stc
data16
push
sti
fsubl
mov
stos
xor
lret
mov
xchg
push
adc
adc
jl
outsl
sub
xor
outsb
inc
cmpsb
adc
std
xchg
ficomps
mov
imul
mov
pop
cmp
mov
ss
ret
outsl
cli
int3
cld
adc
in
jo
cs
daa
out
arpl
add
cli
cmp
push
pusha
dec
sbb
scas
imul
pusha
scas
divb
and
jecxz
daa
dec
add
cmp
scas
pusha
test
sarl
shl
and
or
shlb
sub
cmp
in
push
into
sbb
test
adc
outsl
out
mov
adc
icebp
lea
lcall
cwtl
mov
mov
ljmp
pop
mov
inc
xchg
fistps
sahf
jle
jmp
out
aaa
cmpsl
call
outsl
or
sub
shlb
and
fldt
sbb
icebp
lahf
pop
xchg
fildl
mov
shl
divl
mov
sub
sbb
mov
ds
popa
or
addl
cmc
mov
sti
sub
aaa
mov
push
push
data16
mulb
pop
jbe
xor
in
lahf
dec
cld
lock
mov
lahf
sahf
cld
sub
sub
dec
fistpl
xchg
mov
gs
adc
fildll
adc
pandn
dec
jl
jmp
xchg
dec
mov
in
jl
xor
lcall
aam
sub
fildll
push
setae
loop
ret
dec
adc
outsl
mov
pop
lods
das
aaa
scas
jae
lds
push
call
sbb
and
adc
mov
inc
mov
xor
mov
mov
je
adc
mov
inc
arpl
push
dec
or
cs
push
add
mov
out
mov
insb
dec
movsl
inc
jge
sbb
dec
pop
addr16
mov
aas
and
dec
test
ljmp
lea
adc
push
les
out
es
jbe
xchg
mov
xchg
repnz
in
mov
orb
cmp
adc
or
stc
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
and
mov
orl
mov
xor
xor
xor
add
sub
imul
movl
add
push
adc
mov
mov
xor
or
adc
mov
mov
or
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
add
xor
addl
mov
addl
add
sbbl
add
addl
imul
movl
mov
movl
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
sbbl
add
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
xor
mov
adcl
mov
subl
xor
mov
xorl
add
movzbl
sub
movzwl
mov
mov
add
movb
lea
mov
xor
mov
mov
andl
mov
sbb
mov
xor
orl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
andl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
movl
xor
xor
or
mov
adc
push
add
mov
add
xor
mov
movl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
movl
mov
addl
xor
xorl
add
jmp
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
sbb
mov
sbbl
mov
xor
orl
mov
addl
add
movzwl
mov
mov
subl
movzwl
xor
add
mov
mov
inc
not
mov
movl
cmp
movl
jne
mov
mov
xor
add
mov
sbb
mov
xor
add
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
mov
adcl
movl
movl
sbb
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
sbb
mov
or
mov
xor
inc
add
mov
mov
mov
je
mov
mov
xor
jmp
aas
xor
es
hlt
and
sbb
icebp
in
lret
sbb
jp
clc
mov
aas
inc
jnp
cmp
mov
test
jno
mov
leave
testb
push
cmp
adc
sub
xchg
lock
and
stos
pop
inc
scas
pop
push
xchg
out
xchg
jne
lea
pop
stos
insl
adc
data16
xchg
out
cmp
cmp
add
sbb
cld
shrl
imul
in
jb
loopne
fiaddl
lds
lea
movsl
mov
movsl
aaa
sbb
xlat
loope
mov
add
lock
xor
ljmp
cmp
cmpsl
cmp
cmp
ja
push
enter
pop
xchg
stc
ja
fnstsw
cmp
jb
loopne
pop
cmp
mov
dec
and
notl
loop
shlb
lock
inc
inc
mov
jbe
addb
loope
ds
xchg
pushf
mov
jbe
dec
sub
push
insl
cmp
add
push
mov
add
or
scas
pop
and
jecxz
adc
mov
cmp
hlt
sub
mov
push
push
xor
or
cli
ret
in
data16
test
mov
shll
mov
adc
cmp
jp
out
mov
in
mull
inc
mov
add
scas
sub
sarb
xchg
jns
mov
push
pop
dec
fistpl
pop
adc
shl
test
je
loope
mov
or
sub
xor
sub
mov
notl
and
in
or
jbe
sub
or
sbb
xor
lahf
fs
dec
xchg
outsl
je
mov
dec
ljmp
dec
cs
pop
xchg
jg
sub
jmp
mov
xor
mov
jge
enter
xchg
hlt
imul
dec
push
add
inc
adc
inc
stc
jge
or
fxch
jno
or
add
jbe
cmp
mov
add
mov
add
cmpsb
mov
shl
push
cmp
pop
sti
in
fwait
test
mov
pop
icebp
imul
sbb
iret
adc
xchg
and
pop
jp
mov
fdivrs
xchg
or
fidivrl
xchg
cltd
fidivrs
mov
dec
loop
popl
fisubl
mov
adc
mov
call
out
dec
imul
gs
lods
pop
or
insl
push
push
xchg
or
mov
mov
lret
movsb
or
shr
scas
or
xor
shlb
sbb
jle
jns
push
insl
mov
sbb
dec
adc
xor
adc
lods
not
add
or
ret
in
cmp
cmc
test
outsl
movsl
out
add
rcr
mov
jmp
pop
dec
add
push
xchg
jmp
fidivrs
mov
mov
sarb
adc
sbb
sti
loope
xor
rorb
out
scas
mov
pop
or
das
adc
out
jbe
in
int3
adc
clc
dec
mov
add
mov
lcall
dec
clc
mov
add
dec
loopne
cmc
cli
mov
sbb
aas
jl
mov
loope
je
int3
adc
icebp
ljmp
and
push
inc
mov
xorb
push
jne
pop
rorb
popa
push
or
add
fstl
in
sub
fld
outsb
pop
pushf
cld
fisubrs
push
scas
movsl
fnstenv
dec
aas
scas
and
mov
stos
push
daa
cmp
iret
jae
cli
jecxz
aaa
sahf
addr16
xor
sbb
cmp
push
mov
shrb
cli
imul
or
sahf
mov
sub
jle
hlt
inc
mov
repz
jae
adc
cltd
shlb
test
or
mov
cmp
js
movl
divb
fs
ljmp
jns
inc
mov
push
pop
pushf
test
or
add
fidivl
mov
xor
xchg
lahf
xchg
repnz
out
push
jecxz
xor
clc
xchg
or
loopne
mov
cltd
and
mov
cmc
add
mov
push
mov
inc
adc
call
mov
popf
stc
out
sub
ss
neg
push
dec
shrb
and
test
int3
sarl
test
loopne
cwtl
out
nop
pop
mov
mov
xor
stos
sarl
int3
in
in
add
pop
roll
sub
daa
dec
mov
es
add
cmc
mov
leave
ljmp
or
pop
je
gs
subl
pop
xchg
xchg
sbbb
lahf
xor
aam
cmp
mov
adcl
jbe
popa
cld
and
pop
adc
daa
jle
add
xchg
ficomps
inc
int
rol
dec
sub
mov
leave
icebp
jle
lahf
imul
xor
and
shll
shrl
mov
cmp
in
mov
jb
outsb
int3
aam
inc
push
and
outsb
xor
inc
movsl
mov
movb
pop
outsb
insl
int3
imul
inc
repnz
sbb
or
jae
push
test
xor
push
sar
std
push
pop
clc
sbb
sub
xor
mov
test
xchg
add
test
push
ret
pop
push
jp
scas
mov
and
jns
adc
ficompl
mov
jno
fimuls
and
call
mov
pop
or
and
cli
in
fcoml
push
fidivl
cmp
dec
jbe
xor
inc
clc
xor
pop
or
idivl
inc
push
mov
cmp
xchg
push
xor
mov
das
adc
jne
push
scas
cmpsb
push
in
das
stc
out
inc
aas
pushf
addl
shlb
stos
xchg
jmp
jmp
jnp
jmp
iret
sbb
xor
sti
addr16
mov
in
lods
dec
push
bound
sub
sub
add
ja
das
pop
xchg
insl
clc
es
pusha
push
sub
mov
iret
add
rcl
or
add
push
jno
jae
add
pop
jns
imul
mov
dec
jbe
das
ds
arpl
cwtl
out
nop
push
iret
loope
pop
push
sub
call
iret
xor
or
dec
int
movsl
sbb
push
aas
mov
mov
sbb
rorl
push
adc
insl
or
jmp
fs
hlt
fwait
jae
ljmp
sub
xchg
jp
inc
js
stos
rcrl
pop
adc
sub
les
dec
jge
add
mov
ss
rcrb
mov
ret
mov
pop
lret
pop
out
cmp
push
aam
pop
and
aad
loop
iret
jle
leave
and
lcall
inc
faddp
jne
cmpsb
and
dec
or
sbb
ret
and
test
jmp
jp
scas
out
cmp
into
xchg
mov
adc
enter
sbb
add
jno
jmp
and
rcrb
or
ja
mov
sbb
ljmp
sahf
addr16
dec
outsb
pop
and
mov
dec
movl
enter
push
nop
int3
sti
mov
je
in
or
and
xchg
sub
outsb
mov
xchg
loopne
sub
test
shrb
dec
and
sbb
jbe
and
adc
nop
xorl
inc
sub
popa
in
mov
cmp
jecxz
push
bound
call
inc
std
scas
sbb
lahf
mov
inc
cmp
mov
cmpsl
sub
insb
xor
push
pusha
js
mov
sub
arpl
cwtl
mov
cld
jl
aad
inc
fwait
iret
std
mov
gs
pop
adc
push
scas
and
stos
jbe
mov
lock
enter
in
ss
pop
pop
mov
insb
xor
arpl
sub
je
stos
ret
dec
in
adc
es
or
pop
pop
adc
sub
shll
jb
push
pusha
leave
testl
pop
xchg
inc
rcl
mov
or
icebp
lret
fdivs
mov
mov
cmpsl
jo
jge
call
jp
bound
dec
shl
inc
sbb
fistl
pop
hlt
call
mov
mov
scas
addr16
fsubrs
mov
scas
insb
aaa
sbb
inc
pop
insb
jg
mov
push
pushf
andl
loop
cli
addr16
or
lods
repnz
outsl
dec
mov
pop
subb
jecxz
xor
js
or
push
out
pop
outsb
leave
enter
sub
test
dec
mov
movsl
sbb
push
push
or
out
xorl
dec
repz
ja
das
mov
das
sbb
test
das
aad
inc
sub
int
sub
ja
test
mov
leave
repz
aad
push
je
or
sub
stos
mov
in
je
inc
xor
das
jb
adc
int
jge
imul
sub
inc
jmp
push
jmp
ds
xchg
jbe
outsl
inc
jns
stos
lods
mov
push
loop
imul
or
mov
jo
pop
out
mov
aam
sti
push
ret
ja
int3
clc
ljmp
sbb
imul
jmp
jg
cmp
lcall
stc
sbb
cld
cs
inc
ficoms
jp
add
lahf
fcoml
dec
mov
cmp
fsts
dec
aaa
dec
fsubl
lods
popa
mov
jge
dec
getsec
mov
inc
push
mov
sub
loope
out
add
call
loop
dec
shrb
enter
iret
rorl
lahf
popf
andl
test
mov
fisubl
pop
and
xor
es
cmpsl
adc
stc
xor
andl
push
xchg
adc
repnz
mov
mov
inc
push
dec
rorl
mov
test
push
pop
fwait
out
inc
inc
lcall
xor
icebp
mov
cltd
test
ljmp
and
cmc
xchg
shll
pop
in
xlat
repz
mov
sub
stos
xchg
fmuls
icebp
mov
xor
std
cld
dec
cld
xchg
js
jo
mov
mov
fwait
sub
jmp
inc
mov
cmp
pushf
mov
sub
cmp
adc
mov
sub
je
adc
pop
push
fidivrs
mov
psubd
jmp
and
jns
rorl
lcall
xchg
mov
mov
nop
mov
stos
mov
add
jg
fstpt
lock
enter
or
pop
ss
ljmp
out
cmpsl
repz
pop
dec
jle
xchg
sub
mov
jmp
mov
xchg
cmp
out
mov
shrl
clc
dec
aad
pop
mov
pop
mov
imul
jb
sbbl
negl
jns
mov
arpl
push
clc
outsl
xchg
inc
sbb
mov
jge
xlat
or
push
jle
movsb
ja
cltd
shlb
add
inc
decl
out
ss
inc
sbb
mov
mov
popa
cmp
testb
cmp
xor
fcoml
test
fprem
push
js
mov
in
scas
dec
push
jmp
sub
xchg
rcrb
mov
xchg
pop
cmc
fdivs
int
hlt
xchg
cld
movsb
sub
xchg
adc
mov
xorl
pop
pop
mov
and
xchg
pushf
popf
inc
sbb
push
iret
add
jle
ja
lods
cmpsb
push
mov
pusha
test
and
popa
xchg
mov
arpl
xchg
mov
outsl
xchg
out
mov
jo
lods
rcl
loope
xor
in
add
cli
stc
fsubs
scas
push
mov
cmp
shlb
and
cmp
add
rolb
shlb
and
mov
dec
pop
and
cmpsb
pushl
sbb
jg
xor
add
push
in
mov
xchg
push
or
iret
ljmp
imul
cmpsl
xchg
dec
in
adc
jbe
push
or
and
dec
out
add
fwait
pop
xor
in
sub
pop
iret
jge
lret
xchg
jp
pusha
fwait
xchg
divl
addl
add
lahf
cmp
sbb
push
xor
pop
and
pop
mov
mov
pop
sub
inc
dec
inc
mov
pop
xor
pushf
shll
cmpsb
sbb
push
test
push
push
or
neg
jb
cmc
xchg
sti
dec
leave
std
sar
leave
push
sahf
loope
and
mov
rcrl
adc
or
imul
sbb
or
xor
mov
add
call
sbb
das
mov
fildl
push
ret
das
cwtl
orb
nop
loop
adc
ljmp
pop
fmull
fcompl
jp
cmp
test
adc
mov
mov
mov
out
jle
mov
xchg
daa
dec
iret
inc
fisttpll
xchg
cmp
nop
daa
jmp
hlt
mov
xchg
dec
mov
rcll
mov
es
int3
adc
imul
ret
or
stc
sahf
incb
out
lods
xor
popf
xchg
repnz
in
std
lods
inc
xchg
adc
push
ljmp
inc
stos
enter
fnstsw
fndisi(8087
addr16
ret
hlt
and
ss
sub
bnd
jecxz
sub
ja
adc
add
sbb
dec
scas
movsl
jne
sbb
cmp
out
pop
push
data16
mov
xor
leave
dec
sbb
mulb
test
shlb
push
xor
mov
loopne
insl
pop
mov
jae
pop
push
cmpsb
jno
test
lods
jg
cmpsl
imul
in
mov
neg
imul
add
push
setne
lock
loope
hlt
cmc
push
pusha
sahf
packuswb
mov
xor
call
xchg
mov
jecxz
sbb
jl
fisttps
ret
xor
add
ret
aad
jae
xchg
rep
insb
mov
mov
dec
or
mov
popf
sbb
ret
ja
mov
addr16
mov
test
les
pop
cli
sub
push
lods
das
dec
or
or
lcall
dec
outsl
dec
or
xlat
aad
fsubrp
scas
aam
inc
out
jge
sbb
and
std
push
inc
das
push
and
mov
sbb
jle
and
je
jl
test
inc
mov
fildl
jo
aam
rcl
adc
sub
or
xchg
or
lcall
call
int3
sbb
inc
test
sbb
mov
cmpb
mov
mov
mov
cmp
add
in
and
pusha
jl
inc
sub
or
ds
mov
clc
pop
mov
addr16
inc
sub
jbe
aas
imul
fwait
xor
mov
scas
subb
sbb
stos
inc
jge
je
out
mov
sahf
and
pop
outsl
fisttpll
ret
sbb
enter
push
jno
xchg
push
mov
rcrl
ljmp
lahf
add
aaa
arpl
add
pop
push
or
push
call
push
stos
xchg
jae
cmpsl
jb
cmc
scas
cmp
or
add
inc
lret
xchg
pop
addr16
xchg
mov
and
xorb
xor
mov
xor
add
sbb
pop
pop
fidivs
push
daa
les
adc
clc
push
adc
scas
into
std
jo
jp
or
push
xchg
sti
cmp
imull
sar
and
mov
lret
sti
push
xchg
insl
jns
pop
xor
mov
or
rcrl
and
push
push
imul
sti
test
cli
ficomps
lcall
fildll
sub
push
out
pop
cmpsl
add
mov
inc
jp
fildl
push
adcl
not
mov
mov
cwtl
add
test
scas
push
add
fcomi
mov
test
and
and
fiadds
das
jbe
hlt
and
andl
mov
cmp
mov
test
bound
cmp
les
add
mov
rorl
in
data16
popa
in
inc
inc
mov
sbb
mov
jmp
sub
xor
jmp
mov
mov
insl
iret
dec
and
lret
pop
frstor
std
or
mov
or
rol
iret
test
xchg
imul
std
mov
push
inc
aad
aam
lea
stc
push
xchg
xchg
mov
jno
push
imul
in
pop
adc
and
pop
dec
add
add
xor
fs
mov
imul
jecxz
mov
insl
mov
lcall
test
int3
mov
jbe
jmp
inc
fstps
mov
frndint
pushf
push
in
popa
mov
and
pop
das
fucomi
into
mov
cmp
sbb
dec
mov
scas
mov
and
ss
enter
in
add
ret
jnp
sub
jns
jl
ja
out
call
fnstcw
fistps
pop
and
pusha
shll
shl
ja
arpl
call
out
outsb
shrb
mov
mov
or
lea
add
je
mov
dec
mov
int
ljmp
pop
push
ss
rcll
mov
cli
popf
push
mov
pop
xchg
xchg
cmp
push
and
jns
popf
pushf
hlt
mov
or
or
jnp
shll
lds
sub
jg
dec
in
dec
shlb
dec
mov
popf
clc
loopne
insl
mov
mul
scas
clc
xlat
cmpsb
mov
fdivl
xor
lods
ret
inc
push
or
xor
rclb
add
and
subps
mov
pop
pop
jbe
pop
push
subb
pop
cmp
test
or
sti
adc
outsl
jb
xlat
sti
cwtl
rol
push
mov
fnsave
outsb
push
and
fistl
fsubl
xchg
popf
xchg
pinsrw
call
pop
adc
into
xor
pop
xchg
ss
jge
imul
adc
push
mov
mov
mov
xchg
sub
inc
cmp
pop
mov
ficoms
xor
pop
and
xchg
xchg
out
mov
dec
sub
or
cmpl
in
mov
jle
mov
jae
mov
clc
daa
inc
or
mov
cmpl
adc
pusha
mov
int
pushf
add
icebp
cmp
pop
mov
adc
pop
fcmovnu
mov
imul
xchg
xchg
cmp
test
stos
ds
jmp
out
jns
repz
dec
pop
mov
outsb
sub
xchg
jno
and
ja
lahf
mov
mov
pop
mov
adc
push
arpl
popa
sub
xchg
add
shlb
mov
mov
and
adc
fdivrs
pop
rcrl
jbe
push
push
mov
into
lret
dec
sub
mov
push
mov
leave
sbb
jge
jbe
xor
add
hlt
xchg
sub
fldl
in
inc
pop
das
js
ficomps
adc
enter
mov
add
imull
call
orb
and
xchg
mov
xchg
in
or
movsb
leave
arpl
push
ficompl
cli
push
or
jg
stc
aam
mov
pop
test
push
mov
dec
aaa
movsb
mov
xchg
mov
inc
xchg
in
pushf
jle
scas
jbe
mov
call
sbb
mov
jge
mov
or
and
in
push
rcll
test
xchg
cmp
and
mov
loopne
clc
cli
dec
loopne
icebp
out
jae
repz
sbb
cld
mov
ret
inc
mov
out
lock
pop
inc
push
roll
or
ror
dec
lahf
popa
or
test
xchg
cmp
mov
or
xlat
mov
sbb
pop
jnp
repz
inc
lods
adc
fs
adcb
test
pop
xor
mov
mov
mov
push
mov
stos
aas
bound
int
adc
sub
std
jns
inc
inc
ret
mov
add
push
push
cmp
mov
lret
cs
mov
daa
mov
in
popa
sub
scas
clc
pushf
dec
into
je
adc
fldenv
sub
jne
inc
sub
fcmovnu
test
andb
bound
int
sti
dec
adc
pop
stc
dec
cmp
repnz
sbb
cmc
aam
scas
jecxz
pop
ret
or
into
sub
fcomip
xchg
test
sbb
aas
mov
sbb
outsb
lret
adc
testb
cmc
cmpsl
xchg
out
lcall
push
add
fimull
scas
cmpsb
push
imul
stos
mov
rcll
pop
mov
imul
outsb
cmp
ret
lret
dec
es
pusha
cmp
pop
aad
in
lahf
jg
mov
xchg
enter
int
push
imul
or
std
int
ljmp
aad
popf
mov
fmul
mov
ljmp
mov
mov
mov
add
add
push
and
stos
jb
push
mov
jnp
pop
jno
es
sahf
enter
outsl
mov
fxch
mov
xchg
pushf
in
rcr
mov
mov
sub
aad
lcall
jo
sbb
mov
xchg
arpl
cmp
jg
mov
mov
sbb
adc
fs
sahf
pop
aaa
xchg
cmpsl
or
sbb
xchg
lods
adc
stc
lds
cmp
mov
pushf
cmpsl
pop
dec
idiv
jns
fisttpll
scas
pop
jns
cmc
test
test
mov
sbb
mov
stos
dec
sub
and
gs
rclw
jb
outsb
sbb
sbb
xchg
sar
xor
js
push
jne
in
flds
mov
push
jbe
or
stos
stos
xor
dec
sbb
scas
cmp
addr16
rorb
mov
adc
cltd
mov
mov
pop
sbb
dec
fcomi
pop
jns
adcb
ret
mov
iret
ret
jg
movsl
negl
cmp
xor
ds
xchg
xor
mov
mov
xchg
pop
fstpl
dec
cltd
aad
mov
mov
or
lock
in
push
cli
xchg
xor
xchg
inc
popf
cmpsb
scas
pop
dec
pop
pop
cmpsb
js
dec
lock
popa
xor
jae
pop
hlt
jp
mov
push
in
mov
rcrl
xchg
andl
cmp
ds
and
xchg
inc
cltd
adc
cmpsl
andl
push
test
in
addr16
cli
jp
cmp
filds
fistps
int3
cmc
in
push
lock
xchg
mov
mov
bnd
repnz
or
cmp
mov
icebp
std
jl
mov
das
dec
xor
sub
popf
aad
in
leave
pushl
add
or
icebp
sbb
xchg
mov
rol
out
lock
dec
test
inc
lods
jb
sahf
lods
ds
lea
loopne
bound
dec
int3
adc
lods
jb
cwtl
xchg
jecxz
xchg
ss
popa
xor
pusha
lret
sub
push
rolb
test
jbe
push
sbb
sub
xchg
and
loopne
loopne
lahf
bound
inc
inc
dec
scas
jmp
sbb
imulb
imul
fnsave
push
insl
mov
out
xor
fsubr
or
lret
add
mov
sarb
cmp
iret
jmp
popa
ret
mov
xchg
sub
cmp
arpl
fnstenv
nop
dec
adc
jno
addl
fisttpl
or
fs
pop
lahf
cmp
adc
loope
mov
xchg
mov
xor
adc
jno
dec
sub
xor
pause
mov
rorl
leave
sahf
test
sbb
stos
jo
mov
aad
out
or
push
pop
push
xchg
clc
sub
xchg
sbb
int
cwtl
sarb
dec
cmc
jae
sub
fstpl
pushf
out
pop
xchg
mov
lods
sbb
push
mov
dec
mov
stc
loope
adc
add
rorl
mov
xor
dec
ja
stos
xor
mov
jns
pop
mov
shll
add
lret
dec
rol
daa
and
imul
bound
add
fsubrs
bound
dec
out
add
jnp
adc
adc
inc
pop
pop
addl
mov
popf
lods
sub
insl
test
jmp
test
xor
xchg
lods
rcrl
cmp
xlat
xorl
out
andb
test
test
lods
js
jb
inc
push
ljmp
mov
in
fld
es
in
mov
daa
bound
xchg
stos
push
arpl
push
fwait
adc
adc
inc
sbb
mov
mov
xchg
inc
pushl
and
cmc
cmpxchg
sbb
shl
mov
sub
adc
dec
leave
inc
mov
and
push
mov
dec
jle
inc
idivb
push
push
sub
repz
clc
cmp
or
hlt
shlb
sub
push
js
ds
pop
rolb
out
adc
pop
dec
lret
out
pop
xchg
cmp
inc
and
repz
dec
repz
adc
push
mov
bnd
xor
lret
inc
mov
in
sub
cwtl
adc
push
loop
ljmp
stos
out
inc
xchg
cmp
xlat
dec
sbb
inc
mov
aas
pop
dec
rorl
int
adcl
sahf
std
movsl
adc
loope
jg
jp
int
stc
dec
sub
inc
fcoms
mov
add
and
lods
cmpsl
or
sub
divl
sub
loope
mov
mov
scas
jle
jle
inc
xor
pop
enter
mov
std
pop
inc
push
sbb
sub
xor
jbe
call
and
stos
inc
loop
lret
cmpl
notb
shlb
mov
cmp
rolb
inc
push
int
adc
stc
add
or
ss
aas
dec
pop
loopne
cmp
lea
and
fwait
popf
iret
shl
shll
mov
jae
test
ror
mov
mov
pop
push
sti
or
icebp
mov
lds
jle
xor
loop
ljmp
ret
pop
sbb
dec
fldl
pop
and
sbb
jb
out
adc
fld
adc
or
ds
cmpsb
jle
pusha
ss
or
inc
dec
dec
add
inc
mov
cmp
fimuls
cmpsb
mov
fmull
movsl
xchg
std
scas
aad
mov
mov
enter
pcmpeqb
stos
repz
dec
leave
cmp
pop
out
xchg
mov
inc
into
adcl
mov
dec
in
pusha
ljmp
pop
fnstcw
filds
cmp
and
pushf
adc
or
movsl
out
dec
jecxz
push
pop
mov
jle
push
push
dec
fadd
movsl
sbb
stos
lret
stc
lods
pop
stos
mov
inc
test
shll
divl
dec
jno
inc
push
xor
push
jne
out
pusha
mov
and
ss
nop
push
shll
movd
xchg
jnp
jl
mov
cwtl
sbb
and
pusha
push
push
and
and
imul
inc
adc
call
test
pop
jns
filds
std
inc
jno
mov
ret
ficomps
in
mov
movsb
pop
or
jbe
mov
mov
or
lahf
sbbl
jle
mov
add
xor
inc
pop
sub
cld
mov
mov
xchg
xor
jp
mov
push
inc
and
lds
stc
outsl
into
cld
sbb
mov
inc
repnz
loope
xchg
in
das
push
icebp
mov
mov
add
or
jmp
xchg
cmp
cwtl
xor
imul
lret
mov
ljmp
mov
lahf
add
mov
pop
inc
jo
dec
add
gs
enter
jecxz
scas
xlat
inc
mov
loope
cmp
repz
adc
mov
into
stos
daa
mov
jno
ljmp
scas
das
clc
stos
out
test
jbe
mov
dec
mov
add
icebp
out
sti
jae
ret
mov
mov
mov
lods
popa
pusha
icebp
je
popf
mov
cmpsb
push
outsl
test
hlt
adc
adc
idiv
inc
dec
inc
jo
aad
mov
shr
sub
lea
lds
push
mov
xchg
inc
mov
inc
dec
loopne
inc
into
xor
arpl
and
jecxz
push
mov
pop
testb
das
pop
xchg
outsl
sbb
push
inc
mov
or
or
loope
and
fs
inc
pop
nop
sub
int3
aam
sti
push
rcrl
or
imul
add
mov
out
cmpsb
hlt
repnz
xlat
inc
mov
loop
cmp
mov
mov
pop
std
out
scas
fdivrs
js
fcmovnbe
ret
test
adc
sbb
cmp
mov
xchg
notb
out
cmp
pop
arpl
daa
call
mov
push
sbb
adc
jecxz
jno
jmp
sub
lock
jecxz
in
xor
movsl
dec
imul
ss
jp
mov
sub
outsl
fildll
mov
add
stos
jl
jae
dec
mov
mov
lods
mov
and
mov
inc
rolb
jle
scas
outsl
movsl
scas
inc
fnsave
pause
cmc
inc
aam
outsl
mov
std
mov
lret
jmp
push
fidivrs
test
sbb
stos
inc
ja
mov
cmp
xor
fimull
add
faddl
mov
insl
inc
cld
and
into
mov
cmp
fucomip
or
xchg
daa
popa
push
gs
std
pop
imul
xchg
sub
inc
stc
aam
pop
xor
inc
gs
fnstcw
inc
xchg
adcb
inc
movsb
push
cld
clc
push
inc
cmp
jb
lea
lods
sbb
jnp
pop
sub
popf
mov
fwait
inc
cmp
jle
cltd
sbb
push
mov
and
shrl
or
test
movsl
sbb
and
xchg
stos
mov
ret
mov
jge
sbb
testl
into
dec
sbb
mov
repz
sub
xchg
rolb
enter
scas
repnz
add
imul
int
rol
mov
popf
or
fistps
and
xor
and
sbb
out
popa
pop
jbe
in
fcoml
rcll
mov
xlat
sub
arpl
fadds
add
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
movl
add
andl
imul
mov
mov
mov
add
subl
or
mov
mov
mov
and
mov
movzwl
sub
mov
andl
add
xor
sbb
mov
and
mov
mov
addl
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
lea
sub
mov
sbbl
mov
incl
mov
addl
sub
adc
add
subl
mov
mov
orl
xor
addl
add
movl
jne
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
subl
xor
xor
sub
sub
xor
mov
mov
movl
jmp
pop
loope
mov
jnp
ror
scas
pop
cmc
imul
jp
pop
jp
bound
mov
jae
int
out
in
ds
out
or
push
adc
dec
mov
and
int3
push
leave
fmuls
xor
ret
dec
mov
fcmovu
dec
inc
sbb
loopw
mov
dec
and
movsb
adcl
jae
sub
inc
lahf
lret
jno
adc
sti
pushf
leave
push
jae
jno
movb
xor
ret
dec
inc
jmp
testl
adc
sti
xor
rdpmc
outsl
int3
insb
or
call
lret
mov
out
daa
cltd
aaa
jne
jge
ret
xor
inc
nop
jns
iret
mov
jmp
push
mov
paddusb
negl
cli
outsl
cmp
aam
imul
iret
mov
mov
mov
push
pop
add
addr16
fs
bnd
and
imul
test
lock
movsl
add
push
and
ss
outsl
test
sub
sti
add
into
cmpsb
push
xchg
xor
push
pop
scas
or
scas
jle
sub
enter
and
or
mov
push
popf
dec
insl
mov
dec
leave
scas
test
test
jl
lds
dec
repz
das
or
push
push
push
loop
pushf
jp
sti
test
sahf
int
sub
dec
cmp
sub
jmp
pusha
hlt
addr16
sbb
adc
aam
insl
jmp
cmpsl
push
out
out
les
ret
pop
jmp
cltd
leave
or
test
mov
inc
mov
js
mov
rolw
call
push
ret
push
xor
jb
enter
into
push
mov
mov
xchg
mov
js
ds
fmulp
dec
xchg
push
je
cmpsb
daa
pop
lods
or
adc
cltd
test
inc
and
bound
mov
aad
xchg
dec
test
loop
gs
repnz
lcall
push
scas
movsl
adc
xchg
dec
mov
jno
adc
sub
jae
mov
fsubl
iret
dec
adc
adc
pop
jae
xorl
inc
sahf
aas
imul
jns
aas
mov
es
cltd
dec
jp
or
jecxz
lock
push
ljmp
icebp
pop
sbb
add
push
push
jl
push
ljmp
mov
mov
sahf
cwtl
cmp
je
ljmp
cmp
cld
or
idiv
cmpsl
frstor
sti
into
pop
inc
test
fsts
xchg
xchg
add
xchg
orb
outsl
mov
dec
lret
add
mov
in
rep
inc
insl
js
sub
popf
mov
xor
xchg
xor
xorl
mov
lods
enter
bound
mov
das
insl
cmp
mov
cmp
lahf
repz
xlat
lea
repz
dec
xchg
in
std
es
imull
cmp
les
filds
mov
into
pop
inc
loope
and
sbb
lds
push
out
jg
pop
cli
roll
test
adc
add
fistps
jae
aam
inc
pop
shrl
sbb
xchg
fcoml
sahf
imul
and
lods
arpl
xchg
hlt
xlat
xchg
clc
subl
cmp
sti
dec
aam
pop
cmp
lods
stos
bnd
jmp
lahf
cmpsl
ja
cmp
ror
icebp
out
cmp
ss
ficoms
jno
aad
adc
push
outsl
jmp
cmp
xchg
jecxz
cmc
call
je
fsubrp
sbb
add
adc
xchg
mov
xor
outsb
push
mov
adc
or
xorl
dec
scas
jmp
cmp
cld
lea
push
dec
lahf
in
insl
pop
stos
add
out
fnstsw
pop
lahf
xchg
cwtl
es
dec
sub
outsl
test
adc
pop
inc
pandn
mov
push
test
xor
push
xchg
pop
pushf
jne
push
dec
mov
sbbb
in
std
iret
ret
push
lock
cmpsl
pop
out
hlt
loopne
mov
adc
mov
loop
mov
ja
pop
scas
loope
xchg
jae
insl
jnp
lea
mov
out
test
insb
mov
dec
dec
mov
int3
mov
jecxz
fmull
sbb
gs
and
sbb
jmp
cwtl
push
stos
jge
scas
loope
push
inc
or
cld
dec
or
test
inc
and
xor
xchg
jo
and
es
push
cwtl
add
mov
xchg
cmpsl
sbb
fs
mov
jp
pop
mov
jle
call
jno
les
mov
sub
scas
scas
mov
outsb
mov
mov
adc
leave
push
dec
popf
xor
sbb
in
push
pop
mul
pushf
sub
stos
nop
pop
cmc
cmc
push
mov
out
jp
mov
xchg
outsl
adc
aad
mov
test
pop
int
nop
pop
and
push
sub
scas
or
jo
mov
stos
addr16
inc
repz
mov
ljmp
push
mov
or
mov
cmpb
pushl
pop
sub
insl
mov
dec
int3
cmpsl
cli
je
xchg
es
pop
mov
sti
and
repz
and
clc
jns
cmp
sti
mov
ret
sub
and
ss
mov
cltd
and
jnp
fwait
sub
sub
mov
mov
gs
adc
xor
aam
mov
sti
fs
jge
lret
cmp
xchg
inc
mov
iret
dec
dec
push
add
fsubl
mov
std
lds
movsb
mov
ss
ret
stos
adc
mov
jl
inc
push
lret
sbb
push
sbb
adc
add
outsl
push
addr16
mov
daa
int
xor
mov
iret
popa
mov
dec
shll
movsb
cmp
out
out
mov
push
sti
addl
rclb
cs
std
lret
sahf
test
in
xchg
test
scas
xor
pop
xor
arpl
je
in
sbbl
push
cmpsl
loop
mov
arpl
xchg
pushf
or
push
adc
sbb
and
scas
add
in
testb
inc
mov
dec
and
push
gs
fistl
inc
add
jecxz
notl
shlb
rcrb
dec
add
mov
fwait
cmp
sbb
sti
js
jns
in
mov
clc
mov
pop
cmp
std
and
aad
jp
dec
aad
movsb
cs
sub
pushf
jno
inc
sarl
stos
mov
jns
adcb
mov
push
xchg
mov
adc
cmp
lahf
dec
hlt
add
push
fcoms
sub
and
shll
xlat
das
xor
popa
xchg
pusha
sub
fildll
test
mov
xor
add
mov
test
std
outsb
dec
inc
rolb
mov
and
stc
mov
jg
fwait
ret
es
sarb
dec
push
dec
bound
cmp
jb
pop
fnstenv
ss
pop
scas
xchg
push
mov
add
test
pop
pop
jnp
sbb
adc
jo
or
xchg
in
adc
add
cmp
or
pushf
inc
push
cld
aad
jbe
jg
out
ds
movsl
bound
mov
leave
pushf
mov
pop
and
pop
rcll
repz
add
aad
mov
fnsave
popf
dec
pop
pop
mov
ret
dec
xchg
cmp
lods
mov
mov
gs
cmc
imul
mov
push
dec
movsl
jbe
xchg
pop
js
adc
imul
sbbb
mov
dec
mov
xchg
xchg
xchg
in
mov
loop
lea
jne
dec
movb
jecxz
jns
daa
in
or
add
pop
sbbb
xchg
adc
inc
outsb
ja
jecxz
jp
sub
js
iret
rorb
aaa
cmpsl
inc
jecxz
push
cmp
mov
jbe
call
pop
sbb
ja
popa
mov
aam
sbb
test
mov
outsl
mov
ret
sub
fsubrs
call
divb
mov
cltd
bound
pusha
xchg
test
add
test
shll
lock
outsl
jge
pop
add
loopne
cli
push
ja
cmc
adc
int3
test
cltd
aaa
xchg
cmpsl
daa
repz
shll
fnstenv
rol
roll
add
add
mov
jb
dec
pop
imul
mov
mulb
sub
je
outsb
push
test
scas
out
or
cmp
or
ds
mov
jae
rcr
mov
inc
idiv
jb
pop
xor
mov
xchg
mov
cwtl
cmp
lods
sbb
ret
adc
pop
fwait
cmp
es
subb
mov
dec
inc
push
xorl
pop
ss
fs
cmpsb
jne
pop
adc
add
ds
jmp
xchg
sub
into
mov
sbb
pop
pop
mov
jecxz
add
test
out
jbe
movsb
stos
jns
adc
adc
enter
sti
popl
rclb
shr
sahf
out
call
imul
out
xchg
pop
sub
repz
mov
xor
imul
jno
xor
decl
idivb
icebp
mov
jne
je
mov
les
inc
rorb
xor
mov
sbb
fnstenv
out
jecxz
int
and
mov
push
sti
dec
hlt
insl
adc
subb
lods
mov
mov
sbb
adc
fcom
push
jne
pop
insb
mov
insl
jns
mov
imul
sub
xor
aad
or
outsb
jo
dec
jl
xor
jecxz
leave
inc
iret
mov
cmp
loop
and
cmp
ja
adc
jb
sbbb
inc
hlt
jo
jbe
pop
sub
es
das
cs
mov
xchg
gs
adc
imul
std
xchg
loopne
push
cmpsb
imul
sub
insl
jp
jae
mov
mov
inc
enter
and
adc
cld
movsb
ljmp
cmpsl
push
in
fdivs
pushf
push
ret
mov
mov
jmp
jecxz
out
jne
xchg
fwait
jp
push
sti
cmpsl
test
decb
popa
xor
arpl
fdivrl
lock
ret
push
mov
sub
cmpsb
imulb
stos
in
ja
bound
je
cmpb
xchg
cmp
ret
adc
push
mov
jl
sub
stos
lcall
jp
aaa
or
cmp
mov
scas
cltd
sbb
pusha
test
insl
sbb
cmp
fisttpl
fadds
mov
shl
and
es
shr
pop
adc
iret
push
mov
mov
pop
popf
inc
je
or
inc
push
push
mov
aas
js
dec
aas
in
jbe
mov
xor
add
push
andl
mov
jp
frstor
cs
mov
enter
pop
push
fs
mov
and
out
mov
push
or
cs
clc
iret
insl
push
mov
push
sbb
ss
sbb
mov
in
push
rolb
ja
pop
pushf
inc
iret
daa
add
cmp
mov
adc
fwait
je
mov
repz
mov
insb
xor
and
xchg
pop
mov
repz
xchg
cmc
into
cwtl
dec
sbb
cwtl
jl
addr16
jecxz
je
adc
data16
cmp
mov
stos
dec
and
ss
popa
rcrb
adc
pop
and
iret
into
xlat
adc
lds
sub
sbb
pusha
pusha
pop
xchg
cmp
sbb
shrl
adc
xor
cltd
dec
jg
xchg
or
ret
gs
add
pop
dec
dec
push
mov
pushf
mov
xor
cmp
and
out
or
cmpsb
sub
gs
push
dec
adcl
push
imul
push
test
imul
mov
cmpb
cmpsl
jbe
adc
mov
sbb
push
or
jbe
xchg
rcrl
insl
mov
jmp
jbe
xor
mov
stc
enter
push
or
rcl
ja
cld
loop
mov
cmpsl
inc
dec
jecxz
movsl
mov
push
ljmp
in
mov
movsl
jl
mov
sbb
sub
adc
fwait
mov
clc
push
scas
scas
out
mov
mov
xchg
rcll
imul
xor
in
xor
pushf
mov
pop
adc
gs
xchg
push
aam
clc
scas
xor
fldt
decb
sahf
add
cmp
jp
std
test
push
or
shrl
test
or
fwait
incb
scas
jae
xchg
sub
and
sbb
lret
sub
xchg
fsubs
jo
push
test
lret
mov
jb
fistl
outsb
mov
add
popa
cmp
cmc
flds
push
iret
int3
mov
or
add
loopne
loope
mov
cmpsb
movsb
call
add
outsb
icebp
pop
pop
test
pop
ljmp
sbb
mov
mov
xchg
xchg
out
mov
stc
flds
shlb
test
leave
sub
subb
jnp
mov
lcall
mov
inc
mulb
je
pop
scas
xchg
lret
lcall
loope
jge
jnp
or
lds
mov
mov
dec
cmpsb
repnz
sti
push
jg
outsl
int
push
test
and
int3
sub
lcall
mov
cmpsb
movsl
fistl
dec
iret
jmp
cld
xor
push
inc
jecxz
pop
mov
xor
xor
sbb
add
ljmp
or
in
or
push
lods
and
shrb
push
xchg
int
xchg
rol
test
std
scas
scas
dec
inc
in
rcrl
jg
mov
cmp
shll
mov
mov
mov
incb
sbb
mov
ss
inc
loopne
sub
jnp
inc
mov
and
mov
ljmp
xchg
mov
sub
stos
hlt
addl
out
and
sti
add
rcrb
jae
lock
clc
add
mov
cmp
xor
icebp
mov
in
or
cmpb
les
sti
cwtl
xchg
mov
filds
stos
lods
imul
jns
movsl
mov
leave
addr16
int3
jns
mov
xchg
out
sbb
mov
rcl
sub
es
pop
xor
xor
stc
aad
jmp
mov
push
dec
loop
sub
lcall
add
cmp
pop
call
xor
bound
scas
jg
ss
cld
sbb
mov
sbb
fisubrl
push
xor
and
movsb
loopne
mov
aaa
dec
jle
adc
in
inc
aad
fdiv
mov
repz
xchg
adc
dec
sbb
lcall
ljmp
xchg
mov
jb
jg
jg
adc
xor
sub
jae
data16
mov
repnz
roll
ss
std
scas
jne
mov
aad
push
mov
std
fwait
push
subl
adc
fs
lahf
cwtl
call
push
decl
xor
pushf
test
or
xchg
mov
loop
mov
pushl
jmp
or
shll
fstl
aam
inc
jmp
mov
dec
mov
pop
jne
es
sub
xchg
push
pop
les
inc
out
sub
in
andl
add
ret
fsubs
jbe
cltd
push
xchg
cmpsb
mov
and
scas
fistl
jbe
mov
xchg
push
fsub
sbb
leave
addr16
bound
adc
sti
mov
pop
imul
stc
fisttpl
iret
push
loope
xchg
inc
test
add
push
aas
cmp
xor
or
fwait
fwait
loopne
pop
bnd
sbb
popa
dec
fisubrl
cmp
push
push
push
sahf
in
pop
pop
shlb
clc
scas
dec
mov
vphaddbq
inc
adc
xchg
push
or
lcall
pusha
inc
loop
mov
fs
outsl
inc
test
repz
out
testb
ljmp
xor
out
inc
sub
jmp
jg
shrl
jnp
loope
xchg
cmp
fsubl
fsubs
pushf
lods
xchg
mov
je
sub
insb
movsb
pop
sub
or
lods
mov
lahf
shll
out
fisubrs
cli
aaa
pop
add
push
mov
xchg
sti
push
adc
adc
fdivrp
lock
fwait
sub
adc
out
mov
mov
xchg
das
dec
mov
cmp
test
cmp
lock
outsb
lods
and
sub
mov
pop
cmp
insl
jns
mov
scas
sbb
dec
fwait
clc
jle
and
mov
data16
test
ljmp
xchg
jmp
mov
out
adc
adc
repnz
rolb
pop
cmp
aas
dec
in
mov
mov
pop
adc
jae
aad
ret
xor
pop
xchg
xor
adc
sbb
inc
sbb
daa
mov
jge
bound
pushf
lahf
pushl
in
cmp
out
xchg
int
test
add
xchg
and
aam
push
xor
xor
ss
stos
cltd
adc
jp
add
and
std
sub
imul
ss
sbb
mov
in
cli
test
inc
xchg
mov
out
inc
inc
fxch
jmp
xchg
stc
cmc
cmp
adc
je
icebp
adc
pusha
xchg
jecxz
lcall
icebp
or
test
and
sub
or
popa
lcall
enter
push
into
mov
imul
mov
pop
lret
loop
and
push
out
leave
bound
in
add
movsb
cld
sub
cs
iret
in
test
fldl
xor
jmp
int3
in
std
test
stos
loopne
mov
mov
dec
repz
mov
cmp
pop
and
push
pop
adc
repz
test
outsl
add
in
mov
popf
pop
dec
adc
pop
popf
sbb
pop
mov
adc
imul
fwait
adc
or
dec
or
in
inc
or
andb
adc
data16
adcb
sbb
mov
adc
outsb
jge
lods
mov
aam
xor
scas
cli
fiaddl
repz
sete
cmp
addl
test
pop
or
xchg
jmp
pop
test
gs
pop
es
popa
dec
xor
mov
xchg
cmpl
leave
xor
ret
adc
add
mov
icebp
or
loopne
jbe
mov
and
bound
pop
or
sti
jbe
xlat
cwtl
mov
sti
sarb
inc
xchg
negb
mov
mov
xchg
inc
stos
pop
fcompl
and
int3
ret
mov
jmp
repnz
lret
scas
jmp
xchg
or
add
adc
mov
in
sbb
inc
movsb
ja
rcll
inc
loope
push
xor
xchg
jg
pop
shll
rol
xor
cmpsl
or
cs
push
push
je
loop
jmp
dec
dec
in
xchg
cmp
pop
outsl
and
punpcklbw
mov
imul
jb
fdivs
sahf
movl
neg
popa
jge
hlt
std
sbb
jp
adc
aad
mov
mov
sbb
sbb
dec
out
scas
jb
das
addr16
inc
xchg
iret
cmp
subb
aas
lock
pop
es
sahf
mov
or
mov
fistpl
xchg
mov
sbb
rcrl
out
nop
sbb
stc
cmp
mov
stos
out
cld
les
cs
imul
mov
push
mov
mov
lcall
jae
inc
shll
in
inc
and
cmp
loop
mov
xor
fidivl
cwtl
dec
mov
flds
or
or
gs
dec
xor
push
sti
jle
ret
fs
fisubs
and
ret
sub
fs
sub
or
icebp
ja
and
imul
rclb
jl
icebp
in
out
sbb
stos
movb
addr16
pop
outsb
repz
cwtl
or
ret
nopl
scas
addr16
mov
mov
pop
inc
daa
jge
loope
sbb
stc
fmull
and
je
cs
mov
imul
jmp
ljmp
test
push
pop
rcl
xchg
inc
adc
push
dec
js
push
fdiv
and
mov
sub
mov
adc
push
add
int
sahf
je
cmp
adc
inc
push
ljmp
jmp
loop
mov
int3
lret
cmp
mov
fidivrl
icebp
cs
mov
inc
js
inc
arpl
cmp
pop
pop
rorb
sub
mov
aad
cli
push
out
mov
sarb
test
push
es
or
mov
ja
jno
dec
xchg
mov
cli
aaa
dec
push
dec
xchg
mov
pop
stos
jecxz
lcall
jno
sbb
movsl
mov
mov
add
sub
jg
fnclex
inc
cmpsb
pushl
sarl
popf
pop
inc
jae
int
xor
in
xlat
inc
mov
mov
xchg
jle
mov
mov
orl
mov
push
dec
jnp
in
inc
sbb
lret
subl
std
enter
not
and
push
sbb
jecxz
inc
push
xchg
or
cmpsl
or
mov
call
insb
mov
fstp
jle
inc
cmp
pusha
mov
mov
dec
sti
and
sti
test
sbb
popa
xor
aam
lds
push
arpl
loopne
jp
adc
fisttpll
pop
mov
xor
imul
repz
inc
push
sub
mov
mov
ror
adc
or
lret
loopne
jecxz
fwait
imul
push
or
pushf
mov
dec
in
mov
test
and
addr16
rcrb
aam
jp
mov
add
test
lahf
int3
dec
lahf
or
cli
dec
insb
push
jno
pushf
add
pop
popa
lret
sub
lods
scas
jp
inc
add
push
das
push
or
mov
fstpl
sbbb
adc
or
push
nop
and
inc
ret
xor
pop
je
pop
pop
push
mov
mov
push
sub
fcmovnbe
arpl
adc
fsubrs
inc
stc
out
sbb
jnp
sub
fstpt
cmp
xchg
sub
test
pop
lds
int3
xor
test
sub
jecxz
mov
mov
ret
neg
sahf
xor
mov
outsb
xchg
and
idivl
pop
sbb
sbb
cmp
mov
mov
xor
enter
mov
cmp
cmpsb
mov
sti
out
mov
add
or
js
dec
xchg
mov
mov
mov
fwait
sub
push
xchg
fists
jns
xchg
and
test
mov
out
cmpsl
jo
adc
test
shll
sbb
pop
addr16
push
xchg
fstpl
xor
mov
sub
mov
xor
insb
dec
in
mov
pushf
pop
mov
and
iret
inc
push
jge
add
and
popa
ljmp
outsl
adc
mov
mov
xor
sbb
dec
pop
jb
pop
in
add
pop
inc
stos
jb
mov
pop
pushf
ret
daa
jne
and
mov
cmp
mov
cmp
pop
pop
rcr
jg
mov
inc
rclb
rcrl
cmp
ret
and
pop
sti
sbb
movsb
cwtl
sbb
inc
ljmp
sar
add
mov
jge
xchg
aaa
rclb
mov
mov
mov
push
fldl
jns
and
in
lods
push
push
in
test
fbld
lock
cltd
adc
jno
mov
fst
xor
mov
std
and
lret
test
push
test
pop
popf
mov
repnz
in
xchg
insb
sbb
iret
mov
dec
add
movsb
dec
inc
imul
and
and
jle
dec
rclb
loopne
pushf
inc
sbb
mov
or
jnp
mov
cmp
gs
sub
call
sbb
out
push
push
lcall
ljmp
stos
push
mov
roll
dec
pop
popa
pop
arpl
inc
adc
and
scas
or
lret
fcoml
jno
out
push
cmp
push
aas
fs
rclb
mov
ds
adc
xchg
jp
mov
inc
out
mov
and
xor
rorb
sbb
lret
loope,pn
js
sbbl
mov
pop
mov
aaa
or
cmc
cld
mov
lea
inc
in
popa
and
dec
jo
lods
mov
jp
pop
sti
pop
inc
mov
popf
xor
push
mov
mov
xchg
ss
lods
pop
stos
das
lock
xor
pushf
sbb
lahf
popa
js
add
jo
shll
mov
clc
ja
lret
pop
outsl
int
push
mov
cld
ret
pop
inc
sub
jo
pop
add
xor
enter
mov
lahf
push
mov
js
mov
xchg
cmp
xchg
ror
mov
push
in
pop
jno
vmovaps
insb
sub
int
js
pop
insl
fcoms
jb
sub
mov
orl
out
sbb
sti
stc
imul
add
sub
gs
rol
xor
dec
push
mov
out
jo
js
inc
mov
pop
push
mov
pop
inc
adc
bnd
inc
xchg
push
test
and
and
xchg
aaa
mov
jg
xor
es
cmp
dec
jge
sahf
aad
xor
leave
jno
in
pop
pop
xlat
cmc
jp
call
sub
in
bound
push
sbb
mov
and
lahf
or
xchg
cmpsb
sbb
testb
mov
jno
xchg
xor
inc
data16
addr16
cltd
or
inc
or
rorl
inc
pminub
mov
les
sbb
leave
ds
mov
pop
arpl
mov
jp
xor
shlb
xlat
push
add
in
out
push
mov
sub
test
push
sbb
sahf
mov
add
push
sbb
js
lcall
pop
loopne
or
adc
xchg
pop
dec
dec
sbb
mov
movsl
cmp
test
push
inc
cli
dec
fs
sub
sbb
inc
jno
mov
or
jle
scas
outsl
sbb
imul
test
aaa
test
lret
mov
add
scas
push
test
xchg
repnz
jae
pusha
aad
idivb
mov
push
xorb
adc
addr16
test
xor
ror
outsb
adc
xchg
fldcw
xchg
sub
or
lock
jecxz
sbb
sbb
ss
mov
in
jg
or
test
nop
fnop
push
nop
pop
mov
rcrb
xor
add
sbb
leave
mov
rcrl
mov
rcrl
push
jnp
lock
mov
jge
cmpsb
sahf
mov
aas
clc
and
rcrb
push
jecxz
inc
xor
daa
fwait
xchg
fdivrl
gs
push
mov
jl
nop
push
scas
sarb
mov
inc
dec
cmp
test
clc
in
adc
ss
mov
sub
cmp
mov
dec
mov
sbb
fstl
out
stos
mov
mov
fst
mov
rorl
pop
xor
adc
add
pop
leave
cmp
mov
mov
jbe
arpl
lock
lock
or
jo
jle
dec
lods
lock
lea
pop
mull
or
enter
dec
stc
popf
mov
outsb
xchg
imul
ficoms
xchg
fdivl
mov
push
pusha
adcb
das
pop
mov
popf
stos
lea
outsb
xchg
stos
adc
fwait
sahf
bound
iret
sub
test
push
jno
fildll
mov
pop
lods
fildll
push
pop
lods
mov
push
or
mov
cmp
test
aaa
outsb
sbb
loopne
aas
outsl
daa
sarb
lds
jle
shlb
repz
hlt
scas
cmp
adc
mov
pop
push
xor
mov
test
cs
fnstsw
in
pop
movsl
pop
out
pop
sbb
push
aam
cltd
mov
sbb
mov
adc
pop
jnp
ds
rorl
cmp
sti
or
mov
dec
mov
je
pushf
mov
push
gs
int3
call
inc
ret
xchg
xor
and
outsb
imul
fs
das
movsl
mov
sbb
andl
pop
add
push
inc
sub
sbb
ficoml
or
scas
and
in
fnsave
testb
and
and
aad
add
pop
mov
or
lret
ljmp
aam
jns
cld
movsl
rolb
pop
mov
mov
xor
push
or
adc
mov
or
jl
and
mov
das
js
xlat
mov
mov
xchg
cmp
add
test
js
xor
in
ja
aas
dec
push
je
in
adc
cli
xchg
test
clc
adc
lcall
cmpsl
aaa
xchg
je
bt
xor
lahf
shrb
xor
sub
enter
and
jnp
bound
jle
push
scas
adc
jo
adc
adc
xor
shrl
fbstp
bound
mov
scas
pop
outsb
xchg
scas
sbb
in
inc
sub
loope
mov
addr16
insb
dec
cli
out
imul
test
movsl
jle
push
fdivp
sbb
addr16
cwtl
ds
jno
mov
fiaddl
cmpsb
dec
and
out
cmp
cltd
cmp
inc
dec
jns
mov
flds
pop
dec
push
jg
lods
int
loopne
push
insl
push
xchg
loop
daa
sbb
or
push
push
inc
dec
sti
push
jp
adc
ret
mov
fucomi
data16
sti
int3
hlt
cld
mov
fmull
lods
imul
mov
popa
ret
jge
shrl
fcmovnu
stos
mov
mov
mov
ss
jnp
mov
in
jae
lcall
push
push
ss
insl
mov
push
addl
out
push
pop
lcall
pop
ss
inc
push
sti
push
mov
mov
inc
cmp
icebp
pop
ficoms
repz
push
and
xchg
jle
mov
nop
addl
arpl
sub
out
mov
xlat
and
cmp
stos
sub
or
mov
push
or
add
test
add
sbb
sub
jnp
mov
and
in
xor
jp
pop
jp
mov
cli
dec
or
adc
jno
clc
mov
jl
xor
jge
std
push
sbb
jg
das
and
pop
mov
loope
add
xchg
mov
jle
or
test
sub
adc
fldenv
movsl
sbb
mov
icebp
scas
pop
push
std
xchg
out
or
inc
and
arpl
and
into
mov
jmp
divb
add
mov
loop
jmp
mov
ror
cmc
or
mov
jmp
scas
lret
out
xchg
mov
xchg
mov
xor
test
movsb
lea
xchg
aad
cs
dec
cltd
jno
inc
iret
cmp
cs
xlat
lock
mov
cmpl
cmp
loopne
jne
scas
and
shrl
pop
sarl
mov
lods
sub
xor
inc
or
popf
rcll
mov
jmp
push
int
outsl
adc
mov
xor
lds
mov
aam
sahf
pop
pop
lods
fwait
xor
fdivs
cwtl
fwait
pop
push
or
stc
adc
and
movsl
mov
lock
adc
xchg
and
sbbb
addr16
inc
popf
loope
inc
addb
cld
std
mov
out
imul
dec
jp
insb
and
cmpsb
std
sub
xor
adc
sbb
add
in
mov
icebp
dec
or
add
ret
add
pop
xor
add
jns
jb
ror
sahf
call
addr16
jmp
in
and
test
hlt
xchg
popf
xor
add
jecxz
sahf
js
mov
mov
mov
cld
cmp
iret
lea
fldt
loopne
jns
add
lods
mov
pushf
rcll
push
and
aam
enter
mov
jle
jo
cltd
insb
rcll
ss
js
xorl
sbb
inc
fdivrl
and
loopne
lods
cmp
insb
jg
push
jmp
or
pop
out
and
es
push
pop
jmp
inc
loop
cmpsl
mov
cs
sbb
jmp
popf
cmp
daa
inc
insl
into
jae
std
and
xor
data16
cltd
icebp
flds
inc
sub
and
je
mov
inc
add
adc
lcall
add
mov
lret
lahf
addr16
pop
pop
mov
pop
movb
adc
movsb
push
cmpsb
push
pop
cmp
dec
xchg
data16
testb
subb
cmp
and
jb
loop
cmpsl
ljmp
mov
pop
divb
mov
sahf
jnp
sbb
aad
mov
and
sbb
dec
add
fbld
shrb
jg
cmpl
addr16
mov
lods
sub
pop
cmp
les
ljmp
hlt
and
hlt
jge
and
shll
inc
or
cmp
jne
xchg
cwtl
jecxz
jb
ret
xchg
cltd
mov
mov
loop
aam
lods
push
inc
jg
pop
sbb
movsl
sub
out
mov
pusha
add
fcoml
loop
outsb
outsb
fcmovne
xchg
in
dec
xor
and
out
mov
xor
cmp
or
sbb
or
int
ljmp
mov
arpl
pusha
lret
and
sbb
pop
fisttps
push
fstpt
push
adc
in
mov
mulps
xor
or
or
lock
cli
push
popf
popl
fdivl
lods
pop
adc
jl
not
aad
xor
adc
cld
or
repnz
lea
jge
daa
fiaddl
repnz
popa
push
dec
mov
xchg
push
lahf
repz
rclb
xchg
sub
pop
xchg
cmp
cmp
ja
fisttps
dec
cmp
in
or
jecxz
mov
inc
xor
push
mov
rclb
mov
int3
dec
ficomps
push
mov
sbb
xchg
and
dec
mov
xchg
daa
sbb
xchg
mov
pusha
mov
xchg
mov
sahf
daa
sbb
daa
mov
popw
or
sbb
out
pop
xchg
inc
xor
pushf
cmp
cmp
jmp
in
sbb
cmp
jg
movswl
ja
mov
or
shll
xchg
test
ja
lock
mov
aam
mov
std
ret
sbb
mov
scas
stos
leave
sti
in
jle
sub
cld
push
dec
pop
shl
into
fdivl
push
push
mov
mov
stc
ja
push
adc
sub
aad
add
xor
or
jae
jecxz
sub
or
arpl
jmp
lods
sahf
pop
sub
inc
fwait
test
sbb
mov
add
adc
mov
or
and
iret
xchg
fwait
imull
lods
pop
movsl
mov
jbe
pop
mov
pop
movsl
jecxz
rcr
pushf
mov
fs
add
shr
jmp
frstpm(287
xchg
fwait
pop
std
add
cmpsb
lock
add
push
hlt
pop
dec
inc
enter
ljmp
push
stc
cmp
mov
dec
iret
push
js
sub
aas
mov
mov
cmp
popa
outsl
gs
cmpsl
sbb
xor
push
push
push
cmp
pop
sbb
dec
push
adc
xorl
cmp
stc
or
adc
push
mov
dec
dec
push
push
add
gs
lret
mov
cld
add
imul
jae
sar
mov
jno
push
adc
cmpsl
loop
inc
and
cmp
mov
jecxz
or
fsubr
push
xor
xchg
mov
push
mov
aaa
mov
sbb
roll
lods
cmpsl
and
mov
or
mov
lods
or
aas
cwtl
clc
jae
xor
aas
and
xchg
pop
test
test
stos
repnz
or
add
aaa
loopne
mov
popf
out
insl
push
mov
adc
movsb
push
xchg
sbb
pop
sub
push
xor
fwait
stc
xchg
sbb
sub
mov
test
and
dec
dec
xor
add
mov
mov
test
mov
mov
cmp
mov
in
xchg
adc
enter
mov
or
sahf
js
sbb
lret
add
xchg
faddp
or
jb
sbb
repnz
sbb
faddp
scas
inc
inc
test
jg
adc
push
lods
jp
xchg
imul
xchg
mov
or
mov
in
mov
jmp
popa
mov
gs
fwait
pop
or
xchg
inc
je
mov
test
cld
mov
into
and
cli
sahf
dec
mov
lahf
nop
inc
jle
lcall
xchg
movsb
dec
inc
push
leave
cmpsl
dec
out
and
mov
cmc
hlt
into
mov
fildll
pop
inc
fimuls
mov
pop
jo
jno
test
xor
mov
jp
push
mov
fldt
mov
test
sbbl
dec
and
fldl
sbb
sbb
push
jecxz
cmp
sub
hlt
jmp
xlat
mov
sahf
incl
push
enter
aaa
push
jecxz
fs
clc
out
rcll
sub
mov
mov
movsb
ficompl
push
cltd
xor
mov
dec
adc
or
add
inc
lret
imul
add
xor
sub
popl
out
pop
cmc
cmc
leave
mov
and
sub
mov
pop
aam
pop
ffree
adc
pop
fnsave
out
out
lret
fwait
dec
cld
lods
mov
fldt
push
add
sub
xchg
pop
ss
mov
int
in
xlat
cltd
mov
rolb
jbe
out
ds
mov
push
jb
bound
lahf
loop
push
inc
enter
roll
xchg
loopne
mov
fwait
mov
and
xchg
orb
mov
lock
push
xlat
jl
mov
pop
filds
cmp
and
imul
sub
lret
jns
call
mov
jb
rorb
add
pop
mov
dec
jmp
leave
insb
cmp
jl
adc
loopne
dec
adc
or
insl
je
mov
nop
inc
in
mov
xchg
or
cmp
fisttps
and
mov
xchg
push
repz
mov
cmp
jnp
push
jmp
stc
ja
in
sbb
cld
xchg
lods
rclb
scas
push
mov
rcrl
je
ja
scas
ret
add
add
cmp
push
push
inc
lea
mov
mov
xchg
notb
xor
pop
jge
and
mov
mov
cli
iret
call
cmp
jb
fdiv
jbe
imulb
aas
add
outsl
faddl
dec
test
mov
mov
scas
mov
test
arpl
xor
mov
add
loope
pop
insb
jmp
push
or
cmp
imul
push
add
addr16
or
inc
mov
mov
popf
add
cld
xchg
add
pop
and
add
adc
arpl
mov
leave
popa
or
push
jl
es
xor
dec
jle
shlb
mov
mov
mov
add
push
cmp
divb
orb
js
aam
orb
incb
out
lock
jno
mov
fwait
nop
pop
sahf
lcall
test
and
nop
add
sub
mov
aas
inc
xchg
push
fsubrs
leave
pop
mov
adc
sub
dec
out
pusha
sub
adc
jmp
addr16
mov
jno
adc
xor
inc
jns
jo
lods
jle
negb
lcall
dec
es
test
in
sbb
xchg
cmpsl
xor
push
shll
sbb
xchg
cli
and
fdivs
ret
out
or
lret
jg
test
lods
push
add
and
jb
int
inc
fstl
ljmp
jbe
dec
nop
push
push
push
jae
push
test
xor
push
xchg
leave
xchg
mov
jge
jecxz
bound
sub
inc
dec
imul
inc
aaa
imul
negb
fsubs
xor
dec
movsl
fiadds
cmp
adc
or
sti
inc
idiv
and
xor
cmp
xchg
push
popf
adc
mov
adc
aam
push
out
or
push
jmp
fcomps
sahf
andb
out
cwtl
pop
daa
iret
addr16
dec
inc
mov
aam
xchg
push
cmp
pop
out
sbb
sbb
stos
and
adc
aas
inc
sbb
push
push
add
ret
ret
mov
xor
mov
and
adc
loop
dec
mov
xchg
xor
mov
daa
mov
mov
daa
xchg
pop
nop
and
sbb
outsl
in
jbe
insl
call
mov
fisubrs
pushf
iret
pop
or
cmp
subb
add
xchg
xor
and
ret
xor
cmp
inc
sti
arpl
test
cmpl
fcmovbe
aas
mov
add
xchg
sub
out
xorl
or
sarl
data16
xor
mov
test
scas
iret
inc
push
push
int3
das
nop
ds
daa
popf
sub
icebp
sbb
pop
push
test
jp
rcl
jns
in
ja
pop
frstor
test
jno
xchg
das
mov
pop
in
mov
mov
mov
into
cmp
lds
iret
bound
ds
shrb
pop
movsb
roll
aam
mov
das
lahf
mov
push
or
mov
mov
mov
repnz
test
pshufw
xlat
pusha
pop
cwtl
cmpb
into
out
and
aam
sub
shlb
sbb
push
xor
or
mov
mov
push
sbb
mov
sti
aad
fcmovne
lret
outsl
ljmp
dec
jp
xor
pop
jns
or
xchg
loop
xor
jg
cli
imul
ret
pop
xchg
cli
xchg
mov
lcall
cmpl
and
jmp
adc
imul
in
mov
push
xchg
scas
lods
lds
adcb
movsb
pop
mov
dec
repz
scas
ljmp
xor
shll
jnp
inc
jge
call
mov
lds
add
shrl
test
decl
into
jae
dec
int3
mul
dec
mov
not
mov
add
in
xor
das
jmp
jp
xor
push
jl
push
stc
dec
fstp
push
aad
mov
pop
mov
jge
jne
fisubl
mov
pop
adc
and
inc
pop
sahf
hlt
cmp
cmp
loop
jge
xorl
mov
inc
ficoml
imul
cmpsl
push
cwtl
movsb
xchg
and
pushf
and
xchg
mov
les
dec
fcmovnu
pop
cmp
dec
ret
movsl
sahf
mov
pushf
cwtl
scas
nop
lods
mov
push
and
mov
mov
inc
test
xor
xchg
adc
clc
mov
inc
in
adc
or
fucomip
outsl
std
jp
or
xchg
or
lock
popw
inc
aad
mov
je
fs
jns
ss
call
and
sbb
test
das
inc
clc
mov
add
sub
idivl
js
mov
cmp
repz
xchg
xor
stc
pop
iret
jo
pop
mov
jmp
push
cltd
cmpsb
mov
out
ds
adc
push
fcompl
push
adc
mov
lahf
xor
xchg
pop
aam
arpl
and
daa
pop
loope
leave
mov
or
dec
xchg
push
jb
inc
sub
add
mov
outsb
nop
add
sbb
pop
sbb
pop
lret
mov
and
push
lea
outsb
fidivs
ja
sub
dec
xor
idiv
jl
and
movsl
mov
imul
adc
mov
paddw
cltd
mov
cwtl
fmull
movl
int
dec
xchg
mov
push
cltd
dec
cmp
xor
and
jmp
add
test
mov
mov
pushl
cli
mov
sahf
rcrb
pop
repz
popa
repz
or
dec
mov
dec
jg
lret
lcall
xor
mov
out
test
sub
imul
pop
out
mov
push
and
pop
insb
mov
pop
mov
cld
xor
jle
pop
ficoml
sbb
lahf
mov
cmp
cmp
mov
std
adc
stc
pop
push
mov
fs
push
popa
roll
push
out
dec
cmp
div
test
mov
repz
add
add
xchg
fnstcw
adc
ljmp
adc
dec
dec
addr16
mov
mov
nop
insb
or
fsubrl
bound
sbbl
cmp
cmp
call
fcoms
cltd
bsr
cld
or
negl
xlat
sbb
dec
sbb
lret
testb
push
jl
je
mov
sub
add
clc
pushf
sbb
popf
sub
in
ljmp
cmp
das
mov
dec
divb
in
cld
push
xlat
repnz
mov
dec
xchg
sbb
popa
bound
ja
push
sub
pop
test
adc
fisttps
pop
fstp
insl
dec
stc
pop
fisubrl
push
bound
dec
outsb
pusha
cwtl
int
pop
aam
pop
dec
hlt
fwait
sbb
xchg
ret
test
add
pop
inc
push
add
stc
inc
jle
dec
into
ljmp
jle
je
inc
mov
shrb
dec
xchg
jecxz
push
and
stc
pop
or
cli
sahf
push
shll
orl
addr16
mov
fldl
cli
xor
in
xchg
jns
nop
pop
pop
ds
outsb
or
mov
jl
cmpsb
ret
mov
jmp
dec
jbe
in
push
repz
lcall
aas
test
push
mov
dec
pop
sub
sahf
popf
sti
aad
and
sbb
mov
add
push
jo
cmpl
aaa
sbb
inc
or
cmpl
push
xchg
jmp
or
das
mov
insl
sub
pop
in
stos
scas
pop
xchg
nop
xchg
mov
mov
repz
adcl
jbe
add
daa
sub
repz
and
xchg
pop
pop
xchg
cld
arpl
or
clc
xor
mov
add
ds
mov
cmp
adc
insl
mov
xor
or
or
sbb
inc
mov
mul
xchg
sub
imul
hlt
mov
mov
adc
popf
mov
add
pop
inc
jmp
dec
ja
mov
and
dec
lea
in
fistl
je
add
es
int3
iret
mov
or
sahf
cmpsl
cld
xchg
mov
aaa
xorl
jns
cli
xchg
std
leave
or
inc
push
popa
cmpsl
into
push
mov
imul
inc
das
pop
dec
inc
popa
movsl
adc
xor
jne
add
xchg
push
pop
leave
shlb
fs
rcll
scas
cld
mov
adc
push
lea
mov
popf
mov
shrl
cltd
mov
jmp
out
add
repnz
or
dec
js
mov
out
fmuls
xor
lahf
ret
std
pop
lahf
pushf
loop
dec
adc
bnd
add
das
or
push
lahf
or
jge
rol
adc
jno
jg
xor
push
adc
push
cmc
add
jo
fistpll
inc
mov
push
dec
test
lret
mov
mov
sbb
ficompl
jo
stos
sti
jg
push
dec
add
enter
inc
clc
repz
and
or
sti
pop
arpl
test
add
fcoml
cmp
lock
insl
leave
shl
and
xor
loop
jne
sbb
mov
pop
mov
push
mov
and
int
mov
lods
jno
orb
lock
pop
jmp
hlt
xlat
cld
add
call
cwtl
fcomps
pushf
dec
loop
pop
xchg
jne
mov
loope
out
data16
rorl
push
gs
sti
aam
inc
dec
and
jmp
and
fwait
push
out
js
dec
movsl
loope
imul
fisubrl
and
adc
test
cltd
outsl
lds
xchg
push
js
movsl
or
mov
push
add
sti
iret
xlat
vmwrite
or
ja
fmull
adcb
and
jge
pop
add
adc
loope
hlt
push
pop
xlat
dec
jle
insl
jg
fiadds
jl
add
out
fstpt
mov
repnz
es
aam
sti
pop
cmc
gs
and
jl
movsl
les
pop
mov
cmpl
mov
jns
popa
add
scas
dec
inc
jns
shrb
xchg
imul
push
jp
repz
dec
mov
mov
repnz
mov
insl
fisubrl
mov
ftst
leave
mov
add
push
hlt
xchg
les
add
jae,pn
out
pop
test
push
ret
movsl
call
iret
test
inc
lahf
jl
inc
insl
out
flds
pop
mov
cmp
xlat
jg
xchg
decl
arpl
mulb
clc
or
loope
or
push
inc
sub
mov
sbb
fidivrs
fsubrl
jmp
ficoml
out
adc
gs
ljmp
pop
lds
test
adc
pop
dec
jne
out
pop
aam
sbb
adc
xor
mov
inc
aas
or
lods
jns
xchg
sbbb
xchg
bound
push
or
mulb
inc
bnd
arpl
push
test
push
stos
rcrl
daa
lds
push
movsb
add
xchg
les
push
mov
mov
dec
in
call
jnp
sbbb
cmp
jno
popa
lret
les
loopne
mov
mov
out
dec
add
insb
pop
fisubl
pushf
fstpt
adc
jmp
cli
inc
sub
data16
push
inc
pushf
imul
jle
rcl
imul
lret
xor
data16
xor
je
adc
adc
shlb
jmp
sbb
leave
add
jnp
cmpsb
aaa
push
add
es
pop
cs
js
dec
mov
or
icebp
xchg
mov
dec
adc
mov
repnz
and
pop
mov
or
addb
movsb
xchg
enter
test
ficoml
sub
pop
dec
cli
lret
repnz
aad
mov
jecxz
cmp
lods
mov
mov
test
fs
mov
dec
xadd
jbe
icebp
jbe
lods
dec
xor
std
push
hlt
addr16
cs
sub
add
inc
mov
dec
test
pop
insb
dec
imul
fs
aaa
rol
pop
adc
jl
fcomps
sbb
popf
push
adc
or
or
imul
jle
push
fdivs
scas
cmp
imul
mov
push
arpl
test
ds
sbb
push
jns
push
push
mov
xchg
cmp
movsl
dec
xchg
ljmp
mov
xchg
fsts
or
bound
mov
orl
sti
push
js
cwtl
ret
fdivrl
sti
mov
inc
adc
in
jo
mov
pop
dec
and
cmp
popa
pushf
repnz
call
test
mov
cmp
incb
in
stos
out
fildll
sbb
cwtl
push
cmp
push
mov
or
lds
jmp
cmp
and
out
adc
ss
and
pop
adc
pop
adc
push
hlt
sahf
iret
gs
scas
mov
jae
cmpsb
repnz
ret
cltd
out
xchg
push
mov
mov
movsb
leave
sbb
xchg
cmp
into
adc
mov
ja
stc
inc
sub
dec
mov
dec
inc
or
mov
pop
addr16
xor
bound
push
mov
sbb
dec
js
fwait
and
or
cld
inc
pop
xchg
sahf
loop
xor
je
stos
ljmp
jne
shll
pop
repnz
pop
ds
add
push
dec
jns
das
sbb
pop
aam
push
mov
lods
and
mov
jbe
fs
shrl
cmp
dec
inc
in
das
fbld
mov
sti
pop
test
bnd
sbb
pop
mov
mov
mov
imulb
pop
mov
mov
inc
push
or
adc
mov
xchg
lretw
mov
fisubs
jg
scas
mov
ret
fisttpll
lea
out
call
push
jae
into
sbbb
imul
inc
repnz
addr16
or
daa
imul
jns
pop
pop
xchg
rolb
mov
dec
sbb
cmp
inc
ja
loopne
gs
stos
test
push
cmp
and
int3
nop
ds
in
out
push
xchg
dec
mov
mov
in
addr16
cmp
push
int3
push
lods
sub
es
cmp
add
jp
jno
daa
cmc
in
mov
sarl
outsl
adc
in
mov
lahf
mov
cmp
lcall
insb
push
cwtl
hlt
pop
lods
lea
fidivs
mov
daa
ja
js
ret
in
sub
outsb
subl
add
pop
popw
cs
xor
cmc
ret
cli
push
popf
lods
nop
push
out
mov
enter
inc
cs
mov
jbe
pop
or
repnz
jmp
sub
push
jle
cmp
shll
pop
inc
fcompl
sahf
adcl
pop
jle
or
add
mov
push
jmp
je
inc
push
orb
and
inc
inc
xor
gs
add
adc
iret
jp
aaa
push
and
add
inc
repnz
lcall
xor
inc
fwait
sub
xchg
loop
movsb
loope
popf
dec
adc
pop
xor
pusha
jle
fcomps
push
cwtl
cmp
ret
xlat
addr16
insb
push
callw
stos
rcrl
mov
clc
std
xchg
xor
pop
aad
lds
movsb
mov
jp
repnz
incb
popf
int3
pop
fdivrs
jb
cwtl
and
fsubl
es
sbb
not
xlat
lret
out
out
icebp
test
repz
test
xchg
xchg
add
lods
cmc
out
push
sbb
pusha
pop
and
mov
or
adc
rcrb
mov
pop
rol
and
movsl
sbbb
in
popf
scas
mov
int3
push
int
push
roll
sbb
loopne
xor
jle
xchg
repz
lret
cmc
cltd
pop
in
js
jle
or
jbe
sbb
shrl
pop
out
dec
mov
add
imul
cltd
mov
lahf
int
aad
test
pop
pop
out
xchg
in
lcall
push
out
push
into
aad
inc
mov
stos
cmp
leave
xchg
push
mov
push
out
dec
pop
and
and
mov
popf
sub
mov
sar
dec
jno
sar
fmull
sub
dec
shll
push
loope
inc
pop
inc
rclb
cmp
lods
cmp
jl,pt
out
ja
enter
mov
add
call
mull
enter
test
fidivrs
lds
ds
fcoms
xchg
ss
cli
push
xchg
dec
ret
push
mov
mov
std
xchg
xor
xor
xchg
es
std
or
jae
ss
pushf
xlat
in
gs
clc
cmp
je
scas
xchg
adc
jb
pop
ffree
and
std
ljmp
arpl
stos
pop
icebp
ss
sbb
fs
sbbl
push
dec
xor
jecxz
jmp
aas
jnp
mov
clc
addr16
mov
adc
lds
pop
inc
mov
sbb
dec
fstpl
js
pop
mov
cmp
mov
stos
mov
imul
dec
movsl
icebp
pop
idivl
fildll
lods
ja
push
pushf
xchg
pop
in
xor
or
add
mov
lahf
mov
sub
jl
mov
and
mov
es
push
xchg
dec
mov
sub
jl
adc
dec
faddl
cwtl
dec
mov
pop
loop
div
mov
inc
or
mov
insl
adc
pop
out
imul
cli
jo
push
push
in
inc
jmp
lret
fs
mov
cmp
inc
push
add
rol
mov
mov
sub
mov
xor
ret
adc
fs
out
int3
push
mov
jg
bound
punpcklbw
jle
xorb
stos
in
xchg
mov
push
test
nop
pop
cmpsl
lahf
arpl
xor
js
lret
xchg
fstps
cs
stc
scas
rorb
or
cltd
cmpsb
xor
roll
filds
or
inc
lcall
sub
in
mov
inc
and
movsl
lock
dec
or
adc
push
dec
jg
cmp
jl
ja
add
imul
jp
fmuls
addr16
in
or
mov
mov
test
scas
dec
scas
aaa
cmp
adc
and
adc
popa
xchg
xor
push
daa
push
repz
xchg
popa
cwtl
in
xor
cmp
out
xor
outsl
fwait
pop
sbb
xor
adc
ds
sahf
inc
cli
dec
cld
xor
jp
inc
sub
xchg
pop
std
test
add
sbb
or
mov
sahf
xor
in
out
and
sbb
push
inc
sar
clc
sarl
outsl
les
pop
fbld
push
icebp
dec
mov
mov
mov
dec
mov
and
imul
adc
rolb
sbb
int3
in
dec
push
icebp
scas
adc
jns
cs
mov
and
test
sti
jg
push
icebp
pop
jne
shrl
lahf
out
lcall
add
jno
mov
fdivl
mov
mov
dec
frstor
push
and
fistl
mov
inc
add
int
push
mov
psrlw
jns
ss
sub
adcl
cld
mov
cmpsl
mov
jb
mov
push
or
pushl
mov
test
or
mov
sarl
push
mov
loope
and
fmuls
daa
mov
fucomi
jnp
xchg
pushf
mov
hlt
aam
orl
aad
nop
push
js
sub
dec
or
sahf
dec
dec
xchg
cltd
push
cmovo
loop
subl
mov
fwait
jecxz,pn
jbe
out
cmp
mov
aad
mov
or
mov
pop
adc
sub
ret
in
jne
pop
lahf
xchg
aas
add
mov
dec
jns
sub
bound
js
lcall
xor
popa
xor
cs
popf
int3
cvttps2pi
jle
incb
pusha
push
adc
xchg
cvtdq2ps
gs
pop
sar
lods
les
mov
sub
test
es
out
fdivr
cmp
lret
cmpsb
repz
push
cmp
xor
mov
or
jmp
in
adc
in
rcl
adcl
aas
or
sub
push
pop
jmp
push
dec
imul
pop
mov
scas
js
or
adc
sbb
add
jns
mov
fwait
rcl
rolb
sbb
lock
pushf
mov
push
pop
jb
add
inc
das
pop
jb
jb
dec
mov
gs
les
ljmp
scas
pop
test
or
outsb
xor
shl
movsb
mov
outsb
arpl
sub
ret
je
daa
ret
pop
test
movsl
inc
cltd
xor
xor
test
sbb
add
pop
sbb
jmp
test
xchg
loope
fdiv
cwtl
jg
mov
or
add
inc
out
xchg
fucompp
test
pop
dec
mov
mov
mov
into
repz
or
mov
jg
or
dec
push
sbb
arpl
jnp
mov
jge
adc
jmp
stos
ret
ret
aas
mov
jb
jns
sbbb
imul
adc
dec
je
xchg
xchg
pop
jge
fnstsw
aad
jb
cmp
mov
repz
and
mov
das
pop
mov
sub
imul
cwtl
mov
lock
ret
xchg
cmpl
flds
or
ss
roll
mov
jns
shlb
pop
mov
aad
or
cmpsb
mov
lods
fdivrl
lods
add
dec
out
xchg
lds
pop
sub
xchg
xor
scas
mov
jg
xor
xchg
adc
cmp
loop
push
dec
jmp
inc
popf
je
push
mov
outsl
or
shlb
lcall
jbe
mov
subb
test
add
rcrl
mov
aas
pop
lea
cmp
lods
pop
cmp
insb
cmp
fdivrs
clc
cli
mov
addl
xor
xor
sub
sub
sub
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
xor
neg
mov
mov
mov
add
orl
imul
subl
mov
mov
mov
adcl
add
sbbl
or
xor
mov
mov
and
mov
orl
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
jmp
rcrb
iret
ja
jno
into
fidivs
cli
mov
xor
jp
pop
jp
rep
dec
cld
add
enter
cltd
popf
sub
jl
or
mov
xchg
ljmp
lret
outsb
mov
pop
mov
xchg
les
aad
flds
or
in
push
pusha
iret
pop
pop
fwait
add
lods
cmpl
pop
arpl
adc
xchg
dec
jg
xchg
push
jp
lret
pause
out
pop
orb
call
rorl
and
mov
mov
jno
or
mov
pop
push
in
addr16
lahf
popa
add
adc
add
push
sahf
ja
ss
bound
mov
push
push
movsb
mov
pop
icebp
jg
ds
push
pop
scas
jp
mov
push
xor
inc
inc
cwtl
sub
hlt
inc
xchg
dec
pusha
mov
cmp
cli
loope
gs
fldl
adc
dec
and
and
xchg
pop
cmp
pop
imul
test
lret
fstps
mov
mov
mov
repz
xor
roll
aad
pusha
loopne
lret
lds
orb
roll
adc
aas
lods
outsl
cmpl
pop
jns
jns
decb
dec
add
cmpsl
jmp
jge,pt
inc
xor
icebp
imul
xor
cmp
mov
dec
sub
lods
pop
popf
imul
inc
out
iret
dec
mov
xchg
jbe
jp
adcb
aad
stos
gs
das
arpl
jb
loope
mov
cltd
dec
pop
adc
ret
paddd
ret
in
jecxz
add
sbb
insl
outsb
mov
out
sti
aad
lret
jae
xchg
push
popa
add
mov
sahf
ss
cmp
jecxz
stc
xchg
xchg
ja
mov
jno
outsb
push
or
xchg
or
and
and
mov
sub
jae
add
rclb
mov
stos
push
inc
jnp
or
jg
je
push
xchg
fcomps
adc
jbe
or
dec
aas
xchg
out
mov
pop
push
jmp
insb
dec
xor
push
stc
mov
push
cmp
sarb
dec
mov
jmp
cmpsl
pop
mov
clc
popa
cmpsb
pop
jne
rcrb
pushf
stc
mov
xor
add
adc
mov
push
cli
test
fucom
jp
in
pop
insl
push
sub
cmp
inc
out
push
pop
sbb
xor
xlat
mov
fadds
aaa
lret
xor
pushf
fcompl
cltd
fs
pushf
dec
and
mov
icebp
cwtl
enter
inc
mov
pusha
outsb
lds
cmpsl
xchg
xchg
loope
pop
ret
sbb
jb
leave
fbstp
cs
out
daa
mov
lods
in
or
xchg
or
aaa
data16
aam
popa
test
es
lock
stos
xor
and
mov
repnz
addr16
outsl
pop
shld
jne
test
sbbb
add
std
lods
xor
cmpsl
pusha
and
jle
lods
repnz
imul
arpl
xor
jecxz
scas
fs
adc
testl
test
aaa
mov
xor
dec
gs
outsb
sti
push
andb
jns
and
push
div
dec
subb
das
mov
mov
cli
test
mov
fildl
dec
das
leave
fnstsw
push
out
jbe
and
mov
mov
gs
int3
daa
mov
lret
push
lcall
sub
leave
and
in
xchg
sbb
daa
mov
sub
mov
divl
mov
out
sub
or
dec
adc
hlt
jmp
sub
mov
mov
js
xor
aaa
mov
cmp
push
lock
stos
je
outsb
dec
icebp
gs
jb
pop
or
cs
flds
das
xchg
xor
mov
xchg
or
add
and
xor
xor
push
push
testl
adc
pusha
dec
fwait
cld
mov
scas
cltd
mov
lret
sarl
test
cmpsl
inc
inc
pop
cltd
xchg
movsl
and
xlat
scas
xor
ret
lods
nop
sub
ret
cmpsb
cld
or
fldl
out
inc
pusha
mov
in
nop
pop
mov
mov
negb
adc
mov
pop
add
cmpsb
inc
loop
cwtl
pop
jo
mov
sbbb
dec
jmp
scas
dec
sub
in
push
sbb
imul
dec
mov
inc
pop
cmp
add
repz
lret
xor
mov
add
jnp
cwtl
xchg
sub
out
pop
fistpl
sbb
fucomi
mov
adc
add
push
sarb
ljmp
mov
cs
sbb
stos
in
inc
dec
adcb
cwtl
add
lret
in
scas
inc
rcrb
inc
test
sub
into
cmp
lahf
orb
jg
add
lret
push
pop
ret
or
jmp
cmp
flds
ret
mov
mov
ret
movsb
orl
and
sub
jne
mov
sub
jl
insb
inc
cmp
movsb
loop
cmp
clc
push
adcb
push
data16
add
fs
popa
testl
xor
and
icebp
xor
ljmp
repnz
aaa
mov
das
add
jge
add
jb
sbb
inc
add
and
lock
sub
insl
sbbl
data16
cmpsb
stos
cmpsb
iret
adc
mov
cmc
fistl
cs
mov
rorb
scas
jle
aas
mov
pop
jo
jnp
subb
adc
nop/reserved
push
dec
ret
adc
fldcw
sub
jae
dec
cmpsb
lock
call
cmpsl
pop
sub
std
idivb
push
cmp
cmpsb
stos
jmp
sub
icebp
loope
pop
and
lea
mov
inc
test
xchg
and
dec
mov
and
jg
std
movsl
adc
aaa
inc
outsb
push
inc
mov
cld
or
jle
push
aaa
jecxz
pop
das
jl
fidivrl
cmpsl
sbb
cmc
or
xchg
popa
push
repz
aas
pop
push
xor
sarb
scas
mov
inc
pop
aam
push
dec
cmpsw
iret
mov
xchg
or
enter
movsl
jmp
inc
and
mov
popf
gs
lds
fdivrl
push
inc
jp
adc
and
jl
lods
xor
jno
div
subb
mov
inc
fadds
cmc
rolb
movsl
je
sbbl
int
adc
dec
int3
call
daa
pop
jae
pop
push
or
scas
xor
es
add
js
jne
jmp
mov
jbe
bound
dec
stc
notl
push
scas
lods
test
and
adc
test
addb
add
loopne
repnz
mov
std
movsb
iret
cmp
cmpsl
mov
push
and
adc
loop
mov
push
cmp
adc
cmp
mov
push
inc
inc
push
dec
xchg
in
pop
scas
stc
jg
shlb
shll
idiv
dec
jae
dec
leave
mov
xor
cmpsb
xchg
inc
stc
and
mov
pop
xchg
cwtl
sbb
inc
pop
cltd
rcll
adc
mov
pop
out
ja
adc
jle
cmp
mov
test
jl
or
sti
imul
shll
clc
cli
push
cs
mov
sub
push
dec
pop
fs
fistl
lret
mov
ss
ja
out
dec
cmpb
cmp
fldt
xor
daa
pop
add
loop
in
sbb
in
or
mov
jmp
mov
mov
push
xor
fnsave
xlat
in
bound
dec
push
push
inc
ss
out
xchg
ffreep
mov
jl
jmp
sbb
push
ret
mov
pushf
xchg
inc
xorl
push
push
adc
push
repz
int
add
imul
js
pop
mov
pop
xlat
pop
mov
into
in
mov
js
insl
orl
dec
adc
clc
fmull
xor
in
mov
adc
out
ret
push
hlt
les
cmpsb
push
fisubs
xchg
add
jmp
dec
xchg
stos
mov
mov
enter
imull
or
pusha
iret
sbb
or
pop
or
jno
jg
aaa
popa
pusha
pop
mov
out
stos
in
add
and
outsl
rcl
sub
xor
das
hlt
mov
jmp
mov
inc
iret
fcompl
in
sub
fiadds
sbb
sahf
in
mov
jge
test
std
lds
adc
data16
sub
andb
push
mov
mov
subl
mov
dec
shlb
jae
xchg
insl
cwtl
addr16
dec
les
out
xchg
in
fsubrs
add
lret
movsl
mov
jg
sub
or
mov
mov
scas
jns
es
fbstp
adcl
mov
mov
int3
and
xchg
popf
and
cltd
mov
je
shl
sub
mov
xor
or
and
sbb
cmc
push
push
xchg
lods
scas
imulb
movsb
cmp
sub
inc
cmp
mov
fmull
sub
int3
js
js
jecxz,pn
testl
cmp
outsl
out
fs
loope
in
and
push
testl
xor
pop
xchg
lret
bound
jecxz
out
adc
push
orl
inc
pop
out
icebp
xchg
mov
clc
cld
or
cltd
mov
pop
sub
test
sub
xchg
or
mov
dec
pop
into
sub
mov
fildll
mov
jb
jmp
sub
and
sub
roll
inc
int3
ret
jle
inc
pushl
hlt
cmp
out
mov
and
mov
fbstp
stos
shl
push
push
fwait
cltd
pop
mov
jmp
cld
ljmp
dec
push
sbb
mov
jnp
mov
mov
inc
adc
sub
clc
repz
lcall
xor
jb
fs
adc
loopne
ds
sub
ss
mov
ds
stc
cmp
lods
outsl
ja
movsb
pop
lret
mov
lods
sti
push
les
push
adc
add
dec
repz
iret
jnp
inc
dec
and
test
dec
xor
adc
sbb
loope
loopne
outsl
pop
mov
mov
mov
xchg
and
push
test
jae
jno
lahf
addr16
lock
sti
inc
fdivrs
je
push
test
sbb
xor
sub
sti
jp
cmp
pop
fildl
sub
cmc
hlt
inc
pop
repz
push
jnp
ror
loop
cmpb
lcall
pop
das
add
xchg
dec
or
cwtl
cmc
stos
and
subb
lret
pop
incl
jle
and
addr16
mov
dec
or
fsts
cmpsb
push
sub
aam
sub
loopne
imul
rolb
insl
or
pop
mov
sbb
pop
mov
bound
jo
inc
mov
hlt
sub
lods
mov
nop
add
test
fwait
mov
dec
rorb
and
push
pop
mov
and
jecxz
sub
jnp
test
cmp
sbb
inc
out
leave
push
cmp
push
outsb
test
add
sbb
inc
imul
cmc
push
cmp
push
aad
into
mov
cmp
xchg
xor
in
ss
or
cmc
leave
out
xor
stos
ss
out
jnp
ficomps
xor
sub
scas
loop
xchg
aas
pop
les
das
dec
sahf
outsl
mov
dec
pop
mov
das
in
sub
xor
ds
ja
mov
pop
rorb
pop
xchg
fnstsw
int3
scas
add
addr16
sub
and
cmpsb
sub
arpl
cmp
imul
lea
adc
push
and
and
in
jns
dec
dec
daa
fmuls
add
outsb
adc
into
das
sti
adc
mov
and
adc
fwait
enter
push
push
jp
loopne
adc
cs
jns
fdivrl
cld
pop
lea
ljmp
movsb
repz
push
scas
sti
add
wrmsr
inc
gs
repz
movsb
aas
jns
push
shrb
push
test
ds
mov
pop
rcl
fldcw
jecxz
or
cmp
pop
lods
adc
mov
and
sub
fldenv
dec
rcll
into
cmp
mov
jb
cmp
adc
mov
out
js
cld
loop
insl
ja
lret
sbb
out
pop
data16
mov
mov
mov
fadds
dec
mov
pop
adc
lcall
shrb
pop
faddl
cs
mov
rcl
outsl
call
xchg
or
adc
xchg
loope
pop
push
aas
shll
stos
adc
mov
dec
and
pop
out
aam
nop
rcl
call
jae
mov
icebp
hlt
outsb
adc
mov
jae
and
jo
les
sbb
stos
cwtl
int
jb
xchg
clc
add
xchg
and
xor
push
out
cli
imul
cmpsl
or
in
xor
push
arpl
mov
pushf
adc
xor
jecxz
inc
shll
mov
sub
and
sbb
js
ret
cli
jno
lea
ljmp
int
test
xchg
xchg
add
and
and
mov
pop
sbb
pop
cwtl
push
and
and
add
out
jle
push
test
add
jns
add
push
int3
and
inc
xchg
mov
sub
pusha
pop
imulb
aad
pop
fists
or
cmc
loop
xor
dec
adc
push
fnstcw
xchg
mov
push
mov
dec
mov
fdivrl
fists
cmp
in
mov
sahf
push
jge
mov
mov
pop
jmp
iret
push
ljmp
xchg
pop
push
in
adc
adc
adc
pop
pop
mov
into
sbb
mov
jle
and
subl
pusha
lcall
nop
jge
divb
inc
push
lea
cs
mov
adc
sbb
or
adc
xchg
rcll
pop
adc
mov
lret
or
pop
in
aam
fnstcw
ja
ss
pushf
xor
jmp
pop
loopne
pop
jbe
test
xor
aam
fdivl
xor
adc
pop
adc
pop
cmpsl
pop
cmpsb
jo
or
outsb
xchg
cmpb
into
pop
imul
jno
mov
cmc
int3
xor
dec
mov
cmpsl
sub
lahf
mov
icebp
mov
mov
stos
mov
sarl
in
dec
xchg
into
and
dec
mov
mov
into
jl
xchg
insb
fstpt
cs
add
ljmp
sub
out
dec
cltd
test
add
daa
ret
xor
aaa
cmp
pop
adc
mov
aam
data16
or
and
push
insl
and
xchg
inc
mov
cmp
aad
jns
pop
jo
add
mov
ret
out
pop
inc
fisubl
xlat
mov
adc
adc
jne
inc
ljmp
or
cs
in
xchg
aad
pusha
adc
push
arpl
and
xor
mov
bnd
dec
pop
pop
add
push
fstpl
sub
stos
mov
nop
in
dec
out
sbb
jns
fidivl
call
cmp
push
mov
add
mov
orb
popa
fdivs
cmc
adc
sbb
ljmp
mov
inc
dec
imul
jg
into
jmp
mov
mov
test
or
aad
ror
dec
jle
xlat
mov
icebp
cmp
pop
into
movsl
xor
sbb
mov
dec
push
xchg
adc
out
ffreep
mov
xchg
add
cld
aaa
xor
sub
add
mov
icebp
into
push
sub
mov
pop
xchg
aam
ja
mov
lods
jg
aas
ljmp
lea
sahf
insb
cmc
jns
inc
pop
inc
loope
mov
das
push
adcl
in
sbbb
adc
mov
add
or
mov
xor
adc
js
test
mov
jl
sahf
dec
imul
or
addr16
mov
push
lcall
xchg
add
aam
ds
fiaddl
daa
ftst
cltd
stc
fidivrs
lds
bound
mov
setp
stc
xchg
lret
pop
sbb
mov
not
int3
adc
inc
in
push
adc
sub
in
inc
xor
push
and
pop
lds
in
jno
icebp
pop
lods
xor
and
xchg
mov
imul
dec
sahf
cmp
inc
test
sub
add
rcrb
jecxz
repnz
imul
or
jae
in
xchg
or
xchg
xchg
sub
inc
cmp
insl
loop
fcomi
outsb
inc
ds
js
xor
loopne
sbb
in
mov
fistps
pop
jo
into
movsb
jo
shl
fwait
xor
cwtl
cmp
repz
xchg
xrelease
mov
sub
repz
jle
ja
int3
dec
roll
fs
push
mov
loopne
cld
sub
cmp
adc
dec
fabs
ficomps
mov
enter
cmpsb
mov
dec
fistps
nop
sub
xchg
jb
testb
mov
jge
and
enter
jno
mov
mov
pop
mov
shlb
insl
aaa
and
sahf
mov
pop
shrb
popa
pop
les
es
xchg
aad
out
sub
mov
add
fistl
pop
push
mov
aaa
out
pop
mov
inc
jnp
mov
fwait
js
adc
negb
jmp
push
inc
pushf
xchg
adc
inc
sbb
sub
arpl
dec
sub
cs
out
test
push
aam
cld
mov
xor
ljmp
inc
cmp
inc
imul
push
push
sahf
outsb
sub
ss
mov
adc
mov
adc
mov
fnstsw
rcrb
out
pop
sti
arpl
lcall
pop
sbb
js
pusha
out
xchg
pop
xchg
out
dec
orl
and
mov
mov
pop
scas
inc
dec
fstpl
call
and
and
cwtl
mov
mov
push
push
popa
test
add
js
xchg
out
aad
outsl
imul
dec
xchg
in
push
lods
pop
add
pop
push
int
jle
repz
rdmsr
js
rcr
sub
std
add
push
and
nop
popa
frstor
mov
aas
daa
push
popa
cmp
pop
leave
lock
pop
jo
test
xor
push
in
and
ss
mov
xor
scas
lret
mov
dec
daa
outsb
fcmovnb
add
sahf
and
push
jg
js
inc
aad
cld
xchg
xchg
sbb
sub
frstor
clc
adc
add
sbb
int3
aam
in
outsb
imulb
pop
pop
inc
popf
ja
sub
push
jne
test
orl
ja
push
xchg
lods
fcomps
adc
jo
cmc
repz
fwait
imul
shlb
inc
push
add
jae
cmp
test
pusha
cwtl
int
mov
mov
pop
insl
push
out
mov
pop
push
mov
sub
shr
jae
lahf
movsl
pop
call
jle
nop
mov
mov
adc
leave
or
test
stos
popf
mov
or
add
pop
xchg
stos
pop
enter
mov
and
pop
pop
cwtl
xchg
dec
pop
ja
and
mov
lahf
cmp
mov
xchg
stos
imul
pusha
jns
sti
inc
xchg
repz
lock
insl
lock
adc
stc
daa
mov
gs
dec
sub
mov
fidivl
xor
std
int
xchg
mov
neg
push
hlt
xor
adc
cmp
xchg
inc
sub
dec
out
fidivrl
xorb
push
sbb
xor
imull
stos
in
sub
dec
pop
ret
pop
into
in
fcoms
push
pop
mov
mov
lock
xchg
stos
sbb
fs
test
test
jecxz
repnz
push
lcall
insb
mov
add
pop
in
push
imulb
and
rcll
add
mov
push
loope
lret
hlt
push
in
repnz
lret
mov
pusha
out
pop
mov
or
subb
movsb
loopne
sarl
out
popl
adc
lods
mov
inc
and
lcall
xchg
xchg
lds
adc
out
mov
or
mov
loopne
sbb
mov
add
dec
popf
gs
lods
jns
popf
pop
mov
popa
dec
push
rcrl
push
cmp
shll
pop
mov
pop
jns
xchg
stc
push
daa
jo
ficomps
aaa
fs
jecxz
add
jns
xchg
dec
mov
stc
imul
rorb
ret
cmpsl
aas
push
xorb
cld
clc
fs
jecxz
and
fwait
adc
jp
pop
in
push
inc
xchg
xchg
push
and
mov
xlat
leave
aam
in
dec
mov
fwait
pop
push
push
push
cmp
icebp
sbb
and
jg
fnsave
pop
cmp
pop
jbe
fcmovnbe
xchg
test
mov
xchg
mov
add
mov
add
push
mov
push
imul
and
faddl
outsl
mov
das
cmp
jl
stc
movsb
inc
outsl
and
mov
mov
fistl
mov
sub
popf
out
add
sbb
jb
lret
cmpsl
jbe
stos
xor
scas
xchg
addl
cltd
fdivs
or
repz
aaa
outsl
std
pop
jo
sti
adc
xchg
xchg
jl
setno
sarl
xchg
stos
pop
iret
xor
rcrl
je
mov
clc
aad
xor
lods
cmp
out
mov
shl
pop
sbbb
mov
jns
inc
xchg
push
movsl
iret
cld
push
sbb
in
mov
sbb
inc
xor
shlb
lret
scas
int
repnz
sbb
imul
pop
xchg
adc
xor
mov
lret
cmp
gs
mov
sbb
dec
cld
jl
pop
int3
out
xchg
imul
mov
add
aaa
cmpsb
subl
clc
insl
mov
popa
jge
dec
imulb
das
nop
ss
xchg
mov
sub
mov
cmp
negb
popa
push
pusha
jge
je
movsl
rolb
jmp
rol
dec
mov
lret
dec
sbb
faddl
mov
mov
mov
leave
jmp
hlt
pop
mov
jp
cmp
mov
jbe
fildll
adc
jle
jae
int3
mov
sub
lret
inc
push
iret
loope
jne
sbb
pcmpeqb
inc
mov
fsubr
and
imul
outsb
and
mov
sti
and
fdivrs
test
mov
jecxz
lock
pop
mov
add
fisttps
popa
out
repnz
cmp
adc
fwait
mov
mov
popa
sbb
nop
out
xchg
test
mov
out
rcrl
ljmp
test
adc
adc
or
out
inc
pop
je
mov
fmulp
test
stos
mov
add
mov
sbbl
mov
sub
push
push
inc
clc
jb
std
and
popa
sub
repnz
es
and
push
ret
ret
cltd
movsb
stos
in
lret
jmp
xchg
stc
jg
lret
addl
jg
or
inc
out
sti
rcr
gs
scas
xchg
idivb
in
xchg
jg
mov
enter
test
test
fildll
inc
adc
xor
outsl
or
out
sbb
sbb
pushf
fwait
testl
or
xchg
outsl
dec
jo
ljmp
imul
mov
outsl
pop
addr16
inc
or
push
leave
jmp
sub
jl
xor
or
dec
cs
je
mov
fs
push
fidivrl
push
dec
inc
inc
dec
hlt
xor
jb
xor
jp
ficompl
shll
popa
insl
int
mov
pop
in
in
add
jae
leave
dec
sub
call
add
lds
cmp
pop
cmp
sub
shll
pop
xor
xchg
cmp
aam
imul
sti
addr16
gs
cmp
rolb
loop
inc
lret
out
rcrb
cmpsb
movsl
xchg
in
xchg
arpl
xor
fs
mov
mov
je
cmpsl
inc
mov
mulb
mov
test
jl,pt
or
inc
popf
cmpsl
je
sub
cmpsl
pusha
stos
or
cmp
rclb
mov
aam
xchg
es
jle
fnsave
push
loopne
jnp
les
repnz
ss
pop
mov
jno
mov
inc
int3
pop
fwait
sbb
jp
aad
fbld
xchg
rolb
push
push
and
fistl
js
adc
jmp
sub
test
jge
add
arpl
xor
int
add
iret
adc
adc
andl
rcrb
and
push
fadds
push
ljmp
pop
mov
outsb
insl
pop
adc
sbb
add
or
inc
xchg
roll
push
sub
out
jmp
sbb
scas
in
push
test
cmp
pop
xchg
jo
cli
cmc
inc
repz
cmp
fcmovbe
xlat
test
adc
adc
mov
add
insl
and
into
jno
lods
push
je
or
or
popa
adc
cmp
adc
mov
dec
lcall
in
adc
pop
loopne
add
dec
lahf
outsb
jne
je
lcall
cmp
mov
pop
loop
imul
insl
lcall
xchg
repz
test
push
mov
push
or
jle
mov
call
into
std
push
mov
add
xchg
push
jecxz
inc
sbb
jecxz
aam
mov
push
loop
fdivrl
jle
imul
insb
mov
mov
inc
xor
xor
in
adcb
jb
ficoms
jne
aam
xchg
push
imul
ret
mov
andb
daa
jno
cld
in
mov
xchg
and
pop
xor
jge
mov
inc
jl
sahf
cmp
add
repnz
cmp
pop
in
leave
jae
sub
sub
stos
mov
in
dec
shl
pop
leave
xlat
sub
inc
pop
in
jl
xchg
dec
push
push
dec
and
sbb
inc
scas
inc
es
jne
aas
push
loop
imul
rcrl
xor
jb
and
aas
sbb
call
stos
mov
pop
sub
mov
jae
push
and
add
out
mov
outsl
jl
ds
add
cmp
jb
or
mov
jl
sub
sbb
call
int
sahf
xchg
mov
mov
loopne
shl
mov
xchg
sbb
push
sub
mov
dec
int
sub
sbb
dec
jmp
cmp
iret
lds
dec
cmp
ljmp
push
rcl
mov
clc
add
jbe
jo
or
jg
cmpsl
inc
lods
add
sahf
mov
in
xchg
divb
mov
lahf
mov
add
out
movl
frstor
ret
arpl
inc
out
inc
mov
mov
movsb
adc
lds
jne
xchg
inc
dec
inc
mov
inc
dec
inc
enter
adc
push
stc
sub
hlt
repz
std
sbb
sbb
adc
jle
adc
add
stos
inc
lret
adc
xchg
dec
pop
repz
and
out
lea
leave
inc
test
dec
inc
and
lret
fwait
push
shrb
jo
pause
cmp
ss
xor
dec
sarb
lahf
jmp
inc
push
xchg
add
imulb
dec
dec
daa
dec
pop
adc
loopne
sub
pushf
lret
or
cltd
or
movsb
jg
xchg
les
push
mov
int
xor
inc
or
daa
xor
outsl
push
fadds
lcall
push
icebp
scas
xchg
insl
in
jecxz
rcrl
dec
add
pop
pop
cmpl
jo
mov
dec
cmp
in
sbb
int
mov
cmp
iret
movsb
add
dec
aaa
inc
jge
mov
mov
adc
pop
sub
mov
push
push
adc
arpl
add
pop
xor
mov
hlt
out
ret
pop
and
xchg
pop
cmp
sub
out
pop
and
jl
dec
xlat
sbb
popa
xchg
cwtl
sahf
adc
dec
inc
pop
int3
sub
lods
pusha
popf
mov
daa
cmpb
or
dec
aas
mov
lea
arpl
mov
or
mov
pop
mov
dec
dec
and
imulb
pop
adc
xchg
mov
inc
jns
inc
push
nop
jno
mov
sbb
push
xchg
jno
imul
sub
aaa
dec
jp
movsb
cli
push
mov
jnp
xchg
pop
and
push
repnz
jecxz
inc
cltd
sbb
push
sbb
push
mov
jmp
lahf
push
mov
mov
and
xor
push
outsb
ljmp
fsubrl
shlb
imul
in
arpl
js
outsl
rcl
jnp
bound
test
mov
push
pop
ret
mov
push
cwtl
pop
sub
dec
hlt
or
dec
xor
shrb
pop
test
jl
rcll
das
movsl
and
pushf
pop
ljmp
pop
xchg
int3
outsl
fucomip
push
nop
enter
mov
xchg
clc
xorl
stos
push
sbbb
jno
pop
movsb
insl
in
inc
pusha
cs
push
or
stc
in
and
cld
out
pop
push
xchg
pop
fcompl
xchg
in
ljmp
cmp
inc
es
pop
add
repnz
in
adc
push
adc
jb
int3
cld
test
adcl
test
pop
jp
inc
mov
aam
into
call
pop
sub
insb
push
push
mov
insl
mov
push
cmp
out
enter
js
mov
xchg
out
mov
xchg
sbb
push
push
mov
adc
dec
std
stos
jle
lods
sub
cmc
stc
test
fxch
arpl
mov
out
or
bound
pop
test
lcall
pop
xchg
cld
movsl
sar
cwtl
jecxz
mov
bound
push
stos
test
repz
xor
or
xchg
rolb
cmpsb
in
mov
jo
and
fmuls
push
mov
mov
sub
jne
sbb
les
adc
in
inc
pop
mov
or
imul
jmp
and
out
mov
iret
xchg
out
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
out
dec
mov
jne
jae
or
cltd
dec
lcall
push
pop
jp
xchg
inc
sub
mov
scas
mov
ret
sub
xchg
mov
andb
sbb
scas
cld
xor
xor
outsb
xchg
inc
xchg
pop
or
adc
mov
repnz
and
popa
sahf
dec
jmp
cmp
into
mov
sbb
outsb
mov
xchg
into
jg
scas
fsub
aas
pop
test
icebp
js
rcrb
test
cmpsl
adc
mov
xchg
cmpsl
cmc
std
lock
pop
xor
nop
push
lret
sub
mov
sbb
jge
lds
xor
cmp
pop
sub
sti
insb
mov
mov
enter
and
xchg
lods
xchg
xchg
sbb
lods
xlat
sbb
sbb
cmpsb
shrb
and
ljmp
popf
ret
xor
and
fldenv
icebp
lret
and
push
xchg
stos
xlat
fiadds
sub
cli
mov
lods
push
sbb
imul
out
mov
pop
add
adc
xchg
inc
daa
scas
sub
push
les
jbe
mov
mov
mov
xchg
insl
push
inc
and
mov
insl
inc
jle
sbb
or
jo
arpl
fdivrs
pop
icebp
sub
call
push
in
icebp
lahf
fstps
stos
sub
repnz
mov
mov
xor
aaa
dec
inc
inc
pusha
dec
xchg
pusha
xor
das
xchg
xchg
adc
test
and
jg
lret
ljmp
lahf
imul
outsl
add
ret
lea
clc
psrlq
or
add
aam
inc
pop
mov
dec
pcmpgtw
sahf
jecxz
test
cmc
arpl
call
test
push
xlat
int3
xor
ljmp
pop
or
push
push
stos
ret
pop
xor
add
adc
inc
mov
fstp
inc
push
dec
std
mov
out
es
pop
pop
mov
fnstcw
xor
xor
jns
imul
inc
ficomps
insl
cltd
arpl
jb
mov
pop
or
mov
mov
inc
and
xchg
xor
sbb
out
xor
orb
insl
addr16
cmpsb
mov
mov
cmp
cmp
mov
ret
aas
imul
xlat
lods
iret
or
jecxz
addr16
repz
cmp
mov
pusha
mov
jns
add
xchg
mov
xor
sbb
sbb
mov
and
popl
mov
jecxz
roll
outsl
cmc
or
dec
add
lea
outsb
sahf
xor
cmp
mov
lcall
mov
fcompl
lret
js
out
push
shl
sbb
push
mov
cmp
cmp
dec
stc
push
jo
jb
and
mull
leave
leave
fnstcw
add
ret
sub
dec
cwtl
adc
sub
sahf
sub
mov
inc
ds
sbbb
test
mov
mov
pushl
jns
adc
adc
mov
sbb
cmp
lds
jl
pop
cmp
sbb
mov
lods
mov
or
jno
or
bound
push
dec
mov
mov
sahf
sahf
or
jle
inc
mov
divb
adc
mov
fwait
jno
mov
pop
push
xchg
sub
inc
mov
iret
push
and
adc
ja
add
mov
or
cmp
daa
lods
popf
mov
hlt
xchg
inc
scas
pop
in
and
jo
adc
sbb
xor
stos
push
mov
shl
fisubrl
insl
stos
xor
gs
loope
ja
or
shll
repnz
mov
cmpsb
out
sub
adc
mov
push
out
outsb
dec
hlt
jno
ja
mov
xorb
subb
addr16
in
inc
inc
stos
ret
and
or
les
sub
lret
pop
in
das
xchg
push
or
xchg
or
inc
pop
repz
test
out
sti
xchg
push
outsl
mov
in
ds
cmpl
rorl
push
inc
mov
lret
scas
stos
loopne
movsl
xor
stos
inc
sub
icebp
and
xchg
movsb
test
popf
outsl
in
xor
jle
xor
dec
int
test
js
fisttpl
fnstsw
jnp
insb
mov
scas
cmp
mov
mov
daa
mov
xor
or
cmp
popa
sub
adc
int
sahf
popf
ljmp
sahf
imul
push
scas
mov
out
outsl
sahf
mov
aaa
jp
sub
jne
pop
mov
sub
push
jae
sbb
dec
test
sahf
pop
dec
xor
out
and
xchg
cmp
xlat
mov
jae
ficoms
lock
je
faddl
sbb
mov
inc
cld
mov
or
xchg
movsl
cmp
inc
vpmulhw
mov
adc
jmpw
fistpl
jbe
mov
sbb
sbb
xor
xor
xchg
cltd
inc
pushf
cs
adc
shl
daa
in
sbb
mov
mov
loopne
push
sub
cmp
push
jb
sbb
icebp
out
test
jmp
mov
fistl
ret
lods
daa
pop
lret
jbe
push
out
push
and
pushf
adc
dec
testb
sbb
pop
cli
and
jmp
scas
inc
xor
shrb
xor
dec
push
arpl
push
out
xor
and
sbb
inc
lahf
cli
decb
cmp
mov
inc
pop
movb
sbb
xor
lret
sbb
and
and
sub
mov
adc
sub
sahf
xchg
int
sbb
int3
or
mov
xor
in
lret
stc
outsb
lret
add
hlt
mov
push
sub
jge
idivl
nop
xor
arpl
sbb
add
push
pop
les
inc
sbb
push
in
sub
inc
stc
mov
les
jnp
movb
sbb
push
cmp
xor
fwait
pop
dec
es
repz
ret
negb
outsb
cmp
add
mov
jp
aam
aaa
jbe
adc
pop
leave
insb
jne
sub
test
aad
and
cmp
cmp
jg
loope
cmpsl
adc
sub
push
mov
push
repz
imul
sub
lret
js
xor
out
aam
or
call
dec
imul
lcall
push
repz
mov
pop
lret
and
inc
icebp
adc
es
mov
xor
push
mov
mov
jae
lods
push
mov
aad
es
sbb
mov
test
rcr
jmp
or
xchg
es
cmpl
mov
cmpl
ds
mov
and
insb
dec
push
ds
mov
lahf
fldl
add
cmpsb
cltd
lahf
decb
and
push
inc
stos
lahf
loope
cmp
inc
test
subl
fsubrl
mov
test
push
adc
movsb
rcr
je
aad
xor
lret
cwtl
mov
outsb
add
subb
push
mov
call
pop
xor
shr
sub
push
push
push
js
push
in
adc
inc
add
ss
sub
xor
dec
ret
mov
addr16
cmpsl
cmpsl
sbb
in
push
jbe
mov
sbb
xchg
std
mov
imul
int
cmp
pusha
add
jae
adc
popf
inc
loop
sahf
xorb
fdiv
lods
and
inc
inc
pop
push
xchg
inc
mov
mov
sub
xchg
push
ror
shll
adc
out
push
ret
pop
les
sahf
enter
inc
mov
into
mov
shl
ds
inc
or
push
jle
mov
ja
int
js
add
jmp
out
jle
push
out
inc
ficoml
adc
mov
es
fiadds
jmp
xchg
fisttpll
push
or
mov
loope
and
jno
pop
or
sti
int3
loopne
mov
push
ljmp
shll
fistpll
mov
jno
add
mov
stc
push
lock
pop
cmp
dec
lea
movsl
test
in
sbb
loopne
testl
xor
call
inc
mov
in
jbe
movsl
adc
movsb
ret
outsl
jbe
and
push
add
mov
scas
fs
movsl
push
and
dec
test
mov
pop
lea
and
loop
pop
enter
outsb
jg
pop
jle
data16
call
sti
jne
dec
iret
mov
out
mov
and
or
cmp
test
aas
inc
push
dec
mov
mov
mov
ljmp
jb
outsb
and
insb
dec
aas
clc
fs
adc
mov
fs
data16
pop
int3
push
mov
cli
pop
std
cmpsb
gs
jle
jge
js
push
orl
inc
mov
mov
lods
xor
lret
dec
xlat
and
popf
outsb
ror
out
pusha
or
stos
mov
adc
or
std
mov
insl
sbb
dec
adc
idivl
or
sbb
fiadds
decl
xchg
mov
mov
and
xorb
imul
jno
inc
frstor
ret
rorl
fisubrl
fldcw
ret
push
fbld
lods
push
cmpsb
rcrb
mov
jle
dec
cmp
nop
xor
enter
push
jns
mov
cli
cmpb
std
sub
movsb
adc
xchg
arpl
repnz
pop
and
movsl
xlat
dec
pop
test
call
mov
insl
dec
dec
mov
cwtl
cmp
stos
mov
fisubl
jg
int3
aaa
xchg
mov
fildl
push
cwtl
les
sahf
jmp
fwait
mov
pusha
mov
das
xor
mov
in
lret
das
lahf
jle
inc
mov
xor
pop
cmp
mov
lret
push
mov
cmpsb
pop
out
shl
es
and
popf
decb
fucom
and
out
faddp
shrb
imul
scas
mov
dec
xorb
xchg
mov
rcrl
sub
adcb
mov
mov
dec
and
jns
orl
mov
xchg
push
jg
test
inc
sub
jno
jp
and
adc
in
popa
lock
ljmp
push
or
add
insb
push
out
je
stc
push
mov
push
and
and
inc
testl
mov
scas
rcrb
mov
inc
sub
bound
arpl
mov
rolb
xchg
scas
dec
jge
inc
int3
stos
aas
popa
loope
movsl
jno
and
dec
push
jge
jns
cmp
or
xchg
jg
adc
negl
outsl
sbb
push
cmp
lea
ret
pop
add
in
adc
jmp
test
push
jno
push
addr16
mov
pop
dec
lods
cmp
scas
mov
jbe
stos
push
mov
pop
lcall
inc
lea
xor
dec
dec
in
jl
test
loope
jne
shlb
insb
dec
fidivl
lea
pop
mov
xchg
add
xor
push
setb
cmpsb
xor
cli
stos
mov
cmp
dec
mov
mov
fiaddl
xor
push
pop
mov
mov
pushf
mov
jns
mov
jbe
inc
cmp
shl
jmp
jl
loope
ret
sbb
shr
sbb
lahf
sub
push
jb
and
out
jle
xor
cmpsl
repz
cld
mov
fwait
push
push
or
pop
pop
mov
jne
xor
mov
enter
dec
sbb
jge
mov
aam
aam
jnp
mov
fldl
mov
inc
and
push
xchg
lods
add
clc
ss
fucomip
lds
pop
mov
loope
bound
cmp
mov
pop
in
xadd
jb
inc
es
xor
xlat
mov
cmp
sbb
xchg
mov
mov
enter
adc
testl
xor
sub
pushf
push
mov
rcrl
std
xchg
mov
inc
shrb
mov
jecxz
lret
push
xchg
sbb
pop
cmp
pop
inc
mov
scas
push
test
pop
and
cmp
aas
jbe
sbb
mov
jbe
add
es
mov
jp
shlb
loop
jns
and
mov
fldcw
outsb
repz
fimuls
cmpsl
dec
cld
shrb
cmp
xchg
and
aam
jo
mov
push
ret
addr16
out
mov
push
cmp
in
dec
xchg
and
adc
std
sbb
cmp
iret
mov
out
add
pop
test
in
dec
aaa
test
and
into
sub
subl
xor
adcl
repz
gs
add
and
cwtl
data16
fsubrl
adc
fucomi
xor
sbb
mov
loope
cmp
js
or
cli
mov
push
je
sub
mov
push
cli
dec
push
inc
mov
inc
jne
mov
out
adc
test
jb
addr16
push
cmc
mov
jne
repnz
mov
clc
rcll
aam
or
or
bound
xchg
xchg
or
push
dec
and
icebp
jns
insl
jl
arpl
outsl
adc
inc
fs
ja
pop
pop
mov
jne
out
xchg
clc
repnz
sbb
dec
add
ja
shll
pop
lea
jno
jne
in
push
mov
sbbl
push
popf
mov
gs
jp
scas
imul
cs
push
and
shr
fiadds
ss
std
mov
mov
pop
jnp
out
push
xchg
subb
xor
dec
push
les
mov
mov
scas
std
outsb
pop
fidivl
shll
adc
sarl
inc
fdivs
jmp
or
sbb
mov
xchg
pop
out
cmp
pop
cmp
imul
or
jne
hlt
pushf
sub
cmp
inc
xchg
inc
jge
sbb
push
mov
rclb
mov
lret
enter
jle
add
lret
push
leave
ja
inc
sbb
pop
jg
mov
arpl
jmp
inc
loopne
mov
adc
sti
push
pop
adc
dec
sub
add
xchg
icebp
aaa
pop
dec
adc
into
leave
loopne
cwtl
adcl
icebp
dec
idivl
xchg
insb
adc
sti
cmp
xchg
fidivrl
inc
out
int3
mov
repnz
dec
cli
int
cmc
lret
sahf
stc
inc
loope
test
nop
push
imul
movsl
jns
xor
xor
roll
pop
jp
or
pop
inc
mov
in
imul
fdivrl
inc
movsl
mov
pushf
xchg
movsl
cmpsl
add
shlb
loopne
lods
shlb
xchg
xor
cmpsb
dec
pop
and
int3
jle
mov
pop
pop
sbb
add
jns
iret
bound
insl
jle
mov
mov
adc
push
sbb
test
cmp
sub
jge
call
loopne
dec
cli
lea
mov
or
jnp
sbb
scas
rorl
movsb
inc
pop
mov
movaps
mov
repnz
pusha
test
xor
jle
pushf
jbe
xorb
movsb
xor
lret
shrl
jecxz
test
mov
test
sub
sub
pop
mov
mov
sbb
adc
gs
and
enter
mov
mov
or
mov
xorb
mov
in
push
xor
ficoml
sub
fmuls
fnstenv
sbb
sub
xor
mov
cmpsb
cs
xor
ja
mov
add
pop
jle
and
adc
mov
add
push
iret
mov
mov
int3
push
jb
stos
rorb
aaa
and
or
std
out
pop
inc
mov
or
shl
out
xchg
jbe
push
mov
mov
mov
mov
popf
fcoms
pop
rorl
out
aas
mov
or
xchg
ror
jle
test
inc
dec
xor
adc
adc
adc
movsb
inc
sbb
lcall
gs
rcll
pop
sbb
fdiv
sub
cmpsb
inc
bound
mull
pusha
roll
xchg
pop
cmp
fldt
and
scas
flds
inc
inc
scas
push
daa
push
push
jnp
hlt
inc
xor
popa
stos
shr
sbb
xchg
cmpsb
pop
mov
push
nop
data16
je
pop
mov
orl
aaa
or
or
cmp
mov
xchg
and
cmp
sbbl
dec
jb
cltd
pop
movsb
cmpsb
jge
push
inc
pop
mov
sbb
decl
push
inc
sarl
mov
sbb
fldenv
cs
jne
pop
inc
mov
idivb
ficomps
xchg
sub
pop
lahf
xor
add
mov
xchg
inc
ficoms
aam
stc
rolb
lods
xchg
jle
insl
mov
rol
sub
xor
sub
call
xchg
scas
cmp
idiv
sbb
xchg
scas
mov
in
xor
cmp
ds
mov
or
sub
mov
mov
out
popa
je
xchg
xor
adcb
dec
push
dec
jp
pop
imul
es
lahf
sub
and
mov
pushf
sub
pushf
dec
jns
mov
cvtpi2ps
iret
dec
xor
sbb
sub
mov
jb
scas
punpckldq
pushf
das
jne
jbe
adc
jecxz
enter
mov
pop
jge
cmp
push
adc
adc
imul
dec
lea
pop
pop
xor
gs
adc
xor
sub
lret
mov
in
xchg
lret
sbb
idivl
fisubl
imul
cld
sub
push
fisttpll
inc
movl
mov
test
jge
sbb
cmp
or
lods
sarb
subl
sbb
inc
movsl
or
das
mov
bound
testl
sbb
jge
mov
iret
jae
inc
adc
popa
jl
adc
cltd
inc
lret
dec
jp
lcall
fadds
xchg
adc
mov
sarb
ss
jo
aad
or
ret
sti
fadds
loopne
outsb
pop
rclb
cmp
testb
cmp
push
fs
cs
pop
nop
hlt
dec
lea
lock
add
xchg
sbb
iret
inc
jnp
leave
in
lret
push
xor
push
sub
add
sti
jns
xor
int
xchg
pop
cmp
pop
insl
xchg
mov
mov
push
insl
cmp
push
push
sbb
dec
xchg
call
xor
lret
push
or
dec
or
adc
mov
mov
call
mov
mov
and
and
lahf
cltd
test
insb
dec
xchg
fwait
ret
lret
test
int
pop
cmp
aad
pop
push
flds
movsl
jecxz
movsl
pop
ja
xchg
push
inc
push
ljmp
shll
mov
ret
mov
movsb
inc
xchg
ja
pop
mov
loopne
xor
in
or
popa
pop
pushf
cmp
inc
fs
rclb
ss
xor
inc
push
adc
les
call
gs
push
jg
mov
jnp
int
sub
push
lahf
adc
mov
sahf
daa
push
dec
xor
add
repnz
and
sub
leave
xor
loop
loopne
outsl
fldlg2
out
sbb
cmpsb
pop
jne
outsb
sahf
idivl
repz
xchg
push
xor
or
outsl
or
push
imul
out
sub
lock
and
cmpsl
into
int3
cld
popa
push
add
adc
ja
inc
jp
inc
cmp
xchg
stc
lcall
inc
add
cmp
xchg
popa
imul
test
ret
addr16
in
jnp
daa
sub
fucomip
incb
mov
shlb
repz
lods
inc
popa
leave
popf
ja
icebp
sub
pop
jbe
test
rolb
xor
or
movsl
jno
ret
push
xor
rolb
lods
movsb
insb
inc
jmp
dec
jne
fidivrl
repnz
xlat
mov
pop
mov
mov
aad
inc
into
stos
mov
mov
cmp
mov
mov
popl
sub
xor
ficoml
pop
push
cmp
aas
imul
movsb
mov
int3
cli
fsubrs
fidivrl
js
sahf
pop
pop
adc
std
enter
jnp
dec
mov
sbb
sub
jmp
pop
push
xchg
mov
jmp
mov
outsb
cltd
mov
dec
lds
repz
mov
fnsave
jecxz
cld
lret
adc
jge
addl
les
dec
test
inc
subl
push
bound
jmp
pop
add
jo
rclb
decl
fcoms
inc
movsl
inc
inc
fsubrl
mov
outsb
cwtl
pop
scas
into
pop
dec
push
push
shlb
jp
xor
inc
pop
cwtl
stos
in
sbbb
pop
test
stos
or
andb
jmp
cmp
ss
shr
int
jl
pop
std
insl
sbbb
addr16
adc
mov
mov
pop
es
push
mov
cmp
add
sbb
pop
push
stc
test
insb
sbb
outsl
popf
fmull
or
in
push
jne
in
adc
shlb
jmp
sbb
xchg
cbtw
ja
cmp
adc
call
shl
js
ja
mov
out
ret
imul
lahf
mov
mov
or
lock
adc
push
mov
cli
rcr
mov
dec
cmp
jge
jecxz
jge
sub
insb
movsb
add
sahf
push
jo
add
pop
add
lods
inc
ja
rorl
sub
xchg
jbe
cmpsb
pop
sub
mov
into
cwtl
adc
xchg
or
pop
rorb
out
mov
mov
and
jo
jmp
out
ret
daa
fnstenv
pop
insl
mov
push
or
push
add
mov
inc
addl
inc
popf
fs
sbbb
in
int3
jnp
ja
adc
ficoms
mov
pop
or
mov
mov
push
jno
cli
je
iret
clc
into
out
xor
adc
sbb
cs
push
xor
daa
pop
aas
lods
js
mov
xchg
and
and
movsb
mov
ja
sbb
add
push
or
inc
test
jns
pop
leave
mov
inc
pop
je
push
decb
xor
sbb
in
fimuls
cli
inc
jae
rcrb
cmpsb
movsb
mov
sbb
sahf
dec
mov
in
xchg
mov
mov
lret
ljmp
or
mov
mov
xor
xchg
mov
cmp
xor
test
sahf
insl
jl
push
and
cmpsl
aad
adc
xor
lahf
sbb
call
ret
dec
sub
movl
push
sbb
xchg
addb
addb
jge
ret
in
pop
add
popa
pop
sarb
adc
cs
pop
into
dec
in
pop
mov
mov
xor
pop
cmp
pop
div
xchg
pop
xor
and
sub
push
lds
jnp
pop
lahf
bound
and
adc
addl
push
xchg
sbb
pop
mov
dec
insl
mov
xchg
movsl
int3
addr16
popa
hlt
mov
sbb
add
les
gs
mov
vrsqrtss
xchg
and
insb
loop
daa
out
dec
aaa
js
lods
jns
cmc
imul
stos
icebp
sbb
pop
out
sub
push
fists
sahf
icebp
call
je
add
xor
mov
xchg
rcl
mov
fmull
and
in
loop
rcll
repz
int3
es
pop
out
in
int3
leave
das
test
call
fdivr
mov
stc
sub
bound
xor
push
js
outsb
call
cmp
mov
mov
xchg
xor
das
lods
shlb
in
test
or
std
inc
fstpl
lock
and
lock
mov
sbb
mov
mov
cli
jg
xchg
mov
sbbb
push
fnop
pop
inc
mov
mov
jno
pop
aas
xchg
sbb
leave
jge
in
pusha
pop
add
sub
pop
les
ret
aaa
stos
mov
or
es
jg
cmp
loopne
or
xlat
sbb
push
pop
and
jmp
push
mov
xor
scas
cwtl
ss
mov
jg
jp
inc
movsb
popa
lods
repz
stos
popf
mov
xchg
mov
out
shr
mov
adc
outsb
push
dec
das
jp
cs
add
repz
xchg
sbb
nop
in
daa
mov
into
nop
xor
out
lock
je
mov
push
popa
jns
push
dec
adc
in
daa
or
icebp
imul
flds
add
add
add
stos
add
mov
jp
loopne
jo
and
gs
jg
xor
rcr
je,pn
pop
mov
jmp
jno
xor
iret
pop
pop
outsl
or
mov
int3
inc
and
scas
addr16
or
jnp
jnp
je
xchg
adc
test
xchg
test
rcrl
add
mov
fisubs
outsb
mov
mov
mov
mov
cmpl
shr
ret
dec
stos
leave
and
repz
cmp
call
cmovno
es
add
repz
int3
fs
sbbb
sahf
ret
mov
xchg
add
jp
adc
xchg
jmp
aas
aas
pop
cmpsl
mov
je
add
jno
ljmp
cli
fnstenv
xlat
stc
xchg
repz
cmpb
adc
sti
in
int
loopne
cmp
push
mov
fs
in
xchg
mov
sub
scas
aad
mov
aaa
pop
mov
sbb
sti
and
repnz
sbb
xor
rorl
inc
popf
jae
loop
and
push
adc
repz
scas
pop
int
cmp
jae
dec
jbe
pop
inc
fcomi
push
repz
cmp
adc
js
loope
inc
cmpsb
notb
or
gs
std
push
rcll
or
mov
shll
sbb
and
dec
mov
subl
div
pop
push
test
and
cmc
clc
xor
subb
gs
jno
xlat
pop
pop
gs
lods
lds
sahf
mov
dec
add
out
data16
adc
lret
mov
pop
call
sub
lock
dec
xchg
sahf
incl
pop
test
mov
in
jo
inc
rorl
pushf
jno
mov
pushf
movntq
ljmp
rorb
xchg
shrl
sbb
jp
out
adc
add
aad
pop
cmpsb
adc
fisubs
loop
mov
je
mov
leave
dec
aam
cmc
shrb
push
inc
jns
mov
aad
mov
fistpl
cmp
xor
inc
sbb
xchg
push
clc
movsl
adc
xor
xchg
push
bound
or
mov
ss
pop
aad
scas
loopne
jo
lods
into
repz
mov
sbb
add
dec
movb
sahf
leave
sub
pop
repz
cltd
xlat
xor
xor
stos
jl
push
cmp
adc
and
mov
outsb
idiv
xchg
sarl
jmp
push
push
rorl
lahf
add
test
nop
hlt
nop
push
cmp
and
or
in
movsb
mov
iret
cmpb
gs
out
cltd
pop
cltd
das
sbb
mov
inc
rorl
out
inc
inc
adc
fdivr
fsubl
lret
jle
xchg
mov
ret
xor
xchg
push
xor
cwtl
test
inc
ds
xchg
rcl
lret
pop
xor
dec
lds
push
inc
push
lret
idiv
xchg
sub
xchg
lcall
sbb
jmp
push
sbb
cmp
push
xchg
ret
mov
out
call
mov
imul
or
xchg
arpl
scas
cmpsb
mov
icebp
jmp
xchg
jge
xor
rcl
pop
test
adc
movsl
mov
mov
fnstcw
fisttpl
repnz
filds
sub
mov
sti
sbb
pusha
dec
xchg
leave
pop
cmp
add
pop
clc
mov
enterw
pop
loopne
rcrl
sub
jl
test
iret
dec
pop
lods
pop
fldenv
mov
push
mov
mov
add
mov
xor
into
pushf
aad
cmpsb
xchg
sbb
mov
popl
cmp
and
lret
adc
mov
ret
js
add
cs
inc
add
jp
jl
jns
push
add
je
jae
nop
or
push
xorl
pop
lods
lods
popf
xchg
adc
or
or
gs
jne
adc
pusha
mov
add
add
push
xchg
lahf
cs
in
jbe
cmp
pop
cmp
mov
xchg
fsubrl
push
stos
xchg
es
sahf
ja
inc
mov
cmp
fsubl
sarb
jo
mov
out
loopne
imul
int
mov
js
add
jmp
mov
jno
sar
hlt
call
dec
add
insl
adc
dec
ja
jmp
rcrl
mov
sub
icebp
pop
shll
xchg
and
cmp
lahf
jae
out
fst
jp
add
mov
icebp
shll
hlt
inc
push
pusha
jo
aas
adc
jns
push
rclb
mov
and
pop
sbb
jbe
js
cld
dec
lds
in
jecxz
jnp
push
pop
movsb
mov
jne
dec
loope
scas
arpl
mov
repz
fldl2t
push
pop
xor
gs
push
subb
xor
repz
outsb
lods
in
push
add
mov
jecxz
cmpsl
mov
mov
inc
test
push
xor
mov
mov
scas
jno
adc
test
lds
repz
push
xchg
or
ja
inc
aad
scas
mov
push
cmp
mov
xchg
mov
mov
dec
add
pop
in
test
negl
subl
mov
stos
scas
scas
mov
rorl
inc
hlt
imul
psrad
cltd
mov
or
sub
dec
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
jmp
xchg
pop
and
mov
jo
push
stc
cmc
fmuls
cmc
std
jns
push
pop
jp
sub
push
cltd
mov
pop
jne
jnp
sti
ss
mov
dec
aam
xchg
or
cmp
xchg
scas
jmp
cmp
clc
popf
lahf
bnd
and
sbb
pop
lea
or
cmp
les
sub
mov
jns
sbbl
jp
adc
push
sub
repnz
jbe
pop
jge
movsl
aad
arpl
sub
in
inc
aaa
pop
mov
push
mov
mov
jle
xor
mov
ret
push
mov
pop
ds
push
cmp
dec
icebp
dec
imull
mov
xchg
adc
push
adc
arpl
fwait
xor
xor
rcll
cli
xor
sahf
sub
imull
push
lods
mov
sub
pusha
cwtl
pop
mov
fwait
add
and
test
sub
sub
stc
outsl
es
push
mov
mov
into
inc
mov
fcmovnb
push
insb
data16
or
sub
adc
aas
loop
xchg
and
or
aad
mov
scas
rcrb
sbb
sub
mov
and
adcl
daa
hlt
inc
jecxz
and
stos
sahf
xor
mov
xor
repnz
dec
xchg
fs
dec
xor
add
icebp
repz
test
jecxz
sahf
push
int
sbb
shl
into
out
fcmovbe
mov
xchg
mov
push
and
push
rclb
pop
xchg
dec
pop
adc
mov
jge
adc
sub
aaa
jl
xor
mov
pop
sbb
dec
inc
mov
test
mov
loop
or
push
sarl
cs
mov
inc
icebp
jno
fnstcw
lahf
jg
vandps
jl
mov
mov
loope
sub
mov
push
xlat
sub
push
sub
cmp
push
pop
pusha
pusha
pop
xchg
jg
out
out
inc
or
repnz
and
ret
pop
pop
push
pop
jnp
fstps
xor
mov
xor
xor
and
xor
jmp
mov
fisubs
add
mov
ljmp
jbe
mov
adcl
test
data16
lret
mov
add
movsl
xchg
xchg
es
inc
push
adc
hlt
pop
mov
xchg
pop
sbb
adc
adc
xchg
cmc
mov
mov
inc
xchg
fsubrl
ja
xchg
incl
mov
loop
imul
push
pusha
movsb
imull
cmp
and
cwtl
lock
xor
add
dec
inc
fsubrl
sbb
adc
cmp
xor
push
cmp
aaa
mov
xchg
mov
lcall
push
sub
add
and
int
jns
rcrb
outsb
bound
mov
xor
into
into
adcl
cmp
movsb
push
out
xchg
add
outsl
out
into
iret
sbb
pushl
mov
adc
cmp
add
adcb
push
bound
inc
inc
clc
cmp
sbb
and
shlb
mov
inc
insl
cmp
pop
jg
loop
loop
nop
fstps
es
push
xor
mov
adcb
into
push
push
jo
icebp
and
in
jno
xor
inc
sub
mov
pop
mov
daa
dec
incl
loopne
mov
sub
bound
and
mov
jle
cwtl
fcompl
pop
aam
jle
lcall
mov
cmp
adc
mov
inc
in
out
out
xchg
jo
test
sti
pop
inc
mov
pop
pop
loope
insl
mov
rcl
mov
pop
dec
imul
callw
mov
gs
adc
ret
aad
outsb
fdivrs
aad
pop
add
stos
and
inc
and
stc
lods
sbbl
dec
add
cmp
shrb
fwait
adc
es
push
mov
hlt
jmp
mov
insb
xor
int
inc
adc
mov
pushf
mov
mov
or
and
xchg
or
fs
push
data16
xor
out
in
sub
ret
pop
pop
test
xchg
pop
jmp
aad
sarb
outsl
lds
mov
and
mull
bound
jg
xchg
push
loopne
jne
test
int3
in
dec
lret
imull
inc
jae
test
sub
xorb
enter
jg
sbb
por
xor
cmp
pop
mov
xchg
aaa
scas
clc
lea
or
loope
js
push
loope
push
adc
adc
ja
hlt
adc
xor
mov
pop
divl
cmp
bound
dec
mov
add
insl
fbld
lds
test
jp
mov
movsl
enter
push
xchg
shrl
mov
cmp
outsl
decb
loope
mov
and
clc
jl
push
push
add
adc
jne
orl
mov
adc
jle
out
shrb
jae
jnp
sahf
pusha
daa
ja
adc
dec
insl
sub
lcall
inc
cmp
hlt
cmp
cwtl
push
imul
push
pop
fiadds
adcb
mov
data16
and
jl
pushf
rolb
and
outsb
lods
jg
lds
adc
cli
mov
mov
icebp
insb
jns
lods
mov
aaa
mov
xor
sub
mov
pop
cmp
out
nop
add
jno
mov
addr16
pop
jg
lcall
imul
sbb
xchg
rorb
adcb
push
jecxz
mov
add
fnstcw
aam
xlat
out
repnz
pusha
or
ljmp
lds
aam
cmp
lods
cmp
push
mov
rclb
inc
lods
test
outsb
dec
int3
jo
jle
jp
jo
icebp
idiv
rorb
cmp
outsb
ds
fstp
stos
add
adc
cmp
ret
jno
push
mov
jo
add
sarl
xchg
jl
aam
mov
or
bound
aad
jecxz
test
sbb
lea
push
pop
ret
mov
sbb
adc
stos
cmpsb
pop
mov
adc
jns
push
xchg
xorb
imul
movsw
push
lret
jno
mov
pushf
mov
xor
cmp
rclb
jp
rcll
stos
and
call
jo
out
cmpsb
xchg
pop
adc
in
sahf
mov
pop
bnd
outsb
mov
mov
or
xchg
in
in
inc
sbb
inc
sub
repz
addr16
push
sti
sub
pop
jecxz
jmp
inc
xor
pop
dec
mov
xor
and
push
or
sbb
mov
mov
fsubrl
xor
pop
sbbl
sub
in
xchg
aas
push
mov
enter
xchg
add
add
lods
cmp
adc
mov
loopne
cmpsl
ss
pop
push
dec
mov
pop
mov
aad
push
lods
rcrb
mov
fs
dec
mov
cmc
mov
dec
repnz
jno
xchg
test
add
aas
sarb
cs
in
sub
inc
jb
lods
or
sbb
add
lahf
pop
insb
sti
mov
xlat
jle
jns
stos
gs
imul
mov
inc
push
mov
mov
dec
pushf
incb
into
inc
push
mov
xchg
xor
popf
aad
sub
inc
cmp
sbbl
inc
cmpb
insb
cmpsl
jmp
das
cmp
negb
sbb
mov
or
sub
push
addr16
enter
out
inc
pop
imul
scas
inc
lods
push
lcall
and
outsb
mov
inc
mov
rcll
mov
adc
mov
test
jns
and
pop
mov
or
inc
imul
dec
int3
rcr
mov
jl
sbb
xor
mov
mov
fwait
inc
cmpsl
inc
mov
mov
xorl
das
sbb
sbb
in
sub
enter
jp
in
test
add
inc
hlt
xchg
dec
dec
xchg
and
lret
out
sub
sbb
ret
lret
iret
jmp
test
mov
cmp
push
push
popf
test
dec
add
shlw
jnp
cmpsb
push
xor
cmp
int3
add
ss
inc
rcrl
loopne
daa
xlat
jg
test
pop
loopne
cmpsb
cmp
sbb
addr16
sahf
or
or
aaa
lods
lock
leave
sub
push
frstor
cmp
enter
pop
adc
fsubl
divl
jb
addr16
roll
push
cmp
push
pop
mov
nop
mov
or
cld
inc
push
dec
addb
lahf
cmp
cmc
fildll
test
les
dec
mov
dec
and
jo
fnstsw
les
sub
push
mov
xchg
inc
xor
jmp
clc
incl
arpl
and
into
inc
mov
inc
loopne
pop
inc
fwait
aad
movsl
mov
in
add
mov
mov
mov
mov
adc
cmp
and
loop
cs
mov
ljmp
dec
movsl
xchg
lret
xchg
xlat
test
les
sahf
repz
dec
jae
jae
subl
dec
and
pop
aad
aas
in
loop
xchg
std
or
sub
dec
enter
and
enter
shll
dec
stos
push
dec
cmp
in
lods
lods
push
iret
aaa
int3
lahf
mov
mov
xchg
sub
in
cli
fnstsw
rorb
fldl
fscale
xor
les
pop
push
pop
adc
test
fldl
mov
and
es
add
jmp
mov
cmp
cmp
fdivrs
push
mov
daa
scas
mov
shl
fs
out
pop
ret
in
cmp
xchg
sahf
cmp
push
xor
cmpsb
push
mov
lods
sub
fstl
dec
lea
cmp
dec
adc
cmp
ljmp
sub
out
sarl
sahf
add
jae
pop
lret
aad
dec
cmp
push
outsb
and
cmp
rorb
push
scas
xlat
jno
mov
test
je
stc
mov
mov
in
lahf
pop
test
mov
or
lcall
ljmp
sub
and
cs
popf
fstl
xchg
xor
xchg
mov
mov
push
sarl
push
std
nop
sti
ljmp
cmp
adc
jge
and
or
lahf
outsl
mov
or
aaa
inc
cmp
add
scas
push
xor
ss
setl
enter
sti
cli
jg
sbb
adc
adc
popf
sbb
insb
outsb
pop
jae
add
jmp
call
dec
inc
xor
jnp
sbb
mov
jae
mov
ja
andl
inc
fistpll
and
xchg
mov
jmp
fdiv
orl
mov
movsl
mov
add
jbe
push
sub
or
ja
mov
sub
inc
jns
inc
ds
or
cmc
bound
push
and
push
jae
cmp
inc
ja
mov
jno
scas
mov
inc
mov
sbb
int
jmp
hlt
andb
loop
in
xor
jp
mov
test
aad
outsb
mov
xlat
mov
orb
out
stc
aaa
push
adc
stos
sub
std
mov
lret
add
lahf
adc
ds
pop
jg
sarb
test
jg
add
lea
je
xchg
out
sahf
gs
cmpsl
xorl
jmp
push
addr16
call
ljmp
pop
sub
aad
lds
je,pn
imul
xor
dec
lahf
xchg
lret
movsb
sarb
and
dec
mov
icebp
cmpsb
fidivrl
push
idivl
dec
movsl
push
adc
cld
mov
rorl
popa
hlt
loopne
and
push
dec
adc
adc
negl
stc
mov
mov
mov
sub
hlt
cmpsl
and
sbb
or
mov
add
jno
repz
cs
mov
jbe
js
std
lret
dec
scas
int3
pop
push
rorb
subl
inc
jnp
jmp
imul
push
mov
mov
xchg
aad
iret
push
outsl
adc
mov
stos
testb
test
gs
out
sbb
sbb
gs
xchg
add
xor
adc
lock
xchg
in
dec
cmp
mov
aaa
and
jp
cli
mov
xchg
and
adc
xchg
outsb
xchg
out
add
das
jp
mov
pop
push
lods
out
lods
mov
jno
es
mov
push
lds
xchg
cmp
subl
mov
int3
cld
test
loope
mov
jmp
inc
jg
xor
push
dec
mov
addr16
in
mov
icebp
aaa
rcll
mov
arpl
dec
sbb
mov
popa
push
mov
xor
arpl
aaa
and
mov
xor
cmp
mov
mov
ficompl
jecxz
sub
nop
xchg
xchg
insl
xchg
ss
outsl
ja
cmpsb
sbb
mov
pop
inc
xorb
mov
insb
jle
add
xchg
rol
dec
xchg
push
cmp
adc
mov
dec
and
lods
add
mov
jne
mov
mov
add
push
shll
lahf
mov
mov
jl
xor
xchg
mov
sub
mov
lods
jl
sbb
pop
jo
jno
mov
leave
push
push
imul
push
mov
sbb
les
out
shr
or
push
hlt
fsts
adc
stc
adc
inc
test
frstor
jecxz
out
addr16
je
xchg
in
call
test
jae
adc
adc
mov
lcall
test
jecxz
dec
jb
add
push
xchg
push
or
jmp
jbe
push
ret
outsl
add
dec
jl
rcll
shrb
mov
inc
outsb
insb
outsb
and
mov
jmp
sbb
in
movsl
jb
clc
sbb
data16
mov
adc
repz
hlt
mov
pop
lahf
ds
pop
sub
clc
icebp
dec
loope
dec
cmp
or
call
or
call
test
pop
ss
push
or
add
pop
mov
xchg
mov
adc
sar
rolb
int3
pop
mov
sub
stos
scas
dec
flds
fsin
fs
push
cs
js
sub
xchg
xchg
lahf
setns
pop
scas
sar
xchg
xchg
adc
int
cmp
imul
pop
pop
lods
test
push
mov
je
inc
jo
notl
cmp
cmp
cmp
sti
inc
fs
xchg
ja
outsb
aas
outsl
jle
test
jae
outsl
cmpb
movsl
cmp
adc
cmpsb
std
push
jne,pn
in
scas
mov
aad
sub
cmp
fbstp
add
pop
xchg
push
xor
xchg
out
mov
xchg
mov
mov
push
or
out
sub
daa
negb
xchg
aaa
out
add
les
add
ja
shll
push
push
inc
fldcw
xor
sbb
mov
sub
cmpsl
push
js
inc
add
mov
push
test
clc
jecxz
mov
dec
add
out
add
push
xlat
std
das
inc
aad
pusha
and
lock
ljmp
inc
lret
xchg
xchg
ljmp
mov
sub
jb
shrb
cmc
or
cmpsl
leave
xchg
shl
sbb
or
movsl
pop
mov
jae
xor
cs
and
adc
out
sbb
sbb
mov
sub
ret
pop
pusha
cmp
roll
lds
mov
xchg
add
xchg
lods
ret
mov
mov
add
adc
or
std
cmp
cmc
or
inc
sbb
mov
pop
repnz
dec
dec
cmp
stc
cs
cmp
sub
stc
repz
fidivrl
in
cltd
test
mov
out
sbb
dec
sub
jmp
fwait
je
lods
xlat
jbe
pop
inc
mov
mov
jnp
sti
jp
cmp
mov
out
and
cwtl
jmp
mov
sbbb
mov
cli
cmp
adc
imul
jmp
aas
xchg
lds
pop
call
sbb
lea
bound
fldenv
frstor
inc
adc
test
and
mov
in
and
add
pushl
outsb
in
adc
sti
sbb
sahf
cmp
pop
push
sbb
mov
add
cmp
aam
mov
rcll
add
mov
mov
int
ror
shlb
add
push
xor
add
pop
xchg
sub
repz
adc
ja
xor
push
hlt
lahf
or
xor
xchg
jb
out
mov
aam
lock
and
loope
sbb
loop
adc
daa
and
adc
jns
mov
in
pop
sub
movsb
mov
pop
in
cld
and
and
mov
and
gs
mov
outsl
inc
sbb
sbb
add
lods
xchg
sub
or
xchg
in
mov
dec
pushf
xchg
inc
mov
lcall
sbb
xor
adc
jae
add
cli
es
sti
pop
dec
je
ss
scas
sub
inc
movlhps
xor
inc
into
loop
fstpt
mov
push
cmp
sub
pop
mov
jge
or
into
shlb
sub
out
xor
sbb
aaa
mov
fstp
ret
mov
mov
xor
not
pop
xor
xchg
push
pop
add
test
mov
insl
in
mov
mov
jno
test
shl
adc
lods
shlb
jecxz
dec
and
hlt
std
add
movsb
pop
sbb
jg
xor
mov
pop
cmpsl
push
sbb
loop
out
cmpxchg8b
sar
sbb
test
test
rorb
sbb
jg
xchg
aam
lods
aam
inc
fisttpll
jns
push
ja
jle
inc
jo
pop
add
xchg
mov
fptan
add
stc
mov
ljmp
rclb
bswap
frstor
out
data16
jns
lods
loop
je
popf
pop
notl
pop
adc
lahf
dec
xchg
mov
dec
or
push
fwait
sub
imul
bnd
ficoms
cmp
mov
push
out
push
fnsave
push
cwtl
das
mov
movsl
imul
pop
incb
adc
and
scas
rorb
dec
in
sbb
push
outsb
ffree
repnz
lcall
pop
adc
and
sti
adc
ret
lcall
orb
jg
pop
out
enter
loope
xor
xor
add
inc
movsl
push
outsl
out
or
add
ljmp
imul
mov
rol
xor
adc
mov
mov
aas
jp
mov
inc
js
gs
aam
inc
cmpsb
notl
jb
outsb
repz
jl
jne
jns
push
xadd
test
adc
mov
dec
push
inc
repnz
nop
bound
dec
pop
outsb
adc
sti
dec
aad
stos
sbb
stos
lods
call
push
shll
xor
push
pusha
inc
xchg
popa
xor
call
iret
and
mov
cmpsb
lds
and
adc
je
mov
daa
mov
inc
call
dec
aam
roll
cli
pop
mov
lock
push
push
jmp
mov
and
push
or
mov
and
out
or
xor
cmp
mov
cmp
cwtl
push
mov
mov
mov
jbe
jne
dec
outsb
push
adc
shll
out
xor
and
sbb
or
adcb
lret
fs
ss
in
adc
pop
push
jbe
mov
pop
test
or
loop
das
cmp
and
jl
repz
cmpsl
je
test
int3
jmp
movsb
xor
test
mov
adc
aas
dec
xor
int
sub
call
pusha
in
push
cmp
ss
push
jne
outsl
and
out
push
hlt
push
jns
pop
outsl
int
jns
and
mov
shll
sub
in
adc
xchg
ds
filds
cmp
ret
cltd
movsl
lds
fcomps
push
dec
aaa
imul
pushf
add
rcl
add
enter
xorb
push
pop
mov
xor
stos
pusha
ret
pop
clc
cld
pop
sbb
adc
fldt
jg
shrb
inc
jbe
popf
sarl
jb
lcall
sbbb
xchg
xchg
xchg
mov
repz
shr
dec
popa
int3
jne
lds
ljmp
xchg
loopne
pop
repnz
or
rcll
test
dec
lcall
adc
nop
ljmp
aad
out
into
inc
lds
and
jo
dec
mov
push
jl
xchg
loope
movsl
gs
into
cmp
pop
or
xchg
data16
push
mov
in
std
in
jle
iret
mov
mov
js
test
xchg
add
sbb
push
loopne
adc
sbb
xchg
test
xchg
cmpsl
jmp
mov
xor
mov
push
bndstx
sub
addr16
cmc
sbbl
or
fstpt
lods
add
lods
push
xchg
loopne
std
stos
mov
dec
mov
insb
test
fadd
push
and
stos
xchg
push
or
nop
ficomps
xchg
mov
add
pop
xor
out
sbb
mov
fistl
jb
les
aaa
xchg
mov
push
lahf
or
push
mov
out
jmp
adc
mov
movsb
dec
sub
shlb
fsubl
cmp
fs
jmp
sub
rcrl
not
addr16
sub
fs
jle
mov
out
int3
loopne
test
mov
add
mov
arpl
xchg
xchg
mov
inc
mov
sar
inc
mov
cld
add
loopne
movb
mov
cmpsl
add
sub
jecxz
psubq
outsb
testl
push
lret
scas
xor
or
fiadds
mov
pushf
shrb
stc
iret
push
mov
popf
push
scas
int
push
push
mov
mov
bnd
mov
xor
sti
adc
push
out
andb
inc
and
movsl
fs
jge
cli
push
movsl
hlt
int
loop
pandn
or
jno
das
cmp
repz
push
inc
mov
cmp
aas
enter
lret
and
arpl
out
call
arpl
aam
arpl
loope
xchg
push
pusha
fs
stos
dec
mov
sbb
ret
ljmp
call
ror
cmp
adc
cmp
aam
movsl
dec
stos
mov
mov
cmp
jnp
adc
cmp
cli
xor
push
jmp
dec
xchg
fsubs
and
popa
clc
or
inc
fisttps
imul
sbb
dec
rcrl
imul
pop
sub
cld
xorb
sahf
mov
jg
inc
inc
mov
lea
inc
and
scas
lods
outsb
sub
int3
cmp
call
jns
adc
mov
jecxz
imul
dec
mov
repz
xchg
cmp
lods
or
add
xchg
cltd
pop
out
je
insb
iret
cmpsb
add
test
int3
cmp
mov
cwtl
add
push
repnz
xchg
mov
incl
adc
mov
xchg
out
fimull
pop
add
dec
adc
loop
cmp
add
icebp
dec
out
sub
adc
fbld
mov
lret
call
jp
repz
sbb
cld
out
push
mov
and
lcall
out
sar
test
rcrb
xor
insl
cwtl
jle
fildll
push
mov
sbb
xchg
pop
cmp
or
call
shlb
mov
cli
push
jecxz
sub
sbb
cwtl
mov
mov
cli
lret
mov
insl
test
sahf
jns
mov
flds
das
xchg
dec
cld
add
push
int3
jo
jae
push
lahf
jmp
dec
cli
repz
int
mov
jg
daa
into
iret
inc
inc
adc
stos
xchg
testb
jbe
dec
data16
imul
testb
dec
add
clc
fs
push
jo
push
add
sbb
pushf
cs
in
mov
or
outsb
imul
add
dec
and
xor
out
push
push
nop
mov
mov
xchg
cmp
push
repnz
pop
jae
cmovne
fisubs
adc
call
pusha
jne
das
or
and
inc
jmp
mov
fisttpll
sarb
iret
jl
cmpb
mov
mov
mov
das
add
inc
xchg
enter
xor
cmp
cli
sub
lret
mov
jecxz
push
sbb
mov
out
or
jbe
xchg
pushf
dec
out
push
fnsave
les
cmpsb
sub
xor
dec
divl
or
int
ficoms
xor
ss
sbbl
shl
adc
mov
subl
adc
out
jmp
dec
xchg
push
jg
stos
rorl
push
in
imul
adc
mov
mov
or
lea
loope
fwait
sub
push
jo
ficoml
popa
push
xor
mov
mov
and
imul
loopne
jmp
push
xchg
and
xchg
subb
push
mov
stos
or
mov
push
sub
fldenv
sbb
inc
out
lock
fnstcw
pushf
sbb
pop
ficompl
and
rclb
add
adc
fnstsw
sub
insb
int3
mov
lahf
pop
mov
jge
loopne
cli
mov
pop
jbe
sub
inc
jle
imul
movsl
fwait
outsl
aad
out
stos
aad
and
das
cmp
ja
ljmp
mov
rcll
dec
push
in
into
out
xchg
inc
sbb
mov
mov
xor
jne
dec
sub
fdivrl
pop
cmc
lds
gs
xor
aad
loop
movsb
pop
push
ret
jmp
outsb
mov
imul
inc
jecxz
addr16
andb
and
test
mov
ret
adcb
gs
lock
bound
repz
sti
jb
jno
sbb
mov
pop
lret
in
pushf
and
push
xchg
mov
pop
test
imul
out
dec
or
push
sbb
cmp
or
aam
and
pushf
pop
repz
out
fimuls
push
mov
jne
sub
sub
out
jbe,pt
insl
insl
sbb
cmc
imul
sub
inc
popf
in
sbb
sbb
repnz
mov
or
inc
dec
daa
xchg
imul
adc
hlt
mov
lret
sbb
dec
xchg
ja
add
fmuls
lret
sub
or
push
enter
test
mov
sbb
fldt
clc
jmp
shrl
sahf
mov
mov
and
andb
sub
jl
testb
in
cmp
jle
sub
andb
repnz
roll
xchg
xor
xchg
xlat
inc
pusha
sbb
pop
jecxz
sahf
and
pop
je
jbe
or
sub
scas
xor
pushaw
cmp
cli
lds
xor
jne
add
or
and
xchg
in
or
ljmp
or
imul
les
divl
jl
push
push
imul
inc
test
std
and
orl
roll
fs
jo,pn
bound
shrb
mov
insl
pop
pop
mov
xor
cmpsl
je
cld
fndisi(8087
jl
insl
adc
aaa
std
adc
push
data16
stc
mov
pushf
xchg
mov
rcrl
int
int
loope
sete
cmp
lock
mov
test
inc
call
popa
sbb
into
daa
push
jl
jl
loop
push
lods
call
and
sarb
mov
bound
mov
nop
enter
jne
dec
push
xchg
icebp
jae
add
mov
aad
pop
notb
movsl
lahf
sub
fisttpl
lock
xchg
xchg
sbb
inc
cmpsl
fsubrs
pop
or
mov
push
cli
aad
into
stos
dec
imul
inc
adc
jne
jg
mov
les
sbb
mov
dec
sub
loop
dec
inc
pop
jb
mov
lret
insb
out
into
xor
mov
and
inc
rorb
mov
sbb
jbe
or
or
jnp
xor
outsb
xchg
daa
mov
cmp
lret
rcrb
in
xchg
fstps
fisubrl
into
enter
lret
ja
inc
sbb
pop
std
cwtl
movl
and
push
add
lock
aaa
aas
xchg
add
cli
sub
sbb
mov
push
hlt
xchg
mov
mov
jne
cltd
xchg
std
mov
sbb
dec
sub
cmp
addr16
and
imul
add
sub
fists
cmp
adc
add
mov
adc
xor
ja
mov
mov
pop
subl
addr16
pop
out
repnz
fldt
mov
inc
xchg
clc
out
sbb
fwait
dec
mov
aam
push
mov
push
stc
push
sub
fstps
ret
cmpsl
mov
jae
jecxz
aaa
or
je
mov
scas
aad
test
mov
sub
sahf
in
or
stos
ret
sahf
popf
add
rorl
ret
pop
ror
outsl
pop
add
mov
jmp
add
lds
jecxz
cmp
mov
inc
scas
dec
ljmp
in
xchg
sbb
adc
push
popa
popl
jmp
lock
inc
and
stc
jl
push
ss
es
mov
mov
jle
and
jns
push
lods
lret
xchg
mov
cmpsb
out
xor
sahf
stos
jp
or
ljmp
and
mov
pop
inc
cli
sbb
pop
mov
ret
cmpsb
adc
pop
pop
and
dec
stc
add
adc
lock
or
andl
mov
mov
lea
push
and
divl
stos
add
or
xor
xchg
les
pop
mov
push
or
rolb
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jmp
out
call
ljmp
mov
pop
jp
fmuls
pop
ljmp
mov
mov
mov
insl
and
push
sub
adc
btsl
jne
rcrl
in
or
pop
imulb
or
mov
or
icebp
hlt
mov
adc
filds
loope
in
jae
leave
pop
fdivp
les
sti
ret
test
xor
mov
fbstp
push
sub
shrl
cmp
mov
insl
mov
sbb
jno
xor
xor
mov
xchg
in
ja
push
addr16
sub
adc
imul
std
cmp
ds
or
ja
mov
sbb
sub
loopne
test
ds
lods
roll
cwtl
and
ljmp
dec
mov
xchg
or
fsubl
popf
push
cmp
sbb
adc
aaa
pusha
repnz
fsubrl
pushf
jge
pop
ret
mov
hlt
sbb
mov
bound
nop
out
call
in
nop
jge
xchg
sub
mov
arpl
lock
xchg
scas
leave
push
sub
scas
jecxz
sub
sbb
jno
sub
icebp
push
adc
push
enter
dec
push
inc
dec
mov
xchg
in
sub
sti
outsb
mov
mov
mov
inc
mov
lahf
dec
xchg
and
xlat
adc
fs
fwait
repz
imul
cld
pop
stos
add
mov
imulb
rorb
fneni(8087
loopne
imul
xchg
jbe
daa
aam
push
div
sti
mov
pop
push
sbb
dec
cltd
lods
cmc
dec
pop
adc
je
xor
bound
negl
mov
filds
and
ja
aas
push
adc
cmp
and
add
ss
popf
outsb
adc
ret
popa
out
cmp
lret
sbb
xor
dec
imul
jg
jns
push
and
jb
push
xor
pop
lods
bswap
cmpsl
push
subb
xchg
jae
stc
sbb
xor
mov
movsl
xchg
lods
std
pop
xor
ret
fldcw
jg
outsl
les
mov
pop
bnd
inc
aas
std
push
enter
jmp
ja
int
add
insb
push
mov
jae
dec
gs
clc
addb
push
or
sbb
cmp
xor
repnz
cmc
or
fs
xchg
mov
xor
mov
cmp
xchg
mov
lret
ds
jg
lds
sub
sub
xor
repz
cmp
fcoms
into
fwait
xchg
enter
push
ret
rorb
mov
lret
scas
jb
mov
pop
fsubl
add
push
mov
cmpsb
loopne
mov
out
sub
mov
and
mov
lea
dec
popf
sub
and
dec
or
fs
sub
mov
in
dec
add
repnz
lret
shlb
cmp
lret
push
lock
or
stos
fistpl
fdivs
in
sbb
cld
lds
lret
mul
pop
data16
imul
sbb
jnp
and
pop
out
out
push
pop
call
xor
push
xor
stos
sbb
movsbl
sbb
aam
pushf
cmp
push
popa
adc
sub
jg
jnp
subb
bound
cmpl
mov
fstpl
push
mov
jg
xchg
or
in
idiv
aam
repz
repz
icebp
sub
movsl
push
pop
mov
jmp
push
nopl
insl
cli
repz
mov
pop
pop
xor
mov
daa
je
mov
loope
adc
sbb
movsl
pop
xorb
pop
fstpl
sti
fistl
shrb
mov
loope
ds
jb
js
dec
push
push
xchg
in
loop
lret
cli
dec
lock
leave
inc
push
or
not
sbb
xchg
xchg
cltd
sbb
mov
scas
mov
jle
dec
add
xor
push
js
sbbl
out
ret
dec
mov
call
add
cltd
fwait
loopne
inc
lcall
push
popf
push
mov
or
decb
sbb
stc
pop
pop
or
xor
rorl
push
scas
aaa
or
push
jg
mov
adc
call
cmp
jmp
cwtl
adc
mov
mov
sahf
ja
jne
movsb
movsb
insl
cmp
jo
ljmp
cmp
roll
test
popf
cld
pop
ficoml
enter
pusha
mov
xlat
orb
stc
rcl
add
sub
xchg
fs
testl
inc
sub
hlt
jo
adc
adc
xor
sbb
add
xor
mov
je
stos
push
inc
mov
add
rorb
mull
mov
mov
jno
cltd
mov
jl
inc
push
test
mov
push
inc
push
daa
mov
add
sbb
dec
xchg
push
ret
jecxz
inc
lret
sub
cmp
fsts
lods
push
add
and
mov
or
jg
in
inc
and
out
andl
cld
adc
pop
pop
jo
pop
sub
xchg
movsl
and
lahf
sub
and
and
sahf
aas
aaa
ss
in
out
mov
addr16
xor
das
xchg
mov
push
in
adc
xchg
jl
xchg
hlt
push
outsb
sti
lret
jo
mov
push
and
shrw
ficompl
mov
push
test
dec
push
jle
mov
jl
mov
stc
xchg
xor
into
in
inc
push
les
pushf
xchg
mov
adc
jmp
gs
and
add
insl
jne
arpl
shrb
icebp
pop
mov
fimull
add
rcrl
test
fwait
dec
inc
inc
mov
int
fsubs
sbb
push
stos
nop
cltd
cmp
test
push
adc
mov
mov
mov
icebp
fistpl
adc
xchg
loop
xlat
add
xchg
dec
xchg
aam
ret
or
mov
sub
stos
mov
pop
mov
or
add
imul
mov
mov
movsl
jge
iret
inc
mov
mov
mov
push
pop
inc
test
mov
push
pop
das
fists
lret
mov
add
cs
leave
jns
inc
out
loopne
int3
sub
call
lret
insb
lret
clc
cmp
mov
mov
push
lahf
pop
out
repnz
jbe
popf
mov
lds
outsb
das
and
sub
cmp
clc
repnz
stos
pusha
pop
mov
je
push
xchg
fwait
xchg
mov
cli
arpl
stos
push
xor
or
in
adc
das
jo
cs
push
adc
ja
and
dec
stos
add
sbb
pop
jno
daa
inc
xlat
inc
iret
test
or
cwtl
sub
lock
add
sarb
mov
sub
mov
popf
and
ds
mov
aad
cld
mov
movsb
dec
and
sbb
jle
adc
pop
iret
sub
rolb
in
decb
ja
stos
ret
xchg
cmpsb
mov
cld
or
add
sahf
pop
cmp
ret
jb
inc
pop
ret
clc
aad
xor
inc
jl
xchg
pop
lock
mov
jp
and
js
mov
mov
orb
scas
cltd
cmpsl
nop
loopew
mov
xchg
and
pop
aad
mov
or
addr16
jp
sub
pop
inc
lods
cld
xor
add
jnp
lock
cli
rcrb
jl
inc
dec
jmp
sbb
in
push
repnz
mov
cmpsb
xchg
mov
shr
push
lcall
ss
lods
das
inc
shrb
cmpsb
mov
mov
or
rorb
dec
popf
cmp
xchg
xor
push
pop
push
mov
cwtl
sub
sti
test
imul
jo
lret
ds
xchg
xlat
inc
or
mov
jno
pop
push
pop
inc
inc
imul
jg
mov
inc
lock
inc
testb
jle
mov
mov
cmpsb
xor
xor
ds
insb
int
gs
mov
xchg
pushf
pop
adc
cltd
pop
cmp
int3
pop
mov
insl
mov
mov
pop
lods
arpl
or
jl
decl
fnsave
mov
je
jp
pop
mov
jmp
popl
lret
fisubl
jne
cmp
mov
fwait
addr16
int
mov
sbb
into
push
pop
jno
cmp
mov
inc
lahf
data16
pop
shrl
insl
lock
lcall
nop
movsb
es
lcall
repnz
clc
cmp
xchg
adc
pop
cld
and
jae
and
pop
push
xrelease
pop
push
sbb
or
or
jp
cs
insl
and
push
mov
mov
cmp
or
movzbl
pop
stos
sbb
rcl
mov
sub
mov
popa
pop
repnz
hlt
adc
xchg
or
leave
mov
lahf
insb
mull
dec
jmp
fdivl
cmp
push
data16
xchg
adc
jecxz
cmpsl
sahf
out
push
pop
xchg
jno
xor
inc
push
inc
jle
arpl
es
xchg
jecxz
in
pop
and
js
jb
push
mov
push
add
lock
arpl
dec
pop
cli
ss
int
aas
pop
add
lock
insb
mov
insb
cs
push
mov
pop
scas
call
lret
sub
xchg
rorb
pop
xchg
cmc
lock
dec
xchg
pop
mul
push
xor
aad
lea
or
mov
hlt
fsts
stos
loopne
cs
add
push
out
xor
sbb
sbb
pop
inc
sub
mov
popl
les
sub
and
loop
sub
mov
enter
imul
xchg
addr16
fbstp
insl
mov
and
pop
mov
loopne
mov
or
test
jge
rcrb
adc
and
pop
mov
loope
stos
es
movsb
inc
pop
aad
sub
pop
dec
jmp
mov
jae
cmpsl
push
pop
sbb
and
repnz
mov
sub
dec
dec
fs
fldl
cmpsb
cmp
addb
mov
mov
jne
inc
nop
sub
dec
sbb
lcall
jnp
pop
dec
jnp
cmp
add
push
inc
sbb
loopne
xchg
push
lock
and
scas
xchg
inc
stos
lret
mov
push
imul
addr16
scas
mov
mov
arpl
xchg
pop
xor
insl
mov
loopne
into
xor
dec
push
fs
pop
pop
aam
and
pop
xor
sub
jnp
inc
or
mov
jnp
fildll
stos
sbb
out
mov
push
and
add
pop
xor
push
int3
mov
loopne
cltd
sar
scas
or
into
xor
fnsave
dec
int
mov
in
sahf
sub
xor
adc
xlat
popa
or
xchg
mov
lods
cmpsl
lods
sahf
mov
sti
push
lods
mov
xchg
fsubs
idiv
scas
je
idiv
dec
lods
cwtl
adc
shll
mov
jb
jl
and
inc
xor
pop
adc
sub
icebp
movsl
negb
mov
xlat
and
data16
mov
lret
in
mov
inc
in
in
movsb
pop
mov
ljmp
dec
dec
mov
in
cmp
cmp
cmp
add
or
daa
popa
andl
dec
sub
cmc
shrb
cli
jge
out
fistpll
cmp
dec
pop
lret
mov
ss
push
and
cmpsb
mov
xchg
ret
insb
negl
aam
pop
push
cmpsl
pop
ds
imul
mov
cmp
mov
ljmp
sub
xchg
nop
out
cmp
mov
cld
pop
add
add
dec
inc
mov
pop
jb
fisubrl
cli
push
sub
mov
or
xor
add
dec
sub
ret
pop
add
sbb
out
jae
insl
mov
int3
lret
inc
jo
push
iret
dec
pop
mov
jle
push
adc
jp
int
adc
mov
dec
push
mov
fwait
imul
ret
mulb
cmpsb
pop
cld
sub
jb
cmp
and
cli
mov
fiadds
iret
cmp
xchg
inc
jae
mov
jns
xchg
movsb
rcll
xlat
insb
dec
mov
stc
inc
stc
subb
daa
aaa
fiaddl
xchg
mov
fnstsw
pop
movsl
outsl
lock
mov
jb
xchg
pop
push
xor
aam
push
adc
dec
leave
cli
stos
mov
ljmp
ret
icebp
out
or
nop
xor
lret
rcll
sar
imul
mov
outsl
push
jp
push
push
xchg
stos
xor
mov
scas
out
xchg
and
adc
or
je
sti
aaa
mov
rcrb
bnd
dec
roll
cltd
repnz
pop
sub
movsb
add
cmpsl
ss
shlb
mov
and
push
cld
jae
sbb
push
shrl
sub
js
test
pop
fimull
in
or
jl
iret
push
sub
jo
cli
xlat
pop
repnz
mov
sub
cmp
and
ret
es
decb
out
scas
cmpsb
jnp
cmpsl
andl
sub
or
and
lret
test
in
cmpsb
xor
or
xchg
fwait
xor
inc
call
dec
jnp
addr16
aaa
push
dec
outsb
dec
pop
out
xchg
aam
mov
jnp
leave
or
fdivrs
xor
jbe
mov
pop
addr16
fs
mov
std
outsb
mov
icebp
mov
js
mov
mov
sti
xchg
subb
je
subl
add
in
add
jne
mov
pop
mov
sbb
lahf
fisttpl
inc
pop
pop
hlt
sbb
cmpsl
subb
pop
hlt
inc
popa
mov
mov
mov
sahf
leave
sti
iret
fimuls
or
xchg
shrl
and
mov
push
add
jns
sbb
fdivrl
push
add
mov
arpl
fwait
or
cld
lods
aaa
es
or
push
push
mov
sbbb
and
xor
push
sbb
cltd
popf
or
xor
int
call
bound
cmp
add
push
cs
jecxz
or
flds
push
call
inc
mov
lret
sub
xor
pop
adc
stc
scas
cltd
add
pushf
ficompl
sub
movsl
loop
pop
cmp
add
xchg
cmp
xchg
lret
mov
adc
or
sub
or
cwtl
sbb
cli
mov
lds
push
add
popf
xchg
sub
or
aam
insl
cwtl
mov
movsl
mov
add
loop
mov
mov
sub
mov
js
cmp
jmp
and
or
xchg
xor
aam
ret
xor
std
sbb
and
mov
or
pop
cmpsl
push
sub
mov
sub
push
cld
sbb
or
pushf
pop
fistps
inc
jnp
mov
movsl
xchg
popf
and
cmpsl
push
mov
pop
cmp
fsubl
jnp
lods
inc
push
adc
jb
imul
adc
sti
pop
xor
or
imul
negb
cli
xchg
fcoms
fidivs
fstl
lret
out
mov
pop
test
pop
or
lcall
aam
fidivl
mov
mov
outsl
or
jp
lods
mov
mov
mov
fldcw
xchg
lahf
push
test
out
jge
cmpsb
out
push
mov
push
lods
add
js
icebp
xchg
pop
jecxz
jno
pop
jecxz
mov
outsb
sub
xor
fiaddl
and
mov
add
stc
or
inc
inc
mov
out
dec
jmp
cmp
sub
lock
sbb
repz
xchg
fimull
jbe
push
and
popa
pop
pop
dec
mov
cwtl
mov
cmp
mov
cli
add
popf
push
mov
dec
xor
jmp
test
mov
fs
xor
popf
es
imul
fsubrs
nop
add
mov
mull
add
sub
cltd
cmp
mov
in
add
and
iret
xor
stos
lret
rcll
jecxz
cmp
aad
mov
and
sub
mov
push
or
push
xor
cmp
int3
jo
inc
xchg
push
jbe
and
dec
out
mov
dec
add
inc
push
jbe
sti
imul
clc
scas
push
mov
xchg
aam
cmp
in
sub
dec
xor
xchg
cmc
sub
insb
mov
aaa
popf
int3
sub
xor
das
mov
pop
into
mov
mov
xor
dec
das
fwait
jno
test
mov
cmp
dec
pop
mov
leave
jmp
ret
leave
mov
sbbb
movsb
mov
icebp
add
jns
or
lcall
inc
aaa
sbb
test
adc
sub
leave
loope
mov
loopne
pop
fwait
mov
mov
fwait
sbbb
dec
push
jno
int3
xlat
jl
push
inc
add
cmp
mul
jp
xlat
aad
sbb
incl
flds
inc
ror
repz
inc
sahf
sbb
addr16
das
les
out
pusha
int3
aad
test
xchg
imul
push
je
sti
jl
xchg
pop
xchg
mov
mov
pop
dec
scas
fiadds
push
mov
pop
fldcw
les
cmc
jle
add
lock
into
frstor
mov
pop
fcmovne
mov
out
mov
sbb
std
gs
add
and
pop
and
xchg
xlat
sti
add
or
cmp
mov
sarb
dec
xor
enter
push
test
imul
inc
dec
sub
mov
sub
dec
sub
pop
or
das
mov
repnz
jnp
pop
int3
or
ret
mov
xor
sub
sub
add
ja
jmp
fmull
xor
xor
cli
mov
cmp
or
mov
push
jae
cmp
pop
dec
jmp
std
jo
js
xor
scas
mov
aam
mov
inc
xchg
ljmp
xor
ret
jle
pusha
fs
hlt
mov
cld
mov
xchg
cmp
cltd
xor
js
adc
int
mov
or
insb
xor
repz
dec
adc
inc
sbb
mov
jmp
pusha
fsubr
test
das
outsb
mov
pop
fcmovb
cld
fmulp
mov
daa
lahf
lahf
cmp
jl
arpl
push
jp
xor
jp,pn
andb
sti
out
dec
shlb
insl
mov
pop
or
movsb
mov
jo
arpl
push
std
rolb
cmc
call
jb
xchg
or
jmp
push
add
sarb
cmp
fisttps
orl
mov
pop
into
lods
jp
rcll
sub
push
dec
adc
cmpsb
lods
xchg
cmp
mov
pop
and
jle
mov
cmpsb
mov
adc
pop
and
sbb
push
jecxz
adc
fistpl
and
jp
dec
inc
outsb
dec
xor
inc
js
cmp
push
pop
enter
mov
cmp
xchg
test
js
xor
aam
sub
sub
lret
popa
mov
pop
stc
gs
cltd
andl
movsl
jge
in
ja
scas
mov
add
mov
sub
xor
nop
daa
inc
mov
std
mov
stos
stc
pop
lea
imul
mov
ja
push
sbb
and
xor
test
adc
mov
dec
lds
inc
fs
sti
inc
sti
ja
mov
pusha
roll
inc
mov
mov
inc
fnsave
mov
jle
popf
addl
shlb
pop
sbb
repnz
dec
test
push
push
adc
sub
arpl
shrb
ficompl
mov
pop
xor
inc
lahf
sbb
add
sti
sahf
inc
gs
xlat
inc
pop
sbb
es
pop
lahf
mov
sbb
js
inc
cmpsb
movl
or
xchg
call
out
enter
lods
push
xor
test
and
mov
outsb
sbb
lcall
and
loop
movsl
scas
les
int
sti
test
or
pushf
cmpsl
push
dec
mov
jmp
cmp
and
mov
pop
push
add
xchg
mov
lret
sbb
lcall
mov
scas
movsb
mov
adc
lds
fistl
adc
or
or
insb
sub
pushf
pusha
out
pop
xor
movsb
xlat
popa
out
negb
scas
mov
jns
popa
cmp
inc
add
mov
push
dec
adc
jg
adc
xchg
bound
out
rcrb
sbb
pop
mov
xlat
daa
stc
ss
cld
and
mov
xchg
dec
cmc
mov
xor
in
aad
pop
cmp
inc
test
mov
mov
pusha
cmc
ljmp
ja
and
clc
into
pop
ds
addb
aas
les
cli
xchg
gs
in
mov
outsl
xor
lock
mov
add
cmp
ror
outsl
pop
outsb
and
add
mov
es
jmp
les
mov
mov
sub
jns
fwait
lock
adc
imul
pop
adc
inc
pop
push
mov
cmpsl
add
in
mov
cmpsl
rorb
mov
jae
loopne
cmp
or
fwait
mov
xchg
sbb
adc
mov
mov
dec
xor
mov
push
test
xlat
fdivs
lret
rclb
push
pop
lods
pop
cmp
stc
lahf
pushf
test
xchg
sbb
rcr
lods
or
pop
pop
test
lock
xor
xor
imul
push
loopne
das
fnstcw
bound
repnz
mov
mov
fildll
mov
xor
insb
cltd
jle
mov
rcrl
cmp
mov
ljmp
adc
cmpb
xlat
or
jns
xchg
loop
pop
jne
cmp
cmc
cmp
dec
mov
or
jne
test
adc
popa
or
cmp
push
jnp
add
dec
lahf
pop
cmp
rcll
scas
repnz
sub
aas
push
or
clc
in
pop
cmp
push
mov
sub
sub
or
xor
adcb
adc
cmp
das
lds
dec
stos
mov
sti
rcrb
fwait
imul
in
lods
jne
xor
xor
mov
mov
cmp
or
mov
or
adc
pusha
mov
imul
jbe
mov
or
testb
popa
loop
jecxz
push
mov
clc
lock
jge
fidivrs
push
std
mov
push
leave
in
sbb
mov
dec
std
fdivl
out
xchg
mov
mov
inc
mov
fcomp
cmc
in
sahf
add
stc
mov
and
mov
lea
and
gs
stc
int3
xor
lock
insb
stos
ret
adc
sbb
pop
push
in
fsubrl
call
mov
cmp
cmp
test
enter
mov
inc
sbb
sub
into
xor
xchg
mov
movsl
out
sub
popf
mov
lock
outsb
loopne
adc
in
out
or
or
jg
je
and
add
leave
popf
loopne
xchg
mul
in
pushf
lea
adc
repnz
repz
sbb
loopne
or
rclb
push
and
loope
xor
add
mov
js
insl
or
out
jns
sahf
fidivrs
cmp
cmp
fcomip
sbbb
pop
xchg
push
inc
cmpsb
mov
in
fiaddl
pop
aaa
and
push
lahf
aaa
lds
inc
loop
xor
mov
mov
mov
xchg
stos
jmp
xchg
and
pusha
aaa
rcl
fistl
aaa
and
and
add
ds
pop
pop
lods
push
mov
or
les
xchg
cmp
push
xor
jmp
and
pop
pop
sti
xor
loope
aam
xor
lds
in
sub
and
jle
jle
aam
push
jmp
add
movsb
sti
movsl
test
xchg
aad
sbb
mov
pop
sbb
aad
push
xor
jle
xchg
fcompl
push
adc
or
mov
shll
inc
dec
test
and
mov
rcrb
push
lods
mov
pop
sbb
push
insl
leave
push
inc
inc
xchg
mov
mov
xor
leave
add
fldl
adc
jmp
or
jge
inc
add
mov
push
mov
mov
out
fwait
mov
mov
add
or
bound
inc
inc
pop
sahf
mov
rorb
fwait
mov
sbb
inc
and
test
dec
rol
inc
xlat
or
cmpsb
int
add
adc
mov
xchg
inc
dec
or
jmp
out
sbb
mov
cmp
mov
bound
jecxz
cmp
out
ljmp
push
sub
aaa
xor
icebp
aam
fistps
addr16
int3
mov
cs
fcmovne
xor
or
mov
in
push
mov
dec
rorl
fs
imulb
imul
dec
pop
add
js
pop
cmp
pop
inc
out
stos
push
jg
adc
cmpb
jb
lock
sbb
lods
xor
xchg
stos
fmull
in
cli
in
cmp
jecxz
fyl2x
xchg
cltd
insl
pop
test
lcall
sahf
outsl
loop
out
sub
xchg
xor
mov
mov
pop
dec
lock
cmpsl
fistpll
xchg
ficompl
repz
cmp
pop
lea
lcall
sub
fsubl
inc
into
les
inc
jecxz
iret
mov
mov
enter
mov
int3
xchg
mov
shll
or
sub
push
lods
cmc
jecxz
xor
mov
lds
leave
mov
inc
lods
mov
int3
sub
out
outsb
jmp
push
push
mov
xchg
push
js
mov
push
iret
loop
sub
push
bound
cld
icebp
dec
xlat
lods
pop
pop
cli
xchg
cmp
mov
in
cmp
dec
ljmp
lock
mov
jo
xor
and
mov
xchg
jbe
xorb
push
bswap
add
xorl
xor
es
ret
int3
imul
xchg
bound
scas
mov
int
jnp
pop
loopne
fcomps
sarl
ret
xor
mov
dec
das
cwtl
mov
mov
fwait
cmpsl
sub
push
xlat
or
pop
or
cmp
adc
xor
xchg
xchg
lea
mov
ret
fldl
xchg
dec
ss
mov
fistl
mov
dec
fldl
xchg
inc
push
pop
inc
out
jl
imul
and
dec
inc
sbb
add
jno
xor
jbe
adc
push
mov
adc
xor
pushf
jb
adcl
stos
daa
shrl
xor
cmp
add
xchg
imulb
lcall
enter
dec
loope
inc
or
inc
cmpsl
xchg
in
std
ljmp
or
es
push
xchg
push
lcall
mov
aaa
fwait
adc
cld
cmp
sarl
lds
add
jge
adc
orl
icebp
xlat
test
insb
xor
fildl
test
int
and
shlb
xchg
pusha
mov
pop
sub
cmc
in
xor
xchg
loopne
in
mov
cmp
lret
xlat
sti
jb
insb
and
jne
subb
rcll
xlat
iret
jg
push
and
orl
fcoms
xchg
movsl
jb
nop
and
movsb
stc
mov
dec
inc
fsubrl
ret
lahf
dec
ss
push
mov
stos
mov
call
rcrl
jne
aam
maskmovq
testl
or
push
xchg
xchg
call
sti
mov
mov
or
adc
das
cltd
addr16
mov
mov
popf
fidivrl
test
cltd
jo
inc
or
aaa
in
mov
mov
xchg
jmp
or
in
popa
test
test
stc
sbbl
jmp
mov
leave
mov
push
cmp
mov
jae
mov
ss
mov
xlat
mov
pusha
in
clc
add
lds
jae
cmc
mov
cmpsb
adc
pop
pop
mov
pop
mov
ret
pop
jecxz
adc
into
rcll
test
push
lea
inc
pop
rolb
cli
aad
cmp
or
inc
insb
je
push
imul
arpl
cmp
in
lcall
add
sbb
sub
insb
mov
push
pop
ret
mov
push
cmp
sqrtps
sbb
jmp
fs
rolb
fcmovnu
xchg
xchg
mov
add
mov
push
bound
lahf
jle
scas
cli
negl
pop
add
pop
jp
push
and
jo
push
and
cwtl
inc
jb
and
in
or
scas
imul
add
movsl
mov
dec
leave
repnz
mov
push
movsl
sti
out
jp
repz
pop
dec
sar
cmp
jmp
xor
and
cmp
jae
add
movsl
sub
cmp
lret
or
js
push
sub
lods
push
add
and
or
es
xor
xchg
cmc
repz
sub
outsb
es
add
and
lods
push
mov
mov
pop
xchg
insl
dec
dec
cmp
inc
aaa
repnz
dec
jmp
or
outsl
stos
mov
push
enter
movsb
dec
mov
mov
cltd
sbb
scas
mov
lock
sahf
pop
mov
or
stos
movsb
mov
ss
mov
adc
adc
or
mov
lds
pop
sub
xchg
cs
lock
sbb
flds
push
stos
mov
xchg
loopne
gs
mov
xchg
mov
lods
popf
sub
ds
sub
jb
frstor
xchg
pop
out
cmp
in
dec
dec
push
outsl
cmpsl
dec
cmp
pushf
ljmp
jae
pop
lea
adc
popa
outsb
pop
rclb
sub
pop
fwait
inc
sahf
dec
push
xchg
xor
je
cmp
scas
inc
add
cmp
jp
mov
fst
add
ljmp
out
daa
loope
addl
pusha
outsb
fimuls
and
mulb
add
or
jecxz
or
dec
adc
repz
pop
out
xchg
inc
loope
cmp
inc
aam
ds
sub
push
or
test
xchg
and
add
or
stc
and
add
clc
xor
xor
sub
sub
xor
mov
mov
mov
add
jmp
sub
addr16
jnp
jne
jne
imul
and
inc
sub
pop
jp
dec
mov
fldl
cwtl
mov
add
ljmp
pop
mov
pusha
xchg
imul
mov
repz
test
rcrb
and
push
lock
dec
inc
mov
mov
andl
popf
and
add
out
sahf
ljmp
mov
xchg
out
pop
adc
push
push
sbb
inc
imul
push
sti
outsl
xchg
mov
inc
out
test
sub
sbb
xchg
jb
cmpsl
jno
movsb
nop
push
mov
xor
enter
and
push
pop
xor
jl
fildl
popl
cld
jno
mov
fstps
fs
test
cli
in
push
rolb
repz
call
mov
mov
add
aaa
jp
in
sub
and
adc
out
clc
dec
roll
aas
dec
lret
aaa
loope
push
adc
int
sar
inc
mov
adc
lret
mov
cmpb
ds
je
and
movsl
sub
mov
jns
fists
lret
testb
stos
xor
mov
cmp
orb
fnstcw
leave
int3
mov
cmp
jns
dec
or
or
adcl
dec
or
addr16
jle
out
fmuls
sub
fwait
jo
dec
push
push
lds
lret
inc
sarb
mov
jb
testb
ljmp
mov
decl
cmp
pop
popf
sahf
test
popf
sub
shl
mov
pop
jno
scas
stos
fwait
es
fstpl
mov
and
jb
push
or
sub
fs
xor
mov
push
xorb
mov
dec
xor
mul
cmp
cmpsl
aaa
jb
xchg
push
mov
sub
sub
or
fistl
mov
orb
or
sbb
inc
mov
mov
push
outsl
hlt
cwtl
add
adc
push
dec
test
ss
xlat
pop
aad
push
fisttpll
lock
out
lds
in
adc
lret
mov
cli
mov
out
out
test
xor
scas
push
jp
add
dec
adc
inc
mov
jecxz
add
pop
bound
push
insb
dec
and
jg
pop
cld
test
pop
jae
jp
insl
add
pop
adcb
push
test
into
xor
cli
mov
insb
test
jbe
fisttpl
mov
mov
adc
div
cmp
xor
sbb
in
inc
pop
push
cwtl
pop
enter
mov
push
dec
inc
jp
xor
mov
pushf
idivb
jl
push
push
inc
imul
movsl
xchg
and
pushl
pop
ss
sbb
int3
jecxz
push
insl
shl
fildl
cmpl
stos
and
cmp
ds
dec
xchg
pandn
popf
pushf
mov
sub
fucom
cmp
scas
and
cmpsb
iret
popf
sbb
pop
ret
sub
lods
push
ds
test
jge
call
in
jno
add
inc
out
fcoml
sub
cmp
cs
mov
push
testl
test
loope
xchg
sahf
rolb
lret
in
lret
add
popa
jae
push
push
xor
negb
nop
cltd
xor
xchg
loope
mov
aad
dec
mov
aam
inc
inc
inc
lock
fildl
jo
inc
mov
or
cltd
out
dec
outsb
icebp
js
cmpsb
aaa
ds
flds
or
xor
popa
pop
movsb
dec
ror
mov
and
lock
fdivrp
cmp
cwtl
xor
pop
mov
mov
js
out
ret
loope
jns
xor
adc
mov
test
out
in
mov
popa
adc
addb
rol
insl
jmp
push
jae
cs
push
dec
not
cmpsl
jno
lret
cmp
les
add
imul
push
dec
test
inc
aaa
mov
xchg
cmp
test
test
ja
cmp
dec
into
xchg
pop
push
sub
mov
xlat
stc
cwtl
mov
jo
addr16
mov
push
js
leave
pop
iret
or
mov
push
pop
cld
pop
sbb
adc
loopne
clc
xchg
add
push
adc
test
push
adc
cmc
add
xor
adc
mov
fistps
adc
sbb
mov
mov
mov
pop
test
lds
out
in
mov
adc
iret
dec
insb
cld
fiadds
pop
sti
pusha
rolb
imul
test
jmp
add
cmp
push
jo
or
push
pop
cmp
sbb
mov
lds
pop
lods
mov
jp
int
jle
pop
pop
and
aad
jb
in
mov
pop
inc
int
lret
xchg
fcomp
jb
xchg
mov
mov
adc
xor
push
mov
push
in
outsl
jl
pop
xchg
fxch
mov
lods
fs
in
mov
rcl
mov
jl
inc
adc
xor
mov
or
mov
dec
aaa
lret
sbb
mov
clc
mov
outsl
and
movsb
sar
stos
pushf
in
push
adc
sahf
ja
push
outsl
fildll
or
dec
mov
xchg
or
subb
lock
inc
dec
jp
fildl
mov
jp
rcr
and
push
loopne
inc
or
mov
mov
sub
std
xchg
xor
or
push
cmp
imul
add
mov
mov
sub
dec
and
adc
cld
out
int
mov
pop
movsb
pop
jge
in
jp
sub
mov
push
das
jle
repz
hlt
jmp
add
jns
push
mov
jmp
mov
jne
inc
repz
rcrl
xor
add
push
mov
or
in
jns
mov
rol
push
adc
adc
pop
push
or
test
inc
xor
scas
mov
nop
xor
decw
mov
jns
ror
filds
nop
adcb
jb
jle
dec
xor
xchg
mov
push
in
mov
xchg
mov
xor
mov
push
leave
push
imul
into
test
out
mov
fistpll
ficompl
int3
mov
arpl
sub
jo
rcll
or
clc
insl
and
pop
ret
push
movsl
xor
rdpmc
shr
pop
pop
or
or
add
pop
nop
shlb
pushf
shlb
lret
cmpsb
movsl
test
cmpsb
mov
or
jmp
clc
or
mov
cmp
jno
dec
xor
enter
aam
enter
outsb
push
push
into
push
add
push
data16
add
in
mov
mov
decl
loope
push
dec
ficomps
repnz
add
in
push
pop
adc
pop
dec
ficompl
pop
pop
sub
out
in
sbb
and
in
cwtl
push
inc
and
jmp
jl
xchg
jg
jmp
push
cs
scas
subl
push
inc
les
mov
fs
repz
cmp
into
int
mov
iret
mov
daa
and
and
inc
aas
in
pop
mov
loopne
out
push
lea
aaa
es
push
sbbb
jnp
cmp
push
dec
mov
jae
fadds
mov
mov
ret
out
dec
test
ja
cmp
cmp
xchg
and
cs
pop
cltd
jl
aaa
jecxz
aam
sub
in
inc
or
or
seto
repnz
mov
addr16
pop
and
ficomps
add
pop
xchg
dec
jle
mov
je
inc
mov
in
pop
jl
jae
mov
mul
imul
fnstsw
aas
into
jmp
or
and
inc
pushf
aas
jns
hlt
lods
adc
push
mov
in
imul
movsb
daa
pop
ljmp
lcall
cmpl
frstor
addr16
out
mov
xchg
movsb
js
pop
mov
repz
lods
xor
rorb
sub
jecxz
aaa
pop
xorl
mull
or
dec
imul
or
mov
and
fnstcw
jmp
add
push
rorb
js
mov
dec
popf
sub
cmpsb
mov
xlat
call
fcomps
gs
into
jae
push
jp
mov
cmp
dec
insb
push
lock
shll
addr16
push
popf
and
dec
flds
push
mov
lods
add
out
jp
dec
mov
sbb
adc
and
sarb
sbb
sub
xor
sbb
dec
in
push
notb
das
inc
das
mov
std
xlat
add
addl
nop
cmp
daa
clc
cmp
mov
sarl
xchg
pop
int
cmp
cld
sbb
lret
out
xchg
into
dec
das
jns
int3
pusha
mov
cmpsb
in
lods
lahf
iret
push
dec
push
decl
bound
mov
push
jne
mov
out
dec
mov
adc
and
adc
jns
ss
nop
xchg
js
jnp
test
lock
sahf
xchg
sti
push
repnz
push
addr16
xor
sbb
popf
into
xchg
push
movsl
es
mov
int
fsubrp
loop
push
xchg
mov
ljmp
leave
lods
nop
inc
mov
mov
rolb
std
imul
test
fcoml
inc
test
adc
jb
aad
jae
dec
mov
fists
xchg
notb
popf
fsubs
fwait
mov
sub
addr16
inc
cwtl
out
push
arpl
mov
jl
sub
callw
fildll
mov
jmp
test
xchg
fcomps
mov
xchg
sbb
icebp
jl
fstl
orb
dec
shlb
inc
outsb
pop
data16
add
cmp
orl
xchg
data16
jmp
clc
sbb
nop
pop
mov
cli
sbb
sub
sub
xchg
or
arpl
pop
hlt
hlt
adc
cmovo
mov
pop
xor
mov
jns
adc
pop
fdivl
dec
push
mov
test
lods
ret
cmp
cmp
dec
mov
cmp
dec
mov
sub
ret
adc
aam
imul
cli
mov
iret
inc
rcrl
mov
hlt
and
andb
push
pop
cmc
lods
push
outsb
rcl
push
xchg
pop
and
iret
enter
or
pop
xor
stc
and
test
or
xlat
lret
inc
fdivrl
int
imull
es
pop
in
mov
outsl
adc
stos
fstpl
subb
mov
dec
mov
fcoms
rcrl
fstpl
enter
dec
sbb
and
jmp
adcl
cmp
das
movsl
mov
cmc
push
push
push
fs
inc
mov
lods
fsubl
mov
jle
cmp
xor
sbb
bound
dec
pop
adc
mov
or
push
test
pop
add
xchg
into
iret
repz
mov
daa
push
sbb
xchg
fucomip
movsb
xchg
sub
loop
shlb
xorb
sub
mov
int
int
loop
in
test
xchg
ds
aaa
add
cs
or
push
das
push
out
inc
scas
popf
jge
or
xorb
ljmp
scas
out
push
and
xor
mov
or
dec
inc
add
add
mov
xchg
aaa
hlt
neg
push
cwtl
cmp
ljmp
jl
fmuls
mov
lods
jno
aad
push
push
mov
jl
bound
or
insb
xor
lret
sub
in
clc
cltd
cmc
test
ja
dec
cmc
push
fscale
push
ret
or
ficomps
mov
jmp
cli
stc
fdiv
cs
test
add
out
outsl
gs
mov
sbbb
addl
jg
scas
mov
in
cmp
and
fsubl
mov
imul
icebp
xchg
cmp
dec
les
push
je
pop
dec
ss
cmc
or
or
xor
js
mov
inc
aad
dec
pop
inc
bound
sbb
loope
out
cmp
icebp
pusha
dec
stos
xor
mov
dec
je
mov
jmp
lea
in
repz
pop
jo
adc
ss
pusha
add
or
push
loop
cmp
iret
xor
adc
imul
gs
push
out
in
or
pop
push
inc
adc
les
pop
movsb
es
daa
mov
and
sub
dec
xor
sarb
or
fisubrl
insl
sub
jns
xchg
in
mov
scas
mov
lcall
adc
cmp
xor
cmpsl
or
aaa
out
push
pop
jmp
push
out
iret
je
jo
clc
push
add
ret
clc
sub
popf
push
add
jp
das
push
movsb
stc
jecxz
jb
popa
loopne
xchg
je
or
int3
push
or
std
adc
or
inc
test
les
jnp
add
sub
ss
int
adc
outsl
clc
push
rolb
cmp
mov
jnp
nop
adc
aaa
cmp
sub
mov
xor
or
jge
xchg
nop
lods
out
cmp
pop
push
js
stc
dec
xchg
mov
ds
mov
add
sbb
push
fcomip
ljmp
int3
rorl
mov
adc
imul
cmpsl
push
jns
xor
inc
repnz
jnp
test
xchg
inc
ret
dec
xchg
xor
mov
dec
sbb
adc
andb
inc
movsbl
fimull
arpl
adc
scas
cs
pusha
xlat
test
loopne
dec
jl
pop
sbb
fisttpl
xor
pop
je
iret
test
test
mov
xor
insb
ffreep
mov
mov
adc
add
lret
mov
clc
mov
in
xor
popf
gs
mov
movsb
dec
push
or
push
add
dec
gs
out
dec
push
test
into
and
fwait
scas
cwtl
movsl
pop
insb
scas
test
jecxz
call
out
sahf
mov
aad
mov
adcl
jp
mov
leave
sbb
sbb
sub
int3
in
lahf
into
mov
dec
and
mov
push
jo
xchg
or
add
jo
pop
pop
int3
in
push
rcrl
mov
dec
imul
xchg
cld
insl
pop
inc
lea
push
test
sub
ss
pushf
jnp
orb
sbb
pop
pushf
inc
inc
jp
loope
fstpt
mov
jmp
in
cmpsb
jmp
insl
jecxz
add
outsb
mov
cmp
pop
aaa
cmp
or
jg
fs
dec
push
mov
cmp
lock
enter
imul
lahf
arpl
fmull
fdivrs
sub
inc
fsub
mov
xor
shlb
stos
fstps
or
leave
or
out
shlb
mov
add
mov
add
stos
adc
sbb
cmpsb
stc
ljmp
jo
cmc
mov
add
movsl
add
mov
stc
movsl
leave
loopne
dec
mul
mov
mov
aam
loop
stos
and
mov
sbb
xchg
inc
clc
mov
jbe
outsb
and
ret
mov
in
insb
push
pop
mov
fnstsw
inc
jo
sub
iret
jge
xchg
jge
cli
das
fs
cmp
shlb
pop
cli
cmpsb
test
push
sub
fs
adc
insl
dec
adc
push
cmp
mov
jnp
adc
push
ret
or
fwait
add
xchg
mov
xchg
cltd
aaa
das
xor
and
xchg
movsb
sbb
aam
gs
pop
xchg
mov
lahf
xor
xor
call
fmuls
icebp
fdivr
xor
cmp
mov
dec
jle
lods
fwait
imul
push
rol
loopne
cwtl
add
fwait
cli
lock
das
push
or
loop
jecxz
add
cwtl
cmp
or
mov
notl
mov
inc
pop
push
inc
adc
cmp
mov
ret
insb
gs
outsb
fcompl
jp
inc
cmpb
jb
inc
add
jmp
push
adc
test
xchg
mov
pop
lea
inc
out
mov
imul
je
cmp
pusha
shll
cmc
pop
movsb
into
and
pop
jge
mov
aas
test
les
stc
push
es
lret
dec
xor
fmull
mov
fisttpl
dec
inc
nop
lcall
arpl
push
or
mov
jns
inc
fadd
adc
mov
cmp
outsb
pop
jne
mov
cmpsl
dec
xchg
fcmovb
sub
sbb
sti
leave
in
xchg
push
out
jo
test
pop
call
jbe
mov
cmp
gs
and
xor
inc
inc
pop
ds
inc
and
cmc
jo
adc
lods
add
add
pop
mov
andb
adc
inc
scas
jns
cmc
js
lahf
sub
aam
sbb
mov
movsb
push
dec
pop
inc
je
push
repz
xchg
ds
loope
in
les
and
in
xor
adc
in
nop
notb
add
stos
push
cmpsb
lret
pushf
push
xor
sahf
xor
cld
push
or
fistpl
xlat
pop
loopne
jl
mov
add
pop
in
add
loopne
popf
xchg
xchg
fdivl
fcompl
daa
pushl
loope
cwtl
lock
pop
jmp
movsb
ljmp
iret
xchg
dec
and
lods
sub
and
pop
add
icebp
pop
loopne
cmp
dec
mov
mov
sbb
inc
outsb
adc
int3
andl
sub
inc
and
lods
sbb
sahf
and
push
adc
dec
mov
or
jno
bound
fcoml
cmc
mov
cmp
cmc
outsl
jb
and
and
outsl
fstpl
out
cmp
jmp
dec
mov
xor
arpl
idivb
cmp
lock
negl
jns
mov
repz
repnz
lfs
inc
iret
lds
cmpsb
loopne
inc
and
sbbb
xor
hlt
je
mov
or
jecxz
pusha
out
push
scas
imul
shl
mov
add
sbb
jg
mov
xor
insl
sub
negl
nop
cmc
jo
sbbb
test
jo
in
imul
xor
adc
mov
lret
inc
outsb
jecxz
pop
xor
pop
cli
stc
sub
xchg
mov
and
push
sahf
jb
pop
or
dec
leave
sarl
es
mov
test
sub
jmp
xchg
ja
jge
xor
mov
push
push
or
sbb
out
dec
add
scas
subl
vmovq
mov
push
and
arpl
push
add
cmc
rcrl
and
jg
repnz
jle
daa
cld
ret
or
lret
and
jnp
dec
test
inc
sbb
and
jns
pop
lods
insb
mov
or
jle
push
sbb
or
add
xchg
adc
js
cmp
or
and
jbe
fidivrl
jne
jl
push
fs
mov
fsubrp
imul
cmp
sbb
mov
adc
pusha
pop
pop
cmp
sub
add
out
sub
fdivrl
fwait
test
popf
insl
xor
mov
cmp
pop
gs
or
mov
clc
mov
or
dec
test
push
pop
mov
loopne
decl
jno
mov
loop
xor
lock
mov
mov
mov
lret
push
or
sbb
jle
mov
mov
out
cmp
xchg
lea
sahf
jae
lcall
fnstenv
sbbb
xor
and
loopne
lcall
sub
sub
jnp
sbb
and
sahf
gs
test
movsb
call
mov
or
mov
in
in
cmp
stos
xor
push
mov
aas
ljmp
adc
or
lods
addr16
rep
or
cmp
popf
enter
push
push
out
cwtl
aas
in
add
dec
jmp
ret
fs
icebp
pop
push
js
mov
stos
jno
pop
or
adc
jns
in
inc
scas
cwtl
and
fidivrl
packsswb
in
sub
pop
jle
adc
mov
outsl
rolb
mov
addl
adc
mov
adc
es
int
push
mov
fwait
pop
mov
xchg
jecxz
push
mov
mov
sub
pop
mov
out
movsl
jnp
mov
rol
out
imul
sub
mov
pop
pop
xlat
in
ffreep
add
ror
adc
mov
lahf
arpl
divl
sbb
out
lcall
std
inc
mov
sbb
cmp
or
out
arpl
imul
xor
adc
jl
fwait
cmp
xchg
out
call
mov
cltd
sbb
leave
dec
addr16
lret
pushf
ljmp
lds
and
sbb
xor
cmp
adc
inc
into
xor
insl
xor
mov
or
int
sbb
pop
loop
pop
aaa
insl
push
scas
psrad
xor
mov
push
mov
push
cmpsb
sub
pushf
sti
push
out
or
les
mov
popf
cwtl
in
leave
xor
dec
imul
mov
jp
jbe
cwtl
icebp
jae
movl
pop
and
xchg
movsl
pop
jne
pop
fdivrs
imul
jbe
cmp
xor
js
jp
mov
sbb
push
bound
icebp
bound
xchg
cld
bound
xchg
ljmp
mov
sub
jg
push
sbb
mov
jge
push
imul
mov
es
enter
lock
cmp
lods
fsubrl
pop
loopne
pop
jl
add
xchg
mov
jg
ss
mov
xchg
dec
or
test
push
push
xchg
xor
push
aad
add
xor
cmpsl
lret
jnp
cli
jns
dec
push
add
add
or
or
mov
arpl
bswap
fimull
ds
and
iret
int3
xchg
ret
xchg
das
movsb
cmc
cmp
cmp
in
jbe
repnz
dec
clc
xor
popf
pop
xchg
mov
push
xchg
jae
mov
inc
and
sub
stc
or
xchg
inc
movsl
push
clc
cld
mov
pop
adc
inc
out
and
test
seta
push
xor
cmp
aaa
dec
add
or
and
push
mov
in
iret
add
leave
adc
out
inc
sub
sub
ret
sti
mov
hlt
aad
cmp
sbb
jg
testb
sti
lahf
push
xor
daa
lret
in
lods
aam
sbbl
mov
adc
inc
rorl
dec
fs
mov
ss
inc
ljmp
gs
lock
test
jo
xor
in
push
mov
mov
mov
in
lods
mov
arpl
test
in
bound
test
jecxz
mov
jne
xor
inc
jp
iret
or
loope
leave
loopne
and
push
repnz
sbb
xchg
fwait
jle
cld
mov
outsl
pop
in
pop
xor
and
cli
bnd
dec
sub
and
and
push
fnstsw
int
mov
popa
sbb
jns
push
rol
stc
dec
repz
xor
xchg
push
insb
imul
dec
nop
fiadds
or
ljmp
cli
add
int
int
daa
test
das
cmp
pop
fwait
sub
adc
jb
lea
aas
hlt
pusha
jmp
subb
lods
and
shr
out
enter
out
sbb
out
stos
sti
popf
dec
inc
mov
push
sbb
and
bound
mov
es
int
andl
cli
rol
in
or
movsb
xor
out
and
jmp
clc
xorb
loop
jb
out
cmp
ret
fsts
ds
mov
lahf
adc
fcomi
in
scas
popa
mov
pop
ljmp
fimull
inc
rorl
out
mov
fwait
aam
imul
subb
cmpsl
push
adc
out
add
shl
sbb
and
jno
repz
ficoml
and
mov
int
xchg
and
rol
icebp
inc
xchg
mov
or
or
xor
mov
stos
push
fcompl
test
adc
into
jge
jle
jnp
mov
jno
rolb
pop
js
mov
push
lcall
sbb
push
sahf
in
inc
push
add
aad
and
jge
les
sbb
mov
sbb
add
iret
clc
inc
addr16
pop
sub
jns
fucom
in
into
jmp
test
jp
mov
outsl
cli
xchg
jg
jle
pop
jae
outsl
fwait
nop
add
stc
popf
ret
mov
mov
pop
pop
sbbb
jne
sub
xor
mov
mov
fmull
arpl
and
cmp
imul
pop
pop
jo
mov
and
pop
pop
jecxz
dec
or
pop
outsl
cmp
and
mov
xchg
xchg
add
push
sbb
mov
push
leave
insl
xchg
xchg
loopne
or
roll
pop
cltd
js
push
test
jbe
clc
mov
jg
divb
es
movsb
jmp
cmpsl
sub
push
decl
pushw
sarb
jl
shlb
idivl
push
mov
mov
or
jno
xor
out
aam
push
xor
ja
sarl
fucom
aad
mov
cld
xor
lods
es
lds
popf
dec
mov
xlat
adc
mov
cmp
dec
add
dec
jmp
inc
pop
mov
popf
mov
into
push
loopne
movsl
xor
cmp
xchg
scas
xchg
adc
or
fs
jp
mov
ret
adc
shr
fwait
std
stos
out
or
outsl
mov
adc
icebp
fldcw
xor
test
sub
test
lods
sbb
xchg
pop
adc
outsb
fnsave
or
xchg
xchg
mov
xchg
cmp
hlt
cmpsl
sbb
call
test
mov
dec
lods
cmp
fld
and
shlb
out
out
das
pop
arpl
push
adcl
arpl
inc
sahf
ret
out
test
sub
dec
adc
fwait
jle
push
sbb
ficoms
sub
lock
popf
or
mov
cmp
outsb
lret
lods
outsl
mov
ljmp
test
jl
mov
fldenv
xchg
cmp
push
xor
lahf
int3
in
mov
ss
cmp
lret
lods
pop
dec
clc
adc
mov
pop
fcmovbe
ja
out
fnstcw
cmp
adc
jecxz
jo
ret
cmp
aam
ret
xchg
into
pop
rcll
fwait
cmp
and
pushf
fs
inc
cld
cs
fldcw
mov
mov
mov
sub
push
insb
xor
or
aad
and
jnp
lods
cmpsb
dec
ljmp
outsb
cmc
stc
mov
daa
mov
cmp
adc
das
mov
adc
cli
lahf
sbb
sbb
gs
sti
and
stc
inc
pop
jecxz
je
and
dec
or
call
stos
jecxz
inc
sahf
lds
shll
cmp
mov
and
adc
cmpsb
adc
push
sbb
xor
int
dec
jmp
cmp
test
xchg
add
insb
in
dec
cld
pop
leave
andb
ljmp
xchg
pop
pop
xchg
mov
dec
leave
mov
ficomps
cmpsb
outsl
sahf
sub
int
rclb
pop
ret
add
fstl
and
push
dec
decb
fsubs
hlt
adc
xor
and
cltd
jp
loop
adc
das
pop
mov
mov
mov
pop
stc
les
push
loop
in
xchg
push
cmp
cs
es
push
je
pop
repz
xor
lods
mov
push
test
loop
outsb
push
loopne
pop
sarb
lcall
jnp
insl
jo
adc
sub
adc
out
mov
in
sahf
pop
jne
aas
xor
les
movb
pop
xchg
push
test
loopne
fucomp
adc
adc
js
xchg
ja
mov
loop
jecxz
push
mov
xor
pop
jno
test
out
xchg
jp
ret
fbstp
cmp
iret
sbb
sub
jae
es
js
aaa
mov
ret
mov
fs
fs
push
xchg
mov
or
in
and
jecxz
and
divb
enter
sbb
add
sbb
push
cmpsl
popf
ret
jnp
xchg
js
and
mov
push
addr16
xchg
fdivp
movb
mov
pop
test
das
and
daa
aam
xor
pop
sbb
sbb
inc
cmc
lds
out
dec
xlat
out
xor
pop
mov
sub
push
cmpsl
stc
mov
push
push
sub
and
push
and
xchg
aam
mov
add
mov
mov
jbe
xor
or
push
jnp
dec
in
loope
es
into
jno
or
mov
dec
idivl
mov
testl
lss
scas
pop
jg
pop
fisttps
sahf
xor
js
dec
std
mov
lds
dec
repz
push
fmuls
les
andb
les
jno
mov
mov
lea
popf
ffreep
jl
insb
lret
data16
das
inc
adc
lret
shll
xchg
popf
cld
arpl
jg
cmp
push
dec
sub
rcrl
jmp
bound
subl
mov
or
pop
and
test
cmpsb
fists
loop
cmp
dec
and
icebp
push
cld
rcrb
fistps
mov
inc
xor
jp
fistl
cmp
push
sub
push
into
and
cmpsl
fsubrs
xor
push
sub
fstpt
scas
incb
mov
sbb
test
lods
sbb
jb
adc
mov
cs
int3
pop
scas
rclb
xor
iret
jae
add
inc
xor
jl
dec
sbb
icebp
call
repz
ret
pushf
movsl
div
ror
cmpsb
cmpsl
add
cs
jb
adc
or
pop
clc
sub
pop
adc
aad
cmpl
fcoms
inc
fisubs
enter
je
inc
adcb
sahf
lock
frstor
cmp
cmpsl
test
pop
jne
ja
repnz
int3
loopne
out
inc
jo
xlat
sbb
std
icebp
or
xchg
adc
test
dec
inc
repz
cmp
pop
push
es
imul
fmull
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
imul
scas
repnz
mov
mov
gs
xorl
add
hlt
int
inc
push
call
mov
es
xor
cmp
dec
or
inc
xchg
sub
inc
iret
fdivl
dec
mov
cwtl
pop
xor
addr16
xor
mov
mov
push
add
pushf
lds
stos
sbb
sar
xor
adc
jae
jns
scas
jecxz
cmp
mov
outsl
enter
stos
mov
jns
xchg
leave
inc
cmp
jge
xchg
imul
xchg
sub
and
pushl
sub
mov
xchg
popf
mov
xor
push
clc
mov
bound
xchg
fmuls
adc
jp
fdivs
js
das
inc
push
out
and
aaa
hlt
jo
in
mov
and
fstl
ret
add
jnp
xchg
stc
xchg
faddl
pop
into
xor
scas
pop
decl
aaa
xchg
test
pushf
push
xor
mov
mov
inc
adc
lret
push
pop
out
add
pop
pop
mov
push
sbb
or
xorl
xchg
xor
pop
or
repnz
in
xlat
int
mov
cmp
xchg
outsb
shrb
xor
bound
cs
jb
cwtl
dec
insb
push
in
push
mov
stos
jbe
sti
lods
insl
mov
and
ret
fsubrp
inc
movb
mov
or
daa
sti
stc
nop
mov
roll
pusha
ljmp
addr16
lods
pop
adc
push
popa
dec
lea
xchg
ret
testb
ljmp
iret
and
cltd
mov
mov
das
not
inc
jb
clc
std
mov
sbb
push
xchg
popf
test
pop
jne
scas
in
in
std
mov
iret
test
jecxz
push
mov
add
sub
jmp
sbb
ja
sbb
mov
lahf
ds
in
cmp
push
lods
hlt
jecxz
sub
movsb
out
call
fsts
sbb
dec
clc
add
adc
leave
jecxz
mov
inc
or
adc
addr16
cmp
mov
cmp
cs
or
ret
movsb
mov
bound
clc
nop
adc
fcom
ss
adc
fisttpll
xchg
pop
mov
sub
or
ja
fs
add
pop
cmp
jbe
lahf
add
mov
sub
roll
push
scas
mov
or
cmpsl
rclb
aad
pushf
ds
pop
sbb
xchg
enter
hlt
mov
fdivr
lock
loope
sti
sbb
xchg
ds
iret
jg
and
pop
xor
push
sahf
mov
stos
push
xor
pop
in
xchg
mov
es
push
jne
je
or
add
cmp
addr16
inc
in
rcrb
mov
or
std
mov
push
orl
adc
jne
push
sub
mov
inc
cmpsb
add
call
fnstcw
mov
aaa
xchg
outsl
fucomip
imul
les
mov
ja
ficoms
mul
rcrl
cwtl
mov
pop
and
arpl
xchg
mov
cmc
fstps
mov
les
shrl
insb
xorb
xchg
xchg
loope
popa
sti
adc
std
inc
fbstp
pop
mov
xchg
mov
push
loop
push
and
or
sub
mov
test
jns
xor
pop
pop
ret
imul
xchg
rol
cwtl
mov
mov
sub
inc
push
insl
push
insb
jl
jbe
xor
add
data16
lea
int
dec
insb
shlb
mov
inc
adc
and
stos
add
fstps
mov
inc
mov
sbb
jo
shrl
lock
mull
or
push
pop
push
notl
xor
jge
adc
daa
xchg
stc
mov
mov
inc
sbb
fisttps
insb
or
lcall
out
add
or
jno
aas
iret
testl
leave
fidivrl
mov
jg
in
inc
or
test
mov
pop
mov
hlt
or
popf
xor
aam
mov
rolb
xlat
iret
daa
in
outsb
nop
scas
insl
push
jl
out
mov
movsl
mov
nop
and
test
popf
mov
pop
repz
pop
bound
aad
lods
mov
imul
data16
jnp
pop
and
test
ret
mov
xchg
frstor
dec
lret
ljmp
jl
xlat
lret
pop
xchg
jp
mov
ja
adc
aaa
sbb
push
in
orb
mov
decl
cmpsl
xchg
inc
or
xchg
mov
sbb
mov
cmp
lahf
xchg
xlat
mov
aas
out
add
sub
dec
call
ret
mov
sti
stc
xor
test
outsb
xlat
push
inc
stos
arpl
mov
call
mov
arpl
cltd
add
es
std
imul
inc
dec
push
jge
data16
mov
add
mov
cmpsb
mov
mov
or
inc
jb
scas
test
cmpb
mov
je
cmc
adc
int3
ret
inc
sub
into
out
in
gs
arpl
dec
mov
dec
in
lea
test
roll
adc
pop
test
xchg
arpl
out
pop
sub
cmpb
lods
jmp
je
aas
stc
cmc
rorb
imul
pop
fnstenv
mov
sbb
dec
addl
inc
out
inc
je
inc
mov
ja
jbe
mov
mov
inc
xor
fbstp
lods
fidivl
lock
ret
jae
rolb
popa
in
mov
loope
inc
push
xor
enter
push
gs
clc
dec
dec
push
call
stos
sbb
subb
mov
in
jmp
push
dec
push
out
pop
les
and
fimuls
rcll
popa
sbb
aad
in
dec
push
xchg
jecxz
inc
mov
das
fistpll
adc
dec
out
xor
mov
sbb
mov
lret
sahf
dec
cwtl
std
sbb
push
negb
mov
pop
enter
and
and
pop
movsb
sbb
mov
stc
dec
lods
sub
aam
sbb
dec
lods
sbb
data16
fistpl
xlat
sbbb
jle
and
and
pop
dec
popl
jae
xchg
mov
ffreep
cwtl
sbb
and
mov
jg
insl
inc
imul
aad
or
mov
jge
xor
mov
adc
or
mov
mov
imul
push
pop
sbb
gs
xchg
add
push
cltd
fistl
mov
sbb
loop
or
test
fbstp
xor
dec
daa
repnz
test
insl
xchg
icebp
mov
jns
lret
adcl
mov
dec
mov
xor
out
sbb
leave
push
into
cwtl
fstl
or
aas
jno
imul
xchg
and
scas
ljmp
es
push
and
add
xchg
add
sub
ss
hlt
xchg
iret
cmp
rcrb
shll
inc
fwait
test
cmp
mov
in
xchg
jne
aad
push
add
adcb
xorb
push
mov
fs
jnp
jmp
xor
lret
int
xchg
aaa
data16
mov
arpl
addr16
lock
aas
int3
outsb
scas
xchg
cwtl
sti
pop
adc
jg
sbb
mov
lds
outsb
mov
fnstsw
or
rcll
mov
jo
icebp
imul
pop
add
add
adc
pusha
cld
jne
bnd
mov
testb
push
dec
inc
pusha
dec
inc
insl
or
imul
xchg
das
aad
test
sbb
inc
push
mov
rorl
aad
int3
xchg
inc
fcomi
mov
dec
xchg
test
roll
pop
fstpt
mov
mov
xor
repz
dec
mov
jae
out
or
leave
and
push
xchg
scas
aaa
mov
out
xchg
xchg
insl
stos
jo
xorb
cmc
stos
lds
push
inc
sbb
fcomps
cmp
push
lahf
mov
sbb
loope
cmp
inc
mov
lahf
js
add
mov
adc
mov
xchg
incl
mov
add
aas
addb
xchg
mov
int3
lcall
pop
fs
int3
adc
add
and
adc
sbb
int3
cmpsl
imul
lret
pushf
inc
mov
lret
std
imul
pop
rol
dec
mov
arpl
sti
cwtl
add
gs
out
push
cmpsb
stos
mov
mov
mov
inc
cmp
shr
insb
enter
or
dec
daa
adc
mov
int
push
int3
jmp
daa
sarl
add
fdiv
dec
mov
int
loop
fsubr
jo
imull
rcll
push
mov
cmp
sbb
out
sbb
insb
jecxz
sbb
pop
xchg
mov
fildl
test
mov
imul
aad
clc
jno
mov
inc
pushf
jo
out
mov
inc
sbb
push
out
sti
mov
inc
data16
and
fnsave
idiv
pusha
jl
inc
dec
pminub
push
data16
test
sbb
pop
and
push
and
push
mov
rcl
add
mov
in
ret
aad
pop
daa
mov
in
push
insl
lea
sub
jo
pushf
dec
mov
iret
mov
cltd
jns
mov
push
sub
and
add
test
cmp
jmp
js
int3
sub
xchg
push
scas
pop
js
gs
std
addl
lods
mov
sahf
andl
out
or
adc
in
lahf
push
jb
imul
fs
test
add
lods
test
loope
mov
fcmovne
jbe
sbb
sahf
daa
mov
leave
lock
sbb
add
stc
loopne
clc
pusha
cmp
mov
mov
lea
ret
or
hlt
push
jno
movsb
adc
lea
enter
ss
push
flds
js
enter
aam
popa
popf
mov
or
mov
cmp
push
and
repnz
lock
arpl
stc
pop
mov
inc
js
jo
xchg
cld
jne
mov
imul
push
lea
rclb
ret
out
ss
xchg
cmc
mov
jnp
mov
test
pop
jns
outsl
test
mov
xor
push
ficoml
jge
js
int
fwait
aaa
push
dec
and
jp
ss
fcmovnb
cmpsb
mov
repnz
pop
loop
stos
vpor
adc
pop
jle
push
int
xchg
push
cmpl
call
mov
fcomps
fwait
mov
mul
jle
jb
bound
jns
pushf
out
cmpsl
mov
xor
lods
loop
arpl
dec
push
jmp
push
push
ljmp
cmp
push
sbb
sti
loop
xchg
push
and
add
mov
lahf
or
lret
sub
cltd
xchg
pop
cwtl
mov
ds
inc
and
stos
sub
jne
cmpsb
out
push
inc
leave
add
add
xor
sbb
xchg
add
push
pop
mov
in
rclb
aam
pop
stos
imul
xchg
repz
mov
mov
jg
subl
inc
jbe
pusha
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
hlt
xlat
dec
add
add
add
add
cmp
dec
add
and
add
hlt
xlat
dec
add
add
jb
add
add
add
add
add
add
add
push
dec
add
jo
add
xor
dec
add
add
inc
jns
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
pop
lds
mov
adc
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
