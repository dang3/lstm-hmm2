push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
ret
inc
ljmp
lds
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
push
mov
testl
xor
ret
pushf
loope
mov
nop/reserved
sbb
add
in
mov
push
les
cmc
push
jmp
out
mov
test
lds
in
insl
pop
push
test
ljmp
xor
mov
lods
iret
adc
jnp
shl
dec
jmp
lcall
inc
xchg
enter
mov
mov
leave
aas
mov
loope
inc
imul
les
call
int3
lea
sbb
dec
pop
xor
xor
cmp
pushl
mov
stos
testb
negl
lahf
jg
and
ja
push
pop
mov
jns
in
shlb
mov
out
lret
jl
or
jle
out
push
push
jne
adc
lcall
pop
shlb
pop
scas
ret
je
jg
iret
mov
idiv
outsl
cmp
int3
sub
ret
or
cmp
jbe
pop
sahf
rcrl
mov
push
inc
add
ret
ss
inc
fcoms
adc
xlat
xchg
dec
add
xchg
add
jg
and
testl
ja
mov
push
dec
cs
scas
inc
mov
icebp
adc
sub
hlt
jmp
mov
in
add
out
push
das
inc
mov
mov
and
adc
stos
bnd
les
aas
pop
inc
dec
xchg
or
inc
mov
jne
sti
into
loopne
cmp
fwait
or
push
je
lcall
mov
cmc
ret
mov
xchg
adc
in
push
cli
pop
and
repz
popa
cmp
outsb
data16
xchg
int3
adc
sub
lds
shll
jo
jmp
outsb
fs
in
pop
mov
mov
mov
sub
popf
mov
xchg
shrb
mov
incb
xor
and
cmp
mov
add
aaa
dec
pop
addl
fstps
pop
mov
hlt
pushf
adc
test
fidivl
scas
ds
fildll
jbe
push
filds
inc
mov
lret
inc
or
mov
dec
int
js
scas
mov
jns
push
xchg
hlt
cmpsb
lahf
push
into
mov
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
xchg
xchg
sub
adc
adc
adc
repnz
fs
daa
dec
in
push
xor
add
cmp
cmp
scas
sbb
cmpsl
test
cmp
lcall
fimull
mov
dec
dec
sbb
push
sbb
test
push
lock
pop
sbb
jb
dec
cld
adc
insl
cli
repnz
lods
add
shr
mov
and
pop
add
jnp
and
sub
pop
jecxz
xor
or
xor
sbb
inc
nop
daa
aam
mov
rcr
xor
out
cmp
fidivrs
add
xor
loope
dec
sbb
aas
push
insl
push
cwtl
in
adc
inc
inc
mov
ja
xchg
adc
mov
xlat
lret
and
sub
mov
mov
mov
dec
cmp
icebp
inc
loopne
lcall
or
fdivl
jno
aaa
xor
loop
out
ret
shrl
sti
dec
push
pop
xor
dec
xchg
test
mov
sbb
dec
mov
xor
dec
orl
add
int
pop
pop
push
pop
adc
pop
push
loope
movsl
bnd
pop
mov
insb
movq
je
fcoms
ljmp
mov
les
inc
push
aad
sub
mov
sti
lods
sbb
dec
ret
mov
mov
js
in
stos
adc
loopne
test
jo
outsl
jns
pop
lcall
icebp
fwait
aaa
rolb
movsl
shl
cld
lods
push
cmp
adcb
ss
cmp
xchg
mov
sbb
into
adc
scas
push
pop
leave
xchg
fistpl
sbb
mov
mov
stc
pop
pop
xchg
add
xor
adc
out
call
enter
outsb
out
and
test
push
movsl
lds
mov
jns
pop
adc
fs
mov
jl
into
jne
mov
xchg
push
aam
sub
xchg
fistpl
ss
iret
add
out
push
jo
pop
pop
push
inc
shlb
lret
bound
shrl
fcomip
xor
sub
iret
jae
lret
push
loope
add
xor
lret
add
dec
in
mov
popa
pop
add
dec
mov
int3
and
lods
enter
push
fwait
lcall
clc
adc
xor
aas
or
xor
push
incb
les
hlt
scas
inc
mov
pop
xor
jle
fcomp
test
in
addb
xor
push
push
or
imul
dec
cmp
sbb
leave
mov
cltd
mov
sbbb
xor
outsb
pop
mov
add
or
cs
lcall
pusha
daa
jg
jg
cld
sub
pushf
icebp
aas
pop
mov
cmpsl
xchg
rolb
rolb
lcall
xor
adcb
test
mov
jno
xlat
jns
xchg
hlt
or
mov
pusha
popa
sub
lret
daa
sub
add
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
adc
xchg
xchg
addr16
out
pop
cmpsb
dec
mov
cld
adc
and
mov
jbe
mov
inc
sbb
and
adc
push
sti
cmpsl
xchg
mov
push
or
xor
mov
sbb
mov
mov
nop
lea
mov
aaa
xchg
sbb
movsl
push
jmp
mov
cmpxchg
adc
std
std
or
and
lcall
bound
or
fwait
jg
pop
adc
xor
xor
cwtl
sahf
jl
leave
ret
gs
imul
insl
dec
mov
xorb
addb
fstl
js
mov
aad
pusha
add
pop
pop
je
mov
stos
jecxz
mov
sub
and
pop
dec
fbld
fstl
xchg
mov
inc
jns
push
insl
mov
bound
xchg
adc
sub
dec
lcall
bound
mov
in
mov
or
mov
mov
ret
jno
bound
inc
lock
test
dec
sbb
test
enter
nop
test
xchg
adc
out
push
pop
out
out
adc
push
andl
xchg
sti
mov
stc
or
mov
fistps
inc
mov
mov
das
bound
ret
xchg
lret
sub
or
xchg
cmc
fidivl
dec
lret
aam
mov
dec
mov
push
andl
mov
dec
add
xor
pop
aam
dec
cmpsl
sub
ret
js
adc
dec
loope
jle
movsl
scas
iret
xchg
repnz
repz
loopne
nop
mov
adc
xor
and
lret
push
push
pop
sub
aam
push
sti
mov
pop
aam
popa
xchg
jno
rolb
cmp
mov
das
cmp
loop
jl
mov
pop
ret
xor
lahf
inc
cwtl
pop
sti
lock
or
inc
mov
cltd
jae
add
sbb
adc
dec
scas
shl
clc
jb
sub
mov
cli
adc
jg
xor
and
fisubrl
xchg
test
push
mov
sub
out
or
add
fisubl
jno
mov
mov
or
loope
or
int
lcall
inc
mov
jecxz
sbb
cmpsb
xchg
imul
xor
mov
fnsave
xor
dec
imul
sbb
outsl
stos
mov
xchg
xorl
es
loope
dec
and
mov
fwait
xchg
arpl
lret
cmp
inc
pushf
add
cmp
mov
xor
mov
and
gs
lods
sbb
popf
daa
cmp
scas
pop
and
das
and
xchg
in
jns
jb
ja
mov
adc
inc
cli
and
fisttps
scas
dec
mov
sub
aas
sub
movl
inc
inc
adc
add
mov
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
push
out
stos
add
adc
adc
adc
dec
popf
sbb
xchg
je
testl
mov
xchg
arpl
mov
imul
cmp
xchg
mov
sub
stos
push
cltd
add
ret
add
adc
scas
pop
out
dec
jno
aam
cld
xchg
push
bound
jbe
mov
pop
mov
push
mov
outsw
sub
jmp
jmp
scas
fmuls
mov
mov
gs
push
push
arpl
imul
test
mov
test
je
scas
jecxz
pop
pop
mov
jnp
stc
lcall
mov
push
addr16
jne
inc
ss
imul
xor
ror
xor
sub
ljmp
fsubl
js
mov
dec
cmpsb
dec
jle
add
pop
mov
mov
rorb
mov
inc
pop
pusha
mov
jg
sti
push
or
into
ret
jmp
clc
cmp
mov
xor
xchg
js
mov
das
mov
int3
popa
xchg
sbb
jle
test
jne
sub
jl
add
xchg
cmp
mov
dec
lahf
push
pop
or
mov
in
cwtl
xor
nop
out
add
lret
jl
loope
es
leave
mov
push
push
mov
add
sbb
push
in
push
inc
push
add
repz
adc
lock
jno
pop
aas
sbb
mov
subl
sbb
jp
and
dec
xor
push
cld
stos
pop
aam
in
mov
jns
xchg
jae
push
fstpt
ds
fidivrl
loopne
sub
dec
lahf
repz
leave
fidivl
push
cwtl
push
pop
outsl
xchg
add
xchg
sahf
add
mov
jo
fcompl
stos
cmp
xor
andb
movsb
lcall
mov
stc
cmovns
pop
push
in
mov
sahf
push
ds
mov
in
or
aam
adcl
add
es
fcoml
rcll
cmp
dec
pop
lcall
inc
aad
mov
or
jno
int
and
jecxz
jae
or
imulb
mov
jo
pushf
pop
sub
faddp
cld
adc
mov
pop
cmp
shlb
aaa
push
lret
cmp
add
in
shlb
lods
test
cmp
insb
in
push
jp
xor
lods
daa
popf
lock
sbb
and
inc
mov
jne
push
aaa
or
scas
arpl
mov
dec
and
mov
rclb
inc
or
repz
out
mov
fstpl
sahf
dec
cmpsl
insb
xlat
call
xor
push
xor
cmp
fwait
push
mov
sbb
push
out
sbb
xchg
addr16
iret
nop
mov
fbstp
movsl
repnz
sub
pop
repnz
js
lods
xor
mov
push
pop
xchg
adcl
test
out
aas
insb
pop
fisttpl
je
sub
out
pop
test
jo
add
cli
mov
dec
cmp
fldcw
sub
cli
add
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
lret
stos
dec
std
adc
adc
adc
and
xor
jbe
jns
cld
inc
fisubrs
test
fwait
pop
andb
push
or
jnp
clc
ret
sub
loopne
pop
in
lret
xlat
push
sub
mov
call
decl
jle
xchg
int
cwtl
ret
fimull
push
cli
lret
clc
or
mov
clc
jns
orb
pop
xchg
arpl
fists
js
mov
aad
stc
jno
push
mov
or
or
cmpsl
pop
dec
push
sbb
inc
sbb
sbb
xchg
scas
outsl
mov
mov
and
push
add
aam
sti
mov
mov
stc
divb
rolb
dec
enter
incl
push
orb
dec
daa
cmp
mov
xchg
les
sub
sbb
sub
sti
pop
clc
cmc
and
inc
jecxz
shr
or
jmp
jp
mov
jecxz
push
push
int3
sbb
test
pop
shrl
jbe
mov
adc
dec
into
lods
int3
out
aas
ret
sub
sbb
push
pop
jge
inc
dec
add
push
lahf
sub
xchg
xchg
xor
mov
and
iret
pop
data16
xlat
sub
cmp
cltd
mov
mov
outsb
mov
jecxz
xchg
fidivrs
mov
mov
sbb
inc
xlat
dec
mov
fistpll
cwtl
pop
outsb
jo
add
xor
xor
pusha
das
cwtl
cmp
mov
push
lcall
aaa
mov
mov
sbb
sbb
shlb
sbb
mov
jmp
sbb
test
pop
aas
sub
mov
sbb
sbb
mov
mov
dec
js
mov
sub
adc
inc
ret
sets
inc
loopne
push
sub
sti
jmp
aam
push
fdivl
roll
fs
mov
pushf
iret
xchg
cltd
dec
mov
push
and
jb
sbb
popf
inc
jo
cmpsl
jne
mov
sub
fcompl
push
lock
dec
aam
in
stos
cwtl
dec
int3
add
fsubr
je
dec
push
sub
nop
std
inc
sub
push
loopne
ficompl
loop
xchg
hlt
les
inc
jecxz
pusha
test
test
pop
push
jecxz
lock
mov
pop
push
sub
clc
mov
adc
pop
mov
pushf
mov
outsb
cld
cmp
jnp
xor
cltd
mov
jecxz
lods
cmp
dec
fadds
add
clc
ss
jecxz
pop
mov
fcom
xor
mov
lcall
mov
repz
dec
mov
cs
xor
dec
loop
push
mov
cld
pop
mov
inc
jle
mov
in
mov
cmp
negb
jmp
sti
xchg
and
pop
xor
addl
insl
leave
inc
sbb
fstps
mov
aaa
push
cmp
pushf
pushf
push
mov
push
scas
aam
mov
push
jb
orl
ret
lods
pop
jle
test
xor
fucom
pop
clc
in
inc
mov
nop
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
ret
inc
stos
popf
repz
adc
adc
lcall
cmp
mov
cmpsl
mov
sub
rorb
jnp
decl
pusha
dec
cli
data16
mov
aam
xor
cltd
enter
dec
sbb
jmp
dec
addr16
std
mov
stos
scas
mov
hlt
lock
por
and
push
jp
or
and
es
insb
es
mov
fwait
mov
sub
jbe
dec
pushf
in
loopne
imul
fstps
pop
pop
xor
or
xchg
xor
pushf
push
mov
mov
pop
and
lcall
xor
sbb
out
shrl
sbb
lret
lock
js
pop
loope
xor
gs
not
leave
daa
mov
lods
shrl
push
mov
stos
mov
cmp
jns
int
cmpsb
sbb
and
cmp
loop
sbb
sub
jp
cmc
cmp
jecxz,pt
adc
adc
sub
adc
push
jecxz
nop
add
adc
lcall
mov
cmp
nop
gs
mov
adc
dec
scas
cwtl
pop
ret
flds
or
push
sub
and
es
in
xorl
push
mov
vhsubpd
out
int
push
jne
lret
aam
add
adc
repz
sbb
jmp
addr16
orl
iret
aad
pop
cltd
adc
andb
xchg
or
scas
lods
or
lock
pop
cltd
xchg
das
xor
push
ja
dec
gs
jns
push
mov
push
or
mov
sahf
sbb
or
push
dec
and
mov
sub
pop
out
insl
ds
adc
iret
push
dec
arpl
lea
xchg
sar
jle
add
scas
ljmp
mov
or
enter
repz
mov
icebp
or
dec
das
data16
mov
sbb
add
decb
mov
or
in
adc
pop
or
outsl
cli
push
sub
xlat
sbb
mov
xlat
loopne
pop
aam
sub
mov
clc
sbb
or
shrb
xor
pushf
ljmp
shll
fsubrs
ss
inc
or
in
and
mov
test
dec
jo
sbb
ljmp
or
in
movsl
jnp
imul
rclb
sbb
iret
popl
inc
mov
add
push
pusha
arpl
inc
inc
mov
and
aad
add
cmpsl
jl
in
mov
sub
cld
adc
jmp
rcrl
pop
mov
jo
outsb
out
pushf
mov
xor
je
fistpl
lds
sub
jg
jno
jmp
cmp
inc
sbb
xor
dec
aaa
insb
adc
es
xor
std
dec
into
nop
xchg
push
pop
jp
movsb
mov
mov
push
xchg
mov
jmp
xchg
cltd
bound
and
push
jo
adc
jmp
adc
adc
loope
hlt
fbld
sbb
mov
and
and
add
fnstcw
lret
dec
jg
adc
lock
pop
fmuls
repnz
mov
ret
push
lea
mov
and
or
add
pusha
aas
and
jmp
mov
stos
fcoms
fsubs
cmp
or
fidivl
lods
les
inc
xchg
jmp
and
insl
mov
hlt
aas
lods
jb
xor
inc
ret
adc
jl
add
fwait
ja
scas
and
cli
enter
out
mov
dec
test
or
jno
lret
mov
push
ret
and
mov
add
ret
mov
xor
xlat
xlat
mov
sub
ja
cwtl
je
push
adc
push
add
push
jp
dec
and
dec
cmpsl
mov
insb
and
pop
jbe
and
je
cmp
sahf
int
push
fndisi(8087
enter
cmc
mov
std
aam
pop
sbb
arpl
jmp
inc
jno
add
push
sub
inc
call
imul
and
mov
aas
and
push
lret
or
roll
xor
cmp
cwtl
push
mov
leave
or
mov
xchg
pop
shlb
negb
nop
xchg
stc
into
sub
aam
dec
mov
movsl
pop
inc
fs
mov
lret
mov
movsb
bnd
mov
inc
lret
xor
sbb
pushf
sub
inc
daa
dec
jg
push
sbb
sub
sbb
add
fsubrl
and
sub
add
rcrb
jae
jg
cmp
or
aad
xor
iret
inc
push
mov
mov
xor
pushl
rolb
dec
dec
fs
or
stos
push
fdivrl
int
sub
dec
mov
inc
pop
push
enter
xlat
cmp
adc
adc
jno
sbb
loopne
roll
sbb
cmp
push
lds
insl
in
fistl
and
mov
out
notl
dec
inc
orb
add
imull
mov
imul
out
cmc
fcomp
shl
movsl
mov
out
or
cmp
or
cli
push
mov
sub
push
in
gs
ret
jmp
int
daa
xor
adc
in
dec
jb
or
jne
sbbl
lcall
inc
aas
pop
insb
sub
mov
xchg
dec
scas
repnz
and
push
xchg
outsl
and
push
sub
loope
mov
movl
xchg
xor
mov
vmread
mov
jns
adc
push
call
in
int3
in
pop
pop
jne
fdivs
mov
push
xchg
add
js
and
xor
mov
scas
cwtl
dec
or
ret
pop
pushf
and
orl
leave
add
or
or
movsl
cltd
out
shrd
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
cltd
xchg
js
ljmp
sub
jbe
adc
shlb
cld
adc
xchg
std
jb
push
mov
ret
push
push
aas
out
jne
pop
lods
jl
or
fdivp
cmp
out
fstps
mov
loopne
inc
jmp
push
je
sub
out
or
je
pushf
xchg
pop
mov
push
add
push
cwtl
push
xor
sub
ds
and
pop
xor
inc
aad
rolb
lcall
xor
mov
push
dec
jne
and
push
mov
mov
pop
int
push
cmpl
or
rclb
jl
inc
movsb
mov
cwtl
mov
sub
cmc
popa
movl
movsb
movsl
push
aas
xchg
mov
clc
les
enter
loop
sti
nop
add
or
xorl
cltd
sub
aad
dec
xchg
push
lods
inc
shrl
rol
or
jle
lahf
clc
je
mov
cmpsb
icebp
sbb
mov
sbb
cmp
push
dec
sub
xor
jnp
sbb
inc
adc
pop
mov
inc
jne
mov
testl
jge
mov
jnp
mov
cmpsb
mov
push
dec
and
lret
mov
popa
mov
sarb
push
sbb
fstpt
test
push
pop
pop
add
cmp
pop
add
lcall
xor
dec
cmp
or
shll
test
push
sub
jecxz
inc
mov
or
pop
nop
push
sub
dec
and
mov
nop
aas
add
jae
add
das
mov
pop
outsb
divl
out
shlb
stos
push
rclb
aam
sarl
fiaddl
and
and
xchg
ja
inc
int
pop
stc
adc
sbb
fwait
movsl
inc
mov
pop
jge
jmp
pop
push
sbb
jne
in
mov
loop
cwtl
pushf
cwtl
movsb
pop
push
cmpsl
pop
cld
out
and
pushf
shlb
cmpsb
rorb
in
dec
xchg
push
or
ret
add
xor
xor
jg
ror
lret
mov
das
add
push
inc
icebp
mov
pop
push
or
jae
loopne
divl
mov
pop
and
xorb
cmpsl
test
les
ret
call
fiadds
in
imul
pop
add
and
dec
es
jg
ja
repnz
decl
fisubl
jle
pop
push
mov
jecxz
xor
fdivs
sbb
pop
jp
ss
inc
shr
aaa
iret
push
mov
int
hlt
adc
js
mov
bound
adc
add
push
add
mov
xchg
mov
repz
insl
add
test
jge
fildll
andl
pusha
inc
fs
inc
and
inc
inc
inc
out
insl
shlb
out
and
mov
mov
add
fdivl
sub
mov
xchg
sbb
mov
mov
inc
cld
cmpsl
mulb
sbb
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
push
into
lods
and
adc
adc
adc
push
xor
hlt
adc
es
fnstsw
outsl
rorl
lock
fsubs
lahf
into
hlt
andb
add
rol
add
jg
jp
ja
loop
mov
lcall
stc
push
cmp
xor
in
xchg
xor
pop
mov
movsl
test
sbb
test
pop
aas
push
cwtl
cmpsl
adc
lods
stc
mov
add
xor
sbb
lods
fisttpl
mov
mov
push
mov
aas
pop
xor
adc
jbe
icebp
lahf
dec
cmp
lods
xchg
xchg
les
push
cli
push
and
ret
call
jg
or
or
std
inc
pop
push
sub
mov
mov
xchg
aas
fdivr
cmpsl
outsl
cld
dec
pop
push
pop
ret
mov
and
rcl
add
mov
or
mov
leave
mov
inc
iret
aad
mov
dec
sbb
and
decl
rcl
cmpsl
cltd
test
jne
jle
push
repz
lods
stc
aam
jo
addl
cmp
loopne
movsl
sbbb
push
or
stc
cmp
inc
movsb
int3
fimull
mov
xor
shlb
push
inc
push
clc
ljmp
pushf
es
xlat
inc
aam
add
in
jne
fldcw
jg
aas
push
mov
lods
icebp
xor
jg
push
jecxz
scas
dec
pop
imul
lds
in
xchg
mov
dec
inc
sti
adc
add
mov
lret
mov
dec
bound
or
xlat
cmc
cmp
sarl
cwtl
push
push
dec
fneni(8087
inc
inc
aam
push
cmp
xchg
or
ss
or
outsl
jae
jge
dec
sub
mov
lock
jae
cmc
push
popa
cwtl
pusha
imul
adc
mov
pop
sbb
inc
andb
ja
iret
sahf
adc
icebp
xor
lds
add
sbb
lock
xchg
sub
scas
out
andl
ret
adc
mov
cmpl
or
sub
test
sub
mov
xchg
or
lcall
mov
jmp
loop
cmpsb
jo
mov
fstpl
mov
jb
mov
es
pusha
mov
pop
jge
adcl
pusha
test
jp
add
sub
cmp
pop
pop
or
xchg
jae
mov
inc
or
imull
xchg
pop
xchg
mov
mov
xchg
mov
xchg
jmp
sub
mov
pop
fwait
jp
cs
notl
xor
shrl
or
dec
adc
popw
les
xor
loope
aam
iret
mov
adc
aad
jae
push
rorl
push
ja
xchg
or
stos
loop
cmp
testl
jae
loopne
dec
pop
test
in
mov
pushf
iret
loop
icebp
jge
fldl
dec
sbb
add
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
cli
addr16
stos
fcoms
adc
adc
iret
mov
out
movsb
mov
clc
ret
ds
cmp
xor
push
sbb
xor
push
icebp
jle
inc
sub
pop
xchg
push
sub
shlb
sbb
divb
push
insb
outsb
imul
dec
inc
jns
orl
stos
fwait
call
stos
loopne
sub
push
push
pop
inc
incl
mov
xchg
push
pusha
dec
js
cmp
rcrl
mov
adc
insl
xor
pop
clc
jnp
pop
leave
and
outsb
add
jns
xor
lret
mov
jnp
mov
movsb
push
sbb
xchg
push
lock
int
gs
mov
verr
cmp
shr
aas
enter
cld
stos
jns
hlt
jnp
out
data16
bound
mov
nop
dec
cmp
sub
mov
test
mov
int3
mov
or
cld
aas
mov
mov
out
lods
lea
gs
jge
pop
popf
push
idivb
test
and
or
jmp
xchg
insb
inc
add
mov
out
mov
pop
inc
std
lret
xchg
gs
dec
loopne
pop
push
dec
mov
adc
dec
add
inc
loopne
into
aad
scas
stos
jae
sbb
popf
sti
je
jecxz
ss
bound
jecxz
test
je
hlt
sub
arpl
aas
in
insb
jl
ret
out
neg
cwtl
hlt
sub
repz
inc
and
jne
cltd
out
in
cmp
lods
xor
out
mov
ja
cmp
mov
enter
hlt
outsb
push
mov
js
dec
sbb
add
pop
notb
inc
into
movsb
pop
push
hlt
das
lods
stc
insb
or
popf
lcall
mov
and
pushf
sub
push
pop
pop
jl
and
scas
movsb
fistl
and
xlat
mov
jecxz
imul
test
cmp
push
xchg
inc
push
bound
adc
repz
sar
pop
stos
repnz
pop
mov
into
pop
xor
xor
sbb
stos
fbstp
aas
out
ljmp
insl
enter
mov
sarb
iret
shlb
inc
les
lahf
or
popa
pop
es
and
js
dec
push
int3
mov
and
in
movsl
pop
and
popa
scas
subb
sbb
out
addr16
scas
pop
pop
sbb
pop
xchg
aad
cli
hlt
mov
cmp
pop
push
stc
shrl
es
sbb
cli
scas
add
add
mov
and
or
mov
adc
and
ljmp
int
in
test
pop
sbb
inc
jmp
dec
gs
lret
clc
mov
aad
repnz
mov
jg
stos
jno
jl
cmp
imul
shlb
repnz
icebp
movsb
pop
push
mov
nop
js
cs
cmc
add
movsb
pop
pop
and
sbb
push
lods
insl
out
xlat
loop
jp,pn
jl
jno
call
jp
inc
ret
mov
js
addb
cld
movsb
daa
sub
rcll
xor
xchg
int3
dec
push
es
mov
and
decl
cwtl
cmp
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
mov
adc
adc
adc
xor
sbb
lret
mov
repz
push
xchg
adc
out
dec
jge
sub
mov
lret
jns
lahf
loopne
test
out
test
shll
daa
mov
fmull
mov
jge
xor
jp
xchg
xchg
sub
mov
pop
scas
and
xor
mov
add
jb
push
mov
mov
gs
jge
je
mov
js
push
inc
xchg
xchg
fmulp
mov
cmp
scas
rclb
mov
xchg
repz
mov
xlat
sub
fsubl
negb
jns
inc
mov
leave
push
sbb
je
xchg
push
lea
xor
nop
sub
mov
aam
popf
xor
test
imull
leave
mov
les
psubw
arpl
xor
sub
cmpsl
mov
push
test
fbld
bound
xor
mov
lods
sbb
lahf
add
loope
ficoms
jl
aas
push
sub
lock
xor
mov
std
rcr
adc
xchg
mov
lcall
in
and
int
popf
mov
adc
int
fnstcw
movsb
loope
inc
and
push
bound
mov
addl
aad
mov
arpl
mov
inc
pusha
jne
movsl
pop
sti
mov
imul
out
idiv
xor
adc
adc
rolb
lret
cli
insl
test
sbb
adc
dec
mov
fildl
jg
xchg
js
cmc
adcl
lret
push
ds
or
xchg
filds
insl
dec
dec
hlt
aam
mov
aas
jg
jmp
out
push
sbb
fs
mov
pop
fs
out
adc
sbb
cmpl
shlb
mov
cmpl
xor
inc
mov
addr16
popa
or
mov
cmc
stos
cwtl
rcrb
mov
pop
lods
xchg
aam
arpl
pop
and
ret
mov
sub
adc
sub
mov
arpl
xor
fwait
scas
xchg
xor
inc
pop
xor
xchg
adc
jl
loop
xchg
sbb
mov
loop
shll
and
movsb
js
testl
lret
cmp
sbb
mov
vpunpckhbw
mov
fiadds
mov
in
cmpsl
push
aad
xchg
push
ljmp
add
mov
pop
aas
popf
push
xchg
daa
aam
jg
addr16
jb
sub
test
pop
imul
dec
fidivrs
bnd
pop
jecxz
decb
xorl
jmp
fldenv
ljmp
mov
jle
popa
cmp
sbb
push
daa
lahf
xor
ja
rclb
mov
inc
push
in
jbe
divl
loope
roll
cmp
icebp
mov
movsl
inc
cmc
out
lret
pushf
xchg
cld
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
sub
and
int3
adc
adc
adc
jecxz
popf
push
jmp
xor
dec
scas
add
daa
loopne
loopne
mov
and
hlt
ljmp
pop
xchg
rcll
lret
loop
divl
mov
mov
negb
pop
dec
sub
in
jecxz
pop
cmpsb
jl
inc
inc
sbb
dec
testb
adc
jge
mov
cmp
jg
lea
out
push
bound
and
sbb
ret
fcmovb
jns
jb
or
cmp
stos
testb
inc
hlt
sub
inc
sub
mov
mov
and
pop
dec
inc
rorb
dec
jns
jge
pusha
iret
js
ja
mov
pop
inc
sbb
dec
outsl
les
mov
jmp
out
xchg
pop
call
jl
loope
xchg
lcall
sar
inc
std
jl
nop
sub
aam
push
dec
loopne
dec
icebp
sub
stos
fsts
push
xchg
xor
or
sub
pop
incl
movsl
repnz
testb
test
mov
test
jl
mov
pop
call
cmpsl
adc
enter
pushf
pop
iret
xchg
dec
or
loop
xor
in
xchg
and
fwait
xor
lds
ljmp
mov
lret
mov
test
stos
test
testl
aas
rolb
mov
fcomps
pushf
xchg
sti
testb
inc
clc
cli
clc
sbb
adc
movntq
stos
xor
or
adc
sub
dec
jbe
mov
jl
dec
add
sbb
xor
sub
bound
mov
jae
sahf
inc
jmp
cmp
mov
dec
mov
in
push
jmp
dec
xlat
ret
mov
mov
ret
jns
sub
sbbb
mov
mov
stc
pop
sub
mov
jmp
jp
cmp
jp
dec
ret
push
sbb
mov
iret
add
popf
loope
push
dec
and
jbe
push
sub
repnz
adc
adc
les
sbb
and
push
div
clc
cmp
js
cmp
dec
xchg
fbstp
lret
js
pop
inc
lahf
and
cmpsl
hlt
fs
xchg
dec
mov
adc
aaa
adc
jno
mov
add
mov
clc
jg
jno
idivb
and
adcb
ds
jb
shlb
call
inc
cmpb
add
and
xor
mov
cltd
or
dec
mov
xlat
sbb
pop
rcl
test
lcall
mov
add
ret
dec
jo
rorb
add
adc
and
push
mov
cld
push
sbb
addr16
mov
mov
adc
daa
ljmp
pop
mov
jb
fisttpll
lock
rsm
js
pop
mov
and
or
popf
fcmovnu
clc
dec
sti
addr16
and
mov
scas
pop
sub
sub
aam
inc
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
jne
mov
mov
adc
adc
movsb
loop
inc
testl
or
stos
sub
iret
cmp
sbbl
jno
andb
popl
jnp
pop
rol
cwtl
adc
inc
out
int3
adc
lahf
cmpsl
cld
mov
hlt
xchg
add
dec
aas
inc
jb
lcall
hlt
xor
cmpsl
cmc
adc
pop
loop
sti
jae
lods
adc
sub
stc
call
inc
add
dec
xor
mov
dec
adc
push
add
and
xchg
call
mov
inc
fistpl
jo
mov
xchg
cmp
mov
mov
cmp
inc
stos
sbb
dec
aad
loope
pushf
mov
fadd
or
fcmovne
xchg
xchg
sub
nop
int
inc
xchg
clc
out
and
push
push
sub
mov
cmp
dec
jbe
jae
push
xor
mov
add
insl
sub
jnp
adc
sbb
jae
sub
or
xchg
push
ljmp
xor
jo
fwait
test
jmp
shll
divb
or
or
or
aad
and
xchg
fildl
inc
stos
cmp
inc
andl
and
pusha
and
xlat
loop
into
pusha
dec
add
jae
add
repnz
je
out
test
cmpsl
push
rolb
mov
inc
or
jecxz
or
pop
inc
insb
xchg
or
xor
adc
les
and
popf
push
inc
push
add
stc
sub
ficoms
ja
pop
pop
inc
xchg
movsl
push
pop
out
insb
test
sub
pop
push
pusha
jb
sub
mov
inc
add
push
lret
push
jl
mov
sbb
push
pushl
dec
dec
mov
cmc
push
jmp
in
out
ret
daa
mov
out
inc
idiv
inc
pop
push
mov
cmp
mov
rcl
int
push
inc
add
mov
push
and
dec
stc
outsl
sbb
dec
cmp
cwtl
imul
mov
pushf
rclb
sub
inc
test
or
sub
aad
mov
pushf
adc
mov
icebp
cltd
loop
mov
and
std
call
inc
fs
sub
adc
add
or
jl
out
test
enter
or
dec
jo
jge
subb
xchg
or
or
xchg
fmul
call
lds
js
push
dec
andb
sahf
rcrl
addr16
data16
enter
shll
das
cmpsl
mov
xor
dec
dec
call
sub
into
fnstcw
or
dec
dec
cltd
push
push
das
incb
dec
aad
stos
popf
adc
push
jle
cld
inc
lods
test
stos
int3
fs
jae
je
pop
sarl
ficompl
stos
dec
or
mov
cmp
movsl
bound
sbb
mov
pop
xchg
xchg
or
mov
fxch
divb
push
daa
addr16
popf
jnp
cmp
enter
or
pop
dec
push
and
test
mov
dec
arpl
or
icebp
je
mov
or
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
arpl
ficoms
mov
sahf
xchg
sub
and
mov
ret
imul
lods
rclb
push
inc
int
jb
cld
add
rol
xchg
call
xor
scas
push
aam
push
sub
push
xchg
iret
les
lret
push
popf
ret
test
or
adc
push
mov
and
add
fidivrs
mov
lcall
pop
imul
xchg
jp
add
xor
push
iret
xchg
cmp
fnstsw
sub
jge
push
outsb
jmp
fstps
arpl
mov
cmp
out
mov
ds
sbb
cmp
into
mov
lods
cmp
hlt
xor
movsb
and
jg
mov
in
jne
adc
loope
aam
add
jns
mov
mov
sbb
movsb
or
scas
stc
push
out
pop
sub
rolb
adc
out
mov
in
pop
dec
dec
fsubrl
xor
int3
aaa
jge
dec
rclb
clc
xchg
jmp
lret
mov
in
jbe
pop
mov
push
cmp
jne
shr
inc
out
sbb
arpl
cs
push
insl
cmpsb
subl
sub
int
sti
clc
loop
pop
sub
mov
loope
aam
sbb
shlb
xor
dec
clc
insb
imul
call
leave
aad
mov
lcall
out
sbb
pop
or
sbb
icebp
subb
mov
aam
pop
sbb
test
shl
add
pop
and
jl
std
pop
insl
xchg
dec
out
sti
stos
rclb
sub
out
add
mov
ja
sbb
gs
std
xchg
push
movsl
dec
sbb
jge
enter
pop
and
or
and
out
cmp
cli
test
lea
orl
cmp
add
sub
dec
pop
call
mov
cmp
inc
roll
jg
jae
rclb
popf
es
xchg
sbbl
addb
lods
addb
je
jp
sti
push
fcomps
leave
mov
cmp
bound
dec
cld
jecxz
imul
fs
shll
xor
pop
cmpsl
cld
pop
ljmp
rolb
or
mov
mov
sub
mov
outsl
adc
cmp
mov
sub
jp
das
clc
add
or
js
int
loop
pop
lahf
popa
jg
push
lret
pop
test
add
sbb
mov
mov
and
imul
or
fidivrl
add
sbbl
xchg
in
arpl
xor
pusha
and
xlat
xchg
repz
sub
cmpl
ret
fstps
adc
popa
std
fwait
push
sti
dec
or
mov
pop
out
xchg
cwtl
outsl
pop
mov
jo
pop
lds
and
fnsave
out
mov
and
pop
andl
xchg
fmul
jns
mov
dec
inc
inc
andl
aaa
cltd
cmp
push
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
insb
push
mov
adc
mov
mov
scas
dec
cltd
lahf
sub
sub
fdivrl
fsubrs
xchg
cmp
addr16
fisubrs
jb
fmull
data16
push
repnz
icebp
jne
inc
mov
loope
fs
or
mov
std
cmp
insb
movsb
inc
loop
cld
ret
dec
sub
mov
xchg
dec
adc
repnz
xchg
lods
stos
in
or
cmc
int
mov
addr16
add
push
xchg
adc
add
pop
iret
or
pop
push
lods
call
std
shll
jmp
aam
mov
push
cmp
or
ljmp
jl
loopne
call
lea
and
inc
leave
inc
mov
and
mov
mov
pop
cmpb
aam
cld
ret
push
incl
aam
pop
inc
enter
push
adc
xchg
aam
addl
out
ljmp
jnp
xchg
mov
fwait
push
repnz
mov
mov
push
push
xchg
test
adc
jno
ret
lods
leave
out
adc
and
mov
pop
in
push
insb
and
cmpsb
filds
sbb
idivb
xchg
pop
jne
mov
shlb
xchg
sbb
mov
in
mov
xchg
out
sbb
dec
jmp
icebp
adcl
cmp
repnz
test
stc
insb
jmp
push
lret
add
es
fisubs
les
inc
dec
shll
mov
mov
adc
notl
call
jecxz
jae
cli
inc
inc
in
shrl
jmp
push
jb
adc
bound
mov
xchg
add
scas
pop
or
mov
and
xchg
cld
pop
iret
or
inc
pop
lods
mov
sbb
xchg
stos
notb
imul
mov
sub
dec
mov
insl
lahf
sub
imul
xlat
mov
or
negb
push
mov
shll
rcrb
sbb
mov
or
push
cmp
pop
sbb
les
aad
adc
xor
ljmp
enter
or
daa
sete
mov
test
fs
jae
push
and
mov
mov
frstor
mov
mov
das
sub
pop
rcll
sbb
adc
mov
push
or
mov
or
outsb
lds
je
leave
sbb
sub
aam
orb
or
mov
or
stos
cmp
cli
rolb
add
push
sub
test
pop
daa
stos
ret
jle
je
mov
popf
fistpll
lock
cmp
sub
and
sbb
scas
sbb
clc
push
or
aas
lea
jl
xchg
inc
loopne
xchg
aas
cmpl
gs
jno
imul
jg
dec
pop
inc
sub
scas
mov
ja
mov
jle
mov
jbe
in
lcall
in
mov
lods
pop
inc
mov
cmp
lods
fsts
arpl
dec
xor
pusha
dec
push
mov
vpsubsb
daa
push
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
jbe
idivl
mov
adc
adc
popa
xchg
jge
pop
mov
iret
mov
dec
loopne
sahf
sub
or
scas
pusha
mov
dec
and
cmpsl
pusha
fs
repnz
gs
push
mov
jnp
mov
mov
jl,pt
ficoms
jns
mov
inc
adc
fs
cwtl
pop
movsl
movsl
and
bound
das
imul
dec
adc
cmp
in
xchg
es
jne
lods
mov
or
jecxz
add
rolb
xchg
jns
and
std
inc
icebp
sub
mov
popf
pushf
dec
fwait
loope
ret
pop
jnp
insb
pop
mov
stc
mov
shl
in
in
xor
push
ss
adc
jae
pop
aad
or
mov
and
push
pop
mov
mulb
std
in
lcall
movsb
movsl
mov
loop
dec
test
nop
inc
mov
push
clc
lock
fwait
sub
lock
mov
fdivrs
andnps
pop
add
out
imul
inc
ja
add
sub
push
adc
fsubs
add
cmp
push
cmpsb
loope
lret
pop
mov
mov
fwait
loopne
cmpsl
outsb
adc
cmpsb
add
jae
adc
psrlw
sub
outsb
xchg
cmc
push
add
cli
ljmp
or
lret
int3
lods
push
clc
aam
ficoml
andl
insb
shll
inc
or
xchg
and
adc
jne
or
mov
and
jmp
mov
repnz
jae
cmp
incb
mov
inc
sar
sub
mov
pop
pop
leave
add
xlat
hlt
movsb
in
stc
sub
pop
inc
pop
jbe
movaps
daa
shlb
mov
orl
xchg
mov
sar
fsubl
call
dec
jb
adc
cld
out
stos
les
sbb
and
sbb
lcall
iret
sahf
cmc
pop
test
hlt
fwait
inc
cs
sub
mov
mov
xchg
imul
mov
sbb
stc
xor
dec
mov
aad
jmp
lods
or
fcmovbe
movsl
ret
mov
imul
mov
icebp
push
out
pop
dec
into
inc
pop
data16
fdivrl
mov
pop
sub
outsb
xchg
cwtl
enter
mov
sub
add
ud0
adc
pop
sbb
pop
lret
into
ss
cmp
movsb
jp
mov
lock
inc
adc
mov
shlb
push
enter
fwait
mov
mov
jecxz
mov
call
leave
daa
cltd
fildll
incb
jp
add
les
jns
sbb
pop
shll
cs
push
mov
fists
jne
inc
cmp
pushf
cmp
and
ret
or
pop
sub
lock
push
out
pop
mov
fucomp
outsl
testb
pop
mov
in
push
mov
popl
ror
adc
adc
ret
ret
hlt
out
repnz
or
xchg
in
xchg
rorl
xchg
cmp
test
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
addr16
js
scas
adc
adc
adc
pop
cmp
add
nop
push
jle
adc
fnstsw
and
fstp
ljmp
pop
jecxz
mov
sbb
push
pop
push
and
daa
mov
sbb
sarl
cmp
cmp
cmp
mov
fmull
imul
into
push
mov
push
out
not
sub
outsb
mov
sbb
icebp
movsl
dec
pop
inc
push
adc
xor
pop
lret
push
push
add
xchg
dec
icebp
faddl
jmp
dec
and
mov
push
pop
icebp
mov
jbe
inc
mov
jns
xor
or
xor
fwait
lahf
insl
or
aad
cmp
push
call
add
mov
cmp
lock
fldcw
lock
loop
pop
ja
cmp
lds
pusha
mov
cltd
lahf
gs
pop
push
cmpsb
xlat
push
inc
xchg
aas
push
sub
imul
sbb
cwtl
jl
iret
dec
shlb
lods
jle
pop
jge
scas
loopne
push
int3
loopne
dec
ja
aas
cmp
int3
shlb
scas
mul
mov
fcompl
xchg
pop
jge
and
ds
mul
add
and
push
enter
jecxz
inc
hlt
sub
cmp
stc
pop
jge
pop
enter
ja
ret
pop
xchg
fcmovne
in
inc
fidivs
inc
xchg
inc
vcvttsd2si
insl
jo
add
xor
or
ss
je
in
xchg
cltd
in
push
xchg
mov
mov
sub
lds
call
out
mov
mov
cltd
xchg
mov
repz
cltd
ljmp
aam
push
rcll
and
sahf
and
notl
push
push
inc
lret
add
push
inc
scas
mov
inc
or
sub
jl
jecxz
loopne
push
in
and
ja
les
push
sbbb
sub
ds
aad
cmp
cmp
mov
sbb
cmp
test
in
lret
inc
fcomi
loope
fnsave
aam
adc
mov
test
in
out
push
cli
inc
adc
leave
xchg
mov
mov
cmpsb
inc
pop
clc
pop
xchg
int3
inc
mov
jbe
mov
jge
ret
out
loope
aas
jmp
mov
movsl
add
test
adc
imulb
in
bound
std
dec
jns
jae
in
mov
lahf
cmpsl
adc
mov
pop
xor
outsl
shlb
pop
mov
imul
ret
popf
add
mov
enter
mov
pop
xor
dec
pop
out
outsl
push
and
cltd
stc
stos
cmp
push
popa
nop
call
ljmp
into
cli
mov
xchg
dec
jl
lahf
mov
add
cmp
lods
adc
jbe
dec
jne
mov
out
inc
stc
pop
push
push
ljmp
in
pop
jge
sub
mov
paddb
jo
mov
push
mov
nop
les
pop
mov
popf
push
popa
scas
aas
cmpsl
pop
stos
mov
xlat
xor
enter
lods
roll
call
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
aad
push
movsb
adc
adc
adc
and
inc
adc
and
sub
daa
aas
cmp
pop
jp
popl
push
test
xchg
out
inc
or
push
outsb
repnz
je
lds
mov
pop
sub
adc
xor
sti
inc
stos
jge
sbb
mov
fidivl
outsb
js
jl
repz
lock
push
cmpsb
mov
idivb
cmpsl
jb
jecxz
mov
add
shrl
test
jno
xor
stc
mov
fistpll
add
dec
fstpl
aaa
push
es
jbe
sub
push
jb
pop
bswap
daa
cld
mov
push
imul
sarl
mov
or
std
jp
push
stos
or
shrl
push
pop
cmp
mov
xlat
xchg
sarb
sbb
das
xor
jnp
popf
add
and
or
sbb
shll
lea
pop
lahf
jno
sub
out
pop
dec
or
pop
int
sub
lods
push
out
outsb
and
inc
test
push
mov
fcoms
aaa
mov
or
daa
cmpsb
sub
in
out
or
nop
sbb
je
mov
xchg
loop
xchg
aaa
and
push
pop
fwait
movsb
cmpb
pop
inc
xchg
cmp
xchg
shll
les
jge
jne
push
sbb
fisubs
sub
inc
dec
stc
xchg
push
dec
mov
xlat
cmpsb
mov
inc
testb
daa
clc
fs
lret
inc
jno
pop
push
jmp
fisttpll
xor
xchg
jno
call
dec
mov
adc
mov
out
sub
out
outsl
insl
or
scas
push
repz
test
sub
cli
insl
dec
aas
adc
out
subb
xorl
cmp
fisttpl
pop
mov
ja
or
sti
sbb
insb
sbb
cmpsb
mov
in
fadds
inc
into
lret
out
loopne
jae
xchg
imul
enter
sbb
or
and
and
dec
std
inc
inc
sbb
and
mulb
pop
in
inc
jg
mov
jb
idivl
jle
bound
repz
or
jno
xor
xchg
test
push
fs
jo
mov
xchg
inc
cmpsb
dec
cld
fcomp
fdivr
call
push
jg
sbb
jecxz
push
dec
push
rolb
call
test
sti
cmp
cmp
fmul
mov
sbb
cmp
ds
push
jp
push
adcl
cmp
jno
in
jge
jge
sub
push
test
add
push
adc
stos
jns
aas
bnd
sbb
or
je
stos
dec
mov
mov
call
nop
rcll
dec
lock
insl
cmc
push
dec
lods
iret
sbb
jnp
push
movsb
dec
xchg
les
fsubrl
repnz
inc
scas
jnp
sti
cmp
mov
or
mov
dec
fdivs
test
roll
imull
clc
stos
fldt
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
cmp
mov
adc
adc
xchg
mov
cmpsl
lods
cmc
lds
mov
pushf
lds
cmc
mov
cld
out
or
cmp
test
pop
in
xchg
hlt
mov
cltd
inc
cmpsl
stos
dec
shl
sbb
lock
test
push
out
or
push
jge
insl
and
imul
push
mov
aas
xchg
mov
fwait
shlb
daa
cld
xchg
jbe
call
dec
mov
sahf
dec
fimuls
lods
adc
in
pop
stos
push
fucom
outsb
pop
dec
and
sbb
sbb
pop
mov
lods
pop
sub
out
sti
xor
das
sahf
cmovne
add
sahf
cmp
call
test
dec
outsb
pop
pop
push
push
je
mov
test
ja
leave
loope
mov
push
push
adc
andl
xchg
insb
pop
mov
dec
cwtl
sub
test
std
scas
enter
ja
out
sti
mov
fs
push
mov
sti
aas
into
xchg
push
std
push
sahf
sub
mov
pushl
imul
mov
pop
and
repz
adc
cmpl
popa
arpl
mov
jae
inc
divb
jecxz
push
iret
test
add
add
std
jo
and
or
lcall
adc
mov
cmp
aaa
cmp
clts
jge
lret
fwait
inc
lock
push
scas
mov
rcl
jmp
ret
push
sbb
lret
jne
sub
into
cltd
sub
loopne
pop
in
mov
cld
mov
and
cmp
push
in
push
pop
push
pop
mov
fisttpll
or
jnp
nop
bound
mov
adc
push
addr16
cmp
cmpsl
xchg
in
mov
fs
int
enter
outsb
xchg
jbe
cld
adc
out
mov
mov
dec
xor
imul
ss
sub
or
add
hlt
pop
loop
pop
sbb
dec
fnsave
in
mov
or
repz
fbld
lcall
sbb
cmp
push
dec
scas
aam
add
jge
mov
and
negl
mov
xchg
movsb
adc
jo
and
or
aaa
leave
dec
movsb
jns
mov
ss
test
scas
pop
clc
out
cld
insl
sbb
and
sub
movsb
inc
mov
movsl
push
pop
pop
movsl
and
inc
mov
mov
cmp
mov
xchg
jb
incb
dec
gs
lds
aad
insl
jne
aad
sbb
imul
leave
fists
pop
adc
mov
lcall
push
insl
sbbb
xchg
pop
push
xchg
ret
stc
pop
or
shll
fwait
daa
outsb
gs
mov
push
call
lea
add
mov
lods
cmpb
jae
rorb
popa
iret
sub
ror
push
lret
xor
shl
xor
or
add
mov
jmp
xor
and
and
lcall
and
mov
pop
insb
enter
loope
test
xchg
nop
lcall
mov
push
das
movsb
sbb
adc
aaa
hlt
fmul
xor
adc
outsb
mov
sub
stos
xor
xchg
insl
cmp
jb
ljmp
faddp
test
dec
insb
mov
xchg
xchg
std
adc
dec
orb
mov
fcmovnb
pop
ds
subb
push
xlat
xor
adc
mov
jo
in
test
mov
loope
shrb
sbb
ja
out
pop
aas
cwtl
pop
call
or
call
dec
addr16
fmul
std
or
mov
int3
in
xchg
outsl
or
scas
aaa
outsl
lods
jp
insb
sbb
loopne
mov
stos
pop
cld
mov
mov
cmp
jl
inc
stos
mov
outsb
jecxz
cmp
aam
stos
imul
cmp
std
ret
push
mov
idivb
add
and
pop
sbb
pop
ja
xchg
jbe
les
movsb
popf
ror
cmpsb
sbb
cwtl
jo
pop
sti
adc
jns
lods
mov
mov
xchg
mov
push
fdivrs
clc
xchg
cmp
mov
mov
add
pop
scas
in
add
call
mov
cs
xlat
mov
inc
inc
push
cmp
movsb
fwait
test
inc
decl
jne
jmp
cmp
mov
cs
ss
mov
fmul
mov
js
lods
xlat
rcrl
push
jno
jge
movsb
push
or
stos
daa
jmp
in
dec
sbb
mov
push
mov
jg
imul
int
jg
imul
add
jbe
aam
shll
jg
inc
cmpsl
mov
cmp
mov
pop
adc
jne
cmp
push
shrl
cwtl
adc
jecxz
and
pop
mov
out
cmp
xchg
xchg
jns
mov
test
shlb
pop
cli
and
ja
sub
dec
in
shrb
cmp
and
loopne
test
mov
vmread
xor
xchg
dec
sub
mov
adc
cmp
test
shrb
ja
xor
xlat
sub
pop
inc
add
adc
and
sahf
in
fstpt
push
jp
lock
gs
sub
xor
test
ds
add
mov
fwait
enter
inc
mov
sub
xchg
xor
das
decb
aad
cli
adc
mov
cli
lds
ss
adc
add
dec
mov
xchg
std
xchg
or
and
xor
daa
lcall
jb
mov
and
insb
xchg
add
ret
mov
ljmp
jns
mov
pushf
cwtl
jnp
iret
cmc
aas
ficompl
jne
jp
sbb
sbb
movsb
imul
inc
mov
scas
sbbl
mov
pop
mov
mov
mov
dec
jns
fcoms
addr16
add
insl
imul
xchg
xor
fs
sub
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
stos
cmpsl
push
push
nop
adc
adc
adc
xchg
sbb
and
js
push
mov
sti
mov
or
push
cwtl
or
sub
xlat
inc
lock
lods
icebp
dec
in
xor
mov
pop
xchg
loopne
js
mov
mov
xchg
imul
jo
sar
xchg
in
repnz
aad
daa
imul
sbb
cli
xchg
fisubrl
or
and
inc
loope
into
and
mov
insb
xchg
jl
data16
sbb
jbe
push
out
jo
jbe
mov
rclb
bound
xor
adc
nop
out
pop
sub
std
pop
and
xor
adc
jle
roll
and
mov
outsl
mov
jnp
push
in
dec
mov
mov
push
inc
and
inc
jle
fdiv
cmp
mov
cmp
sbbb
lea
xor
test
scas
sub
popf
pop
icebp
je
jmp
sbbl
cmpsb
rolb
inc
test
or
sub
sbb
push
ret
sarb
insl
mov
adc
pop
inc
push
add
fadds
adc
push
call
xchg
or
jb
arpl
mov
mov
jg
pop
sahf
and
rcrl
aam
rcrl
or
shrb
jns
call
sub
and
cld
cmp
xor
push
aam
fstpt
pusha
or
cmp
mov
or
int3
inc
pusha
and
pop
mov
gs
mov
es
and
iret
loope
pop
pop
xor
mov
insl
out
xlat
jmp
arpl
add
ss
pand
and
lock
dec
cmp
adc
and
repz
in
dec
adc
movb
or
fwait
xor
pop
mov
jecxz
sub
adc
sti
rcrl
xor
sar
mov
xchg
mov
inc
xor
lods
cli
cmc
cmpsl
push
scas
outsb
sub
cmp
out
mov
fbstp
bound
pop
jno
inc
cmp
test
dec
rcrl
jb
cmpsl
mov
push
ret
cltd
lret
xor
jp
dec
sarb
jecxz
popf
or
lea
pushf
shl
inc
test
add
mov
xor
pop
cmpsl
div
loop
xor
rclb
sbb
out
mov
xlat
mov
imul
mov
cmp
dec
mov
aad
cld
mov
sub
cmp
pop
in
or
insl
ret
pop
popa
into
fisttps
xchg
movsb
ret
arpl
gs
inc
pop
dec
shr
popa
dec
gs
fiaddl
fisubrs
bound
outsb
jbe
xchg
mov
addb
cmp
imul
lret
in
int
ret
lret
jl
push
sahf
in
jne
negb
icebp
fs
or
cmp
cmp
ret
push
ret
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
inc
cli
jbe
jle
adc
adc
adc
pop
aaa
mov
mull
mov
xchg
push
dec
out
movsl
cld
cmp
ds
cmp
cwtl
fimull
add
frstor
push
adc
mov
mov
inc
lcall
sbb
mov
lret
and
lock
sub
out
xor
negb
pop
adc
daa
stos
lock
mov
jp
sbb
or
iret
xchg
mov
aas
aaa
cmpsb
or
sbb
xchg
xchg
loop
adcb
cltd
test
neg
jge
mov
ficomps
fsts
pop
lds
sahf
cmp
jbe
jmp
fildl
out
jmp
and
shll
xchg
in
test
push
mov
cmc
mov
in
pop
ds
daa
lcall
subb
aad
stos
dec
xchg
cmc
mov
mov
or
adc
fisubrs
adc
mov
cmp
sbb
cmp
lea
mov
jl
xchg
scas
xor
jb
inc
dec
jge
lahf
sub
lahf
fisttpl
add
imul
or
xchg
inc
adc
fcom
sbb
stos
pusha
cmpsb
or
mov
cmp
das
imul
lods
mov
cmpb
mov
arpl
pop
add
pop
add
movsl
std
out
stc
pop
xchg
cwtl
scas
das
enter
gs
dec
mov
dec
fdivrs
xchg
inc
loope
adc
sub
cs
outsb
lods
movsl
cld
int3
jae
mov
sub
mov
popa
jnp
add
gs
push
dec
jge
mov
stc
ljmp
and
mov
rcr
inc
js
xor
push
movsb
addb
jae
sbb
outsl
fcoml
insb
mov
aad
dec
pop
lret
icebp
enter
or
into
movsb
repz
add
sub
cs
subb
cmp
cmp
push
jl
push
and
fsubp
shlb
dec
dec
and
and
aas
jmp
adc
mov
mov
add
test
sbb
fistl
push
sbb
dec
push
jns
pop
jne
ss
xor
divb
add
push
andnps
cmpsb
push
sbb
mov
push
inc
int3
cmc
xlat
dec
enter
cmc
push
sbb
and
fs
add
cmc
xchg
fldenv
inc
stos
out
inc
orb
fsubrp
pushf
divl
rcr
pop
jmp
fwait
push
icebp
lock
ja
inc
cld
test
cs
or
notl
fsts
in
ss
fisubs
movsb
push
cmp
xor
jmp
xchg
add
pop
xor
push
push
gs
pop
or
loopne
outsb
xor
sub
stos
hlt
pop
mov
mov
fcmovbe
insb
lods
jecxz
and
sbb
cmpsl
xchg
cmp
popa
or
cwtl
es
and
es
push
into
shlb
add
imul
lret
jmp
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
nop
out
rorb
popf
in
and
cmpsl
cmpsb
ret
mov
jns
cltd
jnp
mov
nop
jb
mov
fisubs
repnz
aam
xchg
pop
sahf
inc
insb
mov
sbb
or
xlat
out
adc
cmp
inc
add
stos
xorl
mov
ljmp
nop
mov
adc
decb
call
mov
test
lods
test
lret
inc
inc
cmc
adc
sub
or
lcall
mov
fildll
mov
lahf
call
repz
test
mov
cmp
xchg
mov
loop
jns
les
push
cmpsb
sbb
xor
nop
xor
je
xor
push
sub
adc
ret
mov
mov
aam
dec
and
shll
imul
scas
addr16
test
mov
dec
pop
inc
push
xchg
popf
push
sbb
xchg
cltd
inc
nop
ds
and
pop
sbb
imul
hlt
sbb
adc
add
jbe
mov
movsl
push
mov
cmp
mov
mov
or
aad
and
stos
pop
loop
call
pop
jmp
xchg
pop
xchg
std
shr
xor
test
sar
pop
nop
and
scas
push
jp
pop
xor
icebp
aad
jmp
xchg
sbb
inc
mov
and
jb
fnstcw
jnp
or
nop
cld
stos
pop
lods
pop
shll
push
jae
pop
rcll
xor
jg
cli
lea
fsub
and
add
cld
out
adc
aaa
int3
mov
dec
push
xchg
lock
shll
xchg
shll
jmp
add
sbb
fldl
mov
outsl
in
jb
sub
loope
xor
mov
jb
jnp
mov
int
ret
mov
nop
jno
mov
int3
fbstp
outsb
out
and
sti
mov
lret
movsb
mov
adc
popl
sbb
adc
lods
mov
fimuls
mov
outsl
xor
mov
cmpsl
mov
push
push
pop
jp
adc
mov
xchg
in
mov
mov
sbb
pop
lods
mov
xor
pop
les
lahf
pop
mov
es
ret
push
fisttps
or
in
das
pushf
les
xchg
iret
xchg
push
mov
mov
inc
lahf
in
mov
dec
adc
fsubrs
mov
and
add
push
cmp
arpl
cwtl
mov
sbb
or
dec
pop
xor
xor
pop
pop
shll
insb
sub
aas
iret
jbe
fisubs
pop
xor
and
jl
pop
sbb
outsl
call
hlt
xchg
in
add
movsl
fcoml
lock
pusha
adc
movsb
in
jb
adc
ss
shr
xchg
cld
cmc
push
das
cli
mov
shlb
movsb
mov
ret
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
lods
sbb
adc
adc
imul
dec
fnsave
scas
gs
xchg
clc
loop
mov
stc
popa
cwtl
sub
adc
in
mov
mov
sub
out
jne
jle
es
xor
cmpsl
stos
sbb
lods
sbb
int3
fstpt
jmp
xchg
xor
adc
add
mov
or
and
addb
data16
pop
enter
das
cmpsl
es
cmpsl
scas
gs
add
inc
aas
int
xchg
cmpsb
sub
pop
push
adc
cmp
add
jo
sbb
out
idivb
adc
ret
xlat
fstpt
and
inc
or
stos
mov
mov
out
mov
push
mov
and
mov
js
inc
mov
int
sub
pop
push
xchg
mov
mov
xor
xchg
jl
fidivrl
xlat
xor
ror
jge
jo
mov
dec
xor
inc
pop
push
cmp
inc
ss
sbb
xchg
cmpl
shll
sbb
mov
and
nopl
js
inc
les
jnp
xchg
mov
add
or
mov
lret
mov
aas
mov
xchg
cmpsb
in
icebp
mov
ds
sti
push
cmpsl
adc
sbb
push
add
jl
aaa
outsb
and
hlt
jo
or
add
ss
sub
xor
outsl
jo
lret
daa
mov
or
xchg
mov
mov
sub
out
xchg
addr16
aas
into
repz
xchg
ss
push
daa
xchg
pop
mov
jbe
ss
cli
mov
dec
xorl
rorb
push
popa
nop
sub
dec
mov
int
push
sbb
mov
outsb
lahf
cli
pcmpeqb
lods
aaa
xor
cmp
pop
add
mov
insb
sbbb
add
out
jmp
out
daa
push
inc
mov
sub
dec
jecxz
pop
push
lcall
rcr
fstps
fcoms
dec
fistpl
aaa
aad
mov
les
xchg
and
xchg
adc
lcall
in
cmp
lock
loopne
dec
sub
add
jmp
loop
ret
notl
adc
jno
call
add
jge
sti
xchg
lret
fisubrs
movsl
out
fldl
xchg
pop
mov
ljmp
shl
cmp
addl
push
sar
or
aam
sbb
xchg
add
rclb
mov
sbb
dec
cltd
pop
inc
cmp
pop
xchg
fcmovnu
sahf
test
fs
lret
lods
rclb
cs
adc
mov
mov
into
adc
shlb
in
movsb
push
mov
xchg
insb
stos
fldcw
mov
dec
and
test
mov
mov
loop
fisttpl
inc
arpl
mov
ljmp
mov
mov
or
sbb
rcrl
inc
cli
xlat
scas
adc
fs
out
in
sti
pop
pushl
mov
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
cmp
adc
adc
adc
mov
xchg
sbb
mov
mov
push
repz
fs
jg
or
lretw
cmpsb
xchg
push
mov
jns
outsb
je
xchg
sbb
and
in
popa
pushf
out
pop
int3
mov
pop
fwait
sti
jb
xchg
aad
dec
mov
xor
mov
clc
or
fisubl
ds
jmp
and
mov
sbb
xlat
ja
jne
inc
xchg
dec
xor
mov
fisubs
adc
popf
inc
inc
xorb
push
jge
sub
pop
cmp
push
push
cmp
jbe
mov
fldt
pop
sbb
ds
jmp
pop
mov
xchg
fs
scas
dec
insl
jl
pushf
mov
repz
scas
sbb
and
add
jae
shl
mov
cmp
lret
bound
jns
pop
cmp
jno
and
aad
cmpsl
pop
imul
add
out
adc
movsb
lret
jb
outsb
mov
add
lds
or
add
leave
mov
add
mov
push
mov
shl
mov
inc
mov
lret
sub
fsubrs
push
mov
or
jnp
popf
outsl
mov
mov
arpl
lret
xor
mov
mov
cs
ret
andb
xor
push
xor
mov
test
sub
ja
lcall
xchg
jl
inc
push
or
jne
popf
jle,pn
and
fidivrl
push
push
or
and
lods
sub
aam
push
shlb
out
xchg
dec
aas
sarl
or
mov
pop
or
loopne
lock
inc
mov
add
lods
cmp
mov
pop
stos
mov
or
or
rclb
inc
aaa
hlt
shrb
std
pop
pop
lret
jle
rcll
lock
pop
je
jno
add
add
loopne
sub
jge
hlt
jecxz
adc
add
popf
sbb
dec
movsb
cmpb
xor
adc
andb
stos
push
mov
js
mov
jp
mov
popf
mov
pop
imul
fidivrl
and
pop
or
aas
mov
out
lea
sbb
clc
mov
push
mov
loop
mov
sub
lcall
sbb
shr
pop
test
out
xor
pusha
sbb
and
cli
xchg
jg
mul
dec
or
out
sbb
sahf
mov
sub
fiaddl
xchg
xchg
adc
dec
mov
adc
pop
fisttps
inc
mov
adc
insl
lods
xchg
and
mov
pop
xchg
int3
lcall
movsb
jmp
or
outsl
insl
mov
add
mov
arpl
js
ja
ja
push
lret
ljmp
inc
adc
in
sbb
dec
dec
mov
jmp
mov
push
mov
mov
fsubrs
or
inc
and
pop
add
xlat
jae
and
mov
incb
neg
mov
sti
adcb
add
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
aad
and
jb
adc
sub
pop
xchg
aam
scas
sbb
stos
inc
push
fwait
xchg
lret
cli
mov
and
dec
jmp
push
cld
testl
xchg
daa
iret
adc
sbb
push
push
and
fnstcw
ss
xor
push
in
cwtl
dec
jne
cli
xlat
adc
movsl
ss
sub
mov
xchg
pusha
jmp
pop
mov
ss
xchg
fsubrs
jmp
xchg
jmp
or
es
pop
jge
and
ret
sub
stos
jg
cmp
sub
jo
loopne
sub
cmpsb
mov
notl
pop
inc
cmpsb
inc
add
dec
out
mov
fiadds
cltd
stos
jl
lock
jle
pop
mov
add
fisttpl
pop
dec
popa
dec
jp
or
ret
mov
rcll
mov
into
pop
aaa
fdivrs
or
add
cld
jmp
rclb
ret
xchg
pop
in
paddq
mov
add
int
xchg
cmc
into
sub
call
inc
es
stos
fstl
jno
xor
subl
leave
imul
and
cmp
hlt
xchg
nop
rol
adc
mov
mov
inc
pop
pushf
shl
rcpps
jp
pop
fnstenv
pop
icebp
dec
ja
mov
jl
mov
add
jns
lock
pop
sbb
stc
rorl
xor
rolb
lds
leave
push
lods
loope
pop
rcrl
gs
fcmovbe
stos
pop
inc
jmp
jg
shl
mov
out
sbb
cmp
xor
aam
fisttpll
lret
inc
push
js
mov
jno
fmul
fidivl
jg
adc
lods
adc
pop
lcall
adc
cltd
push
mov
movsb
add
mov
jno
aam
mov
ds
mov
pop
enter
enter
push
and
add
push
lret
insb
or
in
cmp
test
mov
and
inc
push
fld1
lahf
out
sbb
fdivrl
scas
dec
pop
jae
shl
jl
mov
pop
jmp
std
in
add
popa
pop
mov
pusha
pop
xchg
sbb
hlt
aas
cmp
pop
cmc
xorb
fcompp
or
jb
fdivp
lahf
jl
push
nop
cltd
stos
cs
orb
sub
push
jne
push
push
mov
inc
dec
out
and
shll
xchg
pop
lea
fdivrl
ljmp
add
mov
out
xor
lret
sub
mov
adc
cld
adc
imul
mov
cli
jmp
xor
add
and
shrb
push
sbb
inc
fs
mov
daa
pusha
cmp
int3
jb
stos
inc
jne
mov
adc
movsl
push
inc
popf
nop
out
jecxz
cli
xchg
push
mov
fimuls
daa
xor
xchg
cmp
dec
xchg
aam
xor
cmp
mov
dec
loope
dec
push
lods
sbb
icebp
jl
jbe
aaa
or
sahf
loopne
and
pop
push
iret
popa
adc
push
jns
lea
inc
lds
adc
aas
rcr
sub
jno
hlt
shll
jge
pop
xor
sbb
push
xchg
adc
add
into
mov
cmpl
ljmp
lods
sbbl
mov
mov
inc
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
dec
mov
shll
sub
lret
sbb
mov
add
imul
loopne
sbb
mov
add
mov
sub
sbb
sbb
push
or
dec
sub
pop
dec
dec
insl
sbb
pop
fbld
sub
mov
and
sbb
bound
cs
push
cld
fidivrl
sub
xor
mov
cmp
mov
sub
in
mov
and
dec
cmpsb
mov
movsb
loop
imul
stc
int
push
sbb
mov
pop
mov
push
pop
pop
pusha
cmpsb
sbb
and
int
sti
fiadds
and
fs
mov
jge
jecxz
in
nop
lds
out
dec
xchg
jo
xchg
loopne
std
shlb
xor
or
cmp
cmp
and
push
orl
fisubs
push
imul
mov
in
cltd
pop
xchg
push
xor
nop
je
aad
rorl
mov
scas
sti
xor
xor
dec
xor
jno
push
xlat
jb
cmpsl
jmp
lret
cld
push
xor
out
outsb
adc
jnp
xchg
stos
sbb
lods
rcrb
push
push
jmp
ja
in
iret
mov
cmovp
mov
rolb
loopne
mov
add
sub
les
fs
lods
jl
shl
inc
cmp
scas
les
mov
loop
push
into
mov
push
pop
mov
mov
mov
pusha
mov
push
repnz
mov
popf
rcll
incl
adc
movsl
xchg
aad
pop
test
xchg
pop
aad
cmp
mov
imul
iret
inc
mov
ljmp
subb
ss
add
dec
out
adc
pop
arpl
inc
cs
push
adc
add
outsl
push
xor
jmp
xorl
dec
pop
pusha
fsubp
push
sub
fsubp
mov
sub
stc
lods
addr16
cld
inc
xor
jp
xlat
mov
cmp
adc
cld
lret
pop
pop
push
in
mov
jge
xorb
push
rcll
mov
arpl
sub
popf
cmc
or
xchg
add
and
and
cmc
add
insl
in
mov
add
pop
adc
xchg
mov
jge
or
xor
add
out
or
jno
pop
pop
loopne
sbb
arpl
xor
mulb
adc
jnp
mov
mov
push
xchg
xlat
push
mov
mov
outsb
out
cmp
ja
insl
or
mov
inc
mov
cmp
cmp
test
xchg
xchg
mov
pop
lret
ljmp
jo
lcall
or
mov
pop
jecxz
inc
incb
or
or
mov
jecxz
and
out
movsb
push
xchg
sbb
and
xor
push
nop
pop
sahf
arpl
jnp
adc
push
aad
out
cmp
insb
loop
outsb
idivl
sti
std
push
shlb
push
jno
ror
imul
fwait
sub
dec
pcmpgtd
xchg
and
lret
and
or
mov
jmp
mov
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
aas
scas
insb
bound
adc
lods
xor
inc
inc
inc
test
xor
into
mov
mov
mov
xor
leave
sti
je
int
jbe
ficompl
sub
jae
xchg
rclb
ljmp
ja
push
push
cmp
adc
jp
pop
js
sbb
mov
xchg
xor
cltd
les
sbb
cmp
mov
shl
cmpsl
dec
icebp
aas
xor
fs
sti
lahf
imul
fs
mov
test
push
sbb
int
jge
out
in
pop
mov
ljmp
pop
arpl
mov
fisubrl
or
xor
jle
mov
inc
fildll
mov
rcr
sbb
mov
mov
int3
les
inc
inc
jg
in
pop
add
dec
pop
pop
sub
and
mov
bnd
scas
cmpsb
movsb
js
aas
and
jb
jmp
adc
pop
nop
xchg
mov
or
inc
aad
and
inc
mov
adc
test
cwtl
adcl
ret
jecxz
dec
mov
push
cmp
pop
aas
scas
mov
and
imul
faddl
sub
cmpsl
int
or
data16
or
push
xor
xor
lods
pop
fnstenv
imulb
dec
popf
fisubrs
ret
sbb
push
adc
ja
cmp
mov
fistpl
pusha
push
xchg
lea
mov
cmp
mov
out
xchg
stc
or
fwait
pusha
dec
or
mov
mov
ret
dec
jns
dec
fwait
movsl
push
pop
push
mov
inc
mov
dec
aas
repz
std
jbe
sbb
mov
inc
sub
sbb
mov
fdivrp
sarb
mov
xlat
call
mov
cmp
iret
es
cmpsl
sub
imul
ret
fimuls
mov
push
add
mov
pop
mov
adc
data16
pop
outsl
cmp
popa
inc
fldl
jb
out
movsb
adc
aas
xor
pop
sbb
mov
add
xor
aaa
repz
dec
or
fdivr
test
mov
or
inc
xchg
in
fadd
pop
psrlq
or
adc
cwtl
lret
xchg
xor
cmc
sub
mov
stos
mov
or
shr
mov
add
mov
adc
psrlq
cwtl
pop
rolb
mov
add
js
lods
enter
inc
negb
out
test
sti
shl
sarl
adc
adc
sub
push
insl
mov
push
ds
orl
subb
out
cmp
fcomps
clc
add
cli
pop
jl
out
dec
arpl
cld
aas
mov
mov
push
paddsw
or
dec
cmp
out
pushl
add
fdivs
gs
or
jge
enter
jle
sbb
pop
in
cmp
pop
mov
lods
fwait
repnz
nop
test
cmp
push
add
js
fmuls
pop
and
inc
lret
cld
pop
mov
leave
push
xor
add
add
mov
lea
sub
sbb
mov
dec
movsl
mov
jle
pop
add
lret
mov
sbb
aaa
bound
roll
sbb
stos
inc
je
add
sub
add
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
js
pop
adc
mov
and
fists
push
mov
mov
pusha
jbe
in
pop
arpl
pop
mov
adc
adc
cmp
in
jle
push
or
adc
push
pop
rcrb
push
lea
out
mov
pop
adcl
mov
das
xor
mov
cmp
and
push
repz
jnp
cmpb
mov
cwtl
add
ss
xchg
nop
lds
mov
into
xchg
or
loope
xchg
je
not
les
sub
scas
jge
std
in
outsl
mov
push
stc
scas
xchg
mov
arpl
inc
hlt
pop
scas
sub
pop
cmp
repnz
imulb
adc
jnp,pt
xorb
mov
jl
xchg
mov
push
pop
dec
out
sub
or
dec
pop
ss
xchg
ds
shll
sti
or
test
je
insl
out
xor
incb
jb
or
xor
sahf
adc
rcrb
cmpsb
imul
and
out
xchg
xorl
stos
ret
sbb
xchg
fwait
lods
add
scas
repnz
cmpsb
call
int3
lods
mov
mov
scas
sbb
or
lahf
inc
in
fisubl
std
mov
cltd
xor
fisttpll
call
and
push
pusha
sub
jecxz
ljmp
add
fisttpl
lahf
in
add
pop
lods
lods
push
lds
dec
call
lret
sub
outsb
or
outsb
mov
sub
pop
push
sbb
insb
lahf
jae
dec
aaa
push
fs
xor
inc
jmp
fildll
lret
mov
dec
mov
ror
iret
lret
into
lock
scas
fcom
inc
sub
sbb
imul
mov
gs
mov
xor
sti
xchg
fsub
inc
jecxz
imul
mov
fistpl
nop
fsubrl
adc
aad
jmp
je
sarl
mov
mov
push
out
mov
loope
into
mov
stc
jmp
sub
shr
jno
sbb
and
aas
mov
outsl
fnstcw
cli
mov
sbb
inc
adc
pop
or
inc
cli
ljmp
stos
arpl
shll
sbb
cmp
and
dec
mov
sbb
aaa
xchg
movsb
js
adc
in
mov
icebp
or
adc
iret
add
sub
ret
mov
jb
and
add
movsb
mov
cmpsb
add
adc
pop
popa
push
leave
mov
stc
je
push
mov
push
xchg
movsl
test
mov
push
jle
sub
out
mov
lods
je
int
dec
jmp
mov
sbb
xchg
pop
mov
sub
sbb
pop
int
jl
sub
xchg
dec
fcomps
testb
mov
dec
pop
sbbb
and
xchg
add
xlat
xchg
sarl
jbe
pop
das
add
inc
cli
jl
or
dec
dec
mov
lret
sbb
mov
arpl
sarb
imul
jbe
mov
xchg
rolb
push
mov
inc
adc
neg
pushf
pop
inc
dec
dec
dec
mov
mov
stc
jle
fmull
lock
push
loop
dec
mov
test
xor
sub
arpl
pushl
ljmp
push
aam
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
add
adc
stos
push
xor
sub
jnp
rcrb
lds
ret
sub
jne
rorl
add
xchg
and
or
js
fcmovnb
dec
push
inc
dec
gs
pop
fs
in
mov
sub
push
xchg
mov
pop
xor
inc
cli
mov
lret
mov
insb
xor
cmp
call
mov
push
stc
and
mov
add
fs
addr16
sahf
ficoml
mov
shll
out
jl
int3
xor
or
es
pusha
sub
xchg
or
xor
cltd
sub
lea
popa
xchg
push
pop
push
and
mov
arpl
adc
gs
xor
mov
sub
imul
or
test
xor
jle
or
es
in
cmp
add
ret
add
test
fcoml
jno
out
jne
cmpl
ja
mov
test
jae
adc
or
add
push
call
inc
out
cmp
jecxz
dec
sarl
aad
and
cmc
add
pop
push
in
inc
imul
push
lods
lods
ss
aas
and
clc
or
shl
mov
jno
xchg
xor
xor
pop
adc
jae
mov
mov
outsb
rcrb
je
and
in
mov
outsl
adc
shrb
aaa
enter
xor
mov
inc
mov
pop
add
test
jp
mov
lock
cmp
and
rorb
outsl
in
sub
lret
dec
ret
lcall
leave
das
cmp
mov
stos
mov
mov
xchg
xchg
pop
add
popf
cmp
adc
add
dec
lret
subl
aas
sbb
in
cmpsl
daa
lea
ret
scas
jb
call
sbb
mov
jmp
pop
xor
pushf
popa
insb
sbb
xchg
lea
or
flds
and
cmp
ror
fwait
stos
sbb
xchg
pop
mov
pop
cltd
cli
dec
adc
and
es
jae
add
test
inc
imul
inc
jl
dec
dec
mov
loop
mov
mov
add
stos
out
xor
test
pop
cltd
add
mov
imul
addr16
inc
add
pusha
pop
outsl
xor
push
clc
or
mov
cmpb
add
enter
jmp
sub
lcall
je
ret
jg
jo
xchg
and
lds
sub
lock
push
mov
movsl
rorb
mov
sti
or
cwtl
or
notl
jnp
lods
fs
xchg
or
xor
xchg
pop
ja
jb
subl
dec
xchg
xchg
pop
sbbl
arpl
xlat
rcr
cmp
mov
fidivl
mov
outsb
dec
jmp
push
sbb
test
adc
mov
sub
in
sti
int
jp
mov
jb
dec
push
pushl
aaa
movsl
repnz
cld
mov
cmc
ffreep
cmp
out
fs
imulb
xchg
notb
mov
and
cld
add
stos
outsl
add
cltd
mov
pop
xlat
cli
addr16
mov
popa
orl
data16
rcrl
and
ja
leave
inc
jmp
pop
sti
pop
ljmp
leave
sbbb
add
add
adc
inc
clc
cmp
add
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
js
dec
adc
mov
adc
push
out
filds
xchg
test
test
std
push
repz
mov
lcall
enter
xchg
mov
push
stc
jb
aam
mov
add
mov
icebp
dec
imul
fs
enter
push
leave
addr16
adc
add
sbb
sbb
mov
insb
add
sub
and
pop
adc
std
mov
daa
sub
and
pop
outsb
fidivs
andl
pop
int
in
lods
inc
xchg
imul
in
add
jp
cmpsl
sub
push
jmp
adc
adc
xor
cmp
lds
leave
dec
sbb
sbb
lret
sbb
push
shl
adc
xor
shlb
ss
pushf
or
or
das
mov
cmp
adc
mov
mov
mov
push
cmp
pop
mov
iret
lods
scas
mov
hlt
outsb
stos
mov
adc
negb
push
rcrl
sti
test
andb
decl
adcl
xchg
pop
cmpl
mov
dec
scas
ljmp
cmp
int3
fadd
fdivl
insl
pushf
pop
and
push
fsts
pop
cs
jmp
sbb
loope
xor
cwtl
jle
xchg
sbb
xchg
xchg
in
xchg
add
sahf
enter
jmp
mov
jg
fsubrl
ja
leave
push
mov
jnp
mov
mov
mov
test
scas
push
inc
imul
jae
push
sub
sbb
repnz
pop
shld
adc
fists
xchg
push
test
lock
mov
fidivrs
inc
mov
jle
js
mov
arpl
mov
out
xor
or
test
test
imul
jb
movsb
fadds
lret
movsl
and
jns
dec
lret
mov
sub
pop
jns
rcrl
jb
inc
jle,pt
push
jnp
pop
mov
lods
int
push
shr
pop
dec
jae
pop
cltd
pop
cmp
xchg
out
pop
add
mov
ljmp
xchg
sub
and
xor
jbe
xchg
out
pop
mov
or
in
insl
mov
jo
xor
cli
fldt
sub
mov
pop
mov
dec
push
lret
cli
sub
xchg
into
cmc
mov
adc
rclb
sbb
dec
jmp
out
pop
daa
daa
ret
cmc
hlt
adc
xchg
testb
mov
inc
sub
mov
mov
rcrb
mov
fsubp
xor
jne
clc
adc
inc
mov
sub
repnz
mov
aas
jmp
mov
and
sbb
icebp
adc
and
sub
dec
cmpsl
into
testl
ja
push
pop
leave
inc
cmp
push
ljmp
ret
jp
xchg
out
pop
insl
loop
and
in
sbb
popl
loop
pop
loopne
std
ret
and
push
pop
out
jo
les
or
push
sahf
comiss
hlt
push
push
pop
adc
dec
xor
bound
sbb
enter
sti
pushl
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
cmc
ljmp
adc
cmpsl
shlb
mov
shrl
dec
popa
lock
and
scas
push
mov
jg
xchg
mov
and
and
jae
in
add
jns
insb
in
pop
scas
inc
clc
ss
adc
jns
push
clc
insl
cld
mov
roll
idiv
push
or
or
jmp
popf
adc
movsb
mov
movsb
inc
rorl
mov
fcompl
mov
idiv
ror
outsl
ret
mov
xchg
fstpl
cmp
xor
orps
rcll
nop
push
add
xchg
cli
cmp
outsl
addr16
adcl
push
aaa
inc
fidivrs
xchg
loopne
push
pop
cmp
push
bound
lock
aaa
sub
pop
push
adc
xor
daa
es
movsb
xchg
pusha
imul
pop
stos
adc
push
or
scas
mov
inc
loopne
ss
loope
mov
data16
inc
stos
mov
dec
leave
hlt
movsb
xor
scas
or
icebp
lcall
adc
jbe
sbb
push
stos
jae
mov
scas
out
popa
rclb
xchg
adc
cmp
mov
mov
adc
icebp
jbe
pushf
aam
jns
pop
mov
sahf
push
ret
add
xor
mov
aaa
xor
inc
mov
jg
ds
mov
mov
cmpsb
xchg
and
pop
stos
out
dec
dec
enter
dec
sti
int
aad
std
test
and
and
jp
js
jbe
sbb
outsb
xor
pop
sub
pop
xor
lahf
adcb
mov
inc
inc
xchg
adc
repz
fisttps
lock
or
insb
outsl
lods
pop
int3
inc
xor
add
xchg
hlt
sub
test
aad
adc
jp
cs
test
stos
movsb
or
push
mov
and
in
roll
add
mov
inc
idivl
mov
jns
movsl
scas
jae
mov
mov
arpl
loop
xlat
cltd
sub
mov
cwtl
ljmp
and
test
mov
mov
jae
adc
lret
dec
push
popf
insl
mov
ficoms
cmp
push
or
jne
test
mov
mov
lret
ds
leave
push
cmc
ret
push
push
fwait
inc
sahf
das
stc
jge
inc
call
repnz
ret
push
xchg
in
bnd
push
cwtl
mov
aas
jl
sbb
fidivrl
pop
arpl
jae
fsubl
testl
push
and
fnsave
es
mov
push
cmp
aas
outsl
xchg
lcall
push
mov
jb
loop
push
lods
and
inc
add
add
call
mov
push
lea
std
inc
sbb
icebp
gs
dec
shr
jl
push
pusha
mov
jp
scas
es
mov
and
dec
push
adc
mov
lea
stos
test
orl
jne
xchg
test
sbb
sub
jb
add
insb
mov
cld
sahf
pop
mov
dec
inc
jmp
push
mov
dec
push
xor
or
cmp
les
jo
je
mov
jne
mov
inc
add
add
rorb
push
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
mov
mov
adc
aaa
inc
sti
call
cmp
jmp
xchg
pop
loope
imul
fbstp
cwtl
sarl
sub
stc
lods
enter
xchg
add
push
lcall
jns
stos
xchg
and
sbb
jl
ja
and
lods
add
or
xchg
icebp
addl
js
pop
and
hlt
push
mov
adc
mov
push
iret
ficoml
sub
mov
xchg
test
lcall
rclb
jnp
inc
ljmp
scas
add
loop
loopne
jp
add
and
adc
stc
out
adc
lret
lods
add
repz
mov
sub
shrb
mov
mov
mov
rclb
mov
push
movsl
ret
jne
imul
leave
cmp
and
mov
in
scas
mov
shl
mov
add
cmp
in
ss
xchg
xchg
mov
fldl
push
outsb
inc
and
sbb
pop
outsb
mov
push
fsub
jbe
sbb
lods
fcmovne
and
stos
mov
or
dec
bound
movsl
adc
jno
ss
and
dec
sub
and
xchg
or
pop
lahf
movsb
sub
sbb
and
popf
jo
fiadds
lods
pop
out
scas
add
cmp
mov
ja
sub
push
sub
stos
icebp
fwait
jbe
cmp
dec
repnz
stos
ret
call
push
cmpsl
cmc
mov
enter
mov
cwtl
fists
dec
mov
dec
cmp
mov
lock
ret
mov
mov
inc
scas
jl
call
mov
xchg
inc
and
pop
and
aam
mov
in
ss
push
test
push
mov
ja
out
cwtl
inc
out
mov
xchg
jle
sub
shll
add
insb
sti
ret
outsb
xor
mov
repnz
jns
cs
dec
sti
mov
fs
jbe
outsl
push
aam
pop
fbstp
mov
pop
mov
out
mov
clc
pusha
push
mov
out
js
dec
out
popf
lea
cmc
jl
and
xor
or
outsb
push
addr16
cld
and
xor
and
jmp
shlb
jo
inc
dec
xchg
xchg
dec
add
or
cmc
and
ja
sbb
inc
pushf
pop
jbe
test
add
lods
jne
aas
push
xchg
loop
push
enter
sbb
mov
scas
inc
mov
lods
fldcw
loopne
jmp
add
jecxz
lahf
xor
pop
push
pop
or
aaa
lds
xor
ret
pop
sub
lods
mov
pop
mov
out
fwait
dec
dec
aad
pop
xchg
add
jo
aad
push
mov
negb
mov
popf
je
pop
sub
out
iret
and
call
mov
and
cmpsl
scas
mov
ss
xchg
imul
xchg
bound
mov
hlt
daa
dec
dec
int
fwait
stc
mov
jo
into
mov
sub
stos
daa
stos
push
and
xor
pop
push
pop
push
out
mov
clc
mov
mov
dec
and
fiaddl
mov
js
lcall
adc
mov
adc
call
shrb
add
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
rorl
adc
or
call
push
gs
dec
loopne
loop
out
or
dec
adcl
mov
js
test
mov
xchg
int
call
push
insb
inc
fmull
jl
inc
lds
stos
sbb
stc
rolb
jno
repnz
in
mov
scas
cltd
push
es
loope
xchg
pop
mov
push
cmp
in
xor
in
push
ljmp
push
and
lods
rclb
andl
dec
adc
in
push
mov
jg
mov
into
ljmp
cwtl
sbb
cmp
or
mov
xor
lcall
lea
jecxz
mov
push
inc
and
fcoms
popf
mov
add
jo
das
cmpsl
mov
add
outsl
and
fdivrs
es
inc
lret
or
mov
ret
enter
outsl
out
mov
or
mov
push
in
pop
fwait
cmp
mov
and
pop
sarl
cli
dec
sub
inc
pushf
sbb
mov
lods
daa
add
imul
arpl
sbb
xor
xchg
push
das
ds
pusha
adc
jg
jmp
push
lods
mov
push
and
adc
loop
add
in
aad
mov
test
add
push
data16
filds
cmp
jnp
js
lcall
lock
xchg
pop
sbb
push
dec
and
pop
lods
mov
sub
arpl
xor
xchg
xor
sbb
add
xor
mov
jo
push
lret
mov
push
rolb
inc
pop
in
sub
jne
test
rorb
add
fildl
jb
pop
mov
call
and
pop
aad
mov
or
or
jle
das
into
push
into
lds
sarb
and
cmp
mov
repnz
adc
sub
stc
ret
xor
fcom
fmulp
mov
in
scas
inc
clc
mov
loopne
pop
mov
fnstcw
pop
ficompl
data16
in
push
or
pushf
cli
sub
testb
mov
test
std
aam
cmp
push
or
mov
pop
jge
fsts
mov
inc
jg
push
aam
and
popf
stos
mov
ljmp
pushf
test
arpl
aaa
lret
pusha
jecxz
lea
or
aad
sub
cltd
js
shll
insb
mov
push
cmpsb
mov
scas
shll
sub
push
cwtl
push
add
lcall
das
imul
shl
adcb
int
test
adc
add
loop
ret
lds
xchg
jge
int
sbb
or
adc
push
xor
je
les
inc
mov
jge
mov
scas
sub
xchg
inc
loopne
mov
jb
js
sbb
xchg
lcall
filds
imul
adc
cmp
fisubs
push
mov
jle
mov
pop
into
movsb
scas
mov
gs
arpl
sbb
or
xchg
ret
inc
icebp
pop
mov
icebp
sbb
adc
loopne
push
cmc
jb
jne
ret
in
cmp
mov
push
fimuls
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
mov
adc
inc
fsub
mov
jmp
cmc
push
mul
mov
cmp
bound
xchg
bound
iret
mov
stos
daa
jge
popa
fstps
jbe
mov
pop
add
sub
rclb
cli
inc
or
test
jno
mov
in
mov
lock
jae
adc
mov
push
je
mov
mov
rep
mov
pop
ret
mov
fdivs
sub
push
insb
jp
fistl
adc
jmp
or
xchg
aas
add
inc
or
cld
outsb
lock
popf
in
sbb
jge
pushf
push
mov
fs
sub
mov
mov
les
leave
lahf
mov
jae
or
aas
adc
pop
push
loope
dec
mov
adc
movsb
or
jecxz
in
cs
test
sub
and
pop
mov
adc
push
add
jbe
and
sbb
mov
outsb
clc
ret
push
lcall
dec
bound
xchg
lods
ret
lods
out
das
xchg
fldcw
popf
push
cli
shrb
movsl
adc
negl
pop
jmp
call
rorl
push
cmpsl
mov
or
push
scas
dec
dec
in
lret
insl
int3
xlat
push
iret
or
or
js
decl
fwait
xchg
cli
aas
push
dec
mov
xchg
adc
roll
scas
jl
sarb
jno
and
imul
sub
mov
lea
sbb
and
jge
pop
das
inc
push
cmp
and
jg
pop
mov
dec
xchg
out
aaa
cmp
cmpsl
push
pop
mov
inc
sub
dec
aam
shrb
dec
sarb
jno
sub
mov
pusha
xchg
fidivs
cmpsb
pop
dec
sbb
mov
pushf
scas
jl
push
or
or
stos
int3
int
cmpsl
cli
pop
cmp
adc
enter
inc
shlb
aad
aaa
mov
loopne
push
test
stos
and
mov
jg
cld
shrb
push
into
or
push
pop
mull
rcl
std
out
cmpsl
loope
movsl
jg
xchg
inc
enter
sahf
shll
dec
xlat
cmp
sbb
cmp
mov
insl
pop
fwait
sti
pop
mov
jmp
pop
fmull
sub
jo
xor
sbb
or
pop
cmp
inc
xchg
test
push
pop
cmp
dec
mov
xor
mov
std
or
aad
pop
js
sbb
and
mov
dec
fadd
shll
ja
in
fbstp
fstps
fistpl
shrb
dec
xor
fcomps
add
add
mov
popf
stos
stos
adc
adc
rcrb
pop
sub
inc
dec
dec
shrl
fisttpl
inc
sbb
adc
in
push
xlat
and
loop
iret
cmpsb
add
or
jns
rcl
adc
pop
enter
and
in
or
inc
pop
mov
pop
test
sbb
enter
icebp
add
lea
jl
dec
daa
push
idivl
sbb
jmp
lock
js
test
dec
and
fwait
mov
mov
mov
stos
enter
or
lahf
loopne
jo
hlt
or
and
inc
lret
and
fsubl
mov
adc
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
pusha
add
adc
cltd
shlb
gs
into
mov
sarl
imul
sarb
sbb
mov
inc
mov
sbb
jnp
hlt
bound
insl
sub
pop
je
or
mov
repnz
and
mov
movsb
sub
adc
inc
shrl
jnp
decb
pop
test
stos
rcpps
xchg
scas
push
sub
push
and
xor
cs
stc
inc
lcall
pop
jbe
fcompp
clc
pop
push
lock
rclb
aam
adc
sub
pop
or
jnp
in
jmp
sub
loope
sub
jnp
mov
adc
push
dec
cmp
adc
es
push
lds
les
addr16
out
iret
in
scas
push
xor
lahf
and
sahf
mull
inc
adc
jnp
ss
test
mov
rcrb
popa
cmp
sub
out
popa
ficompl
je
or
cmp
push
pushf
xor
ds
xchg
jg
scas
cmpps
scas
add
jnp
cld
test
push
push
aad
cmp
or
and
fsubs
imul
add
test
add
xor
sub
shrl
pop
inc
sar
or
pop
adc
outsb
mov
icebp
mov
ret
popf
rclb
inc
rorl
and
sti
shlb
out
inc
pushf
icebp
dec
negl
mov
out
and
subb
rcrb
out
test
sbb
sbb
aam
dec
hlt
xchg
lcall
in
rorl
cmp
push
jno
jle
fwait
clc
xor
rcrb
pop
fidivs
and
test
and
aaa
xor
in
repnz
xor
mov
mov
fidivl
jl
clc
mov
movsl
inc
ret
cwtl
pusha
pop
cmc
cmp
pop
xlat
jmp
pop
push
sbb
out
add
test
sub
mov
aas
xor
imul
cli
flds
in
push
clc
adc
sub
jno
incl
cltd
mov
fdivs
lahf
das
imulb
cmp
addr16
rcrb
push
sub
mov
aas
cmp
lret
js
inc
sahf
mov
push
popa
popa
rcrb
fisttpll
sbb
daa
sub
mov
dec
xor
loopne
mov
adc
scas
in
sbb
negl
out
mov
fs
daa
xor
out
sub
iret
adc
pop
andl
lcall
outsl
lcall
lret
add
mov
stc
out
aas
sbb
je
rorl
inc
sti
stc
mov
int
jae
das
add
push
xchg
outsl
outsb
je
jge
callw
pop
adcb
jnp
adc
dec
fwait
push
fstpt
pop
cwtl
sub
insl
hlt
aad
add
sahf
push
jne
cmc
into
fisubrl
enter
push
push
ljmp
xor
lret
pushf
out
mov
fnsave
mov
or
ds
push
pop
in
cmpsb
andb
or
int3
or
dec
adc
and
lods
lret
ljmp
and
add
mov
cwtl
mov
fcomip
pop
push
jns
dec
xchg
stos
xchg
clc
add
add
xchg
movl
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
imul
adc
mov
adc
std
lods
sbb
fistps
mov
and
jo
lods
das
push
or
test
sub
es
stc
and
mov
enter
pop
loope
push
mov
aas
test
negl
adc
nop
cld
and
xchg
mov
jp
mov
jo
sub
mov
lret
pop
mov
loop
fsts
icebp
out
imul
sub
push
pushf
in
xor
aad
into
test
adc
push
or
icebp
mov
ss
pop
aas
out
leave
out
inc
inc
xor
in
jle
or
adc
jo
or
inc
out
fisubrl
sbb
roll
in
push
mov
or
mov
mov
in
and
stc
and
sbbb
gs
jb
shlb
pop
pop
cmp
imul
ret
rcl
jo
ljmp
xchg
addr16
lock
xor
leave
or
sbb
adc
jbe
sub
movsl
adc
xchg
jl
in
and
scas
enter
test
mov
jb
push
sbb
add
adc
mov
out
sbb
mov
loopne
and
sub
hlt
scas
mov
mov
lret
cmpsb
dec
mov
fdivr
jns
int
push
push
inc
mov
mov
outsl
bnd
mov
test
fsubp
fistpl
pop
jb
jae
test
stos
jmp
cmpb
js
mov
mov
push
insb
icebp
dec
cs
pop
mov
xlat
data16
cmp
and
jmp
sbb
mov
dec
xor
mov
push
xchg
jo
lea
aad
jne
cmpsb
jle
scas
adc
std
adc
ret
mov
les
lods
inc
add
ljmp
cwtl
push
inc
loope
lahf
jl
jecxz
lcall
xor
pop
arpl
jg
pop
and
fisubl
or
pop
lea
adc
push
pop
sbb
leave
jno
ljmp
mov
xorl
jge
rorl
inc
unpcklps
push
loopne
mov
mov
fcmovnb
mov
mov
aas
inc
cmp
mov
ret
xor
mov
or
dec
and
iret
push
mov
add
andl
sub
scas
sub
inc
add
lret
inc
cmc
dec
cmp
mov
sbb
mov
mov
inc
push
lock
adc
sbb
rcr
imull
xor
inc
jne
mov
xor
mov
mov
add
loope
enter
negb
mov
xchg
xchg
inc
push
imul
cli
ljmp
pop
add
dec
pop
or
xor
mov
sub
push
imul
outsl
dec
mov
test
cmp
loopne
xchg
test
int
xor
inc
inc
lods
jmp
inc
dec
arpl
int3
popf
sahf
cltd
sbb
mov
lahf
mov
clc
rcrb
mov
mov
out
enter
lret
push
nop
and
mov
xlat
lret
loopne
mov
mov
xor
mov
pop
in
stc
xchg
add
pop
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
dec
dec
xor
popl
and
aam
ss
test
call
pop
and
shrb
lods
loopne
je
pop
mov
and
subb
pop
push
mov
inc
aam
sub
jmp
outsl
lds
hlt
inc
stos
fsub
dec
mov
leave
mov
shlb
cmp
push
adc
js
push
clc
or
xchg
ds
mov
inc
test
adc
lods
repz
imul
inc
and
mov
scas
mov
sbb
push
shl
jae
push
fbstp
dec
int3
mov
fdivrs
hlt
adcb
and
aas
lret
pop
mov
jmp
jne
fistl
insb
dec
imul
or
scas
pop
gs
test
dec
lods
stos
dec
jge
jl
add
ret
sub
sbb
pop
mov
les
cmp
dec
iret
mov
fisubl
rolb
adc
subb
divl
insl
push
sbb
aad
cmpsb
dec
mov
pop
pop
fistpll
ss
jmp
sbb
or
cmp
push
test
addl
movsb
push
jg
mov
outsl
mov
xor
or
and
jnp
mov
sbb
icebp
or
push
xor
ds
cmp
jb
das
lods
inc
sub
movsb
or
mov
dec
loope
sti
aaa
cltd
mov
mov
gs
push
popf
xor
cmp
fimull
lods
jp
movsl
xchg
and
das
hlt
mov
cmp
sbb
cwtl
add
pop
sub
pop
add
aad
pusha
scas
jbe
imul
je
rcll
mov
mov
push
call
xor
jo
cli
movl
ja
addb
jmp
int3
das
xor
sti
cmc
jb
inc
xchg
add
add
rol
mov
ret
cmp
mov
and
sub
out
lods
dec
mov
imul
sarl
or
inc
div
cmp
mov
xchg
cmp
mov
sbb
lret
add
mov
es
and
lods
hlt
popa
xchg
ss
ret
push
xor
cmpsb
lea
push
cmp
shlb
jae
mov
enter
insb
mov
and
push
or
aam
mov
icebp
fidivs
clc
daa
pop
imul
sub
mov
in
outsb
mov
mov
repnz
inc
fcoms
jne
lods
outsb
sub
cmp
push
push
jecxz
sahf
add
xor
insl
jecxz
sbb
cli
mov
cmpsb
je
lret
popa
jns
or
mov
mov
dec
or
ret
adc
xor
add
bound
push
ret
imul
jg
das
or
jp
test
outsl
cmp
gs
or
inc
mov
inc
cmp
out
cld
les
mov
nop
test
add
or
cmp
mov
aas
push
enter
rcrl
jno
and
mov
test
out
ret
imul
ljmp
mov
sub
push
repz
cwtl
cmpsl
fidivl
add
jle,pt
xchg
push
push
and
mov
sub
ficompl
inc
ret
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
test
adc
mov
adc
mov
sbb
or
cmpsl
xchg
lods
out
mov
adc
repz
mov
mov
mov
or
movsb
aam
xor
adc
ja
cltd
lahf
bound
iret
and
js
add
in
nop
shrb
enter
mov
xorl
stos
sbb
test
sbb
int3
mov
dec
enter
loop
addl
or
sarl
testl
mov
neg
sbbb
fldl
ja
sbb
sbb
cmc
dec
movsb
dec
in
sbb
fdivrl
imul
xor
imul
dec
dec
mov
cmp
push
popf
cmp
fwait
pop
cs
adc
je
push
sbb
or
jmp
xor
pop
ds
add
nop
dec
addb
in
stos
mov
xchg
mov
mov
out
xor
lock
cmpsb
lds
or
jge
xor
mov
or
test
xchg
mov
mov
movsb
dec
adc
jbe
icebp
xchg
mov
pop
adc
push
pop
lods
pop
loope
lret
leave
fadds
adc
sbb
and
push
xor
lods
or
jo
nop
xchg
js
addb
in
nop
in
dec
sub
repnz
mov
and
dec
add
and
insl
mov
and
lret
aas
jb
sub
lods
push
cld
jge
clc
fwait
xchg
jl
fmulp
mov
in
ret
aas
movzbl
add
jns
gs
inc
nop
out
insl
popa
sub
mov
dec
in
dec
fs
push
les
sarb
dec
repnz
testl
lds
ljmp
adc
push
pop
inc
enter
dec
xchg
pop
fisttpl
mov
inc
mov
ss
lcall
out
test
xor
and
pop
xor
mov
fdivrl
in
stos
xchg
in
imul
mov
xor
mov
sub
movsb
inc
mov
icebp
mov
and
lret
cwtl
dec
cmpsb
movsb
add
pushl
es
adc
xor
aad
xor
repnz
ret
mov
mov
pop
iret
or
xchg
cs
std
shrl
rorb
jmp
dec
push
stc
mov
mov
xchg
inc
push
xchg
inc
xor
rol
jmp
nop
lea
mov
shll
mov
xchg
jmp
jb
and
pushf
sub
mov
outsb
int
dec
imul
mov
adcl
xor
jbe
aam
jge
mov
push
lcall
adc
in
fs
jmp
jae
or
dec
lods
push
stos
leave
icebp
test
repnz
ret
in
daa
push
mov
enter
and
shlb
fists
insb
fnsave
outsb
dec
jnp
fcomps
xor
aam
or
incl
and
jo
adc
or
xchg
push
imul
xlat
push
mov
popa
xlat
fstpl
dec
shlb
gs
mov
ret
test
imul
leave
gs
xorl
mov
xchg
int3
add
aas
out
fisubrl
gs
push
xor
insb
shll
int3
xchg
mov
sub
sbb
mov
mov
decb
movsb
pop
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
xchg
push
push
or
adc
pop
lcall
sbb
xor
mov
cld
lret
test
adc
adc
sbb
bound
xchg
mov
stc
cmp
test
and
aam
outsl
sarl
aam
xorb
mov
popf
cmpsb
aas
cmc
jne
out
inc
or
inc
out
mov
pop
fcom
and
ret
jmp
sti
sub
loope
adc
fs
and
push
mov
or
ds
sbb
xor
dec
mov
sahf
mov
xor
mov
je
mov
and
daa
mov
xchg
jl
jmp
das
inc
xor
add
add
test
push
hlt
jl
dec
adc
xchg
pop
jns
inc
cmp
dec
gs
xlat
mov
gs
dec
rolb
mov
test
js
test
fs
call
dec
mov
xorl
jmp
out
pop
adc
sbb
add
or
gs
and
adc
ljmp
jmp
call
std
or
repz
cmc
fldl
cmc
pop
jne
pop
add
outsl
dec
cs
dec
xor
mov
push
pop
into
jo
cld
lcall
inc
stos
pop
sub
pop
int
test
shrl
xor
jge
lret
push
mov
fstp
cmc
std
jbe
dec
inc
loop
out
jl
xchg
jns
shrl
into
jp
stos
adc
mov
das
and
mov
pop
dec
nop
lcall
incl
adc
scas
xchg
mov
ret
movsb
cmpsb
xchg
dec
add
and
mov
and
mov
cltd
arpl
xor
test
gs
cmc
mov
xor
test
push
arpl
mov
or
cmpsl
adc
sub
icebp
adc
mov
shll
movsl
test
in
cmpsl
lcall
cmp
jo
mov
add
movsb
lcall
dec
mov
stos
push
imul
cmc
mov
cmpsb
xchg
xchg
cltd
inc
mov
cmp
rcrl
dec
jmp
lods
rcl
mov
jb
ljmp
push
std
inc
test
in
mov
les
out
rcrl
xchg
mov
sbb
icebp
out
sub
and
movsb
ja
in
fstps
popf
pop
pop
enter
in
cmp
mov
mov
ret
xorl
xor
lahf
mov
pop
les
push
adc
sbbl
or
dec
das
mov
sbb
dec
pop
js
xor
cmp
lea
or
jne
mov
push
lock
sub
sbb
test
push
adc
pop
adc
outsb
inc
out
adc
shl
test
ja
xchg
mov
xchg
lods
push
int3
mov
cwtl
mov
nop
std
xchg
push
pushf
xchg
xor
into
outsl
mov
imul
std
jbe
and
ljmp
jg
inc
jb
sub
je
add
int
subl
loopne
sub
fidivl
xor
mov
dec
mov
shr
iret
add
add
pusha
inc
ja
pop
aaa
and
or
insb
test
adc
mov
adc
fstps
xor
shll
cmp
mov
xor
outsb
not
push
insl
jno
adc
push
dec
cmp
lcall
mov
enter
sub
jl
out
xchg
xor
cmp
iret
dec
fs
icebp
inc
aad
and
popa
mov
mov
pop
mov
daa
jnp
sub
mov
jg
push
pop
mov
adc
outsl
bound
xor
and
dec
mov
xchg
scas
pop
fdivrs
adc
out
adc
in
sbb
rcl
ljmp
mov
cld
aad
jo
addr16
add
lds
pop
mov
sbb
push
pop
xor
ret
jl
pop
jmp
or
repz
out
movsb
daa
ss
pop
jle
adc
push
mov
repz
inc
ret
fisubrs
xor
ss
mov
lds
negb
cltd
rcr
imul
jp
fbstp
inc
sbb
or
rcll
daa
jp,pt
ljmp
mov
sbb
test
insb
jmp
clc
pop
ljmp
pop
jle
inc
scas
movsl
sub
ja
xor
sarb
leave
jge
inc
push
dec
mov
ja
jnp
ds
mov
jmp
in
ds
push
inc
pushf
inc
test
rolb
mov
xor
int3
stos
dec
scas
es
xchg
inc
sub
or
pop
jne
ds
lea
add
js
jo
pop
push
push
pushf
cmp
pop
cmp
fdivrs
push
sub
pop
out
out
arpl
pop
leave
scas
imul
lahf
ja
jle
jb
enter
pop
inc
das
adc
fldcw
loopw
or
nop
mov
mov
sbb
loop
add
fdivl
xor
fnstenv
mov
sub
inc
sub
stc
int3
jecxz
inc
push
cmp
xor
insl
xor
sbb
outsl
fstps
add
daa
and
adc
push
jge
pop
test
mov
call
xchg
stc
mov
pop
fidivs
sbb
dec
sbb
jns
out
stc
jnp
jmp
push
xchg
lock
sti
fwait
ss
push
jg
mov
add
xchg
mov
ret
mov
lock
lock
cmp
gs
sub
in
mov
insb
outsb
repz
push
cmp
add
and
rcrl
js
in
ljmp
xchg
xchg
dec
test
push
iret
aaa
inc
std
in
mov
mov
xchg
cmp
sub
mov
xchg
mov
push
xchg
loope
imul
push
jo
hlt
cwtl
faddp
adc
ret
stos
enter
aad
jbe
fbld
outsb
add
push
inc
rcr
gs
lcall
lods
hlt
xchg
in
jns
cmp
sbb
sub
mov
and
lcall
inc
das
fcomps
push
add
jmp
hlt
cmpsl
clc
mov
mov
inc
jne
movl
out
xchg
jmp
inc
sub
popa
sarl
cmp
ja
cmp
punpcklwd
mov
imul
fucom
cmp
fcmovne
and
inc
ds
pop
and
mov
and
pushf
and
add
icebp
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
push
imul
and
or
mov
dec
shlb
fmull
inc
mov
dec
dec
mov
pushf
loopne
data16
fstpl
cmc
iret
sbb
dec
iret
movsl
mov
out
stos
repnz
fnsave
cmp
adc
outsl
and
xchg
pop
aad
leave
push
jl
sbb
push
or
mov
push
adc
mov
and
pop
xor
in
pop
xorl
inc
bound
clc
mov
and
jge
mov
sub
mov
xorb
aaa
xchg
dec
xchg
ds
fdivrs
mov
xor
dec
pop
push
enter
fwait
movb
popf
or
sbb
jbe
sbb
loope
jg
push
fcompl
xchg
inc
ficompl
je
outsb
jg
ret
lea
rcll
and
in
lods
sbb
les
inc
and
xchg
cmp
cmp
sbbb
sti
dec
in
push
insl
cmp
aad
add
sahf
in
inc
cmc
add
jmp
and
mov
sbb
mov
movzbl
cmc
cwtl
cmp
push
dec
test
adc
es
pop
in
call
bound
add
jnp
pop
scas
dec
mov
les
sbb
es
mov
adc
cmp
inc
cmpsl
adc
xchg
lcall
repnz
jo
mov
add
xchg
push
imul
mov
sub
mov
xchg
push
mov
jae
out
cmp
adc
lock
inc
push
insb
adc
icebp
inc
stc
or
jmp
sub
stc
and
sub
add
or
cmp
mov
mov
sub
and
mov
pop
bound
fisttpll
pop
psllw
push
insb
scas
imul
gs
andl
in
sbb
lods
lods
xchg
push
or
movsl
sti
ja
aaa
das
mov
dec
push
inc
and
xchg
je
in
jb
jl
mov
or
pop
jmp
jmp
stos
nop
cmp
dec
lahf
pop
adc
add
in
mov
shr
das
push
sbb
sub
lret
mov
inc
pop
imul
mulb
xchg
adc
stos
lret
lret
dec
mov
jnp
enter
xchg
lods
mov
inc
fidivrs
xor
loop
inc
mov
cwtl
jb
lock
movsl
jo
mov
or
mov
fcomps
and
jno
sub
adc
outsw
adc
dec
adc
dec
push
in
mul
loopne
icebp
in
enter
mov
xchg
mov
hlt
inc
js
xchg
scas
cwtl
mov
cmp
and
adc
sbb
nop
popf
xchg
add
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
cmp
js
out
lock
adc
adc
les
pop
stos
xchg
leave
rorb
dec
into
bound
insb
sbb
fisttpl
repnz
mov
popf
or
add
mov
adc
dec
das
aad
push
arpl
fs
movsb
aas
addr16
push
repz
call
xchg
push
sarb
mov
xchg
popa
push
fistl
cmp
repz
loope
mov
cmp
leave
stos
nop
add
shlb
push
popf
pop
cmc
sbb
in
gs
test
add
out
mov
push
imul
test
and
fldlg2
fs
sbb
stos
or
enter
shlb
test
jbe
or
jecxz
cmpb
jg
push
in
sub
subb
xchg
and
test
arpl
mov
aad
dec
aaa
adc
ror
pop
sar
mov
repz
sbb
cmpsb
std
jns
xlat
and
outsb
movsl
inc
and
aam
fstpl
xlat
test
cld
sbb
push
loopne
inc
outsl
sbb
adc
add
pop
ficoml
cltd
fidivrl
mov
adc
fs
or
sbb
inc
addr16
cli
ret
aaa
jb
ja
lcall
repnz
ds
out
xchg
fcompl
cmpsl
sub
ss
dec
insl
lock
nop
aas
sub
dec
in
aas
in
jnp
or
xchg
sbb
inc
xor
cmpl
lods
xchg
ficomps
loop
das
es
mov
cmpsl
hlt
mov
xchg
inc
scas
ret
aas
mov
add
test
aam
lds
imul
dec
jb
sbb
lcall
fnstenv
lods
icebp
je
xchg
lea
xchg
jge
or
hlt
push
frstor
shl
std
lret
jns
mov
mov
ret
test
inc
call
nop
out
popa
je
adc
iret
mov
arpl
xlat
pop
pushf
dec
mov
mov
push
cmp
imul
jmp
ds
cmp
pop
mov
add
push
sbb
lahf
nop
sbb
add
or
dec
xchg
mov
xor
roll
adc
pop
inc
inc
add
lcall
arpl
or
lcall
movd
sbb
push
jo
or
cli
leave
sti
in
shlb
and
dec
cli
cmp
dec
pop
daa
mov
cmc
mov
pop
addb
inc
shlb
jecxz
mov
mov
andl
add
pop
adc
or
scas
in
pop
in
ja
fcom
sbb
add
and
pop
mov
mov
xor
gs
cmp
inc
loopne
fs
iret
push
mov
shlb
lahf
add
aam
hlt
cmp
jecxz
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
lcall
adc
adc
push
das
sub
mov
leave
mov
or
jg
mov
sbb
int
fiaddl
fildl
loop
mov
mov
lock
jbe
jg
shlb
xchg
mov
test
inc
stc
cmpb
adc
ss
aaa
push
push
out
int3
mov
into
aas
xlat
pop
xchg
jbe,pn
fstps
add
addr16
je
fs
pop
pop
shrb
cmp
dec
push
fnstenv
mov
lahf
pop
out
out
or
mov
fnstsw
cwtl
jb
adc
lea
mov
in
lods
lock
add
in
sub
clc
in
pop
xor
or
insb
fldenv
or
inc
and
idiv
mov
mov
lds
cli
enter
push
inc
mov
xor
scas
xchg
testb
filds
push
dec
mov
shr
repnz
subb
lret
lods
fstpt
inc
xorl
pop
cmovno
repz
ret
dec
or
and
inc
fs
xchg
sbb
mov
mov
andl
jmp
sub
daa
and
fimull
adc
push
cwtl
xchg
rcrb
push
jb
push
mov
mov
loop
inc
lods
xor
cmp
cltd
ss
pusha
mov
lret
cmp
or
psllq
ljmp
xchg
rclb
mov
mov
jmp
fcmovnbe
sub
sub
jne
adc
and
test
mov
outsl
mov
mov
out
mov
movsb
out
lahf
negb
xor
and
loop
mov
cmp
fsubrs
loop
and
std
shlb
ret
sub
sbb
fadds
sub
or
xor
sub
loopne
adc
in
loopne
fwait
or
movsl
test
dec
push
sbb
mov
jns
ja
or
dec
adc
jbe
jmp
in
cmpsl
mov
mov
add
jg
mov
repnz
icebp
arpl
ret
jl
sbb
or
jl
mov
out
lcall
test
lahf
fldt
ret
test
in
dec
xor
dec
into
popa
lret
fiaddl
pop
xchg
jns
sub
es
inc
test
xor
xor
icebp
nop
pop
lods
jecxz
movsl
sub
mov
movl
mov
insl
or
aaa
dec
mov
add
xor
adc
aaa
pop
in
aad
int3
mov
pop
xor
imulb
sbb
scas
adc
sbb
mov
mov
es
mov
mov
mov
aaa
scas
sbb
push
xchg
add
cmp
or
popf
mov
aam
lock
add
xchg
je
pop
jne
dec
jnp
adc
push
cmpsb
sbb
inc
xchg
mov
mov
xchg
ja,pn
cmp
mov
js
add
add
ret
nop
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
push
inc
stos
dec
jecxz
adc
adc
adc
outsb
sbb
mov
xor
jbe
xor
cmpsb
stos
dec
idivl
pop
push
sub
iret
arpl
mov
mov
push
add
into
shrl
subb
out
lods
push
jecxz
mov
int
xorl
jge
push
jb
cltd
das
or
enter
popa
sub
add
push
pop
jl
dec
lea
int
mov
adc
shll
mov
and
push
and
fstps
or
pop
mov
or
sub
inc
stos
mov
pop
and
and
js
sti
sbb
jo
js
cmp
or
xor
xchg
insb
push
loopne
insb
and
dec
xor
inc
std
add
jmp
pop
push
fistpl
xchg
push
lock
cwtl
add
lock
mov
leave
cmpsb
xor
dec
pop
ss
or
pusha
pop
fcoms
sbb
movsb
leave
cmc
xchg
mov
mov
in
arpl
or
xchg
lods
adc
out
xlat
sub
daa
aaa
mov
lods
mov
xor
mov
adc
cmp
cmp
jo
jo
cmp
daa
jb
lea
aaa
xlat
imul
xchg
mov
aad
js
in
icebp
imul
and
lods
rorb
sub
stos
xor
dec
push
fiaddl
mov
dec
dec
sub
mov
inc
adc
push
dec
xchg
push
push
sub
mov
fmuls
rclb
and
inc
icebp
ret
ss
scas
aad
adc
xchg
xchg
mov
test
add
push
shrb
dec
popa
fs
pop
xchg
jbe
dec
dec
mov
aam
lods
bound
fs
cld
mov
pop
out
xchg
stos
movsl
int
mov
xor
fisubrs
or
loopne
sbb
and
or
jmp
xor
mov
push
cmc
and
inc
cmp
sahf
sub
jge
test
cli
mov
je
filds
sbb
push
js
icebp
fistl
pop
in
in
mov
and
arpl
and
lahf
loop
lds
sbb
mov
in
ret
push
mov
push
pminub
test
xor
popa
fcmovne
int
out
add
cwtl
lea
popa
sarb
scas
jle
mov
shrb
pop
repz
movsl
adc
rcrb
mov
dec
cmp
xchg
xor
jne
call
in
mov
leave
dec
and
mov
push
pop
fistpl
cwtl
pop
inc
mov
or
scas
ja
movsl
lods
hlt
out
jge
addl
outsl
pop
push
fistpll
stc
mov
xchg
int3
push
scas
mov
pop
sub
add
shl
icebp
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
mov
mov
loope
adc
adc
adc
mov
inc
icebp
popf
jecxz
dec
or
lret
xchg
idivl
frstor
scas
jp
jge
jge
lcall
mov
lods
jecxz
fimuls
ljmp
mov
lcall
add
and
inc
out
push
or
adc
inc
cmpb
stos
push
gs
insl
mov
fbstp
insb
bound
push
jae
jns
inc
cmc
popf
into
sbb
mov
jp
loopne
roll
mov
mov
xor
adc
push
cmc
adc
xchg
dec
scas
mov
das
dec
inc
xor
xchg
xchg
pop
xor
loopne
push
mov
shrb
dec
pop
cmp
out
adc
xchg
pop
jnp
jmp
pop
add
insb
add
sahf
jnp
mov
sarb
cs
inc
mov
mov
cli
jae
or
cwtl
adc
sbb
sahf
push
mov
xchg
repz
cwtl
fldenv
xor
jg
and
inc
mov
push
mov
xor
test
sbb
mov
jl
lcall
jns
sahf
ds
lahf
and
notb
pop
cmp
jne
or
mov
pop
xchg
and
das
dec
mov
mov
fists
inc
inc
lds
scas
push
cmp
mov
std
mov
cwtl
cltd
cmp
test
pop
jnp
pop
mov
in
inc
cwtl
add
fldl
std
add
adc
movb
test
sbb
push
stos
xchg
pop
js
sti
outsl
add
icebp
pop
lds
mov
insb
mov
fst
cmc
mov
cli
es
mov
xchg
inc
add
lods
sbb
out
mov
stos
mov
xchg
sbb
ss
lahf
cmp
call
dec
xor
mov
dec
pop
sbb
xchg
mov
sub
daa
scas
rorl
nop
dec
shlb
lods
sahf
cld
pushf
jns
push
stos
xchg
add
lods
xor
mov
inc
lret
je
push
cmp
inc
ja
lahf
sbb
jb
xlat
cmp
enter
sbb
insb
xchg
xor
jb
push
sub
lahf
cmc
js
xchg
data16
sahf
inc
sbb
out
lahf
cmp
test
cmc
inc
dec
pop
fnstsw
mov
in
or
push
lcall
pop
push
rorb
pushf
pop
sub
inc
adc
xchg
and
inc
fcomps
pusha
aaa
inc
sub
xor
leave
pop
stos
out
into
in
hlt
cmp
xor
loopne
adc
sub
sahf
xor
insl
ja
adc
loope
xchg
rol
sbb
or
dec
mov
jmp
cmp
int3
dec
pop
inc
xor
or
xchg
push
or
mov
dec
inc
add
std
ret
mov
jle
inc
std
xor
pushf
test
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
in
mov
mov
inc
or
pushf
mov
or
push
leave
jecxz
repz
inc
mov
sub
cli
cmp
clc
pop
leave
lods
mov
outsb
xchg
xlat
popf
or
js
lret
inc
mov
push
lds
int3
mov
mov
in
rorl
mov
mov
hlt
mov
andl
inc
lret
lcall
pusha
leave
sbb
push
adc
pxor
sbb
loope
mov
mov
je
mov
ror
xchg
repnz
fcomp
or
scas
mov
leave
popf
jl
xlat
aam
lods
cmp
imul
jmp
dec
loope
mov
mov
add
cld
andb
mov
fisubrs
cmp
pop
cmp
shll
push
aas
mov
cmp
push
adc
in
out
xchg
or
sub
lcall
aaa
dec
rorl
into
je
dec
push
inc
mov
cmpsl
fistpll
dec
pop
nop
fidivrs
inc
lds
jbe
jnp
popa
pop
sti
lods
jmp
or
pop
pop
into
push
jnp
sub
aad
or
push
mov
pop
pop
pop
ss
xchg
adc
mov
pop
dec
shll
loop
imul
mov
ja
pop
sbb
xor
and
js
fdivs
sub
insl
andb
adc
sarl
ss
or
push
sub
pop
xchg
in
rcrl
and
dec
cmp
adc
js
and
imul
fsubs
push
cmp
mov
enter
sbb
mov
jae
fcmovbe
mov
into
cmp
push
into
pop
stc
popa
sub
sahf
inc
je
mov
jns
push
xchg
fadds
xchg
sahf
into
jae
leave
pop
lods
mov
hlt
call
mov
subb
rcll
sbb
dec
aaa
out
mov
sbb
pop
push
xorb
fdivrl
inc
cmp
scas
xchg
mov
and
mov
and
hlt
sub
cmp
pop
out
adc
or
push
cmpsl
rclb
es
dec
jno
unpckhps
push
xchg
test
fdivrl
movsl
aad
nopl
and
cmpsb
arpl
inc
scas
sbb
jae
lret
fldenv
push
adc
fisttps
lret
mov
into
mov
insl
add
je
jecxz
lahf
ss
cmp
and
pop
sub
aam
jl
add
xchg
int3
inc
mov
xor
pop
adc
mov
insl
orl
mov
jmp
pop
repnz
jl
xchg
shll
push
gs
pop
in
mov
lea
test
mov
mov
mov
dec
fdivrl
jmp
dec
sub
cmp
push
cld
pop
add
inc
mov
aad
mov
push
cmp
xor
test
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
push
fs
aad
adc
adc
adc
inc
jmp
lahf
lret
push
out
xchg
jbe
lds
imul
leave
xor
mov
mov
pop
addr16
and
add
mov
xchg
dec
and
cmp
and
xchg
movsb
insb
cwtl
mov
jae
or
xor
push
mov
sbb
inc
out
and
icebp
in
push
adc
mov
adc
and
sbb
andb
and
int3
outsb
repnz
inc
subb
mov
scas
push
push
mov
mov
fidivl
into
add
fbstp
mov
xor
filds
pop
cld
in
loope
xchg
mov
sub
loope
push
ljmp
xor
test
cli
int
in
fbld
stc
add
mov
inc
imull
bound
inc
aad
adc
add
cli
mov
or
push
jno
fsubs
scas
cmp
js
les
roll
aaa
into
in
stc
mov
xor
fstpl
roll
jno
enter
dec
enter
xor
cltd
add
adc
das
lret
arpl
pop
jne
popf
cli
adc
cld
jbe
lahf
pop
jp
orb
mov
adc
push
adc
std
adc
outsl
dec
fsubrs
pusha
shrl
outsb
loop
inc
push
jae
mov
push
mov
mov
stc
mov
icebp
jle
mov
cld
fs
movl
and
arpl
mov
out
shlb
into
inc
and
lcall
adc
mov
jno
pop
xchg
lods
arpl
out
dec
and
ret
adc
push
cmp
ficompl
fcompl
mov
mov
shlb
lods
cmp
mov
xchg
mov
dec
stos
je
pop
jb
das
fnstenv
lret
push
xchg
cli
jge
aad
arpl
mov
xor
dec
popa
in
call
xor
dec
push
sbb
cltd
inc
cmc
push
inc
or
lcall
xchg
ret
mov
pop
push
jge
inc
notl
stos
add
xor
mov
mov
fcomip
lret
js
cmp
or
jle
mov
add
pop
mov
or
lcall
mov
push
fiadds
inc
test
push
hlt
push
push
inc
lods
cmp
adc
add
out
add
out
mov
hlt
mov
add
in
jb
lcall
lds
xorl
leave
sub
mov
fs
cmp
testb
pop
dec
cmp
xchg
jo
sbb
call
out
es
cmp
mov
fs
mov
jmp
fisubrs
loopne
pop
icebp
push
mov
push
xchg
pop
stc
mov
pop
sub
xor
mov
inc
negb
ret
mov
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
jae
lods
add
adc
xchg
movlps
dec
pop
push
xor
fs
mov
or
push
hlt
jne
in
mov
dec
movsb
lea
mov
add
push
test
lcall
inc
aas
ret
outsl
sbb
fsts
lock
in
pop
sbb
mov
cmp
or
cmp
test
gs
shr
inc
and
mov
cli
xchg
aas
popa
and
jmp
and
inc
dec
cmc
mov
cmp
sti
mov
xchg
sbb
mov
jp
mov
xor
rol
pop
sti
in
fdivrs
push
mov
lea
cwtl
jae
es
xchg
push
pop
daa
repnz
aas
jne
pop
lods
sub
sbbl
jo
or
mov
xlat
push
and
cmpsb
jnp
jecxz
lret
xor
pop
pusha
aad
fsubrl
push
fisubrs
inc
inc
bound
inc
pop
popa
inc
cmp
dec
lea
jae
test
stos
cmp
jne
pop
add
mov
push
cwtl
mov
jge
sti
cld
mov
loopne
sbb
lcall
or
push
scas
inc
mov
ffree
imul
jo
shll
imul
icebp
jl
in
mov
pop
inc
outsl
mov
ljmp
adcb
inc
testb
push
push
in
push
loope
mov
xchg
sbb
dec
sbb
loope
mov
mov
shl
mov
fldpi
pop
or
pop
sub
sub
pushf
negl
shll
and
push
jns
adc
outsl
push
cwtl
mov
mov
scas
scas
push
fcomps
sbb
push
in
roll
or
popa
scas
sub
ds
out
cli
jg
add
jbe
mov
cmp
rcrb
fildll
push
jne
xchg
fs
jecxz
leave
xor
in
pop
clc
dec
mov
pusha
or
out
lcall
aas
pop
mov
nop
call
stos
pop
leave
testb
push
sub
enter
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
or
adc
push
ljmp
jae
lods
sti
jmp
xor
xchg
out
cmp
push
adc
test
jbe
inc
xchg
jmp
dec
push
lret
jae
lea
bound
cmp
push
loop
out
cmp
pop
pop
dec
push
dec
mov
fwait
pop
out
sti
sbb
push
into
leave
aam
shld
icebp
mov
cmc
fs
pop
cmpsb
pusha
mov
int
pop
adc
insl
add
sti
inc
xor
repz
lcall
dec
dec
dec
cmp
inc
hlt
add
in
xor
cmp
inc
inc
inc
dec
xchg
dec
insl
pop
imul
xorl
arpl
into
ljmp
and
push
add
stos
mov
subb
bound
xor
and
mov
sbb
and
and
mov
mov
inc
mov
into
bound
insb
mov
adc
addr16
jnp
rcl
int3
sbb
or
xchg
andl
in
clc
imul
pop
mov
pop
add
in
mov
and
dec
mov
or
lds
es
xchg
mov
mov
dec
inc
icebp
stc
sub
or
pop
cmp
dec
adc
sub
scas
xchg
adc
in
out
sub
jl
jb
pop
add
xchg
mov
ja
mov
inc
dec
push
inc
add
dec
jge
or
pop
pop
jbe
inc
mov
pushf
iret
sub
out
push
jmp
add
in
xor
pop
andb
loop
cmp
iret
xchg
push
ljmp
mov
dec
aaa
or
lds
loopne
in
fstpt
hlt
add
lahf
and
jmp
pop
adc
jge
mov
xor
loopne
outsl
and
arpl
in
pop
dec
sub
mov
ret
or
dec
xor
or
push
inc
pop
sbb
outsb
pop
push
xchg
push
adc
mov
sbb
dec
and
jns
jl
lcall
jl
cmpsb
mov
lods
and
test
pop
jmp
sub
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
xor
adc
xchg
movlps
push
fcomi
pop
out
push
dec
or
adc
push
icebp
mov
jbe
jbe
xor
sub
lret
xor
imul
cli
lret
mov
daa
inc
mov
in
aad
fildl
mov
inc
ja
lahf
cli
ss
das
xor
adc
fmul
sahf
rol
adc
add
and
loop
and
loopne
imul
sub
lahf
pop
push
pop
aaa
xchg
fsubs
mov
rcrl
xchg
rcr
jb
mov
pop
loope
xchg
cmp
pop
mov
sub
jns
add
or
push
sub
add
jg
aaa
es
xchg
lods
inc
xchg
and
shl
lret
xor
lock
ja
fcoms
rcr
sbb
add
loop
or
jb
add
jns
addl
push
dec
cld
cltd
mov
jecxz
mov
adc
add
mov
dec
cltd
xchg
pop
aas
jg
testb
fs
popf
sub
pop
xchg
dec
mov
mov
pop
xor
fldcw
pop
jp
iret
aas
iret
out
shll
out
hlt
arpl
stos
inc
and
cmp
sbb
cli
hlt
cli
dec
lea
xchg
adc
es
in
sbb
mov
shlb
addb
bnd
pop
adc
cmp
mov
fcomps
stc
mov
outsb
dec
dec
insb
mov
lods
xor
fimuls
std
jge
pop
mov
sahf
mov
mov
aad
and
or
negb
daa
xchg
sub
xor
xor
loope
fwait
adc
push
jg
or
dec
jle
roll
loop
mov
cmpsb
in
mov
loop
sbb
xlat
sbb
out
jl
mov
jge
clc
dec
aam
adc
insl
in
push
repnz
test
sub
rcrb
faddl
sti
orl
mov
jb
push
popa
jbe
mov
mov
jmp
pushf
xor
pop
jg
mov
mov
sub
jg
decl
gs
dec
fsubrl
rorb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
fdivl
adc
xchg
movlps
cmp
das
popf
cmpsl
orb
sarl
dec
ficoml
mov
mov
aam
push
into
mov
xor
sahf
pop
outsl
cli
xchg
mov
fbstp
or
sbb
mov
push
inc
or
test
sub
int
rcrb
push
cmp
lret
and
cld
fistl
lret
cmp
jge
fstl
push
jnp
hlt
lret
jbe
lret
lods
ret
xlat
or
or
fs
pop
adc
in
dec
sub
cmpsb
sbb
cmpsb
lods
sahf
std
add
mov
pusha
add
add
jne
or
mov
xchg
lret
mov
cmp
rcrb
xchg
sub
out
icebp
xor
lds
rcrb
out
push
cmc
into
push
jge
xchg
xlat
mov
fdivl
arpl
sbb
cmp
add
push
or
sti
loopne
movsl
in
cmc
sbb
mov
cmp
mov
int3
ds
push
pop
push
lcall
sti
push
cwtl
push
mov
test
pop
push
lret
cmp
xchg
sbb
mov
hlt
outsb
ret
lret
xor
sbb
xchg
test
mov
lahf
pop
lret
dec
adc
sahf
xor
sbb
push
and
pop
push
sbb
jge
bswap
aaa
movsb
outsl
cli
dec
iret
sbb
leave
mov
or
es
pop
out
jge
repnz
dec
cmpl
es
adc
adc
shlb
popa
add
popf
aam
mov
push
jmp
push
out
inc
mov
xchg
inc
jecxz
sbb
rolb
pop
xor
jne
rclb
inc
pop
cltd
shrb
cmp
aam
sub
aad
fistpll
adc
cltd
and
adc
lods
hlt
cmp
jg
dec
or
aam
mov
xchg
sbb
push
cmp
push
add
sbb
or
dec
enter
dec
jbe
add
or
adc
push
cwtl
insb
pop
out
mov
aas
cmp
je
mov
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
pop
sub
sbb
leave
add
xchg
and
push
push
ljmp
repz
rcr
arpl
jge
aaa
mov
mov
outsl
arpl
int3
test
and
dec
ljmp
cltd
pop
pop
imul
mov
dec
adc
cmp
push
lahf
jp
sbb
pop
sbb
lds
add
add
sbb
insl
in
mov
lahf
add
jl
jmp
popf
aaa
add
cwtl
lcall
xor
test
pushf
leave
push
in
xor
daa
push
add
and
adcl
int3
mov
pop
dec
and
adc
push
fbstp
pusha
int
sbb
mov
dec
icebp
int3
loopew
jb
aaa
mov
cmp
out
lds
pop
mov
lcall
push
inc
xchg
fdivrl
int3
or
push
mov
movsl
cltd
xchg
pushf
lahf
dec
gs
inc
sbb
ja
in
sar
and
hlt
scas
push
lods
out
roll
xchg
or
lods
xchg
pop
mov
lea
push
and
int
cli
rcll
cs
add
jle
cmp
daa
ljmp
push
mov
pop
mov
pop
sub
cmp
lret
test
dec
lahf
push
roll
test
cmp
pop
imul
lea
xchg
sbb
pop
adc
imul
clc
in
inc
xchg
in
add
out
mov
outsb
repz
pop
lods
sub
mov
dec
cmpl
inc
fsubrl
fwait
sub
jl
loope
in
or
nop
stc
repz
pop
movsb
cs
sub
loop,pt
mov
data16
es
arpl
cli
xor
das
sub
stos
lcall
ja
fcmovne
sub
mov
clc
cmp
mov
nop
mov
and
dec
rcll
addr16
rolb
inc
repz
and
lret
pusha
inc
outsb
or
pop
loopne
stc
stos
jmp
inc
xor
jne
div
into
and
loopne
stos
popa
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
and
adc
sbb
inc
mov
iret
sub
add
xchg
mov
dec
std
xchg
xor
mov
xchg
mov
idivb
scas
enter
sti
ds
cmpb
les
popa
pop
pop
cmp
or
inc
call
mov
rorb
mov
or
pushf
aaa
jle
sub
mov
dec
push
subb
dec
sarb
addr16
pushf
sub
mov
pushf
sbb
mov
int3
mov
sub
shr
int
pop
in
add
mov
ljmp
mov
push
in
add
push
scas
dec
inc
imul
into
shlb
xchg
sub
pop
pop
fcmovbe
ja
push
push
mov
lods
std
pop
xor
js
loopne
daa
in
jecxz
push
dec
addl
orb
jl
xor
cmc
xchg
fcmovne
syscall
int3
imul
xorb
fnstenv
out
in
subb
xchg
sti
push
mov
jg
stc
jge
mov
and
pop
mov
mov
es
or
mov
mov
jmp
lret
clc
sbb
fistpll
je
test
inc
out
testl
sbb
jae
xchg
cmpsl
aam
push
jl
ss
lret
rolb
sti
ret
mov
scas
enter
loop
repz
sbb
or
xor
hlt
adc
stc
mov
fiaddl
mov
lea
and
xor
cmp
push
cmp
lock
sahf
fdivr
push
push
sub
pushl
cmpsl
add
mov
stos
subb
cmp
insb
inc
adc
dec
add
jge
cli
push
pushf
std
stos
cs
xchg
shlb
sahf
lea
orl
xor
mov
sub
ret
push
ja
call
or
jecxz
pop
push
sub
fstp
sahf
adc
mov
cmpsl
arpl
in
mov
fwait
inc
or
arpl
adcb
jle
jnp
dec
xor
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
dec
mov
add
adc
jle
push
stos
push
aas
psrld
imul
loope
imul
fnstcw
push
les
jle
test
or
lret
adc
push
sbb
lods
sbb
push
pop
dec
cmp
ret
loop
insl
out
sub
stos
jno
lahf
xchg
mov
mov
xor
adc
sahf
mov
pop
pushf
xor
outsb
mov
out
add
jne
jb
aas
popa
dec
ljmp
out
mov
xchg
and
mov
sbb
mov
push
pop
and
xor
imul
test
xchg
mov
pop
lret
mov
fiadds
push
gs
lcall
rolb
stos
lea
sub
jno
in
push
mov
aad
out
xor
nop
push
mov
movsb
cltd
mov
lea
lods
nop
and
outsb
dec
testb
negl
add
xor
push
cli
push
sbb
sub
daa
in
mov
jge
stos
andl
xchg
mov
mov
xchg
pop
pop
pusha
subb
xor
daa
and
mov
in
mov
pop
ret
jl
stos
sbb
mov
leave
or
mov
movsb
jecxz
enter
mov
stc
sbb
cmp
push
cmp
cmp
ret
cmp
in
push
adc
testl
cli
xchg
fstp
cmp
add
sub
jne
sub
xchg
ss
mov
fs
mov
sub
shlb
inc
pop
cli
xor
sub
cmp
in
ret
mov
dec
loop
aam
mov
sub
jne
lea
inc
out
mov
mov
es
mov
scas
imul
add
dec
fcoml
push
sub
cmp
cmp
outsb
out
clc
stos
push
lods
mov
and
jnp
jbe
pop
sbb
xchg
andb
mov
push
stos
test
loop
fcomi
imul
xchg
clc
mov
fadds
dec
sbb
push
dec
jbe
pop
mov
loopne
aad
mov
push
jle
pop
xchg
pop
pop
xchg
jae
lret
enter
mov
pop
xor
aas
push
inc
push
lret
fdiv
xchg
dec
test
sub
dec
adc
xor
sbb
adc
dec
cmpsb
test
push
push
jl
lcall
addr16
imul
push
cmpsl
nop
or
push
fsubrl
jg
fisttpl
ret
cltd
inc
imul
insb
pop
imul
xchg
jl
mov
pop
adc
mov
mov
push
imul
loopne
cld
and
or
fimull
shll
fmulp
cs
add
jg
and
xlat
sbb
popa
nop
add
xor
outsl
push
in
xlat
rol
or
push
push
mov
inc
jecxz
xor
add
mov
push
clc
outsl
test
popa
sub
xchg
cmpsb
js
fimull
mov
xor
shll
jbe
bound
mov
jle
repnz
sub
or
inc
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
jno
mov
add
adc
xlat
outsl
push
ljmp
mov
jbe
in
inc
nop
mov
xlat
rorb
jg
push
shlb
or
mov
ss
jo
fsubrl
out
es
lret
jo
xchg
in
add
xor
ficoml
fnstcw
mov
push
xchg
sub
jbe
test
pop
xchg
sub
mov
call
imul
dec
push
movsl
pop
cmpsb
xchg
subl
fsub
sbb
mov
inc
pop
mov
and
fmuls
push
push
ret
sbb
xor
sub
adc
sub
cmp
jno
inc
adc
std
sub
add
mov
push
nop
in
mov
and
pop
sub
sbbb
adc
mov
lcall
push
fsts
jmp
or
loop
mov
test
mov
enter
and
fsubl
dec
xor
repz
sbb
sbb
shrb
in
jg
imulb
fidivl
adc
jno
sub
inc
and
test
sbb
stos
imul
adc
imul
dec
fidivs
mov
ds
mov
pop
adc
and
pop
sub
jo
or
push
cs
push
fcmovbe
insl
jno,pt
push
lea
dec
test
xchg
stc
push
nop
push
push
push
stos
push
in
into
adc
add
cmp
ss
aam
fisttps
aam
mov
add
loop
inc
xor
aaa
call
mov
rorl
ret
cmp
sub
out
jb
xchg
dec
daa
hlt
sbb
adc
popf
je
call
daa
lds
fs
jmp
enter
xchg
dec
jmp
in
stos
repnz
ficompl
dec
jecxz,pt
or
or
test
test
pop
out
fmuls
cmp
mov
xor
scas
test
jmp
mov
mov
xchg
dec
mov
xchg
out
xchg
out
icebp
sbbb
jp
sub
fidivs
pop
aam
fidivrs
xor
test
popl
daa
or
pop
stos
xchg
mov
cwtl
sub
cmp
cs
pusha
das
xor
faddl
es
ja
push
test
mov
fstps
scas
pop
sbb
pop
cld
mov
cld
movb
das
test
xchg
jae
lea
test
mov
ficoml
and
cld
sub
call
pop
mov
outsl
push
fs
insb
mov
mov
setge
add
push
jne
divl
out
pop
adc
aam
ficoms
addr16
scas
ret
xchg
mov
cmc
xchg
or
xchg
ljmp
dec
mov
les
fists
jbe
jecxz
js
dec
out
out
adc
xchg
sbb
jbe
idivl
loopne
in
fsubp
push
add
leave
add
push
xchg
pushf
mov
pop
push
or
mov
cmc
pop
and
cmpsb
fidivrs
cmp
outsb
pop
dec
fst
jp
repnz
pushf
scas
push
daa
sub
shr
dec
cmpl
out
inc
fwait
icebp
shll
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
adc
adc
add
adc
sbb
call
lods
insb
jp
add
outsb
notl
mov
xor
jae
jo
jge
adc
lock
mov
cld
imul
dec
add
test
nop
inc
mov
addl
pusha
and
sub
mov
lea
jns
pop
pusha
xchg
enter
arpl
inc
out
xor
pop
movsl
dec
cwtl
mov
adc
and
dec
cmp
pushf
incl
adc
test
mov
std
add
rolb
out
insl
pop
xor
cmc
pop
aad
loope
incb
aam
sti
sahf
stos
sbb
jne
shlb
xchg
je
xchg
fildll
outsl
mov
imul
sub
push
xor
mov
push
and
sbb
jg
inc
test
inc
or
pop
mov
push
xor
imul
dec
aas
jne
xor
stos
or
xor
sub
or
mov
out
lea
pop
push
shr
xor
xor
out
popa
les
mov
mov
fcmovnb
dec
mov
pop
mov
xor
pushf
dec
mov
cmp
jne
add
dec
roll
notb
sbb
in
iret
sub
and
pop
mov
cmpsb
popa
dec
mov
fs
fwait
mov
push
nop
cmp
pop
lods
pusha
inc
xor
adc
push
push
out
ds
xchg
leave
pop
popa
fs
cld
xchg
outsb
orb
scas
push
pop
in
mov
cltd
pop
and
sub
call
out
mov
test
cwtl
mov
mov
mov
mov
fcomp
cld
in
mov
and
test
test
daa
or
jmp
fisttpll
mov
push
xor
sbb
negb
mov
adc
fidivl
pop
xor
movsl
bound
ss
test
mov
add
or
inc
pop
mov
mov
imul
xor
rorl
fldl
jbe
lds
xor
jg
rcr
xchg
jle
sahf
aaa
fs
push
fstpt
inc
xor
pop
adc
lods
mov
pop
ret
push
decb
and
ljmp
jb
mov
cmp
call
pop
adc
out
inc
mov
push
jne
fs
test
pop
subb
mov
inc
filds
jl
ret
push
sahf
jl
push
hlt
or
and
das
mov
sbb
es
jmp
pop
inc
das
out
call
out
insl
jle
adc
lahf
dec
addb
aas
xor
jb
lods
pop
inc
aas
mov
push
xchg
mov
ss
enter
push
jge
dec
and
inc
or
les
and
jp
xchg
sti
test
mov
dec
cwtl
mov
cld
fldt
outsb
out
mov
int3
push
jecxz
outsl
cmp
cltd
xor
xor
mov
cltd
push
xor
sbb
call
xor
push
xchg
dec
sti
inc
test
std
cmp
cwtl
aaa
jb
inc
mov
lock
cwtl
incl
mov
es
or
inc
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
stos
shll
jne
adc
nop
out
lods
loop
rorb
add
xor
aas
xor
scas
mov
fst
outsl
sub
lods
push
xor
xor
leave
mov
mov
inc
mov
sub
push
inc
adcb
dec
outsl
sbb
mov
stos
pop
out
cli
push
cmp
xchg
pop
or
push
jb
fs
inc
test
or
mov
add
out
sarl
aam
sbb
jb
sbb
add
in
cmp
or
out
daa
pop
in
mov
pop
sbb
and
cwtl
fsubp
jge
sbb
in
xor
fisubrl
inc
insl
insl
dec
cld
movsl
jb
or
push
imull
mov
es
mov
xor
nop
sahf
mov
mov
push
popa
std
inc
les
mov
sbb
lret
ret
cli
ds
and
test
push
fstpl
pushf
fs
xchg
int3
dec
negb
imul
jmp
pop
and
xchg
mov
imulb
inc
xlat
leave
loope
inc
add
sahf
pop
mov
add
mov
mov
adc
push
int3
sti
outsb
fsubs
sbb
and
jmp
insl
pop
mov
or
repnz
lret
xlat
dec
int3
add
add
nop
cltd
sbb
push
xchg
loope
and
inc
cmc
mov
sub
bound
jbe
or
addb
insl
es
insb
mov
in
ficoml
arpl
and
pop
mov
aad
fdivr
lods
fmull
leave
cmp
insb
dec
pop
addr16
pop
movsl
scas
sti
jmp
enter
ja
adc
enter
add
push
pop
push
ret
pop
sbb
jnp
add
mov
bound
pop
ss
inc
cmp
mov
mov
and
cli
int
jge
pop
sub
mov
sbb
cmpsb
adc
pop
or
dec
push
mov
sub
int3
mov
or
es
shlb
stos
ss
loope
push
push
mov
movsb
dec
inc
stc
into
pop
cs
fs
or
scas
xchg
mov
cmp
pop
aas
lds
pop
aad
jmp
iret
insb
sbb
pop
aaa
ja
lods
or
xchg
inc
inc
push
mov
jnp
or
add
je
sub
mov
push
or
sahf
and
xlat
mov
add
mov
sbb
push
aas
clc
inc
pop
adc
cmp
clc
push
add
aaa
stos
std
sub
imul
cmpsb
xchg
leave
xchg
mov
jecxz
xor
xlat
jbe
fcompl
loope
xlat
dec
xor
std
sub
daa
push
xchg
jge
ja
adc
jmp
sub
mov
jmp
xor
jae
pop
cmp
aaa
mov
add
das
or
push
cmp
xchg
stos
cmpsl
std
add
push
std
mov
jb
int
ljmp
xor
loope
push
mov
pusha
repz
inc
cmp
fcmovb
mov
mov
push
sbb
sub
or
xor
and
inc
bswap
test
lds
in
jecxz
cmp
and
inc
ljmp
mov
mov
push
pop
add
inc
and
out
mov
clc
push
xor
or
add
jecxz
shlb
dec
jg
stos
int3
sbb
movsb
inc
mov
dec
adc
js
dec
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
push
ffreep
mov
jne
adc
fsubrs
inc
sub
jbe
or
les
adc
sahf
mov
cli
ss
sbb
jmp
dec
mov
jno
sti
ja
movsb
ljmp
outsl
and
sub
sbbb
jo
addr16
fwait
leave
dec
cli
mov
daa
jae
pop
inc
sub
les
inc
pop
cmp
sbb
mov
aad
cli
out
loope
test
add
dec
es
add
pop
inc
imul
xchg
loopne
sub
subl
mov
add
push
ret
or
sub
jecxz
je
or
ja
mov
gs
ljmp
push
in
dec
jge
fs
ds
add
mov
push
andl
cmpb
in
mov
mov
sbb
arpl
fnsave
mov
hlt
mov
jge
mov
lea
pop
repz
aad
inc
mov
xor
xchg
and
leave
jmp
xchg
int
cmp
sti
adc
xor
sbb
imul
cltd
es
push
pop
or
pop
popf
cmp
popf
xor
adc
dec
in
int3
je
cwtl
add
out
jecxz
mov
push
test
insl
test
jbe
and
jmp
enter
pop
sarb
cmp
enter
outsb
cld
bound
fsubs
aad
cmc
or
adc
movsb
mov
or
cpuid
xor
mov
inc
subb
mov
mov
mov
lcall
cltd
jbe
sbb
rclb
popf
sub
sarl
mov
les
xor
push
ret
adc
or
cmp
push
sbb
arpl
sti
cmp
add
add
push
cmc
mov
icebp
add
or
nop
and
pop
cmpsb
mov
inc
inc
pop
je
out
and
and
pop
sub
insl
mov
loopne
inc
xchg
pop
pop
inc
dec
call
imul
mov
cmpsl
data16
pop
in
imul
scas
xchg
mov
dec
inc
jecxz
loopne
loopne
mov
add
adc
leave
mov
or
pop
add
dec
sub
mov
aaa
push
das
mov
cmp
mov
outsb
addl
in
and
xchg
leave
cltd
dec
mov
lods
mov
lock
mov
lret
pop
mov
test
mov
adcl
jle
fidivrs
jg
cltd
sub
or
ds
test
sti
dec
testl
movsb
adc
aam
in
inc
push
es
dec
lds
push
xor
push
adc
add
mov
push
jle
and
arpl
aaa
jl
inc
andl
mov
andw
addr16
mov
adc
fdivrl
or
cmpsl
ss
lahf
mov
pusha
mov
rorb
pusha
sbb
cmp
adc
inc
fdivp
jmp
pop
notb
add
insl
fdivrl
fnstcw
or
mov
aam
push
cmc
shr
jne
mov
push
bnd
push
mov
sahf
jmp
jmp
scas
mov
push
jno
enter
mov
mov
call
add
mov
adc
inc
xchg
arpl
addl
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
dec
icebp
stos
orl
adc
jmp
sbb
bound
sub
test
add
data16
cwtl
cmp
sbb
shll
jno
std
push
cmp
xor
je
or
out
mov
loop
rcrl
push
push
aam
xor
dec
mov
push
dec
and
and
in
push
jbe
dec
sub
pushf
pop
push
pop
mov
stos
fs
mov
stos
test
pop
push
xchg
cmpsl
mov
lret
mov
sub
dec
rcrl
rcll
repnz
lods
cmp
sbb
mov
add
data16
inc
sarl
jl
pop
push
jo
pop
cwtl
lcall
fsubr
repz
push
add
dec
imul
ss
mov
repz
notl
into
pusha
inc
jp
and
test
sbb
in
in
ret
jmp
lcall
mov
pop
sbb
jmp
call
bound
pop
ja
cpuid
popa
mov
out
cltd
jns
into
imul
movsl
into
loope
loop
push
inc
jnp
std
sub
mov
bound
cmp
jecxz
jb
xor
cli
add
adc
popa
out
cmpb
movb
pop
pop
into
add
sbb
in
bound
push
gs
push
dec
ds
lods
lods
dec
push
add
imul
test
xor
into
mov
jp
jmp
out
dec
push
rcrb
arpl
push
jae
jge
leave
push
sbb
pop
jecxz
test
aam
repz
std
lahf
cmp
imul
jmp
mov
or
dec
jae
fs
push
enter
mul
cmp
incb
xchg
nop
pushf
filds
add
mov
mov
test
fs
fstl
mov
jns
popa
ss
lret
repnz
adc
sarl
fstps
jp
test
mov
sti
pushf
repnz
out
jle
cltd
or
push
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
pushf
sti
jle
xchg
adc
movlps
pop
ds
imull
adc
mov
inc
lret
push
adc
add
fwait
pop
push
lcall
fbld
dec
out
insl
pop
imul
or
inc
push
pop
add
rorb
addr16
shll
pop
int
scas
subb
fimuls
add
pop
sbb
inc
inc
imul
jne
das
xor
scas
ja
sbb
push
push
mov
add
std
push
mov
lret
arpl
xchg
jp
fisubrl
or
in
jg
push
push
call
and
clc
shll
or
jl
rol
nop
sbb
imul
rolb
sete
xchg
leave
lret
ds
mov
adc
push
hlt
les
jecxz
dec
data16
loope
mov
insl
arpl
xchg
mov
jg
rolb
mov
adc
cmp
call
lds
jae
cmc
shlb
stos
stos
jl
mov
sbb
pop
decb
mov
sti
lea
add
nop
ret
xor
ret
push
fisttpl
inc
cmp
jo
jg
test
jnp
mov
sbb
mov
sbb
icebp
pop
stos
int3
cmp
imul
xchg
jnp
xchg
nop
or
lret
pop
fldcw
adc
add
sbb
insb
mov
rcrb
sub
cmc
sub
fdivrl
mov
add
das
pushf
mov
lock
into
adc
bound
mov
pop
add
cmp
in
sti
data16
pop
cmp
mov
inc
push
jp
js
out
sbb
int
cwtl
nop
outsb
nop
dec
lret
xor
psubb
sarb
cli
add
in
dec
scas
iret
mov
mov
xchg
pop
idiv
je
cwtl
popa
sub
lods
jle
add
mov
adc
daa
push
cmc
jg
shll
sub
jns
sub
pop
scas
mov
out
ficoms
in
rcrb
rorl
lret
push
lods
lret
push
mov
insl
cmc
sbb
cmp
xor
push
and
mov
mov
dec
push
shrl
lods
sub
mov
pop
fildl
leave
mov
mov
rcrb
movsb
mov
add
mov
add
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
int
stos
sub
adc
decb
adc
jo
lods
sbb
js
xor
in
daa
sub
scas
in
pop
jecxz
sarl
out
mov
adc
push
ja
push
notl
dec
repnz
mov
call
les
out
or
jmp
out
out
in
sbb
gs
mov
inc
pusha
lods
pop
cmp
or
outsl
ja
cli
repnz
fadd
cmc
add
cli
into
or
cmpsl
es
add
xor
cld
out
hlt
stc
jae
lcall
cld
xor
jb
pushf
pop
and
repnz
sub
rcll
jge
adc
cmp
ret
cmp
jmp
mov
popa
cmp
loope
or
push
in
sbb
cmp
jle
inc
adc
pop
mov
fcoms
jbe
inc
mov
rolb
pop
je
std
call
xchg
test
into
cld
xchg
xor
scas
daa
sahf
loop
imul
xlat
rcrl
pusha
mov
cmpsb
cmpsb
not
jmp
mov
mov
inc
mov
hlt
push
dec
adc
rcr
adc
jo
mov
push
fidivl
add
mov
cltd
jle
das
imul
mov
push
insb
jnp
movsl
xchg
scas
push
push
xchg
mov
int
sub
pop
outsb
or
mov
xchg
jnp
into
leave
iret
pusha
mov
daa
test
add
jne
push
dec
push
jmp
sarb
jns
and
xlat
stc
stc
xchg
dec
and
push
inc
ds
xor
inc
or
xchg
or
aas
lock
and
test
push
jae
js
mov
adcb
cli
test
sub
inc
add
jno
clc
std
aad
xchg
adc
pop
xlat
sahf
jbe
push
ljmp
sub
xor
or
daa
es
imul
inc
in
sbb
fcomp
fldl
hlt
sbb
les
cmp
pop
dec
mov
inc
push
xor
inc
mov
out
cmpb
mov
std
ljmp
movsb
pop
lcall
mov
push
sbb
push
xor
mov
insl
lock
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
cmp
jnp
adc
movlps
roll
xchg
dec
sub
pop
cltd
fldl
inc
mov
std
dec
xor
or
push
xor
or
pop
adc
xchg
into
cmp
fiaddl
mov
or
mov
pop
cmp
enter
fnstcw
ljmp
mov
testl
data16
add
aad
mov
mov
inc
push
jge
shrb
stos
bound
push
mov
push
jno
and
mov
faddl
iret
sti
aaa
xorb
data16
jno
aas
insb
or
pushf
fucom
shrl
ja
and
add
loope
sbb
xchg
cmp
sub
jbe
and
test
pusha
cmp
dec
cld
cmp
dec
call
outsb
cmp
jno
std
insl
rcrb
scas
nop
push
xchg
test
cmp
in
mov
jmp
push
das
in
in
cld
xchg
mov
notl
sbb
inc
fs
sbb
mov
popf
notl
dec
mov
push
int3
sbb
jecxz
xor
loop
push
mov
mov
pushf
mov
int3
add
cwtl
call
push
mov
dec
mov
pusha
mov
in
mov
scas
cmp
xor
or
fs
jmp
mov
sbb
mov
xchg
pusha
add
aam
xchg
xchg
dec
subl
pop
xor
cmp
adc
dec
movsb
cmp
bound
rolb
jmp
divl
add
sub
scas
sahf
inc
add
movsl
in
aaa
dec
mov
sub
lahf
addl
or
add
jb
orl
fisttps
shll
xor
pop
in
mov
and
clc
lods
mov
test
mov
cmpsb
add
cs
inc
ljmp
mov
sbb
in
repnz
sub
arpl
mov
out
test
js
addb
ss
cs
dec
dec
jle
imul
in
test
lock
inc
add
mov
pop
negl
loopne
inc
xlat
push
imul
and
mov
lods
loope
xlat
je
lret
hlt
mov
jns
test
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
lea
adc
movlps
clc
add
mov
pop
insb
shlb
lret
neg
ds
or
add
stos
out
mov
and
in
push
jae
arpl
mov
decb
push
in
shufps
imul
ja
pop
mov
dec
out
sub
push
cld
sub
dec
adc
aad
mov
sbb
sub
cmpsl
lock
mov
aad
mov
negl
and
rcrb
movsb
lahf
cld
cmc
aaa
sti
loop
imull
lods
loop
pop
mov
repnz
sbb
mov
addr16
adc
pop
mov
insl
lods
cwtl
out
sti
sub
xchg
jmp
ljmp
enter
fwait
lcall
ljmp
inc
scas
cmp
sbb
imul
sti
lcall
pop
pusha
mov
xchg
andb
mov
sbbb
loopne
sti
and
movsw
mov
test
jb
dec
arpl
aam
loopne
ret
jecxz
into
pushf
test
xor
dec
jg
cmpsl
cmp
arpl
cmp
jne
add
popa
xor
cmp
pusha
ja
jmp
int3
aam
jne
xlat
jecxz
ja
xchg
ljmp
inc
xor
and
lea
aad
out
dec
rcll
lock
stos
xchg
jo
hlt
add
jg
loope
das
pop
mov
ja
jb
adc
fbstp
pusha
cmpb
insb
xchg
mov
inc
push
push
cmp
negb
dec
or
xchg
imul
cmp
pop
cmc
jp
leave
mov
inc
shlb
dec
repz
andb
pop
cmc
adc
mov
adc
repnz
add
lds
shlb
movsl
fnsave
add
aam
and
xor
rorb
jns
push
jnp
add
lea
test
jo
pop
push
lea
fistps
jl
xchg
fmull
cld
add
sbb
fcoms
popa
add
ss
sub
mov
and
imul
or
inc
mov
mov
add
in
xchg
aad
nop
jb
push
into
cmp
sbb
adc
xchg
inc
sub
fimull
imul
push
add
push
imul
and
inc
clc
jmp
js
cmc
repz
sub
mov
jne
adc
movlps
mov
sub
loopne
into
push
fisubrl
div
inc
mov
int3
sbb
insb
mov
test
push
mov
adc
fldcw
inc
jp
fnclex
fidivl
aas
jae
xchg
ret
lock
sbb
mov
xor
fidivl
popf
cmp
repnz
add
xchg
mov
mov
andb
push
lret
mov
adc
mov
into
orl
sbb
in
xchg
push
ficoms
or
ds
or
mov
pop
xchg
mov
add
jnp
sub
scas
jg
js
rclb
jns
pop
mov
adc
jae
add
xchg
movsb
sar
or
dec
stos
cmp
imul
ds
adc
pop
fisubl
cli
sbb
movsb
mov
lea
xchg
sbb
bound
jp
cmp
inc
pop
sahf
cmc
pop
mov
repz
push
cmp
idivb
xorl
inc
sub
inc
xor
jge
clc
xor
or
add
mov
jge
xchg
xchg
cwtl
mov
ljmp
stc
mov
and
jb
mov
xchg
aad
ror
mov
xor
cmpxchg
das
push
lods
inc
shll
pop
xor
mov
inc
add
push
push
stc
pop
loopne
ds
dec
jbe
mov
test
or
inc
into
daa
aaa
sub
inc
and
ret
lea
dec
jle
ds
cmp
lret
mov
xor
lods
movsb
ret
pusha
adc
push
mov
xor
sbb
fisttps
aas
movl
jg
xchg
test
mov
dec
aad
add
mov
sub
jle
ret
fdivrl
repnz
inc
adc
inc
inc
daa
mov
scas
pop
dec
mov
mov
push
inc
ja
stos
ror
and
pop
fsts
enter
cmp
ret
mov
or
clc
clc
nop
push
sbb
dec
outsb
imul
cli
pop
imul
cmp
mov
adcl
pop
jb
mov
insb
push
sbb
cmpsb
dec
lret
rorl
push
add
inc
xchg
or
sbb
jecxz
xor
or
mov
mov
mov
pop
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
js
jno
adc
movlps
icebp
mov
fistps
push
daa
pop
aam
scas
movsb
or
or
frstor
pop
lret
jg
cli
lahf
icebp
mov
jnp
dec
push
aad
jecxz
add
xor
add
mov
pop
sbb
add
xchg
ret
dec
lcall
dec
mov
xchg
data16
mov
daa
xor
fdivrs
int3
and
dec
rcrl
jne
bound
push
inc
aad
mov
ror
cld
sbb
cmp
dec
push
xchg
cmovge
bound
cmp
xchg
or
mov
jne
into
jmp
xor
cmpsb
inc
and
maxps
jno
jns
xchg
adc
jmp
les
xor
repnz
into
dec
popa
cmp
addb
mov
sub
sub
int
test
stc
pminsw
in
sbb
ret
mov
pop
pop
sti
pop
and
test
dec
fst
jb
jecxz
lock
testb
fildl
mov
mov
pop
enter
test
xor
mov
and
mov
cmp
xchg
cmc
jae
cmp
mov
sub
push
mov
push
fstps
js
and
arpl
dec
loope
test
mov
ja
and
mov
das
mov
addb
mov
je
or
add
add
les
popa
popa
xlat
idiv
xchg
cmp
cltd
mov
push
in
mov
std
xchg
or
and
xlat
sub
std
js
xchg
data16
orb
lret
mov
pop
or
inc
mov
loopne
mov
mov
dec
xor
jge
dec
jmp
outsl
nop
push
repz
and
shrl
mov
enter
jle,pn
mov
adc
leave
jne
mov
dec
sbb
data16
shll
outsb
jae
fwait
inc
mov
cmp
js
data16
adc
jp
cli
pmulhuw
xor
dec
mov
test
sbb
jb
movsb
ljmp
mov
in
push
mov
inc
mov
rorl
movsl
lcall
sbb
int
sbb
pop
mov
cmp
xchg
js,pt
loopne
clc
dec
lock
lret
jno
cwtl
sti
mov
xor
pop
lret
or
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
and
stos
insb
scas
adc
decb
adc
xor
ret
rolb
aas
icebp
mov
lret
sub
mov
sysexit
call
sub
xchg
push
jl
aad
je
or
aad
lea
mov
dec
or
notl
mov
divl
push
push
lods
int
dec
xchg
xchg
cmpsb
adc
and
xchg
inc
jl
and
jg
cld
lods
movsb
jg
jno
sbb
dec
dec
jmp
and
push
dec
clc
mov
add
push
jae
xchg
dec
incl
movsl
jecxz
rcrw
cmp
or
in
push
cmp
pop
inc
or
cli
clc
inc
add
mov
sbb
icebp
dec
xchg
stos
inc
idivb
rcrb
idivb
push
dec
mov
loop
lock
dec
repz
insl
push
loop
xchg
jle
mov
adc
and
adc
jle
jb
negl
sbb
movsb
xchg
aaa
stos
aas
lock
fstl
je
pop
popf
dec
sti
clc
jp
movsl
movsl
imul
std
push
sub
cmc
push
mov
add
jbe
cmp
or
testb
out
out
inc
sbb
xchg
xchg
push
and
and
js
loope,pt
push
push
sbbl
or
cmp
idivl
lea
repz
push
cmpsl
js
imul
sbb
in
push
lds
sbb
xchg
mov
test
and
aam
jno
jae
push
ljmp
idiv
loope
inc
sub
sub
jns
lret
cld
sub
add
cli
sub
or
movb
xchg
xchg
xlat
push
adc
mov
pop
loopne
sub
jg
and
nop
aad
js
jns
cltd
xor
mov
mov
mov
mov
xlat
push
sbbb
mov
push
xchg
enter
mov
jbe
adc
notb
test
cmp
adc
cmpsb
test
inc
int3
xor
adc
inc
add
cmp
and
push
inc
pop
dec
leave
xor
fimuls
cli
cmp
in
hlt
mov
or
push
jnp
push
cmp
sbb
int
cld
out
insb
xorl
data16
push
shll
repnz
mov
xchg
iret
repnz
pop
pushf
fmul
je
sti
clc
clc
sub
loopne
decl
clc
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
loopne
xchg
decb
adc
daa
out
jno
and
pop
jle
mov
out
pop
faddl
ret
and
xlat
stos
cmpl
xor
cmp
ljmp
std
mov
xlat
fidivrl
mov
das
inc
or
mov
mov
sti
mov
push
aaa
lea
jae
enter
fcoml
push
mov
pushf
push
in
dec
cmp
lds
in
gs
add
leave
push
or
push
nop
xchg
xchg
pushf
pop
fimull
fs
jg
loop
sub
ret
cld
daa
lods
test
mov
aas
add
subb
outsb
call
push
mov
fisubs
ds
out
and
addr16
scas
xchg
xchg
sbb
cwtl
cmpsb
inc
mov
mov
fwait
dec
stc
mov
pop
jp
mov
popf
insl
mov
mov
test
fisubrl
leave
adc
aaa
xchg
ss
leave
cltd
movaps
bound
adc
faddl
xorl
pop
mov
xchg
pop
stc
cli
stos
lds
movsl
sarb
push
jnp
mov
adc
xor
jb
sbb
mov
inc
fucomip
popl
and
mov
pop
cmp
and
mov
repnz
fldl
push
cmp
int3
xor
cmc
test
sbb
sbbb
add
loope
in
ljmp
inc
jg
sar
jae
fucom
dec
fs
movsl
mov
loop
movsb
stos
test
mov
lret
out
loope
mov
mov
inc
movsb
jecxz
inc
gs
cs
inc
ss
sbb
scas
sahf
les
roll
sar
ss
rcrl
shlb
xor
test
adc
scas
adc
mov
scas
dec
fldl
lods
fnstsw
fcomip
push
lcall
jb
jecxz
dec
js
xchg
xchg
pusha
add
loopne
jae
cmp
pop
call
rcll
push
cmpsb
sbb
fsubrp
or
mov
in
sti
add
mov
fisubrs
pop
inc
pop
test
push
dec
call
xor
mov
insb
mov
adc
xor
sbb
cli
mov
mulb
cli
sub
mov
or
xchg
dec
cmp
mov
lret
aad
je
and
and
outsl
ret
loope
jne
mov
xchg
inc
adc
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
dec
in
jle
popa
adc
decb
adc
dec
adc
jmp
std
cs
push
jecxz
lret
test
add
mov
mov
adc
add
xchg
mov
mov
mov
dec
mov
mov
jecxz
sbb
out
aad
xchg
cli
enter
daa
adc
clc
pop
adc
mov
sub
pop
out
shll
outsl
in
or
test
sbb
pop
mov
or
mov
lahf
addr16
insb
fldt
or
out
call
and
fs
inc
and
jae
cmp
sub
stc
adc
or
push
or
mov
fbld
push
arpl
pop
push
notb
push
in
imul
sbb
mov
pop
mov
insl
jne
xchg
inc
jo
mov
mov
fs
xchg
cmp
subb
fnstcw
ret
aam
test
sbb
mov
scas
mov
flds
cmp
sbb
and
repnz
mov
jge
adc
jb
cmp
pop
jge
mov
movsl
sub
inc
ret
inc
xor
sbb
mov
ljmp
imul
push
mul
sahf
outsb
dec
clc
outsb
das
or
sbb
or
push
push
pop
cmp
scas
lcall
or
mov
inc
int
push
pop
movsb
cwtl
xor
pop
into
xchg
xor
imul
lahf
cs
mov
clc
fwait
sti
pop
xchg
outsl
pop
jl
add
push
pushf
pop
sarl
adc
mov
lahf
imul
stos
adc
subl
aam
cmpsb
aas
cltd
cwtl
inc
mov
iret
cltd
addr16
cli
mov
imul
cmp
and
fisubrl
stos
jns
and
int
pop
mov
into
imul
adcl
ret
testb
jns
enter
and
test
andb
push
shlb
mov
sarl
inc
mov
imul
push
test
pop
fnstenv
adc
xor
or
pop
xchg
call
test
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
mov
decb
adc
js
fwait
loopne
push
ljmp
or
aaa
into
dec
aas
jp
push
out
in
xchg
inc
mov
rcrl
mov
sbb
imul
adc
sbb
lcall
or
shll
aad
pop
arpl
mov
mov
xorl
inc
xchg
mov
mov
adc
xchg
cli
sti
and
lret
movsb
cwtl
aas
inc
pop
or
jp
out
xor
pop
shll
mov
adcb
dec
imulb
inc
ret
inc
outsl
pop
mov
mov
jo
aaa
adc
push
ja
faddl
push
mov
nop
repnz
jbe,pt
test
push
jbe
dec
outsl
mov
dec
call
xor
jmp
fs
or
xchg
outsl
pcmpeqb
pop
fidivrl
lahf
js
cltd
pop
jg
ljmp
mov
mov
popf
fwait
inc
pop
popf
aas
push
lret
cmc
and
mov
arpl
pop
negb
sbb
test
and
ja
dec
pushf
jne
xchg
insb
jne
addr16
into
xchg
mov
cmp
lods
mov
sbbb
out
jecxz
inc
aaa
lds
or
pusha
rolb
cltd
xchg
cld
adc
push
mov
cmpsb
and
les
in
stos
push
add
jno
imul
cwtl
mov
lahf
pop
cmp
xchg
jge
push
push
je
repz
and
sub
jecxz
mov
imulb
cmpsb
test
enter
aas
push
or
movsl
je
adc
dec
xchg
imul
mov
adc
jbe
or
mov
lcall
or
jecxz
popl
dec
xor
inc
lds
sbb
das
data16
aam
xchg
xor
rclb
data16
filds
jnp
jl
pop
popf
cli
jne
ror
sti
pop
cmc
xchg
xor
dec
cmp
push
hlt
scas
inc
adc
sbb
sub
repz
shlb
push
mov
shrl
incb
pop
andb
pushf
ds
lods
mov
inc
add
jno
and
cmpsb
nop
sbb
mov
mov
jb
cwtl
sbb
mov
mov
cmp
lret
cli
pop
xchg
loope
dec
decl
cmp
shr
add
add
bt
cmp
jns
ss
inc
push
adc
decb
adc
iret
xor
icebp
xchg
push
adc
sub
mov
xchg
out
int
mov
and
adc
jp
push
insb
test
movsl
shl
das
jnp
jge
fldt
mov
stos
bound
mov
push
in
mov
cmp
icebp
jp
inc
shll
lea
cmp
jnp
and
pop
cli
pushf
test
mov
push
insl
mov
in
jne
repnz
dec
imul
or
and
mov
jmp
incb
push
ret
in
mov
and
bound
stos
ror
mov
cmp
lahf
je
mov
fsubl
or
jnp
push
insb
pop
fmull
data16
mov
xchg
sub
leave
jno
push
push
gs
into
push
lods
push
xor
fwait
jae
or
cwtl
mov
lds
cli
mov
aaa
push
xor
mov
sub
mov
sbb
xor
pusha
push
es
daa
vcvtpd2dqx
pop
clc
add
xchg
imul
lock
notl
xor
fnstenv
mov
inc
pop
xor
mov
je,pn
dec
ret
xchg
dec
mov
fnsetpm(287
movsl
xchg
mov
lea
jg
imul
pop
sub
and
aaa
outsb
stos
xor
jo
jno
sahf
or
push
out
cmpsl
lods
lahf
ja
mov
sbb
js
es
pop
jnp
gs
test
xchg
and
mov
jmp
outsl
inc
pop
jg
jae
popa
std
dec
ret
and
sbb
lcall
enter
add
insl
flds
cmp
fnstcw
aaa
rcrl
and
orl
xlat
std
leavew
das
popf
cmp
js
pop
or
inc
ljmp
enter
push
sbb
inc
xchg
sub
cmp
mov
idiv
out
pusha
icebp
jp
arpl
stos
popa
mov
mov
inc
add
inc
jp
inc
pop
jg
cmp
negl
push
lods
lds
mov
adc
mov
dec
js
repnz
je
pop
icebp
lock
sbb
push
dec
inc
pop
xchg
dec
lret
inc
ja
xor
sbb
je
push
pop
cmp
lock
notb
sarl
sbb
add
insl
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
push
scas
insb
daa
dec
adc
decb
adc
dec
fcmovbe
xor
or
aas
mov
xor
mov
xchg
pop
and
fwait
lods
outsl
cs
mov
or
in
xchg
aad
ret
mov
and
scas
dec
or
adc
cmp
mov
push
pop
cmp
int
inc
adc
pop
and
or
pop
fcmovne
and
cmp
and
pop
pop
or
outsl
mov
cmpsl
jne
cmpsb
adc
dec
inc
sub
es
inc
mov
sti
adc
or
ja
or
pop
inc
cmp
mov
mov
rorb
xlat
push
cmp
dec
rcl
adc
fucomip
jge
ffreep
movzbl
sub
dec
mov
mov
cmp
push
add
adc
arpl
cmp
adc
lcall
fdivrl
pop
out
jmp
movsl
pop
mov
pop
sbb
insl
ljmp
push
clc
mov
loopne
pop
inc
loope
rorb
ss
int3
adc
mov
dec
mov
cmp
sub
sahf
pop
adc
xchg
icebp
ficoms
push
mov
jb
icebp
scas
push
repnz
sbb
jns
jb
jge
sbb
pop
div
insb
dec
scas
jl
repnz
jmp
cmc
add
cs
ret
loope
inc
call
imul
int
lods
ret
cmc
and
mov
xchg
ds
jecxz
sub
sbb
mov
aad
xchg
in
aam
shll
jmp
mov
jg
dec
aad
cmp
cli
inc
or
inc
sti
cmpb
sbb
test
ja
addr16
enter
xchg
fwait
sub
push
enter
in
jae
pop
dec
mov
fildl
neg
xchg
mov
rcrl
xor
jmp
push
cmc
pop
testb
cmpsl
in
fwait
mov
jp
outsb
lea
xor
mov
mov
pushf
test
rcrl
lret
cmc
dec
xchg
pop
and
fs
dec
in
mov
sbb
jae
or
jle
lock
xchg
je
in
mov
cltd
add
add
and
mov
cmp
adc
shl
cmp
sub
sti
and
jbe
inc
inc
repnz
xor
pop
nop
fcoml
into
jb
inc
dec
pop
cld
dec
jmp
clc
shrb
push
xchg
lcall
mov
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
fcoml
push
dec
adc
decb
adc
and
daa
sbb
movd
xchg
mov
lods
adc
divb
mov
jns
rcll
loope
leave
rep
sbb
cltd
push
or
into
mov
sarb
xchg
into
popf
icebp
test
pop
fmull
nop
fcmovb
insl
sub
cs
test
fimull
cmpsb
adc
popa
cmp
test
out
jmp
cli
fdivrl
iret
xor
xchg
add
jns
sub
scas
push
pop
dec
and
in
enter
rcr
push
push
arpl
xchg
lahf
ljmp
mov
xchg
and
cmp
out
cmpsl
or
pop
mov
dec
out
cmpb
fwait
out
mov
sbb
cmpsb
mov
fldl
addr16
in
mov
out
es
xchg
imul
cs
sbb
call
xchg
lcall
xor
push
icebp
xchg
imul
lret
pop
lods
int3
movsl
pop
ror
mov
sbb
push
sbb
pop
inc
cmp
out
dec
xor
push
gs
xor
push
inc
push
mov
xchg
push
clc
in
rolb
lods
mov
xchg
fbld
cmpsb
and
or
dec
lods
add
xor
ja
data16
or
jp
sub
mov
je
ljmp
dec
or
arpl
xor
sub
in
pop
leave
mov
cltd
ret
mov
inc
cld
jmp
jno
pusha
sbb
xchg
sbbb
and
cs
dec
je
cmpsl
adc
push
pop
adc
and
lret
push
shll
daa
or
jle
jbe
aas
add
and
cmp
lods
enter
ja
call
or
addr16
mov
inc
out
pop
xchg
test
jnp
mov
addr16
lock
xor
clc
adc
jo
cmc
imulb
mov
add
pop
les
sub
sub
ret
xor
int3
sub
xor
loope
enter
pop
aam
ja
loop
pop
or
cmp
lock
cmpsb
pop
out
add
loope
inc
fldt
lods
inc
xchg
cwtl
dec
pop
cmpb
inc
dec
mov
jno
xchg
popw
mov
push
mov
jbe
lahf
push
scas
les
rorb
ret
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
das
mov
xor
jno
int3
mov
sti
stc
sbb
pop
repnz
sub
hlt
rorb
sub
in
mov
data16
bound
or
stos
test
and
or
jae
gs
stos
adc
xchg
push
push
mov
mov
testb
mov
pop
lret
iret
scas
fildl
aas
aam
cmc
cmpsl
or
mov
jo
dec
push
xchg
pusha
dec
neg
inc
pop
push
and
jg
insl
mov
stos
das
inc
mov
adc
not
lea
sub
dec
stos
push
mov
daa
xor
negb
or
and
mov
fcomps
sbb
aaa
inc
xchg
cltd
insl
cmpsl
adc
gs
adc
outsb
inc
jae
mov
push
mov
cmp
xor
sub
clc
scas
mov
xchg
add
call
cld
and
adc
int
inc
jg
and
xchg
dec
mov
jne
mov
filds
xor
fdivrl
fisubs
rclb
jns
rcr
fucomp
xchg
adc
in
call
fnstsw
into
fs
hlt
stc
dec
jns
push
nop
mov
xchg
or
sub
idivl
cltd
ds
mov
push
mov
jae
in
pop
jmp
jl
sub
mov
outsb
repz
jmp
les
stc
cmp
lahf
cmp
test
call
xchg
push
notb
imul
je
icebp
fisubrl
cmpb
ljmp
jg
jmp
mov
test
imul
xchg
mov
push
roll
test
adc
insl
cmp
ja
scas
mov
cmpsl
sahf
sbb
cmp
cmp
in
mov
pop
les
mov
ds
js
and
clc
pop
mov
ds
shll
add
cmp
aaa
ret
push
push
popa
outsb
mov
or
out
push
or
inc
push
mov
sahf
cmp
popa
into
ss
cld
xchg
and
insb
sbb
clc
aas
mov
dec
adcl
sub
mov
pop
mov
call
inc
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
clc
clc
adc
jmp
and
push
cmp
aas
xchg
pop
inc
mov
fs
in
inc
aaa
sti
mov
xchg
outsl
mov
push
jmp
add
test
stos
ss
cmp
adc
push
push
lcall
mov
xor
mov
cmpl
repz
adc
xchg
sbb
out
lods
mov
add
es
test
pop
cmp
sarl
js
sbb
pushf
sbb
push
inc
divl
dec
fiaddl
in
pop
cmp
sbb
mov
mov
adc
stc
jae
cmp
dec
xchg
or
xchg
push
out
imul
inc
not
jbe
push
xor
fwait
mov
into
imul
fmull
in
dec
adc
pop
in
nop
and
push
gs
loop
dec
xchg
std
cmp
ljmp
jns
cmpsl
sub
sub
dec
cltd
int
hlt
mov
arpl
pop
dec
dec
into
ret
in
mov
xor
in
in
arpl
lds
pusha
fwait
loopne
add
sahf
mov
mov
jecxz
jo
ret
cs
push
repz
inc
in
fnstcw
out
dec
mov
mov
in
or
lds
shll
mov
xor
js
jae
mov
outsb
or
add
adc
add
out
icebp
imul
sub
fisubs
rcll
sbb
test
dec
outsb
aam
sub
pop
cmp
xchg
and
pop
sub
or
gs
push
popa
jnp
add
mov
mov
xlat
or
fisubrs
std
pop
and
imul
push
or
daa
in
popf
repnz
imul
dec
pop
dec
add
inc
jbe
ds
test
jg
in
pop
fldt
je
xchg
aad
jne
and
inc
or
sub
out
pop
outsb
mov
jbe
push
push
ficoml
movsl
pop
lcall
sub
mov
mov
mov
sub
jne
inc
sarb
out
repnz
inc
test
xchg
popf
jmp
mov
out
and
dec
xadd
pop
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
pop
nop
pop
mov
popf
movlps
aas
jmp
jae
xchg
jnp
popa
aas
add
xchg
push
cwtl
imul
mov
push
fiadds
xchg
jmp
and
cmp
leave
push
fisttpl
sub
cmp
movsl
fiaddl
inc
aam
sbb
dec
les
mov
xchg
ss
into
ljmp
jp
push
mov
pusha
popf
loope
mov
aas
icebp
and
cmpsl
shlb
insl
mov
sub
cmpsl
js
mov
lcall
repnz
xor
subb
mov
sbb
fsubl
inc
into
push
dec
or
mov
push
pop
or
hlt
adc
jo
mov
add
mov
outsl
movsb
bound
in
fisubrs
cmpsl
sahf
ja
and
push
test
push
mov
adc
ss
stos
and
fistps
mov
jo
je
xor
scas
mov
js
int
inc
pop
std
inc
pop
outsb
inc
mov
mov
sbb
adc
mov
enter
mov
shlb
cltd
mov
mov
and
jns
mov
adc
jno
stos
fcomip
popa
jle
lods
js
xor
or
in
mov
leave
cmc
inc
jns
pop
aaa
and
data16
cmp
repnz
jmp
insb
sbb
push
in
push
lret
insb
mov
dec
push
fwait
lcall
test
xchg
aaa
inc
push
dec
and
add
sbb
xchg
and
mov
pushf
cld
add
outsb
push
and
cmpsl
push
mov
inc
cmp
dec
mov
mov
adc
daa
mov
into
sub
mov
int
mov
xchg
fdivl
movsl
cmc
sub
pushf
fdivl
and
enter
xor
repz
xchg
sbb
fwait
in
sub
leave
jecxz
int3
jb
into
pop
xor
jo
subb
jl
loop
imul
cmp
dec
mov
adc
cltd
mov
mov
push
outsb
mov
imul
aad
lods
je
repz
xchg
pop
imul
push
lods
sbb
inc
pop
cmp
mov
mov
sbb
in
push
iret
movsl
jg
int
enter
sbb
js
movsl
jbe
sbb
add
sarb
mov
and
mov
test
lret
int
mov
arpl
sub
cltd
jecxz
jo
adc
cltd
daa
push
xor
sbb
rcrb
aas
pop
hlt
sub
insb
mov
mov
cmc
repz
inc
mov
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
sarb
dec
cmp
adc
test
out
mov
jno
sbb
adc
fisubrs
adc
jecxz
xchg
mov
sub
inc
imul
cltd
jmp
lds
xor
pop
fildll
lods
mov
enter
mov
pop
cmp
and
cwtl
cmpsb
pop
mov
cmc
cmpl
pusha
dec
xchg
stos
sarl
mov
jg
mov
xor
shrl
ljmp
dec
sbbb
sahf
in
xor
push
push
or
xor
or
aaa
xor
lock
jne
pop
xlat
into
stos
cmp
lcall
cld
insb
mov
fstl
xor
cwtl
lcall
outsl
push
or
mov
xchg
xchg
std
cmp
pop
and
pop
xor
lds
movsb
xlat
ja
insl
aas
loopne
and
xor
ficompl
adc
sbb
stos
scas
jmp
or
cmp
ss
pop
mov
rcrb
mov
add
cmpsb
pop
and
aaa
aad
cmpsl
mov
xchg
inc
mov
jmp
movsl
aam
xchg
or
lock
adc
insl
adc
or
addr16
aaa
aas
or
push
dec
xchg
mov
ds
mov
push
fmul
repz
sub
invd
mov
xchg
mul
lock
mov
out
pushf
sub
ja
cmp
jnp
push
cwtl
mov
push
js
and
xchg
inc
into
in
in
push
sbb
mov
cmpsb
lret
nop
fstl
adc
fisttps
lahf
jae
push
cli
repz
pop
arpl
xchg
cmp
xor
push
out
xlat
and
mov
and
pop
into
push
dec
jg
pop
lock
inc
inc
flds
or
and
adc
sti
push
movsb
dec
mov
jge
push
lcall
xor
pusha
fdivr
cwtl
xchg
outsl
pop
rcrl
adc
push
sbb
test
cmc
xor
sub
imul
pushf
push
imul
cmpl
in
xchg
add
and
sub
lods
cmpb
sbb
clc
int
sub
push
xor
lods
popa
xchg
fs
test
mov
xor
dec
push
inc
daa
and
fcoms
jp
pop
inc
ret
in
mov
jnp
lret
arpl
out
imul
and
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
inc
test
mov
popf
movlps
cwtl
mov
ljmp
xchg
mov
cmpsb
sbb
daa
and
inc
mov
cmc
xor
mov
cmp
daa
mov
fwait
xchg
inc
and
mov
inc
cmc
fisubl
mov
pop
fisubs
dec
std
inc
mov
mov
cmc
xchg
jns,pn
mov
outsl
cld
and
dec
add
fsubr
out
xlat
outsl
leave
je
std
push
xchg
scas
cmpps
into
repz
jle
les
rcl
inc
rol
out
arpl
stc
insb
stos
in
xchg
dec
mov
ljmp
add
scas
into
cmp
shrl
sbb
pusha
or
in
dec
rcrb
xchg
inc
ja
out
fistps
pop
push
xchg
or
out
mov
xchg
sub
and
xor
pop
rclb
push
jg
movsb
sub
sahf
mov
fsub
inc
add
ror
sbb
cld
clc
cmp
stos
lock
nop
pop
inc
mul
mov
mov
shrl
sbb
lahf
movsb
push
adc
rolb
loope
sub
sti
push
call
in
out
or
pop
jne
daa
sbb
lock
into
push
aad
stos
jecxz
andl
repz
idivl
adc
cmp
je
jo
mov
mov
sub
ss
sub
add
inc
lcall
loopne
lea
xchg
std
push
lcall
outsb
push
stos
lock
xchg
mov
adcl
decl
add
pop
xor
xchg
push
jns
sbb
js
add
es
aam
push
xor
dec
inc
push
jae
xchg
nop
push
xor
mov
jp
inc
fs
lock
leave
stos
aad
jno
jle
mov
repnz
jno
mov
idivb
rorl
jbe
cmp
clc
lret
loopne
push
or
mov
adc
bound
popa
xorb
xchg
mov
sbb
xorb
scas
inc
mov
xchg
in
in
cmc
pop
call
adc
das
cmovle
cwtl
hlt
or
xor
xlat
iret
adc
push
xchg
fsts
mov
sbb
ds
push
xor
stc
sbb
cwtl
ret
out
loopne
jb
jmp
rol
std
idivl
xor
addl
repz
fs
mov
pusha
imul
je
fwait
sbb
mov
testb
push
mov
popa
add
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
ret
jmp
or
loop
dec
loope
loop
loopne
push
lret
ficoms
sbb
or
jo
xchg
lgs
dec
test
ret
jge
mov
lods
push
jle
out
insb
push
inc
sub
cmpsl
mov
lret
adc
test
stc
stc
xchg
int
popa
call
aad
add
loope
nop
mov
cli
sbb
jnp
ljmp
sub
jge
mov
data16
xlat
in
enter
stos
bound
lcall
dec
scas
cmp
faddl
out
pop
cld
xchg
les
sub
dec
xor
cmpsl
jae
inc
add
xchg
dec
aad
push
ret
push
fwait
test
out
ljmp
adc
movsl
add
pop
mov
jo
xchg
dec
mov
sahf
mov
out
fcmovb
xor
push
and
mov
or
adc
and
sbb
dec
fwait
mov
cmp
push
mov
fnstsw
mov
push
mov
test
inc
sarl
aas
fcoml
repnz
mov
push
or
scas
arpl
ja
xor
lahf
js
jne
rolb
stos
xchg
lods
negl
xor
loopne
mov
jg
mov
ss
mov
pop
inc
test
or
sahf
or
imul
xchg
push
mov
sub
jp
out
cmp
cmp
jecxz
push
jns
and
mov
imul
lcall
std
pop
jb
scas
in
cld
into
adc
fsubs
bound
gs
lods
aam
xor
push
sbb
push
arpl
aas
sub
inc
mov
test
popf
sarl
pop
lea
mov
dec
cs
hlt
fdiv
fcomi
lahf
cltd
shrb
and
adc
sbb
les
or
fisubrl
sub
mov
shlb
leave
xchg
add
iret
mov
jl
ss
andb
pop
loope
pop
into
and
pop
jge
sbb
sub
cmc
jl
jmp
mov
sbb
mov
pop
pop
test
js
je
push
imul
imul
lret
das
cli
cld
loopne
std
dec
movsb
adc
adcb
shll
aad
dec
pusha
jns
inc
xchg
js
xchg
push
push
mov
repz
mov
fisubrs
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
dec
ret
pop
sbb
xor
and
jnp
and
ror
mov
fcoml
pushf
and
or
fcomps
mov
push
jmp
mov
cwtl
xchg
bound
sbb
xchg
push
sti
arpl
cmpl
testl
add
mov
lret
lock
scas
fwait
arpl
inc
paddd
mov
mov
std
mov
jnp
and
jb
adc
push
xchg
cli
movsb
leave
and
out
lds
fwait
lcall
xor
xchg
pop
mov
packuswb
fsubs
adc
dec
pushf
sti
repz
sbb
xor
push
push
lret
mov
inc
stc
lret
xchg
inc
mov
dec
inc
inc
shlb
pusha
dec
gs
scas
int
mov
jns
ret
push
andb
mov
lret
stos
fmull
mov
popf
dec
gs
adc
add
jle
push
insb
add
fidivrs
jnp
mov
sar
xor
xchg
sarb
mov
sahf
movb
and
dec
jo
out
jmp
daa
lcall
push
movsl
cwtl
and
inc
mov
mov
nop
aaa
ljmp
pop
add
js
popf
shll
insb
pop
sub
and
int3
lret
push
jp
inc
hlt
imul
and
xchg
daa
shlb
sti
pusha
cwtl
inc
mov
pop
add
cmp
loopne
sahf
sbb
mov
call
add
xchg
aaa
adc
adc
jp
cmp
xchg
sub
sbb
out
push
das
push
inc
pop
call
or
sar
je
mov
fcomps
mov
inc
jae
fs
push
cmp
mov
adc
xor
jno
xlat
pop
cmpsl
loopne
mov
mov
int
cmpsb
bswap
lods
outsl
daa
imul
es
pop
int3
mov
push
push
sbbb
aas
test
repnz
fwait
sub
mov
data16
fstpt
inc
push
mov
mov
mov
mov
pop
nop
andb
data16
arpl
dec
xlat
cli
mov
jl
outsb
enter
mov
pop
and
popf
mov
mov
imul
or
add
pushf
lcall
outsl
xchg
xchg
in
stos
mov
adc
inc
lret
dec
pop
adc
outsb
loopne
mov
repnz
fsubrl
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
add
adc
movlps
mov
sbb
xor
jmp
into
pop
cmpsb
or
mov
dec
roll
out
jbe,pn
sarb
jmp
pusha
xor
mov
imull
test
sub
mov
adc
push
inc
in
mov
loop
pop
iret
call
cli
or
and
sub
orb
mov
scas
xchg
inc
sub
jne
cmpsl
jmp
adc
or
pop
lods
cli
sbb
jle
fwait
and
cmpsl
push
sub
mov
sbbb
xchg
outsb
cmp
mov
sbb
aas
mov
outsb
dec
dec
pop
ss
icebp
mov
dec
js
cmp
xor
jnp
sub
je
pop
sbb
mov
xchg
add
and
cmp
ljmp
push
cld
jg
inc
test
neg
insl
sub
xor
bound
es
repnz
sub
outsb
mov
aas
pop
lods
add
inc
faddp
cmp
xchg
jo
scas
mov
mov
xchg
cmp
push
and
ja
lds
out
stos
xlat
arpl
jecxz
inc
inc
or
insl
ja
pop
lock
in
testb
pop
inc
mov
inc
loopne
cs
sbb
mov
jge
popf
bound
loope
lock
std
jp
shrl
das
or
xor
repz
inc
stc
mov
lods
mov
subb
movsb
daa
scas
xchg
fldcw
fs
sbb
sbb
jmp
or
bound
mov
les
mov
dec
sarb
dec
arpl
in
shl
cs
mov
stos
fmul
les
xchg
and
addr16
pop
movsb
and
push
push
cs
push
in
in
adc
leave
fmuls
ret
lret
sbb
adc
jle
mov
jle
loope
or
sahf
notb
sti
jns
push
jg
adcl
mov
fwait
sub
scas
pop
lret
call
shufps
mov
scas
push
ret
sti
loop
mov
pop
dec
bound
pop
and
inc
das
and
cmpsb
nop
dec
xchg
test
adc
test
pop
mov
and
daa
push
icebp
jl
stos
push
stos
adc
and
inc
clc
mov
mov
pushf
loop
mov
fnstsw
jne
shrb
jmp
cs
sbb
xlat
sub
int3
inc
int
fdivrp
mov
and
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
fnstsw
push
sbb
adc
dec
aas
xchg
das
lods
sti
sub
push
dec
cmp
push
clc
sbb
std
push
adc
cmp
pop
daa
in
scas
movsb
sbb
adc
decb
adc
push
push
test
jae
sbb
mov
out
testl
gs
add
in
add
lahf
fdivl
fstp
psrlq
test
inc
dec
pop
add
pop
aam
add
pop
hlt
pop
pop
mov
push
lret
pop
sbb
sti
sbb
inc
sub
or
leave
daa
jb
jge
mov
loopne
in
addb
inc
pop
xchg
imul
mov
je
test
stc
out
dec
pop
xchg
pop
pop
rorb
sbb
mov
push
dec
cmpsb
hlt
xor
inc
jb
int
jmp
movsl
cmpsb
test
or
loop
push
insb
push
xor
add
sub
xchg
push
inc
pop
andl
aaa
popa
adc
xchg
rorb
test
je
sbb
ljmp
mov
add
test
cmp
or
lcall
loopne
daa
je
jge
xor
adc
sahf
loope
jp
mov
push
aas
add
push
push
in
cwtl
mov
dec
pop
sbb
inc
xchg
xchg
mov
loope
lock
xchg
gs
pop
aad
or
loop
in
insb
lds
inc
sahf
inc
insl
jmp
pop
inc
or
je
xchg
mov
ret
or
frstor
outsl
pop
cmpsl
stos
cmpsb
fwait
movsl
or
inc
inc
and
push
scas
mov
cld
push
in
call
pop
inc
unpcklps
mov
inc
xlat
addr16
and
mov
andl
mov
cmp
rcrb
xchg
cs
xor
push
or
pop
das
cli
loope
xorb
inc
inc
sbb
sti
aas
in
popl
fadd
add
int
jb
push
pop
imul
popa
je
or
test
fcmovbe
adc
repz
ret
mov
and
lods
or
dec
mov
push
out
dec
or
stos
lds
sub
fnstenv
xchg
nop
mov
inc
jp
xchg
or
lock
das
fisubs
dec
adc
xor
mov
int
jge
adc
sbb
add
enter
inc
xor
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
cmp
sti
jle
adc
adc
ret
es
mov
and
push
test
fwait
in
nop
sbb
jno
imul
ds
cs
lcall
ds
sbb
pop
mov
repz
xchg
pop
inc
inc
dec
popf
in
sbb
lcall
pxor
pop
jo
sub
add
xorl
jns
outsl
outsl
xchg
orb
mov
lret
and
xor
fnstcw
int3
test
mov
inc
les
pop
rol
pop
daa
sbb
negb
or
jg
dec
jle
rclb
rcrl
std
ss
rcll
xchg
in
fimuls
inc
add
dec
out
ss
pop
mov
pop
xchg
adc
int
jl
fidivrl
outsl
call
jae
xor
daa
jns
lahf
jmp
pop
ffreep
sbb
xorb
jp
push
cwtl
sbb
dec
in
adc
xchg
push
test
icebp
cltd
in
lahf
rorb
pop
xor
ficomps
ss
dec
cmpsb
inc
jmp
mov
pop
fimull
pop
and
jae
ror
xor
cld
cwtl
inc
xchg
arpl
fiaddl
orl
add
out
inc
or
int
xlat
xchg
int
rol
fcompl
dec
mov
icebp
xchg
mov
outsl
or
sbb
pop
xchg
dec
inc
mov
jmp
mov
leave
dec
xor
imul
dec
mov
ret
inc
mov
xchg
aam
mov
lcall
dec
and
cmp
negl
jg
sbb
scas
jmp
aad
cmp
or
scas
and
xchg
rcrb
mov
adc
inc
aad
sub
push
frstor
jns
lret
jecxz
xor
jle
jns
ljmp
pop
jno
xor
lret
in
jno
out
xchg
clc
mov
in
mov
decl
cwtl
outsl
or
lods
test
mov
cmp
mov
scas
fidivrl
and
or
mov
notl
and
jmp
mov
fs
sbb
imul
lret
shlb
fistps
pusha
out
sahf
pop
fsub
andb
mov
das
or
ret
inc
popa
jp
loopne
pop
fdivrs
sarb
add
dec
dec
movsl
fisttpll
inc
and
imul
adc
push
and
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
xchg
xor
iret
movlps
loopne
cmpsb
sbb
pop
ret
push
stc
and
dec
cmc
shll
inc
mov
movsl
cmp
dec
jg
out
mov
xchg
movsb
out
adc
shlb
xchg
ljmp
jns
cmp
rcrb
xchg
test
mov
ror
fcoml
cmp
xor
sub
addr16
or
mov
xlat
sarb
mov
sub
and
cmc
xor
js
dec
mov
in
inc
mov
ret
loopne
enter
pop
hlt
scas
adc
sub
dec
pop
ficompl
jmp
ds
ljmp
or
add
aam
xor
aam
mov
bound
leave
sub
pop
cmp
movsb
cmp
dec
in
mov
dec
or
in
xor
cmc
pop
lahf
jl
push
adc
xchg
or
cld
in
lds
xchg
fs
call
je
dec
fcoms
js
rcll
push
sbb
and
pop
cmc
andl
mov
in
ds
push
int
cmpsl
sbb
mov
incl
add
mov
inc
xor
sub
inc
mov
dec
xchg
xchg
cwtl
sbb
int
sbb
mov
js
fsts
dec
mov
lods
pop
repnz
inc
sub
sahf
pop
sbb
mov
pusha
icebp
iret
out
shrl
lock
push
repz
and
jl
setbe
lods
cmpsb
add
fcomp
hlt
adc
push
addr16
setae
ljmp
lods
js
ficoms
push
pop
sbb
inc
push
inc
lahf
mov
mov
jecxz
pop
lds
cltd
inc
or
jb
or
test
cwtl
aaa
dec
xor
out
in
icebp
xchg
or
pop
mov
shrl
cmp
movsl
jl
adc
rcrb
mov
movnti
mov
call
sub
xor
insb
lahf
repz
sbb
movsl
sub
push
and
in
dec
pop
stos
mov
loop
ja
xlat
sbb
mov
pusha
pop
sbb
lret
pop
in
sahf
adc
sbbl
andb
inc
pop
lcall
mov
cs
scas
push
push
ja
push
sub
dec
hlt
rcl
pusha
mull
sbb
add
call
sbb
pop
rolb
loop
jecxz
sub
pop
lods
cmc
xchg
and
dec
test
into
jmp
adc
cmpsl
lcall
aaa
mov
imul
rorl
push
or
or
jmp
dec
pop
imul
enter
jp
test
adc
stc
aaa
subl
out
inc
es
scas
daa
ljmp
les
add
stos
xor
mov
in
push
mov
test
mov
test
mov
outsb
ficoms
xchg
lahf
out
fs
xchg
lret
cmp
sub
xchg
push
lcall
pop
adc
scas
or
push
push
mov
mov
cmp
or
dec
cmp
je
inc
enter
xor
aad
icebp
cmp
popa
scas
jbe
sbb
int
mov
das
xor
and
ja
jbe
or
loop
cmc
out
clc
mov
ss
fsubrs
scas
fmul
sub
push
adc
test
or
loop
ja
fwait
daa
bound
jb
push
insl
mov
pop
or
lock
adc
push
jbe
int
add
mov
ret
cli
lock
sub
lds
hlt
mov
and
arpl
gs
push
shrl
negl
fldt
pop
lret
ss
inc
outsb
jno
or
jl
mov
push
out
xchg
movsb
sbb
js
add
push
fdivrl
push
add
xchg
scas
lahf
sti
and
cmp
rcr
lods
lods
repnz
push
pop
pop
jle
pop
add
or
or
or
add
cmpsb
push
out
imul
andb
add
inc
inc
in
movsl
scas
inc
xchg
sbb
jbe
repnz
sti
jns
lock
jmp
inc
in
jl
jns
movl
arpl
mov
add
dec
jmp
dec
rorl
in
xchg
fisttps
sub
add
repnz
sub
or
lea
mov
cmp
stos
inc
sub
jle
out
and
sub
mov
xchg
pop
sub
sub
rolb
in
mov
xchg
cltd
push
lret
mov
int
add
sbb
inc
mov
flds
push
sbb
std
das
xor
mov
pop
ficomps
push
xor
in
mov
aas
jg
cmc
or
mov
sbb
shlb
push
pop
test
or
jmp
fldl
sub
shll
sub
and
push
jge
lock
mov
fists
sub
adc
sbb
mov
adc
cmc
mov
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
jmp
xlat
movsb
dec
mov
dec
pop
outsb
ret
dec
int3
mov
icebp
repz
mov
adc
xor
movsl
mov
loope
dec
fistpl
out
sti
sarb
xor
dec
jbe
minps
jg
adc
movsl
mov
test
fsubr
out
ja
iret
cmpsl
mov
cmpsl
and
out
in
add
jge
push
scas
in
pop
mov
pusha
icebp
mov
test
jmp
fldcw
mov
test
out
jbe
je
scas
pop
insb
imul
in
or
push
cltd
cmp
test
insb
cmp
imul
test
push
sbb
jne
and
aas
sbb
outsb
jmp
popa
aam
call
sbb
adc
xchg
xor
cmp
test
add
push
xor
or
jb
cmc
and
hlt
int
test
sti
lods
in
add
xchg
incb
dec
sbb
js
fdivs
jp
pop
imulb
sti
adc
push
xor
push
jb
in
cltd
ret
sub
ljmp
jg
into
mov
rcrb
sbb
mov
sub
insl
hlt
pop
and
adc
lcall
sbb
jle
incl
and
cwtl
and
push
test
push
ds
mov
pop
push
imul
and
fmull
mov
je
pushf
mov
mov
xchg
in
outsb
sub
mov
ficompl
rcl
ret
flds
ror
enter
nop
xlat
loopne
test
sub
mov
lock
mov
mov
lcall
pushf
into
shrb
js
adc
repnz
xor
push
cmp
and
and
cmp
iret
sub
pop
mov
sahf
jp
sub
xchg
sbb
cmc
push
jo
and
inc
sub
mov
fs
push
and
ret
cmc
jmp
mov
ret
pop
add
aad
pop
scas
or
mov
xor
jns
aad
push
lret
or
mov
and
nop
inc
mov
in
dec
and
insb
jecxz
lahf
push
xlat
sbbl
adc
sbb
and
jl
cmp
xchg
push
push
push
or
dec
popa
cmp
mov
outsl
je
inc
and
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
dec
cmpb
movlps
xor
pop
loopne
push
cmpsl
xchg
pop
sbbb
scas
imul
xor
xor
adcl
lods
push
cltd
push
xchg
outsb
jl,pn
rorb
loop
ds
or
sbb
jle
dec
shrb
std
popl
xchg
mov
push
outsl
ljmp
mov
inc
into
adcb
nop
scas
nop
pop
mov
int3
gs
sbb
stos
jnp
or
push
jle
fwait
mov
xor
adc
inc
aad
inc
xor
stc
add
lods
jmp
sbb
jl
hlt
std
add
lods
pop
inc
mov
xchg
ljmp
pop
dec
xor
xor
add
push
lods
sub
cmp
loop
mov
inc
in
mov
sbb
cmc
or
fmull
fcompl
into
xchg
out
jne
and
int
jge
fcompl
add
iret
sarl
das
xchg
and
inc
pop
mov
push
insb
ret
pop
xor
xchg
clc
add
dec
mov
popa
popf
push
jmp
ss
push
pushf
xor
adc
popa
push
imul
or
push
xchg
or
stos
sbb
cmpsb
xor
xor
lahf
sti
fstpt
jae
push
mov
cmp
dec
and
test
into
add
xchg
mov
fs
sti
push
xor
repnz
xor
cmpsb
rcll
sub
mov
jmp
or
sub
or
aas
sbb
adc
add
sub
in
test
inc
xor
int
pop
push
mov
mov
sbb
cmp
test
pop
xlat
loop
xchg
add
push
xchg
scas
mov
dec
sbb
push
out
xlat
cs
inc
fildl
shlb
out
jecxz
lcall
mov
ror
lret
enter
xchg
mov
dec
or
sub
push
xchg
dec
jno
mov
das
call
push
jnp
in
and
test
mov
sub
pop
mov
jae
repnz
pop
andb
movsb
sub
cmp
add
pop
mov
mov
mov
shr
lahf
jle
jo
cmpsl
add
mov
loopne
pop
inc
clc
inc
inc
mov
out
sub
int
neg
push
iret
mov
push
mov
jnp
mov
jb
jg
push
das
cmp
push
mov
ret
fs
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
dec
call
outsl
jl
loopne
adc
fcompl
pop
push
pop
imul
gs
idivb
sbb
mov
outsl
or
loopne
dec
testb
dec
pushf
les
and
jno
test
mov
or
pusha
cmp
ds
repz
mov
in
repz
sbb
and
and
pop
lea
stos
out
aad
mov
pop
add
aad
mov
mov
cs
and
test
inc
movsl
out
stos
xor
ljmp
mov
rcrl
push
jmp
arpl
and
jo
loop
int3
cltd
test
data16
or
lods
add
fstpt
fidivl
loope
inc
rclb
int3
pop
std
iret
daa
mov
mov
cmpsl
loopne
sti
cmc
push
push
mov
sbb
clc
xor
pop
int
ret
mov
sub
add
test
adc
popa
fcoms
jecxz
add
push
popa
out
inc
fnsave
in
pop
push
dec
jmp
xor
sub
test
in
sub
push
in
out
pop
shl
mov
pop
out
mov
loope
xchg
das
push
stc
push
xchg
sbb
in
dec
mov
mov
and
in
idivl
ja
clc
inc
pushf
inc
xchg
ja
xchg
sbb
stos
xchg
xor
adc
or
movsl
lcall
insl
xor
xchg
cmp
xor
mov
xchg
cmp
mov
iret
jae
pop
ja
ret
add
lea
xchg
xchg
addl
add
and
cli
push
les
aaa
int
dec
fsubs
jnp
sub
inc
shrb
fistpl
jns
push
cmpsb
sub
and
aaa
xor
add
mov
jne
or
les
mov
or
fdivl
adc
push
dec
push
lahf
popa
sahf
push
xor
inc
push
jmp
imul
lock
mov
aaa
orb
sub
fsubl
ja
cwtl
adc
pop
cmp
push
mov
out
outsb
push
dec
popa
sub
test
or
jmp
inc
lods
xchg
mov
fcom
adc
ljmp
sti
sub
outsb
mov
add
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
aad
icebp
stos
jae
adc
adc
mov
into
and
xor
lods
cli
and
jge
inc
stc
in
testl
push
sub
or
jg
ret
popf
stos
push
iret
aad
sub
cmp
adc
clc
repnz
cmp
pop
gs
into
jns
insb
adc
adc
rcll
frstor
sub
cmpsl
jmpw
or
testl
imul
pop
cmp
nop
fs
loope
push
xchg
fcoml
notl
and
stos
pop
adc
cmp
out
mov
cs
gs
jge
mov
fisubrl
sbb
sbbb
ret
lods
test
add
mov
sbb
xlat
es
in
scas
scas
cmpsl
gs
xor
add
xor
enter
xchg
pop
dec
mov
in
insl
cli
test
cmpsl
sub
cmp
sbb
pushf
adc
mov
js
andw
add
jne
movsl
mov
rclb
nop
test
xchg
shll
dec
das
enter
add
adc
push
mov
and
add
sbb
testl
sbb
daa
inc
cmp
or
or
adc
pushf
fimuls
insb
add
nop
std
and
test
xchg
mov
rolb
or
dec
stc
mov
or
cmp
jnp
pop
add
bound
mov
inc
mov
dec
in
adc
sub
cmp
jge
fwait
leave
test
jnp
je
ljmp
jecxz
lods
mov
push
inc
nop
mov
aas
hlt
pop
fnsave
pushf
add
dec
outsb
js
repz
add
fnstcw
xchg
jns,pt
xchg
push
xor
xchg
push
sar
icebp
or
pop
leave
mov
cs
rorl
fcomip
movsl
jb
jl
ljmp
fdivrl
jmp
ffree
dec
jno
sahf
imul
dec
aas
fwait
sbb
cmp
shlb
adc
push
push
shrl
xor
cmp
mov
jp
sarl
rcrb
movsb
mov
insb
add
xchg
push
loope
icebp
flds
and
jmp
jo
ret
pop
rolb
shll
pop
sbb
sbb
pop
sbb
fisttpll
addr16
jnp
into
fxam
or
movsb
and
push
add
push
mov
and
stos
cmpsb
int
push
cmp
and
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
adc
adc
out
adc
adc
push
daa
sbb
ja
jle
cli
daa
jo
test
sub
lcall
pop
in
jb
je
mov
in
imul
inc
ljmp
js
daa
ss
cmp
jo
xor
xor
xchg
pop
xchg
sbb
ds
add
xlat
mov
inc
movsb
or
xchg
add
jle
out
mov
push
jno
jns
cld
sub
mov
inc
adc
jmp
xchg
outsb
push
jo
das
and
mov
outsl
push
push
es
clc
mov
ret
addr16
imul
cmp
jg
jmp
mov
xchg
push
bound
sbb
aas
and
sbb
or
lahf
adc
pop
and
jg
dec
lahf
xchg
test
mov
cwtl
fwait
into
insl
orb
mov
ss
out
jg
sub
mov
loop
or
jl
inc
mov
loop
push
sub
outsb
jbe
imulb
cmp
push
repz
lcall
pop
cmp
dec
push
mov
in
outsl
mov
cltd
lahf
scas
xchg
ljmp
sub
or
shll
in
mov
inc
xchg
cmp
dec
cmpl
fldenv
out
dec
test
xchg
pop
or
push
ficomps
rcrl
add
dec
adc
loop
nop
cmpsb
cwtl
sbb
in
inc
sarb
mov
mov
adc
sti
mov
arpl
dec
shrb
add
sti
pop
test
jnp
adc
lea
or
dec
dec
sub
jo
pusha
out
sbb
or
or
push
mov
mov
sub
mov
lahf
je
push
mov
lock
jns
shrb
dec
shrb
int
mov
inc
sbb
jb
mov
push
xchg
loopne
sub
jg
rcll
dec
out
dec
dec
or
roll
test
push
mov
adc
pop
mov
repnz
dec
out
add
fistpll
xchg
mov
cmp
mov
add
adc
xchg
inc
mov
cld
iret
shll
aad
mov
cmp
xor
nop
mov
bnd
xchg
dec
aad
mov
sbb
pushf
mov
xorl
fwait
cmp
andl
xor
out
repz
push
jne
rorb
pop
out
xor
xor
mov
loopne
sti
sbbb
pusha
add
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
push
loopne
jmp
adc
adc
fcomp
sbb
pop
or
fidivl
enter
cmpsl
sub
cmpb
push
sarl
adc
inc
shlb
call
stos
rcl
push
and
or
and
jne
push
in
inc
inc
lret
scas
fcmovnb
cmpsb
jae
mov
mov
mov
stc
out
dec
mov
cltd
rclb
ret
xor
pop
data16
jge
int3
and
daa
mov
test
xchg
lock
les
movsl
imul
jno
adc
daa
fdivr
test
fwait
ret
jmp
ja
movsb
inc
and
pushf
dec
push
add
inc
das
stc
out
mov
std
repnz
test
push
pop
repnz
adc
test
lahf
stos
popa
mov
mov
adc
sahf
jbe
pop
sbb
pushf
jo
mov
add
pushf
xchg
dec
cld
loopne
add
mov
sarl
push
adc
add
jmp
pop
inc
cmp
mov
lcall
xor
ret
xlat
out
fists
mov
inc
stos
inc
jnp
cmp
pop
pop
push
push
sahf
and
mov
xlat
jp
test
push
xor
pop
xor
cmp
pusha
lods
mov
fs
push
outsb
addb
jmp
jbe
gs
add
mov
pop
mov
insb
jp
lcall
pop
add
inc
fisttps
lret
mov
lret
mov
repnz
call
mov
fnstsw
fucomip
mov
dec
arpl
lahf
rol
inc
sahf
loop
xor
sub
push
mov
push
sahf
in
das
in
mov
push
sbb
mov
mov
repz
inc
call
xlat
sub
sahf
push
cmp
xchg
lods
jb
inc
scas
rcll
in
in
xor
pushf
pop
or
mov
es
std
insb
lahf
inc
sub
test
ja
sbb
inc
lahf
aaa
sbb
popf
sub
or
jecxz
mov
sub
imul
dec
jns
icebp
adc
int
out
xchg
movsb
sbb
adc
or
je
mov
or
mov
cmp
mov
sub
mov
jnp
inc
adc
mov
sbb
pop
jl
or
mov
push
popf
push
inc
fsubl
pop
lcall
ficoms
std
dec
xchg
lret
adc
test
in
lods
fisubrl
mov
pop
test
and
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
icebp
imul
push
in
mov
cmp
in
test
ja
push
xor
fsubs
fs
sbb
jge
int3
and
jecxz
push
push
jg
add
aad
sahf
mov
lcall
out
mov
out
ficompl
pusha
or
sti
rcl
icebp
out
jecxz
test
je
mov
cs
repz
js
jecxz
std
testb
out
xchg
pop
int
loopne,pn
cli
divl
and
out
lcall
ljmp
pop
rcll
aam
or
xor
push
inc
mov
mov
jg
or
pop
cli
sbb
sbb
ljmp
push
shll
adc
sti
das
or
sbb
in
or
dec
les
test
pop
sbb
outsl
leave
adc
xchg
inc
cmp
push
js
mov
out
aaa
test
mov
std
mov
xchg
cmpb
arpl
movsl
mov
push
push
xchg
dec
sbb
jge
aas
arpl
ja
lds
mov
jb
cli
insl
xchg
loopne
sti
leave
xchg
lret
nop
pop
test
sbb
or
inc
aad
in
sbb
outsb
aaa
loop
xchg
xchg
enter
mov
sbb
or
inc
and
fcompl
cmp
add
ret
and
xchg
jg
pop
iret
sub
data16
arpl
or
cmpsb
nop
push
pop
adcl
mov
and
pop
in
test
imul
addr16
into
mov
cwtl
pop
add
adc
clc
fcmovnbe
mov
movsl
cmc
sarb
push
sub
movsb
cltd
mov
out
dec
cwtl
add
lods
dec
push
in
insb
scas
je
jecxz
fsubs
lahf
mov
cwtl
out
into
lret
jne
lcall
ss
sub
pop
daa
mov
lock
pop
inc
cmp
jbe
push
dec
xor
outsl
imul
fs
pop
aam
push
push
push
adc
out
jno
pop
xor
popa
mov
sub
jns
scas
pop
fwait
adc
in
adc
mov
push
aam
xor
hlt
cmp
fucomip
inc
clc
sbb
inc
xchg
and
out
jmp
pop
insl
lods
loope
cmp
loopne
xchg
hlt
jae
in
lea
mov
shl
popa
mov
mov
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
std
jle
loopne
adc
movlps
dec
mov
jmp
xchg
stos
and
rcll
les
subl
mov
mov
jmp
jne
das
call
cmc
inc
repnz
scas
cmc
jns
cmp
xchg
insl
lods
scas
jnp
shll
cmpsl
andl
jne
ret
or
cmc
sbb
push
xchg
scas
cmp
ss
orl
inc
cli
rcr
sub
orb
push
or
adc
add
stos
lcall
mov
jmp
ja
xor
test
fdivl
rorl
sahf
push
out
dec
loopne
fcomps
add
and
movsl
sahf
jecxz
out
mov
xchg
mov
mov
xor
stos
in
adc
or
add
ljmp
sub
push
add
je
and
sub
out
cmp
in
cltd
sbb
mov
loop
test
mov
dec
aaa
int3
push
adc
and
adc
cmp
das
fwait
ret
mov
mov
xchg
add
in
mov
repnz
sbb
xchg
sbb
rorl
xchg
rorb
mov
jg
out
clc
dec
or
ljmp
mov
or
out
pusha
xlat
push
loope
outsl
jl
and
dec
movsl
cmp
cmp
loop
sbb
fcomip
fwait
rol
out
shrb
mov
adc
pop
dec
xchg
fs
movsb
push
xchg
or
or
imul
ja
outsl
fs
test
xor
std
xchg
loopne
jg
idivl
cltd
jmp
push
inc
adc
adc
mov
adc
imul
xor
push
movsl
or
aaa
int
or
scas
es
test
fcoml
out
mov
sub
sub
insl
mov
ja
push
es
dec
mov
or
and
cmp
jbe
adc
int3
sbb
sbb
sub
xor
jno
insb
ja
pop
test
aaa
fwait
pop
jnp
clc
xchg
xchg
gs
in
test
std
outsl
pop
dec
cs
popa
xchg
cmp
pop
sub
inc
mov
cmp
mov
mov
filds
mov
fstl
es
pcmpgtb
jmp
cmpsb
mov
bound
mov
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
aad
mov
iret
movlps
sbb
adc
test
dec
popa
cwtl
inc
xor
enter
adc
scas
sahf
sub
sbb
dec
push
xor
xor
in
jno
popf
add
es
addr16
sbb
adc
pop
fxch
sbb
icebp
int
movsb
ret
in
add
mov
pop
jp
shrb
adc
fs
loop
int
das
sbb
outsl
jo
js
push
dec
jb
insl
js
xor
adc
sbb
sub
in
aaa
jno
push
test
fucom
into
xor
jle
rorl
adc
pop
lahf
lcall
fidivs
movaps
loopne
xor
lods
aas
sub
sub
mov
or
in
pop
imul
mov
cmp
aas
pmaxub
xor
outsl
jnp
in
loopne
imulb
loope
fists
dec
add
out
push
inc
das
ds
adc
enter
scas
push
mov
dec
mov
arpl
xor
pop
out
sub
adc
jae
mov
xchg
aam
jno
mul
mov
and
and
xor
xchg
mov
add
mov
xor
mov
in
pop
inc
daa
lods
or
in
xchg
call
push
cld
jne
and
mov
add
and
addr16
push
test
push
push
jmp
mov
aad
cmpsb
or
sahf
cmp
sahf
lret
or
hlt
inc
stos
mov
adc
je
negb
mov
adc
jecxz
mov
imul
pop
icebp
lods
lds
inc
adc
cmp
rcrb
pop
jmp
cmp
adc
mov
dec
nop
xor
push
in
sbb
pop
call
pusha
xor
dec
lahf
jae
jmp
mov
gs
mov
gs
mov
mov
mov
mov
jp
lock
push
popf
add
fldenv
mov
add
lret
notl
mov
xchg
dec
lock
sahf
adc
rorb
mov
dec
cwtl
ss
dec
and
rcr
ret
ljmp
mov
jns
push
jo
add
in
fdivrl
insb
dec
insl
in
aaa
test
test
arpl
mov
fmull
jns
leave
add
pop
idiv
in
mov
je
popf
adc
stos
adc
inc
mov
mov
imul
ret
inc
add
add
inc
and
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
popa
mov
movlps
call
mov
mov
ss
ret
inc
inc
roll
inc
adc
push
cmp
mov
inc
sub
test
xchg
sbb
jecxz
rolb
test
and
jle
lret
js
stos
std
cmp
inc
pop
addl
lret
pop
adc
inc
jno
sub
mov
push
popa
pop
add
js
popa
loop
in
push
lcall
push
pop
iret
inc
leave
mov
cmp
push
pushf
mov
and
mov
sbb
xor
cmp
jg
adc
xlat
mov
clc
lahf
and
testb
xchg
mov
inc
pop
adc
and
mov
shlb
xchg
mov
mov
sbb
icebp
imul
sub
inc
int3
and
adc
push
dec
mov
mov
outsb
xor
add
testl
test
add
mov
daa
fisubrs
nop
xchg
jle
add
push
mov
lret
xchg
pop
dec
sub
and
or
xor
addb
mov
mov
ss
in
movsl
inc
jmp
dec
in
call
mov
outsl
pop
sbb
or
and
inc
mov
or
aad
rclb
mov
test
loope
pop
and
add
jmp
sub
lods
lea
pop
insb
xchg
arpl
jg
in
mov
xchg
dec
ret
inc
dec
mov
divb
loopne
xchg
mov
jo
pop
pop
and
stc
test
mov
mov
bound
test
xor
adc
cltd
add
out
mov
dec
mov
test
push
dec
cmp
add
push
dec
xchg
dec
sbb
jbe
cs
xchg
jecxz
push
lcall
inc
popl
dec
aaa
cmp
mov
sub
dec
dec
push
or
repnz
andb
or
ds
jne
jmp
cmp
xchg
xchg
lods
inc
es
pop
xchg
gs
lods
adc
mov
inc
sbb
fists
aaa
insl
je
icebp
ret
cmp
stos
jo
test
mov
pop
add
push
mov
pushf
push
movsl
jne
cli
arpl
add
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
jle
rclb
adc
sub
jmp
cmc
jae
lea
xchg
xor
push
pop
adc
je
dec
ds
add
sahf
leave
adc
sbb
dec
adc
pop
pusha
out
add
inc
stos
in
jmp
sub
sbb
ja
mov
out
inc
mov
or
xor
mov
add
out
call
sub
insb
clc
jecxz
imul
dec
sub
ret
leave
ficoml
in
enter
je
pop
sti
aaa
mov
ret
mov
mov
or
ds
pop
stos
nop
pusha
xchg
push
push
mov
push
push
mov
ret
or
add
jae
jmp
push
daa
pop
adc
lock
xchg
jnp
xor
cmpsl
mov
sti
movsb
push
sar
fcmovne
sbb
es
dec
repz
aad
xor
movsb
in
jb
push
into
scas
push
adc
and
mov
ret
sub
xchg
xor
jl
push
cs
mov
ret
push
or
jge,pn
addl
ja
sbb
push
adc
popa
pop
lds
sbb
sub
xor
arpl
xchg
sub
and
xchg
sub
in
in
test
sub
addr16
sbb
mov
pop
lret
fs
xchg
int
and
aam
vpcomd
scas
imul
jl
mov
mov
jp
inc
clc
loope
je
jl
xchg
cmp
and
inc
inc
insb
push
aam
sub
pop
ja
pop
adc
hlt
jmp
imul
jl
push
popa
lods
sub
imull
mov
hlt
scas
das
ljmp
or
jne
inc
mov
pop
xchg
xchg
or
inc
and
lea
mov
sub
and
jns
jno
adc
orb
jb
cmp
jp
loop
adc
les
add
and
sbb
repz
pop
push
mov
test
adc
adc
leave
push
adc
in
fcom
push
jo
mov
mov
sahf
call
push
xchg
mov
call
ret
mov
mov
add
loopne
fnsave
pop
int
daa
imul
jmp
fwait
push
xor
cwtl
test
popf
jne
fnsave
movb
add
dec
jecxz
jg
xchg
insb
sub
push
and
stc
dec
xor
mov
or
addr16
int
out
pushf
mov
int3
insb
lods
adc
push
out
xchg
test
mov
imul
sbb
xorb
test
cmp
sub
xor
jmp
dec
fcompp
iret
and
cli
inc
ficoms
mov
jg
xor
push
cmp
jno
out
test
cmpsl
arpl
test
adc
sbb
push
scas
fs
push
mov
daa
aad
jle
cltd
pop
aam
push
push
inc
mov
stc
pop
and
jns
jns
gs
cmp
mov
sub
mov
xchg
cmpsb
ja
mov
xor
inc
dec
dec
xlat
clc
mov
inc
in
mov
mov
fildll
cmpsb
in
sub
dec
insl
mov
mov
sbb
pop
pushf
ret
lea
sub
sub
iret
inc
test
and
jae
cmp
iret
out
xor
int
test
add
add
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
mov
adc
adc
inc
call
push
or
mov
sbb
popf
push
pop
cli
pop
pop
add
clc
mov
sub
je
cmc
add
dec
xchg
jae
xor
xchg
lock
shlb
cmpl
fsubrs
mov
and
movsb
pusha
outsl
sub
push
adc
arpl
cmp
jae
adcb
mov
inc
jle
jmp
xlat
xchg
fnsave
mov
hlt
or
xorl
inc
and
in
mov
mul
inc
mov
clc
into
clc
cmp
xchg
test
mov
push
fs
mov
inc
int
pop
jl
les
and
popa
cld
test
pop
popa
call
dec
xchg
inc
data16
cmp
outsb
jbe
das
cmpsb
jb
dec
xchg
add
jns
js
push
stc
int
pop
sub
push
and
xchg
mov
lret
jge
or
dec
inc
add
mov
data16
add
cmp
adc
push
iret
jg
popa
add
aam
push
out
bound
or
jl
popa
mov
push
out
les
jnp
lock
adc
les
sub
mov
inc
repz
popa
xor
add
rcl
inc
cwtl
xor
lods
dec
pop
aam
push
jmp
and
outsb
or
add
xchg
pop
pop
cltd
push
pop
lahf
iret
aad
push
xchg
jge
and
mov
xor
xchg
aam
dec
cmp
fmuls
cli
jne
cmpsb
iret
sbb
incb
dec
cmpsb
fisubl
movsb
dec
push
jl
cs
mov
or
jp
add
cmp
inc
loopne
push
outsl
sub
popf
mov
out
call
lcall
lcall
flds
leave
sub
ret
lock
xchg
int
add
pop
mov
jo
call
nop
testl
push
add
xor
not
mov
ljmp
or
mov
or
mov
nop
shr
pop
xchg
mov
lea
push
scas
xchg
xchg
je
push
rol
sahf
push
mov
dec
xchg
cmp
pop
xor
jecxz
and
jecxz
lret
push
nop
mov
pushl
dec
push
jmp
dec
sbb
cwtl
aam
pop
pop
test
pop
xchg
mov
call
xchg
enter
sarl
dec
fimull
stos
aaa
lahf
mov
cli
js
jnp
stc
lds
fidivl
inc
dec
addr16
and
sub
xchg
pushf
mov
cmpsb
sub
jae
add
pop
das
pop
inc
mov
and
lods
or
inc
outsl
pop
int
scas
leave
and
and
scas
outsb
pushf
sbb
out
pop
mov
push
incl
rcrb
cli
mov
icebp
cmp
add
xchg
ret
mov
jge
mov
sahf
repz
mov
mov
clc
xor
std
pusha
scas
mov
ljmp
add
sahf
xor
cmp
xor
mov
cmp
inc
and
into
push
dec
test
mov
xor
mov
mov
xlat
es
cli
cld
jmp
inc
in
in
push
push
cli
push
cwtl
jb
xlat
cwtl
sbb
insl
cmp
pcmpgtd
sbb
test
fs
cmp
and
test
mov
mov
loope
sbb
aaa
pop
andl
in
decl
roll
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
jo
cmp
in
imul
pop
adcl
xor
xchg
repz
ret
movsl
push
push
push
mov
sbb
lret
lcall
sbb
fucomi
pop
xor
scas
xchg
xchg
call
outsl
inc
rolb
cltd
mov
mov
movsl
adc
or
and
xor
scas
shlb
aas
lock
shll
int3
sub
dec
out
and
adc
add
shrb
sahf
stc
mov
in
or
or
xchg
pop
cmp
xchg
lahf
adc
mov
out
jp
fcoml
push
jp
mov
mov
enter
mov
insl
notb
fcoml
imulb
adc
ret
xchg
add
xor
incl
jl
mov
xchg
push
lods
fndisi(8087
add
and
arpl
push
xor
ror
ficoml
cmp
stos
add
cmc
xchg
es
pop
divl
ret
movsl
lcall
aaa
xor
fwait
mov
jmp
mov
adc
lea
gs
or
in
inc
popl
push
testb
xchg
jae
pushf
data16
ss
jl
shrl
mov
shl
rorb
sbb
lods
dec
fisubl
imul
sti
pop
pop
jmp
push
jl
lcall
inc
mov
call
xchg
or
mov
add
scas
lods
pop
dec
fwait
jno
add
or
movsb
shl
xchg
fwait
lcall
add
out
sarb
cwtl
sbb
push
test
sahf
int3
fistps
mov
sbb
push
lock
push
scas
arpl
mov
imulb
out
add
sbb
ds
xor
lds
mov
or
xchg
daa
pop
or
lods
add
jnp
fcoml
arpl
pushf
push
data16
in
pop
mov
inc
je
mov
lock
mov
lds
sbb
lods
data16
loopne
pusha
scas
jo
pop
add
into
sub
inc
mov
push
ja
push
pop
jb
mov
cltd
adc
xor
xor
insl
sub
fwait
repnz
mov
dec
lock
sub
cmp
pop
adc
gs
bound
test
roll
clc
imul
sbb
mov
cmp
cli
arpl
ss
fstl
add
sub
enter
sub
popl
inc
inc
test
mov
aaa
dec
mov
dec
mov
mov
mov
xchg
xor
jmp
rol
movsl
out
mov
push
icebp
les
jo
movsl
incl
in
xchg
loopne
lcall
pop
pop
sub
in
cmp
mov
xor
std
push
outsl
pop
in
out
inc
mov
fnstenv
dec
mov
cltd
aam
cmp
push
lcall
adc
mov
sub
cmpb
in
xchg
scas
jbe
loopne
mov
rcrb
xor
inc
js
movsb
cmp
mov
add
cmp
cwtl
xchg
pop
fwait
test
jb
shrb
lcall
jge
adc
lock
push
ds
in
or
aas
fsubs
rorl
dec
insl
out
popf
mov
cmp
mov
ret
inc
jecxz
call
or
bnd
or
add
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
movsb
mov
adc
push
loopne
out
aad
add
fnstcw
jno
sbb
std
out
stc
jno
cli
mov
lds
daa
int
jb
add
xor
jae
pusha
ret
lret
mov
imul
inc
outsl
in
push
lahf
xlat
repz
add
lods
jmp
or
mov
cld
daa
mov
inc
push
cmc
lods
push
push
mov
jno
daa
rorb
ljmp
shrl
cmpsb
fstp
aad
shll
aad
adcl
xlat
je
jbe
pop
mov
mov
jbe
add
iret
cwtl
pop
out
jl
xchg
xor
loop
dec
mov
mov
shll
mov
push
imul
gs
dec
ljmp
mov
ljmp
sbb
cmc
pop
fwait
inc
mov
mov
js
sub
out
sbb
or
insb
push
aad
add
and
push
mov
ds
cmpsl
sub
sub
lcall
sbbb
xor
adc
jg
cmp
mov
push
or
xor
cmp
sbb
or
mov
adc
cmp
in
imul
add
fistps
ds
or
cmp
cmp
xchg
or
into
aaa
add
inc
add
mov
sti
jl
iret
jg
dec
mov
sub
xchg
xor
outsb
ss
or
adc
jl
enter
xchg
xchg
xor
jge
mov
pop
gs
jae
and
jno
inc
lret
cmpsb
es
lahf
aas
mov
testb
fmull
add
shl
popa
xor
sub
mov
std
negb
sub
jp
cmc
adc
jecxz
aas
leave
jno
fwait
loopne
out
into
out
mov
ljmp
push
cmp
rcr
cwtl
insb
push
daa
scas
xchg
lahf
push
movsb
xor
lods
add
xchg
fmuls
jbe
mov
xchg
sbb
xor
mov
xor
jl
jmp
addr16
aad
int
test
xor
shl
mov
push
xor
or
dec
sbbb
clc
pushf
test
andl
gs
shl
sti
mov
hlt
jle
ss
int3
mov
jae
sub
fsts
xchg
adc
and
pop
jle
inc
jbe
xor
xchg
into
inc
jo
sub
add
loop
push
sub
rcr
push
dec
jmp
xchg
movsl
cmc
add
outsl
inc
jmp
ljmp
test
add
outsl
bound
sbb
xor
outsb
scas
testl
pusha
repz
push
pop
lds
out
iret
scas
iret
loope,pn
add
push
mov
xlat
aam
outsl
sub
leave
push
dec
repnz
jge
sbb
mov
inc
loop
shl
inc
and
add
in
xor
pushf
or
mov
dec
lods
mov
ljmp
popf
mov
nop
out
inc
ja
push
in
fistpll
mov
push
mov
shlb
dec
jb
insb
mov
in
adc
push
push
icebp
int
mov
push
rcr
ret
scas
pop
dec
std
cmp
iret
mov
mov
add
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
xchg
sbb
sbb
pop
fbstp
hlt
in
jo
lea
xchg
mov
cwtl
add
jle
xor
or
jnp
movsl
mov
jmp
stc
mov
lret
sti
jnp
xchg
mov
or
stos
loope
cmp
addl
and
fadds
xlat
loope
mov
out
push
pop
jle
sbb
add
mov
push
dec
push
aam
jns
fsubs
ret
sahf
pop
add
lds
cmpsl
mov
movsl
add
mov
mov
or
lcall
or
jns
cmpl
imulb
mov
loop
pop
mov
sti
pop
popa
mov
inc
sub
jb
leave
or
mov
out
dec
test
jl
cmpsl
insl
lret
loopne
ror
imul
mov
dec
loope
in
loop
ds
es
mov
lret
aaa
clc
addb
xchg
xchg
fistps
pop
scas
icebp
jle
xor
sbb
test
icebp
mov
enter
xchg
out
xor
inc
cmpsb
in
xchg
jle
cld
les
clc
add
dec
sbb
outsb
adc
dec
outsl
cld
or
arpl
fiadds
int
mov
cmp
push
or
mov
rclb
adc
xchg
leave
sub
cld
sbb
dec
psllq
jae
insl
fstps
push
testb
loope
in
loopne
mov
mov
cltd
sbbb
jmp
jbe
icebp
adc
jno
loop
imul
xchg
push
aam
in
add
jne
jb
outsl
lods
sub
int
push
popf
inc
and
mov
aam
test
orb
push
in
movsl
mov
shll
aaa
xlat
jecxz
bound
push
mov
cmp
add
stc
cld
pop
sbb
pop
mov
sub
rolb
cmp
pop
popf
adc
xchg
push
push
add
aaa
jb
dec
call
andl
in
inc
xchg
cmpsl
dec
inc
dec
aas
sub
xor
and
sub
mov
adc
into
push
jl
inc
push
add
push
adc
push
ror
leave
movsb
dec
dec
push
imul
xor
adcl
mov
lahf
int
xchg
es
sbb
je
mov
loop
push
jno
fstpl
mov
out
mov
jns
cmp
stos
jno
cltd
or
xchg
ret
mov
in
int3
cli
mov
ss
mov
and
pop
mov
adc
ljmp
bound
mov
outsl
dec
fdivl
mov
push
movsl
inc
test
dec
or
adc
or
adc
add
pushf
popf
mov
dec
add
test
mov
pop
jmp
pusha
jl
push
stos
cmp
repnz
dec
fisubs
adc
mov
pop
call
dec
push
pop
jle
rolb
cmp
data16
pop
iret
out
jb
rorl
in
nop
repz
hlt
xlat
shl
or
std
xor
dec
loop
ss
mov
inc
jno
aad
sbb
adc
mov
pop
in
sub
or
mov
and
call
cs
add
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
out
popa
mov
adc
adc
push
xor
or
repnz
insb
mov
cltd
sbb
or
lods
roll
ja
roll
aad
cmpsl
aas
mov
pop
mov
sub
pusha
dec
mov
xchg
cwtl
or
and
adc
int
test
dec
cmpl
ds
mov
pop
out
dec
xor
hlt
out
inc
cmc
push
loopne
mov
insb
or
pop
xchg
jg
enter
cs
jns
sub
andl
sub
mov
push
xchg
push
loope
push
push
push
jle
rol
in
add
cmc
sbb
mov
aas
clc
negl
popf
insl
movsl
jb
mov
popa
jnp
std
push
into
sub
rcll
cmp
pop
int
aad
lret
je
push
stc
popa
shll
das
scas
pop
scas
mov
fcmovu
lret
dec
pop
cmpsb
jnp
mov
xor
fldl2t
push
imul
loop
push
enter
push
sar
fadd
inc
add
test
repnz
jmp
push
inc
in
cltd
inc
mov
or
push
call
push
ror
arpl
adc
pop
cwtl
dec
sub
pop
les
mov
lcall
mov
xor
adc
adc
test
aas
and
outsb
mov
xchg
add
pop
clc
xchg
outsl
pop
pushf
dec
ds
mov
inc
mov
mov
dec
jp
adc
jo
push
rclb
mov
jns
in
mov
flds
lret
les
rclb
or
test
mov
inc
cmpsb
sub
mov
cmpl
push
pop
lret
lds
loop
cltd
imul
stc
dec
xor
add
bound
scas
sarb
call
dec
cwtl
fldcw
ja
xchg
pushf
sub
jle
xchg
gs
mov
cmp
inc
imul
cmp
mov
insl
push
ljmp
jo
push
int3
cmp
fcomip
lret
dec
jno
shlb
js
cmp
mov
insl
sahf
cmpsl
leave
andb
call
sub
cmp
push
jmp
je
daa
neg
pop
into
mov
into
push
push
xchg
gs
dec
loopne
lds
pop
lods
add
in
das
add
jle
out
adc
out
mov
cmpsb
jle
add
xor
jb
stos
push
adc
add
xchg
fcmovb
jl,pn
in
movsl
shrl
out
dec
and
rorl
xchg
xor
fwait
insl
mov
cmp
call
mov
sbb
out
pop
xchg
mov
dec
or
cmp
jbe
in
pop
sbb
cmp
add
cli
loope
adc
rol
sub
mov
cld
xchg
jae
ret
pop
lods
xlat
inc
or
mov
mov
fwait
dec
ja
mov
aam
xor
sbb
scas
jge
out
sbb
push
outsb
iret
push
adc
cmp
lret
cwtl
sahf
test
sub
jecxz
push
and
mov
lods
or
roll
adc
cmp
dec
es
sub
idivl
mov
pop
add
arpl
dec
mov
jo
std
call
inc
push
pusha
dec
dec
jns
fsub
jne
nop
in
add
push
add
dec
mov
dec
addr16
mov
push
or
fsubr
jo
test
test
pushl
xor
jmp
or
mov
mov
mov
shll
mov
adc
adc
je
xor
in
push
movsb
jecxz
sarl
or
mov
leave
cmp
sub
test
push
movsb
cmp
mov
xchg
mov
mov
cwtl
les
outsl
jb
jle
adc
push
mov
scas
in
sbb
inc
fnstsw
pop
lretw
adc
bnd
sub
out
jbe
nop
xchg
scas
jle
pop
push
movb
mov
xchg
cli
movsl
dec
push
lds
xor
jb
sub
add
ds
xchg
ljmp
mov
inc
sub
mov
sbb
jmp
xchg
xchg
leave
dec
sub
mov
cmp
incl
sub
cltd
and
lcall
fildll
leave
test
fists
hlt
arpl
sbbl
dec
hlt
push
inc
ret
sbb
ss
outsl
push
mov
pop
push
scas
add
scas
or
sbb
ret
add
push
in
sub
movb
cmpsl
call
and
lcall
repz
pop
sbb
mov
or
mov
test
mov
add
addr16
mov
ljmp
fcmove
lret
mov
jle
les
mov
xchg
pop
and
dec
pop
and
fistps
or
pop
aaa
scas
xchg
push
pop
es
pop
xlat
add
cmp
mov
cmp
sbb
popf
notl
xlat
jge
enter
pop
and
je
inc
xor
cmpsl
pop
xor
sbb
mov
dec
ds
or
push
mov
mov
stos
ja
mov
lods
mov
sub
je
jp
je
push
out
stos
xor
repz
pushf
lods
mov
mov
adc
jecxz
sbbb
fisubrl
adcl
inc
push
and
fsubl
lcall
in
and
es
insb
int
inc
and
cmpl
subl
mov
xor
sbb
rorb
pop
out
or
rolb
cmpsl
push
pop
pop
hlt
pusha
jmp
lahf
mov
cmp
mov
ret
inc
sbb
xchg
cmpsl
je
aaa
add
and
rcr
hlt
add
sarb
out
xor
test
mov
push
in
and
stos
push
popa
inc
add
inc
jbe
adc
xchg
imul
cmpsl
or
sub
sub
fnstcw
hlt
sbb
shr
adc
jbe
xchg
mov
aas
out
sbb
out
sub
mov
cmp
sub
dec
or
ljmp
dec
lret
stos
int3
mov
inc
rorl
repnz
and
lods
xchg
out
inc
mov
testl
ds
push
out
je
add
mov
sub
or
jno
lea
in
inc
push
sub
cmp
scas
ret
push
addr16
xchg
push
xchg
mov
in
dec
les
pop
fldcw
jns
cmc
dec
movsl
or
cwtl
pop
ror
cmp
movsb
stc
cmp
mov
mov
fstpt
fsubrl
push
dec
inc
lock
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
mov
stos
adc
adc
push
ljmp
aam
outsb
mov
cmpsl
mov
sbb
sbb
mov
ret
ljmp
sbb
pop
adc
out
stos
insb
mov
int
lea
cli
sbb
icebp
push
enter
into
loop
push
mov
sbb
dec
mov
cld
pushl
xor
test
popf
or
jne
das
aas
push
inc
fcmovne
xchg
out
xchg
arpl
or
pop
outsl
inc
fstpl
or
xor
js
popf
mov
bound
or
out
in
push
clc
outsl
xor
cmpsl
movsb
adc
jne
push
jae
inc
mov
sbb
into
or
adc
xchg
xor
pusha
or
test
dec
cwtl
dec
repnz
mov
ljmp
int3
xchg
jns
rcrb
push
sbb
jg
pop
ja
mov
aam
insb
jno
and
popf
sbb
out
cmpsb
jecxz
mov
rorb
push
and
dec
mov
daa
dec
lahf
pop
scas
sub
sub
aad
and
nop
jnp
inc
mov
pop
sub
mov
leave
mov
enter
scas
test
cmp
jne
push
loope
jecxz
inc
xor
pop
push
or
movsl
inc
rcrb
mov
bnd
mov
xchg
aaa
dec
mov
stos
test
push
jbe
cmp
and
jecxz
scas
xchg
mov
icebp
dec
pop
scas
jg
test
jns
jge
jbe
xchg
push
xchg
adc
jne
aam
and
out
fisttps
and
lret
sti
filds
addl
mov
mov
stos
ucomiss
xchg
dec
sbb
cs
or
dec
repnz
mov
jg
jmp
cmc
xor
push
jmp
outsb
inc
rcr
sub
xor
leave
lods
nop
std
sahf
jns
xor
sbb
sbb
clc
cmp
sti
repnz
test
rol
pop
call
sbb
out
stos
fcom
xchg
dec
push
xor
push
mov
std
lret
out
push
loopne
pusha
std
xchg
push
and
lahf
sti
ss
popa
aam
shlb
fsub
cmc
fwait
or
leave
std
jo
je
addb
in
int3
xchg
add
rcrl
sbb
or
in
outsb
inc
mulb
arpl
mov
jg
das
cmpsl
cmpsb
lods
or
js
daa
movsb
in
pop
mov
xor
jne
lods
pop
rorl
data16
aas
mov
jge
and
test
mov
es
clc
mov
push
sub
mov
popa
mov
adc
push
outsl
jae
shrl
je
into
mov
movsb
add
cmp
add
in
mov
scas
icebp
loopne
ror
push
cmpsb
enter
ds
stos
decl
out
ss
nop
enter
xchg
ret
sub
xor
sub
fisttpl
jle
pop
jb
xor
jle
mov
mov
out
test
add
lods
push
shlb
jb
sub
icebp
in
lds
fists
push
and
add
dec
int3
insb
ja
mov
les
adc
jne
fwait
cli
jp
mov
or
cmp
cmc
es
insl
cld
adc
nop
loop
and
enter
mov
stc
popf
rep
test
into
mov
call
stos
repnz
push
mov
jecxz
adc
dec
pop
pop
int
neg
mov
pushf
jmp
jge
jmp
cmp
mov
js
lcall
stos
adc
adc
jo
bound
push
pop
and
mov
daa
xchg
in
repz
test
mov
mov
sub
in
fsin
mov
fsubrs
mov
stc
or
mov
mov
jge
pop
sub
or
int3
adc
aam
adc
jg
ljmp
stc
adc
leave
gs
insl
enter
sub
test
add
in
sub
dec
mov
ljmp
pusha
out
mov
hlt
rclb
insb
dec
adc
mov
xchg
dec
fwait
mov
test
imul
popf
leave
push
lds
xlat
mov
mov
test
aaa
pop
lret
addb
push
sti
popf
add
pop
stc
icebp
lds
stos
mov
cmp
ljmp
push
cli
scas
and
mov
fdivp
jge
inc
pop
insl
mov
jmp
cmp
fisubl
mov
adc
call
les
jo
and
cmp
cli
out
in
roll
xlat
in
dec
cmp
fsts
pop
cli
xor
adc
push
mov
repnz
mov
sub
pusha
mov
xchg
xor
or
in
fs
add
pop
rcrb
ss
lods
push
xor
adc
adc
xor
or
lcall
jecxz,pn
cvtps2pd
mov
adc
scas
pop
aas
jno
adc
push
jp
nop
or
push
fidivl
xlat
adc
cmp
sbb
fdivp
loopne
aas
fwait
xor
addr16
hlt
pop
xchg
lds
lea
and
nop
repnz
push
or
ss
xor
inc
xor
faddl
inc
outsb
js
mov
sahf
cs
mov
shll
ss
cmpsl
clc
and
add
inc
pop
jmp
add
cmpb
push
js
push
repnz
sub
push
sub
cmpsl
dec
test
jae
mov
ss
mov
mov
add
movsl
xchg
sub
outsl
and
dec
jbe
mov
jae
cmc
inc
addr16
xchg
stc
filds
popa
mov
adc
and
enter
mov
dec
ret
imul
fcmovne
inc
mov
stos
jno
sub
xchg
lcall
mov
cmp
mov
into
cmc
rcll
push
pop
iret
mov
ja
adc
adcl
js
pop
outsb
mov
int
loopne
cmc
mov
les
xlat
ss
pop
push
sub
std
into
xchg
dec
inc
xlat
loop
mov
imul
cmp
out
icebp
mov
enter
and
and
mov
jne
in
dec
add
nop
push
icebp
mov
push
sbb
cmpb
mov
int3
sbb
out
push
pop
lcall
cwtl
rcl
lods
mov
inc
xchg
push
roll
mov
lea
push
sbb
stc
test
popf
add
mov
bswap
adc
in
out
and
mov
stc
inc
jnp
loop
add
mov
out
or
in
dec
jl
stos
mov
sub
scas
inc
sbb
aam
inc
inc
ja
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
nop
js
xchg
adc
adc
movsb
sbb
jl
jecxz
out
dec
aaa
dec
testb
push
inc
popa
out
ret
mov
out
mov
mov
and
popa
js
xor
xor
scas
mov
mov
in
add
stos
adc
push
or
dec
rcr
add
pop
cli
pop
ss
and
lret
push
js,pn
fcoms
cmp
push
inc
cmp
dec
mov
test
daa
mov
rorb
dec
inc
mov
pop
pop
in
shr
pop
int
mov
cmp
xchg
aam
pop
jns
xchg
clc
int3
sti
sbb
push
or
setae
repz
inc
xor
stos
or
lret
inc
jno
inc
in
mov
fstpl
outsl
xor
mov
xchg
repnz
jno
mov
mov
popa
mov
sbbl
push
sub
dec
add
cli
xchg
movsl
or
adc
xlat
fwait
pop
icebp
lcall
mov
or
loop
cltd
cmc
push
pop
xor
int3
pushf
jno
mov
dec
cmp
pop
xor
push
fimull
mov
int3
and
cs
ljmp
jb
test
fwait
sahf
sbb
jbe
xor
lahf
xchg
jns
mov
repnz
sahf
gs
cmp
jle
ret
test
nop
dec
jnp
imul
sub
stos
std
add
sub
sbb
sbb
dec
mov
sub
jecxz
out
cmp
inc
dec
fildll
popa
fprem1
stos
inc
pop
enter
pop
dec
insl
lods
lods
addl
push
and
mov
xchg
mov
sti
sub
jae
add
or
lds
jb
push
pop
push
push
push
stc
jnp
sub
mov
jne
out
popa
test
or
dec
mov
vmovd
fs
sbbb
cli
dec
inc
dec
push
ret
cmp
push
and
mov
dec
aas
xchg
push
and
mov
push
sbb
jge
jg
jns
dec
xchg
xchg
xchg
arpl
sub
imul
mov
inc
filds
test
dec
pop
inc
xchg
add
adc
scas
mov
mov
repnz
pop
adcl
mov
add
xchg
xor
shrl
pop
jg
adc
loope
inc
lret
mov
and
es
testl
ss
inc
cmp
dec
or
rorl
xor
loopne
adc
lahf
sbb
fmuls
add
insb
mov
xor
out
push
ljmp
fsubs
test
sub
rcrl
int3
mov
cmpsb
sarl
fcmovbe
shrb
xchg
daa
pop
aad
ret
int3
or
iret
mov
inc
cmpl
push
cmpsb
rcrb
imul
pop
inc
cmp
mov
pushf
mov
sbb
xchg
mov
mov
pop
and
stc
mov
dec
fldl
fadds
andb
cmp
inc
push
or
test
push
dec
cli
push
push
lahf
imul
leave
dec
pop
lds
cli
add
jl
and
adc
decb
sub
pop
test
aas
repz
lock
jne
sbb
jp
pop
mov
adc
dec
dec
push
and
xor
mov
jmp
sahf
pop
pop
adc
lahf
sbb
mov
stos
adc
adc
dec
mov
dec
in
fwait
xchg
rcl
repz
mov
in
and
sub
jae
lahf
fwait
sbb
xorb
sub
cmp
enter
mov
nop
mov
cmp
shlb
andb
int
mov
icebp
mov
sub
arpl
xchg
jle
mov
cmp
data16
jo
in
sti
sub
xor
fcoml
rorb
ret
pop
js
dec
dec
push
xchg
cmpl
orb
out
scas
in
std
arpl
push
ret
push
sub
xchg
sub
loope
lock
adc
mov
rcll
inc
inc
dec
popf
lock
stos
out
pusha
mov
leave
xor
leave
push
ja
in
mov
push
int3
cmpsl
dec
aad
mov
stos
movb
jp
pop
and
jo
mov
int
cmp
clc
lock
imul
and
out
pop
xchg
adc
mov
popa
pop
inc
adc
aad
sub
loop
push
aam
loop
iret
xor
fs
push
inc
punpckhbw
mov
pusha
dec
push
inc
mov
fs
mov
shrl
add
test
and
sub
imul
call
mov
popf
mov
stc
or
repz
rcrl
sti
mov
in
mov
mov
pop
push
imul
lock
mov
pop
xor
bound
in
mov
test
xchg
mov
pop
xchg
ds
stos
test
lods
fmull
scas
mov
std
pop
push
jp
xchg
mov
cli
cmc
test
pop
mov
sbb
or
xor
rcl
gs
lea
imul
cmp
cmp
out
jno
aas
ss
mov
aaa
mov
lods
in
popa
add
push
sub
dec
pop
rorb
std
push
adc
fildll
cmc
shrl
out
fdivl
xchg
or
inc
jo
inc
leave
mov
mov
and
aam
jbe
pusha
nop
mov
cmc
mov
cmp
leave
std
dec
mov
add
pop
push
fsubl
jmp
add
jp
insl
rorl
jmp
fsubrl
xchg
xchg
stos
and
xor
xchg
push
sbb
addr16
subb
push
sub
inc
mov
dec
out
lret
bound
mov
xor
pop
cs
add
aaa
cmovo
pop
pop
repnz
scas
xchg
and
out
jns
scas
inc
pusha
leave
pop
lods
aaa
cmpsb
incb
push
pop
in
out
dec
stc
xor
sub
sbb
mov
xchg
adc
mov
dec
pop
push
xchg
movsb
xchg
xchg
out
repz
out
sub
cltd
xor
lret
das
in
imul
mov
inc
jmp
jae
and
nop
adc
mov
jb
mov
shlb
negb
sbb
adc
xchg
jbe
subb
fistpl
or
das
inc
xlat
sbbl
subb
xor
jnp
mov
cmp
sub
mov
xor
in
sbb
pop
test
and
push
cmp
lret
dec
test
dec
test
rcrl
movsl
mov
js
jl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
sarb
adc
adc
sbbl
mov
sarl
into
jns
mov
inc
addl
jp
nop
jnp
addl
std
pop
push
xor
in
outsl
pop
jge
inc
mov
and
mov
push
jno
sbb
gs
push
sahf
cmp
ds
fucomi
rcrb
stos
ret
cmp
rolb
adc
ret
and
cmc
or
sub
jbe
xchg
jbe
stos
icebp
cs
mov
fstl
pop
adc
aaa
sahf
mov
xchg
in
sub
jl
xchg
pushf
mov
push
fnstsw
xchg
int
mov
and
add
and
lret
int3
repz
sub
loope
dec
push
shrl
push
pop
fdivrl
and
pop
fs
mov
les
clc
cmp
ss
inc
adc
pop
push
mov
pop
xchg
mov
cli
mov
sub
xchg
mov
fildll
out
test
add
xor
stos
jl
or
inc
pop
jmp
pop
lret
cmc
ret
add
mov
ficompl
sub
mov
cmp
xor
jnp
and
adc
lea
gs
jl
jecxz
cmp
shrb
mov
stos
test
mov
xchg
push
cli
repnz
mov
add
lret
enter
fmul
insb
or
inc
lods
mov
out
cmpsl
inc
jp
stc
cmp
xchg
inc
mulb
popa
sar
mov
orb
add
fsubl
aaa
test
test
nop
js
js
ja
fcomps
xchg
jge
jae
arpl
mov
outsl
test
outsb
fadd
mov
sub
outsb
pop
dec
divl
xor
aam
mov
xchg
bound
and
ret
fsubrp
sbb
notb
jae
call
dec
psraw
adc
les
push
test
or
add
add
push
inc
push
cmp
xor
cld
cli
clc
jle
in
bnd
fcoml
daa
mov
fdivrl
div
fwait
jl
xor
or
cmpsb
lea
push
jg
fnstcw
out
or
mov
pop
and
js
pop
sub
lods
std
mov
mov
jnp
adc
bound
ljmp
mov
sbb
cmp
pusha
sbb
jl
fwait
in
addr16
sbb
cwtl
movsl
lret
mov
pop
incb
gs
lahf
mulb
mov
xchg
lret
jae
jb
dec
mov
jge
adc
sbb
add
fidivrs
decl
and
mov
xchg
dec
add
notl
push
fdivrl
enter
in
cmp
lcall
scas
push
adc
int3
lret
rorl
xchg
notb
orl
xchg
mov
fistpll
ljmp
xchg
ljmp
add
and
add
push
scas
cld
loopne
jb
pop
les
stos
jl
sub
push
hlt
inc
lret
in
pop
xchg
mov
sub
ljmp
sbb
testb
mov
push
mov
iret
sti
notl
pop
inc
ja
cmpsl
add
in
shll
cs
push
fnstenv
jnp
pop
sub
mulb
lea
icebp
sahf
lcall
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
sub
adc
adc
dec
xor
mov
xor
popl
insl
sti
mov
xchg
jmp
inc
addl
sub
insl
popa
xor
push
sub
daa
dec
pop
mov
jbe
hlt
mov
inc
shll
xchg
mov
movsl
filds
lcall
aad
cs
bnd
stos
cltd
lods
roll
pop
pop
stos
push
jle
push
xchg
jae
div
shr
pop
movb
and
mov
mov
enter
cmp
or
cmpsb
pop
xlat
push
leave
jmp
je
fmul
cmp
es
push
rcrb
add
mov
push
test
sub
rcl
pop
lahf
mov
sbb
lods
xchg
sub
test
out
and
in
rorb
sahf
mov
je
fdivrl
mov
loop
in
jae
lret
popf
mov
dec
push
mov
ds
out
jg
incb
insl
sahf
or
inc
scas
pop
loope
out
push
int
dec
mov
mov
les
jo
stos
add
movsb
fadds
or
push
call
xchg
call
aam
sbbb
cmp
or
jns
out
adc
push
enter
sti
push
fsubrl
add
mov
jns
inc
sub
mov
dec
fldl
lods
push
in
jp
lock
cmpb
mov
cltd
out
fiaddl
scas
in
std
enter
inc
jmp
scas
sub
mov
push
sub
stos
call
mov
inc
xchg
mov
loopne
into
repnz
out
add
push
scas
fidivrl
jne
or
imul
lea
cmp
scas
xchg
sti
rolb
pop
adc
jmp
jnp
hlt
clc
add
jns
leave
in
xor
cs
dec
imul
rol
lahf
imul
pop
popf
popf
jg
sub
jo
adc
iret
mov
cs
int3
mov
xchg
and
sbb
push
adc
gs
lock
std
sbb
dec
push
iret
and
add
and
orl
sbb
in
clc
call
aam
frstor
or
or
mov
cmpsl
xor
test
mov
or
dec
aam
and
in
xchg
repz
rorb
imul
jmp
lds
pushf
jle
sub
adc
out
sar
fnstcw
push
imul
imul
jae
out
roll
in
in
jbe
lock
mov
xchg
or
xor
and
sub
je
lret
cmp
add
cmp
mov
xchg
test
sub
lock
lea
sub
or
bound
mov
js
push
imul
inc
pop
mov
cmpsl
imul
push
call
or
ficomps
sbb
and
inc
out
pop
lret
and
aas
lds
add
mov
mov
add
add
jbe
adc
cmpsb
adc
icebp
leave
jno
ja
sbb
shl
std
sbb
jne
mov
and
xchg
lods
xorb
pop
inc
cwtl
inc
clc
push
push
cmpsb
ss
stos
sbb
add
mov
add
lods
ds
add
or
ss
aaa
or
or
and
jne
adc
inc
mov
mov
jmp
mov
clc
mov
sub
jle
repnz
stos
adc
adc
adc
mov
pop
pop
lahf
add
add
mov
inc
aad
push
inc
int3
in
dec
xor
inc
outsl
stos
fbstp
mov
jl
or
loop
ljmp
test
sbb
jae
mov
cltd
mov
xor
movsb
add
pusha
arpl
xor
sub
sub
pop
rcr
test
or
sar
or
imul
push
lret
adc
adc
and
movsl
jge
or
pop
jmp
dec
xor
dec
push
push
out
pop
inc
rcl
mov
inc
in
out
mov
xor
pusha
fldcw
jl
cs
bound
mov
sub
xor
daa
pop
iret
mov
push
inc
repnz
popf
xor
outsl
and
hlt
push
std
mov
cld
push
jnp
inc
jnp
test
xchg
lret
dec
cmp
mov
mov
xorb
ret
fdivr
in
adc
cs
sbb
fcom
insl
and
rolb
mov
push
adc
jne
mov
jge
scas
and
repz
cmp
popf
out
push
inc
inc
pop
lahf
adc
cmpsl
push
and
movsb
jmp
xchg
pop
pop
xchg
mov
xor
les
lock
xor
jb
jns
and
xchg
xor
test
jnp
dec
mov
xchg
iret
fwait
scas
outsl
loope
mov
in
push
sbb
fmull
xchg
adc
xchg
test
adc
jb
add
and
into
mov
or
lock
into
movsb
fdivl
and
dec
fnsave
das
push
sub
pop
jns
xor
in
movsb
push
rclb
psraw
imul
cmpsb
mov
ljmp
push
jns
add
or
jecxz
inc
popf
imul
imulb
inc
jle
lods
mov
dec
shrb
jne
push
add
sbb
jno
std
pop
push
clc
cmpsb
das
cmp
mov
push
sub
mov
dec
mov
mov
cmp
shll
jo
or
sbb
push
insb
movsl
inc
pop
gs
cmpsl
icebp
out
leave
and
inc
pop
adc
cmc
rolb
subl
fdivrl
mov
mov
add
pushf
mov
push
cmp
fisubl
mov
mov
fdivr
push
in
mov
cmp
jno
mov
push
cmc
clc
rcll
incl
call
pop
sarb
pusha
aam
dec
clc
push
pushf
inc
push
mov
lret
int
or
into
jle
pop
jg
push
mov
lods
inc
dec
sahf
movsb
mov
mov
loop
xchg
imul
imulb
pop
add
add
test
add
xchg
lret
call
cmp
xchg
test
or
or
push
rcrb
incb
add
repnz
dec
ja
mov
sahf
xchg
jge
mov
test
push
std
outsl
rdtsc
sub
sti
pop
arpl
sbb
and
cmpsl
xchg
in
imul
js
mov
jle
and
inc
push
sbb
aad
std
rolb
cli
mov
mov
pop
cmp
aam
xchg
movsl
dec
inc
sub
mov
xor
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
push
notb
push
push
adc
dec
and
mov
loope
lcall
fcmovb
dec
addl
adc
jmp
lret
cltd
sub
flds
dec
imul
cmp
adc
mov
je
inc
push
adc
cmp
mov
cwtl
mov
aas
dec
push
adcl
mov
mov
mov
pop
jmp
aas
pop
dec
test
fucomi
addr16
mov
loopne
pusha
lret
lock
add
xor
pop
repnz
imul
mov
mov
outsl
xchg
or
mov
mov
sbbl
in
cmpsb
sbb
inc
xchg
mov
imul
and
push
jg
jb
push
push
sbb
or
adc
lock
xor
insb
mov
icebp
push
ljmp
fcompl
xchg
push
adc
pop
daa
xlat
inc
push
les
cld
pop
sbbb
aas
scas
sbb
std
test
push
mov
jmp
imul
icebp
iret
or
je
dec
jae
movsb
aad
xchg
xchg
insb
lret
sbb
add
popf
sbb
xchg
and
loop
jmp
sub
adc
dec
push
cli
cld
fildll
inc
sub
jl
jae
test
xchg
and
ret
cld
inc
aas
xchg
sti
and
into
divl
stc
rorb
xchg
aas
enter
call
outsl
scas
add
ficoml
mov
ret
ror
in
pushf
mov
pop
jecxz
inc
ja
pop
pop
inc
sbb
outsb
pushf
or
inc
xor
insl
push
fidivrl
inc
xchg
xchg
imul
push
jno
cli
mov
xorw
and
cmp
cmp
jno
loopne
or
add
push
dec
imul
sub
insl
scas
imul
dec
mov
mov
sbb
inc
cli
out
repz
and
and
add
ret
pop
sub
fdivl
add
mov
mov
into
shl
inc
js
pop
cmp
xlat
mov
test
sbb
sub
mov
into
dec
push
lods
fistpll
jp
xchg
or
lret
jo
mov
adc
nop
repz
jmp
add
xor
mov
hlt
lret
mov
push
leave
mov
dec
imul
flds
mov
fisubs
std
fcmovne
fsubrl
sar
xchg
lret
push
fistps
mov
xorl
test
add
xchg
sti
js
jmp
mov
add
xor
cmp
stos
pop
jge
dec
cmpsl
lock
push
push
jl
out
fnstsw
sub
pop
nop
and
mov
xor
pop
aaa
es
rclb
call
pop
xchg
sbb
mov
or
mov
sub
sbb
push
es
addr16
xor
mov
xchg
mulb
in
sbb
mov
inc
jge
lock
in
neg
cld
pop
daa
or
sahf
aam
mov
es
add
mov
jae
out
push
adc
mov
add
lcall
addb
inc
loop
addr16
loop
cwtl
repnz
sub
xor
adc
imul
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
pop
ljmp
mov
pop
js
orl
push
xor
insb
pop
jle
push
or
mov
xor
jne
aaa
and
xor
test
or
sub
cld
sub
bound
aad
mov
ja
fistl
jns
push
and
fstl
jbe
lods
int
sub
std
cltd
mov
cmpsl
popf
mov
out
movsl
stos
xchg
mov
popf
scas
jg
push
push
sub
sub
pop
sarl
mov
out
jo
lcall
decb
or
outsb
jbe
cmc
les
and
nop
cli
push
mov
or
popl
data16
dec
stos
pop
dec
jecxz
or
gs
sub
pmulhw
fs
shrl
pop
cmc
inc
jno
out
test
stos
mov
dec
add
pop
test
cmc
cmpsl
les
std
cmp
les
dec
insb
mov
pop
out
jo
popf
daa
push
dec
inc
aam
repnz
jne
xor
push
imull
sub
idivl
repnz
neg
adc
mov
das
mov
js
ror
or
repz
dec
adc
sub
inc
adc
pop
aaa
jns
shrb
popf
mov
notl
jg
mov
add
aas
mov
jp
subb
adc
ror
lods
lods
ret
lcall
orb
dec
pusha
fs
xchg
aam
shlb
into
lock
push
add
jl
lds
mov
mov
fiaddl
mov
push
push
xor
adc
fnstcw
jl
and
push
cmp
mov
jg
mov
sbb
jle
ret
jns
jbe
jle
clc
cwtl
mov
std
icebp
stc
push
mov
and
dec
xchg
or
movsl
mov
in
scas
and
xchg
cmp
add
repz
fadd
aas
in
insl
daa
call
dec
xchg
ljmp
sbb
data16
or
mov
icebp
lods
cwtl
scas
fsubrs
add
jecxz
jo
outsl
xor
inc
sbb
int3
loop
decb
or
or
sbb
cmpsb
lret
push
dec
sub
fs
mov
cs
je
aaa
hlt
pop
push
lock
jae
je
shrl
push
es
shlb
inc
inc
lods
repz
repnz
push
mov
pop
pushf
xchg
sbb
xor
bnd
sub
adc
inc
in
push
jne
xchg
push
call
negl
je
inc
inc
rolb
cltd
mov
jmp
or
sbb
cs
dec
push
dec
pushf
mov
push
clc
fsubs
mov
fs
bound
xchg
mov
pop
loopne
cwtl
mov
jae
cmpsl
stos
sub
repnz
mov
xchg
adc
mov
push
in
pop
jno
pop
pop
insl
sbb
pop
xchg
fbld
insl
inc
insl
xor
scas
stos
mov
pop
jo
inc
and
hlt
clc
in
cld
sub
and
out
insb
stc
sub
mov
inc
xchg
in
clc
mov
pusha
or
arpl
repnz
fnstsw
imul
and
adc
lea
fists
icebp
insl
and
in
imul
sbb
xchg
push
inc
lcall
jnp
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
xlat
out
sbb
adc
dec
hlt
sbb
sbb
add
stc
mov
mov
cs
mov
movsl
enter
mov
lcall
and
push
xchg
sbb
dec
imulb
inc
fisubs
shlb
shrb
mov
es
test
sti
punpckhdq
mov
mov
mov
adc
pop
dec
xor
jb
sahf
test
repnz
mov
and
push
jmp
and
pop
jbe
nop
es
push
outsl
sub
add
jbe
pop
lret
aas
cmp
arpl
fidivs
nop
push
push
decl
cmpl
insl
rcrb
xchg
xor
sbb
mov
and
cmp
xlat
jns
xchg
std
cmp
aas
test
xchg
std
mov
repnz
cli
xchg
sbbb
lea
sti
in
and
insl
pop
ss
rcll
leave
gs
mov
mov
pop
int3
dec
xor
dec
clc
insb
imulb
add
push
rcrb
bound
mov
out
ja
xor
shll
pop
push
jg
adc
je
mov
in
lret
mov
fimuls
jmp
inc
fistps
idiv
xor
jle
aaa
and
mov
add
out
xor
jge
pop
jbe
lahf
ja
jbe
lods
scas
xadd
sub
scas
inc
es
rorl
je
movsb
sub
mov
clc
mov
add
jge
aam
push
mov
inc
cmp
pushf
rorb
add
sub
mov
sub
push
rclb
mov
inc
inc
push
mov
jns
xchg
daa
add
inc
cld
cs
add
jg
push
add
fbstp
xor
sub
int
dec
test
sub
scas
sub
adc
in
mov
addr16
gs
out
and
push
bound
dec
mov
xchg
notb
mov
pop
xchg
repz
popf
insb
push
mov
adc
jmp
inc
mov
inc
cmp
aaa
imul
mov
xchg
fcomps
imul
xchg
sub
xor
pop
or
movsb
push
sbb
add
xor
fnsave
cs
ljmp
sub
push
dec
imul
jnp
and
pop
nop
push
mov
and
lock
outsb
fmull
popl
add
xlat
rcll
sahf
mov
test
xchg
adc
xchg
cmp
inc
push
fcompl
out
xchg
lods
shll
xor
pop
movsl
xor
add
in
cltd
sub
mov
fwait
jno
add
mov
mov
lock
xor
aam
in
fwait
rorb
popf
int3
or
ficompl
enter
lock
iret
popa
jne
leave
xchg
stc
xor
ss
dec
pop
pop
pop
movsl
push
sbb
inc
mov
ret
scas
sbb
shl
ret
mov
pop
cltd
ret
sbb
cmp
adc
int3
shll
testb
dec
xchg
daa
data16
mov
mov
aas
sub
imul
scas
ds
ret
arpl
cwtl
sub
mov
mov
sub
xlat
nop
arpl
jmp
mov
jnp
lcall
pusha
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
sub
add
sbb
push
cli
adc
sar
dec
sbb
xchg
and
mov
cmp
fcomps
jl
sarb
aad
or
xor
push
cmpsl
js
mov
jg
icebp
xlat
pop
xor
divb
lcall
sarl
inc
stc
testl
mov
fisubrl
pop
cmp
jb
or
sahf
adcl
aam
ss
mov
aam
xlat
and
dec
lret
fistps
and
in
outsb
bound
xchg
dec
push
imul
adc
cmp
xor
xchg
pop
ss
jns
fistl
cmp
jb
outsb
push
dec
sbb
mov
adc
mov
sub
mov
sbb
jecxz
inc
jecxz
xlat
fisubrl
mov
ret
lds
and
mov
or
mov
adc
xchg
or
std
lret
hlt
filds
pop
ret
daa
jle
lods
pop
movsl
pop
enter
clc
sarl
lahf
in
xchg
aas
mov
rolb
jl
std
mov
jnp
aaa
aas
xchg
pop
scas
sub
mov
cmc
inc
lods
mov
cmp
insb
mov
sub
mov
xchg
repz
push
in
pop
ret
lcall
dec
sub
es
stc
andl
sti
push
dec
in
jae
sti
cmp
pushf
std
add
jl
outsl
xchg
jae
dec
xor
ss
or
loop
add
int
shll
inc
sub
sbb
lock
mull
cmpsb
mov
orl
and
loopne
mov
fwait
push
icebp
loop
mov
testl
out
mov
jecxz
add
jge
fmull
sbb
jg
lcall
mov
enter
adc
and
inc
popa
mov
repz
dec
cmp
cld
cmp
loopne
test
xlat
xchg
mov
push
lret
mov
in
fisubrl
test
push
xchg
hlt
or
ljmp
dec
loop
dec
and
pop
outsl
cmp
pop
pusha
ja
arpl
pop
cli
adc
cmpsb
orl
cmc
test
add
push
mov
inc
jge
imul
xchg
in
std
test
or
and
push
divb
pop
mov
jno
jecxz
daa
mov
add
cmp
and
or
je
jae
jge
ret
inc
pop
scas
je
mov
xor
jge
arpl
sbb
xor
mov
popaw
push
xchg
fnstenv
and
arpl
ljmp
fldt
push
outsb
pop
pop
sti
mov
dec
ljmp
xchg
adc
scas
dec
cmpsb
xorb
dec
das
push
xor
pop
int
fnstenv
jecxz
push
xchg
inc
jne
and
inc
mov
adc
push
jno
add
push
fstl
sub
dec
jne
bound
scas
dec
stos
cmp
mov
inc
ja
xchg
sub
xlat
dec
jl
mov
out
push
xor
stos
mov
add
cltd
dec
dec
dec
sub
adc
sbb
insl
pop
mov
cmp
cmpsl
cmp
cld
and
mov
jle
iret
ss
cmc
and
fstpl
movsb
cmp
lret
out
sarb
jl
mov
push
ret
les
pop
aaa
scas
pop
aam
test
test
inc
inc
hlt
push
pop
add
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
push
aam
inc
dec
adc
adc
xor
inc
pop
sub
mov
jno
sahf
aaa
fwait
mov
push
lcall
sub
inc
pop
push
mov
cmp
hlt
sub
das
sahf
pop
mov
ret
stc
push
push
dec
jo
cld
stos
mov
pop
enter
and
int
pop
dec
cli
subb
int3
xor
loope
cltd
scas
sub
lock
adc
pop
pop
xchg
jne
dec
lahf
ljmp
rcrl
aaa
lods
inc
and
or
or
jbe
cmp
clc
test
inc
pop
mov
les
sub
stos
fstpl
push
imul
sbb
lds
scas
inc
inc
insl
popf
push
not
rcl
je
les
jb
adc
fisttpll
jo
pusha
mov
jp
aad
sbb
or
adc
stos
mov
mov
in
cmp
cmp
mov
pop
cli
push
ficoml
push
in
xor
adc
repz
lock
shlb
pop
shl
movsb
or
bound
pop
pop
adc
jle
lcall
ret
push
fwait
addl
inc
std
adc
leave
es
cmp
xchg
cs
push
mov
stc
cmpl
js
notb
jnp
adcb
inc
testb
mov
jmp
addr16
xchg
mov
mov
dec
cltd
push
push
mov
cmp
aam
xor
ss
cmpsb
out
jg
dec
pop
pop
sub
sbb
pop
subb
push
aad
add
adc
xchg
add
inc
callw
push
cmpsl
into
test
pop
mov
add
push
in
inc
ljmp
test
sub
les
xchg
jno
sahf
mov
xor
xlat
sbb
mov
sub
fisttpl
mov
cmp
cmp
push
sbb
aad
push
pusha
daa
daa
xchg
pop
sti
mov
mov
outsb
or
loop
pop
mov
fldenv
xchg
mov
pop
cmc
lods
lods
outsl
outsb
lods
pop
lahf
ficoml
data16
fnstenv
mov
and
pop
sbbl
cli
sbb
add
cmp
mov
jno
jl
push
mov
jl
pop
sbb
imul
inc
sbb
in
dec
pop
ds
jl
jmp
adc
mov
lret
lods
iret
hlt
ja
adc
int
arpl
xor
push
lods
cmp
mov
dec
mov
decl
adc
jmp
add
addr16
in
mov
mov
add
loopne
xor
push
cmpsl
jl
in
and
int3
add
leave
mov
int3
inc
stos
mov
lds
pushf
pop
adc
loop
fisubs
xor
stos
pop
dec
pop
adc
int
imulb
push
inc
or
out
jae
loopne
dec
mov
das
adc
movsl
fldl
test
sbb
push
scas
cmp
outsb
dec
lods
test
sbb
push
jbe
and
aad
lret
dec
punpckldq
mov
repnz
vmovaps
inc
xchg
mov
xor
push
and
sahf
testb
or
pop
adc
dec
inc
inc
xchg
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
lret
adc
out
pusha
ret
js
xchg
mov
jmp
sub
cmp
cmp
jl
mov
xchg
xchg
cmpb
test
stos
loope
lock
and
adc
inc
pop
arpl
cld
add
jb
sub
mov
mov
mov
push
ja
stos
add
fs
inc
test
xchg
jl
stos
push
orl
ret
mov
icebp
dec
aaa
rcll
xor
pop
dec
mov
das
pop
dec
mov
js
pop
add
mov
push
jge
aam
push
shll
add
outsb
testb
adc
in
mov
fsubs
aad
popa
int
dec
mov
ljmp
ds
icebp
in
daa
outsl
push
lock
jp
leave
push
xor
cmp
shlb
adcw
loop
and
outsb
hlt
sbb
inc
fisubl
cmp
call
add
lcall
jne
leave
ret
imul
mov
xchg
sub
inc
jnp
mov
push
xchg
fdivr
and
bound
lcall
sti
aas
push
push
cld
fwait
pop
pusha
push
es
mov
xor
fcoml
das
negl
repnz
xor
div
out
hlt
mov
xor
hlt
int3
xchg
sbb
sbb
loop
mov
test
jne
lock
xor
lods
stos
mov
add
int3
lock
loopne
mov
scas
cltd
jb
mov
loop
sub
ja
pop
and
mov
lock
sahf
int3
jbe
pusha
imul
icebp
out
mov
mov
cmp
cli
mov
inc
mov
stc
xchg
dec
int3
jge
test
inc
in
jae
pinsrw
test
xchg
mov
jb
xchg
mulb
or
sti
push
and
shlb
jnp
fsubr
sbb
push
mov
dec
or
mov
int
scas
push
cmpsb
and
aam
popf
jl
and
int3
in
sub
mov
movsl
xchg
out
testl
data16
mov
pop
xlat
sarl
jg
push
incb
sahf
inc
fsubl
xchg
dec
ffreep
push
mov
into
pop
lcall
fidivl
int
mov
xchg
pop
cwtl
pop
cmp
aam
inc
cmp
sbb
jp
divl
loop
jno
js
jns
shll
xor
loope
lahf
aas
outsb
out
sarb
mov
shlb
cmp
in
jae
test
rclb
movsl
mov
rorl
inc
scas
scas
repnz
scas
push
xor
test
push
adc
xor
aam
or
hlt
ficoml
dec
out
sbb
mov
jp
test
xor
addr16
or
inc
dec
push
test
jg,pn
mov
pop
test
cmp
dec
mov
mov
mov
sub
rcll
lcall
insb
push
fildll
sarb
or
ss
pop
mov
inc
push
sbb
aad
or
fistpl
ss
les
aam
mov
sub
push
int3
fiaddl
mov
dec
scas
and
bound
cmp
push
pusha
jecxz
xor
shll
addr16
ljmp
lock
jne
mov
and
mov
cmc
insb
aas
xchg
int
repnz
fwait
or
add
icebp
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
xchg
js
cmp
adc
icebp
sub
mov
sti
enter
loope
dec
mov
aam
vmread
sbb
adc
pop
pop
mov
xor
pop
sbb
scas
adc
das
enter
movsl
cmpsb
pop
lret
mov
cmp
or
popa
test
or
mov
mov
int
or
ficompl
jb
or
rolb
sub
arpl
cltd
mov
aad
mov
xchg
mov
cmpsb
or
dec
mov
or
and
push
cli
mov
ss
push
push
dec
pop
lods
idivb
xor
in
mov
and
jecxz
adc
and
sti
push
jb
xlat
rcrl
mov
inc
mov
push
and
xchg
dec
mov
aam
mov
mov
rcrl
outsl
sbb
mov
aas
popf
add
xchg
jne
inc
outsl
xor
cmpsb
pop
inc
cmp
xor
mov
test
and
mov
les
test
ja
out
lds
fldenv
aad
adc
fisubs
lahf
inc
adc
mov
not
in
mov
push
adc
mov
icebp
cmpsl
lcall
lret
or
lret
je
xchg
mov
sbb
das
roll
or
sub
add
movhps
push
clc
cmp
test
cwtl
adc
out
cmp
cmp
push
loopne
dec
lods
mov
pop
sbb
rorb
test
rcll
dec
fwait
sbb
nop
xchg
ret
push
arpl
or
or
xchg
dec
out
push
add
shrb
mov
or
hlt
sbb
mov
jae
ja
sbb
sbb
cwtl
mov
fsubrl
inc
jle
and
in
xor
sti
jle
sub
lret
cltd
addl
push
pop
outsl
xchg
jge
jg
aas
pushf
mov
sbb
bound
add
pop
mov
cltd
inc
popf
in
mov
movsl
xchg
adc
mov
push
inc
sbb
enter
test
push
mov
call
jp
pop
loope
mov
add
or
jg
mov
xchg
or
inc
js
nop
testl
lret
loope
mov
cmpsl
scas
gs
out
cmp
sub
movb
out
pop
gs
pop
repz
add
inc
into
and
push
cmp
loop
mov
xchg
push
jp
dec
or
bnd
cmp
imul
cmp
xchg
push
in
mov
mov
cmpsl
jle
push
jne
mov
jae
cli
mov
push
int
jb
or
inc
cmpsb
sahf
pop
jae
mov
xlat
jg
icebp
shrl
and
dec
enter
pop
es
adc
adc
jl
push
or
nop
in
and
mov
xchg
out
stos
dec
sub
pop
sbb
cmc
pop
ret
in
inc
outsb
in
out
push
adc
lods
sbb
and
cltd
jnp
arpl
imul
add
sahf
mov
sahf
sub
data16
pop
mov
out
cmpsl
lock
lahf
and
std
mov
mov
stos
or
dec
bound
xor
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
scas
and
push
xor
adc
sbb
rcrb
aad
xchg
in
sbb
jns
pop
and
inc
jg
int
pop
daa
pop
xlat
in
stos
lahf
aam
pop
or
outsl
sbb
aad
aad
jmp
push
sbb
lea
enter
mov
dec
mov
or
stc
mov
int
ljmp
jp
scas
lds
push
cmp
jo
or
adc
repz
xor
rorl
testb
rcrl
rcll
cmpsl
pop
sbb
cs
data16
cmpsl
and
js
cmp
xor
xor
pop
mov
jno
inc
xor
pop
jb
lods
jp
fwait
daa
mov
cmpb
or
inc
stos
iret
jp
insb
flds
scas
inc
ret
cmc
mov
adc
shl
fs
xchg
cmc
das
fmul
push
inc
roll
hlt
pop
inc
cmpl
fmulp
out
mov
hlt
inc
stos
in
dec
dec
xchg
stc
pop
fisttpl
dec
jmp
push
mov
lret
ljmp
adc
mov
int
pusha
pop
xchg
std
pop
mov
sbb
jns
fcmovnbe
sti
pop
and
sbb
adc
addr16
es
scas
push
sub
scas
dec
ret
push
test
xchg
daa
mov
aam
pop
sub
jbe
pushf
xchg
and
lret
jg
xor
jbe
popa
cwtl
jne
fwait
std
xchg
xor
enter
nop
xor
mov
das
or
jne
xor
ss
ficompl
mov
lds
iret
addb
dec
inc
ja
sbb
xor
outsb
and
jl
flds
push
mov
mov
aaa
adc
xor
inc
cld
aam
xchg
lds
test
stos
sbb
dec
pop
xchg
xchg
movsb
cs
out
adc
fsts
sub
and
push
pop
mov
scas
aaa
xchg
testb
aam
push
adc
repz
mov
leave
js
movsb
fcompl
and
xchg
add
pop
jl
test
das
sub
fs
sti
movsl
imul
sub
mov
out
mov
sarb
mov
mov
sub
dec
push
lret
adc
rcl
je
mov
pop
add
call
mov
hlt
dec
jmp
push
in
lods
dec
xchg
mov
js
xor
push
or
lea
das
sub
das
xor
pop
mov
aaa
cltd
push
and
rolb
fisttpll
cmp
movsl
fisttps
cmpsb
movsl
notl
xchg
movb
dec
pop
mov
sbb
pushf
cltd
leave
push
mov
mov
jl
xchg
push
cmc
inc
sub
call
adc
sub
add
and
xchg
mov
std
inc
dec
mov
and
in
xchg
cmpsl
vmovhpd
imul
mov
stos
sar
pop
dec
cli
cli
dec
xor
scas
jg
data16
sahf
std
dec
add
push
mov
out
or
lret
add
dec
fbstp
push
add
mov
cmp
xchg
aaa
lcall
and
dec
adcb
fucomi
xchg
mov
test
decl
test
add
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
ljmp
adc
adc
pop
jmp
push
les
rorl
ficompl
add
js
test
clc
inc
and
dec
xchg
and
sbb
sbb
into
icebp
int3
pop
scas
ss
cmpsb
dec
out
adc
loop
mov
cli
lods
pop
cmp
jae
pusha
inc
dec
jle
mov
loope
fisttps
test
popf
xor
push
jl
popf
les
pop
inc
mov
xor
xor
sbbl
inc
lret
adc
xchg
ljmp
stos
push
stc
push
pop
inc
pop
sub
xchg
fidivrs
xchg
push
pop
lahf
xor
push
dec
add
aas
imul
xor
lea
movsl
mov
pop
mov
dec
rorb
das
push
int3
and
push
sbb
jbe
notb
inc
imul
cmp
dec
mov
sub
push
jb
dec
add
adc
dec
test
cmp
repnz
jb
loope
enter
xchg
inc
in
pusha
mov
sahf
mov
test
aam
mov
and
lret
lahf
mov
pop
pushl
dec
cmp
shrb
test
jo
mov
icebp
insl
pop
dec
sarl
cmp
ja
inc
test
cmp
pop
lds
push
pop
movsb
cmp
into
jb
cmp
mov
xor
and
aaa
shll
aaa
loopne
and
in
dec
popa
popf
jp
ror
mov
sti
test
sti
push
test
ror
enter
push
inc
scas
xchg
out
xchg
leave
insl
mov
ret
pop
pop
pop
test
sahf
push
mov
ss
xor
rcrl
mov
and
cli
popf
add
push
sbb
neg
cwtl
popf
fisttpll
cmp
outsl
loope
jo
dec
inc
mov
mov
jp
sahf
fsubs
or
testl
rcl
cli
xor
jno
mov
mov
aam
sub
sbb
jl
jecxz
scas
addb
lahf
xchg
cltd
rcll
mov
out
xchg
push
mov
int3
out
ret
xor
mov
xor
mov
mov
outsl
inc
jg
imul
js
icebp
aaa
cmp
dec
xchg
ljmp
jge
and
pop
loope
cmc
ljmp
xchg
push
out
pop
push
lock
dec
mov
cwtl
out
pop
pop
test
test
lret
and
and
adc
lods
sub
inc
xorl
fs
xchg
mov
aaa
mov
add
dec
dec
adc
adc
add
into
addl
jge
jle
movsl
int
mov
out
pop
mov
adc
in
xor
popf
insb
lret
mov
sub
inc
mov
fptan
mov
add
stc
lret
adc
test
scas
addr16
mov
repnz
fnstenv
inc
xchg
xor
iret
adc
nop
popa
out
cmp
fnstcw
cli
mov
gs
jge
cwtl
fcoml
sarb
dec
dec
lock
out
imul
incl
jne
pop
bound
cltd
xchg
push
jl
lret
pop
fcmovb
fldcw
cs
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
ja
sub
inc
sub
adc
sbb
rol
out
addb
jge
xor
cmp
mov
jge
outsb
pop
and
aad
dec
jbe
or
sbb
xchg
jae
outsb
sahf
dec
sbb
sbb
lahf
ss
jmp
pop
mov
shl
gs
or
xorl
jecxz
nop
add
ja
mov
cmp
xlat
stos
or
jae
out
mov
in
ljmp
and
inc
fisubrl
jp
lds
pop
xchg
fs
cmp
push
add
decb
sbb
sub
sub
push
test
lods
scas
fdivl
pop
mov
add
cmp
xlat
xchg
push
add
ret
test
cmp
lods
call
into
aas
adc
jno
push
ret
push
lods
xor
lods
or
and
push
cmc
movsl
sbb
arpl
pop
test
clc
adc
inc
lcall
mov
adc
pop
rcl
mov
mov
stc
cmp
xchg
shlb
inc
ds
xor
cli
add
loope
fs
dec
sbb
or
repnz
push
ja
into
fcompl
and
jle
xchg
pop
loop
add
xchg
mov
das
mov
xchg
mov
imul
mov
call
repnz
fs
aas
inc
mov
pop
adc
add
lock
xor
aas
xor
push
icebp
fisttpll
or
lock
mov
push
mov
addr16
cmp
lods
and
nop
fst
out
xchg
aam
idivl
cmpsl
into
ret
add
in
rcr
mov
mov
pop
iret
outsl
pop
dec
mov
sub
pusha
ret
xor
out
cmpsb
mov
add
sub
lock
dec
or
xchg
xchg
mov
adcb
adc
and
push
aaa
adc
xor
lret
xchg
mov
push
mov
xor
and
pop
xchg
rdtsc
push
sti
cmp
jp
mov
daa
mov
jg
dec
das
addr16
pop
mov
bound
sbb
shrl
and
shrb
and
loop
jb
sbb
and
cmp
loop
sbb
loope
fnstsw
adc
xor
out
test
cmp
mov
mov
or
into
icebp
dec
bnd
int
arpl
cltd
orps
in
adc
subl
sti
enter
stos
hlt
push
roll
sub
adc
insb
idivl
test
push
stos
mov
mov
mov
pop
jnp
jmp
pop
sbb
cmp
lods
xchg
cmp
subb
in
iret
mov
cltd
sbb
pushf
lods
movsl
das
cmp
add
mov
dec
fisubrl
inc
or
and
dec
stc
mov
out
dec
push
inc
push
int3
mov
inc
lea
paddsw
mov
pop
mov
add
cmpsb
iret
ja
mov
cli
imul
pop
sub
outsl
inc
sub
mov
sarb
xchg
push
pop
xor
loop
ds
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
ret
das
mov
push
cmp
sbb
inc
xor
cltd
xchg
arpl
push
fcoms
xchg
add
mov
ss
enter
xchg
jns
fistpl
xchg
dec
fisubrs
sar
cmc
inc
push
sarb
out
cmp
pop
outsb
sti
std
mov
dec
mov
in
ror
ret
mov
sub
mov
repz
xchg
in
xor
fcompp
repz
stos
mov
mov
add
mov
add
cmp
sbb
push
add
imul
scas
xchg
mov
decl
inc
xchg
sahf
loop
stos
enter
hlt
add
sarb
jne
inc
cmp
sbb
sub
add
ret
mov
mov
mov
mov
popa
push
jecxz
sbb
mov
fwait
insl
in
sub
fnstcw
lret
arpl
in
ds
xchg
fmull
jbe
jmp
or
out
xchg
xchg
mov
lock
pop
sub
lock
div
pop
jmp
inc
sbb
fdivr
bound
test
pop
loope
ja
addr16
out
les
int3
sbb
fcomp
aam
xor
test
pop
or
test
cltd
jnp
iret
push
sbb
and
xchg
mov
sub
stos
lret
testb
ja
or
xor
outsb
xchg
jbe
add
aam
adc
inc
mov
push
test
xchg
cmpsl
and
lret
mov
or
add
add
and
imul
mov
int
cltd
pop
das
jp
fbstp
xorb
mov
js
fsubrs
add
adc
and
xchg
mov
dec
pop
leave
std
push
mov
in
mov
out
nop
shl
lock
xor
in
fnsave
fldl
lret
xchg
xchg
cltd
push
add
jp
fsubrs
jmp
cmpsb
call
mov
pop
mov
inc
mov
mov
jge
cmp
hlt
cltd
or
pop
adc
popf
pop
movsb
mov
jno
mov
mov
cmc
fimull
sbbb
mov
and
xchg
pop
fnstenv
inc
ss
pop
mov
fiadds
cwtl
inc
in
cltd
dec
scas
fdivrs
cmp
movsl
loope
std
inc
stc
in
ret
sub
scas
data16
mov
jg
aad
cmp
cmp
ljmp
movsl
repz
and
loop
or
jo
daa
dec
divl
push
push
movsb
jb
mov
pop
leave
jl
scas
adc
fisubrl
pusha
cli
int
sahf
daa
mov
cmpsl
shlb
ds
insb
cmp
xor
rol
ja
jge
sub
fisubs
push
aad
inc
cwtl
jp
inc
lods
jns
ja
push
mov
in
loopne
jmp
aas
and
mov
xchg
xchg
or
jns
stc
jbe
jno
inc
xlat
xchg
emms
out
loope
xor
jno
pop
ljmp
xchg
mov
jbe
int
dec
adc
jbe
enter
ds
imul
rcrb
imul
ds
push
pop
movsl
mov
and
outsl
in
adc
inc
cmp
shlb
movl
rclb
call
mov
mov
mov
jmp
or
mov
adc
add
stos
outsl
sbb
adc
scas
scas
sbb
sub
xor
sbb
push
and
je
ficomps
mov
ret
in
mov
arpl
insl
mov
jb
iret
dec
mov
or
sbb
push
loop
jg
mov
cmp
in
push
fcompl
pop
in
pop
and
xor
mov
pusha
cmp
xchg
fwait
rorl
lea
dec
jbe
cmp
cli
loope
cwtl
les
push
mov
test
mov
inc
mov
fs
mov
jbe
mov
fildl
inc
bound
scas
sbb
icebp
mov
inc
mov
jle
push
push
pop
leave
sub
out
add
repz
sbb
clc
or
out
orb
scas
mov
das
fbld
inc
xor
test
jle
xor
xchg
mov
pop
imul
fidivl
or
ja
or
fldcw
mov
mov
shr
inc
loopne
clc
and
repnz
pushf
mov
pop
fsts
jae
das
idivl
in
pop
in
jmp
ljmp
inc
mov
enter
mov
cmpb
nop
and
sub
in
test
xchg
jmp
inc
imul
popf
push
fsts
dec
push
cmpsb
jecxz
and
sbb
aam
inc
or
cld
or
icebp
js
inc
out
adc
ss
ret
mov
jne
cmc
add
pop
call
call
or
movsl
pop
call
mov
xchg
repnz
mov
cmc
jno
mov
test
sub
inc
sar
pop
or
std
push
inc
das
sub
pusha
pushf
mov
jb
lds
mov
push
scas
bound
notb
pop
pop
jmp
shll
int
push
loope
xchg
scas
popf
dec
or
mov
or
outsb
add
enter
testl
daa
leave
mov
shufps
xchg
lret
out
mov
push
aaa
test
push
in
cld
rcll
test
lsl
sub
dec
or
cli
test
pop
or
shll
push
into
sub
jb
std
mov
pop
into
ret
xchg
and
gs
in
cmc
test
xchg
add
mov
lods
add
xlat
lock
mov
sbb
dec
push
imul
pop
xor
popf
xor
int3
xor
push
in
xchg
mov
fs
outsl
jle
push
adc
sbb
xor
decb
jbe
idivb
sarl
jg
movsl
jmp
push
push
or
push
pop
pop
pop
sbb
mov
insb
jne
sbb
mov
mov
add
in
fbstp
rcll
test
enter
sbb
sbb
dec
add
orl
aad
jp
scas
repnz
out
sahf
fldl
add
rol
sbb
mov
cmpsb
mov
sbb
or
pusha
aam
dec
cmp
add
add
in
in
in
out
push
clc
lds
push
and
ds
push
xchg
dec
mov
test
scas
pop
mov
mov
adc
jp
sar
pop
add
inc
ds
outsb
pop
xor
call
inc
shl
adc
shlb
xchg
clc
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
stos
les
stos
adc
adc
iret
sbb
test
cmp
pop
inc
pop
test
jne
mov
cmp
ss
push
inc
mov
xchg
dec
imul
xor
vcmpnge_uqps
lock
mov
xchg
clc
loopne
jns
adc
mov
push
pop
mov
jne
mov
pop
sbb
mov
loopne
jae
inc
loop
ret
lcall
ljmp
stos
and
mov
add
rorb
cltd
sarl
mov
aaa
icebp
push
scas
adc
scas
sub
sti
lea
push
dec
fwait
add
add
jno
push
imul
pop
cmpsl
insb
push
dec
es
lods
lods
and
dec
ret
int3
ja
out
cmp
xchg
lods
pushf
mov
or
dec
mov
pop
sbb
sahf
test
rorl
dec
push
inc
mov
mov
mov
pop
cld
xchg
lret
data16
mov
shrl
push
popl
insb
mov
fidivrs
mov
fnstsw
dec
adc
rorl
je
add
aaa
loopne
inc
addr16
xchg
pusha
inc
push
adc
xchg
pop
cld
sbb
mov
pop
push
dec
mov
jne
insb
cmp
stc
ja
xor
inc
inc
jnp
gs
fiadds
test
imul
popl
rolb
mov
inc
inc
in
xchg
add
dec
pop
out
cmp
popa
lret
das
repnz
push
xchg
out
mov
insb
sub
dec
and
aas
movsl
cmp
xchg
jb
pop
xor
sbb
loop
dec
inc
rcll
sbb
mov
jmp
adc
inc
es
enter
ljmp
xchg
pop
inc
mov
cmp
cmp
cs
jno
call
adc
xlat
das
pop
dec
dec
lretw
in
stos
sbb
hlt
mov
loop
push
cs
clc
mov
xchg
lods
mov
ljmp
jg
lahf
imul
cld
out
xor
adc
adc
mov
inc
aas
test
hlt
cmp
and
xchg
or
inc
mov
out
push
pop
push
pop
dec
pop
mov
ljmp
aas
pop
mov
sub
xchg
cmpsl
inc
pop
cmp
cmp
out
in
and
dec
xchg
dec
insl
cltd
popa
inc
icebp
cli
enter
cmp
popa
out
outsl
popa
mov
push
and
cmp
ss
mov
jmp
inc
imul
fcmovnu
and
jecxz
aas
fimuls
sbbb
sti
pop
loopne
into
mov
mov
popf
push
fldcw
mov
call
xchg
pop
outsb
push
mov
jecxz
in
lds
mov
mov
fiadds
and
div
das
cmp
add
push
jb
aas
movsb
inc
and
cmp
mov
aam
into
dec
sahf
jl
jb
adc
into
nop
fwait
clc
jp
out
and
rcll
std
dec
out
dec
push
in
lret
xor
rcrl
mov
dec
test
cmp
rcrb
dec
cld
pop
mov
lock
xchg
outsl
loopne
lret
sarb
mov
sbb
dec
fidivrs
mov
pusha
jbe
jb
sbb
out
push
or
stos
push
push
mov
cmpsb
rcrl
xor
adc
mov
test
add
add
mov
add
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
into
out
jmp
mov
dec
popa
aam
push
push
pop
inc
aam
dec
mov
push
or
mov
ja
into
fldenv
loop
pop
or
sarb
xlat
incb
popf
incl
addb
aad
jl
cmp
fs
aam
adc
jmp
push
jecxz
popa
insl
cs
dec
stos
mov
enter
xchg
inc
testb
cmp
lret
out
out
cmc
in
mov
arpl
in
subb
shll
mov
sub
add
rep
sahf
insl
mov
arpl
icebp
dec
in
jmp
mov
xor
dec
adc
fdivrp
pushf
mov
into
scas
fsubrl
cltd
outsl
cwtl
sahf
movsl
test
movsl
pop
les
adc
inc
test
cmp
jg
inc
int
push
std
in
xor
or
mov
data16
call
fiadds
mov
aam
loope
pop
dec
jecxz
cmc
call
addl
fwait
jo
addr16
adc
jb
mov
movl
sub
adc
out
jl
iret
pop
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
