push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
inc
test
adc
adc
push
clc
adc
lods
stos
fwait
sti
fimull
mov
mov
push
add
xor
xchg
lock
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fcoms
cmp
outsb
mov
sbb
lock
jecxz
lods
aas
mov
icebp
repz
push
iret
jp
popf
mov
push
xchg
mov
lret
cmp
aam
jp
push
ds
push
adc
push
cli
sbb
mov
sub
loope
fwait
sbb
sarl
and
or
clc
jmp
inc
pop
sbb
xchg
fsts
dec
incl
call
rcrl
scas
outsb
int
dec
mov
push
iret
iret
std
out
loope
fistpl
rclb
bound
ds
xchg
jge
inc
sub
icebp
js
cmp
rolb
decl
inc
adc
mov
xchg
repz
sti
adc
add
aad
pop
int3
lahf
mov
insl
xchg
push
rcrb
fstps
inc
mov
lds
mov
sub
mov
scas
sti
jecxz
mov
in
mov
dec
xor
mov
mov
mov
mov
or
aam
aam
incl
push
jo
ja
mov
das
dec
ds
and
and
jle
das
repz
in
or
icebp
addr16
je
in
mov
fwait
jge
pop
or
sub
mov
push
fwait
push
mov
mov
add
imull
adc
mul
pop
lahf
leave
inc
lods
add
mov
adc
mov
add
lahf
rol
into
jmp
jge
jne
iret
adcl
pop
enter
jge
jbe
test
and
test
mov
jb
jg
insb
pop
lret
cmp
iret
clc
pop
les
xchg
test
or
mov
mov
hlt
push
cmp
in
popf
sub
jb
and
rcrl
outsb
adc
adc
push
cwtl
bound
xchg
adc
push
testl
inc
push
jne
mov
mov
jnp
cmp
cmp
lcall
mov
or
movsb
andb
call
sti
mulb
arpl
pop
mov
pop
sbb
gs
xlat
cmp
aam
dec
push
pop
mov
sbb
xor
xor
sbb
and
pop
test
pop
push
lret
jecxz
test
jl
lods
and
and
test
loope
cli
and
lods
dec
cmpsb
or
dec
inc
mov
sub
fs
adc
and
xchg
jmp
popf
jbe
lahf
xchg
mov
ret
ret
int3
pop
lret
cmc
sub
inc
aad
add
jb
pop
mov
mov
add
sub
mov
scas
sbb
je
push
dec
xor
xor
lcall
cmp
jo
arpl
add
xchg
push
sub
and
mov
fxtract
sbb
mov
sub
not
add
inc
sbb
out
int3
shrb
ficoms
pop
loop
or
imul
lret
push
inc
and
adc
cs
jno
dec
movsl
sub
push
addr16
movsl
dec
cmp
xchg
xlat
and
adc
xchg
mov
test
mov
ret
mov
pop
push
push
inc
clc
movsl
sbb
mov
gs
ret
pop
popf
and
or
ret
push
dec
pop
addl
enter
push
roll
cwtl
pop
lahf
sbb
pop
sbb
divl
call
adc
mov
js
adc
movsl
push
mov
lret
cmp
lret
mov
stos
pop
pop
ret
xlat
loopne
sub
fnstsw
push
cmp
pop
or
xchg
rcrl
fldcw
adc
and
or
push
adc
scas
push
fldenv
movsb
popf
fildll
jae
mov
xor
or
out
cmp
test
in
gs
call
mov
popf
fs
stos
cmp
or
or
pushf
add
in
mov
fiadds
fistpl
cmp
addr16
add
or
dec
add
pop
push
add
shr
loope
into
inc
xchg
mulb
test
xorl
test
push
xchg
imul
imul
arpl
in
lods
test
xor
gs
rorl
jge
inc
xchg
or
xchg
iret
out
push
jbe
jbe
ds
vpsrad
mov
das
mov
cld
cli
mov
lods
fstps
out
mov
aam
lret
push
sub
rcr
mov
jecxz
ret
pop
enter
dec
pop
lret
roll
decb
or
push
push
push
loopne
xchg
jmp
dec
mov
xchg
cmpsb
lret
mov
inc
fwait
out
and
mov
hlt
xor
nop
lea
loope
xor
test
push
pop
in
enter
arpl
push
out
scas
inc
dec
fdivrs
cmp
push
mov
add
mov
jnp
xorb
mov
arpl
add
fst
push
outsb
or
xchg
aas
pop
nop
push
or
inc
outsl
pop
pusha
cmp
adc
or
aaa
add
jae
out
dec
adc
test
and
mov
xchg
pop
pop
lahf
stos
incl
test
in
and
lds
push
pop
adcl
popf
sub
lock
loop
push
test
or
aad
arpl
icebp
insb
fdivrp
incl
enter
pop
divb
xchg
scas
or
mov
mov
inc
inc
or
bound
xor
xor
xchg
fstpl
iret
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
ds
add
adc
clc
adc
adc
mov
cmpb
sbb
insl
jns
dec
fisttpll
imul
into
cmp
gs
adc
cmp
xor
lcall
ja
cmp
out
sbb
mov
fisttpl
add
inc
mov
or
mov
xor
lret
mov
and
and
inc
inc
cmp
cli
push
push
scas
inc
sub
xor
ja
mov
dec
stos
jb
sahf
inc
sub
push
mov
xchg
sbb
push
mov
cmp
decl
and
jne
ret
sbbb
or
jg
into
mov
lahf
xor
jbe
push
sub
xchg
sbbb
dec
jmp
xor
cmc
aam
iret
adc
fisubs
add
inc
push
mov
inc
ret
sub
pushf
push
cmp
out
stc
ljmp
shll
mov
dec
adc
lcall
jle
daa
test
cmp
pop
push
leavew
cltd
outsb
cld
arpl
je
jge
insb
lods
mov
mov
jmp
add
sub
ljmp
hlt
dec
ds
jl
mov
js
xchg
push
or
call
jbe
push
icebp
call
mov
pop
in
jmp
dec
icebp
mov
scas
sub
fcompl
shrb
mov
pop
mov
mov
xchg
in
sbb
daa
jecxz
and
ficompl
mov
sub
scas
adc
mov
jb
test
movb
mov
dec
mov
xchg
pop
jnp
in
cmp
pop
stos
pop
mov
push
dec
pop
mov
movsb
ljmp
ret
fisttps
add
cmp
push
ja
enter
fbld
shrl
and
inc
jb
xchg
shll
daa
mov
and
dec
mov
into
and
push
pop
sub
jns
test
and
outsl
iret
sub
dec
out
push
cmp
xorb
inc
leave
xchg
mov
fucomp
in
into
sbb
mov
subb
popa
pop
pop
sub
mov
sti
sub
les
rorb
loope
or
xchg
cmp
adc
pop
sub
adc
xor
jmp
push
mov
and
push
cmpsb
or
mov
mov
lods
sahf
in
sub
sub
das
jns
and
popf
test
pusha
add
mov
fldenv
sub
scas
ret
mov
push
xlat
popf
fmuls
push
stos
dec
sbb
pop
hlt
and
icebp
jne
mov
insl
mov
incb
inc
call
xor
jle
and
and
fwait
rcrl
xchg
aas
or
mov
sub
dec
adc
repz
xchg
xchg
jg
pop
push
adc
int3
test
or
ret
add
adcl
daa
jle
mov
jg,pt
jns
icebp
fnsave
in
adc
sub
xlat
pop
iret
repz
shlb
mov
dec
in
cmp
ret
and
mov
push
outsl
cmc
push
lcall
int
insl
cld
or
push
jg
test
jl
in
cli
insl
jp
mov
mov
inc
lcall
outsl
add
pusha
lods
fidivrl
jecxz
cmp
mov
jl
inc
sbb
cmp
cmpl
xor
int
push
push
sbb
mov
mov
sub
dec
les
repz
imul
loop
cmp
fnstsw
int
adc
or
xor
outsw
pushf
movsb
shlb
sahf
add
jnp
ljmp
cmp
movsb
stos
sub
les
pop
rorl
dec
aam
fdiv
dec
jl
push
pop
ret
xor
fadds
in
cli
push
jge
repnz
sub
sub
sub
mov
das
icebp
xor
pop
sbb
cmpsb
imul
test
sbb
adc
jmp
icebp
clc
dec
and
or
pop
mov
xor
mov
cmc
xchg
test
js
dec
or
adc
push
sbb
inc
pop
mov
and
adc
mov
cli
ds
jmp
lret
and
ds
popf
sahf
add
aas
fstpl
push
ds
cmp
js
lcall
sahf
lods
js
inc
cld
xchg
in
pop
jb
out
hlt
lret
sbb
xor
shll
adc
ficoms
add
pop
mov
pusha
or
jae
cmp
xor
xor
cmpsl
stc
xor
cmpsb
aam
test
push
shrb
pop
in
mov
cmp
fs
arpl
xor
bound
pop
gs
jb
sti
lahf
sub
inc
dec
stc
xchg
shlb
cs
sub
add
jnp
out
xor
aas
adc
lcall
inc
sti
dec
jns
mov
lret
push
xchg
nop
push
dec
out
imul
jbe
nop
mov
mov
cld
xlat
iret
mov
jnp
adc
mov
and
mov
insl
lahf
les
lock
xor
lret
dec
inc
inc
cmp
pop
xchg
adc
xor
outsl
pop
cmp
mov
lds
insb
sub
repz
jb
add
in
inc
push
scas
push
test
loope
or
cmp
out
int3
pop
xchg
inc
mov
ret
ja
pop
push
addb
repz
hlt
cltd
mov
cmp
add
or
xchg
scas
and
adc
iret
jae
inc
pusha
lahf
mov
add
test
xor
rolb
xchg
out
xchg
jns
jnp
xor
pop
add
cmpsl
loopne
add
jecxz
int3
adc
or
xchg
dec
mov
testb
dec
fsubs
adcl
sub
scas
movsl
adc
fsubs
ret
insb
je
inc
into
lcall
je
ret
push
pop
and
ljmp
rol
div
or
sub
xchg
fidivrl
pop
mov
cmp
mov
or
fisttpl
xor
dec
mov
leave
mov
test
ds
test
mov
insl
fsub
add
add
inc
xchg
outsl
inc
add
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
lods
push
add
adc
in
pop
sti
dec
daa
loope
stc
mov
sahf
adc
add
mov
into
leave
adc
dec
and
jg
movsl
mov
fcoms
dec
add
inc
push
ret
xorl
xchg
jp
or
je
add
ljmp
test
push
pop
or
sbbb
cmp
jge
call
and
cld
test
mov
mov
lret
and
in
lods
push
jmp
sub
pop
jg
xchg
ljmp
sbb
ficoms
subb
mov
xorl
mov
clc
mov
lock
les
sub
mov
mov
repnz
cmp
loop
mov
dec
into
jne
or
jl
call
iret
mov
std
or
inc
insb
loopne
mov
stc
loope
stc
lret
std
js
or
inc
push
fldt
call
aaa
push
in
ljmp
mov
mov
mov
cli
dec
mov
mov
fsub
jns
je
jmp
adc
xchg
mov
jp
stc
xor
cmpsl
mov
lret
iret
push
clc
in
xchg
mov
xchg
mov
dec
cmp
jl
xchg
jmp
jns
call
pop
mov
out
cld
cli
mov
push
xchg
ficoms
test
push
in
sahf
rcll
rcrb
mov
aaa
mov
mov
dec
das
dec
test
adc
popa
lcall
dec
inc
leave
sbb
scas
pusha
hlt
pushf
jo
loope
mov
insl
xlat
dec
pop
ret
lcall
xchg
dec
test
push
ds
in
popf
mov
dec
adcl
push
divb
outsl
stos
js
insb
sbb
sub
test
sbb
mov
jae
lea
xchg
jno
je
xor
or
jmp
mov
ret
pop
pop
pop
add
xchg
xchg
xchg
and
and
xchg
mov
cs
enter
push
jns
and
dec
adc
arpl
push
dec
sar
mov
mov
and
jae
adc
sub
mov
add
lret
jo
jns
js
jo
adc
scas
or
jns
pop
dec
mov
mov
or
iret
adc
aad
or
gs
lea
xor
fistpl
sbb
xchg
jno
pop
movsb
hlt
lds
mov
outsl
mov
adcb
xchg
pop
sub
jno
mov
imul
aad
stos
stos
lret
push
ficoml
sub
jne
sub
das
pop
add
sub
pusha
dec
xor
mov
daa
inc
lcall
mov
sbb
pushf
mov
enter
mov
ret
pop
push
scas
push
stos
popa
movsb
je
sbb
movsl
xchg
leave
test
shrl
sub
jecxz
bound
cmp
jg
pop
daa
cmc
negl
lods
push
sub
sub
xchg
mov
cwtl
imul
or
xor
lahf
jnp
adc
push
je
and
ljmp
test
mov
daa
ret
dec
in
mov
pushf
popf
clc
pusha
lea
jo
xchg
jp
je
mov
xchg
add
push
out
xor
xchg
ret
out
xor
sahf
in
rcrl
out
pop
pop
mov
orb
cmp
mov
dec
xchg
inc
pop
sahf
enter
call
xchg
cmp
xlat
dec
dec
iret
js
cld
outsl
xchg
hlt
out
hlt
fnstenv
dec
icebp
xchg
loop
pop
or
and
cmpsl
aas
lea
mov
push
dec
nop
push
imulb
aas
xchg
mov
pop
sbb
xorl
es
stos
xchg
gs
cmc
pusha
pop
push
cltd
testl
inc
out
in
lcall
xchg
in
cwtl
lret
test
inc
sub
mov
stos
xchg
jbe
test
pop
test
ja
sub
dec
mov
je
jp
mov
cwtl
sbb
mov
jecxz
das
popf
add
bound
dec
pusha
fdivrs
fwait
ret
mov
push
leave
dec
mulb
adc
mov
loop
ficompl
shll
inc
bnd
mov
mov
push
out
lret
lret
data16
mov
shll
xchg
or
out
pop
cmpl
aad
test
repz
pop
cli
sbb
fidivs
xor
ret
push
lcall
inc
imul
in
sub
mov
shrl
and
sbb
popa
push
dec
ret
sbb
int
popa
jecxz
xchg
mov
arpl
jnp
ss
fcoms
jne
push
sbb
outsl
mov
jl
notl
jne
lea
insb
and
cmp
push
inc
push
cli
out
mov
lret
xor
pop
dec
out
adc
and
out
xchg
adc
aad
mov
sub
jecxz
jb
aas
nop
xchg
or
test
rclb
or
pop
fmul
mov
outsl
scas
and
int3
xchg
movsb
js
sub
mov
shll
push
test
and
xor
fs
jne
pop
stos
cmp
jb
adc
push
fwait
dec
xchg
xor
je
cld
mov
mov
inc
ds
test
mov
sub
pusha
xor
nop
mov
jo
icebp
jns
inc
jae
jo
out
inc
rcll
sti
push
mov
adcb
pushf
fdivs
jb
cmpsb
add
js
shll
dec
sbb
addl
vpsubb
fwait
or
fists
orl
xor
sarb
sub
pop
add
add
add
pop
in
outsl
pop
xor
fwait
xor
push
ja
add
or
inc
sarl
shlb
int3
sbb
andl
int3
cmp
xchg
sbb
push
inc
shrb
sarl
ljmp
lods
lods
pop
mov
mov
dec
les
sbb
jmp
xchg
test
push
inc
adc
das
out
jbe
or
scas
dec
insl
sbb
xor
mov
xchg
test
rorb
pusha
imul
stc
add
fistps
sub
fisttps
andl
movl
movl
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
in
test
dec
pusha
scas
jl
insl
lcall
cltd
mov
cmpsb
stos
pop
pop
stc
xor
int3
insb
call
mov
jge
out
push
nop
ss
pop
and
mov
fsts
jge
das
mov
lods
xchg
shlb
sub
fisubs
iret
hlt
in
in
jbe
repz
fwait
arpl
mov
pop
mov
mov
push
fs
sahf
lahf
mov
das
out
pop
pcmpgtd
inc
mov
les
pop
je
pop
sbb
out
cmp
pop
sub
jbe
xchg
push
dec
or
sub
jns
lcall
pop
xlat
pop
js
loope
push
lods
mov
pop
cli
shlb
push
xlat
prefetcht1
cmp
stos
jle
mov
xor
and
sub
paddd
add
pop
daa
xchg
rcr
lock
in
out
mov
xlat
or
cmc
fisubrs
sub
mov
mov
xor
push
movsl
mov
fcmovne
add
or
inc
cltd
out
pop
sbb
clc
or
or
mov
add
mov
pushf
and
inc
push
aam
mov
sbb
xor
sub
jae
imul
pop
xlat
divb
ja
ret
xchg
ret
jae
idivb
lds
add
movsb
mov
mov
mov
call
mov
xchg
xor
repz
add
sbb
sub
mov
mov
jbe
mov
inc
lds
gs
cmpsl
jno
shlb
mov
cmp
xchg
les
xchg
shlb
int
test
lock
pop
jg
movsl
xor
shrb
int
push
das
cmp
jge
sub
mov
mov
mov
fsubs
fisubrl
gs
push
pop
pop
sub
imul
push
adc
dec
lock
in
clc
pop
cli
orl
daa
mov
add
dec
sahf
cmp
push
movsb
push
cmp
lret
movsb
vcmpsd
cmp
stos
xor
ljmp
arpl
sub
movsl
fwait
sub
repnz
ljmp
test
inc
push
cmp
das
xor
in
sbb
arpl
push
lds
sbb
jae
sub
mov
fcmovnu
mov
lcall
fsts
shlb
gs
jmp
popa
lcall
ffreep
jl
xorl
arpl
inc
xor
out
push
scas
jne
pusha
jbe
pop
pop
out
xor
pop
cld
arpl
pop
adc
mov
fdivrl
lcall
sbb
call
sbbb
and
sti
inc
xchg
lret
or
rol
mov
loop
mov
mov
push
or
subl
in
addr16
stc
push
scas
or
xabort
jp
pop
mov
js
xchg
loope
ficoml
push
mov
or
arpl
loop
jmp
pop
aas
call
clc
sti
orl
inc
mov
mov
cmp
lret
lret
aad
sub
xor
lds
ret
roll
jg
push
fnstsw
jb
lods
arpl
and
pop
pop
push
hlt
push
push
popa
push
mov
insb
fs
mov
xor
push
gs
xchg
jl
mov
sbb
dec
mov
mov
sub
sub
stos
fs
fnstsw
out
or
shr
xchg
adc
push
xor
push
outsb
popa
inc
add
jb
sbb
and
push
mov
dec
dec
xor
int
mov
lea
xor
dec
mov
inc
scas
jle
iret
cmp
xor
sub
add
inc
fwait
jbe
or
das
sahf
xlat
es
out
add
sub
leave
sub
loop
mov
jmp
sub
or
jl
dec
pop
xchg
adcl
into
in
jg
enter
mov
repz
inc
sbb
out
push
cwtl
arpl
dec
jno
mov
std
clc
fistl
xchg
loope
xor
lahf
cltd
orb
dec
arpl
jo
dec
movsb
es
leave
jnp
push
push
subl
xor
mov
cmp
or
jg
add
mov
in
xor
dec
aad
imul
push
dec
mov
sub
fisubl
movb
mov
gs
add
xchg
adc
out
xchg
insb
ret
into
or
xor
or
lea
into
dec
push
stos
es
inc
xchg
mov
add
dec
popl
pop
sbb
adcl
xchg
sti
outsl
push
mov
push
mov
rolb
mov
fnstcw
movsb
movsl
push
lods
jecxz
xor
jp
mov
popa
mov
xor
sub
sarl
test
pop
sbb
into
xor
out
pushf
dec
inc
in
iret
xchg
jbe
out
cmp
push
adc
adc
loope
cs
mov
js
or
daa
loope
and
add
adc
mov
pop
inc
mov
jbe
lods
addr16
sbb
andl
pop
ds
adcl
mov
xchg
fstl
iret
in
mov
mov
out
adc
inc
inc
jp
int3
in
les
jno
pop
clc
mov
mov
jmp
lea
push
sub
loopne
jecxz
loop
pop
rcr
adc
jae
add
adc
sbb
stos
jecxz
rol
sbb
inc
rol
out
sbb
pop
pop
scas
cmp
xlat
push
mov
ret
push
cmp
cmpsb
rclb
mov
or
sahf
enter
lods
cli
adc
jae
push
pop
out
mov
xchg
xchg
fldt
jge
xor
mov
movsb
inc
aas
xchg
xor
xor
mov
adc
cld
cli
loopne
pop
movsl
scas
mov
popa
inc
lret
mov
add
popf
add
outsb
aad
lods
scas
xor
xor
mov
sbb
push
aas
add
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
fisttps
adc
push
clc
adc
or
mov
call
fcmovbe
lcall
subl
stos
xchg
stos
inc
stc
repz
cmpl
test
repz
jmp
imul
mov
aas
push
cmp
cmpsb
cmp
pop
cmp
sbb
cwtl
push
sbb
xor
gs
fildll
mov
add
lock
aad
pop
xor
push
ret
daa
push
jge
loope
xor
sar
sbb
cli
add
mov
leave
or
flds
cmp
xchg
inc
xor
test
lret
cmp
mov
out
shll
cmc
xor
mov
or
adc
cltd
roll
mov
or
xchg
sub
sbb
in
cltd
es
fmuls
xchg
popa
outsb
loop
push
shll
fs
std
pop
jno
push
inc
jecxz
lcall
push
sub
mov
decl
mov
ret
out
or
mov
jge
inc
adc
insl
mov
fadds
xor
jae
clc
icebp
xor
mov
push
push
jo
mov
dec
xchg
jecxz
int
dec
mov
jnp
fcomps
dec
icebp
and
inc
cmc
out
out
std
sti
cmp
out
test
push
repnz
dec
lcall
loop
lods
cli
roll
mov
test
jne
orb
cmp
xlat
mov
int
jno
int3
ljmp
dec
dec
dec
push
cld
adc
dec
je
test
aaa
cmp
scas
and
xor
test
xchg
or
push
test
xchg
call
xor
xchg
das
cmp
popf
lds
and
fwait
jmp
loop
inc
sub
mov
outsl
sbb
ja
test
push
add
inc
cmpsb
mov
das
pop
xchg
dec
cmc
fisttps
inc
mov
sub
cmc
out
add
ss
push
popa
xorb
fsubp
ss
and
popf
cmp
inc
or
fdiv
pop
jg
out
xor
mov
loop
aad
pushf
out
into
dec
mov
push
jecxz
lods
bound
push
mov
pop
sbb
ja
add
fucomp
add
in
sub
leave
lahf
push
push
shrl
shll
addr16
enter
pop
mov
lahf
dec
jns
jmp
fldl
loop
mov
pop
xor
and
rcll
imul
icebp
popa
adc
dec
lods
fs
and
or
movsl
test
mov
push
das
icebp
push
cltd
or
jbe
aaa
jne
iret
ljmp
jle
daa
inc
dec
loopne
mov
jae
pop
inc
movsb
fisubrl
ret
daa
icebp
in
or
js
popa
push
or
js
jge
es
inc
push
data16
insl
inc
testb
scas
inc
inc
sti
das
aad
sbb
inc
adc
lcall
outsl
int3
lods
mov
mov
jns
test
decl
hlt
fsubr
outsl
adc
mov
dec
aaa
dec
scas
xor
daa
cmp
push
push
xor
sbb
mov
mov
inc
sub
in
fistl
lcall
jns
sbbl
sbb
sub
xchg
mulb
jl
mov
scas
stc
push
and
fstpl
jb
or
inc
and
dec
sub
fiadds
fsubl
inc
mov
dec
ljmp
ss
mov
jl
enter
repnz
lahf
bound
mov
cmc
mov
addr16
sub
cmp
sbb
push
inc
and
loopne
mov
cmp
add
lea
jb
roll
push
addr16
into
jp
sbb
or
push
imul
or
push
add
mov
jne
jne
andb
xchg
jmp
pop
push
sahf
fs
mov
prefetcht0
and
pop
cmpb
and
mov
mov
push
outsb
fstps
fs
inc
sbbb
mov
sub
jbe
arpl
jmp
push
push
lahf
inc
sub
or
in
lret
add
aas
sub
in
inc
mov
mov
ja
sarl
or
sbb
xchg
add
sub
push
pusha
data16
inc
clc
mov
push
cmp
fimull
outsb
add
jae
pop
cli
bound
push
jo
cmpl
in
mov
xor
out
out
cmpsb
stos
icebp
sti
aad
xchg
mov
cwtl
and
stos
out
push
lahf
call
mov
jbe
test
mov
loop
fs
push
dec
in
out
je
fwait
and
sti
outsl
mov
fimull
call
loopne
outsb
mov
push
xchg
cmpsl
insb
jno
pop
mov
ja
iret
insb
xchg
ljmp
fs
neg
dec
mov
scas
andl
sahf
mov
mov
into
addr16
pop
xchg
jecxz
out
sbb
sub
jb
insb
cltd
sbbl
mov
inc
incl
data16
adc
pop
out
rcrl
dec
lret
cmp
aad
loop
loope
fnsave
inc
rorl
je
inc
scas
cli
pop
lods
jp
popl
jae
sbb
and
xchg
xchg
test
rcrb
or
loope
mov
push
in
cmp
in
and
les
pop
xorb
jmp
jg
cs
nop
ret
ret
scas
xor
test
pop
jnp
mov
std
pop
clc
push
inc
loopne
arpl
pop
dec
loopne
jae
mov
aas
js
ret
cmp
lret
xchg
ds
sub
in
lods
ljmp
inc
lahf
pop
lahf
mov
xor
jo
adc
and
ds
imul
mov
sbb
inc
push
test
enter
and
test
add
pop
pop
push
fimull
pushf
mov
subl
stos
mov
outsb
adc
sbb
mov
pusha
xchg
pop
scas
mov
cmpl
pop
fildl
mov
sub
dec
lret
mov
lcall
ss
add
movl
mov
mov
jmp
movl
jae
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
js
push
rcll
push
clc
adc
dec
xor
int
int
add
inc
jns
aad
loop
jae
jmp
ret
daa
jno
inc
and
daa
pop
shlb
aam
xchg
push
jb
pop
bound
and
aam
mov
xor
fcoml
adc
cmc
dec
pop
fwait
sub
push
dec
js
hlt
pop
sbb
in
jge
iret
pushf
or
xchg
shll
daa
shrl
insb
push
mov
push
adc
sbb
inc
jns
fbstp
cmp
cmp
dec
cli
jne
dec
lahf
shll
ret
std
movl
xor
lds
sahf
loope
mov
andl
sbb
movsb
mov
add
pop
inc
outsb
dec
and
lcall
ffree
cmc
sub
fwait
xchg
shr
testb
repnz
sbb
sbbb
or
mov
xchg
repnz
icebp
in
mov
jns
xchg
movsl
icebp
bound
cmp
inc
xchg
ds
fistl
arpl
outsl
stos
mov
cmp
les
test
xchg
ficoms
dec
pop
jbe
cmpsl
testb
lret
test
int3
push
popf
outsl
xlat
inc
add
jo
mov
sub
push
dec
xchg
dec
adc
or
aaa
pop
mov
aam
dec
dec
sbb
nop
mov
fidivrl
xchg
jns
mov
scas
aam
push
push
lret
scas
inc
cmp
push
cmp
jge
pop
jecxz
push
imul
dec
fstpl
jg
outsb
sub
sub
je
stos
sub
lcall
les
aam
mov
fsubrp
loope,pn
sbbl
fucomi
mov
sahf
or
adc
adc
xor
and
jno
fstps
mov
sub
and
push
daa
fisttpll
pop
push
xchg
jne
push
sub
pop
jnp
jae
sbb
cld
xor
mov
mov
imul
sub
cmp
shrb
sbb
rclb
aas
and
and
insl
rcl
add
xchg
fdivl
mov
sub
out
stos
push
cmpsb
stc
mov
and
mov
pop
mov
jp
dec
and
dec
es
lret
push
mov
icebp
imul
dec
stos
and
push
mov
test
ds
sarb
ljmp
lret
aam
cmp
jle
in
fisttpl
push
xchg
xor
ss
adc
test
xlat
insb
pop
std
cli
scas
out
in
imul
cmc
jo
arpl
dec
loop
out
shll
in
ljmp
adc
icebp
enter
sbb
adc
jo
data16
sbb
fwait
adc
movsl
sub
lods
mulb
int
push
sub
icebp
ss
int3
fbld
fmul
inc
xchg
sub
dec
fwait
sarb
or
int
push
das
negl
fcmovne
lret
jg
cmpb
add
fldcw
dec
add
pop
and
rol
jne
sub
js
or
pusha
jp
shl
shlb
add
jb
int
repnz
jecxz
pop
push
adc
aaa
adc
dec
stos
sbb
add
pop
mov
in
dec
es
jne
mov
mov
iret
fwait
outsb
add
sbb
mov
out
mov
xchg
dec
mov
lods
mov
xor
mov
xchg
adc
notl
adc
sahf
push
dec
mov
ret
sub
adc
mov
inc
je
dec
inc
cmp
dec
lcall
mov
inc
fmul
ss
mov
xchg
mov
push
out
sbb
xchg
push
rcrb
repz
xchg
push
cmp
mov
mov
adcl
jns
push
mov
sti
xchg
stc
push
pop
fxtract
outsl
pop
test
or
mov
fcomps
dec
test
outsb
loopne
lods
and
mov
pop
pop
xchg
in
jno
cmp
jp
int3
das
out
stos
aam
mov
cmp
dec
xadd
loop
arpl
lahf
pusha
inc
gs
push
popf
mov
xor
add
das
jae
push
dec
push
dec
aad
inc
add
mov
shll
rcrl
jno
jbe
in
or
rol
cmp
push
xor
cwtl
xchg
mulb
xor
loopw
push
sbb
jle
in
inc
xchg
add
pop
adc
cld
cmp
and
sbb
add
sahf
jle
ret
jns
dec
push
push
scas
scas
rorb
inc
ljmp
scas
sub
mov
pusha
loopne
or
inc
add
out
testb
rolb
ret
lret
push
push
pusha
inc
dec
mov
inc
pop
out
xchg
jb
xchg
lret
fimull
mov
stos
and
adc
enter
push
lods
xchg
push
sub
out
xor
das
icebp
xlat
fs
divl
push
in
mov
jns
dec
jecxz
cmpsl
cmovbe
js
sub
fldenv
je
lcall
mov
inc
cmpl
add
loope
push
aas
inc
push
sti
push
test
cmpsb
outsb
stos
pop
bound
cmp
sti
xchg
hlt
xchg
andps
and
movsl
out
insl
and
pop
gs
mov
mov
pop
mov
pop
mov
jge
pop
out
test
test
push
mov
xor
pop
sbb
out
sbb
xor
or
pop
adc
es
pop
jo
fwait
jne
iret
pop
cmpsb
cs
outsl
sub
bound
rcrl
enter
jb
subb
add
push
dec
adc
mov
xor
mov
scas
and
push
dec
mov
pop
popa
adc
mov
aad
repz
into
test
out
lods
mov
shrb
sbb
mov
cmp
imul
rclb
xor
mov
add
and
jne
xchg
add
or
adc
aaa
push
pop
cmpsb
in
pop
jo
pop
adc
cld
ret
pop
mov
cmp
ja
lret
inc
enter
jae
cld
mov
rcrl
sub
mov
dec
xor
in
sbb
std
dec
mov
adc
push
dec
sbb
shlb
adc
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
aad
or
xchg
ret
adc
push
clc
adc
ljmp
mov
lea
ljmp
nop
fists
cmc
outsb
fmull
push
and
cld
popa
test
sbb
pop
into
xor
fucompp
ds
mov
cmp
int
mov
js
or
cmpsb
sub
cltd
daa
pop
push
and
pop
neg
inc
mov
stc
add
enter
xor
sub
push
and
jecxz
jne
push
sbb
xchg
out
push
or
cmc
inc
mov
enter
dec
xchg
add
loop
out
icebp
out
mov
and
xchg
insl
cmp
lcall
lods
sbb
lret
repnz
out
je
sub
fs
enter
mov
jo
cltd
mov
add
sub
xchg
or
movl
call
bound
add
or
faddp
lret
out
bound
sbb
bextr
mov
popf
jnp
les
aad
dec
xchg
push
aam
fists
inc
aas
icebp
mov
loop
mov
stos
fldt
mov
sbb
sti
sub
ja
out
ret
fs
add
dec
test
cmp
popa
fwait
xor
lret
xchg
lock
div
das
dec
add
int3
gs
push
mov
rolb
add
ret
adc
incl
out
mov
add
enter
jmp
mov
int3
enter
ja
add
inc
mov
cmpsb
repnz
jno
cli
inc
test
mov
xor
sub
negb
shl
dec
xchg
jno
lds
fmuls
mov
xor
inc
icebp
leave
xor
test
popa
dec
mov
jo
aam
mov
mov
pop
clc
imul
and
dec
neg
xor
loope
mov
fcmovbe
sbbb
jg
xorb
lods
jmp
bound
xchg
sbb
xchg
test
cmp
mov
lock
popf
ret
cmpb
cmc
push
push
mov
mov
sub
jp
inc
or
mov
inc
xchg
xchg
dec
mov
into
xchg
nop
gs
pusha
flds
cmpl
xchg
cltd
jge
push
sub
pop
in
sbb
mov
cld
pop
sti
or
in
loope
imul
incb
sub
sbb
jb
or
xor
test
mov
fstps
repz
or
cmp
frstor
insl
mov
mov
fldl
lahf
adc
lcall
jbe
add
cwtl
mov
push
enter
loopne
sub
mov
dec
mulb
fmuls
int3
push
js
push
or
pusha
push
jns
dec
dec
lret
xchg
test
out
sbb
outsl
jmp
adc
clc
nop
and
scas
add
shrb
adc
jno
dec
jecxz
and
or
jl
aam
cmpsb
or
xor
repz
lret
sub
xor
inc
sbb
dec
aas
dec
cmpsb
mov
fsubr
stos
dec
jne
lock
add
xor
mov
inc
mov
sbb
lret
mov
rcr
mov
out
and
insl
arpl
stos
insl
sub
gs
es
les
aad
lods
sti
push
xchg
popf
jns
xchg
fisubs
and
testl
lods
jo
dec
mov
add
icebp
adcb
roll
int3
or
push
mov
clc
cmp
xor
pop
mov
pop
das
sbb
es
lods
adc
inc
arpl
int
inc
lds
mov
aad
ds
inc
mov
jl
in
out
popa
popl
cwtl
call
xchg
mov
les
jle
pop
aas
sub
xchg
es
movsb
repz
fcoms
ja
gs
push
gs
insl
and
outsl
test
mov
jbe
xchg
inc
cmp
out
loopne
sbbl
dec
jecxz
enter
repz
aad
ficoms
jl
sarl
jmp
xor
push
daa
data16
sub
insl
in
push
adc
add
loope
fwait
or
fwait
mov
divl
cltd
inc
adc
repnz
push
jnp
mov
arpl
aad
jmp
loope
cs
pop
adc
daa
mov
cmp
pop
push
adc
mov
pushl
hlt
xchg
add
call
xchg
and
xor
fs
push
xor
pop
imul
adc
xlat
jo
add
lahf
fidivl
lret
test
popf
mov
fdivrp
adc
push
mov
shlb
push
lock
rorl
push
repnz
in
xlat
fadd
jp
add
or
push
jecxz
pop
ds
inc
and
xchg
add
decl
lret
rorl
jmp
cmp
sarb
out
in
inc
pushf
mov
mov
fimuls
dec
mov
xor
lock
cmovl
aas
loop
int
pop
in
dec
inc
jmp
ss
add
inc
mov
sbb
and
inc
fisttpl
inc
mov
cmp
dec
pop
dec
scas
inc
mov
in
cmp
cmpsb
sub
in
pop
or
sub
aas
mov
adc
aas
cmc
dec
test
dec
sbb
mov
xchg
sub
mov
jecxz
cmp
jo
ret
in
jge
push
xchg
sub
xchg
arpl
mov
lods
and
mov
outsl
mov
xchg
enter
sub
sbb
mov
xor
pop
push
mov
outsb
dec
cmp
and
outsb
jp
call
adc
sub
lcall
jns
cwtl
jno
test
mov
pop
fadds
test
adc
cmp
cmovae
inc
inc
xchg
adcb
dec
fcomp
xchg
aas
imul
loope
mov
cmp
mov
sbb
icebp
divl
test
jno
push
movsl
movsl
int3
mov
add
call
ss
add
movl
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
repnz
adc
push
clc
adc
sbbb
fdivr
stos
jp
cmp
mov
or
addr16
lret
adc
lcall
les
mov
lret
stos
sub
scas
pushf
adc
pop
pop
int
push
test
sub
xor
or
and
es
div
mov
push
mov
xchg
xchg
cld
mov
fnstenv
xlat
adc
dec
add
xchg
push
and
xor
add
pop
mov
xchg
shrl
mov
push
xchg
adc
fwait
jae
lret
in
sbb
popa
pop
sbb
push
mov
ja
mov
xor
loope
xlat
imul
mov
jg
sbbb
call
test
insl
xchg
xchg
sub
mov
popf
je
pop
push
hlt
outsl
jecxz
dec
dec
out
mov
es
sar
mov
xchg
jnp
call
adc
movsl
xchg
es
jmp
pop
pop
mov
jecxz
insb
aaa
fmull
daa
inc
pop
mov
pusha
xchg
inc
mov
orl
cltd
jle
jl
push
lret
test
shl
sbb
or
lahf
mov
cmp
adc
dec
cli
mov
mov
or
push
out
sti
lock
fistpll
xchg
pop
int
and
xchg
and
cmp
xchg
jg
mov
repnz
stos
call
jbe
icebp
pop
shll
pop
or
pop
aas
jae
fwait
dec
iret
ret
arpl
mov
outsb
mov
ss
hlt
loopne
insl
in
mov
test
dec
push
shr
pop
dec
mov
insb
jnp
mov
dec
add
ja
js
cld
push
stos
add
mov
xchg
inc
mov
stos
stc
sub
mov
xchg
cld
and
call
std
test
sub
popf
sbb
xchg
ss
ja
pop
or
jnp
sbbb
nop
pop
push
xchg
in
fsubr
sbb
sbb
das
popa
push
ljmp
in
mov
sbb
test
or
rol
cmc
inc
cmp
out
addr16
cmp
mov
mov
inc
cli
rorb
sbb
popf
fnstcw
jmp
lcall
outsb
fwait
pop
sti
into
fldl
shlb
lods
jmp
jl
and
test
jnp
add
jo
or
sbb
and
scas
cmc
testl
lret
inc
add
fidivl
in
adc
mov
xor
int
sbb
mov
fldenv
mov
mov
xor
push
pop
pop
loopne
fldt
test
mov
data16
mov
mov
xorl
fidivrl
fcmovnu
mov
push
bound
and
scas
lods
scas
loopne
xchg
into
pop
push
ja
pop
push
adc
addr16
mov
clc
xor
mov
gs
xlat
repz
cmp
jno
push
fmuls
pop
adc
sar
ljmp
imul
arpl
aad
fcomps
imul
pusha
dec
fmull
jae
jp
dec
add
jecxz
and
repz
jmp
arpl
mov
std
pop
inc
repz
dec
aas
jne
mov
fisttpll
icebp
mov
adc
adc
lcall
mov
jl
mov
mov
dec
lahf
inc
lods
daa
jnp
iret
pop
adc
gs
outsb
ss
xor
rcrl
xchg
ljmp
xor
fidivl
std
ja
test
sub
ret
pop
iret
sti
mov
push
push
lret
pop
lret
inc
add
int3
push
jmp
shll
out
inc
lret
jp
sub
push
or
mov
xor
pop
jl
jno
jne
and
popf
sub
push
lods
cli
cld
push
dec
mov
movsb
sbb
bound
ds
xchg
cmpsl
xchg
popf
jnp
mov
lods
imul
insb
pop
popa
pop
pop
adc
push
mov
lcall
add
xchg
mov
push
mov
xor
mov
inc
jle
ss
add
arpl
cld
int
fs
sub
xchg
mov
movsb
call
mov
lret
pusha
xchg
setge
js
sbb
inc
ljmp
int3
sbb
xor
dec
jl
loope
je
xchg
lds
repz
fdivs
stc
push
lea
push
test
test
scas
inc
scas
imul
push
cmpl
clc
lahf
inc
mov
adc
shrb
sbbb
xor
adc
rcrb
jne
mov
jle
cmp
sbb
insb
pusha
insl
cmp
insl
in
inc
and
out
sbb
ret
stos
cltd
mov
jecxz
and
pop
ret
pop
lea
outsb
or
cmp
pop
addr16
andb
sbb
jp
fcmovu
xchg
imul
pop
andb
pop
add
push
andb
cmp
je
fadds
ds
cld
dec
jb
inc
jb
fmull
fwait
shlb
mov
mov
xchg
cmp
sub
loopne
or
mov
into
add
movsl
ret
add
lea
jl
jns
or
cmp
inc
insb
mov
pop
mov
jl
int3
lds
test
daa
in
cmp
fldl2t
stc
jno
insl
push
cmpsb
mov
jae
lret
or
jne
in
add
das
mov
rcrb
xchg
sbbb
mov
adcb
daa
ds
xchg
ret
sbb
push
adc
jle
adc
mov
test
lcall
sub
pop
mov
lret
mov
test
aad
lret
jmp
rclb
cmp
mov
jecxz
and
mov
dec
sbb
jbe
mov
imul
shl
sub
mov
dec
mov
dec
icebp
mov
popa
jo
test
fdivl
fsts
mov
ja
mov
or
lret
ss
xchg
je
push
sar
dec
mov
imul
test
xchg
lds
mov
xor
or
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
or
cmpsl
adc
push
clc
adc
or
xchg
add
inc
adc
outsb
push
sbb
lods
stos
cwtl
sbb
pusha
mov
jg
fcompl
popa
sbb
or
daa
cmp
inc
jl
shrb
adc
scas
mov
sahf
pop
data16
mov
test
xchg
fmul
popa
push
xchg
popa
mov
mov
sbb
jg
mov
dec
jl
push
gs
inc
adc
mov
mov
hlt
sub
cmc
lcall
out
loopne
adc
add
fsts
loopne
push
sti
jnp
xor
movsb
sti
data16
mov
push
imul
inc
sub
sbb
stos
dec
mov
arpl
or
adc
xchg
nop
cmp
lods
jle
fisubrs
fidivl
daa
leave
xor
mov
xchg
mov
in
adc
jle
xchg
push
jg
popa
push
or
mov
sbb
or
mov
rorb
mov
sub
cmp
sbb
fists
adc
mov
jb
jnp
fs
in
dec
adc
xor
lods
xchg
xchg
lret
cmpsl
call
loope
mov
or
cmp
xrelease
sbb
pusha
jns
sub
mov
je
imul
sahf
rorl
push
icebp
stc
dec
xor
popa
and
mov
in
push
or
mov
sbb
rcll
mov
mov
insb
mov
sahf
xchg
push
cli
xchg
pop
aas
jae
xchg
sub
dec
fmull
cmp
or
cmp
mov
xor
addr16
xchg
sbb
sub
pop
dec
lret
push
pushw
repz
stos
adc
std
imul
ficoms
inc
sub
pop
sub
jge
inc
mov
mov
aad
inc
mov
inc
xor
dec
out
cmp
add
lea
aad
inc
jae
aas
stos
xor
jg
repnz
popa
xchg
in
test
sbb
jp
and
lea
sub
cli
jno
ljmp
jg
cmp
jg
gs
imul
cld
jmp
add
test
sub
mov
movsl
xchg
aad
aad
sahf
mov
cmp
rcr
pushl
and
add
push
xchg
xor
jg
adc
dec
xorb
jle
sbb
push
xlat
sub
jmp
dec
jl
jae
jl
icebp
in
insb
pop
test
or
jno
pushf
pop
cmp
inc
add
xor
aaa
sbb
mov
leave
xchg
leave
xor
aas
xchg
mov
cmpsl
ljmp
xor
jbe
push
pop
sbb
pop
jo
mov
dec
jle
mov
rep
sub
int3
lea
mov
lret
cmp
inc
fs
loop
dec
icebp
lcall
cmp
loope
xchg
and
push
outsb
cs
mov
ja
fmull
xchg
and
mov
test
add
loopnew
push
sti
sahf
mov
mov
bound
push
sbb
data16
imull
jecxz
lock
test
inc
dec
lea
std
jno
jge
jl
push
push
cmp
and
es
mov
add
cmpsb
sbb
adc
sbb
daa
test
cmp
mov
xchg
inc
das
leave
das
pop
lds
shrb
test
idivl
or
lret
repnz
scas
push
mov
or
je
dec
add
xor
rolb
dec
push
imul
jge
shll
ja
lds
pushf
push
mov
daa
inc
rclb
mov
std
orb
inc
pop
pop
push
mov
xor
xchg
mov
push
adc
mov
xorl
add
cmp
std
pop
int3
mov
test
aad
and
mov
cmp
stc
inc
sahf
cmp
lret
mov
fcoms
jo
dec
xchg
xchg
cmp
or
sub
cltd
lods
lahf
sbb
rclb
test
in
adc
xchg
xor
inc
xor
jg
push
int3
clc
shl
add
dec
fiaddl
leave
xor
loopne
jp
lret
in
xor
jo
cmp
dec
lcall
mov
enter
mov
arpl
xchg
and
pop
dec
dec
jbe
mov
lret
jmp
add
xchg
xor
cld
xor
arpl
dec
xchg
pmaxub
test
into
fwait
xchg
mov
out
lcall
bnd
sub
jge
mov
mov
inc
icebp
dec
xor
push
gs
fcmovnbe
mov
mov
int
out
inc
jmp
cmp
test
pop
insl
dec
mov
jo
sbb
inc
mov
fistps
mov
shr
and
sub
data16
or
mov
jmp
addr16
mov
adc
mov
data16
popa
fwait
pop
push
mov
jl
inc
mov
mov
add
imul
mov
mov
cmp
inc
inc
add
pop
test
sub
pop
mov
mov
scas
dec
xchg
pushf
testl
pop
jb
xchg
cmp
mov
fnstsw
pop
jo
cmpsb
cwtl
dec
aaa
dec
in
cmp
jg
add
mov
test
pop
imul
insl
sar
test
mov
pop
jne
ds
movsb
ret
aad
inc
add
hlt
mov
sbb
insl
jbe
lea
in
cmc
imul
out
add
dec
add
jmp
xor
mov
in
push
aas
fcmovnu
and
sub
fisubrl
int3
push
cmpsl
es
bound
cmp
dec
mov
add
pop
sbb
jge
cli
cmp
cmpsl
or
bound
mov
jle
cmpb
inc
jno
xor
dec
insb
daa
cs
or
outsb
loop
rcr
inc
xchg
dec
call
pushf
in
mov
xchg
xchg
pushf
sbb
mov
adcl
mov
sbb
add
rcrl
xor
icebp
inc
ret
cmp
cmp
sub
call
test
sub
dec
dec
orl
jns
adc
push
sbb
xor
push
shl
xlat
les
inc
hlt
movl
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
push
add
adc
clc
adc
cmc
mov
pusha
adc
mov
sbb
cli
xchg
sbb
aas
mov
outsl
jae
arpl
movsb
pop
dec
mov
pop
mov
xor
cmp
aas
clc
shl
push
or
stos
inc
or
add
negb
inc
mov
out
ret
inc
xor
jp
aad
sub
notl
mov
push
mov
push
inc
ret
push
mov
out
pop
jae
rcll
clc
lods
mov
xor
sub
push
dec
nop
mov
mov
xchg
and
and
mov
bswap
popf
cltd
jmp
dec
cmc
cmp
pop
imul
les
jmp
sbb
scas
arpl
jg
cwtl
dec
stos
mov
orb
dec
cmp
int3
jae
and
cmpsb
xchg
push
push
icebp
sub
int
std
push
or
adc
setb
ret
shlb
adc
orb
pop
add
and
xchg
adc
inc
xchg
pop
fs
loop
push
pop
aad
lods
jg
mov
stc
mov
or
fcomip
push
pop
push
mov
dec
rcr
xor
hlt
call
or
cld
andb
pop
test
add
jbe
sahf
fldt
mov
cmp
in
mov
cmp
push
inc
into
dec
pop
mov
cmp
inc
mov
lods
outsb
pop
lcall
out
sub
jmp
push
xor
or
mov
lea
jno
sbbl
add
add
push
pop
sarb
pop
cmp
jb
mov
repz
push
filds
inc
mov
test
js
inc
mov
das
std
xchg
jmp
and
insb
mov
mov
sbb
decb
add
jecxz
xor
fsubs
mov
xchg
jge
sbb
push
cmp
jge
or
test
xrelease
pop
mov
shrl
adc
xlat
imul
jecxz
pop
pop
xchg
rcrb
fwait
lcall
pop
pop
pop
push
sbb
out
sub
stos
adc
addb
mov
jmp
push
cmp
sub
popa
mov
cmp
out
int3
jb
repnz
add
fisubrs
lcall
xor
lcall
mov
sub
jbe
jae
std
jge
sbb
jo
clc
outsl
adc
std
mov
in
push
loope
hlt
xor
xlat
stos
xchg
mov
mul
mov
std
adc
inc
clc
lods
out
out
mov
dec
mov
std
jg
inc
call
mov
inc
xor
roll
mov
mov
popa
sbb
xchg
push
sarl
or
and
xlat
push
repz
xor
xor
outsl
add
ret
pop
sbb
pop
lcall
gs
test
inc
pop
aad
xchg
cmp
push
inc
das
cwtl
loop
lcall
push
sbb
in
mov
push
inc
pop
cmp
call
jo
imul
or
rcll
fcmovu
sbb
sub
jle
add
pop
dec
daa
out
loopne
repz
subl
xchg
mov
push
inc
dec
xorb
enter
adc
mov
fld
pop
xchg
loop
lret
notb
sub
sbb
mov
lods
mov
jp
xchg
lods
jmp
jbe
and
and
inc
pusha
pop
aad
mov
xchg
mov
cmpsb
test
mov
jge
sbb
stos
pop
mov
inc
xchg
xchg
push
jg
inc
leave
in
push
pop
sub
sub
sbb
sbb
repnz
shrb
push
lods
out
fmuls
inc
jo
jecxz
push
mov
cmp
push
adc
jecxz
cmpsb
data16
xor
stos
dec
fdivs
popa
fcmovbe
inc
sbb
and
mov
mov
pusha
js
into
pop
mov
lods
aam
sbb
push
daa
sub
sahf
xor
sbb
fmul
orl
popa
in
imul
jle
popa
dec
add
xor
and
je
dec
pop
shrl
adc
mull
mov
fwait
test
call
cmp
lret
bound
jbe
sub
xor
ja
cmp
pop
pop
shrb
mov
mov
push
aam
mov
ret
xchg
pop
sbb
add
lret
mov
test
and
pop
mov
pop
xor
shl
pop
hlt
push
mov
notb
mov
in
pop
stc
and
dec
aaa
cmpsl
cmp
testl
loope
scas
fwait
sti
mov
sub
mov
sub
scas
mov
lret
test
test
xchg
divl
mov
cmp
aas
aas
mov
pop
add
pop
or
dec
cmpb
aam
jnp
outsb
mov
mov
filds
mov
popa
test
shrl
gs
cwtl
faddp
xor
imul
xor
je
mov
pop
ja
lods
sti
cmp
out
cltd
adc
adc
movsb
mov
das
cmp
cs
xor
icebp
mov
inc
mov
ret
mov
push
mov
and
xchg
jno
test
lahf
cli
movsb
xchg
mov
mov
mov
cmp
pop
inc
pop
mov
imul
mov
mov
adc
out
lods
scas
mov
rorl
jns
mov
and
fstpl
xchg
pop
jns
xchg
xchg
xchg
insl
lcall
inc
mov
arpl
andl
xchg
or
cmp
inc
mov
in
sub
pop
or
test
icebp
dec
test
iret
jge
adc
std
loopne
xlat
rcrb
out
cmpsb
push
adc
push
in
loope
andl
imul
jmp
mov
or
push
and
ljmp
inc
xchg
jge
adc
clc
adc
add
xchg
add
lods
pop
pushf
test
loop
sbb
sahf
push
lods
mov
push
push
add
nop
jns
cmp
out
mov
mov
cmp
andl
int
pop
cwtl
xor
xor
out
insl
xor
pop
mov
xchg
das
lret
inc
out
std
or
bound
cmpsb
lcall
adc
xor
addb
cltd
outsl
aam
push
or
sub
jnp
xchg
push
aam
xor
and
push
pop
lahf
lods
ja
call
inc
idiv
loopne
mov
loop
push
mov
and
mov
sbb
stc
add
push
fwait
or
lcall
jno
cmc
push
dec
adc
xchg
fstps
orb
ret
shll
test
sti
or
inc
push
xchg
dec
xor
sbb
mov
jo
mov
fnstcw
xchg
fldenv
insb
sub
daa
push
cs
loopne
in
fldl
fsts
mov
push
int
pop
inc
jmp
jg
cmp
lahf
fiadds
js
fildll
pop
pop
pop
add
mov
and
dec
sti
mov
mov
inc
or
jae
call
mov
xchg
ds
mov
cmp
jbe
sub
cmp
ljmp
dec
push
xlat
js
pop
jle
in
fwait
pop
jbe
jmp
lds
lods
clc
ja
mov
stos
test
and
mov
fildll
jno
add
rcrl
add
mov
outsl
das
sub
nop
cmp
aad
inc
jne
inc
pop
xchg
cmp
ret
mov
ret
sbb
xor
cmc
sti
mov
cmp
aad
mov
pop
call
rcr
jae
clc
pop
adcb
lds
dec
mov
sbb
push
ss
adc
test
dec
or
mov
jno
add
mov
mov
sub
pop
cmp
or
jbe
mov
lret
rep
mov
mov
pop
fdivs
mov
mov
adc
std
mov
push
add
leave
sub
jp
into
cmp
or
popa
lods
movsl
mov
movsb
outsl
push
out
inc
push
stos
and
add
xchg
lds
inc
or
shrl
push
sbb
movsl
fisubrl
ret
movsl
pop
shlb
dec
mov
cld
xchg
or
and
call
rorb
mov
mov
test
call
dec
sub
ljmp
out
repnz
or
jle
adc
stc
out
mov
sbb
sbb
cmpsl
hlt
ds
fdivr
xchg
out
subb
inc
xlat
push
lahf
or
jge
adc
sub
jbe
cmpsl
movsl
adc
icebp
int
ds
mov
lcall
into
movsl
in
or
adcb
out
sub
andb
lds
movsb
nop
mov
rolb
push
cmp
rorb
cmp
xor
adc
add
push
push
pop
cs
sbb
or
sub
mov
data16
leave
mov
push
sub
adcb
cmpsl
ss
ret
data16
movb
lods
adc
push
xchg
leave
aas
roll
xchg
push
ljmp
je
cli
cwtl
icebp
sahf
xor
inc
shlb
inc
dec
adc
imull
dec
fimull
xor
jge
movsl
jle
pop
out
loop
data16
ljmp
mov
and
push
and
nop
mov
stc
test
cli
aaa
add
aam
rolb
jo
push
sarb
xchg
rcl
dec
std
xlat
mov
jg
insb
pop
pop
fdivrs
scas
inc
mov
fisubrs
in
lock
mov
and
pop
push
daa
jmp
cmpb
fisubs
repnz
mov
xor
mov
mov
mov
aad
sbb
or
inc
xchg
mov
mov
hlt
pushf
insl
cmpsb
mov
ret
ja
jmp
in
and
add
sub
arpl
mov
mov
test
jmp
inc
daa
push
xchg
dec
and
mov
adc
int
int3
fmul
popa
mov
jb
jno
dec
jae
mov
es
iret
sub
mov
or
subl
je
adc
shl
add
xor
push
call
add
outsl
jnp
add
dec
push
pop
pop
add
pop
arpl
sbbl
add
fs
int
sbb
adc
xchg
jnp
jno
push
pop
mov
enter
ljmp
cwtl
dec
std
pop
pushf
int3
sub
sbb
pusha
dec
fdivl
pop
rorl
es
lods
push
loopne
insb
movsb
into
jne
sarb
inc
cmp
cmp
xor
adc
inc
adc
ja
pop
daa
cli
sub
sub
aam
xchg
inc
insb
push
loope
out
sub
dec
addb
dec
cmp
jl
mov
jle
push
std
cmp
xchg
push
imul
lea
jns
mov
sbb
push
pop
test
pop
inc
push
mov
pop
push
adc
cltd
mov
mov
mov
pop
xchg
pusha
orb
or
aad
mov
xchg
xchg
sbb
xor
pop
mov
into
rcll
icebp
add
sub
lahf
in
addr16
xlat
xchg
pop
or
jns
scas
decb
subl
enter
std
adc
cmpl
or
sub
cld
cmp
insl
loop
lds
pop
ror
leave
pop
insl
dec
movl
and
mov
sti
rolb
into
inc
xor
cmp
push
imul
xor
js
lods
add
xor
cltd
int
icebp
lock
shrl
xchg
mov
std
sub
cld
xchg
icebp
mov
outsb
jae
xor
adc
mov
mov
pop
jle
jb
sarb
pop
test
adc
hlt
mov
adc
mov
add
mov
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
stos
add
outsl
adc
push
clc
adc
and
push
add
pop
stos
shll
jmp
nop
sbb
xor
push
lret
subl
add
test
sub
xor
pop
in
dec
addr16
sbb
hlt
push
fisttpll
ret
nop
dec
insb
fcompl
mov
mov
fs
std
inc
incb
adc
cltd
lret
popf
cwtl
les
mov
in
fs
enter
popa
add
lret
and
loop
sub
jb
ret
repnz
sbb
sub
xchg
iret
jae
insb
fwait
jo
std
ljmp
xchg
or
test
sahf
adc
mov
je
shl
dec
data16
cli
lds
xchg
movsb
mov
sarb
xchg
jne
add
mov
mov
loopne
dec
sub
sahf
icebp
int
jecxz
or
divl
repz
mov
and
sbb
popa
push
cmp
jecxz
les
sub
push
xor
divl
mov
xchg
sarb
pop
aaa
icebp
lock
es
es
stos
fsubrl
mov
and
xchg
or
lahf
inc
or
jg
iret
lret
js
loop
cmp
adc
sbb
dec
fmuls
pop
lods
pop
in
jno
mov
das
inc
dec
and
data16
mov
incb
fwait
sub
lods
mov
outsl
sarb
int3
aas
inc
pop
call
daa
inc
es
popa
sbb
jp
mov
add
sbb
mov
pcmpeqb
push
and
inc
pop
ss
call
push
pop
ret
pop
test
and
and
stc
fisttps
mov
test
lods
pop
shlb
pop
iret
leave
insl
inc
and
mov
jne
out
push
aaa
mov
lret
addr16
loop
mov
add
mov
push
adc
pusha
les
dec
pusha
pop
adc
call
push
mov
add
mov
or
mov
jae
test
sub
sbb
cmp
testb
aas
je
in
loope
mov
call
cltd
out
mov
cli
imul
cltd
add
sbb
lret
adc
sub
jns
sub
fsubr
xchg
mov
ret
adc
adc
jae
jne
fmull
jnp
pop
and
shl
repnz
lcall
fadd
pop
ljmp
pusha
mov
test
mov
xchg
inc
mov
pop
lret
aam
test
dec
push
outsb
jo
add
push
cmp
add
push
pop
push
mov
out
mov
and
xlat
jmp
fiaddl
push
idivl
dec
shll
push
sarb
adc
xor
push
push
xchg
xorb
out
bound
mov
sbb
fistl
outsl
vshufpd
cmpsl
and
xlat
sbb
lods
and
in
mov
andb
inc
dec
arpl
inc
lcall
adc
cmpsl
sbb
jle
arpl
in
mov
inc
jnp
xchg
in
mov
call
push
lods
int3
insb
xchg
mov
dec
mov
pop
cmp
data16
mov
inc
sub
adc
inc
repz
in
sub
repz
cwtl
xchg
andb
iret
inc
lret
adcl
xchg
leave
int3
aad
xchg
jns
cwtl
xchg
dec
pause
add
dec
subl
push
bound
ja
sbb
imul
cmp
and
push
lock
and
cltd
mov
bound
insl
gs
test
sbb
mov
int
arpl
xchg
pop
cmp
mov
push
mov
fmulp
testl
pop
cld
add
mov
pop
out
ficoml
inc
test
cmp
jno
js
xor
jle
loopne
cld
and
jmp
data16
aaa
add
mov
mov
or
sbb
data16
loopne
push
mov
jg
out
or
xlat
imul
es
or
mov
pushf
or
add
outsb
pop
xchg
shrb
push
shr
les
js
mov
jae
std
xor
fwait
daa
mov
outsb
sub
mov
adc
cmp
cwtl
mov
and
xor
pop
out
andl
fiaddl
mov
nop
inc
push
lds
ljmp
mov
ljmp
or
pop
dec
lcall
and
ljmp
rcrl
lahf
xlat
shll
and
aam
mov
mov
pop
cmc
pop
mov
pushf
xor
cmpsb
sbbb
mov
cmc
dec
imul
dec
jo
cmp
pushf
dec
mov
ret
fmuls
push
adc
or
mov
lcall
push
xor
clc
insb
clc
xchg
aam
dec
push
sahf
into
xor
or
lret
add
dec
dec
dec
lods
adc
movsb
std
mov
adc
fldt
scas
int3
and
rcl
xor
andl
mov
aas
fwait
and
mov
cmp
loop
sti
addr16
jl
sub
mull
pop
sarl
and
jae
movsb
or
sub
lods
add
cmp
je
fcoms
loop
aad
pop
int
scas
mov
jge
or
stos
aas
inc
or
pop
mov
push
arpl
dec
aaa
push
out
int
test
lock
sbb
xor
xchg
dec
ret
inc
sub
loope
mov
loopne
scas
ret
xchg
sar
test
adc
scas
push
adc
push
sub
inc
fidivs
pop
gs
jo
push
push
sbb
mov
leave
outsl
int
mov
sub
sbb
aam
test
pusha
test
jae
dec
ret
insb
mov
stc
test
dec
sbb
jo
andl
outsl
xchg
aad
lret
sbb
aaa
stos
cmp
jae
dec
leave
daa
xchg
mov
sbb
aaa
inc
add
aaa
inc
add
jge
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
mov
hlt
adc
clc
adc
or
add
push
dec
jle
or
popa
int
or
mov
jecxz
dec
mov
jmp
cmp
jp
dec
pop
jo
push
sub
sub
add
mul
mov
stos
arpl
mov
jne
gs
jb
je
fbstp
add
inc
push
mov
dec
jbe
in
fcompl
mov
punpcklbw
gs
adc
add
sbb
cmc
testb
fsubs
jno
sbb
lea
push
mov
incb
inc
in
inc
mov
mov
sub
adc
clc
arpl
mov
ljmpw
jecxz
jb
call
or
lcall
xchg
aaa
sub
add
mov
and
add
jge
jo
arpl
lret
cmpsb
sahf
stc
xchg
mov
or
add
jnp
mov
push
xchg
sub
in
orl
jb
adc
outsb
jnp
or
mov
add
pop
adc
adc
stos
add
push
jbe
and
add
aaa
push
pop
mov
cmp
or
dec
sbb
jnp
int3
aam
xlat
mov
gs
rol
inc
dec
fisubrl
pushf
lea
xchg
pop
js
xchg
sbb
ss
adc
ss
sahf
jbe
jmp
adc
dec
inc
adc
test
xor
out
lahf
lret
pop
push
stos
cmpsl
movsl
lahf
aas
stc
lret
out
aas
ja
outsl
hlt
add
xchg
push
pushf
test
shl
adc
dec
mulb
cli
adc
xchg
orl
les
cmp
std
sub
sbb
sbb
xrelease
cs
adcb
cmc
lcall
push
out
imul
arpl
and
rcr
sub
test
aad
call
cmp
xchg
dec
xchg
adc
pop
xchg
dec
push
repz
lock
clc
adc
sbb
lods
fsub
in
inc
mov
sub
xchg
cs
out
test
add
sub
scas
sub
jns
loop
call
inc
and
lret
add
inc
xchg
push
sar
cmpsb
or
mov
inc
jnp
bnd
fs
sbb
insl
fists
sbb
sbb
movsb
lds
jns
movsb
sub
int3
outsb
daa
outsl
add
aaa
ret
dec
loopne
mov
lods
mov
fucomi
mov
fisubl
xchg
fsubr
xchg
enter
jp
popa
les
xchg
fsqrt
aad
jnp
mov
adc
sahf
adc
cmp
sub
push
nop
dec
dec
sub
push
mov
push
cli
sub
cltd
jle
add
fidivl
push
mov
xchg
sub
dec
out
or
pop
mov
push
xchg
into
or
push
dec
lods
repnz
out
sbb
ds
mov
lret
aas
cli
and
lahf
pop
pop
dec
hlt
cltd
sub
lret
inc
cmpsb
add
or
jne
movsb
mov
cld
dec
int
dec
dec
aaa
sub
daa
das
pop
inc
mov
fnstcw
lcall
stos
cwtl
push
jno
pop
dec
fs
mov
ficoms
mov
mov
pop
in
shr
or
nop
lods
dec
repnz
stc
rcrl
inc
aam
stos
pop
shrl
scas
jmp
test
fcom
mov
int3
dec
sub
xlat
or
add
push
aam
shll
into
cmp
enter
aad
stc
push
ljmp
in
push
sbb
lods
addr16
push
lret
shl
add
cmpsl
sub
xchg
mov
sbb
shl
subb
subl
jns
fwait
cmc
pop
sbbb
les
mov
xlat
out
and
mov
push
sbb
or
mov
or
add
aaa
add
divb
adc
pushf
xchg
jp
push
ds
adc
jg
or
inc
jg
pop
mov
jle
add
stc
out
and
cmpsl
mov
test
mov
stc
data16
leave
xor
xor
lock
cmp
xchg
mov
pusha
imul
xchg
mov
inc
sti
push
mov
out
mov
mov
int3
dec
or
lods
push
mov
and
fcomip
rol
test
out
fsubs
std
sarb
rcll
aad
dec
fcmovu
push
movsb
sub
dec
xchg
cmp
fists
xchg
or
add
repz
push
lahf
jecxz
cli
xchg
jb
cmpsb
das
loope
mov
mov
jnp
mov
movsl
push
mov
aas
scas
iret
xor
addr16
cmp
popf
faddp
mov
dec
enter
and
xorl
int3
in
or
push
cmp
rcr
adc
pop
add
push
or
xor
out
push
scas
cli
cwtl
movsb
js,pn
jne
mov
mov
xor
lret
sbbl
sub
shll
push
mov
adc
jmp
das
insb
dec
push
mov
test
xor
pop
iret
sbb
aaa
mov
dec
aad
jmp
add
sub
push
sbb
testb
cmc
ret
cmp
movsb
sub
iret
adc
scas
lods
jg
out
push
xor
push
enter
lret
xchg
test
xlat
mov
xor
jnp
mov
sbb
push
fwait
cmp
cltd
xor
pop
push
and
jb
stos
pop
mov
jmp
cmp
in
ds
in
cltd
push
or
inc
mov
in
lcall
jnp
lods
rcrl
pop
mov
out
lret
enter
push
xchg
in
sub
daa
inc
jnp
ret
rol
mov
push
popa
test
test
xor
dec
lods
stc
scas
cmp
sbb
testl
notb
and
push
fidivl
cmp
jmp
or
jg
add
pop
mov
out
in
in
inc
sub
aad
dec
rcll
xchg
leave
xchg
mov
mov
sbb
outsb
out
sti
add
jne,pn
cmpsb
hlt
or
shll
inc
add
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
test
xorb
clc
adc
stos
out
xor
add
fcmovbe
and
imul
lods
popa
inc
in
mov
sub
xor
and
ja
push
xchg
push
and
xlat
sub
rcrl
mov
test
jb
xchg
push
repnz
dec
aam
sub
mov
jns
sarb
pop
into
call
sbb
test
mov
inc
jl
incl
subb
jns
xchg
cmp
mov
xor
mov
test
mull
jo
and
fsubrp
cld
sbb
shl
icebp
jge
fwait
repnz
lret
inc
add
outsb
xlat
sub
adc
in
mov
mov
cld
in
mov
mov
pop
out
mov
push
mov
data16
sbb
ret
mov
cmpsl
pop
je
fcomps
pop
test
mov
push
fs
mov
js
dec
add
fmul
jae
fidivrl
mov
je
cmpsb
or
les
jl
cmp
jecxz
inc
xor
xor
pop
cmc
std
xor
push
dec
into
jmp
mov
jmp
dec
xchg
xor
ds
push
outsl
push
aam
cs
idivb
sub
mov
mov
in
loopne
aam
out
fs
test
repz
ds
sahf
jmp
lcall
and
into
jl
scas
cwtl
iret
out
push
lock
push
xchg
test
mov
mov
dec
or
cmc
iret
cmpsl
pop
dec
dec
stos
shrb
sub
shrb
sub
add
shll
lea
xor
repnz
sbb
out
in
sbb
mov
int
scas
adc
pushf
pop
pushf
les
push
mov
int3
in
cs
cmp
cmpsb
jge
adc
dec
dec
or
adc
andb
jae
xchg
fiadds
sbb
cmpsb
rol
mulb
movsl
inc
jl
inc
addb
arpl
outsl
dec
jnp
clc
mov
inc
lahf
push
ja
mov
movsl
mov
sbb
push
outsl
jbe
popa
dec
sub
das
sub
lahf
sub
sub
lahf
xor
sahf
out
imul
xorb
and
jp
test
scas
fsts
incl
cltd
sarb
sub
out
push
xor
xor
xor
frstor
ficoml
mov
repz
dec
dec
dec
lea
imul
std
shlb
push
sbb
jno
or
hlt
push
enter
out
jae
jb
jbe
jnp
aad
aas
add
popf
fisubs
rcrb
fs
loope
cld
pop
cmc
and
test
xchg
jbe
push
cmc
cmp
sub
pop
addl
ret
or
movsl
cmp
add
in
xchg
rorb
addr16
mov
out
sbb
cmp
lcall
push
pop
sbb
jg
mov
mov
aam
daa
scas
out
dec
push
lds
or
mov
pop
call
stos
lds
lret
mov
outsl
ret
sbb
das
shll
fnstenv
add
inc
into
and
sahf
mov
scas
out
std
dec
or
mov
repz
mov
mov
xor
mov
adc
sub
jno
or
scas
mov
sub
jne
rclb
xor
mov
scas
shr
xchg
pusha
test
shrb
test
mov
push
stos
mov
push
add
aaa
clc
orl
gs
sub
dec
clc
mov
scas
fstps
lcall
adc
mov
ds
xchg
fs
add
inc
shrb
cmpsl
pop
pusha
add
sbb
or
fwait
adc
not
mov
xor
rcr
in
stos
mov
push
inc
leave
pop
jbe
inc
jmp
fs
cmp
call
mov
hlt
mov
outsb
mov
inc
arpl
out
stos
out
rcl
mov
js
lea
dec
repnz
dec
sub
push
sub
fmul
dec
lock
or
adc
loop
mov
push
xor
sub
push
sbbb
sub
in
nop
push
fidivl
xchg
movsl
enter
pop
andl
push
jge
adc
imul
jno
popf
dec
pop
mov
cmp
jnp
mov
stc
mov
int3
lahf
test
pop
leave
jl
jg
in
movsb
sbb
adc
scas
push
mov
sub
iret
addr16
fidivrl
mov
jle
aad
popa
jmp
and
lcall
cmp
inc
mov
gs
pop
push
popf
shrb
loop
pusha
js
sub
icebp
pop
and
sbb
loop
inc
out
mov
call
ds
sbb
mov
adc
pop
mov
enter
push
push
loope
out
addl
stos
and
inc
arpl
fists
lea
xor
adc
loope
lret
jmp
cwtl
fwait
push
test
jecxz
stos
aam
adc
jbe
out
jg
lods
jmp
leave
dec
insl
xchg
ja
jno
or
shl
mov
mov
test
cmp
shrl
pop
test
push
pop
pop
jae
xchg
push
into
loop
xchg
hlt
mov
js
adc
insl
outsb
loop
ds
xorb
pop
pop
xor
jo
sbb
sbb
cmpsb
movsb
fildl
jne
xchg
mov
addr16
rorb
push
sub
rorb
sbb
scas
les
dec
cmp
and
sbb
sbb
lret
call
mov
dec
mov
in
dec
push
add
pusha
mov
into
cmp
in
out
adc
jb
outsl
sbb
rorb
jbe
sbb
cltd
lret
xlat
or
loop
shll
std
jbe
lods
mov
test
push
xchg
cmp
jbe
jmp
mov
repz
lcall
mov
cmpsb
sbb
mov
cli
push
ds
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
mov
add
clc
adc
pop
ja
std
lods
repnz
loop
daa
std
cmpsl
dec
adc
inc
sub
jmp
sahf
negb
cmp
mov
mov
test
or
jns
pop
das
cld
dec
roll
mov
nop
xor
add
sub
add
lret
repnz
loope
inc
cwtl
shll
add
or
popa
aam
popa
fcmovu
fdivl
insl
push
jb
add
xchg
shrl
add
mov
mov
inc
fcompl
sub
insb
xorb
negl
inc
loope
movsl
cmp
jmp
xor
sar
push
cmp
popf
mov
sub
cli
mov
aaa
xchg
movsl
pop
jnp
jbe
test
push
andl
sbbl
mov
sub
jmp
loope
jg
mov
bound
cld
ficompl
xchg
xor
loopne
mov
pop
loope
jns
push
imul
cmp
xor
cs
jno
test
notb
pusha
bound
xchg
mov
test
out
arpl
and
aaa
repnz
push
adc
psrld
cwtl
das
int
pusha
cs
in
imul
fwait
nop
inc
push
enter
cwtl
orb
push
loop
inc
lods
push
mov
and
pop
ja
inc
xor
xor
add
es
shl
jmp
and
std
ficomps
or
mov
xor
xchg
imul
rcrb
fstl
movsb
jecxz
mov
sub
dec
cmp
add
test
or
cmpsl
mov
xchg
mov
adc
das
loopne
test
test
push
orl
popa
cli
imul
pop
cmp
mov
xchg
sbb
mov
ja
xchg
fidivl
xor
cli
iret
sub
aas
mov
in
movsl
in
cmp
push
or
mov
cs
dec
sbb
mov
cmp
push
dec
cs
shlw
add
mov
jb
mov
xchg
out
add
cmp
pop
popf
mov
fistpll
aaa
dec
sbb
inc
cmp
push
pop
jo
shrb
das
cli
enter
mov
xlat
repz
shrl
notb
testl
test
pop
mov
or
outsl
push
popa
sub
imul
fstpt
or
imul
movb
adc
cmp
add
into
mov
je
push
shl
mov
mov
push
mov
dec
das
out
aas
cs
shll
rolb
xchg
inc
push
fdiv
or
movsb
and
or
adc
scas
push
adc
dec
sbb
cmp
add
mov
movsb
pop
and
or
gs
ja
mov
scas
mov
dec
xorb
jle
incl
jl
jno
fwait
xor
mov
cld
push
mov
test
clc
insl
je
cs
pop
loopne
and
outsb
pop
sub
inc
bound
shll
insl
mov
xchg
cmp
push
stos
cwtl
orl
roll
fwait
iret
ret
dec
idiv
xchg
mov
mov
mov
icebp
sub
jge
and
shlb
cmpsb
dec
jp
pop
pop
fists
ret
cld
inc
sbb
lods
gs
dec
sbb
out
popf
jmp
shrb
das
cmpb
push
lret
enter
adcb
jbe
ret
int
pop
xor
stc
push
cli
movsl
dec
shll
cwtl
into
adc
adc
xchg
test
es
lods
ret
xchg
cmp
cmp
push
lahf
xchg
cmp
fdivrl
in
das
aad
xor
push
push
push
mov
xchg
xor
sbb
push
xchg
mov
pop
insl
or
mov
mov
push
sbbb
mov
stos
mov
push
cmp
popa
xchg
push
repz
std
js
xchg
inc
mov
inc
enter
cmp
and
xor
fisubrs
leave
or
insl
in
mov
call
inc
dec
test
jae
pop
repz
pop
insl
test
dec
addr16
loop
shll
dec
les
push
lods
sbb
push
jg
lret
xchg
push
repz
sbb
sti
mov
adc
ret
and
jb
or
sbb
test
fstp
test
sarb
pop
xchg
sub
subl
or
sbb
xchg
nop
sub
aad
scas
cmp
jecxz
test
mov
xor
cmp
loope
pushf
cmpsb
and
inc
pusha
notb
dec
mov
adc
and
and
push
and
pop
arpl
push
sub
or
dec
and
push
mov
jbe
or
mov
jmp
daa
aaa
inc
mov
loopne
sti
cmp
push
xor
icebp
negb
inc
hlt
jl
pop
jp
and
imul
xchg
jge
pop
sti
xchg
push
jg
adcl
fldt
insl
mov
call
mov
fnstenv
add
popa
sub
test
mov
pushf
push
and
cmpsl
rorl
sahf
jnp
stos
cmp
push
mov
cld
iret
aad
fdivl
loope
jmp
mov
clc
pop
aaa
ffree
aas
cld
aad
insb
and
mov
push
inc
lods
fidivl
aad
jae
inc
mov
adc
sub
pop
add
inc
pop
push
cltd
js
and
xchg
mov
push
inc
lods
out
btc
xor
push
loopne
inc
pop
fstpt
mov
clc
inc
sub
jo
mov
xor
arpl
dec
test
or
daa
xchg
jge
nop
xchg
stos
shl
ds
data16
hlt
add
add
sbb
enter
les
das
scas
std
fstps
out
dec
rclb
sub
iret
dec
in
aam
jo
inc
push
cmp
dec
pop
push
ret
rcl
add
dec
out
push
mov
insl
mov
incl
xorl
mov
mov
sti
xor
or
mov
jmp
add
mov
sbb
dec
ss
add
inc
adc
push
clc
adc
aad
arpl
iret
leave
pop
dec
lret
lock
lret
pop
pushf
dec
sti
mov
push
xchg
mov
and
sbbb
out
outsb
mov
rcrb
ds
outsl
cmp
pop
cmp
testb
out
jns
fnstsw
xor
mov
mov
or
add
mov
jecxz
mov
push
and
lret
sahf
movsl
dec
pop
ror
gs
mov
imul
sub
pop
cmp
or
test
pop
fucom
fistpl
mov
dec
leave
mov
stc
mov
mov
cmp
add
addr16
sub
adc
mov
adc
push
mov
xchg
ficompl
pop
loopne
sbb
enter
fiadds
mov
pop
cmp
inc
cmp
inc
in
or
pop
xchg
loope
mov
test
mov
aam
and
xor
pop
rclb
dec
push
stos
sbb
fsub
cmp
lods
repz
adcb
les
pop
xlat
inc
lods
sub
popa
mov
imul
pop
loope
xchg
or
sub
sub
cwtl
and
iret
dec
lods
ficoml
paddq
loop,pn
std
sbb
sub
push
sub
clc
out
daa
and
push
dec
test
imul
inc
out
mov
mov
inc
sub
in
pusha
scas
push
ss
push
add
dec
mov
addl
jb
mov
lea
inc
adc
mov
mov
jp
xchg
xchg
cs
adc
push
cmp
js
push
cmp
mov
sar
addr16
xchg
mov
dec
mov
sbb
and
jo
aaa
loopne
mov
in
lahf
add
icebp
inc
arpl
cmp
xchg
lds
das
jbe
push
jae
call
mov
xchg
xchg
icebp
ljmp
loop
minps
jns
push
add
sbb
cmc
in
in
mov
mov
fsubrs
jmp
repz
xor
jge
adc
mov
sbb
sub
mov
push
mov
mov
test
mov
sbb
insl
subb
ror
sub
and
gs
into
sub
jne
cmpsl
push
jge
mov
lret
mov
sub
mov
sub
pop
push
mov
sbb
test
scas
mov
xor
pop
mov
aam
adc
fcmovnb
int3
dec
cs
sub
and
push
aam
inc
test
data16
xor
adc
jno
cld
xor
aas
jmp
sub
call
fnstsw
repz
in
bound
int
into
sub
call
lock
ret
jo
stc
push
cmpsb
push
insl
into
es
or
arpl
or
inc
popa
fsubrp
daa
xchg
fsubr
xor
int3
pop
imul
xchg
js
shll
test
test
mov
inc
push
xchg
into
rcr
jae
mov
cmp
out
pop
negb
rcr
aas
sub
mov
bound
movsb
xorb
movsl
js
std
sub
mov
sbb
in
xor
stos
fwait
pop
pop
es
imul
xor
dec
adc
out
dec
sbb
movsl
bound
test
pusha
sbb
mov
repz
jb
push
push
das
xchg
push
shrl
add
std
add
out
shrb
cld
xchg
loop
jne
sub
xchg
scas
int
and
das
scas
push
out
in
iret
jo
lea
mov
xor
shll
lds
xor
add
mov
das
or
data16
cmp
or
jae
inc
ficoml
mov
stos
mov
xchg
int3
dec
xchg
sbbl
lret
mov
jmp
stos
aas
aas
sarl
xchg
fsts
das
xor
pop
fmuls
jo
fildll
pop
cmp
in
adc
jb
inc
push
adc
inc
dec
and
popf
adc
cmp
rcll
or
xchg
ret
sub
xorb
pop
mov
js
pusha
push
and
pop
icebp
jecxz
repz
sbb
and
mov
push
int3
sarb
push
in
dec
fcmovu
fidivs
and
outsb
ja
cmpsb
pop
scas
push
frstor
loopne
inc
pop
push
xchg
inc
push
xor
aad
adc
aas
add
sub
icebp
notl
sub
fwait
lock
inc
jl
sub
jmp
fistpll
xchg
std
or
test
std
iret
enter
jecxz
adc
mov
sub
test
fcomp
adc
movsb
dec
push
orl
and
cmp
stos
repnz
xchg
cwtl
push
sbb
aam
pop
stc
fisubrs
inc
addl
pop
out
cmp
jecxz
push
sti
cmp
iret
pop
xor
stos
and
pop
add
xchg
push
shlb
flds
jmp
jmp
jbe
negb
cmpsb
mov
rorb
sub
insl
adc
fs
mov
mov
mov
inc
ds
sub
fldt
inc
push
stc
or
rcrb
cld
cmp
pop
pop
add
aas
mov
jle
cmpsl
bnd
pop
inc
dec
sub
pop
cmp
mov
add
push
mov
pushf
rcl
int
in
cli
jbe
icebp
sti
stos
neg
mov
push
fisubl
faddl
mov
syscall
in
jne
dec
cli
cmc
aad
sar
ds
shll
ljmp
jge
inc
out
pop
sti
lds
ror
dec
cld
fcoms
bound
out
sbb
dec
mov
sbbl
cmpsb
imul
loope
push
jge
cwtl
xchg
rolb
dec
push
leave
pop
add
xchg
cmp
xor
jg
in
mov
xor
dec
pop
lods
ljmp
mov
jle
sub
test
mov
mov
adc
pop
jne
cmpsb
inc
lods
dec
jle
jae
cmp
into
inc
jnp
inc
int3
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
push
ret
scas
sub
mulb
push
jp
loope
jmp
jo
jb
cli
cmp
int
cli
mov
xor
int
test
xchg
sub
lret
pushf
push
and
fdivl
test
adc
or
rcl
dec
inc
int
fstpl
jmp
xchg
xchg
js
xchg
push
rcl
into
xorb
arpl
pop
push
xor
pop
filds
push
xchg
adc
xor
mov
mov
insl
test
inc
call
cmpsl
in
pop
pop
mov
jbe
dec
in
leave
stos
mov
vcvttsd2si
push
aam
mov
pop
cmp
cld
in
sub
ret
arpl
negl
cmpsb
out
ja
loopne
call
push
jge
or
inc
push
push
mov
aam
sbbb
cmp
mov
insl
mov
sub
aas
xchg
xchg
mov
adcl
inc
loope
lret
mov
sbb
mov
imul
xchg
jb
jp
or
adc
mov
add
mov
iret
enter
or
insl
cwtl
pop
add
push
sti
pop
dec
pop
scas
mov
add
cmp
cmpsb
adc
mov
imul
mov
jle
or
mov
mov
mov
shr
pusha
sub
fwait
add
jno
and
pop
add
xchg
ljmp
inc
ss
cmp
cmpsl
fsubl
out
aam
or
pop
adc
jg
dec
pop
pop
push
sub
call
push
dec
push
jne
xor
aam
add
outsb
sahf
pop
pop
lods
sahf
cmp
sub
xchg
jg
push
jle
inc
popf
fisttps
xchg
lret
lret
jge
popf
dec
push
pop
cmp
ss
test
les
mov
push
test
imul
add
enter
orb
inc
fdivrs
notl
stos
mov
push
jecxz
push
adcl
std
in
pop
push
aas
scas
mov
mov
ja
mull
repz
jnp
aas
add
fcompl
arpl
xor
cmpsb
fs
xchg
clc
push
sbb
adcl
aad
aad
mov
sbb
xchg
out
adc
movsb
mov
xor
aad
pop
das
xor
pop
les
xor
inc
aaa
mov
mov
mov
xchg
cwtl
xchg
pusha
ja
sbb
lcall
rorl
daa
dec
mov
pop
dec
rcr
cli
add
subl
jle
dec
loop
neg
xlat
out
or
inc
icebp
mov
arpl
stos
jle
sti
inc
jecxz
loope
xor
xchg
fnstenv
xchg
dec
dec
mov
add
insb
in
shlb
cmpsb
add
addr16
xor
lods
sarl
dec
mov
cmp
imull
push
cmpl
or
dec
rcrl
jecxz
jmp
cmc
fadds
out
xchg
testl
mov
dec
scas
flds
jne
adc
xor
push
push
mov
jno
jbe
mov
aam
rorb
push
ret
push
in
cmp
pop
jmp
dec
xchg
into
outsl
dec
push
stc
or
test
pusha
negb
sub
nop
mov
lds
sbbl
hlt
fsts
xchg
and
mov
inc
add
cmc
mov
rcrl
scas
outsl
mov
adc
or
sbb
enter
and
mov
out
inc
add
test
inc
mov
pop
insl
mov
enter
add
sbb
jbe
dec
lods
xchg
fstl
aam
add
or
xchg
xor
inc
inc
nop
jl
aas
jne
add
cmpsb
out
cmp
pop
pop
push
stos
gs
sbb
mov
inc
push
sbb
cmp
frstor
xchg
inc
stc
mov
mov
mulb
inc
jns
ja
mov
enter
rolb
mov
std
dec
or
bound
cmp
push
push
aas
lea
stos
cmpsb
cmp
arpl
aaa
sahf
stos
iret
lahf
lret
add
pop
nop
imul
test
jge
movsb
xchg
xor
inc
mov
and
xchg
or
push
cwtl
inc
add
jle
subb
jbe
dec
push
pop
call
hlt
adc
push
sbb
lahf
imul
in
mov
not
cmpsl
and
insb
xor
or
dec
push
pop
push
cmp
fidivrs
mov
nop
out
cmp
push
and
hlt
jne
add
leave
pushf
push
adc
jns
dec
jecxz
sti
push
push
jns
push
cmpsb
push
lea
mov
pusha
fs
aaa
pop
insb
sub
and
push
mov
xor
pop
inc
xchg
gs
xor
jmp
fs
push
mov
outsl
dec
push
xor
sbb
icebp
sbb
sbb
mov
mov
movsl
pop
or
cmp
or
mov
add
aad
fbld
sahf
icebp
mov
and
sub
fistps
push
jle
dec
mov
ret
mov
sbb
loope
pop
mov
cs
and
rorb
jo
sbb
and
push
subl
pusha
mov
mov
xor
out
leave
lock
cltd
pop
into
mov
add
mov
hlt
xlat
adc
outsb
pop
paddsb
std
dec
lea
dec
pop
mov
mov
mov
sub
int
xor
fs
cwtl
inc
int3
and
or
fistl
xor
mov
and
jb
dec
lds
call
mov
lahf
cmpsl
lret
cmp
sar
push
fidivrs
pop
add
mov
ss
push
lahf
add
push
cmpsb
xor
jne
clc
xchg
ss
int
nop
fwait
mov
test
lret
pop
sahf
push
sbb
jnp
pop
test
stos
pop
cmovne
add
sub
adc
js
sbb
pushf
incl
sbb
mov
mov
xchg
aam
test
sub
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
mov
sbb
adc
adc
testb
pop
test
mov
lds
sub
mov
pop
pop
pop
add
cmp
int
xorb
sbb
int3
aam
popa
xor
pop
sbb
hlt
mov
rol
mov
pop
jmp
mov
push
adc
dec
sbb
rol
xor
sub
sub
or
stc
aas
arpl
mov
sbb
in
mov
mov
sahf
lods
xchg
aad
les
repz
sbb
push
mov
sahf
push
arpl
sahf
jg
cmp
aaa
mov
nop
or
shll
add
imul
push
outsb
mov
popf
imul
arpl
mov
push
jb
cld
push
mov
js
mov
and
or
int
or
fldt
push
lea
stos
cmpsl
push
xchg
outsl
iret
mov
dec
scas
outsb
mov
addr16
mov
icebp
push
xchg
mov
rcrl
and
sbb
mov
les
gs
push
ss
xor
je
add
sti
shr
iret
push
jl
and
iret
fwait
repz
cmp
xchg
lcall
out
or
int3
add
inc
jg
adc
pop
sub
jb
add
gs
outsl
ja
into
scas
insl
lods
mov
inc
xlat
pop
xor
fildl
je
pop
aam
rcrl
test
mov
pop
or
push
scas
xorb
imul
sbb
sub
pop
movb
cmp
cmp
inc
or
and
call
test
fdivrl
stos
or
dec
inc
insl
mov
cmpsb
push
push
fdivr
cmp
icebp
pop
mov
xchg
daa
or
mov
mov
jae
les
mov
inc
dec
sub
cmc
pop
iret
pop
mov
pusha
cs
leave
lret
filds
aam
push
rcrl
icebp
insl
add
push
xor
mov
xor
mov
dec
ficoms
dec
test
xlat
scas
xchg
or
mov
stos
mov
jnp
dec
gs
sbb
subb
aaa
and
insb
push
repz
mov
stos
outsl
int
mov
inc
scas
mov
gs
xlat
daa
sbb
dec
cmp
icebp
push
adc
xchg
cmp
jo
popa
xchg
ret
sti
mov
test
sbb
pop
inc
add
aad
nop
je
icebp
xchg
fsubl
cltd
inc
lret
or
ds
sbb
jns
lret
je
outsb
inc
lods
add
mov
cmpsl
inc
push
xchg
fildl
or
xor
test
push
xchg
xor
dec
adc
std
push
jle
sahf
test
adc
gs
lea
dec
xor
in
fprem1
or
pop
scas
int3
cmp
push
pop
xor
mov
dec
inc
jbe
popf
mov
es
sub
outsb
adc
lahf
pop
lahf
into
enter
inc
out
add
repnz
decb
imulb
mov
mov
sub
sahf
cmp
fsubr
mov
cs
dec
mov
push
mov
ljmp
jns
mov
sub
out
outsb
mov
mov
pushf
cs
in
xchg
and
cmc
inc
cmp
cmp
or
in
and
popf
and
push
sti
int
loope
cmc
insb
call
lcall
popf
pop
xchg
ficoms
imul
addl
add
ret
dec
ljmp
mov
fdivrp
xor
mov
lock
jns
cmp
jo
repz
shrb
or
testb
mov
cwtl
test
fiaddl
sub
push
mov
enter
inc
cli
cltd
xchg
dec
cs
dec
les
mov
adcl
je
cmpsb
cmp
dec
sahf
cmp
pop
xchg
push
int3
out
sarb
mov
ss
xchg
out
aad
ror
pop
pop
cs
stc
xchg
or
fdivr
lret
icebp
add
pop
js
mov
lret
mov
mov
insl
pop
addl
cmc
daa
out
leave
daa
addr16
imul
inc
mov
xlat
int3
or
adc
lcall
test
or
push
jle
xor
jge
mov
outsb
xchg
or
dec
gs
das
in
test
inc
inc
fists
dec
push
cwtl
lea
xchg
enter
insl
sub
mov
lcall
pop
jle
inc
mov
stos
cmp
rorl
push
bound
pop
or
cmp
cld
sub
fneni(8087
mov
mov
push
test
mov
fildll
push
cmp
dec
xor
lods
cmp
xor
popa
aam
push
sub
imul
stos
pop
mov
add
in
sub
inc
dec
xor
rolb
je
mov
aad
sub
mov
pop
pop
jp
out
shl
mov
cmp
add
or
inc
fdivl
and
mov
xchg
pop
xchg
mov
inc
push
mov
xor
clc
aad
xchg
fstps
mov
xor
xchg
into
sbb
sub
mov
cmpsb
scas
cmp
mov
xor
xor
or
mov
test
int
add
xchg
call
add
push
lods
push
ret
or
pusha
enter
in
aaa
shlb
push
pop
sbb
ljmp
inc
mov
ja
out
into
mov
mov
cwtl
xchg
mov
testb
insl
inc
adc
add
pop
das
loopne
xor
inc
leave
add
add
mov
sbb
mov
cmp
jg
add
enter
xchg
pop
jns
popl
jno
pop
pop
test
mov
dec
mulb
xorl
andb
repnz
mov
push
jp
scas
loopne
les
repz
push
or
inc
mov
out
ja
adc
cmp
add
mov
shrd
shr
mov
mov
xor
shl
jmp
add
xchg
rorb
lods
movsb
hlt
xchg
unpcklps
clc
adc
sub
rclb
jnp
mov
fsubl
and
stos
dec
and
and
and
lods
loopne
mov
push
pushf
rclb
sub
add
ror
mov
aaa
and
imul
add
xlat
add
outsl
cmp
rolb
pop
xor
dec
sbb
jne
sub
push
fsubl
jle
dec
hlt
fiaddl
xlat
adc
xchg
and
push
mov
sbb
lods
pop
jb
xchg
fsubl
sbb
xchg
inc
out
dec
out
lds
mov
scas
mov
adc
iret
mov
std
push
add
cmp
adc
mov
inc
pop
and
xchg
shr
mov
jl
inc
out
sti
lcall
dec
lahf
push
jnp
mov
shr
sbb
or
out
out
and
pop
sti
add
cmp
xchg
faddl
or
push
out
sahf
fcmove
xchg
add
lods
aas
into
ss
jmp
lret
or
loop
fwait
insl
cmp
lcall
mov
outsb
jge
push
fcomp
ja
mov
mov
mov
cmp
lods
stos
or
mov
addr16
sti
jne
push
cmpsb
pop
in
add
inc
mov
mov
cld
dec
mov
repz
mov
loopne
push
aam
add
cmc
stos
outsb
aam
std
mov
push
push
jp
aad
call
xor
push
push
cmp
es
sbb
leave
pop
das
and
push
shl
or
data16
popa
push
rclb
jae
fdivs
cmp
dec
enter
rol
pop
push
repnz
push
lock
push
adc
ljmp
xchg
xor
lret
jbe
mov
out
push
test
insb
xor
outsb
aaa
dec
add
lea
xchg
inc
into
movsb
mov
stos
sub
dec
sbb
pop
jb
mov
or
aad
bound
lock
addr16
pop
icebp
in
push
mov
pop
mov
mov
pop
adc
adcl
push
lcall
xor
ds
in
jp
mov
push
or
cmc
xchg
sbb
jl
or
fst
cltd
fcomps
mov
dec
sbb
or
data16
movsl
push
xchg
pop
add
add
loopne
daa
lods
fstps
in
push
push
lds
cmp
les
jl
and
mov
add
jbe
movb
test
mov
mov
xchg
jg
bound
rorb
orl
mov
sahf
out
pop
sbb
fsts
test
data16
dec
data16
dec
push
lret
mov
dec
dec
sbb
out
mov
dec
add
jbe
mov
pop
mov
popf
cli
sarl
mov
es
test
xor
push
cmp
dec
ret
xchg
mov
iret
ss
out
xchg
pushf
ficomps
rorl
inc
mov
fiadds
scas
gs
shll
pop
mov
adc
adcl
xlat
add
fstpl
ror
push
enter
test
popf
mov
mov
js
push
cmpsb
test
and
and
fisttps
shrb
bound
pop
mov
mov
hlt
cmp
sbb
outsb
push
and
movsb
sbb
sti
cltd
rcr
add
sub
add
lret
out
sahf
jecxz
xchg
jg
and
jmp
adc
mov
aam
fdivrl
fldenv
out
rcll
cmp
dec
mov
pop
sbb
inc
xchg
lods
sbb
jae
xor
fadds
adc
out
jnp
mov
test
cmpsl
cwtl
jb
enter
xor
push
jecxz
pop
xchg
mov
shll
inc
and
pop
mov
xchg
addl
inc
cltd
dec
enter
ds
adc
push
nop
gs
and
out
out
jmp
xchg
pop
xchg
testl
sbb
clc
xchg
jle
jcxz
mov
aam
sbb
xor
test
inc
lock
mov
xor
xor
shll
jb
in
mov
subb
fsub
inc
jge
test
in
insl
mov
sbb
stc
push
mov
movsl
fwait
push
xchg
rcrl
mov
pop
sbb
pop
jne
outsb
sub
scas
push
dec
outsl
push
sbb
adc
jne
popa
mov
jecxz
ja
sbb
or
mov
pop
aaa
fmulp
std
dec
mov
adc
jmp
ficoml
lds
push
xor
sahf
adc
and
dec
xchg
imul
es
divl
lea
sbb
pop
fidivrs
push
dec
jl
ds
xchg
lret
adcb
lods
jg
sub
mov
jecxz
and
pusha
mov
mov
aas
xor
es
rorb
inc
in
loop
aas
pop
inc
test
sarl
fnstsw
dec
mov
jl
ljmp
mov
add
or
int
dec
and
mov
and
fiadds
mov
cld
mov
jae
xor
cmpsb
in
scas
xlat
fcmove
mov
je
mov
xchg
sbb
dec
mov
cs
cwtl
dec
mov
pop
nop
pop
push
cmp
movsb
push
insb
pushf
enter
nop
sub
cwtl
mov
lcall
push
cli
xchg
mov
pop
jg
mov
iret
stos
int3
fdivp
jb
inc
mov
fs
sub
addr16
sub
sub
shrl
pop
push
jo
iret
or
push
lcall
cwtl
filds
mov
xchg
mov
divl
in
sbb
loope
inc
push
test
lahf
and
cltd
cmp
leave
push
dec
fistpll
push
adc
aas
js
push
xchg
cmpsl
xchg
arpl
shlb
xor
insb
jbe
in
and
shlb
or
out
call
xchg
cltd
inc
cmp
mov
xadd
mov
addl
rcrl
rolb
mov
jbe
bound
das
sbb
mov
cmp
dec
xor
or
lea
mov
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
pop
aam
adc
push
clc
adc
jecxz
stos
sub
fildll
dec
mov
xchg
rep
pop
ret
dec
inc
push
hlt
pop
cmpsb
leave
push
push
inc
aam
negl
or
and
and
fidivl
mov
ret
pop
mov
dec
add
aam
test
ficoml
scas
xchg
add
or
push
popf
push
addr16
movsl
push
pop
enter
stc
not
jle
cmp
cli
gs
inc
mov
seto
jo
popa
rclb
push
scas
push
aas
data16
jo
push
mov
movd
or
hlt
mov
fnstcw
jns
popw
or
add
mov
cmpsl
fstpl
test
inc
cmp
jne
bound
insb
pushf
fdiv
insl
xor
mov
adc
fsin
and
insl
mov
lret
xchg
fwait
push
xlat
and
or
jb
loopne
sbb
lods
xor
xor
mov
lea
int3
fnstenv
jbe
cmp
int3
dec
cwtl
scas
mov
or
sbb
pop
in
push
jp
das
pop
inc
add
inc
lcall
lcall
sbb
mov
mov
fsubrs
add
adc
mov
jns
shrl
sub
stos
pop
mov
sbbl
xorl
push
call
lretw
push
inc
mov
sub
xchg
sbbl
leave
lahf
addl
mov
scas
mov
mov
add
cmp
xchg
mov
addr16
inc
sbb
test
xchg
fcompl
dec
test
cmp
paddsw
ss
test
out
fptan
pop
aad
mov
mov
rcr
rcl
mov
out
pop
jbe
out
dec
mov
push
mov
aas
fcmovnbe
sti
push
pop
cmp
xorb
xor
and
adc
vsqrtsd
insb
cmp
lret
jecxz
push
jmp
mov
repz
fstps
imul
cli
mov
xor
lret
int3
xlat
sbb
mov
cmpsl
jg
pushf
hlt
fxam
in
push
aam
jae
jmp
sub
outsb
inc
les
pop
push
xchg
in
popl
or
sub
inc
fldcw
mov
jl,pt
sbb
xor
mov
ret
and
imul
ffree
jmp
cmc
in
lds
lret
mov
outsb
push
test
dec
pop
inc
icebp
ja
mov
inc
movsl
call
and
adc
hlt
mov
and
sbb
jno
das
sarb
jecxz
add
adc
fincstp
inc
mov
dec
pop
sahf
popf
incb
idivb
mov
out
fsubl
sbb
loopne
hlt
pushf
push
ljmp
jecxz
sarb
sbb
lock
mov
insb
mov
outsb
xor
out
imul
or
push
imul
pusha
stos
jge
jge
mov
loopne
mov
sbb
imul
inc
das
andl
or
lock
aad
xchg
sbb
test
mov
outsl
ret
pop
inc
stc
je
xchg
mov
adc
dec
loopne
jns
jl
sub
cmc
xchg
das
xor
and
test
es
imul
outsb
test
mov
sarl
push
arpl
jg
test
push
popa
sub
mov
sbb
cmpsb
add
mov
xchg
lock
push
gs
mov
enter
out
push
es
pop
lock
sub
pop
lea
arpl
ljmp
cmpsl
mov
adc
add
xbegin
jae
out
js
pop
sub
insb
jle
scas
pop
dec
xor
nop
xchg
push
ja
enter
cmp
jne
inc
and
adc
or
xchg
dec
pop
popf
add
ja
mov
and
lahf
sbb
shlb
xor
mov
jle
pop
sbb
fisttpl
sti
es
jecxz
outsb
push
push
ja
fs
push
icebp
lahf
push
rolb
popa
inc
call
pop
jmp
es
lea
sbb
ret
sbb
mov
cmp
jo
jl
inc
fisubrs
sbb
loope
outsl
cltd
cmp
or
cmp
mov
bound
jmp
pusha
sbb
xchg
or
push
xchg
data16
pushf
xchg
aaa
orb
inc
test
lret
rorb
push
jge
lods
mov
mov
lods
bound
ds
scas
orb
shll
sbb
es
popa
imul
mov
sub
add
shrl
fucomi
lea
pusha
push
push
dec
fwait
inc
jbe
insl
into
fnstenv
fsubrs
adc
mov
test
repz
or
xchg
xchg
mov
arpl
ret
movsl
cmp
fwait
inc
xchg
mov
xlat
jo
cmp
iret
lea
pop
sub
es
shll
loope
xor
loop
push
std
jo
out
scas
adc
pop
cs
mov
mov
ds
cld
and
scas
inc
or
bound
dec
push
addb
shlb
shll
mov
nop
mulb
sub
mov
je
xchg
rorl
sub
cmp
push
cli
js
xchg
mov
pop
or
sbb
dec
inc
or
xor
add
and
or
pop
fistps
cwtl
scas
fwait
or
inc
std
repz
pop
jmp
xchg
adc
loope
test
out
add
push
xchg
xchg
push
jo
or
xlat
out
pop
sbb
mull
pop
cmp
xor
cmpb
in
fwait
call
movsl
xor
cmp
mov
icebp
icebp
xchg
inc
cmp
and
test
jne
ja
or
loopne
shlb
rcrb
pop
fmul
arpl
lock
js
mov
sti
fcmovbe
mov
jnp
push
mov
pop
mov
push
fstpt
lods
in
mov
sub
xchg
xchg
cmp
add
popf
les
shl
ret
in
test
sbb
jo
xlat
mov
pop
xchg
mov
cmc
test
lock
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
push
xchg
hlt
adc
clc
adc
hlt
push
pop
push
or
jae
mov
or
and
mov
push
xchg
mov
sti
mov
jne
adc
xchg
repnz
sbbl
in
xchg
in
mov
jns
mov
or
adc
mov
cmc
xchg
jnp
andl
mov
adc
add
dec
push
push
scas
xchg
ret
ds
and
xchg
inc
push
stos
inc
xor
push
inc
mov
and
fisubrl
int3
ficoml
pop
loopne
inc
pop
data16
jle
es
mov
pop
les
xor
jecxz
jne
aaa
aaa
inc
xlat
pop
repnz
push
mul
insb
int
jg
fidivrs
jg
int
jp
push
pushf
out
inc
pop
rorb
sbb
mov
mov
add
jle
xchg
lret
popf
cmp
icebp
std
xor
jo
rorl
fisubrs
scas
aaa
inc
ffree
or
fnstcw
enter
fbstp
xor
sub
iret
sub
pushl
data16
popf
jb
xor
add
or
push
adc
inc
in
pop
xor
adc
sbb
in
iret
adc
adc
mov
mov
stos
sbb
pop
xor
inc
sub
pop
imul
test
xchg
mov
adc
retw
js
cmp
jecxz
dec
aam
loopne
or
test
int3
lods
mov
and
adcl
sbbl
test
scas
fistl
dec
pop
xchg
repz
mov
outsl
popa
xchg
subb
test
xor
push
lods
out
ret
sub
scas
leave
add
dec
push
jne
xchg
ret
adc
into
repnz
push
lods
jecxz
rol
arpl
outsl
sub
stos
lods
dec
dec
add
mov
sbb
adc
lea
sub
xor
mov
aam
inc
cmpsb
js
in
add
jno
das
cmpsb
test
push
mov
mov
jae
sti
shl
mov
fwait
scas
dec
ds
jg
sbb
or
loope
icebp
std
into
in
or
dec
es
sti
sbb
mov
mov
rep
pop
or
ds
mov
mov
in
cmp
mov
aas
push
xchg
jge,pt
lds
test
ficoml
inc
repnz
insb
in
aas
mov
mov
push
jl
xor
pop
or
cli
std
lret
lret
and
sarb
mov
jnp
or
aaa
push
lea
je
add
sbb
mov
subb
hlt
jmp
out
dec
dec
mov
sti
mov
out
out
cmp
sbb
jl
xchg
movsl
lret
je
scas
call
negl
adc
mov
pop
popa
jmp
popf
xor
mov
lds
outsl
push
lret
or
mov
add
inc
xchg
add
and
dec
push
hlt
push
jle
dec
nop
jl
pop
ja
iret
ret
in
or
adc
add
rclb
mov
jno
mov
push
sub
loopne
inc
icebp
mov
insl
outsb
push
xchg
ret
cs
loope
cmc
xor
sar
fcoml
xchg
daa
pop
xchg
mov
push
lods
dec
push
dec
cwtl
jp
cwtl
cmc
divb
lcall
jae
fistl
mov
int
out
cmp
dec
pop
jbe
out
dec
ja
data16
xchg
sbb
clc
rclb
xor
mov
sub
mov
movsl
push
movsl
jg
ja
push
das
dec
mov
inc
inc
and
nop
negl
test
xlat
sub
loope
sbb
aam
pop
pop
stc
dec
adc
sbb
cmp
xchg
xor
and
aam
pop
into
cmp
movsl
jle
cmp
sub
push
cmp
sbb
dec
add
enter
mov
notl
pop
out
sarl
add
dec
test
data16
sahf
adc
pop
shr
xor
xchg
lcall
mov
lret
push
cmp
das
jb
mov
repnz
add
cmp
movsb
cmp
jnp
lock
mov
jnp
sbb
jae
frstor
mov
dec
and
aaa
inc
call
adc
push
out
push
call
jns
add
jne
fst
fildll
jae
adc
mov
in
xchg
in
sbb
mov
arpl
push
repz
ficompl
push
jno
pop
test
repnz
ret
xchg
cwtl
stos
dec
mov
inc
scas
lret
mov
add
sub
test
fsubl
fnstcw
cli
inc
mov
ret
pop
push
lds
in
fstl
test
subl
int3
fsubs
or
out
push
rorb
in
leave
in
addr16
pop
xor
xchg
cmp
pop
imul
imulb
inc
cld
aam
mov
mov
pushf
xor
pop
inc
aaa
and
adc
or
scas
je
leave
and
scas
out
stos
lahf
cmp
ficompl
add
fwait
mov
je
pop
inc
aaa
test
add
dec
out
sub
arpl
test
xchg
push
jo
cs
shll
inc
or
scas
imul
stos
rcrl
sbb
push
lret
sub
xlat
cmpsl
mov
imul
mov
test
mov
daa
das
and
cmp
sbb
lcall
cmp
ret
jb
imul
push
mov
xchg
testb
insl
lcall
add
mov
scas
pushf
rcll
sti
jmp
lods
fwait
cmp
lret
test
xor
iret
dec
and
mov
inc
test
out
xor
mov
fistl
pop
stos
adc
sub
add
lock
hlt
sbb
dec
add
lds
cmp
mov
in
notb
ret
lock
test
inc
in
jnp
sbb
mov
xlat
push
shll
sub
adc
inc
push
lret
mov
outsb
scas
sahf
xor
jne
aam
out
int3
and
pop
add
xor
mov
outsl
aad
dec
in
and
jge
xchg
ljmp
xorl
test
out
pop
cmp
jl
mov
dec
les
imul
mov
shl
mov
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
mov
adc
push
clc
adc
or
push
push
inc
sbb
nop
lea
pushl
sub
divl
addr16
in
mov
ja
xchg
and
mov
cwtl
into
dec
ret
adcl
sahf
loope
adc
ret
cmp
jne
gs
mov
cmp
push
cmp
jl
mov
movsl
adc
int
adc
sbbl
lods
test
inc
cs
pop
loopne
insb
stos
insb
lret
or
fbld
push
jp
sub
or
and
jo
sarl
mov
test
lds
pop
mov
push
push
push
frstpm(287
addr16
pusha
push
clc
or
push
and
jge
and
pop
pusha
cmp
mov
cs
xchg
inc
jo
fildl
mov
or
and
sbbb
pop
jo
stos
stos
sti
cmp
adcb
pusha
scas
lcall
ljmp
jle
shlb
cmp
aam
scas
mov
sub
cmp
mov
sub
cmpsl
out
jae
xchg
lock
mov
or
in
jg
test
pop
mov
pushf
jnp
leave
dec
movsb
ljmp
outsb
dec
ficoms
aad
data16
in
sti
pop
jno
adc
pop
movsl
xor
cmc
push
pop
clts
in
sti
stos
cmpsl
es
add
pop
popa
lea
cmp
jp
mov
aad
jbe
jns
outsb
push
in
push
ret
shrl
lods
mov
adc
dec
dec
or
ret
out
arpl
test
sub
pop
sbb
mov
js
pop
xor
or
sub
sbb
fiaddl
test
mov
jnp
mov
sahf
imul
test
mov
insb
pop
xchg
pop
pop
cmp
add
inc
stos
cmpsb
cli
insb
leave
dec
sbb
stos
or
xchg
xor
pop
jo
gs
dec
mov
mov
add
ret
pop
in
ss
nop
cmp
pop
push
add
imul
pop
dec
cmp
and
jge
push
lods
adcl
xchg
jbe
fadd
mov
test
adc
mov
pop
sbb
xor
sbb
add
cltd
stos
fidivl
xor
ja
dec
dec
xchg
rcll
cltd
movsl
jae
push
lods
dec
mov
pop
inc
in
stos
or
cltd
jno
jp
pop
imulb
sbb
adc
rolb
imul
push
xchg
ja
mov
cmc
mov
sti
add
pop
lods
pop
mov
cmp
jmp
bound
mov
push
jle
fidivs
stos
mov
jbe
adc
mov
call
add
jo
and
imul
outsl
jmp
sub
ret
shl
dec
dec
out
lods
cs
push
fwait
out
sub
adc
cmc
pop
or
push
ficompl
mov
jle
adc
out
xchg
mulb
and
mov
xchg
add
inc
outsl
int
sbb
xchg
leave
pusha
js
fiaddl
cmpsb
call
cs
loop
mov
sub
xor
pop
cmp
rclb
xchg
and
outsl
mov
cli
pop
lahf
xchg
mov
scas
iret
inc
xchg
aad
loop
test
outsb
dec
iret
adc
daa
dec
xor
inc
aad
stc
shrl
dec
pusha
shll
mov
jnp
mov
add
mov
xchg
clc
dec
sub
lds
dec
out
mov
pop
aad
arpl
xchg
and
mov
cltd
adc
lret
xchg
cmp
fiadds
shlb
shr
std
push
loope
enter
inc
lods
cmc
cmpsb
mov
and
fidivl
int
mov
clc
inc
mov
lods
push
sub
std
pop
lret
enter
mov
nop
lcall
and
adc
lds
fldt
pop
std
shlb
addl
fistl
mov
dec
movsb
or
outsb
std
in
in
xchg
pushf
adc
je
lea
push
in
inc
cmp
mov
xor
in
mov
adc
test
test
test
gs
xchg
into
cmp
or
std
sub
popa
and
cmp
inc
or
pop
es
es
out
sbb
sti
movsb
push
pop
cs
out
mov
mov
cwtl
lods
data16
out
ss
cmp
mov
dec
inc
mov
int3
fs
cmc
dec
mov
inc
xchg
mov
pop
lods
repnz
stos
repz
cs
ja
lahf
pop
push
cmc
shll
lods
cmp
and
addl
into
mov
test
mov
adc
fwait
push
xchg
mov
pop
test
cmp
sub
mov
pop
std
lds
leave
out
and
adc
popf
push
nop
cmp
sti
stc
add
in
jp
or
sbb
lret
arpl
data16
es
cmp
pushf
cmpsl
in
cs
ja
cmp
ret
int3
mov
je
jle
lods
into
sti
mov
xchg
jge
add
mov
add
mov
es
lcall
stos
xchg
cmp
mov
adc
xchg
lcall
andl
cwtl
jo
adc
sbb
loopne
sti
pop
movsl
loope
insb
jns
inc
mov
jg
stos
lods
inc
cmp
xchg
mov
mov
sub
cmp
adc
dec
inc
pop
and
xor
xchg
gs
add
push
popa
stos
jb
add
dec
lea
or
and
add
mov
push
out
pop
cld
icebp
jl
fnstcw
adc
or
cmp
in
lods
outsb
ss
sbb
sbb
push
fnstcw
mov
mov
jmp
ds
out
push
ret
push
dec
sub
mov
pop
mov
shll
xchg
inc
std
inc
lcall
mov
and
add
sub
movb
jl
adc
lds
push
and
stos
adc
push
xor
xor
or
mov
shl
jmp
push
xchg
push
pop
push
es
nop
scas
lods
add
clc
adc
std
sarl
add
faddp
test
xchg
or
aas
inc
adc
xchg
es
or
push
jno
sub
arpl
xchg
push
test
mov
and
hlt
adc
cli
lahf
insl
cmc
adc
cmp
dec
sbb
out
jns
and
enter
dec
dec
movsl
ss
push
pop
dec
mov
out
cwtl
xchg
xchg
lret
cmpb
dec
shrl
mov
mov
orl
sarl
shrl
cmp
les
fs
dec
ret
dec
roll
dec
add
cli
out
popf
xor
enter
mov
mov
pop
ficompl
cwtl
jne
push
testb
loop
xchg
xor
push
fists
into
add
loope
pop
inc
in
push
daa
mov
dec
add
sbb
add
mov
call
sbb
mov
xchg
out
call
clc
mov
cmp
movsl
mov
insl
loopne
clc
xchg
push
xchg
test
in
adc
mov
add
fwait
cwtl
jae
packuswb
or
lcall
push
mov
xorb
test
lret
or
mov
inc
push
stos
sbb
es
sbb
int
jae
or
cmpsl
addr16
dec
stos
jle
xchg
mov
xchg
inc
daa
test
add
lret
jge
orb
fcomps
std
mov
pop
jno
jp
loopne
ret
hlt
shl
ja
dec
xorl
int3
xchg
int
or
jle
pop
fcompl
leave
test
xor
jno
loop
mov
int3
faddl
mov
ret
xchg
mov
cmp
jae
pop
scas
inc
mov
fisttpl
scas
xor
std
shr
subl
lcall
fidivl
js
sbb
mov
cwtl
call
cld
jns
and
and
aam
jbe
xchg
pop
dec
mov
mov
rorb
enter
iret
inc
jb
movsb
jge
push
push
rcll
jp
out
xor
fimull
mov
mov
mov
add
mov
lds
aad
inc
sbb
add
cmc
insb
rclb
xchg
mov
or
xor
fcmovne
dec
sbb
adc
adc
mov
inc
movb
lods
fcmovb
cmc
dec
jge
lahf
pusha
test
cmp
dec
mov
cs
xchg
or
sub
mov
mov
cmpsb
xchg
clc
lods
add
cmp
sbb
aaa
movnti
aaa
fwait
into
push
push
lods
in
cld
ret
jnp
xor
jle
gs
imul
jecxz
ret
cmpsb
dec
test
xchg
nop
fdivrp
jg
test
roll
inc
fwait
sbb
dec
stos
xor
sbb
ret
stos
mov
mov
rorl
mov
pop
into
inc
movsb
pop
mov
icebp
add
push
mov
mov
inc
fwait
mov
ja
cmpsb
movsl
or
bound
daa
adc
cmp
dec
push
or
xor
push
and
mov
jbe
rcrb
ret
aam
test
icebp
lea
rol
mov
xchg
dec
cmp
jecxz
mov
lret
adc
cmp
out
sbb
fsubl
inc
push
out
mov
std
mov
inc
cmp
mov
stos
and
out
aas
arpl
pop
mul
mov
jns
xor
in
int
and
js
imulb
aas
in
cmp
icebp
pushf
cmp
arpl
mov
xlat
imul
xchg
ret
xor
inc
pop
fidivrs
dec
call
loopne
aaa
fisubrs
jne
mov
ss
mov
mov
and
in
mov
cmc
pop
inc
stos
push
lds
popa
xchg
addr16
mov
mov
adcl
ds
orb
jbe
xchg
mov
std
cmp
jl
aam
daa
mov
ret
or
sahf
or
out
and
or
scas
fnsave
repz
cwtl
pop
xchg
popa
sbb
mov
fadds
mov
mov
pop
push
pop
mov
adc
dec
jge
mov
push
mov
cli
push
pusha
sti
lahf
cltd
stos
pop
fnstcw
push
insl
mov
jle
xor
or
test
mov
bound
push
in
inc
and
mov
and
inc
dec
push
ret
and
leave
in
mov
push
inc
mov
outsl
sub
inc
je
sbb
inc
cmpsl
mov
loopne
inc
test
bound
pop
lods
cwtl
pusha
movsl
stos
cmpsl
jnp
pop
sbb
jns
mov
inc
sbb
mov
jne
cmp
sub
adc
aas
outsb
mov
int3
sub
or
jbe
and
mov
push
and
dec
mov
inc
jp
cmc
or
push
mov
insb
mov
cmpsl
arpl
and
fisubrs
push
mov
jmp
out
dec
int3
cmp
jmp
cwtl
fs
in
jno
xor
gs
into
mov
mov
inc
mov
mov
stos
pop
pop
xchg
cli
test
out
inc
push
test
iret
push
mov
int3
cvtpi2ps
enter
cmp
cmp
or
mov
test
push
imull
jo
popa
jl
jle
sub
pushl
lea
fistpl
lcall
inc
push
jle
xor
movb
jge
xchg
xchg
mov
sub
lds
dec
push
dec
andl
aas
jno
les
cmp
push
sar
push
jl
jno
shrl
and
sbbb
mov
scas
cmc
pushf
mov
inc
adc
mov
cmp
push
mov
bound
lds
dec
out
or
ljmp
lahf
in
iret
mov
int
add
fdivrl
xlat
cli
notl
inc
or
data16
addr16
jl
mov
and
push
mov
mov
mov
sub
ja
bound
push
dec
pusha
loopne
lods
push
sbb
adc
sub
outsl
xchg
dec
mov
cmc
rcrb
lods
cmp
and
fcoml
out
outsl
pop
inc
mov
data16
shrb
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
sub
xorb
clc
adc
mov
jl
popa
adc
iret
enter
or
enter
movsb
or
mov
shrb
jne
or
inc
ret
pop
fldcw
mov
pop
fbld
roll
call
cmp
cli
cmp
aaa
sbbl
and
push
cs
clc
pop
add
pushf
push
cmp
aas
jecxz
loopne
push
rclb
add
sti
mov
lock
and
push
orb
ficoms
out
scas
push
aaa
sub
repnz
jno
gs
xor
mov
aad
test
inc
xor
lea
xchg
fistl
inc
mov
mov
sti
inc
mov
add
xlat
outsl
ja
add
sbb
sti
lcall
xchg
stos
adc
filds
dec
jle
inc
movsl
pop
add
pop
xlat
enter
iret
xlat
jbe
xchg
push
mov
mov
out
or
ret
ss
dec
cmc
loopne
mov
mov
sbb
xorl
sub
adc
xchg
fisubrl
mov
mov
cli
pop
push
lock
sub
xchg
mov
or
sub
aad
or
inc
int3
std
mov
data16
push
loop
mov
adc
aad
lods
mov
mov
mov
aad
imul
outsl
sbb
test
push
mov
xlat
leave
jae
and
dec
shll
mov
cwtl
outsb
fs
xchg
mov
stos
pop
cwtl
xchg
rclb
lock
test
mov
mov
cld
es
xchg
xchg
int3
testb
adc
jb
sti
dec
push
cmp
fwait
iret
add
iret
stos
cmp
jge
stc
sub
xchg
mov
or
sahf
fimull
ljmp
stos
mov
push
sub
cmp
inc
pop
out
adc
sbb
std
mov
repz
cld
or
mov
sub
cmp
pop
outsl
mov
pushf
pop
dec
mov
xor
out
test
mov
sbb
fimuls
sbb
add
push
jg
adc
pop
in
xor
add
imul
fstl
xorb
outsl
sbbb
adc
fldcw
dec
les
int
push
sar
lcall
imul
mov
mov
sbb
jo
and
xor
ds
scas
xor
cmp
daa
pushl
mov
and
test
pop
xor
push
ja
movsb
mov
in
push
and
fmull
js
sub
or
rcrl
filds
shlb
shl
cmp
ja
clc
jg
fs
ja
clc
outsb
inc
xchg
dec
incb
sti
lret
sub
add
xchg
popa
inc
icebp
add
das
adc
popa
sbb
imul
push
mov
lock
fstl
push
push
jnp
jnp
arpl
cld
cmp
out
ss
mov
outsb
jmp
xor
mov
fistl
adc
mov
jne
idivl
dec
add
pop
dec
aas
idivb
pop
sub
push
adc
stos
sahf
fdivs
setae
pop
adc
cs
leave
dec
stc
sbb
adc
xor
fildl
inc
pop
inc
int
imul
dec
in
in
mov
test
sbb
sbb
mov
adc
popl
mov
loope
pop
inc
push
mov
cmpsl
xchg
repz
fnstcw
pop
in
xor
js
and
push
sahf
inc
jae
pop
add
movsb
scas
pop
jno
rcll
mov
fwait
ret
insl
stc
cmc
fdivrs
cmp
in
jns
in
jnp
mov
js
mov
or
movsl
mov
mov
cwtl
jbe
jnp
fcoms
jge
aad
fsubrp
out
adc
shr
idiv
lods
add
lret
call
lea
dec
mov
jbe
jmp
cmpsl
je
daa
mov
rcll
pop
and
sub
mov
inc
adc
inc
xchg
and
loop
adc
adcl
mov
frstor
inc
push
add
dec
int
pop
cmp
cmp
jns
test
in
pop
cwtl
addb
sbb
xor
leave
cmp
mov
ljmp
les
in
jmp
jge
les
mov
arpl
push
outsb
cmpsl
jge
fldcw
mov
rcll
lret
ljmp
filds
popf
xchg
out
pushf
lds
jo
scas
cmc
xchg
dec
lret
fsts
sbb
cltd
stos
inc
iret
call
xchg
int
subb
movsb
iret
ror
push
cmpsb
repz
sbb
adc
pop
out
in
and
xchg
out
cltd
pushf
pushf
in
test
jne
adc
out
sbb
push
jbe
fs
dec
jp
pop
push
inc
fs
mov
ljmp
idivb
ret
out
ss
mov
shrl
and
in
int
xor
inc
lock
push
mov
add
aas
mov
pop
mov
repnz
imull
jmp
or
pop
leave
dec
xor
sub
push
js
stos
jno
imulb
adc
xor
fcoms
and
lret
mov
push
xor
mov
jg
lret
pop
repz
daa
les
call
adc
push
cwtl
imul
mov
dec
andl
mov
fidivl
mov
mov
pusha
clc
into
in
sub
pusha
push
mov
lahf
inc
or
nop
cmp
sahf
or
mov
mov
cmpsb
or
jl
jg
in
int3
mov
inc
push
or
rol
adc
shr
adc
in
push
das
jns
icebp
imul
jns
pop
lahf
rol
and
ds
mov
dec
jb
mov
in
mov
aad
scas
jle
insl
mov
es
xor
cmpsl
jo
imul
mov
mov
lahf
bnd
sbb
push
stos
xchg
pop
add
call
or
sbb
js
bound
pop
jmp
fwait
mov
jns
in
not
and
xor
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
sub
push
inc
adc
adc
push
clc
adc
mov
jecxz
jmp
mov
and
mov
jnp
out
scas
or
rorl
pop
ret
jae
scas
cs
leave
gs
dec
pop
adcl
les
pusha
mov
jnp
jnp
call
xchg
pop
in
push
push
es
lret
sub
loopne
int
or
in
fscale
inc
push
dec
xor
xchg
cmpb
mov
movsb
lods
addr16
lret
loop
push
xchg
sbb
int
sub
xchg
stos
iret
imul
dec
mov
cmpsl
icebp
inc
dec
les
movl
sub
xchg
jmp
mov
test
outsl
test
or
sbb
sub
fisubl
xchg
add
xchg
inc
stos
popa
jle
sbb
pop
pop
cmpsl
nop
cmpsl
pop
ror
sbb
js
lods
dec
test
sarb
out
das
ja
push
xor
adc
scas
sbb
dec
cwtl
add
add
ret
mov
jae
ret
jge
outsl
lods
push
mov
sbb
outsl
xchg
dec
or
xchg
leave
adc
ja,pt
clc
lds
pop
stc
push
lods
pushf
test
jns
pop
pop
and
cmpsl
enter
movl
adc
push
jno
cmpsb
inc
call
push
sub
stc
inc
dec
jg
jp
cltd
aas
and
enter
jns
xchg
xchg
mov
ret
popa
push
jmp
stc
sbb
adc
push
sub
mov
mov
jo
lock
in
jg
cltd
dec
lcall
fs
imul
adc
mov
cmp
ja
mull
aam
shrl
les
xchg
popa
shl
pop
dec
xor
iret
pop
add
mov
addr16
mov
sub
ds
pop
imul
dec
xchg
xchg
mov
std
xchg
add
insl
scas
repz
push
imul
dec
push
pop
pop
dec
imul
sub
sbb
xchg
mov
adc
loope
push
insl
add
je
push
loopne
movsb
lods
jmp
sbb
iret
shr
out
mov
sbb
test
pop
inc
mov
or
fldlg2
lock
mov
cmp
jb
daa
push
adc
daa
gs
push
fs
sarb
enter
insl
or
sub
xchg
cmp
cmc
movsl
lret
cs
pushf
cmpsl
shll
mov
jmp
push
imul
fdivrs
jmp
fcoml
adc
xchg
pushf
mov
movsb
repz
outsb
push
jb
mov
mov
mov
sbb
jb
push
or
mov
outsl
xchg
or
jle
push
adc
inc
shll
test
test
sub
lret
jae
daa
and
insb
cli
push
out
jg
push
sub
push
jo
nop
pop
cmp
inc
inc
arpl
imul
bound
pop
mov
adc
jle
pop
adc
mov
fdivs
fcoml
push
push
add
adc
dec
inc
sub
icebp
addr16
pusha
stos
pop
push
loopne
mov
cmpsb
dec
jne
jb
mov
scas
sarb
sbb
push
pop
pusha
mov
fs
leave
push
imul
iret
lcall
push
test
mov
xor
cmpsl
push
xor
sbb
test
jp
aad
push
mov
cmp
mov
out
jmp
mov
push
inc
push
scas
ss
int3
add
mov
subb
jo
adc
inc
addl
scas
or
pop
fsubs
jae
xlat
adcb
sahf
pop
xchg
loopne
cs
sahf
andl
push
push
sub
xchg
xchg
rcr
stc
gs
push
jp
jmp
sti
shl
inc
push
out
sahf
xor
adc
roll
or
addb
sub
mov
jns
hlt
daa
ja
adc
int3
aas
mov
sbb
xor
and
movsb
ret
inc
cli
int
lcall
adc
xchg
push
cld
shl
sbb
lods
inc
rcr
cli
mov
add
sub
sub
adc
test
daa
dec
test
out
in
push
jge
jnp
arpl
or
push
mulb
push
sbb
pop
addl
mov
cmpsb
sarl
fmull
xlat
fmul
push
es
xlat
mov
push
shlb
cmp
mov
adc
lods
hlt
outsl
and
or
or
xchg
movsb
mov
and
fnsetpm(287
stc
mov
sbb
xchg
dec
inc
or
jno
inc
cmpsb
outsl
and
and
adc
lcall
gs
cmp
add
fldt
lret
dec
xor
lcall
cs
test
cmpsb
aam
jg
push
pop
add
rorl
pop
push
int
add
orl
fstpl
mov
and
rcrb
call
push
lahf
ror
adc
pop
xor
dec
cs
sahf
addl
cmpsb
cmp
es
mov
arpl
jo
mov
in
mov
mov
add
cmp
adc
push
out
jnp
orl
mov
insl
test
test
jecxz
test
sarl
jbe
and
push
mov
cltd
xor
mov
xchg
test
sub
sbb
idivl
jle
imull
sub
jl
cmp
xchg
pop
sbb
cmp
xlat
dec
xchg
out
cmpl
mov
fs
and
mov
sub
ret
sub
arpl
out
loop
rclb
mov
mov
lcall
frndint
clc
cmp
rcl
jle
dec
insl
insl
fcoml
outsb
mov
sbb
push
iret
mov
outsb
pop
pop
mov
jl
and
addr16
push
dec
jl
mov
es
pop
cmpsl
adc
imul
iret
or
jbe
stos
call
pusha
and
push
divb
pop
je
leave
or
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
dec
mov
adc
clc
adc
adc
imul
rcr
lahf
jle
in
sbb
lea
daa
inc
mov
pop
pop
jno
mov
xor
sbb
iret
out
dec
lahf
clc
adc
rcrb
sbb
sbb
sub
pop
stos
cmp
sahf
imul
push
mov
in
in
mov
sub
out
js
mov
fiaddl
std
xchg
fdivs
out
add
pop
sbb
iret
add
jle
stc
xchg
int3
ret
clc
adc
in
pop
add
jbe
adc
addr16
pop
and
mov
sarl
cmp
lods
loope
xchg
or
dec
and
sbb
bswap
push
pop
mov
mov
lea
das
inc
add
mov
loope
mov
out
and
or
js
push
sbb
inc
popa
mov
iret
arpl
jmp
rclb
ja
clc
xchg
or
and
cld
jmp
and
xchg
inc
in
insb
sub
dec
mov
pop
nop
cltd
pop
imul
sbb
int3
jmp
rclb
xchg
in
rcrb
roll
daa
stc
loop
out
scas
xchg
outsb
idiv
push
mov
bound
cwtl
mov
clc
add
or
int3
push
in
cmpsl
movsl
mov
mov
scas
adc
adc
test
adc
sbb
or
jne
nop
stos
pop
out
lock
jle
cwtl
lods
mov
sub
repnz
pushl
sbb
and
lret
outsl
stos
sbb
imul
xor
in
jae
pusha
jo
xchg
xchg
mov
xor
scas
repz
xor
repz
call
mov
ffree
jle
dec
lea
push
lret
add
test
insl
aad
das
dec
call
dec
mov
mov
lcall
sbb
jge
ss
or
sub
repz
lcall
sti
inc
mov
out
lcall
dec
and
sbbb
add
popf
in
loopne
rcll
call
push
push
repz
mov
fcomip
or
cmc
inc
jbe
cmp
and
dec
push
jl
les
push
mov
mov
rcl
mov
sbb
decl
movsb
repz
lods
inc
int
sbb
push
ja
loop
dec
leave
imul
add
cmp
pop
fildll
xor
fstp
clc
nop
fwait
jae
faddl
nop
sbbl
sarl
jle
jnp
pop
in
insl
ljmp
sub
test
sbb
into
addl
adc
arpl
out
jecxz
ret
sarl
scas
stos
aaa
ret
xchg
nop
mov
sti
scas
sub
jo
in
dec
roll
data16
and
pop
lods
fs
jecxz
out
and
dec
sti
iret
sub
mov
mov
push
rorb
mov
mov
adc
mov
divb
insb
pop
pop
mov
fiaddl
add
add
push
push
mov
loope
cli
mov
inc
xor
inc
cmp
adc
lcall
push
pop
test
sub
dec
sub
xchg
in
out
mov
xor
ret
mov
push
std
shl
and
or
push
notb
addr16
les
lods
or
xchg
add
into
std
pop
sub
xor
scas
xor
xchg
mov
inc
sub
ja
in
iret
cmp
mov
pusha
popf
mov
sub
jbe
pop
ds
mov
js
pushf
mov
lods
and
fs
jbe
inc
lret
lds
scas
xchg
ljmp
xchg
sub
int
stos
sahf
out
inc
jp
cmp
add
ds
das
push
call
cmpsl
sub
addb
or
adc
mov
mov
add
outsb
fmull
dec
inc
mov
push
sbb
popa
xlat
inc
sub
and
mov
cwtl
sahf
pop
lock
cli
test
andb
testl
inc
lock
sbb
mov
por
dec
enter
inc
and
sub
dec
out
fs
cli
rorl
mov
cmp
sub
push
mov
hlt
xor
cld
fiadds
mov
js
sbb
push
pop
daa
or
lcall
xchg
ss
lret
push
mov
cmp
pop
cli
jno
test
call
ffreep
out
in
jmp
loop
and
filds
add
shlb
pop
lcall
leave
and
fcoml
inc
adc
je
in
xor
sbb
mov
mov
xor
pop
icebp
fists
lods
sbb
into
scas
mov
sbbb
mov
pop
or
daa
out
stc
jmp
jl
imul
pop
fs
or
xchg
mov
pop
pushf
daa
gs
adc
lea
lret
in
sbb
aad
hlt
push
rclb
cli
out
cmpsb
xchg
in
and
jbe
jle
jb
out
jle
push
mov
mov
pusha
cmp
or
adc
mov
sub
sahf
push
mov
fnsave
popa
stc
loop
adc
repnz
lret
add
and
je
mov
pop
xor
mov
mov
pop
push
sub
sahf
xchg
scas
ja
xor
jb
mov
xor
je
in
fldcw
sbb
out
mov
testl
jge
rorb
ficomps
sbb
fsubrl
fidivs
lock
mov
add
fildll
sbb
into
jl
loop
enter
or
cmp
out
test
imulb
imul
test
dec
inc
mov
adc
sub
inc
lahf
ljmp
xchg
rcrb
mov
pop
jle
xor
pop
fldt
jne
and
pop
daa
shlb
in
xchg
orb
enter
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
push
dec
hlt
xchg
mov
adc
clc
adc
push
push
mov
adc
dec
sbb
sub
push
sub
loopne
push
shl
lea
sti
sti
lods
pop
jge
mov
mov
daa
jg
lods
cmpsb
dec
sub
mov
inc
nopl
push
push
pusha
jmp
lods
pop
push
fwait
push
fdivrs
js
push
and
out
jo
jnp
dec
es
mov
cmp
imul
lcall
xchg
xor
sbb
sbb
mov
mov
jg
lods
fldt
lcall
fimuls
sbb
sbb
inc
cmp
sti
xor
clc
sub
dec
addr16
pop
cmpsb
cmpb
outsl
mov
lret
into
outsb
lcall
sbb
and
mov
lret
sbb
pop
ficomps
fs
out
into
mov
xchg
pop
push
flds
mov
shll
and
fstpt
or
push
mov
dec
push
mov
movsl
push
lret
cltd
cmpsb
orb
cmp
aam
or
test
ficoml
rolb
stc
add
les
fwait
stos
out
aaa
jl
mov
mov
push
insb
xorl
fcoml
out
pop
pop
jmp
push
nop
popa
fidivs
mov
adc
jae
stc
lock
ds
cmpsb
lods
add
inc
add
sub
dec
cs
mov
testl
jmp
cltd
in
test
clc
aad
rorb
aaa
cwtl
add
out
scas
rcrl
mov
push
sahf
mov
add
in
lcall
adc
fadds
outsl
xor
outsl
insb
mov
movsb
popf
loop
insb
xor
mov
pop
neg
push
cmpsb
mov
mov
cmp
xor
testl
inc
mov
in
mov
das
xchg
rcrb
cli
mov
mov
dec
les
jmp
jmp
jne
mov
icebp
into
cltd
pop
xchg
sbb
mov
sbb
imul
xor
fisubs
sub
mov
cmc
icebp
imul
xchg
aam
or
pop
inc
push
lret
xor
roll
xorl
popf
cmc
scas
xchg
mov
icebp
ficoms
in
fadds
clc
xor
dec
jns
pop
or
mov
adc
dec
testb
out
push
cld
cs
pop
aas
mov
fidivl
pop
jae
pop
push
pop
mov
mov
and
add
dec
cs
cli
push
out
xor
out
cmp
adc
mov
popa
pusha
pop
mov
fucomip
cwtl
pop
cmp
scas
enter
sahf
and
add
roll
mov
inc
pop
clc
and
bound
push
cwtl
pusha
es
sti
and
mov
dec
lds
lcall
out
hlt
or
insl
mov
mov
jae
or
cmp
lret
adc
ss
jecxz
shrb
xor
xchg
adc
push
mov
add
popf
aad
mov
jmp
call
lcall
xchg
ffreep
dec
testl
mov
add
shrb
inc
in
das
fbstp
lods
js
mov
inc
push
ffreep
push
stc
icebp
push
or
add
push
test
push
arpl
inc
push
add
dec
inc
cmc
add
adc
xchg
jno
inc
imul
ret
pop
inc
inc
sub
jmp
lods
xlat
sqrtps
ret
mov
bnd
and
xchg
sar
andl
add
icebp
mov
mov
jp
arpl
sub
or
push
mov
add
mov
cmc
test
mov
fsubrl
loop
cmp
inc
dec
push
adc
adc
xchg
pop
inc
loopne
mov
mov
xchg
xchg
sahf
ret
push
insl
mov
inc
lret
push
stc
push
mov
jle
iret
addl
dec
cmp
push
sub
orb
cmp
lock
stos
stc
xchg
or
sub
mov
cmp
cmp
xchg
jnp
jae
orb
dec
mov
in
xchg
out
pushf
xchg
daa
xor
xor
mov
mov
pusha
fimull
out
cmpsb
jmp
fstl
daa
cmp
pushf
lock
xlat
jnp
mov
daa
lret
inc
add
or
into
scas
dec
idivl
lods
ss
shlb
insl
push
or
inc
pop
inc
popf
fwait
decb
jb
jmp
shlb
mov
and
and
jle
jmp
inc
js
movsb
repnz
test
xorb
lods
mov
stos
fbstp
icebp
bnd
mov
add
mov
jnp
dec
sbb
push
mov
or
mov
iret
or
pop
lods
faddl
aad
es
mov
jp
lahf
pop
negl
pop
mov
jnp
sahf
jns
sub
testl
xor
cmp
int3
cmp
adc
scas
divb
xor
and
andb
aam
mov
shlb
mov
dec
mov
ret
iret
push
adc
das
inc
sbb
les
cltd
push
stos
das
xor
mov
sub
gs
aas
mov
setb
mov
pop
jbe
mov
jl
adc
sahf
addl
push
inc
or
mov
and
enter
cmp
js
mov
jb
mov
out
cmp
mov
push
subb
arpl
xchg
jp
scas
andb
orl
xchg
repz
lcall
xor
jns
imul
mov
push
fsubrs
add
aam
inc
add
int3
add
mov
loopne
mov
fcmovnu
and
shlb
xchg
inc
mov
bnd
imul
movsl
mov
in
mov
in
mov
push
sub
int
xor
sbb
push
mov
xchg
mov
jmp
adc
enter
fistl
dec
nop
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
ja
xchg
inc
aam
adc
push
clc
adc
mov
lds
fistpll
js
out
lret
pop
push
and
loopne
cmpsl
push
repz
inc
add
and
sub
lods
leave
cld
call
in
inc
roll
sti
xor
cli
xlat
into
jmp
test
das
and
cmp
icebp
imul
mov
nop
sub
loop
cwtl
jmp
das
inc
scas
inc
adc
sub
dec
mov
rcr
je
in
cmp
loop
and
mov
jg
jmp
insl
movsb
sbb
mov
cmp
cld
stc
hlt
mov
pop
jecxz
test
xchg
stc
ss
mov
cmc
sbb
aad
adc
jnp
lea
imul
ja
push
pop
jecxz
int3
fstps
test
movsb
into
xchg
or
sti
add
sbb
inc
adc
pop
leave
cwtl
mov
mov
push
xchg
leave
jns
inc
ficompl
sub
test
test
clc
jp
filds
popa
cmpw
sahf
in
ret
es
test
pop
sahf
ret
aaa
mov
ds
jecxz
iret
sub
add
mov
xor
sarl
cltd
sbb
sbb
mov
sahf
shlb
out
clc
dec
xchg
pop
inc
stos
loopne
and
jg
pop
test
mov
mov
subb
xor
push
pushf
test
addr16
xchg
repz
jle
mov
ss
scas
enter
ret
or
mov
xor
sub
mov
and
dec
addr16
into
mov
dec
push
inc
repnz
shrb
add
adc
shrl
iret
and
add
shlb
xchg
cmp
sub
rcrb
dec
cmp
mov
xchg
cli
dec
lea
or
subl
jg
adc
dec
xor
mov
mov
arpl
ja
push
add
ljmp
or
fadd
mov
cmc
fwait
sbb
sub
xchg
sbb
ret
mov
xlat
bound
jecxz
sti
cmp
adc
adcl
adc
les
aam
ljmp
add
cwtl
call
repz
and
mov
test
xchg
xor
mov
dec
xchg
jnp
clc
les
push
mov
or
ja
jae
cmpsl
xchg
sub
sahf
jbe
daa
jb
pop
sbb
mov
into
rorb
pop
add
or
rcrb
gs
and
sbb
das
cld
cmc
rorb
pop
femms
xor
push
push
mov
sbb
mov
jbe
sub
scas
or
lret
sub
xchg
pushf
mov
add
stos
push
add
call
loopne
push
out
gs
enter
xchg
xchg
data16
mov
andl
cmp
loop
add
stos
xchg
aaa
fbstp
lahf
inc
cmovnp
cmpsb
add
pop
addr16
ret
imul
push
inc
mov
negl
xor
inc
jnp
mov
insb
mov
nop
iret
lcall
pop
cwtl
or
xchg
es
data16
lods
outsb
stc
mov
push
sub
int
fisubs
xor
dec
sahf
sub
loop
int3
add
sbb
in
js
dec
jmp
adc
sub
insb
ret
aaa
sbb
repz
push
out
jo
jge
repnz
insb
jg
jl
xchg
fs
add
and
movsb
dec
stos
test
pop
jg
and
xor
push
cmpsl
sbb
out
jns
dec
xchg
mov
pop
std
add
dec
xchg
inc
xchg
loopne
outsb
cmpsb
pop
iret
aaa
sbb
cld
xor
aas
mov
pmullw
jbe
pop
dec
pop
out
xchg
sbb
js
and
xchg
fists
das
adc
add
insl
jnp
outsb
cmpsb
je
ss
insb
mov
jl
cmp
popa
adc
fwait
cmc
mov
in
add
mov
mov
scas
ss
mov
dec
mov
subb
sub
add
popl
pop
inc
mull
mov
adc
iret
repz
cmp
add
jl
sub
pop
sub
je
fistpll
mov
fucomi
imul
xchg
clc
push
lock
insl
shll
out
mov
cmp
shll
push
sbb
test
scas
mov
fsubrl
cwtl
bound
sub
je
scas
fmull
out
xlat
mov
mov
shlb
adc
or
push
dec
lahf
xchg
aad
popa
pop
pop
pop
xchg
dec
leave
nop
sbb
bound
fs
stos
mov
ss
int3
mov
das
fistpll
jbe
pop
mov
lahf
pushl
and
xor
in
das
into
jmp
sbb
ljmp
xchg
xor
cltd
fimuls
addl
fidivrs
and
pop
ret
mov
mov
sbb
mov
rcr
xchg
mov
cmpsl
or
dec
jne
inc
cli
lret
xchg
inc
es
dec
and
push
pushf
jns
sbb
pushf
sub
mov
mov
sbb
xchg
sahf
mov
xchg
stos
cmpsb
inc
jge
cmp
aad
shlb
ja
and
push
ja
inc
popa
pusha
dec
in
mov
jbe
stos
lods
push
pop
jb
push
out
push
mov
xor
out
jmp
stos
mov
aam
pop
repz
sbb
scas
or
push
mov
sub
push
push
into
jnp
jmp
out
orb
adc
insb
jp
jmp
adc
jae
pop
mov
cli
fdiv
inc
fidivs
cmp
fcomps
dec
add
stc
pop
xor
lea
add
jnp
addb
testb
mov
inc
cmpsb
stos
lea
imul
aaa
rcrb
jp
dec
nop
adc
pop
jge
fidivrs
push
gs
mov
aaa
movsl
cmp
jnp
adc
aam
mov
imul
sub
fidivs
inc
dec
in
icebp
xchg
cmpb
daa
adc
jle
pxor
jecxz
dec
fiadds
shl
sub
pushl
mov
xor
cltd
jae
loope
pop
sbb
xchg
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
cwtl
add
clc
adc
pop
and
add
imull
das
insl
mov
mov
imul
xor
ret
cld
jne
ja
stc
mov
jnp
add
inc
jno
xchg
repnz
out
arpl
and
jg
mov
sub
mov
into
add
adc
bound
push
insl
xchg
xor
sbb
adc
lret
jle
repnz
mov
les
pop
rcl
outsl
mov
xor
gs
mov
push
stos
pop
stc
dec
fsubl
int
andb
popa
in
sbb
lahf
push
mov
sbb
cmp
lds
int
dec
jae
out
push
mov
and
outsb
mov
lods
in
out
xor
inc
in
adc
xchg
adc
shl
xchg
or
ret
cmp
dec
daa
mov
dec
add
jecxz
mov
bound
rcll
jl
fwait
aas
ds
aas
cmpsl
mov
sub
mov
sahf
pop
fistl
dec
add
dec
shlb
gs
sub
pusha
scas
xor
or
pop
mov
outsl
or
xchg
out
mov
fiaddl
pop
mov
in
call
lahf
push
ret
push
andb
popf
push
cmpsl
scas
inc
lock
xchg
int3
mov
out
imul
leave
daa
sbb
or
pop
stos
jo
notb
test
mov
sub
jno
xchg
rolb
jl
repnz
or
xor
dec
mov
mov
add
push
inc
into
sbb
xchg
xchg
mov
sbb
push
sbbb
mov
jbe
jle
inc
add
xchg
xlat
sub
sub
pop
imul
push
mov
cli
arpl
jg
cmovb
push
xchg
outsb
cwtl
aas
mov
or
fdivrl
mov
push
pop
pop
loop
xchg
mov
dec
lret
out
add
subb
mov
pop
mov
push
and
test
sbb
jo
arpl
test
pop
mov
xchg
cmovb
cli
aas
out
jmp
ffree
sub
pop
add
fsts
push
cmpl
lcall
in
push
sbb
mov
adc
aam
inc
mov
add
shlb
adc
mov
hlt
adc
xchg
fdivp
xor
into
mov
leave
xchg
jge
into
sbb
lahf
cmp
rcrb
comiss
lds
jo
nop
mov
scas
iret
or
or
jnp
mov
xor
ja
jg
je
cmp
jmp
lods
jge
pop
fists
inc
mov
dec
add
outsl
icebp
loope
sub
pop
push
rorb
vpackuswb
sbb
mov
cs
sub
mov
mov
adcb
es
inc
movsl
daa
fcmovnbe
sbb
je
pop
shlb
stos
aam
mov
not
push
por
scas
je
pop
pop
push
hlt
or
xor
shlb
bound
push
clc
push
adc
fmuls
pop
dec
test
sub
mov
jb
xor
cmpsb
sbb
shll
imul
leave
inc
js
daa
or
cmpsl
js
hlt
push
pop
insb
pushf
les
into
or
cltd
ja
movsl
xchg
int3
aam
scas
inc
enter
js
cs
lods
imul
cmp
in
push
xchg
sub
dec
daa
mov
adcb
mov
loop
je
adc
scas
fwait
psubusb
sti
inc
adc
out
icebp
icebp
jle
xlat
mov
xor
mov
fisttps
lahf
daa
repz
popl
in
aad
adc
test
divb
sbb
mov
insl
test
mov
dec
mov
mov
mov
nop
fisubrs
imul
mov
sti
sbb
mov
std
or
or
adc
push
cmp
or
mov
inc
repz
pop
jb
mov
sbb
jae
fs
cmp
jp
push
pop
jp
imul
insl
add
mov
addr16
outsb
ret
ja
adc
push
adc
popf
dec
mov
sti
cmp
dec
sub
std
jbe
mull
testl
je
pop
dec
mov
movsl
mov
jmp
pop
xor
push
pusha
in
add
mov
testb
stos
xchg
mul
popa
jmp
mov
addl
aam
cmpsl
xchg
mov
imul
xor
stc
sti
pop
nop
xor
push
addr16
loop
outsb
fldt
out
cltd
imul
clc
sub
les
cmp
andl
xor
cltd
int
xor
rol
stos
sti
ret
or
push
inc
inc
mov
cmp
cmp
push
push
jb
sub
and
xor
xorl
xchg
aad
dec
bound
js
push
loopne
fs
sahf
adc
dec
jbe
fsts
sbb
mov
imul
jle
or
push
and
rorl
test
lea
cwtl
sbb
fcomi
pop
ja
push
sub
cld
std
push
vshufpd
adc
sub
mov
sbb
and
lods
aam
sbb
jecxz
imul
inc
movsl
scas
xchg
add
xor
push
and
push
or
push
xchg
mov
loopne
adc
neg
mov
lods
add
sub
push
icebp
sbb
pop
aas
inc
pushf
lahf
cmp
mov
popf
rcll
mov
mov
xchg
ror
les
adc
adc
and
test
pop
mov
ja
aas
sbb
mov
jecxz
sahf
xchg
mov
in
adc
jle
fcompl
pop
pop
adc
mov
sti
xor
sbb
data16
mov
mov
adcl
shlb
lock
fistpl
dec
fwait
and
dec
push
ljmp
popa
sbb
rorb
movsb
ret
rorl
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
decb
push
xchg
push
clc
adc
sub
and
jbe
pop
mov
sub
dec
sti
mov
in
mov
add
sbb
cli
fmuls
mov
cmp
and
xchg
cld
test
pop
jp
idivl
xchg
outsl
arpl
loopne
cmp
mov
testl
repz
lods
dec
fs
repnz
xor
ret
push
imul
mov
es
pop
test
jbe
roll
cmp
jnp
lock
in
adc
lock
add
sbb
ds
loop
jbe
dec
xchg
bound
and
imul
jle
mov
xchg
and
imul
test
jge
int3
out
lcallw
jae
les
jp
aas
movsl
iret
fsubs
jmp
add
and
jb
add
jecxz
hlt
mov
mov
dec
and
mov
or
mov
push
popf
push
sub
push
cmp
es
adc
inc
popa
or
repz
or
loop
jne
push
sti
outsb
xor
data16
jae
rolb
mov
jns
mov
addb
cmpsl
xor
add
or
jl
xchg
out
or
enter
stos
sarl
xchg
imul
push
jo
inc
ljmp
rcrb
rcll
xchg
or
insb
sbb
lret
xor
jbe
pop
clc
cwtl
mov
add
pusha
js
fildll
pusha
lods
enter
add
fnsave
jbe
cmpsb
adc
xor
xchg
enter
mov
test
adc
scas
mov
or
sbb
aas
lods
in
jno
xor
out
cmp
and
aad
test
imul
aas
fisttpll
push
insl
and
pop
ljmp
out
push
sbb
or
imul
inc
jbe
push
inc
pop
add
faddl
iret
jmp
iret
jge
jae
ret
call
sbb
popf
mov
ljmp
out
mov
pop
xor
dec
fwait
cwtl
jnp
pop
repnz
lcall
imul
popa
movsl
push
jg
adc
ja
jge
ss
mov
xchg
fldenv
jae
dec
test
dec
xor
inc
lds
cld
push
int
jb
fnsave
xor
mov
xor
xor
pop
push
mov
xchg
mov
stos
or
xlat
add
add
and
movsb
and
inc
jecxz
cmp
imul
xor
sbb
or
loop
xor
icebp
mov
shrb
fildl
mov
mov
lods
cmpsb
xchg
pusha
fbstp
cmp
insl
test
out
adc
or
int
dec
pop
cmp
xchg
or
jl
pop
and
aam
mov
sbb
mov
jl
fnstenv
cltd
jbe
mov
mov
xchg
in
in
push
jae
lret
fdivrp
xchg
das
push
mov
or
inc
cmp
fisttpll
jmp
test
out
scas
fucom
outsl
add
mov
cmp
xor
loop
mov
paddw
movsb
into
je
insb
pop
add
mov
xor
jmp
lods
push
mov
push
test
aas
xchg
in
push
and
mov
adc
jp
or
pushf
das
mov
addr16
clc
mov
enter
mov
outsb
clc
int3
cs
stos
les
fmuls
outsl
sub
mov
push
and
add
mov
pop
xchg
pop
xor
popf
pushf
and
clc
xor
pop
push
je
push
outsl
cmp
inc
fsubp
push
add
adc
sarb
pop
mov
sbb
dec
push
add
push
rorl
outsl
jne
insb
daa
xor
adc
daa
xor
xor
inc
fs
lret
ret
inc
push
or
repz
scas
or
es
mov
jns
stos
imul
mov
inc
enter
in
xchg
adc
xor
ficompl
test
pop
shll
xor
sbb
lods
cmp
sbb
pop
and
dec
rcr
and
mov
push
in
fildl
mov
aas
sti
nop
mov
movb
cmp
adc
or
push
aaa
in
mov
shll
cwtl
adc
and
sahf
jp
xchg
arpl
mov
cmp
iret
cs
sarb
aaa
dec
mov
sbb
sbb
data16
loop
push
cmp
enter
jns
lods
xor
xorl
inc
es
sbb
xor
sbb
dec
add
pop
sub
and
shrb
lcall
cmp
or
inc
sbb
push
jle
imul
cwtl
neg
push
and
sbb
inc
jo
jmp
outsl
inc
inc
gs
adc
insl
jp
sbb
and
mov
mov
inc
imul
add
outsl
fsubrl
neg
lret
push
xchg
push
mov
scas
nop
loop
test
ljmp
lea
roll
lret
or
xchg
pusha
or
jecxz
outsb
mov
mov
cmp
and
negb
mov
lahf
xor
sbb
jmp
adc
dec
daa
negl
pop
cmp
je
mov
jg
mov
mov
or
jnp
mov
jae
jl
jnp
out
leave
xor
and
cmp
mov
rcl
sub
cli
leave
inc
push
mov
cld
and
repnz
std
pop
xchg
data16
cmc
call
sub
pop
testb
test
cli
cwtl
in
outsb
push
pop
ljmp
ret
loop
mov
es
fldt
xor
push
sub
adc
mov
xor
adc
xor
inc
jg
cwtl
push
mov
mov
mov
in
mov
xchg
inc
mov
test
jg
rclb
cmpsl
mov
adc
out
test
scas
or
xor
fimull
add
bound
adc
inc
adc
test
ret
push
add
mov
imul
push
inc
pop
xchg
push
adc
arpl
mov
jne
adc
jge
mov
mov
scas
testb
out
push
into
testl
insb
jae
hlt
mov
push
jb
sbb
push
inc
jne
and
mov
sub
or
push
and
inc
sbb
adc
xchg
inc
dec
ja
test
xchg
cmp
in
jmp
das
stos
fcoms
jne
jbe
adc
lret
test
mov
jmp
sbb
inc
add
mov
pop
cmc
dec
scas
push
sbb
cmp
and
gs
mov
cmp
mov
or
xchg
ds
fcomip
xchg
out
push
mov
sub
jnp
or
inc
cmp
imul
push
lods
into
mov
dec
dec
test
fisubrs
inc
sbb
fwait
shrl
stos
imul
push
push
and
xchg
xor
lds
pop
adc
mov
mov
or
dec
pslld
lcall
stos
and
xor
ss
inc
movsb
add
imul
cmpsl
aas
inc
xor
pop
pop
push
outsb
andb
ret
jb
push
mov
xchg
fs
pop
ret
or
lret
jle
bound
mov
push
stos
pop
lods
std
cmpsl
push
sbb
fcmovne
cmp
test
arpl
testb
int3
ljmp
mov
pop
int3
fwait
adc
ja
add
mov
bound
shrl
in
ss
fbld
lret
xchg
pop
ret
cmp
imul
cli
ljmp
sub
mov
pusha
pop
inc
sarl
ja
outsl
mov
mov
xchg
inc
push
in
iret
scas
push
add
lock
mov
out
cwtl
jne
sbb
cmp
testb
pop
inc
mov
xlat
es
jmp
ds
ret
jno
cmpsb
dec
cltd
daa
stos
and
lret
stc
xchg
rcr
mov
int
lods
push
insl
out
jmp
data16
add
xor
mov
xchg
xchg
nop
and
mov
mov
test
inc
int3
mov
mov
push
jmp
cmpsb
repnz
rolb
mov
sub
or
xlat
std
pop
push
or
xor
mov
dec
gs
dec
stc
and
mov
dec
xchg
scas
hlt
add
stos
outsb
xchg
push
test
jle
mov
shlb
sub
inc
aas
jo
rorl
mov
nop
jge
daa
ret
or
adcl
xlat
int
addl
xchg
inc
xchg
add
jb
mov
pop
jle
fnstsw
mov
mov
movsl
stos
repnz
nop
dec
fiadds
ret
aas
jo
imul
sbb
daa
sahf
mov
inc
add
aas
outsb
pop
inc
mov
aas
jnp
or
in
dec
sub
ret
pop
rorl
push
jb
out
test
in
fwait
pusha
popa
xor
addl
lahf
add
pop
rolb
in
cmp
nop
pop
or
pop
mov
fnsave
out
in
jb
xchg
sub
or
fstps
cmc
push
int3
and
ss
adc
or
mov
sub
mov
cmp
fs
call
popa
clc
arpl
add
xor
std
dec
mov
les
dec
scas
lcall
aam
inc
rol
mov
and
inc
push
pop
lea
jns
shlb
xchg
lods
bound
pop
mov
push
sarb
sbb
xchg
add
dec
mov
pusha
push
ljmp
dec
pop
cmp
xor
int
stos
ret
aaa
outsb
or
scas
nop
pop
rolb
and
mov
int3
ret
bound
in
jns
int
hlt
mov
lcall
js
ja
pop
test
js
int3
mov
addb
in
sub
int3
fstl
movsl
pop
dec
es
mov
subl
subl
pop
push
and
mov
dec
int3
movsb
inc
cmp
push
xor
inc
les
or
out
and
vpsraw
popf
mov
sub
ja
adc
movsl
mov
mov
outsl
cwtl
mov
push
jmp
push
pop
mov
lret
sbb
imull
repnz
sbb
push
mov
out
pop
cli
mov
dec
dec
mov
fldl
cmp
das
cmp
cmpsl
into
jmp
xor
pop
enter
jmp
aam
pop
xchg
inc
cmp
mov
cwtl
dec
jle
in
mov
aaa
enter
lock
mov
xchg
out
sbb
xor
lods
jno
mov
jno
and
inc
xchg
pop
lea
mov
push
jnp
lret
pop
jl
incb
in
lods
push
es
push
out
inc
cmp
mov
sub
lock
lcall
push
pop
pop
and
jg
inc
or
sub
inc
adc
push
cs
pop
fs
pusha
xor
cmp
push
hlt
cmp
insb
add
fadds
ss
bound
dec
sahf
mov
push
xchg
jns
pop
jb
lret
inc
lds
push
shll
loope
ds
pushf
out
inc
sub
xchg
rolb
out
out
push
out
jo
push
repz
or
push
cmp
adc
jne
jmp
add
mov
mov
jae
out
sub
pop
in
xchg
cmp
and
sti
cwtl
fsubl
mov
adc
std
clc
pop
ljmp
test
dec
ret
or
sbb
into
push
xchg
xchg
jmp
mov
fnstcw
ficomps
cmp
cmpb
inc
mov
xchg
adc
xchg
fsts
fldenv
mov
faddl
repnz
out
and
xor
scas
dec
jmp
ds
fldl
mov
inc
inc
or
mov
insb
test
movsb
int3
pop
lret
mov
das
dec
stos
mov
pop
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
leave
adc
adc
clc
adc
hlt
sbb
fldt
std
jo
mov
mov
mov
fdivr
mov
sbb
shrl
xlat
fwait
imul
ja
mov
cli
pop
push
xor
std
dec
test
pop
push
jl
fadds
push
mov
jg
jecxz
mov
cmp
dec
sbb
outsl
into
mov
push
test
inc
push
xchg
add
pop
bound
cmc
cwtl
aam
cmp
and
and
mov
mov
push
pop
pop
cltd
mov
dec
or
add
fidivrs
xchg
std
xor
mov
nop
rcrb
mov
in
inc
mov
jp
inc
std
xchg
out
faddl
sub
xchg
xor
loopne
lret
xchg
jecxz
iret
push
gs
ret
ret
or
dec
push
mov
inc
test
scas
int3
pop
or
loope
call
into
repnz
insb
adc
or
dec
int3
push
insl
adc
cmp
leave
scas
loop
shr
jns
movsl
and
rol
outsb
cld
dec
ret
aas
xchg
dec
fstp
fcoml
mov
mov
xchg
mov
out
pop
std
mov
mov
cmp
mov
cmp
fidivrs
ret
jno
and
xor
xor
repz
jb
mov
inc
aas
pop
jge
icebp
insb
scas
lea
adc
inc
sbb
lahf
sbb
loopne
inc
int
das
retw
jbe
sbb
xchg
sub
scas
push
add
lea
inc
fwait
push
mov
push
cmp
stos
xor
xor
pop
add
cwtl
adc
testl
ret
jno
cwtl
dec
iret
sub
mov
xor
mov
gs
add
clc
inc
movsb
call
dec
into
jp
loopne
scas
push
sahf
test
mov
adc
insl
stos
xchg
fbld
sub
clc
ss
adc
scas
movsb
bound
imul
mov
out
ljmp
sbb
and
mov
xlat
aas
stc
data16
daa
sub
movsl
test
xor
and
push
push
lahf
pop
repnz
mov
mulb
mov
pop
sub
aaa
shll
scas
mull
ret
xor
xchg
push
and
lcall
inc
push
mov
rcr
cmpsl
inc
sti
popa
add
enter
test
dec
and
fmulp
or
nop
mov
sub
shrb
orl
sub
fisttpll
jbe
aaa
sbb
inc
mov
mov
insl
stos
pop
add
cmp
add
dec
jl
cwtl
inc
lods
add
fcomps
test
movsb
popa
cmp
jbe
test
inc
fwait
jecxz
jne
inc
and
pusha
imul
inc
xchg
cmp
jo
or
inc
inc
repz
mov
std
inc
lcall
mov
lret
repz
xchg
das
push
insl
adc
add
enter
mov
sarb
out
pop
ret
pop
push
pop
adc
push
pop
ret
test
mov
test
mov
inc
inc
aaa
scas
pop
xchg
lea
out
addr16
andb
leave
dec
popf
jmp
mov
push
lock
in
push
jmp
lret
test
xchg
push
adc
out
mov
notb
xor
jl
lahf
jle
cli
jo
adc
testb
mull
inc
cld
ss
or
sub
mov
add
xor
ljmp
roll
cmp
pop
pop
jge
and
mov
nop
jl
rorb
sub
jecxz
imul
mov
mov
pop
cmpb
dec
jle
mov
sub
loop
fimull
aaa
loopne
in
out
fsubp
fcoms
dec
icebp
and
stos
inc
fucomip
cmp
call
movsb
loopne
xchg
push
daa
jae
or
xor
mov
xabort
dec
aam
push
mov
mov
mov
xchg
mov
xchg
dec
sbb
test
outsb
sbb
push
mov
dec
or
add
xor
cmpsb
stc
cwtl
inc
sbb
jmp
sub
push
jno
inc
fnstenv
sbb
test
xchg
xchg
movsl
rorl
test
aas
sub
popf
dec
out
icebp
scas
mov
lock
out
inc
add
roll
inc
daa
enter
mov
sub
rcl
daa
sbbb
or
test
add
add
pop
or
push
lret
xorl
jle
push
lds
and
ss
pop
out
and
out
pop
jo
mov
rcr
cmpsb
xchg
mov
dec
nop
or
mov
test
mov
lret
or
in
shrb
xchg
xor
cmp
sbb
push
xchg
and
jg
push
stos
cmpsb
and
cmpl
lcall
loop
add
fistl
jp
imul
cmp
mov
decb
loopne
clc
mov
mov
sub
adc
mov
int
sub
lcall
or
xlat
dec
daa
mov
pusha
or
fsts
out
aam
loope
cmp
popa
push
orb
sbb
clc
push
dec
sbb
pop
stos
mov
rcll
adc
mov
pusha
cmp
cmpb
cmp
push
mov
mov
inc
cmp
sub
out
sarb
subl
in
sbb
push
cmp
lahf
xchg
rcll
daa
jmp
cmp
aaa
ds
or
jbe
fnsave
adc
in
aas
add
leave
lock
lods
xor
shll
outsl
dec
lcall
push
fs
nop
aas
inc
scas
mov
icebp
push
xchg
ja
sbb
test
dec
popf
adc
mov
stc
sub
dec
jecxz
adc
mov
inc
pushf
dec
lock
sub
mov
clc
adc
rclb
notl
cmp
dec
sub
or
lds
xor
mov
fistpl
dec
xchg
fmull
add
cld
push
add
cmpsl
sbb
jbe
es
sbb
loopne
adc
adc
push
clc
adc
sub
fisubs
ljmp
ret
mov
and
ficompl
push
fiadds
call
clc
jge
ret
scas
stos
bound
outsb
lcall
lods
mov
mov
xchg
lds
add
mov
pop
pop
push
jno
xchg
xchg
data16
xor
dec
call
pop
xchg
imul
fadds
xchg
xchg
fsts
or
adc
popa
cmpsb
out
adc
add
rolb
loopne
aad
seto
nop
cmpsl
jne
inc
sub
inc
xchg
clc
xchg
mov
push
ljmp
aam
faddl
fs
push
cwtl
jecxz
mov
dec
xchg
data16
nop
je
pop
push
lock
dec
fsubs
cmc
shlb
insl
add
jae
mov
sti
push
movsb
insb
aad
xchg
in
and
push
mov
jg
pop
inc
inc
mov
push
adc
ret
loop
pop
pop
into
dec
add
sahf
mov
nop
and
mov
jbe
jle
es
push
pushf
or
xchg
loopne
or
pop
mov
pusha
out
mov
js
pop
push
inc
jae
outsb
and
lret
shlb
cli
push
mov
enter
inc
outsb
loop
fadd
mov
xor
sub
push
insl
out
insl
adc
in
rorl
adc
add
lret
icebp
sub
lds
ret
mov
inc
int
jno
dec
lret
adc
int
and
dec
fcmovne
shlb
mov
pusha
js
lds
call
subb
inc
cmp
rclb
push
testl
add
outsl
xor
adc
ljmp
mov
add
jmp
or
mov
ret
or
pop
daa
mov
movb
sahf
mov
jo
fimull
fldenv
fsubl
roll
outsl
cmp
xchg
push
fucomp
pop
push
or
dec
sub
jp
xlat
fsubrl
pop
sbb
and
mov
imul
sub
inc
das
jge
inc
push
fwait
sbbb
int3
push
xchg
mov
in
shl
cld
add
inc
movsl
imul
jb
sub
and
imul
ss
fdivrs
das
inc
mov
out
xor
pause
movsb
popf
cmpsl
andb
imul
lret
inc
sbb
inc
jle
mov
jo
pop
fstpt
pop
cld
mov
inc
mov
dec
jle
int3
add
mov
mov
or
add
mov
es
and
mov
filds
or
fidivrl
addr16
push
adc
sub
dec
int3
ret
andl
pop
fcmovnu
xchg
push
sahf
mov
jl
popf
mov
ret
divb
sbb
or
out
and
negl
cmp
addr16
hlt
nop
add
adc
lret
jnp
fistpll
add
pop
js
roll
dec
fisttps
fldcw
dec
inc
cmc
cmp
sbb
addl
les
sub
fnsave
mov
ljmp
push
push
leave
pop
mov
dec
imul
test
mov
outsl
push
xchg
jae
stos
jmp
adc
mov
sbb
dec
popl
lcall
pop
into
lret
mov
repz
sbb
pop
shr
je
pop
inc
xchg
popa
subb
jg
mov
xchg
scas
mov
xchg
adc
xor
call
mov
sub
and
pop
add
nop
add
fimuls
dec
mov
arpl
inc
scas
cmpsb
repz
hlt
sbb
fistl
cmp
xor
call
push
cmp
jo
jmp
fwait
lahf
scas
dec
lock
lock
mov
sub
sbb
cmpsl
out
adc
mov
int3
inc
fsubrl
jbe
andb
mov
dec
dec
mov
mov
pop
js
in
imul
std
sub
icebp
pop
mov
wrmsr
mov
popf
adc
shrl
pop
imul
arpl
pop
jns
push
mov
sub
in
in
inc
sbb
cmp
cmp
push
loopne
cs
loop
jmp
arpl
imul
and
or
add
xor
filds
or
je
loope
xor
mov
mov
dec
push
filds
fldenv
leave
cltd
int3
push
test
arpl
aaa
cwtl
or
packuswb
xor
sub
or
add
jp
test
int
fmull
pop
aad
es
jg
xchg
ret
ljmp
fdivl
out
mov
in
adc
rolb
inc
pop
icebp
add
out
dec
and
push
stc
sti
jecxz
and
imul
mov
les
push
pop
sbb
xchg
enter
ret
scas
les
mov
divl
xchg
les
scas
cmp
adc
mov
sbb
mov
cld
mov
mov
lea
jg
outsb
inc
mov
pop
mov
fisubrl
inc
stos
mov
shlb
lods
fiaddl
stos
cmc
xchg
cmp
jns
jmp
cli
mov
inc
test
sbb
int
push
fidivs
mov
sbb
lcall
and
cmp
inc
outsl
xor
sbb
popf
lock
fwait
jecxz
lods
lods
rcrl
movsb
rcll
xchg
push
push
fucom
push
repz
jg
addr16
pop
and
dec
xchg
sub
xchg
push
push
push
movsl
lea
les
sub
pop
pop
fsts
movsl
fcomps
adc
push
adc
out
es
adc
iret
pop
mov
cwtl
dec
mov
rclb
loop
push
xor
test
xchg
push
inc
les
cmc
sub
mov
incb
jno
pop
imul
loop
mov
jl
jb
loop
ret
and
sbb
cmp
jae
sub
sti
fadd
test
cmp
xor
fsts
gs
movsb
aad
adc
sbb
pop
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
inc
adc
push
push
adc
push
clc
adc
fists
mov
adc
fstpl
ret
jne
cmp
jmp
add
lods
jo
dec
adc
lods
mov
shr
dec
or
mov
pusha
mov
cmp
lcall
fildl
mov
inc
push
stos
mov
lahf
mov
sub
in
xchg
mov
fstpt
jns
adc
int3
or
ljmp
pop
add
sbb
mov
int3
sbb
lret
dec
out
aaa
negl
in
sbb
pop
ss
das
rclb
pusha
js
fs
xchg
jmp
jecxz
movsl
xchg
xlat
push
fcoml
inc
fcomps
fstps
adc
outsl
bound
das
stos
negb
mov
jbe
pop
es
scas
repz
inc
pop
mov
ds
cs
iret
cld
inc
test
lea
pop
imul
jbe
mov
sahf
idiv
testl
stc
ds
mov
xchg
cwtl
popa
push
push
in
cmp
pop
inc
loopne
pusha
pop
lret
cmp
in
aaa
out
mov
fstpl
lcall
dec
pop
outsb
jle
cltd
pusha
adc
ror
jl
out
aam
ficoml
pusha
xor
dec
inc
ja
jbe
or
loope
mov
adc
inc
mov
lahf
jb
shl
add
adc
lods
imul
aam
mov
stos
sub
pop
adc
movsb
popa
pop
stos
mov
negb
push
fucomi
xchg
std
and
dec
stos
inc
fiadds
xchg
int
scas
sti
adc
pop
cwtl
es
pusha
loop
push
add
inc
shll
push
cli
jns
insb
rcll
mov
js
xlat
xor
fisttpll
stc
push
outsl
scas
roll
inc
hlt
xchg
fiadds
xor
mov
loopne
mov
in
lds
popa
sub
fisttpll
decb
ret
jp
inc
push
xchg
push
xchg
jb
orl
cmpsl
mov
fwait
jb
sub
scas
lods
push
rolb
dec
xchg
add
addr16
and
xchg
fnstsw
jno
push
fdivl
jl
or
mov
jb
push
mov
xchg
das
data16
pop
insb
pop
adc
mov
scas
or
adc
adcb
xlat
push
or
aad
stos
bound
mov
loop
cmp
repz
sub
sub
push
inc
fs
pop
std
and
ret
mov
mov
ficoms
inc
outsl
xchg
repnz
fsubs
sti
bnd
pop
push
or
daa
xchg
fmuls
in
int
xchg
repz
jp
imul
mov
sbb
scas
jae
bound
das
js
cmp
lock
bound
ret
pop
mov
push
or
mov
leave
pop
xor
xchg
sahf
or
fidivrl
call
xchg
lock
fcomps
xchg
xchg
lds
cmpsb
iret
leave
enter
ja
pop
sarl
or
bound
jl
mov
mov
xchg
add
sbb
mov
xchg
xor
jp
mov
xchg
mov
leave
add
enter
lahf
adc
mov
test
in
xor
nop
icebp
push
mov
and
shll
cwtl
popa
neg
outsl
stos
xlat
dec
push
xorl
stos
jo
fldcw
jmp
fstps
mov
and
adc
icebp
jecxz
dec
int
int3
push
jo
push
push
scas
sub
mov
push
jne
ja
scas
outsl
mov
cmc
pop
pop
jae
fistl
sub
cld
ret
inc
or
mov
orl
vdivsd
or
xchg
mov
popl
pop
sub
mov
xor
fstl
jnp
pop
ss
inc
push
outsl
jmp
adc
pop
imul
inc
les
shll
movq
mov
cld
lods
xchg
loopne
sbb
mov
repnz
stos
sub
push
repz
dec
cmpl
jo
fs
cld
jle
loop
sbb
flds
iret
lds
loopne
sub
or
fiadds
adc
aam
int3
pop
pop
add
lods
lcall
add
sub
mov
push
xlat
mov
dec
fwait
scas
add
jmp
xchg
inc
bound
pop
adc
adc
jne
pop
push
fcmovu
mov
hlt
imul
test
xchg
ss
inc
push
xchg
mov
mov
out
xchg
pushf
aas
mov
mov
mov
pop
xor
loope
mov
mov
and
add
push
dec
xchg
mov
aas
push
roll
push
repnz
cwtl
loope
add
mov
push
mov
lahf
fs
enter
or
fdivrs
int3
jb
push
jb
xchg
lds
sub
scas
cmpb
jge
andl
xchg
and
sbb
imul
xor
xchg
sub
or
mov
xlat
bound
push
iret
lret
push
mov
call
cmpsl
cmp
xchg
jmp
mov
std
scas
pop
nop
in
dec
jl
cmpsb
dec
mov
inc
sahf
jbe
adc
jmp
sub
jmp
pop
test
testl
hlt
scas
xchg
jae
fmul
imul
jge
cs
xlat
sahf
icebp
ss
pusha
lods
adc
shrl
hlt
mov
jecxz
test
jle
daa
xchg
std
or
insl
jle
push
adcb
int3
xchg
cmpsl
cmpsl
jg
stos
or
insl
add
testb
sub
lock
inc
mov
je
adc
jno
orb
rorl
xor
loope
lret
and
orl
int
inc
fwait
mov
dec
mov
add
aad
mov
leave
mull
aam
das
mov
movsl
loopne
hlt
and
lds
icebp
push
jmp
rcrl
cs
out
or
and
stos
lahf
icebp
jb
xchg
ds
and
out
mov
stos
cmp
push
mov
cld
js
fisubrs
sub
jne
jmp
add
mov
inc
insl
inc
pop
and
inc
xchg
inc
adc
push
clc
adc
cmp
es
lret
push
add
sub
movsb
jae
inc
mov
mov
and
and
pop
out
xchg
scas
in
or
fisubl
xchg
repz
cmp
imul
bound
xchg
jbe
or
xchg
dec
mov
int3
pop
repz
ffree
jl
int
mov
std
mov
lret
inc
lds
mov
pop
push
mov
iret
in
bound
add
out
leave
push
adc
xchg
pushf
sub
sti
cmp
xor
test
sub
pop
mov
dec
dec
mov
imul
mov
mov
xor
adc
in
leave
cld
test
dec
fsubp
ljmp
adc
stos
dec
insb
jb
std
push
xchg
mov
jmpw
loope
pop
xor
scas
push
int
das
stos
cmp
dec
sbb
mov
push
inc
cs
lods
pusha
push
push
inc
adc
pop
lahf
or
cmpsb
rorl
icebp
and
comiss
add
cmc
mov
adc
add
inc
jle
cmp
outsl
push
movsl
pop
fst
mov
iret
leave
and
lahf
aad
or
xchg
mov
xchg
mov
stc
fsubs
sbb
dec
push
shrl
or
testl
mov
or
or
shrl
test
test
mov
stc
push
imul
jg
jae
outsl
or
out
jne
enter
push
shlb
jmp
aam
je
push
cmp
adc
fwait
add
push
add
lcall
or
ret
fcoml
les
pop
fstps
es
jp
cs
mov
mov
mov
mov
lahf
mov
add
mov
orb
bound
pop
adc
add
cld
lcall
cmp
fucom
jg
sti
adc
es
inc
call
dec
popa
push
loop
add
lret
or
ljmp
add
dec
mov
adc
pop
pop
or
sub
fmull
in
cmp
and
mov
add
arpl
xorb
mov
pop
sahf
cmp
dec
jmp
cmpsl
dec
subb
lds
or
mov
sub
repz
icebp
cli
ret
pmaddwd
inc
pop
and
xchg
in
les
in
and
mov
cmp
mov
retw
outsl
and
mov
shll
es
ret
mov
je
shll
jg
dec
aam
add
repz
scas
xor
insl
fsub
or
ljmp
mov
inc
cli
rorl
inc
xchg
add
test
cmp
cwtl
sub
xchg
xchg
add
mov
push
push
ror
push
adc
into
dec
or
xchg
fst
cmpl
mov
inc
sbb
data16
into
pop
es
xor
sti
iret
pop
test
cmp
sbb
xor
or
lcall
mov
sub
jbe
stos
ret
enter
js
adc
stc
mov
mov
hlt
xorl
mov
and
cmpsl
sbb
jmp
mov
lret
xor
sub
mov
and
pop
add
sbb
pushf
mov
xor
jb
add
push
dec
cltd
cwtl
xchg
divb
cmp
cld
sub
cmp
int
in
mov
cli
dec
xor
cli
faddl
or
push
xchg
xor
mul
mov
xor
das
jns
push
loopne
and
lods
outsl
lea
mov
dec
movsb
sbbb
ja
push
cwtl
mov
pop
aad
add
push
xor
pop
orl
adcb
and
shl
into
cmp
fcoms
ss
and
pop
test
mov
hlt
inc
mov
loope
pop
add
mov
insb
push
inc
pop
hlt
ljmp
outsb
sub
out
jmp
cs
sbb
pop
fnstsw
stc
inc
sti
push
hlt
and
fcmovnu
rcrl
ret
js
lods
repnz
inc
pop
xchg
in
adc
add
rep
cli
mov
add
nop
add
xchg
int
and
lods
movsb
or
fstps
push
into
int
mov
repz
outsb
sbbb
push
pop
test
fsin
xor
or
xchg
out
jns
mov
jecxz
push
xchg
mov
shlb
mov
cld
push
outsl
push
pop
sbb
repnz
adc
xor
push
xor
cmpb
push
cmp
pushf
cmp
hlt
mov
xor
aaa
jp
jnp
sbb
das
mov
xor
iret
fistps
pop
shl
jp
cmp
pushf
mov
sbb
xor
and
cli
shrb
mov
loop
insl
sarl
xor
into
popf
fnstcw
push
xor
mov
sbb
mov
mov
arpl
jbe
pop
mov
or
mov
mov
jbe
mov
push
sbb
dec
xchg
cmp
je
lahf
cmp
xchg
pop
das
push
arpl
push
sub
pop
lods
dec
incl
stos
xor
jne
cmp
out
jns
stos
stos
adc
out
xor
or
stos
sbb
arpl
adc
scas
call
pop
sub
cmpsl
sub
ret
sbb
mov
xor
lods
and
aam
add
dec
jnp
sbb
xchg
out
add
pusha
lock
jecxz
ret
fmul
dec
pushf
insb
jp
xor
in
popf
xlat
mov
je
mov
cli
adc
sub
adc
daa
mov
into
add
xchg
stc
mov
cmp
sub
int
ja
xchg
fstpl
lcall
push
jmp
dec
lds
das
inc
sub
xchg
ret
test
xor
cld
mov
jecxz
outsl
add
push
fwait
push
and
std
stos
inc
inc
movsb
shll
lahf
popf
pop
inc
xchg
cwtl
pushl
or
adcb
cmp
fs
leave
pop
outsl
xchg
fcmove
push
rorl
mov
stc
int3
cmp
into
xor
inc
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
cmp
inc
inc
aam
adc
push
clc
adc
jecxz
xor
loopne
dec
pop
movsb
add
mov
xchg
pop
xchg
or
mov
push
and
in
ss
lahf
inc
xchg
int
xor
xor
subl
jl
aaa
mov
in
outsb
jl
iret
repnz
cli
dec
sbb
insb
adcl
jmp
jp
mov
lcall
orb
imul
sahf
ret
jno
or
push
inc
xor
push
cmp
push
les
popl
pop
mov
add
aaa
sbb
sbb
insb
movsb
fwait
sub
push
mov
inc
rorl
push
jg
push
jmp
in
push
iret
fildl
sub
xor
ja
daa
pop
add
les
sbb
dec
jecxz
pop
cmp
push
sbb
lret
or
popa
adc
adc
mov
getsec
adc
inc
sbb
or
outsb
mov
fsubrs
jl
mov
cmpsb
bound
popf
mov
in
nop
sbb
insl
dec
loopne
sarl
sub
inc
pusha
dec
jmp
mov
movl
inc
xor
mov
jne
pop
inc
mov
nop
inc
rclb
jecxz
dec
inc
mull
or
add
aaa
stc
mov
fwait
or
mov
sub
mov
dec
stos
lock
jne
sub
sub
out
push
or
cmp
lahf
test
mov
mov
orl
adc
nop
pusha
fcomps
cli
loope
mov
xorb
push
sub
cmc
loopne
rol
xor
adc
call
dec
je
or
sahf
jl
lar
sub
mov
push
jmp
jle
push
roll
dec
js
aas
adc
and
out
mov
xchg
sub
lcall
data16
bound
loop
pop
inc
mov
in
xchg
sbb
pop
jnp
ret
pop
fdiv
dec
dec
popa
pop
out
lods
movsb
xchg
bound
shrl
ds
jno
add
aas
xorb
mov
jnp
xor
mov
sbb
pop
imull
loop
lret
popa
adc
sub
xor
setg
dec
cwtl
sub
ret
sub
into
pop
push
mov
push
xchg
mov
mov
xor
jo
and
mov
sub
imul
dec
push
pop
int
cmp
xor
test
aad
fisttpl
stos
or
xor
repz
loop
mov
aas
xchg
cmp
cmp
mov
mov
cli
cltd
or
xor
fdivrs
dec
fld
mov
mov
push
cmc
movsb
and
cmp
push
ret
and
sbb
imul
out
sti
sar
jg
and
pop
and
and
adc
scas
insl
mov
sub
lret
mov
mov
add
in
cmp
pop
sbbl
in
shrb
aad
mov
or
lods
mov
sti
push
test
mov
icebp
sti
sub
movsl
pop
dec
daa
test
sub
shr
cmp
inc
push
jae
je
add
xchg
dec
push
and
push
push
fcmovnb
in
stos
in
cmc
cmc
inc
push
jo
dec
out
sbb
cmp
pusha
frstor
sub
ljmp
and
or
aaa
jbe
inc
adc
imul
leave
mov
iret
xorl
aad
mov
xchg
out
mov
xor
push
incb
jge
fyl2xp1
xor
add
incl
sbb
nop
popa
jle
cmp
int3
int
push
ss
fidivs
out
sub
daa
push
ret
iret
or
mov
and
pushf
pop
shl
inc
add
lret
push
mov
aam
nop
sub
in
cmpb
sbb
addr16
ret
add
inc
fs
jl
lahf
adc
popa
lahf
dec
xchg
clc
jle
imul
mov
cmp
lock
mov
fisttps
adc
idivl
sarb
xchg
pop
pop
xor
inc
ja
ja
js
out
jns
mov
dec
or
inc
add
aad
std
insl
cld
mov
popa
add
dec
ds
push
pushf
jl
subl
xchg
lret
fsts
or
cmp
fnstenv
sbb
push
push
jnp
dec
mov
sub
lods
and
xchg
in
adc
rcll
mov
ret
xor
scas
mov
insb
into
fsubrl
cmp
and
jno
mov
imul
xchg
insl
lcall
push
mov
cli
xchg
lods
push
and
jne
push
xchg
dec
push
jmp
leave
enter
push
jmp
dec
in
cmpb
mov
loope
xor
push
outsl
push
movsl
inc
rcrl
sub
cmpsl
int
mov
bound
bound
or
repnz
add
adc
aas
jecxz
dec
rcl
ret
ss
add
out
dec
in
push
cmpsb
or
jns
add
ret
inc
xchg
outsl
cmc
cwtl
pop
mov
icebp
jnp
imul
jecxz
inc
push
xchg
ja
aas
nop
and
jns
out
int3
dec
jbe
into
shrb
push
scas
icebp
lahf
bound
xchg
or
mov
or
loopne
rcrb
push
leave
push
lahf
jle
xchg
addl
fistps
mov
xchg
testb
xor
mov
lret
fbstp
push
lock
sub
enter
add
add
add
sti
push
in
lods
dec
cmpsl
mov
sub
aaa
rcrl
xchg
lcall
fidivl
mov
mov
sub
sbb
sti
or
or
aam
lcall
add
adc
cmp
stos
addr16
mov
out
sbbl
adc
loope
std
fisubrs
add
jo
inc
cmp
adc
aad
jmp
shll
bound
or
lods
enter
add
or
mov
push
add
lods
jmp
nop
cmp
push
add
lret
dec
inc
adc
clc
adc
loop
rolb
popa
mov
mov
mov
shlb
dec
sti
in
inc
push
inc
cmpl
push
lods
add
popf
hlt
sub
pop
jno
out
aaa
jne
xchg
mov
jne
cld
mov
jo
adc
add
jnp
mov
or
shll
dec
xchg
outsb
inc
xor
fsubs
pop
rorl
jmp
inc
call
sbb
jb
mov
cmc
or
andb
ss
mul
ret
out
stos
adc
sub
adc
sti
push
xchg
es
jecxz,pt
cmp
pop
loopne
adc
loop
ds
cmp
in
pop
pop
cmp
xchg
cmpsb
mov
test
push
or
cmpsl
jmp
jecxz
cmpsl
outsb
push
ret
aam
mov
fdivrs
dec
je
sti
test
out
das
cmpsl
insb
jne
pop
mov
add
adc
push
jg
dec
dec
cmp
add
lret
or
mov
je
ds
adc
insl
cmpsl
inc
sbb
pop
ss
fwait
ret
fisttpll
ja
push
std
mov
sbb
mov
or
shll
dec
xchg
into
call
cltd
jnp
in
out
shll
jecxz
das
jb
and
pop
push
push
sbb
adc
sbb
das
lahf
clc
xchg
lea
xchg
jb
in
mov
scas
add
pop
mov
push
fistl
jno
mov
add
js
pop
pop
popf
mov
pushf
mov
std
sub
fwait
bound
add
icebp
dec
enter
movsl
imull
mov
int3
adc
push
lahf
dec
fsubrl
mov
cwtl
cwtl
jl
outsl
xor
loop
in
iret
int3
add
jg
cs
loop
insb
aad
xchg
cmp
mov
fcompl
jmp
push
loop
mov
dec
xor
inc
test
push
cmpb
jo
outsl
shll
dec
mov
fdivl
add
ret
ja
mov
pcmpgtw
ss
sbb
mov
add
cs
addl
in
cmp
push
shrl
cmp
mov
cmp
add
les
insl
pop
xor
mov
lea
pop
ljmp
cmpb
mov
lods
mov
aam
xlat
clc
loope
mov
add
and
jae
inc
sub
push
pop
roll
out
dec
push
shrb
adc
jno
bound
scas
add
call
inc
int
addr16
cld
ficompl
mov
int3
sbb
das
stos
out
jmp
mov
mov
jns
fistpl
stos
sub
test
adc
lea
mov
dec
sub
sub
xor
imul
and
sbb
push
bound
aad
cld
insl
mov
in
lret
cmpsl
cld
pop
data16
shlb
xchg
int
jle
fstpl
mov
jle
lods
lock
push
sub
mov
jnp
mov
push
loope
fistpll
ja
sub
cltd
cli
adc
push
xor
jl
mov
mov
jmp
cmp
mov
fldcw
add
push
mov
loop
pusha
inc
xchg
xor
cmp
out
inc
and
cmpsb
lret
mov
fidivl
dec
lods
stc
inc
xchg
sbb
test
push
mov
js
lock
stos
jecxz
dec
mov
pushf
add
bnd
mov
xor
aaa
addr16
ret
push
fwait
aam
push
xor
pop
lods
sub
stc
mov
mov
lods
stc
mov
sbb
xlat
jb
or
jecxz
push
repz
pop
mov
popa
mov
adc
mov
push
mov
aaa
lret
pop
cmpb
ljmp
mov
mov
faddl
sbb
loopne
mov
adc
imul
inc
outsl
jb
aam
jno
xor
dec
lods
jno
and
sub
adcl
cltd
je
dec
test
lods
jnp
push
insb
cmp
jb
movsb
pop
cmp
pop
movsb
and
mov
mov
push
loop
push
jb
push
push
cld
mov
es
inc
push
std
cltd
out
pop
cld
dec
repz
dec
leave
daa
pop
and
push
das
lret
int3
insb
jb
and
mov
push
ss
lds
lahf
mov
and
inc
mov
cs
xor
and
dec
std
adc
aam
les
and
mov
mov
mov
xchg
inc
stc
cmp
pop
shlb
sbb
push
push
push
jecxz
cmp
jp
addr16
inc
sbb
inc
sub
in
adcl
sbbb
adc
push
mov
test
ret
xchg
mov
out
pop
mov
cmp
dec
xorb
dec
ja
mov
stos
test
sar
cld
pop
jg
jns
shll
iret
xchg
mov
dec
jnp
xor
fnsave
fwait
lahf
xchg
loope
mov
int3
rcr
nop
fnstsw
and
mov
imul
sub
repnz
add
iret
shr
xor
scas
pushf
cltd
adc
iret
xchg
in
add
psubsb
mov
dec
fistpll
shlb
inc
cmpsb
ja
cmc
cli
and
test
jne
push
les
cmpsb
mov
lret
cmc
sbb
outsl
mov
inc
inc
mov
push
lds
xor
aad
aaa
das
pop
xchg
xchg
mov
lret
lea
loopne
cmp
xlat
add
xor
xor
mov
sbb
pop
mov
inc
mov
in
aad
stos
jp
ret
mov
jae
push
and
mov
fsts
xchg
cmp
shrl
je
mov
pop
cmp
jmp
xor
jb
rolb
addr16
arpl
aam
pop
inc
mov
dec
outsb
mov
sbb
xor
jno
jmp
das
mov
mov
fstps
filds
jnp
pop
mov
cli
ret
fldl
in
insb
cmp
adc
das
mov
movb
sub
enter
imul
fs
mov
xchg
cld
loopne
shlb
rorb
adc
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
outsb
xor
push
clc
adc
add
push
or
fwait
and
mov
mov
mov
and
sbb
mov
mov
push
adc
sbb
fdivrs
test
inc
and
cmp
addr16
int
cmc
cs
adc
lock
xchg
into
cmpsl
mov
fcmove
int
scas
mov
cmpsb
xchg
ss
jmp
push
test
fsts
jle
subb
push
jecxz
rcrb
mov
jno
dec
jge
mov
cmp
adc
popa
adc
cmp
test
mov
lds
jnp
add
in
sbb
xor
mov
jle
ficomps
inc
xor
push
shrb
in
sub
or
rol
scas
sahf
fildl
mov
cmp
cmp
mov
xor
jns
shlb
or
adc
jecxz
sub
inc
ret
xor
mov
std
mov
shlb
int3
or
movsl
mov
or
pop
mov
mov
jl
jbe
hlt
lahf
ret
dec
insb
jp
sbb
into
add
sub
xor
aam
iret
in
push
xor
inc
inc
test
lea
mov
lods
aas
iret
cmp
mov
in
dec
jae
inc
cmp
js
push
adc
mov
daa
push
mov
lret
and
mov
popl
aam
cs
or
int3
push
and
mov
fdivs
ficompl
fidivl
stc
jecxz
pop
jg
fisttpll
sbb
cld
push
outsl
inc
xchg
lcall
rorb
out
mov
xor
and
push
mov
mov
mov
mov
adc
cmc
adc
mov
leave
add
mov
hlt
rclb
inc
jl
lahf
push
daa
inc
push
sub
imul
jb
dec
inc
lods
mov
cmpl
arpl
pop
test
sub
fmuls
cmpl
in
mov
pop
sbb
aad
hlt
mov
es
mov
shlb
dec
aaa
inc
jae
mov
cmp
inc
sbb
and
rorb
insb
filds
fcoms
repz
push
xchg
rorl
cmpsb
xlat
push
jmp
ss
jl
sub
aad
ljmp
aaa
xor
lahf
xor
xchg
sahf
push
lret
pop
dec
fisttpl
sahf
or
mov
lods
insl
cmp
test
cmpsl
inc
ret
cmp
pushf
jecxz
add
and
xchg
cwtl
mov
test
hlt
mov
push
or
outsb
xor
add
test
cmc
scas
test
int3
cmp
ss
lret
fsubrl
sarb
push
xchg
dec
stc
xchg
enter
mov
je
cld
insl
xorl
movsl
sbb
mov
das
sub
in
scas
fistps
pop
ret
and
and
ljmp
adc
ret
clc
cltd
in
mov
outsb
pop
cwtl
fwait
loope
mov
ret
sub
xchg
sbb
xchg
orb
jmp
inc
dec
lcall
lods
xor
and
aas
pushl
add
mov
lret
add
sar
outsb
test
mov
cmpsl
idivl
insb
pop
in
loopne
inc
orl
dec
aas
lock
mov
loop
fldt
or
ficomps
outsl
rol
sub
test
inc
cs
outsl
insl
jg
popa
xor
xchg
jmp
and
test
mov
mov
jle
jle
and
mov
jb
mov
push
leave
or
ljmp
stos
les
and
pop
and
inc
paddsb
pop
inc
dec
or
fnsave
xchg
inc
or
mov
pop
aam
mov
cli
sub
cwtl
mov
push
and
fs
imul
cli
fmuls
pop
push
es
lea
push
pop
roll
out
ss
add
shrl
iret
jle
adc
mov
shlb
icebp
xor
push
push
decl
add
cwtl
movsb
sub
je
jp
xchg
mov
imul
add
or
push
adc
sbb
inc
lretw
stos
or
mov
insl
not
xchg
mov
xor
jns
test
mov
mov
inc
xchg
pop
or
shlb
scas
lret
push
inc
pushl
push
insl
in
xor
cltd
insl
imul
lcall
outsb
cmp
fwait
into
cmp
cmc
ret
bound
lods
jl
out
loope
mov
xchg
shlb
call
sti
enter
test
addl
cwtl
imull
daa
mov
mov
popa
stc
sbb
mov
cmp
mov
dec
out
mov
and
mov
movsb
cli
dec
inc
cmp
xor
sti
jno
cs
lret
adcl
arpl
dec
pushf
adc
fsts
push
outsl
xchg
out
fcmovu
inc
in
mov
adc
cmpsl
sbb
repz
push
pusha
flds
or
inc
jb
sarl
cmp
icebp
jmp
and
pop
and
dec
sbbb
cmp
jmp
mov
mov
lret
jp
mov
push
or
icebp
cld
push
push
ja
or
mov
pop
xor
fmuls
mov
fldcw
das
enter
sti
loope,pn
iret
push
ret
outsb
cmp
movsb
sbb
and
mov
insl
addr16
mov
mov
mov
leave
lahf
mov
cmp
inc
lods
or
sbb
in
xlat
mov
popf
stc
out
popf
lock
mov
mov
scas
stos
push
gs
clc
adc
dec
notb
aaa
repz
jl
test
xor
push
das
mov
clc
xor
loopne
out
xor
outsl
pushf
lea
mov
out
inc
lret
fistpll
cwtl
cltd
mov
xorb
stos
imul
mov
xchg
mov
mov
xor
lcall
and
scas
mov
scas
sub
xchg
mov
daa
pop
push
nop
sub
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
ret
dec
ret
cli
adc
clc
adc
ret
push
xor
mov
sbb
in
mov
loopne
sbb
inc
insb
mov
xorl
push
lods
stos
dec
ja
lds
rolb
std
iret
sbb
xchg
fstpt
adc
fdivrs
sub
jl
sbb
aas
js
adc
cli
rorl
bound
cmp
lods
pop
add
aad
add
mov
inc
mov
jo
xor
jmp
mov
cmpsb
das
jp
jne
lret
popa
fidivs
mov
adc
pusha
ficompl
les
test
testl
aam
in
ds
sti
call
xchg
fimull
push
mov
ljmp
sbb
ljmp
cs
fcmovnu
sbb
or
xor
inc
dec
popa
cwtl
test
or
flds
xchg
sbb
incb
stos
iret
inc
fcoml
enter
test
mov
addr16
pop
inc
data16
enter
lods
lods
mov
maxps
xor
cmpl
pop
scas
xchg
icebp
push
lret
pop
sbb
fisubrl
ja
mov
mov
xchg
shrb
pop
cld
mov
repz
negl
stos
pop
pop
jns
or
loop
dec
js
test
shrb
sbb
insl
jbe
or
xchg
movb
vmaskmovpd
into
ss
dec
pop
int3
xchg
sahf
inc
pop
inc
stos
push
xchg
inc
and
testb
test
nop
popa
outsl
mov
mov
ret
xchg
inc
fistps
xchg
jmp
popa
cmpb
push
sbb
int
fs
arpl
xor
push
jbe
sub
cmp
mov
lcall
les
lahf
mov
push
call
aad
insb
outsb
and
lods
popa
jne
inc
lcall
pushf
es
mov
out
aas
cmp
loop
cmpsb
lahf
incl
pop
stos
enter
or
pop
jge
and
lods
mov
cmpsb
fcoml
xor
stos
cmp
lret
jbe
das
aam
push
insl
pusha
insb
cmp
fiadds
mov
mov
ret
push
push
out
rcl
mov
adcb
fldcw
inc
adc
pop
dec
dec
mov
cmp
loop
sub
addl
dec
push
add
rolb
or
mov
add
mov
and
mov
or
adc
jnp
bnd
mov
inc
cmpsb
lods
xor
mov
mov
pushf
sub
and
icebp
imul
push
pop
add
mov
icebp
rcrl
push
inc
mov
fs
mov
pop
adc
je
getsec
das
xor
adc
inc
jge
adc
adc
outsb
shll
inc
lods
leave
test
mov
mov
lret
arpl
insl
insb
sahf
jle
imul
ret
in
cmp
inc
fsubrs
popf
pop
xor
lods
jp
lds
inc
shrl
ss
mov
mov
ds
xchg
xor
clc
or
fwait
ljmp
jmp
int3
cmp
sub
mov
inc
cmp
cmpsb
lret
sub
daa
cmp
mov
pop
adc
push
fisubrs
mov
pop
dec
repnz
std
call
cld
sahf
bound
dec
cmpsb
inc
sbb
cmpb
scas
jns
push
mov
xor
lods
popa
jecxz
lods
xchg
push
jb
push
add
or
cmp
gs
xor
aad
sub
xchg
add
jge
out
inc
xor
fistl
in
dec
pop
pop
mov
aad
aaa
xchg
jae
inc
das
xchg
sbb
jo
push
sbb
mov
inc
jp
test
out
movzbl
clc
in
fistpll
ret
mov
addl
shrb
jne
add
or
int3
sbb
fs
pop
push
clc
mov
jmp
cmp
mov
out
mov
pusha
lahf
xor
test
sbb
mov
fistl
repnz
cmp
mov
es
dec
sbbb
pop
in
test
mov
push
mov
jp
add
pop
jl
inc
push
fistps
sub
inc
fisttpl
dec
mov
loopne
lcall
enter
and
es
adc
scas
push
xlat
ret
rclb
fsubp
popf
test
mov
dec
lret
mov
and
jno
mov
shrb
and
add
lcall
outsb
mov
lret
pop
aaa
ficoms
xchg
popa
lret
dec
cmp
xchg
nopl
cmp
add
add
sub
push
mov
js
cltd
mov
xor
mov
mov
push
add
sub
gs
out
dec
mov
fimull
sub
ret
cld
nop
dec
pop
sti
sbb
push
inc
mov
dec
jmp
movsl
movsb
shll
aas
ret
aad
stos
ljmp
mov
or
jno
xlat
push
stc
inc
rol
dec
negl
dec
orb
xchg
scas
jae
test
sbb
jo
mov
into
sub
jne
fisubs
mov
je
sub
mov
popl
inc
scas
in
add
cs
push
in
setns
or
lods
mov
push
insl
push
call
xchg
aaa
pushf
test
das
sbb
lret
fmul
jmp
xchg
lods
mov
lock
pushf
and
sub
loope
out
jo
dec
in
incl
or
mov
out
jle
fwait
adc
insb
sbb
lahf
dec
shl
xor
pop
sbb
push
loopne
pop
mov
out
aad
into
push
insl
popa
fists
out
or
xor
out
pop
subl
and
fcmovnb
pop
insl
clc
into
aam
adc
adc
inc
adc
repnz
out
add
jbe
sbb
adc
in
cltd
jae
sbb
lods
push
mov
add
aad
xor
fwait
nop
inc
nopl
mov
sub
test
adc
mov
ss
mov
pop
jae
into
je
jmp
cmp
push
divl
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
pop
aad
adc
clc
adc
orl
movsb
push
testl
dec
test
or
mov
and
push
jmp
shlb
movsb
cmpsb
ds
lods
fwait
and
jne
call
push
ss
pop
sub
jo
mov
xchg
and
subl
xor
xchg
lahf
or
adc
ret
cmp
rcrl
mov
xchg
mov
pop
test
ret
hlt
sub
test
scas
fnstcw
pop
inc
and
data16
ja
cmpsb
push
andl
and
add
inc
pop
push
cli
mov
clc
or
push
add
mov
clc
iret
xchg
jl
hlt
lea
test
mov
cwtl
pop
jns
in
out
cmp
leave
ja
rep
xlat
popf
xor
mov
aas
push
xor
dec
sbb
mov
scas
mov
push
inc
add
loopne
push
fdivl
cmc
xchg
sarb
mov
and
lea
arpl
mov
in
je
dec
mov
mov
in
or
in
std
cmp
rorl
imull
jp
push
add
icebp
mov
dec
mov
sub
mov
mov
filds
adc
add
or
mov
push
inc
stc
out
data16
leave
fwait
sub
xchg
pop
xor
lret
addr16
lods
push
cmc
inc
dec
test
int3
repnz
jb
loop
push
adc
inc
fists
gs
cwtl
jp
pop
outsl
mov
scas
mov
add
test
icebp
mov
and
xor
mov
rorl
aas
fmuls
sub
aaa
popl
mov
ljmp
fs
enter
sub
aas
imul
push
sub
es
push
test
sbb
clc
fbstp
pop
in
leave
xchg
scas
mov
cli
in
lret
push
inc
xchg
jnp
xchg
push
add
push
push
decb
xor
lds
test
divl
popa
cmp
mov
fsubrs
mov
insb
add
push
cld
jp
je
cmp
jecxz
cs
mov
orl
pop
test
jp
cs
jnp
jnp
xchg
xchg
jmp
inc
popf
bound
sub
inc
outsl
cmp
push
or
sub
push
out
outsl
testl
test
xor
jbe
cmp
jo
in
fldenv
ljmp
aam
adc
or
inc
or
dec
and
push
mov
cmp
stc
sbb
mov
and
xor
shll
repz
leave
insl
test
cmp
ret
add
and
sbb
push
das
mov
inc
jg
jns
inc
cmpsl
mov
ret
scas
test
jp
and
jg
mov
lock
andb
stc
insl
mov
sbb
sbb
cwtl
aad
and
call
cmpl
xchg
xor
fstp
pop
icebp
decb
insb
clc
push
into
push
rclb
mov
sub
add
and
pop
addr16
outsb
lahf
into
orl
dec
mov
inc
mov
jmp
std
andl
adc
imul
cwtl
scas
pop
or
lahf
test
mov
mov
cwtl
lahf
mov
pop
dec
adcb
dec
cmc
mov
add
fisubl
sbb
xor
loope
dec
jl
dec
mov
inc
out
push
jmp
divb
xchg
jb
mov
stos
inc
outsl
dec
pop
pop
je
push
mov
adc
xorb
pcmpgtw
insb
adc
sbbb
jnp
mov
sahf
fldenv
mov
push
shrl
jl
stos
mov
jbe
cltd
xchg
and
repz
sbb
out
ja
ret
add
push
mov
addb
movsb
pop
icebp
js
mov
in
add
dec
dec
movsb
mov
add
mov
clc
cmp
xchg
xor
in
push
inc
je
in
ljmp
loope
insl
jnp
lods
mov
mov
mov
cmc
mov
xlat
ljmp
cwtl
mov
das
pop
call
jae
inc
xchg
cmp
aaa
test
adcl
dec
fimuls
xor
sahf
pop
loope
cmpsb
lahf
push
cli
dec
dec
jmp
icebp
loopne
cli
jp
cmp
or
adc
cld
sbb
rcll
jno
xchg
lock
sbb
hlt
adc
or
sub
cmpsl
mov
mov
bound
fstpl
add
push
js
sbb
adc
mov
loopne
xchg
sbb
loopne
dec
lret
sbb
push
xlat
xlat
push
cmc
rcr
cwtl
fs
mov
scas
mov
jecxz
call
ret
pushf
mov
repnz
sub
loope
lds
pop
inc
xlat
xchg
hlt
mov
orb
insl
jbe
fcompp
xchg
cmp
xchg
sbb
dec
lods
mov
pop
mov
lock
sti
jmp
mov
stc
adc
inc
loope
pushf
stos
icebp
jns
pushf
out
sub
cwtl
int
in
sub
insl
mov
xchg
cmpsb
ds
pop
arpl
sbb
xor
and
rolb
add
mov
push
jo
sbbb
in
ret
sub
push
bound
subl
test
jg
sub
xchg
xchg
mov
out
adc
mov
jo
std
sub
arpl
dec
mov
sbb
dec
std
es
push
dec
fisttpl
pop
aas
rorb
mov
pusha
pop
mov
and
mov
dec
in
lds
and
int
or
arpl
cmp
xorb
cmc
faddl
jle
mov
fiadds
nop
aam
data16
test
sub
cmp
lods
lods
pop
xor
cmp
pop
lods
jb,pn
xor
aas
shrb
cmpsl
testb
call
insl
fcmovnb
add
insl
mov
xchg
sub
lahf
rol
jo
das
jbe
lods
ret
ret
call
shll
popf
mov
xchg
stos
and
jl
ret
cwtl
xor
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
les
push
clc
adc
sub
daa
push
xchg
pop
and
dec
inc
cmp
rclb
cmpl
lret
inc
mov
addr16
cmpsl
jae
push
dec
imulb
fmull
push
cmp
dec
inc
outsl
imul
outsb
xor
out
mov
xbegin
add
jmp
mov
mov
ja
lret
mov
cmp
dec
ljmp
push
scas
xor
push
outsb
addr16
stc
out
and
daa
mov
je
test
in
loop
popa
scas
dec
cltd
add
mov
into
and
pop
xlat
lock
dec
movsb
mov
sub
das
adc
pop
inc
stos
shll
fidivl
mov
xchg
xchg
fwait
adc
fdivr
lds
mov
xlat
popa
pop
push
add
or
cmpsb
xchg
push
cmp
push
inc
lock
cs
inc
insl
fwait
xlat
pushf
jecxz
call
mov
inc
xor
jmp
aam
and
fistps
cmpsb
mov
lock
mov
cli
mov
lds
mov
pop
jmp
sbb
sub
pop
pop
lcall
fcmove
xchg
xchg
cltd
add
es
xchg
dec
jecxz
mov
push
xor
std
cld
add
mov
je
daa
sti
mov
adc
push
into
inc
fldenv
das
dec
push
je
lds
cld
cwtl
daa
into
lahf
cmp
mov
and
sub
xor
pusha
pusha
sahf
sbb
mov
lea
mov
pop
inc
pop
int3
xchg
inc
sub
jo
imul
jl
mov
jns
xchg
cs
adc
fwait
inc
mov
pop
jl
in
inc
lahf
imul
lahf
popf
cmpsl
inc
cmpsl
push
mov
xchg
add
shrb
lods
dec
movsb
in
jmp
in
and
std
sub
stos
adc
inc
mov
in
clc
inc
cmp
fdivr
jge
movsl
lea
cli
sti
jnp
outsl
jne
or
dec
in
sub
stos
push
fwait
pop
dec
movsb
mov
pop
test
adc
lock
xchg
cmc
mov
xor
js
mov
daa
push
jle
or
js
mov
aam
pop
out
mov
pop
test
pop
gs
push
cltd
inc
and
pop
adc
pop
dec
sub
daa
pop
jb
pop
and
pop
stos
add
sti
pop
pushf
push
jnp
xchg
decl
test
call
sub
jns
pop
push
mov
mov
cltd
and
test
sub
jmp
test
or
idivl
cltd
lret
ret
push
in
cli
dec
gs
dec
add
stc
into
test
iret
idivb
shll
divb
mov
mov
stos
mov
movnti
jae
rsm
xchg
dec
ror
pop
ja
push
arpl
ret
fistps
movsb
pusha
pop
adc
lahf
fiaddl
add
ret
imul
outsl
lods
lret
sbb
lahf
dec
mov
cmp
je
push
fldt
aaa
inc
jnp
dec
iret
mov
push
std
lock
xlat
ljmp
inc
dec
add
insb
pushf
ror
mov
loop
mov
mov
inc
pop
mov
cli
mov
mov
xchg
push
lret
xchg
mov
mov
jmp
outsl
cmp
adc
insl
aas
test
xchg
mov
pop
adc
into
xchg
ficomps
idivl
testb
aas
stos
fcmovnbe
lcall
das
scas
add
cmpl
sub
mov
mov
lret
and
xorb
cmp
push
xchg
daa
jg
push
mov
push
dec
daa
jbe
jbe
and
inc
stc
jnp
gs
jle
out
loop
iret
xchg
cmp
dec
and
pop
inc
sbb
add
jmp
dec
fsubrl
outsb
aad
ds
das
push
xchg
sti
test
add
scas
jno
gs
int
imul
imul
dec
cmp
enter
or
pop
xchg
in
dec
andl
fldl2t
push
int
mov
sbb
stos
aas
into
lret
decb
sbb
add
xchg
insl
fwait
sbb
call
frstor
xchg
add
jae
jo
loopne
jge
inc
std
out
xchg
test
adc
insl
mov
adcl
popl
cmp
or
stos
mov
cmpsl
sahf
jnp
scas
mov
test
jg
mov
sbb
lret
addr16
test
hlt
or
mov
push
ljmp
mov
insb
jecxz
das
fs
pop
inc
scas
inc
push
xor
sub
adc
adc
cmp
jp
stc
mov
add
arpl
stos
adc
movsb
lret
mov
cs
inc
out
or
mov
pcmpeqb
push
mov
shlb
mov
ret
daa
movsb
push
out
sbb
mov
and
push
jle
mov
xor
in
repz
fadds
lret
jmp
xor
add
cmp
jecxz
push
lods
in
inc
shr
xchg
add
roll
rorl
inc
or
inc
jbe
idivl
cmc
lea
jo
mov
ret
push
imul
mov
inc
mov
in
imul
scas
ds
mov
adc
mov
idivb
mov
mov
into
cmpsl
imulb
mov
jmp
sbb
xchg
cmc
push
xchg
adc
add
xlat
call
in
shll
pop
lcallw
movsl
dec
fs
push
sbbb
divl
imul
clc
dec
aam
aas
popf
notb
js
sahf
stc
pop
jmp
ret
psubb
add
js
lods
or
or
inc
fwait
mov
lock
push
add
or
or
js
stos
shlb
cli
push
jmp
pop
outsl
sbb
ret
mov
mov
lock
rcll
scas
jmp
or
and
in
sti
jg
test
nop
xchg
in
jmp
mov
cld
sarl
mov
pop
add
push
std
push
cwtl
mov
popl
mov
mov
push
sbbl
push
dec
pushf
lret
aam
outsl
les
mov
push
mov
adc
shr
lret
xor
inc
add
mov
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
fildll
jecxz
adc
clc
adc
movsl
in
dec
push
add
adc
dec
sub
jo
lods
sub
out
push
nop
test
push
lock
xchg
fwait
pushf
frstor
or
test
imul
xchg
lretw
out
cmpsb
filds
loope
popf
inc
and
js
lock
add
jl
movsb
pop
pop
ret
add
xchg
jp
fwait
cmpsl
fdivrp
pop
ds
mov
jmp
mov
gs
add
inc
mov
xor
adc
jae
or
repz
inc
cmp
and
jp
in
repz
dec
rolb
push
xchg
jo
aad
jge
pop
push
inc
mov
ret
lock
sbb
lret
es
inc
cmpsb
icebp
mov
es
hlt
sub
negl
movsb
sub
sbb
daa
je
adc
ja
leave
xor
test
popf
mov
jecxz
xchg
adc
push
test
mov
in
pop
movb
jb
imul
add
jae
outsb
xor
mov
mov
jbe
fwait
ret
lods
mov
int
fists
mov
shll
add
in
andnps
mov
cltd
sub
lods
add
loop
sub
mov
test
lret
add
jns
outsb
in
pop
roll
hlt
sarb
xchg
and
sbb
xor
sub
push
mov
sbb
push
lock
mov
mov
mov
inc
jl
imul
addr16
ffree
lds
pop
roll
inc
pop
pop
and
jge
push
push
cmp
lret
jl
repz
into
lahf
push
jno
jb
xchg
stc
rorl
inc
cli
xchg
push
xor
jno
pop
mov
mov
sub
mov
scas
jnp
dec
mov
cmc
outsl
aam
xchg
repz
mov
hlt
ret
cmpsb
xchg
es
or
xadd
push
jge
pop
cs
fwait
jnp
inc
jno
test
icebp
push
mov
js
mov
mov
jb
imul
sbb
lcall
cltd
lahf
scas
mov
push
cmp
mov
arpl
mov
mov
inc
stos
inc
orb
adc
inc
and
xchg
push
pop
outsb
cmp
int
dec
pop
push
jns
jp
je
jnp
adc
push
pop
icebp
ljmp
fcmovnbe
in
or
sbb
ds
sbb
insl
pop
dec
ds
jg
pushf
jns
add
jo
mov
aaa
movsl
data16
mov
sub
cmp
idiv
int
mov
addb
push
xchg
nop
pop
pop
ja
inc
dec
xor
decb
push
cmc
enter
outsb
mov
pop
test
lret
mov
jo
cmpb
jns
mov
mov
xor
shl
int
xor
test
pop
xor
pop
sbb
inc
shl
aas
lahf
pop
and
mov
or
adc
rcl
xchg
sub
push
push
bnd
out
push
mov
push
int3
push
fsubrl
js
adc
push
jecxz
insb
xchg
or
mov
adc
enter
es
jmp
jp
andl
fdivrs
incl
mov
js
inc
jo
add
xchg
test
inc
mov
aam
in
xor
push
jb
lock
lret
cmp
pop
sub
movsl
cmp
addb
mov
jecxz
rorb
cwtl
mov
sub
shll
inc
sbb
int3
inc
mov
sub
sbb
sarb
popf
mov
mov
jb
bound
lods
inc
fs
fidivl
out
roll
dec
pop
std
test
loopne
ljmp
ljmp
jae
jns
rcll
inc
pusha
cmp
mov
imul
mov
out
js
outsb
mov
inc
cmp
or
push
pop
sub
inc
sbb
inc
leave
das
cld
iret
xor
out
out
scas
popa
orl
movsb
test
sbb
rorb
jg
xchg
add
out
mov
mov
cmp
xchg
jb
sbbb
stos
or
popf
xlat
mov
ljmp
xchg
push
jnp
mov
pop
sbb
lods
stc
idiv
rcll
loopne
mov
lock
lea
add
sbb
mov
faddl
roll
cmpsb
addr16
popa
in
sbb
sub
or
movsl
mov
dec
and
pop
stos
sbb
mov
jae
jmp
mov
movsb
mov
test
cmp
es
sti
addb
mov
sbb
sbb
inc
popf
ljmp
pop
add
aas
adc
fcoml
pushf
sarl
or
add
in
xor
xchg
cmp
ret
loop
outsb
and
lret
jl
pushf
pusha
enter
je
cmpsl
lods
repz
sub
inc
mov
lods
arpl
sub
int3
adc
sub
out
inc
mov
sbb
roll
pop
btr
iret
in
subb
jg
clc
mov
scas
mov
mov
das
jmp
cmpsl
loopne
stos
cmc
js
stc
cs
inc
gs
lret
pop
and
test
jl
ss
movb
mov
mov
aad
dec
add
cwtl
xchg
jnp
jl
jbe
cwtl
in
pushf
xchg
and
sbb
inc
scas
add
sub
adc
mov
dec
ret
mov
adc
and
and
mov
sti
lret
or
cli
out
xchg
les
xchg
pop
imul
pop
pop
jl
add
adc
movl
pushf
mov
xchg
outsb
xor
loope
sbb
mov
dec
push
and
data16
mov
pop
es
test
aad
pop
cli
jp
cmpsb
mov
neg
push
adc
pusha
push
imul
cmc
scas
mov
gs
fists
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
cmp
inc
xchg
aad
adc
clc
adc
fisttpl
push
cld
pop
addr16
cmp
mov
lcall
sub
outsb
mov
popa
stos
sub
adcb
scas
pop
std
cmpl
dec
cmp
lcall
sbb
mov
cmpsb
push
fs
xchg
cmpsl
mov
sbb
cmp
aad
mov
ljmp
sub
adc
jae
cmp
rorl
or
arpl
fcmovbe
lods
mov
lea
cmc
icebp
cmp
in
in
aam
stos
pop
loopne
mov
rol
lock
mov
dec
xchg
cwtl
mov
hlt
cmpb
xor
jno
pop
movsl
push
pop
ret
daa
orb
sbb
maxps
adc
jo
jno
jp
pushf
mov
bound
mov
sbb
adc
arpl
lcall
xor
js
sub
ljmp
mov
add
insb
sub
icebp
addr16
test
or
arpl
test
dec
xchg
mov
bound
and
das
pop
pop
xchg
push
mov
das
addl
loopne
lcall
insl
adc
decb
and
sbb
xor
lahf
aad
pushf
jb
pusha
out
pop
sbbb
iret
mov
or
adc
and
dec
cmp
pushl
into
jbe
add
dec
ret
pushf
sbb
cmp
xor
cltd
ljmp
sbb
push
mov
mov
imul
xchg
xchg
bound
test
loop
sti
push
mov
bound
sbb
pop
popf
call
lret
xchg
and
call
xorb
movsl
rcr
mov
dec
lret
movsb
iret
loop
pop
imul
inc
sbb
test
aad
ret
mov
leave
test
rorb
push
xchg
xchg
leave
bound
xor
lahf
push
push
movsl
bound
cmp
out
negl
jecxz
dec
push
lods
pop
dec
pop
out
rorl
out
or
test
outsl
sbb
jecxz
je
xchg
hlt
mov
rcrl
mov
mov
or
dec
cmp
jge
push
outsl
bound
out
and
jmp
jne
ja
movsb
sbb
mov
test
jl
sub
adc
cld
fwait
movsb
fisttpl
jb
adcb
xchg
scas
inc
sbb
adc
orl
push
dec
stos
fcoml
dec
push
or
rcrb
pop
ficompl
int3
cld
xchg
sbb
scas
test
push
push
mov
push
icebp
aam
sahf
xchg
testb
loopne
sub
int
data16
ljmp
mov
push
out
inc
push
dec
jl
lds
lods
pop
push
incl
xchg
aam
adc
mov
push
cli
sbb
mov
imul
xor
fisubrl
push
add
push
mov
js
sbb
sbb
and
adc
mov
sub
xchg
or
mov
xor
inc
jg
and
lret
xchg
jno
stos
int
pusha
daa
in
ss
movl
lock
ss
cmpb
ret
test
js
cmp
adc
and
es
arpl
and
mov
add
push
cmp
mov
pop
scas
add
push
popa
jae
mov
mov
dec
cs
rcr
mov
pop
andb
sti
xchg
xor
in
int
inc
stos
dec
imul
cmp
and
mov
adc
scas
loopne
fnstsw
mov
xor
stos
pop
push
add
add
enter
bound
xchg
mov
pop
mov
lock
push
imull
outsb
sbb
add
fisttpll
enter
imul
mov
xor
out
jbe
push
sti
hlt
and
js
inc
hlt
adc
add
adc
test
mov
fwait
pushf
mov
adc
inc
push
mov
xchg
pop
xchg
ret
addr16
scas
imul
cmp
push
hlt
loope
fnstcw
jmp
xchg
popf
repnz
cmp
dec
add
inc
dec
inc
loop
repnz
pop
xlat
in
mov
lods
push
pop
push
push
mov
loope
inc
enter
push
jne
mov
popa
fwait
imul
test
adc
adc
adc
mov
jmp
loope
dec
icebp
push
shlb
test
mov
mov
rcll
cmp
jp
ret
es
or
push
dec
cs
cmp
je
subl
mov
push
inc
lret
loope
or
notl
dec
loope
movsl
cmpsl
push
jno
fwait
xchg
mov
pusha
addb
fildll
xorb
mov
xchg
iret
cs
test
jge
test
cwtl
pop
cmpsb
pusha
movsb
xchg
push
or
sbb
sti
jmp
int3
pop
mov
xchg
out
clc
xor
pop
sub
jno
repnz
mov
jmp
test
les
xchg
test
inc
mov
int
mov
test
and
mov
push
pop
jnp
jg
stc
xor
add
movsb
add
aad
bound
mul
mov
sub
out
push
xchg
and
es
mov
mov
add
pop
test
fucomip
adc
cmpsl
sub
daa
mov
rorb
mov
mull
pop
stc
loop
into
and
adc
dec
insl
lods
mov
pop
dec
shlb
mov
mov
imul
je
insb
jle
movsl
aad
lret
daa
je
add
sar
mov
movsl
scas
pop
hlt
rcr
fnstenv
roll
jns
pop
add
enter
jge
xor
and
cs
test
xor
stc
aad
add
adc
jl
push
imul
mov
mov
jle
lahf
jo
inc
iret
cmpsb
mov
xchg
inc
mov
push
in
ficoml
and
mov
jb
or
shl
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
repnz
push
pusha
bound
and
inc
mov
mov
int3
bound
inc
xlat
xchg
or
pop
push
pop
inc
fstpl
mov
pop
lea
add
jge
in
das
lods
adc
je
xor
jle
scas
out
cmp
xor
out
pop
push
ja
fdivrp
out
fs
cmp
daa
sbb
xchg
gs
and
lcall
aam
cld
movsb
pop
sbb
repz
test
dec
xchg
mov
push
repz
xor
push
jae
pop
ja
push
mov
jmp
cwtl
mov
or
xchg
test
inc
sti
shl
sub
inc
inc
dec
daa
packsswb
loope
inc
xchg
rorl
cwtl
pop
adc
and
repnz
movsl
test
call
or
dec
shrb
mov
xchg
and
add
dec
xchg
stos
cmpsl
test
mov
scas
lret
in
aas
or
call
jg
push
cmc
outsb
dec
cmp
pusha
dec
xor
cmpsl
pop
stos
mov
into
fistpll
nop
out
cmp
adc
and
mov
lcall
push
dec
popl
xor
mov
aam
cli
jge
jno
pop
inc
dec
cld
test
jb
fwait
rcr
jl
dec
dec
leave
andl
xchg
mov
push
cli
loope
es
cli
sbb
out
lss
aas
adc
jne
pop
jmp
jl
cltd
lret
mov
pushf
jge
test
out
ret
call
jp
inc
cmp
leave
mov
push
loope
add
mov
sub
in
sbb
js
sahf
dec
mov
sub
js
mov
out
test
loop
add
lods
jmp
sbb
mov
push
sbb
in
test
sarl
add
lea
lcall
repnz
jb
fmul
cmp
and
dec
shlb
mov
sbb
pop
jae
inc
insl
ds
sbb
push
daa
inc
fsubrl
arpl
ds
dec
bound
sahf
lcall
dec
les
imul
push
mov
push
cwtl
out
leave
mov
das
faddp
ljmp
lahf
push
aad
adc
pop
push
mov
sub
jle
inc
jae
dec
sub
jne
mov
pop
sbb
dec
fcoms
lahf
push
sub
aam
xchg
pop
adc
sub
xchg
mov
movsb
cmp
pop
dec
sbb
test
jo
xlat
jg
cmp
gs
ljmp
and
popf
and
jae
and
push
sub
xchg
inc
add
push
lahf
ja
jbe
es
mov
mov
inc
call
mov
pushf
fiaddl
sti
dec
arpl
sbb
and
testl
push
or
cmp
adc
push
inc
push
out
add
inc
pushf
push
pop
call
xchg
repz
push
jge
rclb
mov
shl
clc
push
push
sbb
sahf
call
jno
jns
inc
cmp
scas
and
addl
jl
ret
adc
test
or
adc
adc
mov
lret
mov
or
xlat
sar
push
mov
cmc
or
jo
cmp
fiaddl
cmp
xchg
out
inc
sbb
cs
outsl
cmpsl
je
xor
pop
jbe
int
sbb
mov
lret
inc
lcall
pop
rorb
mov
mov
sbb
and
mov
cmp
and
les
mov
xchg
xor
inc
pop
pop
jp
cwtl
loopne
insl
shrb
and
ss
mov
push
mov
aas
pop
inc
sub
mov
cmpsb
inc
test
and
scas
lret
movsb
mov
roll
ror
xchg
inc
sti
les
movsl
jle
cmp
dec
lods
push
iret
pushf
adc
lods
ror
movsl
adc
in
cs
xchg
mov
jns,pt
push
ret
and
clc
insb
cltd
data16
mov
lcall
leave
scas
daa
push
in
lret
mov
popf
sub
jg
sub
mov
inc
cmp
pushf
xor
xchg
pop
adc
fucomip
jb
dec
ror
push
adcb
repz
test
sub
pop
lret
mov
fstp
add
xor
shll
cwtl
mov
fs
sub
pop
xor
sbb
das
loopne
inc
push
lahf
in
xchg
jl
dec
repnz
push
jecxz
xor
jle
xchg
imul
arpl
inc
lret
iret
mov
stos
jge
idivl
add
dec
dec
jmp
and
scas
xlat
dec
inc
imul
leave
insb
ret
nop
mov
push
push
push
sbb
lea
pop
inc
cmovno
mov
inc
adcl
dec
int
dec
repz
aas
adc
xor
imul
std
pop
sbb
adc
insb
data16
mov
aas
jmp
xchg
ljmp
cli
shrb
jle
sbb
testl
loop
pushf
popa
lret
mov
xchg
cmpsb
inc
or
sbb
jns
add
lds
or
hlt
jae
sahf
shl
cmp
ljmp
insb
xchg
mov
adc
repnz
outsl
int
add
adc
rcr
xchg
adc
add
mov
andl
lods
push
pop
imul
jp
iret
jo
aaa
data16
in
inc
add
icebp
out
sub
inc
lcall
movb
cmpsb
jle
clc
test
mov
xchg
sub
mov
mov
push
mov
and
aas
in
in
movsb
pop
pusha
mov
das
popa
testl
push
sahf
dec
movsl
les
pop
lods
or
mov
mov
ret
int
add
rolb
sub
and
aaa
arpl
push
outsl
test
gs
jae
dec
adc
mov
jno
lea
mov
sbb
lea
pop
lds
push
lds
push
add
bound
enter
and
movsb
adc
and
test
shrb
mov
imul
in
adc
add
xchg
mov
mov
in
xchg
cltd
lock
jge
fnstcw
lods
cli
add
out
add
jge
xor
or
jmp
lea
cwtl
sbb
sbb
mov
test
adc
in
in
sub
mov
fsubrl
or
mov
xor
jns
cwtl
lea
ficomps
dec
imul
xchg
lods
dec
adc
fisttpll
xchg
push
push
out
jl
rorl
sti
inc
mov
dec
pusha
inc
les
xchg
mov
add
ret
mov
enter
xor
dec
push
int
jle
mov
adc
cmp
adc
dec
lds
bound
fists
mov
sub
dec
fs
jne
lea
xchg
mov
cmp
cmp
lds
std
and
add
or
mov
sub
sbb
aaa
push
lcall
xor
outsb
jl
test
es
js
imul
push
dec
mov
mov
shll
mov
outsl
jmp
cmp
jae
xor
jle
xchg
adc
adc
mov
and
and
shr
sub
dec
testl
aas
aaa
fnstenv
pop
fstps
pop
pop
pop
and
mov
or
dec
cmp
pop
push
xchg
sbb
pop
and
mov
and
adc
mov
mov
add
mov
mov
dec
popf
or
mov
outsb
cs
lods
ret
stc
add
cmpsb
adc
mov
cli
les
adc
inc
mov
lock
mov
mov
xchg
cwtl
pop
andl
mov
arpl
ds
pop
rorl
jo
into
pop
std
sub
push
clc
stc
test
mov
sbb
loop
adc
cmp
in
jecxz
fwait
mov
push
pop
lret
cmp
dec
sbb
mov
or
xor
mov
push
loope
andl
sbb
inc
push
jecxz
out
rcrb
ret
xchg
icebp
xchg
mov
or
iret
add
loopne
popf
inc
jnp
jle
jnp
lcall
pop
xchg
push
nop
pop
sbb
xlat
jnp
cs
mov
outsb
rolb
cmp
xchg
and
test
inc
mov
or
daa
mov
outsl
cmp
jne
enter
popa
jbe
jo
jmp
mov
sahf
outsb
mov
cli
adcb
add
in
scas
xchg
xor
mov
mov
in
je
and
dec
mov
stos
mov
and
mov
adcl
add
sbb
iret
adcl
lret
icebp
mov
lahf
mov
jno
lahf
cltd
jne
mov
ljmp
sbbl
pop
bound
das
repnz
dec
pop
or
enter
sbb
enter
rorb
ds
sbb
jnp
bnd
sub
lds
mov
test
sbb
stos
data16
sub
scas
dec
xchg
mov
xor
mov
sub
out
insl
ja
push
in
adc
jle
xchg
int3
xor
mov
call
dec
xor
xchg
xor
mov
in
mov
sub
lds
push
xchg
mov
push
and
ret
stos
pop
push
and
rcrb
lds
add
ret
call
loop
repz
push
aad
adc
dec
pop
movq
iret
xorb
dec
mov
and
xor
decl
clc
out
movsb
push
mov
xchg
inc
push
addr16
arpl
andl
push
out
movsb
cmpsl
xor
push
out
enter
and
std
jle
nop
lahf
lea
stos
push
cmpl
enter
jg
fists
leave
dec
ficoml
fbstp
mov
mov
push
add
push
mov
cmp
mov
js
jne
sbb
pop
in
iret
das
enter
push
mov
sub
das
sub
nop
dec
dec
inc
leave
test
movsl
or
pop
lahf
jmp
push
dec
or
sarb
add
daa
fbld
jae
pop
pop
mov
fs
jecxz
jmp
fiadds
pop
cld
sub
xor
sbb
adc
mov
repz
push
pop
mov
lock
jle
adc
adc
pop
jo
mov
iret
pop
in
idivl
in
jl
cmp
scas
or
cmovne
icebp
out
mov
mov
xchg
pop
cmc
daa
ret
push
loopne
idivl
inc
into
shlb
inc
fcomi
mov
adc
outsl
data16
fisttpll
std
cmpb
jbe
push
sub
scas
shlb
xor
aad
sti
jns
add
aad
fstp
xchg
aaa
lds
scas
xchg
or
mov
xor
push
in
mov
push
popf
gs
mov
aad
imul
mov
ss
jns
inc
adc
repnz
xor
xor
dec
addl
leave
cmp
cs
leave
xlat
lret
dec
add
fsts
stc
fsubs
adc
sub
cs
aas
cmpsb
cwtl
imul
mov
push
lret
xor
jp
out
pop
or
push
and
and
ret
sbb
mov
lock
mov
and
iret
cmpsb
push
nop
xchg
adc
iret
mov
ds
dec
sbb
std
mov
lret
movsb
and
fwait
or
scas
call
pop
or
cmp
cld
lods
add
dec
pop
mov
inc
dec
sahf
inc
mov
sub
lea
fldenv
aad
movsl
sti
cli
push
xchg
push
mov
insl
xor
mov
scas
cmp
pop
outsb
in
cwtl
sbb
push
sbb
xchg
fidivrl
ds
mov
adc
sub
es
inc
adc
sets
xchg
dec
jmp
dec
or
test
enter
sbb
repz
push
mov
mov
ja
mov
bsr
clc
aad
dec
and
fistpll
pop
xor
jge
sbb
xchg
sub
and
dec
pop
mov
ja
lds
push
dec
sub
cmp
jo
arpl
pop
pop
lahf
movb
adc
mov
mov
mov
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
daa
add
fwait
adc
clc
adc
jne
cmp
aaa
popf
xchg
xchg
loopne
mov
stos
pop
push
mov
cmp
cli
shll
xor
jmp
aam
imul
stos
jns
sbb
dec
cmpsl
bnd
ljmp
sub
sti
push
xchg
dec
rclb
and
fdivrp
mov
sub
lods
add
jnp
js
sarl
jp
aad
mov
xchg
js
mov
cmp
andl
jge
cmp
pop
data16
sub
and
sub
mov
clc
shrl
in
push
jns
or
adc
jns
lcall
mov
ret
mov
pushf
or
push
push
or
mov
mov
add
pop
sbb
jmp
hlt
or
push
push
xchg
pushf
inc
fdiv
loopne
lcall
lods
cs
std
cmp
lods
je
comiss
out
jbe
incb
pop
das
cmp
jo
repz
stos
out
mov
fidivs
pop
cmp
ret
or
scas
mov
cmp
ret
pop
inc
xlat
xor
mov
sub
mov
xchg
cli
mov
loope
out
inc
inc
ljmp
mov
out
xor
sub
dec
mov
mov
push
sub
int
icebp
and
mov
pop
inc
sub
rorb
enter
bound
psubw
ss
mov
cmc
aam
scas
test
stc
push
xchg
js
push
in
movsl
mov
sbb
dec
in
fidivs
adc
test
pusha
bound
inc
cmp
andl
xchg
xlat
dec
mov
or
xor
add
inc
adc
int3
sbb
pusha
decb
popf
xor
pop
cmp
sqrtps
lret
xorl
incb
jge
pop
insl
sub
jg
xchg
loope
sahf
testl
and
inc
mov
xchg
jecxz
mov
adc
mov
imul
and
not
xor
mov
lcall
or
in
bound
push
sub
sarb
jb
mov
inc
push
stos
jge
fcompl
aad
es
clc
push
pop
add
addl
jae
outsl
sti
in
das
jl
insb
ss
test
pop
adc
push
inc
ret
fnstenv
stos
sbb
lods
add
dec
xchg
push
in
xor
or
fwait
jno
js
std
mov
repz
mov
push
and
add
mov
test
mov
loope
stos
mov
add
jl
loop
test
dec
es
mov
out
fcmove
iret
mov
push
dec
or
add
or
jne
mov
push
hlt
aas
lods
sti
adc
ror
jb
xchg
dec
cmp
pushl
cmp
fsts
push
test
pop
push
repz
cli
pop
inc
fildll
out
stos
pushf
leave
add
in
cltd
stos
clc
adc
dec
mov
or
pmaxsw
movsl
sbb
shlb
mov
lret
loope
repz
int
push
inc
cltd
dec
andl
cmp
xchg
aad
push
ret
mov
inc
mov
push
adc
push
mov
adc
nop
clc
out
jns
lret
fsubp
ja
push
mov
pop
inc
sarl
loopne
xorl
mov
cmp
scas
mov
decb
sub
mov
xchg
and
scas
inc
pop
jp
and
add
and
out
sbb
adc
xlat
add
aam
mov
push
stos
add
scas
call
enter
insb
popf
cmp
mov
adc
pop
orl
lea
mov
mov
divl
call
js
ss
jo
dec
js
jnp
xchg
out
mov
xchg
daa
es
icebp
mov
xor
or
call
gs
and
jp
mov
fidivs
hlt
lret
mov
mov
push
cwtl
outsb
ss
mov
mov
ret
repz
sub
fwait
jle
jmp
jmp
sub
enter
jl
xlat
pop
cmpsb
int
and
fucomip
cld
xchg
not
cmc
int
cltd
in
pop
hlt
push
xchg
xor
in
loope
imulb
pop
push
test
add
push
sbb
push
decl
mov
or
cmc
outsl
or
lret
addl
push
pushf
adc
dec
push
stos
flds
cmc
movsb
data16
dec
adc
push
fldl
mov
cmpsb
loope
dec
wbinvd
xchg
insb
cmp
int3
fbld
call
add
inc
inc
adc
sarb
or
xor
mov
movl
xchg
leave
adc
and
xor
pop
mov
sbb
das
shrb
mov
testb
jno
pushf
add
mov
out
xchg
js
aas
push
sub
push
test
push
pop
mov
loopne
mov
jae
cmp
xor
add
pop
outsb
aas
xbegin
add
notl
ret
mov
xor
test
add
jno
call
and
pop
push
rorl
arpl
cmp
xchg
stc
adc
pusha
rol
mov
leave
faddp
push
and
repnz
and
mov
in
cmp
mov
mov
mov
aas
sub
stc
add
outsb
add
mov
pushf
lcall
mov
mov
cmpsb
jmp
imul
iret
lahf
xor
push
adc
mov
orl
cs
dec
into
int3
add
std
jl
nop
sbb
popa
cmp
idiv
sbb
sbb
add
cmp
dec
push
push
add
test
inc
je
into
orb
push
mov
test
sub
mov
pop
sti
adc
leave
hlt
xchg
lcall
mov
jl
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
jmp
mov
adc
clc
adc
mov
mov
inc
aam
dec
mov
pop
xchg
sub
inc
add
cmpsl
icebp
fmull
pop
pop
and
imul
xchg
mul
pop
jb
hlt
pushf
push
out
iret
leave
xor
fiaddl
mov
dec
sbb
pop
push
inc
mov
cmp
loop
dec
jo
lea
outsb
arpl
stc
mov
notb
sbb
mov
fs
push
lock
push
pop
dec
jne
jno
test
jb
mov
aam
xchg
adc
repnz
push
dec
jno
bound
jp
cld
mov
mov
fwait
pop
rorl
xor
outsl
mov
mov
or
int
shll
cli
loope
fldenv
add
mov
jmp
mov
pushf
daa
dec
mov
jo
in
stos
xlat
add
out
cmp
int3
push
xorl
loope
dec
test
inc
sbb
cli
aad
ret
jp
push
in
aaa
movzwl
sti
xchg
or
jecxz
mov
icebp
and
fnsave
pop
stc
dec
repnz
pop
or
scas
pusha
jg
mov
and
cld
push
pop
cmp
inc
push
cmp
push
sbb
jo
cmc
push
lcall
call
or
rcrb
loop
dec
cmp
je
sub
xchg
insb
and
xor
and
xchg
dec
mov
mov
in
pop
add
in
scas
or
xchg
stos
xor
int
jo
jge
loope
je
clc
inc
dec
aaa
cs
mov
cmp
insb
sbb
imul
sub
and
lods
fisttpl
jae
loopne
int
add
lcall
xlat
push
dec
std
in
cmpsb
movsl
ljmp
cmc
dec
jns
sahf
pop
jle
pop
push
fs
fstpl
add
cwtl
scas
mov
xor
out
push
repz
jne
mov
icebp
imul
hlt
cmp
xor
adc
push
imul
sbb
arpl
pop
test
bound
in
sbb
xor
sub
aaa
test
adc
pop
mov
and
dec
jmp
sub
int
xchg
lods
cmp
sbb
lahf
pushf
in
aas
in
cmp
out
mov
cmpsl
dec
push
add
pushf
jmp
push
pop
push
aad
imul
mov
push
sub
cs
sub
cwtl
daa
push
mov
push
mov
jg
mov
arpl
cmpsb
loope
inc
adc
sbb
imul
out
sub
sub
cs
mov
dec
or
fnstsw
mov
outsl
sub
cmp
fld
xchg
sbb
sbb
xor
adc
or
push
mov
add
lret
movsl
cmc
mov
call
pop
test
xchg
outsl
pop
xor
bound
dec
mov
mov
sub
pop
out
scas
add
int
xlat
xchg
dec
lret
data16
push
dec
lods
idivl
jmp
mov
in
mov
sbb
pusha
pop
rcr
inc
aam
outsl
dec
cmp
sti
leave
xor
lret
ja
fcmovbe
jne
scas
sbb
cmp
pop
rorl
fsubs
mov
adc
xlat
pop
movsl
int
adc
push
cld
icebp
ja
sub
and
leave
mov
mov
in
lcall
or
lock
aad
ss
adc
popf
pushf
cld
add
movsl
stc
or
loopne
les
adc
jb
jo
cmpsl
sbb
xchg
movsl
and
lock
in
dec
and
cwtl
or
mov
ret
popf
xor
push
iret
xor
adc
dec
pop
dec
jb
int
jmp
inc
repnz
pop
xor
xchg
push
popa
xchg
xlat
pop
or
cli
jno
adc
out
pop
mov
clc
push
test
cmp
pop
jge
hlt
imul
stc
mov
insb
outsl
popa
aad
mov
cwtl
sbbl
rorl
xor
xor
xchg
fdivs
push
rorl
or
xor
pop
push
mov
jg
sbb
mov
adc
in
sub
cmpb
insb
call
gs
xchg
jp
popa
mov
xor
pop
pushf
mov
and
inc
pop
sub
sub
or
mov
flds
int3
xor
xchg
aaa
outsl
sbb
les
je
adc
cld
popf
and
dec
cmp
or
lods
enter
int3
xor
add
lock
mov
jne
outsl
jno,pt
ljmp
or
scas
psllw
mov
mov
and
mov
iret
cltd
mov
and
push
ss
shlb
lahf
mov
dec
or
mov
or
ljmp
push
fstps
pminsw
mov
add
cmpsb
cli
ss
adc
fildl
popf
push
aam
mov
jo
jmp
fs
lcall
xor
gs
rcll
lret
jo
sub
std
pop
xor
cmp
ja
call
loopne
lods
lahf
ljmp
mov
stos
add
ficomps
or
sub
xor
orl
add
and
nop
or
sar
pop
out
push
mov
inc
or
add
arpl
push
pop
jae
add
pop
add
dec
iret
jno
add
adc
ret
and
push
or
mov
cmp
icebp
cmp
fsub
fs
inc
daa
shlb
nop
mov
push
xchg
mov
or
sbb
and
test
outsb
and
cltd
xor
xchg
and
sbb
rorl
fxch
movsl
jbe
mov
adc
aas
int
sbb
or
mov
and
adc
adc
testl
stos
fcos
aad
stos
jbe
es
and
or
xor
imul
loop
xchg
addb
data16
push
out
outsl
insl
ljmp
mov
xlat
pop
faddl
pop
movsl
rorl
lahf
in
push
adc
or
xor
lods
enter
adc
jmp
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
jg
adc
clc
adc
sbb
out
sub
cli
rol
aam
mov
push
cmp
mov
fwait
dec
push
mov
ljmp
paddd
iret
push
fucom
aas
mov
cmc
je
lahf
dec
je
add
stc
sub
jecxz
lahf
lcall
movsb
sub
sbb
dec
and
int
adc
stc
dec
js
mov
xchg
bound
lahf
inc
dec
adcb
adc
nop
sbb
cmp
mov
cli
inc
jns
xor
jno
into
mov
cmp
loopne
mov
test
xchg
ss
sbb
push
jmp
pop
jmp
add
mov
das
xchg
ss
test
incl
cmpsb
aad
sbb
sbb
cmp
xchg
sbb
jmp
stc
int3
push
pop
cli
pop
mov
sub
aad
sbb
push
pushf
mov
xor
xlat
cmp
mov
inc
cmpsl
loop
in
or
cmpsl
out
leave
pop
inc
push
test
lea
fidivrl
inc
push
test
nop
mov
jl
loope
in
inc
sbb
jno
mov
rorl
adc
add
popa
dec
cmpsl
int
add
daa
push
or
or
mov
mov
xchg
xchg
loop
mov
mov
ljmp
sbb
int
or
add
insw
cmp
pop
insl
mov
cmp
cmp
and
stc
sub
out
movl
int3
leave
dec
adc
stos
shlb
or
dec
popa
loope
or
clc
and
mov
fmuls
adc
cltd
cmp
enter
jno
mov
das
mov
mov
push
push
xchg
enter
je
cmp
imul
fwait
push
imul
sbb
std
mov
cmp
xchg
fs
adc
mov
add
sub
xor
data16
popf
sbb
and
sub
js
cmpsl
jle
sub
repnz
xor
in
aam
pop
arpl
mov
rorb
ss
push
inc
push
les
dec
out
ja
in
in
shlb
adc
shll
insb
cmpsb
or
mov
xchg
aam
aad
ret
sbb
jnp
roll
xor
aam
mov
jmp
sub
nop
adc
cld
out
cmp
or
ret
imul
leave
lea
in
mov
imulb
pop
or
inc
fdivr
adcl
mov
lock
test
jne
mov
rolb
add
js
jnp
out
inc
pop
mov
sbb
pop
jle
mov
leave
xor
and
inc
jbe
les
xchg
xchg
xchg
push
addr16
inc
fimuls
fnstcw
push
pop
imul
shlb
jmp
mov
and
sbb
add
jl
add
xchg
and
mov
xor
xchg
mov
ds
xor
sub
imul
mov
cmpsb
cmp
mov
pop
out
arpl
adc
fwait
lods
xlat
popf
jg
iret
sbb
xchg
sub
faddl
out
pop
imul
mov
mov
push
sbb
adc
cltd
xchg
cmp
jnp
pop
mov
dec
rcl
adc
negl
popa
int
movsb
jl
lods
or
shr
add
rol
sub
xchg
xchg
cli
ss
cld
fisubs
repz
jmp
fdivs
jbe
daa
jne
mov
into
or
inc
xor
sub
mov
rorb
cli
repnz
pushf
cli
xchg
pop
or
ret
adcb
mov
inc
pop
sub
push
pop
jl
shll
push
fsubrp
aaa
xchg
cmp
push
mov
addl
or
jae
sub
add
cs
cli
mov
mov
cmc
inc
fdivr
mov
int
fdivrs
ja
sti
push
mov
mov
push
add
mov
sar
test
add
sub
cs
jae
xchg
cmp
cltd
sub
lcall
cmpsl
je
mov
lods
adc
push
cmpl
inc
pusha
cmp
movb
enter
std
adc
subb
mov
scas
sbb
xor
clc
xor
lret
test
leave
pop
sbb
mov
mov
xchg
and
and
stos
dec
and
cmp
lds
sbbb
mov
repz
lock
std
les
fidivl
mov
sahf
pop
dec
adc
rolb
xchg
sbb
adc
and
rcrb
out
clc
cmp
cmc
nop
pop
sub
mov
fadds
in
lret
ret
mov
sbb
testb
mov
mov
rclb
repnz
ret
xor
cwtl
mov
data16
sbb
lds
das
js
mov
and
rorb
negl
dec
daa
in
dec
jnp
std
out
mov
addb
push
cmc
push
jg
dec
std
into
imul
js
pop
scas
sbb
jns
scas
loopne
lods
xorl
popf
dec
iret
stos
sbb
test
dec
dec
lahf
jbe
movsl
or
outsl
xchg
lods
xor
ja
ret
dec
add
shlb
xor
push
pop
cmp
cli
repnz
jmp
dec
fwait
jle
jne
ds
pop
pop
cmp
inc
ljmp
pop
and
es
je
sarb
jecxz
and
pop
lods
dec
xchg
repz
loope
mov
xchg
fs
faddl
add
scas
dec
adc
pop
ret
mov
gs
int3
push
inc
test
insb
jb
cli
and
mov
sbb
or
data16
xor
mov
push
xor
mov
call
mov
je
out
mov
std
dec
nop
repz
pop
xchg
out
mov
cs
mov
add
rclb
repnz
jmp
mov
test
pop
stos
loop
inc
push
jmp
or
in
enter
imul
hlt
adc
adc
clc
adc
lods
or
adc
pop
lods
aam
icebp
adc
imul
in
lods
cld
push
nop
out
xor
push
daa
out
jo
mov
push
dec
cmp
push
data16
push
mov
out
and
or
cmpsl
stos
mov
fcom
addr16
push
fisubl
dec
jnp
sub
and
les
xchg
insb
das
cmp
test
xchg
inc
cltd
cltd
into
shrb
daa
pop
outsb
jnp
pushf
dec
mov
jg
mov
xor
aaa
mov
cld
je
xchg
test
pop
sti
int3
dec
fwait
sbb
and
add
mov
jbe
loope
dec
xchg
mov
les
or
sahf
bound
mov
out
or
test
rcrl
inc
add
in
mov
cld
ja
dec
jne
fcoms
ret
mov
jecxz
or
lock
je
and
mov
push
inc
test
stos
mov
hlt
adc
mov
sub
mov
loop
mov
push
pop
sbb
sbb
scas
cli
mov
or
cmp
cmp
cltd
or
push
pop
add
stos
scas
or
pop
xchg
sbb
cmp
test
lahf
push
in
test
sbb
xchg
movsl
push
and
stc
mov
jle
xchg
mov
lret
rorb
and
lcall
mov
add
sahf
mov
xchg
lret
xchg
fdivrl
in
cmp
mov
fs
xor
inc
or
aas
mov
fidivrs
and
sahf
cltd
cltd
ret
add
mov
popf
jae
push
sbb
xorb
xchg
cmc
add
inc
sub
lahf
das
popf
pop
fs
pop
stos
cmp
int
popa
sub
or
sub
fstpl
and
scas
cmpsl
and
dec
lock
scas
xchg
sahf
push
pop
pop
add
pop
aas
mov
in
insb
mov
push
aaa
ja,pn
faddp
pop
ja
mov
scas
sbb
lods
cmp
pusha
nop
stos
mov
xchg
imul
cmp
adc
cmp
jnp
test
and
lods
xlat
dec
loope
scas
test
cmpsl
ja
mov
imul
sbb
nop
push
mov
xor
add
ret
inc
inc
add
mov
dec
dec
dec
cmp
add
and
xchg
jp
fwait
adc
rorb
pop
cmp
and
or
push
dec
dec
inc
repnz
hlt
mov
stos
push
adc
fnsave
jne
out
push
sub
cmp
push
into
cmc
xchg
push
nop
and
xchg
aam
subb
loop
cmpsb
jecxz
inc
ret
in
inc
imul
adc
movsb
dec
sarb
adc
out
sahf
insl
shrb
inc
lock
mov
jmp
aas
daa
sub
xor
cld
mov
adc
out
jp
mov
mov
pop
in
sub
popa
xorl
sbb
movsl
mov
pusha
pop
cmpsb
mov
adc
fnstenv
stc
pop
push
mov
popa
insl
dec
mov
dec
rorl
dec
adc
or
adc
xchg
popf
pop
popf
in
adc
nop
or
ds
pop
mov
sub
jge
lods
sbb
aam
inc
js
bswap
popf
fistl
loopne
mov
cmc
jb
inc
add
jmp
dec
jecxz
cmpl
xchg
cmp
sub
mov
stc
add
subl
cmpb
loope
sbb
mov
mov
ss
add
rclb
and
cmp
lahf
rcrl
pop
rcrl
call
push
mov
fnstenv
fiadds
mov
lock
ret
mov
mov
outsb
mov
jbe
nop
cmpsb
push
rol
and
ss
adc
xor
jae
sbb
mov
data16
pop
jg
test
or
xchg
jb
out
inc
scas
and
mov
pop
dec
push
lock
imul
or
or
addb
loope
das
cs
inc
popa
dec
frstor
mov
add
or
movsl
jns
xchg
pop
leave
xor
insb
aaa
shll
adc
mov
push
and
test
push
iret
xchg
ret
fxch
std
dec
pop
in
jecxz
imulb
stos
xchg
bound
dec
jg
popf
mov
mov
jmp
or
bound
inc
mov
sbbl
mov
fstpl
mov
cmpsl
das
shl
inc
out
leave
inc
icebp
in
fwait
cld
mov
test
or
mov
hlt
stos
cld
push
jno
sbb
fmul
out
ja
or
shll
idivb
mov
je
adc
inc
fimuls
enter
adc
aas
dec
cmp
inc
jno
call
mov
sub
pop
mov
sti
inc
lea
mov
push
cmpsl
into
cmpsb
lods
cmp
jge
test
mov
aad
mov
ss
jmp
inc
arpl
cltd
out
or
dec
push
cld
aas
inc
cmpsl
fisubrs
jge
fmuls
clc
xbegin
lcall
inc
inc
fistpl
mov
add
out
xchg
into
icebp
pop
mov
mov
mov
cmp
and
jb
and
lods
out
arpl
cmc
xchg
xchg
test
inc
aaa
divb
jns
bound
bound
and
int
xchg
and
les
and
aam
outsl
sbb
scas
or
dec
sar
mov
int3
xor
push
xchg
cmp
scas
fcomps
cmpsl
xor
les
aas
imul
xchg
ljmp
unpcklps
and
mov
cli
enter
sti
mov
add
rcrl
cmp
sub
push
add
push
loopne
sub
nop
cs
jmp
pushf
js
mov
cmp
out
ljmp
jp
jo
cmc
sub
push
sub
dec
repz
stos
mov
jmp
jge
fdivp
pop
jl
cmp
cwtl
in
ret
or
or
dec
daa
test
dec
loop
and
mov
mov
mov
call
jmp
in
cmc
dec
stos
dec
sub
add
mov
jne
adc
clc
adc
sbb
add
imul
outsl
ret
mov
fdivs
fistl
aam
popf
repnz
add
lcall
or
jae
xor
out
mov
push
enter
fs
hlt
mov
jb
mov
pop
mulb
jne
inc
mov
fsubs
mov
stos
nop
adc
lret
jo
lock
popf
je
mov
push
rcll
out
fs
xor
sbb
aad
xchg
fwait
jg
inc
xor
inc
mov
pop
jl
and
rorl
inc
adc
mov
mov
xchg
rorb
ljmp
adc
sarb
pop
stos
or
out
sbb
frstpm(287
hlt
int
andl
or
aad
enter
sarb
xlat
arpl
shlb
icebp
mov
int3
out
jbe
fwait
jle
icebp
fs
dec
xor
nop
cmc
xchg
adc
pop
push
test
das
mov
pop
adc
mov
mov
xchg
dec
imull
adc
shl
cmpsb
cmp
aam
nop
mov
push
mov
xchg
add
enter
sub
push
sbb
push
sbb
xchg
and
mov
adc
lcall
mov
setno
jp
out
stc
jbe
in
inc
ret
jmp
sub
sub
lcall
xlat
stos
jb
xchg
mov
jmp
pusha
stos
mov
lret
in
xor
sub
in
gs
mov
fcompl
ljmpw
je
sub
call
mov
xchg
iret
or
mov
mov
lods
rclb
fyl2xp1
jl
push
stos
and
mov
nop
imul
call
fistpll
lds
das
xor
rorb
cmp
and
cmpsb
out
jmp
mov
movsb
dec
inc
xchg
xor
cmp
je
xor
mov
out
dec
ss
push
xchg
or
xchg
ficompl
stos
movsl
mov
fwait
lds
xor
sbb
mov
add
loopne
inc
xor
adc
nop
lods
jno
or
insb
hlt
aas
push
or
nop
aas
or
xor
and
aam
mul
mov
pop
push
iret
mov
sbb
incl
mov
dec
cmp
mov
fists
jle
cli
sub
aam
xchg
rcll
adc
or
pop
das
stos
lahf
mov
les
add
xor
mov
sbb
sbb
xchg
pop
and
imul
adc
xchg
push
or
and
cmpb
push
in
notb
or
adc
or
cmpsl
enter
mov
js
lret
push
push
add
jb
roll
hlt
enter
iret
stc
push
lea
pop
stos
hlt
jo
divb
icebp
adc
mov
dec
push
outsb
sarl
data16
push
decb
out
into
lahf
je
les
push
sub
cs
fistpll
clc
out
xchg
push
or
cmc
mov
dec
mov
enter
lret
push
ljmp
daa
xor
cli
push
dec
orl
sbb
push
cwtl
cld
xchg
std
mov
sbbb
adc
sbb
add
movsb
movb
aam
lcall
stos
test
cli
fsts
dec
xchg
fstps
xchg
sub
inc
jg
pop
inc
nop
fwait
push
jecxz
ds
int
jb
inc
js
sarb
jmp
ret
push
jge
xor
ljmp
aaa
fisttps
push
hlt
ljmp
jae
mov
jns
xchg
shlb
push
inc
mov
xchg
sbb
lock
pop
adc
popa
fidivrs
pop
shr
pop
fidivs
push
mov
add
mov
push
ja
sub
fsubr
lret
sbb
dec
lcall
inc
mov
sub
scas
xor
xchg
iret
mov
add
out
jb
sbb
xor
mov
fucomi
or
jbe
pop
cmp
mov
push
iret
jg
fsubr
imul
mov
add
jbe
int3
lods
cmpsl
inc
idivb
jmp
jge
out
shl
jl
outsb
je
or
mov
fimull
push
lods
fs
cli
lahf
scas
movsb
cmpsb
xor
xor
lahf
in
sbb
mov
imul
imull
mov
das
add
mov
dec
push
pusha
imul
adc
sub
and
push
insl
pop
inc
lea
sub
sub
jle
movq
repz
fidivs
mov
pop
pop
mov
es
mov
cwtl
int3
push
adc
mov
push
push
lea
pop
icebp
adc
aaa
mov
jge
push
inc
hlt
mov
cs
mov
xchg
xchg
into
pop
imul
mov
jo
into
mov
mov
or
gs
jecxz
lds
int
loop
xchg
xor
es
jnp
sti
pop
pop
pop
push
into
call
sbb
xlat
out
rolb
mov
fsubrp
cld
push
xlat
fs
subb
cmp
cltd
fcomps
in
ficompl
ss
mov
stos
daa
out
pop
xchg
mov
or
popf
sbb
mov
mov
mov
sub
push
jo
mov
xor
popa
in
mov
fcoms
adc
or
imul
sbb
cmp
notb
jge
xor
lods
adc
es
or
test
add
push
xor
sbbl
leave
pop
inc
lret
jl
fldl
push
outsl
inc
add
pop
xor
xchg
push
sub
mov
add
jo
xor
mov
aad
out
mov
xlat
mov
hlt
mov
adc
lods
sbb
stos
push
das
mov
arpl
mov
arpl
fadd
ud2
jo
outsb
jecxz
jl
pop
idivl
mov
mov
mov
shrd
jmp
sbbb
pop
mov
pusha
push
push
out
cmp
inc
lcall
push
clc
adc
ret
dec
mov
xchg
das
test
in
lret
push
push
fidivrl
aaa
jbe
sbb
cmc
or
mov
push
cmpsb
pop
imul
imul
cmpsb
enter
xor
and
adc
adc
das
mov
lahf
cmp
push
cli
adc
hlt
test
mov
data16
or
dec
mov
jecxz
dec
shlb
outsb
icebp
imul
shrb
arpl
iret
sbb
outsb
inc
cli
xchg
jp
daa
push
lods
mov
stc
mov
mov
and
mov
das
idiv
bound
jbe
add
iret
inc
or
xchg
sub
mov
stos
mov
rcr
xor
jnp
lds
aam
pop
pushf
add
push
mov
cltd
dec
movsb
cmpsb
push
xchg
push
jae
outsl
jns
lret
scas
push
mov
fiadds
jo
test
js
in
xor
push
cmp
dec
cmp
xchg
insl
sbb
js
adc
lds
jns
gs
ss
xchg
pop
lcall
inc
add
jnp
stc
dec
idivl
adc
faddl
add
daa
ds
std
or
pop
repnz
jne
out
rol
rcll
mulb
scas
or
xorl
idivl
imul
ja
in
pop
push
adc
fisubrs
test
imul
aad
mov
and
cmp
in
das
inc
sub
pop
sbb
dec
or
out
push
rcrb
add
enter
cmpsl
pop
mov
sbb
je
jge
mov
xchg
add
pop
out
pop
inc
out
lock
xor
adc
sbb
mov
or
in
sub
or
aaa
jno
mov
push
pop
dec
jg
jl
xchg
subb
mov
cld
mov
aas
rorb
xor
mov
jae
sti
ret
mov
imul
rcrl
or
popf
adc
push
mov
or
add
pop
jne
jo
mov
pop
inc
into
lds
repnz
cmp
push
pop
loop
mov
xchg
xchg
mov
xor
mov
jg
enter
mov
mov
cltd
fsub
insb
test
xlat
jle
loop
inc
mov
nop
mov
rclb
data16
call
xor
sbb
pusha
enter
dec
leave
dec
mov
mov
lea
mov
arpl
lahf
pop
pop
pop
mov
push
and
xchg
mov
sub
pop
pop
es
pusha
mov
cmp
jp
sub
jle
adc
pop
sbb
jge
mov
sub
adc
xchg
cmp
or
jne
xlat
mov
and
out
outsl
jne
pop
out
push
sbb
pop
mov
cmpsb
jle
inc
in
jne
outsl
ss
cmpsl
adc
lea
mov
lea
dec
mov
data16
enter
mov
sbb
std
cmpsb
pusha
mov
icebp
ret
dec
sbb
inc
or
popf
sarb
aaa
mov
dec
xchg
aaa
aam
mov
in
jl
clc
stc
and
jb
push
mov
imul
hlt
jns
and
jbe
adc
sbb
pop
push
out
fsubrl
xchg
pop
jae
mov
lds
cwtl
imul
sub
cmpb
add
daa
arpl
jecxz
pop
int3
out
pop
sub
and
sbb
fmuls
mov
and
repz
and
push
clc
jae
or
test
nop
adc
mov
mov
and
add
mov
test
in
lea
sahf
jae
xor
scas
pop
xchg
sub
lahf
cmp
cwtl
hlt
or
test
inc
inc
pop
push
mov
add
cmpsl
xor
mov
into
stos
jmp
ret
adc
dec
xor
mov
inc
jge
dec
mov
call
insb
mov
daa
cmpsb
loope
es
pushf
ja
addl
jp
jns
scas
fmul
jb
fs
xchg
popa
push
imul
roll
scas
nop
lcall
dec
js
out
out
jne
movsb
push
mov
pop
rolb
mov
or
xchg
cwtl
insb
lahf
fcoml
shl
push
scas
rcrb
inc
cmp
mov
sbb
mov
mov
add
jb
aad
fbld
lret
sub
aad
shr
jb
lahf
jge
cli
popf
test
pop
cmpb
xchg
push
sarl
jge
adc
gs
rcl
pop
test
shr
or
push
mov
pop
lea
mov
fiaddl
add
xchg
mov
fildll
imul
push
sub
sub
dec
fimull
xor
lcall
loope
jg
cmp
mov
stc
and
mov
inc
lahf
jnp
mov
or
xor
pop
push
cltd
stos
lods
sar
xor
movsb
test
inc
cltd
pop
cmc
push
and
fs
arpl
jp
enter
stos
xor
lods
cmp
xor
in
xorb
push
out
mov
add
and
dec
and
in
cmpsb
popf
jnp
mov
push
push
out
pop
inc
and
jl
mov
add
inc
sub
lods
pop
jp
ljmp
in
xchg
sub
add
fistpl
lret
loop
cltd
push
cld
mov
aaa
ja
cmp
gs
gs
xlat
add
sbb
icebp
jno
mov
fmul
xchg
dec
es
sbb
inc
les
mov
lock
ret
popf
ljmp
push
xor
popa
aam
and
dec
mov
in
jbe
xchg
mov
cmp
xor
xchg
push
jecxz
jae
aad
imul
cmp
loopne
or
cmc
sub
lcall
imul
pop
jle
shr
shr
xor
push
xor
jmp
mov
push
push
push
mov
stos
inc
inc
aam
adc
clc
adc
stos
mov
movsl
cmp
andb
in
int3
je
xchg
test
mov
js
or
mov
out
pop
mov
mov
push
mov
mov
scas
out
pop
shlb
ljmp
cmpsb
mov
in
insb
mov
inc
enter
daa
sbb
push
out
push
dec
mov
in
outsl
or
ror
clc
push
mov
mov
and
arpl
sbb
sbb
adc
jg
hlt
mov
add
sbb
ljmp
add
int3
enter
das
xchg
hlt
push
push
and
rcrb
shll
enter
and
movsl
adc
outsl
adc
ljmp
add
sub
les
add
dec
daa
or
xor
mov
jbe
mov
jp
fwait
iret
popa
cmp
push
dec
and
jg
jns
push
inc
sbb
rcrl
add
mov
mov
push
pop
mov
mov
push
adc
imul
dec
push
mov
loop
sub
cltd
jne
dec
mov
and
dec
out
add
out
cli
stos
sbb
movsb
add
mov
pusha
push
push
pop
xor
repnz
add
sbb
cmp
dec
sub
ret
mov
testb
cmp
mov
inc
push
mov
mov
ret
cld
lods
test
ss
sub
pushf
imul
xor
and
mov
xlat
ds
dec
into
adc
mov
pop
or
loope
lds
push
mov
mov
push
push
std
pop
mov
xchg
cmpsl
cmp
idivl
sarb
je
stos
inc
mov
xor
sahf
push
mov
sarb
add
or
cmpsb
mov
pop
lods
aam
mov
std
stos
pushf
mov
negl
jo
push
mov
xchg
dec
mov
xor
inc
roll
inc
cmp
or
sahf
or
pop
popf
subl
pop
inc
dec
ljmp
and
sbb
les
cld
outsb
mov
lret
and
inc
stos
cld
inc
lcall
movsl
mov
push
adc
xchg
pop
aam
cmp
jp
lods
adc
inc
dec
test
xchg
mov
fistpl
out
bound
pop
adc
jecxz
inc
mov
pop
es
xchg
lods
mov
hlt
les
or
cli
cmp
repz
sbb
sub
mov
mov
in
push
lret
jnp
add
cs
xlat
mov
scas
mov
xor
jecxz
stos
cmc
xchg
test
cld
mov
xorb
adc
mov
and
xchg
adc
lods
add
add
mov
jo
ss
and
push
mov
fsubrs
xchg
and
inc
sbb
lods
in
cmpsb
xchg
bound
push
inc
mov
cltd
and
jg
mov
je
leave
in
std
cld
dec
popa
scas
int
in
ljmp
add
add
daa
push
cli
mov
add
xor
or
out
mov
mov
xor
jge
sbb
jp
rorb
adc
mov
loope
cs
inc
cmp
lcall
test
push
push
sbb
xchg
add
mov
outsb
ljmp
pusha
dec
sub
sahf
xchg
jg
mov
xabort
sub
js
in
push
scas
pop
lock
js
lods
lret
lods
xchg
ret
js
je
sub
in
jno
mov
movsl
pop
les
pop
mov
das
ror
inc
mov
or
iret
arpl
mov
pop
icebp
out
shr
dec
mov
jmp
push
mov
jns
mov
sbb
and
cli
mov
push
roll
cmp
out
ds
ret
imul
adc
xchg
or
lahf
addr16
adcb
mov
lds
xchg
hlt
push
fdivs
mov
imul
adc
fs
xor
popa
xor
xor
push
xor
clc
pop
and
lcall
jne
daa
outsl
or
cmp
sahf
adc
dec
push
cmc
adcb
xchg
jb
jl
push
adc
and
fcom
sub
adc
subl
mov
pop
in
inc
aam
sub
sub
arpl
jge
add
dec
jbe
aas
mov
jp
cmpsl
mov
leave
out
mov
add
cld
popa
cmc
push
shlb
cmp
inc
pop
aas
mov
stc
addr16
jp
sub
xor
inc
mov
jno
cs
shrb
pop
gs
aam
or
subl
or
jae
dec
mov
setle
pop
cs
pop
push
scas
test
and
mov
jnp
outsb
into
xchg
fcomp
add
ds
xchg
fisttpll
icebp
push
jle
popa
std
mov
sbb
rcrb
dec
movsl
xor
or
pushf
out
lds
jle
insl
or
jo
xor
dec
loope
call
or
push
dec
sti
xchg
add
mov
and
push
inc
sbb
xchg
pop
inc
aaa
sub
xchg
inc
add
fs
ret
mov
xchg
scas
mull
paddsb
sbb
and
fstpt
mov
jge
jmp
adc
adc
mov
fidivrl
adc
sbb
fwait
mov
movsl
dec
lock
pop
pop
inc
rcrb
dec
imul
nop
repz
inc
jge
aam
call
ljmp
cs
xor
xchg
cmc
inc
cli
icebp
repnz
loope
dec
inc
mov
fs
pusha
lods
jecxz
mov
jge
out
repnz
lcall
lret
mov
movsb
cmc
mov
lock
js
xlat
out
jle
xchg
mulb
xor
aad
mov
arpl
or
mov
test
pop
hlt
inc
adc
sub
icebp
scas
pop
or
mov
arpl
jnp
mov
pop
xchg
ret
sbb
push
ljmp
lods
aas
sti
sahf
dec
dec
inc
xlat
xchg
test
mov
mov
push
push
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
adc
adc
clc
adc
add
cltd
mov
jmp
insb
cmpb
xor
inc
or
add
pop
addr16
push
xchg
es
and
es
ss
lret
xchg
lock
dec
ljmp
cmpl
push
pushf
std
enter
push
fcmovnbe
mov
stos
popa
or
leave
pop
jo
sarb
push
inc
iret
pop
cmp
leave
jle
pop
inc
mov
sbb
mov
dec
je
daa
push
add
imul
jae
and
xchg
push
pop
aad
adc
ficompl
mov
and
and
dec
cmp
and
pop
add
fwait
stos
cmp
das
xorb
outsb
outsb
lcall
inc
inc
int3
add
xor
push
int
inc
push
push
movsb
sub
dec
push
std
stos
dec
xor
lret
push
repnz
dec
xor
add
fdivrs
mov
rorl
sub
sub
fldt
lcall
fisubl
enter
and
add
or
lods
xor
push
cmc
add
je
jmp
icebp
cmp
sub
mov
mov
add
jl
ljmp
mov
cs
or
je
cltd
push
insl
rcll
xchg
xchg
add
dec
out
inc
cltd
mov
and
fcoml
and
or
mov
or
xor
cmp
mov
dec
sub
aad
xchg
cmpsl
mov
lods
pop
fdivrs
aad
bound
sbbb
test
sub
jb
iret
daa
jbe
movsl
jb
lcall
pusha
jae
or
out
fnstenv
xchg
sbb
out
pop
inc
jbe
stos
lret
repnz
mov
lock
hlt
shll
jae
pop
mov
xchg
testb
fcmovnu
ret
or
pop
xor
xor
jo
rorl
mov
pop
loop
testb
xchg
fdivl
lock
in
aas
mov
fildl
cmp
call
cmpsb
pop
mov
jb
out
dec
mov
jb
jp
icebp
pusha
cmpsl
xlat
xor
repz
iret
mov
xchg
popf
adc
out
mov
xchg
fwait
daa
fnstenv
int3
pop
adc
dec
xchg
insb
cld
xchg
scas
or
mov
fs
mov
and
shrl
sti
push
and
jl
stos
out
xchg
mov
xchg
call
jbe
loop
fwait
inc
int3
gs
mov
xchg
gs
xchg
sti
jle
xchg
cmp
mulb
push
je
sub
adc
jbe
mov
outsl
shlb
mov
pop
inc
lcall
stos
cltd
ficoms
mov
jae
aad
into
mov
movlps
aaa
mov
and
imul
js
pop
pushf
cltd
mov
aad
outsl
mov
mov
sub
jo
cli
into
dec
wbinvd
push
mov
sahf
adc
movsl
jp
xchg
fwait
scas
push
pusha
repz
cli
xchg
and
sti
movsl
dec
or
jmp
lods
xor
add
xor
sbb
call
mov
nop
in
jmp
movsl
fimuls
clc
je
popf
test
data16
inc
sub
jno
sbb
lea
jg
lea
add
xor
nop
mul
sub
std
cltd
xchg
push
shr
sarl
cli
jecxz
jns
test
jo
pop
enter
ja
out
jne
dec
lcall
adc
es
push
xchg
movsb
test
lods
push
negb
test
or
jp
cld
scas
nop
pop
pop
ss
cmp
mov
ljmp
adc
xor
outsb
push
popl
int
addr16
dec
xchg
pop
loopne
sarb
jo
pop
ret
xchg
fildl
add
in
xor
aas
xchg
cmp
inc
sahf
or
imul
fldt
xchg
cmp
imull
jnp
inc
sub
mov
jge
loopne
test
sbb
pop
cmp
js
dec
push
mov
mov
push
and
add
xor
mov
fwait
out
hlt
pop
ret
data16
daa
pushf
sbbl
push
and
add
jl
stc
mov
cmp
cmc
movsb
xor
mov
sub
mov
lahf
pop
adc
clc
push
adc
inc
jns
pop
cmpl
adc
enter
ss
filds
cmp
inc
xlat
lds
dec
sub
ljmp
fisubrs
mov
ror
adc
fistpl
sti
cmp
xlat
xchg
clc
add
xor
cmp
std
xor
and
stc
cmpl
pop
push
pop
mov
mov
xchg
test
add
scas
pop
int3
mov
vminss
cmp
fcoml
jge
test
mov
mov
rorl
test
aam
pusha
aas
add
scas
jbe
xorl
enter
pop
cmp
aas
and
jge
movsl
inc
jo
jg
dec
pop
sub
nop
mov
lret
pop
popf
dec
mov
stc
cmp
orl
mov
dec
mov
push
xor
movsb
add
rorb
mov
push
mov
fcomps
cmp
lds
addr16
sahf
lds
shl
xchg
pop
or
jg
fistpll
push
nop
xor
inc
xchg
call
jbe
aaa
jecxz
dec
je
mov
lds
daa
movsl
aam
inc
pushw
in
dec
and
leave
mov
in
pusha
and
or
dec
nop
aam
lods
pop
dec
lcall
inc
in
add
or
mov
push
push
aaa
mov
pop
xor
mov
js
lcall
sub
ljmp
xor
sbb
pop
dec
sub
xor
repnz
cmc
add
cs
mov
push
mov
jnp
xchg
js
iret
sarl
jb
rol
dec
sbb
sbb
loope
inc
sub
adc
arpl
into
hlt
mov
data16
push
xor
iret
mov
scas
xor
faddp
pop
sbb
in
inc
addr16
dec
dec
inc
repnz
add
jb
imul
mov
xor
pop
add
stos
xchg
xchg
sub
dec
cmp
les
aaa
dec
scas
mov
fidivrl
dec
xchg
cmpsb
ds
jle
cmc
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
adc
push
sub
adc
add
scas
and
push
bound
xchg
in
clc
mov
sbbl
mov
cs
push
push
imul
or
fcoml
sub
test
xor
scas
lock
xchg
movsl
lock
imul
cmp
mov
cmp
pop
loop
imul
push
fistps
cs
popa
adc
pop
nop
inc
popa
or
mov
pop
sbbl
pop
jge
lea
dec
into
sahf
push
or
xor
sub
fld
scas
sub
loope
les
mov
notb
cmova
jg
jne
pop
dec
jns
stos
pop
mov
jo
adc
insl
aad
lret
fiadds
jo
lea
add
pop
mov
imul
xchg
shl
mov
sub
jmp
inc
insl
sbb
dec
sarb
sub
pusha
sub
push
pop
xor
int3
cli
mov
loope
adc
pusha
jle
lds
inc
push
adc
adc
sub
mov
out
out
fs
sub
adc
es
push
xlat
sub
cmp
lret
jb
test
xchg
xchg
ret
mov
filds
scas
loope
lock
mov
jbe
in
mov
stc
dec
dec
xor
sbbl
add
ljmp
xor
ss
aaa
out
push
lea
push
shrl
mov
bound
fsub
in
jo
gs
std
cmpsl
cmc
xor
and
mov
adc
in
test
sbb
pop
sbbb
push
cmp
and
push
mov
cmp
push
or
sub
ja
adc
adc
fwait
push
movsb
cmpsb
mov
sbb
popf
call
xchg
ja
pop
int3
mov
sbb
shr
cs
and
outsb
cs
lods
xchg
jle
cld
movsl
adc
sti
sub
sub
sbb
cld
xchg
cmpsb
mov
repz
jp
test
and
les
mov
add
dec
call
lahf
mov
add
mov
pop
mov
into
inc
push
insl
xor
dec
pushf
icebp
pusha
addr16
test
push
testb
subl
push
sub
dec
test
push
inc
dec
dec
aam
inc
fmul
lret
inc
cmpsb
mov
pop
xchg
cmp
test
ret
js
test
es
insb
cmp
jp
xchg
lods
frstor
cmp
sub
xchg
xor
movl
inc
inc
and
pminub
fildl
inc
ja
rcrb
inc
int
dec
daa
sbb
das
dec
cmp
addb
xchg
cmpsl
mov
leave
and
repnz
mov
mov
jno
jg
mov
sbb
js
ret
adc
or
mov
lods
in
xchg
push
xor
sub
les
adc
push
repz
mov
popa
cmc
popa
mov
mov
push
dec
jp
pop
addr16
add
mov
pusha
pop
and
fiaddl
mov
xor
or
sbb
mov
fst
jnp
add
mov
leave
mov
ss
push
or
push
jg
jl
daa
scas
mov
loop
dec
mov
fcmovne
cmpsb
xor
add
leave
add
call
xchg
jg
dec
add
sub
mov
xor
push
pop
clc
daa
imul
mov
sub
mov
mov
mov
and
mov
imul
ret
cmp
mov
and
cwtl
push
packuswb
lcall
pop
test
add
popa
fs
mov
adc
mov
sbb
stos
ds
ret
cmp
pop
adc
mov
adcb
or
mov
leave
jle
jge
imul
dec
xor
pop
mov
pop
adc
mov
subb
stos
add
sub
mov
fistps
testl
mov
mov
push
pop
je
xchg
xlat
xchg
adcl
or
inc
mov
mov
dec
cmpsb
mov
mov
cmpsb
mov
iret
test
test
mov
out
mov
call
pop
arpl
mov
rcrb
xchg
pushf
mov
out
je
cmp
and
push
mov
ljmp
mov
mov
inc
dec
stos
pop
push
mov
xchg
sub
popf
repz
stos
inc
cmp
inc
jae
cmpl
mov
incb
inc
jl
js
sahf
pop
push
dec
cli
ret
ret
and
shl
in
out
mov
shlb
fisubrs
fs
sbb
cmp
jge
stc
stos
push
mov
lods
inc
push
xchg
mov
cltd
xor
out
mov
aas
lea
add
cmp
cmp
xchg
fldl
or
hlt
cs
ja
mov
fadds
or
jmp
out
stos
sub
mov
xor
movsb
push
sub
pop
inc
push
insl
add
adc
mov
lret
jl
mov
mov
sbbl
jp
ljmp
ret
mov
jbe
sbb
cmpsl
lret
xlat
dec
mov
cmpsb
outsb
arpl
or
int3
cmpsl
jg
inc
mov
in
es
cmc
or
rcll
jg
js
loope
mov
loop
adc
lahf
and
movsb
movsb
push
sub
inc
aas
inc
mov
dec
mov
lods
iret
ret
jns
test
les
into
jb
lds
loop
push
pop
stos
push
adc
ds
cmpsl
das
or
push
hlt
push
jo
loope
pop
mov
aaa
cmp
inc
pop
outsl
mov
hlt
xor
icebp
loopne
mov
stc
faddl
adc
loop
mov
and
inc
cmp
daa
sti
or
int
movsb
repnz
inc
loope
jne
ret
cmc
pop
pop
out
lret
mov
inc
xlat
mov
add
mov
mov
ret
mov
cmpsb
inc
stc
aas
cmovle
fwait
int3
cmpsb
sub
imulb
cmpsl
xlat
cli
insl
adc
lahf
push
out
cmp
sub
mov
jbe
sub
sbb
and
xor
jae
cmc
shrl
pop
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
add
clc
adc
mov
gs
mov
lret
adc
mov
das
jo
xor
xor
mov
mov
inc
sahf
arpl
sbb
lret
jne
xor
xorl
rclb
jmp
xor
aas
xchg
fisttpl
ss
pushf
lret
dec
jnp,pn
mov
or
adc
sti
cmpsl
mov
jp
add
inc
dec
xor
cmp
inc
imul
mov
out
std
xor
adc
mov
out
lock
sahf
xchg
les
fsts
loope
jecxz
push
pushf
sub
add
mov
xor
fs
jo
jbe
lock
mov
les
mov
fdivrs
push
aas
inc
mov
clc
mov
push
lahf
mov
pusha
cmp
std
xchg
gs
in
hlt
shll
mov
xchg
mov
push
iret
xchg
inc
das
pop
into
xor
push
jle
gs
inc
sub
popf
lock
es
scas
xchg
mov
cwtl
inc
jmp
cmpsb
shrl
sub
aad
dec
mov
ljmp
aam
les
subb
mov
in
insb
arpl
mov
mov
xor
repnz
push
out
scas
xchg
es
xor
movsl
test
movsb
mov
xor
xchg
push
jnp
mov
and
xchg
scas
xchg
inc
jge
push
dec
int3
inc
and
mov
rorb
mov
movsb
push
test
inc
sar
mov
dec
jl
xchg
xchg
push
cmp
mov
test
jne
push
jne
pop
xchg
daa
dec
or
adc
mov
repz
inc
call
push
ficoms
add
push
sbb
iret
xorb
adc
fs
adc
ljmp
push
inc
push
jmp
sub
pop
jecxz
mov
adc
mov
mov
pop
mov
or
pop
jle
ds
push
xchg
mov
daa
xor
lds
push
jge
imul
mov
rorb
dec
pop
mov
xchg
jl
jge
inc
clc
sub
mov
xor
sbb
test
and
pop
xor
dec
daa
aaa
repnz
sub
add
sub
mov
repnz
stos
inc
jb
inc
jp
cmp
outsb
mov
jo
cmp
fld
faddl
add
es
mov
ja
mov
mov
or
and
jnp
mov
or
js
ret
sbb
lds
test
popa
mov
cmp
and
mov
mov
ljmp
pop
pop
and
ret
aaa
cmp
dec
inc
js
inc
and
in
mov
push
mov
sub
jecxz
and
sub
popa
xchg
mov
push
dec
fmulp
fstps
push
cmp
addr16
cltd
insl
sub
sub
or
stos
test
adc
rorb
test
popf
sti
ds
or
out
pop
lret
adc
outsl
js
jne
cmp
in
stos
int3
pop
sbb
subl
jbe
sti
shlb
or
fmull
mov
pop
or
mov
or
adc
dec
adc
pushf
jl
mov
loopne
loopne
sbb
mov
aas
xor
inc
pusha
loopne
xchg
lods
out
idivb
inc
mov
xor
sbb
inc
xchg
pop
dec
mov
mov
ret
dec
je
imul
cmp
das
add
add
sub
sub
mov
mov
inc
mov
cmp
jl
aad
in
insb
mov
sub
cld
mov
or
inc
add
add
sbb
and
dec
shll
cmp
or
xor
scas
jp
xor
addr16
mov
sti
gs
dec
jmp
push
push
outsl
pop
lcall
ja
sbb
movsb
cmp
in
movsl
cld
mull
mov
lret
rclb
dec
push
scas
scas
mov
sub
test
ja
inc
adc
mov
bound
in
es
pop
decb
repnz
loop
aas
ja
xchg
pop
fisubl
jp
pop
addl
pop
adc
sub
in
movsb
out
int
push
dec
xor
pop
inc
xchg
jb
outsb
and
imul
bnd
cli
sbb
pushl
call
cltd
mov
sub
lret
das
xchg
pusha
cli
add
inc
mov
pop
dec
xchg
xor
push
mov
mov
mov
mov
mov
in
push
arpl
push
subb
push
btc
adc
out
inc
aaa
shrb
ret
inc
jno
cmpsb
add
mov
movsb
lods
dec
push
mov
outsl
test
repnz
pop
aad
sbb
dec
repz
loopne
fdivrl
cltd
ret
mov
loopne
ds
sarl
and
mov
lods
push
fdivr
and
push
scas
inc
sbb
push
js
xchg
xchg
jae
inc
adc
data16
lret
out
fisttpl
pop
je
adc
int3
test
in
stc
rolb
fdivs
dec
pop
push
fwait
fs
and
es
add
adc
orl
in
mov
sbb
xor
sub
xchg
scas
add
sbb
aad
mov
sub
sub
cld
out
and
fucom
sub
in
outsb
std
xchg
jl
test
imul
adc
xchg
push
fsubrs
xchg
lds
jae
sti
test
insl
dec
inc
out
pop
lret
jge
scas
test
aaa
jp
cltd
fimuls
push
adc
test
jo
in
ja
mov
lahf
jmp
int3
or
popf
sbb
xor
lock
btc
int3
jae
std
xchg
stos
nop
in
mov
scas
pusha
lods
push
mov
xlat
xchg
lods
mov
lds
adc
cld
pop
lret
movsb
jns
inc
inc
mov
jbe
imul
sbb
jle
cmp
jae
lock
mov
xor
mov
clc
mov
push
adc
jbe
fsubrp
popa
cmp
mull
add
and
add
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
add
aad
adc
sar
and
xchg
jb
jno
mov
xor
in
pop
insl
cltd
push
mov
and
sub
or
jmp
mov
mov
push
xor
lock
mov
jge
sbb
add
dec
mov
jb
stos
insl
push
stc
add
es
pop
xlat
adc
out
ret
xchg
dec
inc
sbb
std
aad
stos
jbe
subb
test
sahf
xor
stc
ja
popf
adc
mov
jnp
push
pushw
pop
ret
mov
aaa
mov
pop
adc
pop
pop
cmpsb
inc
push
and
jp
inc
outsl
xchg
lahf
inc
js
jle
jb
jae
inc
lds
xor
mov
mov
xor
push
inc
push
sbb
jbe
or
push
cwtl
cmc
and
inc
mov
loop
mov
pop
cmp
out
push
xor
jmp
inc
xor
push
add
xchg
pop
inc
xor
mov
xchg
dec
push
ds
or
sbb
mov
adc
in
mov
jecxz
aaa
in
jno
lods
aaa
outsb
dec
jmp
and
lods
out
rolb
ret
inc
sub
xor
push
gs
xchg
cmp
addr16
iret
insb
inc
fucom
ret
ret
sub
mov
or
push
pop
pushf
out
dec
or
xchg
cmp
mov
dec
dec
add
add
mov
dec
adc
fs
subb
xchg
imul
xchg
js
push
je
sbb
addr16
inc
xor
cmpsb
dec
xor
dec
daa
aaa
lret
pushf
enter
rorb
push
int
add
xchg
adc
ja
mov
mov
inc
lods
mov
xchg
iret
shlb
cmp
cmpsb
xchg
cs
pop
lret
ljmp
push
mov
cmc
aas
xchg
cmp
outsb
or
mov
repz
test
xchg
pop
sbb
outsb
mov
stos
xor
cmp
clc
sub
dec
push
cmp
lret
lcall
push
mov
sub
shll
pop
ss
stos
lods
seta
push
mov
std
jb
and
test
dec
mov
mov
imul
lods
cs
pop
fildl
les
add
add
fwait
jle
outsl
les
xchg
dec
test
es
fsubs
xor
push
sub
loopne
mov
arpl
fldenv
mov
adc
in
mov
dec
mov
dec
adc
rcll
test
dec
jns
cmp
push
jno
fistpll
xor
dec
adc
and
outsl
mov
sub
mov
in
test
fidivl
imul
cmc
xor
and
add
cmc
pop
out
divb
xor
in
pop
push
lods
movsb
jns
ret
inc
adc
repnz
in
dec
out
pop
bound
adc
lret
daa
rol
and
out
mov
push
xor
mov
shrb
and
mov
mov
addr16
imul
adcb
jecxz
aaa
imul
mov
xlat
fiadds
in
stc
imul
out
fisubs
push
in
push
inc
add
lods
sbb
icebp
mov
xchg
jnp
sub
mov
sbb
jecxz
pushf
stos
cmp
je
xor
inc
inc
lds
test
pushf
hlt
mov
add
das
cmc
jae
ljmp
fcmovnu
dec
xor
outsb
aad
mov
jbe
subl
sub
sbb
lods
dec
mov
jae
test
jae
insb
lea
cs
sbb
mov
ficoms
insl
adc
dec
popa
xchg
jo
fstps
out
sub
pop
sbb
loopne
fdivp
cmp
cmp
repnz
push
clc
xchg
sbb
out
push
scas
pushf
aam
cmc
inc
cmp
mov
ret
xchg
cmp
xchg
je
aas
and
scas
fnstsw
push
mov
incl
push
xor
inc
mov
sbb
mov
mov
push
dec
aas
xchg
sub
xchg
xchg
sbb
dec
add
loope
testl
ja
mov
or
data16
loopne
mov
mov
cmp
push
fcmovne
or
mov
xor
jge
add
jg
cli
pushf
sub
mov
pop
mov
mov
cmp
pop
mov
jb
or
cmp
mov
mov
xchg
jmp
fs
pop
and
mov
mov
imul
imul
sub
sub
mov
jp
jl
ja
ds
cltd
pop
test
popf
mov
sub
lahf
movsb
lcall
fucomip
jecxz
jle
mov
ret
cwtl
and
inc
mov
ret
xchg
mov
mov
push
push
xchg
clc
loopne
adc
pop
call
sub
mov
adc
sbb
inc
ljmp
jbe
in
mov
add
scas
push
push
jae
jle
inc
cld
jne
and
mov
jbe
in
ljmp
cwtl
xor
jmp
sbb
fmull
scas
test
or
insb
xchg
mulb
sbb
repz
sbb
scas
adc
jmpw
sbb
das
js
repz
nop
ja
out
nop
xor
push
jne
fs
xor
int3
or
out
cmpsb
mov
test
lock
aam
andl
xchg
pop
lret
ss
push
jns
mov
xlat
jbe
loop
mov
in
lock
jae
aaa
shrl
sbb
xchg
imul
inc
mull
mov
sub
sbb
subb
jmp
movsl
lds
hlt
out
jmp
divl
jno
adc
jns
scas
ja
jg
adc
movsb
mov
hlt
jl
cld
imul
pop
jb
inc
mov
mov
dec
jp
ja
ja
inc
pop
sbb
mov
ret
jmp
scas
push
adc
push
insb
out
push
jns
test
push
imul
subb
dec
jge
dec
push
push
ja
pop
mov
mov
mov
fs
mov
lret
imul
jp
adc
sti
das
mov
in
fdivr
inc
loopne
dec
jns
scas
leave
and
xchg
int3
mov
xlat
ds
sub
inc
sbb
pop
rolb
jmp
ja
int
stos
ret
stos
cmc
pushf
pop
mov
add
rol
lret
notl
adc
push
inc
or
sti
fcomip
adc
aas
cmp
int3
and
mov
and
mul
cmp
sub
sbbl
add
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
gs
or
clc
adc
sub
push
sub
aam
mov
call
xchg
mov
inc
cmc
enter
sub
or
xchg
sbb
mov
test
test
sbb
push
mov
dec
inc
cmpl
push
aam
out
mov
jbe
scas
pushf
or
mov
adc
and
push
dec
jae
dec
lods
xchg
movsb
or
fs
push
sahf
mov
rorl
std
adc
mov
jo
sti
lahf
pop
notb
subl
outsb
aas
scas
push
push
xlat
rorb
jmp
sbb
pop
je
sbb
jns
jmp
cmpsb
add
aas
imul
popf
mov
stos
cmp
and
and
hlt
repz
outsl
daa
xchg
adc
xor
arpl
aas
jle
rcll
dec
cwtl
sti
daa
mov
pusha
fwait
xchg
dec
dec
fldl2e
push
pop
add
sbb
cmp
aad
inc
mov
imul
pop
test
adc
test
cld
inc
andl
inc
xchg
push
mov
xor
xor
add
pop
pop
dec
lret
dec
mov
sub
add
or
adcb
sahf
pushw
scas
int3
sub
aam
sub
sub
out
xor
ret
outsb
enter
inc
or
iret
sub
enter
add
movsb
jmp
mov
and
stc
and
inc
js
add
xchg
sub
push
fwait
hlt
ficomps
dec
xchg
lret
sahf
std
pop
dec
mov
inc
movsb
lea
lea
sbb
sahf
xor
mov
xchg
mov
xlat
ljmp
mov
add
mov
int3
dec
sub
scas
jne
add
push
jg
jns
or
movsl
test
notl
inc
ret
cld
int
hlt
movsb
pushf
dec
pop
xchg
in
mov
lock
sbb
scas
adc
movb
xchg
insb
in
sahf
xchg
sub
lods
inc
popf
lea
lahf
xchg
shl
mov
clc
data16
mov
hlt
int
mov
xor
fistpll
loop
xor
or
xchg
mov
in
xor
sahf
xor
into
add
inc
sahf
xor
pushl
inc
or
push
cld
fimuls
pop
cmp
xlat
outsb
mov
dec
and
fimull
setbe
aas
ja
sahf
cmp
mov
xchg
sahf
xor
jmp
xchg
ds
and
sti
rcll
aas
mov
addb
lret
rclb
icebp
int3
lret
in
cltd
push
xor
pop
sub
shll
in
rorb
andl
push
aam
iret
push
outsb
mov
hlt
dec
popf
jp
jne
sarl
les
fadd
mov
jl
clc
cmpsb
inc
mov
xchg
or
stc
jg
pusha
movsl
outsb
call
mov
loop
xchg
xchg
js
loopne
ds
mov
fst
mov
adc
push
lret
mov
dec
int3
jno
pop
out
jmp
sbb
and
or
sbb
cmpsb
push
add
add
mov
xlat
stos
fs
je
ja
iret
xchg
out
pop
pop
adc
ret
xor
add
ret
cmp
adc
out
push
shrl
sbb
lret
out
jle
stos
jbe
jmp
repz
sbb
xchg
pop
inc
movsb
mov
into
or
stc
sbb
popa
lea
jge
mov
aam
cmp
mov
in
add
aad
xor
fcomi
aas
loopne
notb
bound
add
sub
jae
xor
dec
stos
popf
mov
mov
and
leave
xlat
cmc
dec
pop
test
and
mov
xchg
pop
loopne
subl
add
or
fdivl
mov
arpl
push
mov
inc
add
pushf
pop
cmp
aas
lea
fxch
and
les
les
sbb
outsb
xchg
in
stc
cld
xchg
pop
aaa
add
xchg
sub
sub
jecxz
mov
sbb
pushf
xchg
and
cwtl
mov
sbb
push
lock
dec
sbb
xchg
fstpt
and
or
mov
xchg
adc
xchg
mov
pop
incb
mov
cli
pop
pusha
aad
fadd
mov
fs
mov
stos
sbbb
xchg
adc
js
pop
inc
jns
loope
mov
cmp
in
aad
insl
jg
and
ja
cwtl
mov
and
pop
adc
rorl
adc
shll
cmp
stos
bound
mov
lcall
outsl
xchg
out
xlat
jecxz
xor
insb
rolb
pop
addr16
cwtl
xor
jle
and
mov
mov
stos
jle
jp
dec
les
cmp
or
or
or
xor
xchg
sub
fs
pop
add
popf
push
jge
pop
fcmovnbe
mov
mov
push
push
js
ror
mov
mov
add
jg
outsb
xchg
cmp
sub
jge
cld
sub
cli
adc
cmpb
push
comiss
pusha
sub
out
adc
out
je
sub
mov
cltd
cwtl
addr16
out
cs
stc
push
test
mov
xchg
cltd
jb
gs
mov
push
push
gs
mov
adc
and
cmp
data16
and
dec
cmp
mov
cmp
jno
pop
sti
cmp
in
das
sarb
rcl
xor
arpl
aas
clc
insb
mov
mov
das
push
xchg
rorl
mov
loope
add
xchg
fsts
cltd
out
mov
adc
dec
das
aad
adc
insb
sbb
xchg
inc
xchg
aaa
sbb
sbb
mov
mov
sti
xchg
cs
daa
ljmp
call
rol
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
