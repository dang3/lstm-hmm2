push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
bound
jo
jle
jo
xlat
cmp
rol
pop
push
add
scas
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
cld
es
fcompl
jle
push
sub
pop
add
mov
xorb
jmp
fxch
xor
es
test
mov
mov
add
dec
lea
icebp
jb
arpl
in
jo
movsb
cmpsl
daa
out
out
movsb
dec
fistpl
movsb
inc
jge
inc
insb
adc
in
jge
or
sub
leave
sub
cwtl
insb
fldenv
stc
sahf
pusha
stos
push
es
pop
cli
sbb
lea
js
adc
scas
test
jbe
dec
jae
xchg
adc
xchg
lcall
addb
mov
mov
sti
popf
push
in
cmp
pop
into
mov
sbb
stc
loope
dec
dec
sub
gs
add
test
push
push
fs
mov
cs
jns
mov
lret
and
cmpsl
enter
mov
imul
clc
mov
in
mov
inc
or
cmpsb
jl
or
add
repz
andl
add
jmp
fisttpl
cs
push
pop
fdivrl
jmp
cltd
movsl
inc
repnz
testl
cli
mov
cli
lods
and
das
popa
xor
mov
jmp
clc
icebp
mov
icebp
ficompl
push
mov
jo
jo
fdivrp
mov
cmp
out
mov
clc
test
imul
push
cltd
ljmp
mov
in
jns
xchg
adc
cmp
jnp
mov
push
rclb
xchg
loopne
cwtl
sbb
pop
push
jge
bound
inc
inc
aaa
jg
insl
fs
or
fs
pop
inc
in
inc
mov
sub
js
icebp
sub
push
jns
jmp
ret
dec
out
or
mov
sbb
in
popf
pop
or
lcall
dec
jae
stos
jmp
mov
int3
je
nop
inc
cmc
arpl
and
rcrb
mov
inc
test
push
push
inc
popf
inc
movsl
lahf
and
or
aad
data16
add
push
and
sar
push
or
dec
mov
mov
sbb
mov
mov
dec
hlt
cmp
push
stc
icebp
jo
das
inc
jno
popf
fcmovb
dec
xchg
cli
sub
sbb
pop
das
push
xlat
inc
push
into
andl
scas
addr16
neg
repz
iret
adc
test
ret
xchg
mov
in
pop
pop
cwtl
pop
repnz
je
inc
push
aaa
dec
push
inc
xchg
sti
mov
rcrb
adc
or
dec
cmp
pushf
push
addb
loope
clc
push
mulb
in
mov
cwtl
mov
adcl
cli
sbb
add
pop
jl
daa
rorb
and
push
jge
sbb
nop
cmp
mov
dec
xchg
jle
mov
sbb
repz
pop
mov
push
popf
imul
stos
dec
mov
cs
mov
pop
dec
jl
out
cwtl
or
cmp
sti
rol
add
rcll
adc
rorb
fmuls
call
add
lods
dec
lods
imul
and
aam
jl
jo
jle
jo
jmp
rclb
add
repz
push
mov
add
lahf
and
imul
sbb
ret
gs
mov
mov
pusha
aad
shr
mov
addr16
aad
mov
sti
shll
out
mov
in
call
push
jmp
fistpll
pop
adc
and
inc
mov
jno
cld
das
icebp
sbb
dec
cmp
pop
insb
arpl
mov
mov
xchg
jp
jns
or
xchg
cmovno
sbb
sarb
sbb
add
daa
fidivl
outsb
or
push
enter
loope
jmp
pop
dec
pop
stos
mov
mov
mov
mov
jo
mov
inc
adc
or
mov
cli
test
and
cmp
jae
xchg
adc
xor
rolb
in
or
ljmp
stos
stos
pop
leave
std
stos
sbb
mov
jl
fs
adc
mov
pop
cmp
cmpsb
cmp
add
popa
cmp
mov
dec
mov
out
jno
pop
and
daa
pop
push
pusha
add
aas
lret
pop
pop
nop
fwait
pop
ret
int3
ret
inc
sub
jnp
lds
pop
test
xchg
inc
sub
xor
mov
imul
call
push
in
stos
xor
lcall
fists
out
sub
paddw
xchg
pop
clc
add
add
out
inc
int3
cs
mov
out
mov
jo
sub
aad
and
mov
aam
inc
fistps
lods
out
neg
les
pop
add
add
mov
jg
mov
mov
insb
pop
ja
sarl
bound
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
jp
and
jo
jo
sub
dec
mov
xchg
xchg
insb
sbb
out
jbe
or
clc
stos
xchg
pop
pop
sbb
ftst
jp
call
inc
subl
add
push
stc
cltd
lahf
push
mov
adc
xchg
in
xchg
movsl
adc
adc
int
add
pop
sub
pushf
push
shlb
cli
xchg
push
ss
aam
ljmp
inc
fistpll
mov
nop
cltd
xchg
push
add
push
or
mov
leave
adc
or
push
mov
pop
pop
mov
dec
lahf
and
jge
sbb
aam
mov
scas
pushf
mov
mov
mov
fwait
push
and
stos
movl
mov
jl
out
inc
cltd
call
int
and
add
sbb
adc
jnp
xchg
mov
push
cmp
mov
test
repnz
je
push
mov
movsl
pop
mov
in
cmp
cltd
adc
xchg
jnp
lock
iret
jne
and
shr
addr16
mov
jb
and
push
cld
mov
lods
sbb
mov
sahf
lahf
stc
pusha
test
bound
mov
jbe
push
inc
dec
andb
mov
lock
mov
out
or
adc
ret
mov
or
and
hlt
xor
pop
ret
out
inc
fs
notb
mov
int
inc
mov
dec
mov
xadd
lea
mov
fprem
ja
dec
cwtl
and
addr16
icebp
cld
mov
sub
xor
sub
ja
arpl
or
mov
mov
xor
sub
lcall
inc
lock
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
aaa
jae
jo
jo
jo
jo
enter
imull
mov
std
xchg
in
lods
into
sub
popa
mov
adc
pop
outsb
and
cmc
xchg
push
xchg
repnz
es
fcoms
out
pop
jmp
sub
or
fisubl
incb
jmp
shl
mov
js
fs
sub
loopne
sbb
jb
xchg
cmc
sub
sahf
push
inc
adc
sbb
out
and
pop
xchg
clc
mov
popa
ja
imul
mov
roll
push
and
adc
mov
fcom
loopne
aad
jnp
cmp
sbb
sub
sbb
sbb
into
imul
adc
lret
mov
jecxz
filds
push
ficoml
popf
dec
or
pop
lds
xchg
jno
or
push
jp
pop
popa
cmpsb
cld
sbb
call
mov
push
enter
mov
cmp
xchg
std
pop
pop
xor
rcll
sub
cmpsb
push
pop
mov
sbb
xlat
sbb
sahf
xchg
daa
fists
push
shlb
ja
dec
repz
inc
push
cltd
mov
sarl
int3
add
jp
ss
insb
mov
mov
or
inc
jns
jno
pop
cld
lcall
sbb
test
mov
inc
frstor
pop
das
jae
mov
pop
pop
pop
or
dec
xor
ds
popf
jl
jecxz
cmp
ss
inc
jecxz
dec
ljmp
pop
mov
cmp
adc
mov
in
subl
inc
repnz
pop
out
rorb
bnd
test
orb
jmp
out
bound
dec
or
into
jge
jns
cld
fwait
sbbb
dec
pop
fcoms
std
push
push
mov
repz
cmp
lods
loop
inc
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
fsub
jo
jo
jo
jo
and
adc
cmpsl
sti
es
test
xchg
shlb
clc
outsb
fldt
sub
and
dec
pop
adc
and
js
sub
or
in
dec
add
jg
or
aad
bound
es
add
pop
scas
inc
imul
jne
inc
fidivl
and
test
cmp
inc
mov
mov
mov
add
mov
xchg
sarl
cmp
fdivs
dec
in
mov
std
or
push
scas
add
sub
push
pop
inc
aam
out
daa
push
jnp
pusha
jnp
or
testb
notl
cmp
lahf
pop
or
stos
jp
mov
xchg
xchg
leave
dec
int3
cmp
ss
cmp
and
push
mov
and
adc
std
jo
dec
xlat
pop
cmp
mov
pop
mov
xchg
sbb
mov
cmpsb
mov
xchg
test
inc
bound
add
inc
inc
jp
insb
test
hlt
scas
imulb
sub
jnp
movsb
xchg
jge
xor
push
mov
jge
mov
adc
and
xchg
inc
scas
xchg
testb
mov
add
sti
mov
adc
and
ret
cmp
in
cwtl
dec
icebp
fdivr
jnp
inc
pusha
rcrb
fwait
sar
std
cld
call
lods
pop
xchg
pop
jp
dec
pop
xchg
insl
insb
mov
push
cltd
inc
mov
add
stos
enter
pop
dec
xor
xorl
shrl
movsb
sub
or
xchg
sub
es
xchg
sbb
loop
test
mov
inc
and
cwtl
adc
xchg
mov
jecxz
push
fs
jnp
mov
lea
adcl
and
push
jbe
arpl
int3
icebp
dec
scas
orl
cltd
xchg
push
leave
cld
jge
mov
or
dec
mov
fmuls
cmp
jmp
ret
gs
cmpsl
insb
xorb
jo,pt
jo
jo
jo
push
lods
aaa
lcall
mov
cld
addl
mov
inc
jle
psrlq
daa
pop
sahf
and
cmpsl
imul
les
aad
icebp
mov
xor
out
mov
call
mov
std
jno
lret
add
popf
mov
loope
xchg
movsb
mov
inc
repnz
pop
gs
ja
sbb
call
xchg
mov
loope
push
push
lahf
mov
adc
mov
loop
dec
rorl
pop
and
mov
jb
vpsrld
sbb
stos
lds
lcall
dec
call
sub
movsb
sub
popf
pop
fucomp
mov
jp
inc
pop
xor
scas
mov
pop
cmp
mov
negb
adc
jne
icebp
jb
and
sarb
push
outsl
mov
and
loope
daa
mov
cld
movsl
inc
adc
cmc
pop
push
mov
outsl
das
loope
mov
sub
es
sub
mov
inc
rol
and
mov
adc
insl
xchg
and
pop
cmpsl
in
sub
mov
in
andb
int3
aaa
jne
sub
or
sub
mov
int
xor
adc
nop
fidivrl
jecxz
cs
mov
repnz
loope
lret
inc
mov
and
adc
lds
cmp
not
rcll
pop
mov
outsl
outsl
call
out
imul
call
shr
insb
dec
cmp
dec
mov
xchg
sbb
std
sbbb
test
xor
cmp
sub
and
and
lods
mov
inc
rep
out
adc
shl
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
rcrl
jo
jo
jo
jo
imul
push
sbb
or
sbb
rcrb
repnz
inc
mov
mov
rcrl
jge
clc
psubsw
imul
sub
int3
dec
mov
lods
mov
or
loop
push
stos
xor
jbe
dec
jb
jmp
dec
inc
mov
aad
sub
test
add
loop
mov
or
add
out
fnstenv
out
imul
sbb
adc
adc
xchg
lret
fwait
cltd
push
push
xor
loop
lods
fs
jle
cs
jb
mov
sbb
jl
push
enter
fists
das
dec
mov
pushf
push
xor
dec
pop
push
inc
push
xchg
xor
rorl
dec
sbb
add
test
mov
pop
dec
sbb
cmpsl
sub
adc
push
mov
push
mov
dec
sub
scas
pop
in
jno
sbb
repnz
sbb
loope
cmp
movsb
insl
leave
mov
sbb
shl
fistpll
fnstenv
push
cmc
insl
mov
sbb
mov
dec
and
cmpsl
out
shlb
pop
fld
jns
or
dec
iret
mov
test
mov
jne
test
mov
jbe
xor
daa
cli
pop
sbb
push
push
adc
aad
lret
jno
and
jge
dec
std
repnz
sub
or
roll
int3
and
leave
lock
sub
stos
pop
xor
inc
xor
gs
daa
aad
pusha
jno
inc
push
xor
push
push
call
stc
leave
and
out
xchg
adc
fxch
adc
int3
cmp
pcmpeqd
stos
push
testb
in
in
mov
out
insl
jg
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
test
add
jo
jo
pop
pop
add
xor
ljmp
ljmp
movsl
mov
or
call
push
push
and
lcall
test
sub
add
scas
divb
popf
fwait
and
and
icebp
add
xlat
fs
inc
xlat
popa
jp
dec
sbbb
fsubrp
add
ljmp
fidivl
push
imul
mov
jnp
sbb
or
out
addr16
cmpsb
mov
into
cmovs
sahf
xchg
or
shl
jg
cld
ret
stos
aam
clc
sbb
mov
and
add
dec
or
mov
xor
mov
sbb
fs
xchg
or
decb
push
pusha
inc
imul
jbe
sub
fcmovbe
test
out
scas
xorl
mov
ljmp
mov
push
sbb
pop
mov
jb
and
mov
and
jae
icebp
das
jmp
xchg
mov
push
adc
divb
test
data16
mov
jno
loop
nop
push
or
leave
in
push
das
dec
cld
cmpsb
push
and
xchg
call
fs
popa
lock
icebp
dec
pop
add
add
dec
jp
js
mov
cmpsl
push
out
mov
mov
xchg
adc
movsl
iret
jne
imul
loopne
or
adc
lods
scas
jo
mov
sub
jo
lods
push
arpl
jle
mov
insl
xchg
js
xor
inc
pop
arpl
stos
pop
es
cmpsb
js
sub
push
hlt
mov
mov
jns
inc
push
mov
je
push
adc
jnp
adc
aad
mov
jbe
inc
adc
fistl
dec
stos
cmp
jle
out
sbb
ret
mov
xor
repnz
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
inc
and
jbe
sbb
dec
or
xchg
add
xchg
mov
mov
aaa
ret
mov
push
imul
dec
inc
mov
rcl
repnz
pop
xor
out
jno
lret
mov
pop
pop
adc
dec
cli
repz
push
adc
pop
mov
inc
mov
add
andb
jg
lods
sahf
pop
inc
xchg
jbe
and
scas
sti
rorb
sub
int
xor
lahf
push
pop
or
mov
into
or
pusha
fcomps
shlb
imul
test
xor
jne
jmp
adc
jno
test
and
fnstenv
fcmovbe
cli
pop
inc
add
xchg
mov
push
and
jb
push
cltd
ret
jne
jecxz
jle
sbb
xor
jl
mov
repnz
lret
out
ret
test
pop
mov
std
hlt
cmp
into
or
ret
xchg
push
mov
inc
adc
and
dec
mov
stos
xlat
rclb
push
xor
addl
call
inc
fildl
mov
sub
dec
scas
push
jno
mov
aam
push
icebp
clc
clc
xchg
clc
popf
sub
inc
psrad
fmul
ret
cmp
int3
push
int3
pop
jp
fwait
movsb
mov
fcoms
subl
out
mov
mov
in
aam
xor
sar
repnz
sbbb
pop
push
in
fcmovne
popa
insb
adc
lods
test
cmp
movsl
daa
jo
shrl
dec
jb
fistpll
or
push
cmpsl
call
dec
xchg
sbb
inc
ret
sub
enter
aam
icebp
sub
subb
push
pusha
jnp
add
shlb
mov
mov
pushf
aad
cmpl
xor
lcall
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
shll
mov
hlt
mov
jb
lods
cmp
pop
push
mov
jo
ret
nop
mov
sbb
rclb
inc
lods
lret
dec
inc
xchg
add
mov
sub
insb
or
iret
mov
push
decb
or
lods
outsb
cmp
ret
test
pop
add
mov
pushf
out
int3
xchg
dec
pop
loopne
mov
lods
std
jo
or
rcll
es
push
mov
push
mov
out
nop
push
adc
xchg
mov
aam
pop
mov
jecxz
inc
les
sub
aad
in
test
aas
fs
add
ss
inc
fisubl
fbld
mov
movsb
lahf
cmp
setb
xchg
add
mov
mov
jnp
mov
add
cld
cld
fmull
mov
int3
adcb
and
or
pusha
into
push
iret
push
xlat
sub
test
sbb
hlt
pop
jl
fsubs
test
push
into
xchg
movsb
dec
das
sub
dec
add
jo
fsts
rclb
ljmp
jp
ds
je
mov
sub
pop
and
scas
and
loopne
jb
mov
cmp
shll
cmp
out
sbb
cmp
ja
inc
pop
xorl
push
cli
cwtl
or
je
adc
ljmp
lret
cmp
sbb
xchg
repz
xchg
pop
sub
jne
stos
minps
push
ss
mov
push
jle
push
jmp
inc
pusha
push
xchg
xchg
adcl
lret
faddp
jg,pt
mov
mov
cmp
mov
jno
xor
push
sar
imul
dec
das
mov
lret
int3
pop
push
mov
pop
stc
nop
aaa
pop
cmp
addr16
push
jecxz
shl
movsl
xchg
aam
popa
repz
or
int3
pop
clc
jnp
push
lea
ror
jge
bound
out
add
jp
sbb
pop
cmp
pop
sub
jbe
pop
rolb
jns
stos
xchg
ss
mov
push
je
nop
inc
xor
stc
fldenv
and
push
test
and
push
fsts
sbbl
lret
fstpl
pop
cli
outsl
jcxz
test
popf
mov
cli
adc
mov
adc
clc
fdivrs
and
mov
cmp
push
cld
push
push
ja
aaa
dec
mov
data16
mov
dec
mov
popf
push
arpl
cwtl
iret
stos
sub
add
aad
cmp
and
push
cmp
ja
mov
outsb
push
jge
adc
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
pop
inc
test
mov
jle
jo
pushf
jmp
mov
sbb
bswap
jl
mov
sbb
xchg
adc
pop
or
or
test
stc
rcll
negb
test
cltd
mov
sbb
std
sbb
sub
add
push
les
imul
cmc
mov
mov
icebp
out
mov
adcl
subb
ret
mov
mov
inc
xor
cwtl
xchg
fistl
fcoms
dec
call
inc
bound
jb
mov
out
adc
fcoms
push
sbb
leave
repz
in
sbb
dec
faddp
dec
lods
inc
push
push
pop
stos
insb
jmp
stos
popf
jg
in
stc
scas
mov
cmc
rcl
out
sbb
pop
mov
lahf
mov
orl
xchg
lods
rcl
shrl
xchg
or
aam
jp
mov
loop
dec
mov
sub
pop
cli
aaa
xor
js
and
mov
mov
daa
jp
dec
nop
lret
mov
fcmovnu
decl
vaddps
std
insb
xlat
push
lods
xchg
dec
adc
cli
loopne
loop
movsb
ret
fidivrl
pop
stos
mov
test
pop
ret
sar
test
cmc
fistpll
shrb
pop
mov
rorb
aad
dec
std
mov
jmp
sub
mov
dec
ret
pop
and
fcoml
test
push
cmpsb
xchg
gs
cmp
push
jb
or
rcr
adc
xchg
jnp
jno
test
mov
pusha
dec
shll
xchg
jnp
adc
in
cmpsl
lods
push
repz
xchg
push
inc
adc
sub
fbld
clc
dec
pop
imul
adc
mov
add
ja
sti
sbb
push
lock
int
sbb
ja
adc
ss
sarb
lods
fcomps
mov
sbb
loop
mov
jmp
jle
adc
rclb
jo
inc
mov
hlt
push
std
cmpsb
gs
xchg
push
pop
arpl
mov
or
in
and
es
xchg
fnsave
lret
aad
mov
cmpsl
jne
mov
dec
sub
pop
movsl
xchg
xor
jb
pop
sbb
mov
and
shl
jl
out
dec
pushf
lahf
arpl
add
dec
push
mov
dec
pop
mov
daa
ss
inc
jmp
push
lahf
or
inc
daa
ljmp
push
loop
add
dec
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
push
or
cld
pop
jo
mov
shl
inc
data16
rcl
inc
out
cld
push
scas
pop
adc
mov
imul
mov
xor
adc
orb
xchg
sbb
and
push
imul
xor
int
enter
pop
or
rcll
xchg
fs
push
xchg
icebp
adc
pop
into
shlb
ljmp
loope
push
jp
sbb
dec
mov
rorl
or
incl
add
pop
test
jg
adc
mov
or
popf
mov
movsb
mov
popf
orb
push
mov
add
aam
push
in
mov
jg
daa
fisubs
mull
dec
pop
mov
lea
out
sub
adc
aad
push
jns
int
aaa
push
cltd
sub
iret
andb
add
cwtl
jnp
das
ljmp
test
daa
xchg
imul
jb
bnd
lcall
xchg
adc
bound
jg
js
imul
pop
ret
std
cmp
push
call
loope
lcall
movsl
outsl
mov
sub
lret
xchg
cwtl
xor
pop
jnp
mov
xchg
rcrl
adcb
dec
sahf
pop
enter
push
sub
aaa
jecxz
add
push
push
adc
hlt
adc
lds
roll
rorb
jno
xchg
inc
ret
fsubl
in
cmp
mov
or
xor
pop
roll
sbb
lods
cmp
out
dec
push
lods
popa
sub
xlat
sbb
fcom
out
xchg
roll
pop
cmp
testl
imul
enter
out
outsl
sbb
cmpl
xorl
xchg
xor
out
in
imul
inc
test
sar
or
fst
in
sub
sti
add
add
xchg
adc
jno
xor
cwtl
push
mov
adcl
lds
fists
sub
test
sti
js
or
and
cmp
fwait
pop
add
mov
jp
les
mov
xchg
dec
push
push
scas
arpl
sbb
in
mov
scas
scas
std
repz
sahf
pop
dec
int
inc
loopne
pop
xchg
or
stc
push
cmpsb
pop
and
inc
sub
cmp
iret
out
loope
add
jbe
mov
dec
adc
fcmovne
test
xchg
insb
and
es
and
scas
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
cmpsb
fadd
js
adc
jo
jle
jo
sbb
movsb
adc
sbb
fnstsw
pop
mov
loope
and
xor
jbe
mov
fistps
nop
out
mov
ja
mov
inc
cmp
aad
inc
aam
enter
xchg
aaa
mov
pop
clc
inc
notl
cmp
push
dec
nop
test
aaa
xor
fistpll
mov
mov
pop
and
or
pop
adc
mov
xor
mov
les
mov
cmp
jg
mov
pop
popf
into
mov
push
movb
shlb
mov
pushl
bound
or
jecxz
pop
or
jae
hlt
idivl
lea
rcr
mov
shlb
lods
cltd
mov
dec
das
jge
fbstp
fs
sbb
clc
add
inc
cltd
out
pop
in
fsts
and
in
in
jne
xchg
mov
add
lcall
mov
arpl
push
mov
mov
cwtl
xor
cmp
subl
xchg
aam
lods
gs
pop
cwtl
jmp
jmp
xor
leave
hlt
lret
pmulhw
mov
gs
lea
leave
and
gs
es
imul
out
cmp
sbb
fistpll
iret
inc
gs
psrlw
jbe
inc
mov
outsb
sbb
arpl
adc
es
loopne
daa
sub
jae
lahf
imul
popa
int
xchg
cmp
adc
adc
insb
stos
xchg
mov
bound
and
inc
sub
neg
gs
fadds
xor
and
jp
cmp
int
mov
gs
fwait
in
mov
js
dec
les
jo
divl
mov
mov
dec
pop
stos
xchg
outsl
push
aaa
ljmp
inc
cwtl
sub
push
adc
push
aad
mov
and
cmpsl
jne
leave
mov
in
push
adc
lods
fistps
arpl
fsubs
sbb
pop
in
xchg
inc
jo
add
push
dec
lret
xchg
adc
push
sbb
sti
jecxz
mov
xchg
sbb
mov
je
pushf
dec
fstl
loope
mov
leave
and
cmp
js
cltd
sub
push
loop
les
jle
dec
adcl
mov
sbb
sbbl
in
ret
sbb
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
xchg
js
jo
cmp
dec
dec
sbb
lcall
cs
xor
or
into
add
shlb
sub
push
mov
rcrl
push
stos
fs
fmull
xor
insl
mov
mov
dec
out
push
je
cld
lds
jle
xchg
insb
outsl
dec
clc
loop
sub
sahf
iret
loopne
jl
test
adc
pop
add
aad
adc
sbb
punpckhwd
jne
jb
fcmovb
inc
mov
mov
lea
add
mov
inc
imul
aam
sbb
cs
mov
clc
mov
aad
and
test
fisubrl
jp
call
cld
mov
movsl
cmp
xchg
pop
sbb
mov
cvtpi2ps
jp
xchg
inc
scas
mov
stos
lods
jo
decb
inc
jp
pusha
lahf
ficoml
addr16
cmc
scas
dec
or
movb
jecxz
push
inc
sar
push
out
cltd
or
xchg
fwait
loop
out
mov
mov
sbb
subb
adc
push
add
xor
in
lret
dec
mov
inc
lock
adc
xchg
lret
mov
clc
or
inc
mov
and
and
fucomp
dec
insl
dec
mov
push
mov
mov
dec
push
aaa
je
jae
daa
push
inc
mov
iret
xchg
shrb
mov
lcall
sbb
add
xlat
popa
imul
jno
jne
stos
xchg
fiaddl
xchg
sbb
xor
jbe
adcb
adc
push
cmp
add
lods
sub
popl
adc
imul
rorl
bnd
lcall
pop
lret
pop
ror
cwtl
sbb
inc
pop
push
cmp
mov
pop
outsl
xor
dec
add
mov
pushf
pushl
jecxz
pop
lret
sar
es
es
mov
add
sbb
movsb
fmull
cltd
pcmpeqb
scas
repnz
cltd
xchg
daa
inc
xlat
sbb
scas
call
shrb
sbb
mov
jne
stos
cmp
ljmp
pop
xchg
push
jle
jb
int
cs
mov
jnp
dec
sub
jnp
fbld
mov
aam
cwtl
es
push
sub
fldt
out
scas
ret
push
repnz
fidivrs
push
in
jmp
cld
jle
out
movsb
pop
negl
pusha
push
pop
push
xchg
in
jl
xor
pop
in
test
sub
jg
mov
add
inc
loope
jmp
sbb
dec
mov
sbb
out
movsl
cmpsl
push
pop
adc
leave
and
xor
pop
push
shll
ss
xchg
push
insb
stos
arpl
jns
cltd
ljmp
mov
dec
jno
mov
mov
test
fstl
lods
test
cwtl
jb
and
mov
in
jg
sti
fildll
sbb
outsb
out
fisubrs
push
fcmovnbe
cmp
inc
lea
adc
js
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
loopne
push
jo
cmp
in
mov
iret
lods
insb
and
lds
fldenv
pop
mov
mov
sbb
push
shrb
jnp
mov
fwait
sbb
cmp
inc
xchg
pop
mov
add
shrl
mov
in
or
cs
sbb
mov
or
pushf
jne
cs
sub
shll
cmp
adc
pop
scas
push
mov
call
push
in
outsb
stc
and
arpl
in
pushf
push
pop
sbb
loop
cmp
mov
faddl
mov
mov
sti
pop
clc
jnp
or
jns
mov
fisttpll
pop
jb
pop
iret
rcr
fidivrl
mov
xor
ds
shlb
pop
out
or
fs
cmc
ret
aam
push
jge
testl
xchg
popw
pop
rcl
dec
cmp
and
test
sub
out
int3
jl
nop
scas
or
adc
mov
xor
stc
sbb
into
rclb
dec
into
test
mov
clc
fnstsw
lock
stos
pusha
shll
stc
into
mov
addr16
pop
mov
negl
pop
cmpsb
jg
pop
xor
je
ds
dec
xchg
pop
dec
mov
insl
jbe
movsb
and
mov
add
dec
jo
pushf
lods
jp
dec
rcr
adc
stos
das
insb
lods
in
orl
push
add
loopne
fwait
push
lods
es
rcr
sbb
mov
fildl
lret
sbb
push
stos
mov
push
or
clc
rorl
je
dec
xor
mov
adc
vmread
ljmp
lret
aaa
and
xor
mov
push
lret
add
hlt
jo
xchg
sub
xor
or
lea
jo
cli
fistps
mov
dec
movsb
hlt
shl
into
jb
je
lret
outsb
repz
mov
out
stc
adc
call
mov
mov
jg
pop
inc
jle
cmpl
addb
mov
mov
orb
or
sbb
in
ds
adc
cmpsb
mov
sub
je
mov
shlb
dec
push
xor
pop
xlat
testl
incl
cltd
fwait
xor
andb
inc
clc
out
xchg
mov
imul
xchg
push
or
in
loop
sub
popa
aam
loope
aaa
in
pop
mov
push
outsb
mov
ljmp
test
pop
in
jg
aad
repnz
jbe
jecxz
mov
fnstsw
and
jnp
in
pop
xor
stos
inc
mov
clc
pushf
xor
arpl
inc
push
mov
imul
push
out
clc
jmp
add
sub
and
aad
pop
or
out
addl
jmp
dec
int
push
and
cmp
mov
inc
push
jno
sbb
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
addb
jge
jo
dec
push
stos
lcall
je
cmp
in
sti
leave
pop
popf
insl
jb
cmp
cli
inc
mov
push
mov
mov
fs
mov
sub
das
in
popf
fildll
jae
or
adc
imul
or
dec
mov
jge
adc
xchg
out
mov
cmp
pushf
ss
or
scas
mov
fidivs
or
xchg
ret
push
in
test
mov
cltd
sub
stos
add
or
fdivl
jl
test
mov
mov
call
pop
pop
fdivr
dec
imul
pop
or
pop
sub
jns
and
inc
test
mov
cmp
xchg
sbb
int3
out
sbb
sahf
into
ret
jmp
stos
pop
sbb
repnz
jae
outsl
inc
xor
cli
sti
aas
dec
leave
mov
and
and
xchg
jg
dec
inc
push
sub
push
pop
scas
rcl
dec
push
inc
lcall
sbb
cmp
and
xchg
add
pop
sbb
js
cmpsl
out
add
inc
ds
repz
xlat
mov
int3
js
mov
pop
mov
in
and
hlt
mov
es
mov
gs
filds
aaa
sub
jnp
fsubs
add
mov
mov
repnz
or
xchg
pusha
movl
aaa
int3
xchg
pop
xor
in
adc
sbb
lods
cld
repz
mov
les
push
add
fs
ljmp
push
sub
imul
mov
dec
stos
test
mov
mov
mov
add
das
xlat
push
stc
mov
xor
cltd
add
dec
mov
mov
mov
js
pop
cwtl
ss
xor
lret
sahf
mov
sub
mov
int
xor
mov
jp
inc
or
jge
inc
sub
jmp
dec
icebp
fistps
adc
sbb
adc
lret
mov
bound
icebp
mov
cmp
cltd
and
popf
push
lods
out
and
neg
xchg
xchg
into
in
popa
and
push
sub
cmpsl
xchg
xchg
sub
dec
mov
gs
jp
loope
adc
xor
je
and
and
lcall
mov
sahf
push
xor
jns
jmp
and
shll
add
push
and
test
pusha
clc
inc
les
jne
mov
add
pop
mov
xor
push
repnz
mov
xchg
inc
dec
and
hlt
mov
test
idivb
enter
in
xchg
test
rcrl
adc
dec
es
jno
movsb
mov
loopne
cli
dec
xchg
mov
mov
mov
fildll
loop
add
sbb
ret
push
aaa
and
clc
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
mov
test
sbb
cmp
push
dec
xor
jp
sub
test
in
jmp
mov
test
subb
dec
jno
clc
inc
into
ret
adc
int3
pop
std
imul
mov
imul
repz
leave
das
dec
insl
sbbb
xchg
xchg
scas
xor
inc
jp
dec
pop
fstpl
adc
mov
out
cltd
stos
jge
cltd
ljmp
xor
sub
push
mov
shll
bound
inc
pop
mov
out
push
mov
sahf
arpl
jge
in
dec
xor
movsl
js
sbb
cmp
cli
test
cmp
push
stos
test
inc
es
ljmp
fldcw
adc
dec
leave
in
pushf
jnp
pop
aam
test
ret
bnd
inc
push
stos
xor
jge
adc
scas
iret
in
lea
int
in
xchg
fwait
loopne
xor
movsl
pop
ljmp
add
neg
js
sub
jl
mov
mov
push
dec
hlt
jbe
add
clc
push
sbb
dec
cli
adc
jg
inc
sbb
mov
inc
mov
dec
sub
stos
sti
mov
lods
xchg
bound
inc
call
ss
test
cmp
xorl
jbe
sarl
insl
aas
rorl
adc
adc
jg
xchg
into
out
cld
dec
and
ret
jbe
in
cli
push
arpl
mov
xchg
xchg
test
fiadds
pop
mov
lret
addl
or
xor
mov
jecxz
out
stos
push
je
sub
fnstenv
loop
movsb
ret
sti
loop
dec
test
ret
leave
popf
inc
test
pop
loope
fisubl
arpl
pop
pop
fsubl
dec
mov
push
jae
outsl
sub
repnz
or
mov
dec
add
in
cmp
iret
jg
daa
cmp
xor
jb
scas
incl
mov
cwtl
mov
nop
mov
pop
mov
mov
mov
mov
je
ljmp
insl
fs
sub
mov
xor
std
sub
pop
mov
jno
sub
fstpl
loopne
push
add
add
lahf
lret
and
sti
lock
mov
and
or
stos
testb
mov
loopne
ds
inc
loopne
dec
bt
sbb
jno
xchg
push
movsb
pop
mov
jae
mull
jb
ja
pushf
inc
push
rolb
xor
jge
cmovno
cs
push
pop
dec
addl
push
push
pop
xlat
dec
jae
in
push
xchg
out
lock
scas
or
add
sbb
pop
insl
jg
test
in
cltd
sti
add
jecxz
adc
jp
xchg
xor
dec
or
push
sbb
fstpl
pop
lret
je
adc
mov
push
and
sbb
aad
pusha
sbb
mov
loop
enter
adc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
js
and
cmp
mov
mov
push
push
add
test
mov
arpl
stc
sbb
pushf
andb
rclb
jbe
xor
test
enter
cmp
sbb
addr16
es
cli
jae
xor
loop
sti
or
cli
outsb
jecxz
mov
xchg
scas
fistl
test
int3
add
inc
inc
cmpsl
int3
lock
and
sub
lock
pop
ja
loope
xchg
jl
inc
in
xor
jae
adc
out
mov
adcl
push
jb
movsb
lds
das
scas
lcall
sbb
and
popa
fstpl
shlb
in
push
push
pop
fnstcw
xor
shl
sub
test
mov
out
jl
aad
cltd
push
xchg
in
jge
std
and
push
out
movsl
outsl
daa
lahf
cs
lret
aas
pop
cmpsb
outsl
push
jns
xor
jecxz
int
dec
fstps
negb
js
rolb
jne
je
inc
dec
mov
iret
add
stc
test
xlat
mov
jb
push
in
outsl
adc
mov
add
or
js
push
in
dec
int
lds
xchg
xor
add
mov
loop
xchg
pop
mov
mov
mov
xor
std
aas
ljmp
cmc
push
mov
mov
mov
mov
jo
jnp
sub
test
add
pop
push
sbb
rcl
pop
orb
lea
scas
fcmovnbe
lock
sbb
orb
sbb
insb
fisttpll
dec
sti
repnz
pop
mov
repz
je
xor
inc
lcall
inc
jg
cmp
out
popa
sbb
push
push
call
hlt
lods
repnz
or
insb
pushf
xor
jnp
test
lods
xchg
ja
test
cmovno
scas
or
xchg
jo
vmovapd
out
lds
adc
lods
cmpsl
adc
ficoml
dec
or
sub
or
enter
sub
and
flds
inc
outsl
mov
les
pop
hlt
sbb
shll
sarl
jo
roll
into
adc
incl
and
jns
int3
les
cmp
add
pushf
js
jno
pop
or
arpl
xchg
inc
shll
paddsb
sbb
shlb
popf
jg
xchg
mov
mov
inc
addr16
arpl
and
mov
sbb
and
dec
and
daa
ljmp
test
xor
sbb
loope
pop
push
mov
pop
cmp
push
loope
test
negl
sbb
inc
ret
jmp
cs
mov
xchg
pop
inc
sbb
ljmp
jo
xchg
mov
hlt
adc
cmpsb
sti
pop
outsl
outsb
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
ffreep
dec
push
leave
and
cmp
cltd
shrl
arpl
sub
out
loopne
scas
mov
iret
xchg
mov
push
pop
mov
xchg
and
loope
in
les
shll
lret
adc
test
mov
sahf
xor
ficoms
insl
sbb
clc
mov
or
sbb
or
je
dec
push
and
cmp
xlat
xor
scas
sub
add
inc
jns
push
inc
mov
sub
xchg
test
lods
push
fldenv
stos
xchg
es
mov
mov
aaa
ds
xor
xchg
xor
push
nop
leave
lock
xor
adc
jbe
mov
jno
aam
add
je
mov
repnz
jo
push
out
sbb
loope
push
mov
inc
gs
cmp
test
dec
pop
mov
sbb
fbstp
adc
sarl
dec
jl
xlat
sbb
add
js
sbb
and
sub
andnps
stos
mov
popa
pop
pop
mov
ja
subl
mov
sub
jb
pop
fdivrs
pop
inc
mov
cli
clc
add
imul
xor
rclb
or
and
push
rcrl
aas
popf
and
loope
mov
sub
ja
fsubp
push
sub
jle
fsubl
repnz
or
pop
scas
inc
pop
jg
jns
fsub
fcoml
scas
adc
sbb
xchg
or
int
ss
adcb
mov
aam
pop
xchg
ret
cmc
add
jecxz
in
mov
in
test
jmp
sbb
jmp
repz
ds
rcl
dec
adc
notl
pushf
in
movsb
lret
ja
loopne
notl
sbb
push
sbb
adc
adc
mov
mov
jmp
mov
xchg
enter
cld
xchg
insl
popl
sbb
sub
xchg
mov
or
sub
inc
xchg
adc
lods
dec
inc
lret
pop
aad
popa
in
cs
cltd
push
add
xor
inc
adc
push
xor
les
and
adc
insb
into
leave
dec
push
loope
test
js
fmul
ss
out
sbb
loop
xchg
leave
cmp
test
loopne
mov
fwait
inc
rol
adc
fadd
ret
cld
leave
int
call
mov
push
test
jae
mov
adc
das
jae
inc
lods
xchg
or
call
lret
xcrypt-cbc
cmpsl
adc
insb
sti
push
xchg
cmc
sbb
daa
jb
jp
mov
sbb
in
xchg
mov
sbb
push
add
test
stc
sub
inc
sbb
fiadds
hlt
jecxz
in
add
imul
xchg
and
pop
inc
lea
arpl
push
mov
push
in
aaa
popf
out
test
push
ljmp
push
or
and
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
push
xor
jo
jge
jo
push
lahf
stos
mov
push
in
mov
and
lret
lcall
imul
js
ja
ljmp
jo
bound
jecxz
cmc
out
push
sarb
add
cmpsb
xlat
jecxz
mov
pusha
out
fimull
xchg
pop
cmpsl
adcl
mov
imul
sbbb
adc
andl
call
adc
pushf
prefetch
or
pop
adc
int3
insb
sub
in
imul
dec
shrb
add
and
adc
nop
pop
aas
cmp
addr16
ret
daa
xchg
add
xchg
push
dec
pop
sahf
fisubrs
cmp
int3
xor
sbb
mov
mov
lock
pop
xchg
scas
pop
imul
incl
scas
js
fbstp
repnz
repnz
push
sbb
sbb
imul
and
pusha
jmp
repnz
mov
cmp
mov
jl
mov
mov
cmp
push
cli
mov
testb
cmp
jns
push
and
movsl
jne
movsl
jnp
push
lret
add
les
in
xor
popa
sbb
pop
or
mov
mov
negb
jno
push
jecxz
fs
scas
arpl
or
mov
adc
sti
ja
push
pop
pusha
lods
cmp
imul
pop
ds
out
xchg
cmp
std
insl
xor
sub
jo
scas
les
outsl
mov
push
shll
fstpt
leave
es
scas
push
fmul
mov
inc
imulb
mov
test
mov
pop
sbb
sub
aaa
dec
bound
mov
and
adc
fadds
xor
ret
and
out
pop
mov
mov
test
push
rcrb
cld
mov
jmp
xchg
ret
out
inc
push
in
push
lock
or
push
jmp
sub
pop
mov
push
call
pop
scas
sub
dec
cmp
add
sbb
jmp
jmp
outsl
mov
stos
clc
je
or
cmp
mov
mov
mov
in
mov
cli
js
fsubrp
pop
inc
cmp
ret
jle
mov
lcall
fbld
mov
mov
pop
aas
rclb
decl
jo
in
repnz
movsl
mov
cmpsl
cmp
inc
loopne
test
jnp
test
cmp
and
push
imul
cmpsl
ss
je
dec
stos
out
call
stos
hlt
sbb
jp
mov
stc
ljmp
mov
stos
mov
and
fwait
xlat
arpl
ret
sub
and
ret
push
test
mov
sub
pop
ficoml
repz
mov
push
test
mov
jae
cmc
sbb
sbb
and
cmp
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shll
sub
jo
jge
jo
ret
aam
les
push
insb
xor
movsb
stos
pop
jp
loopne
hlt
xor
push
jnp
test
mov
std
and
push
mov
fildl
push
mov
cmp
jecxz
mov
into
or
push
aad
mov
and
adc
cmp
sahf
sahf
pop
mov
or
push
mov
test
mov
xchg
cmp
test
frstor
xchg
and
cs
stos
adc
push
sub
add
out
push
test
push
sbb
fisttpl
inc
shll
rcll
or
ljmp
sti
and
dec
lret
mov
test
jle
pop
cltd
mov
mov
arpl
push
mov
adc
dec
push
mov
mov
int3
pop
cld
cmp
cmp
mov
lds
scas
stos
jae
and
cli
pop
and
outsl
or
shlb
cld
mov
add
add
jl
negb
xchg
enter
pop
roll
das
subl
int
lahf
cmp
inc
xorb
lods
jbe
cwtl
pop
dec
xor
mov
lds
js
push
ret
pop
cmp
add
jne
dec
sub
sti
scas
in
test
jp
std
lret
adc
data16
inc
cmpb
push
push
lahf
sbb
call
jbe
ljmp
sbb
pop
mov
mov
and
pop
inc
popf
push
cli
scas
scas
ficompl
jae
bound
or
inc
call
cmpsb
loopne
popa
addr16
pop
pop
lret
mov
loop
loop
and
aam
xor
pop
sub
test
add
xor
movsb
xor
pop
fsubl
dec
sbb
jle
mov
push
ss
aam
leave
loop
push
orl
out
loopne
test
dec
cli
push
xor
ljmp
add
out
lea
pushf
fs
lds
and
cld
out
daa
decl
pop
gs
mov
sahf
pop
sub
sub
out
mov
push
jle
push
pop
mov
popa
test
and
test
notl
out
cmp
cld
data16
test
aam
enter
xchg
mov
inc
adc
enter
xchg
push
sub
aaa
inc
pushf
push
adc
repnz
sbbb
jle
and
jmp
xchg
mov
fstp
cmc
pop
inc
sarb
xchg
mov
mov
pop
jp
ret
cltd
and
insl
mov
sar
dec
stos
jo
repz
push
aas
mov
adcb
sub
mov
jl
inc
in
cmp
icebp
popf
cmp
imul
and
or
xor
fsubrp
sbb
dec
xchg
dec
mov
movsb
cmp
jl
mov
add
in
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
call
aaa
jo
stos
jle
jo
sub
in
test
dec
jp
or
hlt
mov
mov
xchg
cli
pop
idivb
adc
out
sub
je
add
push
lea
js
jp
xor
psrad
inc
call
add
addr16
adc
push
loop
sub
fmuls
or
lock
ss
mov
and
pop
test
cltd
add
lea
dec
xor
lcall
dec
cmp
in
sbb
movsb
xor
adc
aaa
hlt
inc
push
outsb
mov
mov
xchg
mov
lods
lods
xchg
sbb
fldl
inc
cmp
popf
pusha
sbb
push
mov
add
int3
xor
loop
mov
loopne
pushf
cld
jae
adc
ljmp
cli
repnz
pop
add
pop
jp
jecxz
lret
pushf
mov
outsl
push
or
xor
jle
rcrl
mov
iret
mov
rclb
dec
lods
cmp
sub
out
ss
add
dec
or
cmc
jmp
add
ret
sbb
push
fimull
pop
int3
xchg
out
jbe
sub
cwtl
pusha
jo
or
xor
ljmp
push
cmp
je
nop
dec
out
jnp
mov
push
inc
sbb
pop
mov
xchg
or
cli
repnz
leave
cmc
sahf
mov
inc
xor
testb
mov
mov
mov
arpl
and
insl
leave
out
ljmp
mov
int
fwait
pop
ret
outsl
imul
add
or
mov
mov
pop
cmp
adc
sub
xchg
inc
pop
cwtl
pop
aas
orb
int3
push
dec
xor
xchg
jge
les
adc
pushf
scas
dec
fnstenv
lret
sub
adc
xor
pop
sbb
lret
scas
mov
or
mov
push
mov
stos
dec
xor
push
lds
stos
sbb
cmp
pop
pop
loop
sbb
mov
in
xor
jle
push
rolb
lods
data16
out
inc
cwtl
inc
fnsave
mov
jle
push
mov
sbb
ficoms
cmp
cmp
xor
pop
ficomps
out
test
pop
mov
and
mov
push
dec
jle
cmpsb
lds
out
ret
rep
mov
jle
sbb
sarb
sarl
cmp
loopne
scas
loope
dec
push
movzwl
and
mov
jmp
ja
and
dec
xchg
daa
lds
jo
stos
jle
jo
xor
sbb
lret
adc
test
xchg
mov
jbe
filds
cld
cld
inc
pop
jl
cmp
das
loop
and
cltd
cltd
js
nop
dec
scas
push
out
lods
dec
addr16
pop
jge
cmpsb
pop
mov
loop
sbb
adc
sbbb
mov
jmp
imul
sbb
insl
jmp
jmp
sub
mov
or
stos
mov
push
mov
bound
scas
cmpsb
pop
aas
in
pop
je
cmp
cmp
sbb
dec
push
lock
dec
cmpsl
ljmp
je
inc
mov
mov
stc
dec
es
sub
sti
inc
push
ret
aad
call
call
lock
mov
cld
repz
jp
sbb
or
cwtl
mov
imul
in
andb
mov
gs
jne
inc
jnp
push
jecxz
or
jmp
std
xor
pushf
loope
stos
data16
adcb
push
adc
int
test
aas
sar
fidivrl
arpl
fildll
jl
xchg
or
inc
sarl
sarb
rcl
mov
enter
loopne
and
push
jp
not
pushf
insb
data16
aad
int3
js
push
pop
stc
mov
mov
lret
insb
loope
popa
push
sub
cli
push
rclb
xor
cmp
pop
sbb
push
out
jb
or
pop
fisubrs
cmp
insl
inc
scas
xor
lcall
pushf
test
or
add
mov
leave
test
fcompl
icebp
test
inc
std
loope
in
popa
inc
jecxz
dec
mov
call
cmp
push
and
ljmp
mov
es
push
fs
sbb
pop
iret
mov
adc
dec
or
sbb
adc
cmp
inc
mov
xor
leave
inc
mov
mov
sub
mov
inc
jmp
inc
dec
test
pop
cmp
mov
fcomps
insb
lret
inc
mov
sub
addl
push
andb
xchg
jne
dec
adcb
maskmovq
notl
xor
inc
insl
shlb
sbb
inc
pop
lods
ss
nop
stos
mov
xor
das
imul
mov
call
dec
jb
or
sub
sub
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
sarl
test
jo
stos
jle
jo
rcr
and
push
out
in
xchg
loop
popf
mov
dec
clc
cmp
xchg
out
mov
cmpsl
dec
loope,pt
push
pushf
rcrb
push
cwtl
ljmp
fstl
scas
mov
bound
xor
pop
mov
leave
inc
inc
dec
repnz
sbb
mov
scas
test
clc
adc
sahf
inc
and
out
shrb
cmp
mov
sbb
jle
pop
adc
in
push
enter
pushf
mov
sbb
fnstcw
pop
inc
popf
mov
sbb
int
je
lods
jp
push
mov
lahf
sbb
mov
mov
stos
lret
or
and
into
adc
enter
int
lock
mov
push
fimull
and
xchg
das
mov
sti
xchg
popa
inc
and
adc
jmp
shrl
loope
das
jecxz
nop
in
pop
aam
push
fdivrs
sbb
cltd
xchg
inc
dec
push
dec
mov
push
mov
fcmovb
mov
jmp
mov
inc
sub
push
repnz
pextrw
pop
fcos
add
pop
dec
adcb
repnz
pop
adc
dec
pop
mov
sbb
pop
repnz
sub
mov
bound
adc
out
lea
sub
cmp
push
xchg
scas
inc
xchg
sbb
aas
pop
jmp
cmp
jge
test
in
and
cmp
xchg
leave
jns
sbb
pop
mov
and
jbe
pop
std
xchg
or
lret
fsubs
xorl
push
dec
or
mov
pusha
std
lods
lea
sbb
push
pop
sbb
fsts
push
stos
push
inc
aaa
lods
xchg
aaa
push
xchg
add
sbb
aad
inc
ffreep
xchg
mov
daa
xchg
in
inc
push
or
cmp
sarl
mov
cwtl
std
push
popa
data16
inc
mov
push
xchg
shrb
jmp
xor
lret
cli
aas
lret
dec
cmp
lea
jg
sbb
popf
add
dec
dec
insb
into
inc
mov
mov
xchg
ds
pusha
jnp
mov
push
iret
mov
ret
or
scas
xlat
sub
and
or
pusha
and
in
sbb
sub
and
pusha
sbb
cli
cmp
dec
call
rcll
ja
inc
push
mov
hlt
sbb
add
inc
stc
int3
mov
xchg
and
iret
jns
loope
in
jbe
fsubl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
xor
je
aas
jo
cmpsl
jg
jo
pop
push
cld
pop
dec
mov
dec
stc
mov
popf
cmp
mov
mov
ret
mov
pop
mov
repnz
sar
fildl
and
ja
pop
push
ja
ja
xchg
or
pusha
jo
mov
xchg
mov
sbb
or
pushf
inc
fstpl
data16
mov
flds
mov
jnp
xchg
xchg
imull
dec
or
push
xor
mov
nop
arpl
lds
outsb
test
fsubrs
enter
out
add
repnz
rcr
and
dec
cs
sbb
adc
xchg
dec
mov
dec
ret
jb
add
push
shl
mov
lret
sbb
mov
call
push
jecxz
add
and
pusha
and
les
mov
xor
dec
fwait
xchg
or
add
lods
cwtl
xor
push
push
sahf
add
outsb
pop
pop
mov
push
jge
push
sbb
sbb
mov
mov
cmp
clc
repz
into
cmpsb
call
popa
movsl
fs
mov
pop
xlat
inc
ficoms
jae
cmp
pop
lret
mov
lock
fisubs
jmp
mov
cwtl
adc
outsb
adc
ret
js
test
xlat
sbb
pop
out
xor
jbe
pushf
jnp
xor
in
ret
cmp
fs
pop
sbb
and
aad
cmp
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
or
cmpsl
jg
jo
cmc
bound
sbb
int
in
or
jae
pop
cltd
or
out
daa
mov
jp
sti
out
fsts
xchg
adc
inc
sub
fdivs
sub
jb
sub
sub
fsubs
ret
cmp
stos
cld
xor
xor
sar
jae
sbb
pop
sbb
rclb
pushf
cmp
sbb
push
sbb
pop
addl
push
aad
mov
addl
jbe
aam
adc
ja
mov
movsb
add
dec
push
jg
fdivl
xchg
test
inc
inc
adc
jg
xchg
out
xor
ljmp
push
out
incb
ffree
insb
mov
cmpsb
es
dec
stc
outsl
pushf
inc
mov
mov
arpl
inc
sbb
xor
dec
fistps
sbb
add
test
gs
bound
sub
movsl
xchg
mov
mov
sbb
lods
xor
xor
sbbl
pop
xchg
inc
outsl
cmp
rdmsr
cmp
push
push
pop
test
and
adc
mov
stos
push
cmp
cmpsl
add
adc
xchg
mov
stos
pop
jns
je
lds
inc
and
scas
jne
push
loope
push
jo
jge
and
mov
mov
aad
mov
popa
inc
aas
add
js
addr16
dec
xchg
sbb
xchg
repz
sbb
lods
push
push
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
add
cmp
jo
jg
jo
in
pop
aad
inc
jb
arpl
sbbl
jp
cmc
into
lea
cli
mov
jecxz
add
mov
sahf
mov
loop
sub
das
fs
lret
add
gs
xchg
icebp
cltd
pop
push
nop
sahf
xor
loopne
leave
cwtl
or
add
add
mov
pop
xchg
sub
mov
lods
sbb
sbbb
sub
fistps
ljmp
adc
adc
test
mov
inc
pop
idivl
mov
dec
jae
inc
jecxz
fldt
test
fadds
push
out
movsb
shlb
in
les
cmp
mov
int
adc
call
lods
mov
repnz
hlt
test
stos
rorl
push
cmp
pop
cmc
gs
dec
shll
push
daa
arpl
mov
jb
mov
xor
push
jl
les
icebp
shl
push
xor
test
push
pop
fucomip
mov
cmp
and
sbb
mov
movsb
mov
sub
mov
mov
jbe
ds
int
add
sbb
fs
push
mov
dec
inc
inc
das
call
xchg
repnz
xchg
sub
insb
pop
mov
inc
push
cmp
test
cli
pop
mov
inc
test
jmp
mov
push
adc
hlt
inc
or
shr
pop
sub
add
jg
aam
adc
dec
fptan
jg
rcrb
jae
rolb
pop
cwtl
lods
aam
pushf
imul
mov
rcl
dec
dec
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
sub
jo
loop
jo
data16
cltd
mov
daa
add
or
adc
ja
movsl
fucomp
cmpsb
les
sub
sti
cmp
push
in
nop
mov
inc
shll
mov
cmp
mov
loopne
fsts
jge
and
push
loope
pop
sub
ficoms
mov
pushf
adc
loop
and
mov
xchg
dec
fwait
scas
push
dec
repnz
popa
daa
push
pop
stos
dec
sbb
dec
ret
mov
cwtl
sbb
or
adc
xor
aad
or
popa
mov
rcr
stos
sbb
push
mov
push
addb
fisttps
rcrb
sub
outsl
adc
and
aas
testb
jnp
outsl
ss
dec
xchg
arpl
cmp
ret
fcoms
jne
out
notl
fs
cwtl
jg
shrl
scas
sbb
aas
push
mov
push
ret
popf
leave
xor
and
ja
out
lret
mov
mov
imul
push
xor
mov
jo
lds
jno
out
je
push
das
ds
push
sahf
cwtl
and
lret
test
and
popf
in
jnp
in
stc
fsubl
outsl
es
lods
mov
cld
sub
dec
sub
decb
push
inc
jns
stc
sub
xchg
mov
xchg
das
cmp
mov
dec
fs
test
or
fcomip
sbb
jp
test
mov
add
nop
mov
pushf
arpl
jns
dec
fwait
cmp
std
test
and
dec
orb
pop
add
adc
sbb
inc
mov
adc
push
ds
jno
xchg
outsl
js
jecxz
cs
xchg
xchg
jbe
or
and
mov
mov
sub
inc
mov
fsts
xchg
sub
jecxz
scas
imul
insb
ss
xchg
lret
jecxz
sbb
cmpsl
xlat
pop
cmpb
xchg
push
xor
mov
and
dec
sbbb
std
and
push
sub
lds
cmp
jb
push
test
adc
mov
ss
or
lock
and
in
push
and
pop
loop
pop
movsb
js
adc
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
cmp
out
movsl
cmp
loop
jo
loopne
shlb
es
jle
and
andb
push
sbb
push
cmp
loop
cmp
xor
sbb
cli
std
sub
out
sbb
out
mov
inc
punpckhdq
jecxz
sbb
push
mov
inc
push
adc
push
shlb
in
pushf
inc
cltd
lcall
rcll
cmp
sub
jb
add
lods
dec
cmp
push
aas
or
lock
adc
daa
stc
inc
pop
std
les
insb
xchg
push
jb
movsl
dec
mov
mov
push
adc
stos
or
mov
jmp
or
fisubrs
cmp
jl
push
cmp
jne
in
aas
rol
bswap
or
popa
inc
mov
cwtl
sbb
add
repz
mov
xor
cmpsl
dec
sahf
add
or
popa
sub
dec
sbb
lahf
dec
or
stos
mov
andb
lods
jb
push
sbb
inc
les
fcmovu
faddl
syscall
mov
lods
in
bound
mov
test
aaa
adc
fldcw
ds
sub
push
lds
xor
xchg
scas
push
inc
in
das
xlat
scas
pop
jmp
sti
test
push
add
xor
mov
nop
xchg
sti
sub
and
dec
outsl
pop
ljmp
mov
or
adc
call
cld
mov
jno
add
add
xlat
jno
adc
mov
cmp
add
int3
call
jp
xchg
jmp
xchg
xor
addb
jbe
lret
xor
cli
xchg
mov
pop
shrb
test
jmp
jecxz
xlat
or
lret
test
or
negl
jne
jns
mov
mov
mov
lea
out
adc
cmp
stc
in
cmp
mov
pusha
out
roll
fisttps
and
fnsave
mov
movsb
mov
mov
lret
hlt
hlt
fwait
call
movsb
adc
dec
clc
add
mov
shrb
push
mov
dec
in
xlat
hlt
leave
push
adc
nop
cmp
mov
in
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
js,pn
pop
lds
and
jo
mov
imul
add
enter
push
lock
sbb
test
bound
ja
call
mov
rorb
pop
pop
fidivrs
sub
mov
shl
xlat
int
cwtl
test
push
pop
stc
or
inc
call
sub
fs
mov
ja
ja
arpl
cmpsb
jb
mov
jbe
or
or
and
cmp
pop
hlt
gs
push
xchg
mov
icebp
sar
sub
pop
sbb
inc
mov
mov
popf
fidivs
sub
adc
cmpsl
insl
xor
addl
repnz
aam
jns
orl
pushf
dec
sahf
xchg
adc
out
pop
inc
clc
lcall
push
rorb
xchg
adc
loope
pop
int
outsb
and
mul
mov
loop
mov
xor
jmp
ret
pop
lcall
icebp
pop
leave
insl
repz
ret
xor
movsl
mov
shrb
pop
push
cmpsb
push
and
aad
jns
dec
mov
push
int
and
push
fisubrs
jnp
outsl
sbb
mov
push
pop
mov
fadds
cmp
inc
lods
test
fwait
xlat
lock
mov
push
cmp
fcomps
inc
in
and
push
sbb
mov
int
gs
rcrl
push
scas
es
mov
jmp
push
rcrb
std
popa
repz
cmp
pop
bound
in
dec
arpl
idivl
lret
or
test
loop
mov
shrb
leave
stos
dec
imul
pop
pop
dec
mov
decb
or
xor
enter
cmpb
jp
cmc
leave
sti
and
xchg
fsubrs
sbb
in
clc
lcall
jns
imul
adc
adc
cwtl
loop
jg
fistl
data16
fs
adc
hlt
xor
xor
jne
pop
xchg
adc
xchg
xorb
mov
and
fwait
jnp
mov
mov
xor
out
xchg
xor
or
cmpsb
xor
movsl
fwait
mov
out
mov
iret
aam
icebp
cld
mov
mov
loopne
xchg
lods
test
and
xchg
aaa
clc
fisubs
mov
lods
jle
xor
push
push
stos
xchg
mov
dec
jg
stos
data16
sub
dec
jb
aaa
js
adc
cmp
jb
add
shr
lock
xchg
mov
ss
and
xor
in
ja
cmc
sub
in
lcall
test
fisubl
cmp
das
add
mov
jp
sahf
xchg
inc
sbb
push
and
in
mov
test
dec
jno
mov
jp
addl
or
popa
pusha
xor
xor
out
insb
mov
jle
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
ret
ret
and
jo
xchg
inc
mov
jmp
imul
aas
jmp
pushf
pop
or
jmp
lcall
cli
nop
ret
push
push
jecxz
ret
push
fists
sarb
jl
jne
dec
sti
xor
nop
ss
aad
pop
das
aas
ss
insl
clc
in
jo
ss
enter
ds
pop
pushf
push
popf
repnz
mov
adc
mov
dec
push
mov
push
push
cld
je
push
and
subl
popa
push
in
push
arpl
lock
fs
inc
test
iret
or
mov
sti
xchg
and
enter
aad
fwait
add
shl
cmp
sub
add
mov
std
add
mov
ss
sbb
cmp
loop
test
mov
or
sbb
popa
rclb
xchg
outsl
js
es
roll
pop
fmul
ret
jns
jb
movsl
and
pop
addr16
rcl
xor
fisubrs
in
or
in
mov
icebp
fsubrl
aaa
stos
mov
or
adc
xchg
cmp
jl
bound
dec
inc
jbe,pt
ret
sbb
lret
inc
test
and
icebp
cmp
xchg
decl
push
sub
adcl
cmp
stc
roll
mov
sub
cmpb
loopne
mov
mov
xor
ljmp
xchg
xchg
out
pop
shlb
test
pop
pop
rorl
sub
fnsave
and
mov
lods
insl
dec
enter
cli
xor
mov
push
or
mov
rcl
rcrb
cs
or
cmpsb
test
xchg
mov
ss
and
and
insl
bound
jp
push
lds
nop
xchg
jecxz
and
jge
sbb
jns
adc
out
or
lahf
jno
jmp
scas
rorl
scas
je
cwtl
push
xor
sub
dec
add
nop
shll
popa
mov
pop
pop
scas
daa
push
ret
ret
jo
mov
aas
or
or
nop
ljmp
fcoms
or
imul
mov
ds
push
and
data16
xchg
arpl
rcrb
insl
shr
jecxz
data16
aad
and
mov
cmpsb
aas
or
push
fwait
sbb
lahf
pop
push
ss
xlat
idivl
dec
jo
aam
cs
sub
or
pop
in
fs
icebp
aas
xchg
cltd
inc
std
xor
push
push
push
out
jl
sbb
jo
jl
inc
addb
xchg
mov
mov
xchg
add
xchg
or
ljmp
in
les
dec
push
push
clc
mov
loope
scas
mov
imul
or
lods
or
imul
dec
fs
pop
cmp
and
shrb
cmpsb
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
xlat
adc
iret
jo
and
jo
scas
pop
std
leave
add
jb
xor
push
cmp
movsl
sahf
rol
gs
or
shr
push
out
adc
icebp
or
std
mov
das
sbb
out
pop
je
pop
sub
push
mov
scas
sub
xchg
fwait
mov
pop
sub
inc
lds
hlt
jecxz
out
jecxz
jl
cmpsl
mov
rclb
cmp
inc
adc
icebp
mov
ljmp
mov
outsl
inc
sub
int3
and
lcall
dec
hlt
fwait
dec
and
jno
js
cmpb
aam
popa
xor
fdivp
mov
or
in
in
sahf
clc
or
push
push
in
cmp
fucomi
mov
sbb
dec
jbe
pushf
ss
sbb
pop
sbb
add
inc
mov
ficoms
jno
jmp
xlat
fidivrs
inc
xchg
sar
adc
xchg
inc
nop
incl
leave
pop
mov
add
mov
into
push
and
push
jmp
dec
outsl
cmp
inc
adc
hlt
sbb
cmpsl
clc
arpl
das
inc
bound
and
mov
or
or
and
xchg
ja
cmp
aad
xor
mov
pop
and
pop
ja
or
in
jo
hlt
push
adc
adc
pop
ja
adc
jae
clc
fmuls
scas
popf
stos
scas
dec
or
add
call
cltd
shl
and
insb
movsb
daa
jmp
or
pop
xchg
or
loop
mov
gs
adc
jns
mov
out
and
arpl
loopne
enter
and
test
mov
sbb
aad
je
or
mov
dec
xchg
or
jp
faddl
pop
xchg
mov
rorl
in
out
mov
add
jnp
adc
ret
jmp
jmp
xlat
test
push
ja
pop
push
stos
or
ljmp
loopne
dec
clc
xchg
or
pop
or
movsl
xor
ret
ret
xchg
mov
sti
popf
adc
lcall
lahf
loopne
les
lods
pop
out
pop
or
pop
scas
mov
xchg
ja
pop
orl
outsl
stos
push
pop
out
pop
jle
cmp
sub
in
push
jmp
aam
jne
and
es
test
arpl
cmc
or
sub
ficompl
inc
test
add
lods
cmp
in
mov
fisttpll
je
mov
lcall
into
insl
adc
fsts
leave
sub
aaa
xchg
mov
out
fs
push
stc
mov
clc
mov
cmp
xchg
jmp
rclb
pusha
pop
mov
aad
popa
push
dec
inc
rclb
and
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
mov
int3
jo
and
jo
inc
repnz
fsubl
mov
add
lahf
pop
movsb
pop
sbb
xor
fucom
hlt
push
push
mov
out
out
repz
testl
jns
mov
imul
xchg
loope
test
call
jno
pop
xlat
inc
push
aad
and
xor
add
les
divl
push
in
popf
pop
in
pop
pop
enter
fcomi
pop
lock
push
pop
add
aas
jne
xor
cmp
popa
frstor
aas
xor
sub
repnz
adc
mov
data16
sub
insl
mov
sub
jo
push
inc
aas
sbb
stc
cmp
cltd
loopne
test
mov
aam
psubusw
rolb
and
xchg
mov
js
shll
and
and
fstpt
inc
sub
or
aaa
cld
and
js
scas
xchg
movsb
sub
sbb
dec
or
or
pop
xchg
or
mov
pop
scas
psrad
mov
test
ret
dec
mov
jns
ja
jno
sbb
jo
and
xor
fcmovbe
fldcw
xor
std
ficoml
repz
mov
hlt
xchg
inc
push
inc
ret
mov
cmp
imul
xchg
aam
xchg
cmpsb
cli
arpl
sbb
sbb
pop
sbb
pop
mov
pop
inc
adc
xchg
cmp
jnp
idiv
dec
insb
pop
sub
imul
mov
jmp
cmc
sub
fisttps
int
insb
std
mov
insb
sub
sub
mov
icebp
push
bound
pop
adc
jo
inc
js
pop
ja
add
mov
or
lock
subl
test
xchg
outsl
shr
notl
and
xchg
mov
mov
push
ljmp
loopne
aam
in
mov
xor
fwait
push
mov
inc
daa
dec
jb
pop
xchg
loope
mov
and
jecxz
inc
imul
arpl
arpl
aam
ret
std
stc
jle
adc
xchg
shll
int3
mov
imul
push
sbb
call
jecxz
jl
cltd
or
andl
add
xchg
pop
push
mov
lods
aaa
or
insl
push
xor
lcall
arpl
add
lods
mov
popa
shl
imul
shlb
mov
xchg
outsl
icebp
idivb
and
jno
dec
jge
repnz
iret
mov
mov
popf
push
popa
mov
lock
ss
stos
or
and
aam
pop
pop
movsb
add
sub
pop
in
push
gs
adc
mov
out
push
dec
out
lods
cltd
mul
outsl
add
mov
mov
stc
cltd
test
adc
jnp
mov
and
movb
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
arpl
pushf
test
jo
and
jo
dec
shlb
xabort
outsb
subb
repz
and
stos
mov
sbb
or
pop
outsb
mov
mov
popa
rorl
inc
fs
cmpsl
pop
loopne
fldl
fiaddl
loope
xchg
loope
mov
jg
pop
pop
les
cs
xor
xchg
xchg
mov
adc
or
xor
shlb
fwait
test
iret
jg
popf
xchg
jnp
test
jmp
jne
mov
outsb
dec
xchg
cmp
push
sub
jl
push
pop
fxam
cmp
dec
stc
out
fwait
adc
dec
les
mov
pop
xchg
in
sti
mov
or
fistl
outsl
pop
jb
adc
cmp
outsl
xor
adc
std
add
call
mov
fistps
pop
mov
dec
adc
xchg
dec
pop
mov
sti
orb
mov
nop
shl
mov
push
xchg
push
mov
xchg
mov
adc
and
cmp
add
scas
js
icebp
and
dec
bound
sahf
lods
sub
pop
icebp
orl
cmp
ds
mov
lods
cmpl
jae
mov
fwait
pushf
pop
ljmp
arpl
adc
fnstcw
ret
push
or
hlt
jae
sbb
out
roll
mov
jnp
inc
push
xor
mov
outsb
dec
nop
jg
es
cmp
fdivs
out
jbe
inc
sub
push
push
xchg
scas
push
inc
jle
fiaddl
das
mov
test
add
scas
xchg
jl
push
sub
decl
mov
push
cmpsb
popa
addr16
sub
mov
iret
mov
sub
dec
pusha
push
fcomp
mov
mov
sbb
mov
imulb
fiadds
int3
add
or
xchg
adc
enter
push
fildl
daa
and
stos
push
inc
mov
or
rolb
inc
pop
push
sub
xor
cmp
lock
shlb
pop
into
mov
nop
mul
mov
std
push
outsl
jmp
pusha
add
xchg
inc
cmpsb
loope
sub
arpl
xchg
adc
lret
in
out
mov
add
xchg
adc
mov
cmp
mov
mov
dec
pop
or
inc
mov
mov
mov
dec
mov
ja
in
sub
pop
pop
pop
popf
dec
sbb
jmp
ds
stos
gs
scas
jbe
or
loopne
cmc
or
sarl
sti
rcll
push
cltd
and
loope
push
mov
pop
sarb
jp
add
sub
data16
std
cmpsl
ja
in
imull
xor
test
in
aas
xchg
mov
ret
popl
dec
divl
popf
or
jge
ljmp
cli
add
lock
jmp
push
pop
idiv
loop
cwtl
inc
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
int3
loopne
jmp
aad
jo
jge
jo
jmp
cli
dec
mov
add
jb
add
out
lods
in
sbb
adcl
dec
mov
icebp
repz
stos
push
cmpsl
jae
rcpps
inc
push
jns
xchg
jae
ret
outsl
xor
lods
dec
ja
mov
jnp
mov
pusha
mov
push
sub
in
jae
pop
or
repnz
and
mov
cmp
mov
xchg
push
push
out
jl
hlt
dec
mov
mov
mov
in
push
mov
outsl
push
fstpl
inc
and
loop
ficomps
sbb
and
adc
scas
test
or
cltd
mov
imul
sub
outsl
data16
iret
sbb
add
in
add
dec
sbb
ljmp
push
dec
inc
movzwl
daa
lds
xchg
dec
push
inc
cs
loopne
leave
sub
pusha
in
or
cmp
loop
aad
std
sarb
mov
push
nop
out
jae
jg
daa
cld
push
sbb
shrl
inc
dec
lods
xchg
lcall
push
fidivrl
js
daa
ljmp
add
or
idivb
cmc
in
cs
leave
mov
adc
push
xorl
xchg
pop
sub
mov
jle
push
call
fildll
xchg
outsl
jecxz
adc
div
inc
adc
or
and
sub
push
loopne
in
jno
jb
push
mov
subb
insl
dec
xor
into
mov
pop
pop
lahf
push
xor
imull
and
mov
int3
les
ds
push
setae
add
popf
mov
jae
jmp
xchg
fdivs
mov
push
pop
mov
inc
mov
out
pop
pop
ljmp
add
or
in
repz
fidivrl
call
jp
ret
add
insl
sub
adc
or
xor
arpl
mov
jmp
push
lret
xor
mov
mov
push
jnp
mov
inc
xchg
mov
std
mov
jg,pt
popa
rcll
js
daa
sahf
std
loopne
lea
xchg
mov
gs
pop
xchg
sbb
mov
movsl
mov
inc
inc
jns
and
cs
push
ret
mov
insb
or
lret
add
dec
inc
outsb
mov
adc
sarb
lret
aam
sub
cmpsb
dec
enter
jmp
add
mov
aam
int3
mov
cli
mov
sub
pop
pushf
test
sbb
mov
in
sbbl
stc
sbb
xchg
orb
cmp
je
insb
mov
fstpt
fs
lock
lods
sub
cmp
cmp
fmulp
cmc
or
xor
int
mov
mov
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
shlb
and
jo
cmp
xchg
jge
outsl
fwait
std
mov
fsub
int
mov
mov
les
mov
mov
mov
pop
jge
jae
sbb
mov
inc
lea
inc
aaa
or
cmc
cmp
dec
push
and
insl
shl
repz
push
loope
xor
dec
mov
pop
scas
roll
pop
pushf
jnp
out
inc
mov
pop
mov
fcomi
jle
add
into
shrb
pop
loope
push
lods
andb
mov
add
fimull
movsb
push
xchg
jge
sarl
scas
cpuid
xchg
mov
mov
cld
hlt
xlat
enter
sub
int3
or
jb
xor
test
lods
mov
jg
and
add
and
dec
insb
mov
mov
pop
shl
cmp
out
mov
mov
xchg
mov
or
mov
ja
dec
das
xchg
test
lods
fidivrl
pop
out
xchg
lds
inc
push
adc
fdivr
mov
mov
sbb
ds
int3
cmpl
ret
sbb
popf
jno
loopne
jle
daa
and
scas
xchg
cmpsl
jmp
jb
aam
adc
sti
sahf
scas
cmp
cmovb
loop
push
and
loopne
mov
loope
sub
pop
lods
and
sub
sub
movl
adc
pusha
xchg
mov
mov
mov
jae
outsb
das
sahf
mov
sbb
jno
lock
dec
lahf
or
cli
in
outsl
cmpsl
jg
push
imul
out
mov
sub
mov
fcmovb
add
sbb
sbb
outsb
jecxz
push
rclb
sarl
cmpsl
and
push
add
cmpsl
pop
mov
dec
mov
inc
inc
jne
movsb
mov
mul
leave
add
addr16
dec
xor
sbb
scas
leave
iret
into
sbb
dec
cmp
mov
jmp
test
adcl
jae
ss
fnsave
test
mov
popf
and
shll
adc
jne
arpl
and
push
mov
jle
pop
mov
or
cmp
xor
pop
push
mov
mov
loopne
mov
pop
pop
mov
je
test
ret
and
mov
sarb
outsb
jno
mov
add
mov
pusha
icebp
xor
lret
pop
jae
mov
ficoms
lcall
sbb
dec
scas
cli
adc
sahf
repnz
stos
push
dec
dec
pop
sub
fmuls
cltd
aad
insb
and
out
sbb
inc
mov
push
mov
adc
jp
cltd
xor
xchg
mov
jb
mov
push
pop
jg
sbb
inc
je
test
adc
scas
cmpsl
inc
xchg
pop
and
std
ds
sbb
xchg
fldcw
stos
lret
fnsave
xlat
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
or
and
push
int3
mov
adc
jecxz
inc
ret
pop
jb
leave
cmc
ja
adc
push
arpl
add
leave
cmp
int
or
add
movsl
adc
in
popa
aad
mov
sbb
ficoms
pop
aas
jecxz,pn
fiaddl
and
jp
cmp
out
ljmp
pop
pop
ret
pop
add
add
or
imul
stos
into
lea
pop
jmp
mov
test
dec
cmc
lret
mov
dec
xchg
stc
push
and
add
inc
js
mov
out
cmp
repz
add
and
in
mov
lds
outsb
jle
mov
cs
xor
cmp
iret
inc
mov
pop
pop
stos
push
inc
lea
dec
or
fldl
pop
mov
push
push
sub
mov
rol
clc
hlt
cmpsl
pop
js
inc
ja
incl
iret
pop
push
jb
jb
cltd
js
pop
add
cmc
cmp
cmp
mov
stos
test
pop
lock
cmp
xchg
out
js
push
imul
repnz
cmp
inc
sbb
push
subb
or
fldcw
xor
jb
adcl
sub
inc
add
in
pusha
dec
jo
pop
xlat
fdivrp
or
andl
pop
sub
dec
push
xchg
in
xchg
mov
sub
sti
sarl
mov
push
push
and
pop
aam
jmp
sub
sub
xchg
into
shlb
shl
add
dec
mov
sbb
outsl
adc
xor
cmp
xor
xor
push
and
sub
inc
push
das
inc
insb
mov
imul
mov
cmp
push
lret
stos
icebp
scas
or
enter
inc
test
cmp
and
gs
jecxz
xchg
outsb
and
arpl
insb
rclb
dec
movsb
je
xchg
addb
cmp
adcl
jg
adc
pop
mov
sub
xchg
dec
adc
cli
push
mov
mov
xor
mov
pop
fists
leave
andl
aad
xor
push
repz
xchg
pusha
je
fmul
inc
shrl
xchg
call
or
adc
xor
fnstcw
mov
dec
fdivrs
rorl
cmc
xchg
push
sarb
jmp
pushf
mov
outsb
lret
add
leave
es
jb
pop
jne
nop
or
pop
xor
xor
repnz
dec
data16
int
inc
inc
push
dec
add
pop
sub
jmp
mov
push
add
arpl
es
mov
enter
test
cli
sub
cwtl
fs
jb
repnz
and
dec
jle
scas
stc
sbb
clc
repz
sub
jo
inc
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
jmp
adc
jge
jo
mov
add
fidivs
sbb
mov
xchg
push
adc
dec
cmp
jge
push
jl
mov
xchg
jnp
mov
adc
mov
rcr
or
std
mov
jbe
and
mov
mov
push
jl
pop
pop
mov
push
lahf
push
ja
mov
mov
outsb
cmp
xor
stc
jg
pop
shrb
cmc
jmp
mov
nop
lods
sarl
inc
and
test
inc
sbb
pop
or
jb
pop
sbb
mov
repz
sbb
insl
imulb
push
jo
jmp
js
fcoms
pusha
popa
sbb
ficomps
pop
std
xor
mov
testb
repnz
mov
out
push
pop
rcrb
or
add
adc
lock
mov
inc
jae
out
mov
mov
sbb
das
aad
inc
push
adc
int
xor
push
pop
jne
fidivl
jg
lods
ss
mov
jo
fmuls
ss
in
inc
cmpsl
xor
cwtl
mov
idivb
mov
repz
sub
sub
add
cmp
mov
jns
jb
mov
cmp
jmp
mull
mov
loope
pop
clc
jl
or
mov
addl
dec
jg
inc
dec
sub
lods
out
sbb
in
xchg
mov
cmp
rorl
xor
shlb
push
cmp
push
rorl
push
popl
pop
les
add
loop
pop
leave
push
iret
jg
inc
les
in
aas
adc
clc
jmp
fcoml
inc
daa
pop
in
push
xchg
push
push
add
inc
push
paddd
pop
push
sbbl
xchg
shlb
mov
jp
test
orb
sbb
test
push
ror
mov
push
and
inc
jmp
mov
lret
fs
int3
pop
adc
in
clc
repnz
pop
ret
adc
test
mov
ss
sub
insl
popa
dec
push
ja
stos
push
sbb
sub
fildll
cmp
lea
scas
cmp
sbb
out
xor
outsl
fcmove
addr16
cs
test
stos
scas
inc
jle
pop
sbb
add
cmpb
cmpsb
or
in
fidivl
adc
shll
dec
cs
cpuid
pop
dec
mulps
aas
pop
into
push
xor
mov
add
scas
fdivl
lret
sbb
xchg
mov
shlb
push
push
je
jb
and
dec
fwait
mov
xchg
fsubr
dec
push
cs
out
sub
sarb
pop
das
pop
imul
xor
int3
lcall
out
xor
inc
mov
mov
push
dec
jns
fidivrl
outsb
cmpb
xchg
popf
mov
daa
sbb
jecxz
ffreep
inc
xchg
push
pop
mov
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
outsl
bound
jo
and
jo
mov
and
sbbl
cwtl
pop
mov
mov
out
xchg
ljmp
xchg
jp
mov
rorb
jmp
enter
jle
jecxz
adc
cmpsb
loope
jmp
push
push
mov
ret
push
lods
jg
add
push
adc
nop
sbb
fsubr
sub
xor
adc
fadds
ret
mov
std
add
or
jmp
add
xor
mov
mov
dec
or
cltd
xorl
ror
mov
pop
testb
cwtl
adc
adc
into
xor
pushf
adc
adc
xor
mov
lea
outsb
mov
in
sub
xor
jp
lahf
push
push
bound
ret
idivl
sahf
lods
mov
and
ss
sti
inc
inc
cltd
and
in
insl
in
or
cmp
cmp
ror
jne
mov
in
add
jbe
ljmp
cmpsb
in
cmc
add
in
sbb
pop
push
or
mov
cmp
sbb
xor
inc
out
js
sub
sarb
aam
fldl
add
xchg
jb
inc
shll
sbbb
lock
mov
das
movb
or
and
xor
jle
jae
stc
and
out
mov
cld
mov
mov
mov
push
movsb
mov
repz
loope
sub
popa
bts
ss
mov
cmp
push
sub
sti
push
pop
loop
fidivs
xor
scas
mov
and
cld
repnz
xlat
mov
jmp
adc
fistps
or
stos
push
decl
into
outsb
daa
xchg
popa
fadds
add
sbb
mov
mov
cmc
add
push
into
or
orb
sub
leave
adc
sub
push
mulb
push
arpl
inc
dec
sbb
sub
dec
cmp
fsubrs
and
xchg
je
sub
jmp
and
mov
inc
jb
add
xlat
push
fwait
xor
pop
imul
in
xchg
pop
adc
mov
dec
cs
mul
and
sti
or
push
das
aad
pop
icebp
int
rorl
add
ret
ss
adc
dec
scas
adc
mov
jle
and
push
sbb
pop
xlat
inc
mov
aaa
jmp
cli
jecxz
add
out
dec
or
xchg
cmc
push
xchg
hlt
adc
and
int
setge
jae
adc
stos
mov
jge
pop
out
movsb
mov
fidivrl
rdmsr
xchg
cmp
mov
cmpsb
repnz
add
cmp
cmp
bound
popf
pusha
jge
xchg
dec
mov
jecxz
push
lret
dec
movnti
stos
cwtl
xchg
rcll
xor
test
adc
push
xchg
icebp
test
lea
jmp
add
out
out
xor
call
scas
jo
and
jo
jnp
push
repz
jg
xchg
cs
adcb
xor
iret
xchg
cmc
sbb
xchg
xor
jmp
or
mov
ret
push
imul
lods
jle
fdivrs
ja
sbb
mov
lcall
das
inc
loop
jae
lcall
push
negl
lods
cmp
adc
inc
xor
inc
loope
in
mov
gs
stos
aaa
cmpb
sti
mov
xchg
jnp
inc
int
and
repnz
cli
addr16
hlt
jne
dec
jb
mov
sub
movb
out
mov
sbbl
push
xor
out
packsswb
flds
fidivrs
or
inc
mov
push
mov
in
sbb
ja
dec
cltd
lret
dec
cmp
pop
rcll
cmc
mov
dec
mov
out
sub
fmull
aad
ljmp
mov
fcompl
sub
push
mov
jb
shrb
lea
adc
sar
dec
fildl
mov
repnz
shrl
aad
cmpsb
adc
js
jo
xor
daa
push
xchg
aam
stos
out
cltd
add
das
clc
xor
jecxz
or
addl
jp
mov
enter
push
lods
cmp
jg
mov
xchg
enter
xchg
dec
sarl
pop
cs
test
insb
outsl
mov
xchg
aam
sarl
pop
push
leave
leave
mov
into
and
fwait
push
clc
pop
mov
ficompl
and
iret
shll
in
cltd
jbe
stos
sub
ret
adc
divb
les
shl
and
daa
out
and
rclb
add
shll
sahf
pop
inc
add
and
push
cmp
pop
js
dec
in
inc
jp
xor
and
aam
das
inc
cmp
mov
xor
fsubl
testl
sub
das
ja
sar
jno
pop
add
dec
xrelease
hlt
stos
cmp
adc
cmc
push
inc
daa
xchg
lahf
addr16
and
dec
sbb
inc
in
xchg
pop
push
cltd
test
scas
jecxz
pop
mov
std
inc
jmp
jle
movsl
xor
ja
pusha
jg
mov
imul
mov
repz
repnz
test
push
mov
fucom
add
add
rep
std
mov
jne
mov
jl
repz
mov
repz
jp
lock
cli
mov
lds
sub
push
movsl
pop
push
inc
cmp
aaa
pop
hlt
jp
mov
int3
mov
fistl
mov
out
repnz
inc
stos
pushw
pushf
lcall
xchg
aas
pop
and
and
iret
xchg
xor
pusha
ds
and
addb
add
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
ljmp
jo
jge
jo
mov
jl
dec
cwtl
push
or
ret
das
les
xchg
out
mov
xlat
sbb
mov
sub
or
movd
jo
inc
es
movsb
shrl
dec
push
sarl
mov
cwtl
into
aam
add
pop
movsb
rcrb
mov
dec
cmp
xor
lds
jb
imulb
mov
sti
shlb
test
adcl
aaa
aaa
fwait
lret
sahf
xchg
mov
add
push
imul
jo
xchg
sbb
inc
fucomip
jle
push
movsb
fstpt
je
repnz
push
and
mov
addb
cld
addl
mov
push
jecxz
xchg
outsb
jbe
add
loopne
pop
ret
xor
inc
or
fidivrl
lock
mov
pop
mov
mov
andl
mov
xor
pop
jo
outsl
mov
hlt
fs
add
dec
iret
aaa
sub
jmp
sti
mov
repz
mov
cld
or
mov
scas
divb
xchg
test
ljmp
in
xchg
dec
dec
push
lahf
mov
sahf
stos
shlb
jns
push
popf
jno
mov
push
out
cmp
adc
sbb
movsb
scas
sub
mov
and
popf
shlb
and
sub
mov
xchg
rcrl
push
push
pop
pop
sti
pop
or
shrl
aas
push
dec
push
cltd
ja
fwait
push
shl
nop
into
add
pop
sub
lcall
dec
fbstp
ror
arpl
nop
cmp
lret
and
bound
pop
jae
or
mov
xchg
test
aas
fdivrs
sti
push
xchg
add
jno
cld
pop
inc
add
xchg
ret
sbb
out
cld
cmp
stos
decb
jns
cmc
push
add
sar
pop
sub
pop
cmc
xor
jmp
xor
push
mov
out
scas
sti
lret
out
sub
xchg
test
mov
dec
cmp
out
jp
add
pop
xchg
in
ja
dec
and
fistl
shrb
cli
cmpsl
lret
bound
jmp
lods
imul
and
dec
jg
out
fnstenv
js
sarb
mov
lret
fdivrl
ficomps
daa
rorb
add
pop
jl
mov
adc
shrl
push
push
pop
paddusw
pop
jae
sub
iret
int
xor
scas
dec
sub
movsb
aam
loop
pop
popf
mov
mull
aaa
pop
xor
imul
add
clc
ret
xor
hlt
ret
cld
fisubrs
imul
and
adc
add
xchg
cmp
mov
subb
fldenv
lcall
bound
pop
pop
aam
or
push
sbb
call
mov
mov
jmp
out
mov
ja
add
xchg
out
jo
and
jo
cltd
aad
mov
xlat
popf
xchg
stos
repz
sub
mov
push
mov
imul
and
or
mov
mov
lods
outsb
inc
pusha
sub
out
cmp
jno
mov
xor
jmp
mov
dec
xchg
daa
pop
and
adc
jo
or
mov
push
es
inc
stos
lahf
into
in
cmp
dec
les
cld
cmp
push
movsl
or
repnz
pop
push
xchg
aaa
dec
mov
data16
fstpl
test
xor
cmp
lds
ret
and
mov
aas
call
insb
inc
or
pop
in
xchg
stos
rorl
std
shrb
mov
in
dec
es
and
push
sub
out
push
addr16
ljmp
mov
jnp
jno
cmc
or
fs
sub
dec
shrb
gs
pop
push
mov
pop
addl
insb
push
inc
cmp
push
add
jle
lcall
mov
sub
enter
movsb
mov
test
jp
xor
lock
out
mov
pop
movsl
out
int
sti
sbb
fists
xchg
push
sub
ss
push
mov
mov
lods
insb
xor
data16
cmpsl
dec
pop
and
inc
popf
lods
movsl
in
mov
sarb
sub
outsb
dec
mov
push
fistpll
rorb
mov
push
das
out
xor
bound
ja
bound
push
in
push
mov
into
add
mov
or
pop
dec
rolb
ret
push
aas
jbe
sub
cs
fmull
fcmovnu
sub
pop
mov
inc
pop
inc
and
adc
mov
mov
mov
ds
mov
andl
and
in
int3
xor
inc
mov
divl
add
and
stc
mov
and
rcrb
xor
out
cmpsl
leave
imul
xchg
and
addr16
lret
jl
jg
cmpsl
cltd
pop
cld
aaa
mov
test
sbbb
popa
sub
pop
inc
pop
sbb
sub
aam
push
xchg
lcall
xchg
lret
ss
rcr
aam
inc
sbb
in
add
add
ljmp
daa
push
add
dec
aam
xor
cmpsl
xor
rep
insl
push
push
das
jl
dec
imul
test
std
lret
lret
cwtl
pop
out
mov
cmp
mov
ret
mov
cmpl
leave
lcall
lahf
enter
jle
pop
data16
sub
clc
mov
lock
xor
rorb
mov
mov
add
loope
gs
cmp
out
popf
fs
xchg
sub
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
notl
arpl
push
xchg
jo
lahf
jge
jo
cmp
imul
jle
pop
loope
divl
icebp
addl
push
outsb
inc
ss
ljmp
xor
push
xor
bound
dec
daa
push
shrb
leave
jne
or
sbb
das
clc
arpl
push
jns
add
fldl
mov
xchg
pop
es
jne
or
xor
aam
cmp
cmp
and
push
es
cmpsw
in
jae
into
repz
out
movsl
aaa
xorl
jnp
je
xor
fiadds
lret
cmc
push
cmp
jg
adc
inc
xor
lea
sbb
push
adc
test
jle
jle
push
mov
pop
aam
mov
sbb
and
jnp
test
push
mov
inc
mov
pop
nopl
pop
pop
das
ljmp
sbb
pop
pop
repnz
adc
idivl
hlt
std
out
mov
lahf
cmp
mov
mov
ss
or
cmp
and
pusha
inc
stos
sub
gs
or
lea
jle
jp
dec
les
cmp
mov
lods
mov
sub
mov
fcmovnb
mov
cmp
out
testb
shrl
js
pop
ret
xchg
aam
sbb
loope
fcoml
shr
sbb
push
fwait
push
ja
jle
sbb
mov
mov
rep
inc
stos
lret
xchg
jno
enter
cmp
mov
out
fstp
push
cmpsl
outsl
jns
stos
popf
pop
leave
sbb
out
jb
cltd
and
ficomps
scas
push
adc
insl
stc
cmp
fs
jecxz
sahf
mov
movsb
pop
mov
mov
sub
es
rorb
aad
clc
mov
push
es
imul
xchg
fs
stos
hlt
mov
xor
sti
mov
repnz
test
pop
fstpt
mov
lcall
sub
daa
sbb
out
ret
sbb
jne
or
mov
xchg
jns
out
inc
adc
and
fwait
mov
mov
scas
and
adc
scas
ja
scas
in
test
jmp
repnz
imul
je
icebp
loope
clc
pop
test
xor
mov
pop
fsubrs
bound
insl
pop
add
cmp
pop
mov
lea
jl
int
bound
jb
push
aam
or
test
mov
mov
jge
adc
out
push
je
mov
push
int3
sub
jo
cli
ffreep
dec
sbbl
flds
popf
mov
sub
into
push
cmpsb
xlat
mov
lock
mov
xor
cmovg
xchg
scas
xchg
fwait
loope
sbb
fs
lret
pop
sbb
inc
pop
xchg
fdivl
or
scas
or
jno
pop
jne
adc
lret
insl
jge
insl
stos
rcrb
push
push
mov
int3
stos
lods
mov
cmp
cmp
add
stc
stos
sub
iret
and
jnp
mov
mov
mov
add
stos
mov
pop
or
bnd
insl
pop
add
fstl
xchg
in
adc
or
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
mov
cmp
call
jo
pop
inc
push
add
mov
push
mov
lods
cmp
sti
xor
or
fisubs
into
in
and
int
sub
mov
xchg
add
adc
popa
sbb
ds
lahf
xchg
fbld
cmpsl
cmpsb
and
iret
jb
xor
insl
jmp
daa
adc
adc
lahf
mov
inc
mov
mov
lods
adc
sub
mov
cwtl
outsl
jmp
xchg
insl
scas
loope
cmp
test
lods
and
dec
shl
lret
cmp
push
mov
adc
cmp
movsl
sub
xor
xchg
push
mov
or
ljmp
imull
cld
les
mov
pop
ret
clc
int
lret
mov
rep
and
ljmp
stc
pop
dec
inc
lcall
mov
je
jecxz
xchg
sbb
sbb
cwtl
cltd
dec
out
sahf
aaa
lock
out
mov
pop
mov
popf
xor
iret
in
push
inc
sahf
iret
add
repz
inc
cmp
das
xchg
xchg
lret
leave
pop
dec
xchg
outsb
cmp
mov
inc
outsb
mov
or
dec
ljmp
mov
inc
mov
add
movzwl
push
fwait
aaa
fisttpll
push
in
inc
cmpsl
xchg
stos
jne
shrb
loopne,pn
rcr
sub
test
push
lea
aaa
xchg
adc
jg
lcall
mov
dec
push
jae
push
lret
stc
fsubs
mov
adc
fidivs
lods
shl
in
push
dec
fildl
je
adc
adcl
mov
sti
movsl
xchg
push
mov
push
subl
ret
pop
dec
out
jne
add
cld
shll
dec
jbe
pop
xchg
and
cmp
push
iret
xor
push
xor
les
imul
mov
jae
dec
cmc
pop
add
cwtl
mov
stos
xchg
sbb
nop
cld
push
or
fistl
push
inc
je
lret
sub
sahf
pop
iret
and
pop
or
aas
sub
std
sub
dec
push
dec
inc
pop
bound
jmp
int3
pop
inc
xchg
lods
lret
mov
dec
mov
xor
lds
jo
stc
test
lock
and
jbe
or
stc
insl
movsb
and
fsubrs
js
shlb
jmp
shl
fidivl
pop
cmp
nop/reserved
outsb
pop
pusha
notl
and
imul
dec
je
lcall
test
loopne
outsb
inc
push
sbb
mov
int
and
fldcw
rcll
out
sub
jae
repnz
inc
iret
leave
add
and
add
ret
jg
lret
or
enter
or
movsl
cli
adc
cs
xchg
add
mov
push
add
xor
out
js
data16
std
adc
sbb
scas
loop
fidivrl
in
sbb
xchg
arpl
xor
or
scas
push
mov
cmc
xor
cmp
sub
inc
cmp
clc
lret
aas
xor
or
sar
movsl
mov
inc
loopne
imul
pop
scas
or
ss
xchg
mov
test
scas
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
rorl
lret
inc
cmc
jo
lahf
jge
jo
leave
mov
inc
mov
out
lock
or
fnstcw
loopne
movsl
inc
fiaddl
je
mov
sub
lds
outsl
dec
icebp
std
movsb
rolb
imul
outsb
jne
iret
add
adc
xchg
inc
jo
testl
insl
stos
mov
push
sub
push
fwait
jno
mov
xchg
xor
add
subl
jno
orl
movb
mov
pop
fdivs
sbb
lret
ret
shlb
pop
push
jb
pop
arpl
mov
jnp
mov
sbb
inc
dec
jbe
repnz
jae
call
fisubs
push
int
in
mov
jno
mov
pop
xchg
int
out
lret
add
inc
inc
adcb
in
xchg
sbb
mov
jmp
pop
push
sbb
adc
add
in
jnp
outsl
shll
test
mov
je
cmpb
or
adc
pop
jne
jno
stos
or
mov
jg
ja
or
sti
jbe
jo
iret
sarl
popa
inc
std
repz
add
int
scas
jmp
jecxz
bound
sub
xchg
mov
das
imul
adc
jae
mov
scas
incl
nop
inc
rolb
loop
in
sbb
jmp
add
lea
fwait
or
jmp
xor
mov
xor
mov
xchg
popaw
notl
ss
inc
push
and
xor
mov
stos
mov
daa
xchg
cmp
jle
out
mov
mov
scas
imul
std
cs
mov
pop
inc
xor
add
mov
xor
sahf
jg
dec
shrb
iret
aad
sbb
push
cwtl
add
or
stos
stos
divb
pop
lret
sti
mov
and
add
push
out
mov
jno
outsl
add
push
push
inc
fmull
repz
inc
je
dec
xchg
push
jle
arpl
or
divl
lea
test
dec
jo
pop
stc
jns
mov
call
movsl
rorb
fdivs
loopne
or
jne
cmp
scas
mov
scas
sub
movsl
sub
nop
jl
cmp
cmp
lea
inc
inc
lret
fistpll
push
mov
insl
mov
movsb
inc
mov
leave
cmp
fs
sub
adc
mov
mov
mov
add
cmp
jne
push
mov
and
ljmp
loopne
jne
and
cmp
aam
cmp
add
and
push
mov
insb
cmpsl
xchg
xor
adc
es
xchg
mov
adc
cltd
mov
jmp
incl
jns
push
int
clc
mov
std
dec
notb
sbb
cmpl
outsb
inc
push
pushf
sub
stc
lea
cmp
jno
fsubl
or
push
xor
sbb
rcll
aad
scas
sub
into
jo
pop
cmp
jg
lds
mov
in
scas
ret
dec
bound
fsubs
mov
lahf
fnsave
pusha
sbb
push
loop
xchg
fxch
push
in
sbb
add
xor
in
mov
lds
movsl
aam
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
xor
rolb
lahf
jge
jo
cs
clc
arpl
pop
fsubs
cmpsl
cmp
mov
mov
scas
into
lcall
mov
pop
ficoms
push
mov
add
fmul
sub
mov
das
ds
call
dec
cmp
hlt
and
inc
out
cs
and
push
repnz
xorb
popa
into
int3
outsl
lret
jge
notl
lea
mov
stos
cmpsb
into
fsubrp
stc
cwtl
mov
jle
xlat
cli
xchg
icebp
xchg
in
arpl
pop
stc
ror
rorl
lret
rcrb
incl
push
aas
push
inc
lret
lods
mov
and
negl
sbb
xor
adc
aas
mov
mov
enter
cld
pushf
dec
insb
lret
adc
push
cmp
push
dec
pop
inc
fs
dec
lret
add
lcall
jnp
inc
cli
scas
orb
dec
test
mov
dec
ja
cmc
leave
sbb
mov
lahf
jbe
jmp
jno
mov
xlat
mov
enter
or
lret
popa
add
roll
jbe
mov
sbb
out
sub
xchg
mov
push
or
inc
xchg
mov
or
or
fsubrl
lods
les
xlat
lahf
ss
jp
in
xor
mov
xchg
sub
test
imul
das
outsl
stc
mov
or
dec
lret
xchg
movsl
mov
xor
sti
ds
push
shrl
push
enter
mov
mov
lods
fsub
pop
add
xor
mov
sarb
movsl
aam
xchg
fistl
pop
mov
inc
adc
cmc
sub
mul
xor
int3
vdivps
jo
mov
insb
shl
hlt
mov
jl
jnp
outsb
aas
iret
push
mov
popf
popf
outsl
aam
cwtl
iret
xchg
xchg
jns
pusha
bound
sbb
mov
lret
push
add
testb
mov
out
adc
incb
sbb
cmp
insb
mov
fwait
aad
mov
mov
popa
xor
push
ret
cmp
insb
pop
push
mul
sbb
adc
sub
aaa
sub
or
pop
aam
adc
ss
mov
cmc
jge
push
xchg
in
jmp
mov
sarl
cmpsl
add
fimuls
popf
mov
fsts
bound
mov
sarl
mov
cmpsb
inc
pushf
mov
cltd
mov
aaa
insb
out
jnp
cmpsl
jb
sub
mov
mov
jo
push
sub
fdivrs
les
cltd
pop
xor
xchg
push
xbegin
jl
jno
ret
andb
mov
dec
ja
sti
lret
lods
es
pop
jge
mov
faddp
movsl
xchg
inc
std
inc
sbb
add
repz
roll
clc
jmp
adc
arpl
pusha
mov
adc
jle
lds
mov
xchg
ret
jne
jae
inc
cmp
fldt
and
fcoms
sub
inc
movsl
stc
pop
subb
fimull
fldl
fisttpl
leave
sbb
mov
clc
flds
addl
js
inc
ljmp
push
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
xchg
xor
add
jo
lahf
jge
jo
xchg
xchg
add
enter
test
mov
fsubrs
mov
mov
addr16
pop
lods
mov
xchg
cmp
cmc
clc
call
push
jl,pt
lds
lods
push
or
mov
inc
aaa
es
scas
cmpl
add
ret
popf
out
push
jb
filds
sub
outsb
dec
mov
sub
ret
inc
sub
mov
xchg
das
dec
addr16
mov
imul
rol
cmp
repnz
cmp
cmp
repz
popf
cli
loop
xchg
mov
xlat
xlat
pop
pop
mov
fld
mov
in
cltd
and
or
or
rorb
push
cli
or
or
mov
xlat
push
aad
je
sahf
rolb
inc
dec
sbb
push
cld
ret
in
push
add
dec
scas
dec
cmpl
dec
and
push
scas
add
sub
and
xchg
jne
aam
add
mov
ss
std
popf
mov
sbb
sub
sbb
orb
mov
into
xchg
push
xchg
fwait
mov
stos
cmpsb
mov
les
inc
xor
pop
shl
cmc
pop
lds
and
and
lret
push
inc
ficoms
insl
xlat
repnz
pop
cmp
dec
adc
popf
add
xchg
pusha
jo
leave
outsl
test
pop
fsubs
roll
adc
xchg
ljmp
ds
sbb
push
idivb
or
data16
js
or
or
aad
lahf
loop
sbb
pusha
cld
sbb
dec
rcrb
and
movb
xor
pop
mov
adc
and
lret
cmc
adc
fs
xor
lret
push
std
jno
push
rcrl
fists
dec
cmp
mov
push
pop
push
or
nop
push
cmpsb
pop
pop
sahf
stos
add
arpl
clc
xor
loop
enter
mov
pop
mov
flds
xchg
cld
jno
pop
scas
cmp
jne
stos
icebp
dec
aam
inc
cwtl
cs
mov
dec
pop
cmp
hlt
rorl
sahf
pop
popa
adc
jbe
mov
mov
aam
cmc
enter
ret
sbb
mov
scas
mov
add
aam
int3
mov
adc
ret
lods
movsl
jmp
aam
cmp
dec
ss
jbe
push
jg
sbb
shlb
pop
les
nop
fldenv
push
or
mov
hlt
loop
adc
add
xchg
lods
aad
sbb
cmp
add
subb
jne
test
push
xchg
insb
in
cmpb
mov
inc
mov
int
mov
mov
jne
jecxz
adc
push
fldcw
xchg
xlat
in
sar
jmp
mov
loope
xchg
adc
cmp
pop
and
xlat
push
xchg
xchg
adc
loop
dec
es
add
in
scas
out
sbb
mov
or
imul
pop
push
sub
bound
add
xor
into
sti
xchg
lods
sbb
pop
or
aaa
es
in
aas
mov
popf
aas
sahf
mov
or
and
test
dec
ss
and
push
les
or
out
mov
push
popf
pop
mov
mov
frstor
adc
add
add
jne
sub
lret
into
aaa
and
mov
jge
jo
aam
dec
mov
mov
lret
insl
adc
push
mov
jg
push
dec
mov
push
jo
or
push
dec
negb
fldenv
andb
inc
sbb
andb
outsb
and
lahf
fs
push
mov
add
std
ljmp
mov
fistps
lods
pop
lret
fs
ret
sub
xchg
loop
popf
in
popa
ffreep
mov
push
xorb
pop
std
pop
xchg
dec
cltd
add
sub
jae
jmp
pop
pop
scas
inc
sbb
hlt
mov
clc
loop
push
pop
outsl
mov
sub
aam
stos
jg
mov
dec
and
loope
ljmp
push
shll
mov
xlat
ljmp
or
push
mov
push
pushf
pop
sbb
mov
jecxz
sbb
dec
cmpsl
daa
data16
test
add
in
xor
xor
or
jle
arpl
iret
or
jg
pop
jnp
sbb
xor
push
cmp
ss
leave
add
jo
or
and
std
fucom
push
loop
push
cmp
dec
popl
add
mov
cmc
repz
push
dec
fwait
inc
adc
cmc
sarb
lcall
xlat
pop
dec
add
stos
xor
fs
mov
int
pushf
jge
loope
jmp
mov
pop
dec
or
mov
imul
adc
jge
popf
lret
inc
pop
sbb
fildl
stc
lock
rcrb
sbb
mov
mov
leave
cmp
mov
push
repnz
mov
mov
aad
add
ds
push
xchg
xchg
sbb
rclb
push
mov
jmp
jg
lock
or
push
cltd
sbb
rcr
mov
adc
pop
fmuls
jno
pop
int3
pop
adc
nop
mov
and
popa
jmp
mov
rorb
and
mov
aas
dec
or
add
xchg
pop
cmp
xor
xor
out
sub
movsl
fdivrl
adc
pushf
popf
out
dec
subb
ret
mov
jns
fs
out
aaa
test
aad
in
lds
inc
xor
mov
es
aam
ret
mov
cmpb
or
push
mov
dec
imul
shlb
aam
arpl
cmpsl
adc
ret
andl
or
out
int
movsb
inc
xchg
xchg
xchg
cmc
cltd
sti
cmp
cmp
call
add
xor
jno
inc
js
mov
lahf
adc
js
sbb
jns
mov
jae
ficompl
push
mov
inc
lock
and
sub
insw
outsb
cvtps2pd
or
sarl
cmp
arpl
mov
and
pop
cltd
push
vprotq
sar
lods
nop
popf
mov
sbb
stc
sarb
mov
mull
and
jecxz
into
gs
sbb
es
sub
mov
hlt
fwait
shrb
popa
push
cli
ffreep
or
rcll
das
pop
rcl
out
dec
lock
divb
mull
push
imul
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
add
add
roll
jo
ffreep
lret
nop
aam
fsubl
push
xor
aas
lahf
sbb
lods
push
imul
aam
out
pushf
inc
pop
icebp
rcrl
xchg
repnz
lods
loope
sbb
stos
and
ficomps
scas
enter
loope
xchg
mov
mov
cld
mov
dec
inc
sbbl
xlat
jge
push
push
stc
sbbl
and
jge
sbb
jne
sbb
int3
data16
push
icebp
mov
in
jmp
push
daa
xor
xchg
jns
mov
adc
cmp
pop
cmp
add
mov
shr
xor
stc
scas
push
xor
scas
icebp
fisubs
push
or
jns
mov
scas
into
push
mov
stos
ja
pop
vpsrlq
movsl
stos
nop
cmp
pop
pop
jns
gs
dec
mov
aad
fs
sbb
out
hlt
addb
sub
jmp
sbb
stos
arpl
iret
and
jmp
pop
adc
addl
into
hlt
dec
call
stos
insb
xlat
sbb
jge
out
jnp
xchg
pop
scas
lods
scas
push
popf
sbb
test
rolb
repz
pop
and
mov
mov
ds
pop
dec
and
movsl
jl
add
lcall
inc
addb
fs
aas
inc
leave
outsb
xchg
adc
out
pop
jecxz
outsb
pop
and
popa
jns
fs
das
sub
add
pop
decb
or
stc
jl
mov
push
pextrw
xchg
jne
rorl
push
sbb
mov
cmpsl
cmp
jp
mov
pop
mov
mov
mov
fadds
daa
cmp
es
ret
scas
mov
cmp
mov
sbb
sarl
jno
inc
ja
imul
pop
mov
lods
cmp
xor
out
mov
movsb
out
shlb
fs
cli
divb
jo
ljmp
ljmp
outsl
fwait
daa
ja
or
and
lcall
inc
test
ds
xor
or
cmpb
push
aas
daa
ja
repz
dec
cld
cwtl
popa
cld
push
data16
inc
insl
inc
adc
in
loopne
sub
inc
mov
test
dec
aaa
or
xchg
dec
fisubrs
pop
getsec
ss
scas
stos
xchg
mov
jne
int3
fsubrs
pushf
xchg
fcompp
sbb
mov
pop
mov
and
xchg
and
outsb
test
in
dec
ljmp
lods
test
push
push
push
xor
sub
lret
sub
lock
dec
mov
push
sub
xor
mov
fnstcw
sub
pop
pop
pushf
lahf
pop
jo
leave
add
or
repnz
mov
push
call
outsb
ljmp
jb
repz
xchg
dec
fstpt
cmpsb
insb
adc
in
jno
movb
in
mov
or
cs
mov
pop
rcll
clc
cwtl
mov
inc
ret
ret
cltd
push
nop
popf
aas
jae
jbe
xor
clc
test
mov
push
fwait
sbb
jb
in
dec
daa
loopne
pop
pop
jmp
rcrl
jp
pop
lcall
cmp
es
lahf
push
daa
dec
push
mov
jne
test
test
sarb
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
push
add
xorl
jge
jo
daa
jo
sub
mov
pop
out
dec
dec
insl
lods
mov
push
jbe
mov
sbb
shll
pop
outsb
clc
or
jo
jnp
xor
int
shlb
mov
mov
jno
inc
lods
dec
xchg
lock
push
mov
jp
and
adc
fiaddl
sbb
fwait
mov
fstp
mov
les
int
xchg
cwtl
cltd
clc
popa
jb
and
addl
and
movsl
orb
pushf
pop
push
xlat
pop
rcrl
js
or
or
leave
test
clc
out
std
xlat
mov
fisubs
xlat
mov
lcall
xor
jbe
sbb
or
ss
xchg
cmp
mov
pop
xchg
enter
adc
sbb
das
inc
sub
loope
daa
and
and
dec
sbb
mov
xchg
sti
decl
mov
push
xor
add
cltd
ficomps
lahf
ss
push
sbb
fdivs
jl
fxch
and
int
cmp
mov
jp
or
add
ljmp
in
and
aad
xor
or
adc
jg
cmpsb
push
outsb
and
push
mov
loope
and
xchg
xchg
push
xorb
out
xchg
loope
aam
cmpsl
std
xchg
push
call
mov
jle
xor
push
outsl
loopne
or
xchg
mov
cmp
jmp
call
inc
out
mov
push
push
mov
ret
mov
add
ret
jle
popf
mov
jl
xor
mov
nop
adc
repnz
ret
out
repz
jle
push
cmp
cli
jecxz
and
shrl
push
sahf
and
icebp
lret
cld
dec
pop
ss
add
inc
int3
shrb
dec
insb
dec
inc
enter
cld
xchg
fld
movsl
repnz
push
call
stc
dec
iret
inc
out
push
dec
mov
cltd
and
cmp
mov
ror
xorb
mov
scas
ljmp
hlt
xchg
addr16
mov
mov
ja
cwtl
cmp
pop
lea
jne
xor
jmp
fisubl
jo
mov
sahf
pusha
push
push
test
pop
jns
mov
out
rcrb
pushf
aaa
or
inc
enter
in
jle
push
pushf
xor
orl
cmp
lcall
aad
cmpsb
insb
mov
bound
addb
dec
pop
push
fsubrs
jge
mov
and
nop
xchg
sub
das
inc
push
insb
push
mov
lcall
mov
push
inc
pop
mov
mov
push
adc
pop
bound
mov
lods
or
popa
aas
jg
jmp
btr
mov
mov
mov
jp
enter
sbb
stc
mov
mov
pop
dec
imul
push
fiadds
in
mov
or
xchg
les
mov
imul
xor
test
rcl
mov
sub
mov
aam
aaa
or
sbb
cmc
jle
lahf
mov
jmp
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
lahf
jge
jo
add
sbb
mov
inc
orb
or
stc
fbstp
scas
xor
fcmovnu
adc
ds
cmp
mov
lret
outsb
data16
push
daa
push
cltd
mov
or
clc
fwait
jno
iret
fcmovbe
mov
orb
jle
and
sbb
fsubl
outsl
pop
jl
sti
sahf
aad
movsl
pop
and
dec
xlat
jb
lods
into
inc
fsubs
pop
add
mov
test
or
mov
mov
imul
jmp
inc
je
rol
movsl
mov
fnstsw
int3
jno
inc
std
pusha
and
jmp
and
ret
or
mov
popa
sbb
push
jge
adc
cli
mov
neg
jge
jecxz
xchg
xchg
dec
and
sti
sahf
pushf
adc
jp
and
xchg
out
pop
and
ja
call
lods
jne
xchg
adc
adc
or
dec
cmpsl
imul
test
push
xor
scas
dec
lods
inc
roll
rcl
clc
mov
mov
mov
cmp
dec
jp
repnz
insl
cmpsl
jge
imul
add
jecxz
jno
push
jne
call
sahf
leave
mov
dec
clc
in
jle
sbb
push
pop
pop
xchg
adc
mov
jnp
movsb
mov
movl
xor
lds
addr16
fcomps
sub
dec
mov
xor
aas
adc
or
sub
push
addr16
mulb
out
test
jmp
repnz
jp
adc
rcrl
pushf
adc
sub
push
lods
mov
cmpsl
and
xor
dec
jecxz
daa
sub
push
out
jae
in
sub
or
cmp
cmpsb
loop
pop
out
mov
inc
js
icebp
js
adc
mov
lds
bnd
pop
loopne
adc
loope
jne
movsb
or
fcmove
stos
jecxz
hlt
lods
sbb
or
push
inc
mov
mov
sbb
rorl
das
movsb
jb
mov
and
adc
leave
clc
lock
pop
sbb
and
out
lret
xor
insl
fwait
out
dec
in
adcl
loope
aam
push
sub
adc
bound
xchg
jmp
daa
gs
jns
iret
loopne
jb
les
pop
xchg
ficomps
xchg
in
pop
imul
mov
test
inc
dec
inc
mov
push
add
call
fisubrl
dec
adc
jl
xchg
jmp
mov
dec
test
lcall
mov
inc
xor
loope
mov
push
push
bound
sbb
andl
inc
mov
pop
gs
jge
cmc
add
into
cwtl
inc
test
testb
subl
pop
mov
nop
push
jg
inc
repz
inc
pop
popf
sahf
out
inc
hlt
loope
xlat
int
pop
mov
shlb
or
repnz
cmc
test
dec
cmc
jle
jge
adc
mov
dec
sub
or
popa
dec
jb
add
lret
in
push
hlt
rclb
pushf
adc
lods
pop
adc
and
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
lahf
jge
jo
rorl
and
sbb
test
ret
les
outsl
out
mov
sti
or
or
adc
int
icebp
sub
cltd
dec
subb
stos
fwait
popf
enter
insb
cmp
shr
imul
xchg
outsl
mov
ss
clc
enter
ss
popa
fadd
ret
test
pushf
dec
dec
frstor
or
adc
insb
push
test
mov
pop
pop
dec
shll
mov
sbb
pop
xor
pop
mov
lcall
sub
call
dec
inc
inc
pop
xlat
rorb
cmp
addr16
adc
or
arpl
pop
fisubrs
cmpb
jbe
outsb
mov
cmp
lahf
inc
adc
adc
mov
incb
jl
ret
fcom
cmp
sbb
mov
aaa
out
push
fsubr
das
lea
sbb
aad
adc
mov
pop
cmpsl
shlb
sbb
sti
jo
pop
ljmp
jbe
mov
pop
inc
aaa
sbb
mov
lcall
sbb
enter
jae
idivl
int3
aad
mov
adc
lret
push
out
out
mov
xchg
cmpb
stos
mov
fldenv
mov
mov
inc
sarl
mov
add
pop
add
std
pop
add
add
cld
stos
or
ret
insb
outsb
xlat
sbb
inc
mov
inc
loope
mov
and
repz
rcl
mov
xchg
movsl
pop
cmpb
outsl
xchg
xchg
xchg
inc
mov
dec
mov
and
call
lock
rcll
les
xor
adc
push
cmpsl
or
mov
idiv
or
shll
mov
push
mov
adc
jb
sbb
aaa
dec
push
lret
mov
loopne
push
inc
adc
loopne
ljmp
clc
xchg
lret
lods
arpl
add
rorl
pop
xchg
fcmovb
mov
cmp
inc
scas
andl
xchg
lcall
xchg
and
pop
add
outsb
call
pmulhuw
push
mov
add
jmp
push
aad
push
xor
stos
mov
jbe
jns
jb
and
call
sbb
push
push
fiaddl
mov
je
lea
pusha
xor
mov
and
sub
cmpb
ss
lea
orl
dec
in
push
iret
and
inc
jns
cs
and
or
mov
stos
shll
xchg
or
xchg
lcall
adc
jge
cltd
lret
xchg
adc
pop
inc
mov
mov
pop
in
not
adc
add
inc
push
xor
cmc
inc
dec
cmpsb
out
push
mov
xchg
mov
and
jb
or
adc
pop
popa
jp
popa
push
or
repz
xchg
and
das
adc
jbe
sahf
or
daa
orl
mov
cmp
mov
inc
mov
inc
mov
mov
psllw
add
popa
push
lret
rol
dec
or
pop
into
lock
dec
test
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
add
dec
mov
lahf
jge
jo
in
in
imul
movsb
xchg
jo
rol
lret
sbb
sbb
test
repnz
push
cld
and
xchg
rorl
mov
in
popf
out
mov
cmp
push
xchg
cmp
ret
fwait
outsl
in
adc
aaa
push
ror
pop
xchg
in
push
fwait
cmpb
xor
insl
scas
clc
mov
out
repnz
out
dec
sbb
fadds
fiaddl
aam
and
idivl
mov
popa
loopne
hlt
dec
cmp
cmc
mov
int
or
push
shl
mov
mov
shll
das
out
jg
jae
xchg
xchg
xchg
shlb
xchg
shlb
in
mov
pop
dec
inc
fildll
pop
insl
in
push
adc
aam
or
lea
adc
out
jns
push
lret
push
xor
ret
or
rol
movsl
xor
je
imul
movsb
push
sub
hlt
mov
push
and
pop
imul
xchg
es
lahf
enter
push
setge
push
sub
imul
add
aaa
cmp
sub
adc
inc
lods
aad
ja
ja
adc
sub
adc
cwtl
mov
and
push
mov
and
inc
add
adc
xlat
adc
test
inc
inc
sub
int
fs
mov
scas
shll
jbe
stc
arpl
leave
in
mov
or
mov
lods
dec
jle
or
in
add
clc
ds
je
mov
add
pop
push
imul
mov
daa
mov
adc
out
cmp
inc
iret
pop
fiaddl
sbb
sbb
call
rcll
sub
outsl
jae
rcl
mov
jb
xchg
xlat
cs
push
stc
xchg
adc
sub
frstor
int
xchg
lahf
stos
pop
mov
pop
sbb
adc
popf
imul
xchg
xorb
mov
mov
rorl
lcall
ret
outsb
clc
cwtl
inc
jne
dec
je
cmp
leave
xlat
insb
sub
inc
test
push
dec
cmp
mov
adc
jne
jo
scas
adc
xor
repnz
rorl
adc
rcl
out
and
sarb
adcl
aaa
add
and
nop
or
lods
nop
mov
push
insl
jbe
and
cmpsl
push
jl
mov
and
dec
sbb
or
daa
fs
pop
outsl
out
and
mov
aaa
dec
loop
enter
add
mov
mov
xor
sarl
xor
pop
mov
clc
mov
inc
daa
cwtl
je
cld
add
pushl
xchg
xlat
mov
stos
lods
jae
je
cwtl
pop
xchg
mov
add
int
out
icebp
les
sbb
lea
fwait
sbb
addr16
mov
aaa
fdivs
imul
ljmp
lret
mov
mov
or
iret
inc
subl
xlat
pop
dec
arpl
adc
out
cmp
gs
xchg
mov
jmp
pop
or
mov
xchg
sbb
call
push
jecxz
dec
sub
pop
mov
or
and
out
insl
test
sahf
icebp
jg
dec
mov
bound
mov
adc
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
mov
sub
in
xchg
jo
lahf
jge
jo
outsl
test
mov
dec
mov
or
subl
lods
cmp
inc
test
arpl
dec
out
push
adc
xchg
inc
xlat
xor
dec
fmull
cmpsl
stc
mov
ja
mov
add
add
inc
sbb
scas
std
xor
cmp
les
cmp
je
pop
out
and
scas
dec
dec
test
aas
cmp
cmp
sbb
popf
sbb
shl
xor
stos
sub
les
cmpsl
nop
fldl
in
inc
popf
jno
outsb
int3
add
not
jbe
mov
sbb
jbe
pop
ret
pop
jae
add
and
or
cmp
sub
dec
daa
lds
lods
bound
stc
sbb
and
sar
add
pop
sahf
or
int
push
fs
adc
jb
mov
dec
pop
jle
imul
imul
repnz
mov
mov
push
jns
aam
lea
xchg
xchg
fdivr
andl
test
movsl
push
sbbl
jge
mov
xor
es
ljmp
pop
clc
push
xorb
in
fsub
imul
mov
xrelease
cmpsb
out
push
lods
mov
sub
packuswb
pushl
mov
pop
scas
jne
mov
jmp
cmpl
je
ja
cltd
jns
cmp
and
xor
out
fldpi
out
push
inc
scas
push
sbb
fistpll
lock
inc
das
mov
adc
shlb
pop
jnp
push
dec
dec
adc
in
cmp
ds
add
aaa
cmp
sbb
sbb
cli
push
add
lods
inc
inc
mov
sarl
shrb
flds
sarb
outsb
mov
inc
pop
das
inc
pop
fs
inc
subb
insl
cmp
loope
clc
and
aas
sbb
push
push
aam
adc
cmp
outsb
lods
rorb
add
out
sbb
imul
lcall
test
movsl
lcall
leave
sbb
push
enter
dec
dec
dec
add
out
pop
fldl2e
out
icebp
popf
adc
push
insb
cmpsb
arpl
lret
add
je
rclb
or
rclb
jl
pop
fcoms
movsb
fcmovnb
stos
nop
fnsave
jae
nopl
imul
loopne
mov
arpl
xor
mov
inc
stos
gs
mov
aas
push
lea
rcl
dec
iret
mov
lock
mov
dec
mov
pop
sbbb
mov
xor
fsubr
scas
sbb
scas
jge
sarb
mov
sbb
cld
jg
dec
or
xlat
fildl
add
push
fsubs
pop
in
lcall
mov
imull
or
push
xor
jecxz
push
xchg
mov
or
aam
ds
adc
xchg
into
pop
aad
add
test
pusha
or
push
jle
or
cmp
sub
stos
jmp
fwait
mov
ret
cmp
jp
mov
pop
aam
outsl
aad
inc
insl
mov
mov
jno
sbb
pop
push
test
icebp
xor
shr
mov
mov
jb
and
roll
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
adcl
jo
lahf
jge
jo
mov
cmovns
cmp
xchg
movsl
stos
xor
arpl
or
mov
sub
jne
insl
pop
insb
xchg
lcall
xchg
scas
jae
iret
popw
pop
adc
push
imul
sahf
dec
mov
gs
dec
popa
pop
xchg
mov
int
ret
clc
call
xchg
or
bound
add
dec
pop
js
bound
jle
push
push
mov
cmp
push
cmp
hlt
and
lcall
addr16
cltd
mov
cltd
jae
push
test
add
lods
enter
pop
xchg
mov
fsubrs
sahf
jl
fbstp
and
fisubrs
fstpt
clc
stc
add
lcall
push
mov
fwait
mov
sbb
and
imul
es
adc
push
stos
sub
mov
shl
xchg
xchg
loopne
mov
nop
fnstsw
adc
cmp
in
pop
dec
sbb
xor
imul
and
push
in
iret
or
mov
xor
add
fs
jmp
js
fdivrs
fdivp
inc
or
das
popf
iret
addb
mov
daa
daa
mov
pusha
mov
xchg
sub
aad
sub
dec
stos
push
mov
sbb
xchg
ja
inc
sbb
enter
nop
lea
jo
lret
add
out
call
push
pop
sbbl
xchg
loop
add
aad
movsl
int3
xchg
mov
mov
test
aaa
sti
xor
lods
pop
popf
sub
addr16
lds
out
js
fs
loopne
jle
orb
fidivl
or
mov
sub
pop
and
jo
ja
es
jns
add
pop
mov
adc
lods
lahf
ljmp
std
call
dec
cmc
add
mov
mov
cmp
outsb
xchg
fists
gs
aas
add
aas
jb
mov
mov
dec
insb
add
sti
pop
clc
imul
push
jp
mov
js
add
mov
xchg
in
push
mov
jb
loopne
loope
popa
in
or
xchg
js
loopne
cmp
mov
test
leave
push
ret
sub
dec
cmp
push
in
push
test
mov
sbbl
daa
outsl
insb
mov
cltd
adc
aam
add
add
xor
jns
cli
fstp
mov
cmp
add
andl
xor
imul
rorl
mov
sub
mov
add
adc
sub
pop
lock
lahf
mov
cmp
ret
adc
inc
sub
jl
inc
js
loop
mov
cltd
adc
rcrb
addr16
adc
js
nop
dec
adc
cmc
add
icebp
jno
push
add
mov
xchg
repz
adc
insl
and
inc
push
insl
jl
ss
mov
lret
std
ret
mov
inc
dec
sub
jecxz
int
addr16
mov
xchg
in
inc
int
mov
mov
bound
fnstsw
ss
int
imul
faddl
shr
dec
adc
xchg
jne
and
outsb
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
in
fildll
jge
jo
in
mov
cmp
dec
adcl
inc
fcmovb
pop
mov
arpl
call
xchg
mov
jge
or
cmp
sub
aaa
add
cmpsb
inc
cld
scas
std
loopne
add
sbb
daa
adc
inc
sub
rcrl
imul
cmp
fcoms
adc
cmc
xchg
xlat
jo
cmp
pop
inc
cmpsb
inc
dec
aam
and
push
xlat
xor
test
int
sbb
jp
out
jae
xchg
leave
xchg
ja
js
push
fcmovbe
loop
xlat
jnp
cmp
stc
enter
push
push
xor
addb
fld1
adc
jecxz
push
dec
cltd
lods
and
imul
or
cli
xchg
pop
mov
vpunpckhwd
sti
dec
inc
repnz
mov
outsl
jle
les
jbe
lcall
xchg
sub
mov
sbb
dec
fistl
lcall
insl
ror
outsb
push
cltd
jecxz
iret
sub
sti
xchg
push
jo
rol
sub
fwait
mov
jl
jmp
stos
es
add
xchg
sti
push
aam
mov
sub
in
out
in
fadds
pushf
pop
data16
enter
sbb
leave
mov
rcr
fistpl
stc
adc
cmpsl
dec
sub
ljmp
pop
sub
inc
and
jmp
xor
outsl
lret
fsubs
add
inc
jecxz
adc
data16
hlt
stc
test
push
int
mov
data16
loop
pop
fcmovnb
nop
xorb
dec
aam
cld
add
inc
jg
enter
shrb
or
dec
sub
test
jne
fbstp
js
dec
mov
add
sbb
sbb
daa
fidivrs
loope
lods
out
inc
jle
push
dec
inc
push
adc
or
aam
stos
xchg
repnz
insl
cmp
jno
ret
sahf
xchg
in
hlt
or
jnp
roll
inc
das
cmp
lahf
cmp
inc
es
hlt
cmp
xor
dec
and
sbbl
push
fsubr
mov
sbb
rolb
xor
jne
sbb
push
aaa
push
arpl
js
stos
mov
mov
pop
inc
mov
loopne
push
push
add
stos
aad
dec
push
sub
ret
push
clc
jmp
fisubs
lea
xor
shl
in
pop
lods
xor
sbb
out
leave
add
fs
hlt
ret
add
js
mov
push
lock
xchg
stos
mov
adc
fistl
or
add
lret
rclb
sar
je
jne
sub
sbb
pop
test
in
idivl
fstps
std
fdivs
inc
cmp
sub
insb
cltd
fs
and
cmp
bound
cmp
fstpt
or
ret
pusha
push
add
vpcmpgtb
adc
rcr
popf
jae
mov
call
mov
cmp
push
push
xor
mov
cli
incl
out
xchg
dec
sti
ficomps
dec
sbb
fcoms
xchg
ljmp
lods
dec
mov
pop
fisttps
cmp
clc
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
xchg
cwtl
cli
leave
cltd
jo
lahf
jge
jo
mov
fwait
outsl
sahf
push
cmp
addr16
daa
sbb
fwait
aam
out
stc
out
fwait
bound
adc
scas
stc
xor
mov
cmp
test
lock
xchg
sub
pop
cmpsb
cmpsl
pop
fs
in
iret
test
jmp
inc
out
jne
jge
nop
aam
or
popf
pop
fwait
jne
lret
mov
push
mov
fwait
pop
ljmp
push
push
adc
xor
movsl
fisubs
inc
dec
or
lret
aaa
mov
aad
imul
repnz
sbb
test
push
shrl
mov
mov
in
je
and
mov
cmp
testl
lcall
rcr
mov
clc
popf
repz
xlat
mov
sahf
xchg
mov
lret
push
ret
testb
shll
jnp
xchg
push
in
xor
sar
popa
or
dec
inc
xor
cmp
das
es
cmpsl
notl
add
cmp
mov
cmp
pop
fs
es
xchg
aad
dec
movsl
mov
lea
fwait
mov
ss
cmp
insb
jl
lods
out
mov
fnsave
mov
sbb
xor
push
fidivl
jne
push
push
jo
push
xor
jl
fs
or
sub
mov
push
push
inc
xlat
jo
aaa
sbb
add
int
mov
push
int
fnstcw
mov
mov
cld
out
cltd
insl
push
adc
pop
adc
enter
xchg
push
ror
je
add
pop
xor
inc
push
fnstsw
pop
lret
push
cmp
in
lahf
ret
cld
leave
add
cmp
ret
mov
cmc
bound
xor
and
cwtl
mov
ja
and
mov
mov
test
cmpsb
mov
int3
mov
adc
gs
mov
cmp
loop
scas
add
aad
mov
fsubrl
icebp
dec
rorl
les
pop
icebp
mov
cmp
sahf
sbb
or
mov
imul
aam
ds
push
push
mov
outsl
sti
push
mov
dec
pop
jecxz
xchg
push
adc
pcmpgtw
jo
ja
sub
dec
icebp
fmull
mov
add
ss
pop
scas
xchg
sbb
ljmp
mov
xor
out
adc
insl
push
dec
xlat
loopne
jo
fistps
aam
push
mov
aad
pop
xchg
push
push
push
mov
cwtl
das
lods
inc
arpl
sarb
cmp
js
dec
adc
add
mov
xlat
loopne
lahf
aam
sub
pop
divb
pop
icebp
arpl
adc
jle
sbb
mov
rcrl
mov
pop
jne
ret
inc
outsl
add
std
inc
ja
inc
jmp
xor
mov
in
xor
fs
adc
xor
add
and
frstor
fcmovb
fdivs
addl
and
mov
xorl
jp
adc
fiadds
fwait
dec
sbb
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
push
or
ret
jg
jo
ret
stos
fldcw
out
cwtl
cmpb
icebp
aas
adc
inc
mov
sub
lret
add
xchg
movsb
xchg
pushf
inc
add
cwtl
imul
mov
fldl
into
adcb
shl
stos
leave
mov
xor
int3
gs
push
fwait
nop
mov
sbb
lods
xchg
mov
cmp
adc
out
mov
gs
bnd
ficoms
inc
adc
cmp
cmp
cld
sub
lahf
cs
addr16
arpl
sub
movsl
xchg
mov
cmp
xor
adcb
mov
std
cmp
jo
movsl
add
std
lock
pop
mov
mov
push
pop
inc
lock
push
repz
hlt
and
test
daa
lock
mov
daa
daa
dec
iret
inc
inc
popa
shlb
cmpsb
popa
xchg
xchg
fidivl
mov
sub
push
scas
sbb
jb
sbb
or
in
leave
bound
mov
xor
xchg
and
mov
daa
push
pop
dec
jg
xor
sub
jecxz
cmp
inc
cltd
dec
jl
jecxz
push
rcrb
add
std
cld
inc
add
add
add
add
or
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
push
sub
jo
jg
jo
rcrl
pop
outsb
add
mull
dec
push
call
popl
or
xlat
xchg
lock
test
test
outsb
int
test
jns
mov
xor
in
mov
fistpll
cmpsb
mov
pop
call
into
and
in
incl
and
outsb
out
lock
stc
icebp
es
xchg
and
sbb
adcl
out
pop
test
sub
sub
mov
sbb
inc
in
test
jmp
mov
jecxz
adc
cmp
insl
push
lea
addr16
jmp
popa
hlt
les
add
mov
nop
iret
cmp
rcrl
mov
inc
and
mov
sbb
shlb
gs
cmpsb
idiv
sbbb
pushf
sub
xlat
popl
adc
ds
xchg
test
cmp
clc
jo
lahf
lcall
push
out
data16
xor
rcrl
imul
ffreep
sbb
and
cmp
cmpb
shrb
aaa
mov
jae
push
sti
imul
xor
lcall
mov
jmp
rorl
sbb
fsubrp
mov
jo
add
mov
cmc
cmp
fnstcw
lcall
push
in
push
and
or
xchg
or
mov
cmp
lods
jnp
mov
loope
mov
sahf
ret
aas
jns
dec
mov
sub
adc
iret
mov
adc
ret
not
stos
mov
xor
int3
lock
repnz
movsl
push
mov
jne
dec
jmp
adcb
lahf
sbb
out
jp
sbb
mov
scas
rorb
or
xchg
dec
nop
add
mov
xor
jae
inc
jp
sub
gs
cli
dec
loope
mov
push
push
icebp
movsb
fs
mov
insb
push
in
repz
inc
mov
shl
cltd
mov
fiadds
dec
repnz
push
push
call
push
mov
fidivrs
jo
push
mov
es
data16
adc
fmull
int3
lcall
ja
push
adc
sub
fisubs
mov
jno
imul
add
sbb
xchg
jmp
dec
pop
pop
movsl
xchg
inc
arpl
jp
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
pop
pop
out
arpl
jo
ret
jg
jo
movsl
add
inc
pop
add
sbb
and
xor
imul
jns
xor
stos
xlat
fdivs
cmp
in
inc
lock
push
xlat
mov
mov
ljmp
pop
pop
inc
call
cli
jl
jmp
sti
push
frstor
cmp
mov
addr16
repnz
mov
xchg
outsb
test
outsl
dec
aaa
in
lahf
repz
pusha
xchg
aad
mov
dec
sbb
aad
mov
rol
lahf
xor
mov
aaa
lods
sub
shlb
xchg
cmp
imul
and
push
push
xchg
movsl
inc
pop
cld
and
dec
mov
inc
push
add
aaa
pop
int
cmpsb
pushf
test
lahf
mov
sub
clc
lret
lahf
icebp
icebp
fmull
and
jmp
jecxz
out
outsl
test
mov
arpl
sub
push
rcrl
icebp
hlt
adc
push
xor
and
insb
adc
mov
les
adc
xor
jo
into
pop
pop
xchg
shll
insb
mov
xor
sarl
rolb
lods
cld
das
push
repz
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
test
jo
ret
jg
jo
push
jle
cltd
push
push
cmp
sbb
adc
dec
out
es
gs
icebp
int3
dec
or
nop
jmp
addr16
aas
xchg
mov
fstpl
add
out
outsb
and
cltd
pop
fcomi
push
cltd
lret
push
lret
mov
mov
in
jg
push
inc
inc
sbb
loope
ret
movsl
les
cmp
mov
loope
fucomip
fistpll
xorb
xchg
std
aaa
lret
adc
int
arpl
cmp
out
sub
jp
push
adc
push
xchg
sbb
ljmp
cmp
shrl
jns
in
xor
leave
clc
pop
adc
xor
aas
orb
mov
adc
sbb
lcall
fwait
mov
mov
jmp
xchg
insb
aaa
nop
adc
shlb
pop
mov
xor
bnd
int
mov
insl
push
sbb
mov
test
adcl
sti
cmpsb
jmp
inc
mov
mov
mov
sub
je
inc
mov
test
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
add
jo
jg
jo
adc
and
bound
mov
pop
dec
fmuls
jl
cmpsl
pop
cs
sbb
and
cmp
repz
sub
xor
dec
pop
jecxz
xor
iret
dec
mov
adc
inc
cmp
aad
in
test
ret
into
test
inc
testb
data16
push
add
mov
sub
mov
or
sahf
mov
jb
mov
sub
jecxz
rorb
repnz
xor
or
ljmp
mov
addr16
jbe
push
fsubl
fnstsw
dec
movsb
insb
dec
xchg
test
stos
loop
pop
cmp
pushf
jg
sti
push
adc
pusha
push
hlt
shr
addr16
mov
inc
rclb
arpl
push
sahf
jle
das
inc
jge
sbb
cmp
sub
sbb
jo
sbb
pop
jge
rclb
or
or
add
add
and
cmp
pop
mov
mov
xor
sbb
loop
cmc
loop
scas
dec
push
cli
push
mov
xchg
lret
fists
call
mov
stos
sahf
aas
pop
mov
lds
lahf
fwait
sub
jecxz
xor
push
lock
in
movzwl
jmp
movntps
push
rep
mov
push
jle
jmp
jo
ret
jg
jo
jmp
push
pop
xor
mov
push
mov
loopne
enter
hlt
nop
sub
and
add
mov
xor
sti
cmpsl
gs
xchg
scas
sub
lret
mov
sub
mov
push
jbe
xchg
mov
sub
popf
lds
jo
push
loopne
xchg
mov
pushf
into
inc
jp
scas
call
jb
popl
test
mov
fs
sub
mov
daa
jno
out
les
lds
rdtsc
stc
cmc
jmp
ds
pop
xor
or
das
lcall
cmp
adc
dec
xchg
and
sbb
fnstenv
shll
inc
inc
repz
in
and
jae
ret
xchg
lea
mov
or
jg
mov
test
and
jnp
ret
jmp
sub
cs
adc
dec
cltd
lcall
cmp
add
inc
pop
cwtl
out
push
push
jle
loopne
xchg
xor
sbb
jo
push
or
or
les
xchg
or
cmp
sbb
xor
sar
int
mov
lahf
dec
mov
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
mov
or
jg
jo
leave
inc
inc
inc
int
mov
in
popa
testb
and
leave
and
lods
addr16
call
fcoml
rcll
mov
pop
cmpsb
push
mov
lds
cmp
xchg
xchg
xchg
push
dec
mov
mov
cmc
ret
fisubl
pusha
daa
and
inc
xchg
loope
adc
sti
pop
lea
enter
imul
pushf
das
push
dec
xor
jle
popf
push
push
xchg
push
loopne
rolb
inc
bswap
cmpsl
sti
ret
inc
stos
addr16
cli
mov
in
cmp
testb
ss
lea
add
sbb
loope
mov
sub
inc
out
sub
stos
or
mov
pushf
sbb
stos
jbe
js
clc
add
inc
xchg
lods
in
dec
xor
dec
or
inc
push
sub
dec
or
shll
adc
sahf
data16
sarb
lods
fcmove
add
dec
xlat
pop
cmpsb
frstor
in
movsl
cs
mov
sti
or
pop
xor
cmp
mov
sahf
jge
jns
jl
imul
inc
sbb
les
insl
sahf
cmp
mov
mov
std
adc
movsl
aas
fadds
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
out
lds
ret
jg
jo
movsl
jge
hlt
fs
jns
jno
ja
and
xor
jnp
iret
cmp
xor
int3
pop
and
sub
call
jne
dec
fld
enter
ffree
iret
pushf
rcrb
loop
movsb
idivb
repz
fs
into
push
sub
push
mov
adc
leave
cld
sbb
popf
je
shlb
adc
jae
hlt
mov
add
add
aas
je
mov
insb
and
fidivrl
ret
mov
fsubs
pop
or
xchg
jmp
lahf
or
lods
call
ror
call
stos
cli
inc
inc
inc
ljmp
shlb
dec
adc
xchg
es
mov
jp
xor
xor
xlat
lret
cltd
mov
cmp
jle
xchg
and
fisttpl
jp
imul
daa
aam
add
mov
xchg
stos
sub
add
out
sub
push
insb
in
rcr
add
xor
jns
and
enter
call
loopne
repnz
lods
out
enter
sub
inc
push
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
xchg
mov
stos
jo
ret
jg
jo
xchg
bound
mov
sub
push
mov
fdivrl
test
push
add
and
dec
int
ss
outsl
push
pop
mov
fadds
clc
add
test
outsl
nop
jl
movsb
push
jo
cmpsb
stc
test
jp
cli
mov
xchg
mov
push
xor
call
testl
gs
xchg
lahf
add
jne
iret
cmpsl
push
mov
xchg
les
pop
jo
or
fdiv
fimuls
sahf
jmp
mov
jbe
imul
cli
mov
sarl
push
jmp
ret
mov
push
and
push
repz
cli
imull
and
sub
scas
fildl
lea
out
lock
lds
inc
pusha
iret
and
call
repnz
add
sbb
cmpsl
or
add
xchg
mov
xlat
loope
pop
xchg
ficoms
pop
fistps
fldt
jno
cld
and
ja
push
mov
pop
lea
mov
inc
movsl
xor
cmc
or
adc
jecxz
fidivs
mov
or
jmp
leave
push
and
adc
adc
jge
pop
xor
add
in
add
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
ror
cwtl
fcoml
test
jo
test
mov
sub
fisubl
lds
mov
sti
ret
pop
daa
dec
pop
enter
repnz
adc
xchg
cmc
test
inc
mov
sub
cmc
mov
stos
dec
movsl
cmp
mov
jmp
jp
fwait
or
sub
fildll
jle
ret
dec
int
sbb
dec
cmp
dec
mov
cli
xor
and
xchg
or
adc
clc
sti
jecxz
ljmp
push
or
and
sbb
pop
add
ret
lret
fwait
imul
mov
out
dec
js
scas
test
subl
push
sub
insb
jns
ret
xor
adc
clc
rclb
mov
pop
adc
std
fistl
ss
decb
data16
cwtl
jmp
jecxz
mov
push
lds
fs
dec
out
test
popa
subl
test
mov
lret
jg
push
and
jo
mov
and
jle
add
add
pusha
movsb
dec
and
arpl
xchg
cmc
and
fstps
js
mov
inc
js
jo
pushf
cmpsb
test
cmc
pop
push
sub
mov
mov
push
mov
jmp
inc
gs
icebp
imul
sub
pusha
pusha
cmp
jo
icebp
addr16
dec
cmp
nop
and
jns
jle
movsb
inc
cmp
mov
push
sbbl
inc
and
ja
mov
jge
icebp
push
negl
pop
pop
sarl
arpl
cmp
daa
idiv
clc
ja
xor
xchg
test
aas
fwait
mov
mov
loop
xchg
in
xor
pop
mov
pop
dec
jg
je
insb
sti
mov
mov
push
mov
or
lea
jo
or
fiaddl
in
mov
inc
stos
push
shr
push
push
fnstenv
cmp
lret
imul
sub
jle
push
cmp
inc
cs
outsl
or
jnp
dec
xor
add
push
stos
adc
mov
call
xchg
lcall
lods
or
lock
sti
icebp
jno
or
mov
add
mov
adc
lods
adc
mov
ja
sbb
push
divl
repz
xor
loop
add
jne
int3
cli
add
test
in
or
test
and
repz
dec
mov
js
icebp
lods
and
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
notl
mov
jo
popf
scas
lods
je
and
xor
add
mov
lahf
inc
xchg
and
mov
xchg
fwait
data16
iret
pop
lods
out
gs
pop
mov
adc
xor
loopne
std
popl
lret
add
out
pusha
cmp
sahf
and
fisttpl
aam
push
pop
add
pusha
jb
in
std
out
orl
mov
sbb
insw
push
xchg
faddl
gs
inc
cmp
mov
scas
fmull
lods
jle
rclb
jge
mov
mov
std
aad
xor
ret
xchg
inc
sub
push
mov
sbbl
out
leave
lea
jae
and
dec
out
out
push
into
lods
add
lods
repz
pop
out
cmpsb
jbe
enter
add
push
xor
xor
dec
push
add
add
shll
es
sbb
test
or
pop
das
pop
mov
insl
bound
push
mov
mov
push
push
lods
pop
pop
jae
popa
mov
insb
push
or
nop
rorl
cmp
test
ficoml
nop
pop
ja
lahf
dec
mov
cmp
je
inc
dec
or
or
stos
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
sarb
jo
mov
inc
pop
xor
dec
movsb
add
push
fsts
sti
jge
test
dec
mov
jmp
push
xor
imul
enter
pop
cli
test
rclb
xchg
xchg
sbb
popf
inc
std
std
xor
mov
mov
subl
jp
inc
popf
test
mov
int
xor
mov
sbb
lods
imul
inc
cmpsl
xchg
jbe
cmp
jle
ljmp
sahf
imul
adc
cltd
mov
jmp
lcall
adc
jmp
sahf
fisttps
cwtl
fdivs
fucomi
loope
jo
inc
out
mov
pop
mov
shrl
fwait
call
jb
stos
jmp
push
mov
mov
push
ror
cmp
fisttps
not
xlat
pop
test
stos
sub
xchg
jbe
xor
push
push
lods
sar
mov
test
mov
inc
cmp
mov
sahf
clc
out
fisubrs
xchg
icebp
sub
xchg
sub
xchg
movsl
or
loop
jmp
sbb
dec
lock
jl
mov
push
sbbl
test
loopne
sub
xchg
mov
inc
je
divsd
and
mov
cmpsb
adc
pop
jne
stc
push
cmp
jbe
and
cmp
sti
les
jnp
add
push
ror
sbb
mov
call
pop
out
dec
fnstsw
push
xlat
jnp
cmp
in
inc
in
mov
xor
test
loop
data16
push
out
rcrb
ret
xor
je
fwait
push
stc
inc
mov
lcall
fidivs
push
shll
push
mov
pusha
lods
pop
out
cmpsl
js
aaa
bound
or
sbb
ficoms
insb
shll
inc
fdivrs
das
fmull
mov
or
push
arpl
pop
das
cmp
push
mov
or
rcl
call
test
xchg
out
andb
pop
lods
inc
insl
icebp
scas
insb
inc
and
lods
sti
pop
xchg
ret
arpl
lea
mov
cwtl
and
xor
addl
fcomps
xor
insb
xor
or
icebp
mov
fistpl
sbb
fbld
rcl
and
xchg
sbb
fisttpll
cmpsl
sub
iret
sbb
jnp
xchg
cs
pop
enter
xor
daa
out
in
ret
inc
in
xor
insb
inc
cmpsb
pop
test
testl
jge
pop
cltd
pop
jno
outsl
mov
xchg
jg
mov
inc
pop
pushl
add
lods
mov
lds
jae
faddl
pop
hlt
int3
in
adc
mov
mov
fistpll
test
cli
call
mov
push
into
mov
lret
nop
out
ss
into
mov
mov
mov
jo
out
or
mov
dec
mov
std
inc
test
aad
pop
xor
test
je
and
clc
test
and
sbb
in
les
mov
mov
aaa
test
stos
fldcw
lahf
lahf
xchg
and
xchg
xchg
mov
bound
mov
cmpsl
xchg
stos
xchg
das
sbb
xor
cs
es
negl
jmp
mov
cli
xor
testb
cmp
adc
mov
ffree
sbb
jge
mov
shlb
mov
leave
jecxz
cmp
outsb
mov
mov
ds
test
scas
test
clc
push
sarl
sahf
test
mov
mov
inc
out
fwait
push
add
int
or
inc
test
pmulhw
stos
jg
mov
mov
test
jmp
in
arpl
sti
imul
das
xchg
test
pop
fbld
lock
inc
add
aad
imul
pop
ret
adc
pop
scas
add
ja
dec
les
ret
push
pushf
dec
add
shrl
ret
mov
iret
or
mov
add
cmp
mov
sarb
movb
cmp
testb
aam
mov
xchg
jle
lock
mov
out
fcomi
and
pop
movsb
push
jmp
lea
sahf
jbe
sub
cmpsl
neg
ljmp
lcall
pop
repz
daa
or
repz
popf
sbb
loope
jg
push
mov
loope
mov
mov
cmp
or
add
cmp
xchg
mov
mov
iret
dec
jl
mov
movsb
mov
pop
imul
sahf
cmp
fmull
pop
sub
xchg
rcl
sub
out
fidivl
sti
dec
ret
or
lods
imul
mov
repz
mov
sub
add
testl
insb
or
fidivl
push
gs
bound
mov
fs
in
sarb
inc
js
scas
adc
scas
add
in
aaa
bound
sbb
in
addr16
pop
sbb
jne
push
dec
ret
aam
and
xlat
pushf
stos
xor
enter
fisubs
jle
test
pmaxsw
sbb
ja
out
or
ficoms
sbb
mov
repz
push
add
shlb
mov
add
inc
fsubr
in
xchg
pop
daa
mov
dec
fidivs
in
and
fnstenv
dec
inc
test
iret
rolb
or
negl
jo
sbb
pop
test
and
js
push
pop
pop
clc
clc
jl
mov
jbe
push
popa
xchg
xchg
push
sbb
add
pop
xor
or
push
in
mov
fldt
jb
in
js
outsb
sti
stos
stos
lock
lret
shrl
lea
push
mov
test
or
jbe
popa
sbb
cmp
testb
push
dec
popf
sub
pop
aad
stos
cwtl
xchg
mov
dec
push
pop
movsb
in
mov
stc
mov
aas
xor
cmpsb
dec
adc
lcall
jo
fwait
ret
or
push
sbb
jg
sub
mov
insb
sbb
scas
addr16
sbb
xor
idivb
icebp
add
cld
fs
add
push
rcrb
xchg
cmp
mov
sbb
jnp
push
test
pop
sbb
or
mov
imul
mov
clc
ror
lock
mov
cmpsl
inc
jo
inc
push
dec
inc
dec
push
dec
test
push
es
test
xchg
or
pop
mov
cmpsb
lock
in
jg
mov
stc
cpuid
std
sub
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
fsubs
hlt
xchg
jge
jo
outsb
and
inc
es
add
inc
dec
idiv
jno
push
or
sub
test
pop
push
cmp
mov
add
push
sbb
cwtl
xchg
pop
pop
or
push
pop
cltd
dec
mov
jmp
adc
in
dec
in
call
jl
sub
and
push
or
fwait
int
leave
xchg
fsub
and
idivb
dec
fnstcw
cmpb
sbb
mov
pop
or
je
adc
jg
cmpsb
out
sub
test
cmp
xor
mov
sbb
or
dec
fdecstp
mov
xchg
push
lret
xchg
or
jne
dec
leave
push
or
lahf
adc
das
push
pop
nop
fisubl
xchg
fcmovb
push
fldt
int3
jmp
jns
mov
sub
push
or
ss
push
and
and
xchg
pusha
cmp
dec
lcall
cmp
les
mov
xor
gs
or
or
push
sub
imul
pop
ljmp
mov
js
mov
cld
out
out
loope
adc
das
push
pop
xchg
ja
insb
popa
adc
sbb
inc
mov
dec
mov
lcall
push
std
lret
mov
pop
mov
orl
out
push
test
dec
push
es
nop
sbb
lea
push
out
movsb
fcmove
cwtl
stc
push
fwait
pusha
mov
xor
aas
pop
mov
addr16
lahf
pop
ret
xor
cld
movsb
jne
cmpsb
mov
loope
sbbl
jne
out
mov
call
fucomip
xchg
shl
fnsave
sub
xchg
out
es
sbb
mov
enter
ss
popa
jno
cmp
add
out
dec
scas
xchg
cs
sahf
adc
mov
sub
cmp
hlt
add
jb
fadd
addr16
cli
add
loopne
insb
popf
js
dec
fisubrl
mov
pop
push
int
sub
xchg
popa
movsb
loop
outsl
mov
lcall
and
stos
xor
dec
lods
or
xlat
mov
push
mov
iret
jbe
das
cld
rcl
xchg
push
test
cs
dec
sbb
xchg
iret
int3
mov
xor
jo
imul
mov
insb
xchg
dec
cli
loop
xor
add
sub
mov
or
mulb
rolb
pop
xor
adc
repz
fucomi
into
and
scas
adc
fcmovnbe
jnp
pop
or
fstpl
cmpsb
pop
lock
gs
cmpsb
aad
loope
dec
adc
and
push
cmp
cmp
inc
pop
inc
fsubs
cmp
pop
data16
shr
or
jg
pusha
fs
adc
mov
je
xchg
loop
mov
cmp
mov
pop
jo
mov
out
cs
pop
push
mov
push
js
push
dec
push
mov
rcl
test
xlat
rcrb
repnz
adc
inc
stos
push
fcomip
es
mov
lds
mov
jl
adc
pop
sub
pop
mov
rclb
mov
dec
cmp
inc
cmpsb
call
pop
orb
in
xchg
pop
enter
ljmp
or
xchg
stos
or
dec
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
mov
mov
mov
dec
ret
dec
inc
dec
pop
and
test
and
js
or
sub
mov
mov
loope
sbb
js
inc
scas
sub
jae
jg
jo
imul
lock
nop
xor
hlt
and
in
ja
pop
mov
out
mov
cmp
pop
sub
aam
xor
daa
hlt
adc
out
addr16
jne
testl
xchg
pusha
mov
cltd
addr16
xchg
ljmp
inc
sbb
push
push
jns
outsl
mov
push
pop
inc
into
sbb
pop
xchg
adc
push
pop
popa
xchg
lock
xor
testl
xchg
inc
aas
push
inc
test
lret
push
repnz
inc
mov
fldl
aaa
adc
inc
mov
leave
mov
jmp
mov
outsb
or
lock
pop
push
push
mov
xor
inc
rolb
mov
ror
sbbb
or
insl
rol
sbb
mov
mov
ret
icebp
repz
add
notb
or
xor
add
and
inc
mov
and
arpl
pop
mov
sub
sub
jnp
dec
ret
pop
xor
pushl
jnp
lods
xor
jmp
or
mov
sbb
inc
call
dec
subl
push
push
fnstenv
push
adc
push
bound
push
rorl
cmpsl
push
fwait
cmp
ret
sub
fisubrs
faddl
or
adc
sbb
jge
push
mov
cmp
or
in
jno
sub
jl
hlt
xchg
nop
js
adc
ja
out
xchg
loope
testb
xchg
orl
dec
ret
push
jbe
aad
cmp
jno
aam
out
pop
aas
repz
and
inc
in
mul
popf
inc
ljmp
nop
mov
xchg
push
mov
es
xchg
imul
imul
push
loope
and
add
enter
jb
gs
cmp
fistps
nop
xchg
cltd
mov
or
js
rcr
mov
imul
aad
mov
inc
xorb
fiaddl
test
in
pop
aad
stos
xor
dec
sbb
sub
xchg
movsl
push
or
push
mov
push
sti
cmp
faddl
adc
hlt
xor
push
xor
and
and
mov
mov
push
mov
mov
jg
mov
inc
ret
add
cmp
sub
int
mov
std
pusha
xchg
sbb
push
jnp
stos
jb
out
imulb
lret
xor
dec
mov
imul
xchg
adc
stos
popa
cltd
mov
fs
test
mov
popa
lods
scas
pop
jno
cmc
mov
xor
es
and
cmc
sub
ljmp
pop
arpl
pop
jp
adc
out
outsb
test
jecxz
je
popa
or
bound
pushw
lcall
fimull
inc
aam
sub
xor
ds
fisubrs
push
cmp
insl
mov
fsubs
cmp
frstpm(287
stc
mov
scas
ret
aam
into
inc
in
cmp
es
add
mov
add
jmp
outsl
mov
or
imul
add
sbb
inc
jo
mov
mov
nop
cmovne
pop
mov
jmp
je
xchg
add
or
lahf
arpl
out
and
cli
sbb
push
push
enter
xchg
insb
dec
and
roll
mov
shll
adc
pop
sbb
jg
xor
sbb
cli
aam
popa
push
frstor
sti
mov
inc
jge
mov
pop
xorb
pusha
mov
push
subl
xchg
inc
cmp
scas
dec
cmp
lock
iret
int3
and
into
in
cltd
int3
adc
imul
sbb
pop
mov
stos
xchg
and
daa
jb
mov
and
xor
jmp
out
lds
ret
lret
cmp
cmp
mov
push
aam
mov
mov
lcall
xchg
rclb
inc
out
stos
fs
fs
in
jns
iret
jl
jbe
xchg
out
add
cmp
xchg
mov
push
xchg
or
popf
jbe
inc
push
push
sub
out
out
mov
push
xchg
std
pop
adc
mov
inc
outsb
gs
imul
or
clc
xchg
push
or
pop
mov
mov
cmc
push
jbe
imul
inc
stc
andl
in
gs
cltd
aam
lret
js
sbb
xor
push
faddl
fsubs
je
in
mov
rcll
add
mov
mov
push
lret
inc
push
scas
pop
repnz
arpl
cmpsb
add
xchg
mov
pushf
in
popf
ret
mov
mov
leave
sbb
fwait
adc
cmpsb
out
repz
mov
pusha
adc
mov
and
js
xor
mov
dec
dec
jnp
sub
push
out
pop
leave
sbb
scas
mov
xchg
daa
lcall
mov
lock
pop
rol
or
push
iret
cld
sub
xor
movsl
xor
mov
into
dec
and
std
imul
cwtl
int3
rorb
test
push
cltd
jbe
cmp
loopne
push
pop
jmp
in
mov
mov
les
ljmp
mov
in
icebp
in
dec
xchg
xchg
inc
lahf
and
xchg
faddl
scas
lcall
or
int
loopne
mov
in
pop
dec
push
jecxz
js
xchg
pop
out
fs
push
cmc
jmp
dec
mov
add
mov
enter
and
mov
fs
ds
adc
movsl
inc
jl
sti
mov
outsb
insl
mov
cwtl
outsl
sbb
repz
mov
mov
out
sub
rorb
push
inc
xor
inc
dec
hlt
ja
int
call
in
jp
mov
push
rorl
das
xchg
lahf
insl
or
ja
adcl
xchg
jge
dec
cmp
push
jmp
jge
add
pushf
pop
xor
mov
pop
xor
lea
out
cmpsl
jge
out
mov
sbb
cmpsl
inc
xor
mov
pop
jge
out
icebp
aam
pop
faddl
and
inc
fstpl
shrb
mov
jge
bound
sbb
sub
inc
pop
adc
adc
sbbb
test
sub
ss
rol
inc
push
daa
mov
add
rorb
or
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
je
ds
jo
pop
jge
jo
ljmp
push
xor
stc
inc
lcall
insl
nop
fsub
adc
scas
ss
and
and
aas
mov
adc
jmp
cld
int3
lds
push
jp
int
movsb
xchg
addl
add
push
pop
mov
lods
std
mov
xlat
imul
mov
test
dec
jp
mov
xor
xor
xchg
push
cmp
adc
cld
jne
aaa
mov
mov
jecxz
and
arpl
ret
into
fadd
rorl
lock
xchg
mov
mov
push
cmc
push
pop
aas
xor
inc
outsb
stos
add
enter
pop
jne
or
xor
pop
sti
out
clc
inc
stc
fildll
mov
xor
test
insb
bound
dec
es
pop
into
sbb
test
lea
je
cld
scas
imul
mov
push
mov
and
aaa
add
pop
int3
adc
xlat
fistps
lods
jno
cld
inc
icebp
pop
std
jmp
xchg
imul
mov
adc
xlat
pop
jno
xorb
push
push
mov
bnd
into
data16
lea
sbb
stc
popl
dec
and
inc
mov
pop
gs
push
aad
push
jg
cs
xchg
pusha
mov
sub
notb
sub
jl
xlat
ret
aad
cwtl
adc
pop
repz
pop
inc
inc
push
push
jp
adc
mov
add
das
mov
aas
orb
gs
pop
test
dec
fidivl
outsl
fcmovu
pextrw
aaa
mov
in
das
jl
push
std
iret
sub
in
popf
lods
sub
dec
mov
fcompl
pop
repz
fists
pop
inc
out
loope
or
rcr
loopne
xchg
loop
int3
popa
push
pop
xchg
push
mov
mov
fwait
imul
adcb
push
push
pushf
pusha
daa
out
shrl
int3
or
nop
push
pop
push
fs
dec
mov
and
imul
sbb
inc
out
jo
sub
add
test
add
cmp
add
aad
cmc
aaa
dec
and
daa
sbb
int3
lahf
repnz
add
cli
mov
mov
hlt
outsb
dec
in
fistpll
push
push
xchg
js
sub
movsl
pop
addr16
aaa
pop
or
adc
push
add
sbb
loope
mov
loop
fbstp
test
ljmp
insl
stos
lods
aas
jne
push
das
add
xchg
in
pop
push
pusha
inc
jne
lods
xor
cmp
jecxz
sub
inc
cmp
test
into
imul
popa
cmp
cmp
mov
mov
xchg
mov
cmc
dec
outsb
cwtl
stc
mov
push
outsl
and
cmp
arpl
jle
mov
cwtl
lret
setae
mov
and
and
iret
dec
xchg
cwtl
push
test
cmp
stc
xchg
xchg
in
ss
cmp
add
lahf
push
xchg
cmp
js
inc
pop
inc
push
imul
fs
dec
rolb
repnz
enter
xchg
lock
ret
movsl
into
inc
pop
xchg
push
add
jbe
mov
mov
xor
test
pop
jo
lock
nop
cmp
mov
cmp
sbb
mov
dec
mov
mul
in
sbb
imul
clc
andb
int3
gs
mov
rcll
stc
insl
fisubs
gs
imul
sub
dec
push
xchg
dec
mov
lods
adc
sub
mov
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
and
popa
js
stos
push
in
sbb
lock
imul
push
sub
mov
mov
es
cltd
cmp
xor
jge
ds
pop
movsl
adc
data16
xchg
adc
push
outsl
movsb
stos
stc
xchg
mov
ret
clc
pop
js
out
scas
inc
in
cmpsl
ret
and
shlb
stc
into
mov
add
mov
mov
imul
xchg
outsl
out
inc
inc
call
adc
pop
dec
and
sub
sub
jl
popf
in
cwtl
or
xor
pop
adc
xchg
mov
mov
mov
push
fsubrl
jo
int3
add
dec
aaa
or
icebp
daa
mov
mov
cmc
dec
shrb
jb
pop
mov
sub
arpl
gs
xchg
jbe
aas
add
mov
mov
test
popa
pop
xchg
jge
adc
push
movsb
push
popf
imul
mov
stos
xchg
cs
xchg
xlat
pushf
dec
outsb
sbbl
lds
mov
xchg
lret
orb
outsb
jno
mov
jo
add
ljmp
std
insb
xchg
jp
mov
pop
dec
sbb
loop
sbb
pop
push
outsl
ja
shrl
jmp
outsl
into
mov
add
andl
test
popf
sub
push
mov
in
cwtl
mov
ret
sub
xorl
push
mov
jb
mov
mov
and
cmpsw
leave
fistl
aaa
xorb
and
insb
and
cmp
daa
sarl
stos
fistl
sub
push
loopne
inc
lret
inc
dec
or
cmp
je
xor
pop
mov
out
stos
jnp
push
test
je
push
ret
mov
sbb
lahf
xchg
fmuls
fwait
in
stos
sbb
out
repz
iret
daa
push
aas
ret
mov
mov
dec
inc
push
mov
mov
daa
dec
cmp
and
add
xor
mov
mov
aaa
push
mov
pop
mov
femms
ja
arpl
insb
and
push
mul
rolb
pop
add
add
and
push
int
fldcw
mov
jne
lahf
and
outsl
ret
stc
es
not
test
aaa
leave
negb
pop
dec
popa
add
aaa
fisttpl
mov
mov
mov
psrld
scas
leave
dec
push
mov
popf
imul
ficomps
push
dec
in
xlat
xchg
mov
pop
inc
jae
daa
push
mov
cmp
push
lcall
ja
adc
out
test
cmc
sbb
mov
jo
ja
int
xchg
aas
les
pop
add
or
mov
cmp
test
and
inc
out
dec
cmp
push
stos
jnp
addr16
inc
add
scas
ja
jmp
js
jo
sbb
in
rcl
xchg
dec
xlat
cs
sbb
xchg
movsb
sbb
jne
mov
fldt
dec
pop
ljmp
sub
dec
cs
adc
lahf
xchg
cs
shll
and
fwait
lret
mov
cli
call
inc
mov
enter
xchg
pop
clc
out
inc
stos
lahf
sub
dec
sbb
cltd
test
mov
es
orb
loop
sub
mov
ss
outsl
mov
sbb
test
jp
out
pop
in
lea
fucomp
test
pop
jnp
dec
inc
mov
or
iret
inc
jecxz
pop
pop
lods
sarl
mov
test
cmp
test
jg
lret
ret
outsl
into
jmp
sahf
mov
popa
adc
adc
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
xlat
and
push
dec
jo
pop
jge
jo
xchg
sbb
and
mov
pop
jne
add
add
xchg
pop
add
xor
sti
xchg
or
lods
xchg
jns
cmp
shl
sarb
ficoms
and
jg
fistps
iret
add
scas
inc
ja
in
xchg
sbb
fwait
add
pushf
shll
ret
scas
roll
aam
outsl
adc
cmpsb
lcall
imul
stc
popf
movsl
jnp
addr16
jnp
xchg
pop
lods
cmp
jle
in
add
lods
push
or
dec
out
mov
pop
adc
imul
mov
xor
pop
out
repz
aad
pop
dec
andl
sub
fwait
xchg
gs
les
dec
lods
test
adc
lds
cmp
popf
stos
loopne
inc
xor
push
je
and
xchg
and
adc
hlt
jae
out
cmpsb
mov
std
dec
data16
in
incb
icebp
pushf
lods
loope
add
fcomp
incb
mov
flds
ds
daa
adc
lds
test
aas
jp
xor
sub
push
in
mov
test
push
leave
jae
or
jp
lcall
test
cmp
push
dec
sti
hlt
scas
cmp
insl
imul
iret
iret
in
clc
out
int3
adc
or
inc
sub
cmc
pop
insb
mov
mov
popf
mov
sahf
sbb
sahf
mov
pop
mov
xchg
adc
sahf
push
test
lea
roll
mov
lcall
cmpsb
xor
push
dec
dec
popa
test
pushf
loop
adcl
dec
or
sbb
jno
dec
and
mov
sbb
inc
inc
mov
std
mov
mov
pop
bound
mov
mov
inc
or
jno
dec
stos
push
test
shll
sub
add
mov
fwait
negb
aam
lahf
jmp
inc
cltd
pop
lcall
xor
frstor
dec
lret
stos
mov
sub
pop
shlb
jae
xchg
movsl
cmp
or
sahf
es
out
pop
fists
cmp
inc
pop
mov
pop
popf
in
fnstenv
xchg
jnp
jae
repz
jle
jbe
pop
jo
adc
mov
cmp
mov
xorl
cs
xchg
out
outsb
lods
filds
ljmp
addb
xor
sbb
cmpsl
stos
push
inc
push
call
mov
mov
dec
roll
decl
jl
fsubrl
flds
adc
mov
dec
jne
imul
out
les
and
push
cmp
out
mov
sbb
enter
mov
cmpsb
shr
lret
in
divl
xchg
dec
xchg
xchg
dec
mov
stos
jb
aaa
sbb
adc
mov
jge
jecxz
rcrb
and
faddl
fsubr
mov
iret
cmp
jle
arpl
sub
jae
mov
imul
mov
mov
cmc
adc
dec
enter
cld
jl
jo
push
mov
push
lods
dec
inc
adc
pusha
mov
jbe
jnp
out
or
adc
popf
std
arpl
push
xor
call
sub
jne
andl
push
adc
push
lcall
push
jg
sub
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
pop
jbe
jo
pop
jge
jo
je
ret
daa
orl
inc
stos
test
rcrb
sub
rorl
data16
xchg
sbb
dec
jae
andl
push
insb
mov
mov
daa
mov
mov
ss
icebp
mov
mov
ja
adc
std
loop
sub
push
pop
mov
pushl
dec
mov
shll
cmp
mov
xchg
bound
push
inc
xchg
jmp
in
adc
sbb
mov
repz
or
xlat
jge
scas
dec
jno
dec
in
jnp
int
sub
mov
fs
jecxz
js
xchg
je
dec
cmpsb
push
imul
iret
ja
ds
addr16
push
or
dec
rcll
pop
fmull
inc
adc
je
gs
jl
cmp
sahf
outsb
divl
movsb
cmpsb
popa
je
mov
or
shl
mov
sbb
push
or
xchg
and
imul
mov
das
xor
cld
aam
sub
cmpsl
mov
dec
iret
out
push
inc
sbb
add
mov
les
push
xlat
mov
cmpsb
jl
das
sbbb
pop
int3
out
call
xor
pop
push
inc
shr
mov
mov
pushf
jnp
shll
jne
adc
pop
aas
cli
rcrb
pop
pop
mov
and
fcmovne
out
push
and
repnz
adc
pop
repz
xchg
popf
out
hlt
mov
jg
pop
dec
push
jne
adc
aaa
pusha
mov
ja
jge
adc
mov
cs
dec
cmpsb
test
es
mov
stos
sub
rep
test
lea
and
xchg
mov
pop
dec
xor
xor
out
xor
xchg
mov
sbb
pop
cmp
xchg
adc
lods
adc
rcrl
sub
int
rorl
or
dec
sub
dec
fists
xorw
mov
xor
push
cmp
mov
stos
into
fs
dec
sbb
push
jl
jne
xchg
cld
sbb
in
xchg
movb
xchg
rcr
adc
ret
cmp
les
iret
adc
ljmp
jp
fmull
push
push
inc
icebp
push
test
leave
lods
and
pop
lods
fcomps
hlt
or
inc
mov
test
push
xor
mov
bound
jno
push
loopne
cmp
lods
jl
fdivs
ret
insb
pop
mov
sti
xchg
jge
mov
jge
push
push
iret
cmp
insl
mov
lret
sub
xchg
je
sub
cmpb
add
lcall
popf
test
adc
subl
outsb
xchg
mov
dec
xchg
shll
xchg
call
jns
sub
int3
and
mov
dec
lret
insl
xor
push
push
fs
enter
pop
cs
pop
adc
bound
push
pop
fbld
fldpi
mov
xchg
in
ror
repz
cltd
jmp
or
mov
sub
sub
jbe
pop
or
pop
ds
mov
movsl
sahf
and
pop
js
add
mov
aad
push
inc
push
ss
bound
xor
lods
mov
push
sub
pop
fstl
inc
js
xor
cmc
mov
int3
lret
testl
das
in
sub
jb
loope
mov
idivb
lock
xor
stos
inc
out
sub
dec
and
inc
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
mov
push
jo
pop
jge
jo
sti
hlt
fwait
lahf
xchg
cmpsl
inc
shll
push
in
mov
mov
mov
xchg
pop
add
sbb
mov
testl
js
lods
xor
push
test
push
fsubrp
rcl
jle
lods
sub
mov
in
mov
leave
pop
cs
add
subb
mov
divb
test
cmp
push
pusha
icebp
ficomps
repnz
mov
pop
dec
dec
test
dec
dec
cmp
or
sub
or
inc
dec
imul
std
test
fiadds
jg
sti
add
fdivs
xor
mov
inc
sarb
sub
insb
arpl
in
xor
mov
push
push
push
lods
sub
mov
test
out
scas
dec
out
clc
les
mov
fildll
and
mov
and
lock
pop
push
push
nop
pop
icebp
pop
sbb
scas
push
adc
mov
loope
lret
loope
jne
adc
ss
stos
fs
inc
repnz
cmp
pusha
adc
mov
es
xor
in
movsl
mov
cmp
pop
push
outsl
dec
sub
jnp
out
and
aad
xchg
push
imul
ret
stos
and
shlb
test
fimull
push
mov
jle
cmc
and
out
jg
shll
popl
push
mov
mov
pop
je
pop
hlt
in
push
cli
ss
mov
cmp
les
mov
or
out
push
dec
nop
dec
test
cmc
insl
sbb
bound
mov
in
jl
or
xlat
std
out
arpl
daa
mov
jl
pop
ret
mov
push
pushl
and
add
mov
pop
arpl
or
jmp
dec
mov
fwait
inc
lret
jge
and
shll
cmp
loope
out
push
scas
adc
lock
clc
mov
jnp
mov
inc
test
loope
ss
addl
iret
stc
xor
iret
sub
out
fwait
xchg
shrb
in
push
mov
mov
jl
xchg
push
movsb
jnp
jmp
nop
xor
jne
sub
sub
fwait
add
mov
in
sub
push
inc
push
push
ret
insb
filds
cli
in
loopne
arpl
jg
push
lcall
aad
sbb
enter
xlat
pop
push
shrb
mov
jp
fldt
xchg
mov
stos
xchg
sbb
pusha
jb
xlat
xor
push
out
fs
loop
add
push
mov
gs
inc
rcl
sub
dec
mov
movsl
es
movsl
cmpsl
mov
loopne
add
loopne
mov
xor
xlat
push
xlat
jmp
rolb
ds
mov
inc
pop
ja
jne
jns
scas
dec
push
sub
cwtl
pop
rcrb
mov
mov
cli
and
aaa
add
pop
push
mov
sub
push
or
jmp
lock
out
aad
lcall
out
inc
sub
add
cmp
clc
data16
enter
and
mov
aas
jb
pop
sbb
lods
cld
in
adc
iret
leave
push
mov
movsb
push
test
iret
fiaddl
pop
jmp
sbbl
sub
int
mov
sub
je
mov
xor
notb
jecxz
push
std
fwait
sub
aad
hlt
jmp
int3
call
in
outsl
mov
push
pop
clc
repnz
cwtl
jle
xchg
or
jle
lahf
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
jae
addb
jo
mov
xchg
mov
mov
jmp
mov
sahf
ljmp
lea
shlb
xchg
stos
mov
mov
ficompl
test
andb
sub
sahf
push
jecxz
out
cwtl
dec
test
lea
mov
lcall
inc
shll
xor
repnz
or
mov
mov
insl
out
xchg
xlat
mov
mov
in
sub
nop
mov
mov
adc
icebp
pop
rcrl
push
and
jl
sub
or
stc
inc
sbb
aaa
pop
mov
int3
adc
dec
shl
dec
or
mov
xor
fmulp
sar
rclb
movsb
xchg
add
js
lret
pop
sti
loopne
adc
xor
add
lds
sbb
sub
jecxz
mov
add
sbb
adc
and
dec
sbb
mov
and
xchg
or
inc
push
xchg
dec
cltd
cmp
pusha
in
adc
cmpsl
ljmp
lods
mov
jp
sbb
cmpsb
mov
stos
ret
pop
out
inc
dec
xchg
stc
push
adc
fs
pop
rol
test
lock
push
mov
ljmp
inc
outsb
add
adc
cmp
scas
pop
std
mov
fs
xor
into
add
xor
sub
jne
addl
cmp
xor
or
lods
jmp
pushf
mov
sahf
mov
lret
inc
sbb
mov
pop
lds
out
mov
pop
loop
xor
cmp
or
push
dec
adc
sub
push
push
imulb
pop
or
mov
je
xor
jp
mov
sub
imul
loopne
ret
xchg
inc
ret
jge
sub
and
push
adc
mov
test
cmpsb
and
out
enter
cmpsl
jno
pop
jge
test
mov
repnz
dec
cmp
jno
adc
add
arpl
xchg
fstl
sar
mov
cmp
loope
aaa
push
xchg
push
pushf
pop
scas
pop
addr16
pop
add
or
xchg
sbb
push
add
ret
inc
dec
shr
stos
fcompl
sub
cli
dec
jae
call
jo
jmp
into
sahf
xor
ljmp
lahf
lahf
add
lret
fidivl
in
daa
mov
jmp
pop
sbb
popf
movsl
mov
in
xorl
add
cli
stc
lods
dec
push
aam
sbbb
push
dec
adc
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
test
pop
jo
mov
xor
fnsave
inc
iret
mov
in
enter
push
adc
inc
js
mov
adc
jb
pushf
jne
lock
push
out
mov
mov
cld
mov
fildll
negl
push
lret
xor
loope
or
adc
xor
push
data16
xchg
push
arpl
cmc
lea
arpl
mov
popa
fimuls
loope
ss
adc
add
in
negb
adc
mov
cmp
xor
mov
lods
jbe
jnp
mov
lcall
rolb
xor
jp
ficompl
mov
jge
out
fidivrl
popa
inc
pop
jb
mov
xchg
lods
outsl
jns
lods
cs
lds
cs
mov
dec
cmp
addb
je
decl
jecxz
push
test
cmpsb
jno
pushf
icebp
pop
data16
xchg
push
mov
shll
cmp
inc
daa
movsb
fidivs
out
hlt
mov
dec
xchg
rorl
imul
gs
jmp
jns
aaa
push
fildl
sub
sbb
lea
push
and
ja
cmp
mov
xor
cmp
mov
xor
cld
push
ficompl
xchg
fistpll
enter
aad
sub
jecxz
ds
outsb
mov
fistps
inc
inc
cmpsb
fidivs
insb
cli
daa
cwtl
xor
or
sbb
jnp
push
outsl
clc
xchg
sub
xchg
dec
adc
xacquire
jle
pop
insl
imul
clc
add
rcll
test
adc
mov
inc
mov
fs
mov
loope
sahf
adc
cmp
jge
call
lret
push
mov
xor
shll
clc
mov
cmp
aas
int
mov
shlb
sbb
jl
or
lret
adc
test
sbb
cmc
mov
mov
scas
jp
sti
mov
insb
sub
stos
sub
scas
insl
out
mov
dec
popa
shlb
push
scas
jg
jbe
mov
nop
lods
into
lret
fistpll
inc
outsb
fidivrs
cmp
inc
push
pop
mov
xchg
jecxz
cltd
sub
xchg
out
jecxz
adc
xor
fbstp
lock
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
repnz
jnp
push
xchg
ja
adcl
sbb
fwait
mov
leave
dec
inc
xor
mov
daa
arpl
ret
ficomps
mov
adc
mov
aaa
sbb
lea
subb
sti
jmp
icebp
lods
and
or
arpl
outsl
and
adc
inc
sbb
jno
fstl
hlt
in
aad
nop
int
aad
leave
jae,pn
loopne
xor
mov
cli
xor
cmp
andb
adc
out
prefetch
and
fnstcw
sub
arpl
xchg
sbbl
xlat
movsb
adc
das
lods
dec
cmp
std
fsts
xor
bound
outsb
and
jge
lret
mov
dec
add
fcmovne
or
fisubrl
cmp
jno,pn
pop
or
jp
lea
xor
inc
push
cmp
lret
clc
popf
icebp
int
shr
js
sbb
js
push
pop
fnsave
xlat
push
add
shr
jp
and
out
hlt
sbb
sub
jb
xor
repz
sub
jno
add
mov
out
divl
or
ljmp
add
stos
jns
or
test
or
mov
imul
inc
inc
cli
divb
dec
adc
mov
dec
cmc
out
dec
in
scas
test
scas
mov
js
aas
pop
xchg
mov
popf
or
jmp
adc
ja
fstpt
mov
jbe
or
fdivr
leave
outsb
sub
test
stos
lock
enter
std
dec
pop
in
add
in
dec
push
inc
shll
lock
ret
sti
popa
loopne
adc
cltd
in
cltd
loope
in
inc
sbb
jg
aam
out
aam
roll
pop
xchg
jno
dec
jb
pop
roll
xchg
mov
inc
mov
cld
leave
push
fadds
jo
stos
addr16
mov
repnz
or
xor
aas
aaa
fcoml
stos
pushf
out
sub
sub
arpl
mul
out
push
daa
movntps
mov
cmp
std
pusha
arpl
xchg
ss
push
test
sbb
push
lea
icebp
incb
pop
dec
pop
es
in
call
sahf
gs
and
jge
pop
jl
jge
push
out
aad
loopne
fcmove
xchg
imull
xchg
xchg
cmp
mov
dec
das
cltd
or
cmp
jo
fildll
cmp
addr16
lea
stc
loope
mov
fiadds
fsubrl
or
xchg
mov
pop
lds
je
sub
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
cld
je
adc
jo
jle
jo
scas
jle
inc
jmp
aaa
ss
call
inc
ljmp
fisttpl
sub
movsb
in
outsl
lcall
mov
pop
mov
mov
cmpsb
fs
stos
jle
pop
lock
jne
enter
mov
repz
roll
mov
jae
inc
mov
movsl
lea
mov
into
sbb
sbb
subl
js
dec
mov
in
popf
test
movsb
test
and
adc
fwait
mov
rcrl
mov
mov
xchg
jae
sbb
pop
rolb
mov
or
mov
push
inc
add
scas
jne
mov
ret
jge
rolb
xchg
sbb
insb
xor
xor
gs
xchg
test
sbb
fstl
rorl
shll
inc
or
dec
sub
lods
outsb
das
adc
imul
ja
js
sbb
arpl
and
cmp
cs
ds
sahf
add
mov
adc
fadds
das
sub
mov
in
jl
mov
xchg
push
jns
jl
xor
fcoml
xor
cmp
andl
add
mov
ret
adc
cltd
mov
stc
dec
pop
insb
insl
jnp
out
icebp
cmp
scas
out
ljmp
dec
xchg
fisttps
test
mov
aad
inc
add
in
iret
js
jge
xchg
js
jge
adc
push
out
scas
pshufw
jo
pop
subb
cli
jge
mov
inc
xchg
stos
xor
movsb
dec
add
xor
cld
js
lock
sbb
ss
jge
adc
imul
pop
xchg
and
fldt
fistl
cmp
sub
in
xchg
daa
cltd
imul
fstpl
add
jns
xchg
dec
mov
imul
cs
push
movsl
cmc
aas
add
nop
jbe
inc
rcl
mov
lods
cmp
sti
push
lcall
out
into
mov
and
aas
and
in
pop
pushf
mov
addr16
add
stos
sahf
test
sbb
int
cmp
dec
inc
adc
pop
ds
push
inc
sahf
cmp
push
test
xor
mov
mov
xchg
fdivl
leave
mov
sbb
lods
js
mov
cs
mov
push
stc
mov
out
cmpl
es
insb
popa
in
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
out
and
jl
cmp
xchg
inc
scas
ret
sub
ss
ret
xchg
ds
mov
xor
dec
push
aaa
xor
add
lcall
add
push
push
pop
insl
les
push
push
dec
aaa
adc
mov
push
cwtl
int
fnstcw
push
pop
mov
xor
mov
dec
mov
adc
xor
and
xlat
mov
adc
aas
outsb
aam
xor
inc
mov
or
mov
cmp
push
adc
xchg
jl
cmpsl
movsl
and
sahf
xorb
adc
loope
dec
mov
pop
adc
mov
dec
pop
aam
push
stos
mov
dec
movsb
sbb
aas
les
sbb
or
add
lahf
arpl
mov
push
lret
dec
cltd
ss
in
leave
ficomps
pop
in
loopne
lahf
and
leave
rcll
xchg
clc
pop
push
push
jle
xor
ja
insl
xchg
lret
das
lret
js
pop
push
ret
adc
out
fmull
sbb
mov
adc
xor
add
or
js
inc
push
fadd
pop
int
and
jge
vpsraw
movsb
sub
bound
fsub
ficompl
adc
pop
push
sbb
scas
mov
mov
xor
mov
mov
or
testb
inc
jge
nop
xor
pop
xlat
test
adc
fistl
fidivrs
ret
sub
sub
aaa
pop
movsb
enter
std
xchg
xchg
push
sahf
loop
lret
cmp
push
xchg
imulb
mov
adc
mov
cmp
je
dec
mov
lds
add
sub
fisubrl
in
push
fcmove
je
scas
pop
dec
jnp
insb
daa
rcrl
test
cmp
in
testl
sub
adc
shr
xor
data16
jg
sti
outsb
ret
dec
cmc
lret
out
add
jo
dec
nop
mov
mov
pop
dec
cmp
sbb
sub
mov
add
lea
shl
sbb
bound
sahf
mov
jns
push
pop
pop
sbb
fcmovnu
jns
out
rorb
xor
into
les
in
sub
insl
pop
pusha
stos
xchg
stos
mulb
daa
js
test
iret
fisubrs
js
bound
mov
aaa
add
in
push
jg
sbb
mov
adc
xchg
out
or
xchg
pop
push
clc
lea
movsl
mov
fldt
xor
arpl
imul
jne
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
cld
pop
loop
mov
jle
jo
inc
push
mov
ds
xchg
dec
pop
ds
push
js
xor
dec
leave
pushf
pcmpgtd
into
inc
adc
mov
icebp
xchg
jle
gs
ja
stos
ljmp
dec
mov
inc
inc
xchg
mov
xor
out
jb
xor
test
adcl
pop
cmp
mov
subl
cmp
cmp
inc
ss
icebp
loopne
mov
lret
jg
push
inc
mov
mov
fcmovb
pop
icebp
jg
cmp
mov
scas
sub
out
push
mov
jle
lods
dec
outsb
stos
jb
mov
ljmp
rep
sbb
lock
jo
scas
mov
mov
mov
sbbl
sbb
mov
mov
jp
leave
mov
push
mov
scas
ja
jns
or
out
mov
imul
lret
popa
je
push
mov
and
cli
pop
and
lods
fwait
lcall
mov
test
pop
xchg
lahf
enter
push
ficoml
incl
pop
push
push
jecxz
jg
pop
mov
or
xor
mov
jmp
les
dec
ret
ffreep
dec
insl
jle
push
xor
adc
jb
and
rcrl
cli
mov
fisubrs
or
mov
or
lcall
sbb
clc
sbb
loope
cmp
fstps
adc
fadd
popa
icebp
inc
sbb
sub
sbb
mov
cmpb
cmpsl
inc
jne
test
or
jo
int
lret
sub
mov
sbb
cmp
inc
enter
gs
js
sarl
lcall
push
in
movsl
cmp
fcompl
bound
cwtl
fildl
xor
push
repz
pop
scas
mov
ret
pop
lahf
cmp
shll
imul
inc
xchg
dec
shlb
je
test
mov
test
dec
mov
ret
outsb
inc
jns
inc
in
addr16
or
pop
and
sbb
incl
push
jnp
push
cmp
cmp
push
dec
lcall
jmp
orb
arpl
cli
mov
lahf
hlt
mov
lods
lahf
sub
fwait
xchg
insb
lods
das
push
nop
mov
std
popf
push
fsubrl
xlat
jb
icebp
into
pop
adc
xchg
mov
mov
scas
cld
sub
pushf
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
cmp
outsb
jo
mov
out
enter
ret
insb
jmp
mov
pop
popf
arpl
fisttpl
mov
cmp
mov
push
loope
cwtl
pop
inc
orb
arpl
mov
inc
lods
loopne
and
inc
ss
dec
mov
jbe
xor
sub
lds
lea
sarb
repnz
inc
clc
and
fwait
jne
add
push
int
daa
mov
fsubs
lds
or
orb
push
cmp
sub
lret
imul
jbe
int3
add
mov
fldl
sub
ret
aas
in
mov
inc
ds
movsb
push
mov
loop
mov
pop
sbb
or
stos
faddl
mov
adc
aad
mov
shlb
inc
inc
cs
repnz
ljmp
cltd
push
mov
outsb
les
mov
mov
inc
pop
lea
push
in
ror
movsb
and
lret
lods
add
insb
push
or
fadd
pop
in
xchg
rolb
mov
out
jl
pop
scas
add
call
data16
sbb
fsubrs
push
xchg
adc
das
rorb
xchg
movsb
lock
adc
adc
in
push
cmp
iret
pusha
inc
ds
jbe
notl
mov
xchg
jmp
push
out
sbb
mov
pop
nop
push
les
arpl
dec
gs
in
rorl
movsl
jb
insl
and
dec
call
jg
call
decb
pop
pop
sub
cwtl
mov
cmpb
lret
dec
add
or
shll
pop
or
pushf
leave
stos
sarb
push
leave
test
leave
sar
inc
mov
orl
jbe
jmp
in
out
movsb
dec
lock
js
jmp
fld1
mov
js
movsb
mov
lock
dec
jp
into
add
jne
xchg
pop
lods
test
cmp
push
xchg
mov
daa
or
test
ljmp
mov
rcl
dec
adc
loope
cmpsl
push
fcompl
sub
fs
cltd
lock
mov
jb
jle
push
aad
ror
pop
pop
mov
loopne
inc
popa
sbb
fadds
cltd
sub
movsb
fcomps
and
dec
jl
cmp
mov
loopne
pop
mov
pop
sbb
enter
loopne
push
icebp
lea
jae
sub
fldenv
xchg
ret
fcomps
jp
dec
push
ret
and
cmp
or
sbb
inc
sarb
jne
pushl
jmp
and
lods
shrb
in
pop
add
add
jle
jo
int3
add
jecxz
mov
sarb
mov
in
lcall
mov
xchg
ljmp
jle
adcb
stos
adc
lea
repz
scas
ss
out
xchg
or
cmp
cmp
lahf
mov
pop
or
faddl
idivl
and
ficoms
test
jo
xchg
mov
aas
in
mov
sahf
push
aas
mov
xor
and
push
mov
sbb
sub
xlat
mov
loop
fwait
cs
push
adc
ficomps
mov
hlt
ljmp
cli
popf
mov
mov
in
loope
jmp
and
cld
jg
out
int
pminub
mov
jg
jno
pop
or
dec
dec
or
addr16
push
mov
or
sub
fimuls
xor
in
sub
sub
and
adc
xchg
repnz
and
xor
lcall
pop
mov
lahf
push
cmpl
lcall
pop
enter
mov
dec
and
insb
mov
dec
dec
mov
movsb
jo
or
shrb
scas
insl
popw
clc
fxch
movsl
mov
cmpsl
hlt
jmp
add
repnz
mov
clc
pushf
xchg
sbb
imul
push
sbb
mull
xor
les
mov
cld
test
sbb
out
xor
stos
lea
jge
jg
push
sbb
out
movsl
mov
mov
mov
add
cmp
cmp
ds
lods
dec
out
push
jge
jl
out
imul
jg
fisttps
cmc
insl
xor
pop
dec
lret
out
or
int3
pop
jl
or
mov
out
test
pop
shll
pop
aam
and
push
fstps
pop
push
outsl
std
pop
push
jne
mov
mov
jnp
cltd
and
mov
lds
test
sti
nop
jp
test
xor
jp
pop
mov
push
pusha
shrl
lea
imul
mov
pop
push
out
shl
xor
mov
outsb
js
fbstp
jb
mov
jns
dec
xor
sub
cld
aam
push
aam
xchg
out
into
sti
divb
xchg
pop
sub
clc
jo
andb
jg
sub
bound
xor
lret
xor
jno
das
ljmp
jb
out
arpl
call
jmp
pop
insl
and
xor
insl
jp
or
mov
push
jo
repnz
cmp
adc
adc
pop
mov
or
add
in
das
cld
mov
adc
inc
sbb
dec
pop
loopne
ss
test
pop
cmpsb
or
xchg
inc
pop
loope
sbb
sbb
xchg
icebp
cmpsb
cwtl
push
and
mov
fildl
add
sbb
mov
fbld
ud0
sbb
mov
addb
pop
adc
jecxz
ret
rol
adc
out
xchg
sti
shl
call
cmpsl
jg
cmp
fistps
pop
lahf
pop
imul
lds
push
scas
add
clc
jae
or
pop
or
mov
das
mov
dec
adc
scas
ds
into
dec
shrl
push
push
in
adc
xchg
mov
mov
loope
push
data16
xor
jg
adc
pushf
mov
mov
jle
adc
mov
pushf
xchg
pop
xchg
sbb
test
xor
insb
nop
or
sub
sub
mov
stos
xor
add
lock
arpl
ret
xor
xor
das
xor
lret
and
jp
leave
inc
xor
mov
lret
adc
mov
int
orl
jo
loop
adc
daa
aam
rorb
les
sbb
adc
insb
mov
ljmp
mov
rcrb
mov
fidivl
jne
mov
lcall
insb
xchg
jb
or
adc
cltd
scas
xor
mov
mov
cmp
mov
fimull
in
adc
jecxz
outsb
cmpl
add
pop
pop
in
out
int3
jne
mov
in
jae
jecxz
jns
sub
test
lods
out
std
push
lea
mov
mov
cmp
stos
mov
pop
js
bound
cs
dec
hlt
jecxz
mov
jecxz
adc
push
push
cmp
mov
leave
test
jno
xor
test
das
into
pop
add
ss
das
push
inc
decb
orb
lret
ds
nop
in
and
pop
push
ror
jmp
jg
jle
movsb
movsb
movsb
push
and
xor
jl
test
ret
mov
mov
je
ja
push
dec
pop
add
mov
shll
cmpsl
ret
adc
aas
sub
sbb
pop
sahf
scas
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
popl
jbe
jo
jle
jo
or
jns
in
imul
xchg
pop
xchg
and
jg
mov
cmp
mov
and
and
jae
lret
in
in
push
sub
out
jecxz
inc
test
mov
dec
repnz
xor
jbe
aas
ja
mov
and
cmp
test
jns
lods
cmpsl
push
notb
push
push
cmp
scas
stos
or
mov
cltd
iret
xchg
mov
scas
mov
xorb
test
outsl
testl
jbe
mov
jg
or
fidivs
sbbb
sahf
xchg
mov
pop
pusha
iret
mov
mov
inc
adc
dec
sub
ljmp
cmp
pop
hlt
gs
push
push
mov
dec
nop
xor
pop
pop
dec
jp
xchg
add
cmpsl
pusha
rolb
mov
outsb
std
imul
ss
and
sbb
clc
jne
cmc
push
jns
dec
mov
lret
add
lods
cli
xchg
mov
sti
rorl
das
mov
jnp
ja
aas
jp
xor
pop
jno
jl
jno
xor
mulb
add
adc
sbb
sub
mov
xchg
jae
out
lods
loope
jge
loope
stos
sti
fisubs
mov
rcrl
pop
mov
cmpb
shrl
ret
push
dec
ret
imul
outsl
push
push
pushf
andb
mov
popa
or
sbbl
mov
hlt
rorb
adc
arpl
pop
loop
jg
mov
stc
push
xchg
push
dec
or
push
ror
aas
dec
xchg
imul
mov
mov
mov
inc
push
lods
inc
cmp
in
scas
add
out
lock
les
mov
ret
ret
movsl
rorb
popa
jge
push
daa
mov
add
movsl
add
sar
push
mov
out
ret
repz
and
mov
and
sub
fists
imul
cmp
repz
inc
push
sub
mov
sbb
iret
stos
stos
int
nop
stc
in
sub
mov
orb
roll
out
adc
pusha
jl
lock
mov
repnz
movb
jl
ret
sbb
sbb
push
arpl
cmc
imull
pop
jo
cmp
xor
xor
dec
add
push
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
mov
push
mov
icebp
pop
add
and
xchg
out
xor
pop
mov
jg
ret
jns
mov
insl
sbb
adc
mov
scas
jle
lahf
bound
test
xor
xchg
lret
push
movsl
jmp
sub
jp
add
cltd
adc
bnd
sub
add
and
pop
or
ret
fsubrl
xor
mov
mov
xorb
dec
into
mov
rdtsc
aam
push
sti
fadd
cmp
xor
pop
pop
jmp
sub
push
cltd
push
fnstcw
js
addb
std
or
in
cmp
mov
mov
negb
popf
inc
out
pop
lcall
mov
lahf
dec
sbb
iret
sbb
fstps
jae
add
jle
sub
popf
xchg
rolb
loope
jb
movsl
mov
movsb
or
xchg
lods
mov
lcall
or
pop
arpl
test
loope
loope
stos
les
pop
movsl
mov
shrl
xor
dec
cmp
fidivs
jge
add
stc
scas
enter
cmpsl
out
xlat
xbegin
or
xchg
mov
bound
xchg
shrb
and
rorl
adc
out
xchg
push
sti
repz
mov
adc
fcompl
mov
or
mov
repnz
push
test
mov
arpl
dec
xchg
dec
testl
shrb
inc
mov
pop
icebp
mov
daa
sub
and
nop
or
pop
or
push
push
testb
outsb
mov
xchg
push
pusha
fs
fsubrl
outsl
cmp
js
mov
stos
out
movsl
test
sti
out
int
aaa
dec
test
out
adc
movsb
fiaddl
les
adc
mov
jns
fldl
pop
pushf
mov
bound
push
aad
cmp
fwait
rcl
roll
addr16
jecxz
mov
pop
xchg
cli
jge
adc
mov
pop
jb
jmp
and
and
adc
rcrb
stc
ret
sub
pop
mov
stc
decl
xchg
jne
jge
test
aaa
adc
or
leave
xchg
or
ffreep
data16
data16
lret
sarb
and
outsb
push
adc
jecxz
jl
int
cmp
jecxz
mov
jb
repz
shrb
outsb
sbb
sub
pop
lret
repnz
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
push
leave
jo
jo
jle
jo
push
ds
adc
lods
cmc
sub
imul
les
sbb
sub
pop
xchg
jge
cmp
mov
or
mov
jbe
in
icebp
mov
mov
ficoms
push
mov
add
sub
push
dec
popf
mov
xchg
fsubrs
lock
push
and
adc
mov
pop
mov
dec
scas
xor
jmp
xchg
jae
mov
loop
jle
sub
stc
call
dec
add
gs
aad
cmc
mov
pop
shrl
movsb
stos
and
xor
outsl
addb
addr16
ljmp
gs
ret
dec
inc
arpl
inc
xchg
or
mov
cltd
stc
popa
xor
push
push
stos
je
sar
fcmovnu
push
aam
xchg
out
and
lret
mov
inc
aas
cmp
rorb
push
cmp
mov
lret
cmp
out
cmp
shll
call
mov
ljmp
pop
push
outsl
sub
incb
out
mov
lds
add
and
dec
xchg
xchg
pop
bound
or
xchg
cli
pop
insb
movsl
fidivs
testb
das
adc
push
int
cmp
cmp
mov
ds
and
icebp
ret
mov
mov
xchg
and
test
cmp
sub
and
push
pop
xchg
out
jge
inc
imul
lea
and
outsb
aad
jecxz
icebp
inc
push
out
mov
jp
insb
pop
push
and
mov
rorl
repnz
fldcw
push
sub
out
add
inc
add
lcall
sahf
nop
movsl
sbb
sbb
mov
mov
das
mov
int
popf
add
pop
cmp
sub
mov
jbe
cmp
lahf
or
inc
add
mov
call
and
mov
data16
jmp
mov
adc
es
mov
cli
out
xlat
mov
popf
es
int3
out
cmp
ja
sbb
pop
jecxz
stos
mov
frstor
add
int
cli
into
mov
xchg
push
push
xor
xorb
out
js
or
xchg
sti
and
popf
sub
lret
mov
jmp
xor
rcrl
cmpb
jnp
mov
push
sub
xor
out
push
imul
xchg
loop
cmp
xor
jmp
add
mov
jb
jge
jge
xor
adc
jo
jle
jo
pop
xchg
push
int3
jb
cmp
aad
cmc
repz
fsubrs
stos
je,pt
xorb
sub
dec
popa
add
out
popa
jl
push
jecxz
out
xchg
push
add
repnz
fldt
push
lock
sbb
push
hlt
lret
cwtl
imull
pop
testb
pop
and
movsb
into
inc
cmp
sbb
adc
call
push
mov
cmp
or
mov
pop
test
xor
int3
cltd
je,pn
out
int
lahf
inc
pop
pop
or
call
jecxz
aas
cmp
sbb
mov
cmc
mov
and
lods
stos
inc
lock
repz
int
movsl
sub
sub
push
jnp
stc
mov
mov
sub
push
inc
xchg
mov
cmp
pop
test
les
pushf
mov
mov
cli
jg
push
leave
movsl
pop
lea
cmp
and
out
int3
cmpsl
out
cld
mov
or
pop
push
in
sti
pop
ja
jnp
jg,pn
rorb
popa
adc
fistl
les
testl
xor
dec
mov
jmp
adc
adc
fidivrs
jl
pxor
in
movsb
mov
xchg
sbb
sarl
push
shll
mov
dec
sti
jmp
or
fstpl
jg
in
mov
push
ljmp
jmp
ljmp
sarb
push
jl
imul
call
fsubrp
ret
adc
call
mov
out
stos
fsubrl
cmp
sub
jne
inc
fsubs
xor
pop
leave
sub
adc
cwtl
popa
add
or
insb
clc
jo
lods
in
xchg
fsubrl
lock
sub
xor
rolb
stc
pop
lret
push
lret
test
loope
xor
jmp
dec
push
xchg
mov
jae
mov
testl
les
jmp
in
lods
loopne
adc
or
mov
aaa
xchg
fidivrs
outsl
addl
divb
add
pop
sbb
jnp
push
dec
insl
sbb
icebp
sub
daa
add
sahf
ja
jmp
inc
cltd
test
lret
cs
adcb
fcomp
stc
and
bndldx
dec
sub
negb
add
fistpl
mov
and
xchg
sbb
notb
adc
stos
enter
scas
test
push
sbb
push
push
xor
sarb
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
aad
cmpsb
lret
pop
jnp
jo
jle
jo
adc
adc
cltd
mov
dec
jo
jg
gs
leave
and
leave
cli
aas
adc
call
mov
push
xchg
cmp
shll
enter
stos
push
repz
dec
inc
repnz
inc
scas
dec
push
fildll
fnstsw
out
dec
fwait
mov
mov
inc
push
jl
cwtl
sub
jecxz
movsl
outsb
sahf
andb
adcl
nop
adc
insb
out
xchg
inc
movl
jmp
mov
jmp
lret
gs
add
rcrb
xchg
add
lods
push
out
mov
xchg
jno
dec
mov
add
imul
sub
xlat
push
xor
push
jle
add
rcrb
ja
adc
dec
jbe
dec
jo
mov
cmp
jle
jno
xor
popa
mov
mov
lcall
ljmp
daa
sub
filds
out
lds
in
mov
xor
mov
push
fidivrs
out
adc
addr16
inc
mov
call
fisttpl
daa
in
fildll
iret
test
xchg
xor
outsl
clc
add
pop
jmp
js
fmuls
sbb
test
jb
clc
push
or
into
insl
xchg
sub
dec
aam
xor
sti
les
nop
aaa
jns
jns
push
mov
sub
stos
das
xor
mov
div
add
xor
pusha
test
incl
shrl
sub
lods
cs
jmp
dec
cmp
clc
adc
bnd
push
test
xchg
in
jb
sti
cmp
dec
add
mov
aaa
fimull
imul
jne
icebp
xchg
dec
add
es
fwait
xchg
arpl
mov
mov
mov
scas
adc
bound
sbb
ficomps
mov
call
rcrl
insb
in
sub
sub
movsl
fstps
shll
add
inc
cmpsb
cmp
inc
dec
push
call
adc
stos
sbbb
xor
insl
in
scas
mov
xchg
iret
sub
loopne
shl
movsl
into
ret
ljmp
push
mov
and
lods
addr16
out
mov
fsubrl
sbb
mov
int
pop
in
pop
aaa
xchg
lods
ja
pop
cmp
cvtps2pi
fs
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
xchg
lock
js
jo
jle
jo
icebp
jmp
movsb
jl
ret
and
fcompl
ret
add
cmp
mov
mov
bound
lret
xchg
scas
mov
inc
pop
and
push
sbb
lock
lock
cmpsl
add
or
imul
lods
addl
xchg
xor
xchg
setl
je
jl
or
inc
sbb
addr16
xchg
rcll
fstpl
xor
cmp
xor
data16
jbe
popf
adc
xrstors
hlt
adc
scas
cltd
cmp
popa
cmp
jecxz
leave
icebp
mov
push
cmp
push
xor
jae
xor
jns
popf
fisubs
gs
xor
and
pop
popf
cwtl
ja
in
sub
nop
stc
pop
push
fidivs
inc
and
or
sbb
mov
pop
and
lock
inc
loop
jno
test
outsl
push
aad
adc
adc
or
andl
push
filds
ljmp
pushf
cmp
out
imul
shlb
mov
cmpsb
xchg
inc
rcr
sti
mov
mov
cmpsb
mov
in
cmc
sbb
adc
adc
xchg
cli
hlt
push
dec
sbb
add
mov
mov
jle
repz
and
dec
in
add
int3
cmpsl
mov
add
into
push
push
nop
repz
mov
pop
jmp
mov
mov
jmp
jle
loop
or
cmp
adc
scas
addr16
push
jbe
xchg
sbbl
mov
and
lods
aam
scas
dec
mov
or
mov
and
xor
cmp
iret
les
pop
fwait
push
loope
jmp
leave
push
sub
cmpsl
mov
mov
sub
ja
data16
sbb
sbb
and
lcall
scas
and
ja
shrb
mov
inc
mov
sbb
adcb
int
stos
xchg
out
daa
jecxz
xor
in
sub
and
jae
fcmovnbe
adc
rolb
pop
sarl
testb
insl
andb
xchg
xorb
push
pop
adc
repnz
mov
push
movsb
xlat
xchg
inc
pop
sarb
imul
in
shrl
push
repz
mov
cld
mov
adc
int3
add
aas
fwait
popf
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fsts
pop
jb
add
jo
lahf
mov
nop
sub
jns
cli
icebp
pop
mov
push
or
cmpsl
insb
mov
sub
das
cmp
dec
xor
sub
popf
hlt
sub
into
mov
push
dec
lret
add
sbb
xchg
rcr
aas
in
sbb
pop
repz
out
xchg
inc
cltd
add
ret
push
loope
xchg
in
and
inc
scas
lret
pop
sub
jmp
mov
push
pop
rcr
cmpsb
pop
add
fdivrs
shrb
clc
mov
fs
mov
pusha
jl
or
mov
add
enter
mov
js
push
mov
pop
adc
push
push
pop
xchg
fistpll
cmpsb
sub
sahf
fadd
inc
inc
ret
hlt
add
aas
gs
pop
je
test
mov
fisubs
fistl
adc
mov
lea
cmpsl
aam
ds
sbb
rcrl
mov
mov
mov
data16
outsl
dec
scas
test
jb
and
test
or
pop
inc
jg
out
sub
shr
popf
mov
mov
push
mov
ljmp
cltd
paddusb
fildll
ljmp
fsubrs
lock
shll
movsb
cmp
lods
mov
lret
imul
sbb
xchg
or
and
insb
pushf
fnstenv
xchg
xor
and
lods
int
mov
rcrb
clc
xchg
sub
jge
adc
sub
es
cmpsl
inc
lahf
shlb
stc
ss
inc
sbb
ljmp
icebp
ficoms
scas
xchg
jo
sbb
mov
scas
fdiv
adc
aam
pop
jne
xchg
loope
mov
sub
inc
arpl
mov
mov
lret
and
xchg
addr16
cwtl
lods
add
filds
mov
icebp
cmp
mov
pop
jp
or
sbb
aad
stos
jae
stos
inc
cltd
pop
in
ficompl
jae
mov
out
mov
sub
jge
shll
out
adc
or
cmp
cmp
arpl
lret
mov
xor
mov
sbb
and
lea
mov
test
cwtl
xchg
imul
adc
mov
lret
and
rcll
mov
jae
and
push
int
xor
inc
pop
mov
enter
cmp
xchg
and
in
lods
sbb
out
call
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
insb
sub
add
mov
jbe
xor
cmp
xchg
xlat
mov
ret
mov
inc
rcll
add
mov
scas
mov
pusha
cli
or
jecxz
sbb
mov
sahf
xlat
movsb
sbb
adc
xor
xchg
movsb
pop
fisubl
fisttpll
gs
push
fdivrl
into
mov
xor
push
enter
inc
pop
cwtl
sbb
xor
rorb
mov
xchg
lret
xor
icebp
xchg
fwait
mov
pop
repz
jp
movsl
sub
dec
sub
aad
fstpl
pushf
or
cld
es
pop
jno
mov
scas
cmp
test
cmp
push
ffree
jg
imul
ds
addr16
inc
add
faddl
or
ja
jg
out
cs
jns
inc
push
notl
insl
sub
imul
push
shrb
and
fidivl
shlb
mov
faddl
dec
out
cmp
pop
sarl
push
ja
xor
inc
ljmp
cmp
mov
cli
fsubl
ljmp
pop
bound
cmp
andb
inc
rep
jbe
xchg
aad
stos
jmp
out
inc
or
push
movsl
jne
lret
loop,pn
sub
inc
jbe
andnps
mov
push
inc
sbb
mov
and
test
xor
mov
or
shll
xor
les
cmp
jge
cmc
xor
sbb
leave
sbb
into
mov
adc
jno
add
adc
test
fsubrl
addr16
mov
mov
outsl
inc
sub
fiadds
xchg
outsl
loop
push
lods
stos
push
inc
jnp
push
sub
pop
test
call
mov
jp
and
out
mov
cmp
adc
sbb
dec
push
nop
and
dec
shrl
cmp
xchg
push
mov
cld
pop
stc
jo
add
pusha
es
repnz
mov
inc
sar
loop
xor
lret
mov
lahf
mov
jno
imul
inc
test
mov
out
js
or
adc
xor
dec
scas
mov
cwtl
aam
sbbl
ja
pop
dec
cmp
push
inc
xchg
adc
pop
repnz
ror
lods
dec
lret
cmp
push
fisubl
in
mov
out
stc
sti
and
sbb
mov
sbb
movsl
pop
dec
mov
pushf
add
jbe
jle
xor
gs
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
jg
in
movq
jle
jo
int3
lods
add
test
cli
mov
loope
loopne
out
insb
faddl
outsl
stos
or
jo
shrb
jb
add
mov
and
ja
sub
mov
jg
push
dec
ljmp
sbb
ss
jmp
imul
mov
and
xor
ss
jae
out
inc
bound
pop
sarb
insb
jp
sub
lds
fnstenv
inc
xchg
hlt
inc
xor
repz
jp
popf
popf
scas
dec
sbb
jmp
xor
mov
inc
loop
xor
xor
out
dec
mov
pop
gs
js
add
mov
ror
ret
dec
lock
out
jb
aam
mov
cmp
in
in
mov
in
popf
sti
rorb
fdivl
sahf
jns
jmp
lods
dec
fcoms
dec
inc
loope
xor
in
jnp,pt
enter
imul
test
jp
pop
lea
jnp
mov
add
xchg
add
xchg
dec
lods
add
cmp
subb
cld
rcll
mov
stos
and
lret
xchg
sbb
cmp
jo
test
repz
dec
xor
add
xchg
add
out
xchg
dec
out
inc
cwtl
sbb
in
mov
cmp
pop
xchg
add
mov
mov
lock
adc
cmc
enter
xlat
push
imul
ficoml
mov
push
mov
testl
add
add
xor
push
pop
sahf
sub
push
and
push
inc
adc
cld
int
jno
inc
insb
sarl
lret
lods
rclb
pusha
pop
enter
pop
mov
push
push
popa
loop
mov
rorb
push
roll
aas
mov
dec
lret
add
orb
jecxz
loopne
pop
sarb
jecxz
mov
xchg
mov
out
xor
pop
pusha
cmp
test
push
pushf
clc
jg
dec
scas
and
or
jns
adc
rcrb
pop
fldt
dec
jg
cwtl
movsb
mov
cli
mov
mov
cs
stos
pop
loop
mull
testl
push
aad
pop
and
jo
and
stos
aas
jle
push
add
lods
jmp
jl
movsb
and
dec
loopne
dec
inc
shll
mov
jmp
push
add
pusha
xchg
shll
adc
mov
add
add
add
push
fdivrl
pop
xchg
aas
mov
or
jo
xor
inc
sahf
inc
jnp
scas
jne
jle
sub
ljmp
out
mov
lods
pop
jl
nop
je
in
mov
cmpl
pop
mov
iret
mov
lret
jp
bound
mov
jbe
out
adc
mov
jg
inc
pop
inc
dec
aaa
popf
call
push
cli
and
sub
outsl
jg
adc
fidivl
sbb
push
test
jae
inc
adc
in
cld
aam
dec
shl
shrb
mov
inc
call
add
movsl
and
mov
imul
push
out
fcos
and
out
cmp
subl
sub
pop
xchg
mov
pop
sub
mov
mov
jmp
mov
pop
jnp
cwtl
pop
pop
lds
jle
in
pop
lcall
mov
sub
addr16
xchg
push
add
jbe
in
in
lcall
pop
test
jno
test
jge
popa
data16
cmpsl
nop
mov
add
dec
aaa
cmp
outsb
loop
test
sti
pop
sub
jge
dec
decl
dec
in
mov
add
sub
ja
xor
jnp
sbb
cltd
mov
ja
sarl
push
mov
inc
cmp
pusha
jo
ja
lret
mov
test
lods
push
xor
inc
cltd
shlb
push
das
dec
das
mov
call
sbb
test
call
mov
lahf
xchg
dec
or
push
sbb
movsl
loope
mov
mov
adc
xor
or
or
jmp
mov
ficomps
sbb
popa
in
cs
or
pop
andb
lock
lahf
push
jle
ss
jnp
jge
loop
hlt
jmp
pop
sarl
pop
xor
or
mov
push
fwait
pop
adc
or
icebp
fs
cmp
clc
inc
out
sbb
push
xchg
ret
scas
sub
push
adc
pop
roll
in
mov
jb
xlat
out
bound
repnz
cmpsb
cli
cmpsb
repnz
and
cmp
mov
sub
mov
adc
mov
push
fstl
call
invd
enter
clc
rclb
ret
inc
jbe
lods
mov
jmp
fmuls
arpl
cmpsl
cld
lcall
daa
pop
into
jnp
ljmp
inc
insb
jo
mov
adcb
insb
add
mov
sbb
or
push
int
push
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
pushl
jg
mov
mov
mov
mov
pop
scas
fstp
sahf
scas
cltd
dec
mov
ljmp
das
mov
jmp
pop
add
and
mov
xchg
lcall
xchg
orl
lds
ds
mov
jo
jne
add
xchg
subl
pop
cmpb
sub
push
jmp
rclb
or
in
shlb
xor
or
mov
sub
cmp
into
mov
pop
stc
fwait
ja
les
aad
lock
adc
dec
out
cli
lahf
fsubrs
mov
cmp
jmp
outsb
fcmovnbe
sub
jmp
mov
enter
jl
push
cmp
cs
loopne
xchg
test
mov
mov
mov
ljmp
leave
mov
out
pop
push
ret
mov
mov
mov
enter
xlat
inc
pop
and
fwait
out
jecxz
mov
mov
dec
aam
jno
lds
es
lret
popl
pop
add
sub
add
pop
iret
xchg
aad
or
inc
mov
outsl
add
pop
ljmp
lret
cmp
adc
rorb
dec
scas
lcall
pop
lock
push
sbb
mov
leave
dec
pop
inc
lahf
or
lods
lret
rolb
inc
sbb
aaa
jmp
inc
daa
out
xchg
fsubr
sbb
test
add
adc
scas
sub
call
cmp
or
mov
popa
sbb
dec
push
out
mov
push
stos
push
sahf
cwtl
arpl
pushf
cmp
inc
sub
aaa
cwtl
push
pop
xchg
cmp
mov
mov
sub
popa
ja
or
mov
cmp
aaa
lods
mov
popf
xor
test
add
jle
adcl
into
loopne
aad
adc
nop
lods
stos
adc
push
rep
rorl
xchg
xor
sbbl
jnp
lods
sahf
pop
popf
sar
shrl
jae
add
add
movsb
jl
push
mov
xchg
jne
addb
adc
jno
repnz
nopl
fdivl
daa
xchg
lods
mov
sub
jb
dec
movsl
daa
fidivl
xor
pusha
dec
ds
xchg
pop
or
sbb
add
sti
cs
push
std
shlb
adcl
testl
mov
nop
nop
jns
mov
imul
mov
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
cmpsb
popf
fmulp
pop
jg
mov
in
sub
arpl
ret
pushf
cmp
or
mov
sbb
pop
aam
add
ljmp
mov
dec
and
scas
inc
movsl
sti
dec
ljmp
les
ret
cmpb
lret
decb
jle
sub
cmp
cmp
gs
push
roll
ror
add
imul
mov
mov
iret
sahf
add
lock
sub
popa
lock
jge
cmpb
xchg
out
cmpsl
cli
lock
xor
or
jmp
cmp
cmp
pop
inc
sbb
jp
cmp
aaa
sub
cmp
ss
test
jmp
aas
outsl
je
fstpl
fbld
pop
stos
jl
xchg
ja
lcall
mov
nop
js
mov
das
or
adc
cmc
stc
or
lea
cmpsb
push
ss
xchg
mov
call
mov
push
adc
mov
and
insb
inc
movsb
rcll
jecxz
pusha
mov
std
outsb
lods
call
mov
and
idivl
dec
sbb
push
mov
mov
xor
push
mov
sbb
stos
inc
cmp
enter
mov
movsl
dec
popa
mov
fimull
and
stc
int
and
mov
cmp
roll
mov
icebp
lahf
push
cmp
xor
mov
push
insl
dec
int
and
stos
out
test
out
pop
cltd
dec
sub
inc
and
push
scas
bound
mov
mov
push
aad
mov
adc
inc
sbb
add
out
cmp
fbstp
add
lea
jle
out
ds
or
and
sub
dec
xchg
and
push
sub
pop
fwait
adc
push
imul
mov
mov
stc
jo
lahf
inc
mov
cmp
inc
push
pop
out
jno
mov
mov
ret
and
xor
or
out
inc
mov
in
pop
xchg
fs
insl
scas
loop
mov
insb
negb
sub
jmp
fxam
lahf
push
push
mov
mov
mov
and
test
fs
mov
xchg
push
loopne
stos
in
push
mov
cli
andl
clc
push
sub
daa
pop
dec
dec
gs
cltd
mov
lahf
ret
mov
xor
adc
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
sub
adc
jo
jle
jo
je
or
add
or
push
je
mov
mov
xchg
push
mov
sahf
push
scas
sti
js
jo
add
loope
dec
pop
and
jb
insl
push
jg
mov
sub
push
xchg
and
lahf
insb
add
inc
mov
push
dec
jno
jp
sbb
popf
add
leave
popf
add
mov
int
mov
dec
dec
lock
mov
sub
dec
shlb
mov
mov
std
loopne
cs
rorl
push
xchg
iret
inc
mov
test
jl
xchg
nop
push
jmp
mov
push
pop
pop
sbb
and
jp
or
fcomi
push
jno
add
jl
xchg
mov
inc
pop
xor
out
cmc
pop
rcrb
push
nop
ficomps
sub
xor
aad
jmp
lret
fnsave
stos
fwait
mov
popf
hlt
inc
ret
out
xor
leave
add
rcl
sbb
pop
fldt
scas
movsb
cltd
loop
lea
adc
xor
and
jge
je
fs
nop
shl
or
testl
fcomps
subb
jp
out
add
sbb
fldcw
out
sbb
and
in
mov
aas
rcrb
mov
adc
xchg
cmp
inc
mov
movb
fisttps
cmp
push
ss
sub
js
mov
lds
outsl
inc
push
fs
adc
push
faddl
insb
into
xchg
fsubrl
dec
push
or
lods
lcall
cs
or
mov
outsb
cmp
outsl
push
mov
loopne
insb
push
adc
xor
jg
pop
fists
divl
nop
ds
dec
dec
outsb
ret
xchg
cs
add
mov
dec
jae
sub
push
mov
shl
out
or
imul
popf
repnz
mov
hlt
addr16
xor
xor
mov
push
into
mov
lcall
add
push
mov
iret
clc
push
push
in
in
pop
push
int
dec
outsb
popl
jns
dec
popf
bswap
scas
xchg
cwtl
insb
jge
sbb
mov
inc
enter
out
add
stos
and
xor
mov
push
sbb
mov
das
inc
cmp
and
push
stos
mov
dec
filds
push
cmpsl
inc
shlb
rol
cmpb
test
leave
adc
dec
push
loop
xchg
xorb
or
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
push
cmp
jo
jle
jo
pop
cli
mov
lods
dec
cmc
lahf
sarb
rcrl
pop
stos
or
lods
fdivs
cltd
lock
rcrl
dec
ljmp
jbe
mov
sbb
sbb
repnz
pop
lcall
mov
push
dec
scas
adcb
jno
xor
mov
mov
in
scas
sbb
mov
jo
inc
in
popf
clc
inc
mov
ljmp
std
leave
arpl
out
or
test
in
shll
sub
ja
pop
cmpsb
xchg
movsl
dec
push
loope
mov
xor
jne
lds
or
inc
lret
jg
fimuls
adc
xor
jle
jg
in
xchg
dec
mov
ret
jl
imul
sub
aas
push
fdivl
jecxz
push
incb
dec
fildll
adc
fists
test
insb
lret
push
jg
pop
inc
add
stc
test
lret
cltd
xchg
lock
push
xchg
push
lds
mov
fidivl
dec
or
fwait
cs
mov
jae
sbb
movsl
mov
mov
pop
addr16
or
dec
sti
push
ja
push
ret
bound
sub
int3
dec
push
push
sub
sbb
dec
xor
push
int3
inc
mov
mov
les
adc
mov
pop
ret
repnz
test
pop
out
movsl
loope
cmpsb
jge
mov
in
je
and
xor
lods
fsubrl
lahf
push
imul
sub
repz
and
push
loopne
adc
lret
stc
sub
cmp
cltd
test
cwtl
clc
test
frstor
out
pop
dec
sub
cld
dec
jmp
inc
dec
xor
dec
jne
xor
or
adc
or
mov
adc
filds
aam
lahf
jp
push
iret
push
ds
ss
scas
mov
movsl
imul
push
mov
sahf
sub
jmp
inc
inc
or
mov
xchg
outsb
outsb
inc
nop
shlb
mov
dec
insl
xchg
shll
scas
fisttpl
sbb
push
jae
int
popf
je
push
push
sbb
pop
icebp
sbb
add
jle
fcom
push
clc
dec
fldt
xor
xlat
dec
mov
mov
les
inc
mov
xchg
push
add
dec
repz
xchg
jmp
cmc
std
fs
jno
mov
cmp
test
jo
jle
jo
pop
jbe
pop
dec
fsubrp
dec
test
pop
imul
je
xor
andb
cmp
xor
pop
dec
repz
pop
popf
loop
push
dec
ja
bound
ljmp
sub
stc
repnz
push
push
stos
shrl
pop
mov
jge
xchg
mov
cmpsb
sub
sub
jp
mov
cmp
adc
repnz
ja
cs
pusha
push
int
push
addr16
xchg
js
pop
stos
xchg
jg
mov
dec
clc
out
mov
insw
vandnps
fldenv
popf
or
stos
jbe
hlt
lds
inc
js
dec
out
and
scas
cli
test
add
std
pop
popf
stos
pop
push
cmc
add
scas
and
setge
xchg
jecxz
add
sub
dec
push
mov
or
in
or
xor
push
pop
xlat
xor
push
mov
data16
cmpsb
fidivrs
fxch
fidivl
les
sub
dec
mov
mov
xor
mov
push
jge
sub
fldenv
cwtl
outsb
pusha
xor
out
rcrb
dec
jg
mov
aas
arpl
rcll
outsb
out
jns
mov
shlb
cmp
mull
fisttpl
stc
lods
dec
cmp
add
aaa
add
or
pop
int3
fildll
ficompl
shrb
outsb
aam
aam
inc
in
imul
loope
pop
xchg
std
cmp
in
cmp
jle
ret
mov
rorl
mov
xor
sbb
and
jp
inc
mov
fs
out
cmpsl
enter
fcompl
stc
mov
aad
xchg
dec
sbb
movsl
adc
rorl
ds
cmp
push
xlat
dec
aas
into
inc
add
rcll
call
mov
popa
inc
pop
dec
in
add
cmpsb
cmc
dec
bound
sbb
pop
xor
addr16
ficoms
xchg
in
mov
mov
mov
adc
insl
inc
hlt
jne
scas
jno
mov
jb
test
push
out
mov
xor
leave
pop
or
xlat
jne
adc
mov
das
xchg
scas
mov
loopne
inc
pop
mov
sarl
inc
jbe
insb
sbb
lds
xor
adc
nopl
imul
lret
in
dec
ror
cmp
test
mov
enter
or
imul
inc
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
sarb
aas
out
sbb
jo
jle
jo
in
insb
add
mov
sbb
push
dec
xor
jns
test
jp
xchg
repnz
gs
lret
hlt
fildll
sbb
sub
xor
push
in
repz
out
and
xchg
iret
cli
inc
mov
sahf
out
call
fsubrs
outsb
lock
mov
mov
or
pop
rcl
int
sub
pop
push
push
push
mov
adc
int
and
mov
cwtl
jb
and
push
data16
rclb
and
stos
jmp
clc
lds
xor
popa
sub
into
or
arpl
aam
sbb
push
imul
into
fsubrs
insb
sbb
scas
cmp
mov
in
test
mov
and
xbegin
mov
lahf
xchg
jmp
cs
add
add
das
repz
xchg
and
cmp
inc
or
or
fldenv
and
leave
and
pop
lcall
daa
add
loop
cltd
ficompl
jecxz
movsl
jg
dec
in
inc
aad
arpl
mov
aad
lret
pop
lds
notl
mov
pop
cmpsb
or
inc
popa
xchg
inc
cltd
mov
lcall
or
xchg
scas
inc
mov
cs
mov
lahf
mov
jns
xor
or
mov
mov
xchg
mov
fmuls
inc
jns
ss
sub
mov
out
popa
xorb
xor
sbb
mov
rcll
inc
cmp
cmp
es
sub
sub
pop
jae
je
arpl
push
aaa
push
add
cltd
repz
jbe
mov
imul
loop
mov
pop
sbb
push
adc
leave
pop
and
daa
fcomps
cmpsl
leave
sub
fwait
hlt
fwait
jp
imul
mov
pop
into
std
dec
add
and
sbb
xchg
out
mov
iret
sub
ds
and
sbb
sbb
or
pop
popa
stos
add
js
dec
dec
push
std
sti
sbb
cmp
enter
push
into
fcoml
bound
push
into
xor
out
loop
mov
sahf
or
test
sarb
cwtl
es
je
xlat
stos
mov
jae
shl
or
ljmp
int
lret
push
inc
out
xor
pushf
jl
push
test
xor
in
out
arpl
lcall
fisttpl
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
negl
aam
aaa
sbb
mov
cmp
dec
sbb
pop
pop
ret
fldl
in
decl
adc
mov
jae
add
movb
fwait
cmp
aam
mov
int
ss
dec
pop
sbb
jno
pop
lods
xchg
cmp
lea
jb
mov
jmp
es
insl
dec
cmpb
ret
aas
xlat
aas
xchg
pop
shrl
faddp
aas
adc
enter
inc
mov
repnz
ljmp
xchg
je
pop
test
mov
adc
ljmp
xorb
stos
pop
sbb
into
in
outsb
arpl
outsl
inc
sub
fldl
add
jge
push
popa
adc
lret
dec
shrl
push
fldl
lods
mov
aas
bound
outsb
pushf
arpl
dec
mull
jnp
loopne
jecxz
cmpsl
imul
aas
mov
insb
nop
imul
out
cmp
jl
int3
in
cmpsl
sub
pop
adcb
imul
push
nop
mov
loopne
jge
mov
inc
icebp
inc
and
sti
jge
mov
arpl
fld
inc
and
cmp
jo
pushf
and
sarb
jbe
out
loopne
cmovge
cmpsl
or
cmp
push
fcomps
push
movsb
es
out
inc
sub
aam
lods
xlat
out
jb
inc
sarb
lcall
mulb
mov
jns
pop
sub
cmp
push
pop
aas
lods
inc
repz
addr16
ljmp
or
mov
sti
mov
pop
mov
adc
lret
mov
inc
aam
lret
iret
lods
pop
jmp
mov
cmp
popa
sub
cmp
dec
adc
sti
in
pop
add
mov
out
xor
int
pop
out
dec
and
push
int3
and
mov
mov
push
insb
jp
cmp
ret
pop
andb
iret
fucomip
adc
into
std
icebp
and
lds
jns
shlb
cmpsb
sbb
pop
dec
dec
lock
inc
jne
repnz
addb
dec
mov
in
mov
inc
adc
sub
pop
fistpl
inc
aaa
fstpt
inc
jne
ret
outsb
rolb
xchg
out
jge
or
int3
in
ffreep
sbb
dec
imul
adc
and
in
jl
iret
decl
mov
dec
mov
daa
ja
dec
and
ja
dec
cmp
ss
into
sub
sub
or
mov
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
xchg
xor
jo
jle
jo
lcall
cld
inc
and
movsb
movsl
mov
subl
outsl
sbb
mov
xor
ljmp
enter
jecxz
dec
xchg
icebp
rol
dec
adc
mov
or
scas
push
mov
shl
scas
mov
jmp
pop
stos
sub
mov
test
xchg
gs
push
mov
fidivs
add
orb
push
cmp
ja
inc
push
inc
js
jae
inc
pop
inc
dec
ds
push
adc
sbb
nop
test
mov
lret
out
movsl
xchg
push
cmpsl
inc
mov
add
cmc
xchg
cltd
inc
mov
packuswb
add
cmp
pop
xor
cs
scas
push
push
aaa
sub
jb
gs
lret
inc
inc
out
ss
mov
jns
test
dec
fdivrp
xchg
xchg
jl
add
add
popa
cmp
adc
std
xor
jo
cmp
add
mov
sub
insl
cmp
hlt
jb
cmpsb
nop
test
imul
lret
cltd
loope
sub
and
xor
popa
scas
xor
mov
xchg
inc
or
stos
pop
cmpsb
fsubs
stos
lret
jge
imul
icebp
xor
leave
or
mov
bound
xchg
mov
pop
arpl
aas
iret
loop
push
les
push
jge
mov
lahf
mov
lea
sarl
repnz
ret
ja
cmp
orl
mov
mov
cmp
loopne
jbe
dec
inc
mov
data16
xchg
outsb
xchg
fs
push
mov
inc
mov
nop
add
inc
arpl
dec
iret
xchg
dec
cs
jnp
adc
cmpsb
scas
into
shl
pop
sbb
in
and
and
dec
lret
sbb
pop
inc
mov
dec
push
sub
call
xchg
movl
mov
mov
sub
dec
loope
adc
adc
pusha
jecxz
sub
cld
in
imul
pop
pop
add
jecxz
inc
and
into
inc
lds
rcr
sbb
mov
lds
sbb
hlt
adc
cmp
fadds
or
add
sbb
stc
xchg
popa
mov
adc
aas
push
adc
jg
sbb
rclb
push
daa
inc
jg
mov
push
sarl
call
out
push
jno
in
out
mov
add
or
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
test
lcall
jo
in
test
sub
ljmp
xchg
in
mov
das
mov
push
pushf
bnd
mov
inc
divb
jp
and
add
mov
sub
stc
or
mov
mov
call
push
rolb
xor
or
in
jns
jb
xchg
das
iret
pop
cmp
cwtl
enter
insb
arpl
js
popa
pop
daa
mov
lds
flds
sub
dec
adc
sub
dec
bound
mov
fwait
ja
or
test
inc
nop
lds
rcl
nop
sti
mov
cmp
pop
int
outsl
push
pop
cmpb
mov
jb
cmp
ja
lret
pop
xchg
add
inc
out
dec
adc
outsl
neg
punpckhwd
repz
push
jg
pop
mov
cmpsb
ret
pop
fidivrl
in
mov
mov
lret
jo
repnz
pop
xor
out
jl
cmpsb
and
inc
rcll
and
cwtl
sub
mov
add
je
std
and
repz
ret
mov
test
daa
push
cmp
mov
orl
fwait
sti
das
dec
or
cld
mov
adc
stc
cmpsb
mov
adc
pop
dec
xor
mov
pushf
ss
popa
inc
pop
add
imul
imul
xchg
push
inc
and
mov
scas
push
mov
fisttpll
dec
movsb
jmp
xor
inc
cmp
xchg
shrl
aaa
mov
outsb
pop
fdivrs
mov
pop
dec
out
rep
add
into
or
lret
and
sub
xchg
lret
pop
jb
sub
adc
daa
xorb
scas
movsl
out
ret
loope
int
sti
inc
cltd
outsb
sub
mov
fcoms
pop
xchg
adc
cmpsl
add
shrb
pop
sarl
pop
das
cmp
sbb
lahf
xchg
cwtl
sub
cmp
adc
jp
mov
iret
or
into
flds
mov
xor
in
push
lea
push
fs
jecxz
push
aam
cmp
jl
daa
mov
stos
sbb
jbe
lock
fsubrs
test
sbb
movsl
scas
aas
repz
pop
cld
mov
xchg
pushf
xchg
repnz
pop
xchg
insl
jo
and
outsb
xor
les
push
out
iret
add
sub
jge
mov
push
pop
mov
and
shr
add
mov
int
aam
pusha
gs
fsubl
pop
cmc
mov
mov
in
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
