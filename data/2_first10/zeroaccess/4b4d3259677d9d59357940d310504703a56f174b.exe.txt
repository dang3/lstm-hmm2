push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
addr16
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
sar
into
cmp
out
out
ss
vpsadbw
ljmp
fmull
int3
ret
repz
out
fsub
stc
cmp
loope
sti
aad
xchg
cli
mov
in
sub
hlt
cs
idiv
xor
icebp
repz
loopne
fabs
jmp
cli
fstp
xchg
icebp
mov
lret
lock
jmp
cmp
cmc
jmp
push
cmc
fcmovbe
fsub
fcmove
cli
lret
xchg
icebp
xchg
rcl
rcr
cmp
int
lret
lock
fsub
out
loop
clc
sti
out
loope
rcr
sar
sub
aaa
in
ds
not
adc
cmp
loop
popl
aam
int3
lds
enter
int
cmp
cmp
fdivp
in
fldl
test
ror
in
xor
enter
cmp
sarb
aad
lret
int3
out
cld
jmp
hlt
loope
stc
stc
std
enter
shl
dec
rcl
loop
orb
enter
decb
in
fcmovnbe
cmp
cmp
in
push
xor
jmp
rol
ror
rcr
fcmovnu
mov
leave
int3
or
jle
or
jle
aas
not
jecxz
loop
lret
enter
repz
xchg
aaa
out
fdivs
jmp
repnz
ss
fucomi
sti
cmp
mov
aas
push
out
shl
call
jmp
aam
aam
out
cmp
clc
call
mov
mov
mov
orb
ss
int3
leave
fidivl
in
test
ret
in
mov
loopne
lret
int
xor
loope
repz
icebp
int
cmp
cli
aam
cmp
fsubr
loopne
shr
cmc
loop
call
into
in
ljmp
sar
in
call
xchg
loope
mov
fadd
xor
xor
aas
idiv
into
cmc
testl
xchg
in
sar
xor
sar
fsqrt
aas
cmp
jmp
in
movb
mov
test
aaa
out
xor
cmp
and
in
fildl
ljmp
int
sarl
cmp
repnz
orl
xchg
loopne
out
in
rol
xor
ss
shl
icebp
fst
neg
in
test
in
sub
cmp
cmc
cmc
int3
repnz
repz
cmc
cld
aaa
cmp
xchg
jecxz
leave
jmp
xchg
lret
repz
out
xlat
out
ss
fsubr
rcl
int3
in
std
repnz
stc
rolb
test
int3
in
call
fmul
into
div
call
loope
cmp
jecxz
loope
fcmovu
shr
iret
loopne
loope
aam
out
rcl
ss
repz
cli
icebp
std
cmp
fucom
fsub
fadds
std
div
xlat
iret
iret
repz
xor
call
cli
ret
xchg
aad
lret
lret
xchg
out
loope
lea
cmc
std
imul
ret
vpsrad
test
mov
test
pop
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
test
jle
or
jle
fsub
fst
loope
rcr
cld
out
in
cmc
loope
aam
in
fcmovu
shl
lret
out
mov
and
fucom
xchg
into
xor
shl
fadd
cld
xor
cmp
shr
stc
cmp
loop
loope
or
movb
enter
iret
cmp
aad
faddp
rcr
addb
incb
aad
jecxz
rcl
call
sub
std
clc
leave
test
out
aad
lret
aaa
enter
fxch
cmc
in
int
fcomp
in
add
sti
out
out
loop
jmp
mov
out
call
cld
aad
lret
cmc
cld
aaa
shl
movb
xchg
sti
and
aam
leave
test
out
lret
loope
loop
cld
out
cmp
lret
ror
test
rcl
rcl
rcr
lret
aaa
int
clc
lret
into
ret
fsubp
cli
cmc
stc
stc
enter
mov
lret
in
aad
jecxz
xor
cli
cld
rcr
out
fsubr
repz
jecxz
or
in
lock
fptan
aas
icebp
test
ret
jecxz
loopne
xlat
enter
call
aaa
aam
xor
repnz
cmp
xchg
int3
orl
leave
icebp
clc
ss
fidivrl
int
in
repnz
into
out
loopne
into
enter
jmp
xor
test
rcl
ds
lret
cld
in
ret
loope
call
out
xor
fidivrl
hlt
cmc
lret
cmp
in
in
shl
lds
out
lock
leave
xlat
fcmovnu
lret
aas
rcr
cmp
test
ds
in
popl
cld
into
out
rcl
hlt
shl
std
lock
repnz
sar
hlt
enter
in
fsub
shl
fucom
in
xor
xor
aad
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
jle
or
jle
xor
sti
repz
call
loopne
in
loope
xchg
fdivrp
iret
lret
shlb
fdiv
hlt
cmp
fdivr
test
ret
out
jmp
loop
loopne
fucomip
div
int
ss
repnz
fidivrl
cmp
cmp
fdivp
xchg
icebp
loopne
repz
aam
ljmp
aad
cmc
flds
ljmp
iret
into
das
stc
stc
cmp
lret
sti
aaa
sar
fdiv
aam
fst
ljmp
ss
ss
jmp
das
aam
rcr
sarb
aad
aas
repz
cli
fiadds
cld
in
xchg
mov
xor
cmp
xor
hlt
aam
dec
clc
std
in
aas
movb
jecxz
xor
icebp
cmc
jecxz
cmp
fst
aad
xor
cmp
cmc
sti
xlat
int3
xchg
xchg
nop
rorb
clc
fnstenv
cmp
divl
out
rcr
int
out
cmp
sti
adcb
add
xlat
xbegin
repz
loop
test
ds
and
into
or
loopne
orb
in
cmp
out
imul
ret
ds
cmc
xor
mov
mov
int
lret
jmp
aad
rcl
cmp
jmp
fxam
out
loop
cmc
aad
in
lock
repnz
jmp
enter
xor
test
test
out
rorl
lock
repnz
call
rcl
out
lret
cld
out
ffreep
fucom
ds
ret
in
out
test
icebp
in
xchg
icebp
das
lock
xor
jmp
out
ss
cmc
loope
fcmovb
xchg
ret
lret
test
cld
loop
loopne
clc
hlt
icebp
out
aad
ljmp
std
in
cmc
mov
mov
adcl
fnstenv
lret
fldlg2
stc
icebp
sarb
into
ret
icebp
rcl
testl
movsb
jbe
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
das
xorl
push
jle
or
jle
iret
iret
in
rclb
in
sti
shl
cmp
xor
loope
addl
jecxz
adc
into
icebp
divl
out
jecxz
clc
jmp
loope
fstpt
cmp
xor
fiaddl
xchg
fsubrs
loop
xor
cmc
rcr
std
faddl
fdivrp
out
adc
aad
leave
jmp
repz
int
cmp
neg
stc
aam
jmp
out
into
iret
cld
int
jmp
shl
cmc
enter
jmp
out
out
hlt
call
mov
rcr
loopne
lock
ss
jmp
lret
testb
clc
repnz
movb
in
lret
xchg
xor
lret
rcl
cli
lret
aad
in
cmc
cmp
stc
and
jecxz
fcmovu
out
and
sub
in
jmp
cmp
testb
repz
out
push
enter
xchg
loop
int
clc
sar
call
xlat
fildl
mov
mov
loope
fsubr
icebp
jmp
loope
cmp
sar
fabs
ret
fcmovb
mov
loop
shr
mov
ror
imul
xor
sarb
faddl
cmp
movl
icebp
xor
cmc
in
ror
idivb
into
int
repnz
lds
neg
call
mov
test
int
int3
cmc
aam
cmp
enter
flds
out
fst
lret
test
cmp
int3
loopne
rcl
ret
out
cld
sarl
fcmovnbe
rolb
shl
cmc
cmc
clc
sub
mov
fdivr
shl
xchg
das
das
xor
std
out
lret
xor
fsub
cmp
testl
lock
lock
loopne
cmp
sub
ret
out
in
icebp
cld
fucom
icebp
jmp
mov
mov
and
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
xchg
jle
or
jle
imul
fcos
sti
cmp
int
stc
xlat
loope
lret
mov
jmp
stc
rorb
xor
into
iret
out
int
xor
aas
rolb
test
or
xchg
xchg
jmp
les
loope
lret
int3
test
mov
mov
sti
lea
mov
repz
jecxz
out
cmp
xlat
imul
xlat
cli
fiaddl
fisttps
shl
adc
aaa
jmp
not
std
test
repnz
mul
loop
int3
in
mov
ljmp
aam
dec
jmp
repz
mov
iret
cld
out
mov
orb
out
sar
fcmovbe
stc
rcr
and
shl
xchg
into
or
call
vpsllq
fsub
jmp
out
flds
fisttps
stc
dec
in
incl
ljmp
xor
cld
loope
rcr
idiv
sbb
mov
test
xchg
jecxz
das
ret
repz
aaa
cmc
cmp
imul
icebp
shl
hlt
xor
test
loopne
out
decb
vcvtpd2dq
mul
out
cmp
out
hlt
mov
out
xchg
lret
xor
out
xor
leave
fsubr
loope
push
aas
repnz
fcmovnb
and
out
test
decl
lock
xlat
ss
in
ds
test
aas
shl
mov
call
rorl
int3
jmp
sbb
cld
ds
std
call
fxch
loope
xchg
out
iret
mov
cmc
xor
repnz
enter
int3
repnz
loop
aad
mov
testl
shr
mov
ret
repz
cs
ss
cli
lret
out
aad
fcmovnu
fxch
clc
iret
mov
in
hlt
lret
div
cmp
inc
fcmovnb
int3
into
loope
aad
orb
inc
add
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
sub
jle
add
out
int
loope
fimuls
lret
repz
fidivrl
cmp
cmp
shl
in
sti
fadd
fsub
cmc
out
mov
mov
loope
das
ret
jmp
clc
hlt
in
loop
in
std
fadds
fchs
loope
xchg
loope
hlt
ret
jmp
xor
aam
aaa
out
ret
ret
loopne
test
mov
out
mov
repz
xchg
int
idiv
aaa
out
leave
test
aas
out
test
mov
orb
in
out
out
jmp
sar
cmp
aad
shl
xchg
shr
fcmove
and
or
lea
aam
out
iret
aad
int3
xlat
cld
aas
cmp
or
xchg
xchg
xchg
ret
divl
xor
cli
call
cmp
faddl
cli
idivl
int
int3
in
hlt
cmc
jmp
jmp
lret
addb
fildl
loopne
shr
mov
shrl
xor
ss
fsubr
repz
into
and
testb
lret
in
in
out
out
repnz
icebp
icebp
cmp
lock
idiv
out
out
enter
lret
fmul
loopne
addb
call
loopne
xor
xlat
mov
in
out
adc
int3
xchg
test
repnz
cmp
xor
repz
shlb
sti
cld
out
loopne
clc
fcmove
fsubr
icebp
iret
imul
iret
cld
int3
fmul
clc
rcl
jecxz
aam
cmc
aam
mov
cli
in
mov
xor
int
repnz
incb
jecxz
test
repz
add
test
nop
out
lret
cmc
repz
in
dec
repnz
fnstsw
test
leave
loopne
loop
lret
leave
int
in
out
in
shl
das
aam
icebp
cld
in
jmp
sub
xchg
not
in
jmp
out
divb
out
add
add
add
fcom
fstp
je
xchg
or
loopne
jle
or
jle
ljmp
aaa
ror
out
repnz
icebp
testb
lret
shl
mov
jmp
shr
xlat
loopne
in
std
xor
neg
jmp
fldl2t
fsub
xchg
xchg
leave
xor
out
ljmp
in
stc
iret
ret
xchg
cmc
mov
in
loope
lret
int3
rorb
fcmovbe
shl
cmp
cmp
cmp
in
or
iret
xchg
out
xor
int3
ljmp
cmp
xchg
out
loopne
in
adc
loope
neg
aaa
in
aaa
out
lret
int
out
icebp
int3
ds
rolb
iret
in
cli
ljmp
out
ljmp
fucomp
fcmovu
loope
enter
in
mov
sti
mov
mov
loopne
shl
call
aam
sarb
fst
ret
mov
loop
xchg
leave
repnz
hlt
leave
repz
cld
iret
sti
in
idivl
in
cli
imul
fnclex
out
lret
mov
jecxz
cmc
aam
icebp
ljmp
ret
adc
mov
jmp
mov
shl
repnz
call
xor
rolb
loopne
loop
int3
sti
mov
sar
ljmp
lock
cli
shl
roll
sar
sti
out
sbb
in
test
sarl
sarb
xlat
in
hlt
jmp
roll
in
lret
cli
mov
hlt
in
test
in
in
aaa
xlat
loope
cmc
lock
movb
fucomi
mov
leave
repz
filds
cmp
fidivrl
int3
hlt
repz
ret
cmp
cmpl
into
nop
out
out
lret
xchg
loop
div
fcomi
std
sarb
icebp
test
cmpb
aad
xchg
jmp
leave
std
addb
out
fmul
aad
jmp
roll
test
push
add
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
mov
or
jle
stc
add
or
lret
in
xchg
xchg
xchg
int
in
leave
fidivrl
xor
repz
aas
div
cmc
sti
div
leave
addb
leave
mov
aad
leave
out
cmp
ror
cmp
repnz
stc
flds
cmc
loop
cmp
in
cld
repz
fcmovne
hlt
xor
and
mov
leave
mov
xchg
in
iret
adc
xchg
loope
enter
jmp
cmp
fiadds
ret
stc
vpaddw
mov
cmp
fptan
fidivl
loopne,pt
stc
fistpll
in
mov
test
or
shr
jmp
cmc
clc
lret
cli
shl
fiadds
sbb
loopne
icebp
fsub
mov
in
sti
cmp
fst
xchg
sar
repnz
in
hlt
out
loopne
into
fidivl
rcr
cmp
repnz
and
addb
stc
lret
rclb
xlat
repz
out
in
out
lock
clc
cli
ds
rcl
std
mov
sbb
les
cmc
cmp
repz
rol
std
std
xlat
shr
call
popl
in
shr
clc
fsubr
aad
rcl
jmp
rol
fdiv
std
cmc
in
fimull
icebp
xchg
test
xlat
out
in
idivb
xor
stc
fscale
fucom
in
fcmovne
fucomi
xchg
in
das
xor
sarb
xor
lock
icebp
call
loope
cmp
clc
int3
dec
lock
faddl
cmc
jmp
aad
into
shl
sar
call
out
fisttpll
lea
repz
out
sbb
addl
xlat
filds
mov
xlat
xbegin
sar
repz
sar
rcr
ds
shl
cli
mov
movb
mov
mov
mov
jmp
leave
ret
int
int
mov
dec
inc
inc
cld
adc
or
jle
fcomip
xor
leave
lock
neg
cmp
sarl
cmpb
repnz
mov
lock
mov
cs
out
enter
out
aam
in
jmp
mov
nop
sar
lock
faddl
shr
jmp
jmp
loopne
shl
sar
rcr
out
fsubp
xchg
std
nop
and
fcmovnbe
aaa
jmp
stc
cmc
ret
fcmovne
cli
lret
xchg
ror
in
xchg
ret
ss
divb
sti
cli
sar
test
lret
mov
loope
fsub
xchg
test
lret
shll
ror
icebp
xor
ljmp
out
cli
cld
cmc
stc
sti
xchg
sub
rcll
cmp
stc
cld
int3
aas
out
repnz
addb
std
mov
cmp
xchg
repz
xor
clc
fcmovnbe
jmp
cmc
clc
xlat
loop
fmulp
xor
in
xchg
icebp
mov
int
sar
leave
lock
ds
jecxz
cld
lret
jmp
mov
mov
ret
xlat
rol
cmc
int
cmp
lret
push
iret
int
fcmovnb
rol
jmp
enter
in
call
jmp
iret
in
out
cmp
xlat
adc
clc
jmp
xlat
cli
mov
in
sub
out
out
fcmovne
cmp
stc
fcmovnu
sti
in
in
shr
in
jmp
cld
addl
pop
aad
jecxz
cmc
int
xor
xor
fcmovu
sti
in
ret
loop
jmp
leave
out
nop
loope
fcomip
incl
int3
sti
icebp
lret
cmp
in
icebp
inc
div
jecxz
mov
in
jmp
repnz
sti
ljmp
xor
inc
in
xlat
leave
aas
enter
repnz
xchg
xor
jecxz
iret
stc
lret
std
sub
ret
out
stc
sti
orb
jmp
sarb
cmp
xlat
aad
xlat
cmp
xor
jmp
aam
mov
lea
mov
jle
or
jle
cld
ret
aam
icebp
aad
enter
fisttpl
xchg
mov
lret
jmp
cmp
roll
clc
leave
mov
loope
lock
xchg
repz
icebp
xor
cmc
repnz
cmp
fcmovnb
fsincos
mov
testb
xchg
out
int
xchg
loop
idivl
ss
out
test
adc
fsub
in
fucomip
mov
int
jecxz
lret
sar
xor
repz
cld
repz
jmp
fdivr
loopne
dec
shr
in
xor
not
int3
aad
idiv
loopne
cmp
ret
rcr
stc
in
stc
mov
jecxz
fsub
repz
mul
out
cmp
clc
ss
aam
loop
aam
neg
loop
incb
in
cmc
hlt
out
ljmp
xchg
ds
xacquire
mov
lret
xchg
xor
xor
cmc
out
aaa
clc
cmp
lret
icebp
ds
icebp
add
out
sar
testb
int
aaa
cmp
out
cmp
ljmp
in
mov
fcom
out
xor
fsubr
leave
shlb
cmp
rcl
sarl
repz
mul
aas
in
fsubr
xchg
incl
ror
cli
cmp
aad
std
xor
cmc
mov
loope
or
loope
orb
repnz
jecxz
xor
cmc
cmp
iret
cmc
std
clc
int
iret
in
lock
in
iret
lret
iret
leave
ss
cld
hlt
cmp
into
shl
add
jmp
fcmovu
in
nop
xchg
in
repz
in
cli
cmp
jmp
test
clc
leave
jmp
mov
fcoms
in
cmc
leave
shlb
cmp
repz
aas
lret
hlt
shl
repnz
jecxz
imul
int3
lock
enter
hlt
fnstsw
out
loop
sbb
sbb
loopne
out
lret
ljmp
roll
adc
mov
jmp
xlat
rol
xlat
enter
push
and
and
add
std
int3
mov
lock
xor
in
int3
fst
in
loopne
int
cld
clc
out
loopne
xchg
test
fmul
lret
orb
sar
in
repz
int3
cld
fdiv
icebp
sbb
xchg
xlat
mov
mov
sar
fidivs
lret
repz
sar
into
shl
fcmovnbe
ret
mov
mov
leave
test
call
fcomip
vmovq
fucomi
clc
cmp
icebp
in
cmp
repnz
fsub
fucomp
out
std
xchg
mov
cmc
cmc
lret
icebp
into
enter
cmpl
addb
jmp
sbb
int
xchg
enter
leave
cld
clc
div
cmp
fnsetpm(287
xlat
ret
test
sub
lock
fst
jmp
out
cmc
stc
xchg
fisttps
icebp
xchg
fsubp
xlat
aam
cld
out
cmp
cmp
inc
in
leave
lds
in
test
lock
stc
cmc
rcr
xor
xlat
fcmovu
test
call
nop
in
call
rol
rcl
in
cld
repz
jecxz
sti
lret
in
enter
ljmp
repz
out
xlat
jmp
divb
into
fdivrp
out
cld
rol
repnz
fsubr
clc
icebp
filds
enter
cmc
xlat
sar
repnz
cld
in
filds
int
loop
fsubr
or
xor
ret
std
out
sti
loopne
ret
call
out
test
rcl
rcl
sub
in
aaa
repnz
shl
out
cld
test
int3
sti
mov
out
rolb
cmp
sti
xor
xlat
out
shl
cmp
into
shl
cli
add
in
flds
xchg
cmc
call
enter
fdivrs
fyl2xp1
ds
sar
aad
fdivr
in
int3
out
jmp
ljmp
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
fcomi
fdiv
cmp
xchg
fimuls
xor
fnstenv
fstp
xor
push
into
rcr
cld
mov
mov
loopne
cli
jecxz
mov
xchg
call
fst
jmp
loop
fsubr
repnz
lret
fdivrp
cld
xchg
jmp
not
rcl
out
rol
leave
out
idivb
out
int3
clc
lock
cld
test
out
enter
loop
loope
xor
xlat
stc
sub
icebp
shl
div
std
cli
rorl
decl
loopne
loope
stc
xor
stc
int3
sbb
repz
repnz
cmc
out
icebp
loopne
ljmp
lret
cmp
xor
leave
sar
in
fcompp
mov
ret
cli
cli
int
popl
roll
lret
int3
clc
rcr
rcr
jecxz
sar
loope
clc
cmc
mov
mov
out
icebp
in
xchg
mov
xlat
lret
fdiv
aad
loopne
fyl2x
fstpt
adc
mov
xchg
loop
hlt
xbegin
neg
cmp
fadd
out
xlat
xchg
hlt
xchg
test
fucomp
mov
sar
divl
sar
in
icebp
out
fucomp
cld
test
imul
out
jmp
shl
in
shl
rcr
out
leave
sarl
cmp
cld
cmp
test
jecxz
sti
jmp
cmp
decb
xlat
aad
neg
enter
loopne
jecxz
ds
sti
sar
lea
lret
loope
lret
cli
fst
out
shl
loopne,pt
fucomi
fisttpl
mov
not
int
fldz
icebp
ss
stc
incl
enter
out
fcmovne
mov
xchg
hlt
xor
xor
lret
cld
aad
loopne
shl
cmp
icebp
hlt
in
in
faddp
mov
test
sub
xor
fdivr
call
div
cmp
call
leave
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
sbb
or
jle
jecxz
fcmovu
test
mov
jmp
repnz
lret
cmp
cli
xor
in
int
jmp
xchg
loope
xor
lock
cmp
sbb
adc
stc
aad
testb
iret
into
mov
clc
lret
fucomi
std
out
sar
lock
cld
in
fpatan
loope
idiv
fdivp
fucomip
xchg
fucomip
loopne
mul
jmp
int3
aam
xlat
loope
test
ret
repnz
fsubp
kmovb
repz
mov
jecxz
hlt
enter
idiv
icebp
aam
loopne
stc
sbb
fisttps
loopne
xchg
leave
jecxz
leave
enter
shl
repz
rcr
jmp
iret
fmul
mov
jmp
cmc
shl
div
xlat
std
fstp
adc
in
lds
mov
xchg
fucomip
int3
aad
out
std
idivb
in
icebp
cmp
ret
les
repnz
repnz
ret
xor
jmp
cmp
sbb
enter
in
out
out
xchg
iret
cmp
cli
lret
fdivs
sti
rcl
out
loop
fstp
fmull
fmuls
repnz
vpinsrw
sti
in
aad
fdivrl
sar
stc
jecxz
and
int
in
jmp
aam
jmp
out
lret
hlt
ds
ds
decb
jmp
repnz
lret
xor
enter
out
xlat
sti
aaa
jmp
std
hlt
icebp
ret
loopne
stc
mov
out
idiv
int
fisttpl
clc
aaa
fnstenv
int3
aad
loopne
loope
into
ret
aam
aam
lret
leave
xor
in
ljmp
fcmovnbe
fcmovu
cld
cmc
ds
ret
std
call
xchg
mov
iret
xchg
loop
leave
cli
std
cmp
rcr
ds
lret
out
jmp
rolb
cli
loop
inc
or
dec
or
movb
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
sbb
jle
or
jle
ljmp
addb
inc
aad
mov
cld
repz
mov
ss
in
repz
aad
idivl
aam
cld
fmulp
mov
fstp
jecxz
mov
icebp
int3
cmc
out
roll
aad
fcos
ret
loopne
fildl
xchg
test
notb
repz
idivb
cmp
repz
roll
out
mov
fucomi
xchg
xchg
aad
shl
ds
shr
fptan
into
cmp
cld
aad
mov
mov
xor
ljmp
cmp
into
fildl
jmp
fadd
mov
aam
aad
xor
out
lock
sar
sarb
ret
cmc
lret
mov
int3
or
loope
in
idiv
out
fdiv
repz
test
cmp
adc
in
leave
in
icebp
icebp
repz
repz
cmp
cmp
rcr
hlt
sti
loopne
decl
xchg
fldpi
int3
cmc
hlt
in
int
lock
cmp
int3
stc
fildl
out
mov
test
into
in
rol
call
aas
mul
loopne
into
loop
std
cli
vcmppd
int3
mov
cmp
iret
clc
sarl
fsubp
fadds
lret
fcmovne
loope
in
faddp
test
in
cmp
lock
iret
cmp
jecxz
stc
test
xchg
int3
std
roll
imul
aaa
enter
repnz
ror
neg
cli
neg
jmp
int3
ror
xchg
enter
shr
shlb
ljmp
xlat
rcr
jmp
mov
lock
cld
rolb
in
int3
fdivp
in
sub
and
add
aam
ret
cld
lret
sar
jecxz
xchg
test
xlat
out
fcmove
fdivrp
aam
fistpll
cmc
shl
xchg
xor
sub
mov
jmp
int3
enter
lret
int
stos
test
shrb
jle
add
xchg
fcmovu
xchg
ss
clc
out
cmp
lret
out
clc
idiv
xlat
addl
fcoml
aad
hlt
ljmp
fdiv
aad
shl
out
fcmovnu
faddp
ret
iret
xchg
mov
call
iret
xor
xlat
fcmovu
sarb
cld
cld
sub
addl
xor
stc
ss
in
xor
out
cmp
shl
fdivr
jecxz
jecxz
shl
mov
shlb
cli
into
rcl
ss
aam
in
jmp
cld
enter
mov
clc
in
into
test
lret
jmp
aaa
out
fsubrp
xchg
filds
les
repz
incb
fcmove
stc
fbstp
in
sti
stc
iret
in
icebp
aam
cli
fsubp
vshufps
into
sti
mov
loope
mov
jmp
neg
shl
loopne
icebp
ffreep
iret
std
mov
cmc
mov
idiv
vpaddusw
lret
loope
rcl
stc
cmp
lret
faddl
ds
enter
loopne
cli
ljmp
int3
stc
hlt
xor
cmp
into
test
out
sti
xlat
stc
mov
jmp
loope
into
lret
shl
loop
bnd
lock
cmp
std
lock
cld
out
sar
sti
mov
cld
xchg
adc
jecxz
xor
icebp
fidivrl
jmp
jmp
addl
jecxz
cld
into
loope
xchg
nop
loope
not
lret
aam
hlt
leave
cmp
into
clc
ret
mov
test
jecxz
mov
in
cmp
repz
loope
in
int
addl
dec
adc
jecxz
into
rol
out
xor
out
fdivrp
repnz
stc
repz
fmul
loopne
orl
jmp
iret
in
fincstp
fcmovne
cmp
lock
ds
rcr
loopne
mov
jmp
rclb
movzwl
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
loop
xlat
enter
int3
and
sbb
icebp
ljmp
nop
in
in
mov
icebp
out
lret
in
aaa
loop
rol
loopne
fdivp
in
filds
into
lock
out
cmc
out
cmp
cmp
in
ret
cli
shl
leave
fdiv
test
stc
xchg
in
ror
rcr
in
fucomp
fucomp
adc
out
mov
sar
lret
fildl
ljmp
rcr
cmp
rol
clc
shl
sbb
mov
cli
lret
aam
lret
out
idiv
ss
repnz
cmc
aad
shl
xchg
testb
int3
fstl
cmc
sti
iret
ljmp
clc
cli
stc
loop
rcl
rorb
ljmp
jecxz
call
ss
fcmovne
incl
jecxz
lret
fucom
in
xchg
std
out
mov
stc
fxch
std
repnz
loope
loop
jecxz
sar
imul
enter
shl
ljmp
xor
xor
cmp
icebp
loopne
repnz
mov
cld
lock
int3
xor
xor
ror
lret
leave
out
out
fcmovu
fsub
fcomp
add
int
xchg
rcl
xor
int
fnstenv
aaa
fincstp
cli
ffree
cmp
fiaddl
mov
in
loopne
xchg
xor
into
sarb
sbb
shr
jecxz
int
iret
mov
xchg
xchg
xlat
loop
rcl
ss
aas
stc
fidivl
loop
cld
int3
and
lret
repz
sar
jmp
sar
leave
iret
int3
icebp
out
in
repnz
roll
fildl
shl
lock
int
ljmp
sarl
fucomip
xchg
stc
mov
out
xor
out
aaa
stc
stc
jmp
xlat
icebp
fsubp
sub
sub
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
or
sub
jle
add
add
fadd
aad
int3
idiv
in
filds
out
iret
ljmp
into
out
into
aad
rorl
loopne
ret
jecxz
mov
iret
lret
call
out
xchg
cli
rcl
out
in
fucom
out
lret
aaa
repz
out
xlat
rol
rcl
sub
sti
rolb
repz
fimuls
int3
out
jmp
fdivrs
fadd
into
lock
aam
test
icebp
jmp
out
das
leave
vpsllw
fcmovb
in
stc
hlt
mov
sbb
out
out
stc
test
xchg
mov
inc
hlt
ljmp
cld
call
xlat
ljmp
test
aad
int3
lret
cmp
std
cld
ror
cmp
rcl
in
out
repz
jecxz
loope
repz
int3
subl
cmp
ds
iret
clc
test
jecxz
cmc
in
fdiv
ficoms
iret
enter
in
cli
cs
fcmovnu
xlat
fsubrp
lock
loope
out
fcom
or
in
loop
xor
xor
leave
aam
aad
stc
cli
mov
mov
cmc
fildl
int
shll
ljmp
in
aad
cli
shl
in
hlt
in
xlat
loope
and
and
into
repnz
xlat
std
ss
lock
sar
sar
mov
aas
testb
in
int3
imul
xor
xor
in
xor
out
roll
clc
ljmp
loop
ljmp
fcomi
roll
aam
roll
cmp
lock
fldl
int
cmp
test
not
call
jmp
xchg
call
cmp
cmp
or
xchg
fdivr
shr
ljmp
or
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
fstpt
jle
or
jle
jmp
testb
out
in
bnd
rol
idiv
cli
ret
xchg
mov
mov
mov
xor
int
ss
shl
out
idiv
add
sti
fldl
faddp
incb
xchg
sub
icebp
jmp
cmc
loopne
out
in
in
rorb
in
call
test
ss
in
cmp
stc
lret
aam
std
ret
in
adc
mov
idiv
shr
cld
mov
out
call
shr
ljmp
out
enter
in
jmp
in
sar
std
jecxz
les
ljmp
loope
add
in
into
loopne,pt
ret
in
lret
sub
cli
mov
out
test
out
iret
rcl
cmp
aam
cmp
aad
repz
int3
testb
mov
enter
aaa
cmp
aaa
lock
fidivrl
stc
movb
ffree
xchg
shl
leave
iret
fxch
jmp
fcmovu
cmp
addl
in
loope
out
enter
xchg
xchg
out
cmc
shr
out
out
jmp
fadds
cmc
ret
dec
jmp
out
stc
cli
lds
loopne
ret
test
out
out
in
in
jecxz
lret
dec
loopne
in
xor
lock
cmc
sti
enter
lock
shl
rorb
out
fisttps
aam
shr
idiv
ffreep
lret
out
std
sti
aas
mov
ret
leave
cld
lret
orb
in
int3
mul
ds
shl
test
mov
stc
vpaddsw
rol
neg
out
test
inc
lds
mov
lret
fdiv
std
loopne
ret
int3
lret
enter
out
jmp
in
call
out
leave
leave
faddl
lret
aam
aad
in
cmp
je
jmp
aam
int
aad
fldt
sbb
or
jle
cld
loope
ds
aas
in
mov
jmp
decb
ljmp
std
jmp
shl
repnz
lret
sti
fsubp
mov
in
in
cmp
in
sarl
out
aad
stc
call
rclb
shll
fdivl
icebp
rcr
cmp
cmp
rcr
sbb
sbb
in
lock
fxch
in
fld1
fidivrs
sarl
repz
incb
out
and
icebp
enter
into
in
fcom
neg
rolb
out
mov
fsubrp
rorb
leave
ret
les
enter
repz
rcl
loope
cmc
aad
ljmp
out
mov
call
lock
iret
out
filds
idiv
out
sub
out
mov
in
repnz
in
cmp
fiadds
in
xchg
out
out
sbb
fcmovnu
in
xchg
int3
xchg
in
ror
ss
xor
fdivrp
inc
ret
shl
test
orl
out
fdivrl
in
loope
int
clc
test
mov
cmp
ret
jecxz
cli
loop
mov
in
mov
xor
lock
fadds
ljmp
mov
shlb
aaa
shr
xor
imul
loopne
repz
fcmovu
addb
test
out
fisttps
xchg
out
rcl
fidivrl
cmp
jmp
not
repz
sub
cld
jmp
nop
test
int
rol
lret
repz
leave
ljmp
mov
test
fcmovne
loop
mov
cld
in
xchg
iret
jmp
out
xor
out
fadd
ds
fsubr
cld
rol
out
fstp
mov
xchg
icebp
int
test
xor
xor
idivb
out
std
stc
and
jmp
orl
jmp
aam
iret
int3
fst
outsl
fmull
mull
push
daa
jle
or
jle
mov
rcr
sti
leave
sar
xor
cmp
aaa
test
out
sti
jecxz
mov
out
mov
in
in
repnz
fnstsw
stc
repz
loope
fsub
cmc
loop
test
jecxz
shl
xlat
vshufps
neg
out
idivb
ds
lock
fucom
jecxz
and
fmulp
fidivs
lret
lret
shr
cmp
int3
shr
cmpb
aas
sti
test
std
clc
lock
jmp
out
clc
out
cld
aad
ds
cmp
out
orl
filds
lret
xor
xlat
ss
hlt
clc
cmp
in
shl
repz
xchg
and
xor
jmp
cmp
xrelease
test
lret
sub
cld
sti
loopne
icebp
rcl
ljmp
shl
fadd
aad
call
jecxz
decl
out
loop
icebp
leave
aaa
cmp
fcmovnu
loope
cmp
jecxz
orb
lret
fisttpll
mov
rcl
cmp
repz
ss
test
incl
fstp
fisttps
test
iret
xor
out
ss
sti
xlat
fchs
icebp
in
testl
mov
iret
pop
div
lret
xor
cli
out
fsubr
fdivrs
rcr
push
out
xchg
xchg
enter
cmc
aad
jmp
xor
cmp
cmc
shl
cld
std
clc
mov
hlt
enter
test
mov
nop
orl
cmp
idivl
icebp
call
leave
rcr
not
fsubp
shl
in
out
jmp
jmp
stc
cmp
fst
repnz
ret
std
leave
cmp
in
out
mov
ret
aad
xor
fucomip
stc
incb
stc
mul
ljmp
jmp
int
int
xor
mov
mov
jmp
ret
xlat
int
fstp
cltd
sbb
push
and
jle
or
jle
das
sar
xor
fnstenv
out
hlt
enter
enter
out
nop
xchg
in
in
into
cmp
icebp
into
cmp
faddp
aam
cld
cmp
call
loop
ffreep
leave
loopne
jecxz
fildll
loop
cmp
lret
out
hlt
icebp
jecxz
icebp
repz
icebp
repz
stc
test
in
adcl
cmp
ret
std
orl
iret
orb
xor
ds
stc
fsqrt
test
iret
icebp
repz
mov
iret
icebp
icebp
shll
jmp
fdivp
loop
ret
out
in
int3
lds
mov
ror
in
cmp
aad
sti
loop
cli
in
sti
ret
and
nop
cli
lret
std
in
xor
test
shr
ds
neg
neg
roll
out
xchg
aad
jecxz
ret
rcl
xlat
lret
ret
in
hlt
iret
rol
addb
or
aam
into
jmp
cmp
into
out
int
xor
jmp
incb
into
lock
repz
xlat
cmp
into
jmp
std
cli
loope
sar
bnd
leave
hlt
lret
fmul
xor
mov
out
aaa
out
in
fsubrp
ljmp
adc
repz
in
loop
mov
out
fst
in
shl
jmp
out
cmp
in
rol
sar
in
cld
in
xchg
lret
test
lret
lock
fucomi
into
neg
rol
fucomip
call
cmc
clc
loop
out
mov
in
lret
cmp
repnz
in
fmul
adc
out
out
iret
mov
shl
test
xor
aad
xor
in
sti
ds
out
aad
rol
out
in
adcl
in
in
xor
xor
sbb
ret
int
add
add
rorl
add
jmp
rol
xlat
int
arpl
mov
xor
pusha
xor
jle
or
jle
jmp
sub
rolb
aam
loopne
mul
clc
cmp
ror
clc
aad
lock
jecxz
in
mov
lret
loop
sub
shl
xlat
iret
in
ret
div
test
aam
jmp
out
ljmp
std
enter
loope
cld
iret
shl
mov
rol
xchg
in
lret
xchg
loopne
in
in
jecxz
out
leave
sar
cmp
xor
add
aam
sti
out
testb
les
out
xor
neg
enter
cmp
xor
fdivrp
in
loopne
jecxz
jmp
xchg
ljmp
cli
lret
ror
shl
jecxz
cli
ret
ret
hlt
in
leave
jmp
addl
cmp
cmp
lock
test
into
std
mov
xor
in
jmp
fsqrt
call
mul
shr
loopne
mov
xchg
xchg
repz
cmc
in
icebp
repz
aad
rcr
cmpl
shl
mov
xchg
mov
iret
xor
fstp
cmp
ds
loope
icebp
enter
call
out
cmc
jmp
divb
stc
int
sbb
mov
xlat
out
roll
out
repnz
cmp
div
rcr
aam
repz
loopne
and
xchg
xchg
xchg
sub
lock
cld
repnz
loopne
xlat
incb
mov
fildl
in
loop
icebp
fnstsw
cmp
std
rcl
shl
aam
mov
std
lea
int3
out
in
repz
ds
fcmovu
hlt
jmp
mul
cld
out
hlt
lret
int3
lret
hlt
filds
loop
lret
in
fdivrl
in
in
loope
fsubr
jecxz
cli
mov
ljmp
xor
jmp
enter
ret
xorb
dec
shrb
jle
out
shl
shr
in
ror
xchg
rolb
cli
lock
test
sti
cli
enter
xlat
cmp
rcr
in
fptan
clc
in
int3
test
mov
loope
loop
xlat
iret
iret
icebp
fcomp
sar
out
xchg
loop
mov
in
in
cld
out
in
jmp
lret
in
cli
cli
into
fucomi
aas
aaa
aad
fcomp
sar
in
xchg
rolb
xor
aam
imul
sar
flds
aam
call
xchg
lret
xor
loop
out
dec
leave
jmp
rcr
cmc
jecxz
fcmovnu
out
int3
jmp
in
in
decb
xor
xor
out
loopne
lret
out
aas
out
test
test
lret
stc
out
rol
iret
xchg
lret
jmp
ror
leave
in
into
ss
cmp
ds
lret
test
lock
ljmp
aam
iret
shl
shl
in
enter
mov
add
out
aad
repnz
aam
cmp
cmp
aad
out
fcmovbe
aam
rcl
shl
fdiv
int3
iret
mov
subb
ret
aad
shl
lret
cmc
loope
in
aam
repz
fistl
in
cs
mul
shl
cmp
shl
aam
rol
shl
repz
lret
mov
in
orl
int3
sub
lock
cmp
aam
icebp
test
int
cld
stc
in
lock
int
rcr
cli
int
fldln2
cld
loope
fst
aad
and
aas
shl
lret
out
decb
in
lret
lret
cmp
lret
ljmp
sti
out
fmulp
idiv
loope
mov
repnz
xor
aam
fsub
lret
clc
in
loop
out
mov
xchg
repnz
in
or
iret
ss
loope
inc
or
jmp
leave
xchg
aaa
cmp
das
jle
or
jle
cmc
loop
out
test
out
mov
ror
shll
aaa
jecxz
icebp
fsubr
into
loopne
test
fdiv
adc
test
flds
jecxz
xlat
in
ss
lock
loopne
cmp
sar
lock
ds
test
iret
jecxz
repnz
jecxz
shl
xor
fucomp
out
int
aam
faddp
ror
clc
xor
in
enter
out
dec
xchg
cmc
clc
sub
lock
repnz
leave
in
fcmovbe
clc
in
ret
and
jmp
mov
ret
add
lret
out
std
in
fstp
aad
aam
roll
in
in
out
cld
xor
ljmp
cmc
in
aaa
out
fcmove
addb
mov
int
shl
fdivr
divb
aas
fcmovbe
sub
out
fsubr
xlat
xchg
ret
fsubrp
xchg
int
loopne
xor
fnstsw
cld
cmp
test
ret
repnz
ljmp
out
fucomp
out
in
vpminub
fcmovnu
clc
cmp
std
ffreep
xlat
call
cli
in
fildl
iret
xchg
repz
iret
jmp
call
ret
hlt
inc
jmp
fiaddl
icebp
in
sub
test
cmp
clc
hlt
cli
cmc
aas
icebp
test
sti
hlt
mov
int3
stc
and
nop
ret
out
cli
out
fnsave
fcmovu
sti
jecxz
adc
loopne
ret
mov
call
call
fcmovb
repz
repz
cmp
int
test
add
jmp
jecxz
xor
fcmove
enter
fsub
hlt
cmp
shl
mov
lret
xchg
jmp
out
aad
hlt
rcr
sar
fmul
ror
in
rol
aam
jmp
mov
loop
in
cmc
aaa
rcl
xor
fdivr
shr
ret
cmc
ret
and
out
incb
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
ljmp
call
out
ret
fdivrs
int3
mov
fdivrp
leave
in
in
in
bnd
icebp
ror
xabort
mul
sarl
fdivp
out
cmp
fists
faddp
les
into
fdivr
xor
clc
ds
lret
std
clc
roll
fld
test
xchg
iret
and
ret
test
icebp
call
test
xlat
cld
in
mov
int3
int
lea
jmp
xor
xor
out
int3
aam
aas
addb
hlt
in
in
jmp
ret
cmp
icebp
dec
iret
out
icebp
cmpb
rolb
jmp
cli
mov
ljmp
enter
fcmove
cli
loope
cmp
fcmovnbe
ret
int3
fmul
enter
fstl
int3
in
out
int
lock
std
jecxz
cld
aad
out
sti
xlat
in
loop
std
mov
jmp
rcl
icebp
fcom
rcr
rcr
fdivp
aam
ror
stc
mov
stc
nop
lea
xor
repz
out
in
repnz
shr
xchg
add
stc
clc
clc
in
mov
clc
loop
leave
into
int
cld
jmp
loope
fincstp
stc
ret
cmp
loopne
mov
aad
sti
sti
das
ss
std
loopne
fucom
test
enter
dec
ret
out
sub
int
aad
iret
jecxz
leave
out
in
aad
shr
loopne
fdivrl
orl
xchg
aam
lock
icebp
out
out
int
fcmovu
aas
iret
aam
icebp
sbb
mov
int
sub
xor
aaa
fldl2t
cli
jecxz
cli
std
fsubrp
jmp
xchg
fcmovnu
repz
imul
xor
call
clc
divb
rolb
test
mov
xchg
iret
shl
aad
test
shl
mov
mov
add
jmp
ret
enter
int
aas
icebp
jg
outsl
mov
xor
or
jle
ds
aam
loop
xchg
cmp
mov
xchg
jmp
out
xor
iret
cld
fdivr
xor
fimuls
loope
out
loopne
xchg
aad
xor
aaa
shr
xor
in
cmp
loop
add
fcmove
fistl
fdivr
in
fucomi
dec
fnsave
idiv
clc
fcmovbe
loope
cmc
xchg
fiadds
loope
les
iret
cmp
cmp
std
icebp
faddl
cli
iret
fimull
jecxz
in
out
icebp
xor
aad
repz
idiv
roll
sti
enter
in
jecxz
int
sub
cmc
xor
in
cmp
dec
out
cmp
filds
fstl
lret
ret
jecxz
ljmp
loopne
out
rcl
in
cli
out
test
xor
lret
in
repnz
sti
cld
in
jmp
idiv
aam
ret
loop
fst
cli
clc
ret
rorb
loope
iret
aad
ss
in
aam
not
hlt
sbb
fscale
into
out
jmp
cmc
in
aaa
in
iret
enter
out
aam
aas
ffree
shr
faddp
test
into
add
aam
in
lret
neg
adc
cmp
stc
std
jmp
flds
leave
jecxz
call
jmp
hlt
call
test
cli
xchg
out
in
cs
int3
into
ljmp
xlat
inc
lock
cmp
ljmp
xor
cmp
fcom
fdivr
xor
ds
cmc
ret
jmp
into
rcl
mov
xor
out
lret
fsub
loop
in
in
mov
leave
hlt
rorl
hlt
in
loopne
fcomip
xor
rcr
xor
aad
aam
iret
sub
stc
ljmp
cld
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
jge
clc
xor
jle
sti
in
shl
xchg
or
cmp
fistpll
in
jmp
fcmovnb
cld
shl
adc
fiadds
lret
div
xor
in
fmul
icebp
jmp
in
and
cmp
test
out
fiadds
aas
sub
enter
fcomip
cmpl
vshufps
out
mov
loopne
xchg
test
in
cmp
cmp
cmpl
repz
test
div
lret
cmp
in
out
xchg
int3
ror
aam
fstpt
ffreep
fcmove
shl
out
lock
sbb
out
jecxz
xchg
mov
icebp
std
lret
fdivp
lock
hlt
cli
cli
in
ret
fucomi
fsubr
icebp
out
rclb
loop
cmp
shr
int
ret
aad
clc
cld
call
testb
in
xchg
das
xlat
shl
in
xor
out
fdivrs
hlt
aas
rcl
sti
ds
mov
xchg
leave
aam
sar
iret
aaa
leave
repnz
cld
aas
fidivrl
and
loopne
testl
mov
ret
leave
call
cld
jecxz
idivb
rcl
loope
shl
int
std
std
mov
sub
in
cld
cmp
fcmovnbe
fucomip
repz
xlat
filds
cld
fsubr
loop
fsubrp
xchg
shl
call
enter
aam
xlat
in
ror
out
cld
test
leave
loop
nop
mov
imul
aam
xlat
xor
cli
not
loopne
cli
test
xor
cmp
not
ljmp
call
out
sarl
sar
roll
test
filds
fmulp
iret
out
in
sub
loope
cmc
enter
repnz
sar
div
out
out
fcomi
jmp
in
cli
cli
xchg
xchg
mov
out
repz
xor
repnz
out
jmp
cmp
aam
rolb
into
sbb
and
repnz
cli
call
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
sti
aad
cmp
xlat
icebp
fstp
out
fsubrp
mov
lret
sbb
lock
dec
bnd
xor
iret
add
fdivrl
add
incl
mov
roll
in
xor
call
lock
addl
repnz
in
in
vpsadbw
lds
int
cmc
mul
hlt
ds
ror
call
imul
call
mov
repnz
fsubr
out
cmp
cld
rcr
repnz
in
mov
enter
or
xor
jmp
into
repnz
int3
sarb
int3
cmc
icebp
iret
sar
loop
cmc
test
mov
iret
call
ljmp
aad
aad
adc
rcr
ret
test
fisttps
xchg
lock
in
sti
repz
leave
in
or
fstp
loopne
hlt
lret
out
call
loopne
fadd
loop
clc
hlt
repnz
jmp
rol
loopne
test
sti
cli
imul
cli
mov
in
mov
ret
xor
rcr
test
jmp
into
sar
test
testb
rcl
incb
fcomp
int3
enter
cli
in
aad
ret
mov
and
xchg
addb
ret
test
aad
cmp
sbb
mov
decb
leave
in
aam
fdivr
ds
push
aad
loop
shr
mov
int
xchg
loop
lock
xor
cmp
in
cmc
sub
hlt
cmp
into
out
icebp
jmp
mov
rcl
hlt
cmp
cld
leave
ljmp
rcl
fiadds
xchg
test
int3
sarb
repnz
not
repz
cmp
shr
rcr
aam
fcmove
ret
repz
rcl
hlt
xor
sti
cmp
shll
cmp
fdivrs
mul
loop
and
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
jbe
push
pop
xchg
cmp
cmp
jle
sub
jecxz
decb
call
enter
test
aas
fldl
testb
test
fdivp
repz
idiv
fcmovnu
hlt
cmp
fbstp
fsubrp
out
fsubrp
xlat
fcomi
rolb
into
lock
out
lret
sti
shl
shl
enter
aas
jecxz
sub
addl
cmp
fsubr
fdivrp
sar
xchg
mov
enter
fsub
repnz
sub
out
shl
aam
loope
jecxz
leave
fldl
rclb
test
clc
xor
rolb
xchg
ffree
mov
ret
mov
mov
shr
xchg
fldl
clc
aad
xor
lret
shl
sbb
std
fadd
loope
mov
in
out
decl
std
enter
enter
xor
int3
fcom
sbb
fiadds
cli
in
in
into
xchg
dec
mov
out
cmp
clc
ss
out
cmp
rcl
in
out
out
addl
lock
into
cmp
in
out
lock
xchg
int
mov
in
aad
shl
fstpt
sti
cmp
cmpb
ret
int
stc
dec
dec
fists
icebp
enter
cmp
add
loop
fadd
rcll
call
ss
out
cmp
repz
aam
loope
fcos
call
in
cmc
fldl
leave
ss
aad
fcompp
faddl
div
in
xchg
orb
cmc
ret
repz
jmp
loopne
out
rcr
rcr
div
ljmp
mov
cmc
stc
rol
div
icebp
sar
roll
fcmovu
enter
int3
cli
iret
out
rcll
jmp
div
into
fnstsw
clc
out
std
lock
clc
cmp
test
cld
enter
loopne
repnz
into
ror
jmp
jmp
repz
aam
xchg
aas
bnd
ret
or
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
sbb
jle
add
loop
test
call
fcoml
out
out
sti
iret
iret
ffreep
sti
iret
xlat
repnz
jmp
mov
jmp
xchg
cmp
ljmp
ss
in
rol
fadds
rcr
sti
xchg
sub
out
fucom
in
ss
test
loope
fst
mov
cli
loopne
sti
into
lret
jmp
in
and
aam
into
in
out
cli
idiv
lock
out
loope
ljmp
call
in
aam
lret
cmp
rol
not
sbb
lret
fld
xlat
mov
in
out
lret
in
shl
icebp
aam
sti
jecxz
in
aad
adc
fprem1
fisttpll
xchg
rorl
int3
cld
aam
filds
div
cmp
aad
in
ljmp
bnd
aaa
fsubrp
cmp
clc
hlt
icebp
sti
icebp
in
jmp
in
jmp
xchg
test
hlt
lock
aaa
fcomp
hlt
leave
cmp
neg
test
cli
jecxz
fsubr
xchg
loope
icebp
loop
in
loop
lock
sub
and
hlt
fistpll
stc
jecxz
roll
in
test
rcr
out
in
xlat
in
xlat
sarl
cmp
into
cld
repz
ret
in
sti
in
rorl
int
fnsave
sar
ljmp
lds
fdivrp
into
fucomi
hlt
rcll
lock
xor
fcomp
sti
std
xchg
std
out
cmp
icebp
fucompp
repz
loope
loope
stc
cmc
shl
jmp
xor
cmp
cmc
xchg
testb
in
fcomp
lock
cmc
icebp
out
int3
repz
call
out
repnz
cmp
repnz
ljmp
sar
repz
rcr
das
aad
xlat
cli
clc
ds
aam
stc
in
aad
iret
fcmovu
or
out
test
rcll
cmc
stc
cmp
fucomi
out
rcr
rcl
bnd
in
into
ret
sti
jmp
xor
cmp
idivl
fadd
out
sar
fcmovnbe
cmp
movl
jne
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
or
ficoms
jle,pt
cmp
jle
loopne
fmuls
shl
int3
int3
hlt
repnz
loop
in
cmp
sar
jmp
test
out
int3
aaa
hlt
aam
cmc
jmp
cmp
fildl
hlt
test
adc
jmp
stc
sarl
fcompp
aaa
cmp
cmp
mov
sti
cld
lret
out
in
lret
out
shl
loop
shl
jmp
in
cmp
ss
cld
hlt
cld
cmc
in
loop
fucompp
int
fucomip
ror
jmp
repnz
icebp
xlat
in
fdivp
repz
jmp
mul
mov
ljmp
cli
cli
fnop
cld
cmp
jmp
rol
vpmaddwd
addb
int3
in
xor
jmp
out
roll
call
fmull
loope
int
cmp
cmp
idivb
repz
cmp
mov
mov
test
loope
icebp
sub
xor
cmp
icebp
out
leave
sbb
incl
cs
in
iret
fstp
jmp
cmpb
rcr
in
aam
std
fmulp
into
xchg
ljmp
shl
cmp
fdivr
aam
call
xchg
orb
shll
cs
cmp
rcl
fcomi
sbb
mov
lret
cli
out
int
int3
ljmp
int
hlt
roll
test
test
iret
int3
in
aam
or
das
xor
cld
lock
cmp
mov
test
out
in
fadd
cld
loop
xor
ret
out
cmp
call
div
icebp
cmp
icebp
call
out
mov
xchg
cmc
aam
xor
sub
sti
cmp
in
xlat
cmp
aas
out
leave
mov
std
sub
in
mov
rcl
out
out
hlt
jmp
adc
inc
fcomip
mov
fildl
aam
loop
cli
int
int3
fdivr
xor
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
pop
aas
mov
sarb
add
repz
in
jmp
orb
cmp
leave
repz
ss
mov
lds
fsubp
fsubr
and
in
shl
cld
xor
std
xlat
out
int
imul
shl
fcmovnu
test
xor
orl
xor
neg
fdiv
fstp
aad
call
mov
xchg
icebp
hlt
in
fucomi
lock
std
addl
fsubrp
jmp
xor
cmp
mov
repnz
cld
test
in
iret
test
xor
lock
shl
leave
into
cmp
icebp
cld
idivb
aad
fadds
xchg
jmp
into
out
xor
in
cmc
sbb
loopne
fmul
div
aad
in
stc
testb
out
mov
ljmp
call
fld
rcr
stc
mov
clc
in
test
aam
cmc
rcl
lret
aaa
in
xlat
jmp
out
xchg
and
ljmp
icebp
ret
in
jmp
loopne
aam
jecxz
in
fld
rorl
fcomp
mov
int3
sub
cmp
out
jmp
sbb
jecxz
clc
adc
mov
flds
icebp
out
shrl
fdivr
aam
fmul
jmp
cld
in
test
in
leave
xchg
loope
loopne
fucom
shl
icebp
xor
iret
shl
stc
aaa
lock
into
rcr
mov
xchg
ret
ljmp
and
xor
das
sub
out
in
iret
aas
addb
xchg
out
out
mov
nop
call
out
out
cmp
cmc
div
fistpll
loop
rol
test
xlat
aad
into
xchg
aad
loope
repz
stc
fidivl
cmp
std
cmp
fld
aam
cmc
test
fiaddl
out
ljmp
divb
fdivrl
xlat
loop
addb
ljmp
rclb
aad
fsubrp
aad
out
cmpb
add
mov
jmp
ret
leave
lret
aad
flds
mov
jle
cmp
jle
test
cmc
and
cli
test
fdivrp
int3
nop
leave
out
sub
int
xor
repz
ds
fsubrp
stc
fmull
out
xchg
test
std
icebp
lret
cmc
jmp
in
cmp
cmp
rcl
cmp
cli
adc
rol
mov
xchg
in
enter
shll
mul
clc
fcmove
xor
rcl
repnz
lret
in
rorb
into
ljmp
in
aad
incb
jmp
out
loop
jmp
in
xlat
rcl
xlat
fst
rolb
loope
faddp
mov
xlat
sbb
in
jecxz
test
ss
shl
icebp
test
repnz
mov
sti
nop
fnclex
out
lock
xor
jmp
cmp
fucomp
repz
shl
int3
cli
cli
repnz
fnstcw
loope
fcom
std
hlt
icebp
shr
mov
fdivr
call
cmc
rol
out
aam
fnstenv
aas
cli
loope
rcl
cmc
fndisi(8087
ret
fadds
lret
mov
mov
xor
cmp
fcmovnbe
lret
int
cmp
xchg
shl
enter
orl
test
icebp
int3
cld
fldlg2
clc
std
hlt
call
hlt
xlat
ljmp
loop
sar
repz
out
std
filds
fcmovbe
std
jecxz
lret
rcr
mov
lock
jmp
iret
fst
cmp
addb
xbegin
jecxz
mov
iret
mov
in
enter
sar
out
int
int
cmp
jecxz
hlt
incl
into
fsub
hlt
int3
xlat
xor
xlat
aam
div
leave
lock
loop
stc
fiaddl
loopne
lret
fxch
test
aam
divb
fmul
hlt
aaa
xor
xor
loop
cmp
out
lret
lret
mov
in
loop
jmp
lret
cld
out
enter
shr
fldz
xchg
orl
xchg
out
ror
cmc
ljmp
cmp
mov
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
cmp
out
cmc
fildl
xchg
out
int3
int3
jmp
cmc
stc
jmp
ss
in
fcomi
out
repnz
loopne
lock
out
rcll
loop
stc
fdiv
aaa
icebp
cmp
idivb
jecxz
lds
iret
repz
jmp
jmp
icebp
aad
addl
in
jmp
mov
out
lock
into
fmulp
lret
in
xchg
fimull
xchg
movl
aaa
cmp
sti
cmp
xchg
mov
shlb
fcmove
fcomip
loope
cld
sbb
loope
clc
loopne
sti
int
xchg
ljmp
sti
repnz
cmp
cmp
addl
xor
loop
repnz
cmp
ljmp
in
icebp
sub
cmc
mov
addb
int
ret
call
jmp
jecxz
sti
rcl
std
aas
xlat
repz
mov
leave
out
jmp
out
lret
cmp
fcomi
fstpt
icebp
int3
flds
out
mov
cld
jmp
std
sti
sti
xrelease
cmc
xor
fdivp
out
jmp
fdiv
ds
ret
jmp
aam
clc
in
jmp
ljmp
out
test
aam
cmc
test
in
loope
mov
int3
out
icebp
int
fstpt
aad
out
cmp
cld
test
jmp
loopne
std
xchg
iret
lock
ss
fdivp
cmp
fiaddl
leave
imul
movl
int3
sti
iret
cmp
aaa
fmul
rcr
repnz
cmp
out
or
sub
cld
addl
sar
cmp
iret
clc
shll
out
shr
ret
repnz
stc
in
loop
std
out
test
xor
call
xor
fdivp
out
iret
xchg
neg
adc
mov
enter
or
aam
not
fsubr
enter
roll
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
xor
jle
cmp
jle
iret
out
loopne
std
sbb
aam
jecxz
xchg
mov
mov
shr
repnz
clc
test
cmp
fsubrp
jmp
out
test
call
mov
mov
dec
out
in
cmp
cmp
fnstcw
jecxz
fcomip
cmp
std
in
out
xlat
enter
loop
icebp
in
iret
clc
aad
call
iret
lret
hlt
cli
ror
cmc
mov
clc
cld
sub
out
sti
xchg
adcl
cmp
shr
call
cli
fiaddl
mov
std
jecxz
loop
rclb
cmp
xor
not
lock
fdivr
in
fdivrp
fmull
std
lock
test
shl
hlt
sub
leave
int
cmp
loope
loop
cmc
aam
in
xchg
in
xchg
xchg
jmp
stc
out
aam
aad
cli
rcl
fxam
sti
neg
clc
xchg
mov
ljmp
cmc
mov
xlat
repz
sub
ds
sbb
loopne
enter
int3
test
jmp
xchg
shr
in
aad
out
cmp
enter
aas
test
enter
leave
testl
loope
sti
stc
stc
xor
lret
loopne
rol
icebp
rorl
in
not
std
leave
loop
xchg
cmc
int3
int
lock
not
cmp
lret
add
call
jmp
mov
fdiv
mov
in
fpatan
in
leave
int
fucomi
shl
ss
cli
jmp
mov
mov
xor
repz
std
cmp
addl
std
leave
aad
fadds
call
in
imul
div
loop
in
cli
icebp
stc
jmp
in
out
mov
das
lock
rcr
fcomp
leave
repz
icebp
cld
shl
call
in
leave
flds
sarb
sti
in
in
xlat
ror
loope
in
aad
loopne
loop
lds
in
lock
faddp
loop
iret
fmul
jmp
not
xlat
cmc
aam
loopne
rcl
out
call
leave
leave
xchg
mov
xor
enter
or
add
enter
fcmovnbe
fcomp
insb
jae
fimuls
aaa
pusha
leave
jle
cmp
jle
repz
ret
addb
test
lret
lret
jmp
in
aam
xor
repnz
xor
rol
sti
cmp
xchg
in
in
cli
jmp
into
icebp
mov
int3
shlb
loopne
xlat
cmp
cmc
jmp
in
out
into
out
xchg
or
clc
in
call
ror
neg
out
cmc
std
jmp
loope
out
jmp
rcr
nop
aam
lock
out
out
xor
rcl
neg
aas
rolb
int3
into
cli
out
in
fdivp
lret
cmp
xlat
shr
icebp
ret
aaa
div
shl
leave
lea
mov
ljmp
sti
idivb
cmp
loop
loopne
add
lret
std
icebp
in
incl
call
out
fstp
in
xlat
shl
mov
neg
flds
fcmove
into
xchg
xor
hlt
icebp
hlt
fst
fucom
loope
xchg
rorb
jecxz
shl
in
cli
stc
in
aad
lock
fptan
ss
xchg
aam
mov
std
repnz
mov
lock
lret
ljmp
cli
call
lret
out
addl
lock
xor
xor
sti
rcl
lock
test
fcomp
test
xchg
faddp
or
sti
fsubr
jecxz
test
shrb
cmc
cmp
test
mov
test
fsubr
mov
jmp
xor
in
cmp
rcl
lds
jmp
fdivr
in
icebp
test
out
xor
std
aad
iret
rcl
cmp
rcr
ret
in
enter
out
into
shl
shl
enter
cli
icebp
clc
fstpt
loope
shr
shl
sti
aad
cld
in
enter
mov
cmp
xlat
lret
fcmovbe
aad
idivb
stc
sar
std
jmp
enter
lret
shr
int
out
in
int
shl
loop
xor
loopne
les
clc
cld
int3
test
out
cmp
mov
add
pop
jmp
aas
lret
ror
lahf
jmp
test
cmp
jle
cld
divl
repz
cmp
mul
stc
neg
mov
repnz
mov
jmp
repnz
cmp
jecxz
loopne
fadd
cmc
repnz
std
out
out
int3
jmp
aad
int3
shr
inc
rcl
call
loopne
cld
rclb
adc
cmp
out
ror
repz
out
lret
mov
out
jecxz
mov
call
sar
rolb
fnstsw
mov
cli
int3
out
jecxz
rcl
repz
cmc
out
cli
leave
out
idiv
into
ret
mov
fcmovnu
mov
ljmp
xor
rcr
cmp
int
clc
rcr
test
ret
icebp
clc
call
fcmovu
loopne
xchg
fisttps
sub
call
cmp
mov
ljmp
bnd
lret
in
ss
out
loopne
clc
hlt
jecxz
cmpb
sti
xchg
xchg
loop
sub
xchg
xchg
mov
clc
in
lret
aad
out
cmp
icebp
cmc
in
in
leave
cld
leave
leave
fneni(8087
lock
repz
sti
shl
jmp
ret
fld
aad
mov
std
out
nop
lret
xor
stc
in
lock
clc
stc
rcr
test
cli
idiv
clc
mov
leave
mov
out
jmp
in
lret
aaa
fdiv
clc
xlat
aad
mul
xchg
test
fneni(8087
nop
loope
ljmp
cmp
hlt
cmp
out
fcompp
cli
jecxz
and
orb
out
in
ret
fldcw
cmp
aam
shl
shl
in
add
loope
out
in
fcmove
call
xor
jmp
ljmp
cld
into
in
cli
hlt
fcmovu
in
out
leave
mov
mov
out
jmp
ret
incb
in
xchg
int
dec
cmc
into
jmp
lret
ffree
xor
sar
out
out
jecxz
orb
call
sub
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
int
cmc
leave
out
repnz
fdivrl
cld
jmp
call
int
aam
aam
xlat
in
int
int
clc
into
shl
test
call
cmc
fcomp
popl
ljmp
fdivr
enter
lock
jecxz
faddl
loope
out
jecxz
out
int3
clc
jmp
loop
ljmp
cmp
frndint
push
roll
mov
leave
fcmovnu
xchg
shll
lret
test
addb
ret
in
xchg
repnz
out
loopne,pn
lret
clc
std
into
jmp
sub
jmp
xchg
loopne
mov
into
in
mov
ret
xlat
cmp
cmp
lret
iret
test
repz
stc
int
in
cmp
aas
jmp
cmp
aad
sar
aam
lret
cld
in
in
int3
xchg
lret
out
shr
out
fxch
rcl
cmp
cmp
mov
loopne
movb
xchg
shl
call
hlt
cmp
in
idiv
sti
xchg
cld
nop
in
call
sub
xor
jmp
out
in
cli
cmp
filds
std
stc
imul
cld
loopne
dec
ljmp
cld
div
cmp
aas
ljmp
cmc
cmp
orb
xchg
mov
shl
out
not
ljmp
cmp
repnz
loope
jmp
jecxz
mov
bnd
stc
aaa
xor
fdivrp
int
lock
cmc
fisttps
in
int3
xchg
call
cmp
lret
repnz
clc
in
aad
jmp
adc
out
out
cs
ror
ds
in
fneni(8087
leave
fisttps
mov
loop
xor
ret
leave
out
leave
in
loopne
int3
sarb
xlat
fcmovb
jmp
in
fxch
test
loopne
roll
shll
ss
std
out
jmp
xlat
ret
cmp
test
and
fcmove
or
call
div
mov
and
or
jmp
ret
ret
rcl
aad
sbb
roll
sarb
cmp
jle
in
cmc
sub
loopne
sar
rcr
testb
jecxz
out
leave
xchg
xchg
xchg
cmc
hlt
enter
cmp
mul
out
rcl
in
ror
fcmovnb
loop
stc
mov
xchg
rorl
in
aaa
iret
div
shl
jmp
int
out
adc
aad
xchg
in
in
xchg
ror
repz
rcl
int3
cli
aaa
cmp
stc
loope
leave
ljmp
jmp
xor
cmp
leave
stc
cmc
cmc
lock
loop
out
cmp
ffreep
mov
out
repnz
lock
stc
aaa
xlat
int
ss
ret
int
aad
ret
rorl
out
jmp
ljmp
in
in
into
in
into
jmp
loopne
cli
enter
call
out
mov
lea
iret
lock
out
aas
loopne
cmp
decb
mov
mov
loop
nop
aad
ljmp
ss
ds
loop
in
jmp
std
test
fists
xor
ror
cmp
cmp
std
ljmp
std
std
shl
xchg
in
jmp
xor
cmp
shl
fcmovnu
and
mov
xchg
test
call
fcmovnbe
imul
leave
fcmovb
addl
fstp
nop
mov
in
xchg
cmp
in
out
xor
xor
aad
loope
cmc
cmp
jmp
shr
fisttpll
enter
loop
neg
fcmovnu
fsubp
xchg
stc
mov
fst
icebp
mov
lds
clc
fdivp
out
aad
loop
in
test
test
out
aad
int
in
cmc
rol
in
xor
fmul
int
enter
in
std
test
ret
aas
aad
mov
out
jmp
out
xor
ljmp
cmp
cmp
clc
xchg
mov
icebp
iret
clc
repnz
sti
fdivrl
loopne
in
rcl
sti
jmp
fmulp
fimull
pop
ret
push
mov
jmp
lret
aad
int
ss
sar
iret
mov
jle
add
xor
ret
ss
iret
loop
fiaddl
repz
xchg
call
aad
hlt
stc
in
lret
fnstcw
int
aam
rol
in
out
call
in
jmp
call
into
cmp
movb
mov
fnclex
mov
out
rcl
enter
xor
aaa
cmp
in
stc
hlt
test
mov
cli
hlt
mov
shrl
das
int
cli
icebp
jmp
ljmp
fsin
mov
std
int3
mov
fcmovbe
repnz
repz
fcmove
cld
jmp
fiaddl
xchg
out
in
in
call
aad
lret
iret
test
ffree
fcomip
sub
repz
stc
jecxz
fsubr
dec
cld
shl
sub
in
xchg
les
into
xchg
lret
call
lret
fsub
ss
loope
rol
cmc
jecxz
loope
aad
ljmp
hlt
xchg
shl
hlt
sti
cmp
cmp
in
call
ds
aas
ljmp
orb
in
into
fadd
das
imul
leave
xlat
lock
aam
ds
cmc
out
or
test
loop
hlt
ss
out
ljmp
sar
testb
cli
repnz
jmp
enter
in
jmp
jmp
test
in
aas
cld
neg
test
movb
test
std
cmp
cmp
shl
fld
loope
addl
loop
mov
sub
out
cmp
ljmp
icebp
stc
xchg
in
frndint
enter
cli
mov
loopne
in
das
jmp
cmp
clc
cmp
repz
jecxz
lret
loope
stc
xchg
xchg
cmc
mov
aaa
fldl2e
out
aad
aad
icebp
hlt
repnz
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
xchg
out
out
leave
fcmovne
lret
xchg
cmc
iret
shl
aad
test
aas
in
repz
ret
jecxz
test
hlt
xor
cli
clc
lock
lock
int3
test
test
sti
enter
in
xlat
test
in
ficoml
fmul
shll
lret
lret
clc
cli
xor
out
xchg
adc
mov
out
std
mov
les
out
jmp
in
lret
iret
sti
xor
aas
and
aad
test
test
std
iret
ljmp
loope
fyl2x
shr
icebp
int3
cmp
loop
aaa
aas
rcl
aad
xchg
jecxz
xchg
sbb
leave
xor
shr
lret
icebp
shl
rol
sbb
leave
loopne
loopne
iret
iret
fmul
mov
jmp
lret
cmc
hlt
fxch
cmc
loop
out
adc
cld
out
in
testb
loop
repz
xlat
cmp
aaa
iret
std
cmp
test
std
jmp
orb
out
jmp
lock
clc
leave
rol
rcl
jmp
rol
call
mov
iret
lock
sti
lret
sarl
icebp
fcmovbe
loopne
in
shl
loope
loop
in
xchg
fcmove
in
xchg
out
fmul
out
in
aaa
iret
loopne
idivb
in
loopne
fldl
notl
jecxz
into
shl
call
hlt
out
std
fxtract
cmp
lret
cld
out
or
loopne
xchg
lret
div
repz
rcl
fcmovnbe
rcl
cmp
std
ficoml
lock
xor
out
cmp
xor
test
out
test
loopne
hlt
in
lock
clc
clc
out
shl
shl
loop
lret
addl
orb
out
out
iret
enter
sarl
std
cld
icebp
rolb
leave
out
out
cld
call
repnz
shl
xor
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
rcr
imull
jle
add
into
stc
shl
cmp
cmp
xchg
enter
mov
lret
in
xchg
xchg
out
stc
in
jmp
fdivl
out
repnz
test
ds
sti
leave
stc
out
clc
leave
ljmp
in
ret
std
ljmp
into
repz
cld
movl
mov
hlt
lock
out
xor
aad
iret
clc
hlt
testb
out
jmp
ljmp
in
lock
xlat
filds
in
inc
repz
xor
ljmp
ljmp
fldt
fxch
roll
rorb
in
enter
mov
cmc
aad
icebp
in
not
shl
cmp
into
loop
aas
clc
out
fst
mov
out
leave
cmp
or
repz
lret
flds
addb
cld
aas
jmp
in
jmp
shl
test
fcom
in
aaa
repnz
sti
stc
in
fmulp
xchg
in
icebp
test
loope
shl
out
into
in
clc
std
aad
loopne
aam
cmp
std
int3
fsub
sbb
mov
shl
jmp
cmp
lret
hlt
idiv
repnz
div
test
std
leave
int
in
lock
repz
xlat
cmp
aad
test
test
fsubr
stc
fsubr
xchg
fucomi
ror
loop
mov
sar
out
fstpt
repz
or
faddp
cmp
leave
fildl
fdivp
lret
into
aad
divb
adc
in
call
out
repnz
call
hlt
lret
shl
cmc
fcomi
addb
fchs
std
shl
out
mov
repz
jmp
std
out
call
ret
fadd
addl
testl
xor
hlt
sti
in
jmp
ss
sti
fld
fsub
out
out
movzwl
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
add
jle
adc
jle
call
orb
div
ljmp
cld
in
loopne
loopne
hlt
mov
out
in
ljmp
sti
jmp
clc
fsubp
mov
test
fucomip
ljmp
mov
sub
idiv
aaa
fdiv
jmp
fchs
fldl
mul
mov
rorb
sub
jecxz
out
out
shl
icebp
cmp
loope
add
or
mov
std
repnz
cmp
flds
loope
xlat
fimull
ror
repnz
shl
into
ss
cmp
out
add
in
loopne
loopne
mov
in
cmp
out
lret
call
loop
xchg
testb
test
cmc
lret
lret
neg
imul
cmpl
clc
rol
in
std
not
out
test
in
mov
into
xlat
cli
out
sar
in
aam
out
jecxz
sar
xchg
loop
xlat
repz
loop
int
rorl
out
jmp
out
bnd
in
ds
decl
sti
out
out
out
std
int3
leave
sar
mov
out
xlat
int3
hlt
jmp
ret
aam
jmp
clc
flds
mov
loopne
int
fnop
xor
faddl
stc
fsubr
test
mov
sub
int3
hlt
sti
cld
fcmovnbe
repnz
cmp
rol
fldl
enter
mov
xor
out
std
int
sar
div
repnz
vpand
fldlg2
out
rorl
fxch
fmul
xor
loope
or
rcl
jmp
fcmovb
loope
out
loopne
int3
sub
lret
std
ds
sarl
faddl
ret
fstp
int
jmp
repnz
out
call
enter
aam
sti
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
fdiv
add
cmp
xlat
orb
repz
std
out
in
shl
cmc
cld
idivb
fnclex
fdivr
loopne
fcom
fcmovnu
loop
lret
nop
mov
pushl
xlat
lock
fcomi
fsubr
repnz
sbb
cli
std
cli
int3
xchg
out
enter
mov
cs
test
fcmovnu
out
std
iret
out
cmp
sti
aam
aam
call
repnz
xchg
das
icebp
iret
xor
jmp
sti
incl
enter
xchg
iret
clc
xchg
fnstenv
leave
enter
cld
cmp
xor
stc
fsub
jmp
incl
in
cs
ss
fsqrt
rcl
shr
cmp
loop
test
clc
ret
fsubrp
fimuls
xchg
out
rcl
cmp
call
in
hlt
cli
sti
hlt
loopne
fsub
int3
nop
rcll
cs
ljmp
loopne
cmpl
call
out
cli
test
repnz
jmp
cmp
leave
shl
rol
roll
mov
fcmovne
mov
fcomi
nop
call
iret
xor
in
cmp
lock
clc
xchg
repz
loop
int
ffree
xchg
nop
hlt
cmc
jmp
iret
enter
aam
in
repz
fst
cmc
test
in
jmp
xchg
repnz
lock
rol
clc
fdivl
fpatan
adc
test
in
loop
leave
mov
int3
mov
mov
in
hlt
lret
xor
cmp
stc
repz
fcomip
fst
repnz
faddl
int
hlt
jmp
in
lret
xor
repz
cmp
jmp
fcomi
mov
out
idiv
or
jmp
aam
fsub
loopne
stc
fcmovnu
iret
loop
sbb
clc
dec
sub
xchg
orb
out
repz
ror
out
cmp
ret
loope
aam
fldln2
sti
mov
xchg
xor
decl
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
adc
fdivrl
adc
jle
in
call
lret
cld
aam
in
ds
std
fcom
test
cld
sti
loopne
xchg
mov
loope
out
leave
jmp
cmp
fsubrp
icebp
aas
in
cmp
aam
fcmovne
fdivr
test
stc
cmc
decl
jmp
aam
lret
shll
lret
rcr
sar
and
jmp
lret
mov
xlat
cmp
fdivrs
sti
int
out
incb
cld
aad
ljmp
jmp
shl
xor
cmp
aam
sar
out
sbb
hlt
sti
shl
mov
mov
fdiv
shr
ror
neg
cli
shl
cmc
sti
loopne
fdivr
hlt
les
faddp
mov
xorl
call
loop
jecxz
roll
repz
out
in
int3
into
shr
cmp
clc
xor
jmp
ret
cmp
sbb
jmp
out
lock
out
xor
jmp
cmp
ljmp
jecxz
mov
cmc
sbb
lock
xchg
int3
aaa
repnz
divl
jmp
enter
shl
loop
xchg
enter
in
rcl
out
divb
fsubrp
fnstsw
aaa
loopne
aad
ret
decb
and
xchg
in
int
xlat
shl
shlb
clc
std
fcmovbe
hlt
cld
aas
rcl
mov
mov
out
test
call
iret
fsqrt
fcmove
fstpt
cmpl
sub
lret
flds
xor
jmp
iret
repnz
fdivrs
vpmullw
xor
fmuls
test
hlt
test
fadd
in
lock
aad
aad
in
in
fcmovnu
cli
out
les
xchg
loopne
ljmp
aad
cmp
cli
mul
loopne
out
hlt
std
xchg
xchg
leave
jmp
out
rcl
jmp
repnz
ror
into
repnz
hlt
cmp
movl
jb
dec
jmp
aam
fadd
fstp
pusha
shl
aas
pop
mov
jle
add
std
ljmp
iret
jmp
fdiv
jecxz
aad
f2xm1
out
out
lret
cmp
xchg
orl
aad
shr
out
cld
ss
lock
fldl
mov
stc
inc
mov
call
xor
int3
in
enter
sti
std
std
shl
repz
orl
mov
nop
aad
in
rcr
sub
cmp
out
lock
hlt
aam
ret
sti
rorl
nop
mov
fsubr
aam
clc
out
fdivp
aad
shr
mov
xchg
clc
loop
loopne
adcb
cmp
fldt
cmp
xor
cmpb
jecxz
out
call
in
test
adc
cmp
stc
into
lret
iret
into
div
aam
fcmovnu
loope
lret
fucomp
cmp
in
xchg
sarb
in
aam
cmp
out
into
cld
aad
neg
lock
std
clc
mov
int
mov
ss
aaa
into
xlat
cmp
div
in
xlat
ret
ljmp
fdivrp
fimuls
repz
iret
fmulp
xlat
stc
std
int3
rol
fsubp
roll
in
icebp
mov
in
aad
ret
out
ret
ljmp
roll
xchg
out
in
incb
iret
out
leave
aam
ss
out
icebp
cld
aad
ds
fiadds
xchg
ljmp
int3
das
in
rcr
ljmp
shl
mov
cmc
std
sti
sub
jecxz
nop
in
loopne
lock
fucomi
out
hlt
jmp
fcmovu
clc
loopne
jecxz
in
sub
fldl
idiv
in
fmulp
std
and
rcl
icebp
call
fucomi
fmull
pause
shl
aaa
iret
hlt
jmp
out
std
cmp
shl
cli
fmull
fmull
aaa
sub
cmp
push
jbe
add
inc
hlt
addl
jmp
fcomp
fistps
je
xor
mov
jle
adc
jle
xor
adc
out
in
clc
xchg
xchg
call
in
lock
repnz
repnz
cmp
sarl
hlt
out
loope
fcmovnbe
in
lret
fisttpl
enter
out
sarl
adc
loop
inc
fidivrs
in
lret
test
ror
call
xor
in
xor
leave
cmp
out
rol
repnz
mov
test
in
int
test
lds
xor
iret
lret
cmc
fcmovnu
shl
loope
rol
and
fsubrp
loop
mov
fsubrs
aad
xlat
lret
ljmp
test
icebp
inc
stc
enter
test
cmpb
sar
fcmovne
lret
cld
cmp
ds
call
lret
test
xchg
rcl
xchg
rcr
ljmp
std
aam
ret
cmc
fdivp
mov
in
int3
out
nop
mov
xchg
shr
int3
mov
cmp
fstpt
roll
mov
cli
clc
ljmp
in
out
rol
iret
out
ljmp
shl
std
adc
aad
xlat
mov
jmp
xor
aad
fcmovbe
cmp
std
jecxz
in
fldln2
call
fisttpll
cli
xlat
call
sarl
neg
sar
neg
mov
jmp
fxtract
int
int
fld1
stc
rolb
fdivp
loope
fiadds
test
shlb
sar
icebp
call
icebp
ret
cld
addb
xchg
mov
repz
rcl
out
into
out
cld
std
int
cmp
xor
faddl
fadd
out
xchg
fadd
repz
xor
lret
out
cmp
clc
add
leave
loope
call
shl
aad
xlat
jmp
imul
std
ror
out
stc
jecxz
std
fadds
jmp
in
xor
add
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
adcl
loop
jle
add
int3
mov
mov
fcmove
cmp
repnz
dec
cmp
shl
xchg
loope
in
call
xchg
std
imul
shlb
lock
cmp
xlat
cmc
iret
aas
icebp
xor
cmp
ds
test
fldl
cmp
jecxz
xlat
inc
out
into
fsubp
neg
rcr
fdivrl
fimull
xchg
orl
out
cmc
cmp
out
jmp
fstp
sti
out
mov
cmp
leave
xchg
xchg
in
out
in
clc
xlat
out
sarl
shlb
lock
sti
push
aad
addb
and
in
xchg
lock
in
shr
ljmp
in
clc
into
jecxz
cmp
out
fmul
fildl
out
rcl
fidivl
leave
int
int3
iret
int3
iret
aas
std
repnz
mov
test
in
iret
fcomp
xchg
jmp
in
xor
jecxz
ror
call
in
neg
loop
fsub
cmp
sbb
or
hlt
int
xor
leave
aad
in
shlb
in
cmp
clc
xlat
aam
sti
mov
cld
call
rorl
xor
sar
repnz
sar
cld
rcr
jecxz
xor
rcr
mul
in
loop
adcl
lock
xor
aam
shr
sti
call
clc
aam
faddl
xchg
nop
hlt
call
shr
cmp
rcr
xor
jmp
loopne
out
fcmovu
xchg
xchg
orl
cmp
add
loop
in
aam
out
jmp
std
int
loop
std
enter
xchg
out
xor
sub
jmp
adc
fldl
in
loope
rcl
out
in
cmp
cmp
jmp
fcom
lret
int
icebp
out
frstpm(287
sti
clc
loop
mov
cmc
ljmp
aad
hlt
div
or
iret
shl
fsub
cli
xchg
enter
call
out
int
enter
test
add
adc
jmp
int3
rol
aad
pop
pop
movsb
or
inc
movsl
pop
imul
jle
lret
sti
sbb
stc
in
loopne
mov
mov
loopne
out
stc
not
fyl2xp1
loope
loopne
ret
loope
loope
xlat
jmp
test
movb
xor
cs
cmp
xor
std
aad
xlat
test
out
out
into
xchg
out
shl
repz
iret
ret
xlat
cmp
shl
out
shl
rcl
idiv
jmp
cld
xlat
xchg
test
clc
int
mov
jecxz
cli
enter
repz
xlat
adc
repz
ljmp
cli
int
into
out
ljmp
xor
in
loopne
icebp
shl
jecxz
lds
hlt
faddp
fdivrp
aas
in
in
lea
in
in
fcmovnbe
in
stc
idivl
sti
hlt
iret
aam
loopne
cld
repnz
test
mov
and
enter
lret
in
cmp
std
mul
test
bnd
in
xchg
test
enter
ror
hlt
in
stc
cmp
lret
in
fdivp
adc
jecxz
mul
jmp
mov
xchg
in
mov
aam
leave
jmp
int
aam
ds
loopne
clc
sti
shr
jmp
xchg
in
ret
xchg
xchg
ss
repz
lret
in
cld
icebp
out
cmc
test
sbb
out
add
shr
ror
xchg
loope
in
ss
sarl
jmp
in
fdivp
aam
clc
cmp
out
fstl
ss
xor
cmp
aam
and
test
hlt
filds
into
rorb
cmp
call
xor
out
shr
in
lret
cld
repnz
in
cli
sub
aaa
rcl
into
lock
jmp
out
in
sti
int3
xchg
nop
test
shll
loop
xor
xor
fcmovbe
ds
in
xchg
xchg
clc
mov
out
leave
into
lock
jmp
rolb
loope
lock
dec
in
jmp
std
loopne
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
jne
jl
jle
adc
jle
mov
in
out
stc
in
loope
sti
stc
aam
cmp
loop
int3
cli
mov
xchg
mov
xchg
ret
xor
fucomp
leave
leave
sarl
stc
jecxz
cmc
addl
mov
aad
call
out
aas
lock
in
out
aad
loopne
mov
test
fmul
int
out
aam
idiv
out
std
cmp
stc
aad
fstp
loop
jmp
in
test
call
leave
repz
cmp
cmp
clc
std
repnz
sti
ret
xchg
aad
shl
xchg
aam
jmp
shr
xor
leave
shr
call
repz
rcl
rol
mov
xchg
addb
leave
hlt
div
idivb
jecxz
std
lock
mov
jmp
lock
nop
loop
icebp
out
iret
call
fdivr
icebp
in
repnz
adc
rorl
xchg
repnz
leave
mul
shlb
call
fmul
lock
cmp
ret
mov
ret
jecxz
loop
lock
ror
out
aas
iret
repnz
cmp
clc
shl
out
mov
cli
adcb
aam
stc
loop
int3
aad
stc
cmp
iret
ret
addl
aas
mov
test
mov
lock
cmp
cmp
rcr
testl
addl
imul
repnz
fcmovnu
rolb
in
sti
testb
mov
out
lock
fcomip
sarl
aam
fnstcw
mov
ret
fld
iret
jmp
ljmp
iret
out
aam
stc
into
jecxz
aad
jmp
out
icebp
out
mov
into
xor
hlt
fucomp
sbb
xor
enter
in
lret
sbb
repnz
lret
in
xchg
shr
loop
lock
fsubr
fnop
aam
fptan
inc
xchg
add
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
into
xchg
pop
mov
jmp
jle
aas
cmc
fmul
idiv
jmp
movl
cmp
in
cmp
rol
aad
mov
lret
stc
fdivrp
iret
jmp
xor
shlb
out
into
cmp
fdivrl
ror
aas
testl
fmuls
lock
xor
cmp
int
fdivr
leave
stc
cmc
cmpl
jecxz
mov
fsubr
test
enter
lret
fdiv
div
in
icebp
lret
cmp
rcl
mov
into
std
into
enter
loop
rol
leave
hlt
cmp
cmp
int
cmc
rcl
xor
lret
out
xchg
in
or
shl
ror
fcmovnb
xor
lock
xlat
sti
addl
clc
fstp
jecxz
repz
out
jecxz
not
cmc
repz
cld
in
icebp
lock
cli
xchg
ret
in
mov
test
rcr
sti
fdiv
mov
xlat
ss
clc
ss
rol
idivl
testl
sti
sub
rcr
ljmp
repz
ret
adc
loop
in
out
mov
call
xor
xlat
fdivrs
cmp
shl
int3
shl
cld
addl
ljmp
repz
aad
cmc
stc
fnstcw
out
in
in
cmp
aam
fsubr
mov
fcmovu
in
loopne
loopne
std
lea
xor
out
fsqrt
fcomip
in
ds
rcr
sarb
neg
mov
mov
mov
xchg
rcl
ret
fld
into
cmp
stc
cmp
in
icebp
cmp
lock
mov
mov
test
icebp
not
ss
sar
loop
orl
lret
adc
xchg
rol
xor
ret
cmp
icebp
call
cmp
out
icebp
cmp
jmp
icebp
lock
in
lock
aad
repz
in
xlat
cld
ret
out
or
in
rol
shr
mul
mov
movzwl
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
shl
pop
and
jle
adc
jle
repz
call
clc
cmp
test
mov
mov
xor
sti
out
leave
ss
loop
test
jecxz
xchg
or
sub
out
fcomp
int
out
hlt
lret
clc
ds
jecxz
cld
dec
int3
sbb
rorl
in
xor
cmp
stc
fcmovbe
ss
out
cmp
out
ret
addb
cmc
int
jmp
cmp
out
xlat
icebp
icebp
mov
loope,pt
testl
xor
fcmovnbe
repz
hlt
xlat
push
sar
rcl
out
fucomp
in
lock
hlt
mov
out
rcl
sti
aad
divl
call
cld
int
in
xlat
std
ret
int
into
into
flds
xor
rcr
xlat
xor
cmp
cmp
int
aam
icebp
fadds
mov
loope
cmc
fsubrp
int3
lret
idivb
sar
enter
xor
loopne
call
mov
jecxz
icebp
loopne
loop
aaa
xor
lret
cmc
ret
stc
loop
xchg
int
mov
mov
sub
lds
ss
fnstsw
xor
xchg
int3
sti
rorb
in
in
lret
shl
fldl
and
call
mov
roll
clc
out
ss
call
sarl
repz
cli
cli
aad
cli
ljmp
enter
sarb
xor
cmp
in
sar
xlat
fdiv
test
out
int3
loop
jecxz
loop
repz
xor
jmp
sarl
cmp
hlt
out
lock
in
fdiv
loopne
icebp
out
in
shl
loope
out
out
cmc
cmp
cmp
fldl
mov
icebp
movl
cli
int3
out
hlt
jmp
fsub
aam
rcl
stc
mov
cmp
add
aam
aad
fstp
movsb
ficomps
add
add
into
int3
in
xchg
mov
ss
leave
std
out
iret
stc
fmul
clc
fucom
xlat
cmp
fmull
ror
sub
vpsubsw
xlat
lds
out
filds
clc
xchg
in
mov
jmp
sti
fcmovnu
sar
rcr
in
sbb
out
in
stc
jmp
loopne
loop
jmp
in
xor
cli
fcmovbe
aad
in
cmp
cmp
clc
cli
out
addb
or
repnz
jmp
fdiv
cmp
loop
in
incb
fimuls
iret
in
int3
fmul
ror
rcr
hlt
cmp
neg
jecxz
in
mov
loop
int3
adcb
leave
aad
lock
aam
out
shl
les
leave
loop
test
in
ljmp
hlt
out
icebp
clc
out
rcl
xlat
cli
testb
jecxz
roll
not
ljmp
fucom
cmp
cmc
lret
jecxz
decb
in
lret
fidivrl
out
xlat
cmp
jmp
stc
ds
xchg
clc
cld
cmp
fcmovbe
cli
fmul
int
xchg
in
into
imull
into
fdivr
repnz
cmp
xchg
loopne
xlat
lret
iret
jecxz
test
shr
fadd
iret
fdivl
ds
div
flds
cli
sti
cld
adcl
cmc
out
ss
fxch
fsubrp
roll
lret
int3
orl
ljmp
test
int3
into
in
cmc
aad
cld
jecxz
clc
in
ljmp
out
into
test
in
rcr
std
sarb
shl
bnd
hlt
jmp
mov
xchg
orl
sti
leave
jmp
sti
fnstcw
lret
rol
clc
vpandn
jmp
out
int
aam
sar
lret
mov
jmp
ret
lret
enter
int
cltd
movsb
imul
pop
push
and
jle
add
roll
not
fcmovne
enter
lock
loope
xchg
loopne
hlt
xor
aaa
sub
rcr
aad
loope
xlat
out
in
ds
ds
and
stc
fadd
xchg
aam
cs
xor
fst
jecxz
loopne
mov
test
xor
ror
xchg
rcl
aad
sub
xor
fmul
cld
xlat
sar
out
testb
clc
test
loop
add
ss
cmp
repz
fsub
aas
icebp
aam
out
sti
shl
jmp
fadds
jmp
lock
out
jmp
in
int3
aam
iret
cmp
rol
loope
fcmovu
aam
cmc
call
fucompp
in
testb
das
call
cli
not
out
cld
not
stc
out
sti
into
in
into
std
std
mov
shl
clc
int3
aaa
cmp
xor
repnz
fdivrp
jecxz
leave
sub
in
test
mov
out
cmp
out
ss
lret
xor
loopne
cmp
ret
test
mov
fisttpll
repz
out
xor
hlt
cmp
repnz
xlat
cmp
icebp
leave
stc
fadd
int
call
in
not
hlt
faddp
leave
cmp
cmp
aad
shr
fiaddl
int3
aaa
into
idiv
fcmovu
shr
fsubp
mul
repnz
xchg
std
in
nop
loop
incb
in
bnd
fdivr
test
ret
std
lret
std
jmp
mov
into
sub
lock
in
dec
cmp
xor
or
cli
incb
lret
out
shr
in
call
cmc
int
out
rolb
fisttpl
and
std
jecxz
out
out
jecxz
out
aam
in
cmp
icebp
iret
out
add
out
stc
fimull
in
fcmovnu
sti
cld
lret
idivb
xlat
repz
in
fsub
lret
into
cld
clc
jmp
sub
add
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
fucomip
iret
in
cmp
enter
cmp
stc
out
sti
sub
loop
leave
dec
cmp
xchg
int
int3
rcr
cmp
leave
imul
leave
rcr
cmp
cmp
aas
loopne
leave
out
fmull
ror
cmp
out
cmp
repnz
cmp
ret
hlt
lret
lret
loop
fucomi
loop
ffreep
lret
out
icebp
cmp
in
cmp
cld
jmp
int
test
cmc
jecxz
in
rcl
rolb
adc
fisttps
in
xchg
sub
std
jecxz
loop
cli
stc
out
aaa
stc
fcom
sti
testb
clc
xlat
repnz
adcl
in
lock
cld
cli
cmp
testl
jmp
in
call
aad
stc
ror
cmp
ror
shr
cmp
faddl
mov
loopne
nop
loop
fdivp
out
repz
div
call
fadds
jmp
test
lret
xchg
xchg
xorb
out
enter
cmp
xor
aam
rcl
jecxz
mov
cli
ljmp
jmp
sub
lds
ss
cmp
idiv
out
sti
loopne
cld
mov
iret
in
pushl
ljmp
fcmovnbe
ds
aam
test
fidivrl
cmp
incl
ljmp
out
out
xor
icebp
out
aaa
roll
and
xchg
iret
icebp
loopne
xor
jmp
out
repz
xor
enter
ret
orl
hlt
icebp
int
shr
xlat
cmc
ljmp
icebp
ret
sub
in
fisttpl
repz
int3
int3
lock
ss
lock
cld
icebp
test
stc
out
fcmovbe
iret
loopne
in
movb
idiv
not
cld
sarl
sarb
rorb
test
sub
add
int3
into
fmul
fsubrl
in
jecxz
cmpb
repz
adc
jle
testl
out
xchg
mov
repnz
out
cmc
out
fdivr
xor
rcr
shl
addl
xchg
fnsetpm(287
xchg
xchg
xchg
loopne
fdiv
shr
sarl
cmp
cmp
iret
shl
cmp
mov
sti
fmuls
not
hlt
shl
aam
ljmp
repnz
loope
addl
rcl
fdivp
lret
ffree
cli
fnstsw
idiv
test
cli
orb
loope
jecxz
divb
imul
repnz
xor
mov
enter
in
fisttpll
in
aad
fidivl
lret
shl
fdiv
mov
mov
in
loopne
loop
cmp
in
shll
lret
aam
in
loopne
and
test
in
out
decb
hlt
leave
idiv
cmc
divb
ljmp
lock
xchg
jmp
sbb
xor
ror
call
rcl
idiv
repnz
jecxz
fcomp
test
loop
in
rcr
shr
xor
in
std
sti
sbb
cli
mov
in
out
orl
cmc
cmpb
aam
aad
test
mov
jecxz
mul
xlat
enter
aad
in
aaa
iret
cld
xor
loop
fsub
or
fsubrp
fcmovu
fucomi
mov
cmc
fucomp
cmp
cmc
repnz
rcr
shl
in
enter
out
jmp
xchg
fisttpll
sar
xor
sar
repz
sarb
fadd
sti
addb
add
xor
int3
into
cmp
fucomp
xor
std
stc
mov
fsubr
fucomp
or
lock
hlt
repnz
out
out
sti
sti
fcomip
sar
rcr
cli
faddl
enter
out
lret
call
jmp
ret
ror
aam
mov
sub
cmc
jle
adc
jle
out
jmp
lret
div
fcos
clc
idiv
div
test
jecxz
fadds
std
hlt
out
into
clc
xor
mov
cmp
cmp
sbb
addb
leave
loope
and
loopne
ret
neg
cmp
aad
in
call
lock
sarl
jecxz
ret
iret
enter
icebp
adcl
out
aam
sti
loope
stc
in
cmp
xchg
fiadds
in
mov
sarb
int3
fcmovne
fsubr
cmp
aas
loopne
xlat
mov
fucom
mov
loope
int3
fcmovne
enter
enter
cld
vpaddusb
testl
aas
cmp
call
ffree
ds
sti
cld
xchg
cli
fdiv
out
in
xchg
jecxz
int
out
fstpt
ljmp
sarl
cmp
lret
std
cli
addl
xor
int
imulb
clc
shl
lock
fsubr
loope
out
loopne
std
stc
out
out
ffree
hlt
mov
into
cs
sti
fxtract
into
in
xchg
rol
sub
nop
out
mov
nop
not
repz
in
cmp
ljmp
fcmovnb
cmp
fdivr
testb
jmp
cmp
clc
out
in
cmp
cmp
loopne
aam
cli
roll
mov
ljmp
xor
fcomp
std
call
ffree
xlat
xor
call
sub
int
xor
jmp
in
int3
out
xchg
out
ret
cli
enter
xchg
sub
iret
in
out
aaa
xor
ror
clc
fmulp
ret
fucomip
idiv
std
enter
jmp
xchg
cmp
lret
stc
cmp
mul
aad
xchg
stc
loop
in
fmulp
mov
shl
xchg
iret
rcr
out
cmp
rcr
cmp
fstpt
roll
mov
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
stc
mov
or
in
jmp
lret
jecxz
iret
in
in
in
or
cmp
rcr
fsub
fildl
cld
int
into
shl
iret
das
ror
rcl
xor
xor
cmp
jecxz
loopne
les
test
xchg
xchg
in
xor
lock
stc
clc
sti
lock
repz
fsub
fiadds
mov
lret
hlt
test
ret
cmp
cli
leave
lret
repnz
xlat
enter
call
vpshlw
sub
aaa
aaa
enter
cmp
xchg
jmp
and
jmp
jmp
jmp
aad
aaa
call
fcmovu
test
enter
int3
call
loop
fsubr
cmc
loopne
ret
leave
fcom
ds
fnstcw
rcr
in
shl
adc
lret
ficoms
cmp
out
bnd
cmp
testl
jmp
int3
out
rol
aam
xor
lock
cmp
in
stc
aas
stc
sti
in
lds
leave
repnz
adc
xor
repnz
enter
hlt
cmc
lret
icebp
f2xm1
ds
faddl
in
mov
call
xor
fdiv
aam
ljmp
test
xchg
out
loope
loopne
xchg
std
ficoms
xor
cmp
cmc
sti
stc
cmp
rcr
stc
mul
jmp
sbb
jmp
out
out
repz
xor
aad
ret
loopne
loope
ret
out
std
out
ret
out
jmp
aam
loope,pn
call
into
cmp
lret
ret
addb
leave
and
leave
shl
repnz
int
ljmp
neg
mov
ljmp
cld
fildl
ss
clc
repnz
loope
test
orl
int
ljmp
repz
xor
add
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
cmp
adc
jle
repz
xlat
jmp
repz
ffree
ret
lea
out
sbb
into
icebp
nop
in
jmp
jmp
icebp
test
ret
out
loope
faddp
jecxz
icebp
std
adcb
int3
ss
cmp
idiv
lock
mov
loopne
mov
test
aam
icebp
jecxz
out
ljmp
in
cmp
stc
aam
ret
xchg
std
mov
roll
xor
icebp
xor
lret
shl
int
sti
sbb
in
adc
ds
enter
mov
xchg
out
shl
in
sub
stc
cli
out
ror
loop
fcom
icebp
sar
cld
jmp
out
out
fisttpll
xchg
int3
out
loop
out
into
call
hlt
std
and
enter
mov
mov
xchg
add
xor
xlat
xor
cmc
faddl
rorl
add
lock
fsubp
imul
ret
in
lret
std
int3
repz
adc
fcos
icebp
inc
fldl
repnz
int3
out
loop
cs
sti
fxam
out
stc
jmp
cmp
into
mov
les
loope
in
sti
call
xor
rcr
out
xor
ds
loop
loop
fdivr
jmp
loope
fucomi
out
xchg
xchg
shll
in
in
cmp
out
xlat
fcom
les
ret
call
out
lock
test
out
int3
in
lret
enter
xor
in
ljmp
int3
lret
jmp
cmc
repz
shll
enter
stc
test
iret
mov
mov
out
lret
call
xchg
loopne
das
enter
enter
imul
div
iret
lock
aas
aas
mov
mov
out
loopne
addl
lock
aad
out
aad
aad
fsub
jecxz
enter
clc
cli
ljmp
hlt
call
stc
stc
shl
cld
loope
int3
test
cmp
fsubrp
test
loope
loope
ljmp
or
sub
add
ret
iret
enter
int
xchg
cmpsb
push
ja
mov
push
mov
add
leave
nop
mov
sar
ror
fcom
cmp
test
test
stc
xlat
call
mov
rolb
lret
in
dec
std
fmulp
clc
stc
loop
test
call
loopne
out
xchg
das
ljmp
int
in
int
icebp
stc
in
fdivp
in
stc
mov
into
loop
les
xor
jmp
idiv
rcl
in
cli
clc
test
mov
std
loope
std
in
shl
enter
ror
cmp
lret
cli
in
ret
sti
loop
xchg
ljmp
xchg
in
repnz
in
cmp
cmp
test
fnstsw
adc
jmp
cli
int
and
ljmp
cmp
repz
xor
cld
rcr
loopne
ffree
aam
stc
call
leave
into
call
xlat
enter
cmp
lret
repz
std
roll
jecxz
icebp
sub
aam
out
in
in
fcmovnu
icebp
jmp
xlat
lock
ret
fxtract
lret
sti
fmulp
ljmp
iret
icebp
aam
out
leave
aaa
ss
cmp
ret
sar
std
movl
sub
stc
ljmp
hlt
fcmove
test
loopne
call
mov
mov
ljmp
ss
clc
fadd
cld
cli
cld
cmp
clc
cld
rol
repnz
aam
jmp
decl
repnz
in
in
out
cmp
call
cmp
aad
sbb
clc
orl
cmp
aam
repnz
out
mul
repnz
lret
xchg
cmp
loope
lret
shl
fadd
leave
loope
stc
stc
jecxz
cld
ret
lret
xchg
fisttpl
test
xor
ljmp
aam
repnz
jmp
out
stc
int3
ret
out
aam
ss
iret
int
cs
lret
ret
inc
add
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
cli
repz
and
idiv
jmp
out
lret
dec
neg
ret
rcr
sti
icebp
xlat
jmp
ret
std
mov
out
addl
mov
fsub
ret
cmp
cmp
int3
cld
repnz
loop
ret
or
or
icebp
fldcw
call
shl
cmp
int3
fiadds
loop
flds
loopne
icebp
sti
aam
sarb
div
repz
roll
mov
test
decb
shl
ret
idivb
cli
into
xor
int
sti
fcmovnb
testb
mov
test
xchg
test
shlb
aad
int
adc
roll
enter
lret
adcb
stc
cli
aaa
xor
repz
loope
shl
mov
nop
ljmp
fdivs
out
ljmp
in
cmp
fcmovbe
repnz
out
out
test
in
out
aad
xor
fcomp
cmp
jmp
mov
iret
jmp
jmp
fmul
in
cld
stc
call
repnz
test
fcomi
loop
in
stc
in
out
stc
int3
nop
mov
enter
cmp
rcr
cmp
in
mov
fcomi
dec
int
test
mov
lds
out
cli
in
rcl
into
neg
in
sti
cli
shl
jmp
cmc
fxch
in
jmp
in
int
test
out
in
cmp
xor
into
clc
jecxz
and
test
cmc
stc
sbb
cli
out
shl
xor
int
fstpt
aad
sub
rcl
loope
ret
out
into
sub
out
xchg
in
clc
xor
cli
shl
fcom
test
hlt
leave
xlat
leave
jmp
out
shl
shl
in
rcl
loopne
cmp
mov
clc
loop
test
out
and
out
iret
je
mov
mov
mov
jmp
xlat
into
rcl
aad
fadd
mov
adc
into
pusha
jle
adc
jle
xlat
rcr
out
cli
jmp
int
and
hlt
mov
neg
cld
loopne
shr
nop
repz
out
ljmp
idiv
in
fdivp
iret
in
clc
out
sub
int3
test
in
adc
out
shl
xor
aaa
out
repz
div
cmp
in
flds
out
cld
in
call
cmc
shr
in
idiv
jmp
sarb
xchg
ret
xchg
clc
jecxz
mov
enter
loopne
aam
jmp
cmp
cmp
hlt
cmp
test
cld
rclb
jmp
int
call
out
cld
adc
xchg
out
mov
fdiv
jecxz
jmp
leave
out
ds
lret
fcomp
aam
enter
cmc
out
int
out
fildl
das
jmp
sar
fcmovnu
loope
cmp
movb
xchg
iret
fldl
aam
xlat
cmp
cmc
int3
loop
cmc
cmc
out
xlat
call
lret
sub
xchg
iret
ljmp
in
int3
enter
int3
in
cld
test
test
into
fstl
mov
fndisi(8087
xlat
rol
cli
cmp
jecxz
stc
test
int3
fiaddl
int
shl
out
in
xor
lock
loopne
enter
jmp
out
out
out
xor
lret
stc
fxch
ss
out
icebp
cmc
fstp
inc
cmp
mov
clc
les
int
out
fldcw
cli
xor
incl
fsub
loope
dec
fchs
iret
mov
lock
xor
in
fnsave
cld
std
in
jecxz
fst
mul
call
cld
xchg
loop
rol
call
out
into
fldpi
cmp
test
sbb
out
enter
xchg
out
xor
xor
ret
lock
lret
rcr
rcl
in
into
test
shl
cmp
jmp
ror
enter
lret
add
inc
mov
adc
jle
lret
mov
mov
shl
call
cmc
enter
sti
icebp
cmp
in
xchg
xlat
repz
cld
in
nop
xchg
ljmp
clc
fcmove
cmp
shl
mov
in
lock
fcmovbe
hlt
out
loop
aad
in
cmp
lret
fdivrs
fdivrs
div
fildl
orb
divb
out
leave
aaa
lret
adc
mov
out
dec
out
int
loope
push
in
aaa
int
sti
jmp
cmp
xchg
shl
xchg
cmp
cli
loopne
fstp
aam
ror
cmp
cmp
aaa
icebp
lret
iret
ret
shr
repnz
neg
lret
xchg
xchg
orb
cmp
iret
lret
iret
fcmovbe
int3
cmc
sar
neg
xor
in
jmp
sti
test
cmp
call
loope
lret
sub
testl
xchg
xchg
popl
in
aad
repz
clc
cmc
cmpb
rcr
enter
sbb
xchg
call
ljmp
xor
loop
cmc
mov
out
int3
xchg
xchg
int
into
repz
xor
int3
fcmove
in
jmp
jecxz
cmp
fsub
fadd
testl
xchg
xor
ret
sti
cmc
fidivl
xlat
fcomip
inc
out
int3
mov
out
mov
test
not
int3
lret
int3
ss
cmp
out
fnclex
inc
in
test
xchg
int
in
call
loop
xlat
stc
out
into
not
xor
fadds
cli
hlt
loop
in
les
jmp
xchg
aaa
sub
int
shl
cli
in
adc
iret
cli
xor
orb
loope
xchg
or
jmp
call
cmc
test
ret
hlt
fisttps
mov
out
jecxz
ljmp
call
test
or
add
or
mov
jmp
int3
enter
into
push
mov
xchg
cmp
and
test
adc
jle
cmp
fnstsw
cld
cmp
sbb
iret
out
int
cld
mov
hlt
rcr
cmp
neg
cmp
neg
or
xchg
jmp
cmc
hlt
xlat
aad
jmp
sti
sar
enter
ret
shl
icebp
rcl
cli
call
in
fucomip
xchg
xor
in
icebp
fucomp
int
icebp
loopne
idiv
fsubr
enter
test
mov
into
mov
jmp
int3
xor
aam
loope
sar
fld
fiaddl
test
jmp
mov
fmulp
hlt
jmp
cmc
lret
xor
jmp
icebp
call
adc
add
loopne
enter
jmp
enter
shl
out
stc
fdivr
std
xor
call
loopne
aad
stc
fcmovne
fmuls
repnz
in
lock
hlt
aaa
aad
jecxz
loope
sar
cmc
fimuls
into
mov
out
int3
repnz
leave
not
xor
out
in
sarb
hlt
repz
jmp
incl
cmp
cmp
std
cmp
sbb
mov
loopne
addl
mov
aam
xor
repnz
in
ss
ror
ret
div
fchs
fcmovnu
test
enter
jmp
xchg
mov
iret
xlat
fldln2
cmp
cmp
fildl
neg
addl
out
enter
lret
out
idiv
out
repz
in
lret
fdivrp
aad
div
iret
out
shl
call
lret
mov
lock
xor
lock
lds
int
lock
cld
ljmp
call
cli
xchg
mov
clc
shll
xor
lret
lock
lock
cli
enter
cli
vpsubsb
jmp
xlat
ret
sti
shr
shl
sar
or
cmc
test
sbb
int
jecxz
leave
leave
in
stc
aam
leave
ror
rcr
clc
sar
repz
xlat
repz
out
cmp
je
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
decb
fxch
cmp
out
shl
int
idivl
testb
ljmp
out
jecxz
xor
aad
lret
in
lret
lret
shl
out
inc
test
mov
loope
jmp
lock
rcl
into
iret
cmp
shl
fnstsw
cmp
test
xchg
sti
fists
xor
cmc
lret
cmp
sti
loop
and
in
loop
hlt
mov
lea
lds
loop
xor
cld
cmp
repnz
adc
call
enter
loopne
in
out
xor
fmul
int3
in
icebp
fucomp
ret
test
cld
test
jmp
std
addb
bnd
rol
aad
std
repz
ret
vmovq
test
cld
in
cmc
repz
into
xor
iret
rcl
icebp
neg
push
ret
fsubr
call
loop
fucomi
mov
loop
cmp
aad
into
shl
sub
aas
aad
repz
loop
fmul
cld
xchg
fsubrp
in
aad
leave
xor
stc
in
iret
loopne
icebp
out
cmp
sti
mov
in
test
mov
hlt
out
aam
xor
enter
aad
cld
fildl
cld
cld
in
cmc
jecxz
fucompp
in
rcll
enter
lock
clc
push
inc
cmp
out
loop
loope
ljmp
ror
hlt
ret
iret
idiv
icebp
int3
aam
loopne
rol
aad
out
fdivr
enter
test
xor
xor
ss
shl
into
lock
aad
mov
mov
in
orb
ret
aad
icebp
sar
cmp
fdivrl
icebp
repz
loop
fsubp
ret
fsub
test
mov
ljmp
sti
imul
cmp
out
ljmp
repz
mov
mov
xor
in
call
cmc
cmp
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
fwait
dec
inc
pushf
sub
jle
adc
jle
incb
fcmovu
in
in
lret
out
cli
rorl
out
cmp
loope
sbb
test
neg
lock
out
lea
cmp
cld
rcl
loop
and
cld
stc
enter
sti
xlat
stc
iret
in
icebp
int
shlb
hlt
ljmp
std
out
fdivr
not
loope
loope
aas
mov
ljmp
rcl
sti
out
ss
cli
ret
hlt
add
loope
jecxz
out
xchg
lock
out
out
aad
cmp
call
cmp
fidivrl
cmp
ret
mov
mov
in
jmp
icebp
call
xor
fdivr
int
cmp
rcr
fdivr
xchg
nop
test
std
into
jecxz
nop
in
repz
repz
cmp
repnz
fdivr
add
std
movl
loopne
xor
sti
aad
int
cld
icebp
cmp
jecxz
ljmp
hlt
xchg
nop
xor
xor
cmp
stc
into
stc
cmpb
hlt
cld
loopne
sti
mov
hlt
fmul
fsubp
fcmove
leave
lret
shrb
repz
aaa
fstpt
loop
xlat
hlt
neg
call
iret
xchg
in
repnz
int3
int
sti
cld
lret
int3
ljmp
loopne
cmp
jecxz
mov
iret
in
in
loopne
iret
shr
call
cmp
int3
rcr
ds
loope
out
cmp
loopne
fucomip
addl
out
lret
int
into
loopne
shl
test
inc
fcmovne
mov
leave
sub
cld
add
sbb
icebp
ror
jmp
in
sti
xchg
loope
shrl
rcr
divl
fcomi
call
cmc
into
mul
jmp
leave
loope
lret
in
in
rclb
jmp
ds
cmc
loopne
aad
sar
leave
aad
idiv
mov
test
aam
xchg
xor
or
rorl
add
sub
add
into
aam
enter
fsubl
dec
pop
sbb
jle
adc
jle
call
repnz
ljmp
icebp
icebp
vpmaxub
lock
rcl
lea
call
div
out
repz
flds
or
mov
lock
shl
rcl
cmp
stc
cld
repz
ffreep
mov
cmp
mov
iret
lock
rcl
das
stc
out
stc
div
xlat
icebp
xor
repz
fmul
fadds
into
xchg
sti
repz
out
call
jecxz
into
idiv
loopne
ret
mov
into
std
mov
xchg
jmp
jecxz
out
cld
loope
icebp
in
sti
loop
fsubrp
mov
xchg
leave
in
xlat
enter
cmp
sbb
std
add
test
ljmp
lock
test
ljmp
jmp
adc
hlt
repnz
fincstp
in
jmp
fadd
int3
lock
out
in
in
xlat
loope
aad
cmp
loope
fmul
ljmp
mov
iret
xchg
ret
xlat
fldpi
jmp
cmp
int3
cmpb
ret
ret
rol
jecxz
test
call
fdivp
mov
iret
mov
jmp
test
rcr
rcr
neg
xchg
adc
fcmove
cmp
sti
roll
out
fxch
lock
int3
std
fxch
int
fcmovnb
cmp
mov
std
sub
in
in
icebp
int3
xor
ss
cmp
fsubr
ds
aad
ret
les
ljmp
nop
fucomip
test
les
out
jmp
cmp
cmp
shr
les
adc
lret
out
into
loop
test
xor
fcmovnu
cli
div
aam
stc
loopne
not
xchg
addl
loop
lds
xlat
in
rcl
fdivrp
out
add
sar
loope
xchg
ret
out
std
jecxz
xchg
shl
xchg
icebp
into
lds
ss
int
xchg
cld
shr
hlt
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
insb
cmp
mov
mov
call
in
icebp
out
xchg
in
in
iret
out
jecxz
sti
cmp
fnsave
int
xlat
loop
ds
mov
addb
into
in
hlt
cmp
repz
cld
push
cmp
fucom
fmuls
lret
aad
stc
sar
lret
out
aad
cld
shl
into
out
orb
fcmovb
fildl
fdivr
in
cs
clc
cmp
lret
shl
cli
aas
mov
hlt
div
in
mov
in
lock
jmp
xor
std
clc
repnz
clc
lock
ret
faddp
rcr
mov
sti
call
shl
out
repz
leave
aaa
int
test
stc
out
sti
test
jecxz
test
xchg
xchg
ret
ljmp
sti
in
out
in
shl
faddp
shr
jmp
and
out
enter
cmp
div
cld
fldl
ret
and
in
xchg
in
out
xchg
cmc
xor
cmp
out
into
in
aaa
xor
and
idivl
rorb
out
hlt
fst
ss
in
hlt
in
iret
xchg
mov
loope
out
roll
jmp
call
cmp
int
std
mul
aam
leave
mov
fsubr
in
int3
xchg
rol
out
fmul
leave
cmc
int
aam
lret
shl
icebp
frndint
shl
out
lret
jmp
into
xchg
out
jmp
ss
int3
cmp
out
loopne
aam
loope
cmp
stc
repnz
aam
flds
icebp
loope
sub
leave
int
testb
out
aam
vpsubsb
xlat
clc
xchg
mov
call
enter
fdiv
cmp
out
mul
repnz
std
fdiv
aam
shl
int3
loopne
jmp
xor
hlt
into
aam
ds
ret
iret
out
lock
sub
addl
rcll
jmp
cmc
ror
into
cmc
cmp
cmp
roll
in
loopne
sbb
loope
ret
cs
jmp
adc
stc
fsub
ror
fcmovnbe
fsubr
lret
fmuls
xchg
enter
out
sar
cmp
ljmp
xchg
aam
sar
leave
cmp
inc
out
loopne
fucom
call
nop
fucom
ror
cmp
jmp
shl
loope
cmp
fcmovbe
test
test
xchg
leave
out
aad
lret
sti
out
out
int
test
out
movl
add
jmp
rol
rcr
fld
pop
into
shll
adc
jle
decl
addb
xchg
shlb
out
xlat
into
cmpb
rcr
fcmovnbe
xchg
clc
lret
sbb
hlt
loop
iret
lock
ret
cmp
aad
sbb
loop
push
and
lret
mov
test
xchg
lret
enter
lret
aam
into
xlat
out
cld
shl
enter
mov
int
lret
in
call
leave
out
into
mov
in
adc
ffreep
shl
shl
loopne
out
enter
out
test
cs
neg
sti
stc
repnz
std
int
out
cld
test
mov
call
out
out
fucomp
loope
iret
cmp
sti
out
rcr
loope
add
add
clc
faddp
stc
addl
mov
aaa
int3
ljmp
cmpl
loopne
stc
jmp
mov
lret
int
and
out
xor
fcomp
int
loop
loop
loopne
fyl2x
jecxz
fcomip
in
leave
shr
rcl
ret
in
xor
aad
sti
cmc
roll
cmp
clc
int3
out
loop
ror
ror
lock
in
aam
aam
into
cli
loopne
cmp
shl
leave
test
mov
xchg
and
in
loop
xor
cmp
not
in
loopne
xor
hlt
incl
fdiv
loope
iret
jmp
jmp
sti
rcl
sbb
out
cmpl
sar
enter
loop
faddl
in
int
ss
fdivrl
cmp
rcl
les
addl
shr
rol
xor
fidivrl
fcmovnu
rcr
cmc
mul
sar
in
into
lock
lret
rol
int3
xor
cld
out
cmc
cld
sarb
rcl
fstp
leave
ret
imul
test
xor
icebp
fcomp
lds
fcmovnbe
or
xchg
mov
orb
int3
xchg
not
xor
lock
enter
cmp
xlat
hlt
loope
fmul
ret
loope
nop
ljmp
not
cmp
std
int3
ror
cmp
xlat
fxam
cmp
sti
fiaddl
fists
rol
sub
stc
fmul
std
cmp
fcmovnbe
loopne
xchg
loopne
fsincos
cmp
xchg
mov
out
ror
fdivrs
icebp
fsub
sar
jmp
sar
mov
loopne
xchg
and
lret
in
out
cli
cld
icebp
ret
sarb
in
stc
in
sar
ficoms
aaa
int3
xor
repz
repnz
inc
cld
daa
test
inc
add
add
add
rolb
add
add
add
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
notl
arpl
jle
mov
in
test
fstl
xchg
xlat
shl
sar
not
fdiv
shl
aam
loopne
clc
fiaddl
jmp
int3
xchg
loope
stc
cli
ret
std
sti
fdiv
aas
cmp
aam
roll
in
incb
xor
into
fsubrp
aam
icebp
fnclex
jecxz
fdivrp
inc
fimull
stc
xchg
out
fcom
ljmp
jmp
ds
ret
enter
out
orb
divb
std
repnz
fcmovnb
loopne
jmp
neg
and
leave
int
iret
cld
icebp
out
fst
cmp
aas
rcl
std
fucom
clc
fld
lret
xlat
mov
ror
fucomip
hlt
shl
xor
shl
xor
rcr
fcomp
out
aad
shl
in
cmc
xchg
ljmp
mov
int3
aam
out
dec
call
into
loope
repnz
test
jecxz
loope
lret
jmp
fucomp
add
clc
lock
call
out
stc
test
xor
movl
xchg
in
adc
loopne
das
xor
icebp
ljmp
lock
test
rcr
in
orl
mov
xor
out
sarl
in
out
jmp
cmc
fst
cmp
xchg
jmp
enter
cmc
lock
iret
ror
out
shl
cld
cmp
ljmp
test
xchg
test
out
out
lock
lret
fst
cmp
loop
testb
int3
mov
loope
in
lds
in
jmp
call
in
rol
xchg
fadd
fldz
mov
lock
in
in
xor
in
in
cli
repz
fildl
fisttps
mov
xchg
int
cmc
cld
cmp
xorl
faddp
out
fsub
and
fsub
test
call
repz
in
fmulp
out
lock
xor
lea
cld
call
clc
jmp
cld
idivb
icebp
ljmp
aas
std
sti
xlat
testl
icebp
in
out
shl
cmp
repz
testb
fdivr
out
rorb
out
ljmp
aaa
ljmp
cmp
mov
cld
sbb
loop
into
mul
ror
lret
xor
out
rol
cmp
div
repnz
mov
shr
fimuls
cld
xchg
test
loope
cli
aam
into
stc
jmp
fcomip
cmp
in
inc
cld
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
loope
loop
and
loop
lret
and
fsubp
mov
xor
cmp
stc
icebp
ret
mov
cli
fsubp
iret
loopne
lret
cmc
jmp
rcl
lret
cmp
out
hlt
sti
xchg
std
leave
or
orb
ss
in
out
fsubrp
shl
out
fld
xchg
faddl
cli
icebp
loope
xchg
fmulp
cmc
xlat
out
ds
cmc
cmp
neg
std
loopne
hlt
fsub
ljmp
mov
jecxz
out
out
cmp
ds
cmp
ret
ret
fsubr
addb
xor
aad
cmp
fnstcw
shl
in
fcmovnbe
addb
enter
mov
ret
lock
out
xlat
aad
jmp
add
into
xlat
fcmovbe
loopne
in
jmp
loope
jecxz
shl
mov
cs
fldln2
hlt
aam
test
sarb
neg
out
call
lock
ss
out
divb
hlt
jmp
repnz
imul
loope
ret
loopne
fcmovne
xchg
adcl
xlat
test
icebp
std
mov
fcmovnb
cli
clc
iret
enter
aad
hlt
lock
idivl
fnstsw
and
loope
jmp
xlat
addl
cmc
int3
aaa
out
sub
enter
in
sar
std
ret
rcr
mov
xchg
xchg
leave
clc
xor
ss
lret
leave
lret
lret
xor
shl
shl
faddp
lea
out
mov
divb
enter
clc
idivl
test
shl
cld
fld
jecxz
mul
jmp
out
idivl
leave
in
iret
cld
in
lret
loope
out
lock
fmul
cli
aad
incl
xchg
bnd
xlat
fidivl
iret
out
clc
xlat
ret
out
xchg
xchg
clc
xchg
fiadds
xor
cli
sti
shl
out
shr
sti
fsubp
rcl
hlt
stc
aad
jmp
mov
mov
loope
in
into
fsub
stc
fnstenv
jmp
leave
rcl
aad
faddp
in
cld
std
leave
in
mov
xchg
loope
std
in
int
xor
les
push
clc
aaa
rol
test
hlt
ret
adc
lret
ljmp
in
shr
sub
xor
hlt
cld
ljmp
out
mov
lret
fadds
in
cs
call
aaa
rcl
fcmove
cmp
loop
call
rcr
test
cld
rorb
cmp
cmc
aam
cmp
fnstcw
mov
jmp
rcl
aad
aad
shll
hlt
mov
mov
cmp
stc
mov
sub
call
icebp
ljmp
cmp
fnstcw
in
hlt
jecxz
jecxz
out
fimuls
enter
lret
aad
adc
cmp
out
dec
test
cmc
loope
cmc
ljmp
mov
cmc
in
lds
jmp
into
lock
call
xlat
in
into
out
jecxz
jmp
testb
call
clc
repz
xlat
inc
cmc
loopne
fnclex
xchg
repnz
lret
loopne
int3
lds
ror
lret
cmp
shl
aam
sar
jmp
loop
repz
mov
ret
cmp
clc
cmp
out
int3
sti
cmp
hlt
xchg
loopne
aam
jecxz
int3
mov
cld
loop
mov
repnz
rcr
lret
leave
roll
loop
loop
lret
lret
xchg
iret
lret
iret
xchg
out
xor
cmp
aad
fidivrl
shl
sbb
stc
loope
std
loope
faddl
jmp
ror
cmp
cmp
int
ret
clc
repnz
aam
neg
int3
std
xchg
incb
shr
into
std
fcmovne
rol
clc
clc
fcmovb
sti
mov
movl
incb
stc
leave
fdivrp
loopne
rcr
incb
loopne
in
neg
ret
fcomip
int3
in
clc
enter
std
das
hlt
shl
ss
fsubp
ffree
adc
in
fsub
faddl
ljmp
sarb
fstp
out
ret
clc
out
mov
stc
iret
lret
fucomip
mov
in
fcmovbe
cld
into
out
jmp
fstpt
push
aad
cmc
xlat
leave
add
ljmp
enter
jmp
iret
hlt
lret
clc
cmp
out
cmp
xchg
iret
cld
loopne
in
lea
xor
out
out
xlat
fcom
into
rcl
fld
out
fildl
test
int
jecxz
out
out
rcr
fmul
cmp
test
addb
in
mov
repnz
into
aam
aad
enter
shr
in
mov
xrelease
int
nop
lret
in
shl
hlt
hlt
in
iret
not
clc
cli
divl
shl
aas
rol
test
test
lret
into
and
rol
leave
aad
loopne
xor
neg
fdivr
aam
in
not
roll
hlt
jecxz
ret
int
ss
shlb
xlat
adc
roll
fsub
f2xm1
test
das
call
xor
and
add
add
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
or
aas
cwtl
or
jle
aad
call
cmp
enter
leave
in
test
jecxz
into
repnz
xlat
xlat
std
aas
hlt
int
loope
xchg
leave
shr
mov
incl
mov
xor
lds
xor
int
xlat
sar
sub
cld
in
fucomp
loopne
std
repnz
jmp
out
int
cld
cmp
loop
out
ret
test
add
nop
xchg
not
iret
les
shr
cmp
idiv
ffreep
lock
fmuls
mul
loope
sbb
loopne
loope
rcr
out
aaa
clc
jmp
fdivrs
jecxz
aad
ret
sti
sti
std
xchg
test
in
loop
loopne
in
stc
shl
leave
cld
in
cld
rcl
sti
shl
rcr
cld
xlat
xchg
in
fdivr
out
lea
xor
aaa
jmp
sti
cmpb
rcr
jmp
mov
out
mov
xchg
rcll
ljmp
jmp
fdecstp
loopne
sti
cld
and
jecxz
out
in
lret
icebp
jmp
sar
fmul
neg
cmp
clc
rcl
bnd
int3
test
flds
call
repnz
cmc
std
iret
fstp
out
repz
out
lret
cli
vcvtdq2pd
aas
iret
out
cmp
idiv
xor
int3
lret
lock
cmp
adc
out
int3
orb
aad
sti
cmp
into
iret
aad
icebp
in
fsub
xchg
aad
mov
shr
cmc
ljmp
ss
ds
fidivrs
fsub
ffree
mov
clc
in
ljmp
into
cmp
int3
cmp
fcmovne
cmp
leave
mov
cmp
fucom
inc
loopne
ret
cmp
sti
int
sub
out
rcl
cld
adc
out
jmp
faddp
xor
cmc
out
in
jmp
xor
ljmp
ljmp
jmp
enter
xchg
xor
aad
cmp
aam
add
cli
lock
rcr
mov
fdivr
out
in
xchg
jmp
repnz
fsubr
lock
int
not
std
loop,pt
cmp
nop
out
mov
ss
enter
ljmp
in
test
movb
xchg
adcb
shl
shlb
cmp
loop
test
jmp
stc
loope
xchg
call
sti
jmp
repnz
leave
int3
jmp
aas
cmp
xchg
out
in
adc
cld
ror
roll
ljmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
inc
mov
mov
sarl
loopne
cmp
lock
cmp
xchg
xchg
enter
enter
aaa
in
lret
aad
sar
repz
xchg
std
fcmovne
jmp
lret
out
repnz
sub
repz
mul
ret
out
out
iret
out
out
jmp
loopne
cs
cmp
out
sar
cmc
jecxz
repnz
hlt
loop
aad
test
lret
cli
out
sbb
mov
ror
xor
call
ror
ss
out
cmp
call
fadds
fsubrp
cs
icebp
aaa
cli
jecxz
rol
lds
int3
mov
rcll
xor
cmp
repnz
repz
cmp
ret
jecxz
jecxz
jmp
fsubr
in
ljmp
out
into
sub
ffree
call
ljmp
xchg
loope
shll
iret
lock
fidivrl
test
aam
ret
jmp
cmp
shl
shl
in
sar
cmp
repnz
fcmovnbe
faddl
lret
in
stc
out
out
into
lock
repnz
into
stc
fsubr
clc
loopne
jecxz
int3
aaa
sarb
in
loop
fmulp
cmp
xchg
sti
in
int
cmp
cmp
addb
ljmp
repnz
mov
loope
sar
icebp
shl
cmc
aas
cli
cmp
aas
test
in
in
xchg
xchg
test
jmp
loopne
lock
shl
iret
aaa
iret
std
sar
clc
hlt
cld
orl
jmp
in
shl
ljmp
int3
in
ffreep
cmc
xchg
hlt
clc
xlat
sti
ret
jecxz
fiadds
shr
cld
cmp
cmc
in
loope
icebp
fldl
loopne
out
mov
or
idiv
into
cmp
out
xor
test
rcl
lock
jmp
loope
fisttps
into
sub
fcom
shll
cmp
icebp
std
ds
test
adcb
xlat
ljmp
jecxz
cmpb
xlat
fxch
loopne
xchg
in
mov
repnz
stc
cmc
cmpb
cmp
stc
fucomp
ror
mov
clc
clc
lret
rclb
cmp
aam
xlat
call
aad
fistpll
out
fcomp
cli
clc
iret
out
xchg
in
xchg
shl
shl
xor
lret
cmp
lret
dec
out
cmp
ljmp
mov
call
cmc
int3
stc
out
inc
cld
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
into
loopne
adc
jle
fdivrl
stc
ljmp
mov
mov
loop
in
xor
fdiv
call
loope
ret
roll
rorl
ret
call
xor
xlat
int
xor
cld
aam
loop
lock
out
mov
dec
fildl
test
in
fdivr
repnz
ds
out
test
mov
test
in
lret
xchg
hlt
cmp
cmp
ror
int3
fdiv
loope
into
ror
fcmovbe
mov
fcomp
into
sbb
out
fdivp
call
stc
iret
xlat
hlt
xor
fstpt
in
cmp
aam
lret
lret
mov
in
nop
in
div
xor
cmp
fcmovb
cmp
leave
jecxz
mov
and
shr
shl
int3
ss
ror
cli
sti
cmp
add
fsqrt
loop
aam
ret
mov
mov
cld
jmp
out
leave
fincstp
lret
fdivrl
ljmp
jecxz
iret
cmp
addb
cmp
iret
shr
mov
out
sti
repz
aad
addb
hlt
lock
loope
xlat
fucompp
push
in
xchg
icebp
into
ljmp
aad
clc
shl
test
adc
xchg
mov
repz
fbstp
fnstcw
dec
shl
sub
in
aad
loop
loope
xchg
loop
loop
into
in
lret
sar
cmp
loop
std
fildl
out
fsub
hlt
iret
aaa
int
rol
cld
sarl
aas
fmul
fscale
fucom
loopne
test
xlat
aam
fmulp
enter
hlt
xchg
or
stc
lock
aad
aam
shl
ret
int
out
aas
mov
aad
jmp
call
int
shll
ss
in
lock
cmpb
xchg
testb
out
xchg
rclb
ss
lret
jmp
repnz
cli
repnz
out
faddl
cmp
mov
jecxz
ret
in
xor
in
in
aas
out
out
sarb
fnop
in
sar
stc
lret
test
ljmp
hlt
ror
jmp
std
fcompp
call
fxch
les
in
fxch
mov
fiadds
in
stc
fxch
cmp
fst
shl
icebp
sub
in
call
aam
leave
into
icebp
lret
in
aas
int3
cld
cld
fnstcw
repnz
fiadds
xor
jecxz
fdivl
cld
cmp
rcr
fsubp
out
aas
mov
xchg
int
shr
orb
xor
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
ss
aam
ret
jle
add
call
call
fcom
out
mov
ljmp
xlat
in
xlat
aam
icebp
shl
cmp
ljmp
testb
iret
icebp
filds
xor
fstpt
cmp
lock
clc
xor
sti
enter
jmp
shr
out
repz
shl
rcl
xlat
aaa
loope
std
hlt
sar
out
mov
mov
fdivr
and
int
fmulp
shr
xor
std
out
call
cmp
and
leave
int
jmp
xchg
inc
out
ret
jmp
cmpl
ret
loopne
jecxz
out
in
jmp
out
in
jmp
in
rcr
ds
int
aam
repz
loope
xchg
shl
mul
iret
shr
in
in
fcmovnbe
loope
test
fildl
cli
out
loopne
sti
xchg
int
int3
xor
cmp
aam
ror
cmp
cli
cli
cld
fadd
call
cmp
xor
sti
rcl
int
cmp
in
aam
loopne
fneni(8087
lret
fdivp
lret
in
hlt
loope
rcl
hlt
aam
in
ss
idivb
aad
aas
lock
jmp
mov
fdivr
in
in
shl
dec
ljmp
fmulp
int
cli
fdivrl
xchg
loope
loopne
mov
out
mov
xchg
mul
out
enter
in
xlat
int
cmp
cmp
out
in
fsubp
out
sti
int3
or
repnz
xchg
xchg
out
aaa
icebp
ljmp
in
sarl
incb
jmp
orl
jecxz
cmp
cmp
lret
aas
adc
rolb
ffree
mov
shl
int3
aad
cmc
rcl
cmp
out
cmp
xlat
fnstcw
xor
jecxz
in
mov
in
in
in
mov
imulb
cld
loopne
and
aad
xchg
cmc
lret
cli
mov
test
addl
leave
sar
hlt
cld
icebp
fistpll
in
rolb
add
in
into
fsub
repz
xchg
in
in
xor
shl
leave
in
jmp
cmp
vpminsw
call
sbb
orl
int
icebp
repnz
in
rcl
ljmp
xchg
in
jecxz
jmp
iret
icebp
divb
shl
repz
cmp
cmp
shr
jecxz
lock
loopne
sbb
fmulp
out
roll
xor
xlat
cmp
fucomip
cmp
addl
ljmp
loop
in
mov
cmp
jmp
rcl
aad
rcrl
and
mov
jmp
fnop
fsubr
ror
xor
testl
mov
repnz
int3
aaa
icebp
shl
iret
shll
aad
stc
cmp
out
loop
mov
lret
xchg
loopne
hlt
aaa
ror
out
repz
iret
in
sbb
int
int
mov
das
xor
lret
sti
int
fdivr
aam
rcl
out
clc
jmp
std
loopne
test
lea
xor
cmc
xor
fdivr
cmp
aad
aas
mov
jecxz
test
std
out
repnz
cld
into
out
ljmp
jmp
ret
cld
in
enter
out
stc
into
int3
ljmp
in
ror
stc
iret
loopne
jmp
in
loop
fdivp
int
cli
fadds
xchg
out
sub
cmp
aad
aaa
cmp
and
out
loop
test
xchg
int3
int
sub
ret
ss
fcomp
in
iret
sarl
loope
test
rcr
out
jmp
test
lock
in
jmp
rcr
int
into
sti
out
in
test
out
popl
in
out
enter
fcomi
int
cmpl
mov
rcl
aad
mov
adcb
lock
shl
in
lock
neg
aas
lock
std
out
rcr
repnz
icebp
fcom
aad
rcr
repz
loop
int
hlt
shl
jmp
fisttpl
loop
mov
cmp
std
aaa
enter
aam
in
test
rol
testl
xchg
test
aam
xor
loopne
xor
fcmove
fucom
push
loopne
neg
xchg
lret
fcoml
imul
cld
ror
aam
fcmovnbe
cli
in
lds
out
stc
in
sbb
rcl
hlt
out
lret
fstp
out
in
rcl
and
fdivrp
fdiv
rol
aas
loop
ret
repnz
in
out
in
ljmp
jecxz
aas
cmp
hlt
addl
out
sub
cmp
aad
fucomi
aas
cmp
xlat
out
stc
out
stc
loopne
ljmp
icebp
fmul
test
ret
ljmp
cld
out
lock
loop
addb
test
adc
fcomip
mov
aam
xor
cld
cmc
aam
xlat
rol
enter
leave
call
shl
repz
stc
sti
lret
loop
aad
repnz
fiadds
ljmp
orb
hlt
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
xor
cmpsl
jle
sbb
jle
ret
jmp
repz
cmp
xchg
jecxz
sub
jmp
out
out
repz
ss
cli
repnz
lret
rol
sti
addl
in
nop
mov
cmpl
cmc
in
lock
fcmove
fdivr
cmpl
sbb
in
mov
cmc
xchg
xor
repz
cmp
repnz
in
lret
aad
rcr
fld
addl
lock
xor
out
ljmp
lock
aam
clc
aad
into
fsubrp
nop
jmp
mov
lret
cmp
ljmp
cmc
rol
aad
mov
enter
int3
mov
fbstp
lret
ljmp
into
lret
in
rcr
cli
mul
aad
lret
loopne
test
cld
lea
cmp
int3
repz
hlt
in
repz
cmp
repz
cld
fisttps
xchg
movb
cmp
ror
sbb
fcom
ffreep
clc
int
out
cli
enter
shr
ljmp
jmp
fcmovb
fcmovbe
loope
aad
sub
mov
and
call
div
jmp
lock
cli
fnstcw
and
lret
fprem1
shl
test
xchg
nop
ret
cmc
clc
cld
rcr
stc
out
repnz
fsubr
xor
loop
out
int3
filds
loope
xor
fdivp
ds
loopne
loop
cld
xchg
and
sbb
in
sti
xchg
out
xor
leave
in
xor
lock
repz
fucom
fsub
rorl
in
repz
out
out
enter
out
xor
cld
rol
test
loopne
call
out
xchg
fucom
idiv
rcl
les
fdivs
fdivr
int
cmpb
shl
mov
fiadds
ss
stc
xor
xor
sarb
incb
fmulp
out
jmp
test
int
jecxz
mov
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
cmc
pop
test
jle
test
jmp
fincstp
rcr
cmp
cmc
sar
fcmovu
fnstsw
cmc
stc
aam
sbb
mov
repnz
in
sub
ss
cmp
loopne
test
xor
ret
cld
icebp
mov
xor
cmp
cmp
stc
out
hlt
in
lock
jmp
mov
cld
xchg
ror
jmp
repz
int3
int3
lret
cmp
ds
ds
repz
mov
addb
in
jecxz
aaa
hlt
aad
fldl
fdivr
fldpi
std
cld
loopne
rolb
stc
ljmp
loopne
out
int3
in
xlat
loopne
mov
in
ljmp
stc
aaa
lret
rcl
cli
fmul
cmp
fcmovnb
lock
lock
loope
ret
ljmp
fucomip
xor
cld
xor
xlat
cmp
cmp
jecxz
shl
aad
fadds
loop
hlt
in
into
xchg
int
xor
ret
repnz
loopne
cmp
mov
xchg
int3
incl
ss
fprem1
sarb
clc
fdivp
into
iret
stc
jecxz
test
xlat
fcomp
jecxz
cld
icebp
repz
xor
int3
in
int3
cmp
jecxz
xchg
sar
testb
nop
xchg
ljmp
repnz
fcomp
loope
faddp
clc
test
jecxz
cmc
jmp
shl
ljmp
lret
cmp
cmp
xorb
neg
add
out
out
mov
mov
shl
fadd
xor
cmp
fcmovnu
cli
roll
fcmovnb
fsubr
int3
cli
in
nop
mov
fcomp
xor
lock
cld
int3
xor
sarl
cmp
addl
lea
xor
out
cli
icebp
neg
loopne
lock
rcr
xchg
fucom
leave
cld
test
xchg
loop
lock
aaa
xor
cmp
in
filds
stc
aas
ffree
call
int3
or
add
add
push
add
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
test
call
into
idivb
loop
cmp
cmc
enter
aad
in
fucomi
std
lock
mov
cmc
cmc
out
xlat
ror
lret
fucomip
cmp
rcl
std
jecxz
aam
loope
repz
xchg
out
in
lret
jmp
xlat
cli
fdivrp
fcmovu
out
int3
jecxz
cmc
in
loope
fdivr
jecxz
or
xchg
ret
cmc
das
icebp
fcomi
fxch
aad
fcmovnu
lret
rcl
clc
repz
jmp
cmp
xchg
sub
div
int3
aaa
enter
sar
cmp
sar
leave
in
cld
in
dec
out
lds
out
ss
in
xlat
lock
repnz
add
std
aad
imul
adcl
ljmp
loope
cmpb
loope
loope
int3
in
sti
enter
xchg
loope
out
fcmovne
out
cmp
sti
sar
fadd
xor
shr
lret
mov
out
xchg
ljmp
out
lret
rcl
leave
sti
in
fdivp
rcr
rol
xchg
loope
in
leave
decb
fyl2xp1
int3
sub
int
fcmovu
add
call
cld
clc
repnz
jmp
aas
xor
aad
cmc
fcmovne
into
leave
fiaddl
shl
clc
fst
test
mov
lea
mov
fdivrl
iret
aas
fucom
cmpl
in
nop
cmp
out
icebp
out
rcr
cmp
iret
in
int
clc
leave
jecxz
loop
out
lret
sub
out
shl
sub
clc
xor
cmp
enter
out
in
rorb
xor
sarl
iret
out
cmpb
aad
stc
call
mov
xchg
shl
hlt
lock
in
leave
idiv
rcr
cli
fiadds
enter
cli
fmull
loopne
out
int3
out
hlt
out
xor
fdivrp
lret
adc
aas
aad
aas
fmuls
cli
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
out
add
jle
sbb
jle
repnz
xor
imul
leave
out
jmp
sti
into
stc
xlat
fcmovbe
mov
xchg
mov
out
out
enter
fcmovne
in
cmp
ret
rcr
jmp
cmc
fsubp
fucomip
iret
loop
cs
icebp
fsubp
fcmove
sar
rcr
ds
in
loope
enter
sub
jmp
xor
ret
cmp
das
fsubr
fidivrl
cmp
test
ret
aam
mov
mov
bnd
loope
les
into
xor
xlat
lock
shl
ret
loop
enter
icebp
leave
out
in
jecxz
out
leave
aam
cld
aam
cmp
cmp
shl
icebp
repz
test
xchg
or
test
jecxz
out
cli
aam
cli
aad
fcomp
test
rcr
cmp
cli
std
xchg
out
xchg
in
adc
repz
iret
aam
lret
out
neg
xor
cmp
fadd
rolb
ljmp
mov
aaa
out
mov
jmp
incb
lret
hlt
mul
xchg
mov
sti
lea
out
mul
repnz
ror
icebp
cmp
loope
lret
int
mov
call
lret
cmp
out
cmc
hlt
cmp
cmc
aas
loopne
mov
jmp
xchg
ret
ret
xlat
jmp
std
cmp
jmp
fdivr
xchg
int3
in
mov
cmc
rorb
xor
ror
cli
in
xlat
lret
cmp
faddp
aad
icebp
fchs
sti
ret
fimuls
call
xor
shlb
cmc
cmpb
ret
ffreep
aad
hlt
vpsubsb
roll
in
cmp
sti
sti
std
sar
cmp
xchg
rcl
out
sti
lock
loope
out
loop
cmp
aam
xor
ss
into
cld
cmp
sti
xchg
jmp
icebp
out
cld
hlt
loope
in
lock
ljmp
fsin
out
iret
clc
repnz
jmp
out
xor
sarl
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
bound
mov
jle
add
out
in
in
fucomip
enter
lret
rcr
fdiv
rolb
ret
ret
fadd
ljmp
orb
iret
ror
xor
xor
enter
lea
popl
ret
icebp
xor
std
lock
cmp
stc
cmc
cmp
xlat
testb
fadds
into
into
rcr
in
xor
neg
enter
jecxz
fiaddl
mov
iret
lock
bnd
shl
loope
out
iret
divl
out
fistpll
frndint
sub
mov
sbb
in
loope
in
in
xchg
out
xor
stc
lret
fsubr
xor
frndint
shl
ljmp
out
call
lret
sti
out
icebp
loopne
sar
rcl
mov
popl
xchg
fcom
xlat
in
aad
in
lock
loope
in
test
out
or
clc
sbb
xchg
out
out
mov
xor
cmp
in
cmp
loope
fnsetpm(287
into
out
rcr
roll
in
call
int
call
int3
xlat
cmp
stc
fidivrs
enter
testb
into
add
repz
fdivrs
aas
xor
rcl
loope
lret
iret
leave
decb
in
repz
cmp
ljmp
out
cmp
cld
out
loope
std
leave
lock
icebp
icebp
sub
repnz
stc
icebp
std
lret
xlat
out
sbb
fimull
xchg
out
aam
lock
out
loop
int
shr
mul
lret
repz
xchg
mov
loopne
int
jmp
repz
out
into
div
fcomp
aaa
into
loop
std
cmp
rcl
and
ret
out
fsubp
jecxz
test
xor
xor
test
icebp
movl
iret
xor
clc
cmp
cmp
ljmp
call
vaddsubps
add
add
add
ror
int
fst
fld
cmp
and
arpl
jle
add
dec
in
lock
lret
repz
cmp
loopne
rcl
cmc
jecxz
test
ffree
addb
das
repnz
int
enter
lock
rol
clc
and
cli
and
lret
in
ror
xor
cli
div
addb
rcr
std
repz
fsubp
leave
xchg
xchg
fdivrp
xchg
call
fxch
cmp
fucomip
repnz
call
out
xor
shlb
xor
ljmp
ret
loop
cmc
int
loop
out
in
rcll
sti
xor
std
sarl
xchg
fiaddl
in
and
out
into
test
cmp
ret
cmp
fcmove
sti
mov
jmp
test
hlt
idiv
ss
xor
loope
loope
cld
sarl
ret
flds
xchg
aam
rcr
aam
cmp
imul
adc
aam
xlat
faddl
out
xchg
ljmp
in
shl
cmp
cmp
fstpt
iret
cmp
ret
mov
test
call
mov
fsub
test
int
enter
loope
sti
neg
cmp
out
sub
into
xor
xor
lret
lret
cmp
loopne
fadds
filds
shl
ret
xor
sarl
hlt
repnz
div
incb
ret
ret
into
int3
in
rcr
out
mov
ljmp
repnz
out
add
cmp
out
flds
loope
mov
xor
fldz
out
fsincos
cli
sbb
cld
in
faddl
lea
shr
adc
xor
cmp
fcmove
xor
mov
cmp
jmp
int3
aam
xor
cmp
out
call
aad
ret
decb
dec
or
add
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
ljmp
out
rcr
sub
cmp
xlat
cmp
fst
rcl
ret
divl
incb
sti
loopne
test
nop
sti
in
into
cmc
in
shl
in
in
shr
int3
xor
xor
cmp
les
xlat
mov
xchg
call
out
aam
divl
cmp
cmp
sti
lret
aam
in
cld
ret
ret
jmp
test
into
in
out
rorb
int3
cmp
shr
out
aas
rcr
clc
cmp
idiv
rol
in
fyl2x
and
loope
divl
sar
sub
in
fcmove
flds
neg
mov
out
out
nop
xchg
ror
fsubr
fcomp
cmp
clc
ret
fcom
xlat
mov
faddl
repz
fcomp
leave
fucomp
adc
loopne
filds
xchg
out
call
cmc
xlat
icebp
aam
jmp
cmp
fadd
lret
xchg
stc
ror
nop
in
xchg
xchg
in
ret
lret
fcmove
fsubrp
std
fucom
int
loope
sub
in
int
mov
jecxz
out
xor
xor
icebp
frstpm(287
fcmovnbe
fucomip
std
xlat
fmul
cmp
stc
testl
in
dec
into
repz
fcmovnu
into
fdivrp
rcr
xor
rcl
fsubrp
xlat
std
enter
fdivp
lret
faddl
jecxz
aaa
xor
fdivs
roll
xlat
add
in
ljmp
out
in
aam
out
call
ds
les
fcmovnu
mov
enter
mov
call
into
hlt
sub
ret
in
stc
cmp
cmc
jecxz
not
aas
mov
in
mov
int
aaa
fcmovnb
lds
cmp
repz
lds
xchg
lea
shll
sti
shl
sarl
cmp
ret
fisttpl
xchg
lock
out
mov
call
out
std
shr
repz
mov
jne
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
fs
jle
mov
jle
add
fmul
sti
stc
fisttpll
in
adcb
in
ffree
ror
jmp
loope
sar
jmp
enter
hlt
sub
das
das
lock
int3
cmp
ror
lret
jmp
cmp
repz
call
ljmp
sarb
into
sti
leave
xlat
jmp
repz
aam
clc
fucom
cmp
idiv
in
int3
lds
lret
jmp
cmp
stc
cmp
rol
ret
adc
addl
pause
fstl
aaa
aad
int
rcl
cmp
cmp
stc
mov
fmuls
lock
divb
into
shr
iret
out
sti
into
aam
sar
adc
ds
hlt
ret
out
repz
loope
icebp
xor
out
enter
xor
cmp
sti
hlt
mov
out
enter
rolb
hlt
lret
ret
repnz
ror
ror
shr
iret
cld
repz
fadd
test
out
int3
mov
cmp
cmp
cmp
cmpb
ret
clc
xor
ret
cmc
jecxz
xor
icebp
mov
imul
aad
int3
sti
out
sti
loope
loope
shl
fdivp
mov
fsubrp
jmp
jmp
lret
aaa
leave
shl
xlat
out
jmp
ret
cmp
jecxz
in
idiv
faddp
cld
enter
icebp
hlt
jecxz
rcl
xor
fsincos
fcomi
rcr
cmp
jecxz
in
loope
out
int
mov
mov
xchg
lock
enter
ds
clc
mov
aam
cli
int3
in
cli
in
icebp
out
int
lret
cmp
out
int3
stc
cmp
loop
icebp
in
fistpll
fxch
fndisi(8087
mov
cmp
aam
out
cmp
loope
mov
fildl
xchg
int3
xchg
iret
jecxz
in
cmp
cmp
int
cld
sar
lock
mul
cmc
in
mov
or
icebp
loopne
test
xor
in
cmp
shr
out
hlt
cmp
cld
cli
jecxz
shl
rolb
xchg
rcl
aaa
enter
lock
loope
loope
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
jle
push
push
mov
jle
leave
mov
loope
repnz
mov
into
ftst
ror
sti
ds
fadd
cmc
fdivp
jmp
out
sar
adc
ljmp
sar
hlt
ret
cmp
aad
test
xor
loop
adc
icebp
hlt
enter
cmp
in
shl
loop
cli
cmp
fcmovnu
clc
loopne
into
into
out
adcb
ljmp
fmul
or
loopne
out
int3
sub
ror
lret
ljmp
int
rcr
xlat
add
mul
int3
cli
out
std
call
mov
call
aam
hlt
fiadds
rcr
xchg
test
fcmovnbe
cld
xchg
nop
mov
sub
addl
add
stc
in
call
in
sub
loop
lret
out
lock
ds
std
into
fabs
cmp
mov
frstpm(287
mov
rolb
jmp
idiv
ds
adc
rcl
inc
testl
test
icebp
div
fucomi
fmulp
enter
sti
sti
loopne
or
std
test
hlt
jecxz
cmc
repnz
jmp
ds
rolb
test
roll
cld
jecxz
out
nop
loop
bnd
sar
iret
lock
ljmp
lock
mov
into
lea
ret
repz
addb
repnz
ret
in
fucomi
mov
xchg
loopne
mov
sub
in
xor
std
cmp
aad
not
in
in
xchg
out
les
call
int
hlt
in
xor
loopne
rcl
aas
cmp
inc
clc
fcmovu
xchg
loope
rcll
lret
in
rcr
iret
fadds
loope
loopne
mov
fmul
cli
mov
iret
into
loop
hlt
loopne
enter
cmp
int
out
ret
icebp
cli
aad
cmc
rcr
leave
mov
or
xor
cmp
cs
sti
jmp
ffree
loop
faddp
jmp
stc
stc
std
test
in
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
xchg
mov
cld
sar
ror
cld
fcmovu
enter
rcr
xchg
repnz
mov
rcr
jmp
mov
cmc
ret
xor
ret
lret
xlat
loopne
int3
ss
loope
aas
jecxz
mul
in
clc
sar
xchg
ljmp
repz
lret
ss
aam
icebp
aad
shl
aad
xchg
fmul
call
clc
jecxz
aaa
xor
jmp
out
neg
stc
filds
std
jmp
jmp
icebp
rcl
shll
in
iret
cmp
ret
clc
loope
in
orl
in
mov
in
loop,pn
ss
aad
fsubrp
clc
into
ds
rol
test
out
stc
in
ljmp
sti
not
cmp
hlt
ss
cmp
int3
sti
out
jecxz
push
clc
loopne
lret
out
repz
shr
xor
cli
xor
jmp
lock
and
aam
cmp
in
ljmp
les
cmp
rcr
cmc
les
test
rolb
lret
aam
aaa
loope
cli
fsub
rol
loopne
enter
mov
rorb
leave
out
out
int
cmp
repnz
cli
iret
stc
in
jmp
sar
shl
dec
in
out
shll
fsubr
leave
aad
cmc
iret
stc
cmp
in
cmc
fcmovnu
int
adcb
xchg
loop
fsub
ljmp
iret
sbb
ret
int
fcoml
out
nop
sub
in
hlt
not
aam
cmc
lret
fidivrl
rcr
cli
out
stc
in
int3
test
mov
xor
xor
lock
das
repz
cmp
into
fcmovnbe
out
enter
jmp
mov
clc
jmp
fadd
ljmp
enter
cmp
fcmovnb
shl
out
leave
out
jmp
repz
cmp
lret
and
loopne
shr
fldl
jmp
ret
xchg
lret
aam
cmp
enter
out
enter
idivl
shl
jmp
div
icebp
mov
cld
orb
add
push
add
add
add
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
in
cwtl
and
ret
jle
xchg
repnz
cmp
test
cmp
loope
fcmovb
out
aad
fsubr
aas
test
adcb
cmp
stc
cli
cmp
in
rcr
rcr
xchg
imul
std
in
cmc
out
cld
mov
mov
rcl
int
jmp
shll
cmp
ds
in
ret
fnstcw
loopne
leave
out
call
lock
ror
cmc
out
int3
cmp
aad
loope
fsub
fmuls
xchg
loope
aad
aad
hlt
xlat
cmp
enter
cli
in
cmp
clc
cmp
jmp
lret
test
rolb
in
lock
shr
adc
shl
fldl2t
test
orl
repnz
fxch
fdivr
cmp
icebp
xor
loopne
ret
shl
xchg
std
hlt
jecxz
jmp
leave
filds
aam
repz
fdivrl
cmp
loope
shl
xchg
mov
int3
lds
lret
lret
loopne
out
out
enter
stc
fldl
lret
mov
stc
mov
rol
xor
cmp
repz
xor
std
stc
iret
dec
fcmovnbe
loopne
fsub
ljmp
xchg
xchg
lret
xor
lret
fdivs
shl
loope
ret
test
out
ljmp
cmp
cmc
aam
aaa
cmp
cmp
ret
sar
mul
testl
out
xor
loop
les
cld
lret
ss
stc
fucomip
cmc
std
out
shl
std
int3
ljmp
loope
loopne
lock
aam
fucomi
xorb
cld
in
hlt
idiv
addb
loope
repnz
shr
call
leave
std
jecxz
iret
aad
shl
loope
ljmp
lea
ret
jmp
mul
cld
cld
rcr
and
ljmp
test
int3
in
loop
in
sti
cmp
leave
in
aad
aas
jmp
sar
loop
cli
cmp
mov
fsubr
int
jmp
nop
jecxz
rol
xor
leave
iret
cmp
cmc
rcl
out
ss
aas
fcmovu
in
mov
loop
out
loope
aam
in
loop
sarl
adc
push
flds
add
add
rolb
add
inc
add
movb
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
outsl
inc
mov
ret
jle
int3
xor
repnz
iret
fst
inc
xor
lds
fcmove
int
enter
lret
cld
cmp
ss
fst
in
neg
mov
fucomp
xchg
jecxz
incb
in
rcl
xlat
lock
rcl
cmc
lds
sar
mov
ret
sti
fucomp
loope
cmc
xor
in
jmp
ss
cmc
ds
fsubr
fsubrp
in
ret
in
sbb
fildl
icebp
in
xor
out
fdivr
int3
hlt
ffreep
rolb
icebp
out
or
orl
not
call
lret
in
aaa
fldl
test
lret
xchg
jmp
cs
repz
xlat
push
rcl
icebp
loop
shl
rcr
mov
jmp
mov
xchg
into
test
in
out
leave
xor
cmp
shr
ret
rcl
fdiv
xlat
shr
leave
sti
call
loope
test
cs
lret
cmp
in
shl
cmpl
fildl
lret
xchg
loope
int
int
out
fcom
xlat
not
rol
add
rcl
fld
in
test
jmp
xchg
xor
cmc
lret
out
ljmp
and
jecxz
xlat
out
mov
in
lret
xrelease
lret
cmp
fstpt
sbb
stc
hlt
out
out
out
out
xchg
aam
rcl
cmc
stc
not
xor
hlt
in
loop
cmc
in
fucomp
out
lret
jmp
mov
in
out
fstp
ds
loope
cmc
fst
lock
jmp
ror
test
lock
ss
test
cld
test
shl
fcmovu
fadds
into
enter
call
lock
out
xor
sbb
add
xlat
xchg
clc
fstp
sti
addb
lret
lret
jmp
cmp
adc
sarb
cld
ret
fsub
int
nop
lret
lret
xchg
in
rcl
xor
ds
aad
int3
lock
jmp
idiv
enter
addb
xlat
xor
je
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
cli
jle
out
fs
jle
ret
jle
aam
not
stc
and
not
fdiv
leave
call
incl
jmp
lock
in
rcr
incl
imul
test
fdivrp
jecxz
fldl
out
sti
std
enter
out
ret
in
cmp
out
loop
and
fdivr
stc
jmp
xor
aad
repnz
aaa
clc
icebp
fidivrl
aas
sti
test
ret
popl
dec
xor
cmp
out
icebp
rcl
fadd
test
sar
bnd
clc
jecxz
xchg
out
mov
orb
aaa
in
fnstsw
cmpl
test
in
ret
enter
in
iret
leave
out
xchg
loop
cmp
sti
cld
repnz
hlt
cli
ds
out
aad
xor
std
out
aas
std
xchg
out
jmp
aam
sub
in
cmp
out
fdivrs
cmp
fnstcw
test
aad
ret
xlat
loop
enter
fists
iret
call
loop
out
stc
cmp
cmp
fsubr
out
cmp
hlt
cmc
notb
fcmovnu
idivb
fidivrs
iret
test
fneni(8087
xchg
in
cld
lret
out
int
mov
call
xlat
leave
cmp
cmp
icebp
ret
stc
loopne
mov
cmc
xchg
mov
cli
in
iret
in
ljmp
clc
icebp
cmp
repnz
ret
lret
mov
out
rorb
iret
xor
fcmovnu
or
sar
jecxz
call
jmp
test
ljmp
out
ror
cld
cmp
iret
in
in
loop
out
cli
sti
xlat
std
in
fst
shl
xchg
call
out
in
aaa
cmc
repnz
jmp
sar
test
sti
sti
sti
fsub
shl
nop
mov
aaa
lds
xor
hlt
clc
std
fcompp
aaa
roll
jecxz
mov
iret
ficoml
stc
cmp
in
cmp
icebp
lock
out
rolb
int
in
xchg
lock
int
vpextrw
neg
cmp
testl
jmp
in
lock
into
std
hlt
cmc
xor
hlt
enter
mov
mov
mov
jmp
lret
ret
int
lret
in
aad
sub
jle
add
cmp
cli
shl
and
xchg
cmc
in
mov
cmp
ss
fcmovu
cmp
hlt
shl
loop
cmp
lds
jmp
lock
xchg
fcomp
lret
cli
aam
sarb
hlt
cmc
aaa
cmpl
hlt
in
mov
xchg
jecxz
shr
test
out
ffreep
clc
cmc
ret
not
sbb
cli
jmp
in
repnz
rol
out
jmp
fcmovu
rcr
std
faddp
fcmovnbe
ljmp
lret
out
cmp
int
enter
cmp
fildl
in
sti
testb
loope
out
out
call
dec
rcl
icebp
repz
ret
fldln2
std
mov
shl
leave
test
sti
out
iret
clc
loopne
repz
mov
flds
out
dec
loop
out
xlat
ret
in
lock
idiv
neg
fadds
ljmp
xchg
loopne
imulb
lock
call
int3
cli
cld
cld
repz
hlt
lret
xchg
test
mov
int3
rorb
hlt
cld
aad
fidivs
cmp
into
sub
call
lret
xchg
repnz
int3
xor
ret
fdiv
lret
shr
divb
shr
cmp
aaa
ret
hlt
ret
jecxz
fmulp
mov
loop
lock
out
into
call
addl
test
cmc
fucomp
in
lock
xchg
in
mov
rcl
icebp
in
cmp
sti
iret
lret
jmp
shr
in
loopne
lret
lret
xchg
hlt
cmc
xchg
out
div
icebp
out
sti
out
into
out
cmp
sti
loope
shl
test
lret
out
ljmp
std
fsub
cmp
cmp
hlt
out
loop
mov
mov
jmp
cmc
sar
aam
xlat
leave
cmc
rcl
icebp
test
in
adc
out
int3
out
jmp
lret
in
jecxz
ljmp
cli
jmp
rolb
neg
aam
in
loop
std
rcr
lock
xor
enter
roll
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
loop
test
in
mov
in
loope
in
in
fcom
leave
cmp
repnz
repnz
int3
cmp
jmp
fld
fcmovne
xchg
mov
repnz
ret
xor
in
loopne
aaa
in
out
aam
rcr
vpsubusb
out
ljmp
ret
fdiv
sti
repnz
jmp
int
idiv
rcr
sub
test
lea
shll
aad
repnz
fdivrl
std
cmp
cli
xchg
fcmovnb
aas
testb
xchg
ljmp
cmp
cmp
clc
ds
sti
repz
loopne
mov
mov
and
loop
test
xor
std
shl
cmp
repz
rcr
xlat
cld
xchg
test
out
loop
mov
iret
incl
test
cld
in
sti
rcl
ret
cmp
rol
cmc
jecxz
and
xchg
cmc
stc
das
int3
cli
sarl
cmpb
imul
sti
aad
hlt
roll
fmul
out
fldl
clc
out
xor
int3
cli
lret
test
mov
sti
int
out
sub
xor
int3
xor
fsubr
loope
ret
in
cmp
cmc
xchg
lret
dec
jmp
in
call
enter
idivl
xorl
neg
aam
test
jmp
addl
fadd
leave
lret
aas
in
aam
sti
cmc
filds
cli
enter
int
or
ffreep
out
lret
iret
ds
fmul
roll
leave
fmull
int3
in
mov
cmc
in
hlt
leave
cmp
rol
aas
rol
sti
cld
fadd
in
jmp
xlat
sbb
into
shr
jmp
aaa
jmp
icebp
fsin
call
out
into
roll
into
icebp
fcmovbe
aaa
iret
shl
cmp
fsubp
hlt
repnz
cmp
leave
fisttpl
aaa
jmp
xor
out
repnz
in
sub
test
fmuls
sbb
out
call
clc
cmp
in
loope
cmpl
inc
in
or
inc
clc
xor
add
jmp
rol
lret
fstp
aad
dec
jns
repnz
sub
mov
jle
ret
jle
test
mov
jecxz
jecxz
sti
fsubr
int3
rcr
loope
stc
fucom
out
ret
jmp
xlat
lret
in
repnz
add
xor
out
enter
lret
rcr
out
icebp
call
orl
aam
sar
icebp
cmc
cmp
cmp
icebp
cmp
std
fdivr
lret
iret
test
or
test
leave
jmp
cmc
cmp
xchg
cmc
std
out
in
rorb
loope
int
aad
fst
cld
ds
fadd
icebp
cmp
addb
addb
loop
xor
fscale
sti
cmp
fadd
test
test
cld
xchg
loope
mov
ror
iret
ret
repnz
fcomp
rcr
call
into
fxam
fisttpll
in
ret
xor
fdivr
in
ljmp
out
ds
std
call
fisttpl
not
in
xlat
cmp
lret
in
out
and
jmp
loope
xchg
fucomip
in
xlat
ror
icebp
sarl
aad
icebp
repnz
cmp
out
out
lret
int
or
test
in
aaa
cmc
hlt
sti
aaa
cld
lock
cmp
shl
fcmovnu
aad
std
fucomi
out
loope
in
in
lret
ror
into
xor
rol
aas
jmp
call
roll
xor
cmp
out
cmp
xlat
in
aaa
jecxz
out
out
lret
loop
in
int
int
fpatan
shl
ror
in
std
aad
fst
hlt
into
mul
iret
in
int
call
aas
rcr
loop
ret
loopne
and
fcmovne
xor
ljmp
fst
shr
jmp
fucomi
aam
les
out
jmp
in
xor
aad
xor
xor
rol
fadds
and
lret
fisttps
test
ljmp
test
std
loop
loop
addl
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
fsubrl
jb
dec
jle
ret
jle
xchg
mov
fcmovbe
idiv
lret
cmp
clc
add
fcmovnbe
cmp
std
addl
repz
cmp
cmp
int3
lock
sti
ret
cmc
loop
rol
jecxz
in
sbb
cld
jmp
mov
das
xor
xlat
cmp
cmp
ds
cld
in
out
call
aas
fcmovnu
mov
repnz
repnz
clc
cli
repz
fprem
imul
in
neg
stc
sarb
fmuls
cli
jmp
ror
fcomip
xlat
xor
lret
aam
sub
loope
fsub
push
add
cli
sti
cld
mov
rolb
sub
in
jmp
shl
std
shl
hlt
cld
adc
movl
in
stc
shll
jmp
rcr
aam
fcomi
icebp
mov
fimull
out
out
loopne
aam
hlt
aam
ljmp
jecxz
ret
xchg
roll
mov
mov
in
rcl
loop
fadd
mul
in
xor
out
into
cmp
cld
icebp
rcr
jmp
mov
orl
xor
repz
ljmp
test
xlat
rol
mov
orb
sub
xor
fmul
das
shlb
xor
cmc
loopne
jmp
and
xchg
xchg
aad
repnz
cld
out
idivb
fdivrl
cmp
loop
aas
out
test
cld
int
aam
loop
xor
fmul
cmp
rcl
loopne
jmp
xor
shl
xchg
ret
ror
cmp
dec
cmp
incb
aad
in
rol
dec
lock
cli
call
out
out
std
test
cmp
cli
fucom
test
decl
hlt
cmp
fsubr
cmp
jmp
lret
out
into
std
in
jmp
in
test
std
xchg
hlt
xchg
ret
out
std
clc
in
ds
ds
fmul
cli
out
faddp
addb
out
iret
out
xchg
clc
test
hlt
fsubr
sbb
sti
test
cmc
mov
incl
pop
add
add
mov
fmul
rcr
and
pop
mov
dec
jle
ret
jle
mov
xchg
icebp
mov
rcl
ret
cmc
vpand
testb
loope
xchg
jmp
xchg
jmp
enter
xchg
xor
in
xor
out
into
hlt
sbb
adc
fcomi
sti
fmull
out
out
test
mov
ret
cld
cmp
fstp
shl
loop
rcr
hlt
clc
cmc
clc
in
into
out
test
mov
fdivs
int
fucomp
fprem
shr
rol
aad
loopne
xchg
test
in
xchg
into
lock
icebp
hlt
repnz
int3
cld
in
aad
cmp
cmp
mov
in
out
xor
xor
out
leave
clc
out
lret
fildl
fdiv
cld
in
stc
in
mov
rcl
xchg
leave
leave
hlt
out
cmc
sar
icebp
cmp
out
std
cld
rcr
sarl
neg
clc
loop
into
in
nop
fcomi
lret
mul
loope
xor
clc
cmp
sti
lret
aas
out
in
std
les
mov
xchg
jmp
vpsubusw
ss
cli
cmp
out
fadds
sti
clc
mov
out
in
popl
out
not
in
das
xor
in
sar
rcr
or
jecxz
xchg
loop
mov
std
mov
test
in
clc
leave
aaa
xor
shl
repz
cld
sti
cmp
ljmp
out
lea
xor
jmp
xor
jmp
adc
ret
out
in
and
jmp
loope
mul
cmc
jmp
aam
fsub
addl
lret
clc
jecxz
mov
fcomi
addb
aad
cmp
std
loope
idivl
ffreep
testl
aaa
clc
in
out
xlat
div
cmp
fcmovnb
clc
stc
fdivr
flds
fldl
in
icebp
in
iret
xor
ss
icebp
fmulp
cmp
fldl
test
xchg
shr
int3
xor
xor
lock
test
not
fdivr
lret
lret
loop
in
in
int3
hlt
jmp
shl
out
lock
aas
hlt
ret
repnz
in
mov
cli
fstp
fistpll
jmp
fadd
lret
fstp
aad
mov
cmp
dec
jle
ret
jle
in
out
shl
xor
out
cmc
fsubr
jmp
int
cmp
repnz
adc
ret
flds
or
cmp
lret
shl
lock
jecxz
icebp
sbb
xlat
mov
into
cli
orl
fdivr
test
rcr
fsubr
lret
jecxz
hlt
and
mov
stc
lret
call
les
xor
ljmp
aad
cmp
test
xlat
xchg
mov
lock
int
aad
cmp
lret
rcl
out
stc
aas
shl
and
rcl
ljmp
fucomp
ljmp
call
iret
in
xor
in
cmp
hlt
ret
testl
adc
clc
xlat
sar
jecxz
iret
repz
leave
lret
ret
repz
cli
cmp
test
mov
in
shrb
out
loop
stc
out
cmp
sarl
in
adc
std
rcl
clc
ret
xor
mov
int3
cld
test
mov
lret
xor
sar
aad
fcmovnbe
loop
repz
out
div
fimull
in
jecxz
ret
xor
rolb
in
fimuls
xchg
out
loopne
fadd
fyl2x
jmp
out
enter
rcr
fdivp
ret
cmc
stc
sbb
loope
mov
xchg
cmc
test
repnz
hlt
sar
ss
loop
in
repnz
fst
leave
hlt
xlat
fmulp
lea
in
shl
lret
out
loopne
fcmovbe
dec
ret
sar
xor
xlat
loopne
std
int
in
repz
xchg
shll
out
ret
iret
repz
jmp
rcr
test
xchg
out
in
mov
lock
ror
xchg
xor
sar
sarb
cmp
hlt
out
cmp
aad
imul
fcmove
in
leave
out
out
xchg
icebp
xor
xor
cmp
std
xor
out
cld
adc
jmp
nop
loop
ljmp
iret
fcmovnbe
lret
loopne
ds
aam
leave
sti
xlat
xlat
xchg
fcmovnu
fiadds
lock
in
jmp
iret
aaa
sarb
idiv
lock
repnz
incl
aad
jmp
idivb
add
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
adc
jle
ret
jle
cmc
rcl
fld
idivb
cli
icebp
rcr
adc
sti
lret
sub
sub
icebp
xlat
xlat
out
leave
fxch
cmp
cmp
sar
fcomp
loop
xchg
xchg
out
xor
ss
shl
out
fldl
fsqrt
rolb
lret
pop
stc
loope
roll
shl
shlb
into
rcl
rcl
loope
aas
mul
loop
fmul
mov
lret
in
out
out
vcvtdq2pd
enter
icebp
fcmovnbe
shr
hlt
shl
div
ffree
loop
and
stc
rolb
loop
stc
cli
lret
fnsave
cld
cmp
cmp
cmp
aad
shl
lds
mov
aam
icebp
int3
stc
into
in
enter
stc
fcmovne
cmp
enter
in
jecxz
fdiv
out
jmp
ss
out
iret
stc
aad
cmc
in
loopne
clc
mov
loopne
in
mov
lret
out
hlt
xlat
dec
cmp
ss
flds
std
addl
rcr
fcomp
cmp
fdecstp
lret
hlt
cmp
loopne
cmp
mov
in
out
mov
hlt
jecxz
out
in
cld
int3
iret
fsubrp
xlat
fldl
xlat
fld
cld
orl
ss
xlat
cmp
cmp
idiv
icebp
fcmovnbe
adc
out
stc
out
dec
fldl
ret
into
sar
aam
lret
ss
cmp
mul
fiadds
stc
std
int
sar
icebp
lea
ret
sti
lock
icebp
in
in
shl
incl
fmull
mov
out
jmp
loope
aad
shl
sar
test
lret
sti
sti
fsub
mov
test
mov
ss
cmp
in
shl
cmp
rol
lret
loope
mov
lret
lea
icebp
iret
idiv
lock
aad
iret
fucomi
ret
sub
mov
lret
loopne
test
aad
into
out
out
xor
fldz
lock
mov
hlt
sbb
fmuls
fldl
add
jmp
xlat
into
ror
fxch
flds
jp
pop
xor
negb
ret
jle
xor
lret
iret
repz
loope
jecxz
fmuls
clc
repz
jmp
fidivrs
aas
std
icebp
loop
loopne
ffree
out
int3
loop
icebp
cld
int3
inc
ret
lret
in
in
imul
cmc
in
repz
cmp
xchg
fdiv
shl
test
out
lock
xchg
orl
cmp
repz
aas
or
out
mov
mov
stc
xchg
ljmp
in
out
ss
leave
fcmovu
fcomp
ret
cmc
xlat
aam
mov
loopne
loope
out
sub
xchg
xor
das
out
icebp
fdiv
std
cmp
fadds
fucompp
adc
nop
aam
test
shrb
leave
fdivl
xor
stc
ds
aad
fcmovnb
cld
xchg
call
test
jecxz
mov
int3
lret
std
ret
out
mov
test
les
iret
xchg
int
in
into
xor
fidivrs
cmp
or
aas
in
repnz
mov
sbb
int3
mov
shl
div
in
icebp
cmp
jmp
loope
aas
jecxz
les
in
stc
test
fdiv
xchg
loope
ret
divb
das
ds
repnz
iret
fcmovne
div
aad
fdiv
lds
fdivr
sbb
ror
idiv
rcr
repz
cmp
cmp
aas
jmp
jmp
nop
mov
call
ret
repz
into
fmul
out
fadd
out
out
fstp
cli
in
mov
repz
aam
shl
std
aam
cmp
cmc
int
in
xchg
ljmp
xchg
in
mov
jmp
ret
out
jmp
into
fucomip
int3
cld
loope
idivb
ret
fcmovb
xchg
fildl
in
mov
clc
icebp
ret
fdivl
lock
rolb
loop
hlt
out
out
and
test
int3
in
aam
cmp
jmp
hlt
cli
enter
clc
jmp
in
out
out
jmp
out
in
cmp
xlat
div
int
ret
sbb
mov
test
cmp
loopne
repnz
ret
std
cld
int
mov
jmp
lret
leave
int3
aam
aad
fnstcw
ficompl
lcall
push
jle
ret
jle
add
repz
leave
jmp
incb
orl
in
cmc
sbb
adc
decl
leave
fmull
aam
in
out
xor
out
fnclex
cmp
out
stc
clc
or
in
mov
test
xchg
or
fcmove
lret
cmp
lock
cmp
fdivr
jecxz
stc
fsubp
std
mov
out
xchg
ret
divb
aaa
in
ss
testb
stc
cld
icebp
aad
xor
in
hlt
lea
xor
cmp
into
cli
cmc
faddl
cmc
mov
sti
aad
fld
iret
enter
in
xchg
out
cmc
lds
jmp
ljmp
fmuls
in
and
in
imul
ret
cmp
sar
enter
repnz
neg
mov
jmp
jmp
out
jmp
cmc
cli
aaa
std
in
ds
cmp
rcl
fcomip
in
and
testl
int
xlat
cmc
idiv
lret
idiv
cmp
rcr
hlt
and
movb
xchg
ss
icebp
imul
repz
aaa
fst
cmp
in
aad
repz
out
xchg
cld
mov
xchg
das
in
cmc
cmp
div
fdiv
ds
testb
mov
test
aad
xor
ror
xor
ror
aam
fcmovbe
in
icebp
fisttpl
loope
xchg
repz
xor
sti
in
in
lret
fpatan
loopne
aam
in
ret
fiaddl
fiadds
xchg
std
mov
int
out
icebp
cmp
divb
cmp
iret
cld
fcmovnb
movl
xchg
out
ljmp
idiv
shl
aad
repz
ret
addl
fucomp
mov
xchg
lret
test
cli
fcomi
iret
fdiv
jmp
stc
sbb
out
mov
cli
loopne
mov
xchg
loop
mov
shl
cmp
cmp
xor
int
into
cmp
sar
ret
in
in
or
orb
loop
xor
fcmovbe
int3
lret
decl
add
add
ret
int3
fmul
aad
mov
pop
cmpsb
testl
rol
ljmp
rorl
loopne
clc
sub
int3
aaa
loope
cmp
leave
aam
lea
std
lret
nop
cmp
in
in
mov
in
sar
aam
cmp
repz
out
repnz
stc
test
roll
leave
fsubp
out
loope
das
lret
ret
out
int3
fcmovnbe
loope
iret
idiv
stc
not
xchg
sti
repnz
lret
lret
aaa
icebp
aam
hlt
iret
rcl
shl
std
cmp
orb
repnz
cmp
ss
loopne
cmp
xlat
xlat
icebp
cmp
aad
fsub
and
or
in
iret
bnd
out
clc
div
std
flds
out
testb
xchg
xchg
div
int3
ret
cmp
shl
jecxz
aam
loope
stc
sar
xchg
into
into
fucom
loope
xor
hlt
xor
out
cmp
sti
jecxz
incb
adc
enter
call
lret
sar
cld
test
out
ljmp
loope
repnz
in
icebp
aam
iret
lret
xor
cmp
jmp
vpaddsb
mov
repz
cmc
leave
clc
leave
cmp
call
cli
clc
xor
fsubp
hlt
loope
roll
loop
xor
out
enter
stc
lret
ror
rcr
cmp
cmpb
rcr
xchg
loop
addb
xchg
or
in
xbegin
hlt
test
ret
cmc
fadds
in
call
xchg
leave
int3
xor
in
out
hlt
fcmovnbe
sarl
test
fcmovbe
cmp
loop
xchg
nop
out
int3
int3
out
xor
xor
ljmp
fst
inc
jecxz
lret
into
test
mov
fldl
not
fadd
imul
int
cmp
adc
push
shl
out
in
dec
out
loope
sub
lret
stc
adc
aad
jmp
out
mul
ror
out
repnz
cmp
shl
icebp
cmp
cmp
test
xlat
repz
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
cmpsb
aam
push
pop
jle
ret
jle
aam
lea
mov
iret
icebp
fnstsw
in
xor
iret
fadd
int
xlat
xor
ret
into
in
int
rolb
jmp
rcr
div
loop
cmp
rorl
test
xchg
out
in
xchg
divb
fdivr
aam
lret
out
ret
fcmove
xlat
fcmovbe
fcom
stc
fprem1
imul
in
int
xchg
xor
leave
out
lret
fcmovnbe
loope
int
out
loop
out
repnz
xchg
cld
rolb
in
lret
cmp
fcmovne
icebp
xlat
test
fcmovnu
fdivrp
cli
out
in
filds
mov
iret
enter
ljmp
cmp
call
mov
cld
loopne
mov
shl
aaa
out
cmp
idivb
iret
test
aad
iret
in
sti
sti
lret
loopne
lea
shr
fcmovb
cli
lock
sarb
cmp
rcr
rol
int3
loop
mov
rorb
iret
aad
cmp
jmp
cmp
rcr
aam
loopne
add
cli
call
repnz
clc
les
test
rol
cmc
test
fabs
out
xchg
shr
faddl
leave
ss
cld
aam
clc
int
iret
cmp
xlat
cmc
push
hlt
fsubrp
and
ror
xor
xlat
leave
int3
ret
leave
lock
idivl
loop
fdiv
aam
cmp
sti
aad
sbb
in
loope
xchg
jmp
call
adc
shr
ret
ljmp
orb
test
sarl
fidivrs
rcr
fsubr
mov
orb
shl
int
in
cmp
cmp
lret
int
out
faddl
ljmp
leave
in
into
xchg
in
leave
lret
clc
aaa
in
repz
int3
sti
rorl
cld
orl
icebp
repz
xlat
ljmp
std
clc
cld
jecxz
jecxz
in
mov
mov
xchg
aaa
in
out
iret
cmp
hlt
aam
shl
cmc
loopne
test
fmuls
fsubr
pop
add
add
aad
vpaddusw
aad
js
jg
push
ja
adc
jle
ret
jle
loopne
leave
xchg
out
xchg
aad
enter
enter
cmp
rcl
loope
stc
stc
fsubrp
shl
mov
mov
int3
sti
fdivp
fucomi
in
icebp
int
out
aad
out
lret
cmp
clc
xchg
or
aad
lock
lret
call
into
in
shr
fdiv
rcl
in
mul
xchg
leave
out
in
int3
fucomi
jecxz
out
ss
cmc
cmp
iret
cli
lret
cmpl
in
cmp
in
sti
movl
out
ss
cmp
ffreep
lock
stc
test
jmp
out
or
clc
in
in
sar
enter
aad
shl
xchg
cmp
fmulp
out
shr
test
xor
jecxz
cld
out
lock
out
std
ds
idiv
int3
test
fcmovnbe
xrelease
aaa
test
cmp
in
ds
loope
fadd
jmp
flds
lret
int
shl
sti
in
cmp
jecxz
loope
iret
ds
test
imul
xchg
jmp
std
jmp
sub
xlat
fdivs
rcl
repnz
cmp
loopne
incl
jecxz
adc
in
in
lock
repnz
in
cld
fcom
icebp
adc
call
leave
test
int
in
shl
aas
aad
out
jecxz
sarl
ss
int
imul
sti
in
cmc
cli
in
decl
into
aam
ret
in
fcmove
cmp
cmp
repz
shl
not
jecxz
cli
jmp
rolb
clc
sti
repnz
sbb
hlt
repz
loope
jmp
in
fiaddl
xchg
mov
clc
aad
aam
fcmovnu
cmp
shr
rcl
out
xlat
test
cmc
mov
jecxz
mov
in
xchg
icebp
jmp
int3
bnd
dec
out
shll
repnz
loopne
shl
xlat
cli
mov
enter
rclb
in
stc
aam
int3
fstpt
lock
cmc
fucomip
lret
out
in
mov
xchg
mov
lock
cmp
fdivp
stc
in
sti
mov
out
xor
add
imul
sub
jmp
aad
int3
fmul
fnstsw
daa
fldenv
pop
jle
ret
jle
decb
out
ljmp
cmp
in
xlat
loopne
xlat
loopne
xlat
in
sti
test
out
cmpb
out
int
clc
std
hlt
cmp
aas
repnz
loope
std
shr
fcmovu
jecxz
inc
in
into
in
subl
cmp
fdivl
fcom
ds
in
test
lock
test
mov
hlt
or
cmp
out
cmp
int
test
ds
fst
cmp
xchg
in
test
jecxz
repz
sar
ror
stc
cmp
in
repz
loopne
in
out
int3
and
repnz
div
fdecstp
leave
std
lret
into
test
test
std
call
mov
loope
ret
xlat
in
xlat
iret
cmp
int
out
fsubp
test
jecxz
lea
call
xor
ret
int
testl
rol
out
mov
fnop
in
nop
aam
int
ret
out
enter
hlt
cmp
cmp
in
mov
loope
cld
std
xchg
ljmp
out
fsin
aaa
cld
cmp
cmp
in
in
in
sub
mov
shl
jecxz
in
sar
cmc
int
aaa
lret
lret
jecxz
clc
roll
loope
jecxz
in
mov
ret
lock
aaa
neg
shl
in
fcmovu
ret
test
add
mov
out
sub
out
icebp
xor
cmp
out
jmp
loop
test
in
test
cmc
lock
call
cmp
fcmovnbe
cli
fcomi
add
fldl
out
int
xchg
in
repnz
fmul
in
out
shl
lock
sar
repz
out
out
sti
orb
mov
xor
int3
xor
ds
out
iret
shl
std
jecxz
nop
dec
out
sub
xor
cli
shl
jmp
clc
int
cmp
in
test
call
sub
jmp
call
ret
aaa
cli
cmp
loope
jecxz
into
hlt
hlt
orl
mov
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
and
pushf
popa
jle
ret
jle
loope
aam
cmp
into
out
cld
repz
stc
testb
xchg
call
lret
enter
jmp
loopne
cmp
les
fstpt
xor
fiadds
lds
int
out
nop
xchg
ret
xor
lret
rcr
out
into
shl
int
rcr
fdiv
clc
enter
in
cli
lock
loopne
out
out
in
cmc
xor
cmc
xor
in
out
or
loop
lea
into
test
in
aaa
lock
loopne
cli
cmp
rcr
adc
aad
xlat
movl
int3
cmp
cli
cmp
cmc
out
cmp
shl
loope
in
neg
xchg
iret
repnz
int
lret
shrb
cld
jmp
iret
cld
cli
hlt
out
test
cmp
cmc
jecxz
leave
jecxz
idivb
into
iret
aad
iret
int3
ret
fcmovu
sti
cmp
clc
xchg
in
out
xor
xor
xor
aaa
lret
in
into
rcr
out
add
in
fadd
xor
push
hlt
lret
out
xor
lock
aam
sbb
hlt
rcr
cld
rol
xchg
xchg
nop
fcmove
xchg
in
sub
lret
hlt
rcr
in
aam
sbb
filds
cld
cli
jmp
fucomip
fcmovnu
sti
out
xchg
lret
fdiv
neg
cmp
ds
sti
incl
idiv
cld
int3
lret
out
int
call
aaa
jecxz
shlb
repz
cmp
rcr
clc
ret
call
clc
out
lock
out
testb
int3
xor
repnz
and
xchg
hlt
mov
cld
jmp
xchg
out
xchg
out
lret
in
mov
in
loopne
addb
fdiv
loop
ljmp
icebp
test
icebp
shrl
aam
out
hlt
stc
into
cmp
roll
cmc
aad
in
cld
out
lret
in
fst
repnz
in
xor
fdiv
sti
shl
sti
rol
adc
repz
mov
mov
mov
repz
into
cmp
rolb
test
int3
jmp
ljmp
xor
cmp
jmp
int
int3
int
cmc
inc
cwtl
test
andb
jle
add
hlt
call
ffree
clc
fdivrs
fdiv
sbb
repz
sbb
lea
sub
out
fdivrp
fndisi(8087
sti
fcomip
stc
jmp
out
xchg
std
jmp
jmp
cmp
cmc
ror
xor
lock
xchg
cmc
out
sti
xor
sbb
clc
jmp
repz
test
stc
fdiv
movb
mov
lret
aam
xor
in
jmp
cmp
cli
adc
loopne
clc
add
enter
fisttpl
jecxz
xor
rol
into
std
repz
lock
movl
nop
lock
mov
hlt
lret
ret
xlat
cmp
aam
out
cmp
fdivrl
std
fdivr
in
out
mov
out
xlat
out
into
fcmovnbe
das
stc
ljmp
xlat
xlat
add
lea
repnz
cmc
xchg
vpsrad
xor
cmp
in
lds
std
or
neg
fcmovnu
jmp
loop
aam
loop
leave
lret
int3
xor
repnz
int3
int3
neg
test
out
iret
mov
mov
xor
ljmp
int3
shl
mov
out
call
jmp
enter
icebp
ss
out
iret
icebp
call
out
test
out
icebp
int3
int3
into
loop
cmp
cld
leave
lock
std
jmp
out
std
out
add
enter
in
sti
std
in
sub
out
test
ds
fildl
ror
cmc
out
lret
mov
shr
test
jmp
xor
jmp
clc
loop
icebp
cli
clc
loop
mov
in
int
mov
leave
shl
xor
cmp
cmp
fdivrl
cmp
xchg
in
int3
loope
icebp
test
aad
aaa
shl
in
jecxz
rcl
cmc
repnz
mov
out
out
mov
nop
imul
aaa
das
out
ljmp
and
cmp
fdivr
cld
fmuls
fcmovne
hlt
shl
ret
jmp
loopne
decl
add
add
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
enter
loop
sti
neg
rcr
mov
loope
out
lret
lret
fucomp
xor
jmp
neg
hlt
rcl
aas
xchg
ret
rcr
leave
xchg
fucomi
faddl
cmc
xor
cli
in
into
repz
rcr
loope
test
clc
repnz
jecxz
loopne
test
out
loope
icebp
hlt
loope
int
jmp
fcmovu
in
aas
hlt
loopne
in
aaa
fsubp
mov
mov
std
in
idiv
mov
out
out
xor
aam
out
int
into
idiv
rcr
fsub
clc
or
stc
ljmp
repnz
mul
cmp
aam
xlat
clc
fstp
in
in
fcomp
jecxz
enter
loop
out
mov
in
loop
vpinsrw
int
fsub
decl
call
loopne
loope
aas
ror
ror
sti
cli
lret
ss
stc
in
repz
clc
sti
mov
iret
lret
mov
call
repz
repz
std
icebp
shl
in
mov
out
into
stc
in
icebp
loope
vpslld
in
xor
jmp
repnz
cld
aas
ds
mov
out
jmp
cmp
xor
cmc
ss
jmp
test
in
cmp
jmp
jmp
loop
jmp
cmp
in
lret
add
fcmovnb
sbb
xlat
iret
leave
loop
cld
mov
rcr
aam
into
sarl
leave
out
cmc
ret
std
fnstsw
add
in
jmp
in
in
repz
rolb
repnz
lock
cmc
aas
cmp
idiv
aad
fucom
and
or
loope
test
int3
ret
xor
divb
bnd
out
shr
xlat
stc
cli
rorl
loope
mov
xor
xor
in
into
fcmovu
repz
ret
in
imul
int
xchg
jmp
rol
jmp
rcr
repz
cmp
stc
aam
fiaddl
test
xchg
jmp
xor
in
call
iret
out
loop
xlat
in
fimull
xchg
hlt
xor
not
in
addl
jmp
mov
jmp
ret
int
fstl
mov
jp
call
add
aad
int
out
sti
fnclex
fiaddl
mov
lock
clc
lret
out
icebp
cmp
aad
xlat
cld
aam
in
in
fsubr
xchg
out
cld
out
enter
divb
rcl
rcl
leave
sar
in
jmp
int3
in
in
repz
int
clc
icebp
xor
xor
lock
stc
cmp
cmp
in
xchg
stc
addb
in
xchg
faddp
test
iret
xor
aam
std
repz
loope
cld
sar
vcvtpd2dqy
rolb
in
cmp
aaa
rol
cmp
repnz
out
jmp
mov
lret
xchg
divl
divb
int3
cmp
faddp
hlt
loop
sti
mov
out
into
loopne
ret
in
orb
xor
xor
out
cmc
std
out
stc
shr
fdivr
test
jmp
fcmovu
xchg
xchg
hlt
out
xor
repnz
sti
shl
cmp
cli
out
xchg
clc
repz
mov
mov
icebp
mov
lock
call
into
out
in
int
stc
cli
vpsubb
aam
xchg
nop
cld
int
mov
jecxz
enter
xor
int3
cld
shl
shl
les
test
icebp
mov
xor
lret
in
jmp
rcl
fcmovb
mov
out
shl
lret
adc
fcmovb
icebp
ss
xor
fmul
lret
loop
fsubrp
lret
lock
xchg
call
in
int3
fcmovu
sti
into
xor
shl
shl
loop
xchg
xlat
call
iret
jecxz,pn
clc
aad
sti
fdivr
cmp
shr
fdiv
rol
rcr
sar
and
xchg
roll
call
ds
cli
fucomp
test
cld
roll
mul
cli
std
into
adc
jmp
out
icebp
sti
fsubr
aad
icebp
loop
out
cld
out
mov
mov
test
xchg
xchg
das
fidivl
xor
cmp
cmp
aam
xor
rcl
loope
out
nop
mov
ret
ret
xor
into
xlat
shll
sti
fdivr
in
cmp
test
jmp
int3
ret
int
mov
pusha
das
mov
push
jle
add
loopne
test
sar
fiadds
sti
lock
loopne
aaa
int3
rol
cmp
shl
and
out
cld
iret
fdiv
fcmovnu
sub
out
in
aad
ljmp
pushl
ret
sbb
out
jmp
xchg
out
aad
fmul
shr
loope
test
out
orb
xchg
xchg
ljmp
neg
rcl
in
fiadds
stc
jmp
in
fucomip
mov
xchg
xchg
cs
cli
shr
ss
aam
sti
cld
add
clc
sbb
jmp
jmp
fcmovu
in
fdivrs
jmp
ret
lock
shr
repz
mov
lret
ror
aaa
int
ljmp
into
shll
in
aas
aad
repz
lea
loopne
cmc
shr
repz
hlt
ljmp
out
fnstsw
cmp
out
fucomp
enter
repz
cmc
int3
idiv
out
repz
fnstcw
fincstp
out
ret
aam
jmp
sub
mov
test
sbb
clc
int3
jecxz
lock
fcomp
call
shl
aad
in
test
loop
cmp
stc
out
out
fsubrp
enter
cmp
cmp
cmc
sti
lret
repnz
test
aas
lock
loop
test
loopne
enter
out
int
lret
in
cmp
ror
xlat
ret
imul
neg
in
fcmovnb
fmull
nop
divl
xor
fsub
ds
shll
sbb
clc
mov
repz
int3
shlb
enter
int
sarl
cmp
xor
hlt
cli
movl
aam
lock
aad
fstpt
cmp
fnstenv
aad
fucom
sub
in
lret
aas
ss
cmp
xor
cmc
loop
testb
mov
sub
cld
fcomi
shl
ljmp
fisttpl
orl
in
aam
into
ror
into
out
clc
repnz
mov
jmp
push
mov
jmp
aad
iret
aas
rol
aad
push
inc
push
sbb
jle
test
jle
loope
ljmp
mov
cld
mov
lock
icebp
xlat
lret
rcr
loop
cmp
loopne
std
ret
adc
repnz
xor
xor
ljmp
fsubrp
loopne
call
aam
test
lock
lock
cmp
loope
ss
rcl
out
out
test
sub
cmp
xor
int3
sbb
aam
xlat
fdivrp
enter
call
addb
fcom
into
clc
out
mul
cmc
shl
rcl
jmp
in
iret
mov
leave
enter
cmp
icebp
jmp
iret
cmp
in
xchg
cld
out
bnd
in
loop
xor
out
fucomip
call
icebp
rolb
jecxz
xchg
lret
mov
int
div
rolb
fyl2xp1
ret
rol
ret
out
fldln2
out
loopne
rcll
lret
icebp
int3
jecxz
idivb
xlat
cmc
xchg
mov
mov
xchg
jecxz
jmp
call
roll
fdivr
xchg
loopne
test
lock
loopne
hlt
xchg
jmp
int3
in
xor
cmp
rcr
out
ret
in
cli
jmp
in
fldl
in
ljmp
repnz
repnz
xlat
jmp
nop
test
ljmp
in
fidivrl
fdivrs
loopne
sarb
loopne
fucomip
mov
int3
loope
out
mov
out
out
call
fucomi
rcl
ds
ret
jmp
out
int3
sub
in
repnz
stc
cld
leave
stc
stc
out
ror
ret
loope
sarl
leave
xchg
xor
cmp
mov
mov
not
ret
out
iret
aaa
ds
cld
repz
out
jecxz
mov
loop
jmp
xor
xor
cmp
call
shl
in
ret
aad
xchg
test
nop
in
xor
fsub
in
lret
call
ret
in
test
jmp
std
mov
cmc
out
loop
xlat
in
divb
lret
fndisi(8087
out
out
mul
jecxz
mov
int3
xchg
fsubrp
rorl
sub
loope
into
testl
mov
cld
mov
repz
out
cmc
in
enter
in
sar
lock
into
rol
and
test
mov
mov
filds
add
add
into
lret
leave
aam
dec
jo
das
fmull
jle
add
rcr
in
ss
cmc
cs
fst
aam
ret
clc
ret
clc
fxch
out
ljmp
in
in
clc
aaa
fmulp
cmp
std
rol
loop
cli
aad
out
ror
fcomip
xlat
into
test
cmp
cmp
repnz
cli
mov
out
clc
into
cli
rcr
out
out
roll
testb
mov
add
jecxz
loop
out
cmc
aaa
fsqrt
in
stc
xlat
hlt
xlat
aas
stc
aad
std
incb
jmp
out
enter
fcmovbe
shl
fucomip
cmp
cli
fdivrs
in
test
jmp
addb
repnz
xor
aam
leave
in
neg
cmp
repz
fdiv
inc
fldl
cli
jmp
shr
xor
fld
clc
icebp
ljmp
into
aam
std
out
cmc
test
jmp
repnz
lock
aam
xor
cli
loope
rcr
xlat
iret
xlat
aas
ret
mov
ljmp
jecxz
jmp
repz
not
add
fmulp
xchg
lret
xchg
out
repz
xlat
icebp
xlat
aam
in
sti
out
cmp
fadds
incl
int3
mov
hlt
aam
xor
clc
in
cmp
loop
int
out
sbb
test
aad
out
cld
mov
int
xlat
div
stc
div
xor
hlt
ret
ret
repz
aad
incb
int
roll
iret
enter
adc
jecxz
addb
in
nop
enter
std
addb
call
aam
lret
in
cli
loope
orl
iret
jecxz
cmp
lock
into
lret
into
shr
cmp
roll
mov
aas
mov
int
idiv
cmp
call
aas
aad
fst
std
shl
out
lret
sar
and
test
out
fcmove
aad
std
lock
cli
loop
sar
test
decl
repnz
loopne
in
xor
sti
cmp
fcmovbe
cmp
xor
shl
in
sbb
sti
xchg
mov
in
fcmovnb
xor
loop
neg
cmp
mov
loop
fsubrp
sub
shl
ss
ret
in
adc
aad
mov
in
out
movl
rcr
mov
push
dec
push
jmp
int3
ret
int3
int3
sahf
pushf
por
mov
test
jle
xor
addb
repz
into
loop
into
lock
idivl
addl
leave
fildl
lock
xchg
xchg
out
call
aam
cmc
repnz
xor
enter
imul
ljmp
mul
xor
repz
clc
loope
cmp
mul
fadd
loope
fiadds
jmp
das
xor
aam
clc
into
fcom
iret
sti
cmp
xlat
test
out
clc
in
fmul
loop
roll
cmp
fdiv
ds
int
les
int
in
iret
out
lock
int
leave
clc
int3
aaa
idiv
cmc
clc
addb
lret
xchg
fadds
repz
shll
fxch
fcmovbe
call
testl
sub
lret
icebp
out
lret
repnz
sar
jecxz
rcl
jmp
repnz
iret
sti
leave
fadds
out
std
jecxz
out
into
cmp
int
out
cmp
aas
aas
ror
into
cmp
test
icebp
call
in
rcl
loope
xor
leave
cmp
test
aas
stc
out
loopne
fstp
xlat
aad
test
ret
mov
mov
and
cmp
fadd
out
xor
fidivrl
repz
call
std
nop
nop
or
rcl
enter
hlt
fiadds
out
cmp
fcmove
test
test
xlat
loope
cli
into
cmp
addb
icebp
hlt
in
sub
cld
cld
lret
xor
aam
in
fxch
aas
cli
cmpb
in
fimull
or
rol
fcmovne
mov
cli
shlb
sbb
std
fcom
clc
lock
mov
cmp
rol
cli
repz
cmp
cmp
int
adc
sar
test
lock
xchg
and
jmp
in
in
cli
cmp
rolb
hlt
xlat
test
mov
lret
aaa
jmp
lret
aad
xor
shr
repz
loopne
hlt
cmc
cli
ret
std
in
out
loope
xchg
call
lret
leave
out
lret
icebp
xlat
int
mul
rcl
out
aad
test
loop
enter
mov
icebp
sar
lret
cmp
shl
cld
ret
inc
xlat
out
out
mov
lret
xchg
hlt
and
xor
stc
loope
cmc
cmc
cmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
fldt
jle
test
jle
lds
fsub
loop
repz
lret
out
loop
cmc
aam
enter
lret
shl
shl
mul
in
out
std
in
cld
out
cld
mov
mov
out
lock
div
call
jecxz
hlt
icebp
xlat
jmp
leave
stc
mov
ror
in
repnz
cmp
repnz
fcomip
sti
cld
ret
repnz
xlat
fcmovne
aad
loopne
int
loop
mov
clc
rcr
mov
xlat
cmp
out
test
test
test
in
cmp
mov
xor
jmp
ret
idivb
lock
test
ljmp
adc
jmp
cmp
iret
std
loop
sar
fcomi
in
jmp
out
mov
repz
cmp
ror
out
int3
aam
sti
cld
idiv
loopne
filds
mov
cli
orl
leave
shll
sar
add
std
in
into
nop
fimuls
test
les
cmp
lret
aam
loop
ds
xor
mov
aam
enter
xor
fdiv
xlat
ljmp
shr
add
mov
jecxz
adc
ret
ret
in
das
shlb
repnz
call
clc
stc
xchg
xor
clc
jecxz
ljmp
repnz
loope
loop
fisttpll
orb
xor
sti
xor
cmc
sarl
lret
cmp
out
mov
testl
ror
rcll
aam
rcr
cli
aas
clc
loop
cmc
call
in
in
mov
mov
repz
xor
fldlg2
loope
out
mov
mov
loop
xor
cmp
in
lock
cli
cmp
cli
fnstsw
repz
clc
jecxz
movb
xchg
fcmovne
cmp
out
into
shl
iret
test
fcomi
and
loopne
std
xchg
xchg
xor
fnstcw
in
xlat
rcl
xor
jecxz
repz
sbb
adc
fucomi
mov
repnz
out
std
clc
out
cmp
std
repz
loope
fcmovb
lret
mov
sarl
ljmp
cmp
adc
aam
xchg
fimuls
shl
fucomi
rcr
cld
iret
in
testb
ret
add
aam
rcl
aad
inc
xor
mov
ja
jle
add
xchg
in
xchg
xchg
fdiv
rcl
out
test
aad
cmp
ds
out
test
in
xchg
loope
xchg
cmp
ret
shl
loope
int3
loop
hlt
ds
fdiv
lret
cli
out
lock
xchg
xchg
xor
fcmovbe
sar
cmc
iret
lret
xlat
out
xlat
lret
shr
out
ffreep
fdecstp
in
test
iret
aaa
cs
in
fdivrs
fdivr
ffree
rcr
mov
aam
loop
mov
xchg
div
jmp
call
out
out
repnz
mov
out
std
call
xor
out
cld
enter
cli
jmp
cmpb
in
mov
aad
clc
mov
std
out
in
icebp
loop
sti
repz
out
enter
jecxz
aaa
rolb
in
cld
out
lret
in
filds
out
ret
xor
aad
sub
cli
loop
fptan
shr
test
fmulp
loopne
pushl
int
int
enter
cmp
cmc
fsub
shl
mov
mov
mov
ret
in
mov
call
out
repz
xor
fcos
repnz
cld
int
rcr
fmull
std
std
jmp
xor
aam
out
shl
aaa
lret
lock
sti
test
fdivp
jmp
cmc
dec
rolb
aad
in
shlb
xor
fbstp
xlat
stc
xor
adc
cmp
std
in
iret
fcmovbe
ljmp
aaa
fmul
shr
clc
jecxz
roll
xlat
jecxz
mov
cld
lret
xchg
in
xlat
in
out
cmp
xor
xlat
cmp
and
lds
int3
cli
fsubr
lock
in
clc
cld
iret
cmp
std
push
cmp
fsubp
shl
xchg
mov
iret
sub
in
xchg
rcll
cmp
enter
roll
sar
aam
cmp
cmp
mov
cli
in
aam
cmc
in
in
repz
shl
addb
mov
xchg
out
lock
loop
fcomip
sub
mov
test
loop
rcl
cs
aam
xlat
fistpll
div
lret
stc
in
iret
loope
enter
mov
jecxz
out
cmc
shl
ret
xor
sti
cmc
hlt
ror
adc
shl
push
out
sub
call
xchg
jmp
lret
cmc
mul
iret
sarb
xor
fxch
cmp
ror
xchg
xor
iret
mov
adcl
add
jmp
mov
fcmovnu
or
sub
mov
sub
test
jle
out
hlt
lock
fxch
int3
vaddsubps
jmp
rorl
lret
shr
sti
int
aas
cmp
loopne
cld
clc
test
loop
sti
cli
mov
neg
fxch
out
sbb
cmp
shl
out
div
repz
cmp
stc
cmp
rorb
aad
mov
ficoms
shr
cmp
xor
xchg
mov
sti
lret
fsubp
ljmp
loopne
std
call
sti
repz
stc
leave
neg
jmp
out
shlb
sti
cli
int
cmp
ljmp
cld
jmp
lret
ljmp
rcr
in
in
lock
idiv
and
out
cmc
shr
loop
in
mov
aam
test
out
fdiv
stc
cmp
iret
shr
mul
or
sbb
test
in
xlat
fcmovbe
cmp
repz
cmc
aad
leave
loopne
call
in
lret
out
aad
rcl
out
in
test
cmc
aas
rcr
test
or
icebp
loop
xchg
into
shr
divl
call
adc
clc
iret
rcr
loope
repz
jmp
testl
ss
fucomi
cmc
idivl
ror
sti
aam
std
not
fdiv
test
out
xchg
loopne
loop
call
xor
xor
aad
fdivr
repnz
rcl
cmp
hlt
loopne
enter
loope
aam
out
hlt
ss
repnz
shll
xor
cmp
neg
enter
enter
std
int3
out
shl
in
in
repz
leave
xor
shl
jmp
out
jecxz
test
mov
test
mov
out
into
aaa
sti
iret
xor
loope
out
int3
repnz
fadd
aam
enter
frndint
roll
cmp
out
ljmp
cmc
cmp
shl
in
sub
lret
loop
mov
out
int
icebp
aaa
fsubr
cmp
cmc
hlt
lret
addl
fucomip
lret
out
mov
xchg
shl
lock
ljmp
aam
out
add
cld
cld
sti
faddp
sbb
aam
rol
xor
les
in
lret
aad
ds
into
iret
flds
mov
repz
test
iret
into
into
stc
jmp
loop
roll
xchg
leave
rorb
div
enter
cmp
hlt
push
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
push
jle
test
jle
rcl
ljmp
sub
out
int3
loope
ret
icebp
out
out
sti
cld
in
int3
iret
ret
cmp
int3
in
out
out
xchg
sub
aad
jecxz
ss
shl
cmp
cmp
fcom
out
fimuls
into
test
out
hlt
in
jecxz
lret
std
jmp
hlt
lret
lock
clc
loopne
clc
and
testb
out
test
out
loop
idivl
cmp
lret
out
aam
shl
ret
test
loopne
repz
sti
call
nop
xchg
int
lock
fmul
cmp
out
fcomp
cmc
std
aas
int
out
std
xchg
aaa
in
lret
fdivl
fdivrs
xlat
fcomp
test
fstp
xlat
incb
test
out
jecxz
stc
lret
aam
clc
int3
fst
cmp
mov
test
jmp
xor
cld
out
hlt
aad
rcr
sti
out
mul
stc
test
jmp
test
jmp
into
cmc
imul
fcmovne
leave
repz
cli
cmp
lret
rol
stc
icebp
xor
clc
lret
std
mov
repnz
lock
xor
leave
sti
in
xor
int
add
jecxz
int
dec
ljmp
das
out
in
rcr
ljmp
in
xchg
test
loop
mov
xchg
sub
clc
in
hlt
lret
lock
in
in
xchg
mov
nop
cli
fiadds
int3
ljmp
int3
call
cmp
xlat
out
fisttpl
in
mov
xchg
rol
call
cmp
sarl
test
cmc
in
testb
jecxz
iret
call
int
sti
ss
lock
iret
into
loop
stc
adc
fcmove
enter
out
fsubp
in
xor
aam
std
xlat
jmp
lock
fcmovnbe
jmp
testl
loopne
dec
iret
jmp
fsubrp
lock
repz
mul
fcmovnbe
out
in
mov
mov
xchg
mov
das
int3
out
in
test
lock
std
fnstsw
ljmp
icebp
jmp
xor
jmp
loop
shl
fiaddl
mov
cmp
ret
jmp
enter
ds
ds
shl
cmp
jecxz
loope
rcr
fildl
shr
lret
shl
jmp
cld
fsubp
movb
inc
lock
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
decl
jle
add
jmp
jmp
in
in
aas
aam
hlt
cld
sarb
in
out
xlat
clc
mul
roll
shr
leave
sti
repz
call
rol
out
leave
loope
aad
roll
neg
movl
call
lock
call
ret
rcl
aad
xlat
out
iret
out
call
imulb
xor
cmp
xor
rcr
icebp
std
addl
jecxz
int3
lret
decb
fdivr
xor
in
xor
cmp
cmpb
std
cmp
shl
les
repnz
hlt
mov
ljmp
iret
fucomp
lret
sti
mov
hlt
ret
ljmp
jmp
lock
fcmovne
das
aaa
cmp
cmp
cli
in
cmp
xchg
jecxz
call
in
xor
ljmp
aas
cld
cld
sarb
in
idiv
lea
test
enter
in
aam
std
cmp
not
cld
stc
shl
fcom
loopne
xchg
out
cmp
fdivr
lock
lock
shl
fcomp
sbb
div
jmp
loopne
into
ljmp
out
ret
in
fnstcw
lock
fucomi
loop
test
stc
ffree
fxam
loopne
mov
xor
orb
fcmove
icebp
lock
shl
cmp
cld
std
enter
loope
out
out
lret
lret
in
repnz
in
sti
out
cmp
fxch
frndint
sbb
iret
fcmovne
xlat
fiadds
loope
cli
lock
jmp
aaa
into
int3
lret
out
rcr
hlt
fidivrs
jmp
lret
ret
lret
loopne
hlt
int3
not
rcr
dec
aam
jecxz
lock
shl
loope
aam
mov
int3
leave
out
loop
and
repnz
std
cmc
ds
shl
int
rcr
cmc
loop
shl
loope
out
test
call
xchg
shlb
clc
in
aad
cmp
jmp
fistpll
fstp
xchg
fadds
addb
div
xor
ljmp
lret
std
test
shr
out
cli
int
in
out
sub
fdecstp
aad
sub
sti
xlat
lock
fadd
sub
and
xchg
into
fdivr
ror
sar
mul
and
out
fmull
xor
lock
hlt
repnz
loope
cmp
roll
loopne
xlat
stc
test
call
hlt
cmp
cli
add
add
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
insl
loopne
add
test
jle
fnstcw
sti
cmp
fidivrl
lret
sti
loopne
repz
cmc
lock
aad
out
out
int3
in
loop
mov
aad
lret
hlt
repnz
out
fst
ffree
incb
test
std
jmp
repz
neg
out
iret
out
cmp
sti
fucomp
cmp
jecxz
jecxz
ret
mov
loopne
xor
les
repnz
in
xor
out
aas
out
aam
cli
loope
xchg
test
xchg
xor
xor
jmp
loope
cld
sar
fcmovnbe
mov
div
stc
loope
fldl
jecxz
div
in
cmp
cli
cmc
out
loope
rcr
in
cmp
loop
mov
sti
icebp
adc
xor
idivb
bnd
loop
cmp
test
std
sti
lea
in
out
out
lret
lret
xor
cmp
fninit
fxam
sti
shr
test
mov
fcmovnu
call
in
ss
repnz
std
loopne
xlat
cli
jmp
xchg
fimull
iret
ljmp
jmp
shl
call
cmp
test
loop
xchg
push
int
mov
shr
repz
lock
rcl
cmp
repz
frstpm(287
dec
jecxz
jecxz
in
ret
in
ror
out
cmp
fcomp
ret
fdivrp
test
loopne
fdivr
lea
enter
fcmovne
fcmovbe
cmp
int
int3
shl
adc
xchg
fcomi
in
in
iret
fsubp
test
rol
aad
enter
ror
fnclex
ljmp
repnz
enter
out
nop
ljmp
neg
rcr
ss
in
loop
call
shl
mov
movb
xchg
aaa
xor
ljmp
aam
std
cmp
xchg
or
jmp
aam
fdiv
lret
sar
loope
div
lock
sarl
loopne
or
out
jecxz
out
out
idiv
in
xor
cmp
hlt
in
sar
aad
fchs
aam
mov
out
lock
out
loop
call
enter
loop
cmp
repz
idiv
test
or
out
repnz
mov
cmp
xor
out
aam
cld
aam
test
lds
xchg
stc
divb
stc
out
cmp
cmp
cmp
std
ret
lds
mov
filds
repnz
cmp
shl
inc
call
add
add
ret
add
int
xlat
xchg
vpunpckhdq
jle
add
rcl
rol
out
flds
sub
int
call
lret
ljmp
decb
mov
int
out
orb
ss
cmp
sar
hlt
sti
mov
jmp
in
int
enter
repz
das
shl
cmc
lret
cmp
aas
jmp
out
fcmovbe
out
icebp
dec
sti
xchg
fisttpll
int3
into
fxch
ror
lret
fdivr
stc
clc
in
test
loope
cmp
xchg
loope
loope
ror
out
hlt
repnz
test
test
cld
cld
mov
lret
xchg
xchg
divl
xor
fcomi
repnz
cmp
repz
fdivr
leave
out
faddp
push
in
call
clc
cli
clc
repz
out
ror
rcl
sar
addl
xchg
loopne
fisttps
jecxz
sub
cmp
iret
out
fucomp
sti
idiv
test
test
stc
ror
jmp
fcmovu
loopne
mov
loop
fists
cmp
lock
lret
iret
clc
into
fdiv
in
aad
clc
in
lea
xchg
hlt
imul
cmp
leave
iret
lret
fucomi
shl
in
rcr
repnz
inc
mov
repz
leave
sti
xor
icebp
cmp
cmp
ffreep
out
filds
repnz
shl
cmc
lret
clc
ret
cmp
out
ror
addb
std
ret
xchg
mov
enter
jmp
mov
xor
cli
aaa
aam
repz
repnz
loopne
sar
lds
call
ret
fdiv
lock
in
sbb
ret
cmp
ret
aam
jmp
fsubr
fnstsw
fucom
jmp
enter
cli
fmulp
fmulp
test
shl
rol
fchs
mov
mov
sti
in
loop
loopne
shll
leave
cmp
dec
cmp
ret
sbb
test
test
mov
xor
xor
aaa
icebp
fcompp
cld
cmp
sbb
sar
inc
out
aad
lret
sti
test
mov
cmc
in
xor
into
in
lret
divl
ror
sar
mov
mov
test
hlt
repz
fnstcw
out
xlat
rcr
aaa
cmp
cmp
cmp
jmp
fcmovb
in
jecxz
out
in
jmp
fcom
aam
call
int3
stc
loop
aam
mov
xchg
cld
mov
into
cmc
repnz
enter
div
shr
ror
aaa
cmpb
jne
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
leave
incl
in
ljmp
cmp
jmp
jecxz
loopne
ds
ret
fcmove
cmp
or
int3
aaa
fmul
fdivr
fsubp
cmc
fdivr
ret
cmp
mov
fadd
xlat
in
xchg
int
in
nop
aad
shl
leave
sti
aaa
cmp
ds
xor
loopne
loop
ret
cli
out
nop
lock
ror
in
xor
xor
in
out
xor
out
shl
loop
hlt
fcomp
out
jmp
fsin
incl
out
lret
repz
lock
xor
sar
cmp
xchg
sub
sbb
sub
cmp
out
int
jmp
shl
out
out
std
jmp
and
out
xor
cmc
in
fcmovnbe
rcl
cmc
loop
in
incl
out
test
int3
icebp
repnz
xlat
lds
fdiv
std
aas
shr
iret
cmc
ret
xor
aam
enter
test
loop,pn
int3
fst
stc
jmp
int3
add
loopne
idivb
shl
test
clc
mov
mov
ret
xlat
ret
in
fcos
cmp
aam
mov
fsub
fstp
xchg
movb
ret
lret
cmp
shl
or
hlt
in
loope
loop
leave
xchg
lock
test
imul
ss
fdivr
not
fdivrl
out
cmp
cld
repnz
rorl
mov
in
iret
cmp
clc
jmp
sti
aam
shr
xlat
rol
ds
enter
shr
aam
ret
aam
shl
fdivrl
aam
lret
sub
iret
dec
cmp
mov
int
enter
repz
aam
jmp
mov
mov
in
xchg
xchg
loop
xor
clc
in
cmp
repnz
fneni(8087
jecxz
shl
sti
div
in
in
mov
or
aam
in
jmp
clc
lock
cli
clc
stc
sti
and
stc
lret
std
sub
repnz
rcl
jmp
fxtract
stc
cli
shl
cld
test
rolb
fcmovnbe
mov
out
aaa
aad
lret
cmp
xor
int
cmp
into
aad
shl
lret
sti
enter
incl
sub
fldlg2
lret
leave
enter
xor
fstpt
fisttpl
xchg
shlb
aaa
xor
cmp
sti
lret
aaa
leave
not
cmp
xor
fcompp
test
inc
clc
orl
sub
push
orl
jmp
aam
ror
fcomp
aam
aas
idivb
sbb
or
test
jle
shr
in
cmp
sti
aad
aas
jmp
into
ret
aas
stc
ret
repz
in
in
repnz
shl
jecxz
repz
xor
rcr
repz
aad
loop
fcomp
ret
dec
clc
cld
jmp
cmc
testb
out
out
xlat
aaa
std
cmp
lds
enter
out
and
int
not
in
ss
call
idiv
cmc
cli
cli
and
out
enter
shl
div
jmp
sarl
fsubr
rolb
out
fucom
int3
mov
mov
repnz
sar
xor
sti
into
loope
cli
out
cli
into
test
incb
test
call
aad
in
cld
into
aam
clc
shl
cmp
fiaddl
jecxz
iret
cli
push
test
aam
ret
enter
jmp
in
roll
test
int
out
xchg
loope
shll
fcmovbe
fcmove
repnz
cmp
in
out
jecxz
cmp
enter
mov
xlat
shl
cmp
aad
sbb
xlat
fcmove
test
call
in
out
aaa
leave
iret
repz
fcmovnbe
rol
adc
out
std
jmp
mov
inc
iret
call
int
fcomp
enter
cmp
loope
ret
out
xor
enter
jecxz
sti
test
inc
int
call
cmp
clc
jmp
sbb
aam
xchg
mov
cli
fisttps
repnz
ljmp
cmp
aas
sti
jmp
loopne
in
test
ror
test
int
out
filds
jmp
clc
fucomi
xor
cmp
addb
call
call
int3
iret
iret
leave
divl
xor
cmp
xor
cmp
fstp
ret
xlat
jmp
xchg
and
std
hlt
mov
enter
lret
out
cld
xor
cmp
test
xlat
loop
mov
ljmp
neg
call
ljmp
fmull
testl
ret
jmp
rol
cli
shl
cld
cld
leave
enter
addb
shr
into
aaa
jecxz
aam
sarl
into
aad
lret
cmpb
xor
cmp
ljmp
int3
shl
in
out
loop
in
stc
aam
aad
fucom
fiaddl
repz
int
loopne
enter
mov
int3
aad
out
in
ss
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
gs
push
push
add
fcmovu
sti
jecxz
fdiv
cli
clc
jecxz
loope
loop
test
test
hlt
in
icebp
repnz
cmp
mul
sti
loope
cmp
test
adcb
cmp
cmp
xchg
ftst
enter
mov
shrl
jmp
int3
jmp
lret
out
out
fstpt
sarl
mov
adc
ficoml
mov
repz
aad
repnz
cld
xor
ret
neg
and
cli
loopne
lret
jmp
xchg
lock
das
shr
jmp
ss
test
repz
fdivrp
cmp
popl
xlat
xor
sub
iret
int3
stc
lock
ftst
int3
xlat
xchg
ror
mov
sti
ljmp
mov
aad
call
cli
into
aaa
out
cmp
call
loopne
lea
jmp
std
fyl2xp1
lret
lret
idiv
lock
fisttpl
repnz
xchg
xor
enter
in
rcr
icebp
aas
lds
ret
jecxz
in
jmp
loop
enter
jmp
jmp
ret
call
xchg
fxam
rcll
in
enter
xlat
cmp
std
loop
out
ds
loopne
clc
ss
stc
xlat
ss
aam
into
fdiv
jecxz
inc
sti
test
or
cli
ret
rorl
xor
sub
enter
rol
xlat
cmpl
xlat
fsubr
test
lret
shl
cmp
add
repnz
clc
fdivrp
call
stc
mov
loopne
loope
xor
sarb
out
ljmp
cmp
in
inc
lret
repnz
out
leave
lock
ror
ss
std
shl
out
aas
out
rcl
in
loopne
loopne
clc
call
shll
call
std
sarb
cmp
lret
ret
dec
mov
int3
leave
fisttps
xor
clc
cli
ss
fdivr
or
test
in
fildl
lea
repnz
cmc
xor
cld
cld
fmulp
addb
adc
mov
lea
in
shll
xor
xor
in
loope
lock
clc
stc
jecxz
dec
jecxz
mov
loopne
popl
fcmove
fsubr
shl
icebp
into
hlt
fcomp
loopne
jge
push
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
loope
fistl
add
mov
loop
lock
sub
rcr
ss
in
cli
shr
repnz
clc
test
fildl
mov
shr
roll
int3
aaa
iret
rcr
aad
aad
ret
fildl
xchg
icebp
lds
ret
clc
xor
clc
xchg
ret
test
lret
out
lret
mov
lock
repz
cmp
in
lret
idivl
std
cmc
sbb
leave
jecxz
incl
shlb
loope
hlt
repz
cli
hlt
mov
xchg
mov
jecxz
test
das
in
jmp
cmp
cmp
ds
idiv
fldl
int3
into
addl
test
cli
xor
in
rcr
cli
xchg
in
out
add
mov
shlb
ret
into
lret
aas
lret
cmp
jecxz
adc
or
cld
in
in
out
loopne
xor
in
lock
clc
jecxz
aas
fcmovnb
aam
std
aad
in
ljmp
xchg
aaa
jmp
out
call
cmp
std
lock
fadds
mov
jmp
rcl
xchg
imulb
in
fcmovne
ss
int3
cmc
clc
hlt
repnz
rolb
cmc
loop
jecxz
loop
xchg
xor
jmp
xlat
call
ds
test
ljmp
mov
aaa
hlt
jecxz
xor
fdivl
stc
test
aam
stc
aas
in
sti
jmp
nop
xchg
ljmp
enter
cmp
ret
iret
rcl
xor
in
test
icebp
jmp
xor
cmp
aad
sarb
aad
rolb
jmp
mov
loop
out
fnstsw
int
ds
ds
jmp
test
jmp
lret
mov
repnz
call
lret
cli
fcom
out
fcmovnb
fdivrs
vpavgw
xchg
out
in
leave
cld
lret
icebp
shl
in
lret
fidivrl
loop
cld
and
fcmove
fscale
mov
rorl
aad
shl
out
out
xlat
hlt
neg
std
xlat
into
not
std
hlt
out
cmc
xchg
lea
out
sarb
sti
ss
in
fdiv
iret
cmp
sti
fadds
orb
in
out
div
in
fstp
iret
ljmp
loopne
cmc
sti
rorb
mov
out
mov
movb
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
repz
cmp
jg
test
jle
lock
leave
icebp
ss
repz
in
and
ret
jecxz
std
fiadds
lret
loope
loope
aad
sti
fld
shr
cmp
add
idiv
repz
out
out
loope
enter
not
ret
ljmp
or
cli
cmp
test
sbb
leave
cld
loope
enter
xor
out
std
aaa
lret
aam
cmc
idiv
in
stc
in
test
out
out
xor
cli
divb
aam
sarl
aad
clc
cld
fisttpll
fucomi
in
hlt
xchg
test
cmp
out
ljmp
cli
hlt
ret
shl
sti
loop
fdivr
xchg
xlat
xchg
xchg
int
into
ss
call
lock
test
loope
clc
out
fmull
loop
loop
int3
int3
xlat
iret
fsubr
ljmp
test
aam
in
lret
int3
mov
aad
loope
aam
ljmp
xlat
int3
rcl
cli
xchg
in
fcmove
fcmovne
faddl
int
jmp
stc
rol
out
div
test
rcl
jecxz
mov
test
out
rclb
int
cmp
ss
aad
repnz
cli
rcr
cli
jmp
mov
lds
out
xor
loope
sarb
lock
std
in
aam
fdivr
loop
rol
in
fdiv
into
fmulp
into
in
mov
lret
cmp
xor
out
xor
jmp
ret
aam
loope
mov
out
lret
icebp
rcl
rcl
divb
clc
iret
into
out
stc
cld
roll
fimuls
ljmp
call
ljmp
cld
aad
in
mov
shr
enter
cmc
xor
rcr
incb
repnz
jmp
loope
int
rol
xor
ljmp
aas
les
repz
fmuls
addl
shl
cmp
lret
aad
int
hlt
aas
aas
xrelease
xchg
xchg
int3
in
in
in
fprem
ret
aam
cld
clc
ror
out
sti
clc
aam
fcomi
icebp
xchg
fimuls
lret
cli
out
xchg
lea
shl
xbegin
fst
testb
test
sti
mov
test
xchg
loopne
xchg
stc
xor
rcr
enter
repnz
hlt
stc
fchs
cld
fldl
fcomi
in
leave
rclb
rcl
cmp
int3
mov
lea
push
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
mov
push
gs
jle
add
jmp
stc
cmp
ret
out
in
ret
orb
aam
out
das
into
rol
cmp
sti
in
int
shl
out
flds
loop
out
fdivrp
out
fstl
ljmp
loop
fcomp
rcr
fcomi
fimuls
lea
fsub
in
lock
loope
out
ret
out
and
jmp
test
stc
lret
xchg
mov
loop
imul
xlat
xlat
cmp
cmp
aam
push
les
lret
iret
icebp
xor
lock
stc
clc
fcmovbe
in
sti
hlt
cld
in
fxch
in
aas
loop
clc
out
stc
ret
int3
lret
xchg
movl
in
cmc
clc
out
lret
xor
ror
xlat
neg
fsub
loop
int3
cli
fisttpl
xor
not
out
fdivs
repnz
rcl
sub
repz
testl
jecxz
hlt
icebp
sub
shll
clc
sti
aas
fdivr
cld
sbb
mov
ret
test
int3
mov
mov
lock
hlt
fdivs
out
cmp
xlat
repnz
cmp
xlat
cld
addb
xchg
addb
sbb
clc
fldlg2
aad
cmp
div
testl
cli
fisttpll
xor
jecxz
shl
xlat
lret
repnz
fcmovbe
bnd
mul
mov
sti
fucom
xchg
notb
aad
cmp
in
shl
out
ljmp
in
xchg
sar
repz
aas
jmp
cmp
jmp
repz
test
shl
rcr
or
mov
xchg
hlt
aam
ss
test
shll
leave
aam
leave
aas
ret
ret
repz
add
call
out
and
out
ss
fdivr
aas
xlat
cld
aam
roll
ret
clc
xchg
int
repz
das
fistpll
aaa
cmp
test
lds
fildl
incl
jmp
xor
cmp
int3
into
aam
sar
roll
stc
mov
fists
div
cli
aad
ror
stc
fld
aam
sti
sbb
mov
loop
jecxz
jmp
in
call
out
les
in
fadd
shl
fadd
xlat
out
div
mov
mov
rcl
int3
cli
clc
ss
jmp
ffreep
test
sbb
rcr
lret
in
jmp
loopne
fcomip
out
sti
int
shll
fcomip
cmc
fcmovnbe
icebp
and
add
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
into
add
nop
pop
jg
test
jle
out
fstp
fsubp
xchg
lock
in
iret
rcr
aam
fdiv
aaa
fcomp
ror
cmp
lock
mov
sbb
shr
lret
stc
ds
rcl
stc
and
aam
cmp
flds
mov
mov
xor
sarb
in
clc
inc
cmp
call
iret
cli
clc
mul
call
loopne
lock
loope
xchg
int3
fincstp
iret
lret
ss
ljmp
into
mov
loopne
aad
repnz
xor
enter
jmp
std
filds
shr
fnstsw
fiadds
lock
sarl
ljmp
shl
test
loop
leave
jmp
std
nop
nop
enter
ljmp
cmp
cmp
aad
addb
cli
in
fcomip
nop
enter
fnstcw
cli
repz
in
ljmp
fprem1
fildl
leave
xchg
icebp
test
in
ss
xlat
xlat
repz
fcmovne
xlat
xchg
in
mov
in
fiadds
loopne
out
cmp
xlat
int3
xor
enter
loope
loope
jmp
mov
in
aaa
xlat
call
cmp
aas
repz
ret
loop
xchg
mov
aad
call
lret
in
in
test
xor
clc
out
stc
lret
fcomp
fildl
repz
ret
out
std
out
mov
iret
lret
cmp
aam
jmp
fsubrp
fcomp
shl
fimuls
lret
repz
ret
aaa
std
das
div
sarb
testl
leave
call
repnz
shlb
ror
ss
cmp
sar
jmp
mov
test
jmp
loop
ror
clc
enter
pushl
cld
cmpb
ds
stc
loop
std
jmp
ljmp
jecxz
aam
call
xlat
loope
std
cmp
rol
jecxz
cmp
jmp
out
lret
lret
std
repnz
div
sti
fmul
lret
cmp
sti
sar
cmp
out
aas
out
ffreep
cld
adc
in
xchg
test
clc
in
enter
test
roll
fildl
jmp
mov
ljmp
fdiv
xlat
icebp
xor
ljmp
in
and
lret
sub
fucomip
lret
lock
fdivp
mov
sar
mov
push
pushl
call
jmp
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
sub
jg
test
jle
lret
into
out
mov
into
cmp
ljmp
call
rolb
sti
jecxz
clc
in
xor
and
hlt
shl
sub
cmp
aaa
hlt
clc
cmp
cmp
fdivrl
loop
shl
in
stc
iret
xlat
int3
cmp
xlat
enter
out
cld
fcmovbe
fadd
aad
sti
mov
shl
test
in
enter
int
testl
std
loopne
in
xchg
xchg
jecxz
in
rol
out
xor
cld
stc
lock
mov
fildl
mov
add
jecxz
clc
imul
cld
enter
fdivr
cli
aam
orl
fucomp
mov
das
sarl
fcmovnu
lret
cmp
div
stc
enter
add
in
nop
jmp
in
loopne
out
in
jmp
aam
stc
ds
cmp
add
rol
xchg
lock
lret
in
int3
cli
xlat
ss
iret
in
leave
xlat
sarl
cmc
hlt
out
clc
fidivrl
faddp
mov
std
ror
loopne
icebp
out
rcl
sub
in
std
or
out
roll
fimull
roll
loop
fcomi
not
aam
repnz
clc
cmp
repnz
aad
ljmp
rcl
ss
in
repnz
sti
int3
leave
std
shl
rol
fiadds
enter
fdivrp
mov
icebp
ljmp
cmp
xor
int3
fdivrl
int3
lock
xor
jmp
mov
ror
ljmp
aad
std
ror
in
xchg
jmp
call
repnz
xor
aad
cld
into
fidivrl
lret
int3
aam
cli
shl
xlat
mov
call
int
loope
fcmovu
int
loopne
jecxz
ljmp
int3
icebp
fyl2x
rcr
in
out
cld
rorb
iret
aas
lret
hlt
cli
aad
xor
fabs
fucom
out
loopne
clc
cli
in
repnz
lret
leave
int
icebp
fcmovne
stc
cmp
sti
fimull
fildl
int
lret
lret
fmul
lret
icebp
into
rcr
shl
addb
ret
clc
fisttpl
fst
lock
test
cld
rol
cmp
repz
rcl
rorl
out
test
xchg
aad
in
cmp
clc
ds
flds
xlat
out
in
jmp
fcom
ror
cmp
jne
jmp
enter
rcr
adc
lock
sbb
jle
add
jmp
cld
cmc
cmp
roll
loop
int
in
shl
enter
div
xlat
fucompp
cld
repz
mov
in
loop
filds
xor
out
xor
cmp
shr
incb
filds
out
jmp
repz
xor
out
cld
cld
in
rcr
aaa
sar
inc
lret
loop
fcmove
xor
lret
aaa
in
out
jmp
fdivr
iret
lret
test
fdiv
mov
mov
xchg
call
int3
cmp
shl
int3
aas
sarb
stc
lds
shl
jmp
out
iret
mov
iret
loope
icebp
cld
enter
repnz
sti
clc
xchg
ljmp
into
test
in
fsubp
aaa
call
fdivrl
lock
sar
rol
aam
std
std
xlat
fsub
std
xacquire
loop
cli
jmp
repnz
fdivr
aad
enter
hlt
loop
lret
call
int3
shll
shll
int
in
int
iret
sarl
std
xlat
ret
in
out
int
into
lret
repz
aad
aad
jmp
out
call
rolb
out
xchg
out
icebp
std
inc
lret
lock
shl
ret
rol
fisttpll
stc
into
in
loop
sub
ss
icebp
in
int3
ror
not
sbb
aas
fnop
fdivr
aam
xlat
int
ffreep
out
in
nop
jmp
xlat
ljmp
jmp
icebp
out
fdivrp
ret
cld
mov
fimull
lret
repnz
aam
fxch
fst
sti
neg
cmp
rcr
in
loope
aad
ret
mov
hlt
mov
bnd
sarl
clc
repnz
ffree
lret
loope
in
ror
mov
lret
divb
cmp
neg
rolb
rcl
aam
sti
fcomp
aad
out
and
aad
in
ret
lock
std
out
sti
in
cmp
test
test
flds
and
test
loop
clc
in
shl
cli
test
cli
xchg
lret
mov
int3
aad
shr
lret
out
xor
hlt
sti
repnz
neg
rcr
lret
lret
orb
xorl
ljmp
idivl
shl
std
cld
rcr
fsub
test
out
fildl
test
xchg
clc
ljmp
ror
aad
ret
loope
inc
lock
add
jmp
rcl
rcl
aad
mov
call
jg
test
jle
out
ret
xchg
cli
lock
into
in
jecxz
shl
jmp
idiv
loopne
lock
fadds
test
out
test
ret
xor
ss
sti
bnd
cmp
repz
loope
xlat
in
xchg
xchg
int
out
shl
out
leave
xor
int3
aam
cmpl
mov
lret
shl
hlt
xchg
jmp
int
cmp
fdiv
fdiv
jmp
xchg
inc
int
loopne
xchg
lret
sti
repnz
call
int
sar
stc
in
rol
out
xlat
loop
imul
enter
xor
lret
repnz
cmp
out
ret
cld
cli
call
fdivrp
mov
leave
jecxz
xchg
xor
jmp
lret
cmp
stc
in
xor
mov
xchg
jmp
call
cmp
shl
in
cmp
ret
imul
test
fists
ret
cmc
xor
sub
cli
call
xlat
add
out
jecxz
lret
sbb
repz
out
aam
int3
enter
aam
sarb
aas
test
fcomip
aas
add
rcr
fdivp
xchg
in
in
sar
in
clc
out
cmp
shl
ds
rcr
lock
ret
into
lret
jecxz
adcl
shl
cs
ss
aaa
fucomip
aam
icebp
sar
neg
out
aad
in
out
mov
int
sub
iret
out
fld
testl
xlat
test
out
int
rcll
lret
aaa
cmc
cld
loopne
faddl
sar
cli
mov
out
in
std
xchg
repz
shl
std
icebp
lret
idivb
loop
cmp
jecxz
loop
loopne
ret
mov
repnz
out
xchg
ljmp
aad
fsubrp
lock
fmul
faddp
xchg
xlat
int3
out
out
call
loop
aaa
shll
fucomi
adc
loope
cld
mov
clc
out
add
repnz
rcr
aam
fxch
repz
lret
loope
cmp
out
stc
aad
sti
hlt
loope
and
xchg
xor
cmc
call
call
stc
aam
hlt
in
aam
cmp
mov
xchg
lock
in
in
aad
aad
loopne
ds
call
in
into
leave
cli
rclb
jecxz
sub
cmp
sti
fsubr
ffree
fiaddl
orb
add
rcl
lret
rcr
ficoms
cmp
jg
test
jle
mov
adcl
iret
stc
fnsave
cld
cli
fildl
out
sti
les
nop
fucomi
leave
mov
in
ss
fucomi
cmp
int
cmp
repz
test
vpsraw
popl
iret
adcl
out
leave
int3
lret
cld
repz
xchg
int
fisttps
xor
xor
cld
sarb
iret
clc
xlat
aad
int
rorb
cmc
mov
stc
out
into
call
jecxz
cmp
fdivp
call
cmp
cmp
clc
adc
orl
std
and
lret
lret
in
loope
out
ror
lret
sarb
rcr
in
fcmovnbe
loop
call
mov
leave
mov
rcl
sti
fcmovu
cmc
cmp
loopne
hlt
lock
repnz
hlt
les
fisttpl
loop
frstpm(287
aam
cmc
into
clc
fdivrp
sti
cmp
stc
loop
test
xor
int
in
iret
nop
xchg
ficoms
xor
out
fcmovne
filds
idiv
mov
fsub
sar
out
in
aad
ljmp
fistpll
stc
clc
fcmovu
in
cmc
jmp
orb
aad
lret
icebp
leave
cmp
aaa
into
loopne
std
stc
fistpll
cld
test
loope
in
orl
shl
in
aam
repz
out
hlt
ds
repz
mov
divl
in
xor
in
repnz
cli
cmp
std
rol
mov
out
jecxz,pn
cmp
in
in
shl
cmp
neg
fcmovu
out
xchg
faddp
int3
cmc
lret
fucomp
lret
ljmp
cmp
std
cmp
stc
xlat
ret
in
and
clc
ds
in
dec
loopne
hlt
out
enter
fnstcw
in
repnz
aam
in
enter
enter
nop
loope
sub
fsubrs
cli
hlt
out
cmp
in
sar
fcmovbe
ret
into
nop
xchg
lock
xchg
shlb
cmp
ljmp
hlt
ror
rol
aam
shl
enter
in
int
hlt
repz
cs
fucomp
in
loopne
cmp
shl
fiadds
or
fsub
out
xchg
test
cmp
cs
aaa
repnz
cmp
test
test
clc
lret
lret
xor
int
icebp
cmp
roll
aam
ret
cmc
aas
in
in
lret
cli
enter
roll
leave
mov
mov
mov
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
mov
ret
dec
bound
jle
add
xor
hlt
jmp
out
in
aas
filds
sbb
std
fmul
enter
in
in
in
jmp
sarl
cmp
sbb
fstp
ret
xchg
loope
cli
test
lret
shl
fnstenv
test
repnz
ffreep
test
test
int
loope
xor
enter
add
rorl
in
stc
out
call
xchg
imul
int3
in
iret
repnz
incl
loopne
or
dec
mov
out
lret
fcmovbe
xor
leave
in
movl
fcomi
stc
jecxz
loope
xor
out
jecxz
cs
out
cmp
leave
jmp
rcr
loop
rcl
mov
int3
mov
loop
icebp
in
xchg
hlt
xchg
vpsrld
aad
cmp
cmp
cmp
out
ret
out
fxch
addb
ror
fld
std
clc
fucomp
iret
into
int3
fdivrl
ret
in
test
faddp
fxch
jmp
repnz
rcr
loope
jmp
int3
stc
mul
xchg
fdivr
mov
enter
mov
mov
jmp
int
repnz
lret
shl
lock
hlt
rcr
repnz
lret
lret
lds
in
shrl
cmp
leave
ljmp
aaa
out
call
ret
icebp
in
xchg
int
repz
repz
filds
jecxz
addb
roll
xor
repnz
call
int3
clc
repnz
cmp
test
in
stc
sti
ljmp
fnstcw
jecxz
clc
std
shl
aas
icebp
into
icebp
cli
neg
clc
xor
in
sub
xor
xor
filds
aam
fsub
xlat
jmp
and
loop
fiadds
out
out
in
lock
rcr
fcom
adc
rolb
jmp
xchg
sub
cs
leave
repnz
aam
rcl
jecxz
loope
cmp
repz
fcmovne
rcr
sub
sarb
icebp
in
aad
ds
fadd
rcr
lock
addb
mov
in
addb
out
in
ss
hlt
cmp
sar
sar
call
in
lret
nop
jmp
test
mov
in
int3
loop
mul
cmp
fcomi
lret
cmp
into
loope
addb
xchg
int3
sti
lock
xor
les
in
in
aaa
out
cmp
cmc
pop
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
daa
jg
test
jle
int
movl
test
test
rcl
ss
call
xlat
aad
loopne
fmull
nop
mov
mov
fidivs
out
xor
xlat
aad
cmp
rcr
aas
hlt
call
out
std
dec
iret
jmp
test
call
ljmp
xabort
flds
orl
sub
stc
xor
cmp
hlt
loop
icebp
out
fildl
enter
clc
cli
xchg
xchg
notb
leave
repnz
repnz
out
stc
shl
stc
aad
rorl
incb
lret
ljmp
sti
xlat
cmc
cmp
fdivr
call
testl
adc
stc
jecxz
out
icebp
cmc
xor
rolb
ror
addb
ficoml
shr
jmp
repz
cli
repz
fst
cmc
test
ljmp
lret
out
jecxz
hlt
shl
lret
out
hlt
cmp
sub
loope
aas
fcomip
ret
fsub
mov
clc
out
ljmp
repz
rcr
out
int3
xlat
out
fscale
out
xchg
fisttps
in
cli
leave
fcmovnu
xchg
ret
cmp
int
sti
fdiv
shl
loopne
in
ljmp
fdivp
test
stc
xor
fcmovnb
xor
xchg
ret
cmp
mov
iret
icebp
mov
repz
loop
repz
cmp
xor
cmp
repz
in
repnz
test
ljmp
into
fprem
idivl
or
loop
fcomip
std
aad
jmp
fucom
in
fucomip
int3
aam
ret
cmp
out
fcomp
repz
stc
add
fstpt
lret
in
lret
fcoml
sub
into
cmc
vpsubsb
cmp
into
test
xchg
hlt
xchg
call
mov
xchg
ficoml
div
in
sti
aaa
lock
lret
loop
cmp
loopne
lock
jmp
mov
fsubrp
cmc
repnz
jmp
out
int3
repz
push
lret
test
fmulp
fcom
ret
lret
clc
imul
jecxz
leave
loopne
loopne
int3
lret
lock
int
stc
repnz
fcmovnb
incb
repz
in
repz
idiv
rcl
call
repnz
fst
loopne
out
loope
adcl
idiv
test
ds
xlat
xor
roll
sub
add
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
in
std
sub
sub
test
jle
clc
jmp
shr
aas
jecxz
jmp
cli
lock
rcr
fst
jmp
ret
out
xchg
in
repnz
test
in
sarl
sti
iret
clc
idivl
rcl
idiv
std
bnd
leave
jmp
ljmp
xlat
aaa
sarb
fnsave
xor
aas
bnd
fadds
test
repnz
in
out
jmp
cmp
cmp
neg
idiv
xlat
test
jmp
jmp
das
in
in
cmc
cmp
div
aam
xor
out
xchg
mov
jmp
out
in
lret
cmp
not
sub
cmp
int3
repnz
cld
aam
sbb
in
loopne
rorb
shll
aaa
in
cmc
cmp
std
repz
in
std
lret
jmp
fisttps
loopne
out
std
ljmp
in
xor
mul
faddl
enter
iret
xchg
ljmp
out
cmc
rcr
cmc
aad
cmp
sar
out
leave
fstl
xchg
leave
out
cmp
cmp
sub
cmp
mov
imul
nop
int3
out
lret
fcomip
lret
lret
cs
sti
out
rcr
rcl
neg
xlat
clc
testl
out
in
lret
shr
call
clc
cmp
jmp
loope
shr
leave
xor
loop
fsub
cmc
idiv
fdivr
cli
sub
neg
fcmovnu
mov
out
int
repnz
int
in
repnz
aaa
into
jmp
cmp
sbb
sti
mov
testb
push
xor
enter
out
int
ror
ret
adc
rol
aam
sti
sub
int3
mov
xchg
nop
xor
shr
repnz
aam
int
test
call
repnz
test
out
lret
ljmp
into
out
rcl
div
ljmp
repz
sub
shll
in
out
cmp
iret
shl
bnd
out
mov
loopne
xchg
std
lock
ret
out
in
enter
dec
fstpt
loop
aaa
loope
addb
incb
xchg
out
rcl
enter
out
cld
shr
fst
cmc
clc
mov
stc
ljmp
shl
int3
lock
cld
icebp
iret
fdivr
ljmp
les
stc
rcr
loop
int3
iret
enter
or
cli
sar
decl
ret
add
int
ret
int
movsb
inc
push
fadd
xchg
icebp
pusha
sub
jle
add
in
xor
cmc
idivb
sti
ret
fdivr
sti
rorb
out
rolb
aam
shlb
rol
enter
cmp
cld
shl
sar
out
xchg
test
aam
icebp
das
cmc
iret
fnop
cmp
stc
loope
fucomi
xchg
les
in
mov
stc
cli
dec
test
icebp
out
loopne
cli
fmulp
adc
loopne
cmc
cld
loope
mov
nop
enter
in
xchg
cmc
das
cmp
cmp
cmp
hlt
lret
ds
aad
xchg
rcr
xchg
fdivr
sti
dec
jmp
ficoms
cld
lret
out
out
cmp
sti
stc
cmp
mov
enter
sti
mov
incb
fdiv
repnz
cmp
repz
in
sar
test
leave
std
shr
loopne
mov
lock
in
cmp
xlat
fdivrl
cmpl
jmp
ljmp
out
xor
clc
lret
fld
ret
lock
fscale
mov
mov
int3
mov
xor
out
cmp
aaa
aad
jecxz
fildl
fadds
addb
jmp
cmp
repz
aaa
icebp
sti
in
stc
test
xchg
cld
ljmp
ss
call
repz
out
rcl
out
not
std
fcom
ljmp
into
out
call
ljmp
aaa
out
cmp
jecxz
xlat
mov
test
in
shr
in
ss
dec
fdivrp
cmpl
aad
mov
sti
mov
cmc
shr
repnz
lret
leave
aam
loope
incl
xor
mov
xchg
out
int
xchg
xchg
fmul
int3
fidivl
out
sti
clc
stc
aaa
lret
into
rol
rorb
cld
lret
test
ljmp
jmp
loopne
shll
incb
call
fstl
fstl
shr
lret
lret
fcomi
in
mul
aas
lret
call
fmull
sub
out
out
call
fadds
xchg
lret
sbb
fildl
cs
rcl
lock
in
cmp
cld
rcr
ret
sti
jmp
xor
clc
iret
mov
icebp
jmp
ljmp
sar
fcomi
in
shl
fcmovbe
aam
sub
nop
loope
in
jecxz
nop
shl
xor
cmp
in
out
cmp
xor
jmp
ret
int3
rcl
ret
fldl
dec
pop
mov
jg
test
jle
ror
push
shl
mov
in
incl
nop
fst
call
cmp
out
fcom
int3
xor
and
shl
in
ret
loopne
lret
in
repz
xlat
jmp
lret
not
das
fcomi
sar
aas
loope
aad
fcmovu
fstpt
ljmp
ret
clc
xor
repz
icebp
lret
hlt
jmp
loopne
shl
in
jmp
rolb
enter
clc
call
aaa
incl
ljmp
int
enter
xchg
lret
out
div
repz
ret
sarl
cld
fsubr
sub
shr
jmp
int3
loop
rol
out
fcmovu
out
xlat
repnz
aam
in
mov
out
loop
iret
into
shr
xchg
lret
in
enter
repz
sarl
stc
testb
loop
enter
cmc
icebp
icebp
aaa
into
xlat
loope
repz
fidivrs
in
fdivrp
xlat
out
test
xchg
mul
lret
lret
cmp
ss
aam
cmp
lock
sbb
faddl
xchg
xor
out
in
fcom
ljmp
mov
test
mov
fisttpl
ret
sti
leave
int3
cmp
out
cmc
lock
in
out
hlt
jmp
sti
int3
rcr
mov
in
int
clc
xor
shl
fldz
neg
cmp
adc
leave
ds
leave
rcl
in
out
ljmp
repnz
ror
loopne
cmp
cli
cli
out
test
loope
xchg
repnz
xchg
xchg
xor
clc
xlat
in
cld
int
fsub
repnz
rol
fimuls
fildl
out
out
lret
hlt
shl
xor
stc
jmp
out
rolb
out
loope
enter
ret
fisttpll
enter
ljmp
out
rcl
cmc
enter
jmp
test
call
ljmp
cmp
repnz
cli
shr
clc
idiv
out
ljmp
xor
cmp
std
xor
aad
xlat
rcl
div
lret
in
fimull
in
aaa
enter
fdivp
cmp
cmc
cmp
rolb
adc
jmp
sbb
aaa
out
not
repz
shl
cmp
addl
xlat
mov
test
loop
sub
xchg
ror
xor
xor
ror
flds
sar
loop
cmp
pop
add
jmp
fadd
aam
fst
fcoms
sbb
jg
clc
ficoml
xor
test
jle
test
jmp
test
aad
sub
shl
leave
lock
cmp
cmp
jmp
fsub
out
rcll
shl
test
cmp
icebp
div
cmp
aad
test
decb
in
iret
out
aam
cli
cmc
aam
in
sar
shl
icebp
addb
icebp
repnz
ljmp
hlt
cmp
aad
cli
stc
fsubp
jmp
adc
ss
cli
repz
rol
clc
cmc
aas
filds
sub
xchg
adc
xor
icebp
in
ret
fildl
jmp
cld
adcb
xor
jmp
fdivrs
aam
ds
jmp
leave
in
std
int3
icebp
mov
out
loopne
repnz
fmul
in
fmul
out
loopne
repz
cli
call
loop
out
cld
mov
xor
cmp
enter
in
repnz
repnz
out
in
test
cmp
fildl
hlt
in
cmp
cmpb
aad
cli
ret
leave
leave
call
incb
xor
ror
out
cmp
repz
cli
fcom
addl
or
out
jmp
icebp
ljmp
lret
fnstcw
stc
aad
in
out
ret
enter
out
xchg
xchg
fdivrl
jmp
icebp
ret
xchg
loopne
sti
in
xchg
sub
mov
mov
shr
int3
int
jmp
aad
clc
loopne
cmc
ds
rolb
loopne
loope
iret
loope
mov
ljmp
ss
lret
loopne
cld
jecxz
out
addb
lock
int
in
sti
ljmp
adc
neg
repnz
call
stc
into
in
sti
fsubrp
sub
xor
cmp
cmp
ds
in
rol
rcr
rcr
stc
test
ljmp
jecxz
call
not
xor
aad
cmp
cli
ljmp
repnz
out
mov
lock
jmp
test
xlat
in
lret
aam
hlt
ljmp
cmp
xchg
test
lret
aaa
leave
shr
enter
lret
in
test
shl
cld
lds
fmulp
fdivrp
xchg
cmc
cmp
shrl
cld
dec
fcomp
hlt
filds
repz
mov
ror
sub
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
xchg
sub
fiaddl
jle
lock
shlb
out
cmp
cmp
icebp
cmp
ffree
loopne
loope
fsubp
ftst
sub
mov
lock
xlat
cmc
iret
div
aam
shl
addl
mov
fdivr
out
xchg
repnz
ljmp
out
ljmp
cld
sar
rol
in
neg
clc
in
xchg
xor
leave
lret
fmul
test
ds
flds
xchg
mov
icebp
cmp
out
cmp
int3
in
loopne
idiv
out
jecxz
cmc
out
test
cmc
cmc
mov
fdivp
sarl
in
fnstenv
jecxz
out
sarb
fstp
cmp
hlt
clc
incb
cld
fsubrp
out
cs
clc
out
das
neg
fcomip
iret
cmp
in
stc
ds
xlat
loop
mov
mov
enter
in
cld
aam
repz
stc
int3
test
add
cmp
int3
cmp
cmp
filds
out
hlt
int
fnop
iret
fldln2
repz
aam
fst
ret
or
xchg
in
xchg
xchg
pop
sub
ret
fsubr
in
loopne
ret
faddp
enter
enter
enter
jmp
shll
in
fnop
clc
fcmovne
std
aam
int3
lock
fld
aad
repnz
xchg
or
lret
out
loope
into
rcl
cli
cmp
aas
flds
in
repz
out
jmp
jecxz
in
jmp
into
lret
not
sar
cmp
in
fiaddl
test
mov
in
test
fsubrs
cli
xor
out
shr
ret
out
div
shl
leave
orb
adc
loope
in
jmp
int
cmp
in
roll
in
loopne
into
sti
mov
iret
shr
sar
cs
lret
out
xor
cli
cmc
test
les
enter
mov
lret
aam
hlt
into
xor
cld
sar
hlt
fcomi
test
fdivr
cmc
fimull
fiadds
leave
cmp
ror
cli
cld
les
rol
fmul
xchg
out
out
out
cmc
repnz
int
xor
fsubp
loope
add
lock
out
loope
enter
shlb
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
in
sub
aaa
jg
fiaddl
jle
mov
iret
in
aaa
loopne
loop
aam
cmp
lret
hlt
icebp
or
repnz
cld
test
xor
xor
int
repz
repz
enter
test
leave
or
in
in
mov
aad
cmc
divb
push
loopne
ret
repnz
iret
in
fldl
cmc
in
repnz
lock
in
ret
std
ret
fmul
mov
out
out
std
adcb
into
xlat
vaddsubps
aad
into
ret
cmc
xlat
xlat
sti
loop
out
test
into
std
out
out
xchg
icebp
int
rol
ss
out
not
rol
std
sarl
int
cli
test
int
lock
call
aaa
jmp
fnstcw
loopne
xchg
out
icebp
stc
xlat
in
jecxz
stc
nop
mov
fcom
in
aam
out
out
int3
cmp
fprem1
mov
xchg
rolb
sub
xor
out
imul
fdiv
test
loop
testl
int3
mov
rcl
iret
in
cmp
repz
fldl2t
fcmovnu
cli
shl
lock
in
test
in
loop
out
bnd
lds
cmp
cmp
loopne
fidivrs
addl
mov
in
lret
out
xor
repz
repnz
int3
fcmovnbe
and
xor
cli
ret
mov
jmp
jmp
call
repz
cmc
cmp
fcmovb
cld
test
fiaddl
out
fxch
out
repnz
aam
lret
das
fdivrs
rcl
shl
loopne
call
int3
mov
lret
xchg
loope
sub
xor
ss
shr
in
call
fdivr
roll
loope
loop
std
out
xchg
nop
out
out
xlat
cmp
cmp
fcomip
loopne
aad
fsubr
fimull
ljmp
ret
into
fsubrp
out
ljmp
stc
fldpi
sub
call
mov
mul
aad
into
cmp
cmp
ds
xchg
bnd
fsubrp
xchg
not
enter
lock
repnz
ret
fdivrl
cmp
xor
inc
or
test
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
inc
les
fiaddl
jle
test
int
xchg
mov
call
ss
shlb
hlt
repnz
shr
les
decl
loopne
xor
int
out
into
out
ret
xlat
aas
fsub
sar
std
xchg
decl
call
cmp
ss
in
int
cli
hlt
out
loope
mov
std
xchg
ror
repnz
shr
test
lds
xor
enter
ret
cld
xchg
out
filds
in
ss
clc
sti
ss
enter
aad
loopne
mov
fimuls
sbb
xchg
aad
aam
cmp
cmc
cmc
fucomp
fistpll
aas
iret
aas
repz
jmp
mov
int
xlat
stc
std
std
hlt
jmp
xlat
loop,pt
fxch
filds
cmc
lock
ss
cmp
fdivrl
ss
addl
lret
or
mov
mov
mov
neg
cmc
repnz
aam
ljmp
xlat
ficoms
repz
fsubrs
in
cld
leave
hlt
leave
sar
aas
aad
fucom
jecxz
xor
mov
call
call
lret
jecxz
iret
fldl
ret
movb
loopne
in
in
fcomp
std
cmp
cmp
incb
sti
repnz
xlat
divb
enter
fdivrl
icebp
cmp
testl
test
ror
xor
rol
ljmp
not
cmp
in
sar
fstp
fmull
rclb
clc
cld
cmp
out
ljmp
aad
cmp
leave
lret
in
iret
loopne
mov
mov
aam
imul
rcr
int3
fadds
loope
ljmp
into
addl
ror
cmp
lret
stc
test
loopne
cmc
loop
mov
cld
mov
lock
in
cmp
in
div
cmpb
xchg
fdivrp
sti
jmp
in
lret
call
fimuls
fsqrt
in
out
testl
mov
movzwl
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
mulb
cmp
fiaddl
jle
cmc
call
mov
fstl
shr
cmp
in
fcomip
fdivrp
neg
shl
shl
fstp
test
fxch
in
mov
imull
cmc
shr
repnz
ds
loope
xchg
addl
loopne
ret
cmc
jmp
cli
out
ror
jmp
in
mov
jecxz
lret
out
out
out
shlb
cs
ljmp
loopne
clc
fldl
flds
lret
in
xchg
into
repnz
enter
out
lret
in
lret
sar
ret
mov
loope
xlat
iret
fdivrp
loope
fsubrp
call
out
test
loopne
in
sti
neg
mov
repnz
ljmp
leave
cmp
iret
lock
sar
incl
out
in
int3
lret
xchg
test
xchg
int3
cli
iret
idiv
ljmp
ds
aam
out
enter
test
out
loop
in
shl
sub
xlat
int
cli
shl
rcr
loop
ljmp
xchg
shrb
repnz
ror
enter
cmp
icebp
stc
out
lds
into
adc
cs
shl
iret
shl
xor
ds
fmul
add
xchg
xchg
int
int
addb
cmc
cmp
lret
xor
hlt
in
in
loope
adc
cmc
clc
and
std
mov
ljmp
xor
shr
fdivrp
out
fadd
rol
test
into
dec
std
loope
xor
xor
cmc
fcomp
int3
repnz
aam
clc
faddl
loopne
int
into
aaa
shl
cmc
into
in
out
cmc
sti
cmp
div
fcmovnb
mov
jecxz
in
ljmp
div
xor
in
aam
lret
in
aam
clc
xor
jmp
sti
int
mov
loope
aam
jecxz
clc
ds
cld
fdecstp
push
repnz
ret
loop
mov
in
sub
cmp
sar
jmp
cmp
sti
cmc
enter
icebp
xchg
lret
cld
ljmp
call
out
neg
jecxz
add
cld
rolb
cmp
sub
jmp
ror
rcr
ror
js
cmp
pop
jle
jg,pt
fiaddl
jle
test
cli
mov
cli
in
std
out
lock
rorb
into
stc
cmp
out
incb
sti
shl
icebp
fstp
decb
xchg
sub
leave
xor
fdivrs
out
loope
in
mov
fcmovu
jmp
ficoms
in
ror
xor
rcl
cmp
cmc
cld
stc
out
ror
jecxz
loope
in
jmp
mov
fists
enter
repnz
loope
addl
enter
lret
fst
jmp
loopne
rcr
sar
in
cmp
iret
out
repnz
out
rorb
in
call
in
mul
xor
in
icebp
cmp
repnz
fcmovbe
aas
sbb
xchg
in
clc
in
mov
in
in
repnz
divb
lret
lock
divb
fdivp
test
in
loop
std
xchg
orb
cs
repz
stc
out
test
jmp
sbb
mov
out
test
in
cmc
loope
shl
iret
hlt
in
aad
shl
cld
out
lock
mov
aaa
icebp
cli
fcmovbe
cmc
cmp
fdivr
out
aas
leave
mov
call
mov
jmp
xor
in
icebp
lock
sar
loopne
shl
ret
shr
ret
jecxz
out
out
fldl
repz
out
cmp
call
shr
clc
idiv
add
mov
mov
out
lock
into
cmc
cmp
out
test
cmp
cmp
out
fndisi(8087
in
orl
out
xlat
sar
stc
iret
lret
fcomi
lock
sti
cmp
in
decl
mov
stc
xor
fucomp
cmp
fld
fildl
out
sbb
rolb
xor
cmp
in
into
jmp
repnz
aad
xlat
xchg
lret
into
lock
div
cmp
cld
jmp
sbb
dec
ret
in
test
testl
xabort
fcmovnu
neg
cld
jmp
loop
rcr
hlt
enter
fcmovne
in
ljmp
in
xor
cmp
loopne
inc
fsubs
test
add
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
insl
push
movsb
stos
sarb
add
jecxz
std
shl
cld
sti
shr
in
mov
in
xchg
loop
in
idivl
xor
aaa
into
ss
repnz
aad
mov
fnclex
out
sar
in
ror
into
ds
jmp
fdivrs
frstpm(287
sbb
test
addb
out
shl
repnz
in
lret
sarb
fld
cmp
in
call
rorb
repz
cmp
clc
lret
lock
sar
cld
sbb
icebp
test
repz
into
cmp
int3
int
ret
iret
xchg
out
mov
loop
xchg
in
fmul
lock
rol
cli
not
cld
rcr
in
imul
in
in
test
int3
in
jmp
icebp
ss
jmp
cld
hlt
cmpb
call
in
addl
xchg
in
lock
test
enter
shl
and
movb
xor
int3
ret
loope
jmp
clc
std
xor
sbb
int3
iret
out
test
icebp
fisttpll
idiv
fucomip
fst
rolb
not
in
cli
loopne
hlt
hlt
into
push
ss
icebp
aam
imul
std
in
cld
sti
sti
xor
xchg
in
xchg
adcb
out
imul
shl
ljmp
out
hlt
jmp
mov
loop
rcr
in
aaa
call
fprem1
fdivp
xlat
repz
ret
out
cli
ds
loopne
fsub
sub
sti
xor
lret
repnz
iret
out
cmp
div
ffree
std
ret
test
mov
mov
fucomip
mov
xchg
jecxz
lret
sar
int3
loope
cli
xor
fadd
and
rorb
out
out
fldl2e
into
int
xlat
repz
loope
cmp
sti
ljmp
call
jmp
xlat
fnstenv
xor
sbb
sbb
neg
out
mov
mov
nop
leave
mov
nop
aad
xor
sub
cmp
lret
or
cmp
jmp
enter
loop
icebp
incb
ret
int3
out
add
movl
cmp
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
mov
ret
jg
fiaddl
jle
sarb
jmp
aas
ret
ret
jmp
out
clc
xchg
aas
clc
in
lock
out
add
test
hlt
in
lea
cmc
out
aam
in
fcomi
cli
into
call
ds
mov
lret
lea
xchg
xchg
iret
rcl
rcl
aam
into
repz
cmp
loopne
xchg
cmc
test
call
jecxz
loop
leave
hlt
sti
cmp
leave
sbb
loop
fcmovnb
fmul
mov
in
fst
xchg
jecxz
iret
enter
clc
fdivp
cmp
xlat
fmul
cli
cli
out
mov
orl
rcll
loop
rcr
lret
fstp
jmp
icebp
addb
loopne
loope
test
addb
cmp
in
ror
icebp
int3
rcr
lock
cmp
idiv
out
fdivr
in
iret
mov
test
cmp
fiaddl
ret
ffreep
xlat
mov
int
repnz
shl
aad
sarl
idivb
shr
leave
loop
xlat
hlt
in
loope
std
xlat
aas
mov
xchg
nop
shr
in
mov
int3
out
lock
leave
cmp
aad
into
aaa
cmp
enter
int
sar
ret
cmp
cli
in
loopne
int
cmp
cli
cmp
decl
jecxz
iret
filds
cmp
int
int
xlat
shl
repnz
cmp
cli
in
call
in
mov
mov
fdivs
stc
aad
lret
loopne
int
loop
in
loope
mov
xchg
shl
xorb
into
in
cli
xlat
filds
leave
mov
lock
test
into
in
clc
enter
xor
repz
out
out
mov
out
aaa
not
aad
sti
ds
rcr
aaa
addb
in
in
in
in
iret
shll
enter
xor
cmc
sti
idiv
sbb
rol
ror
clc
int3
mov
mov
sti
rorb
leave
cmp
cmc
xor
cli
iret
xlat
cld
jmp
fsubr
xchg
call
into
xchg
loop
leave
clc
aad
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
pop
add
jg
fiaddl
jle
cmp
fldl
int
test
leave
in
repnz
nop
test
jmp
xlat
into
shr
in
xor
mul
cmp
stc
movl
jecxz
loope
cmc
jmp
cmp
loopne
sbb
mov
sub
or
in
popl
out
cmc
cmp
cmp
iret
mov
stc
jecxz
dec
rorl
int
cmp
xor
repz
loop
cld
rol
clc
xlat
in
test
xchg
test
cmc
nop
out
lret
fsubr
out
into
cld
in
cmp
loop
lock
std
mov
sti
shl
xchg
loope
xor
iret
call
lock
loopne
sar
lret
into
out
ret
repnz
icebp
out
cmp
loop
int
iret
cmc
jmp
lret
sti
xchg
ret
movb
xchg
lret
iret
ret
jmp
into
repz
cmp
addl
sar
sti
fcomip
xchg
enter
xlat
out
cld
shr
flds
stc
call
cli
loopne
rclb
loope
hlt
cmp
div
xor
rcr
cmp
fld
out
ljmp
into
xchg
nop
aad
into
fdiv
fsubr
int3
repnz
ffree
xor
std
lock
orb
fsubrp
rorb
cmp
shll
lock
xchg
fimuls
out
xchg
xchg
mov
xor
idiv
idivb
enter
in
rol
cld
call
fsubr
out
call
leave
fcom
into
rcr
in
xlat
aas
rol
lret
vpsubusb
icebp
repnz
lds
into
xlat
aad
ds
clc
cmpl
in
mov
sbb
std
lea
loopne
rcl
repz
repnz
fidivrs
ds
loopne
cmp
mov
in
xor
cmp
loopne
ret
hlt
enter
cld
fsubr
std
xchg
xchg
shr
in
out
iret
cmc
cmp
ret
in
cmc
leave
jecxz
jmp
orl
xorb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
out
imul
fiaddl
jle
sub
idiv
stc
idivb
out
std
repz
fadd
in
enter
sti
loope
icebp
ret
xor
jmp
cmp
loope
aam
cmp
loope
std
fadds
ljmp
xor
fprem
idivl
int
adc
aad
movb
stc
mov
shr
std
lock
repz
cmp
cmp
lret
call
int3
mov
jecxz,pn
in
lret
clc
rcl
loop
repnz
jmp
jmp
loope
call
xor
aad
iret
xlat
jmp
sti
idivl
hlt
lock
cmp
jmp
shl
xchg
in
repnz
cmp
in
xlat
cmp
xchg
jmp
stc
mov
out
addl
call
lock
fcomip
rol
in
neg
xchg
std
fldl
xchg
jecxz
shlb
iret
lret
sarl
cmp
jmp
out
test
mov
adc
sub
sub
sti
loope
aas
test
icebp
repz
aam
sti
loopne
fmul
jmp
in
iret
fcomip
fcom
cmp
fdivl
std
rol
in
not
fstpt
incl
in
mov
stc
out
incl
out
cmc
xor
out
cmp
loop
hlt
inc
jmp
in
mov
leave
xchg
xchg
out
jmp
xor
in
xor
icebp
out
loopne
aas
loope
repz
std
rolb
xchg
mov
call
test
cmp
lret
shr
out
in
testl
shr
into
jmp
int
cmp
shr
xchg
idivl
test
fxam
shl
into
iret
out
into
mov
ror
in
enter
div
cmc
fdivr
lock
fdivr
fiadds
cld
shr
out
ror
call
int3
clc
clc
in
rol
xlat
test
lret
xlat
mov
fiaddl
in
ror
jmp
stc
enter
fcomp
shr
sarl
roll
out
out
xchg
loope
ror
xor
loopne
shr
hlt
out
ret
in
testb
sti
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
sbb
sbbb
jg
fiaddl
jle
hlt
test
fucomip
lret
mov
fdivrs
shl
into
ds
rol
movb
stc
shl
repz
mov
ror
xor
clc
iret
aaa
fidivrl
rorl
dec
out
jmp
ror
in
iret
cmp
ror
ds
ret
ljmp
mov
in
ret
xor
in
call
std
ffree
aad
cli
mov
sub
loop
test
mov
not
xlat
int3
cmp
std
ljmp
sbb
fdivr
loop
cmp
test
mov
into
xabort
lret
cmc
shr
std
hlt
aad
cmp
call
out
fcomip
mov
shll
enter
iret
divb
cmc
ds
cmp
sar
out
rcr
cmc
loop
fucomi
sti
loop
repnz
int3
xor
lock
into
jmp
fldl
enter
sub
out
out
out
icebp
rcl
cmp
cmp
cli
cli
xchg
xchg
int
loope
repz
jmp
lock
repz
aaa
call
fldl
xchg
addl
jmp
ljmp
loop
jecxz
clc
ror
fcmovnbe
std
loop
loop
addb
leave
in
aam
xor
testl
ret
stc
std
fisttps
incl
in
cli
ss
cmp
iret
xlat
fcmovb
in
aam
loopne
out
repz
lret
aaa
lret
fmul
sti
fucomp
fcmovbe
sti
lock
sar
fldl
out
loop
repz
call
cmp
aas
cmp
jecxz,pt
ret
lock
repnz
xchg
in
iret
in
xchg
in
in
rcr
cmp
repz
aas
ss
aad
in
out
mov
loop
loopne
sub
leave
loope
out
ss
clc
xlat
into
out
fsubr
test
into
flds
lock
shll
int3
aam
int3
jmp
cmc
repz
ret
fnstcw
loop
cld
les
in
loop
xor
shl
div
cmp
cmp
cmp
cmp
cmpl
lock
leave
loope
movl
jmp
rcl
ret
fucomp
insb
fstps
fwait
and
jle
add
mov
loope
out
div
repz
fldlg2
rcl
std
testl
xchg
and
cmc
in
rcl
fcmovnb
aaa
fincstp
fidivrl
sti
out
test
test
loop
ljmp
call
cmp
xor
cli
in
sar
cmc
out
ret
clc
test
int
rorl
xor
xlat
cs
stc
lret
loop
stc
cld
xchg
mul
testl
or
loopne
stc
jmp
fdivl
stc
into
adc
loopne
out
cld
movb
jmp
in
iret
ljmp
cmc
ljmp
cmp
aam
mov
fldl
decl
cmp
cmp
jmp
hlt
icebp
sti
jecxz
fucomp
std
in
test
ljmp
out
lret
int
ljmp
fxam
repnz
test
out
loop
adc
std
out
in
sti
fsub
ffreep
loope
stc
adc
incb
xor
xchg
icebp
ss
jmp
int
cld
int3
in
ds
cmp
flds
into
hlt
aad
shl
jmp
in
cmp
aam
idiv
rol
fsubr
aad
movb
mov
loop
loope
xor
hlt
aas
cmp
cmp
clc
loope
in
addb
ljmp
jmp
faddl
fdivrp
cld
enter
incb
cmc
das
xor
xor
enter
fcmovne
in
loope
ret
ret
int
fcomp
in
call
loopne
shll
fdivrs
aaa
ds
cmp
fmul
mov
int
jmp
fsubrp
lret
xor
xor
into
jmp
fadds
rolb
loopne
test
mov
or
rol
jmp
call
inc
idiv
fsub
std
sti
mov
xchg
out
out
test
jmp
cmc
cli
cmp
aam
repnz
xlat
out
xchg
in
enter
xchg
int3
xchg
jecxz
call
repz
iret
jmp
test
xchg
rolb
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
loope
orl
in
xor
out
sar
fnstcw
iret
sar
fisttps
mov
xor
das
jmp
cmp
out
fidivrl
mul
test
repz
ret
fsin
std
xlat
jecxz
cld
call
cmp
jecxz
std
cmp
aam
fdivrp
xlat
call
test
out
hlt
xchg
xchg
into
shr
ljmp
sar
loope
out
fucomip
adc
int3
int
int
xor
enter
div
cmp
addl
in
out
std
mov
leave
in
adcl
ljmp
ret
xchg
fildl
xchg
hlt
std
test
xor
into
ret
cld
cld
aaa
in
iret
hlt
cmp
enter
out
int
fstp
in
mov
jecxz
out
cli
into
out
cmp
sarl
repnz
mov
clc
rcl
leave
nop
out
icebp
leave
icebp
xor
cld
not
in
ss
hlt
icebp
fidivrs
test
jmp
fmuls
xchg
nop
aam
das
fucomi
out
fcmovnbe
rcr
clc
ds
ret
enter
in
in
orb
int3
rcr
ljmp
cmp
std
icebp
loop
fcmovu
mov
mov
out
sti
std
fucomi
out
aad
ror
out
in
ds
xlat
sar
aad
aam
neg
ljmp
enter
cmp
cmp
xlat
not
loopne
rcr
jmp
hlt
mov
call
xchg
out
out
in
int
sarl
cmc
sti
iret
clc
shl
cmp
orl
mov
xor
aad
clc
shl
aad
iret
faddp
or
ljmp
loop
mov
repnz
lock
xor
aad
repnz
repnz
fsubr
imul
fisttpll
test
out
lret
shl
out
jecxz
xor
aam
cmp
in
loopne
fidivrs
mov
rcl
sbb
stc
nop
ljmp
lret
in
repz
aas
fmul
jecxz
cmp
xlat
sub
jmp
jmp
in
jmp
shl
ljmp
decb
jo
inc
add
je
add
rcl
aad
loop
pop
sbb
mov
jg
fiaddl
jle
aad
lret
lret
out
call
repnz
loop
fxch
imul
icebp
imul
sar
fdivr
fidivrs
cld
cmp
mov
fisttpl
in
lret
int
repnz
sti
int
icebp
jecxz
stc
shl
test
into
jmp
decb
repnz
std
std
fmul
icebp
cmp
ret
aas
std
idiv
fsubr
enter
popl
in
ss
loope
xlat
std
stc
fabs
aam
dec
cli
in
xchg
stc
or
adc
cmc
sub
rol
aam
out
fsubp
iret
repnz
cmc
repnz
adc
jmp
faddl
shl
into
rcl
les
out
jmp
lret
ds
loope
sar
mov
std
fimuls
into
in
xor
enter
ljmp
test
sar
out
ljmp
rolb
repz
fsubr
jmp
neg
ror
fistpll
jecxz
loop
fld
leave
out
int3
enter
or
repnz
into
int
aas
cli
cmp
lret
xchg
pop
jmp
into
xlat
cmp
fcomi
aam
shl
out
ljmp
call
into
aam
ljmp
icebp
clc
repnz
into
fprem
sar
bnd
xlat
cmp
out
repz
rcl
cmp
repz
sti
call
aad
mov
in
cld
mov
aad
call
fstp
out
cmp
xlat
out
cmc
hlt
in
enter
enter
jmp
aaa
shr
idiv
call
aad
sar
aas
jmp
xchg
mov
shl
hlt
lock
rol
ret
xor
out
fidivrs
into
icebp
fucom
fcmovne
xchg
clc
ljmp
nop
aam
cmc
idiv
repz
les
cld
out
fmul
cli
icebp
cmp
test
xor
xabort
jmp
ljmp
cli
in
out
shll
cld
flds
cld
ror
fucomi
out
fiadds
add
shll
lock
fcomi
cmp
fcmovne
aad
xchg
enter
loop
test
xchg
rcll
cmp
repz
aaa
std
loope
pop
lock
jmp
enter
fstp
int
inc
dec
andl
push
mov
jg
fiaddl
jle
out
in
xlat
fildl
flds
call
ss
xor
xlat
cmp
idiv
fnstcw
ret
fsubrp
and
xchg
rorl
ror
cmp
cmp
rcr
fxch
in
and
repnz
ljmp
jmp
xor
lret
hlt
aad
out
sar
rcr
ds
test
enter
xor
fucom
shl
xor
lock
aam
cmp
out
sbb
test
loopne
idiv
fcom
fucomip
int3
rol
div
cld
jecxz
std
cld
mov
ljmp
mov
iret
cs
repz
in
cmp
lock
lock
loop
in
xlat
jmp
lret
xchg
hlt
out
ret
div
ljmp
in
ret
add
ljmp
xchg
jmp
cmp
aad
fptan
rol
ds
clc
fcom
idiv
testl
in
xbegin
out
loopne
repnz
ljmp
cli
int
nop
rol
jmp
cmc
xor
lock
stc
out
lret
mov
int3
aam
xchg
shl
lret
lret
fcmovu
divb
fstpt
repnz
jecxz
fcmovne
fstp
mov
loop
rorl
aas
out
xor
ljmp
sbb
filds
sub
std
sti
test
int3
loope
rorl
ror
iret
int3
clc
aam
cmp
cmp
ret
mov
xlat
ljmp
les
int
ljmp
aad
int
in
lret
orb
lock
into
hlt
ljmp
aam
icebp
repz
loopne
repz
stc
lret
int
rcll
in
into
cmp
hlt
cmp
cmp
rcl
jecxz
xchg
fdivr
cld
cli
lock
sar
hlt
hlt
xor
stc
cmp
cmp
icebp
in
aam
test
lret
stc
fst
mov
cmc
ljmp
rol
aaa
lock
aas
ljmp
out
int3
xchg
mov
ret
xor
jecxz
stc
aad
fistpll
fcmovb
add
sti
jbe
add
xchg
add
add
add
sahf
add
fsubr
rcrl
add
add
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
sbb
jg
fiaddl
jle
lret
fdivp
fcmovb
cmc
std
cli
stc
frndint
std
jecxz
xchg
mov
lret
cmp
repnz
hlt
shl
rcr
repz
decb
cmc
enter
xor
clc
call
cmp
fcmove
shr
cmp
dec
fdivr
lret
xchg
out
loopne
in
stc
shr
in
iret
jmp
out
xor
div
fsubr
loop
enter
cld
jecxz
iret
into
hlt
xor
in
jmp
fildl
cld
and
sti
mov
loope
loope
ss
jmp
xor
out
out
cmp
shlb
repnz
call
loope
std
fmull
loopne
out
clc
loop
shll
call
sar
in
rol
orl
ljmp
int3
shl
call
ret
out
fcomi
stc
incl
int3
enter
shl
stc
sub
ljmp
xlat
xlat
cmc
out
cli
aas
cmp
clc
dec
fucomip
icebp
out
loop
xchg
mov
shl
ss
divl
out
fdiv
ffree
stc
clc
fiaddl
mov
in
xor
leave
ret
cmp
cmc
cmp
cld
push
sar
fdivp
xor
and
mov
xchg
add
aaa
sti
int3
cmp
fimuls
test
fdivr
fcmovne
mov
out
stc
xor
xlat
test
loopne
lret
sub
fsubr
mov
xor
icebp
xlat
xor
cmp
test
ds
aas
rcr
sti
jecxz
not
test
in
lock
into
call
xor
shl
out
xor
xchg
frndint
shr
stc
inc
lock
jecxz
rcl
in
aas
rcl
xlat
cmp
ss
cmp
shl
faddp
clc
aad
call
lea
call
clc
in
jmp
hlt
cmp
jecxz
faddp
loopne
ret
out
fmulp
loope
orb
stc
divb
cmp
icebp
cmp
rcl
stc
orl
mov
into
out
fdiv
cmp
repz
addb
testl
lret
iret
clc
shlb
rolb
add
and
add
clc
jmp
aam
mov
int
rol
repnz
fsts
jg
fiaddl
jle
fldlg2
xor
lret
cld
shl
lock
ret
xchg
xchg
mov
mov
call
rcr
xlat
fdivrl
in
cmp
lock
aam
cli
out
iret
mov
in
fists
fstp
neg
loope
ljmp
fldpi
std
clc
loopne
stc
xchg
mov
out
and
aam
in
aam
in
loope
out
cld
lock
vpmulhw
clc
addb
in
in
icebp
lret
out
out
in
fcmovbe
out
icebp
aam
mul
repnz
fucomp
jecxz
jecxz
xchg
test
int
out
xchg
cmc
in
in
ret
jmp
into
cld
int3
cmp
incb
out
mov
lock
into
xchg
shl
xor
fcmovbe
iret
xlat
les
clc
cmc
out
ljmp
std
enter
icebp
aaa
idivb
cmp
aas
filds
cli
mov
jmp
out
xlat
in
jecxz
imul
div
fldl2t
jecxz
fcmovb
jmp
out
jmp
xchg
lea
sub
loop
cmp
into
fadd
fdivr
ret
std
cmp
or
addb
icebp
repnz
fsubr
xor
aam
xlat
xor
movb
test
fmuls
fnstcw
not
repnz
lret
sti
fildl
incl
sti
out
mov
shlb
sub
out
shl
shl
sti
cmc
fadds
out
sti
stc
lret
cli
test
repnz
lret
ljmp
fcmovne
ds
out
aam
in
jmp
in
jmp
stc
cmp
cld
xor
out
not
iret
iret
cli
adc
fstp
sti
mov
adc
xor
cmp
cmp
ret
int
f2xm1
jecxz
ljmp
cli
out
repz
icebp
not
cli
out
in
fidivrs
addl
out
sti
loop
faddl
cmc
cli
lock
xlat
xlat
cli
aad
vcmpsd
lret
out
xchg
out
xchg
in
sub
cmp
icebp
fldz
fdivrp
cmp
icebp
into
rorb
cld
out
lret
icebp
repnz
loop
add
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
cld
dec
pop
adc
add
ss
hlt
out
out
shr
out
out
aad
xchg
int3
idiv
fcomp
fcmove
jmp
xor
into
lret
sub
std
fadd
out
in
ljmp
fdiv
call
cld
into
repz
neg
aam
not
fadd
std
std
mov
out
lret
repz
rorb
ss
jmp
hlt
cli
repz
ljmp
mov
shr
out
jmp
into
stc
out
aad
fadd
rcl
xor
loop
filds
jmp
out
cmp
frndint
fucomi
cmp
xchg
sti
rol
clc
jmp
sti
loope
xchg
aad
das
clc
rcl
int
cmp
fsub
clc
cmp
jecxz
loope
loop
fistl
xchg
iret
aam
int3
cmp
imul
enter
test
test
int3
in
fmulp
in
in
lret
mov
repnz
sarb
add
fcmovne
test
ffreep
mov
test
aam
in
xor
repnz
cmp
test
fiaddl
cli
loop
loop
aam
xchg
ror
jmp
aas
ds
rcr
fld
into
out
fdivrp
aad
lret
stc
fcmovne
loopne
fisttps
in
in
leave
icebp
icebp
cmp
out
out
hlt
test
faddp
in
orl
mov
neg
xor
sti
int3
test
add
mov
in
loopne
lret
out
iret
xor
out
fxch
idivb
sarb
test
cli
cli
mov
cli
out
les
xor
out
ss
lret
fiadds
cmp
ret
flds
jmp
sub
jmp
enter
and
repnz
xchg
std
hlt
mov
xor
lret
lret
sar
fdiv
int3
jmp
loop
fcmovnu
idiv
lret
mov
shl
in
xlat
in
xor
jmp
clc
into
iret
rcr
fst
repz
fisttpll
enter
xchg
fcomip
imull
loopne
clc
clc
out
repz
jmp
icebp
clc
out
filds
std
mov
mov
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
sarl
xchg
fiaddl
jle
loopne
popl
aad
fxch
ror
fidivrl
in
repz
call
xchg
fcmovu
loope
into
rcl
repnz
into
xor
fstpt
fcomi
lock
cmp
xchg
or
shl
leave
xor
sti
in
hlt
fcmovu
fmulp
fimuls
lret
mov
ret
xor
jmp
lock
push
cmp
cmc
fisttpl
fucomi
in
int
aad
out
divl
hlt
jmp
repz
loopne
hlt
ffreep
call
xchg
incl
ljmp
shl
lret
repz
fstp
cmc
jecxz
faddp
std
or
leave
ret
shl
mov
cs
ljmp
ror
into
loope
iret
std
rol
test
xchg
xor
fdiv
std
idiv
hlt
lock
cmc
fimull
int
icebp
testb
cmp
repz
ret
and
xlat
mov
ret
test
aam
loop
leave
int
cli
fsubr
cmc
icebp
cmp
roll
mov
call
call
fsqrt
lret
std
enter
sub
lock
xchg
ljmp
jmp
xor
fmulp
aaa
out
aas
in
test
in
test
in
testl
into
icebp
repnz
in
xlat
into
aam
int
rol
out
aas
in
in
std
cli
add
in
repnz
xor
test
hlt
hlt
ror
dec
hlt
hlt
test
stc
cmp
fcmovne
mov
test
in
rcl
cmp
fdivr
cmp
stc
stc
ffreep
leave
in
mov
cmc
fcomp
out
ljmp
cmc
fadds
ret
mov
xchg
rcr
in
sar
out
stc
ljmp
cmc
not
repnz
xlat
fadds
mov
shl
enter
out
loope
repz
out
ds
ret
lret
mov
repnz
mov
clc
jecxz
lock
cmp
shl
adc
aad
loope
aam
out
stc
adc
add
jmp
aad
ret
int
fistpl
xor
fistpll
fiaddl
jle
cli
in
loope
into
in
out
iret
xor
icebp
hlt
leave
cmp
neg
fcmove
neg
repz
mov
lea
jmp
xor
iret
cmp
in
xlat
cmp
repnz
out
xchg
int
fisttps
xor
in
fidivrs
sarl
fxch
shl
fdivr
aam
enter
lret
in
xor
iret
sarb
leave
fxtract
into
fsubr
cmp
in
sti
xlat
in
enter
test
test
rcl
loop
out
cmp
aad
cmc
clc
cmp
ret
jmp
fistl
xchg
out
loope
out
into
aaa
enter
hlt
repnz
in
lds
in
in
int
xor
shr
into
xor
out
xor
cmp
repz
loop
stc
aas
fndisi(8087
out
xlat
loopne
mov
fsubrp
icebp
mov
lret
jmp
int
xlat
lock
xor
jmp
add
enter
fabs
jecxz
fstl
xor
in
into
cmpb
aam
lock
in
in
ret
flds
loopne
shlb
out
rol
aaa
iret
lock
sar
cmp
test
rcr
incb
out
xor
clc
int
lret
neg
cmp
rcl
aad
aas
sarl
shl
fimuls
jmp
into
xor
ljmp
fstpt
repz
test
fcmovnu
int
rorb
ljmp
iret
jmp
cmp
shl
ror
out
fsub
ret
int3
out
xchg
int3
cmp
xor
int3
stc
loopne
into
sbb
roll
out
out
loopne
out
out
sar
div
not
xor
leave
repnz
aam
lret
xlat
xchg
sbb
in
loope
xlat
int3
fmul
out
mov
in
not
sti
cmp
cmp
cli
clc
adc
xchg
repz
enter
mov
icebp
xor
out
rcr
std
aam
loope
ret
in
ljmp
and
mov
shr
shl
in
lock
repz
loopne
icebp
aam
shl
testb
int
into
loope
in
fmul
hlt
idivb
call
lock
out
icebp
out
imul
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
inc
pop
dec
cmp
add
stc
mul
mov
orl
aas
loope
ljmp
imul
loopne
mul
cmp
or
ffreep
enter
loop
ljmp
cmp
xlat
idiv
out
jmp
jecxz
in
enter
jmp
aaa
jecxz
rcl
aam
icebp
repz
cmpl
jmp
icebp
test
xchg
jmp
xchg
fsub
lret
xor
int
enter
lret
aam
std
in
ljmp
shl
out
test
out
rol
ss
cld
in
loope
cld
hlt
clc
rorl
sti
mov
mov
fmul
hlt
loope
ret
xor
cmp
out
enter
lock
shl
ret
aam
lret
leave
fimull
lret
in
loop
enter
cli
out
ljmp
loope
sti
fst
testb
xchg
les
das
sub
jmp
add
rcr
test
aad
mov
out
in
xor
xor
cmp
jmp
loope
xlat
fcmovbe
addb
call
fdivrp
into
orb
xor
xor
repz
xchg
test
addl
repz
hlt
icebp
out
cld
fmul
rolb
ret
out
enter
out
rcl
jecxz
clc
xor
ds
repnz
rol
mov
out
std
int3
xchg
in
shl
jmp
jecxz
lock
xor
int
addb
inc
cld
aad
fcmove
icebp
xchg
out
call
cmc
lret
xor
lret
aas
ds
repz
sti
xor
int3
jecxz
mov
in
xchg
call
fincstp
lret
aam
neg
aad
into
sar
in
out
neg
loope
and
jmp
lock
fadd
cli
repnz
out
fnstcw
repnz
add
sbb
fadd
orl
out
fnstcw
ds
idiv
xchg
fiadds
clc
loope
in
jmp
out
aaa
rol
ror
icebp
in
enter
mov
sti
mov
lock
ror
jmp
fstp
hlt
iret
iret
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
sbb
hlt
mov
in
clc
sarl
ret
cmp
cmp
int3
lock
aad
shl
addl
std
call
xchg
in
jmp
aaa
call
lret
hlt
cmp
xchg
or
jecxz
leave
shl
repz
int3
int
cmp
std
iret
fidivrs
cmpl
mov
std
out
xchg
jmp
out
xor
lds
fdivr
stc
icebp
loopne
sti
fcomp
mov
ret
ljmp
out
out
int3
ljmp
repnz
adc
aad
lret
lds
icebp
in
mov
loopne
cmc
ljmp
cmp
in
cld
iret
loope
incb
fsub
xchg
out
loopne
xchg
xor
cli
rol
rcr
cmp
xlat
hlt
jecxz
roll
nop
lret
dec
sti
int
adc
in
cmp
neg
lret
lock
ds
xlat
rolb
jmp
not
fucomip
aam
out
repnz
cld
aad
out
into
clc
cmp
fadd
cmc
in
in
xchg
or
iret
cmp
xor
icebp
hlt
cli
rol
out
cmp
loopne
fldlg2
leave
loopne
xchg
mov
iret
shl
cli
out
cmc
sarl
repnz
std
aam
orl
in
jmp
aaa
in
sti
cmp
stc
cmc
out
sbb
out
shl
out
fimuls
int
xchg
nop
notb
ror
icebp
fsub
fcmove
ret
std
xchg
lret
out
leave
lock
out
mov
cmp
in
hlt
cld
cld
div
test
mov
loope
mov
loop
enter
jmp
into
aas
in
std
xchg
aam
fsub
fsubp
call
repnz
in
repnz
iret
xor
jecxz
in
cli
jmp
mov
loope
loope
lock
aam
jmp
iret
int3
xlat
ds
xchg
stc
ret
hlt
mov
out
out
loopne
fucomp
xor
cmp
icebp
aaa
lret
out
aam
repnz
int
fdiv
test
mov
sbb
ljmp
icebp
shlb
test
xor
aaa
fpatan
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
jnp
and
out
jle
add
sti
repz
lock
xchg
std
xlat
decb
fisttps
xor
lret
cmp
cmp
out
ret
adc
in
cld
mov
cld
adc
cmc
jecxz
repz
lock
repz
sarl
mul
lret
lret
jmp
sar
sar
hlt
test
ror
aas
ret
xor
ret
call
fiaddl
loop
rcl
into
call
iret
call
shl
cli
fiadds
clc
fldl
out
aas
ret
int
fcmovnu
repnz
cmc
cmp
out
rcl
clc
filds
fldl
hlt
les
out
repz
ror
aaa
rcl
out
fdivr
adc
test
int3
in
rcl
sti
in
decb
int3
xor
ss
fdivr
fstp
std
cmpl
aad
loop
fcmovu
lret
sbb
jecxz
test
cs
cli
out
stc
in
lret
neg
shl
in
in
in
neg
out
ljmp
jmp
jmp
ret
xchg
testb
clc
fisttps
rcr
out
jmp
lret
repnz
idiv
decl
sub
xor
in
lock
cld
cmc
aas
stc
neg
ret
loope
fmul
mov
ret
loop
jmp
repz
in
fstp
out
rcl
sbb
cmp
cld
in
jmp
jmp
ror
xor
shr
repnz
adc
ds
filds
div
lea
xchg
loopne
repz
fcom
xor
ds
out
out
shl
ret
int3
loop
mov
lret
out
test
shlb
out
into
fnstsw
cmp
shl
test
cmp
call
notb
jecxz
sti
cld
int
cmp
fnstcw
stc
rolb
mov
in
in
jecxz
ret
cmc
xor
out
cmp
fprem
cmp
std
test
lret
sti
fldl
das
lock
in
xor
out
sar
shl
stc
testb
cld
mov
lock
call
enter
xor
add
jmp
int3
int
loope
sub
ds
inc
call
jle
repnz
sarb
aam
ret
fadd
fcmovne
lea
repnz
fdiv
xor
out
out
loopne
cmp
shl
hlt
xchg
fcmove
adcb
cmc
sub
cli
enter
ret
loopne
addb
fndisi(8087
jecxz
jecxz
repnz
in
xor
cmp
ljmp
ret
repz
out
sub
call
ljmp
lock
stc
out
xchg
fsub
vpslld
lret
lock
repnz
lret
cmp
ljmp
loope
fsub
mov
enter
fiadds
into
xor
iret
fld
into
dec
fcomp
xor
out
fdivr
clc
xchg
sbb
cld
rcll
aam
cmp
int
fcmovbe
icebp
iret
sbb
in
fucomi
in
mov
xor
in
cmp
cmp
xlat
cmp
ret
rol
sti
cmc
leave
cmp
xchg
hlt
mov
call
fcomp
lock
ds
fsubr
cmc
ret
idiv
in
flds
call
out
aad
out
loopne
sbb
les
stc
movb
xchg
decl
in
into
clc
cmp
in
cmp
clc
jecxz
repz
lret
fistl
rol
repz
fcomip
cmp
cmp
idiv
mov
lret
lret
mov
fmull
out
clc
fcom
ds
ljmp
idiv
in
ret
test
xchg
lret
xlat
std
lret
lret
shr
xor
jecxz
out
leave
in
in
mov
in
idiv
hlt
fsubrp
ss
loopne
idivb
rcl
faddl
in
cld
xchg
mov
enter
aam
fdivs
std
cli
loop
loopne
cld
std
sbb
les
or
fcoml
ret
lret
leave
inc
icebp
std
inc
filds
int
jmp
call
stc
jmp
testb
filds
xlat
lock
xchg
test
out
out
int3
xor
jmp
enter
fstp
int3
shl
scas
imul
pop
pop
xchg
jmp
jle
add
fnsetpm(287
sti
mul
cmc
clc
in
cmc
test
test
fmul
mov
xchg
mov
aam
in
out
loope
aaa
cmp
ljmp
loope
hlt
out
repnz
stc
clc
fcmovu
int3
fmull
sar
ss
in
ljmp
test
testb
lret
orl
int
aaa
repnz
cmc
hlt
leave
mov
ljmp
test
aam
int3
xor
cmp
out
sti
cmp
ljmp
fdivp
loope
out
not
lret
stc
out
jmp
icebp
icebp
lret
aas
test
mov
cmp
int
icebp
fcomip
rcl
ret
call
cmp
sub
test
cli
iret
jmp
imul
into
loopne
enter
leave
lret
in
bnd
fcmovb
sbb
add
clc
cmc
mov
fucomp
test
orb
call
xor
fcmovbe
aad
call
aam
dec
test
jecxz
in
incl
ljmp
cmc
out
in
xchg
lds
and
xchg
ret
icebp
cmp
icebp
cmp
fnstcw
fucom
shl
or
mov
jmp
ret
out
int3
in
fmulp
cld
hlt
std
fsub
stc
shl
in
loope
clc
xchg
mov
xchg
rolb
out
xor
fdiv
or
cmpb
test
cmp
rcll
jecxz
cmp
int3
xlat
std
in
jecxz
aas
cmc
fadd
rcl
mov
mov
leave
xchg
out
jmp
shr
repz
jmp
cmp
shl
cmp
orb
out
loope
shl
xchg
xor
xlat
fcomi
std
cld
hlt
loope
cli
icebp
hlt
xor
out
out
sti
aad
fucomip
jecxz
fucomi
hlt
nop
das
jmp
in
in
stc
cmpb
ss
iret
sti
std
jecxz
aad
neg
fsub
xchg
jecxz
into
lret
aad
in
in
cmpb
out
ror
mov
faddl
mov
test
iret
lret
idivb
ss
leave
test
cli
movl
ljmp
add
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
repz
int3
into
xor
aaa
aad
fstpt
icebp
std
clc
fucomi
int
call
loope
xor
ror
clc
repnz
repz
jecxz
shr
icebp
into
lret
in
loop
rclb
sti
out
cmp
cmp
shl
shl
div
test
sti
rcr
int3
dec
addb
sub
out
test
out
out
iret
cmc
cmc
test
sti
aad
jecxz
cli
ljmp
xchg
xor
fucomi
xor
cmp
fldl
cli
sti
in
cli
out
nop
fiadds
clc
sarl
shl
aad
rcl
ret
sti
loop
movl
cld
lock
in
mov
lret
fdivs
cmp
cmp
fadd
cmp
ret
ds
test
ljmp
sbb
aaa
lock
xor
fidivrl
out
push
test
xchg
jecxz
xchg
mov
repz
cs
fdivr
ljmp
cld
stc
aad
or
lock
shlb
aad
cmp
cmp
loopne
cmp
mov
movb
nop
jecxz
sarl
clc
shll
fmul
call
cld
aas
in
fisttpll
out
mov
mov
repz
in
cmp
jecxz
std
fiadds
fldl
int
icebp
xor
xlat
shl
repz
fadd
ds
out
hlt
test
shr
ljmp
cmc
neg
int3
stc
div
cmp
sbb
xlat
fiadds
fcmove
out
ror
into
out
xor
repnz
xor
rcr
xlat
rcr
fdivr
testb
sar
shl
xor
lock
xlat
lret
shr
call
cmc
aad
out
rolb
lret
xchg
jmp
iret
ss
in
jmp
shr
in
cmc
lret
jecxz
lock
cmp
jecxz
ror
out
fdivr
fdivrs
loop
fsub
incb
cld
fmulp
imul
ret
into
xchg
xchg
ret
xor
stc
xlat
ror
icebp
cmp
repz
sti
test
cli
mov
mov
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
jb
bound
fiaddl
jle
lret
xchg
jecxz
repnz
lret
cli
aam
sub
xchg
jmp
jecxz
lret
xchg
jecxz
loopne
sub
call
cmp
jmp
cmp
aad
mov
decb
lock
into
into
icebp
into
cld
fdivs
stc
aas
shl
clc
addb
rorl
loop
enter
cmp
in
fmul
xor
lock
ds
cli
out
sti
fld
test
xchg
ss
in
xor
lret
ljmp
rcl
sub
idiv
iret
sti
and
test
bnd
lret
leave
lock
aas
jecxz
xlat
fcmovu
loopne
xlat
mov
in
xchg
in
out
ljmp
xor
lock
clc
shl
fadd
fistpll
test
hlt
in
lret
mov
xor
in
sti
sarb
cmp
aas
iret
stc
lock
loope
iret
roll
sti
clc
ror
int
cmc
int
cmc
sar
in
rcl
push
test
repnz
mov
clc
mov
orl
out
int3
rcl
cli
hlt
aad
jecxz
aas
sbb
ljmp
in
int3
test
nop
aam
xor
repnz
cmp
or
add
loope
fxam
call
int
std
jmp
into
int
xlat
leave
clc
fadds
lock
mov
xor
shl
faddl
ljmp
repz
aam
filds
fcomp
in
mov
lret
into
ss
fdivr
ds
mov
out
ret
in
fmulp
mov
xchg
cmc
fnstenv
hlt
ljmp
xor
and
mov
nop
mov
xor
xlat
in
out
lock
xlat
cmp
xchg
mov
ljmp
filds
shr
lds
cmpb
stc
sbb
aas
aad
xchg
fdivr
out
mov
xchg
loope
aas
clc
int3
lret
cmp
cmp
cmp
and
int
sub
filds
lock
ljmp
fdivr
fadd
not
loop
test
jge
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
or
ret
jg
fiaddl
jle
xchg
out
xchg
call
xor
shl
stc
loopne
jmp
cmc
idiv
xlat
icebp
rolb
xchg
rcl
out
jecxz
int3
rol
cmp
into
ret
aas
aam
out
lea
leave
xchg
test
idivb
iret
ret
into
out
hlt
iret
shr
into
aam
jecxz
jecxz
testl
xor
lret
cmc
hlt
iret
stc
fcmovnu
cmp
loope
mov
jmp
mov
iret
sub
in
int
test
shl
imul
in
faddp
out
xlat
mov
hlt
xchg
xor
out
ror
stc
out
out
call
div
test
add
stc
lret
mov
int
jmp
mov
fucomip
icebp
out
lret
idiv
ss
loope
shr
in
cmc
in
out
lea
xchg
xchg
out
fcmovnbe
idivl
hlt
cli
stc
iret
cmpb
neg
repz
sbb
sti
loop
loopne
shl
enter
iret
cmp
adc
call
in
xchg
xlat
in
mov
iret
shr
loope
cmc
enter
call
fcomip
lock
in
shl
adc
in
iret
ljmp
cmc
fsubr
int3
xlat
aam
fnstcw
or
fidivrl
xchg
addb
enter
aam
lock
not
into
out
int
loopne
ret
inc
call
ljmp
cmc
mov
int
call
fnstsw
cmp
rcr
cld
roll
sub
and
out
jmp
sarl
aas
into
loopne
sti
lret
ffree
in
sti
rolb
ret
int
aad
fsubr
loopne
ret
lds
xlat
out
sti
loope
divb
iret
sti
int3
xlat
fdivrp
loop
div
out
loope
aam
xlat
stc
jmp
cmp
shl
cli
hlt
lret
neg
into
neg
and
cld
add
out
out
mov
shr
mov
jecxz
jmp
ljmp
loopne
hlt
aad
lret
xchg
adc
xchg
ljmp
stc
call
shr
sarb
jecxz
mov
jmp
fcom
mov
rcr
xlat
sub
or
fiaddl
jle
fadd
fildl
xchg
loope
jmp
not
in
ss
into
into
xor
test
idiv
out
mov
mov
rolb
in
fcmovnb
into
ljmp
xlat
aad
repnz
iret
repz
repz
xor
cmp
in
fsub
test
loope
fcmove
lea
in
loopne
lock
rcl
shr
iret
iret
ffree
cmp
sti
ret
out
cmp
ds
lret
test
repnz
in
in
out
iret
fnstcw
rcr
aaa
cld
aad
in
fstpt
sub
loop
mov
into
xchg
sar
shl
in
stc
jmp
repnz
lock
shl
rolb
fadds
aas
aam
jmp
lock
stc
aas
icebp
fdivr
aam
loopne
fcmovbe
mov
call
faddl
stc
cmp
in
fidivrl
cmp
cmc
cmp
stc
clc
test
fcomi
cmc
or
fdiv
mov
jmp
std
aam
dec
cmpb
int3
repnz
fcompp
shl
jmp
iret
mov
ret
int
cs
cmp
cmp
repnz
iret
fsub
lret
mov
fxch
xchg
sub
aad
call
lret
int
stc
fdivp
test
aad
repz
loope
rorb
sub
jecxz
aad
test
fdivr
shl
in
test
ljmp
shr
repz
jmp
aaa
fdivr
sti
sti
into
shl
loop
stc
ret
jmp
in
test
test
into
shl
rol
in
clc
enter
cmp
xlat
ret
out
mov
test
leave
out
mov
lock
shr
lock
xor
int3
and
add
icebp
cld
orl
out
xlat
cmp
fdivr
iret
cli
int
cmp
loop
ret
aam
shl
clc
neg
sti
lock
shl
adc
out
lret
cli
lret
lret
hlt
into
cmp
aam
stc
rol
lret
mov
out
loopne
in
xchg
shll
xor
repnz
leave
inc
fst
iret
test
ljmp
ret
in
in
xor
enter
call
xlat
cmp
jmp
aad
xor
jmp
lret
xlat
aas
rcr
int
in
push
movsb
loope
mov
fiaddl
jle
icebp
repnz
lret
in
cmp
aad
int
leave
not
std
lret
repz
fcomi
loopne
roll
loope
jmp
xlat
cs
iret
clc
ljmp
in
cmp
orb
rcr
xor
cmc
fcmovbe
in
int
in
loop
repz
imul
repnz
loopne,pt
in
out
xchg
loopne
clc
call
out
loop
push
in
icebp
jmp
idiv
cli
enter
aam
jecxz
fxtract
aad
out
out
xor
fnstcw
flds
in
mov
stc
fstp
loope
hlt
cmp
sti
call
std
out
cli
aaa
rcl
mov
test
out
xor
cmp
fdivrp
loope
rcr
out
icebp
cld
sti
call
test
enter
in
mov
out
xor
das
cmp
cld
repnz
cli
sar
in
cmp
stc
sub
xchg
in
cld
int3
xchg
fsubp
int3
jmp
lret
ds
ljmp
rcl
mov
out
cld
nop
in
mov
divl
xor
bnd
cld
repz
ret
xchg
fcmovu
std
int3
loope
aas
rcl
xor
clc
enter
fidivl
out
ljmp
xchg
shl
ror
lret
fcom
xor
fcomip
loope
std
fdivr
mov
lea
into
aad
ret
shl
sar
ds
aas
into
fcmovu
xchg
roll
enter
hlt
out
rclb
cli
out
cmc
ror
cmp
xlat
fcomi
xlat
jmp
int
loope
leave
out
repz
xbegin
sti
clc
fcmovnbe
into
loope
cmp
in
hlt
fxam
repz
mov
loopne
test
fcmovb
xor
std
int
xlat
ffreep
fdiv
and
aam
mov
mov
fisttpl
shl
ffreep
enter
sar
shl
imul
rcl
cli
int3
call
jecxz
sub
cmp
mul
int3
lret
sar
cli
shl
test
cld
mul
stc
roll
into
lret
jecxz
lea
sar
stc
sti
cmp
in
addb
jmp
jmp
lret
fst
mov
addr16
aam
or
stc
jg
fiaddl
jle
ror
rolb
mov
in
or
cli
and
jmp
repnz
call
cmp
sti
icebp
cmc
xchg
stc
fadds
xchg
ljmp
leave
fidivl
ror
fcmovnbe
out
int3
xor
call
rcr
ds
out
fsts
jecxz,pn
out
jmp
cmc
ds
stc
cmp
out
sub
in
jmp
xchg
iret
test
icebp
rcl
cmp
out
in
sar
xlat
loopne
xchg
loope
hlt
xor
into
icebp
cmp
cld
fadds
sti
xchg
xor
xchg
out
out
xor
ret
cli
stc
aam
aad
cli
cmp
in
cmp
xchg
mov
cmc
xor
xor
sti
cmp
sarl
jmp
fcmovne
xchg
loopne
repz
xor
std
xor
jmp
cli
fdivr
aad
hlt
std
ljmp
cld
xchg
shl
out
int
xor
loopne
in
repnz
add
sbb
int
out
nop
in
das
loop
shr
ror
jmp
cmp
std
add
xchg
lret
orl
adc
sub
sub
test
fcomp
out
hlt
lock
rcr
fucomp
xchg
out
jecxz
xor
ror
cld
fmul
aas
loope
imul
rol
out
aas
cld
test
shll
xor
xor
sar
cmp
loop
repnz
xor
std
shl
rol
in
aaa
out
imul
repnz
cmp
cmp
in
fdivr
cli
loope
mov
lds
test
ret
dec
sarb
lret
loopne
repz
fiaddl
mov
out
add
icebp
lret
cmp
clc
cmp
shr
fucom
test
std
test
jecxz
iret
repnz
xor
iret
sti
rcr
in
aad
cmc
jecxz
sbb
loop
test
std
loope
orb
xor
fsubr
ret
aam
call
addl
fiaddl
xchg
mov
fucomi
fsubrp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
pop
in
dec
mov
add
fdivp
idiv
fcmovnbe
loopne
sti
fst
ret
jmp
loopne
sti
nop
in
adc
rcl
icebp
into
fcmovne
icebp
cmp
out
testl
cld
flds
rcl
ret
sar
int3
fmulp
fcmovnb
lret
sti
cmc
aas
shl
call
fisttps
in
xor
test
cli
in
fcomip
cli
shl
ds
xor
fxch
in
out
fucomp
add
leave
lret
xor
fnstsw
into
xlat
ret
xor
hlt
neg
ret
stc
lret
std
xchg
call
xchg
ljmp
cmp
lock
lock
fadd
fnstcw
faddp
leave
cli
std
add
mov
int
mov
xchg
jmp
hlt
rcl
xor
lret
in
sbb
xchg
mov
jmp
fmul
enter
mov
repz
out
out
sti
fdivrl
fdiv
loope
stc
fucom
in
cmc
imul
sti
pop
xchg
in
test
rcr
sub
idiv
leave
rcr
loop
jmp
flds
cmc
loop
out
cmp
fptan
cmp
lock
loopne
cmp
xlat
fdivr
out
out
sub
sub
cmp
sti
loopne
cmp
or
fimull
out
jmp
xchg
mov
icebp
loop
out
aam
lock
call
cmp
repz
std
lds
mov
call
les
cmp
call
ljmp
fiadds
addl
aam
in
int
fmul
ss
in
iret
loope
cmp
fdivrp
loope
test
jmp
xor
out
int
out
cmp
iret
loop
loope
cmc
sar
sti
xchg
cli
jecxz
test
jecxz
aam
out
lret
aad
out
ss
jmp
ret
shr
in
fcmovnu
sbb
loopne
out
in
lret
cmc
in
xor
xor
into
aas
rcl
out
loop
incl
nop
out
test
sti
out
in
ss
cmp
int3
xor
cmp
std
rolb
and
test
cld
xchg
mov
jmp
lret
xlat
out
ljmp
rcr
aad
mov
fdivr
mov
ret
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
jo
sbb
add
jg
fiaddl
jle
in
cmp
cmp
cmp
rcl
leave
aad
out
fadd
loop
loopne
out
xor
out
int
lds
cmp
ret
xchg
rcr
loopne
int
lea
shl
cld
cld
xlat
out
jmp
hlt
add
cld
call
mov
mov
orl
shl
das
repz
aaa
cmp
ror
add
fiadds
out
leave
test
xor
aaa
lds
into
icebp
fstpt
roll
mov
leave
cld
xchg
hlt
mov
fildll
rol
neg
icebp
shl
loopne
lret
cmp
jmp
test
test
out
jmp
call
icebp
call
out
cli
out
loope
rol
clc
cld
fstp
lret
clc
out
loop
and
test
sarb
idiv
rol
divb
loop
aad
in
mov
lock
out
lret
shlb
icebp
call
loop
fstpt
out
xlat
jecxz
mov
out
enter
jecxz
lock
enter
out
in
cmp
aas
cmc
cmp
cli
leave
and
in
ljmp
lret
cld
repnz
cmp
test
std
lret
out
mov
xchg
out
out
xor
stc
cmp
xor
cmp
loope
cmp
out
test
leave
sub
orb
aaa
icebp
aam
out
repnz
fstpt
cmc
idivb
in
fsubp
in
fprem
fsubrp
mov
hlt
shl
ss
stc
lret
clc
cmp
adc
xlat
sti
mov
out
mov
fmull
fistpll
leave
rcl
out
rcl
lock
ret
in
faddp
dec
rclb
cmc
shlb
ljmp
fldl
leave
fsubp
out
xchg
stc
xor
repz
sti
shl
fdivr
idiv
loope
xlat
fmul
out
fsubrp
repnz
ror
shlb
int
xlat
icebp
aad
jmp
sbb
cmpl
aad
mov
int3
mov
out
xor
ret
into
cmp
enter
ret
test
mov
in
loopne
fisttps
hlt
jmp
leave
aas
ret
vpcmpeqw
xchg
fs
ja
cmpb
add
xor
into
iret
cmp
sti
call
jecxz
test
addl
filds
mov
in
xor
fidivl
aaa
lock
out
aas
ret
xchg
enter
fstp
mov
aam
fucomp
std
adc
fcomip
clc
out
add
test
mov
loope
mov
test
loopne
ss
xlat
fdivrl
iret
aas
repz
loopne
shl
in
incl
leave
movl
das
sub
fmul
lock
jecxz
cmp
cmp
incl
mov
mov
shl
into
cmc
fnstsw
lret
jmp
cmp
xchg
aas
loope
jmp
sbb
lret
xor
rcl
cli
stc
loopne
into
std
add
cmc
out
aam
fdiv
in
ret
shr
test
xlat
rcr
repz
cmp
into
iret
clc
lret
aad
repz
loop
dec
aas
jmp
test
xor
xor
int3
leave
out
idivb
fadds
shl
mov
out
mov
mov
jecxz
loope
divl
into
shl
repz
into
loope
int
sar
shl
in
lret
into
int3
out
in
loop
xor
fmul
ret
int
leave
hlt
ljmp
cmp
stc
filds
lea
xor
in
xlat
idivl
xlat
fucom
loop
iret
cld
jmp
lret
rcl
loopne
test
xor
sti
lret
test
out
shr
fsubrp
call
in
rcl
fxch
ss
cmp
xor
neg
rcl
ret
fiaddl
in
fsubp
iret
or
int3
fdivrp
ffree
sar
out
int
call
out
sub
enter
shl
sub
fdivr
cld
cmp
std
cmp
div
test
cmc
sar
aam
mov
mov
fiadds
in
ss
clc
stc
stc
stc
ljmp
hlt
loop
xchg
out
in
cmp
out
out
lock
ret
out
in
cld
repnz
std
cmp
ret
fiadds
shl
xchg
repz
xlat
into
cmc
enter
cld
fucompp
clc
out
bnd
fcomip
test
clc
xchg
clc
jmp
int3
ret
lret
ret
int
int3
int
adc
sub
cmpb
add
nop
loopne
aaa
mul
cli
call
ss
cld
sti
aam
fildl
fildl
loopne
in
jmp
int
fst
std
cmp
in
sar
std
leave
fsubr
int3
mov
loope
out
cmp
cmp
fst
fistpll
fcmovbe
shl
ret
sar
mov
out
lret
mov
ss
repz
lret
int
fidivrl
stc
fdivrp
pop
fiaddl
xor
cmp
fsubp
in
cli
adc
jmp
loopne
lock
fsubr
fidivrs
iret
xlat
out
iret
icebp
ret
shl
xchg
xor
mov
lock
loop
ror
sub
shr
icebp
xor
and
in
stc
mov
loopne
xor
jmp
fdivrl
loop
cmc
xchg
aam
and
in
or
lock
ret
in
int
cld
repnz
cmp
fcmovnb
cld
into
out
out
cli
fimull
into
xchg
in
loop
repnz
cmp
lret
sar
fcomip
cmp
test
test
mov
lret
into
out
cmc
hlt
aaa
cmp
icebp
cmp
jmp
fcmovb
cli
roll
vpsubb
cld
shl
into
shl
ret
cld
into
cmp
cmp
sarb
in
test
call
movb
bnd
cmp
aaa
fdivrl
in
filds
test
cli
idiv
loop
movl
xor
in
fst
aas
rcr
ds
in
cmp
xchg
mov
mov
into
fdivs
cld
int
fsubr
out
fcomip
ret
loop
shl
neg
std
test
adc
lock
sti
fucomp
ljmp
and
fmul
jmp
movl
in
in
jmp
jmp
loope
fucom
call
div
std
ret
hlt
mov
test
rcr
aad
sti
xor
enter
adc
fucomp
mov
xchg
shl
call
repz
jmp
aas
hlt
cmp
mov
pop
in
je
add
ror
aas
roll
ljmp
test
fiaddl
jle
fcmovne
loopne
call
jecxz
shl
in
xor
cmp
inc
xor
ljmp
ror
cs
icebp
fdivr
fdivp
in
ds
shl
fprem1
out
call
in
int3
lock
xor
lock
shl
loope
repnz
aas
repz
les
test
hlt
icebp
jmp
into
cmp
xor
fmul
aam
cmc
repz
fsub
add
fcmovne
out
out
hlt
lock
call
loope
ds
dec
fdiv
stc
in
jmp
std
out
shr
out
cmp
test
cld
aas
test
xchg
stc
add
mov
shl
mov
loopne
lret
ss
cmp
cmp
in
test
hlt
in
aad
loop
and
jmp
shll
xor
in
repz
adc
lock
xlat
test
inc
int
or
shr
xchg
shl
rcl
cmp
out
in
pushl
loopne
jecxz
aad
rol
aam
add
incb
in
int3
mov
das
cli
fdivs
out
sarb
ret
in
sbb
test
test
mov
repnz
incb
out
out
aad
ds
sar
loop
fdivr
cmc
cli
sbb
loopne
jmp
imul
lret
clc
xlat
cli
jmp
out
int
in
aam
leave
int3
aas
iret
lock
into
out
cmp
jmp
out
neg
test
in
loopne
rcl
or
fcmove
test
out
out
xor
aas
roll
neg
cld
in
into
or
lret
in
ljmp
sti
fsubr
out
xlat
ror
fdiv
hlt
repz
ljmp
lock
xchg
loop
aam
xor
cmp
xlat
hlt
loopne
cmp
into
shl
jmp
fcmovb
out
call
xchg
loopne
out
iret
xor
clc
std
faddl
hlt
hlt
mov
or
mov
int3
lret
hlt
int
fmul
cmp
std
xor
std
sti
test
int3
jecxz
enter
rcll
out
fxch
into
shl
repnz
ds
hlt
mov
mov
mov
mov
jmp
into
aam
fmul
dec
cmp
xacquire
fiaddl
jle
mov
mov
faddl
mov
loop
fld
lret
xlat
xor
sarl
cmp
in
repz
enter
ljmp
fdivrs
loope
jmp
enter
sti
sarb
roll
in
fcmovnbe
fucomp
in
loop
jmp
lret
out
xlat
aam
call
enter
rcl
cmc
rorl
in
stc
jecxz
out
mov
cmc
sub
enter
stc
repz
repnz
loopne
hlt
mov
mov
shl
into
xor
xor
int3
std
cmp
div
loope
xchg
into
into
or
xchg
mul
xor
test
rcl
ss
loop
xlat
cmp
enter
fsub
xor
call
fucomi
cli
shl
add
mov
std
stc
jmp
or
out
cmp
shl
ss
sar
icebp
iret
shl
call
fldl
loope
test
repz
xor
cmp
sti
cmp
clc
fyl2x
cld
xchg
test
loop
shl
fdivrp
loopne
icebp
icebp
aam
out
cmp
icebp
idiv
jecxz
ds
cmc
enter
ret
orl
call
les
repz
cli
into
in
fsub
stc
enter
ffree
xchg
loopne
loope
enter
out
aad
lret
testb
aas
sbb
dec
loop
out
in
rorl
ljmp
imul
adc
repnz
jecxz
mov
stc
mov
mov
cmp
cmc
imul
in
cmp
cmc
mul
test
jmp
sti
loop
out
xchg
in
ljmp
lock
in
test
cmp
loop
in
cmc
out
shr
xor
fdiv
out
out
sti
cmp
cld
shl
leave
cld
iret
nop
leave
in
lret
fdivp
sub
int3
ss
xbegin
sti
out
flds
cmp
jmp
loop
repz
out
in
out
fxch
enter
xor
cli
loop
not
aas
fdivrs
or
enter
roll
out
in
std
xor
aad
in
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
pop
lds
jg
fiaddl
jle
cmp
aad
xlat
lock
loope
in
xor
xlat
cli
aas
cmp
sbb
fmul
test
int3
xchg
iret
ret
into
mov
out
out
aad
idiv
loop
test
int
xlat
xchg
lret
out
test
xchg
cmp
std
ljmp
lock
ljmp
mov
hlt
in
ror
enter
fcmovnb
dec
xor
xchg
sar
not
xchg
fucomp
xchg
aad
out
out
cmp
out
jmp
not
hlt
xlat
mov
ret
fsub
int3
xchg
in
xchg
xchg
fcomip
repnz
lock
cmc
cmc
aad
cmc
shl
test
cld
jmp
std
lea
xchg
sub
rcl
xor
icebp
fprem
lock
ljmp
in
leave
call
das
out
stc
clc
out
lret
fmul
idivl
cmp
aas
xlat
jmp
sbb
nop
loope
shrl
xor
out
call
out
loopne
test
mov
sti
repnz
adc
out
fcmovnbe
aam
aas
out
shl
cld
cmp
test
aas
enter
loopne
jmp
in
sub
repz
cld
aam
aam
icebp
rol
mov
call
out
in
out
ljmp
aas
cmc
filds
repnz
loope
call
xchg
or
iret
xor
repnz
cmp
fdivrs
shl
rcl
ljmp
loop
and
jmp
lret
ljmp
out
loopne
cld
jecxz
enter
lock
fisttpl
loop
icebp
stc
shl
cld
fsubr
cmp
fcmovu
shl
fcmovbe
xacquire
call
xchg
xchg
cmc
leave
ret
repz
fidivrs
cmp
test
fsubr
in
xlat
in
out
dec
loop
imul
loope
xor
fidivrl
fdivr
shl
repnz
cmp
fninit
clc
mov
jmp
lret
xor
mov
lret
xor
lret
enter
cmp
into
shl
shl
int3
test
sbb
iret
test
clc
hlt
aam
out
repz
rcl
add
jmp
ror
rcl
stos
sub
insl
dec
ss
sub
jle
faddp
rcl
sti
xchg
cli
sti
dec
enter
nop
rcl
fcmovbe
enter
iret
not
xor
fcmovb
shr
jmp
xchg
sub
mov
lock
sub
out
aad
cmc
clc
cmp
in
in
sti
aam
xlat
xlat
mov
hlt
out
aam
int
in
in
loopne
ret
rcl
xchg
jecxz
int3
in
in
cld
xor
xchg
jmp
aaa
icebp
repnz
enter
in
cli
out
roll
out
lret
in
shr
xor
shl
cmp
int3
out
cmp
fiaddl
mov
in
xchg
aas
in
out
in
rol
loopne
cli
cmc
testl
leave
out
mov
xchg
out
jmp
int
lock
cli
xor
in
push
test
fsub
sti
mov
nop
iret
iret
xchg
mov
shr
into
int
leave
ds
cmp
hlt
aam
mov
jmp
mov
loope
fsincos
test
ljmp
aam
sti
repnz
lret
xchg
filds
mov
sti
hlt
call
out
jmp
stc
clc
hlt
shl
repz
aad
int3
clc
lock
iret
shl
in
aaa
fcmovbe
fxam
repz
fcmovne
lock
test
out
stc
aad
into
enter
in
in
sub
ret
in
ljmp
shl
fcomip
jecxz
lret
xor
xchg
in
shl
sti
jmp
roll
cld
xchg
ljmp
in
repnz
cs
stc
lret
sti
aam
shl
hlt
mov
loope
adcb
icebp
icebp
hlt
idiv
int3
hlt
std
cmp
out
xchg
ret
out
xchg
jecxz
in
int
vpsubsw
cmc
xlat
fnstsw
aam
hlt
fcmovu
aam
jmp
fld1
lock
out
cmc
vpslld
in
iret
enter
ds
aam
cld
lds
mov
orl
das
lds
repz
aas
cld
sti
jmp
incl
jmp
nop
xchg
int
mov
jmp
fcom
sti
std
fmuls
hlt
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
xor
repnz
movl
lock
mov
xor
int
aad
xorl
test
mov
sbb
in
lea
shl
in
hlt
fpatan
enter
jecxz
sarb
sti
test
in
call
loop
out
orl
aaa
ss
jmp
sarb
rcl
mov
loop
stc
cmp
fstp
test
loope
sub
xor
xor
cmp
shl
fcmovnu
in
xchg
enter
mov
lea
xor
jmp
addb
testl
addl
cmp
in
std
in
out
idivl
xlat
aad
cmp
mov
cmp
mov
std
addb
mov
xor
xor
sti
cmp
cmp
int3
aad
loope
stc
loope
repz
out
jecxz
les
in
lock
cmc
in
cmp
and
test
clc
fsubr
std
mov
sti
cmc
xchg
out
in
lret
call
sti
sbb
cmp
enter
aad
mul
icebp
xchg
lret
xchg
sub
aaa
leave
aam
out
out
in
xchg
hlt
sti
std
mov
lret
fadd
in
mov
int3
adcb
ljmp
adc
cmp
mov
lret
loope
test
loopne
cmp
shl
cmp
into
cmp
ror
stc
repnz
jecxz
jecxz
loopne
leave
test
fisttps
int
repz
loopne
cli
xlat
test
jecxz
fdivrp
in
cli
mov
loopne
call
loope
rol
fxch
shr
aad
stc
in
rol
cmc
test
out
hlt
fxch
and
in
hlt
les
xor
sti
idiv
neg
rcr
fdivp
aas
test
lds
adcl
ret
rcl
out
fstp
fst
int3
loope
sti
call
int3
xchg
clc
std
repz
xchg
cmc
out
enter
sub
sarb
repnz
xchg
testb
fiaddl
ret
cmp
divb
stc
repnz
fdiv
in
fisttpl
int3
mov
testb
xlat
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
jmp
jg
fiaddl
jle
aaa
lret
ss
out
aas
lock
sbb
xchg
xchg
int3
ljmp
clc
aaa
fdivrp
into
xlat
fcmovne
ds
out
xlat
rorb
test
sti
leave
mov
mov
out
cli
aaa
aam
fcmovbe
ds
cli
sti
in
enter
mov
jmp
test
int
xchg
int3
jecxz
xor
hlt
cmp
cmp
sar
test
lock
test
out
xchg
int3
test
xor
call
loope
in
out
sub
xlat
out
mov
fsubp
xor
rcl
int
cmp
repnz
out
ds
jmp
int3
xchg
ficoml
in
clc
cmp
int
repnz
fcomi
ljmp
aad
cmc
jecxz
rorb
nop
icebp
rol
call
aad
fxch
cmp
sti
jmp
xlat
xchg
in
stc
nop
in
into
in
mov
cmc
stc
jmp
hlt
call
out
xor
jmp
jecxz
test
into
fldl
jecxz
in
lock
ds
xor
cmp
cmp
out
enter
fiaddl
aad
lret
mul
rcr
ljmp
test
cld
aam
decb
movl
cmp
xor
lret
lret
xor
ret
in
fcmovu
in
hlt
loop
test
mov
lret
lock
in
rol
aam
fmul
aam
in
test
rol
cli
jecxz
loope
fisttpll
ljmp
rol
xor
idivl
in
in
into
ffreep
aam
testb
int3
cld
mov
xchg
loop
loopne
sub
aad
ljmp
loope
aas
out
ret
test
enter
jecxz
rcl
repnz
call
cmp
xchg
ret
lret
out
repnz
hlt
loope
loopne
out
hlt
aam
out
xor
in
cmc
in
roll
addb
shr
repnz
stc
xor
out
neg
cmp
cmpl
cli
sti
lret
cmp
leave
xchg
out
iret
enter
fdivrs
ror
cmp
lret
ds
aam
and
mov
testl
xor
jmp
enter
fcmovne
fst
or
pop
pushf
jno
adc
xchg
jg
fiaddl
jle
jmp
ret
repnz
hlt
shl
rcr
push
sti
out
loope
enter
xlat
sti
mov
jmp
loopne
ret
cmp
test
repnz
ror
cld
fsub
sbb
mov
fcmovne
call
in
rcr
ss
fmulp
aas
ds
ds
imul
fstp
in
iret
xchg
sub
shl
cmp
clc
cmp
idiv
test
hlt
call
jecxz
cld
xchg
mov
in
shl
ret
sarl
loopne
jmp
cmp
mov
sbb
out
out
mov
clc
sarl
out
std
fcomi
lock
adc
in
cmp
jecxz
out
incb
out
jecxz
repnz
fmul
lret
ds
ds
testb
inc
in
stc
loopne
repnz
out
iret
out
fdivs
lret
aam
lock
aad
stc
loop
cmp
out
and
in
cmp
xlat
shr
into
in
jecxz
loope
cmc
cmp
call
mov
jecxz
out
out
fisubrs
shl
fmul
cmp
aad
cmp
ds
loopne
ret
fadd
xbegin
adcb
lock
xor
out
cli
cmp
out
mov
in
fsub
nop
in
loopne
adcb
xor
jmp
stc
cmp
xor
fcmovu
rcl
std
int3
aas
fimuls
fst
loop
lock
xor
xor
int
sar
ret
stc
std
cli
sar
jmp
in
in
std
in
xchg
test
xor
fidivl
sarl
idiv
loopne
fadd
testb
xchg
ljmp
das
int
out
cld
iret
sti
repnz
ret
icebp
test
sbb
cld
out
ffree
shlb
leave
ror
call
xlat
jmp
cmp
lock
ret
loopne
ljmp
fstl
out
ror
ds
cmp
neg
call
call
out
enter
xlat
xor
jmp
jecxz
loop
loopne
xchg
in
fdivr
in
loopne
in
xchg
sub
in
in
rcl
out
add
fmulp
xchg
xchg
aad
loopne
fdivr
faddl
stc
imul
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
negb
add
lds
repnz
cli
ljmp
ds
add
clc
repz
loope
shl
fisttpll
iret
stc
into
into
ss
int3
shr
cli
out
in
jecxz
mov
fcoml
loopne
cli
aad
repz
aas
repz
fadds
test
out
rclb
shrb
ror
lret
stc
aam
cmp
sbb
fucomip
fucom
cld
icebp
dec
xchg
aam
lock
ror
fmulp
fsubr
lret
xchg
ljmp
mov
loop
ret
aaa
repnz
out
rcl
iret
adc
les
test
in
int
out
cmc
hlt
rcl
icebp
lret
xor
lret
loopne
rcl
in
les
loop
enter
nop
int
xchg
into
loope
ror
xlat
aam
cmp
iret
fdivp
cmp
iret
xchg
out
cld
rcr
jmp
cld
in
jmp
in
repz
cli
icebp
cmp
cmp
inc
aas
cmc
sti
fmuls
repnz
shr
fstl
icebp
xor
rcl
xor
out
test
mov
lret
mov
ljmp
xor
cmp
ljmp
sti
jecxz
clc
std
out
cmp
mov
lret
xchg
test
jecxz
cmc
fmul
shl
out
xor
fst
fcomp
ret
ret
loope
stc
ret
mov
in
cld
lret
out
xchg
fucomip
xor
jecxz
aaa
out
incb
out
test
in
mov
ljmp
shl
rol
out
lret
shr
ljmp
aam
aam
lret
jmp
nop
mov
lock
in
fdivrs
cmp
or
out
mov
aam
mul
stc
ret
in
xchg
lock
in
ss
out
in
out
cli
cmp
fnstsw
test
lock
int3
xrelease
enter
fucomi
xor
aad
fdivrs
loop
in
icebp
shl
mov
in
decl
ror
ss
lret
cmp
cmp
clc
ds
lock
xchg
mov
ljmp
clc
int
fistpll
ret
shl
loop
loop
std
cli
lea
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
ret
in
xchg
jg
fiaddl
jle
xchg
jmp
call
cmp
cmp
cld
aaa
out
rol
test
icebp
call
enter
out
addl
sti
cmp
out
in
ljmp
xchg
fucom
std
fmuls
in
rcr
ret
xor
shl
fdivrl
out
loop
repz
clc
ret
incl
fisttps
not
call
xlat
jmp
loope,pt
xlat
hlt
and
mov
sti
jecxz
in
std
lret
shr
repnz
enter
clc
fsubrl
cli
cli
hlt
std
lret
hlt
rol
cmc
clc
cld
loopne
into
sti
jecxz
sbb
enter
cmp
cli
cmp
hlt
jecxz
ret
jmp
mov
fcomp
icebp
out
in
xchg
vpsubb
xor
icebp
lret
std
fcmove
loope
in
fidivrs
fmulp
repnz
mov
icebp
mov
nop
aas
int3
cmp
leave
icebp
cmp
shr
fsubr
std
cmc
loop
rol
inc
test
out
int
icebp
jecxz
hlt
out
fistpll
mul
jecxz
ret
shl
aad
ds
fmull
shr
in
cmc
xor
in
in
test
shl
jmp
jmp
sti
ret
jmp
iret
lock
cs
in
jmp
int3
aaa
out
clc
lret
cmp
hlt
cld
mov
jecxz
and
out
not
in
std
clc
aam
std
shl
cmp
fdivp
ljmp
cld
in
call
cmp
leave
rcr
hlt
cmp
aaa
cmp
cmp
decl
out
into
lock
xchg
in
xor
ret
rcr
rcr
sarl
adc
and
fnsetpm(287
sti
ret
lret
stc
mov
lret
loopne
sub
in
in
leave
ss
xor
les
in
xchg
fsubp
ror
aam
aad
hlt
in
lret
ror
xlat
and
fcmovu
neg
cli
into
in
mov
loopne
jmp
aad
aam
clc
shl
sarl
aas
flds
test
fdivr
lret
xchg
std
in
xchg
jmp
xor
enter
out
aaa
cmp
ffreep
rcl
mov
filds
loopne
xchg
out
shl
stc
fsubrp
fdivr
lret
std
in
std
int
out
cli
xor
add
imul
mov
xor
jmp
rcl
leave
int
aad
or
out
jo
pop
mov
lcall
hlt
clc
mov
fmul
icebp
ljmp
xor
xor
xlat
add
div
fucom
roll
shr
in
repz
aaa
repz
fidivrs
into
fucomi
int
in
fucom
in
jmp
loop
ror
jecxz
inc
ljmp
xor
fld
in
loopne
fst
leave
out
mov
into
loopne
divb
aaa
jecxz
ss
rcr
int
jecxz
repnz
cld
adc
xlat
fadd
cmc
sti
mov
out
rcl
sub
enter
lret
xlat
testl
in
into
enter
ljmp
test
sar
in
ds
ret
cld
ljmp
repz
int
out
cmp
cmp
or
clc
ds
incb
fsub
fsubp
lret
std
and
xor
cmp
icebp
call
fsubp
vpsllq
hlt
xlat
in
mov
iret
test
iret
jmp
out
in
cmc
clc
xor
cmp
in
aas
lret
aas
hlt
incl
div
lea
out
sti
xchg
xchg
in
cs
out
aad
ss
fcmovbe
loop
incl
out
lret
xchg
mov
xor
xlat
in
iret
fdivl
aas
cmc
loopne
std
lock
std
out
mov
mov
jecxz
ss
in
ljmp
cmp
cli
idivb
movb
cli
ljmp
mov
in
das
cmp
fcmovnu
shll
out
ret
rcr
sbb
cld
nop
test
cld
shr
out
out
int
ss
out
aad
clc
cld
lock
fnstcw
frstpm(287
clc
sti
sub
call
rcl
jmp
leave
int3
into
into
enter
loopne
out
fcmovu
ljmp
lock
repnz
mov
loopne
jmp
sti
loopne
ljmp
test
sti
jmp
into
loopne
stc
into
rclb
shr
cmp
fdivr
hlt
sarb
int
stc
in
fldl
mov
xchg
lock
divl
aaa
call
in
shr
ror
fcomi
in
test
aam
out
std
sti
xor
loopne
ret
int3
into
xor
fnsave
xlat
xor
std
loope
add
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
leave
lret
sbb
fiaddl
jle
xlat
xchg
std
call
out
lea
stc
fdiv
ror
xor
sar
roll
faddl
repnz
ret
ret
fmul
ror
aas
xlat
lock
shl
add
out
or
xchg
loope
clc
cmc
into
in
int
cmp
jmp
test
cmp
repz
cld
mov
fiadds
aad
xor
aad
ret
xchg
idiv
fsubrp
fiadds
jecxz
lock
das
sar
sarb
fidivrs
loop,pt
out
ss
les
icebp
fcmovbe
cli
lret
addb
lret
in
xor
hlt
call
in
fidivrl
fdivrp
mov
lret
int3
decl
repnz
fbstp
xor
fcmovu
out
in
int
fdivp
xlat
test
fldl
loope
loope
divl
repz
shll
ror
jmp
lock
loopne
loopne
fxam
dec
int
orb
ljmp
cmp
int
sbb
hlt
shl
mov
mov
adc
shl
sti
inc
shr
sarl
shl
std
inc
ffreep
mov
les
int
icebp
xchg
fmul
xor
cli
in
fistpll
in
repnz
iret
aas
roll
jmp
test
cld
in
fisttps
cmc
int3
stc
xor
imul
sar
aad
roll
loop
fucomi
test
out
cs
xor
repz
in
call
in
frndint
adc
loop
jmp
stc
popl
out
leave
repz
out
lock
xlat
sar
test
aam
stc
lds
in
fsubp
cld
lea
cmp
int3
int
faddl
jmp
test
test
divl
sti
in
sarl
in
stc
in
loop
fcmovb
clc
xchg
fucomi
in
ror
and
out
ror
aaa
xor
cmp
shl
xor
cmc
sti
mov
sbb
cld
out
jmp
out
repnz
test
out
cmp
leave
adc
loop
jmp
fcompp
out
repz
xchg
loope
xor
cli
icebp
cmp
out
std
hlt
repnz
jmp
iret
ret
rcr
fxch
in
incl
adc
or
jle
rcr
xchg
test
fucomi
mov
cmp
in
icebp
in
xlat
sti
cmp
in
aad
rolb
xlat
out
mov
adcl
xor
sarb
fcomp
repnz
aam
cli
jecxz
lea
call
lock
icebp
clc
cmp
out
cmp
loopne
not
mov
sbb
in
lea
cmp
in
test
out
xor
fsub
shl
std
cmp
mov
into
cld
fcomp
fcmovbe
addb
sti
ss
xlat
sar
cmp
test
bnd
loopne
ret
fimull
orl
leave
cld
aad
fmulp
rcl
xchg
loop
sar
in
sti
loopne
ljmp
cmc
jmp
ljmp
aam
cmc
out
ret
fdivr
shr
lret
test
cld
rcl
jmp
sar
repz
test
cmp
movb
jmp
repz
into
in
out
cmp
jecxz
hlt
xchg
repnz
sub
std
loop
popl
jmp
rcr
cli
lret
fucom
cli
aam
xchg
in
jmp
aad
call
cmc
aaa
rcl
shl
cmp
rol
cmp
jmp
and
jecxz
mov
cs
xor
enter
leave
stc
cld
cmp
into
not
mov
ret
addb
in
in
rol
xor
cli
xor
lret
shr
mul
ret
adc
out
fcmovnu
mul
loope
xchg
in
fucomip
loop
aaa
xor
xor
xlat
fildl
aam
adc
nop
shl
iret
mov
xchg
xor
sarl
fidivrs
fxtract
fidivrs
std
mov
lret
out
loope
jmp
repnz
rcr
int3
test
and
cmc
std
sbb
test
out
out
fnstcw
hlt
loopne
ret
ds
ljmp
out
in
rclb
fyl2x
xor
iret
cmp
call
int
in
or
fadd
flds
jmp
aaa
xor
imul
add
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
repnz
std
aad
add
mov
sti
out
out
fmulp
loope
sub
lret
fdivrs
stc
loope
ds
fcmovne
cld
fmul
loopne
fiaddl
in
call
iret
sti
jmp
ret
roll
loopne
dec
test
out
aaa
out
les
rcl
ljmp
xchg
cld
ljmp
cld
in
jecxz
rol
lret
cmp
cld
fcmove
repnz
ds
fadd
in
fildl
xchg
out
aam
fscale
aad
int3
sar
loopne
mov
add
fsub
imul
std
mov
in
shl
loop
loop
aad
fdiv
xor
repz
out
ljmp
mov
leave
cld
aam
into
int3
out
enter
jmp
lret
rolb
out
test
jecxz
clc
xchg
fisttpl
cmp
sar
das
cmc
fdivr
shr
in
ss
loope
hlt
in
out
test
mov
les
call
ds
movl
test
std
notb
jmp
in
xor
std
sti
cld
cmp
xchg
jmp
jmp
mov
iret
test
aam
lock
rcl
xor
int3
out
aam
cld
add
in
addl
jmp
loope
xor
lret
lret
xlat
jmp
hlt
loop
cld
fadd
aam
xchg
testb
in
xor
lret
stc
cmp
aam
lret
fnstcw
call
out
xchg
ljmp
fcmovu
jecxz
xchg
xchg
test
xor
repnz
ftst
in
cld
mov
and
repnz
repnz
lret
imul
rcl
adc
icebp
fistpll
repnz
mov
enter
mov
std
xchg
xorl
out
cmp
int3
cmp
sbb
out
loopne
loope
in
cmp
mov
clc
xor
int3
cmc
in
fsubrp
ds
into
ret
test
cld
leave
out
adcb
into
rcr
aaa
divb
in
ret
repnz
fsubp
mov
jmp
jecxz
notb
sub
jmp
leave
rcr
fcomp
cmc
pop
fildl
popf
sub
inc
mov
jle
sar
stc
cmc
faddl
sarl
sub
int
xchg
fsubrp
in
fcomip
aad
jmp
idiv
cmp
repz
icebp
in
faddl
jmp
lds
mov
aad
std
out
int3
loope
loope
fdivrs
in
and
fdiv
in
lock
repnz
jmp
xlat
in
shr
aas
out
fadd
cmp
loopne
jecxz
test
int3
lds
xchg
hlt
fucomip
repz
in
cmp
clc
cmp
rcr
shl
xchg
xchg
mov
std
hlt
lock
hlt
out
xor
hlt
leave
into
cmp
repz
rcl
div
ds
out
xchg
ljmp
rcr
out
int
std
ror
test
fcom
lret
addb
fucomip
mov
cmp
jmp
fnstsw
aad
cmc
in
sar
test
loopne
out
out
vprotd
jmp
out
shlb
fidivrl
cmpb
into
aam
repz
call
int
mov
sti
std
xchg
in
in
cmp
repz
xor
loope
enter
loopne
mov
add
mov
xor
fcmovne
clc
stc
sarb
cmp
cmc
div
clc
leave
loopne
fucom
and
xchg
mov
in
int3
repnz
leave
jmp
shl
add
jecxz
loop
addb
cmp
cmp
fsubrp
out
hlt
xchg
lret
in
cld
mov
int
rcl
ret
in
ljmp
clc
in
iret
xchg
jecxz
fisttpl
sub
shr
sarb
rcr
jmp
fdivrp
stc
aad
test
shr
rcr
hlt
mul
hlt
fdivrp
leave
in
rcl
in
iret
leave
clc
xbegin
cmp
loop
in
std
xchg
stc
ljmp
mov
lret
lret
fiadds
in
lds
dec
cmp
jmp
xor
xchg
loopne
jecxz
jecxz
call
cmc
xor
into
rcl
fdivp
lock
clc
lret
iret
lock
out
out
cld
fcomp
movl
int3
repz
lock
sarb
std
in
repnz
ret
call
stc
mov
out
add
jmp
rcl
iret
aam
aad
sarl
cmp
sbb
cmpsb
jg
fiaddl
jle
shlb
int
cmp
cmp
dec
out
in
sti
xlat
aas
ljmp
clc
repnz
int3
fucomip
repnz
icebp
lock
rcr
int3
into
clc
sti
rcl
cmp
test
out
xchg
fsubp
les
cmp
cli
std
fdiv
stc
cmp
stc
aas
loop
in
xchg
xlat
xchg
lret
cld
fcmove
fucom
int3
aad
xor
out
cld
jmp
sar
cld
test
shl
test
mov
out
into
loop
xchg
in
loop
das
aaa
xor
in
out
ds
ljmp
addb
mov
out
nop
std
repz
xor
ljmp
clc
in
aad
shl
aam
incb
ficoms
icebp
sarb
fiaddl
in
clc
fmul
sub
jmp
xchg
mov
aaa
jecxz
xor
cld
ffree
lock
aad
neg
div
loopne
in
sti
fmull
xor
out
rcl
cmp
ret
test
out
fpatan
leave
cli
mov
lds
mov
in
lds
aad
xchg
ret
fxch
out
mov
loopne
mov
out
das
out
cmp
lock
enter
jecxz
cmp
fadds
sbb
call
jmp
loop
lock
stc
dec
icebp
hlt
add
clc
out
out
call
in
ljmp
call
xlat
rol
clc
test
lock
loopne
std
xchg
hlt
rol
xor
cmc
in
cmp
in
cli
rol
sti
std
in
lea
and
in
xlat
repz
jmp
icebp
jmp
cmp
loopne
incl
int3
iret
out
xchg
mov
lock
lds
xor
fidivrs
sarl
icebp
ret
aad
mov
jecxz
hlt
ret
in
aaa
hlt
sarl
fildl
std
fdiv
aam
in
loop
mov
in
in
out
std
xchg
xchg
xor
aaa
loop
xor
int
shr
neg
clc
cli
test
cmp
rcr
call
repnz
into
cmp
aad
roll
loopne
fcmove
fisttps
loopne
pop
clc
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
call
test
jle
add
xchg
nop
out
clc
idivb
idivb
jmp
out
fucom
jecxz
and
fcmovnu
int
adcb
aaa
fcmove
test
roll
sbb
inc
addb
ret
aam
lock
leave
call
jecxz
std
loope
sti
cld
ljmp
repnz
aaa
leave
stc
cmp
cmp
cld
and
adc
rcr
jecxz
das
lock
cmc
rcl
lret
loopne
cli
mov
inc
mov
addl
call
out
int
iret
jmp
shl
rolb
mov
fiadds
lret
fldln2
out
icebp
cmp
xor
in
in
test
stc
mov
ret
mov
call
cld
fsub
mov
lret
jmp
ffree
out
fsubrp
fxch
adc
rol
sti
loopne
popl
lock
shl
cli
ss
icebp
stc
cli
not
mov
out
aas
test
xchg
loopne
shr
xor
xor
in
repnz
ds
cld
ljmp
rorl
xor
lock
loop
jecxz
ror
in
int3
cld
lds
int
mov
clc
int3
cmc
jmp
cmp
ret
loop
in
out
fdivr
out
adc
call
out
clc
cmp
cmp
bnd
fcmovbe
ret
mov
fucomp
neg
iret
fnop
cld
cmc
not
shl
icebp
cmpl
cmp
fmul
rcr
lea
leave
clc
xlat
out
cmp
xlat
cmp
rcl
xlat
out
leave
mov
loope
int3
xchg
leave
int3
in
repnz
in
clc
enter
jmp
out
aad
fidivl
fyl2xp1
loope
aad
in
in
fcoml
in
xor
clc
fnsave
cmp
std
fdivp
test
in
leave
int3
cli
fmull
shl
xor
hlt
fxch
in
stc
cmp
std
aad
clc
repnz
mov
mov
icebp
iret
call
icebp
in
clc
out
ds
lock
cmp
iret
repz
xlat
fmuls
scas
shr
je
add
rol
lret
ror
int
aam
mov
stos
jb
stos
jg
fiaddl
jle
xlat
ror
std
int
rcr
shr
in
enter
cmp
std
rcr
repz
in
aad
loop
call
xchg
loop
repz
hlt
cmp
aam
out
iret
in
in
ret
adc
shl
stc
xchg
fsub
loopne
xor
xchg
call
not
cli
int3
sti
out
loope
push
mov
hlt
aad
mov
sub
in
xchg
mov
out
cmp
lret
cmc
hlt
fucom
roll
fstp
cli
into
iret
adcl
cs
ss
ds
in
repz
fadd
mov
rcr
jecxz
jmp
rcr
xchg
xchg
out
out
les
aam
xlat
loope
in
cmp
hlt
mul
cmc
ret
lds
cld
adc
sbb
repnz
sti
shl
iret
call
loop
lock
leave
xchg
ficoml
ljmp
aam
loopne
aam
clc
aaa
and
loopne
filds
mov
in
fnstenv
test
xor
aam
clc
cmp
in
fstp
test
mov
xchg
iret
in
in
iret
clc
out
leave
cmp
int
sti
cmp
fdiv
cld
repnz
not
fstp
in
xchg
xchg
ffreep
sub
shlb
enter
or
neg
fld
ds
fcmove
aas
out
loop
ljmp
cli
cld
cmp
jmp
xchg
sar
std
call
cld
xchg
ret
in
int
cmp
lret
cmp
div
test
out
mov
cmp
test
out
test
xor
repnz
stc
in
ror
fcmovbe
cmp
xor
fdiv
enter
jecxz
mov
call
xor
in
aaa
in
cli
shll
aam
aam
cmp
lock
cmc
out
cmc
mov
mov
out
into
int
nop
int3
sub
sub
aad
fdivrp
push
sbb
int
testl
iret
test
iret
repz
out
lock
in
lret
ror
in
idivl
jecxz
cld
repnz
ret
sti
mov
lret
addl
xor
fsubrp
icebp
neg
fidivrs
in
xchg
fsubp
mov
clc
cld
test
shrb
into
enter
shr
std
shl
out
cmp
fninit
ret
cmp
jbe
jmp
int
lret
lret
int
mov
fisubrl
lods
jg
fiaddl
jle
call
in
repnz
das
fcmovu
std
std
std
icebp
std
out
jmp
shl
shl
out
stc
enter
in
and
lock
cmp
xor
rcl
loopne
in
int
out
fcomp
rorl
in
test
cld
and
enter
ror
fistpll
ror
in
hlt
clc
in
orl
ret
fdiv
lret
cmp
out
cld
leave
xor
cld
out
addl
fsts
in
jmp
sub
xor
out
cli
out
repnz
cmp
in
std
repnz
in
leave
in
int
in
rol
repnz
out
cmp
repz
ds
test
fdivrp
and
loopne
call
enter
hlt
cmp
out
out
out
sar
fmul
addb
fxam
mov
repnz
ret
cli
test
hlt
repnz
ljmp
cli
vpaddb
in
in
test
call
in
cmp
ds
xor
ds
xlat
ret
fmull
jecxz
ljmp
repnz
cmp
roll
xchg
out
out
loope
out
shr
xor
rol
fcom
fstp
std
int
loope
ds
sar
hlt
clc
lret
call
in
jmp
clc
shll
shlb
cmp
repnz
jmp
faddl
jmp
idiv
mov
in
int3
into
ljmp
out
cmc
repnz
cmpl
fdivrp
ljmp
enter
xchg
fildll
shr
ss
rcl
lret
fdivr
iret
cmc
in
mov
fucom
call
xor
icebp
sar
ljmp
test
test
div
in
loopne
out
sbb
repz
icebp
out
stc
cmp
lock
idivl
cmc
fcmovb
mov
in
idiv
iret
or
leave
int
in
icebp
iret
jecxz
xor
ror
icebp
cmp
int
sbb
cmp
adc
mov
orb
xchg
xchg
out
shlb
int
aad
cmp
cld
fucom
xlat
rolb
test
mul
leave
in
dec
out
not
out
aaa
lret
hlt
xor
cmp
loopne
pop
jmp
ror
ror
aad
inc
push
mov
fiaddl
jle
sub
ret
cli
mov
test
int3
int
fucomi
repz
jmp
call
out
cld
faddp
enter
icebp
mov
mov
jmp
sti
iret
int3
xlat
in
aaa
and
cmc
in
out
cmc
in
in
cld
std
xlat
cld
int3
shr
lock
int3
cmp
cld
push
rol
shl
cmp
fnstsw
cmc
xlat
testl
xor
call
aaa
cmp
test
out
cld
add
in
clc
fmull
lret
fninit
lret
cmp
aad
iret
fld
enter
into
in
repz
fdivp
out
in
out
call
cmp
int
aas
cli
ds
idiv
incb
std
jecxz
in
stc
repnz
into
aas
clc
cmp
iret
std
cmp
fstp
call
mov
add
xchg
repz
loope
shr
jmp
int3
cmp
iret
addl
out
out
xchg
leave
jmp
aam
das
jmp
sti
xor
fdivp
lret
cmp
loopne
out
fadd
ljmp
sub
icebp
lret
xlat
shr
repz
xor
add
leave
xchg
fucomp
ljmp
out
ret
cld
sti
cmc
sti
and
fdivrl
fcmovnu
rcr
out
cld
nop
jecxz
xchg
jmp
clc
sub
aaa
cld
hlt
xlat
sti
in
xlat
aad
hlt
cld
repnz
jmp
or
into
iret
cld
loopne
mov
iret
aam
int3
std
fdiv
cld
sarl
test
sti
jmp
jecxz
xchg
shl
icebp
shlb
out
cmp
aas
aad
adc
cli
out
ljmp
sub
call
rcl
lret
fdivr
fidivrs
aas
lds
ljmp
in
out
shl
xor
cmp
out
loopne
iret
cmp
std
std
fucom
test
rorl
repnz
xor
cmp
stc
out
roll
lock
xchg
shl
mov
int3
xor
fdiv
xor
aas
shl
xlat
rol
in
lds
loopne
int3
out
xchg
leave
int
cmp
shr
lret
pop
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
inc
inc
adcb
mov
jle
add
xlat
aam
jecxz
rcr
or
leave
cld
orb
enter
leave
in
xor
cli
fsubr
stc
jecxz
into
test
ret
ljmp
cmp
ss
jmp
enter
out
sub
in
cli
repnz
mov
into
icebp
xchg
loop
imul
out
fsubr
adc
in
xor
cli
cmc
loop
leave
cmc
loope
sti
int3
in
ljmp
cmp
aas
hlt
in
not
loopne
or
fisttpll
mov
jmp
cmp
aam
rcr
cmp
loope
xchg
aam
std
out
cld
enter
std
jmp
ss
jmp
cld
sti
fnstsw
addb
lret
out
fsub
cld
cld
xchg
iret
xor
xor
aaa
cs
sbb
in
sub
jmp
out
in
in
int3
leave
xor
sti
idivb
in
lret
cmp
in
aam
cmp
adc
xchg
jecxz
call
aaa
int3
lock
idiv
into
test
jmp
mov
mov
addl
out
cmp
cmpb
cmc
fdiv
shr
jmp
xlat
int
fmulp
loopne
loopne
lds
in
fcmovnb
lret
out
lock
jecxz
aas
cld
repz
test
jecxz
out
shl
icebp
mov
clc
ret
lock
add
mov
fcomp
fxam
jmp
xor
fninit
cmp
jmp
aas
sti
int
incb
lret
fst
into
in
xchg
rolb
out
sti
in
sar
in
fcmovne
ret
int
jecxz
out
test
call
xchg
int
enter
cmp
clc
fstpt
repnz
incl
incl
cld
in
jecxz
jmp
xor
jmp
lret
iret
ds
into
shl
std
clc
decb
mov
ffreep
int
cmc
fdivrl
aam
into
enter
icebp
test
in
out
xchg
hlt
loopne
xor
int
cmp
in
fcomip
aaa
incb
cmpl
lds
repz
aaa
fst
ss
cmc
into
repz
incl
jmp
repnz
mov
das
ljmp
roll
add
rcl
leave
fmull
out
mul
xor
into
shr
fdivp
repz
rolb
lds
adcb
iret
fdivr
dec
cmc
repnz
ds
icebp
ljmp
in
mov
shl
loopne
int3
in
in
cmp
stc
push
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
push
push
jg
pop
add
fcmovne
cmp
loopne
test
lds
out
orl
cmc
fdivr
xor
ror
aad
iret
fsubr
out
cmp
jecxz
int3
mov
out
nop
orl
out
ljmp
les
call
cmp
call
icebp
lret
in
aas
aas
test
filds
cld
loope
fldl
out
xor
repnz
shl
xor
cmp
fstpt
xor
mov
les
loop
xchg
shl
loop
fdecstp
aad
fstpt
cli
aad
fcomi
cmp
lret
loop
mov
call
enter
xlat
loopne
rol
cld
std
fdiv
rol
cli
in
fld
add
fucomi
out
xchg
ljmp
jmp
stc
lock
lds
test
xchg
not
aaa
int
cli
enter
loopne
fsubr
aam
lock
leave
shl
inc
lret
jmp
test
sar
in
out
in
into
out
lret
xlat
out
in
out
cld
cmp
aam
xlat
fldln2
fxch
and
cmp
out
jmp
sti
out
loopne
ds
repz
xlat
enter
loop
xchg
aaa
jmp
in
in
leave
cmp
xor
out
shl
hlt
stc
repnz
idiv
fildl
incb
xlat
test
call
xor
add
cli
div
ljmp
or
xchg
aad
fcomp
sar
cmp
aas
cmp
lret
loop
iret
rolb
loop
in
std
mov
icebp
jmp
shr
jmp
cli
cmp
shl
in
fadds
addl
sar
aad
shl
jecxz
int
in
idivl
cmp
xchg
fld
mov
lea
rcl
jmp
iret
repnz
jmp
fcmovbe
cmp
cld
std
in
test
lock
rclb
ret
in
fnstenv
cld
lret
ds
cld
test
out
fdivrp
jmp
loop
xor
xor
std
lret
icebp
repnz
testl
cld
fdivr
rclb
div
repz
iret
fdiv
loopne
fucomip
loop
ljmp
jecxz
loop
xor
xlat
aad
sti
leave
call
repnz
in
loope
xlat
cld
idiv
fisttps
and
clc
fsubr
int3
xor
repnz
fildl
out
mul
sti
cli
test
out
sub
aaa
icebp
iret
fcomip
ljmp
lds
mov
in
int3
orb
xlat
aad
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
scas
dec
mov
jle
add
in
icebp
idiv
std
fnstsw
xlat
cli
xor
leave
ljmp
jmp
xor
fsubr
cmp
stc
test
cmp
rcr
aad
jmp
in
adc
icebp
mov
aam
int
rcl
cld
iret
ds
in
test
ds
mov
clc
mov
xchg
cmc
lret
xchg
xor
in
lock
fcmovne
cmp
clc
loope
cli
fildl
aam
int3
int3
movl
xor
xlat
test
cld
addl
std
enter
out
jecxz
xchg
xchg
jecxz
sub
jmp
aaa
repz
mul
aas
lock
rorl
mov
loop
div
das
leave
xor
fld
cmp
in
test
int
cli
addl
jecxz
out
loope
vpaddsb
ror
leave
cmp
hlt
int3
sar
ret
xchg
loope
in
out
into
rorb
shlb
enter
testl
fadd
xlat
cld
fisttpl
iret
sub
lock
hlt
xor
lock
repnz
ds
fcomp
rol
clc
loop
in
test
ljmp
lock
stc
rol
test
div
fildl
jmp
out
icebp
mov
test
aaa
iret
call
ds
shl
into
test
loope
repz
ret
fimull
sti
fists
in
cli
call
jmp
out
rcr
rolb
xchg
stc
out
xchg
xor
add
fldcw
xlat
std
clc
std
hlt
jmp
cld
addb
loop
fiadds
xchg
in
in
fxch
stc
cmp
cmp
rcl
shl
sbb
out
fucomip
lock
test
test
fmul
out
sti
stc
shl
int3
enter
int3
cmc
adc
jecxz
xchg
int
out
xchg
in
repz
xor
jmp
xor
int3
cmp
sar
out
cli
leave
ljmp
jmp
test
int3
call
cli
aam
enter
cmc
out
in
rol
ror
xlat
lea
jecxz
neg
fidivl
cmc
imul
fcmovbe
out
out
cmp
idiv
test
cmp
enter
fsub
into
repnz
xor
cmp
ss
repnz
test
les
mov
popl
jecxz
shl
xor
in
int3
icebp
loopne
iret
cmp
rcr
ljmp
mov
xor
shlb
xor
lret
xor
hlt
sti
std
in
sub
xor
xchg
incb
not
dec
test
into
loope
fiadds
orb
in
aaa
testb
jmp
ret
ror
aad
and
pop
cli
incb
add
hlt
cmp
cld
aad
cmp
shl
fcmovb
test
jecxz
loope
testl
subl
out
cli
int3
iret
aad
fistpll
and
fldl
test
mov
jecxz
std
int3
test
lock
out
in
cmp
hlt
iret
int
int
cli
fdivr
shl
loope
std
lret
sub
sub
xor
xlat
sti
lret
sub
hlt
fcmove
sbb
fcmovbe
mov
sub
xor
hlt
lock
xor
cld
shr
aaa
idiv
fdivp
div
and
xchg
test
rclb
lret
iret
aad
rcl
cmp
cld
aad
push
repz
fsin
test
out
out
mov
clc
int
aaa
fxch
sti
sar
test
test
iret
jmp
xchg
out
ret
in
cld
cmp
cmc
cmp
clc
faddp
loope
cmc
fucom
mov
roll
lret
test
aaa
cld
cmp
fcmovbe
fsub
sarl
jmp
rorb
ss
sarb
into
jmp
stc
std
into
xor
sub
xlat
incb
lock
out
das
xor
sub
ss
test
cmp
jmp
les
orl
cmc
lds
enter
neg
div
in
ds
fimull
jecxz
rcr
int
repz
cli
aas
aas
aas
rol
testb
imul
mov
xchg
add
call
rcl
shl
fcomi
shl
sbb
addb
fxch
ficoms
loop
cli
hlt
cmp
addl
mov
in
fcmovu
call
lret
cli
lock
sti
xlat
cmp
sar
loop
faddl
add
sti
xchg
lock
hlt
icebp
xor
sub
int
cmp
or
mov
test
mov
enter
call
ljmp
sti
cmp
out
xchg
loopne
mov
shl
leave
enter
sti
fidivrl
fst
sar
ret
loopne
faddl
shrb
ror
cmc
int3
call
xor
jecxz
out
loop
xchg
ret
fmull
div
out
ljmp
xor
loope
shl
movl
jmp
hlt
hlt
iret
int
iret
repnz
repz
loope
fadd
cmc
lret
xchg
fcoml
hlt
in
fidivl
cli
cmp
cmp
icebp
std
in
addb
std
loopne
iret
mov
mov
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
mov
mov
jle
cmc
jecxz
lret
in
out
ljmp
test
loopne
test
lret
out
xor
leave
sub
clc
repnz
sarb
cmc
sar
enter
mov
icebp
sar
call
call
cmp
std
clc
ret
repz
fst
in
fsubr
orb
call
loop
call
cmpl
aad
ret
leave
lret
leave
and
leave
jmp
call
cli
ljmp
fsubr
cmp
ljmp
rcl
loope
repz
std
fcomi
loope
in
sar
loop
aam
out
loopne
xchg
loopne
xchg
loopne
cmc
fdiv
out
lret
out
aad
div
roll
leave
adc
in
xacquire
fnstenv
cmp
cmp
cmc
leave
rcl
rol
out
sti
fdiv
out
lret
ror
test
adc
rcl
fnstcw
sar
ds
out
ret
aas
mul
iret
loope
xchg
xchg
mov
xor
cli
xor
in
ss
roll
jmp
clc
fisttps
jecxz
xor
in
sarl
lret
fsub
ret
imul
cld
fstpt
call
adcb
aad
fdivrl
enter
loope
loopne
addb
test
fildl
xchg
xor
call
out
neg
sarb
out
loop
lock
loop
mov
jmp
into
decb
int
icebp
cld
jmp
jecxz
icebp
repz
test
lret
lds
loop
int3
int3
lret
in
enter
cmp
xor
lret
mul
fimull
aas
lret
fcoml
xor
aaa
out
jmp
fucomi
aam
in
test
ds
fcmovnu
loop
into
in
mov
sti
into
or
fstp
fdivp
divl
into
cld
cmp
in
in
loop
jmp
orb
repnz
xor
ss
aad
rcr
cld
fiaddl
mov
clc
enter
ljmp
jecxz
fcmovbe
fldl
sarl
adc
ffreep
enter
int3
std
ljmp
iret
cmp
cld
cmp
in
loopne
cmp
mov
ljmp
xchg
lret
fldl
jmp
jmp
aas
into
iret
repz
fisttpll
shl
repz
test
call
sti
into
cmp
in
fmull
adcl
fdecstp
jmp
repnz
rol
mov
jmp
fsubr
cmp
movl
jmp
aas
aam
aas
aad
iret
aam
adc
mov
jg
pop
add
ljmp
jecxz
cmp
fildl
in
ror
jecxz
mov
fpatan
popl
xor
jmp
repz
int
cmc
stc
testb
incl
loop
in
out
ss
ds
or
cmc
ds
lret
leave
mov
test
or
iret
in
ljmp
rolb
test
jmp
repz
clc
out
cld
ljmp
fiadds
out
int
mov
out
jmp
fcmovne
repz
ret
inc
and
cmc
out
mov
lret
int
out
rol
in
div
test
sti
ror
rcl
out
in
repz
flds
xchg
iret
xchg
test
div
lret
out
out
aam
jmp
shr
cli
test
enter
ljmp
cs
hlt
leave
out
fdiv
cmp
in
clc
push
cmp
fsubp
repz
xchg
loopne
loope
mov
mov
aad
lret
xor
aad
in
ret
loope
out
or
fmulp
std
iret
rorl
ljmp
sar
out
div
aas
addl
ret
fsubp
xchg
repz
xlat
jmp
xor
call
test
cmp
test
aad
in
int
leave
into
out
cmc
test
fdivrs
shr
aaa
repnz
fdivl
sar
ret
fdivr
testl
cs
cli
out
leave
in
std
cmp
aad
fsubp
icebp
mov
loopne
sti
std
loop
lret
xchg
xchg
mov
ss
in
xlat
shlb
aaa
lret
inc
fcmove
iret
call
aad
mov
call
in
xor
jecxz
icebp
fdivl
cmp
jmp
aam
lret
lea
mov
xchg
out
loop
in
cld
stc
jmp
int
fdivrs
aas
lock
ds
jmp
call
rolb
jmp
cmp
into
rcr
ror
cmp
jmp
xchg
icebp
shl
cmp
clc
enter
fst
std
rol
rcr
mov
int
lock
xchg
aam
out
enter
repz
loope
call
in
leave
loop
shl
out
out
out
lock
call
enter
jmp
test
roll
fcmove
xchg
lock
xchg
xchg
das
int
fcmovb
out
cmp
int
fadd
in
test
fcmovu
cld
ret
fxch
in
and
jmp
shl
cld
in
fucomip
xlat
neg
jmp
xor
fneni(8087
cld
xchg
into
je
mov
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
sub
xchg
mov
in
call
fdivrs
sti
int
dec
int
mov
xchg
int
jmp
in
lock
xor
int
fcmovbe
fcmovnu
rcr
out
mov
lret
into
in
in
lea
fmul
lret
fnstsw
cmp
stc
testb
fiadds
jmp
in
jmp
jmp
cli
or
loope
orl
call
in
cmp
addl
roll
jmp
fists
hlt
rcr
sar
loope
ret
cli
inc
jecxz
int
xchg
test
mov
cmc
out
icebp
int
testb
lret
fmul
leave
and
mov
lret
xor
aam
fscale
enter
in
into
clc
out
shl
mov
stc
in
ljmp
loope
jmp
ds
fdivr
loopne
loop
rcr
hlt
lret
decl
std
xchg
lock
shrb
faddp
xor
test
jecxz
icebp
hlt
div
decb
jmp
jmp
xor
cmp
clc
roll
xor
hlt
addl
int
shl
xor
shl
icebp
xor
lock
jmp
fmul
out
test
loopne
jecxz
out
jmp
incl
cmp
repz
test
loop
iret
shr
ss
leave
aas
cmp
shr
fcom
xlat
aam
clc
rcr
lea
repnz
hlt
repnz
jmp
rol
jecxz
rol
loope
test
xchg
mov
lret
xor
xor
cld
loope
int3
test
vpmovmskb
fucomp
fst
mov
call
sar
adc
jecxz
rol
testb
cli
loopne
repnz
loopne
in
sar
leave
aad
jmp
loopne
out
out
addl
out
xchg
xor
div
hlt
hlt
out
fdivrp
int
ljmp
sti
roll
test
in
cmc
into
xchg
int
aam
cmp
xor
rolb
loope
cmc
cmp
enter
cld
int
shr
lret
cmp
hlt
ret
fmulp
mov
mov
repnz
ficoms
cli
int
aad
cmp
sar
lock
std
test
mov
ret
cmp
fcmovnbe
fucomip
fadd
xor
loope
jecxz
enter
call
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
lea
xchg
repnz
jecxz
xor
out
cmp
out
aam
cli
icebp
test
in
loopne
mov
xchg
int3
shlb
jmp
out
lret
rcl
iret
ret
sarb
sti
aam
fnsetpm(287
mov
xor
ss
out
clc
fcomip
cmp
repz
test
loope
cmc
test
mov
xchg
xchg
jecxz
lret
rcr
int3
cmp
aas
fcom
add
fsubp
ljmp
jecxz
in
cmc
xchg
aaa
out
int
clc
xlat
hlt
cmp
cmp
cmp
aad
xchg
sar
cli
xchg
jecxz
hlt
out
cmc
enter
fcmovu
sbb
in
fildl
in
repnz
jmp
ljmp
test
cmc
iret
rcr
testb
jmp
mov
fsubp
xor
int
icebp
out
cmp
fdiv
loope
idiv
in
and
test
aam
ror
shlb
aaa
xlat
ror
out
xlat
test
fsubrp
out
jecxz
leave
int
ljmp
jecxz
sar
out
ds
iret
or
fcmovbe
mov
cld
loop
int3
sar
sub
jmp
fcomi
ljmp
repz
ljmp
xchg
and
ljmp
das
enter
fistpll
cli
iret
cli
addb
out
loopne
xchg
out
das
clc
ss
in
icebp
hlt
lock
sti
ret
mov
faddl
icebp
cld
xchg
dec
xchg
hlt
aad
jecxz
out
in
fidivl
out
sbb
in
ret
loopne
test
std
mov
fcmovnu
lea
rcl
loop
idiv
sar
into
cmp
cld
ljmp
fisttpl
divl
icebp
rol
cmp
sarl
aaa
ds
clc
in
xchg
stc
sti
lds
repnz
in
out
in
enter
cmp
vpmaddwd
jecxz
test
enter
xchg
shl
in
fdivl
out
xor
sub
out
test
cld
aad
or
xchg
hlt
cs
out
imul
lock
cmp
idivb
aad
xlat
faddl
decb
repnz
jmp
enter
loop
cmp
in
in
mov
loop
loope
ret
xchg
xchg
hlt
shl
shl
enter
jmp
cld
into
jecxz
cli
call
fldl
xchg
adcl
lret
cmp
std
in
in
fcmovnbe
xlat
jecxz
fucomi
ljmp
jmp
aam
fldl
sar
bnd
pushl
pushl
mov
jmp
rcl
int3
lret
fst
fstl
test
xor
pop
add
xchg
fisttps
loopne
mov
fldlg2
fprem1
cld
cmp
sbb
shl
cli
jecxz
std
sti
test
clc
mov
test
mov
repz
icebp
repz
hlt
out
hlt
loope
cld
sti
fstpt
mov
std
int3
ficoml
lock
out
cmp
fld
out
in
cmp
aas
out
ret
test
call
mov
in
in
mov
cs
rcl
ror
icebp
clc
addl
out
in
lret
std
loop
lret
std
nop
bnd
rol
in
repz
neg
cmpl
rcl
rcr
xor
in
repnz
repz
cmc
jmp
out
not
repz
xlat
cmp
aad
xchg
neg
leave
out
int
jecxz
loop
and
hlt
cmp
aaa
in
aas
sar
cmc
cmp
xlat
out
in
out
call
mov
xor
aad
div
cmp
ds
stc
repnz
fcmovu
roll
mov
mov
rorb
in
stc
ror
cmp
repz
lret
fadd
xor
test
mov
int3
out
into
xor
cmc
xor
jmp
rol
jecxz
mov
sbb
cmp
enter
adc
jecxz
shl
clc
in
cmp
lock
movb
leave
nop
into
call
hlt
int
cmp
cld
xor
or
loop
jmp
mov
out
incb
aam
sar
cmp
in
cmp
rol
out
cmp
cli
aad
ret
lea
jmp
in
aad
repnz
xor
repz
faddl
lret
in
loopne
sarb
cmp
sti
shl
loop
fcmovnbe
push
std
ljmp
add
in
out
int
call
aam
loope
iret
cmc
shl
leave
cli
jmp
decb
fmulp
ret
out
vpaddw
cmp
cmp
int
aas
icebp
jecxz
lret
incl
aam
out
cmp
aad
xor
loopne
cmp
fdivrp
sar
cmp
cld
out
int3
mov
out
cmc
mov
out
clc
xor
cmp
icebp
lock
dec
cmp
hlt
sar
jmp
lock
out
aad
idivl
fxch
cmp
aad
icebp
ffreep
test
ret
mov
jecxz
jmp
out
lock
nop
nop
sub
out
test
leave
rcl
iret
rcl
shl
fucomip
std
sbb
repnz
ljmp
lock
in
cmp
ror
int
clc
cmc
in
aad
std
mov
in
cmp
shl
xor
stc
shl
sar
lret
loop
ret
daa
add
jmp
aad
fnstsw
repz
push
sub
scas
dec
jg
pop
add
repz
ljmp
xlat
out
sti
cld
cli
ljmp
xor
rol
call
lock
in
icebp
cs
cli
xorb
fcompp
cld
stc
enter
mov
std
add
loop
lret
ljmp
fld
repz
fsub
ffreep
out
in
mov
mov
test
neg
loop
cmp
out
cmp
loopne
fdivp
cmp
mov
xchg
mov
rcr
jmp
imul
out
sti
clc
rcr
fcmovne
aam
loopne
mov
mov
int3
iret
cmp
cmp
shl
loop
test
test
ljmp
test
rorb
cmc
ljmp
fucomp
jmp
fucomi
ret
rcl
aad
cmp
dec
jmp
repz
int3
xor
cmp
std
icebp
sti
cmp
cmp
aad
roll
cli
enter
nop
xchg
xchg
ret
iret
in
lret
xor
int
jecxz
int
rcl
out
call
lret
mov
leave
test
cli
lock
loopne
jecxz
in
clc
aad
in
fdivr
jmp
into
aaa
fnstenv
clc
leave
int
iret
loopne
fdiv
sti
cli
ror
out
mov
leave
out
loopne
faddl
in
shll
xlat
leave
rcr
loope
xor
mul
xlat
out
jmp
faddl
icebp
sub
xor
icebp
in
sarb
into
clc
ljmp
loope
aam
enter
xchg
les
ss
out
sti
cmp
ljmp
hlt
loopne
enter
in
in
xchg
sti
cld
and
lock
call
aas
cmp
xchg
loopne
nop
loopne
test
and
ljmp
cmp
hlt
sar
aas
out
and
fadds
xchg
out
add
ret
cmc
ljmp
jecxz
cmp
xlat
cld
out
sar
jmp
jmp
int3
loopne
xor
call
fyl2x
cmp
aas
int
xlat
hlt
mov
xor
lret
int3
out
out
ljmp
cmp
rcl
aad
shl
cmp
ret
imul
aam
idiv
test
xlat
xchg
std
ffree
in
mov
lret
icebp
lret
aas
aaa
cmp
fcmovnb
or
leave
sti
fstl
in
icebp
jmp
lock
aam
aaa
cld
aad
fiaddl
cmp
in
fucomi
xchg
in
out
int
ljmp
aas
jmp
testb
in
enter
mov
fdivp
aam
in
not
xlat
cmp
jmp
sti
test
add
cmc
add
add
aam
aas
aad
iret
aam
ljmp
stos
mov
mov
jle
add
xlat
idiv
xchg
push
out
out
sbb
jmp
call
cmp
or
jecxz
and
fisttpl
int
mov
ljmp
ror
fsubr
out
cmp
stc
clc
fcmovu
xchg
repz
xor
int
shr
leave
cmp
ds
xlat
add
fadd
mov
mov
lea
lret
int
out
xor
std
in
shr
sar
aas
int
shl
loope
jmp
int
loop
loop
out
test
jmp
cmp
lret
out
out
shl
call
jecxz
in
fisttps
shl
aam
cmp
sti
ret
loop
ret
cli
fcomi
mov
mov
neg
icebp
cli
fcomp
cmp
ret
xor
sbb
jmp
lock
lock
stc
ret
cld
loop
neg
leave
idiv
loop
out
faddl
iret
aam
rol
ljmp
std
jecxz
or
xchg
fldl
mul
int
xor
lock
cmp
in
loop
mov
test
std
fadd
sar
int
aaa
out
aad
call
rcr
stc
fdivrs
sbb
mov
ret
into
fcmovnbe
lret
lock
lret
jmp
repnz
xlat
in
ret
jmp
int
fcmovnu
out
hlt
in
out
imul
aad
cli
aam
jmp
cmc
cmc
lock
rcl
xlat
jmp
mov
lock
cmp
sub
les
repz
lock
cli
loop
loopne
in
out
orb
loop
repnz
fnstenv
int
call
adc
xlat
cmp
fcmovnu
int
add
xchg
xchg
test
icebp
loop
cmp
xor
rcr
int
not
aad
fcomi
fcomp
inc
jmp
out
fcoml
jmp
xor
int
out
repz
mov
cmp
into
enter
mov
enter
in
hlt
cmp
cmp
jecxz
out
xchg
hlt
repnz
out
and
mov
rorl
cmp
xor
int3
mul
cmp
call
rolb
fucomp
lret
jmp
xchg
notb
in
cli
clc
clc
cmp
hlt
in
mul
cmp
lret
int
out
loop
xchg
mov
iret
jmp
lret
and
fcomip
loop
stc
fmulp
in
xchg
loop
cli
ror
jmp
fidivrl
ds
xlat
and
test
fprem
out
in
loopne
repz
mul
xor
testl
inc
clc
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
iret
sub
pop
add
loope
cli
std
loopne
xlat
std
test
lret
out
nop
lock
iret
loop
out
ljmp
aas
cmc
fmul
lret
testb
xlat
lret
in
out
lret
cmp
cld
repnz
fidivrs
aam
hlt
out
in
fninit
aad
sar
ret
repz
out
div
aas
lret
loop
rol
dec
aam
jmp
sti
cli
ret
out
std
mov
aas
sub
xor
int3
cmp
fstpt
cli
in
fmulp
call
fcmovu
fucomip
int3
lock
adc
lock
repz
lock
add
rol
out
shr
addl
rcr
neg
cmp
cld
call
ret
jecxz
int3
roll
stc
repz
sar
lock
shll
aam
rol
test
fincstp
mov
std
test
fmuls
std
iret
out
xor
icebp
sti
sti
iret
test
into
cmp
loope
xchg
xchg
shlb
sar
fcmovu
in
std
fdiv
sti
loope
testl
jecxz
lret
out
loope
sub
jmp
fdiv
fcmovnu
sbb
cmp
sbb
lret
mov
int
ffreep
lret
aaa
ror
repz
idiv
sti
fcmovbe
test
clc
jmp
nop
lea
ret
xor
cld
dec
cmp
iret
out
aad
add
test
std
loop
out
jecxz
fst
jecxz
shr
int3
ljmp
cmp
cmp
testl
xchg
nop
not
shl
aam
out
cmp
cmp
fadd
xor
test
jmp
xchg
xchg
cmc
out
xor
call
fcomp
shl
and
fdivrp
hlt
stc
mov
faddl
xor
fst
aad
neg
in
lock
in
mul
xchg
mov
fisttpl
inc
jmp
sti
in
ljmp
cmc
repnz
cli
xchg
out
in
ret
adc
aad
xor
shlb
in
aam
stc
hlt
idivb
testl
nop
jecxz
icebp
out
lret
mov
into
xor
lret
ljmp
fcomip
sar
leave
xchg
fmul
out
fiadds
xor
shrb
fnstsw
sbb
or
xchg
loopne
lret
fmulp
out
in
fabs
xor
cld
xor
loopne
cmc
in
mov
cld
fimull
jmp
mov
shr
jecxz
div
int3
std
cmc
out
cmp
fcmovbe
hlt
rcr
in
fdivr
in
fucomip
ljmp
ret
int3
in
fcom
mov
jmp
int3
ror
fst
mov
mov
push
jg
pop
add
lret
cmp
fnstsw
loope
cmp
mov
in
loope
jmp
lret
out
out
cmp
icebp
cmc
into
rcr
aas
fdiv
shl
call
ret
call
enter
cmp
jmp
fadd
stc
in
fmulp
sub
cld
sti
mov
int3
jecxz
leave
sbb
fiadds
cmp
fmul
int
ljmp
cmp
cmp
xor
lock
jecxz
mov
cli
jmp
mov
adcl
enter
cmc
cmp
ffree
mov
fadd
xchg
lock
in
das
int3
xlat
shl
sarl
cmp
sti
fpatan
xlat
call
fstp
loope
repz
rol
in
stc
ljmp
jecxz
repnz
jmp
xchg
mov
icebp
cmc
out
ror
sarl
cmp
out
fcomp
ljmp
loopne
xor
lret
out
push
std
ret
and
not
cmp
jmp
in
lock
ror
roll
ljmp
xor
cmp
mov
aad
mov
icebp
test
mov
divb
fcomi
aam
aad
fucom
repnz
les
in
mov
aad
lret
cmp
cmp
jmp
clc
rolb
in
fisttps
repnz
nop
out
aam
out
cmp
lret
ror
aas
and
flds
repnz
hlt
fcmovnbe
vpminub
testb
shl
in
ret
fucom
fcmovu
ror
nop
jmp
ret
xor
call
sub
xor
iret
cmc
fcompp
out
mov
lret
int
sar
iret
incb
leave
aam
repz
rcl
in
rcr
loope
repnz
into
loopne
addb
cli
cmp
cmp
cmp
repz
out
in
hlt
mov
stc
mov
xchg
out
in
aam
xlat
cmp
cmp
aam
lret
aam
xor
cmp
int3
fdiv
mov
shlb
in
xor
clc
cmc
aad
rcl
shl
in
jmp
in
in
jmp
repnz
mov
xor
icebp
ljmp
aam
sti
cmp
cmc
stc
cmc
leave
ret
addb
jmp
fcmove
rcl
leave
out
fcomip
rcr
shl
fdivp
icebp
test
mov
ret
rcl
jecxz
lock
shl
in
shl
enter
fsubp
out
faddp
rcr
aam
mov
mov
ror
xchg
jmp
aaa
xor
add
cmp
jne
jmp
leave
aad
aad
int
jge
in
and
push
pop
push
push
jg
pop
add
int3
aaa
out
fcomip
fxtract
hlt
xchg
aas
cli
lret
leave
int3
leave
lret
in
fcmovnbe
fst
ret
ror
jecxz
in
fcmovnu
ror
ds
inc
cld
mov
xchg
repz
addb
leave
lret
lret
cmc
loopne
sar
shl
loope
call
cld
fcmovnb
in
std
jmp
in
cmp
fadd
cli
std
fcomi
fsub
orb
orb
ljmp
aam
rcl
cmp
rol
fcmovnbe
mov
lret
out
vpmaddwd
out
fsubp
aas
hlt
lock
rcl
out
rol
std
jmp
popl
loope
shl
jmp
rcl
out
shl
loope
test
imul
imul
mov
iret
mov
xor
rcr
shl
icebp
repnz
std
shr
call
enter
call
cmp
xor
cs
enter
shr
out
loopne
out
lret
mov
hlt
in
xor
lds
sarl
fsub
cmp
hlt
cmp
aad
fsubrp
xchg
in
mov
in
sarl
cld
lret
dec
cmp
out
test
xchg
jmp
lea
aam
cmp
shr
cmc
aam
shl
loope
loope
xchg
out
in
mov
or
out
rcl
ror
sti
stc
xor
cmp
mul
iret
les
ret
loop
clc
leave
lock
shr
in
xlat
iret
ret
jmp
fnstsw
in
repz
fcmovb
and
fucomip
in
fsubr
repz
out
clc
jecxz
cmp
iret
fsub
xlat
cmp
sar
into
cld
fmull
fiadds
out
xchg
f2xm1
in
xor
in
test
ror
cmpl
ljmp
int3
repz
hlt
cmc
into
icebp
div
ds
cld
sarl
xchg
xchg
mov
leave
xchg
jmp
jmp
fst
fistpll
shl
cli
fmull
stc
rorb
xbegin
out
call
iret
in
aad
jmp
xchg
clc
out
fdivrp
rorb
test
cld
out
jmp
ret
test
xlat
fcmovne
xlat
test
test
lock
in
xchg
mov
out
xor
xor
enter
lret
loopne
icebp
sarb
and
dec
in
std
fsubrp
fdivp
clc
int3
aam
cmp
cmp
int3
into
movl
cli
out
nop
xchg
test
xor
xlat
xor
das
stc
lock
enter
jmp
test
mov
ljmp
jmp
ret
les
je
push
sub
pop
jg
pop
add
shl
sar
into
cld
lock
iret
stc
rcl
aam
fmul
jmp
xchg
in
ss
ror
loope
sti
out
icebp
test
leave
jmp
fcmove
fcmovu
fstp
xchg
into
ror
ss
rcr
sti
xor
in
stc
aad
or
out
int3
in
ficoms
xlat
xor
cmpb
ffreep
repnz
testb
test
into
out
out
aam
xor
icebp
aam
cmp
cld
fidivrs
rcr
loopne
test
jmp
std
xchg
in
loope
int
xor
shr
icebp
das
clc
cli
cli
iret
int
leave
test
mov
in
into
xor
jecxz
iret
out
icebp
cmp
cmp
iret
adc
cld
out
in
loopne
nop
roll
repz
shrb
clc
call
aad
repz
ds
cld
xchg
xchg
shr
fxch
iret
cmp
aaa
cld
rol
lock
adc
out
in
mov
cmp
shl
test
shl
jmp
lret
fdivs
int3
test
test
test
mov
cld
fcmovnu
fsub
adc
cmp
int3
iret
jmp
iret
xabort
add
fucomp
iret
in
fldl
shl
xor
cmp
loopne
cmc
shl
std
and
fdivrp
out
ljmp
call
out
out
aad
cmc
aas
sti
in
test
repnz
fcomp
in
int3
test
mov
xchg
into
xchg
xor
rcl
rcr
jmp
call
push
ret
test
jecxz
jmp
in
ljmp
repnz
in
neg
hlt
jecxz
fidivrs
add
decb
sti
test
in
out
in
repnz
in
ljmp
roll
loopne
aas
xlat
jecxz
mov
out
icebp
int
hlt
hlt
stc
aaa
sbb
fdivr
repnz
fdivr
mov
fists
mov
fsub
xor
cli
into
in
aad
lock
lret
xchg
fucomi
repz
loope
shr
das
std
iret
stc
loop
stc
jecxz,pt
cmc
div
in
xlat
jecxz
std
loopne
loop
rcl
in
ss
div
cmp
ret
ss
into
lock
fsubr
enter
fdivrp
mov
jecxz
in
xor
rcl
aaa
fcom
in
jmp
aam
roll
rcr
fiaddl
leave
lret
xor
lret
hlt
fcomi
in
std
hlt
xchg
sar
stc
mov
call
lock
into
ret
xor
mul
repnz
cmp
ret
lret
incl
nop
xchg
add
mov
mov
jmp
rol
rol
rcl
aad
add
fldenv
lds
jg
pop
add
mul
div
fmul
cmc
leave
fucomip
ljmp
test
ljmp
cld
int
in
int
clc
clc
out
enter
int
repnz
loop
ret
enter
in
out
mov
div
imul
imul
out
std
rcr
loope
lret
aaa
ret
loope
aas
ret
test
sti
test
out
hlt
test
lds
fcomi
ds
icebp
fnstsw
xchg
xchg
loopne
sti
inc
mov
mov
xor
cmp
int
sarl
rol
aas
loope
test
out
cld
ror
mov
lea
out
xor
cmc
std
out
rol
int3
in
call
lock
lret
mov
fimull
cmc
not
das
in
std
xor
cmp
loope
test
stc
std
mov
aam
call
in
in
mov
ret
cmp
cld
icebp
aaa
shl
rcl
std
xchg
hlt
test
jmp
nop
cli
loop
rorb
vpextrw
xlat
iret
out
lock
leave
fcmovnu
fisttpll
xchg
mov
icebp
enter
lret
cmp
lret
rcl
pushl
clc
fsub
mul
loopne
test
fsub
sti
std
xchg
int3
repz
clc
shl
clc
cmc
rcl
ljmp
xlat
std
in
fdivr
sti
test
int
leave
xchg
std
rol
out
sarb
iret
fstpt
ds
test
lret
addb
enter
in
in
jmp
cli
rcl
idivl
loop
rcr
loope
test
int
stc
cmp
shl
stc
call
out
sti
fcmovne
into
fidivrs
in
xchg
xchg
xchg
sub
out
stc
cmp
sarl
ret
loopne
test
out
test
jmp
int
ds
sti
xlat
xor
repnz
ret
xchg
fists
hlt
int3
in
sarb
out
loop
in
rcr
sbb
loope
addb
into
int3
int3
xor
xor
icebp
sti
xlat
xlat
stc
jecxz
jmp
fsubrp
sub
test
ss
test
int
cmp
cld
sar
cld
lock
fdiv
out
jmp
iret
enter
hlt
rol
icebp
jecxz
rcl
lret
aaa
ret
ds
fildl
mov
repnz
xchg
and
out
leave
fcomp
lock
fucomi
in
iret
cmp
ret
in
enter
nop
cmc
mov
sub
cli
shr
icebp
lret
aas
icebp
jecxz
cld
ds
sbb
jmp
fisttpll
rcl
mov
loope
hlt
clc
out
int3
loope
ror
neg
jecxz
call
sbb
stc
ret
xchg
xor
add
mov
pushl
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
sarb
js
mov
add
roll
xor
clc
test
ror
lock
cld
rcl
cld
clc
std
in
loopne
test
into
jmp
cmp
out
shl
xlat
aad
mov
loop
mov
fldl
jmp
in
xor
out
out
xor
ds
fidivs
loop
cli
clc
aam
ret
fsts
loop
icebp
aad
xor
lret
cmp
aam
ss
fdivp
in
fcmovu
xor
in
icebp
loope
xchg
inc
out
mul
cmp
enter
fscale
fdivr
cli
lock
ret
xchg
ljmp
lock
xor
xlat
clc
hlt
in
call
bnd
stc
in
cmc
jecxz
mov
loop
out
mov
stc
cmp
in
jecxz
out
std
sar
leave
ljmp
fnclex
out
nop
nop
sar
stc
cmp
sti
hlt
xlat
ljmp
inc
stc
int3
mov
cld
out
enter
nop
leave
enter
cld
div
leave
cmp
xlat
loopne
hlt
repz
lret
clc
xlat
xchg
into
loope
mov
xor
cld
cmp
fistpll
lock
in
enter
fucom
cld
out
in
std
in
icebp
aad
aam
xor
clc
cli
fsub
fldl
xchg
aas
icebp
lret
cmc
lock
cld
sarb
cmc
sti
cld
incl
std
and
leave
xchg
sti
xchg
xchg
leave
out
iret
fmul
out
jmp
test
sti
lds
loopne
jecxz
mov
loope
jmp
fdivr
repz
int3
loop
ds
fadd
hlt
mov
roll
in
cmc
cmp
aad
std
lret
cmp
ffreep
sti
fcmovnu
orl
cmc
loop
fcmovne
dec
ljmp
cmp
fsub
popl
shl
int
cmc
loope
sti
int3
clc
ds
aad
cmp
rcr
in
fldl2t
ret
leave
lret
in
in
xchg
nop
mov
ret
iret
out
call
stc
ror
xlat
les
repnz
repz
hlt
xchg
into
aad
in
lret
stc
cmc
out
rcl
lock
out
frstpm(287
neg
loope
leave
std
in
in
in
shr
in
out
xlat
cmp
jecxz
les
stc
repz
xlat
xchg
xchg
in
clc
fcmovnu
aam
lock
repz
and
in
in
ret
xor
repnz
out
fmul
cli
xor
rcr
ret
fcmovnbe
decb
lret
std
mov
aad
lret
jmp
aad
cmp
cld
xchg
cmc
mov
divl
jmp
xlat
ror
fld
and
test
mov
bound
pop
add
inc
lret
icebp
lret
xlat
ljmp
cld
cmp
cmp
aad
and
sti
mov
cmc
enter
leave
enter
in
clc
cmp
sarl
fsub
shl
sub
std
aas
in
in
out
loope
test
xchg
loop
ljmp
fcomp
incb
xlat
xlat
test
mov
enter
xor
xor
stc
repnz
sti
out
call
ljmp
xor
hlt
jecxz
shr
ljmp
in
enter
fldlg2
leave
fcmovne
into
xchg
out
dec
loop
aad
out
icebp
int
stc
repz
aam
in
adc
ret
rol
sti
shl
repnz
lret
lret
cld
aaa
lock
aam
idiv
addl
call
mov
lea
div
iret
sti
shr
in
cmp
int
into
call
mov
filds
std
fbstp
jecxz
sub
aad
cmp
fcmovbe
ret
cmp
leave
xchg
lret
mov
rol
iret
ret
ret
shr
aam
sbb
dec
repz
test
test
xchg
mov
out
xor
lret
ffreep
roll
lret
xchg
ffreep
out
ljmp
loope
lret
aam
cmp
rol
cmc
out
fdivp
and
in
rolb
xchg
iret
loopne
jecxz
out
out
cld
into
aaa
idivl
not
fsub
cli
loope
xor
test
sti
jmp
loop
lret
aam
ret
aam
cmp
fcmovbe
call
ds
fcmovu
call
in
jmp
icebp
xor
out
xor
loopne
ret
test
cmp
fldl
in
sti
lock
nop
mov
xchg
out
int3
lock
sar
fnstcw
in
idiv
iret
shl
not
cld
inc
imul
loopne
xlat
jmp
fsub
xchg
in
call
in
cmp
loope
loope
fsubr
hlt
fisttpl
call
into
rcr
cmp
cmp
cmp
in
loopne
enter
in
repz
repz
out
aam
stc
out
icebp
aaa
rcr
cmp
xchg
mov
repz
xchg
xor
lret
fsubr
repz
hlt
cmp
xlat
loop
ret
jmp
lret
loope
into
in
les
cli
jmp
fcmovne
cmp
in
lret
addl
neg
fmuls
aam
xchg
jmp
shr
clc
xlat
aad
xor
cld
cmp
mov
decb
sti
rorl
clc
icebp
fst
xor
int3
xor
shl
xchg
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
dec
cmp
hlt
gs
pop
add
iret
enter
lret
repnz
xor
in
repz
aaa
enter
iret
rcr
stc
shl
fyl2xp1
loop
out
loopne
decl
out
lock
ljmp
cli
xor
ljmp
enter
xor
cmp
filds
enter
sub
xchg
mov
lock
lret
fcmovu
iret
jecxz
call
lock
ret
stc
jmp
out
cld
xchg
test
shll
out
enter
cmp
in
sbb
loop
enter
ror
fiadds
cmc
cmp
in
jmp
iret
shl
out
cld
cmp
out
xchg
mov
xor
out
leave
lret
std
sar
ret
fimuls
fstp
out
out
cmc
iret
repz
jmp
fadd
loopne
aam
jmp
jmp
rclb
das
aad
ljmp
and
out
ljmp
filds
fbstp
jecxz
lret
leave
repz
clc
int
fnsave
aam
repz
xlat
mul
enter
jecxz
enter
jmp
out
repz
in
fdiv
stc
in
ljmp
mov
cmc
fldcw
ss
cld
ljmp
aam
ret
loopne
stc
rolb
xchg
ffreep
xor
call
jmp
in
xchg
leave
jmp
in
int
std
rcll
aad
leave
int
out
out
repz
ljmp
lret
leave
out
hlt
cmc
int
aaa
out
hlt
aad
shr
fcmovnbe
sar
cmp
sar
lret
int3
std
out
fcmovnu
rorl
int3
call
sti
cmp
cmp
cli
faddp
faddp
ret
test
in
int
mov
mov
ss
call
clc
shl
xor
sar
mov
clc
sti
mov
int3
in
hlt
sti
ss
cmp
lret
cmp
test
test
lds
fucomp
in
lret
xchg
in
lock
icebp
repnz
lock
xchg
ljmp
mov
repnz
not
leave
leave
xor
cmp
sar
test
cmc
loopne
call
incl
in
in
xlat
fmul
sar
sbb
into
test
fildl
fimuls
les
in
cmp
cmc
rolb
stc
aas
aam
int
in
sti
rcr
addl
cli
cmp
cmp
ret
loop
pop
leave
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
or
jg
sbb
jle
test
jmp
faddl
int
fxch
out
aam
std
in
fistpll
lock
and
bnd
enter
fucom
out
lea
iret
repnz
divl
xor
sarb
int3
test
aam
call
mov
nop
enter
sub
fdivr
int
jmp
aaa
xrelease
call
fcmovnu
mov
jecxz
leave
jmp
in
fldz
lret
fcomi
cmp
into
std
test
cli
or
xchg
xchg
icebp
xor
cmc
cli
fdivr
cmp
ljmp
sti
cmc
fsubr
loop
enter
mov
repnz
icebp
jmp
std
hlt
orl
int3
out
icebp
lret
icebp
xor
leave
into
out
cmp
div
test
test
enter
xchg
xchg
clc
jmp
xor
enter
aad
lret
loope
sti
loopne
test
xchg
cmp
int
cmp
jecxz
inc
loope
loope
aad
enter
out
mov
ret
out
fcmove
ror
pushl
repnz
out
testb
xchg
mov
xchg
lock
aad
test
cmp
lock
fdiv
aam
aad
mov
test
int3
fiadds
ror
ss
int3
rcr
cmp
icebp
in
out
icebp
loopne
in
lret
loope
lret
loopne
loop
loop
ss
lock
in
cmpl
neg
adc
fmul
stc
fdivr
loopne
call
aas
shrb
int3
les
repz
addb
cmc
fdivrl
test
fdivrp
fimuls
loopne
add
sub
fcmovnu
aad
aaa
test
sbb
fdivrp
mov
cld
lea
shlb
stc
int3
fsubr
xor
iret
into
into
icebp
fnstsw
ret
icebp
loop
addb
repnz
mov
mov
ss
int
ss
aaa
in
sti
fdivp
sti
lock
cmp
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
imulb
jg
sbb
jle
cld
ret
ret
in
out
lock
cli
lret
in
xchg
repnz
iret
xor
sar
int3
in
lock
rcl
mov
rcr
out
fisttpll
test
xor
cmp
mul
ffreep
roll
fcomip
jmp
das
fmul
out
cmc
aaa
shr
ds
loope
aas
sar
sti
fadds
cld
fdivrp
loop
xchg
in
call
xor
xor
cmp
icebp
call
cld
int3
lret
lea
xor
xor
iret
in
loop
jecxz
ret
rol
xchg
icebp
out
loopne
icebp
loop
repnz
sar
clc
into
fcmovne
cli
sar
not
fildl
out
adc
out
xor
ljmp
aas
cli
cmc
rolb
adc
int
int3
incb
jmp
icebp
aaa
out
int
xor
out
fisttpl
jecxz
lret
out
enter
repnz
cmc
leave
out
xlat
shl
jecxz
and
cmc
aad
mov
into
into
aam
cmp
enter
cmp
sarl
fildl
mov
mul
mov
mov
and
in
out
jecxz
cld
cmp
std
aad
iret
test
fdivp
lds
mul
loopne
lock
out
hlt
xor
idivl
ljmp
shl
aam
aad
call
fcmovu
rcl
mov
xchg
ret
aaa
out
aad
lret
jecxz
ret
xlat
loop
cld
mov
orl
orb
iret
cmp
shr
iret
into
and
in
sar
cld
imul
cld
loope
lock
into
int3
nop
in
shl
xor
fiaddl
aad
adc
jecxz
bnd
cmc
sar
cmp
call
iret
cld
cmp
fld1
cmp
incb
out
test
in
aad
cs
shl
bnd
inc
cld
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
insb
jg
sbb
jle
cmp
addb
jecxz
xchg
lock
mov
jmp
ljmp
cmp
fidivrl
sar
iret
cli
std
ljmp
leave
xchg
roll
repz
jmp
call
aaa
cmp
fstp
std
aam
lock
jmp
lret
loope
hlt
loope
ss
test
shl
faddl
sub
in
lret
nop
fmul
jecxz
mov
xor
cmp
jecxz
in
repz
sbb
jmp
test
fucompp
fucom
filds
out
lret
ror
std
repz
ret
sar
out
nop
out
xchg
mov
out
imul
idivb
cmp
icebp
cmp
shl
ds
ljmp
lock
mov
out
xor
jecxz
rolb
xchg
and
addb
repz
xlat
jmp
fistpll
std
clc
lock
shl
leave
lret
fucomip
fucomip
iret
xchg
leave
in
shr
fstpt
rcl
movb
ljmp
lret
xchg
ret
aaa
rcl
xor
int
loop
fmulp
xchg
cmc
mov
out
mov
jmp
xor
jecxz
in
shr
cmp
cmpl
loope
ret
neg
jmp
xchg
leave
out
ror
hlt
repz
sti
call
dec
loop
sar
test
rcl
xchg
loop
mov
enter
rcr
iret
rcr
xor
fdiv
out
ror
in
mov
out
in
rcl
stc
cmp
out
aam
cmp
cli
fistpll
std
clc
cmp
nop
xchg
call
aad
out
aaa
stc
xor
fldl
test
fcmovnu
lret
test
jmp
out
lret
les
xlat
stc
out
cmp
shl
clc
rcl
cmc
call
out
out
in
std
std
mov
iret
shlb
xor
add
ror
aas
int
int
jbe
repnz
dec
jge
movsl
outsb
jg
sbb
jle
std
lret
sti
lret
xlat
aas
repnz
fcmovb
test
mov
xchg
test
cmc
xor
xor
int3
iret
int3
out
aad
mul
mov
fcomp
loope
fcmovu
ljmp
into
fidivl
fnstsw
fdiv
clc
loope
sar
leave
cmp
test
icebp
repz
sub
clc
aaa
cmp
sarl
ffree
shr
loope
mov
loopne
int
test
cli
leave
out
adcl
lock
lock
xlat
fdivr
xor
cld
cmp
in
loop
fsts
lock
icebp
shl
repz
sarl
fadds
leave
xlat
sbb
into
in
ljmp
cld
fidivrs
repz
cmp
repz
fildl
jmp
fimuls
lret
xor
xor
cmp
xor
clc
repz
fcomi
ret
fstp
aam
mov
sti
xchg
mov
aam
cli
int
xor
stc
ret
not
ffreep
cld
jmp
int
mov
xlat
repz
jmp
roll
fadd
aas
enter
lret
mov
shl
not
clc
fnstcw
ss
cmp
test
std
jmp
out
int3
std
rorl
out
xor
call
lret
xor
call
in
lret
aam
xor
ret
fpatan
xor
cld
hlt
out
aad
push
icebp
mov
rcr
out
out
sub
out
lret
cmp
rcl
sar
repnz
lea
repz
cmp
lret
div
in
std
shl
xlat
sti
jmp
xlat
in
orl
mov
in
aaa
enter
xor
test
test
ljmp
int3
mov
enter
fcmovnb
cs
aaa
cmp
int
rcl
rol
loop
hlt
jmp
test
icebp
dec
shl
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
xor
ljmp
in
rol
test
xchg
out
mov
lock
iret
rcl
aad
in
repnz
iret
call
cmp
inc
fdivrs
out
loopne
jmp
rol
xor
call
adc
rcl
aad
lds
ljmp
aaa
hlt
out
aaa
lret
repz
aas
rcr
jecxz
cmp
out
enter
jmp
jmp
iret
repnz
loope
fcmovne
test
rcl
aad
mov
hlt
out
xorl
enter
cmp
rcl
cmp
aad
shl
ljmp
fucom
nop
hlt
ljmp
xor
cmp
jmp
repnz
mov
repz
fcmovb
xchg
dec
shr
roll
repz
repz
sti
fcom
movb
mov
stc
cld
in
xchg
mov
iret
into
ljmp
out
into
iret
roll
out
lret
out
fmul
frstpm(287
ljmp
fadd
cmp
cmc
icebp
fadd
sti
cld
cld
into
mov
jmp
mov
shr
out
ljmp
loop
fst
test
in
mov
add
and
mov
ljmp
xor
cld
repz
xchg
test
out
xlat
loop
mov
loope
mov
or
iret
shr
out
cmc
ss
out
fnclex
fcomi
roll
sub
fmul
sti
jmp
shr
xchg
test
jecxz
fcomi
jmp
icebp
f2xm1
stc
ret
out
mov
std
fadd
ljmp
jecxz
ss
jmp
fldln2
shl
cmp
hlt
out
and
enter
mov
int
jecxz
jmp
cmp
hlt
add
aad
jmp
sub
shl
test
loope
ret
fsubr
clc
fcom
stc
repnz
cmc
fadd
xchg
fcmovne
lea
call
out
cmp
neg
xor
loopne
cmp
neg
test
mov
mov
sti
loop
aad
in
xor
mov
and
out
int
rol
aam
int3
mov
ror
lock
imul
lock
std
lret
cmp
xlat
aas
shl
loopne
sti
cmc
test
fadd
clc
lret
mov
out
mov
out
cmp
stc
lret
imul
in
int3
ror
testl
out
test
iret
lret
hlt
icebp
leave
cmc
in
sti
clc
fdivrl
in
jecxz
rol
mov
mov
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
lahf
rcrl
lods
add
ljmp
enter
test
shlb
loope
in
shl
cmp
idivb
shr
into
into
out
jecxz
fstpt
stc
enter
mov
xor
aaa
int3
fdivr
std
fdivrp
and
ds
sti
aam
in
jecxz
int
repnz
sub
int3
shl
xor
fcmovb
cmp
lret
int3
loope
loope
mov
loope
sti
loopne
jmp
push
mov
call
jmp
fdivr
cmc
in
test
mov
int
loope
out
test
test
in
iret
in
cmp
shl
inc
rcl
ljmp
test
loope
out
xor
jmp
or
hlt
loope
in
jecxz
int
jecxz
out
repnz
jmp
stc
aam
in
aaa
sti
cmp
aam
ret
aad
ret
out
jmp
xchg
addb
iret
out
xor
call
out
fsub
out
cld
cld
cmp
test
mov
cli
mov
xchg
in
out
aam
jmp
int
rcr
lds
repz
fcmovnb
fsubr
in
in
std
jecxz
repnz
xor
ljmp
int3
xor
out
ret
sti
fmuls
call
loop
lret
out
cmp
xlat
bnd
cmc
aad
hlt
fchs
jmp
ret
int3
iret
mov
mov
jmp
fdivs
jmp
into
loope
icebp
shl
aam
mov
sub
xchg
out
loope
shl
sti
fdivr
iret
sub
iret
cmc
stc
out
fdivr
enter
ljmp
lret
ljmp
into
aaa
fcmovnu
shl
cli
loopne
loop
fucom
mov
into
xchg
mov
xor
repz
xor
fdiv
rcl
ds
mov
rolb
shl
icebp
out
stc
enter
ret
cld
in
stc
fisttpll
out
out
sub
aad
jmp
stc
sti
xor
fdiv
into
ret
repz
out
ret
inc
stc
out
sub
xor
int3
xor
shlb
out
jmp
ret
test
xor
lds
loopne
adcb
cmp
fdivrp
fnstsw
jmp
not
in
cld
incb
out
std
int3
xchg
test
xor
aaa
in
sti
cmp
cmp
ret
cmp
mov
aas
int
fcomi
sbb
stc
jmp
cmp
ss
icebp
hlt
roll
loope
stc
flds
fdivr
mov
int
test
xor
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
lea
jg
lods
add
shlb
in
cmc
mul
cmp
cmp
out
out
cli
out
icebp
addb
aaa
rcl
xor
repnz
sti
jmp
or
adc
repnz
xor
aad
stc
ds
stc
ljmp
shl
loop
out
int
ror
out
incb
lock
sti
inc
loopne
cld
out
fcomip
xchg
xchg
ss
fsubrp
sbb
addb
enter
mov
jecxz
in
out
icebp
icebp
lret
lret
clc
int3
xor
cmp
shl
fdivr
enter
leave
call
xchg
or
int3
jmp
xor
out
aas
out
fdiv
lock
ror
cmp
stc
mov
mov
in
cmc
shl
aad
fcom
cld
fadd
cmp
int
fst
xchg
ret
rcl
fimull
fmulp
mov
fucom
leave
into
cmp
fidivl
out
aaa
sarb
fadd
ret
hlt
mov
out
jmp
jecxz
icebp
sti
repz
rcr
in
int3
xor
sar
jecxz
mov
ret
clc
fprem
in
xchg
call
in
into
jmp
ljmp
cld
stc
out
lret
mov
in
out
jmp
aaa
jmp
icebp
xor
loop
flds
hlt
lret
loopne
repnz
in
iret
out
icebp
xlat
fnstcw
out
aad
int
aam
shl
cmp
shr
jmp
out
repz
iret
mov
ss
fstp
fcomp
fyl2x
xor
lock
mov
cmp
lret
aad
int3
icebp
ror
icebp
ror
fmul
divb
in
cmp
roll
stc
mov
test
rcl
mov
cli
repz
cmp
leave
loopne
clc
fneni(8087
fcomip
jecxz
in
jmp
call
out
iret
out
fcomp
fstpt
cmp
sar
aam
test
jmp
lret
leave
enter
jmp
shrl
fcomp
iret
repz
lock
add
xlat
loop
mov
in
in
out
loope
lock
xlat
ret
sar
fcomip
aaa
aam
iret
out
loop
std
test
out
fcmovnu
out
fdiv
iret
cmc
xor
xlat
cli
cmp
aam
enter
lock
stc
roll
jecxz
fucomip
shr
out
enter
xor
in
rolb
mov
out
lea
call
out
xor
lret
stc
shl
xor
jmp
lret
aam
aam
pop
in
js
jle
add
stc
div
jmp
enter
ljmp
jmp
xor
out
cmc
sbb
std
shl
adc
hlt
std
imul
call
nop
fists
xor
aaa
int3
shr
loop
int
test
repnz
std
mov
lock
xor
std
fsubrp
loope
xor
out
cmc
or
out
stc
ljmp
sar
fcomp
test
icebp
loope
out
test
fmulp
xor
fsubr
xorb
ss
cli
out
fildl
cmp
push
mov
mov
std
mov
ljmp
aam
ss
icebp
cmp
std
rol
fsubr
jmp
fsubp
enter
fimuls
xlat
in
stc
shl
fst
aam
xlat
cmp
xlat
iret
test
sti
xchg
fdivp
shl
in
lret
xchg
out
ret
into
hlt
ljmp
sbb
rcr
stc
loopne
lea
vmaskmovdqu
repz
int3
in
rcl
lock
iret
fscale
aas
stc
call
in
mov
fucom
ss
jmp
fdivr
ljmp
fadd
in
fadd
out
lock
repz
in
repnz
aam
jmp
ljmp
in
sbb
clc
clc
mov
loope
out
loop
enter
neg
clc
lock
cmp
ds
xchg
jecxz
orb
out
enter
lret
out
fcmovnbe
sti
out
lret
int3
test
cmp
aad
adc
mov
mov
not
iret
cmp
std
out
enter
roll
leave
fld
out
jmp
addl
xor
ret
out
sar
xor
cld
jmp
test
sti
cld
ds
fst
fmuls
jmp
out
in
lret
in
rcr
into
fnclex
fcomi
cmp
cmp
fsubp
fisttpl
in
out
xchg
mov
cs
enter
ds
fcmovnbe
loopne
xlat
aam
enter
lret
fptan
fucomip
test
repnz
out
xor
idiv
sti
stc
cmp
aas
inc
out
lret
in
jmp
out
mov
xchg
shl
shl
sti
lret
shr
int3
fnstsw
fdivrl
test
jecxz
xlat
rol
in
fld
jmp
fsubp
mov
aad
into
shl
stc
int
rcr
filds
fsub
clc
loope
fcomp
call
fdivs
jmp
jecxz
das
out
cld
xor
repnz
addl
icebp
lret
out
xchg
orl
test
inc
add
add
add
movl
enter
int
lds
dec
sbb
jnp
jle
add
xchg
sub
cmp
fldln2
leave
fidivs
rol
rcl
test
mov
nop
out
mov
xor
clc
hlt
xor
cmc
fdivr
sti
out
int3
cmp
cld
aam
jmp
jmp
orl
shr
sti
aad
std
in
in
rol
hlt
fadds
out
out
xchg
sub
out
shl
loope
rcr
int
fnstsw
ffree
call
sti
lock
mov
hlt
lret
loope
xor
ror
call
sti
xlat
out
icebp
in
shl
aam
out
aam
clc
lret
into
loop
sbb
repz
xchg
fucomp
out
repz
call
ljmp
jmp
icebp
out
ret
ds
in
fsub
enter
lock
hlt
sarb
iret
cmp
incl
sar
cli
in
mov
hlt
cld
cmc
into
in
lret
shl
sti
xlat
icebp
cmc
cmp
rcl
dec
fcmovnu
jmp
jmp
mov
ljmp
in
test
leave
aaa
xor
rolb
jecxz
sub
ljmp
loop
jmp
xor
push
icebp
icebp
lock
stc
icebp
mul
xchg
test
lds
fsubp
xor
ret
xor
out
cmp
aad
cld
shl
call
out
test
sub
nop
repz
rcl
in
out
ss
lock
hlt
jecxz
fld
neg
mov
xchg
xor
in
aaa
out
fdivr
ds
imul
cmc
ret
hlt
xchg
shr
jmp
std
out
out
out
loop
das
stc
in
iret
ljmp
aad
addl
fstp
out
loop
fimuls
in
xor
into
loope
rcr
in
out
sti
cmc
ffree
mov
sti
out
out
xor
aad
icebp
sti
xlat
out
shll
repz
out
jmp
sarl
sarl
dec
jmp
loopne
jecxz
sub
xor
ss
repnz
jmp
int
jmp
xchg
lock
cmp
fdivr
into
shl
int
stc
icebp
rolb
aas
repnz
into
addb
int3
int
cmp
cmp
cld
shl
and
clc
fadds
out
fxtract
hlt
out
cmp
faddl
sti
ret
in
in
fsubrp
xchg
xchg
shl
iret
jecxz
aad
cmp
lock
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
fstps
push
jle
add
ret
icebp
sti
roll
ljmp
div
cmc
xor
fdivs
fucomi
cmp
in
cld
stc
sar
xor
les
call
aas
lret
in
lock
call
fcomip
stc
out
loopne
adc
loopne
icebp
mov
rcl
aad
xor
dec
fdiv
cmp
ret
repz
fcmovnu
clc
ffreep
mov
xchg
out
cmp
repnz
idiv
and
ret
filds
out
lea
jecxz
ss
in
iret
into
ds
fdivl
fdiv
loope
adc
fiadds
and
loop
ror
in
leave
cmp
loop
repnz
inc
rcr
loope
mov
sti
out
sti
out
iret
mov
iret
cs
in
stc
cmp
cmc
into
out
cmp
aam
xchg
out
mov
fsubr
jmp
cmc
fdivs
fmul
movl
cld
or
jecxz
xchg
out
xchg
xchg
lret
int3
jecxz
in
in
out
bnd
ret
aam
fcmovb
xlat
ret
leave
lock
decl
repnz
int3
xor
lret
shr
aam
aas
and
mov
call
cli
enter
rcr
aad
repz
int3
int3
jmp
loope
ror
addl
fmull
adc
out
fstpt
sar
fnstcw
icebp
fcmovnbe
fcmovbe
cmp
clc
mov
hlt
cmp
icebp
int3
rcr
iret
xor
not
repz
clc
addb
in
mov
ljmp
out
out
call
idivl
fimuls
out
xchg
aas
lock
ljmp
in
icebp
not
aam
in
fdivr
imul
loope
lret
xchg
divb
out
out
cmp
shl
or
adc
loop
jecxz
clc
jmp
imul
out
jmp
imul
out
repz
out
std
addb
lds
call
xor
cmp
int
sti
xchg
mov
mov
xchg
jmp
xchg
xlat
cmc
rcl
aam
xor
cmp
loope
iret
loope
cmp
mov
out
std
cmp
out
sbb
into
in
shr
call
in
clc
loope
testb
lret
xchg
icebp
fcomip
shr
shl
iret
std
enter
rcl
lock
imul
std
ljmp
rcr
xor
jmp
aad
lret
enter
fcmovnu
push
icebp
ret
out
pop
add
jle
add
sub
xor
ret
jmp
fbstp
cmp
cmp
jmp
xlat
jmp
mov
ljmp
int
clc
cmp
leave
sarl
cmp
cmp
icebp
sti
in
std
push
mov
sti
lea
and
icebp
jmp
lret
neg
cmp
test
aad
cmp
fucomip
lock
out
xor
xor
sbb
out
call
leave
fimull
loop
ljmp
lret
xor
xlat
xor
rcl
iret
cmp
lock
testb
in
loop
and
sub
lret
shlb
ljmp
cmp
stc
mov
aad
enter
icebp
jecxz
jmp
aad
cmp
aas
lock
aam
test
clc
add
in
enter
icebp
iret
iret
out
out
iret
cmc
leave
sti
xlat
hlt
cmp
loope
jmp
icebp
sti
adcl
shr
fxch
call
fcmovnb
out
rol
fdiv
call
in
fdiv
enter
loop
icebp
fmul
cmp
out
xchg
faddl
out
int3
sti
jmp
xchg
call
iret
cmp
cmp
into
stc
out
dec
cli
clc
cld
std
mov
mov
adc
icebp
leave
ret
xor
out
cmc
aas
cmpb
out
faddl
fdivr
mov
cmc
loope
in
repz
clc
leave
jmp
shl
jecxz
test
out
xchg
loop
ror
icebp
xor
shl
hlt
hlt
aas
sub
aas
rol
mov
jmp
int3
xchg
fisttps
aaa
lock
cmp
xorl
neg
cld
mov
out
int
lds
stc
xor
fxtract
shl
shl
mov
sub
out
mov
std
std
lret
loope
in
enter
fdiv
aam
sarb
std
clc
stc
xor
in
in
decl
incl
enter
out
loopne
xor
ss
fcmovbe
call
fld1
jmp
test
out
out
sar
shl
enter
int3
rcr
call
sti
leave
fnstsw
addl
fcmove
clc
aam
cld
fdivrs
out
loopne
and
ror
mov
or
fists
fisubrl
aad
int3
ret
sti
ret
cli
in
out
fucomip
xchg
icebp
fcmovbe
lock
sub
sti
shll
cmp
ljmp
or
jmp
enter
int
enter
push
add
or
cmp
lods
add
int3
std
std
ret
cld
loope
sar
loopne
iret
shl
xchg
ljmp
lock
clc
sti
cmc
cmp
loopne
clc
fcomp
cmc
clc
in
out
fmulp
mov
rol
aad
cmp
call
fcomp
int3
fcomip
out
loop
test
mov
mov
loope
loopne
xor
out
aas
leave
ror
xlat
out
repz
icebp
int
shl
filds
jecxz
fucomp
fsubr
repnz
enter
cmc
out
cld
repnz
cmp
clc
out
inc
fmuls
loop
jmp
mov
out
lret
int3
sti
sarl
repnz
in
rolb
jmp
shr
cmc
call
aaa
out
hlt
enter
icebp
std
mul
repnz
call
out
cmc
enter
cmp
in
fst
loop
in
mov
xchg
loop
rcr
jmp
in
out
fxtract
xor
rolb
repnz
cmc
imul
and
shr
into
mov
shl
jecxz
fcmovnu
out
rcl
into
adc
ret
jmp
int3
rorb
xchg
in
rcl
cmc
jmp
int
shl
lock
repz
xchg
into
lret
repz
ror
repz
jmp
cmp
sbb
loope
ljmp
lea
cmp
aam
leave
out
int3
adc
xlat
fmulp
fsub
aad
cmc
test
rcl
xchg
xchg
adc
aam
les
shr
aas
fadd
test
sti
filds
leave
jmp
lret
cli
shl
int3
icebp
out
int3
icebp
loopne
out
rcl
ljmp
cli
lret
xchg
xchg
xchg
loop
in
stc
xor
in
loopne
aam
cld
in
xchg
or
in
dec
lret
ret
loop
in
xlat
jecxz
sar
cmp
fcmove
sti
aas
rol
aam
call
jmp
leave
decb
into
icebp
cmc
sti
idiv
int3
shr
cli
lret
shl
mov
rcr
into
xchg
out
jmp
cli
out
xor
fmul
cmp
lock
icebp
sar
cmc
fadds
test
out
ret
iret
loope
hlt
test
sarb
in
iret
aam
test
in
inc
in
into
jecxz
cli
fcmovbe
out
in
enter
clc
cmp
icebp
out
repnz
iret
aas
cld
flds
lock
std
jmp
test
into
aas
rcl
ljmp
lret
cmp
hlt
shl
sub
addb
add
aas
lret
fcmovnu
xlat
aad
jno
xor
xor
push
add
add
out
hlt
sub
xor
ljmp
loop
out
and
adc
mov
out
fsubp
in
cld
jmp
aad
out
enter
repz
repnz
icebp
ret
filds
enter
frstpm(287
in
icebp
mov
in
cld
xor
fcmovu
aas
fdivp
fnstcw
cmp
xchg
mov
fcmove
loope
lret
test
cmc
xor
lret
add
lds
aas
fscale
cld
test
in
rorb
shl
hlt
out
aam
jmp
test
cld
jmp
int
int3
in
mov
cs
out
lret
fsubrp
cmpl
mov
shl
out
lock
fdivr
jecxz
or
sti
enter
sti
aad
in
stc
adc
in
out
idiv
jmp
iret
mov
xchg
aam
ljmp
cmp
repz
repz
sar
mov
lret
fiadds
jmp
rcr
hlt
stc
into
aad
xlat
iret
in
cmp
fmull
call
loope
xor
aaa
out
into
xor
jecxz
testl
test
lock
and
lret
shr
or
rcl
push
test
stc
test
ljmp
int3
sti
cli
cmp
cli
in
loope
aam
movl
in
out
icebp
jecxz
repnz
hlt
incb
stc
leave
enter
xchg
xchg
loop
sbb
out
aad
in
aad
xor
cmp
cmp
testb
fisttpl
cld
sti
int3
movl
rcr
fsubrp
cmp
test
out
loope
clc
cmp
int3
jmp
in
ret
iret
xor
xor
fucomp
clc
cmp
loop
jecxz
ret
in
fimuls
jmp
cli
fmul
fsub
lret
clc
rcl
hlt
jmp
in
sti
lock
cmp
lret
cmc
shl
enter
out
loope
in
jmp
mov
and
shl
shr
in
loop,pn
xor
cmp
ljmp
hlt
rcl
ret
std
sti
jecxz
mov
jecxz
into
and
test
shl
jmp
cmp
ss
cmp
rcr
fsubr
and
out
fcmovne
stc
loop
nop
std
out
xchg
idivb
cmp
lret
cmp
fiaddl
fcom
loopne
sub
sti
movb
mul
int
enter
std
aaa
ljmp
mov
jmp
into
enter
int3
fwait
outsb
mov
pop
mov
add
add
cmc
sar
cld
ds
std
stc
loop
int
icebp
aaa
shr
fldl2t
in
enter
shl
fdivrs
addl
fsubr
nop
addb
shrb
xlat
sti
iret
aad
flds
jecxz
fldl
mov
repnz
mov
xchg
inc
out
fmul
out
out
rcl
ds
neg
xchg
les
rorb
cmc
xor
cmp
xlat
loopne
out
sti
into
icebp
rolb
xor
out
nop
call
jecxz
in
fidivl
fdivl
ror
repz
cld
repnz
in
cli
std
in
xacquire
shll
fst
out
fdivrl
aam
jecxz
test
call
test
xchg
cli
jmp
std
idiv
xor
xor
jmp
fidivrs
in
fadds
ljmp
test
out
icebp
icebp
test
rcr
sarb
cld
call
in
sar
fdivrp
cld
addl
jmp
xchg
mov
in
test
out
divl
shlb
cmp
aaa
loope
int
into
xchg
rcr
enter
addb
xor
in
cmp
xor
shl
fadds
fildl
cli
mov
hlt
xchg
sub
cs
in
icebp
aad
cmp
fdivrl
stc
xlat
cld
mov
in
int3
cli
test
lea
cmc
rcr
shll
fcmove
cmp
fstpt
cld
fistpll
repz
movl
or
cmp
ss
sti
leave
aad
repnz
test
std
cld
test
add
rcll
xor
cmp
aad
cmp
fcmovbe
in
rcr
mov
fneni(8087
xchg
fnclex
test
enter
aaa
in
loope
in
aad
aad
ret
fldl
call
into
iret
cli
divb
frndint
int3
in
loope
rcl
hlt
lock
aad
mov
loop
in
mov
call
rcr
aaa
fst
repnz
out
out
xchg
loopne
loope
cli
mov
fisttps
icebp
cmc
icebp
rcr
icebp
cli
fidivl
fucomi
iret
stc
iret
shr
cli
hlt
ljmp
out
and
xor
into
in
stc
iret
repz
imul
sti
clc
cmc
rcr
aam
sbb
xchg
ret
popl
out
cli
std
jmp
aas
cmp
stc
jecxz
ror
ljmp
into
in
repz
xlat
into
in
into
icebp
leave
cmp
sti
fiadds
lds
add
add
iret
int3
into
fstp
pushf
mov
mov
jle
add
fmuls
xorb
clc
xlat
xor
loope
iret
int
testb
xchg
loopne
icebp
aam
not
ljmp
hlt
sarl
in
fcmovb
fsubr
fcomp
mov
lret
mov
frstpm(287
nop
ljmp
xabort
into
shl
cmc
cld
sar
ffreep
mov
enter
repz
shl
shrl
aad
in
loopne
shl
aad
rol
mov
lds
xchg
enter
add
stc
out
lret
cmp
int
fsubrp
aad
aad
test
loopne
mov
xchg
nop
xchg
lret
xor
xor
lret
sti
cmp
int3
stc
ret
rol
loopne
mov
xchg
repnz
shl
mov
cmp
fucomi
loopne
into
cli
fsubp
aas
fdiv
in
fcmovb
testl
not
lret
cmp
fcmovbe
std
repz
repz
faddl
mov
lret
hlt
xor
loop
shr
cmp
aad
loope
cli
repz
neg
enter
fucomi
out
in
repnz
into
cmp
repnz
hlt
not
fistpll
out
icebp
lds
hlt
ret
fimull
int
loope
out
out
fdiv
in
in
in
hlt
ss
int3
xlat
cmp
fcmovnbe
in
testl
repz
ss
cmp
ljmp
int3
aas
clc
cld
test
faddl
repnz
ror
xor
repnz
fnstcw
cmp
mov
xchg
nop
cld
lds
clc
jecxz
vpsrlq
roll
addl
lret
jmp
fnstenv
call
rcr
test
add
orb
loope
and
cmp
hlt
aad
cli
cmp
cmc
stc
shl
loop
fstpt
std
cld
fmulp
xchg
mov
in
aam
sarl
jmp
out
out
cmc
cmp
iret
jmp
mov
fldl
cmp
cmp
iret
test
loop
fsub
clc
fucomi
xor
fmull
repnz
sar
xor
aaa
cli
cli
ljmp
lock
fdiv
clc
leave
cli
lret
icebp
xchg
xlat
cmp
ljmp
iret
xchg
cld
in
sti
std
icebp
out
out
jmp
xor
stc
cmp
hlt
iret
in
jecxz
and
ljmp
xchg
shl
test
int
sti
mov
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
dec
cmp
push
add
add
aas
cmp
cmc
hlt
flds
fstp
lret
ljmp
ror
jecxz
les
cli
lock
fdivp
ret
idivb
clc
flds
iret
fsub
test
ljmp
out
hlt
cmp
in
ror
repnz
enter
int3
rorb
in
enter
xor
leave
repz
loopne
jecxz
hlt
ds
loopne
loop
fsub
mov
cmp
repz
cld
int3
lock
ret
out
jmp
xlat
loope
jmp
ljmp
int
out
fidivrl
cmp
cmp
addb
jmp
int3
ljmp
fcomip
int
call
leave
fdivrs
xchg
cld
in
repz
rclb
out
in
clc
xor
int
testb
xlat
in
sub
in
add
hlt
icebp
fdiv
icebp
fxch
cmc
sbb
loop
ffreep
fmull
sti
into
shl
in
xchg
div
ljmp
cmp
jecxz
in
cmp
incl
shl
enter
iret
out
cmp
test
cmpb
aad
test
rorl
jmp
repz
xor
aaa
stc
xor
cld
in
in
xchg
xlat
mov
imul
nop
mov
test
aam
mul
jmp
out
ds
sub
sti
loop
hlt
repnz
neg
clc
mov
lret
xchg
mov
in
out
out
in
repz
cmp
loope
xlat
stc
fdivp
mov
jmp
jmp
fcmovbe
fcmovne
call
std
aas
ret
loop
fisttpll
icebp
clc
sub
cli
mov
jecxz
cmpb
sar
cmc
fcmovnu
int3
enter
mov
out
lret
xor
ror
aas
ss
shl
cli
xchg
in
jmp
repnz
in
add
out
int
idivl
shr
lock
fadd
call
loop
cli
incl
das
xor
les
lret
call
out
fcom
mov
xlat
adcb
in
ret
enter
jmp
adc
jmp
add
fcomp
aad
decb
xchg
out
ss
icebp
ss
xor
aam
rcl
ret
leave
ret
xchg
into
fcos
xchg
iret
int3
icebp
hlt
repz
test
repnz
hlt
int3
xlat
mov
jmp
enter
aad
leave
fnsave
cmp
lea
jne
add
add
test
mov
repz
mov
xor
fsubr
out
aaa
lock
rcl
rcr
fabs
in
fmull
lock
in
into
repz
not
sub
mov
loopne
in
out
divb
in
xor
fiadds
rorl
dec
enter
iret
icebp
in
xor
xlat
xor
clc
in
iret
sti
int3
out
cmpb
fst
xchg
repz
fiaddl
in
xor
cmp
cmc
cmp
in
les
stc
std
in
lock
in
xchg
xchg
clc
shr
cmc
ror
in
push
testl
mov
lret
enter
nop
ror
jecxz
xor
cmp
test
or
loopne
div
std
movb
out
notb
iret
jmp
aam
stc
loop
cmp
and
in
in
ljmp
xor
repnz
cmp
sti
aad
clc
fstpt
clc
hlt
in
dec
jmp
out
out
stc
test
cmp
jmp
in
fadd
repz
sar
jmp
jecxz
in
fcoml
div
stc
test
cmp
cld
cmp
cld
test
hlt
stc
mov
int
jmp
jecxz
std
loope
aam
xor
rcr
repnz
aaa
ret
faddp
adc
fisttpl
and
clc
out
jecxz
lret
jmp
cmp
cmp
in
fld
testb
into
in
xor
vpaddusb
lret
lock
sar
ret
jecxz
sti
sub
ljmp
int3
in
xchg
jmp
fmul
ljmp
sar
rolb
idiv
stc
loopne
nop
fmulp
test
addb
hlt
cmp
call
aam
std
cli
xor
sub
std
call
int
aad
int
int3
int
jecxz
out
clc
sar
aam
xlat
cld
mov
adcb
enter
aam
int
sar
ljmp
aam
in
cld
mov
fdivp
lret
or
ret
fnstenv
leave
fstpt
hlt
hlt
fmulp
out
test
shr
clc
ljmp
out
sti
fsubp
testb
enter
int3
fdivr
cmp
neg
lock
clc
dec
out
ret
cld
sub
iret
in
in
cld
aam
xlat
in
into
adc
test
call
fucomi
mov
fst
imul
stc
jecxz
repz
rorb
mov
add
jmp
mov
int
sub
movsb
adc
jle
add
in
in
cmp
dec
cli
test
imul
fiadds
in
loopne
repz
xor
repz
hlt
cmp
cmpb
aam
test
std
into
ror
test
shl
in
out
cmp
ror
rcl
into
imul
int
sar
rcr
jecxz
out
mov
addl
shl
in
ss
cmp
lret
clc
fucom
fiaddl
ror
mov
out
mov
out
out
enter
sbb
hlt
aad
aam
enter
fisttps
xchg
in
xchg
cs
xor
fst
ror
fsincos
clc
repz
fucomp
hlt
cld
fld
mov
int3
cld
rorb
ret
aad
leave
loope
cmpl
aaa
xchg
xchg
mul
loop
cld
into
xor
xor
sar
fdivs
into
into
rcl
xlat
jecxz
testb
filds
cmc
mov
out
aad
enter
fdivp
fnstcw
shl
filds
jecxz
lret
fdivp
xlat
out
ret
sti
in
shl
fcmovne
cmp
clc
rol
aad
out
loop
lret
xchg
mov
loope
xor
stc
xorb
mul
cmp
mov
out
lret
lret
in
shl
shll
aad
shl
into
out
fdivp
imul
testl
fstl
out
test
enter
hlt
out
jmp
xlat
xchg
lret
shl
mov
loop
aam
imul
fsubp
xlat
leave
fcmove
shl
rolb
mov
fucom
lret
in
into
out
sar
rol
loop
sti
aam
jmp
iret
lock
into
loop
sbb
xchg
shl
xchg
jmp
jmp
das
aam
fidivrl
into
cmc
enter
into
shl
ljmp
in
sti
out
cld
into
into
loope
out
xlat
ljmp
cld
xor
std
fcomp
xchg
out
xchg
loop
jecxz,pn
cmp
fdivrp
xor
ret
xlat
roll
enter
mov
fiadds
iret
repnz
fidivl
loope
iret
fyl2x
jecxz
std
xlat
fadd
jmp
mov
lock
fneni(8087
out
int3
lret
cli
enter
out
neg
fadd
test
rolb
fimull
fsubp
adc
xor
fcomp
fucomp
cmc
shr
fildl
fld1
out
cld
or
adcb
into
cmp
fdiv
cmp
xlat
aas
cmc
fdivr
xor
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
xchg
xor
lods
add
fdivr
lock
mov
ror
rcr
cmp
xchg
sti
mov
xlat
test
xchg
mov
xchg
ljmp
enter
loop
in
cmp
fildl
loopne
and
in
into
ss
iret
add
in
xchg
out
int3
mov
int
xchg
call
fucomi
cmp
icebp
clc
jecxz
in
clc
call
add
in
icebp
test
ljmp
or
cmp
in
rol
ret
loopne
mov
std
flds
cs
out
xor
lret
in
aaa
leave
xor
out
rorb
xchg
into
test
loop
jmp
fcom
in
stc
fyl2x
cmp
incl
jmp
fcmovne
fdivr
sbb
ret
cmp
iret
int
rcr
iret
out
test
ret
loope
mov
nop
ljmp
loopne
fcmovb
ror
fsubr
lret
in
jecxz
loopne
loope
mov
mov
xchg
clc
cld
ljmp
out
lret
icebp
jmp
cmp
iret
test
cld
mov
lret
xchg
in
mov
out
aad
out
ljmp
aam
cmpl
out
shl
cld
out
adcl
into
sub
out
cmp
repnz
fdivr
cli
aad
jmp
ficoms
out
in
xor
repnz
cld
cmp
repnz
lds
sbb
out
bnd
shrl
addb
ror
stc
jecxz
ret
sbb
stc
jmp
test
jecxz
lret
xor
xlat
aam
out
mov
adc
test
fdivr
adcl
aad
repz
out
int3
cld
in
add
jmp
adcl
in
into
repnz
rcl
test
cmp
out
icebp
leave
icebp
xchg
imul
aam
ljmp
fcmovbe
shl
fld
test
loop
fyl2xp1
mov
fistl
xchg
fcom
lock
shr
jmp
out
sti
roll
in
shl
fsubp
mov
xor
fcom
fcmovne
int3
out
ljmp
repnz
fisttpll
out
out
lret
mov
lret
lock
icebp
in
in
lret
aad
flds
aad
xlat
lret
ljmp
div
mov
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
add
add
ss
cli
hlt
jmp
clc
lock
jmp
xchg
mov
addb
das
jecxz
ljmp
xorl
hlt
cli
ret
xlat
lret
fsub
addb
ss
imul
sarl
loopne
int
fcos
repz
in
ret
ljmp
sbb
lret
cld
out
cld
iret
aad
aad
fldl
test
inc
into
cld
cld
in
std
sub
aaa
aad
fcmove
cld
in
ret
vpaddd
call
test
out
xor
ss
aam
out
jmp
cmp
loop
cmpb
enter
out
icebp
in
out
xchg
lock
xor
out
icebp
std
cli
loop
sarb
testl
iret
icebp
ror
addl
fcomip
lret
cmc
call
add
clc
fstp
cmp
orb
fadd
repz
jmp
loopne
movl
repnz
in
xchg
lret
xor
ljmp
out
cmp
fmuls
and
lea
in
stc
int
hlt
fucomip
icebp
sti
ror
mov
clc
std
xchg
int3
out
out
ror
cmp
cld
xor
testl
test
shl
nop
aam
out
sar
idivl
int
cmc
ljmp
out
sar
xlat
mov
cld
loope
rclb
iret
jmp
out
out
lret
loop
shl
fdiv
test
out
jmp
sti
out
xchg
lock
xor
icebp
fdivr
stc
int3
out
int3
aam
les
out
aad
ret
clc
iret
mov
lret
test
icebp
out
lret
sar
fcomp
cmp
shl
add
sti
cld
ljmp
les
idiv
jmp
call
addl
neg
xlat
loopne
or
mov
ss
ljmp
out
loopne
aad
icebp
test
jecxz
int
in
push
subl
jmp
rcl
enter
fldl
push
xchg
push
adc
adc
add
add
in
in
out
in
fstp
in
cmp
dec
icebp
loopne
loopne
add
mov
mov
addl
lret
xor
jmp
std
cmp
fiadds
jecxz
mov
out
out
xor
rcl
jmp
cmp
xlat
cli
jecxz
rolb
in
fisttps
into
and
out
out
leave
jmp
cli
aas
lret
ret
fnstsw
test
xor
fcmovnu
test
clc
sbb
mov
test
xor
jmp
neg
clc
in
loopne
sbb
ljmp
ljmp
cmc
repnz
fdivrp
les
aam
xor
test
mov
loopne
xor
lock
lock
loopne
hlt
testl
and
rolb
aaa
jmp
fcomi
cmp
cmp
sti
idivb
cmc
xlat
fcmovnu
lea
out
xchg
int3
int3
cmp
cmp
int
jmp
cli
loopne
ljmp
decl
into
imul
int3
aam
in
dec
lret
lret
aas
fsubp
xor
mov
mov
std
out
xchg
int3
xchg
int3
sub
cmp
repz
repz
add
cli
into
loop
call
test
fimull
int
jecxz
xor
not
ds
xor
ds
call
neg
leave
loop
vpsadbw
icebp
aad
xlat
fcomi
out
fld
test
fnstsw
test
cmc
out
xlat
call
adcl
ffree
cmp
fdivr
cld
clc
xlat
iret
loopne
out
in
xlat
fmulp
into
in
mov
mov
out
ret
jmp
cli
xor
cmp
stc
lock
std
out
fcmovne
cli
fcmovnu
fcmove
fsubrp
call
xor
in
int3
fdiv
fstpt
aam
loopne
std
loope
fdivrp
in
loop
mov
jecxz
leave
cli
lock
idivl
lret
in
xchg
in
out
in
aas
out
test
lret
iret
cmp
in
stc
cli
ds
cmp
cli
clc
clc
mov
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
add
add
sti
jmp
in
out
xor
in
aad
aam
repz
jmp
aam
cmp
xor
jmp
cmc
in
fsts
aaa
aaa
xor
call
fld
rcl
loopne
cmp
clc
jmp
call
rcl
sub
xor
imull
cld
fcmovnbe
in
out
jmp
ret
loop
sbb
jecxz
lret
fildl
xchg
in
ret
repz
out
sarb
cli
in
icebp
mov
fnsetpm(287
fmuls
leave
in
enter
jmp
idiv
clc
cmp
lock
cmc
test
std
xchg
xchg
test
idivb
lock
cli
sti
loopne
test
shl
loop
flds
into
loope
xchg
repnz
enter
cmc
neg
sarb
aaa
addb
shr
fld
loop
cld
loope
in
in
loope
mov
icebp
iret
ret
xor
fcmovnu
shr
incb
repz
in
addb
int
repnz
int3
cmc
cli
cmp
sti
into
fmulp
leave
roll
jmp
ljmp
ljmp
rcl
out
fcomi
lret
out
icebp
cld
cmp
call
fdivrs
stc
ret
fcos
enter
in
mov
popl
int3
rcr
clc
repnz
addl
xchg
orb
in
lret
loope
aam
jmp
repnz
fld
jecxz
mov
add
clc
fcmovnbe
test
shr
jecxz
shll
call
aaa
ds
test
fiaddl
int3
mov
lret
out
lock
shl
into
xor
int3
cmp
cmp
ret
cmp
int3
loop
in
fsubr
shl
orb
aam
cmp
xor
cmp
loop
test
enter
divl
repz
aad
shl
flds
cmc
jecxz
fimuls
ss
cmp
cmp
aas
mov
testb
in
xchg
aaa
xor
repz
cmc
xor
fbstp
aam
inc
out
ret
or
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
call
cld
lret
xchg
test
xchg
in
rol
repz
out
stc
lret
cmp
fadds
cli
sub
mov
loope
loop
mul
cmp
fcmovbe
aad
leave
xlat
or
neg
cmp
lea
fsubp
into
hlt
into
enter
stc
enter
shl
testb
sbb
in
out
jmp
rcr
das
repz
ror
repz
xlat
clc
xor
aad
cli
jecxz
in
cld
into
xlat
out
int
into
xchg
mov
call
in
fnstcw
fiaddl
test
fadd
cli
leave
mov
out
test
xor
leave
stc
lock
lret
aam
cld
aad
loop
cld
aas
jecxz
orb
stc
fcmove
rcl
lret
lret
loope
idiv
out
ffree
lret
orb
ljmp
int
int
ror
int3
jecxz
ret
ret
jmp
loop
in
repnz
ror
in
das
ss
shl
rcr
testb
cmc
sarl
sub
xchg
ljmp
jmp
into
in
cmp
hlt
aam
neg
call
xlat
addl
ror
fdivs
fmul
fucomp
fdivr
sbb
mul
rcl
fsub
xchg
fildl
iret
xchg
xchg
in
xor
out
aad
enter
lock
xchg
iret
test
aam
cmc
and
sti
mov
shl
roll
int3
xor
out
hlt
jmp
fcmovbe
repz
shr
call
add
fmull
ffreep
xor
xor
cmp
in
cld
clc
rcl
cld
test
fucom
add
lock
stc
sti
icebp
out
out
shr
int3
in
ret
addb
mov
push
mov
out
out
call
sub
cmp
sbb
cmc
out
int
ror
lret
mov
in
rcr
xor
ljmp
in
ret
sti
rcr
loop
mov
jmp
sti
lret
xor
into
mov
out
not
loope
fistpll
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
cmp
mov
cmp
jle
adc
fnop
fucom
faddl
jmp
nop
jmp
int
imul
shl
ds
sti
xlat
fucom
roll
idiv
mov
xor
lock
aam
std
out
loope
loop
cmc
fiadds
loop
in
cli
repnz
in
mov
xor
lock
ljmp
flds
mul
test
xchg
aam
shl
cmc
out
cmp
repnz
jecxz
cmp
icebp
in
ret
clc
mov
ljmp
lret
lret
out
into
fnstcw
into
aam
cmc
and
mov
aad
addl
cmp
cmp
cli
cli
ljmp
fcmovb
lret
jecxz
leave
test
out
shr
rol
stc
int3
call
loope
aam
xor
cld
ljmp
xchg
xchg
jecxz
jmp
fcmovne
lret
adc
in
ret
loope
sti
cli
sub
out
icebp
cmc
mov
ss
jmp
rolb
stc
rolb
fxch
ret
test
aaa
icebp
lock
fdiv
jmp
loop
ret
cmc
sti
lret
mov
cld
rolb
cmp
cmp
cmp
xchg
repz
in
ljmp
int
jmp
vshufpd
out
ss
fcmovnbe
sar
test
stc
stc
aad
xchg
in
lret
ljmp
shr
test
cmp
idiv
mul
add
xchg
ljmp
cmc
aam
in
into
sti
repnz
cmp
loopne
xchg
mov
mov
fmull
hlt
cmc
in
div
in
cmp
cmp
lock
rcr
div
fildl
dec
out
lret
loop
ror
in
in
xor
aaa
lret
iret
rol
ds
shl
cli
xchg
fadds
std
fdivp
stc
jecxz
leave
hlt
cmp
dec
cmp
rol
lock
repnz
lock
mov
loop
in
ret
in
in
cld
mov
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
iret
cmp
testb
jecxz
test
jecxz
jmp
rcl
hlt
lret
xlat
ss
iret
sti
jmp
test
cmc
aam
ret
int
fistl
test
in
jmp
int3
out
fnstsw
std
fucomi
xlat
rcl
and
sar
test
icebp
imul
cmc
cli
idiv
fmul
cmp
hlt
div
cli
iret
cld
push
fiadds
loopne
repz
lret
test
into
cmp
cmp
add
aas
in
in
std
orl
mov
out
repnz
ljmp
in
cmp
cld
roll
ds
loop
stc
in
mov
rcr
int
fmulp
cmc
cmp
adc
aas
lock
mov
lret
test
mov
aam
das
aam
fpatan
aaa
in
faddp
hlt
fstpt
call
fdivr
test
int3
out
test
into
vpsrlq
jmp
rcl
fst
std
icebp
aam
mov
fldl2e
in
cld
int
mov
shrb
xor
not
leave
stc
repz
cmc
fucomip
ds
fcomi
in
lret
imul
fimull
xchg
xchg
out
ret
xor
into
in
cmp
sti
rcr
std
test
loope
push
loopne
fucomip
stc
stc
cld
loope
icebp
filds
clc
enter
leave
int
icebp
fdivrp
fcomp
in
cmp
leave
lock
nop
adcl
into
iret
mul
ret
out
addb
xchg
std
xchg
mov
xchg
loopne
aam
jmp
fmul
hlt
cmp
out
into
add
clc
test
out
icebp
loop
sarl
leave
hlt
fmul
stc
rcr
ret
xchg
mov
int3
icebp
out
xchg
ret
xlat
cmc
ret
cld
ss
fnsetpm(287
xlat
clc
enter
xlat
lret
out
cs
lret
stc
ss
neg
call
aam
neg
vaesdec
call
fsubrp
in
mov
mov
loopne
lret
shl
rcl
cmc
in
sar
and
cmc
mov
test
iret
repnz
incl
lret
movzbl
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
sub
dec
fisubs
add
add
out
les
xor
xor
fnstcw
fnstcw
aas
cld
std
aam
jecxz
int
xlat
cld
cli
cld
out
mov
repz
cmp
cmc
aaa
add
neg
std
lret
in
lret
mov
rol
jmp
ljmp
out
aam
in
stc
sbb
ret
vshufps
xchg
loop
out
lea
lock
aam
repz
in
rolb
clc
xchg
into
nop
mov
and
ss
fdivr
leave
cmp
std
cmp
loop
cld
lock
fildl
out
jmp
xlat
ss
aad
std
cmp
in
ds
mov
cmp
mov
call
cmc
iret
rcl
fcom
cmp
rcl
testb
enter
sbb
mov
in
out
das
lret
in
shl
clc
fcomip
faddl
loop
out
cli
sub
int3
shrl
leave
int
leave
jmp
in
loop
rcl
test
cmp
ljmp
shr
test
sub
out
iret
leave
cmp
aas
std
repnz
mov
imul
orl
out
cs
ss
aaa
aaa
shr
out
cmp
jecxz
xor
clc
call
xchg
xchg
test
xor
xor
fdivrs
fcmovnu
lock
sar
loop
out
xlat
xchg
addb
xor
cmc
jmp
jmp
repz
into
ds
xlat
cmpb
fld
xor
icebp
in
in
out
ss
iret
imul
iret
cmp
jmp
icebp
ret
aam
not
jmp
int3
out
jmp
loop
stc
repz
std
cmp
fldl
les
loope
rcl
xchg
in
call
out
lock
aam
sti
test
ret
mov
test
sti
lret
test
cmp
clc
repz
cmp
cmp
test
enter
out
test
bnd
shl
hlt
into
out
fdivp
sar
test
aad
loope
add
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
enter
cwtl
sub
jle
add
sub
das
cmp
repnz
idiv
ss
ds
jecxz
jmp
call
out
dec
out
lock
rcl
std
repz
div
stc
lret
imul
jmp
out
vpaddusw
in
cmp
lock
sar
and
clc
lock
sti
mov
jmp
mov
jecxz
out
int3
xlat
cmp
aam
in
stc
fcomp
frndint
jecxz
rcl
mov
vaddsubpd
nop
sar
loop
jecxz
hlt
jmp
mul
ret
shl
xchg
frstpm(287
lret
sti
lret
xchg
xchg
xor
cmp
in
jmp
lock
test
ljmp
mov
neg
cli
idivl
cmp
lret
cmc
faddp
rol
fcmovbe
mul
in
test
ror
ljmp
shl
aad
adc
fxch
iret
xchg
mov
repnz
in
sub
fmul
cs
cmp
adc
cmp
xor
fimull
aad
iret
iret
lock
repz
repnz
repz
test
rcr
cld
in
int3
ret
mov
lret
add
cmp
in
std
jmp
and
fcmovnb
aas
xlat
fmull
test
out
popl
clc
xor
clc
std
rol
call
int
enter
lds
fsubr
ror
das
aad
cmp
rcl
lds
fcomip
fsubr
std
out
into
aam
rcr
xor
repnz
rol
jmp
icebp
std
sti
ffreep
sti
jmp
loopne
std
lea
loope
ret
rcl
out
cmp
cmp
shl
in
xlat
ds
test
out
icebp
xchg
popl
shl
shr
into
cmp
jmp
cmp
fcomp
add
in
in
xchg
into
xchg
lret
int3
stc
iret
idiv
shl
sar
cmp
icebp
cmp
test
shr
sti
fdivr
enter
out
ss
ljmp
cmp
in
out
into
in
in
neg
mov
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
sub
popf
push
sub
jle
add
std
mov
lds
jecxz
out
fnstenv
fdivrl
jecxz
out
testl
jecxz
shlb
call
sti
aad
rcl
loopne
xchg
aad
out
int
loop
out
xor
in
cld
ss
rcl
icebp
cmp
in
repnz
testb
jmp
loop
shl
aaa
shl
fucomp
loopne
fstpt
test
hlt
fildl
out
jmp
cmp
int3
cs
icebp
jmp
shl
aad
hlt
loop
fdivr
in
call
mov
shr
mov
ljmp
fcmovne
cmc
ret
addb
fsub
mov
icebp
xor
cmp
in
sti
std
xlat
adc
out
stc
idiv
cli
clc
fcmovne
fmuls
shl
idiv
iret
cmc
rol
aaa
xor
cmp
out
loopne
xor
sti
lret
xchg
iret
repz
clc
xor
ss
int3
test
addb
fsubp
out
xchg
and
lret
xor
cmpb
rcr
sar
loopne
ljmp
flds
ffreep
loop
out
hlt
enter
aas
out
addb
lret
out
and
nop
lret
ljmp
rol
in
xlat
ret
in
stc
jmp
leave
fdivrp
shl
xchg
int3
out
repz
lock
stc
clc
int
cmp
xchg
test
in
fsubp
cld
sti
decl
clc
aad
lock
shr
ljmp
inc
add
jecxz
std
out
sub
shll
int3
lret
ljmp
in
jecxz
lock
stc
xchg
sti
jmp
shl
loopne
iret
xchg
fucomip
cmc
out
into
aam
cmp
in
lock
loopne
aam
ret
bnd
ljmp
out
enter
test
jecxz
loopne
out
call
inc
sti
and
ljmp
ret
xor
std
in
aam
rcr
cmp
enter
adc
in
mov
jmp
int3
aas
rol
fst
fadd
ljmp
aaa
or
add
add
rol
lock
ret
shr
sbb
mov
test
stc
cmp
in
lock
cmp
loopne
into
test
jmp
ffreep
fsts
mov
int
les
cli
lret
fsubr
loop
ds
sbb
leave
stc
ror
lret
ror
loope
call
xlat
leave
jmp
repz
stc
iret
loope
loop
fildl
sti
fcomi
xchg
loope
das
ret
iret
loop
out
aad
loope
cmp
cld
test
xchg
jecxz
sti
test
jecxz
jecxz
loopne
iret
jecxz
sar
xlat
lock
ror
ds
testl
out
out
aam
loop
ljmp
fcom
test
std
repnz
sti
fsub
loop
std
out
hlt
mov
div
enter
enter
jmp
cli
fcomp
out
out
fdiv
repnz
into
call
out
shr
fscale
in
xlat
ljmp
idiv
std
cli
sub
xchg
hlt
shl
repz
iret
jmp
sarl
test
xchg
loopne,pt
fnstsw
ljmp
in
cmc
test
aad
sarb
repz
loope
rorb
adc
pop
shr
or
xchg
jecxz
xor
rcr
fcom
int3
icebp
hlt
fldl2t
clc
stc
fmul
leave
out
lret
out
lret
jmp
das
call
cmp
clc
loope
sarb
test
in
ljmp
jmp
lds
xor
into
neg
rcl
cmc
faddp
clc
out
lret
fmull
shl
rol
clc
cmp
std
clc
aad
rcr
test
icebp
shl
enter
lock
mov
xchg
jecxz
not
stc
out
jmp
in
sbb
adc
aas
cmp
cmc
or
int
loope
loop
aam
test
jmp
jecxz
rcr
icebp
aas
repnz
mul
and
lret
lret
leave
cmp
sar
fadds
adc
xlat
hlt
cmc
ret
jecxz
jmp
fstp
lret
ljmp
xor
out
out
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
xchg
mov
add
add
int3
ror
jecxz
loop
repnz
mov
mov
lret
std
sbb
cmc
orl
rcl
rcl
std
cmp
ret
out
call
mov
movl
in
leave
shr
int
repnz
loope
clc
test
mov
add
in
int
in
mov
cmp
not
call
int
std
icebp
cli
loop
loope
mov
xchg
fdivrp
ljmp
rcl
xor
shr
loopne
loop
flds
cmc
jecxz
in
fcmovne
loopne
in
xchg
rcl
iret
in
lock
int3
repz
hlt
cmp
sti
sub
int3
int3
fnstenv
lock
int3
ss
shlb
xchg
xlat
sti
orb
loope
ljmp
shr
lret
jmp
ret
loope
xlat
call
ljmp
mov
xchg
adc
xor
fsubr
hlt
icebp
out
fstpt
xchg
decl
rolb
call
cmp
hlt
jecxz
aas
neg
decb
out
in
fcmovnbe
xor
ret
loopne
lock
test
fmuls
in
xchg
lea
fdivs
leave
sti
aad
div
loop
cmp
sti
cmc
leave
fldl
hlt
loop
dec
fmul
in
icebp
xor
shl
icebp
addb
fldl2e
leave
faddl
mov
out
fldcw
xor
cmp
cmp
iret
aad
out
out
mov
ljmp
lret
into
jmp
icebp
xor
out
fmul
cmp
out
shr
and
xor
std
ljmp
mov
aad
in
les
cld
clc
out
lock
into
ror
aam
fxtract
cli
shl
cli
jmp
ljmp
out
fld
cld
cmc
ljmp
std
fcmovbe
cmc
in
ret
not
iret
iret
in
nop
orl
leave
cmc
cmp
into
lret
into
repnz
clc
cmp
mov
jecxz
rorb
inc
fmuls
add
add
xlat
xlat
rcl
ror
fld
cs
and
movsb
and
add
hlt
call
lret
loop
repnz
aam
leave
ret
xchg
int
enter
xchg
repnz
ret
ss
xor
int3
shl
xlat
stc
test
fcomip
jmp
fimull
test
div
lret
fucomi
cmp
sarl
std
cmp
ret
in
aad
neg
out
mov
int3
call
ljmp
incl
clc
mul
clc
cmp
mov
mov
ss
lret
cmc
out
leave
fcmovbe
sbb
in
ds
fld
fdivr
in
out
in
repnz
mov
fldln2
xor
into
test
sbb
cld
repnz
in
jmp
out
rol
int3
loope
ret
lds
lret
sti
roll
cmc
mov
fiadds
test
test
into
aad
call
repz
xlat
cmp
jmp
clc
fsubr
test
xchg
xchg
in
mov
aad
sti
hlt
call
aam
fldl
cli
mov
adcb
call
hlt
in
fptan
lret
roll
xlat
fisttpll
decb
into
xor
enter
idivb
xlat
xlat
adc
mov
test
shr
jmp
out
mov
adc
loop
icebp
aaa
clc
xor
fldl
hlt
rol
leave
aad
and
mov
lret
ljmp
fdiv
loop
ffree
sar
aam
std
shl
mov
cld
sti
out
into
out
roll
ror
cmp
sti
lock
aad
xchg
std
test
sti
int3
call
xchg
call
out
cmc
cli
lret
out
rolb
fmul
mov
fmulp
leave
int3
ret
int3
clc
hlt
fsubr
sarl
lock
cmp
fxtract
fcomi
enter
cli
ljmp
ror
idivb
cmp
lret
int3
repnz
out
in
cmp
call
pause
in
enter
out
fistpll
ss
iret
aam
sbb
repnz
fld
fucomi
decb
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
cmpsl
mov
add
repz
out
xchg
aad
into
clc
aaa
xor
icebp
loope
aad
icebp
mov
in
addb
leave
icebp
icebp
xchg
mov
cmp
sub
jmp
shr
cmp
fcmovnu
in
jmp
icebp
lock
out
ret
icebp
fdiv
in
xor
ffree
ffreep
out
sub
jecxz
loop
rorl
shl
int3
dec
push
out
cmp
out
hlt
adc
loope
addb
rcl
int
out
aam
jmp
clc
cmp
test
std
shl
hlt
enter
mov
mov
mul
xor
stc
aam
std
fxch
cli
aas
lret
cmp
sti
rcr
jmp
jmp
jecxz
in
out
mov
cmc
lock
ror
in
int
test
rcr
std
loopne
cmp
cli
fucom
icebp
mov
mov
cmc
in
xor
in
xor
lock
fildl
xlat
in
decb
call
ljmp
sti
fadds
call
stc
mov
int3
enter
jecxz
shlb
cmp
neg
xchg
adc
in
cld
jmp
test
xor
ret
aaa
in
into
loope
not
sar
fdivrp
sub
out
orb
shl
repz
cmp
into
sarl
out
cmc
fsubr
out
lret
in
icebp
fdivr
out
test
enter
aad
cmp
lret
fmul
clc
cmp
jecxz
call
addb
aaa
sti
jmp
xor
aam
aaa
incl
decl
loope
call
jmp
xor
cmp
loop
sub
in
loopne
loopne
xchg
lock
out
xor
call
sub
fsubr
out
rol
shl
dec
ret
ljmp
shr
cmp
rcl
ljmp
fistpll
cld
cmp
hlt
int
ljmp
test
leave
fadd
lret
ljmp
out
imul
lea
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
repz
aaa
je
add
add
incb
jmp
ret
leave
imul
in
fdivrl
loope
fadd
loope
fsubp
in
cli
call
in
out
enter
lret
lret
fucomp
stc
idivb
icebp
loopne
rol
shl
lret
lock
aam
loop
vpmuludq
aad
out
in
xor
cld
loopne
into
test
mov
sbb
mov
clc
cmc
int
call
cli
in
ds
fsub
cli
incb
xlat
out
enter
loope
in
call
cmp
fcmovnu
cmp
int3
iret
movb
mov
loop
ret
in
xchg
call
les
lock
lret
stc
loop
lock
clc
xchg
fyl2xp1
out
ret
test
loopne
sub
shlb
out
int
shl
fsubp
fcmovnb
repnz
out
leave
xchg
stc
sub
cmp
cli
loop
sti
faddl
in
in
mov
mov
cmc
repnz
out
fistpll
test
out
fsubrp
in
test
int3
mov
xor
in
int3
shl
xor
cmp
test
repnz
lret
test
iret
lret
xor
fstp
icebp
clc
sbb
fxch
clc
repnz
shl
jmp
movl
in
loop
aad
fsubrp
cli
ds
in
les
xchg
in
stc
cmp
lret
xchg
lock
out
hlt
fucom
lret
in
fucomp
test
cmp
repz
into
out
fsubp
lock
and
rcr
int3
iret
cmp
fcomi
shl
mov
in
out
xchg
rolb
cmp
lock
xlat
cmp
fcmovu
rol
ror
mov
mov
loop
in
repz
aam
imul
inc
ret
shr
cld
fsub
std
in
lret
fucom
jmp
orb
out
cmp
iret
repnz
divb
fdivr
cli
leave
mov
in
in
jmp
cs
sub
in
cmc
iret
fsubrp
iret
in
out
inc
cld
jmp
vshufpd
ror
adc
push
mov
cmp
jle
add
in
fld1
jmp
fsts
repnz
out
cmc
out
rcr
fstp
rcl
call
call
xor
loope
xchg
iret
call
cmp
std
icebp
test
les
std
and
sti
into
orl
leave
aam
cmp
cmp
cmc
cmp
cli
xchg
inc
les
jmp
enter
shl
iret
int
xor
add
sti
movl
int3
fcoml
fcmovu
hlt
fdiv
iret
test
cmp
adc
add
in
int
mov
xchg
in
bnd
aad
dec
loopne
cmp
fcmovb
icebp
repz
loopne
out
cmp
iret
call
icebp
leave
xlat
idiv
rol
call
ret
enter
ljmp
lock
out
icebp
lret
shr
das
out
loopne
cmp
xchg
neg
xlat
fsubr
cmp
iret
jmp
neg
fsubr
clc
ss
iret
enter
cli
cmp
out
icebp
cmpl
out
fsts
mov
les
xor
shl
sbb
movb
jecxz
jecxz
test
ljmp
in
out
push
cmp
hlt
fcomp
fdivrp
mov
testl
int3
xchg
rcl
repz
call
testb
cld
cmp
xlat
jmp
loopne
icebp
xchg
loope
xor
in
xlat
lock
jmp
jmp
xchg
jmp
fsubr
out
call
in
divl
cs
in
xor
fiaddl
addl
nop
repz
icebp
fdivrs
ljmp
test
cmc
mov
in
out
loope
fnstsw
aad
ss
sti
out
int3
cmp
loope
aad
lock
in
rcr
fucomip
or
mov
ror
jmp
ss
sbb
into
loopne
aaa
test
cmp
ret
call
jecxz
mov
repnz
shlb
in
mov
xor
jmp
int3
aas
ret
sbb
roll
out
ljmp
jle
stc
jmp
repnz
sbb
test
jmp
in
mov
mul
enter
shll
loop
fcomip
or
jmp
sub
shl
into
xlat
imul
out
div
stc
shr
fcmovb
sti
fisttpll
cld
jmp
fimuls
cmp
lock
fcmovnu
ljmp
stc
ret
fucomip
stc
in
xchg
std
ret
int
into
int
loopne
rcr
ljmp
aam
frstpm(287
call
mov
sti
fildl
rorb
ljmp
rcr
loop
jmp
lds
sub
leave
shl
iret
shr
aam
ds
stc
iret
fdivr
xlat
fisttpl
out
loope
out
lret
loopne
sar
in
jmp
lret
repnz
call
mov
into
mov
mov
call
out
out
stc
cmp
test
rol
fadd
xlat
mov
mov
cmp
loope
jmp
xor
repnz
stc
xor
xor
ror
cmp
xchg
repnz
enter
repnz
xchg
loope
xor
das
ljmp
cmp
in
iret
icebp
in
fmulp
xchg
in
fdivr
xchg
out
fisttps
clc
repnz
ss
in
rcr
orb
clc
or
fdiv
cmc
shll
cmp
stc
hlt
cli
cmp
inc
mov
clc
jmp
rol
loope
sub
in
out
xor
cmp
ret
cld
ret
out
xlat
repnz
mov
out
out
into
xor
enter
fadd
aam
ret
sti
out
xchg
cmp
lret
hlt
lea
xlat
sti
call
idivb
cmp
xlat
sar
in
fcom
out
ljmp
enter
cli
cmp
cmc
sar
loope
aas
fdivrl
sar
in
and
loope
fdivp
rorb
int
jmp
xor
icebp
cmp
fcmovnu
jecxz
repz
cmc
sti
nop
loop
fimuls
rolb
ret
cmp
jmp
rol
rcl
rol
aad
sahf
xor
loopne
nop
mov
add
aaa
in
aaa
into
loop
hlt
in
std
aas
lret
fmul
lret
ljmp
sarb
out
ss
cmp
hlt
aad
cmc
fimull
inc
shl
push
mul
in
aad
clc
aas
fcmovb
int3
loopne
in
stc
enter
lret
in
in
hlt
aam
in
lret
cmp
out
cmp
cmp
xorb
in
mov
mov
test
aad
loope
jmp
icebp
out
stc
sar
std
cmc
cli
les
fdivrp
fsub
jecxz
idiv
iret
enter
repz
fcmovb
aaa
in
xor
in
out
rcl
loope
test
in
addl
out
loopne
int3
lret
fucomi
in
cmp
jmp
hlt
rol
repz
mov
sti
int
call
jmp
rcl
stc
into
fucomi
iret
lret
sarl
rcr
fcmovb
test
enter
jecxz
shr
icebp
shl
das
sti
xor
int3
fstp
aam
fcmovb
iret
sar
fcomi
xlat
repz
cld
mov
loopne
clc
iret
shll
fucomip
fadd
iret
sarb
loop
icebp
test
fndisi(8087
xlat
dec
int3
fcomip
out
call
xor
sti
leave
clc
aad
neg
std
repz
fadd
fsubr
loop
leave
rcl
mov
mov
cmp
cmc
repz
and
fdivr
out
mov
xchg
loope
fadd
call
xor
int
xlat
shl
adc
and
icebp
int
mov
repz
shr
xor
loopne
in
cmp
shr
enter
into
iret
lock
loopne
test
int
icebp
fidivrs
and
fcmovu
testb
jecxz
xchg
out
jecxz
into
jmp
into
jmp
cmc
loopne
aam
jecxz
ret
jmp
leave
mov
mov
mov
shlb
call
cli
ret
lock
loope
cli
test
loopne
ret
lea
in
hlt
lret
in
icebp
ds
ret
shl
cli
mov
out
int
icebp
faddl
add
add
push
add
add
ret
mov
mov
hlt
sbb
cmp
jle
aam
fcom
shr
in
iret
into
clc
cld
fstpt
rcl
fldl
lret
call
aad
int
out
int
int
in
aad
out
fcmovu
xchg
div
cld
fildl
in
out
repnz
in
ljmp
lock
fdivp
cmc
fcomip
loope
les
repnz
in
ret
repz
jmp
shll
sbb
in
fucom
cld
in
ljmp
not
xlat
ss
cmp
sti
aad
lret
loope
xchg
jecxz
or
out
int3
incl
hlt
call
xor
cmp
fcom
clc
repnz
hlt
in
addb
iret
loop
cli
fnstcw
in
fcmovu
std
clc
aas
shr
loope
sar
hlt
loopne
in
jmp
test
aad
xlat
mul
cld
lret
jecxz
loop
call
leave
sub
icebp
into
xor
out
fdivrl
fdivrp
div
cmp
testl
mov
xchg
cld
xchg
jmp
out
jmp
xor
aam
in
vpsadbw
cli
int3
orl
fcomi
xor
rol
xlat
xor
xlat
ffree
loope
sub
and
shl
call
ror
clc
lret
sub
fcmovbe
shl
flds
into
out
into
int
in
fxch
imull
enter
test
addb
loop
iret
nop
in
aam
aaa
loop
fsubr
cmc
fiadds
repz
repnz
or
leave
orb
iret
out
fdivrl
ret
aas
aam
mov
mov
test
enter
ljmp
rcl
jecxz
sar
addl
call
cmc
cmp
aad
in
ds
aam
xor
jecxz
fnclex
icebp
in
into
rcl
jmp
repnz
cmp
shl
cli
cmp
in
test
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
insb
gs
push
roll
cmp
jle
xchg
out
sti
loope
call
out
out
idivl
aam
jecxz
aad
call
ds
sbb
incb
out
cmp
fcomp
jmp
cld
icebp
stc
xlat
test
aad
loopne
std
int3
cli
ljmp
hlt
in
test
aad
rcr
stc
rcr
loope
ret
lret
mov
mov
cmp
xor
das
into
fcmovnbe
cmp
out
out
fldl
mov
repz
sti
hlt
std
in
fmul
int3
shl
iret
in
hlt
jmp
xchg
xchg
and
leave
mov
ds
xor
fadd
sti
les
popl
sti
ss
clc
int3
clc
test
shl
out
repz
hlt
test
rcr
int3
sub
sar
aam
fdivr
stc
mov
adc
leave
jecxz
int3
fucom
xorl
cs
lret
out
int3
out
jecxz
ds
fmull
test
orl
shl
stc
sti
fcomi
rcl
and
out
stc
jecxz
call
mov
out
out
iret
ret
fxch
ds
int
int3
iret
sti
ret
clc
call
fldl
call
xchg
test
aaa
out
adc
xlat
fidivrl
fadd
rolb
fldl2t
ljmp
rol
xlat
jmp
out
out
in
hlt
lds
ds
fcmovb
icebp
int3
mov
test
loop,pn
iret
not
out
cmp
rcr
repz
fiadds
repnz
xchg
ret
in
jecxz
in
in
out
incb
out
stc
aas
fsub
sbb
lret
out
leave
rolb
int
int3
out
clc
int3
aad
clc
shl
neg
out
aas
fst
in
mov
cld
in
test
in
loopne
out
leave
cmp
cld
div
std
lock
clc
jecxz,pt
or
sar
cmc
jecxz
jmp
cld
fstp
ror
stc
enter
add
cld
jecxz
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
jmp
add
add
loope
test
mov
sbb
xchg
repnz
out
in
call
fst
fcomp
aas
in
cld
fsubr
out
shr
sti
xchg
icebp
xlat
shr
hlt
lock
aaa
cmp
repz
fildl
in
jmp
in
icebp
out
aaa
das
sarb
ss
out
ds
into
lock
cmp
leave
sti
xlat
ret
and
out
jecxz
call
lret
fdivrl
fstp
out
icebp
cmp
ret
cld
mov
in
jmp
xchg
rcr
adc
int
fcom
in
ror
loopne
test
ds
leave
mov
mov
out
fcom
fadd
out
shr
jmp
loope
fsubr
loope
shl
add
int3
fiadds
cli
std
int
call
loope
call
enter
mov
fmull
rcl
in
jmp
cmp
loopne
cmc
loope
imul
jmp
std
sub
xchg
fbstp
ret
jmp
xor
lock
fldl
fimuls
icebp
cmp
fucomp
xor
out
fdivr
repnz
aad
xlat
shr
les
stc
xlat
or
icebp
mov
cmp
lock
divl
icebp
cmp
loopne
test
mov
sub
mov
hlt
jmp
icebp
sarb
xlat
repnz
int3
div
mov
aam
stc
int3
cmc
leave
lret
call
out
fcmovbe
lock
stc
ror
cli
inc
xchg
and
ret
out
into
sti
fsubp
int
loop
push
not
les
lock
int
cld
fcmovnb
fyl2xp1
mov
out
fucom
fsubr
out
ror
xchg
mov
into
out
lret
in
ss
loope
aam
int
movl
lea
jecxz
xor
cmp
loope
and
ret
incb
jecxz
shr
cmp
in
ss
cmp
lret
jmp
cmp
cmp
sti
jecxz
enter
mov
and
mov
fsub
lock
shr
fdivs
std
cmp
xchg
jmp
aas
int3
mov
std
int
pushf
push
pop
call
jle
add
in
sbb
fcmovnu
std
shl
enter
xchg
xchg
xor
jmp
iret
aad
ss
int3
cmp
flds
ret
lret
jmp
ret
sti
int
shl
ret
repz
in
fistpll
aad
stc
jecxz
rolb
sti
cli
sar
sar
jecxz
orb
leave
xlat
xlat
cmp
xlat
call
icebp
out
rcr
loop
iret
in
into
loop
loopne
cmc
into
into
divb
cmp
shl
sar
aas
icebp
fimull
in
int
adcb
rcl
ljmp
fcom
ret
out
idiv
out
cld
mov
mov
sub
idivl
cmc
lret
jecxz
lret
fst
ss
ss
out
mul
rol
enter
in
jmp
loope
cmp
call
ffree
xor
test
test
roll
loope
enter
fimuls
hlt
xor
out
in
add
stc
hlt
enter
mov
call
hlt
jmp
in
ss
int3
cmc
sub
incl
jmp
inc
lock
call
lret
xor
cmp
repnz
ljmp
mov
loope
xor
xor
sar
faddl
inc
mov
mov
lret
std
mov
out
in
std
out
shr
int
fdivrl
les
fcmove
jecxz
nop
rcl
in
aad
int3
iret
xor
jmp
out
pushl
aam
add
xlat
in
jecxz
std
adc
sarb
sub
xor
testb
test
lret
in
sti
mov
aam
jecxz
cmp
das
out
aad
cld
int3
jecxz
lock
in
mov
std
jmp
loope
loopne
xor
ljmp
clc
fstpt
std
sbb
repnz
std
jmp
incl
mov
aad
hlt
ret
aam
out
loop
int
into
aas
ret
repz
leave
stc
lret
loop
int3
and
out
icebp
stc
xor
lret
dec
jmp
lret
int3
fcmovnu
mov
lds
push
inc
movl
jle
repnz
cli
cmp
adc
in
out
out
out
lret
iret
int3
jmp
xlat
clc
xor
jmp
and
std
cmp
jmp
xlat
fisttpll
shl
into
ror
in
fildll
xlat
fsubr
cmp
cmp
cmp
test
shr
jmp
aad
stc
stc
ficoms
xor
lret
or
loope
fmul
cld
sti
rol
loop
sub
test
test
test
icebp
xor
cmc
fstp
ret
sti
fdiv
xchg
aad
imul
std
faddl
int3
jecxz
enter
int
cmp
sti
xor
fmuls
ljmp
addb
xor
ss
xor
stc
fcomip
lds
cli
out
test
mov
xor
jmp
aas
dec
int
roll
mov
clc
out
enter
fsubr
in
shr
jmp
sar
cli
fcomi
test
clc
testl
lock
stc
lret
cmp
incb
adc
jmp
test
in
test
call
cli
cmp
iret
in
adc
test
div
int3
jmp
orb
out
cmp
cmp
lock
sti
sti
cmp
ret
fldl2e
lock
iret
lret
cmp
cmp
cmpb
out
out
mov
shl
in
faddp
or
int3
lock
leave
xor
ror
or
addb
cld
int3
and
mov
out
loope
das
ljmp
in
cmp
hlt
xchg
clc
leave
test
std
fcomip
xchg
in
out
ror
sti
shl
cmp
fsubr
shl
rol
fucom
xchg
in
in
mov
orl
xor
lock
jmp
sti
div
out
roll
rorl
ret
sti
mov
xchg
nop
shl
xor
icebp
repnz
loop
std
loopne
les
jmp
iret
lock
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
aaa
mov
and
add
add
enter
rol
shl
fcmovne
aas
cmp
fdivr
call
mov
lret
fucomip
iret
aam
leave
leave
cli
in
rcr
fsubrp
in
lock
hlt
clc
out
iret
sti
addb
loope
in
xlat
out
out
lock
aam
ss
rol
stc
stc
add
test
add
loop
cs
xor
int3
shl
iret
clc
fldl
addl
fstp
leave
enter
ljmp
lock
call
ret
testb
aas
fxch
rolb
into
rcl
stc
lret
jecxz
clc
leave
jmp
sti
xchg
ret
call
add
icebp
into
loopne
ljmp
in
fdiv
adc
ret
cmp
fucomip
into
mov
in
and
jecxz
aad
sti
cmp
imul
lret
int
fucomp
shl
cmp
aas
xchg
leave
fadds
rcr
int
icebp
sub
aam
leave
stc
fdiv
int
in
jmp
aad
xchg
call
std
iret
iret
xchg
fst
loope
fsubr
ss
ss
stc
shl
ret
cmp
call
test
call
in
in
enter
fildl
aam
leave
ficoml
hlt
hlt
into
xor
int
out
jmp
cmp
xor
std
orl
loope
std
repz
in
in
cmp
in
shl
std
xor
icebp
in
into
aas
lock
test
out
mov
xchg
shr
mov
imull
fcmovbe
out
lret
xor
sub
ret
loopne
add
shl
jmp
ficoms
stc
stc
icebp
out
aad
repz
adc
shr
in
ret
clc
out
std
leave
int3
mov
jmp
int3
in
fcmovu
cmp
call
fdivrs
fdivp
cld
jmp
ret
aad
xchg
in
out
sar
fisubrl
lret
cmp
frndint
std
fmul
out
rolb
nop
and
call
into
adc
loop
lret
aaa
shl
fndisi(8087
dec
ret
ds
sub
stc
imul
mov
jmp
aam
int
int
aam
xchg
inc
lret
or
cmp
add
add
ljmp
jmp
icebp
ss
shl
not
addb
std
jmp
fstl
fprem
jecxz
cmc
fdiv
cmp
addb
fdivrp
leave
loop
xchg
fdivp
call
call
cmpb
xlat
shr
and
leave
in
jmp
mov
int
leave
icebp
ljmp
fdivrl
in
cmc
xchg
lret
in
orl
faddp
rcl
in
adc
cmp
call
std
int
sar
xchg
test
dec
in
in
in
clc
sarb
hlt
lret
hlt
in
cmc
cmp
fmuls
sti
in
fsubr
aad
das
rcr
in
stc
pushl
fcomp
std
and
shl
hlt
std
lret
into
cld
cmp
loopne
jmp
loop
repnz
not
cmp
int
cmp
ds
sti
repz
idiv
call
lea
iret
out
ffreep
cmc
shl
test
repnz
lret
fimull
cli
sti
in
add
cmp
xor
shl
xlat
repz
in
or
jmp
jecxz
mov
cld
mov
xchg
xchg
ljmp
rcr
cmp
fdiv
out
hlt
test
mov
mov
xchg
jecxz
jmp
xor
cld
int
aad
ret
xchg
cld
mov
repz
clc
incl
xchg
mov
aaa
das
in
fstpt
rcr
ss
cmp
cli
ret
loope
cmc
leave
in
incb
out
xchg
lock
call
sarb
test
testb
or
in
shl
loopne
fdivs
aaa
enter
sar
hlt
fldz
sar
loop
enter
fcmovb
mov
in
into
into
ljmp
loop
iret
shl
out
ret
ret
sub
ret
orb
int
cmp
leave
jmp
fnstsw
cmp
faddl
loopne
jecxz
in
xor
xor
cmc
cld
cld
iret
jmp
int
test
aad
test
rorl
or
push
add
add
ror
rcr
int
stos
outsl
int3
nop
stos
adc
repnz
add
add
mov
out
int3
loop
lock
mov
cs
lock
iret
cli
lret
into
xor
into
std
idiv
cmp
ljmp
std
orb
cs
in
cmp
call
in
rcr
fldl2t
fnop
jmp
sub
leave
xor
xor
cmp
faddl
shl
testb
orb
shr
clc
fdiv
std
cmp
fdivp
fsqrt
les
loope
cld
repnz
repz
cli
xor
fadd
ss
loopne
cmpb
jecxz
xlat
loope
stc
call
xchg
repz
xlat
hlt
out
out
iret
fistpll
test
fdivr
loopne
test
adcb
jmp
xor
int3
cmp
rcr
aam
xlat
stc
loop
xchg
jmp
mov
in
rcr
cmp
fistpll
int3
cmp
out
in
ds
xor
loop
orb
cmp
cld
shl
inc
cmp
les
call
cld
lock
lea
leave
jmp
loopne
cmp
rcl
stc
ret
addl
dec
loope
adc
ret
jecxz
out
lds
aas
out
incl
adc
fiadds
stc
fmul
sti
in
in
xor
ljmp
ljmp
fnstcw
xchg
mov
jecxz
hlt
jmp
fucomip
ljmp
clc
rcl
into
fdivrp
out
jecxz
mov
cld
orb
popl
int
out
out
aad
into
clc
fstp
ds
in
cmp
ret
xchg
test
std
xchg
fstl
aam
out
cmp
ljmp
cli
out
in
out
sub
icebp
out
jecxz
imulb
lret
in
xlat
fneni(8087
icebp
fcomp
cmpb
cli
xchg
cli
lret
cld
out
test
clc
aaa
cmp
faddp
lret
in
fcmovnbe
cmc
cmp
jmp
orl
test
cmp
ret
enter
add
ret
xlat
fmul
fmul
rcr
test
or
add
add
fstp
aas
jmp
aad
call
in
xlat
ss
call
sti
rcl
aam
test
clc
test
iret
fsubrp
out
lret
sarb
hlt
sub
shl
shll
cmp
std
fcmovu
xor
xchg
ret
stc
loope
adc
xchg
xchg
loope
shrb
jecxz
out
sti
icebp
dec
lret
int
test
icebp
aam
xchg
fadds
xchg
mov
xor
ret
aam
and
cmp
cmp
cli
ret
out
mov
int3
iret
xchg
mov
sar
cli
lret
fucom
add
clc
cmp
mov
fimuls
int
loop
xor
iret
in
stc
fnstcw
jmp
in
in
clc
xchg
mov
clc
xor
in
filds
into
ljmp
sti
cmp
loop
loop
sti
out
xchg
fldl
jmp
fdivr
fucomp
xlat
stc
test
repnz
leave
jmp
lret
mov
in
xor
int3
cmp
rcr
loopne
sti
rol
clc
stc
test
fmuls
mov
xchg
repnz
rcl
hlt
rcl
lret
into
shl
aad
fcmovnu
in
test
in
in
out
in
fldl
leave
lret
aaa
iret
rcr
cmp
cli
rorb
call
rcl
adc
jecxz
repnz
cmc
cmp
cmp
idiv
fcomi
aad
test
aad
out
movl
push
xor
rol
vpand
cmp
cli
xor
test
loop
in
xchg
or
ljmp
out
cmc
cmp
xor
roll
ret
xchg
rcr
in
repz
aad
cli
ljmp
rcl
fnstsw
call
repnz
cmc
or
clc
int
or
cmp
cli
shl
movl
in
lret
in
jmp
shl
hlt
loopne
enter
fsubr
test
lock
loopne
repz
lock
test
test
pop
add
mov
jmp
rcl
leave
int3
leave
fldt
jecxz
sub
add
add
cmp
adc
mul
clc
enter
ror
in
in
cmc
out
fdivs
sar
cmp
int
out
or
cli
fmulp
xchg
in
in
int
xchg
das
aam
out
out
int3
sarl
jmp
out
repz
xchg
lock
ffree
call
fistl
fadd
iret
xor
xor
hlt
aaa
cmp
repnz
fcmovu
mov
fdivrp
jmp
rcr
stc
and
lret
mul
cmp
cmc
cli
out
icebp
icebp
sarl
xlat
loopne
ret
lret
out
mov
ret
cmc
cmp
idivb
cmp
icebp
fninit
cmp
enter
cmc
lret
out
int
icebp
jmp
shl
fidivs
xor
xor
repnz
lock
clc
fdivrl
clc
lds
testb
call
sar
les
std
aad
lret
xlat
ret
test
aam
frndint
xlat
fcmove
ljmp
iret
in
lret
call
rcl
hlt
jmp
aas
fcmovnu
hlt
lret
out
std
test
xchg
in
xor
enter
leave
div
ror
loope
aad
and
lret
jecxz
clc
loop
fisttpll
out
idivb
int
in
fidivrs
out
shr
std
cmp
orl
xchg
vcvtpd2dq
cmp
in
cmp
fucomp
icebp
rolb
call
lret
jmp
mov
shl
rcr
jmp
int
clc
cli
sti
icebp
sarl
fistpll
xor
xlat
xlat
mov
std
rolb
fucomip
aad
rcl
repz
loope
neg
in
cli
shl
repnz
add
div
loop
lret
jecxz
lret
ret
stc
xor
out
in
enter
ror
sbb
fisttpll
cli
lret
test
loopne
ret
lock
ss
fdiv
sbb
cmc
xlat
mov
testb
xor
rcr
sub
in
aam
cmp
enter
int
xchg
ds
sbb
in
ljmp
aam
rcl
jmp
ljmp
xchg
sti
fcmovnu
vphsubwd
test
loope
hlt
mov
mov
mov
jmp
lret
ror
fstp
ffree
pop
fiadds
sahf
and
add
add
out
out
xor
roll
out
rcr
icebp
jmp
cli
in
out
in
out
call
repnz
xor
sti
idivb
sar
jecxz
enter
hlt
into
xchg
cli
call
xor
shr
xor
lret
ljmp
adc
std
ljmp
mov
int
std
jmp
shr
in
int3
aad
repz
fdivp
ret
lret
std
int
hlt
aam
sub
enter
fmulp
sub
cmp
loopne
in
loopne
cli
jmp
out
lea
cmp
jmp
jecxz
fstpt
aas
loope
add
int
lock
out
xor
sti
ftst
rcl
cmc
shl
cmp
fucomip
int
mov
call
out
bnd
fdivr
aas
sar
sar
neg
mov
ficoml
divl
hlt
leave
call
sar
xor
fdivp
testl
enter
xchg
in
loop
lock
cmp
cmp
int
jecxz
cmp
clc
hlt
cmc
std
cld
int
xchg
mov
xchg
das
int3
lret
rcr
aam
lret
int
std
fidivrl
mov
add
loop
decl
enter
call
cmp
shl
lock
mov
test
lret
mov
loopne
int
loope
iret
aaa
into
xor
xor
loopne
xlat
shl
in
sti
fdiv
xchg
cld
and
hlt
lock
shl
call
loopne
fildl
fmulp
test
cld
inc
in
shl
lock
xor
aad
bnd
jmp
sti
in
jecxz
neg
in
jecxz
mov
xchg
jecxz
out
leave
fucomi
cmp
std
fdivr
jmp
iret
stc
cmp
aad
ljmp
in
mov
aad
cmp
test
jmp
addb
loop
and
rorb
lds
cld
neg
out
imul
out
xlat
idiv
sarb
rol
fdivp
ret
enter
mov
jmp
enter
int3
aam
pop
adc
out
and
xlat
add
add
xchg
fcomp
lret
ss
repz
loope
stc
jmp
leave
in
movb
xor
aam
loopne
aas
cmc
cmp
iret
rol
fiaddl
sti
loopne
fsub
xchg
out
cmp
out
jmp
icebp
loope
cld
xchg
ljmp
int
addl
lret
enter
lock
lret
int3
jmp
shr
loopne
int
lret
clc
xor
stc
loope
loopne
sti
add
aam
test
mov
test
enter
int
int3
out
int3
sti
fxtract
loopne
sti
cmp
xchg
int3
mov
dec
out
not
in
out
ss
cld
lret
repnz
iret
test
ret
loope
lret
mov
xchg
xchg
into
cmp
into
enter
aam
loop
in
fucom
flds
sti
into
out
dec
iret
repnz
in
xor
lock
fcmovnb
fucomip
rol
ret
xlat
flds
fsubr
ss
in
cmp
aam
loop
aam
ret
fcomp
mov
mov
in
xchg
xchg
int
hlt
cli
stc
aam
lock
call
loope
repnz
roll
lret
lock
leave
cmc
test
jmp
cmc
sar
sti
lock
iret
cmp
in
cmc
test
orl
rorl
jmp
cmp
aam
call
in
xchg
cmc
in
fcmovb
cli
xchg
mov
cmp
icebp
rolb
in
aam
sti
stc
mul
rol
fsubr
jmp
out
hlt
hlt
int3
jecxz
out
cs
cmp
rcl
stc
xlat
int
aas
sti
fmul
cld
lret
in
mov
iret
in
out
repnz
lock
in
cmp
cmpb
cmp
stc
out
fucomi
testl
hlt
repnz
cmc
in
iret
sarl
testb
xchg
mov
shr
ljmp
hlt
enter
cli
int
aas
rcr
int3
shl
xchg
sti
in
sti
xor
jmp
rol
enter
jp
fimuls
xchg
flds
jle
add
in
neg
repnz
xchg
repnz
lret
ffreep
std
sbb
cmc
jecxz
in
test
xchg
in
rol
xor
ret
in
lret
shl
rcl
loop
in
test
test
ret
fsubrp
out
in
test
out
icebp
int
rcr
rol
add
aam
fld
xlat
xchg
fld
xchg
jecxz
jmp
ror
xor
int
into
lock
aaa
out
cmp
cmc
mov
std
mov
mov
xchg
aaa
rcl
cmp
aas
icebp
fmulp
cld
cli
ffreep
xchg
cld
decl
mov
hlt
or
div
cld
hlt
fnsave
aas
filds
ljmp
xchg
mov
iret
rcr
jecxz
into
rol
cmp
cmc
xlat
shr
loopne
xchg
mov
out
fiaddl
call
stc
out
cmp
sub
fcom
or
ror
mov
out
lret
in
mov
loopne
loopne
aaa
enter
cli
cmp
lret
fxtract
adc
sti
repz
mov
jecxz
in
repnz
in
in
xor
xor
shl
leave
sbb
mov
sub
clc
in
call
fdiv
call
ljmp
fucom
in
fbstp
cmp
ds
fdivp
ret
repz
int3
aas
into
iret
mov
aas
cli
mul
stc
aad
xor
in
ret
sbb
rcl
mov
out
fucomip
xchg
repnz
in
call
iret
cmp
aad
shr
clc
icebp
cmp
sar
test
int3
std
out
rcl
iret
test
aam
out
fstpt
in
call
lret
cmp
ret
mov
in
int
out
int
mov
out
ret
cmc
leave
ret
cmp
aaa
int3
cli
in
repz
repz
in
ljmp
xchg
lret
add
das
xor
iret
lock
idivl
lock
clc
inc
xchg
enter
out
xor
aaa
lret
aaa
repz
xlat
int3
stc
shlb
mov
add
jmp
aas
push
mov
adc
fildl
jle
add
in
test
cld
xchg
lock
rclb
icebp
cmp
in
cmp
ret
cld
les
loop
fcmovne
fcmovnu
jmp
das
enter
out
shl
loope
fsubrp
in
into
out
mov
jmp
mov
int
xchg
fsubr
leave
xor
clc
xlat
sar
hlt
shl
filds
ret
cli
into
flds
out
jmp
out
lret
leave
addl
loope
xlat
mov
nop
loope
ljmp
cli
int
cmc
std
fmul
fbstp
test
std
shr
cli
in
xchg
repz
repnz
clc
cmp
cmp
shl
loop
ljmp
lret
cld
int
int3
shl
into
test
hlt
in
ss
cmp
loop
repnz
in
mov
jmp
aas
fcom
jmp
aaa
fmul
in
lock
cli
lock
roll
call
mov
in
in
cli
sar
std
stc
divb
sar
fadd
rolb
loope
loope
mov
fucomip
repnz
enter
aam
dec
stc
cmp
test
aas
loope
jecxz
leave
sti
int
iret
jecxz
jmp
in
shl
out
cmp
std
out
ljmp
ret
sti
aam
mov
out
loop
neg
int
ljmp
call
icebp
loopne
in
std
ljmp
lock
call
vpsubusw
leave
jmp
lock
test
leave
mov
out
in
jmp
mul
out
int
lret
cmp
cmpb
loope
rcl
cmc
flds
fcmovnu
lock
repnz
ret
rcr
jmp
xor
repnz
cmp
int
ror
std
cli
mul
orl
clc
cmp
int
cli
out
neg
neg
loope
fdivrl
idivb
fcomp
ret
jmp
ljmp
frndint
fcmovu
ljmp
filds
jmp
in
loop
jmp
xor
stc
test
ffree
fcom
div
mov
jmp
enter
lret
jno
sbb
test
jle
add
xlat
out
fadd
aas
cld
decl
mov
into
vpsrld
in
jmp
cmp
ljmp
aas
mov
fsubr
leave
fldl
int
ljmp
or
int3
loope
iret
lock
std
repz
fsubrp
clc
ret
adc
xchg
out
icebp
int
repnz
ss
stc
sar
xor
test
fucomp
out
mov
jmp
mov
das
aam
hlt
leave
clc
aad
jmp
std
test
test
sbb
and
and
roll
out
xor
int
enter
int
std
cmp
testb
fdivrp
in
filds
aad
cld
hlt
repnz
mul
out
test
in
loopne
cld
loop
in
orl
std
repnz
out
jmp
fxam
shl
faddl
test
hlt
int3
ljmp
cmc
cmp
in
frstpm(287
out
fsub
test
mov
rol
xor
fstpt
std
std
adc
lock
stc
test
ret
std
sbb
lret
xlat
ret
sub
lock
std
jecxz
cld
jmp
stc
cld
in
out
repnz
out
fmul
call
jmp
aad
ret
mov
out
jmp
add
ljmp
cmp
clc
xor
rcr
loop
loopne
addl
div
int3
in
xor
aad
aam
cld
cmp
stc
fdiv
out
ds
cld
out
out
jmp
xor
cmp
cmp
ftst
shl
neg
jmp
lds
fdivp
jmp
aam
std
into
out
std
std
shl
fsub
aad
and
out
xchg
xor
stc
in
cmp
shl
loope
test
fcom
jmp
imul
movb
out
xor
fdivrp
hlt
rcr
int
out
div
fcmovne
mov
lret
xchg
icebp
lret
ljmp
jmp
int
rol
fcmovu
fstps
outsl
inc
xor
push
ret
jle
add
call
repz
in
cmp
aad
testl
ljmp
shr
out
cli
fcmovnb
cld
fdivr
rcr
sti
cmp
loop
iret
jmp
rcl
cmc
vaddsubpd
in
fdiv
ret
std
ret
ror
shl
jecxz
mov
repz
aam
hlt
imul
xor
fcompp
ds
sar
and
testb
lret
out
clc
iret
icebp
ljmp
cli
neg
cmp
cmp
fisttpl
mov
call
in
call
cmp
faddl
rolb
cli
fisttpl
lret
cmc
jmp
shlb
call
sar
mov
cmp
in
out
xchg
decb
in
test
sbb
les
repnz
xchg
test
xchg
iret
ss
neg
lret
in
fstpt
shl
cli
xchg
aas
fucomp
mov
call
out
icebp
hlt
hlt
aam
neg
cmp
into
in
inc
shl
cld
jmp
jecxz
call
or
xor
xlat
cmp
xor
fcmovu
xor
mov
test
jmp
jmp
int3
loop
divb
xor
cmp
fcmovu
fcomp
into
mov
ret
jmp
lea
loop
fcom
in
int3
aaa
out
ljmp
in
shr
std
lret
jmp
repnz
xchg
cs
cmp
rcl
cmp
stc
ds
std
test
mov
leave
out
ss
fdiv
into
fnsave
vlddqu
mov
fsub
xchg
xchg
jmp
xorl
rol
cli
repnz
fxtract
sarl
loopne
jecxz
cmp
xchg
test
xchg
leave
ret
out
cld
int
fsubrp
xor
jmp
int
div
out
aaa
sarl
ret
ret
call
addl
xor
aaa
in
aad
aas
int
fdivs
loop
mov
aad
int3
out
repz
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
lret
ret
rcl
fcmovbe
lret
shll
in
push
pop
push
fwait
cld
loop
jle
add
shr
ljmp
icebp
cmp
aas
test
xlat
xor
inc
mov
xchg
or
int3
imul
out
ss
cmc
loopne
std
ror
cmp
mov
ljmp
cmp
aaa
out
fdivl
rcr
fcomi
cli
shl
testl
xchg
xor
xor
cld
out
test
repnz
repz
jmp
test
xchg
call
aaa
iret
fsqrt
xlat
out
loope
fdivrs
fcmovnu
shr
aam
jmp
ljmp
rcl
out
lock
ror
jmp
iret
cmp
mov
std
lock
in
out
in
xor
in
aaa
cmp
fcmovnbe
iret
ret
xor
shl
imul
xlat
dec
iret
jmp
mov
xchg
into
loope
aaa
shr
sarl
jmp
int
repnz
xchg
int
lock
neg
aaa
rcr
in
fdivr
fidivrl
sti
jmp
not
in
in
fmull
into
jmp
fimuls
in
lret
div
stc
in
imul
loope
aad
fildl
out
enter
icebp
icebp
lret
leave
out
xor
in
jmp
xlat
repnz
cld
orb
mov
jecxz
ljmp
fcmovnu
filds
sbb
jmp
mov
lret
jmp
addb
jmp
hlt
aam
aad
xlat
sar
clc
std
clc
jmp
stc
mov
jecxz
fcmovnu
xchg
into
icebp
aam
in
out
aad
lret
stc
idivb
loopne
repz
cli
clc
leave
in
cli
in
and
loope
out
iret
in
icebp
fdiv
iret
testb
jmp
xchg
lret
addb
hlt
ljmp
or
cmc
stc
fstpt
test
repz
std
jecxz
mov
shl
xchg
hlt
cmc
aam
cmp
iret
fcmove
testl
idiv
aas
decb
aam
xchg
fdiv
stc
sar
repz
aas
incb
cmp
fdivp
shl
fcmovnb
mov
jmp
mov
aam
fstp
fcoml
and
mov
add
add
call
xor
iret
iret
cmp
ljmp
cmp
cmp
repz
fadd
icebp
lret
addl
into
aam
int
xlat
fiaddl
lret
loope
out
addb
cmp
iret
rcr
jmp
loopne
mul
leave
in
mov
fucomip
ss
leave
out
ss
stc
fxch
fstpt
out
test
loop
out
loopne
mov
jmp
fadd
stc
cmp
icebp
icebp
cmp
out
mov
xlat
clc
sti
out
leave
shl
test
xor
in
in
repz
fildl
out
loope
loope
test
xchg
mov
xchg
repnz
in
in
fcomi
cmc
cmp
cmpb
xlat
test
xchg
cmp
aam
xlat
leave
in
loopne
out
lea
xor
xor
xorb
sarb
clc
lock
in
mov
lret
filds
lock
hlt
cmc
xor
ss
shl
jmp
repnz
stc
out
clc
mov
lret
call
int3
jmp
int
xor
ljmp
hlt
ret
into
aas
test
fimuls
fdivr
mov
sti
or
ror
enter
fmul
loopne
cmp
xor
ret
shl
in
jmp
lret
sub
call
ror
stc
xor
fdiv
rolb
test
addb
lret
sar
call
ss
fxtract
in
int
ds
shl
lret
int
xchg
test
fdivr
in
aas
hlt
xor
stc
out
fbstp
aad
lret
cmp
sar
shl
jmp
fmulp
test
jmp
xor
rcr
fcmovnbe
shr
or
cld
fcomi
loopne
jmp
loopne
cld
std
loop
hlt
jmp
rol
cmp
shl
ror
ds
and
orl
xchg
test
clc
xor
cld
shll
lock
ds
out
cld
not
test
mov
mov
out
test
aaa
xor
std
divl
aas
cmp
stc
xor
add
jmp
ret
enter
int3
or
test
jo
add
add
div
cld
fcomi
mov
stc
les
xor
stc
rol
rcr
std
jmp
loope
ret
ret
loop
mov
fcmove
sub
fucomp
mul
jmp
icebp
repz
enter
iret
loope
fsubrp
cld
hlt
jecxz
int3
out
mov
mov
ljmp
stc
clc
sarl
cmp
stc
cmp
stc
cld
out
fcompp
in
test
into
out
ret
ljmp
ljmp
fildl
jmp
cld
in
shl
shl
iret
lret
repnz
incl
leave
rorb
sar
ret
in
fld
cmp
ds
sar
cmc
call
lret
fimull
int
ret
iret
shl
repnz
aam
int
testb
sbb
jecxz
test
addb
out
iret
jmp
enter
ds
cli
rol
fsub
stc
out
test
int
test
test
xor
iret
leave
in
fxch
in
lock
hlt
test
out
icebp
add
mov
xchg
int3
loop
sub
out
cmp
repnz
cmp
loopne
rol
ror
fstp
addb
fdivp
sub
lret
icebp
xor
xlat
rcl
aas
lret
neg
shl
addb
std
jmp
lret
mov
stc
sar
hlt
lret
fsubr
or
iret
ds
in
iret
loope
jmp
ljmp
fdiv
lret
std
in
loopne
stc
filds
rorl
repz
xor
lret
in
icebp
cmp
loope
aas
ret
jmp
in
loopne
ljmp
cmc
rol
hlt
int3
loope
rcl
addb
jmp
icebp
in
sti
call
into
aaa
xor
xor
int3
enter
in
adc
xchg
out
loop
in
fmull
xor
fsub
out
cs
cmp
stc
into
cmp
loope
out
fld
xlat
stc
mov
clc
mov
mov
xor
into
cli
imul
idivl
fucomi
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
push
int
sub
add
add
sbb
fmull
jmp
enter
mov
out
loopne
sub
hlt
cmp
out
ds
mov
out
or
lret
xchg
nop
jmp
jecxz
fdivs
sarb
mul
leave
rol
roll
mov
cmp
call
jmp
xlat
idiv
aaa
sbb
out
cld
ret
fmul
mov
in
ljmp
enter
sar
int
cmp
aas
fstp
mov
fisttpl
jecxz
cs
ret
cmp
int
and
mul
fucom
fadd
jmp
or
shr
mov
sar
lock
in
shl
fidivrl
std
iret
into
hlt
fnstsw
jmp
fcmove
jmp
into
cmc
mov
ret
sub
fisubrl
repz
aas
hlt
lret
clc
loop
loopne
jmp
std
test
loopne
lret
call
cmp
xor
rcl
sti
frndint
shr
aad
loop
in
testb
xchg
repz
shl
cmp
cmp
fmul
fsub
jmp
testl
cs
cmp
imul
sti
aad
int
fcomp
iret
cmc
sub
cld
mov
call
out
loope
jmp
cmp
int3
cmp
ds
sarl
cmp
rorb
test
cli
cmp
cmc
aas
icebp
sti
sar
sar
incb
mov
out
or
call
stc
leave
cmc
cmp
lret
call
test
cmp
xchg
out
in
jmp
repz
cld
cmp
cld
not
aas
sti
hlt
hlt
in
out
test
jmp
out
in
out
jmp
in
sti
sarl
xlat
add
mov
rorb
or
lock
ss
jmp
fcomp
fcmovu
ffree
ret
cmp
leave
loop
iret
lret
jmp
lret
int
int
fcomi
fcmovb
sar
jecxz
xlat
adc
out
xor
cmc
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
aad
cmp
repz
and
div
shl
in
in
in
in
test
int3
cmp
xor
mul
int3
shl
cmc
lds
testl
leave
loop
cmp
fdivrl
xlat
cmp
in
ret
out
test
mov
mov
and
loopne
out
fcomp
aad
cmp
loope
cmp
fucomi
test
clc
loopne
leave
lret
xor
out
call
sbb
rcl
loope
fimull
sti
addb
idiv
out
ds
sti
aad
cmp
imul
loopne
mov
into
shl
out
ss
out
in
leave
jmp
fcompp
call
fmull
loop
in
int3
aam
div
out
cmc
xor
stc
fdivp
hlt
fsubr
sti
mov
in
loop
fldl
aam
xor
das
out
clc
ror
std
fnsetpm(287
test
ds
mov
out
loope
xchg
mov
jecxz
cmp
cmp
out
rcr
fstp
orb
out
jmp
xor
fucom
aaa
imul
int
fcmovb
in
cmp
stc
orl
das
xor
xor
in
call
cmp
cld
stc
cmc
jmp
cmp
cmpb
xchg
nop
ljmp
jmp
in
cmp
ror
in
add
iret
rorl
fmul
ror
repnz
int3
int
shl
repz
in
cld
inc
in
out
loopne
iret
in
shl
incl
repnz
repnz
in
ds
faddp
test
mov
loop
jmp
in
incb
xlat
shl
enter
fidivl
shl
out
repnz
lret
call
leave
lock
not
cld
int
ret
repz
xchg
vpsubsb
jmp
stc
out
loopne
shrb
das
cmc
les
rcr
stc
into
aas
fadd
add
fsubrp
adc
out
cld
mov
test
xchg
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
insb
pop
mov
cmp
jle
rcl
xor
leave
in
rcr
lret
ds
fadd
std
test
in
leave
in
in
ret
out
xchg
rcr
rol
rol
xor
clc
xor
ror
cmp
loop
push
in
cld
mov
mov
test
fsubr
fdivp
ror
cmp
shl
shl
leave
xchg
mov
in
jmp
sar
int
test
xor
fxch
cmp
cmp
xchg
sbb
mov
fcmovu
lret
loope
ljmp
lock
aaa
cmp
idiv
fldlg2
out
aas
cld
in
add
fcomp
fsubr
int
shl
int
leave
xor
out
repz
fmul
int3
sarb
loop
cmp
orb
aam
ljmp
cmp
sar
rolb
cld
fcmovne
aam
fisttps
mov
mov
ljmp
shll
ds
aad
aad
cmp
in
ret
fucomp
mov
neg
out
loope
shl
loopne
fldl
fsubp
test
orb
ror
xor
cli
int3
ds
incl
repnz
out
loope
shl
orb
ret
fpatan
in
fiaddl
rcr
repz
rorl
adcl
hlt
aad
cmp
lret
out
fnstsw
rcl
fucomip
testb
jmp
jmp
in
ret
jmp
idivb
bnd
clc
xchg
cmc
loopne
sti
movb
adc
vaddsubpd
out
test
xlat
loopne
out
hlt
cmc
jmp
sbb
std
cmp
xor
call
ss
iret
int
cmp
repz
call
and
cmc
in
lock
fnstcw
cmp
fdivrl
filds
repz
fstp
lret
into
das
cmc
cmc
fstp
out
hlt
cmp
rcl
aas
loopne
aam
leave
out
jecxz
lea
repz
out
in
ljmp
in
cld
xlat
ret
in
mov
mov
cld
lret
dec
jmp
iret
rcl
fcomp
aad
mov
cmp
cmp
jle
test
shr
rcr
aam
sar
lock
cmp
shl
bnd
testl
lds
enter
fucomi
shr
xlat
test
cmc
test
in
in
lret
test
loope
aaa
das
enter
cmp
aaa
int3
shr
in
sarl
sar
aam
sbb
sti
in
loopne
adc
imul
repz
adc
shr
ret
rcr
repz
xchg
addb
rcl
jmp
rcr
out
out
jmp
aaa
repnz
cmp
cli
jmp
nop
mov
in
cli
fnstcw
shl
hlt
fnstsw
int
hlt
ss
in
ljmp
and
ljmp
cmp
fdivr
xor
ret
fcomip
aam
repz
cli
cmp
std
stc
fmulp
xchg
xchg
in
test
in
repnz
fdivr
lret
cmc
cmp
idivl
fdiv
lock
hlt
mov
addb
int3
mov
test
in
xor
aam
cld
lret
int3
repz
idiv
in
out
std
in
loope
xor
xor
cld
aas
xlat
lock
cmp
clc
ljmp
call
cmp
xor
idiv
addb
fildl
rorb
cmp
rcl
ss
not
cli
loope
cmc
imul
mov
sti
loopne
out
das
hlt
icebp
out
aaa
ds
loopne
int
rcr
out
cmc
fldl
adc
test
hlt
fdivrl
out
iret
add
in
xchg
aam
sti
mov
cld
out
cmp
std
loopne
add
jmp
ds
xlat
lock
add
int3
call
subb
xor
xor
stc
lret
into
cmp
jmp
ds
mov
in
or
clc
xlat
lret
rcr
fnstcw
cmp
rcr
out
ror
loop
in
mov
addl
repnz
int
out
in
test
mov
roll
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
dec
inc
xor
repnz
add
lret
out
enter
fsubrp
out
iret
ret
clc
into
ds
leave
ds
ss
aas
clc
roll
xchg
fucomip
loop
out
lret
int3
cmp
iret
test
jecxz
stc
repz
decl
xchg
fcom
lock
cs
cmc
jmp
into
faddp
icebp
in
loop
mov
cld
fsubr
xchg
jecxz
fld
div
fmul
cmp
in
fdiv
stc
roll
fcomi
loopne
cli
mov
sub
decl
cmp
fcmovb
in
in
cld
std
out
flds
out
dec
in
fiadds
jmp
jmp
shl
cmp
rcl
mov
incl
leave
loop
cmc
rol
repnz
cmp
rcr
cld
test
ret
out
mul
xlat
leave
out
lret
test
out
loope
in
loop
sti
into
ds
loop
repnz
out
std
shl
cld
fucomi
idiv
jecxz
loopne
xchg
sub
cmp
call
aas
sar
mul
out
test
iret
xchg
clc
ss
repz
hlt
cmp
roll
icebp
loopne
sti
adc
loop
xchg
addb
clc
cli
das
jmp
aas
ror
cmp
xchg
out
rcl
sub
fcmove
sub
shr
and
clc
loope
mov
mov
mov
jecxz
sti
xchg
repnz
jecxz
aam
shl
sti
loope
fcmovnbe
out
out
flds
sub
xchg
int3
in
mov
jecxz
jmp
cmp
stc
cld
jecxz
fadd
stc
mov
in
mov
jecxz
xchg
xchg
rol
ss
call
fdiv
testb
lret
in
leave
xchg
jmp
sti
out
repz
cmp
jmp
div
ds
in
cmc
lret
cld
sti
loop
adcl
repnz
in
std
repz
aam
in
stc
fcmovbe
int3
fsub
bnd
in
into
sub
ljmp
jecxz
push
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
push
ljmp
add
cli
mov
stc
mul
jmp
ljmp
xchg
aam
sar
div
cmp
in
cmp
clc
fdivrs
inc
loop
out
leave
loopne
call
into
xchg
out
leave
lock
jmp
jmp
ret
test
cli
test
loope
rorl
out
xor
std
hlt
cmc
rcr
in
xor
lea
mov
out
int
sub
aam
into
fcomi
out
sarl
lock
ret
fadds
lret
mov
xor
out
jmp
hlt
test
rcl
flds
int
xchg
jmp
or
iret
icebp
in
rcr
fmul
iret
int3
iret
div
jmp
in
rcr
in
mov
out
int
test
repnz
ljmp
stc
cmp
aas
cmp
repz
xlat
fucomip
fcomp
test
ret
std
test
fsubrp
shll
jmp
int3
hlt
cmp
cli
int
incb
in
lret
loope
out
test
sarl
ror
ds
xor
mov
fcmovbe
xchg
mov
test
icebp
rcr
int
iret
sar
sar
shl
fdivrp
cmp
or
fchs
sti
faddl
loope
divl
iret
ljmp
mov
cmp
cmc
in
idiv
rcl
cld
lret
ljmp
cli
lock
int
into
loopne,pt
fadd
cli
call
mov
mov
mov
int
loopne
in
sti
jecxz
cmp
fsubp
flds
nop
icebp
mov
lock
enter
fnstsw
fucomp
ljmp
loopne
jecxz
cmc
stc
jecxz
jecxz
nop
xchg
xchg
cmc
loope
xor
jmp
cmc
out
sar
loopne
sar
lock
loopne
fmuls
int
xchg
fmul
sub
loop
in
in
jmp
into
loope
out
sar
fcmovnbe
fdivrp
xor
lock
loop
shl
xor
sbb
neg
std
addb
jmp
sti
iret
mov
aaa
enter
xor
add
pop
mov
pop
pop
pop
leave
ret
