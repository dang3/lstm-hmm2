push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
andl
sub
push
push
lcall
mov
dec
popf
mov
fadd
test
clc
es
lds
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
mov
jb
repnz
cmc
test
mov
jns
add
lods
ds
test
test
sbb
adc
lea
rorl
pop
jne
lea
lcall
sbb
adc
hlt
sbbb
scas
or
aam
cmp
jl
ret
sar
push
adc
sbb
movsb
push
cli
sbb
cmp
addr16
testl
or
ss
mov
clc
call
or
insb
hlt
cld
outsl
mov
xor
add
les
jo
sbb
sub
adc
adc
xchg
jnp
arpl
mov
cmp
mov
mov
inc
jg
clc
sbb
sarl
adc
push
daa
test
rcll
rcrl
repz
iret
sbb
pop
mov
fwait
add
push
std
arpl
in
sub
aaa
xor
lret
jb
in
out
ret
cmc
lods
cwtl
daa
xor
out
mov
pusha
xchg
mov
test
sub
adc
nop
adc
dec
and
cli
icebp
sbb
test
or
sub
test
xlat
fdivs
jp
push
jb
mov
mov
adcb
loop
incb
fcompl
adc
mov
jno
or
subb
jae
cmpsb
imul
pop
popa
xor
pop
dec
jg
daa
adc
out
lahf
jge
mov
jecxz
and
sbb
pop
mov
test
pop
mov
sbb
ja
mov
sub
sbb
lcall
out
repnz
movsl
test
test
jns
stos
xor
inc
mov
gs
aaa
imul
movsb
inc
adc
push
jmp
dec
mulb
mov
sbb
loope
jnp
xor
lods
cs
inc
ja
out
int
fistpll
push
jle
lods
or
cmp
call
aad
aas
adc
shrl
dec
ja
mov
jle
rol
lods
stc
int
test
das
xchg
popa
fdivs
add
fucom
popf
xchg
inc
das
mov
cli
out
pop
or
jg
sahf
adc
jl
out
push
loop
pop
leave
imul
mov
and
dec
jp
faddl
rorb
outsb
or
jmp
jno
mov
cltd
insb
push
sub
jl
bound
xor
mov
stos
adc
adcl
sub
pop
xchg
add
xchg
mov
push
repnz
cwtl
jmp
lock
test
dec
fstps
push
pop
dec
gs
mov
dec
fcomps
push
jle
cmp
mov
fstp
imul
int3
into
arpl
push
aam
gs
or
int3
xchg
push
imul
push
adc
xorl
lock
sub
fxam
out
pusha
xor
cmp
movsl
insl
loop
std
add
or
pop
loop
or
inc
clc
movsb
sahf
mov
xchg
sbb
ret
imul
in
into
mov
mov
enter
test
sbb
add
or
jnp
hlt
mov
xchg
add
movsb
pop
fs
or
sub
mov
dec
mov
ljmp
add
mov
xchg
mov
xchg
dec
gs
add
inc
outsb
iret
movsl
popa
call
xchg
cmp
xchg
leave
inc
jae
pop
push
inc
mov
repz
repnz
pop
sbb
mov
pop
push
push
inc
out
sub
lock
add
or
pop
push
insb
pop
mov
int
jp
pop
xchg
loop
dec
mov
sahf
or
and
sub
push
cmpb
sbb
xchg
test
cmpsb
xchg
and
int
ja
xchg
cmpsl
loop
jl
dec
jo
mov
and
inc
mov
fsub
sub
outsb
inc
jo
lods
lret
or
divl
pop
mov
or
iret
mov
jle
fnstcw
jp
push
sbb
sahf
jne
out
xchg
sub
lcall
sbb
and
les
sub
inc
xchg
add
cs
pop
or
fisubrs
ds
pop
inc
cmp
out
dec
repnz
popf
xchg
xchg
push
jmp
cmpsb
xor
cmp
repz
imull
pop
or
sub
divb
addr16
je
sbb
es
addl
das
cld
sub
insl
jne
xchg
mov
out
leave
mov
scas
mov
xor
mov
mov
fisubrs
xchg
leave
push
jns
inc
test
mov
rclb
mov
cmp
mov
or
frstor
or
inc
sub
fiadds
notl
or
xor
shrb
daa
outsb
clc
mov
xchg
lock
cltd
arpl
push
les
sbb
stos
lock
cmpsb
dec
add
sahf
and
pusha
dec
mov
subb
daa
inc
xchg
inc
gs
ret
cltd
pusha
inc
scas
bound
bound
repnz
xorb
popa
and
popa
lcall
pop
xor
filds
jge
ret
cmp
ret
mov
xor
or
stc
icebp
insb
dec
stos
xor
add
mov
jno
cltd
hlt
pop
jno
push
cmp
cmp
xor
jo
add
pop
shlb
pop
adc
repz
inc
fsubs
sar
xor
dec
arpl
lock
pusha
xchg
popf
cs
cli
imul
fdivp
fiadds
push
pop
inc
adc
stos
ljmp
lea
inc
scas
mov
stos
adc
ficoms
in
mov
in
adc
cwtl
es
lea
leave
and
push
sub
cld
add
pop
enter
repz
mov
stc
lods
fs
lods
xor
lds
insl
xlat
add
sbb
pop
push
pushf
adcl
add
in
test
sahf
aaa
aaa
out
mov
rcrb
and
dec
pop
ret
test
jo
pop
icebp
int
mov
sub
iret
imul
cltd
insl
and
pop
popf
adc
movb
in
fimull
xor
xchg
xor
push
mov
xchg
inc
fldcw
xchg
inc
inc
dec
mov
xchg
pop
push
cltd
and
addr16
jecxz
sub
dec
arpl
cltd
cmp
ljmp
int3
fsubrl
mov
fdivrl
lods
mov
out
jae
mov
push
in
pop
cwtl
pop
insl
and
dec
adc
push
dec
and
or
mov
enter
out
jb
sti
pop
cmp
pop
ss
sub
frstor
ds
out
mov
mov
int3
push
ljmp
adc
fwait
cmp
insl
jnp
leave
jne
xor
shl
scas
xchg
cmpsb
add
stos
testl
cmp
ljmp
xlat
inc
addps
cmp
mov
fstl
push
mov
mov
and
sub
adc
popf
lret
add
pop
hlt
pop
pop
xchg
mov
icebp
lock
mov
cli
ja
test
pop
test
icebp
push
outsl
pop
test
idiv
push
fcoms
sub
pop
push
lods
jne
movsl
repnz
sti
sbb
mov
imul
sbb
inc
clc
or
aaa
or
sbb
jg
out
jle
pop
lods
dec
ret
push
and
mov
test
nop
outsl
out
je
popf
into
dec
lret
sub
cltd
shll
pop
clc
mov
das
push
int3
jmp
xchg
inc
fldenv
pop
fistpl
push
leave
jb
mov
pop
push
push
testl
dec
fnsave
push
jne
loope
dec
or
mov
or
xor
pop
push
pop
js
add
mov
rorb
mov
mov
pop
movsb
in
insb
cmp
mov
mov
fucomi
popa
add
andb
ret
mov
inc
mov
loopne
or
ret
enter
ftst
pop
jns
sub
sbb
jl
das
add
scas
out
nop
cmp
adcl
fldl
mov
jmp
lret
jb
in
xor
jns
dec
mov
frstor
idivl
or
ja
das
out
cli
lea
int3
xor
jmp
cwtl
filds
loope
jb
loop
pop
mov
dec
imul
push
outsl
push
or
inc
push
leave
pop
sbb
ljmp
insl
push
test
mov
leave
outsb
or
jne,pt
test
push
push
add
xlat
test
rorl
inc
mov
push
out
fnstcw
inc
popa
xor
cmp
das
pop
rcr
lods
scas
sbb
jne
jo
cmp
fisubrl
std
pop
xchg
enter
pushf
sahf
insb
pushf
sbb
ffree
int
fisttps
xor
pop
insl
pop
fcoml
mov
andl
fcoml
cmpsl
push
mov
outsb
call
in
and
push
or
dec
repnz
mov
add
jae
jp
mov
mov
sahf
cmp
nop
mov
push
inc
mov
loop
lds
ret
testb
scas
mov
dec
ficoml
loop
xchg
arpl
insl
cmp
shr
sahf
or
js
xchg
ret
xchg
frndint
rep
loop
ror
xor
jecxz
sub
dec
in
loopne
push
dec
stos
sbb
push
inc
lds
and
in
ljmp
outsl
loopne
mov
cltd
jno
sbb
ret
push
push
fcoms
adc
xor
sbb
testb
adc
test
mov
cwtl
pop
inc
andl
adc
in
std
or
xor
cld
jae
push
xchg
adc
mov
daa
icebp
orl
loopne
dec
sub
sub
cmp
sbb
or
inc
dec
jbe
sbb
mov
fisttpll
out
ja
push
cs
lock
cmpl
pushf
cmp
adc
adc
dec
mov
push
fs
dec
or
jb
sub
sti
call
cmp
mov
loop
fs
jo
or
lcall
push
insb
sbb
daa
arpl
cmpsb
cli
jl
lret
in
movsl
xchg
bound
stc
cmp
push
lods
ljmp
push
sub
mov
aaa
pop
dec
mov
jne
out
inc
test
fwait
scas
mov
fs
dec
cmp
test
scas
add
aad
imul
jl
sub
fldcw
sahf
or
es
out
mov
add
stc
jg
ja
addr16
cmp
pop
pop
xchg
sahf
mov
and
int
xchg
jecxz
lock
jns
lcall
aaa
dec
and
xor
and
push
repnz
cwtl
or
call
dec
call
push
in
jg
pop
jae
lock
jmp
mov
iret
mov
jecxz
ljmp
out
pushf
test
pop
dec
pusha
cmp
rorl
jne
repnz
adc
sbbb
cltd
sti
lahf
imul
cmpsl
sti
mov
xor
mov
xchg
sub
aas
jecxz
or
mov
daa
jg
pop
arpl
add
into
mov
xlat
fistl
inc
add
cmp
pop
gs
or
or
int3
add
jne
fwait
test
pop
sub
jl
gs
xchg
mov
mov
xlat
xor
mov
jb
push
popf
cmp
mov
lds
pushf
cmpsb
cltd
ffreep
pop
leave
pushf
push
outsb
in
ror
test
or
loopne
repnz
xchg
xor
pushf
lock
dec
repnz
pop
mov
scas
push
push
sbb
dec
sub
jbe
jo
cmp
cli
enter
xor
leave
add
orb
jmp
xchg
adc
push
pop
inc
mov
stos
mov
or
mov
stc
aad
mov
scas
test
outsl
adc
popf
mov
pop
aas
push
xchg
add
jbe
pop
sub
negl
sub
imul
pop
into
or
xor
inc
adc
push
push
in
mov
jg
mov
xor
and
loope
les
lret
jo
pop
jnp
dec
lea
xlat
in
mov
loop
mov
fcomip
adc
add
outsb
hlt
lret
popl
xor
scas
je
out
pop
and
lret
push
lcall
cli
roll
inc
lret
sbb
mov
cli
cld
aas
push
mul
int
mov
sub
cmp
inc
es
int
clc
push
test
dec
pushf
lods
test
or
mov
cmp
stos
sub
aas
mov
mov
adc
lods
out
daa
mov
pop
xor
mov
nop
inc
xchg
mov
xor
push
push
jne
dec
lods
imulb
out
fisubl
in
out
imul
inc
mov
add
jmp
lcall
sbb
ljmp
testl
lcall
push
push
adc
cmpsl
aam
fists
sbb
push
shl
ds
arpl
scas
cmp
sti
xchg
out
jne
out
aas
inc
out
sbb
es
int3
repz
mov
inc
pop
cwtl
jbe
jno
sub
cwtl
dec
iret
jbe
fs
inc
mov
ret
orl
cld
jae
sahf
in
test
add
popf
loopne
jns
push
imul
and
sub
pusha
leave
jle
imul
subb
inc
sbb
mov
daa
loop
inc
push
mov
cmp
push
cwtl
dec
rcll
cmp
sbb
dec
testb
mov
dec
je
int3
or
xchg
fistpll
call
jl
ja
jg
xor
mov
js
repz
xchg
dec
ret
int3
dec
mov
inc
cmpsb
xor
aas
into
sbb
arpl
cmpsb
lret
inc
lret
dec
add
push
jae
sbb
mov
pushf
les
jecxz
inc
ret
insb
cmp
rcrb
add
xor
arpl
mov
lds
dec
insb
jge
mov
adc
mov
mov
test
arpl
cli
mov
sbb
fwait
or
jl
jge
ljmp
sahf
lcall
bound
push
dec
loopne
jl
pop
clc
and
and
or
or
aad
jg
xchg
and
or
pop
addr16
loopne
cs
add
imul
add
sbb
repnz
xchg
je
std
pop
pop
xorb
fstsw
push
pop
sub
lea
sub
clc
call
mov
jae
lods
push
popa
sub
mov
push
and
sbb
out
js
and
xlat
xlat
adc
sub
lock
cli
add
mov
push
push
dec
lock
jge
std
fildl
cli
mov
add
mov
mov
or
ja
add
repz
js
insl
jge
mov
xor
rclb
fdivp
lods
xlat
cmp
mov
dec
out
fistl
lret
hlt
stc
es
mov
insl
push
stos
pop
ja
daa
mov
jmp
adc
dec
inc
dec
movsb
adc
rolb
mov
mov
jl
lds
add
outsb
adc
and
andl
push
enter
lcall
ret
hlt
roll
mov
pop
mov
sub
sbb
sub
bnd
ljmp
push
loopne
popf
inc
aam
fwait
arpl
sbb
mov
ss
cmpsl
int
jno
mov
xor
repz
jle
std
sub
stos
mov
leave
jne
cmc
out
and
inc
push
sti
mov
nop
dec
push
mov
pushf
sub
addr16
push
cs
xor
cmpsl
xchg
mov
out
imul
ljmp
sub
repnz
loope
ds
xor
into
addl
loope
aad
pop
push
pop
cmc
leave
mov
or
cmp
nop
into
stos
cmp
xchg
das
adc
inc
pop
lods
shrl
mov
adc
dec
call
loopne
int3
dec
inc
cmp
std
mov
xor
pop
leave
mov
fidivrl
mov
inc
stos
xchg
mov
lods
es
popf
in
loop
and
inc
call
jb
mov
popa
ror
in
inc
stos
pop
aaa
test
jnp
push
out
gs
fisttps
leave
and
ss
ret
les
mov
in
or
dec
or
loop
or
mov
inc
mov
adc
imul
push
cwtl
inc
dec
push
and
popf
or
xchg
out
push
pop
lret
sbb
sbb
mov
xor
adc
cmp
push
sbb
das
push
leave
jp
inc
insl
dec
jge
mov
or
out
pop
movsb
jge
pushf
mov
stc
inc
mov
bound
sti
sub
or
adc
lret
daa
mov
push
sbbl
mov
mov
out
lret
rcrl
mov
and
dec
jmp
push
dec
xchg
dec
in
sub
or
aam
cld
lods
pushf
cmc
mov
fcoms
pcmpgtw
ljmp
pop
mov
pop
out
push
sbb
in
stos
stos
xor
push
loopne
ljmp
xor
aaa
and
cmp
je
or
mov
and
dec
inc
push
fdiv
and
push
movaps
xor
lea
pop
call
pop
mov
xor
jnp
adc
pusha
daa
xchg
mov
jp
sub
in
scas
stc
push
jno
rcrl
sbb
mov
jl
add
outsb
or
and
adc
lret
and
sti
or
inc
push
pusha
adc
and
mov
cmp
test
in
dec
jbe
jb
mov
int3
sahf
repnz
pop
in
inc
xor
scas
and
xorb
lods
pop
outsb
inc
aad
xchg
sbb
mov
pushf
dec
lods
cwtl
jnp
sbb
or
pop
notb
je
arpl
filds
pop
xchg
inc
mov
jb
fnstenv
push
call
xor
inc
shll
lahf
shll
adc
imul
jo
adc
ja
or
aam
or
push
jge
xor
inc
or
and
jae
and
call
jno
movsl
dec
daa
testb
or
sub
mov
repnz
xor
fs
mov
mov
xchg
in
push
pop
inc
aam
cmpsl
bound
in
mov
int3
jmp
xchg
xchg
and
or
push
mov
push
cli
leave
push
mov
xchg
xlat
jne
jmp
push
int3
jmp
adc
jge
ret
xor
push
push
pop
sub
dec
push
mov
cmp
dec
in
stos
mov
xchg
xchg
fildl
xchg
jno
das
dec
push
push
inc
in
lret
lea
xchg
mov
cmpsl
mov
enter
mov
icebp
mov
pop
cmc
scas
pop
lea
je
arpl
cmp
pushf
xchg
and
mov
sub
lods
ja
sahf
in
pop
or
jb
pop
pop
inc
jbe
jne
mov
xor
push
fdivrs
cmp
xlat
fidivs
daa
lock
nop
int3
inc
iret
lahf
notl
je
js
add
mov
mov
ss
pusha
sbb
fisttps
daa
cltd
out
adc
fcmovnbe
jl
ljmp
iret
mov
jl
ljmp
sti
hlt
lea
add
pusha
dec
aam
adc
pop
sbb
loope
push
pop
xor
jg
push
cmp
scas
add
adc
sbb
push
ja
xor
movb
vpsubusw
adc
mov
pop
adc
push
pushf
cmp
dec
jge
sub
xchg
loop
dec
or
pop
and
lret
dec
je
ret
xor
add
ret
popf
pop
cmp
inc
subb
jne
mov
push
mov
jecxz
fsts
and
inc
push
movsl
add
jle
iret
and
push
jp
fisttpl
sti
jnp
push
popa
lret
test
cmpsb
mov
lahf
leave
sbb
inc
lcall
out
xchg
adc
cmc
or
pop
and
and
cmp
and
test
lcall
dec
cmp
ja
inc
lret
ss
xchg
fs
dec
inc
xchg
sub
ror
mov
cmp
pop
iret
mov
ljmp
and
xor
pusha
dec
sti
dec
jnp
jo
sbb
sub
cmc
dec
add
push
pushl
andl
rcll
add
inc
xlat
inc
cltd
jne
cmp
and
mov
adc
pop
mov
std
push
add
rcrb
and
stos
adc
fst
into
shlb
mov
ljmp
movsl
xchg
mov
adc
stos
les
in
ljmp
daa
mov
rcl
inc
mov
cltd
mov
add
je
pop
mov
push
jmp
push
xchg
aaa
mov
js
lea
int
imul
or
push
aaa
dec
jne
push
fists
push
shl
ret
das
inc
inc
push
outsb
addb
jl
ljmp
jle
xorl
jecxz
mov
fmuls
in
dec
decb
or
stos
adc
out
mov
xchg
sub
in
jp
jge
pop
repz
sbb
imul
mov
jmp
out
xchg
xchg
lea
push
ljmp
lret
dec
cmc
add
pushf
inc
sahf
dec
stc
xchg
jl
push
add
mov
arpl
dec
jo
xchg
inc
imul
mov
mov
rorb
inc
and
xor
push
addl
pop
inc
int
cli
insb
fwait
adc
mov
inc
clc
jno
jl
sub
and
cld
fwait
adc
mov
mov
sbb
push
gs
mov
pop
xor
mov
into
mov
rcrb
cltd
icebp
add
pop
enter
and
ret
stos
mov
mov
xchg
mov
sbb
sub
xor
xchg
repz
inc
adc
dec
loope
loop
dec
push
scas
adc
xchg
shll
adc
fdivs
fs
adc
into
xor
lock
dec
lret
into
das
mov
gs
push
mov
mull
arpl
cmp
mov
pop
and
stos
push
packssdw
jge
popa
or
mov
push
lret
insl
pop
sarl
push
pop
enter
popa
pop
aad
in
addr16
int3
movsb
std
cmc
pop
sbb
push
rcrb
xor
repnz
adc
dec
pop
sti
jg
xchg
adc
sahf
adc
cmpsb
aad
and
inc
mov
out
repz
adc
xchg
repz
sub
cmc
jmp
sahf
imul
mov
popa
add
mov
push
lcall
and
je
jo
psllw
push
lods
jmp
sahf
jae
pop
mov
mov
mov
lcall
mov
lods
in
sbb
sub
xchg
or
mov
xor
and
orl
jb
pushf
xacquire
or
and
mov
ljmp
adc
popa
out
repz
sub
add
enter
lods
sub
inc
int3
ljmp
mov
cmpsb
mov
xor
and
lea
jns
push
cltd
das
jecxz
insb
outsl
je,pn
inc
in
jo
mov
xchg
insb
enter
enter
xchg
mov
out
idivl
outsb
sub
fisttps
sub
ds
shl
fildll
jge
jb
mov
pop
and
or
not
aas
mov
dec
xor
inc
cmc
inc
sub
ret
push
sub
fwait
sbb
sub
adc
lahf
cmp
popf
out
daa
lods
push
mov
jnp
out
repz
sub
sahf
mov
pop
xchg
std
fdivrs
or
adc
rol
clc
pop
mov
and
sub
popf
mov
out
add
cltd
jmp
mov
inc
cmp
mov
fisubrl
jge
push
into
push
mov
inc
aam
inc
and
adcl
aaa
pop
cwtl
and
mov
fisubrl
sti
shl
push
ljmp
jecxz
fidivrl
adc
adc
fucomi
lock
adc
sbb
dec
sbb
popa
add
dec
daa
nopl
xchg
xchg
xor
popf
inc
jae
mov
xchg
xlat
aad
mov
mov
adc
outsl
jecxz
aaa
or
test
mov
inc
in
lea
cs
test
loope
mov
addr16
sbb
out
loopne
push
xlat
jl
js
add
ljmp
xor
aam
add
lcall
mov
sbb
popf
rorb
mov
pop
dec
mov
leave
dec
je
pop
lahf
jp
test
adc
or
ret
add
mov
inc
sub
push
lods
sbb
jnp
xchg
sbb
dec
mov
fnstenv
adcl
lret
or
push
push
push
push
pop
xchg
enter
mov
adc
jns
fs
add
popf
repnz
inc
repnz
xchg
cld
push
jne
and
jle
push
lods
imulb
push
insb
pop
std
sbb
mov
mov
leave
insb
mov
cmp
mov
inc
pusha
enter
shll
scas
outsb
fdivl
rcr
outsb
xchg
sub
lea
js
xchg
push
nop
orb
sbb
and
or
lea
loop
fisttpl
jl
sbb
mov
xchg
pop
lods
jle,pn
out
repnz
fs
push
aad
in
insb
mov
jns
loope
insl
aam
adc
inc
pop
cmpb
test
dec
mov
push
mov
movsl
dec
clc
adc
sub
or
push
gs
sbb
sub
and
pop
jbe
push
jge
cmpb
aaa
sub
and
and
xor
pushf
or
int3
cmp
push
ret
loopne
xor
pop
aaa
dec
mov
dec
jb
push
cltd
mov
int3
stc
scas
dec
jg
test
jns
sbbb
insl
addl
jmp
push
adc
mov
testl
lods
dec
daa
lods
sbb
in
inc
dec
sbb
xor
sbbb
fsubrs
push
mov
leave
mov
xorb
icebp
dec
xchg
or
imul
ret
pop
clc
xor
cltd
jne
mov
es
scas
mov
jae
inc
xchg
jle
or
bound
movsb
xchg
in
xor
les
in
sbb
fnstsw
xchg
scas
lea
inc
add
jns
out
xor
popa
sbb
jl
lea
in
jb
sub
jl
xor
stos
sbb
lahf
cltd
add
mov
icebp
pop
pop
push
xchg
lret
stos
orb
jo
jo
stos
cmp
or
das
lcall
inc
mov
mov
push
cmp
jae
sub
gs
pop
add
xor
jo
mov
cld
jge
imul
ja
mov
cmpsl
stos
lea
ds
inc
mov
sbb
jmp
and
sbb
popl
sbbb
add
loopne
pop
gs
adc
cs
popf
xchg
jbe
xchg
test
mov
jp
push
addr16
mov
jmp
icebp
data16
push
fstpt
cli
mov
lds
rolb
push
xchg
scas
push
lods
push
outsl
testl
sub
adc
jp
imul
subl
ljmp
xchg
push
sbb
or
pop
movsb
mov
push
sub
out
mov
inc
mov
frstor
mov
test
adc
ret
int3
inc
in
mov
adc
lds
adc
lods
xchg
jmp
or
imul
popa
into
jb
rcrl
add
xor
mov
in
sbb
adc
jecxz
fiadds
jp
aaa
dec
aas
call
jne
sub
lock
sub
xchg
mov
adc
sub
mov
repnz
mov
negl
call
lahf
insl
jbe
or
dec
in
pop
cs
aaa
sub
andl
mov
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
mov
xlat
push
push
sub
push
push
sub
xor
stc
sub
push
lret
daa
sbb
cmp
lcall
push
mov
lret
cmc
dec
std
aas
movsb
mov
push
fisubrs
imul
jmp
call
sbb
aas
out
cmp
xor
call
jae
push
push
adc
daa
jno
push
mov
sbb
push
cltd
inc
mov
insb
cmpsl
adc
jmp
xchg
push
ret
mov
fs
das
fstps
add
add
in
imul
sub
push
rcr
fldt
pop
stc
and
inc
lods
xchg
pop
ret
dec
mov
inc
adc
mov
aaa
out
adc
pop
jae
mov
mov
adc
or
inc
pop
and
lods
stos
sbb
push
cmovge
in
and
inc
lahf
test
aam
lds
loope
pop
inc
push
call
in
push
mov
mov
xchg
fcomip
test
shrb
inc
sub
jnp
xchg
sarl
aam
mov
add
or
jb
repnz
xor
pusha
hlt
repnz
imul
xor
ds
ret
call
bound
push
std
in
inc
insb
cmpsb
adc
mov
jmp
jl
movsl
daa
jle
inc
sub
fwait
add
adc
lock
xor
jne
fisubs
shlb
fsts
ljmp
fcomps
lret
or
or
out
fildll
jb
cli
andb
mov
mov
in
inc
adc
and
pop
sbb
iret
loopne
clc
lret
xchg
ds
fs
mov
xchg
test
xlat
mov
cmp
dec
dec
push
push
movsb
mov
add
cmp
and
gs
ljmp
dec
stos
arpl
mov
out
mov
mov
in
jmp
lret
cmp
lods
stc
pop
lret
gs
inc
jo
les
lahf
lds
mov
popf
ret
add
fstpt
lods
cltd
or
xlat
je
jnp
popl
pop
mov
cmpl
bound
aas
daa
sub
stos
cwtl
cltd
or
gs
outsl
inc
mov
into
push
daa
ret
push
mov
add
cmpb
push
fisttpl
lock
mov
fsubr
jg
jne
out
lods
iret
ficoms
popa
and
movsb
fiaddl
lods
and
cmc
subb
mov
mov
mov
repnz
test
ljmp
pop
mov
aaa
push
sbb
pusha
cli
pop
mov
rorl
dec
pop
cld
aas
or
cmp
sbb
push
jmp
add
pusha
rcr
divl
lds
mov
xchg
adc
fcoms
cmp
lods
or
push
or
or
xchg
mov
fucomi
cmp
push
in
jle
movsl
orb
jmp
jge
pop
movsl
lds
sbb
fdivrp
fnstenv
mov
outsb
inc
pushf
inc
pop
jae
icebp
pusha
dec
loopne
sub
mov
ret
xor
pop
fdivp
cmp
xchg
mov
js
pusha
xor
cli
cmpsb
jmp
xchg
mov
jno
adc
sbb
fisttps
insl
flds
xor
adc
sbb
mov
sti
cmc
sbb
pop
aas
cmpsb
cmp
cmpsl
lds
jmp
subps
add
xor
and
jg
lods
lea
or
dec
mov
popa
popf
xor
test
mov
int
ficompl
jl
mov
je
ss
sarl
lcall
fdivrl
dec
cmpsl
sbb
fidivrs
cmpsb
cmp
fs
mov
into
add
mov
in
sti
ja
enter
arpl
or
pop
idivl
jge
fcmovne
and
sub
push
pop
jb
pusha
dec
inc
mov
out
mov
and
stos
cwtl
push
and
stos
mov
mov
test
mov
insl
ja
in
push
mov
mov
sbb
lds
xorb
xchg
lods
mov
fcomi
cmp
repz
dec
jns
sahf
inc
imul
dec
pop
lea
aad
jno
push
cmp
ss
lods
adc
push
pop
scas
andb
pusha
out
aaa
and
enter
adc
outsb
xchg
and
sub
jne
clc
je
or
es
inc
mov
push
mov
jae
cmp
cmpsb
icebp
dec
lcall
or
not
mov
dec
rol
xchg
repz
arpl
dec
lods
lods
nop
stos
in
jbe
and
aaa
lods
and
sbb
movsb
fistps
xchg
dec
rol
jg
fadd
inc
data16
out
xchg
mov
lea
pop
orb
fldl
stos
or
inc
sti
push
mov
dec
push
xor
add
insl
sbb
mov
jno
xor
rclb
sbb
std
sub
lds
adcl
push
xchg
movsl
inc
repz
jecxz
mov
jbe
dec
mov
mov
inc
test
push
shrl
mov
testb
inc
in
outsl
in
scas
xchg
cmp
and
lcall
fwait
xor
push
lock
mov
stc
cmp
movsb
mov
fiaddl
mov
jae
dec
jno
fdivs
imul
xchg
shlb
and
cmpsb
push
push
push
sub
push
or
dec
popf
or
test
into
or
lods
pop
arpl
push
aaa
push
dec
ss
popa
fcoms
shll
sarb
xchg
or
cmp
mov
jne
jns
and
jbe
bswap
sub
sub
mov
mov
cmc
sbb
sub
jp
in
sbb
imul
fs
jns
ss
sbb
aad
xchg
dec
popa
dec
jecxz
xchg
aaa
mov
imul
push
inc
jmp
scas
cmp
inc
cmc
add
std
xchg
cmpsb
mov
jmp
inc
sub
gs
stos
push
pop
mov
mov
lods
inc
mov
mov
inc
mov
xchg
push
decb
lds
ds
in
js
sbb
outsb
push
lcall
lock
int3
sti
xlat
mov
jno
inc
mov
jecxz
adc
fistpll
es
cs
xor
fadds
enter
cmp
cmpsl
shll
lahf
ja
mov
cmp
mov
cli
rorl
pusha
popf
mov
loope
imul
insl
push
push
and
or
dec
xchg
lock
addl
pop
inc
jb
sbbl
fisubl
dec
add
pusha
and
out
push
adc
or
add
loop
sbb
and
clc
sub
push
aad
cwtl
sub
xchg
jp
arpl
dec
leave
lcall
mov
adc
mov
nop
mov
jge
add
popa
mov
push
in
fs
push
loop
mov
mov
jne
mov
push
hlt
or
fmull
cmpsb
lds
xor
xchg
inc
adc
mov
shll
lds
xchg
jl
scas
push
dec
scas
push
adc
push
stc
and
and
sti
pop
sbb
or
xchg
outsl
mov
lea
test
sub
push
cmp
adc
fidivrl
pop
mov
popa
repnz
push
popf
mov
fcomps
or
sahf
add
iret
jns
sub
push
loope
mov
push
mov
sbb
popf
mov
or
inc
inc
cmp
sbb
jmp
arpl
jg
mov
mov
sbb
cli
orl
pop
mov
ja
xchg
cmpb
or
inc
dec
repz
lahf
daa
adc
mov
add
call
adcl
aas
repz
mov
jmp
aad
add
pop
mov
adc
lahf
stc
sbbl
dec
rcrl
decb
inc
lods
mov
mov
or
add
xchg
sbb
scas
cwtl
aaa
mov
push
test
out
add
push
repnz
and
rcl
cs
jle
rolb
jle
mov
push
or
aas
mov
js
iret
sub
dec
es
imul
or
mov
leave
and
lods
sbb
push
cmp
push
repz
xchg
sarb
fsubrl
xor
test
jbe
xor
mov
loopne
arpl
dec
inc
orb
mov
scas
aad
xchg
mov
jno
adc
mov
out
daa
mov
jg
cmp
pusha
inc
dec
inc
imul
cltd
mov
mov
xchg
pop
jnp
cmp
mov
jecxz
adc
fs
cltd
enter
test
cmc
scas
lods
and
push
xchg
adc
dec
jle
jo
xchg
cmp
lret
mov
push
jmp
adc
movsl
xor
xor
mov
pop
xor
in
adc
adc
jo
ja
dec
or
xchg
jb
push
mull
push
inc
push
cmp
dec
mov
fwait
xchg
and
push
mov
bound
out
cmpsl
pop
lds
rcrb
mov
cmp
cmp
ljmp
mov
cmc
ds
sub
jp
outsl
pop
mov
adc
dec
jb
dec
adc
inc
in
bound
in
loopne
sub
jb
int
scas
hlt
inc
cmp
mov
jo
dec
hlt
into
fwait
je
aam
xor
jbe
push
call
in
insl
outsb
inc
lods
push
lock
lcall
inc
stos
jmp
xchg
mov
std
mov
movsb
out
jae
mov
inc
sarb
xor
inc
int
fwait
mov
dec
call
sub
jns
int3
xor
push
mov
cmc
adc
mov
movsb
and
xor
addr16
int
lods
inc
shll
insl
call
dec
lods
jmp
testl
andb
mov
and
push
mov
sub
push
outsl
cmp
cli
stc
nop
movsb
mov
cmp
jge
je
arpl
mov
lcall
inc
pop
or
out
test
and
test
mov
and
cmc
popf
out
pusha
push
mov
push
popa
adc
out
and
xchg
lret
aam
lret
ss
cs
sub
adc
out
lret
lods
jns
std
mov
scas
adc
scas
pushf
pop
scas
call
jo
addl
pop
mov
push
lods
data16
enter
cli
push
dec
mov
pop
pop
mov
adc
pop
loope
xor
out
mov
loopne
or
or
idivb
adc
pop
lcall
cmpsb
loope
inc
repz
int3
xchg
pop
cmpl
push
jmp
mov
repz
and
xchg
imul
adc
enter
ljmp
mov
mov
out
ficomps
ja
cmpsl
lods
push
cwtl
ret
ja
xchg
mov
jbe
jnp
cli
test
sbb
mov
ja
pop
js
or
sub
push
iret
push
inc
fcoml
divl
add
jne
push
daa
test
loopne
jecxz
pop
or
add
xlat
hlt
push
mov
lret
jg
or
shlb
xor
notl
movsl
test
xor
insb
mov
fisttps
lahf
mov
cli
mov
sahf
xor
cmp
xor
inc
and
or
test
test
rolb
outsl
xor
in
loop
dec
push
inc
mov
mov
icebp
lret
ret
insb
mov
adc
dec
jne
dec
popa
push
dec
lea
stos
jno
into
cmp
cmpsb
and
jno
aaa
iret
out
es
push
mov
mov
rcrb
jb
and
mov
and
je
sbb
orl
xchg
push
lods
hlt
sahf
loope
or
rcrl
popf
das
or
jo
fs
and
fnstcw
pop
push
and
inc
fwait
pop
stc
fdivs
aad
jge
cs
mov
push
dec
mov
mov
lret
sub
xchg
sub
xor
jns
jns
mov
pop
fiadds
lea
dec
sbb
dec
repz
push
insl
addl
mov
add
mov
and
setb
push
inc
push
aaa
mov
xlat
mov
xor
sbb
lods
mov
push
jg
xchg
sbb
adc
xor
xchg
int3
mov
out
cltd
cltd
and
inc
loop
or
jo
jae
data16
fdivs
in
push
cmpsl
nopl
aaa
mov
adc
cmpsl
mov
dec
fistpl
adc
adc
jnp
push
add
es
push
mov
clc
loop
inc
jg
pop
rcll
or
dec
and
jg
push
rolb
test
popf
mov
cmp
push
push
lret
jge
in
mov
ja
lds
mov
and
or
dec
in
pusha
dec
mov
push
mov
jo
shlb
jbe
inc
leave
rorb
mov
stos
jne
jno
aad
mov
sub
add
sahf
enter
aad
int
scas
mov
mov
mov
shll
shll
outsl
cltd
cmp
int
fwait
xlat
clc
mul
in
adc
dec
mov
and
shlb
lock
push
jnp
out
sbb
pop
fldcw
sbb
pop
adc
mov
scas
or
push
jb
sub
shll
or
pop
add
xlat
cmp
cmp
ficoml
pop
fwait
push
and
jb
mov
out
out
dec
ds
sbb
add
xorl
xchg
push
sahf
sbb
jae
mov
scas
sub
in
mov
lock
mov
mov
xchg
shrb
fcomps
dec
xchg
jnp
adcl
pop
mov
icebp
in
jbe
icebp
in
in
aas
mov
push
push
mov
js
cmpl
iret
pop
or
data16
leave
mov
sti
mov
and
mov
mov
enter
sub
fs
pop
sahf
add
aas
jne
xor
outsl
jl
dec
jmp
aaa
iret
test
push
xchg
cli
push
sbb
dec
imul
jmp
js
xchg
sbb
cmp
add
scas
loope
sub
or
pop
mov
xchg
movsb
and
jecxz
lahf
inc
and
sbb
stos
test
repz
outsl
pushf
adcb
push
scas
push
dec
mov
lahf
lret
mov
mov
cmpsb
push
mov
pop
cmp
sbb
pushf
jl
pop
sub
fmull
dec
jecxz
cmp
xchg
sub
test
adcl
in
xor
jmp
loope
insl
cmpsl
dec
sub
fwait
adc
mov
xchg
inc
pushf
sub
or
ja
scas
stc
dec
cmp
add
in
dec
ds
cmp
fs
lods
dec
lods
pop
xor
or
sub
dec
pop
sub
inc
mov
test
repz
in
xor
rcll
adc
sub
jno
repnz
imul
lock
fistl
mov
into
call
call
pop
enter
sub
fstpt
mov
jmp
fnstsw
arpl
xor
nop
mov
push
sti
andl
dec
adc
adcl
cwtl
outsl
sbb
sub
cwtl
ret
push
xchg
out
rorb
ds
in
clc
mov
sbb
cmp
stos
push
ret
loope
mov
xorl
xor
lret
xchg
addl
cmpsl
rclb
dec
mov
jae
dec
cmp
mov
ljmp
fucomp
outsl
pop
adc
add
xor
nop
les
xchg
or
sahf
jge
add
push
rcl
cltd
mov
mov
mov
jp
cmp
cld
int
pop
lcall
dec
sbb
adc
mov
sub
mov
add
hlt
jne
daa
cli
ja
mov
stc
or
ljmp
xchg
jmp
push
in
ret
pop
xchg
fsubr
ret
xchg
in
jmp
cmp
cwtl
fdivl
mov
jl
push
push
loope
xlat
outsl
fisttpl
pop
mov
mov
pop
xor
push
dec
divl
cs
add
hlt
negb
pusha
arpl
scas
xchg
les
push
pop
xchg
inc
or
jo
cmp
inc
mov
inc
call
in
mov
cmp
pop
insb
cltd
push
sbb
stc
sub
test
xor
push
gs
cmpsl
sub
sbb
popa
cwtl
cli
push
in
lcall
add
cmp
push
jno
std
popf
ret
mov
test
xor
mov
ja
xchg
dec
mov
push
notb
clc
scas
fdivs
sti
mov
popa
fidivl
cmpsb
inc
xchg
mov
ret
jns
setb
push
inc
pop
mov
push
loop
jle
pop
lahf
sti
mov
push
sub
stos
or
add
jno
test
dec
inc
dec
popa
enter
jle
lea
xchg
ds
out
mov
in
sbbl
ds
and
cmpsb
mov
cmp
cmp
cmp
pop
mov
das
adc
mov
push
push
xor
repnz
test
mov
cltd
sbb
cld
add
add
cmp
xchg
sbb
xchg
ja
fs
push
add
lods
mov
inc
test
xchg
sub
movsb
push
ret
out
push
neg
jo
stc
pop
cltd
add
fs
push
pop
cs
lock
pop
pop
sub
sahf
jg
rcr
js
mov
adc
mov
sub
xor
enter
mov
sbb
jns
mov
mov
and
pop
es
fsts
je
adc
cltd
sti
push
jbe
add
sub
aam
push
and
adc
sbb
mov
sbb
movsb
push
je
outsb
pop
mov
les
insb
scas
inc
sarb
mov
leave
inc
xchg
fsubs
out
mov
imul
imul
test
or
sbb
push
jno
js
xor
cli
xchg
jbe
adc
sub
add
mov
mov
scas
rorb
sbb
sbb
or
mov
cmp
dec
out
je
xchg
or
stos
jno
mulb
scas
or
ss
addr16
ds
adc
and
pop
xchg
lcall
jge
xlat
outsl
jo
cmp
test
sti
fbstp
imul
cmp
icebp
lret
jb
stc
jle
fstps
and
jp
mov
enter
out
mov
xchg
mov
add
lret
mov
icebp
and
dec
int3
inc
popf
neg
xor
mov
jp
dec
mov
lds
xor
jle
orl
mov
add
inc
or
mov
jnp
pop
xlat
hlt
imul
pusha
mov
xchg
fistl
subl
lahf
pop
add
mov
fsubp
clc
fcomps
imul
sbb
pop
xchg
pop
pop
ret
sub
daa
int
sbb
fmuls
loopne
cmp
addb
jmp
dec
bound
sbb
lahf
jecxz
mov
lret
int
cmpsl
pop
jge
clc
pop
jl
lcall
jnp
nop
inc
sbb
es
xchg
rcll
pop
adc
inc
jne
loope
adc
xchg
stc
mov
cmp
mov
loopne
and
mov
daa
loop
cwtl
jbe
int3
push
and
mov
pop
andl
add
idivl
jg
cmp
push
sbb
ficoml
lock
ja
out
dec
fwait
bnd
not
arpl
and
lods
cmc
sbb
and
fisubs
or
sub
sub
fsubr
and
adc
push
push
adc
jecxz
inc
lret
insl
aas
les
rol
sub
fiadds
mov
ror
add
cmp
movq
inc
popa
pop
aaa
aaa
mov
pop
fs
and
add
push
fildl
adc
push
mov
xchg
and
mov
push
jbe
xchg
add
adc
jl
cld
pop
lahf
push
inc
jge,pt
ficomps
push
fnstsw
push
xchg
sub
xor
mov
incb
ja
lock
xchg
cltd
lahf
ljmp
ficompl
in
fdivs
jnp
stos
mov
fs
push
pop
std
adc
add
arpl
inc
outsl
rorl
pop
iret
outsb
jmp
call
or
mov
dec
push
inc
xchg
in
test
aaa
cmpsb
clc
sbb
jo
adc
std
pop
popa
sbb
aam
inc
fisubrl
mov
pop
xorb
inc
push
cmc
mov
lahf
hlt
data16
adc
aas
dec
inc
push
ljmp
mov
push
out
inc
or
ds
adc
enter
fstpl
mov
jmp
sar
aad
mov
pusha
inc
repz
fildl
xchg
stos
inc
cmp
test
add
rcrl
aad
ljmp
arpl
mov
inc
lcall
mov
push
and
pusha
fsubr
test
or
pop
sbb
sub
nop
das
inc
cmpsl
inc
xlat
lret
xor
adc
sti
dec
xchg
pop
leave
adc
mov
movsb
jge
imul
push
lods
daa
es
fadds
jmp
rorb
insl
cwtl
sbb
lods
jno
test
cmp
and
outsl
pop
and
and
xchg
adc
sub
int3
call
roll
jge
rclb
icebp
inc
mov
arpl
je
test
and
jns
sti
js
push
sub
and
insl
adcb
sarb
loope
lret
aad
xor
mov
xor
pop
sub
dec
xchg
and
cld
add
push
lods
mov
imul
adc
repnz
cmp
cmpsl
out
or
push
add
hlt
out
in
lods
jg
mov
pop
pop
sub
or
or
dec
push
pop
inc
cmp
es
cmp
pop
sar
das
jne
pop
mov
rorb
sbb
add
cmp
negl
gs
push
add
addr16
iret
std
fdivrl
not
inc
out
xchg
data16
hlt
jb
loop
sti
sub
mov
push
lret
xchg
pop
pop
push
imul
and
push
daa
cmp
mov
ret
cmp
mov
out
pop
xchg
xchg
into
fwait
data16
dec
jl
in
aam
push
add
dec
and
push
and
xchg
out
push
pushf
mov
scas
imul
aam
inc
push
leave
shll
in
int3
sub
adc
arpl
fsts
movl
lods
adc
cmp
push
jle
xlat
pop
add
je
cmp
fdivp
sub
rolb
mov
jo
pop
lahf
imul
jnp
add
push
out
sub
adc
xchg
in
push
jmp
xchg
jmp
and
pop
mov
xchg
rorb
insl
notl
icebp
sub
mov
dec
inc
decb
dec
mov
add
enter
lea
sub
pop
or
gs
hlt
aam
test
push
in
pop
in
xchg
jmp
ficompl
xor
adc
ljmp
cmp
mov
xor
outsl
pop
and
shll
xchg
push
lret
jnp
mov
dec
fcoms
cmp
pop
xor
or
je
adc
aas
es
call
pop
in
mov
pmullw
mov
sub
xchg
hlt
das
jg
in
mov
inc
fisttpll
mov
pop
mul
pop
mov
clc
cmp
fwait
mov
mov
repnz
ljmp
jle
jge
mov
mov
loopne
sub
or
cmpsb
jp
pop
cltd
lret
cltd
or
ret
xchg
and
scas
mov
push
stos
fstpl
mov
push
fwait
and
aam
lcall
mov
or
xchg
insl
lahf
xchg
stc
pop
inc
lock
dec
pop
pop
xor
dec
and
jns
fs
jecxz
sub
push
jmp
xchg
imul
xlat
scas
ret
jecxz
and
sbb
out
pop
ficoms
sub
xor
mov
fbstp
cli
add
insb
stos
sub
mov
dec
pop
andb
enter
xchg
pusha
jecxz
pop
inc
in
in
fwait
sbbl
lret
popa
aad
cs
das
mov
xchg
add
push
outsl
test
cmpsb
inc
dec
sbb
ret
mov
repz
jbe
fs
push
mov
fwait
jp
addr16
mov
dec
imull
mov
sub
fsubl
mov
or
jmp
sbb
cmp
and
or
cld
and
rclb
out
clc
ss
inc
xor
mov
repnz
cli
xadd
inc
sbb
pusha
jg
std
and
rclb
lods
push
fnsave
loope
into
aaa
xchg
bound
fdivrl
pop
adc
lods
sub
pop
insb
mov
cmp
mov
xchg
xchg
fstpt
lock
data16
int3
loopne
mov
xor
xchg
not
lret
mov
push
scas
repz
or
add
das
xor
xor
fs
pop
test
ds
or
push
cmp
adc
fcom
test
push
sahf
or
xor
mov
jl
mov
mov
rcll
jecxz
dec
push
test
andb
jns
xchg
sub
gs
and
push
sbb
jl
pop
fdivrl
in
adc
dec
jl
call
mull
pop
mov
in
inc
pushf
dec
jle
push
add
leave
jle
mov
pushf
icebp
mov
adc
jb
cmp
mov
xchg
push
inc
daa
mov
sbb
sub
xchg
mov
pop
aad
arpl
sbb
inc
sub
sub
mov
add
lahf
jns
xor
xchg
xchg
jne
popaw
or
mov
inc
adc
icebp
ror
push
pop
movsl
rcll
lea
decl
mov
in
arpl
stos
lods
xor
lock
ffreep
pusha
clc
cmpsb
out
fs
mov
jmp
movsb
lods
dec
add
cwtl
push
pop
les
inc
jecxz
mov
andl
int
and
leave
add
mov
lret
das
lret
lahf
cmp
xor
mov
adc
and
divb
test
testl
sbb
mov
mov
push
mov
imul
adc
adc
mov
sub
push
cmp
pop
dec
push
mov
subl
ret
scas
stc
sbb
xchg
sbb
inc
pop
je
add
je
sti
int3
in
inc
jbe
mov
into
mov
adc
xchg
hlt
mov
test
xchg
sub
push
popa
cmp
aaa
push
int3
aaa
movsb
imul
call
cmpxchg
gs
pop
dec
sub
cmp
pop
jecxz
mov
sbb
xchg
dec
or
ret
mov
repz
push
add
inc
fisttps
insl
in
sarb
mov
loope
lret
popa
test
call
enter
stos
push
cwtl
sub
rcrl
scas
mov
fimuls
cld
out
inc
adc
mov
inc
push
dec
dec
pop
adc
into
cs
mov
mov
mov
mov
int
ja
sub
adc
inc
xor
mov
int3
and
xlat
pop
jecxz
adcb
arpl
movl
sub
lds
push
mov
add
movsl
inc
popf
add
xor
dec
pop
pop
pop
and
outsl
jecxz
mov
jle
mov
daa
push
lock
lea
jno
pop
sbb
sbb
call
daa
push
aas
add
leave
jno
test
inc
sbb
add
stos
and
rcrb
inc
add
cwtl
pusha
inc
fcomps
int
lods
cmp
inc
and
sbb
inc
mov
xchg
push
mov
int
scas
or
dec
dec
and
lret
pop
adc
rolb
in
mov
mov
jmp
faddl
outsb
xchg
mov
jl
orl
push
pop
or
xchg
outsb
pop
xor
nop
and
fildll
lret
xchg
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
nop
mov
scas
jmp
fwait
hlt
ret
inc
in
notb
sbb
xchg
int3
add
incb
nop
inc
sbb
mov
jecxz
sub
fwait
mov
sub
aad
cs
dec
cmp
rorb
sbb
in
ss
movsl
mov
dec
call
movsl
add
filds
mov
mov
inc
clc
inc
jp
inc
xchg
and
movl
mov
stos
cmp
lock
adc
call
in
stos
mov
ret
and
cmp
insb
stos
int
pusha
add
xor
pop
push
and
inc
jae
jo
into
shl
leave
jno
sbb
insb
lahf
pop
push
and
fadds
shlb
cwtl
xchg
and
mov
adc
ret
test
fisttpl
ja
xchg
scas
pop
sbb
repz
adc
and
call
paddusw
and
pop
out
leave
out
xor
xchg
cmpsb
movsb
mov
xorl
mov
jmp
movsb
mov
push
imul
or
or
sub
mov
les
clc
loopne
cmp
jl
push
ss
es
lret
int
sub
sbb
dec
pop
ljmp
fwait
mulb
adc
in
add
mov
repnz
jmp
aas
xor
ret
popf
xor
cli
fwait
pop
lods
lds
pushf
pushf
add
jbe
enter
and
test
or
out
add
insb
or
mov
into
cmpsb
adc
jmp
pop
xchg
xor
dec
xor
aaa
in
stos
pop
xchg
xor
lret
pop
jbe
sbb
push
filds
sbb
mov
les
xor
gs
inc
or
lods
mov
pusha
test
add
cmp
cmpsb
in
mov
add
andb
push
fwait
jnp
push
xchg
mov
xchg
repnz
and
daa
mov
xor
clc
fstl
sti
sbbl
push
inc
jnp
add
mov
movlps
mov
mov
mov
insl
and
shll
dec
out
rcl
sti
pop
nop
ljmp
jbe
mov
loopne
push
sbb
lea
sahf
inc
mov
fnstenv
lret
mov
ud0
lock
cmpsl
std
sti
mov
mov
adc
fdivrl
in
sub
xchg
pusha
out
add
xchg
es
jns
repnz
mov
mov
xor
jbe
cmp
aaa
stos
stos
insb
je
sbb
pop
cmpsl
in
cmp
xor
push
scas
repz
in
repnz
stos
inc
ss
leave
mov
xchg
adc
mov
xchg
rorb
jnp
cmp
imul
mov
aam
or
push
ss
mov
nop
push
call
jg
inc
out
sub
push
mov
arpl
jnp
xchg
sbb
push
push
inc
xchg
jl
sbb
aaa
xor
and
adc
xchg
mov
inc
data16
mov
and
xor
in
sbb
scas
pop
cmp
inc
jne
add
roll
mov
cmp
out
arpl
popf
idiv
loope
mov
stc
or
pop
inc
mov
jle
sbb
arpl
aad
pop
repnz
lods
sbb
xor
xchg
cmc
fdivrp
push
pop
aam
mov
sbb
movsb
xchg
popa
cwtl
sbb
int3
mov
mov
and
out
xor
int
shll
xchg
xor
loopne
aas
or
adc
outsb
xor
ficomps
cmpb
xchg
popf
cmp
push
xor
iret
rcrl
test
sarl
push
sbb
or
mov
dec
lods
mov
fbld
subb
or
xor
int3
js
jmp
nop
sub
jmp
andl
out
mov
pushf
dec
popf
aaa
insb
adc
xchg
inc
fmul
cmp
shlb
loopne
andb
mov
test
fldcw
sbb
sti
adc
mov
add
lahf
js
mov
cmc
sub
dec
xchg
xchg
aam
out
mov
lcall
test
shl
dec
dec
lcall
orl
cmc
pop
out
icebp
loop
xor
sbb
out
shrb
sbb
xchg
test
mov
and
cmp
xor
iret
sahf
jbe
cwtl
sub
stos
popa
jecxz
idiv
inc
add
sbb
add
orl
addb
cmp
xchg
push
lret
jns
test
xor
inc
bound
cmp
pop
jnp
movsb
jg
bound
pop
jg
les
sbb
mov
arpl
inc
outsb
xchg
jne
pushf
push
enter
and
inc
jecxz
sub
dec
jne
dec
push
push
mov
jle
xchg
cli
pushf
jg
or
inc
mov
pop
push
pop
outsb
lds
mov
sub
ljmp
xor
shll
xchg
je
mov
ror
xor
imul
and
jg
mov
cmp
addr16
icebp
inc
pop
add
push
fwait
cmp
fidivl
pop
push
xor
sub
jmp
push
shr
imul
pop
xchg
sub
dec
push
add
imul
insl
pop
ja
int
dec
movsl
jge
fisttpll
add
sub
sbb
in
rcr
dec
xor
sub
jge
ljmp
xchg
adc
jns
ret
sbb
and
shrl
pop
lahf
in
cmp
xor
jle
pop
mov
mov
cwtl
xor
inc
sub
push
lret
inc
jns
icebp
mov
es
mov
addb
push
xlat
xchg
cmp
test
sti
mov
daa
mov
imul
pusha
pushf
pop
jne
xchg
jecxz
rcrb
mov
inc
fcmovb
xchg
xor
fdivrl
sub
push
sbb
cli
jp
test
leave
xchg
dec
dec
aaa
sarb
ds
xor
jl
es
mov
adc
cmpsb
inc
repnz
lock
push
lcall
mov
cmp
mov
add
inc
bound
push
divl
hlt
divb
sbb
mov
test
mov
mov
cmp
mov
adc
push
adc
dec
jnp
dec
test
rcr
shll
lea
clc
sub
test
fwait
xchg
call
push
adc
pop
int3
dec
test
pusha
call
int3
lcall
enter
jno
loope
daa
aaa
jecxz
pop
inc
mov
mov
movsl
pop
sbbl
cli
pushf
mov
lods
adc
mov
int
mov
iret
pop
pop
sub
xor
or
mov
fisttps
cli
sbb
std
leave
lret
jmp
int
lods
cwtl
mov
sub
adc
insb
je
mov
pop
push
mov
mov
dec
lcall
xchg
ja
test
lods
push
mov
popa
addr16
cmp
xlat
push
push
mov
shrl
dec
inc
cmc
xor
jbe
add
mov
mov
out
pop
add
in
cmpsl
bound
pop
mov
cmp
dec
lcall
gs
fists
ljmp
int
xor
std
test
dec
sbb
outsl
sbb
rorb
imul
shr
fidivrl
xchg
sarl
inc
pop
gs
js
pop
shl
outsb
sti
cmp
pop
sub
lret
mov
sbb
and
stos
pop
or
sarb
test
enter
push
cld
mov
aas
fdivrl
sub
add
inc
mov
mov
xchg
jbe
cli
inc
push
cwtl
cmp
jle
icebp
cmpb
push
ja
xchg
xor
arpl
daa
and
iret
pop
mov
push
pop
mov
mov
dec
xchg
movsb
mov
fidivl
jmp
mov
push
mov
mov
pushf
add
mov
or
lret
mov
std
out
sti
xchg
mov
popf
stc
dec
les
xchg
mov
adc
rol
rcr
pushf
cmpsb
jl
frstor
ret
adc
clc
andl
nop
into
xchg
or
hlt
mov
xchg
lret
scas
repz
fcmovnu
test
pusha
mov
and
lahf
cmp
stos
rcr
adc
movsl
call
dec
js
in
cli
dec
cmp
and
jo
sbb
cmp
pop
es
xchg
inc
roll
outsb
jl
fmuls
cmp
push
mov
cltd
aaa
leave
rcr
jge
inc
pop
cmp
outsb
mov
mov
fs
repnz
xor
lcall
xchg
and
pusha
adc
mov
sbb
xchg
mov
mov
cmp
daa
xor
mov
or
dec
cwtl
loop
inc
mov
xchg
stos
fldl
in
iret
out
mov
jb
negb
and
hlt
xchg
sbb
mov
xchg
push
push
fmull
adc
xchg
lods
or
push
cmc
call
mov
dec
movsb
int3
fisttpll
dec
mov
gs
jo
repnz
stos
adc
cmp
cmpl
loop
out
adc
pop
add
cmpsl
xchg
push
push
testb
fdivs
test
fld
in
cmp
js
cld
adc
insb
jle
hlt
fwait
leave
imul
int3
sub
mov
mov
lret
ja
sbb
jmp
xlat
ljmp
mov
cmp
pop
push
or
arpl
xchg
out
adc
or
inc
and
push
fwait
andb
mulb
adc
imul
pop
out
adc
mov
push
pop
push
adc
dec
int
sub
rcrb
jae
out
mov
sarl
enter
xor
inc
jnp
mov
sub
clc
test
mov
mov
fsubrl
fdivrp
imul
mov
ljmp
fildll
sbb
dec
sbb
cmpsl
mov
les
jno
rcll
test
sub
jl
cmp
rcl
jno
lahf
mov
int
jnp
add
jmp
stos
ret
mov
xor
shll
int
lock
rcll
fcomp
cmpl
ds
scas
fsubs
inc
adc
int3
xor
mov
mov
fnstenv
cli
scas
shr
add
and
daa
cmpsb
mov
mov
andb
insl
fadds
data16
xor
mov
aaa
jp
jno
pop
cmc
dec
fs
inc
arpl
or
ja
scas
pusha
fwait
cs
push
or
dec
xchg
rcrl
cmpb
xchg
mov
inc
adc
out
cli
call
arpl
fwait
jmp
xor
lea
jbe
flds
pop
pop
add
mov
mov
lds
aaa
out
movsb
push
rorb
push
int
loopew
jae
popf
testb
out
add
lock
mov
ljmp
jmp
sbb
in
les
loopne
pusha
add
dec
fucomp
xchg
jae
jb
pop
cld
xchg
clc
popa
insl
sub
mov
scas
pop
pop
lds
jbe
or
ret
roll
rcrl
inc
fsubs
mov
cli
jl
mov
inc
lfs
out
sub
adc
test
xor
call
mov
pop
add
sub
negb
sub
sbb
out
enter
movsb
stos
fiaddl
adc
mov
mov
mov
mov
jg
dec
das
lods
lods
push
fstp
cmpsl
push
pop
bound
rorl
add
imul
mov
sbbb
movsl
cmpsl
fucomip
cmp
xchg
cs
popf
push
lea
or
pushf
test
hlt
test
test
xchg
and
js
outsb
fwait
adc
mov
lret
nop
or
shrl
bound
jbe
int
cmc
adc
gs
in
cmpsl
lods
es
je
jmp
sbb
mulb
add
pusha
ja
inc
or
cmp
sub
push
lea
aas
aad
loop
xlat
add
mov
sti
sub
push
sub
xchg
xor
int3
mov
mov
lret
mov
xor
lcall
push
mov
int
fnstcw
sub
lcall
xchg
insl
xchg
icebp
push
in
stc
fiadds
dec
xchg
push
push
xchg
inc
push
pop
bound
lock
sub
cli
stos
mov
jmp
mov
jnp
add
shll
call
mov
bound
pop
inc
movsl
test
xor
mov
adc
out
les
mov
sub
fcom
or
mov
pop
mov
mov
mov
inc
mov
retw
dec
call
sub
mov
in
pop
jmp
into
dec
mov
mov
clc
lahf
shrl
xchg
adc
es
inc
mov
imul
aad
adc
shrl
dec
sbb
jecxz
push
mov
or
cmp
or
and
sbb
and
jo
fidivl
adcb
cmpsb
pop
add
cmp
fimull
mov
ss
jae
jmp
movd
aam
push
jo
add
fmuls
jl
jbe
pop
or
ljmp
in
dec
out
sar
fsub
and
repnz
add
sub
push
sub
ss
ss
aas
stc
jl
shlb
cmc
jg
mov
mov
sti
lds
jns
inc
add
sub
dec
push
addr16
pop
mov
bound
mov
jle
sub
daa
and
lcall
loope
mov
cltd
cmp
leave
mov
sbb
pushf
imul
and
mov
xchg
inc
js
mov
fs
lea
in
lods
clc
roll
jge
mov
cld
xchg
cmpsl
jbe
movl
nop
aas
cld
lcall
orb
mov
fildl
or
cli
jnp
in
inc
mov
outsb
divl
and
aam
outsb
dec
jo
out
xchg
lret
pop
stos
dec
dec
mov
int
in
nop
sbb
cmp
pop
push
jns
mov
in
dec
push
ret
sti
xor
mov
imul
fcomi
outsb
into
sbb
pop
das
ret
mov
push
xchg
dec
cmc
into
add
push
out
xor
adc
push
sarl
testb
adc
push
test
addr16
cld
mov
add
ja
out
loop
shll
or
mov
mov
or
xchg
cmovge
mov
cmpsl
xor
ljmp
mov
call
fucomp
adc
iret
adc
push
das
dec
rcll
or
out
xchg
gs
scas
dec
sbb
das
or
jmp
imull
gs
jne
xor
cmp
lcall
shl
push
repnz
mov
insb
mov
jmp
dec
pop
cmpsb
cmp
mov
sub
or
je
outsl
inc
mov
sbb
push
add
or
jmp
xor
push
hlt
mov
sub
bound
leave
fisubrl
nop
je
inc
icebp
add
shrl
mov
push
mov
dec
hlt
into
sbb
pop
cmp
mov
dec
sbb
scas
pop
xchg
imul
in
fldl
aas
icebp
addr16
mov
jo
jmp
enter
leave
cmp
jmp
jo
jne
orb
outsb
cmp
xor
xchg
lcall
lods
xor
mov
adc
jb
xchg
push
push
out
repnz
aad
sbb
dec
mov
je
and
pop
fildl
out
lahf
xor
inc
sub
and
add
inc
xchg
js
mov
movb
shr
xor
imul
jecxz
pusha
popa
fdivl
arpl
jo
fistpl
cmp
orl
or
lret
aam
or
xchg
or
adc
sbb
sbb
pop
addb
jle
mov
aaa
fisubs
mov
incl
inc
and
stos
adc
add
push
fisttps
pusha
inc
adc
and
arpl
fisttps
xor
mov
scas
and
sub
mov
int3
fmuls
sbb
mov
daa
inc
pop
jnp
repz
mov
dec
cmp
daa
mov
dec
push
sub
mov
xorb
das
push
in
sub
dec
sub
push
and
dec
and
push
ficoms
pusha
icebp
mov
ret
xchg
out
dec
mov
test
jecxz
pop
push
lods
xchg
in
repnz
int3
jecxz
jbe
movsl
les
jecxz
mov
jae
iret
sbb
jo
fisttpll
dec
mov
pop
jbe
xor
aaa
fstpt
cltd
or
addr16
pop
xor
fistpl
jae
orb
mov
shlb
inc
or
cld
mov
int3
mov
je
push
aas
bound
push
jmp
xchg
jae
mov
pop
cmp
repz
sbb
dec
insb
ja
push
iret
fidivl
xchg
shl
mov
cltd
lods
lock
pop
mov
fcomps
sub
andl
cmp
push
dec
aas
inc
jno
xchg
mov
popf
and
das
in
mov
adc
inc
popa
in
or
xchg
je
dec
popa
pop
call
jmp
cmp
mov
cmpsl
mov
sub
leave
add
adc
call
in
add
fstp
mov
pop
lock
sub
inc
xchg
cmpsl
arpl
add
rorb
mov
repz
loopne
mov
and
imul
mov
repz
xchg
mov
pusha
jge
cmpsb
jnp
or
sbb
daa
insl
or
cltd
push
cltd
mov
out
adc
pushf
lods
jg
daa
push
les
mov
jl
popf
mov
push
shr
or
adc
test
mov
cmp
repz
inc
lds
jnp
and
imul
shll
movsb
ret
lea
xchg
inc
stos
aam
addr16
sbb
and
adc
sub
dec
adcl
jnp
push
js
push
dec
mov
aas
lock
pop
add
xchg
and
mov
pop
out
sahf
data16
pop
test
pop
lret
cli
andl
nop
push
fiadds
js
and
popl
inc
mov
mov
fnstsw
push
mov
mov
aam
mov
test
inc
cmp
mov
jbe
sbb
loopne
fsubs
jl
out
repnz
pusha
int
add
lods
daa
iret
sbbl
jbe
pop
ret
mov
subb
aam
in
cltd
scas
sub
mov
cld
mov
xchg
jmp
cmp
xchg
sahf
inc
test
mov
movl
pop
mov
into
imul
pop
and
sahf
mov
adc
jne,pn
and
es
fdivrs
pusha
lcall
insb
insl
mov
repnz
dec
fdivl
ds
xlat
push
add
adc
rorb
lret
mull
xchg
ja
sahf
sub
fstps
or
hlt
or
les
negl
aas
add
cli
jmp
inc
push
pop
fistpl
push
jl
test
insl
pop
ja
xchg
xchg
mov
popf
mov
sbb
xchg
test
pushf
mov
shrb
sbb
push
sbb
jl
mov
orb
roll
in
sbb
rdtsc
and
adc
add
fdivs
sbb
jmp
push
or
jne
inc
and
call
xchg
xchg
xchg
push
aad
es
mov
bound
inc
frstor
jns
jne
jmp
rcl
push
or
xchg
pop
shrl
fsubr
mov
cld
jbe
ret
outsl
int3
aas
dec
xchg
sub
mov
or
jp
mov
xor
xchg
data16
out
enter
test
fildl
jo
gs
call
fwait
dec
add
enter
decb
data16
adc
fistl
sbb
cmp
subl
cmc
ffreep
fiaddl
call
inc
cmpsb
inc
lret
int
jb
fdiv
stos
cmp
es
das
push
xor
pop
sbb
cwtl
mov
imul
xchg
add
add
mov
pushf
mov
insl
xor
mov
jbe
pop
leave
xchg
xlat
sbb
push
stc
adc
adc
out
pop
dec
movsb
and
iret
jns
sbb
js
lcall
aad
push
sarl
call
lahf
ret
add
rclb
lods
cmp
jg
and
pop
out
mov
mov
ffreep
cli
sbb
inc
flds
int3
pop
cmp
dec
xchg
aam
mov
pop
xor
lea
sub
insb
lock
call
cmp
mov
mov
sbb
out
ss
out
cld
add
popa
push
and
xchg
xchg
adc
dec
and
andb
fldenv
pop
dec
inc
popa
mov
cmc
repnz
inc
fsts
push
call
xchg
xchg
sub
jmp
out
js
mov
cmpsb
jle
push
jne
mov
and
xchg
sbb
push
sub
cmp
dec
sbb
cmp
std
or
dec
sub
es
mov
xchg
andl
mov
pusha
outsb
mov
jge
mov
sarl
das
ja
pop
mov
push
pop
shll
fiaddl
dec
out
xchg
out
adc
cmp
adc
sbb
stos
jl
jno
hlt
movsl
push
jne
pop
notb
cmp
sbb
mov
dec
mov
ljmp
xchg
int
xchg
mov
imul
mov
jl
jne
and
mov
mov
pop
adc
mov
lds
call
call
sub
push
sbb
cmp
mov
inc
jp
rolb
fstp
pop
lcall
dec
pop
pop
aas
int3
xchg
mov
daa
xchg
or
imul
stos
loop
out
push
lcall
mov
add
push
sbb
popa
add
subb
insb
cmp
push
outsl
push
inc
ds
mov
sahf
cmp
mov
fidivrs
pop
aam
and
rclb
dec
enter
scas
outsb
adc
fwait
rolb
cli
imul
ret
mov
inc
pusha
add
add
jbe
les
xor
mov
loope
iret
cmp
xlat
jge
inc
test
stc
xor
ret
mov
mov
pop
mov
pushf
out
ret
push
movsb
mov
fxch
mov
fidivrs
dec
or
xor
pop
in
hlt
cwtl
xor
sub
data16
adc
sub
mov
clc
push
fadds
mov
push
lods
hlt
sahf
popa
dec
pop
adc
shr
dec
jg
or
aas
ret
es
out
enter
cmpsb
add
add
pop
xlat
mov
movsl
xlat
pop
rclb
stos
ja
fs
sub
xor
fstpl
xor
push
push
cltd
mov
sub
adc
xor
popf
xor
js
aaa
fistps
xchg
sahf
filds
lret
js
lods
xchg
enter
cmp
imul
inc
mov
std
aaa
jns
dec
and
or
push
shlb
outsl
push
mov
jl
adc
movsb
lcall
jmp
daa
fs
in
xor
insl
pop
cmpsl
mov
fstl
lods
call
push
mov
or
fwait
mov
loopne
sub
repz
les
cmp
scas
sub
jmpw
ljmp
jl
sub
mov
sbb
das
rol
scas
in
repz
or
sub
and
or
fdivl
hlt
jl
sbb
cmp
or
mov
sbb
sbbb
sbb
mov
ret
jmp
nop
push
push
xchg
xchg
jecxz
xor
popf
mov
push
sbb
jns
les
and
inc
popa
mov
ja
and
inc
cmp
fnstsw
or
ffree
mov
aaa
pop
loope
mov
ret
in
sar
add
or
and
pop
mov
lahf
subl
movsl
aas
ret
sarb
inc
ret
inc
data16
mov
and
push
adc
fs
sub
mov
push
data16
fwait
jl
push
jns
jb
dec
or
cld
in
ss
stos
outsb
mov
xor
pop
fmull
repz
inc
mov
or
mov
add
in
ret
pop
faddl
daa
adc
jl
pop
sbb
rorb
mov
add
adc
push
jle
or
add
mov
lret
cmp
mov
mov
mov
outsl
inc
xchg
nop
lods
xor
mov
xchg
pop
xchg
stos
hlt
cmp
lea
xchg
mov
in
cmp
xor
mov
fsubs
fsubs
loope
mov
incl
push
or
xchg
sub
and
jmp
scas
cmc
popa
push
xchg
cli
vpxor
js
jno
ljmp
std
xor
adc
ja
jmp
and
mov
inc
and
jo
inc
ljmp
orl
pop
movsb
pop
shrb
fwait
stc
pop
jg
xchg
xor
fidivrl
push
leave
or
inc
stc
fwait
cs
jmp
ljmp
roll
pop
fstps
pop
shrl
push
rclb
popf
or
cli
pop
mov
incl
mov
out
pop
push
fnsave
fs
mov
mov
pop
push
dec
jle
xor
xchg
mov
adc
pop
repnz
sbb
cmp
mov
adc
scas
mov
sub
flds
stos
lds
dec
mov
hlt
test
cmp
rorb
stos
fadd
test
test
jp
mov
jmp
mov
lcall
mov
movups
je
adc
or
pop
js
xchg
sbb
push
or
ret
dec
push
adc
push
inc
popf
push
sub
push
lahf
pop
stos
lret
lcall
and
mov
test
scas
and
std
pushl
pop
test
push
lcall
adc
pop
insb
test
inc
push
fisttps
and
xor
sub
cmpsb
jge
dec
arpl
popf
or
pushf
jg
aas
loopne
rcl
sub
or
outsb
and
in
out
pop
mov
fstpt
xchg
and
or
add
dec
mov
pop
dec
loopne
add
mov
mov
outsl
and
push
scas
ds
adc
cmp
cvtpi2ps
in
inc
and
in
jp
lock
dec
jl
sbb
xchg
add
add
mov
mov
aad
inc
sub
push
pop
adc
mov
lcall
je
test
arpl
push
sbb
inc
dec
fstpl
insb
cmp
xlat
mov
std
xchg
sbb
mov
ret
or
push
sub
push
add
jle
cmp
add
adc
xchg
adc
inc
sbb
rcrl
add
scas
and
inc
sahf
xchg
scas
in
fldcw
scas
and
cmpsl
jp
inc
cmc
sub
subl
int3
shl
arpl
aaa
adc
je
adc
mov
cmpsl
add
xchg
cmp
jnp
shlb
arpl
pop
movsl
cltd
pop
pop
out
lahf
jbe
ret
lea
out
pop
icebp
movsl
xchg
popa
jno
or
push
jg
push
or
adc
xor
cmp
repz
push
sub
aaa
push
xchg
dec
mov
sbb
sar
dec
mov
adc
fmull
xor
jg
mov
sub
inc
xor
ret
in
out
xor
pop
mov
sbb
dec
leave
mov
in
das
mov
add
outsb
dec
adc
pop
sbb
mov
daa
sti
pop
aas
popf
mov
push
jmp
fs
std
mov
cli
xor
scas
inc
je
mov
popf
cmove
sbb
mov
mov
cmpl
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
and
push
push
sub
push
push
dec
jge
in
ficompl
jge
push
addr16
not
stos
mov
loopne
jp
stc
push
xchg
add
or
test
dec
jle
pop
pop
lds
sahf
add
movsb
and
lock
aaa
add
inc
jne,pt
stc
test
addr16
sahf
push
pop
repnz
loope
movb
nop
leave
popa
pusha
imul
popa
lods
push
loopne
add
dec
aas
sahf
or
push
push
rol
test
mov
cs
sub
pop
add
jne
stos
sub
fwait
stc
push
sahf
adc
or
sub
jno
adc
push
push
mov
add
rol
stos
aad
push
outsl
in
flds
je
pop
fcoms
push
sbb
jns
lds
shll
fs
lret
and
lret
imul
and
add
cmpsb
push
dec
popf
pop
cli
and
xchg
and
jg
dec
mov
mov
push
leave
call
int
testl
shrb
xlat
adc
cs
lret
or
aaa
sbb
pop
sti
lods
inc
outsb
shll
push
sti
push
push
mov
stos
insl
lret
cmc
orps
cmp
add
or
aaa
sbb
sbb
aas
subb
mov
adc
sbb
xchg
lock
jnp
xor
inc
push
stos
jnp
mov
cltd
sub
jne
into
lods
inc
testb
out
int3
xchg
aam
mov
mov
add
dec
push
push
rolb
imul
inc
mov
push
jb
ss
xchg
inc
das
xchg
push
jp
cmpsl
inc
lahf
mov
mov
dec
pop
add
add
and
mov
hlt
repz
aam
stos
inc
sub
fsubrs
aaa
push
nop
insb
ljmp
push
aaa
sbb
iret
decl
push
shl
outsl
add
mov
stc
sahf
dec
insl
inc
call
jg
adc
mov
pop
enter
inc
stos
aam
xlat
cwtl
pop
das
or
dec
jge
push
mov
iret
adc
push
adc
add
cmp
js
pop
in
out
rcl
sub
xor
xchg
cmp
scas
pop
scas
int3
mov
lcall
push
mov
mov
sub
jmp
xor
xchg
xchg
test
repz
sbb
pop
movsb
js
adc
mov
push
dec
into
cmpsb
dec
push
push
sbb
movsb
stos
dec
push
stos
imul
lret
jns
xchg
fstps
inc
pop
mov
dec
sub
clc
cmc
scas
stos
les
xorps
mov
or
sub
aad
mov
shrl
movsl
xlat
mov
jle
lods
push
dec
aaa
mov
sub
jb
jne
cmp
push
and
popf
pop
push
enter
mov
lcall
xchg
push
mov
push
push
sbb
dec
cmp
mov
mov
andb
push
jmp
sub
pop
pop
mov
inc
pop
movsb
pop
clc
mov
fstl
divb
orl
pop
mov
jl
add
xchg
sahf
lds
sbb
lods
xchg
cmp
fwait
iret
shlb
pushf
mov
push
bound
ficoml
imull
xor
shll
jmp
cs
nop
rcll
hlt
jb
inc
and
jns
les
out
enter
shlb
mov
xchg
jno
pop
xor
lcall
push
pop
inc
mov
and
adc
enter
mov
jo
mov
cli
rclb
cli
movsl
xchg
test
mov
xchg
and
mov
decl
test
add
lea
dec
jne
dec
hlt
xor
cwtl
pop
pushf
push
imul
jge
call
inc
mov
mov
pop
int3
dec
stos
mov
shlb
xor
mov
xchg
pop
sbb
arpl
test
sti
jg
inc
cli
pop
lcall
scas
dec
add
out
adc
fadds
adc
or
mull
mov
dec
out
xor
xchg
scas
lds
dec
div
out
mov
test
pop
movsb
bound
jb
cmp
data16
pop
or
sarb
fisubl
in
or
movsl
adc
aas
ds
scas
decl
sub
scas
xchg
add
cmp
xorb
ret
int3
adc
adc
mov
test
ficoms
dec
repnz
shrl
test
icebp
aam
inc
cmpsb
bound
outsl
in
aam
xchg
out
sahf
mov
out
dec
rcrb
ss
es
sub
shr
sub
das
dec
push
int3
ret
outsl
shrb
sarb
push
and
inc
stc
add
add
adcb
imul
xor
jb
or
in
cmpsb
push
adc
lea
lods
dec
push
dec
sbb
in
push
jnp
cmpl
ret
fldt
jo
test
adc
sbb
rolb
cmc
inc
sbbb
jl
pop
xchg
sbb
sarb
mov
in
aad
in
orb
sarb
push
jmp
cmpsl
dec
jmp
cmova
sbb
lods
xchg
aaa
jp
adc
xchg
push
mov
xor
ljmp
jb
inc
lods
jae
xchg
sbb
cmp
sub
xchg
test
sub
fisubs
scas
fucomip
pop
hlt
pop
mov
repz
jg
jmp
pop
push
enter
ret
mov
or
mov
push
fisttpll
shll
sbb
dec
stos
lods
out
test
sbb
popl
leave
cmp
xchg
pushf
jg
jl
call
dec
push
jns
mov
pusha
sarl
xchg
add
shlb
test
vsqrtsd
lods
in
sarb
mov
pop
mov
fwait
dec
pop
pop
movsb
fsubr
mov
cmpl
sub
jge
adc
imul
enter
pushf
outsb
push
cltd
push
mov
cmp
add
mov
or
adc
aad
gs
je
dec
mov
push
mov
add
mov
nop
incb
adc
ljmp
xchg
scas
testb
aad
cmpsb
or
mov
addr16
add
push
idivb
adc
out
pop
jecxz
mov
inc
push
dec
ss
mov
pop
jb
je
xor
and
add
xchg
mov
jno
addr16
xor
repz
sub
sbb
jae
outsb
faddl
call
xchg
ret
push
mov
xchg
inc
cmpsb
popf
cltd
mov
orl
pop
addr16
and
stos
xor
stc
sbb
mov
testl
jae
sbb
into
pop
and
or
mov
inc
jle
std
in
xchg
sub
pushf
fldl
mov
xlat
push
sahf
xchg
pop
aas
out
int
popa
mov
loop
fs
adc
cmpsl
adc
lcall
lock
shr
inc
add
movsb
insl
pop
push
or
movsl
and
mov
mov
fwait
cmpsl
push
inc
ljmp
ret
xor
push
js
sbb
jnp
mov
pop
loopne
mov
loopne
loopne
xchg
or
jb
push
mov
fdivrs
add
insb
inc
mov
mov
fs
and
xor
out
dec
imul
sbb
les
or
scas
push
stc
out
js
shlb
mov
test
stos
das
cmp
push
push
inc
push
inc
mov
cmp
repnz
lods
xchg
mov
xchg
fwait
jp
daa
sbb
ret
xlat
mov
inc
addr16
cli
cmpsb
popf
lea
rcrb
lods
inc
xlat
aas
push
push
leave
sub
icebp
je
add
pop
mov
push
jmp
push
mov
add
bound
dec
jae
fcomp
mov
fsubl
movsl
loopw
sub
outsb
in
mov
fadds
repz
fstps
adc
fists
mov
jns
pop
int
rep
gs
mov
aaa
cmpsb
pop
xor
int3
xchg
and
dec
sbb
sbb
xchg
sbb
inc
xor
xchg
je
shr
fwait
cltd
popf
rcrl
cli
push
mov
fisubrl
mov
mov
repz
test
xor
shll
scas
cwtl
push
orl
xchg
inc
mov
dec
dec
push
dec
out
shll
xchg
aas
xor
insb
or
add
xor
ret
imul
sbb
ljmp
daa
roll
jne
pop
bound
scas
xor
xor
out
imul
or
and
sub
in
out
and
jae
push
push
cmp
pop
loop
into
cmc
mov
adc
sbb
faddp
jmp
lods
int
push
fsts
and
xchg
pop
mov
mov
incl
scas
int3
cmpsl
jb
sub
xlat
xchg
lret
or
call
adc
fistps
cmp
jmp
ss
or
out
daa
mov
jns
imul
jl
xchg
sub
add
das
inc
sub
aam
lahf
xchg
push
int
ret
lock
pop
and
add
sarl
cmp
push
inc
add
jp
pop
push
jne
mov
push
sub
xchg
out
repz
push
and
lds
sbb
mov
cld
lock
fadd
pop
inc
in
ficoms
sub
aas
movsb
dec
sbb
dec
inc
mov
js
popf
mov
cmp
xchg
js
div
jmp
xor
or
shll
dec
sbb
jno
mov
into
aas
rorb
scas
outsb
sahf
stos
insl
jecxz
enter
repnz
rolb
sub
into
shl
das
in
adc
fisubrl
and
test
pushf
out
xlat
xchg
and
push
nop
mov
lret
les
push
xchg
sbb
xor
and
movsl
mov
test
inc
cmpb
lcall
lock
add
fisubrs
loope
mov
lahf
and
insb
aaa
adcl
xchg
cmc
fdivs
push
ss
pushf
addr16
push
add
in
dec
or
gs
xor
test
addr16
add
loopne
mov
mov
jno
nop
jle
repz
jmp
dec
push
lret
and
push
jae
jbe
aaa
push
cmp
cmp
aas
lret
lahf
arpl
in
and
test
push
ljmp
xchg
daa
push
pop
aad
lods
push
scas
mov
and
cmpsl
sbb
inc
sti
pop
ljmp
aas
in
hlt
jge
xchg
pop
popw
cmp
mov
mov
daa
rorb
mov
pop
movsl
idiv
xchg
nop
clc
sbb
jle
shlb
jo
or
xor
loope
cmp
pop
call
out
leave
push
xchg
fs
mov
mov
clc
test
pop
fstl
xchg
jg
in
test
dec
sahf
cmpsl
lcall
sbb
sbb
cltd
mov
jl
out
or
data16
xor
jne
pop
mov
push
ror
movsb
aaa
into
xchg
inc
push
shlb
jle
rorb
xchg
or
andl
cmp
pop
add
sbb
movsl
dec
in
pop
and
mov
scas
and
stos
jecxz
dec
movsb
push
popf
ret
sarl
fdiv
mov
and
or
out
mov
incb
pop
sbb
das
fcomi
xchg
lcall
xchg
vcvtdq2pd
mov
scas
inc
push
push
cld
loopne
in
mov
int
xlat
ret
loop
in
pop
nop
mov
mov
jg
scas
push
lods
sti
mov
sbb
movsl
hlt
xchg
test
pop
inc
inc
popa
popa
pop
andb
lods
xchg
mov
cmp
sar
xor
and
fnstsw
adc
repnz
fstl
loope
lock
aas
mov
popa
jae
or
xchg
sarb
push
jp
out
std
or
cld
outsl
sub
pop
test
add
add
rclb
jne
push
push
inc
insb
pop
inc
lret
dec
lcall
jl
xchg
adc
mov
dec
adc
jnp
std
push
bound
lds
add
jno
push
dec
test
jns
js
lret
ds
push
lcall
add
jnp
or
pop
jl
and
movsb
pop
mov
mov
out
xchg
in
xchg
jne
lcall
xchg
shrb
xchg
mov
ret
lea
mov
jno
pop
xor
cli
jbe
lret
or
xchg
push
cmpsl
jno
imul
aas
jg
test
iret
sbb
mov
repnz
shl
or
rcll
lock
stos
es
in
sbb
or
aad
stos
pop
insb
cmp
sbb
shll
lock
push
bound
push
mov
out
pop
inc
mov
jb
fcmove
add
fidivs
push
enter
push
add
jp
gs
mov
js
iret
sahf
fstpt
ficomps
lret
ret
cs
scas
retw
lret
jo
aam
cs
fistpll
hlt
in
jle
xchg
sub
pushf
loop
adc
out
cs
pop
adc
popf
cmpb
sub
push
xor
jae
mov
imul
iret
les
jae
fmulp
cmp
push
nop
xchg
add
mov
mov
pop
cmpsb
push
cmp
fbstp
repnz
jnp
mov
imul
daa
mov
test
scas
roll
sbb
ret
dec
in
out
adc
push
fsub
pop
in
xor
bound
mov
xor
ret
fstl
adcl
cmc
repz
sub
pop
xlat
push
push
pop
outsl
xor
adc
adcl
and
sbb
lock
xor
jecxz
jmp
xchg
mov
or
sub
stos
sub
arpl
std
clc
fisubrs
aaa
pop
inc
lods
into
sub
pop
stos
cmp
enter
mov
bound
lods
mov
je
pop
add
cwtl
lods
adc
jns
pop
data16
and
mov
sub
or
popa
in
daa
sbb
pop
rcll
push
das
shll
xor
pop
mov
mov
or
in
dec
push
and
add
shrl
adc
inc
mov
fistpll
in
je
insl
dec
nop
mov
and
scas
das
and
xchg
add
ss
xchg
iret
dec
pushf
in
addl
push
rcll
lret
fldt
inc
or
test
mov
js
or
js
jae
cmpl
pop
inc
jmp
icebp
or
push
dec
sbb
call
das
iret
js
mov
subb
js
inc
stos
add
adc
int
fwait
sub
dec
mov
sub
lcall
dec
xorl
js
or
push
fucom
push
adc
or
sub
fdivrs
stos
gs
mov
jae
pop
clc
fs
and
cmpsb
shrl
mov
pop
jnp
mov
test
adc
cs
cs
xor
cli
out
cmp
add
subl
leave
cmpsb
sub
xor
ficompl
lahf
lret
sbb
stc
pop
add
mov
int
xchg
jno
pop
loop
dec
mov
lret
inc
xlat
sub
data16
sbb
outsb
mov
cmp
ret
jae
xor
jle
aam
sbb
xorl
je
xorl
js
cmp
inc
push
inc
cltd
popf
push
pop
rorl
cmp
paddusw
gs
clc
or
cmpsl
repnz
jg
xor
pop
fs
push
dec
sbb
scas
ja
mov
add
xchg
jecxz
mov
cwtl
scas
movsb
bound
mov
xchg
insb
lock
cmp
mov
test
cwtl
xor
call
jno
fwait
and
std
enter
imul
stc
test
inc
scas
cmpsb
cmp
jo
and
out
and
pop
jo
sbb
cwtl
iret
mov
xchg
outsb
cmp
jl
mov
scas
mov
hlt
xor
cmp
jmp
mov
push
icebp
cmpsl
rcl
adc
inc
xchg
jmp
pop
sbb
int3
fdivs
sahf
mov
dec
xor
pop
lahf
pop
push
and
icebp
xlat
bound
cltd
imul
aad
dec
movsb
xchg
cwtl
dec
adc
call
out
mov
add
nop
xchg
fs
jge
pop
mov
or
pop
orb
aas
xor
nop
sbb
ds
test
ficoms
out
rorb
push
add
addl
ficoml
adc
mov
shr
int
jle
in
pop
cmp
mov
inc
scas
cld
pop
sub
sbb
lahf
xchg
lahf
test
ficomps
inc
enter
insl
cltd
in
cld
notl
pusha
pop
pushf
adc
cmp
xor
data16
dec
sub
xorl
dec
mov
cmp
lods
dec
popa
cltd
mov
ss
mov
jb
ficoml
sub
ja
inc
mov
aad
in
icebp
sub
mov
xor
push
adc
jae,pn
lret
les
xor
push
call
mov
xor
sub
loope
mov
xor
lods
mov
idivb
lret
cmp
push
test
movsl
and
xor
sub
add
cmp
addr16
roll
dec
sub
cwtl
mov
sbb
test
or
imul
repz
std
addr16
cmp
jo
out
mov
scas
lret
dec
and
ret
pop
mov
adc
jmp
icebp
sbb
and
mov
push
cwtl
xor
inc
xchg
cmp
test
pop
dec
and
fisubs
mov
and
jns
pop
dec
iret
cs
sbb
stos
cmp
subb
test
pop
xlat
pop
push
sbb
push
cmpsb
jmp
push
fcomps
push
mov
xchg
cmp
and
xor
xchg
out
fxch
in
lds
push
jno
sbb
popa
mov
jg
scas
scas
push
xor
inc
push
insl
clc
jge
dec
xlat
jecxz
lret
mov
add
cs
fists
mov
or
pop
xlat
add
mov
ficoml
jnp
fucomip
fucomi
notl
push
mov
push
xor
sbb
mov
ljmp
fwait
in
xchg
adc
outsb
js
stos
xchg
cmp
dec
jno
cmp
xchg
outsl
fdivr
xor
dec
orl
mov
and
fisttpl
mov
cmpl
mov
sub
jns
xchg
insl
loopne
push
ret
sub
and
adc
push
inc
ffreep
mov
xchg
push
xchg
hlt
loope
mov
gs
mov
subb
push
cmp
cmpsb
cltd
and
imul
fucomip
aas
xor
inc
sub
inc
lret
jo
inc
pop
pop
popa
xchg
jp
lock
cmp
cs
xchg
insl
aaa
vmptrld
or
push
add
mov
xchg
adc
add
push
jp
sbb
stos
pop
fwait
inc
xchg
mov
idivb
inc
test
loopne
ficomps
out
sub
arpl
xor
mov
in
push
and
repz
leave
pushf
test
in
jl
cmp
add
call
jns
and
call
les
mov
mov
repz
jp
mov
xor
std
hlt
push
mov
jae
stos
int3
cmc
adc
rolb
bound
decl
pop
sub
mov
iret
xor
or
sti
adc
sti
js
cmpsb
stc
adc
shrb
aaa
movsb
mov
mov
insl
rolb
fs
movsb
jg,pn
in
xchg
jg
stos
jmp
jl
cmp
arpl
cmp
std
ljmp
dec
cmp
andl
int3
shrb
xor
jnp
iret
stos
inc
jae
cld
or
test
stos
push
lahf
or
out
mov
push
adc
xchg
lahf
dec
into
pop
mov
inc
pop
inc
and
rclb
pusha
pushf
in
lret
icebp
mov
ret
clc
push
rcrb
imul
int3
test
dec
icebp
dec
mov
icebp
in
insb
mov
pop
filds
jae
mov
fidivrl
sub
cli
andl
es
vmwrite
sbb
add
movl
ror
nopl
xchg
mov
mov
sbb
jno
pushf
xor
ljmp
dec
cmp
xor
popf
inc
out
dec
jge
inc
adc
jo
sarl
inc
orb
jbe
mov
pop
nop
sbb
sti
xchg
ret
repnz
testl
ja
adc
xchg
enter
je
push
movsl
repz
ret
sub
xchg
mov
shrl
pop
cmp
jp
sub
push
inc
test
nopl
dec
xor
fsubr
ret
cmp
xchg
jge
push
dec
xchg
out
dec
iret
out
aas
xor
push
pop
in
js
out
lret
aad
sub
mov
inc
bound
lock
mov
outsl
inc
out
jg
pushf
sub
lock
push
push
xchg
jecxz
cmp
lret
aaa
add
addr16
hlt
out
jp
je
mov
lret
sbb
xchg
repnz
cli
aaa
loop
js
mov
sbbl
loopne
insb
pushf
fcoml
jb
loop
pop
in
jmp
jne
out
mov
sbb
imul
je
jecxz
sub
into
pusha
clc
mov
int
or
xchg
addr16
push
shlb
leave
mov
inc
bound
pop
enter
xor
orb
sub
push
pop
pusha
lock
ja
and
and
lds
push
imul
cmp
lods
push
fsub
pop
into
pop
add
out
js
enter
popf
in
les
orb
insb
ja
pusha
arpl
pushf
xorb
js
lods
adc
push
cmpsl
mov
inc
sbb
int
pop
insb
rclb
negl
sbb
jae
rorl
sahf
test
xchg
push
int
outsb
pop
mov
mov
mov
lock
pop
mov
mov
movsl
cmp
div
fucomi
push
imul
aas
jecxz
push
jp
mov
adc
push
ss
fucomp
adc
or
push
mov
push
fdivs
jo
and
xchg
ljmp
cmpsb
mov
aas
mov
fs
enter
mov
xor
repnz
push
aad
aaa
inc
jmp
mov
and
push
hlt
xchg
jnp
mov
mov
and
call
xor
pop
shr
mov
adcb
pop
mov
add
lods
sarb
dec
or
test
mov
xchg
leave
std
std
xchg
sbb
add
std
sub
dec
add
sysret
or
sbb
push
gs
test
cmp
pop
cmpsb
xor
adc
pop
fstpt
jno
push
mov
xchg
inc
outsb
mov
push
loopne
mov
fisubrl
push
and
sub
dec
sbb
fstps
cmp
pop
stos
dec
loope
rorb
push
gs
push
lods
or
pop
mov
pushf
jbe
shlb
hlt
cltd
sbb
cmp
mov
cli
dec
imul
fs
nop
jae
hlt
fstpt
mov
shlb
add
outsb
out
mov
pushf
jecxz
cmp
js
jb
orl
mov
xchg
popf
push
or
push
mov
mov
mov
fnstcw
call
enter
mov
orl
pushf
and
xchg
nop
sbb
je
lods
add
int
mov
push
sarb
push
mov
mov
test
mov
icebp
pop
add
cmpsb
sbb
movsl
mov
mov
push
adc
mov
or
and
add
ljmp
xlat
mov
aam
nop
lods
adc
inc
stc
sub
cmp
mov
iret
dec
clc
sbb
out
mov
shr
xchg
and
pop
and
xor
mov
out
repz
jae
cs
insb
adc
jge
mov
fnstsw
je,pt
push
adc
addl
test
hlt
dec
xor
dec
sahf
out
sub
ds
pop
pop
rolb
ss
dec
inc
int
xchg
int3
andb
pop
xchg
adc
push
sti
cmp
and
dec
mov
and
cmp
out
shrl
bound
repnz
icebp
sbb
jg
test
test
mov
or
jg
enter
bnd
stos
pushf
xor
sbb
aaa
and
lods
in
data16
in
mov
and
push
addr16
mov
dec
outsl
inc
jmp
dec
rcll
scas
sbb
cld
inc
or
clc
add
mov
jp
jo
push
add
bnd
ljmp
xchg
inc
shll
enter
jno
aaa
adc
mov
repnz
jge
daa
push
mov
repnz
xchg
repnz
sub
jge
push
divl
enter
sbb
test
inc
sbb
ljmp
ljmp
ljmp
mov
mov
fisubs
xchg
rcr
and
jle
cld
popf
je
sbb
fimull
push
leave
and
inc
rcrb
jbe
jo
pop
cmp
adc
dec
ds
add
divl
mov
adc
iret
mov
mov
jnp
lahf
mov
jbe
xchg
test
dec
xchg
mov
movq
or
mov
or
ret
xor
inc
in
mov
call
mov
mov
cmpsb
mov
insb
mov
fs
mov
pop
lods
jne
jb
test
in
xchg
cmp
jbe
mov
lods
fwait
je
mov
push
mov
in
sub
and
jmp
fmuls
nop
push
push
pop
xlat
mov
mov
sub
push
sbb
push
stc
inc
sbb
sub
push
out
shll
scas
xor
shll
xchg
pop
loope
stos
jl
sbb
sub
scas
call
cld
iret
fisttpl
stos
cmp
icebp
push
xchg
aas
clc
xor
sbb
sbb
xchg
pusha
hlt
ljmp
call
mov
mov
inc
and
test
xlat
fwait
sti
or
sub
inc
dec
push
test
jnp
sarb
fcompl
fs
insb
jg
movsl
xchg
lds
dec
cmp
inc
mov
xchg
popa
sbb
mov
jle
rorl
hlt
xchg
inc
xchg
cltd
xchg
repnz
pop
lret
inc
and
push
in
xchg
cmpsb
in
push
cmp
xchg
aaa
movsl
mov
dec
into
ror
fsubl
sbbb
mov
and
dec
xchg
sub
jecxz
ror
mov
cwtl
das
xchg
pop
shrb
mov
fisttpll
fs
dec
je
hlt
jecxz
lahf
or
xor
and
jns
inc
int
pop
lret
mov
inc
sarl
inc
jb
loopne
sar
js
mov
or
jle
mulps
repz
push
mov
jnp
xchg
daa
adc
inc
nop
in
mov
sbb
sbb
imul
notl
sbb
js,pn
mov
mov
ljmp
pop
dec
rorl
cmpsl
fbld
dec
in
xchg
movsl
lahf
mov
jbe
shufps
out
gs
sub
push
cwtl
in
ds
test
xchg
popa
push
push
dec
sbb
push
leave
ja
cwtl
lahf
mov
cwtl
pusha
mov
or
push
jge
and
pop
imul
and
call
pop
cld
jge
enter
mov
fcompl
or
sbb
dec
sti
jge
sbb
xor
sub
push
push
pop
iret
push
jmp
or
iret
pop
mov
adc
xchg
in
push
pop
ret
sti
push
push
out
sbb
mov
rorl
mov
sub
cmc
fcmovne
mov
mov
adc
popa
imul
or
bound
mov
out
gs
ss
mov
push
shll
lret
pop
mov
cltd
pushf
fldcw
xor
jecxz
mov
dec
call
push
das
dec
sbb
adc
out
xchg
ror
test
out
cmpsb
mov
mov
add
fwait
mov
push
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
fcomi
mov
or
push
push
loopne
ret
adc
mulb
imul
xchg
mov
pop
push
stos
mov
das
test
fistpll
scas
push
daa
or
adc
cmp
xchg
jl
dec
xchg
call
sbb
ret
xor
jecxz
data16
cmp
gs
mov
jb
hlt
rcl
add
xchg
in
push
xor
scas
cld
filds
push
into
dec
sub
les
mov
adc
out
lock
shrb
bound
sahf
xor
sub
loope
or
push
dec
pop
gs
cwtl
mov
std
leave
sahf
cli
mov
mov
fidivrs
mov
xchg
push
xchg
adc
cmpsb
loopne
dec
adc
inc
repnz
sbb
outsb
mov
adc
mov
add
pop
ss
xor
inc
movsl
jl
and
lds
mov
or
pusha
int3
fiaddl
loopne
push
pop
in
cmp
xor
loop
xor
add
test
daa
add
or
std
aaa
mov
faddl
scas
sbb
or
and
movsb
lds
lret
dec
es
fisttpl
push
dec
inc
movsl
xchg
xchg
aaa
in
lea
inc
notb
dec
in
enter
nop
loope
pop
mov
ss
pop
leave
xchg
adc
insb
mov
lret
cmc
sbb
iret
xorl
rcrb
ror
inc
clc
pop
xchg
cltd
adc
lret
insl
mov
je
or
xchg
and
adc
lods
aad
add
push
popf
cwtl
ret
dec
pop
add
loop
in
dec
jmp
sbb
sbb
sbb
scas
jle
aas
in
loop
jns
adc
sub
mov
inc
das
xchg
mov
cmpl
cltd
pop
sbb
loope
pop
dec
fidivs
xor
daa
mov
add
fwait
sub
outsl
cld
shl
pop
lods
mov
xchg
pop
sub
inc
xor
repnz
and
or
int
rclb
inc
pop
mov
aaa
loopne
inc
xchg
pop
jge
xor
fwait
mov
push
dec
lahf
insl
pop
push
repnz
mov
mov
xchg
cmp
movsl
sbb
jge
mov
jb
fdivrs
sub
adc
mov
mov
sbb
and
dec
outsl
push
mov
add
stc
push
and
fimull
lds
enter
jl
mov
out
pop
mov
adc
mov
sbb
sbb
cwtl
pmaxub
nop
pop
inc
lret
pop
mov
in
loopne
clc
in
jge
fmull
ror
scas
cs
jns
cmp
sub
std
icebp
mov
adc
xor
xchg
js
push
inc
stos
cmp
pop
xor
jnp
or
mov
sahf
in
movsl
jmp
aam
out
and
movsl
les
pusha
pop
pop
and
icebp
lds
sti
and
ret
mov
nop
push
out
xchg
cmc
sbb
data16
ljmp
sub
fmuls
mov
sub
mov
mov
adc
pop
push
xchg
xchg
xchg
and
clc
and
cmc
clc
mov
mov
into
inc
lds
je
mov
jl
dec
outsb
xchg
pusha
mov
jne
aaa
sti
cmp
mov
shll
adc
ret
hlt
mov
aas
cmpsl
pop
js
xchg
movsb
xor
lret
mov
rorl
cs
adc
dec
sti
mov
add
in
inc
sahf
sbb
add
cmp
dec
pop
mov
daa
sub
mov
add
add
jg
mov
nop
pop
adc
or
es
mov
adc
sub
cmpsb
sarl
mov
mov
push
lahf
jp
lock
popl
paddb
adc
mov
push
adc
lret
xchg
cltd
mov
jmp
insl
fidivs
cmp
sbb
hlt
dec
es
sar
enter
loope
rol
in
aad
pop
pop
aas
cmpsb
dec
push
dec
mov
aas
fs
xchg
dec
pushl
ds
les
hlt
or
jp
aad
cmpsl
mov
pop
mov
mov
imul
aad
icebp
lcall
pop
sbb
push
xchg
out
jg
into
or
clc
scas
xchg
lods
int
sarl
and
or
test
cld
push
fldcw
mov
call
movsb
insl
call
and
jmp
fstpl
fldt
inc
pop
push
mov
mov
and
jns
dec
dec
inc
imul
dec
clc
and
adc
or
adc
dec
pushf
sbb
lods
aad
xor
jl
dec
cmp
pop
xor
test
pop
add
enter
pop
jmp
inc
xorl
mov
out
test
mov
mov
dec
bound
sahf
jnp
outsl
mov
add
mov
ss
mov
std
es
stc
push
insb
insl
andl
lock
lods
pop
insb
daa
sub
mov
push
push
and
popf
mov
sbb
imul
sub
in
lods
add
lods
xor
int3
adc
push
xor
mov
ret
adc
stos
mov
mov
push
mov
ja
repnz
js
out
dec
test
adc
or
outsb
movsb
xor
mov
sbb
inc
and
sub
jmp
jg
push
jg
lods
cld
icebp
fimull
sbb
out
rclb
xchg
imul
call
pop
lahf
scas
in
sub
lods
xchg
pop
in
adc
mov
ret
pop
les
xor
or
cmp
or
or
mov
cmpsb
cmpsl
pop
pop
mov
or
inc
fs
cmp
mov
pop
and
push
jge
xchg
jl
fcoms
fsts
jge
decb
popf
js
pop
mov
js
pop
aad
lahf
in
movsl
sbb
mov
ficomps
push
xor
icebp
je
test
cld
adc
mov
xor
out
and
cli
mov
xor
outsl
fs
std
pop
push
loope
aam
mov
pop
ret
outsl
stos
iret
fwait
movsl
mov
rcrl
cmpsl
jmp
mov
test
mov
aas
or
std
sarl
dec
popa
stos
mov
mov
mov
adc
movups
cwtl
add
and
xlat
push
ja
rcrb
sub
xchg
ret
xor
mov
mov
mov
cmp
cld
cmp
mov
cmpsb
xor
mov
xchg
cmp
mov
es
ds
or
hlt
pop
addr16
test
or
insl
cmp
test
out
add
neg
jmp
push
fstpt
and
xchg
cwtl
aam
mov
lret
push
loopne
mov
cmp
cmp
inc
lcall
daa
es
negl
mov
lahf
sbb
icebp
mov
mov
inc
push
pusha
jge
idivb
shl
fsubrs
icebp
int3
lock
out
gs
jbe
xorb
adc
cwtl
add
dec
cltd
xlat
fucomip
sti
cmpsl
inc
cmpsl
and
lret
orl
movsb
pop
push
insl
mov
int3
push
lahf
or
js
fwait
mov
stc
inc
add
mov
bound
pop
and
roll
cwtl
jecxz
pusha
cmpb
xor
lret
fdivs
mov
outsl
inc
cltd
in
dec
sbb
aam
sub
stos
inc
sbb
popf
int
cwtl
adc
jb
mov
shl
mov
aad
jl
or
daa
cmp
imul
mov
mov
jle
insb
mov
add
adc
shl
sub
test
mov
jb
sub
xchg
jb
sbb
lret
clc
stos
ficoms
ret
sbb
cmp
sti
fildl
daa
call
data16
pop
or
inc
xor
aas
sahf
jg
outsb
adc
mov
inc
cltd
and
mov
inc
cwtl
inc
or
xchg
les
cmp
sti
adc
pop
es
jns
clc
mov
pop
add
das
dec
fists
fistl
mov
push
mov
andb
or
inc
add
hlt
push
push
ret
or
cmpsb
leave
popf
addr16
xor
fwait
push
mov
sti
shlb
jge
call
xor
sbb
imulb
mov
das
clc
sub
sbbb
fstl
mov
subl
jbe
fisttps
imul
push
pushf
adc
les
int3
pop
xchg
subb
hlt
jge
push
test
repz
push
fildll
call
jnp
xlat
dec
ljmp
insb
push
add
dec
addl
and
iret
jne
insl
and
stos
xchg
inc
mov
insb
ret
outsb
jmp
cmp
xchg
jns
push
stos
mov
sub
int
shrb
add
call
fwait
in
cltd
mov
mov
pop
inc
inc
clc
rclb
lods
push
add
test
sub
pop
ss
and
adc
sbb
cmp
mov
push
sbb
mov
ficompl
xor
es
push
dec
or
aam
lods
or
pop
mov
repnz
dec
cmp
int3
mov
aad
js
and
sahf
scas
data16
iret
xchg
xlat
xor
cmp
sub
and
andb
jp
fidivrs
mov
scas
ret
ss
cmp
or
sarl
push
fldt
je
stc
or
inc
xchg
cltd
mov
mov
add
mov
jmp
pop
inc
jp
pop
jp
xor
fdivs
mulb
cmp
pop
in
mov
mov
inc
out
add
or
pop
add
xor
cmp
mov
das
sbb
or
hlt
pop
push
cmp
mov
push
lods
sbb
xorl
sub
cmp
cmp
sub
aaa
ret
iret
cmc
dec
cmp
mov
mov
rclb
ficomps
repnz
sti
out
or
popa
add
or
mov
loop
xchg
push
rolb
mov
dec
ficoml
fxch
push
or
nop
inc
subb
imul
sbb
scas
std
nop
imul
iret
add
xchg
orb
mov
cld
cltd
adc
stc
fldcw
sub
cmp
imul
sub
push
lods
popf
adc
sbb
push
rcrb
inc
cwtd
hlt
inc
rorl
or
imul
js
test
iret
jmp
pop
aaa
mov
mov
cmpsb
leave
mov
sub
pop
pop
stc
lret
mov
sub
divb
sbb
mov
daa
sbb
pop
mov
icebp
sub
push
sti
mov
xor
int3
push
inc
mov
in
bound
mov
cmp
xchg
lret
jle
movsl
inc
pop
subl
push
stos
xchg
stc
loope
xchg
push
outsb
roll
mov
jne
push
add
mov
mov
mov
sub
popf
mov
cmc
gs
ret
popf
inc
je
pop
xor
pop
sub
pop
push
jb
xchg
cmp
mov
lds
cmpsl
dec
add
mov
lods
xchg
adc
add
aaa
andb
jnp
push
xor
ffree
sahf
or
icebp
sub
xor
sbb
push
pop
ficoms
leave
pop
into
xor
loope
dec
or
insb
das
xchg
xor
into
xchg
or
out
mov
jns
test
xchg
cli
movsb
adc
mov
ret
data16
imul
inc
loopne
dec
mov
or
or
popa
sub
insb
dec
pushf
push
xchg
pop
mov
jmp
mov
or
jl
or
int3
mov
gs
sub
insb
or
or
int
mulb
out
xchg
jp
test
fcmovnbe
fcoml
pop
sub
lret
dec
jmp
mov
shl
and
jg
push
outsl
fnsave
in
xchg
in
repz
jecxz
clc
movsb
jo
loop
hlt
pop
in
pop
sbb
cvttps2pi
cmc
or
imul
in
sub
shrl
cmpsb
scas
in
shl
pop
add
sub
and
jmp
fmuls
sbb
movsl
std
das
cld
cltd
mov
call
mov
imul
sbb
add
cs
xor
fs
push
ffree
mov
outsb
inc
push
push
ljmp
add
mov
dec
fistpl
lock
stos
pop
ljmp
mov
test
andl
xchg
pop
scas
pop
pop
add
sbb
mov
cmp
add
mov
sub
ret
mov
imul
xchg
vunpckhps
xchg
push
sbb
arpl
out
fmull
xor
fsubl
std
sbb
sub
push
fimull
or
aaa
icebp
mov
nop
mov
sub
cmc
sbb
mov
cmp
cmp
mov
sub
mov
in
adcl
mov
pop
subl
adc
sub
cld
outsl
sti
fstps
add
lahf
nop
sbb
test
cltd
pop
cmp
je
aam
jecxz
push
in
xchg
aam
adc
jnp
xchg
mov
test
aas
fdivs
hlt
and
jb
ja
and
adc
or
pop
add
push
push
enter
mov
lods
std
inc
push
push
mov
sahf
inc
or
aas
test
jle
mov
bnd
pop
out
test
jp
lret
loopne
jp
add
sub
inc
sub
pop
test
dec
cwtl
imul
pusha
fbld
mov
ret
mov
imul
sbb
int
adc
cmp
adc
cwtl
sbb
ret
lret
xor
adc
clc
lcall
ror
pop
aam
or
sbb
pop
mov
or
stos
mov
dec
cwtl
xor
push
mov
rcl
mov
loop
or
out
test
inc
fnstenv
mov
or
push
mov
xchg
mov
mov
stos
movsb
and
push
out
ds
push
js
cmp
inc
test
idivb
sbb
sub
inc
inc
ret
push
dec
je
dec
pop
mov
mov
out
out
xor
scas
push
data16
aas
sbb
dec
rorb
jp
test
les
lock
or
cld
mov
ja
inc
lock
bound
ds
std
shrl
jg
or
adc
insl
and
test
inc
pop
ja
lock
out
rclb
insl
ja
out
pop
clc
mov
pop
mov
or
dec
mov
aad
shrd
add
jecxz
or
lcall
xor
xchg
add
fsubr
mov
shlb
flds
lahf
ss
inc
sub
mov
cld
push
xor
or
icebp
pushf
popa
xchg
addr16
dec
aas
adc
mov
sbb
mov
mov
dec
lcall
repz
xchg
pop
sbbb
dec
push
in
iret
xchg
sbb
pop
fdivrl
clc
sbb
imul
adc
dec
insb
push
data16
or
dec
pop
sbb
mov
ret
cld
cmpsb
cmp
sbb
pushf
mov
out
lahf
fbld
push
mov
jmp
dec
xchg
mov
out
pop
pushf
push
add
cmpsl
aaa
outsb
mov
lods
arpl
xchg
fwait
stc
push
aad
or
cmp
lea
jns
cmp
dec
add
sbb
adc
sub
ljmp
add
push
das
xor
push
jp
dec
xor
and
mov
in
in
dec
lcall
push
stos
andl
ror
iret
xor
push
aad
adc
nop
fwait
inc
add
lea
jmp
inc
out
push
dec
cmpsb
push
sub
pop
outsb
mov
stc
out
adc
imul
sub
fidivl
sbb
jl
inc
jbe
cli
iret
repnz
loop
add
movsl
push
adcl
popa
out
or
jns
xor
and
sti
arpl
pop
xor
or
daa
loopne
stos
sub
or
sbb
scas
out
xchg
cmp
push
into
and
mov
fcompl
lret
add
mov
jb
push
clc
push
jl
stc
or
out
xchg
ja
ljmp
add
add
adc
push
lcall
add
daa
xchg
sub
jb
das
in
enter
das
dec
inc
push
inc
inc
sub
add
mov
xchg
cli
or
mov
mov
cmp
add
addl
loope
push
mov
loope
mov
repz
push
rcr
jno
xor
ret
mov
cmp
inc
pusha
push
xor
or
jnp
xor
xchg
repz
fldcw
aas
dec
xchg
popa
push
dec
push
stc
out
push
leave
push
paddb
add
mov
insb
gs
mov
nop
sarl
aad
mov
xchg
out
rorl
shl
inc
adc
jae
movsl
je
inc
adc
cmp
rorb
push
aas
jne
ret
pop
sbb
xchg
movsb
push
test
mov
hlt
push
inc
mov
hlt
insb
add
bound
lods
mov
aas
cmp
pop
sbb
cmp
xor
movl
js
cmp
inc
sbb
push
jnp
and
lret
add
les
loop
lods
and
pop
ljmp
les
mov
pop
sbb
and
dec
ss
mov
aas
xchg
xor
cmp
push
mov
and
xchg
and
jbe
mov
in
mov
stos
rorb
loopne
push
mov
roll
mov
mov
mov
or
in
arpl
call
and
insb
push
mov
ds
jnp
pop
test
push
xchg
mov
fxch
and
cmp
packuswb
jo
ret
int3
insb
lcall
fisttpll
pop
bound
scas
push
sbb
pop
mov
jmp
shrb
arpl
adc
in
and
inc
pop
shrl
mov
aad
adc
scas
cwtl
fwait
dec
sti
popa
or
shrb
mov
sub
cmp
jge
sbb
and
dec
repnz
iret
xor
fldt
sbb
xchg
sub
leave
pop
fstp
push
xchg
xchg
test
fs
pop
mov
movsl
mov
lock
lahf
stos
sub
cmp
jmp
je
xor
xchg
mov
and
enter
ret
xchg
xor
adc
or
xchg
mov
and
add
mov
sbb
hlt
out
add
push
pop
repz
xchg
pop
mov
aam
pop
in
lods
mov
daa
mov
gs
xchg
mov
je
ja
scas
std
sub
fidivl
rol
fucom
imul
repz
mov
test
mov
das
lock
mov
jmp
sahf
inc
lret
xor
je
xchg
jecxz
stos
into
adc
arpl
dec
push
shrl
mov
or
mov
std
iret
sub
iret
icebp
pop
les
inc
cmp
sahf
int3
fcoml
fisubl
xchg
xor
into
xor
or
cmp
clc
xchg
cli
or
xor
mov
pop
cmp
addr16
sbb
pushf
in
cld
cmp
sahf
cmpsl
call
loope
movsb
outsb
loop
shll
rcll
jecxz
mov
and
jae
cmp
xchg
ret
loop
inc
ss
xchg
push
push
sbb
data16
aaa
fildll
aaa
int
fidivl
cmp
jp
lods
lret
fwait
inc
std
fwait
jo
dec
dec
aas
pop
xor
dec
outsb
push
cmpsl
mov
bound
fcmove
pop
xor
arpl
and
xor
in
xchg
sbbb
jmp
clc
or
and
shl
mov
sub
jecxz
mov
insl
dec
jae
jp
xchg
lds
sub
cld
xchg
xchg
mov
pusha
les
sub
call
subl
lcall
sub
inc
pop
and
push
fadds
roll
sub
xchg
lahf
fmul
and
dec
pop
rcrb
sub
push
adc
mov
fscale
mov
xor
lcall
push
mov
push
out
rcll
push
inc
or
adc
cli
mov
int
lock
or
inc
mov
fwait
rcll
lret
imul
lods
mov
leave
sbb
inc
stos
insb
dec
push
lret
rcrl
pop
pop
mov
xchg
popf
fistps
insb
nop
inc
and
test
lds
dec
xchg
add
push
inc
sbb
and
xor
xchg
ss
mov
and
gs
ljmp
jle
fadds
push
mov
cltd
jae
rcrb
mov
cmp
or
inc
inc
and
aam
dec
cmpl
push
xor
ret
loope
sub
jb
jae
or
test
sti
call
ret
shll
xchg
push
movsb
add
ds
sarl
xchg
fwait
adc
cmpsb
nop
sti
out
pop
adc
jge
cmpsb
or
nop
add
jmp
xlat
mov
mov
push
or
xor
ret
test
ds
sub
mov
je
lcall
dec
ja
lds
dec
clc
xchg
idivl
dec
jl
inc
mov
push
mov
inc
lods
xchg
push
jne
xor
mov
lock
jno
in
stos
out
ss
cld
daa
xchg
mov
mov
xchg
jle
sub
jbe
ret
aas
push
ljmp
outsl
lret
mov
pop
inc
mov
sbb
lahf
test
daa
rorl
push
int
jnp
xor
cmc
fwait
scas
mov
iret
lock
test
fnstsw
pop
jns
enter
adc
pop
jg
or
repnz
mov
popa
movb
mov
xsaves
aam
lea
xchg
or
fsubl
scas
mov
stc
lea
inc
and
inc
bound
jb
xchg
or
dec
add
jne
mov
repz
jge
mov
iret
scas
inc
pop
push
pop
repz
push
sub
mov
cmpsl
or
push
xchg
sti
dec
sub
imul
ds
mov
lret
and
dec
push
sub
dec
out
outsl
cmp
mov
repnz
sub
imul
xor
nop
data16
jg
fimuls
add
rcrb
outsl
add
adc
push
jmp
cmp
fistps
push
cmp
ljmp
lahf
aaa
jb
sbb
sbb
lret
mov
cwtl
shll
mov
pop
add
test
lahf
xor
and
popf
imul
pop
insb
add
mov
pop
cmp
repz
cmp
xchg
fwait
scas
loopne
pop
mov
sbb
sub
aad
xchg
add
xchg
rolb
dec
xor
shr
xchg
mov
movsb
dec
mov
mov
pop
es
fisttpl
daa
mov
cmpsl
push
insl
mov
and
mov
leave
and
fwait
xor
fistl
and
fdivrs
mov
pop
push
jno
jmp
mov
out
jge
jno
sbbb
add
es
inc
dec
adc
and
daa
rclb
je
les
loop
movsb
fidivs
pop
or
ja
mov
lods
inc
std
popf
sbb
jg
mov
popa
pop
into
fs
or
lds
jg
xchg
add
fsub
jmp
mov
dec
test
xor
insb
jl
int
xor
lds
dec
jecxz
sub
push
mov
icebp
lret
mov
into
popa
nop
inc
imul
aas
out
mov
inc
jbe
push
into
or
jbe
into
xor
sub
out
enter
push
lret
add
out
fiadds
inc
add
mov
cmp
fwait
push
jl
jge
out
cmp
into
dec
mov
dec
mov
push
and
mov
ficoms
ja
inc
es
or
adc
in
test
hlt
test
xchg
inc
mov
insb
lahf
pop
jnp
dec
add
and
sbb
cmp
insb
or
daa
dec
pop
mov
cmpl
bound
test
and
pushf
idivb
mov
cmp
dec
enter
int3
xchg
jmp
cmc
pop
int3
test
in
daa
push
jmp
pushl
pop
mov
jmp
inc
push
or
mov
loopne
mov
scas
cmpsb
gs
fs
stc
push
test
dec
pop
std
sbb
inc
movsb
test
movsl
fidivrs
out
fcmovnbe
cld
arpl
fistpl
shrl
push
scas
call
ret
sub
add
add
and
es
aad
repz
jp
or
rclb
pop
stos
mov
jmp
fwait
xor
out
dec
call
subl
in
xor
xor
jo
sahf
imul
xchg
fcoms
jb
fs
sub
rol
arpl
test
loop
sub
outsl
out
xor
mov
cmc
iret
mov
mov
push
leave
into
insl
out
sbb
scas
cmc
lds
and
cmc
out
adc
cmp
jge
push
lahf
push
xor
and
aad
or
stc
xor
frstor
lret
inc
fcoms
int
imul
fisttps
inc
imul
cs
mov
loopne
jb
pop
pop
sbb
add
popf
push
movsb
push
pop
out
aaa
xchg
lcall
loopne
ret
rolb
xor
fcmovb
lock
insl
mov
mov
scas
repnz
mov
fisubl
lods
andl
cmp
jns
std
mov
testl
push
faddl
jge
sbb
adc
stos
mov
mov
adc
pop
mov
mov
scas
mov
das
je
xchg
xchg
mov
icebp
mov
out
in
cmp
arpl
addr16
addr16
addr16
xor
js
int
and
addr16
nop
xchg
jp
pusha
ret
js
jb
add
adc
cmc
sti
jmp
leave
mov
mov
push
test
shll
cltd
mov
push
xchg
out
sbb
dec
xchg
dec
les
sub
mov
test
add
push
out
test
inc
xchg
dec
inc
pop
or
cli
les
jns
jg
fs
iret
pop
pusha
and
je
fldl
adc
int
mov
and
sub
mov
cmp
and
mov
mov
mov
cs
or
push
stos
dec
push
mov
push
incl
in
inc
lcall
stc
cmpsb
jge
xchg
mov
imul
bound
mov
mov
mov
push
mov
iret
in
and
movsb
imul
out
cltd
popf
push
cld
rorb
test
outsb
jne
inc
arpl
or
xchg
shll
call
jne
inc
mov
outsb
mov
std
test
out
and
scas
mov
dec
outsl
aad
or
loopne
inc
jl
daa
push
mov
ss
push
jno
cmpsl
out
cltd
int
rorl
sbb
fadds
push
xor
gs
movsl
fs
mov
xchg
sar
leave
faddl
aas
in
and
in
test
dec
je
pop
or
or
or
and
int3
test
imul
mov
jge
add
subb
mov
or
ficoml
adc
cmpsb
cld
popa
pushf
hlt
cltd
outsl
aam
mov
adc
movsl
cmp
adc
rcr
inc
xor
icebp
push
jecxz
or
xor
push
cmpsl
mov
mov
add
sub
aam
mov
adc
pop
gs
mov
jnp
lea
mov
xchg
or
cmc
dec
or
test
icebp
ret
fs
jmp
xor
and
loop
cmp
or
repnz
pop
pushl
ret
dec
xchg
notl
and
and
lret
shlb
sbb
int
ds
jb
iret
mov
dec
jp
cld
fbstp
fidivrs
sub
mov
aad
mov
inc
mov
lods
enter
add
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
enter
jno
push
push
sub
push
push
adc
out
mulb
add
mov
lods
rcrl
movsb
int
bound
sub
int3
cmp
in
jmp
xor
gs
mov
mov
push
scas
jmp
scas
popf
ljmp
loopne
out
mov
mov
jae
xchg
cmp
xchg
xchg
cs
sti
mull
or
xor
add
push
and
movsb
arpl
push
je
mov
out
je
sub
mov
stc
movsl
mov
push
push
aas
mov
insb
and
insl
jg
mov
inc
pusha
push
inc
out
in
int3
pusha
pop
push
pusha
pop
sub
int
and
pushw
arpl
inc
int
xchg
mov
sub
mov
push
inc
cmpb
xchg
cltd
mov
arpl
lock
inc
ficoms
jp
push
cmp
pop
push
pushaw
inc
mov
out
pop
mov
adc
aad
jo
xchg
sub
cli
popf
aaa
mov
addr16
and
pop
mov
icebp
sbb
out
shlb
ljmp
mov
inc
and
pop
inc
aad
inc
int3
into
repnz
or
out
popl
jne
arpl
jnp
jecxz
ret
xor
or
add
or
bound
push
mov
sbb
jge
nop
push
push
push
cwtl
cmpsb
xor
lahf
test
lret
cld
mov
icebp
in
pop
das
data16
ljmp
inc
jecxz
lods
mov
mov
and
adc
shll
adc
fs
sub
std
jg
fwait
xchg
loop
lea
mov
or
fsubp
ds
lcall
les
mov
push
jl
sbb
popa
pushf
into
cmp
xor
jl
ja,pn
and
out
lcall
rcr
inc
std
xchg
lods
pop
shrl
cmc
sahf
movsl
in
lahf
xor
shll
xchg
lods
fisttpll
pop
ljmp
mov
mov
pop
test
xlat
push
push
pop
cmp
pop
test
or
je
lea
sub
pop
adc
push
std
stc
xchg
movsl
xor
ljmp
xchg
fisttps
in
jns
cmc
push
loop
lods
push
xchg
sub
jmp
ret
test
push
out
dec
mov
pop
movsl
ret
in
pop
jb
xor
xchg
cmpsb
xchg
xchg
jns
int
and
jge
push
in
test
adc
mov
inc
cmp
and
and
xchg
sub
test
in
mov
fsubl
ds
bound
nop
pusha
sub
ja
lods
out
stc
mov
or
cld
mov
mov
xchg
je
sbb
ret
dec
xchg
test
xor
movsl
cli
sbb
xchg
dec
push
nop
jmp
pushf
cld
jae
dec
and
cmp
ds
pop
xchg
outsb
movsb
sti
ss
mov
roll
aas
jb
cli
and
icebp
or
fs
je
test
das
pop
lock
mov
paddusw
hlt
jo
fidivl
stos
mov
or
sub
inc
test
les
cwtl
dec
sub
int3
outsb
flds
js
dec
pop
mov
notb
sub
sbb
shrl
mov
addl
shlb
cmp
mov
sub
sub
fstpl
stc
add
pop
pop
sbb
inc
pop
inc
out
aas
fptan
cmpsl
clc
clc
movsb
sub
push
sub
mov
mov
xor
icebp
ret
loopne
xor
test
call
outsl
adc
sbb
sub
xor
fsubs
lcall
lcall
out
lds
mov
je
xchg
idivb
or
iret
imul
mov
dec
push
nop
sbb
xchg
hlt
inc
insb
and
sub
scas
fwait
push
cmpsb
aad
shld
data16
jnp
xlat
pop
fiadds
test
jmp
aad
pop
and
mov
int3
hlt
push
xchg
icebp
pop
jge
leave
sbb
or
ret
loope
push
in
aaa
xor
das
sbb
out
out
push
int3
sahf
fcoml
in
xchg
in
movsb
mov
inc
sub
cli
jecxz
aas
or
shlb
mov
push
push
push
and
mov
or
jo
or
imul
out
fwait
mov
xor
mov
xchg
aam
adc
aam
iret
pop
ja
sbb
xchg
jns
gs
jle
adc
jbe
daa
xchg
push
daa
shrb
in
shl
fs
enter
shl
mov
or
inc
xchg
cmp
pop
sub
cwtl
add
add
cli
jo
push
outsl
sbb
sub
mov
sub
stos
rcl
test
xor
mov
push
xchg
sbb
sub
dec
push
stos
pop
add
or
in
call
adc
daa
addb
mov
repnz
addr16
ds
inc
pop
sti
test
adc
mov
cwtl
push
sub
shll
jo
xchg
jne
add
std
mov
xor
sarl
mov
paddw
les
push
ja
outsb
stos
xchg
and
cwtl
adc
adc
pop
dec
popa
mov
or
lods
int3
and
hlt
in
adc
push
movaps
add
push
jmp
ds
mov
and
jnp
and
pand
lds
xchg
pop
fdivl
aad
inc
aam
cmc
cmp
into
ds
addr16
int
into
lods
orb
in
xchg
jge
pop
loop
andb
xchg
bound
sahf
dec
or
fisubs
add
mov
inc
push
fsubs
mov
xchg
ljmp
add
cli
xor
int3
das
repz
jg
lods
dec
out
cs
insl
inc
negb
call
and
outsl
rcrb
add
sub
enter
sti
shlb
jle
adc
test
mov
jmp
jbe
js
call
xor
fs
in
andl
push
lods
iret
lds
cmp
test
or
outsb
movsl
mov
fidivrl
fidivrl
or
mov
sub
out
and
out
mov
cld
dec
jl
out
cmp
pop
jo
movsb
mul
adc
jnp
add
or
shl
fs
imull
sbb
leave
rorb
adc
loop
fbld
inc
hlt
inc
pop
mov
cli
push
sbb
push
stos
and
cmc
test
int
fbstp
cmp
enter
movsb
ja
inc
adc
mov
push
push
call
xchg
inc
je
mov
insb
and
sahf
loope
mov
movsl
scas
ficoms
mov
mov
popf
mov
lahf
and
test
hlt
mov
cli
insb
cmpsl
push
push
cli
jmp
or
mov
mov
sbb
cmp
fadds
hlt
push
cmp
sub
cmp
rclb
daa
sub
mov
iret
jbe
xchg
test
or
scas
out
jge
pushf
cld
cmp
mov
cmpsb
xchg
cmpsl
test
imull
imul
lds
mov
test
cmp
mov
push
add
adc
jg
nop
stos
mov
inc
movsl
mov
dec
lds
fimuls
lock
jo
adc
push
sub
imul
and
jl
lret
aam
repnz
fsubl
jmp
xchg
or
mov
ss
cmpsb
pusha
ja
std
dec
jnp
mov
shrb
out
lock
subb
mov
inc
pop
scas
xchg
lds
or
xchg
out
xorb
xor
dec
jmp
fadd
stc
xchg
push
and
cmp
cld
pop
aad
xor
addr16
mov
loop
loopne
and
sbb
push
mov
sti
dec
and
jp
loope
inc
jo
inc
loopne
test
push
mov
int3
les
xor
jp
inc
fisttps
push
scas
jl
pop
fbstp
ret
jp
jns
insb
cmp
jo
push
ja
leave
das
mov
mov
xor
in
mov
lods
std
in
loopne
call
jmp
out
xchg
push
aas
shlb
adc
std
sub
in
test
es
mov
sbb
sub
jo
sub
pop
mov
cld
inc
jle
imulb
pop
mov
sbb
push
and
xchg
or
add
sti
inc
and
jnp
dec
iret
imul
xchg
pop
int3
pop
in
imul
jb
ds
sbb
sub
test
clc
bound
daa
add
outsb
jno
leave
inc
jnp
jno
mov
xor
inc
or
xchg
push
sbb
sub
jbe
movsb
xor
inc
and
int
cwtl
inc
clc
pop
xchg
add
aam
pop
sbb
and
cmp
js
cmc
dec
clc
stc
enter
sbb
xchg
jns
and
loope
lahf
call
ds
dec
jbe
mov
sub
pandn
xchg
data16
inc
xor
sahf
loop
outsb
mov
inc
mov
jae
ret
add
test
stos
fs
pop
sbb
push
jae
xchg
test
jb
mov
add
pusha
dec
mov
mov
bnd
arpl
fmuls
cmpsb
pop
test
ljmp
mov
mov
int
lcall
in
mulb
mov
xchg
pop
mov
popf
and
jl
cmp
or
test
loopne
repz
inc
inc
push
sub
jne
dec
add
ret
sbb
xor
inc
xlat
mov
or
dec
pushf
jb
in
fcom
cmp
pop
push
push
loope
test
sahf
mov
shl
dec
sti
hlt
jns
cmp
lcall
orb
call
es
inc
cmp
or
add
outsb
add
lds
lcall
test
aas
push
out
xor
mov
ja
negl
push
stc
test
xor
or
fs
and
mov
add
das
mov
orl
enter
xor
sar
push
xor
xchg
pop
mov
inc
int3
ja
xor
js
jp
or
sbb
add
aad
filds
push
mov
xchg
or
jl
pop
mov
les
lods
enter
fs
loope
je
jo
stos
cltd
pop
testb
iret
xor
mov
stos
mov
sub
jno
sbb
push
inc
in
int
pop
push
andl
dec
pop
test
cmp
jg
dec
repz
xchg
lcall
dec
sti
pushf
cmc
pop
cltd
jns
loopne
popf
idivb
dec
sbb
imul
pop
pop
xchg
lahf
sti
or
xor
jmp
or
push
cmp
incl
mov
mov
fs
and
js
scas
daa
gs
hlt
mov
je
jne
mov
sbb
test
push
xchg
mov
sub
insl
mov
mulb
aad
or
xchg
adc
cmc
ljmp
fisubrl
enter
inc
rcrl
pop
pop
call
imul
or
push
repz
lcall
mov
mov
int
pop
pop
pop
ds
scas
out
addr16
daa
cmp
pop
bound
rcll
addl
or
out
js
pop
push
imul
out
adc
ret
lods
into
lods
andb
pop
pusha
int
mov
inc
jns
mov
push
jg
cmp
lea
push
mov
cli
mov
jae
mov
push
xor
or
stos
mov
imul
mov
dec
dec
cmp
popa
fistps
xchg
xor
push
dec
or
sub
shrb
rorb
jg
dec
aam
sub
bound
mov
ret
loop
or
movsb
sti
jnp
xchg
stos
jmp
jp
jmp
xor
xchg
inc
pushf
mov
imul
fisubl
dec
cmpl
and
xor
and
lret
ljmp
ds
js
inc
xchg
and
scas
aaa
or
inc
scas
push
repnz
test
sahf
cmp
or
test
jp
fsubrl
repz
pushf
das
dec
bound
push
xchg
cmp
pop
or
dec
pop
mov
adc
mov
iret
dec
dec
push
push
jp
hlt
shlb
decb
lods
pop
jbe
daa
popf
pop
push
into
pop
xchg
lret
dec
jo
cmpsl
cltd
jnp
add
fdivl
xchg
andl
jmp
out
pop
aaa
int
add
and
push
inc
dec
aaa
inc
jmp
pop
out
aad
adc
mov
fwait
add
mov
das
std
xor
xor
xchg
sub
inc
pop
pop
dec
push
mov
sbb
mov
iret
xchg
push
rcl
or
sbb
iret
andl
insl
pop
cmpsl
xchg
and
fdivl
xchg
jge
cmp
and
rclb
push
mov
cmp
inc
dec
mov
scas
fidivl
add
push
add
in
dec
insl
stos
insb
mov
inc
and
test
xchg
pop
dec
mov
psubusb
fld
xchg
out
inc
push
out
subl
mov
stos
xor
xor
lahf
call
fld
inc
ss
dec
jbe
xchg
rorl
sub
push
inc
in
inc
jnp
std
jmp
mov
xchg
dec
shlb
mov
js
call
jne
sbb
sti
sub
sub
mov
inc
pop
mov
adc
and
mov
push
xchg
adc
pop
mov
pusha
int
mov
jb
stos
push
fcmovnb
ja
insl
addr16
je
xchg
mov
jmp
pop
jmp
cmpsb
mov
leave
fsub
push
movsl
jle
jno
test
inc
out
jecxz
lods
aaa
ljmp
sbb
inc
in
scas
mov
lahf
pop
push
ljmp
cwtl
ja
cmp
push
mov
dec
data16
into
jne
clc
pop
mov
ljmp
pushf
in
inc
mov
stos
and
pop
lock
aas
arpl
dec
arpl
dec
push
lcall
cltd
rolb
inc
jg
sub
or
out
cwtl
pusha
jno
push
xor
add
sub
cmc
nop
call
out
nop
mov
mov
fs
mov
call
xchg
scas
data16
mov
je
fnsave
scas
ljmp
lcall
data16
lock
cltd
push
fsubl
add
fwait
test
data16
sub
cs
shll
out
lds
xor
mov
loop
jl
cmpsb
mov
bound
ja
xchg
lahf
enter
add
pop
outsl
into
cwtl
popa
out
dec
lret
mov
ja
adc
out
jg
iret
jns
fwait
out
mov
jne
push
les
loopne
ret
xchg
cmp
pop
pop
mov
lcall
sub
and
ds
insl
pushf
jl
mov
hlt
orl
aaa
and
in
cmp
lods
lcall
cmp
jnp
mov
stc
push
hlt
ss
rcll
sti
out
cmp
jecxz
lods
andl
movb
cld
icebp
add
in
mov
sub
dec
scas
add
lock
mov
xchg
cmp
pop
mov
subb
dec
cltd
subl
xor
outsl
jle
xor
sbb
in
aam
idiv
out
jl
cmpsb
jnp
push
push
dec
dec
jnp
das
or
daa
pop
jle
nop
jl
push
mov
push
mov
cld
mov
cs
push
leave
imul
push
rcl
sbb
cld
aad
jg
sbb
aas
xchg
sub
jmp
mov
pop
mov
clc
mov
push
je
in
xchg
fisubl
jae
test
adc
daa
pop
mov
adc
out
pop
cltd
in
adc
adc
adc
sub
out
pop
jge
iret
sbb
sub
aam
test
shl
xor
pusha
arpl
cwtl
xor
and
xor
stc
loopne
push
add
in
fldcw
sub
add
inc
lds
push
mov
sub
repz
jge
sbb
filds
lret
pop
ljmp
mov
xchg
sti
mov
xor
or
jge
mov
mov
xchg
data16
mov
mov
adc
jle
xchg
imulb
mov
lcall
out
test
iret
add
nop
fwait
pushf
inc
or
sub
cs
aas
mov
inc
mov
pop
fcompl
lock
xchg
sub
inc
and
inc
jg
cmc
or
xor
dec
cmp
minps
jmp
inc
shll
jmp
fistpl
pop
ret
add
sbbl
out
xchg
pop
xchg
jge
sbb
mov
mov
mov
je
ret
dec
imul
or
test
jg
mov
arpl
idivb
push
pop
add
insl
sbb
je
xor
pop
add
sbb
xor
daa
ja
int3
clc
rorb
idivb
mov
cld
cs
push
icebp
mov
fiaddl
cmp
hlt
xor
lods
das
aaa
in
js
jle
iret
sbb
test
adcl
test
xor
adc
call
mov
pop
push
pushf
popa
xchg
jno
dec
mov
repnz
or
pop
and
cmp
pop
andl
das
dec
rorb
and
sbb
stos
fadd
xchg
add
push
add
mov
xchg
js
js
sbb
xor
push
pop
fsubrl
test
sub
jmp
addb
pop
jmp
movsb
jae
or
dec
fnstsw
mov
leave
add
add
and
les
fildll
scas
jmp
repnz
mov
roll
inc
ror
test
jge
les
cli
push
inc
xor
loopne
ja
into
sub
movb
mov
mov
addl
cmp
sbb
ficompl
fs
out
daa
sbbl
mov
lods
stos
dec
inc
cmc
shrl
or
and
mov
divl
pushf
fs
mov
push
pop
out
and
shlb
stos
push
aad
push
leave
andl
lds
aad
daa
in
mov
mov
or
in
push
push
pop
cmp
das
mov
xchg
out
aas
clc
mov
movsl
add
imul
pop
xor
jp
dec
adc
xchg
or
cmp
or
xor
cmp
add
ret
inc
dec
cld
or
cmp
pop
mov
add
jmp
dec
lods
jmp
stc
push
aaa
mov
insb
mov
sbb
test
mov
loope
fmulp
push
gs
pushf
lahf
call
hlt
inc
sti
fsub
sub
pop
add
stos
mov
mov
pusha
push
mov
cli
repz
add
push
xlat
std
fsubrl
loope
pop
xchg
lock
jno
jae
xchg
mov
mov
rcrl
adc
popl
test
or
popf
sub
out
repnz
fsubp
mov
rcr
pop
sub
add
xchg
pop
cwtl
orb
add
add
scas
leave
xor
in
add
int3
rcrl
push
cmp
repz
pop
or
ljmp
stos
dec
dec
ffree
ss
mov
imul
insb
pushf
mov
push
mov
xor
push
or
stos
xchg
xlat
pop
out
push
lahf
mov
jno
cmc
mov
es
in
fsubl
push
jp
iret
pop
push
adc
out
imul
xchg
sub
jns
faddl
push
mov
and
jns
aad
adc
and
adc
cmp
hlt
and
negb
insb
mov
aad
out
arpl
mov
imul
in
lds
pop
pop
lods
je
mov
inc
arpl
mov
into
enter
notl
in
xor
fcmovne
in
fidivrs
sub
out
push
add
adc
lods
push
stos
add
pop
fs
imul
xor
mov
dec
mov
rcrl
pop
add
mov
das
aam
roll
mov
and
fistpll
ss
clc
mov
icebp
std
pushf
cltd
test
jae
adc
lcall
dec
adc
and
lahf
xorl
or
test
mov
imul
lods
push
push
jg
mov
mov
add
fidivl
xchg
cld
push
cmp
and
push
mov
or
push
scas
pop
aam
pop
mov
cmp
mov
in
mov
mov
jl
js
jbe
mov
xchg
push
loopne
mov
xor
ja
mov
jp
dec
subb
ljmp
outsb
fs
push
jl
push
mov
js
sub
mov
or
repz
adc
bound
imul
arpl
or
fcompl
xchg
adc
inc
out
movsb
mov
stc
and
lcall
ss
scas
je
jecxz
or
stc
add
sbb
jns
adc
push
test
scas
nop
cmpsl
pop
xchg
dec
lock
mov
rcll
shrl
das
movsb
outsl
cli
cmp
push
addr16
xor
insb
mov
sub
mov
sub
push
inc
fidivrs
dec
adc
pop
inc
inc
mov
cmp
fildll
negb
push
sub
xchg
sub
ljmp
clc
bound
jno
repnz
addr16
sahf
fiaddl
out
cmp
out
pop
add
xor
pop
jl
lret
daa
mov
add
addr16
xor
bound
lcall
and
mov
mov
push
call
dec
mov
cli
pop
lret
stos
icebp
emms
cmp
adc
aam
hlt
pop
mov
bound
inc
orb
aaa
pop
dec
mov
add
sbb
stc
dec
cwtl
call
mov
push
lret
fsubrl
push
lcall
sbb
mov
andl
js
and
mov
repnz
test
imul
inc
ss
push
ljmp
jo
in
xchg
gs
push
push
mov
cltd
repnz
fs
fidivl
roll
sub
fstps
repnz
test
imul
test
push
or
jg
xchg
jbe
rolb
testb
out
shrl
bound
notl
sarl
insl
xchg
aad
lret
add
adc
or
pushf
sub
ret
rcr
sub
sub
mov
out
or
add
adc
jns
aas
mov
pop
leave
jb
lahf
mov
pop
fsubl
push
fimuls
insb
fmul
cmpsb
imull
push
stos
jg
or
imul
xchg
push
sbb
mov
xor
imul
sbb
fdivr
sar
add
repnz
insl
lret
xor
sbb
leave
daa
mov
jmp
sub
data16
cmp
lock
shlb
mov
dec
push
mov
leave
icebp
in
adc
btc
sbb
loope
lea
mov
adc
les
les
sbb
push
mov
sahf
and
mov
loop
imul
ja
loop
cltd
out
enter
cmc
int
xchg
jmp
test
arpl
jmp
cltd
push
nop
dec
pop
test
pop
mov
int3
inc
mov
in
popf
pop
cld
push
add
mov
out
xchg
fldt
mov
test
push
jbe
pusha
fidivrl
jecxz
je
andb
pop
add
in
mov
pop
lea
test
cmp
sub
lahf
xor
mov
jg
dec
or
mov
jo
push
jg
cmp
cmpsb
ja
dec
fsincos
push
mov
sbb
mov
stc
inc
test
es
xor
pop
inc
xchg
mov
xchg
sahf
mov
scas
and
push
cli
dec
xor
divl
imul
popa
add
movsb
push
ret
sti
sarb
pmulhw
dec
lock
lods
in
pop
fwait
lea
stos
inc
inc
cmp
mov
mov
cs
sub
xchg
and
dec
mov
xchg
pop
xor
lods
add
xor
adc
push
cmp
les
lds
rclb
pop
test
inc
xchg
cmp
xchg
hlt
xor
push
test
inc
push
lds
std
mov
adc
ret
xor
sbb
cmpsb
rorl
leave
dec
dec
fldcw
dec
fucomip
int3
test
mov
cli
mov
sub
enter
sbb
cmp
mov
pop
xor
xchg
xchg
ret
clc
loopne
push
cmpsb
push
sbb
jae
cmp
aas
mov
out
cmp
pop
mov
and
jbe
adc
sbb
xor
icebp
lods
mov
cmp
dec
adc
adc
add
movsb
cmp
aas
xchg
jae
rolb
mov
lods
imul
adc
cmp
push
lahf
mov
scas
int
inc
pop
jo
pop
repnz
mov
push
sbb
rclb
xor
in
xor
in
enter
jb
mov
mov
gs
lods
push
push
and
shrb
xchg
mov
cmp
and
das
inc
fcoml
aam
adc
hlt
outsl
aam
and
subl
mov
cmp
push
add
fcompl
push
fdivl
pop
or
ja
xor
fwait
cmp
in
lods
ret
or
cmp
ds
xor
neg
cmc
lahf
mov
cli
scas
ss
inc
stos
pop
xchg
or
mov
aaa
adc
push
movb
cld
push
testb
jb
jnp
xor
scas
adc
arpl
push
rol
iret
stos
shl
mov
scas
sbb
incb
into
mov
imul
out
mov
lods
data16
ljmp
test
xorb
arpl
push
pop
in
in
sub
xchg
ret
push
dec
cmpsb
mov
xor
daa
push
pop
iret
ret
cmpsl
xchg
sub
add
in
popf
js
dec
lock
adc
popl
xchg
mov
xor
nop
add
adc
and
dec
adc
jae
sub
fldcw
mov
adc
shlb
pushf
icebp
xchg
in
and
rcrb
movsb
cltd
sbb
mov
adc
pop
push
jno
mov
cmp
mov
std
xor
adc
shlb
jmp
dec
jno
xchg
adcl
pop
inc
aas
lcall
out
cwtl
xorb
enter
push
outsl
pusha
leave
xchg
adc
mov
sbb
mov
out
sbb
jbe
scas
data16
push
dec
adc
mov
mov
out
aaa
jne
mov
jle
in
and
xor
cmpsb
scas
pop
popf
or
das
jle
lret
pmaxsw
inc
sub
mov
fwait
pop
data16
pusha
sub
incl
mov
mov
sub
rcrb
xor
rcrb
mov
loope
push
adc
lea
cmp
xchg
bound
aam
mov
int3
aam
mov
sbb
and
repnz
push
inc
xchg
inc
or
adc
lock
xchg
mov
aad
out
lea
lds
xchg
scas
gs
and
sbb
pop
push
or
scas
gs
or
shlb
cmp
add
xlat
mov
mov
in
and
push
sub
shlb
cmp
aas
lock
inc
cmp
sub
out
mov
xor
xor
cmpsl
xlat
sub
hlt
cwtl
loop
push
ds
pop
movsb
fdivs
or
xor
mov
mov
mov
mov
test
mov
cmpsb
subb
and
jmp
inc
js
test
movsb
mov
mov
cmp
jl
jo
xor
pop
aad
insb
jmp
jl
daa
aaa
add
dec
jae
sahf
jnp
movsb
lods
pop
call
adc
xchg
adc
icebp
jecxz
lds
inc
sub
lods
sub
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
mov
pop
mov
mov
push
sub
push
push
rcll
in
subl
xlat
fdivl
lock
imul
lods
inc
push
iret
mov
push
or
imul
jb
lret
data16
insl
cmp
insl
es
in
rclb
stc
push
and
mov
and
iret
imul
mov
ret
test
call
mov
lret
push
jle
loop
in
mov
sti
xchg
push
pop
ret
pushf
das
lea
push
lahf
sub
call
fdivs
fidivs
test
stos
test
cmp
rcll
xchg
mov
pop
fdivp
fcoms
cmp
daa
push
jge
enter
call
sbb
mov
sub
aad
aas
ficoms
pop
xchg
sbb
cmpsb
fsubl
test
arpl
sbb
cs
or
jnp
scas
pop
lods
adc
or
mov
imul
xchg
pop
mov
lret
ret
inc
adc
fucomip
mov
pop
out
mov
test
push
jecxz,pt
or
arpl
stc
ss
inc
and
lods
rorl
jecxz
and
into
or
test
pop
dec
fisubl
and
mov
ja,pt
repnz
int
mov
or
mov
xchg
push
pop
lock
cmpsb
push
fs
imul
pushf
incb
vmread
adc
outsb
pop
nop
icebp
test
mov
dec
or
sub
mov
push
push
jg
xchg
cmp
das
bound
std
mov
scas
xlat
cwtl
sub
sub
mov
xor
cwtl
push
cmpsb
roll
outsb
sub
mov
cmp
mov
js
out
mov
cwtl
jnp
xor
sub
imul
mov
jge
aaa
pop
in
sahf
xor
into
gs
cmp
mov
adc
and
mov
inc
and
testb
sbb
xchg
imul
jge
sbb
idivl
sub
cltd
push
nop
pop
push
sub
sarb
sub
mov
pop
test
dec
leave
test
aad
iret
je
dec
andb
data16
loop
lret
das
addr16
movsl
mov
mov
lcall
add
lcall
inc
movl
in
xor
jecxz
mov
mov
dec
dec
inc
sub
lea
xor
mov
lock
test
push
mov
stos
fistl
negl
cli
inc
arpl
push
inc
movsb
mov
cld
test
mov
xlat
pop
cmp
les
pop
push
daa
testl
lods
jb
jno
mov
xor
test
sbb
cmp
adc
mov
jbe
add
mov
fmuls
std
mov
repz
pop
cmp
fdivs
repz
test
orb
inc
pop
arpl
sbb
mov
std
jmp
hlt
and
je
cmc
cmp
cmovge
ret
mov
mov
jmp
ficoms
and
or
xlat
jbe
icebp
mov
or
lods
xcrypt-cbc
cmpsl
xchg
repz
mov
clc
cmp
add
dec
dec
pop
in
cmc
or
fildl
shrb
pop
jne
pop
jo
je
movsb
sub
add
out
data16
jg
gs
push
xor
fistpll
lods
ja
jmp
movzwl
cmp
mov
pop
xchg
rcrl
sub
popa
sub
repz
push
cli
mov
fwait
pop
inc
jmp
add
pop
lret
inc
fidivrs
data16
adc
inc
mov
add
aas
gs
dec
test
cld
adc
lret
in
inc
mov
shll
in
les
into
mov
test
pop
pop
push
sti
das
mov
cs
fiadds
jge
push
lods
or
movsb
das
inc
inc
lods
push
pop
lret
andb
pushf
cmp
pop
movb
xchg
mov
mov
sub
dec
imul
mov
imul
jo
cmpsl
sbbl
adc
mov
pop
in
imul
testl
test
mov
iret
icebp
inc
or
fucomip
dec
dec
ficomps
loope
push
pusha
fdivs
insb
jnp
jo
pop
call
ss
inc
cmp
lret
mov
rorl
mov
adc
in
std
fs
mov
jle
mov
aas
sub
cwtl
mov
out
pop
jge
or
mov
push
mul
dec
xchg
jecxz
pop
jge
sub
and
andb
fists
pop
movsl
push
or
lahf
jg
enter
arpl
pop
xor
push
lock
popa
inc
lcall
cwtl
stc
cmp
sbbl
lods
adc
popa
cld
cld
or
ljmp
and
push
and
out
and
and
sub
out
addr16
int3
pop
rcll
adc
movsb
adc
testl
and
pop
ja
sbb
orb
ja
pop
pop
outsl
mov
loopne
lcall
js
xor
inc
jmp
sbb
imul
gs
add
shl
xorb
inc
sbb
rorl
dec
ja
shlb
and
sub
lock
lahf
jns
jmp
pop
test
iret
aas
dec
fidivrs
xchg
lds
icebp
and
adc
jo
sub
rcl
es
dec
adcl
add
push
out
mov
mov
jle
push
add
push
mov
and
mov
fldt
sub
pushf
dec
pop
jle
pop
fwait
inc
mov
lock
outsl
cmp
adc
sahf
ds
lock
out
pushf
ljmp
movsb
fcomps
lret
pushf
cld
mov
ret
mov
pop
sti
cmp
pop
adc
adc
lea
xor
or
mov
das
mov
adc
and
pop
inc
jae
lret
push
shlb
into
fists
adc
fdivrs
pusha
push
push
cmpsl
ljmp
inc
dec
fstps
mov
ret
dec
daa
jno
push
jo
aam
scas
add
lods
ret
in
enter
fsubs
out
pop
push
fstps
jne
lcall
ljmp
in
push
fidivrs
mov
adc
ret
fdivrp
jae
push
movsb
orb
push
pop
sbb
repnz
cmp
mov
andb
mov
call
fldl
mov
aaa
lods
or
sbb
imul
push
jp
mov
lret
arpl
or
pop
jl
adc
inc
add
inc
xor
sbb
pushf
xlat
sub
into
fwait
xchg
and
mov
mov
or
inc
icebp
or
and
rcl
imul
mov
jbe
push
leave
add
sti
xchg
cmc
loope
inc
sbb
push
lods
push
jb
and
lret
xchg
cmc
push
xchg
sub
popf
mov
stc
repnz
jb
out
fucomip
push
cli
pop
leave
mov
xchg
mov
test
out
inc
xor
mov
in
icebp
push
inc
sbb
notb
sbb
pusha
inc
mov
adcl
lods
xchg
gs
push
xlat
arpl
sub
pop
cld
std
mov
dec
jp
js
popf
enter
insl
add
push
sub
mov
andl
pop
pop
cli
sbbl
dec
inc
repz
and
je
inc
cli
stos
push
aam
pop
pop
int
xchg
push
rclb
push
mov
icebp
and
xchg
jmp
pop
sub
aaa
cmp
ds
mov
adc
dec
js
xchg
mov
mov
mov
mov
xchg
xchg
add
fnsave
mov
xor
cltd
mov
movsl
push
push
adc
pop
addr16
roll
jo
movsl
test
xor
imul
or
mov
adc
xor
stc
idivb
mov
push
sub
shl
push
jl
les
popa
ror
cmp
imul
iret
stos
mov
or
pop
adc
std
cmp
pop
testb
cmp
sub
rolb
jmp
mov
dec
leave
shl
fldcw
imull
cmc
cmpb
ret
cmc
and
pop
out
cmp
sti
push
jge
mov
push
ljmp
adc
imul
je
cli
les
lds
lock
jns
scas
icebp
stc
pop
mov
jbe
std
fiadds
inc
pop
add
jg
fwait
xchg
iret
push
test
dec
cmp
sti
es
scas
and
repz
jmp
pop
sahf
lret
jnp
in
sbb
hlt
lods
ss
loop
fidivs
clc
imull
dec
add
add
fs
lds
jb
mov
cmp
add
cmp
jo
sbb
cmp
rorb
ljmp
jle
mov
int3
jns
push
aaa
jno
hlt
mov
roll
shrb
jno
out
inc
mov
addb
aaa
hlt
lock
cmp
in
cwtl
or
sbb
xchg
mov
jnp
xor
stos
mov
popa
cmp
sub
jno
das
add
sub
xchg
or
push
ror
int3
mov
jmp
mov
and
mov
cmpsb
or
test
arpl
xchg
push
insl
movzbl
cmp
shrb
mov
test
push
dec
cmp
inc
fmul
pop
xrelease
xchg
xchg
data16
insb
shrl
gs
int
xor
inc
mov
jno
mov
mov
andb
adc
jmp
imul
enter
and
mov
addl
mov
fsts
sbb
adc
pop
test
dec
scas
pop
movsl
lock
dec
call
jns
xchg
call
mov
mov
and
jle
mov
into
scas
enter
dec
jb
mov
pop
mov
data16
or
pop
inc
repnz
or
and
adc
fiaddl
fsub
adc
in
fsubr
mov
bound
out
mov
std
outsb
or
mov
cwtl
fisttpl
mov
aam
cwtl
xchg
xchg
repz
inc
mov
ret
pop
lret
test
jecxz
lea
into
lcall
cld
js
imul
fists
inc
push
push
jg
shll
arpl
sbbl
jb
movsl
pop
gs
sub
rcrl
inc
out
push
or
ror
jl
dec
and
enter
push
scas
scas
std
iret
add
adc
or
loopne
clc
aad
jne
xchg
mov
or
int3
xchg
ja
imul
cltd
cltd
adcb
push
mov
lahf
mov
mov
push
fisubrs
subl
adc
pop
loop
mov
andl
dec
cmc
shll
mov
ret
xlat
test
cmp
xor
dec
mov
mov
mov
pop
pop
cmp
lock
push
rcrb
and
mov
sbb
repz
add
jge
fiaddl
test
sbbl
push
andl
fisubs
mov
inc
xchg
jo
ror
ret
fnstenv
imul
cmp
pop
rcr
mov
cld
lock
daa
test
aad
sbb
dec
fldenv
lret
sub
adc
in
jle
inc
jp
add
mov
sub
jmp
mov
cmp
jmp
dec
shlb
vcvtdq2pd
inc
add
loop
xchg
inc
push
test
divl
pop
mov
inc
mov
adc
out
scas
std
add
pop
xor
cwtl
xchg
aam
das
adc
mov
pop
addl
xlat
jae
or
sbb
pop
fisubl
cmp
das
or
iret
inc
pop
push
push
js
shrb
ljmp
addr16
faddl
stos
addr16
sub
popf
mov
pop
roll
test
mov
loope
mov
aam
iret
mov
flds
mov
lret
jmp
add
dec
push
lret
movsb
shlb
mov
divl
mov
test
xor
neg
mov
inc
cmpl
sub
sbb
cmp
push
notl
je
jp
add
inc
cwtl
push
or
gs
lods
das
or
inc
xor
xchg
addb
mov
and
enter
lds
outsl
ss
inc
push
or
lret
mov
pop
ffreep
hlt
mov
mov
push
ja
sbb
scas
sarb
lds
jo
cmpsl
adc
sub
shll
cli
lahf
and
sbb
out
out
pop
xchg
xchg
inc
daa
lahf
in
ret
cli
pop
jg
cs
xchg
xchg
lcall
in
out
add
mov
outsb
jmp
clc
scas
bound
cli
js
mov
mov
cmp
gs
push
cmpsl
dec
push
xor
fwait
jl
stc
sub
xchg
cmc
inc
add
testl
push
shl
jg
lock
xchg
nop
sbb
stc
mov
dec
fwait
sub
ret
xchg
jns
push
dec
gs
dec
push
fbld
xchg
in
popa
je
fcompl
and
aas
sub
addl
js
pusha
out
shrl
fdivr
gs
aad
sbb
xor
and
sbb
sub
mov
adc
popf
dec
fldcw
js
mov
fidivl
pop
sub
xchg
fs
fiaddl
push
popa
test
out
sbb
mov
rcl
mov
push
fstp
std
movsl
roll
clc
mov
lret
call
ss
xchg
add
xlat
mov
imul
or
stos
dec
lods
push
mov
inc
jbe
mov
add
pushl
bound
adc
inc
in
mov
push
cmp
pop
mov
sbb
and
sub
mov
ss
xor
dec
push
pusha
es
mov
sbb
mov
mov
sbb
mov
pop
push
or
stc
mov
dec
loop
cmp
add
inc
insb
out
leave
mov
push
sbb
push
lea
jnp
and
cmp
xorl
js
sub
fiaddl
jns
push
vmread
lods
iret
xchg
in
jo
xchg
test
mov
sbb
rorl
xchg
data16
push
mov
lods
pop
rol
in
shll
sbb
shrl
push
out
push
repz
ja
jmp
inc
push
int3
push
add
cli
jmp
bound
mov
and
sub
pop
push
sbb
gs
pop
imulb
or
inc
cs
jg
into
into
stc
or
inc
sahf
mov
push
jbe
or
repz
or
sbb
test
xchg
hlt
push
les
div
mov
xor
cmp
psllq
lea
gs
dec
push
testl
ret
push
scas
das
popa
mov
popl
iret
es
insl
sbb
les
mov
push
test
sbb
mov
test
inc
scas
push
or
sub
mov
adc
repz
mov
or
loopne
mov
xor
gs
in
mov
sbb
sti
pop
or
mov
add
fldt
inc
pop
xchg
mov
pop
sbb
loop
mov
xlat
xorl
xlat
inc
leave
loopne
mov
mov
xchg
jg
push
push
jae
or
xor
push
add
aas
adc
cmpsl
mov
jge
dec
cltd
mov
out
inc
mov
add
mov
decb
shll
sti
pop
jecxz
popa
pop
adc
xor
mov
xchg
pop
mov
adc
push
rcrb
lcall
cmp
outsl
pop
dec
rorl
stos
push
jb
mov
dec
xlat
push
jecxz
les
xchg
addr16
in
jl
sti
inc
dec
xchg
mov
cs
out
mov
cmpsl
mov
fwait
or
pop
push
jl
dec
ds
pop
jecxz
shl
jae
stos
out
add
mov
jns
leave
push
icebp
mov
add
test
clc
mov
pop
idivb
xlat
dec
add
mov
mov
or
lods
idivl
aam
jb
stc
mov
adcb
std
aaa
xchg
adc
fmuls
popf
lds
arpl
inc
les
sub
loopne
xchg
or
fs
or
test
in
mov
lcall
mov
scas
movl
daa
mov
xor
mov
push
into
shlb
aad
in
popf
pop
loopne
adc
stos
xchg
fnsave
shlb
xchg
lods
das
fildll
insl
cmp
mov
leave
mov
testb
pop
push
mov
arpl
enter
lret
lods
xchg
and
xor
mov
adc
and
cmc
aad
loopne
mov
scas
dec
and
add
mov
inc
pop
loopne
aad
lock
adc
fwait
push
xchg
aam
cmp
fucomp
mov
or
ror
push
or
mov
pop
pop
jp
in
push
mov
push
imul
mov
pop
sbb
jns
pop
dec
jae
dec
adc
add
icebp
lea
sarb
jl
jns
xor
pop
mov
add
es
cld
daa
mov
dec
shll
pop
dec
push
xchg
pop
fistps
fwait
pop
jae,pn
or
and
lret
mov
mov
icebp
xor
mov
inc
fnsave
scas
pop
mov
pop
test
cltd
inc
out
loop
call
push
mov
aad
das
pusha
cmpsb
inc
push
insb
adc
jmp
out
data16
fisttps
push
test
mov
mov
adc
cmpsb
scas
subb
shll
inc
push
fwait
dec
lret
sahf
mov
aaa
pop
movsb
fnstcw
inc
fsubs
dec
add
loop
dec
in
insl
clc
add
mov
jl
fimull
mov
jmp
xchg
inc
mov
je
dec
loop
dec
setg
inc
std
mov
mov
mov
adc
dec
mov
xchg
call
cltd
push
movsb
je
mov
and
pushf
mov
mov
cmpsl
xor
pop
mov
dec
mov
mov
sub
mov
xor
movsb
sahf
mov
arpl
fnstcw
clc
sub
pop
xor
aaa
push
pop
jbe
xor
movb
adc
jecxz
hlt
mov
aad
dec
cmp
mov
bound
test
mov
subl
in
sbb
or
pop
cmp
cmpsb
adc
xchg
scas
mov
imul
stos
gs
sti
add
add
mov
sbb
push
mov
movaps
and
add
sub
fcmovnb
movsb
or
cmp
add
in
push
inc
hlt
ret
adc
or
lods
mov
adc
xor
mov
shr
mov
dec
push
cwtl
mov
mov
cs
sub
dec
xchg
out
in
mov
mov
sub
out
icebp
repnz
xor
insb
pop
out
adc
push
andb
lret
outsl
xchg
jp
cmp
ljmp
shr
mov
mov
mov
mov
mov
push
sub
pop
sbb
sbb
xor
fwait
arpl
push
cmp
and
jmp
cmc
and
lods
inc
xor
push
rorb
dec
popw
inc
jg
mov
fimuls
fadds
int
or
insb
cwtl
fidivs
stos
cld
in
psllw
scas
fwait
push
neg
sub
sub
or
jnp
das
jmp
sbb
xor
and
mov
and
push
xor
mov
jne
je
icebp
adc
cltd
mov
push
inc
adcl
push
lcall
rolw
pop
cwtl
les
rclb
loope
jge
push
popa
push
ret
push
in
sti
cmp
test
mov
push
inc
stos
push
dec
scas
fmuls
xchg
cmc
call
jge
sub
lcall
std
adc
dec
push
jecxz
ds
roll
xchg
and
xor
push
sbb
cmp
jnp
jne
adc
xor
gs
imul
dec
add
lods
adc
mov
cmpsb
adc
outsb
sub
lds
add
sbb
xor
inc
pop
jns
or
adc
mov
and
and
or
imul
and
sub
dec
adc
aas
test
mov
cmp
pop
test
test
stos
cmp
xchg
enter
lahf
push
mov
and
call
lahf
and
inc
je
push
pop
sbb
pop
outsb
cs
ss
add
pop
xor
mov
in
dec
je
js
movb
test
dec
mov
jmp
addr16
fs
aam
cmpsl
stc
and
cs
xchg
jbe
ds
sbb
cmp
pop
inc
mov
mov
daa
test
inc
mov
gs
nopl
aas
dec
dec
cwtl
imul
xchg
imul
xchg
mov
mov
in
lahf
mov
imul
ds
mov
xchg
dec
sub
xor
xchg
insl
dec
decb
or
or
scas
imul
out
xlat
fcoms
or
push
mov
mov
and
mov
dec
or
add
outsl
mov
repnz
insb
and
mov
fstl
call
sub
xor
push
int3
shld
jl
divb
push
mov
xor
mov
add
lock
popa
das
xorl
jge
adc
adc
jg
sti
icebp
out
es
mov
lret
jecxz
xchg
mov
lret
movsb
leave
xor
shlb
and
popf
mov
push
push
and
vmovsldup
xor
lea
lret
lock
les
mov
mov
add
pop
adc
push
pop
jb
mov
out
int3
addl
inc
andl
fs
movsb
or
xorb
lods
lea
repnz
or
inc
push
loop
sub
mov
imul
sub
jb
dec
fldl
mov
cmp
stos
and
ret
or
mov
sub
in
and
les
fadd
arpl
adc
ljmp
bnd
cli
push
dec
mov
loopne
mov
cmp
into
sbb
cld
dec
xor
shll
gs
cli
xor
push
cmp
mov
push
sahf
push
rcrl
je
or
mov
mov
mov
test
xchg
out
lods
mov
xchg
mov
or
adc
pop
push
add
fbld
cmp
das
sbbb
ret
mov
mov
inc
std
dec
dec
inc
or
ficomps
stos
inc
push
div
jnp
aam
xor
inc
fldl
outsl
mov
mov
push
les
test
jno
jno
out
jae
lds
nop
inc
mov
jmp
outsl
jl
xchg
test
loop
clc
jne
and
in
daa
sbb
sbb
and
or
dec
xor
iret
mov
inc
ret
adc
mov
mov
in
jnp
rcrl
xor
or
pop
pop
mov
cmpsb
movsb
pop
xchg
xorb
cmpsl
mov
scas
jb
pop
adc
mov
cmp
gs
cltd
and
mov
xor
inc
jb
xchg
lds
jb
addl
jg
dec
popf
add
pusha
xchg
add
leave
add
inc
int3
jp
sbb
mov
mov
aaa
sbb
lahf
or
xor
cmpsb
jns
rcrb
add
xchg
and
sbb
push
das
inc
iret
jb
pop
push
mov
push
cmp
mov
or
outsl
push
adc
mov
mov
lods
adc
cs
mov
sbb
repz
in
adc
xor
fiadds
aas
packssdw
adc
push
mov
or
std
cmp
and
xchg
sbb
add
jge
and
in
shlb
imul
sbb
pop
dec
jb
ret
iret
adc
cmp
xor
xorb
icebp
mull
pop
jecxz
or
into
xchg
push
inc
push
add
sub
nop
push
and
mov
xor
icebp
jg
fsubrp
ret
nop
mov
sub
sub
mov
fistpl
and
dec
push
in
dec
imul
add
into
cld
dec
mov
pop
mov
mov
faddp
in
filds
mov
push
push
cmp
inc
jmp
mov
dec
xchg
and
cmpsb
push
inc
sbb
xor
xchg
cmp
loop
adc
push
mov
xlat
cli
loopne
arpl
in
fcoml
xor
push
test
xchg
jle
mov
out
adc
xor
xchg
rcr
jge
inc
sahf
jae
jbe
adc
sub
movsb
leave
test
mov
mov
int
enter
cld
movsb
into
and
mov
jecxz
cld
adc
jo
pop
mov
aaa
in
nop
rol
and
ficoml
pop
cmp
jb
mov
pop
cltd
dec
je
jne
imul
cld
xchg
add
fstpt
fidivrl
dec
loop
mov
push
call
mov
mov
push
jmp
mov
rolb
and
lds
pop
clc
cs
fcoml
shll
sti
inc
mov
cmp
push
out
mov
mov
jecxz
xor
xchg
xchg
mov
loopne
push
stos
pop
pop
mov
cld
push
je
mov
int3
sarb
push
add
int3
outsl
pop
int3
aad
mov
push
pop
imul
rcr
push
out
scas
jl
xchg
mov
pop
mov
test
shl
clc
mov
js
cli
jae
add
aas
inc
sbb
push
aas
fsincos
sub
test
push
pop
scas
cmp
sbb
xchg
cmc
mov
inc
fnstenv
lods
ja
mov
jno
xor
sti
fldenv
dec
fldl
sarl
movsb
jle
repnz
inc
popf
sbb
das
mov
lods
inc
inc
xchg
faddl
inc
je
mov
out
icebp
sbb
xor
out
xorb
ficoms
inc
xchg
dec
mov
aad
sahf
test
or
xor
popf
push
lock
or
not
inc
and
jmp
popa
stc
and
stos
push
fdivr
add
roll
movb
push
pop
fcomip
dec
in
push
add
add
cmp
lret
cmc
imul
xor
inc
icebp
sub
xchg
push
das
cli
jo
jl
cs
ljmp
pop
mov
and
push
inc
adc
fnclex
bound
sbb
rolb
into
push
aaa
dec
inc
lret
scas
stos
xchg
sub
dec
stos
adc
pop
pop
mov
je
imul
or
mov
xchg
push
mov
pop
jno
call
fisttps
ds
or
dec
pop
popf
ret
cmp
pop
stos
test
push
inc
hlt
cmpsb
sarb
push
in
cmp
jl
mov
xor
lds
lea
mov
mov
insb
dec
adc
and
movsb
xlat
inc
xor
cld
jae
nop
jg
out
adc
jmp
dec
and
imul
aad
push
imul
sbb
jne
push
in
jp
aad
pop
cs
sub
cmp
lahf
test
dec
or
and
call
es
loop
push
int
xchg
sbbl
pop
sbb
ljmp
dec
lret
out
and
xor
and
xchg
sbb
xchg
adc
sub
imul
add
test
cmc
sub
adc
test
lds
xchg
push
sbb
js
fisttps
cmpsl
or
mov
jb
mov
lods
pop
or
shr
mov
mov
or
jmp
pop
insl
sub
cmp
icebp
or
scas
lea
push
sub
push
push
mov
out
fwait
adc
in
push
call
ftst
jg
int
push
dec
out
hlt
xor
test
sub
icebp
leave
mov
mov
aaa
adc
jmp
mov
das
jmp
aad
push
or
xchg
inc
xchg
jmp
xchg
ja
addr16
or
dec
movsb
scas
mov
inc
loop
insb
dec
movsb
xor
cmc
dec
insb
out
repz
inc
popa
test
jge
cmp
data16
xorl
xlat
sbb
fadds
mov
xchg
in
xchg
insb
loopne
gs
and
pop
leave
and
fsubs
leave
loopne
add
cld
mov
mov
mov
ficomps
add
mov
out
mov
movsl
xorl
jp
dec
insl
aad
scas
xchg
xor
mov
mov
repz
jne
adc
push
imul
sahf
inc
xor
xor
aam
jae
out
sub
leave
xor
lea
sarl
stos
jle
scas
int3
fs
das
pop
rcrb
cmp
btc
inc
adc
hlt
dec
xchg
stc
sbb
lods
cmp
movsb
add
mov
clc
xor
arpl
jecxz
sbb
int3
and
icebp
jecxz
and
test
push
sub
xorl
mov
cld
inc
insb
and
adc
jns
cwtl
mov
mov
xor
test
adcl
jmp
into
push
bound
and
fcmovb
dec
lea
insb
mov
push
and
test
arpl
push
push
sbb
mov
movsb
shrb
stc
cli
lahf
leave
cmpsl
xchg
cmp
xchg
lods
cmp
inc
inc
movsl
jbe
inc
inc
lods
cmpb
mov
lahf
adc
movsl
add
mov
xor
into
push
inc
lahf
iret
mov
add
andps
xor
cmp
pop
leave
jle
test
repnz
in
xor
fs
mov
mov
jle
movsb
data16
insb
and
setb
xor
dec
cmpb
inc
jmp
jge
jmp
jae
sbbb
adc
daa
ror
dec
out
cmp
mov
je
es
pop
pop
in
ror
adc
xchg
xchg
lcall
lret
and
dec
js
neg
mov
inc
or
fidivl
pop
das
pop
enter
faddl
test
mov
imul
jno
cmp
fdivrl
orl
pop
mov
and
mov
xchg
jge
fwait
mov
xchg
movsb
repz
out
push
std
xor
sbbl
int3
jmp
imul
cs
push
jl
push
cmp
jp
cmp
and
add
dec
mov
lods
pusha
push
hlt
fistps
sbb
add
inc
leave
xlat
insb
fstps
addr16
mov
stos
or
mov
push
dec
cld
mov
in
daa
lret
jns
fucomi
adc
mov
jae
pop
pop
ja
jg
out
or
fnstenv
lods
push
mov
out
cld
sub
inc
sub
loop
aaa
adc
out
addr16
sbb
or
sbb
push
sbb
push
xchg
fimuls
jmp
int3
add
cmp
mov
or
jbe
jno
adc
stc
sub
mov
jecxz
int
insb
sub
pop
call
add
xchg
pushf
mov
mov
sbb
jle
fbstp
stos
mov
add
xor
imul
ret
jae
cmc
loope
xchg
push
mov
insl
stos
neg
jmp
push
lea
and
imul
dec
dec
or
ss
roll
rorl
and
ljmp
hlt
xor
ds
pop
cmpl
aam
hlt
cmp
or
lock
cmc
sbb
xor
cmp
notl
cmp
loopne
xlat
cmp
mov
sub
dec
and
xor
push
loopne
push
adc
push
jae
xor
pop
jae
push
ret
xor
in
xchg
sub
inc
ss
inc
popa
mov
dec
aad
test
xchg
ret
dec
jbe
addb
stc
in
and
pop
test
aam
xchg
out
xchg
and
pop
rcl
cmp
xor
inc
sti
insl
imul
rcll
xchg
dec
popf
dec
es
jmp
push
ds
sub
mov
add
cld
ljmp
and
cli
fcoms
pop
mov
cli
inc
adc
add
addl
lea
mov
pop
cmpb
outsb
ss
in
fcmovb
loopne
pop
cli
fstps
inc
sbb
cmp
out
dec
pop
arpl
push
xchg
jbe
dec
push
inc
js
fsub
pusha
imul
in
jg
lcall
mov
ja
sbb
sbb
push
jo
mov
sub
and
outsl
out
aaa
fisttpl
mov
jns
pmullw
in
push
xchg
je
xor
dec
and
pop
test
fistl
sbb
call
cmpsb
and
test
test
sti
es
inc
test
pop
cmp
push
push
mov
dec
xchg
xor
xor
enter
add
ss
out
sbb
test
aad
jge
js
xchg
shl
xchg
ja
jns
loope
sub
js
xorb
mov
cltd
mov
sub
jecxz
sub
adc
push
and
cmp
call
mov
jge
dec
mov
sub
popf
xchg
inc
push
cwtl
inc
int3
or
mov
cwtl
mov
test
mov
cli
inc
and
rcl
adcl
ljmp
adc
cmp
mov
mov
jnp
adc
xlat
stc
cmpsl
scas
xor
outsb
mov
lahf
mov
jge
sub
cmp
arpl
ret
jg
sbb
dec
or
cmp
fcmovu
ficompl
cwtl
cvtdq2ps
jle
push
mov
in
sbbl
sbb
fstps
lea
or
adcl
nop
rcrb
adc
and
ffreep
pop
lret
xchg
push
sub
testl
mov
mov
fsubrl
bound
das
pop
das
cmp
push
and
jge
push
jno
xor
adc
test
iret
add
inc
push
xchg
cmp
pop
pusha
addb
sbb
andl
stos
divl
push
pop
mov
popa
mov
dec
add
nop
sub
pop
lods
sub
or
daa
sub
imul
pop
sbb
xchg
sarb
ret
dec
es
les
mov
dec
loop
sub
loop
clc
pop
popa
je
add
mov
je
inc
jmp
stos
jbe
or
fwait
push
loope
cmp
rorb
aaa
inc
dec
mov
inc
mov
mov
xor
mov
ret
dec
es
lret
popf
shlb
cwtl
mov
sub
mov
leave
xor
jb
arpl
sub
fadds
jmp
testb
xchg
pop
jnp
pop
incb
aaa
jl
mov
mov
fiadds
std
mull
aam
inc
jg
je
leave
cmp
mov
push
sahf
sub
or
test
pushf
xchg
scas
adc
das
jae
mov
jnp
int
lahf
repnz
mov
xchg
jecxz
leave
add
ret
mov
jg
xor
sahf
test
push
mov
pop
mov
mov
outsb
movsb
out
mov
cmp
nop
movsl
out
test
sub
push
mov
xchg
mov
xchg
into
loop
fildll
loopne
inc
fwait
jp
cmp
mov
or
push
mov
cmp
scas
xor
inc
rcrb
aas
fwait
inc
mov
xchg
aam
pop
mov
xchg
sbb
xor
lods
fbld
insl
insl
jmp
insb
push
xor
addr16
sub
inc
andb
adc
jge
jecxz
or
ljmp
xor
jge
and
pop
mov
fnsave
popa
xor
jle
sub
inc
cmc
popf
mov
rcl
mov
mov
arpl
aas
cmp
out
inc
popf
mov
mov
ds
adcl
inc
cmp
enter
xchg
jne
adc
push
popf
lods
pop
mov
inc
xor
adc
cmp
and
out
int
subl
js
jbe
shlb
sbb
je
fmul
mov
xchg
inc
mov
mov
lcall
loopne
out
mov
mov
movb
pusha
jmp
ss
movsl
in
jae
pop
xor
adc
outsb
and
iret
xorb
mov
scas
test
enter
adc
repz
ret
fstp
and
mov
in
cwtl
daa
mov
mov
and
xor
or
repnz
cmpsl
notl
shl
xchg
or
into
hlt
cwtl
cmp
jecxz
pop
push
popa
pop
daa
sub
push
aaa
push
lret
or
mov
scas
imul
cld
loope
add
jp
mov
ja
fwait
mov
jle
outsl
jmp
test
xor
xchg
in
xor
scas
cmp
jb
gs
xchg
dec
sti
mov
das
sahf
cmp
shlb
mov
xchg
xor
ret
loope
jns
lock
pushf
and
in
cmp
push
or
data16
mov
mov
imul
fiadds
sbb
scas
xchg
ret
out
imull
inc
adc
ret
insb
xor
pop
nop
or
jne
insb
jo
pop
sbb
pop
pop
push
sub
insl
jp
sbb
ds
add
jnp
verr
inc
popa
pop
inc
call
mov
rcl
cs
mov
icebp
sbb
pusha
lcall
es
push
xchg
pop
les
in
jge
dec
or
sbb
cld
test
call
sub
dec
sub
and
lret
imul
jno
test
adc
push
xchg
push
pop
in
mov
loop
lcall
xchg
jecxz
cld
mov
cmp
adc
cmp
popf
les
inc
cltd
ljmp
and
cmp
mov
sbb
lods
push
xchg
inc
adc
scas
nop
icebp
shlb
pop
scas
ret
icebp
adc
and
sahf
pop
rcl
repz
adc
and
lahf
mov
mov
ret
stc
imul
andb
gs
pop
pop
mov
sarl
push
dec
pop
or
dec
sbb
into
or
or
jb
inc
cmp
dec
sub
xchg
sti
out
shl
pop
fwait
test
push
test
push
push
pop
sti
mov
repnz
gs
xor
ljmp
mov
and
loop
or
mov
dec
mov
outsb
sub
push
in
sub
adc
mov
jl
or
in
mov
fxch
push
xchg
scas
push
mov
cmp
mov
into
test
rclb
int
mov
sub
lahf
sub
jne
iret
mov
jge
pop
add
fdiv
push
xchg
cmp
push
clc
xchg
xor
inc
scas
sub
mov
cld
cmp
and
pop
cwtl
jl
cld
adc
mov
stc
call
mov
repnz
ret
xor
mov
fs
xor
ljmp
in
add
pop
mov
lahf
test
sti
imul
xchg
mov
gs
and
lods
xchg
and
rclb
jb
pop
dec
mov
mov
xchg
jbe
fs
ja
into
out
stc
mov
push
repnz
lock
adc
ja,pn
mov
dec
adc
arpl
loopne
sub
or
inc
int3
in
pushf
jle
idiv
cmp
inc
popf
adc
sub
push
mov
sbb
and
clc
repz
insb
xchg
cmpb
aaa
das
and
dec
loopne
pop
outsb
scas
ds
mov
dec
mov
lret
mov
outsl
push
jecxz
pushf
pop
xchg
pop
loopne
in
out
pop
mov
or
jnp
push
or
jno
cs
pop
daa
sub
jb
dec
jl
inc
add
test
push
imul
jmp
pop
xchg
push
jmp
int3
xlat
sub
inc
mov
rorl
xchg
movsl
std
loopne
int3
xor
mov
subb
fistps
dec
mov
ret
add
sbb
inc
data16
leave
lock
mov
dec
std
aas
mov
cld
sub
jns
repz
cld
jae
mov
icebp
fldl
lret
add
ss
sbb
filds
out
mov
add
and
xor
negb
out
icebp
push
ljmp
pop
popl
dec
mov
xor
jbe
add
negl
mov
in
fwait
gs
mov
inc
in
bound
incl
cli
pop
and
adcb
adcb
cs
cmpsl
popf
enter
mov
loope
xchg
pop
jge
sub
icebp
ret
adc
mov
jns
or
out
cmp
jo
cmpsl
xchg
push
mov
mov
ficoms
mov
fisttpll
cwtl
fldl
add
mov
xor
sahf
pop
or
outsb
popf
sub
popa
shrl
and
sbb
add
add
mov
pop
sbb
leave
movsb
jg
and
call
cmp
repz
cwtl
xor
add
pusha
insl
ret
inc
push
sbb
jecxz
mov
call
xor
jmp
jge
loope
stc
sub
jmp
cmpsb
xor
lods
or
jo
loopne
data16
jecxz
in
cli
mov
pop
push
push
stos
cmc
adc
push
sub
cmp
jecxz
push
mov
int
adc
js
xchg
cmp
aaa
fwait
outsb
inc
mov
ret
add
sub
lea
sti
inc
sub
data16
pop
add
mov
or
cmp
ret
mov
adc
push
aam
in
pop
ret
xor
jno
adc
loopne
movsb
ds
mov
adc
mov
pop
pop
shlb
sub
dec
cltd
mov
sbb
pop
dec
jp
les
aad
mov
push
add
in
mov
shl
insb
cmp
gs
cmp
scas
jae
dec
int
iret
adcl
aaa
ja
dec
dec
ret
and
add
pop
insb
cmpsb
rolb
and
mov
xor
daa
or
outsb
call
jo
bound
or
mov
hlt
or
mov
fdivl
adc
jbe
inc
repnz
jge
std
lods
fisttpl
mov
sahf
mov
lret
test
sahf
push
cmpsb
andl
fiadds
and
imul
jnp
mov
xchg
pop
cltd
sbb
adc
push
sub
roll
clc
in
jg
gs
addl
and
push
ja
push
and
jno
or
pop
rol
push
mov
inc
sti
lret
xchg
xor
out
xchg
push
insl
sub
mov
jb
pop
mov
pop
push
imul
enter
and
and
jns
cld
push
fildl
fldl
push
xchg
ret
fs
daa
sub
add
int
jno
ja
das
xor
gs
out
push
jg
jecxz
sbbl
testl
scas
imul
js
adc
stc
and
jecxz
sbb
in
enter
jl
lock
jbe
sbb
sbb
scas
inc
nop
loope
jb
lcall
dec
dec
dec
es
dec
xchg
add
in
jo
decl
inc
jl
lds
cmpsl
jmp
sub
fidivrl
jg
cmp
xchg
mov
adc
jge
scas
ret
in
or
fwait
and
jbe
push
mov
or
pop
ds
in
adc
out
loope
jnp
pop
push
sarl
add
pop
sbb
out
lret
and
shll
pop
jecxz
push
or
clc
clc
sub
test
cmpsb
iret
or
pop
mov
inc
sahf
sub
ds
aaa
xor
sub
inc
mov
cmc
add
inc
xchg
pop
ss
repnz
sub
cmpl
inc
movsl
fwait
adc
sti
xchg
push
sbb
fdivrl
fisttpll
jg
aad
movsl
and
cmp
imul
stc
stos
js
or
xor
enter
add
cmc
add
loope
xchg
cli
sub
jle
add
shlb
pop
xor
test
aaa
inc
push
sbb
loope
movsl
xchg
pusha
outsb
loope
cli
iret
lds
js
fdiv
mov
leave
xor
dec
push
cmpsl
mov
outsl
xor
lahf
jge
xchg
push
push
jecxz
sbb
adc
sbb
fisttps
pusha
xchg
or
dec
sub
pop
jbe
ljmp
int3
sub
dec
inc
inc
inc
push
add
or
hlt
xchg
adc
mov
mov
daa
imul
jmp
xchg
pop
mov
aad
loope
in
js,pt
jle
xor
mov
pop
mov
loopne
dec
fwait
add
jmp
fistl
mov
add
mov
lds
pop
inc
mov
lahf
sbb
lods
jecxz
or
jbe
ret
imul
jns,pt
jg
andl
hlt
cli
mov
mov
nopl
orb
cmp
sahf
aam
cmpsl
or
mov
sbb
or
sub
addr16
in
sarb
lahf
fistl
into
push
pushf
cmc
outsl
adc
xchg
stos
ds
pop
inc
hlt
bound
add
dec
push
cltd
push
mov
jb
jg
idivl
sbb
push
add
cmp
inc
add
lock
in
xchg
dec
push
cli
dec
loopne
jmp
popf
imul
pop
int3
inc
xor
mov
shrl
inc
out
xchg
inc
mov
fcoms
mov
mov
jo
mov
inc
mov
pcmpgtd
sub
xor
aaa
mov
loope
xchg
pushf
arpl
dec
outsb
in
movb
and
jecxz
push
sahf
mov
andl
mov
cmp
cmpsl
mov
dec
jne
stos
pop
fcmovnb
movl
mov
xchg
mov
sbb
int
lock
add
jge
push
push
ss
adc
fldl2t
mov
mov
lea
mov
mov
dec
inc
lds
dec
mov
mov
jmp
cmp
je
inc
xor
jne
jecxz
jb
std
adc
sarl
adc
int
jns
mov
stos
inc
inc
or
das
push
sbb
js
sbb
test
mov
cmp
xchg
jg
dec
cmc
sub
xlat
cmp
xchg
pop
jle
loope
sbb
mov
or
fwait
sub
add
shr
cltd
out
and
loop
ficoms
mov
movl
xchg
stos
dec
sbb
sub
xchg
neg
pop
xchg
mov
test
inc
cmp
lret
xchg
add
jne
icebp
sub
jge
sbb
popa
xor
outsb
mov
mov
leave
dec
pop
js
jge
addr16
cmp
sub
push
in
jbe
pop
movl
aaa
enter
mov
rorb
in
sub
adc
imul
xchg
xchg
jmp
sti
cmp
std
mov
fs
adcb
ljmp
setl
and
loopne
scas
sub
cld
sub
fimull
push
pop
pop
repnz
cs
lahf
pusha
xchg
in
cmp
adc
adc
lods
lods
push
pop
fucom
loopne
mov
and
cmpsl
dec
dec
movsl
xor
mov
out
out
mov
xchg
mov
loope
mov
je
fwait
jne
int
call
sbb
andl
xor
inc
dec
les
push
lods
or
fidivrs
jb
push
addl
or
sbb
push
cld
push
in
push
fstl
stc
out
and
push
data16
push
adc
mov
jns
mov
inc
cwtl
or
faddp
gs
mov
sub
pop
push
xchg
scas
mov
xchg
adc
mov
ja
mov
sub
push
imul
popf
test
inc
sbbb
push
add
mov
dec
fstpl
sbb
lods
xor
xor
xor
roll
in
or
loope
jg
or
pop
adc
push
xor
pop
xlat
shll
and
and
lcall
inc
dec
bound
aaa
inc
inc
jo
mov
pop
leave
and
shrb
stc
mov
into
ja
push
add
out
int
push
xchg
pop
cwtl
xor
popf
or
sbb
sub
cmp
mov
mov
adc
add
mov
stc
pop
hlt
cmc
fisttpll
jb
jnp
js
ljmp
xchg
add
fists
xor
cmp
in
mov
push
test
xchg
push
pop
mov
inc
sarl
scas
fmulp
imul
cld
dec
cmp
add
arpl
dec
mov
cmp
add
cmpsl
inc
lods
adc
dec
outsb
mov
push
loop
xor
sbbl
adc
gs
cwtl
cmp
inc
xchg
push
in
aaa
xor
cld
or
aaa
jbe
cmc
pop
or
insb
popf
addb
mov
outsl
xlat
mov
mov
out
sub
call
aam
xchg
int
sti
or
fcmovne
aam
adc
pop
mov
cwtl
sub
insb
gs
mov
mov
push
mov
and
call
push
jle
iret
cmpsl
sub
fwait
cmp
add
sbb
mov
jnp
mov
ja
sbb
hlt
pop
sub
pop
adc
jne
jge
mov
pop
fcompl
fstpt
sub
mov
jmp
dec
jnp
mov
fucomi
cmp
xlat
jae
bnd
nop
xor
jge
lret
mov
imul
dec
iret
mov
jg
add
sbb
mov
es
test
mov
dec
jg
movsl
outsb
inc
sbb
sahf
dec
mov
leave
cwtl
jle
out
pop
push
mov
out
xchg
jg
lds
mov
pop
enter
ret
cwtl
mov
pop
or
sbb
lds
mov
out
outsb
sbb
xchg
insb
mov
insl
jecxz
fadd
adc
sar
add
and
cwtl
fsubl
into
aad
xor
std
or
dec
sub
ror
idivl
jns
fiadds
cmpsl
mov
in
xor
jb
in
jle
ret
pop
mov
or
jl
fcmovb
sub
sbb
pop
fistpll
ficoml
xchg
mov
dec
jmp
pop
dec
repnz
xchg
lds
es
repz
movsl
aad
pop
scas
popa
pop
cli
int3
clc
loope
xchg
pop
icebp
repz
mov
ljmp
or
inc
jmp
mov
stos
lock
cli
stc
jmp
push
xor
xchg
sub
xchg
aad
mov
sub
inc
int3
or
mov
lret
cwtl
adc
imul
sbb
inc
cmpl
xchg
sbb
dec
inc
push
sbb
jp
xchg
mov
daa
push
movsb
sbbl
ret
movsl
mov
and
in
cmp
cmpsb
loop
lcall
rcrl
mov
lods
inc
pop
daa
xchg
xchg
jecxz
in
mov
sub
add
jne
faddl
sbb
iret
or
adc
cmp
mov
imul
ja
stc
btr
lea
xchg
xor
out
ss
out
test
fwait
cmp
push
and
pop
sub
popf
int3
pop
add
rorl
out
dec
push
adc
lods
jnp
push
movsl
sub
mov
hlt
addr16
pusha
mov
mov
sub
test
lret
aad
ret
ret
xchg
ss
test
inc
shl
fucomp
mov
outsb
out
cmpsl
sbb
fs
pusha
shlb
push
or
cmp
jge
mov
hlt
test
mov
mov
sahf
cmp
push
inc
repz
xor
int3
xchg
mov
cmp
repz
das
out
push
decb
pop
int3
push
xchg
mov
bound
pushf
negb
adc
xchg
scas
mov
cmc
mov
hlt
xor
out
in
pop
sub
gs
ds
imul
rorb
pop
out
jns
in
push
nop
jb
jg
outsl
movsb
notb
mov
jno
and
sti
dec
push
adc
inc
jo
out
popf
out
jns
mov
and
call
fwait
adc
mov
or
lcall
fcomps
dec
cld
aam
mov
jge
dec
lahf
dec
push
ret
icebp
pop
pop
or
mov
mov
mov
dec
xor
sub
outsl
mov
test
and
cmpb
or
mov
sub
dec
aam
jmp
jl
jl
lahf
das
jne
push
loop
mov
das
rolb
pop
sub
cmp
xchg
xchg
fwait
rclb
aaa
jnp
xchg
cmp
mov
out
adc
insl
das
jge
mov
pop
ret
or
cmpsl
mov
xor
push
fmuls
test
adc
sub
aam
jne
push
and
xchg
cli
es
scas
jl
mov
jp
stos
ljmp
mov
dec
and
js
mov
and
out
out
adc
or
sub
ds
aam
jle
sbbb
pop
xchg
enter
lods
clc
add
iret
icebp
add
ds
fildl
js
jo
test
xlat
sbb
or
push
mov
push
lock
sub
or
jne
shl
insl
jae
dec
shlb
sub
int3
adc
loop
loopne
sub
add
mov
pop
adc
into
xor
or
jbe
enter
loope
enter
add
adc
and
and
inc
repz
mov
arpl
adc
inc
insb
les
ljmp
mov
mov
and
mov
pop
push
jmp
xchg
jg
es
test
leave
out
sahf
add
insb
stos
push
movsl
lock
cmpsl
fists
sti
mov
push
mov
xchg
mov
push
mov
jmp
mov
add
int3
adc
xor
adc
or
out
insl
mov
dec
call
dec
inc
add
sub
enter
cld
daa
cltd
sar
mov
sbb
sub
xor
mov
cmp
loope
mov
movsb
pop
imul
xchg
addb
jecxz
and
and
aaa
xchg
jno
pop
out
cmp
push
scas
mov
mov
fstl
ljmp
jle
movsl
pop
sub
adc
std
jg
cmpb
mov
nop
cmc
dec
cli
inc
mov
leave
outsl
add
out
in
bound
mov
inc
mov
push
mov
jge
mov
add
xchg
add
or
aaa
mov
cltd
pop
push
dec
sub
push
in
loope
ss
adc
insl
mov
jnp
push
add
jne
cmpl
loop
add
or
fistpl
mov
mov
mov
lahf
iret
or
loopne
pop
outsb
adc
ljmp
mov
movsl
add
outsb
bound
dec
loopne
popf
fmulp
aad
or
push
fstpt
cmp
xchg
mov
aas
jmp
mov
add
pop
inc
ss
pushf
jo
jl
dec
cmp
out
mov
or
jo
movsb
add
mov
clc
cmp
stc
hlt
aaa
cmp
sbb
xor
stos
pop
loope
repnz
scas
enter
and
mov
ret
imul
adc
movsl
ret
jb
fldl
out
cmp
ret
add
daa
push
ret
inc
shll
mov
stos
push
into
rorb
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
xchg
adc
sub
push
push
mov
jo
enter
adc
push
rcrb
dec
mov
pop
fcomps
dec
dec
cmp
scas
push
mov
cmpsl
push
cmp
add
push
mov
mov
sbb
dec
pop
mov
lds
roll
loope
in
mov
mov
inc
lcall
jle
cmp
mov
and
inc
scas
adcb
je
cmpsb
sti
mov
jl
iret
xchg
cmp
mov
push
add
push
jp
jmp
sub
icebp
out
push
stc
push
inc
pop
add
andb
or
sub
dec
fnstcw
mov
jns
data16
movb
jecxz
mov
or
sar
out
subl
imul
das
lods
scas
ss
faddl
les
xchg
jae
and
sub
jo
xchg
pextrw
cmp
add
clc
pop
adc
and
lret
lea
sbb
lods
loopne
outsb
cld
add
lret
mov
dec
or
ss
xor
inc
popf
sbb
dec
jno
or
lret
std
mov
push
or
mov
mov
inc
pop
lea
mov
cmp
or
mov
mov
jmp
enter
push
jbe
pop
push
roll
push
push
xchg
push
shl
mov
js
mov
je
pop
fwait
xchg
data16
mov
addl
or
aaa
aaa
test
out
dec
roll
mov
xor
mov
fwait
in
jo
push
sbb
lds
dec
sub
push
jbe
lret
xchg
mov
push
xor
push
jl
icebp
cmp
mov
xor
inc
jmp
insl
ljmp
pop
ret
fldcw
mov
jmp
inc
xrelease
xchg
cwtl
push
inc
mov
jge
sbb
cmp
rcrl
test
scas
cmpsb
jb
scas
xchg
imull
mov
add
aad
test
insb
cli
sbbl
xor
and
jge
std
sarl
pop
aaa
mov
fsubrl
xchg
enter
in
int3
sub
and
in
addr16
sbb
popf
enter
push
mov
stos
popa
dec
sbb
xchg
jnp
push
in
fnstsw
xor
mov
mov
mov
leave
and
xor
mov
push
js
cmp
mov
inc
xlat
mov
mov
insb
test
dec
dec
cmp
xor
push
sahf
imul
in
cmc
or
mov
iret
test
pop
push
sbb
jnp
mov
cwtl
mov
scas
pushf
hlt
sahf
in
fwait
aam
sub
inc
call
pop
dec
cmc
dec
ss
mov
and
sub
cmpsl
pop
xor
and
push
and
out
test
arpl
xlat
jae
pushf
dec
sbb
pop
jns
cli
mov
cld
outsl
or
inc
inc
dec
daa
aaa
loopne
dec
mov
or
push
xchg
bound
inc
xchg
fsubs
call
mov
jle
pop
les
dec
sti
seta
out
jle
mov
outsl
pushf
loope
arpl
mov
ljmp
inc
pop
mulb
or
sub
aaa
sbb
imul
add
dec
in
lea
sub
orb
push
mov
mov
std
sub
cs
xor
mov
stos
and
or
xchg
mov
cmp
movsl
add
xchg
xchg
decb
inc
divb
popf
push
lea
mov
add
out
mov
jmp
sub
jmp
arpl
idivl
push
cs
push
lret
mov
mov
cmp
mov
mov
cs
sbb
push
adc
xchg
lcall
push
inc
mov
int3
jb
popf
call
sbbl
push
loop
and
mov
outsl
mov
aam
pop
in
mov
sbb
call
rorb
cmpsl
dec
jmp
mov
push
inc
rorl
mov
es
rorb
mov
ljmp
lcall
jno
icebp
add
lds
xor
loopne
push
mov
push
in
sbb
fiadds
and
hlt
fcomp
std
add
stos
push
test
jnp
mov
sub
xchg
xchg
push
mov
mov
int3
lods
icebp
dec
jno
cmpsb
mov
adc
mov
sbb
pusha
xchg
add
cmpsl
mov
xchg
test
or
cmpsl
loop
pop
movsb
push
mov
or
sub
pmaxsw
jns
idivb
sbbb
lret
or
imul
xor
ljmp
lret
inc
jo
jb
inc
sbb
fsub
and
inc
mov
and
orb
cs
pop
aam
xor
stos
dec
sub
ds
sub
in
and
dec
loop
inc
xchg
or
pop
inc
stos
sbb
pop
sub
adc
ds
cs
lods
cmpl
and
sub
ss
cmc
pop
xor
inc
xor
lret
out
das
ds
int
jmp
ficompl
or
adc
dec
jecxz
jg
and
dec
stos
xor
mov
inc
dec
xchg
lcall
cmpsl
out
xchg
adc
loop
add
es
adc
jge
mov
xor
mov
sbb
push
cmp
xchg
mov
pop
mov
stos
sub
ja
pop
into
pushf
stos
sarb
in
inc
lahf
jmp
add
inc
clc
mov
or
sub
jle
fmulp
repz
scas
movsb
es
cmp
popa
and
xchg
das
mov
push
mov
jle
and
aaa
sbb
in
adc
mov
sub
fdivrl
enter
xchg
notw
xor
mov
shll
sub
dec
and
loope
insl
insl
cltd
adc
cld
cmpsb
mov
sub
stos
icebp
imul
mov
out
test
iret
loopne
outsb
je
jmp
sub
jmp
fs
lret
jne
pop
add
repnz
lcall
popa
test
addb
push
xchg
lret
push
push
mov
cmp
cld
mov
mov
jmp
mov
outsl
cmpsb
push
or
daa
int
jge
movsb
stc
mov
test
push
fdivrp
lret
mov
test
cmp
mov
adc
lods
push
jg
call
cmpsb
adc
mov
stos
mov
cld
pop
daa
xchg
pop
xor
mov
ja
negb
ja
dec
popa
xlat
cmp
nop
push
and
fisubrl
mov
lods
lods
pop
imul
mov
add
adc
addb
jg
mov
pop
xlat
pop
imul
push
inc
push
test
sub
lock
rclb
sti
fnsave
mov
dec
mov
and
jns
test
or
lret
in
cmp
xchg
xchg
in
stos
mov
fs
fsubrl
xor
jns
repz
cwtl
pop
mov
filds
inc
in
add
jae
pop
lock
and
jnp
xor
sub
mov
sub
fistps
out
sub
dec
mov
mov
adc
out
mov
xchg
scas
dec
mul
add
lret
xor
imul
mov
lds
mov
push
js
push
xchg
cmp
xchg
sbb
add
repz
cmpl
cmp
in
mov
jnp
loop
mov
arpl
and
out
imul
xor
push
xor
mov
cltd
mov
push
jge
sbb
sbb
fldl
xor
movsb
push
pusha
fwait
popf
jle
pop
inc
testb
es
xchg
xlat
ljmp
push
and
pushf
and
mov
mov
xor
pop
jo
andl
mov
dec
pop
xor
cmc
or
or
cmc
ljmp
js
push
lock
lea
clc
je
lcall
inc
sub
or
ja
enter
lret
mov
clc
in
int3
inc
xor
pop
xchg
stc
loop
iret
aas
sub
cmp
dec
lret
aas
imul
dec
in
mov
jmp
xchg
xchg
and
pushf
pusha
xchg
push
sbb
jecxz
push
call
dec
movsl
bound
push
mov
push
sarl
push
shlb
ja
lret
lock
dec
sub
jl
push
mov
insl
mov
mov
cmp
arpl
add
outsb
pop
test
adc
fnsave
inc
addr16
mov
inc
cld
pop
sti
dec
xor
inc
movsb
or
cmpl
aaa
popa
ret
and
int3
xchg
cmp
mov
cmpsb
movsb
rcl
jge
dec
ficoms
dec
mov
ja
push
pop
mov
cli
pop
push
push
jnp
das
gs
negb
pop
or
pushf
jae
shll
lods
imulb
sub
out
pushf
lods
xchg
or
testb
xor
jo
ljmp
jo
addl
push
cltd
outsb
jmp
push
sahf
dec
test
cmpsb
jge
inc
jg
cmp
dec
scas
roll
adcb
jnp
xor
xchg
add
fbstp
push
and
icebp
mov
fst
jo
push
fmuls
push
push
sbb
addb
fidivl
add
xor
or
or
mov
and
push
mov
or
jmp
xor
and
inc
sbb
out
cmp
adc
jae
and
test
and
cmc
xchg
cmp
out
jmp
adc
cld
sub
dec
out
gs
pusha
outsb
adc
std
cmc
push
mov
add
sub
mov
ret
ret
out
push
adc
jbe
loopne
cmpsl
mov
mov
fwait
jp
clc
lret
add
aam
ds
adc
into
xchg
inc
jno
mov
ficoml
pop
cmp
adc
stc
or
fdivrs
xchg
aad
loope
insl
sbb
shl
mov
pop
lods
mov
dec
cmp
xchg
xor
dec
sub
add
xor
in
pop
cmc
inc
xor
in
imul
sbb
pop
cmc
push
inc
add
push
lock
or
mov
sub
xor
sti
nop
je
push
mov
mov
xor
and
inc
call
js
or
lcall
in
test
ds
or
nop
je
ficoml
xorps
sbb
mov
sub
je
adc
repz
in
out
lret
ds
mov
adc
sub
enter
call
ret
jge
iret
push
pop
xor
lea
jmp
scas
sbb
pop
test
mov
pop
outsl
das
inc
loopne
cli
mov
mov
in
dec
ret
add
repz
movsw
jl
cwtl
jns
and
inc
int
cmpsb
xchg
fstps
popa
lods
sub
inc
jmp
mov
dec
dec
lret
mov
lock
mov
orl
or
mov
push
mov
testb
stos
mov
cwtl
ljmp
xchg
xchg
sbb
add
lret
inc
cs
jbe
xchg
inc
mov
adc
dec
push
pop
aaa
or
mov
rorb
pop
mov
in
mov
mov
fildll
xlat
ret
stos
mov
rorb
xor
or
jbe
aaa
dec
mov
clc
and
rcr
es
push
andb
dec
jg
jg
mov
call
push
lcall
fstpl
sub
jne
mov
mov
insl
add
jb
cmp
loope
add
adc
dec
mov
arpl
pop
push
mov
push
ja
inc
adc
mov
stos
daa
jbe
xchg
faddl
mov
loop
xchg
ret
dec
push
pop
mov
imul
ror
adc
dec
sahf
jl
mov
ret
pop
ljmp
dec
xchg
jae
pop
sub
setns
xor
insl
flds
cmpsl
insl
pop
mov
jge
adc
or
pushl
mov
fists
loopne
or
jmp
push
mov
lcall
lods
cmp
nop
mov
jbe
adc
fdiv
fsubl
ret
inc
jle
inc
lods
sub
and
mov
int
test
mov
jne
lcall
packuswb
test
out
subl
push
test
leave
add
sub
dec
sub
or
cli
into
icebp
xor
fisubs
mov
lea
fldl
std
pusha
ja
push
xor
in
mov
std
xchg
push
int
mov
mov
sub
xchg
add
xchg
add
mov
push
std
inc
fisubs
dec
nop
dec
adc
cmp
mov
repnz
iret
xchg
inc
cs
cmp
aaa
lahf
fdivl
and
ja
push
or
daa
pop
out
fiadds
dec
sub
fildl
stos
imul
sbb
push
dec
test
les
enter
push
neg
fiadds
sbb
pop
ja
addb
add
add
push
add
stos
xchg
push
lds
ja
jb
adc
in
jmp
lods
movb
and
bound
push
pushf
das
pop
push
shrl
or
lcall
mov
hlt
imul
ret
mov
scas
mov
cmpsl
lods
add
jne
push
out
sar
inc
xor
mov
inc
pop
xor
pop
inc
push
adc
lock
pop
jge
mov
add
pop
outsb
cmp
das
popa
icebp
xor
pop
int
rorb
ljmp
cli
call
push
pop
test
nop
or
cli
mov
icebp
xchg
fdivl
add
jbe
mov
inc
sbb
in
leave
sbb
fldcw
and
or
scas
mov
xchg
cmp
sbb
adc
mov
mov
xor
fnstenv
in
xor
jge
fldcw
dec
and
lock
pushf
inc
pop
jecxz
xor
mov
frstor
cmpsb
loope
lret
lret
loop
cmpsl
cmpsl
cmp
cmp
sahf
inc
jmp
aas
push
lret
xchg
xchg
fidivs
sub
ljmp
es
pop
enter
or
les
lea
ret
jbe
inc
nop
add
adc
outsl
mov
notl
loope
push
insl
xor
cs
filds
fdivrl
inc
gs
inc
adc
cld
das
mov
pushf
xor
gs
cs
or
pcmpeqd
and
mov
int
stos
pushf
sbb
or
push
cs
addr16
jecxz
in
inc
cli
jns
pop
push
sbb
adc
sub
lock
mov
pop
sbb
dec
and
into
bswap
fidivl
dec
xchg
or
mov
popa
mulb
add
jmp
pop
cli
dec
mov
faddl
push
xchg
push
scas
jae
out
inc
or
mov
int3
rolb
std
sbb
pop
add
jl
adc
je
clc
int
xchg
aaa
test
pop
imul
inc
divb
mov
scas
cmp
adc
pop
ljmp
add
dec
pop
inc
mov
mov
daa
mov
fldt
xor
das
les
pop
push
or
scas
mov
leave
js
stos
and
xor
jo
push
and
imul
xchg
cmp
and
lcall
dec
dec
xlat
loope
out
adc
loope
mov
test
test
or
xchg
fidivl
jp
or
imul
pushf
jnp
ret
dec
add
ss
and
add
jecxz
mov
outsb
fdivl
fisttps
cld
mov
mov
dec
sarl
push
xchg
data16
insb
inc
xchg
xchg
nop
hlt
lahf
xchg
sbb
dec
and
sub
shll
lret
xchg
repnz
or
dec
fwait
popf
lods
inc
and
push
imul
mov
jge
stc
pop
mov
dec
std
lods
das
mov
mov
aas
shll
jg
dec
mov
or
sub
pusha
jb
inc
and
inc
imul
int3
ljmp
adc
mov
adc
imul
xchg
xchg
shlb
test
pop
push
stos
dec
jmp
adcb
aaa
icebp
lds
xor
xor
pop
xchg
cmp
lods
xor
cs
push
mov
fidivl
xchg
xchg
jmp
adc
push
pushf
aad
inc
call
fwait
add
push
jmp
and
popf
js
test
sub
movsl
and
mov
pushf
shll
sbb
in
call
xchg
popa
ja
pop
shll
mov
mov
out
push
mov
xchg
out
jb
adc
mov
adc
cmp
lods
inc
push
popf
int3
imul
test
dec
jmp
push
jg
mov
mov
ss
mov
pop
jl
mov
scas
mov
lods
and
mov
shr
add
and
cmp
pop
test
inc
fwait
mov
pop
sbb
je
popf
jg
data16
push
and
jno
movsl
repnz
fs
insb
faddl
add
push
stos
aam
jnp
aas
arpl
inc
scas
cs
push
and
std
mov
mov
daa
jo
gs
mov
mov
pop
mov
sub
jecxz
cmp
fcompl
cld
or
fdivrp
hlt
mov
insl
pop
mov
inc
or
pop
out
adc
xchg
push
adc
or
jnp
pop
pop
orl
sub
sub
mov
movl
repnz
stc
sub
imul
inc
sub
jl
fidivrs
pop
mov
jg
inc
lds
iret
push
push
scas
leave
mov
inc
or
test
aaa
sbb
and
mov
push
stc
ja
xor
movsb
xchg
or
mov
or
dec
and
cld
popa
jns
outsb
arpl
ret
jb
mov
cmp
andb
pop
leave
out
sub
or
leave
fwait
jle
fs
inc
and
jl
sub
je
movsb
sbb
cmp
push
sub
pop
icebp
jne
cmc
outsb
lcall
jge
mov
and
push
fs
mov
and
cwtl
lds
xchg
sbb
mov
test
subb
lret
jg
cmp
xor
push
ljmp
push
sub
lds
je
in
add
in
dec
or
imul
push
lahf
inc
or
gs
in
cmpl
pop
mov
jp
xchg
add
inc
pop
idivl
int
lcall
pop
fistpll
es
sub
test
leave
cmpsl
xor
mov
and
je
int
fcmovu
xor
shlb
in
test
push
out
jl
mov
aad
sub
popf
sbb
inc
lods
fdecstp
daa
push
jnp
shll
add
adc
xor
ds
test
pop
stos
sub
xchg
jne
call
lock
fmull
aaa
jecxz
mov
pop
jnp
fnsave
jl
sbb
inc
pop
pusha
mov
in
pop
add
and
das
cmpsl
pop
jl
pop
xlat
pop
lcall
mov
lods
dec
push
enter
call
mov
add
ret
inc
fcoms
mov
xchg
fdivp
stos
stos
andb
xchg
fucompp
dec
inc
push
push
mov
jne
into
mov
mov
das
addl
xchg
and
lcall
and
inc
xor
and
or
mov
dec
and
xchg
and
adc
xchg
imul
and
mov
lods
les
scas
shlb
inc
or
ljmp
test
mov
pop
add
out
nop
ljmp
cs
pop
push
ja
rorb
push
sbb
in
jle
jmp
insl
rcrb
mov
stc
jmp
xchg
movsb
mov
xor
jno
sub
insl
sub
adc
mov
dec
leave
mov
xchg
push
xor
fidivs
int
popa
testl
mov
mov
icebp
pushf
xor
aam
arpl
out
popf
stos
dec
push
into
gs
out
jge
and
jno
inc
or
sub
repnz
mov
and
jb
mov
xchg
enter
mov
imul
hlt
or
mov
mov
sarb
or
add
adc
adc
jno
fwait
std
and
jo
aaa
jp
add
jns
cmp
jmp
movsb
dec
ret
inc
es
pop
ret
ss
xchg
dec
loopne
sub
in
push
rcll
bound
mov
data16
push
loope
bound
test
jmp
aad
xchg
lods
nop
int3
adc
xchg
arpl
mov
mov
inc
in
pop
lods
mov
cmp
das
es
insb
idiv
mov
lods
cwtl
sub
xchg
xor
gs
and
aaa
fdivs
sti
stos
jmp
add
cli
ljmp
mov
call
mov
clc
outsb
pop
sahf
mov
sahf
outsl
xchg
mov
ja
mov
pushf
or
js
sti
and
cmp
outsb
jp
jl
fldcw
stos
mov
cmpsl
sbb
ljmp
fnstcw
daa
jns
mov
mov
cltd
inc
xchg
pop
push
outsb
jmp
push
xor
jmp
and
push
push
xor
test
int
push
test
inc
or
mov
push
dec
mov
ja
cltd
and
dec
out
stos
sbb
arpl
out
ret
sti
xor
in
leave
mov
mov
rcrb
mov
sbb
pop
call
pop
imul
mov
mov
cwtl
idiv
or
and
xlat
into
mov
out
jne
negb
adc
jmp
test
aas
mov
sub
loopne
adc
jp
mov
adc
pop
cmpsl
jne
sbb
scas
mov
pop
out
and
dec
in
adcl
sbbb
sbb
outsb
outsl
loop
std
push
xor
push
mov
stos
aad
test
sub
loope
ret
sub
ret
lret
mov
mov
push
xor
push
and
pcmpgtd
dec
mov
popa
mov
push
ja
scas
fnstcw
nop
lret
shrb
scas
aad
sarb
in
mov
cmpsl
into
dec
pop
push
ja
not
cmp
push
mov
mov
jne
rorb
cmc
mov
jle
jmp
xor
or
or
add
mov
jno
mov
jmp
shr
push
fildll
cmp
out
push
jp
jno
cld
push
gs
xor
fiaddl
fwait
mov
or
push
int3
das
sbb
movsl
sub
sbbl
cmp
dec
sbb
ror
out
in
dec
ret
sbb
and
mov
sub
or
fistl
mov
dec
and
aad
subl
call
int3
push
jne
mov
fildll
inc
rclb
lock
aam
lods
add
jmp
jmp
fisttpll
sti
cmp
imul
sti
mov
in
rcl
adc
inc
sbb
jmp
mov
in
and
push
xchg
xor
incl
out
sarb
add
inc
stos
in
sub
ret
jb
stos
pmuludq
out
clc
negb
les
or
mov
xorb
outsb
or
ret
xchg
jecxz
cmp
in
bound
pushl
popf
shll
ret
sub
repnz
add
jge
add
adc
adc
sub
ror
cmpsb
xlat
cmp
rclb
sub
mov
mov
shll
cmc
fsubrs
mov
das
fistpll
outsl
cmpsb
fwait
aad
outsl
subb
cmp
mov
mov
push
jbe
hlt
stos
loop
addl
cmp
cmp
sar
pop
adc
dec
pop
lock
xchg
cld
hlt
jle
cld
push
or
pushf
and
mov
mov
xchg
xor
push
inc
inc
push
or
inc
ja
imul
and
or
arpl
push
xlat
or
cmpsl
sub
loopne
jno
cmpsb
xchg
test
sub
cmp
loope
arpl
in
dec
out
sahf
push
icebp
jl
in
push
adc
jl
jle
in
and
mov
leave
iret
mov
mov
add
mov
ds
inc
fwait
insl
or
fcomps
add
inc
sbb
sub
cmp
ss
jae
fiadds
mov
sbb
std
in
shll
or
mov
pop
mov
loope
cmp
lods
jno
dec
sub
mov
aam
sub
fisttpl
sti
leave
test
js
andb
xchg
stc
stc
in
test
ret
pop
and
jne
and
popa
ss
mov
fdivs
test
nop
fnstsw
daa
push
or
rolb
imulb
loop
pop
dec
pop
imul
call
mov
cltd
xchg
add
bound
in
or
jnp
in
mov
repz
and
cwtl
inc
loopne
sub
in
xchg
mov
mov
inc
xchg
les
shrb
orb
jecxz
push
fiaddl
sub
lods
js
les
stc
mov
mov
shll
out
cli
testl
iret
jge
inc
test
xorl
ds
es
cmp
push
mov
lret
mov
ljmp
insl
scas
or
lds
lret
fiaddl
es
shr
iret
divps
mov
pop
js
fdivrs
pop
sahf
push
popf
inc
xor
inc
jp
stos
fdivs
les
mov
bound
dec
sbb
add
add
cmpsl
add
ljmp
add
push
xor
lods
xchg
mov
dec
icebp
xor
fwait
xor
sub
sub
sti
xor
pop
xor
leave
push
cmpsl
adc
insl
push
cmpsb
and
adc
popa
push
ljmp
adc
pop
push
xchg
mov
jns
push
repz
or
jmp
into
loope
mov
push
mov
sti
std
roll
xor
imul
aam
push
aaa
sbb
sub
or
mov
or
sbb
push
mov
mov
icebp
fbld
and
test
in
mov
pop
xchg
je
mov
add
dec
sahf
pop
jne
cli
mov
xor
mov
xchg
movsl
das
loop
arpl
outsb
cmp
adc
pushf
sub
repnz
adc
jb
inc
sbb
xlat
mov
cmp
fldcw
aam
or
ss
pop
cmp
mov
jp
scas
jbe
mov
cmp
xchg
and
ja
sti
out
add
iret
xor
incl
mov
out
leave
jge
inc
leave
pop
add
fstpt
and
pop
pop
push
dec
or
jl
lret
or
lods
mov
xor
nop
mov
lahf
outsb
or
mov
in
test
lock
mov
jg
xor
push
mov
sbb
imul
popa
inc
stc
loope
sub
jnp
pop
dec
and
sbb
xor
arpl
rcll
sbb
fs
dec
mov
repnz
jb
pop
or
and
ret
mov
imul
je
inc
sub
push
cmp
sti
lods
sti
mov
mov
or
sbb
add
sub
dec
xor
in
mov
stc
jne
jo
je
pop
dec
rorl
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
sub
out
inc
addl
bt
mov
push
int
jbe
cmp
or
int3
push
xor
cmp
out
add
mov
scas
inc
sbb
push
push
pusha
push
in
inc
fmull
mov
mov
mov
loop
adc
cli
sbb
xchg
xor
push
mov
sbb
out
movsl
test
andb
add
jmp
iret
mov
int
sub
pop
mov
adc
adc
jp
lods
dec
sub
cmc
push
cmc
dec
jno
pop
add
pop
stc
add
lds
lret
movsb
int3
sub
ds
stos
fwait
mov
and
cli
ja
test
lock
push
mov
inc
or
cmp
incl
hlt
loop
jbe
cmpsl
movsl
pop
in
dec
jge
sbb
pop
ror
jb
lods
mov
aas
jb
imul
cld
icebp
fs
ret
mov
fs
or
daa
cli
cmp
push
pop
inc
pop
pop
sbb
cmp
bound
roll
mov
shrl
fstl
xchg
cmpsl
lock
mov
and
out
test
or
mov
nop
pop
add
push
loopne
mov
inc
or
rorl
adc
stos
ja
mov
cmp
cmp
cmpxchg
and
mov
filds
mov
mov
insl
jae
jmp
pushf
or
jecxz
pop
test
or
cmp
std
dec
aas
shlb
das
gs
and
iret
inc
loopne
adcb
mov
out
cmp
mov
and
sub
fbstp
or
subl
js
gs
iret
pop
sbb
push
dec
addr16
out
mov
sub
push
cmpsb
add
xlat
xchg
hlt
hlt
or
dec
repnz
vcmpss
xorb
push
cmp
into
xchg
fstpt
insl
in
cmp
andb
inc
jle
sbb
das
fistpll
lret
push
cmp
xorb
xchg
stos
lahf
or
clc
ret
call
sbb
xchg
out
xlat
xor
testl
mov
stc
ds
xchg
cmp
fadds
les
cmpsl
nop
adc
jge
mov
ljmp
js
aad
mov
adc
or
addr16
iret
test
dec
cmpsb
and
adc
je
jle
mov
in
punpcklbw
stc
adc
adc
jno
lods
ss
sbb
jns
lods
push
xor
call
pop
popa
sbb
scas
inc
daa
cmp
jbe
and
insb
lret
arpl
xchg
push
cli
add
popa
mov
or
and
fwait
dec
stc
gs
sbb
test
js
sti
push
sub
ficompl
bound
cmpb
rclb
rcrl
push
pop
jmp
aaa
sbb
aaa
fsubrl
xchg
push
mov
outsb
addr16
sbb
je
push
xor
push
loope
std
sub
jno
mov
and
ja
add
xor
cs
inc
outsb
xlat
pop
sbbb
add
and
inc
mov
adc
cmp
jne
xor
ficoms
mov
sub
push
stos
movsl
out
arpl
mov
test
cmp
popa
inc
xchg
xor
sub
out
lret
sbb
dec
pop
jle
and
jle
dec
loope
insb
sti
arpl
ds
frndint
sti
sar
pop
mov
mov
test
pushf
push
inc
sbb
lods
or
mov
cmp
out
lret
inc
shll
cs
call
pop
mov
cmc
das
scas
dec
sahf
push
lcall
mov
ljmp
scas
xor
mov
and
out
adc
push
sub
arpl
sbb
xor
mov
not
inc
xchg
dec
pop
lods
lea
bound
sbb
add
jmp
andb
mov
jl
mov
in
inc
or
loop
insb
int3
ret
push
movsb
inc
mov
xorl
std
pop
dec
or
in
jp
iret
adc
pop
inc
js
lahf
imul
add
sub
mov
fcomps
mov
fidivrl
xchg
arpl
aas
scas
adc
inc
addr16
popa
mov
mov
cmc
mov
test
dec
and
and
mov
shlb
aaa
jbe
minps
or
pop
adc
in
sbbl
adc
push
mov
xchg
andl
adc
imul
stos
cmp
cmp
icebp
mov
dec
data16
dec
aaa
lahf
cmp
jg
xchg
pop
push
push
sbb
jg
lahf
mov
push
jecxz
lret
test
aam
dec
xchg
jns
jae
outsb
in
pop
jl
xchg
into
dec
pop
adc
push
insb
push
cs
shll
push
xchg
jle
fimuls
cmp
adc
fnsave
mov
jge
ljmp
aas
xchg
push
mov
inc
or
aam
sarl
in
jle
iret
cmc
xchg
repz
jo
fidivs
push
movsl
clc
sbb
add
inc
jbe
fisttpll
add
or
hlt
pop
iret
movl
xchg
or
inc
rcll
dec
push
test
and
xchg
out
mov
aad
ss
aas
out
je
add
test
lret
loope
jge
xchg
aas
stos
ltr
xlat
cmp
dec
cmp
pop
or
das
mov
mov
sti
iret
fwait
jp
push
add
scas
jo
dec
aas
stos
dec
inc
mov
roll
mov
dec
out
xor
jle
add
loop
dec
or
sbb
clc
pop
add
xlat
mov
and
clc
enter
jno
cli
bound
xchg
inc
ret
aad
out
add
scas
dec
cmp
dec
mov
jmp
xor
test
lock
scas
mov
clc
adc
cmpsb
insb
repnz
imul
imul
dec
hlt
out
into
imul
push
ds
fcoms
data16
and
movsb
push
mov
inc
fcomip
adc
add
cmpb
int3
sti
je
mov
sbb
sahf
rclb
es
movsb
aas
nop
sub
dec
jmp
out
xor
les
popa
sbb
aam
and
sahf
lods
push
hlt
fwait
out
popf
push
fcmovnu
pop
push
push
jo
sub
adc
fwait
jns
inc
pop
sbb
ret
cmpsb
in
xchg
sbb
ret
jmp
nop
fstps
xchg
js
es
jbe
dec
push
or
cmp
iret
gs
jl
dec
inc
mov
insl
jp
xchg
inc
fistpl
shll
or
pusha
in
jns
fs
mov
mov
dec
jns
mov
hlt
mov
test
pop
lret
push
and
and
fcoml
mov
pusha
sub
xchg
cmp
xchg
dec
inc
add
cmpsb
add
or
mov
sbb
ficomps
push
xchg
jecxz
xorb
jb
mov
mov
mov
shlb
sub
pop
fsubs
jnp
stos
leave
sbb
inc
or
sahf
mov
subl
idiv
push
movsb
add
cwtl
sahf
dec
and
push
pop
shll
pop
mov
sar
frstor
pop
fdivp
add
mov
push
lds
or
xor
cmc
push
mov
jnp
pop
stos
jae
mov
cmpsb
jb
xor
cmpl
jecxz
xor
xor
adc
stos
dec
repnz
ss
sbb
push
fneni(8087
sbb
add
loope
xchg
mov
cwtl
sub
mov
jne
mov
movsb
lds
aam
add
fisubrl
test
fdivrs
daa
inc
pop
cmc
cmp
imul
orl
js
lock
pop
sbb
dec
mov
dec
xor
repz
pop
mov
test
cmc
sbb
sub
pop
insb
leave
shlb
pusha
loopne
or
pop
cmp
sbb
or
or
outsb
mov
xor
cmp
mov
cs
or
in
fmulp
idiv
mov
cmp
mov
adc
dec
test
loope
rcl
mov
pop
push
ja
cmpsl
in
mov
or
pop
mov
sub
ja
dec
pop
cmp
push
push
shl
pop
stos
sti
xor
jns
cmp
testb
dec
gs
mov
sarb
xlat
xchg
fst
les
ss
clc
or
test
shlb
mov
in
push
adc
sub
push
xchg
icebp
sbb
mull
and
lods
pop
adc
mov
jne
xchg
pop
dec
out
dec
and
ficoml
loope
dec
shll
fwait
push
lret
and
cli
jno
and
mov
scas
addr16
sbb
inc
add
popf
jp
test
inc
xor
fisubl
movsb
pop
test
shrb
decb
mov
xor
xor
and
sbb
jl
nop
inc
out
pop
int
xchg
push
and
aad
ds
adc
sbb
mov
adc
insl
movsb
scas
cmp
stc
sbb
data16
dec
cmpsb
and
jl
test
stos
in
mov
repnz
loope
je
fs
jo
popf
les
loop
xchg
pop
pusha
jp
push
data16
or
jnp
push
cmp
cmp
inc
fisttpll
mov
and
sbb
les
inc
repnz
ret
mov
fcoms
ss
or
push
gs
repz
mov
icebp
pop
inc
bswap
and
ljmp
jecxz
dec
cltd
push
out
ljmp
jmp
sbb
xor
loope
xchg
stc
lea
cmpsl
and
sbb
and
pop
pop
sub
xchg
arpl
jns
adc
push
push
cmpb
test
subl
pop
test
es
push
in
or
andl
js
stc
into
scas
lods
in
insl
lahf
mov
les
xchg
mov
outsb
scas
jecxz
cmp
lcall
clc
in
xor
cmp
sti
aaa
fstpt
mov
push
pushf
and
mov
adc
mov
fsubr
out
lret
je
adc
scas
add
adc
pop
sbb
lods
or
dec
push
cmp
push
icebp
mov
pusha
gs
ror
adc
mov
mov
ret
nop
sbb
js
add
adc
add
orl
cmp
test
clc
adc
fistps
fnsave
inc
imul
cltd
dec
insb
jge
mov
out
sti
xor
sbb
dec
call
arpl
push
cld
cmp
test
inc
int3
sbb
imul
xchg
das
and
je
fimuls
inc
or
bound
mov
sub
pop
call
pop
cmc
arpl
icebp
in
dec
jnp
jae
ret
xchg
jns
mov
jb
mov
xorl
out
push
push
addl
jmp
inc
lret
loope
das
mov
lea
iret
cld
inc
rolb
inc
ficoms
dec
xchg
stos
pop
ja
or
jmp
arpl
inc
out
sbb
imul
movsl
mov
sarb
xor
sub
pop
or
dec
push
adcl
ret
inc
sub
mov
movb
stc
int3
or
jns
dec
mov
push
or
and
cmp
subl
test
loopne
fmull
mov
sbb
cmp
pop
cmp
dec
cmp
repz
sbb
sarl
mov
inc
add
xorb
adc
pop
jmp
jmp
add
add
mov
in
in
push
fildl
pop
call
sbb
mov
shr
cs
adc
mov
fsts
jnp
dec
icebp
mov
cmc
ja
imul
sbb
cmp
mov
xor
pop
cmp
jo
cwtl
xchg
cmpsl
mov
mov
insl
jnp
mov
ret
pop
subl
mov
jl
mov
or
adc
in
outsb
push
out
and
sbb
aam
enter
mov
xor
aam
fst
add
andl
ror
lods
sbb
pop
ja
jno
call
data16
ja
rolb
mov
int
cwtl
lds
sub
inc
in
jbe
clc
js
gs
inc
xchg
push
int3
cli
inc
in
fnstsw
mov
push
mov
jb
test
out
mov
or
xor
cmp
lea
push
cmp
push
imul
push
adcb
mov
test
ret
and
jns
testl
clc
mov
sahf
int
test
or
inc
xlat
das
sbb
stc
fwait
mov
ja
push
jle
ja
pop
mov
add
in
insl
mov
mov
mov
mov
fnstcw
out
repz
test
xchg
addl
in
call
sub
jbe
xchg
scas
loope
mov
aas
ss
mov
aam
mov
enter
jae
inc
test
aad
pop
aam
dec
mov
gs
cmpsb
xchg
jg
bound
pop
pusha
inc
adc
aam
xor
sbb
sbb
sbb
sbb
pushf
pop
cmc
or
fs
les
and
stos
stc
mov
jnp
insl
mov
cmp
jne
lds
push
dec
cmpb
aaa
xor
test
movsl
aaa
xchg
mov
fcmovu
lods
mov
push
xchg
push
shll
fwait
mov
jo
lock
rcrb
mov
lret
jle
das
insl
xchg
mov
push
out
mov
in
loopne
hlt
xor
push
mov
hlt
mov
pop
in
add
dec
es
mov
sahf
inc
adc
or
sbb
adcl
into
into
dec
inc
rorb
add
mov
sub
in
mov
sbbl
shr
icebp
jmp
pop
sub
jnp
imul
fs
jae
pop
mov
std
sarb
pusha
or
sti
and
or
add
aad
mov
int
scas
sub
lcall
or
cmp
push
icebp
aas
jle
icebp
mov
mov
lea
dec
cmp
pop
lahf
push
rcrl
xchg
jbe
sub
mov
push
jecxz
arpl
sbb
pusha
and
int3
loopne
cli
std
lods
cmc
add
jge
movsb
adc
mov
imul
dec
inc
add
pop
push
dec
cmp
icebp
xchg
movb
xchg
pop
and
adc
sub
mov
fdivs
stos
fmul
cld
cltd
sub
adc
repz
mov
ja
shrb
les
loope
push
fnstcw
pop
pop
and
add
stos
jecxz
sbb
arpl
mov
push
stc
sbb
out
outsb
xor
cmp
mov
push
adc
enter
imul
movsb
pop
adc
inc
daa
sub
ja
add
inc
das
out
scas
insl
shrb
sbb
lcall
or
repz
jge
data16
sbb
adc
mov
iret
dec
sub
hlt
stos
roll
rcrl
test
aas
lds
iret
test
xchg
sbb
wrmsr
sti
gs
das
insl
jmp
xor
jno
adc
sub
dec
scas
push
cmp
das
inc
adc
aas
ja
jmp
clc
xchg
pop
mov
lock
sub
subl
sbb
xchg
jb
sub
dec
jo
mov
das
sti
rolb
out
test
sub
mov
pop
pop
mov
lds
push
pushfw
fidivrs
jmp
mov
sbb
and
pop
mov
and
in
cwtl
mov
outsl
sub
sub
aas
rorl
push
lock
mov
fcomip
xchg
test
xor
jno
push
scas
jg
mov
sub
sahf
lock
div
jnp
pusha
fs
jmp
pop
cmc
jmp
mov
xor
add
adc
adc
inc
cmpsl
or
mov
lods
adc
cwtl
hlt
int
mov
mov
adc
outsl
loop
pop
pop
sub
or
cld
cmpsl
cmpsl
fcmovb
sti
add
out
gs
dec
ja,pn
hlt
xchg
loope
testl
ficompl
cmp
xchg
add
mov
dec
sbb
push
mov
loopne
jle
push
sbb
call
inc
or
sub
push
lcall
sub
xor
sub
ja
xchg
mov
mov
sahf
inc
push
mov
hlt
test
jp,pn
and
fstpt
shll
jae
lret
popf
imul
shl
sarl
mov
pop
mov
popa
xchg
cld
mov
shr
lret
lods
gs
mov
outsl
lahf
adc
adc
mov
lock
in
int
aad
aam
or
push
fsubrl
xchg
test
iret
ffreep
or
into
inc
xchg
in
xchg
xorb
push
out
push
or
add
jo
lods
adc
push
pop
pop
xchg
mov
imul
jle
stos
dec
mov
adc
mov
push
xchg
push
dec
repnz
orb
std
mov
cli
cmpsb
add
imulb
mov
pop
gs
mov
adc
hlt
pop
xchg
jecxz
sti
or
add
shrb
or
popf
mov
cli
add
jge
lock
cmp
xchg
add
adc
in
push
imul
fldt
inc
and
std
clc
aaa
fmuls
outsb
mov
push
fstps
adc
mov
mov
inc
sub
ljmp
movsb
pop
gs
xchg
sbb
cli
mov
add
pop
xor
sbb
cltd
repnz
jbe
sub
push
adc
daa
add
jnp
xor
ljmp
jo
pushf
mov
sbb
cmp
xchg
test
dec
rcrl
pop
std
inc
cli
aam
test
add
rol
push
adc
cs
stos
lods
jmp
in
insb
out
and
jecxz
sbbb
xor
fistl
mov
fistpl
loop
adc
sbb
adc
test
lcall
add
sbb
inc
cmp
mov
push
ret
mov
sub
and
lahf
iret
cmpsb
add
adc
shrb
in
cli
int3
in
aam
sbb
clc
mov
cmpsb
add
sbb
das
pop
test
pop
inc
adc
outsb
fmull
mov
xor
push
fs
mov
stc
xchg
pop
icebp
adc
flds
sbb
mov
cld
lods
xchg
or
mov
cmp
cmp
push
push
xchg
roll
mov
mov
out
fadd
xchg
in
in
sub
add
sbb
fs
sub
in
repz
arpl
clc
xchg
mov
pop
lods
lcall
pop
stos
call
std
into
nop
je
mov
std
adc
icebp
jmp
cmc
cmpsb
iret
fdivrl
outsb
pop
cmp
test
push
fidivrl
clc
outsb
dec
xor
xchg
test
mov
ljmp
push
lahf
rcll
cli
mov
in
dec
sbb
jecxz
mov
inc
ret
mov
int
bound
fstpl
pop
fnstcw
add
mov
sub
mov
mov
scas
notb
xchg
xor
test
pop
dec
inc
xor
rclb
iret
sbb
lds
push
or
push
inc
pop
sbb
jp
dec
icebp
inc
xchg
iret
xor
pop
pop
jno
sub
std
mov
stc
add
or
or
scas
mov
xchg
ss
inc
cs
add
fidivs
cmp
cmp
inc
dec
mov
push
es
repnz
addl
lods
stos
dec
lds
andl
lcall
xor
dec
ret
jmp
out
mov
inc
insb
mov
mov
fsubrs
sub
mov
stos
icebp
jb
push
loope
clc
cs
scas
cmp
push
xchg
and
xorb
add
cwtl
cltd
cmp
mov
lret
add
pop
dec
ljmp
sbb
inc
fnstenv
stos
pop
popa
jns
shl
jbe,pn
test
scas
cwtl
or
mov
xor
in
adc
aas
jo
mov
and
mov
jo
sahf
int
jne
dec
cld
imul
fwait
out
cmp
xchg
in
fdivrl
out
ljmp
insb
inc
adc
add
mov
pop
push
ljmp
dec
mov
mov
and
jo
and
or
fdiv
xchg
fwait
lret
xchg
rcrl
jno
pop
in
inc
jne
xchg
in
mov
lea
pop
stos
push
pushf
in
push
dec
jne
add
mov
fdivrs
push
popa
notb
add
inc
jno
sub
sbbl
rcll
mov
mov
sbb
rorb
ja
jge
js
xchg
xor
lds
push
sti
stos
testl
add
sahf
mov
mov
and
xchg
mov
fwait
push
movsl
das
xor
or
sub
mov
mov
jno
mov
movsb
jecxz
cmpsl
mov
fs
outsl
mov
std
dec
lea
movsl
stos
inc
xor
adc
xchg
ljmp
xchg
popf
addl
jnp
mov
push
mov
mov
xchg
jbe
inc
js
lods
test
ds
and
xchg
stos
sti
cmp
xchg
mov
cmpsb
cmpl
xlat
sub
push
xchg
mov
paddq
add
aas
or
or
fstpt
xor
sahf
aam
cmpl
sbb
fwait
add
je
jle
in
xchg
xchg
inc
or
addl
dec
mov
jne
and
pushf
mov
ljmp
repnz
jge
dec
mov
mov
sti
add
fisttpl
aad
dec
or
insl
add
fdivr
pop
dec
xchg
jge
lcall
aad
push
movsl
sbb
dec
repnz
mov
mov
xor
add
mov
inc
jge
addr16
in
xor
pop
cs
out
inc
into
inc
mov
xor
or
aaa
xchg
iret
xchg
bound
int
ds
out
repnz
cli
add
filds
scas
pop
push
cmp
xchg
adc
loopne
jnp
lahf
pop
mov
push
pusha
push
sbb
leave
into
mov
mov
and
rorl
mov
lea
movsl
test
inc
push
repnz
inc
in
out
dec
lock
fwait
dec
and
inc
mov
xchg
loopne
cmp
mov
push
xor
and
inc
mov
clc
imul
repz
and
mov
adc
data16
mov
mov
popa
fstpt
lock
cld
cmpsl
in
ss
test
push
dec
and
sbb
xchg
popf
mov
mov
mov
andb
outsl
mov
push
dec
mov
xor
adc
insb
fnstcw
es
or
test
rolb
jle
sub
add
icebp
pop
pop
or
sti
bound
push
data16
sub
dec
inc
push
push
mov
push
and
mov
cmpsl
in
clc
lods
jns
inc
and
sub
xchg
pop
sub
inc
xlat
ss
scas
mov
cmp
dec
add
fbld
stos
jno
sbb
jo
xchg
xor
adc
add
pop
sar
sti
dec
mov
xchg
sarl
ret
movsl
xchg
xchg
lcall
mov
inc
cmc
pop
xor
rorb
cwtl
daa
fs
stos
add
adc
test
scas
mov
xor
lock
mov
push
lds
test
jmp
das
push
in
aaa
lods
lea
jo
xchg
inc
fdivl
sbb
leave
or
mov
pop
daa
stc
mov
push
add
or
cld
enter
cltd
xchg
jp
sub
mov
shl
pop
mov
rcr
xor
jo
dec
mov
lret
cli
push
push
dec
std
and
mov
lret
out
aaa
cmp
add
rcrl
sub
data16
sub
inc
adc
push
xchg
xchg
pop
sbb
add
fistpl
lea
mov
out
push
or
xlat
ljmp
nop
je
push
imul
sti
mov
rcrl
jb
pop
mov
add
mov
jg
test
imul
in
cmp
push
cmpsl
push
sub
or
cmpsb
out
inc
sbb
lcall
scas
xchg
in
push
scas
rorb
pop
push
cmpsb
dec
imul
sbb
out
inc
lea
mov
dec
jle
cli
lret
sub
in
scas
gs
push
xchg
inc
cmpsl
filds
cmpsl
jmp
lahf
mov
add
mov
iret
iret
sub
jmp
sbb
jb
push
clc
fwait
and
insl
or
add
and
xor
cltd
sub
push
iret
imul
fisubrl
clc
fbld
cld
pop
shll
xchg
rclb
push
jno
lods
jmp
adc
cmp
ret
mov
mov
or
nop
flds
mov
jb
push
cmp
xchg
mov
inc
fnstsw
aaa
sbb
adc
or
sub
xchg
mov
pushf
sub
push
es
test
loop
jb
jno
pop
in
add
xlat
in
clc
int
mov
stos
jbe
lods
add
jl
push
cmp
mov
xlat
mov
fnstcw
or
jns
mov
push
popw
ds
out
les
fistps
and
wrmsr
leave
hlt
mov
inc
xchg
xchg
test
aaa
fwait
add
mov
xchg
movsb
fmull
subl
cli
testb
inc
daa
movsl
mov
mov
stc
sub
ret
inc
inc
or
jp
pop
aad
sub
mov
fcmovnu
pop
orl
loopne
popa
fcomps
mov
xchg
cmp
fxch
push
dec
jnp
fidivrs
das
jge
cld
xor
test
lock
in
inc
imul
jmp
sbb
pop
sub
cmp
mov
test
nop
mov
sub
add
push
mov
mov
or
sub
pop
outsl
cwtl
popf
inc
icebp
xchg
pop
cmc
mov
add
adcb
push
pop
mov
ja
cmp
mov
jae
xor
enter
mov
jns
rorl
outsl
mov
lahf
mov
jbe
movl
pop
jns
out
jecxz
xchg
std
cs
fbld
test
rcrl
xor
add
ficoms
lods
test
sub
or
sarl
jmp
and
js
mov
test
repnz
pop
dec
inc
cmp
mov
adc
out
add
mov
jno
cmp
neg
mov
or
ret
or
fcoms
dec
cmp
ror
fwait
call
in
inc
push
add
lret
mov
xlat
mov
pop
stos
jnp
mov
sbb
arpl
inc
sbb
and
ljmp
movsl
out
jno
mov
es
mov
rcrb
xor
das
mov
loope
gs
shrb
repz
mov
sbb
lcall
mov
xor
cwtl
cmp
add
cmp
or
fisttpll
adc
and
xor
loope
mov
out
mov
rol
dec
lds
mov
xchg
fildl
cmp
test
int
das
lods
and
ljmp
add
stos
add
push
scas
mov
lret
in
add
dec
cwtl
scas
and
icebp
mov
xchg
or
and
mov
xor
or
lock
icebp
jnp
push
and
rol
ret
fs
lcall
mov
dec
mov
jge
xor
out
pop
loop
lahf
adc
nop
xor
rcrb
xchg
and
cmp
xchg
outsl
js
sbb
inc
mull
lret
sbb
movsb
ret
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
cmp
or
sub
push
push
xchg
mov
xlat
cli
ljmp
daa
scas
js
xchg
xor
xchg
stos
jnp
xchg
notb
pop
mov
jo
xchg
dec
inc
jmp
mov
mov
bound
fidivl
mov
mov
lret
shl
pop
jb
cltd
mov
mov
sbb
rcrb
sbb
aad
imul
in
sub
pop
inc
or
stc
mov
sarl
cli
sub
repz
pop
fbld
jno
xchg
popa
rolb
lahf
jne
bound
daa
sbb
adcb
sub
mov
rcl
test
into
xchg
pushf
xor
and
popa
out
insl
mov
mov
fwait
test
add
nop
mov
pop
adc
int3
in
mov
and
xchg
jl
mov
xor
pop
inc
ljmp
add
repz
add
dec
and
std
loop
fmuls
lgs
jo
and
idivb
cmp
inc
ret
mov
pop
xchg
clc
test
aas
movsb
bound
mov
mov
xchg
test
shr
xchg
out
push
test
mov
cmc
outsl
xlat
das
sbb
sub
lods
shlb
dec
ljmp
inc
sub
inc
pop
add
arpl
jl
xorl
inc
repnz
mov
sbb
xor
je
push
scas
insl
jecxz
pop
jb
int
jnp
cmp
push
pop
mov
cmpsl
jbe
sbbl
aam
out
lahf
cmc
dec
stos
pop
dec
lds
cli
xor
mov
jmp
nop
mov
dec
add
jp
repz
clc
sbb
sub
decb
xchg
xchg
add
inc
xlat
stos
outsb
pop
and
mov
add
inc
push
sbb
xchg
fisubs
jmp
int3
mov
cmc
jmp
jle
aad
xor
sbb
mov
int3
sub
or
dec
lods
xorb
cmp
cmc
popa
pusha
lcall
xor
xchg
pop
mov
sarl
in
clc
push
cmp
ja
jae
add
aas
iret
jnp
pop
rol
cmp
fcomps
xor
fmul
lcall
jmp
cmp
sbb
cmp
cli
mov
mov
push
addr16
fs
lret
pop
inc
mov
insb
imul
mov
xor
xchg
dec
lock
pop
aad
mov
pop
mov
data16
push
xor
mov
rcr
and
mov
std
dec
aas
inc
mov
loopne
repnz
push
and
jl
inc
jns
mov
push
mov
mov
push
sahf
stc
insb
fwait
cs
mov
or
test
cmp
mov
jnp
or
cmp
mov
mov
add
aas
and
dec
aam
outsl
push
enter
rolb
sar
jl
test
cmc
dec
inc
xchg
jl
pop
push
popa
out
sub
in
xor
jg
sbb
xor
inc
mov
mov
jb
dec
imul
addl
inc
push
cwtl
cltd
inc
out
test
mov
pop
dec
loopne
rcl
mov
scas
dec
lret
mov
out
pop
lret
aad
fs
mov
sbb
dec
not
nop
or
sbb
enter
mov
ficomps
xchg
sub
push
push
lods
stc
cld
inc
sub
test
loopne
push
movsl
test
inc
xor
es
jbe
sub
push
call
jbe
rclb
shlb
push
and
push
mov
push
mov
aas
inc
push
mov
gs
lods
mov
aas
xchg
sub
inc
idivl
xor
inc
std
ljmp
repnz
mov
and
jb
bound
int
leave
popf
fadd
mov
mov
jl
adc
insb
cmpsl
push
call
sub
jle
and
sti
fs
mov
pushf
insb
into
and
mov
fucom
repnz
mov
mov
nop
lods
pop
pop
sbb
and
in
add
inc
mov
pop
inc
add
cltd
lahf
out
sub
pop
jne
stos
sbb
ds
push
arpl
bound
popf
aaa
lcall
add
jmp
std
roll
dec
jb
mov
mov
jg
das
aaa
mov
push
call
cld
insb
addr16
adc
lahf
stos
or
outsl
adc
mov
cmpsb
push
scas
sub
arpl
ret
repz
adc
stos
aad
cmp
fcompl
cwtl
pop
push
mov
dec
cmp
mov
jnp
loope
inc
dec
lret
sub
clc
mov
in
mov
cmpsb
cmp
enter
dec
sub
rclb
shll
fbld
add
jecxz
mov
xchg
push
pmullw
sub
jge
mov
pop
iret
push
dec
fadd
push
insl
cmp
jecxz
jecxz
pushf
push
jbe
cltd
fisubrs
jo
mov
out
adc
data16
pop
fisttpl
sbb
movsb
shll
loop
pop
inc
mov
mov
push
dec
sbb
and
pushf
clc
push
mov
lea
fwait
les
sub
cs
sub
js
mov
mov
cmp
and
jb
addr16
std
sub
jno
adc
cmpsb
mov
mov
aad
fdivr
push
mov
jae
movsb
fs
lret
inc
pop
lea
call
rcl
popa
repz
inc
and
xor
xchg
mov
xchg
pop
jge
cmp
fstl
add
fisttpl
aam
inc
out
jp
insw
push
xchg
jmp
mov
test
pop
xor
orl
xchg
lods
and
xchg
pusha
add
inc
and
jle
add
lea
ja
inc
push
cmpl
loop
or
jl
xlat
shll
cli
mov
mov
pop
out
jge
push
push
hlt
insb
sub
inc
adc
nop
sbb
push
jns
and
push
insl
in
mov
repnz
arpl
jl
xchg
and
hlt
add
jg
xchg
rorl
test
adc
imull
enter
jle
cmp
fisubl
mov
dec
outsb
aam
xchg
test
mov
cmp
stos
inc
shrl
loopw
sbb
and
and
sub
sar
fwait
aas
bound
dec
sub
inc
mov
push
adc
xchg
out
stos
mov
ret
xchg
add
jns
ret
mov
iret
jl
pop
dec
dec
push
fs
inc
sub
sbb
setg
iret
out
xchg
pop
aas
pushf
les
xor
stos
sbb
mov
mov
fildll
xor
ret
cmp
pop
lods
push
sbb
mov
test
sahf
xor
or
outsl
cmpsb
xor
jmp
popa
jmp
sbb
jb
iret
pop
mov
push
out
js
or
jb
fnstenv
lods
xchg
mov
call
push
stos
out
leave
into
ds
iret
xor
sub
and
mov
inc
mov
sbb
inc
xchg
mov
imul
dec
das
adc
xchg
xchg
xor
mov
les
loope
sbb
inc
xchg
cmp
mov
inc
out
stc
or
notb
mov
pop
sub
mov
pop
and
mov
shl
bound
dec
dec
dec
pop
and
pusha
xchg
or
insb
sbb
and
and
shr
add
cmp
push
clc
arpl
rclb
leave
repnz
fwait
pop
and
cltd
lcall
pop
cli
sub
lds
lret
push
jecxz
in
cltd
mov
daa
push
xor
data16
cli
pop
daa
bound
sbb
jne
hlt
pop
and
andb
in
dec
repnz
rcl
or
fdivr
mov
xor
test
mov
sbb
pusha
lcall
sbb
mov
push
fwait
sub
movsl
es
xor
or
jae
sub
sbb
adc
jae
adcl
or
xchg
jb
jae
push
stos
jmp
mov
sub
cmpsl
pusha
mov
mov
pop
dec
notl
xor
and
sti
clc
dec
fdivs
outsb
loopne
jg
in
pusha
test
nop
addr16
xchg
loop
enter
cmp
cltd
ljmp
jl
sbb
out
stc
jecxz
xor
mov
movsb
hlt
hlt
inc
data16
cmp
sahf
dec
adc
mov
adc
jno
mov
pop
cmp
es
roll
or
and
mul
or
pop
scas
add
test
es
dec
xor
pushf
addb
pop
push
xlat
call
push
and
pop
pop
int3
cmp
insl
mov
mov
xor
cmp
pop
or
stc
jl
lret
lret
inc
fdivr
fucomip
aaa
xor
iret
xor
add
xchg
les
cmpsl
out
in
je
dec
je
sbb
repnz
sbb
dec
in
arpl
dec
fsub
xchg
js
nop
sbb
mov
mov
mov
lret
ret
inc
push
in
xchg
xchg
gs
xor
rcll
or
and
scas
mov
imul
mov
gs
sbb
jb
fstenv
andl
mov
xorb
fwait
popa
xor
lock
testl
aaa
je
call
popf
jnp
xor
pop
mov
cmovl
adc
movsl
sahf
shl
jg
inc
inc
mov
shr
inc
jle
jbe
xchg
xchg
mov
dec
xchg
cmp
in
sub
and
lds
jecxz
out
dec
add
cmp
fsubrl
stos
mov
push
cmp
inc
pop
add
or
hlt
outsl
sbb
lahf
dec
insl
in
jmp
pop
push
push
and
sub
sbb
movsb
jno
adc
fnstcw
mov
add
addr16
xor
add
clc
out
inc
ljmp
and
fstpl
push
add
fists
or
xchg
fstl
sbb
and
lods
jge
or
sbb
jns
loope
cmpsl
aad
aas
jne
data16
adc
ffree
ds
adc
mov
pop
stos
mov
rorl
mov
sbb
or
popf
sub
mov
out
ljmp
push
cmp
sub
adc
xchg
push
push
pop
shll
outsl
lahf
mov
push
popa
jmp
dec
pop
mov
and
nop
arpl
cmp
rolb
jmp
cltd
loopne
loope
push
dec
fimull
sbb
lea
sub
inc
push
mov
add
repz
jnp
testl
lods
test
mov
das
xor
sbb
bound
add
ds
sahf
mov
adc
xchg
lea
lea
imul
mov
ljmp
je
arpl
aas
add
xor
dec
xchg
cmc
pop
add
cmp
inc
pop
jo
cltd
movsl
pop
xchg
std
test
adc
insb
stos
out
adc
and
push
mov
aam
pop
idivb
xchg
sub
stc
pop
mov
inc
stos
jle
ret
dec
mov
pop
inc
ret
ja
enter
adc
adc
push
jg
imul
add
inc
sbb
push
icebp
cld
leave
mov
lahf
cmpsb
lea
cli
adc
test
xor
adc
push
in
xor
pop
je
stos
add
dec
dec
aas
sbb
scas
sbb
pop
mov
or
stos
icebp
and
lret
cmp
mov
outsb
or
clc
sub
call
out
push
sbb
cmp
inc
or
addr16
push
lods
and
shl
lcall
mov
and
sub
mov
stos
and
add
xchg
fwait
aas
and
cmp
pusha
ret
cmp
mov
aad
mov
push
jno
adc
push
adc
add
push
cmp
push
jo
cmp
pushl
sub
mov
dec
mov
dec
rclb
dec
lock
dec
mov
jmp
imulb
fisttpl
dec
subl
xchg
fsubs
ret
add
dec
ret
cmp
fnstcw
xchg
ljmp
add
mov
gs
push
pop
adc
inc
in
icebp
xchg
out
add
ret
or
jmp
adc
push
pushf
dec
push
inc
xchg
mov
fisttpl
lds
fdivrs
insl
jns
xor
cmc
mov
int
imul
and
out
or
add
imul
imul
sub
rol
out
les
mov
push
cltd
pop
lcall
loopne
bound
jle
adc
add
mov
mov
lea
mov
add
xor
push
aam
xchg
and
movsb
loopne
push
or
cmp
pop
xchg
push
mov
out
xlat
in
sbb
dec
int
mov
push
outsl
xor
adc
cmp
add
into
mov
and
fdivs
imul
cmc
mov
movsb
pushf
xchg
loopne
outsl
inc
adc
xchg
mov
inc
dec
mov
cmp
pop
out
push
or
test
cmpsl
sub
lret
push
cmpsl
push
fcmovbe
push
cwtl
mov
dec
in
fs
leave
test
adc
push
in
movsl
sbb
inc
dec
mov
data16
dec
outsb
push
int
roll
adc
ja
pop
sub
into
pop
or
popf
outsl
out
imul
mov
mov
js
and
adc
push
push
mov
and
add
cmp
cli
ror
push
jle
add
jbe
mov
and
add
push
nop
repz
pop
dec
jbe
fsub
adc
pushl
jl
pop
mov
addr16
cmpsb
in
hlt
nop
mov
and
mov
repnz
and
pusha
pop
enter
xor
lret
mov
sahf
xchg
shlb
jg
gs
adc
ret
xchg
outsl
lea
cmc
sub
push
fmull
add
push
cmp
cld
inc
dec
fisttps
and
and
sub
sbb
cmp
pop
lods
incb
push
repz
ljmp
popl
dec
add
negb
push
inc
jae
adc
jae
mov
in
inc
sahf
push
lret
es
add
xchg
push
stos
inc
inc
mov
int
and
movsl
jl
cmp
mov
push
adc
lret
jp
into
fwait
lret
inc
xchg
clc
sub
inc
add
insb
jge
and
insl
loope
push
cmc
stos
xor
adc
lods
fcmovne
jno
aad
nop
inc
mov
lahf
dec
into
stc
inc
xorl
or
orb
and
push
aam
leave
inc
ja
fidivl
xor
cs
call
push
rcl
jnp
int3
sub
dec
ja
cmp
lcall
xor
pop
sbb
int
adc
subb
push
cmp
xor
repz
jnp
cltd
popf
xchg
test
xor
push
rolb
push
xor
cmpsl
icebp
sahf
adc
enter
adc
mov
mov
subps
es
into
shrb
repz
or
lret
sub
lahf
mov
and
sub
push
add
jle
push
add
dec
mov
pop
sahf
popa
aaa
addr16
mov
mov
mov
dec
je
add
cmp
push
aas
punpckhbw
inc
ficoms
int3
int3
sub
std
lret
dec
mov
and
call
add
adc
pop
xchg
stos
xor
mov
addl
lea
cmp
fcmovne
pop
nop
pop
cmp
and
pop
or
adc
pop
cmpsb
aas
invd
std
or
jo
test
rol
loopne
shll
mov
fistpl
enter
and
adc
or
nop
lods
lcall
xchg
push
lahf
adc
and
call
add
mov
pop
sub
icebp
xchg
xchg
push
fwait
jnp
or
das
push
lods
cwtl
lahf
stos
popf
es
mov
xchg
inc
lock
pushf
mov
stos
inc
mov
add
jle
push
pop
jns
in
scas
rol
push
in
jmp
stc
xchg
out
add
and
or
mov
outsl
aaa
push
adc
stos
dec
xor
sub
and
inc
or
rcr
jle
inc
test
push
fdivrs
pop
xchg
ds
scas
pop
add
adc
xchg
sti
das
dec
aad
mov
test
jnp
pop
cmpsl
sti
add
popa
adc
sub
sub
sti
mov
std
cs
lods
test
push
mov
mov
sbb
push
xchg
mov
sbb
leave
rcll
cmp
out
mov
jge
repnz
les
xorb
ljmp
scas
lea
nop
mov
jnp
adc
dec
ret
andb
push
hlt
jp
mov
psrld
dec
in
notl
dec
fmulp
or
push
cmpsl
mov
adc
fnstcw
mov
lods
js
jns
insl
dec
int3
or
loopne
js
dec
rclb
insb
shlb
push
add
test
jmp
in
cmpsl
jecxz
jno
sbb
inc
loopne
cmp
xor
inc
cmp
fmuls
repnz
jp
sbb
std
mov
sub
fbld
jbe
mov
pushw
in
mov
mov
subb
xchg
push
mov
int3
clc
arpl
add
insl
call
aas
je
aad
cld
mov
sbb
add
or
mov
ljmp
pop
cltd
xchg
sbb
cmp
scas
jg
jp
fldl
pushf
jno
and
jno
mov
add
ja
ret
xchg
dec
sbb
mov
mov
inc
add
pusha
fwait
mov
jae
lret
cmp
or
pop
cmp
ret
in
jle
jp
dec
loope
mov
push
mov
mov
lret
sbbl
arpl
sbb
std
xlat
lahf
inc
loope
inc
xor
lock
cmp
pusha
fwait
jl
outsb
hlt
repnz
ja
das
jo
sbb
jno
sbb
push
out
in
fidivs
cwtl
ja
mov
inc
lock
fwait
sub
cmp
test
clc
inc
ds
rorl
mov
pop
mov
dec
jnp
cmpsb
aaa
inc
mov
shll
andl
or
sbb
jge
add
cmpsb
xor
adc
or
jmp
sti
sub
or
xlat
push
push
inc
or
xchg
pop
xchg
cwtl
mov
cwtl
push
mov
and
and
sqrtps
call
in
loopne
xchg
xor
clc
cmp
add
stos
out
push
cmp
mov
out
cmp
mov
push
loopne
adc
in
mov
subb
into
mov
addr16
fistpl
push
mov
sbb
push
jno
add
sub
lods
ljmp
push
aaa
xchg
clc
in
xchg
ret
sti
mov
mov
loope
sub
pop
in
lret
out
insl
je
and
sbb
loopne
dec
cmpsl
cmpsb
into
cmp
and
or
sbbb
mov
push
mov
stos
aas
fisttps
call
mov
jg
jns
cmp
call
sub
pop
add
aad
push
lahf
or
loop
mov
aas
mov
cmp
mov
jge
jbe
and
imul
shl
pop
pop
dec
fidivl
in
and
or
adc
lock
daa
testl
aaa
jnp
repnz
in
outsl
je
jns
inc
pop
adc
loop
sub
dec
into
or
inc
inc
int
rcl
mov
int
sbb
pusha
jge
push
xlat
ret
xchg
push
push
gs
lcall
dec
add
sub
jnp
add
pop
adcb
inc
cmp
mov
incl
sarl
or
pcmpgtb
xchg
fsubr
or
add
jae
sub
inc
or
js
inc
icebp
mov
mov
dec
arpl
push
hlt
xor
pushf
jns
stos
mov
clc
dec
and
pushf
hlt
cmp
cmp
sub
add
rcll
push
inc
adcl
adc
jge
mov
es
jmp
ret
or
jns
jge
leave
popa
cmc
movsl
or
shrd
fisubrs
adc
lcall
decb
adc
stc
inc
mov
sbb
mov
push
or
jnp
sub
mov
roll
repnz
mov
stc
jle
cli
or
mov
cmpl
loope
daa
subl
inc
dec
xor
ljmp
cs
mov
lret
pop
mov
adc
lcall
cmp
insl
or
sbb
mov
out
mov
add
fs
mov
cmp
xorl
pop
les
mov
xlat
jg
dec
repz
imul
sbb
fucompp
mov
jae
das
xchg
or
sub
mov
cld
lock
push
addb
sub
inc
sub
ss
push
lret
pop
push
shll
add
and
add
sub
setle
jns
dec
popa
ficoml
pop
icebp
cltd
adc
test
int3
jecxz
cmp
jae
arpl
xor
pushf
cmp
xor
repnz
pop
mov
pop
and
mov
xchg
sub
leave
cmp
mov
fs
xor
jecxz
insl
mov
xchg
xor
xchg
jl,pt
in
je
in
test
adc
arpl
xchg
xor
jg
aaa
sub
clc
icebp
jo
fidivrs
out
cltd
inc
daa
adc
loopne
movsl
or
imul
mov
fwait
pushl
and
fidivl
mov
pop
outsl
hlt
repnz
cmp
imul
inc
push
sub
addb
shrl
loope
pop
repz
sbb
ds
add
inc
fsub
stos
addr16
mov
fcomps
inc
insb
cwtl
push
dec
sub
movsb
mov
xor
mov
mov
stc
out
xchg
stos
mov
movsl
lret
jmp
pop
fcoms
sarl
shrl
sub
cmp
inc
push
cltd
mov
and
outsb
xchg
pusha
andb
inc
mov
pushf
mov
scas
fidivrl
dec
aaa
in
arpl
push
movsl
in
dec
add
push
xchg
mov
inc
fisttps
pop
xor
popf
jle
and
jl
sub
ss
xor
inc
cmc
adc
fcomi
arpl
sub
and
mov
stos
jae
andl
mov
push
movl
mov
jp
data16
jno
movsl
std
int3
inc
cltd
aaa
dec
lcall
xchg
mov
jg
test
and
jbe
roll
mov
mov
or
pop
pop
inc
xchg
lret
sahf
mov
test
ffree
dec
cwtl
test
ljmp
xor
shr
les
shrl
lds
jp
mov
stos
pop
sub
or
jno
lods
xor
dec
fildl
jl
rcrl
xor
and
imul
add
add
and
sbb
jnp
lds
xor
movsl
sub
out
sti
pop
xor
dec
or
add
mov
add
adc
addr16
bound
mov
in
lcall
pop
pop
jl
xchg
call
mov
adc
ret
mov
movb
cmp
lds
dec
jg
fldcw
sbb
cwtl
jb
push
or
pop
or
jmp
push
adc
push
xchg
mov
add
pop
sbb
cmp
testl
lods
movsl
leave
xchg
inc
cmp
loop
dec
xor
sbb
out
in
mov
leave
xor
mov
jne
repnz
xlat
sbb
pop
mov
fs
out
push
pop
sar
lret
lcall
sub
pop
fsts
mov
in
pop
in
pop
test
sub
cmp
mov
push
adc
mov
push
repz
out
nop
push
xor
rorl
out
data16
fnstsw
aaa
scas
inc
xchg
push
and
ss
pop
sub
cli
in
inc
in
xor
aad
jno
fs
jmp
jno
push
and
dec
icebp
pop
sub
leave
mov
jmp
pop
xchg
push
mov
push
sbb
mov
outsl
and
inc
and
sub
inc
sbb
pop
mov
popa
jno
inc
push
lea
push
das
and
xor
mov
mov
xchg
mov
insl
dec
adc
xchg
test
add
pop
xor
outsl
pop
sbb
lret
mov
sub
push
jbe
dec
mov
dec
lods
aas
pop
mov
in
popa
jae
inc
jge
jae
lea
push
xlat
into
or
sub
mov
imul
jnp
mov
push
icebp
dec
sbb
push
clc
xlat
push
arpl
jb
sbb
push
int3
sub
nop
sbb
or
roll
mov
int3
shrb
lret
jp
inc
mov
loopne
mov
push
push
popa
mov
and
ficompl
cmpsb
loopne
ret
test
pop
imul
push
int
jne
aam
rorb
mov
mov
dec
xchg
in
int3
push
jmp
ret
jecxz
cmp
ss
mov
adc
shlb
sub
faddl
loope
inc
mov
xor
inc
cmp
pop
or
cmp
pop
mov
and
hlt
xor
add
ja
pop
sbbb
out
mov
ljmp
hlt
pop
pushf
push
jg
fdiv
in
imul
xchg
sbbb
mov
cmp
mov
in
xchg
add
out
nop
sbb
sbb
push
jmp
aam
push
call
shl
xchg
test
ret
add
outsl
cmpsb
xchg
loopne
rcrb
cmp
ss
test
adc
jp
lock
fmul
ljmp
xor
xchg
adc
call
or
sarl
mov
push
dec
jl
rorb
das
jae
pop
or
cmp
fwait
leave
push
pop
add
dec
mov
xchg
testb
jg
inc
push
scas
jmp
xchg
loopne
adc
rcr
inc
fldcw
xor
cmpsb
scas
pop
sub
sub
nop
inc
inc
jmp
sti
inc
push
popa
out
mov
test
sub
loope
jl
push
pop
xor
clc
xchg
jne
out
stc
lock
std
push
loopne
jns
and
push
out
inc
test
stos
cs
jl
fdivrl
adc
std
mov
sbb
ds
xor
xor
loopne
ret
inc
adc
mov
inc
fucomip
shrl
sbb
cmp
inc
fsubl
adc
loop,pt
push
adc
out
mov
xchg
out
shll
mov
sti
mov
push
popl
aam
mov
cmp
mov
adc
sbb
rclb
push
dec
sub
adc
adc
hlt
scas
mov
leave
mov
xchg
cli
outsb
lret
push
cmp
loope
cmp
xchg
cmp
icebp
sbb
movsl
cmp
lds
adc
cmp
cmp
sub
lcall
or
pop
jp
cmp
dec
and
rolb
out
inc
push
aam
loop
xchg
push
addr16
adc
push
add
js
xor
jmp
outsl
data16
stc
mov
stc
in
cs
lds
sbb
cmpsl
fwait
cmp
sbb
jo
pop
lock
xor
addr16
fnstsw
sub
cmovs
adc
hlt
adc
das
inc
add
lcall
adc
xor
lock
sub
fwait
mov
out
add
loop
push
js
lods
mov
or
into
xor
nop
fistps
fsubr
sahf
xor
push
test
call
clc
fcomp
sub
push
dec
fdivrs
add
inc
jns
mov
jle
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
jb
inc
or
xchg
int
push
lret
fsubr
pop
jl
jge
xor
pop
test
sar
push
stos
popa
mov
icebp
call
jmp
insb
sub
cmp
fisubrs
xchg
sbb
jo
repz
sub
in
pop
clc
imul
movsl
leave
pop
sbb
cmp
bound
ds
dec
pop
pop
test
xor
icebp
shr
or
inc
add
xchg
or
cs
loope
test
stos
mov
mov
roll
cld
rol
movsb
adc
push
iret
fistl
mul
inc
and
mov
cmp
jne
scas
imul
jnp
cmp
je
pushf
cmp
lret
push
aaa
scas
dec
xor
sbb
fs
jne
and
es
pop
aad
xchg
and
or
sub
cmp
and
dec
push
adc
jecxz
push
les
cmp
loopne
xor
mov
sbb
test
in
xchg
rorb
xor
adc
or
xchg
mov
sbb
lcall
jecxz
mov
gs
scas
or
test
or
les
aad
pop
mov
cmc
js
sahf
sub
scas
ret
xor
xlat
inc
push
lret
fwait
and
mov
dec
subb
push
xor
adc
adc
shlb
imul
test
pop
sub
sbbb
ret
rcrl
jae
mov
popf
mov
mov
jmp
xor
inc
sub
rcrb
inc
mov
popl
nop
pop
stc
xchg
stos
aam
dec
adc
js
repz
pushf
call
add
xor
mov
jnp
enter
mov
sub
in
jecxz
ret
xchg
es
xchg
dec
pop
aaa
nop
nop
in
push
mov
mov
xchg
ds
data16
in
pop
vpor
paddusw
hlt
lahf
imul
into
arpl
sbb
ds
adcb
xchg
out
je
push
mov
jle
popf
fcoms
lcall
ds
mov
imull
xchg
add
shlb
out
mov
stos
mov
les
push
test
sub
movsb
in
mov
icebp
testb
sub
arpl
pop
xchg
nop
and
repz
or
xlat
push
xchg
arpl
stos
push
cltd
daa
sub
push
fcmovu
pushf
cmp
aaa
mov
pop
inc
mov
and
inc
push
psrlw
jge
lods
adc
mov
mull
arpl
adc
mov
pop
test
imul
outsl
pushf
and
jne
ret
lods
jns
inc
fwait
sub
mov
nopl
int3
mov
fiaddl
push
cwtl
js
fnop
rcrb
pop
fsubr
and
sbb
and
jl
testb
adc
and
call
pushf
xchg
mov
inc
inc
idivb
cwtl
adc
ja
sub
cmp
jne
mov
js
xchg
bound
or
and
adc
int3
std
sub
lret
adc
jb
in
push
sub
push
mov
jl
push
sub
push
aas
jae
add
push
stos
jno
or
mov
movsb
and
loop
pop
loope
sub
jb
dec
shlb
lods
jo
mulb
inc
sub
or
and
mov
inc
and
pop
out
hlt
inc
sbb
movsb
inc
inc
aad
jge
mov
insb
mov
sbb
popa
outsb
aad
xchg
imul
test
aaa
cmp
lcall
cmc
mov
ret
bound
les
sub
lret
sub
or
cs
sub
xchg
lock
adc
fbstp
iret
clc
pop
lods
mov
pop
gs
mov
into
xchg
lock
insl
sub
adc
mov
push
xchg
adc
pop
rcl
out
xor
add
out
dec
inc
andl
sbb
mov
pop
ja
or
mov
lock
mov
iret
test
inc
cld
push
rclb
dec
mov
fdivl
add
push
int3
rorb
cmp
adc
push
xor
mov
xchg
mov
push
test
inc
pop
mov
push
xchg
adc
aas
xor
pop
rcrb
mov
out
mov
mov
adc
fmul
pop
jle
jbe
out
push
into
shlb
psubw
popa
push
mov
mov
inc
mov
push
insb
push
add
dec
xchg
pop
sbb
xchg
fwait
sbb
aam
push
mov
rol
lock
adc
cmp
aam
repnz
sbb
jne
inc
add
fidivrl
test
outsb
add
xlat
mov
insb
pusha
add
lret
add
jp
pop
je
mov
scas
in
scas
add
mov
bound
sti
int3
fs
stc
xchg
cmp
xchg
pop
xor
out
out
in
pop
mov
shlb
ret
int3
stos
cmc
jmp
sbb
cmp
ja
mov
mov
jno
sbb
and
pop
jbe
jbe
jo
dec
ds
jne
or
iret
push
int3
xorl
mov
adc
push
out
mov
lods
sbb
mov
adc
rcll
sbb
dec
stos
into
xchg
pop
push
leave
xor
xchg
dec
xchg
add
dec
sbb
dec
xchg
adc
and
jp
pop
push
pop
dec
sbb
jmp
jbe
sahf
orl
jmp
sbb
loope
push
lcall
mov
dec
flds
sahf
mov
cmc
in
nop
push
adc
stos
add
and
and
mov
or
inc
jns
pop
imul
push
test
xor
stos
arpl
jb
icebp
in
ljmp
mov
add
mov
pop
inc
mov
adc
dec
push
mov
outsl
pop
notl
in
jns
xchg
cmp
dec
lret
out
xor
bound
cwtl
ficoml
pop
or
mov
sahf
jno
test
or
enter
xor
sbb
dec
jmp
xchg
dec
fiaddl
cwtl
sub
ret
lcall
xchg
inc
js
aas
pop
inc
mov
add
test
lock
pop
cmpsb
sub
je
loop
mov
arpl
inc
mov
dec
sub
and
subb
fsubl
push
jb
rcrb
xor
enter
ficoml
xor
xchg
out
fisttpl
repnz
fldenv
push
imul
mov
and
xor
aam
aaa
outsl
push
jae
mov
scas
push
add
xchg
lea
mov
leave
jle
pusha
jae
clc
notb
mov
ja
pop
mov
test
and
int
loop
popf
inc
cwtl
pop
mov
push
lahf
sub
js
pop
rcll
insb
add
cmp
xor
scas
movsl
inc
divps
fldl
xchg
into
repnz
adc
mov
loope
icebp
clc
negl
test
sbbb
int
lret
cmp
mov
cmp
in
sti
lods
orb
movsl
test
adc
js
xor
sahf
fistpl
push
mov
mov
sbb
dec
sti
stc
int3
mov
lret
sub
negb
lcall
xchg
push
in
int3
cmp
rcrl
xchg
inc
std
adc
mov
shr
nop
xor
xchg
into
cmp
loop
sub
xor
and
out
aad
inc
dec
les
outsl
stos
pop
sti
cmp
jne
jmp
xorl
scas
fisttpl
dec
aam
cli
push
push
decl
mov
sti
nop
fdivp
test
jmp
scas
sbb
pusha
js
movsb
sub
inc
fadds
shl
dec
xor
iret
imull
mov
aas
int3
inc
cli
test
lock
cld
push
scas
ljmp
lds
into
inc
iret
outsb
jae
cmc
inc
mov
mov
idiv
sub
lret
cmp
xlat
cli
jge
clc
ljmp
cmp
in
icebp
mov
ss
push
push
repz
std
add
pusha
inc
mov
fwait
cld
subb
gs
stos
or
dec
jmp
cmpsb
mov
out
jl
bnd
test
push
notl
pop
fneni(8087
sub
mov
scas
sbbb
and
pop
dec
sarl
jmp
add
mov
push
or
pop
or
xchg
fisubs
add
dec
mov
xlat
mov
mov
inc
sar
cwtl
in
sub
fisubl
inc
jbe
ds
mov
mov
cmp
cmpsl
inc
sbbb
int3
out
sub
jl
pop
js
imul
loope
mov
out
xchg
and
adc
xchg
dec
test
inc
inc
aas
out
stos
fcomps
jmp
add
mov
xchg
ret
clc
dec
ss
das
pop
and
iret
cld
xor
xor
loopne
and
sub
push
cmc
cli
xlat
jnp
adc
inc
testl
jb
fisubrl
push
sti
sub
cmp
aam
mov
pop
cmp
stos
mov
xor
pop
jo
insb
sbb
ljmp
xchg
push
pop
or
call
outsl
and
fs
std
out
mov
xor
add
sbb
dec
shlb
mov
adc
or
pop
xor
aam
adc
aaa
inc
sbbb
sub
fs
cwtl
adc
cmp
outsl
inc
or
dec
xchg
pop
dec
jne
xchg
adc
mov
push
jb
pop
pop
fstps
pushf
mov
out
push
test
xor
push
clc
fmull
in
sub
pusha
mov
pop
jnp
mov
stos
dec
dec
fbstp
das
loopne
cli
or
mov
lods
or
inc
xchg
int3
add
jmp
jle
lcall
pushf
dec
test
cmpsl
out
xor
add
jmp
shll
push
in
push
push
push
stos
inc
popl
call
or
out
xor
mov
repnz
aaa
add
aaa
int3
stc
in
int
jno
inc
jnp
stos
insl
lret
mov
xlat
and
cmp
sbb
repnz
pop
movl
mov
xchg
rcl
jge
xor
sub
lods
xchg
jl
lea
xor
inc
inc
into
add
xchg
and
mov
lds
fsubp
imul
cmp
pop
add
push
push
adc
sub
insl
fcompp
and
jmp
push
push
sbb
push
repz
imul
inc
hlt
fwait
mov
gs
out
ret
test
xchg
sub
cwtl
mov
and
jb
fnstenv
pop
add
xor
popf
fadd
rcr
xchg
jnp
andb
in
testl
lret
enter
fwait
repnz
jae
push
in
jne
jge
xor
mov
pop
dec
xor
or
xor
test
dec
jns
xor
jb
adc
outsb
jb
xlat
inc
cmp
cmc
arpl
in
xchg
pushf
jl
jb
push
jno
add
fsubr
imul
mov
es
mov
popa
fcmovb
and
cmc
inc
ret
out
cs
lods
xchg
and
dec
stos
xor
mov
xchg
mov
lds
scas
push
mov
mov
outsl
shll
test
jb
jl
cwtl
into
xchg
sub
imul
inc
push
xchg
xchg
loope
clc
mov
mov
mov
stos
or
mov
push
mov
les
dec
in
sub
js
imul
jo,pn
arpl
imull
mov
clc
sub
popf
jo
push
push
dec
sbb
cli
inc
adc
push
mov
inc
lock
pusha
cld
out
je
movsb
mov
add
mov
adc
aas
stc
test
add
dec
push
mov
pop
pop
into
imul
pop
pop
pop
ret
cmp
jp
and
ljmp
stos
push
pushf
adc
xchg
sub
add
rolb
jbe
insl
inc
lods
jecxz,pt
dec
iret
dec
xchg
in
mov
mov
hlt
aas
add
pop
mov
push
xchg
icebp
addr16
mov
cmp
mov
push
xor
testl
stc
inc
insl
mov
data16
mov
or
cwtl
jbe
pop
lahf
mov
xor
and
jo
dec
pop
iret
adc
fs
movsl
scas
rclb
mov
mov
inc
arpl
ds
sarb
insl
jne
outsl
out
cmp
push
sbb
shl
lock
sahf
jmp
pop
test
cmp
fiaddl
mov
pop
sbb
mov
ret
mov
enter
cld
loope
outsb
or
sub
push
sar
adcl
in
or
stos
lea
sbb
lcall
xchg
les
push
clc
push
mov
cltd
ficoms
dec
fwait
rorb
in
adc
mov
and
pushf
cmc
and
push
mov
jb
int3
adc
es
scas
ljmp
rolb
inc
test
add
mov
loopne
xchg
sub
push
cmp
into
lret
je
test
dec
add
jb
stos
mov
or
cmc
xor
mov
lahf
xor
inc
sbb
cmpsl
adc
mov
repnz
cmc
icebp
xor
pop
push
cs
popa
add
adc
mov
sti
fsubrl
cmp
pop
test
push
movsl
and
cwtl
test
cmp
test
mov
sar
dec
add
adc
push
lods
push
xor
lods
or
pop
adc
mov
filds
mov
fimull
flds
hlt
rorb
and
sbb
scas
cmp
cltd
aad
dec
insb
roll
lods
xor
mov
push
shl
insl
adc
and
mov
or
sbb
fildll
arpl
scas
push
sub
out
mov
popf
lcall
movsb
lret
add
lcall
mov
push
repz
push
mov
fiadds
test
adc
fists
pop
fisubs
add
stos
pop
in
jmp
mov
push
imul
xchg
jge
imul
pop
popa
adc
sub
jno
jo
ret
cmp
xor
das
cmp
outsl
and
jne
iret
fisubl
int3
mov
mov
or
out
sqrtps
imull
ja
xchg
add
aad
jg
scas
cmc
lds
shlb
sub
testb
mov
out
pushf
sbb
cmc
mov
jbe
das
or
xor
jns
cmp
xchg
ret
loop
inc
mov
and
loop
dec
pop
lods
sub
dec
sahf
sahf
std
sub
and
xchg
ja
aad
nop
mov
jo
pop
outsb
jecxz
enter
aas
les
sbb
outsl
xor
adc
xchg
in
sbb
cwtl
pusha
push
ret
adcb
add
dec
xchg
inc
pushf
pop
jg
divb
lock
cld
int3
xchg
out
adc
arpl
in
sub
jp
test
clc
fdivrl
and
repz
sub
popf
mov
test
ss
aas
dec
adc
sub
xor
insb
xchg
cli
inc
mov
push
pop
dec
xor
adc
test
push
mov
push
ljmp
push
in
mov
mov
add
inc
inc
jmp
mov
xchg
jne
mov
push
mov
adc
jp
sar
xor
call
out
je
cmpsl
jae
out
mov
sub
iret
xchg
pushf
psubusb
mov
aas
jmp
sbb
outsb
leave
or
bound
or
vaddss
or
pop
out
or
cmp
cwtl
xchg
mov
or
xchg
mov
inc
and
ljmp
mov
push
xor
jp
int
leave
dec
inc
or
and
movsb
pop
dec
jle
movsl
push
ja
inc
movsb
fs
hlt
pop
int3
lret
movsb
pushf
movsb
icebp
cwtl
xchg
test
sbb
jp
mov
sub
cmp
ljmp
cmp
pop
mov
dec
js
adc
push
jnp
mov
subb
adc
data16
ja
push
addl
fimull
mov
mov
test
inc
cltd
jmp
push
into
push
mov
insl
negb
push
sub
jae
xchg
push
add
je
ds
xchg
mov
and
mov
add
ljmp
xor
test
sbb
jne
fcoms
or
add
mov
dec
in
lods
lcall
repz
and
cmp
stc
mov
divl
cli
adc
shrl
sahf
adc
ror
fnstenv
jp
push
addr16
cmpsl
pop
add
popf
mov
aaa
pop
out
pop
sbb
fisttps
xchg
push
xor
or
lret
call
jne
cmpxchg
inc
arpl
aas
pcmpeqb
test
inc
mov
or
dec
jmp
test
mov
mov
push
mov
sub
mov
pop
cmc
mov
int3
stc
xlat
decb
insb
sub
sahf
nop
mov
pop
repz
jg
sbb
adc
mov
stc
cli
repnz
into
dec
inc
mov
inc
lret
jne
push
jnp
mov
dec
inc
add
enter
out
popf
sub
stc
mov
mov
pop
jmp
stos
das
sarl
xor
xchg
lahf
sub
out
and
and
fstps
and
fwait
mov
or
jg
outsl
pop
cli
enter
imul
dec
repnz
popf
bound
adc
es
adc
dec
push
push
fistps
lea
mov
maskmovq
idivl
lods
loope
lds
pop
push
ja
jne
cmp
call
mov
inc
outsl
jo
mov
pusha
xor
decb
dec
test
pop
jne
aas
mov
fcoml
mov
pushf
mov
cmpsl
add
mov
sahf
es
in
dec
shll
push
sbbl
sub
jno
mov
dec
cmp
add
insl
push
lds
pusha
add
in
mov
fcom
ret
lock
or
out
adc
sub
rorb
addb
mov
dec
cwtl
cmpsb
mov
les
sub
daa
fldl
inc
mov
mov
xchg
popa
add
pop
inc
cli
pop
mov
sub
pop
pop
inc
mov
xor
dec
aaa
pop
sub
rorb
sbb
sub
inc
ss
and
pop
stos
popa
push
shll
xchg
jb
dec
pop
dec
dec
xor
cs
mov
fcmovnu
popf
pop
imul
mov
ljmp
fdivrl
shrb
xchg
cmp
fsts
jb
mov
inc
cmpsl
mov
inc
cmp
push
mov
mov
xchg
aaa
pop
sti
inc
lds
jno
inc
sub
hlt
ljmp
lcallw
mov
xor
addr16
inc
mov
xor
push
test
popl
insl
dec
sbb
rorl
movsl
xor
adc
mov
les
insb
or
pusha
rcll
adc
test
xchg
push
icebp
repz
gs
add
add
pop
dec
push
mov
fnstcw
pop
cmp
pop
icebp
daa
mov
rorl
adc
and
push
pop
insb
cmp
inc
push
lahf
ret
fs
cmpl
xchg
aas
roll
stos
and
in
je
clc
cmp
xchg
jecxz
dec
cmpsb
test
push
stos
xchg
mov
sahf
lret
jmp
xchg
push
sub
inc
sub
sti
je
push
into
xlat
cmpsl
sbb
sub
lods
imul
aam
pop
and
sbb
leave
in
addr16
pop
cmp
adc
arpl
aas
dec
dec
or
pop
mov
or
sbb
cli
push
out
stos
mov
jb
ja
mov
mov
add
insl
leave
adc
push
dec
adc
or
xorb
daa
lea
ficoml
popf
mov
jno
sub
cmp
dec
repnz
imulb
pop
dec
pop
gs
sbb
mov
fsubr
je
aaa
scas
sub
jmp
and
sbb
mov
and
clc
inc
out
add
mov
lods
divl
clc
scas
mov
and
inc
lret
loopne
sbb
jl
adc
movsb
xorb
nop
mov
and
dec
mov
jp
xchg
aaa
test
ret
mov
ja
fsubs
adc
in
jp
sbb
add
int3
clc
stc
mov
lods
cmp
jns
mov
jns
push
in
out
fwait
mov
sub
das
jle
mov
and
mov
add
push
aaa
leave
xor
mov
fs
test
xor
ljmp
clc
xor
mov
cmp
fwait
loopne
push
add
lods
je
data16
std
repz
xchg
dec
inc
xchg
bound
cltd
pop
imul
andb
dec
sub
rolb
adc
mov
mov
nop
lods
jno
js
es
enter
cmp
je
jb
and
lea
out
jmp
faddl
mov
push
inc
dec
jmp
or
mov
gs
loop
jp,pn
and
or
xor
inc
and
cs
sahf
pop
mov
xchg
push
push
scas
outsl
mov
adc
jp
fcompl
js
xor
push
jno
fisttps
add
iret
lret
dec
pop
jmp
ret
in
push
push
in
mov
dec
cmc
les
cli
mov
mov
loope
mov
cmp
imul
jbe
aas
and
nop
xchg
pop
add
pop
sbb
mov
iret
sbb
mov
or
push
push
sahf
mov
jl
jnp
aam
mov
dec
ret
aas
pop
mov
jge
leave
fwait
lahf
push
push
mov
mov
dec
adc
push
jns
insb
jmp
enter
rcrl
jle
inc
mov
cld
cs
shrb
mov
int
xlat
cmp
add
fwait
jmp
test
and
jmp
std
mov
xor
mov
pushf
or
ret
into
push
jl
das
arpl
and
inc
aaa
cmp
mov
and
ficompl
pop
out
inc
fisubs
inc
loopne
mov
jne
fwait
call
loopne
xchg
fs
leave
movsl
dec
jp
sbb
dec
call
clc
decb
and
push
inc
sbb
jmp
xchg
push
loop
lret
dec
xlat
mov
inc
push
and
lahf
mov
xchg
aad
daa
es
pushf
or
mov
and
popa
adc
dec
dec
xor
xchg
xchg
lea
sbb
enter
adc
std
insb
pop
mov
pop
and
mov
sti
add
lahf
aam
jmp
iret
adc
push
cltd
in
fwait
in
xchg
insl
fdivs
mov
hlt
dec
adc
jo
stos
pop
pop
es
nop
dec
pop
inc
or
popf
cltd
sub
pop
add
mov
add
push
fisttps
and
repnz
cmp
cmp
xor
ss
mov
cmp
jmp
pop
and
aam
clc
out
adc
cmp
mov
or
xchg
test
movsl
cmp
fiaddl
xor
mov
mov
lcall
leave
cmp
test
or
shr
push
xchg
clc
cmp
stos
and
scas
in
jmp
sub
inc
mov
xchg
jb
mov
fstpt
repnz
enter
inc
push
std
fldt
xor
push
aam
iret
pop
mov
inc
dec
jg
mov
scas
ss
mov
pop
jl
scas
maskmovq
testl
push
jmp
adc
clc
mov
push
iret
push
dec
shll
imul
mov
or
pop
in
push
sti
test
faddp
subl
mov
repnz
pusha
jbe
insb
adc
out
lahf
cmp
jns
fs
jmp
movsl
dec
aas
imul
stos
out
xchg
mov
loope
add
lock
cmp
std
and
inc
cs
iret
adc
cmp
popf
xor
out
xor
movsb
int
sub
insl
push
lahf
or
inc
jle
inc
out
movsl
mov
insb
adc
fs
xor
scas
inc
and
jl
or
arpl
jle
fmull
stos
cmp
std
sub
pop
bound
push
mov
addr16
mov
fcoml
mov
pop
dec
daa
mov
cmp
cmpsl
int3
inc
cmp
mov
or
push
imul
movsb
stos
subb
lock
jp
scas
in
add
jbe
fidivrs
in
movsl
mov
add
mov
pop
mov
ret
mov
xchg
xchg
add
stos
ljmp
and
xchg
adc
imulb
fsts
fdivl
xchg
das
or
repz
rorl
jno
mov
inc
or
adc
inc
mov
mov
sbb
or
xor
mov
addr16
or
sub
test
mov
scas
std
jb
loopne
and
add
bound
mov
repz
pushf
inc
jl
je
inc
sarl
cmp
js
mov
mov
adc
xchg
sub
push
inc
imul
xor
mov
ljmp
cmp
push
aaa
sub
popf
mov
jmp
push
sti
ret
scas
fcomp
into
push
xchg
sbb
jne
mov
push
call
scas
mov
pop
sbb
out
sbb
addr16
das
jg
jbe
scas
xchg
mulb
flds
movb
mov
push
dec
hlt
adc
jle
dec
push
lds
fcompl
jl
cmp
imul
inc
cvtdq2ps
mov
repz
sbb
je
inc
clc
push
sbb
stc
mov
jae
loope
gs
pop
inc
pop
push
faddl
cwtl
push
mov
fcomps
mov
pop
or
or
and
push
cmp
and
scas
jl
sub
fidivrs
pop
jp
mov
cmp
insl
js
dec
push
loope
cmc
sbb
cmp
cmpsl
cld
int3
data16
cmpl
shll
outsb
stos
pop
stos
dec
xor
pushf
std
pop
mov
xor
adc
cltd
push
adc
movsb
add
jl
jmp
aas
dec
lock
inc
roll
inc
je
movsb
jne
jecxz
dec
rcr
test
clc
fisubrl
ljmp
push
lds
repz
mov
or
jg
ljmp
cwtl
xchg
addb
daa
and
sub
sbb
lock
sti
lahf
dec
sub
stc
pop
inc
jnp
pop
lret
gs
push
arpl
push
jb
push
in
sbb
iret
cltd
adc
mov
jbe
in
rolb
and
sahf
dec
aam
daa
fs
or
scas
jge
dec
mov
add
daa
fwait
cli
rcrb
and
mov
xor
xchg
out
sub
add
dec
add
sbb
outsb
sbb
imul
xlat
xor
mov
repz
popf
xchg
pop
call
hlt
xchg
cltd
add
stos
jl
jbe
stc
add
in
shl
aas
dec
adc
std
loope
sti
dec
movsb
push
stos
mov
cld
push
loope
out
sbb
cmp
stc
or
mov
cmp
pop
arpl
out
or
int3
adc
cmp
cmpsb
sbb
call
jg
enter
cmp
adc
lahf
or
xchg
aaa
xchg
iret
mov
test
xor
sarl
inc
sarl
or
lods
pop
lret
fs
fiaddl
loop
out
insb
ficompl
xor
or
aam
rorl
mov
enter
cwtl
mov
mov
dec
push
lds
cmpsb
sub
outsb
ja
fmul
mov
sbb
je
jecxz
mov
or
push
cmc
dec
mov
pop
pop
cmpsb
cmp
ret
sub
bound
add
push
clc
mov
and
and
push
or
sti
pop
mov
imul
mov
or
mov
insb
gs
dec
sub
pop
and
inc
data16
push
xchg
pop
jmp
jns
inc
jg
adc
pop
dec
jne
rcrb
dec
inc
push
pushf
adc
jmp
push
adc
jno
pop
and
jmp
into
pop
arpl
sub
mov
sbb
xor
lods
ret
xchg
mov
ds
adc
addr16
dec
sub
outsb
add
addb
cmc
fs
imul
push
pop
xor
iret
insl
xchg
xchg
or
add
adc
repz
push
pop
movsb
aam
rorl
dec
insl
fdivl
adc
fidivs
push
jge
and
cmp
jl
adc
into
push
fldt
mov
mov
test
repnz
out
rorl
in
dec
add
jp
lds
enter
out
cwtl
aas
pop
push
insb
jmp
loopew
lea
xchg
jo
jecxz
xchg
out
sub
or
xchg
out
cmp
sahf
dec
out
repz
or
xor
test
fisubl
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
test
outsb
pop
add
pusha
push
push
push
jnp
push
sub
mov
jo
mov
mov
and
sbb
in
push
inc
push
lds
cld
repz
lret
dec
or
cltd
subb
pop
cmp
sbb
psubq
or
loop
cmp
add
sbbl
jo,pn
sbb
or
mov
mov
cs
mov
mov
cli
insl
jmp
inc
out
incl
sub
push
movsb
mov
sub
cmpsb
pusha
mov
add
lret
sbb
dec
jb
scas
xchg
bnd
xchg
into
jmp
xor
das
hlt
pop
mov
push
or
fiadds
jo
hlt
jno
or
shlb
push
lds
jnp
push
jl
adcb
or
inc
lret
xor
pop
add
aad
int
ss
dec
daa
jle
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
