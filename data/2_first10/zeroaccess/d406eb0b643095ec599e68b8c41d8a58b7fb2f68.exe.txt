push
mov
sub
mov
mov
sub
xor
movl
not
jmp
cltd
data16
push
push
jge
jge
ljmp
out
jl
jl
lods
jl
jl
xor
xor
ja
or
adc
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
mov
pop
movl
mov
add
jmp
leave
mov
pop
mov
rolb
jl
lods
jl
jl
add
push
sub
fistps
lods
adc
mull
and
testl
decl
stos
pop
mov
pop
and
mov
data16
dec
test
stc
data16
pusha
loope
enter
add
fnstsw
jbe
jno
pop
or
and
jbe
and
popf
rcll
cmp
xchg
loopne
inc
stc
testl
cmpsb
mov
jno
insb
mov
push
pop
push
pop
stos
pop
jge
cld
mov
push
arpl
sub
shlb
imul
xlat
xor
cmp
in
hlt
dec
mov
lea
xorl
mov
notl
mov
movzbl
adc
mov
mov
xorl
push
sub
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movzwl
and
mov
movl
push
push
or
mov
add
mov
sub
mov
addl
mov
mov
sbb
xor
mov
subl
xor
xor
add
adcl
jmp
rorb
std
std
std
fsubrs
mov
jg
jl
jl
jl
out
cltd
insl
sbb
jo
sbb
pop
cmpb
fadds
mov
mov
rcr
inc
or
pushl
jno
sbb
xchg
test
or
inc
mov
xlat
mov
scas
mov
js
sub
enter
xchg
testb
ljmp
dec
std
stc
xor
xor
cmp
sbb
add
and
pop
cs
jle
arpl
pop
xor
repz
pop
push
fwait
mov
imul
dec
and
jmp
sbb
add
div
mov
mov
movl
jmp
mov
nop
jge
jns
imul
jl
lods
jl
jl
mov
test
cmp
orl
enter
sar
icebp
call
inc
mov
lret
sub
icebp
xor
push
insl
dec
cltd
xchg
mov
pop
pop
lcall
popf
pusha
push
and
jbe
rcll
fs
loop
push
rcl
push
fcmovbe
cmp
and
add
add
shll
aaa
lods
jecxz
mov
sub
punpcklbw
mov
pop
add
pop
out
movsl
push
mov
inc
xor
pop
addl
je
jg
in
cmp
adc
or
les
and
lahf
inc
sbb
testb
jmp
mov
add
jo
add
je
movl
sub
lea
mov
sub
mov
not
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
jmp
cs
inc
add
sbb
imul
lods
jl
jl
mov
lods
fdivrs
lret
sbb
sbb
adc
popf
ret
ficompl
inc
dec
inc
iret
jo
jnp
ficoms
cmpsb
push
mov
das
adc
data16
sbb
imul
xchg
mov
fsts
jo
push
cmp
sub
pop
mov
ret
or
fimuls
insl
adc
push
adc
out
lahf
mov
sub
add
inc
sbb
test
lret
rorl
xchg
pop
pop
dec
mov
or
loop
cwtl
mov
mov
ret
ds
adcb
inc
in
or
add
adc
add
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
sub
sub
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
jmp
pop
and
jge
pop
in
lcall
in
jno
jl
jl
jl
and
sbbb
push
idiv
out
nop
in
pushf
jne
and
cmp
cmpsb
pop
jecxz,pn
imul
pop
cltd
sbb
mov
into
push
rcl
jecxz
and
add
cmpsl
jae
xchg
sbb
dec
aad
and
and
pop
adc
xorl
pop
mov
jns
stos
pop
mov
dec
pusha
lret
leave
pop
adc
sbb
sbb
insl
scas
jb
cld
in
and
loope
into
jecxz
fcoms
cld
jl
jns
mov
in
aad
mov
imul
push
es
in
fs
negb
scas
add
movzwl
mov
jmp
repz
jecxz
push
scas
rcr
popf
rcrl
jo
jl
jl
jl
pop
dec
or
call
pop
adcb
ljmp
lea
push
lret
aad
insl
mov
pushf
cmpl
push
add
sbb
negl
xor
or
outsl
inc
or
push
xchg
or
push
pop
jne
ljmp
stos
ror
es
adc
dec
sbb
loop
push
lods
and
arpl
push
mov
push
mov
cmp
push
int
out
in
iret
lds
adc
shl
negl
sub
lds
out
mov
dec
fdivs
sbb
inc
and
divl
stc
lea
add
mov
mov
mov
xor
add
imul
sub
jmp
pop
jno
loope
jge
lods
xlat
mov
jns
arpl
push
dec
jo
jl
jl
jl
add
std
adcl
mov
dec
fwait
jmp
das
aas
jae
or
int
adc
push
jne
stos
push
mov
dec
add
sbb
int
cld
dec
jg
xor
inc
addl
mov
sahf
outsl
push
add
ds
in
cwtl
ss
push
nop
jo
fsts
cld
dec
ret
fstps
dec
dec
icebp
mov
sub
xchg
jb
ret
pop
fisubs
push
rclb
repnz
lahf
mov
xor
roll
push
cmc
xor
aam
cli
inc
xor
movsb
sub
push
sbb
add
sti
out
push
jbe
push
xchg
cld
decl
call
imul
decl
add
cld
decl
je
mov
jmp
push
mov
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
sbb
fcmovu
std
sarl
fstpl
orb
cld
jae
jl
jg
jl
fwait
mov
ja
add
das
fmuls
out
fiaddl
pusha
pop
into
daa
loop
jne
pop
popf
movsb
pop
pop
and
jno
das
add
es
aas
adc
mov
add
xor
ret
xor
leave
jg
sti
sahf
cli
mov
mov
inc
mov
pop
repz
in
in
iret
mov
pop
in
dec
or
sbb
jnp
pop
or
hlt
out
popf
pushl
push
in
jle
insb
mov
inc
mov
pop
jecxz
inc
add
cmc
cmp
hlt
mov
ds
inc
or
sbb
inc
push
sub
ss
faddl
iret
mov
push
mov
mov
pop
fnstsw
cmp
dec
into
xchg
xchg
fisttpll
xor
sub
push
push
in
xchg
cmp
fbld
out
scas
push
pop
outsl
sti
push
cmpb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
movl
movl
mov
xor
mov
sbbl
mov
mov
adc
jmp
adc
push
pop
aaa
movsb
popa
lods
ret
jb
std
icebp
jb
jl
jg
jl
jo
fcmovnu
scas
int3
fldl
int
inc
mov
push
lret
ds
jns
dec
sbbl
js
ja
push
pop
xlat
std
mov
push
add
mov
mov
lret
and
test
scas
fcmovbe
adc
pop
lret
mov
outsb
xor
xor
stc
mov
leave
pop
mov
ja
dec
lods
stos
mov
pop
mulb
cmp
xor
into
mov
pop
sub
call
bound
in
loope
mov
sti
in
dec
cmp
xlat
mov
inc
adc
repnz
out
or
sbb
inc
cmc
out
fcompp
mov
subb
sub
dec
inc
aad
popf
xor
dec
sbb
inc
les
add
sbb
jno
xlat
mov
or
filds
cmc
lret
xchg
inc
jg
cmp
xchg
cmp
mov
push
mov
xlat
ds
and
jge
push
pop
adc
jecxz
rolb
add
sbb
add
mov
cltd
mov
mov
jl
jno
jl
ss
stc
repnz
les
ljmp
mov
shr
jmp
cld
insl
xchg
mov
sub
fwait
xchg
sub
xor
push
sbb
mov
pushf
insl
leave
insb
xchg
movsb
sbb
popa
cmpsl
bound
les
ds
mov
int3
mov
shr
repz
ds
dec
mov
xlat
js
inc
mov
mov
call
push
les
ja
mov
add
and
fdivr
lret
enter
arpl
jae
or
sub
lods
repz
loope
push
in
pop
loope
push
cli
sub
mov
rcrb
popa
mov
icebp
loope
jne
cltd
pop
mov
push
xchg
call
out
jmp
mov
jne
push
adc
stc
xchg
lcall
int3
je
and
cwtl
call
inc
jmp
xchg
imul
pop
jge
add
shll
cmp
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
adc
movl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
jmp
loopne
sbb
mov
xchg
inc
pop
incb
jl
jno
jl
stos
out
mov
mov
inc
or
sub
shlb
sbb
faddp
push
andl
std
mov
out
inc
jnp
jmp
xor
mov
push
dec
xchg
mov
sbb
xchg
inc
or
jo
fsub
xor
mov
xor
add
mov
fs
cmpb
cmpsl
pop
pushf
cmpsb
xchg
mov
jbe
sti
leave
jns
int3
mov
in
xchg
or
lods
shll
cs
cmc
or
ret
add
adc
or
xchg
icebp
xlat
and
loop
jmp
or
std
cmp
cmp
pop
addr16
jo
lret
sbb
push
mov
cmp
iret
cmp
mov
movsl
enter
jl
fisubl
xor
call
cmp
out
lret
fcmovnb
xchg
lret
or
addr16
ret
inc
enter
clc
movl
or
mov
xor
mov
negl
add
movl
cmp
je
movl
push
jmp
mov
orl
mov
movl
sub
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
xorl
add
cmp
movl
jb
mov
jmp
fstps
xlat
jns
stc
popa
mov
pop
arpl
ja
jl
jg
jl
inc
dec
sub
mov
pop
push
sbb
adc
mul
scas
mov
loop
popf
call
ljmp
jl
xor
pop
popf
test
push
push
cli
lcall
sub
jl
insb
xor
insl
popa
inc
dec
sub
adc
pop
xor
pop
push
jae
pop
daa
add
jp
add
pop
or
lea
push
cmpsl
int
xchg
xor
mov
dec
xchg
call
inc
jmp
pop
mov
xchg
add
push
cmp
lret
adc
inc
ljmp
sbb
jp
sbb
or
inc
sub
mov
je
sbb
loope
xchg
addr16
out
adc
inc
loopne
or
sti
mov
pop
jl
je
lcall
not
stc
add
daa
xor
hlt
jmp
jmp
mov
xor
not
xor
mov
add
mov
add
movzwl
or
mov
add
imul
mov
sbb
mov
mov
sbbl
sub
movl
cmp
movl
ja
movzwl
xor
mov
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
fwait
dec
int
fldl
out
loop
inc
jb
cmpsl
lea
jl
jg
jl
insb
repz
mov
fistpl
inc
push
arpl
mov
push
xor
lods
cmc
xor
fimuls
mov
cltd
jp
mov
xor
test
xchg
sub
jmp
or
fwait
pop
mov
pushf
pop
push
mov
stos
out
sub
xlat
out
inc
ja
mov
cmc
xor
inc
loopne
mov
xor
pop
push
leave
or
push
dec
cmp
push
loopne
xchg
ret
jl
insl
and
adc
xchg
pop
and
mov
icebp
jo
aam
lcall
sub
rolb
jp
rorl
xchg
xchg
ret
loope
lcall
lret
adcb
loop
dec
enter
outsl
xchg
xor
out
mov
push
mov
dec
adc
jge
xchg
mov
movsl
fldl
inc
ret
push
addr16
insb
push
dec
and
loopne
sub
ficoms
sbb
adc
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
in
pop
std
stc
dec
mov
test
push
xor
jg
jl
out
xor
pop
nop
aas
stos
jmp
mov
bound
pop
divl
sub
add
jmp
mov
repnz
xlat
cmp
or
mov
mov
std
dec
jg
xchg
jp
xchg
mov
jne
mov
mov
or
sbb
dec
ret
mov
xor
insb
or
cli
pop
and
pushf
call
push
cmpl
std
pop
iret
mov
mov
mov
leave
xor
pushf
or
or
sti
btc
mov
hlt
insb
mov
fiadds
xchg
ljmp
loop
lahf
and
aas
dec
repnz
jmp
shrl
repnz
int
pop
rcrl
jne
adcb
gs
push
cmp
sbb
out
xor
add
sbb
pop
xchg
dec
fdiv
loope
sbb
daa
shll
scas
xlat
mov
jmp
test
sti
jge
testb
adc
orl
jl
jg
jl
xchg
sbb
lods
int
cmp
bound
or
mov
shrb
mov
and
push
jbe
lea
jge
lret
pop
lods
mov
adc
out
outsl
and
adc
sub
pop
mov
adc
pop
dec
jg
sub
adc
repnz
shrb
and
pop
jnp
aad
mov
xchg
push
daa
mov
mov
call
sti
mov
fidivl
and
dec
gs
cwtl
test
and
cmp
push
cld
inc
jge
fstpt
in
movsl
sbb
adc
movsl
dec
cmp
shlb
cmp
jecxz
cmc
mov
scas
sub
rorl
dec
xor
mov
or
xchg
in
out
lods
sbb
jmp
or
outsb
incl
pop
lock
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
jmp
push
in
dec
dec
pop
jge
in
std
ja
ret
daa
test
jl
jno
jl
inc
inc
cmp
imul
mov
adc
cmp
xchg
lods
lods
cmpsl
dec
mov
and
popa
fwait
cwtl
pop
jbe
dec
int
notl
sub
xor
pop
cmp
out
jo
inc
inc
arpl
mov
push
and
loopne
push
mov
jne
or
add
popa
icebp
mov
xor
cmp
sahf
dec
dec
xchg
outsl
mov
cmpsl
outsl
add
test
sti
lods
xchg
mov
adc
jbe
inc
icebp
pop
adc
fildll
ljmp
hlt
inc
mov
mov
jp
pop
enter
addr16
jg
mov
inc
xchg
cltd
jg
sbb
js
and
int3
mov
iret
lahf
inc
sub
test
test
sub
std
push
ficoms
push
fsubs
scas
pop
add
and
cld
outsb
in
call
mov
fsubrl
pusha
pop
sbb
cwtl
pop
gs
mov
xor
push
in
inc
hlt
xor
pushf
clc
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
inc
imul
jno
repnz
cltd
or
jg
jl
pop
cmp
mov
andl
sub
xor
ret
mov
out
mov
mov
sbbl
xchg
aaa
sub
iret
test
ja
inc
scas
movsb
ja
sbb
sbb
test
sub
mov
mov
add
sahf
sbb
repz
lock
imul
loope
das
mov
mov
cmp
call
test
clc
sub
jg
lret
jg
lret
aas
divl
xchg
mov
cs
iret
push
mov
xchg
mov
push
add
test
and
push
out
push
jne
inc
push
int
push
ljmp
mov
in
lods
test
push
stc
into
pop
mov
sbbl
shlb
pusha
iret
push
cltd
adc
dec
dec
rorl
jno
adc
ror
cmpsl
lock
hlt
pop
movsb
jmp
insb
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
jmp
mov
mov
mov
push
adc
dec
cli
stc
lcall
jl
jne
push
push
ret
mov
call
roll
stc
adc
push
jno
outsl
pop
loopne
arpl
fucomi
leave
imul
cmp
sbb
mov
pop
lret
sbb
pop
lods
sub
and
lock
sub
sub
call
je
sub
dec
cmp
mov
aas
push
in
and
adc
leave
nop
push
mov
jl
and
clc
mov
pop
int
dec
xor
or
cmp
ljmp
push
jmp
inc
jae
test
sbb
in
pop
sub
mov
pop
inc
mov
dec
and
daa
call
cmpsb
fisttpll
push
jecxz
clc
or
lcall
popf
pop
nop
enter
les
popa
xchg
or
adcb
dec
xchg
roll
addr16
outsb
push
push
dec
imul
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
jmp
test
iret
clc
fnstsw
outsb
ret
popf
aam
jbe
sbb
lahf
or
jl
jl
jl
int3
pop
outsl
roll
jg
aas
fsubr
push
enter
and
ljmp
push
lahf
adc
pop
sarl
or
shrb
in
lret
inc
cmp
and
adc
jmp
out
mov
out
and
sbb
cmp
or
jg
cmp
and
cmpsb
jg
fdivr
jnp
ljmp
or
push
ret
cmpsb
sbb
test
jle
xchg
cs
imulb
dec
loopne
xchg
xchg
pop
xchg
jmp
mov
sub
nop/reserved
pop
in
jge
repz
outsb
jae
mov
stc
insb
outsb
adc
dec
dec
mov
inc
cmp
movsl
repz
stos
and
addr16
clc
fwait
jnp
jl
xchg
outsb
ljmp
notb
cwtl
jecxz
shr
lds
rcr
sbb
and
jmp
push
and
push
and
mov
mov
mov
xor
mov
movl
jmp
aas
enter
jge
jge
int
jae
fdivrs
jl
jl
jl
push
add
outsl
sub
pop
rcrb
sti
imul
sti
ja
mov
jo
add
push
dec
inc
aaa
sub
inc
mov
dec
insl
cmp
sub
lea
xchg
ljmp
xor
pop
mov
clc
jnp
and
xchg
pushf
hlt
sbb
and
shll
mov
push
xor
inc
cltd
mov
mov
outsb
xlat
jecxz
addr16
cli
daa
scas
xor
jp
pop
enter
adc
pop
cmc
or
pop
testb
pop
xor
out
gs
lds
jl
nop
nop
int
or
cli
xchg
jl
xchg
mov
icebp
icebp
jne
arpl
je
cmp
adcl
push
sub
ds
js
int3
in
add
sub
mov
add
mov
pop
mov
clc
negl
push
jmp
xor
aaa
pop
pop
fimull
mov
stos
lods
jmp
jl
jl
iret
mul
idivl
movb
js
das
fdivl
push
sti
int
mov
lods
and
mov
mov
and
loope
call
mov
push
fisttpl
xchg
and
stc
pmulhw
mov
jb
cmp
sbb
pop
lds
mov
inc
enter
pop
xor
fsubrs
jae
cmpsb
xchg
jno
hlt
hlt
cmp
add
nop
leave
add
test
inc
out
iret
xorb
mov
and
jae
jbe
and
inc
cmp
hlt
xor
lock
inc
addr16
pop
push
sbb
inc
pop
fmuls
sub
sbb
dec
mov
xchg
movsl
inc
mov
rcll
add
xor
cwtl
pop
ds
adc
loope
cli
mov
jmp
xlat
push
imul
xor
xchg
stc
das
xor
int3
add
jl
jl
xchg
push
jnp
cld
adc
xchg
repnz
int3
inc
pop
add
adc
push
sub
js
mov
rorb
xchg
jg,pt
fsubrl
orl
lea
test
les
sub
mov
dec
push
mov
pop
les
mov
mov
fadds
jbe
xchg
ljmp
sub
sbb
insb
pop
pop
notb
out
pop
mov
jle
adc
mov
mov
or
jge
jbe
mov
xchg
cmp
jb
jp
out
jnp
test
es
cmp
test
adc
into
daa
inc
cwtl
mov
mov
fldt
in
pop
mov
cmp
je
fisttpll
nop
in
adc
aaa
outsl
aaa
add
test
push
mov
rorl
add
xor
mov
push
mov
subl
add
cmp
jmp
in
ds
inc
jge
test
testb
cmpb
and
jl
push
jl
jl
addl
fmuls
aam
or
imul
icebp
bound
mov
js
jg
les
cmpsb
ja
mov
scas
and
lret
push
cmp
mov
sub
daa
add
inc
int3
pop
pop
cli
aad
clc
sub
aad
fwait
jecxz
mov
xor
cmp
jl
aad
or
ja
add
lahf
cmpsl
push
or
cmpsb
or
xchg
cmp
dec
lret
pop
sub
stos
fdivr
pushf
add
adc
xor
ret
push
push
cmc
or
sub
roll
cmp
cmc
xor
fbld
or
inc
imul
sbbb
mov
and
or
xchg
int3
add
stos
push
mov
je
adc
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
or
mov
sub
add
orl
xor
jmp
mov
dec
jecxz
popf
jp
sahf
js
adc
ja
add
jl
jl
incl
cwtl
jns
outsl
lcall
jge
adc
add
jecxz
mov
mov
add
out
call
ss
cmp
in
adc
cli
imul
inc
xchg
sbb
push
add
sub
scas
gs
xchg
cmp
sbb
jae
mov
or
in
mov
rolb
insb
fsts
fdiv
dec
push
in
add
stos
dec
frstor
mov
mov
dec
mov
int3
fistpl
sub
test
enter
dec
xor
jbe
mov
cltd
lahf
bound
jecxz
pop
leave
mov
jb
or
xchg
and
movsl
dec
dec
mov
nop
ljmp
and
and
leave
push
adc
stos
dec
ja
sbb
or
icebp
jbe
dec
scas
inc
incl
inc
dec
add
push
cs
movl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
jmp
jnp
decb
pop
mov
pop
mov
add
jl
jl
add
mov
je
xchg
sub
lahf
lcall
push
inc
daa
inc
push
push
adc
insl
xor
add
dec
xor
fwait
dec
aad
lods
lds
js
mov
xor
jne
ds
ficoms
jge
xchg
repnz
repnz
sti
dec
dec
jne
mov
sbb
mov
and
dec
insb
add
popf
sbb
test
push
incb
fisubrl
inc
push
lahf
sbb
push
insl
sahf
in
sub
cli
lret
clc
div
mov
mov
rcrl
cmpsl
xor
arpl
add
cmc
pop
call
add
mov
pop
xchg
mov
jbe
lret
jo
mov
test
shll
call
loop
push
and
and
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movzbl
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sub
mov
mov
sbb
mov
push
mov
xor
cmp
je
mov
mov
sub
jmp
notl
adc
lea
xchg
xchg
cwtl
sbb
das
inc
push
add
jl
jl
sbb
or
test
les
incl
xor
lods
cli
fwait
inc
mov
fimuls
pop
cmp
inc
ja
dec
or
ja
mov
sub
jbe
insl
jge
mov
popa
add
popf
mov
inc
and
cltd
cmp
dec
mov
sub
dec
push
sbb
lds
aam
fwait
lret
les
jnp
xchg
pop
push
dec
push
aad
push
mov
lcall
pop
sub
add
mov
call
shrl
and
xor
int
bound
sbb
mov
cltd
cmp
push
push
jbe
inc
inc
clc
xchg
adc
cmp
pop
stos
xor
sub
sarl
jne
mov
add
jmp
jmp
xchg
xchg
pop
test
imul
mov
jl
pop
jl
jl
push
jns
push
mov
stos
cs
push
mov
enter
test
mov
add
mov
xlat
mov
jmp
add
mov
cmp
rclb
add
xor
mov
mov
sbb
adc
sub
xor
jb
inc
adc
add
xor
mov
mul
daa
stc
mov
pop
cmp
sub
xchg
xchg
dec
pop
pop
fdivr
in
jl
inc
das
jl
add
sub
mov
lahf
jecxz
cmp
aas
in
push
hlt
mov
test
pop
mov
adc
mov
mov
jne
mov
mov
pop
sbb
adc
dec
or
imul
inc
test
mov
jmp
add
andl
jg
and
jl
pop
jl
jl
pushf
stc
addr16
pop
test
mov
pop
adc
stos
mov
cmpsb
adc
test
pop
lock
or
call
fst
mov
std
cwtl
jnp
inc
test
and
jae
outsl
mov
xor
sbb
pop
mov
dec
push
dec
lods
inc
pushf
mov
fwait
cli
sub
and
ja
push
mov
and
xor
xchg
dec
xchg
cmc
imul
sahf
scas
sub
jne
test
test
fs
jno
sub
orl
int
ss
and
push
push
mov
repz
push
push
xor
pushf
push
in
mov
dec
add
call
shll
lret
inc
mov
push
ret
xchg
inc
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
mov
xor
mov
add
jmp
sarb
jge
js
dec
mov
testb
jl
jl
jl
fidivs
cltd
xchg
cmp
imul
ds
add
test
cltd
dec
scas
pop
add
ja
cmc
sbb
dec
xor
repz
leave
lret
add
sbb
cmpsl
inc
repz
ficoms
sbb
leave
jecxz
push
jo
mov
mov
and
leave
ror
mov
divb
push
nop
push
dec
push
ja
sar
ds
or
clc
pushf
mov
xchg
xchg
loopne
lds
cmpsb
push
push
nop
push
inc
mov
inc
pop
testb
repz
in
mov
mov
push
jecxz
enter
mov
lahf
loope
push
adc
nop
jecxz
pusha
gs
or
jmp
das
cmp
test
jg
call
pop
lea
sbb
mov
insb
add
inc
push
adcl
insl
out
lret
test
add
dec
sahf
xor
jg
mov
xor
xor
mov
or
mov
adc
movb
not
lea
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
sbb
mov
xorl
mov
xorl
xor
xorl
sub
addl
mov
xorl
movl
jmp
xor
adc
in
std
add
sub
push
jl
push
jl
jl
pop
js
es
pop
lcall
stos
push
mov
in
mov
xchg
sbb
pop
dec
sub
stos
in
icebp
and
mov
and
pusha
fs
inc
push
mov
add
mov
insb
out
imul
out
mov
jno
mov
adc
outsl
sbb
dec
clc
in
fnstsw
jecxz
lock
pop
pop
dec
push
ljmp
dec
jg
inc
mov
adc
xchg
cmc
insb
in
cli
mov
push
fisttpll
pop
inc
jp
stc
and
pop
inc
and
push
jo
test
cmp
mov
mov
jno
jae
jg
aad
xchg
jecxz
fdivrs
subl
and
mov
and
movl
mov
mov
sub
sub
mov
mov
push
xor
movzbl
sub
jmp
cld
pop
cwtl
daa
pop
out
jnp
or
iret
sub
jl
jl
jl
inc
mov
dec
adc
or
out
out
gs
sub
jae
push
mov
hlt
scas
push
pop
push
xor
test
fdivrs
push
cwtl
scas
lret
mov
jne
punpckldq
mov
inc
push
inc
lret
enter
xchg
dec
fyl2xp1
inc
jb
out
xlat
push
cmp
fs
cwtl
xor
jno
cltd
divl
xchg
mov
insl
mov
repz
neg
pop
pusha
dec
or
fldenv
fwait
jl
leave
pop
sbb
jae
iret
aas
test
and
in
adc
add
ficoml
mov
push
cmpsl
pop
jne
pop
adcw
ss
stos
sub
lahf
in
sub
test
in
cmp
dec
stos
cwtl
lahf
pop
dec
mov
mov
sahf
jb
add
add
add
add
movl
jmp
movl
mov
jmp
sub
cmpsl
sub
sbb
sbb
inc
sbb
jl
jl
mov
and
cltd
jo
mov
neg
addb
shll
neg
aam
fsubl
insb
es
mov
and
xchg
jbe
insl
into
sbb
jae
iret
ds
fldt
gs
jg
xor
jb
sub
xchg
cmp
shll
fwait
jbe
pop
sub
ja
xchg
push
mov
xor
in
mov
mov
lds
mov
cld
push
pop
ljmp
divb
mov
jb
lret
clc
mov
mov
femms
ror
push
lret
dec
aad
jae
dec
test
cmp
in
inc
jnp
ss
push
in
cmp
mov
jae
ret
inc
imul
jg
mov
adc
add
fstl
gs
xor
sbb
jle
sti
dec
imul
cwtl
jne
add
or
add
clc
inc
movl
jb
mov
mov
xor
mov
xor
mov
xor
adcl
jmp
push
ds
fldl
sub
jl
push
jl
jl
xchg
ds
dec
mov
push
jg
adc
call
ljmp
enter
rcl
add
scas
fiaddl
cmpsl
std
cmp
orb
jp
aas
push
cmc
jae
mov
pop
aam
pushl
mov
cmp
jle
es
pop
jb
or
cwtl
lret
pop
pop
stos
cld
arpl
add
cld
outsb
enter
push
lahf
popf
mov
ret
mov
icebp
push
cmc
into
rclb
or
adc
inc
bound
jmp
mov
test
add
insl
test
adc
inc
lock
pop
mov
dec
pop
mov
leave
xor
hlt
pop
dec
xor
mov
out
and
stc
sti
cmp
sub
lea
jp
stc
xchg
ret
or
repz
add
lock
push
dec
jae
lods
cli
pushf
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
mov
mov
insl
jnp
stc
sbb
nop
mov
sbb
jl
jl
push
fistl
nop
xchg
mov
cmpsl
jno
aaa
jnp,pn
xchg
sbb
ljmp
mov
push
pop
jmp
xchg
adc
nop
out
sub
into
fcmovbe
test
mov
jns
stos
aas
mov
data16
jo
lds
popf
push
stc
ljmp
imul
cmpsb
and
xor
add
aam
cwtl
call
dec
std
popa
push
call
jmp
addw
nop
push
mov
mov
sub
sub
adc
and
mov
inc
push
imul
inc
or
adc
adc
or
movsl
jle
push
inc
test
push
mov
ret
xor
ds
or
aas
cltd
inc
sarb
into
jns
fadd
and
xchg
jge
mov
xor
jmp
sbb
mov
std
adc
mov
jl
jl
jl
mov
leave
inc
fisttps
test
ret
sbb
fwait
mov
out
sti
iret
push
in
push
add
pop
cmp
inc
mov
mov
or
and
fmull
inc
int3
pop
test
push
cmpsb
inc
sbb
jbe
sub
addr16
or
push
mov
mov
repnz
sub
hlt
cmpsb
adc
xor
cmp
scas
pop
shl
ds
scas
and
in
cmc
or
ss
sbb
inc
dec
cmp
stos
stos
jl
mov
mov
pop
call
insb
cmpsb
inc
movsb
bnd
lret
or
mov
filds
and
pop
dec
inc
jle
scas
add
inc
mov
xlat
dec
pop
jb
test
mov
mov
mov
idivb
and
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jmp
daa
mov
mov
dec
jle
lea
jl
push
jl
jl
jo
dec
mov
fdivl
or
mov
and
xchg
ss
out
repz
sbb
shrl
lea
js
sub
and
and
xchg
lret
lret
int3
lret
or
fdivl
arpl
jmp
out
jle
fwait
ret
aas
xchg
pop
pop
fidivs
or
repnz
mov
hlt
and
stos
icebp
jle
ror
clc
add
ds
dec
pop
or
or
in
ds
lcall
shrl
xchg
xlat
or
jo
ja,pt
hlt
dec
cs
mov
shll
stos
lock
aam
cwtl
aad
call
cmp
adc
call
inc
mov
jae
jne
enter
imul
mov
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
jmp
sbb
sbb
cmp
les
mov
jl
push
jl
jl
clc
rcl
push
inc
fisttps
push
cli
loopne
pop
xorps
sbb
insb
cwtl
inc
mov
mov
nop
push
divb
inc
insb
pop
gs
les
mov
mov
and
lret
xchg
adc
rolb
cli
shlb
pop
jge
xchg
pop
ds
mov
push
adc
aam
decb
mov
gs
jecxz
test
out
inc
cmp
cwtl
ljmp
ja
orb
cmp
pop
mov
dec
push
dec
loope
cltd
jmp
xchg
je
notb
and
orb
sub
mov
sti
adcl
xchg
pop
push
mov
dec
es
xchg
jp
iret
les
mov
cmp
jp
adc
rorl
add
imul
test
xchg
lret
pop
jl
push
jl
jl
pushf
aad
jne
xor
xor
imul
cs
out
filds
int3
dec
and
mov
jge
ret
ret
ss
pop
adc
pushf
mov
scas
or
fstpt
add
sub
mov
push
iret
popa
cmpsb
pop
pop
into
push
adcb
lods
or
leave
sbb
mov
add
mov
mov
incl
inc
xchg
minps
gs
xchg
inc
lahf
cmp
sahf
add
das
test
push
or
jl
cmp
int3
xor
loopne
pop
loop
pop
push
push
pushf
lods
dec
mov
scas
outsl
xchg
and
adc
mov
xor
sub
stos
inc
vmwrite
add
rcrb
dec
cmp
dec
int3
mov
pop
jbe
cmp
scas
rcrl
or
leave
ret
push
mov
push
adc
movl
sbbl
mov
xor
add
xor
add
sub
xor
mov
xorl
mov
sbbl
xor
addl
add
mov
adcl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
xor
xor
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
jmp
movsl
mov
gs
leave
cmp
jl
jg
jl
push
rol
sbb
stos
sbb
repnz
mov
loope
rorl
adc
ror
inc
mov
mov
pop
mov
outsb
or
and
push
push
call
cs
dec
mov
lret
jno
addr16
cld
call
repnz
sbb
int
xor
xlat
aam
testb
inc
fistl
push
out
aaa
icebp
push
sbb
mul
cltd
and
es
in
jl
jb
pop
rol
mov
pop
enter
or
xchg
xorl
pop
mov
cli
cmp
mov
bound
stos
shlb
rcrl
bound
aam
sahf
enter
test
pop
inc
mov
push
in
sbb
into
dec
cmc
mov
hlt
xlat
push
jno
cmp
fnsave
xchg
outsl
test
mov
ja
cli
divl
andb
loopne
orl
jg,pn
rorl
lahf
or
push
cwtl
mov
scas
jb
mov
and
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
shll
mov
mov
or
mov
jg
jl
shl
imul
cmp
add
inc
pop
jge
cmp
or
and
push
sti
pop
pop
in
jnp
cmp
xor
lahf
inc
mov
frstor
jp
scas
jb
jno
fwait
mov
mov
popa
inc
pop
iret
pop
imul
jns
sarl
mov
fnstcw
popa
ret
sbb
movsl
pushf
mov
mov
sub
mov
push
cmp
cmp
in
and
sbb
insl
mov
inc
dec
fucomp
mov
xorl
lcall
xor
clc
rclb
mov
lahf
xchg
fwait
test
mov
in
cmp
cld
lret
pop
arpl
mov
jne
xor
mov
js
fabs
or
add
adc
mov
pop
dec
mov
ja
leave
ds
inc
lock
cmp
jge
in
xchg
or
push
lods
ja
xor
inc
aam
imul
outsl
jns
imul
sub
cmp
inc
adc
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
jmp
outsb
stc
sti
movsb
jnp
gs
dec
xchg
icebp
pop
adc
jg
jl
jae
xor
xor
repz
fisubl
push
pop
pop
pop
popa
outsl
decb
aaa
nop
pop
cwtl
loop
xor
leave
mov
outsl
cmp
fdivl
enter
sbb
testl
loope
push
xchg
andb
sbb
dec
enter
sbb
stos
fstps
xchg
inc
out
mov
dec
pop
fsubrl
pusha
int
xchg
cmpsl
inc
je
pop
mov
cltd
jnp
fwait
cld
adc
mov
cli
cli
fstpt
enter
mov
in
in
loope
sbb
rcr
mov
mov
addr16
ja
outsl
push
enter
into
jb
lods
int3
jbe
or
in
push
mov
sbb
mov
or
push
push
addr16
repnz
sbb
loope
rcrl
sbb
pop
and
testb
data16
cmpsb
jmp
add
jae
jns
ss
inc
and
fstl
bound
daa
jae
xchg
cmp
je
or
scas
js
jb
adc
jg
inc
dec
lods
aam
aam
imul
dec
adc
enter
sbb
add
add
xchg
imul
les
jmp
pop
xchg
int
adc
jg
jl
mov
clc
sub
push
jecxz
stos
arpl
addb
ljmp
in
mov
cmp
pop
mov
xchg
add
rcrb
xlat
pop
test
out
jae
in
jb
mov
pop
sub
dec
inc
out
int
nop
lahf
bound
pop
push
pop
ret
aad
adc
pop
rolb
sub
sub
mov
push
or
test
in
gs
inc
das
out
mov
jge
and
add
aad
adc
xchg
cmp
test
dec
rcrl
fildl
movsb
lcall
and
pop
pop
sbb
mov
mov
mov
lods
dec
sti
fstl
scas
js
movsb
mov
xchg
mov
hlt
rorl
test
outsb
inc
cmc
dec
mov
pop
and
in
or
jne
loop
je
ja
call
clc
or
pop
sub
xchg
ret
and
into
outsl
lahf
jp
or
jno
mov
mov
pop
ret
push
mov
push
add
movl
mov
and
mov
movl
mov
xor
add
jmp
jne
xchg
mov
arpl
inc
or
aaa
jg
jl
jo
pop
add
cmp
sbb
xor
sub
dec
pusha
movsb
es
out
nop
jle
adc
loopne
ficoms
fnsave
int
mov
dec
xchg
adc
test
data16
sbb
jge
sub
iret
pop
xchg
inc
ja
dec
out
xchg
repz
xor
ret
cmp
cmp
int3
push
xor
xor
popf
jnp
dec
sub
jg
push
psllw
adc
out
fldt
xchg
ret
incl
push
out
jb
jmp
sub
fbld
push
test
insb
test
les
and
aas
cmpsl
pop
out
and
shrb
test
sti
enterw
imul
es
lea
js
mov
inc
dec
out
sub
add
mov
aad
xor
ret
ljmp
sub
insb
cs
pop
mov
rcrb
xchg
lds
arpl
jp
je
xor
out
mov
jp
sub
out
cmp
loope
or
fcoms
sbb
or
aas
sbb
in
das
movsl
lahf
pop
lds
call
call
mov
sbb
mov
not
mov
mov
mov
sbbl
mov
mov
sub
mov
mov
and
jmp
fdivs
dec
stc
gs
jg
pushf
mov
in
adc
jl
jg
jl
ret
outsl
inc
add
dec
push
pop
out
fcom
push
or
shrl
xor
arpl
push
jno
and
test
shr
mov
mov
fwait
sub
sub
lock
sbb
out
rol
mov
mov
addr16
test
add
popa
inc
aas
sbbl
pushf
mov
scas
or
and
pop
ret
sub
sarl
sub
xchg
nop
pop
sub
jp
or
jge
imul
sub
push
stc
imul
enter
shrb
orb
jl
mov
mov
dec
mov
or
jecxz
fsubp
sbb
add
fbstp
inc
mov
push
inc
pop
ljmp
push
sub
jbe
mov
clc
mov
loope
dec
lods
in
ret
xlat
or
dec
dec
xor
repnz
cmc
repnz
xchg
movsb
xor
sub
lods
scas
pop
repz
sub
jns
cli
in
mov
or
out
mov
ja
sti
pop
sbb
mov
gs
pop
stos
jno
sub
push
mov
adc
mov
sbbl
jmp
jno
xlat
sti
sti
std
add
mov
in
dec
movsb
pop
jl
aaa
jg
jl
in
sbb
fcompl
xor
adc
cmp
loopne
add
cmp
outsb
mov
cmpsl
test
test
out
dec
sbb
test
pop
cmp
aam
sub
pop
testb
cli
aas
out
sbb
sahf
stc
loop
dec
je
jae
push
jl
dec
fwait
cmp
insl
push
ljmp
and
fcomp
inc
push
pop
inc
jo
lcall
inc
outsb
aaa
cwtl
into
and
cmp
into
sub
jmp
lds
jnp
mov
repz
jle
frstor
test
lahf
cmpl
ret
mov
mov
sbb
pop
outsb
pop
mov
rol
inc
pop
ds
inc
loope
aaa
xchg
xor
scas
xchg
push
ljmp
iret
ret
adc
add
jge
xor
flds
icebp
mov
insl
rcrl
fldenv
pop
sub
cwtl
dec
pop
xchg
jns
pop
cmpsb
ds
stc
mov
dec
pushf
dec
mov
stos
push
outsb
lods
adc
out
pop
mov
and
mov
and
into
inc
cwtl
gs
mov
popf
sar
stos
adc
and
mov
cmp
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
push
push
push
push
adcl
call
test
movl
je
xor
jmp
andl
push
adcl
call
andl
test
movl
je
push
push
orl
call
movl
jmp
mov
mov
movl
sub
lea
neg
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movzwl
adc
lea
sbb
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
sbb
mov
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
sbbl
add
movl
mov
mov
movl
cmp
mov
movl
je
mov
xor
add
imul
movl
mov
jmp
xor
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
or
mov
mov
add
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
xor
mov
mov
movl
xor
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
negl
mov
add
mov
xor
add
mov
sub
add
mov
or
mov
sub
mov
mov
mov
or
xor
sbb
add
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
or
add
adcl
mov
and
mov
lea
or
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
orl
xor
mov
or
add
mov
sub
mov
sbbl
movl
sbbl
mov
mov
movzwl
and
movzwl
addl
add
or
movl
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
orl
add
movl
cmp
jne
mov
xor
mov
xor
add
movl
cmp
movl
jne
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
sub
mov
subl
sub
notl
add
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
movzwl
adcl
add
mov
mov
adc
mov
sbb
mov
orl
xor
lea
adcl
xor
sub
movl
mov
movl
movzwl
movl
cmp
mov
mov
movzwl
jg
orl
xor
sbbl
sub
sbbl
sub
movl
mov
jmp
xor
movl
lea
mov
mov
mov
mov
mov
cmp
je
not
mov
movl
movl
movl
jmp
mov
mov
movl
cmp
movl
jne
not
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
mov
xor
mov
add
mov
movzwl
subl
not
addl
and
movl
mov
movl
mov
jmp
xorl
xorl
mov
pushl
call
test
movl
je
movl
jmp
mov
cmp
movl
jne
mov
movl
movl
jmp
mov
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
movl
sub
mov
orl
mov
add
andl
xor
movl
cmp
movl
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
xorl
movl
mov
push
mov
xorl
jmp
mov
data16
inc
xor
dec
jg
jl
fdivrs
jl
jbe
xchg
mov
jnp
rcl
cmpsb
andb
jb
push
nop
push
scas
mov
add
push
inc
arpl
decl
inc
iret
dec
shlb
popa
and
cli
test
data16
lret
inc
std
mov
mov
mov
and
and
call
push
popa
mov
popf
mov
pop
icebp
dec
pop
or
or
push
in
das
shll
ss
test
lret
mov
lahf
dec
inc
adc
mov
or
pushf
aam
xchg
mov
nop
ret
add
add
and
cmp
insl
pushf
jo
inc
xor
jp
in
cmp
ret
mov
loop
and
dec
fs
or
cwtl
mov
ds
mov
xchg
cld
xor
push
push
sub
test
dec
jne
leave
arpl
inc
addr16
les
pop
mov
xchg
lahf
pop
loop
stos
jecxz
inc
dec
call
lock
std
push
fs
cmpsl
sbb
push
movsb
xlat
xchg
cmc
or
scas
mov
xchg
dec
sbb
pop
ficompl
test
adc
loopne
mov
cmpsb
movsb
xchg
sub
push
test
leave
or
add
mov
xor
adcl
xor
mov
sbbl
add
orl
add
sbbl
imul
movl
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xor
mov
adc
mov
xor
xor
add
add
jmp
dec
cmp
and
jp
pop
inc
push
and
fldt
jl
fdivrs
jl
dec
jns
or
adc
das
or
add
rorl
and
hlt
shlb
sbb
cmp
fcoml
test
mov
jl
mov
dec
mov
inc
adc
lock
ja
shl
shrl
mov
adc
sahf
sahf
pop
add
sub
mov
icebp
add
dec
xor
pop
aas
loop
or
push
xor
aam
lahf
dec
and
push
clc
xlat
gs
stc
jmp
add
adc
cltd
bound
lods
fsubrs
push
xchg
leave
lock
fucomi
shlb
push
jns
lock
lock
mov
jnp
sti
stos
std
cmp
xor
mov
repz
stc
leave
scas
xchg
test
adc
mov
mov
int3
shlb
mov
sub
sar
mov
in
push
clc
rcrl
cmp
mov
scas
sub
jnp
xor
jl
cmp
push
add
outsb
repnz
cld
add
shlb
sbb
add
in
scas
sbb
std
test
in
lock
mov
jns
sub
jo
cli
pop
sahf
push
lods
mov
cwtl
stos
scas
sbb
inc
mov
jmp
mov
jmp
mov
stc
mov
pop
lahf
add
out
cmpsl
sub
jg
jl
inc
or
and
mov
mov
mov
or
push
cmp
xor
jmp
in
jle
mov
stos
lret
cmp
in
sahf
xchg
cltd
std
or
push
dec
and
adc
dec
std
push
mov
ret
jp
dec
ds
mov
dec
dec
outsb
mov
fiaddl
adc
int
pop
xchg
push
fs
dec
mov
lds
xor
std
cs
inc
rorl
push
dec
test
int3
adc
scas
jae
jnp
nop
fdivrs
inc
sub
add
enter
mov
clc
mov
dec
mov
xor
xor
xchg
ret
int
add
call
leave
arpl
int
data16
lcall
xchg
jbe
andl
es
or
mov
aad
or
int3
lret
dec
pop
jns
xchg
pop
popf
push
aas
push
test
sbb
ja
addr16
push
push
dec
or
lea
movsl
or
inc
jecxz
insl
repz
adc
in
dec
adc
fwait
mov
ret
sub
mov
mov
mov
and
pop
mov
sar
ror
adc
sahf
out
sti
adc
or
inc
cld
mov
xor
xor
add
add
imul
jmp
xorps
lds
in
bound
rcrl
out
xchg
add
jl
test
movsl
jecxz
loop
mov
lods
in
and
lods
ficomps
mov
adc
or
xlat
cmovne
cs
jbe
mov
push
mov
daa
imul
fidivrs
sahf
gs
orl
and
sbb
push
leave
pop
mov
ret
jno
mov
fwait
pusha
ja
pop
cs
jl
mov
cmp
popa
mov
gs
xor
and
sti
or
pop
pop
jge
xchg
in
ljmp
insl
xchg
mov
xchg
jle
and
les
cmpb
xchg
arpl
adc
nop
mov
rcrb
clc
ljmp
aad
mov
cld
stos
divl
jbe
inc
sti
jno
mov
fwait
arpl
cmp
mov
push
sbb
mov
inc
cmp
push
inc
dec
movsb
movl
mov
sub
lds
push
bnd
sbbl
ret
out
mov
cmpsl
stos
xorb
pop
les
out
mov
sbb
mov
cmp
imul
inc
xchg
call
fwait
lods
sub
jne
popf
mov
gs
pushf
add
or
lock
je
xor
add
mov
jmp
stos
adc
mov
mov
pop
xchg
out
sub
jl
jg
jl
daa
and
inc
push
js
sbb
fsubr
sarb
cmp
xchg
insl
mov
scas
vmwrite
enter
mov
mov
inc
ror
lds
dec
adc
adc
mov
push
popa
jne
inc
push
fistl
imul
lods
dec
jmp
mov
mov
mov
ds
mov
in
xchg
clc
aad
jge,pn
and
and
xchg
scas
cmc
out
add
clc
and
sti
aam
js
out
push
push
inc
cmp
bound
rol
mov
aaa
mov
or
leave
mov
inc
push
xchg
je
addr16
ljmp
cld
fdiv
call
jle
mov
mov
cmp
sbb
dec
loope
sbb
cwtl
stos
mov
sbb
imul
fsubr
lods
mov
xchg
inc
cmp
pusha
cmpsl
adc
mov
sub
addb
adc
aaa
aam
xchg
leave
mov
push
loopne
push
cs
mov
push
dec
stos
mov
test
jb
sub
loopne
or
and
movb
repz
ss
and
xor
push
or
aam
jne
push
repz
das
mov
je
add
adc
mov
dec
insl
adc
sahf
stos
jmp
dec
das
jl
fdivrs
jl
rcr
or
jmp
out
jns
jbe
inc
pop
dec
jmp
dec
pusha
push
sbb
das
xor
adc
adc
sbb
callw
int3
mov
fnsave
or
fcoms
cmp
incl
stos
jnp
mov
mov
cmpsb
push
jno
int
and
in
sbb
sub
jmp
pop
lret
pop
aad
ror
aas
mov
sbb
mov
pop
push
stc
push
sub
xor
cmp
adc
fucomi
cmp
test
sbb
jno
xchg
xor
es
std
ficompl
rorb
xchg
cmp
insl
add
jbe
or
pop
movsb
movsl
jge
out
pop
icebp
fcoms
int3
push
or
xor
call
fstl
inc
insl
fisubl
rcr
push
les
mov
cli
sub
cmp
rclb
and
shlb
add
push
sub
push
sbb
mov
nop
xchg
mov
push
dec
idivl
jle
push
outsl
sub
fwait
lods
dec
cwtl
add
sarl
rcrl
mov
dec
std
arpl
out
xchg
cli
imul
fstl
add
iretw
cmpsl
sahf
stc
pop
inc
add
mov
mov
pop
leave
ret
push
mov
sub
xor
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
xorl
movl
mov
push
mov
adc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
mov
negl
mov
subl
push
push
addl
test
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
or
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
jne
mov
mov
cmc
mov
pop
sub
pop
and
jg
jl
in
lcall
inc
mov
cs
xor
adc
cli
stos
jne
arpl
sub
cld
loop
push
adc
ret
into
call
insb
and
mov
cltd
xor
mov
dec
fbld
dec
jl
sub
xchg
add
int
loop
sub
shll
jp
out
jmp
adc
sbb
dec
pop
fnstcw
mov
push
xlat
js
mov
and
mov
loopne
xor
sbb
in
sarb
mov
adc
cmpsb
or
adc
push
push
or
stos
or
cs
pop
fs
cmp
sbb
pop
xor
dec
xchg
movsb
pop
adc
cmp
fwait
clc
dec
cmp
outsb
test
dec
sarl
repz
movsl
mov
shll
mov
add
xor
repnz
mov
mov
mov
gs
push
lret
pop
add
test
cmpb
lret
xor
lcall
mov
cmp
dec
mov
mov
loope
xchg
sbb
push
xchg
lock
dec
mov
int
mov
pop
inc
sbb
inc
xchg
shlb
cmp
iret
cmc
mov
mov
popf
mov
and
imul
neg
mov
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xchg
sub
sbb
xor
mov
or
mov
mov
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
jmp
add
sbb
cltd
push
stos
cmp
pop
jg
andl
jl
jg
jl
cs
sahf
lock
cmp
push
xor
or
xchg
cmp
ret
and
bound
lock
pop
fdivl
nop
mov
scas
and
fs
jmp
popa
hlt
mov
stos
mov
mov
in
or
insb
mov
cmp
outsl
push
fisttpll
or
cs
sbb
pop
lcall
mov
lods
repz
jb
dec
push
stos
add
xchg
cmp
out
or
scas
jnp
arpl
lcall
cltd
pop
out
stos
add
dec
pop
imul
cmp
xchg
andl
mov
push
fnstsw
ja
mov
int3
ret
stos
pop
pushf
add
mov
mov
aas
fisubl
mov
loopne
xchg
arpl
push
shll
mov
inc
add
mov
lea
aas
aad
sbb
popf
mov
in
inc
sahf
push
fidivl
cmc
fisttpl
xor
adc
adc
in
aam
stos
lret
mov
dec
imul
lahf
pop
add
sbb
mov
or
or
loop
shlb
into
aas
lods
inc
aaa
jge
call
push
add
dec
call
add
add
mov
xor
and
jmp
dec
pushf
adc
repnz
xchg
dec
fstps
dec
adc
jg
jl
mov
sarb
movsl
or
sbb
dec
inc
scas
ja
push
jno
data16
lret
ret
flds
jnp
lret
pusha
pop
popa
mov
add
aam
and
push
add
dec
xlat
jmp
inc
xor
inc
pop
dec
xchg
sbb
loope
adc
jno
xor
out
data16
sarl
sub
aaa
into
push
nop
adc
rcrl
cltd
push
pusha
stos
push
jno
imull
shrb
cmp
and
fdivr
xlat
stos
jns
xlat
int3
mov
and
dec
jne
sub
add
or
and
pushf
jb
neg
in
xorl
lcall
mov
mov
jnp
out
jnp
mov
pop
dec
or
nopl
mov
clc
sub
fimuls
jmp
fstpt
ljmp
jle
lds
ret
rcrl
test
fcoml
mov
loopne
sub
jp
cmpsb
jmp
pop
fisttpl
insb
push
pop
das
jle
inc
push
push
cmp
cli
mov
pop
jno
jle
dec
push
out
lock
xchg
mov
call
fincstp
inc
adc
ret
pop
lds
push
movsl
dec
add
mov
mov
je
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
xor
xorl
add
cmp
jne
subl
pushl
call
mov
xor
add
xor
xor
sub
sub
mov
sub
mov
mov
xor
adcl
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
jmp
lret
idivb
lods
out
scas
xchg
and
jl
je
push
adc
pushf
dec
or
add
and
repz
sbb
xchg
int
jbe
sti
xor
int
scas
push
sbb
int3
fnsetpm(287
addb
add
lahf
mov
arpl
ret
fimull
pusha
cmp
daa
imul
sbb
inc
enter
hlt
jns
jl
push
add
xchg
mulb
or
test
imul
std
imul
or
pop
sbb
add
sub
jne
or
jnp
fisubl
imul
add
add
jne
dec
mov
adc
fcmovu
cltd
pop
js
shll
leave
add
lds
cmpsb
jge
jg
aam
out
std
movsb
cwtl
xor
jecxz
adc
inc
xlat
fs
inc
fcomps
cmp
xchg
gs
lods
push
stos
mov
jge
cmp
out
pop
and
rorb
or
out
cmc
pop
xchg
stos
adc
push
repnz
jbe
and
imul
xor
lcall
xlat
test
pushf
pop
adc
sub
jge
and
mov
sub
xor
jo
shrb
imul
pushf
inc
push
test
sub
pop
call
enter
add
add
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
adc
mov
inc
in
call
jl
call
sub
in
icebp
pop
out
mov
sbbb
dec
sbb
xchg
xlat
outsb
fbld
xchg
fxch
loop
rcrl
mov
xor
mov
jo
fnstsw
sbb
insb
pop
pop
pop
add
mov
int3
mov
das
fisubrl
insl
mov
sbb
jne
jmp
out
add
repz
dec
and
mov
inc
out
cmp
dec
xchg
test
cltd
lcall
cmp
or
jge
xchg
and
inc
jns
jo
rorb
jp
ljmp
dec
ljmp
jmp
push
pop
aas
pop
lret
test
lret
mov
fwait
mov
mov
shrb
cmpsb
ret
mov
mov
mov
hlt
xchg
call
pop
adc
dec
fs
ljmp
loope
mov
daa
jae
das
xchg
jge
sti
inc
xor
aas
scas
sub
lds
dec
aad
jmp
out
clc
jle
push
or
mov
repz
cs
cli
divps
loopne
nop
cmp
and
popa
ret
ret
or
scas
jb
push
cmc
push
jl
sub
shrl
xchg
movsb
inc
cmp
mov
stc
inc
xorb
aas
out
cmp
add
cmp
in
out
sub
jmp
cmp
inc
in
scas
shrl
mov
jmp
dec
cli
sbb
test
outsb
jp
out
sarb
es
call
das
pop
lea
rolb
add
push
mov
in
jg
cmp
stos
sub
int3
mov
mov
sub
xchg
or
or
cld
jmp
jns
dec
add
bound
xchg
add
push
or
insb
fcmovnbe
push
add
and
or
xor
scas
add
or
cmp
or
or
dec
ljmp
outsb
adc
outsl
hlt
dec
jne
xlat
sbb
cwtl
repz
or
inc
nop
lcall
sub
shrl
jno
push
rorb
in
pop
sub
jb
xor
pop
cmp
faddp
mov
sahf
mov
movsb
adc
mov
pop
and
aam
and
xchg
call
push
inc
and
adc
push
clc
sub
ret
das
push
subl
test
movsb
popa
xchg
mov
push
in
inc
push
and
outsb
adc
pushf
sub
jne
pop
inc
dec
lods
sbb
test
aam
inc
xor
inc
xor
sub
aaa
inc
outsb
cmpb
into
mul
dec
shrl
stos
ja
jae
mov
lds
dec
ret
movsl
xor
aas
mov
adc
lcall
addl
les
outsb
adc
push
ret
test
xchg
mov
and
or
xor
mov
add
jmp
push
mov
aad
sbb
sub
jg
jl
cltd
aaa
dec
pop
movsb
mov
add
mov
jb
add
push
jnp
out
int
inc
popf
addb
cmp
lods
lret
or
cmc
je
fstl
add
dec
sub
sub
and
add
je
jns
nop
xlat
jg
sbb
dec
push
pop
push
roll
dec
imul
ds
data16
cltd
xchg
movsb
xor
out
inc
fwait
xchg
dec
cmpsb
loopne
ja
or
pop
les
mov
bound
sub
in
insb
mov
dec
or
imul
stos
mov
pop
pop
sysret
dec
popf
fiadds
outsb
lock
movsl
xor
outsb
cmp
push
jnp
js
dec
sub
xchg
arpl
pop
leave
cwtl
cmpsb
aam
inc
movsb
jg
push
fisubrs
aad
sbb
inc
icebp
out
les
mov
rolb
mov
jne
cs
int
and
int
push
cmovl
js
mov
mov
jp
hlt
pop
xchg
divl
call
xchg
xor
sbb
mov
inc
xlat
add
ret
ss
arpl
dec
push
fadds
ret
pop
lret
cmc
cmp
inc
mov
mov
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
jmp
je
jne
insl
gs
aam
pop
addr16
xchg
into
sbb
jl
call
sub
jnp
sbb
xor
lcall
test
pop
aad
dec
mov
ljmp
push
jo
or
enter
push
mov
inc
stos
shrl
mov
cli
aaa
clc
lods
pushf
pop
mov
out
ljmp
js
aam
adcl
imul
pusha
sbb
xlat
pushf
or
mov
fistpl
xchg
xor
ret
out
inc
in
mov
jnp
mov
loope
into
arpl
gs
or
cmc
pop
lcall
rorb
imul
jmp
repnz
adc
sub
and
fwait
iret
icebp
cmp
push
inc
int3
push
movsb
pop
imul
loopne
mov
jmp
xor
mov
inc
loope
inc
dec
mov
fwait
push
out
jno
sub
lcall
fstpl
dec
cmp
xchg
shl
push
jae
test
sbb
ss
push
push
aam
or
push
in
and
dec
fcompl
jno
scas
adc
mov
xchg
xchg
jns
jnp
cmp
fmulp
fs
add
loope
jns
mov
rcll
inc
pop
sub
iret
movsb
rol
cs
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
sahf
mov
push
mov
repnz
jl
jg
jl
dec
lock
jbe
jne
pushw
pop
push
inc
sbb
sub
mov
sbb
or
mov
mov
pmulhuw
shlb
andps
mov
jo
out
sbb
xchg
push
mov
mov
cmp
dec
dec
inc
xlat
adc
mov
fists
es
xchg
push
dec
insb
sub
mov
mov
mov
inc
loope
negb
mov
xchg
shlb
and
fistl
mov
mov
xchg
sub
nop
and
mov
stc
ss
or
out
pushf
mov
bound
add
loopne
addl
push
or
lcall
fidivrs
xchg
sub
adc
xchg
cmp
dec
test
xor
push
stos
mov
mov
ds
dec
es
out
jne
pop
adc
pop
add
and
iret
push
inc
pop
fnstenv
push
jae
or
icebp
pop
xor
fadds
shll
stc
jno
out
push
cmp
lods
js
mov
cmp
pop
xor
icebp
xchg
xchg
mov
and
into
loopne
fwait
in
xlat
xchg
les
stos
sub
adc
in
cmp
mov
sarb
push
adc
test
add
ret
out
std
cli
cmp
in
adc
jl
jg
jl
mov
mov
or
icebp
test
and
dec
ds
mov
push
mulb
lahf
sarb
daa
sub
jg
xchg
xchg
sub
sbb
mov
idivb
insb
aam
aad
sub
add
or
mov
ret
dec
add
lock
xor
xor
movl
int
bound
nop
push
or
cwtl
fisttpll
dec
mov
mov
jmp
mov
in
aaa
sarl
xor
xor
aad
mov
mov
or
or
jmp
pop
push
fisubrs
mov
dec
ljmp
xor
psllw
xchg
mov
dec
je
adcl
xlat
adc
and
out
repnz
mov
jp
jne
and
mov
pop
pop
jb
jmp
shll
pop
mov
mov
jg
jmp
jae
push
fwait
dec
sti
inc
int3
lahf
roll
inc
sub
dec
lea
fistps
and
mov
decl
loop
pop
push
shll
push
test
jne
dec
mov
cmpsl
sub
sbb
inc
mov
sbb
pusha
xlat
xchg
dec
inc
mov
mul
mov
xchg
dec
pop
in
shr
add
add
or
je
out
sub
jecxz
fistpll
jl
call
xor
mov
mov
pop
nop
insb
or
fildl
call
test
hlt
gs
cwtl
fistl
xchg
push
inc
fstpl
js
loop
push
test
sub
repnz
push
lds
jae
pop
and
out
mov
cmp
or
ret
fiadds
sbbl
out
pop
daa
insb
mov
out
sub
inc
lret
jae
in
hlt
in
divb
pop
imul
into
xchg
test
mov
dec
fsubl
xchg
lret
popa
hlt
inc
fs
fdecstp
xchg
cmp
or
mov
add
jbe
faddl
sub
into
sti
jecxz
or
call
or
cs
mov
into
jnp
popf
xchg
sub
or
imul
pop
cmp
mov
pop
lret
outsl
cmpsb
enter
mov
cli
or
lcall
xchg
pop
or
adc
icebp
jge
mov
pushf
jno
xor
pop
cli
mov
dec
cli
xchg
dec
scas
insb
jecxz
mov
inc
cmp
and
or
data16
jo
fidivs
mov
add
imul
mov
xor
mov
lea
cmp
jmp
test
in
iret
jp
movsl
jge
loope
or
inc
push
dec
jl,pt
call
in
addr16
fcompl
test
lea
mov
jle
mov
cltd
or
dec
push
pop
insb
mov
push
int
and
cltd
mov
pop
sub
incb
insb
jmp
scas
notb
insl
sub
nop
in
out
aad
mov
in
popf
dec
xchg
xchg
push
inc
shlb
push
xchg
pop
pusha
mov
hlt
scas
stos
in
mov
les
xchg
cmp
arpl
bound
xchg
lock
mov
in
stos
std
test
xchg
mov
jmp
inc
xchg
rcl
movsl
adc
iret
fsubs
pop
jnp
inc
je
pop
inc
mov
cltd
xchg
xchg
lods
rcrb
sbb
shll
je
lret
mov
std
xchg
dec
sbb
mov
aam
outsb
or
leave
es
ret
fldt
dec
call
sbb
jb
mov
pop
inc
punpckhbw
rorb
adc
fisttpll
inc
cmp
in
push
dec
aad
xchg
pop
adc
pop
iret
test
sub
xchg
push
fimull
aas
stos
icebp
fists
addl
mov
test
cmp
test
cmpsl
cs
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
hlt
jecxz
dec
jnp
pop
std
sahf
lret
xlat
rcrb
sub
xor
jg
jl
pop
pop
inc
xchg
ss
fdivs
and
sub
aad
sbb
clc
movsb
sub
mov
xor
xchg
xchg
xor
pushl
xchg
out
and
std
push
outsb
mov
cmpsl
adc
inc
std
out
out
or
jns
xchg
add
mov
ret
inc
jmp
lea
jp
mov
in
les
outsl
jmp
xchg
adc
mov
sti
imul
enter
push
or
int
loopne
insb
and
ret
add
out
rol
add
call
add
mov
pop
out
sarb
push
inc
fstpt
xor
jo
les
shl
pop
push
or
adc
dec
sbb
out
xorl
add
mov
ljmp
inc
and
shll
xchg
push
sarb
fisttps
inc
scas
lahf
mov
shll
add
dec
sub
popf
push
inc
cmc
ret
jbe
sub
das
push
fnstenv
jne
sarb
inc
push
and
mov
push
xchg
incb
mov
adc
sbb
fwait
insl
xchg
lea
or
xor
xchg
aam
pushf
pop
push
push
into
xchg
lcall
pop
cmp
inc
aas
pusha
sub
xchg
push
xor
mov
dec
jmp
xchg
mov
mov
xchg
xor
jg
jl
xor
xor
pop
int
fidivs
and
ret
jne
sbb
cmpsl
sahf
dec
jae
fidivl
imul
mov
cmp
ja
das
push
pushf
cmovg
cwtl
dec
pop
lcall
or
daa
adcl
test
push
in
and
out
fdivl
add
push
outsb
mov
push
or
push
xchg
mov
dec
push
insl
xor
cmpsb
fimull
mov
mov
sti
out
or
stc
dec
push
sbb
pop
ja
psrlq
inc
test
clc
frstor
push
cwtl
and
push
and
das
addr16
divb
xchg
or
cmp
mov
rorb
inc
stos
add
xor
fldl
sbb
rcr
popf
pop
inc
icebp
shll
jae
fisubrl
pusha
scas
int
dec
xor
in
imul
movb
mov
aam
lods
scas
or
pop
lock
dec
or
mov
mov
add
shll
cld
mov
out
adc
cmpsb
int
movsb
pusha
pop
adc
sti
mov
insb
mov
and
scas
loope
pop
into
loop
or
add
xor
imul
rorb
cli
xor
fisubl
add
dec
xor
add
pop
mov
pop
jmp
add
lret
mov
push
xchg
shl
das
jge
pop
inc
sysexit
jl
call
xor
inc
repnz
adc
lds
leave
mov
enter
cs
push
cmp
stos
sub
test
sbb
and
ftst
mov
mov
jmp
sahf
xchg
cmpsl
test
dec
dec
es
cmpsb
lcall
cmp
dec
outsb
jle
ja
xchg
pop
pop
mov
xor
push
jae
aad
das
jle
pop
stos
test
and
and
shll
stos
mov
cmp
test
hlt
or
out
pop
xchg
jp
push
out
in
cmp
fsubl
push
pop
mov
shr
or
stos
or
scas
scas
xor
outsb
stos
xor
mov
das
jmp
xchg
shlb
push
jae
loopne
pop
and
or
aam
push
fwait
bound
dec
xor
add
jae
push
sbb
and
pop
mov
mov
jl
xchg
aad
and
and
insb
pop
xchg
lahf
mov
inc
inc
sahf
mov
or
mov
mov
stos
mov
call
lea
xchg
adc
jno
test
jb
cmp
push
lods
sar
insb
fcomps
ljmp
xchg
xchg
stc
mov
and
mov
rclb
push
sbb
pop
lock
shlb
jp
mov
pop
leave
ret
push
pop
js
imul
popa
dec
arpl
pop
inc
dec
jne
push
add
add
push
xchg
inc
add
inc
add
or
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
jnp
inc
dec
mov
push
pop
push
mov
dec
pop
dec
mov
dec
add
dec
push
dec
inc
dec
or
dec
dec
dec
pop
bound
mov
dec
or
dec
jnp
mov
dec
mov
jb
jae
subl
jge
mov
dec
push
dec
mov
dec
jnp
inc
dec
mov
sbbb
xchg
insb
nop
jl
jge
mov
dec
push
dec
mov
dec
or
dec
inc
dec
pop
xchg
pop
xchg
outsl
mov
jge
mov
dec
cs
mov
dec
and
dec
inc
dec
pop
mov
insb
mov
sarb
dec
or
mov
dec
jl
mov
dec
mov
mov
mov
ret
insb
sarb
mov
dec
cs
mov
dec
cs
inc
dec
mov
ret
outsl
shrl
loopne
loope
dec
or
mov
dec
or
dec
sub
dec
mov
rcrb
outsl
jecxz
loopne
lock
mov
dec
pop
dec
mov
dec
mov
loop
jecxz
rep
lock
jge
jl
jge
mov
dec
and
dec
or
dec
sub
dec
mov
add
outsl
adc
and
mov
nop
inc
add
inc
add
inc
add
add
xchg
inc
add
add
inc
add
xchg
inc
add
add
add
pushf
clc
and
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
subl
push
orl
mov
dec
cmp
inc
add
ja
cli
jne
in
incb
mov
xchg
inc
add
pushf
clc
xor
pushf
clc
xor
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
nop
inc
add
xchg
inc
add
dec
xor
jmp
add
sbb
add
mov
add
dec
add
inc
add
insl
add
add
add
popa
add
push
imul
add
add
data16
add
add
add
add
push
add
add
imul
add
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
outsl
jo
dec
dec
inc
dec
dec
insb
imul
imul
add
dec
add
inc
add
outsl
add
push
push
insb
add
jae
add
jae
popa
add
imul
jae
insb
add
data16
add
push
add
insb
add
jae
add
add
add
add
dec
pop
dec
sub
dec
pop
dec
es
imul
add
dec
imul
dec
sub
dec
sub
dec
push
add
dec
and
dec
sub
dec
and
dec
add
add
push
jge
lea
popf
push
lods
push
mov
push
in
push
std
push
or
push
cmp
push
jb
jae
jo
jno
jbe
ja
je
jne
mov
mov
mov
mov
mov
jl
jge
jge
jge
jge
cmp
vptestnmw
sub
hlt
xor
xor
jno
mov
imul
mov
xlat
movsl
xchg
sub
movsb
jge
fidivs
xor
pop
adc
and
movsl
sbb
add
je
inc
add
shll
mov
inc
add
push
addr16
inc
add
inc
add
popa
dec
push
dec
jne
pop
jns
dec
inc
inc
popa
jns
push
inc
inc
jne
push
push
jno
jb
insw
arpl
bound
js
add
add
push
ja
inc
gs
inc
dec
outsb
imul
push
dec
push
push
push
jne
inc
outsb
jo
inc
jp
add
dec
inc
inc
inc
jbe
push
outsb
add
pop
push
jp
imul
jbe
add
inc
inc
popa
addr16
dec
imul
push
jne
add
dec
gs
outsb
pop
push
push
dec
icebp
iret
mov
loopne
pop
imul
add
add
jb
rclb
lock
test
fldl
insl
xorl
into
rdmsr
fdivl
inc
or
mov
jbe
pop
fs
pop
leave
std
roll
mov
mov
test
sbb
int
call
je
ss
adc
pop
pop
mov
loope
sub
jno
pop
repnz
dec
mov
pop
jecxz
insb
outsb
pop
adc
push
jp
mov
fs
sub
je
xchg
add
jns
push
xlat
add
cmp
lods
bound
popf
xor
adc
pop
fldt
dec
jmp
dec
out
or
aad
aas
add
inc
mov
cmp
cmp
push
push
mov
movsl
inc
leave
mov
jbe
pop
das
mov
rolb
sub
mov
and
into
repnz
jae
leave
je
pop
lret
lods
mov
adc
cmp
call
jmp
cld
mov
repnz
sarl
rclb
jo
cli
xchg
sub
push
inc
test
ret
and
mov
orl
sub
mov
out
adc
xor
push
loope
xchg
xlat
lock
xchg
lret
mov
cmp
push
jp
mov
mov
add
in
or
inc
fdivrs
leave
push
jnp
fs
addb
jg
aam
pop
mov
stos
in
and
cmp
test
dec
sub
aas
fwait
stos
mov
lahf
lods
mov
jle
xchg
cld
cwtl
or
mov
sbb
cmc
cmpsl
movnti
pop
popa
sbb
aas
or
push
dec
daa
addr16
xchg
clc
insb
sbb
rclb
mov
inc
push
mov
insl
pop
push
mov
clc
cmp
stos
cmpsl
fcompl
mov
into
jbe
and
hlt
pop
in
mov
imul
sub
push
jle
xchg
push
mov
cmpsl
ret
loope
addr16
mov
dec
shl
ss
jmp
hlt
dec
test
outsl
sub
xchg
lret
and
fmuls
lret
incb
fcmovnb
fwait
cld
ret
hlt
adc
ljmp
pop
rorl
sbb
inc
repnz
mov
jg
mov
jp
negb
popa
jge
xor
fst
lds
lcall
jb
ljmp
mov
pop
ror
push
dec
rol
push
test
aam
out
mov
dec
xchg
push
inc
jo
and
out
mov
rcrb
cli
adc
fmuls
xlat
push
xchg
xchg
arpl
scas
xor
sbb
lcall
jbe
loopne
repnz
ja
or
mov
and
lds
shlb
and
or
xchg
push
stc
js
movsb
xor
iret
xlat
dec
into
jmp
jmp
rorl
lret
rcll
pop
testb
loopne
jg
call
cmp
mov
shlb
outsb
push
daa
pop
pusha
push
jmp
imul
inc
dec
sub
dec
xchg
mov
add
push
pop
pop
push
hlt
cli
jnp
push
imul
cmc
mov
mov
mov
and
lods
int3
cli
outsb
cmpsb
dec
aad
mov
es
push
sbb
fisubrl
pop
sti
sbb
mov
inc
lock
pushf
or
call
sbbl
test
pop
adc
imul
mov
pop
bound
es
xchg
lock
mov
incb
sub
mov
fidivs
subl
and
in
mov
loopne
mov
jno
jae
mov
mov
jae
movsb
mov
add
mov
into
and
cmp
icebp
aaa
cmpb
push
test
cltd
push
mov
dec
pop
push
sbb
push
xor
out
cmp
mov
movsl
test
push
sbb
vpinsrw
stos
out
sarl
scas
insl
push
cmp
mov
hlt
xchg
pop
stc
push
fidivrs
pop
and
rclb
js
repnz
loope
stos
pop
daa
movsb
pusha
mov
xchg
stos
pop
xor
int
sahf
dec
push
or
scas
mov
and
fstl
out
rorb
dec
mov
jno
xchg
or
clc
inc
xchg
dec
ds
fmull
subl
ret
dec
mov
test
jmp
dec
cmp
xchg
inc
push
push
adc
and
andl
xchg
pop
adc
movsl
inc
push
xchg
add
imul
aaa
inc
sub
mov
dec
jo
btsl
adc
dec
jg
jp,pn
pushf
fst
in
and
dec
mov
aaa
sbb
clc
js
xchg
pop
dec
or
js
cli
bound
out
inc
ljmp
test
pop
mov
pop
xchg
jmp
mov
mov
inc
dec
xchg
mov
loopne
jp
or
mov
jmp
pop
fcomps
test
loope
out
and
sub
or
jae
xchg
xchg
pusha
mov
fs
rcrb
adc
cmp
sub
pusha
fldz
lds
sti
sub
sbb
inc
inc
movsl
hlt
push
cmp
jl
inc
jg
jns
adc
sarl
outsl
addl
push
pop
cld
fstpl
jb
test
sub
mov
dec
adc
movsl
mov
fwait
aas
xchg
and
test
dec
in
push
outsl
repz
push
jns
adc
test
ret
dec
sub
fmuls
test
pop
cmc
xchg
pushf
rorl
imul
add
jecxz
cwtl
mov
hlt
xlat
xchg
cmp
sub
and
sahf
or
add
aam
inc
and
add
loop
loopne
cmp
out
pop
inc
popf
xor
scas
or
mov
mov
std
mov
call
jne
jbe
mov
out
fs
in
mov
rolb
inc
mulb
leave
pop
loop
cwtl
outsl
sub
es
lods
shlb
fidivl
int3
jl
addr16
mov
push
xchg
jns
jmp
arpl
lcall
mov
icebp
pop
test
mov
insl
repz
std
lods
fisubrs
push
stc
dec
push
inc
repnz
cltd
push
inc
sbb
cli
daa
lods
movsb
adc
add
push
jecxz
mov
imul
and
clc
inc
decl
mov
adc
pop
pusha
cmp
mov
orb
xchg
and
call
xchg
sar
mulb
cmp
pop
jl
add
clc
pushf
pop
fmul
mov
adc
fildll
out
repz
dec
add
imul
leave
add
add
xor
outsl
icebp
out
lahf
jmp
stos
loopne
push
cmp
ret
loope
dec
dec
fwait
repnz
ret
enter
rorb
and
stos
add
sub
clc
sub
or
sbb
or
sub
xchg
sbb
lcall
pop
and
sbb
mov
lret
ret
movsb
popf
subl
mov
mov
add
xor
mov
mov
xchg
rolb
cmp
xchg
enter
sti
aam
aam
daa
inc
xchg
mov
push
idivl
or
sub
sbb
jns
mov
cmpsl
inc
dec
inc
cmpsl
lds
int
data16
fisubl
out
adc
jno
add
rol
outsl
mov
xor
hlt
stos
into
lea
push
add
adc
adc
mov
jle
int3
or
dec
out
leave
test
jnp
push
adc
loope
xchg
xlat
leave
fpatan
sub
xor
xchg
push
or
insl
dec
jmp
jmp
dec
sub
je
add
je
dec
daa
insb
xlat
xchg
movsb
jns
movsb
jge
mov
fwait
pop
add
mov
pop
in
adc
sub
fwait
and
lret
scas
mov
mov
and
daa
push
cmp
std
cmpsl
adc
xor
shll
mov
jb
jbe
pop
cmc
into
rclb
push
adc
movsb
cli
mov
lea
mov
push
mov
mov
js
cmpsl
pushf
pusha
addr16
movsb
xchg
mov
cmp
lods
mov
sbbb
decl
lret
push
addr16
mov
or
xchg
pop
lcall
mov
cmp
push
and
fdivrs
roll
leave
ja
in
push
cld
and
repz
dec
jmp
xchg
and
in
or
cmovp
cmpsb
fwait
outsb
xchg
lds
test
or
xor
adc
loope
nop
mov
cmp
mov
movsl
addl
sti
es
jbe
jecxz
cli
bound
movsl
xchg
add
adc
xchg
js
loope
pop
in
mov
dec
mov
jno
add
adc
js
sbb
hlt
add
leave
icebp
mov
xchg
fistps
push
insb
popa
les
dec
mov
mov
scas
into
cmpsb
repnz
mul
stos
or
insl
push
xor
repz
xor
daa
sbb
repnz
dec
in
cmp
incb
push
xorl
je
inc
mov
adc
aam
frstor
xchg
xor
mov
roll
jno
aad
fdivrs
jne
iret
jp
lock
icebp
aam
cmp
xor
jae
cld
push
cmp
adc
adc
in
in
rclb
mov
jl
sub
insl
xchg
cs
xor
add
fsubrs
sbbl
dec
mov
inc
push
mull
sub
mov
lcall
fidivl
cwtl
shl
add
popa
dec
dec
jmp
cmpsb
rcl
push
aam
xchg
pop
sbb
cmp
stos
or
ficompl
sub
dec
rorl
ds
lods
mov
mov
xor
sbb
test
jne
mov
adc
lret
je
dec
push
das
adcb
imul
fstpl
movsl
cmpb
push
ror
pop
push
add
xor
cmp
mov
ret
js
out
out
xor
insl
xor
pop
and
cmp
sti
out
iret
xchg
lea
in
mov
lcall
cmc
stos
jns
imul
je
and
lods
pop
cmp
out
mov
leave
adc
dec
cmpsb
fistpl
dec
loopne
adc
imul
and
jp
inc
repnz
nop
rcrl
ds
mov
xchg
popa
or
push
lret
and
mov
hlt
push
adc
cmp
mov
mov
stos
lret
sub
cmp
lret
add
mov
xchg
stos
and
mov
jmp
cmp
inc
mov
insb
sbb
stos
int
in
gs
leave
cmp
pushf
aaa
pusha
enter
test
hlt
and
dec
or
jmp
outsl
xchg
jmp
xor
cmpsl
jo
mov
sbb
push
xchg
mov
add
cli
sti
fs
xchg
xchg
inc
sbb
inc
pop
lcall
es
ret
inc
xchg
sahf
mov
js
mov
subb
add
ret
and
sub
xchg
add
push
mov
mov
jecxz
fwait
mov
mov
mov
test
roll
imull
lcall
clc
mov
cmp
lret
inc
sub
xchg
out
pop
aas
lret
cli
ret
in
pop
or
outsb
and
dec
aad
mov
jmp
jnp
cltd
xor
popf
imul
cli
mov
add
jg
cli
jo
js
lods
lahf
fwait
mul
hlt
mov
jb
pushf
dec
nop
movsl
mov
dec
bound
daa
fsubs
xchg
inc
dec
and
push
xor
je
mov
aaa
outsl
ffree
mov
sbb
or
sub
mov
addl
std
push
fs
lods
push
rclb
add
int3
bound
addb
dec
mov
sarb
lock
inc
cmp
mov
std
iret
filds
dec
fwait
imul
push
jns
movsb
pusha
aam
je
fs
adcl
notb
xchg
outsl
pusha
ja
xchg
repnz
test
mov
test
lods
xor
leave
je
lcall
and
adc
dec
mov
pushl
or
shrl
cmpsb
inc
test
cmp
jns
out
hlt
mov
mov
adc
lock
dec
aas
in
dec
xchg
fistps
mov
mov
ss
fildl
inc
mov
addl
aas
out
js
je
mov
xor
imulb
cmpsl
clc
stos
shlb
mov
add
pop
aas
int3
pop
mov
lahf
scas
lret
call
xor
dec
fstl
xlat
fwait
out
dec
outsb
gs
lcall
fs
or
jl
dec
dec
ret
fnsave
sub
stc
dec
ficomps
add
push
pop
movsl
insb
lock
cmp
push
lahf
test
adc
or
dec
mov
fstps
mov
js
adc
jo
hlt
mov
mov
insb
xor
sbb
inc
rolb
lea
and
addr16
jl
push
pop
inc
sbb
sbb
mov
cmp
push
test
mov
mov
xchg
push
pop
cmp
mov
add
add
in
push
scas
jp
xchg
call
add
add
mov
lods
sbb
xacquire
adc
das
xchg
xchg
arpl
notl
cs
into
cmp
cmp
or
ljmp
xor
rolb
stos
xchg
xchg
cli
jb
pop
push
push
fwait
xor
cwtl
jp
ret
ljmp
xchg
xchg
inc
daa
dec
lcall
adc
and
sbb
subl
xlat
cmc
mov
out
test
push
lahf
jg
decl
jmp
mov
mov
xchg
sbb
test
mov
pop
int
lods
xor
insb
adc
fidivl
jns
scas
jge
sbb
xor
adc
stc
into
jns
add
mov
fcoms
and
inc
jmp
les
pop
in
mov
push
rorb
adc
nop
out
sbb
xor
jns
add
je
clc
fists
add
inc
ds
xlat
fs
inc
mov
cmp
dec
rorb
es
or
pusha
int3
xor
jge
inc
jae
clc
gs
pop
xlat
shlb
sbb
faddl
fst
and
push
scas
mov
cmp
xchg
dec
fisttps
mov
cmp
clc
arpl
hlt
push
xchg
fnop
mov
shl
add
repz
enter
push
add
inc
xchg
test
xor
xchg
cmp
and
pushl
inc
jp
sbb
jbe
shrl
fchs
push
push
or
imul
xchg
mov
fwait
mov
mov
xor
out
or
mov
fstpl
inc
fcoms
dec
sbb
jmp
test
inc
mov
jb
call
call
cmp
mov
mov
popl
ret
pop
inc
or
xor
in
lds
aam
or
lret
test
aas
nop
pop
lods
dec
mov
xorb
xlat
test
sti
out
lds
dec
and
pop
mov
xchg
xchg
div
push
pop
dec
dec
and
push
stos
dec
xchg
insl
dec
mov
sub
mov
test
cmpsb
sbb
mov
push
test
or
adc
pop
pop
mov
and
ds
sbb
xor
popa
out
mov
aad
test
push
add
mov
popa
jg
ret
lret
jno
jmp
fdivs
mov
daa
pop
imul
aas
mov
jne
loope
and
test
sbb
xor
dec
xchg
pushf
cwtl
sub
mov
mov
adc
pop
xchg
xor
fnstsw
les
adc
out
inc
jno
sbb
mul
mov
loopne
sbb
push
adc
loope
push
mov
dec
and
dec
adc
dec
xchg
inc
sub
sbb
push
mov
ficoml
dec
pop
into
and
fistl
mov
add
sub
fildl
sarl
in
gs
in
cmc
ja
lea
and
mov
add
stc
inc
pop
sbb
push
and
loop
rol
sub
mov
leave
mov
into
out
or
mov
daa
adc
add
shl
push
out
ficomps
inc
inc
mov
xor
mov
mov
sbb
sti
dec
dec
mov
jecxz
rcr
aaa
or
xor
test
shlb
out
mov
loopne
fcoml
or
cli
mov
das
jge
sbb
movsb
inc
xchg
sbbb
jo
inc
setnp
cmp
cmp
stos
push
xor
add
mov
dec
outsl
repz
ss
mov
xor
lret
mov
rolb
addb
arpl
testb
out
lahf
rol
insl
push
mov
inc
ret
mov
pop
lret
xchg
jmp
out
leave
lea
popa
sbb
mov
aas
enter
arpl
je
repz
pop
push
cs
int
jge
flds
iret
push
int3
pushf
jo
int
ja
sub
movsb
inc
or
or
adc
dec
add
cmpsl
xchg
dec
in
subb
out
cltd
sbb
fldenv
cwtl
or
mov
repnz
insb
movsb
lods
inc
sbb
cwtl
clc
or
cmp
inc
ljmp
mov
mov
mov
pop
fwait
aaa
xchg
mov
sbb
xchg
jne
pop
dec
mov
cmp
lods
data16
fcmovbe
or
in
xor
mov
ret
mov
jmp
pushf
xlat
imul
dec
mov
mov
loopne
sahf
inc
les
addr16
pop
jl
dec
mov
aad
lds
jae
inc
sbb
lret
shl
jmp
dec
dec
inc
pusha
call
xor
dec
cld
adc
lahf
fcoml
test
pop
es
push
mov
inc
adc
dec
sbb
push
inc
or
adc
cli
pop
push
push
cmp
shll
cmpsb
push
adc
mov
scas
cltd
scas
push
mov
adc
push
lret
mov
in
fldl
popf
xchg
ss
testl
stos
cmp
hlt
arpl
push
rcrb
and
fldenv
adc
pop
lods
dec
xor
shlb
xlat
sbbl
jmp
or
adc
out
jmp
lea
inc
push
xchg
mov
adc
mov
imul
jmp
lods
push
addr16
jns
jne
mov
inc
mov
sbb
xchg
aam
cwtl
push
int3
push
mov
inc
xor
inc
mov
test
repz
mov
mov
mov
jne
clc
roll
dec
daa
in
repnz
sub
mov
in
ljmp
inc
push
leave
dec
lret
addr16
outsb
inc
mov
int3
or
outsb
xlat
and
out
test
cmpsl
inc
fmul
and
push
ja
push
lret
cltd
fst
jge
lsl
inc
mov
lea
and
jns
sbb
fs
xor
push
or
push
push
sub
insb
and
int3
push
jl
xor
insb
push
sub
sbb
sahf
cmp
in
mov
sub
push
pushf
xchg
sbb
gs
or
adc
enter
sbb
stos
cltd
lret
mov
fs
in
xchg
fisubrs
jp
leave
sub
jmp
hlt
dec
daa
adc
or
xorl
lea
lcall
or
cmp
jmp
xlat
popf
jg
nop
dec
pop
and
pop
jge
push
call
mov
test
pop
pop
cli
mov
xor
sbb
cmc
push
and
fisubrl
imul
std
pop
lock
arpl
xor
stos
sub
add
addl
fcompl
push
imul
imul
inc
inc
jge
insl
ljmp
out
pop
pop
fildll
xchg
ucomiss
popa
clc
dec
in
daa
mov
mov
fwait
dec
int3
jmp
cmp
adc
pop
cwtl
add
loop
ljmp
out
cmp
jb
and
xlat
nop
test
enter
jle
push
and
cli
cld
and
cs
mov
das
jmp
imul
test
cmp
ds
or
dec
pop
xor
or
pop
jb
lods
jae
ss
fdivrs
out
xor
lcall
sbb
pop
pusha
in
in
out
dec
add
inc
lds
xchg
mov
sub
dec
addr16
mov
dec
aaa
xlat
dec
xlat
mov
and
leave
shrb
fimuls
xchg
xor
int
ficoms
test
std
push
mov
inc
shll
pop
inc
js
cs
and
mov
lods
or
xchg
arpl
adc
or
pop
or
dec
jbe
arpl
fsts
mov
jge
adc
inc
subb
popf
in
cli
loopne
into
js
mov
xchg
fmuls
sti
subb
iret
scas
inc
push
jg
jno
jecxz
pop
sub
inc
gs
insl
mov
mov
aaa
sub
stos
jno
pop
sbb
jmp
sub
mov
jl
inc
push
mov
add
mov
and
pop
add
jecxz
jne
outsb
leave
sub
xchg
jle
push
mov
dec
push
mov
jnp
lea
fwait
pop
int
and
fmuls
mov
push
jge
leave
mov
insb
cmp
cmpsb
inc
rorl
jg
mov
cmpl
je
ficoms
push
out
loopne
rcrl
sbb
insl
push
mov
icebp
insb
xchg
xchg
ret
inc
cwtl
insl
inc
push
jmp
add
cmp
xlat
incb
mov
jmp
inc
and
fnsave
sti
cltd
in
xchg
mov
idivl
std
jge
into
and
jne
shlb
mov
mov
push
test
mov
popf
scas
cld
mov
scas
aas
inc
js,pt
cmp
mov
imull
inc
ds
push
sub
test
jp
int
mov
xlat
aas
push
stos
in
rorl
rol
mov
push
std
push
inc
sbb
or
pop
pop
movsl
dec
imul
mov
sbb
pusha
xchg
pop
movsb
sbb
in
aam
mov
out
xchg
push
cli
lock
jle
add
mov
nop
jns
movsl
mov
ss
lret
mov
outsb
mov
push
mov
ljmp
popa
leave
arpl
push
xchg
roll
out
pop
aam
push
dec
cmc
push
lcall
in
test
call
icebp
fidivs
or
in
and
sub
data16
loopne
je
cli
fiaddl
cmp
pusha
subl
jmp
daa
add
imul
sub
dec
popa
add
lds
mov
repnz
xchg
mov
jb
je
out
or
jg
xlat
movsl
push
and
push
aam
and
cmpsb
popa
and
mov
adc
push
or
pop
inc
jae
pop
dec
imul
sbb
mov
mov
jns
mov
pop
inc
je
add
neg
fcmovnb
jecxz
outsb
add
bound
aad
push
in
pop
cs
xchg
imul
rol
pop
add
cmp
mov
inc
dec
sbb
add
cmp
ret
jg
or
dec
xchg
filds
or
mov
jb
out
mov
fmul
add
aam
ss
mov
cs
fdivrl
pop
inc
out
test
in
mov
jns
and
or
push
cmpl
popf
pop
iret
mov
dec
loop
inc
lock
adc
jb
sub
mov
lods
jl
repz
fiadds
dec
repz
mov
clc
hlt
push
cwtl
loop
inc
sub
inc
mov
imul
popl
je
fisubs
clc
scas
out
mov
pop
add
sub
fs
roll
lods
add
cmp
mov
mov
or
sub
stos
movsb
jecxz
mov
mov
mov
jno
xor
sub
movsb
push
xchg
xor
mov
addb
jl
stos
mov
sub
fs
sub
inc
inc
dec
push
dec
test
jecxz
mul
mov
or
loopne
jbe
sti
push
mov
nop
jb
pop
mov
mov
and
fs
cwtl
shll
cwtl
xchg
pop
fiaddl
dec
and
test
cmp
lods
sbb
lahf
shl
mov
inc
sbb
pop
pop
mov
mov
inc
out
outsl
insb
psubusb
loope
pusha
push
inc
pop
sub
sbb
and
jae
dec
stos
popf
int3
adc
pop
aas
ss
mov
jae
outsb
dec
mov
daa
inc
daa
shrl
jecxz
scas
stc
fcomi
mov
push
scas
out
les
divb
lahf
test
inc
pop
sub
cmp
pop
push
out
std
mov
pop
jo
jb
and
test
push
jnp
shrb
add
sub
sub
enter
gs
into
int3
cltd
sti
jo
pop
repnz
negl
iret
aam
mov
aad
mov
in
lcall
jg
xor
loop
or
jl
sub
mov
mov
sbb
ljmp
mov
pop
fwait
or
rcll
mov
jp
sbb
inc
icebp
cs
roll
lcall
and
iret
cltd
iret
into
in
push
inc
xchg
jmp
mov
sub
lret
xor
and
inc
ja
mov
stc
xchg
stc
adc
jne
add
and
push
mov
and
push
xchg
movsb
sub
pmaxub
xor
lods
mov
mov
icebp
pop
bound
cmp
outsl
outsl
mov
xchg
fiadds
dec
mov
shll
lret
cmpsb
bound
dec
jns
aas
outsb
jne
adc
jmp
jmp
xorl
js
test
movsb
leave
hlt
outsl
jne
jae
mov
mov
xchg
xchg
ret
add
and
dec
jg
adc
rorl
stos
lfs
scas
cltd
int
and
add
out
jge
std
out
lods
add
rcr
cwtl
push
andb
add
imul
xchg
imul
sub
dec
inc
mov
jle
orl
popa
dec
idivb
mov
pop
jl
arpl
sbb
ljmp
loopne
push
cmp
mov
push
or
cmpsl
pop
push
mov
xchg
push
ffree
popa
les
shll
add
add
fsub
pop
stos
popa
xor
jp
ret
sub
mov
cmp
mov
jo
popf
jle
mov
clc
es
insb
inc
lcall
jle
pop
push
popf
mov
mov
add
mov
int3
xchg
dec
adc
aas
in
xchg
pop
and
sbb
clc
xchg
mov
jmp
pop
leave
negl
into
mov
outsl
jne
outsl
mov
push
int3
xchg
rolb
nop
mov
lcall
or
in
mov
test
jle
shll
cmp
addr16
ss
dec
sbb
outsb
imul
in
xchg
xor
daa
scas
jg
mov
jno
lret
sarb
test
stos
xlat
mov
stos
pop
lahf
inc
aad
addr16
push
push
cltd
lret
mov
inc
gs
mov
scas
cmp
sub
push
gs
jle
push
fdivl
ja
mov
inc
push
push
dec
xchg
out
movsb
add
mov
andl
add
add
aam
in
test
push
aaa
mov
xor
outsb
lahf
nop
jno
inc
xlat
dec
cmp
mov
mov
dec
push
xor
cwtl
popf
mov
mov
sahf
mov
lret
mov
dec
mov
xor
sbb
ds
aas
xchg
aam
enter
sahf
sbb
mov
jle
mov
or
cld
pop
and
in
fsubp
sub
mov
test
mov
mov
shlb
jae
ror
sbb
sub
les
inc
push
cltd
rcl
subb
cmp
out
sti
push
pop
movsb
ss
xor
fisubrl
jbe
int3
and
ds
mov
lret
xor
fiaddl
outsb
leave
dec
aam
cmp
ret
shlb
sbb
xor
cmpsb
orl
dec
xchg
lods
push
cs
inc
xchg
fucom
loop
cwtl
xchg
fsubs
adc
outsb
in
sbbb
inc
je
shlb
sbb
push
ret
addps
sahf
sub
dec
imul
or
adc
outsb
loope
push
inc
jne
cmp
add
shrl
out
add
int
call
inc
call
shll
jp
inc
movsb
and
ficompl
mov
inc
inc
cmp
add
and
xor
fldt
jmp
xchg
jo
test
fdivs
scas
cmpsl
sub
pop
push
rep
add
push
add
jno
lds
test
jecxz
jecxz
xor
add
bound
add
jae
push
mov
fs
and
lds
ficomps
sbb
in
pusha
pop
insb
jnp
testl
xor
mov
cmpsl
cmp
mov
in
js
dec
fsubl
or
je
cmpsb
roll
into
fs
pushf
dec
push
fmull
push
jp
enter
into
rorl
int
jge
xor
ret
mov
icebp
cwtl
add
imul
bound
cld
fildl
flds
mov
imul
sbb
pop
mov
xchg
sbb
lea
adc
sbb
adc
test
dec
add
lahf
pop
call
inc
daa
icebp
mov
mov
mov
lret
loopne
es
push
hlt
loopne
in
sbb
xor
rorb
pop
stos
popa
inc
and
shl
mov
push
or
jmp
aas
jp
pop
jmp
pop
mov
or
hlt
xor
push
adc
cmc
mov
cmc
push
jo
pop
nop
out
cs
pusha
xor
xchg
pop
cmpsl
sbb
sbb
mov
rorl
lods
add
pop
std
ret
jno
sbb
mov
jne
pop
orl
fcom
ret
jmp
loop
and
push
js
xlat
add
dec
and
push
testb
mov
mov
movsb
fcoms
adc
mov
mov
cmp
adc
push
cld
jo
gs
jp
flds
stc
arpl
cmp
or
and
divb
mov
cwtl
lods
ficoml
xlat
xchg
pop
jnp
pop
loopne
mov
adc
addl
jge
stos
aad
sbb
out
fldenv
inc
inc
outsl
aam
out
xchg
mov
ror
leave
adc
dec
mov
push
jno
add
fcompl
push
cmp
test
pop
inc
shll
ret
aaa
mov
leave
test
stos
popf
adc
inc
enter
negl
sub
mov
enter
xor
push
fistpl
push
push
push
or
xchg
adc
adc
data16
insl
mov
imul
push
test
dec
jl
sbbl
fnstcw
aam
into
mov
mov
jns
adc
out
ss
jle
cmp
pop
fisubrs
dec
push
mov
xor
and
jl
in
and
outsb
loop
cli
cmp
dec
xchg
cld
mov
add
out
jle
fstl
mov
sub
inc
push
adc
sub
xchg
loop
pop
pop
cmp
rcrb
out
xor
dec
fstpl
add
push
push
lea
xor
stc
mov
adc
add
inc
subb
mov
loope
testl
outsb
jae
mov
pop
test
or
fdivs
repz
clc
fidivl
cmp
mov
ds
jmp
imul
mov
xor
repz
js
in
xchg
inc
mov
add
fiadds
push
xchg
sbb
or
push
and
dec
dec
push
fisttpl
push
cmp
sub
aad
mov
mov
call
mov
call
push
inc
sbb
mov
adc
dec
out
popa
pop
lock
cmp
push
xchg
add
mov
sbb
pop
call
lret
sbb
mov
les
nop
inc
mov
lahf
ret
aaa
dec
mov
movsl
push
dec
pop
icebp
in
lock
pop
xlat
cmp
sbb
add
jle
out
add
rclb
arpl
adc
testl
and
lcall
out
dec
pop
mov
mov
ret
xor
sbb
mov
in
xor
dec
mov
cmp
sub
mov
fistl
popa
cmp
sub
add
pop
in
fnstsw
or
int
mov
insl
add
imul
loope
popa
cmpsl
pop
xchg
xor
data16
icebp
mov
idiv
cmp
sbb
inc
cmc
push
mov
outsl
call
mov
enter
mov
and
repz
inc
popf
xor
popa
cmpb
pop
les
cs
add
out
fdivl
ss
mov
pop
jecxz
adc
fwait
mov
mov
push
sti
or
clc
ret
lahf
pusha
pop
pop
lahf
adc
and
inc
pop
sub
mov
mov
mov
jnp
xchg
push
std
jmp
pushf
push
pop
pop
addr16
decb
inc
inc
ljmp
pop
push
cmpsl
hlt
repz
pop
jle
outsl
xor
cmpsl
popf
or
xchg
xor
push
out
sbb
stc
dec
aam
sbb
cmp
or
jno
push
xorb
jne
xor
push
sub
inc
push
sub
and
cltd
lock
pop
mov
mov
scas
dec
inc
bound
cmp
push
imul
jno
int
daa
test
push
imul
jg
xchg
ljmp
jbe
jmp
dec
mov
fdivl
sbb
and
sub
mov
adc
jmp
popf
je
adc
dec
out
and
rcll
sbb
cmpsl
jo
pop
test
ja
mov
jmp
adcb
inc
loopne
and
xchg
in
fisubrs
sarb
inc
daa
sbb
add
mov
cmc
jmp
les
mov
rcrl
leave
jmp
and
movsb
mov
jge
adc
pop
jle
shlb
sub
mov
or
sahf
jae
mov
mov
mov
repnz
xchg
pop
aad
mov
arpl
cmp
nop
loope
sub
sti
into
into
popf
mov
inc
and
sahf
lds
pop
push
fbld
jb
jmp
stos
shl
stos
pusha
push
mov
out
ds
and
leave
mov
jae
jae
or
sub
xor
popf
mov
sub
mov
fdivrl
orl
ret
test
lahf
xor
sub
push
sti
sbb
scas
out
into
jne
test
scas
jns
pop
testl
pop
xor
sub
std
lods
bound
mov
mov
add
dec
push
popf
jmp
leave
pop
test
sub
stc
sbb
xlat
out
adc
dec
jl
ja
cmpsb
or
mov
xchg
test
xor
inc
or
cmp
pushf
mov
sbbb
inc
dec
pop
imul
test
lods
xlat
sti
in
insb
repnz
add
inc
aam
xchg
xlat
dec
andl
xchg
mov
pop
sbb
int3
sub
cmc
pop
push
cs
inc
lret
fsubp
pusha
shr
out
in
icebp
push
fwait
pushf
add
aam
mov
mov
aaa
stos
mov
sbb
iret
and
xor
fists
pop
jb
bound
leave
cmp
mov
mov
push
mov
inc
add
inc
cmpb
in
popa
jne
movsl
sub
and
cmp
lcall
mov
pop
lods
movsb
pop
mov
lods
cld
test
pop
daa
mov
jl
sbb
sbb
in
aad
sub
jecxz
and
sub
mov
add
pop
sbb
dec
inc
xchg
xor
notb
cli
sbb
dec
out
jae
xchg
cmpsb
push
out
adc
push
add
adc
lcall
enter
sbb
push
mov
idivl
mov
inc
pusha
into
push
sub
int3
movb
mov
aam
or
sahf
jns
cmp
add
cmpsl
cmp
add
imul
mov
push
test
dec
pusha
stos
mov
imul
pop
sub
lds
jae
ds
fbld
rcrb
rcr
inc
push
jg
aad
cmp
imull
xor
and
jge
xor
ror
and
sub
jnp
je
test
testl
mov
xchg
push
mov
or
mov
push
mov
out
lea
out
dec
sub
popa
aad
hlt
lds
es
rcll
sbb
pop
in
sbb
and
jns
hlt
sub
orb
mov
into
int3
cs
bound
cmp
mov
or
push
dec
into
and
xchg
fucomip
aad
mov
jo
in
push
icebp
movsl
add
std
xor
in
loope
sbb
and
or
shl
dec
push
push
lcall
cmovo
push
fistps
in
test
leave
fstp
cltd
rorb
movsb
inc
mov
das
je
mov
push
cli
mov
xchg
and
dec
xor
push
inc
xlat
mov
sub
fstpt
xor
jge
negl
pop
sbb
adc
ja
jno
cld
sbbl
int
ret
loop
cmp
insl
fists
xchg
push
out
or
mov
jg
jl
xchg
lock
imul
cs
loopne
out
out
mov
dec
push
add
push
inc
int3
pop
push
push
adc
stos
shr
cld
jl
mov
in
in
adc
dec
das
sti
std
sti
dec
lock
mov
fsubl
imul
cmp
push
push
subl
lret
lods
jbe
mov
adc
pop
xchg
or
push
loop
push
cwtl
testl
jne
mov
add
jp
xor
es
leave
xchg
test
movsl
xchg
fcmovnbe
sbb
popa
xor
or
dec
xchg
ds
js
xor
mov
into
inc
mov
push
mov
jmp
mov
xor
xor
sarb
inc
decl
mov
sbb
jecxz
imul
cmp
add
cld
pop
std
or
pop
and
mov
inc
testl
pop
mov
cmpsb
pop
fldl
push
clc
inc
dec
arpl
mov
div
orl
repnz
icebp
xchg
ljmp
es
cmp
in
into
mov
lret
xchg
rcrb
cld
sbb
cmp
ret
jns
inc
dec
test
js
add
xor
iret
jns
xor
jge
data16
hlt
out
ficoml
sub
jl
andl
es
sbb
loopew,pt
dec
inc
aaa
in
sub
je
add
add
mov
loopne
ret
push
lahf
adc
mov
sbb
xchg
jo
out
aad
je
repnz
xchg
or
rcrl
and
arpl
cmpsb
xchg
sbb
jecxz
sahf
repnz
and
pop
in
cs
and
mov
lods
add
sub
jle
pop
shr
xorl
in
pop
sbb
dec
jae
mov
out
pushf
scas
dec
cli
push
xor
jl
pop
xlat
push
xor
loop
fbld
mov
lahf
bound
mov
cmp
dec
xchg
mov
jge
jns
mov
mov
mov
enter
mov
push
pop
push
add
xor
push
cld
adc
insb
in
adc
xchg
pop
outsl
das
jbe
push
repz
fnsave
or
jmp
adc
lods
dec
arpl
mov
orl
stc
fistl
iret
sbb
push
popf
and
sub
push
mov
cmpsl
cmp
lret
addr16
dec
pop
mov
mov
xchg
push
sub
push
bound
addr16
push
test
xchg
repnz
or
mov
inc
and
mov
push
lar
addr16
pushf
pop
add
xor
xor
push
xor
addr16
pop
shr
and
out
xor
push
and
ror
xchg
addr16
shll
jl
fiaddl
pop
lods
xor
jne
inc
dec
bound
sbb
lea
inc
shlb
mov
push
shlb
int3
and
and
call
jne
push
cvtdq2ps
in
or
arpl
and
inc
in
call
add
popf
jne
jnp
xchg
lret
adc
jge
test
in
ds
mov
inc
cwtl
push
lret
sbb
stos
jg
xor
pop
inc
adc
xchg
mov
loop
jmp
js
roll
push
int3
fistl
add
add
dec
mov
push
out
stos
jo
loope
and
andl
rolb
gs
xchg
mov
sub
out
in
mov
fimull
mov
lret
cwtl
mov
push
aas
idivl
fistpl
out
add
jo
outsb
xchg
test
pop
std
jp
dec
mov
fisubrs
fisttpll
cltd
or
not
mov
insb
sti
mov
lds
popf
push
repnz
mov
jno
push
jecxz
and
sbb
cmpsb
lretw
lods
xor
addr16
nop
mov
or
mov
ret
or
ss
fdivrp
aam
mov
add
repz
out
pop
mov
mov
pop
fdivl
add
and
test
adc
mov
enter
inc
push
cli
dec
push
add
inc
pop
sub
lea
inc
or
adc
mov
push
daa
scas
in
sub
inc
cmpsb
or
arpl
ja
insl
xor
scas
or
push
sub
in
xor
call
inc
sbb
dec
fildl
pop
push
sbb
aas
jo
lret
clc
leave
inc
fwait
sbb
push
dec
push
cmp
lock
xchg
dec
mov
xchg
push
cmp
popf
testl
xchg
jle
out
jns
es
mov
jns
and
cmp
repz
into
jbe
push
stos
mov
int
filds
jle
repz
loopne
sbb
or
int3
mov
es
xchg
mov
xor
jnp
add
push
loop
jmp
iret
mov
mov
mov
push
ss
or
cs
add
sbb
imul
xchg
push
bound
sbb
pop
hlt
mov
adc
dec
push
data16
xor
cmp
adc
testl
arpl
mov
mov
mov
mov
pop
xor
fwait
xlat
adc
adc
out
pop
rclb
pop
jb
add
sub
dec
push
dec
loope
imul
addl
inc
xchg
jne
lcall
mov
push
sub
inc
in
xchg
ljmp
mov
insb
je
cmpsl
add
sbb
sbb
and
sbb
stc
imull
cmp
inc
cltd
mov
or
dec
sub
jecxz
in
popf
jne
std
test
pushf
and
push
mov
unpcklps
subl
jns
in
jnp
mov
insl
sub
adc
adc
das
mov
cmpsl
push
rorb
adc
mov
cmp
mov
jo
and
outsl
mov
pcmpgtb
and
jnp
hlt
repz
dec
push
mov
ds
jp
push
add
mov
fsubp
setp
stc
jbe
clc
pop
jno
push
mov
mov
and
mov
inc
divb
push
leave
jnp
sbb
mov
xor
sbb
shl
nop
mov
cmp
cmp
mov
add
mov
or
xor
fistps
sarl
dec
inc
adc
or
cltd
mov
mov
add
cmp
xchg
or
cmp
fildl
mov
lahf
hlt
push
push
lret
std
lret
sub
les
push
enter
and
stc
pop
mov
jmp
js
xchg
adc
jbe
and
mov
movsl
pop
fndisi(8087
mov
int3
sar
sub
sbb
pusha
push
mov
adc
addr16
repz
addr16
mov
jns
lods
in
or
push
push
lods
aas
sbb
sub
adc
adc
push
sub
faddl
jbe
into
inc
jnp
insb
xchg
cltd
clc
ja
xchg
movsl
enter
inc
xlat
in
sub
adc
ja
xor
add
mov
lret
cmp
fdivrs
xor
pop
popa
repnz
or
lds
daa
not
push
popa
cmp
dec
ds
mov
sub
out
sahf
gs
out
aam
pop
pop
sub
xchg
inc
les
sahf
push
mov
jp
dec
ret
hlt
bound
pop
mov
xchg
mov
vpsrld
imul
or
fmul
xorl
outsl
sbb
shll
and
push
daa
fwait
ret
icebp
sub
push
mov
gs
sbb
insb
shrb
arpl
add
xor
mov
and
dec
dec
cwtl
jmp
nop
int
fwait
cmpsb
jae
and
fists
inc
xor
sbb
add
add
shll
scas
push
pop
in
pop
jl
add
add
sub
data16
and
cmp
adc
dec
in
adc
mov
and
fstl
or
sbb
scas
fdivr
cmp
lock
pop
push
inc
lds
in
sub
jnp
rcll
dec
inc
mov
push
lret
divl
cmp
dec
cld
sti
pop
pop
shlb
mov
mov
test
pop
jbe
and
push
cmc
push
add
out
fiaddl
cmp
in
lea
jmp
jmp
bound
jmp
add
sub
fdivrl
push
lds
mov
test
cld
movsl
cmp
in
scas
fcmovnbe
dec
jns
xor
outsb
mov
jg
jg
mov
sbb
out
or
lea
mov
int
fisubrs
das
not
dec
pop
inc
jmp
lret
ss
div
push
dec
jmp
sub
sub
shl
icebp
aaa
push
notl
mov
jg
test
test
scas
std
or
and
test
rorb
jne
and
inc
dec
sbb
add
or
or
icebp
jmp
testb
lds
adcb
jno
jecxz
jnp
pop
push
xlat
adc
mov
xorl
clc
jl
mov
or
sub
movsl
cmp
hlt
insl
mov
or
dec
cmpsb
jb
lods
jmp
aad
jbe
cli
out
ficoml
cli
pushf
xchg
push
jns
psrlq
sahf
cmp
lds
sub
rorb
daa
clc
and
sbb
sub
sti
aaa
sbb
mov
dec
fstpt
inc
cmp
mov
les
inc
enter
add
push
add
jecxz
dec
mov
mov
fstpt
mov
out
inc
aad
loop
or
sub
scas
popf
sub
add
in
adc
sti
sbbl
mov
mov
insl
notl
clc
add
and
add
inc
in
nop
aas
imul
mov
inc
loop
ret
add
xor
pushf
jns
int3
arpl
jg
test
ljmp
mov
push
movq
cltd
pop
scas
mov
mov
mov
mov
mov
imul
cmp
push
ja
mov
out
test
jne
and
inc
les
xlat
dec
mov
or
mov
dec
add
imul
inc
and
xor
insl
imul
in
inc
test
std
movsl
mov
loope
mov
mull
jg
mov
xor
lods
cmp
mov
imul
push
sub
getsec
sbb
hlt
dec
fstl
push
xor
fdivrs
mov
mov
jo
pop
push
out
inc
pop
insl
rclb
adc
sahf
push
sub
or
out
jecxz
mov
iret
and
sbb
iret
test
inc
cmc
je
sub
jbe
sub
sarb
sahf
and
mov
jle
lock
dec
adc
pusha
mov
fsubrl
or
int
pop
or
jge
xchg
lock
test
pop
popf
clc
jbe
lret
or
xchg
out
mov
adc
lea
loop
pop
mov
add
push
movhps
insb
int
call
sbb
add
sub
add
das
loop
push
and
sub
das
pop
out
insb
jp
sbb
cwtl
dec
sub
std
test
pop
sub
nop
leave
sahf
stc
arpl
sahf
cmc
outsb
es
sub
repnz
xor
addr16
enter
cld
cmp
pop
std
insl
mov
popf
into
sar
inc
inc
sets
ds
icebp
mov
sub
mov
add
test
arpl
enter
test
in
in
in
hlt
cltd
adc
fxch
sub
mov
popa
subb
push
or
xchg
xchg
rcrb
mov
cmpsl
popf
stc
jbe
xchg
xchg
cmc
ret
jns
int
lea
pop
jl
stos
mov
test
lods
xchg
mov
pmaxsw
inc
mov
loopne
pop
std
bound
and
dec
out
mov
and
ja
das
xchg
int
inc
in
mov
enter
push
xchg
in
insb
hlt
fsubr
in
ja
repnz
and
loop
loop
mov
sub
add
incl
mov
lar
add
lds
fdivl
mov
mov
hlt
pop
lds
sbb
jp
sub
push
xchg
mov
roll
push
mov
roll
push
xor
lea
inc
pop
lods
mov
and
adcb
jbe
or
icebp
pusha
lret
std
pop
cli
outsb
out
push
cmp
in
pop
bound
sti
sub
testb
inc
lds
stos
jno
sub
testl
cwtl
mov
pop
jns
xor
xor
dec
sub
push
popa
push
dec
jle
loopne
int
pop
fucomp
fsubrl
lea
movsl
add
cmc
inc
jmp
mov
iret
in
sbbb
das
cmp
mov
je
ds
jb,pt
shll
push
pushf
xlat
lret
and
and
test
sub
ret
rorb
mov
lahf
pushf
mov
add
xor
vpmuludq
cmpb
fistpl
jge
add
daa
movsb
sub
les
push
push
fcomp
jne
cs
das
sti
rcll
lret
js
xor
mov
pop
mov
adc
fbld
stos
mov
mov
aad
cmc
mov
inc
push
add
push
xor
shl
xchg
dec
aas
xchg
push
lods
imul
stos
push
jmp
push
sub
sub
out
sbb
jp
push
loope
pusha
or
enter
outsl
sahf
jle
out
sbb
xchg
push
mov
xchg
sub
adc
mov
test
clc
in
stos
scas
dec
aam
popl
jle
pop
gs
cmp
idivl
push
mov
movsl
stc
jp
fidivrs
inc
and
mov
jo
sar
pop
dec
pop
xchg
mov
out
outsb
and
inc
ret
sub
inc
push
push
mov
mulb
dec
aad
jg
lcall
cwtl
pop
sub
push
dec
or
adc
daa
jnp
aaa
cmc
push
mov
lock
sub
xchg
ret
loope
adc
psrlq
aam
outsb
add
add
mov
js
shlb
mov
lds
add
es
or
jne
lret
inc
pop
sbb
add
jb
mov
mov
imul
rclb
sub
add
push
mov
cmc
xchg
dec
dec
xchg
negl
xchg
sbb
dec
push
jne
push
ror
sbb
mov
push
aas
sub
adc
lods
sub
mov
frstor
mov
push
or
loopne
cld
pushf
sub
or
fidivs
jbe
fnstsw
insl
cmp
testl
shll
test
insl
mov
loopne
fnstsw
addr16
cmp
iret
ret
xchg
ss
push
lahf
dec
xchg
add
adc
xchg
outsb
push
inc
stos
idivb
mov
fs
cltd
xchg
mov
or
jno
mov
and
add
enter
sbb
mov
nop
sti
lahf
push
aad
insl
or
pop
bound
adc
fwait
out
add
in
ljmp
jns
jbe
and
pop
pushf
pop
add
inc
inc
in
push
xor
aad
sub
mov
or
push
std
test
je,pn
lods
jecxz
stc
out
xchg
mull
insb
mov
aam
mov
mov
cltd
add
xchg
pushf
sub
test
fildl
pop
cli
cmpsl
stos
pop
mov
jle
fsubp
test
repz
xor
dec
xlat
stos
test
pop
les
jg
mov
rcrl
push
fwait
divb
in
push
mov
pop
inc
or
mov
dec
sbb
fs
and
sbb
sbb
pop
dec
stc
data16
mov
rcll
sub
test
add
test
and
shl
jp
in
ret
cmp
push
arpl
jbe
movsl
push
lret
cmpsl
sbb
lods
xchg
popf
dec
xchg
mov
test
pushf
fsubp
sarb
sbb
pop
cmp
hlt
lock
fstl
addr16
pop
test
add
inc
pop
mov
mov
mov
mov
push
stos
rol
scas
mov
mov
sub
or
push
mov
or
push
test
pop
inc
mov
sbb
loopne
push
in
mov
arpl
arpl
push
push
into
popa
out
jae
hlt
sbb
subl
push
es
aam
testl
out
push
xchg
jl
lret
xstore-rng
cmpsl
push
mov
gs
sbb
mov
pop
repnz
sti
or
cmpsb
daa
lds
daa
jmp
sbb
inc
push
xchg
cmp
fwait
icebp
in
les
add
ss
inc
int3
jp
daa
xor
inc
es
movsb
xlat
movsl
mov
pusha
mov
hlt
push
mov
js
imul
lret
pop
in
jo
sbb
dec
mov
inc
orl
inc
inc
add
dec
movsl
scas
cmp
xor
fs
inc
xlat
les
adc
xor
xor
jo
iret
dec
sub
test
mov
pushf
jecxz
jl
pop
xor
out
outsb
sbb
or
inc
xchg
push
jns
inc
lcall
out
pop
mov
cmp
cwtl
jae
dec
test
mov
pusha
pop
xor
pop
cmp
repz
and
push
repnz
movsl
aad
jle
mov
pushf
dec
sti
fwait
inc
cltd
out
cmp
into
mov
jmp
fs
lret
subl
les
mov
sbb
pop
push
adc
nop
cmp
fcompl
mov
xor
xchg
ja
daa
mov
mov
jns
jecxz
xchg
jb
pushf
push
loope
sbb
dec
cmp
lds
xor
push
mov
stos
scas
pop
je
je
cmp
imul
mov
cmp
sarb
aaa
xor
mov
inc
mov
mov
adc
in
sub
mov
sub
daa
push
mov
int
inc
test
movsl
test
dec
fdivs
jns
stos
mov
cmp
fldenv
jnp
popf
mov
mov
add
mov
mov
loope
bound
testl
pusha
cmp
xor
loope
loopne
adc
push
xchg
pop
dec
xor
dec
test
icebp
push
scas
sbb
push
pop
in
xlat
fs
addr16
mov
add
jp
push
mov
dec
xchg
lret
dec
out
lock
push
xchg
cmpsb
popf
mov
jbe
scas
loop
clc
inc
idivb
xchg
imul
push
push
and
mov
sub
fdivrl
cmp
add
das
xchg
enter
aaa
push
dec
push
cwtl
loope
aas
hlt
into
or
jge
jecxz
mov
cmc
inc
xor
adc
pop
mov
jp
nop
adc
scas
cs
lods
inc
jg
loop
inc
jmp
js
xor
je
pop
adc
flds
jnp
lret
jmp
fwait
std
mov
into
loop
mov
pushf
nop
jb
aas
sbb
pop
scas
dec
mov
rorl
add
jns
outsl
push
cmpps
jge
out
scas
imul
push
mov
js
imul
mov
fidivrs
daa
sbb
loope
push
test
push
jb
adc
mov
loopne
and
ret
sti
mov
mov
push
popa
jno
lock
cld
mov
add
int
push
adc
jns
pop
ljmp
int3
or
jo
scas
xlat
repnz
loope
pop
pushf
pop
sub
test
cmp
dec
clc
das
mov
lret
aaa
sbb
xor
mov
sub
sti
xchg
inc
cmp
pop
push
call
cld
push
rcl
sub
mov
daa
add
mov
repz
cli
push
sarb
push
pop
xor
subl
dec
shl
cmp
ss
pop
pop
outsb
fld
ret
sbb
or
out
bound
or
cld
cmpb
or
mov
mov
adcl
pushf
mov
xchg
loop
mov
fisubl
xchg
adc
xchg
int
jo
mov
mul
xor
xchg
push
jne
test
mov
pop
pop
sub
mov
dec
movsl
xor
cwtl
repz
sbb
ja
push
and
inc
dec
sub
addl
test
ret
fdivrl
push
fxtract
mov
lret
into
mov
xchg
mov
pop
xchg
push
call
fs
pop
enter
sti
xchg
sbb
enter
decl
pop
imul
jmp
or
push
mov
es
mov
sbb
push
arpl
dec
fdivrl
mov
xor
cmpsb
mov
mov
pop
xor
sub
add
add
repnz
into
imull
push
add
imul
orl
cmp
mov
adc
aaa
les
xchg
mov
adc
pusha
jle
in
xor
inc
fidivl
cmp
mov
orb
je
test
lods
and
repz
push
sub
popf
test
out
das
int
fldt
fcmovbe
movsb
imul
jne
adc
sar
mov
xchg
mov
lahf
scas
es
enter
movsb
jmp
lea
inc
mov
stos
or
push
movl
aad
into
out
pop
mov
push
insb
mov
cmpsl
mov
mov
or
ret
dec
inc
inc
add
xchg
das
mov
mov
enter
sbb
adc
int3
jo
mov
es
mov
mov
mov
mov
jle
pop
std
add
dec
add
inc
fstpl
dec
jb
inc
arpl
push
inc
ss
inc
cmp
std
not
add
inc
fwait
test
stos
popa
or
int3
jge
iret
int
cli
inc
mov
cs
mov
pushf
addl
xchg
sub
into
mov
and
xor
repnz
pop
enter
mov
pop
mov
repnz
repz
shl
in
pop
cmc
jl
subl
jne
inc
lahf
rolb
popf
sub
addr16
mov
lret
js
add
dec
cmp
or
pop
xchg
rolb
mov
or
or
lret
enter
xchg
and
inc
cmpsb
hlt
mov
adc
out
adcb
mov
adc
movsl
mov
xor
adc
aam
and
int
or
lcall
hlt
cld
stc
pop
ja
mov
ret
jp
push
out
push
pop
fimull
mov
std
arpl
lahf
aas
lahf
jne
mov
jle
mov
mov
sbb
mov
adc
ret
out
fcoml
adc
jle
pop
test
cld
cmpl
cs
pop
pop
out
mov
shll
push
push
fdivrl
ss
rclb
int
sbb
test
add
leave
inc
inc
jb
mov
cltd
pop
cmpsb
lods
xlat
imul
inc
mov
inc
pop
and
outsl
mov
or
aaa
pop
shlb
mov
bound
pop
jbe
movl
xchg
cwtl
repz
cmpsb
pusha
add
enter
xchg
jbe
test
add
int3
sbb
xorb
xor
add
fbstp
subl
out
jae
push
cmp
cmpsb
pop
push
cmp
fwait
repz
push
and
push
repz
fcomps
or
iret
jns
imull
daa
mov
orb
inc
push
inc
inc
and
mov
out
imul
lret
mov
jmp
push
xor
or
push
push
push
fcmovbe
and
push
adc
cmpsb
sarb
cmp
push
lcall
ss
sbb
cmp
cmp
xchg
shlb
add
dec
out
mov
pop
cmp
fisttps
aas
mov
call
arpl
mov
sub
je
cmp
out
jp
scas
mov
jnp
lea
cmp
mov
aaa
adc
xor
add
sub
mov
fisubrs
jecxz
lea
xchg
psubw
and
clc
aam
pushf
pushl
cmp
std
lret
inc
outsl
adc
in
sbb
inc
icebp
movsl
sub
dec
js
scas
jle
fiadds
ljmp
pop
or
xchg
add
sub
inc
out
lds
in
mov
leave
jae
push
mov
jg
call
dec
mov
add
inc
pop
pop
iret
sub
adc
pusha
add
je
shlb
and
mov
pop
lods
jl
xor
add
mov
subb
outsl
adc
sbb
lret
subl
inc
js
jbe
mov
inc
xchg
in
inc
int3
mov
add
mov
add
outsl
mov
ret
ljmp
xor
cli
jno
jno
repz
in
xor
adc
sub
icebp
add
push
lret
shlb
or
mov
sahf
in
stos
pop
enter
repz
pop
cwtl
mov
add
pushf
dec
push
xchg
inc
inc
fdivl
testb
and
pop
xchg
sbbb
add
outsb
xlat
jnp
inc
xchg
aaa
sub
ljmp
mov
enter
ja
mov
add
and
sbb
fmuls
mov
jl
test
daa
sbb
lret
pop
clc
lds
lret
mov
clc
lahf
out
orb
out
adc
push
lods
mov
mov
mov
xor
mov
stos
testb
lret
movsb
jnp
mov
out
icebp
mov
add
add
push
addr16
xchg
adc
cmc
das
push
icebp
inc
sub
dec
fistpl
mov
cltd
in
inc
jl
dec
ja
push
aas
cmpsb
jp
mulb
xor
es
adc
in
jle
pop
cltd
pop
mov
iret
jae
jno
jle
mov
pop
xchg
in
movsl
sbb
mov
mov
mov
nop
add
fs
out
pop
mov
loopne
add
cltd
test
lods
sbbb
test
mov
in
xchg
cwtl
fidivrl
xchg
addr16
repnz
mov
xor
adc
sub
or
xor
xor
jmp
pop
test
arpl
mov
fcoml
mov
icebp
aaa
cmp
sar
pusha
mov
out
cmp
addl
jge
adc
push
flds
mov
or
insl
fsubrl
js
les
lods
jo
jne
push
cmpsb
sub
int
hlt
pop
jae
adc
insl
and
xchg
daa
cmpl
test
push
push
and
xor
and
dec
loope
jl
mov
or
inc
hlt
xchg
daa
xor
arpl
lret
loopne
inc
jge
adc
push
pop
inc
pop
pop
push
fisubl
andb
cltd
pop
cmc
cmp
inc
adc
test
sub
jl
es
add
jnp
std
stc
ret
mov
xlat
xor
jno
jmp
in
std
xor
lds
loop
pop
ss
sbb
inc
jns
aad
sahf
inc
dec
lahf
test
ss
ds
enter
adc
js
sbb
dec
test
cmpb
pop
insl
add
pop
je
rol
mov
inc
xchg
xchg
add
imul
insb
outsb
shll
jge
out
insl
outsb
mov
fsubl
subl
punpcklbw
sbb
mov
aad
inc
pop
leave
xor
pop
aas
mov
stos
push
aaa
mov
iret
pop
shrb
mov
push
scas
test
sti
enter
adc
lret
jo
add
pop
jp
push
mov
ljmp
sub
imulb
fidivrl
scas
and
sbb
mov
pop
xorl
shlb
lock
fisubs
cs
rolb
push
fsubl
insb
cmc
loop
loop
aaa
data16
push
insb
mov
pusha
add
fsts
xchg
lcall
lcall
imul
shrb
push
push
adc
pop
push
or
push
js
int3
jbe
jmp
mov
bound
pushw
mov
mov
test
pop
iret
push
mov
fidivs
sbb
test
cmc
int
jno
leave
scas
into
out
loope
daa
mov
jp
popf
xchg
mov
xchg
push
or
shlb
ret
mov
pop
cmp
jmp
movl
scas
cmp
lret
dec
inc
mov
shr
inc
or
xlat
sub
xchg
push
sub
dec
sbb
inc
mov
or
cmpsb
or
dec
aaa
stos
mov
add
sub
inc
shll
ljmp
cld
pop
fstpl
addr16
or
pop
and
jb
stos
ror
out
lock
scas
ljmp
add
shrb
inc
popa
xchg
rorb
test
lea
or
sub
and
call
sub
sub
or
into
inc
jmp
ljmp
and
in
aam
ja
outsb
push
and
movsb
jns
adc
adc
mov
repz
repnz
arpl
push
fidivrl
mov
mov
iret
jno
insb
xor
iret
xchg
and
sub
jo
xor
jecxz
loop
mov
fwait
inc
fwait
adc
call
push
sub
pop
sarl
sbbb
pusha
adc
add
jbe
add
jp
mov
xchg
adc
shr
test
ja
inc
icebp
mov
lahf
out
push
hlt
leave
and
rcr
adc
xor
push
lcall
sahf
and
mov
pushf
xchg
jo
in
loope
es
cmpl
scas
push
sbb
xchg
mov
popa
adc
push
mov
cwtl
jb
cmp
mov
sbb
rcl
sbb
push
sbb
sbb
xlat
mov
dec
out
jb
lods
sbb
loopne
pop
xchg
push
xor
or
jp
rolb
sub
in
ss
scas
fistpll
mov
push
movaps
and
lds
ret
jns
arpl
int3
jae
int3
mov
mov
jo
inc
sub
pop
and
stos
or
cmovge
jns
call
ret
adc
clc
cs
sbb
pop
adc
outsl
mov
jge
ja
fmuls
mov
stc
outsb
or
scas
push
lahf
sub
or
or
push
xchg
lahf
ja
mov
jne
add
adc
pop
push
xchg
inc
cmp
push
insb
fildl
insb
jo
push
jl
addr16
icebp
sub
repz
movsl
inc
mov
adc
cmp
mov
mov
aad
and
mov
push
js
out
fistl
les
mov
lret
add
jno
mov
ret
cmp
pop
and
enter
arpl
movsl
push
mov
imul
or
scas
lea
mov
repz
test
push
data16
outsl
out
xor
addl
pop
push
sub
sbb
std
test
cmp
xchg
cmp
mov
push
out
mov
shrb
cmp
mov
cmp
and
stc
mov
aam
mov
bound
cld
push
nop
insb
inc
sbb
fildl
jg
cmpsl
je
icebp
push
lahf
mov
outsl
out
or
mov
cwtl
mov
jle
repnz
or
sub
loopne
jnp
jl
aas
int3
or
sbbb
int3
mov
out
push
xchg
std
and
lods
and
fs
mov
outsl
pusha
ret
mov
xchg
in
inc
ret
xor
leave
je
xor
sub
shl
lcall
ficoms
arpl
test
push
jg
sbb
test
dec
mov
ficomps
push
mov
and
dec
inc
stc
aas
loope
inc
cmp
es
mov
mov
and
ret
jecxz
add
mov
push
and
push
jns
jae
call
bound
iret
and
mov
inc
jmp
and
in
mov
jge
push
mov
loop
cmpsb
fcomps
xor
pop
push
test
adc
mov
mov
repnz
push
jp
or
insb
mov
or
leave
loop
not
aas
repnz
loopne
cmp
fs
jb
push
aam
sbb
push
push
mov
loope
sbb
pop
xchg
fisttps
mov
arpl
dec
push
test
mov
test
add
pop
xchg
or
imul
push
lea
inc
mov
fimull
popa
pushl
xlat
push
sbbl
push
in
repnz
fdiv
xchg
out
rclb
out
adc
stos
jae
out
mov
flds
cld
push
mov
or
mov
mov
out
stos
int3
add
movsb
pop
or
jle
jae
sbb
and
push
sahf
fidivs
sti
test
sbb
in
leave
out
addr16
scas
mov
dec
add
mov
outsb
fdivs
stos
popa
inc
fldenv
push
xchg
adc
add
dec
push
pop
dec
jmp
negb
lods
mov
lea
popa
ficomps
mov
lcall
xor
aas
cs
dec
add
fcompl
rcrb
std
int3
dec
insb
std
xchg
fdivp
mov
daa
aas
std
mov
lea
ljmp
test
jmp
xorb
outsl
lds
popf
sub
in
mov
inc
shll
jle
std
lds
in
sbb
cmp
pop
adc
or
adc
out
test
jae
jge
jno
shrl
mov
arpl
add
xchg
inc
scas
jecxz
jmp
jne
pop
ljmp
lcall
cmc
xchg
and
xchg
push
std
jg
push
pop
andb
loopne
mov
push
push
push
push
bnd
lock
out
add
xor
jnp
addr16
and
pop
loopne
lock
lret
shll
enter
or
pop
imul
nop
pop
leave
lea
pop
addl
pop
or
lock
scas
mov
daa
mov
addb
mov
aas
popa
jge
mov
mov
in
pop
test
ja
dec
sar
sbb
sbb
jp
lock
jno
dec
daa
stos
inc
sub
gs
inc
mov
ljmp
sub
lret
cmpsb
fists
jecxz
scas
mov
or
arpl
mov
jge
pop
mov
inc
adc
inc
ss
in
stos
mov
pop
pop
call
xor
lods
repz
or
cmp
repnz
rorl
dec
cmp
push
jecxz
icebp
loopne
imul
mov
pop
pop
and
push
xchg
dec
imul
sbb
out
jno
sub
cmp
test
out
mov
xlat
mov
adc
mov
mov
ljmp
dec
pop
cltd
jbe
aad
scas
cmc
cmp
mov
orb
jae
mov
xchg
pop
and
add
mov
test
or
push
lret
pop
pop
cs
iret
cmpsb
cmp
int
jecxz
cs
pop
sub
pop
mov
in
daa
loope
push
xlat
outsb
add
mov
jbe
cmp
mov
inc
lret
mov
mov
pop
add
xor
dec
push
dec
mov
dec
insb
or
pop
in
orb
shrl
mov
bound
mov
cli
add
mov
jno
mov
loop
test
jl
dec
dec
xchg
adc
xor
or
xlat
insl
sub
pushf
inc
loop
sbb
push
mov
mov
xor
fwait
clc
mov
idivl
inc
push
xorl
or
push
cmp
call
pop
or
out
inc
mov
sbb
aam
xchg
push
fldcw
je
xchg
cmp
mov
mov
xchg
sti
sub
or
mov
iret
add
fnstenv
or
insb
outsl
pop
lea
dec
cmpsl
fnsave
mov
mov
dec
jne
mov
xorb
xchg
xchg
mov
int
sbb
rcrl
jne
pop
call
sub
sbb
mov
push
dec
xor
add
inc
push
push
jno
jle
insl
das
jmp
sar
ret
scas
in
out
pop
popa
adc
out
dec
addb
sbb
lods
pushf
shlb
stos
xlat
add
lret
or
cwtl
movsl
test
test
scas
bound
jnp
lods
lret
call
mov
and
mov
mov
add
pop
or
call
jl
repz
pushf
repnz
enter
cmp
nop
lods
movsl
mull
test
xchg
outsb
sbb
iret
mov
ja
jge
jno
cli
fisttps
push
pop
cli
sbb
subb
sbb
fstpl
stos
sbb
stos
dec
cs
ss
mov
mov
int
lods
cld
sbb
jae
sbb
dec
pop
push
mov
rcrb
in
cmpsl
lds
mov
adcb
pushf
xchg
xor
or
rcrb
mov
or
fs
test
or
jp
shll
shrl
lret
and
xchg
sub
loope
int3
sti
jnp
ja
jns
mov
pop
sub
jnp
mov
movsl
lret
loope
inc
jecxz
and
lock
push
xchg
and
add
and
jae
push
movsl
mov
dec
pop
das
or
jcxz
jae
test
fidivs
add
mov
sub
lret
push
ja
push
or
pop
aas
pusha
les
pop
stos
mov
dec
aas
jg
mov
jl
movsb
inc
add
jle
imul
mov
cmp
cmpsl
push
dec
pushf
inc
cmp
icebp
sub
in
jmp
xchg
shll
dec
aas
xor
daa
sub
mov
out
adc
and
test
scas
lods
or
adc
lods
cli
jns
sub
xor
jecxz
adc
stc
add
addb
xchg
daa
push
push
outsb
outsl
enter
and
mov
and
adc
push
jmp
xchg
arpl
out
xchg
adc
cmp
int3
aam
in
push
cwtl
mov
cli
push
lcall
or
aad
and
icebp
repnz
mov
inc
imul
push
push
add
cmp
and
mov
cmp
jae
xchg
or
lds
fsubr
ret
add
test
pop
clc
rcl
mov
test
dec
jae
jno
in
xor
jo
pop
sbb
loop
dec
pop
loop
in
and
lds
jge
sbb
outsl
and
adc
aad
xchg
xchg
int3
test
mov
test
aad
jge
dec
fisubs
je
std
dec
fdivs
dec
xchg
sub
pop
inc
xor
sub
int
adc
xor
mov
cmp
adc
popf
je
add
mov
jb
icebp
mov
xlat
stos
push
femms
sub
out
clc
cmp
cmpsb
and
lahf
add
mov
fsubr
sub
imul
jb
cltd
xor
push
xor
mov
loopne
adc
mov
hlt
outsl
jns
pop
test
cmp
xchg
xchg
and
lret
pop
push
rolb
imul
fimull
outsl
adc
jo
inc
stos
or
dec
sbb
sub
jb
out
int
mov
pop
shll
sbb
jle
adc
dec
cmp
lret
sbb
adc
sbb
fs
cmp
imul
aaa
pop
adc
mov
and
push
imul
in
pop
fwait
in
movsl
ret
ljmp
jge
into
sbb
mov
mov
aam
int
xchg
addl
mov
pop
test
je
mov
push
andl
lock
dec
dec
and
mov
xchg
xchg
int
pop
push
cmp
in
dec
andb
sub
adc
xchg
fimuls
push
xchg
stc
lret
push
mov
ror
xchg
add
jmp
leave
jl
push
int3
sub
test
in
sub
hlt
xchg
mov
jnp
adc
inc
push
cmpsl
lock
push
dec
ds
incl
add
test
js
std
in
mov
andb
add
add
cli
jmp
jmp
push
in
adc
mov
dec
dec
xor
jmp
cwtl
ja
jns
mov
outsb
adc
push
cmp
and
mov
sbb
inc
shll
dec
or
mov
ret
pop
sub
es
pop
and
mov
shlb
cmpsl
mov
inc
dec
lahf
xor
push
add
cltd
leave
aam
popf
push
int3
sub
sub
sar
add
mov
add
xor
lock
test
xor
mov
insb
lret
jo
nop
cwtl
xchg
cmp
adc
loopne
movsb
xor
add
xor
inc
lcall
cld
push
inc
fsubrs
push
push
adc
mov
lea
hlt
rclb
cmpb
lods
cltd
sub
xchg
stos
sti
or
rorl
lahf
lret
add
sub
test
stos
nop
or
xor
xchg
cmpsl
cli
cmp
jns
jge
leave
adc
leave
mov
sbb
pusha
cmp
sbb
xchg
push
fcomps
sub
and
into
in
or
outsl
push
jmp
and
stos
jmp
int
lea
xor
fsts
arpl
addr16
incb
mov
and
vpmulhuw
outsl
jnp
mov
pop
scas
push
es
stos
mov
mov
shl
mov
gs
out
je
inc
xchg
inc
into
sahf
mov
aam
out
add
pslld
test
into
mov
js
jg
pusha
stc
cli
lret
dec
add
inc
adc
addr16
je
pop
or
pop
xchg
xor
xchg
jnp
cmp
mov
pop
jg
jmp
xchg
push
ret
mov
dec
pop
in
cwtl
or
inc
cmc
mov
and
lock
lods
jne
test
clc
cmc
out
push
or
in
jae
mov
xor
stos
push
test
in
nop
or
btc
xor
push
mov
add
jp
ja
dec
mov
aad
adc
sti
fisubrs
inc
xchg
mov
lock
inc
icebp
ljmp
adc
add
fstpl
popa
sub
fstps
outsl
cmp
pop
js
dec
mov
xchg
pop
xchg
test
dec
js
inc
mov
or
and
ja
sbb
adc
xor
daa
push
mov
xchg
push
pusha
pop
mov
popa
cs
cmp
jecxz
rolb
shll
sub
xchg
cli
je
or
mov
leave
and
jae
popa
dec
data16
sar
sub
jle,pn
dec
xchg
xor
dec
pop
hlt
mov
mov
xchg
lock
sbb
pop
shr
mov
in
add
adc
mov
dec
stos
adc
scas
rcrb
outsb
pop
sbb
daa
out
add
sbb
xor
addl
mov
jecxz
into
inc
aas
jle
xchg
outsl
outsl
xchg
xor
xlat
adc
and
and
scas
jo
sub
xor
fbstp
xchg
xor
lahf
add
push
nop
xchg
ljmp
out
dec
sub
or
shlb
sub
jnp
jge
dec
dec
or
mov
mov
out
aaa
sub
in
cmp
pop
and
xchg
bound
pop
roll
push
mov
int
add
popf
dec
sahf
sti
pop
jne
hlt
or
jmp
not
fwait
cwtl
out
or
jl
xchg
or
js
test
adc
push
or
pop
mov
int3
and
std
inc
loopne
daa
push
or
pop
dec
xchg
xchg
orl
mov
mov
pop
addl
push
inc
das
lret
loope
xchg
mov
adc
test
pusha
jecxz
xor
pop
mov
or
adc
xchg
lods
adc
mov
push
arpl
or
adc
test
jmp
pop
xlat
popa
sbb
adc
mov
pop
cmp
dec
mov
in
incl
inc
inc
push
or
rcrl
lret
dec
sbb
add
adc
iret
add
das
mov
jo
mov
mov
ds
imull
add
ds
addb
fidivrl
jge
sub
adc
mov
in
js
sub
je
xchg
lret
xchg
imul
pop
push
xor
or
mov
xlat
dec
mov
mov
jp
push
and
xchg
lret
fisubrs
fwait
aad
ror
loop
xor
inc
test
aas
pushl
out
and
jl
mov
pop
ficoms
adc
pop
out
dec
iret
xlat
stos
inc
push
cwtl
cmp
pop
push
mov
xor
icebp
push
pop
jno
mov
or
out
aam
mov
sbb
mov
repz
insb
mov
fs
nop
xchg
aad
bound
mov
sub
out
mov
sub
mov
aam
lods
xor
nop
pop
and
jle
jmp
popa
push
mov
cli
sti
dec
imul
aam
jae
mov
pshufw
and
xor
mov
jae
test
sub
adc
pop
pop
fnstsw
repz
cmp
jbe
cs
into
sub
and
push
and
cmpsl
mov
mov
pop
pop
dec
sbb
aam
addl
sub
xor
or
jb
arpl
mov
out
mov
lcall
ljmp
loope
cmp
add
xchg
jg
cs
cmp
mov
int3
or
xor
scas
insb
jno
jmp
and
fsubrs
out
insl
mov
sbb
stos
mov
dec
or
and
orl
fistps
das
xchg
sbb
cmpsl
adc
mov
insl
jge
push
rcrl
inc
mov
adc
imul
add
and
push
shrb
pop
dec
mov
pop
add
inc
jns
xor
sbb
mov
xor
add
xchg
lahf
int3
stc
fsubrl
fcoml
das
test
mov
test
jbe
pop
scas
mov
add
xor
lret
scas
pushf
add
xchg
ret
sbb
jmp
push
repz
andl
mov
mov
adc
cmpsl
cmp
imulb
andps
cmp
mov
mov
pop
rcll
lds
xor
mov
mov
ds
cmpsl
insl
arpl
push
add
fdivl
mov
mov
xchg
iret
mov
jp
shrb
add
sti
das
repz
xchg
sub
mov
inc
cmp
and
lock
xchg
inc
fdivrs
dec
jno
jb
dec
daa
pop
add
movsl
cmp
push
rclb
cmp
hlt
mov
in
push
lock
repnz
jg
rclb
into
aam
ja
add
popa
xchg
popf
mov
xor
pop
inc
gs
in
mov
add
mov
cs
jbe
xchg
or
xchg
adc
xchg
jns
sbb
adc
hlt
mov
cmp
cmp
mov
testb
mov
or
mov
jle
addb
test
call
test
inc
fistpl
sub
jmp
add
pop
mov
xchg
test
aad
gs
cmp
aam
xor
add
xor
insb
fnsave
cld
stos
pop
repnz
fidivl
inc
sbb
imulb
pusha
aaa
nop
mov
cmp
fistpll
flds
pop
lret
adc
dec
icebp
xchg
inc
mov
fwait
lret
jo
in
out
cmp
das
cli
push
dec
cmpsb
scas
out
into
push
add
inc
test
aam
mov
lock
cwtl
outsb
notl
add
ja
clc
or
test
lods
cmp
jg
jo
cld
shlb
loop
imul
add
ds
rorb
or
inc
mov
or
loope
adc
jmp
test
subl
pop
sbb
push
jo
or
push
inc
outsl
and
push
mov
jae
les
push
cmp
push
mov
test
popa
into
lds
ret
mov
outsb
mov
push
fstpt
inc
iret
loop
and
test
inc
aam
inc
adc
arpl
push
sub
stos
paddsb
pop
push
test
outsb
add
inc
stc
enterw
jg
sub
out
add
es
push
jbe
mov
filds
pop
lock
cmpsl
sub
dec
cltd
jl
aad
pop
dec
das
into
call
ud1
fisttpl
push
jnp
test
ficoms
jecxz
jmp
mov
addr16
sbb
add
fdivrs
push
cmpsl
jle
jp
jnp
jns
mov
fcmovu
jg
mov
ret
push
push
cli
inc
imul
inc
mov
mov
cmp
in
pop
adc
in
scas
xlat
movsl
mov
mov
push
dec
or
jge
mov
cmp
cmpsl
loope
sub
jg
mov
in
lcall
in
pop
pop
sahf
add
shrb
fldenv
dec
insb
jp
cmpsb
push
sbb
adc
pushf
jae
pop
loop
unpckhps
jno
aas
add
mov
icebp
push
push
in
sub
mov
test
loop
push
sbb
add
or
jge
cli
fprem1
jns
pop
imul
mov
pop
mov
dec
insb
mov
and
cmpsb
js
mov
sub
ss
stc
jl
or
imull
mov
mov
pop
out
ffree
lret
adc
das
jnp
stos
in
pop
movsb
cld
ss
sbb
xchg
into
xor
push
pop
mov
dec
cwtl
and
xlat
aad
add
pop
imul
cwtl
or
out
fstl
push
orb
mov
adc
pop
push
or
pop
and
sbb
repz
lds
pop
jg
or
cltd
jns
push
popa
jmp
xchg
add
push
outsb
loopne
jg
out
sbb
int3
or
cmp
test
outsb
mov
and
pop
insl
push
mov
daa
dec
sub
stos
inc
inc
sub
sbb
xchg
or
xor
xchg
mov
popf
and
jl
das
cmpsb
adc
jae
shll
outsb
pop
ljmp
mov
jne
sbb
inc
dec
mov
incl
repnz
push
bound
or
cmp
dec
mov
ja
leave
jno
imul
in
fwait
adc
imul
dec
lea
mov
out
lcall
leave
in
xchg
pop
dec
jae
and
sti
lods
and
and
daa
aas
js
mov
inc
sbb
clc
jbe
cmp
arpl
jno
fbld
ljmp
adc
sbb
test
cbtw
push
adc
mov
sbb
fcomps
dec
lds
dec
int3
fistpl
enter
sub
sbb
adc
xchg
mov
sti
gs
mov
arpl
pushf
lds
mov
out
push
add
out
and
les
lods
je
mov
mov
cmp
stc
dec
ret
das
add
movsl
loop
es
dec
add
or
nop
or
sub
lds
mov
jecxz
sbb
pop
mov
lret
addr16
or
jbe
in
mov
jne
stc
xor
push
pop
xadd
sbb
out
in
sub
cmp
sub
dec
mov
xchg
in
test
test
pop
je
out
notb
push
adc
fdivr
mov
enter
xor
nop
in
idivl
sub
cmp
dec
pop
push
into
cmp
pop
jb
push
inc
dec
aad
mov
dec
enter
in
fnstcw
ret
mov
or
test
roll
jae
nop
push
ss
sti
xor
push
fstpt
pop
adc
xor
cli
xor
xor
jmp
clc
icebp
push
xor
push
jb
jo
sub
jns
lret
push
lods
mov
add
ret
and
mov
insb
stos
sub
and
add
adc
and
xor
xchg
cmp
cmp
shll
out
cmp
pushf
sub
stos
cmpsb
dec
push
bound
push
mov
xor
jmp
adc
xor
insb
cs
fidivrl
dec
ljmp
jns
add
fcoms
sbb
mov
mov
and
rcrl
pop
add
lock
sti
scas
jmp
and
mov
loope
ja
nop
sbb
in
stc
lea
aam
jg,pt
fisubrs
scas
sbb
imul
mov
xor
lret
dec
bound
nop
femms
lahf
clc
imul
push
stos
mov
adc
mov
cmc
push
mov
fdivrs
or
out
jmp
mov
dec
jno
fildl
popa
jb
xor
mov
mov
pop
call
add
add
sub
out
insl
jmp
sar
sbb
hlt
pop
cmp
add
test
jge
cmpsb
enter
and
add
mov
aad
add
daa
xor
inc
pop
shrb
or
push
cmp
cmpsb
aas
loope
mov
cmpl
fwait
imul
adc
xchg
pop
xchg
lret
sub
fdivs
push
aas
push
inc
cmc
mov
xchg
xchg
stos
dec
push
loope
inc
jbe
xor
mov
and
ja
imul
xor
jg
popa
imul
mov
mov
test
scas
lahf
fistpll
fs
lds
cmovne
int
aas
mov
not
stc
cmpsb
shll
add
nop
inc
jle
and
mov
mov
dec
int
into
push
xlat
or
fnsave
ret
or
sahf
call
jg
sahf
pop
cmpsb
jp
mov
mov
pop
test
xchg
inc
jmp
jmp
adc
sub
ljmp
out
loope
ds
mov
push
rcl
enter
and
aaa
cli
movsw
repz
mov
mov
in
inc
xchg
out
jne
sbb
push
sar
xor
push
cltd
hlt
push
mov
test
mul
stc
mov
imul
dec
fcompl
aad
mov
loopne
cmpsb
and
inc
and
sub
sub
dec
mov
in
aam
push
mov
scas
cwtl
sbb
insb
pop
mov
jae
lcall
sarb
xchg
add
je
cmpsb
cmp
movsl
stos
jne
sub
xbegin
xor
mov
xchg
xchg
dec
mov
mov
jne
imul
xor
sub
movsl
inc
cmpsb
lods
pop
outsl
fidivs
jnp
out
or
les
cmpsl
jns
mov
test
out
sub
nop
stc
pop
xchg
shl
jg
xchg
cmp
push
xor
cli
lret
or
inc
mov
and
stos
jg
enter
pop
pop
pusha
loopne
pop
cli
push
stos
jae
dec
pop
dec
sub
adc
into
bound
sti
push
and
mov
jno
xchg
sti
out
ret
aam
cmp
lcall
outsb
add
inc
stos
dec
mov
sub
xor
dec
mov
or
or
push
xchg
call
mov
inc
mov
xchg
push
popf
push
sbb
out
and
pop
jae
pop
inc
addl
das
mov
decb
push
sti
stos
in
xchg
mov
ss
stos
cmp
xchg
add
subps
jl
ja
out
fidivs
aas
mov
lret
pop
xor
test
mov
out
in
sbb
test
dec
xor
push
sbb
ljmp
shll
xchg
mov
insl
repnz
jb
adc
clc
jge
mov
mov
inc
dec
lea
mov
scas
jmp
add
outsl
call
pop
arpl
mov
movsb
adc
bound
sahf
cmp
xchg
xchg
jecxz
pop
mov
cmp
ds
imul
cld
daa
movsl
in
xchg
inc
inc
xchg
sbb
fsubl
mov
cwtl
sbb
cmp
inc
or
mov
inc
add
lea
out
or
jmp
dec
js
add
out
mov
popl
arpl
insb
jmp
jmp
pop
lds
dec
adc
fldenv
icebp
xchg
fidivs
ss
mov
jl
pop
jnp
jb
inc
out
insb
mov
std
int3
mov
lock
sub
fs
lss
sbb
int3
add
data16
xchg
inc
jecxz
loope
push
dec
fnsave
adc
mov
pop
sub
repnz
movsl
jge
mov
mov
and
adc
jne
xchg
jg
int
sbb
in
iret
fmuls
stc
lods
andps
aaa
pop
ds
or
sub
daa
ftst
lods
movsb
add
push
movsl
adc
ds
jno
adc
dec
cmp
out
jo
mov
push
in
push
mov
out
sub
mov
pop
sbb
roll
mov
cli
insl
std
add
shrb
sti
jb
repz
adc
mov
into
add
ret
adc
mov
es
lahf
test
or
jl
jge
inc
push
ja
movsb
dec
jmp
sbb
inc
sbb
sarb
repz
pushf
stos
push
jo
mov
dec
mov
out
mov
mov
in
fdivrl
dec
lahf
shr
push
sub
mov
adc
push
mov
cmp
push
xchg
pop
mov
imul
lret
shll
pusha
movsb
out
lock
xchg
das
inc
inc
in
leave
xor
inc
adc
ja
jae
mov
pop
adc
cmp
mov
add
stos
enter
push
hlt
pop
inc
add
xchg
adcl
adc
mov
sub
sbb
lret
cmp
ljmp
push
ja
nop
add
insl
stos
int
and
pop
jl
hlt
aas
adc
inc
cmc
ja
testl
jnp
andl
outsb
sub
or
add
popa
mov
int3
arpl
loope
lea
aam
push
fs
xchg
mov
data16
jno
mov
mov
dec
xchg
stos
sar
mov
xchg
sub
shrb
cmpsb
cmpsb
ret
push
loop
inc
and
adc
mov
mov
ss
movsl
test
cs
sbb
push
shr
hlt
or
insb
push
sar
lds
xor
testb
popa
adc
popa
sbb
push
add
mov
mov
es
mov
test
arpl
jle
jno
lock
xchg
jmp
leave
loop
and
jnp
mov
push
sub
cmp
dec
divb
popf
bound
dec
mov
inc
scas
lret
mov
scas
stc
js
fisttps
jl
jmp
lods
mov
iret
xor
mov
mov
sbb
fistpll
adcb
jmp
or
bound
outsl
and
movsb
nop
inc
int3
outsl
jne
pop
subb
outsb
mov
mov
and
push
add
sbb
hlt
inc
xchg
shrb
mov
scas
pop
inc
imul
aad
xchg
popf
into
sahf
mov
in
and
movsl
xor
loope
push
cmp
sub
int3
mov
mov
dec
cmp
in
inc
daa
pop
mov
ret
dec
das
out
movb
and
add
mov
mov
mov
dec
jb
movsb
mov
add
add
adc
cmpsl
scas
mov
pop
push
xor
jno
mov
mov
jmp
out
mov
push
icebp
or
das
fistps
ret
iret
aaa
dec
adc
scas
rcrl
and
mov
add
call
xchg
dec
inc
lds
xor
pop
mov
stc
adc
push
add
je
and
mov
mov
ret
push
cmpb
xor
push
loop
push
idiv
movsl
lret
push
pop
in
jecxz
push
lahf
inc
aas
test
mov
inc
lss
mov
jg
fsubrp
xor
daa
jae
or
lret
xor
lret
lods
jge
add
shll
addr16
jae
and
fwait
inc
dec
dec
jae
lock
out
jp
pop
icebp
or
cmp
inc
add
popf
push
cmp
int3
repnz
test
mov
hlt
dec
adc
lock
xorl
sub
cmpsb
call
jno
imul
mov
ja
xchg
adc
cwtl
flds
ret
dec
lcall
pusha
popa
xchg
push
divb
mov
lahf
scas
rcrl
jno
inc
mov
idivb
xchg
dec
mov
lock
mov
xchg
sub
into
iret
dec
arpl
pop
or
imul
mov
sbb
cli
fdivrl
mov
and
test
inc
pop
std
mov
leave
shrl
jb
call
cmp
rolb
pop
addr16
mov
js
pop
xchg
push
scas
sub
in
dec
inc
int3
in
in
loope
sbb
xchg
es
ljmp
cmp
data16
fildll
push
outsl
cmp
fdivrl
movsl
sbb
pop
nop
add
push
push
fimull
or
mov
rcrl
subb
in
lahf
push
loopne
sub
jg
mov
dec
push
xchg
pop
fdivl
int
addr16
clc
inc
xlat
fisubrs
inc
lea
push
or
jne
int
test
adc
push
xchg
mov
iret
lahf
jno
jmp
nop
cli
adc
loopne
fcmovnu
mov
inc
shll
aad
dec
sub
js
xchg
std
sbb
sub
sub
bnd
inc
mov
inc
lret
fcompl
xchg
insl
lahf
xchg
orl
mov
sbb
into
add
dec
and
daa
fildl
notl
arpl
mov
xor
adc
lock
lcall
out
scas
lret
int
je
xchg
and
rcl
loope
pop
inc
je
push
adc
mov
xor
lods
push
xor
add
int
lds
pop
mov
in
add
pusha
pusha
and
cmpsl
jle
add
mov
mov
mov
sbb
push
movsb
icebp
pop
push
inc
adc
inc
sbb
or
out
xchg
in
push
loop
nop
mov
xchg
fcoml
aas
mov
lods
mov
mov
daa
jmp
fisttpl
inc
les
adc
push
mov
ss
lcall
pop
mov
mov
mov
sub
push
out
sbb
cli
push
mov
and
insl
mov
test
xchg
addr16
mov
inc
mov
fwait
loopne
setns
pop
js
sti
mov
adc
adc
ss
sub
aaa
and
push
cmp
jmp
lock
stos
fidivrl
jae
mov
loop
and
cs
daa
in
adc
pop
and
shll
push
enter
fistl
adc
jp
clc
ret
cwtl
flds
shlb
fidivl
test
pop
daa
pop
mov
pop
push
test
xchg
loop
jmp
add
sub
pop
xor
xor
insl
mov
leave
test
mov
dec
push
test
ds
andl
inc
imul
in
push
mov
dec
mov
bound
sbb
push
inc
add
imul
mov
popf
or
pop
ret
jge
xchg
pushl
and
mov
push
ficomps
int
out
add
and
pop
sbb
inc
rorl
pop
dec
inc
in
jne
inc
inc
gs
xchg
cmc
push
enter
rclb
cmc
pop
es
outsb
es
jmp
fdivs
test
outsl
clc
sub
lods
xchg
xlat
repz
fwait
out
mov
leave
fldl
in
loope
mov
add
xchg
push
ret
test
add
and
sub
adc
pop
stos
shrl
dec
push
cmc
adc
rorl
adc
pushf
add
lahf
inc
enter
mov
sarb
outsl
cwtl
rol
xchg
adc
fistps
push
aas
mov
inc
pop
movsl
push
int3
mov
andl
lods
push
cwtl
push
sahf
cltd
fmulp
sahf
outsb
and
mov
orb
dec
std
sbb
iret
cli
in
jo
pushf
loope
and
shl
lcall
movsl
test
cli
mov
pop
stos
out
cmp
mov
lea
push
add
and
sbb
clc
adc
sbb
stos
add
cwtl
std
mov
scas
mov
mov
cmp
xchg
xchg
xchg
xor
aas
add
jne
in
add
sbb
mov
popa
cmp
xor
mov
cwtl
test
mov
lcall
add
dec
aaa
xor
adcl
jl
loope
push
cmp
sti
jne
add
out
or
cmp
test
sbb
push
adc
loop
ror
stos
loopne
lret
push
add
jno
rcrb
repnz
or
mov
push
push
sarl
push
int
popa
in
jle
dec
sbb
and
jg
fwait
mov
in
int
add
lret
fwait
popa
rcrl
mov
sbb
arpl
pusha
or
add
cmpsb
negb
fisttpl
sbb
popa
adcl
shlb
jp
in
cld
or
ss
jl
movsb
mov
mov
pop
rcr
mov
mov
stc
testl
pop
mov
test
arpl
cmp
rep
push
and
pop
xor
aaa
mov
sbb
ljmp
pushf
sub
dec
push
clc
cmc
dec
pop
cmpsl
ljmp
add
fstpl
pop
cmc
sub
inc
sbb
pop
lcall
jl
jae
outsl
xor
sub
sbb
pop
jb
sub
mov
cmpsb
stos
inc
add
add
mov
mov
jb
cld
or
pop
add
jno
ret
cmp
pop
mov
xor
dec
les
dec
cwtl
sbb
dec
pop
fidivs
and
pop
pop
cwtl
dec
jg
inc
or
call
adc
pop
lcall
dec
in
into
lds
xor
in
xor
sbb
xchg
shlb
sub
call
or
imul
adc
pop
mov
xchg
push
insl
push
pop
idivl
push
mov
mov
mov
cli
iret
frndint
in
jb
clc
cltd
or
lcall
and
faddp
ret
repnz
sub
ljmp
data16
test
into
push
scas
xor
sbb
test
test
xchg
xlat
je
xor
hlt
xlat
cmp
mov
popf
adc
mov
and
dec
jmp
sbb
dec
cmp
fadd
cld
ss
xchg
std
daa
ja
loope
inc
mov
mov
aaa
and
jp
adc
out
in
sbbb
xchg
inc
sub
dec
int
sti
rcll
and
inc
sbb
dec
mov
icebp
jp
aad
and
jg
pop
or
loop
scas
loopne
cmpsl
xchg
leave
and
sbb
jb
sub
xorb
sbb
movsl
sbb
sahf
mov
cmp
aam
push
xchg
inc
push
pop
test
or
jge
sub
pop
fcmovnbe
lret
aad
sbb
daa
pop
or
outsb
testl
orl
and
lret
push
push
push
movsl
leave
or
pop
into
cmp
inc
stos
out
pop
ss
je
scas
adc
inc
or
dec
add
out
fdivp
sar
insb
inc
or
rcl
cmp
jnp
fbld
lret
rorl
dec
inc
insb
inc
arpl
push
inc
lea
push
int3
test
stos
fsts
mov
jmp
mov
pop
mov
cmp
jae
call
xchg
adc
jl
icebp
pop
inc
das
cmp
cmp
insl
test
popf
cmp
loope
in
jp
sub
xor
fmull
inc
or
sbb
fadd
jg
sbb
scas
repnz
sub
in
mov
sub
mov
jge
push
jmp
jae
sti
mov
clc
lock
fs
into
icebp
inc
lock
insl
adc
xor
mov
mov
das
pop
rclb
movsb
push
sahf
sti
js
adc
cmp
cld
gs
jae
arpl
sub
sub
xchg
mov
ds
adc
int
jmp
push
cmp
out
jne
add
orb
mov
inc
ret
loopne
xchg
dec
fnsetpm(287
cs
xchg
int3
enter
adcl
fs
jecxz
pushf
add
mov
mov
pop
jbe
push
cmp
bound
pop
stos
mov
cs
popa
dec
and
jle
rcll
and
inc
cmp
push
rcrb
inc
jp
jecxz
add
enter
inc
idivb
pop
mov
mov
adc
push
in
mov
into
push
and
sti
adc
arpl
sub
xchg
iret
sub
jnp
sbb
in
or
call
lods
inc
sub
mov
cmp
sub
push
xchg
inc
ja
sbb
jl
mov
inc
fs
jae
movsl
xchg
dec
aad
negl
adcl
cmp
lds
mov
pusha
fs
sub
sti
jecxz
lock
les
xor
mov
scas
cmp
faddl
fldenv
inc
jmp
sbb
cld
push
lret
push
dec
dec
mov
cmpsl
mov
cli
sbb
movsb
fcmovnb
pushf
xor
sub
xlat
arpl
sub
lock
mov
popf
xor
test
add
mov
lea
adcl
push
inc
mov
and
adc
fcoms
cmp
lret
mov
pop
in
js
pop
outsl
inc
mov
add
push
stc
in
out
or
enter
pop
in
gs
repz
roll
jle
pop
hlt
dec
and
mov
aaa
clc
xchg
pop
inc
mov
and
inc
aam
adc
sub
sub
mov
stc
sbb
dec
mov
push
addr16
add
ret
out
or
lahf
push
int3
test
cmp
dec
insb
inc
jae
push
adc
imul
lea
sub
ds
enter
jae
add
mov
divl
jp
push
pop
sbb
or
xor
xor
xlat
mov
jns
rclb
mov
push
pop
in
notl
enter
mov
push
fwait
mov
lds
xor
add
xchg
dec
adc
sub
insb
fisubl
divl
outsl
or
call
xor
cmp
adc
inc
mov
inc
ret
jmp
clc
mov
dec
sahf
sahf
adc
fbld
stos
xchg
jge
pop
cmc
mov
xchg
test
mov
xor
push
popf
rorl
js
pushf
ficoms
out
mov
dec
mov
int
mov
xchg
mov
pop
mov
push
mov
insb
adc
das
push
stos
aaa
mov
sbb
andb
push
xor
adc
mov
ret
cmpsl
mov
div
push
repnz
fs
gs
test
jp,pn
cmp
xor
movsb
pop
lret
js
jo
repz
xor
movsb
jmp
adc
sbb
push
pop
shlb
pop
sbb
cmp
pop
xor
dec
imul
lea
inc
or
sbb
sti
mov
neg
jae
enter
mov
dec
repnz
imul
xchg
inc
pop
jle
fistpll
lret
mov
mov
xchg
push
xorb
jns
aam
shrb
push
pop
rcll
testb
sub
mov
fdivl
rclb
cmp
hlt
or
jne
or
mov
mov
pop
imul
loopne
push
mov
ljmp
sub
or
sbbl
adc
je
cwtl
cmp
jo
int3
jb
icebp
popf
andl
rcl
push
outsl
sti
mov
or
imul
ficompl
jg
push
add
jnp
iret
adc
jle
inc
fildll
outsl
sbb
jl
or
inc
xor
xor
xor
pop
decb
xlat
lcall
stos
jecxz
orl
xor
das
imul
add
xor
jmp
push
sub
jnp
inc
or
icebp
and
cli
aaa
dec
pusha
sti
jge
stos
sub
mov
scas
sbb
pushl
or
inc
mov
add
add
pop
inc
sbb
jnp
lret
nop
jmp
movb
imul
movsb
addb
dec
ss
stos
push
mov
dec
mov
and
push
sub
cmp
insb
repz
fldt
in
push
test
push
mov
mov
and
sahf
pop
mov
jns
xchg
and
mov
cld
xchg
add
cwtl
popa
icebp
dec
cmp
cmpl
sub
add
addr16
int3
adc
adc
jge
push
pop
and
mov
or
push
mov
inc
in
pop
cli
or
icebp
repz
dec
and
pop
jmp
jge
imul
cmp
pop
and
xchg
jp
push
pushf
in
inc
add
dec
lds
cltd
or
mov
add
cltd
and
negb
jb
dec
add
pop
xchg
push
pop
cs
cld
or
push
test
mov
jae
sub
mov
cmp
pusha
xchg
xchg
push
mov
mov
xor
cmp
out
sub
mov
mov
dec
sub
mov
loopne
and
stc
call
and
jle
mov
sbb
ja
das
sbb
inc
mov
cli
xor
jmp
addr16
inc
or
mov
clc
orl
pop
arpl
insb
rep
inc
and
cwtl
lock
mov
sub
fbstp
pop
pop
jnp
stos
sbb
pop
add
js
mov
pop
cmp
popf
cld
jmp
stos
scas
popf
sub
pop
inc
or
or
aas
sbb
fwait
inc
loopne
add
pop
sti
stc
insl
add
cmp
pop
int3
dec
dec
sub
orb
xor
lret
imul
mov
cmpsl
cltd
mov
mov
push
popf
cmp
lcall
lea
add
rcrl
rol
jl
mov
push
in
mov
icebp
mov
push
push
fsubs
inc
out
jmp
xor
cmpsb
rcll
jae
aaa
inc
mov
cmpsb
cmp
inc
pushf
shrl
adc
lret
and
add
jge
push
roll
rorb
dec
lahf
push
sub
outsl
jmp
xchg
mov
adc
shlb
pop
pop
mov
pop
arpl
out
push
int
cmpsl
xchg
rcrl
arpl
jae
aaa
xor
call
mov
dec
icebp
mov
ja
fsubrl
pop
rclb
les
xchg
jae
inc
andl
pop
sub
enter
es
jbe
pop
cwtl
jns
daa
add
fsubrl
out
lret
sub
add
fadd
or
rol
xchg
sub
mov
xchg
inc
ja
dec
inc
mov
stos
sub
loope
xorl
adc
mov
pop
movsb
inc
mov
xor
shr
mov
sbb
mov
push
call
jle
mov
jmp
filds
or
shrl
push
jg
sti
jl
adc
movsb
pusha
sbb
lahf
aaa
inc
jns
cltd
mov
shll
mov
rclb
daa
ja
fcmovbe
xor
imul
mov
in
mov
lea
cli
jecxz
xor
push
stos
mov
sub
sbb
jnp
dec
mov
movsl
push
int
xchg
xor
cmc
adc
testl
repz
movsb
push
sub
and
jbe
in
xlat
subb
popf
sub
int3
movsl
imul
ds
imul
cmp
fwait
xchg
fnstcw
test
in
cltd
enter
ss
sub
sbb
push
and
lret
mov
or
lret
xchg
shrb
push
jg
mov
shrl
cmp
inc
data16
adc
fisubl
jnp
mov
push
fldl
int
insb
lods
jge
lods
gs
mov
xchg
cwtl
dec
out
testl
test
push
mov
inc
pop
and
push
jmp
movzbl
notl
fwait
int
out
into
jmp
xchg
repz
mov
sub
dec
popl
and
inc
cmc
dec
jmp
cmp
pop
sbb
xor
ss
cmp
clc
jg
hlt
cld
push
and
fldenv
inc
xor
push
pop
sti
ret
jb
push
and
lahf
pop
cltd
stc
mov
enter
push
ja
sbb
pushf
add
xor
pop
adc
and
or
push
or
std
mov
or
add
lock
call
inc
sub
daa
or
xlat
clc
aaa
pushf
pop
push
pop
lea
dec
push
xor
cmp
jle
js
jo
or
xor
mov
out
scas
jl
mov
sbb
es
pop
or
jo
scas
lods
inc
or
mov
aam
notb
dec
sbb
adc
pusha
call
lods
ljmp
repz
call
xchg
add
test
shl
in
andl
cmp
ja
shll
data16
scas
popf
lock
fs
mov
stos
jle
mov
aam
bound
dec
ficoml
adc
popf
fbstp
fsubl
and
or
ror
push
xlat
fcomip
scas
shll
push
mov
aaa
pop
mov
fsubs
bound
jo
out
jne
inc
inc
pop
or
movsb
dec
sub
mov
add
es
dec
mov
push
pop
push
push
jnp
push
in
cmp
mov
ret
lcall
call
and
shlb
popf
aas
enter
pop
push
cmc
inc
icebp
mov
scas
inc
inc
xchg
lahf
subb
or
fadds
xor
inc
jo
jne
mov
aaa
mov
jbe
icebp
add
mov
cmpsb
sub
mov
pop
xchg
lods
repz
jns
mov
call
ja
in
bound
fbld
out
push
cltd
push
inc
cmpw
jl
imul
mov
sub
loop
stos
sar
cwtl
cmp
jge
sub
xchg
movsb
insl
pop
sarb
push
mov
cld
sbb
sbb
rorb
adc
insl
je
and
jmp
loop
aaa
scas
or
jb
icebp
js
or
sbbl
movsl
fcmovnb
dec
movsl
or
aam
clc
shlb
repz
xor
lods
movsl
mov
dec
jns
cmpsb
scas
call
sub
sbb
std
and
pop
push
out
outsl
and
mov
jo
loopne
push
dec
pop
test
sahf
push
lahf
jmp
shll
xor
mov
sub
xchg
add
add
mov
sub
jnp
imul
and
inc
xchg
sbb
int
add
add
imul
sbb
jb
cli
scas
mov
mov
lea
aas
mov
inc
cmp
jp
lcall
pop
in
and
adc
add
cmp
cmp
jmp
or
test
stc
int3
cmpsl
pop
jp
dec
pop
int3
mov
icebp
mov
sbb
inc
push
mov
mov
cwtl
adc
pop
rclb
inc
out
stos
out
hlt
out
stos
push
fadd
sbb
sbb
hlt
leave
jle
outsb
hlt
imul
fcmovbe
aad
mov
das
mov
or
adc
arpl
aam
fdivs
dec
clc
in
es
lahf
and
sbb
xor
aas
inc
fldl
cltd
sub
adc
daa
repz
mov
divb
xchg
inc
clc
insl
pop
in
movsl
divb
mov
fdivr
or
add
or
stos
icebp
mov
scas
and
out
jmp
dec
xchg
movsb
out
push
inc
or
inc
sar
adc
cmp
imul
push
sbb
pop
aad
mov
sbb
mov
popf
dec
out
je
push
insb
inc
cmp
cmpsb
xchg
mov
adc
xchg
or
iret
pop
ljmp
mov
cwtl
popf
adc
push
in
pop
lret
push
pop
sub
sub
out
insl
or
fisubrl
ja
addr16
fmull
pop
rorl
in
shrb
sbb
dec
xor
or
sbb
inc
fwait
outsl
ret
ja
popa
mov
adc
inc
negb
and
insb
xorb
sbb
ljmp
out
repnz
xlat
roll
ja
inc
or
and
clc
xchg
xchg
pop
inc
ror
std
negb
push
jae
add
pop
cs
push
sub
out
rol
imull
cmp
into
fisubrs
dec
mov
ret
data16
mov
xor
mov
inc
mov
mov
sub
cmc
seto
out
js
pop
lcall
adc
das
cmp
hlt
packssdw
je
xchg
bound
pop
mov
loope,pt
mov
data16
mov
cwtl
mov
mov
inc
fsubs
das
ds
les
rorb
mov
cmp
push
repnz
fisttpll
mov
and
iret
daa
and
pop
call
insl
and
not
mov
insb
inc
jnp
repz
aam
popa
imul
add
fcomi
cltd
sub
mov
repz
hlt
mov
cmpsl
mov
shll
in
test
jo
lods
mov
cmp
and
mov
mov
movsl
mov
mov
or
stos
mov
clc
xchg
stc
das
pop
mov
adc
cmc
fnsave
pushl
mov
dec
mov
inc
and
xor
add
loop
sub
mov
mov
mov
mov
mov
daa
cmp
imul
out
and
pop
rcll
ror
add
push
mov
dec
xor
out
adc
dec
sbb
fists
out
xorl
pop
jle
iret
lds
adc
mov
testb
adc
mov
pop
adc
mov
push
or
out
out
mov
adc
iret
mov
mov
mov
out
arpl
add
loope
sub
dec
mov
sbb
ss
or
lods
mov
cmp
mov
xchg
imul
push
aad
gs
mov
dec
ja
add
pop
in
inc
sub
insl
iret
mov
add
js
dec
adc
in
push
mov
adc
out
fdivrs
sub
fisubrs
or
adc
ret
pop
sahf
ljmp
outsl
ds
sbb
adc
mov
out
das
inc
add
loope
xor
aas
pop
mov
sbb
xchg
cmp
sbb
mov
xchg
pop
gs
sbb
hlt
lahf
pushf
cli
sarl
jge
dec
mov
fxam
sub
pop
movsb
jge
loop
jo
mov
add
or
dec
out
ja
jecxz
sub
pop
fucomp
sbb
movsl
in
xchg
in
stos
paddb
mov
out
loop
shll
mov
out
test
arpl
fxch
movsb
push
jg
mov
ja
ss
cmp
daa
mov
jae
lcall
repnz
aas
and
push
je
add
ja
cmpsl
enter
icebp
xchg
cld
fistl
out
jbe
fisttpll
mov
ret
pop
insb
in
or
jmp
pushf
clc
ss
cmpsl
fwait
push
dec
mov
add
cld
mov
or
pop
jno
dec
fxch
cwtl
cmpsb
inc
add
cmpsl
and
into
sub
mov
fdivrp
sub
sti
dec
mov
mov
add
sbb
mov
ds
sti
mov
fucompp
cmp
arpl
mov
push
scas
cli
mov
mov
inc
push
in
mov
inc
dec
push
add
or
std
aad
jne
sbb
jnp
mov
xchg
or
or
xor
psrlq
mov
mov
pop
int3
ret
lods
in
call
jge
mov
pop
mov
push
push
bound
repz
popa
popw
ret
aad
cmp
push
icebp
pusha
iret
or
pop
sarb
jl
jae
xor
mov
jne
mov
jbe
decl
lret
xlat
dec
xor
jo
cmp
int
inc
inc
dec
addb
rcrl
or
mov
and
scas
daa
push
sti
rorb
mov
xor
or
mov
test
test
pop
ja
add
dec
xchg
jp
jl
xchg
mov
pop
push
pop
cli
shrl
js
sbbb
sub
arpl
fucomip
sarb
das
nop
aaa
fcompl
cmp
or
xor
rolb
aas
shll
std
mov
insl
xchg
insl
mov
jg
mov
scas
mov
jmp
stc
lret
push
sub
push
inc
pushf
xor
jbe
xchg
repnz
or
add
mov
adc
loope
cmpsb
cltd
mov
dec
mov
mov
xlat
icebp
leave
hlt
inc
or
dec
cmp
cmpsb
mov
adc
jp
cmp
in
sbb
dec
test
xchg
adc
clc
mov
je
mov
xor
mov
push
lahf
push
neg
adc
je
rcll
inc
or
in
sub
add
add
in
jp
jp
jnp
adc
aaa
fisttps
add
imul
testb
mov
imul
mov
scas
sbb
andb
loop
les
ss
std
pop
jmp
jle
lret
mov
daa
mov
push
ljmp
popf
stos
dec
adc
mov
test
inc
cltd
or
jmp
loopne
sbb
outsl
mov
movsb
cmp
mov
and
outsl
lods
jle
stos
push
jo
add
push
ja
mov
push
cli
sbb
jns
aas
shrb
inc
movsb
int
subl
mov
roll
and
enter
mov
aad
repnz
daa
psubw
jae
inc
cmp
adc
sub
mov
aas
add
jae
lcall
push
lds
lds
pushf
xor
mov
shl
mov
imul
into
aas
and
in
inc
push
add
imul
xor
das
mov
fs
imul
dec
or
xchg
mov
scas
push
jmp
xor
out
sub
inc
sub
fwait
pop
pop
sub
cltd
lret
lret
sub
mov
push
ret
pop
test
sar
hlt
add
aad
jne
in
mov
inc
jbe
out
aad
push
aaa
fs
jmp
jae
xor
xchg
iret
xchg
iret
lret
hlt
shl
imul
push
xchg
jge
das
fsubr
xor
or
mov
adc
lret
js
stc
adc
jae
mov
pop
jl
ja
lods
push
jmp
xor
lods
mov
cmpsl
loop
sbb
pop
stos
xor
das
into
pop
fsubs
mov
arpl
or
xchg
in
push
das
out
fcomip
lret
jp
sub
stc
shld
jl
fdivs
dec
adcl
mov
xlat
mov
add
insb
dec
pop
adc
cmp
pop
pop
jmp
jmp
and
rcrl
inc
orb
in
jae
jnp
sbb
push
cli
adc
pop
and
and
jae
sahf
push
lods
and
in
add
into
cmp
xor
xchg
outsb
sahf
jl
mov
shl
aas
mov
cmc
mov
sub
push
pop
mov
cli
test
add
xchg
cmp
loop
xchg
mov
std
inc
and
and
movsb
into
add
mov
cmp
push
pop
and
sbb
sbb
add
aad
and
ret
xorl
jl
sub
mov
std
cmpsb
cmpsb
mov
mov
aad
push
jnp
xor
movsl
into
sbb
xchg
rclb
push
ss
and
mov
mov
inc
fcomps
cmp
mov
sbb
jo
sti
mov
jne
ret
pusha
and
movsb
mov
les
xor
push
jo
xchg
mov
push
inc
lret
lock
loopne
xchg
aad
push
in
mov
add
adc
testb
push
cmp
inc
das
dec
mov
and
push
add
sub
fcompl
cmpsl
xor
or
mov
dec
lret
add
push
imul
push
lcall
xchg
jecxz
cmp
push
xchg
ljmp
test
jl
in
sub
cmpsb
mov
add
shl
mov
add
mov
sub
fwait
push
push
sub
sub
loope
dec
sbb
dec
add
adc
xchg
stc
xorb
pop
lea
addb
xchg
sbb
out
xchg
cmp
sarl
popa
pop
push
pop
je
dec
cmp
clc
stos
mov
xor
push
add
ret
nop
aad
dec
outsb
iret
scas
insl
adc
mov
mov
fs
call
pop
scas
cmp
fldpi
cs
mul
ret
mov
mov
sbbl
cmp
outsl
loope
lret
xchg
jns
sbb
test
loopne
jp
dec
and
dec
idivb
sbb
pop
icebp
and
push
popa
fiadds
out
ja
sahf
adc
cld
mov
add
cld
popa
pop
mov
les
addr16
enter
mov
inc
mov
xor
xor
jnp
jmp
xlat
xchg
sub
inc
in
bound
stos
mov
dec
test
sarb
pop
and
cmpl
outsb
cmp
flds
int
sahf
fsubrp
lods
mov
sti
mov
decl
xor
loopne
out
int
imul
dec
pop
cmp
cmc
hlt
mov
push
sbb
shl
cmpsl
adcb
scas
andb
xchg
inc
adc
gs
lret
mov
sub
out
push
sbb
lahf
loopne
in
sub
lahf
pop
push
adc
jecxz
adc
add
add
add
ret
jns
inc
sub
dec
mov
mov
pop
mov
jecxz
call
xchg
mov
or
mov
ja
int3
inc
adcl
aam
sbb
movsb
adc
and
inc
insl
repnz
dec
sarb
sbb
xchg
je
inc
lcall
push
fbld
ror
in
loop
xor
push
test
and
int
dec
dec
clc
cmpsl
add
xor
xchg
adc
xchg
arpl
or
pop
pusha
xchg
loopne
js
cwtl
repnz
xor
xlat
popa
in
jne
add
pushl
shll
daa
jle
es
in
dec
addr16
movsl
pop
imull
rcll
popf
aam
icebp
xchg
popa
xchg
mov
cmpsb
xor
and
lahf
pop
movsb
push
mov
enter
push
movsl
loop
mov
notb
dec
inc
add
push
ret
push
cmp
pop
outsl
mov
fsubrl
mov
test
mov
dec
sbb
enter
loope
inc
cmc
es
push
movsb
rcrl
stos
test
outsb
xor
shll
dec
mov
mov
movsl
ds
mov
sarb
icebp
jne
ljmp
arpl
pop
inc
jge
mov
pop
mov
ja
notl
mov
repnz
icebp
cmp
in
cmc
ljmp
adc
mov
icebp
lret
xlat
jb
das
adc
cmpsb
jecxz
popa
pop
popf
sbb
cmp
sbb
push
fidivs
sub
out
and
adc
out
xor
aad
push
inc
mov
dec
mov
pop
mov
lods
push
adc
cltd
stos
imul
xorb
pushf
out
in
in
aad
lock
cmp
xchg
sbbl
aam
adc
in
lods
addr16
jne
imull
mov
div
jmp
mov
enter
orb
add
lcall
mov
sar
mov
add
imul
add
pop
sub
outsl
cwtl
push
imul
mov
aad
int
andl
add
xsha1
cmpsb
push
pop
fmuls
jno
rsqrtps
dec
and
mov
push
lea
movsl
test
addr16
cmp
adc
jne
sub
movsl
cmc
mov
faddl
mov
sahf
loope
sbb
pop
call
dec
xor
and
ret
mov
test
sub
or
iret
ficoml
mov
push
dec
fcomip
xchg
xchg
mov
inc
mov
or
data16
lods
push
cmp
mov
rol
and
mov
push
sub
test
push
sbb
fwait
and
lods
mov
inc
mov
out
or
std
ss
fdivrl
ret
aam
pop
mov
inc
fs
push
int
push
fstl
mov
fsubl
jecxz
in
jnp
xlat
xor
sbb
js
xor
adc
push
mov
and
jno
into
addl
out
add
data16
dec
repnz
lods
pop
dec
shll
idivl
int3
js
sets
sub
popa
and
aaa
xchg
rcll
cmp
mov
add
repz
movsl
iret
rol
out
mov
push
jbe
xchg
adc
popf
xor
test
pop
inc
sub
and
xlat
mov
lahf
aad
xchg
test
aaa
mov
xchg
cmc
aas
mov
insl
int3
pop
sub
jg
lcall
std
lods
add
sbb
gs
xchg
inc
adc
ja
lcall
testb
outsb
jne
push
int3
or
add
or
ss
inc
or
fdivr
adc
fwait
push
imul
sub
xor
cld
inc
pushf
bound
lods
jbe
or
aas
mov
push
jmp
mov
cmpsb
fidivrs
dec
mov
imul
and
divl
pop
cmp
lock
add
or
cmp
subl
mov
xor
xor
or
cmp
pop
mov
inc
mov
pop
mov
rol
or
mov
pop
sbb
popf
sahf
push
cmpsb
xor
loop
ss
bound
jo
pop
lock
xor
arpl
mov
insb
out
mov
sbb
inc
test
push
int
push
jb
cmp
dec
cli
lods
pop
rorl
ret
gs
dec
stos
xchg
xor
aas
mov
lods
popf
arpl
inc
cmc
pop
xor
sbb
rcl
cld
outsl
add
testb
jge
sti
sub
mov
xchg
cs
fldcw
push
lcall
pop
cmp
sbb
and
push
test
sbb
mov
popa
adc
imul
sub
mov
fmull
xlat
je
daa
pop
pop
dec
or
test
xor
xorl
mov
fbld
ljmp
sub
xchg
cs
adc
cs
call
or
es
pop
xor
jle
lahf
leave
adcb
sub
lcall
adc
adc
movsl
xchg
push
xchg
das
jg
inc
mov
aad
dec
add
push
or
xchg
shll
aaa
outsl
push
scas
cltd
les
iret
mov
out
ljmp
ljmp
xchg
push
mov
mov
or
fidivrl
adc
mov
cmp
sahf
inc
xchg
inc
xor
mov
pop
add
xlat
testb
mov
aam
repnz
pop
and
scas
jno
and
mov
or
loopne
cmp
cmp
add
dec
sub
push
push
rclb
sbb
pop
add
pop
cmp
push
frstor
mov
and
cli
loopne
dec
bound
add
daa
loope
sbb
subl
xchg
aaa
movsb
add
and
xor
cmpsb
fmul
insb
outsb
lret
inc
je
adc
icebp
push
movsb
and
test
test
lret
xor
push
insb
inc
push
in
xchg
sbb
add
mov
movsb
xchg
mov
pop
xor
mov
mov
lahf
push
fsub
lock
ljmp
mov
inc
jne
pop
add
mov
jbe
jmp
push
push
test
insl
mov
in
imul
sar
push
or
mov
xor
call
adc
inc
jno
mov
sarl
in
xor
pop
iret
xor
sbb
repnz
mov
popa
in
frstors
or
and
enter
pop
and
xor
jg
outsl
imulb
mov
xchg
sbb
add
cmp
xor
scas
jbe
nop
cmpsb
and
dec
inc
out
test
lock
xor
mov
add
xchg
xchg
test
jo
sub
fldt
test
mov
fdivrl
pop
jl
sub
jmp
jl
enter
ret
cmp
out
shll
jae
lret
mov
sbb
xchg
add
inc
mov
jmp
sbb
xor
mov
dec
int3
xor
mov
ret
dec
dec
std
xchg
jno
adc
arpl
mov
xchg
or
sti
inc
sbb
divl
xchg
sbb
xor
pop
in
lock
mov
mov
out
jo
stos
sub
js
inc
add
and
stos
xlat
and
in
std
mov
sarb
jle
ds
inc
emms
jb
das
mov
jae
dec
cltd
test
scas
sbb
dec
jge
mov
mov
stos
sti
pop
jb
xchg
xorl
ja
sarb
ffreep
sbb
push
cwtl
jae
mov
xchg
sub
mov
mov
test
es
outsb
mov
inc
fwait
out
es
mov
rorl
aaa
mov
adc
and
pop
bound
or
inc
pop
mov
jo
es
loope
in
dec
add
icebp
mov
dec
adc
or
mov
out
and
aad
dec
iret
loope
cs
fs
and
ljmp
or
adc
inc
bound
cmp
icebp
int3
in
fwait
outsl
sti
aaa
or
arpl
or
jecxz
xchg
data16
sbb
shlb
fxam
xchg
mov
sub
popf
mov
xor
leave
push
insb
loop
and
out
add
addr16
add
push
fs
xor
out
adc
xor
lods
arpl
popl
adcb
data16
and
xchg
movl
add
push
cli
divb
dec
hlt
xchg
sbb
add
imul
dec
mov
scas
jae
stos
out
xor
out
repz
xor
loopne
jns
pop
dec
jo
fsts
lods
sbb
mov
sbb
out
adc
int
pop
cmp
jno
cs
ljmp
xchg
call
mov
outsl
fwait
xchg
pop
mov
adc
ret
push
sub
add
mov
inc
push
sbbb
or
mov
xorb
add
xlat
mov
and
insb
mov
test
and
mov
ja
sub
add
mov
and
pop
icebp
mov
push
jnp
adc
gs
out
push
jle
sub
outsb
std
mov
jnp
add
stc
mov
ds
mov
push
adc
cmp
addr16
out
mov
jnp
enter
jle
lea
sti
pop
inc
cltd
add
dec
loopne
jp
pop
cld
ror
insb
xor
loop
or
test
add
cld
dec
out
xor
out
add
es
mov
mov
inc
push
daa
outsb
ljmp
lds
and
lock
fs
push
test
inc
rcrb
jnp
arpl
out
loope
mov
movsb
fwait
sarb
sbb
or
xor
cmp
push
ja
rcr
mov
sahf
out
cmpsb
mov
fadd
out
fdivrl
dec
mov
mov
mov
mov
mov
pop
mov
xchg
inc
cmp
jl
inc
mov
or
addb
pop
iret
push
mov
adcl
mov
fildll
mov
fmuls
cmc
pop
cmc
or
or
push
mov
dec
mov
int3
pop
std
lret
adc
into
enter
or
xchg
ljmp
push
mov
dec
icebp
cmp
lea
sbb
pop
adc
pusha
jb
cmp
std
add
push
fdivrs
or
js
mov
test
sbbl
mov
jmp
jae
ficompl
lret
mov
leave
xor
mov
dec
loope
leave
out
fwait
jle
out
jb
pop
orl
mov
icebp
adc
push
cmp
adc
movl
add
sub
sub
jge
in
sub
lock
add
fs
cmp
js
cmp
dec
mov
dec
xchg
add
dec
cmpb
mov
jp
out
loope
pop
movsb
cmpsb
scas
loopne
mov
or
shll
bnd
ret
or
adc
dec
sbb
add
stos
jg
outsl
js
jo
lea
out
and
rolb
enter
fcoml
fstpl
sub
pop
xor
pushl
ret
test
shlb
sub
int
xchg
aam
xor
fnstcw
in
push
in
pop
adc
pop
adc
outsb
xor
sarb
and
pop
sub
mov
into
das
push
lea
inc
mov
pushf
sbb
aad
adc
ljmp
popa
stos
loopne
cmp
ja
inc
out
faddl
js
sbb
dec
mov
popa
mov
mov
cmp
jbe
sub
sub
enter
mov
pop
xor
inc
lret
arpl
shll
rorl
xor
jbe
outsl
xchg
and
test
push
sahf
retw
adc
scas
cs
sub
pop
jno
and
inc
outsb
lods
mov
or
mov
adc
adcb
jno
in
rcrl
cmp
jmp
ljmp
clc
mov
mov
pop
mov
sub
mov
xor
imul
stc
les
pushf
js
inc
push
xchg
bound
push
sub
inc
or
mov
inc
int3
pop
mov
jne
pop
movsl
fsts
int3
rorb
ret
aaa
iret
lods
xor
jp
loop
cmc
cmp
subl
repnz
dec
mov
cwtl
xlat
arpl
insl
cmp
mov
clc
push
push
sahf
rorb
iret
sub
shll
jmp
dec
inc
ds
repnz
pop
lea
repz
dec
push
nop
notb
ljmp
lods
mov
not
sbb
test
fcmovnb
mov
xor
xor
ud1
nop
in
push
popf
icebp
push
and
popf
sub
aad
push
je
aaa
mov
mov
fmuls
inc
jmp
push
pop
lret
sbb
xchg
jb
out
lds
data16
mov
cmp
mov
dec
push
push
jp
add
pop
in
sub
jl
sub
inc
shrb
bound
loopne
and
cmpsb
pusha
adc
jle
sbb
push
adc
xchg
pop
mov
lahf
aas
sub
jecxz
or
iret
out
sub
or
cltd
cmc
cmp
mov
out
and
jnp
add
jl
lcall
mov
clc
pop
test
sub
int3
sbb
xchg
push
daa
popa
push
and
push
sbb
add
sahf
sub
xchg
nop
out
test
adc
sbb
pop
sub
or
hlt
mov
iret
insl
rorb
ret
push
dec
mov
jns
fldcw
ss
or
sbb
je
mov
and
push
mov
mov
push
fnstsw
cmp
std
shrl
mov
ljmp
mov
in
xchg
adc
shl
shrb
lea
lods
dec
mov
mov
shlb
les
lock
mov
gs
mov
nop
dec
pop
mov
out
cs
insl
push
mov
jae
jg
mov
in
iret
cltd
push
sub
cs
xor
push
add
xlat
mov
dec
lods
fidivrl
cld
sbb
sub
out
subl
daa
popf
jl
mov
xchg
pop
adc
arpl
cmp
test
mov
test
push
jae
hlt
or
outsb
lods
testb
mov
ret
stos
mov
cmp
pop
and
mov
sbb
push
fs
frstor
sbb
jle
rclb
xchg
popa
stc
repnz
xor
push
add
mov
mov
xchg
and
jmp
inc
sub
rclb
into
xlat
outsb
cwtl
iret
fistpl
pop
dec
hlt
mov
dec
stos
mov
pop
pop
pop
out
pushf
adc
in
sti
xor
jns
jae
pop
fsubp
sbb
fisubrl
add
ss
or
pop
in
testl
ret
pop
sub
add
add
fdivrp
imul
add
test
outsb
dec
iret
cmpsb
pop
lods
xchg
cwtl
xor
pop
bound
mov
sbbl
imul
mov
mov
std
daa
pop
jle
imul
mov
lret
fincstp
sub
es
jecxz
jae
or
les
mov
mov
push
push
dec
jp
mov
push
and
xor
pop
add
sbb
stos
pop
jle
jp
into
push
mov
lds
mov
popf
ds
ljmp
xor
and
inc
popa
xor
mov
add
into
jbe
or
mov
add
int3
inc
xor
in
in
sub
pop
mov
mov
pop
lock
cmp
mov
adc
in
xor
adc
dec
daa
into
add
sub
pusha
rcrb
mov
push
add
lret
sbb
and
lds
sub
xchg
hlt
mov
xchg
lret
pop
mov
incb
pusha
add
xchg
mov
popf
loopne,pn
jnp
add
shlb
or
pop
in
push
shlb
xchg
std
push
mov
xchg
data16
pop
shl
aas
or
xor
pop
int
incb
or
sarb
mov
orl
sub
ja
fsubp
clc
cmp
int
cmc
mov
fdivrs
xchg
inc
addb
mov
iret
insb
inc
sbb
out
mov
mov
dec
adc
shrb
add
inc
sbb
imull
push
adc
lea
jnp
imul
ret
ja
adc
and
adc
jg
stos
repnz
mov
stos
jg
aam
cld
cmc
imul
mov
adc
incl
push
push
fidivs
sub
fnstsw
int
out
shlb
test
fneni(8087
jge
clc
lret
ret
mov
xor
in
mov
outsl
test
subl
fsubrs
rcrb
inc
mov
mov
cmp
aaa
ss
les
lock
ret
lods
xchg
int
out
int
inc
movsb
cmc
jae
stos
mov
shll
subl
jp
xor
cmc
xchg
and
pop
aas
push
dec
cmp
lods
inc
cli
cs
mov
cmpb
sub
scas
aam
add
inc
or
jge
je
adc
adcb
out
js
lods
imul
xor
or
lods
movsb
cmp
jge
xchg
fiaddl
mov
and
ja
adc
jne
stos
push
fdivrs
cltd
push
sbb
mov
mov
push
sub
pop
sbb
jmp
popf
or
aaa
lock
scas
test
repnz
dec
mov
jp
fstpl
xlat
adc
push
dec
jo
fisubrs
pop
icebp
cmp
addr16
mov
lahf
outsb
pop
jmp
cli
aad
xor
push
call
mov
cmp
rclb
or
test
mov
push
leave
ljmp
and
ljmp
dec
fsubs
mov
loope
sbb
xor
mov
mov
jmp
arpl
mov
or
push
sbb
enter
jmp
aam
push
std
ds
sub
lock
and
in
lret
mov
pop
add
aaa
mov
xchg
cmp
mov
stos
push
repz
inc
fmull
stc
int3
add
cmp
sub
loop
das
jl
sbb
jmp
sti
call
je
pop
inc
jae
daa
xchg
dec
gs
aas
imul
clc
das
cmp
pop
call
fisubrs
sbb
mov
dec
add
push
push
gs
inc
xchg
rcr
int3
call
xor
outsb
push
fldcw
inc
xor
hlt
cmpsb
mov
jl
popf
mov
ss
mov
sti
inc
cmc
cmpsb
inc
mov
adc
les
or
push
scas
cwtl
mov
push
sbb
xchg
js
das
pop
inc
and
or
jge
jle
into
sub
xlat
dec
pop
pop
pop
adc
std
push
adc
fstpl
xchg
mov
mov
ret
xchg
pushf
fildll
cs
mov
mov
adc
ficoms
xchg
inc
arpl
test
repnz
xchg
xor
xorl
jecxz
xchg
and
and
int
ret
or
mov
adc
sbb
sbb
mov
pop
icebp
cmp
mov
jno
std
out
neg
and
sbb
cmp
movsl
jp
adc
fadd
cmpsl
stc
movsl
push
sub
and
xchg
add
or
adc
test
fildll
adcb
iret
loop
and
jno
outsb
hlt
add
rorb
cmc
clc
or
xor
pushf
push
int3
shll
lea
add
or
mov
je
xlat
jp
xchg
into
jle
xor
daa
mov
fistl
push
aad
pop
lods
and
rcrl
jp
jns
jp
cwtl
roll
cmpsb
mov
cmc
push
push
in
pop
cli
insb
cmp
and
mov
mov
ljmp
push
jo
jge
and
lock
mov
pop
or
jns
fldl2e
imulb
addl
or
std
mov
cmpsb
pop
rorl
jecxz
cwtl
movsl
mov
or
incl
pusha
mov
gs
outsb
inc
dec
xor
jno
rol
loop
in
inc
pop
xchg
mov
sbb
ss
mov
sbb
stos
daa
mov
sub
add
aad
dec
addr16
movsb
cmpsl
loope
pop
pushf
add
fcoml
cld
adc
push
and
sub
out
jne
inc
adc
jmp
mov
mov
pop
xchg
andb
inc
divb
dec
idiv
sbb
or
pop
cmp
mov
mov
lea
cmp
xor
mov
movsb
and
popf
push
in
xchg
arpl
out
stos
push
cmp
in
xor
xor
cli
cmpsb
test
push
xchg
mov
andl
push
dec
call
andb
enter
loopne
jmp
cltd
leave
and
mov
test
rorb
add
xchg
mov
notb
cmpsl
int
mov
addr16
add
adc
jnp
int
ficoms
pop
dec
in
repnz
imul
or
out
hlt
mov
fwait
std
cmpsb
sbb
pusha
push
das
and
mov
imul
dec
xor
push
dec
lret
jp
cld
add
int3
insb
fadd
adc
inc
xor
push
pop
ss
arpl
mov
sahf
jns
test
enter
mov
mov
rorl
stos
idivl
push
std
nop
add
ja
mov
mov
mov
xchg
test
iret
loopne
aas
push
pushf
orb
sub
push
lea
lcall
mov
pushf
inc
std
hlt
sub
cwtl
or
xor
jmp
sub
inc
dec
dec
cltd
frstor
jo
in
fimuls
jl
out
ljmp
add
and
inc
cld
sbb
add
cmpsb
xor
mov
in
mov
in
addr16
jne
es
sahf
xor
add
cmp
pop
callw
icebp
clc
jb
hlt
mov
scas
mov
fwait
and
dec
sbb
mov
aad
xchg
add
jle
ret
sub
add
xor
add
int
jno
xor
inc
fistpl
sti
push
push
out
out
sbb
mull
pusha
pop
je
mov
adc
js
lods
mov
cmpsl
fwait
ds
shl
shrb
mov
std
std
adc
mov
enter
lahf
aam
sarb
xor
lods
jae
sbbb
loop
dec
fwait
mov
sbb
mov
negb
fwait
ss
fsubs
mov
jmp
rcrl
cmc
add
mov
out
xlat
sub
mov
pop
push
repnz
mov
popa
mov
dec
mov
ss
push
push
mov
daa
sub
cmpsl
mov
daa
mov
push
pop
ljmp
adc
mov
pop
mov
dec
lds
fcmovu
mov
mov
jp
xor
fistpl
add
out
pop
mov
adc
and
movsb
leave
dec
or
imulb
stos
adc
adc
xchg
lret
jne
cltd
test
push
and
mov
xchg
xor
sbb
xor
dec
loop
cwtl
mov
scas
dec
lea
or
js
push
loopne
jno
jns
test
mov
add
movsb
cmp
jle
out
jno
inc
fdiv
inc
fists
sub
popa
cli
testl
push
and
dec
sar
cmpb
mov
outsl
lret
iret
mov
pop
ljmp
mov
cmp
or
stc
pop
mov
sbb
out
or
jge
sub
int3
cs
icebp
sbb
mov
and
dec
adc
arpl
pop
leave
mov
mov
add
shl
jbe
push
add
mov
mov
pushf
adc
imul
rolb
rcr
sbb
fiadds
mov
out
cld
pop
pushf
in
movsl
insb
xor
aas
push
hlt
dec
dec
dec
mov
add
and
mov
push
cmpsb
aas
lods
push
into
push
test
push
fstl
and
in
insb
add
cmp
popa
addr16
ret
add
sbb
mov
lds
dec
mov
test
push
movsb
scas
push
popa
pop
add
pop
mov
mov
push
sub
sbb
adc
out
sar
xor
movsb
shlb
push
pop
and
sarl
push
push
cld
out
mov
or
push
pop
push
clc
stos
and
push
jl
push
mov
insl
insl
idiv
or
pop
adc
push
dec
repnz
in
jl
repnz
adc
stos
push
pop
or
jle
xor
mov
sbb
data16
adc
repnz
xchg
testl
push
xor
or
jne
xchg
push
shlb
scas
xchg
dec
fwait
add
cmp
pop
faddp
call
cmp
aas
cmp
pop
or
fcoms
sbb
fstps
aaa
sub
xchg
xchg
repz
addl
mov
test
inc
xor
aas
xchg
xchg
sti
iret
dec
arpl
orb
xlat
cmp
xchg
jns
insl
xchg
out
adc
xor
cmp
xor
mov
mov
sti
and
sbb
mov
stos
add
mov
push
or
aad
xor
push
rclb
test
jl
out
movsb
test
jl,pt
outsb
aad
es
cmp
inc
icebp
xchg
popf
xor
cltd
ds
inc
int
ret
fld
mul
in
jmp
cmp
mov
cmp
dec
out
push
movsl
sbb
push
add
lret
addb
das
adc
or
iret
lcall
iret
rdtsc
int3
fimull
xor
sbb
mov
push
sti
lods
movsw
add
sub
dec
push
cltd
arpl
or
adc
into
dec
int3
cmp
mov
mov
mov
in
jmp
in
and
adc
lret
pop
fadds
mov
pushf
push
adc
jmp
lret
es
cmp
inc
insl
fwait
jge
inc
jae
in
cs
mov
xor
xchg
dec
cs
lea
and
fisttpl
lods
insb
lods
add
cmp
cwtl
das
and
add
pushf
lcall
aam
ds
nop
and
mov
ds
popf
imul
sub
sub
push
aam
lcall
mov
pushf
inc
sub
fcmovnu
sbb
fbstp
inc
push
add
mov
cmp
sbb
mov
movsb
stos
popf
jno
shlb
jno
jne
pop
insb
popa
push
pop
mov
jb
or
rcl
movsl
push
lods
mov
pop
jno
cmp
stc
xchg
dec
std
adc
and
add
shll
out
fdivl
mov
mov
pop
adc
adc
in
mov
pop
popa
es
mov
cmp
mov
adc
es
sti
and
add
sbb
mov
cwtl
lods
negl
ret
push
into
and
test
leave
mov
cmp
mov
jo
sbb
loop
jno
inc
dec
lds
outsb
fldl
inc
inc
cmpsl
or
jae
aam
pop
fnstsw
and
cld
push
scas
sbb
or
scas
push
lret
mov
mov
and
adc
dec
stc
insl
in
add
add
daa
jbe
idivl
mov
addr16
pop
push
cli
add
imul
mov
shl
or
cmpsb
hlt
dec
scas
sbb
push
push
rorb
popf
mov
mov
add
xor
outsb
xchg
pop
into
xchg
cmpsb
mov
xchg
and
incb
or
lods
das
jb
mov
dec
jae
ss
lahf
xchg
mov
and
and
mov
and
jb
stc
dec
xor
mov
bound
pop
push
dec
imul
movsl
jnp
mov
addr16
pusha
pop
dec
and
add
and
ljmp
enter
or
std
mov
shlb
ss
test
ret
and
shrb
leave
dec
xor
out
and
ficoms
addr16
imul
ss
cmpsb
mov
push
inc
sti
push
inc
inc
ja
push
xchg
mov
sbb
imul
call
xchg
in
sub
or
sbb
add
or
cmp
push
and
adc
push
or
lods
iret
mov
adc
sub
mov
dec
and
push
fsubrl
mov
ljmp
adc
and
sbb
dec
lods
test
lods
faddl
pop
ret
out
push
push
cwtl
inc
outsl
or
mov
xchg
push
jmp
mov
pop
ljmp
jmp
call
faddl
out
adc
add
outsb
std
cmc
in
roll
lods
or
movsl
std
pop
push
inc
cmp
or
addb
testl
sub
xchg
inc
jbe
pop
mov
clc
and
in
and
or
push
jge
outsb
xchg
cld
loopne
cmp
jno
inc
mov
mov
bound
outsl
jg,pn
in
push
sub
cmp
fnstenv
clc
jo
test
pop
repz
int
loope
and
std
dec
rol
xor
ss
push
mov
fnstsw
mull
inc
xor
fnstsw
je
mov
adc
push
test
jmp
cli
cmp
imul
or
loop
cmc
std
mov
adc
adc
add
add
enter
dec
out
jnp,pn
dec
jecxz
xlat
je
call
pop
push
add
negl
cmp
and
xor
sbb
ljmp
lcall
add
cmp
mov
push
pop
push
ja
add
jmp
adc
data16
ljmp
and
arpl
mov
pusha
xchg
daa
xchg
loopw
iret
hlt
ja
pop
out
loop
adc
aaa
imul
das
cmp
arpl
dec
adc
bound
ret
pop
fs
les
push
hlt
andl
lods
aas
out
mov
insl
icebp
mov
fsubs
inc
jne
dec
sub
jb
add
pop
pop
push
ret
cli
xor
shr
inc
mov
lds
nop
cmp
lods
sub
call
das
inc
add
push
mov
dec
inc
or
xchg
addl
idivb
pop
mov
ret
pop
jns
in
push
cmp
sbb
xchg
mov
mov
lods
pop
inc
pop
or
out
jg
pop
cld
ret
lea
aam
test
xor
mov
into
loope
hlt
push
xchg
lcall
es
and
xor
dec
aad
fcomp
loope
mov
sahf
rclb
movl
mov
nop
movsl
pop
pop
cmp
jmp
test
outsl
xor
dec
stc
lea
in
jmp
or
dec
sub
jl
fucom
gs
pop
mov
push
aas
inc
int3
push
insl
cmp
fdivp
jecxz
jp
jno
jmp
cld
shl
les
mov
push
pop
fisttpl
test
cmp
sub
stc
mov
cmpsb
mov
sub
adc
cmpsl
mov
mov
ljmp
mov
or
sub
push
cmpsb
and
or
outsl
mov
iret
stos
and
xchg
dec
cmp
out
test
stos
lret
mov
icebp
mov
js
sub
mov
scas
das
mov
push
andl
cmp
pop
sub
jl
pusha
inc
and
fcomip
push
sub
rcll
jle
sub
inc
out
inc
sub
mov
and
jnp
dec
adc
push
sub
push
ret
dec
add
inc
mov
outsl
xor
dec
jbe
mov
xor
cld
in
fildll
pop
or
jo
scas
push
jo
sbb
push
pop
sub
repnz
hlt
and
pop
bound
jle
dec
mov
inc
add
xor
sub
aaa
lret
int
cmp
testb
inc
test
ja
jge
int
popf
cmp
add
fsubr
push
push
mov
push
roll
rorl
adc
lret
inc
push
xor
and
sub
xor
stos
fbstp
addb
stos
mov
xchg
xor
je
and
pop
cmp
and
dec
mov
jle
movsl
and
imul
lea
and
mov
sbb
movsl
popf
inc
cmp
or
xlat
into
cmp
clc
xor
push
mov
jno
xor
icebp
cwtl
aaa
adc
mov
mov
movsb
cmpsb
ljmp
or
pop
test
cs
lret
insl
mov
inc
mov
inc
dec
pop
xchg
arpl
fistl
and
daa
repz
das
daa
jo
sub
es
jne
dec
mov
aas
mov
mov
push
aam
in
cmp
xlat
mov
dec
lret
inc
pand
loop
iret
fsubrs
add
mov
sub
push
jno
pop
ljmp
mov
cmpsl
and
into
cmp
jle
cmpsl
mov
inc
dec
push
push
jle
cmpl
adc
popf
pop
jbe
icebp
cmp
pushf
xlat
fstps
out
mov
lret
fidivrl
inc
xor
sahf
push
jo
mov
aas
lods
cmpsb
shrb
call
push
int3
les
xchg
test
xor
popa
jns
aam
es
pop
push
mov
xchg
xchg
xor
mov
neg
fidivrs
jo
nop
dec
pop
push
subb
sub
mov
mov
push
cmp
icebp
push
mov
mov
adcl
xor
jne
dec
sbb
fwait
test
xor
mov
iret
movsb
sbb
and
fistpll
mov
add
add
mov
xlat
lea
push
popa
pusha
inc
mov
pop
add
fcmove
mov
mov
test
repnz
push
inc
adc
and
pop
les
mov
out
out
xchg
xor
dec
sub
dec
xorl
lcall
ficompl
add
sub
push
sti
cwtl
or
mov
cmpsb
xchg
sar
xchg
xor
sub
ds
icebp
mov
ljmp
ss
xor
loope
inc
add
lret
xchg
push
sub
call
aas
into
xchg
and
jl
push
inc
sbb
stos
xlat
subl
enter
xchg
stos
movsl
movsl
cmp
fdivrl
mov
sbb
cmc
aaa
lods
movsl
insl
call
mov
cwtl
lea
adc
dec
out
xor
or
and
push
cmp
add
sti
iret
subb
pop
push
fadds
mov
in
lcall
dec
sahf
add
push
fcomip
mov
dec
mov
xlat
lcall
cltd
in
in
int
mov
fnstenv
adc
xor
lods
ljmp
sub
scas
jns
bound
dec
loop
jmp
xchg
mov
xchg
xor
add
test
fcoml
sub
loopne
cmpl
pop
lea
mov
mov
scas
sub
popa
sub
mov
scas
sbb
js
jg
sbb
pop
sub
and
out
fstps
std
ret
sub
test
jnp
jp
outsb
jmp
rcll
cmp
cmp
stc
and
inc
jbe
inc
jne
add
dec
call
fcmovb
or
inc
aaa
roll
lods
adc
bound
out
sbb
das
mov
adc
inc
outsl
popf
dec
fcos
dec
in
add
inc
xchg
mov
icebp
jae
sbb
sbb
mov
mov
hlt
ret
cmp
or
add
daa
cwtl
sar
hlt
and
xchg
arpl
jp
mov
out
inc
cmpsl
pop
out
in
mov
pop
lock
inc
adc
pop
push
ss
push
add
or
scas
data16
add
sti
movsb
dec
dec
faddl
ds
push
push
popf
xchg
test
in
xchg
in
jns
mov
add
and
mov
stos
test
jns
xchg
dec
xor
xor
jno
and
stc
mov
mov
mov
aas
xor
dec
out
pop
dec
aad
das
xor
jle
test
or
xorb
sbb
imul
push
and
mov
mov
jl
dec
enter
and
jle
je
popf
add
xchg
popf
mov
dec
add
dec
adc
ret
mov
and
fstl
mov
dec
mov
mov
repz
andb
cmp
cmp
dec
xor
push
in
fnstsw
mov
mov
pop
rcrb
jge
jne
dec
lret
cwtl
not
lea
dec
push
lret
ss
jmp
mov
adc
jge
fldl
mov
enter
jl
sub
mov
daa
leave
mov
cmp
popa
dec
jnp
dec
lret
add
in
fcoml
sbb
sub
dec
push
lods
add
fcompl
inc
mov
mov
scas
mov
xchg
mov
cwtl
dec
mov
push
sbb
cmpsb
jge
pop
bound
xchg
or
addr16
xchg
mov
cwtl
test
mov
mov
loope
mov
sbb
jg,pn
les
mov
movsb
push
imul
cmp
lods
cmp
xchg
cli
iret
inc
xchg
gs
addr16
push
stos
pop
test
outsl
sti
jge
cmp
and
add
push
dec
inc
adc
dec
test
cltd
jmp
sti
sub
test
clc
jne
push
ret
push
aad
negb
cmp
jmp
aas
ror
stos
push
cltd
pop
ja
xlat
cmp
fisubs
stos
cmp
outsl
push
jecxz
mov
jns
in
cld
mov
aaa
stc
add
outsl
and
outsl
xchg
sbb
dec
jne
loopne
xchg
data16
psllq
pop
xchg
adc
outsl
fidivrs
adc
xchg
aad
cmp
dec
lea
and
cmp
pop
bound
cmp
pop
sbb
mov
and
repz
cld
scas
imul
and
cmpsb
shl
dec
mov
mov
aam
inc
pop
xchg
cmp
xchg
mov
std
mov
std
sub
imul
xor
mov
orl
testl
pop
inc
js
andb
shlb
in
ret
aas
adc
push
popf
xchg
repnz
hlt
stos
dec
es
mov
add
mov
bound
inc
xor
loop
aam
sti
insb
stos
in
jns
lcall
mov
daa
leave
dec
xchg
sbb
fmul
ds
jb
dec
daa
dec
pop
dec
loope
std
ljmp
sahf
dec
ljmp
mov
scas
loop
addl
adcb
mov
rcrb
flds
rclb
std
popf
aas
jl
scas
mov
clc
pop
pop
stos
or
mov
cs
and
mov
mov
test
pop
pushf
xor
jns,pn
les
mov
outsl
inc
es
xchg
dec
adc
or
or
mov
adc
iret
stos
icebp
mov
dec
pop
mov
test
sbb
imul
push
pop
jmp
cmc
iret
das
mov
fwait
jbe
pop
push
pop
or
xor
cltd
into
enter
pop
lods
outsl
cltd
and
les
in
cmp
and
dec
fldl
xchg
gs
cwtl
sbb
cld
cli
mov
xor
mov
push
int
mov
or
pop
xchg
sarl
or
sbb
add
insb
fdivrs
xor
addr16
out
movsl
or
cld
lea
push
mov
add
inc
dec
xchg
xchg
icebp
adc
and
dec
or
inc
or
mov
loop
nopl
cmp
push
fcmovbe
push
lret
cmp
aas
test
add
push
jnp
int
jp
stos
xchg
inc
and
mov
test
mov
int3
movsb
out
dec
andnps
mov
sbb
sarb
ret
pop
xor
jge
pop
insb
les
lods
rep
addb
pop
lock
cmp
sbb
lods
and
jmp
or
xor
and
dec
arpl
lds
sbb
icebp
xlat
stos
outsl
insb
mov
push
and
mov
inc
cmp
adc
jg
stos
mov
mov
add
add
pop
test
les
mov
addr16
test
jge
mov
pop
lods
and
push
pop
ljmp
mov
popf
pushf
inc
or
es
xchg
pop
addr16
daa
xchg
mov
mov
fabs
or
pushf
shll
pop
pop
push
insl
nop
add
jg
aaa
inc
fdivrs
out
stc
ljmp
xlat
xchg
xchg
stos
out
jo
jmp
jnp,pn
mov
cmp
inc
add
mov
xchg
sbb
jg
fimull
ret
repnz
xor
dec
in
inc
mov
dec
push
add
std
jnp
lock
fwait
xchg
jle
inc
fs
leave
jmp
and
adc
add
push
pop
or
lock
rcrl
icebp
fildll
inc
pop
jbe
mov
cs
rol
xor
test
js
and
mov
ret
loope
push
cwtl
push
int3
scas
lock
adcl
out
mov
das
insl
iret
rcrl
dec
test
dec
mov
jl
jg
xor
test
repnz
push
pusha
fcomps
xor
mov
lret
xchg
mov
mov
add
shrl
arpl
mov
test
cld
js
or
xor
mov
add
sub
insb
shr
pusha
push
add
hlt
xor
mov
loopne
mov
fwait
mov
inc
jo
test
out
dec
pop
mov
jne
mov
pop
mov
sub
jno
xor
pop
hlt
mov
xchg
jmp
pop
push
test
cmp
jp
jno
fsubl
pop
loop
cmp
ror
sub
cmp
and
cli
imul
test
jp
cwtl
sub
cmp
or
into
in
cmp
int
xchg
lods
push
jmp
clc
adc
mov
push
adc
out
mov
pop
jbe
or
xlat
mov
fimull
in
xchg
hlt
aam
sahf
mov
dec
xor
mov
iret
fmuls
xchg
dec
inc
xchg
cld
mov
mov
out
out
inc
add
xor
cltd
pop
mov
out
cmpl
in
sti
mov
cs
cmp
mov
fucom
add
adc
stc
dec
repz
mov
push
arpl
and
dec
jecxz
jl
imul
sbb
pop
or
shll
stos
jle
jb
push
add
test
inc
sbb
xchg
movsl
out
add
pop
dec
call
cmp
pop
gs
mov
xchg
mov
and
test
cmp
ljmp
xchg
movsb
mov
mov
rorl
movsl
lods
jne
mov
and
incb
mov
fwait
mov
loop
pop
aas
xchg
inc
cwtl
jbe
mov
push
mov
adc
subl
xchg
out
add
cltd
mov
scas
test
js,pt
sahf
inc
jb
loop
mov
mov
sbb
pop
inc
in
cmp
stos
pop
jmp
push
jmp
and
mov
ja
push
mov
mov
dec
lret
jo
mov
das
test
and
jno
fs
divl
xor
push
adc
adc
dec
nop
dec
pop
repz
inc
popf
das
pop
xor
popa
stos
and
test
add
push
push
jge
shl
push
add
lret
scas
pop
add
mov
scas
test
dec
adcl
cmp
stc
mov
pusha
jg
pop
fs
negb
cli
push
cmpsl
fdivr
jno
jno
fsubr
cmp
insb
cmpsb
cmpb
stos
push
pop
das
or
outsb
lds
xchg
stos
imul
pusha
or
popf
aam
xchg
sub
in
stos
mov
xchg
jmp
test
or
cli
mov
mov
dec
jp
and
jmp
enter
movsb
mov
sbb
xchg
push
loopne
mov
jmp
sub
lock
cli
xchg
pop
push
scas
fcoml
pop
out
sub
out
inc
push
and
cli
push
movl
stos
pop
inc
adc
arpl
mull
jno
xchg
xchg
inc
or
pop
xor
dec
dec
jl
dec
cmp
jns
outsl
mov
mov
inc
popf
jae
push
lock
lahf
xchg
mov
ficompl
xor
jecxz
test
mov
cwtl
fs
mov
ds
cld
cmpb
sub
adc
push
pop
popf
push
mov
ja
leave
mov
repz
pusha
and
leave
cmpsb
push
data16
cmp
loop
push
pop
adc
mov
adcb
lds
jo
cmp
out
insb
add
or
rolb
mov
mov
subl
add
fisubs
sub
cmp
repz
and
inc
or
sbb
xor
arpl
jo
arpl
mov
or
hlt
xor
adc
fldt
out
pop
jns
mov
xor
imul
mov
xchg
rcr
insb
popf
stos
int
adc
test
xor
shr
loope
les
xchg
pop
test
inc
jb
shlb
push
cltd
or
jmp
dec
jb
sub
loop
sbb
bound
mov
mul
dec
pop
jae
xchg
lds
mov
xor
popa
pop
push
jb
ret
insl
inc
cmp
cli
data16
in
call
jmp
jne
jnp,pt
movsb
loop
dec
mov
ds
and
jb
flds
xor
dec
nop
mov
test
or
insl
outsb
out
sbb
cld
xorb
repz
xchg
pop
cmpsl
and
enter
pop
adc
ret
scas
leave
repnz
fimuls
xor
pop
sbb
push
jge
pop
sar
inc
fdivs
cli
jle
hlt
loope
aad
xchg
push
nop
xchg
xchg
repz
test
pop
cmp
pop
add
jle
lods
mov
mov
push
arpl
cmp
xor
dec
xchg
push
mov
add
push
add
mov
ret
lock
inc
int3
push
mov
fs
jno
cwtl
test
inc
fcmovnbe
add
add
pop
sbb
jnp
bound
sbb
cmp
add
push
fimull
jmp
sub
mov
pop
xor
fcmovbe
jbe
shlb
pop
out
outsl
les
stc
jo
sub
int
addb
jmp
sub
daa
gs
cmp
sbb
sbb
jle
cmp
pop
mov
dec
pop
add
jbe
add
mov
sbb
jnp
pop
testb
jp
add
mov
mov
sub
pop
loop
lds
movb
cmc
fbstp
inc
loopne
xchg
jg
add
add
je
out
cmp
repnz
mov
mov
adc
add
add
scas
loop
mov
mov
xor
lahf
into
sahf
in
jl
jge
push
sbb
and
mov
mov
jbe
jl
jecxz
int3
ret
mov
sbbb
mov
add
lret
xchg
or
mov
pop
jne
cwtl
out
jo
cmp
cmpb
sbb
js
mov
cmp
dec
lods
and
bound
arpl
arpl
ret
push
loopne
stos
pop
iret
je
push
mov
arpl
out
fdivr
adc
jg
in
fxch
add
push
fsubl
aad
lds
and
lods
shll
out
sub
pop
ljmp
push
clc
iret
in
mov
repnz
sub
mov
cmp
pop
pop
mov
pop
xor
jp
mov
enter
pop
addr16
je
cmc
loop
popa
mov
xchg
cld
adc
jg
inc
sub
push
cmp
dec
das
mov
mov
add
fisubl
mov
int
jb
fwait
sbb
mov
adc
push
mov
xchg
xchg
stos
xchg
pop
xchg
cmp
pop
int
insl
add
sub
sahf
aaa
inc
into
xor
loopne
call
inc
mov
loope
push
jl
dec
adc
mov
cmp
mov
mov
es
push
sbb
sbb
fidivrs
xchg
repnz
int
sbb
mov
inc
push
sbb
push
lds
cwtl
xchg
jge
movsb
sub
sbb
mov
inc
fidivrl
and
or
bound
imul
incb
inc
leave
rcrb
adc
imul
test
int
aaa
push
adc
ljmp
repz
out
lcall
in
and
hlt
into
mov
dec
sbb
mov
mov
js
lods
ficoms
xchg
addr16
es
or
sbb
xchg
test
jp
rcrl
int
icebp
sahf
xchg
and
dec
jns
sar
and
stc
imul
xor
push
push
int3
bound
and
mov
xor
jmp
dec
lock
lea
jp
outsl
jo
out
aad
xchg
cmp
movsl
lea
aas
mov
insl
push
xor
sub
es
das
mov
push
xchg
or
inc
rorb
mov
bound
stc
out
mov
ret
pop
xchg
or
mov
stos
ret
pop
movsb
das
icebp
sbb
test
dec
gs
loopne
icebp
sbb
xor
popf
cmpsb
xor
jb
ljmp
and
lods
mov
mov
mov
rcll
cmp
scas
mov
xor
dec
fwait
lea
mov
cs
sbb
stc
jl
xor
pushf
insb
outsb
es
lahf
sbbb
jne
outsb
addr16
ret
fsubr
repz
repz
imul
pop
cltd
sub
and
bound
mov
jnp,pn
lods
scas
pusha
nop
lret
push
adcb
jae
sahf
jge
pop
popa
mov
lods
push
mov
sub
sub
icebp
adc
outsb
lret
pop
int
mov
hlt
outsb
adc
insb
inc
sbb
xor
ljmp
xor
fsts
sbb
and
fsubl
mov
mov
jae
sti
test
test
cs
loopne
push
xor
push
rclb
mov
cmp
inc
daa
in
daa
cmc
sub
bound
push
sub
mov
and
mov
jb
inc
mov
jns
push
lahf
add
sub
cmpsl
mov
xor
adc
js
test
push
outsl
cs
and
sti
fistl
add
call
pop
push
mov
sbb
and
or
int
repz
cld
push
xchg
cmp
mov
mov
scas
and
or
hlt
ret
xor
sbb
sahf
divb
cli
arpl
xlat
jle
sub
mov
jb
mov
loope
xchg
pop
xor
xor
data16
out
sbb
cmc
shrb
sub
mov
popa
pusha
dec
push
inc
testb
mov
nop
loope
pusha
inc
addb
test
out
push
movsb
mov
aam
jmp
insl
sub
fsubs
sub
mov
fsubp
dec
insb
jg
mov
adc
loop
mov
sbb
or
ret
gs
adc
hlt
sbb
jge
inc
aam
pop
or
fcoml
sbb
dec
xchg
loope
mov
push
int
repz
insl
cmp
popf
push
pop
repz
push
test
rcl
aaa
std
sarb
rorb
mov
repz
in
nop
mov
push
aas
data16
pop
xchg
cmp
adc
std
mov
pop
jne
push
xor
mov
fcomps
inc
es
mov
jne
jno
negl
aaa
andb
dec
sbb
mov
cmp
movmskps
subb
sbb
sete
aad
dec
repz
test
popa
hlt
xchg
nop
mov
mov
pop
and
lds
sti
int3
int3
arpl
arpl
pop
lahf
sarb
inc
mov
ffree
leave
lcall
loopne
scas
xchg
xchg
cmp
sbb
pop
cwtl
mov
popa
insl
jle
out
lahf
add
sahf
pushf
test
ss
inc
jl
sub
sub
push
xchg
fwait
and
or
and
std
jecxz
mov
pop
loop
jae
adc
fmul
mov
jns
dec
nop
movsb
pop
lret
in
sub
cwtl
pop
jb
or
jmp
call
lret
frstor
dec
push
inc
mov
fidivrs
ret
cs
xchg
sbb
call
pusha
ret
jne
loopne
lahf
cmp
movsb
cmp
sbb
mov
sub
dec
jle
push
cmp
push
jmp
inc
pop
adc
pop
mov
xor
int3
lods
filds
movsb
fdivs
add
daa
hlt
popf
adc
jb
mov
imulb
push
clc
sbb
hlt
ljmp
sbb
lods
pop
sarb
pop
popw
lods
mov
xor
cmp
and
jp
add
in
nop
ficoms
mov
pop
mov
ds
shl
dec
cli
pushf
jb
jl
lahf
ficomps
lods
sub
sarb
int
mov
xchg
jle
ds
xor
mov
sub
cmc
loop
inc
pop
push
mov
pop
lret
outsb
fwait
mov
lock
dec
xchg
cmc
jp
push
lods
mov
outsb
pop
dec
jbe
ret
outsl
jge
subb
push
repnz
jne
xor
aad
pusha
cld
jne
int
push
push
stc
pop
add
imul
addr16
cmp
int3
xchg
cmp
in
mov
jge
or
pop
adc
inc
cs
sbb
xchg
or
or
xor
lea
dec
mov
lods
scas
mov
cmp
jnp
gs
lock
sub
pop
mov
sub
adcb
jg
aam
pop
fcomp
dec
jnp
insb
push
jne
or
repz
pop
xchg
lret
sbb
lea
loop
outsl
nop
inc
jne
add
pop
scas
aas
scas
fucom
add
mov
ficoml
push
iret
daa
sarb
fstpt
pop
xchg
lahf
stos
pop
dec
push
mov
cmp
rcrb
cmp
xor
push
jg
mov
mov
cmc
mov
mov
mov
aad
sbb
push
xchg
jae
lds
fildll
je
ljmp
push
sub
iret
xor
mov
sbb
aas
jmp
sub
ja
addr16
xchg
sahf
jb
les
dec
mov
or
push
cmc
inc
out
bound
or
lret
outsl
lea
movsb
imul
test
dec
pop
subb
push
jns
loop
adc
mov
jle
jecxz
pop
out
xchg
jge
in
ja
stc
cmpsb
repnz
adc
dec
ror
lret
movsb
movsl
fiaddl
outsb
mov
push
pop
pop
sbb
xlat
inc
in
xchg
xor
into
call
cmp
addb
lds
cmp
and
xor
loopne
xchg
mov
loope
stos
xchg
jp
inc
mov
xchg
iret
out
cld
gs
jp
test
mov
pop
pop
cmpsl
into
shrb
push
stos
push
mov
fcmove
sbbl
xor
cltd
into
push
sub
lods
in
mov
pop
pop
xchg
in
pop
xor
into
add
mov
fldt
icebp
sbb
xchg
push
sub
mov
test
and
and
sub
mov
xchg
and
imul
aaa
dec
iret
ljmp
xchg
sub
test
sub
mov
stc
lcall
aaa
mul
les
retw
xor
cmpsb
pop
or
mov
int3
xchg
nop
filds
outsl
cmp
ficoms
jbe
sub
add
fisubrl
ds
mov
outsb
push
in
mov
pop
loope
mov
ret
dec
hlt
aad
mov
fwait
mov
jae
mov
dec
int
enter
stc
and
jmp
pop
outsb
je
xchg
iret
decl
div
js
mov
push
mov
xor
and
rcrl
dec
mov
sbb
jmp
stc
fstl
cltd
ret
xchg
adc
push
mov
sub
cwtl
lods
sub
mov
push
adc
sub
push
cmp
shlb
push
adc
iret
dec
mov
pushf
lret
aaa
jge
negl
inc
sub
mov
and
mov
pop
and
pop
in
ljmp
mov
mov
cmpb
mov
clc
fmuls
mov
pushf
loopne
dec
dec
sbb
cmp
mov
jmp
pop
test
sarb
mov
push
mov
sbb
mov
add
cmp
mov
leave
sbb
push
xchg
cmp
out
imul
pop
leave
lds
call
mov
movsl
pop
or
mov
fisubs
sti
cltd
pusha
aad
aas
adc
dec
jae
in
cld
inc
inc
aad
es
cmp
loope
mov
cwtl
cmpsl
xor
dec
jb
and
int
nop
push
xor
xchg
dec
and
and
ret
cmc
pop
dec
es
andl
call
xor
ja
cmp
mov
xchg
pop
mov
sub
and
sub
cld
mov
andl
testb
push
push
pop
shrl
stos
pusha
mov
xchg
shl
mov
pop
shrb
xchg
mov
int3
cmpsb
outsb
xchg
push
aam
mov
or
xchg
movsl
xor
fisttps
jecxz
adc
add
mov
out
cli
sti
pop
jno
cltd
lahf
xchg
mov
sub
jmp
and
sbb
mov
negl
mov
incb
xor
idivl
dec
xor
push
adcl
jns
adc
test
std
loope
scas
jle
fdivrl
sbb
push
dec
stos
mov
pop
ds
lahf
shll
sub
xchg
int
pushf
pop
sbb
sub
std
mov
xchg
jle
inc
xchg
jae
das
imul
pop
shrl
pop
addb
bound
inc
test
cmp
jno
hlt
movsl
fmuls
nop
data16
pop
adc
mov
fistpl
xor
xchg
mov
add
stc
jno
cld
test
cmc
mov
stos
out
movsb
sahf
js
loopne
cmpsl
push
mov
stos
sahf
or
int3
mov
movsb
push
push
pop
popa
pop
lcall
pop
ror
scas
xchg
aaa
adcb
mov
jmp
cmp
int3
sub
ficoms
bound
xchg
mov
push
jge
stos
popf
aas
add
sub
and
jnp
ss
negb
lods
lcall
clc
data16
repnz
inc
movsl
dec
xchg
and
test
xchg
fwait
push
adc
xor
adc
sbb
sbb
test
mov
rorl
xor
or
fimuls
cmp
mov
testb
fwait
push
adc
test
mov
dec
ret
dec
mov
adc
xchg
mov
push
mov
and
das
pop
adc
loop
imul
call
jge
xor
aaa
out
aaa
loope
and
push
in
sbb
gs
lcall
lods
sub
fsub
add
ja
adcb
or
sub
cmp
sbb
add
cwtl
outsl
xchg
fidivrl
add
insb
push
inc
scas
fimuls
mov
mov
ja
aas
add
and
cmp
jp
xchg
lock
mov
iret
shrl
xor
inc
je
outsl
mov
rcr
push
push
es
mov
popa
shll
adc
loopne
into
addr16
jg
adc
mov
clc
and
inc
fnstcw
enter
push
jae
cmp
pop
js
cltd
fwait
and
je
add
rcl
push
inc
cmpsb
mov
or
sub
mov
mov
jg
and
test
add
mov
jg
fists
sbb
add
imul
gs
and
ds
roll
fwait
pop
push
jno
add
mov
add
or
xchg
or
shlb
mov
dec
aaa
adc
jl
inc
fldl
mov
rcl
cld
les
xchg
or
out
xor
lods
inc
dec
cli
push
sahf
sub
fildll
std
and
cmp
mov
ss
add
aad
dec
pushf
cli
lds
cwtl
outsl
jno
popa
out
xchg
push
cmp
insb
sub
jnp
push
jl
movsb
dec
imul
rclb
mov
icebp
add
cmp
mov
insl
jno
sbb
adc
sub
push
mov
int3
cmp
jecxz
mov
hlt
push
pop
pop
inc
sub
push
loope
xchg
outsb
or
jecxz
icebp
ss
nop
jb
in
cmp
xor
mov
dec
incl
mov
mov
sbb
inc
lods
hlt
adc
jge
pop
mov
push
outsl
ljmp
lahf
cwtl
push
xchg
rclb
cli
ss
xor
pop
push
cwtl
inc
mov
ljmp
aaa
xor
push
loope
nop
sub
roll
cs
pop
add
mov
sti
mov
mov
cltd
push
outsl
mov
sbb
xchg
and
and
pop
mov
lcall
sub
xor
adc
jg
add
fistps
mov
in
std
xchg
cli
stos
cmpsb
mov
movsl
hlt
mov
test
inc
scas
pop
jge
lret
mov
stos
pop
push
dec
mov
fdivl
mov
ds
out
insb
jno
inc
popf
shlb
lret
out
xlat
mov
sub
aaa
mul
cmp
movb
insb
jbe
adc
and
and
cmp
xorb
fsubr
xor
push
jecxz
movsb
ret
les
mov
nop
out
arpl
std
push
pop
dec
jne
lcall
lods
sub
movsl
loope
or
es
cmp
mov
adc
rcll
push
sbb
adc
cltd
adc
push
or
xchg
mov
push
dec
cs
ret
xchg
adc
inc
aas
popa
jmp
popa
sub
adc
and
outsl
xchg
mov
inc
inc
xchg
js
mov
ret
outsb
mov
jmp
pop
lds
insl
test
pop
adc
or
fdivl
and
prefetch
or
loope
push
xchg
ds
xlat
cltd
pushf
adc
pop
rep
mov
sbb
mov
and
es
jns
popl
xchg
mov
push
rcr
adc
add
push
inc
popl
shlb
mov
sbb
sub
adc
les
push
xor
negb
xor
and
movsb
jno
test
mov
ret
insl
sub
out
xor
inc
int3
or
sub
cmp
notl
repz
cmp
add
and
mov
sbb
repz
xchg
mov
jl
sbb
cmp
out
mov
jecxz
lret
call
gs
and
mov
stc
and
mov
add
aad
xchg
shlb
add
addr16
pop
pop
sbb
lods
aas
es
inc
sbb
in
fs
nop
nop
adc
fldcw
ret
test
and
sub
jge
mov
mov
lea
fsubr
lahf
clc
mov
jno
jno
xchg
xchg
les
lret
fwait
jne
daa
mov
dec
add
or
jl
and
jmp
enter
mov
repz
and
pop
insl
ja
repz
push
sub
test
inc
xchg
inc
fcompl
cli
jmp
push
xor
fs
sub
mov
pop
fld
jnp
ds
js
cltd
not
jno
repnz
dec
mov
enter
and
shll
or
lods
rcrl
imul
mov
dec
fsts
stos
mov
int3
clc
jo
fnsave
xchg
shll
dec
loopne
mov
cmp
shlb
mov
scas
push
xor
cli
repnz
in
inc
test
lret
cwtl
in
adc
std
inc
or
mov
or
push
mov
lea
ljmp
popa
xchg
leave
jmp
pop
iret
int
mov
dec
mov
pusha
in
aaa
cmp
inc
dec
lods
daa
jge
insb
out
lret
sti
cmc
or
fimull
in
sbb
sahf
xor
movsb
sbbb
jmp
insb
push
iret
mov
jg
ret
leave
lods
jne
dec
sub
jle
hlt
outsb
out
pop
fldcw
push
pop
mov
fs
scas
mov
mov
dec
in
pushf
scas
test
push
cmp
mov
push
loopne
imul
inc
or
jbe
aam
jmp
or
ds
cmpsb
add
leave
xor
out
test
pop
pop
mov
mov
fimull
fisubrs
adc
mov
jns
sub
movsl
popf
mov
mov
dec
adc
fmull
or
jl
int3
jmp
mov
mov
xor
in
cmpsb
dec
dec
xor
fcomps
jns
cltd
inc
vmovddup
or
lret
sub
mov
jg
mov
mov
outsb
dec
sti
dec
xchg
call
ret
inc
loopne
jo
and
in
xor
mov
and
add
push
pop
sbb
xchg
xor
mov
xor
jle
sbb
stos
sub
inc
jg
and
xchg
ljmp
push
and
cmp
enter
scas
mull
daa
enter
fidivrs
nop
repnz
adc
fcoms
jb
icebp
push
insb
inc
mov
pop
sahf
out
cmp
jnp
repz
ljmp
jnp
or
pusha
mov
add
xlat
pop
aad
orl
mov
lea
dec
jnp
push
rorb
add
cmp
subl
xchg
pop
sbb
jmp
sbb
jl
fidivrl
out
dec
adc
cmp
mov
mov
inc
lea
pushf
test
faddl
pop
movsb
imul
pushf
ss
icebp
sahf
lea
insl
add
les
fildl
pop
loop
add
push
lea
sti
pop
lods
into
fisttpl
lret
int
mov
add
imul
push
jmp
lret
lds
mov
das
inc
popf
pop
inc
push
addr16
jb
jo
cmp
or
stos
xor
push
mov
adc
movaps
decb
mov
sub
cmc
mov
jne
jecxz
xchg
js
push
push
mov
dec
pushf
cs
cmp
shlb
mov
ss
cltd
cwtl
mov
lods
mov
sbb
fisubrl
call
mov
movsl
mov
or
push
xor
xchg
daa
lahf
nop
rol
aad
js
mov
cmpsb
out
sbb
xor
bound
pop
addr16
mov
push
cmp
pop
stos
xor
and
fnsave
imul
xchg
mov
cmp
scas
iret
sub
xchg
inc
mov
js
icebp
cmp
or
lds
jmp
pop
push
mov
mov
xchg
mov
mov
adcb
iret
cld
add
insb
cs
movsl
sti
or
bound
idiv
cli
nop
addr16
mov
loop
out
xor
in
inc
jae
pop
je
fcmovne
push
std
clc
addl
xchg
cmpsb
cmp
xlat
mov
cs
mov
push
cli
fcom
jl
sbb
xor
in
ret
jle
gs
enter
mov
jns
test
ret
xor
mov
lock
sub
mov
add
push
cmc
int3
gs
sub
sbb
in
ret
icebp
inc
andl
nop
out
cmp
pop
es
jmp
outsb
das
pop
jecxz
cmp
loope
in
sbb
fnsave
sub
mov
cmp
idivl
adc
je
iret
test
pop
adc
out
jb
add
dec
cwtl
push
push
iret
adc
adc
fdivs
push
xorb
xchg
mov
call
test
icebp
int
icebp
dec
push
push
push
mov
imul
popa
jecxz
push
nop
push
push
xor
sub
in
test
inc
jno
adc
jbe
mov
sub
out
sahf
xlat
les
xchg
imul
adc
lcall
mov
inc
adc
mov
repnz
pop
adc
jmp
cmp
icebp
cmpsl
sbb
enter
mov
adc
inc
lcall
das
hlt
add
cmp
es
mov
pop
popl
jno
xchg
xchg
sub
pop
orl
insl
fs
pop
mov
mov
xor
sbb
testl
jae
pop
mov
shll
and
in
jae
cmpsb
mov
dec
pop
pop
push
jbe
lods
add
jg
pop
movsl
cmpsl
cmp
scas
loope
fwait
fs
ljmp
jge
mov
adc
pop
enter
sbbb
xchg
sbb
adc
and
adc
hlt
xchg
push
stmxcsr
jo
cmp
aam
in
pop
int3
and
repnz
movb
cli
pop
xchg
sub
jne
inc
inc
or
mov
ret
movb
or
push
sahf
mov
xchg
lret
sbb
mov
filds
inc
test
mov
mov
hlt
add
mov
pop
and
pop
call
inc
adc
aam
rclb
enter
xchg
aaa
in
loope
xchg
or
xor
mov
or
movsl
xchg
jne
add
mov
int
ret
stos
fwait
mov
cwtl
jbe
test
or
scas
stos
lods
insl
adc
xor
es
pop
push
lret
fdecstp
or
sahf
cli
es
arpl
inc
in
pushf
pop
mov
jbe
iret
mov
xor
lods
sbb
inc
out
sub
nop
inc
push
mov
mov
cmp
in
std
mov
push
and
std
cmp
movsl
repnz
xchg
mov
inc
fcmovnb
insl
adc
adc
xchg
movsl
addr16
and
xchg
pushf
out
xor
pop
lods
pop
mov
lock
adc
adcb
sub
push
loopne
jnp
outsb
fs
inc
push
cmp
fwait
or
sbb
push
hlt
dec
mov
popf
jecxz
into
inc
dec
int3
ds
and
mov
and
shll
mov
mov
stc
mov
icebp
movl
subb
test
jecxz
ficoml
subl
pop
call
out
mov
shrl
push
mov
adc
and
inc
aam
out
lret
fldcw
lea
or
mov
push
outsl
ds
sub
jge
sub
or
fistpl
cmpsl
fimull
loop
and
dec
adc
fdivrp
iret
mov
adc
cmpsl
jle
push
daa
fiadds
pop
xchg
mov
sbb
inc
fidivrl
mov
pop
sub
divb
and
stc
push
xorb
int3
adc
cmpsb
jne
ret
mov
cld
xchg
lods
sbb
xor
cmp
xor
adc
fmuls
push
fwait
sbb
mov
xchg
lock
cmp
mov
push
sub
jb
pop
pop
jl
shrb
dec
cmp
or
loopne
mov
cmpsb
out
stos
ret
and
testl
jp
repz
hlt
fs
mov
sti
xor
into
push
movsl
andl
push
popa
ljmp
aam
mov
outsb
loope
test
loopne
mov
add
xor
push
push
jl
mov
add
inc
pop
popa
pop
cmp
pop
shrl
adcl
sbb
cwtl
inc
mov
mov
dec
sahf
sbb
add
jae
lret
lods
mov
addb
inc
push
in
inc
movsl
push
lcall
rcll
inc
mov
sub
cwtl
les
gs
outsl
sub
xor
ret
aad
insb
js
mov
or
out
cmpsl
scas
shll
mov
mov
jg
sbb
mov
jno
jle
mov
hlt
orb
fcmovne
mov
enter
and
dec
ret
xor
add
mov
push
push
push
add
call
cmpsb
nop
pusha
inc
mov
rorl
jae
scas
mov
sub
or
and
add
and
rorb
adc
adc
in
icebp
ljmp
aas
aaa
stc
loop
std
inc
aaa
shl
out
nop
cli
rorl
push
imul
lds
mov
mov
in
out
mov
adc
ljmp
lret
clc
cmc
mov
imul
add
hlt
movsb
dec
movl
add
jecxz
cmpsb
adc
mov
test
xorl
add
imul
jl
xchg
lcall
mov
jb
xor
ljmp
inc
ja
pop
mov
out
sbb
or
cmp
aaa
ret
cmp
clc
jp
aaa
sbb
pop
flds
stos
pop
fsubp
push
or
inc
push
aaa
mov
sub
add
xchg
push
add
in
xchg
xchg
mov
imul
inc
out
les
arpl
scas
cs
jb
lcall
or
push
stc
out
cmp
stc
mov
enter
xor
cmp
icebp
punpcklwd
dec
pop
test
cmc
ss
movsl
mov
or
movsb
imul
dec
add
mov
insb
lods
ja
dec
shlb
in
xchg
mov
sub
sbbb
and
jecxz
sub
stos
mov
movsb
dec
rcr
add
in
push
mov
cmc
xchg
mov
fisttpll
xor
jo
adc
std
fdivr
push
jmp
xchg
sub
addr16
mov
dec
stc
imul
mov
cli
add
ret
adc
xchg
inc
xor
mov
sub
push
cmc
sub
js
test
stc
mov
inc
sti
addr16
movsb
stos
sar
es
fbld
mov
ljmp
cli
loopne
dec
inc
and
sub
test
mov
dec
test
fs
sahf
inc
sarb
push
mov
add
arpl
iret
ret
mov
mov
jbe
dec
adc
nop
mov
pop
loopne
into
movb
gs
cwtl
inc
mov
in
push
and
or
mov
fidivl
out
xchg
and
ret
cmovp
jns
jbe
ficomps
pop
mov
lods
les
test
jae
scas
cmp
pop
jle
js
jge
sbb
sub
aas
popf
xchg
scas
in
pop
out
cli
das
fisubs
or
les
rorb
scas
addl
loopne
mov
push
cmpsl
mov
mov
clc
iret
sub
enter
mov
out
sbb
inc
xor
loop
dec
lods
pop
ljmp
cmpsb
mov
enter
xchg
cltd
xlat
cli
imul
push
test
shl
iret
jmp
fcomip
or
fisubl
sahf
push
inc
cmp
dec
cli
pop
pop
jbe
lret
cwtl
pushf
xor
dec
ljmp
fstp
out
dec
pop
adc
fdivrs
inc
jmp
bound
dec
xchg
aam
in
add
je
lds
cld
add
shll
ja
aaa
or
inc
lods
add
mov
jecxz
mov
mov
shl
mov
test
test
cmp
xchg
imul
sbb
repz
adc
aad
dec
mov
or
test
enter
int
js
into
nop
dec
movsb
out
or
jno
cmpsb
dec
rcr
push
faddl
xor
lds
rorb
xchg
add
sub
cltd
hlt
js
pushf
pop
push
mov
mov
xchg
dec
cmc
or
xor
dec
std
cld
sub
sbb
sbb
loope
ret
or
sub
mov
cmp
sbb
sbbl
mov
out
das
xor
aas
mov
mov
test
add
in
andl
movsl
bound
fsts
loopne
lea
mov
push
je
out
fsts
jecxz
in
mov
repnz
idivl
or
mov
xchg
sti
ja
js
int3
push
add
xchg
push
adc
loope
in
fisubrl
jno
lahf
cmp
mov
shr
mov
xchg
sbb
jl
cmp
dec
jecxz
clc
icebp
repz
push
cmp
mov
or
push
ret
lods
fdivrs
jns
mov
jns
mov
fcompl
mov
xchg
mov
popa
lods
fmuls
das
sbb
pop
inc
xor
push
sbbl
daa
cmp
add
idiv
out
jbe
xor
lret
inc
iret
repz
arpl
sub
int
imul
push
les
aam
and
adc
sub
sahf
das
push
lret
sbb
clc
and
cld
xchg
scas
and
sbb
rcl
je
or
out
and
sbb
adc
and
popa
fsubs
cwtl
jp
cmpsl
sbb
mov
jae
mov
adc
outsb
mov
jmp
mov
add
xor
scas
andl
cltd
rclb
outsb
fidivrs
fldl
repnz
sub
iret
pop
js
inc
cltd
pop
inc
push
mov
push
icebp
iret
sti
inc
xor
pop
xchg
pop
or
imul
pop
outsb
add
leave
outsl
jbe
fldl
pop
dec
sbb
out
adc
push
add
lret
pop
push
jge
add
ret
ret
add
loop
lret
arpl
loope
test
pusha
aaa
fisubs
test
data16
xchg
mov
mov
push
push
xlat
xchg
and
aam
jbe
cli
int3
ffreep
add
mov
mov
dec
xchg
adc
shrl
sbb
test
pop
lcall
outsl
xchg
in
lods
and
jae
mov
ret
xchg
sub
jle
mov
outsl
fcmove
in
fstps
cwtl
sub
mov
into
jp
mov
cmc
dec
stc
repz
loope
add
outsl
xor
sbb
ret
mov
or
inc
je
or
ja
mov
push
adc
jmp
nop
rclb
ret
lcall
xor
mov
xor
xchg
push
push
cmp
lret
shrl
mov
mov
jbe
push
push
inc
xor
dec
and
daa
pop
push
mov
mov
cmc
pop
xchg
push
add
incb
xor
and
loope
fiaddl
js
push
out
std
insb
sub
test
std
inc
cmp
cmp
jnp
cmp
jmp
jne
fbstp
xchg
or
cmp
mov
mov
jae
outsl
sub
jmp
dec
int
into
sti
mov
xor
int
sahf
adc
jae
sarl
fcmovnu
mov
out
popf
gs
outsb
xchg
jecxz
sbb
and
mov
add
mov
fdivs
sahf
ss
adc
add
add
insl
les
mov
jae
push
pop
mov
imul
mov
xchg
das
inc
xchg
les
stos
fs
je
mov
icebp
lret
mov
push
divl
or
out
fwait
stc
cwtl
rcl
hlt
sub
sbb
push
jmp
sub
pop
add
out
mov
mov
lret
ficoml
out
loope
pop
out
lea
and
data16
stos
and
test
in
cmp
sub
mov
int
xchg
mov
jae
xor
jb
push
setns
sub
movsl
lea
icebp
xchg
fidivs
ret
or
das
ljmp
xor
pop
pushf
push
xor
addr16
shll
popf
pop
std
xlat
and
or
mov
into
pop
push
cmp
cmp
in
lods
mov
dec
mov
hlt
arpl
jo
aad
mov
outsb
mov
mov
mov
in
mov
jmp
sbb
mov
or
pop
das
xchg
and
push
fdivrp
ret
bound
dec
mov
pop
addl
xchg
xlat
push
clc
mov
mov
pop
mov
inc
in
adc
mov
sbb
jecxz
mov
inc
and
movsb
movsl
jns
popf
inc
je
enter
mov
imul
scas
jns
aas
cmpsl
je
mov
push
ss
jae
cltd
or
inc
xchg
dec
and
xchg
lods
lret
pop
pop
rcrl
sti
jge
or
in
mov
scas
dec
ds
insl
into
jp
fldt
mov
sarb
lods
pop
fsubs
mov
ret
mov
addr16
jp
mov
out
aad
out
mov
or
xor
pop
in
inc
cli
push
or
cmp
adc
and
push
pop
movsl
add
es
jb
push
fcoml
adc
xchg
add
fsubr
xor
push
cmp
je
fisubrl
enter
scas
inc
in
sbb
fnsave
dec
sahf
sub
sub
jb
inc
and
and
push
add
jno
sahf
pop
push
clc
roll
cmp
out
sbb
lods
jp
outsl
pushf
inc
jbe
xchg
jb
loopne
add
sarl
push
ja
add
movsl
xlat
popw
dec
decl
jl
jge
mov
and
clc
or
mov
pop
and
push
mov
ljmp
fistl
int
cli
icebp
mov
jge
jp
lcall
add
mov
jns
xchg
mov
pop
out
inc
dec
iret
inc
and
pop
cmp
pop
cli
js
pop
mov
sbb
sbb
dec
not
into
cmp
popf
xor
and
mov
jbe
add
hlt
xchg
push
push
bound
mov
cmpsb
jns
xchg
cmp
pushf
adc
iret
push
adc
xchg
fsubr
sbbl
lds
mov
bound
jno
pcmpgtd
push
inc
jecxz
ret
mov
sub
cltd
and
add
mov
mov
push
addr16
and
or
mov
scas
das
cwtl
or
add
xor
push
cmp
int3
xchg
in
mov
jb
jp
ljmp
xchg
push
sbb
xor
pop
std
xlat
fidivl
loopne
fmul
cmp
lret
leave
jmp
leave
cs
push
push
mov
lock
and
mov
stos
dec
xor
jge
rcll
and
jnp
cmp
inc
popa
jb
push
int
cs
in
fldenv
sub
xchg
repnz
cld
xchg
jnp
lods
aas
and
mov
iret
lods
ret
cmp
jge
cmpsl
sar
jl
js
cmp
divb
cmp
test
adc
add
xor
inc
test
out
repnz
iret
push
test
pop
sub
popa
and
xchg
neg
cltd
lds
jns
ret
rorl
inc
cld
shrl
nop
out
enter
stc
orb
and
jmp
xor
dec
popf
je
adc
sbb
push
test
fisttps
pop
iret
and
pop
pop
xchg
lea
xor
js
in
into
leave
adc
mov
pop
xor
cwtl
aas
leave
push
xchg
aad
and
idiv
into
jecxz
jp
sub
jge
and
fldcw
add
idivl
jae
jns
aaa
outsb
jae
ja
cmp
pop
and
sub
shl
sub
in
cmp
stos
popf
shll
int
fs
push
dec
sub
xor
xor
fbstp
sub
lock
inc
jns
insb
enter
mov
sub
xchg
insl
sti
test
nop
aaa
filds
inc
stos
adc
xchg
xor
negb
pop
and
lcall
stos
int3
jl
mov
stc
mov
std
test
cmc
repnz
xor
xchg
xchg
repnz
dec
adc
dec
and
hlt
flds
fisubs
jg
idivb
push
js
dec
int
loopne
imul
out
mov
out
dec
je
and
lret
bound
movsb
fdivrp
in
lods
in
adc
mov
pushf
jns
sbbl
outsb
mov
and
add
stos
stc
xchg
in
outsb
cld
stos
das
sub
mov
jg
sbb
push
sarb
mov
leave
push
push
je
je
mov
pop
loope
push
hlt
adc
test
cmp
subb
mov
mov
adc
loopne
lods
jge
mov
and
mov
add
sub
ja
out
repz
lods
mov
cmp
or
dec
dec
cmpsb
xor
mov
add
push
mov
lahf
f2xm1
inc
xchg
movsb
lods
out
lds
add
mov
push
bnd
clc
xchg
pushf
inc
mov
lds
mov
scas
mov
pop
loop
xchg
mov
adc
pop
pop
dec
leave
cmp
pushf
cmp
or
adc
and
stc
push
lock
xor
xlat
gs
jl
enter
add
mov
insl
sub
jg
orl
sbb
xchg
inc
cmpsl
cmpsb
in
ficompl
cwtl
inc
jmp
fsubl
pop
js
inc
push
sub
sbb
icebp
push
fiadds
fstpt
jmp
cmp
inc
adc
jb
mov
test
jge
daa
mov
or
leave
lock
dec
iret
sub
inc
js
push
cmp
prefetch
or
pop
aam
dec
cmpsl
pop
loopne
inc
dec
sti
jb
add
xchg
and
xchg
into
mov
nop
leave
push
adc
dec
sub
jg
xchg
shl
pop
push
enter
pop
mov
or
add
add
lahf
arpl
mov
lcall
pop
add
sbb
pop
into
pop
xor
std
shlb
jge
jb
dec
pop
jb
lcall
std
das
xor
popf
ficompl
or
adc
aam
jge
imul
jns
mul
cmp
fsubs
in
and
jb
dec
lock
ret
es
sbb
in
xchg
xor
sbb
mov
inc
mov
pop
xor
das
jo
test
sub
pop
sbb
cltd
popf
ret
cmpsl
xor
inc
cmp
dec
pop
mov
mov
jbe
fimuls
and
inc
mov
je
cmpb
movsb
pop
popf
lods
daa
lret
add
shlb
inc
mull
push
daa
pop
std
sub
mov
fwait
mov
push
jnp
sarl
mov
xchg
and
pop
mov
lcall
inc
nop
in
scas
popa
or
xchg
pop
or
rol
jmp
nop
movsl
mov
mov
sbb
sub
push
adc
pop
repnz
xchg
mov
imul
xchg
stos
insl
pop
fsubrs
les
inc
imulb
mov
xor
xor
rol
sbb
addr16
mov
in
xor
xor
sti
ret
inc
in
into
cli
mov
mul
insl
mov
bound
in
sbb
mov
inc
cmp
in
and
shl
sti
lea
xor
in
xchg
jmp
sbb
jnp
pop
dec
sub
pop
subb
lahf
xchg
out
xor
sbb
insb
repz
fnsetpm(287
scas
sti
mov
int
mov
pop
outsb
mov
sub
pop
mov
push
push
or
stos
loopne
push
daa
repz
cltd
inc
sbb
or
xor
xchg
sti
cmp
addr16
testl
inc
dec
rcl
mov
outsb
frstor
into
xor
mov
xor
sti
lock
inc
mov
mov
pop
or
jb
repz
fcompl
jb
sub
jp
push
dec
dec
addb
adc
arpl
fisttpll
in
mov
cmpl
pop
cltd
or
mov
push
inc
push
arpl
inc
ja
shlb
mov
lret
mov
clc
clc
mov
adc
inc
mov
jge
or
test
push
js
out
add
jno
xchg
dec
insl
or
jbe
repnz
push
scas
or
xor
ljmp
or
cltd
add
insb
movsl
xor
xor
xor
cmp
fwait
pop
add
insb
pop
aam
lods
add
pop
xorl
movsl
orl
stc
xchg
cmp
jl
adc
mov
mov
inc
add
inc
jne
or
push
mov
mov
popa
sub
popf
jnp
vmwrite
pushf
add
jo
loop
les
jo
sub
mov
adc
xor
pop
scas
mov
lock
pop
adc
jl
setge
arpl
fs
lret
pop
jns
push
fwait
insb
mov
orb
jae
mov
icebp
jno
popf
lock
cmp
js
xchg
mov
loopne
cld
lock
sbb
stc
push
stc
icebp
insl
sbb
out
pop
jae
ljmp
jae
cmp
dec
mov
adc
jmp
int3
adc
add
dec
adc
movl
addb
xor
or
iret
lods
sub
dec
add
jl
dec
popa
mov
pop
and
aas
mov
ja
dec
sub
jmp
lret
jnp
jle
jae
push
mov
popa
mov
insl
mov
xor
mov
adc
sbb
mov
xor
scas
xchg
ds
stc
aam
out
in
lds
mov
or
stos
cmp
outsl
cld
aam
cmp
xlat
mov
xor
pop
mov
fdivl
roll
or
ljmp
pushl
xor
dec
pop
jp
mov
inc
adc
or
or
js
mov
clc
mov
cli
add
fwait
add
lods
mov
jbe
sahf
aad
fimuls
jl
ss
adc
mov
iret
dec
inc
es
paddd
xchg
or
or
ljmp
arpl
mov
das
clc
cmp
aad
mov
std
rcl
mov
mov
mov
and
stos
jne
addl
xor
into
xchg
pop
xchg
mov
outsl
jmp
xor
lock
sub
adc
rcr
in
fimull
fcoml
push
inc
push
add
cmp
pop
shlb
xchg
dec
mov
xor
mov
add
xchg
inc
adc
nop
sub
lods
fnsave
mov
jo
and
sub
mov
or
sbb
ficompl
pop
push
lods
aaa
inc
ja
js
imul
lds
mov
hlt
mov
pop
js
sti
nop
mov
js
sbb
xchg
lret
movsb
mov
lret
push
jb
aam
nop
ficomps
xor
add
pop
or
jne
imul
fs
pushl
adcl
or
ret
lret
lret
push
cld
jbe
mov
int3
cmpsb
adc
and
sbb
cmp
hlt
jne
scas
sbb
and
sbb
loop
in
push
sub
mov
sbb
scas
push
loope
mov
sbb
es
aas
pop
or
cli
mov
jns
stos
popf
fsubs
dec
inc
mov
mov
fmull
test
mov
gs
pop
sti
mov
pop
cmp
std
add
call
lods
outsl
out
jne
lahf
lods
lds
cld
push
repnz
jecxz
inc
push
pop
jnp
or
push
test
call
arpl
das
aad
cld
iret
or
push
adcl
push
in
jmp
add
adc
popf
shlb
mov
ds
pusha
rorl
or
mov
out
mov
mov
adc
in
add
jno
jle
pop
and
jecxz
out
imul
sahf
inc
cmpsb
imull
inc
subl
hlt
pop
jb
scas
dec
jge
mov
mov
push
mov
loope
xchg
push
add
xor
jbe
mov
mov
ror
jle
pop
aam
mov
dec
lahf
ret
ret
fidivs
cs
lcall
loope
pop
sub
fcmovne
lret
out
inc
jmp
pushf
push
inc
mov
xlat
int3
fcomip
mov
xchg
scas
iret
sub
mov
mov
int
dec
xchg
cwtl
inc
add
bound
add
add
add
mov
xchg
stos
test
pop
add
mov
xchg
fnsave
mov
pop
call
cmp
addl
jecxz
fidivrs
pop
lret
cld
dec
out
shrl
mov
lods
jp
scas
popa
xchg
loope
xchg
mov
mov
mov
shrl
sbb
xor
cmpsl
mov
or
xchg
jmp
adc
mov
or
mov
rcr
jno
rorl
push
inc
aam
mov
rcl
cmc
je
cmp
in
cld
ret
fwait
data16
xor
xchg
push
data16
xchg
lcall
out
sbb
ror
fwait
xchg
mov
mov
lret
xchg
xchg
push
dec
jno
enter
adc
roll
mov
adc
pop
in
push
nop
bnd
out
out
std
pop
jbe
aas
push
jae
sub
pop
push
sub
xor
shl
pop
pop
out
lret
insb
xchg
jae
data16
jmp
add
andl
push
mov
daa
cltd
and
aas
inc
loopne
mov
push
and
in
push
aaa
out
cmp
cmpsb
mov
iret
and
and
test
jns
jmp
lcall
pop
ja
mov
gs
inc
cmp
fnstenv
push
push
repz
mov
jne
call
fnstcw
sbb
add
cmp
add
out
hlt
mov
mov
dec
add
xchg
enter
sbb
pop
and
dec
int3
decl
fidivs
ficoml
inc
xor
fadds
mov
or
pop
js
xchg
cmp
fstpt
lods
mov
inc
mov
mov
sub
inc
lret
lcall
cwtl
push
mov
mov
out
stos
test
pop
dec
rorb
mov
out
orb
jae
shlb
in
cmp
in
xor
sahf
stos
call
ret
lds
adc
xlat
mov
jnp
pop
sub
pop
mov
inc
pop
sub
xor
and
mov
movsb
cli
aad
jnp
out
add
shlb
dec
pop
hlt
pop
movsb
insl
push
stc
mov
test
dec
sbb
imul
or
jmp
inc
arpl
jmp
popf
shll
and
cld
add
sub
inc
cmp
fisttpll
xchg
pop
mov
daa
inc
and
cmp
cmp
and
mov
inc
pop
call
loopne
lock
inc
and
mov
adcl
cmpl
adc
popa
fucom
pop
mov
jnp
jno
pop
cmp
rol
sbb
aam
in
ljmp
mov
test
inc
ficoml
mov
subl
mov
faddp
mov
pop
scas
pop
xchg
test
out
xchg
xor
pop
aaa
xor
imul
popa
cmp
or
jge
inc
inc
mov
ja
cltd
mov
jb
iret
push
sbb
and
push
mov
or
dec
fldenv
lcall
xlat
and
mov
xor
push
xor
lret
and
fbstp
test
jp
dec
push
scas
mov
pop
cmpsl
aaa
mov
inc
mov
pop
lcall
lods
jle
scas
daa
pushf
popf
pop
add
xor
jo
push
jp
mov
insb
repz
mov
xchg
xchg
fnstenv
dec
jne
shl
ret
mov
pop
push
shll
xchg
in
or
cmp
fsts
loopne
fwait
pusha
fldlg2
mov
push
adc
adc
data16
cltd
xchg
negb
movsl
sub
jb
fdivrs
push
jp
cmc
mov
xchg
and
pop
std
adc
mov
push
iret
in
cmpsl
jnp
cmp
lret
fnstenv
ljmp
int3
cmp
arpl
ret
mov
add
sahf
jl
fsubrs
cmp
xchg
mov
aad
sbb
push
out
leave
cmp
mov
outsb
lret
inc
dec
push
cmp
dec
sub
or
popa
roll
cld
sub
sub
push
movsb
loopne
or
push
out
xor
mov
cmp
inc
lret
cmpsb
sbb
push
xlat
fistpl
jmp
add
les
test
xchg
sub
dec
mov
mov
dec
xchg
jae
mov
popa
ds
jo
fucomi
inc
mov
mov
and
push
rcrl
add
xchg
mov
jmp
sbbb
sub
sbb
fnsetpm(287
sub
mov
outsl
inc
xor
mov
in
enter
adc
pusha
out
xor
inc
push
lret
push
lret
and
test
inc
jle
rorl
push
aas
int3
adc
inc
sbb
fldenv
aad
shll
fs
adc
push
mov
mov
mov
addr16
js
mov
andb
subb
mov
loope
or
mov
call
scas
mov
adc
fadds
daa
jge
aam
mov
adc
mov
shlb
xchg
and
dec
push
fidivrl
adc
stos
insl
cwtl
inc
fucom
sbb
sbb
and
paddusb
mov
mov
sbb
ret
addr16
lea
sbb
incb
xor
lods
mul
mov
stos
es
lcall
mov
ss
jne
sbb
lahf
push
lret
mov
sbb
or
loope
or
lret
add
scas
andl
cmpsb
dec
fmuls
pushf
sbb
mov
jge
lahf
in
and
andl
in
outsb
or
or
pop
sahf
push
dec
sbb
in
negb
test
lods
sbb
push
dec
or
scas
das
jmp
fcoms
mov
nop
mov
insb
clc
std
inc
add
js
jmp
xor
mov
jo
or
inc
stos
add
aam
and
nop
push
test
ret
cmpsb
add
mov
or
mov
insb
pop
lret
push
scas
iret
pop
out
mov
pop
fsubrl
outsb
xlat
mov
xchg
rcrl
in
jbe
xor
lock
mov
stos
test
inc
jl
adc
rcrl
shrb
es
aad
pop
repz
inc
ret
fsts
add
mov
jecxz
push
lds
adc
daa
mov
sub
sbb
loope
xchg
jl
xor
or
adc
add
push
inc
or
pop
cltd
rcll
fwait
adc
dec
add
imul
movsb
sbb
sbb
or
mov
xchg
inc
fadd
pop
cmpsl
aam
shll
push
loop
sar
pop
push
xor
dec
shlb
adc
rcl
gs
adc
jge
adc
fnstsw
add
sbb
cmp
hlt
in
in
sub
cmpsl
mulb
fstl
inc
rcl
out
mov
orb
mulb
fildl
dec
data16
add
or
dec
cmp
add
ds
int
in
hlt
mov
push
sti
or
and
inc
cmp
cmpl
movsl
xchg
dec
jae
wbinvd
hlt
inc
inc
icebp
addl
add
sbb
inc
xor
test
mov
cmpsb
mov
mov
scas
inc
lcall
xor
mov
je
pushf
sub
fs
dec
mov
js
sub
mov
test
in
out
adc
imul
iret
cwtl
dec
mov
pop
ret
xchg
xor
dec
push
mov
mov
fldenv
mov
pop
push
outsl
fcmovnu
pop
xchg
sub
int3
loopne
dec
xchg
sub
negb
fld
mov
insb
pop
mov
pop
in
add
sbb
mov
xorl
test
mov
cmp
or
mov
cmpsl
lods
jo
mov
xor
push
jb
adc
clc
rcl
lahf
rcll
inc
xlat
repnz
lret
mov
aad
push
sahf
repz
mov
jecxz
mov
dec
cld
and
scas
rcrl
dec
jnp
mov
je
jp
shl
sbb
lods
xlat
std
call
fs
sbb
ss
jo,pt
aaa
test
push
jns
roll
hlt
cmp
jo
movsl
jno
lods
xor
sbb
mov
jmp
lods
mov
jp
mov
jge
cmpb
int
imul
cwtl
mov
pop
sbb
mov
push
sbb
cmpsl
inc
xchg
das
shl
and
arpl
ljmp
test
cmp
mov
push
xor
adc
pop
mov
js
pop
xchg
ret
pop
xor
mov
aas
mov
push
jmp
test
sbb
mov
lea
loop
mov
xchg
mov
andb
inc
aad
xor
mov
out
es
and
add
dec
shrb
sub
je
xor
addb
and
sbb
sbb
aad
sub
xchg
mov
pop
add
imul
ljmp
inc
fbstp
sbb
loopne
imul
adc
jge
or
test
inc
add
dec
pop
hlt
mov
sub
fcoms
lock
out
mov
out
popa
mov
pop
out
into
test
inc
shrl
pop
outsl
or
fdivl
inc
into
arpl
clc
or
push
subb
cwtl
jns
jne
mov
dec
add
sub
and
fiadds
mov
es
sbbl
cli
insl
xor
push
stos
xlat
add
push
sbbl
adc
xchg
leave
xchg
aaa
mov
sub
stos
dec
cmp
test
sub
hlt
mov
cmp
in
mov
sti
out
out
shr
sti
inc
and
loop
in
push
in
mov
push
pause
mov
add
mov
outsb
mov
sub
mov
xchg
ficomps
dec
sbb
pop
and
cli
lret
fs
xlat
sahf
cwtl
xor
xor
lahf
sub
in
mov
jle
mov
cmp
jns
out
in
lret
adc
imul
pop
outsl
mov
sahf
iret
out
push
lods
xor
js
inc
repnz
kaddb
imul
inc
mov
or
add
fildl
ja
inc
or
in
ret
es
es
mov
pop
int
cmpsl
adc
lds
xchg
jle
jnp
flds
cmp
add
mov
mov
add
jle
leave
rcll
fld
fidivs
sbb
enter
xchg
or
or
cmp
push
scas
mov
je
xor
jbe
push
ret
cmp
test
jb
scas
inc
lret
mov
push
xor
and
cli
cmp
jmp
and
test
sarl
add
jae
mov
mov
adc
or
sbb
lret
loope
cli
popa
adc
pusha
cld
dec
push
add
sti
cmp
pusha
pop
sti
dec
and
adc
rorl
lods
into
loopne
mov
push
lea
jnp
in
lock
out
stos
ret
or
xchg
fistpll
sub
mov
xchg
test
jne
mov
adc
sbb
cmp
aam
in
scas
shll
ss
dec
test
dec
mov
out
xor
push
jns
sub
iret
fisubl
mov
std
push
jl
ds
jns
aaa
arpl
std
fwait
or
fs
sar
inc
pop
mov
sub
in
cmc
addr16
lds
subb
or
pop
pop
cs
xchg
clc
jmp
sub
enter
testl
imul
cmpsl
jns
outsl
movsb
xlat
sub
test
shrl
out
flds
pop
in
cmp
call
stos
pop
sub
sahf
sarl
nop
jnp
shlb
leave
mov
popf
cmc
mov
cmp
jo
fcoml
lret
scas
sub
jno
dec
iret
popf
mov
aad
imul
xchg
pop
inc
mov
mov
cmp
pop
adc
shlb
pshufw
jae
mov
filds
outsl
xorb
addr16
mov
xor
in
sbb
inc
cltd
add
ret
jns
je
rorb
or
in
sub
mov
lds
xor
aam
fiadds
mov
and
rorb
andl
mov
pop
or
pop
cmc
test
sbb
mov
insl
mov
sub
jae
mov
xchg
fsubrs
pop
cli
jmp
xor
mov
cmp
pop
rorl
roll
fs
sub
rcrb
mov
ret
dec
loop
or
in
dec
add
test
or
ret
cs
andb
cltd
sbb
pop
mov
pop
rorb
xor
add
add
sub
jmp
mov
orb
push
or
inc
push
add
imul
lock
push
dec
inc
dec
out
push
sub
sbb
rcll
push
aad
stos
xchg
das
xchg
jns
dec
int
lds
push
rorb
lcall
jns
push
ds
dec
out
jmp
xchg
cwtl
or
stos
enter
xchg
mov
repz
mov
xchg
or
sbb
or
add
add
add
or
xchg
jnp
mov
pop
repnz
inc
subl
dec
dec
gs
lods
lahf
jmp
lcall
orb
aaa
mov
xchg
lahf
cmpsl
sarb
pusha
mov
call
mov
xor
mov
pop
or
scas
mov
inc
pop
cld
testb
and
and
mov
rcrb
outsb
adc
xchg
jecxz
xor
or
sbb
cmp
nop
sub
stc
jo
es
test
push
shlb
call
iret
shlb
push
inc
sbb
mov
inc
dec
je
test
scas
sub
aas
jae
mov
inc
movsl
mov
aam
xchg
aad
std
sbb
pop
jo
leave
out
mov
sbb
rcrb
jb
outsl
les
cltd
push
imul
insl
sbb
ss
adc
rorl
test
fdivl
repz
orb
sub
mov
add
adc
pop
aam
aaa
popa
pop
sub
nop
rcr
dec
inc
repnz
jl
cli
pushf
ljmp
inc
xchg
inc
xchg
cmpsb
ljmp
mov
dec
mov
lahf
sarb
add
adc
mov
test
scas
sub
lret
mov
shrb
fldl
fld
push
arpl
outsb
pop
push
pop
mov
xchg
xchg
push
cmp
xchg
scas
sbb
cmp
mov
ja
adc
pop
shr
daa
data16
jne
cmp
in
xchg
fidivs
xchg
das
loope
loope
jns
repnz
int3
popf
add
jno
push
fwait
in
ror
xor
insl
aaa
sub
pusha
pop
insb
xor
mov
or
or
adc
xchg
push
daa
inc
adc
mov
sahf
pop
inc
movsl
dec
dec
mov
jb
pop
sub
push
fcompl
push
pop
fistps
adc
mov
aam
inc
mov
movsl
mov
leave
sahf
inc
movsl
sub
hlt
enter
pop
push
in
mov
jae
je
push
mov
inc
into
mov
mov
jne
jns
adc
in
jb
sub
imul
push
push
test
mov
int
push
jmp
adc
movsb
in
jb
cmp
jl
in
and
mov
scas
mov
in
mov
adc
push
fs
in
sbb
jecxz
cs
addl
cmpsl
imul
push
pop
leave
lds
das
wbinvd
in
int
sub
dec
sub
pushf
mov
testl
or
inc
sbb
cmc
mov
fldenv
push
cmp
in
mov
mov
push
stos
cmp
les
push
test
pop
addr16
mov
fsubrl
mov
xchg
inc
loope
rcll
and
sub
mov
xchg
jp
mov
push
push
sub
mov
xor
lcall
lret
sbb
sbb
cmp
imul
iret
pop
mov
fistl
stos
in
in
jo
cltd
xlat
xchg
gs
es
jge
push
out
jno
or
es
xor
in
xor
call
mov
sub
pop
cmp
popa
daa
loop
enter
jle
add
int3
cwtl
jne
bound
pop
or
mov
cmp
psubusw
mov
enter
lcall
std
and
pop
fs
sbbl
sbb
aam
shl
jo
icebp
mov
cmp
and
add
jno
jp
data16
aas
jnp
mov
jmp
push
mov
push
mov
popf
mov
inc
mov
in
cmpsl
les
fidivrl
or
enter
je
pop
imul
mov
mov
sub
pop
sub
xchg
push
pop
and
das
add
mov
lods
pop
int3
orb
popf
or
stc
sub
mov
scas
add
rcll
mov
lods
lcall
fdivp
sbb
xchg
mov
push
adc
xor
ss
jo
sub
test
sahf
pop
leave
inc
or
js
jne
popa
movsl
add
inc
inc
add
jb
ret
or
sbb
icebp
and
repz
lock
push
fadds
inc
xor
add
int
xchg
inc
fwait
mov
cld
sarb
cmp
mov
lods
add
mov
push
es
clc
js
add
sbbl
xchg
pop
aas
lock
popa
mov
pop
mov
jae
xchg
or
movsb
mov
xchg
in
fsub
sbb
shll
arpl
add
inc
int
test
mov
shrb
popl
pop
aam
je
fadds
adc
lds
push
jle
jmp
adc
jp
aas
pop
out
scas
repz
or
mov
adc
inc
pop
in
pop
push
into
xchg
adc
out
pop
aam
cwtl
daa
mov
sti
movsl
xchg
imull
mov
popa
popa
les
cs
fldenv
jp
add
xchg
and
dec
and
add
add
jmp
js
mov
jno
jecxz
test
pop
pop
add
mov
pop
inc
jle
sub
pop
ret
sbb
iret
lcall
sub
cs
test
mov
xchg
lret
mov
push
jp
int
or
or
cmp
mov
in
fldt
push
inc
xlat
fucom
out
and
and
adc
out
jmp
lods
fistl
stc
pop
push
movsl
dec
mov
mov
cmp
call
popf
cmp
in
sbb
push
mov
mov
push
adc
push
mov
mov
xlat
push
ss
shlb
loope
test
mov
out
inc
ffree
call
xchg
lds
push
xchg
fs
jge
push
cmp
out
lcall
lret
lret
cltd
sub
cmp
xchg
inc
lahf
outsl
loop
test
cmpsb
stos
rcll
adc
lods
in
jmp
sub
rcr
pop
or
push
xor
test
xchg
ret
and
das
pop
pop
push
or
cmpsl
sbb
loop
jp
jns
pop
cmp
mov
inc
out
jecxz
mov
jge
jp
fidivs
int
xor
or
or
ja
fiaddl
add
in
jle
ret
repz
std
jle
loope
mov
mov
add
imul
sbb
in
stc
ss
dec
or
mov
mov
ja
lods
sub
repnz
or
mov
inc
adc
loop
jg
mov
cmpsl
cmp
je
push
outsb
popa
xor
jne
jmp
sbb
mov
mov
pop
xchg
xchg
in
jle
repnz
xchg
fwait
cmp
jecxz
sarb
stos
pushf
cmp
sbb
stos
and
fadds
scas
cmp
mov
jnp
push
xchg
pop
cmc
cmp
mov
xor
sbb
enter
jnp
hlt
nop
in
rcr
ficomps
push
imul
mov
mov
ja
mov
repz
bound
popa
jo
or
pop
rorl
imull
push
jg
pop
enter
xor
or
xor
outsb
cmc
addb
arpl
lret
test
lds
sbb
xor
cwtl
xchg
jp
sub
jb
cs
lret
sbb
imul
or
icebp
jb
aaa
adc
hlt
and
xor
lcall
and
inc
das
dec
test
fidivrl
dec
cmpsb
push
push
aaa
scas
add
xchg
insl
shlb
loop
aaa
fsts
fldt
or
addr16
fimuls
xchg
lock
inc
jmp
ss
adc
mov
sahf
cltd
fisttpl
insb
cmp
dec
push
inc
pop
lret
test
xchg
mov
pop
scas
cmp
add
cmp
sub
data16
fbstp
push
jl
fnsave
rorl
orl
adc
push
lcall
mov
stos
int
cmp
mov
jle
xchg
xor
add
movsb
adc
mov
xlat
enter
enter
jbe
add
sub
sub
arpl
outsl
adc
jp
cs
call
out
cltd
and
xor
mov
jbe
imul
int3
sub
inc
mov
icebp
push
ret
or
cmp
dec
popa
sbb
lea
mov
mov
or
or
pop
pop
push
addr16
repnz
push
lret
adc
cld
adc
cmp
pop
popa
lret
mov
mov
push
dec
jnp
fadd
lcall
mov
stos
cltd
and
imul
xlat
xchg
ds
sbb
sbb
in
push
mov
insl
jnp
into
cmp
idivb
jg
mov
inc
jo
inc
das
sbb
movsl
lret
in
xor
sbb
jb
mov
push
adc
jns,pn
arpl
push
mov
dec
insl
mov
hlt
and
leave
mov
inc
pop
push
loop
and
addb
or
xlat
mov
scas
cli
popf
out
mov
repz
ljmp
and
push
lret
filds
jae
addb
shr
xor
movsb
retw
and
pop
stc
cli
outsl
and
mov
cmp
inc
inc
mov
jo
sbb
inc
xchg
xchg
sub
push
dec
mov
daa
add
call
pusha
xor
mov
mov
xor
ds
jl
out
xor
pop
lahf
pushf
push
nop
pusha
ss
aas
out
loope
dec
add
xlat
or
xor
xchg
xor
or
addr16
daa
xchg
idivl
jmp
jns
pop
fs
ss
cmp
mov
insb
xchg
xor
loopne
daa
adc
add
push
pop
push
ret
mov
dec
xorl
push
jecxz
and
and
jnp
xor
mov
push
cmp
test
out
in
pop
rol
rcrb
sahf
loop
incl
xor
xchg
outsb
nop
icebp
int3
orl
bound
dec
iret
repnz
add
mov
add
pop
dec
ja,pt
inc
popf
psraw
test
sbb
fbstp
sbb
xorl
lret
arpl
inc
inc
lods
into
subb
into
stos
jne
mov
mov
cld
test
sbb
xchg
dec
xchg
incl
stos
xor
sbb
xor
cltd
cmp
jp
leave
mov
scas
test
xchg
sub
push
inc
in
jno
and
sarb
fucomp
sarl
push
shrb
mov
jmp
add
xor
dec
inc
mov
lret
xor
shlb
cltd
mov
outsb
mov
inc
loope
out
leave
adcl
cs
dec
lea
or
dec
push
cmp
pop
mov
mov
inc
adc
dec
and
adc
adc
sub
or
scas
jp
loopne
ret
xor
movsb
jg
bound
cmp
adc
jbe
pop
mov
imul
cmp
inc
push
sbbl
push
test
or
sub
jno
outsb
jne
inc
add
outsl
les
leave
jge
add
or
addb
sub
ljmp
je
aad
dec
or
fs
push
pop
add
rcll
and
shrl
push
xchg
insl
mov
lahf
dec
mov
add
inc
and
xchg
cli
stos
ds
dec
in
pusha
push
pop
xchg
jecxz
mov
out
jg
fdivr
xor
data16
stos
iret
jge
pop
xor
ret
ds
arpl
movb
stc
rolb
mov
enter
nop
gs
dec
dec
popa
and
jge
and
or
subb
add
mov
push
aam
popa
push
mov
mov
fisttpll
leave
pop
cmp
mov
pop
sbb
out
sar
popf
imul
sub
mov
stc
mov
xchg
add
fnstenv
daa
test
dec
test
xchg
decl
pop
mov
xor
push
insl
mov
adc
test
push
jmp
inc
pop
push
pop
sub
sub
lret
push
xchg
or
push
cmp
mov
mov
mov
pop
push
inc
xor
insb
push
and
adc
repnz
imul
rcrl
sbb
cs
mov
stos
sbb
pop
or
jg
push
jno
popf
lods
stos
js
jmp
xchg
mov
mov
sbb
pushf
mov
lea
jmp
pushf
cmp
cmpsb
add
in
jns
mov
call
push
insl
push
sbb
adc
aad
mov
imul
imul
and
inc
movsl
sahf
sub
out
movsb
mov
mov
out
loop
push
iret
add
add
clc
sahf
out
or
sbb
add
add
xor
int3
xor
jns
mov
outsb
les
fs
jmp
repnz
fdecstp
sub
jb
out
inc
stc
or
xchg
jb
and
jmp
aad
ud2
pop
hlt
negb
in
or
iret
sahf
xor
je
cmp
iret
sbb
popf
mov
add
insl
add
dec
cmp
in
lods
gs
imul
popf
mov
lock
add
notb
scas
dec
push
push
loope
mov
ds
stc
shlb
ret
dec
dec
pusha
mov
cmpsl
and
sub
arpl
mov
or
push
jecxz
cmp
mov
pop
pop
mov
inc
daa
cmc
sub
inc
adc
push
sub
inc
xchg
sar
sbb
add
adc
lret
xchg
pop
jp
les
outsb
inc
aaa
add
in
outsb
fs
dec
jl
ds
lock
and
adc
lds
shlb
cmp
xor
scas
dec
add
insb
cmpsl
or
dec
loope
movsb
jmp
shrb
out
jmp
iret
repz
jno
in
scas
outsb
jns
dec
out
mov
aad
sahf
xchg
fcoms
imul
mov
fldl
inc
clc
mov
in
imul
adc
push
cwtl
lock
sbb
mov
cld
jmp
xchg
cmpb
or
scas
mov
loopne
leave
in
inc
or
xchg
xchg
jbe
hlt
fs
add
mov
js
add
rcl
pop
sub
leave
in
inc
ja
testb
popa
lahf
xchg
xor
xchg
cmpsl
lret
testl
flds
inc
dec
sbb
insl
aaa
jnp
sub
mov
xchg
mov
in
jo
mov
stos
cmc
xchg
hlt
sbb
adc
and
mov
or
pop
xchg
fdivrs
std
or
mov
mov
xor
shr
pop
xor
dec
adc
add
shrb
mov
repz
and
or
xchg
add
fwait
xor
or
mov
mov
push
mov
sub
dec
rorb
loope
sarl
push
lods
jne
fsts
enter
aaa
in
enter
and
xchg
ljmp
add
sbb
mov
movlps
es
rorl
jnp
loop
aam
mov
dec
xchg
pop
mov
std
cmc
inc
jnp
push
sub
push
adc
dec
stos
scas
and
sbb
dec
repz
data16
fadd
in
or
push
ds
les
movsb
xlat
shl
mov
dec
mov
nop
adc
dec
xchg
sbb
and
add
xor
lahf
dec
sbb
fsubrl
aaa
insb
mov
outsb
mov
inc
cmp
imul
mov
lret
xor
imul
adc
and
mov
mov
mov
push
pop
repz
jne
movsl
ficoms
xor
or
pop
cmpsl
inc
cmp
fdivl
lahf
cmp
mov
push
fs
cmp
mov
popl
mov
xor
insb
sbb
inc
cmp
adc
roll
ret
lods
cmp
pop
cli
mov
inc
cmpsb
insl
cmpsb
leave
les
and
xchg
pop
push
pop
pusha
jl
roll
push
jg
call
out
mov
sbb
arpl
cltd
fs
xchg
fwait
ss
data16
rcll
sbb
pop
inc
xlat
lock
inc
js
or
mov
xchg
mov
inc
fcmovnb
xor
repnz
xor
inc
xlat
inc
pop
dec
std
ljmp
and
call
adc
jb
mov
sti
fdivrp
aam
fisttpl
orb
lock
jle
pop
dec
ljmp
push
movd
dec
inc
mov
js
inc
fildl
push
enter
aad
jmp
dec
call
cmpsl
sbb
jl
int
dec
push
sti
arpl
dec
cmp
jl
stos
aad
popa
cmc
xor
insl
movsb
lahf
js
jne
xchg
call
mov
adc
decl
xor
mov
loop
in
arpl
bound
movsb
shl
push
sarb
jl
sbb
xor
ds
mov
in
orl
into
mov
adcb
mov
gs
push
push
out
fdivrs
rcl
out
jp
in
add
movsb
fbstp
aaa
sarl
ljmp
add
int
pop
inc
jle
xchg
adc
stos
hlt
xchg
sub
rcl
insl
insb
xorb
and
cmp
sbb
cmc
mov
or
mov
out
pop
aad
xchg
mov
in
push
push
xchg
clc
adc
test
into
sahf
cwtl
repz
das
loop
add
xchg
mov
insb
and
dec
jle
lock
xchg
cltd
cmp
xchg
scas
xchg
mov
xor
aam
cmovnp
sahf
lcall
test
sbb
mov
cmc
or
test
push
and
inc
push
and
in
dec
xor
outsl
rorl
stc
ret
subl
out
sub
insb
cmp
mov
xchg
jecxz
mulb
fdiv
mov
adc
cld
dec
ret
pushf
adcb
pop
nop
mov
xchg
sbb
adc
pop
outsb
xchg
ficomps
lods
ljmp
aad
pop
adc
pxor
stc
rorl
adc
jne
xchg
jmp
jnp
sbbl
dec
adc
jne
roll
cmpsl
ljmp
lret
xor
mov
dec
sbb
jecxz
stos
leave
adc
push
or
js
out
xchg
xchg
push
stos
outsb
mov
pop
daa
push
mov
ret
adc
inc
stos
adc
bound
cmp
and
scas
mov
mov
cmpsb
movsb
lock
mov
jb
scas
and
mov
push
add
lds
ror
sahf
jl
push
dec
mov
scas
not
pop
fwait
jecxz
aas
push
and
and
movsb
cltd
data16
push
lret
pop
jns
pop
xchg
or
lods
arpl
mov
inc
or
pusha
mov
lcall
ret
sub
pop
mov
mov
sub
lock
cmp
mov
iret
arpl
mov
icebp
lret
add
push
inc
jo
jnp
mov
mov
gs
sbb
pop
push
mov
mov
pop
mov
data16
lea
fdivrs
sbb
add
add
shlb
jg
stc
ficoms
inc
and
cltd
and
imul
add
les
lods
mov
mov
xchg
jbe
loop
push
imul
outsb
lahf
pop
rcll
movsb
mov
push
addr16
mov
push
mov
hlt
xchg
xor
xchg
and
repz
push
repz
insb
xorl
cmpsl
push
gs
js
cmp
mov
or
pop
adc
test
and
scas
sahf
or
out
pop
cltd
inc
int3
lea
cs
testl
mov
xchg
xor
adc
lea
rolb
cs
push
pop
or
aam
lret
rcll
lahf
aaa
loop
nop
popw
movsl
push
cwtl
xor
dec
cld
aad
mov
out
inc
mov
dec
dec
inc
adc
pop
stc
dec
mov
pop
xchg
cwtl
daa
push
sbb
mov
lea
push
xchg
cmpsl
ja
mov
das
xchg
addl
addl
cs
pop
stc
lcall
push
inc
jbe
mov
dec
out
bound
xor
or
mov
jp
scas
and
sbb
push
lods
out
adc
mov
sbb
mov
mov
leave
jns
movsl
mov
lahf
out
inc
jo
xor
push
testl
ret
imul
xor
je
xchg
rcll
mov
sbb
and
into
nop
outsb
add
out
stos
push
pop
xchg
pop
subl
addb
out
and
pusha
push
sub
mov
mov
fsubrp
insl
std
data16
dec
hlt
sbb
insl
inc
aad
cs
addl
out
mov
pop
rcr
mov
frstor
je
mov
xlat
pop
mov
js
xchg
xchg
test
aad
fwait
push
rcll
mov
jle
mov
dec
or
ror
fadd
js
fbld
sub
add
enter
push
ret
fldl
ss
orl
mov
push
mov
or
mov
mov
shrl
ret
cmp
mov
stos
pop
into
outsl
push
pop
mov
aas
ss
leave
aas
mov
and
xor
mov
mov
push
cmpsl
sbb
addr16
lea
andl
push
addr16
cmp
repnz
dec
mov
and
jecxz
xchg
xor
dec
mov
outsl
or
mov
push
xchg
adc
fadd
and
int
cmp
cwtl
arpl
mov
push
push
dec
imul
popa
aam
ja
sti
std
loopne
movsl
ret
cmp
fistps
dec
insl
imul
push
pop
xchg
or
loop
lret
xchg
cmp
cli
or
push
sub
repnz
adc
sbbl
mov
pop
push
inc
std
and
sub
subl
add
or
add
pop
popl
rol
mov
addb
cmpsl
sbb
out
test
enter
jg
in
aam
test
pop
mov
mov
aaa
mov
jmp
xor
xchg
aas
dec
jge
and
mov
jo
mov
aaa
loop
jns
push
sub
insb
dec
xchg
adcb
shl
clc
test
sbb
fs
xor
push
mov
xor
add
stos
fadds
inc
test
xor
shlb
shll
arpl
sbb
xor
hlt
enter
adc
lret
inc
mov
pop
dec
mov
popf
jecxz
mov
sub
or
adc
sti
cmp
inc
out
or
enter
sub
and
popa
dec
ret
mov
jne
adc
xor
adc
pop
in
jnp
nop
jb
and
add
jmp
imul
rcll
dec
and
in
stc
std
pop
sub
push
cwtl
and
or
inc
jbe
aas
xchg
mov
adc
sbbl
nop
insl
inc
jmp
mov
andl
in
cmp
adc
pushf
add
aam
push
test
sbb
outsb
in
cmpsl
decl
or
fistpll
pop
mov
out
in
xchg
in
lret
or
cmp
mov
adc
ds
mov
scas
mov
or
fucom
mov
ret
inc
adc
and
mov
mov
movsb
cwtl
push
mov
lret
push
stc
xor
rolb
jmp
shr
push
outsb
clc
movsb
shlb
enter
je
mov
inc
fists
dec
loop
out
ljmp
jns
add
nop
jnp
inc
cmp
lahf
loope
imul
adc
xchg
ja
sarb
sub
scas
adc
ret
iret
or
add
xor
in
sbb
sahf
pop
in
push
mov
push
js
jbe
sahf
push
pop
fwait
nop
mov
xchg
push
pop
clc
ret
add
gs
jnp
pusha
ljmp
xchg
stc
loopne
push
int3
lock
aad
je
jg
sub
fcom
push
push
xlat
fyl2x
ficompl
mov
mov
int
cmp
pop
pop
sub
mov
clc
clc
sbb
pop
pop
push
jno
mov
mov
dec
push
pop
jb
and
push
sbb
jbe
jecxz
aam
xlat
mov
pop
mov
jo
mov
push
inc
fbstp
adc
in
and
mov
mov
notl
imulb
adc
dec
stos
ret
jno
mov
mov
jle
inc
rorb
and
out
sub
aad
push
roll
in
sub
imul
mov
fdivl
test
out
cmp
popa
add
jg
ss
push
push
mov
paddusw
pop
jle
mov
jge
lret
repz
or
add
xchg
ret
shlb
pushf
xlat
iret
cmp
xor
pop
mov
inc
movsl
jae
xor
jmp
popf
jmp
adc
test
enter
adc
sahf
fidivl
lcall
pusha
sub
hlt
xchg
xchg
jo
jns
xchg
fstp
push
pop
jns
bndldx
out
push
mov
ret
mov
mov
call
cmp
sbb
sti
pop
pop
jae
cltd
mov
jbe
cmc
nop
mov
adc
lods
mov
push
or
dec
pop
adcb
bound
pushf
cmc
sbb
add
add
add
and
mov
pusha
dec
movsb
add
add
add
subl
dec
xchg
sahf
lods
cld
mov
mov
hlt
mov
mov
leave
push
dec
push
ss
out
mov
mov
shll
jae
and
rcrl
pop
movsb
or
cmp
mov
inc
cmp
sub
inc
aam
out
std
xchg
lea
scas
push
lret
inc
sbb
shrl
mov
xor
cmp
mov
test
test
cld
out
fimull
push
insl
dec
fisubrl
ja
mov
fstl
lea
lret
lret
cmp
push
and
sub
push
cmc
add
inc
mov
and
test
sbb
and
push
push
arpl
mov
mov
negl
cmp
int
mov
inc
sub
ljmp
aam
push
mov
mov
adc
stos
xor
xor
and
push
lahf
cmc
xlat
vpsubw
sbb
mov
xchg
sub
mov
push
lahf
xchg
pop
scas
push
and
mov
data16
mov
icebp
mov
adc
sub
addr16
jne
push
lds
inc
nop
xchg
stos
xchg
pop
repz
out
test
lds
mov
mov
add
pop
nop
and
mov
insb
pusha
test
push
cmc
addb
mov
pusha
push
and
dec
fs
mov
pusha
sbb
push
sub
scas
or
das
lret
mov
psrlq
fs
xor
mov
clc
stc
xor
outsb
scas
jle
test
movsb
pop
pop
popf
jnp
cltd
pop
mov
or
mov
popa
jge
adc
mov
push
pavgw
ror
sub
and
add
scas
mov
call
ret
jne
out
stos
cmp
shr
and
pop
popf
out
mov
push
popf
sub
cs
add
push
add
loop
and
push
jl
cmp
sbb
imul
nop
pushf
call
lea
std
and
cs
add
sub
mov
and
dec
test
in
mov
stc
int
xchg
frstor
aaa
adc
mov
sbb
gs
jl
ficomps
pop
adc
mov
sub
push
adc
ret
call
xchg
dec
mov
lahf
inc
pop
fsubr
mov
adc
push
mov
cli
xor
jge
xchg
mov
xchg
outsb
sahf
movsl
out
jg
outsl
sbbl
mov
scas
cmpsl
test
mov
mov
jmp
ljmp
mov
das
xchg
jb
shrl
js
int3
test
jns
push
jb
pop
inc
fisubs
movb
lret
enter
pushf
in
int3
stos
rorl
test
mov
mov
into
out
or
cli
and
adc
jns
mov
and
cmp
lods
jbe
mov
popf
mov
xchg
stc
popf
add
lds
mov
in
xor
fwait
testl
sub
aas
mov
stos
or
insb
stos
jbe
iret
push
and
lods
and
test
lahf
test
dec
cmp
cmc
ljmp
roll
jecxz
mov
fadds
lock
leave
pushf
push
cmpsl
shrl
faddl
mov
pop
popf
push
ja
adc
dec
push
and
jo
int3
pop
adc
insb
dec
je
enter
ret
pop
cwtl
jecxz
push
jnp
adc
movsl
movsb
subb
add
mov
mov
cmp
xchg
pop
xchg
jecxz
into
mov
xlat
pop
mov
cmp
add
sbb
dec
xchg
into
es
xor
adc
mov
aam
out
loope
popa
mov
or
mov
sti
jle
cmpsb
or
enter
sub
lret
ret
xor
mov
add
cmp
hlt
sub
push
add
push
sbb
pop
pop
sbb
movsb
mov
faddl
cltd
add
mov
mov
push
mov
rcll
aas
add
inc
inc
addl
mov
inc
out
addr16
inc
addr16
ss
ja
mov
dec
test
and
cltd
xchg
push
push
xchg
fstps
movsb
mov
jbe
sbb
inc
jno
movsb
insl
loope
xchg
movb
push
in
push
push
xor
aaa
fildl
push
xchg
enter
jl
cmp
xchg
popa
push
movsb
mov
push
dec
fnstcw
leave
mov
insl
std
je
lds
jne
xchg
mov
pop
fwait
and
xchg
push
pop
pop
aas
or
add
add
lea
int3
pop
cli
jns
repnz
mov
arpl
jae
les
ret
fists
test
add
inc
je
push
insl
cmp
je
ds
test
or
mov
call
arpl
push
or
ljmp
mov
lds
mov
scas
jbe
lods
movsb
testl
push
pop
xchg
negb
mov
or
divb
or
mov
pop
push
pop
jae
push
dec
loope
inc
pop
push
mov
stos
mov
jb
jmp
and
call
sti
adc
cmp
adc
jp
mov
cmp
in
cmp
out
mov
cmp
mov
or
inc
jmp
inc
inc
imul
js
je
add
es
daa
push
arpl
scas
xchg
icebp
leave
mov
loop
inc
shl
jl
jns
ljmp
lods
out
pop
in
sahf
cmc
lods
xor
iret
out
stos
mov
inc
pop
daa
xchg
adc
add
push
mov
add
add
push
rcr
mov
stos
dec
xor
mov
mov
lods
cwtd
or
cld
or
mov
cmp
push
cmp
push
jge
and
xor
pop
in
mov
out
inc
sub
inc
mov
push
dec
lea
and
mov
pusha
mov
hlt
lds
pop
stos
fnstcw
and
int3
cltd
cmpsb
and
mov
sti
jecxz
sahf
ljmp
sbb
mov
insl
lock
add
inc
sar
insb
dec
sub
sti
lcall
push
fnstenv
and
jge
pop
rcrb
jno
orb
xchg
mov
loopne
outsl
cmp
pop
sti
pop
xchg
mov
add
lea
mov
adc
jns
lods
jl
add
add
jmp
jle
js
aam
jno
mov
js
add
add
add
subl
imul
int3
fwait
sub
js
movsl
sbb
sbb
sub
lret
xchg
dec
or
ret
je
push
mov
jae
ficoms
push
add
dec
loope
push
pop
add
sub
or
adc
repz
or
dec
mov
loopne
test
jb
enter
push
jae
jne
jg
outsl
xor
std
stc
stos
in
jo
jno
ss
fcompl
lahf
inc
mov
inc
cwtl
out
popf
mov
popa
xchg
add
mov
daa
fldl
add
test
jge
gs
ljmp
imul
mov
leave
mov
bound
ljmp
call
lds
or
arpl
sbb
std
int3
xchg
jno
jb
sub
push
arpl
sahf
test
daa
and
cmpb
mov
cmp
cmpsb
je
shrl
adc
movsb
rolb
movb
pop
sub
das
fs
fiadds
sbb
ret
adc
addr16
xchg
inc
fisubs
lcall
dec
das
repz
inc
mov
in
mov
jg
jle
jmp
xor
cmp
xor
push
std
sbb
pop
inc
lahf
arpl
pop
mov
cwtl
leave
xor
add
daa
jg
cmc
rolb
jbe
sbb
and
mov
or
inc
push
push
adc
push
inc
xchg
loopne
divb
jns
lret
lret
and
ss
rcrl
sbb
jl
mov
jle
xor
pop
add
dec
test
mov
jno
push
push
idiv
xchg
stos
mov
add
je
mov
movsb
aas
cld
enter
mov
outsb
jbe
stos
stc
sahf
cmpsb
pop
or
jnp
in
push
xor
nop
bound
jmp
and
pushf
das
das
dec
inc
dec
mov
aaa
es
iret
add
out
sbb
push
or
out
sub
pop
sbb
scas
jnp
push
fsubrs
xchg
jb
mov
insl
adc
cmpsl
push
pusha
mov
or
or
jmp
rorb
pushf
jmp
lret
push
xchg
xchg
jle
seto
lds
fdivl
mov
xchg
add
dec
ljmp
int3
sub
jns
jb
pop
sbb
insb
ret
jns
rol
out
xchg
sbb
sbb
mov
insb
std
movsl
sub
ja
repz
xor
mov
adc
cmpsl
in
lret
hlt
dec
lock
rorl
pop
sub
and
divl
mov
xchg
sarb
repz
xor
out
aaa
add
dec
mov
jno
aad
scas
or
sbb
loop
test
int3
ja
outsb
mov
cmc
clc
das
mov
roll
dec
push
shll
insb
repz
cmpsl
pop
mov
mov
xor
xor
and
xlat
sub
jg
add
add
sub
clc
movsl
jne
jbe
sbb
or
jmp
sbb
inc
aas
mov
pop
push
mov
xor
call
pop
and
xchg
adc
bound
mov
mov
xor
shll
mulb
mov
cmpsb
dec
dec
lods
pop
inc
gs
push
loop
adc
sbb
cmp
mov
sarb
pop
mov
xchg
icebp
sbb
mov
lods
pop
adc
sub
fnstcw
cs
popf
jle
or
and
outsb
sub
sub
pop
push
cld
into
mov
loope
cld
test
imull
xorl
arpl
test
fldcw
enter
mov
xor
xor
mov
pusha
cmp
sub
or
add
pop
mov
cmp
dec
jnp
adc
dec
in
push
dec
cltd
cli
push
jle
add
add
icebp
sbb
push
lods
mov
mov
add
xchg
lahf
mov
imul
mov
fsts
mov
push
push
adc
fdivrl
xchg
icebp
sub
idivl
inc
fidivrs
loop,pt
mov
jbe
cmovo
cwtl
cmpsb
and
cmp
mov
loope
push
adc
inc
mov
mov
cli
pushl
sbb
je
cs
ret
ror
and
mov
and
xchg
adc
in
cld
adc
je
mov
mov
xchg
insb
push
pop
aas
jne
popa
pop
pop
loopne
or
add
fsubp
leave
adc
push
loop
mov
out
push
outsl
lahf
lods
sub
mov
fnstsw
fs
xchg
and
pop
pushf
lcall
cmc
arpl
out
loopne
orb
inc
movsb
xchg
loope
imul
push
gs
adc
xchg
or
jle
es
adc
xlat
pop
inc
xchg
rcll
cmpb
pop
xchg
jne
mov
pop
jge
xor
sar
rep
bswap
add
outsl
xchg
jmp
pop
pop
cli
jnp
sub
sub
fcmovu
sbb
push
mov
imul
sbb
pop
clc
lods
sbb
fsubs
lods
mov
cs
jge
in
cmpsb
add
mov
mov
loop
jmp
lods
cmpsl
or
mov
popf
sarb
cld
pop
push
nop
xchg
mov
jmp
xor
cltd
inc
cwtl
pop
mov
addb
repnz
mov
add
enter
or
jns
push
ret
aad
push
mov
ja
sbb
xlat
xor
add
fbld
add
cmc
adc
insl
fisttpll
mov
jl
jb
loopne
jae
cwtl
push
out
cwtl
data16
inc
xchg
mov
daa
adc
imul
in
test
sbb
inc
mov
sub
mov
insb
movl
fldenv
adc
pop
rcl
out
inc
orb
xchg
stc
xlat
pop
fidivl
pop
fdivrl
cmp
adc
lret
cmp
sbb
xchg
test
popa
pop
out
jnp
sbb
enter
push
in
pop
rep
cmp
and
sub
fs
mov
push
ljmp
pop
rcl
in
imul
ja
in
cwtl
cmp
mov
push
jb
mov
add
out
adc
test
imul
dec
jns
jg
imul
or
je
jge
sub
dec
inc
push
inc
sbb
xor
sub
ret
mov
jl
pslld
mov
and
in
mov
dec
imul
cld
popa
add
add
test
mov
jecxz
arpl
jg
add
add
and
aam
cmp
pop
sub
push
adc
mov
cmp
pop
imul
sub
nop
fwait
test
sub
inc
mov
mov
stc
sub
and
fcompl
cwtl
push
jmp
mov
mov
sbb
jo
jae
inc
mov
movsl
xchg
jp
pop
adc
rcll
mov
sbb
cld
mov
aaa
in
cmp
and
ljmp
adc
jae
sbb
test
clc
stos
fwait
aaa
popa
out
test
orl
push
daa
lods
daa
repnz
inc
inc
sub
cmp
pop
xor
or
xchg
sub
vlddqu
mov
lret
repnz
mov
daa
pusha
in
shlb
sbb
repnz
sbb
jl
mov
test
cli
mov
and
fcompl
mov
std
testl
addr16
test
jl
mov
and
pop
pop
adc
cmp
adc
dec
add
mov
jns
addr16
pop
fiaddl
push
cmpxchg
mov
or
lahf
sbb
fwait
push
jg
out
sbb
mov
dec
adc
dec
fcoms
nop
dec
stc
xchg
mov
pop
flds
shr
mov
out
cs
inc
leave
dec
je
xor
inc
fwait
mov
and
int
mov
xchg
dec
jp
mov
scas
xchg
outsl
js
ret
lods
jae
cmp
test
xchg
jmp
test
test
std
testb
enter
add
push
daa
add
pop
xor
lds
xlat
pop
ror
fistpl
in
mov
enter
sub
fstps
mov
pushf
lods
jo
iret
mov
xor
xchg
mov
mov
cmp
inc
aas
push
mov
push
push
inc
push
in
imul
shlb
xor
dec
mov
mov
data16
aaa
push
imul
mov
testb
mov
mov
sub
repz
mov
jne
fisubrs
mov
pop
ret
outsb
out
daa
loopne
mov
addr16
or
cmp
mov
js
popa
push
jl
fcoml
ja
cmc
xor
outsl
not
icebp
movsl
scas
lret
clc
aam
push
cmp
and
out
adc
popa
gs
xchg
push
int3
imul
test
dec
mov
xchg
add
idivl
sahf
outsl
adc
lcall
add
fs
or
hlt
movsl
int3
outsl
jl
push
mov
mov
lods
sub
cmp
outsl
push
das
mov
xor
cmp
je
dec
xlat
fwait
pop
mov
loop
imul
inc
add
and
outsb
or
sub
loopne
or
sbb
jno
rcl
clc
and
pop
pop
dec
orl
out
and
js
ret
loopne
or
aas
fdivrl
leave
mov
xor
fcoms
addr16
dec
and
or
int3
lcall
je
lds
hlt
adc
movsb
or
mov
popa
loop
pop
stos
mov
xchg
xchg
push
push
jl
and
data16
mov
je
ljmp
jl
push
movb
xchg
inc
cmp
repz
push
add
sub
xor
mov
mov
mov
and
pop
jb
test
and
std
pop
out
sti
mov
dec
mov
jg,pt
icebp
jl
mov
push
mov
cmp
inc
insb
mov
vpaddsb
fildl
lcall
sub
cmp
cmp
div
scas
pop
orb
pop
jle
idiv
pop
aad
mov
or
push
mov
fs
test
add
xchg
out
xlat
mov
test
in
aas
mov
and
int3
jge
sub
sbb
pusha
or
cmp
idivb
scas
icebp
stos
pop
es
mov
fs
mov
mov
shll
outsb
inc
je
sub
repz
jge
and
push
fisubl
mov
xchg
push
cltd
fidivrl
into
push
add
fabs
pop
cld
stos
xor
push
insb
int
daa
jge
into
das
shrb
jns
stos
cmp
inc
ret
push
movsb
sub
and
push
adc
dec
pop
stos
pop
insb
xor
out
imul
jg
cltd
adc
in
jae
mov
fnstcw
inc
push
movsb
mov
lock
jmp
cmp
dec
aaa
roll
insl
or
inc
add
jg
cmp
push
jb
jne
jmp
enter
mov
adc
dec
mov
sub
pop
inc
stos
cmp
xor
fsub
pop
inc
aam
and
mov
jl
sub
or
mov
jne
pusha
mov
sarl
ljmp
repnz
push
dec
dec
std
add
shrl
idiv
sub
adc
mov
mov
jmp
and
sbb
mov
mov
sahf
pop
cmp
mov
inc
cmp
jmp
incl
je
cmp
and
in
xlat
into
push
lods
jno
or
sbb
jne
popa
arpl
sub
les
es
push
fs
rcll
cli
adc
inc
cmpsb
jp
scas
cmp
shrb
jge
dec
jnp
jle
xchg
loop
sbb
push
add
iret
arpl
sbb
push
push
mov
mov
enter
jecxz
push
jl
push
xor
aad
enter
bound
jo
inc
jae
mov
ljmp
insl
xor
sbb
mov
in
sub
cmp
icebp
push
add
xor
jmp
push
cmp
stc
fs
outsb
and
and
add
daa
push
pop
xchg
jge
jo
testl
fmulp
ljmp
fildll
stos
jbe
into
sbb
aad
loope
sub
mov
adc
xchg
and
inc
mov
lret
sti
stos
imul
sbb
mov
in
mov
loop
xchg
mov
cmp
push
sti
push
jg
cmp
into
xchg
or
mov
mov
nop
and
sub
cltd
jnp
test
inc
mov
lea
sbb
fimuls
ret
push
fisttpll
pusha
int3
push
fidivrl
sbb
add
add
adc
aas
pop
push
jb
stc
loop
push
add
imul
lods
popfw
pop
and
dec
cmp
insb
jmp
rcrb
icebp
clc
pop
leave
shl
subl
cmpsl
adc
mov
stos
push
mov
mov
xor
mov
aaa
xchg
cmp
inc
push
test
lahf
pop
jp
fwait
push
test
push
out
sbb
outsb
jno
jnp
xlat
inc
jno
mov
test
sub
or
sbb
bound
mov
xchg
pop
cmpsl
cmp
xchg
push
ljmp
xor
sub
outsl
stos
push
ds
and
imulb
and
insl
rclb
xchg
loopne
mov
xlat
fnstenv
and
xchg
mov
daa
in
iret
pop
sub
jnp
sti
fs
cmc
jmp
fabs
in
in
add
lret
fildll
pop
pop
fcomps
in
adc
mov
cmpsl
push
xchg
mov
jge
stos
mov
cmp
into
adc
fidivs
mov
ja
enter
outsb
ror
fucomi
fcoml
cld
push
sbb
jnp
orl
jmp
pushf
xchg
mov
fstpl
mov
out
pop
adcl
add
mov
pop
jg
subl
push
out
scas
xor
out
iret
fsubr
shrl
sbb
popf
xor
add
sar
lret
pop
cltd
cld
nop
popa
test
mov
ret
xchg
dec
fstpt
nop
std
dec
xchg
or
inc
movsl
cwtl
adc
nop
and
inc
enter
sbb
xchg
pop
dec
mov
into
and
lret
xchg
dec
jp
aam
mov
cmp
mov
fwait
leave
xchg
mov
gs
and
movsl
lahf
dec
xor
xchg
cmp
adc
inc
mov
mov
in
lods
or
jg
inc
fisttpll
hlt
jge
pop
cmp
mov
movsl
push
inc
and
adc
icebp
das
stos
xchg
mull
add
imul
mov
dec
test
popf
clc
or
dec
ret
or
lods
clc
clc
sbb
jno
inc
mov
inc
pop
lods
pusha
push
inc
push
sbb
sbb
push
add
jno
cmp
out
adc
push
loope
pop
ss
sbb
mov
lret
fs
scas
cli
addr16
xchg
push
fcom
mov
xchg
rol
inc
and
mov
jb
mov
rorb
sbb
outsb
sbb
cmp
sbb
adc
popa
lcall
dec
cs
pop
sub
insl
xlat
in
outsb
aam
push
mov
dec
stos
je
adc
jnp
jns
adc
mov
lcall
push
adcl
cmpsb
sbb
imul
sbb
movsb
lea
das
mov
enter
ret
mov
mov
cmp
mov
xor
cli
and
call
outsl
in
xchg
aas
mov
xor
cwtl
mov
push
xor
lahf
sbb
fstl
leave
fstpt
aaa
push
dec
or
mov
or
fbld
mov
clc
out
and
jnp
fld
sarb
jg
jbe
xor
xchg
jns
jbe
lds
jle
xchg
cld
fs
icebp
xchg
icebp
and
fstl
jmp
pushf
adc
push
or
fwait
xchg
lret
sbb
push
in
mov
sub
cmp
pop
mov
inc
jbe
adc
jo
sti
int3
orl
inc
xchg
popa
mov
lea
adc
aaa
inc
cmp
jmp
mov
lds
xor
xlat
nop
lret
jmp
cmc
pop
or
xchg
out
xor
mov
cmp
mov
bound
mov
in
xchg
ja
sub
cmp
and
mov
and
rorb
and
adc
test
push
movsl
or
mov
imul
std
mov
bsr
cld
sbb
cvtdq2ps
push
les
mov
cmp
or
ss
cltd
lret
iret
inc
popf
iret
lret
repnz
test
imul
xchg
pop
mov
jle
insl
push
test
fisttpl
mov
mov
mov
push
add
mov
mov
pop
int
lcall
mov
or
dec
outsl
sbbb
movsb
jae
jb
or
nop
in
jg
mov
xchg
mov
push
int3
adc
cmp
repz
mov
or
mov
enter
or
loop
push
cwtl
pop
push
fstps
mov
xchg
ror
shlb
shll
xchg
icebp
mov
subb
and
adc
lcall
inc
push
incb
xchg
mov
dec
sbb
pop
insl
out
sub
dec
pop
mov
hlt
mov
xlat
mov
jno
inc
or
mov
shll
dec
into
ja
fwait
adc
ret
sti
jle
fistpll
test
jne
cmp
outsb
xchg
fldcw
js
clc
imul
pushf
sbb
out
popa
pusha
xor
or
mov
pushf
inc
mov
lret
mov
into
or
dec
mov
arpl
sbb
xchg
adc
jp
fwait
rorb
cs
sbb
test
negb
add
xchg
data16
mov
popa
mov
in
mov
pop
lahf
in
dec
add
sbb
fstps
dec
mov
push
pop
fldl
mov
sarb
std
xor
mov
ret
xchg
add
iret
outsl
sub
ss
inc
mov
xchg
mov
mov
fildll
ds
xor
call
xor
jmp
adc
dec
xlat
push
shll
fstl
xchg
inc
div
mov
fidivs
les
mov
jp
dec
ja
insb
adc
push
xchg
into
insl
xor
fnstenv
loope
push
or
xchg
xor
subl
sub
jne
mov
dec
jne
fstl
mov
testb
scas
sub
pop
mov
jno
dec
push
mov
bound
jno
stos
push
dec
fidivrl
cmp
pusha
out
test
mov
sbb
lds
leave
js
sub
or
jno
xorl
les
icebp
cmpsb
mov
mov
xchg
cmp
out
add
mov
call
jle
mov
fldenv
icebp
dec
fstl
sub
ret
stos
pop
add
mov
adc
xchg
in
ficompl
imul
mov
enter
pop
jle
dec
ljmp
scas
mov
shrb
subb
lods
add
pushf
js
mov
stos
outsl
cmp
xchg
test
push
inc
cltd
call
es
inc
add
add
lea
into
out
popf
adc
mov
add
add
xchg
sbb
sbb
into
add
aaa
xchg
pop
xchg
cmpsb
mov
ss
adc
aam
dec
xor
mov
mov
mov
cmp
lods
dec
int3
mov
and
inc
scas
mov
xchg
mov
ret
cmp
xchg
jae
popf
scas
cmpsb
mov
xchg
aam
jae
jge
aaa
in
lcall
dec
push
sub
clc
clc
adc
add
into
xchg
xlat
cld
mov
xor
pop
loop
push
jo
or
sub
enter
sbb
fisttpl
pop
xchg
cli
dec
mov
aam
mov
push
test
xor
nop
and
cmpsb
hlt
ja
pusha
je
mov
test
cli
mov
iret
call
xchg
mov
mov
jnp
mov
jns
inc
jns
or
add
mov
pop
mov
inc
test
adc
insb
inc
ss
inc
imul
jnp
insb
xor
xchg
pushf
rcr
out
cmpsb
mov
loopne
clc
sub
pop
dec
das
fmul
or
xchg
cmpsb
out
clc
and
inc
iret
icebp
enter
mov
lock
sbb
in
adc
push
jle
insb
pop
and
or
enter
and
lahf
test
xor
popf
jne
pop
out
int3
dec
negl
push
inc
or
ss
pop
call
sbb
in
js
insb
int
aas
or
sbb
adc
mov
shrb
pop
mov
clc
pop
out
and
xchg
fsubs
and
jcxz
jne
mov
ljmp
arpl
mov
das
insb
addr16
add
cmp
xchg
dec
inc
negb
sbb
cs
repnz
rcr
or
mov
repz
cmp
dec
cwtl
cwtl
push
les
filds
shll
mov
mov
lret
dec
aaa
mov
pop
mov
ror
or
cmc
hlt
out
aad
cmpsl
rcl
gs
adc
dec
data16
inc
pop
int3
inc
sbbl
jmp
jae
out
push
sbb
das
mov
lods
les
ja
fwait
movsb
push
jg
cmp
sub
mov
mov
add
aaa
mov
pop
jno
xor
jb
cmc
pop
loopne
and
sarl
in
push
test
mov
pop
icebp
inc
jnp
pop
sbb
outsl
nop
pop
adc
xchg
popf
aam
cs
jecxz
lods
aas
or
pop
and
pop
mov
mov
jno
pop
shlb
fists
das
popf
jne
jb
ljmp
daa
mulb
loopne
daa
into
out
xchg
scas
dec
fwait
or
xor
int3
aad
in
sbb
cmp
in
out
pop
shl
je
adc
jno
fdivrp
rcrl
jno
andl
int
inc
repnz
sub
stos
divb
sbb
pop
jge
or
std
jmp
pusha
test
lds
inc
movsb
mov
and
jns,pt
add
ljmp
in
inc
ja
mov
inc
mov
pop
inc
mov
inc
shrb
add
cltd
sbb
push
jge
sbb
mov
clc
pop
loop
ja
mov
cmpsl
jns
scas
mov
test
aad
xchg
push
jnp
push
inc
hlt
mov
insl
dec
stc
out
dec
out
mov
and
pop
lcall
mov
cli
imul
cmp
xchg
xor
daa
imul
sahf
call
data16
in
inc
jl
test
test
jae
popa
pop
and
push
aad
adc
insb
jle
cmp
incb
outsl
ret
dec
test
mov
dec
or
nop
jl
pop
pop
mov
pop
and
sahf
or
popw
clc
fnsave
add
test
fdiv
xor
int
cwtl
enter
les
cmp
repz
enter
cmp
pop
test
pop
sti
aaa
fisttps
sub
andl
push
mov
into
mov
shr
popa
pop
mov
and
or
mov
aaa
ret
xchg
sbb
in
pop
out
push
ljmp
scas
scas
and
xor
shl
aad
push
scas
pop
sbb
negb
dec
pop
out
sub
clc
add
pop
push
cmpsb
adc
nop
fsubr
leave
test
rcr
movsb
and
divb
jmp
fucomi
pop
mov
mov
je
ficoms
add
inc
lret
dec
shll
pop
dec
leave
call
lcall
in
test
cmc
pop
cmp
rolb
xor
xlat
faddl
lret
lret
mov
xor
fstps
sub
xchg
test
lret
gs
cwtl
imul
in
mov
or
cltd
xlat
xchg
inc
insb
xchg
and
xor
adc
jge
into
lret
dec
test
dec
sub
repnz
lcall
sti
rorb
into
call
lods
add
cli
js
das
ss
dec
dec
test
xor
cmp
jne
fcoml
outsl
xor
outsl
mov
pop
jmp
lock
add
ds
push
rcl
or
aas
xor
or
das
add
mov
fiadds
jle
inc
add
clc
shrl
fsubp
dec
imul
mov
xor
xchg
test
xor
xor
das
rol
sub
sbb
inc
inc
mov
lods
inc
aaa
sub
sub
hlt
push
push
pop
fsubrl
mov
dec
cli
loop
icebp
xor
loope
into
call
add
inc
sahf
pop
add
repz
push
int
sub
dec
fcmovbe
iret
cmpsl
cli
pop
hlt
add
mov
mov
cmp
jo
add
aam
add
xor
mov
test
dec
xchg
pop
daa
test
repnz
jno
jbe
xchg
cltd
add
xchg
in
jae
xabort
xor
outsb
or
xchg
adc
push
cmp
xchg
test
lcall
or
fidivs
mov
or
outsl
jg
scas
sahf
in
pop
imul
out
jl
push
dec
aad
mov
rol
scas
out
sub
cs
daa
mov
scas
orl
loopne
inc
lods
sbb
repz
out
dec
movsb
das
mov
xchg
push
sti
test
mov
scas
mov
stos
out
mov
div
shrb
out
imul
mov
in
add
add
sti
mov
ds
ret
sbb
xchg
add
imul
sbb
jnp
incl
mov
nop
adc
cmp
leave
cmp
cmc
and
call
stc
shll
jns
cld
pop
push
sub
jno
or
cmp
repz
int
lcall
aad
jo
pop
xchg
fidivs
das
mov
xchg
mov
lods
cmp
popa
test
das
movsb
aam
cmp
push
rcll
test
data16
push
and
iret
mov
mov
mov
and
jns
or
call
int3
xor
idivl
fsub
sub
fisttpll
fistl
mov
fs
xchg
push
add
pushl
jp
cmp
or
mov
jl
mov
adcl
subb
aas
xchg
idiv
adc
push
fistps
push
js
mov
sbb
push
xor
repnz
inc
and
jbe
sub
popl
daa
pop
pop
shrb
sub
push
or
mov
mov
imul
lcall
addr16
movsb
add
fcoms
or
push
loopne
pop
js
int
into
int
arpl
mov
jecxz
xchg
xor
push
adc
repnz
inc
mov
lods
sahf
das
inc
sub
out
xor
enter
cmp
sarb
imul
hlt
sbb
add
mov
push
shll
mov
jg
icebp
xchg
into
or
and
add
mov
pop
sbb
xchg
pop
lret
cmp
in
sbb
bound
fdivrs
jb
ljmp
aam
jmp
jge
call
and
loopne
jmp
push
lahf
punpcklbw
mov
dec
cltd
int3
mov
or
jo
dec
icebp
mov
cmp
jno
xor
ror
mov
aaa
adc
shlb
test
lock
mov
stos
and
sbbb
cli
cmp
test
jns,pt
mov
bound
inc
xor
mov
pop
ja
mov
push
cltd
inc
movsb
fldt
pop
insb
push
movsl
cmp
add
dec
push
dec
mov
sub
imulb
je
in
fsubr
adc
mov
and
sbbl
test
gs
mov
clc
fs
mov
loop
mov
int
in
loope
je
mov
or
push
and
mov
and
and
mov
int
pop
or
das
jmp
mov
mov
imulb
dec
dec
fwait
jle
push
icebp
mov
jbe
xchg
adc
sub
stos
push
inc
xchg
stos
mov
call
cmp
lret
in
sbb
or
in
or
push
or
and
dec
lahf
adc
leave
pop
jecxz
jp
mov
das
adc
sbb
dec
adcl
xor
mov
pop
jecxz
adcl
inc
cmp
lock
jae
push
loope
xchg
sbb
fstps
sub
xor
das
insb
fldpi
mov
mov
pop
lret
xor
test
fnsave
cmpsl
iret
dec
stos
inc
cmp
sub
push
adc
fcomi
ja
ljmp
daa
test
cli
add
iret
push
sarl
xlat
ljmp
mov
fnsave
fdivrs
xor
scas
add
gs
pop
lcall
push
add
nop
fwait
push
jecxz
loopne
int3
cmpsb
movsl
cmc
xchg
xor
sbb
cmp
int3
jl
pop
cmp
and
pop
inc
fldl
pop
or
dec
in
xchg
stos
mov
adc
sub
adc
jl
repnz
out
dec
shr
iret
sbb
mov
ffree
out
cmpsl
repz
cs
fwait
in
std
les
cltd
adc
in
addl
test
nop
xor
jge
jp
jo
dec
addb
xor
push
fists
push
push
sbb
jae
mov
mov
mov
mov
movsl
test
daa
inc
xor
fildll
fadds
enter
cmp
repz
xchg
test
mov
sbb
int
ja
mov
clc
fisttpl
cld
sbb
mov
int3
pop
fisttpl
adc
add
jb
cmp
mov
enter
fcmovnbe
jno
mov
rcll
dec
mov
popf
pop
dec
pop
fs
in
movups
pop
data16
cmp
shlb
lds
add
push
ret
movsb
icebp
sub
adc
mov
repnz
lods
dec
push
lret
jae
imul
nop
pop
dec
push
sub
in
push
xor
sub
loopne
scas
sbb
or
rcr
hlt
int
xlat
leave
sbb
and
aaa
enter
mov
mov
push
cmp
cmpsl
scas
inc
pop
jle
cmpl
cld
sti
jg
insb
subb
pop
jo
mov
push
out
or
adc
ljmp
loopne
xor
insb
stos
push
lahf
mov
jge
jno
dec
lahf
test
loopne
mov
jl
lock
jne
in
imul
push
jb
in
test
inc
faddl
shrl
stc
fwait
push
jp
lret
sub
pop
pop
cmpsb
lods
jmp
or
and
ja
adc
pop
jmp
addr16
scas
push
mov
insb
cmp
add
mov
sub
adc
icebp
pop
ja
mov
xchg
xor
hlt
mov
cld
daa
push
cltd
xchg
rorl
push
jo
repz
dec
jo
loopne
int3
mov
mov
pop
lods
push
cmp
aad
jl
push
and
nop
add
movsb
lcall
lock
dec
fldt
mov
stos
mov
mov
lret
jne
or
in
or
push
add
sbb
shlb
or
jae
cmp
sarb
fisubrs
mov
xorb
mov
stos
mov
and
xor
mov
or
jecxz
int3
pop
add
adc
movsb
leave
outsl
decb
xchg
inc
imull
aas
ljmp
adc
mov
sub
inc
iret
repz
inc
xchg
fs
jae
jecxz
push
addr16
pop
pop
inc
and
ljmp
fnstenv
loopne
mov
jne
and
xor
shrl
xchg
fdivr
out
dec
mov
test
scas
dec
jg
sub
data16
jge
repz
jns
lcall
bound
xchg
inc
ret
leave
mov
add
add
mov
cli
cmp
mov
popf
add
imul
outsb
mov
mov
es
mov
xchg
shrl
cwtl
pop
mov
mov
ss
out
stos
ja
popl
xchg
cmp
ss
xchg
lret
sub
aad
subb
jp
mov
js
repz
and
xchg
outsb
xchg
pop
dec
lea
stos
xchg
nop
xor
pop
mov
sub
imul
jl
xor
daa
enter
jb
mov
add
iret
or
mov
xchg
adc
rcrb
test
xchg
mov
mov
lds
push
lea
cmp
paddsb
arpl
and
mov
jne
dec
addb
jp
push
fwait
xor
lret
mov
pusha
in
loop
sub
fisubl
adcl
arpl
cld
call
xchg
ret
popa
push
sub
mov
sbb
add
pop
push
out
mov
std
or
inc
incb
cmpsb
aas
jg
and
push
aam
inc
lock
xchg
and
inc
out
addr16
repnz
mov
leave
pop
bndldx
cli
sub
pop
mov
cmp
rcll
push
jno
or
fsubl
mov
pop
leave
inc
popa
das
cli
cmp
lock
das
or
xchg
lea
loop
scas
scas
inc
cwtl
cli
lcall
cmp
rolb
xchg
jns
add
sub
lea
push
mov
lahf
and
in
jb
cli
call
xor
or
xor
fs
jmp
fmuls
sub
dec
sahf
mov
in
sbb
insl
jl
repz
outsl
fistpl
add
std
fwait
nop
gs
insl
pop
sarb
mov
mov
mov
out
push
dec
push
push
and
cs
jl
inc
inc
add
adc
xor
sub
mov
pushf
adcb
aad
sarl
clc
sbb
sbb
lods
xor
sub
repnz
jmp
dec
movsb
dec
mov
lcall
push
adc
iret
cld
pop
inc
mov
mov
sbb
lcall
ds
call
pop
jnp
test
sarl
daa
imul
ret
clc
pop
mov
adc
mov
daa
cli
and
fadds
pop
lret
push
lock
fldlg2
out
fldenv
jae
mov
pop
cmpsl
add
frstor
adc
fwait
clc
xor
mov
daa
push
add
and
scas
jle
xchg
cmp
mov
mov
ss
test
aad
repz
adc
je
jge
in
gs
jge
ja
pop
test
dec
nop
pop
xchg
xor
pop
int
mov
andl
stc
push
cltd
add
push
push
or
cmp
adc
idivb
pop
fwait
ja
push
push
mov
pxor
cld
les
dec
xchg
pop
dec
lahf
cmpl
mov
xchg
arpl
pop
add
and
mov
or
lods
clc
popf
hlt
mov
push
push
out
add
stc
out
out
cwtl
jg
lods
ds
jae
adc
loopne
dec
test
mov
into
mov
dec
mov
xchg
loope
aas
lea
cmp
aam
jne
add
nop
decl
sbb
lcall
mov
pop
push
xchg
or
insb
add
call
cli
repnz
imul
js
mov
fimuls
or
daa
dec
jns
push
add
adc
or
mov
mov
arpl
pop
xchg
fiaddl
fsubp
xor
loope
rcll
mov
inc
fildll
ljmp
inc
pop
push
fimull
xchg
adc
mov
push
sub
pop
imul
std
ficoml
and
adc
movsl
mov
stos
push
lds
gs
out
loop
popf
push
icebp
mov
dec
sub
cmpsb
icebp
aam
adc
leave
pop
mov
push
lret
sbb
mov
sub
bound
imul
jl
sub
jnp
test
mov
xchg
jnp
ds
fsubr
cltd
cmp
cmp
mov
sub
jmp
adcl
add
jo
and
or
in
out
add
test
stc
pop
xor
dec
add
sbb
mov
xchg
pop
sub
sub
push
in
es
add
orb
xchg
rcrl
cmp
roll
pop
sti
outsl
ja
inc
push
mov
call
jae
jp
mov
roll
xchg
pop
cli
pop
popa
dec
jp
lods
in
test
dec
dec
iret
or
xor
add
sbb
aaa
push
dec
int3
and
test
outsb
std
push
sbb
xlat
imulb
inc
rolb
mov
jecxz
mov
daa
ficompl
nop
cld
mov
cmp
jae
push
adc
lret
imul
leave
lcall
pop
xchg
jnp
xor
es
and
mov
das
sbb
adc
fisubrl
int3
jecxz
leave
push
rcr
mov
jbe
xchg
and
xor
xor
out
mov
dec
push
cwtl
adc
push
inc
jnp
add
cmpsb
dec
push
sub
fdivp
xor
adc
mov
loopne
imul
call
addr16
xor
and
jp
sub
ret
test
repnz
push
jb
ret
mov
negl
cmp
mov
mov
ret
sub
stos
cs
push
inc
je
push
hlt
rclb
pop
and
stos
decb
cs
mov
loope
int3
mov
fstl
jns
push
push
out
or
mov
lods
leave
inc
fidivrl
or
jmp
xor
or
clc
fisttpll
sub
test
or
adc
push
icebp
es
inc
dec
lds
xchg
dec
jne
mov
xlat
je
cltd
sub
imul
popa
rcll
adc
pop
xor
pop
out
mov
arpl
add
shlb
xchg
or
dec
adc
popl
xchg
jge
cmp
sbb
hlt
icebp
xchg
sbb
outsb
inc
adc
dec
outsl
lret
xor
jb
cmp
adc
pop
loopne
mov
pop
pushf
inc
push
mov
fstpt
sbb
rclb
push
scas
lock
mov
adc
negb
mov
jne
fcom
cmc
insl
subl
popf
sbb
xchg
test
test
push
pop
out
ret
lahf
shrb
push
jecxz
add
ja
xchg
popf
mov
lods
xchg
les
add
sub
push
mov
jnp
out
xorl
movsl
mov
pop
mov
pop
xor
lds
mov
cmp
repz
rcll
jo
int3
in
rcl
adc
sub
pop
andb
sarb
and
add
jno
mov
popl
in
loopne
aaa
filds
xor
dec
add
movsb
outsl
mov
jns
xchg
shlb
xchg
outsb
cmpsb
fisubl
repz
clc
pushf
cmp
adc
inc
insl
ret
lret
mov
add
gs
lea
jne
enter
or
popf
sti
sbb
push
imul
lock
and
leave
push
clc
xchg
sbb
jge
cwtl
cmp
dec
jns
push
in
mov
mov
adc
popf
dec
loopne
dec
xchg
sbb
adc
aam
add
push
cltd
in
mov
or
add
popf
aam
xchg
in
jb
sub
or
shrb
mov
push
fnstenv
sub
jae
aad
je
addb
lea
loope
pop
outsb
sub
jne
cmpsl
repnz
dec
fsubl
leave
jno
dec
test
push
dec
or
push
push
push
sbb
imul
push
or
pop
add
mov
hlt
bound
add
lea
lcall
dec
mov
push
ja
push
and
mov
inc
loop
jns
cwtl
loopne
mov
lds
out
lea
jmp
jbe
lds
sbb
xlat
mov
mov
iret
or
xchg
add
lods
and
pop
push
xchg
andl
enter
test
xchg
fwait
inc
mov
and
ja
popf
int
mov
les
pop
stos
nop
test
pop
mov
stos
and
test
out
mov
or
sti
or
inc
mov
cmp
sti
push
jg
xchg
sub
repz
call
xchg
mov
adc
cmpsb
push
push
cmp
jnp
push
pushf
cmp
cltd
enter
adc
movsb
mov
imul
in
dec
jecxz
std
hlt
mov
arpl
hlt
js
push
shll
cltd
jno
add
test
xor
push
jl
mov
daa
shll
fiadds
and
jl
sub
adc
xor
sbb
rclb
push
push
mov
out
mov
testb
test
dec
push
pop
cli
scas
lret
cmp
dec
dec
lds
loopne
add
inc
mov
pop
push
xchg
fnsave
pop
mov
jmp
or
pop
lcall
adc
js
add
movmskps
outsl
mov
cmp
clc
sub
mov
and
jmp
jle
shl
sbb
pop
cld
scas
clc
mov
lods
cmp
mov
decb
push
stc
jg
ret
cmp
test
imul
dec
sub
dec
in
adc
xchg
daa
lds
sub
add
mov
out
and
xchg
pop
cmp
addr16
out
loop
call
fstpt
outsl
pop
pushf
je
adc
mov
push
push
dec
inc
es
cmp
iret
mov
pop
sub
loop
lea
aad
xor
xor
mov
push
out
add
idivb
bound
mov
cwtl
mov
xchg
add
outsl
mov
inc
mov
add
imul
xchg
adc
loope
mov
xchg
lcall
and
movsl
aad
dec
jb
xor
test
sbb
fcmovb
sahf
and
or
cmpsl
add
loop
inc
push
movsb
adc
dec
aaa
mov
and
push
adc
dec
push
fmull
stos
adc
pop
mov
mov
pop
xor
jbe
in
rorl
aad
imul
clc
sub
scas
lret
cmp
scas
mov
push
push
sbb
fucomi
lds
xor
mov
jecxz
pushf
dec
fs
lcall
inc
inc
testl
popf
or
jle
ljmp
clc
push
stc
ja
dec
out
aam
add
push
mulb
movsl
or
std
aaa
cmpsl
call
mov
insl
lcall
arpl
loope
stc
inc
xor
cld
orb
jmp
dec
xor
push
out
insb
xor
or
fisubl
sub
mov
and
jp
adc
addb
test
sbb
adc
notb
sub
mov
cli
xor
pop
test
mov
pushf
popf
sbb
mov
cmp
dec
xor
jle
mov
ret
xchg
add
sbb
xchg
sbb
das
pusha
add
pop
pusha
mov
ljmp
imul
pop
sub
sbb
mov
dec
lea
pop
lods
popf
lods
mov
pop
cmp
mov
inc
mov
pop
ret
fstpl
insl
pop
test
sub
sub
dec
mov
fisubrs
sbb
gs
fwait
jnp
sbb
xor
add
fdivr
int3
in
mov
mov
dec
pop
push
andl
addr16
mov
dec
inc
ficoms
addb
mov
push
and
sub
jno
push
ret
sbb
in
aaa
stos
addb
popa
push
in
pop
add
imul
sahf
xchg
sti
add
mov
inc
jne
sbb
fadd
pop
mov
xor
pop
mull
and
inc
inc
mov
es
mov
lcall
inc
inc
orb
mov
out
das
mov
jo
push
pop
rcr
xchg
shl
push
cs
dec
mov
cltd
ljmp
xchg
add
orl
sub
jnp
or
adc
push
mov
fidivrl
fbstp
cmc
insl
xlat
jp
xchg
mov
add
dec
add
add
sub
jge
out
pop
sahf
mov
cmpsb
mov
or
cmp
inc
push
lea
mov
sbb
arpl
push
jge
inc
jecxz
cmp
mov
cmp
idiv
sub
sub
inc
push
insb
add
mov
push
sbb
rorl
leave
jg
inc
push
xor
out
out
xchg
sub
xchg
adc
add
pushf
sbb
push
sahf
fidivrl
add
lret
outsb
sub
pop
add
xchg
lcall
push
push
xchg
add
inc
jle
lds
jno
xor
push
inc
inc
bound
and
xor
fs
xor
pop
aas
outsl
xor
dec
add
pop
aam
mov
inc
dec
xor
xchg
jb
jge
hlt
push
in
mov
int3
push
mov
pop
insb
xchg
bound
enter
push
mov
mov
aaa
shlb
add
and
cmp
inc
push
dec
jae
push
dec
add
dec
mov
lea
add
cwtl
ds
shll
inc
pop
sbb
adc
mov
sub
out
cltd
add
jns
push
out
scas
daa
jle
cmp
test
xor
cmp
outsb
push
insl
mov
outsb
ljmp
bound
push
xchg
stc
aaa
shld
mov
test
test
pop
add
aaa
pop
jne
aas
jo
push
or
and
or
daa
int3
shlb
mov
shrl
inc
inc
fisubrl
adc
roll
repz
popa
loop
mov
sbb
cwtl
je
fstl
mov
fdivs
sub
dec
xchg
fsubl
ret
loop
push
lea
imul
xor
dec
iret
pop
rolb
test
rorb
and
ljmp
fdivp
cmp
adc
jge
test
pusha
imul
dec
test
outsl
clc
aas
add
shll
arpl
and
push
out
push
pop
sub
in
jecxz
data16
and
roll
or
inc
les
mov
in
jecxz
push
jae
repz
push
lods
pop
xor
aaa
insb
lods
lahf
rsqrtps
push
adc
and
xchg
aad
push
clc
and
and
ja
outsl
ret
xchg
jb,pn
fiadds
pushf
mov
les
add
fwait
loope
pop
jae
cld
or
out
add
int3
mov
mov
mov
cmpsb
test
or
cli
dec
push
inc
adc
push
sub
icebp
dec
or
inc
mov
jl
mov
or
nop
outsb
aaa
jae
fbld
cmp
fnstsw
cmpsb
push
rcrl
sti
ret
test
mov
push
push
xor
and
pop
push
cltd
insl
push
pandn
jge
mov
rorb
push
fwait
sub
incb
pop
dec
and
lea
add
lret
pop
xor
xlat
mov
mov
pusha
imul
lret
mov
dec
adc
dec
jnp
push
pop
or
cmpb
scas
mov
aad
fs
or
dec
out
mov
sub
mov
add
les
add
imull
xchg
push
push
and
xlat
popa
aam
xor
lret
cmpl
pop
cld
mov
nop
push
std
fwait
imul
daa
dec
imul
inc
cmp
push
mov
out
mov
int
xor
push
lods
jnp
bound
mov
mov
pop
frstor
lods
cli
pop
or
jge
adc
dec
push
mov
lods
mov
or
mov
cmc
and
lock
xchg
sbb
jno
loop
lea
pop
add
pop
jae
fcomip
sahf
data16
add
inc
push
mov
das
pop
xchg
js
insb
and
ret
mov
push
xchg
pushf
ret
jp
clc
imul
xchg
mov
inc
call
fsubrs
xlat
mov
cmpsb
pop
loopw
jbe
jge
sub
dec
addr16
repnz
bound
mov
mov
test
dec
stc
dec
sti
lret
jl
jge
and
mov
repnz
incb
shrl
ds
cmp
lcall
mov
popa
ja
jl
mov
push
out
das
loop
sbb
cmp
iret
mov
fdivrl
dec
vphsubwd
pop
cmc
lret
nop
fldenv
filds
mov
dec
cmpb
adc
aam
pop
xchg
lret
inc
or
imul
ret
lock
cli
inc
mov
int
sub
xchg
mov
cmc
xchg
jno
cmp
imul
scas
in
in
movsb
cmp
into
lods
pop
mov
jecxz
js
sub
clc
daa
mov
adc
mov
stos
pop
mov
jmp
xor
dec
subb
jns
dec
pop
js
mull
lahf
cmp
ljmp
mov
aas
xor
daa
es
inc
push
add
or
cwtl
cmpsb
mov
sbb
in
cld
pop
cld
test
xor
inc
cmp
pop
scas
inc
adc
das
add
not
scas
add
int3
push
and
pushf
movsb
fcmovnb
arpl
cltd
test
sub
je
xorb
jne
jno
rcr
daa
sub
arpl
lock
sub
out
aas
dec
icebp
test
ret
jp
daa
xchg
sbb
out
mov
ds
sbb
mov
pushf
clc
mov
sbb
insb
adc
jg
pop
pop
and
mov
jbe
popf
and
jge
jb
add
or
sub
out
aam
pop
push
and
cmpsl
ljmp
mov
inc
adcb
test
leave
sub
mov
shrb
mov
push
add
mov
sub
data16
sub
loopne
and
adc
rol
dec
sbb
in
or
mov
clc
iret
mov
sub
incb
cmp
mov
movsl
pmaxsw
sub
push
xorb
xor
loopne
dec
lcall
push
int
out
push
xor
push
cmpsl
push
mov
fmul
mov
pop
pop
sbb
test
ret
xchg
dec
out
push
sbb
outsl
push
in
call
add
mov
push
int3
subl
movsl
pop
icebp
and
int3
and
push
push
repnz
sti
mov
xor
int
push
sahf
aas
fistl
cld
loop
hlt
fstps
ret
push
mov
in
jns
jb
mov
sti
or
mov
xor
cmp
dec
mov
adc
push
test
in
cli
mov
test
xorb
test
shll
stos
mov
adc
pusha
push
push
fcompl
xor
sub
inc
lock
cmovno
push
and
pop
mov
cmp
test
pop
pop
cmp
fstps
xchg
fxch
push
aas
rclw
and
add
and
sbb
icebp
pop
in
push
pop
xchg
jo
pop
daa
fmull
aas
pop
test
inc
jb
mov
sub
sbb
mov
inc
pshufw
daa
cmpsl
dec
cmovge
push
push
mov
add
add
mov
sahf
and
and
fstl
pop
add
hlt
mov
sbb
loop
push
les
push
lahf
aam
lods
lret
test
xor
push
xchg
call
cmp
xchg
addr16
aas
mov
jo
in
rclb
mull
movsb
fldcw
lea
xchg
fisubl
les
sbb
cmpsl
into
scas
add
arpl
or
jmp
jo
call
xor
pop
cltd
pushf
loopne
add
clc
mov
movsl
mov
push
mov
jb
and
jg
ret
sbbl
sub
adcl
fmull
mull
xor
add
js
xor
mov
dec
sbb
or
mov
inc
into
xchg
fstps
push
popa
sub
adcl
insl
or
mov
sbb
push
pusha
imul
je
insb
push
mov
push
push
cmp
or
fisubrs
sbb
or
sub
gs
mov
and
fcmovne
ret
jmp
adc
push
inc
call
sahf
xchg
inc
mov
lcall
dec
or
jl
shll
das
sub
fmuls
cmp
rcrl
xchg
jno
pop
or
cmp
dec
and
jl
mov
xchg
mov
push
sbb
shlb
stos
sbb
hlt
push
push
push
fcmovne
mov
outsl
mov
mov
push
clc
test
aas
je
dec
das
jp
sub
push
into
pop
fwait
or
adc
sub
adc
shrb
rorl
in
mov
xor
lods
inc
mov
fistps
or
iret
add
ret
inc
int
xor
ficoml
fwait
pop
push
into
mov
cmp
lods
mov
loopne
jb
stos
aam
push
xchg
mov
adc
das
pop
dec
xchg
cmc
xchg
mov
xchg
sbb
gs
roll
and
outsl
in
es
sbb
mov
mov
sarb
loope
dec
pop
popf
xchg
push
jne
lret
xchg
loop,pt
lcall
jnp
sbb
rcrb
jnp
icebp
push
push
pop
stos
outsb
sub
mov
and
lcall
lods
jb
loopne
mov
out
out
dec
addr16
or
or
jl
test
int
or
xchg
popa
sub
mov
adc
xchg
adc
pop
idivl
fsub
cld
jp
pop
insb
shlb
sahf
cmp
stc
inc
push
ljmpw
stos
cmpsb
arpl
outsb
gs
outsb
mov
cld
mov
mov
mov
das
out
leave
mov
lahf
lahf
arpl
test
jb
cwtl
sbb
jge
repz
lret
and
lock
mov
sti
sbb
mov
mov
sbb
into
adcb
dec
daa
aas
push
cmovns
icebp
xchg
and
mov
sbb
cmp
aad
mov
iret
scas
jae
icebp
sbb
out
jnp
arpl
push
or
ds
ret
mov
mov
notl
sbbb
lcall
iret
add
mov
sbb
cs
lock
xchg
sub
mov
jle
addr16
dec
inc
pop
jae
and
cltd
xor
xchg
jb
lock
fisttpll
jmp
les
in
fmul
hlt
and
jns
aaa
arpl
test
sti
pop
loop
dec
and
out
jg
cld
cmp
mov
ret
rcll
mov
xor
push
inc
sti
cmp
test
aad
xchg
ljmp
inc
mov
out
ret
xor
outsl
sarb
add
imul
pop
repnz
mov
mov
ds
ljmp
in
out
jo
aam
mov
sub
add
sub
leave
cld
cmp
idivb
cmp
xchg
lock
cltd
pop
es
fsubr
adc
mov
std
adc
lahf
lods
arpl
sbb
testl
sbb
outsl
inc
stc
jns
or
xchg
xor
pop
mov
lahf
adc
fucompp
cltd
cmc
pop
and
pop
loop
mov
jns
adc
add
and
push
orb
outsl
jg
add
lea
adc
mov
gs
out
subb
add
jbe
or
mov
insb
push
sub
xchg
inc
stos
cmp
addl
nop
lcall
add
xor
and
mov
sub
mov
pop
push
loop
aam
add
mov
stos
mov
and
pop
inc
xor
cltd
dec
stos
add
mov
cmpsl
jns
mov
mov
adc
mov
cmp
insl
clc
pushf
pop
cmp
aas
sub
adc
and
push
sub
mov
push
and
hlt
lds
add
lcall
mov
je
push
mov
xor
in
repnz
aam
les
rcl
add
pop
xchg
xor
xorl
jg
jns
shlb
movsl
dec
outsb
std
rorb
xchg
pop
dec
xor
divl
popw
jno
andl
dec
lods
movsl
pshufw
push
add
in
shl
sub
xchg
sbb
adc
gs
cli
inc
jle
push
and
pop
xor
aaa
mov
stos
mov
in
jle
jge
test
lds
sub
push
mov
mov
add
push
jb
pop
lret
stos
dec
cs
inc
js
cltd
inc
jle
and
aaa
xchg
mov
test
popf
jg
xor
add
dec
out
test
je
cmp
cmp
dec
mov
push
xchg
xchg
mov
or
add
inc
mov
xor
xchg
jmp
cwtl
pop
ds
mov
mov
inc
pusha
fdivr
sbb
out
xchg
xor
adc
aad
imul
or
iret
and
add
cltd
cwtl
pop
pop
adc
xor
pop
mov
test
fisubrl
mov
xor
mov
sarb
mov
dec
outsb
sub
cmp
daa
sbb
pop
fadds
in
cmpsb
in
add
movsl
adc
loop
into
mov
movsb
dec
push
out
mov
adc
inc
test
int
mov
push
in
or
pop
fidivrs
mov
fwait
sub
cs
cmp
sub
or
lret
lahf
mov
sub
cli
sti
sub
pop
lret
dec
pop
dec
adc
mov
sub
add
add
stc
out
inc
std
fidivrs
movsb
dec
and
or
mov
add
js
repz
xor
or
shrl
cld
mov
enter
hlt
jno
lret
rcrb
adc
inc
dec
dec
test
mov
adc
repz
sti
jp
mov
loopne
mov
xor
cmc
int
adc
dec
and
add
scas
jno
fxsave
test
add
sub
mov
cmova
mov
jnp
and
and
mov
call
in
mov
sbb
mov
and
sbb
jge
inc
into
int3
test
fistps
jmp
fmulp
jmp
push
push
js
mov
das
or
jmp
fcoms
js
xor
movl
jnp
adc
movsb
fwait
inc
in
and
mov
xchg
enter
add
add
xor
mov
push
or
jecxz
jns
dec
movsl
mov
fadd
and
test
cltd
cmp
pop
push
inc
adc
lret
xor
mulb
add
in
sub
dec
mov
dec
pop
lret
fcmovu
adc
in
out
xchg
std
cmpsb
fidivs
into
pop
cld
and
lahf
cmp
mov
loope
xor
mov
push
add
bound
ljmp
popf
insb
xchg
xor
ret
pop
mov
cmp
inc
push
dec
in
xchg
ljmp
imul
dec
lcall
mov
outsb
mov
popf
cmp
pushf
cmp
mov
push
fdivs
testb
xchg
or
repnz
or
cli
or
leave
loop
std
mov
or
xchg
fcompl
xor
lcall
sbb
outsl
popa
cmp
adc
je
jb
nop
mov
jg
xlat
out
pusha
mov
fstpt
int
stos
ret
inc
ja
dec
adc
xchg
int3
out
inc
fstpt
dec
sbb
fdivs
add
xlat
fsubr
leave
test
loop
and
sbb
mov
js
in
adc
outsl
insl
and
scas
je
hlt
cmp
scas
dec
popa
pop
xchg
out
imul
mov
push
inc
xchg
sbb
xor
inc
cs
push
push
cmpsl
dec
dec
or
pop
cmp
js
lea
and
inc
ret
xor
sbbb
sbb
rcrb
push
jmp
mov
sub
rclb
insl
pop
daa
inc
sbb
fiadds
sub
adc
adc
dec
aad
xor
jns
pop
mov
shlb
scas
jmp
push
js
xchg
sbbb
in
adc
xchg
lds
xor
lds
xchg
fwait
popa
fwait
or
inc
and
push
add
jp
inc
push
xor
dec
adc
push
imul
cmpsl
mov
xorb
inc
mov
sbb
xchg
jp
into
mov
scas
mov
aaa
dec
pop
int3
cld
add
dec
les
out
movsl
add
mov
add
test
sub
fstp
rcrb
stc
stos
sub
mov
aam
cmp
xor
cltd
ljmp
ficompl
in
das
out
pop
push
mov
add
jnp
mov
stos
ficomps
and
xchg
pushl
xchg
movsl
ds
inc
mov
popf
jno
inc
inc
sbb
cmp
add
sbb
arpl
ss
inc
sub
out
div
imul
imul
push
imul
adc
arpl
dec
ja
mov
add
fadds
cmpl
sub
and
jb
mov
pop
cmpsl
jae
cltd
out
in
jnp
or
fs
sbb
ljmp
add
jnp
push
mov
cmpsb
adc
mov
pop
push
or
jo
outsl
ja
test
or
xor
pushf
lock
pop
fucom
ljmp
cmpsl
cld
sbb
jnp,pn
xchg
leave
pop
out
dec
jle
loop
adc
mov
push
andps
inc
arpl
sub
jae
dec
xchg
and
sbb
lcall
pop
dec
xor
in
jl
aad
lahf
imul
sbb
xor
push
aam
push
and
mov
pop
push
movsl
sti
push
pop
mull
and
repz
sub
push
repz
jnp
fldcw
outsl
fdivs
cli
xchg
jg
lock
add
and
repz
int
jb
add
cmp
sub
push
jl
shl
rcrb
inc
out
fmuls
push
lods
mov
rorb
push
xchg
pushf
mov
dec
sub
lods
push
jnp
mov
add
cmp
add
movsb
mov
or
sub
xor
nop
pop
loopne
pop
int
pop
fiadds
add
push
cmpb
neg
cltd
inc
dec
dec
bound
jns
xor
mov
sub
pop
sahf
inc
enter
cmpsb
loop
and
xchg
std
mov
into
xor
mov
mov
sub
test
insl
adc
outsl
pop
lods
xor
imul
and
test
pusha
fstps
cmp
fxch
mov
pop
imul
sbbb
mov
dec
jo
jge
movsl
shrb
cmp
or
mov
ljmp
fidivrs
inc
jne
int
pop
test
xchg
xchg
cmp
and
inc
xlat
push
mov
fwait
and
sbb
mov
sbb
mov
or
and
xchg
shrl
xor
push
pop
int3
or
jbe
inc
or
ja
ficompl
not
das
inc
into
inc
fbstp
sbb
xchg
dec
push
dec
adc
push
icebp
call
dec
icebp
pushf
lret
stos
push
jns
mov
jmp
ja
mulb
xchg
add
adc
ds
sahf
mov
mov
fdivs
mov
fabs
push
scas
mov
or
daa
shll
loope
nop
jno
dec
mov
sbb
out
cmpsb
cld
rol
mov
dec
cwtl
scas
or
inc
inc
push
ret
inc
in
scas
and
repz
mov
in
jno
push
or
pusha
mov
cs
scas
xchg
pop
rcrl
lcall
sbb
sub
rolb
xlat
lods
out
xorb
inc
loop
insl
push
cmp
inc
sub
sbb
cmp
enter
mov
loopne
and
dec
pop
push
cmp
add
add
cld
jg
and
pop
loop
ret
imul
and
push
lock
arpl
pop
sahf
out
mov
xor
push
mov
push
mov
scas
stos
addb
out
inc
out
xchg
je
test
mov
mov
lret
stos
and
sub
sub
shrb
outsb
push
lods
dec
push
addr16
jp
repz
fwait
sbb
repz
cmpsb
fstp
repnz
sbb
pop
sub
mov
and
insl
dec
push
jae
pop
push
push
fwait
jecxz
xor
cld
ror
test
stc
cli
fsub
lock
push
inc
stos
push
xor
clc
cmp
jl
stos
xor
bound
sbb
mov
and
pop
arpl
fimuls
out
test
jmp
or
daa
jns
sub
dec
inc
ds
movsb
adc
popf
inc
cld
in
sbbl
push
int3
mov
sub
cmp
adc
popa
xchg
add
out
jp
out
lret
imul
xchg
popf
outsl
xor
inc
or
inc
push
mov
icebp
mov
cmp
xorl
in
sbb
sbb
jge
xchg
rol
lds
mov
out
push
scas
out
cmp
out
xchg
pop
pop
fwait
test
adc
lret
xor
pop
lahf
dec
push
pop
out
cmp
loop
mov
dec
sahf
hlt
inc
mov
xor
enter
cmp
jns
mov
jg
ficompl
lods
dec
insl
repnz
bound
icebp
mov
adc
add
lea
mov
push
movsl
inc
pusha
int3
aas
inc
cltd
addr16
inc
fwait
pop
lret
cmp
mov
ret
xchg
dec
add
andl
or
rolb
lods
nop
mov
lret
pop
repz
cld
jl
fdivl
fsts
or
dec
mov
into
mov
mov
inc
jle
out
push
mov
sub
fsubrs
sub
cmc
popf
xchg
sahf
push
pushw
sub
popf
rclb
adc
add
mov
data16
testl
mov
cwtl
dec
mov
arpl
sbb
mov
stos
dec
cmp
int
out
cmp
dec
in
out
inc
scas
mov
lea
ret
adc
pop
lcall
jle
clc
pop
rcll
xlat
pop
lods
xor
adc
jae
ja
xlat
mov
iret
xor
mov
imul
dec
add
cmp
movsb
aad
pcmpeqw
data16
push
sub
xor
mov
mov
bound
outsb
push
jge
lret
sub
sti
sub
adcb
lds
mov
insb
inc
mov
das
das
aam
in
lock
dec
mov
pavgw
pop
jnp
inc
cmp
xor
gs
mov
dec
jnp
add
and
pop
xor
and
inc
cmc
pop
test
scas
mov
sub
inc
push
mov
aas
pop
cs
aas
cmp
pop
pop
push
out
mov
stos
clc
call
dec
popa
mov
inc
insb
mov
out
ret
pop
mov
and
mov
push
into
lock
out
pop
pop
pop
insl
inc
cmpsb
xchg
push
jb
insl
or
push
loop
and
mov
loopne
lock
sub
int3
dec
repz
popa
out
add
mov
lahf
dec
fs
aam
jb
cmp
test
repnz
mov
mov
shl
ret
faddl
shl
jmp
pop
jle
sar
scas
aas
adc
mov
xor
nop
jge
mov
and
fsubl
stos
dec
ss
mov
cmp
xorl
inc
lock
jl
movaps
dec
loop
adc
ret
loop
mov
pop
addr16
mov
rcrb
insl
ds
rcrb
dec
mov
push
fcomps
lods
mov
sbb
mov
cmp
push
pusha
xor
ja
mov
inc
lret
sbb
mov
dec
pop
dec
test
jmp
mov
insl
call
cmp
add
sbb
cmpsl
shlb
fdivrs
xor
cmp
lahf
in
bound
xor
lods
imul
push
mov
sti
add
fstl
mov
dec
test
stos
mov
lds
stc
push
cli
inc
add
popf
rol
push
lret
mov
xchg
push
cmpsl
cs
nop
mov
adc
mov
pop
and
cli
orl
divl
push
rcrb
movsl
sub
test
jmp
xchg
and
ljmp
mov
push
push
rcl
add
nop
out
sbb
outsb
jne
adc
xchg
xchg
mov
roll
loopne
lds
push
cmp
icebp
push
mulb
in
mov
imul
push
push
sbb
enter
arpl
cmp
inc
mov
push
jo
pop
jge
sub
mov
dec
test
mov
std
rcll
fmuls
ljmp
push
repnz
ficoml
cmpsl
jb
ds
mov
nop
enter
add
loope
inc
shll
icebp
shll
or
rclb
popl
xchg
lea
or
lret
lret
mov
movsl
xlat
mov
leave
adc
lods
xor
int3
pushf
and
push
jp
mov
dec
aad
mov
sbb
add
aam
adc
pop
cmc
add
jae,pt
jnp
js
stos
lcall
pop
jecxz
out
cmpsb
cli
xchg
js
mov
test
jg
mov
loope
popf
or
sbb
mov
mov
arpl
rorb
cltd
adc
inc
add
decb
or
mov
aam
fimull
jl
cmp
jb
fwait
inc
out
sahf
lret
xor
add
lret
dec
cmpsb
nop
cmp
and
xor
mov
outsb
ja
sar
js
push
stos
push
or
sbb
and
fldl
lds
sbb
dec
sub
sbb
or
dec
sbb
pop
ljmp
sub
sub
push
in
jae
cwtl
mov
push
std
out
insb
adc
xor
test
inc
mov
sub
aas
cmpsl
repnz
fwait
mov
pop
adcl
jno
cmp
daa
call
cmp
xchg
insl
push
test
into
fildl
out
mov
outsl
xchg
or
sub
push
sub
movsl
push
test
es
ljmp
or
addr16
inc
push
scas
loopne
divb
scas
test
fsubs
ret
push
ljmp
dec
inc
add
pop
mov
xchg
xor
shl
xchg
xchg
mov
mov
es
sbbl
add
add
in
and
aas
fcomip
out
or
or
ror
add
imul
sbb
pop
std
in
icebp
mov
mov
jbe
cmp
pop
adc
cmp
into
aad
mov
dec
out
mov
push
jge
call
loope
mov
adc
lret
orb
insl
mov
jl
neg
movsb
and
out
jns
sub
arpl
ret
mov
xchg
js
fstpl
xchg
gs
call
fwait
in
mov
dec
mov
stc
mov
sbb
fdivl
js
lcall
mov
addr16
or
in
arpl
push
shlb
pop
cmp
sbb
pop
sub
lock
pop
jno
scas
add
mov
fs
filds
insl
mov
dec
inc
push
and
xor
fldenv
scas
push
fcompp
cmc
jne
repz
jecxz
mov
add
insl
jle
inc
adc
ljmp
fisttps
out
or
sub
addr16
dec
inc
push
xor
arpl
dec
mov
out
aam
mov
inc
xchg
loope
inc
call
push
pop
jbe
xchg
sbb
movsl
scas
push
dec
adc
inc
cmpsl
rcrb
inc
fnstsw
push
clc
loope
push
inc
scas
dec
lods
jp
test
in
sub
test
mov
fimull
out
daa
and
sub
movsb
scas
cld
test
aam
xor
add
cwtl
jae
popa
cmp
adc
sub
in
sbb
outsl
rorl
lret
xchg
aas
pop
sub
in
sub
jle
push
mov
rorb
cmpsl
sub
xchg
xchg
pushf
jl
xor
adc
movsb
lcall
mov
xchg
dec
jo
push
pop
dec
or
pusha
dec
rcrb
out
xchg
sbb
movsb
imul
aad
in
push
data16
mov
xchg
les
mov
sub
cmpsl
cld
or
sahf
fwait
adc
mov
jne
movsb
jl
arpl
and
test
jno
movsb
scas
jle
sub
or
dec
repz
in
into
pop
xor
xchg
push
xor
and
hlt
mov
xor
dec
pushf
cltd
jbe
sbb
push
cmpl
push
nop
pop
xchg
ja
or
lcall
hlt
mov
std
adc
pop
jl
dec
xor
sbb
int3
pop
aad
in
or
push
dec
sub
icebp
arpl
push
sbb
add
test
jle
xor
shll
push
mov
popf
dec
daa
repnz
dec
test
mov
out
lods
pop
cmp
push
jp
pop
mov
sub
int
hlt
jns
or
add
xchg
dec
out
jmp
cs
or
imul
jecxz
fbstp
mov
scas
sub
jg
out
test
inc
mov
cmc
icebp
pop
cmp
cmpsl
add
jge
ds
insl
lea
ret
push
sub
mov
sbb
add
gs
mov
lcall
loopne
push
sbb
subl
push
cmp
popl
cmp
mov
mov
test
sti
arpl
sbb
or
inc
mov
pop
insb
addr16
xlat
adc
and
mov
test
fsubl
xor
imul
fnclex
mov
xor
orl
lock
sbb
mov
repz
and
cmc
cwtl
mov
cmp
fwait
scas
xor
cwtl
andb
les
and
cmp
movsb
insb
and
fcompl
mov
sbb
sub
sti
push
jle
add
test
enter
pop
push
lahf
push
int3
daa
cld
or
and
fs
mov
add
std
fcmovne
rcr
arpl
add
and
mov
dec
sbb
push
and
pushf
mov
mov
ldmxcsr
mov
leave
mov
cmp
gs
fs
into
enter
fmuls
outsb
and
ja
data16
push
jbe
dec
xor
les
push
mov
jo
lcall
sub
jl
inc
and
or
pop
popf
push
aad
lock
or
push
lods
lret
xor
lahf
inc
and
pop
jg
int
rcrb
stc
cmpsb
mov
pop
push
sub
bound
and
jecxz
fwait
std
in
mov
add
xor
hlt
push
mov
ret
fstpt
cmp
sbb
jo
das
mov
xchg
sbb
enter
xchg
pop
mull
scas
mov
jl
repnz
test
aaa
push
cld
mov
hlt
jg
lahf
dec
scas
pop
sbb
jno
jae
adc
add
fs
sub
jo
push
pop
fucomip
xor
mov
cmp
std
add
xor
addr16
clc
rorb
inc
cmp
rolb
xor
call
mov
xor
mov
push
or
sub
push
jp
mov
and
xchg
xlat
xchg
addl
roll
dec
dec
clc
cmp
fcomps
in
xor
sbb
cli
sub
jns
mov
xor
jo
addl
insl
movb
in
push
and
ds
inc
and
les
adc
mov
adc
inc
or
mov
out
adc
or
jl
push
cmc
dec
xchg
sbb
fs
pop
pop
pop
ds
stc
dec
xchg
xor
xlat
data16
xor
jp
lock
xor
in
es
loope
xchg
aaa
inc
cmp
loope
xchg
jp
and
mov
push
jnp
leave
or
cmp
sahf
jmp
dec
hlt
cmpsb
push
cltd
jno
cmp
insl
pusha
sbb
sbb
subl
mov
hlt
ret
aam
mov
cs
ret
mov
pop
jae
sub
pop
xchg
inc
popa
enter
dec
popf
repz
xchg
xor
xchg
pop
movsb
push
outsb
mov
mov
sti
stos
dec
ljmp
int
xorb
repz
dec
leave
push
mov
ret
cmp
dec
sarb
add
sub
fucompp
mov
jmp
fwait
mov
mov
xchg
stos
mov
test
gs
dec
filds
andl
je
call
cmp
lret
mov
dec
and
cltd
outsb
in
sub
push
aam
mov
sub
das
jmp
insb
loopne
pop
out
js
lds
data16
mov
adc
into
sarb
cmp
aas
pop
outsb
push
fdivrs
pop
aam
imul
loopne
in
test
pushl
jle
pop
xchg
push
popa
adc
pop
outsb
cmpsl
push
push
imul
add
lret
ja
daa
inc
call
ljmp
add
ficomps
clc
and
mov
pop
adc
cmp
jns
dec
mov
xchg
xlat
fwait
jp
ffree
test
sbb
les
sti
add
neg
cmp
cs
cmp
push
lods
push
imul
dec
test
lahf
lock
addr16
pop
lahf
jg
inc
xor
fdivr
pop
enter
cmp
pop
add
pop
or
dec
jmp
dec
cmp
mov
cmpsb
mov
in
mov
or
xorb
sbb
mov
xorb
fisttpl
pop
cwtl
add
jnp
sub
lds
push
adc
sub
cmp
bound
pop
pop
and
clc
mov
mov
add
rol
sub
mov
cmp
adc
jbe
movb
into
adc
dec
push
xchg
hlt
das
fidivs
fistps
fscale
add
lds
push
xchg
or
jae
ret
lods
lahf
lods
scas
movb
jecxz
aas
cmp
dec
in
ja
or
inc
pop
xor
xor
and
icebp
gs
push
push
jae
ret
lret
adc
and
in
aaa
add
xor
cmp
add
mov
lods
xor
pusha
notb
sbb
lcall
pusha
push
popa
sub
cmp
jle
stos
fldenv
shl
mov
mov
cli
data16
sub
inc
xor
mov
sbb
add
sub
inc
lods
pop
push
push
addr16
mov
js
adc
fcmovnb
push
cmpsb
test
es
xor
aaa
sbb
imul
cmp
lea
ret
add
xor
mov
scas
dec
dec
sub
sti
jbe
adc
popf
mov
out
xchg
aas
inc
out
mov
sub
iret
xor
stos
mov
ret
bnd
mov
sub
in
inc
roll
lock
je
out
mov
mov
cwtl
scas
in
pop
mov
imull
sbb
test
cmp
adc
pop
or
scas
rclb
fnstsw
daa
mov
or
xor
dec
fbstp
enter
and
gs
movsb
pushl
lock
sbb
mov
or
cmpsl
int3
push
movsl
pop
jae
cmpb
lods
scas
ret
inc
jmp
cmc
xlat
repz
jnp
and
mov
hlt
mov
sub
rorb
std
popf
sbb
mov
inc
and
mov
in
leave
cmpsl
pop
imul
mov
xor
jbe
mov
and
cmp
xchg
jo
adc
std
fstl
push
in
xor
in
inc
insb
cld
pop
rcrl
mov
push
daa
scas
stos
lahf
inc
outsb
out
jmp
sub
jae
pop
push
pop
mov
xchg
cmpsb
mov
in
pushw
pop
adc
ds
fsub
std
sbb
mov
sbb
adc
jns
in
mov
sub
or
pop
mov
test
adc
stc
add
cmpsb
lret
push
dec
adc
in
scas
aam
aaa
fimull
xor
push
push
xchg
xor
add
inc
adc
mov
inc
adc
std
ja
mov
cmpb
jno
mov
jp
pop
sub
mul
xchg
and
lods
fldcw
mov
dec
and
mov
and
or
lds
jle
add
dec
test
int
mov
lods
loope
sub
clc
mov
push
fwait
inc
leave
in
mov
or
or
test
cwtl
shlb
shll
push
and
aad
push
lods
sbb
push
ret
dec
inc
cmp
int
inc
sub
dec
fisttps
pusha
lcall
push
lods
es
or
add
or
mov
jge
dec
mov
jle
inc
lahf
icebp
cmpb
lret
lods
mov
inc
shrl
and
mov
test
in
lcall
mov
xor
fldcw
iret
rcrl
imul
mov
out
ljmp
mov
cmpsl
lea
and
mov
pop
adc
lcall
mov
jnp
notl
subb
shlb
xor
sbb
das
sub
shlb
inc
mov
xchg
cmp
movaps
xchg
les
xor
stc
and
mov
fnstcw
or
sub
push
pop
cmp
inc
add
iret
arpl
dec
fistpl
and
push
xchg
popa
sub
jb
notb
out
ret
clc
jmp
mov
mov
int3
push
mul
xor
fnstenv
fnsave
xchg
jle
rorb
jns
inc
sub
adc
rcl
push
scas
in
xchg
test
lcall
pop
outsb
sarb
orb
mov
scas
stos
or
into
xlat
stc
xor
jge
test
sub
int3
xor
shrb
lock
jb
mov
in
push
lock
cmc
and
ljmp
cmp
in
push
dec
adc
insb
pop
sahf
adc
test
push
jle
or
adc
jo
or
test
fmuls
push
aam
push
xchg
sbb
imul
inc
xchg
ret
dec
pop
xor
dec
jp
clc
leave
pop
mov
and
rorl
orl
in
into
lds
repnz
push
push
stos
xchg
sbb
mov
clc
adc
jg
andl
adc
jns
inc
inc
mov
or
fs
sbb
faddl
test
and
cmp
mov
lret
push
push
push
sbb
in
cmp
cmc
pop
jo
jne
sub
js
andb
mov
pop
mov
jg
pusha
jb
jmp
aam
movsb
fstpl
cld
dec
pop
xor
scas
cmp
jae
add
or
andl
pop
cmp
shlb
fsts
stos
sub
cld
mov
xor
xor
push
mov
cmpsl
or
mov
pusha
sub
xchg
sbb
or
mov
lock
fwait
push
loope
push
add
dec
orb
mov
cmp
adc
adc
pop
inc
in
movsb
xchg
mov
sub
cmp
leave
in
in
mov
jns
mov
xor
leave
daa
mov
sbbl
add
push
pop
mov
pop
es
in
mov
pop
add
sahf
popa
xor
add
in
rcrl
add
xor
icebp
int
mov
loope
fs
scas
mov
xor
loopne
mov
adcl
push
psrad
movsl
data16
je
aam
cmp
inc
movsl
lahf
mov
outsb
imul
lret
jo
jbe
je
inc
ss
push
jmp
and
in
dec
add
sbb
cmpsl
cmp
mov
pop
or
add
test
in
xor
incl
xor
jmp
ret
cmp
jae
sbb
cmp
mov
stos
andb
mov
mov
rclb
icebp
jg
in
inc
mov
shll
outsb
cmp
jge
add
xchg
add
or
xchg
or
jmp
scas
and
fdivrl
add
jg
lea
inc
or
mov
sub
mov
inc
stos
nop
adc
jno
xchg
lods
sbb
cli
sbb
test
in
fisttpl
mov
adc
das
arpl
lods
add
out
mov
dec
mov
push
dec
cmpsb
mov
test
into
mov
and
hlt
frstor
cmpsl
sbb
or
ret
cmp
andnps
sbb
push
add
push
sbb
in
cmp
and
adc
inc
and
mov
fnstcw
xlat
mov
mov
imul
xchg
pop
add
xchg
mov
sbb
jl
lcall
arpl
mov
js
out
movsl
pop
in
dec
lcall
xor
pop
aad
notl
sarl
mov
xchg
fstp
out
pushf
cmpb
jmp
dec
sub
cmc
pop
iret
pop
call
jecxz
test
mov
pop
in
xchg
aas
sub
adc
cs
inc
mov
out
sbb
add
mov
xor
sahf
jno
std
adc
inc
pop
and
jecxz
mov
ss
pop
fisubrl
loopne
popf
or
ja
call
sub
lds
jnp
loope
mov
mov
fnstenv
and
imul
scas
or
fs
mov
push
inc
adc
fdivl
insl
test
and
lods
jo
out
sub
icebp
pop
cmp
stc
sub
sub
push
out
push
sbbl
test
jg
inc
ja
push
xchg
mov
ja
jnp
out
das
mov
mov
in
mov
jb
leave
mov
mov
nop
adc
xor
dec
rol
inc
loop
decb
jno
fldt
lret
fisttpll
std
rcrl
push
sarb
das
push
xchg
add
into
inc
data16
test
pop
pop
gs
les
cmp
sbb
mov
fcoms
cmp
jp
cmp
mov
mov
fistpll
shl
lock
pusha
shll
pop
jae
mov
mov
sbbl
arpl
or
idivl
outsl
xchg
pop
sbb
adc
loop
inc
jg
stos
stos
sbb
mov
xor
shlb
popf
aad
cmp
adc
lcall
push
andb
scas
sahf
aad
lahf
xorb
sar
mov
add
icebp
clc
jb
mov
and
repz
and
adc
loop
xchg
lock
daa
push
add
xor
add
fwait
inc
cmp
idivb
push
and
jae
imull
pop
sbb
xor
xchg
sub
push
push
xchg
dec
int3
mov
cmp
jl
dec
dec
fildll
jbe
inc
outsb
jge
out
cmp
cmp
adc
pushf
std
out
gs
movsl
test
leave
mov
add
mov
mov
pop
jmp
jmp
sbb
iret
ret
mov
ds
jg
sarl
mov
imul
or
inc
sbb
es
mov
shrb
mov
mov
xchg
gs
lcall
xchg
aam
push
fistps
push
inc
and
dec
mov
adc
cmp
call
sbb
push
inc
add
mov
repz
popa
mov
adc
cs
stos
xchg
int3
cmp
scas
sub
pop
push
dec
fwait
xchg
adc
mov
test
leave
stos
pop
cmp
mov
xchg
add
aaa
xchg
pop
repnz
xchg
mov
cmp
fisttpll
call
jbe
ja
inc
fdivrp
imul
aad
xchg
dec
js
sub
push
xchg
sbb
notl
mov
mull
shrb
outsb
aad
pop
xchg
adc
cltd
enter
xchg
std
andl
add
ljmp
push
xlat
test
popf
mov
arpl
or
in
push
cmpl
adc
rclb
mov
movsb
mov
adc
xchg
repnz
sbbb
sbb
sbb
imul
mov
hlt
add
std
dec
sbb
sub
pop
ret
stc
pop
adc
inc
add
xor
cmp
test
push
es
and
into
mov
pushf
fildll
jns
sahf
sub
ja
ds
enter
or
lods
mov
bound
sub
or
test
adc
mov
mov
sbb
cmp
shl
ds
push
lds
movsb
dec
xchg
cmp
popa
out
pushfw
mov
fcmove
in
imul
and
mov
push
cmp
cwtl
inc
iret
out
sbb
subl
popa
dec
xor
dec
fidivl
dec
adc
dec
xchg
test
xchg
in
leave
or
fs
mov
dec
push
push
adc
mov
ljmp
push
jmp
lahf
jmp
daa
jb
pop
stc
or
pusha
mov
cmpsb
push
shll
jns
stc
jno
ror
test
and
xor
push
test
filds
fistps
xchg
push
pop
sti
int3
xchg
or
or
jb
push
loope
scas
daa
jnp
pop
dec
mov
mov
es
dec
and
fxch
xchg
dec
mov
fs
sbb
ds
jge
sub
xchg
or
xchg
mov
psubd
daa
pop
lods
pop
pushf
adc
mov
stc
lds
testb
push
sahf
add
sbb
cmp
jecxz
ljmp
xchg
xchg
out
jb
xor
sbb
add
int
outsb
lcall
inc
das
add
fs
insl
adc
cmp
imul
add
add
pop
mov
cmp
pop
scas
or
add
imul
pop
lods
out
add
mov
js
inc
loopw
fisubs
cmpsb
add
lret
xor
mov
sahf
mov
jne
daa
imul
push
insb
fnstsw
outsb
mov
mov
sti
fisttps
aad
pop
out
lret
xchg
xchg
in
call
rclb
and
inc
pop
jbe
loop
cmc
cli
out
or
inc
jecxz
arpl
mov
or
dec
mov
pop
push
jb
repz
pop
mov
fnstenv
push
jl
fisttpll
icebp
lea
ja
cmc
loopne
mov
adc
loop
xor
pop
push
je
or
rcrb
dec
setnp
lea
in
insb
data16
lcall
cmp
jp
sub
test
cmc
lods
les
pop
rcrb
les
sub
sbb
aaa
std
xchg
mov
data16
popa
daa
ss
adc
std
js
or
cmp
rorl
stc
je
sub
add
decl
sbb
out
add
popa
in
out
mov
lods
dec
pop
mov
or
dec
lcall
mov
sar
lahf
repz
mov
adc
inc
das
push
cmp
adc
mov
outsl
mov
shlb
push
or
stos
mov
xchg
mov
lds
fwait
aad
into
pop
or
xor
mov
insb
mov
hlt
dec
cmc
lcall
push
cmp
std
ret
adc
out
out
dec
pop
jb
dec
mov
and
sbbl
mov
xor
stc
xor
je
add
mov
bound
sbb
fwait
inc
xor
inc
hlt
ljmp
ret
push
call
lcall
mov
mov
int
addr16
imul
aas
in
sub
hlt
jmp
insb
jle
outsb
mov
mov
inc
jne
mov
shlb
cwtl
pop
lods
jmp
lock
add
cltd
andb
inc
adc
inc
dec
je
addr16
adc
or
dec
sub
jne
pop
cmp
dec
pop
xlat
jo
cmc
je
es
fwait
jmp
pop
mov
xchg
mov
and
iret
fstl
jmp
push
loop
outsb
mov
lock
fwait
mov
ret
je
je
jae
adc
lahf
and
nop
add
and
stos
leave
sub
in
test
lcall
nop
mov
cmp
push
call
jne
dec
push
xorl
pusha
mov
stc
inc
lahf
add
mov
xor
cmpsb
ds
dec
mov
jno
sbb
mov
fistpll
scas
std
cmpl
xor
inc
jg
call
push
stc
stos
mov
cmp
or
pop
xchg
mov
roll
adc
pop
cwtl
adc
out
mov
push
inc
loope
xchg
or
in
jecxz
sub
mov
stos
mov
adc
fdivr
scas
out
pop
outsl
ljmp
push
popf
jle
jbe
repz
rcrb
adc
mov
mov
icebp
les
fbld
jl
mov
loop
jg
dec
sti
iret
cmpsb
jno
inc
mov
fsubp
mov
or
hlt
idivb
or
mov
add
movsb
xor
imul
sbb
bound
mov
xor
inc
pop
mov
sarb
idivl
adc
int
or
jno
lea
pop
jl
adc
sub
xchg
jle
jmp
mov
call
add
je,pn
repnz
pop
fwait
inc
jl
mov
aas
adc
push
add
lret
shlb
push
scas
aas
test
cltd
sbb
mov
mov
xchg
mov
pushf
insb
aam
jb
test
mov
lea
mov
rcl
push
das
jmp
mov
les
sub
jb
jno
daa
cmc
fs
xlat
xchg
jno
stos
inc
xor
loopne
leave
popf
lret
in
dec
cmp
inc
push
inc
cli
inc
hlt
popf
imulb
xchg
and
pop
add
movsl
repz
cmp
sbb
bound
jo
pop
dec
mov
push
cld
cmpsb
out
sbb
mov
ljmp
xchg
and
cmp
mov
pop
push
inc
cmpsl
sbb
mov
pop
ret
loop
xchg
dec
pop
test
lret
call
loope
mov
je
rorb
rolb
cmpsb
sub
or
lret
ficomps
popf
mov
stos
shll
xor
xor
dec
push
stos
scas
push
and
andb
mov
jb
jge
pop
aas
mov
into
lock
out
dec
inc
cs
mov
jne
jp
and
or
sahf
mov
pop
lret
xor
sbb
imul
pusha
cmp
aad
in
sbb
sbbb
jle
mov
or
or
push
je
loop
pop
in
aaa
idivb
mov
push
ja
decl
fidivl
cmpb
js
test
sub
inc
mov
push
dec
inc
shr
mov
lret
cwtl
clc
sarb
push
add
iret
inc
pushf
ja
mov
mov
fistpll
daa
mov
popf
sti
xchg
xor
pushf
out
out
fwait
push
sbb
jecxz
es
inc
xchg
mov
int3
dec
sub
cltd
jge
mov
outsl
rorb
push
cmpsl
adc
js
and
mov
stos
into
outsl
mov
xor
pop
xchg
rolb
fsubs
es
jmp
testb
push
xor
push
pop
jbe
je
rcll
mov
sarb
adc
loope
sub
sub
mov
lcall
sbb
xor
and
cmpsb
iret
push
fisttpl
mov
mov
pop
mov
pop
sti
pop
sbb
mov
sti
or
pop
fdivrs
cmc
cld
mov
jecxz
push
outsb
or
jecxz
leave
cmp
push
mov
inc
ret
or
push
insb
or
loopne
push
sbb
fcmovne
xchg
repnz
arpl
jb
jne
pop
sbb
cmpsb
sbb
loopne
and
leave
js
sub
adc
nop
cmc
out
xchg
pop
xorb
inc
inc
xchg
fistps
fs
jge
pop
xor
jae
in
sub
sub
or
xor
jecxz
add
jmp
mov
mov
xor
xchg
pop
sahf
mov
adc
and
and
mov
adc
je
add
add
loopne
mov
aas
stos
in
enter
jne
add
imul
xor
inc
mov
std
fwait
mov
push
test
je
jl
sub
out
daa
sbb
sbb
pushl
rcll
mov
xchg
sub
mov
mov
jbe
xor
jb
and
dec
cli
cmp
sbbb
add
negb
test
cmp
popf
push
fsubrs
insb
std
xchg
ljmp
je
sub
cmp
jge
push
je
adcb
shrb
daa
and
xor
rcl
push
inc
sbb
xchg
mov
xchg
sarb
lret
dec
insl
mov
or
sub
popa
aas
rclb
inc
inc
add
loope
fmull
ficomps
mov
dec
cld
lds
jb
test
sbb
ds
inc
sbb
inc
inc
inc
iret
xor
jns
mov
repz
cmpsb
xchg
inc
jno
jns
inc
adc
mov
adc
inc
jb
stos
push
jmp
adcb
xchg
mov
xchg
jmp
sarb
sub
cld
dec
call
fisttpl
cli
nop
pop
inc
cli
mov
xchg
iret
lret
int3
in
adc
adc
jns
in
push
rcll
enter
and
inc
shll
xchg
dec
inc
mov
data16
in
cli
ret
dec
stos
pop
loop
xchg
rol
mov
mov
pop
daa
pop
add
ds
xlat
add
mov
add
adcb
cld
jmp
jmp
adcl
xor
cs
sub
cmp
in
int
dec
rcrb
stc
scas
pop
sbb
sbb
aas
adc
mov
loope
popf
ret
jg
add
rcrb
rorb
and
loopne
imul
adc
js
add
sub
mov
push
stos
mov
mov
es
das
cmpsl
dec
in
imul
adcb
cmp
jmp
out
dec
cmp
in
iret
aad
ss
out
ficompl
cs
pop
daa
xor
xor
mov
jmp
ds
cmpsb
into
sbb
ret
add
dec
es
outsb
cwtl
faddl
add
out
scas
xor
or
mov
add
fsin
cli
or
data16
xchg
sub
pop
jecxz
ja
xchg
add
mov
push
dec
jbe
pop
xchg
jge
add
add
jecxz
test
cmc
xchg
jb
shl
add
jl
pusha
in
fwait
jnp
repz
scas
xlat
mov
jb
mov
jbe
mov
dec
xlat
les
inc
stc
jecxz
sbb
lock
mov
loopne
ja
xchg
dec
cmpsl
mov
jp
out
xor
loope
or
aas
sub
sbb
sub
cmp
xor
outsb
dec
adc
pop
adc
aam
aam
sbb
lret
push
mov
lea
and
sbb
mov
std
sbb
push
cltd
sbb
sbb
iret
in
cli
pop
add
and
inc
adc
mov
mov
push
pop
pop
jg
scas
adc
nop
sub
es
fnstcw
mov
and
xor
ss
mov
je
cmc
and
jg
or
imul
inc
xchg
adc
and
scas
addr16
cmpl
mov
aas
jae
sub
xor
in
out
pop
loopne
mov
sub
outsb
cmp
inc
cmpb
inc
and
cltd
pop
adc
lods
lahf
aas
xchg
xor
cld
adc
test
out
sbb
into
cmp
inc
inc
sbbl
sub
xlat
mov
sub
in
lret
outsl
pop
pop
paddsw
cmpsb
jl
sbb
loope
icebp
pop
inc
fs
into
jno
push
outsl
ficoms
ss
lds
mov
cmp
lcall
fidivl
ss
ds
mov
nop
pop
outsl
in
clc
xchg
jecxz
andb
scas
clc
jge
scas
call
test
dec
jl
add
shlb
cmp
inc
sub
or
repz
repz
dec
clc
fwait
mov
rorl
sub
jg
jae
ja
pop
icebp
xor
test
les
add
arpl
push
cmc
pop
push
movsl
add
jb
lods
pop
cmp
adc
int
mov
sti
dec
jl
arpl
push
aam
das
mov
xchg
add
mov
push
cmp
and
and
outsl
add
mov
xlat
scas
mov
xchg
mov
cmp
pop
test
dec
dec
movsl
sub
mov
pop
xchg
std
repnz
mul
and
mov
cli
lcall
cmp
or
hlt
movsb
cld
mov
movsb
push
loopne
lock
lahf
jbe
jecxz
loopne
lock
mov
xchg
adc
xchg
insb
mov
mov
mov
pushf
and
mov
mov
inc
xchg
sti
pop
cmp
iret
lods
scas
inc
mov
mov
lea
out
and
orb
jns
inc
pop
iret
sahf
test
and
push
outsl
ret
rol
stos
out
fdivs
sarl
test
jno
add
rorb
mov
test
pop
aaa
fs
ss
add
pop
lcall
lds
loop
stos
les
stos
jle
cmpsb
sbb
cli
adc
push
add
pop
lods
outsl
lds
adcl
mov
xor
nop
clc
test
test
sbb
sub
cmpl
cmp
and
addr16
decb
ljmp
and
xlat
fisubrs
loop
enter
push
push
insb
cmp
push
sbbb
lock
push
push
int3
fs
xchg
fsts
lret
adc
lcall
and
les
out
mov
mov
push
nop
xor
dec
mov
xchg
icebp
push
ret
lods
into
cltd
dec
dec
std
out
adc
lods
lret
ret
imulb
adc
mov
or
xor
xor
mov
popf
test
sbb
das
fcoms
pop
test
movsl
mov
pop
push
out
mov
pop
jp
enter
popl
cmp
push
lret
push
adc
inc
add
jne
pop
test
dec
adc
iret
mov
mov
push
jns
lret
sbb
push
sbb
mov
pop
lods
jmp
mov
fsubl
xchg
les
mov
mov
sbb
decl
push
xor
or
lret
call
js
cmp
push
mov
pushf
jae
adc
add
andb
jecxz
add
add
rclb
aad
adc
sbb
out
add
imul
mov
inc
adc
cwtl
jg
outsb
das
xor
inc
fidivl
mov
or
rol
mov
jno
mov
sti
inc
shl
adc
xor
sarl
mov
mov
mov
aad
and
movsl
xor
pop
push
dec
cmc
mov
push
fdivs
cmpsb
lcall
xchg
nop
loopne
or
pop
xchg
clc
sarb
imul
mov
xchg
xchg
pop
mov
mov
popl
xlat
aaa
scas
add
lock
pop
push
pop
xor
cs
loope
enter
dec
lret
jmp
lds
addr16
mov
fistl
xchg
sar
mov
inc
inc
enter
mov
lods
push
add
movntps
rclb
lods
cmpsb
sarb
push
adc
xchg
mov
jl
mov
int3
test
outsl
lods
lds
test
jg
mov
mov
addl
or
add
stos
lock
imulb
add
fmuls
lret
inc
aaa
sub
int
insl
out
xor
pop
mov
pop
sbb
jl
sub
scas
js
adc
into
std
add
cltd
inc
and
ficomps
ja
add
adc
stos
xor
or
xchg
push
inc
jg
mov
jge
push
out
sbb
push
xchg
test
pop
mov
mov
xor
aas
arpl
pop
push
push
mov
xchg
push
xor
movsl
outsl
pop
push
call
sahf
call
insl
xlat
jno
imul
mov
ds
or
add
outsb
movl
sub
mov
aas
out
cmp
inc
aad
push
jae
jge
dec
push
push
je
leave
fbld
int
insb
jno
inc
xchg
movsl
cwtl
test
dec
jbe
xchg
pushf
fisubrl
int
sub
and
sub
cmp
xor
int
and
jmp
mov
bound
pop
jmp
and
dec
xor
cli
mov
push
in
insl
add
mov
fstl
movsl
daa
dec
xchg
fnstcw
imul
mov
add
enter
in
aam
rcr
ss
push
sbb
sbb
mov
xchg
mov
mov
inc
sub
aas
es
and
adc
inc
mov
or
push
dec
pop
mov
mov
mov
jmp
hlt
and
and
push
testb
in
push
imul
dec
shl
cmpsl
lods
fsubr
lock
out
out
aas
ja
inc
cmp
fstp
mov
shl
and
mov
mov
lret
push
mov
push
mov
cmp
push
imul
push
or
iret
or
sarl
xor
pop
repz
push
xchg
cmpsl
jno
mov
fcomp
lret
movsb
enter
daa
push
les
daa
divl
testl
mov
jae
add
xchg
xchg
push
jno
mov
cli
jmp
hlt
xchg
loopne
mov
fisubs
loopne
xchg
addr16
addl
or
add
addr16
movb
inc
shr
mov
call
lahf
js
loopne
or
push
pop
rcrb
or
adc
mov
xor
xor
push
jne
pushf
add
sarb
sahf
lds
sub
inc
lods
gs
hlt
pop
xlat
or
call
jge
adc
test
pop
das
push
je
mov
inc
dec
pop
ds
pushf
pop
or
lcall
imul
jne
xor
sub
rcl
mov
or
mov
ljmp
test
cmp
filds
and
prefetcht1
mov
cmp
fdivrl
cmpl
fdivrl
jnp
inc
cmc
mov
adc
ffreep
fisttpl
rorb
pushf
repnz
pop
or
or
bnd
xchg
lods
andl
das
mov
push
into
aad
xorl
fld
sbb
xchg
dec
mov
pop
sub
bound
add
inc
in
inc
bound
call
jg
pop
inc
andb
lods
inc
push
subl
mov
xlat
push
int3
cmp
shlb
in
fsubrs
mov
sub
sub
cmp
movsl
xchg
adc
jne
fmull
xchg
adc
in
int
cmp
push
jp
rcrb
xchg
or
int
xchg
cmp
jle
jae,pt
push
xchg
rorl
call
scas
ja
and
addr16
lcall
jns
jbe
icebp
mov
fsubr
mov
icebp
adc
mov
cltd
xchg
mov
inc
mov
popf
lea
or
pop
jae
add
movsb
mov
aam
sbb
int3
sbb
lds
fldenv
xorb
icebp
into
push
and
aad
stos
rcrb
xor
lcall
sti
jg
fstp
dec
push
adc
xchg
cltd
mov
xchg
repnz
pop
mov
sbb
or
imul
int
subb
cld
int3
bound
pop
push
lods
lret
test
jecxz
repz
out
jbe
sbb
lods
enter
jns
aam
adc
xchg
out
xchg
popa
push
xor
mov
sub
cmp
pushl
cwtl
ds
push
or
sub
mov
jbe
in
pop
leave
in
mulps
cmp
mov
push
xor
inc
rorl
mov
mov
pop
sbb
push
inc
int
push
cmp
mov
pop
dec
xchg
push
cmp
js
sbb
sub
pusha
shll
std
fildll
ljmp
pushf
cmp
xchg
push
imull
out
std
xor
xor
shrl
cmp
push
mov
sbb
mov
xchg
call
out
leave
xor
js
out
int3
and
dec
and
ret
fists
fcomip
aaa
inc
out
push
bound
cld
popf
enter
adc
xchg
jae
das
inc
push
shll
adc
lret
xlat
popf
mov
mov
das
pusha
push
inc
movsl
push
inc
pop
dec
pop
jle
mov
and
sbb
mov
or
push
in
imul
fisubs
pop
dec
pop
ljmp
lds
stc
pop
sbb
pop
pop
mov
pop
pop
mov
in
xchg
movsl
add
and
mov
or
lret
mov
data16
push
pop
mov
add
mov
xlat
mov
sarb
mov
add
imul
inc
xor
push
or
xchg
cltd
fdivs
loopne
xchg
fwait
movb
xlat
test
inc
sbb
js
insl
dec
icebp
ds
sub
sti
fstpt
add
aas
lea
call
cmp
scas
mov
clc
dec
rorl
pushf
clc
test
les
pop
sahf
inc
or
push
mov
shll
xor
pop
pop
xchg
jg
cld
sbb
push
mov
out
inc
xchg
pop
scas
rcrl
xlat
jg
cmp
adc
dec
add
lds
push
sbb
lcall
loopne
lods
scas
lods
aas
jg
pop
sbb
sbb
js
inc
aam
movsb
iret
push
mov
loope
dec
aad
adc
stc
push
jne
scas
orb
outsl
jge
call
insl
je
fimuls
jne
jmp
xor
test
inc
mov
jae
rcr
mov
cltd
sbb
hlt
bnd
push
pop
fisubl
cmpb
repnz
jl
dec
out
xor
jbe
subb
loop
adc
add
mov
or
mov
mov
dec
jb
adc
push
ret
fsubrl
dec
dec
ljmp
inc
lret
inc
mov
lods
pop
xor
adc
push
in
jno
mov
aas
jecxz
xor
aaa
jnp
das
push
adc
jecxz
or
les
jge
push
into
data16
jmp
push
adc
das
and
fidivrs
popa
fstps
aam
jae
sbb
scas
clc
and
vsqrtpd
ja
and
insb
scas
mov
xchg
clc
sbb
cs
test
pop
adc
out
decb
sub
pop
adc
scas
insl
out
call
mov
push
dec
ror
lea
adc
push
mov
enter
aam
mov
test
pusha
fsubrp
sub
scas
and
es
inc
inc
push
push
jbe
mov
jecxz
in
rol
daa
inc
cmpl
jno
pop
test
push
xchg
daa
cmpsb
jg
or
js
pop
imul
stos
scas
cmp
mull
inc
mov
fidivs
cmp
dec
xchg
sar
mov
mov
rorl
inc
fninit
push
loopne
jnp
sub
adc
out
mov
rcll
pop
pop
mov
ret
cmpsl
mov
cld
sbb
sub
shrl
sti
cmp
xor
repnz
mov
pushf
mov
dec
xchg
addr16
popl
push
or
clc
sbb
aaa
clc
shl
xchg
push
cmp
pop
aam
fistl
lods
cwtl
jo,pn
lea
dec
cmpl
stos
sbb
pusha
jecxz
add
pop
cld
fwait
imul
movsb
mov
inc
mov
in
pop
and
jl
mov
inc
adc
jg
mov
dec
and
imul
pop
xchg
add
inc
in
into
mov
outsl
jmp
sarl
daa
add
xchg
add
push
mov
sarl
fs
popa
movsl
sub
inc
fstl
push
jb
test
outsb
xor
rorb
and
mov
lcall
adc
mov
pop
outsl
sub
cmpsl
loopne
push
xor
and
iret
test
leave
clc
test
mov
faddp
push
stos
js
mov
inc
mulb
test
mov
jmp
adc
inc
jae
push
outsl
xchg
ds
or
popa
jno
jl
push
scas
jle
inc
sahf
sub
xchg
xchg
ja
and
fs
insb
adc
test
out
add
inc
outsl
enter
lret
insl
ss
cmp
gs
les
dec
inc
leave
imul
dec
cmp
pop
out
movsb
dec
mov
dec
xor
fistpll
jnp
push
pop
xchg
in
shlb
aam
lods
jmp
and
fwait
jno
fwait
lock
sub
pop
push
lahf
pop
push
imull
or
ja
xor
les
fs
cld
dec
and
fldl
nop
pushf
subb
inc
in
adcl
pop
cmp
push
test
popf
inc
fwait
sub
inc
and
mov
stc
xchg
cmp
or
push
jae
push
enter
inc
jmp
and
fwait
push
jns
cmpsl
rclb
rol
jmp
add
add
fldenv
fstpl
pop
mov
or
int3
or
sbb
pop
pop
jecxz
adc
and
std
mov
add
sub
pop
cmp
xlat
lcall
ror
in
and
popa
mov
xchg
je
jecxz
adc
pop
pop
loopne
into
cmp
imul
adc
sbb
xor
and
jae
in
push
mov
mov
sbb
iret
stos
addr16
addr16
fcomps
outsl
dec
pop
out
inc
lcall
mov
movsl
mov
outsl
mov
mov
push
inc
les
stos
pop
or
dec
incb
rcl
inc
dec
cmp
test
ret
sub
pop
addb
je
in
shlb
bound
jae
int3
jmp
jo
test
push
push
cs
dec
push
push
ss
jp
or
das
adc
imul
pop
ss
outsb
not
xchg
stos
xchg
loop
enter
jne
add
and
xor
or
inc
add
add
inc
clc
imulb
xchg
not
and
jecxz
repnz
cltd
pop
pop
lahf
xchg
adc
cmp
mov
stos
test
in
out
fstps
subl
or
mov
shll
cmc
lock
sbb
inc
inc
add
sub
cli
mov
clc
xor
sub
cli
pushf
out
adc
mov
ja
ret
push
aad
xor
add
scas
pop
mov
mov
out
pop
cs
inc
jmp
daa
scas
aad
into
or
dec
cld
mov
loop
aad
inc
insl
sub
in
dec
fstps
lahf
popf
xchg
scas
xchg
imul
bswap
mov
mov
arpl
xchg
xor
mov
je
call
ret
loop
lret
cmp
push
push
loop
ljmp
xchg
sub
xor
test
xchg
adc
sub
sarl
cltd
pop
sbb
or
fcmovne
pop
dec
lods
pop
mov
xor
cmpsl
pop
cwtl
les
repnz
pop
xor
xchg
ja
adcl
shl
cmp
sbb
mov
scas
ficoms
sub
add
add
repz
movsb
adc
movsb
insb
js
sub
pop
add
repz
icebp
scas
ja
lcall
leave
adc
fcomi
adc
fildll
push
xor
xlat
sub
std
fmuls
clc
lods
push
stos
icebp
jge
dec
clc
ja
cmc
lahf
cmp
jp
pushf
les
pushf
js
mov
cs
and
inc
inc
sub
jg
es
ljmp
xor
or
sbb
inc
sbb
enter
sti
cmp
inc
out
mov
fisubrs
pusha
mov
xchg
addr16
dec
pop
movsb
lret
mov
jp
adc
movsl
add
push
ret
mov
pop
stos
xor
sahf
lock
sbb
aas
stos
pop
outsb
or
pop
xor
push
pop
cmp
fsubrl
and
ljmp
int
lahf
dec
inc
cltd
test
arpl
xchg
mov
popf
add
xor
out
jle
fmuls
push
xchg
leave
inc
loope
shrb
jbe
mov
push
push
adc
sahf
dec
jbe
cmp
add
fs
add
lahf
scas
test
rcrb
pop
cmp
dec
ja
outsl
lcall
xchg
xchg
cs
and
mov
int
int3
int
lea
fistpll
insb
fs
add
cld
mov
mov
mov
mov
loop
sub
or
shrl
push
mov
push
cs
cmpsb
mov
mov
pop
and
sbbb
jno
lods
inc
pusha
in
mov
jae
dec
mov
test
aad
adc
insb
adc
sub
jecxz
add
xchg
loopne
xchg
and
mov
sbbb
ret
xor
cltd
jns
cmp
mov
pop
pop
push
fistl
arpl
out
call
mov
test
cli
or
cmp
stos
jp
push
sbb
sub
jecxz
mov
loopne
ljmp
cmpb
jl
mov
or
lods
daa
les
xchg
enter
sub
push
inc
jmp
mov
outsb
cltd
dec
sbb
pop
cmc
enter
test
arpl
arpl
cli
les
movsl
cmpsb
bound
test
movsb
fnstenv
or
jecxz
jne
jno
pop
sub
cs
cltd
subb
shrl
cwtl
and
add
xorl
pop
das
mov
mov
pop
scas
pop
xchg
xchg
add
repnz
outsb
add
out
add
lahf
mov
mov
arpl
xchg
fs
in
call
dec
push
and
je
mov
xchg
cmp
pop
adc
cld
xor
iret
dec
loope
loop
xchg
loop
sbb
xchg
xchg
fs
sbb
mov
xchg
pusha
icebp
jmp
clc
shrl
out
pushf
xchg
loopne
subl
mov
stos
hlt
aas
mov
xchg
loope
jge
outsb
jbe
sti
mov
movb
mov
lahf
xchg
pop
xchg
dec
add
loope
ficoml
inc
mov
sub
mov
xor
add
xor
pop
xor
test
jo
in
ret
movsl
les
adc
mov
aad
les
les
daa
inc
add
dec
jp
xchg
xor
cmc
or
push
push
loopne
push
push
add
jbe
pusha
sahf
jmp
das
jge
push
pop
pushf
pop
xor
add
xor
xlat
out
ret
cmp
sarb
movb
dec
jle
mov
mov
sub
add
jecxz
push
movsl
inc
repz
mov
mov
lds
data16
pop
cmp
popf
lock
xor
adc
xchg
mov
mov
xorb
inc
in
sbb
rorl
inc
into
shrb
xor
scas
xchg
fscale
ljmp
les
xchg
jae
push
xor
mov
ljmp
jne
pop
mov
jecxz
lret
addr16
iret
fldz
inc
cmp
push
loopne
negb
inc
cmp
or
xchg
pop
cltd
xchg
push
mov
fbstp
sub
sub
adc
test
cmp
jno
and
imul
cltd
aad
call
ds
add
mov
mov
jae
xchg
mov
push
fld
xchg
xchg
and
daa
sbb
or
dec
ret
sub
and
mov
and
enter
out
add
nop
adc
mov
sbb
fildl
ss
in
std
pop
jl
add
adc
mov
jnp
sub
pop
xchg
push
arpl
xchg
xchg
or
das
xchg
mov
outsb
sti
lret
dec
and
lods
sub
outsb
mov
mov
or
lahf
rcrb
sbb
push
xchg
scas
fldt
mov
sub
stos
movsb
inc
xor
in
jle
xor
pop
mov
xchg
add
cmp
rcl
mov
mov
dec
mov
dec
mov
notb
inc
push
sub
mov
xchg
imul
out
mov
sbb
in
pop
aas
dec
jg
sbb
lds
cmp
pop
mov
bound
cmpb
sub
in
xchg
icebp
neg
outsl
dec
mov
or
adc
rep
test
fdivrs
test
mov
call
cmp
push
cs
mov
test
xchg
adc
mov
sti
push
add
cli
movsl
jg
pop
xchg
call
lds
mov
sti
js
mov
mov
mov
insl
or
fdivs
jne
stos
adc
add
jle
cld
lret
popa
pop
or
mov
cltd
xchg
jle
icebp
cs
pop
test
addr16
cmp
push
sbb
stos
enter
cltd
or
hlt
fnsave
mov
adc
mov
insl
lods
mov
lock
iret
test
aam
pop
fsubrs
sub
loope
scas
test
inc
and
inc
insb
into
rcl
adc
dec
cmpsb
subl
push
lock
je
lret
in
dec
pop
push
scas
dec
sahf
pushw
mov
ret
push
icebp
outsl
rcrb
xchg
cmpsb
dec
add
dec
pop
push
fdiv
sti
add
sbb
ss
icebp
fldt
ds
mov
adcb
or
cmpb
std
nop
lea
or
add
sbb
push
ficoml
andl
stc
pop
ja
adc
outsb
cs
iret
push
push
mov
adc
lcall
lock
jp
mov
insb
add
add
dec
jbe
ja
sub
lret
mov
add
adc
add
scas
or
jp
xor
or
imul
or
add
sub
add
and
add
adc
dec
adc
add
and
add
adc
cmp
add
push
aaa
pop
dec
push
ss
pop
xor
aaa
dec
inc
add
xor
push
push
push
pop
xor
inc
add
push
pop
push
push
inc
pop
xor
dec
add
inc
ss
push
dec
dec
pop
push
xor
push
cmp
pop
xor
dec
inc
aaa
pop
inc
cmp
pop
push
add
pop
push
push
inc
inc
dec
xor
inc
cmp
inc
pop
push
cmp
add
xor
push
pop
inc
xor
xor
push
xor
xor
inc
push
dec
push
pop
xor
push
cmp
cmp
xor
dec
cmp
inc
xor
pop
xor
cmp
dec
xor
add
push
pop
xor
xor
add
inc
pop
dec
push
dec
inc
pop
cmp
push
dec
push
pop
inc
dec
inc
xor
add
pop
xor
xor
pop
xor
pop
pop
xor
xor
xor
xor
inc
dec
pop
inc
push
push
add
ss
xor
pop
cmp
add
dec
cmp
dec
push
dec
add
xor
xor
ss
dec
cmp
push
aaa
xor
xor
pop
push
push
push
dec
add
push
pop
pop
xor
pop
dec
aaa
pop
xor
xor
xor
add
inc
pop
xor
xor
push
push
inc
xor
xor
push
xor
inc
pop
cmp
pop
xor
add
dec
pop
push
xor
xor
push
dec
push
cmp
dec
add
inc
pop
inc
dec
xor
add
xor
dec
xor
pop
push
add
pop
add
add
aaa
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
push
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
dec
add
add
cmp
cmp
add
dec
add
push
add
inc
add
dec
add
add
add
add
pop
add
cmp
dec
add
xor
add
dec
add
xor
add
inc
add
inc
add
add
xor
inc
add
add
inc
add
xor
push
add
aaa
add
push
add
dec
add
add
cmp
cmp
xor
xor
xor
add
add
add
dec
add
pop
add
inc
add
add
pop
add
pop
add
inc
add
add
push
add
add
add
xor
dec
add
dec
add
add
xchg
jne
add
jne
add
jne
add
jne
add
add
add
dec
add
add
add
add
inc
add
add
loopne
add
movsb
add
add
add
aas
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
inc
xor
add
add
add
jge
add
jae
add
jae
add
adc
je
adc
sahf
jp
add
adc
add
dec
add
add
pop
jge
add
add
add
add
add
add
add
add
push
jge
add
add
in
arpl
add
add
add
dec
jno
outsl
pop
xor
jbe
dec
cs
jo
aas
inc
outsb
gs
je
push
outsl
imul
inc
pop
inc
inc
push
inc
pop
dec
inc
cmp
add
jl
add
jl
add
jl
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
das
jle
add
addb
out
add
dec
jle
add
jns
add
jle
add
add
mov
add
sarl
add
jp
add
add
add
add
add
jl
add
addb
push
addb
imul
add
stos
addb
add
add
roll
add
jmp
addb
std
addb
jae
add
and
addl
aas
addl
dec
addl
push
addl
pop
addl
addl
jno
add
jns
add
addl
add
lahf
addl
cmpsl
addl
mov
add
roll
add
addl
jecxz
add
out
addl
std
addl
pop
test
add
test
add
test
add
test
add
test
add
test
add
add
dec
test
add
add
popa
test
add
add
jg
add
mov
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
ja
add
mov
add
mov
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
add
popa
xchg
add
add
jg
add
lea
add
cmpsl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
jg
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jnp
add
xchg
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jno
add
orl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
ja
add
lea
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
add
pop
lea
add
add
jnp
add
mov
add
scas
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
pop
mov
add
add
jg
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
add
popa
popl
add
add
test
add
add
add
mov
add
ret
popl
add
popl
add
popl
add
popl
add
nop
add
pop
nop
add
sub
add
dec
nop
add
pop
nop
add
addr16
add
jns
add
lea
add
scas
nop
add
ret
nop
add
rcll
add
stc
nop
add
add
xchg
add
daa
xchg
add
xor
xchg
add
push
xchg
add
imul
add
fwait
xchg
add
stos
xchg
add
mov
xchg
add
int
add
fsts
add
notl
add
daa
xchg
add
aaa
xchg
add
inc
xchg
add
push
xchg
add
arpl
add
mov
add
pop
add
outsl
jo
jb
jns
push
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
popa
je
add
inc
add
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
bound
popa
jb
push
jae
jb
outsb
je
testb
je
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
jge
data16
add
fwait
add
jo
pop
arpl
insl
outsl
fs
and
insb
outsb
add
and
arpl
jo
add
or
outsl
jne
jo
jb
rolb
jb
insl
outsl
jbe
add
xchg
add
imul
jae
jb
jae
outsb
add
jae
add
add
outsb
add
mov
insl
popa
insb
insb
outsl
arpl
add
add
je
push
add
arpl
popa
je
add
arpl
imul
add
insl
jae
pop
gs
je
add
jo
imul
pop
imul
insl
add
add
jb
jb
outsl
jb
add
add
jb
outsl
jne
add
add
jo
imul
add
jae
bound
gs
add
flds
jae
je
bound
add
gs
add
push
add
arpl
inc
imul
pop
gs
je
in
jae
jb
push
add
jb
arpl
add
add
gs
je
add
data16
add
jb
push
ja
jae
outsl
insb
insb
add
add
arpl
data16
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
mov
data16
imul
je
jo
jb
add
add
outsl
jb
add
pop
pop
addr16
popa
imul
cli
add
jb
outsl
imul
dec
push
push
inc
push
push
cs
insb
add
je
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
jnp
inc
outsl
insb
fs
je
imul
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
pop
add
outsb
fs
imul
gs
add
or
dec
outsl
popa
fs
gs
jne
arpl
add
dec
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jae
inc
jbe
outsb
je
add
inc
imul
outsl
dec
inc
dec
add
mov
inc
insb
outsl
bound
inc
outsl
insl
jo
arpl
add
je
outsl
fs
gs
imul
add
mov
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
and
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
inc
add
gs
imul
jne
push
imul
add
imul
outsb
insb
outsl
arpl
ret
add
jae
jb
insl
jo
add
dec
add
imul
jae
jne
arpl
add
inc
inc
push
add
jno
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jae
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
insl
add
je
imul
je
add
add
jae
jb
insl
jo
push
add
add
push
popa
insb
imul
add
add
jae
jb
insl
jo
add
in
push
gs
outsl
insl
insl
push
imul
add
gs
imul
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
into
add
jae
jb
outsb
inc
add
sbb
gs
imul
gs
add
inc
gs
gs
jo
imul
add
sub
fs
je
insl
push
add
add
gs
je
push
gs
popa
jo
outsl
jb
push
add
faddl
push
gs
jb
push
push
add
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
into
add
inc
popa
fs
jb
je
push
je
add
add
je
imul
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
jb
popa
je
add
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
imul
insb
gs
js
gs
imul
gs
add
outsl
jbe
inc
imul
jns
add
pop
add
je
gs
jo
imul
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
in
add
je
imul
bound
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
nop
add
outsl
bound
inc
jb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
dec
popa
insl
gs
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sahf
add
push
arpl
jo
jns
mov
dec
outsb
jbe
insb
imul
je
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
push
arpl
jl
push
push
outsb
gs
outsl
jo
jo
add
add
jo
imul
gs
add
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
fs
arpl
inc
add
inc
gs
jne
dec
outsb
jne
add
add
fs
imul
add
popa
jb
outsl
dec
gs
inc
jne
inc
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
mov
push
outsl
push
outsb
imul
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
mov
dec
outsb
je
jb
arpl
arpl
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
add
imul
jae
addr16
add
add
inc
fs
jae
push
imul
arpl
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
push
add
je
popa
jb
outsb
je
lahf
add
jo
je
push
popa
addr16
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
out
inc
jb
insl
gs
arpl
add
imul
jae
js
rolb
jae
jb
outsb
je
push
add
add
je
jne
jae
jb
sub
inc
push
js
inc
js
add
push
gs
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
outsb
jne
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
imul
add
je
outsl
arpl
add
bound
inc
gs
outsl
jo
imul
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
imul
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
push
gs
arpl
jo
jns
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
outsb
fs
gs
popa
addr16
add
loop
inc
imul
outsl
ja
js
add
add
je
arpl
dec
outsb
outsw
add
arpl
outsl
push
push
outsb
outsl
ja
add
fs
imul
add
je
inc
inc
js
mov
imul
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
push
gs
imul
js
inc
add
rolb
dec
gs
popa
addr16
outsl
js
js
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
jge
push
push
jb
insb
insb
inc
popa
jb
cmp
inc
push
outsb
jne
popa
imul
add
fs
imul
add
ja
outsb
imul
arpl
mov
push
imul
push
arpl
push
add
addl
outsb
fs
gs
popa
addr16
js
insl
add
je
imul
outsb
addr16
add
jle
dec
imul
jne
je
insl
add
xor
inc
push
gs
add
add
outsb
fs
imul
sub
push
outsb
fs
gs
popa
addr16
imul
add
add
imul
popa
jae
inc
js
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
movb
outsb
fs
popa
jae
add
add
jae
push
jne
je
gs
popa
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
mov
ja
je
je
push
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
inc
jb
popa
outsb
addr16
arpl
imul
ja
add
jnp
push
push
jb
outsl
jb
add
add
popa
jb
outsl
ja
jb
jne
push
add
mov
jae
pop
gs
outsb
je
mov
inc
jb
ja
arpl
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
add
add
je
outsb
jne
je
insl
dec
inc
add
imul
inc
push
ja
jb
add
jmp
inc
arpl
gs
imul
add
je
jne
jae
jb
outsl
jae
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
jb
popa
je
push
imul
push
add
popa
insb
imul
add
add
popa
jb
jo
gs
jne
push
add
mov
push
imul
ja
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
imul
jae
popa
addr16
add
mov
jo
je
push
popa
addr16
add
js
inc
gs
imul
js
push
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
arpl
insb
insb
push
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jae
push
push
dec
gs
popa
addr16
add
mov
dec
outsb
jbe
jb
push
arpl
xchg
add
inc
imul
jae
popa
addr16
add
mov
inc
jb
ja
outsb
jne
popa
jb
push
push
inc
push
xor
cs
insb
add
int3
add
insb
arpl
imul
add
gs
je
inc
imul
imul
rolb
outsb
fs
popa
je
add
add
insb
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
jb
popa
je
inc
outsl
outsb
je
add
add
je
je
gs
push
outsl
fs
popa
je
push
outsl
insb
imul
add
add
insb
arpl
insb
gs
add
je
imul
movsb
add
je
insb
je
add
popa
je
inc
dec
inc
imul
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
inc
gs
dec
inc
imul
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
je
imul
inc
js
inc
js
add
add
je
insb
imul
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
out
push
gs
popa
jns
jne
add
jb
push
popa
add
data16
je
imul
dec
jb
inc
js
add
je
bound
arpl
add
push
imul
add
add
je
imul
addr16
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
movl
inc
outsl
outsb
je
push
add
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
xlat
add
je
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
push
gs
popa
jo
outsl
fs
mov
inc
push
je
dec
push
add
mov
inc
outsl
arpl
add
popa
je
dec
inc
push
add
inc
imul
xchg
add
je
imul
addr16
js
add
popa
je
push
popa
je
gs
inc
jb
jae
add
xchg
add
gs
je
inc
imul
bound
imul
inc
jb
popa
je
push
arpl
outsb
add
jo
add
popa
je
push
popa
insb
gs
add
add
jb
popa
insb
imul
arpl
add
je
gs
dec
jne
inc
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsl
jne
fs
arpl
inc
dec
xor
cs
insb
add
adc
mov
adc
jp
adc
adc
adc
in
adc
inc
pop
adc
xchg
dec
adc
xchg
push
adc
or
add
adc
xchg
adc
mov
adc
cltd
js
add
data16
inc
sub
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
pushf
and
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
in
clc
inc
ret
inc
mov
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
out
add
and
inc
mov
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loop
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
call
push
pop
jl
inc
sbbb
test
jmp
push
jne
lea
movl
into
jmp
loopne
rol
call
shr
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
int3
xchg
loopne
xchg
lods
ret
in
inc
dec
loop
ds
movl
loope
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
bound
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
sahf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
sahf
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
insb
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setle
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
or
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
enter
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
out
add
add
and
fs
inc
test
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
sahf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
sahf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
xor
add
into
bound
add
mov
or
add
inc
pushf
add
into
ret
pop
fs
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
fs
mov
je
xor
mov
cmp
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
notrack
or
or
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
leave
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
or
push
add
inc
add
inc
data16
lret
lock
inc
lret
xor
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
sahf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
sahf
sahf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
sahf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
or
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
xor
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
sahf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
push
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
sahf
mov
push
add
cmp
sahf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
sahf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
call
push
inc
push
xor
xchg
das
pop
in
dec
mov
and
xchg
add
add
push
cmp
popa
inc
jns
addr16
pop
ja
arpl
jne
dec
dec
insl
addr16
pop
push
jne
push
imul
insb
jo,pn
bound
cmpb
insl
das
adc
jmp
adc
jecxz
adc
adc
add
pop
adc
xlat
push
adc
cwtl
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
