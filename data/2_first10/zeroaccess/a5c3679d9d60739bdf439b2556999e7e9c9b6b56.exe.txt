push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
ffreep
inc
test
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
inc
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
sbb
inc
inc
adc
rolb
mov
sbb
mov
xchg
adc
push
das
jo
add
in
aad
pop
cmp
rcll
or
lret
fstl
pop
das
ret
cmp
paddsb
push
or
jnp
lods
into
std
enter
push
push
aaa
sti
arpl
out
mov
loopne
lcall
scas
movsb
pop
ljmp
enter
pop
scas
jo
xorb
adc
fidivrl
cmp
mov
int3
mov
int3
stc
xor
push
sbb
push
pop
das
leave
imul
cs
into
iret
push
sub
cmp
sahf
or
xchg
xlat
je
sub
sub
cmpsl
push
or
rorl
inc
mov
fists
cmp
mov
int
unpckhps
cmp
cld
add
mov
push
jl
mov
int
xor
cmp
pusha
xor
fadd
add
ljmp
mov
stos
mov
push
repz
loop
fucom
push
or
je
pop
jle
mov
jmp
clc
icebp
mov
icebp
ficompl
push
mov
jle
jo
jle
jo
adc
xor
lock
push
repnz
lock
mov
in
out
jp
mov
int
mov
lcall
dec
adc
loopne
xor
out
out
jb
jb
push
xor
cmp
out
lea
xchg
jns
mov
or
push
jmp
pop
cmp
sti
mov
push
test
sbb
inc
jns
jns
rorb
xor
xchg
scas
iret
inc
mov
js
push
call
fwait
addb
inc
mov
mov
nop
mov
fsubrl
pop
outsb
mov
xchg
dec
or
stc
cld
mov
int
pop
cmp
mov
fdivrl
sub
idivl
test
sub
or
mov
xor
inc
int
and
out
int3
int
imull
js
aad
mov
sbb
fisttpl
cltd
iret
xchg
sub
dec
sbbb
ret
scas
add
aam
jae
scas
movsl
mov
stos
cli
cmp
cmp
inc
push
repnz
addr16
and
dec
pop
js
jp
inc
mov
push
fadds
fwait
mov
mov
mov
hlt
mov
aaa
out
inc
jge
pop
in
cmpsl
jl
loope
xchg
pop
adc
jo
cmp
fisttpll
scas
pusha
push
pop
mov
mov
mov
outsl
pop
jge
jecxz
mov
xor
mov
in
push
mov
jbe
and
mov
pop
aam
jne
into
adc
or
js
pop
xchg
mov
jge
pop
mov
testl
cld
cmc
push
dec
mov
mov
arpl
cld
xor
inc
lock
xor
ja
push
push
insb
ret
ss
jne
mov
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
test
xchg
jo
jo
jo
jo
add
mov
imul
adc
inc
data16
adc
or
pop
mov
or
sub
in
loopne
in
xor
xchg
call
lods
jg
sub
cmp
iret
das
add
lods
jae
in
xor
ja
mov
ds
cmp
xchg
jecxz
sti
loope
adc
mov
int3
enter
dec
mov
push
xor
repnz
stos
mov
adc
cmp
ficomps
pop
dec
scas
pop
ret
in
or
push
or
xchg
jne
pop
push
mov
push
sbb
inc
jl
pop
sbb
or
sub
aas
fldt
xchg
mov
mov
imul
insb
inc
adc
xchg
repz
mov
shll
and
mov
sbb
nop
aam
scas
xbegin
sbb
sahf
dec
or
cmp
and
xchg
dec
rorb
cmc
inc
jnp
ja
sti
mov
sbb
dec
pusha
mov
adcl
dec
xchg
scas
fcompl
or
jge
add
cmc
cmp
insb
and
xchg
flds
repnz
lods
in
mov
inc
loopne
leave
mov
loopne
fimull
pop
mov
les
adc
mov
sbb
pusha
mov
and
mov
xor
mov
jp
add
jae
add
arpl
jecxz
enter
test
int
mov
ds
pop
or
dec
push
adc
das
jle
subl
cmp
pop
and
jp
cmp
popa
or
mov
mov
lret
xor
popf
inc
popa
mov
jbe
rol
jle
sub
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
push
push
jo
jo
mov
push
les
sub
out
lock
xchg
outsb
lret
cs
dec
add
mov
andl
dec
shrl
pusha
mov
in
cmp
push
iret
and
imul
push
push
in
mov
xor
fstpt
mov
movsb
mov
jg
xchg
add
pop
mov
sub
aas
mov
mov
loop
jle
adc
hlt
mov
into
xor
mov
mov
shll
mov
add
dec
in
push
fisubrs
mov
popa
mov
outsl
movsb
mov
pop
xor
je
rol
cmp
ja
ja
js
sub
mov
in
cmp
test
mov
sahf
gs
xor
push
mov
lahf
pusha
adc
ljmp
dec
out
push
out
pushf
mov
lea
push
cwtl
add
adc
scas
push
cmpl
push
aad
mov
mov
loop
adc
loopne
imul
push
popf
xor
das
iret
stos
call
dec
or
xchg
bound
jno
data16
lods
and
inc
mov
pop
mov
lods
dec
push
sub
jmp
fwait
push
jno
push
std
movsl
jge
roll
mov
loopne
jne
inc
loope
les
nop
adc
aaa
movsb
add
dec
mov
lock
imul
jns
adc
mov
mov
push
cmp
lods
or
jnp
push
imul
cwtl
xchg
xchg
pop
or
push
pop
lods
xchg
lahf
jge
mov
cmc
into
push
sbb
leave
jle
outsl
sbb
movsb
repz
repnz
push
jp
in
xchg
xor
gs
loope
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
gs
mov
jo
jo
jo
lret
pushf
outsb
mov
dec
aam
fcompl
xor
fimuls
dec
lods
stos
cmp
jl
xchg
mov
cmp
dec
data16
test
jae
scas
jnp
testl
or
push
mov
enter
cmp
jp
sbb
out
push
cs
lods
rcll
dec
call
pusha
mov
cmpsb
je
fidivrl
insb
jno
hlt
cltd
push
sbb
out
cld
pop
jno
jmpw
mov
jmp
iret
out
out
fildll
shl
cld
lds
cli
fisttpll
cmp
or
iret
mov
xor
rorl
fmul
lret
push
testl
xchg
std
push
jns
in
popf
int3
pop
xor
add
popf
cmpsb
fdivr
adc
add
dec
mov
push
inc
mov
mov
bound
xchg
push
jb
jne
lcall
into
arpl
add
xchg
inc
dec
or
cld
stc
mov
mov
jle
ljmp
pop
inc
xchg
push
xlat
add
int
inc
push
iret
cmp
jb
int
push
lods
push
pop
and
outsb
lods
jmp
push
es
andl
daa
sbb
xchg
imul
hlt
clc
sti
mov
pop
repz
push
movsb
push
test
pusha
sub
inc
ret
stc
sahf
lea
cwtl
jae
jp
leave
scas
mov
jae
rclb
sarl
repnz
push
int3
xor
test
adc
scas
pop
shrb
std
xchg
repnz
ljmp
mov
push
inc
outsl
push
mov
call
dec
or
sub
mov
cmpsl
cli
mov
adcl
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
jnp
jo
jo
jo
jo
fadd
test
pop
xor
add
push
and
mov
jbe
adc
outsl
nop
test
bound
xchg
cld
orb
mov
dec
ret
jnp
xchg
mov
jno
lea
test
jno
push
fnsetpm(287
pop
and
lcall
jnp
pop
push
pop
int3
jge
jb
cmpsl
mov
push
icebp
xor
push
cmp
add
icebp
pop
mov
fwait
pop
stos
mov
dec
popa
popa
in
fcoml
push
in
jb
sbb
in
insl
cmpl
hlt
or
pop
sbb
xchg
mov
sbb
outsl
scas
push
or
jge
and
cli
xor
in
or
xchg
pop
xchg
mov
dec
icebp
out
mov
fsts
mov
andb
mov
inc
ljmp
dec
fisttps
out
bound
xor
sub
jmp
cltd
ja
sub
jae
dec
ficoml
jmp
cli
inc
loopne
xchg
repnz
aaa
aad
mov
stc
je
dec
push
stos
loopne
cmpsb
jns
xchg
xchg
lret
shll
and
js
pushf
in
sbb
adc
stos
in
and
push
call
jne
test
adcb
mov
pop
cmpsl
addr16
sub
adc
inc
scas
out
and
mov
mov
int
imul
test
arpl
iret
pop
dec
sbb
dec
mov
add
in
fsts
push
push
dec
pop
sbbl
test
gs
add
or
sahf
mov
and
ret
sub
in
adc
shl
mul
pop
leave
xor
pop
jo
fcomp
pop
loop
pop
loope
mov
jle
mov
mov
jg
add
adc
cmp
jmp
ret
gs
cmpsl
insb
cmpb
sub
jo
jo
xchg
and
out
pushl
cmp
call
adc
inc
fdivl
dec
roll
pop
push
leave
loopne
lods
mov
inc
xchg
or
push
jge
fcompl
imull
mov
mov
mov
mov
out
jecxz
repnz
hlt
jp
ret
repz
repz
lock
outsl
aam
and
fidivrl
sarl
pop
mov
sub
cmpsl
push
mov
xlat
popl
cmpsl
imul
dec
cwtl
clc
ret
push
dec
cmc
mov
mov
popa
mov
movsb
adc
bound
pop
sbb
jmp
jnp
cmp
jp
out
dec
mov
pop
jne
jl
push
push
imul
mov
cmp
je
pop
xor
rcpps
daa
fs
repz
popa
mov
sbb
iret
pop
xor
mov
sbb
test
mov
mov
xchg
ret
sub
add
pop
push
or
adc
add
adc
lds
jbe
shld
es
mov
cld
sub
fsubrl
and
push
jb
xchg
stc
cmp
bswap
inc
fnstcw
xchg
aaa
inc
and
js
mov
inc
or
pop
cmc
pop
fdivrl
pop
mov
shll
jecxz
pop
inc
xchg
popa
int3
sbb
out
ljmp
adc
in
xchg
stos
push
or
add
adc
jl
int
hlt
clc
jbe
fistps
sub
pop
sbb
pop
das
lock
cmpsl
nop
sti
push
pop
add
test
sub
sarl
cmp
jg
and
jle
sbb
add
and
lea
xchg
pusha
ret
ss
sub
or
mov
jp
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
call
jo
jle
jo
ret
mov
inc
and
in
mov
cmp
xlat
pusha
sub
int3
jae
insl
mov
ffree
rcrl
into
jp
lahf
mov
inc
jmp
mov
cmp
jl
out
fs
mov
shll
push
xchg
icebp
mov
add
push
mov
and
jmp
stc
out
out
sarl
add
icebp
jl
sbb
push
jmp
jecxz
popl
cmp
sbb
ret
sbb
lods
iret
jnp
popf
dec
gs
adc
pop
and
mov
add
insl
sub
dec
rclb
es
add
add
fisttps
jb
mov
cmpb
data16
int3
or
sahf
pop
test
cmp
xor
cs
adc
popa
pop
lea
adc
xor
out
sub
xchg
pop
sbb
xchg
arpl
xchg
cmpsb
std
xchg
into
inc
and
test
in
ss
mov
inc
clc
int
cld
mov
xrelease
in
pop
cmp
in
xor
movsl
sbb
or
ljmp
or
hlt
add
movsb
pop
dec
dec
pop
fiadds
in
daa
push
es
mov
pop
sti
dec
push
adcl
sbb
mov
lods
adc
out
push
or
fldl
jl
movb
pushf
mov
xor
bound
sub
jle
add
mov
hlt
push
sub
xchg
mov
push
inc
xchg
das
cmp
or
mov
sub
stos
imulb
ret
imul
ss
jae
xchg
leave
arpl
popf
sbb
pop
or
cltd
push
and
stc
and
in
mov
mov
or
jns
hlt
nop
sub
out
std
enter
imul
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
pop
jo
jo
jo
jo
es
pop
jge
mov
movsl
sbb
pop
stc
das
pop
xor
mov
jmp
jl
cs
stc
adc
push
xchg
and
daa
jne
jae
or
and
pop
cmp
and
mov
aad
push
sub
and
push
fsubp
xlat
inc
xchg
or
test
cmp
adcl
imul
popf
pushf
cmp
mov
nop
mov
sbb
pop
push
repz
popa
sbb
and
adc
daa
fcomps
pop
jmp
push
repnz
mov
jl
pop
pop
in
xor
lods
inc
mov
fsubs
inc
add
jl
js
lret
jecxz
stos
rcrl
inc
adc
adc
mov
lret
mov
and
cmp
and
mov
adc
xor
into
mov
sbb
pusha
cmp
pop
shrb
imul
and
xor
je
iret
push
or
dec
popf
push
pop
lods
je
push
xor
push
test
sbb
pop
or
dec
dec
hlt
in
or
sbb
jae
imul
adc
mov
ret
sub
xchg
and
xor
mov
popf
inc
pop
push
sbb
cmp
cmpsl
add
mov
fldl2t
fstpl
sub
fdivrs
add
in
repnz
mov
gs
and
ds
jb
jns
mov
bound
pop
cmpsl
xor
pop
jbe
inc
negl
sub
outsl
leave
imul
or
cmp
cmp
jae
aam
mov
inc
pop
aam
imul
leave
fsin
bndstx
mov
sbb
sub
leave
jp
mov
sub
sbb
fwait
test
cmpsl
adc
popa
adc
in
je
sbb
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
gs
mov
fisttpll
mov
xchg
dec
jle
mov
and
pminsw
out
fwait
out
adc
pusha
push
push
mov
leave
dec
pop
int3
pop
cmpsl
cmpl
xlat
mov
and
nop
xor
lret
mov
ljmp
in
lahf
fstp
cmp
inc
ud0
mov
cmp
cmpsl
xchg
xchg
test
movsb
rclb
cmpb
mov
cld
scas
inc
xchg
inc
add
push
leave
dec
inc
adc
loop
daa
dec
fcmovnb
repz
fmul
data16
leave
dec
jmp
xor
dec
sbb
stos
lahf
push
dec
sarb
insb
inc
adc
cli
mulb
faddl
dec
mov
cmpsl
push
mov
lcall
lea
sbb
mov
or
repz
int
add
mov
arpl
stos
push
mov
jmp
mov
jne
dec
pop
sahf
loop
enter
cmpsl
adc
adc
popf
cs
pop
fadd
addr16
addr16
and
es
pop
iret
adc
loop
aas
inc
ljmp
dec
iret
fs
lcall
stc
and
lods
mov
repnz
xchg
xchg
pop
imul
es
dec
bound
inc
and
sarl
clc
mov
rorl
fs
aas
xor
cmp
or
lods
cmp
insb
or
insl
int
or
pop
rorb
lcall
mov
ja
mov
push
std
add
cmpsb
lea
adc
xchg
jmp
xchg
mov
les
and
fidivrl
xor
cld
mov
ljmp
test
push
sbb
pushf
call
fwait
dec
add
jo
insl
xor
xchg
pop
or
fcmovu
std
mov
sub
or
dec
in
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
icebp
ljmp
add
mov
sbb
pop
cs
mov
les
in
test
sub
add
cli
cmp
aaa
cmp
cmp
std
mov
mov
or
or
jp
mulb
push
sub
fwait
push
push
insl
cmpsb
mov
insb
sbb
jno
mov
mov
mov
push
js
adc
adc
pop
adc
les
mov
push
xlat
cmpsb
into
nop
inc
jecxz
arpl
pop
addr16
xchg
cltd
subb
mov
es
xchg
xchg
jae
hlt
push
dec
and
add
sbb
jb
ja
addr16
je
and
test
out
clc
nop
out
mov
mov
adc
addr16
hlt
int3
int3
pop
clc
in
add
dec
mov
scas
into
leave
xchg
add
sub
scas
push
or
pop
jmp
lock
jns
mov
jno
insl
cltd
repz
push
inc
sbb
cld
sbb
test
aaa
iret
adc
in
in
pop
ror
sbb
pop
mov
mov
cmc
hlt
push
cli
es
fldt
mov
dec
adc
cld
shlb
xchg
lret
mov
lds
or
cmp
adc
cmpl
mov
pop
test
push
lret
xchg
mov
push
test
jecxz
pop
sub
das
xchg
pop
xchg
mov
adc
jae
adc
mov
or
pushf
jle
xor
mov
sbb
push
push
xchg
in
out
pop
jbe
fists
xchg
pushl
jecxz
sbb
stos
sub
or
in
mov
popf
test
daa
sub
or
dec
add
pop
xor
sub
shlb
insl
or
mov
rcrl
lock
fstl
loopne
inc
pop
mov
popf
mov
ds
mov
repz
push
lret
out
into
in
mov
dec
out
push
enter
adc
outsl
call
stc
in
sbb
imul
imul
push
in
xchg
sbb
mov
call
aad
out
movzwl
dec
fs
lahf
xchg
dec
mov
push
mov
cmp
dec
sti
es
jnp
stos
out
out
jl
adc
cmpsl
scas
out
or
dec
in
sbb
fbstp
bound
xchg
ljmp
in
or
add
in
add
jmp
mov
ja
push
aas
xchg
out
sub
fs
mov
jle
jo
test
stos
mov
pop
xchg
popf
and
adc
xor
inc
inc
push
test
pop
or
sahf
pop
or
ljmp
mov
movsb
and
cmp
pushf
xchg
ja
loope
pop
ficompl
and
out
mov
imul
arpl
jbe
in
pop
xor
xchg
pop
out
mov
mov
mov
and
mov
pop
pop
jo
cmp
sti
push
mov
mov
add
imul
gs
jo
test
mov
les
xchg
in
and
mov
xlat
cli
cmp
mov
adc
mov
and
movsl
and
aad
mov
pop
adc
mov
int
jne
xor
dec
outsl
jle
nop
jp
cld
cmpsb
ret
and
out
mov
addr16
clc
pop
aad
adc
in
lods
inc
sub
dec
arpl
pushf
loopne
cs
aaa
bound
sbb
sbb
jl
and
xchg
and
les
stos
sti
shrl
inc
jge
xchg
ds
imul
jne
add
adcb
push
inc
pop
push
xlat
jo
mov
lret
sbb
dec
cld
push
inc
fidivs
insb
cld
cmc
pop
mov
js
adc
repz
idivl
cwtl
xchg
or
and
mov
push
stos
ret
or
dec
ror
pop
sbb
adc
add
mov
pop
xor
sub
filds
sahf
push
mov
ss
sti
lock
xor
add
adc
push
xchg
cmpsb
orb
xchg
test
mov
cmp
in
push
push
icebp
or
out
mov
js
fidivl
dec
cli
sub
push
leave
aad
decl
inc
int
inc
rcl
push
insb
mov
cwtl
lret
int3
cmc
aad
pop
pop
pop
xor
pop
ss
cmp
lahf
fwait
les
jae
xchg
icebp
sbb
push
rolb
es
stos
pop
iret
mov
movsb
xor
sbb
cmp
push
jmp
adc
loop
push
aaa
jmp
mov
int
jns
call
push
ss
xlat
and
jnp
cld
test
adc
push
iret
pop
dec
adc
push
jno
lock
pusha
adc
js
push
test
out
add
shlb
test
fmull
fildl
aam
test
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
cld
pop
jo
mov
cmp
sbb
inc
pusha
add
divb
pop
scas
cmc
xchg
jp
or
adc
out
jo
mov
sbb
xor
and
cmp
push
cmpb
push
loope
jp
shrb
shll
fcoms
xchg
add
jns
out
push
lret
imull
push
inc
xchg
xchg
jl
fsubrs
aad
std
int3
inc
jge
sub
je
add
adc
andl
pop
pushf
adc
jae
cmc
mov
lods
in
jae
insl
jns
mov
xchg
push
dec
or
scas
imul
add
cmpsb
faddp
mov
jno
nop
mov
mov
hlt
jge
imul
pop
pop
jno
iret
scas
filds
pushf
outsb
out
xor
inc
mov
xor
jmp
fadd
mov
jmp
mov
mov
mov
xchg
inc
jnp
jle
cld
xor
pop
fidivrl
push
sub
divl
cmp
inc
xchg
mov
jge
inc
icebp
clc
mov
stos
lcall
in
iret
adc
sbb
fstl
xchg
pop
mov
mov
ja
ja
ljmp
adc
or
fisubs
and
mov
or
daa
mov
or
subl
fmull
dec
icebp
mov
jl
cmc
xor
arpl
ljmp
jb
inc
je
mov
xchg
and
fsubp
pop
movsb
cmpsl
jae
fsubs
pop
jne
stos
cltd
mov
aaa
std
and
fmulp
rcl
test
or
loope
shlb
test
ror
pop
xor
jg
inc
dec
loop
insb
sub
int
cmovne
movb
out
int
cwtl
into
sahf
out
imul
lds
mov
aad
pushf
push
dec
cmp
es
push
pop
cli
jle
jae
mov
out
cmc
sub
popa
cmp
pop
sahf
in
add
test
negl
das
pushf
lahf
ffreep
sbb
xlat
cmpb
xchg
call
lcall
dec
in
inc
cmp
icebp
pop
imul
stos
cmpsl
cmp
stos
add
ret
cmpb
jbe
xchg
dec
sub
push
push
push
sbb
bound
cmpsl
pusha
in
loopne
push
push
push
push
std
js
arpl
jecxz
dec
or
fwait
mov
lock
jge
mov
movswl
dec
pop
inc
outsl
ljmp
push
mov
rcrl
pop
push
movsl
in
cmp
imul
add
push
xor
mov
inc
cmp
inc
arpl
pop
jg
jne
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
pop
or
add
adc
jo
jle
jo
test
in
sub
aam
inc
pop
push
cltd
xchg
or
lods
or
enter
lods
into
jne
andl
dec
imul
insb
pop
in
pop
shlb
cs
hlt
imul
push
jmp
mov
mov
mul
dec
insl
jmp
xor
mov
mov
insl
and
fistpl
repz
and
mov
and
push
or
addl
outsb
aas
in
mov
clc
inc
cmp
add
or
fwait
xor
cmpsl
xor
cmp
pushf
push
in
sub
jno
push
repz
mov
jns
pushl
dec
loop
jne
outsl
add
dec
jne
enter
cmp
fdivrs
int3
icebp
push
jl
sub
outsb
inc
cmp
dec
push
and
test
xor
sub
cltd
xor
mov
aaa
sbb
arpl
mov
es
jmp
mov
cs
call
mov
sbb
jbe
je
dec
sete
icebp
inc
dec
jmp
mov
xchg
sbb
xor
addr16
adc
inc
lahf
loop
vcvtss2si
or
fstpt
mov
cmc
or
add
adc
pop
sub
sbb
sub
fldl
add
jecxz
shlb
dec
or
inc
mov
es
pusha
movsb
jecxz
mov
inc
gs
push
ffree
out
jno
enter
sub
test
inc
repz
lds
and
inc
xchg
out
cmp
inc
mov
jns
sti
fucomp
ja
shlb
xchg
imul
insl
cmp
cmpsb
lret
faddl
in
cmp
xor
mov
jmp
pop
dec
lret
fs
xchg
lret
je
mov
fcom
and
roll
cmpsl
je
jb
shrl
test
cmp
mov
cmp
dec
xor
adc
xchg
mov
out
clc
inc
mov
add
inc
jmp
lahf
fwait
xorb
mov
mov
dec
test
sub
add
sahf
in
xlat
and
repnz
insb
or
pop
repnz
stos
xchg
in
push
mov
inc
mov
dec
aad
or
push
add
xchg
cmp
pop
imul
mov
sub
sub
in
push
and
push
stos
cli
aaa
dec
or
arpl
xor
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
jmp
lock
push
and
fcmove
mov
pop
test
pop
mov
insl
inc
lods
dec
in
dec
in
and
pop
push
or
dec
push
jno
and
hlt
repnz
out
mov
jmp
hlt
cmpsl
in
nop
push
movsb
addr16
cmpsl
or
mov
xor
pop
mov
addr16
xor
dec
pop
mov
mov
stc
loop
mov
fldcw
jecxz
cld
jb
fidivrl
sbbl
test
popf
push
test
fucom
leave
ja
dec
inc
push
fdivs
mov
cmp
shr
ljmp
lret
popa
movsb
mov
enter
adc
daa
aad
or
leave
xlat
pop
and
ss
fwait
adc
into
jnp
je
push
cmpb
hlt
lock
push
fnstsw
in
movsb
rolb
jae
andnps
pushf
mov
ja
outsb
cmp
fwait
outsb
jp
mov
stc
cmp
insb
rcrb
andb
sbb
hlt
sbb
fcmovnu
xorl
lock
inc
add
and
sub
xchg
daa
loop
gs
jecxz
hlt
div
addr16
cmp
jp
jge
bound
std
mov
push
jl
jae
lcall
pop
add
fnstenv
dec
cmp
cmp
push
and
push
sbb
mov
pop
add
dec
fildl
es
fs
mov
mov
divl
and
cld
push
mov
daa
jbe
int
fnstsw
sahf
lret
outsl
dec
adc
jae
movsb
in
xchg
jle
xor
xor
and
xlat
stos
xor
adc
jmp
xchg
jbe
insb
fimull
dec
add
aas
add
sub
sub
inc
cmp
cmp
or
sbb
mov
in
mov
pop
xchg
jl
cmp
out
jae
add
mov
adc
mov
mov
arpl
inc
jb
outsl
jno
ss
int
movsl
js
pop
lret
xor
push
pop
dec
call
push
push
call
sbb
push
and
push
imul
lret
dec
outsb
or
scas
lods
adc
jbe
data16
movnti
mov
scas
addr16
inc
outsb
leave
pop
in
add
cmp
outsl
lods
arpl
xchg
int3
sub
aas
inc
clc
add
inc
push
xor
roll
push
es
out
add
and
sub
outsb
fisubs
rclb
sub
mov
mov
aad
daa
add
dec
mov
jo
push
aam
sbb
xor
cmp
hlt
shl
push
cmc
add
push
pusha
mov
jb
jbe
dec
mov
pop
jge
repz
aam
lret
sbb
popf
inc
gs
pushf
arpl
mov
adc
add
sub
popa
xchg
cmp
movsb
repnz
fucom
mov
xchg
rcrb
sbb
adc
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
jo
cmp
or
pop
push
push
mov
sbbl
pop
fadds
mov
testl
mov
gs
lea
jns
or
je
das
dec
jno
inc
or
and
mov
push
cmc
or
pop
clc
fistpl
dec
xor
les
add
cmp
or
testl
lds
sub
jge
mov
or
clc
sub
sbb
es
xor
mov
and
out
rolb
and
mov
xor
fildl
popf
aas
daa
pop
jl
jmp
stos
imul
pusha
idivb
push
add
sub
jbe
lahf
add
and
or
test
mov
int3
int
xchg
pop
jne
lock
pusha
mov
xor
push
mov
adc
decb
or
lret
push
and
push
imul
xchg
ljmp
daa
aas
scas
adc
pushf
repnz
divb
daa
ss
movsb
jno
out
xchg
xor
push
inc
gs
sbb
std
xchg
std
jg
test
pop
jl
cld
int
stos
mov
cmpb
test
fisubrl
in
or
pusha
or
mov
lahf
cmp
data16
mov
xchg
in
mov
addr16
data16
and
cmpsb
outsb
shlb
sti
dec
sub
xorb
popf
or
cmp
cli
in
sub
pop
cmp
cmc
jle
mov
jns
xor
scas
xlat
mov
lock
mov
xchg
bound
xor
or
adc
push
sub
jo
lret
add
push
push
ja
cld
adcl
ss
dec
and
mov
out
mov
mov
ret
jp
inc
dec
add
xor
ljmp
inc
outsb
dec
jle
scas
out
push
xor
popf
jns
mov
lds
mov
xor
test
out
stc
sub
add
sbb
mov
out
dec
js
int
push
xor
je
or
or
cwtl
xor
push
mov
xlat
imull
adc
push
push
adcl
pop
adc
out
in
cmp
and
test
mov
xor
inc
adc
push
xor
sti
lahf
adc
imul
repnz
cmp
mov
jmp
add
add
jb
jle
lods
lret
mov
inc
fs
pushf
ja
jbe
mov
int3
xchg
inc
sahf
xor
xchg
adc
dec
push
add
das
fists
cmp
sahf
leave
movsb
dec
mov
mov
sub
mov
jl
aad
fdivl
mov
mov
pop
and
mov
ss
pop
jnp
adc
jg
daa
xchg
dec
iret
cltd
addr16
sub
push
mov
and
mov
fsubs
cmp
lret
and
test
jg
jns
fdivs
mov
js
adc
add
test
push
or
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
cmp
sbbb
jo
jge
jo
sysenter
xchg
addr16
adc
add
je
xchg
add
jno
ds
add
rorl
mov
inc
cmp
imul
imulb
cs
mov
add
fldt
int
mov
ficoms
xchg
cli
fsubrs
jp
jecxz
mov
cmp
adc
insb
loop
sbb
insl
out
nop
adc
cmp
jno
scas
xchg
cmp
jmp
add
roll
push
repnz
xchg
xchg
push
or
loop
movsl
mov
mov
push
push
dec
pop
or
test
push
mov
xor
mov
jmp
xlat
push
pop
pop
popl
jg
ljmp
jle
out
xor
push
es
nop
mov
sub
cwtl
mov
imul
sub
jge
mov
sbb
mov
or
fbld
aaa
sub
stos
ds
in
push
xor
xchg
cmp
fxch
icebp
imul
xor
mov
push
shr
ds
inc
mov
inc
cmp
lahf
sbb
dec
and
or
imul
jnp
fmull
sti
jns
xorl
mov
rcrl
dec
sbb
in
shlb
cmpb
scas
and
sbb
cmp
imul
and
cmp
mov
test
in
pop
stos
mov
out
int
dec
jl
test
enter
nop
stos
add
xor
pop
in
or
shl
mov
fcompl
mov
mov
cmp
mov
inc
push
lret
pop
dec
cmpsl
repz
rclb
cmp
out
ret
pop
dec
fucomip
in
mov
inc
xor
je
pop
rcrl
test
aam
cmpsl
mov
pop
xor
dec
adc
leave
xor
sub
iret
push
pop
sbb
pop
mov
jecxz
mov
cmp
test
inc
and
in
and
sbb
ja
fyl2x
cmp
out
jnp
call
lods
arpl
pop
add
and
adc
mov
test
pushf
inc
iret
pop
lcall
iret
push
mov
mov
fs
inc
and
jg
sti
aam
orb
mov
add
icebp
sbb
cmp
fmull
push
enter
loope
or
enter
scas
xchg
mov
adc
push
daa
sarl
dec
cmp
add
mov
mov
test
lods
adc
or
inc
repnz
and
loopne
xchg
into
icebp
xor
lock
mov
repz
add
and
fsubl
lea
insb
aas
and
jmp
faddl
sbb
mov
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
setg
jo
cmp
add
pop
stos
ja
pop
dec
xchg
cmc
test
or
aam
dec
sbb
cltd
jno
and
mov
mov
lea
or
in
mov
fistl
fs
cmpsl
inc
sarb
add
jle
and
arpl
mov
popa
sub
sar
dec
pcmpgtb
lods
scas
lcall
mov
push
stc
xchg
cmpb
rol
mov
or
mov
test
sub
sub
dec
push
cltd
inc
sub
repnz
stos
sarb
fmul
test
mov
outsl
arpl
data16
push
mov
adc
addr16
in
js
hlt
and
out
aam
mov
mov
mov
and
or
lods
or
ljmp
xchg
jp
xchg
cmp
iret
fisttpl
fimuls
arpl
test
mov
add
xchg
push
push
ja
sbb
sbb
mov
cltd
aas
mov
psubd
int3
iretw
fcoms
xchg
aad
fdivp
sbb
outsb
xor
nop
cli
inc
lock
popa
push
imul
pushf
ss
scas
xchg
aaa
test
fnsave
cmp
or
subw
xchg
fisubl
mov
mov
add
xchg
mov
pop
cli
aad
jge
movsb
dec
and
loopne
into
push
xor
adc
add
mov
in
dec
pop
in
ret
pop
adc
pop
jmp
jo
lcall
pop
xor
fildl
vpmullw
fstps
pop
aam
fyl2x
cmpsl
shr
pusha
in
imul
mov
es
cmp
jne
dec
sti
mov
jno
roll
adc
lds
jp
fucomip
dec
jge
mov
fiadds
cwtl
sub
mov
push
insl
inc
jno
mov
aas
and
jmp
fwait
stos
sbb
js
cmp
mov
repnz
or
sbb
push
xchg
loop
sbb
xor
and
into
lahf
push
sarb
outsl
cld
jnp
sub
or
pop
xor
imul
iret
bound
insl
jge
cmp
addr16
push
out
mov
popf
jp
shlb
hlt
mov
fs
jle
call
idivb
lcall
sub
jne
add
inc
loope
sub
sub
adc
or
xchg
and
shll
lods
sti
dec
dec
push
mov
arpl
ljmp
jge
insl
add
fmuls
pushf
pop
mov
add
jl
and
insb
nop
or
js
mov
in
mul
push
push
mov
adc
mov
lahf
xor
stc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
daa
inc
jns
and
jo
jge
jo
fdivrs
xlat
test
mov
mov
push
stos
repz
in
sbb
out
cltd
rcrb
xor
in
insl
mov
push
imul
mov
pop
or
and
in
addr16
jnp
xor
xor
enter
and
jmp
xchg
outsb
inc
outsb
or
jno
into
cmp
rcrb
scas
stos
mov
xlat
sbb
sub
stos
inc
push
iret
sub
jmp
out
fistpll
cmpsl
and
xor
pop
popf
and
shlb
call
jo
iret
push
pop
aad
and
out
orl
adc
lret
jae
inc
jno
sbb
xchg
xchg
les
mov
je
mov
jns
cmp
cmp
xchg
mov
xor
int
iret
arpl
xchg
mov
push
test
sub
pop
jbe
adc
insb
lds
movlps
pop
loop
hlt
jb
pusha
dec
shl
mov
scas
test
in
std
ds
imul
shr
fwait
push
lret
ret
cmpl
jl
adc
mov
bound
jnp
movsb
adc
push
sbb
cmp
dec
lret
cmp
sar
clc
in
mov
fldenv
sbb
jecxz
jecxz
call
fnstcw
jle
sbb
cmp
dec
xchg
jl
mov
push
xchg
hlt
mov
inc
dec
fistpl
test
icebp
cmp
pop
stos
push
arpl
mov
adc
rol
xchg
cltd
lret
jle
pop
pop
mulb
sbb
pushf
cmpsl
inc
clc
pop
imul
or
lods
inc
std
insb
and
mov
adc
add
jp
inc
sub
pop
icebp
push
fidivs
push
or
push
jnp
mov
mov
imul
dec
gs
sub
or
mov
imulb
ds
js
out
in
out
lods
test
out
lock
mov
jnp
pop
stos
push
adc
mov
ret
pop
js
fildl
es
jns
mov
sbb
jmp
add
xor
aam
pushf
dec
hlt
das
je
dec
inc
xor
mov
mov
sub
push
in
leave
mov
fisttpll
push
pusha
lock
push
sbb
iret
jb
and
sub
inc
pop
mov
cld
jno
shlb
jp
jp
mov
xchg
dec
popf
stc
mov
mov
mov
fiaddl
adc
insl
ret
push
push
cmc
add
lcall
xorb
xor
mov
cmp
fmuls
lock
aas
stos
push
dec
jae
cmpsl
or
out
xor
incb
pop
jle
mov
inc
jecxz
sar
cmp
xor
cmpl
nop
imul
cs
iret
mov
or
mov
mov
lds
mov
jmp
hlt
or
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
dec
popf
and
cmp
cmpsl
mov
es
outsl
xor
xchg
push
push
lods
mov
and
faddp
call
jne
rcll
jne
cmp
int
mov
jnp
insl
loope
lea
fldenv
aas
cmp
sbbb
cmp
pop
daa
pop
or
xchg
mov
jmp
dec
sahf
adc
xor
jl
out
push
bound
jns
ja
scas
sub
mov
fadds
inc
out
xor
sbb
mov
cwtl
jle
cmp
sarl
xor
fidivs
rolb
cmp
xchg
fimuls
xor
dec
out
mov
loope
mov
push
add
sub
sbb
or
lock
repnz
stos
bound
sub
in
fcmove
mov
imul
int3
out
mov
fsubrl
pop
adcb
jae
aas
pop
jne
mov
mov
xchg
popa
jns
mov
aad
cli
rol
jne
test
lods
xchg
mov
pop
or
push
inc
lret
jns
rcl
das
cmp
insb
sub
mov
and
cmp
inc
shrb
pop
xchg
enter
notl
pop
je
fisttpl
sbb
or
xor
popf
mov
jle
mov
jecxz
push
xchg
sub
shrb
mov
inc
push
in
pop
xor
call
int3
fisttps
sti
test
ljmp
mov
fnstsw
movl
jl
mov
mov
je
and
xor
aas
push
cmp
xchg
call
in
and
aam
aad
xchg
fcoms
adc
mov
add
aad
pop
mov
dec
loopne
popa
cld
dec
pop
mov
popf
jle
cmovg
jg
ds
cmp
sub
or
ret
jl
lods
imul
test
mov
dec
push
scas
lea
mov
dec
mov
mov
mov
mov
adc
xor
sbb
jge
or
pop
js
sarb
fcomp
imulb
pop
daa
scas
inc
pusha
fmull
ffreep
and
dec
iret
in
pusha
jl
jnp
rclb
xor
jg
add
push
loop
shll
addb
loopne
push
ss
add
andl
and
ljmp
jae
out
mov
and
dec
or
pop
dec
out
inc
orl
outsb
out
sub
xchg
leave
cmp
or
and
pop
jbe
negl
dec
dec
mov
outsl
mov
cmp
and
dec
jbe
xchg
mov
aam
addr16
push
pop
test
pop
cmc
and
or
lock
clc
rorb
sbb
sbb
sbb
rcll
std
dec
add
fwait
push
lods
daa
mov
mov
mov
lods
or
xchg
pop
jno
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
test
jo
jge
jo
sti
cmp
add
shll
lds
mov
dec
fldenv
call
adc
iret
cmp
sets
inc
add
and
dec
xor
pop
andl
lea
mov
sbb
push
inc
mov
sbb
sub
add
negl
xor
leave
push
push
call
mov
jmp
lock
js
loop
and
into
es
lret
dec
xchg
xchg
inc
dec
push
jbe
lds
push
mul
loopne
repnz
sub
dec
insl
popa
faddl
aas
and
mov
sub
pop
jmp
inc
fcmovbe
mov
pushf
push
mov
add
xor
ret
sbb
movsb
jmp
cltd
fcompl
lea
xor
stos
mov
inc
xchg
mov
ljmp
cwtl
imulb
add
fnsave
sbb
xchg
icebp
lea
sbb
lea
or
sarb
push
or
jg
add
rorl
add
fwait
repnz
add
or
imul
das
mov
cwtl
fs
or
cli
add
fcmovb
mov
xchg
imul
add
add
out
negb
sub
push
rcll
stc
sbb
dec
fcomps
xchg
popf
dec
xchg
xchg
mov
mov
loope
popf
movsb
sbb
cmc
sahf
xor
cmp
pop
dec
lods
push
fwait
push
add
jb
aam
in
mov
sbb
dec
sbb
or
dec
fsubl
test
stos
ja
push
mov
stos
rorb
xchg
pop
dec
add
int
adcb
cmpb
push
mov
nop
sub
pop
mov
outsl
adc
addr16
jnp
push
sbb
xchg
cs
je
jge
mov
xchg
pop
std
cltd
repnz
lret
adc
and
xchg
inc
pusha
mov
sub
mov
sbb
and
jecxz
movsl
cmpsl
cli
jmp
and
sbb
enter
test
add
and
cmp
ja
mov
dec
aad
jle
fcom
xor
daa
xor
scas
lods
push
std
add
cmc
push
mov
and
in
fcmovnbe
add
popf
push
sub
jge
jb
jne
int
jmp
rcl
adc
fstl
out
sbb
faddl
jg
adc
mov
add
aaa
jno
add
in
int
jp
xchg
cmc
lods
cmp
jl
imul
pushl
push
push
sbb
sub
mov
cs
and
jbe
mov
push
in
add
aad
pusha
xor
ficoml
mov
push
lret
cmp
es
lret
add
test
stc
insl
adc
inc
push
int
mov
jae
lahf
xchg
ds
and
shlb
xlat
xor
xchg
inc
xchg
and
call
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rorl
jo
cmp
pop
sahf
pop
add
push
jnp
and
add
popf
outsb
xchg
mov
cmp
pop
sbb
adc
movsb
push
and
das
inc
sub
ret
test
push
dec
orl
cs
add
lods
sbb
mov
pushf
aaa
lods
repnz
daa
rdtsc
lea
adc
dec
dec
xor
xlat
jnp
mov
mov
popa
push
and
jle
push
xchg
dec
fucompp
js
adc
push
inc
loopne
lock
dec
pop
xchg
xchg
sarl
push
pop
and
pushl
push
push
loope
pop
andl
and
and
inc
aad
sbb
jp
sahf
mov
mov
nop
sub
enter
cld
test
push
std
pop
pop
adc
out
mov
clc
xor
ljmp
loop
pop
add
nop
mov
pop
lds
xchg
jmp
xchg
or
add
repz
or
outsb
ds
ret
outsb
mov
cmp
mov
mov
cmp
test
xor
or
int3
or
push
and
dec
add
adc
and
and
dec
jbe
adc
add
xchg
xchg
and
aam
adc
sub
jmp
cmp
mov
and
scas
jb
pop
lds
mov
nop
into
rcrb
dec
in
xchg
mov
mov
mov
lds
xor
std
repnz
sbb
pop
fnstcw
aas
pop
popa
negb
pop
ja
aas
sub
in
adc
in
mov
test
int3
add
fadd
xor
aas
mov
ss
inc
or
push
adcl
jns
sub
xchg
ja
clc
out
cmp
icebp
inc
aas
adc
cmp
adc
push
rcl
xchg
or
xchg
mov
andl
sbb
pushf
dec
and
fdivrs
adc
sub
jl
orb
int3
fildl
scas
jp
mov
dec
rcrb
in
xor
popa
mov
repz
incb
or
mov
inc
in
jns
mov
lods
jmp
mov
gs
lds
push
jne
mov
jo
sbb
test
clc
mov
test
push
repnz
iret
jo,pn
add
sbb
in
jp
repnz
daa
sti
in
push
pop
cmp
pop
or
stc
dec
frndint
or
jmp
push
scas
or
in
icebp
fiaddl
mov
xchg
lahf
push
mov
xor
in
rcrb
sahf
jo
vmulss
and
mov
mov
dec
addl
addr16
mulb
leave
push
inc
inc
cli
cmpsb
aas
sbb
stc
shll
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
xor
jo
stos
jle
jo
les
out
ljmp
mov
jl
cltd
sti
shl
nop
orl
sub
mov
insb
shlb
out
in
mov
lcall
scas
aas
mov
mov
mov
xchg
mov
jno
insl
cmp
jecxz
les
sbb
stos
mov
cmpb
push
int
test
iret
scas
sbb
shrl
shl
push
push
jno
jb
adc
sbb
jno
xchg
popa
mov
into
mov
fsubl
fisttpll
mov
xor
or
cmp
cmp
xchg
adc
enter
xor
jnp
lahf
cmp
pop
cltd
daa
cmp
sub
ljmp
pop
loopne
pop
push
fimuls
pusha
xchg
pop
push
mov
addr16
mov
outsl
imul
xchg
aaa
jno
mov
std
lods
cltd
lock
bound
cmp
xor
arpl
inc
mov
arpl
mov
jmp
jecxz
push
sti
push
sub
sbb
xchg
ret
push
enter
mov
mov
test
push
dec
inc
loopne
out
adc
sbb
rcr
xor
jne
xor
xor
sbb
mov
push
mov
sarl
push
fimull
in
cmc
popa
rclb
adc
bound
and
add
popf
test
sub
cltd
mov
sahf
mov
add
push
shlb
jne
jmp
or
lods
call
inc
jp
lahf
xchg
jecxz
loope
mov
inc
sub
into
int3
cmp
jnp
push
decb
outsb
push
push
lret
outsb
sub
cli
or
push
loope
pop
inc
cmpsb
div
sub
mov
or
push
push
icebp
or
inc
jnp
fistpll
int
pop
mov
sub
lds
test
jb
cmp
jmp
mov
leave
arpl
cmp
mov
jnp
mov
push
inc
mov
scas
dec
cli
xchg
mov
aas
adcb
mov
iret
xlat
outsb
sub
int
or
mov
and
push
adc
fisttps
push
pop
jne
fsubs
pop
cs
aas
gs
adc
inc
dec
cmpsl
sub
sub
mov
clc
mov
lcall
ret
mov
jmp
adc
cmpsl
xchg
gs
fisubrs
scas
jne
jbe
mov
push
sbb
das
js
push
movzwl
and
mov
jmp
ja
and
dec
xchg
cmc
inc
dec
xor
jo
rcr
mov
push
lods
mov
test
and
test
jbe
int3
into
push
addr16
test
inc
into
xchg
insb
or
int3
repnz
pop
mov
out
fisubs
in
pop
pop
sub
gs
iret
xor
xor
jae
sub
pop
shll
ret
cmp
cs
mov
repnz
int
mov
insb
sbb
ja
and
sbb
add
or
jns
fnsave
pop
lcall
sti
jb
and
adc
mov
cmp
mov
nop
lock
clc
mov
es
xchg
add
push
mov
or
add
test
aas
adc
rorl
fwait
jmp
cmp
mov
jl
push
orl
cmp
push
pop
pop
rcr
fs
adc
clc
mov
in
addb
testl
lret
xchg
mov
or
mov
xchg
fsubs
shlb
pop
inc
fs
jne
fcoml
orb
hlt
icebp
mov
cli
add
das
scas
ficoms
sahf
inc
push
mov
mov
dec
push
or
pop
loopne
fdivrs
fwait
or
je
fcmovb
mov
jae
fstpt
mov
dec
cs
dec
and
or
push
xor
cmp
xchg
pop
nop
test
jg
pop
mov
or
add
jno
mov
jle
jecxz
outsb
jnp
and
or
idivb
insl
fs
cmp
adc
cmpsb
cwtl
add
and
pop
test
sub
and
jns
loop
push
mov
dec
mov
movl
mov
cmp
jge
fwait
pop
rclb
jl
xchg
mov
iret
adc
jp
fcom
xor
mov
shlb
mov
mov
faddp
imul
test
cmp
out
push
insb
fs
notl
mov
jo
dec
jo
call
je
ret
addr16
dec
aaa
pop
test
jno
jno
jmp
sub
adc
push
push
and
lods
ret
outsl
cmpsl
mov
jmp
jecxz
adc
and
add
cmp
mov
mov
mov
hlt
inc
cwtl
ljmp
inc
dec
inc
ss
sti
inc
int3
notb
mov
cmp
repnz
mov
stc
in
mov
shlb
mov
xchg
mov
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
dec
dec
test
jo
stos
jle
jo
pop
ljmp
lahf
loopne
dec
mov
lods
and
pop
ret
push
test
repnz
pop
jae
mov
mov
mov
std
mov
cmp
loopne
or
adc
or
stos
ljmp
or
add
outsb
jmp
lock
adc
lcall
jo
sbb
cmpsb
fiadds
in
nop
cmp
divb
or
testb
inc
sbb
les
dec
push
pop
mov
push
pop
je
and
jbe
xchg
arpl
or
out
sbb
push
ret
stos
ljmp
dec
data16
xchg
fnstcw
add
cmpsl
cmp
xchg
add
insl
or
fistpll
lds
xor
dec
push
pop
sbb
into
mov
or
ljmp
out
mov
imul
push
fs
mov
add
cs
mov
je
inc
or
into
inc
mov
mov
mov
xor
shrb
jecxz
pop
fdiv
adc
cmp
push
subl
or
jmp
lods
enter
xchg
dec
int3
xor
add
arpl
mov
pop
cs
out
pop
inc
adc
push
inc
lcall
push
pop
jnp
leave
imul
mov
xchg
inc
add
loope
xchg
cmp
cmpsb
in
iret
xor
push
jne
lods
mov
stc
cmpsb
adc
insl
push
addr16
push
pop
and
jnp
rcrb
or
fcmovb
imul
int
dec
les
rcrb
scas
int3
int3
mov
movsl
adc
testl
aam
dec
aad
inc
aas
add
call
sub
mov
aas
lcall
lods
inc
popf
pcmpeqb
xchg
or
and
lahf
add
mov
jecxz
cs
and
or
movq
cmp
and
mov
pop
push
stos
cmc
lods
mov
pop
std
into
lea
xor
jg
cmp
mov
repz
ror
ficompl
mov
aad
in
sbb
decl
lods
in
aad
dec
xchg
insl
fnstenv
out
add
out
shrb
lds
in
shlb
cs
pop
fsubl
add
sub
push
add
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
cmp
cs
jo
cmpsl
jg
jo
pop
fildl
std
ficoml
add
inc
fsts
adc
xorl
ror
pusha
jmp
jb
int
mov
outsb
mov
xor
pop
mov
xchg
int
stos
xor
orl
mov
jecxz
fldcw
jp
xchg
fwait
mov
scas
aam
add
fimull
lret
xor
or
ret
and
add
dec
pusha
dec
mov
xchg
imul
xchg
cmp
cmp
pop
imul
jmp
aaa
push
pop
sbb
outsb
fisubrs
inc
int
test
jle
mov
xchg
mov
lods
cmp
fidivl
cld
std
or
xlat
shl
inc
clc
lcall
jns
push
sub
xor
or
sub
imul
rol
call
sbb
fs
sbb
sbb
aam
pop
cs
jbe
stos
cld
inc
cwtl
je
inc
mov
gs
dec
repz
or
jne
incl
xor
mov
popa
pop
scas
dec
lods
cld
ds
popa
add
push
test
in
xchg
jnp
jo
and
stos
cmp
leave
stos
xor
mov
mov
lds
ret
fcoms
pushf
ja
adc
ja
sub
clc
lret
insl
xchg
push
sub
inc
jg
xchg
jp
in
push
rol
repz
inc
jb
pop
and
xor
leave
sbb
xor
mov
test
rolb
and
int
lret
or
add
clc
mov
sahf
mov
jge
xor
dec
pop
and
gs
dec
inc
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
outsb
gs
cmpsl
jg
jo
fld
out
cli
ficompl
imul
mov
gs
iret
dec
pop
and
in
mov
imul
movsl
xor
std
imul
clc
inc
fwait
cwtl
push
jl
or
jle
data16
inc
and
out
int
push
fldcw
pusha
mov
pop
push
shl
sti
sub
cmpsb
scas
add
jbe
xchg
mov
int
jbe
fcomps
filds
daa
lea
add
or
mov
cltd
jp
pop
out
or
mov
or
inc
mov
dec
sti
outsl
jl
xor
and
sbb
push
mov
shrb
out
mov
mov
mov
cld
icebp
sbb
sub
sbb
mov
fldcw
mov
or
xchg
xchg
adc
sbb
add
xor
mov
mov
jb
adc
push
into
mov
adc
mov
mov
repz
push
cld
xchg
adcl
jnp
add
mov
pop
inc
fisubl
shrl
lret
hlt
xchg
dec
lods
xchg
mov
gs
push
mov
pop
enter
cmpsb
lds
inc
cmp
sbb
and
mov
call
and
pop
jbe
cmp
ss
xchg
push
stc
sbb
jne
or
call
pop
jmp
mov
enter
mov
xchg
cmp
insl
jge
addr16
stc
xchg
das
push
lret
in
push
cld
outsb
push
xchg
pop
xchg
mov
in
int
dec
aaa
dec
test
pop
lcall
pop
cmpsl
lcall
jne
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
pop
aaa
pop
mov
jo
jg
jo
dec
and
mov
add
fildll
clc
insb
mov
divb
fildl
jnp
pop
adc
in
and
insl
mov
scas
inc
xchg
xor
xchg
mov
insb
jle
les
mov
xchg
shr
jo
mov
cmp
xchg
xchg
daa
push
jmp
inc
adc
cmpsl
daa
scas
jle
mov
and
sbb
adc
lcall
stc
aaa
sub
add
fs
push
je
adcb
insb
int3
push
inc
daa
in
inc
push
push
js
ds
dec
das
lret
cwtl
mov
out
ret
pop
mov
outsl
lret
xchg
out
dec
mov
imul
adc
imul
fsts
add
mov
dec
scas
jl
xor
inc
in
push
add
scas
jo
xor
addl
mov
ja
mov
pop
fs
push
es
mov
int3
testl
pop
push
or
lret
and
push
hlt
pop
lcall
aaa
xchg
ret
inc
mov
ds
jl
test
adc
pop
xorl
stc
cmc
xor
cltd
ljmp
dec
jp
test
adc
pop
jbe
add
sbb
sbbb
mov
fcmove
jmp
fsubs
stos
popa
inc
add
mov
xor
jo
das
jb
movsb
xor
sahf
xchg
push
pushf
sbb
xlat
shl
and
outsl
mov
les
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
popf
addr16
mov
loop
jo
cmp
enter
arpl
sbb
mov
ucomiss
bound
fdivrl
jle
sbb
cmp
push
cmpsl
mov
movsb
lret
pop
xchg
pop
fs
popa
jmp
adc
sub
loope
imul
pop
fldcw
dec
adc
js
xchg
mov
sub
mov
repnz
cmp
add
lods
xchg
jae
sub
add
cmp
sub
pushf
pop
jns
jb
adc
out
dec
push
jo
inc
mov
stos
ds
in
ret
jp
ret
dec
ret
popa
std
movsb
mov
into
adc
xor
fstpt
jnp
les
or
pop
ret
scas
xor
mov
popa
ds
push
jno
sub
mov
pop
xchg
jle
cmp
add
push
or
mov
ss
ret
mov
pop
mov
hlt
pop
fisubrl
enter
stos
stos
or
inc
and
mov
inc
bnd
pop
rcll
pop
es
sub
dec
mov
iret
dec
sub
roll
jl
cmpsl
add
sbb
jb
pop
fmuls
fwait
mov
mov
or
mov
dec
shlb
mov
addl
sbb
sbb
fcmovne
ret
test
sbb
repz
je
aam
icebp
mov
and
dec
int3
sub
cmp
dec
loopne
sti
mov
dec
mov
rcrb
xchg
cmp
movsl
dec
fwait
cli
pop
loope
outsl
or
adc
adc
pop
fiadds
push
push
and
fisubs
mov
andl
push
or
mov
cwtl
lods
test
and
insl
into
in
mul
movsl
scas
mov
pop
adc
or
sarb
popf
repnz
inc
adc
push
cmovnp
inc
xchg
int
mov
mov
repnz
lret
dec
pop
es
mov
mov
and
xor
das
cli
das
arpl
jns
cwtl
sbb
scas
jo
xchg
mov
int3
push
mov
or
push
cmp
inc
in
adc
mov
push
and
inc
jecxz
jnp
lea
test
iret
outsb
into
mov
sbb
hlt
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
loope
pushf
xchg
movsl
cmp
loop
jo
aas
dec
test
jnp
fisubrs
into
dec
imul
ret
inc
shlb
repz
fcoms
dec
out
cwtl
rcr
push
xchg
sub
ret
ret
mov
out
adc
test
or
pop
xor
ret
xorl
lods
je
and
loopne
test
or
movsb
movsb
rcrb
push
add
rol
stos
aaa
sub
inc
and
adc
adc
hlt
testl
adc
sbb
rclb
add
mov
setp
out
fmuls
mov
testb
ja
push
insl
jnp
ret
dec
repz
dec
sbb
rcr
sbb
xor
push
jns
test
sbb
mov
cmp
aas
enter
mov
mov
mov
mov
jle
push
sbb
xor
xor
loop
cli
adc
jp
sbb
mov
lock
test
jbe
scas
sub
mov
and
lcall
dec
mov
outsb
sahf
lret
cmpsb
mov
mov
or
xchg
or
subb
sahf
and
sub
sub
sti
adc
push
mov
push
xor
outsb
out
sarl
outsb
pop
les
cmp
and
dec
cmp
lods
loop
insl
mov
and
pushf
jle
dec
push
sbb
sbb
stc
xchg
xor
mov
lahf
sbbb
into
sbb
push
xchg
outsl
mov
int3
popa
outsb
jl
aas
ss
andl
mov
pop
popa
test
sti
popl
xchg
clc
mulb
stos
aam
fisubrs
add
pop
or
xor
push
stos
inc
push
lret
ret
jo
lcall
pop
cmp
insb
lcall
xor
ret
lock
sbb
lea
orl
popf
ret
sahf
ja
dec
mov
sbb
repz
mov
repz
jb
add
leave
jl
pop
jmp
shr
ficomps
outsb
mov
pop
and
out
cmp
or
stos
cli
stos
or
or
add
push
jecxz
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
outsl
lcall
jge
jo
or
pop
inc
faddl
sti
fsts
or
pop
in
mov
cmpl
cmp
and
cmp
inc
sbb
inc
lods
daa
push
push
outsl
jg
jge,pn
sub
aad
mov
dec
enter
inc
jge
jmp
inc
out
adc
add
negl
outsl
push
xor
cmp
loope
mov
xor
outsl
sbb
movsl
mov
cs
fs
outsb
test
pop
xchg
push
add
or
push
xor
or
adc
pop
xchg
sbbb
sbb
imul
lret
mov
push
and
sahf
cmp
xor
shll
int3
mov
cmpsl
ja
add
inc
pop
lret
arpl
jg
sub
xor
mov
loopne
andl
rep
cmp
jmp
push
cmp
divl
inc
jne
pop
scas
lock
jbe
aam
and
sub
lock
push
cmp
mov
movsb
xlat
out
sub
rdpmc
test
or
subb
fidivrl
fstps
mov
cmpb
mov
pop
shlb
aaa
cli
insl
movsl
or
and
cmpsb
xchg
mov
movsb
push
jno
cmp
and
clc
arpl
cmp
and
mov
jp
fistpl
loop
push
jno
mov
dec
scas
push
or
das
sbb
in
sbb
add
lods
es
sahf
ss
xorb
in
out
fists
movsb
sub
lods
sub
jno
enter
add
orl
fdivrs
popa
cs
lods
add
xor
pop
xor
xchg
fstps
dec
push
in
push
fs
pusha
stos
mov
push
mov
push
adc
scas
divps
mov
push
bound
iret
lods
adc
lock
movsb
popf
int3
dec
dec
xlat
sarl
scas
jmp
sbb
jle
jl
sbb
inc
inc
insb
and
les
and
int3
outsb
jg
clc
xlat
out
inc
jnp
add
cmp
xor
cmp
sub
fadds
js
fs
inc
xchg
jg
mov
dec
mov
orl
rcrl
in
movb
jo
ret
and
fldenv
ds
lds
pop
pop
pop
sbb
and
js
and
pop
clc
cmp
jmp
std
mov
inc
inc
xlat
stc
repnz
add
lahf
adc
repz
push
pop
and
lret
je
mov
dec
jl
sub
dec
lcall
repnz
push
loop
cmp
and
push
in
and
sub
or
bnd
sbbl
jbe
xchg
pop
mov
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
cmp
jo
and
jo
insb
outsb
js
mov
mov
and
imul
mov
pop
cwtl
outsb
scas
mov
lcall
cs
cmp
pop
mov
enter
addr16
mov
lods
mov
xchg
cmp
bound
jae
cmp
dec
rol
pop
mov
mov
ds
and
pop
movsl
out
hlt
mov
and
inc
or
mov
in
inc
mov
imul
test
push
and
push
mov
mov
sbb
test
rol
xor
add
jecxz
dec
lods
jg
fcmovu
jecxz
push
ljmp
xchg
shlb
fdivl
xor
es
and
mov
xchg
sahf
inc
and
enter
push
pusha
adc
and
call
pop
sub
ja
sub
rol
mov
adc
js
aas
mov
decb
test
fadds
pmaxsw
fidivl
jnp
shrb
sbb
fldcw
xor
push
and
movsl
test
or
ficoms
addr16
leave
int
pop
and
mov
mov
lock
xor
xor
mov
imull
cli
in
push
and
test
pop
popf
sbb
inc
mov
mov
shl
mov
pop
or
cmpsb
fdivrl
enter
mov
jge
or
pushf
cmp
or
stos
es
fcoml
add
jo
imul
andb
lahf
test
insl
jl
mov
cmp
jmp
mov
cmc
inc
cld
cwtl
mov
fndisi(8087
in
adc
jae
push
push
or
and
mov
push
xlat
shlb
das
pushf
pushf
sbb
dec
imul
lock
jb
push
inc
xchg
sahf
sbb
xchg
pop
add
repnz
dec
fwait
cmp
cli
hlt
inc
out
arpl
ljmp
lods
push
mov
cwtl
int
mov
jno
loope
sahf
incl
cwtl
inc
push
mov
mov
pop
or
mov
aas
pop
sbb
fstl
dec
jle
arpl
pushf
mov
mov
loopne
cwtl
enter
dec
aas
dec
in
out
dec
icebp
or
mov
fwait
sbb
jae
dec
push
pop
dec
push
inc
lods
or
inc
pop
roll
pop
lods
pop
cwtl
jl
push
jnp
and
adc
mov
or
testb
iret
xor
cmp
cmp
xchg
jae
int3
popa
adc
add
int
push
xorl
push
fldt
sub
and
mov
inc
push
shll
rcl
jle
pop
loopne
int3
mov
sti
sti
pop
or
rclb
add
movsl
dec
push
clc
push
mov
imul
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
and
push
test
jo
inc
xchg
jb
xchg
cmpsl
loope
mov
negb
daa
dec
or
addb
push
and
movsl
fcoms
sub
lods
and
mov
in
aas
sbb
mov
loop
vpmullw
pop
mov
daa
fdiv
fsubr
mov
sbb
push
mov
js
pop
xor
fidivs
pop
test
jmp
fstpt
adc
jl
pop
xor
push
xchg
leave
push
outsl
xchg
lods
jbe
jbe
mov
inc
mov
cmpsb
clc
fwait
dec
mov
fildll
dec
push
pop
jmp
pop
cltd
in
std
mov
mov
fiaddl
mov
jae
lcall
xchg
mov
push
jmp
sbb
inc
fcomi
dec
icebp
mov
aam
inc
xor
jl
bnd
pop
sahf
mov
or
loope
adc
xchg
out
fcoms
cmpsb
mov
popa
outsb
lods
add
dec
in
repz
cwtl
jb
sbb
fs
push
lock
das
mov
dec
push
push
insl
lahf
stos
xchg
repnz
pop
mov
mov
jmp
insl
mov
ljmp
mov
xchg
loopne
inc
enter
jg
sbb
out
mov
add
inc
movsb
jns
xor
add
out
inc
imul
adc
or
inc
mov
xchg
xchg
cmpsl
xor
out
stos
cwtl
test
pushw
inc
outsb
test
aas
pushf
lds
jp
xor
dec
mov
add
sub
adc
pop
or
xchg
push
cs
iret
js
pushf
or
jl
inc
xor
xor
push
xchg
jecxz
mov
cs
adc
pop
add
xchg
leave
dec
pop
sub
mulb
mov
pushf
iret
dec
and
push
adc
imul
mov
jmp
sub
or
mov
sbb
mov
stc
enter
mov
mov
cs
mov
jns
sub
inc
push
or
in
sbb
pusha
adc
xorb
mov
mov
dec
dec
cltd
jl
negl
jecxz
add
movsb
iret
xchg
push
jne
jae
xchg
xchg
sarl
and
fwait
lahf
hlt
push
cmp
inc
in
pop
adc
cmpsl
cld
xlat
fcoms
mov
clc
mov
subps
es
mov
mov
popf
xchg
lods
jo
xchg
dec
fisubl
pop
ret
loope
mov
xchg
loop
in
pop
or
out
sub
lods
or
jl
das
int3
jno
addr16
shl
pop
aad
mov
push
mov
xchg
loopne
or
daa
stc
das
add
mov
in
jnp
test
mov
call
mov
mov
ror
pop
dec
adc
loope
aaa
jp
neg
gs
dec
dec
sbb
jecxz
fnsave
xchg
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
repnz
and
cmpsl
int3
jo
and
jo
or
inc
in
xchg
and
adc
jl
bnd
rclb
arpl
insb
ret
xchg
addr16
sbb
cmp
add
faddl
hlt
stos
jl,pn
aas
or
sbb
dec
cmpb
cmpsb
fcmovnbe
int
cs
pop
idiv
cld
push
lods
and
or
sub
cmpsl
sahf
mov
xchg
dec
adc
jle
dec
jmp
cmc
stos
push
call
lret
or
ss
pop
and
adc
push
jmp
mov
add
or
stos
and
add
fs
aas
addr16
add
cltd
mov
std
dec
mov
imul
and
cmp
adc
arpl
mov
insb
fldcw
rorb
lds
xor
cmp
pop
ret
addr16
dec
into
mov
fbstp
dec
add
mov
mov
add
loop
icebp
aad
js
jbe
cmc
adc
les
cmp
dec
jbe
add
push
ret
xchg
cmpsl
push
push
int
and
dec
lcall
sti
push
seto
test
cmpsb
mov
pop
and
dec
mov
scas
add
negb
fs
or
ds
test
pop
mov
pop
cli
cmp
lds
fbld
movsl
subb
cs
jle
pop
or
jge
fiadds
in
lds
push
scas
pop
dec
pop
jo
fsubl
jnp
icebp
xlat
pop
loop
fdivl
push
push
mov
jno
lds
in
adc
or
arpl
xchg
cmp
add
xchg
mov
xor
push
jo
lcall
mov
cmc
jb
inc
jge,pt
cmp
arpl
sti
mov
mov
in
pop
dec
or
mov
mov
pop
sti
jne
jge
or
xchg
xchg
popf
sbb
ja
test
and
pusha
sub
cltd
outsb
test
pop
loope
loope
mov
mov
adc
negb
sub
sbb
cmp
stc
jp
or
repnz
into
in
mov
es
mov
or
sbb
sub
mov
inc
adc
jle
pusha
mov
pop
es
jno
into
inc
or
inc
xorl
push
push
add
and
push
das
or
dec
dec
lcall
inc
mov
sti
jnp
or
int3
ja
rcrl
jno
popf
sbb
nop
ror
subl
jle
cwtl
cmp
cmp
sbb
push
xor
push
mov
mov
xor
cld
mov
fildll
repz
imul
rcrl
test
out
aaa
jg
jns
mov
adc
or
xchg
in
gs
jno
sub
lahf
inc
lcall
and
gs
test
jno
jle
jns
cmp
int
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
lock
leave
jo
and
jo
pusha
dec
rolb
mov
sbb
cmp
xorb
mov
bound
pusha
aaa
std
aaa
enter
lock
xor
outsb
xlat
out
mov
repnz
ja
lret
es
mov
add
xor
cmpsl
or
jne
cmp
or
xchg
fidivrs
xchg
test
sbb
mov
jge
in
in
sbb
ja
aam
mov
mov
xor
mov
das
push
and
ss
pop
es
or
stos
mov
rcll
xorb
push
pop
jbe
fnsave
jmp
xchg
shr
sar
mov
call
xchg
push
xchg
scas
pop
dec
pop
jno
lds
hlt
test
dec
mov
ja
adc
pushf
add
out
mov
pop
roll
iret
mov
bswap
insb
test
mov
inc
stc
mov
lcall
mov
jnp
outsb
insl
or
or
mov
sbb
cwtl
enter
mov
mov
lret
fadd
mov
pop
out
xlat
test
sub
jns
movsl
fstpt
loop
jge
int3
inc
sbb
cmpsl
adc
stc
aas
mov
sub
sub
call
jmp
mov
lahf
cmp
dec
or
pop
ss
jb
cs
icebp
jno
call
in
aad
scas
aaa
pop
xchg
aad
aas
aas
fcoml
stc
movsb
aad
cmp
mov
ret
mov
push
imul
aam
cmpsb
cmp
mov
loopne
and
sub
mov
ss
daa
aaa
or
js
shll
xor
add
add
pop
adc
rclb
fs
imul
leave
lds
repnz
fmuls
jg
pop
popf
xor
test
iret
aad
lds
fimull
cltd
or
or
popf
jno
add
sbb
rcrb
sbb
pop
push
popa
pop
sub
mov
sahf
jmp
lods
outsl
jno
int
pop
insb
in
push
gs
dec
pop
shll
leave
and
sbb
movsb
data16
leave
sbb
xchg
or
pushf
mull
mov
or
cmp
scas
jle
cli
dec
dec
es
push
cmp
xchg
movb
mov
cwtl
mov
test
mov
rcl
push
ret
repnz
fidivrs
es
in
mov
inc
sbb
dec
mov
bnd
xor
inc
mov
cmp
jne
loope
lods
cld
sub
test
push
push
xchg
mov
sbb
cmpsb
aas
inc
loopne
jbe
pop
mov
outsb
mov
sbb
cmp
aam
mov
aam
mov
stc
mov
cmp
xor
cmc
mov
sarb
in
cmp
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
aam
xor
jo
jge
jo
mov
jo
aas
or
and
xchg
xchg
sub
int3
imul
cmp
or
xchg
xchg
mov
or
jecxz
sbb
adc
inc
xor
sbbb
jb
pop
sbb
hlt
rorl
xor
cwtl
mov
or
xor
mov
shrb
mov
lods
or
decl
adc
outsb
jbe
fdiv
out
jo
jg
ljmp
pop
ljmp
or
mov
sub
cmp
fadds
push
scas
faddl
xlat
aaa
sbb
mov
xchg
fildl
sbb
inc
jg
xchg
in
inc
lret
cmp
and
imul
in
cmp
loop
scas
cmp
ss
mov
lds
into
and
jg
or
xchg
sbb
xchg
sbb
dec
jp
addr16
loop
push
adc
push
lcall
inc
scas
pop
or
cmp
pop
in
add
ja
jnp
dec
sar
sbb
inc
or
repnz
pop
and
adc
loopne
xor
xchg
inc
insb
mov
adc
mov
pusha
ja
and
push
stos
or
stc
sub
mov
adc
ljmp
jno
sbb
dec
xchg
sbb
mov
fucomi
jns
out
mov
outsl
cld
pop
adc
and
pop
xchg
mov
std
lods
mov
add
lds
shl
enter
jo
lds
fcomps
pop
xchg
inc
shld
xchg
sub
jmp
and
outsl
adc
pushf
sbb
movd
fchs
mov
in
ret
adc
mov
pop
pop
xor
das
ja
rcrb
cmp
adc
in
out
push
repz
loop
mov
fsub
mov
cmp
sub
push
and
inc
pop
sti
jb
push
xor
or
shll
scas
icebp
mov
mov
shl
insl
jecxz
movsb
mov
pop
scas
rclb
stc
inc
jg
xor
mov
loop
inc
jo
data16
add
push
test
mov
popf
fists
in
fs
xorb
sub
or
sub
adc
jg
data16
out
dec
ret
adc
jg
pushf
mov
hlt
inc
frstor
sub
rcrl
jmp
dec
popw
mov
test
cwtl
mov
arpl
or
test
scas
dec
int
inc
jbe
cmp
ret
mov
mov
mov
mov
sub
sahf
jo
and
popf
rcl
mov
mov
lcall
pusha
mov
xor
aam
mov
hlt
push
jl
jb
mov
and
sbb
popa
jbe
xor
or
sbb
mov
push
xor
add
mov
xchg
jl
inc
int
cmpl
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
nop
pop
ja
shlb
and
jo
stc
cmovge
xchg
xor
ljmp
xor
dec
movsb
js
out
ja
sbb
pop
sub
mov
test
bnd
and
jnp
mov
popa
pop
jg
jo
mov
jmp
lds
das
sbb
inc
outsb
mov
ljmp
nop
in
lcall
add
and
or
xor
inc
mov
xchg
adc
jmp
xchg
or
mov
imul
xchg
aaa
lods
cltd
lret
sbbl
addr16
aaa
dec
mov
add
push
adc
nop
scas
or
out
jbe
cmp
fsubrp
popf
lock
inc
jg
imul
pop
nop
in
int3
push
gs
shl
out
scas
pop
shlb
setns
cwtl
inc
lret
leave
push
xchg
sahf
mov
lcall
push
mov
jge
pop
jmp
jle
movl
ljmp
or
xlat
jnp
into
cmpsl
rorb
jg
orb
mov
es
sti
inc
sbb
aad
mov
or
ret
add
sub
pop
jmp
daa
xlat
mov
aad
inc
icebp
out
call
lods
js
mov
and
dec
fwait
addr16
xchg
addr16
sub
xor
hlt
and
mov
dec
shlb
addl
sbb
jae
xchg
inc
in
stos
push
lds
push
in
int3
xor
cmp
sbb
mov
rorb
mov
adc
sub
icebp
stc
jle
mov
mov
sahf
outsl
std
lea
dec
into
jae
inc
jnp
push
lods
push
cmpsl
fisttpll
mov
dec
roll
into
cmc
hlt
ret
push
std
dec
int
xor
mov
adc
and
das
or
xchg
int3
push
testl
outsb
push
movsl
jmp
xchg
ljmp
cmp
xlat
cs
out
inc
mov
xor
dec
out
push
cltd
ficomps
lcall
and
mov
pop
orl
dec
dec
insl
movsb
or
sti
inc
xor
xor
sub
aas
push
or
lcall
dec
mov
stos
jp
or
push
push
mov
incl
sub
mov
xchg
or
pop
fsubrl
jecxz
and
pop
or
pop
mov
sbbl
xchg
cmp
lret
in
and
pop
insl
add
mov
fsubp
scas
cmpsl
pop
jb
xlat
mov
xor
xchg
adc
pop
fistl
in
rol
cmp
and
lret
sbb
xchg
loop
outsl
cli
aaa
sbb
notl
pop
cmp
lea
test
sbb
adc
adc
mov
stc
xor
loop
sub
adc
rorb
iret
and
dec
mov
dec
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
sub
pushl
mov
mov
adc
cmp
enter
mov
aas
es
dec
xchg
lcall
pop
mov
aam
imul
xchg
cmp
jnp
mov
mov
mov
aam
inc
loopne
xor
jns
pop
sub
jb
adc
sbbl
arpl
mov
cmpsb
mov
adc
std
not
mov
dec
rcll
xlat
jmp
iret
push
lods
sbbl
stc
lcall
inc
cld
bound
movsl
mov
cmp
push
jge
pop
dec
mov
push
and
cli
mov
jnp
jecxz
in
daa
popf
jno
mov
inc
call
rorl
cltd
aad
imull
cmpsl
or
inc
push
xor
dec
andl
jecxz
movsb
decb
shl
ret
push
mov
out
dec
arpl
mov
pop
cli
mov
iret
das
xchg
inc
cltd
xchg
xor
sbb
adcb
mov
mov
cltd
out
cli
js
das
cmpsl
inc
shrb
into
jl
std
pop
xchg
pop
and
aam
jp
aad
lds
sub
roll
addr16
jecxz
xchg
jecxz
push
pop
add
add
sbbl
decb
leave
inc
icebp
push
jb
mov
xchg
xchg
inc
sub
push
es
or
add
and
push
jmp
cltd
arpl
push
fildll
sbb
and
loopne
cmp
mov
cmpb
aad
jns
into
dec
mov
xor
fs
adc
pop
cltd
mov
cmp
adc
lea
cmpsb
mov
lds
and
inc
test
aad
fdivr
adc
push
in
clc
lock
in
jecxz
lods
mov
jmp
out
adc
sub
push
out
mov
inc
lock
fwait
lahf
hlt
lahf
add
or
cli
mov
cli
pushf
mov
add
pop
repnz
cmpb
inc
lahf
adc
xor
pop
dec
lea
scas
xchg
pop
out
cmp
lds
inc
das
int
test
ljmp
aas
push
jg
adcb
lret
inc
aad
jmp
fwait
pusha
inc
cmp
loop
dec
mov
sti
or
test
or
mov
mov
icebp
xchg
lock
test
cmp
mov
ret
daa
scas
imul
lds
push
pop
jo
add
xor
stos
scas
adc
bound
mov
ret
push
ficomps
fprem
stos
add
sbb
jo
rol
mov
inc
xchg
or
jnp
imul
iret
sub
test
or
es
sbb
ss
ljmp
pop
mov
mov
jno
xchg
lea
out
inc
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
push
jo
and
jo
jmp
xchg
lcall
js
fnstcw
lret
adc
subl
lret
xor
fiadds
sti
sbb
pop
mov
loopne
add
rcrl
xchg
ljmp
testb
push
jl
cltd
loop
mov
cwtl
iret
push
into
mov
mov
push
addr16
fildll
out
aas
inc
cmpsl
jno
xchg
loopne
lea
shrl
push
aaa
jb
pop
bound
fmuls
mov
mov
and
push
std
sub
insb
push
adc
add
cmp
sub
pop
mov
dec
ret
test
pop
xor
dec
add
xchg
stos
addr16
adc
xchg
in
mov
sbbb
xor
mov
dec
cmpsl
and
iret
add
ss
rclb
push
adc
add
cli
pop
fldcw
lcall
mov
jge
enter
aam
iret
inc
in
scas
fbld
out
aad
jmp
hlt
mov
ficomps
xor
mov
jecxz
inc
pop
lds
and
sahf
cmp
pop
arpl
sub
lret
push
mull
sub
push
pushf
icebp
pop
push
add
mov
adc
add
cld
popl
std
mov
sbb
add
cltd
inc
das
cmp
lods
mov
jo
pop
out
scas
stc
sbb
fcmovnb
mov
scas
or
aaa
loopne
xchg
fwait
or
cmp
mov
dec
mov
das
jb
mov
mov
xchg
fimull
test
repnz
js
ror
inc
push
out
add
sub
push
adcl
mov
lock
out
push
int
lock
test
insl
xor
push
push
push
sbb
jl
sbb
je
push
inc
pop
shrl
mov
add
nop
out
push
inc
addr16
dec
mov
loopne
mov
mov
rcll
loop
jb
and
lret
sub
stos
and
or
outsb
fwait
xor
mov
ret
insl
adc
ficomps
fldcw
or
sub
push
sub
sbb
mov
inc
stc
adc
mov
into
xchg
xor
les
or
mov
inc
adc
push
packssdw
pop
push
icebp
fnsave
push
idivb
sub
je
test
movsl
add
jg
aaa
adc
popf
jno
pop
ret
dec
and
dec
jecxz
jno
jae
loope
mov
sub
cs
negb
lea
mov
movsl
sub
mov
aad
cwtl
mull
sub
cs
dec
call
jbe
iret
shlb
mov
sbb
add
aad
and
push
aas
int3
jnp
rolb
in
push
add
xchg
sub
test
cmpsb
cmc
push
jbe
pop
or
aam
jmp
lret
xlat
or
mov
sar
or
jne
mov
mov
pushl
lea
jmp
mov
push
mov
ficoms
test
jo
and
jo
or
out
inc
push
inc
lods
xor
xor
cmp
jns
xchg
sarl
es
fsubl
aaa
sub
push
scas
aam
arpl
push
mov
and
ja
and
push
fucompp
loope
and
test
fcoms
jp
mov
test
xchg
clc
dec
gs
xchg
stc
sarb
sbb
stos
dec
add
inc
js
mov
sub
sarl
sbb
and
and
jb
shll
rclb
or
jp
inc
and
xchg
adc
or
or
dec
xchg
dec
pop
sbb
push
xchg
lret
mov
test
mov
cmp
mov
fcoms
sbb
mov
xlat
imul
mov
fldt
sub
leave
std
xlat
push
dec
test
movsb
push
mov
insl
ror
movsl
adc
cmpsl
das
repnz
lcall
popf
sub
mov
jecxz
and
lahf
mov
dec
push
sbb
mov
sub
inc
mov
sbb
fdivs
mov
lock
mull
sbb
into
push
stos
ficompl
jp
mov
daa
jecxz
rcr
popf
in
aaa
sbb
fistps
ds
call
sbb
adc
fdivrl
test
add
xor
incl
xchg
pop
add
xchg
out
fadds
inc
dec
or
jle
test
das
mov
je
adc
js
ud2
jmp
into
pop
inc
fldl
cld
decb
xchg
addb
mov
mov
inc
je
or
movntq
out
ds
push
lods
push
mov
mov
cmpsl
mov
cmpsl
fisubs
das
ja
jae
popa
cmpsl
xlat
sbb
gs
imul
mov
je
add
stos
push
out
ret
push
push
test
mov
dec
rol
sub
jmp
in
push
out
pop
push
dec
shlb
sbb
xchg
in
mov
xchg
xchg
xchg
ja
push
jae
ja
mov
push
test
or
pop
bound
or
cmpsb
pop
add
cmc
dec
and
inc
mov
dec
pop
ret
xchg
mov
cmpsl
push
sbb
or
loop
add
xor
std
mov
cmp
sub
ror
inc
loop
fstps
shl
cwtl
add
mov
lret
pop
jmp
aam
mov
aad
out
movl
sbbl
push
mov
in
dec
lods
and
jg
adc
jne
sub
insl
xor
sbb
add
call
cmp
mov
sub
icebp
lahf
out
adc
clc
adc
jp
out
pusha
or
dec
scas
adc
int3
pushl
lea
jmp
add
out
out
xor
call
dec
dec
sub
out
jo
jge
jo
mov
popf
imul
insb
inc
mov
scas
dec
push
nop
jmp
cmp
sub
pop
jl
cwtl
inc
push
pop
ja
mov
xor
or
dec
inc
dec
insl
adc
call
mov
xor
add
inc
call
pop
testl
or
mov
ss
dec
ret
pushf
ret
mov
or
test
arpl
add
dec
movsb
das
jno
rcll
adc
mov
and
sub
mov
dec
pop
add
out
sub
int
adc
imul
std
mov
jno
ret
js
xor
inc
pop
cmpsl
lea
out
call
clc
push
cmp
push
sub
int
push
call
dec
lods
insb
or
ret
or
das
dec
int
testb
loop
pusha
inc
xor
push
jp
lret
jge
xor
ljmp
xchg
lcall
or
sub
mov
ss
aad
insb
push
subl
lods
mov
or
pop
add
and
daa
decb
lahf
jmp
cwtl
mov
dec
mov
mov
push
cld
jle
jae
movsl
inc
loope
dec
sbbl
xchg
fucomp
add
rcr
pushf
jnp
jmp
loopne
cld
xlat
mov
mov
sbb
insb
mov
das
ds
ljmp
gs
je
mov
mov
popf
lahf
and
loopne
cmp
adc
cmpsl
jbe
repnz
xor
mov
mulb
cwtl
jo
stos
pop
jl
loop
pop
ljmp
xchg
scas
mov
push
xchg
mov
shl
inc
mov
outsl
xchg
jmp
sub
pop
sbb
jnp
ficoml
fwait
mov
lods
jecxz
in
adc
popf
xlat
es
jb
adc
jg
ja
mov
xor
sahf
cmp
insl
inc
pop
push
pop
cmp
mov
addl
leave
adc
popf
iret
clc
jge
inc
xchg
sti
and
scas
roll
push
test
rcll
inc
mov
stc
xchg
sti
lds
lret
mov
hlt
scas
mov
xor
jmp
out
loope
mov
mov
ficoml
mov
cld
jne
push
pop
mov
or
in
fwait
aam
add
sbb
lret
adc
popa
inc
movsb
cmp
enter
inc
cmp
lcall
insl
mov
shl
xor
add
and
mov
xor
imulb
lahf
outsl
bound
mulb
out
fucom
sbb
out
bound
test
or
xchg
sub
ret
adc
or
dec
sbb
icebp
popf
ljmp
es
sbb
int3
movsb
cltd
cmc
and
test
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
lahf
das
pop
lret
jo
and
jo
pop
inc
xchg
aad
pusha
sub
lahf
mov
mov
dec
in
mov
pop
idivb
and
xor
std
idiv
cmp
cltd
xchg
leave
jecxz
test
lods
imul
push
mov
xor
jmp
icebp
sub
cltd
or
mov
gs
jecxz
andl
insl
lret
cmpsb
cmp
mov
sub
bound
stos
mov
mov
scas
lods
in
mov
icebp
mov
lods
mov
stc
adc
jbe
sub
xchg
out
or
xor
pop
jg
jae
shll
rcl
icebp
mov
and
jecxz
pop
inc
xor
outsb
pushf
sbb
jp
dec
inc
add
cmpsb
xor
repz
mov
adc
lods
in
mov
in
xchg
popa
xchg
jge
jbe
pop
mov
jecxz
xor
xchg
jb
in
dec
das
cmc
fs
xchg
mov
or
das
cmpsb
cmp
dec
cmc
popw
decl
mov
cmp
adc
faddl
push
repnz
push
push
adc
jg
xor
pop
outsb
stc
sub
imul
scas
pop
mov
push
pushf
fldcw
jo
mov
dec
and
jl
cmpsb
out
dec
cmp
mov
fwait
data16
ss
lds
pop
fstps
jnp
call
inc
aas
pop
loop
ljmp
dec
lods
rolb
mov
inc
rol
insb
enter
lcall
xchg
pushf
test
test
xchg
rcr
sub
sub
mov
adc
fildl
or
ljmp
push
cvttps2pi
ljmp
stos
outsl
arpl
mov
or
jbe
test
frstor
insb
outsb
push
shlb
movsb
inc
push
cltd
add
sbb
sbb
outsl
enter
fimull
add
imull
cltd
lret
adc
fistpll
lahf
and
int
push
jg
or
clc
push
inc
bnd
add
mov
sub
xchg
imul
into
lock
push
fwait
add
frstor
mov
xchg
filds
sbb
ds
test
inc
enter
pop
push
outsb
mov
pop
push
lods
icebp
popf
sub
sbb
hlt
xchg
sbb
fidivl
ja
mov
inc
jnp
data16
push
int3
into
insb
movsl
jmp
cltd
and
sub
adc
jns
jecxz
std
pop
cmp
sub
push
add
shrb
lds
xor
subb
mov
pop
pop
fcompl
lea
xor
scas
fdivrl
jmp
ficompl
ss
jns
add
xchg
mov
xor
xchg
mov
pop
ljmp
sub
and
push
add
and
inc
add
dec
add
add
mov
ja
add
xchg
out
xlat
out
jo
and
jo
enter
add
xor
push
mov
dec
or
andb
xchg
fldenv
ja
and
popl
shlb
out
mov
adc
fists
jg
xchg
sbb
into
mov
repnz
mov
outsl
sarb
add
ficoms
call
and
adc
ds
iret
dec
mov
sub
pop
xchg
mov
fbld
fstpl
mov
mov
pop
addb
xchg
cld
jmp
cmp
leave
shrb
lods
in
pop
cmp
cli
popl
pop
getsec
cli
adc
xor
nop
inc
hlt
daa
popf
jns
int3
pop
sub
addr16
jno
pop
ret
mov
ds
mov
jne
push
sahf
imul
pop
push
mov
cli
test
jns
std
push
xchg
jg
xchg
cmp
or
push
mov
xchg
mov
fstp
bound
call
mov
cmp
add
and
ja
les
and
inc
shr
xchg
lock
scas
push
xor
test
adc
movsb
loopne
aas
mov
push
test
push
fistpll
mov
loop
dec
cmp
mov
cld
lock
cmp
cwtl
pop
inc
or
jo
out
and
xor
jge
insb
jae
or
adc
fldenv
stos
addl
jge
fs
jb
mov
mov
xchg
daa
cmp
mov
mov
sub
xlat
or
mov
mov
push
cmp
nop
xchg
insl
jl
and
into
sub
cmp
insl
or
pop
jle
dec
cld
xor
lret
hlt
xlat
xor
rorb
js
js
xor
lret
lret
mov
hlt
dec
leave
std
inc
movsb
sarl
popl
das
cwtl
add
cs
sbb
cmp
push
mov
loope
dec
sbb
and
sub
lock
jb
popf
sub
outsl
and
sub
stos
rorl
ss
stos
popa
sbb
pop
add
add
aad
out
sbb
adc
jle
mov
cmp
pop
sbb
std
insb
in
xlat
xchg
pop
hlt
nop
jnp
stos
and
fnstsw
dec
fucomi
xchg
add
and
cmpb
lret
out
add
cmp
outsl
mov
cmp
ja
sub
sbb
and
aaa
cltd
push
dec
pop
sahf
xchg
cmp
push
adc
aaa
shlb
shlb
mov
inc
ss
jg
lea
push
mov
sahf
mov
cmpl
push
mov
jmp
mov
inc
icebp
repz
xchg
lcall
aam
xchg
dec
inc
lock
in
inc
sbb
or
mov
mov
cld
pop
ret
jp
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
idivl
push
or
xchg
jo
lahf
jge
jo
push
xchg
out
xor
jns
jle
int
inc
mov
pop
mov
or
jp
in
jno
jg
jge
sti
hlt
push
adc
push
mov
out
and
sub
jge
aam
mov
adc
adc
daa
sbb
jecxz
jo
or
xchg
subb
adc
imul
cmp
dec
pop
or
pop
push
pop
dec
testl
repnz
jg
addl
xchg
mov
jo
add
ret
pop
lahf
bound
imul
jbe
add
lods
and
outsl
jae
aam
jecxz
xor
or
xor
flds
lret
pop
sub
push
arpl
fstps
or
cmpsb
dec
sub
cmp
outsb
cld
lcall
or
adc
ja
cmp
sbb
gs
and
sbb
ficompl
cmp
lods
inc
jmp
mov
dec
add
mov
repz
cld
lahf
and
adc
jae
aad
mov
or
and
pop
je
pop
sbb
mov
lea
add
sub
cs
imul
inc
jp
fs
push
dec
test
call
cmc
sub
loop
add
out
mov
cmpsl
rep
lods
cwtl
lret
sub
xchg
repnz
jg
popl
push
and
xchg
imul
in
inc
push
pop
in
shrb
jno
or
sbb
dec
jle
sbb
add
int3
jge
or
lcall
arpl
sahf
cmp
ljmp
xlat
mov
icebp
cmp
inc
pop
test
xchg
cltd
jp
daa
pop
push
push
mov
inc
out
cli
xor
jge
mov
das
inc
pop
notl
xchg
shll
movsb
adc
and
das
and
aad
pop
cmp
xlat
dec
jg
sbb
pop
and
adc
mov
nop
adcl
repz
add
sub
mov
or
in
cmovl
or
into
lcall
mov
sbb
and
addl
mov
out
inc
inc
mov
jecxz
stos
pop
push
rclb
test
pop
mov
lods
lock
xor
pop
mov
adc
and
scas
mov
out
adc
xor
sbb
xlat
outsb
mov
jl
cmp
xchg
dec
cmp
pop
dec
mov
mov
and
js
in
dec
cmc
iret
sub
cltd
push
and
sbb
lock
sub
decb
cwtl
icebp
sbb
adc
cmp
mov
cmc
repnz
icebp
rorb
ja
xor
sub
xor
xchg
add
push
push
dec
adc
outsl
jl
addl
in
mov
pop
push
xor
jg,pn
mov
aaa
inc
cmp
jbe
pop
push
pop
adc
dec
pop
pop
in
dec
filds
insb
neg
bnd
mov
push
or
lea
pop
dec
pop
in
stos
pop
cmc
bound
cmp
fwait
push
andl
stc
rcll
cld
xchg
shll
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
insb
mov
es
jo
loop
dec
jnp
mov
in
add
aam
push
in
mov
das
mov
mov
mov
cmp
cs
cmp
inc
sahf
add
in
popa
iret
sarl
shlb
mov
out
cmc
mov
jp
adc
pop
lret
xchg
ror
xor
imul
add
pop
in
jbe
clc
push
setae
popf
xor
xchg
loop,pt
jbe
jnp
mov
movl
repz
fmuls
popf
lods
sub
xorb
add
cmp
pcmpeqd
in
xchg
nop
xor
or
cmp
adc
lea
stos
cmpl
ds
add
sbb
mov
testl
push
out
mov
push
and
js
cli
mov
xchg
movsl
imul
bound
aad
jg
cmp
mov
cli
mov
addr16
out
dec
pop
pop
fmuls
add
and
addr16
out
ret
cmp
xorl
stos
inc
mov
cmc
xchg
or
xchg
cs
negb
roll
dec
push
sub
push
mov
fcompl
inc
pop
insb
xor
jp
adcl
jbe
mov
push
xor
popf
or
frstor
mov
fimull
lcall
nop
sbb
dec
loope
add
inc
jmp
sbb
inc
adc
xchg
sub
lods
std
shrl
xor
in
jmp
fwait
setbe
push
mov
mov
add
dec
das
sub
sbb
mov
inc
repz
cmc
lds
xor
bound
jae
lret
sti
test
stos
or
sub
jo
roll
mov
popf
pop
imul
add
push
rorb
into
mov
int
xlat
mov
jl
or
mov
std
stc
xlat
loope
xor
nop
adc
cmp
xchg
and
test
lcall
movsb
mov
pop
push
pushf
adc
mov
jmp
mov
test
test
cmp
or
sub
fstl
jp
movsb
out
xchg
ja
adc
sbb
xor
repz
idiv
jne
push
stc
ljmp
push
je
jge
dec
pop
imul
mov
out
enter
add
nop
add
or
sub
fbstp
jnp
aad
in
bound
int3
int
cmp
loope
scas
testb
inc
xchg
dec
and
out
sbb
push
push
pop
and
popf
std
testb
aaa
flds
dec
lcall
outsl
fcmovnu
jbe
loop
lock
mov
aaa
cld
lds
pop
mov
daa
cmp
push
xchg
jecxz
push
test
nop
fsubrl
pop
popl
pop
cltd
push
mov
mov
push
sub
test
and
insl
mov
aaa
adc
insb
pop
xchg
shrb
aaa
pop
bound
xchg
sbb
lock
das
push
push
adcb
insb
lahf
loope
je
dec
xchg
mov
mov
dec
push
enter
mov
or
add
hlt
mov
test
or
test
adcl
mov
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
mov
cmc
jo
lahf
jge
jo
push
in
pop
pop
aam
jp
shrb
mov
sub
jp
jno
push
cmpsl
pusha
mov
in
clc
and
loopne
mov
cs
fnsave
pop
test
sub
lea
pop
fs
andb
shlb
push
mov
bound
push
add
xor
jbe
je
dec
push
cmp
nop
adc
inc
shll
nop
jno
push
push
mov
popf
adc
sbb
adc
add
sahf
adc
adc
pop
cmpsb
mov
cmpl
clc
mov
fidivrs
bound
mov
mov
inc
inc
inc
cwtl
mov
adc
push
scas
mov
cld
gs
add
mov
cli
hlt
jge
push
inc
outsl
xor
mov
xchg
loop
insb
or
xchg
mov
mov
movsb
jmp
call
sub
aam
pop
jge
pop
mov
mov
sbb
dec
int
daa
or
sbb
hlt
ljmp
mov
icebp
xchg
popa
out
dec
xchg
and
sub
daa
mov
adc
jnp
es
nop
in
mov
mov
mov
xor
repz
fidivs
xlat
lea
mov
in
mov
decb
fcomps
aas
mov
icebp
addl
mov
pop
sub
lea
rcrl
movsb
outsl
or
push
push
sub
int3
das
movsb
fldcw
dec
int3
in
faddl
push
inc
sbb
and
mov
dec
les
leave
dec
movsl
inc
pop
sbb
adc
imul
cmp
pop
shlb
jp
shrl
mov
adc
repz
shl
pop
jnp
in
aaa
and
cmp
scas
dec
cli
inc
out
xor
movl
xchg
lahf
roll
sub
out
cmp
rolb
xor
jns
sahf
jl
aad
lcall
or
pop
mov
ret
or
xchg
gs
and
jns
jne
ss
mov
mov
xchg
push
stc
sbb
addr16
test
mov
test
push
dec
mov
sub
or
addr16
push
inc
jl
jmp
push
add
or
adc
fs
lods
xchg
aaa
int
lahf
inc
mov
xchg
int3
sbb
sub
pop
cmpsb
xchg
negb
adc
or
push
cltd
dec
insl
lods
loop
push
mov
push
push
outsb
cmpsb
test
add
add
xchg
cmp
xchg
lret
test
add
arpl
push
jno
cwtl
iret
cmp
xchg
adc
cmp
or
fwait
or
sbb
sub
lock
repnz
mov
shll
push
fistl
test
outsb
movsl
or
pop
mov
lahf
pop
lret
inc
mov
sbb
sbb
divl
xor
mov
das
shrl
fcoml
push
and
sbb
xor
sbb
pusha
mov
rclb
aas
xor
call
mov
sub
xor
xlat
ret
data16
adc
sub
jmp
sbb
pop
push
in
call
lcall
mov
scas
jl
inc
test
sbb
xor
mov
or
xchg
inc
cmp
hlt
out
xchg
jg
add
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
push
sbb
in
jo
lahf
jge
jo
jae
les
sbb
jae
popa
sti
sub
shll
add
add
or
out
push
out
imul
cmp
xchg
gs
es
sub
mov
push
mov
pop
jmp
mov
or
sub
mov
pop
outsb
loop
or
push
mov
push
cmp
lea
adc
or
pop
in
adc
je
popa
adc
test
scas
rcll
jl
cmp
loop
lret
xor
lods
sub
stos
dec
call
and
pushf
das
mov
dec
push
imul
lods
addl
sub
cmp
sub
push
xchg
sbb
jge
xor
in
lret
and
aas
sub
popf
xchg
mov
dec
fcomp
jle
jmp
add
sbb
inc
aaa
int3
add
xchg
call
sub
in
inc
sbb
mov
mov
or
les
mov
movb
sbb
inc
sti
xchg
sarb
mov
fdivl
add
jecxz
pushf
jecxz
test
xor
into
cmp
andl
add
xchg
xchg
jae
fiadds
icebp
mov
lcall
in
lods
sub
nop
push
adc
imul
cmp
mov
dec
and
xor
xor
push
dec
out
call
xchg
push
cmp
pop
mov
and
inc
pop
xorb
ds
int3
cmc
lcall
xorb
xor
cmpsl
dec
sbb
fldenv
nop
jmp
subl
addr16
es
js
stos
sub
outsb
mov
dec
in
cmp
inc
xchg
push
xchg
push
add
sbb
in
jl
ss
add
stc
fldenv
shrb
and
outsb
scas
or
aas
add
dec
mov
push
clc
push
addr16
sbb
scas
mov
inc
mov
inc
shlb
jge
mov
dec
enter
inc
adcl
pop
mov
fdivr
add
imul
les
pop
movsl
xchg
sub
les
stc
jns
enter
outsl
and
jns
or
sti
and
insl
pop
pop
test
leave
aaa
aaa
aam
push
call
inc
nop
inc
and
int3
add
fucomp
cwtl
ret
add
out
pop
xchg
jbe
add
push
pop
and
push
stos
imul
adc
or
test
jmp
adc
xchg
add
mov
popf
sub
int3
hlt
sbb
mov
fiadds
int3
xchg
inc
pop
je
test
adc
fmuls
in
lret
ret
scas
sub
push
popf
ljmp
mov
adc
push
adc
push
sahf
push
repnz
sahf
xchg
adc
xor
mov
adc
xor
popf
cmpsl
scas
push
lock
aam
or
fs
ret
sbb
xor
cmp
or
fdivrs
popf
imul
push
jns
lods
xchg
mov
scas
and
shrb
out
dec
xchg
jle
iret
and
add
insl
push
mov
cmc
sub
or
dec
xor
or
dec
inc
xchg
and
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
xor
add
jo
lahf
jge
jo
xchg
enter
sub
lock
pop
jg
sbb
pop
clc
je
shl
lret
xor
mov
cltd
sbb
testb
stos
imull
and
es
adc
dec
mov
pop
pusha
out
mov
adc
int3
insb
pop
mov
test
jnp
sbb
stc
sub
int
jne
out
inc
and
mov
sbb
pop
xchg
pop
sbb
lahf
lea
test
scas
dec
inc
int3
or
out
sub
mov
xchg
shrb
divb
jp
xchg
dec
xor
movntq
std
lret
cltd
movsb
movsl
mov
xchg
pop
mov
push
mov
js
xor
int
outsb
dec
push
test
sar
jns
es
and
stc
push
imul
push
mov
xor
cmp
push
sub
pop
pop
flds
loopne
or
add
mov
sbb
add
sub
ja
cs
inc
nop
icebp
mov
mov
test
lret
mov
add
jecxz
out
lahf
sbbl
inc
dec
xchg
les
in
add
or
fildl
lea
xchg
loope
ret
mov
stc
jecxz
stos
test
mov
adc
sbb
mov
inc
pop
jle
xor
loopne
dec
clc
mov
xchg
push
pushf
es
nop
dec
fadds
sti
xchg
cwtl
ds
data16
int3
mov
loopne
je
jns
push
mov
aaa
in
lahf
jbe
mov
notb
dec
sub
lahf
xchg
cmpsl
pop
pop
cmp
cmpsl
add
pop
dec
repnz
xchg
int
cmpl
push
mov
lds
dec
sub
cmp
sub
icebp
divb
mov
cwtl
repz
fmuls
rcll
lds
loope
call
cmp
scas
sbb
hlt
xchg
pushf
xor
daa
and
pop
icebp
push
in
sub
and
and
push
test
mov
js
cmc
ss
hlt
js
nop
jmp
les
insb
add
cwtl
fmull
add
add
scas
test
outsl
js
jmp
sbb
adcb
pop
ret
push
call
mov
pop
repz
push
rcll
fsubr
cltd
hlt
not
pop
in
mov
aad
daa
jmp
insl
jl
sub
cmpsl
xchg
insb
sub
adc
add
lds
out
mov
test
and
int3
inc
or
inc
scas
es
jecxz
in
xchg
call
mov
add
loope
jecxz
cmc
rcrl
xor
insl
add
es
loopne
sub
int3
test
pop
movsl
lds
push
cld
cmp
addb
test
andb
push
scas
shll
xor
xor
xchg
add
cmp
add
repnz
pushf
fidivrs
and
jg
lea
sti
cmp
fidivl
orl
addb
jl
insl
pop
sub
insb
add
mov
jno
ja
push
out
push
je
xchg
arpl
add
pop
lret
xor
or
loop
pop
or
mov
add
jmp
shlb
sub
lret
jae
or
mov
jge
jo
scas
insl
sbb
sbb
in
jnp
xlat
mov
sti
rcll
fisubs
inc
mov
lret
cmp
stos
push
cmpsb
push
lods
xchg
sub
mov
or
xchg
pop
enter
sub
in
scas
mov
or
sub
and
xlat
pop
xor
inc
jl
sub
lds
out
and
mov
in
inc
push
fsubrl
jno
rcll
push
mov
and
lret
jp
pop
inc
add
jmp
pop
in
in
addr16
arpl
mov
notl
repnz
mov
adc
mov
cmp
sub
fnstcw
xor
cmc
jecxz
mov
mov
mov
mov
inc
cltd
xor
add
sbb
push
jbe
andb
das
add
add
add
cmp
test
jmp
inc
mov
lahf
sahf
test
lds
jb,pt
jb
sbb
jp
add
fnstenv
or
xchg
add
or
or
inc
mull
push
push
out
pop
sahf
cmpsl
jmp
scas
lods
rcrl
gs
int
les
sbb
and
shl
out
pop
stos
pop
cmpsl
test
mov
mov
or
aaa
and
inc
fdivs
js
sub
fs
in
data16
dec
jecxz
jmp
push
popf
das
xchg
jb
fiadds
dec
outsl
out
xchg
add
dec
sti
mov
in
xchg
adc
leave
jb
and
xor
adc
mov
inc
fwait
cmp
fs
pop
sub
mov
add
push
cmp
sar
push
pop
sbb
movl
and
enter
and
cmp
jge
push
vpxor
push
test
cmc
mov
pushf
jne
ret
sbb
jne
testb
and
aas
and
pop
pop
cmp
repz
dec
pop
dec
dec
paddq
inc
in
sbb
cmpsb
jnp
iret
fidivl
mov
pushf
test
movsb
dec
in
bound
mov
aas
push
enter
ss
pushf
xchg
std
rcll
mov
and
clc
xlat
or
cmp
dec
jg
orb
add
cli
test
dec
fidivs
sbb
jae
mov
dec
movb
js
sub
rorl
mov
stc
shlb
je
adc
and
lds
bound
andl
push
mov
outsl
push
mov
pop
test
or
push
adc
inc
insb
dec
in
jp
xchg
cmp
push
sbb
stos
xchg
in
mov
test
add
sub
cmpsl
mov
js
jae
out
dec
xlat
pop
cs
mov
stos
jmp
icebp
adc
dec
push
int
pop
adc
adc
pop
xchg
jl
lahf
inc
pop
aas
iret
ja
xchg
xor
pop
das
pmullw
mov
sub
in
cmp
ror
lcall
xor
mov
jno
lcall
iret
jl
loopne
cltd
rolb
adc
insl
test
std
add
inc
or
push
jbe
int
lcall
cwtl
dec
push
mov
pop
pop
in
pop
pop
pop
shrb
movsl
ss
aaa
sbb
divb
pop
ss
rorl
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
aam
jno
roll
jo
add
nop
mov
test
xchg
data16
fisubrl
pop
dec
or
rorb
daa
cmp
mov
push
fsubrs
insb
inc
insb
cmp
aaa
xor
test
gs
push
addr16
pop
push
jecxz
jl
sarb
in
add
nop
addb
mov
fs
lods
cmpsl
inc
das
push
cmp
loopne
fdivl
adc
pop
movsb
inc
xchg
jmp
xlat
jns
popa
xchg
pop
adc
cmc
sub
call
mov
inc
or
cmp
xchg
or
imul
and
dec
dec
mov
fsubs
popa
push
mov
jge
cmpsb
sbbl
rcll
mov
mov
call
sub
pushf
test
mov
orl
mov
ret
adc
or
test
jne
cld
mov
popf
call
das
pop
jecxz
mov
sbb
insl
inc
mov
in
add
mov
leave
std
dec
and
lock
enter
fstpl
out
ljmp
xchg
push
dec
cmpsb
push
xor
call
cmc
pop
cmpsl
lret
cmp
loop
imul
mov
cmp
add
out
xchg
int3
push
push
shl
mov
imul
inc
xchg
sahf
jb
or
mov
mov
ds
movsl
or
or
push
push
scas
sub
xchg
or
and
dec
fnop
es
sbb
mov
push
gs
inc
int
mov
testl
ss
ljmp
lods
ja
stc
push
movsl
mov
loopne
shl
mov
popf
lret
push
mov
lods
ss
mov
shr
sub
in
inc
mov
adc
aaa
push
and
aad
faddl
adcl
mov
iret
ja
push
mov
push
xor
int3
mov
dec
insb
bnd
stos
sbb
fcoms
xchg
icebp
jbe
icebp
cs
lods
mov
addr16
adc
sbb
mov
aaa
in
or
insl
push
dec
ds
subb
ret
cld
iret
mov
cld
cs
ficompl
or
pop
sti
or
sub
js
pop
lahf
adc
mov
test
sub
or
es
outsl
add
push
not
mov
xor
jge
push
sahf
jnp
out
imul
lahf
ljmp
jge
mov
je
and
negl
daa
test
das
or
sahf
lods
test
imull
ja
imul
mov
fsub
jo
movsb
sti
xlat
add
push
mov
xchg
ss
sbbl
pop
fldl
movsl
jecxz
psrad
int3
test
push
scas
test
adc
arpl
inc
dec
sbb
add
cltd
jns
scas
add
sub
pop
adc
pop
stc
sub
aas
shrb
xchg
int
jecxz
pop
pop
add
mov
xor
adc
daa
fsubs
jae
push
mov
cli
cs
dec
fdivrl
inc
push
jmp
cmpsl
jge
sti
pop
lods
mov
mov
add
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
out
pusha
xorl
jge
jo
ja
add
pop
aam
fisubrl
loop
mov
ljmp
ret
push
aam
mov
add
aad
popf
frstor
outsl
xor
push
xor
pop
lret
cmpb
xchg
xorl
jb
pop
add
stc
push
pushf
cwtl
push
sbbb
xlat
xchg
mov
call
inc
adc
out
les
mov
pop
pop
mov
inc
pushf
sbb
cmp
mov
sub
out
fs
jae
add
insl
test
cmc
fdivr
xlat
jns
pop
shlb
es
or
xorb
xchg
cmc
adc
jnp
je
pop
ljmp
mov
test
or
fs
pop
clc
aas
je
inc
pop
xorl
xchg
xor
ljmp
jmp
sahf
mov
mov
jp
adc
cltd
xchg
mov
xchg
sbb
cli
mov
sti
iret
cmovo
aaa
xor
out
inc
iret
ret
loope
mov
jb
mov
add
mov
jp
orl
jecxz
jo
es
cmpsb
dec
xor
cmpsb
cmpsl
cmp
dec
shl
repnz
out
add
nop
xchg
inc
ja
mov
ljmp
in
pop
lea
xor
jmp
jne
dec
or
sub
iret
add
imulb
pushf
sbb
mov
or
adc
adc
cld
sub
insl
shrb
sub
ret
cmp
fwait
arpl
mov
add
or
mov
inc
xor
inc
cwtl
pop
jl
mov
sbb
lods
jae
pop
xlat
test
ja
add
pop
jbe
out
test
mov
cmp
cmp
ret
and
iret
stc
std
xchg
pusha
aad
xchg
test
stos
push
roll
mov
jns
fucom
aam
jl
or
sub
mov
mov
add
dec
and
aad
cmpsl
push
push
mov
outsl
jnp
test
fdivl
adc
lods
mov
testl
movsb
mov
in
or
xor
push
mov
inc
push
sbb
dec
daa
shl
addr16
lods
sbb
test
test
sahf
int
test
mov
rorl
ja
outsl
sub
jno
jbe
xchg
div
aaa
mov
or
cmp
test
jecxz
or
ja
xor
cld
leave
push
cmc
xor
jge
inc
push
mov
xchg
clc
sbb
ret
aaa
mov
sub
jnp,pt
mov
dec
ss
xor
orl
jg
and
xor
stos
xchg
lret
sbb
jns
je
pop
int3
ds
push
clc
stc
xchg
mov
loop
jg
add
push
add
jns
sbb
mov
sbb
shlb
push
and
push
or
aam
cmp
movsl
jb
mov
mov
sub
shll
pop
addr16
sub
nop
pop
xor
push
sti
repnz
mov
push
sarb
and
repz
and
addr16
in
xchg
cmp
adc
inc
jne
lret
stos
mov
ret
sbbb
pop
jle
add
movsb
mov
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
iret
ds
jo
lahf
jge
jo
lret
fistl
mov
or
fstl
jae
push
mov
ret
inc
rolb
sbb
push
je
aas
jecxz
or
xchg
xchg
push
inc
xor
fxch
test
sbb
sbb
cmp
jbe
mov
pop
cwtl
jns
push
and
inc
lahf
fstpt
fstl
arpl
adc
dec
push
stos
mov
outsl
ljmp
ret
add
lods
rorl
fistps
cld
and
adc
fwait
stos
mov
lock
imul
cmp
sub
mov
ja
push
push
pop
sub
push
dec
add
aas
jns
insl
das
imul
in
andb
lods
sti
adc
and
dec
adc
push
lea
inc
in
xchg
mov
pop
xor
jmp
movsb
pop
in
insb
jno
adc
pop
mov
inc
nop
test
or
lret
push
dec
jnp
xlat
call
movsb
loope
cmp
hlt
cmc
in
fiadds
mov
lods
jb
flds
or
enter
xor
mov
insl
mov
push
stos
or
rcr
cltd
jl
cli
jb
jne
pusha
std
mov
pushf
mov
loopne
test
mov
inc
and
ljmp
mov
push
and
in
push
jno
fldt
cmp
mov
xchg
jge
rcrl
roll
mov
mov
xchg
and
movsb
add
popa
ret
push
jg
test
iret
and
andb
pop
jecxz
lret
out
mov
push
xor
adc
sti
dec
repnz
insb
inc
mov
mov
mov
push
ret
sbb
std
mov
aas
adc
pop
mov
mov
inc
in
xchg
cmpxchg
int
dec
dec
pop
paddusw
mov
xor
cmp
aam
pop
psraw
insl
mov
rolb
testl
cmp
fldcw
jb
push
stc
sbb
push
idivb
rcr
repnz
ja
add
in
mov
push
rclb
inc
rep
sahf
ja
xor
std
cmpl
js
pop
dec
les
pop
ret
aas
mov
sbb
js
mov
cmpsb
mov
mov
lods
in
push
das
cmpl
cwtl
js
outsl
add
cmp
jmp
and
arpl
sub
pop
add
jae
jle
stos
add
ja
xchg
mov
push
sbb
hlt
stos
xchg
mov
xor
out
sbb
fistpll
bound
and
jp
subb
push
aad
cltd
movsl
adc
push
jge
push
push
dec
adc
lods
adc
insl
ficoml
bound
das
lods
rcrb
or
or
dec
fisubrl
adc
or
out
sbb
and
rcrl
loopne
imul
loope
sub
xlat
bound
fmulp
cmpsl
sbb
add
xor
sbb
and
insb
sahf
and
sub
inc
xchg
mov
mov
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
dec
mov
lahf
jge
jo
fwait
dec
icebp
rol
mov
xchg
subl
pusha
hlt
mov
movsb
mov
jo
push
sti
arpl
test
xchg
adc
or
xchg
mov
or
xor
xor
stos
xchg
shll
push
push
cmp
cmp
mov
push
sub
xor
sub
mov
and
jge
sub
das
hlt
xor
xor
sub
push
inc
sub
mov
sti
or
pop
xor
test
mov
stos
leave
adc
cs
xlat
std
jne
shl
inc
pop
cpuid
adc
push
add
jbe
daa
pop
xchg
ret
pop
jge
inc
les
or
and
pop
and
jg
cmpb
test
mov
stos
mov
sbb
pop
jnp
ret
fcompl
push
ja
shl
add
dec
arpl
ret
add
dec
imul
add
dec
scas
mov
push
dec
mov
test
push
std
add
xchg
and
add
fwait
imul
es
sub
push
stc
add
pop
in
mov
in
sub
loopne
push
cmp
scas
scas
inc
cmp
lcall
jge
cli
cmp
jnp
pop
mov
loopne
adc
test
cld
pop
or
dec
icebp
dec
push
sahf
stos
mov
nop
push
xor
or
push
jbe
mov
add
jo
popl
jnp
inc
outsb
jb
cmpsb
mov
sbb
sbb
pop
loopne
das
and
in
fists
adc
inc
insl
imul
mov
mov
push
cmp
cmpsl
mov
fwait
sbb
dec
sbb
mov
jge
push
movsb
inc
ljmp
insl
cli
sub
repz
and
push
fmuls
fsubrs
xorb
jno
and
loopne
ljmp
icebp
or
or
fwait
ljmp
and
adc
fcomps
addr16
cltd
push
sahf
cmpsb
adcb
inc
xor
xchg
mov
dec
xor
or
mov
push
push
xor
jo
mov
aaa
aam
into
loopne
loope
arpl
mov
mov
imul
mov
inc
cmpsl
xchg
aaa
fst
mov
sbb
xchg
fwait
lods
xchg
jmp
lret
loop
orb
jne
push
out
xchg
mov
push
imul
leave
test
xor
out
push
dec
test
fidivrl
and
jne
push
inc
insl
popa
jge
xchg
ret
int
pop
or
add
pop
insb
loopne
mov
sti
das
inc
or
push
sarb
sbb
pop
std
cmpsb
mov
mov
enter
scas
bound
sbb
xchg
popa
pusha
dec
lret
bound
dec
clc
inc
adc
cmp
add
push
ret
outsb
mov
popf
push
push
call
les
loopne
arpl
ror
ror
in
sub
cmp
icebp
aad
shlb
inc
sbb
test
cmpb
test
in
arpl
mov
cld
push
adc
sbb
xchg
adc
xor
pop
pop
sti
dec
jbe
leave
insl
pop
jae
rcrl
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
lds
mov
lahf
jge
jo
and
cvttps2pi
int3
jg
mov
insb
stos
sarb
cmpb
or
cmp
jne
inc
sub
es
add
addr16
mov
fdivrs
and
pop
adcl
dec
cld
push
mov
mov
adcb
adc
jge
scas
dec
insl
lds
popf
and
scas
dec
rorb
lret
std
out
mov
lahf
mov
popa
push
insl
and
jp
xchg
inc
ficoml
pop
ret
adc
or
lods
in
mov
ret
and
xchg
fistpl
mov
les
mov
popf
push
push
aas
mov
inc
ja
repnz
xor
outsb
pop
xchg
movsl
jb
dec
pop
jl
push
add
pop
pop
pop
pop
sbb
imul
int
fucomip
ja,pt
je
pop
outsl
rcrl
mov
stos
shlb
jg
pop
dec
movsl
call
lcall
fs
ds
or
add
cmp
out
pop
and
inc
iret
dec
push
hlt
cmp
out
or
add
sbb
dec
jecxz
push
out
xchg
imulb
fmuls
push
jae
sbb
add
in
mov
sub
pop
sbb
inc
fadd
sub
cltd
arpl
push
shl
fdivrs
dec
pop
ljmp
cltd
lods
jo
aaa
sbb
xchg
push
cmp
call
cmp
pop
xchg
sub
or
inc
inc
adc
in
and
mov
addr16
shll
or
stos
mov
test
enter
xchg
pop
xor
sbb
mov
and
sarl
cmpsb
mov
add
or
xor
adc
push
xchg
std
popf
mov
gs
daa
and
inc
sub
in
xor
jmp
fnsave
pop
aam
xchg
repz
fidivrs
adc
dec
icebp
inc
mov
mov
mov
mov
pop
mov
inc
negl
out
xor
push
push
in
out
or
lods
lock
jg
inc
ljmp
fs
push
xor
js
xor
push
jg
sti
inc
lahf
push
xchg
out
push
jle
xchg
pminsw
mov
xor
jbe
mov
mov
rorl
push
xchg
pop
loop
hlt
or
push
fsubp
arpl
mov
and
shlb
jp
fnsave
into
inc
sar
sub
nop
outsl
and
loopne
fucomip
cmpsl
cmpsb
sbbb
pop
subl
shrb
mov
cltd
call
pop
sub
adc
mov
into
push
mov
mov
mov
hlt
mov
cmp
sub
test
leave
sub
pusha
mov
dec
push
rorb
imul
pop
jmp
dec
add
fists
stc
loop
stos
jle
xchg
jae
imul
inc
andl
push
mov
popa
clc
jecxz
pop
cmp
cmpsb
sub
lret
mov
jae
sub
mov
loope
in
lods
in
out
inc
ja
push
mov
pop
xchg
add
push
bswap
jmp
push
repz
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
int3
cltd
mov
jo
jge
jo
shlb
jmp
sti
pop
negb
das
js
lods
idiv
inc
adc
out
cs
fisubs
repnz
push
and
jae
insb
and
fs
leave
cmp
imull
sub
dec
and
stos
shrl
cld
aas
imul
cmp
inc
mov
enter
fs
jae
pop
ficoms
pusha
fistl
in
fisubs
in
dec
pop
test
divb
and
stc
mov
cld
mov
ljmp
lcall
jmp
xchg
dec
sbbl
and
ret
adc
push
dec
out
push
nop
in
je
mov
dec
jle
jg
push
pop
xlat
pop
test
jle
lcall
addr16
divb
push
ret
int3
mov
stc
cmp
scas
mov
cltd
mov
pop
dec
add
jecxz
push
fistps
pop
loopne
jecxz
in
mov
or
fnstenv
in
std
lock
inc
test
stos
into
inc
add
cmp
daa
or
imul
pop
pop
rol
xor
mov
fwait
pop
dec
add
adc
inc
ffreep
push
mov
cmp
and
fs
jnp
test
jge
mov
push
cmp
lea
or
sub
flds
stc
movb
sub
leave
aad
push
push
or
in
jmp
outsb
mov
mov
mov
rcl
into
test
dec
int
repnz
push
ficoml
xchg
in
mov
jecxz
negb
xchg
aam
sahf
movsb
pop
add
dec
pusha
insl
in
int3
cltd
dec
mov
es
scas
iret
cltd
jo
adc
inc
dec
insb
lahf
loopne
lahf
vmwrite
mov
xlat
add
mov
dec
mov
aas
das
mov
call
cld
xor
fwait
insl
mov
mov
sub
xor
outsl
stos
adc
inc
rclb
pop
push
sub
fs
xchg
fdivrs
scas
cmp
imul
xor
mov
mov
sub
or
jge
ret
xor
scas
sti
cltd
mov
clc
sbb
je
mov
dec
mov
stos
out
sbbb
movsl
push
mov
pop
loop
cmp
rcrl
inc
sub
fs
clc
mov
pop
jo
push
xor
jmp
fnstsw
test
pop
push
outsl
mov
add
adc
stos
or
dec
add
je
sti
movsl
outsl
mov
xor
fnstenv
outsb
push
repnz
out
inc
mov
jg
lds
jl
int3
enter
and
push
sbb
sub
jo
ret
repz
nop
fcom
arpl
inc
insl
ljmp
stos
cmp
and
lahf
lods
test
add
push
rol
outsb
xchg
loopne
lock
stos
fldt
adc
jb
dec
cmp
jb
aaa
shrb
push
rclb
push
mov
fcomi
xchg
pop
jno
addr16
bound
mov
cli
mov
dec
mov
adc
fimuls
pop
stc
ror
or
cmp
push
pop
mov
push
clc
xchg
xchg
dec
cs
test
cmc
mov
mov
pop
xor
daa
lret
mov
aad
mov
clc
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
adc
add
lahf
jge
jo
mov
in
ds
pusha
mov
ret
mov
add
pop
inc
push
nop
in
mov
and
cld
insl
pushf
cmpsb
jnp
xchg
stos
ds
add
mov
mov
xchg
jns
add
add
ja
in
xlat
jle
push
es
dec
jns
fs
nop
jno
push
rol
or
xchg
loop
pop
push
or
jecxz
pop
test
repz
pop
dec
xchg
sub
mov
int
ja
push
dec
or
lds
cs
dec
mov
fwait
sub
pop
cld
mov
sub
mov
shrl
test
lret
shll
cmp
dec
push
push
mov
ja
in
inc
shrb
cmp
cmp
mov
aaa
xor
ja
in
add
sub
out
jbe
push
out
in
loopne
hlt
pop
lret
insl
jge
pop
scas
pusha
mov
pop
mov
outsb
cmp
lock
fwait
pop
sub
aaa
push
ret
std
sbb
push
push
fists
shlb
lock
adc
push
das
rclb
nop
dec
xchg
inc
aad
rolb
test
sub
xor
inc
and
cmp
es
repnz
rorb
lea
les
or
and
outsb
mov
jo
mov
je
add
pop
fadds
pop
addr16
pop
add
sub
iret
mov
jo
loopne
pop
out
loop
sbb
xor
jno
lods
mov
call
mov
outsb
jns
lds
data16
jg
mov
out
jae
adc
xor
push
add
push
sub
aad
cmp
js
ficomps
sbbl
sub
gs
mov
fadd
sub
out
inc
fcmovbe
xor
into
xchg
insl
mov
dec
push
hlt
mov
xchg
xlat
cmp
mov
mov
les
lods
sbb
or
dec
xor
cmc
xlat
arpl
cltd
xor
sub
xchg
add
lds
inc
loopne
subb
xor
xor
mov
outsl
xchg
fidivrs
notl
clc
loop
adc
popa
repnz
and
call
outsb
add
aad
dec
sti
clc
push
xor
shlb
jmp
cmp
lods
xlat
js
dec
test
push
repz
dec
rol
call
pusha
pusha
arpl
pop
outsb
scas
int3
lcall
jnp
outsl
mov
daa
iret
call
insl
nop
mov
insl
and
lahf
ss
adc
adc
rorl
mov
mov
push
rcl
out
iret
neg
or
mov
std
sub
sahf
lds
jge
pop
xchg
push
hlt
mov
lcall
outsb
jl
shrb
iret
push
sub
movsb
cmp
jp
push
lahf
push
or
xor
nop
subl
repnz
ja
add
mov
pushf
cmpsb
add
ret
or
filds
scas
and
jne
and
in
gs
popf
xor
loope
cmp
les
test
ds
adc
std
dec
lea
mov
lea
popf
xor
inc
inc
mov
addb
adc
and
cli
push
xchg
lret
jl
std
cwtl
jecxz
js
and
aas
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
cli
dec
lock
lahf
jge
jo
filds
jecxz
popf
mov
push
rcr
cmp
packsswb
sar
into
imull
mov
inc
repz
popa
pop
jl
mov
out
lahf
jo
insb
cld
clc
call
xor
ss
fsubrl
or
or
push
dec
lds
addl
and
cmp
jp
jmp
add
ds
cld
loope
iret
mov
push
repnz
jmp
idivb
xchg
lock
lods
inc
cmc
xchg
lds
inc
adc
add
lret
in
mov
push
outsl
negl
fcomi
mov
repz
xchg
movsb
clc
and
sub
pop
outsl
icebp
mov
in
mov
out
push
mov
mov
and
xchg
mov
aas
jb
inc
data16
sbb
pushf
pop
in
outsb
pusha
mov
or
je
popf
mov
jle
inc
std
inc
add
es
or
inc
jb
stos
stc
movsl
inc
mov
xor
shll
jnp
stc
bound
mov
adc
frstor
mov
int3
xor
or
sbb
cmp
roll
sbb
outsl
pop
les
sahf
pop
leave
or
orl
mov
lea
lock
dec
mov
movb
lret
in
out
pusha
iret
js
cmpl
jnp
loope
sbb
inc
out
in
test
fistl
inc
xchg
push
icebp
push
js
sub
add
and
fimull
adcb
push
dec
out
mov
add
adc
pop
imul
aam
xchg
cmp
push
int3
mov
jp
and
imul
pop
push
jb
pop
sbb
lds
inc
sbb
xchg
inc
mov
in
out
dec
imul
rorb
push
nop
mov
stos
cmp
lds
mov
inc
rcl
jne
mov
xchg
cltd
and
out
js
pop
mov
dec
jnp
lret
cmp
and
lahf
lds
push
and
test
notl
sarl
mov
clc
loopne
in
push
fisttps
nop
mov
and
enter
leave
xlat
ret
sar
aad
or
jbe
push
sub
xchg
test
or
xchg
lret
in
push
lods
roll
sbb
xor
add
inc
lret
push
hlt
mov
inc
sbb
or
dec
mov
cmp
add
pop
shlb
cmpsl
cltd
nop
or
idivb
dec
ss
cmc
gs
jnp
sub
fcom
in
jne
sbb
sbb
xor
sarl
imul
int
inc
addr16
jno
xchg
mov
mov
sahf
outsl
jg
xchg
xor
mov
jg
push
pop
mov
dec
andb
cli
sbb
les
sbb
inc
jle
pop
mov
loope
cmp
mov
imul
sbb
sub
sbb
sahf
mov
and
aas
not
sbb
add
adc
std
bound
mov
aas
daa
and
imul
shr
cld
cld
push
mov
or
stc
inc
xchg
xlat
add
pop
in
ret
cli
mov
mov
cmpsb
decb
scas
mov
clc
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
mov
dec
leave
cltd
jo
lahf
jge
jo
mov
pop
fdivp
das
mov
mov
stos
pop
hlt
arpl
in
cmc
cmp
pop
aad
lret
jb
cmpsl
movsl
fwait
loope
mov
or
mov
adc
xor
inc
adc
mov
ljmp
mov
mov
sub
and
mov
outsb
jge
dec
xchg
and
mov
ss
leave
loopne
mov
push
sahf
in
cwtl
cwtl
cmp
mov
fdivs
je
pop
xchg
sub
xchg
sub
push
and
mov
jb
lcall
push
xchg
mov
xchg
ret
mov
mov
or
fdiv
mov
and
sub
inc
adcl
inc
bound
ljmp
outsb
out
xor
pop
xlat
scas
cmp
jns
fwait
sub
addr16
es
or
lds
in
fs
mov
test
ja
inc
and
shr
jp
sbb
sti
inc
inc
mov
out
xchg
ret
push
leave
sub
add
xor
scas
jno
insb
daa
pop
lods
push
movsb
adc
mov
test
sub
xchg
adc
js
and
test
aaa
or
push
add
dec
sarb
aaa
xor
mov
andl
pop
insb
mov
iret
paddd
adc
lock
scas
scas
pusha
movl
mov
cmpsb
mov
in
out
pop
cmp
sbb
pop
sbb
or
sub
mov
icebp
fs
pop
jb
xchg
push
out
dec
imul
jle
add
test
push
xchg
xchg
fdivrl
in
mov
xor
bound
jmp
out
mov
push
push
jne
cmpsb
xor
sti
push
jl
and
push
dec
dec
push
adc
add
adc
xchg
mov
aaa
mull
pushf
cmp
sbb
mov
aad
mov
lcall
mov
dec
pop
mov
das
aad
cmpsb
dec
push
shrl
xor
mov
pop
rclb
dec
scas
test
pop
and
jo
test
and
xor
rcr
pop
ret
mov
faddl
shlb
leave
arpl
rcl
loop
imul
lret
adc
pop
fwait
push
clc
into
jmp
dec
jmp
notl
and
xor
dec
testb
jl
js
aam
jge
or
jp
or
enter
lret
sahf
fisttpll
in
enter
aaa
inc
movsl
jmp
xor
xor
stos
imul
sbb
and
cltd
lahf
or
sbb
addb
ja
fldcw
push
add
mov
xor
pop
dec
mov
out
loopne
or
or
pusha
loope
push
add
loopne
dec
rcl
out
daa
stc
jge
push
lods
test
test
pop
cmp
call
inc
add
js
iret
fistpl
pop
rcrl
stos
cmp
psrlq
xor
imul
pop
xor
popa
jns
xor
insl
lahf
sti
ds
add
push
xor
jecxz
add
std
pop
dec
aas
ljmp
insl
daa
push
jbe
push
adc
shr
lock
call
pop
int3
jne
mov
addl
dec
and
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
sub
push
jg
jo
ficompl
popl
cs
sbb
xor
ret
es
add
sub
push
dec
inc
sbb
imul
movsb
push
xchg
mov
sbb
loopne
ljmp
shll
jg
xor
mov
push
push
push
dec
outsb
mov
mov
xchg
pop
cmp
cmpsl
push
daa
shll
jge
fcomi
icebp
cs
repz
cmp
inc
pop
int
vxorps
and
xchg
fstp
rolb
lods
inc
add
jmp
addr16
icebp
mov
fwait
xor
pusha
cmpsb
jae
inc
rclb
or
lret
jg
rcl
adc
out
cmp
push
out
mov
ljmp
dec
sub
sub
in
in
iret
addr16
and
out
pop
or
popa
cmp
xor
sahf
imul
mov
mov
test
inc
add
sahf
mov
mov
shl
mov
add
sub
xor
fistpl
dec
xor
fidivl
stos
cmpxchg8b
subb
in
aad
fwait
mov
xor
jb
add
std
cld
inc
add
add
add
add
or
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
fstpl
jo
ret
jg
jo
das
pop
out
push
shl
sub
pop
int3
inc
cmp
mov
jle
out
pop
xor
movsb
cmp
movd
xchg
dec
xor
cmp
arpl
ss
pusha
mov
fisttpl
cltd
mov
ret
push
lock
fcmovbe
jl
scas
push
inc
jp
movl
lods
mov
mov
or
mov
cs
lock
xchg
ljmp
pop
js
pop
stc
mov
pop
or
dec
into
fs
call
ret
mov
push
push
aaa
lahf
fs
ds
stos
mov
test
add
or
sar
sbb
orl
xlat
in
cld
rol
adc
xchg
popa
outsl
sub
insb
roll
imul
and
rorb
pop
xchg
in
dec
pop
bound
je
in
imul
and
add
or
push
insb
out
das
jnp
iret
movsb
and
ds
xor
outsb
gs
lahf
out
dec
scas
sub
popa
xlat
and
mov
int
mov
push
int
fwait
cmc
push
pop
test
adc
sbb
cli
lods
repnz
cmp
bnd
adc
cmpsb
xor
dec
out
std
sbbb
pop
inc
movl
and
lea
mov
jmp
rorl
sbb
sbb
ret
jg
jo
lock
outsl
sbb
sbb
jb
mov
jl
cmc
inc
lods
dec
int3
xor
mov
leave
shrb
mov
inc
ljmp
in
fsts
push
dec
sub
mov
push
or
repz
daa
and
cltd
mov
pop
sbbb
daa
xor
loope
push
jle
jae
movsb
push
jmp
rcrl
mov
add
ret
adc
aad
xchg
movsb
adc
ljmp
in
sbb
imul
dec
mov
mov
cmp
sbb
ja
or
out
inc
push
in
and
idivl
jb
mov
loopne
mov
xor
lahf
mov
mov
jmp
sbb
fistpll
pop
imulb
or
and
xor
movsl
jne
ficoml
lods
imul
pop
xchg
jne
inc
pop
dec
dec
jae
mov
ret
pop
out
scas
xchg
fidivs
add
movsb
jge
xchg
xlat
pop
fsubs
or
dec
outsb
fyl2x
cmp
cmpsl
out
dec
cmp
cmp
stos
imul
pop
mov
ljmp
xchg
cmc
cmp
or
aaa
movsl
push
popa
xchg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
fldl
jo
ret
jg
jo
nop
ds
mov
lds
and
pop
pslld
cmpsb
mov
cwtl
xchg
mov
and
ljmp
flds
in
xchg
pushf
jmp
add
shll
pop
negl
jns
sbb
xor
imul
pusha
xchg
and
aam
sti
adc
in
scas
pop
lods
mov
iret
mov
dec
cltd
cs
jnp
mov
and
jp
lret
iret
cs
jp
or
sub
pop
inc
cltd
aam
ret
imulb
shll
or
cmp
or
cmpsl
cld
jl
jecxz
add
cmp
sub
stos
mov
dec
out
mov
sbb
sbb
cmc
sub
popa
push
inc
or
test
jg
sahf
imul
cmp
jnp
ret
xlat
or
xchg
sbb
add
lds
aaa
lods
cmc
inc
jmp
aas
jnp
mov
adc
jnp
mov
arpl
bound
shrb
inc
lods
jo
jnp
fdivrs
adc
mov
repnz
inc
out
pushf
jmp
cmpb
ds
das
xor
add
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
cmp
pop
and
jo
ret
jg
jo
fwait
push
decl
xchg
int3
add
pop
pop
cmp
and
and
push
jne
mov
adc
mov
push
cli
or
jne
push
roll
or
popa
xchg
shll
lret
addl
sarb
jno
cmp
push
mov
es
stos
pop
cwtl
lods
add
faddl
mov
shl
push
sbb
xchg
dec
es
sub
sti
movb
pop
imul
add
cmp
fnsave
or
sti
mov
dec
jp
lcall
push
sub
jmp
jl
sbb
adc
mov
ret
int
notb
dec
imul
mov
sbb
mov
lahf
push
repz
iret
mov
mov
addr16
lcall
sub
mov
sub
loop
mov
or
repnz
mov
xor
out
add
ljmp
xchg
add
mov
cltd
pop
dec
sub
jmp
pop
mov
push
or
jno
add
mov
rorl
cli
inc
les
test
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
sub
sahf
imull
jo
jl
decb
mov
imul
sub
popa
pop
jno
dec
clc
xchg
add
push
pop
clc
popa
ret
cmpsl
mov
inc
pushf
cmc
aas
jg
lahf
xor
loopne
sub
sbb
addl
sar
jo
nop
sub
push
in
and
mov
xadd
into
cli
inc
xchg
insl
insl
xchg
xchg
xchg
mov
mov
sbb
adc
sub
test
xor
loope
icebp
imul
loopne
push
push
add
or
int
and
repz
xchg
clc
mov
push
add
cmp
mov
std
pop
into
jno
mov
sbbl
mov
test
lds
xchg
push
aad
inc
neg
xchg
js
dec
mov
outsl
mov
divb
lds
ljmp
mov
in
mov
sti
cltd
out
ja
mov
and
or
pop
cld
mov
cmpsb
orl
xor
push
loop
pop
xchg
xor
push
jge
xchg
ds
inc
push
and
mov
xor
lret
mov
adc
mov
jge
mov
dec
flds
add
fisubl
sbb
fidivrs
rorl
cld
jmp
movntps
push
rep
mov
push
jle
or
jo
jg
jo
fstp
mov
bound
sahf
outsl
fidivrs
and
cmp
hlt
dec
in
mov
xchg
mov
jb
push
xchg
cltd
mov
push
inc
dec
mov
fdiv
fwait
ror
pop
add
dec
pop
lds
cmp
pop
jle
das
aam
adc
das
fnstenv
loop
sbb
pusha
xor
imul
sub
lds
xlat
fs
std
mov
xor
notb
divl
cld
mov
std
sbb
test
xor
repz
and
int3
shrb
or
mov
mov
jae
inc
int
jecxz
movsl
jmp
scas
xlat
xchg
inc
mulb
testl
rcr
jp
rol
cmp
or
negb
mov
pop
pop
aas
daa
jns
rcll
sbb
inc
inc
jns
push
int3
adc
cmp
xchg
shll
cs
pop
mulb
rorb
fwait
in
sub
pop
xchg
and
mov
inc
aaa
or
mov
push
lret
cmp
daa
popa
cmp
clc
dec
in
pop
mov
jmp
pushf
and
mov
ja
mov
sub
out
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
adc
pop
or
jg
jo
js
out
mov
xor
mov
cmp
sti
sub
mov
scas
ss
dec
or
jp
cmp
cmp
sbb
jno
rcrb
jb
insl
adc
sbbl
xor
je
in
mov
mov
inc
pop
push
je
jnp
sub
inc
mov
mov
outsb
int3
in
inc
xor
xchg
jmp
fsts
stos
mov
pop
sub
outsl
ljmp
adc
fidivl
jecxz
xor
push
dec
xchg
in
call
push
push
inc
mov
or
push
sbb
icebp
push
lahf
xor
push
cmp
pop
push
in
cmpsl
pop
pop
xchg
dec
call
cmp
sbb
push
push
cmpsl
fadds
test
and
push
and
xchg
dec
fwait
xchg
cmp
cs
cmp
jle
cmp
and
daa
inc
cld
mov
test
sbb
aad
add
push
pop
iret
in
out
xchg
std
les
aas
mov
cwtl
out
dec
in
cmpsl
loopne
xchg
mov
push
negb
insb
je
pop
in
sti
xor
aas
fisubrs
das
inc
mov
mov
fisubrs
fwait
mov
cmp
and
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
pusha
xchg
shrb
jo
rclb
add
mov
clc
lret
hlt
test
jno
enter
pushf
insb
cli
push
dec
mov
into
xchg
test
and
insl
out
jp
sub
sbb
mov
mov
xor
mov
pusha
aad
stc
imul
into
ljmp
int
jns
das
push
mov
sub
push
repz
sti
inc
jg
or
sub
jb
inc
pop
push
scas
and
xor
cmp
in
ret
inc
shl
mov
clc
jp
daa
movsl
and
jecxz
add
sti
lret
xchg
cmpsl
jo
pop
test
rcl
sub
out
clc
or
push
push
or
rcll
cmc
adc
push
sub
add
lret
push
xchg
frndint
mov
xor
testb
cmpsl
fists
xor
dec
adc
and
int3
jecxz
ss
xchg
leave
sub
dec
aas
and
test
idivl
adc
jbe
push
push
or
sbb
and
lret
xlat
add
jp
add
push
fisubl
rclb
in
sub
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
push
jo
jg
jo
stc
add
loope
inc
shll
shll
leave
mov
inc
or
jmp
pop
test
lds
outsb
loope
pop
cmp
in
fidivrs
or
jb
int3
sahf
pop
mov
pop
push
addr16
fidivrl
call
int3
mov
sub
aad
fcmovb
pusha
lds
sahf
adc
out
inc
ret
test
adc
mov
push
cmp
xchg
popa
flds
push
aaa
xchg
nop
adc
adc
dec
lcall
das
ss
clc
clc
insb
dec
pop
and
and
aad
mov
insl
aaa
dec
add
lock
and
adc
lcall
xchg
xchg
pop
xor
and
fdivrs
pop
pop
push
mov
in
mov
pop
lret
mov
or
sub
add
mov
lcall
inc
negb
pop
lret
pop
cli
add
xlat
hlt
icebp
cmpsl
shlb
or
cmp
movsb
or
inc
in
outsb
mov
bound
sub
test
imul
aad
stos
lea
and
add
in
add
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rclb
test
jo
insl
add
stos
add
sahf
pop
into
xchg
push
xchg
mov
xchg
cmc
push
sbb
mov
adc
fdivs
outsl
ljmp
mov
movsb
cmp
jl,pt
add
xchg
and
adc
pop
in
insb
dec
sub
cmp
sbb
ret
aad
sub
test
nop
dec
test
int
stos
mov
or
jmp
dec
cli
jno
insl
ja
jns
cmp
orl
pushf
cmpsl
inc
jmp
mov
mov
fwait
pushf
lea
add
pop
push
subb
push
inc
roll
outsb
je
cs
imul
mov
mov
inc
lahf
adc
sub
test
dec
mov
lret
stos
push
popl
inc
lods
test
jae
ror
pop
rol
sbb
cmp
int
jle
inc
xor
fistps
jnp
cmpsb
dec
cmp
js
adc
aad
jmp
lahf
jo
add
repnz
inc
push
dec
leave
xchg
xchg
in
mov
pop
sub
mov
mov
nop
jb
sub
push
addr16
jl
mov
lods
scas
pushf
data16
inc
clc
jmp
inc
gs
icebp
imul
add
cmp
jo
inc
fsub
sub
gs
loop
adc
cmp
xchg
or
xor
inc
cmp
and
stc
popf
repnz
xchg
dec
jae
jno
pusha
dec
adc
mov
fnstcw
add
mov
mov
sahf
jp
and
sbbl
ret
xor
stc
int3
cmc
cld
xorb
mov
and
rolb
repz
cld
adc
mov
add
cmp
dec
fnstcw
sahf
aam
pop
mov
jg
add
out
cmp
bound
sbb
ret
jns
xor
push
or
jl
fucomp
aam
jmp
jbe
xchg
and
pop
mov
mov
cmpb
in
adc
stos
dec
dec
push
sbb
ljmp
mov
add
out
stos
xor
jmp
rsqrtps
pushf
movsb
nop
out
cmc
pop
mov
and
jno
sbb
fmul
inc
push
das
lcall
dec
sbb
push
mov
aas
mov
scas
dec
fnstcw
lock
in
cmp
lret
cmpb
pop
sbb
lcall
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
in
sti
inc
inc
mov
jo
stos
not
or
pop
push
jae
stc
push
mov
cld
xchg
mov
insl
movsb
daa
adcl
mov
cmp
inc
rcll
jbe
mov
aaa
into
test
pusha
div
loope
insb
imul
call
lcall
orl
mov
add
pop
aaa
iret
cs
mov
add
pop
into
setl
and
pop
pushf
cmp
mov
sahf
cmc
pop
aaa
sbb
loopne
nop
cld
push
les
xchg
leave
jmp
testb
lods
aam
pop
mov
cmpsb
dec
insl
mov
shrl
add
add
out
push
xor
cltd
dec
cmpsb
xchg
cwtl
enter
add
scas
xchg
sub
in
es
jecxz
inc
sti
dec
or
outsl
push
sar
push
dec
jecxz
xchg
adc
xchg
adc
cmpsl
add
mov
inc
push
xor
in
inc
dec
aas
mov
fistps
imul
xor
mov
les
sub
mov
jle
and
sahf
cmp
dec
jno
fisttpl
sbb
cs
lret
pop
dec
add
mov
and
loopne
or
fmull
or
or
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
sub
pop
mov
jo
jge
jo
mov
pushf
popf
clc
mov
aaa
fiadds
sub
std
inc
stos
fsubp
push
stos
out
sbb
sbb
xchg
test
lea
xor
test
push
add
cli
cmp
adc
bound
ficoms
cmp
fsubl
mov
jge
inc
pop
xorl
mov
adc
das
sub
mov
jl
lock
cmp
dec
imul
push
into
scas
xchg
sbb
pop
xchg
add
clc
pop
sbb
add
call
sti
rcrl
add
in
movsl
xor
pop
fidivl
mov
cmc
int
push
cwtl
mov
xchg
rorb
lea
xchg
cwtl
mov
test
leave
push
imul
andl
call
cmpsb
out
push
daa
insb
sbb
ss
mov
cmpsl
xchg
mov
and
jbe
sub
dec
sbb
or
out
dec
aam
aaa
mov
sub
xchg
push
xchg
dec
stos
sbb
cs
jl
fisubrs
sbb
shlb
cmc
and
or
xor
push
push
and
or
jmp
push
inc
cmp
das
mov
mov
xchg
leave
testb
roll
push
fbstp
push
inc
je
pop
call
cld
jl
sbb
aaa
xchg
loope
stos
jno
pop
aaa
loope
push
aad
bound
mov
sub
mov
xor
pop
loope
popa
call
cli
dec
mov
ror
xchg
stc
dec
sbb
ds
testl
sbb
cmp
and
cld
pop
xor
scas
insl
imul
jne
xchg
cmpsl
in
mov
add
pusha
inc
or
ljmp
shrl
add
movsb
dec
test
mov
adc
push
or
or
inc
and
test
or
lea
subl
fs
lock
in
mov
andnps
xchg
and
test
leave
jns
loope
cmpsl
cmpsl
addr16
mov
add
cli
xor
out
xlat
fcoml
mov
ds
sub
inc
or
frndint
mov
sbb
ljmp
gs
les
mov
out
iret
sbb
push
push
xor
dec
push
sub
inc
cs
mov
mov
mov
or
push
orl
dec
repnz
test
push
cld
jno
fnstenv
cmpsl
adc
movsb
dec
dec
cli
push
imull
lret
icebp
js
test
dec
cmp
cmc
push
pop
jb
mov
lods
mov
add
stc
decl
or
cld
aam
cli
sti
dec
ja
sub
or
es
cli
add
jb
dec
xor
mov
ja
adc
rorb
sub
jo
mov
cmp
lret
ds
mov
stos
adc
lret
loope
sbb
daa
xor
xlat
outsl
cwtl
xchg
mov
xchg
sbbl
dec
loop
or
jo
dec
jb
fcompl
pmullw
cmp
push
mov
or
pop
iret
je
adc
stos
sub
les
push
sub
ds
stos
push
negl
jmp
mov
cli
xor
testb
daa
adc
jo
jge
jo
je
lods
push
das
int
jecxz
stos
pop
push
je
stos
inc
push
push
lret
add
lods
inc
fwait
inc
in
sub
pop
jg
xor
cmpsb
pop
out
push
or
pop
dec
inc
test
scas
mov
fs
js
xchg
fisttpll
lock
test
jae,pt
subl
cltd
sub
popa
or
jl
and
dec
sbb
insl
mov
data16
adc
not
bnd
js
movswl
dec
jp
leave
dec
les
mov
sahf
xor
sub
adc
sub
repz
fidivl
adc
push
sub
sbbl
andl
xor
mov
cli
and
jmp
push
dec
insl
jae
pop
and
fcomip
dec
daa
mov
je
mov
fwait
aaa
sbb
in
cs
arpl
inc
pop
pop
mov
xchg
xchg
pusha
jno
pop
bnd
jae
mov
sbb
ret
bound
pop
comiss
jle
sbb
les
lret
jg
std
adc
lock
test
mov
data16
dec
faddl
xor
mov
xor
and
push
lahf
out
lods
fdivl
pop
or
push
repz
lds
pop
push
sti
in
test
cmpsb
insl
stos
mov
push
cmp
or
daa
fists
push
cli
sub
cmp
test
xchg
dec
mov
mov
pop
or
out
addr16
add
pop
mov
insb
sub
sub
push
nop
sbb
dec
xor
call
lretw
loopne
jp
es
push
xchg
sub
daa
cwtl
ljmp
cmp
xchg
scas
repnz
not
inc
add
in
pusha
cltd
or
mov
cmc
lock
cltd
xor
mov
and
ss
lods
mul
cmovp
ret
lret
imul
mov
sbb
mov
cmp
inc
sti
fucomip
sbb
or
lods
arpl
mov
in
jbe
aas
mov
push
jns
movsb
mov
push
cmc
or
je
shlb
mov
out
int3
xor
mov
mov
out
cmp
mov
mov
jge
or
mov
fwait
inc
push
mov
push
push
push
movsb
loopne
mov
sub
lock
pop
aaa
pop
roll
inc
int3
jae
fldl
mov
mov
addb
pop
inc
dec
scas
adc
hlt
push
stos
scas
mov
roll
mov
sub
gs
mov
mov
cmp
stos
notl
add
add
in
pop
mov
test
dec
mov
mov
add
in
push
in
popf
lock
jae
xor
stos
cmp
push
xchg
test
daa
repnz
inc
into
aad
stos
xor
filds
inc
sti
cmp
fnstcw
div
icebp
add
orb
into
gs
xchg
stos
imul
jae
mov
aad
adc
adc
int
lods
pop
jns
leave
or
jns
lds
mov
sbb
outsl
mov
fiadds
pop
push
js
lea
inc
leave
aad
pop
ljmp
mov
cmp
push
xlat
jl
pop
jbe
inc
mov
xchg
aaa
lods
mov
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
and
jo
mov
cld
jae
mov
scas
into
in
jbe
das
push
sahf
push
mov
and
jle
cmpsb
xchg
lret
sub
and
dec
jne
cmp
loop
dec
insb
orb
stc
or
fstl
jp
push
mov
push
adc
orl
dec
pop
cmpsb
cmp
fcoms
movsb
dec
add
rdmsr
mov
pop
leave
push
inc
xor
es
daa
cmp
enter
sub
fwait
push
rcll
lcall
mov
jae
cltd
jbe
aaa
cmp
adc
mov
push
nop
xorl
jnp
mov
pop
into
jns
std
xchg
sub
or
mov
addr16
pop
lock
icebp
xor
xor
jbe
push
or
ss
sub
lret
xchg
call
mov
lea
pop
fwait
imul
repnz
add
add
mov
mov
je
jb
in
and
adc
leave
fildl
sbb
and
push
add
cmpb
dec
push
lret
subl
mov
push
addb
into
sbb
push
push
fwait
xchg
lcall
movsb
adc
push
xor
jne
shll
xor
mov
or
xchg
fwait
cmp
sub
repz
sbb
xor
mov
mov
icebp
sbb
jae
cmpsl
dec
sbbl
jl
sbb
int
sahf
enter
xchg
incb
call
dec
mov
dec
fstpl
shr
js
mov
inc
add
push
pop
pop
test
std
loopne
xlat
pop
inc
dec
or
mov
adc
push
push
in
lret
jne
pop
add
sbb
int3
add
lds
adc
stc
fidivs
mov
push
and
pop
sbb
mov
popf
mov
mov
mov
pop
cmpsl
fucomi
lea
clc
loopne
xchg
leave
mov
inc
push
loopne
gs
loop
push
pop
mov
pop
xchg
jae
cmc
push
fs
rorb
in
jle
lods
mov
loope
cs
in
mov
into
das
mov
cld
inc
pop
xorps
xchg
movsl
insl
xor
jns
adc
pushf
add
jmp
jo
dec
xchg
imul
icebp
dec
ret
lods
jge
aaa
dec
shlb
add
leave
push
pop
call
dec
stos
adc
or
mov
lret
sbb
adc
stc
call
jmp
imul
push
popf
pop
shlb
mov
mov
leave
mov
sub
insl
inc
mov
in
stos
push
outsb
adc
pop
push
adc
adc
cwtd
fdivr
cmp
dec
push
cmp
mov
jmp
inc
scas
mov
arpl
push
cmpsb
aad
mov
aad
outsl
xor
mov
sbb
in
mov
or
scas
ss
jmp
jb
orl
jns
hlt
hlt
adc
dec
or
mov
das
flds
cmp
inc
jb
inc
xor
push
bound
mov
jb
lret
xor
cmp
add
loopne
add
xlat
xchg
mov
test
scas
fnstenv
mov
bound
jmp
jmp
and
in
out
xor
nop
and
out
xacquire
and
and
stos
lods
cmp
icebp
adc
sbb
add
andb
add
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
imul
push
ja
movsb
data16
pop
and
xchg
mov
xchg
pop
or
mov
sahf
and
negl
imul
mov
shrb
inc
pop
inc
call
dec
push
mov
in
rcrl
or
in
loop
lods
mov
int
lods
imul
cltd
out
jne
inc
adc
icebp
out
push
mov
pop
cltd
pop
loop
pop
loope
pusha
jno
pusha
mov
mov
cmp
ret
jbe
adc
enter
add
cmp
mov
lods
out
pop
mov
mov
enter
test
and
sub
and
icebp
sti
loopne
mov
pop
outsb
mov
push
mov
shrl
repz
mov
pusha
lret
xchg
pop
or
popa
sbb
leave
or
mov
jp
rcrb
lret
jmp
adc
cmpsb
xchg
sub
arpl
and
push
lahf
mov
xchg
jg,pn
loopne
push
or
or
push
mov
test
xor
xchg
fcmovu
or
lcall
insb
lahf
loop
pop
cmpsb
xchg
jnp
sub
imul
mov
adc
call
scas
gs
icebp
int
pop
testl
js
pop
sub
or
dec
inc
pop
or
outsb
movsb
cmp
push
or
std
insl
popa
xchg
adc
jo
lds
jmp
cmpb
int3
jge
adc
outsl
mov
jmp
fisttps
addr16
xchg
int3
mov
loopne
hlt
cltd
jmp
fcomip
and
and
rclb
dec
icebp
lock
lahf
dec
leave
ljmp
fs
jecxz
pop
push
popf
push
or
lods
or
mov
mov
cld
ret
inc
sbb
or
sahf
hlt
push
dec
push
mov
pop
xchg
ljmp
popf
fucomip
bound
ja
add
out
fisubrs
and
push
inc
mov
jnp
adc
mov
daa
scas
xchg
gs
mov
iret
pop
scas
stos
mov
mov
mov
cltd
adc
adc
adc
add
int3
push
jo
xor
insl
test
xchg
mov
les
push
imull
iret
mov
retw
mov
outsb
popa
js
ret
xor
xchg
cwtl
daa
push
push
dec
push
daa
pop
mov
xchg
and
jae
or
aas
cmc
xchg
dec
xor
mov
push
jl
iret
cmpl
push
cmp
leave
adc
adc
bound
scas
cli
dec
xchg
mov
clc
shlb
xor
iret
mov
jp
dec
push
dec
stos
loop
out
adc
cwtl
sahf
xorb
les
lock
cli
lock
sbb
out
test
sbb
adc
mov
stos
pushl
sub
adc
psubd
out
std
lcall
adc
cmp
dec
rorb
pop
fstp
xchg
arpl
cs
imull
rorb
outsb
sbb
pop
cmp
movsb
gs
pop
int3
dec
std
sbb
or
dec
cs
cmp
cltd
scas
sub
insl
ljmp
xchg
jns
test
jae
popa
int
outsb
mov
fldenv
sub
rorl
loope
fwait
ja
das
mov
sbb
mov
add
jmp
outsl
mov
or
imul
sbb
jo
mov
push
and
add
pop
dec
arpl
mov
testb
push
dec
jle
aaa
popf
dec
std
into
jecxz
data16
in
sbb
mov
or
jae
dec
je
pop
mov
jne
fs
std
ja
repnz
sbb
imul
fsts
outsb
mov
data16
movsl
pop
or
sub
je
fidivrs
cmpb
xor
mov
shlb
js
inc
rorl
push
mov
mov
gs
stc
loopne
add
ror
adc
pop
cmp
clc
lock
jno
fsubrl
push
pop
cli
sub
loope
cmp
ds
in
jmp
icebp
push
inc
cmpl
cli
push
push
jno
aad
fwait
or
scas
dec
jl
pop
imul
fs
mov
iret
sbb
dec
clc
leave
add
xchg
lods
dec
fisubrs
and
bound
ror
jb
mov
xorb
arpl
pop
inc
int3
cmc
lods
pop
jae
sub
popf
popf
xlat
rcl
jns
pop
cld
xor
ja
fisubrs
xor
imul
xchg
sbbl
dec
in
adcb
sahf
and
ss
dec
push
push
add
ljmp
lods
sti
addr16
adc
sbb
sub
cmp
mov
jl
jecxz
ror
lods
push
dec
addb
enter
enter
sarb
lret
dec
push
clc
push
dec
popa
mov
stc
mov
enter
stc
jb
sti
and
jno
or
movsb
shrl
sbb
jno
inc
xor
cwtl
loop
out
imul
lock
mov
lock
adc
outsl
je
and
xchg
bound
push
divb
cs
pop
inc
nop
xor
fists
mov
jp
add
data16
xchg
dec
insl
rclb
push
adc
sarl
pop
dec
out
pop
mov
sub
sbb
jb
push
sub
push
fwait
out
pop
or
mov
call
inc
inc
xchg
mov
xchg
sbb
lahf
aas
pop
mov
je
cmc
inc
xchg
xorl
mov
jp
xor
jb
push
adc
fstps
sub
lret
sbb
lods
mov
movsl
add
dec
das
hlt
outsl
in
adc
mov
ljmp
jno
lret
aam
pop
add
arpl
jnp
jno
mov
cmpxchg
pop
dec
in
push
jl
sub
mov
mov
pop
lea
cmovae
dec
pop
ja
cmp
xor
or
addb
int3
mov
out
int
xor
fs
popf
pop
imul
and
sub
push
aas
testl
adc
inc
and
aam
pop
jbe
pop
inc
shrb
lret
jo
pop
xor
and
jg
sbb
adc
call
fists
aaa
push
ret
and
int
push
mov
fs
mov
add
add
es
sbb
sub
mov
test
dec
adc
jae
lods
loopne
dec
inc
jmp
xchg
ljmp
pop
int3
push
cmp
push
jbe
sub
cmp
in
nop
or
gs
ret
sub
sub
sub
inc
dec
dec
sbb
in
push
fwait
pushf
jb
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
cmpsb
das
ds
jo
pop
jge
jo
fs
dec
lret
mov
mov
je
push
movsl
lret
std
cmp
or
les
inc
sbb
cmpb
shlb
push
in
movsb
pop
lret
fidivrs
mov
cmp
sbb
insb
pop
fistl
mov
adc
das
cmc
loop
ss
ja
out
jae
add
sbb
xchg
mov
mov
mov
mov
sbb
fcmovnb
aad
pop
shlb
gs
stc
cmp
pop
pop
inc
jp
into
gs
repz
push
mov
aaa
cld
filds
mov
xchg
test
bound
dec
xor
shl
cmp
or
or
lret
jnp
xchg
aad
push
popl
scas
out
jl
add
mov
and
jne
pushw
stos
pop
scas
mov
jns
cmp
cmc
mov
push
and
arpl
mov
aas
sub
add
push
xchg
add
xchg
adc
inc
cmp
sbb
and
inc
stc
test
mov
leave
outsb
add
cmp
repnz
stc
pop
pop
sbbb
adc
in
das
in
insl
std
and
cmp
jecxz
repz
popf
je
or
jbe
outsl
dec
popf
xchg
adc
mov
ret
cmp
mov
clc
jl
test
push
aad
xchg
push
mov
sub
pop
inc
add
call
pop
or
ds
jno
push
addr16
push
arpl
mov
aas
pop
jp
add
aad
xor
ror
in
sub
add
xchg
lea
in
push
iret
mov
fcoms
push
stos
jmp
ljmp
inc
shrl
ficomps
xor
cld
out
stc
jnp
frstor
mov
popf
iret
nop
arpl
popf
pop
call
and
in
in
lds
test
add
pop
sub
sti
test
out
xor
pop
push
jmp
mov
cmpsb
nop
outsb
inc
push
cld
in
inc
inc
mov
popf
out
ss
cmp
shl
cwtl
movsb
mov
addr16
pop
jmp
dec
leave
sub
xor
cli
sbb
push
xor
xor
inc
xchg
iret
or
or
xchg
bound
cmp
xchg
stc
repnz
inc
mov
ficomps
sub
stc
add
push
lds
or
rcrb
lret
push
push
sbb
push
xchg
fstps
or
dec
in
and
jge
leave
mov
repz
roll
mov
xor
sbb
push
js
cli
loop
notb
out
mov
inc
fcmovu
int3
in
push
clc
bound
jo
push
movsb
stos
mov
adc
hlt
fwait
or
repz
inc
cmpsb
or
stc
xor
ret
shr
push
mov
sub
jae
pop
ror
sub
add
cmp
mov
or
mov
call
fwait
insb
add
rcrl
push
xor
mov
lea
push
in
add
mov
jno
scas
leave
cs
xor
push
addl
ret
dec
jbe
mov
inc
cmpsl
mov
mov
mov
fcoml
stos
add
cmp
xchg
sbb
js
xor
mov
inc
and
jbe
mov
cmp
mov
pop
cmc
flds
fnstcw
dec
ds
xchg
lea
cmp
inc
cltd
cmp
push
push
adc
mov
lahf
sub
push
mov
cmc
push
insl
push
arpl
sub
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
dec
dec
fcompl
je
movsl
rcrb
and
in
stos
movb
sahf
lods
fbstp
test
mov
lds
pop
inc
or
out
jnp
ds
jae
pop
mov
sbb
lods
ss
aam
sbb
adc
std
movsl
cmp
sbb
mov
push
pop
xor
adc
sub
push
rcr
cmp
bound
ret
repz
xchg
test
sub
ss
hlt
xchg
popa
adc
hlt
xchg
in
adc
pusha
xchg
repnz
sub
jns
dec
icebp
push
xor
and
daa
inc
mov
mov
sub
cmp
fidivrl
dec
dec
aaa
addr16
inc
cmp
jmp
mov
test
imull
adc
mov
cmp
lret
sub
or
aaa
sub
mov
cmp
fisttpl
loopne
mov
dec
incl
scas
cmpsb
aas
pop
jno
cld
jp
pop
mov
sub
subb
dec
xlat
cmp
pop
and
add
mov
lods
divl
imul
fnstenv
fiaddl
cld
xchg
ret
jmp
jo
scas
insl
jbe
mov
call
pop
shl
push
adc
lcall
sbb
jns
push
adcl
enter
sub
sub
jo
orb
mov
ds
das
inc
jp
insb
rol
or
xchg
movsb
xchg
mov
notl
sub
mov
ret
add
repz
test
mov
adc
nop
push
add
leave
lods
fisubrs
sbb
fwait
shll
sti
mov
fildll
pop
jge
pop
xchg
jbe
int3
push
sti
aam
call
push
xor
push
inc
shll
insl
repnz
cs
xor
jp
shlb
stc
or
les
lcall
add
inc
push
push
addb
int3
mov
addb
dec
add
pop
push
jle
in
test
not
or
sub
push
test
pop
inc
out
jmp
xor
fcomps
int3
jb
pop
imul
inc
test
stos
dec
out
push
lret
imul
lcall
stc
add
cmp
aas
lock
jp
xor
pop
aas
sti
arpl
push
mov
sub
jno
aas
cltd
sahf
push
add
out
or
fwait
or
fwait
mov
test
push
popf
imul
dec
mov
aas
sub
loopne
test
and
repz
push
jmp
pop
je
pop
lcall
mov
adc
push
test
stos
ret
adc
cmp
mov
xor
or
dec
in
mov
test
imul
mov
pop
push
xor
pop
jnp
dec
outsb
push
jno
stos
push
inc
mov
mov
sbb
adc
mov
ret
push
mov
or
jl
stos
jmp
add
lret
jge
out
dec
sub
addb
cmp
in
rorb
repnz
popf
push
mov
mov
loopne
jmp
xchg
adc
mov
or
xlat
in
add
les
movsl
in
fmull
jmp
inc
cmp
je
pop
sbbb
pusha
and
testb
sbb
mov
dec
and
cmp
repnz
and
mov
adc
jno
mov
add
mov
and
add
in
add
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
mov
dec
jo
pop
jge
jo
ljmp
adc
loop
repz
pop
jae
inc
cmpsl
shl
int3
aaa
ljmp
js
mov
xor
or
mov
jp
pop
adc
pop
dec
in
push
test
rcrl
jb
scas
inc
mov
popa
loop
daa
int
jp
repz
adc
je
ljmp
outsb
lds
sbb
bound
outsl
rorb
add
lods
xorl
sub
daa
in
pop
mov
xchg
ljmp
fildll
addb
into
repz
insb
inc
lods
and
jbe
jl
loop
inc
pop
sub
js
fstpt
je
iret
hlt
pop
xor
jb
out
pop
js
sbb
xchg
inc
movsl
inc
leave
jbe
insb
lods
in
lock
mov
dec
hlt
rcrl
jno
pop
fsubl
jno
stos
out
out
push
xor
jp
and
arpl
push
jl
enter
sbb
cmp
mov
jle
or
adcb
adc
dec
into
xchg
sbb
push
inc
fbld
ja
lret
bound
inc
pop
jle
hlt
lds
outsb
pop
push
push
lret
pop
and
adc
leave
mov
mov
idivb
fwait
mov
aad
scas
loopne
divl
int
xchg
jmp
je
jp
insl
xorl
popa
enter
andb
rcll
jge
adc
adc
shr
xchg
lret
mov
cli
lcall
or
dec
ja
or
lods
into
or
cli
cld
in
push
test
movsl
cmp
int3
mov
pushf
xchg
and
inc
int3
push
scas
mov
pop
inc
orl
add
and
and
cmp
and
subl
or
daa
xor
ja
repnz
push
inc
add
in
loopne
or
dec
dec
mulb
jmp
imul
mov
sub
jne
test
pop
mov
shl
xchg
mov
mov
mov
dec
or
adc
cwtl
fistpl
pop
push
into
and
sbb
mov
fld
xor
out
mov
push
and
mov
mov
pop
dec
filds
in
lods
orb
jecxz
cmc
mov
out
xchg
sbb
std
out
adc
and
test
jo
pop
mov
movsb
movsl
mov
shll
xor
dec
jno
lea
in
dec
pushf
mov
push
mov
pushf
enter
pop
inc
fcmovbe
mov
lock
movsl
push
leave
leave
mov
jp
stos
add
inc
xchg
lahf
bound
loopne
mov
jle
jae
test
lock
inc
std
shll
add
fisttpll
fcmovu
dec
and
pop
shl
add
push
inc
add
cmpsl
and
inc
jne
leave
scas
repz
fiaddl
adc
xor
mov
test
aam
test
pusha
loope
add
int
cmp
in
jg
push
cs
incb
addr16
or
xor
loop
lret
int
stos
movsl
or
push
repnz
aad
andb
das
test
mov
push
push
mul
out
adc
xchg
leave
ljmp
pop
lea
mov
cltd
add
cmpsb
xor
jae
sahf
in
test
inc
adc
jo
push
mov
clc
loope
subb
ds
jmp
clc
lret
push
sar
dec
movsb
pop
lods
out
and
mov
add
mov
clc
add
mov
sub
lds
dec
mov
ret
cmc
cld
inc
add
jg
add
rol
jp
inc
add
add
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
or
pop
jge
jo
jb
rorb
mov
or
jno
fadds
inc
pop
std
or
aas
push
cmpsb
and
std
xchg
jmp
cmp
sahf
xchg
pop
jecxz
aam
push
cmp
imul
add
pop
leave
fwait
sbbb
xor
add
xor
fistl
jne
add
daa
int3
rcll
idivb
xchg
out
pop
mov
daa
inc
mov
and
mov
pop
out
aad
ja
and
pop
push
cmp
xor
ret
push
mov
faddl
xchg
fbld
in
xchg
sti
call
sub
fs
cmp
imul
mov
mov
xchg
xchg
aam
cmpsb
sbb
sub
rolb
push
pop
aaa
stos
jae
mov
imul
xchg
cmp
jmp
or
add
mov
dec
js
push
xchg
addr16
ljmp
pop
aam
pushf
push
fsubr
enter
clc
mov
mov
jp
sbb
adc
adc
cmovle
mov
jns
adc
jb
fs
add
ret
loope
fsubs
lods
ja
out
in
cmp
icebp
insb
rcl
xlat
xchg
xchg
mov
push
push
add
push
cld
mov
and
enter
sbb
mov
aaa
adc
pop
les
lret
sub
insb
jnp
leave
js
imul
subb
push
pushf
fistps
pop
inc
xlat
or
fsts
xchg
sti
test
sbb
push
xchg
push
daa
mov
inc
dec
mov
sarl
xor
into
test
inc
pop
sub
and
cltd
lea
mov
sbb
imul
push
out
leave
jmp
hlt
push
dec
sub
push
aaa
pop
mov
jg
stos
arpl
outsb
loopne
pop
and
mov
addr16
mov
sar
loope
xlat
xchg
jo
icebp
mov
mov
rorb
hlt
addr16
jbe
pop
iret
lods
iret
push
sbb
xchg
adc
and
sbb
add
fisttpll
push
mov
lds
add
mov
aad
or
push
push
scas
aaa
push
dec
addl
clc
mov
les
cmpl
ss
sti
add
adc
xlat
pop
imul
xor
leave
cmp
addl
pusha
stc
ljmp
in
push
cmpsl
xchg
and
mov
sub
jle
lret
mov
faddl
daa
int
scas
lret
sti
dec
or
stos
add
outsb
ljmp
xor
addb
lret
ss
push
inc
gs
xchg
push
dec
stc
push
stos
pop
int
xor
mov
loop
jnp
or
mov
push
testb
sti
or
add
fstpl
sub
orl
cmpsl
jne
push
rcll
mov
cwtl
insb
test
push
icebp
sub
and
xchg
push
or
dec
inc
lods
cmp
xchg
push
movb
adc
xchg
test
and
mov
insl
mov
pop
sbb
pushf
jle
xor
jne
adc
sub
mov
lods
cmp
imul
fsubrs
call
popa
lcall
fwait
xor
mov
push
test
or
cmp
dec
rclb
pop
jnp
shll
mov
lahf
lods
cli
push
inc
inc
sub
stc
or
insl
mov
clc
add
dec
lods
popa
dec
mov
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
adc
jo
pop
jge
jo
testl
xchg
mov
rclb
inc
cltd
mov
mov
sbb
mov
movsb
dec
cmpsb
jne
js
lock
pop
mov
loope
mov
insb
add
out
mov
dec
ficomps
inc
xchg
roll
scas
xchg
sub
int3
popf
push
repz
and
setge
ja
mov
cmpxchg
sub
dec
in
push
divl
inc
shlb
pop
scas
in
push
or
scas
jge
lret
push
push
inc
ss
push
push
xchg
xlat
sbbl
aaa
adcb
leave
daa
push
mov
inc
es
sub
idivl
and
cld
xchg
mov
push
movsl
shrl
loope
icebp
pop
mov
mov
xchg
jne
push
or
add
sbb
call
cmpsb
and
inc
int
cltd
dec
loop
xchg
aad
push
sub
gs
test
adc
xchg
pop
xchg
cmp
mov
or
scas
lahf
sub
outsl
dec
bound
shr
lods
mov
add
sub
xchg
push
jo
mov
mov
inc
push
cli
aad
lret
cmpsb
cmc
fnsave
jg
sbb
push
push
repnz
lret
ss
mov
clc
jl
jo
pop
call
shr
xchg
inc
sub
adc
scas
mov
bound
push
fistpll
ds
sub
push
pop
xchg
add
ret
pop
mov
adc
sbb
mov
andnps
cs
mov
sub
push
repz
add
dec
mov
cwtl
adc
xor
sub
cwtl
daa
pop
jmp
test
pop
rorl
push
lock
ja
movsl
je
push
mov
imul
push
mov
jnp
outsb
cmc
movsl
hlt
cmp
mov
jns
adc
aam
insb
dec
jmp
add
push
dec
push
jo
jg
outsb
insl
adc
adcb
adc
xor
andb
push
iret
test
outsb
bsr
sub
dec
adc
jns
xchg
out
cmpsl
and
pop
test
jne
or
jg
add
in
or
mov
lock
test
mov
adc
cld
cmp
jns
mov
sub
test
fldcw
scas
in
daa
sti
cltd
lcall
sub
pop
nop
out
sbb
jne
mov
popf
xor
inc
cli
leave
jp
in
xor
shll
dec
inc
jl
fmuls
int
shll
pop
sub
fnstenv
mov
mov
push
rolb
or
mov
and
aaa
inc
fs
xor
hlt
and
inc
outsb
scas
xlat
and
mov
adc
ret
dec
scas
in
fwait
pop
sub
add
xchg
and
adc
push
adc
push
xchg
imul
mov
cmp
xor
mov
mov
imul
jecxz
mov
decb
movsl
scas
xor
mov
xchg
jecxz
jmp
mov
loopne
and
fwait
lock
out
das
stc
aam
or
mov
sbb
sti
test
popf
jns
push
jge
add
fidivs
push
lods
in
or
imul
and
add
push
faddp
mov
es
orl
xchg
ja
stc
xchg
fdivl
xchg
add
inc
or
imul
add
data16
jns
fldenv
sub
je
mov
call
add
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
adc
jo
mov
js
shrb
inc
add
cmp
add
popa
loopne
aad
es
dec
imul
or
push
mov
push
lods
dec
sub
cmpsl
or
pop
push
jge
repnz
mov
scas
cmp
loope
jl
mov
or
negl
xor
sub
xor
push
sub
push
ljmp
movsl
adc
insb
dec
stos
les
inc
cmp
sbbb
mov
jne
push
xchg
out
sub
scas
sub
mov
inc
jno
repz
ret
sbb
dec
xor
mov
cmpsb
adc
fiaddl
loope
mov
cmpsl
scas
lcall
jmp
inc
cli
mov
adcb
shrl
aaa
rcr
and
mov
sbb
dec
sbb
stos
imul
pop
xchg
mov
cltd
xor
add
gs
loope
ds
popf
shrl
cltd
push
xchg
push
jbe
stc
cmp
sub
mov
pop
inc
lcall
out
ret
jne
fbstp
jl
dec
jbe
pop
int
cmp
mov
pop
ds
icebp
out
inc
enter
cmp
fcoml
mov
and
leave
sub
aas
repnz
out
pop
and
mov
roll
push
xchg
out
fists
lods
jp
pop
notl
iret
cmp
into
mov
xor
or
jg
ljmp
rolb
imul
das
lret
loop
dec
out
div
xchg
je
xor
int
lret
jno
rolb
insb
ljmp
xor
mov
loope
inc
cmpl
mov
jmp
dec
mov
loope
insb
pop
add
xchg
push
adc
mov
adc
sbb
sbb
fisttpll
jge
or
shrl
inc
add
sub
pop
jl
scas
into
cmp
into
je
mov
ret
add
xor
and
daa
addr16
jp
xchg
cmp
lret
adc
andb
inc
ss
stos
push
sbb
add
jmp
and
pop
or
sbb
jp
mov
jno
cltd
fimuls
hlt
call
mov
arpl
movsb
xchg
mov
lcall
js
movsl
inc
pop
mov
jp
cmp
sub
xchg
sldt
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
push
aaa
inc
addr16
pop
jo
mov
lret
cmp
inc
push
dec
mov
jge
pushf
dec
and
xchg
ret
cmp
pop
inc
sti
fsts
stc
cmp
je
mov
repnz
xchg
stc
push
int
fldl
jl
pop
push
jmp
cmc
inc
inc
scas
mov
mov
mov
pop
addl
inc
out
sarl
mov
sbb
ret
add
inc
subl
add
pop
lea
add
lret
mov
add
adc
ficompl
fmull
pop
mov
ss
dec
push
mov
xchg
sub
pop
js
orl
arpl
imul
fisubrs
add
inc
ljmp
clc
in
adc
pop
xor
pop
icebp
mov
es
cmp
fs
inc
mov
pushf
test
insb
in
mov
test
bound
outsb
push
cmp
or
clc
in
leave
sahf
xor
out
xchg
pushf
push
pop
lret
stc
inc
jne
repnz
adcl
mov
jmp
ss
jnp
cmpsl
stos
orb
xor
mov
pushw
mov
xchg
mov
lds
nop
pop
pusha
outsb
out
popf
lods
or
cmp
lret
repz
and
jns
jno
add
fists
arpl
or
push
repnz
push
dec
pop
rcrb
push
sbb
cmp
adc
out
inc
subl
frstor
sub
inc
dec
inc
and
and
pop
imul
push
inc
movsl
sub
fwait
rolb
jmp
pop
mov
dec
les
mov
aad
testl
and
push
pusha
testl
cmp
mov
pop
stos
mov
mov
xchg
int3
inc
cmp
int3
lcall
jne
xchg
cmp
dec
sbb
adc
mov
icebp
sbb
dec
imul
push
pop
fwait
dec
push
push
out
add
or
shll
mov
int3
lahf
in
xor
pop
mov
jne
in
je
hlt
pop
mov
loop
ret
dec
inc
cli
adcl
mov
lds
stos
jle
mov
sbb
loop
sbb
stos
dec
nop
inc
les
inc
adc
cmp
psubq
out
fldl
or
pop
pushf
or
int
scas
sub
sbb
and
inc
test
fnstcw
jne
ffree
adc
adc
in
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
push
push
pop
jo
mov
ljmp
inc
sahf
dec
dec
loop
in
dec
scas
mov
xor
pop
in
imul
lock
cmp
push
xor
loop
aad
popa
mov
aaa
and
scas
jbe
jnp
test
xlat
mov
scas
and
movl
in
ljmp
mov
roll
gs
xchg
das
mov
add
cmpb
pop
popa
sti
jne
sbb
int3
pop
push
aas
xchg
and
xchg
cltd
stc
add
pop
mov
jp
mov
into
int3
lds
aas
jbe
mov
cmpsb
pop
pavgw
insl
test
cli
testb
loop
adc
addb
jg
fwait
xchg
jns
inc
pop
mov
push
lret
imull
test
ljmp
xchg
mov
into
mov
addr16
leave
sbb
mov
jbe
nop
or
push
xchg
dec
cmp
mov
add
pop
push
jno
in
stos
loop
cmp
mov
jl
test
pushf
push
sub
insb
jl
nop
inc
dec
ret
insb
fcompl
lahf
push
out
or
and
mov
dec
pop
mov
mov
mov
inc
push
inc
fisubs
cmpb
lcall
insb
jno
sub
sub
loope
lahf
mov
sahf
out
pop
ljmp
push
test
int3
les
mov
cld
int
imul
movsb
add
test
jmp
fwait
xor
in
add
mov
pusha
push
cmp
push
jno
scas
das
xor
inc
gs
mov
inc
fstpl
jo
pop
xchg
cwtl
cltd
movsb
ret
arpl
add
push
mov
cmp
pop
xor
jbe
dec
popa
xchg
inc
mov
mov
fildl
leave
xchg
das
rorb
push
out
lods
push
gs
bnd
js
mov
shl
mov
int
sbb
jbe
or
or
stos
and
es
daa
adc
iret
dec
sub
faddl
sbb
pop
loope
call
jp
repnz
and
push
loop
fistl
mov
insl
sub
or
add
repnz
scas
pop
pop
and
jge
sub
loop
jle
inc
test
in
mov
dec
or
ficoms
lretw
lods
dec
dec
push
push
fldenv
cmpsl
sbb
pop
xlat
mov
xchg
and
xchg
cmp
or
xor
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
adc
daa
adc
jo
jle
jo
sbb
mov
incb
loope
dec
inc
sbb
sti
dec
aas
test
xchg
dec
andl
icebp
dec
jecxz
push
scas
push
outsb
and
movsl
pop
in
movsl
add
inc
xchg
mov
ja
add
sahf
inc
xchg
xlat
push
jne
push
cmp
cmp
repz
out
inc
add
js
mov
test
lret
mov
mov
mov
xor
test
push
shlb
inc
jo
jnp
mov
cmc
int3
jae
mov
test
ficompl
sbb
sbb
scas
sbb
pop
in
gs
mov
testl
adc
fistpll
pop
rorl
leave
leave
fcos
add
or
sbb
jge
aad
jns
mov
gs
jg
cmc
jae
aas
pusha
pusha
popa
lock
jae
shrb
xchg
sbb
xor
fisubl
add
ret
cmpl
testl
inc
imulb
fsubrp
dec
adc
in
in
and
pusha
lods
mov
leave
adc
inc
int3
ret
sub
cmp
dec
mov
push
sub
dec
cmp
outsl
addr16
add
lcall
cmp
jle
inc
cwtl
cmp
in
and
dec
push
dec
push
push
lcall
les
jge
dec
icebp
repz
jmp
xlat
cmp
dec
cmp
in
push
push
add
pop
pop
add
cs
xchg
aaa
or
mov
sbb
and
inc
gs
sub
xchg
sbb
imul
insb
pop
or
or
lods
xchg
into
aad
nop
decb
jecxz
or
insl
sub
cs
rol
inc
mov
sbb
fmuls
psubw
jmp
xchg
movsb
cmp
out
dec
jp
loop
push
add
xchg
rolb
aam
gs
xor
xor
nop
repnz
in
test
mov
fldenv
arpl
imul
inc
add
in
arpl
xchg
dec
jb
loope
pop
mov
xor
add
jne
fnstenv
lahf
xchg
push
inc
cmc
fnsave
rcll
enter
mov
xchg
or
data16
push
adc
and
xchg
push
xorl
lods
aas
dec
dec
lods
mov
fdivr
sub
mov
push
add
ss
push
mov
pop
dec
xchg
pop
iret
pop
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
mov
add
mov
push
fisttpl
sahf
mov
inc
sbb
mov
ja
ja
scas
mov
rorl
inc
mov
mov
imul
pop
xchg
ret
cltd
mov
inc
mov
mov
out
negb
call
cmpsl
leave
out
fldt
inc
mov
xchg
out
and
inc
lods
pushf
stos
pop
mov
jmp
enter
dec
fidivs
jge
out
sahf
xchg
pushf
push
stos
gs
lds
inc
adc
test
aam
int3
popa
aad
pop
scas
jle
mov
pop
lcall
rolb
jecxz
test
jne
daa
adc
sbb
xor
jle
inc
xor
or
add
mov
incb
test
mov
movsl
pop
sbb
pop
rclb
or
xor
pop
cmp
cwtl
in
cmp
in
add
clc
fbstp
mov
xchg
jbe
dec
fimull
mov
scas
jbe
aam
dec
les
cmp
adc
push
xor
mov
in
dec
pusha
imul
inc
decl
jle
pushf
dec
arpl
xor
addb
jmp
cmpl
flds
gs
cld
adc
fstl
cltd
adc
adc
jae
repnz
push
xor
sarb
andb
out
cmc
add
xor
dec
test
dec
add
or
rcrl
inc
mov
pop
xor
dec
jnp
jp
in
jmp
sub
fists
mov
or
lret
pop
jl
push
div
fwait
mov
pop
repz
cmpsb
inc
sar
leave
ret
arpl
fdivrs
mov
dec
xchg
cmp
mov
push
movsl
mov
adc
mov
mov
icebp
sub
in
push
sbb
adc
jo
mov
pop
or
mov
cmp
dec
jae
jp
int
adc
stos
aam
lret
mov
loope
add
mov
pop
xor
mov
add
pusha
inc
jmp
ja
ljmp
rcll
fwait
fs
addr16
cltd
cmpps
jnp
ret
inc
in
nop
outsb
outsl
inc
pop
jno
xor
mov
divl
dec
push
xor
sti
outsb
lahf
scas
dec
jmp
pop
fs
sbb
push
test
sbb
xchg
dec
shll
test
cltd
xor
sbbb
out
lret
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
int
lods
dec
mov
jle
jo
inc
aas
shrl
pop
mov
cmp
inc
jg
sbb
add
insb
lahf
insb
dec
lret
sbb
and
loopne
xor
rorl
inc
aad
gs
mov
jle
cmp
sti
pop
adc
out
dec
bound
in
lea
push
push
bound
mov
aam
mov
call
pop
pushf
sub
cwtl
dec
cltd
mov
jge
mov
repz
dec
add
movsl
stc
lods
out
stos
cld
push
gs
cmc
pop
pop
movsb
push
sbb
xchg
add
xor
bound
ljmp
jbe
mov
jne
addl
xlat
push
sarb
out
dec
xchg
pop
or
scas
jle
out
pop
jle
fnstsw
scas
push
int
sbb
cmpsl
scas
sbb
push
sub
cmp
iret
dec
pop
test
adc
std
in
or
sbb
mov
mov
test
neg
in
sti
adc
frstor
es
call
ret
mov
xchg
ficoms
bnd
in
cmp
inc
jno
sub
pop
push
xchg
sbb
cmp
jmp
pop
jns
pop
cmp
pop
repnz
mov
sarl
call
scas
mov
shlb
fiadds
pusha
cmp
aaa
dec
cmp
jecxz
sub
test
ds
pop
pop
rclb
adc
sahf
cld
sub
mov
out
or
hlt
orl
sub
int3
jecxz
jns
aad
jmp
xchg
push
add
or
dec
aaa
push
mov
test
dec
xchg
in
dec
ret
mov
addr16
in
insb
add
aam
stos
add
inc
or
stos
inc
icebp
adc
out
inc
adc
pushf
xchg
test
aas
sbb
push
outsl
jae
pushl
imul
cmpsl
xor
mov
pop
sub
inc
inc
adc
jns
or
fsubs
sbb
clc
mov
sbb
filds
or
adcb
sub
dec
sbb
or
xlat
retw
sbb
mov
add
test
pop
jne
ds
or
jnp
bound
add
ljmp
sahf
adc
imul
dec
xchg
or
sub
sub
inc
lret
sub
dec
psubusb
clc
jae
mov
pop
adc
or
popf
inc
pop
popa
jp
adc
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
mov
outsb
jo
mov
mov
cmp
inc
mov
repnz
sub
xor
dec
imul
or
mov
test
aad
jns
cmp
xchg
cmp
xor
inc
pop
and
inc
inc
outsl
and
mov
in
xchg
mov
mov
stos
mov
pusha
xor
pop
mov
cmp
mov
gs
andl
push
add
mov
adc
das
pop
cmpsl
pusha
add
shlb
mov
enter
jno
nop
xor
cmp
shl
or
call
mov
cwtl
pushf
out
imul
sti
out
cmp
sbb
mov
iret
std
loop
or
bound
push
stos
mov
outsl
jmp
jne
sub
jl
lods
pop
cli
mov
cmpsl
pop
aas
insb
jle
or
in
dec
and
sbb
ret
push
insl
aaa
bound
dec
std
mov
iret
bound
in
stc
in
leave
shl
xor
enter
jge
dec
lods
test
pop
push
loop
push
fistps
jo
cmp
push
in
test
dec
mov
sbb
into
jnp
data16
or
dec
leave
xchg
mov
xchg
mov
mov
pusha
sub
mov
add
repz
lcall
jecxz
cmpsl
jae
popf
iret
inc
in
jae
fmull
cmpsl
jle
out
dec
adc
adcb
push
outsb
cmp
dec
xlat
ret
into
mov
mov
pop
cmc
rcrb
mov
setbe
stos
add
or
stos
or
xchg
xchg
and
xchg
sub
xor
test
adc
aam
xor
xchg
lds
cli
add
sub
aam
jnp
aas
loop
fnsave
cmp
and
add
push
mov
cltd
mov
loopne
add
das
fcomps
sbb
pop
xchg
pushf
pushl
cld
fwait
jns
mov
or
test
stos
fcoml
xchg
xchg
outsb
decl
pop
sbb
adc
add
andl
xlat
inc
test
and
add
fisubrl
push
movsl
hlt
mov
mov
push
pop
xor
lret
lret
pop
xor
mov
dec
mov
test
push
jmp
mov
add
rolb
push
cmp
push
ss
xchg
cmp
jne
pushl
jmp
and
lods
shrb
in
pop
add
imul
jle
jo
aas
test
hlt
pushf
mov
scas
xrelease
roll
bound
mov
mov
xchg
mov
xchg
xor
rcll
mov
xorb
inc
or
daa
push
jge
pop
das
mov
cmpsl
pop
ret
imul
lods
dec
adc
cmp
daa
push
pop
pushf
sbb
cmp
jg
enter
push
sete
pop
pop
push
enter
rcrb
fiadds
pop
jl
int
ret
call
sub
cwtl
or
lods
inc
aam
lods
jge
inc
loop
push
mulb
sub
pop
and
popf
shl
sbb
mov
enter
mov
test
and
xchg
cs
sub
mov
push
pop
mov
jmp
push
adc
lret
mov
inc
test
mov
dec
dec
rcr
movsl
js
pop
loopne
mov
xchg
mov
mov
inc
jl
mov
xor
pop
in
push
loop
dec
jne
mov
fbstp
stos
jae
roll
lock
pop
das
test
fidivl
scas
jno
imul
fldl
loope
jg
lret
dec
in
push
push
ljmp
sbb
xor
int3
xor
jp
loope
xchg
mov
scas
imul
roll
lret
jle
push
mov
faddl
adc
sbb
pop
xchg
lock
scas
dec
test
sub
jo
scas
sbb
add
pop
sbb
or
mov
jbe
mov
add
jge
mov
add
or
add
pusha
inc
push
jae
shl
jno
in
test
imul
popf
shld
push
cmp
sub
jns
rclb
mov
xchg
xchg
mov
or
stos
aad
xor
lcall
cmp
cs
sbb
mov
lds
aas
cltd
adc
scas
jo
mov
adc
mov
call
add
out
lret
addr16
dec
dec
test
jp
notl
sbb
nop
je
xchg
out
pusha
inc
cltd
sub
sbb
jmp
lea
or
xchg
sub
es
push
push
jecxz
aad
jmp
mov
xchg
addr16
cmp
data16
repnz
test
fldcw
cmp
adc
mov
mov
test
add
jo
in
lods
add
pop
sbb
call
jmp
pop
insl
and
xor
insl
jp
or
orb
jo
jle
jo
pop
cltd
jnp
mov
xchg
xchg
sbb
stos
xchg
xchg
mov
mov
nop
imul
push
sbb
xchg
jle
sbbl
inc
jbe
mov
adc
push
pop
and
and
rcll
dec
sbb
pop
lods
xchg
and
adc
adc
int3
and
jp
jle
xor
outsl
pop
ss
and
lods
iret
dec
push
arpl
pop
dec
push
daa
stos
cmpsl
pop
mov
fwait
inc
pushf
leave
mov
cmp
adc
lock
sbbl
test
pop
test
insb
mov
aaa
cmp
ljmp
aam
jge
movsl
xor
push
loopne
jne
push
sbb
insl
push
inc
adc
in
fsqrt
sbb
sti
mov
cmp
cwtl
push
andl
mov
or
out
push
inc
outsl
lods
les
sub
or
clc
mov
sarb
mov
scas
test
sub
aad
mov
push
lds
and
mov
cmp
cld
je
and
into
jno,pt
cmp
loope
test
mov
mov
mov
add
mov
negb
pop
and
das
ds
imul
pop
fldenv
mov
mov
hlt
push
cmp
dec
dec
mov
fildll
sbb
xlat
out
sbbl
cmc
push
sub
xchg
inc
and
inc
and
in
cmp
mov
pushf
jne
add
mov
mov
stc
inc
ja
ret
cli
lea
int
lea
sbb
and
imul
mov
sub
and
rolb
push
mov
cmp
insb
dec
inc
or
jb
mov
loope
sahf
ljmp
xor
repz
xchg
mov
mov
in
shrb
push
or
out
and
xor
cmp
clc
fwait
dec
pusha
rcrb
rcll
fistpl
test
cmpsl
decl
rolb
and
mov
call
and
nop
js
mov
scas
sub
loopne
adc
pop
mov
inc
jge
jnp
add
cmp
data16
jbe
int
rcrb
inc
out
cmc
mov
lods
nop
repnz
js
sbb
and
add
fwait
lahf
das
aam
insb
hlt
or
push
stos
push
loop
popa
movsl
int3
sub
dec
jmp
pop
and
sbb
jge
mov
add
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
insl
jecxz
inc
jbe
jo
jle
jo
dec
repz
push
ds
mov
add
mov
or
or
lcall
mov
pop
lret
adc
addr16
push
in
and
jp
popa
xchg
imul
add
push
out
sbb
add
js
sub
push
imulb
sbb
testb
mov
call
dec
pop
xor
add
mov
and
push
jb
push
fxam
lcall
hlt
xor
movb
ret
jo
xor
je
pop
xchg
adc
jle
cmpsb
adc
adc
pop
cmpsb
inc
out
push
pusha
sbb
clc
push
stos
into
test
inc
lret
adc
cmp
xchg
ret
fcoms
lds
sbb
jecxz
push
lods
aad
push
mov
inc
nop
push
ret
or
pushf
dec
cmp
aaa
jns
mov
pusha
and
pusha
lds
test
cmp
inc
adc
imul
dec
and
fs
shrb
in
pop
arpl
pop
lea
stc
fdivl
lods
loopne
lods
data16
loopne
enter
or
imul
lods
adc
clc
push
lahf
sub
leave
aam
dec
ljmp
dec
add
stc
add
sbb
lods
mov
rclb
mov
dec
mov
jp
push
inc
fisttpl
mov
hlt
push
jle
add
jne
mov
movsb
inc
xor
addr16
out
testb
cmp
loop
inc
cmc
and
or
js
jl
out
jns
sub
inc
mull
adc
dec
nop
cld
daa
je
ds
sbb
js
jne
sbb
sbb
mov
ja
jae
div
mov
pop
xchg
in
cmp
xlat
test
call
aaa
xchg
arpl
push
cmpsb
pop
adc
push
call
and
pop
mov
vcmpps
inc
mov
mov
push
or
push
dec
rorb
adc
mov
int
lahf
mov
out
outsb
stos
adc
or
pcmpeqd
sahf
fucomp
sbb
xlat
ja
cmp
add
movsb
mov
pusha
in
arpl
mov
bound
dec
scas
test
cwtl
jl
loopne
test
cmp
cmpsl
ds
lods
mov
aas
jo
cs
ret
sbb
adc
xor
fwait
adcb
loopne
mov
adc
hlt
dec
mov
fimuls
mov
and
mov
enter
jle
push
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
sub
xorb
mov
test
mov
inc
mov
add
xchg
push
mov
out
sbb
mov
inc
jecxz
add
inc
in
push
lods
push
sbb
add
mov
lcall
cmp
int3
es
jbe
test
lods
jae
sti
lods
repz
in
dec
rcrl
inc
push
push
popa
jno
mov
dec
test
jo
xchg
lds
or
lock
xor
std
lods
aaa
testl
leave
fidivl
sti
xchg
or
pop
arpl
stc
mov
ret
fcmove
and
dec
mov
cmp
aad
xor
sahf
sub
aad
and
out
jnp
loope
xor
rolb
push
std
pushf
inc
nop
loopne
sahf
push
ret
cmp
xchg
sti
into
jp
andl
in
add
adc
add
mov
pop
pop
dec
out
jl
aas
dec
stos
and
pop
sbb
clc
xchg
jg
fs
rorb
mov
sbb
mov
shl
enter
jle
test
dec
adc
fs
gs
push
jmp
cmp
icebp
out
int
lret
xlat
or
insb
pop
push
xchg
jae
pop
jne
test
pusha
add
addb
test
shll
aam
cmp
cs
add
pop
cmp
les
push
cmp
pop
pop
fwait
ja
mov
pop
fsubrl
or
imul
mov
std
lds
xchg
int
push
mov
xchg
fs
jnp
cwtl
sub
les
mov
push
mov
mov
neg
jmp
inc
push
xchg
jo
add
push
ss
add
push
inc
cmp
loope
cs
and
mov
dec
cmc
dec
adc
jp
pushf
fwait
push
and
jle
imul
les
cmpsl
mov
dec
mov
adc
lods
cmp
fistpl
jns
jnp
outsl
inc
pop
push
cmp
or
fildll
test
insl
rorb
jge
push
push
sub
or
mov
jg
and
pop
fcmovnbe
and
mov
cltd
sbb
sub
sbb
inc
dec
xchg
jmp
stc
mov
adcb
stos
movl
mov
jp
add
inc
dec
and
incl
popa
pop
cmp
add
call
test
rcrl
or
push
ljmp
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
mov
leave
jo
jo
jle
jo
sti
mov
addr16
cmp
xchg
popf
inc
lret
mov
gs
sbb
jp
jno
push
cltd
outsb
add
lock
mov
imul
cli
xor
xchg
roll
negl
push
psubsb
push
leave
add
popf
pop
lret
jle
xchg
outsb
lods
jne
jecxz
jp
cmp
push
test
es
xchg
jb
jo
mov
mov
mov
adc
ret
push
mov
repz
dec
clc
test
subb
xor
daa
cli
imull
add
inc
ret
mov
mov
jne
and
cmpsl
xchg
push
dec
inc
fstl
ror
cmpsl
xor
int
shlb
push
mov
pop
fistpl
mov
js
dec
movl
jns
insb
movsl
xchg
sbb
push
push
jmp
pop
nop
rcll
mov
xor
or
shr
cmpsb
mov
pushf
xchg
dec
dec
push
pop
jge
or
rclb
and
push
cmp
shlb
arpl
mov
imul
adc
push
xor
mov
movsb
and
add
pusha
aad
sbb
sbb
insb
mov
sub
dec
push
or
mov
inc
sub
test
out
shlb
push
xchg
add
mov
dec
push
xchg
mov
arpl
or
call
shl
mov
pop
cltd
pop
xchg
dec
jp
addr16
mov
sbb
jae
in
fxch
mov
lods
inc
cmc
pop
movsb
mov
repz
xor
xchg
es
mov
xor
and
rorl
fsubr
call
mov
cmp
scas
cmp
jl
lcall
dec
and
mov
and
xlat
inc
push
into
sub
dec
xchg
test
mov
addl
arpl
movsb
andb
push
xlat
push
inc
push
addl
lock
jle
pop
jl
fstpl
test
push
ret
mov
loopne
jecxz
cmp
lea
mov
insl
adc
push
stc
jl
dec
sarb
fiadds
lods
outsl
fmuls
ja
dec
xor
arpl
mov
icebp
mov
add
mov
or
dec
adc
sbb
cmp
mov
ficomps
push
push
or
jmp
add
mov
jb
jge
jge
cld
jg
adc
jo
jle
jo
push
jmp
dec
fdivrl
inc
gs
and
bound
dec
inc
loopne
test
xchg
fstps
dec
lcall
in
adc
push
xor
xchg
mov
cmp
pop
lds
stos
lahf
pop
dec
lcall
dec
jecxz
jge
mov
sub
popf
sbb
dec
push
cmp
ffreep
pusha
add
push
cli
mov
cmpsb
mov
gs
push
add
xor
and
lds
sub
mov
fsubl
stos
outsl
mov
push
in
lret
xchg
lds
loope
les
xchg
and
cwtl
rcl
ret
enter
push
test
sub
mov
inc
scas
mov
push
outsl
sbb
push
lds
add
aas
ret
sub
dec
push
mov
mov
xorb
aaa
inc
int3
fisubs
cmp
cli
cmp
orb
pop
inc
montmul
cmpsb
add
es
xchg
pop
jno
fwait
mov
ss
dec
mov
dec
cmp
in
and
mov
pop
xor
pop
in
adc
in
imul
mov
lods
or
mov
insb
mov
adc
jp
aad
and
test
jmp
shl
in
in
lcall
jnp
icebp
sub
push
push
xchg
dec
das
pop
jmp
fisttps
ja
inc
push
scas
lret
push
call
verr
adc
jle
sbb
outsl
mov
and
sti
out
cmp
adc
push
sbb
cmp
pop
jg
xor
iret
sub
mov
in
mov
sbb
es
movsl
repnz
das
mov
jo
push
enter
sub
lret
sti
lcall
imul
popf
inc
rcll
mov
popa
push
fwait
sub
xchg
popa
or
jnp
push
test
sbb
sbbb
xor
inc
fldt
push
ljmp
adc
sbb
jnp
xor
jno
int
jno
leave
icebp
xor
faddl
or
imul
scas
mov
sbb
repnz
loopne
mov
pusha
xchg
mov
fdivl
pop
ret
mov
hlt
xchg
leave
mov
xchg
mov
fcmovbe
popa
enter
mov
cmp
dec
lods
or
scas
loop
std
nop
leave
sub
mov
nop
mov
add
or
or
jle
subb
orl
ljmp
dec
sti
in
pusha
mov
ret
daa
inc
push
mov
stos
shlb
arpl
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
fdivs
jg
mov
std
push
out
imul
sbb
loope
std
dec
ljmp
fs
test
add
lods
and
mov
adc
shlb
ss
inc
mov
icebp
xor
push
fisubrl
fidivl
ret
ljmp
out
pop
add
leave
in
movsl
jp
push
jno
adc
idivb
out
lods
sub
jo
lret
and
stos
jno
sbb
scas
sub
jl
call
cmp
scas
fistpll
mov
outsb
or
cmp
sahf
mov
or
dec
pop
pop
sar
and
mov
shl
cmp
mov
xchg
cmc
sbbb
mov
movsl
shll
popa
fsubl
fwait
cmpl
inc
insb
push
mov
mov
xor
xor
sbb
sbb
push
lcall
inc
xchg
mov
shlb
lea
jmp
mov
xor
in
je
insb
fdivl
std
dec
cmp
into
pop
or
ds
loopne
sub
fwait
movsb
and
inc
cmc
enter
xor
sbb
call
sub
push
test
push
mov
add
scas
cmp
jp
ljmp
out
sti
testl
leave
ss
scas
insl
subl
ja
cmpsl
in
pop
lret
xchg
push
into
inc
cmpsl
xor
xor
daa
push
mov
es
mov
xor
push
cmp
ror
testb
sub
enter
shll
fldenv
adc
jnp
cmp
mov
repnz
mov
test
faddl
fidivrs
adc
divl
adc
xlat
mov
xor
add
dec
push
mov
ja
daa
xchg
clc
and
sahf
aas
out
cmp
lret
sub
inc
pop
jge
mov
mov
jne
addb
jb
adc
dec
test
mov
adc
push
adc
cld
cmc
fsubrs
add
add
jae
xchg
insb
mov
and
std
gs
jns
sahf
and
xlat
sbb
inc
ficompl
jl
dec
out
adc
lock
das
sub
jp
movsb
das
mov
sbbl
jne
sbb
aad
mov
push
js
mov
xchg
pop
lea
pop
cmc
arpl
xchg
xchg
sub
mov
add
push
je
into
pusha
mov
aas
jno
shlb
test
popf
in
sbb
or
or
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
cli
int
movsb
js
jo
jle
jo
shlb
gs
xchg
mov
jnp
mov
mov
cli
mov
lret
dec
sbb
jg
and
xor
mov
mov
push
test
and
inc
shll
push
in
add
mov
cmp
dec
es
adc
jecxz
push
mov
cmc
icebp
or
adc
mov
cmpsl
outsl
fildl
xchg
and
push
adc
dec
ficomps
ss
imul
jecxz
fstpt
hlt
and
fnstsw
mov
jno
sub
add
cmp
ficompl
xor
or
push
xchg
adc
fmul
lcall
out
ret
xor
pop
or
nop
push
fidivl
or
out
dec
out
cmp
pop
out
mov
mov
pop
test
shrb
int3
mov
fdivrp
daa
jnp
insl
add
sbb
loopne
scas
inc
xchg
jge
xor
mov
out
gs
lds
mov
push
jle
ror
dec
add
scas
add
mov
xchg
xadd
and
push
push
imul
cmpsl
and
push
xchg
jp
in
enter
sbb
inc
mov
and
mov
mov
fbld
sbb
jns
jge
in
insb
cmpsl
je
testb
cmp
fwait
adc
in
notl
xchg
pop
adc
add
dec
es
mov
mov
xor
shlb
movsb
rcrb
cs
call
js
push
add
test
cmp
xchg
mov
faddl
push
mov
jge
std
jne
in
test
push
mov
mov
std
inc
shlb
mov
sbb
addr16
add
mov
rcr
jp
enter
fnstsw
ja
push
push
sub
insl
add
fmul
dec
arpl
adc
jae
lret
addl
fisttpl
add
xor
pop
xor
lcall
mov
mov
jo
dec
lahf
adc
jl
inc
jbe
xchg
outsl
push
cmp
or
test
jno
inc
movsb
int3
sahf
mov
ljmp
cmp
ret
maxps
fldt
and
sub
sub
test
xchg
movl
iretw
fwait
dec
cli
inc
lds
cs
pop
pop
jmp
in
inc
xor
fidivrs
negb
adc
test
jecxz
cmpsl
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fld
repnz
shr
add
jo
add
inc
sbbb
push
xchg
inc
push
xchg
icebp
and
jno
imul
push
fmulp
in
sbbb
rolb
xor
sahf
add
inc
adc
aad
dec
enter
test
push
jle
in
cmp
inc
es
mov
pop
push
mov
int
dec
inc
mov
xor
and
pavgw
ds
sbb
mov
jg
daa
hlt
pop
test
lret
pop
imul
fsubl
mov
jmp
xchg
adc
lahf
inc
mov
nop
and
hlt
xchg
jle
subb
push
cmp
div
mov
adc
push
cltd
xchg
dec
fdivp
xchg
sub
int
sub
jge
insl
mov
fstpl
jg
xor
mov
adc
mov
bsf
aas
pusha
fs
jg
push
test
stos
adc
out
pop
iret
inc
xchg
es
adc
popf
jmp
mov
dec
push
sti
dec
and
pop
fsubs
mov
clc
jmp
pop
ja
or
or
mov
mov
push
in
mov
fimuls
xor
rorb
lods
mov
xchg
dec
inc
sbb
jnp
std
jg
xor
call
imul
xchg
mov
inc
or
aam
mov
pushf
loopne
loopne
std
das
mov
fwait
cmpsb
sub
lods
push
shr
jno
sub
orb
scas
cwtl
mov
aad
sub
shl
fisttpll
gs
jmp
ficoms
out
dec
bound
adcb
fmull
cmp
cli
sub
mov
faddl
imul
jbe
in
icebp
dec
mov
ret
test
jg
mov
mov
sbb
leave
xchg
push
push
adc
mov
xchg
repnz
push
xchg
mov
push
ja
and
sbb
loopne
mov
xchg
shlb
cmp
out
adc
in
pop
xor
jmp
or
push
xor
adc
push
cmpb
fcomi
pushf
js
out
xchg
loop
mov
sub
loope
jmp
lock
xor
adc
fmuls
pop
sub
xchg
js
xchg
pop
jb
inc
mov
es
lds
sahf
sbb
dec
repz
add
sub
dec
loope
push
shll
scas
ljmp
dec
pop
cmp
mov
test
push
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
cmpsb
insb
xchg
add
mov
sbb
lods
push
mov
mov
inc
fnstenv
cli
ret
adc
or
adc
popa
adc
adcb
sahf
sub
jmp
scas
call
xchg
xchg
push
lret
outsb
cs
sub
adc
popa
lret
std
lds
or
mov
lcall
hlt
jle
in
repnz
sbb
or
ficomps
push
xor
and
lret
sarl
imulb
test
imul
mov
iret
and
xchg
add
ja
jecxz
jmp
daa
ffreep
mov
notb
xchg
adc
sub
addl
ror
loopne
mov
xor
sbbb
mov
lds
scas
xchg
nop
mov
dec
divb
es
sbb
add
and
cmc
rcrl
push
and
ds
and
cmc
jecxz
data16
fcoml
int3
cmp
xchg
clc
push
and
dec
lock
cmp
sbb
sub
pop
cmp
pop
scas
cmp
fcmovu
in
jl
nop
dec
cmc
push
icebp
cmpsb
scas
cmpsb
xchg
add
aam
loopne
jnp
fsub
cmp
fs
subl
xchg
les
mov
insb
or
jb
push
lcall
js
ror
lcall
adc
push
xchg
rclb
mov
or
hlt
in
xchg
pop
scas
fsubrl
aad
out
mov
icebp
xchg
mov
ret
add
xchg
inc
push
add
es
xor
out
insb
mov
add
aaa
sahf
jecxz
lahf
mov
int
cmpsb
xchg
ret
incl
in
aad
dec
mov
sub
mov
jbe
mov
sbb
lahf
dec
rcll
insl
mov
mov
std
and
xor
push
call
repz
dec
sti
outsb
das
mov
pop
pop
xor
daa
outsb
jnp
popa
and
leave
jb
jnp
mov
rcl
sbb
and
stos
push
pusha
rcll
shrb
ficoms
jne
and
cltd
or
xor
jbe
xlat
mov
scas
leave
test
testb
pop
outsb
add
and
dec
pushf
lret
je
fnstsw
pop
in
pop
jge
and
sub
pusha
outsb
hlt
and
jae
add
jo
lret
sahf
mov
sahf
pop
mov
es
jne
test
adc
daa
adc
and
xchg
les
jb
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
pop
sub
mov
dec
dec
sbb
stc
cmp
mov
fbstp
xchg
mov
mov
xor
loopne
mov
nop
xchg
loop,pt
xor
cmp
scas
lahf
sub
in
xor
jmp
fwait
ss
mov
dec
mov
sbb
test
sub
push
into
iret
xor
negb
inc
insb
test
push
push
mov
xchg
in
add
jmp
enter
sub
ja
ss
data16
xlat
and
inc
clc
stos
loopne
cmc
movsb
inc
out
mov
cmc
divb
out
cmp
xor
cwtl
shlb
cmp
jmp
pop
xchg
nop
fisttps
loopne
mov
scas
aas
in
ss
adc
fcomps
adc
fistpl
insb
and
popf
movsl
adc
pop
xchg
mov
aaa
imul
pop
outsl
push
pop
outsl
int3
sub
es
and
lods
shrb
mov
int3
mov
xchg
or
push
clc
enter
dec
test
push
push
add
aam
out
dec
test
xchg
out
scas
int3
scas
sarl
push
lret
sub
aas
and
cmp
mov
shlb
xchg
xchg
dec
sub
das
jo
outsb
lods
mov
cmc
push
jp
pop
fidivrs
lds
ret
sbb
popa
decl
add
sahf
imul
inc
mov
mov
mov
lret
ds
aam
test
push
lods
sub
int
enter
jg
jp
mov
cwtl
dec
jnp
mov
incl
subb
mov
rcl
dec
jmp
jg
mov
call
ret
scas
push
lahf
xlat
push
lods
fists
adc
aam
sahf
mov
ret
aaa
xchg
aaa
cmpsl
sub
jno
lods
and
popa
notb
dec
pop
adc
jnp
movsl
dec
mov
mov
mov
sbb
mov
pop
jmp
inc
fiaddl
dec
out
adc
add
inc
repz
mov
aas
insl
pop
add
mov
loop
fidivrl
stos
lock
inc
push
sub
stos
test
int3
pop
xchg
lds
mov
subb
xchg
data16
jbe
nop
cld
push
mov
in
xor
dec
pop
movsl
sub
rcrb
cmpsl
push
add
pushf
divb
ja
dec
jno
xlat
imul
ret
sub
mov
sbb
ljmp
fs
jbe
jmp
xchg
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
mov
inc
test
jle
jo
xlat
and
lret
and
test
xor
fisubrs
cmp
pop
dec
lods
ret
daa
pop
fistl
repnz
pushl
push
pop
pop
jns
mov
xchg
mov
test
test
push
dec
arpl
pop
jae
push
sbb
xor
cmpsb
adc
imul
add
sub
xlat
add
sbb
sbb
fstl
pop
addr16
or
pop
xlat
stc
aad
sbb
gs
rcl
call
mov
pop
mov
sbb
pop
sub
adc
dec
out
test
pop
push
loop
mov
insl
adc
ds
imul
jo
icebp
out
pop
lock
stos
stos
repnz
std
jecxz
jl
sub
sbb
je
mov
inc
mov
jecxz
sbb
data16
cmp
data16
push
and
popf
je
push
xchg
xchg
xor
fwait
inc
mov
incl
test
lods
add
jecxz
xchg
xor
dec
setb
inc
push
fcoms
fimuls
mov
inc
push
aad
xchg
push
sbb
stos
pop
or
sbb
js,pt
stos
mov
das
sar
leave
dec
clc
add
jle
jnp
push
mov
lds
inc
jne
xchg
or
movsl
aam
xchg
je
ffreep
sbb
push
arpl
repnz
in
pusha
int3
addl
fwait
xor
mov
nop
bound
push
daa
xchg
jae
push
and
cld
daa
pop
and
and
outsl
sbb
sbb
imul
inc
out
or
ret
mov
cwtl
add
jns
pop
jl
adc
outsl
fldcw
or
ret
inc
outsl
mov
cmpsb
iret
mov
cld
mov
pop
push
loop
icebp
stos
jmp
sub
loope
cmp
stc
call
sub
mov
xchg
add
cmp
mov
das
mov
xchg
shl
dec
cmp
insl
or
js
push
stos
in
sbbb
dec
aaa
adc
dec
push
push
rcrb
and
add
jg
xchg
popf
inc
cmpsb
adc
push
mov
jne
pop
dec
sub
addr16
xchg
inc
mov
sti
push
inc
pop
pop
out
jg
fs
fisubs
out
adc
jb
dec
sbb
jne
out
lcall
in
mov
clc
std
pop
js
and
movsl
clc
sbbl
cmp
or
mov
subb
mov
push
into
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
mov
jo
jle
jo
sbb
insl
cli
xor
mov
cmp
and
cltd
rcll
inc
bound
adc
js
addl
adc
jnp
fisttpll
movl
test
jnp
rcrl
arpl
pusha
jmp
push
imul
sahf
cld
lods
fs
fsts
or
add
or
jbe
verw
rolb
lea
test
out
push
in
xchg
jmp
sbb
xor
and
xchg
fisttps
js
mov
dec
arpl
pop
mov
loope
mov
scas
test
es
or
cld
xor
popf
xchg
outsb
mov
ljmp
in
mov
jae
stos
or
sbb
scas
insl
repnz
or
inc
or
inc
dec
pusha
call
loop
inc
ret
push
aas
xchg
dec
xor
push
in
es
push
test
scas
movb
push
xchg
lods
call
sub
mov
mov
or
or
mov
xor
or
in
and
lods
adc
push
and
cmp
xchg
add
fxtract
push
cwtl
push
cmc
sbbb
sbb
xchg
fiaddl
mov
pushf
dec
or
dec
and
fisubrs
or
jmp
ret
clc
cs
pop
lea
out
pop
test
repnz
mov
out
mov
ljmp
mov
dec
cmp
faddl
mov
out
lret
scas
jo
push
mov
test
lods
repz
cmp
pop
push
lds
dec
loopne
mov
xor
fstl
lret
mov
in
and
and
pop
add
dec
imul
mov
les
dec
cmp
movsb
inc
pop
out
je
loop
lods
decb
aaa
xchg
mov
and
mov
hlt
or
push
and
jecxz
pusha
push
mov
orb
xor
jp
add
lock
or
out
lret
subb
mov
mov
push
push
popw
jg
push
sti
data16
add
pop
ja
mov
jl
icebp
mov
outsb
inc
or
push
and
cwtl
push
mov
enter
push
sbb
lret
xchg
push
xchg
je
in
sub
jl
add
cmpsb
test
in
jno
scas
sbbl
in
xchg
loope
dec
mov
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
push
xchg
lret
jo
jle
jo
ss
test
pop
mov
lods
ja
imul
push
xor
and
jmp
mov
cmp
xor
scas
cmpsl
mov
mov
cli
and
fisubrs
ss
mov
or
iret
cmp
and
mov
mov
mov
std
loope
js
mov
pop
dec
jmp
cmp
faddl
and
call
xchg
movsb
pop
fidivrs
filds
lds
addr16
sub
ljmp
sub
mov
lret
loopne
in
test
xor
inc
jp
and
sbb
imul
jne
mov
jecxz
test
mov
mov
in
mov
push
adc
add
std
lcall
add
cs
xchg
aas
ret
jne
sub
mov
loop
ljmp
xchg
ret
cld
sbb
gs
paddsw
ljmp
mov
repz
cmpsl
jl
fwait
jae
adc
rorl
call
adc
pop
mov
mov
rcrl
fs
jo
ret
mov
test
mov
stos
inc
and
add
cmp
push
lods
push
rcll
loopne
popf
movsb
out
iret
movsl
rorl
xlat
xchg
or
shl
push
xchg
and
into
hlt
std
push
clc
sub
add
aad
pop
repz
mov
xor
insl
lcall
aam
cmp
sbb
fwait
mov
jno
cld
sbb
insb
mov
fldl
imul
jb
mov
cmpsl
push
ljmp
lahf
fs
mov
ja
pop
sarl
mov
je
imul
mov
mov
lahf
or
insl
sbb
icebp
decb
mov
and
pop
xchg
mov
push
loopne
sub
xlat
pop
dec
inc
cli
add
sbb
sbb
repz
mov
repnz
andl
fs
enter
lods
add
hlt
sub
mov
jecxz
jb
fsubrl
inc
mov
add
add
jg
imull
and
cli
cmp
adc
jbe
stc
sti
insl
pop
sbb
or
inc
fdivl
lods
pop
pop
pop
test
add
xor
pop
outsl
or
push
sub
mov
mov
push
cwtl
out
fnstenv
add
xor
and
push
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
push
mov
adc
jo
jle
jo
xchg
xchg
sahf
xor
dec
ja
and
icebp
daa
sub
stos
les
mov
sbb
pop
push
cmpsb
hlt
andl
pop
lods
mov
es
cmp
xor
hlt
pop
mov
jb
fwait
ss
inc
fwait
push
addr16
and
out
mov
stos
jo
jecxz
mov
cmpsl
mov
sarl
in
push
ljmp
ljmp
xor
fiaddl
lahf
and
lret
insl
popa
test
mov
xlat
ret
lock
push
gs
push
test
cli
inc
adc
jb
xchg
imulb
lret
jb
mov
int
cmp
ja
lods
mov
mov
in
mov
in
das
sbb
mov
aas
addr16
inc
push
xchg
in
jb
mov
sub
cmp
addr16
call
subb
sahf
lret
adc
nop
adc
dec
std
xor
mov
pop
dec
mov
pop
jl
popa
inc
pop
sbb
imul
push
push
testb
xor
mov
mov
enter
add
dec
add
sbb
js
add
lock
shrb
xor
cmp
enter
xor
int3
ret
vandnps
mov
aad
subl
nop
cmpsb
inc
and
jl
cmp
xor
and
loop
clc
insl
loop
adc
ret
add
stos
addr16
xchg
jge
subb
push
add
fwait
mov
daa
add
cltd
xchg
sub
mov
and
pushf
daa
xchg
ljmp
mov
dec
inc
stc
xchg
pusha
nop
cmp
movsl
push
or
push
scas
push
push
enter
imul
adc
clc
push
fsts
aam
mov
shr
xchg
loope
jns
aas
cmpsl
sub
fadds
mov
and
or
sahf
push
inc
dec
jo
jl,pn
mov
cmpl
mov
psubusw
push
scas
sub
xor
xlat
pop
cmp
test
iret
or
sbb
jo
mov
insb
mov
xchg
push
jbe
lahf
dec
sbb
xor
pop
inc
mov
cld
daa
setnp
dec
insl
add
cmp
rolb
mov
out
push
mov
and
ja
mov
push
inc
test
lcall
fnclex
loop
mov
lods
pop
repnz
pusha
out
adc
imul
fwait
cmpsl
imul
xorl
push
xchg
into
cs
mov
xor
push
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
loop
xlat
pop
adc
mov
mov
add
jno
or
and
jb
jecxz
int3
mov
cwtl
cmp
out
and
sub
cld
xchg
aam
push
call
push
push
sbb
push
mov
pop
imul
or
repz
cmp
aas
jge
arpl
xchg
inc
gs
push
das
add
jo
shl
rclb
push
jmp
xchg
fxch
mov
cld
dec
xchg
stos
mov
pop
mov
jns
decl
repz
jnp
andb
aad
mov
mov
push
jo
xor
mov
sbb
pop
mov
inc
insb
or
cltd
jo
pop
lods
clc
stc
adc
mov
pop
in
dec
std
pop
add
dec
mov
mov
insl
or
cmp
into
hlt
dec
inc
into
and
or
repnz
xchg
xor
mov
cmp
outsb
pop
sar
aam
and
adc
je
divb
push
mov
push
mov
sub
repz
mov
xor
ja
push
push
testl
loop
pop
pop
xor
movsl
lock
popf
dec
pop
test
fidivrs
push
add
sti
in
mov
pop
lea
jle
nop
and
mov
inc
mov
jne
cmp
adc
pop
mov
pusha
hlt
and
mov
std
and
mov
fwait
cmc
shl
sub
cltd
loop
iret
bound
ror
adc
popa
ljmp
adc
xchg
push
mov
and
sar
mov
and
imul
bound
jne
mov
stos
aam
jge
not
dec
mov
add
adc
xchg
xchg
push
jbe
and
imul
scas
push
xor
sti
cmpsb
dec
enter
push
movsl
sbb
jnp
mov
and
daa
or
test
push
cmp
sbb
out
ja
add
int3
mov
cmp
movsl
pop
sti
dec
mov
xchg
add
insl
insb
pop
shlb
pop
notl
add
push
xchg
and
mov
cmp
fidivs
cmp
js
mov
outsl
loopne
vmovntps
pop
shlb
inc
xchg
dec
inc
arpl
sar
cli
xor
mov
sti
fmull
fs
sub
scas
or
sub
lea
sbb
add
adc
xor
rcr
bound
mov
imul
mov
sub
mov
lcall
fwait
cwtl
or
insb
cmp
imul
sub
xchg
jmp
cmc
std
fs
jno
mov
sub
jg
mov
test
mov
dec
shl
popa
xchg
stos
mov
lods
mov
pop
outsl
orb
and
mov
imul
xchg
jbe
in
aaa
add
jb
ljmp
adc
push
sub
pushf
cmp
cmp
gs
out
mov
sahf
mov
out
dec
leave
push
jg
xor
or
push
push
fsubs
xor
push
xor
in
xchg
cmpsb
push
inc
std
pop
dec
cld
cs
addr16
pop
inc
xchg
out
iret
icebp
lahf
sub
cmp
push
xor
adc
push
out
int3
fistpll
add
sub
adc
ja
lcall
ret
sub
and
jno
insb
jnp
xor
lods
out
loopne
xchg
and
mov
inc
xor
jle
jne
cmpsl
icebp
pop
lret
imul
out
mov
sub
out
pusha
rcll
dec
lea
mov
into
push
mov
sbb
insb
mov
inc
mov
imul
mov
sbb
mov
or
test
pop
arpl
pop
pop
fsubrl
arpl
dec
lcall
mov
sbb
jbe
inc
cmpsb
inc
int3
cmp
push
jnp
mov
aaa
push
fsubrp
daa
shrb
aam
cmpsb
cli
jns
in
popa
into
jbe
lods
push
xchg
das
call
insb
stos
jl
int
jne
jbe
mov
push
mov
add
mov
lcall
insl
push
sub
subl
cmpsl
and
push
and
xchg
roll
push
sbb
sbb
push
lods
dec
sti
cld
ljmp
movsb
outsl
lahf
popa
psraw
stos
mov
sbb
fsubrl
or
mov
ja
push
ljmp
adc
idiv
int3
gs
sarb
les
mov
sub
inc
mov
mov
mov
fldt
push
jmp
movsb
sbb
sbb
xor
aas
mov
push
xchg
xchg
andl
scas
and
add
jmp
cs
mov
dec
sub
or
jns
inc
popf
mov
movl
je
bound
cli
leave
jo
adc
mov
jne
jb
sbb
dec
xor
sarl
sbb
ss
rcll
dec
add
aaa
xchg
or
fwait
mov
or
das
sbb
or
jp
cmpsl
loope
jmp
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
or
fistps
out
sbb
jo
jle
jo
xor
ror
xor
lret
call
adc
jmp
mov
jno
icebp
jmp
ja
add
adc
inc
mov
jnp,pt
push
into
enter
jae
xchg
push
mov
push
push
mov
sbbb
gs
outsb
add
out
ret
mov
clc
xchg
cli
outsl
pop
and
addr16
adc
xchg
or
out
popf
cmp
adc
sti
cli
aaa
cmp
mov
out
jmp
push
sub
push
xor
mov
je
sahf
add
adc
xchg
divl
les
mov
bound
pop
xchg
outsl
jmp
orb
ficompl
clc
cmc
sti
dec
xor
mov
mov
and
mull
and
and
mov
or
xchg
mov
sub
sub
aad
sbb
mov
lods
sub
push
push
mov
xor
movswl
daa
adc
sti
pushf
push
lahf
xchg
cltd
jne
adc
ss
push
sub
icebp
push
add
or
xchg
je
push
fisubs
jp
jp
mov
xchg
adc
cmp
and
xchg
inc
pop
pop
das
fs
pop
rolb
cmp
mov
mov
js
mov
dec
insl
cmp
test
data16
dec
hlt
jns
pop
push
imul
in
push
xchg
cmpsl
shl
jae
pusha
loopne
adc
xor
movsb
mov
sbb
stos
xor
repz
inc
aad
dec
lds
fbld
or
in
mov
stos
dec
sub
sbb
mov
daa
dec
xor
fld
jo
in
dec
or
mov
lcall
fyl2x
cmp
bound
fsub
jae
repz
pop
movsl
pushf
rolb
testl
cmp
inc
js
mov
jp
mov
xchg
faddl
or
inc
shll
aas
lcall
jg
dec
mov
jg
xor
shlb
jmp
aam
testb
xchg
fsubrs
mov
and
push
cmp
mov
adc
movsb
push
sub
fisubrs
mov
mov
es
mov
push
sub
push
sub
rcrw
clc
push
or
rcl
orb
cmp
inc
mov
sub
xchg
jle
cld
dec
sub
push
xor
xor
imul
jg
das
push
xlat
out
aaa
jne
mov
lret
scas
mov
push
pop
dec
std
dec
xchg
aas
xor
imul
aam
or
les
jmp
inc
inc
jnp
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
test
rclb
mov
jno
loope
int3
imul
aaa
imull
push
cld
xor
jae
jge
lods
sti
adcb
dec
xlat
testb
loopne
out
aaa
mov
cmp
nopl
add
cltd
test
ret
xchg
inc
jl
and
mov
pusha
cmpsl
lods
xor
fiadds
fistl
hlt
loope
out
sbbb
pop
cmp
in
add
movsl
out
ret
pop
pop
push
sar
mov
sbb
add
push
in
or
jnp
lea
sbb
daa
xor
dec
push
sub
add
outsl
xchg
mov
mov
cmp
mov
mov
je
push
out
fists
mov
mov
sbb
pop
inc
orb
xor
xor
xor
mov
or
ja
std
int
jl
js
cwtl
cmp
sbb
inc
ja
mov
rorb
or
mov
jae
mov
mov
pop
mov
leave
pop
adc
xchg
rcrb
loope
pop
subb
push
mov
or
lret
aas
dec
das
inc
ret
sbb
pop
mov
mov
leave
push
push
aam
mov
fdivrs
or
xor
pop
jo
inc
push
xchg
sub
xchg
mov
jae
lahf
and
inc
push
jmp
sbb
jbe
and
push
sub
cwtl
lea
insl
roll
sub
adcl
mov
mov
fistl
out
sub
out
insl
pop
pop
addr16
out
sbb
test
pop
mov
ja
ret
push
sub
testl
mov
xchg
mov
cs
test
movsb
sub
xchg
xor
sub
cmp
aaa
dec
mov
fwait
vmread
jge
jno
cld
adc
and
mov
cmp
xchg
or
rep
daa
cmp
mov
mov
sarl
mov
andb
arpl
rcl
xchg
mov
sbbl
push
pop
xchg
sti
test
xchg
xchg
xor
lods
jl
cmpsl
lahf
ficomps
fsubs
lods
pop
int3
jmp
mov
add
aad
dec
enter
push
push
cs
add
mov
mov
cld
xor
sbb
xor
xchg
cmp
cmp
pop
inc
sub
cmc
test
stos
pop
insl
or
ss
in
stos
mov
daa
jge
add
loop
int3
ljmp
call
xor
mov
or
cmpsb
fimuls
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
cmp
divl
jg
mov
sahf
inc
lret
inc
dec
jmp
dec
cmp
mov
fwait
pop
mov
jnp
adc
mov
mov
push
fs
arpl
clc
xor
mov
sbb
push
add
mov
out
mov
xor
xor
mov
ret
or
shll
push
push
push
jo
jne
lret
jcxz
call
adc
sbb
call
sub
andl
and
in
jae
dec
fldenv
pop
movb
xchg
shlb
mov
in
iret
pop
mov
pop
les
iret
mov
ljmp
mov
into
shll
pop
leave
mov
fsubl
push
lcall
inc
or
das
or
jb
inc
lods
sahf
inc
mov
test
int
push
imul
xchg
jo
outsb
push
push
hlt
sbb
inc
pop
pusha
jo
inc
dec
xor
xor
scas
inc
mov
int
mov
mov
xchg
or
dec
ss
fs
in
dec
fwait
inc
gs
out
gs
test
adc
ljmp
cld
jmp
rorb
divb
imul
in
xor
arpl
jecxz
cmp
dec
out
adc
aaa
cmpb
stos
mov
fdivs
jmp
jnp
mul
fists
pop
sub
mov
dec
jle
leave
jnp
iret
test
lahf
pop
mov
test
xchg
sub
sbb
stos
in
inc
ja
adc
mov
rclb
shrl
mov
decb
insb
ss
push
mov
insl
mov
lea
sub
das
fidivl
xor
sbb
sbb
mov
int
push
xor
outsb
pop
sub
adc
xchg
fsubs
stos
clc
cmc
lds
movsb
cmpsl
loopne
cmp
mov
in
xchg
lret
pop
adc
push
addr16
adc
lahf
xor
cmp
jnp
cmc
xchg
cmp
popf
add
in
pop
mov
call
pushf
aas
jecxz
test
mov
sub
and
std
dec
cmp
cmpb
jecxz
scas
psllq
cltd
jbe
push
mov
mov
dec
sbb
adcl
jo
lods
pop
iret
gs
mov
lret
das
dec
scas
jbe
push
cmp
inc
fstpl
mov
and
scas
jg
adc
mov
inc
or
sub
cmpsl
int
fldcw
adc
sbb
xchg
push
test
daa
mov
mov
bound
inc
call
sbb
hlt
jno
rcrb
rclb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
movsb
out
mov
jle
jo
inc
mov
cmc
adc
sarb
data16
mov
arpl
lock
sbb
add
imul
loop
sbb
rorl
dec
pop
pop
push
inc
mov
sub
dec
idivb
das
mov
mov
dec
sarb
movsb
cltd
mov
sbb
ljmp
adc
and
ret
sbb
shld
addr16
cmp
or
cmp
movsl
inc
inc
adc
leave
repnz
jl
mov
xchg
or
mov
lret
push
in
lea
pop
and
scas
mov
xor
pop
mov
test
sbb
sti
popa
sub
cltd
mov
dec
mov
push
sbb
mov
insb
mov
mov
add
notl
inc
xchg
pop
add
add
data16
in
das
jb
xor
daa
push
lods
cmpsl
es
push
andb
loop
jge
rcll
xchg
pop
nop
lods
fstpt
gs
lock
mov
mov
adc
cwtl
cmp
rcrb
in
out
add
jmp
cmp
mov
addr16
in
adc
or
popa
mov
fsubl
mov
jnp
idiv
scas
mov
cmp
pop
ss
dec
fwait
lds
push
jns
fwait
sbbl
into
gs
or
push
mov
lret
call
out
in
sarl
pop
pop
add
rolb
je
lahf
repnz
jns
jp
mov
inc
scas
scas
adc
mov
and
cmp
mov
enter
and
xchg
mov
mov
mov
fldenv
movsb
inc
stos
sbb
add
es
stos
arpl
lods
mov
inc
pushf
cmp
sbb
stc
fs
ljmp
push
push
lahf
js
insl
pop
or
sub
int
adc
rclb
imul
mov
mov
mov
fisttpll
or
lret
int3
cltd
jecxz
cmc
xchg
cmp
or
int
pop
add
loopne
jo
cmp
cmp
dec
mov
dec
std
cwtl
imul
sbb
popf
pop
out
popf
adc
ror
push
jl
imull
aam
jb
ds
aam
mov
jb
repz
or
insl
fcompl
test
cmc
and
and
stos
add
adc
andb
inc
loope
lahf
sbb
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
