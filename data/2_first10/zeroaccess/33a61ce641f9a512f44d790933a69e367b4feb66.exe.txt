push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
mov
orl
orl
sbbl
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
je
push
push
push
call
orl
orl
adc
xor
neg
neg
cmpl
movl
mov
mov
movl
jmp
movl
jg
push
call
xor
adc
movl
mov
add
add
not
mov
sub
mov
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jbe
push
pushl
push
push
pushl
call
mov
mov
sub
and
sbb
sub
adcl
orl
or
orl
mov
mov
sub
or
lea
cmpl
mov
movl
not
mov
jmp
mov
not
jge
push
push
push
push
push
push
call
or
adc
sub
incl
mov
mov
sub
or
and
xor
xor
and
adc
mov
mov
cmpl
movl
mov
not
mov
jmp
mov
jle
push
push
push
pushl
call
orl
xor
mov
sbb
sub
mov
and
mov
xorl
xor
or
sub
mov
inc
mov
xor
add
mov
mov
add
mov
mov
addl
shrd
shr
mov
mov
xor
xor
addl
or
mov
add
mov
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
pushl
push
push
push
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
movl
or
movl
movl
movl
add
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jle
push
pushl
push
push
pushl
call
andl
notl
andl
orl
addl
sbbl
mov
subl
shl
xor
mov
xorl
push
sbbl
push
push
push
sbbl
call
mov
or
mov
mov
or
mov
xor
mov
mov
cmpl
mov
movl
mov
notl
jmp
movl
movl
jl
push
push
call
adcl
sub
adcl
negl
and
or
movzwl
add
mov
sbb
add
sub
sub
mov
xor
or
adc
lea
subl
mov
inc
mov
andl
or
and
adcl
mov
adcl
or
xorl
xor
movl
cmp
movl
jne
and
mov
or
mov
shrd
adc
shr
notl
mov
sbb
mov
shl
subl
xor
xor
or
mov
movl
cmp
movl
jne
xor
mov
mov
addl
xor
mov
sbbl
mov
mov
add
mov
shrd
andl
mov
mov
addl
xor
xorl
shr
mov
adc
mov
xor
movl
or
movl
shl
sub
mov
mov
subl
mov
add
mov
mov
add
mov
sbb
mov
shrd
cmpl
not
not
mov
mov
jmp
movl
movl
ja
push
push
call
xor
add
and
mov
movzbl
adc
mov
sbb
and
movzbl
sub
cmpl
mov
mov
mov
jmp
movl
jge
pushl
call
sub
mov
mov
or
subl
or
neg
adcl
shr
sbb
mov
mov
sbbl
xor
xor
shl
adc
xor
or
add
mov
mov
andl
jmp
mov
imul
call
adc
pop
adc
scas
pushl
fisttpl
lds
lods
xor
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
int3
mov
mull
or
dec
xchg
imul
cmp
rolb
jb
fst
fwait
pop
sub
xchg
pop
mov
push
mov
addb
popf
cmpsl
mov
cmp
aas
ret
push
test
cmpsb
push
mov
sbb
stc
ret
movsl
inc
jnp
fsubrs
jo
nop
push
fcomi
fists
js
test
in
push
rorb
cmc
and
adc
mov
sub
push
jb
sbb
cmp
call
repnz
jmp
pop
jne
clc
sub
jbe
push
cmp
jo
push
sbb
sbb
aas
out
adc
push
sahf
and
aad
or
stos
sbb
std
sub
xchg
xchg
or
jo
cmpsl
test
mov
push
jmp
mov
mov
out
push
cmp
pop
and
inc
adc
add
or
loopne
inc
inc
lds
in
mov
sbb
loope
mov
lahf
fwait
test
pusha
inc
xchg
lret
cmp
dec
nop
push
push
cmp
push
dec
lock
sub
or
push
jg
inc
mov
adcl
inc
out
mov
rorl
push
adc
arpl
std
negb
sub
dec
sub
or
sbb
mov
mov
stc
dec
xchg
lret
jecxz
cli
jmp
mov
pop
sbb
call
aaa
hlt
cmpsb
dec
test
mov
out
arpl
or
lds
xchg
dec
or
mov
movsb
lret
cwtl
cwtl
insb
mov
jecxz
gs
add
outsl
lods
pusha
cli
push
stc
in
outsl
in
ret
scas
pop
rcrb
mov
fstpl
dec
push
mov
fyl2xp1
add
icebp
jmp
mov
das
xlat
movsb
pop
sub
inc
add
iret
shll
push
push
or
ja
out
xor
dec
sbb
aas
fistps
loope
and
pop
imul
test
xchg
add
jmp
sub
mov
test
loop
in
push
mov
push
fwait
jle
dec
mov
add
inc
mov
cmp
ja
jg
xchg
and
out
cmp
push
dec
clc
mov
dec
jb
sbb
mov
sub
sahf
push
jne
insl
fcmovnu
jl
insb
ficoml
sub
data16
push
xchg
ja
cltd
movsl
sub
cmpsl
sub
and
mov
daa
jle
ss
in
and
iret
sub
lcall
scas
loop
sbb
cmc
enter
bound
mov
push
adc
jmp
cmpsl
out
or
lret
mov
sub
clc
icebp
je
xor
jle
jae
mov
mov
jns
das
andnps
xor
ds
xchg
pop
clc
test
jb
cmp
inc
jae
push
cmpsb
loopne
jb
and
push
push
stos
test
negb
jmp
out
xor
pop
int3
xor
std
out
push
pop
test
add
leave
outsl
and
and
xor
decl
inc
ffree
or
push
add
or
pushl
scas
pop
push
icebp
or
cmpsb
adc
int3
js
out
jl
mov
inc
and
inc
jle
mov
out
push
inc
out
pop
fidivrl
cld
ret
iret
jno
dec
clc
xchg
inc
mov
pushf
cmp
mov
adc
add
ljmp
jmp
repnz
mov
xlat
shl
cmpsl
jp
loopne
cmp
and
jg
cmpb
dec
lret
xor
ficoml
jg
and
ficompl
mov
mov
cwtl
inc
pop
out
or
ffree
pop
movsl
movsl
push
mov
jo
mov
shl
enter
push
add
cmp
enter
xor
js
inc
shl
loop
xchg
pop
hlt
imul
adc
aad
push
mov
repnz
sbb
cld
push
or
xchg
xor
xchg
lcall
push
and
mov
orl
mov
xchg
repz
cwtl
lea
pusha
xor
loopne
jb
mov
dec
push
popf
xor
inc
or
sbb
addl
int
fwait
mov
sbb
jno
jle
push
add
cmpsb
lods
lret
paddw
in
test
rolb
xchg
push
adc
fmull
repnz
mov
cmpb
push
ficomps
cs
fldl
popf
lods
ljmp
sub
into
ss
cld
push
js
shlb
sub
xchg
sub
daa
lea
aam
call
ror
les
mov
mov
mov
cltd
divb
in
test
pop
jb
addb
push
cmpsl
push
lods
std
js
imul
imul
test
lods
push
mov
int
cmp
outsl
movsl
je
lret
push
xchg
mov
jae
xchg
leave
pop
add
jbe
jbe
out
das
xor
imul
outsb
orl
xlat
sbb
xchg
and
dec
in
ljmp
push
outsb
push
lret
and
jmp
mov
sub
iret
fistpl
lahf
xor
xlat
ret
mov
add
dec
push
push
loopne
fnstenv
xchg
repnz
test
mov
je
push
cwtl
iret
std
cwtl
imul
mov
cli
inc
pop
int
es
into
rcr
push
nop
lret
in
ljmp
aam
or
push
popf
dec
loope
inc
call
int3
jecxz
movsl
sub
in
in
jl
scas
lds
xchg
add
mov
mov
mov
jo
gs
cmp
push
call
movsl
sub
jnp
pop
in
dec
mov
or
cmp
test
inc
inc
mov
lea
jle
dec
adc
imul
pop
cwtl
pusha
or
and
test
orb
mov
sbb
add
mov
insl
jle
dec
shlb
mov
push
adc
dec
xor
sub
mov
iret
shr
in
cmp
lds
rcl
cwtl
or
cmp
fdivl
sub
adcl
fildl
je
sbb
loope
push
test
fcmovnbe
or
dec
mov
pop
cmc
cmp
add
test
mov
sbb
add
inc
cmp
push
add
mov
or
sahf
or
outsl
push
sbb
xor
mov
dec
push
cmpsl
pop
adc
pop
or
out
xor
xchg
rcrl
mov
imul
xor
cmp
int3
xor
test
ficoms
lcall
mov
push
addl
cmp
inc
into
imull
mov
jns
pop
mov
stos
inc
arpl
add
mov
mov
rcl
cmpsl
jp
outsb
inc
arpl
jge
xchg
pop
sub
movsl
rclb
lock
addb
fists
sbb
xor
xchg
bound
add
xor
out
leave
movsb
popf
orb
imul
loope
cs
es
xor
push
cmp
pop
lcall
inc
mov
mov
mov
mov
cli
or
inc
jns
and
shrl
add
xor
sarl
nop
inc
xor
orb
ret
stos
stos
outsl
fcmovnu
outsb
mov
cwtl
dec
lea
push
xchg
pop
ja
cli
icebp
fs
fcomps
loop
mov
xor
xor
scas
mov
mov
push
aaa
mov
int
call
or
imul
rcll
lcall
jns
fsts
jns
lock
add
in
lret
or
sub
or
push
ss
xchg
or
or
loope
mov
lods
adc
jno
mov
adc
out
fs
arpl
and
orb
xchg
or
or
mov
cmpsl
and
in
aam
cmpsl
add
jns
test
or
xchg
sar
orb
dec
xchg
rolb
ds
cwtl
data16
arpl
xlat
insb
in
into
jb
mull
add
sti
xlat
jle
mov
std
ja
xchg
popa
dec
cmp
int3
imul
cs
adc
mov
stos
xor
or
clc
dec
into
adc
gs
sahf
mov
jecxz
sub
pop
xlat
sbb
jb
lea
in
cli
pop
fmuls
pop
push
dec
cld
pop
jno
cmpb
lock
daa
movsl
aas
cmpsl
jne
adc
out
sub
lahf
in
xchg
daa
mov
push
jle
imull
adc
addl
mov
popl
jno
fiaddl
shll
in
xor
das
insl
hlt
sub
enter
xchg
adc
inc
stc
jp
mull
sbb
aaa
es
fistl
xchg
push
inc
dec
push
mov
or
rorl
mov
lcall
xor
stos
fidivs
into
movsl
push
cmpsl
cmpsb
mov
lds
mov
scas
ret
xchg
push
dec
popl
xorb
shr
push
push
mov
mov
cmp
je
sahf
xchg
jge
lock
pop
movsl
movsb
sub
stc
xchg
sbb
notb
insl
mov
jns
cmp
stos
icebp
cltd
pop
insb
imul
mov
out
fs
in
ret
enter
xchg
dec
fstpt
jnp
push
insl
sbb
adc
sahf
int
nop
mov
mov
test
or
in
inc
loopne
add
out
lret
xor
sub
pop
out
in
lahf
pop
sbb
jecxz
inc
jp
out
scas
add
sarb
int
cwtl
int3
fisubl
sbb
sbb
shl
xorb
test
shlb
sbb
repz
sti
enter
mov
sub
mov
cmpb
faddl
mov
das
lea
lret
xor
sbb
negb
call
mov
mov
inc
mov
sbb
or
cmp
push
inc
shll
mov
pop
in
pop
push
pushf
pop
enter
sbb
xor
jl
lret
mov
cmpsb
popa
nop
push
inc
jo
inc
pop
inc
add
gs
xlat
cli
cmp
adc
lock
rcr
sub
add
shl
sub
xchg
or
push
xlat
mov
shll
push
pop
xchg
adc
jbe
testb
fsubrl
scas
fs
or
scas
popf
and
inc
mov
pop
cmp
lods
jp
xor
iret
push
movb
push
ss
sub
bound
xor
inc
mov
pop
jbe
clc
and
xor
cmp
mull
jmp
cmc
sbb
pop
cmpsl
push
es
push
cmp
fldcw
lret
and
xchg
cld
ljmp
jg
je
jbe
sub
testl
and
mov
lea
pop
mov
inc
test
insl
pop
test
jns
mov
jno
fsts
adc
loope
jb
insb
outsb
sbbb
inc
adc
push
jo
xor
insb
and
aad
cmp
rcll
lea
sbb
dec
push
cli
lods
pushf
push
xchg
call
and
loop
xchg
mov
loopew
mov
shl
sti
movb
nop
add
imul
inc
and
lret
cwtl
jns
call
in
rorl
sbb
sub
inc
xor
sbb
fcmovu
push
pop
fisubs
sarb
inc
repnz
je
xchg
lret
mov
xor
loopne
mov
dec
lods
test
xor
scas
mov
mov
idivl
cvtdq2ps
aad
and
inc
mov
xchg
repnz
repnz
out
movsl
roll
fistl
add
fldcw
jno
mov
fidivrl
xchg
add
inc
ds
addr16
and
enter
hlt
xor
es
add
mov
cmp
sti
sub
lahf
mov
sbb
icebp
or
add
pop
sub
pop
sarb
lret
or
lods
cmp
push
cli
xchg
fistpll
imul
dec
sub
mov
mov
arpl
in
and
cmp
inc
pop
in
push
je
dec
xchg
outsb
jecxz
inc
out
xrelease
hlt
mov
xorl
insb
adc
pop
out
cmp
push
sbb
test
je
pop
andl
adc
aad
pop
push
or
dec
loop
loope
in
shll
imul
pop
sub
push
jns,pt
and
iret
repnz
bound
xor
daa
cmc
jbe
ficompl
push
adc
cs
xor
and
addr16
aas
push
add
sub
mov
mov
mov
sbbb
sbb
xchg
lret
mov
out
sbb
out
inc
xchg
test
fs
sbb
push
test
ds
aad
lea
ds
xchg
ja
lods
in
jp
mov
sti
imul
xchg
push
xor
push
inc
and
adc
xchg
loop
shll
sahf
lahf
sbb
in
xchg
fwait
call
mov
or
addr16
lcall
sub
xor
sub
push
std
repz
push
pop
popa
adc
lods
stos
pop
ja
ffree
sbb
into
fs
and
push
cli
mov
jl
std
mov
cld
lods
insb
or
mov
pop
lods
adc
add
sbb
pop
popf
nop
sahf
sub
cld
pop
inc
mov
cmp
loopne
mov
dec
push
leave
sbb
int3
out
lds
mov
fs
lea
jmp
test
and
scas
jno
jecxz
mov
push
jae
sarl
sbb
push
popa
adcb
outsb
mov
aaa
or
lret
stos
shlb
out
das
rclb
test
mov
sbb
dec
and
test
lret
into
roll
js
cmp
sub
fcomip
pop
rcl
pop
mov
stc
xchg
mov
mov
subl
xlat
cmpsl
mov
xchg
ret
fdivrl
outsb
mov
loopne
mov
and
dec
repz
bound
daa
add
mov
filds
or
rclb
cmp
lret
or
add
dec
pop
imul
ficoml
divb
scas
in
test
push
int3
rorb
divb
dec
cmpsl
mov
mov
enter
lea
pop
sbb
mov
mov
jae
sbb
call
cli
sahf
fisttpll
mov
jmp
xor
js
sarb
and
pop
stc
push
push
stos
jl
in
xor
add
pop
jae
mov
pop
cmp
lret
outsb
insb
les
call
add
fs
and
xor
push
jb
jbe
mov
mov
jle
inc
push
push
nop
mov
cmp
or
daa
int3
pop
push
jns
loop
in
sbb
pop
adc
dec
jl
push
xchg
dec
out
mov
sbb
push
dec
test
xor
push
das
insb
aas
je
js
sub
test
inc
mov
cmp
mov
out
sbb
popa
sub
mov
sti
negl
ss
adc
xor
cltd
inc
mov
stos
jne
adc
inc
inc
push
movsl
mov
cmp
push
test
sbb
sbb
lcall
out
and
pusha
sbb
stos
mov
adc
into
adc
xor
jbe
jbe
out
in
push
mov
push
xor
and
lods
sti
xchg
cmp
and
adc
lcall
ja
add
lea
mov
push
or
pop
sahf
and
push
mov
push
jmp
jg
inc
hlt
icebp
sbb
test
sti
jns
mov
in
loopne
xorb
fwait
mov
adc
mov
fisttpll
push
arpl
cmc
mov
js
les
loopne
pop
sbb
addr16
and
adc
adc
scas
lahf
dec
pop
outsb
mov
aaa
cld
aas
xor
xorl
fmuls
test
nop
out
lods
lret
push
imul
out
pop
and
inc
dec
push
adc
xor
fs
test
int
popf
out
pop
inc
fmuls
adc
in
add
mov
pusha
sbb
ljmp
ret
nop
sbb
loop
test
inc
push
sbb
popa
lret
cmp
push
in
lahf
mov
mov
fstps
add
outsl
push
adcb
push
mov
sar
call
xor
test
cld
xor
repz
jae
testb
mov
xchg
fwait
add
jmp
mov
cld
mov
dec
push
dec
mov
and
push
jo
je
fisubl
nop
push
inc
in
lods
rolb
pop
fcoml
push
adc
and
sbb
jp
push
sub
lea
into
testl
xchg
aad
repnz
jmp
icebp
add
inc
mov
inc
sbb
movsb
add
addb
lea
add
push
cmp
sub
jns
out
ror
icebp
push
sarb
mov
repz
add
push
jg
and
adc
xchg
mov
in
push
fsubrp
sbb
bnd
jle
or
lcall
rol
cmpsb
mov
test
push
repz
xorl
lret
arpl
divl
sub
out
xor
mov
xor
mov
dec
xchg
enter
test
fisubrl
xor
outsb
xor
or
xor
xchg
jo
mov
test
adc
negl
in
xor
lods
add
pop
inc
mov
loop
jmp
mov
mov
xor
push
loop
idiv
mov
push
addr16
jne
mov
mov
jecxz
xchg
jecxz
mov
pop
xchg
sar
popf
mov
clc
sbb
xchg
cld
loop
mov
push
iret
loope
add
mov
pop
fstl
adc
add
adc
in
mov
int3
sti
and
test
push
popf
mov
pop
push
add
fcomps
mov
iret
loop
imulb
inc
daa
push
std
mov
pop
sbb
std
mov
xor
add
inc
xlat
jns
leave
stc
jmp
sub
or
aas
sbb
aad
cmp
pop
popa
push
lcall
mov
adc
sub
inc
adc
jle
stos
inc
rcr
rolb
sahf
push
aaa
js
insl
adc
jns
push
xor
or
sahf
stos
push
lods
mov
not
and
ds
push
push
les
in
enter
xor
sbb
icebp
leave
pop
lret
xor
sub
roll
pop
jg
and
jb
je
xchg
add
aas
sub
pop
ds
in
add
mov
lods
jne
push
fmull
lods
jp
scas
pop
out
stos
xor
scas
xchg
in
adc
add
xor
pop
and
movb
jge
xor
inc
mov
mov
inc
repnz
loop
xchg
js
ret
adc
data16
add
dec
movsl
and
mov
push
fscale
aas
iret
fnstcw
jo
or
and
inc
stos
ret
adc
sbb
mov
negb
loop
jno
into
sub
add
lret
out
inc
xor
lods
xchg
add
test
pop
sbb
inc
shr
pop
lret
jl
push
es
inc
dec
test
lods
push
mov
or
add
or
cmp
mov
pop
mov
add
dec
xor
aaa
xor
push
loopne
lea
sub
pop
cltd
mov
sahf
push
inc
daa
mov
xchg
fwait
cltd
mov
dec
shll
aas
mov
jb
lahf
mov
js
jno
and
dec
cmp
inc
std
sub
mov
jb
movsb
jg
cli
stc
fidivl
dec
out
xor
xor
or
in
add
jno
mov
mov
movsl
mov
dec
mov
call
jle
nop
jg
into
xor
mov
dec
jp
jge
arpl
sti
xchg
loope
gs
inc
divl
int
sbb
lcall
rcl
sbb
movsb
les
dec
ficoml
push
sbb
scas
pop
in
sti
hlt
xchg
sub
and
mov
kunpckwd
out
or
cmp
sub
ja
lea
mov
cwtl
les
test
mov
xor
in
std
es
add
push
add
xchg
jge
fs
sub
sub
push
fdivl
pusha
jnp
adc
fs
pop
push
mov
daa
pop
ret
roll
testb
call
adc
inc
ret
or
fcompl
adc
pop
adcb
xorl
js
add
xor
inc
in
cld
push
adc
and
push
cmpsb
lods
lcall
cmp
daa
jb
aas
mov
pop
and
sbbl
sub
cmp
dec
outsl
push
inc
adc
mov
movsb
clc
push
jne
push
movl
mov
push
jp
repz
jg
cwtl
call
jbe
pop
cli
dec
fstpl
inc
stc
mov
mov
pop
scas
push
stc
cltd
outsb
les
jge
jb
shl
fadd
lea
rclb
cmp
mov
cltd
cwtl
inc
inc
lock
mov
adc
js
push
sbb
daa
repz
sub
pinsrw
fiaddl
in
adc
mov
jns
shll
dec
pop
lds
jae
adc
sti
inc
jge
and
ret
into
ret
popa
imul
insl
add
ds
jnp
ja
xchg
jbe
or
xchg
mov
stc
add
cltd
loopne
mov
mov
xor
data16
iret
nop
cmp
movsb
add
xchg
icebp
jp
outsb
dec
cmc
or
popa
add
test
mov
faddp
sbb
mov
mov
les
or
or
cmpsb
popa
mov
mov
rcrb
scas
les
loopne
loopne
xchg
push
dec
idivb
cwtl
in
mov
sbbl
add
arpl
push
jecxz
pop
sbb
pop
push
push
and
std
hlt
jecxz
mov
and
addr16
cwtl
add
pop
loop
or
gs
adc
push
mov
mov
xor
fisttps
ds
inc
incl
mov
andb
lea
xor
mov
inc
sub
jp
popa
outsb
or
mov
xchg
divb
iret
adc
dec
push
inc
sbb
outsl
sub
std
popa
roll
inc
dec
pop
cmc
xchg
aaa
ljmp
mov
in
inc
std
cmpsl
gs
in
sub
jnp
jns
adc
lods
test
cwtl
jb
inc
lods
pushf
orb
lods
xchg
pop
xorb
inc
xlat
mov
xor
jmp
mov
jbe
sbb
jno
jp
jne
inc
cmpl
in
in
and
mov
jecxz
dec
sti
arpl
sahf
cs
mov
dec
xor
jns
jbe
or
dec
pop
sbb
pop
add
mov
lods
mov
mov
mov
les
addr16
sti
fsubrs
jae
adc
movsb
decl
inc
add
lret
push
stos
xchg
idivb
push
insl
je
sub
notb
xor
jge
cmpsl
addr16
jb
inc
mov
dec
push
jp
filds
inc
cwtl
inc
cs
outsl
insb
popa
adc
xchg
sbb
xchg
mov
and
mov
add
loope
jbe
mov
leave
sub
inc
in
mov
lret
aad
adc
jnp
push
enter
fists
jb
aas
dec
rcll
cmpsl
shl
scas
test
or
cmp
cmp
push
fwait
mov
sub
or
sbb
xor
loopne
cmp
xchg
xor
test
insl
jno
mov
lret
cs
add
insl
ret
jb
insl
inc
out
sub
pushl
lcall
fcmove
add
insl
sub
fcoms
lea
push
and
aad
into
xor
cli
cltd
ds
and
mov
lock
jno
pop
mov
sub
and
js
xchg
test
and
mov
bound
xchg
cmp
movb
sub
xor
loope
cwtl
adc
inc
dec
psrld
faddl
push
cmpl
shrb
xchg
dec
stos
clc
xor
xor
adc
or
arpl
js
sbb
add
or
pop
sbb
sub
dec
pop
in
es
mov
test
repnz
dec
jl
add
insb
arpl
adc
dec
jno
das
inc
push
sti
icebp
fdivrs
jmp
and
adc
push
pop
push
sbb
in
pop
push
sbb
cmp
loop
les
xchg
test
or
pop
xchg
int
stc
sub
mov
lods
imul
arpl
and
xchg
mov
les
jne
and
xor
xchg
xor
adc
adc
xchg
mov
pop
ja
sub
leave
test
pop
push
cmp
dec
sbb
mov
aad
pop
ljmp
ret
jmp
and
sahf
lods
jne
loopne
push
pop
int
pop
adcl
and
ja
repz
aad
xchg
lret
xor
or
add
bound
dec
addr16
mov
cmpsl
repnz
or
and
xor
std
mov
push
fmulp
mov
inc
pop
adc
adc
aam
addb
test
lds
push
push
fistpl
or
ret
das
test
xchg
daa
test
xor
call
rclb
xlat
push
xchg
shlb
ret
xor
pop
dec
cmp
xchg
test
inc
cld
mov
aad
test
cli
aaa
cmp
adc
notl
fldln2
int
mov
push
inc
inc
and
push
fs
outsb
sbb
xchg
movb
imul
add
imul
cmpsb
repnz
sub
mov
cmpl
mov
pop
add
inc
jnp
jne
mov
cmp
cmp
aaa
data16
jae
xchg
and
adc
jne
or
std
pop
pop
adc
sbb
jne
dec
push
pusha
pushf
adc
inc
loopne
imul
je
xchg
pop
pop
mov
jle
xor
push
or
test
out
incl
and
mov
sub
sub
jno
test
ds
scas
push
fwait
mov
push
movsb
cltd
sub
xchg
popa
imul
clc
xor
cmp
jge
fistpl
jecxz
lock
add
pusha
mov
dec
add
add
les
jl
mov
dec
and
in
test
andb
cmp
inc
pop
mov
push
movb
shrb
test
xchg
xchg
push
adc
inc
inc
iret
test
mov
fldcw
or
sub
repnz
xor
adc
sbb
test
aas
mov
xchg
cmp
mov
movsb
inc
insb
xor
clc
push
sbb
jnp
sub
dec
sti
xchg
mov
pushf
push
jle
xchg
repz
sub
sbb
insb
jmp
imul
ljmp
les
rcrb
dec
sbb
adc
or
mov
add
mov
cmpsl
mov
dec
ficompl
pusha
popa
mov
jmp
negl
aaa
dec
dec
sarb
ret
out
lods
data16
inc
popf
push
push
add
das
in
int3
popa
dec
orl
mov
inc
mov
add
into
adc
in
push
pop
lds
repz
and
divb
ja
add
or
stos
push
adc
dec
lcall
js
dec
bound
test
insl
in
call
jl
lret
push
xlat
fsubl
test
adc
sbb
jmp
insb
cmp
orb
mov
mov
pop
cld
mov
mov
mov
subl
jbe
cmpsb
aaa
cmpsb
repnz
rol
cli
ficompl
fwait
mov
enter
subb
or
iret
sub
mov
dec
mov
mov
push
lods
jns
adc
xchg
stos
adc
jnp
and
in
xchg
jno
scas
push
ss
fiadds
fnstcw
aaa
push
dec
ljmp
jns
inc
add
mov
xchg
mov
dec
cmpl
jne
nop
outsl
dec
flds
mov
adcl
movsb
fs
mov
cmp
mov
ret
fistps
sub
lcall
add
or
mov
fwait
outsb
adc
stc
movb
or
pusha
mov
cs
mov
xchg
push
jno
mov
test
scas
jp
cld
add
lods
roll
shr
sbb
mov
mov
mov
orl
xor
xor
or
orl
shl
addl
lea
or
mov
cmpl
mov
mov
jmp
mov
movl
jl
pushl
pushl
push
push
call
sbb
movzbl
xor
mov
addl
sbbl
mov
sbbl
shrd
andl
shr
xor
mov
and
mov
mov
sbb
xor
movzbl
or
mov
mov
subl
xor
or
orl
shl
imul
mov
cmpl
mov
mov
movl
jmp
notl
jne
push
push
push
push
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
movl
or
and
sub
subl
sub
sbbl
mov
adcl
shrd
mov
mov
xor
decl
shr
cmpl
movl
movl
jmp
movl
movl
jl
pushl
push
push
call
adc
or
or
sbb
xor
neg
sbbl
mov
mov
sub
mov
mov
xor
or
negl
shl
xorl
sub
mov
movl
cmp
mov
mov
movl
jg
and
mov
mov
xorl
shrd
mov
xor
mov
xor
shl
xor
or
shr
cmpl
mov
movl
jmp
movl
movl
jb
push
push
pushl
push
call
neg
xorl
neg
xorl
inc
andl
adc
mov
addl
mov
cmpl
mov
mov
jmp
movl
jne
pushl
call
adc
sub
sub
and
sbb
mov
cmpl
mov
movl
jmp
movl
ja
pushl
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
shrd
shr
mov
mov
cmpl
mov
not
jmp
movl
movl
jl
call
dec
movzwl
sbb
and
xorl
movl
add
mov
xor
movl
xor
adcl
or
xorl
shl
subl
imul
adcl
sub
movl
jmp
movzwl
sbb
mov
mov
cmpl
movzwl
mov
movl
not
jmp
movl
movl
jg
push
push
push
pushl
pushl
push
push
push
pushl
call
adcl
sub
sbb
adcl
xorl
not
xor
xor
sub
mov
decl
shrd
mov
decl
mov
xor
xorl
shl
decl
xor
or
addl
shr
mov
mov
mov
and
mov
sbbl
shrd
sbbl
shr
decl
mov
cmpl
movl
not
jmp
mov
movl
je
push
call
and
adc
mov
sub
mov
movzbl
or
add
xor
xor
add
mov
sub
sub
mov
mov
xor
xor
orl
or
addl
shl
xor
add
add
mov
mov
xor
shrd
movzbl
sbb
shr
mov
mov
orl
xor
shl
xorl
xor
or
sbb
mov
xor
or
sub
mov
movl
sbb
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
push
push
push
push
push
push
push
pushl
call
dec
movzbl
sbb
sub
and
mov
mov
sub
add
mov
movl
mov
mov
sbb
mov
xorl
jmp
pop
pop
iret
pop
cltd
sbb
dec
fldenv
push
inc
mov
adc
adc
mov
insl
inc
ret
inc
pop
ds
mov
fsubrs
int3
icebp
stos
cs
jp
das
mov
mov
dec
cmp
xor
pop
insb
addr16
in
movsl
mov
add
sub
or
adc
mov
mov
push
fcomps
push
inc
ret
daa
cltd
in
add
sbb
jl
loopne
sbb
mov
pop
aam
fildll
pop
pop
pop
xor
test
bound
jle
in
mov
xor
pushf
mov
or
in
enter
jne
cmp
outsl
xorl
loope
scas
xchg
mov
add
mov
aaa
jp
inc
lcall
jns
aas
jp
mov
cmp
fnstenv
pop
mov
mov
scas
inc
sub
movsb
mov
int
pop
sbb
dec
out
push
xor
push
cli
pop
and
lret
pop
data16
push
out
xchg
or
cmovle
pop
or
or
test
xchg
arpl
rorl
je
mov
push
in
pop
inc
xchg
sahf
pop
push
mov
cmc
jp
in
lock
aad
int
call
movsl
shlb
add
mov
cmpsl
clc
xchg
inc
xchg
push
pop
adc
dec
add
mov
mov
mov
jecxz
jmp
dec
jae
push
or
dec
in
nop
aad
add
inc
pop
mov
xlat
adcl
testl
ljmp
xchg
enter
clc
xor
cld
fildll
sbb
xchg
popf
mov
ljmp
nop
pop
ds
lret
sub
xchg
clc
and
dec
xchg
clc
push
and
push
fsubrl
movsl
add
aad
jne
shlb
pop
and
xchg
pop
mov
rorl
adc
inc
pop
cmp
sarl
dec
or
and
nop
xor
jne
xor
popa
xlat
data16
push
xor
jo
or
jno
andl
aam
or
and
loop
rcpps
outsl
push
lcall
rol
stos
imul
mov
sbb
in
ja
pushf
cmp
mov
lods
lret
pop
dec
out
cmpsb
out
cwtl
mov
loope
movsb
es
dec
adc
es
mov
cmpsb
cmp
in
lea
sbb
lods
shll
and
inc
stos
shll
je
js
xchg
sub
mov
testl
pop
mov
out
push
andb
mov
cmp
push
dec
mov
lahf
pop
je
adc
movsl
jne
jns
nop
aaa
ljmp
outsb
xor
mov
xchg
mov
movsl
movsb
xor
je
and
cmpsl
je
fs
inc
xlat
mov
add
roll
xchg
shll
push
outsb
adc
lods
or
xor
test
das
popf
push
or
mov
cmp
xchg
inc
clc
bound
push
and
mov
mov
ret
pop
sub
add
sub
std
lret
xchg
aam
xchg
cs
push
jbe
pmaxub
and
push
xor
cwtl
ja
test
stos
mov
loopne
inc
aam
fs
xchg
lcall
cld
push
push
out
push
je
scas
shlb
mov
and
push
inc
pop
push
sbb
cli
out
pop
aas
jae
xor
jecxz
pop
xchg
lcall
sub
jns
mov
push
jl
in
mov
sbb
push
repnz
xchg
xlat
fcomps
and
test
je
pusha
fisubrl
pop
and
mov
ret
inc
mov
adc
jo
dec
jne
add
mov
xor
xchg
cwtl
cmp
imulb
cmpsb
insl
sub
pop
aaa
jno
sub
add
js
pop
jno
cmp
pop
out
xlat
in
mov
mov
mov
pop
aad
add
and
jle
stos
popf
adc
scas
sub
push
mov
lock
fsubp
mov
js
sbb
add
lods
sbb
scas
push
mov
cmp
js
sub
cmpl
sbb
push
xor
xchg
mov
xchg
push
mov
decb
scas
ljmp
filds
mov
pop
push
xchg
jne
int
and
scas
inc
pusha
mov
addr16
sub
and
pop
outsb
orl
cltd
adc
shrb
mull
in
or
mov
pop
dec
jmp
mov
loop
pop
loope
mov
popa
outsl
dec
insw
jns
aad
mov
ror
cmp
push
aad
pop
jle
imul
mov
ja
lret
fyl2xp1
mov
les
mov
lock
add
inc
add
sub
iret
fsubrl
dec
lcall
sbbb
push
or
hlt
adc
popa
push
cwtl
hlt
pusha
inc
sbb
or
out
test
scas
sub
jp
cmpsl
jae
dec
cld
mov
sub
adc
jo
mov
mov
nopl
mov
and
enter
dec
out
pop
andl
dec
mov
and
push
or
sbb
and
fisttpll
mov
data16
ja
icebp
ss
xor
arpl
es
xor
scas
cli
loop
xchg
fwait
test
sub
lods
or
idivl
mov
xchg
inc
push
cli
pushf
lods
pop
mov
cmp
pop
sbbb
pushf
in
repz
xor
test
xchg
cmp
jle
stos
sbb
mov
movsb
pop
adc
int
mov
insb
add
repz
sbb
test
jmp
push
out
jbe
push
outsl
dec
fs
cltd
shll
mov
loope
push
in
inc
popf
mov
fidivs
hlt
lret
inc
movsb
leave
mov
imul
jno
imul
mov
sti
and
inc
xor
adc
loope
sbb
and
sbb
jns
out
push
inc
rol
lods
push
and
fdivrp
mov
dec
imul
mov
cltd
mov
outsb
cmp
and
lods
dec
adc
into
addb
sar
adc
pop
and
mov
pop
inc
mov
into
mov
xor
inc
sbb
out
out
enter
pop
adc
jl
pop
dec
or
jo
xchg
inc
pop
outsb
jecxz
or
imul
cmp
dec
cmp
lods
out
pop
lock
int
xchg
dec
adc
adc
sbb
std
pop
jbe
xchg
ljmp
sub
js
mov
data16
in
ljmp
xchg
out
fs
push
cmpsb
jle
test
inc
sbb
in
mov
jmp
mov
jnp
push
pop
push
jbe
out
or
xor
xchg
or
int3
aad
sub
ffreep
repnz
dec
fsubl
cld
aam
push
and
popl
push
movsl
pop
sti
jp
in
bound
int3
xchg
or
arpl
lret
sti
sub
lock
mov
int
mov
stos
aam
daa
test
mov
sub
imul
cmp
outsl
pop
daa
lods
cld
sbb
jge
jle
mov
jp
stos
push
sar
sub
add
cmc
mov
mov
add
inc
out
scas
xchg
subb
lods
mov
xor
ret
dec
xchg
mov
rcrb
push
or
sbb
or
jb
inc
or
mov
loope
adc
je
cmp
jae
lret
fcomps
arpl
mov
xchg
dec
ja
cmpsl
pop
mull
repz
cs
push
pop
xor
hlt
sbb
outsl
out
sbb
dec
ds
mov
shl
or
dec
jo
cmp
adcb
lcall
or
jmp
or
stc
mov
dec
and
xor
test
xlat
lock
mov
popf
push
jle
push
mov
ja
push
xchg
mov
xchg
xor
xchg
inc
fadds
pop
cmpsl
inc
out
and
and
push
call
adc
out
mov
fwait
enter
loop
mov
addr16
xchg
jecxz
cltd
stos
es
mov
int3
jle
shlb
lea
push
fwait
dec
and
sub
insb
mov
popa
jp
call
inc
push
mov
sbb
cmpsl
and
shlb
mulb
jns
pop
mov
pop
cmpsb
pop
aaa
aaa
rcll
mov
les
loope
sbbl
iret
outsl
xchg
fs
pop
xchg
lock
jl
and
xchg
stos
popa
xchg
sub
mov
icebp
mov
fdivs
test
cltd
inc
inc
fs
lock
ss
pushw
sahf
mov
stos
mov
aaa
sub
fs
repnz
pop
ljmp
cmp
sti
cmp
in
test
std
lcall
xor
jns
adcb
and
lret
jp
mov
add
mov
stc
push
incb
inc
mov
or
repnz
sbb
cmp
shll
roll
in
or
insb
bound
dec
push
mov
cmpsl
pop
cmp
push
nop
daa
xchg
cli
insb
sub
mov
mov
incl
add
xor
lods
push
lahf
inc
in
cmp
clc
sub
mov
ss
divb
mov
mov
push
aam
xchg
das
ja
enter
cmc
mov
cmpsb
in
jno
xor
mov
mov
dec
std
test
jne
orb
rolb
lods
cmc
xchg
sub
and
add
shlb
test
pop
popf
mov
cltd
adc
mov
xor
rclb
mov
cltd
mov
add
rcr
inc
mov
inc
or
xchg
in
push
xor
fwait
push
mov
stos
sbb
leave
pop
mov
push
pcmpgtd
filds
dec
cmp
mov
or
out
clc
aaa
out
test
jle
fistpl
sbb
popa
and
call
int
imul
xor
jae
imul
xchg
das
mov
jge
inc
lock
xchg
ror
lea
mov
or
imul
int3
mov
pop
add
outsb
jne
mov
inc
rorl
aam
cmp
add
cmpsl
les
shll
jo
rorl
lock
int
xchg
out
bound
gs
add
int3
fcomp
xor
mov
mov
insl
scas
adc
mov
dec
gs
xor
inc
negb
xorb
pop
aam
nop
or
fwait
adc
movsb
push
xor
mov
mov
xor
inc
ds
sub
ss
js
into
dec
enter
jl
mov
movsl
pop
or
push
mov
in
pop
inc
idivl
mov
jb
iret
inc
call
mov
mov
dec
xchg
lret
adc
jo
movsl
inc
outsb
adc
jmp
cs
cmp
cli
testl
ret
xor
mov
push
adc
adc
or
fistl
lahf
inc
js
push
inc
push
data16
imul
push
daa
xchg
je
mov
dec
mov
data16
sahf
mov
mov
gs
nop
into
jnp
test
loope
sbb
aaa
cld
mov
scas
out
and
mov
dec
jmp
pop
mov
test
pop
imul
inc
lahf
call
insb
sub
mull
in
mov
mov
insl
push
rol
sbb
imul
jbe
sahf
mov
movsb
add
into
and
push
outsl
out
xchg
sbb
repnz
and
sub
adc
stc
dec
scas
int3
lods
ss
sbb
or
mov
mov
push
je
pushf
mov
mov
xchg
mov
lock
aas
cmp
mov
xchg
je
icebp
jnp
or
addr16
icebp
pop
push
and
fistl
pop
xchg
mov
xchg
ret
jae
sbb
adc
clc
out
das
sub
cltd
mov
lret
test
add
xchg
cmp
in
xchg
sti
jnp
stos
call
push
rorl
out
lret
inc
aad
adc
ljmp
mov
stc
fdivrp
jnp
xor
jbe
in
push
xchg
stos
js
shlb
sub
sbb
cmp
xchg
fs
pop
icebp
addr16
ficompl
testl
lret
dec
mov
aam
inc
mov
fnstenv
add
das
ds
fisttpl
ljmp
or
mov
arpl
sti
sbb
stos
or
test
pop
adc
pop
cmpsl
sbb
pop
push
jge
mov
add
loop
mov
lds
sub
fmuls
or
outsl
xor
dec
jp
jl
push
test
sub
orb
xlat
test
cmp
add
das
pusha
daa
xlat
sub
je
push
cltd
aas
mov
inc
adc
test
out
jg
push
cmpsb
es
push
sub
dec
ret
mov
aas
pop
pop
jp
jle
lods
out
pop
int3
lcall
cmpsb
icebp
bnd
dec
sub
call
or
shr
jg
sbb
hlt
xchg
fcmovu
dec
clc
xchg
outsl
jmp
iret
pop
cmp
mov
push
or
and
cltd
cwtl
cmpsl
insl
std
int
neg
iret
mov
mov
mov
ss
dec
push
loope
pusha
sbb
mov
or
int3
cmp
pop
movsb
adc
out
mov
dec
test
jge
push
lret
shrb
enter
inc
add
fidivl
insl
pop
mov
jp
movsl
inc
jne
in
and
je
jge
stos
cmp
adc
std
jecxz
mov
or
popf
mov
adc
pop
leave
in
push
cmp
std
les
mov
jp
add
xchg
mov
sub
sub
das
add
cmp
and
push
xor
sub
pop
inc
movsl
movsb
push
mov
scas
addr16
jne
movsl
lods
xchg
xchg
xchg
out
cwtl
out
pushf
rclb
int3
negl
stos
add
aam
sub
mov
xchg
gs
scas
enter
arpl
rorb
mov
sub
lock
xor
push
inc
jne
xchg
jae
or
inc
mov
mov
ja
jecxz
inc
dec
jb
pmaxsw
xchg
xor
or
call
sub
push
loop
pushf
mov
jp
xor
pop
in
popa
pop
fdivs
cs
mov
icebp
fwait
imul
pop
jns
clc
rclb
and
sti
dec
xlat
dec
mov
lret
gs
cld
movsl
rcrl
dec
xchg
incl
add
mov
fildl
jge
mov
jmp
in
das
sub
cltd
mov
stos
or
dec
aaa
cld
cmp
or
push
pop
jne
ret
sti
mov
lods
jb
add
scas
imulb
mov
mov
or
les
out
mov
mov
xor
ret
rcrb
test
je
or
mov
cmp
push
xor
mov
xchg
lds
lret
xchg
mov
shrl
outsb
xlat
leave
and
xor
sub
jns
adc
inc
fbstp
jge
dec
xor
popa
cmpsb
cmp
stos
sbb
and
dec
mov
sbb
pop
cwtl
jbe
xchg
je
test
pop
sbb
cli
dec
adc
cli
mov
div
sbb
js
mov
aam
inc
icebp
sub
mov
out
jge
pop
pop
or
cld
jno
ja
xchg
sub
into
mov
push
pop
andb
cmpb
inc
stos
rcrl
loop
mov
dec
cmp
adc
fsubl
in
mov
lahf
shll
xor
shrb
mov
push
arpl
out
out
sub
jnp
les
ljmp
jns
int3
pop
scas
xchg
add
xchg
mov
inc
fimuls
add
adc
ret
test
xor
mov
fdivrs
and
ret
xchg
xchg
imull
pushf
mov
inc
and
jle
sbb
pop
popl
aam
rorb
cmp
cmpsb
adc
in
jns
mov
shrb
mov
xor
jnp
loope
aas
rcl
cli
add
clc
and
loop
sbb
jmp
js
inc
lds
xor
hlt
hlt
adc
lds
cmp
mov
add
xchg
loope
pop
pop
iret
loop
mov
roll
hlt
add
mov
cmp
shl
ficomps
imul
daa
pushf
inc
xchg
call
sub
movsb
push
scas
push
push
add
or
xchg
mov
or
outsb
cli
push
mov
mov
xchg
xchg
sbb
sbbb
sarb
xor
jbe
pushf
inc
lret
cmp
pop
sub
xor
jg
xor
sbb
and
or
xlat
mov
pop
imul
inc
outsb
loopne
xchg
insb
lcall
push
sbb
inc
sti
inc
imul
and
les
dec
pushf
add
rcl
fistpll
fimull
jns
push
and
add
cmpsl
add
jmp
jb
arpl
int3
jne
stos
xor
or
in
and
or
ja
mov
add
xchg
mov
stos
xchg
inc
add
jle
sub
sub
les
jg
arpl
sbb
jno
and
subb
push
mov
imul
loope
lods
push
popa
sub
ret
adc
mov
fiaddl
fcomi
and
cmp
movsb
insb
out
movsb
not
add
dec
sbb
pop
push
lret
inc
stos
shlb
mov
out
cli
cmp
in
enter
fcmovnb
enter
mov
idivb
dec
nop
into
aas
sub
dec
pop
ficoms
jge
pop
mov
int
jl
scas
pop
and
sti
insl
fnstenv
lcall
pusha
xor
fadds
pop
mov
add
mov
in
ja
fisubrl
pop
cmp
mov
xchg
popa
push
push
lret
test
xor
cmp
out
negb
adc
pushf
pop
adc
or
cs
and
xchg
daa
ja
jg
or
daa
sub
push
adc
sbb
shr
or
sub
cmp
pop
sbb
lret
movsl
inc
sub
mov
jns
cmpl
cld
sti
xchg
mov
dec
and
ret
scas
popf
sub
mov
shlb
sbb
lret
push
cmp
scas
out
imul
stc
es
cmovge
adc
popa
fcmove
ficomps
push
cmp
arpl
imul
shl
aas
std
jle
int3
ja
jp
pop
mov
push
stc
xchg
je
jne
popa
aad
cld
aad
mov
nop
add
inc
test
js
push
and
pop
jns
add
fdivs
outsb
rcrb
dec
adcb
out
dec
shlb
lods
stc
xor
cltd
sahf
sub
inc
ficoms
aam
cmp
mov
mov
scas
or
xchg
movsl
in
adc
mov
mov
rorb
pop
xchg
cld
jo
cld
dec
ss
mov
roll
mov
inc
push
and
inc
movsl
sbb
mov
inc
mov
adc
xor
adc
enter
arpl
sbb
cwtl
and
std
ljmp
fucomi
adc
inc
jb
ja
cs
or
pop
out
clc
and
inc
jmp
inc
dec
or
mov
push
cmp
sub
xor
jl
mov
js
adc
xor
aaa
cmp
xchg
xor
faddl
cmp
jbe
ret
cld
movsl
test
add
popf
ja
jmp
stos
bnd
js
sub
mov
cwtl
pop
sbb
hlt
xor
decl
sub
icebp
cmp
aad
sub
xor
mov
jge
mov
xchg
push
inc
pop
add
rolb
pop
or
mov
call
cwtl
push
bound
xchg
addr16
pop
lea
lock
adcl
add
dec
cmpsb
adc
xor
push
call
sbb
mov
mov
mov
repnz
jmp
lahf
ret
out
ljmp
sbb
push
or
movsl
xchg
incl
xchg
xchg
int
adc
and
in
inc
iret
loop
sahf
scas
push
sbb
mov
fldl
mov
sbb
arpl
testb
xchg
cmp
cmp
adc
and
sbb
sbb
sbb
mov
nop
pop
cltd
mov
in
cwtl
push
lds
fiadds
mov
xor
xorl
mov
sti
in
insl
xor
jb
lcall
adc
lret
sub
dec
xchg
push
in
jge
add
mov
push
daa
iret
cmpsb
push
out
aaa
in
adc
inc
adc
repz
or
mov
xchg
cld
dec
pop
scas
jb
push
mov
test
jno
mov
movl
pop
xor
cmp
inc
mov
sub
xchg
aaa
adc
pop
push
fildll
inc
cmpsl
inc
cmpsl
cmp
ds
mov
dec
fisubrl
in
mov
cmpsb
add
mov
insl
or
inc
icebp
add
jecxz
mov
lock
divb
xor
jg
mov
ds
sub
jne
bound
rcrl
pop
ret
jno
mov
add
lcall
fs
sarl
cltd
cmp
lahf
hlt
or
cmc
jbe
ljmp
ja
mov
and
ret
ror
outsb
lret
pop
sub
jmp
fwait
repnz
jb
daa
cmp
xorl
cmpl
adc
jbe
add
out
sbb
mov
sti
sub
inc
cmp
imul
push
int3
xor
aad
pop
xor
cmp
cld
add
inc
pop
ret
xor
cmp
lods
jl
out
sahf
stos
imul
jnp
sti
insb
mov
loop
ljmp
or
into
movsb
mov
aad
jno
pop
imul
in
mov
push
and
vmovss
pop
iret
jns
sbb
cmp
repz
ss
push
dec
mov
test
ror
sub
sub
pushf
mov
ret
add
loope
insb
fwait
dec
inc
nop
daa
dec
inc
mov
test
sub
fsubl
pop
adc
punpckhwd
test
cli
or
fsubl
mov
jmp
lods
adc
sub
adc
pmaxsw
push
mov
xor
xor
rolb
out
fnstsw
subb
sahf
jo
in
add
data16
mov
pop
xchg
mov
mov
mov
mov
bound
and
inc
cmp
mov
bound
in
daa
loopne
mov
push
push
sub
leave
inc
add
lock
lahf
mov
mov
inc
mov
jg
xchg
sub
push
xchg
dec
cmc
inc
cmp
orl
add
adc
and
push
jp
popf
insb
hlt
cmp
xor
sahf
ss
rorl
mov
lret
subb
addr16
jne
nop
sti
lods
push
dec
mov
mov
lods
xchg
xchg
fstp
xor
stos
movb
and
repnz
mov
test
or
or
lds
int
mov
shrl
aas
adc
cld
sbb
push
mov
out
or
hlt
dec
lods
pop
insb
add
mov
sub
or
roll
jecxz
call
test
xchg
lret
jbe
pop
push
in
in
adc
lahf
nop
aam
inc
adc
xor
movsb
cmp
lock
pop
or
loop
outsb
pop
sbb
nop
ljmp
push
or
sbb
sahf
movsl
or
inc
daa
push
outsl
jno
jne
ds
popf
mov
cmp
or
test
mov
ss
movsb
mov
in
aas
fistpl
popa
or
in
push
lock
xchg
mov
test
pop
xchg
iret
sub
and
xchg
nop
inc
dec
hlt
and
push
hlt
mov
dec
add
push
push
icebp
enter
push
lret
xchg
push
movb
shlb
mov
adc
ss
addb
in
push
sub
leave
add
outsl
mov
xchg
stc
mov
push
dec
xor
loopne
dec
mov
inc
int3
mov
ret
in
movsb
mov
mov
jl
insl
xchg
dec
mov
test
push
out
add
aaa
pop
imul
sub
out
movsl
dec
ficompl
and
or
push
movsbl
insl
ljmp
mov
test
rorl
dec
mov
xlat
adc
cmpsl
pop
cmp
dec
clc
bound
push
xchg
leave
je
stos
or
test
jg
gs
mov
push
jl
out
sbb
jns
addr16
rcll
iret
sbb
filds
xchg
mov
push
push
fildll
and
into
inc
fcomps
mov
fs
push
inc
ja
xchg
inc
enter
push
icebp
cld
jl
push
dec
jnp
aas
or
xchg
call
imulb
movsl
inc
cmpl
dec
push
in
ret
stc
or
jnp
cld
es
add
pushf
xchg
inc
mov
push
and
loop
xor
mov
inc
push
test
sbb
mov
imul
and
and
inc
ret
jecxz
mov
inc
xchg
int
mov
xchg
xchg
mov
jbe
push
pop
enter
outsl
sbb
fwait
xor
int
outsb
jmp
gs
mov
cltd
and
mov
mov
jo
sub
aad
ret
pop
jmp
ud0
shl
call
pop
mov
lds
mov
dec
mov
shlb
imul
sub
fcompl
or
imul
and
rclb
dec
test
add
inc
dec
mov
leave
cmp
fdivrs
fldt
xchg
inc
fmuls
aas
push
lods
pop
arpl
shll
mov
ret
repz
mov
loope
or
add
inc
push
ret
xchg
sbb
fldl
mov
push
jp
push
shlb
je
or
sbb
sahf
popa
mov
scas
and
pusha
inc
mov
addr16
mul
adc
cs
mov
jmp
cmp
arpl
push
mov
jb
cmp
dec
add
cli
outsb
lods
add
nop
jge
jo
outsl
fwait
jmp
fmul
in
cltd
sahf
into
pop
gs
leave
ja
mov
jns
addr16
dec
lahf
add
cmp
roll
add
jecxz
pop
mov
int3
es
xchg
shl
mov
out
jecxz
aad
sbb
test
xor
jge
cmp
fnstenv
cwtl
add
jmp
xchg
test
outsb
sbb
mov
inc
test
pop
or
sbb
pop
add
dec
jns
cwtl
arpl
cli
in
pop
repz
in
pop
jp
mov
or
data16
cs
or
xor
cmpsb
outsl
push
loopne
push
popa
mov
roll
push
cmp
imul
push
insl
cwtl
jns
mov
cmp
mov
push
or
ret
cltd
xor
adc
push
xchg
rcrl
sbb
pop
jmp
movsl
push
push
sti
iret
adc
cs
repnz
ss
dec
xor
and
loop
stos
or
mov
xor
lret
repnz
fstpt
insl
aam
insl
dec
cli
faddl
pop
pop
mov
cmp
mov
pop
aas
mov
sti
xchg
push
jmp
rcrb
or
in
adc
mov
test
movsb
push
call
dec
mov
sti
out
sarl
in
lds
jae
cmc
adc
pusha
and
or
stc
add
mov
pop
js
jecxz
push
push
add
and
jmp
int3
mov
push
dec
cmp
inc
orl
fldt
imul
inc
adc
les
xchg
pop
add
jno
ljmp
inc
pop
xchg
pop
into
mov
dec
hlt
sbb
dec
mov
sub
pop
scas
cmp
loopne
aas
in
dec
insl
and
fdivrp
and
icebp
sub
test
mov
inc
lods
mov
adc
sbb
out
mov
mov
push
add
or
inc
int3
imul
pushf
das
out
inc
add
mov
lds
stos
push
mov
inc
aas
mov
and
and
inc
jl
movsl
add
call
stc
mov
mov
dec
xchg
xor
xchg
int
cmpsb
or
xor
call
mov
dec
xchg
xor
call
pusha
out
add
insb
call
arpl
jo
jge
fnstsw
inc
fsts
sub
inc
xchg
cmp
rorb
pushf
sub
negb
jns,pn
test
test
push
jno
add
push
add
jp
sbb
lret
js
jo
inc
fsubr
andl
dec
cwtl
xor
jae
sbb
or
addr16
pop
push
ljmp
or
int
dec
push
xor
mov
fcmove
sub
mov
mov
inc
inc
cs
add
mov
sub
or
xchg
and
push
cli
sbb
sti
inc
cmp
gs
hlt
movsb
xchg
jp
stos
hlt
sbb
jb
xor
mov
xorl
lcall
hlt
push
or
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
call
or
adc
xor
mov
xor
or
sub
xor
xorl
xor
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
jmp
push
shl
dec
jne
sub
lods
push
xor
mov
pop
adc
loopne
cmp
pop
mov
mov
jbe
mov
les
ljmp
xchg
mov
pushf
pushf
daa
dec
aaa
xchg
outsb
js
popa
test
btc
mov
jo
ficomps
fdivp
andl
fsubrl
enter
sahf
mov
int
cmp
mov
adc
jb
dec
je
pop
xor
mov
mov
fwait
test
mov
pop
icebp
stos
pop
loop
pop
mov
cmc
in
xchg
add
mov
jecxz
cltd
mov
popl
inc
jmp
sbb
and
mov
mov
mov
je
addr16
jg
popf
mov
sub
add
pop
cwtl
enter
call
int3
rorb
out
pushl
sub
stc
hlt
popa
dec
negl
pop
out
inc
mov
jb
jne
adc
push
mov
outsl
jp
xchg
mov
sarl
jl
mov
mov
repnz
jno
pop
imul
and
adc
popf
inc
scas
shl
inc
sub
ds
xchg
fsubl
cmp
cld
dec
add
pop
jmp
rcr
mov
jb
outsb
pop
stos
daa
cmp
into
adc
pop
lcall
movsb
je
lahf
andb
sbb
cmpsb
and
shrl
inc
hlt
lret
fsubl
clc
fstl
loop
add
xor
or
or
aas
sti
sub
jb
imul
arpl
arpl
dec
push
or
shlb
in
push
stos
cmpsb
leave
cwtl
sub
adc
add
imul
or
push
int
pop
mov
inc
call
movsb
loopne
out
addr16
mulb
stc
mov
adc
inc
dec
outsb
icebp
fdivl
dec
mov
in
test
adcb
push
insb
fistpl
insb
adc
mov
adc
in
out
les
out
clc
pop
lret
popf
jns
div
add
out
nop
das
inc
xorl
dec
data16
js
in
testb
subb
xchg
mov
jne
cmp
stos
cmpsb
pop
xchg
pushw
fldcw
inc
bound
mov
mulb
mov
fdivrl
outsb
add
push
and
clc
mull
ljmp
mov
jae
loope
mov
xor
add
fldcw
sarb
sbb
fidivrl
mov
push
clc
inc
pop
fistps
test
mov
rolb
sbb
jp
sbb
popf
enter
push
movsl
cs
pop
push
adc
mov
enter
ss
cmpsb
jne
add
pop
cltd
or
cli
subb
add
data16
mov
rolb
loope
lret
cmp
fcoml
fldt
push
mov
test
sub
repz
jb
scas
nop
repz
push
cwtl
mov
sbb
icebp
fcmovu
sub
mov
shl
iret
xchg
lret
ror
sbb
jg
call
sub
fidivl
pusha
sub
fimull
sub
mov
mov
mov
push
xchg
xchg
lds
sub
sub
lcall
adc
xor
lock
ja
sub
mov
add
xor
pop
mov
push
sub
push
imul
push
mov
lret
dec
in
ja
pop
sar
xor
repnz
mov
stos
mov
in
mov
adc
lock
push
aam
push
test
imul
dec
andb
pop
mov
outsb
jp
and
inc
fstl
shlb
mov
ds
mov
inc
negl
add
imul
mov
or
bound
xchg
les
mov
sub
pop
cmp
loop
sub
sub
sub
ret
fidivrs
jecxz
cmp
cmp
mov
testl
sbb
in
add
cmp
lret
sub
lret
lods
jle
movsl
adc
jg
push
xchg
mov
dec
and
cli
sbb
jnp
sub
lea
test
cmp
loopne
or
jb
and
shl
call
cmp
in
inc
jmpw
dec
call
mov
test
jne
arpl
mov
xor
les
loop
xchg
push
mov
sub
out
add
mov
inc
sarb
sbb
add
add
dec
jb
ja
sub
mov
lods
mov
stc
mov
mov
test
in
and
shlb
and
adc
fs
xor
sub
mov
sub
aaa
cmc
movsb
lret
sub
je
and
ror
jge
ljmp
add
fcomps
cwtl
lcall
ret
push
or
dec
xor
push
push
lock
dec
cld
xor
sti
nop
rcrb
pop
orb
jb
mov
call
add
and
dec
movsl
xor
sbbl
xor
lret
psubsw
jae
movsl
fldt
pop
and
scas
jmp
mov
lahf
fistl
ss
out
fistpll
mov
psubsb
mov
sbbb
lea
pushf
aad
fs
fmul
movsb
aaa
sub
and
xor
jo
adc
out
fwait
stos
dec
js
outsb
mov
out
mov
daa
data16
jp
addr16
jge
xchg
loope
mov
insb
jnp
or
orl
aas
xchg
fs
test
incb
idivb
jmp
adc
mov
jecxz
fcoml
test
mov
cmpsl
daa
mov
adc
mov
sbb
or
leave
loope
xor
ret
fisubrl
xchg
or
dec
dec
mov
dec
in
add
jnp
jp
jg
push
andl
add
jge
enter
movsl
and
jmp
add
lahf
insl
adc
iret
fwait
rcl
sbb
dec
enter
lock
and
pop
stos
sbb
sub
add
andl
call
xor
lahf
add
dec
mov
in
aam
push
stos
jb
mov
ret
pop
sbbb
inc
out
xor
xchg
packsswb
xchg
movsl
insb
adc
stos
mov
sub
sahf
arpl
fdivrs
mov
or
xchg
aas
scas
mov
into
aaa
aad
orl
and
mov
or
jnp
fbld
add
addb
pop
ficoms
push
loopne
jg
faddp
or
xor
mov
and
cmpl
mov
divb
or
lea
test
and
scas
fstpl
test
mov
xchg
out
sub
test
jmp
enter
mov
in
and
adc
mov
sbb
scas
fnstenv
in
cwtl
in
sbb
stos
pop
popa
push
cmpsb
out
mov
sub
sub
ja
and
xorb
rcrb
sbb
ret
lahf
hlt
clc
and
repnz
aas
idiv
addr16
mov
ss
dec
mov
js
stos
movsl
sub
cmovns
shl
push
ficoms
cmp
not
mov
aad
les
shlb
rcll
pop
cmp
into
xlat
adc
ss
daa
fcomp
add
mov
gs
sub
dec
adc
in
mov
cmp
pop
mov
cmp
fldt
push
cmc
mov
mov
lret
iret
mull
jecxz
shlb
adc
sbb
and
dec
sub
or
ret
outsl
jp
mov
stc
nop
ret
sahf
das
sbb
sub
or
stc
push
sti
in
mov
add
inc
out
jae
fstl
mov
lret
loopnew
inc
mov
jne
sti
test
sub
pop
rclb
add
shrl
mov
sbb
and
insl
mov
enter
mov
mov
adc
imul
popa
pop
pop
jle
rclb
out
fildll
xor
xchg
insl
aad
stos
leave
sbb
cmp
sub
push
mov
lods
lds
mov
push
mov
ljmp
sub
mov
out
pop
mov
pop
add
ret
je
sub
outsb
or
dec
inc
movaps
out
xchg
bound
shl
lcall
mov
lahf
shrl
xchg
sbb
into
sbb
jle
mov
inc
dec
pop
push
pop
cmc
mov
mov
gs
in
mov
stc
inc
adc
leave
push
and
loope
movsl
jecxz
dec
data16
mov
dec
ret
pcmpeqd
pop
push
test
les
mov
and
ret
shr
mov
in
mov
shlb
aad
data16
lret
test
pop
jle
fstps
pop
dec
ficomps
bound
ja
push
mov
icebp
xchg
xor
push
inc
pop
cmp
movsb
stc
jmp
push
mov
shll
add
mov
dec
mov
in
jge
fisttpll
jo
cs
sarl
aam
pop
into
aad
ret
out
push
mov
rcl
jecxz
dec
lods
xlat
fdiv
stc
scas
test
rol
push
push
cwtl
popa
cmpsl
push
mov
scas
pop
mov
rcl
cli
inc
pop
and
enter
stc
dec
shll
sub
or
inc
and
pop
js
out
or
or
rcll
mov
push
stos
xor
mov
xor
stos
inc
test
mov
sub
push
xor
clc
fisubrs
icebp
inc
xor
pop
add
pusha
pop
cmp
mov
sbb
inc
lahf
xchg
pop
in
loop
popa
insb
mov
cld
movsb
pop
cmp
inc
sub
cmp
xchg
jns
mov
mov
jp
mov
adc
or
das
pop
xor
push
cmp
cmpsb
pop
or
outsb
shl
push
add
cmp
shlb
dec
ret
or
inc
sub
scas
dec
push
ds
jmp
mov
cltd
xchg
xchg
insb
inc
mov
push
test
aas
and
cs
mov
jp
into
mov
inc
add
and
lahf
add
inc
popf
out
jl
xchg
xor
test
dec
and
in
clc
les
ja
imul
push
out
inc
sbb
sbb
add
add
call
dec
sar
outsl
rorl
scas
cwtl
pop
jno
call
out
dec
repnz
outsb
mov
mov
dec
pusha
sub
out
iret
xor
push
inc
fsts
in
lahf
into
mov
xchg
mov
fnsave
xchg
sarl
sbbb
jge
into
jae
xor
sbb
mov
add
out
inc
jbe
dec
lock
cmp
pop
cmc
es
xchg
cmc
cmp
xchg
mov
lcall
sub
js
push
aad
shrl
xor
pushf
jb
test
roll
xor
iret
inc
fwait
call
dec
test
stos
push
push
sarl
in
dec
je
dec
cwtl
mov
mov
sub
mov
loopne
mov
xchg
push
inc
icebp
xlat
xlat
scas
mull
mov
cmp
and
pop
sbb
outsl
insl
xchg
sbb
out
bound
jbe
fbld
push
dec
repnz
or
lods
jge
lods
aad
sbb
lret
or
pop
sti
cmp
outsb
pop
sub
lods
cmp
inc
mov
mov
sbb
mov
sti
jb
mov
cltd
dec
mov
or
dec
std
mov
insb
inc
xlat
pop
mov
sub
aad
enter
ljmp
add
and
movsl
das
cmp
push
je
dec
mov
xchg
imul
push
push
arpl
mov
push
and
push
sbb
cmp
ja
dec
into
xchg
inc
cmc
or
add
xchg
jle
mov
js
xor
stc
xor
pop
xchg
dec
push
lea
dec
cmp
movsl
testb
in
push
shrl
sahf
mov
push
movsl
shll
aas
mov
ret
les
xchg
inc
int
jbe
fcoms
xchg
push
nop
mov
adc
jb
or
pop
jge
ja
xor
mov
std
mov
add
dec
jp
aaa
dec
pop
into
shrl
ljmp
dec
imul
jbe
shr
imul
shrl
xchg
mov
mov
movsb
push
int
pop
dec
add
cltd
jle
add
lea
loopne
fimull
cmp
adc
mov
aad
call
dec
sbb
dec
out
xchg
sub
stc
inc
dec
sub
cmp
adc
idiv
mov
cmc
cli
xchg
addr16
sub
mov
xchg
js
pop
xlat
inc
test
jns
jbe
test
xor
dec
xchg
insb
imul
mov
ret
push
lea
dec
out
pop
lcall
or
dec
repz
adc
adc
dec
lods
jb
or
and
lea
sti
ds
subb
xor
mov
clc
out
lret
mov
mov
movl
add
aad
inc
cmpsb
pop
and
and
or
shl
or
loope
jge
xchg
xchg
iret
pushf
inc
ljmp
enter
or
ret
insb
mov
xchg
jle
pop
popf
lea
mov
add
aaa
xor
cli
adc
push
call
ja
out
std
mov
enter
imul
add
inc
nop
cs
out
gs
loope
gs
aam
mov
push
xor
jecxz
or
inc
xor
leave
out
mov
fiadds
rclb
andb
sahf
cmp
jp
pusha
mov
xorb
hlt
pop
mov
hlt
adc
scas
push
lcall
andl
aam
pop
pop
stos
es
movsb
sarl
sub
mov
pop
and
cmpsb
daa
and
mov
cmpsb
add
into
dec
jle
jp
out
push
div
dec
sbbl
cmp
outsl
inc
mov
outsl
dec
mov
or
jnp
or
push
ja
cmp
cmp
inc
adc
mov
xor
fwait
ljmp
insb
xchg
adc
jge
inc
push
movsl
pop
xchg
clc
fsub
add
push
push
les
xchg
jbe
cli
test
pop
xchg
sbb
cmp
xlat
jo
add
lret
inc
jg
js
pushf
mov
outsl
push
cmpsl
arpl
stos
aas
or
hlt
pop
mov
mov
adc
test
stc
loopne
call
inc
out
push
or
in
mov
adc
adc
decb
pop
cmp
faddl
push
repnz
push
int3
cmpsb
xchg
cmp
jg
adc
outsb
sbb
icebp
push
dec
test
outsb
in
cld
inc
sbb
fistpl
cmp
or
cmp
lcall
mov
inc
push
mov
pop
arpl
sbb
imul
adc
clc
pop
aas
jbe
sub
xchg
adc
decl
dec
into
lds
fldenv
push
aaa
and
aad
mov
lret
xchg
or
es
sbb
insl
ja
jbe
inc
and
fdivrp
cmp
mov
cmpl
fwait
insl
inc
or
sbb
imul
adc
or
add
jg
dec
jae
push
cmp
jl
or
sar
jg
adc
add
dec
and
adc
inc
int3
pushf
das
mov
into
mov
inc
ffreep
arpl
cmp
cmp
xchg
inc
arpl
fs
xlat
mov
xchg
jbe
jle
sbb
inc
inc
mov
pop
add
xchg
xchg
mov
call
pop
dec
imul
mov
dec
loopne
test
xorb
push
jae
xchg
ja
push
imul
sbb
push
int3
or
int3
in
add
int
jmp
je
test
jbe
stos
arpl
mov
dec
inc
aam
pop
cmp
mov
adc
push
jg
mov
adc
ss
or
insl
pop
cmp
xchg
or
push
push
cmp
call
mov
pop
mov
mov
inc
adc
aad
cmp
lret
cmpl
jge
and
add
fadds
push
jp
jge
das
dec
iret
movswl
loopne
fs
in
mov
jne
jmp
mov
pop
cmp
xor
aad
jl
in
xchg
fnsave
int
or
aas
daa
dec
mov
aad
add
or
dec
xchg
xchg
jno
jmp
xor
xorl
jmp
daa
and
data16
jns
jg
roll
inc
xor
pop
imul
inc
mov
mov
ret
sub
push
sbb
adc
push
rcl
cmp
xor
jg
mov
scas
divb
shrb
xor
fs
imul
push
jo
or
movsl
addl
adc
push
mov
dec
outsl
sti
xchg
insb
inc
xor
add
outsl
dec
mov
pop
scas
fmulp
insl
repz
btc
call
call
and
add
icebp
push
out
mov
push
and
aas
sbb
imul
lret
add
push
jb
and
adcb
imul
lods
movsb
adcb
mov
cmp
mov
ret
push
xchg
pushf
data16
shl
and
xchg
pop
lods
pushf
lds
cmp
loop
lcall
dec
int3
aas
add
inc
popf
mov
fwait
xchg
stc
sbb
jmp
mov
out
inc
adcb
add
loop
out
fdivl
mov
mov
rclb
inc
icebp
out
and
lds
or
xchg
jb
xchg
subb
adc
adc
and
pop
and
aas
mov
inc
pop
and
or
sbb
jmp
cld
sbb
imul
cmpsb
push
or
or
sti
add
lods
ffreep
pop
mov
or
mov
xchg
xlat
mov
idivl
sub
cmp
add
bound
scas
inc
sbb
add
aas
call
int
jno
addr16
mov
xor
in
stc
gs
add
aas
scas
cmp
xchg
movb
test
int
jl
data16
jno
call
mov
les
ja
and
mov
jnp
fistpl
aam
call
jbe
sbb
sub
add
cmc
ret
out
xchg
dec
stc
lret
lret
inc
inc
cmpsb
cltd
mov
stos
jae
test
mov
stos
dec
cmpsb
push
ret
jno
out
or
push
jle
sti
daa
cwtl
les
js
cltd
scas
or
jno
adc
mov
pop
xor
arpl
mov
iret
or
mov
jmp
test
sub
sbb
lods
add
frstor
ja
lods
cmp
adc
jae
ret
pushl
lret
stc
push
lahf
mov
dec
fwait
pop
movsb
enterw
push
adc
insb
inc
mov
adc
pop
mov
jecxz
stos
sub
xor
sti
pushf
repnz
pop
das
fiadds
js
jno
pop
jo
enter
pop
jns
and
mov
cld
and
and
pop
push
jg
test
repnz
sbb
push
std
scas
and
cmp
outsl
cmp
push
les
xchg
lret
mov
rclb
pop
in
test
mov
jl
lahf
xchg
xchg
inc
mov
das
sbb
movsb
jg
jg
and
out
popa
imul
nop
pmaddwd
call
outsb
jae
pop
in
aaa
fwait
pop
xchg
sbb
mov
mov
adcb
pop
gs
and
outsb
mov
or
pop
aaa
cli
fs
or
xchg
pop
call
mov
out
inc
js
test
nop
dec
insb
outsl
cmpb
mov
jnp
cmc
movsb
ds
mov
xor
mov
push
xor
xchg
or
mov
mov
cmpsb
mov
imul
popl
sbb
jno
loop
push
mov
pop
mov
adc
mov
lods
mov
test
orb
xor
mov
dec
pop
push
out
cmp
shrb
sbbl
nop
int3
push
add
sub
mov
add
pop
sbb
into
xor
ja
or
dec
mov
adc
and
sub
sbb
and
cmp
and
cmc
mov
insw
in
sub
out
pop
pop
scas
adc
cmp
std
adc
subl
icebp
push
xor
addr16
jg
shl
and
jecxz
cmpl
fisubrl
push
int
enter
test
repz
repz
pop
pop
mov
repz
xchg
addr16
or
jbe
inc
sbbl
or
scas
or
jne
enter
fmuls
mov
mov
fisubs
fidivrl
aas
cli
mov
jo
add
push
xchg
cld
fs
loope
das
hlt
sbb
je
dec
les
fwait
mov
hlt
pop
xor
or
negl
out
popa
rcrb
sbb
test
mov
testl
push
aam
jmp
arpl
in
scas
jp
push
push
enter
nop
lock
test
adc
pop
rclb
mov
mov
cmpl
adc
bound
mov
mov
mov
jmp
out
mov
xchg
icebp
add
mov
sbb
daa
dec
lcall
push
jbe
sbb
dec
xchg
and
dec
cmpsb
add
aam
mov
dec
mov
push
jnp
xor
stc
testl
cmp
mov
mov
in
push
cltd
sti
xchg
push
enter
pushf
movsl
cli
add
cmpsl
push
insb
shl
fdivs
sub
push
push
mov
int
leavew
mov
xor
fdivl
or
adc
in
into
jecxz
inc
xchg
ret
subw
aam
add
xlat
pushl
sbb
inc
in
inc
enter
jmp
int3
fldcw
dec
outsb
add
hlt
xlat
sbb
sahf
sti
sub
xor
imul
dec
mov
push
stos
fdivrl
adc
mov
xchg
push
pop
mov
pop
mov
jge
mov
js
hlt
xchg
push
cwtl
inc
push
stos
cmc
pop
xor
adc
mov
cmp
stos
pusha
sub
in
xorb
pop
push
cltd
sarl
push
clc
mov
cmc
mov
jmp
sbb
mov
xor
pop
fmull
cli
ret
jl
xor
das
mov
cmp
adc
cmp
mov
jge
dec
push
xor
pop
pop
xchg
adc
lret
call
mov
pop
mov
sbb
bound
pushf
xchg
rorb
xor
xchg
je
push
adc
dec
jge
and
adc
enter
lods
nop
aas
testb
inc
push
mov
ret
ja
sbb
popf
inc
test
mov
movsb
cld
in
pop
mov
aam
ljmp
add
cmpsl
add
popa
sub
fadd
sub
sbb
jb
sahf
into
rorl
jae
jl
adc
ss
dec
mov
nop
aad
and
and
dec
cmpsb
xor
pop
cmp
leave
dec
push
sbb
inc
jbe
xchg
jo
in
or
popa
cli
sahf
rclb
mov
pop
pop
mov
fisubs
ret
mov
push
add
in
mov
imul
std
jp
jo
adc
arpl
repnz
pop
out
sbb
pop
fwait
jge
push
adc
arpl
and
and
pop
pushf
xor
imul
je
fwait
std
xchg
addb
push
jmp
inc
pop
lcall
inc
fs
jp
les
aam
cmc
test
movb
rolb
ficoml
popa
mov
test
stos
cmp
mov
sbbl
adc
push
xchg
lret
jp
jno
mov
jbe
int3
mov
je
mov
imul
aaa
int
add
inc
les
ja
int3
xlat
sub
or
jne
je
jg
test
enter
and
and
pop
mov
repnz
inc
sahf
mov
dec
cmp
jge
add
xchg
xchg
and
xor
xchg
xlat
push
cmp
jl
popf
xchg
test
data16
xchg
lret
cli
mov
dec
sub
movsb
in
ja
aaa
test
push
stos
int3
jmp
leave
xchg
daa
andl
inc
outsl
mov
push
lock
pop
repnz
cmpsb
mov
mov
push
push
cmp
nop
stc
mull
out
enter
mov
mov
fs
les
push
pop
insl
scas
xchg
adc
shlb
cmp
add
lahf
jno
call
and
icebp
adc
adc
pop
cmp
mov
push
push
nopl
sbb
and
jge
fidivrl
ds
outsl
sub
jae
nop
cs
mov
jnp
test
jl
push
jae
nop
jg
stos
leave
in
mov
testb
insl
xchg
inc
or
fs
jge
push
aad
push
mov
fldt
mov
in
add
pusha
sarl
pop
iret
xor
jg
clc
dec
lret
test
sbb
mov
test
out
leave
out
std
jg
mov
xchg
aad
xchg
mov
mov
inc
adc
cmp
inc
pop
insl
jge
mov
dec
dec
or
add
mov
jb
cld
push
xor
add
jb,pt
lds
adc
push
int3
adc
into
jb
test
xor
mov
cmc
mov
adc
mov
adc
lods
repz
out
xorb
mov
jbe
and
pop
xor
adc
push
push
int3
jno
int
lret
xchg
push
iret
dec
sbb
scas
repnz
mov
incb
cmp
push
jo
ds
sbbb
add
loop
mov
aad
cwtl
fcmovne
push
cli
dec
pop
imul
jge
add
fcom
int
mov
das
cwtl
insl
add
rcr
push
and
and
in
in
adc
out
idiv
into
sti
lahf
loope
cmpsb
pop
test
out
ret
daa
pop
mov
pop
sbb
pop
fisubrs
pop
std
data16
aaa
hlt
pop
inc
lods
push
clc
fstl
pop
jmp
mov
movsb
cmp
aam
int
or
and
rolb
js
mov
dec
adc
fwait
add
inc
cmpl
aam
xor
inc
mov
xor
push
int3
push
mov
sbb
sahf
xchg
mov
sbb
test
xor
das
mov
clc
rolb
ds
cmpsl
sti
sub
sub
pop
jae
cli
ljmp
xlat
mov
idiv
xor
push
mov
inc
int3
pop
push
jg
push
mov
rcrb
cmp
hlt
mov
aad
nop
xor
jno
push
mov
aaa
mov
rclb
pop
test
xchg
push
fcmove
mov
jb
xchg
and
test
imul
xor
xor
jle
push
sbb
inc
addl
fidivrs
daa
mov
dec
pop
adc
sub
mov
xor
pop
leave
mulb
adc
scas
mov
idivl
das
scas
outsb
lret
fimull
ret
ret
imul
mov
icebp
dec
add
pop
inc
imull
ret
inc
xor
jle
int3
shlb
rclb
inc
call
mov
add
jle
movsl
nop
cmp
pop
movhps
jmp
ss
pushl
push
sarl
cld
adc
test
or
mov
repnz
int
xchg
sub
cmp
arpl
mov
mov
clc
popa
neg
shl
cmp
aad
add
bsf
out
hlt
call
push
imul
cmp
out
daa
cltd
and
sbb
jg
adc
call
sub
or
jmp
clc
push
xchg
inc
loop
mov
in
cmp
add
ret
xchg
xchg
push
push
js
mov
sti
dec
push
adc
jle
xor
lods
or
mov
sub
inc
data16
rorb
movsl
loopne
sub
fimuls
inc
push
cmpsb
push
sub
mov
mov
add
fbld
aaa
adc
ret
fs
or
xchg
cmp
push
mov
movsl
sahf
icebp
icebp
scas
mov
pop
dec
mov
inc
cli
hlt
xor
rol
xchg
pushf
in
pop
rcll
cmp
mov
jne
stc
mov
sbb
or
push
scas
xor
or
sub
sbb
sub
mov
out
in
adcb
shrl
decl
outsb
mov
outsl
out
cmp
adc
lods
loope
push
jnp
dec
dec
jno
aad
cmp
add
sar
fdivs
iret
mov
pop
clc
into
add
push
dec
pop
fwait
sahf
jb
inc
push
bound
mov
scas
repnz
cwtl
nop
jecxz
cltd
lret
leave
fdivs
scas
and
mov
mov
int3
gs
xchg
or
fs
insl
arpl
push
jecxz
repz
and
cmp
and
push
jp
lods
xchg
adc
mov
sub
pop
adc
inc
push
out
xchg
insl
mov
cmp
lods
jg
pop
dec
cmpsb
movsb
jbe
add
ret
xor
mov
in
imul
mov
sbb
dec
insb
ret
ja
lock
or
xchg
dec
divb
mov
dec
dec
sub
jmp
sub
mov
fstpt
loope
jle
dec
adc
pop
adc
adc
lret
jmp
sete
lret
test
mov
mov
fisubrl
sbb
mov
imul
cli
adc
cli
dec
inc
jb
mov
cmp
and
inc
sahf
adc
lcall
lods
std
sbb
ret
iret
pusha
pop
out
sub
or
hlt
movl
out
loop
nop
jle
pop
out
nop
ret
pop
stos
mov
jmp
mov
ds
jecxz
xchg
lock
pop
sbb
mov
sbbl
dec
icebp
mov
packuswb
js
mov
jae
add
ret
lea
push
stc
lahf
test
xor
sub
xor
dec
jns
hlt
loope
and
cwtl
add
nop
xchg
dec
pop
into
jne
inc
pop
fstpl
cmp
aam
shlb
xchg
addr16
pmaddwd
cmp
test
hlt
insb
fcoml
dec
and
push
fidivrs
push
mov
jo
mov
out
mov
call
mov
out
cmp
adc
adc
mov
xchg
mov
inc
inc
shrl
psraw
lds
sti
mov
mov
add
mov
and
popf
rclb
and
daa
and
flds
popf
jmp
jl,pt
sbb
push
mov
cwtl
cwtl
xchg
lret
out
fidivrl
jle
fs
shl
incb
shll
aaa
dec
ds
mov
data16
adc
and
sbb
repz
pushf
fbld
cmp
andl
cs
cmp
jp
adc
addr16
in
push
mov
mov
rclb
push
or
and
pslld
push
xlat
and
out
cmpsl
mov
cmpl
jo
jns
jo
adc
dec
out
sbb
mov
scas
add
mov
movsl
je
mov
je
sub
mov
fisttpl
ret
inc
nop
int
pop
pusha
loope
int
imul
lret
mov
lods
cltd
ret
mov
adc
cltd
xchg
fbstp
sti
dec
dec
data16
cmp
out
or
or
sub
scas
pop
jnp
in
out
nop
cmp
sahf
int3
icebp
xor
sub
inc
jmp
enter
mov
fs
mov
data16
pop
sbb
cmp
and
ficompl
int3
mov
bound
bound
push
inc
pop
cmpl
ljmp
lock
in
cltd
repnz
mov
add
or
mov
inc
pop
xlat
xchg
sti
push
subl
cmp
js
jge
sti
mov
push
ds
shlb
pop
scas
stc
add
mov
xchg
adc
jle
inc
mov
dec
cmp
inc
sbb
xor
mov
mov
lcall
and
add
jne
shll
cmc
inc
cmp
out
xor
cld
cltd
int3
cmp
cld
ja
out
fistpll
adcb
std
mov
out
rcll
pop
adc
pop
icebp
push
fxch
dec
cmp
outsb
test
cmp
inc
xchg
mov
dec
sbb
lods
jns
mov
mov
adc
cmc
outsb
mov
pop
xchg
and
xchg
xor
lea
arpl
cltd
addr16
push
in
int3
xchg
into
push
push
imul
cmp
repz
hlt
inc
cmc
ds
pushf
data16
outsl
ja
cmp
lods
mov
adc
cli
mov
cmp
insb
xchg
jecxz
xchg
mov
insb
cmp
gs
sbb
mov
into
shll
mov
and
mov
dec
xor
in
lock
clc
je
jo
add
popa
in
loope
lods
dec
inc
xchg
popa
inc
push
sti
and
pop
sbb
mov
cld
xchg
xlat
imul
outsl
jb
sbbl
ret
sbb
out
pop
and
loope
push
dec
push
xor
mov
mov
mov
jge
cli
loope
int
orb
add
mov
leave
dec
stos
jp
jmp
jle
repz
pop
imul
sbb
mov
imul
in
rcll
mov
inc
or
jnp
mov
loop
xlat
xchg
xor
movlps
std
xchg
test
sub
insl
mov
aam
inc
jno
iret
test
int3
jno
out
push
push
cmp
clc
mov
sbb
into
lods
fiaddl
mov
mov
push
into
in
loopne
int
addr16
push
andl
push
clc
sti
es
fldenv
pop
popf
cmpsl
inc
add
push
inc
fsubr
cs
divb
icebp
mov
adc
cltd
fistl
lret
repz
mov
jl
or
fcmovu
ds
sti
jb
dec
ret
pop
jnp
mov
das
xchg
push
inc
movsl
loop
inc
int3
add
das
insl
int3
shlb
cli
inc
sbb
imul
hlt
xor
je
sbb
sbb
ret
inc
or
inc
into
add
test
jns
xchg
xchg
mov
sub
mov
sbb
inc
mov
aam
sub
push
fsubl
lret
imul
adc
cmp
mov
sub
mov
jmp
sti
cs
push
pop
ret
jnp
pusha
lds
push
inc
mov
dec
rolb
mov
mov
loopne
js
fnstsw
dec
cmp
adcb
adc
pop
push
dec
xchg
pop
ret
in
pop
push
jns
mov
shr
inc
aas
cmp
push
imulb
xor
addr16
cltd
loope
out
xchg
movsb
jae
mov
lock
call
ljmp
orl
insb
jno
nop
jbe
cltd
lods
jbe
lcall
adc
lcall
lret
stos
adc
into
daa
push
push
pop
lret
shl
icebp
or
lahf
enter
cli
idivb
push
xor
insb
jno
iret
out
push
inc
xor
addl
les
sbb
xchg
lcall
movsl
in
mov
sub
mov
out
jae
sub
clc
shl
sahf
daa
out
aad
or
sahf
xchg
cltd
inc
sub
push
icebp
stos
adc
mov
bound
cwtl
adc
mov
das
push
jecxz
ja
aas
sbb
lock
std
cltd
clc
shlb
dec
adc
xor
or
cmc
jae
mov
push
call
jecxz
and
cmc
out
mov
mov
insl
jo
jl
xor
xor
stc
outsb
imul
inc
push
lret
int
sbb
push
adc
aas
or
jecxz
adc
ss
test
inc
jb
adc
xchg
pop
mov
push
imul
pop
xchg
push
repz
sbb
and
icebp
inc
and
inc
fucomp
push
mov
fisttpll
mov
mov
hlt
mov
andb
push
lret
dec
push
outsb
sbb
cmp
inc
pop
mov
push
pushf
movsl
mov
imul
test
or
adc
push
push
sbb
pop
mov
jne
push
sbb
shlb
add
ss
jp
push
or
nop
mov
out
cmp
mov
ficompl
lock
push
add
sub
and
nop
dec
cmpsb
je
mov
std
mov
sbb
cmp
inc
or
fwait
pop
push
rolb
and
outsl
mov
arpl
mov
mov
push
xor
ja
stc
shlb
adc
mov
or
xor
mov
xchg
rorb
ds
outsl
es
loope
cld
arpl
shrb
jns
lcall
movsl
xchg
add
cwtl
xchg
fcmovnb
lods
push
xchg
add
xchg
popa
divps
arpl
jb
pop
ds
pop
xor
jbe
in
mov
and
sub
sub
bound
divl
mov
or
scas
adc
out
mov
lret
in
or
pop
shrl
add
jo
scas
inc
outsb
cmp
add
inc
pop
and
hlt
jns
push
push
in
in
inc
addl
popf
add
push
push
and
sub
inc
aam
test
cmp
aad
repz
sub
aad
fmulp
stos
fsubl
popl
dec
sub
js
aas
mov
loope
or
dec
jnp,pt
fimull
xor
insl
pop
mov
ja
mov
imul
inc
std
cmp
sbb
inc
leave
roll
jl
movsb
mov
jae
cmp
pop
mov
add
inc
or
lret
or
inc
dec
push
xchg
cmpsl
mov
mov
test
or
inc
cmc
cmpsl
sahf
mov
repnz
pop
xchg
xor
cmp
push
repz
stos
pop
sti
lahf
xchg
cltd
xor
lock
in
clc
pop
lea
xchg
mov
jle
dec
fisubs
cli
push
adc
xor
jae
and
cmovnp
cmp
fidivrl
idiv
clc
or
pop
pop
push
stos
and
inc
dec
jge
sub
lds
mov
mov
loop
mov
xchg
dec
gs
stc
ja
lods
lret
in
ret
popa
mov
je
jne
or
inc
shlb
data16
dec
arpl
bound
pop
daa
enter
sbb
mov
mov
xor
push
and
addl
lods
sub
sbb
dec
data16
push
ss
push
pop
xlat
mov
cli
popf
mov
lea
mov
ja
pop
and
fistps
jb
gs
mov
or
pop
sti
fstp
je
jge
jbe
mov
sti
iret
inc
ss
jle
ret
stos
push
iret
xor
fisttps
enter
cmp
cld
jno
fwait
jg
jge
mov
loopne
push
push
int
andl
push
mov
out
loope
ljmp
repz
mov
jns
and
loope
sbb
mov
hlt
mov
xor
pop
pop
dec
repnz
xchg
lods
xchg
les
lock
loope
pop
roll
jae
outsl
or
and
enter
dec
pusha
pop
push
stc
sbb
add
jne
fldt
imul
dec
mov
pushf
hlt
fsubs
dec
xchg
ja
cld
mov
sbbl
pop
in
int3
stos
and
ljmp
cmp
dec
jmp
scas
or
pop
aam
xchg
pop
jecxz
push
cmp
push
xchg
jl
aam
mov
ret
jmp
add
ljmp
addr16
mov
push
fsubrl
ds
push
in
cmpsb
rcll
movsl
or
cmp
cli
cmpl
cli
mov
push
jnp
push
loopne
xchg
mov
or
push
lret
out
das
sbb
testb
sub
fwait
pop
iret
inc
sbb
stos
pop
imul
mov
ret
filds
psrld
pushl
dec
notl
add
dec
out
sub
mov
fcompl
orb
movsl
or
mov
inc
je
cmpsl
sbb
jno
movsl
fsub
aas
mov
push
out
add
pushf
adc
push
mov
mov
inc
in
in
and
jl
sub
xor
lahf
mov
fadds
jg
mov
pop
js
cmp
xorb
push
mov
and
aad
push
pop
jle
popf
rcrb
stos
mov
loop
sbb
test
leave
jne
popa
pushf
fstps
in
mov
xor
testl
rolb
cmp
and
pusha
push
movsl
dec
daa
cli
clc
xchg
aas
and
sbb
jb
mov
into
ljmp
mov
cmc
imul
inc
fidivs
lcall
mov
cmpsl
pop
test
popa
dec
daa
jmp
imul
sub
jp
xor
dec
stos
xchg
add
sub
in
xchg
cld
pop
out
in
xor
idiv
clc
daa
in
in
add
popf
shrb
and
lods
cmc
mov
xor
push
jae
addr16
fimuls
xorl
scas
lock
in
test
mov
pop
das
mov
pop
adc
sbb
push
add
cli
fs
sub
test
mov
inc
pop
scas
aaa
fisttpl
mov
xchg
dec
insl
je
xor
dec
outsl
push
nop
cmp
leave
gs
pop
out
stos
xchg
xchg
jno
xchg
popa
or
xor
scas
lahf
xor
out
pop
dec
out
pop
mov
add
mov
push
add
xchg
xor
push
and
pushf
rorl
dec
lods
loope
cmpsb
or
mov
lret
fldenv
iret
enter
mov
push
jae
sbb
adc
out
pop
in
xor
jns
test
movb
pop
imulb
pop
ds
mov
inc
xchg
xchg
xor
and
inc
mov
cmp
shrl
mov
xchg
js
jle
dec
pop
scas
inc
inc
cmp
lcall
jns
std
jecxz
pusha
inc
xchg
aad
xor
test
not
xor
fcmovnu
xchg
leave
fs
add
xchg
loope
add
inc
stos
add
outsb
mov
jns
subl
push
pop
ja
popf
adcb
mov
cmp
ret
cmpsl
mov
mov
xor
inc
aam
ficompl
sti
push
jno
mov
xchg
aam
daa
bound
inc
lcall
jns
cmpsb
out
push
pop
mov
int3
ljmp
es
sarb
sbb
cmpsb
mov
and
xchg
dec
push
pop
lods
aas
jns
ret
dec
inc
fwait
mov
ja
out
push
ret
shlb
loope
jp
js
mov
lea
xchg
cmp
jle
xor
cmc
loop
notb
cmpsb
xchg
in
jne
fldenv
stos
pop
repz
lea
cmc
sbb
jne
int
add
sub
ss
stos
adc
les
cli
dec
popa
out
sarb
call
outsb
push
cmp
repnz
xor
cltd
loopne
in
jmp
je
inc
mov
fisttpl
mov
stos
jge
jbe
mov
add
or
fs
movsl
or
clc
and
aas
pop
and
stos
mov
jl
mov
neg
jnp
cmp
pusha
daa
cmc
aaa
mov
cmp
fs
ss
out
or
adc
mov
xchg
hlt
dec
push
mov
in
out
cli
jo
bound
jns
push
movsl
jno
mull
fcmove
or
sbbl
mov
mov
popa
inc
mov
jns
shrl
push
fistl
xchg
xchg
arpl
fld
sbb
adc
cs
int3
push
cmp
and
xchg
cld
inc
jns
push
js
push
fsts
mov
dec
cmp
divb
je
lods
mov
aas
sub
jmp
adc
sbb
add
sub
mov
inc
mov
cld
mov
add
inc
push
es
push
ret
mov
call
xchg
ljmp
enter
sbb
in
jne
pop
or
push
lds
imul
incl
inc
enter
xor
mov
pusha
cmp
jnp
mov
mov
aaa
xor
cmp
int
dec
out
arpl
dec
dec
fiaddl
sahf
bound
mov
xor
int
push
repz
inc
cvtpi2ps
xlat
xor
movsb
call
jo
xor
xor
stos
out
adc
mov
push
pop
pop
mov
sti
push
mov
or
es
add
pop
data16
out
pop
lahf
clc
xor
mov
daa
loopne
mov
or
ret
rcl
test
pop
add
lea
insb
and
push
in
fwait
test
inc
mov
lods
add
mov
push
js
mov
pop
sbb
cmp
ljmp
and
out
mov
enter
dec
mov
scas
repnz
enter
stos
addr16
cmc
into
push
nop
ds
dec
mov
push
push
inc
inc
inc
mov
xchg
lcall
dec
add
mulb
aas
clc
cs
popf
or
les
push
es
push
decl
lock
pushf
pop
in
and
outsl
das
ds
test
jno
xor
cmp
mov
cmp
jo
pop
gs
cmpsl
add
pop
pop
loop
mov
xchg
jne
out
test
dec
xor
leave
aas
sbb
lret
ss
mov
pop
and
aam
dec
iret
mov
gs
insl
jo
sub
in
mov
div
mov
es
lcall
xchg
adc
in
pop
lods
mov
dec
sti
int
push
out
inc
mov
pop
lahf
loope
jbe
xor
inc
fbstp
push
inc
inc
iret
mov
mov
mov
pushf
into
mov
ret
stos
icebp
adc
movsb
gs
fcom
gs
push
push
mov
in
js
inc
pop
testl
test
mulb
out
cmp
lock
jne
and
push
fsubs
dec
pop
pushf
adc
es
mov
push
or
pop
mov
or
stos
testb
mov
outsl
mov
iret
inc
pop
add
sbb
push
push
mov
push
cmp
add
mov
pop
movb
jle
push
fstpl
test
scas
push
sbb
sub
cltd
pop
je
leave
bound
push
mov
test
cmp
sub
jmp
addb
sarl
xor
daa
mov
iret
push
in
dec
ret
pop
das
or
shrb
xchg
xchg
gs
mov
syscall
fbstp
jg
mov
or
nop
inc
push
cld
jo
dec
push
rolb
sbb
dec
sub
cwtl
out
pop
lret
sbb
loope
dec
aam
and
mov
mov
je
mov
jle
or
pop
les
mov
cld
ss
cmp
rolb
mov
movsl
cmp
push
repz
in
ficoms
fdiv
and
dec
sar
out
jge,pn
and
test
mov
sub
jbe
or
das
aaa
mov
lock
movsl
adc
pop
dec
push
arpl
dec
mov
in
stos
jecxz
and
orl
push
mov
dec
cmpb
push
insb
mov
inc
lahf
clc
add
sbb
pop
outsb
test
sbb
inc
fsubr
mov
push
cli
pop
imul
in
adc
addl
cltd
stos
test
fidivrl
idivl
out
mov
inc
fidivrs
mov
adc
fstpt
dec
aaa
or
mov
cs
aad
pusha
test
push
dec
rcrb
fsubrs
stos
sbb
sub
lret
pop
pop
pop
je
notl
shlb
in
movsb
pop
lcall
mov
adc
jbe
inc
popf
add
loopne
mov
pop
mov
ret
negl
xor
in
jb
and
outsl
jns
test
aad
jbe
lcall
movsb
bound
mov
scas
adc
das
rcrb
pop
add
mov
cmp
cmc
dec
jmp
dec
or
out
cmpsb
out
pushf
insl
jecxz
test
dec
jae
in
push
inc
cmpsb
mov
xchg
jae
lock
jl
orl
test
pmulhuw
repz
xchg
hlt
xlat
inc
xchg
add
xchg
mov
stos
and
test
std
sbb
pop
xor
push
lahf
cmp
mov
hlt
dec
pusha
out
int3
pushf
gs
push
dec
pop
pop
in
mov
rcr
imul
mov
pop
cmpl
sub
inc
pop
mov
call
stos
sahf
jne
outsl
and
inc
iret
daa
nop
push
aaa
mov
pop
sbb
test
in
andl
sbb
dec
je
jle
or
or
inc
test
pop
push
inc
xchg
or
lea
enter
cmp
pop
pop
in
sbb
add
lods
inc
add
mov
testb
incl
sbb
mov
jb
dec
xlat
popf
add
jl
dec
aad
inc
xchg
mov
inc
mov
mov
xchg
sub
mov
sub
or
xor
test
or
cltd
mov
pop
decb
test
lods
xor
mov
sub
xchg
dec
mov
sub
push
xor
xchg
loop
imul
fsubrl
popa
call
xor
out
data16
fistl
sbb
mov
into
inc
rcrl
pop
jne
das
nop
sbb
int
sbb
and
loop
mov
cmp
xor
orb
xchg
add
loopne
inc
mov
sahf
fdiv
ss
or
inc
aas
dec
lea
rcl
jge
jl
pop
ss
dec
movd
cmp
dec
lret
jae
cmp
jne
xchg
push
and
rolb
testl
dec
mov
cmp
lds
lcall
mov
pushf
pop
sub
jne
jno
out
or
lock
repz
movsl
jns
rorl
push
mov
js
adc
loope
dec
dec
les
int3
int3
and
xor
insb
mov
iret
je
cs
sahf
adc
and
jo
cmp
addb
fcoms
int3
test
pop
divl
int
and
ds
adc
add
mov
int
mov
stos
arpl
out
cli
imul
pop
adc
jp
mov
lea
sti
add
sti
mov
and
mov
jns
jle
xor
loope
pop
testb
scas
mov
sbb
and
jl
cmpsl
cli
mov
add
adc
ja
push
lret
jns
sbb
leave
mov
mov
fldcw
xchg
cld
jo
pop
icebp
adc
push
adc
add
mov
inc
lret
fucomi
enter
ds
insb
and
add
out
ds
cld
leave
arpl
mov
push
iret
out
call
sub
dec
dec
cmp
push
mov
cmp
out
pop
cmp
mov
pop
sti
scas
add
je
xchg
mov
cmpsl
cmp
test
lahf
lock
mov
mov
xchg
xlat
dec
xchg
and
ds
inc
loope
daa
insb
in
add
dec
pop
xchg
loopne
loop
sbbl
movsb
fwait
movsw
pop
and
jecxz
or
mov
xlat
and
and
fs
dec
dec
xchg
andnps
ret
sub
inc
mov
mov
scas
mov
movsb
adc
dec
mov
in
push
mov
fsubrl
push
mov
mov
mov
mov
adc
and
cld
inc
xchg
dec
jno
icebp
cltd
xchg
cmc
xchg
dec
in
fmull
sbb
inc
mov
mov
xor
add
fcoms
out
dec
jno
mov
fs
cmp
popf
lods
leave
loopne
out
add
aas
mov
sbb
jbe
dec
loop
xor
mov
push
insb
add
mov
jae
subb
das
into
subb
and
pop
sub
rcrb
mov
scas
test
stos
mov
inc
add
adc
cmp
adc
les
int3
sub
or
leave
mov
cld
dec
pop
mov
xor
in
sbb
loope
cwtl
inc
loopne
dec
cmp
lods
cmp
cmp
mov
mov
iret
sub
and
imul
jnp
adc
fidivs
mov
std
add
popf
jb
sub
inc
mov
sbb
lret
jge
jecxz
jbe
lds
lods
xchg
or
rcrl
iret
test
ss
xor
js
adcb
xor
sub
aas
das
in
mov
pop
jno
popf
je
cmp
sbb
cmp
fcomip
loop
xchg
jp
and
stos
or
or
jecxz
enter
dec
outsb
mov
and
bsf
cmpsb
or
mov
adc
pop
add
pop
xor
xor
loopne
adc
sub
inc
sbb
sbb
mov
cmp
sub
movsb
xor
stos
aad
outsl
dec
lods
dec
push
xor
sub
mov
pop
scas
push
repnz
mov
insl
mov
test
push
adc
std
adc
dec
push
nop
lfs
hlt
sarl
imull
icebp
dec
push
jecxz
insl
movsl
xchg
pusha
mov
pop
lock
adc
test
fsts
cli
inc
in
adc
bound
and
xor
or
test
in
gs
xor
shll
enter
repz
ljmp
mov
inc
or
jmp
cli
outsb
shrd
jo
lret
sub
mov
fsubr
cli
xorl
mov
push
sbb
xchg
pusha
les
pop
pop
mov
mov
movsb
pop
push
adc
cmp
xchg
push
jecxz
mov
rol
xor
add
enter
pushf
xchg
xchg
hlt
rcr
adc
mov
jge
sbb
mov
aaa
cmp
cmp
mov
push
rorl
lods
stos
adc
xor
jmp
scas
cmp
lock
pop
cs
fisubrl
movsb
stos
mov
ret
rcrw
push
call
mov
aaa
xor
lds
dec
xor
push
scas
les
sub
xlat
pop
sub
and
inc
push
dec
or
mov
sbbb
pop
inc
loopne
lea
xor
inc
jmp
dec
xchg
stos
cmc
iret
ss
cmpsb
movsl
loopne
mov
or
cmpsl
in
in
inc
add
add
add
jo
out
add
mov
xor
in
mov
jg
aas
jge
test
mov
std
arpl
xchg
lea
sub
int3
push
leave
mov
sar
cmc
sbb
out
lods
bound
dec
push
push
sbb
mov
add
mov
push
mov
adc
mov
sbb
icebp
scas
incb
cwtl
add
js
pop
xlat
cmpb
scas
gs
pop
or
aad
fimuls
mov
sbb
in
adc
popa
or
insl
int
cmpsb
imul
cmpsl
mov
ja
mov
cli
test
daa
pop
xchg
jns
cmpsb
bound
call
idiv
inc
in
rorl
jp
dec
sbb
dec
in
xchg
xor
jl
data16
cmp
loop
movsb
daa
xor
and
or
cmp
ret
mov
cmp
jg
rcll
xchg
sub
pusha
lret
sub
adc
and
fnop
mov
bound
rcr
cli
aas
xchg
gs
fdivrs
lahf
or
sub
adc
decb
mov
push
push
mov
jmp
inc
pusha
ret
pop
dec
leave
jbe
xor
leave
cmp
jmp
out
pop
pushf
paddb
scas
push
mov
sub
inc
int
push
mov
cmc
mov
inc
test
stos
and
imul
push
cli
ret
cltd
xchg
sbb
jno
jge
mov
popf
cmp
push
js
movsb
lcall
out
ds
adc
repz
mov
add
std
cmp
sarb
jae
adc
roll
xchg
jecxz
ja
or
xor
leave
cmp
xchg
mov
sub
lds
dec
stc
xchg
lret
popf
in
pusha
and
insb
in
and
bound
xor
sub
dec
dec
jnp
out
mov
dec
jns
ds
ret
mov
pop
jmp
sub
loop
and
loopne
push
pop
mov
sbb
sbb
loopne
xchg
mov
mov
dec
cmp
sbb
dec
xor
iret
cmp
jnp
and
xchg
mov
adc
mov
outsl
dec
or
into
jle
xor
adc
jno
mov
aaa
push
pop
in
cmc
daa
dec
ds
mov
xor
jp
pop
and
mov
pop
inc
sub
insl
mov
add
in
mov
lds
xlat
mov
hlt
int
cmp
stc
int
stos
cld
sahf
xchg
jecxz
pop
fldl
inc
inc
xorl
int3
sub
mov
mov
imul
jmp
gs
dec
adc
and
enter
imul
daa
rolb
xor
lods
or
sub
mov
fsub
into
jle
mov
pop
mov
xchg
das
mov
subb
cmc
ret
gs
mov
lea
lret
pop
adc
jle
inc
pusha
jae
es
pop
pop
xchg
loopne
mov
fcompl
cmp
xor
push
lods
aam
mov
sbb
add
cmp
imul
mov
cmp
ficompl
jmp
inc
outsb
fmulp
mov
aas
jmp
fucompp
lret
int
sbb
andb
push
or
jne
aaa
int
fsubl
mov
mov
sbb
xor
xchg
jns
xor
aas
inc
mov
lds
imul
negb
insb
hlt
lds
dec
out
sub
repnz
add
pop
push
inc
cmc
dec
subb
addl
sbb
popf
adc
roll
ret
fcompl
sub
and
mov
add
jb
sub
push
sub
lcall
xlat
inc
mov
inc
add
fmuls
ja
imul
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
lods
mov
xor
pop
sbb
js
lods
sbb
pop
adc
daa
xchg
call
sar
lods
cmpl
scas
mov
sahf
pop
dec
push
jnp
and
pop
inc
jp
inc
test
test
cmp
jle
arpl
and
xor
adc
scas
in
lret
mov
es
sbb
inc
cmp
xchg
in
adc
push
mov
call
jp
xor
ficoms
repnz
inc
dec
and
xlat
imul
sub
cmp
sub
pop
pop
pop
xchg
sahf
xchg
cmpsb
adcl
ror
fsubr
lret
push
add
add
frstor
push
and
repnz
mov
xchg
data16
imul
cs
in
push
pop
das
dec
mov
xor
mov
push
test
out
and
cs
out
sbb
adc
mov
mov
sbb
pushf
popf
add
jle
in
aam
std
in
xchg
xor
or
sub
push
sub
sbb
push
cli
and
sub
inc
push
popf
cmc
pop
dec
jno
or
push
ja
dec
repz
lods
mov
pop
mov
stos
cmc
lahf
add
mov
mov
jmp
push
xor
jno
add
adc
je
arpl
xchg
int3
mov
pushf
xchg
insb
and
sub
test
loop
pop
xchg
divb
mov
rorb
or
pop
shr
fwait
dec
dec
das
outsl
or
or
xlat
mov
add
inc
inc
jle
jns
inc
out
mov
insl
and
mov
hlt
inc
int3
aaa
push
fs
adc
repnz
cmp
jle
cmpsl
mov
lahf
inc
repnz
fistl
aaa
push
push
outsl
insl
bound
stos
dec
scas
push
fdivrl
pop
push
jl
add
and
dec
pop
call
or
mov
popa
fnsave
sub
cmp
fs
xor
inc
test
mov
jg
lods
dec
or
icebp
mov
popa
test
cs
push
jnp
push
cmc
mov
inc
ja
pop
imul
adc
push
rcrb
jmp
cmpsb
xchg
jae
add
stos
mov
out
mov
add
and
mov
sbb
out
negl
pusha
aaa
mov
lds
call
and
test
or
int3
xor
mov
icebp
pushf
or
xorb
mov
sub
sbb
fildll
pop
xchg
pop
gs
ss
rolb
mov
pop
into
fmulp
ljmp
adc
mov
fmull
jnp
imul
inc
push
hlt
inc
in
test
andl
pop
sub
outsb
sqrtps
pop
loop
jae
push
push
sti
inc
jnp
jmp
fisubrs
xchg
cmp
fcmovu
adc
xor
leave
or
fists
xchg
andl
add
pop
xchg
adc
xlat
pop
icebp
cmp
loopne
stos
aas
mov
push
cs
sbb
fcmovu
push
mov
dec
roll
negl
popa
dec
imul
push
adc
inc
or
outsl
push
jne
bound
mov
sahf
ds
or
daa
jns
ret
jo
scas
mov
daa
mov
aas
fdivl
fisubrl
add
fisttps
in
mov
or
xor
rorl
and
dec
lods
mov
mov
imul
push
and
and
cmc
lret
push
loope
je
es
scas
in
dec
sub
and
add
xchg
xor
add
push
dec
lods
movsl
scas
enter
stos
pop
pop
mov
cmp
inc
lret
js
lret
stos
jl
push
aam
xchg
cwtl
sbb
cmpsl
mov
ss
roll
cmpl
mov
xor
fidivs
cmp
pop
test
out
cmp
cltd
mov
jmp
leave
push
or
lods
or
jno
add
lret
ret
in
jle
adc
lea
adc
sub
cli
fwait
lock
cmp
or
lods
fistpll
xchg
es
mov
push
add
jmp
and
xlat
iret
cmp
scas
gs
insl
punpckhbw
les
movsl
xchg
xchg
mov
cmc
fdecstp
sub
cli
or
out
mov
inc
push
mov
dec
dec
mov
push
mov
push
jne
or
dec
loopne
in
dec
ja
xchg
ds
lods
in
outsl
ficomps
pushf
lods
enter
fwait
cld
and
or
or
mov
pusha
dec
mov
cmp
movsb
mov
dec
xchg
jae
pop
lahf
loop
add
popf
mov
mov
dec
xor
daa
lds
mov
mov
push
cmp
adc
test
push
lods
jae
sarl
mov
je
loope
xchg
ss
add
pop
aam
lcall
push
adc
pusha
push
dec
fisubrs
mov
cmp
cmp
enter
mov
ret
or
sub
pusha
test
mov
xor
and
movsl
and
subb
push
shl
or
xchg
push
int
rorl
cltd
adc
or
adc
push
out
inc
hlt
add
pushf
sub
pop
inc
or
mov
xchg
mov
filds
or
test
mov
or
push
scas
inc
pop
jg
dec
imul
and
ds
push
xor
ds
fisttps
imul
lret
in
xor
jl
xchg
adcb
decb
or
cwtl
xchg
les
in
scas
jmp
add
call
inc
sub
fwait
std
aad
fistl
fnstsw
sub
sub
xor
jne
pop
or
push
pop
pop
lods
mov
adc
shrl
dec
lock
pop
jo
outsb
popa
pop
and
xchg
pop
cwtl
imul
xor
push
mov
mov
and
iret
and
add
test
cwtl
lods
or
test
and
test
mov
sbb
jmp
data16
adc
adc
or
cs
mov
or
mov
jns
movsb
jecxz
scas
jbe
adc
lds
push
cmp
dec
popa
dec
sub
and
push
lods
out
mov
xchg
stc
and
cmp
test
jb
clc
je
enter
push
daa
mov
cmp
push
sub
fs
dec
mov
mov
xchg
cld
mov
movsb
mov
inc
cs
jmp
xor
pop
daa
push
test
das
and
mov
mov
rol
mov
in
and
lea
push
push
mov
mov
add
fstpt
push
add
push
adc
adc
in
mov
sti
mov
in
cmpsb
sti
push
mov
rcr
push
mov
stos
mov
rol
leave
jge
pop
nop
cmp
and
sub
dec
cmp
push
jmp
aaa
push
or
lds
pop
push
xchg
push
fmuls
fcmovne
insl
pushf
lock
mov
cmp
add
lods
push
fiaddl
mov
repnz
xchg
dec
push
icebp
mov
adc
loop
int
jle
mov
ljmp
cmp
or
div
sbb
scas
sbb
outsb
sti
push
mov
movsl
pop
js
les
and
xchg
imul
scas
dec
mov
and
adc
lahf
xor
aaa
movsb
adc
adc
sahf
jns
shlb
add
sbb
popf
xor
push
das
jmp
mov
ds
jmp
adc
lods
ret
pushl
js
xor
in
cmp
jo
ljmp
dec
xor
and
adc
xchg
push
cli
mov
lcall
lcall
adc
fisttps
mov
mov
wbinvd
pop
mov
mov
aas
lds
mov
orb
bound
bnd
lret
pop
lahf
mov
lods
sbb
and
and
out
cmp
dec
js
mov
test
lds
ds
mov
insl
ja
inc
js
mov
jmp
iret
and
xor
or
sahf
dec
daa
outsl
jno
fldenv
data16
nop
xchg
sahf
je
or
xchg
sub
scas
mov
int
pop
rorl
repz
lahf
cwtl
leave
daa
popa
shrb
mov
cmc
pop
xchg
icebp
fldcw
or
dec
sub
imul
mov
aas
push
and
cli
or
iret
outsb
mov
pop
push
push
in
mov
mov
fiaddl
jge
std
lock
repz
mov
sbb
cwtl
inc
dec
sarb
cli
outsb
sbb
punpckhwd
gs
lea
jae
adc
stos
xchg
pop
xchg
mov
cmpsl
int3
test
sahf
add
inc
mov
xchg
dec
testb
or
repz
push
adc
fists
fstpt
mov
faddl
lea
jmp
rcrl
push
stos
arpl
out
sbb
fildl
sbb
dec
scas
test
mull
xor
in
push
addr16
jne
pop
dec
fcmovne
rcr
xchg
ss
jnp
add
icebp
push
add
mov
lcall
jmp
lret
lds
xor
ret
loope
push
sub
lods
ret
add
aam
add
ficoml
mov
stos
mov
in
lcall
mov
lret
leave
adc
cmpl
outsl
dec
ret
aad
dec
sub
add
repz
or
dec
stos
ja
lahf
mov
imul
scas
dec
ss
sub
mov
fnstcw
sbb
cwtl
je
xor
and
sti
adcb
mov
lods
shr
sbb
fs
inc
lods
mov
shrl
push
scas
fdiv
cmp
add
mov
inc
xor
and
in
mov
jle
mov
xchg
pop
cmpsl
out
adc
jo
xchg
xor
sbb
and
pop
xor
test
test
xchg
mov
adc
lret
push
push
aad
pop
loopne
or
lahf
je
mov
cli
dec
fistps
jl
jae
xchg
stos
imul
iret
adc
inc
daa
rcll
pop
add
xlat
inc
sbb
xchg
pop
jnp
aas
dec
fistpll
mov
xchg
vmptrst
and
pop
jae
ljmp
ss
dec
mov
out
and
jb
repnz
mov
ds
ss
data16
int3
addl
sub
jnp
and
test
arpl
cwtl
movsb
popf
popf
push
cmp
add
in
xchg
sti
jno
pop
popa
push
mov
pop
xor
push
dec
cltd
inc
fsubrs
sti
int
loope
jae
jb
or
xchg
add
in
in
enter
aad
and
nop
sbb
xchg
dec
gs
addr16
jecxz
lds
push
clc
and
aad
test
pop
jge
ret
imul
sbb
inc
fdivr
adc
test
adc
jmp
scas
mov
lcall
push
jbe
cs
shlb
sbb
mov
jo
shl
push
imul
clc
push
nop
and
rolb
dec
insb
aas
fmull
jl
mov
inc
and
icebp
pop
mov
dec
push
lcall
out
lods
xor
out
cmc
adc
add
lret
ds
cmpsb
mov
pop
fimuls
lds
jae
addr16
push
mov
mov
sahf
adc
ljmp
pop
movsl
out
sbb
lea
in
insl
adc
insb
fs
push
push
in
mov
cmp
xlat
mov
lods
enter
test
cmp
test
pop
bound
fwait
imulb
adc
stos
cmp
mov
hlt
scas
ficoms
cmpsl
lret
lret
mov
xor
arpl
addr16
adc
push
dec
dec
out
sbb
adc
jb
push
pop
or
push
xchg
out
xorb
loope,pt
mov
xor
out
xlat
xlat
jle
add
mov
shlb
out
fs
js
testb
xchg
shll
add
pop
pusha
dec
das
addr16
lock
aam
cmp
lock
cmpsb
mov
iret
jns
push
adc
cltd
dec
lret
cmp
mov
pop
xchg
loopne
mov
cmp
je
cmpsl
and
xchg
pop
jp
pop
dec
adcb
dec
add
mov
mov
insb
in
bound
sub
mov
mov
rcrb
les
test
shrb
es
jo
mov
in
into
mov
dec
movsb
or
hlt
xor
pushf
inc
inc
fimull
fldenv
fsubl
add
dec
dec
outsb
xchg
stos
movsb
stc
xor
cmp
insb
push
push
roll
dec
dec
inc
mov
cmc
sub
xchg
dec
or
andb
scas
push
sub
xchg
mov
mov
pop
sub
andl
insb
adc
jbe
mov
out
mov
lret
add
pop
pop
dec
xchg
daa
ss
sub
xchg
incl
sub
stc
xchg
addr16
and
shlb
sbb
test
cmp
pushf
nop
stc
add
cmpsl
jbe
xchg
xchg
lcall
push
imul
cmc
scas
mov
mov
jae
add
mov
mov
jge
cli
sbb
jno
mov
mov
sub
xor
out
out
jecxz
xor
lcall
or
insl
test
mov
pushl
es
sub
in
call
stos
sub
mov
push
sarb
addr16
or
jmp
and
ret
cmpsl
mov
xlat
xchg
ds
repz
adc
sahf
jecxz
shrl
or
pop
xor
aad
mov
dec
mov
in
sbb
in
push
lds
sar
lods
sbb
and
jle
test
push
cmc
mov
xchg
dec
push
fcmovnb
movsb
sbbb
jmp
add
push
inc
aad
cmp
aam
jns
xchg
or
cs
sbb
add
leave
xchg
jns
into
dec
loopne
jge
aad
and
testl
inc
out
int3
fidivs
push
mov
and
rcrl
mov
pop
shrb
inc
pop
dec
or
or
imul
dec
jo
cmp
mov
sbb
add
int
cwtl
xchg
das
or
aaa
push
cmpsl
push
insl
sub
or
sub
jae
mov
orb
pusha
call
sbb
repnz
je
cli
or
int3
pop
les
frstor
cwtl
pop
loop
es
jbe
jp
out
xor
in
xor
dec
mov
push
dec
sub
pop
mov
aam
loope
gs
push
adc
xchg
inc
pop
push
pop
mov
enter
fwait
arpl
xor
adc
pop
enter
stos
les
sti
xchg
xchg
sub
sub
rol
mov
shlb
jbe
pop
cmp
mov
in
je
push
enter
popa
sbbb
shll
addr16
jbe
leave
shlb
xchg
imul
sbb
mov
sarl
mov
sbb
shll
or
popa
popf
adcb
into
cmp
inc
and
cs
lret
imul
ret
into
repnz
jg
add
adc
out
push
sti
fnstcw
mov
addr16
inc
and
ret
pusha
fwait
xor
xor
mov
stos
sub
pop
mov
enter
leave
repz
xor
nop
outsl
push
notb
cmp
arpl
sbb
bnd
inc
insl
push
cld
cmp
add
push
bound
jmp
push
lahf
add
lahf
mov
or
ljmp
push
mov
xchg
test
mov
lea
xchg
cs
push
xchg
dec
mov
rorb
add
pop
mov
pusha
dec
lods
sbb
ss
adc
and
aaa
mov
lret
cmp
repz
add
nop
cmp
add
xchg
scas
cltd
cli
xor
insb
fldt
std
rclb
sti
fs
dec
cltd
dec
sub
rcrl
aaa
loop
dec
divb
push
push
adc
mov
std
lds
stos
ss
pop
cmp
dec
int
out
out
stos
dec
xchg
mov
fadd
daa
or
enter
aad
stos
scas
popl
lcall
cmp
movsl
mov
push
aad
cmp
push
clc
icebp
jp
stc
movsl
bound
cltd
pop
ss
sub
out
inc
cmp
sbb
cltd
inc
cwtl
in
fwait
stc
test
insb
data16
out
xchg
jmp
jbe
sub
gs
pushf
unpcklps
cli
ljmp
mov
dec
push
inc
pop
mov
pushf
hlt
mov
mov
xor
push
les
lea
and
je
pop
pop
sub
jno
lock
xor
sbb
xor
lret
insl
movups
sbb
mov
xchg
xor
fdiv
push
mov
into
fldl
inc
jle
push
nop
cmp
and
fwait
inc
fst
fmulp
cwtl
clc
pop
push
loopne
jno
xor
and
and
dec
add
setnp
mov
add
inc
imul
fucom
aas
add
sbb
xor
jb
out
pop
or
fs
and
lea
clc
cmp
jg
cmp
mov
ficoml
or
sarb
in
repnz
shll
cmpsb
or
int3
and
movb
int
sub
ss
push
sarb
data16
addb
mov
sub
fimull
es
or
fiaddl
xchg
mov
xor
add
jns
push
dec
fcom
xchg
fwait
pop
mov
ffreep
lea
pop
mov
sbb
jne
pop
outsl
jmp
fwait
out
cmp
adcb
push
imul
sub
jg
sub
sti
or
icebp
jnp
jl
test
pop
inc
ret
mov
cmp
rolb
xor
fwait
mov
ret
test
movsl
mov
mov
enter
mov
std
inc
ret
lea
xor
mov
sub
mov
jp
and
cmp
push
rol
ret
fnstcw
mov
sbb
push
out
mov
dec
int3
fldenv
mov
and
ss
fidivrs
call
out
add
add
pusha
cmpsl
ljmp
mov
and
push
enter
xchg
cmp
xchg
xor
aam
jg
and
dec
adc
fiadds
sub
out
cmp
aaa
pop
repz
mov
add
pushf
mov
xchg
ret
popf
add
dec
popf
sbb
inc
mov
mov
add
mov
mov
das
jmp
in
mov
xchg
jg
cltd
mull
popf
push
iret
cmpsb
or
in
int
dec
sub
outsl
les
pushf
mov
push
ds
mov
insb
hlt
fdivl
fdivrs
xchg
cmp
daa
inc
daa
mov
out
popf
test
or
and
pop
add
jbe
clc
aad
mov
aam
call
jnp
and
mov
orl
mov
pop
or
out
lods
sarl
push
xchg
bound
adc
xor
cmp
and
mov
outsl
jno
or
int3
or
js
ljmp
in
xlat
movsl
pop
arpl
fs
fnstsw
sbbl
mov
or
inc
mov
in
push
in
data16
add
mov
lds
pop
nop
mov
cmp
add
push
sbbb
in
inc
movsl
int
repnz
xor
mov
stos
mov
xchg
inc
cli
or
rorb
das
fs
push
pop
and
jb
or
dec
ljmp
jecxz
in
mov
decb
sahf
out
push
call
pop
les
add
dec
je
clc
add
out
dec
popa
mov
lcall
sbb
stos
jnp
insb
shll
lcall
lods
inc
inc
xchg
sub
sbb
in
cs
and
repnz
hlt
int3
mov
jl
into
xchg
dec
das
divl
push
dec
jmp
js
lret
js
mov
mov
sbb
sbb
xchg
aaa
fisttpl
mov
mov
xor
pop
outsb
inc
xor
int3
xchg
mov
hlt
sub
xchg
mov
mov
cmpsb
or
mov
clc
clc
divl
lds
inc
in
xchg
or
sbb
fisubrs
jg
jge
xlat
mov
cwtl
iret
mov
xor
lcall
stc
add
xor
outsb
jecxz
inc
dec
push
out
add
mov
add
mov
sub
mov
fidivl
clc
push
bound
xor
xlat
push
fs
lock
cmc
add
adc
xor
pusha
cmp
outsb
pop
out
jl
or
fs
aam
roll
xchg
loop
push
xor
jne
mov
pop
jl
xchg
sub
lock
ja
adc
adc
jecxz
scas
in
into
pop
shrl
or
or
aaa
jno
js
add
rcr
dec
iret
jae
lahf
pop
adc
jae
sbb
mov
jno,pn
jecxz
ficompl
dec
arpl
mov
psubusw
popf
jl
mov
mov
rcrl
jbe
ljmp
and
mov
addb
mov
xor
aam
incb
into
push
arpl
fxch
cmpl
jbe
sbb
and
in
mov
jbe
inc
popa
clc
pop
outsb
sbb
loope
cmp
push
jl
inc
lahf
sbbl
sbb
push
in
into
cmc
and
xor
mov
pop
icebp
into
daa
rcrl
lret
shlb
fstl
hlt
addr16
sbb
mov
cmpsb
loope
mov
pop
pop
aam
cld
and
add
negb
or
mov
mov
sub
or
out
movsl
adc
mov
ror
inc
mov
push
jo
xor
sti
shrb
dec
lret
in
or
cld
or
int3
pop
or
sbb
pop
scas
aam
imul
jecxz
mov
push
fnstsw
rcll
sbb
or
xorb
stos
mov
push
mov
dec
imul
inc
fildl
adc
loopne
fcmovb
bound
inc
cmc
adc
in
inc
pop
adc
cmp
xchg
mov
push
pop
sub
sub
mov
test
dec
xor
add
jo
fsub
ret
mov
ja
mov
dec
cmp
out
fs
ficomps
jge
es
push
xor
pop
clc
mov
repnz
es
cmp
bound
mov
pop
je
xor
incl
xchg
push
cmovne
inc
mov
pushf
int3
xchg
sub
and
push
fsubl
and
mov
dec
loope
es
mov
mov
bound
loop
jecxz
mov
sbb
jle
cmp
push
mov
roll
push
cwtl
inc
cli
fidivrs
and
pop
jp
into
dec
mov
leave
adc
pop
push
sub
cmc
inc
adc
mov
xchg
fcompl
add
xor
jecxz
out
and
mov
add
pushf
mov
jne
fidivl
scas
std
jmp
lret
pop
scas
cmc
or
cmp
bound
je
mov
sbb
arpl
mov
insl
push
sbb
arpl
jae
sub
xchg
repz
cmpsb
jge
popf
out
fistpll
notb
enter
lock
out
add
or
xchg
jl
xchg
addr16
xor
adc
fcmovb
xchg
mov
sti
push
adc
push
push
mov
add
mov
insl
mov
int
adc
sub
stos
xchg
push
int
pop
xchg
bound
fimuls
or
fs
idivb
test
shlb
cmc
mov
xor
dec
pop
mov
outsl
inc
xlat
jne
adc
add
mov
testb
pop
pusha
int3
popa
outsb
das
aam
enter
test
xchg
sbb
mov
and
outsl
aas
push
xchg
popl
bound
push
rcrl
out
stc
or
pop
clc
mov
mov
hlt
lret
mov
daa
stos
imull
lcall
inc
ja
jge
mov
call
xchg
ljmp
iret
int3
lret
and
and
roll
pop
lcall
test
push
loopne
inc
add
dec
std
lock
aas
jno
add
inc
sti
mov
push
inc
ljmp
pop
clc
popf
sti
js
movsb
pop
iret
sbb
call
sub
orl
mov
mov
or
mov
add
xchg
aas
adc
ja
fninit
jno
in
in
sub
cs
pop
inc
pop
loop
mov
int
ljmp
and
aas
xor
das
jl
negb
fnstsw
into
sbb
lock
mov
dec
ds
jmp
inc
mov
pusha
enter
push
lods
push
aaa
in
repnz
add
leave
sub
int3
dec
cs
movsb
cmp
movsl
call
clc
mov
mov
int3
sbb
ljmp
inc
jns
scas
add
das
or
mov
daa
test
push
sbb
inc
adc
iret
mov
mov
out
aas
xor
divb
flds
mov
jp
call
outsb
movsb
not
or
jns
mov
sbb
cwtl
dec
cs
pop
mov
mov
jge
adc
push
mov
test
dec
push
imul
jne
loope
cmc
loop
mov
pop
sahf
es
cmpsb
inc
rolb
push
pop
sbb
stos
pop
sti
xchg
sbb
fsubrp
or
into
pop
ds
cld
fcmove
and
jbe
dec
mov
mov
fcoms
cmp
fdivrs
pop
fmull
push
fldenv
xor
fwait
dec
mov
test
ja
push
frstor
mov
imul
pushw
mov
scas
fcomps
fbstp
popf
enter
gs
sbb
jecxz
mov
test
int
popa
pop
cli
outsb
mov
xchg
jmp
or
xor
mov
sbb
lret
sahf
iret
insb
fs
lock
fisubrs
pushf
mov
scas
and
sub
rol
mov
mov
ret
xor
outsl
pop
das
mov
lcall
aaa
stos
push
adc
pop
push
mov
jnp
sub
jecxz
sbb
andl
jmp
adc
pop
xor
test
jle
movsl
mov
mov
push
int3
mov
dec
iret
pop
stos
dec
jb
and
icebp
xorl
loop
rclb
pop
adc
insb
xor
in
jecxz
mov
inc
sti
mov
je
sub
pop
mov
dec
pushf
bound
loopne
inc
pop
adc
fiadds
xor
loopne
rclb
add
push
mov
cmp
mov
shl
xchg
subl
shrb
mov
xor
jl
jmp
adc
fwait
xchg
lret
and
bound
dec
sub
es
inc
pop
lcall
popa
or
adc
cmpsl
jns
cli
xchg
jp
xchg
in
aaa
xchg
and
repz
jmp
sarb
scas
or
mov
stos
outsl
outsl
dec
mov
or
cmpsl
xor
mov
enter
shll
insl
xchg
es
movsl
sahf
or
cmpsl
mov
jmp
les
dec
lds
int3
aam
mov
mov
fidivrl
inc
sbb
sub
mov
roll
sti
inc
popf
je
push
or
and
pop
js
addr16
lods
lcall
enter
loop
add
imulb
cli
add
add
fldenv
xchg
mov
imul
aas
inc
out
loope
xchg
mov
fidivrl
xchg
outsl
mov
pop
add
sbb
xchg
aaa
jb
ss
sbb
loop
mov
popa
int
scas
dec
mov
nop
aas
ss
std
cli
pusha
xchg
aaa
xor
xor
gs
aas
adc
stos
stc
push
mov
test
mov
mov
sbb
or
add
int
imul
daa
das
rcl
xchg
push
sbb
or
test
jge
cmp
aam
and
xor
xchg
cmp
leave
add
ss
shrd
mov
mov
xlat
jecxz
xor
mov
mov
mov
sarb
hlt
pop
mov
jbe
fs
mov
mov
test
pop
or
inc
xchg
push
lods
dec
adc
push
into
fwait
inc
adc
lea
add
push
jnp
inc
notb
repz
xchg
cmpsb
add
jne
in
insl
mov
push
inc
aam
adc
and
cmp
out
jge
pop
fnsave
cmpsl
push
jge
insb
cmpsl
jns
cmpsb
loopne
jae
subb
push
into
and
cmp
and
pop
fs
add
loope
mov
fcoml
and
insw
loopne
leave
adc
push
push
xchg
jbe
mov
loopne
shrb
cmp
loopne
call
movsl
test
push
outsl
mov
xchg
xchg
icebp
into
jno
dec
hlt
jecxz
in
pop
call
aaa
cld
or
pop
enter
out
pusha
mov
stos
mov
adc
push
gs
imul
pop
ss
cltd
pop
mov
xchg
dec
inc
mov
mov
addl
int3
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
jmp
inc
mov
aaa
cwtl
arpl
push
jmp
jbe
adc
pop
adc
jns
jmp
and
lret
xchg
xchg
fs
fdivp
lods
or
adc
loopne
fs
data16
in
adc
vmovdqa
lods
pusha
cmp
xor
jmp
xor
mov
jle
ret
mov
push
fcompl
mov
mov
xchg
xchg
mov
mov
xor
pop
loop
iret
mov
int3
pop
add
ss
xor
dec
sub
lock
adc
mov
push
mov
je
pop
inc
stc
fadds
cld
daa
dec
sti
je
mov
xor
arpl
movb
std
subl
in
add
inc
popa
mov
xchg
push
test
inc
inc
jbe
fists
aam
mov
scas
fistpl
inc
dec
mov
sub
xor
js
fstpt
fwait
mov
or
jcxz
pop
push
jb
push
or
int3
xchg
or
mov
ret
int3
lahf
jl
mov
fistl
jge
adc
push
lock
shl
addl
lret
inc
insl
idiv
cltd
jnp
lret
in
jge
mov
mov
enter
pusha
test
xlat
inc
icebp
jo
xchg
dec
mov
and
pop
cmp
jl
xor
mov
mov
imul
fwait
cmp
jmp
mov
dec
sub
jbe
scas
out
mov
outsb
scas
into
scas
hlt
cli
je
xor
into
and
jge
dec
push
mov
sbb
cld
push
outsb
mov
subb
push
popa
insl
or
and
dec
cli
int
pop
insb
out
cmp
aad
inc
iret
pushf
add
ficoms
or
das
dec
push
es
shrl
jns
cmpsb
push
push
xchg
test
sub
in
fdivrl
inc
xor
sbb
mov
into
cltd
inc
push
lds
mov
roll
nop
dec
inc
xchg
xchg
or
xlat
aas
add
insl
inc
pop
fsts
test
jo
adc
pop
pop
in
insb
pop
outsl
adcl
xor
iret
lcall
pop
fistpll
mov
out
mov
push
aam
xchg
sub
movb
mov
xorl
xor
stc
call
jg
pop
jl
into
pop
jge
icebp
xor
jnp
xlat
xor
popl
ret
mov
push
or
vmulss
ret
ret
sub
popf
lock
sub
lea
dec
mov
xchg
mov
xor
mov
inc
add
jmp
scas
mov
mov
outsl
mov
adc
sti
sub
sbb
xor
xchg
cmpsl
pop
nop
sbb
pop
pop
push
lods
enter
aas
sbb
fnstsw
outsl
fs
sub
imul
cmpsl
jae
adcb
mov
or
cli
inc
and
inc
mov
shl
pop
imull
repnz
push
sbb
mov
popa
aam
and
lret
pusha
sub
mov
cmpl
cmpsb
into
inc
push
lahf
testl
jp
loop
pusha
stos
and
test
mov
adc
out
push
addl
push
or
es
xchg
mov
adc
lods
sbb
pop
lret
dec
adc
mov
mov
jmp
xchg
or
in
mov
repnz
stc
out
stc
test
mov
subl
dec
jle
add
inc
std
fisubrs
test
ret
push
lret
mov
add
fadds
jp
push
mov
jns
cmp
call
rcrl
cmp
lods
out
xchg
mov
rorl
iret
inc
or
addb
add
or
scas
dec
add
push
sub
and
jne
stc
add
cltd
xor
sar
and
mov
addr16
push
ljmp
sub
dec
pop
sahf
pop
pop
dec
repz
mov
sbb
enter
push
in
sarb
add
sub
adc
cmpsl
inc
mov
xor
sub
mov
inc
popl
mov
adc
addr16
aaa
imul
push
movsl
inc
push
or
cwtl
inc
es
xchg
fisttpl
and
arpl
add
and
mov
mov
dec
cmpsb
call
jecxz
fldl
repz
or
inc
and
out
pop
xchg
cmc
shrb
cmc
mov
jno
push
push
push
test
mov
icebp
test
pop
mov
lret
pop
dec
ja
dec
inc
les
mov
nop
pop
mov
inc
adc
inc
loop
push
inc
dec
shlb
dec
decb
ja
loop
add
daa
clc
inc
mov
mov
movsb
mov
mov
push
adc
fdivrs
int3
pop
jmp
xchg
fs
jno
jmp
mov
addr16
iret
dec
or
rclb
mov
jg
mov
push
mov
fldl
fwait
push
adc
movsb
pop
into
adc
loop
inc
inc
scas
bound
sbbl
xlat
mov
jae
decl
call
fldl
mov
add
fstp
dec
jbe
push
orb
outsb
lods
leave
rcll
addr16
inc
into
inc
sub
adc
jecxz
push
fsubr
jl
lods
and
inc
mov
cmc
insl
jl
xchg
vmovups
sub
cld
xchg
mov
sub
jmp
xor
cmpsl
gs
push
popf
pop
cld
std
ffreep
mov
shrb
mov
in
sbbl
test
loop
rclb
dec
fistps
fsubr
dec
sub
mov
movsw
aad
ret
aad
sbb
push
stc
int3
mov
lods
in
or
in
inc
je
push
enter
dec
lea
jl
cmp
jo
roll
insb
lahf
or
mov
or
push
stos
imull
or
mulb
scas
insl
not
mov
ljmp
incb
xor
iret
jno
push
lock
or
xchg
sub
leave
or
adc
lods
ds
and
sbb
repnz
popf
jae
mov
xchg
cmp
das
inc
andl
addb
into
push
dec
mov
jecxz
popa
cmpsl
sub
outsl
das
movsb
add
inc
fnop
cmp
mov
imul
addb
jbe
pop
mov
fistpll
fdivrl
cmp
aaa
push
xor
xchg
mov
jb
icebp
jecxz
inc
test
and
es
rorb
arpl
mov
inc
pop
jge
xchg
data16
ds
pop
mov
mov
bound
pop
pop
adc
push
cmpsb
mov
sbb
mov
decb
jmp
jge
adc
inc
sub
cmp
cmp
jno
mov
mov
aaa
pop
addl
xchg
test
mov
jb
std
jne
jge
sbbb
ret
inc
sti
bound
pushf
lods
fwait
mov
inc
mov
shlb
cs
push
jo
cmp
popa
cmp
xchg
mov
push
inc
daa
push
pop
xchg
lahf
arpl
inc
rcll
lret
sbb
pusha
inc
jl
rcrb
movsl
add
dec
adc
shlb
sub
test
add
clc
xor
imul
sbb
and
xor
pop
arpl
mov
roll
cwtl
imul
icebp
and
cmp
je
add
fs
push
cmp
hlt
mov
call
imul
and
mov
xchg
xor
inc
pop
ljmp
jne
aad
cmpsb
lea
insl
mov
repz
mov
or
add
das
cltd
xor
int3
andl
push
cmpb
mov
movsb
pop
pop
cli
ret
imul
sub
inc
rorb
mov
xchg
scas
icebp
frstor
xchg
aaa
rcl
push
movsb
enter
push
push
jne
pop
mov
ja
jno
jge
pop
mov
mov
xchg
xor
add
mov
cwtl
adc
in
cld
es
imul
gs
mov
fdivp
or
inc
xlat
adc
mov
outsl
mov
jge
shl
fs
fidivs
add
cmp
dec
fsubrl
mov
aad
mov
in
call
clc
or
subb
cmp
pop
cs
daa
xor
xchg
popa
inc
in
xor
loop
shrl
xor
test
lret
xchg
dec
xchg
sbbb
sub
sub
stc
pop
and
stc
test
cltd
arpl
jnp
lods
jns
or
mov
arpl
or
test
jb
shlb
lods
lcall
sbb
js
je
inc
fisttps
xchg
or
cmc
add
stc
mov
xchg
xchg
cld
dec
std
cmpsl
or
lods
call
test
xchg
mov
test
pop
pusha
mov
jbe
shlb
cmpsb
enter
mov
pop
cli
nop
in
imul
pushf
cmpsl
fmull
stc
pop
inc
or
push
loopne
fisttps
pop
nop
cmp
mov
bound
cmpsl
pop
and
into
adc
mov
in
adc
cmp
inc
rolb
dec
insl
mov
xor
xlat
dec
aaa
pop
pop
fidivs
shll
in
lcall
imul
in
lds
inc
scas
mov
insb
lcall
jmp
or
pushf
xchg
push
add
add
mov
mov
scas
xchg
dec
jg
lahf
arpl
rcrl
stos
xor
stos
pop
xor
loope
shll
jbe
pushf
insl
jbe
sbb
arpl
mov
movsl
pop
cmp
and
push
mov
cmpsb
xor
stos
imul
fwait
pop
add
add
xor
cmpsl
aad
xchg
lods
and
xchg
jo
outsl
and
les
cli
out
and
xchg
aaa
cli
add
outsl
mov
push
dec
inc
push
in
shll
mov
jecxz
and
adc
lds
adc
or
into
in
imul
adc
sti
cltd
xchg
cmpsb
pop
pop
mov
fsubrp
mov
call
subl
pop
cmp
sub
sarb
rclb
and
cmc
insb
add
jb
mov
out
cmp
pcmpeqb
cmpsl
jmp
jne
flds
jo
addb
sti
stc
inc
inc
pop
iret
inc
mov
mov
push
aam
incb
pop
push
and
leave
xchg
jl
cmp
addr16
lods
lret
mov
pop
test
xchg
fidivl
pop
shll
daa
outsl
jb
push
mov
aam
inc
pushf
cld
push
hlt
xchg
add
stos
push
jle
sub
dec
adc
xchg
mov
fisttpl
cmpsb
in
call
pop
into
adc
fsts
popf
pushf
or
jmp
sub
or
decb
mov
dec
inc
aad
into
mov
jno
je
lea
repnz
cmp
jb
popa
out
jl
es
outsb
push
mov
fcompl
dec
inc
aaa
in
cmp
mov
mov
dec
and
sub
sub
lret
push
mov
fimuls
jno
out
jp
daa
mov
out
lock
xor
pop
cwtl
jo
std
and
call
cs
add
mov
dec
filds
pop
sbb
and
or
dec
out
mov
cld
in
mov
insb
aas
stos
leave
hlt
out
fucomi
sub
sub
adc
clc
inc
scas
pop
ja
sar
mov
fdivp
mov
ss
adc
xor
enter
mov
jp
lea
lret
ret
and
pop
xor
push
mov
fwait
mov
ret
dec
hlt
mov
inc
jns
inc
aad
in
inc
push
mov
inc
add
sub
jno
mov
bound
aad
add
xor
cmp
or
pcmpgtw
scas
repnz
sub
lds
popf
int
lock
pop
push
xchg
adc
stos
push
imul
mov
insl
pop
lret
and
mov
and
in
sbb
rorb
adc
sti
test
movsl
push
aad
out
xchg
mov
sub
loop
jecxz
or
leave
out
sub
std
inc
std
test
fs
pop
pop
push
inc
or
push
lea
cmpl
mov
imul
lret
jnp
xchg
xor
pusha
and
and
add
imul
inc
lods
jle
test
scas
jmp
lret
ret
push
cli
mov
stos
and
xchg
outsl
mov
or
test
dec
push
adc
add
test
inc
push
inc
xor
movsb
outsl
xchg
ljmp
or
leave
sub
push
mov
push
ja
rol
sti
push
sub
or
push
dec
loop
nop
mov
cmpb
inc
adc
add
jl
pushf
outsl
jbe
push
inc
xchg
mov
push
pop
xchg
stos
cmp
cmp
sar
cmp
and
std
cs
sti
std
jno
ss
pop
in
test
pop
movsb
mov
cmc
inc
cmpsb
gs
xlat
roll
and
stos
scas
sbb
mov
filds
dec
fisttpl
add
push
lock
imul
dec
and
dec
and
test
mov
lds
psrld
push
scas
insb
xchg
sbb
ficomps
scas
enter
test
jecxz
and
sub
fs
mov
jle
test
aaa
mov
fiadds
fwait
sahf
insl
xchg
das
push
rorb
sub
cmpsb
fadds
sbb
add
jns
dec
dec
sbb
shll
out
imul
sbbl
push
and
dec
out
push
test
movsb
cwtl
inc
cmpsl
fdivrs
and
fnstsw
jbe
xor
mov
push
aas
mov
aad
loope
push
and
mov
or
ja
xor
sbb
popf
jns
sti
scas
xchg
dec
fsubs
sbb
and
pop
xchg
gs
pop
in
or
xchg
cmpsb
test
repz
jne
out
int
push
sbb
mov
inc
in
lea
pop
es
cmp
daa
insb
mov
arpl
fsubrs
inc
xlat
pop
sub
cltd
and
std
mov
inc
mov
sub
cmc
imul
dec
in
cs
mov
push
inc
movsb
inc
lds
in
pop
push
test
sub
adcb
imul
ljmp
dec
jae
aad
jmp
fnstsw
add
lock
dec
imul
push
lds
stos
jl
mov
lock
movsl
mov
dec
or
sub
test
movsl
call
loope
std
out
sub
jl
xor
outsl
lret
imul
push
mov
rorl
outsl
adc
testl
into
dec
push
jge
xor
jns
pop
pop
jb
lahf
xchg
mov
mov
dec
jge
inc
testb
push
mov
movsb
mov
sbb
dec
int
xchg
sbb
call
ss
mov
stc
push
das
aaa
mov
lods
fwait
mov
xor
xchg
sub
icebp
mov
pop
mov
cld
sub
xchg
int
ss
imul
aaa
call
mov
dec
and
sub
jge
lcall
fcmovbe
ret
inc
aad
add
push
dec
addl
mov
pop
lahf
sbb
and
mov
std
sbb
andb
mov
scas
lea
enter
jle
dec
adc
stos
sub
pop
fwait
dec
and
insl
outsb
clc
mov
push
stc
clc
add
cld
xor
dec
mov
add
and
push
andl
bound
movsb
dec
jmp
ja
int
inc
sbb
pop
mov
cmp
adc
sub
js
ss
mov
inc
or
push
add
repnz
add
mov
or
das
out
jo
call
push
mov
and
insl
jle
pop
scas
sub
aaa
pop
and
loop
lock
das
andl
jnp
je
push
xchg
jmp
cmp
out
mov
mov
xlat
fwait
imul
adc
arpl
xor
fnstenv
lds
jne
push
pop
repnz
jne
test
push
sub
push
aaa
lret
pop
cmpsb
das
sub
pusha
cmp
pushf
push
sub
fcmovu
js
xchg
sbb
lock
mov
jle
pusha
aam
jbe
and
int3
xchg
pop
push
enter
xor
movsb
xchg
int3
mull
rcrl
cmc
pop
jbe
pop
std
mov
out
stc
adc
sbb
pop
inc
add
sub
jl
out
stos
mov
arpl
cmpsb
push
imul
xchg
bound
and
js
rclb
push
sahf
lods
inc
push
pop
mov
push
enter
fdivl
push
hlt
xor
mov
pop
nop
popf
enter
int
cs
sbb
sub
cmp
imul
cltd
fsubrs
xor
jle
xor
mov
cld
mov
sub
mov
add
insl
adc
pop
lods
mov
shrb
aas
pop
lahf
mov
shll
xchg
lock
gs
stc
cmp
inc
mov
pop
je
outsb
stos
and
rep
xchg
call
mov
xor
js
rorb
adc
repnz
mov
sub
and
gs
inc
daa
dec
push
mov
fsubrs
sub
arpl
popf
xchg
test
imul
adc
and
xchg
ljmp
in
push
fldcw
out
dec
cmp
lret
adc
or
cwtl
and
lock
cli
push
push
mov
mov
mov
lcall
pushf
and
aaa
ret
and
sbb
in
pop
mov
andb
xchg
jo
inc
fsubr
inc
sbb
sub
and
jb
pop
add
imul
cmpl
jecxz
out
jb
cmpsl
data16
push
xchg
push
or
leave
sub
and
dec
lret
xchg
out
jecxz
mov
inc
mov
xchg
pop
inc
test
pop
push
aam
leave
ja
addr16
mov
lahf
cli
xor
flds
into
ljmp
jge
and
testb
adc
test
fimuls
jnp
xchg
cmc
adc
mov
dec
dec
or
sahf
je
mov
pop
adc
push
mov
dec
add
stos
adc
mov
cmpsb
mov
mov
icebp
jmp
cld
test
mov
push
push
pop
jo
adcl
dec
or
cltd
mov
sub
lods
daa
mov
test
push
aas
ljmp
mov
and
cmp
popa
mov
fdivr
and
mov
xor
jnp
outsb
mov
testb
out
add
jmp
inc
lods
iret
loopne
pop
lea
cwtl
adc
pop
inc
fwait
and
and
daa
mov
and
sbbl
outsb
std
pop
mov
xlat
mov
xchg
out
cwtl
lock
push
mov
aad
hlt
jnp
pop
dec
cmp
adc
and
das
in
sbb
das
movsb
into
ret
jno
xchg
inc
and
dec
push
hlt
mov
xchg
push
movsl
lods
or
cmp
js
aam
sbb
pop
fmuls
mov
jno
fistl
mov
xchg
pop
cli
test
in
push
ds
ja
lret
cs
inc
inc
xchg
dec
xor
imul
jl
repnz
lret
lods
push
sahf
test
adc
jecxz
or
aaa
ds
ret
je
mov
inc
test
add
pop
daa
push
or
out
pop
mov
ficoms
pop
outsb
cwtl
fcmovbe
pop
add
adc
mov
jne
cld
stc
fimull
jecxz
add
mov
mov
xchg
adc
xor
mov
imul
mov
jae
arpl
cli
fs
fcompl
fadds
loopne
push
xchg
nop
sub
adc
lret
enter
int3
and
jae
mov
ret
ret
push
sbb
and
and
or
dec
add
ret
xor
xchg
mov
mov
and
lods
loope
in
jns
das
int3
jp
mov
jo
adc
add
or
jae
dec
and
mov
add
stc
add
push
arpl
daa
arpl
inc
add
out
out
movsb
push
dec
lock
inc
adc
jl
lock
fnsave
mov
mov
adc
popa
sbbl
mov
inc
push
pop
adc
mov
mov
mov
fwait
mov
jnp
popa
jns
xchg
adc
push
das
dec
stc
and
mov
dec
gs
notl
jno
xor
push
pop
int3
dec
mov
or
mov
mov
test
adc
mov
sti
mov
lods
dec
movsb
xor
mov
pushf
mov
push
xchg
outsl
stos
cwtl
or
fnstenv
jne
aam
data16
xor
and
mov
push
jecxz
mov
std
or
clc
in
popf
mov
cmp
add
outsb
mov
jne
xor
lahf
xchg
data16
out
call
ret
dec
imul
sbb
loop
xchg
ljmp
outsb
fcomip
stos
pop
jge
pop
xchg
fmulp
bswap
lahf
scas
push
iret
cwtl
jne
testl
push
ficoml
ja
loope
mov
mov
xchg
cmpsb
nop
mov
pushf
cmp
je
icebp
and
pop
outsb
sbb
into
cli
fwait
inc
cli
add
or
insb
xchg
jns
cmpsb
add
fimull
ljmp
pop
es
mov
xchg
out
pop
add
rcrl
mov
push
out
push
mov
jmp
fwait
fwait
aaa
cmp
mov
jmp
dec
xchg
in
out
stos
pop
xchg
xor
scas
inc
cmpsb
bound
mov
xchg
or
xor
popa
outsl
and
sub
leave
or
mov
push
and
sti
xor
sbb
fildl
loop
push
test
loop
or
cmc
cmp
push
mov
jg
out
pop
mov
mov
jecxz
pushl
mov
repz
sub
pushl
dec
and
test
faddp
mov
or
stos
push
sbb
aaa
lret
xchg
mov
insl
andb
jne
dec
out
insb
xor
jbe
fiadds
les
pop
sbbl
and
stos
adc
fdivrs
xor
lds
pop
cmp
mov
add
mov
and
loope
rorb
xlat
daa
movsb
mov
pop
dec
xchg
sbb
in
mov
sub
lahf
mov
movsb
lock
mov
ja
test
add
subb
leave
mov
js
icebp
jle
mov
icebp
mov
mov
push
push
or
les
push
jl
outsb
dec
xor
mov
movb
mov
xor
xor
lcall
test
popa
jns
sbb
mov
jl
outsb
adc
pop
clc
stos
push
mov
insb
dec
lahf
pop
mov
out
jo
jmp
sub
jl
stos
shrb
mov
sbb
clc
xor
int
push
aas
ja
adc
jmp
adc
and
mov
add
adcl
mov
sbbb
add
or
fwait
out
imul
pop
cmp
rclb
lds
mov
push
mov
adcl
nop
test
pop
idiv
mov
cmp
mov
mov
mov
or
add
cmpb
adc
les
add
stos
cmp
in
mov
cli
jle
sbb
push
and
addr16
in
inc
jne
cmpsb
adc
mov
test
jno
mov
icebp
cli
push
inc
cld
and
cmp
push
inc
sub
leave
cmp
pop
xchg
mov
ljmp
sbb
pop
ror
movsb
cld
dec
out
or
jg
aas
pop
and
sub
adcl
sbb
lods
cmpsb
inc
ret
cmp
hlt
das
inc
push
push
cmp
xlat
jle
jnp
push
and
inc
pop
jg
jmp
pop
jb
inc
adc
inc
push
jns
sbb
sbb
jb
addr16
mov
push
cmp
int
je
push
std
sub
xor
xor
pop
cmp
inc
or
dec
int3
jg
outsb
xchg
xchg
cmp
lea
rcll
adc
xor
push
lret
push
add
mov
xchg
jo
shll
push
cmp
mov
mov
add
jae
ret
xor
outsb
dec
rolb
scas
jbe
bound
push
sbb
jae
inc
mov
call
icebp
arpl
cmc
popa
cmc
pop
add
sbb
pop
adc
cli
mov
aad
mov
mov
push
mov
aaa
cmc
popa
pop
in
ret
orl
sbb
in
inc
adc
inc
fwait
add
push
or
cmp
sub
loope
fnstsw
rcrl
cmp
ret
jne
cmp
cld
lods
movsl
outsl
pop
arpl
addr16
insl
arpl
mov
aam
int3
sub
pushf
clc
and
or
inc
xchg
cld
sbb
jge
mov
and
cmpsb
adc
xchg
ret
lahf
cltd
in
imul
cmp
dec
adc
or
sbb
xchg
dec
sbb
out
in
ja
aam
cmpb
inc
jns
inc
lea
mov
lock
dec
push
sbb
pop
test
enter
lret
rclb
dec
adc
xchg
repz
aas
inc
jno
dec
scas
das
push
add
ret
adcb
pop
push
push
jnp
add
xor
outsl
sub
mulb
or
push
xlat
push
sbb
jno
xor
and
insb
mov
out
pop
or
lahf
push
cs
mov
mov
or
xchg
andb
iret
add
insl
mov
dec
add
jno
mov
pop
or
loopne
arpl
dec
push
ret
ficompl
dec
imul
cmpsb
jbe
xor
lret
dec
fstps
daa
jno
insb
pop
pop
and
bound
jle
xor
lock
shlb
sbb
xor
cmpb
push
adc
pop
jne
outsl
scas
adc
popf
and
inc
pop
sbb
push
cmpsl
cld
and
xor
stc
or
fldenv
push
notb
in
pop
lock
add
gs
lock
ficompl
rcll
bound
js
test
jns
loope
bound
loop
adcl
jb
pushf
insb
sbb
push
xchg
mov
jle
sub
mov
adcl
xor
and
sbb
loope
inc
inc
mov
jp
jmp
lods
jne
das
xor
mov
fmul
arpl
pop
imul
mov
mov
cmp
sbb
jo
ret
jecxz
adc
jecxz
scas
push
dec
in
xor
mov
decb
pop
bound
dec
jne
mov
into
fistpl
rclb
or
inc
push
jnp
mov
iret
int3
mov
push
mov
sbb
adc
loopne
repnz
pop
dec
sub
push
out
add
dec
push
push
popf
andb
icebp
sbb
imul
stos
notb
ret
movsl
mov
add
testb
adc
adc
pusha
inc
std
jno
inc
sbb
gs
sbb
stc
gs
loop
iret
add
pop
int
xor
lcall
fldt
adc
inc
xchg
add
push
inc
lods
movsb
filds
add
mov
push
je
xchg
icebp
loopne
mov
add
lock
adc
jp
xchg
sbb
mov
cltd
dec
cmp
insb
jnp
xchg
cmp
push
ficomps
add
sub
scas
pop
sbb
jmp
sbb
push
inc
pushf
pop
mov
lods
pop
mov
cmp
hlt
xor
loop
pop
mov
loopne
lea
xchg
xlat
adc
and
addl
mov
enter
fsubrs
outsl
ja
test
je
jnp
cmp
test
push
xchg
xor
xorl
test
out
cs
out
loope
fisubs
outsl
inc
andb
xchg
mov
inc
outsb
into
cmp
repnz
mov
loope
xchg
push
enter
cmp
movsb
clc
sbb
dec
jg
mov
inc
nop
sbb
insb
cmp
lods
pushf
mov
mov
push
loope
leave
xchg
xchg
cwtl
pop
xchg
mov
mov
std
lock
push
cmp
lods
xor
jg
test
add
mov
mov
out
adc
inc
mov
lahf
inc
arpl
mov
add
mov
das
scas
add
fisubs
stc
stos
les
xor
xchg
lods
xor
jmp
adc
loope
sub
orl
dec
lcall
cmpsb
adc
or
sub
adc
loopne
sub
xchg
clc
ret
cmp
or
imul
jl
orl
and
mov
pop
cmp
mov
inc
imul
pusha
jb
int
and
ljmp
xor
push
adc
xchg
xchg
aas
sarb
lahf
ficompl
xor
popf
jno
movsl
mov
dec
xor
out
popa
loope
push
test
pop
int3
pop
dec
jne
outsb
mov
lret
out
xchg
push
ss
xor
das
xchg
and
call
pop
xor
cmp
inc
mov
pop
insb
mov
cmp
mov
inc
xchg
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
jmp
add
lret
lret
add
rolb
inc
stos
mov
adc
call
mov
clc
mov
sub
sub
add
stos
popa
loope
jp
cmp
movsl
mov
xchg
out
push
jns
cmpsb
mov
pop
cld
rcrl
loopne
push
out
std
hlt
inc
pop
fwait
popa
adc
mov
sbb
test
in
cmp
lahf
hlt
mov
std
inc
jl
repnz
pop
jg
adc
pop
jb
icebp
stos
jae
xor
outsl
sahf
fwait
sar
dec
mov
pop
sbb
repz
cmpsw
and
jne
subb
inc
or
xor
xor
xor
pop
pop
fnstsw
rcll
lcall
popf
mov
out
xor
push
sub
int3
imul
pop
and
out
and
test
jno
or
call
dec
pushf
xchg
or
ucomiss
pusha
mov
enter
out
call
lahf
cmp
add
repnz
adc
leave
pop
aam
fmuls
mov
ret
int
cli
ret
jbe
add
push
lods
mov
xchg
repz
inc
fbld
dec
cmpsl
fwait
movsb
adc
mul
mov
adcl
imul
cld
scas
add
adc
pop
test
push
ds
les
pop
subl
aad
out
pop
outsb
outsl
lcall
jge
cmpl
in
xchg
push
xchg
scas
inc
int3
fstpt
out
repnz
add
repnz
test
push
es
sahf
pusha
and
jg
loope
cmpsl
xchg
cmp
jne
mov
xor
lds
pop
jg
je
xor
push
fwait
push
aad
jge
inc
aad
push
sarl
lret
add
out
sbb
imul
cmpsl
ja
cmp
cs
mov
mov
mov
jl
pusha
pop
cmp
out
pop
mov
add
dec
fstl
in
sub
push
scas
xchg
aad
cmpsl
mov
cmp
xor
inc
sbb
movsb
into
addr16
add
mov
cmpsl
pop
add
push
xor
cmpsl
ja
dec
cld
sub
stos
into
cmp
cwtl
jge
das
xchg
adc
push
cmp
mov
clc
xchg
push
aaa
and
mov
dec
push
pop
cmp
sbb
aas
lcall
xchg
xchg
push
jnp
out
mov
xor
mov
mov
jae
push
and
mov
dec
push
xchg
pop
pop
and
hlt
lret
sarl
dec
mov
xchg
int3
push
jp
mov
sub
mov
or
sub
js
testl
repnz
mov
out
out
xchg
loopne
push
out
inc
push
fildll
arpl
adc
sti
cmp
fistpll
inc
mov
stos
cmp
or
scas
mov
jecxz
leave
out
les
aam
xchg
adc
pusha
aas
xlat
cli
sbb
data16
dec
mov
xor
stos
and
jmp
daa
cli
cs
pop
fcomps
shrb
mov
dec
push
stos
sbb
pop
mov
push
int
fisttpl
cmp
jmp
inc
into
je
or
jnp
jmp
lea
sbb
dec
pusha
data16
mov
cs
stos
daa
insl
fdivl
lahf
jle
jp
push
sbb
or
imul
adcl
jb
push
out
mov
movaps
xor
inc
in
xchg
sub
mov
push
cs
roll
push
idivl
mov
cmpl
in
popa
mov
mull
mov
pop
bnd
pop
dec
add
sub
xchg
aas
out
adc
jp
enter
jecxz
aam
repnz
push
cmpsl
mov
nop
je
sub
mov
and
cli
arpl
repnz
repnz
movsl
testl
mov
mov
push
lods
loope
out
movsl
xor
insl
jmp
add
cmpsb
sub
fldt
xor
dec
dec
jns
rcll
lds
pop
jo
test
fsubr
pop
jecxz
gs
push
xchg
dec
pop
add
lret
mov
mov
aam
notl
xor
cltd
inc
repnz
insl
daa
call
pop
jne
lcall
cmp
or
mov
movsl
test
insl
push
mov
js
test
sbb
push
mov
jo
mov
stos
movsl
cmp
jp
or
dec
pushf
or
push
testb
jp
outsb
out
xor
cltd
pushf
in
enter
movsb
lret
cmp
mov
pop
out
or
add
out
mov
shlb
pop
lock
adc
mov
test
test
repz
cmp
out
push
cmp
call
imul
jp
lods
sbb
mov
adc
in
pop
sub
adc
sbb
jnp
cmp
cwtl
sub
inc
push
jg
or
ret
out
or
mov
push
cmp
inc
mov
lods
xchg
push
cmp
movsl
mov
mov
loope
add
loop
mov
gs
fisubl
mov
ret
repz
cltd
js
xchg
test
in
rcll
inc
xor
xchg
push
add
andl
out
mov
push
xchg
stos
cmpsb
inc
orb
jb
sbb
lds
pop
stos
xor
ret
adc
or
adc
add
je
dec
xchg
sbb
in
and
data16
addb
fidivrl
mov
jb
stos
pusha
dec
mov
rorb
or
stc
sbb
lds
pop
fbstp
scas
jl
lret
inc
ret
out
shll
xorb
mov
es
xchg
jecxz
in
ret
xor
adc
and
inc
add
cli
fs
cmp
data16
pop
mov
sub
clc
xchg
pop
and
mov
push
stos
xchg
mov
mov
aam
mov
arpl
js
aaa
mov
inc
lret
rcll
xlat
leave
add
cmp
mov
xor
ret
push
lea
icebp
xchg
pop
push
jns
cmpb
jns
outsl
sbb
dec
popa
mov
push
cli
repnz
pop
xchg
xchg
fiadds
sbb
inc
ljmp
stos
and
xchg
jae
dec
loopne
pop
lds
push
mov
icebp
dec
movsb
arpl
cmp
xor
jg
push
mov
pop
push
push
int3
xchg
dec
movsl
int3
sub
cmp
js
dec
test
xchg
mov
adc
xor
ret
adc
sub
sti
mov
mov
jns
xchg
rcr
fimuls
mov
inc
xchg
outsl
adc
pop
iret
shll
push
outsb
push
xchg
xchg
sbb
je
outsl
dec
adc
xchg
or
mov
sbb
adcb
dec
pop
adc
jb
dec
sub
fstpt
xchg
fisttpll
js
call
xor
pushf
sbb
or
aas
mov
lahf
mov
roll
repz
mov
xchg
daa
call
cmp
mov
pop
or
lds
xchg
push
sub
pusha
fs
test
loop
add
sbb
cwtl
test
and
je
daa
outsb
and
rolb
addb
pop
pop
jg
lcall
adc
add
mov
mov
adc
dec
mov
pop
out
lods
loope
and
jg
fimuls
in
sarl
int3
inc
pop
mov
cmp
scas
sub
in
loop
xchg
nop
scas
push
mov
pushf
hlt
cmpsl
dec
or
inc
addr16
xor
sti
roll
ss
imul
mov
ja
std
ret
or
aaa
adc
xchg
adc
shlb
out
fistpl
pop
mov
jae
test
mov
inc
push
dec
xor
push
push
lods
jbe
stc
mov
jns
or
adc
sbb
mov
fldt
aaa
call
pcmpgtd
pop
cmp
sbb
cmpl
fadds
inc
push
shl
mov
or
pushf
dec
cwtl
pop
lcall
fcomp
jns
xchg
xchg
lret
mov
push
xchg
cmp
lds
int3
mov
adc
add
dec
adc
imul
mov
popa
xor
dec
sbb
push
dec
sahf
fidivl
mov
xchg
cmp
and
fs
movb
dec
ret
outsl
push
pop
xor
iret
test
shll
cli
gs
pop
shll
icebp
hlt
repz
cmp
cmp
mov
aad
dec
pop
xor
pushf
call
cld
shll
aas
adc
xor
andb
fucomi
jnp
or
fs
xchg
dec
inc
pop
aad
arpl
sbb
xor
adcl
shrl
inc
cmc
mov
in
in
jp
push
jb
and
or
jns
daa
sub
cli
imul
repz
sub
sbb
dec
sbb
movsl
data16
inc
mov
xchg
xchg
imul
lods
ss
xchg
insb
jns
pavgb
push
or
xchg
pushl
dec
pushf
mov
inc
ljmp
clc
mov
push
or
jne
fldt
and
pushf
bound
in
or
stos
in
cld
add
popf
enter
pop
in
jle
mov
and
mov
imul
aaa
xchg
pop
cmp
dec
lahf
jmp
ja
sub
dec
mov
mov
jb
jne
leave
or
jge,pn
xor
jns
xor
addl
and
or
call
xor
test
mov
or
stc
pop
dec
in
add
xchg
cmpsb
mov
sub
ror
jnp
xchg
lret
aad
scas
lock
les
cli
mov
cld
lcall
xor
sbb
into
rcrl
loopne
rol
push
xchg
das
sbb
mull
jns
pop
sahf
adcb
jns
stos
xchg
mov
or
sahf
or
jmp
jb
sub
xor
adc
ja
add
xchg
lock
gs
aam
es
xor
cmp
aad
pop
mov
lret
or
jae
mov
mov
dec
sbb
fs
mov
clc
test
push
push
repnz
popf
fsubr
fwait
pop
outsl
cmpsb
shrb
mov
mov
add
lea
mov
jle
shlb
push
aaa
lret
jne
imul
ja
jp
or
cmc
incb
shrb
bound
test
ret
cmp
test
dec
movsb
cmpsb
and
pop
sbb
fildl
inc
xlat
jae
adc
test
pop
xor
mov
mov
stc
xchg
push
mov
andb
inc
scas
jno
xor
mov
aas
mov
jp
fcomip
cmc
push
mov
lret
nop
shrl
xchg
jle
ret
scas
and
jae
cld
ret
pop
mov
jecxz
ret
fsts
out
and
xchg
mov
dec
pop
mov
ret
pusha
xor
fldt
insb
imul
push
test
data16
pop
dec
dec
fmuls
lods
sub
sub
into
jl
gs
cmp
out
add
mov
pusha
les
sbb
or
daa
add
jne
pop
pop
sub
mov
jmp
mov
popf
adc
xchg
mov
pop
out
or
mov
arpl
xor
cmpsl
or
cwtl
stc
test
fdivrl
outsl
cmp
mov
out
and
jns
jecxz
push
into
sbb
std
sbb
pop
iret
jns
push
addr16
inc
inc
dec
stc
or
jecxz
add
mov
mov
xor
sbb
fnstcw
push
mov
ljmp
arpl
cmp
cwtl
push
sub
stc
sti
int
stos
gs
loope
push
fs
ljmp
add
cmp
fwait
into
xchg
jle
pop
lds
les
xor
cmp
ficoml
xlat
sub
pop
fmul
cmpb
cs
sub
or
inc
mov
push
adc
ljmp
cmp
cmpsl
pop
es
inc
or
faddp
std
jge
ds
outsl
cmp
push
inc
loopne
std
ja
jle
repz
or
pop
jmp
sub
popf
out
int
xchg
pop
imul
pop
lret
call
jecxz
xchg
pop
cli
jno
jb
es
clc
sub
inc
push
mov
jnp
jo
push
jle
dec
lret
mov
fadds
pushf
sahf
mov
lock
adc
push
out
mov
repnz
pushf
test
add
rorl
mov
std
mov
rorl
xchg
mov
shl
pushf
inc
nop
push
xchg
pop
xchg
sub
cmp
cmp
in
daa
mov
cmp
and
mov
sub
jbe
stos
mov
jae
rcrb
or
orl
sbb
push
cmp
mov
sbb
jg
out
popa
imul
mov
or
cmpb
sub
pop
pop
ret
sti
mov
adc
and
mov
movsb
leave
loope
add
sbb
je
xor
js
mov
ja
push
xchg
xor
xor
jbe
mov
mov
call
xor
lds
hlt
mov
in
lret
xor
mov
sbb
mov
push
mov
imul
fsubs
leave
sti
push
sub
push
mov
and
xlat
xchg
xchg
dec
push
fnstenv
movsb
mov
lcall
dec
add
jge
es
jns
imul
and
cmp
mov
fwait
dec
rorl
pop
in
mov
jnp
je
rcrl
push
mov
rorb
mov
push
cltd
popf
mov
cmpsb
sbb
push
ss
pop
movsl
pop
xor
inc
push
fcoms
or
data16
loop
cmp
out
add
adc
stc
mov
mov
pop
mov
sub
inc
fs
enter
jo
mov
outsl
jae
fimuls
out
sti
lcall
mov
xchg
addr16
mov
call
xor
xor
pop
nop
lahf
lds
imul
pop
cmp
loop
adc
lods
xchg
push
dec
ds
test
mov
fcoms
adc
loop
fistpl
or
xchg
add
pop
push
shrb
nop
shrb
xor
aam
xor
fisubl
popa
stc
mov
mov
sub
xlat
scas
xchg
out
in
outsb
imul
scas
mov
sti
ficoml
or
ret
jmp
or
mov
sbb
pop
inc
xchg
lds
jno
lea
repz
cld
test
lods
mull
cmp
call
mov
jb
push
and
push
or
add
jl
add
negl
xchg
fdivs
or
test
daa
pop
cmp
jp
jno
push
in
sub
add
ja
xchg
mov
dec
push
xor
cld
mov
scas
jns
xor
cs
sbb
movsb
push
in
lock
dec
test
jmp
cltd
ljmp
enter
adc
nop
leave
mov
push
jle
in
imul
into
in
push
lret
faddp
sbb
inc
push
and
outsl
push
mov
test
adc
arpl
imul
sbbl
xor
stos
les
int3
ss
xor
repz
ja
jmp
cmpb
mov
dec
pop
pop
sbb
add
push
cmp
arpl
xor
inc
rorl
vpsubsb
imul
lds
jmp
sub
lahf
xchg
mov
jns
cli
ss
iret
out
insb
sbb
xor
jmp
mov
jae
push
out
sub
cli
outsb
jmp
das
xorb
jns
fsubrs
ficoms
push
jle
lods
loopne
arpl
pop
lcall
sub
std
mov
add
jl
or
sub
pushf
pop
sub
ret
fmull
xor
xchg
imul
add
jecxz
mov
and
mov
mov
add
popf
xor
pop
inc
lret
stos
mov
or
mov
arpl
xor
sbb
pop
jnp
jle
gs
rcr
lret
fsubs
cmp
cs
test
cmp
fidivrl
push
mov
lret
xchg
pop
mov
js
push
test
lahf
cmpb
add
test
subb
cltd
aas
into
jge
inc
ret
lea
fwait
mov
xor
jl
popf
sbb
xor
cmp
xchg
sar
xchg
rcrb
cli
xlat
pop
jno
adc
test
jmp
or
mov
cmc
inc
push
add
mov
sub
jo
testl
xor
push
ss
outsb
pop
jecxz
or
mov
xchg
rcrl
mov
dec
das
adc
mull
int
fstpt
fidivrs
lahf
mov
inc
push
push
sub
in
icebp
pop
popf
mov
clc
dec
ficoml
sub
xor
test
add
stc
sbb
mov
leave
shrb
sbb
daa
aad
mov
inc
sub
movsb
fisttps
jle
pop
fs
movsl
dec
arpl
push
pop
inc
inc
call
cmp
fcoml
pop
add
or
cmp
pop
ja
stos
xor
ljmp
divb
mov
rol
movsb
mov
fiaddl
out
inc
cld
and
arpl
scas
xor
inc
xor
outsl
lcall
adc
sub
dec
cmp
mov
fadds
xchg
out
jmp
add
and
jnp
test
loop
fbld
xor
hlt
rcrb
mov
sti
scas
sti
push
mov
cmp
out
aam
cs
adc
sahf
test
push
fiaddl
idiv
cld
adc
cmp
xor
add
push
push
ss
push
jge
js
cmp
aaa
adc
cmpsb
insl
sub
mov
xchg
mov
das
scas
pop
js
mov
and
ja
scas
repz
or
bound
call
jbe
pop
mov
inc
cmp
sbb
pop
scas
jo
jp
or
out
xchg
xor
call
repnz
pop
xchg
inc
fwait
xor
xchg
into
clc
fsubp
inc
gs
adc
mov
sub
imul
jmp
mov
int3
fstps
sub
sub
cli
lock
sahf
test
or
int
std
roll
jmp
add
imul
cmovs
jg
sti
enter
xchg
sub
loope
or
inc
ret
adc
jns
push
nop
push
lret
daa
and
and
loope
push
and
out
and
stos
cmp
aad
scas
lret
gs
rol
mov
jle
and
cwtl
cli
aam
je
insb
mov
or
sbb
sub
mov
push
imul
adc
ja
inc
sub
sbb
push
sub
mov
rorb
cmp
mov
cmp
xchg
arpl
outsl
mov
push
xchg
push
daa
stc
adcb
aaa
jl
xor
outsb
dec
adc
les
and
xchg
mov
call
movsl
push
incb
add
push
cmc
and
pushl
fidivs
jl
in
les
inc
cmp
aas
sbb
pop
xor
dec
sbb
into
push
test
cmpsl
shlb
pop
lods
ror
push
ret
xor
sub
inc
test
sbb
push
push
addb
adc
in
fwait
movsl
hlt
dec
iret
stos
shlb
mov
jmp
jp
aad
jecxz,pn
and
dec
pop
inc
popl
sub
fwait
or
mov
test
out
cmc
xchg
test
fbld
sub
cmc
push
push
cmc
sti
sub
arpl
push
gs
sbb
jbe
fs
mov
add
scas
push
cmp
stc
leave
dec
and
cwtl
push
xlat
push
js
pop
jb
stc
inc
adc
add
or
add
mov
loopne
iret
int3
xchg
mov
gs
push
mov
fwait
ss
mov
and
into
push
shrb
cmp
rorl
or
pop
data16
shrd
push
lods
bound
mov
pop
lds
and
xchg
xlat
repz
pop
nop
or
shlb
push
test
mov
fsubrs
es
mov
push
repz
inc
inc
mov
or
popf
dec
push
adc
js
jnp
mov
sti
loop
xchg
push
add
inc
dec
stc
aad
cmpsb
adc
lret
pop
js
addr16
lods
orl
lret
mov
xor
push
sbb
xor
je
jmp
stos
ror
adc
jge
cmpsb
iret
inc
out
js
je
arpl
sbb
xchg
push
dec
add
int3
std
fsub
cmp
inc
inc
in
in
sbb
lds
jno
aad
lret
mov
call
cmpsl
pop
pop
xchg
sahf
lock
imul
int
and
push
imulb
ss
xor
jl
data16
sub
js
xchg
sahf
lock
insl
inc
lock
add
stos
inc
jb
xchg
xor
stos
sub
sub
mov
in
je
push
leave
jg
in
inc
fmull
or
xor
cmp
xchg
mov
mov
pop
into
call
outsb
loope
sbb
scas
in
xchg
jmp
jmp
movsb
je
lods
bnd
outsl
add
fisubrs
rcl
mov
jnp
aad
xchg
adc
lock
jle
sub
aaa
xor
testl
mov
mov
cltd
push
mov
aas
pop
push
inc
into
push
add
aas
push
outsb
and
jmp
cld
fnstcw
mov
mov
test
test
lret
lods
out
push
adc
lahf
leave
add
sbb
mov
jne
jo
mov
fsubrl
or
lds
pushf
mov
jg
cltd
mov
pop
popf
out
and
inc
mov
mov
dec
sbb
aaa
sbb
or
or
outsl
data16
stos
sub
gs
imul
popa
insb
aad
adc
in
mov
jecxz
mov
sbb
mov
xchg
dec
add
rcrb
sbb
cltd
push
inc
leave
test
push
jge
cmpsb
adc
jnp
sub
lods
mov
add
push
lret
jnp
pop
mov
xlat
and
pop
out
repz
aaa
xchg
in
mov
fnstcw
pop
ror
mov
mov
ljmp
dec
adc
lea
cmp
sar
and
mov
pop
outsl
cmp
cltd
out
movsl
sbb
loopne
fisttpl
leave
decl
and
jle
cmp
movl
push
rorb
mov
xchg
xchg
incb
lahf
faddp
les
sub
outsb
nop
pop
or
pop
push
fildll
sub
repz
test
cmpsl
je
xchg
xchg
dec
jno
subb
movsb
fcmovnb
xor
popf
mov
ja
inc
push
cs
push
and
push
fildll
and
or
add
movsb
out
inc
addb
sbb
pop
inc
insl
jge
movsl
mov
xor
and
std
adc
xchg
jl
in
jae
mov
daa
push
fiaddl
jp
push
pop
je
sti
cmp
bound
xchg
out
clc
fistpl
push
cmp
lock
leave
mov
push
xor
scas
icebp
cwtl
dec
loopne
mov
pop
jbe
gs
in
stos
daa
cmc
in
xor
xor
mov
mov
dec
fsubrl
cmpl
lcall
rcrb
pushf
push
subl
int3
scas
mov
inc
mov
stc
lahf
das
test
xchg
cmp
mov
jnp,pt
cmp
cmp
ljmp
adc
inc
and
pop
popa
and
pop
ret
lahf
punpckhwd
push
jb
inc
lds
xchg
mov
test
js
fwait
add
int
pop
fildl
daa
cmpsl
loop
repnz
sub
xchg
jle
mov
cmp
dec
dec
ret
adc
xchg
ret
sbb
test
mov
adcl
test
stc
in
add
and
sub
movl
lods
movsb
cli
xlat
sub
lcall
lds
xchg
mov
jns
lods
popf
or
push
fists
fidivs
ds
jge
xchg
pop
test
bnd
imul
mov
fidivl
outsb
jne
out
lds
dec
xchg
fcomps
ja
arpl
int
xchg
pop
call
int
movsb
xor
ja
movsl
dec
push
mov
stc
cli
pop
inc
mov
sub
enter
inc
lods
pop
insl
enter
icebp
xor
arpl
stc
xchg
xchg
ds
jnp
pop
pop
inc
fs
iret
mov
out
adc
cmp
mov
cmp
cmp
sub
pop
ficoml
mov
fs
or
aaa
int3
dec
jle
add
es
mov
nop
sub
jae
inc
xor
add
jbe
pop
fadds
mov
pusha
and
sub
jge
jecxz
ret
ja
sbb
push
sbb
mov
orl
filds
add
xchg
stos
add
outsl
mov
insb
insb
in
pop
sti
mov
gs
xchg
mov
inc
xor
arpl
xchg
mov
daa
int3
clc
imul
and
je
xlat
scas
shl
mov
pop
fsubp
fidivrl
and
inc
in
mov
test
aad
and
sahf
fsubs
pushf
ret
jnp
add
in
shrb
add
xchg
sbb
push
cmp
psubw
das
ss
cmpsl
sub
fisubrl
mov
push
addr16
sbb
test
enter
xor
ss
in
inc
out
je
xchg
dec
mov
mov
clc
clc
jns
jle
cmp
das
cmp
dec
pop
xchg
cmp
inc
push
jae
mov
je
jo
xchg
jg
mov
cmpsl
imul
jle
cmc
sub
ja
das
outsl
daa
jle
adc
sub
mov
dec
fwait
icebp
fs
andl
mov
lock
aas
ljmp
push
aam
call
pop
sti
outsl
inc
jg
subl
jmp
gs
xchg
std
mov
dec
and
outsl
xor
dec
dec
dec
inc
pop
adc
add
jno
clc
movsb
or
adc
movsl
aad
es
xchg
sbb
loopne
jl
jno
push
daa
dec
dec
xchg
jno
pop
ret
push
cmp
xchg
inc
add
aas
in
inc
mov
push
cmp
fsubl
cli
push
jbe
mov
call
repz
fcmovnbe
sbb
sti
imul
lds
jp
insl
dec
andb
add
addb
pop
mov
cmc
aas
pusha
enter
mov
push
in
jecxz
imul
sub
pop
out
imull
testl
mov
and
test
lret
pushf
outsl
or
mov
mov
inc
sahf
xor
test
inc
out
icebp
ret
xchg
inc
mov
and
mov
mov
lret
xchg
lods
dec
or
in
stos
loopne
mov
jg
xorl
mov
jbe
lret
jnp
add
jg
inc
adc
test
ret
fwait
push
aam
out
les
loopne
push
xor
les
nop
mov
sub
mov
or
pop
mov
fsubrs
mov
cli
int
lock
emms
mov
nop
sub
nop
lcall
stc
mov
pop
and
int3
inc
cmpsl
add
xchg
popa
dec
gs
jle
ja
subl
lock
jbe
mov
jg
lret
xor
dec
cmp
loop
sub
or
aad
sub
or
into
leave
rcr
pop
aas
sbb
jae
clc
int
aaa
addr16
inc
je
inc
or
pop
sti
inc
xchg
shrb
sub
mov
stc
loop
imul
add
xor
dec
and
jecxz
out
stos
push
inc
imul
and
fstpl
mov
js
dec
and
lahf
icebp
lea
cli
clc
jbe
je
stos
jb
cwtl
incb
maxsd
inc
nop
inc
sub
daa
leave
mov
lahf
mov
cmp
sbb
rcl
les
shl
cld
out
into
inc
dec
adc
push
dec
and
cmpsb
add
ja
mov
ret
clc
lods
sbb
xchg
mov
cmpsb
and
mov
js
sbb
push
cmp
mov
insb
call
es
add
and
cmp
push
in
and
or
cmpl
fldenv
and
or
rorb
dec
movsl
adc
add
add
ja
mov
sub
loopne
jo,pn
adc
out
and
ret
mov
pop
pop
jp
add
jns
mov
push
lock
outsb
jbe
push
test
mov
jne
lds
out
sub
addr16
add
push
push
ss
sub
loop
stos
add
cmp
sub
fs
movsl
jo
fwait
movsl
sub
in
sub
or
mov
sub
inc
lock
mov
fst
out
repnz
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
jmp
jnp
imul
sub
insl
cmp
adc
pop
adc
jg
insl
loopne
mov
fistl
cwtl
jo
lret
paddsb
imul
push
push
sbb
hlt
jae
jns
call
jg
out
mov
and
mov
loopne
rcrl
sub
add
push
sti
ror
out
push
pop
push
rorl
mov
aad
sbb
mov
adc
push
xor
jbe
cmp
mov
xchg
sbb
and
movsl
out
pop
fdivs
jo
pop
xchg
mov
and
push
fwait
jl
mov
imul
movsb
or
gs
jae
ret
stos
sub
mov
inc
push
rcl
fcmove
orl
mov
sbb
xor
jmp
outsl
cmp
or
sub
ret
mov
or
push
dec
or
inc
fmuls
mov
cmp
adc
sbb
mov
adc
negb
stos
ja
cmpsl
cmpb
int
mov
xor
shlb
mov
je
xor
mov
repz
cmp
mov
xorb
inc
jb
fwait
push
aad
mov
sbb
cmp
sbbb
jns
push
outsl
int
sti
repnz
aam
or
aaa
les
out
add
loope
sub
sub
cld
sub
orl
icebp
iret
out
mov
nop
adc
lods
sti
sub
stc
js
sbb
inc
xchg
inc
aad
sub
stos
lret
pop
pop
cmp
je
cmpsb
xor
sbb
push
rcll
mov
xor
ds
popl
into
jne
lods
xor
jno
xor
xor
jno
adc
add
cltd
mov
xchg
lods
dec
adc
int
add
les
mov
cs
insl
or
lods
hlt
mov
stos
dec
pusha
or
fidivrs
inc
jno
fistpll
bound
les
sarl
xchg
imul
jno
jns
pop
dec
stc
out
cmp
or
jno
insb
xlat
cld
mull
mov
or
negl
or
shll
rcr
je
dec
pop
pop
dec
jmp
xor
mov
mov
mov
aaa
mov
pop
nop
test
inc
adc
out
movsb
pop
je
cmp
xor
orb
mov
sub
jp
and
fs
nop
dec
xor
dec
sub
daa
inc
cld
ja
mov
mov
jnp
cld
dec
inc
or
jbe
sbb
aas
mov
mov
inc
mov
mov
popf
xor
sub
mov
je
aaa
movsb
scas
testl
sub
lret
add
ret
outsl
jno
lods
int
and
xchg
dec
clc
jb
flds
lods
das
jns
lcall
in
bound
in
cmp
jge
aad
loop
dec
add
je
imul
xchg
popf
adc
ret
mov
mov
mov
fnstsw
stos
inc
ljmp
mov
mov
vpmullw
inc
hlt
jmp
imul
adc
inc
xor
mov
lahf
in
jb
rcll
pop
inc
cmp
push
jno
cmc
and
addr16
xchg
inc
push
xchg
movsb
lea
pop
scas
or
inc
fadd
add
and
cmovnp
leave
xor
lcall
mov
out
outsl
inc
das
outsb
loop
xor
jmp
pop
dec
dec
pop
pop
repnz
nop
repz
sbb
ds
jno
cmp
negb
mov
inc
cmp
test
pop
sbb
sbb
ret
adc
dec
mov
sbb
sbb
pop
out
je
pop
push
and
mov
mov
inc
pop
jo
aad
aas
pop
jne
dec
clc
call
push
push
ljmp
jle
rorl
xchg
adc
push
jge
fwait
mov
mov
fwait
or
mov
xchg
sarl
frstor
jl
pop
das
inc
clc
pop
rol
sti
lcall
mov
pushf
sub
in
dec
fldcw
stc
inc
stos
mov
shrl
mov
movsl
ficompl
ljmp
push
jns
add
mov
dec
dec
mov
bound
in
adcb
cmp
aad
mov
addr16
imul
lods
lds
pop
mov
roll
fildl
movsb
inc
inc
cmpb
addb
cmc
push
xchg
imulb
leave
or
mov
sbbb
in
mov
xor
xor
mov
push
and
mov
sub
xor
ror
stos
push
rcll
ret
je
xor
shr
in
movsb
testl
daa
jbe
hlt
lds
inc
or
mov
lret
jbe
lds
or
shrl
add
leave
jle
leave
adc
and
inc
int
mov
add
push
adc
repnz
mov
add
lahf
pop
jns
sbb
popa
movsl
xchg
fwait
jle
ljmp
jne
sbb
xorb
pop
lea
pop
dec
and
into
js
hlt
sub
pop
fcom
into
mov
cli
jb
ja
insl
stos
xchg
sbb
adc
jo
lds
pop
scas
xor
hlt
je
sti
jmp
xchg
mov
in
mov
movsb
adc
xchg
pop
jecxz
lea
inc
cltd
stos
adc
aaa
test
loopne
popl
outsl
in
xchg
popf
sub
stos
xchg
test
push
cmp
imul
lea
mov
daa
lock
xchg
xchg
out
enter
xor
jge
mov
pushf
and
pop
je
add
dec
cmpl
sti
loop
and
dec
add
or
mov
sub
add
in
xchg
xor
sub
pop
adc
out
mov
add
dec
testl
dec
push
fisttpl
sahf
or
test
and
xchg
mov
push
fbld
ljmp
add
ja
and
fdivs
mov
hlt
and
mov
pop
and
bound
stos
sub
das
inc
sub
dec
jmp
inc
push
mov
cmc
fsts
dec
mov
clc
and
cmp
push
pop
add
clc
and
popf
or
idivl
jae
push
sbbb
push
in
mov
fwait
movsl
mov
inc
and
jns
jle
jle
sarl
xchg
lds
dec
lds
xor
cwtl
out
push
bound
jno
mov
lods
mov
or
jle
inc
inc
out
lock
add
aad
xorl
into
pminsw
repz
xchg
push
hlt
lods
inc
adc
testl
mov
jg
in
ret
jge
mov
sbb
es
adc
xchg
dec
add
test
ret
push
sahf
jo
pop
adc
sahf
cs
fdivrs
cmp
sahf
sub
inc
pop
pop
std
subl
mov
pop
dec
mov
fsub
sbb
mov
sbb
fldcw
sarb
jmp
xor
push
ficoms
kandb
out
bound
pmulhuw
xor
cld
cli
addr16
mov
ficoml
add
dec
cmp
out
stos
pop
pop
bound
enter
popf
cmp
xor
sti
jb
call
add
push
xor
loop
and
or
cmc
aad
jecxz
sbb
orb
mov
ds
shrl
loop
outsl
jmp
imul
sub
sbb
lock
sahf
dec
cmc
out
out
xor
pop
push
dec
test
adc
dec
sbb
sbb
fisttpl
fisttpll
jge
push
jle
and
sbb
mov
xchg
pop
ds
enter
mov
xchg
mov
cmc
dec
cmp
jns
insl
dec
repz
ret
aad
pop
out
or
mov
xchg
push
mov
es
bound
in
in
out
shlb
mov
int
and
insl
sub
mov
add
push
imul
add
in
or
xchg
jae
pushf
mov
out
scas
pop
pop
xor
adc
push
inc
inc
mov
or
orl
push
adc
and
pop
lds
xchg
cmc
xor
int3
repz
fistl
call
pop
jecxz
call
lods
add
insb
xchg
aaa
mov
inc
xor
js
pop
mov
add
mov
std
jb
out
pop
movsb
fdivrl
and
sbb
mov
mov
mov
lret
or
push
insl
and
cmpsb
scas
cmp
push
dec
es
inc
std
xchg
andl
jns
mov
cli
pop
ds
inc
dec
mov
inc
lret
or
mov
in
fiaddl
daa
mov
sub
mov
lds
inc
call
mov
sub
add
testb
mov
push
stos
roll
aas
aam
movmskps
inc
xchg
and
and
es
mov
cwtl
sti
jns
xchg
cmpsl
fldcw
cli
ficoms
mov
in
daa
repz
hlt
mov
push
or
fistl
scas
adc
mov
and
fbld
xor
mov
je
leave
mov
outsb
aad
pop
mov
push
inc
lods
add
mov
aam
push
adc
sub
or
mov
loope
andb
fldenv
in
fimuls
ja
shrl
mov
into
insl
mov
sbb
insb
mov
cmp
shlb
jno
pop
xchg
mov
and
sti
mov
into
xlat
lds
pop
jl
test
fbstp
inc
pop
jae
aad
inc
push
sbb
sbb
xchg
fldl
or
dec
push
xor
xchg
enter
lcall
pop
xchg
fdivrl
inc
add
movsb
pop
hlt
mov
mov
push
adc
push
fimull
test
sub
cltd
fildll
cmp
and
stos
inc
insb
movsl
fisubrs
fucomip
xor
cltd
inc
mov
fsts
stos
sbb
add
out
pop
mov
push
loope
mov
cs
dec
mov
and
sti
sub
xchg
rorl
mov
xlat
push
sbb
nop
jno
inc
lods
out
les
sub
jne
arpl
mov
jle
mov
lret
popf
ffree
adc
roll
aaa
mov
scas
insb
loopne
movsl
pop
dec
repnz
mov
or
cwtl
pop
mov
or
cmp
cltd
adc
out
jb
push
inc
cmc
stos
push
clc
and
push
stos
push
cmp
repnz
cld
popa
ss
mov
cld
out
andl
lcall
ret
xchg
push
fidivrs
jl
sub
dec
adc
loope
shl
mov
jle
pop
mov
sub
maxps
mov
std
in
pop
and
jbe
call
int3
das
pop
sbb
insb
jae
jle
sahf
xor
cmp
inc
ja
aad
jmp
je
push
mov
clc
add
push
imul
clc
cmpsl
es
dec
inc
jne
imul
pushf
mov
mov
insb
lcall
lcall
daa
int
xchg
lcall
ja
test
sbb
push
add
inc
clc
js
push
pop
mov
popa
arpl
dec
jp
lods
int3
lods
adc
lret
out
in
insb
frstor
addl
push
cltd
inc
test
ljmp
and
punpckhdq
cmp
inc
negb
lock
rorb
hlt
in
les
lock
inc
cmp
inc
jno
inc
in
jge
inc
sub
sub
jo
or
stos
cmp
divl
cmc
push
repz
lock
jne
jno
or
repz
loop
enter
xor
dec
sbb
popf
mov
and
push
jnp
cmp
push
push
jne,pt
out
cmp
stc
jp
pusha
enter
xchg
lcall
push
inc
mov
mov
jmp
sub
fwait
mov
xor
adc
sub
adcl
test
repz
lock
rorb
xchg
xor
arpl
outsl
ja
adc
push
popf
out
rcll
xor
rolb
mov
cmpps
mov
mov
aas
movsb
lahf
ret
and
jne
iret
aas
mov
adc
lret
stc
lret
xchg
stos
frstor
loopne
movsb
dec
arpl
push
iret
push
in
fistl
push
jb
or
ss
cld
movsb
mov
pop
pop
jge
or
sub
enter
pusha
gs
dec
fisubl
aaa
rep
cmpsb
mov
shll
rorl
test
imul
insb
push
push
loope
mov
imulb
dec
adc
loop
out
pop
fists
cs
push
jl
mov
add
iret
adc
aas
push
push
mov
mov
mov
or
adc
ret
jb
pop
pop
dec
mov
les
testb
sbb
enter
or
push
push
scas
daa
xor
push
iret
push
and
push
ret
mov
mov
stc
icebp
aas
test
mov
mov
sbb
xchg
cld
xor
fbstp
inc
dec
or
in
movsl
or
mov
shll
xchg
inc
pop
dec
jnp
ljmp
adc
xchg
inc
jg
ss
jl
aad
sub
xor
xor
and
sbb
fldl
cmp
mov
xchg
xlat
int
dec
cwtl
rcrb
out
cmpsb
cli
jne
jle
and
inc
sti
les
adc
cmpsl
add
outsb
mov
jb
cmp
out
int
pusha
popa
mov
xor
cmpsl
inc
in
cmp
in
jns
aas
xchg
gs
dec
cmpsl
push
aam
push
movsl
js
leave
sbbb
cmpsb
mov
and
mov
pop
fimull
mov
or
or
fstl
je
fwait
xchg
xor
cmp
mov
inc
imul
fdivrl
lahf
push
aaa
jg
incl
xchg
out
adc
jno
dec
andl
fs
lods
arpl
add
ret
into
fcomi
push
sub
ret
jo
inc
push
pop
xlat
xchg
pushl
cltd
mov
mov
pop
incb
and
fcoml
sbb
test
ljmp
enter
mov
adc
test
inc
cmp
nop
sbb
in
pushf
mov
mov
cld
and
jo
out
add
out
stos
xor
repnz
xchg
sbb
add
call
dec
pop
das
cmp
dec
iret
adc
or
pop
push
aaa
dec
insb
cld
andl
sub
xorb
sti
or
xchg
out
stos
pop
icebp
ds
stos
cmovb
mov
mov
aad
cmp
push
stos
mov
in
mov
pusha
pop
sub
imul
stos
jl
and
loopne
cmc
and
repnz
cmp
adc
mov
mov
push
pop
ljmp
sbb
or
mov
mov
mov
and
adc
sub
cmp
or
jmp
lods
pop
or
jg
inc
daa
iret
xlat
lea
push
or
jecxz
rcrl
mov
add
enter
add
sbb
fstps
mov
push
xor
popa
popf
sti
sbb
sub
jle
push
leave
push
push
jle
or
push
dec
shrb
push
mov
dec
test
sahf
cmp
stos
xchg
mov
addl
mulb
movlps
cld
jp
js
cmp
push
cmp
dec
sbb
in
out
sub
xlat
jbe
mov
sbb
out
push
push
add
cmp
nop
dec
into
pop
out
cmp
xchg
bound
repz
aad
jbe
jge
dec
push
sahf
mov
mov
std
repnz
mov
mov
pop
mov
arpl
fadds
sub
sub
pop
idivl
aas
dec
aaa
or
outsl
xchg
jge
mov
add
mov
test
mov
pop
popa
outsl
dec
imul
add
or
jecxz
adc
xchg
pop
test
iret
sti
push
dec
cmp
ss
pop
mov
lods
jmp
dec
dec
and
xchg
imul
mov
or
fs
add
mov
cld
inc
jecxz
inc
and
repz
daa
js
mov
les
test
xor
cmp
ret
sbb
cltd
frstor
stos
pop
sti
aam
or
aad
enter
test
jbe
jecxz
dec
add
les
and
dec
add
sbb
cmp
pop
aas
clc
shl
jl
push
repz
mov
pop
mov
out
test
fiadds
cwtl
jnp
pushf
adc
push
mov
mov
cmpsl
stc
pop
int3
fsubrs
loop
sbb
mov
pop
cmp
pop
fwait
lods
jns
ret
and
and
pop
or
jo
test
mov
mov
xchg
test
jns
stos
pop
and
aas
mov
in
push
push
icebp
mov
sub
sbbl
dec
xor
sub
inc
shl
dec
sbb
mov
insl
aam
je
jae
pop
pop
insl
test
cld
mov
sahf
hlt
loop
fnsave
in
fsubl
lret
test
imul
pop
sbb
rcrl
jb
xor
add
sub
hlt
dec
gs
inc
or
sub
pop
xor
jecxz
or
jne
arpl
xchg
ds
mov
test
xchg
push
dec
lret
lock
imull
sbb
scas
push
inc
icebp
sarl
mov
or
xchg
fsts
and
push
pop
lcall
loope
xchg
into
cli
jmp
pop
xor
adc
or
push
mov
mov
pop
fmul
mov
push
mov
mov
inc
cs
xchg
movsb
enter
pop
lds
xchg
mov
das
jbe
add
adc
add
lcall
pop
shl
in
rorb
inc
cmp
in
dec
call
inc
mov
lcall
mov
jb
test
inc
adc
xchg
push
outsl
ljmp
jne
dec
inc
sbb
das
ljmp
add
pushf
test
and
mov
inc
pop
adc
or
stc
push
cmp
pop
int3
dec
adc
push
icebp
orb
fnstenv
sub
add
rcrl
dec
cs
mov
pop
fnstsw
popf
sub
push
enter
xchg
push
shr
inc
mov
add
adc
ficompl
xor
pusha
pop
adc
or
xor
dec
in
bound
fs
jmp
mov
ljmp
sarb
outsl
mov
pop
int
cmp
mov
rcrl
mov
push
nop
out
mov
sub
mov
xchg
fsub
sub
pushf
bound
out
or
test
dec
ror
mov
test
cmpsb
inc
cs
cmp
mov
cmp
mov
popa
mov
adc
sbb
jle
fs
int3
sub
popf
inc
aam
adc
xor
xor
lcall
dec
cli
pop
lock
mov
mov
mov
mov
sub
in
push
ljmp
or
xchg
mov
out
mov
lcall
push
mov
and
dec
pop
mov
rorl
test
dec
and
or
cmp
dec
or
ljmp
sbb
fcompl
sub
jle
mov
xchg
mov
mov
dec
aaa
sarb
mov
loop
arpl
xchg
mov
mov
pop
stos
sub
xchg
jle
inc
sbb
cmp
xchg
idivb
cmpsl
dec
push
orb
movsl
mov
lret
adc
lods
test
inc
adc
sub
jmp
cwtl
pop
outsb
sarl
cmpsl
pop
out
xchg
movsl
dec
mov
cmp
or
jecxz
cmp
movl
add
or
mov
jb
jo
test
adc
das
adc
jle
or
js
in
xchg
lea
fs
adc
add
and
adc
jae
aaa
sbb
cmpsl
push
bound
mov
cmc
jbe
mov
push
and
mov
stos
pop
js
mov
sub
insl
aas
mov
sub
mov
incl
lret
iret
loop
movsl
aaa
daa
adc
repz
cmp
ss
jo
pop
cmc
sbb
lretw
pusha
sub
jl
cld
inc
cld
push
outsb
xchg
les
test
jmp
sbb
jecxz
inc
ds
inc
xor
and
pop
or
cmp
push
and
jmp
stos
fwait
push
das
adcl
xor
jo
adc
movsb
jne
jae
bound
push
cmp
pusha
add
mov
inc
int
push
sarl
popa
ret
sbb
and
push
or
mov
mov
mov
jle
pushf
int
mov
sub
xor
jg
or
xor
aas
fiaddl
xlat
inc
rorb
cld
loopne
int3
sub
and
out
rol
lods
pushf
mov
pop
cld
icebp
lret
inc
xadd
sahf
cmp
inc
test
mov
add
out
loope
test
mov
push
sahf
dec
cmc
xor
fiaddl
movb
fs
pusha
outsl
sarb
test
mov
in
push
cmp
push
cmp
add
mov
xor
dec
addb
adc
call
pushf
insl
ljmp
stc
jb
test
add
pusha
scas
cmc
repnz
rorl
sbb
or
lret
xchg
inc
test
pop
jb
sarl
add
mov
lods
push
mov
mov
icebp
repnz
fs
xchg
cmp
xchg
scas
xor
test
add
pop
xor
gs
insb
and
cmp
aas
lea
push
mov
imul
jecxz
subl
mov
cmpsl
lahf
mov
cmpsl
call
and
and
xlat
push
mov
or
mov
orl
and
data16
adc
xchg
inc
cmp
ror
push
adc
sbb
pushf
cmp
fldl2t
out
mov
arpl
enter
adc
mov
adc
jae
push
inc
xchg
scas
dec
add
push
ljmp
push
cmc
inc
mov
push
pop
lcall
push
insl
mov
movsb
mov
push
dec
dec
lock
or
movsl
xor
pop
out
notb
into
popl
xchg
mov
xchg
xchg
dec
aam
loopne,pn
xor
cmpsl
add
clc
xchg
mov
enter
adc
mov
xchg
rcl
jp
mov
in
inc
jae
mov
xor
xchg
hlt
mov
pushf
arpl
inc
xchg
std
lcall
mov
stc
shr
cmpsl
call
sub
mov
adc
stc
xchg
mov
in
xor
push
faddl
mov
in
pop
xchg
push
adc
mov
jge
out
or
shl
jnp
and
adc
add
mov
iret
es
adc
pop
ror
mov
xchg
fiaddl
adc
fadds
in
lret
nop
cmc
or
lret
xor
test
sti
flds
icebp
int3
repz
mov
pusha
idivl
les
fists
mov
jge
xchg
sub
hlt
cs
fldt
cmpsb
mov
jecxz
xchg
dec
jle
or
lods
mov
mov
mov
test
sub
add
in
push
adc
inc
scas
inc
push
fisttpl
cmp
inc
add
in
test
arpl
incb
add
mov
ja
push
and
add
leave
sbb
cmp
jge
mov
adc
mov
fildl
push
mov
dec
pop
mov
rclb
adc
xorw
lods
dec
sbb
lret
das
daa
mov
aam
imul
inc
fidivl
pop
xchg
roll
lahf
xor
and
pop
in
push
in
stc
loop
in
mov
xchg
and
push
cs
sbb
cld
ja
add
jmp
movsl
lahf
push
adc
lods
push
mov
dec
dec
loop
mov
and
sbb
pushfw
cltd
mov
dec
adc
lcall
mov
inc
neg
xor
imul
aaa
movsb
clc
mov
add
int
pop
shlb
dec
xchg
es
push
mov
cmp
mov
js
in
sbb
aam
ljmp
imul
push
push
pop
adc
daa
sub
dec
mov
pop
mov
movsb
into
jecxz
out
mov
push
inc
xchg
inc
sub
test
addr16
ljmp
out
idivb
dec
in
out
cmp
pop
xchg
add
cmp
inc
xchg
loopne
int
pusha
inc
add
je
mov
jl
shrl
mov
mov
jnp
mov
aaa
ret
fsub
popa
and
push
push
sti
data16
ds
xor
pushf
pop
pop
sarb
div
daa
dec
push
mov
jmp
ret
in
roll
mov
jae
in
mov
pop
leave
sub
rclb
jns
scas
inc
std
loopne
mov
stos
jbe
jns
inc
int3
cmpsb
stos
andb
jo
push
fidivrs
sub
lds
sub
inc
xlat
xchg
fwait
mov
clc
sub
insl
stos
ds
or
loopne
xlat
dec
xchg
jnp
dec
cmc
bound
jbe
out
jge
out
shlb
cmp
decb
push
push
xchg
pop
xor
out
adc
pop
and
mov
lds
ja
addr16
movsb
or
sti
mov
iret
mov
dec
jbe
cli
mov
jo
inc
mov
or
je
sub
and
sar
add
or
cmp
out
or
lods
mov
mov
inc
mov
into
fistpl
int3
adc
and
test
mov
imul
sbb
cmp
and
arpl
fidivs
xchg
jle
cmc
pushf
iret
dec
scas
mov
lods
ja
rcll
mov
into
lret
or
es
enter
and
xchg
inc
pop
mov
adc
loopne
gs
fcoml
aas
sbb
and
or
ds
and
dec
cltd
xor
mov
es
inc
dec
stos
cmp
imul
sahf
pop
adc
out
fdivs
lret
push
outsl
mov
rcrb
clc
jno
imul
mov
sbb
sub
dec
mov
jl
bound
or
ja
xchg
iret
add
sub
pop
pop
movsl
push
shlb
mov
mov
das
mov
insl
mulb
dec
lock
mov
mov
mov
sti
pop
push
fdivs
jns
jle
xor
gs
ficompl
pop
in
push
filds
jle
das
mov
jo
push
lods
xchg
mov
lahf
stos
mov
xor
xchg
push
outsb
sub
pop
pop
push
jno
lods
lahf
inc
dec
mov
nop
sub
orb
jmp
imul
std
cmpsb
andl
fisttpl
ja
mov
bswap
inc
arpl
lods
orl
push
dec
jl
jno
jp
push
bound
outsb
xchg
jecxz
xor
xchg
sbb
sub
jb
aaa
add
test
xchg
and
iret
jl
sub
out
mul
adc
adc
inc
js
jbe
jbe
pop
adc
aas
mov
cmp
dec
xchg
pop
cld
mov
in
outsl
cmpsb
jecxz
cmpsl
test
mov
adc
cltd
sub
push
pop
sub
and
shrb
mov
mov
dec
inc
aaa
stos
dec
pushf
fstpl
jl
jb
aas
add
mov
addr16
scas
xor
lea
ja
ljmp
sbb
lods
cmp
mov
mov
sbbb
mov
xchg
out
ret
inc
mov
mov
mov
cld
scas
mov
lea
fwait
leave
ss
sbb
gs
je
dec
inc
fmuls
push
enter
lods
cmpsb
scas
inc
sbb
lret
dec
sbb
mov
sarb
es
orl
mov
sbb
test
pop
out
out
sti
push
lret
aaa
cmpsl
jecxz
out
insl
push
into
fldt
sbb
mov
jge
adc
inc
add
inc
mov
dec
in
cmp
xchg
mov
pop
test
push
insb
cmp
std
popa
pop
cmp
data16
adc
out
push
cmp
mov
pop
lret
and
cmp
sti
mov
and
lock
sub
xor
fdiv
mov
push
std
mov
rclb
nop
xlat
scas
pop
rcl
mov
pop
push
cmc
in
mov
ja
jmp
mov
xchg
outsb
and
call
iret
out
cld
push
sti
cmp
push
pop
lock
pop
fsubr
sti
jg
push
insl
push
push
ficompl
adc
mov
shlb
or
adc
fmul
nop
outsb
push
sub
push
push
push
imul
icebp
insb
xlat
push
dec
jge
iret
dec
lea
inc
mov
ret
sub
pop
or
dec
and
mov
cmp
ja
in
sbb
fstpt
jmp
das
push
out
cmpsl
das
and
xchg
ds
out
out
adc
or
stos
leave
je
repnz
mov
push
jp
dec
test
fcmove
push
aam
or
call
jb
mov
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
jmp
shrb
push
sbb
mov
inc
notl
adc
shl
imul
ljmp
inc
pop
pop
jge
cmp
lods
repz
nop
cmpsb
cltd
popf
pop
dec
clc
rcrl
adc
xchg
sub
push
in
pop
stos
lds
mov
xor
push
inc
rclb
push
pop
lret
aad
inc
into
push
mov
xchg
out
scas
push
in
sarb
arpl
daa
lds
stos
sahf
xor
shll
push
cmp
xchg
lds
pop
js
movsb
nop
xor
pop
push
dec
dec
aaa
mov
repnz
repz
xor
test
scas
loop
push
loope
arpl
xorb
jae
clc
fwait
pop
ficoml
cmp
sub
rcrb
loope
in
fsubs
nop
mov
pop
repnz
mov
and
ret
subb
or
mov
mov
pop
push
sbb
scas
fwait
and
xor
in
cld
ja
mov
cs
stc
ljmp
and
scas
lods
movsb
cmp
insb
test
dec
xchg
mov
pop
mov
addr16
mov
adc
enter
adc
scas
mov
mov
nop
push
test
xchg
int3
inc
dec
inc
xchg
dec
sub
aam
std
cmp
jo
sbb
xor
aad
xor
xor
adc
mov
test
or
fsubp
add
sub
inc
adc
inc
ljmp
mov
ja
adc
es
es
movsb
inc
movsb
rcll
int
push
dec
les
incb
xchg
sti
push
ss
dec
fistpll
sbb
xchg
mov
xor
es
lret
sti
jnp
sbb
dec
jg
hlt
add
das
arpl
cld
xlat
test
xor
stos
test
std
insl
mov
fs
adc
push
aam
in
mov
and
push
adc
es
movsl
push
inc
pop
dec
jge
mov
lds
sub
dec
sbb
adc
repnz
test
sti
fwait
jb
add
jb
mov
rcl
movsb
loop
inc
xor
push
cmpsl
dec
xchg
dec
mov
mov
pop
jp
jns
out
mov
add
push
pop
jecxz
out
test
pop
or
shlb
out
dec
adcl
sub
jg
outsl
and
repnz
pop
sbb
mov
and
testb
pop
cmp
divl
lods
shrb
add
mov
mov
test
push
mov
xchg
mov
or
out
sub
push
repz
ds
or
fwait
cmp
push
dec
loope
push
in
in
and
out
xor
outsb
outsb
inc
xor
adc
adc
faddp
pop
xchg
ds
daa
jb
test
dec
in
sbb
dec
in
das
or
add
lret
stc
js
push
rcrl
push
cld
cmp
push
pop
stos
xor
adc
cld
push
dec
add
jl
movsb
xchg
fldt
sbb
mov
test
stos
jecxz
imul
dec
ja
push
adc
iret
jne
sahf
mov
or
xchg
push
sub
lds
sub
mov
stos
ss
divb
add
out
push
xlat
data16
mulb
in
fcmovu
test
cmc
ja
mov
add
jb
movb
outsl
out
and
fisubl
jle
adc
icebp
inc
dec
adc
mov
ds
adc
jmp
push
cmpsl
pop
lods
push
imul
pop
mov
ficompl
arpl
pop
seta
cwtl
repnz
in
cwtl
jo
shrb
or
adc
pop
insl
in
aam
fildll
xchg
push
popa
jle
shlb
cmp
mov
inc
movb
cmpsb
cmp
popa
sub
loopne
nop
and
shlb
inc
cwtl
sbb
ret
movsl
imul
cmp
xor
movsl
pop
push
andl
popa
outsl
jnp
mov
in
ret
lahf
rcll
sbb
lcall
inc
loopne
or
mov
addr16
push
jmp
pop
mov
and
shrb
jnp
data16
push
xchg
cmp
mov
cmp
movsl
aad
or
out
loop
sbb
ficomps
or
inc
pop
jl
mov
push
sub
lret
loope
jo
loope
add
cmp
cmpsb
xchg
inc
mov
mov
ss
cmpsl
rclb
mov
mov
cs
sub
cmp
add
and
push
hlt
daa
push
lods
fcompl
mov
xchg
int3
add
xor
clc
cmp
mov
cmp
popf
sti
jge
hlt
in
mov
in
out
add
inc
hlt
cmp
clc
stos
in
cmp
cmp
cwtl
sub
jmp
mov
add
mull
dec
push
mov
adcb
stos
mov
int
int3
repnz
imul
int
push
xlat
mov
rorb
mov
jnp
pop
loopne,pn
mov
pop
fwait
or
fwait
pop
mov
lock
es
mov
mov
xchg
rol
dec
dec
loop
pop
in
daa
rcrl
mov
cmc
jae
ja
and
lea
mov
add
mov
xchg
sub
mov
pusha
sti
push
mov
dec
iret
mov
movsl
dec
gs
push
or
pop
dec
jb
push
shll
aaa
xchg
dec
jb
fmul
lods
pop
adc
xor
fidivs
pop
adc
jo
or
pop
iret
mov
sub
orl
pusha
ljmp
cmp
jb
dec
sbb
in
jecxz
xor
xchg
jmp
in
and
dec
in
stos
subb
js
into
lret
test
and
lret
lahf
gs
mov
dec
cmp
fs
pop
jbe
lret
shrb
jb
data16
push
jge
gs
dec
inc
shlb
mov
dec
in
icebp
repz
and
dec
shl
add
inc
lds
cmp
xor
loopne
mov
cld
add
and
dec
lds
fmull
pop
and
test
inc
push
ja
pop
push
inc
cmpsl
dec
inc
dec
scas
and
aam
cld
sub
std
adc
xchg
push
bound
into
xor
jmp
lret
faddl
shr
out
int3
jle,pn
jns
imul
push
jnp
aad
out
shr
loope
in
cmp
mov
xor
sbb
jns
je
add
js
stos
hlt
aas
popa
sub
sub
sarb
mov
sbb
cltd
in
scas
add
popf
imul
adc
lcall
xor
mov
mov
call
cmp
sbb
jecxz
push
arpl
xchg
icebp
popa
loop
test
dec
inc
je
ret
jb
loope
cmpsl
or
mov
adc
std
push
loop
movsb
jmp
icebp
in
mov
jne
xorb
adc
aam
pop
lds
add
scas
mov
push
bound
testb
adc
mov
or
push
adc
shlb
insl
fs
ret
scas
test
jb
sub
and
and
mov
add
std
rcrb
xor
push
in
lea
inc
lods
or
push
lcall
sti
aaa
add
lcall
jae
sub
imull
mov
dec
cmp
push
insl
sub
push
aaa
cmp
cmpsb
push
cmp
hlt
clc
jbe
jo
fsub
mov
orl
dec
add
inc
xchg
add
pop
xlat
out
loope
aas
jne
inc
dec
and
jl
push
cmp
pop
sbb
and
out
icebp
ds
ror
lret
call
or
nop
jl
test
loope
in
mov
and
pop
add
pop
cmpb
ficompl
xor
lret
mov
adc
lret
add
mov
shlb
pop
push
sahf
adc
sti
mov
pushf
inc
xor
sbb
dec
clc
sub
aaa
sub
lea
popf
insb
push
imul
lds
imul
arpl
sub
mov
in
inc
loope
add
pop
jno
xor
sti
dec
mov
out
jp
shll
in
and
mov
xchg
add
mov
sub
sbb
sub
imul
sti
mov
shrb
incb
out
cmc
outsl
inc
jns
fidivl
and
add
int3
jmp
add
xchg
gs
push
aam
sbb
xlat
imul
mov
das
popa
push
sub
jae
mov
jne
dec
and
decl
testb
les
push
out
push
stos
push
push
xchg
scas
inc
in
fdivl
aaa
movsb
mov
cmpsl
xchg
test
popf
push
out
test
cmp
orb
stos
lahf
sub
cmpsb
cmp
lret
das
xor
mov
mov
iret
fidivrs
les
inc
dec
mov
push
push
and
mov
and
inc
jbe
push
out
pop
adc
jp
jne
and
push
mov
fstl
aas
ret
pop
inc
inc
and
push
test
cwtl
mov
push
xchg
jle
insb
jl
scas
xor
scas
jno
outsl
add
les
cmc
idivl
ds
pop
test
mov
mov
jecxz
push
scas
jl
dec
jmp
push
ds
repz
in
xor
fildl
sbb
fisttps
insl
mov
xchg
and
icebp
adc
dec
xchg
mov
pop
es
das
ss
lcallw
sbb
fwait
sub
clc
push
cmp
lea
fidivrs
rorw
rcrl
mov
je
std
cli
not
dec
mov
fists
fs
cmpsl
and
xchg
adc
hlt
out
adc
pushl
pinsrw
call
arpl
aad
pop
mov
fwait
push
and
bnd
ss
sarl
pop
lret
aaa
jle
cli
out
movups
daa
in
ljmp
add
mov
gs
or
test
dec
jno
fs
push
jbe
fs
outsb
mov
and
cmp
pop
movsb
mov
jecxz
xor
stos
push
hlt
out
ficompl
push
or
inc
push
inc
mov
scas
leave
int3
mov
aad
stos
pop
push
cmp
lds
iret
mov
adc
and
je
push
scas
adc
inc
pusha
mov
fnstcw
xchg
enter
fisubrl
jb
das
mov
add
cmp
neg
cmpsl
call
mov
mov
leave
lret
sbb
cmpsb
xor
stos
addr16
imulb
in
aam
out
loopne
push
pop
push
nop
insl
mov
mov
inc
sbb
mov
insl
es
mov
add
rorb
inc
cmpsl
test
js
fcomps
lret
mov
dec
cmp
fnstsw
fstl
out
cmc
call
lret
cmc
andl
pop
dec
cwtl
lods
cmp
cmp
sub
ds
xchg
mov
adc
mov
mov
cmp
aaa
out
and
lods
mov
stos
sbb
dec
inc
or
ja
in
xchg
aad
or
xor
cld
add
lods
sbb
ja
pop
iret
nop
mov
shrb
je
push
sub
imul
mov
and
nop
inc
ljmp
push
fsubrs
aas
xchg
andb
lea
imull
pop
jg
int3
xchg
in
cmp
xchg
sbb
aas
sub
cmp
icebp
pop
mov
mov
in
pop
je
jmp
inc
iret
sbb
scas
sarl
mov
les
shlb
sub
ds
or
fldl
pop
mov
divb
sbb
adc
mov
ret
inc
fidivrl
xchg
xor
and
imul
mov
int
fistpll
sbb
cli
xchg
or
aad
dec
sbb
mov
jmp
call
xchg
and
sub
dec
mov
jl
mov
lds
addr16
xchg
mov
xor
cmp
adc
iret
xor
push
cwtl
ljmp
xor
call
pop
insb
fstps
mov
add
lock
in
jb
out
les
mov
xchg
loopne
bound
xchg
outsb
lret
or
fstpl
sub
out
sbb
addl
jo
mov
je
inc
pop
jns
in
lock
xchg
and
enter
add
repz
out
mov
cld
pop
insl
add
sub
jl
mov
mov
xor
and
push
sub
test
dec
mov
jl
pop
and
cmp
adc
enter
mov
test
test
ds
icebp
push
aaa
push
mov
dec
jge
out
push
xchg
cmp
int
daa
push
mov
stos
adc
adcb
dec
clc
rcl
jg
sbb
adc
sub
cmpsl
mov
ds
outsb
int3
dec
cld
lahf
jmp
imul
mov
mov
push
adc
inc
ret
mov
lahf
mov
push
test
hlt
addr16
arpl
dec
lahf
xor
cld
pushf
pop
out
dec
dec
sub
adc
out
fld
mov
dec
outsb
ljmp
pop
psubusb
mov
daa
lods
push
stos
jge
add
xor
push
arpl
les
jge
or
push
jmp
dec
xchg
adc
push
xchg
and
fbld
xor
aas
mov
in
pop
add
dec
jne
gs
cs
push
inc
push
jge
repz
push
cmp
xor
data16
call
sbb
mov
or
adc
in
sbb
lods
in
cwtl
add
adc
sub
inc
pop
fidivl
inc
sub
and
mov
push
cmc
les
sub
jge
sub
rol
movsb
fldcw
rcrl
pop
adc
add
xor
out
add
dec
fs
mov
adc
inc
imul
inc
add
call
in
adc
into
jg
xchg
mov
or
insb
and
cli
lea
dec
and
xchg
lods
jbe
fldenv
int3
test
sbb
mov
jo
add
xchg
fiaddl
dec
or
pusha
shlb
pop
test
mov
adc
push
mov
inc
cs
das
jo
repz
popa
add
mov
pop
fdiv
adc
lahf
repz
ficoml
stc
push
cmp
loopne
loope
adc
jbe
and
andb
push
and
les
or
sbb
adc
bnd
out
je
jmp
int
sbb
loopne
cmp
mov
cmc
pushf
mov
insl
je
stc
cmp
int
cmp
fiaddl
test
adc
daa
push
test
loop
icebp
inc
lock
sarb
js
pusha
cltd
dec
sub
orb
ljmp
pop
adc
and
xor
xchg
sbb
sbb
dec
leave
sub
cmc
mov
lahf
push
sub
orb
iret
jle
dec
shll
sub
fists
push
cli
push
inc
and
test
test
mov
cmp
jle
push
fstp
add
add
and
repnz
adc
aas
ret
push
dec
ret
mov
pop
pop
xchg
sub
and
adc
aaa
push
fcom
pop
shl
pop
shrb
sub
adc
cwtl
cmp
in
fimull
cmp
shlb
leave
inc
mov
sub
lds
push
movsb
or
movsl
jns
lds
scas
adcl
mov
stos
gs
ja
mov
test
out
stos
jns
jae
push
repz
xor
rcll
fistps
rcrb
xlat
loope
or
aad
sbb
push
sbb
and
pop
xchg
shll
dec
in
scas
lea
push
mov
gs
cwtl
inc
aad
xchg
inc
cmp
shrb
pop
arpl
cltd
mov
lds
mov
pusha
scas
sbb
push
or
mov
shll
cmp
mov
jbe
negb
mov
lcall
lcall
or
xor
dec
rol
xchg
ja
movsb
dec
clc
jae
orb
popa
mov
aam
xchg
sub
xor
paddd
or
fistl
mov
mov
cld
inc
and
xchg
das
xchg
movsl
jp
sbb
jecxz
dec
push
in
clc
fwait
notb
js
inc
push
pop
fldcw
pop
or
mov
aaa
push
mov
pop
out
jle
xchg
out
outsb
mov
jb
push
cld
mov
inc
push
xlat
js
jns
pop
dec
mov
inc
lret
mov
add
scas
xchg
in
push
push
orl
mov
mov
or
test
sbb
push
push
loopne
aad
mov
stos
sub
cwtl
or
es
int
insb
ja
and
addr16
xchg
in
es
notb
js
or
push
inc
mov
mov
cmc
popa
push
dec
push
jns
cmpsl
lret
popf
stos
sti
pop
cmp
or
hlt
lock
idivl
sub
les
out
pop
sbb
mov
dec
aad
dec
cmpsl
and
mov
int
bnd
stos
arpl
arpl
ja
xchg
out
cmpsb
pop
cmpsl
xor
scas
mov
mov
pop
dec
or
push
rorl
inc
hlt
add
mov
mov
and
push
mov
movsl
out
movsb
xlat
jle
fbstp
out
movsb
cltd
std
cmpsl
nop
ret
inc
add
sbb
repz
sbb
cmp
insl
bnd
sbb
cld
xchg
pop
dec
push
mov
and
or
sub
lock
sbb
ss
sbb
ret
dec
vsubps
sub
jnp
mov
ret
push
dec
lods
jne
imul
xchg
test
jns
push
push
or
jl
sbb
mov
sub
insl
xchg
or
xchg
gs
xchg
push
ja
loop
sub
leave
out
and
push
and
aad
cmp
ret
cmc
sub
push
movsl
push
popa
push
cmpsb
sarb
or
and
lret
xchg
add
in
pop
mov
mov
push
imul
cmc
adc
ds
sbb
xorb
fisttpll
insb
lods
fucomip
jecxz
mov
adc
jo
xor
ja
push
jo
mov
ds
add
mov
fdivp
out
loop
scas
in
jg
and
shrl
mov
inc
rcl
lcall
movsb
fdivl
and
mov
cmpsl
sub
ja
jmp
rcr
adc
and
jge
jl
push
inc
push
loope
imul
inc
push
fs
add
repz
sub
xchg
xor
test
lret
aam
in
insb
jnp
bound
jle
push
rcrb
sub
lret
insb
push
int
popa
bts
jnp
repz
or
test
decb
lock
jns
or
aad
sahf
test
data16
js
fwait
popa
bound
mov
mov
lret
mov
out
scas
pop
mov
cwtl
out
cltd
push
test
out
cmp
dec
pop
pop
or
data16
mov
inc
cmpsb
mov
aam
xor
movsb
decb
aaa
fdivrl
push
insb
clc
or
mov
out
xchg
ret
rclb
movsl
call
dec
mov
out
push
in
inc
mov
bound
jp
pop
xchg
xor
test
jns
lock
mov
fnstenv
push
pop
mov
jp
cmp
inc
add
test
mov
push
popl
inc
fnsave
cmp
movsb
shrb
dec
inc
aam
cltd
mov
loopne
mov
sti
pop
icebp
int
sub
xor
fmul
imul
mov
pop
xchg
xor
test
mov
xchg
cltd
inc
std
xor
and
add
or
and
cmp
repz
pop
xchg
js
inc
out
inc
repnz
inc
out
xchg
mov
mov
fs
aaa
arpl
fs
mov
add
jmp
pop
adc
inc
enter
insl
bound
fdivl
xchg
fcomps
mov
loopne
jp
ret
clc
mov
pop
mov
cmpsb
push
negl
ss
push
int3
push
nop
mov
adc
test
addl
mov
cmp
icebp
lahf
in
sbb
addr16
cmp
or
jae
push
in
stc
mov
mov
jnp
lahf
jl
ja
pop
movsl
imul
mov
mov
adc
sbb
xor
or
arpl
and
xchg
js
sbb
add
mov
push
sbb
dec
jae
and
push
mov
jp
orb
cmc
xchg
ret
stc
popa
sub
loopne
sti
xchg
pminub
stos
mov
add
mov
xchg
or
dec
jbe
push
ja
lea
adc
out
js
fimull
inc
mov
xor
sub
add
clc
mov
mov
mov
push
cwtl
cli
push
jecxz
mov
ljmp
cmp
cmc
pop
std
jbe
xchg
add
push
xchg
inc
mov
or
imul
mov
movsl
add
fnstenv
insl
sbb
ja
xor
lds
in
pop
push
nop
addr16
out
out
or
lret
rcrb
dec
sbb
popa
adc
inc
and
xchg
scas
jnp
movsb
add
xchg
mov
outsl
lret
iret
insl
inc
add
decb
bound
rorl
xor
lods
nop
xchg
sahf
call
sub
push
nop
jbe
mov
xor
test
test
xchg
cs
jl
fsubs
sahf
mov
jge
neg
sbb
mov
sub
cmpsb
and
fstps
sbb
rorl
mov
xlat
imul
xchg
loopne
and
lods
jnp
jbe
sbb
incl
loopne
scas
adc
scas
push
xchg
fadd
and
jno
mov
insl
push
int
stos
add
scas
push
fwait
scas
add
repz
push
and
std
insl
cld
pop
stc
popa
mov
andb
mov
mov
dec
insl
sbb
adc
adc
mov
lods
mov
push
mov
cmpsb
into
pop
push
gs
popa
mov
inc
pop
lahf
sbb
push
push
mov
jmp
aaa
adc
fst
aaa
push
fcmove
cld
mov
test
sbb
scas
dec
jo
sbb
jno
lcall
fdivrp
lahf
xchg
fstpt
dec
popf
push
fs
leave
ja
sbb
and
adc
jmp
leave
out
bound
mov
jne
mov
inc
mov
aas
inc
and
push
cmpsb
stos
int
dec
xchg
mov
insb
enter
fistpll
fstps
out
xchg
test
cltd
ja
push
outsb
sub
jl
sbb
cmpsb
xor
mov
mov
popf
xchg
add
cld
adc
orb
insl
inc
add
pushf
jb
clc
mov
test
dec
mov
ret
jo
xchg
sub
iret
pop
inc
dec
adc
mov
ds
dec
es
aam
aad
gs
and
jo
ja
cs
jp
out
imul
or
insb
jbe
sbb
sbb
lcall
je
pop
mov
xchg
outsl
sbb
gs
bound
insb
sbb
ficomps
sti
lock
sbb
jb
or
sbb
call
or
sbb
inc
cmp
pop
fldt
push
pop
pop
roll
in
in
aam
hlt
ret
mov
pushf
fadds
jp
fcom
in
xchg
mov
jmp
sarb
mov
and
testb
inc
pop
jmp
xchg
gs
std
stos
sub
mov
lret
dec
out
mov
cld
push
and
out
lea
das
fwait
mov
hlt
mov
dec
adc
sub
inc
sti
adc
pusha
lahf
adc
and
add
test
adc
shll
data16
sub
mov
mov
outsb
int3
repz
mov
fcomip
or
and
cmpsl
jb
cmpsl
mov
mov
clc
inc
sbb
pop
push
push
add
push
insb
stos
or
sbb
stos
cmp
dec
pop
scas
mov
into
outsl
jne
mov
movsl
pop
xchg
xor
test
jmp
cmpsl
das
je
lds
outsb
ja
mov
out
cmp
xchg
mov
test
cld
sbb
pusha
adc
pop
sbb
sti
insb
jmp
int3
mov
dec
cmc
pop
ss
cmp
sbb
rclb
pusha
mov
xor
jecxz
pop
jnp
dec
dec
xor
cmpsl
xorb
xorb
jnp
xchg
arpl
adc
xchg
mov
or
pop
cmp
fs
ss
dec
stc
imul
mov
mov
iret
clc
imul
pop
dec
sub
sub
inc
push
lds
add
sbb
sbb
sarb
jbe
stc
stos
jbe
lret
imul
jne
es
jae
icebp
add
xor
das
push
pop
cmpsl
dec
repz
push
shll
daa
push
ss
mov
lods
pushf
fcompl
mov
cmp
mov
sti
loop
mov
pop
mov
clc
mov
dec
push
stc
pop
mov
push
lods
lods
fsubr
cmp
stc
xor
notb
cmp
int3
pop
lret
sub
mov
stos
add
xchg
scas
or
imul
jp
sarb
stos
mov
lds
int
push
dec
lods
jne
xchg
sbb
push
mov
adc
jno
mov
in
in
cmp
sti
adc
adc
or
nop
mov
xchg
stos
sbbl
add
inc
icebp
xor
mov
and
sbb
mov
xchg
mov
xorb
or
inc
dec
rcr
int
xlat
rcll
cmp
iret
cmp
in
cmpsl
arpl
mov
jmp
int
arpl
or
lea
mov
popa
inc
jmp
jo
sub
insl
jecxz
dec
scas
out
adc
sbb
sub
sub
scas
aaa
xchg
sbb
fcomps
push
sub
paddb
push
bound
mov
insl
stos
mov
mov
mov
sub
jnp
fiaddl
mov
lods
push
jne
cwtl
sahf
mov
cli
jne
mov
mov
mov
lods
xchg
jmp
enter
imul
int3
xchg
add
and
push
outsb
cmp
daa
pop
cmp
std
sub
sub
imul
add
add
dec
adc
fwait
pushf
push
push
cmp
repnz
mov
outsb
and
shrb
or
gs
pop
xchg
out
or
fimull
push
lret
inc
or
es
addr16
xor
xor
subl
adc
rolb
enter
cwtl
out
leave
push
dec
jp
mov
and
mov
ljmp
mov
enter
cltd
mul
mov
insb
xorb
mov
stos
nop
jmp
jns
inc
adcl
fcomps
mov
xchg
cli
jbe
cmc
leave
fwait
pop
sahf
sub
jmp
inc
outsl
and
pop
popa
es
add
mov
ret
out
sti
xor
xor
scas
xlat
pop
jae
fwait
xlat
lret
push
nop
jne
ret
jns
subb
adc
andl
jmp
cmp
sbb
fsubrs
movsl
add
jp
inc
in
and
insl
sahf
ss
cwtl
xor
gs
xchg
insl
orl
xchg
sub
daa
mov
daa
and
mov
or
ja
jge
inc
add
fwait
dec
xor
mov
jbe
fcoml
jno
movsl
mov
int3
jb
shlb
and
out
inc
dec
sti
fdivp
adc
test
rolb
ljmp
and
cli
rcr
sbb
loope
mov
or
push
lahf
sbb
das
popa
push
sub
cmp
aas
aas
push
push
iret
and
cli
jae
inc
das
mov
adc
pop
test
or
and
add
mov
cmpl
int
jne
call
mov
xchg
sub
mov
mov
dec
push
repz
push
iret
push
fidivrl
fsubl
je
outsb
data16
cmp
jbe
jl
in
xchg
sub
mov
push
jae
popa
pop
insb
inc
ds
jae
or
test
sbb
nop
inc
sahf
push
jne
loop
push
push
addr16
mov
mov
out
dec
incb
push
push
push
dec
popa
add
andb
sbb
nop
mov
in
jno
pop
bound
mov
jle
fnstsw
or
mov
lcall
addl
xchg
pop
setl
fsubl
adc
in
mov
or
lock
in
push
aas
cmp
push
aad
push
imul
imul
xchg
rorb
lret
sbbl
sub
add
fdivs
push
push
insl
cltd
mov
insb
mov
idivb
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
shr
ret
mov
xor
addl
and
shr
ret
jmp
mov
and
loopne
inc
push
call
adc
adc
mov
and
test
mov
adc
outsl
cld
pop
cmp
xchg
jmp
jecxz
or
and
or
imul
inc
fstpl
cmp
or
repz
add
mov
adc
mov
out
mov
rorb
push
fs
dec
imul
add
scas
push
mov
cmp
loop
fmul
aas
xchg
jg
icebp
adc
aam
lahf
ret
lret
mov
jge
pop
mov
call
test
std
sbb
jbe
outsl
mov
jle
orl
ss
jnp
jg
stos
jge
insb
xchg
xor
fdivrl
pop
divl
and
cld
es
mov
xchg
dec
repnz
test
inc
mov
pop
or
sub
sub
adc
lret
mov
ds
mov
outsl
stc
adc
mov
xchg
cli
pop
push
fildl
pop
mov
xchg
out
int
fsubp
outsl
cs
adc
sbb
adc
movsl
cwtl
push
mov
mov
push
cmpl
sub
into
push
ds
in
cmp
jmp
add
daa
movsb
mov
mov
pop
into
xchg
aaa
add
or
jns
push
push
cltd
imul
cmp
jl
fs
adc
ret
xor
xchg
sahf
rcl
xchg
test
lret
mov
and
iret
push
ds
pop
push
jno
repnz
dec
sbb
subb
bound
ss
loop
xchg
aad
insl
mov
adc
or
aam
test
dec
repz
out
popf
pop
pushf
dec
gs
jbe
mov
jge
mov
add
add
ja
dec
cmc
testb
xor
shrl
stos
mov
inc
jl
call
and
into
push
cld
mov
test
popf
insb
jne
mov
sbb
sub
sub
iret
xchg
imul
sbb
jo
adc
ret
imul
push
jno
mov
das
faddl
aam
xor
pop
sarl
out
rorl
icebp
adc
and
out
out
add
mov
mov
or
inc
pop
daa
call
xor
mov
cwtl
fucomi
scas
int3
cltd
jmp
arpl
and
pop
loope
xorb
mov
sahf
mov
imul
cwtl
inc
es
outsl
repz
test
dec
cwtl
cmp
cmpsb
stos
js
decb
and
jge
jge
in
rcrb
inc
xor
lahf
push
int
xchg
jns
scas
xchg
lea
push
xor
pop
cli
int
addr16
cmp
rorb
daa
cmp
iret
rorb
repz
sahf
test
inc
pop
out
xlat
mov
popa
mov
mov
lret
int
cmp
xchg
sub
mov
nop
mov
aas
push
in
add
push
jmp
lret
xchg
xchg
sub
popf
push
mov
push
push
mov
fs
rcl
adc
fistpl
dec
dec
dec
orl
cltd
cli
or
pop
fimuls
sbb
adc
mov
lods
jmp
out
clc
cmpsb
mov
movsl
pusha
sbb
inc
shll
mov
cs
mov
test
sub
xor
out
movsl
mov
ret
in
xchg
add
push
xchg
movsl
test
in
adc
pop
les
xlat
sahf
jecxz
xlat
add
mov
aas
cld
lods
fwait
jns
adc
imul
and
es
pop
cmp
shll
dec
mov
push
clc
cmpl
ficoms
test
iret
shrb
adc
fld
js
add
ret
and
icebp
dec
push
sbb
pop
imul
lret
adc
pop
adc
in
fst
imul
out
std
sbbl
sub
pop
push
inc
push
and
pushf
xchg
adc
call
adc
inc
xor
push
cwtl
push
test
jbe
in
cmpsb
cmpsb
push
xchg
shll
and
mov
jle
int3
cmpsl
mov
addr16
mov
xchg
bound
lret
mov
aaa
pop
stos
cmp
jge
adc
xor
in
jge
out
adc
sbb
orl
dec
and
jle
inc
add
push
fldt
in
xlat
jmp
daa
test
jnp
jmp
fcoml
clc
push
cmp
dec
inc
aas
jmp
psubusb
sbb
jmp
aam
xor
aad
xor
fimuls
mov
scas
pop
test
mov
lock
pop
xchg
jbe
or
mov
and
or
enter
stos
jmp
cmc
adc
mov
fs
sub
scas
jge
cmp
pop
je
add
cltd
mov
insl
xlat
imul
jns
pop
loope
and
jle
xor
dec
lods
xor
jle
psubw
faddl
lds
dec
lcall
dec
push
push
xor
popf
lea
xor
lcall
mov
xchg
mov
mov
pusha
ficompl
add
in
gs
std
mov
jbe
mov
stc
push
mov
fsubrs
shlb
jge
cmp
lret
in
mov
cmp
mov
fwait
or
je
lods
sub
test
pop
ds
inc
fmuls
dec
test
mov
clc
fwait
imul
mov
mov
movl
movsl
adc
repz
lea
test
in
ja
dec
out
ror
adc
or
xlat
out
xchg
inc
pop
mov
mov
xor
or
lcall
in
mov
pop
sti
xchg
fldcw
xchg
pop
push
inc
ds
aad
jge
or
and
lea
mov
testb
mov
loop
movsb
js
clc
hlt
lret
and
sahf
scas
push
es
jne
imul
mov
call
pop
out
es
mov
add
push
jmp
sub
cwtl
sahf
clc
iret
push
mov
or
ljmp
icebp
jmp
fs
gs
and
pop
add
and
icebp
call
and
mov
pop
cld
mov
pmuludq
push
pop
inc
sub
das
inc
sub
clc
stos
pop
aas
jnp
daa
insl
cmp
and
and
push
sti
dec
sbbb
inc
daa
sbb
sbb
inc
adc
jns
sub
xor
xchg
mov
mov
xor
ffreep
decl
clc
pop
gs
in
or
cmp
push
push
stos
in
cs
fs
icebp
fidivl
and
jp
push
lea
fwait
sub
or
pop
and
mov
in
cmpsl
mov
inc
mov
loopne
pop
in
xchg
or
adc
cvtps2pi
mov
adc
pop
out
int3
adc
mov
adc
xchg
push
xor
mov
shrl
sub
jo
lock
test
hlt
rcrb
je
jns
or
inc
stc
and
sbb
cmpl
xchg
push
jae
jno
std
mov
je
push
and
mov
and
push
fsubs
fnstsw
adc
lret
pop
bound
mov
in
pushf
out
out
movsl
stc
jg
mov
mov
adc
sti
out
out
lret
in
and
mov
push
out
jle
cmp
sbb
sbb
or
ss
lcall
mull
jge
lea
ss
xchg
lds
sub
inc
mov
stos
xchg
push
lock
sbb
pop
mov
sbb
loopne
lret
out
out
adc
fs
js
pop
jbe
mov
fiadds
jg
xor
dec
jp
daa
mov
cwtl
cmp
outsl
ja
xchg
clc
cmpsl
fisubrl
outsl
stc
dec
jbe
mov
xor
shr
jecxz
push
jecxz
in
xchg
push
pop
lcall
mov
mov
jnp
xor
or
adc
bound
xor
cmpl
xor
scas
rcr
scas
xor
stos
sbbb
div
and
aas
jae
insl
dec
jp
das
in
pop
aad
lods
sub
decl
inc
push
std
test
or
ljmp
stos
mov
negl
sub
out
fsubs
push
in
adc
test
dec
and
cmp
js
cli
pushf
pop
rorb
aam
test
mov
adc
add
mov
or
sahf
jl
pop
xor
jno
or
loop
xor
enter
scas
pop
movl
pop
add
cmp
mov
add
inc
mov
and
sub
sbb
push
popa
and
repnz
mov
lcall
ja
add
mov
nop
cltd
lret
jnp
movsb
xchg
test
cld
sub
push
add
mov
or
notb
jge
ds
or
jno
iret
mov
sahf
test
cmpsl
mov
fdiv
aaa
jge
and
push
push
cmp
push
negl
or
push
stos
xlat
fidivrl
loopne
repz
cltd
and
shlb
jge
pop
stos
into
faddl
cmp
clc
lret
in
add
push
mov
cli
das
pusha
mov
in
xchg
outsb
aas
insb
pop
lea
mov
mov
or
out
mov
sub
push
mov
inc
lret
lock
out
xchg
aad
aas
les
pusha
jg
pop
fdiv
sub
in
sti
xchg
cmp
jp
arpl
cmp
icebp
loope
pop
xchg
mov
mov
nop
mov
cld
jbe
in
bound
loop
call
icebp
xchg
ja
jmp
mov
push
sarb
out
repnz
jge
pop
cmp
jl
and
xchg
bound
rclb
add
mov
mov
fildl
orl
or
cmpb
xchg
sub
mov
mov
shr
jne
lods
cltd
dec
jno
xchg
mov
sbbl
aas
clc
in
in
and
inc
mov
lret
cmp
in
push
mov
jle
lret
ret
sub
push
aam
mov
mulb
sbb
leave
inc
mov
daa
test
mov
pop
ja
sti
add
out
mov
inc
jae
or
lret
mov
sub
sti
and
sub
xor
ret
push
mov
push
shll
xlat
hlt
data16
out
icebp
lock
data16
or
cmc
out
pop
xchg
aam
jg
xorl
lahf
pusha
xchg
jns
scas
aaa
cmp
dec
adcb
add
in
movsl
filds
inc
sub
mov
pusha
cwtl
test
xor
inc
inc
aam
adc
stos
inc
hlt
push
sbb
inc
int
jbe
xorl
jp
dec
push
aad
dec
imul
mov
cmp
fsubrp
in
lds
push
ds
and
and
insl
jno
cltd
mov
stos
inc
nop
xor
leave
movl
dec
jnp
adc
jle
mov
mov
cmp
in
jb
pop
int3
lods
andl
dec
xchg
xchg
and
adc
xor
mov
es
mov
push
stc
dec
sbb
lea
cmc
cmp
jbe
inc
repnz
imul
pushf
dec
cmp
add
fidivs
inc
sbb
pop
iret
mov
mov
xor
loop
sbbb
sahf
icebp
add
test
cli
pop
int
mov
into
jno
test
jbe
and
xor
leave
fmull
push
movsl
push
or
lret
inc
inc
dec
jp
mov
aaa
lea
into
xchg
add
pop
xor
sub
push
xor
nop
js
or
jmp
jge
xorl
sbb
jg
or
add
ja
lods
lahf
repnz
std
jge
movsb
orl
and
cmpl
lret
and
add
pop
sbb
test
inc
insl
inc
mov
loope
xchg
adc
add
cmp
outsb
pop
fildl
xlat
insb
sbb
popl
loope
loopne
jecxz
add
repz
cli
add
repz
out
out
add
sbb
repnz
sub
addl
fs
cmp
outsl
neg
arpl
stos
sub
aas
scas
outsl
int
jo
sbb
push
lret
std
xor
push
xor
xor
xchg
and
dec
test
xor
mov
aaa
in
adc
push
test
stos
cmpsl
sbb
sbb
jne
std
add
sti
jno
jge
sahf
enter
lret
mov
add
xor
jae
cmp
jbe
push
or
pop
icebp
roll
xchg
sbb
sub
cmp
les
dec
lea
or
xchg
pop
daa
mov
mov
sbb
or
jge
divl
dec
fisubrs
icebp
fidivs
mov
jnp
cmp
ret
pop
outsb
lret
xor
dec
test
std
insl
movsb
call
xchg
arpl
imul
rcrb
pop
rcrb
pop
cltd
nop
lcall
or
imul
cmpsb
imul
mov
sbb
sub
pop
cmp
out
xchg
and
pop
fcmovbe
out
cmpsl
sbb
daa
fs
jae
imul
pop
gs
mov
dec
shrb
inc
fdivrs
pop
cmpsl
add
mov
mov
addr16
and
fsubl
sub
pop
andl
cmp
std
movsl
popl
lds
call
xchg
aam
mov
sub
pop
mov
inc
jae
xor
cmpsl
in
and
jle
inc
mov
incb
dec
outsl
mov
mov
pop
mov
mov
clc
loope
dec
adc
enter
fmuls
popa
inc
out
fs
lds
add
pop
js
subl
outsl
push
cwtl
mov
mov
fstl
fisttpll
stc
add
sub
daa
mov
sbb
xlat
jbe
adc
pop
xor
iret
out
pop
hlt
popf
add
pushl
outsl
cmc
pushl
jge
push
adc
int
mov
das
xor
addr16
inc
xor
mov
jl
xchg
xor
dec
shlb
push
adc
cli
mov
out
push
pop
dec
je
push
lea
and
daa
addr16
rorb
inc
cmp
stos
hlt
jp
lods
imul
inc
mov
push
lahf
int
lods
lea
xchg
mov
jbe
lret
push
sub
jns
scas
cltd
fsts
shlb
inc
call
xchg
mov
adc
jbe
xchg
mov
subl
loope
push
mov
or
mov
mov
aas
add
adc
push
xor
mov
jbe
mov
mov
adc
push
add
icebp
jnp
inc
sbb
and
push
xchg
popf
dec
adc
ja
xchg
ljmp
mov
bound
adc
mov
inc
stos
adc
orb
pushf
sub
arpl
pop
add
cmp
sbb
sub
sub
xchg
mov
iret
ja
mov
mov
adc
jbe
xor
je
outsb
ds
pop
movb
and
hlt
in
ljmp
ret
outsb
cld
cmp
push
add
ret
rcr
cli
stc
sub
jge
adc
outsb
push
xchg
iret
shlb
scas
test
cs
icebp
cwtl
rolb
xchg
mov
aaa
mov
jle
cmpsb
add
cli
cmpsl
mov
imul
jb
mov
dec
xchg
add
popa
enter
sbb
daa
negl
repnz
ret
das
mov
sbb
fcmovnbe
sub
les
pop
shlb
test
frstor
xchg
insl
jmp
aad
or
xor
bound
mov
pop
iret
lds
jae
inc
dec
sahf
xor
pusha
cwtl
enter
adc
push
jne
mov
lcall
xor
pusha
mov
scas
jge
mov
mov
mov
mov
mov
imul
adc
jb
push
ret
scas
lods
push
arpl
repz
jnp
scas
mov
push
and
pop
push
add
mov
outsb
push
mov
add
mov
or
push
movsl
sub
call
xchg
mov
inc
lds
rorl
fcoml
ret
orb
add
inc
stos
sub
pop
test
push
test
or
in
dec
daa
sbb
clc
lods
sub
push
pop
inc
jns
test
sub
sahf
iret
or
or
shld
adc
adc
outsb
mov
fldt
dec
xchg
or
ret
divl
xchg
mov
lret
xchg
cmc
mov
int
rorb
inc
push
and
xchg
in
sub
jmp
enter
scas
leave
jo
mov
mov
push
iret
add
jo
xchg
push
ss
jmp
stos
mov
mov
das
lret
xchg
jne
and
xor
mov
and
std
xchg
pop
rorb
push
loopne
add
adc
push
shlb
int
xchg
in
dec
mov
aas
inc
adc
dec
aam
call
mov
mov
and
lods
pop
rol
jg
jmp
pop
fnstcw
aaa
mov
push
sbb
fwait
sbb
cli
scas
aaa
divb
in
adc
stos
jno
cmp
adc
popf
lahf
sbb
sbb
push
and
and
jp
stos
cld
sbb
fstpl
les
arpl
sub
mov
cli
mov
jle
popf
push
movsl
xchg
inc
mov
xor
adc
sub
test
dec
ss
std
stos
roll
add
adc
inc
mov
aam
hlt
aas
ljmp
bound
sarl
std
push
sbb
cld
sub
xchg
jecxz
dec
insb
in
xchg
inc
jmp
cmp
and
sarb
dec
mov
adc
das
cmp
dec
shll
pop
lods
iret
iret
fsubs
cltd
je
sbb
rcrb
in
shrl
add
sarb
test
aad
and
sub
stc
int3
outsb
xchg
rclb
test
push
rclb
nop
dec
pop
adcb
add
push
insl
mov
xor
xchg
or
dec
adc
mov
dec
fwait
xor
sub
xchg
mov
inc
out
ret
fiadds
push
adc
dec
orl
adc
pushf
lret
stos
or
push
push
pop
lret
adc
popa
clc
mov
push
outsb
sbb
jecxz
ljmp
fisttpll
arpl
cltd
adcb
idivl
enter
test
icebp
ss
ljmp
out
movsl
adc
push
jbe
mov
out
shll
mov
add
imul
xchg
push
fistpll
lahf
je
push
fadds
leave
or
push
inc
jb
xchg
add
pop
adc
jnp
jp
lods
std
cmc
fwait
push
cs
inc
sub
push
pushf
fistpll
mov
ficompl
add
lock
lock
shlb
dec
mov
or
mov
fwait
es
or
dec
push
out
or
ret
xlat
dec
call
xchg
lret
icebp
sti
jns
xchg
jge
clc
jns
ss
lret
daa
fwait
hlt
gs
les
push
push
arpl
das
ja
call
aam
fldenv
mov
sub
fldenv
lods
sub
or
jp
psubusw
insb
jb
enter
sar
popf
xchg
inc
inc
push
dec
cmc
jecxz
xchg
cwtl
nop
add
pop
mov
adc
add
dec
aas
stos
es
pop
jns
xchg
sbb
pmaxsw
and
inc
loop
ret
pushf
aad
rorb
and
clc
popa
inc
adc
int
loope
xchg
adc
daa
ds
mov
mov
hlt
movsl
aaa
pop
movl
es
cmp
mov
dec
cltd
lods
rcll
mov
repz
pop
mov
add
sub
jmp
clc
cli
aam
xlat
int3
js
lret
mov
sub
adc
and
inc
sbb
add
add
data16
repz
in
inc
pop
xorb
aas
pop
cltd
mov
mov
sbb
sbb
cmp
js
add
inc
shrb
push
stos
divl
xor
pop
outsb
sub
out
outsb
adc
lds
inc
test
movsb
repz
add
test
jnp
inc
sti
sarb
pop
in
jmp
scas
rorl
das
cs
inc
mov
lret
ret
and
push
add
cmp
xchg
sub
mov
jecxz
into
dec
aad
je
pop
xor
pop
add
lods
rcrb
int3
ja
dec
pop
pop
loop
in
and
lock
sahf
xlat
mov
xor
adc
add
mov
mov
fldcw
xchg
pushf
rorl
int
clc
sbb
inc
mov
fstps
xor
cmp
out
mov
into
mov
push
jmp
xchg
push
ljmp
outsl
cmp
sbb
inc
lock
adcb
cld
mov
fidivs
or
test
nop
mov
inc
fisubs
loop
jno
fisttpl
jecxz
fsubrs
sbb
jmp
pop
pop
cmpsb
push
outsb
dec
or
insl
sbb
dec
dec
outsl
aas
lea
sbb
icebp
ljmp
lret
jae
cmovp
pop
sub
mov
mov
scas
lret
push
repz
push
fdivrl
mov
rolb
or
xor
lahf
mov
jae
or
ror
or
repz
aaa
mov
in
jnp
stos
jmp
push
pop
sbb
test
sbb
xorl
cmc
pop
cld
in
cmc
insb
mov
repz
pop
adc
icebp
jno
add
rcll
cmp
out
addl
inc
repnz
jnp
test
mov
and
mov
mov
mov
in
out
es
pop
mov
popa
pusha
xchg
dec
enter
lret
aaa
loop
inc
jp
mov
rorl
jl
movb
sub
pop
jae
notl
inc
test
lods
push
mov
divl
ljmp
mov
cld
insl
imul
or
push
cmp
xor
iret
daa
adc
mov
and
mov
xchg
and
sbb
shr
xor
in
jbe
fld
and
mov
mov
adc
div
xchg
mov
stos
push
outsb
sub
or
mov
shlb
test
push
sub
jne
ss
shrl
jge
dec
sbb
enter
inc
test
lea
aas
rcrl
jo
sbb
imul
xchg
ret
shrl
aad
mov
stos
sbb
push
sbb
hlt
stos
fadd
hlt
shrb
xor
test
loop
push
jae
neg
push
pop
jo
add
and
loope
xor
out
dec
sbb
rcll
fdivs
sbb
nop
fcomps
test
adc
jmp
cltd
push
lds
stos
addr16
es
cs
add
arpl
dec
mov
dec
repnz
dec
push
ror
xchg
mov
int
and
test
inc
sbb
in
sub
or
sbb
and
jge
lret
and
adc
std
stos
xchg
out
mov
imul
cmp
repnz
and
jo
cmpsl
push
in
pop
mov
mov
jmp
dec
and
insl
jmp
mov
test
add
sub
inc
mov
push
aam
fstl
xchg
jns
jl
adc
clc
dec
pop
nop
fcomps
cmpsl
adc
fstpl
pushf
lods
cli
addr16
cmp
cmpsl
jg
test
inc
jl
test
cmp
fucomip
cs
and
pop
jns
jne
dec
rcl
sub
faddl
leave
mov
into
stos
mov
pop
xlat
and
and
or
inc
test
icebp
sub
mov
dec
movsb
aam
insl
pop
into
sub
sti
rclb
cs
outsb
inc
cwtl
out
fsts
outsb
sub
sbb
movsb
dec
popf
je
xchg
es
dec
or
xchg
out
pusha
and
mov
dec
addr16
adc
rcrb
pop
fcompl
rol
idivl
hlt
cmpsb
fsubp
lret
shrl
inc
add
repnz
in
jg
test
pop
or
mov
and
mov
dec
loopne
and
mov
inc
repz
cltd
cmp
imul
push
sti
dec
scas
jmp
xchg
jle
lods
jp
sbb
repnz
imul
mov
sub
cmp
imul
push
jp
arpl
loopne
sbb
jecxz
test
shr
lods
push
leave
lods
in
dec
cmp
mov
andl
dec
ficoml
je
and
and
inc
in
mov
mov
adc
fstl
xor
loope
jge
xchg
jg
mov
fwait
or
insb
cmpb
push
mov
or
inc
hlt
nop
mov
cli
sub
sbb
xor
inc
mov
test
addr16
or
subl
jae
cmpb
xchg
add
pop
xor
inc
cld
dec
add
arpl
sub
mov
mov
repnz
gs
out
mov
or
mov
inc
lds
inc
inc
inc
imul
popa
loopne
ljmp
cmp
adc
inc
in
int
pop
pop
jmp
jge
data16
mov
adcl
or
push
ss
pop
pop
jbe
in
sbb
xchg
mov
add
nop
sbb
rclb
adc
aam
lea
xor
pop
lock
add
or
jb
xor
aas
pushf
sub
mov
insl
add
dec
xlat
inc
popf
and
mov
lcall
jns
mov
pop
pop
addr16
shlb
out
hlt
push
and
int3
push
push
sahf
sbb
sti
push
lret
adc
dec
lret
jmp
jno
loop
jbe
add
out
addl
je
rcl
lret
push
int3
inc
mov
gs
outsb
out
jns
inc
and
push
pop
fsubr
xchg
push
sbb
ret
test
mov
sahf
adc
ret
negb
pusha
movsl
mov
jecxz
shrl
call
push
xchg
fcomps
or
sbb
add
jns
jge
mov
insb
pop
pop
push
mov
fists
cmp
mov
sub
pop
rcrl
push
jle
rorb
sbb
rolb
fcoms
loope
loopne
sbb
mov
imul
shrl
repnz
or
bound
adc
ja
shll
sub
sub
mov
addr16
inc
roll
faddl
aam
outsb
fs
sub
aam
pusha
mov
cltd
inc
and
and
push
cmp
lea
jmp
outsl
mov
push
or
mov
add
js
fs
push
rol
cmp
pop
xchg
or
or
loope
xor
push
pop
mov
mov
lret
fmuls
test
xchg
pop
inc
lods
push
cs
adc
rclb
rorb
dec
xchg
adc
inc
inc
inc
xor
into
aad
inc
into
lcall
inc
lock
test
sbb
cmp
dec
xchg
sahf
imul
and
ljmp
inc
in
fildll
add
jmp
out
add
add
dec
dec
test
sub
stc
arpl
insl
sahf
pop
cmp
adc
test
fmulp
xor
mov
xlat
ljmp
test
mov
in
inc
loope
mov
test
mov
das
sti
mov
lea
adc
or
movsb
and
dec
cmc
inc
ffree
fcoms
outsl
or
daa
fcoml
les
pushf
xchg
dec
je
mov
xchg
test
mov
out
shll
adc
xlat
fdiv
jbe
adc
mov
cs
cmp
and
int
mov
lea
mov
and
cmp
test
int3
out
inc
roll
dec
ja,pn
cmpsb
int3
push
add
iret
mov
enter
sti
cs
stos
lea
int
fidivrs
jl
mov
and
mov
push
mov
mov
cmp
mov
je
iret
fldenv
loope
inc
insb
fidivrl
aad
clc
daa
adc
popf
adc
call
dec
fprem
mov
cld
testb
dec
into
lods
ss
es
xchg
icebp
jnp
out
loope
shrl
test
test
dec
push
fstp
ljmp
mov
jo
cmc
mov
mov
data16
pop
and
dec
add
xchg
sti
pop
cmp
sbb
imul
adc
adc
push
lods
imulb
lock
cmp
fwait
dec
mov
jno
loopne
enter
aad
pop
aad
push
shlb
sub
mov
arpl
sbbl
cmp
fists
or
add
cmpb
jbe
jge
push
mov
inc
mov
or
add
add
jnp
arpl
mov
sub
scas
arpl
sub
lcall
inc
cld
shrl
clc
cwtl
pop
inc
pop
test
jno
inc
test
jb
adc
js
adc
add
shlb
ret
push
mov
sub
sbb
movl
mov
orl
mov
movl
cmpl
mov
movl
not
not
jmp
mov
ja
push
push
call
or
mov
xor
xor
add
or
sbb
add
adc
movzwl
xor
dec
mov
movl
addl
movl
cmpl
not
movl
jmp
mov
mov
jne
pushl
call
inc
movzbl
xor
mov
or
neg
and
adc
xor
movl
add
movl
movl
cmpl
mov
mov
jmp
mov
movl
jb
push
push
push
call
add
movl
xor
xor
movl
mov
mov
cmpl
mov
movl
movl
jmp
mov
jg
push
call
subl
or
add
sub
and
xor
add
sub
mov
andl
mov
sub
mov
push
mov
sbb
mov
cmpl
movl
movl
mov
jmp
mov
je
pushl
push
push
push
call
orl
dec
adc
xor
xorl
xor
or
mov
andl
push
addl
push
notl
push
push
incl
call
mov
mov
xor
and
not
xor
and
xor
or
mov
sub
xor
and
cmpl
mov
movl
jmp
movl
jg
pushl
push
pushl
push
pushl
pushl
pushl
call
add
xor
add
and
add
mov
and
add
mov
jmp
movsl
add
mov
stos
mov
jo
adc
adc
lret
das
and
dec
cmp
inc
stos
stos
push
in
dec
pop
test
imul
call
sbb
dec
loope
insb
arpl
scas
pminub
fstps
gs
ljmp
scas
mov
clc
dec
aad
shr
test
sub
in
scas
add
sahf
push
xor
xchg
test
pusha
leave
add
aaa
jmp
stc
icebp
add
sti
int
push
imul
pop
xchg
je
sbb
mov
mov
mov
jg
in
sahf
test
in
inc
and
mov
cmp
lock
or
xorl
push
pop
cmp
ja
enter
sbb
push
xchg
sti
outsl
push
dec
pop
shll
adc
stos
cwtl
cmp
nop
enter
movsl
jns
sub
lret
sub
jae
stos
lret
cmp
testb
addr16
inc
sub
test
fstpl
or
sbb
mov
mov
dec
test
jecxz
and
rol
adc
sub
lock
mov
xchg
ds
xchg
jge
push
das
or
push
cltd
pop
inc
loop
or
cs
or
imul
outsb
shrb
cmp
add
push
aad
inc
js
add
xchg
inc
and
daa
ja
das
rcll
push
repnz
mov
mov
pushf
es
inc
std
sub
pop
xor
push
mov
sahf
inc
push
shrb
ja
dec
test
and
mov
xchg
pop
jno
sub
sub
pop
jle
cmp
popf
ret
sbb
out
mov
xchg
cmc
nop
dec
cmp
inc
mulb
data16
cs
xchg
inc
enter
mov
inc
repz
mov
xor
loop
sub
scas
sub
mov
jmp
out
loopne
sbb
dec
sahf
mov
lcall
fs
int
je
sub
fdivrl
cmp
xor
ljmp
sub
push
inc
jge
dec
push
xchg
inc
xchg
les
in
js
mov
jb
mov
adc
imul
sbb
ljmp
mov
push
sub
subb
adc
push
jge
fmuls
daa
movsb
sub
adc
leave
pop
pop
arpl
dec
pusha
in
out
bound
lods
sub
icebp
insl
mov
dec
lds
mov
mov
lock
int
es
imul
adc
and
lea
sub
pop
ud2
cmp
and
mov
jae
repz
push
xor
cli
and
scas
ret
push
repz
mov
inc
or
cmc
jmp
cld
add
cmpsl
movsb
push
iret
stos
sbb
cmp
fidivs
popa
ds
loop
lock
loop
inc
aad
out
cmp
dec
pop
push
inc
xchg
lahf
ljmp
call
dec
xor
sbb
imul
mov
jp
cmp
sbb
inc
inc
lcall
sub
adc
imul
lahf
outsl
push
sub
sti
pop
decl
imulb
jge
js
pop
cmp
neg
es
fiaddl
jae
push
sbb
aam
stos
pop
int
pushf
sub
mov
pop
mov
std
fsubl
pop
push
adc
jl
pcmpeqd
cmpb
pop
mov
icebp
jle
mov
sbb
adc
scas
lret
out
or
mov
mov
push
fsubs
dec
push
jbe
sbb
cmp
pop
xor
sbb
and
mov
mov
push
jnp
push
and
mov
cmp
in
aas
les
subb
mov
sub
push
mov
jae
inc
dec
outsb
gs
push
dec
and
movsl
and
mov
mov
ffree
lods
scas
jae
lret
cmp
cmp
sbb
les
jbe
or
sub
sahf
ja
orb
in
lods
test
pop
cs
test
ljmp
mov
jmp
push
mov
movsl
inc
sub
pushf
pushl
ja
leave
jecxz
xor
xchg
pop
sbb
movsl
test
cwtl
jl
and
add
outsb
test
jmp
jo
xor
jo
lcall
jle
ss
add
arpl
sub
mov
mov
notb
insb
adc
dec
stos
cmpsb
adc
test
inc
sub
les
or
bound
xchg
xchg
stc
fsubr
cltd
lock
icebp
push
mov
jg
fiaddl
sbb
xorl
xchg
out
clc
push
push
jae
out
cmc
repz
ja
adc
subb
in
xor
push
lahf
arpl
mov
cli
push
mov
xchg
stc
cmpsl
loop
loope
andb
inc
sbb
and
cmp
inc
sarb
ret
sahf
xor
mov
inc
push
ret
or
outsl
inc
loopne
mov
in
in
sub
mov
inc
add
pop
cltd
xor
mov
in
aad
adc
lods
sbb
fcmovb
into
repz
test
and
jg
cmp
sbb
rcll
scas
stc
ret
shll
xchg
fldenv
outsl
mov
push
cmpl
sbb
cmp
movsb
std
and
inc
or
enter
xor
in
mov
out
and
lods
mov
dec
push
pop
and
xlat
mov
aas
and
cwtl
pop
add
mov
inc
xor
xchg
dec
or
out
mov
cmpb
xchg
xlat
pop
add
mov
sbb
lock
dec
popf
stc
xchg
mov
cmp
xor
scas
ljmp
in
pop
and
mov
clc
push
sbb
fldt
inc
scas
std
iret
popa
lea
scas
pop
jg
or
insb
lock
jp
jo
aas
add
mov
mov
test
sub
xor
inc
leave
fiaddl
and
inc
jge
bnd
xchg
movsb
jno
sub
pop
xor
popf
popf
mov
ljmp
sub
scas
cmp
or
push
or
jnp
dec
push
into
adc
int
mov
jecxz
ja
xchg
es
or
mov
stos
stc
sbb
bound
sahf
sbb
sbb
cli
inc
jmp
inc
sti
call
pop
sub
arpl
in
daa
enter
xor
sub
lods
xor
mov
sbb
mov
outsb
xor
xor
ss
mov
and
or
mov
call
clc
nop
in
incl
jo
arpl
sub
and
jmp
mov
loop
adc
fmuls
rcll
int
clc
sub
adc
leave
jnp
jl
scas
insb
push
sub
test
sub
test
lea
jno
mov
mov
xor
cmp
ret
sahf
lock
xchg
sbb
mov
mov
sub
jno
lock
dec
dec
push
std
into
dec
dec
dec
outsb
mov
adcl
mov
jge
adc
jbe
push
jno
sub
imul
pushf
arpl
fdivl
fistps
add
fcmovnbe
pop
outsl
mov
out
pusha
lds
jg
add
lret
mov
cltd
adc
xor
dec
fcmovb
add
outsl
sbb
hlt
mov
ljmp
mov
nop
xor
xor
pop
jle
out
mov
and
lods
xorb
jmp
adc
into
add
jp
mov
push
mov
ret
or
shll
pushf
pop
xchg
dec
jecxz
cli
shl
mov
push
push
xchg
cmpsb
or
je
repnz
mov
xor
es
lret
test
test
jno
mov
movsl
jle
inc
jne
enter
adc
jle
das
repz
stos
enter
stos
pop
into
repnz
js
and
and
imul
inc
mov
fstpl
sub
loope
cmp
sbb
cmp
idivl
pop
popl
add
lods
out
jno
xchg
std
gs
cmpsl
frstor
or
insb
movsb
jg
roll
subb
popf
loope
lock
pop
stos
jp
jno
push
mov
mov
nop
loop
cmpsb
mulb
repz
addr16
mov
cmpsb
shrb
xchg
xchg
leave
push
mov
ficoml
mov
ss
lahf
mov
push
jbe
js
sub
jbe
pop
and
mov
mov
add
jne
cli
lahf
xor
negl
cmpsb
push
sub
adc
push
mov
push
sub
cmp
push
lods
inc
sub
nop
add
inc
mov
push
ret
or
je
loopne
ret
rol
pop
sbb
sbb
fwait
cmc
das
cmpsl
mov
sub
icebp
mov
mov
fcom
in
les
adc
sti
xchg
inc
cmp
cmpb
jle
aas
outsl
xchg
cli
je
inc
push
cmpl
subl
andb
fldl
ja
movsl
sti
jno
push
ficomps
push
mov
in
bound
mov
mov
push
lea
rol
cli
insl
int
jg
mov
inc
sub
sub
cmp
adc
je
stos
lcall
add
mov
jae
xor
stos
lods
dec
test
stc
lock
leave
fmull
xchg
aam
lahf
stos
cmpsl
lahf
push
repz
xchg
cmpsb
cmpsl
mov
sti
inc
popa
adc
rcrl
xor
outsl
out
mov
andb
xor
jmp
repnz
inc
lea
inc
jg
clc
xlat
loopne
jmp
pop
leave
xor
adc
mov
iret
push
mov
mov
iret
and
rcr
xor
out
xchg
add
push
mov
pop
cmp
cmp
sbb
jno
mov
jnp
sub
adc
shll
lock
lcall
stos
sub
stos
scas
arpl
sbb
loopne
push
fidivs
fdivl
popa
jns
mov
jmp
pop
pop
pop
testl
xchg
out
mov
jbe
jno
loopne
dec
mov
xchg
lcall
mov
adc
push
or
push
add
lahf
pop
push
pop
xchg
ljmp
fcoml
jne
dec
pop
repz
test
sub
int
add
and
rcrl
in
inc
xor
ret
inc
xor
add
push
mov
sbb
es
add
mov
add
or
icebp
icebp
in
jae
jmp
jg
inc
and
mov
rorl
push
repnz
jg
pop
and
push
or
enter
push
ss
sbb
xorl
divl
add
xor
add
pushf
xor
stos
inc
leave
dec
dec
ss
xchg
and
xchg
incb
ret
adc
lock
out
ret
mov
fstps
int
addr16
in
cmp
aas
mov
adc
stos
decb
inc
dec
pushf
dec
xchg
std
push
push
pop
repz
xchg
inc
add
mov
in
mov
xchg
shlb
js
inc
popa
int3
inc
mov
ja
rcll
jmp
and
lock
mov
fisttpl
add
jl
xchg
sbb
adc
outsb
sti
xchg
push
loop
in
idivl
jge
mov
xchg
xchg
into
iret
cmp
cmp
push
mov
dec
pop
mov
nop
test
lea
jne
jae
sbb
mov
push
scas
pop
xchg
pop
push
mov
mov
xchg
popa
stos
sbb
inc
cmp
gs
xor
ret
les
pop
insb
lds
testb
lock
xchg
xchg
scas
pop
push
out
out
es
in
mov
cld
jmp
mov
sbb
pop
mov
xor
out
insb
loop
loopne
aaa
mov
mov
dec
dec
push
push
test
decl
sbb
inc
imul
sub
hlt
dec
test
test
xor
mov
and
gs
inc
mov
or
inc
mov
jb
inc
xchg
mov
xchg
shrb
loop
gs
ret
mov
rcrb
xchg
adc
ficoml
icebp
add
and
mov
xchg
push
fwait
stc
fs
ret
add
sbb
push
mov
mov
lcall
loope
fsts
loope,pn
mov
or
test
sti
aad
pushf
ljmp
pop
lcall
cld
imul
mov
sub
sub
icebp
sbb
icebp
xor
sbb
sbb
fists
stos
cmp
mov
pop
arpl
jb
jmp
movsb
mov
rorl
mov
fstpl
mov
cmp
incl
add
icebp
subl
andb
push
xor
es
push
sbb
jae
cmp
popf
scas
jmp
and
fiadds
lret
lods
test
pop
test
and
mulb
dec
shr
jo
fucom
push
fnstcw
xor
rolb
inc
aam
mov
inc
aad
jbe
sub
or
sbb
jmp
push
add
sub
mov
mov
sti
aaa
jmp
mov
inc
lock
in
xlat
sbb
jl
lcall
loop
stc
and
mov
outsb
pop
and
aas
push
xchg
rorl
and
aaa
cmp
lds
push
testb
dec
imul
sti
insb
addr16
neg
xchg
push
mov
or
in
pop
sbb
gs
sub
int3
inc
add
push
sbb
or
push
or
fbld
pop
push
clc
cmp
out
sbb
sub
fnstcw
sbb
xchg
dec
adc
insl
pop
shrl
dec
stc
xchg
pop
loop
push
jecxz
and
mov
cli
mov
sbb
push
cld
sahf
inc
jnp
loopne
inc
jecxz
cmp
mov
in
sub
negb
dec
add
movsl
dec
xlat
in
mov
cltd
xchg
mov
xor
xor
inc
std
and
mov
bound
scas
ret
jne
out
xchg
sub
jne
adc
stc
mov
add
test
lahf
sub
lahf
sub
add
jge
mov
pop
insb
xchg
lds
std
das
cwtl
incb
add
sbb
mov
js
popf
mov
pop
xor
xor
xchg
addl
in
scas
sbb
aas
mov
xchg
pushf
jns
pop
push
imul
fmuls
sarl
mov
mov
inc
movsl
jb
push
xlat
sub
in
ja
je
push
in
and
adc
adc
not
lods
sbb
nop
and
in
lods
cwtl
lods
es
jnp
outsl
lea
inc
sub
sub
jb
mov
cmc
or
jp
sub
stos
lods
xor
xor
add
lock
sbb
scas
popf
aaa
je
xchg
cmpsl
jno
adc
push
aad
ret
das
les
xchg
sarl
add
into
inc
sub
std
adc
cltd
in
fiadds
test
pop
inc
jge
aam
in
stc
movsb
cmp
stos
lods
mov
ss
add
mov
test
push
lock
sarb
xor
es
inc
nop
sbb
mov
and
or
mov
ret
mov
sarl
roll
jg
inc
in
cs
push
stc
sbb
fisttpl
cmp
mov
ja
lahf
lock
xchg
sub
call
pop
cmp
fistl
push
add
adcl
push
mov
add
ret
pop
cld
or
pushf
popa
pop
loopne
lcall
and
pextrw
cmp
pop
es
push
mov
mov
rclb
adc
inc
sbb
rorb
mov
mov
cs
mov
mov
sub
jbe
out
inc
movsl
add
int
xchg
pop
enter
dec
fistl
push
out
pop
xor
jp
sub
pop
test
mov
mov
fistl
pusha
hlt
xor
xchg
mov
testl
push
cmp
adc
ljmp
pop
ja
add
xchg
int3
push
shrb
push
daa
mov
mov
fmull
cmp
jnp
lcall
lret
sbb
adc
hlt
cli
insl
inc
shrl
xor
push
cmpsl
jmp
loopne
add
in
jp
in
leave
hlt
imulb
adc
fmuls
daa
jge
adc
and
cmp
cmpsb
mov
xorl
bound
rorb
cmp
addr16
mov
and
je
jecxz
rol
mov
xchg
sbb
adc
in
inc
sub
insb
push
ret
jg
in
dec
mov
push
js
std
lcall
xchg
mov
cmp
shlb
cmp
lods
sarl
sti
sbb
jle
enter
fidivl
clc
sti
dec
mov
and
leave
xor
or
push
call
ds
xor
cmp
sahf
push
pop
mov
cmp
add
mov
xor
into
cld
addl
pop
data16
enter
ljmp
push
xor
jmp
clc
push
nop
mov
nop
dec
jmp
inc
in
mov
sub
push
sub
sub
stos
gs
add
xor
adcl
push
cmp
xor
es
xchg
jns
jo
push
jbe
mov
imul
imul
fmull
mov
faddl
lret
xchg
lahf
mov
lods
push
test
popf
ja
sbb
sub
mov
jp
repz
cmp
sub
inc
dec
mov
repz
inc
pop
popa
inc
add
cmp
je
jl
adc
or
push
jl
inc
or
mov
mov
movsl
push
add
js
je
mov
mov
ds
pop
push
fbld
loope
repnz
negl
iret
sbb
popf
pop
mov
ljmp
xchg
call
pop
jnp
mov
add
cmp
jge
in
fwait
pcmpeqb
imul
shlb
mov
push
repnz
mov
std
sub
in
sahf
lds
fisubl
loop
add
jbe
mov
xchg
jle
insl
mov
fmuls
jg
dec
pop
mov
mov
xor
cmp
rcrl
addb
push
pop
stc
jg
pop
add
sub
addl
mov
fbld
cmp
pop
insb
imul
push
out
shlb
mov
out
sbb
ret
pop
adc
sarl
cmp
pop
pop
orl
pop
shlb
mov
xchg
cmc
xchg
pop
sub
into
loop
push
std
iret
rcll
rcrl
push
push
pusha
fdivrs
mov
mov
dec
enter
loopne
sbb
pop
dec
jl
outsb
xchg
adc
aas
popa
push
mov
inc
mov
push
pop
adc
enter
mov
test
add
mov
repz
enter
pop
push
sbb
test
sbb
lret
ss
mov
std
out
sbb
aas
xchg
pop
cmp
movsl
xchg
mov
xor
fdivrs
nop
dec
mov
add
loop
notb
rolb
das
cwtl
test
and
bound
xchg
cmpsl
cmc
test
ja
fcompl
ret
sbb
gs
cwtl
cmp
xchg
or
xchg
cmpsb
shl
mov
jne
leave
andb
cwtl
lcall
dec
cmp
imulb
jns
repnz
mov
and
int
pushf
imulb
sbb
jecxz
int
or
shll
pop
icebp
push
and
iret
xchg
enter
sub
xor
push
mov
xor
ss
xor
leave
jp
adc
dec
dec
and
dec
loop
mov
lcall
loop
mov
sbbl
sbb
fldl
push
das
push
lcall
jnp
leave
inc
ss
jle
imul
les
or
xchg
iret
and
push
cmovnp
push
out
dec
int3
cwtl
test
scas
lret
mov
xlat
test
rcr
fs
das
cmp
sbb
nop
inc
ret
pop
lds
push
mov
adc
call
sbb
xchg
pop
lea
mov
test
andl
push
lret
sbb
pop
call
jns,pn
fisubs
ljmp
sbb
pop
mov
inc
pop
test
jne
and
inc
xchg
popf
cld
bswap
cmpsl
xchg
push
sbb
shll
ljmp
in
jne
jns
pop
cmp
xor
sbb
and
cs
mov
cmp
adc
int
mov
stos
clc
mov
and
cmp
add
cli
cmp
sub
xchg
shr
ret
sbb
shl
sbb
icebp
sbb
jmp
dec
sbb
add
outsl
mov
push
es
pop
lock
ja
addr16
enter
pushf
mov
stos
sbb
add
jecxz
insb
add
dec
jmp
cs
test
cmp
mov
and
xlat
or
and
scas
sub
roll
push
xchg
xchg
xchg
jp
sbb
fnsave
rorl
sbb
xor
mov
in
in
sub
subb
mov
mov
xchg
mov
stos
pop
mov
cltd
stos
stos
gs
outsb
pusha
into
cwtl
mov
loopne
push
fdiv
test
js
aaa
mov
mov
cmp
and
xor
cmp
jns
pop
enter
aas
cmp
loop
mov
cmpsl
push
xchg
out
pop
xchg
push
push
mov
mov
xchg
jmp
adc
jg
xor
or
jg
stc
inc
notb
dec
sbb
add
dec
dec
bound
inc
outsl
mov
push
inc
cmp
xlat
lcall
lods
jecxz
push
outsb
ret
lcall
aas
mov
nop
xchg
in
xchg
lret
test
pop
and
push
and
dec
xchg
pop
call
nop
push
push
sub
imul
push
jp
push
mov
cltd
pop
aad
sbb
adc
jp
mov
nop
jmp
dec
mov
pop
cmp
test
inc
mov
outsb
dec
loop
mov
dec
mov
scas
and
mov
aaa
aam
popl
jae
jecxz
mov
cmp
and
stos
inc
pop
or
mov
loop
mov
test
push
repnz
pushf
xor
repz
pop
or
sub
imul
inc
fists
mov
out
cltd
sbb
sub
mov
test
and
cs
sbb
xchg
cmc
add
mov
cmp
mov
sbb
inc
stc
mov
adc
cmpsb
dec
clc
cmc
shl
in
cld
cmpsb
shrb
out
cli
iret
lcall
jmp
sub
das
cli
and
inc
std
sub
push
dec
ffree
out
mov
push
inc
aaa
aad
icebp
xchg
or
aas
mov
leave
outsb
xor
mov
jl
aas
jmp
mov
scas
dec
movb
or
push
add
jle
jo
in
adc
dec
outsl
scas
decl
sub
aas
lahf
lret
or
stc
jmp
shlb
call
outsl
and
add
lahf
aaa
pushf
jnp
jle
pop
mov
movsl
cltd
or
mov
mov
add
sub
es
add
lret
mov
adc
lock
shlb
cmp
jnp
xchg
lret
imul
fstps
add
scas
jecxz
push
in
inc
xor
xor
adc
mov
icebp
or
pop
stos
jns
insl
cmp
cmpsl
fwait
mov
pop
push
push
sub
js
jl
jl
outsb
xchg
iret
incb
ds
cmp
ja
xchg
je
lret
sbb
fldenv
pop
or
jne
and
xor
andb
and
add
pop
mov
daa
adc
iret
push
xchg
mov
xor
hlt
imul
scas
push
shll
mov
outsb
sbb
data16
in
or
or
ds
sub
push
mov
jg
xorb
xchg
push
scas
xchg
lret
jae
push
mov
scas
sti
jge
push
aaa
outsl
mov
push
sete
cld
jo
or
cmp
sbb
sbb
lea
sub
dec
popa
cli
cmp
int
pop
sub
push
or
dec
rclb
inc
and
sbb
pop
adc
jp
add
insb
push
jmp
int3
pop
out
jo
ds
sub
push
push
insb
je
arpl
popf
jae
xchg
out
scas
xor
mov
shl
mov
lahf
mov
inc
mov
sbb
movl
mov
stc
sti
pop
sti
inc
and
insl
mov
movsl
xor
or
sub
ucomiss
aas
nop
xchg
lret
ja
js
pop
mov
fwait
rclb
pop
into
push
mov
xor
loope
stos
ficomps
lret
aas
mov
lods
in
shl
out
jns
testb
adc
mov
ret
dec
mov
aad
xchg
icebp
push
lret
in
ret
lret
in
cli
sarb
mov
pop
es
inc
fiadds
dec
aaa
jb
out
inc
adc
stos
xlat
in
insb
test
and
sarl
sbb
scas
stos
lea
pop
ds
lea
mov
sbb
pop
shlb
stc
sbb
and
xchg
inc
aad
rcll
add
incb
cmpsl
jmp
fdivrs
jne
xchg
push
lahf
enter
mov
fs
push
xor
clc
out
mov
loop
jo
mov
push
pop
mov
cs
push
repz
cs
sbb
sahf
imul
leave
sbb
addr16
aam
sub
jecxz
jo
lds
mov
push
jle
subl
inc
and
push
mov
test
and
and
or
adc
pop
dec
cmp
out
leave
xchg
nop
inc
push
jl
mov
test
push
inc
push
pop
ss
cmp
cmc
jno
sub
add
push
imul
dec
rol
sahf
inc
addb
rorl
int
mov
mov
push
sub
fcom
mov
sbb
divb
push
push
mov
std
xchg
fiadds
inc
pop
fnstcw
les
rol
push
aaa
sbb
nop
aaa
jge
pcmpeqb
scas
xlat
xchg
inc
mov
push
mov
call
and
clc
popf
xchg
inc
mov
dec
cltd
je
or
add
popf
insl
fwait
jbe
mov
jns
mov
insb
and
cmc
negb
pop
xor
push
mov
dec
aad
xchg
daa
stc
jnp
cmp
jbe
push
xor
test
xchg
daa
bound
inc
xchg
push
pop
pop
mov
mov
es
roll
or
adc
sbb
xchg
mov
jg
mov
mov
fs
dec
sub
and
inc
mov
dec
pop
repz
push
sub
andb
hlt
inc
out
adc
cmp
roll
out
cmp
push
dec
jp
lcall
adc
mov
xlat
int3
sbb
outsb
fsts
leave
outsl
and
sbb
dec
addr16
push
mov
xor
jle
pextrw
inc
daa
jbe
ret
dec
inc
or
lahf
mov
or
lret
sbb
test
mov
pop
adc
popf
es
int3
add
push
push
int
fwait
jge
mov
ret
popa
lds
cld
daa
or
cmpsl
xchg
nop
cmp
fyl2x
sub
or
jae
push
ljmp
mov
xor
or
push
jl
push
lods
cmp
mov
jb
push
flds
aam
out
fmuls
cmp
mov
adc
inc
cli
pusha
mov
test
jns
pop
fbstp
fwait
nop
mov
push
sar
or
mov
mov
inc
dec
out
inc
adc
or
mov
jecxz
jge
xor
ss
xchg
out
imull
icebp
push
jne
inc
mov
xchg
inc
ss
gs
mov
iret
add
fnstcw
addr16
push
jp
inc
loopne
push
add
cmpl
movl
mov
mov
jmp
mov
je
push
push
pushl
pushl
pushl
call
mov
mov
sub
xor
xor
xor
sub
andl
add
mov
adc
mov
movl
inc
movl
or
movl
cmpl
mov
movl
mov
jmp
movl
mov
jl
pushl
pushl
push
push
call
xor
movzbl
adc
mov
neg
adcl
sub
cmpl
mov
movl
movzwl
jmp
mov
jl
call
andl
adc
or
neg
sub
add
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
add
insb
shrb
sbb
jbe
push
push
ja
stos
loopne
adc
adc
xorb
loopne
jmp
xor
enter
mov
fs
xlat
inc
lahf
xchg
jo
addr16
ds
sbb
sbb
lds
sbb
imulb
lret
call
mov
in
sub
or
sub
fisubs
outsb
pop
icebp
std
push
repnz
inc
lret
adc
xchg
jo
and
mov
jl
cs
sub
in
lock
inc
lea
mov
jae
call
mov
enter
clc
gs
adc
push
jo,pt
or
fistps
jae
imull
paddusb
ffreep
push
shl
fistps
and
and
jecxz
xchg
xchg
insl
mov
cs
rcll
mov
mov
xor
mov
aas
mov
stc
mov
sub
mov
je
mov
dec
sub
inc
sub
mov
pop
push
adc
int
adc
jo
fwait
cld
lret
cmp
shrb
sarb
dec
into
out
icebp
les
mov
sarb
fstp
dec
stos
sub
add
jne
dec
inc
dec
test
dec
out
xchg
dec
and
stc
cmpsl
pop
dec
push
rclb
jg
adc
outsb
out
cmp
test
xlat
int
shr
add
lret
add
sub
sbb
jne
mov
xor
dec
cmp
hlt
jo
push
mov
js
mov
mov
stos
test
aaa
movsb
add
xor
out
dec
cmc
pop
nop
cmp
movsl
mov
jp
cmp
fstpl
and
sti
mov
sarb
add
and
xchg
xor
sbb
test
je
push
jp
cmp
nop
inc
xlat
mulb
cwtl
sarl
shrl
mov
xchg
in
cmc
lods
loope
aaa
lock
imulb
nop
sbb
nop
mov
sti
sub
sbb
loopne
repz
cmpsb
rcll
fisubrl
mov
ret
mov
pop
nop
and
rcll
enter
dec
mov
clc
iret
push
cmp
lods
loopne
sub
add
cmpps
mov
xchg
cli
add
jge
push
pop
jno
sbb
hlt
adc
stos
ljmp
mov
or
add
push
mov
add
dec
mov
aam
cwtl
inc
push
xchg
dec
xor
rolb
nop
repnz
cld
pop
sub
adc
sahf
divl
rcll
outsl
loop
dec
std
jge
test
lods
cmp
sbb
push
lock
lock
cltd
lods
jbe
sub
cltd
nop
xlat
ret
sbb
mov
push
mov
xchg
xlat
data16
fisubrl
add
cli
adc
mov
outsb
iret
xor
popa
iret
jb
nop
outsl
aas
cmpb
push
cwtl
xchg
pop
es
xchg
push
ss
cmp
loop
aaa
lcall
scas
arpl
aas
or
push
jecxz
mov
jne
adc
or
inc
adc
pop
div
push
inc
jnp
jnp
pop
in
sbb
lods
sub
lods
jle
in
inc
popa
out
mov
mov
fsubr
jg
int3
or
or
rcll
jl
xor
and
enter
push
sbb
or
scas
outsl
pop
popa
ret
stos
jne
into
inc
lods
mov
push
xchg
push
maxps
pop
jns
and
std
notb
into
xchg
xchg
data16
fs
xchg
inc
inc
test
mov
imul
repz
pop
sbb
cld
push
jle
je
lds
pop
lcall
lret
imul
cmpsl
rolb
mov
dec
or
sub
or
inc
scas
mov
jne
fstpl
add
lcall
lock
data16
popa
sub
add
cmp
lea
ret
pop
mov
sahf
inc
inc
inc
lahf
ss
mov
movsl
cmp
pop
cli
mov
das
lock
in
aaa
fisubs
and
pusha
cltd
jno
mov
sub
jle
mov
data16
jno
shlb
ss
mov
insb
pop
jnp
dec
lahf
and
int
cmp
mov
stos
repz
sbb
and
add
lock
adc
cmp
stc
stos
das
lods
push
arpl
test
sbb
je
xchg
inc
mov
mov
in
mov
sub
push
test
mov
mov
dec
into
repz
fistl
aad
popa
pop
dec
push
inc
ljmp
dec
cli
pushf
push
gs
inc
addl
cmp
mov
leave
jno
xchg
icebp
dec
mov
stos
or
mov
rolb
xchg
insl
stos
pop
cmp
dec
test
jg
jb
adc
sbb
in
das
imul
adc
cmpsb
add
pusha
mov
and
jno
lea
and
popf
inc
dec
mov
sub
push
pop
xchg
js
fistpl
arpl
call
int
add
aas
jne
add
std
stos
dec
push
pop
inc
jmp
pusha
add
mov
xlat
dec
mulb
mov
cmp
adc
loop
pop
gs
xor
or
sub
add
inc
jg
loop
in
and
enter
dec
jecxz
push
imul
mov
lea
and
push
jnp
mov
jb
adc
xor
call
mov
ficoml
sbb
xchg
ljmp
inc
mov
jo
outsl
add
xchg
imul
dec
je
imul
mov
lcall
jp
aaa
cmp
lcall
movsl
addr16
mov
jbe
clc
cmp
and
and
popf
sti
dec
mov
cmpb
mov
mov
outsl
outsl
xchg
xchg
push
cmp
rorl
and
stc
and
movsl
bound
or
jnp
scas
jnp
or
jg
aas
outsb
adc
push
xor
ret
xchg
jb
cmp
ds
jge
dec
cmp
and
pop
rorl
lcall
aaa
lea
fistps
jl
pop
mov
mov
sbb
cs
jmp
dec
pop
movsl
int
inc
pop
loop
adc
xor
lcall
cmp
fbld
adc
shll
gs
pop
aas
push
lods
lock
mov
addr16
or
add
adc
je
pusha
xchg
xor
movsl
rcrb
xor
lcall
ret
or
aaa
stc
movd
pop
inc
xor
mov
sbb
or
loop
pop
fldt
mov
xchg
push
add
cwtl
add
push
xchg
dec
push
js
loop
dec
add
mov
and
movsl
cs
lcall
push
frstor
dec
jne
ss
push
adc
out
nop
mov
add
aas
mov
lret
in
or
pushf
jmp
jbe
cltd
ljmp
jg
inc
scas
cltd
into
rcrl
cmp
das
pop
fists
push
jns
jnp
pop
sbb
mov
aam
loop,pn
mov
pop
jecxz
cltd
aaa
dec
jb
jae
push
loopne
sbb
xchg
inc
lahf
cld
pavgw
push
push
inc
movsb
sbb
sahf
std
loop
xchg
push
dec
push
mov
and
sub
fdivrl
orb
gs
call
rcl
mov
jbe
xor
fisttpll
les
icebp
pop
push
je
repz
outsb
xor
dec
jb
inc
push
pop
imul
xchg
repnz
mov
js
mov
push
movsl
lock
stc
sub
shrl
das
nop
nop
dec
imul
and
jns
ret
adc
mov
mov
mov
lds
fisttps
in
hlt
sbb
pop
std
outsl
shlb
hlt
pop
xchg
mov
repz
mov
movhps
rclb
mov
lcall
inc
std
rcrl
cmp
scas
ret
stos
bound
xor
test
pop
shrl
sub
daa
int
sub
xor
pop
bound
mov
xor
push
dec
daa
pop
mov
subb
lcall
lret
sub
inc
lods
sti
out
sub
leave
jmp
in
arpl
cmp
or
or
adc
sub
or
jo
dec
and
cld
add
add
aas
outsb
inc
xchg
inc
mov
divb
psubd
mov
sbb
int
sbb
popf
add
ljmp
test
lods
pushf
xchg
xchg
adc
xchg
les
mov
xlat
inc
stos
mov
stc
lret
ret
movaps
not
pop
inc
es
leave
fisubs
stc
aaa
inc
xlat
daa
mov
lcall
jns
push
sub
dec
jmp
or
mov
sub
pop
test
push
jnp
add
jae
fadds
adc
dec
ret
fistpl
or
jo
lods
imul
rcrb
lret
dec
insl
fcomps
jl
call
dec
stc
jae
bound
dec
pop
fs
mov
or
and
inc
mov
and
imul
dec
dec
mul
cs
add
mov
cwtl
jp
mov
stos
les
test
mov
mov
add
mov
inc
push
sub
call
lods
lock
sbb
jb
cmp
aam
add
fbld
sbb
fs
je
dec
mov
inc
or
call
mov
fcoms
mov
adc
cmpsb
mov
cmp
inc
popa
das
scas
dec
mov
repnz
jg
adc
push
iret
jo
ret
pop
or
push
xor
ret
adc
push
add
cmpsb
xor
mov
push
inc
push
push
ljmp
sbbl
inc
add
dec
stc
sub
shrl
adc
xchg
xor
aas
cmp
sub
add
pop
fistps
test
xchg
stc
mov
int
popa
mov
jo
xorl
jb
out
pop
repz
jmp
ja
xor
xchg
test
cmpsb
cld
je
test
aas
or
js
loope
int
mov
push
mov
sub
and
push
inc
cmp
xchg
cs
push
dec
into
xlat
push
stos
mov
repz
aas
lret
mov
mov
ficoml
push
call
xor
add
pop
mov
mov
outsb
push
xchg
jp
dec
lcall
loope
push
jge
lock
cltd
jge
sub
adc
mov
cli
or
dec
sub
dec
jo
inc
xchg
shll
test
adc
sub
push
movsl
loope
cmp
das
xor
add
mov
push
lods
lcall
jle
sbb
inc
lcall
push
cs
cmp
xor
sbb
push
cltd
orl
out
add
pop
stc
or
in
push
adc
lret
fwait
mov
sti
mov
shlb
jns
sbbl
pop
into
pop
inc
cmpsl
fmuls
push
cmp
in
in
call
jmp
dec
mov
ss
fsts
push
jg
mov
xchg
mov
mov
and
and
sub
sbb
xor
or
pop
lods
fiadds
je
pop
movsb
xchg
test
cwtl
les
fsubr
cltd
daa
adc
icebp
mov
sub
push
pop
and
jns
std
dec
add
cmpsb
jae
ds
mov
icebp
aad
ds
push
pop
or
cmp
popa
fsubl
xchg
xor
inc
mov
in
rclb
adcb
dec
test
mov
outsl
cmp
in
sti
xorl
mov
or
cld
add
inc
or
jge
dec
icebp
leave
push
rcrb
pop
inc
sbb
jnp
cmpb
shll
dec
sarb
jns
jo
ds
lds
inc
and
inc
in
sub
inc
add
adc
sbbl
cmp
jmp
out
pop
push
dec
fnstsw
dec
pop
bound
lds
lcall
sbb
pop
pop
push
adc
mov
sub
mov
push
popf
sub
lock
or
pop
cmc
cwtl
ss
cmp
mov
nop
test
cltd
add
jle
mov
inc
popf
clc
rclb
pop
lcall
lret
mov
lea
je
mov
out
adc
cmp
or
test
mov
mov
popa
inc
jg
shlb
test
xchg
lret
mov
ret
xchg
mov
xchg
mov
fwait
mov
dec
jno
and
push
inc
and
insl
dec
sbb
jl
xor
cmpl
mov
inc
hlt
pop
rorb
mov
aad
xor
gs
mov
cs
mov
cmc
jbe
xor
push
and
ss
arpl
stc
hlt
push
adc
daa
sarl
xchg
insb
pop
icebp
mov
rclb
jge
pop
mov
cmpl
inc
gs
js
insl
xor
sbb
lock
xchg
rcrl
jecxz
or
add
call
fistl
jbe
cltd
add
inc
gs
sub
sbb
or
mov
mov
lret
jae
jmp
clc
and
fisttpll
mov
mov
js
cmc
mov
push
xchg
sub
jns
dec
in
test
pusha
sbb
mov
mov
enter
out
jo
lock
movsl
sbb
imul
add
inc
and
clc
incb
in
xchg
mov
push
pop
mov
dec
outsl
out
xor
movsb
sbb
es
xchg
sti
push
xchg
jo
jae
jecxz
push
aaa
repz
cltd
imull
orl
push
xor
test
inc
fwait
outsl
pop
push
adc
and
scas
and
cmp
gs
push
lock
xchg
or
loopne
loop
jo
and
xor
int
pop
shlb
nop
xor
push
sbb
xchg
pop
jae
insl
lea
data16
xchg
push
addr16
mov
test
rolb
repz
or
inc
sbb
or
push
clc
lds
mov
push
adcb
jle
pop
pop
pop
dec
adc
add
mov
ds
roll
push
sub
out
shlb
push
pop
cltd
jb
shrb
cwtl
xlat
sti
je
xchg
pushf
idivl
inc
data16
ss
push
push
aam
dec
dec
mov
shl
mov
call
add
lea
push
jge
xor
cmpsb
sti
loop
cmpsl
aam
into
cltd
and
mov
popf
sbb
loope
lahf
je
jmp
scas
mov
test
and
leave
outsb
cmp
in
mov
rol
sbb
sbb
sti
mov
outsb
test
push
mov
add
lea
repz
jecxz
xchg
xchg
int
pushf
xchg
sub
and
outsl
ret
fsubrl
pop
loope
cmpsb
and
and
push
dec
xlat
pop
sbb
ds
sbb
loope
push
sbb
movsl
hlt
mov
pushf
mov
loop
cli
jle
addr16
jno
xor
and
pop
jne
lcall
mov
fcmovb
mov
rolb
fwait
pop
xchg
xor
mov
in
addr16
sub
bound
pop
sub
je
cmp
mov
jmp
stos
cmp
adc
retw
jmp
outsb
idivl
lock
imul
mov
movsb
pop
adc
xchg
xlat
sbb
movsl
add
imul
stos
dec
jo
cli
sbbb
jmp
ljmp
pop
or
sbb
mov
cmc
adc
and
xchg
ja
bsr
push
add
jg
mov
cwtl
sub
cs
mov
hlt
and
cmp
pushf
mov
mov
lock
andb
lret
dec
xchg
outsl
leave
push
data16
pop
mov
mov
sub
das
ret
and
sarb
imulb
sti
imul
xchg
push
cltd
aaa
repnz
lods
sarb
cmc
jmp
dec
js
fistps
daa
cmp
adc
mov
lds
orl
mov
das
sti
cld
pushf
mov
ja
push
add
lock
iret
filds
mov
ret
sti
into
test
add
cmpsb
adc
andb
loope
jne
lds
loope
pusha
jo
xchg
push
aad
push
sub
jns
aaa
jo
push
jmp
pop
mov
adc
movsl
idivb
xchg
push
stos
dec
arpl
rclb
pop
jg
and
test
and
out
ja,pt
add
cwtl
adc
cmc
sub
sub
inc
xor
out
and
push
in
shlb
daa
cmp
iret
imul
and
push
sahf
aas
out
sbb
stc
sbbb
or
repz
xchg
lea
jmp
jb
jbe
add
bound
outsb
and
loopne
adc
xlat
lcall
ffreep
lea
push
xchg
pop
imul
repnz
clc
out
inc
xchg
xchg
xchg
ds
xchg
jno
adc
pop
sub
fs
test
sub
pusha
loope
mov
xor
dec
dec
jge
or
jp
push
lret
or
jne
scas
sbb
pop
scas
int3
xor
insb
pop
jo
movsb
fwait
xor
xchg
leave
in
pop
and
sbb
add
add
test
xor
scas
hlt
call
int3
mov
shr
sub
dec
sub
pop
adc
sub
shlb
and
arpl
into
inc
cmp
mov
int3
iret
pop
sbb
bound
mov
jns
sarb
or
mov
dec
mov
adcb
pop
sub
or
movsl
mov
lods
xor
inc
mov
pop
mov
jle
pop
pop
outsb
jecxz
bound
inc
xorb
rcll
push
mov
add
mov
mov
inc
hlt
add
add
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sbbl
push
push
mov
cmpl
mov
mov
movzbl
jmp
movzwl
je
pushl
call
and
or
xor
add
xor
mov
mov
xor
mov
orl
add
adc
mov
shrd
cmpl
movl
movl
not
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
adc
addl
mov
mov
sub
xor
xor
xor
and
adc
or
cmpl
not
movl
movl
movl
jmp
mov
ja
push
push
call
negl
mov
mov
xor
or
sub
adc
mov
xor
movzwl
add
shr
adcl
mov
mov
mov
sbb
xor
cmpl
movl
mov
jmp
mov
jle
push
pushl
push
push
call
mov
sub
mov
and
movzbl
sub
not
xor
or
xorl
mov
add
mov
not
shl
xorl
mov
shrd
sub
xor
shr
cmpl
movzwl
not
mov
movzwl
jmp
movl
movl
jbe
push
push
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
jae
pushl
push
pushl
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
mov
mov
mov
jmp
movl
not
jg
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jb
pushl
push
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jg
push
pushl
pushl
pushl
push
pushl
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
mov
movl
mov
jmp
movl
movl
jle
push
push
call
dec
sbb
xor
xorl
sub
addl
xor
shld
movl
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
cmp
movl
jne
cmp
movl
je
mov
subl
mov
sbb
push
pop
cmpl
mov
movl
jmp
not
jae
push
pushl
pushl
push
call
mov
or
mov
adcl
xor
xor
xor
mov
and
xor
or
add
movzwl
adc
xor
decl
shl
mov
xor
shr
incl
or
cmpl
mov
movzwl
movl
mov
jmp
movl
movl
jg
pushl
pushl
push
push
pushl
call
sbb
or
xor
sbb
and
adcl
movzbl
add
mov
mov
mov
adcl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jbe
push
push
call
sbbl
xor
neg
add
inc
adc
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
cmpl
mov
movl
jmp
movl
mov
jae
pushl
pushl
push
pushl
call
or
or
xor
pushl
pop
adc
mov
add
xor
adc
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
movl
jne
adcl
xor
jmp
xor
add
mov
sub
sub
mov
add
movl
mov
mov
and
movl
cmpl
movl
mov
mov
jmp
mov
jg
pushl
call
or
mov
xor
sbb
adc
xor
xor
mov
adc
and
not
and
movl
movl
movl
cmpl
not
mov
jmp
movl
not
ja
pushl
pushl
pushl
push
call
mov
mov
xor
or
sub
adc
movl
sbb
cmpl
mov
mov
movl
mov
jmp
mov
jge
push
pushl
call
mov
mov
add
sub
add
add
movl
movl
xorl
push
movzwl
sbb
movl
or
mov
mov
subl
push
sbbl
push
andl
push
andl
call
mov
mov
push
adcl
push
push
xorl
push
adcl
call
mov
mov
sub
sub
mov
sbb
mov
add
movl
mov
movl
adc
mov
addl
xor
mov
subl
xor
mov
cmpl
mov
mov
movl
jmp
mov
movl
je
push
push
push
pushl
push
push
call
adc
movzwl
and
adc
and
xor
xor
xor
xor
sub
movl
cmpl
mov
movl
movzbl
jmp
movl
mov
jle
pushl
push
push
call
add
sub
xorl
incl
neg
or
movl
cmpl
mov
notl
not
jmp
mov
jg
push
push
push
call
mov
sub
mov
xor
movzwl
sub
sbbl
and
movzbl
sub
movl
cmpl
mov
movl
mov
jmp
movl
jle
push
push
push
push
push
pushl
push
call
adc
xorl
xor
add
adc
sbb
mov
sbb
mov
add
xor
movl
cmpl
movl
movzwl
movl
jmp
mov
movl
jbe
push
pushl
pushl
call
adcl
sbb
xor
add
xor
sbbl
adcl
sub
sub
movl
adc
push
add
movl
mov
mov
add
mov
mov
incl
push
sbbl
push
subl
push
adcl
call
cmpl
movzwl
mov
jmp
not
movzwl
ja
push
call
xor
or
xor
sbb
xor
adcl
mov
mov
xorl
push
push
adcl
push
push
call
cmpl
mov
movl
jmp
mov
movl
jl
pushl
push
call
subl
adcl
xor
mov
mov
sub
and
movzwl
add
or
and
mov
orl
mov
xor
orl
mov
sbbl
xor
mov
xor
sbbl
xor
cmp
jne
cmp
jne
movl
mov
adc
movl
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
push
pushl
pushl
push
call
adc
xor
xor
mov
sbb
xorl
or
movl
xorl
mov
adcl
imul
add
xor
mov
div
movzbl
and
pushl
or
xor
sbbl
and
not
xor
inc
pushl
mov
movzwl
adc
mov
push
notl
pop
xorl
div
mov
andl
sub
add
xorl
imul
adcl
and
xor
pushl
pushl
pushl
pushl
andl
pushl
call
movl
sub
movl
cmpl
movzbl
movl
jmp
movl
jbe
pushl
push
push
pushl
call
xor
sub
sub
add
adcl
mov
xor
or
mov
or
mov
adcl
sub
cmpl
movzbl
mov
movl
jmp
movl
jle
push
pushl
push
push
call
add
and
add
adc
dec
xor
add
add
dec
mov
andl
xor
adcl
xor
movl
div
imul
addl
xor
sbbl
pushl
sbbl
pushl
sbbl
call
sub
movl
cmpl
mov
movl
jmp
mov
ja
pushl
call
sub
and
add
sbbl
mov
sbb
andl
mov
movl
movl
mov
mov
sub
or
mov
mov
mov
adcl
mov
push
push
adcl
xor
xorl
xor
push
push
notl
call
orl
add
mov
movl
adc
mov
sbbl
movl
andl
movl
movl
addl
movl
dec
jne
cmpl
movl
movl
movzwl
jmp
mov
jle
push
pushl
call
sub
sbb
adc
not
sbb
sbb
add
movl
xor
mov
mov
subl
movl
mov
call
cmpl
movl
mov
movzwl
jmp
not
movl
jb
pushl
push
call
adc
xor
mov
add
mov
xor
lea
mov
lea
xor
add
mov
adc
mov
subl
mov
xor
or
adc
mov
mov
cmpl
mov
mov
mov
mov
jmp
mov
jae
pushl
call
xor
xor
mov
sub
xor
orl
xorl
mov
xor
mov
xor
mov
xor
and
xor
shl
subl
shr
or
sbb
mov
cmpl
mov
mov
movl
jmp
mov
mov
jl
push
call
adcl
sbb
adc
subl
dec
subl
mov
mov
mov
mov
mov
sub
sub
mov
add
mov
mov
shrd
shr
mov
add
mov
mov
xorl
xor
addl
xor
or
mov
subl
push
pushl
addl
lea
andl
push
shl
subl
call
lea
push
andl
mov
movl
mov
sbbl
lea
xorl
push
mov
adcl
lea
mov
orl
mov
sbbl
mov
push
sbbl
call
movl
push
orl
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
addl
push
sub
push
adc
movl
movl
mov
adc
movl
mov
movzwl
xor
mov
subl
xor
div
or
imul
cmpl
movl
mov
movl
jmp
movl
mov
jbe
push
call
movl
orl
mov
or
xor
or
adc
and
add
mov
andl
xor
and
xorl
mov
xorl
xor
div
cmpl
mov
mov
mov
jmp
mov
movzwl
jb
push
pushl
push
call
mov
mov
sub
and
mov
mov
sub
xor
xor
xor
add
sub
imul
adc
mov
mov
adc
mov
mov
adc
and
sub
mov
movl
add
movl
movl
or
mov
andl
add
neg
xor
xor
sbbl
imul
mov
or
mov
mov
and
xor
add
mov
or
sub
adc
mov
sbb
movl
sbb
movl
notl
movl
add
movl
and
mov
movzwl
xor
imul
adc
mov
cmpl
movl
movzwl
movl
jmp
mov
jae
push
push
pushl
call
mov
sbb
mov
sub
andl
and
mov
sbb
mov
imul
imul
neg
mov
xorl
and
dec
or
xor
mov
xor
mov
mov
xorl
lea
mov
mov
sbb
mov
movl
movl
cmpl
movl
movl
mov
movl
jmp
mov
mov
jle
pushl
call
xorl
sbb
dec
subl
mov
mov
or
and
adc
movl
cmpl
mov
movzwl
mov
movl
jmp
movzbl
notl
jge
pushl
call
and
xor
movzwl
adc
and
xor
sbb
mov
xor
mov
or
or
add
or
mov
or
add
or
xor
mov
movl
cmpl
movl
mov
movzbl
jmp
movl
je
push
pushl
pushl
push
call
not
mov
mov
adc
sub
mov
mov
and
or
movl
cmpl
movl
notl
not
mov
jmp
mov
mov
jae
pushl
pushl
push
pushl
pushl
pushl
call
neg
dec
movzbl
and
dec
sbbl
sbb
sbb
cmpl
movl
mov
mov
jmp
not
jge
pushl
push
pushl
call
mov
adc
or
xor
xor
xor
mov
xor
mov
add
adcl
movl
mov
add
mov
addl
sub
mov
adcl
lea
sbbl
or
cmpl
movzbl
mov
jmp
movl
jl
push
push
pushl
call
and
adc
add
and
adc
mov
add
mov
and
sub
mov
xor
mov
mov
xor
movl
cmpl
mov
mov
jmp
mov
movzwl
jae
pushl
push
push
push
call
mov
or
mov
orl
orl
sbb
and
adc
movl
mov
add
imul
mov
adc
mov
adcl
imul
orl
xor
xor
or
or
mov
div
cmpl
mov
mov
movl
jmp
movl
movl
jle
pushl
pushl
push
push
pushl
call
adc
or
add
xor
add
neg
xor
xor
and
sub
or
mov
addl
movl
sbb
movl
and
movl
mov
mov
sub
mov
cmpl
mov
movl
jmp
movl
jge
call
adc
or
mov
adc
sbb
sub
mov
adcl
xor
addl
div
imul
cmpl
mov
mov
mov
movl
jmp
movl
movl
jne
pushl
push
push
pushl
push
push
pushl
call
orl
xorl
xor
and
orl
orl
inc
add
mov
subl
xor
movzbl
sbb
mov
xor
mov
adcl
div
add
xor
movzbl
adc
mov
movl
movl
movl
cmpl
mov
mov
jmp
mov
movl
jbe
push
push
pushl
call
add
sbb
movzwl
sbb
adcl
movzwl
sub
or
movl
mov
and
mov
andl
sub
shr
sub
mov
addl
imul
cmpl
movl
movl
movl
jmp
movl
jl
pushl
call
sbbl
xorl
xor
orl
sbb
mov
and
cmpl
movl
movl
jmp
mov
jle
pushl
push
push
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
sub
mov
neg
movl
xor
movl
xor
mov
or
xor
mov
or
movl
sub
dec
mov
movl
mov
xor
add
sub
imul
movl
movl
movl
add
movl
movl
movl
mov
mov
or
add
orl
mov
sub
incl
mov
movl
imul
imul
andl
mov
orl
or
mov
lea
orl
push
xorl
call
sub
mov
mov
imul
add
cmpl
movl
movl
mov
jmp
movl
jb
pushl
push
call
sbb
mov
or
xorl
addl
xor
add
adc
addl
and
mov
sub
mov
sub
or
xor
mov
xorl
div
cmpl
movl
mov
jmp
not
jl
push
push
push
push
call
xor
movzbl
and
mov
and
or
xor
add
add
mov
adc
movl
movl
movl
movl
mov
xor
movl
sbb
movl
cmpl
mov
movl
movl
jmp
mov
jbe
pushl
push
call
sbb
sbb
sub
adc
adc
movl
or
movl
sbb
movl
cmpl
movl
mov
mov
mov
jmp
movl
jge
push
push
call
andl
and
adc
mov
mov
and
sub
mov
or
movl
cmpl
mov
mov
jmp
mov
mov
jle
pushl
call
adc
mov
and
mov
xor
mov
sub
movzwl
and
mov
adc
movl
movl
and
mov
xorl
mov
adc
mov
and
and
sbbl
sub
sub
imul
mov
xor
lea
xor
mov
orl
mov
or
mov
mov
xor
add
add
mov
cmpl
movl
mov
jmp
movl
movl
jbe
push
push
pushl
call
or
sub
adc
xor
dec
movl
or
or
add
lea
or
and
mov
add
sub
add
add
mov
mov
xor
or
sub
xor
movl
mov
sbb
mov
movl
movl
adc
movl
and
mov
orl
mov
subl
mov
addl
xor
orl
xor
adcl
mov
notl
call
add
mov
sub
mov
mov
andl
mov
xor
adcl
xor
mov
orl
call
subl
or
or
adcl
mov
mov
adcl
xor
adcl
xor
sbbl
mov
call
mov
mov
mov
cmpl
movzbl
mov
mov
movl
jmp
movl
jle
push
push
pushl
call
sbbl
notl
xorl
neg
add
mov
xor
orl
xor
andl
mov
movzbl
adc
mov
mov
mov
xor
mov
adcl
mov
subl
mov
sbbl
call
sub
mov
or
mov
orl
or
subl
push
push
subl
push
xorl
push
call
mov
cmp
movl
jne
mov
cmpl
not
movzwl
mov
jmp
movl
ja
call
mov
sbb
sbb
xorl
movzwl
sbb
and
xor
mov
xor
orl
xor
orl
mov
xorl
call
cmpl
mov
movl
jmp
movl
jg
pushl
push
push
call
mov
add
and
or
or
mov
mov
sub
or
xor
mov
sub
mov
mov
adc
mov
xor
andl
xor
mov
subl
call
or
cmpl
movl
movl
jmp
mov
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
pushl
push
pushl
call
adcl
orl
adc
sbbl
orl
addl
notl
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
movzbl
sub
push
mov
or
movl
jne
or
mov
cmpl
notl
mov
mov
jmp
mov
jae
pushl
call
or
adc
xorl
movzbl
or
mov
sbbl
sub
mov
xor
incl
div
xor
or
sub
mov
mov
sub
mov
orl
div
mov
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
cmpl
mov
mov
movl
mov
jmp
movl
movzbl
jne
pushl
push
call
sbb
add
mov
xor
add
sub
and
inc
add
add
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
orl
shld
shl
ret
cmpl
mov
movl
jmp
movl
movl
jge
pushl
push
call
sub
xor
sbbl
movzwl
adc
mov
xor
and
shl
ret
xor
xor
ret
