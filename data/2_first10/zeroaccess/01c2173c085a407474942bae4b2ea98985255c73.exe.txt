push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
inc
jae
push
bound
bound
pop
bound
xor
cmp
jns
jbe
daa
cmpsb
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
mov
mov
aam
mov
pop
sbb
cwtl
jl
inc
mov
into
gs
lods
xor
icebp
data16
and
xchg
sahf
sbb
insb
jmp
cmp
fldl
imul
inc
mov
inc
test
push
mov
xchg
lahf
mov
jl
mov
ds
xor
negb
stos
and
cli
bound
jo
ja
adc
nop
xor
sub
push
dec
out
ficoms
in
cmp
dec
test
int3
mov
outsb
lods
fadd
sti
addl
jp
fidivrs
test
ficompl
cld
pop
rolb
sub
arpl
pop
incb
sar
outsb
jmp
insl
pop
xor
cmp
cli
into
in
cmp
sbb
pusha
push
mov
hlt
sbb
jmp
aad
adc
jmp
mov
out
cmpsl
hlt
icebp
pop
jg
jl
mov
pop
hlt
pop
scas
push
mov
sarb
xchg
jl
sbb
jnp
imul
xchg
xchg
ret
shlb
mov
lea
bound
mov
cmpb
add
jmp
fdivs
mov
push
add
mov
je
scas
jle
test
push
pop
lods
xlat
dec
pop
dec
pushf
dec
add
sahf
jge
test
lcall
xor
xor
out
push
outsb
sbb
xchg
rcll
lea
test
mov
stos
loope
pop
push
in
mov
mov
mov
js
insb
notb
insb
push
rcll
pop
jns
mov
imul
ss
inc
inc
inc
pop
jne
int
jmp
jge
xlat
push
loop
enter
in
pop
addb
dec
mov
or
ja
jle
cmpl
xchg
fiaddl
in
sub
es
adc
or
adc
dec
cmp
dec
adc
or
adc
int
cmp
push
sbb
jns
mov
test
ja
stos
mov
xchg
nop
mov
sub
push
push
rcrl
lret
mov
out
sahf
jnp
xor
imul
les
push
loope
gs
mov
or
addl
xor
xchg
sub
mov
sbb
and
dec
mov
add
insb
pop
mov
push
divl
mov
das
or
cmp
lret
movsb
inc
icebp
test
mov
sub
dec
mov
stos
jp
mov
mov
repz
mov
std
fildl
dec
push
test
loopne
mov
sbb
dec
mov
sbb
or
mov
fistpl
jge
dec
mov
mov
ljmp
mov
fbld
sbb
and
fwait
es
into
fildll
or
imul
pop
add
jp
movsl
or
pop
and
js
stos
push
lods
js
sub
push
jge
or
xchg
leave
pop
lahf
sahf
xor
pop
idivl
pop
lret
ss
push
rclb
sub
gs
enter
ret
je
push
lret
jbe
cmp
mov
fimull
sub
lods
inc
test
fcmovnb
imul
mov
jg
movsl
sub
shrb
scas
push
int3
jge
jecxz
pop
mov
jae
mov
mov
lea
ret
cmp
add
or
pusha
dec
sbb
scas
insl
dec
sub
pop
dec
loope
push
inc
jp
mov
mov
test
mov
add
and
inc
in
xor
push
arpl
push
fistpll
fists
ss
pop
jns
xor
dec
push
dec
sbb
ss
mov
adc
gs
push
or
push
and
and
inc
loope
pop
in
xchg
sbb
dec
xchg
out
inc
stc
das
add
add
outsl
aas
hlt
inc
mov
mov
push
mov
pop
mov
push
fs
and
push
cvtpi2ps
mov
adc
cmp
add
cmp
xchg
mov
lods
imul
lds
adcb
cmc
cmp
jae
incl
iret
mov
cmp
test
mov
clc
xchg
loope
clc
int3
jbe
cltd
push
xchg
push
dec
xor
and
adc
repz
test
mov
loopne
test
hlt
js
imul
inc
cmp
jg
je
mov
outsb
sub
mov
mov
mov
add
or
iret
add
into
bound
mov
mov
insl
dec
cmpsl
fdivrs
mov
repnz
mov
cli
leave
pop
rclb
mov
lods
mov
pop
sbb
add
mov
fs
push
fiaddl
je
or
outsl
and
xor
cltd
pop
lcall
int3
pushf
jl
add
adc
subl
shll
lcall
leave
inc
data16
daa
fcomps
adc
push
pop
in
out
sub
mov
scas
scas
xchg
cmpsb
pop
mov
loope
jnp
test
mov
popa
cmp
mov
rcr
out
or
xor
inc
push
cs
inc
not
sub
push
push
in
mov
fidivrl
push
pop
pop
pop
sbb
xchg
mov
jbe
loope
daa
or
subb
loopne
sub
ljmp
loope
icebp
pop
loopne
nop
xchg
repz
pusha
lods
mov
addr16
mov
mov
clc
inc
stos
inc
fcoms
or
fistl
sbb
adc
adc
mov
cltd
push
jge
hlt
aas
cmpsb
push
cmc
adc
dec
int
mov
js
jg
out
mov
divb
xchg
sti
frstor
fstpl
insb
ret
ret
sbb
lea
or
mov
ficompl
es
push
faddp
mov
jmp
dec
nop
lds
outsl
dec
xor
lods
imul
in
cmpsl
int
pop
cmp
pop
cltd
dec
sahf
shll
out
mov
mov
mov
fwait
adc
mov
test
cmp
aad
dec
shrb
and
arpl
cmp
mov
jne
fstpt
mov
adc
dec
lods
lret
lods
movsb
pusha
loopne
clc
mov
push
sbb
orb
repnz
or
mov
sub
jecxz
mov
pop
aas
add
aad
cmpsb
mov
or
jmp
mov
aam
or
cmp
mov
test
insl
out
sahf
ds
xlat
mov
add
inc
and
outsb
gs
xchg
cmp
test
sub
mov
addb
jns
xlat
mov
push
sbb
fstps
loope
aam
mov
push
pop
out
fmul
nop
cmp
add
and
xor
adc
add
cmp
xchg
sub
fwait
cmc
loope
mov
adc
mov
test
dec
jb
sarl
lods
jb
call
gs
mov
or
das
mov
data16
xor
shr
or
or
enter
mov
movsl
push
sbb
int
jge
idivl
stos
push
pop
rcrb
jns
fildll
xchg
add
in
xchg
push
dec
adc
movsb
dec
sbb
sub
les
aam
jp
fnstcw
mov
inc
pop
push
jns
call
nop
out
push
and
jmp
clc
int3
mov
jecxz
push
pop
cmpb
movsb
pop
mov
xor
repnz
mov
aad
sub
adc
xchg
adc
loopne
fcompl
inc
sub
jecxz
sbb
nop
inc
repnz
out
jno
mov
push
arpl
mov
cmp
repz
ljmp
push
mov
subb
mov
mov
jne
xchg
jne
or
mov
out
repz
or
adc
sti
push
mov
jmp
fwait
xor
add
push
mov
mov
cltd
pop
div
push
pusha
daa
out
insb
test
fdivp
and
data16
icebp
mov
movsl
or
mov
sti
push
sbb
cmpsb
ret
sbb
cmpsb
mov
cmp
add
or
rolb
ret
mov
inc
mov
div
scas
jmp
and
xchg
jmp
add
rolb
mov
mov
push
mov
push
sarb
fisttps
and
and
ds
dec
cmp
subb
or
mov
cmp
push
movsb
sub
cmpsl
cmp
mov
stos
cmp
ja
into
push
clc
leave
fldenv
inc
push
push
in
adc
push
repnz
pop
cmpl
gs
int
push
dec
or
cmp
cmpl
cmp
scas
add
mov
cmp
jns
inc
xchg
subb
dec
mov
ficoml
movsl
sub
data16
rcr
sbb
jp
out
push
or
int
mov
imul
fildll
or
mov
ljmp
nop
ret
cld
jae
ret
outsb
in
adc
cmpsb
std
dec
and
icebp
int3
inc
ds
sbb
cs
outsl
insb
add
mov
mov
mov
push
inc
pop
sarl
xor
inc
jae
outsl
imul
fs
lcall
dec
jmp
mov
jmp
insb
inc
lods
mov
insl
rorl
add
jnp
cltd
xchg
popa
jg
in
sbb
lea
leave
inc
scas
mov
shl
jo
outsl
cmp
lret
popf
testb
mov
xchg
mov
or
into
xchg
mov
loope
jmp
lock
lahf
xorb
test
arpl
mov
inc
loop
sbb
sub
lret
jmpw
hlt
xor
jo
cld
repnz
adc
icebp
mov
xchg
dec
and
sub
sbb
sbb
and
ficoml
jbe
outsb
jle
fdivs
loop
jno
dec
push
jp
or
cs
and
jns
inc
push
in
push
clc
inc
ss
cld
cmp
mov
jl
stos
out
in
hlt
dec
aad
ja
or
or
shl
jns
ds
mov
and
push
cmp
enter
xchg
dec
cmpl
dec
hlt
enter
adc
dec
push
xchg
adc
int
sub
test
mov
jp
jns
jle
or
pop
dec
nop
cmp
jmp
call
jmp
xor
push
lods
push
lret
sarl
pop
cs
popf
sar
sbb
push
pop
pop
loope
pop
sub
or
inc
lock
mov
sti
out
pop
and
pop
bound
mov
pop
mov
jmp
pop
aam
ss
imul
loopne
cmp
push
sub
andl
add
out
ror
leave
cmp
out
jl
sbb
and
mov
cmpsb
jl
mov
pusha
adc
jmp
dec
das
dec
dec
pop
cmpsl
cltd
aas
fdivs
add
orl
xor
loopne
adc
jge
push
mov
and
stos
push
adc
adc
js
mov
pop
and
adc
push
aas
movsb
dec
das
andb
test
jle
sbb
outsb
jl
imul
ret
sbbb
stc
out
and
pop
push
mov
xor
or
push
leave
iret
je
fstpt
push
movsb
jnp
inc
packuswb
jne
cmpsb
jmp
scas
xchg
pop
push
es
xor
adc
dec
movsb
inc
sbb
pop
loopne
pop
cmc
arpl
adc
stos
cmovb
dec
xchg
mov
pop
test
fnstenv
int
inc
in
xchg
in
mov
cltd
out
out
sbb
pop
add
add
fstpt
mov
hlt
stos
ret
int
mov
and
imul
and
mov
cmpl
jne
cmp
loope
mov
jp
mov
lods
pop
mov
jbe
stos
insl
sub
adc
movsl
shlb
xorl
rolb
push
xchg
jle
mov
ja
push
sub
mov
or
pop
movsl
lods
lret
arpl
testl
xchg
push
popf
jae
mov
mov
sbb
imul
rolb
sarl
sbb
insb
rcr
mov
sbb
lcall
adc
and
nop
sub
dec
ja
idivb
add
sub
and
es
aam
lods
ja
add
lahf
sbb
movsl
repz
add
std
dec
rcll
cmp
push
pop
dec
mov
sti
sbb
popa
dec
cmp
arpl
data16
idivb
lret
push
sub
sub
faddl
lahf
int
dec
das
adc
pushf
test
enter
stos
stos
fadds
fnstcw
jl
sahf
lds
dec
inc
sub
sar
sub
push
lock
mov
mov
xor
pop
adc
xchg
hlt
add
aaa
xorl
push
aas
adc
in
cltd
mov
xchg
or
xchg
mov
push
jmp
lret
mov
push
sbb
addr16
xlat
xor
inc
or
and
mov
fildll
inc
adc
std
aam
iret
fs
orb
adc
jns
xchg
and
cvtps2pd
or
cmp
mov
pop
lret
jb
push
lret
aaa
jns
in
pop
dec
in
nop
jg
and
fisubl
je
leave
popf
rolb
lods
movsl
mov
adc
cltd
decl
std
loope
testb
ficoml
and
shll
sarl
sbb
loope
roll
rorb
cld
mov
adc
push
mov
sarl
jge
stos
lcall
jns
test
mov
jns
cmp
out
cmc
pop
lods
xchg
push
pop
sbb
or
out
clc
mov
lods
push
dec
mov
pushf
loope
dec
lea
ja
dec
scas
lds
cmpsl
jns
mov
and
loopne
pop
xchg
and
mov
je
dec
push
repnz
jecxz
neg
jg
mov
cmp
cmc
addr16
cli
and
divl
inc
push
loop
gs
ret
sub
xchg
jno
xor
sbbb
gs
call
mov
xchg
stos
loopne
push
int3
in
or
pusha
fdivl
leave
ss
ds
imul
mov
pushf
mov
mov
jb
bound
popf
pop
test
mov
lods
iret
inc
in
cmc
xor
jae
pop
scas
xchg
mov
sbbl
adc
xchg
sarl
mov
orb
pop
lcall
gs
cmp
pusha
adc
cmp
ret
add
mov
mov
and
sub
notb
pop
imul
pop
jno
loopne
cmp
pop
sub
dec
inc
enter
or
iret
sti
cmp
in
mov
add
xchg
pushl
sub
or
adc
sbb
dec
scas
sti
mov
cmp
pop
out
addr16
mov
insl
sbb
fldcw
lret
push
adc
sub
mov
ljmp
cmp
inc
lea
fisttpll
xlat
fldt
divl
push
fmul
ret
loopne
loop
push
add
push
sub
push
stos
add
sahf
pusha
adc
inc
jns
fisttps
cmp
xor
outsl
mov
aaa
cmp
stc
sub
pop
stos
pop
xor
mov
test
sub
mov
sbbb
mov
scas
xchg
cwtl
jp
push
push
jno
cmp
bound
ficompl
and
mov
mulb
imul
test
cmpsl
inc
add
out
xchg
add
jmp
scas
clc
inc
xchg
mov
sahf
add
and
mov
outsb
mov
in
ds
mov
fsubs
in
std
lret
test
aas
or
dec
push
and
add
and
push
and
sub
movsb
sbb
pop
arpl
cwtl
sub
inc
push
pop
mov
in
inc
mov
pusha
cmpsb
cmpsb
out
shll
cmp
shlb
inc
pop
and
icebp
loop
sbb
aaa
adc
push
lds
scas
arpl
or
sbb
int
dec
bound
rolb
movsb
xchg
push
adc
lret
pushf
aaa
mov
sbbb
mov
pop
in
jge
test
xor
mov
popf
imull
adcb
and
inc
mov
inc
mov
inc
test
sbb
pop
das
mull
mov
pop
and
fmul
adc
inc
stos
inc
push
jb
orb
outsl
sub
popa
xchg
xor
add
mov
lock
mov
fidivrl
jae
jmp
mov
sub
xchg
icebp
jo
adc
js
in
jg
cmpsl
dec
mov
mov
jge
xor
sbb
in
jg
and
jae
xchg
push
and
lea
xor
hlt
lea
cmp
sbb
jge
bound
xor
int3
xor
inc
inc
push
arpl
popf
push
cltd
mov
es
loope
or
pop
sbb
jge
stc
in
into
xor
ret
pop
cltd
mov
pop
pop
int3
lea
push
rcr
mov
incb
notb
mov
mov
lea
fmuls
hlt
dec
dec
loop
ljmp
movsl
aaa
xor
pop
inc
pushf
insb
cmp
jns
pop
jge
inc
fstpl
push
imul
jp
mov
fdivrl
push
lcall
add
in
in
add
ds
test
dec
push
sub
cmpsl
pusha
nop
mov
lds
fisttpll
mov
pop
mov
jne
mov
mov
lret
cmp
xchg
in
das
mov
test
sarl
sbb
lock
sbb
pop
sbb
and
bound
and
cld
lcall
and
out
push
adc
push
mov
js
sub
and
gs
or
test
rcl
or
fistpl
shrb
cmp
lret
in
sarl
iret
jae
loopne
xchg
mov
and
pop
mov
mov
xchg
gs
out
add
out
mov
add
mov
pushf
mov
mov
and
imul
cld
leave
pop
push
rcll
cmpsb
sub
jge
repnz
cmpsl
leave
cmp
jnp
ljmp
cli
jbe
lods
fsts
insb
cmp
jo
mov
xchg
idivl
lret
pop
xchg
shr
leave
aad
fxch
pop
dec
arpl
cmp
lahf
mov
and
sub
xor
dec
or
jp
xor
dec
jle
or
mov
sub
cwtl
sbb
mov
stos
in
sarl
outsl
pmaddwd
popa
dec
ja
adc
cmc
stos
hlt
or
fwait
icebp
std
cwtl
ret
jge
fcoml
loop
xor
test
std
outsb
xor
out
enter
add
push
mov
cli
pop
sub
imul
lock
fwait
or
cmpsb
int3
je
out
fs
dec
pop
arpl
xor
or
add
mov
ljmp
loopne
mov
mov
mov
xlat
shlb
push
and
mov
sbb
out
xchg
xchg
sbb
inc
sub
mov
sbb
and
negb
xchg
mov
mov
insb
movsb
imul
cmpl
sub
es
xor
jge
xor
lods
rcll
dec
push
and
inc
les
aas
push
add
stos
iret
cwtl
jge
mov
xchg
and
mov
pushf
call
inc
gs
data16
mov
stc
shl
out
mov
test
imul
add
mov
mov
scas
scas
fisttps
jl
cltd
adc
cld
pop
pop
push
jp
imul
cli
out
mov
inc
cmp
loopne
ljmp
frstpm(287
jle
aas
xor
lock
push
aad
mov
pushf
pop
pop
lods
sub
das
add
sbb
imul
cmp
hlt
pop
pushf
popf
fadds
fcoml
add
push
out
push
into
mov
rcrb
cli
jno
xor
mov
pop
arpl
fstl
jmp
jle
outsl
xchg
fucomi
mov
sti
les
cltd
pop
add
adcl
xor
mov
stc
fs
je
rcll
mov
in
je
jge
dec
adc
dec
cmpb
ss
mov
cmpl
jp
push
mov
mov
outsb
insl
mov
inc
xchg
pushl
test
andl
push
mov
pop
push
and
mov
jbe
punpcklbw
jnp
mov
cmp
cmp
stos
xchg
inc
jl
pop
ret
loopne
sub
imul
ljmp
mov
rorl
mov
aaa
jp
sarb
filds
xor
or
mov
insb
ret
or
mov
inc
aaa
add
pop
sbb
pop
hlt
adc
lcall
pop
jl
add
or
test
stos
enter
std
cmp
pushf
xor
pop
jne
pop
xorb
outsl
xchg
es
in
cltd
fcomps
std
inc
mov
outsl
imul
push
jp,pn
cmp
ret
inc
and
xor
xchg
adc
mov
paddsw
cmpl
push
mov
or
sbb
jmp
dec
gs
jnp
fxch
js
sbb
jbe
adc
xor
ret
xor
inc
inc
je
inc
jge
jns
mov
jle
addl
jg
pop
mov
cmp
loop
xor
inc
insb
fdivs
aam
cltd
push
cmp
or
movsb
push
dec
sbb
lahf
mov
aaa
push
inc
stc
xchg
out
sti
lret
mov
jmp
pop
repz
jno
mov
xchg
divb
jmp
mov
sbb
inc
cmp
bound
aad
int3
sbb
xor
cs
xor
pop
and
fldcw
cltd
pushf
mov
aas
leave
in
les
cmp
xchg
in
ds
loop
push
shlb
les
sahf
shll
mov
xor
cld
sbb
adc
push
int3
in
lret
and
ficompl
shrb
jmp
je
les
cltd
mov
out
dec
ljmp
cli
sbb
push
mov
mov
pop
test
rcrb
call
hlt
test
aas
jge
inc
nop
add
inc
pop
inc
jne
adc
loopne
sub
push
je
and
es
pop
imul
loop
dec
cmp
dec
mov
test
sub
aaa
movsl
pop
mov
xchg
inc
mov
mov
or
lods
dec
ret
push
sahf
loop
pop
out
test
inc
test
push
jl
or
rolb
add
push
add
cmp
pop
mov
cltd
cld
dec
arpl
lods
lret
in
cmpsb
lret
jno
xor
pusha
or
icebp
sub
mov
xorb
fs
arpl
insb
xorb
push
aad
enter
adc
pop
mov
cmpsl
push
js
and
xchg
or
call
lret
mov
loope
lret
popa
dec
xchg
dec
or
xchg
jmp
jge
and
sub
jp
test
inc
pushf
mov
jp
cmp
mov
mov
lcall
xchg
or
cld
push
pop
subl
dec
nop
sbb
push
sbb
into
sub
add
add
call
adc
outsb
add
fwait
test
cmpb
insl
imul
aam
xor
jecxz
vpsubusw
mov
lods
fsubl
insb
cmp
repnz
xchg
pop
push
mov
call
fbld
test
hlt
roll
dec
out
push
push
stos
jbe
mov
in
pop
sbb
sub
or
jl
xchg
dec
push
fdiv
hlt
xchg
movsl
xchg
fdivrp
xchg
inc
in
cmpsb
mov
das
cmp
mov
pop
sub
xchg
hlt
sbb
iret
movsb
pop
enter
imul
shlb
push
and
and
mov
add
mov
inc
jb
inc
test
push
sbb
xor
and
jno
daa
xor
dec
es
popa
jle
xchg
nop
in
bound
xor
cmp
mov
xor
xor
dec
mov
lret
mov
js
push
ja
ljmp
lea
mov
mov
xlat
inc
aad
scas
lret
sbb
and
hlt
dec
push
lret
mov
int3
xchg
ret
repz
js
cmp
into
loop
dec
pop
add
mov
mov
cld
cmp
mov
xchg
fcmovnb
scas
mov
adc
ret
lret
and
in
xchg
push
gs
add
push
fiaddl
or
cmp
mov
push
or
pop
movsl
cmpsb
outsb
or
pop
pop
jnp
and
jge
shl
nop
sub
or
cmp
mov
int3
bound
mov
cmp
cmpsb
push
xor
dec
and
and
pop
negl
dec
rcrb
or
cmp
in
mov
nop
xor
xor
scas
inc
pop
scas
cmp
cmp
test
es
xchg
movb
iret
test
sub
jge
call
xchg
fbstp
xchg
ret
lods
pop
jge
push
lret
mov
aas
sti
repnz
aaa
push
mov
aas
mov
fisubrl
sbb
iret
and
cld
pop
dec
push
add
jne
pop
pop
and
sahf
sbb
pusha
mulb
push
imul
dec
gs
mov
mov
repnz
lock
mov
push
xchg
lret
movsb
into
repz
lea
fnstenv
dec
xlat
es
xlat
lret
push
jae
xorl
pop
lret
sbb
push
out
inc
pop
lret
dec
les
xchg
or
orb
xchg
inc
cmp
mov
sub
add
test
stos
and
sub
xchg
pop
pushf
jge
push
ljmp
outsl
lods
or
stos
scas
inc
js
fnstenv
mov
cmpsl
imul
jmp
sub
pop
xchg
out
and
push
hlt
jb
xchg
imul
clc
xchg
faddl
add
pop
in
mov
std
or
dec
ret
push
iret
lret
popf
mov
repnz
jmp
pop
inc
mov
std
int
sar
jns
aam
sbb
arpl
gs
stos
sahf
sub
call
loope
rcpps
mov
add
sbb
xchg
ds
mov
popa
mov
jo
jnp
lcall
rorl
int
cmp
inc
test
pop
jns
and
mov
or
and
jns
sub
sti
inc
iret
sub
jb
mov
and
mov
lods
mov
mov
fidivl
movsl
das
jg
cltd
bswap
fcoms
sub
in
test
cmp
into
lods
test
adc
xchg
or
xor
xchg
sub
add
in
ja
fiaddl
and
das
sbbb
adc
adc
cmp
inc
clc
outsl
or
inc
xchg
faddl
into
mov
mov
cmc
jns
movl
mov
jmp
cmp
icebp
jp
dec
sbb
fldl
les
frstor
lahf
out
push
push
repnz
xor
repnz
icebp
test
sahf
lret
decb
in
popf
fs
sub
xor
lret
lods
insl
sbb
sub
lods
ja
ret
cmp
cmc
les
fs
jae
mov
loopne
push
mov
cmp
mov
add
icebp
pop
pop
inc
sub
jge
inc
nop
add
add
pop
cld
sahf
ja
jnp
les
stc
sarl
or
xchg
stos
add
add
xchg
inc
cmp
scas
out
rolb
adc
cltd
orl
int
mov
sbb
add
inc
cmp
int3
sarl
cli
outsl
enter
and
xor
cld
movsl
sar
pushf
shlb
jle
mov
jae
sbb
lret
les
inc
dec
mov
xor
dec
loope
inc
xor
dec
shl
pushf
adc
inc
in
lods
push
mov
fucom
divb
lods
mov
cmp
pop
sub
xor
jecxz
mov
push
sarb
and
mov
push
stc
daa
mov
jmp
sbb
add
aam
push
out
test
sub
mov
jmp
push
rcrl
mov
inc
jb
test
dec
adc
or
leave
xor
pop
addr16
sbb
jo
and
add
cld
mov
xor
mov
xchg
jle
dec
scas
mov
stos
mov
ret
and
dec
mov
fstl
jecxz
sbb
sarl
xor
mov
fmuls
rcr
test
lret
aad
xchg
sbbl
push
mov
xor
adc
outsl
pop
cmp
jp
add
jg
mov
fwait
shlb
mov
adc
and
fwait
arpl
scas
test
call
and
push
add
pop
clc
pop
jns
sbbb
mov
push
bound
mov
mov
shlb
cmp
fstps
pop
cli
sbb
pop
outsb
gs
mov
pop
dec
ds
sahf
sbb
sub
cltd
mov
das
jmp
xchg
ror
int
sub
cmc
callw
lea
cmp
inc
add
mov
scas
sub
enter
enter
pop
xor
pop
mov
add
test
nop
testl
cmp
pop
fldt
xchg
gs
jnp
fs
inc
out
cmp
shlb
pop
test
iret
dec
inc
mov
mov
loop
addr16
mov
cmp
loop
cmpsl
pop
fisttpl
je
fs
rclb
mull
inc
xor
stc
into
sub
mov
test
sbb
shlb
test
movsl
fucomi
mov
xor
fcoml
jns
lahf
jo
loop
sub
stos
mov
inc
sbb
jle
call
adc
xchg
jg
dec
or
xor
jns
in
pop
mov
xor
ja
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
adc
bound
pop
bound
push
icebp
push
xor
lret
dec
ret
or
out
lock
dec
scas
adc
dec
pop
nop
dec
int
mov
sti
aad
and
mov
mov
test
aad
fistl
rclb
lcall
lret
pop
arpl
shr
lahf
rol
das
xor
outsl
mov
or
inc
push
pop
dec
inc
hlt
mov
mov
dec
test
mov
rcr
mov
jne
cmpsb
push
int
shrl
cmp
jmp
fistpll
mov
jnp
mov
lods
shlb
mov
xchg
dec
mov
sahf
dec
jo
fisubs
sbb
test
cmp
mov
sbb
stos
inc
jae
mov
cmp
inc
xor
dec
andb
sub
pop
lahf
sbb
add
sbb
sub
push
mov
hlt
stc
in
xchg
out
outsl
mov
sbb
insl
cmp
pop
lods
cmp
jecxz
cmp
pop
in
jle
push
mov
flds
jp
lock
insl
xchg
mov
jae
adcb
mov
outsl
inc
out
imul
ja
jp
pop
shll
push
fsubrs
nop
inc
js
inc
add
xor
push
cmpsl
aam
std
daa
mov
ficomps
jg
pushf
and
out
sub
sub
adc
aaa
xor
inc
clc
out
js
stos
filds
mov
xorb
pop
das
sbb
jo
jbe
jp
sub
ror
push
addr16
imull
push
sbb
xchg
inc
jb
rcl
int3
out
mov
push
fdivrl
mov
mov
movsl
pop
xor
fs
cmp
cmpsl
xor
les
dec
iret
aam
jbe
xchg
shll
lret
aaa
adc
loope
aam
out
movsl
jo
jl
xchg
xchg
add
dec
rcrb
mov
hlt
jb
and
push
cltd
xchg
scas
xor
push
addb
jg
je
xchg
fdivl
inc
lods
in
cs
sbb
ljmp
fwait
aas
inc
and
insl
cli
repz
dec
hlt
std
addr16
pop
ja
fcompl
and
sub
int3
nop
icebp
xlat
cli
in
adc
jb
pusha
fimuls
aam
insl
mov
cli
and
out
adc
jle
and
int
pop
outsl
adc
imull
adc
pop
fstpt
gs
xchg
sbb
or
pop
data16
inc
inc
lock
rclb
cmp
cli
shll
adc
lahf
addb
inc
cmp
add
fimull
fimuls
and
fs
jl
int3
loopne
jno
dec
wrmsr
std
cmpsb
jl
and
pusha
inc
adc
ret
cwtl
dec
movsb
or
int
cli
jo
lea
and
jo
push
inc
jo
push
cmp
xor
aas
pop
repz
jg
xchg
and
adc
sbb
mov
xchg
enter
lahf
sub
mov
nop
and
hlt
dec
add
xchg
xchg
aam
push
adc
aas
out
mov
rcr
fistpl
xchg
adc
inc
cmp
mov
mov
push
and
mov
lcall
jp
pop
or
xchg
arpl
mov
mov
pop
pxor
or
bound
insl
imul
fptan
mov
aas
add
add
inc
jl
in
rcrl
mov
sbb
test
dec
mov
jnp
into
mov
mov
and
inc
sbbb
cmp
ret
js
shll
das
rcrb
mov
pusha
cld
sub
and
test
lock
jmp
cmp
and
or
sbb
mov
and
sub
jae
test
popa
ret
scas
mov
aam
mov
shlb
filds
idiv
repnz
out
pusha
xor
mov
and
mov
sub
jg
stos
sahf
add
xor
cmp
stos
mov
shl
ljmp
xchg
movsb
scas
test
adc
imul
jbe
iret
add
ret
cmp
addl
jge
push
shlb
sub
rcrl
loopne
ret
loope
out
jne
mov
xchg
clc
stos
ljmp
int
and
sub
xor
cmp
out
enter
sbb
xor
or
enter
js
jl
and
subb
in
cmc
movsl
push
pop
mov
inc
imul
popa
mov
inc
scas
mov
xor
push
ret
cli
adc
js
movsl
pushf
addb
add
in
mov
testl
icebp
push
imul
pop
jle
add
loopne
pop
ja
fs
sub
into
push
jle
rcrl
adc
js
or
adc
cmc
push
sbb
int
jo
pop
xchg
inc
dec
mov
outsl
inc
mov
pop
fldcw
pusha
and
cld
cmp
add
mov
loop
sbb
call
mov
adc
repnz
popa
aas
bound
xchg
stos
mov
adc
fs
or
sbb
add
push
cld
mov
mov
ljmp
fisttpl
in
inc
arpl
addr16
data16
push
adc
fidivl
call
or
pop
repz
push
test
mov
pop
xchg
test
ja
jo
mov
xchg
sub
mov
add
or
addr16
stc
sub
inc
lahf
popf
pop
ficomps
fdivs
pop
lret
adc
leave
push
insl
cmp
dec
jecxz
mov
xor
nop
fcoml
pop
sbb
sbb
loope
mov
addr16
push
and
sbb
adc
shrb
sub
jo
dec
adc
and
push
std
nop
xchg
lcall
in
popf
push
xor
mov
sbb
in
dec
and
shll
xor
fs
pusha
aas
jmp
dec
stos
adc
out
lods
jle
push
imul
cmpsl
fnsetpm(287
cmp
arpl
and
or
push
in
jnp
fcmovnbe
dec
sub
pop
stos
addr16
add
aas
subb
pop
xor
mov
mov
ret
and
bound
jg
scas
cmc
fwait
cmp
sub
inc
mov
add
das
pop
push
dec
and
das
jb
bound
bound
les
add
sti
sbb
xor
and
push
sub
add
xchg
mov
lds
addr16
xchg
inc
lea
pusha
push
adc
cli
mov
lock
das
push
sub
push
pop
addr16
mov
xchg
or
test
sti
dec
insl
rcr
ss
or
mov
push
clc
aaa
jae
push
idiv
lock
arpl
out
adc
xor
clc
sub
push
jae
in
mov
scas
dec
and
jae
jge
in
xchg
jecxz
sahf
mov
push
test
pop
stos
jae
jnp
mov
outsb
shll
sub
ffree
arpl
xor
out
inc
nop
mov
adc
push
add
aas
sahf
fisubl
add
push
or
push
pop
rcrl
cmp
push
repz
and
pop
sbb
jl
out
sbb
push
lods
int
imulb
test
jmp
jo
cmp
insl
sbb
push
outsb
fbld
test
stos
mov
adc
sub
inc
outsl
mov
xor
mov
cs
mov
mov
mov
data16
cmp
notl
test
jb
and
fcompl
sbb
stos
data16
scas
enter
aam
push
daa
lock
stc
lret
jle
ror
enter
mov
sbb
repz
mov
push
inc
les
dec
jmp
lcall
arpl
ret
sub
insl
mov
in
xchg
pop
mov
and
or
mov
rorl
dec
jne
je
jo
mov
sbb
inc
xchg
call
sub
cmp
je
fwait
xor
std
andb
les
mov
movsl
loopne
mov
and
into
fs
push
cmpsl
repz
inc
mov
mov
test
dec
mov
sub
loopne
out
cmpb
pop
stos
mov
adc
add
or
dec
sbb
adc
int
jb
mov
lea
negl
dec
push
sbb
ss
loop
inc
jmp
ja
xchg
mov
jg
sub
dec
pop
or
jp
mov
fisubrs
push
mov
rcl
cltd
mov
xchg
sbb
jp
bound
int
andb
lret
inc
aam
push
add
ds
pop
sub
into
pop
xchg
test
inc
push
adc
dec
clts
lret
mov
pop
mov
aad
xchg
mov
pop
xchg
dec
lcall
cmpsb
cmp
mov
or
adc
aad
incb
testb
ljmp
jns
pop
xor
aad
aas
pop
mov
ljmp
mov
loopne
mov
roll
xchg
gs
jl
push
aaa
lds
mov
pop
jmp
xchg
movsl
pop
outsl
js
popa
lahf
pop
xor
xchg
push
inc
mov
jl
mov
jle
mov
mov
aad
jmp
fidivrl
push
adc
insb
les
cwtl
pushf
scas
ret
xor
cmpsb
dec
sub
orb
xchg
jns
in
dec
stc
loope
mov
push
and
mulb
repz
cmp
sbb
push
scas
dec
jg
mov
fwait
test
mov
cld
stos
fldt
je
outsl
add
add
xchg
sub
push
and
adcb
and
enter
jge
sub
jge
ret
xor
jo
jne
push
pop
push
mov
testl
push
roll
xor
sub
jae
push
xchg
mov
push
and
out
jmp
push
xchg
adc
pop
cltd
jo
les
ror
sub
repnz
stos
stc
aas
mov
sub
fdivrl
outsl
and
jecxz
inc
push
subb
cmp
mov
or
or
pusha
out
xchg
fcoms
or
sbb
push
repnz
imul
sub
add
mov
push
orl
ret
jnp
push
test
jl
dec
sub
xchg
xor
sarb
or
fs
in
jge
adc
loop
xchg
push
shll
pushf
push
scas
aad
mov
addr16
adc
daa
push
inc
add
sub
pushf
cmp
sub
inc
dec
fwait
roll
lods
mov
pop
or
faddp
rcr
jge
fisubs
enter
or
or
dec
ret
nop
or
popa
mov
xchg
subl
pop
insl
out
test
mov
push
mov
xchg
cmpsl
push
int
movsb
movsb
call
push
cmp
hlt
dec
inc
or
cmpsb
sbb
cmc
push
mulb
mov
cmovge
lea
rorb
xchg
notl
mov
pop
add
push
scas
xchg
push
adc
int
mov
xor
js
mov
or
sub
mov
jmp
outsl
and
sbb
pusha
jl
insb
leave
and
rclb
jp
into
leave
lahf
stc
jb
insl
dec
adc
add
cmp
xchg
loopne
test
stos
or
bound
or
cli
jmp
call
lret
fst
push
bound
dec
jmp
lods
sahf
pop
outsl
fisubrl
jle
ja
pop
mov
inc
sbb
aas
mov
outsb
xchg
jge
xchg
inc
xchg
dec
rcrl
outsb
mov
lret
out
jle
dec
dec
ljmp
in
add
pop
lret
add
nop
cltd
dec
dec
test
xchg
jo
jbe
sbbl
mov
pop
and
test
jns
loopne
into
mov
dec
outsb
cmp
sbbb
push
jecxz
scas
xchg
or
pop
aad
movsl
arpl
xor
insb
pop
movsl
mov
mov
leave
xchg
mov
mov
sub
loope
fisubrs
out
aam
add
mov
fwait
rcrb
xor
or
test
mov
mov
pop
leave
ss
je
daa
inc
sahf
push
push
repz
test
out
cmp
jb
cmp
cmp
leave
pop
dec
adc
add
call
das
inc
mov
ficoms
movsb
mov
or
hlt
inc
jg
sub
dec
adc
push
enter
dec
mov
testl
popf
sbb
js
jmp
sbbb
xor
sbb
xchg
and
repz
lock
sbb
imul
and
mov
mov
sti
ret
das
mov
inc
dec
mov
cmp
loope
pop
sub
mov
and
ds
ret
fidivl
rcll
insb
ja
aad
jge
lcall
push
jns
mov
arpl
push
push
outsl
pop
sub
fs
bound
out
cltd
imul
ds
push
lods
cmc
mov
cld
popa
cmpsl
in
jg
ljmp
cmpsb
mov
fldenv
mov
popa
pusha
out
lods
pop
es
cltd
loop
addb
popf
mov
call
jno
pop
mov
xlat
clc
mov
insb
insl
out
clc
add
xchg
hlt
or
call
xchg
sbb
adcl
mov
sbb
sbb
test
int
ss
mov
and
insl
idivb
pop
xchg
test
adc
xchg
cmpsl
mov
mov
mov
push
je
sub
ret
push
pop
loop
pop
cmpsb
xchg
or
push
jbe
xor
jl
sarl
and
out
cmpsl
bound
pop
mov
movsb
xor
leave
inc
fadds
repnz
sub
stos
fwait
adc
je
pop
aam
push
jle
imul
int
mov
je
mov
aam
outsl
cli
sti
shrl
scas
iret
and
xchg
arpl
pop
addr16
mov
jo
push
sbb
xchg
xor
loop
push
cmp
enter
pop
cmp
xchg
out
mov
mov
inc
jns
adc
mov
inc
mov
inc
test
hlt
adcb
pop
add
cmp
dec
iret
int
mov
daa
mov
fwait
test
sub
cmp
sahf
outsl
rorl
mov
adc
inc
pop
sbb
loope
aam
push
fisubl
mov
inc
rcll
xchg
outsl
pushf
ja
faddl
mov
inc
xor
sbb
and
lret
sbb
xchg
sbb
hlt
call
loopne
cmpsb
in
cmc
adc
push
sub
cmp
lretw
add
daa
inc
shlb
and
das
pop
test
adc
jg
inc
int
mov
outsb
jnp
mov
mov
mov
in
pushf
outsl
leave
ret
aas
mov
jmp
push
mov
test
cli
sbb
mov
adc
xor
hlt
or
push
sub
scas
pop
add
int
and
jecxz
xor
mov
adc
dec
mov
jl
dec
cmp
mov
mov
cwtl
cwtd
jge
cmpsl
jns
les
mov
aad
sahf
imul
mov
in
xchg
std
mov
outsb
sbb
cltd
fcoml
icebp
mov
mov
scas
rcll
outsb
in
inc
pop
aad
stos
sbb
pop
lahf
cli
xchg
cmp
orb
std
mov
sub
cmpsl
dec
push
dec
mov
xor
inc
int3
aam
inc
mov
and
push
aaa
loop
lods
and
sbb
aaa
ja
fldt
fists
push
jbe
cmpb
mov
scas
hlt
cld
inc
add
in
movsb
xor
add
in
inc
cmp
fxtract
mov
xor
lahf
sahf
subb
into
push
out
fldt
ds
stos
cwtl
xchg
fdivr
iret
and
mov
adc
dec
movsb
aad
das
cmp
xor
andl
ret
lds
push
mov
gs
leave
outsb
shrb
rcrb
in
outsl
sbb
jns
pop
and
push
fidivs
and
cmp
or
dec
stos
dec
loope
lcall
dec
sub
aas
and
jl
or
pop
mov
mov
push
cmp
xchg
iret
loop
push
push
dec
lcall
js
or
xor
mov
mov
jg
shrb
scas
and
fdivr
sub
cmp
cmp
arpl
add
xor
or
aaa
inc
add
iret
xchg
sbb
mov
dec
mov
add
or
fmull
xchg
addr16
out
mov
push
xchg
push
push
in
mov
mov
ljmp
adc
test
in
push
aam
je
sbb
popf
mov
or
pop
scas
adc
add
std
adc
and
xchg
dec
mov
xchg
outsl
dec
aas
xchg
pop
cmp
adc
xchg
and
add
test
dec
mov
ljmp
pop
mov
xchg
inc
outsb
std
mov
jmp
xchg
out
pusha
adc
insb
loopne
fistps
ja
mov
lods
cwtl
sbb
cmpsb
aad
mov
dec
sub
shr
and
daa
push
adcb
or
or
out
dec
jnp
loopne
stos
adc
mov
add
push
mov
outsl
dec
xchg
rorb
dec
inc
inc
mov
mov
adcb
inc
fidivs
nop
addr16
dec
xor
pop
xchg
lret
int3
dec
jbe
pop
test
mov
and
mov
push
daa
popf
inc
test
sbb
lret
in
rcrb
mov
fs
pop
gs
xchg
pop
mov
sub
xor
or
pop
and
aas
xor
inc
fidivrs
push
rcrb
in
inc
inc
fistl
push
fmul
shl
fisubrl
mov
pop
cwtl
scas
sub
leave
sbb
push
mov
add
cld
loopne
lds
scas
imul
imul
arpl
pop
ljmp
cmp
lods
jg
into
jbe
pushf
add
push
dec
mov
jl
ficoml
or
in
aas
stc
or
mov
cmp
inc
fnsave
and
push
jne
mov
orl
xor
pop
pop
stos
test
cli
push
std
or
cmp
pop
jmp
aam
clc
outsb
movsb
xchg
or
inc
dec
mov
les
sbbb
popf
mov
sbb
xor
add
sub
setge
adc
add
call
mov
stc
and
in
gs
fwait
add
sbb
mov
or
dec
inc
jmp
xor
mov
dec
push
sbb
pop
es
add
sub
dec
pop
cld
push
xchg
mov
mov
pop
cmp
xchg
inc
cmp
push
mov
jp
push
or
add
sti
pop
mov
jae
es
jae
mov
sbb
and
push
dec
push
ret
push
lds
push
push
mov
sub
push
sub
sbb
cmp
sbb
xor
stc
movsl
daa
cmp
mov
arpl
nop
sub
xchg
add
test
inc
inc
mov
hlt
mov
cmp
mov
shrl
in
mov
aaa
je
or
nop
inc
push
inc
insl
mov
or
push
inc
xor
insb
fists
mov
test
out
imul
pop
insb
imul
xor
jb
pop
jle
flds
negl
cmpsb
sub
and
mov
add
mov
or
lods
fsub
iret
test
inc
sbbb
jne
adc
in
push
imul
cmp
cmpsl
pop
test
xchg
push
inc
pop
jne
lods
sbb
add
ret
inc
js
jmp
scas
jnp
stos
dec
mov
pop
jmp
addr16
inc
daa
mov
les
and
sub
mov
testb
xlat
cmp
les
jne
adc
lds
mov
sub
cltd
adc
jle
subb
pop
cmc
pop
sub
jno
mov
dec
rorb
loop
or
cltd
or
dec
mov
and
ljmp
cmp
xchg
enter
aaa
xor
ror
test
test
js
int3
or
nop
aas
push
mov
jne
in
inc
push
in
and
add
xor
rorl
leave
cli
jnp
inc
cli
lods
cmpsl
pop
ja
stc
jno
movsb
pop
loopne
mov
push
xor
and
and
or
ficoml
mov
fistpll
and
jno
out
sub
hlt
mov
cmpsl
pop
mov
dec
popf
add
or
lcall
jg
or
bound
push
bound
jno
jns
inc
push
adc
or
mov
jecxz
or
push
in
insb
pop
jle
add
mov
or
mov
lods
movsl
cmpsb
in
popf
sub
ret
ja
pop
adc
data16
or
ret
or
sbb
pop
and
stos
push
xchg
je
dec
inc
lock
jp
insb
jp
stos
xchg
scas
and
cwtl
cmc
fiadds
pop
loopne
hlt
xchg
or
and
xor
dec
adc
mov
jmp
inc
enter
pop
cmp
xor
rclb
add
fisubrl
push
pop
mov
rcrl
mov
test
xchg
adc
xchg
add
popl
into
inc
or
stos
xchg
dec
lea
aaa
push
aaa
jne
fisubrs
jmp
or
popa
inc
sub
int
xor
sbb
mov
dec
cmp
divl
mov
sub
adc
cmp
aad
in
xchg
pop
icebp
movsl
xchg
push
movsb
or
and
mov
jns
xor
cltd
mov
add
inc
sahf
out
std
xor
call
and
push
jmp
nop
push
fisubrs
mov
push
and
inc
push
lea
and
loopew
pop
inc
mov
movsb
mov
push
xchg
and
pop
rorb
jg
xor
xchg
dec
xor
sbb
adc
out
nop
in
pop
sub
add
testl
sbb
fs
xor
xchg
lret
daa
lret
push
jmp
inc
xchg
sahf
pop
jae
jl
jmp
cld
mov
mov
jmp
jo
ret
xor
lret
add
outsw
add
mov
mov
jl
das
sub
cmp
mov
adc
xchg
incb
or
xor
push
rcl
test
ds
inc
aas
inc
sbb
jl
arpl
mov
add
lret
mov
test
xor
cmpsb
arpl
mov
in
or
cli
jns
cmpsb
cld
loopne
in
daa
mov
adcb
mov
mov
sbb
sub
adc
cltd
xor
addr16
in
jp
xor
mov
js
pop
push
jmp
jb
js
jnp
in
lahf
xchg
call
dec
or
mov
xchg
in
mov
fmul
xchg
and
ja
loope
rcll
std
sbb
mov
outsl
pushf
inc
sbb
sub
insb
sbb
pop
mov
push
sbb
jb
frstor
aam
cmp
push
mov
ds
int
pop
mov
add
pop
pop
vunpckhps
and
fnsave
mov
gs
out
and
fnstcw
divl
sub
mov
xchg
push
inc
shlb
lcall
mov
fidivrl
movsb
or
jbe
dec
enter
in
ljmp
dec
fadd
pop
cwtl
cmp
rcrb
xchg
repz
bsf
mov
lock
imul
insl
popa
adc
mov
and
adc
adc
lret
push
fldcw
leave
lds
hlt
imul
mov
ror
mov
xchg
jg
and
pop
notb
dec
sub
xor
lahf
in
arpl
out
mov
sbb
sbb
xchg
fimull
or
sbb
test
xchg
cmp
push
adc
rorb
xor
dec
fldenv
push
movsl
outsb
outsl
jne
adcb
popl
loope
ficoms
mov
int3
fs
xchg
stos
add
int
rolb
jg
and
cmp
sbb
mov
and
fidivrl
scas
call
rcr
or
int
andb
cmpsl
sub
insl
orl
push
sbb
adc
cmp
rcll
push
mov
mov
jns
lret
add
test
movsl
inc
loop
sahf
std
add
mov
push
in
or
mov
outsb
mov
loop
lret
dec
loop
call
jo,pt
jg
adc
ficompl
xchg
jae
dec
cmp
insl
and
push
jmp
push
or
mov
pop
push
sahf
stos
sahf
in
test
cmp
pop
mov
jnp
movsl
repnz
push
dec
pop
hlt
ja
je
xchg
sahf
ss
bound
xor
frstor
mov
int
bound
dec
insb
out
pop
jae
mov
mov
mov
inc
test
add
daa
sbb
mov
xchg
fsubl
lds
insl
xor
xor
and
aaa
les
mov
ds
sub
jp
hlt
inc
pop
shlb
ret
or
testl
inc
or
into
js
jl
mov
scas
mov
cmp
pop
jb
jge
leave
or
lods
popa
sub
imul
lret
fcomp
mov
jge
cltd
lods
repz
jmp
test
mov
jo
out
aad
cli
call
pop
and
and
shlb
push
jbe
or
cmp
cwtl
sub
lds
imul
push
push
mov
lahf
cmpsb
cwtl
loop
loope
jl
mov
je
mov
movsl
nop
sbb
xbegin
or
aad
daa
std
enter
aad
mov
mov
int3
jle
es
sbb
mov
es
sbb
mov
ficoms
lea
subl
sbb
dec
xchg
sbb
push
dec
shrb
sbb
add
mov
loop
int3
cmc
pop
mov
xchg
pusha
pop
mov
mov
int
cmp
jbe
ja
outsl
push
test
mov
mov
fs
enter
ror
lret
icebp
arpl
fwait
mov
and
and
mov
out
sarl
hlt
out
rcrl
scas
fwait
jo
bound
push
xchg
rcrb
scas
sub
fmuls
cmpsb
or
loop
leave
test
jmp
fdivr
ds
push
xor
scas
icebp
sbb
jns
mul
mov
fdivr
dec
dec
xor
jp
adcl
jp
aaa
dec
xchg
push
sub
xor
daa
lods
sub
dec
iret
jae
rcl
xor
arpl
cmpsb
dec
pop
jb
mov
loope
into
and
int
jmp
cmp
or
jo
adc
jecxz
pop
outsl
mov
mov
xchg
mov
out
sbb
lock
shrb
and
dec
mov
xchg
das
xchg
or
arpl
jne
repnz
daa
test
jo
sti
and
jmp
mov
push
mov
ret
loope
mov
add
xchg
push
mov
icebp
inc
outsb
mov
dec
mov
pop
lret
mov
add
xchg
sbb
dec
lcall
push
out
and
rcl
loope
xchg
loop
in
pop
mov
scas
dec
dec
xchg
cmpsb
lcall
push
and
mov
test
mov
cmp
xchg
lahf
or
pop
sbb
sbb
cmp
mov
inc
mov
test
insb
inc
push
and
dec
adc
adc
and
jge
jle
les
xor
js
or
ljmp
pop
sub
xchg
call
mov
insb
adc
push
or
cmp
inc
push
sub
add
xor
fldenv
mov
cmc
scas
cmp
cmp
xchg
xchg
jg
sub
xor
push
jmp
call
fidivrs
mov
or
xchg
add
lcall
add
lcall
sbb
push
movw
mov
push
int
mov
pop
adc
pop
dec
sahf
ljmp
jae
xor
pop
mov
cwtl
cmc
mov
pop
imul
pushf
adc
repnz
mov
mov
adc
mov
xchg
int
shlb
les
add
dec
sub
leave
aas
hlt
sub
adc
xchg
imul
daa
call
push
add
sub
testb
cmp
call
pop
test
cld
in
sub
enter
jno
adc
ret
popa
sub
jb
rcll
and
mov
cmp
dec
jmp
xor
xchg
or
xchg
pop
pop
lcall
scas
dec
ret
into
loop
sbb
aam
popa
mov
xchg
or
lods
pop
ja
repnz
sbb
fwait
outsl
cld
xchg
lret
mov
mov
mov
or
in
outsl
xor
sub
dec
pop
sub
push
dec
xchg
aam
test
fldt
inc
xchg
rorb
mov
movsl
das
dec
xchg
xchg
in
xlat
or
scas
fadd
push
test
lods
popf
les
or
cmc
cmp
sbb
push
pop
push
in
cs
and
test
insl
sbb
or
jb
jno
fmuls
dec
xchg
popf
hlt
in
cmp
cmp
dec
jge
test
std
data16
push
jle
mov
jb
bound
cmc
mov
sub
hlt
xchg
test
jl
in
pushf
rcl
mov
data16
push
pushf
movsb
jecxz
test
rcrb
mov
inc
inc
rorb
xchg
jp
mov
cmp
clc
pop
and
fisubrs
jmp
inc
call
cli
int3
shr
adc
cli
mov
mov
fxch
fdivrs
jae
fisubs
add
jbe
cmpsb
les
clc
into
xchg
inc
jp
mov
negl
sbb
xchg
cmpsb
lcall
loopne
or
flds
dec
push
push
cmpsl
stos
jbe
push
sub
imul
sbb
insl
ud0
xchg
and
sbb
or
inc
add
lret
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
sbb
ret
bound
pop
bound
adc
test
cmpsl
repz
inc
fnstenv
sbb
jecxz
and
mov
add
mov
inc
cmpsl
repz
pushf
xchg
xchg
stos
inc
inc
addr16
leave
rolb
scas
mov
fcomps
xchg
mov
into
mov
mov
xchg
add
jl
sbb
inc
mov
add
dec
loopne
into
daa
mov
mov
subl
addr16
sub
dec
and
dec
fisttpl
cmpsb
int
in
repnz
or
es
pushf
push
ljmp
fs
dec
shr
mov
cmp
pop
dec
jle
clc
jge
sub
imul
cs
mov
imulb
and
test
dec
scas
loop
push
xchg
dec
mov
imul
sbb
xchg
dec
mov
jmp
mov
sbb
lds
jo
scas
and
and
xchg
mov
dec
or
push
aaa
test
add
and
mov
scas
into
mov
jecxz
xlat
jb
iret
cmp
bound
pop
idivb
mov
mov
shrl
pop
sbb
icebp
test
mov
and
das
adc
into
lea
cltd
push
push
pop
scas
imul
insb
enter
pop
ret
mov
push
adc
jno
lock
divl
mov
inc
pop
mov
lods
mov
mov
add
mov
in
mov
add
leave
inc
hlt
call
xchg
adc
sbb
pop
mov
pop
jp
lcall
cld
pusha
fists
aas
imul
cmp
stos
mov
cli
popa
jno
loope
es
pop
pop
test
bound
outsl
cld
xor
bound
dec
test
and
cmpsb
inc
or
pusha
leave
jae
aaa
xchg
fidivl
aad
in
adc
in
test
call
xor
jmp
test
mov
mov
mov
and
addr16
dec
sub
cmpsl
mov
cmp
and
and
sub
cmpl
inc
out
bound
fdivrl
mov
stos
adc
xchg
push
sbb
jp
xor
mov
bound
mov
adc
mov
mov
leave
jb
scas
pushl
xlat
jp
pop
push
das
xchg
mov
mov
mov
daa
jecxz
mov
mov
divl
and
adc
and
adc
adc
test
sbb
or
leave
or
jno
push
mov
cltd
lret
sbb
jbe
xor
repnz
and
lret
add
push
mov
mov
fnsave
push
cwtl
mov
inc
mov
cltd
cmpb
pop
mov
lret
fstl
jmp
and
outsl
cli
mov
into
jecxz
cmp
dec
nop
addr16
rclb
ret
std
pop
stc
enter
fnstenv
dec
mov
cmpsl
jle
adc
and
test
sbb
mov
push
aam
sub
xchg
test
jmp
adc
dec
stos
xor
inc
adc
cltd
and
arpl
xchg
inc
jecxz
call
int
imul
imul
xchg
adc
fwait
pop
mov
cltd
icebp
inc
inc
mov
push
xchg
sbb
mov
movsb
pop
sbb
xchg
in
dec
cmp
adc
nop
cmpsl
fbstp
xchg
fwait
mov
ret
fisubl
add
mov
mov
cmp
pushf
sar
xchg
test
jp
dec
mov
jg
add
dec
std
mov
ret
addr16
sub
cmp
cmp
pop
bound
mov
pop
fistpl
inc
sub
rcrb
divb
aad
push
test
pop
push
xchg
jb
push
ja
mov
mov
push
dec
jb
push
lret
add
aaa
push
cmpsb
dec
je
mov
mov
push
adc
pop
sub
stos
jl
cmpsb
dec
dec
cwtl
adc
mov
clc
out
mov
popf
and
cmpsb
cld
sbb
and
rcrl
inc
add
or
out
mov
push
rorb
cmpsl
mov
jl
std
fcomip
lock
insb
push
sub
xchg
mov
aam
int3
push
movsb
cltd
std
fsubrs
mov
dec
aas
insl
lret
cmp
cmp
xchg
shrl
mov
mov
push
xchg
data16
pop
adc
mov
lea
subb
mov
imul
mov
and
lea
scas
cld
fdivr
inc
nop
mov
loop
xchg
jmp
add
or
lods
cmp
dec
fnstenv
test
call
inc
out
dec
push
jle
or
mov
aad
jo
mov
sbb
pop
push
fadd
cltd
jmp
cmpsl
dec
add
sub
pop
sbb
mov
inc
imul
xchg
rol
cmpsl
mov
jl
pop
mov
cld
inc
daa
js
frstor
imul
and
adc
aam
data16
and
test
add
std
movsl
push
xchg
push
add
adcl
mov
dec
mov
cs
xor
mov
mov
mov
push
mov
and
repnz
mov
push
ja
mov
inc
adc
cs
into
and
adc
mov
adc
decl
sarb
xchg
stc
cmpsl
jb
loopne
stc
into
push
mov
mov
cmp
dec
sub
out
bound
pop
repz
pop
out
pop
aas
popa
add
push
pop
pushf
bound
xor
outsb
in
ficoml
bound
pop
sub
notb
inc
dec
pushf
inc
aaa
dec
inc
xlat
add
sbb
lds
add
lret
dec
fisubs
adc
addr16
dec
repnz
mov
adcb
sarl
ficomps
sub
xchg
ja
xor
adc
ljmp
fsubl
popa
fsubl
sbb
pop
inc
push
sbb
int
sarl
dec
sbb
jmp
or
sbb
mov
repz
jo
movntq
out
call
jo
add
repz
rclb
shr
push
loop
popa
js
dec
adc
mov
dec
je
jae
imul
jnp
push
lock
jbe
mov
xor
jns
cs
sahf
data16
outsl
shll
int3
lods
or
push
test
mov
jmp
mov
sbb
inc
mov
add
mov
push
in
cmpsb
inc
test
test
adc
xchg
xchg
repz
mov
ficoms
xor
sbb
scas
mov
shr
cmp
mov
push
xchg
or
pop
loop
lcall
mov
in
pop
and
xchg
sbb
pop
xchg
sbb
add
ja
pop
leave
enter
fsubs
jg
ja
mov
add
sti
jnp
shld
mov
mov
and
mov
std
ja
fcmovb
test
lahf
xchg
sahf
lret
xchg
adc
xchg
pop
stos
mov
shrb
lahf
push
out
sahf
and
inc
in
mov
mov
xchg
pop
sar
mov
orl
xor
je
js
add
int3
mov
stos
lock
mov
shrb
jmp
jl
fidivl
nop
and
mov
popf
xlat
and
in
repz
test
rorb
mov
cmp
cmpsl
in
mov
xor
fisubrs
or
fisttps
inc
nop
push
dec
dec
dec
add
pop
push
mov
mov
hlt
outsb
scas
cmpsb
mov
push
data16
mulb
xlat
mov
cs
push
jge
lods
test
push
arpl
in
xchg
pop
sbb
cmp
cld
pop
pop
dec
test
shl
dec
push
push
cmp
lea
mov
mov
fcom
xchg
mov
push
inc
xor
iret
mov
cmovle
call
jne
out
mov
clc
dec
nop
jmp
js
xchg
sbbb
roll
loope
scas
daa
and
cs
cld
jg
cld
or
sub
jl
inc
call
test
out
mov
push
in
push
std
pop
imul
std
xor
push
mov
push
inc
lcall
popa
loope
in
mov
mov
sbb
adc
stos
sub
push
add
out
mov
ret
lock
test
out
out
mov
dec
xchg
xchg
movsl
popf
out
sbb
inc
cmp
add
stc
jecxz
push
lret
test
adc
jbe
cmp
pop
cwtl
xor
js
outsb
shl
es
push
xor
and
jbe
dec
jg
shlb
push
sub
and
jecxz
push
xchg
aas
aad
push
mov
jecxz
adc
mov
pop
push
aad
hlt
jge
insl
loop
cmp
xor
jge
lock
sbb
cwtl
sub
es
jge
das
push
push
data16
pop
push
sub
and
fisttpl
in
fiaddl
sti
xchg
adc
cmp
lcall
hlt
mov
arpl
inc
adc
dec
rclb
jbe
pop
je
out
jge
iret
xchg
sbb
pop
insl
enter
mov
rcrb
jmp
push
jnp
dec
int3
shl
fdivs
cmp
mov
pop
sub
mov
test
jne
push
cmpsl
aaa
in
enter
mov
roll
call
out
movsb
sti
push
sahf
loop
cmp
push
cs
sub
dec
add
jae
iret
test
mov
loop
aaa
push
and
data16
add
fidivl
xchg
into
lods
mov
xlat
in
outsl
and
sub
or
jbe
rorb
mov
rolb
stos
mov
mov
fistpl
or
sahf
outsl
pop
or
cs
mov
push
stc
xchg
pop
fwait
aaa
add
jne
flds
sub
mov
pop
cwtl
sub
jbe
mov
and
rcrb
push
mov
sbb
sub
mov
cli
adc
paddw
test
mov
cld
sbb
incb
cmc
mov
testl
push
cli
dec
daa
or
mov
pop
mov
mov
sub
or
pop
dec
sbb
mov
jae
cmp
mov
and
lcall
ds
sub
xorb
or
cmc
adc
ret
cs
fisttps
fidivrl
cli
or
cs
outsl
andb
jg
ret
sarl
int
pop
sahf
lea
aas
lret
jecxz
or
inc
sub
xlat
inc
and
jae
pop
shll
stc
stos
hlt
imul
xor
clc
mov
inc
add
mov
pop
loop
in
mov
push
cmpsl
test
aas
lods
pop
iret
jp
cmp
inc
lahf
jns
adc
fldt
repnz
shll
xor
test
push
outsl
xor
adc
jmp
rcrl
mov
pop
aam
jl
jecxz
movb
and
dec
jmp
aas
aaa
pop
outsl
daa
mov
pop
loope
inc
insl
idiv
add
movsl
cmp
cld
ja
test
cmp
push
iretw
jmp
jne
ret
jl
scas
orb
call
mov
adc
adc
int3
xor
mov
into
cli
xchg
test
mov
aaa
sbb
gs
daa
xchg
dec
pop
mov
inc
inc
pop
inc
popa
pushf
pushf
sbb
int
and
movsb
lret
fdivs
repz
push
shl
mov
fs
push
mov
add
mov
clc
out
xchg
sbb
add
flds
sbb
dec
or
shll
jge
out
push
xchg
lods
lahf
out
stos
mov
mov
enter
mov
pop
mov
imul
lret
push
outsl
and
aas
adc
mov
jecxz
pop
mov
rcrl
or
lds
cs
fldcw
in
mov
xchg
das
pop
jb
test
and
mov
adc
sbbb
dec
jl
sub
pop
sar
cmpsb
cmp
add
jnp
fistl
bound
out
aam
or
push
sub
nop
pop
out
cmp
cmp
mov
aaa
sub
test
lock
mov
fisubs
sbb
loope
mov
test
mov
sub
pop
sti
jp
push
jmp
arpl
test
out
imul
xor
xchg
enter
or
loopne
push
xchg
cmp
rclb
shl
xor
push
lea
movsl
gs
mov
clc
pop
ss
test
js
mov
lcall
ficoml
in
cmp
movl
pop
mov
jbe
ss
pop
push
add
mov
repnz
js
inc
xor
push
dec
pop
adc
jg
pushf
rcrl
and
test
cld
pop
shl
pusha
jno
loop
jge
pop
jle
push
shll
mov
dec
fbld
pop
cld
std
jne
icebp
aaa
xlat
and
jle
mov
ljmp
stos
mov
inc
mov
pop
xchg
add
and
jnp
arpl
push
or
mov
mov
dec
xchg
loope
and
jl
out
inc
push
jle
pop
out
lock
push
add
push
push
in
repnz
push
pop
and
and
jne
test
jecxz,pn
pop
arpl
adc
lret
xor
into
or
mov
inc
jbe
or
sbb
xor
ja
adc
dec
adc
in
jp
pop
add
js
std
daa
andl
cmc
sub
cld
fisubl
pop
clc
mov
or
pop
push
push
inc
push
in
mov
xlat
aad
push
loopne
ret
movsl
adc
mov
pop
xchg
mov
test
cmp
vphaddudq
insb
xchg
pop
jle
xor
shrb
xchg
pop
push
or
adc
xchg
aas
test
ss
xor
adc
out
movsl
stc
add
add
daa
xlat
test
ficoml
fiaddl
testb
rcl
mov
rcrb
jp
inc
pop
cmp
ret
pop
dec
mov
push
inc
push
adc
xchg
loop
mov
imul
call
rorl
rcll
jns
enter
mov
sub
je
imul
sbb
push
fimull
lahf
xor
inc
bound
out
movsl
popa
mov
stos
dec
adc
cmp
sub
sub
rorb
rorl
add
add
and
and
jbe
mov
xchg
add
test
fwait
xchg
dec
mov
sbb
ds
lret
xchg
lahf
xchg
pop
cmc
push
notl
mov
cmp
mov
clc
inc
xchg
push
mov
jle
faddl
pop
sub
cmpsl
into
outsl
xor
mov
cmp
mov
cld
xchg
fidivs
mov
mov
jb
in
add
sbb
rol
jp
movlps
iret
outsb
loopne
and
ss
ds
cmp
out
sbb
lea
rcl
jb
sub
push
lahf
xor
insb
bound
ljmp
mov
popa
out
mov
outsl
xor
push
push
lret
lcall
sbb
mov
push
xorl
loope
pusha
call
out
sbb
jnp
repz
ljmp
out
adc
xor
and
mov
sbb
pop
lock
lods
mov
cmp
stc
mov
jb
nop
ja
jbe
xchg
outsl
inc
popl
addr16
addb
adc
lret
inc
mov
dec
sbb
jge
into
push
xor
jg
sub
je
in
lock
add
clc
mov
cld
ss
push
movsl
mov
insl
ja
jne
out
scas
outsb
adc
into
and
sbb
mov
mov
fistpl
jmp
les
iret
jb
lret
aad
sbb
sub
in
lret
and
push
cli
adc
dec
cld
pop
repnz
push
iret
cmpsl
mov
mov
mov
fmull
push
inc
pop
icebp
mov
lds
repz
pushf
mov
ss
pop
subl
pop
jmp
flds
je
xor
js
in
and
pop
mov
push
es
stc
inc
insb
inc
jne
inc
fisubl
testl
mov
or
ret
stos
call
pop
sub
sahf
mulb
ret
mov
sub
jle
xor
mov
lea
adc
clc
add
jo
ret
inc
cmpsl
or
movsb
stos
aam
mov
je
push
icebp
xchg
aas
test
movsb
fs
pop
mov
fwait
jle
in
bound
ds
and
stos
cli
ja
adc
stc
mov
imul
cmp
cmc
fistpll
out
xlat
scas
cli
ja
cltd
lock
les
push
sbb
adc
push
cmp
out
iret
mov
push
leave
repnz
cmpsl
sub
loopne
xor
push
test
frstor
testl
andb
inc
inc
sbb
les
push
clc
hlt
sbb
cmpsb
test
push
dec
mov
jb
pop
int3
dec
orb
push
mov
fcmovu
into
shlb
sbb
cmp
scas
sub
pop
add
inc
shlb
andl
sbb
dec
call
fidivl
mov
fldt
ret
in
and
lea
pop
xlat
push
push
dec
ror
pop
cmp
enter
mov
mov
dec
lds
rcrl
sub
or
pusha
pop
xor
mov
fcomps
or
sub
sarb
pop
mov
jae
pop
mov
dec
push
mov
stc
dec
mov
mov
sbb
je
mov
cmp
test
je
push
xchg
dec
dec
mov
outsb
sub
cmc
shlb
jp
std
mov
clc
push
cmpsb
rcr
pop
push
jnp
lea
cmp
pop
cmp
sub
or
xor
pop
dec
data16
ror
cmp
cltd
sbb
mov
inc
add
out
dec
aad
mov
pop
adc
in
push
dec
pop
xchg
lock
sahf
sbb
cmp
repz
iret
push
xchg
sub
add
call
leave
push
shrl
iret
repnz
out
cmp
flds
aas
jno
xor
shrl
pop
xchg
inc
and
push
mov
pop
in
lods
dec
push
mov
xchg
xchg
test
push
into
das
cmp
sub
mov
into
fwait
sbb
adc
mov
idivl
xor
push
ja
lods
nop
mov
adc
in
cmpsl
daa
test
mov
push
mov
xchg
leave
incb
lods
stos
sbb
mov
mov
jo
stos
sub
lds
scas
dec
push
mov
cmp
sub
mov
sub
or
pop
push
pop
iret
jmp
and
lret
test
jb
fdivrl
in
stos
in
mov
xchg
push
push
sub
les
clc
into
and
lret
add
sub
xchg
xor
and
imul
bound
enter
mov
lds
mov
jle
and
nop
fcmovbe
push
shlb
in
xchg
enter
outsl
cmp
jl
mov
jl
out
mov
xchg
aam
push
insb
leave
clc
stos
mov
and
out
shl
mov
pop
and
jecxz
or
adc
xchg
xor
jns
inc
in
ss
mov
ficompl
testl
lea
jnp
sti
sub
hlt
mov
daa
push
pushf
push
push
jns
test
push
stos
imul
or
lret
push
sub
jbe
sub
cli
rclb
lret
inc
shr
and
push
or
push
dec
sub
les
sub
bound
cmp
xchg
imul
sub
jge
stc
leave
sahf
pop
sub
mov
dec
xchg
test
dec
xor
dec
cmp
out
mov
mov
dec
stos
push
cmc
repnz
xchg
subl
sbb
xchg
mov
repz
lcall
out
jbe
aad
dec
fsubl
sub
dec
mov
cwtl
cs
inc
sti
sub
data16
xchg
cmp
or
arpl
or
je
arpl
std
or
push
enter
cmp
fists
hlt
repz
cld
jmp
inc
dec
outsl
xor
mov
stc
scas
ret
addl
xor
xchg
aam
cmp
xor
sbb
test
nop
mov
mov
push
sbb
in
jnp
ss
sub
icebp
mov
nop
jae
xor
pusha
mov
loope
pop
je
mov
inc
lods
cmp
xchg
adc
lret
dec
ja
mov
jg
add
and
cli
cmc
sub
and
jl
cmp
pop
jb
mov
xor
adc
cmp
frstor
xchg
mov
dec
fldlg2
and
lods
inc
imul
jb
sub
jmp
add
mov
or
cli
mov
push
sub
aad
loopne
add
mov
cwtl
mov
shrb
mov
cmc
out
in
pop
popf
add
shrl
cld
scas
and
addb
lods
push
and
mov
adc
xor
fdivrl
into
or
xor
test
mov
mov
xchg
data16
rcll
sbb
mov
movsb
lock
add
clc
xor
add
gs
adc
bound
adcb
or
jno
jmp
jne
loop
out
aaa
lcall
scas
movb
jae
test
mov
test
loope
mov
or
fdivl
mov
mov
push
or
test
sbb
pop
push
fnstenv
std
out
insb
or
rclb
je
xor
jmp
frstor
or
push
iret
cld
push
popf
rcll
nop
add
inc
lret
add
and
aas
push
lcall
push
xchg
popa
mov
in
fidivrs
popa
xchg
popf
jne
dec
fisubs
pop
pop
or
in
and
adc
scas
push
mov
fcomip
inc
cmp
cmp
ja
rorl
inc
into
mov
mov
push
leave
mov
mov
cmp
mov
gs
lods
adc
push
add
push
shlb
loop
enter
stos
dec
and
ja
aam
xor
repz
sbb
jmp
lds
repz
enter
xor
int
enter
ss
cmpb
dec
push
stos
push
outsl
jg
dec
mov
inc
sbb
ficoml
cmp
in
mov
in
jmp
lea
mov
push
xchg
inc
mov
int
mov
scas
aam
insl
sub
xchg
nop
mov
ljmp
mov
mov
lret
lret
js
mov
out
or
aad
mov
es
adcb
lock
enter
pop
add
sub
jecxz
lods
push
mov
mov
xor
cmp
mov
add
cs
into
push
cmp
cltd
xor
es
fistpll
xor
push
or
mov
sub
xor
dec
popa
inc
adc
xchg
mov
xor
fdivp
jnp
arpl
mov
jg
pop
push
jp
test
mov
mov
mov
test
inc
mov
mov
mov
cmp
add
mov
loope
mov
ljmp
les
fxch
inc
sub
fdivrl
mov
push
xor
sbb
popa
ret
vpaddusw
cmc
push
je
stos
sub
jmp
xor
xor
test
add
fwait
inc
push
and
add
inc
inc
sbb
loope
sbbb
or
aad
stc
int
jmp
movsb
xor
push
xchg
aad
or
fs
mov
lcall
and
hlt
push
add
push
icebp
xor
xchg
and
cmp
xchg
xlat
xchg
cmpsl
xchg
cmp
and
bound
sahf
push
in
aam
pop
mov
mov
pop
out
push
popa
xor
dec
sub
push
sub
das
nopl
fs
xor
xor
dec
rcrb
bound
lods
fcoml
mov
outsl
jle
imul
ja
mov
loop
dec
add
xor
xchg
enter
std
jg
aad
mov
cmc
pushf
mov
cmp
cmp
sbbb
das
jg
xchg
dec
xor
push
and
jmp
mov
inc
insb
jae
mov
out
test
cmp
mov
cmp
mov
imul
jne
lea
fwait
cmpsb
cltd
pshufw
mov
mov
cmp
scas
adc
mov
repnz
std
pushf
movsb
movq2dq
sub
dec
pop
ds
scas
cmp
shlb
cmp
dec
enter
das
scas
repnz
int3
leave
sbb
leave
fists
xchg
rolb
inc
in
inc
orl
xor
or
ss
pushf
mov
xchg
ret
mov
fistl
adc
mov
gs
mov
and
movl
jg
xchg
mulb
add
xlat
lret
add
addl
rorl
pop
and
shrb
push
repz
insl
and
mov
dec
pusha
in
sbb
cmpsl
sub
outsl
jbe
loopne
enter
push
adc
push
je
jecxz
dec
shl
jecxz
jno
adc
cmpsl
cmp
shlb
lods
cmp
cmp
jno
loope
mov
lret
sahf
jle
mov
loop
jl
jl
fcmove
jge
adc
int
lods
pop
inc
shl
pop
push
repz
mov
jae
mov
aam
dec
or
icebp
sti
addb
lret
sub
or
stc
mov
lock
loop
mov
clflush
mov
sub
test
addr16
add
jno
mov
mov
fsubr
fwait
cmpsl
stc
jae
jmp
je
or
pop
mov
mov
push
pop
mov
ss
out
cmp
lock
inc
jbe
cmpsl
cmp
pop
fldcw
push
daa
pop
sbb
insl
cmpsl
dec
xchg
mov
xor
jne
out
push
pop
pop
xchg
adc
push
push
into
roll
outsb
orl
lahf
dec
cmp
pop
test
adc
in
out
repz
ficoml
idivb
rcrb
dec
xor
addr16
addb
jns
mov
sub
repz
lock
shl
bswap
insl
test
sub
out
and
adc
insb
mov
inc
out
imul
leave
outsl
out
ret
jne
lods
enter
xchg
lea
pop
push
and
shlb
mov
and
sbb
cwtl
push
pop
lret
lds
mov
in
add
jbe
jb
pop
scas
sub
mov
leave
inc
cmpl
jae
imul
cmpsb
sub
mov
sbb
shrb
loop
mov
pusha
mov
jae
push
dec
repz
jo
iret
in
mov
push
call
cmp
push
fwait
ret
sub
xchg
sbb
cmc
xchg
fisttpll
call
mov
xor
or
aas
push
dec
hlt
and
repnz
mov
mov
adc
mov
xor
xchg
xchg
js
sbb
out
push
lret
inc
in
sbb
mov
sti
test
mov
rorl
mov
inc
lods
in
xor
ljmp
jecxz
adc
xchg
push
add
loopne
or
adc
rcl
mov
mov
xchg
pushf
inc
mov
inc
dec
jp
hlt
or
loop
lcall
icebp
daa
xchg
lods
movsl
mov
jo
adc
cmp
ja
add
push
pop
push
lret
ret
adcl
ja
stos
es
sub
mov
lahf
add
enter
insl
xor
inc
mov
lods
cmc
mov
es
push
mov
movsb
mov
shl
sbb
inc
gs
and
rol
fneni(8087
addl
pop
dec
sbb
mov
imul
cmpsb
mov
xor
int
stos
insl
aad
outsl
je
push
and
es
or
in
sub
push
push
out
inc
lret
mov
and
loop
test
arpl
sbb
push
stc
nop
mov
popf
mov
mov
cmp
xchg
call
pop
movsl
or
mov
sbb
insb
int3
ljmp
jbe
and
lret
mov
inc
fldt
and
aaa
test
jns
rcl
cmp
mov
ljmp
adc
jns
mov
xchg
jge
sub
cltd
xchg
jnp
mov
cmpsl
pop
mov
ljmp
ss
adc
add
rcr
cmovne
das
call
fdivr
into
sbb
inc
fsts
test
mov
lahf
add
or
jnp
rcrl
xchg
fldpi
pusha
and
in
inc
sbb
sub
jmp
mov
ds
xor
lret
xchg
sbbb
mov
addr16
test
mov
mov
in
cmpsl
aaa
test
xor
and
pop
scas
cli
lcall
mov
mov
das
shr
push
or
mov
out
sbb
imul
sbb
sbb
clc
mov
icebp
mov
dec
lahf
dec
cs
outsb
js
add
shlb
xchg
out
mov
lock
and
jmp
inc
adc
adc
aas
fstpl
fbld
push
insb
into
rcrb
clc
jp
int3
mov
push
int
cltd
repz
sub
sbb
add
push
xor
xchg
or
mov
andb
sub
cmp
ret
pusha
xchg
in
xor
and
mov
jno
mov
stos
data16
mov
leave
add
ss
xchg
jnp
jge
xor
arpl
jle
add
or
adc
jno
inc
icebp
xor
push
ror
jmp
xlat
ss
adc
cmpsb
minps
std
pop
jl
roll
mov
test
pusha
adc
xor
fisubrl
rorb
xchg
pushf
push
pop
jecxz
pop
stos
arpl
pop
rclb
mov
xchg
lea
adc
imul
lods
lea
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
not
data16
bound
pop
bound
add
fnstsw
stos
pop
stos
test
push
xlat
fidivs
cmp
pop
adc
das
mov
push
jo
dec
push
icebp
mov
ljmp
push
movsb
sub
xchg
imul
mov
xorb
jmp
mov
stos
lods
push
gs
xor
jmp
inc
es
and
leave
mov
mov
ret
ss
lods
int3
xchg
lods
inc
sub
push
js
ret
mov
cltd
outsl
pop
sub
sub
icebp
inc
push
call
dec
mov
sub
test
mov
sbb
mov
sbb
gs
js
push
sub
mov
test
sbb
pop
cli
mov
mov
mov
xchg
mov
xor
loop
icebp
xor
repz
xchg
dec
cmp
dec
pusha
xor
mov
sub
lods
js
out
jb
inc
adc
inc
mov
mov
loop
pop
repnz
jg
inc
mov
push
xchg
xchg
into
repnz
mov
adc
int3
push
adcl
fsubrl
cli
and
xchg
cmp
sbb
sub
mov
ljmp
rolb
testb
jle
xor
jmp
stos
int3
lods
imul
les
pop
xor
and
bnd
lret
movsb
testl
mov
inc
mov
jns
pusha
cmp
add
addr16
sbb
shlb
and
fimuls
mov
out
and
aas
dec
pop
jle
xor
push
insl
jb
fs
rcll
inc
arpl
push
mov
mov
jecxz
sti
cwtl
jp
xor
mov
roll
sbb
out
mov
nop
loope
jp
fisubrl
cwtl
dec
movsl
mov
push
bound
mov
bound
scas
and
inc
dec
call
int
mov
mov
xchg
cmpb
or
or
out
dec
pushf
and
mov
lea
lret
fildll
jne
pop
add
fs
jge
jbe
mov
or
pop
inc
jo
outsl
stos
mov
fistps
sti
movsb
dec
mov
fisttpll
add
inc
insl
in
xlat
lods
fcompl
sar
movsl
iret
xlat
mov
es
xchg
loopne
sahf
cmp
or
xchg
pop
notb
popf
add
jbe
cmp
cmpb
cmp
pop
out
add
jg
adc
pop
mov
aaa
cmp
push
xor
js
mov
dec
ret
cmc
inc
cmp
pop
leave
pop
jns
push
xor
xchg
push
mov
mov
pop
sub
sbb
pop
add
mov
and
fmull
mov
jge
sub
push
pop
insb
gs
lret
push
jl
lcall
push
mov
dec
mov
inc
adc
xchg
adc
pop
test
cs
xchg
or
lock
addb
gs
psubusb
mov
mov
push
pusha
aam
xor
jmp
incl
adc
ja
ret
stos
jns
das
mov
test
icebp
fs
pusha
and
pop
jne
divl
mul
cmp
cmp
fidivrs
adc
mov
pop
inc
movsl
stos
int3
test
and
fisubrs
inc
xchg
adc
bound
out
test
fwait
mov
xchg
xorb
mov
divl
sub
popf
cmpsb
jae
xlat
add
pop
jo
insb
mov
jno
clc
push
test
mov
cmp
add
xor
fstp
cld
cmpsl
mov
in
imul
pusha
and
and
fnstsw
cli
xchg
adc
or
mov
xor
dec
into
fdivs
mov
xlat
or
dec
mov
imul
movsb
jnp
jb
mov
pushf
cmpsl
outsb
push
and
out
fdivrs
out
mov
stos
cmpsl
adcl
and
insb
nop
ljmp
les
xor
xchg
xchg
cmp
aas
xchg
in
mov
push
inc
lcall
cld
dec
aad
sub
and
in
jle
into
data16
add
mov
data16
sub
or
mov
push
nop
mov
or
dec
mov
clc
sti
cmp
jg
sbb
mov
stos
pop
add
mov
enter
call
fnstsw
movsb
jecxz
imul
outsb
roll
mov
leave
cwtl
ss
cli
mov
xchg
scas
shll
imul
int3
pushf
pop
testl
adc
ret
idivl
adc
xchg
inc
and
xchg
test
scas
insb
fs
repnz
pop
mov
stos
mov
mov
stc
mov
xchg
je
mov
sub
outsl
cmc
xor
adc
jb
movsb
test
cld
or
adc
test
int
push
jmp
pop
cmp
imul
mov
inc
inc
js
ret
sub
inc
divb
jp
cwtl
popl
add
xchg
js
dec
cmc
sbb
xchg
add
fs
or
andl
std
js
push
and
test
and
dec
push
ret
mov
cmpsl
jl
shrl
sbb
es
inc
mov
or
mov
jp
je
dec
sahf
out
cmp
pop
test
rcrl
pop
in
pop
out
mov
fcmove
add
in
jle
pop
pop
push
cwtl
aam
test
out
out
mov
out
mov
out
pushf
jg
cmpsb
mov
jg
test
mov
or
aad
call
mov
xor
scas
loope
inc
mov
jecxz
mov
loop
mov
inc
int
je
jns
sbb
mov
popf
push
frstor
mov
mov
dec
stos
push
xchg
in
clc
mov
cmpsl
and
sbb
jnp
stos
mov
xor
mov
shll
ret
sbb
adc
repnz
xor
or
aas
and
jbe
and
mov
pusha
nop
mov
mov
xor
call
pushf
loop
xchg
enter
int
inc
xchg
insl
sahf
idivl
jb
out
mov
pop
pop
mov
push
sbb
js
rorl
cmp
cli
and
jl
std
lea
push
cld
repz
cmp
lret
hlt
lret
pop
jne
jo
out
js
setge
std
in
xlat
jl
jle
scas
mov
iret
jmp
xchg
nop
ss
pop
add
fwait
mov
mov
mov
mov
jp
jne
inc
or
push
pop
mov
scas
xchg
int
fistl
ja
idivl
jl
ror
and
jb
ret
pop
ja
cmpsl
cld
mov
jmp
filds
mov
in
rcrl
jbe
rorl
sub
fdivrp
test
add
jnp
out
mov
and
mov
sti
scas
or
in
insl
sub
mov
dec
sbb
pop
jmp
push
test
insl
adc
es
push
jb
inc
mov
mov
aam
sub
insb
xchg
mov
je
or
fwait
adc
fsubrs
inc
inc
nop
testb
dec
mov
cmpl
dec
dec
xchg
enter
add
je
jge
mov
mov
jo
mov
in
lahf
imul
cmc
gs
push
jae,pt
dec
movsl
mov
enter
inc
mov
sahf
inc
xchg
xor
adc
aad
jp
out
pop
adc
loopne
addr16
inc
push
sub
stc
daa
sbb
leave
sub
enter
mov
pop
push
push
xor
and
mov
xchg
es
jecxz
leave
rcl
data16
pop
or
lea
sbb
nop
or
mov
lea
jns
cmc
rclb
iret
dec
and
jg
push
icebp
xorl
dec
ds
or
jle
xchg
and
xchg
xchg
push
jge
gs
rclb
inc
cs
push
test
mov
rclb
insb
shlb
mov
cmp
cmpsl
xor
in
stos
test
mov
andl
sbb
icebp
mov
cld
fptan
cmpsl
movsl
scas
sar
jp
mov
lods
and
inc
int
shlb
xchg
sarb
pop
add
rclb
into
pop
out
call
push
dec
aam
cmpsl
dec
lea
ds
add
cld
negb
mov
imul
dec
negb
mov
add
pop
xchg
cmpl
lret
dec
jb
loopne
pop
das
adc
pop
adc
scas
pop
std
es
and
mov
sbb
pop
jne
pop
push
arpl
icebp
lock
jmp
xor
dec
mov
daa
sbb
inc
cmp
rorb
neg
into
jb
or
mov
mov
imul
popf
into
and
ret
fisttpll
scas
add
adc
jp
cmp
imul
mov
mov
sub
inc
mov
add
cltd
xchg
inc
jecxz
scas
push
int3
push
test
call
xor
push
sub
adc
pop
inc
inc
lcall
inc
or
insl
or
dec
into
xchg
xchg
sub
jg
xchg
or
sti
mov
mov
loop
add
mov
mov
idivl
lock
icebp
rolb
sub
enter
dec
mov
fs
scas
cmp
sar
jns
xchg
js
jmp
xchg
jmp
dec
fcoml
push
mov
push
push
jae
jne
add
pop
mov
push
clc
cltd
fisttps
sub
cmp
pusha
sub
jl
dec
or
popa
mov
stos
mov
lret
pop
or
cld
add
cmc
outsb
push
movsl
sub
and
loope
pop
fs
cli
cmpsb
les
or
popa
ficompl
out
pop
aad
cmpsb
xor
sbb
adc
and
aad
sbb
cmp
cmpsl
or
inc
lret
mov
mov
loop
addr16
flds
adc
andb
or
push
into
dec
icebp
mov
loopne
lcall
jno
movsb
push
or
jp
jge
call
cmp
addr16
adc
insl
add
ljmp
pop
cmp
xchg
adc
fisttps
leave
lret
xlat
sbbb
outsl
stos
mov
scas
mov
ljmp
cmp
mov
cwtl
or
adc
lds
imul
test
aas
dec
and
stos
aaa
add
xor
cmp
xchg
jb
dec
notb
xchg
lea
mov
repz
xor
mov
inc
cmp
stos
cwtl
sbbl
movsl
pop
rcrl
add
mov
pop
mov
sub
sub
lds
or
xor
outsl
sbb
jnp
hlt
pop
pavgw
cmpsl
scas
mov
cmc
mov
in
leave
dec
fcmovbe
adc
out
lret
add
jns
fistpll
orb
and
fstps
mov
fcom
hlt
int3
sub
addb
dec
mov
sahf
dec
inc
arpl
inc
addl
leave
cld
lret
addr16
mov
sub
xchg
or
popa
ror
mov
scas
or
add
xorb
mov
xchg
shrb
icebp
xor
mov
ss
fucomip
stc
sarb
int3
xchg
pop
xlat
loop
and
pusha
and
sbb
test
mov
cmpsb
out
push
jbe
adc
repnz
cmp
lea
push
shlb
in
cmpsl
bnd
xor
or
pop
in
dec
imulb
out
fdivrs
cmp
mov
inc
or
hlt
daa
mov
subb
sbb
sbb
fldt
pop
outsb
outsl
fstl
jo
sarl
rolb
aas
aam
cmp
sbbl
mov
mov
in
pop
or
cs
pop
leave
out
mov
jo
pushf
push
shll
mov
fs
lret
ss
xlat
sub
cltd
push
and
lds
add
dec
mov
fwait
adc
pusha
cs
or
mov
aaa
sbb
pushf
insl
mov
rorb
xchg
dec
repnz
inc
sub
pop
repnz
xchg
bswap
lret
cltd
jbe
bound
dec
push
insl
mov
lods
xchg
pop
mov
push
or
push
hlt
in
out
add
cmp
fwait
or
idiv
push
pop
mov
fimull
mov
into
xor
ds
mov
cmp
jl
loop
sbb
cwtl
shl
pop
in
or
fs
push
jbe
test
add
push
xor
jp
mov
sub
inc
lcall
movsb
sbb
test
and
push
xor
fs
add
pushl
pop
and
add
dec
mov
fadds
shll
mov
stos
inc
fsubr
insl
bound
movsb
add
fldcw
js
mov
mov
cmp
in
inc
sub
sbb
and
jns
xor
jmp
add
mov
mov
mov
and
insl
xchg
fadds
push
pop
inc
movl
loop
mulb
pop
adc
mov
orl
out
add
test
popf
push
ror
inc
les
pusha
sbb
ds
or
stc
je
or
dec
iret
mov
or
fwait
ss
clc
pop
pop
mov
push
movsb
fidivs
add
lods
push
lret
nop
dec
inc
fxtract
cmpsb
mov
dec
fsub
cmp
push
jo
cmp
xlat
adc
jo
imul
mov
lods
push
jle
outsb
inc
pushf
clc
mov
inc
int
or
xchg
adc
inc
dec
mov
mov
jg
popf
pop
imul
lret
movsb
mov
dec
mov
in
sub
shl
pushf
sahf
cmp
mov
fisubrs
int3
adc
push
mov
push
inc
fimuls
mov
nop
test
jmp
pop
sub
loop
or
xor
xor
and
mov
dec
add
dec
iret
lahf
repz
das
adc
sbb
sbb
sub
xchg
insl
add
test
mov
cmp
mov
dec
es
into
jo
int3
mov
mov
dec
sbb
sbb
inc
and
mov
adc
sub
jg
mov
aaa
cmp
aam
mov
inc
push
add
stos
jge
sbb
loope
mov
push
incl
pop
push
inc
jle
daa
hlt
lret
add
ret
ficoms
mov
fcmovb
xchg
gs
je
outsl
adc
and
mov
sub
test
adc
test
cmp
fistl
nop
aas
jg
push
jle
xchg
inc
xchg
jno
sti
jg
adc
stos
scas
lea
fisttpl
iret
dec
int
call
cmpsl
bound
les
in
jmp
popf
ret
hlt
sub
push
insb
cmp
sub
mov
add
xchg
ret
aaa
mov
mov
push
aam
daa
fs
mov
fnstsw
in
and
fst
or
mov
pusha
cmpsb
adc
jae
add
pushf
cmpl
pop
jnp
inc
adc
cmp
inc
cwtl
xor
addr16
mov
mov
adc
scas
xchg
add
mov
sbb
stos
stc
sbb
call
ficompl
stos
push
add
cwtl
mov
test
cli
cmp
shrb
push
mov
sub
inc
aas
mov
sarb
enter
pop
add
xchg
pop
sub
int3
test
out
mov
sbb
jge
adc
inc
cmp
in
jae
add
ror
loopne
out
xorl
xchg
mov
sub
jnp
shlb
sbb
jno
setl
add
push
loope
pop
fdivs
add
bound
cltd
orl
out
mov
mov
mov
jo
jecxz
jmp
and
push
stc
lcall
jle
in
ja
std
push
add
and
js
and
roll
and
imulb
add
sbb
pushf
inc
push
sti
cmpb
outsl
sub
inc
mov
xor
nop
in
xchg
js
movsl
pop
sub
sub
sti
jne
mov
sub
pop
movsl
jmp
stos
mov
aas
pop
loopne
xor
mov
lcall
adc
mov
jno
or
jmp
rcrb
cmp
roll
add
lcall
in
stc
cmpsl
push
cwtl
ret
lahf
xchg
mov
xchg
loope
pop
out
mov
or
lods
xchg
arpl
fbld
test
dec
dec
and
jne
leave
pop
lmsw
shlb
lahf
push
mov
add
add
mov
into
into
xchg
dec
mov
dec
sbb
inc
lret
loopne
into
push
outsb
data16
sub
pop
jg
stc
movsb
push
xchg
test
push
sbb
and
cmp
sti
cmp
fcom
pop
test
add
cmp
cld
dec
adc
aad
ficoms
int3
in
sbb
and
mov
stos
aam
ud0
lea
popa
aam
test
jne
lahf
stos
sbb
mov
cmp
js
mov
sbb
mov
daa
push
jg
insb
cli
ret
dec
je
fidivrs
or
mov
push
xchg
xor
aad
call
into
xor
sub
sub
push
fdivs
sub
pop
enter
xchg
sbb
iret
push
les
inc
cmp
and
cld
movsb
mov
in
jo
cwtl
divl
sbb
sub
and
push
dec
mov
pop
icebp
sahf
mov
ror
inc
fwait
xor
cmp
inc
mov
xchg
and
jmp
push
ja
or
notb
and
hlt
shr
dec
pop
fmulp
shlb
insb
xor
sub
push
xchg
rorl
loopne
push
jl
movb
add
push
pop
out
loopne
push
arpl
into
fsubs
cmpsl
out
sbb
out
ds
sub
test
pop
jo
jno
rorb
mov
out
or
jle
pusha
and
push
in
roll
mov
adc
xchg
pusha
cmp
es
lret
xchg
pushf
mov
add
xchg
mull
iret
stc
xchg
sbb
movsl
leave
mov
cld
pop
jae
jg
xor
cmpsb
mulb
roll
data16
mov
movsb
and
adc
rcrb
jg
add
gs
jge
sbb
sub
adc
dec
fstps
out
lods
idivl
mov
inc
lds
in
sub
testb
sbb
enter
lock
or
mov
filds
iret
mov
lods
mov
fs
cmpsl
fildll
aas
mov
cmp
jmp
insb
xchg
jge
in
xchg
repnz
fs
dec
jl
cmp
cli
push
addr16
mov
mov
adc
push
outsb
pop
shl
out
jg
mov
or
sub
add
jle
xor
inc
iret
pushf
xchg
pause
mov
jp
rorb
mov
pop
pop
adcl
mov
jmp
adc
mov
lret
jne
xor
mov
ljmp
sbb
cmp
cmp
cwtl
push
or
push
cwtl
shl
mov
pop
nop
lea
push
lock
or
pop
dec
mov
xor
ljmp
fildll
pop
fstpt
mov
xor
dec
fstpl
mov
and
push
std
xlat
jp
inc
shll
jecxz
or
push
popf
pmaxsw
xchg
push
sbb
add
inc
and
inc
les
mov
jbe
xchg
cmp
aad
sub
or
call
in
incl
out
mov
xor
mov
hlt
push
add
inc
or
dec
push
int
adc
out
xor
dec
cwtl
sbb
mov
lods
popf
clc
sub
mov
inc
pop
jge
or
inc
imul
out
loop
test
jne
sub
cmp
sbb
mov
lods
shrl
fsubs
and
push
mov
cmp
push
xor
and
mov
xor
adc
hlt
xchg
inc
jno
push
jp
jbe
sbb
inc
mov
imul
int3
cltd
xchg
jle
push
fs
xor
test
and
jl
test
call
ljmp
out
cli
pop
fs
adc
dec
shll
mov
leave
ficomps
push
mov
and
ret
insl
mov
outsb
stos
mov
lock
jns
pop
xchg
lds
push
rcrb
lret
dec
mov
clc
mov
shlb
mov
mov
ret
sub
out
das
mov
mov
xchg
mov
push
pop
jno
mov
ds
cmpl
mov
mov
cmp
lods
pushf
or
les
test
pop
pop
push
inc
test
stos
dec
call
mov
xchg
arpl
loop
cmp
cmp
lods
cmp
jae
pop
insl
add
push
cwtl
fisubl
lds
outsl
pop
scas
dec
mov
fdivrl
xor
jg
aaa
sbb
lods
xchg
and
xor
jns
iret
iret
pop
adc
imul
fnstcw
add
pop
dec
push
adcb
js
outsb
xchg
sbb
loopne
pushf
fstpt
rorb
push
mov
xchg
out
mov
repnz
add
cs
mov
lret
repz
xchg
ss
cmpsb
or
or
scas
cli
lret
sub
xor
fnstsw
movsl
mov
rcr
mov
mov
push
lahf
arpl
shll
xchg
loopne
cmpsl
sub
adc
mov
push
jg
xor
cli
mov
push
mov
sti
and
sbb
cmp
into
xchg
or
sbb
shll
stos
mov
fucomip
jle
addr16
out
or
mov
repz
les
inc
mov
bnd
push
fsub
fisubrs
cmp
call
lret
and
push
adc
mov
test
jbe
sbb
inc
adc
lods
jmp
test
cmc
push
cld
mov
aam
rcl
xor
loopne
lcall
dec
mov
repnz
push
insl
lock
clc
push
push
xchg
shl
rclb
les
test
push
and
add
cmp
adc
lea
cwtl
aam
int3
pop
adc
js
les
and
cwtl
mov
cmpsl
into
adcb
ja
repnz
cmp
pushf
ret
push
mov
push
cmp
xlat
icebp
pop
pop
dec
mov
stos
mov
cltd
jmp
or
inc
or
bound
push
sbb
push
sbbl
lods
push
in
and
push
mov
xchg
hlt
adc
mov
or
std
xchg
outsl
or
inc
cld
jge
test
pop
pusha
fmull
or
std
add
rorb
call
mov
and
xor
pop
xlat
mov
iret
mov
pop
jnp
loopne
out
fidivs
js
jl
in
sub
int
mov
cld
jge
mov
ss
xchg
test
and
mov
fsubrs
cld
test
mov
pop
into
test
add
movsb
mov
adc
lret
into
mov
repnz
or
inc
les
jnp
dec
or
sbb
push
pop
mov
aad
test
shl
cmp
repz
fcmovnu
call
out
sub
sbbl
dec
add
pop
jl
push
mull
mov
xor
icebp
or
int
fdivp
sti
add
pushf
subb
and
loope
inc
movsb
jnp
or
je
xor
and
adc
inc
xor
enter
or
and
sub
lods
mov
lret
iret
jl
sbb
scas
xchg
aad
notl
xchg
pop
outsl
sbb
movsb
jo
dec
out
fcmovnb
out
imul
shrl
push
adc
gs
es
addb
imul
pop
aaa
sub
cmp
addl
xchg
push
mov
sub
inc
lcall
test
leave
mov
adc
fs
fs
xor
mov
sub
and
xchg
mov
fistpll
imul
and
fdivs
or
je
xchg
fs
adc
adc
push
mov
adc
loop
push
icebp
notl
add
push
outsl
mov
movsb
lea
outsl
sub
es
mov
add
sub
pop
shlb
sub
push
rolb
fbstp
imul
ffreep
cmp
xor
in
ds
fstps
add
push
leave
subl
sbb
cwtl
jl
mov
inc
push
mov
mov
cmp
fnstcw
fwait
mov
insl
mov
les
aas
push
mov
dec
imul
mov
mov
popf
mov
enter
aas
fdivs
lods
movsb
jle
inc
pcmpeqb
cltd
stos
enter
test
xlat
testl
inc
out
xor
stos
sub
sub
mov
scas
pop
aas
mov
clc
addb
repz
pop
mov
jae
cmp
lret
jge
cmp
lds
add
add
jns
sahf
cmp
test
mov
mov
out
outsb
fiadds
mov
cmp
adc
dec
push
and
jl
in
mov
mov
and
jmp
mov
gs
hlt
xor
jns
inc
pop
fs
mov
and
mov
data16
dec
movsb
lcall
roll
fcoms
fldt
push
or
int3
xchg
stos
xchg
pop
pop
aas
jno
js
and
cmp
in
xchg
xchg
shlb
test
dec
adc
ds
imul
scas
and
fisubs
mov
cli
xor
loope
aad
mov
cli
stos
sarl
pop
mov
rcll
test
pop
jnp
iret
lods
add
mov
push
mov
int3
rclb
sbb
add
or
xchg
and
jae
push
and
loope
cmp
dec
sub
mov
cmpsl
inc
mov
data16
sub
sbbb
xlat
sbb
fstps
popa
pop
adc
test
fstpt
or
and
loope
xchg
push
fldl
jns
add
cli
or
inc
fstpt
mov
sbb
es
mov
mov
out
sarl
fst
popf
addr16
push
xchg
push
lea
aas
dec
out
add
out
sub
and
push
lock
dec
jmp
jae
sbb
or
inc
lahf
add
fwait
ja
xor
jne
jg
fistpll
sub
mov
fninit
add
lds
aam
aam
and
xchg
lret
pop
add
xor
leave
cltd
lds
xor
addr16
mov
mov
sub
add
mov
in
mov
pop
inc
mov
jo
cmp
mov
sub
ffree
xor
in
outsl
js
pop
out
mov
mov
clc
dec
mov
pop
cmp
or
jmp
adc
mov
fstpt
sti
filds
dec
xchg
gs
idiv
push
xchg
push
jle
push
inc
mov
rcrl
adc
pop
jg
add
fnsave
lret
psraw
fldenv
xchg
mov
jl
fistpl
arpl
sub
mov
aaa
xchg
mov
cmpsw
push
movsb
call
cmp
outsb
inc
call
out
out
jbe
cs
jnp
outsb
adc
aam
addb
daa
pop
pop
or
loop
xor
fsubr
aaa
sbb
arpl
xchg
cmp
xchg
mov
xchg
xlat
dec
push
sbb
popa
sub
es
js
pop
mov
adc
jne
push
dec
or
stc
add
pop
pop
lret
pop
cmpsl
pop
repnz
dec
dec
flds
adc
jle
push
push
inc
lea
jge
xor
enter
in
push
jae
adc
xlat
mov
or
mov
xor
mov
or
nop
dec
shrb
test
jne
testb
pop
and
adc
jecxz
punpcklwd
push
jne
nop
insb
mov
and
lahf
cmp
lret
push
lods
xlat
or
mov
aas
lods
ret
and
push
pop
adc
mov
mov
shr
xor
xchg
out
icebp
cltd
fcmovb
loope
out
push
fstl
sbb
xchg
mov
idivb
and
push
and
subl
or
cmp
jle
inc
ja
or
popf
dec
std
data16
pop
loop
ja
jmp
bound
mov
add
es
xchg
fcoml
push
or
addr16
xchg
cli
push
mov
lcall
sub
dec
mov
dec
mov
xchg
jb
mov
popf
xchg
mov
std
add
gs
xchg
mov
sti
sub
jl
negl
lock
std
inc
int
push
mov
inc
jmp
pop
pop
ds
cli
mov
sbb
sbb
dec
xchg
dec
xchg
cwtl
sub
out
adc
cltd
mov
daa
ret
xlat
stc
mov
nop
je
mov
xor
mov
gs
inc
pop
lcall
mov
nop
out
mov
inc
inc
mov
mov
jnp
mov
adc
rorl
aas
dec
cld
outsl
mov
mov
sti
data16
test
jmp
clc
xchg
iret
jge
cld
in
xor
pusha
addb
add
es
mov
and
mov
mov
cmp
dec
in
pop
jmp
dec
int3
js
aad
sbb
mov
inc
inc
push
push
rolb
lds
dec
mov
adc
push
xchg
loopne
xor
fstps
roll
cmp
cmp
xlat
lock
jecxz
pop
jb
mov
into
sbb
cmpl
shr
xor
in
cmpsl
cmp
ss
sub
mov
gs
frstor
fs
repz
es
imul
adc
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
jno
xchg
test
mov
es
setge
cld
cmc
push
push
pusha
fcomps
cmp
lock
and
pushf
dec
iret
mov
jo
adc
test
lcall
mov
or
jne
data16
add
pop
das
ss
xchg
inc
jmp
icebp
sub
mov
in
sub
into
imul
pop
lcall
pop
add
inc
mov
aad
push
fldcw
mov
lock
nop
lret
xor
mov
fsubrl
hlt
shrb
andl
and
push
and
xrelease
in
into
jge
pop
xchg
xchg
icebp
pusha
fwait
stc
jg
or
les
das
jg
mov
es
test
std
imul
mov
xor
add
sub
scas
cli
lahf
out
incl
jae
jnp
ljmp
push
pop
xor
mov
dec
sbb
call
xor
movsb
push
sbb
sbb
mov
xchg
adc
or
scas
jne
xchg
cld
out
dec
cmp
insl
jno
es
xchg
iret
mov
mov
xchg
stos
xor
mov
popa
sub
jae
xchg
cltd
mov
mov
mov
adc
sub
mov
inc
ja
xorb
cltd
test
ja
xor
sub
repz
imul
ret
sahf
jae
mov
imul
dec
mov
xor
or
pop
arpl
inc
and
push
mov
sub
or
call
ror
std
stc
loop
rcr
and
std
xor
imul
std
mov
inc
and
imul
cmp
sbb
test
scas
lret
push
loopne
inc
inc
lret
sub
bound
pop
pop
xchg
xor
inc
push
cmpsl
fcmovnb
aaa
out
repnz
out
int
jle
fstpt
sti
fnsave
icebp
dec
cmpsb
push
cmp
cmc
loop
scas
pop
push
out
test
push
adc
les
popa
jle
in
aas
sbb
leave
xor
stos
test
xchg
fildll
push
jmp
out
mov
cmp
or
loop
cmp
mov
mov
daa
mov
jecxz
pop
mov
fisubs
mov
push
pop
push
add
add
mov
sub
sub
mull
mov
in
push
xor
push
xor
or
sbb
mov
pop
addr16
fildl
loopne
pop
xchg
call
loop
outsb
dec
fdivs
cmc
fs
mov
gs
pop
and
adcl
cmp
fs
test
and
movsb
cltd
mov
xor
dec
inc
cmp
sub
pop
mov
fndisi(8087
xor
push
and
cmc
ret
xchg
cs
sub
arpl
std
mov
lds
das
dec
shld
dec
mov
lret
push
addr16
fildl
add
push
subb
fsubrs
cmp
into
cmp
sarb
mov
fs
hlt
add
adc
xor
aad
lods
sahf
xorb
into
popa
dec
cltd
cld
mov
mov
nop
and
or
int
mov
dec
out
inc
inc
aad
jb
cwtl
lcall
scas
cmp
pop
push
jp
mov
pushf
sbb
dec
xchg
sahf
inc
pop
sbb
insb
mov
and
sahf
jg
xchg
pop
repz
xlat
inc
add
pop
lcall
rclb
mov
in
insl
mov
icebp
or
jle
adc
fwait
dec
sbb
mov
sub
push
xchg
movsb
dec
or
inc
imul
push
lret
decl
xor
js
in
sbb
adc
std
adc
cltd
pop
shrb
sarl
nopl
lods
push
arpl
and
cwtl
mov
mov
jae
pusha
mov
and
mov
mov
out
fidivrs
shll
push
add
jbe
cmc
int3
pop
and
sub
push
and
pop
mov
dec
push
push
pop
xor
enter
inc
mov
add
bound
or
pop
sub
sub
jl
push
fs
mov
mov
scas
cmc
mov
dec
stos
inc
mov
pushl
fwait
mov
out
inc
push
xchg
lahf
inc
cltd
add
test
sbb
mov
stos
ret
jno
mov
jbe
insl
push
or
les
sub
stos
inc
push
cmp
rclb
sbb
call
pop
xchg
push
notb
or
pop
ds
std
jnp
xor
out
mov
mov
mov
sbb
negb
mov
outsl
or
es
add
jae
sarl
xchg
adcb
aam
cmpsl
dec
jmp
pop
bound
rcr
mov
popa
outsl
xor
mov
jne
adc
shlb
fs
mov
inc
daa
testl
je
pop
lock
xor
aaa
dec
push
dec
inc
xor
sub
cli
cwtl
sub
sub
adcb
sub
mov
sub
gs
push
mov
push
std
xor
xorb
inc
dec
out
mov
loop
mov
insl
add
and
mov
nop
xchg
pop
pop
add
lods
adc
pop
iret
add
orb
jno
pop
jno
fmull
inc
mov
push
jo
mov
sub
das
sub
arpl
jle
cmp
icebp
data16
out
cltd
gs
cmp
dec
incl
push
js
mov
sbbb
push
and
dec
sbb
jns
fmulp
sbb
inc
in
fs
cmp
or
lods
nop
jbe
roll
add
mov
pop
mov
dec
rcr
addr16
cmpsb
orl
arpl
pop
xchg
in
cmp
in
mov
in
ljmp
push
std
aam
iret
fwait
idiv
pop
and
jp
pop
jnp
sti
int
mov
repz
push
cltd
lea
xor
xlat
lods
mov
inc
sbb
add
arpl
dec
out
test
sub
xor
filds
dec
test
dec
fcoml
gs
adc
mov
mov
mov
pop
repnz
xor
inc
mov
js
movsb
xchg
or
std
testl
pop
xchg
push
rcr
xchg
out
std
es
adc
pop
cmpsb
pusha
mov
mov
inc
sbb
cli
jl
inc
repnz
cmp
iret
pusha
or
pop
pop
push
pushf
jne
pop
lds
adc
xorb
stc
sahf
mov
mov
cltd
sbb
and
dec
aaa
ljmp
cmpsb
out
mov
mov
sbbb
push
lods
adcl
push
pop
divl
sub
dec
lods
addr16
sbb
xchg
inc
push
repz
cmp
leave
dec
jg
sub
fadd
rcrb
cmpl
mov
mov
inc
fcomi
arpl
ret
or
jno
adc
lret
out
gs
ja
lods
scas
arpl
dec
cli
mov
iret
or
xorl
xchg
xlat
fsubl
stos
mov
mov
sbb
jge
and
jns
jle,pn
stc
mov
jno
shl
pop
daa
das
xchg
cmc
insl
jo
inc
orl
jne
insb
ja
lret
jle
ret
pop
mov
shlb
xor
jecxz,pn
lock
loop
and
xchg
mov
mov
or
movsb
test
stc
std
loope
inc
adcb
test
les
cmc
jo
jne
mov
and
mov
or
and
insl
adc
mov
push
sbb
xlat
or
lcall
stos
scas
fcom
sarl
in
push
mov
xchg
push
repz
mov
shr
pop
out
loopne
stos
fdivl
xorb
jno
sub
mov
adc
movsl
jns
push
mov
xchg
daa
push
in
sub
lock
mov
cmp
cmp
fwait
jl
clc
cmp
aaa
mov
push
iret
push
sub
out
cmpsb
jns
ljmp
and
xchg
push
arpl
std
add
movsl
mov
add
cmp
xlat
xchg
jb
out
adc
cmpsl
fistps
mov
andb
dec
fildll
inc
cld
in
or
dec
mov
rorb
in
jno
decb
pop
incb
dec
jmp
and
cmp
push
mov
cmp
mov
int
out
nopl
idivl
sbb
mov
pop
mov
cs
mov
or
sahf
add
push
sbb
sbb
xchg
mov
push
out
cmp
scas
sbb
lock
js
stos
dec
js
cmp
or
mov
xor
out
pop
fcmovne
add
or
ficompl
mov
stc
outsl
add
inc
mov
out
pop
popa
push
pop
icebp
mov
iret
in
stc
xchg
mov
push
push
push
push
insl
aam
icebp
dec
ret
movsb
adc
xchg
out
shrb
aad
mov
or
out
push
lea
out
in
lock
jmp
push
arpl
mov
adc
push
adc
frstor
sub
add
and
loope
or
fwait
pop
in
jle
scas
pop
repz
icebp
int
cmp
mov
and
sbb
lret
jbe
in
and
cli
movsl
insb
add
fwait
mov
push
inc
cmp
jb
pop
imul
repz
into
dec
mov
xchg
jmp
sub
int
and
mov
and
sbb
xchg
xchg
cmp
mov
mov
adc
pop
pop
daa
sub
cmpsb
mov
adc
push
xchg
sahf
in
jae
pop
popf
pop
xor
xchg
stos
mov
cs
or
enter
add
sbb
inc
es
bnd
scas
int3
test
mov
es
pop
test
movsb
sarb
sbb
ficompl
aaa
adc
pop
push
addr16
in
sahf
mov
outsl
mov
xor
pop
inc
xor
sub
xchg
inc
sub
and
add
cwtl
je
aaa
and
jg
pop
inc
fdivrs
mov
mov
mov
push
xchg
daa
mov
jbe
push
shlb
out
cli
mov
add
leave
and
cs
xchg
leave
xor
push
pusha
push
repz
out
scas
outsl
fistps
sahf
inc
lahf
mov
shl
sti
imul
jb
and
loopne
jl
in
addr16
das
sbb
push
scas
dec
aam
add
and
inc
or
fcoml
mov
dec
cmp
insb
lds
pusha
dec
ficomps
dec
xor
pop
add
sub
xlat
leave
add
lahf
cmp
daa
jp
call
lret
shrl
cmp
mov
xor
mov
mov
shl
push
hlt
add
mov
repnz
pop
mov
adc
inc
and
adc
cmpsb
test
sub
add
push
mov
loope
loopne
mov
lock
pop
jno
ja
jl
or
filds
mov
pop
in
mov
js
inc
ss
stc
xchg
inc
jge
jno
test
sub
jb
sbb
sbb
sbb
sbbb
mov
sbb
mov
out
cld
cmpsl
jbe
mov
repz
call
mov
inc
mov
cmpsl
repz
ficoms
add
cmp
cmp
hlt
fcomi
out
xlat
sbb
xor
jle
out
mov
mov
xchg
mov
gs
insl
pop
scas
rcrb
dec
cmpl
jl
or
test
mov
mov
das
xchg
cmp
xchg
xor
mov
and
repnz
adc
and
adc
and
aas
xchg
add
test
cmp
pop
lods
mov
jg
imul
sahf
dec
dec
xlat
mov
insl
jge
or
xor
and
jne
cmp
outsl
dec
ljmp
test
int3
aaa
insl
mov
sti
cmpsb
shll
inc
in
cld
fldlg2
orb
lret
adc
jg
mov
lods
mov
subl
or
test
xchg
xor
xorb
imul
jge
cld
dec
arpl
mov
mov
lcall
cmp
rcrl
in
adc
test
pop
xchg
xchg
pop
mov
pop
imul
test
icebp
arpl
jno
pop
jae
cmc
mov
in
rolb
dec
cmp
jns
cltd
jb
stos
lods
mov
in
mov
mov
xchg
loope
or
or
mov
fcomp
mov
int3
mov
pop
mov
test
pop
je
repnz
fnsave
iret
jecxz
push
dec
mov
adc
insb
push
jecxz
fs
daa
pushf
jg
xchg
xor
jbe
sbb
adc
cmp
jne
insl
jge
or
sbb
inc
loopne
jne
or
data16
scas
mov
data16
ret
pop
dec
fdivrs
fcmovbe
outsb
in
cmp
push
js
push
iret
sub
popf
push
aas
test
push
cld
inc
ss
cmp
xchg
shlb
pop
mov
hlt
in
and
ret
sbb
nop
es
cmpl
sti
push
shll
cs
push
je
test
push
mulb
pushf
aad
pop
mov
mov
xchg
mov
lea
loop
addb
aaa
cmp
push
mov
insl
jnp
incb
pop
gs
cmp
movsb
subl
push
jecxz
mov
dec
inc
sub
xor
sahf
cs
xchg
push
jge
xor
jmp
jmp
jecxz
mov
xchg
cmp
and
and
mov
outsl
or
xor
scas
jo
xor
jle
test
aad
out
mov
ljmp
sbb
fs
pop
mov
push
andb
dec
int
pop
shrb
push
fnstcw
jb
mov
xchg
aam
lods
shrl
jmp
pop
addb
dec
lods
sahf
jne
cmc
pop
addr16
cmp
fistpll
iret
sub
fsubp
cmp
jmp
lds
jae
sti
pop
jl
loopne,pt
jb
lods
mov
iret
test
jne
sbb
jnp
lahf
int
jb
fnstsw
jne
inc
in
or
xchg
jmp
inc
test
dec
mov
lret
mov
icebp
push
or
ror
cmpl
repnz
and
das
dec
pop
xchg
xlat
cmp
mull
cmpsb
dec
jmp
outsl
sub
shrl
jno
imul
push
icebp
dec
xchg
sub
jne
leave
stos
fidivl
data16
aaa
js
cmp
fisubl
fbld
popl
jp
mov
xor
stc
subb
loopne
xlat
popa
pop
xchg
push
imul
insl
adc
adc
out
mov
adc
mov
cmpl
lods
lahf
mov
jno
add
rcrb
stos
xchg
adc
adc
or
fnstcw
rcl
jge
ret
loope
int
xchg
out
fwait
cmp
sub
lcall
in
adc
pop
cmpsb
cmp
mov
cs
into
aad
mov
xchg
sub
ds
outsb
add
gs
jno
push
out
sub
cs
adc
xor
cmp
fcomps
or
cmp
bound
loopne
mov
test
jnp
cmp
xchg
jge
add
test
bound
fsubl
mov
jbe
mov
cmp
push
dec
add
fnstcw
xor
imull
add
xor
stos
mov
mov
iret
sbb
addr16
stos
mov
test
add
pop
shrl
lahf
hlt
int
in
jl
ffreep
mov
add
sbb
outsl
cmpb
pop
fwait
jmp
jge
pop
push
daa
jp
das
enter
and
in
lods
je
in
sub
ljmp
jle
daa
movsl
lahf
ficoml
fwait
inc
dec
outsb
cltd
adc
mov
iret
stos
sub
sub
pop
in
ret
pop
adc
xchg
das
mov
sub
insb
xchg
xchg
insb
leave
push
rcrb
xorl
stos
xor
mov
into
cli
test
pop
es
xchg
xchg
lahf
int
ja
fbstp
shr
gs
push
jo
pop
js
test
xor
ss
cltd
cmp
fldenv
dec
mov
push
ficompl
lds
sbbl
cmp
xchg
cmp
into
pop
cmp
subb
in
inc
aas
je
in
pop
lods
sbb
jne
xor
aad
cmp
sbb
js
or
mov
adc
not
mov
adc
jns
sahf
pushf
rcl
lea
or
popf
cmp
test
scas
lock
shl
pop
jl
bnd
fwait
jnp
dec
cld
arpl
push
lock
lods
xchg
lcall
ss
inc
mov
dec
outsl
popa
lcall
adc
insl
test
mov
test
mov
mov
pop
inc
fidivrs
mov
fmulp
inc
imul
das
enter
add
jmp
mov
popa
dec
pop
mov
lret
movsb
push
int3
jns
loopne
push
fsubl
mov
adc
xchg
fcmovnbe
jle
sub
negl
stc
push
enter
xchg
loop
sub
cli
mov
dec
sbb
xchg
outsl
adc
imull
ret
in
cmp
js
andl
fisubrl
and
pop
adc
cltd
jl
xorb
pop
sbb
cmpsb
cmc
and
inc
movsl
or
movsb
movsb
pop
cmpsl
mov
loop
dec
mov
jp
adc
xor
repz
je
adc
and
sbb
cmpsb
cld
imul
cwtl
ds
cmpl
addr16
sub
rorb
fnstcw
addl
sbb
shll
ss
pop
andb
loop
mov
or
ja
int3
xchg
gs
xchg
cmp
sub
cmp
xchg
push
inc
lret
adc
push
inc
dec
das
enter
dec
std
cmp
jbe
les
jle
jno
xchg
out
cmp
dec
or
rcr
into
int
js
test
mov
sub
pop
push
xor
mov
scas
jge
mov
sti
call
push
push
mov
push
shlb
cli
xor
inc
xor
pop
xchg
and
outsl
dec
or
scas
popa
xchg
and
or
mov
into
int
loop
outsb
push
or
inc
enter
inc
jo
aad
jnp
dec
add
out
repz
stos
mov
cs
mov
scas
je
jle
aad
in
imul
sbb
pop
mov
xchg
xor
xor
add
pop
leave
aaa
or
dec
scas
mov
dec
imul
imul
push
inc
jno
hlt
jne
pop
dec
insl
enter
jg
cwtl
xchg
loopne
mov
add
bts
idivb
jg
sbb
ljmp
add
mov
push
cmp
mul
xor
loop
push
stos
and
cmc
xor
push
cltd
inc
lods
jl
dec
and
sbb
js
mov
adc
dec
mov
xor
rorb
jg
xlat
mov
cmp
add
std
xor
mov
mov
adc
aas
inc
shl
ffree
cmpl
lcall
mov
inc
mov
mov
in
sbb
pop
or
inc
and
fs
sbb
clc
pushf
rorb
push
fwait
xchg
je
mov
ret
aas
scas
jle
push
or
aaa
out
ja
repz
push
fwait
cmpsb
sub
fistps
aas
insb
clc
mov
stos
bound
cmp
lock
out
sub
das
push
mov
fstps
cltd
in
pop
das
push
pop
cmp
push
stos
and
sti
pop
enter
cwtl
mov
jb
fdivl
adc
sub
sarb
les
gs
and
fst
xor
jecxz
pop
bound
cmpsl
popa
sbbb
add
outsl
stos
lcall
xor
cmp
sub
lods
add
lret
jge,pt
or
xor
jle
xchg
mov
stos
sub
in
pop
enter
push
adc
loopne
imul
fldl
clc
inc
data16
adc
pop
jge
fdivrs
and
xchg
dec
xor
mov
sub
ficoms
sub
hlt
push
rclb
push
jmp
xor
shrb
sahf
int3
xchg
imul
inc
inc
add
daa
test
pop
lods
cwtl
in
push
mov
dec
rolb
xchg
adc
call
mov
in
loop
aam
adc
push
mov
fsubrp
dec
xchg
xchg
pop
aaa
mov
xchg
arpl
popf
push
add
mov
push
xchg
in
andl
sbb
cmp
fldl
fldcw
push
lock
push
cmp
mov
xchg
xor
aam
sahf
push
pop
sahf
mov
push
sub
mov
ret
and
repz
jl
sub
fwait
xor
or
pop
xchg
add
or
pop
add
fstps
add
ficoms
ljmp
and
aam
push
out
int
lods
adcl
pop
xorl
mov
mov
inc
pop
fbld
or
js
sarl
ss
rcrb
mov
hlt
xlat
testl
cmp
pop
inc
call
aaa
cld
mov
or
js
popa
jnp
rcrb
jno
or
rcll
hlt
je
out
adc
out
out
mov
xlat
lock
orl
add
lret
data16
sub
add
add
xor
push
mov
out
push
jl
xor
stos
lcall
push
push
loope
in
jmp
xlat
mov
inc
or
sub
mov
add
or
data16
int
xorl
stos
int3
dec
ljmp
les
push
mov
rcrl
push
and
cmp
mov
pop
pop
dec
adc
bound
mov
mov
pop
test
cld
sarl
lods
addr16
xor
out
xchg
cmp
fldl
or
es
xor
cmc
add
jo
lret
sbb
or
xchg
fsubrl
cmc
dec
add
push
movsb
mov
xor
shrl
es
mov
aad
push
lods
ss
test
xor
ret
xor
jns
xchg
dec
ljmp
mov
xor
lahf
add
mov
pop
jge
or
sub
aam
mov
insl
pop
push
pop
out
rcrb
sub
xor
lret
or
imulb
int
mov
aad
mov
nop
cltd
cmpl
xchg
test
lret
sub
sub
xor
movsl
jnp
sub
ja
fcoml
aas
lds
lret
cmpsl
dec
jns
pop
sbb
xor
imul
andl
pop
sahf
test
xlat
and
mov
and
add
pusha
inc
shll
in
inc
dec
negl
pop
out
mov
inc
cmp
xlat
inc
in
sbb
ss
mov
out
shl
fucomp
jae
add
or
jae
jns
push
fistps
clc
dec
xor
add
ljmp
xor
mov
push
ret
outsb
cmpsb
cld
cmp
aam
insl
jno
scas
mov
pop
sarb
rorb
mov
jge
lods
test
dec
mov
mov
popf
lret
jmp
adc
mov
nop
mov
ljmp
mov
sbb
aaa
sahf
and
cmp
clc
scas
pop
cmp
fs
jecxz
adc
les
pop
movsl
mov
add
mov
lret
push
mov
cmpb
mov
daa
imul
loope
mov
out
clc
pop
jle
jmp
inc
mov
push
sbbl
out
push
ds
inc
dec
mov
aad
inc
jo
pop
out
jp
aad
mov
lahf
mov
fimuls
ja
mov
addr16
ret
out
stos
out
cmp
dec
in
fs
in
fwait
insb
rol
int
mov
pop
add
pop
dec
lock
mov
push
or
insb
cmp
outsl
mov
std
and
mov
stos
repnz
push
lret
sbbb
mov
test
xor
sbbb
cmp
add
je
fs
xchg
aad
mov
adcl
enter
xor
sub
push
mov
sub
adc
mov
cmp
xchg
add
xor
sbb
and
push
push
add
push
lock
leave
push
or
inc
in
or
push
dec
jmp
addr16
jns
addr16
lea
sbb
rolb
fdivrs
sub
cmpsl
stc
bound
jge
fldl
jecxz
mov
roll
loop
sub
push
and
pop
cmp
dec
add
test
and
loop
sahf
clc
test
jne
cli
push
xchg
push
sbb
jge
push
inc
mov
imul
je
les
dec
cwtl
pop
dec
add
jmp
icebp
xor
aaa
in
lcall
pusha
jno
inc
ret
orl
xchg
std
adc
cwtl
inc
xchg
adc
mov
stc
jns
push
bound
cmp
clc
or
leave
fistpll
loop
aam
inc
inc
cli
cmp
aas
add
loop
js
dec
std
mov
and
insl
gs
jb,pt
xchg
repnz
fistpll
fisubl
mov
add
cmp
inc
sbb
enter
jae
mov
outsb
es
repnz
xchg
dec
loope
sbbb
sbb
pusha
scas
aaa
out
dec
mov
and
roll
jl
dec
rolb
add
inc
insb
dec
xchg
ret
or
aad
in
cwtl
cmpsb
adc
daa
xchg
jno
addr16
fldcw
test
sti
pop
rclb
or
lods
idivl
stc
stc
mov
add
and
sbb
or
sbb
jns
aas
cltd
daa
or
sub
scas
jno
rcrb
or
lret
xlat
aam
hlt
aas
sub
sahf
cltd
pushf
decb
mov
imul
jb
nop
cmp
out
sub
and
enter
lock
lea
and
mov
andb
sbb
cwtl
pop
sbb
mov
incb
sarl
cmp
shlb
insl
mov
jecxz
push
push
cmp
fisubrl
cwtl
mov
movsl
data16
or
mov
lahf
fcomi
push
xor
mov
cmc
adc
dec
dec
pop
mov
pop
loopne
idivl
push
add
jge
pushf
call
pop
leave
mov
and
decb
sahf
cmpsl
sub
mov
jne
lcall
mov
or
cmp
xchg
out
xor
test
inc
or
jmp
outsb
iret
xor
jno
scas
lret
xor
mov
movsb
add
mov
int3
xchg
std
ja
aaa
lret
mov
dec
or
loopne
aam
jo
dec
outsb
or
dec
loopne
pop
scas
stos
shlb
xor
mov
aas
xchg
mov
mov
icebp
dec
js
pop
ret
sbb
sub
jecxz
sarl
mov
mov
xchg
or
add
dec
aas
cmp
sbb
jbe
scas
mov
jl
movsl
jo
sbb
push
insb
ret
inc
xchg
arpl
adc
stos
insb
adc
cmp
xchg
lods
dec
inc
pop
xor
flds
mov
in
stos
add
sbb
pop
outsl
or
push
push
dec
pop
inc
mov
out
xchg
loopne
fdivrs
loop
pop
dec
push
xchg
into
ljmp
lds
stc
dec
iret
and
jle
mov
dec
js
push
fdivs
je
aad
mov
flds
imul
out
dec
orb
repnz
mov
out
and
jecxz
inc
es
xchg
lods
rolb
dec
dec
test
pop
xchg
cmp
jl
ffreep
cmpsl
data16
aam
das
add
inc
mov
nop
sar
wbinvd
sbb
fs
sarl
and
push
jecxz
inc
cmp
mov
fistpl
push
mov
es
pop
mov
mov
ret
loop
pop
repz
xchg
pop
sti
leave
jle
leave
mov
in
mov
test
or
mov
inc
mov
faddl
or
dec
xchg
notb
jmp
cmc
orb
sahf
adc
ljmp
sub
xor
mov
cwtl
mov
push
xor
idivl
arpl
mov
outsl
sbb
daa
and
jo
loop
inc
repz
pop
jl
inc
pop
loop
push
xchg
adc
fdivs
jne
and
andl
lahf
nop
push
or
aaa
mov
xlat
adc
sub
push
push
test
roll
push
outsl
aas
push
movb
jae
movsl
or
cmp
mov
pop
pop
mov
mov
adc
add
and
cmpsl
and
xchg
ds
lods
jno
divl
fisttpl
cwtl
jb
addl
mov
imul
mov
js
test
shll
sub
mov
mov
push
mov
xor
adc
adc
mov
sahf
mov
mov
mov
inc
and
add
shrb
inc
notb
xchg
pop
and
mov
int3
insb
add
popf
inc
es
xchg
std
aaa
or
push
std
int
ds
lods
mov
mov
pop
add
shll
push
push
dec
xchg
sbb
int
lcall
lahf
jge
mov
mov
into
stos
push
or
mov
xchg
sarb
bound
fistl
stos
mov
mov
mov
pop
push
sub
rolb
icebp
mov
daa
pop
mov
jno
cmp
mov
mov
into
int3
int3
ret
adc
mov
inc
shll
int
in
sub
stos
insb
pop
sti
stos
jb
insb
mov
out
jns
pop
sbb
jle
pop
ret
cwtl
imul
ja
jecxz
ljmp
jle
add
sub
or
mov
push
mov
mov
fcmove
inc
mov
mov
inc
mov
mov
or
in
lahf
sbb
push
nop
mov
repnz
mov
mov
std
mov
ficoms
mov
and
dec
xchg
or
leave
les
daa
sbb
stos
jle
subl
mov
inc
aaa
stos
cli
adc
mov
icebp
push
add
outsl
jg
push
pop
add
mov
inc
mov
adc
jae
lret
dec
inc
inc
add
test
and
dec
jge
pusha
add
je
std
jne
mov
lahf
xor
sub
sbb
push
pop
insb
jb
or
push
ss
mov
lods
jle
es
xchg
sbb
xor
out
cmp
xor
ret
mov
nop
movb
inc
cmp
lods
sub
adc
das
jae
imul
out
leave
xor
pop
jb
test
add
aam
add
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
pop
cmp
hlt
pop
bound
inc
inc
iret
or
std
or
stc
call
adcb
dec
aaa
imul
and
mov
cmp
mov
scas
mov
mov
lock
dec
mov
loopne
insb
movsb
xchg
xchg
jg
inc
push
xor
sub
push
test
xchg
cmp
lock
icebp
fbld
mov
cli
aad
pop
sbb
mov
lret
add
pop
cmp
std
mov
xlat
fadd
in
aas
outsl
int3
pop
movsb
fsubs
jle
xor
sbb
lcall
enter
pop
fidivs
push
fs
int
mov
push
add
xchg
aaa
mov
lods
mov
pop
daa
pusha
mov
add
mov
and
int
push
and
xchg
cmpsl
imul
mov
aas
cmp
push
loop
dec
jo
adc
sbb
push
imul
rorl
mov
test
mov
push
ret
xor
out
jbe
or
fsubl
imul
xor
dec
or
or
mov
sbb
inc
xchg
int3
fdiv
or
push
or
lods
pop
out
sti
jmp
inc
ljmp
pushf
pop
insb
mov
punpckhwd
test
dec
sub
fs
cltd
xchg
and
sahf
mov
inc
xchg
bound
aas
add
aam
xchg
sub
jns
inc
call
lock
cmp
andb
inc
cmp
inc
mov
dec
mov
xlat
xor
mov
les
addr16
bound
lahf
bound
mov
or
les
aad
addr16
daa
ret
dec
stc
stc
jmp
hlt
subb
mov
pop
das
movsl
jns
push
push
leave
scas
das
lahf
loopne
test
mov
leave
mov
mov
and
mov
outsb
cmp
cmc
icebp
lods
lock
aad
test
lcall
icebp
or
or
shlb
mov
loopne
loope
dec
call
hlt
lods
xor
out
xchg
add
push
lods
mov
in
mov
fsubrs
in
aad
mov
arpl
xchg
cwtl
popa
out
mov
clc
je
test
jo
clc
call
dec
in
mov
aad
test
xchg
filds
insl
xlat
xchg
rorb
cli
dec
mov
add
mov
pop
pop
mov
mov
mov
xchg
dec
aas
jecxz
xchg
or
ret
lea
jne
xchg
or
mov
test
push
into
ret
fwait
ret
xchg
xor
fdivrs
outsb
mov
shrl
pop
movsb
lods
into
jo
aad
or
pop
popf
mov
cld
scas
loop
cltd
fsubrl
addr16
stos
das
icebp
test
cmp
xor
or
fldenv
xlat
inc
enter
mov
cwtl
push
cmp
add
cmp
movsb
popa
iret
mov
mov
bound
xchg
fimuls
sbb
test
mov
popa
cmc
mov
call
sti
sub
std
push
leave
rol
pop
scas
pop
fstp
dec
xor
leave
out
pop
mov
sar
sti
loop
inc
jecxz
push
lock
test
cwtl
sbb
sbb
aas
lahf
repnz
outsl
push
mov
xor
icebp
sbb
sbb
pop
ja
mov
adc
xchg
stos
jmp
pop
loope
push
or
daa
ret
out
add
imul
sbb
or
into
push
dec
aam
or
pop
jle
mov
idivl
in
ss
rcll
mov
jno
xchg
sti
ret
les
dec
ss
inc
jbe
je
jne
fildll
cli
lods
xor
push
push
or
scas
inc
mov
jl
pop
push
test
jmp
or
rcrl
jae
insb
pusha
insb
xchg
push
or
loope
in
imul
cld
mov
mov
mov
xor
cli
jo
aaa
cmpsl
sbb
adc
pop
mov
xchg
mov
inc
in
das
out
into
xchg
loop
in
imul
fwait
push
mov
movsb
insl
pop
in
addr16
pop
or
leave
test
mov
movsb
cs
inc
subl
sbb
xchg
dec
outsb
arpl
add
jge
mov
leave
add
jecxz
mov
or
jae
jae
cmp
sub
dec
cmp
jo
fidivl
stc
jmp
mov
xor
sti
mov
fstl
or
dec
gs
mov
push
xor
mov
adc
test
iret
lds
and
loopne
mov
fdivrl
mov
adc
cmpl
pop
and
std
lock
dec
sbb
jo
sub
in
test
sub
sub
pushl
addr16
mov
cld
cmp
mov
push
pop
js
xchg
test
mov
dec
adc
arpl
xchg
cmp
jnp
int
xchg
or
mov
xchg
ds
leave
jno
sbb
loopne
das
in
movsb
out
lcall
pop
lea
in
shl
movsb
push
jnp
push
in
add
pop
push
das
mov
inc
sbbl
outsb
stc
sub
push
pop
and
pop
cmpsb
mov
lcall
adc
sti
xchg
mov
data16
jecxz
ds
or
or
xchg
rorb
inc
mov
aas
rclb
popa
mov
push
xchg
sbb
out
cmp
mov
div
lods
std
or
icebp
pop
add
jne
dec
jge
aaa
cmpsl
mov
jne
cmpsb
inc
sbbl
or
jmp
dec
sub
outsb
xchg
mov
inc
dec
or
or
nop
xchg
xor
push
cmp
inc
dec
and
in
xor
mov
rolb
sbb
js
loop
jle
arpl
lods
pop
push
cld
loop
and
bound
into
add
addr16
xor
cli
mov
add
stos
and
int3
or
mov
push
jns
sub
dec
jbe
jbe
push
loope
push
adc
fucom
push
push
add
callw
add
jnp
mov
dec
aad
rolb
incl
fndisi(8087
mov
ss
or
stc
js
das
loope
mov
std
test
aaa
cmpsl
bound
mov
pop
mov
sub
pushf
cmp
in
mov
mov
notb
insb
sub
mov
mov
in
xchg
dec
popa
mov
aam
cld
xchg
add
clc
pusha
adc
shll
or
add
ret
cmp
data16
push
insb
aaa
sub
repz
addr16
mov
jae
iret
inc
sbb
fcomps
or
pushf
stos
xor
cli
xchg
pop
mov
out
push
mov
sub
orb
jecxz
xchg
inc
mov
and
add
inc
xchg
movsb
insb
iret
xchg
insl
insl
sarl
loop
xor
clc
push
push
icebp
push
addb
dec
aam
push
dec
or
xor
mov
fwait
xchg
dec
mov
inc
fcomi
gs
add
ret
ljmp
loopne
icebp
pop
xlat
outsb
xor
xchg
push
int
pop
ret
and
fdivrs
fnstenv
and
dec
out
popf
pop
dec
ss
mov
mov
dec
add
jb
mov
xchg
mov
xchg
stos
dec
fcmovnb
jmp
push
mov
jnp
aas
cltd
jge
negb
inc
lods
test
in
jo
xchg
inc
and
sbb
mov
sub
out
pop
jge
cld
fldenv
popa
dec
int
popf
fcomps
or
mov
nop
adc
jecxz
out
jl
adc
scas
mov
sbb
push
dec
adc
push
lock
mov
dec
pop
mov
stos
clc
push
inc
xor
movsl
push
sub
inc
mov
dec
inc
daa
push
loop
xchg
insb
inc
fwait
mov
test
jno
imul
push
insb
inc
sbb
imul
es
dec
fwait
mov
mov
pop
jmp
xchg
test
icebp
jle
loop
movb
aas
adc
sbb
adc
jo
out
imul
mov
or
sbb
xor
test
cmp
scas
add
xor
push
inc
sbb
inc
ret
mov
dec
xlat
incl
js
outsb
jbe
add
movsb
sbb
push
ret
sbb
xchg
lods
or
pop
sbb
mov
lret
loope
sldt
jnp
stos
add
inc
dec
aaa
in
jecxz
pusha
sbb
pop
or
aad
outsl
les
adc
jne
shll
pop
sub
int3
xchg
in
popa
clc
test
and
enter
jno
sbb
push
and
in
clc
pop
call
push
test
fistpll
icebp
out
int3
xchg
mov
repnz
cmp
cmpl
das
mov
lds
xor
adc
fldcw
push
mov
mov
sbb
mov
filds
loope
or
cmp
call
out
inc
out
aas
test
loopne
call
sub
mov
call
loop
test
xchg
les
xor
sub
mov
jmp
das
pop
cld
adc
out
and
ret
test
sti
hlt
fnsave
pop
ljmp
and
nop
rcr
cwtl
jns
mov
jl
rclb
cmp
push
pop
inc
xor
push
dec
rol
mov
xchg
mov
outsl
pop
clc
jmp
lret
jae
pop
decl
rorl
pop
imul
xlat
cmp
sub
bnd
mov
repz
mov
loope
dec
mov
sbb
mov
into
mov
push
xor
scas
mov
fucomp
shll
and
daa
mov
lahf
lahf
inc
sbb
insl
fidivs
ss
jns
mov
in
sub
iret
repnz
xor
mov
test
je
std
sub
cs
mov
cmp
jmp
jnp
rcll
sbb
fnsave
in
subl
xor
hlt
xor
add
add
enter
fildl
jb
cs
fcmove
lock
sbb
ds
and
adc
mov
lret
adc
push
je
loop
ret
cmp
sub
adc
out
lock
mov
pop
rcll
enter
fisttpll
lods
roll
scas
ret
ljmp
xchg
cmp
inc
sub
jb
movsb
cmp
call
mov
add
fstps
ds
insb
sbb
xor
inc
pop
testl
mov
mov
lcall
pop
movsb
inc
and
sarl
mov
adcl
imul
stos
loope
mov
sub
sub
fs
pop
cmpb
sbb
add
incb
mov
xchg
ret
loop
shlb
int3
jp
push
pop
pop
or
cmp
or
or
mov
gs
push
mov
inc
dec
xchg
pushaw
push
jg
add
or
pop
insl
or
cld
js
cld
enter
jae
and
push
inc
and
dec
sub
mov
xor
gs
inc
mov
adc
mov
nop
ret
adc
mov
in
loop
xor
jnp
or
aaa
or
cmpsb
xchg
dec
jo
nop
dec
fiadds
lret
dec
rcll
mov
jbe
and
call
lods
imul
adc
test
mov
adc
fildll
and
pop
mov
jne
or
mov
inc
push
add
rcrb
or
outsl
aaa
mov
sub
out
dec
in
mov
testl
push
jae
pushf
push
in
pop
mov
push
mov
add
hlt
aas
into
push
xchg
jl
ljmp
repnz
jp
mov
mov
xor
out
movsb
ss
mov
cmc
inc
leave
test
mov
sbbb
sub
in
sbb
inc
sub
lock
jb
inc
and
fmull
push
dec
push
mov
testb
sbb
mov
test
mov
aam
pop
mov
imul
push
shrl
lret
sbb
popf
cli
cwtl
addr16
shl
xchg
pop
jo
repnz
cli
jns
ss
daa
add
data16
mov
pop
icebp
push
or
pushf
cmp
jno
out
jae
lods
imul
jnp
int3
xor
sub
cmp
inc
sbb
jae
iret
mov
mov
sbb
data16
in
adc
sub
in
stc
mov
or
jl
add
mov
and
je
dec
add
je
cmp
nop
jmp
or
repnz
pop
dec
repz
and
cmpsl
scas
jle
shlb
out
call
xor
adc
shr
imul
rclb
ss
mov
cs
fcompl
into
loop
out
out
in
xlat
fxch
pushf
add
call
fadd
in
mov
adcl
xchg
cmp
mov
mov
leave
add
cs
mov
dec
adc
daa
mov
cmc
iret
jb
bnd
pop
pop
test
and
mov
mov
xchg
xchg
cmp
mov
shr
sbb
cld
enter
inc
scas
mov
xchg
daa
jns
mov
ljmp
lods
lods
add
cmp
addr16
add
mov
inc
les
gs
sub
hlt
cmpsb
add
call
cld
and
sub
inc
jns
fists
test
sbb
rcrl
push
pop
dec
int
outsb
sub
lcall
repz
sbb
call
in
mov
pop
in
xchg
xchg
sbb
cmp
or
pusha
scas
or
push
fmull
inc
push
jg
lods
mov
mov
mov
jbe
fs
xor
adc
adc
adc
sbb
mov
add
out
cmpsl
into
imulb
xlat
icebp
add
cld
sub
popa
sbb
into
mov
cmp
rorl
imulb
pop
mov
push
jle
test
lods
sbb
sbb
mov
lcall
les
mov
cmp
shlb
clc
push
mov
add
jnp
adc
out
push
popf
lret
add
push
sahf
pushf
pop
sub
in
sbb
clc
adc
xchg
movsl
mov
mov
mov
scas
and
sbb
movsl
std
punpcklbw
pop
xchg
pushf
fimuls
push
add
mov
pop
adc
or
cmpsb
jb
sbb
out
ja
inc
fstl
pop
fsubr
icebp
in
leave
push
je
iret
loope
mov
mov
inc
lahf
cli
mov
fimull
add
xor
aam
pusha
cmc
xor
adc
mov
add
jo
pop
jno,pt
cmpsb
lea
xor
xor
or
mov
cmp
cmp
adc
scas
mov
sbb
cmc
adc
int
in
insl
loopne
hlt
sbb
js
add
xor
sahf
dec
nop
insl
bndstx
sbb
stos
mov
stos
lret
roll
leave
sub
cmp
sbb
lea
pop
lret
jge
jo
jns
leave
lss
push
or
jae
or
insb
add
sar
in
stos
jg
popf
icebp
inc
cld
ja
cmc
mov
ret
imul
inc
mov
jmp
xchg
sub
add
push
sbb
inc
loop
je
ret
imulb
add
pop
sarb
jle
dec
out
pushf
dec
test
jns
and
scas
fbstp
loope
sbb
push
mov
call
aad
mov
pop
cmpsl
hlt
subl
dec
fadd
sahf
sti
mov
hlt
ja
in
mov
push
mov
jmp
lahf
inc
in
sub
cmc
divb
into
ljmp
lret
adc
jae
test
addl
repnz
pop
inc
mov
andb
in
ss
jecxz
dec
push
push
mov
mov
ds
mov
inc
push
aad
int3
xchg
push
cmp
and
sub
or
in
sbb
cmp
push
and
mov
jmp
jae
sub
pop
iret
addb
jns
rep
fistpl
pop
pop
cld
out
sahf
leave
mov
ja
sti
cmovo
cwtl
lds
xorb
pop
hlt
xor
mov
sbbl
sbb
xchg
push
xor
pushf
adc
js
push
sti
mov
ret
stc
mov
iret
mov
faddl
xchg
fs
dec
data16
out
mov
push
mov
lock
xchg
mov
xor
lds
xor
js
and
cltd
and
popf
lods
stos
inc
xchg
xor
sahf
pusha
push
sub
and
jecxz
scas
dec
fdivl
mov
stos
aam
jns
mov
mov
test
and
mov
call
pop
jg
cltd
arpl
sti
cmp
jmp
inc
xchg
adc
mov
mov
and
cmpsl
lock
cmp
lods
push
xchg
push
pop
leave
dec
sahf
fcoms
sub
cld
ret
dec
cmpsl
js
lahf
rcr
sub
fnstcw
mov
inc
dec
mov
dec
cmpsl
fidivrl
fsubrs
pop
xor
enter
idivb
lcall
pop
xchg
ret
cmpsb
imul
pop
aam
cld
sti
add
and
adc
mov
mov
pop
cld
pop
inc
sar
or
pop
inc
cs
mov
imul
js
lds
sbb
rcl
in
int3
xchg
xor
or
xlat
jge
fcoms
ljmp
insb
out
jp
dec
fwait
ja
push
stc
fs
pop
jbe
ss
adc
xchg
xchg
mov
outsl
out
inc
pop
dec
cmp
ja
shrl
cmpsb
xchg
imul
sub
mov
push
sarl
out
rcrb
pop
notb
mov
dec
dec
push
ret
sub
and
adc
or
out
ljmp
cmp
daa
xchg
inc
fs
mov
les
cmp
lcall
adc
aam
cmp
lret
mov
mov
jae
jge
iretw
xchg
push
fs
adc
jge
mov
adc
pop
out
movsl
xor
in
mov
adc
xchg
popf
push
jecxz
pop
movsb
pop
inc
lahf
fs
in
push
stos
ljmp
jg
cmpsl
test
out
dec
fldl
scas
and
add
pop
add
insb
rcl
pop
dec
adcb
xor
jb
add
mov
adc
arpl
xchg
sub
cmc
out
sbb
mov
jne
dec
mov
add
mov
shlb
std
pop
dec
sahf
call
shl
rcrl
sahf
dec
lds
xchg
popf
clc
rep
xor
adc
inc
loopne
mov
add
push
mov
cmp
lea
and
push
mov
loop
xchg
xchg
push
mov
push
lahf
es
lcall
dec
aad
fldt
sub
cmp
jl
mov
leave
mov
mov
popa
popa
filds
sahf
add
sub
lods
outsl
pop
in
enter
ret
shr
js
sarl
popf
xchg
negb
xchg
mov
jnp
insb
int3
aad
inc
xchg
mov
sbb
push
add
dec
sub
cmp
or
and
sti
sub
repnz
sub
int
adc
jno
dec
or
lret
xchg
lret
clc
mov
push
xchg
dec
jb
stc
daa
pop
lock
pushf
es
inc
fldenv
mov
push
jne
jno
bound
push
mov
and
into
inc
cwtl
adc
pop
mov
aaa
jg
in
mov
mov
jae
mov
mov
int3
push
and
or
out
xchg
fstl
push
adc
outsl
imul
push
push
sarl
outsl
adc
xchg
jae
test
add
mov
in
jmp
and
aam
xor
sbb
and
popa
jp
std
mulb
ja
and
int3
mov
ss
pop
js
sub
aaa
sub
out
lret
inc
fcompl
in
lret
lret
cli
fidivrs
fstpt
insb
cmp
dec
stos
or
daa
arpl
cmp
add
imul
dec
dec
faddl
sbb
imul
and
add
leave
cmpsl
xchg
mov
jge
ror
mov
loop
inc
mov
mov
cs
xchg
xor
fcoms
out
adc
scas
nop
push
popf
sbb
mov
add
push
pushl
lahf
mov
mov
scas
add
fidivs
call
mov
cwtl
out
std
pop
imul
bound
inc
mov
xchg
add
jns
cli
subl
out
xchg
test
mov
sbb
sub
sti
testb
decl
push
lods
jl
mov
or
mov
pop
sub
mov
lods
xchg
xchg
push
push
movsl
adc
push
cmp
out
cmp
ret
andb
push
sbb
scas
imul
inc
pop
das
lds
sbb
int3
cmc
sbb
aas
mov
jge
push
rolb
inc
sub
outsb
scas
inc
lcall
jp
call
mov
push
or
mov
cltd
enter
loop
push
test
jge
pop
sbb
push
dec
add
lahf
pop
cmp
pop
call
icebp
push
lret
mov
sub
dec
jg
mov
mov
outsl
test
cld
aas
mov
movsl
aad
xor
outsb
je
test
inc
int
or
inc
in
pop
in
addr16
or
or
or
adc
subl
cvtpi2ps
mov
pusha
lret
es
out
pop
and
daa
or
test
mov
or
test
aad
cli
xchg
or
xor
dec
pusha
mov
loop
lods
cmp
mov
fwait
push
sub
push
into
mov
push
mov
into
stc
aam
data16
loop
aas
pop
lds
pop
adc
push
pop
hlt
adc
mov
sahf
jne
mov
xchg
mov
dec
xor
into
out
dec
add
paddb
inc
jmp
mov
lods
cmp
add
popf
insb
xchg
mov
push
and
ret
add
fidivl
int3
push
fistl
lret
and
call
lock
sbb
dec
lods
mov
add
ret
push
inc
pushf
push
cmp
inc
cmp
xor
xchg
cmp
das
stos
ficompl
ljmp
fisubrs
addb
and
aas
jl
cmp
xchg
xchg
inc
xchg
sbb
mov
rol
test
mov
push
or
je
sbb
xchg
in
pop
jne
pop
paddq
inc
cmpl
pop
jnp
add
pop
xor
add
cwtl
pop
fidivrs
mov
jns
inc
imul
inc
jmp
lods
xchg
in
fld
jp
pop
sub
sbb
or
es
call
loope
adc
xchg
movsb
es
pusha
data16
out
jno
adcl
movsb
mov
outsb
int3
daa
push
lcall
pusha
lods
push
xchg
mov
add
pop
test
pop
mov
mov
adc
cmpb
outsl
psubusb
nop
repnz
adc
cwtl
adc
mov
imul
mov
dec
cmp
mov
push
dec
and
push
fisubrs
pop
sbb
sahf
cmpsb
mov
es
jb
push
mov
mov
lods
cmpsl
xchg
mov
bound
xchg
fbld
xlat
mov
faddp
test
outsb
xchg
imul
cmpsb
pop
rorl
jp
js
push
loope
adc
add
adc
push
test
fucom
mov
xchg
fistpll
addr16
mul
push
or
sbb
ds
and
mov
jp
jp
sub
and
mov
imul
lock
insl
cmp
shrl
push
loop
xchg
sbb
sbb
push
dec
mov
movsl
cmp
pop
push
add
int3
lds
pop
jb
in
stos
dec
push
or
cmp
mov
adc
mov
loopne
jmp
cs
sbb
frstor
cmp
or
xlat
cmp
test
hlt
add
enter
cld
inc
imul
lret
xchg
mov
aaa
xchg
aas
mov
out
mov
int3
or
cmc
xchg
jnp
dec
das
addr16
cmp
cltd
mov
test
scas
and
inc
and
cmp
sbb
cmp
rclb
jg
cmp
ret
jb
xchg
inc
lock
or
push
push
xorl
pop
xlat
imul
and
aas
imul
mov
sti
pushf
dec
test
xor
jo
data16
sub
fwait
inc
dec
jmp
inc
add
mov
sbb
movsb
add
nop
cmp
int3
adc
in
lahf
sub
cmp
pushf
inc
repnz
setg
and
test
repnz
gs
dec
jbe
rolb
sbb
sahf
lock
pop
aam
addl
sub
xchg
ja
or
push
pusha
sbb
dec
push
bswap
push
xchg
push
cmp
ja
popf
in
xor
pop
push
outsb
arpl
jae
dec
jno
inc
jns
imul
shlb
call
roll
js
fwait
call
stc
stos
cld
shlb
jp
xor
pop
mov
mov
clc
icebp
insb
fldenv
mov
push
sbb
fnstenv
in
mov
es
cmpsl
orl
je
nop
cwtl
mov
je
pop
sub
dec
mov
xchg
dec
sahf
ret
push
lahf
mov
cld
rcrl
sbb
in
or
push
cltd
inc
cmpsl
sbb
xlat
cmc
inc
jns
pushl
pop
mov
mov
inc
cld
sub
xchg
pop
ds
lods
test
into
pushf
cld
inc
or
insl
fwait
pop
cwtl
push
inc
movsl
pop
sbb
pop
xorb
aas
divl
divl
js
xor
pop
fldcw
pusha
and
inc
mov
inc
lea
add
dec
in
ss
xchg
les
sub
popa
jo
dec
aam
data16
jns
and
mov
sub
pop
arpl
pop
dec
xchg
repnz
pushf
ljmp
pop
insb
pusha
or
and
push
nop
and
xchg
lret
bound
cld
sahf
rorl
push
mov
mov
mov
sbb
jnp
push
dec
in
mov
cmp
loop
lret
test
fwait
push
lret
in
jbe
aam
sarb
jmp
inc
fisttpll
push
jns
mov
jne
popf
push
xchg
in
push
and
stc
mov
aaa
push
fildl
rolb
sbb
dec
and
push
dec
ret
into
loop
cld
cmp
xor
arpl
loope
hlt
mov
sbb
mov
pusha
xchg
lahf
aas
cmc
daa
and
or
mov
xor
adc
mov
mov
mov
cltd
loopne
adc
outsl
or
push
les
cmp
fcmovbe
mov
sub
es
sbb
insl
push
outsl
lock
cmpsl
add
mov
faddl
ds
add
arpl
mov
lods
or
push
sarb
daa
cmp
hlt
cmc
mov
pop
cmp
rcll
rolb
lea
sbb
and
mov
xorb
xor
out
js
mov
fwait
jg
aaa
add
sbb
mov
iret
addr16
or
pop
inc
shrb
shll
mov
cli
adcl
or
outsb
pop
mov
test
jno
cmp
xchg
incl
xchg
das
loope
and
outsb
test
jne
cmp
mov
mov
push
movsl
xor
std
fsqrt
enter
cmp
out
into
dec
mov
mov
jae
or
xchg
or
pop
mov
aad
mov
lahf
test
data16
and
rorb
jbe
stos
pop
dec
test
loope
repnz
inc
adc
adc
jle
shrl
pop
push
sarl
and
pop
cmpl
aas
mov
arpl
test
and
cmp
fsubrl
jg
pop
enter
push
scas
clc
shlb
push
in
push
mov
xor
sub
jmp
jp
sbb
inc
out
pop
sti
mov
adc
sbb
in
mov
sbb
les
push
and
or
insb
pop
and
loope
lahf
leave
adc
lahf
mull
add
ret
cmpsl
incb
sbb
push
test
scas
mov
jae
pushf
mov
xchg
mov
or
addr16
cmp
inc
add
daa
loopne
repz
lret
inc
mov
std
pop
lret
call
and
movsb
xchg
add
clc
mov
pop
aas
jecxz
nop
push
lret
ret
xchg
in
xor
adc
inc
stos
addr16
ja,pn
mov
mov
xlat
arpl
dec
xor
cmp
dec
xchg
cmpsb
adc
ds
push
cmp
and
inc
ss
leave
and
lret
in
jecxz
mov
pop
push
ljmp
imul
iret
or
mov
lret
loop
jge
imul
hlt
push
je
faddl
push
cld
mov
lahf
fisubs
gs
insb
sbb
test
dec
not
es
ret
fcmovbe
aaa
mov
push
test
pop
and
jmp
adc
rcr
or
push
stos
fimuls
loopne
mov
jno
in
xor
jl
mov
inc
imul
jg
arpl
push
sar
fcomps
mov
mov
xchg
mov
add
loope
enter
pop
stc
push
movsb
es
int
loop
movsl
inc
mov
jns
fidivs
ret
sub
sbbl
mov
jnp
ret
les
jb
jmp
push
push
add
mov
daa
test
in
mov
dec
xchg
das
inc
mov
cmp
sarb
fsts
mov
sbb
xlat
fwait
pop
pop
pop
sub
pusha
lcall
sti
dec
add
test
les
cltd
js
add
add
add
lcall
loope
mov
inc
in
and
mov
jmp
fsubl
add
test
and
xchg
xchg
xchg
sub
leave
push
rcr
mov
push
and
cwtl
sbb
enter
cmpsl
push
pop
gs
jg
out
test
lret
test
popf
nop
shrb
xchg
imul
sahf
jbe
mov
out
pop
mov
adc
loope
aas
test
in
aam
outsl
movsl
mov
and
mov
xchg
sub
sbb
and
or
scas
vpsubsb
or
add
aas
add
sbb
loope
mov
xchg
mov
push
add
pusha
mov
leave
imul
jns
xor
inc
cmp
pop
or
imul
xchg
aaa
xchg
test
push
fwait
clc
pop
out
and
inc
roll
dec
adc
gs
cmp
mov
inc
enter
mov
lret
inc
gs
and
shl
cmc
jae
sahf
aas
pop
mov
pop
add
inc
inc
into
mov
push
push
out
ret
fstpt
mov
movsb
sub
jmp
add
jge
fs
stc
push
mov
push
aaa
jno
std
data16
ret
lret
ret
shr
cmp
test
adc
cld
xor
sbb
pop
add
shll
insl
push
sub
cmpsl
push
imul
push
sarl
add
sti
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
aaa
push
mov
int
bound
mov
cmp
xchg
aas
push
mov
push
adc
push
push
in
gs
stos
push
fs
gs
dec
cmp
aam
fwait
decl
lods
arpl
out
les
fsubs
out
xchg
scas
mov
inc
inc
sub
shlb
push
pop
sub
pushf
cmp
movsl
stos
adc
test
cld
push
xor
push
in
dec
mov
cmc
xchg
push
mov
and
aaa
mov
out
jnp
aad
outsl
pop
das
cmp
enter
jo
sbb
inc
in
out
and
outsb
xor
mov
or
sub
cmp
pop
addr16
add
sbb
mov
pop
dec
push
xor
leave
or
add
xorl
ss
aad
lds
inc
or
ja
push
or
je
je
push
mov
loope
ret
lds
and
bound
fs
fists
xchg
shrb
test
aaa
scas
imul
mov
adc
push
in
cmp
cmp
jmp
daa
cli
or
sub
lods
sub
fiadds
icebp
add
pop
pusha
in
mov
add
data16
loop
or
dec
ret
xchg
xchg
fnstsw
mov
sub
loop
jae
lret
je
cs
mov
popa
fldcw
and
dec
jne
or
cmpsl
push
out
jl
shrl
cs
jns
dec
xor
cmp
fstl
jecxz
lret
push
cmp
les
jecxz
std
sub
pop
stos
jbe
addl
add
mov
adc
jno
xlat
pushf
or
pop
push
roll
mov
pop
lods
xchg
xor
xlat
test
dec
adc
mov
xor
inc
jl
xor
xchg
stc
and
fcom
mov
out
push
fs
dec
movsl
dec
cmp
flds
pop
sub
inc
dec
jecxz
shlb
aam
shl
or
mov
pop
and
adc
sub
in
fs
iret
insb
xchg
sbb
int
mov
outsb
out
and
das
cmc
cmpsl
and
data16
xor
mov
out
mov
notb
fimuls
adc
xor
imul
pushl
push
call
pop
dec
sti
out
xlat
inc
or
pop
loope
addl
mov
sbb
mov
fbld
mov
mov
repz
xor
push
test
push
pop
enter
adc
testb
gs
or
push
mov
movsb
shrb
or
push
mov
mull
ficoms
xchg
loopne
xchg
add
test
pop
add
dec
xchg
sti
mov
jp
test
pop
ret
sbb
into
jae
adc
cmp
xchg
std
int3
mov
fidivrs
xor
sbb
xchg
daa
testb
push
xchg
inc
pop
push
sbb
mov
stos
sbb
ret
jnp
add
lcall
inc
sbb
cmp
bound
movsb
scas
cmc
aam
mov
cmp
ror
inc
shl
add
iret
shlb
subl
out
dec
sbb
xchg
xchg
jl
xchg
mov
mov
cltd
mov
sbb
nop
dec
adc
shl
add
or
fwait
cli
jo
xor
jg
sub
inc
xchg
pop
jne
das
cmp
dec
fsubrs
lods
stc
ja
inc
jnp
fisubs
sbb
and
cmp
repz
mov
inc
ljmp
mov
mov
cmp
jbe
sbb
and
adc
sub
pop
jnp
addl
out
negl
fs
lock
mov
mov
cltd
pop
pusha
add
push
js
js
pushf
sti
xchg
mov
or
add
pop
or
and
push
insl
mov
adcl
xchg
push
ds
push
ret
mov
pop
out
sub
cmpsb
jae
and
mov
dec
js
cmpsl
shl
push
outsl
arpl
cmp
roll
gs
int
and
out
sbb
in
xchg
andb
mov
push
div
push
rcl
add
pop
jmp
ljmp
xchg
xchg
push
mov
xor
daa
xchg
orb
pop
sarl
inc
dec
push
xchg
es
cmpsl
mov
cmp
xchg
xor
mov
leave
adc
js
movsb
mov
cmp
ficomps
jb
or
sbb
aad
cltd
sub
les
add
xchg
and
mov
repz
and
pop
enter
cltd
sub
leave
fidivrl
fnstcw
push
ljmp
test
xor
fsubrl
call
push
js
int
pop
push
movsb
mov
sbb
aad
xchg
imul
push
cmp
xchg
sahf
int3
into
pop
jp
adc
cmpb
lcall
push
aad
js
mov
pop
fiaddl
mov
jae
fildl
cwtl
dec
repnz
inc
or
fwait
aas
and
cltd
pop
in
adc
xor
add
inc
iret
xchg
lods
int
test
jl
and
dec
inc
les
xor
stos
loop
pusha
push
dec
leave
repnz
push
pop
push
or
push
and
sbb
cmp
fcomi
add
cld
aas
xor
dec
cmc
xchg
mov
imul
lock
gs
arpl
ret
pop
pop
dec
cmp
xor
icebp
out
les
popa
loopne
dec
push
and
pop
pop
and
adc
push
add
lock
jmp
and
lock
aam
mov
aas
dec
xorl
pop
push
stos
push
daa
or
mov
inc
les
jmp
cmp
fidivrs
sub
cmp
mov
sbb
clc
push
popf
test
cltd
loop
dec
and
jecxz
mulb
pop
adc
rcll
add
ss
rclb
cmp
mov
push
ljmp
loope
movsb
cmp
es
fwait
adc
ror
mov
jb
repz
call
mov
movsb
fsubrs
push
cwtl
jge
or
dec
cmp
fisubs
inc
add
inc
mov
push
xchg
mov
es
lahf
incl
push
jnp
pop
stos
nop
mov
sub
jo
dec
sub
out
push
cmp
jae
dec
insb
sub
jmp
sbb
call
xchg
jmp
mov
lret
sbb
insb
ja
sub
in
outsl
mov
xor
ds
adc
movb
mov
or
test
mov
pop
dec
repz
test
inc
mov
out
arpl
fstl
mov
mov
mov
add
sub
negl
push
daa
shlb
xchg
inc
sbb
sub
xor
loopne
sbb
inc
hlt
scas
in
fwait
test
push
rcll
xlat
insb
adc
push
pop
inc
mov
and
mov
pop
pop
notb
add
xorl
scas
xchg
sarl
andb
cli
push
les
fwait
push
ret
mov
sub
aaa
jae
lods
les
lds
jns
lahf
cmp
subl
add
je
adc
idivb
mov
in
cld
ja
or
push
rorb
sbb
shlb
pop
push
ljmp
mov
dec
mov
sub
sub
inc
and
and
jnp
mov
movsb
or
xchg
xor
test
fsubrl
xchg
shlb
repnz
cmc
aad
xchg
test
jo
mov
popa
mov
fwait
sub
pushf
loopne
adc
pop
gs
cmp
int3
repz
aaa
stos
cmpsl
scas
sbb
fiadds
adc
xchg
jl
mov
mov
mov
aad
pop
mov
push
aaa
pop
pop
outsb
or
jnp
inc
lock
or
sub
sub
pop
loope
jge
sbb
xchg
cmp
xchg
push
mov
gs
jle
lret
mov
sbb
loope
rclb
out
push
push
xchg
sub
loope
mov
jl
mov
xor
arpl
fldcw
mov
push
and
add
lcall
push
dec
stc
pop
or
or
sbb
pop
repz
mov
dec
jl
leave
push
call
cmpsb
sub
leave
cwtl
cmp
rorb
sub
lret
fwait
xor
aas
bound
mov
mov
mov
cmp
sub
ss
std
mov
inc
lods
dec
repz
pop
fidivrs
xor
mov
movb
mov
in
icebp
push
cmp
gs
mov
sbb
pop
out
jl
rorl
push
fcmovb
or
scas
shrb
push
pop
push
cmp
jl
or
adc
out
inc
xor
imul
pop
add
xchg
pop
xchg
testb
mov
fiaddl
add
pop
arpl
filds
fdivrs
repz
ss
std
pop
mov
mov
movsl
leave
pop
cmp
mov
inc
frstpm(287
sbb
or
jno
and
outsl
in
pop
outsb
flds
push
shll
jle
pop
jecxz
push
adcl
add
nop
sbb
es
mov
fstpl
int
mov
clc
push
std
xor
out
adc
out
mov
adc
fistl
js
out
sbb
sub
popf
ret
jecxz
sbb
xorl
loope
std
fldcw
imul
mov
sti
mov
je
sbb
sub
sahf
push
frstor
xchg
scas
mov
loopne
xchg
mov
shll
movsl
xor
push
pop
and
jnp
lock
inc
add
xlat
cmp
mov
and
aaa
mov
mov
mov
arpl
adc
dec
lahf
sub
jbe
nop
dec
mov
adc
popf
xor
loopne
scas
addr16
jae
lock
sub
mov
or
mov
xchg
and
movsb
sbb
aaa
mov
in
mov
push
shl
dec
pop
and
xchg
ja
pop
clc
cwtl
add
aas
in
mov
xor
push
cmpsb
inc
cmpsb
arpl
ja
or
inc
js
fdivp
mov
cmp
mov
jl
rorb
movsl
cmp
pusha
add
stos
rcll
and
sbb
mov
test
repz
xlat
push
sbb
scas
ret
fcmovnbe
jne
roll
daa
stos
movsb
scas
ja
out
mov
cli
push
mov
push
gs
mov
data16
loop
adc
dec
mov
mov
or
jle
fwait
lea
cmp
cli
je
xchg
or
jnp
ret
xor
cmpsb
inc
testb
mov
fwait
inc
mov
mov
inc
data16
pop
cmp
pop
mov
lahf
sbb
adc
sbb
mov
mov
addr16
jns
ja
inc
js
inc
dec
cwtl
inc
add
pop
dec
fdivl
frstor
adc
add
pop
cmpsl
mov
aaa
lods
loop
insb
jno
dec
int3
shr
dec
mov
mov
push
mov
in
dec
xchg
add
fcoml
lret
lea
lds
aam
repz
jo
or
pop
dec
xor
in
and
jle
rolb
sub
push
adc
cmc
lods
inc
stc
icebp
cmp
sub
repnz
sub
adc
xor
sbbl
adc
and
sub
or
xor
lds
icebp
add
cld
jle
inc
lret
sub
sub
jp
xorl
lea
pop
sbb
add
sub
inc
ret
cs
inc
loopne
icebp
outsl
outsl
inc
sbb
add
pop
xchg
into
pushfw
xor
rorb
push
ret
cmp
in
enter
imul
mov
cmp
jae
aam
ds
into
cmp
sub
std
inc
mov
arpl
push
jae
sbb
mov
or
ds
fdivrs
add
les
mov
pusha
sub
aaa
pushf
jne
xor
in
cmp
sub
jo
dec
out
jne
sub
mov
data16
ffreep
scas
dec
aaa
adc
test
stos
sub
pop
sub
dec
test
cmc
mov
or
pop
lods
and
movsb
pop
fcmovne
push
pop
push
inc
ljmp
adc
icebp
pop
adc
xor
lcall
lock
popa
movsb
hlt
outsb
filds
inc
pop
mov
in
imulb
inc
xchg
in
jmp
fld
lret
mov
sbb
mov
jg
icebp
mov
and
sbb
xchg
cld
and
xchg
push
lcall
cmp
leave
mov
stc
push
jecxz
sub
jae
dec
hlt
aad
inc
rcrl
cli
jl
push
add
sbb
cli
imul
sub
sub
insb
fsubrs
nop
daa
add
popf
test
xchg
out
adc
loop
push
xlat
add
cmpsb
mov
outsl
shrb
movsl
aad
arpl
js
pop
mov
add
lret
push
cmp
popa
cmp
cmp
push
int3
repz
pushw
adc
scas
jecxz
scas
sub
hlt
stos
xor
dec
adc
jo
and
mov
in
sbb
mov
mov
adc
ss
or
je
out
call
mov
rcrb
pop
in
adc
test
mov
mov
adc
mov
test
fsubr
xchg
sub
push
int
sbb
push
adc
jge
pop
xlat
icebp
push
inc
mov
jg
adc
push
push
pop
repz
mov
gs
cmpsb
cmp
aas
les
nop
mov
xchg
cmp
pop
mov
mov
and
movq
jl
cli
sahf
cmp
inc
jg
fistps
out
call
adc
hlt
and
xchg
jmp
dec
xlat
inc
insb
mov
xchg
test
mov
ja
xor
sub
lret
push
jno
jns
inc
std
stos
fistps
jg
mov
lods
shl
cmp
fbld
sub
inc
jae
es
mov
or
push
test
popa
sti
dec
popa
jl
leave
ds
cli
aam
add
cwtl
out
fstps
fwait
lahf
cmc
dec
cmp
outsl
enter
or
aaa
in
mov
stc
mov
lret
push
das
xchg
xchg
movsl
push
mov
pop
sub
jbe
jmp
sub
or
pop
mov
loope
sbbb
jne
dec
push
mov
add
jns
fs
movl
jnp
xorb
inc
sub
es
xor
pop
add
lods
xchg
in
pop
cli
sbb
push
xchg
add
push
jb
mov
fdivr
jno
jo
cmpsb
aas
sub
mov
insl
loopne
add
out
xchg
pop
div
sbb
cld
lcall
mov
cmp
out
push
push
lods
ret
fimull
pop
pop
aad
adc
xchg
jbe
xchg
mov
test
dec
dec
xchg
jnp
xor
lods
das
and
sub
filds
xor
cmpsl
fists
popf
xor
mov
mov
or
add
das
sarl
xchg
lcall
xchg
lds
insl
aad
aam
mov
test
mov
js
pop
repz
dec
sbb
sub
call
or
fwait
sti
jns
xchg
loop
or
nop
test
iret
and
and
lret
ret
inc
and
add
or
mov
jge
cs
nop
rolb
not
in
inc
and
mov
jno
hlt
loop
into
popf
jbe
test
aaa
into
inc
xor
jns
out
cmp
in
xchg
dec
pop
add
mov
inc
xor
pop
and
std
xor
or
frstor
fisubrs
insb
shlb
lods
mov
popf
add
nop
inc
andl
dec
or
or
sub
mov
das
cmpsl
gs
lret
cli
pop
jg
pop
mov
out
jge
shr
push
shlb
fdivrs
test
aad
and
pushf
lds
testb
stos
jnp
cwtl
mov
or
pop
cwtl
test
dec
jo
jns
mov
adc
insb
aaa
movsb
ret
mov
mov
in
aam
jbe
int
in
stos
std
js
xor
cmp
xchg
enter
shl
push
lods
in
out
aas
and
das
mov
or
fadd
in
ret
mov
push
or
push
mov
lock
jge
ds
enter
add
mov
test
les
mov
addr16
fxch
js
jo
test
cmc
xorl
adc
dec
push
loope
jmp
pushf
xchg
lods
xchg
aad
es
adc
sub
xchg
enter
outsb
xor
add
daa
sub
adc
adc
rolb
mov
es
sub
jns
adc
ja
dec
ret
pusha
pop
aaa
les
jmp
and
push
cli
cmpsl
sub
pop
test
inc
arpl
xchg
inc
in
icebp
mov
xchg
cmpsb
mov
or
pop
mov
mov
lret
xchg
jg
xor
dec
mov
push
jae
push
inc
or
push
repnz
xor
xchg
or
or
leave
daa
scas
push
push
jp
sbb
or
int
int
sbb
pop
fcom
mov
or
les
std
lahf
pop
sub
movaps
sbb
mov
out
inc
jo
shl
sbb
ret
nop
test
inc
repnz
xchg
add
or
or
jecxz
fldenv
enter
inc
sti
pop
cld
popf
aaa
or
shrl
sbbl
mov
inc
sub
xchg
das
push
pop
fcmovne
push
sub
cmpsl
push
inc
jae
bound
pop
icebp
cld
lds
jmp
pop
push
ja
iret
push
mov
call
xor
out
std
push
mov
cmp
pop
hlt
ja
or
push
andb
xor
xorb
cltd
jb
loope
and
stos
cmp
js
inc
ljmp
add
insl
adc
in
and
mov
sub
mov
inc
jecxz
jbe
cmp
pop
pop
mov
xor
shlb
xor
jge
sub
imul
dec
inc
call
sbb
loop
xor
adc
xor
gs
cmp
fucomp
out
and
fisttpl
dec
jg
dec
cmp
adc
xchg
sub
lcall
pop
sti
ret
lret
jle
in
push
mov
push
scas
inc
mov
lret
aaa
mov
or
mov
cltd
jne
dec
mov
test
loope
addr16
push
dec
mov
sub
call
aas
scas
ja
jg
call
pop
pop
rcll
cmp
cmpsb
lret
daa
out
sub
mov
mov
jp
or
cli
push
pop
ja
pop
pop
xor
push
clc
push
sbb
and
fisubrl
pop
and
stc
xchg
lods
fcom
inc
adc
push
test
nop
fimull
push
inc
sub
shlb
in
clc
sbb
jmp
push
lock
pop
and
jo
inc
into
dec
mov
cmp
adc
data16
add
cld
orl
das
push
enter
sbb
inc
or
jo
sbb
mov
jmp
gs
jmp
sbb
lds
adc
or
add
or
sbb
xchg
adc
mov
cmp
int3
sub
test
ret
jb
lcall
js
inc
lock
loopne
ds
daa
adc
mov
loopne
mov
xor
lcall
inc
fcoms
sub
mov
sarl
and
push
cld
adc
gs
ficomps
mov
pusha
addl
xor
popf
scas
jl
jecxz
and
inc
shrl
lahf
push
pusha
push
sub
into
es
pop
incb
pop
mov
mov
or
daa
mov
sbb
movsl
xchg
jge
loop
add
xchg
repz
push
mov
and
sub
cltd
jge
mov
dec
mov
outsb
mov
icebp
jnp
sub
insb
mov
push
js
jge
int3
rclb
mov
dec
clc
test
jp
add
push
in
or
jle
gs
ret
enter
cmp
cmc
mov
sbb
inc
inc
nop
xchg
outsb
inc
sub
loopne
jecxz
cmp
mov
mov
dec
cmp
mov
sub
movsb
sarb
xor
mov
sahf
out
mov
xchg
pop
ja
dec
push
orb
sbb
and
dec
rcl
inc
xor
lock
scas
push
sub
pop
cmp
addb
lds
sarb
mov
pop
push
jne
xor
mov
jb
int3
bound
bound
xchg
push
test
mov
pop
push
ja
add
jmp
adc
pop
xchg
mov
stc
test
mov
or
cmc
sbb
insl
scas
mov
rolb
out
inc
js
hlt
sti
fcomps
xlat
cmpsl
sub
jae
rcl
nop
inc
jns
call
ret
mov
repz
test
xchg
xor
in
lcall
dec
xchg
xor
addl
std
lret
adc
push
mov
inc
inc
mov
lock
xchg
insl
inc
dec
cltd
in
and
fidivs
cmp
je
or
inc
push
rcrb
in
sbb
xor
cwtl
mov
inc
mov
sub
xchg
pop
in
push
pop
and
sub
and
insl
in
icebp
inc
jo
mov
mov
andb
shl
pop
fucomp
scas
pop
daa
xor
or
imul
xor
add
call
jecxz
dec
sbb
int
clc
daa
mov
inc
cli
mov
add
movsb
mov
sbb
adc
sarb
lea
bound
push
fnstsw
cmc
fnstsw
sub
icebp
mov
xchg
jmp
rol
xor
fldenv
push
adc
gs
sbb
pop
fs
or
xchg
lret
out
adc
mov
std
sti
adc
jbe
mov
repz
dec
xchg
mov
call
addr16
leave
in
sub
out
frstor
inc
and
imul
sbb
inc
jecxz
fs
pop
push
inc
or
pop
pop
test
pop
adc
mov
leave
pop
pusha
in
or
pop
xor
stc
fs
dec
outsb
xchg
mov
adcb
lret
fs
popf
movsl
jle
cmp
aaa
outsl
icebp
lds
sub
cmp
sub
mov
insb
out
lods
and
das
arpl
mov
or
cs
inc
cmc
pop
or
push
bound
cmc
cmpsl
push
pop
or
popa
mov
femms
daa
mov
mov
cmp
lods
je
mov
or
add
mov
popf
sahf
cmc
and
outsl
cmpsl
pop
jnp
inc
mov
notl
xchg
iret
cmp
mov
mov
scas
cmp
inc
ret
les
jnp
jmp
mov
and
mov
cmp
shlb
jg
bts
outsl
pop
inc
jl
lcall
or
in
push
push
call
push
out
mov
mov
mov
and
sub
stc
or
aaa
mull
ds
xor
lods
or
lods
jl
push
add
incb
adc
push
jo
loopne
sub
addr16
xorl
xchg
outsl
cli
add
mov
rcrl
fsubrs
int
xor
es
lret
in
bound
sti
shl
ret
jo
popl
test
or
inc
test
inc
push
add
pop
pop
cmpsl
fisttpll
inc
xchg
cmp
test
in
dec
dec
cmp
lret
or
ret
push
and
lods
pop
enter
les
ljmp
icebp
test
push
inc
jmp
and
pop
cltd
add
add
into
mov
jae
pop
cmp
mov
xchg
mov
or
ja
push
loopne
insl
cmp
pushf
inc
inc
aas
hlt
movd
jle
cmc
and
jns
sbb
leave
je
scas
cld
stos
divl
mov
addr16
mov
jnp
aad
jecxz
sti
jp
mov
gs
push
sahf
adc
inc
push
push
sbb
pop
jo
shrl
ret
lock
pusha
test
and
sar
orb
shrb
lods
in
pop
call
daa
out
xchg
cmpsl
int
pop
addb
scas
jg
int
in
push
xchg
dec
rcr
adc
ret
xchg
add
and
or
sbb
cmpsb
pushf
enter
push
jl
lods
pop
stos
mov
andl
inc
fyl2xp1
xor
std
inc
sbb
inc
fdecstp
push
cltd
mov
sti
out
jg
push
sub
dec
loop
xchg
aad
mov
test
pop
xorb
jno
dec
fdivrp
mov
adc
ficomps
scas
clc
mov
ficompl
test
pop
push
lahf
icebp
cmpl
jecxz
outsl
mov
inc
sbb
repz
dec
arpl
cmp
pop
adc
les
mov
icebp
icebp
sbb
out
mov
orl
xor
sub
pop
xlat
xor
test
das
mov
adc
xchg
inc
movsb
ds
leave
push
js
fisubs
pop
andl
mul
jle
dec
fmuls
push
and
cltd
fildl
dec
call
stc
testb
mov
and
lahf
aad
adc
daa
xchg
adc
push
subb
mov
xchg
pop
daa
adc
mov
repz
inc
clc
enter
inc
ljmp
inc
or
cmp
xor
bound
cmp
push
xor
leave
fdivrs
xlat
jle
lea
push
or
call
inc
cmp
lods
and
add
mov
into
addr16
add
les
ficomps
addl
mul
sub
je
fcoms
mov
cltd
push
pop
jmp
dec
ror
mov
and
andps
mov
test
cmpsl
xchg
adc
filds
sub
jo
std
or
int
sbb
nop
mov
add
mov
outsl
inc
in
jb
adc
shll
test
jnp
mov
das
cli
out
and
jge
jg
mov
lahf
mov
jbe
nop
enter
pop
lcall
sub
add
xor
push
adc
imul
jle
or
add
mov
gs
pop
mov
mov
mov
mov
repz
and
cmp
mov
out
mov
movsb
mov
hlt
std
push
out
pop
ret
sbb
xchg
or
push
ds
mov
fisubl
out
in
ffree
jne
dec
dec
fdivs
int3
add
push
jmp
ret
and
fs
rep
xchg
mov
fbstp
sub
dec
mov
stc
ljmp
dec
out
sbb
adc
adc
into
jmp
lods
mov
insl
and
leave
jbe
and
and
fcmovne
gs
xchg
cwtl
cltd
and
mov
cmp
daa
sbb
xchg
jae
cld
dec
cltd
aaa
sbb
adc
adcl
insb
cmp
fucomp
jns
and
cwtl
out
push
into
and
and
cli
or
stos
jbe
shrl
pushf
bound
lret
sbbb
clc
inc
and
push
iret
insl
addl
pop
mov
scas
leave
cmp
sarb
imul
fs
scas
test
imul
push
fsubr
mov
sbb
cwtl
mov
add
add
orl
jl
pop
cwtl
inc
outsl
push
add
sub
mov
notl
xchg
jb
pop
mov
aad
mov
sbb
mov
mov
and
or
cld
xor
lds
push
pop
pop
inc
popf
xchg
cs
into
leave
fcoml
psubb
jne
cmp
mov
pop
xor
inc
lret
inc
and
inc
enter
ds
adc
sbb
lds
pop
mov
and
faddl
cmpsl
dec
sub
ret
in
lea
andb
pop
pusha
out
push
pop
push
xchg
testl
add
lea
cmc
cwtl
jp
inc
push
jbe
sahf
addr16
fcoml
scas
fnstenv
insl
jne
mov
sbb
mov
push
sub
inc
xchg
xor
lea
pop
fwait
lret
sbb
cwtl
les
out
mov
stos
mov
dec
xor
lock
cmpsl
pop
mov
xchg
in
jb
das
ret
inc
cmpl
fisubrl
mov
sbb
pop
les
out
movsl
inc
mov
jns
sbb
popf
daa
pushf
bound
testl
nop
dec
addr16
out
mov
int
mov
cwtl
fiaddl
nop
jge
push
mov
loop
imul
pusha
imul
xchg
ret
iret
dec
fcmovnb
add
sbb
xchg
jle
inc
mov
mov
pop
mov
jl
xor
fisttpll
sub
imul
test
mov
xor
fsubrp
push
xchg
xchg
inc
pop
inc
dec
lea
jle
fmulp
popf
sbb
adc
mov
add
inc
dec
and
ss
add
mov
push
cmp
bound
lret
outsl
pop
xor
repnz
jnp
or
mov
roll
jae
mov
aaa
push
loope
mov
incb
jle
xchg
mov
inc
stos
inc
push
dec
cli
shlb
fwait
icebp
push
js
call
rcrl
push
inc
cmp
mov
aaa
inc
lea
xchg
addr16
dec
xor
mov
aad
fnsave
ret
test
call
movsb
pusha
ljmp
int3
ljmp
fstps
jbe
inc
fwait
mov
imul
std
cmp
or
and
clc
dec
cs
test
int
out
add
jmp
push
xor
adc
insb
sbb
fnstsw
call
inc
fcoms
lcall
mov
rclb
jne
outsl
mov
cli
sub
jle
mov
jle
sbb
ljmp
mov
pop
lret
or
fisubrl
movsl
xchg
rdtsc
jle,pt
add
jp
mov
add
popf
push
and
out
push
ds
int
xchg
jb
pop
pop
dec
jmp
pop
arpl
pop
xor
sub
ds
add
push
pushf
in
test
fidivrl
mov
mov
sbb
xor
lahf
in
xor
repnz
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
add
mov
pop
bound
int
fstl
mov
sbb
jge
mov
or
mov
push
jns
enter
sbb
mov
lcall
mov
mov
cmc
mov
scas
pop
shlb
shll
mov
and
mov
ds
pop
mov
ret
cld
bound
mov
sbb
cmp
imul
fucomip
inc
scas
adc
std
dec
ja
dec
out
pop
xchg
xchg
adc
push
and
cmp
pop
dec
dec
push
das
mov
jne
lret
pop
fmuls
mov
push
xchg
push
inc
mov
addr16
fadd
scas
xchg
adc
hlt
push
loope
push
push
lods
cmp
dec
ss
mov
xor
sahf
mov
lea
mov
push
je
mov
xor
scas
out
cmp
jmp
scas
sub
xchg
ja
or
popa
lds
mov
jne
rcrl
outsb
jb
fwait
push
jl
xchg
lret
adc
fs
xchg
mov
repz
scas
xor
mov
popf
xchg
mov
push
insl
jne
xchg
cmp
es
inc
out
out
pop
push
subl
inc
loope
sub
pop
les
sub
xor
subb
loopne
subl
push
mov
add
scas
movsb
push
lahf
xchg
xchg
pop
out
sbb
rolb
test
jmp
xor
idivb
nopl
mov
lods
xlat
push
adc
cmp
mov
xchg
xchg
adc
stc
scas
orb
push
loop
inc
fmuls
sub
push
xor
shlb
jmp
fsubrl
adc
and
xchg
insl
add
jle
in
dec
fstpt
jmp
data16
sbb
icebp
testb
mov
ss
movsb
xor
adc
sub
jecxz
mov
cwtl
push
push
jo
repz
and
push
roll
in
in
push
sbb
sub
mov
test
sbb
lcall
fdivr
mov
test
mov
xchg
xor
jb
fsubr
imul
add
jno
jmp
les
in
int
aaa
shlb
popf
jg
pop
sbb
sbb
popf
push
fisttps
jle
push
cmp
out
cmp
lret
push
add
and
push
mov
xchg
mov
xchg
mov
sbb
nop
fmul
pushf
inc
cli
sub
daa
int
cltd
adcl
daa
ss
std
mov
out
sbb
push
and
mov
out
subb
cmp
lods
js
or
int
and
test
add
cmp
out
push
pop
jbe
xchg
insl
push
dec
call
das
in
cld
cmpsb
mov
aad
and
xor
mov
inc
and
fldl
cltd
add
in
lock
adc
or
stc
add
in
lret
ss
icebp
or
int
imul
dec
aas
sahf
insl
ljmp
repz
rcl
shll
xchg
scas
enter
inc
and
nop
and
adc
inc
lods
sbb
inc
les
mov
shlb
test
jmp
xchg
sub
mov
pusha
repnz
popa
pop
imul
mov
inc
jne
stos
movsl
add
subb
fistpll
mov
sub
cmpl
imul
jmp
outsl
insl
sub
test
jne
push
fsubrp
pop
out
push
in
xor
cltd
jnp
in
and
ss
or
jmp
adc
fadds
lret
stc
or
adc
jno
pop
or
gs
bound
shrb
movsb
fistps
orb
push
adc
push
mov
jno
pop
push
xchg
add
loope
push
fbstp
data16
test
das
inc
in
inc
shlb
hlt
cwtl
xchg
test
sahf
push
adc
lcall
shr
cmp
xor
fisubrs
mov
ja
test
cmp
movsl
loop
adc
inc
movsb
pusha
dec
loop
imul
sub
repz
xor
outsl
inc
mov
xorl
cwtl
adc
data16
add
leave
jb
aad
sub
jno
sub
inc
xchg
xor
jb
icebp
ljmp
sbb
pusha
sbb
and
loope
xchg
iret
dec
test
sbb
mov
daa
push
es
lret
scas
fcmovu
cmc
pop
and
cmc
mov
je
popa
faddp
ret
addr16
cmp
cmc
cmp
mov
test
pop
lret
mov
mov
xor
test
out
xchg
add
inc
jmp
xchg
ss
fsubrs
out
in
aas
inc
clc
or
pop
fdivrl
decl
loopne
imul
or
cmp
pop
dec
sbbb
mov
cmpsb
cmpsb
mov
pop
mov
cmovbe
movsb
xchg
nop
clts
out
push
dec
cld
loopne
cmp
xchg
lds
pop
sahf
ret
ja
lea
jmp
rorb
adc
pushf
sbb
push
xchg
mov
cmc
ret
mov
and
mov
mov
jecxz
loope
jb
inc
dec
jg
xor
xor
add
jg
mov
test
popf
sbb
push
int
scas
cmp
or
cmp
push
jne
stos
bound
outsl
and
stos
lds
dec
add
mov
xchg
roll
pusha
stos
xchg
leave
xchg
pop
jmp
pop
jnp
mov
mov
les
iret
jl
and
int3
dec
mov
add
jno
xor
mov
out
cmpsl
cmp
inc
popa
aam
enter
rcrb
and
sbb
mov
out
ret
mov
lcall
push
shrl
dec
call
jnp
xlat
push
cmc
cmp
xlat
arpl
push
into
sarl
and
lods
cmp
xor
in
jle
xor
push
or
nop
in
dec
leave
xor
dec
or
push
cmpsl
or
add
push
pop
mov
sbb
inc
add
pop
pop
xchg
jle
imul
lcall
divl
mov
sti
cwtl
icebp
mov
inc
test
cld
or
mov
mov
pop
lret
cltd
jl
js
out
insl
push
adc
sub
push
cld
push
loopne
out
cs
idiv
add
push
or
mov
add
sub
push
add
movsl
ret
xor
mov
test
mov
mov
dec
inc
enter
in
jp
push
push
and
bound
push
push
shll
push
lds
or
shl
sbb
testb
pop
loope
dec
movsb
mov
clc
xlat
icebp
nop
das
inc
adc
fisttpll
sub
and
cs
lahf
xor
popa
sahf
jg
cmp
test
cmpsl
sub
fistps
sbb
or
pop
push
das
cmp
cmp
push
pusha
scas
sbbb
pop
in
aad
fcom
insb
pushf
mov
xor
std
mov
mulb
dec
or
dec
pop
int
test
adc
or
shlb
lahf
push
test
add
jle
arpl
cwtl
idiv
inc
jge
sub
addr16
or
cmp
stos
inc
jbe
lcall
aad
stos
out
inc
or
cmpsl
and
outsb
out
adc
lcall
sub
jo
push
jo
js
roll
movsb
int3
pop
cmp
xchg
inc
push
adc
pusha
aas
imul
es
cmp
push
sbb
xchg
xor
adc
leave
mov
inc
jmp
sahf
dec
jl
pop
push
std
push
in
decb
cmp
mov
cltd
mov
push
pop
sarl
sbb
xchg
mov
fcmovu
bound
dec
ss
pop
js
loope
aaa
adc
sub
call
xor
aas
pop
lock
cmpl
xchg
out
mov
or
cmc
xorb
loopne
test
dec
xchg
pop
sbb
lcall
pop
push
cmp
xchg
dec
sarl
dec
sbb
xchg
insl
push
fstps
ret
sbb
les
fdivs
adc
xcrypt-ctr
cmpsl
sahf
lods
sbb
ret
push
xor
mov
mov
nop
add
clc
rclb
ror
push
mull
je
jp
push
in
call
mov
cltd
add
hlt
mov
push
add
mov
pop
test
shl
out
pop
sub
je
rol
adc
shrl
andl
jg
scas
fildll
fwait
push
das
fsubrl
aaa
jo
inc
idivb
dec
sti
jge
cld
push
es
sbb
push
sub
jnp
aam
lods
stos
dec
out
and
add
push
gs
int
insb
or
imul
lret
lea
add
mov
mov
pusha
xchg
adc
stc
in
insb
pop
mov
ss
jae
repz
movsl
repz
stos
push
leave
popa
hlt
sub
lret
jmp
adc
test
jl
pushf
in
ss
push
mov
lret
shlb
inc
cmp
sub
push
xor
shll
andl
iret
add
cmp
test
sub
test
pop
xchg
mov
and
fwait
mov
out
mov
cmp
test
leave
dec
out
mov
inc
fcmovb
xor
rclb
leave
rcrl
inc
jle
andb
sbb
insb
roll
into
and
sub
lret
sub
icebp
mov
push
andb
pushf
ljmp
and
fisubl
or
mov
lret
dec
cmp
cwtl
scas
cmpsb
add
push
jo
mov
lods
push
cmpsb
jge
lret
jae
jecxz
icebp
fistpll
mov
sbb
add
cmc
pop
stos
mov
lods
add
in
mov
pop
xchg
popf
jp
pop
inc
add
in
push
imul
cwtl
adc
push
lds
clc
in
jge
fadds
dec
pop
push
fsubrl
int
adcl
jb
sbb
xor
mov
in
mov
push
mov
or
ja
add
mov
pop
xor
fucomp
aas
popf
andl
push
xchg
adc
add
in
and
mov
sbb
pop
sbbb
lcall
xor
lahf
pop
testl
enter
cmp
mov
dec
fistps
push
lret
jbe
das
lea
xchg
aad
rolb
push
hlt
aad
test
das
xchg
mov
xor
loope
lcall
push
nop
push
xor
sbb
addr16
in
add
jge
mov
shlb
xorl
cli
cmpb
decl
pop
pop
jmp
add
push
sbb
pop
ds
clc
mov
aas
mov
sbb
loopne
clc
inc
mov
cli
cmp
movsb
fnstsw
out
popa
mov
cmpsb
dec
push
into
sbb
fisubrl
or
jbe
and
sbbb
and
fs
push
aad
subb
popa
mov
inc
xor
or
sbb
jge
add
and
dec
fcoml
cmp
lea
jnp
lea
je
mov
sbb
inc
inc
aam
inc
jb
shrl
fimuls
enter
ficomps
les
shrb
mov
or
daa
mov
push
das
pmaxsw
jl
adc
shrl
adc
lock
inc
psllq
int3
inc
inc
lock
pop
sbb
add
add
and
mov
mov
and
xchg
dec
jne
leave
and
mov
js
movsl
mov
js
jmp
std
lcall
js
xchg
fildl
rcll
push
sub
cld
clc
stos
js
insl
xchg
out
and
mov
xor
push
and
adc
push
xchg
sbb
ret
sub
aaa
xchg
mov
adc
dec
mov
fsubl
cmp
stc
fisttps
pop
push
jb
mov
mov
enter
dec
cmc
xchg
stc
addr16
fwait
adc
or
shl
xor
xor
lret
adc
icebp
pop
dec
cmp
inc
cmp
cmp
bnd
packuswb
xor
faddl
xchg
outsb
decl
and
and
jecxz
addr16
out
cmp
mov
sbb
and
hlt
lock
arpl
sbb
push
pop
push
ret
mov
test
mov
testl
pop
loop
fdivs
fistps
scas
mov
aaa
aas
mov
mov
xor
shl
sti
xchg
mov
xor
aas
insl
stos
add
jge
xor
sub
repnz
fnsave
mov
and
mov
pop
add
fimuls
jno
xchg
aam
mov
pop
lods
stc
push
sbb
loop
es
xchg
cmpsl
cltd
movsl
inc
cmp
stc
pop
rcr
sbb
pop
ljmp
mov
push
out
push
cmp
cmc
jecxz
stos
in
aad
test
sub
mov
int
mov
insl
shl
mov
lsl
cmp
xlat
inc
lock
lret
xchg
daa
or
lcall
fwait
stos
jp
sub
mov
or
out
mov
popa
jbe
add
push
sub
or
int3
jnp
mov
outsl
xchg
xlat
push
mov
xchg
rcll
cmc
sbb
pop
sbb
and
negl
test
inc
hlt
jns
dec
fidivrl
gs
push
cmpsb
popf
xchg
fdivs
sbb
mov
xchg
shll
jecxz
sbb
jno
int3
sub
jne
call
outsb
scas
sbb
mov
cs
pop
fldl
sbb
test
push
leave
add
adc
lock
mov
out
frstor
inc
push
les
and
jecxz
fnstsw
sub
pushl
jns
movsl
and
jg
jmp
std
test
shlb
mov
or
out
inc
cmp
pop
jo
movsb
mov
int
je
gs
or
leave
xchg
adc
stc
xchg
addr16
pop
mov
cmp
pop
sub
mov
ret
jmp
sti
add
lahf
cmpb
pop
call
les
scas
mov
shll
dec
pop
pop
add
jne
inc
pop
fiadds
stc
or
lds
mov
or
or
cs
or
and
sub
int3
lods
popa
push
sub
push
mov
ret
rclb
sbb
test
hlt
fcmove
mov
fwait
push
sub
cwtl
fsubl
mov
fiadds
pusha
or
in
xor
xlat
jb
push
jb
jns
std
mov
sbb
in
jnp
cmp
gs
lret
insl
insb
ja
test
je
insb
je
cmp
xlat
push
or
movsb
imul
cmpb
jl
jp
js
cltd
fs
in
dec
aas
iret
in
push
inc
xchg
adc
add
xchg
scas
orl
fs
fwait
mov
ja
push
inc
mov
xchg
add
fsubp
ds
jns
mov
and
cmp
jno
popa
pop
roll
into
mov
inc
mov
dec
pop
arpl
das
jnp
fimull
testl
stos
mov
push
movsl
out
mov
inc
mov
add
mov
jp
fs
cmp
and
pop
dec
sbb
mov
sbb
adcl
mov
test
out
pop
jne
fisttpll
pop
sub
sub
pusha
add
xlat
cmp
push
and
ror
and
sub
or
adc
scas
mov
adcl
xchg
sub
cmp
mov
pop
roll
in
mov
dec
and
ret
daa
jb
xchg
xor
repnz
xor
dec
mov
bnd
xchg
fwait
cmp
sbb
incb
cltd
pop
cmp
pop
adc
pop
cmc
inc
sbb
aas
sbb
out
in
xchg
lods
jmp
fs
pop
pop
push
les
adc
push
rorl
arpl
popa
ds
xchg
in
inc
xlat
and
in
xchg
mov
imul
loopne
sub
sbb
pop
imul
mov
lea
je
aaa
in
fucomi
cmc
pop
pop
fidivs
clc
in
das
mov
lods
pop
movb
fisttpl
xchg
cli
mov
call
rcll
dec
fbstp
inc
sub
and
jb
push
lods
push
jns
push
jmp
mov
xor
and
mov
bound
rorl
shll
cld
cltd
adcl
dec
loope
fldt
push
xchg
push
xlat
mov
and
insl
stos
out
neg
mov
rorb
lret
adc
sbb
mov
movsl
fists
inc
jmp
mov
dec
mov
in
push
xchg
aad
cli
lret
dec
add
sahf
ja
popf
push
adc
push
pop
icebp
loopne
push
mov
fwait
rol
pop
cmp
xor
rolb
sub
loop
inc
outsb
data16
scas
neg
inc
into
mul
pop
gs
lea
enter
jmp
les
push
int3
pushf
lret
outsl
stc
sub
adc
popf
jp
mov
lods
adc
inc
xor
inc
call
roll
jge
pop
bnd
pop
push
js
in
out
lods
mov
inc
aad
lcall
cwtl
xor
and
fcoms
out
xchg
daa
bound
dec
inc
pushf
adc
mov
test
sbb
or
push
sbb
xchg
xlat
jo
repz
test
adc
cmp
push
dec
and
fimuls
xchg
scas
xchg
int3
js
adc
pop
jl
cmp
ret
pop
jmp
jne
cmpsl
mov
mov
popa
scas
xor
sbb
test
xor
jns
push
xchg
pop
push
out
roll
jae
in
xchg
mov
mov
mov
xor
loope
xchg
fimuls
rorb
leave
xor
push
sarl
dec
xor
hlt
arpl
fsts
je
cmp
dec
sub
push
xchg
scas
and
fbstp
test
iret
outsb
jae
jmp
or
cmp
xlat
cmpsl
cmp
std
xor
jl
mov
lock
inc
push
push
jnp
aad
insl
adc
jbe
sti
inc
xchg
mov
fwait
mov
adc
sub
in
jle
inc
or
rcrb
pusha
rcrb
add
shlb
call
ficoms
addb
lret
sarl
jecxz
scas
data16
push
loopne
mov
sti
mov
dec
pushf
mov
outsl
and
mov
lds
fs
xor
push
push
sbb
rcrb
adc
out
push
push
cmpsb
shl
enter
adc
cld
xchg
fdivrs
lods
sub
jo
sti
in
xchg
stc
into
call
xchg
and
aad
jo
ss
in
imul
adcb
mov
or
test
mov
ss
inc
or
or
jg
push
lret
mov
mov
push
mov
push
cmpsl
jle
lock
add
sub
mov
cmpsb
inc
pop
xor
adc
push
out
mov
lds
push
out
push
fcompl
mov
stos
out
jbe
inc
in
cli
jmp
das
cmp
mov
lahf
add
mov
xor
lahf
pop
mov
es
jnp
push
popf
mov
add
popf
je
in
pop
sti
jo
rorb
les
sbb
into
out
mov
test
xor
sub
cltd
add
or
neg
iret
sbbb
rcl
aad
mov
or
xor
push
mov
push
inc
test
cmp
mov
test
push
cmp
frstor
sbb
gs
lock
dec
or
insl
subb
aad
fldl
xchg
data16
in
fwait
pusha
mov
push
outsb
enter
sub
mov
ja
sub
mov
int
nop
into
inc
hlt
xchg
inc
clc
and
insb
xchg
call
sti
jecxz
add
out
jp
outsl
push
imul
rcrl
js
pop
fwait
out
imul
jmp
dec
and
dec
shl
fstl
and
mov
sbb
nop
mov
sti
jg
gs
roll
aad
pop
or
movsl
js
pop
popl
push
lret
dec
nop
mov
repnz
inc
imul
cmp
and
cwtl
lret
nop
mov
imul
mov
aaa
iret
out
cmc
in
inc
clc
aas
ficoml
xor
mov
es
nop
push
inc
xchg
ljmp
xor
jp
push
outsb
je
cmp
repz
jecxz
push
subl
and
jp
pushf
nop
xorb
insl
sub
es
lods
mov
sub
mov
sbb
js
pop
xchg
adc
stos
mov
jge
sti
aad
push
mov
stos
stos
lock
lock
movl
cmc
addr16
push
push
push
push
sub
nop
stos
mov
jge
imul
loope
pop
add
mov
repnz
cmpsb
jmp
iret
jo
push
mov
fwait
adc
cltd
pushf
push
push
nop
inc
pop
and
jle
pop
insl
and
xchg
or
cmp
add
jae
adcl
or
mov
mov
inc
and
arpl
push
or
lret
sbb
hlt
stos
xchg
repnz
lret
cmp
sbb
jge
xor
inc
jns
cli
mov
movsb
ret
jno
sti
cld
scas
sub
mov
jle
movl
jmp
mov
push
test
orl
jne
popa
cwtl
inc
adc
cmp
push
stos
push
cwtl
dec
xor
inc
jnp
push
inc
int3
dec
fcmove
inc
sub
or
lea
mov
aaa
mov
mov
push
movnti
mov
jae
in
testl
js
inc
pop
ljmp
adc
cs
std
arpl
push
and
ljmp
divps
in
fwait
test
jae
insl
adc
push
popf
and
pcmpeqw
cmp
mov
outsl
dec
ljmp
fisttpl
fiadds
bound
std
notb
mov
mov
in
pop
rol
xchg
add
jnp
addb
mov
pop
std
lods
loope
daa
ljmp
in
lds
lds
sub
jb
push
icebp
outsl
mov
or
rorb
sbbb
adc
inc
scas
stos
sub
insl
add
cmp
jne
movsb
xor
push
pop
shrb
dec
out
cli
mov
call
mov
mov
or
in
iret
add
cmp
test
inc
hlt
jp
jb
cmp
rclb
mov
mov
shl
data16
mov
or
push
and
or
stc
inc
and
xchg
sbb
dec
leave
jbe
test
jb
inc
stc
inc
subl
in
mov
outsb
push
lret
or
mov
ljmp
jno
xor
pop
cmpsb
sti
sbb
jge
dec
pop
fisubrl
arpl
push
cmp
std
adc
xchg
call
ret
imul
out
sbb
imul
movsl
pop
test
xchg
lock
dec
movsb
ret
ss
ret
pusha
fbld
push
hlt
imul
xchg
sbbl
hlt
push
mov
jbe
flds
popa
jmp
mov
imul
push
lahf
in
xorl
cmp
outsl
cwtl
int
jb
jo
jne
daa
push
mov
movsl
sbb
out
or
lea
pushf
call
mov
sub
stc
cli
xchg
insb
out
pop
or
xchg
sbb
notl
push
movsl
push
push
push
les
xchg
push
inc
push
dec
cmp
into
mov
mov
imul
cwtl
test
roll
sahf
and
addl
stos
xchg
and
in
mov
inc
or
sub
xchg
mov
rcr
and
mov
rorl
andb
push
cmpsb
sti
out
iret
mov
std
jno
push
xchg
or
vpminub
and
repz
test
ljmp
into
ja
jmp
adc
inc
pop
adc
andb
inc
dec
sbb
adc
cs
test
in
add
cmp
push
fisttpll
push
divb
jp
dec
aaa
popa
jnp
fistpl
cltd
ficompl
sub
stc
jmp
cmp
mov
mov
leave
pop
xchg
cmpb
push
cmp
sbb
dec
jbe
mov
xorb
outsl
mov
jae
ja
stos
jbe
out
pusha
jo
xchg
dec
gs
push
insl
test
push
in
xchg
je
and
xchg
das
jb
jae
push
sub
int3
sub
call
cmpsl
jnp
lock
test
xor
mov
sbbl
mov
push
or
arpl
je
jmp
push
mov
or
cltd
lret
in
mov
jb
adc
sub
sbb
mov
xor
outsl
loop
pusha
out
test
fcmovnu
xor
xor
or
mov
mov
xor
fsub
jmp
push
icebp
test
jnp
push
add
mov
aam
or
mov
cmpsb
fcmovb
fs
in
mov
inc
lcall
into
cmp
cmc
jbe
cli
and
iret
movsb
sahf
or
jecxz
add
ss
stos
sbb
lea
aam
mov
fildll
sub
cli
das
jne
jae
xchg
aaa
fnstsw
scas
clc
mov
repz
out
or
jge
inc
rolb
jle
add
les
sub
cmp
cmp
fwait
je
test
jl
lods
jle
mov
mulb
add
enter
loopne
push
in
sbb
ss
scas
or
mov
ss
mov
repnz
mov
ljmp
sub
hlt
inc
fwait
cmovp
shlb
cmpb
pop
mov
xor
xor
inc
dec
or
push
decb
sahf
testb
mov
mov
loope
dec
adc
and
stos
lea
mov
xchg
jnp
mov
icebp
mov
out
push
dec
loopne
sbb
adc
push
fwait
loope
mov
sub
mov
push
fidivrl
sub
push
and
aas
nop
mov
invd
pop
xor
pushf
cmc
cmpsl
sbb
jg
push
adc
arpl
adc
inc
mov
inc
push
xchg
or
mov
push
test
inc
sub
sub
mov
push
adcb
popa
rclb
testl
test
in
cld
mov
std
mov
mov
das
pop
mov
cli
into
roll
sbb
ds
inc
stos
ja
cmp
mov
leave
stc
stos
jmp
mov
or
rorl
push
inc
xor
and
jl
push
in
mov
push
pop
jp
adc
or
nop
mov
mov
adc
xor
cmpsb
and
sti
dec
xor
jl
inc
pop
repz
aam
and
and
add
fdivs
xchg
es
cmp
pop
push
xlat
inc
jne
mov
ja
fld
push
xchg
loope
out
pop
push
daa
cmc
repz
imul
jg
add
sti
rcrb
push
sahf
add
add
in
jl
adc
inc
xor
cmpb
jg
movsl
add
shrl
imul
dec
mov
inc
enter
push
lcall
std
dec
hlt
mov
sahf
xchg
dec
xchg
subb
mov
xchg
mov
jecxz
jp
stc
sahf
push
pop
jecxz
push
cmp
mov
mov
mov
test
sub
adc
mov
fidivrs
xchg
jmp
xchg
sbb
xchg
push
cmp
push
pop
ret
inc
das
sub
inc
sbb
jmp
addr16
imul
in
mov
ret
sub
fbld
insb
inc
in
xor
push
inc
aaa
insb
dec
mov
repz
mov
pop
sti
sbb
inc
and
lods
and
jo
das
push
movsl
pop
cmpb
stos
mov
sub
jp
xchg
xchg
xchg
jne
jns
into
es
mov
adc
lcall
sbb
insl
sbb
daa
dec
inc
or
mov
xor
pushf
movsb
xchg
aad
scas
or
push
es
cmp
popa
imul
jmp
inc
xor
iret
fisttps
and
mov
cmp
cmc
orb
push
adc
and
mov
imul
rcrl
sub
jle
xchg
add
xor
inc
xchg
test
push
lods
and
int3
outsb
pop
fildll
push
push
sbb
vmptrst
pop
sti
jb
movsb
add
sti
or
out
loop
ss
std
movb
dec
lock
imul
and
xchg
jle
add
dec
cmp
xchg
sub
pusha
bound
jecxz
arpl
add
mov
push
imul
into
andl
lock
mov
aas
int3
roll
push
mov
inc
dec
xchg
rcrb
cltd
scas
cld
movsb
mov
xchg
aam
sahf
and
mov
test
sbb
sub
or
insb
jl
fwait
rorb
fimull
jo
push
fwait
stc
insb
xor
lock
mov
pushf
or
inc
lcall
mov
and
xchg
or
cmp
inc
adc
and
xchg
jb
cmp
fcmovnbe
cwtl
add
pop
ror
mov
sub
cmp
mov
mov
pop
scas
pop
iret
push
or
cmp
jbe
loop
leave
lcall
xor
adc
andl
fbld
lret
jl
push
and
cmp
sahf
jnp
push
dec
test
cmp
or
xchg
sbb
xlat
cwtl
loopne
aam
ja
ret
pop
gs
sub
jp
out
mov
and
xlat
xor
adc
insb
out
in
mov
stc
cmpsb
mov
lods
ret
lds
ret
idivb
ret
mov
push
movsl
mov
cmpsl
out
pushf
jbe
adc
mov
lods
mov
cmpsb
in
fsubr
cmc
ljmp
or
sub
xlat
add
jo
and
arpl
imul
outsb
lds
xor
cmp
sbb
adc
mov
pop
dec
jb
jne
outsb
jl
jmp
jge
or
push
push
outsl
mov
fldl
sbb
jne
pushf
out
nop
in
outsb
jg
rorb
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
lcall
or
pop
bound
push
out
test
aaa
adc
lods
xchg
push
cwtl
fidivrl
repnz
ds
push
int3
sbb
cmc
jns
cld
jne
icebp
xlat
std
push
mov
aas
rorb
pop
add
adc
std
icebp
lret
outsb
out
adc
sti
sbb
stos
sub
subb
jge
sub
mov
imul
test
mov
idivb
cmp
push
aas
addr16
das
iret
and
push
adc
and
bound
mov
jo
push
data16
ds
inc
and
lods
pop
movb
dec
push
jp
cmp
aaa
data16
mov
out
push
xchg
call
out
inc
sbb
xchg
cmp
leave
mov
test
fdivr
push
mov
orb
stos
cli
arpl
add
rolb
adc
stc
pop
pushf
js
shlb
dec
arpl
out
frstor
adc
jl
scas
ds
sbb
enter
jo
lea
pop
cmpsb
xorl
movsb
jae
or
push
out
testb
mov
fwait
sub
lock
pop
cmp
xor
cmp
mov
nop
ror
pop
inc
dec
xor
xor
dec
push
jns
testl
lcall
mov
add
push
orb
daa
out
dec
das
mov
or
jl
inc
inc
in
pop
sub
jl
fs
scas
mov
fld
pop
pusha
dec
cli
stos
aad
pop
sbbl
lcall
pop
popf
sub
dec
xor
lahf
cmp
bound
push
mov
mov
repnz
shl
shl
shlb
xchg
jl
sarl
in
push
and
push
repz
test
ss
cwtl
and
test
push
js
outsb
jbe
jo
cmpsb
lea
test
pushl
sbb
ficoml
out
je
inc
clc
sub
and
mov
js
outsl
adc
jle
notb
adc
add
lds
cs
sahf
movsb
and
fsubp
fwait
mov
icebp
jecxz
mov
call
add
push
xchg
mov
inc
leave
xor
into
add
bound
rep
out
mov
in
call
test
lret
inc
sldt
dec
xorb
inc
lret
adc
outsl
sbb
lcall
testl
mov
lret
cmpsl
daa
adc
and
pop
fiaddl
shrb
imul
push
imul
in
mov
lods
sub
test
cwtl
or
sahf
lret
jmp
pop
cmpsl
mov
jns
pop
popf
inc
cmpb
cmp
pop
lahf
scas
in
and
fsubs
std
mov
cld
mov
aad
xchg
cmc
cmp
iret
pop
xchg
fidivrl
inc
clc
push
jl
fildll
rcrl
outsl
rolb
rcr
mov
into
and
add
and
mov
xchg
mov
lock
cmpsl
nop
adc
cmpsl
and
cmp
movq
in
mov
cld
add
mov
gs
adc
push
inc
test
xor
jno
push
xor
xchg
cmp
jno
lret
shll
jle
jo
or
xor
xchg
popa
xor
repz
adc
leave
or
pop
dec
shll
sar
or
jp
and
in
movsb
cmp
push
cmpsl
adc
mov
dec
pop
lds
clc
popf
loopne
out
lea
test
popf
sbb
and
ljmp
insb
mov
push
mov
mov
rorl
insl
jb
dec
stos
jmp
xchg
fidivrs
call
ficompl
and
jg
imul
call
sub
in
pop
inc
mov
data16
cmpsb
ss
jnp
mov
scas
shrl
addr16
icebp
imul
sbb
ret
in
adc
std
mov
cltd
pop
fbld
dec
imul
aaa
xor
adc
dec
mov
xchg
jmp
in
jecxz
xchg
movsb
push
ljmp
aas
pop
mov
ja
ljmp
into
xchg
lock
cmp
aad
push
loop
mov
cltd
push
sbb
in
mov
jle
out
insl
adc
xchg
lods
js
cmpsb
je
pop
xor
flds
in
mov
fwait
add
mov
xchg
arpl
or
addr16
jmp
movsb
insb
fwait
or
push
rcrl
mov
dec
mov
dec
or
mov
fildl
pxor
mov
lahf
mov
mov
out
mov
jns
and
xchg
imul
lahf
cs
aam
xor
mov
cmp
push
dec
adc
loop
ret
xchg
mov
orl
mov
lods
fs
sbb
adcl
test
xchg
addr16
ret
push
mov
add
out
out
cltd
pusha
add
ftst
fbld
mov
fnstenv
loopne
pop
std
imul
shrb
jb
shll
cmp
mov
test
popa
ss
cmp
adc
fs
sbb
cld
xor
jo
pop
push
push
mov
push
jae
dec
sub
lret
movsl
sar
adc
out
cmp
xchg
sub
stc
dec
xor
xchg
jmp
daa
mov
incb
enter
rolb
outsl
les
data16
pop
imul
and
dec
or
dec
clc
xchg
and
xchg
inc
addb
cmpb
xchg
mov
jmp
add
leave
push
movsl
pop
incb
mov
xchg
fistl
test
out
pop
call
lods
stc
enter
insl
pop
dec
cmp
and
xorb
paddsb
pop
sbb
push
imul
jbe
and
cltd
sbb
cmc
sub
mov
pop
in
iret
enter
push
scas
or
es
xchg
inc
fists
pop
pop
ja
sub
mov
xchg
je
sub
sbb
add
inc
inc
aad
repnz
jl
mov
repz
jmp
cmp
fnsave
xlat
jb
jae
mov
and
mov
mov
aas
ja
mov
daa
lcall
push
pop
mov
cmp
in
incb
mov
pop
xor
shr
or
mov
xchg
sti
push
sub
movsl
cltd
jge
mov
and
aaa
in
add
cltd
mov
mov
xchg
push
mov
jne
fs
dec
icebp
ret
push
sbb
inc
imul
aam
movsl
cmp
sub
stc
jb
sbbb
out
push
pop
loop
leave
push
mov
icebp
mov
xor
ja
sti
mov
lea
loop
mov
push
xlat
out
sti
sar
lahf
repnz
mov
lods
mov
inc
xchg
mov
and
jg
movsb
mov
frstor
xlat
imul
mov
cli
int
mov
adc
sub
adc
add
xor
popa
test
and
rolb
mov
push
jp
nop
shll
repnz
cmp
imul
out
repnz
out
ja
dec
adc
inc
jae
jnp
mov
aad
jae
clc
leave
mov
or
jg
ds
sub
fistps
aam
sarb
push
int3
jb
mov
stc
sbb
aad
ss
fldt
sbb
shl
and
jae
sti
cltd
pop
mov
cwtl
enter
mov
jg
mov
imul
pusha
shlb
ljmp
mov
mov
scas
cmp
mov
xor
add
insl
jl
stc
loopne
xor
pop
cmp
insl
push
data16
inc
mov
jecxz
jge
adc
or
add
mov
fldcw
xor
mov
jns
leave
or
push
es
loope
pop
cmp
adc
or
and
mov
rol
stc
ffreep
addr16
call
mov
jo
dec
and
dec
jmp
imul
imul
aam
rcr
xchg
aaa
ds
add
xchg
out
adc
or
hlt
jl
dec
inc
jns
xchg
lret
or
mov
ja
test
es
loope
or
out
and
std
iret
outsl
aas
ret
cs
popf
jecxz
enter
mov
xor
stc
nop
xchg
ds
pusha
dec
add
fstpt
sub
adc
scas
call
adc
mov
push
xchg
mov
add
or
adc
pusha
sub
jp
stos
mov
ja
mov
jl
dec
mov
push
dec
insl
movsb
mov
loop
movsb
xor
pop
jge
stos
jg
aas
inc
imul
jp
loopne
lds
mov
std
arpl
pop
jns
or
mov
mov
jp
push
popf
mov
adc
push
mov
clc
pop
xchg
sbb
test
xor
shll
or
fcoms
mov
adcl
jl
push
xlat
ficoms
add
dec
push
cs
cs
pop
leave
cmpsl
mov
xchg
es
adc
cmc
push
jle
or
or
sub
push
jp
outsl
int3
add
sbb
xchg
sub
or
gs
mov
in
jb
sub
loopne
xorps
ret
mov
cltd
push
add
push
or
mov
jno
rorw
jno
adc
inc
cmp
fistpll
pop
mov
mov
mov
and
adc
stos
call
lahf
nop
outsl
dec
aam
pop
sub
mov
mov
add
aas
int3
ljmp
pop
ss
in
inc
or
pop
inc
xor
inc
scas
jns
aas
ljmp
mov
out
ds
jne
mov
jg
and
fnsave
ds
mov
popa
cld
loopne
into
add
sbb
shll
ret
push
idivb
inc
loopne
imul
add
pop
dec
stos
ljmp
xor
repnz
xchg
push
aas
lret
pop
rol
inc
dec
push
mov
pushf
gs
and
enter
or
mov
call
mov
test
cwtl
ja
adc
pushf
das
loope
jg
mov
inc
jle
sbb
clc
cwtl
sbb
scas
sbbb
dec
inc
insb
jno
xchg
push
push
jmp
in
adc
mov
sub
xor
inc
inc
push
lcall
mov
cmpsb
and
sub
nop
es
stc
in
sbbl
add
cmpsl
sbb
nop
fs
sub
test
xchg
popf
mov
xor
lahf
mov
pop
xor
pop
mov
and
pop
mov
pop
lret
mov
sbb
jmp
or
leave
lds
in
in
cmp
jae
movsl
sub
mov
ffree
and
in
and
mov
insb
std
pop
pop
fcomp
mov
test
push
cmp
je
dec
or
mov
fsubrs
out
fsubs
loope
jb
cmc
mov
ja
push
js
out
push
cmc
enter
rcl
xor
inc
cmp
cmp
cmp
movsl
popf
stos
cmp
pop
ljmp
imul
mov
mov
sbb
fdivrs
mov
sub
mov
push
stos
shlb
or
das
adc
mov
mov
dec
or
mov
jne
adc
xchg
out
fsubs
push
and
mov
rorl
lret
push
gs
sub
mov
jmp
adc
mov
fidivrs
lret
sbb
nop
mov
notb
cs
add
ret
sbb
cmp
in
dec
sbb
test
or
jge
sbb
movsl
rcr
movsl
loop
jge
out
in
mov
cmpsl
push
or
and
clc
jns
dec
and
rolb
jno
fisttps
xchg
xchg
cmp
or
lds
sar
dec
sbb
sub
cld
add
out
dec
fucom
mov
aad
lret
std
add
out
nop
pop
into
lcall
pop
cmc
mov
pop
test
roll
ds
inc
sbb
dec
lock
pop
fucomp
int3
jb
stc
add
push
mov
inc
add
push
nop
sbb
mov
or
das
sub
sub
xchg
rcl
fcmovbe
aaa
nop
stc
jmp
jg
lahf
sbb
ja
js
cwtl
mov
xor
dec
mov
hlt
xlat
outsl
mov
dec
adc
cltd
dec
mov
push
push
mov
or
and
aam
js
int
sub
fists
lods
addb
mov
cmc
test
rorl
dec
ljmp
dec
mov
popf
pop
imul
lea
add
jns
mov
pop
cs
push
mov
inc
in
jl
cmp
mov
pop
xor
inc
mov
js
arpl
int
and
inc
and
int
sahf
push
fildll
add
pcmpeqd
add
orb
xchg
inc
iret
shr
call
pop
lock
iret
lods
lahf
cmpsl
or
cs
test
sbb
dec
out
inc
inc
jne
adc
jne
in
add
ljmp
dec
es
insb
push
pop
int
push
mov
sahf
test
adc
scas
jae
int
fadds
jo
push
fsub
cmp
fcmovnu
xchg
lret
aad
xor
lds
mov
mov
insb
js
inc
pop
subb
pop
add
mov
cmp
in
mov
lods
adc
push
mov
adc
add
push
jno
in
jne
repz
inc
inc
fwait
repnz
and
xchg
rolb
clc
push
pop
loop
mov
mov
in
inc
es
out
insl
sub
icebp
fistpll
pop
repnz
and
mov
xor
loop
inc
aas
pusha
adc
ficompl
loopne
aam
mov
insb
xor
push
stos
icebp
in
mov
mov
movsb
in
xor
insl
int
pop
xchg
sub
adc
sub
mov
sub
lods
ret
jmp
lahf
and
cmp
xor
in
int3
clc
xchg
sarb
cmpsb
in
pop
flds
iret
adc
std
lahf
es
sub
xor
mov
or
jmp
arpl
fmuls
xor
mov
jmp
shr
lods
jbe
in
hlt
jge
pop
lret
mov
sub
loop
loop
aas
xchg
stos
jmp
xchg
add
fsubs
out
dec
dec
adc
icebp
cwtl
cwtl
sti
clc
cmp
movsb
stos
out
lods
lea
incl
pusha
mov
roll
adc
mov
sbb
fsubp
scas
mov
pop
arpl
pop
xchg
dec
xor
or
outsl
cmp
popf
mov
aam
imul
mov
cmp
mov
mov
stos
fwait
and
pop
sti
xchg
sub
inc
icebp
sbb
pop
mov
mov
add
dec
xchg
insb
jecxz
ss
add
xchg
push
jns
mull
cmovo
mov
gs
out
lods
dec
sbb
jle
ja
out
xchg
movsb
push
jae
pop
xor
xchg
js
xor
mov
stos
scas
iret
mov
aas
xchg
inc
pop
iret
je
mov
pop
in
movsl
rol
mov
adc
cmp
cmc
adc
cwtl
shll
lds
sbb
push
mov
xchg
imul
push
int3
mov
add
jbe
and
dec
adc
push
mov
out
jnp
in
jmp
cli
adc
lods
das
sbb
or
jle
and
repnz
push
nop
out
dec
lock
ds
add
cmpsl
jge
fstpl
pop
ljmp
int3
jge
insl
pop
les
lds
dec
push
dec
sbb
ljmp
adc
iret
imul
rolb
xor
pop
mov
sbb
push
fisubl
inc
ret
xlat
inc
and
push
xor
jmp
jmp
fmul
rcll
int
nop
cmpsl
or
sub
shrl
sub
into
inc
bound
sahf
mov
add
repz
gs
cltd
push
aas
xor
sbb
outsb
add
daa
imul
push
push
cwtl
mov
push
aaa
inc
fistpll
jmp
xchg
aad
cmp
pop
popa
pop
and
cmp
dec
imul
testb
xor
push
jle
test
and
cwtl
mov
lret
je
rep
fldcw
sbb
sub
cmp
xchg
aaa
mov
aaa
lahf
push
bound
adc
sub
std
fisttps
adc
inc
and
inc
and
sbb
rep
push
cmp
push
jb
outsb
in
push
stc
adc
dec
test
ljmp
jp
cld
mov
lods
xchg
adc
sbb
fcmove
mov
and
mov
push
outsb
xchg
and
dec
sbb
and
jb
pushf
xchg
sti
into
test
mov
sub
and
mov
popa
sbb
dec
imul
add
inc
mov
in
jae
movsl
jle
jns
jno
and
xor
rcrb
mov
pop
xchg
inc
lock
sarb
sbbb
ja
dec
roll
in
adc
testl
movq
mov
sub
pop
xchg
or
and
lock
dec
pop
std
fwait
add
xor
test
mov
dec
mul
inc
gs
dec
je
sbb
rcrl
sti
push
inc
lret
mov
jno
stos
xchg
pushf
push
mov
pop
shr
sbb
ss
sbb
push
leave
bound
fldl
arpl
push
pop
cwtl
inc
lods
mov
mov
cltd
xchg
lcall
cmp
jle
xchg
add
enter
adc
push
scas
loopne
pop
xchg
pushf
adc
push
dec
add
or
out
and
out
stos
hlt
push
push
mov
xchg
sar
mov
xor
out
cld
jne
lds
arpl
out
push
cwtl
ljmp
test
gs
repz
xlat
outsb
push
xchg
and
add
cmc
dec
xchg
sub
jnp
xor
xor
cmp
in
fcoml
cmp
and
mov
test
repnz
dec
test
ljmp
cmp
sbb
pop
into
push
mov
pop
push
repz
push
push
pushf
shrb
push
xchg
pop
sub
jae
leave
cmp
jg
mov
std
push
ret
jo
dec
rcrb
pop
lea
imul
pop
and
pop
andb
xchg
sub
jnp
insl
les
nop
fdivrl
push
lret
jge
sub
jp
lods
xor
xchg
out
roll
adc
hlt
sub
jge
imul
inc
fwait
sti
std
xchg
pop
aad
bt
pop
in
dec
loope
push
jp
clc
and
push
xchg
pop
or
dec
sub
jl
lret
fs
add
gs
xchg
xchg
jecxz
inc
bnd
out
mov
xor
sub
and
std
cmpsb
mov
stos
xchg
mov
adc
xchg
int
scas
pop
ret
mov
sbb
gs
lods
outsb
lret
push
xchg
mov
shlb
xor
pop
and
scas
lock
push
popf
xchg
out
cli
call
mov
jmp
pusha
adc
fdivs
push
in
and
ret
fsub
idivb
leave
aam
mov
movsb
cmp
cmp
sbb
xor
xor
jae
jp
mov
aaa
dec
es
jae
cmp
rolb
mov
sbb
fnstenv
mov
mov
xor
out
push
mov
sbb
nop
daa
outsb
mov
add
es
ficoms
ret
dec
insl
sub
xchg
push
dec
fsubs
aad
sarb
sub
out
jp
dec
mov
pop
xchg
add
mov
repz
inc
jg
dec
repnz
int
lock
out
add
sub
pusha
lret
andb
test
cld
outsl
lea
insb
mov
aam
and
pop
cwtl
cli
jge
mov
lahf
lock
jno
mov
push
out
jmp
lock
add
and
and
scas
int
das
adc
outsl
cmpsl
pop
bound
enter
outsl
popa
out
shl
mov
popa
imul
addr16
aas
loop
int
xorl
and
and
cmp
jg
mov
pushf
jmp
pop
out
cs
dec
stos
daa
dec
jns
jl
inc
data16
adc
test
dec
mov
pop
arpl
and
pop
mov
je
jecxz
jle
js
push
inc
cli
int3
lret
pop
pop
jno
insl
jg
sbb
lds
push
nop
inc
movsb
jl
mov
jae
cmp
mov
xor
inc
test
xchg
jno
in
xchg
test
jno
test
leave
sahf
pop
das
decb
int3
js
lret
cmpsl
mov
or
or
pop
sbb
sbb
adc
fbld
push
lret
fld
stos
push
addb
mov
out
lcall
mov
pop
dec
sub
int
lods
sbb
push
push
jg
jno
shl
fistpl
cmpl
add
test
pop
jmp
movsb
lds
xor
stc
xlat
or
sbb
push
mov
fbstp
outsl
imull
pop
mov
push
stos
in
mov
mov
lods
sub
inc
lcall
mov
mov
sahf
dec
xchg
outsl
and
dec
pop
lods
jbe
pop
fdivrp
inc
cli
cs
int3
lds
cmc
dec
adc
inc
push
lret
clc
cwtl
and
sub
xchg
rorl
or
notb
fwait
mov
inc
insb
xchg
outsb
xor
jmp
mov
pop
lods
mov
cmpsb
jmp
sub
xchg
push
sti
int3
xchg
adc
cmpsb
mov
cmp
clc
or
inc
repnz
int3
sub
inc
jne
lret
std
jnp
stc
cli
icebp
enter
sub
ds
pop
out
cltd
xlat
mov
std
mov
cmpsl
clc
or
sbb
cmp
push
ja
pop
cmp
in
icebp
in
push
inc
imul
add
jle
imul
sub
xchg
or
mov
mov
sub
xor
aas
mov
push
add
loope
fs
mov
adc
dec
cwtl
popf
dec
std
fisubrs
lods
xor
xor
inc
call
ja
fcmovnb
adc
or
and
lock
sub
push
in
shr
adc
xor
mov
out
cmc
int3
or
adc
inc
enter
or
cmp
aas
rolb
sub
cwtl
ljmp
and
test
icebp
scas
mov
inc
mov
popf
insl
mov
jbe
test
lcall
inc
in
incl
cmp
cmp
mov
pop
and
inc
mov
ds
xchg
and
aad
sub
xchg
cmp
das
int3
frstor
xor
in
xchg
leave
cmp
or
andl
adc
lock
enter
andl
jg
test
dec
or
mov
dec
jge
enter
mov
sti
js
add
andl
dec
dec
mov
jp
stc
pop
inc
mov
sbb
and
xchg
popf
adc
or
lcall
pop
lret
push
jmp
sub
push
jge
nop
sbb
das
and
mov
fsubrs
mov
shrl
or
out
cld
push
cmp
xchg
adc
cmpsb
xchg
jo
push
mov
and
daa
push
xchg
and
dec
xchg
adc
push
dec
loop
push
pop
dec
or
mov
mov
mov
std
aas
inc
sbb
cmp
or
shlb
xlat
pop
mov
aam
iret
inc
xor
mov
add
jo
in
ss
cmp
cwtl
xchg
lods
add
cmp
jbe
hlt
jnp
inc
pop
sub
divl
push
inc
aaa
test
insb
jp
inc
cmpsl
lret
add
je
gs
repz
lods
loope,pt
pusha
ret
pop
icebp
fisubl
cld
inc
pop
jne
jnp
or
daa
hlt
pop
mov
mov
daa
mov
jb
icebp
sub
gs
inc
pop
movsl
cwtl
repnz
sbb
push
lods
push
lahf
jno
jno
ljmp
rcll
mov
mov
jne
outsl
sbb
jne
xor
es
out
call
mov
push
xor
push
in
addb
in
lea
lret
ds
into
dec
je
test
mov
inc
xor
lds
in
orb
sbb
mov
daa
pop
lahf
mov
mov
push
outsl
mov
ss
mov
ret
mov
mov
xchg
push
or
in
jb
adc
movsb
es
mov
mulb
xor
rdmsr
mov
mov
sbb
stos
lahf
inc
push
movsl
arpl
cmpb
mov
int
add
sub
pushf
cmc
dec
cmpsl
pop
and
cmp
push
push
outsb
lds
sub
mov
fwait
mov
in
fdivp
push
sub
lcall
or
popf
jo
sbbb
fisubrl
arpl
aas
xchg
jecxz
inc
xchg
fldl
popa
mov
or
stc
sbb
shll
out
cwtl
cmp
sub
fldt
shr
je
into
mulb
mov
xchg
push
sbb
jns
jbe
pop
push
rolb
and
jbe
push
add
fs
mov
fildll
insb
xchg
xor
ds
and
es
in
jg,pn
mov
lds
js
das
fildl
repz
jp
insb
out
arpl
pop
pop
call
mov
out
int3
nop
adc
sbb
sub
aas
inc
pop
pop
test
addr16
pop
jo
inc
aaa
push
ret
lahf
fnstenv
test
push
punpckhdq
mov
xor
lea
aad
fildl
inc
insb
xchg
jne
sub
mov
pop
pushf
xchg
sbb
add
push
xchg
test
popf
lods
push
mov
cs
and
jns
push
das
jmp
cmp
mov
lcall
call
outsl
xchg
fildll
inc
jb
and
jbe
and
test
mov
enter
das
or
repnz
inc
rolb
jnp
cs
and
dec
in
dec
push
int
or
iret
add
clc
inc
cli
inc
inc
idivb
roll
push
gs
fistl
out
add
inc
lret
or
test
fwait
inc
push
mov
push
dec
sbb
and
mov
aad
add
sarl
testl
push
je
insb
jae
xor
xchg
aad
push
pushf
mov
xor
and
repnz
sbb
bound
icebp
lods
mov
rcr
mov
xor
bound
add
loopne
xor
dec
js
jl
push
cmp
bound
add
adc
xor
lret
js
adc
in
mov
aad
int3
sub
filds
mov
xor
pop
and
push
add
or
add
ljmp
insl
adc
sub
xchg
ja
mov
arpl
out
xchg
addr16
push
iret
xchg
dec
pop
sub
mov
movsl
xchg
jmp
push
xor
mov
or
shrl
and
in
ja
push
jno
add
dec
adc
divb
pop
rorl
sub
push
sbb
xor
js
pop
push
jmp
cmp
jnp
movzwl
pop
iret
cmc
repz
sub
cmp
test
cmc
aaa
inc
int3
fcom
fstpt
or
mov
or
mov
inc
mov
add
sbb
inc
cmp
push
adc
neg
push
adc
ficoml
insb
movsb
dec
jb
cs
xchg
sbbb
push
out
inc
mov
mov
push
push
xor
or
inc
jecxz
aad
mov
lea
jecxz
inc
das
movsb
cwtl
mov
and
aad
or
jmp
sub
stos
repz
lret
inc
mov
enter
pop
mov
lods
cmpsl
in
lahf
xchg
imul
pop
fs
shll
jp
outsb
lock
lahf
push
pop
insl
dec
xchg
mov
or
jo
enter
loope
in
xchg
sub
mov
ja
lret
pop
sub
xchg
fimuls
inc
lcall
daa
mov
mov
call
inc
cli
test
xrelease
mov
ja
and
lods
icebp
imul
scas
cli
push
add
fisubs
data16
in
add
adc
or
mov
cli
or
xchg
ficoms
pop
jae
sub
sarl
xchg
fnstsw
add
gs
mov
add
notl
jbe
enter
and
push
out
cltd
ds
cltd
and
lods
fs
sarb
mov
jae
dec
push
lea
out
or
push
or
fstps
mov
inc
or
xor
inc
leave
aaa
lret
dec
sbb
int
pop
xor
cmp
ja
sbb
popf
ficomps
loope
adc
push
or
out
jmp
xorb
mov
dec
in
mov
es
fwait
mov
pop
jne
lcall
movsb
adc
push
orl
lds
jmp
add
out
sub
jge
lock
mov
adc
jp
ret
mov
iret
shll
dec
jmp
into
leave
stc
aam
lahf
mov
stos
movl
sub
repz
loope
scas
dec
fldcw
mov
mov
fstp
mov
xor
jmp
sbb
jbe
mov
insl
mov
pop
xor
push
repz
dec
fstps
cmp
sbb
xchg
data16
rorl
shll
or
add
sub
das
cmpsl
pop
jle
sub
adc
fisttps
test
popf
popf
frstor
fbld
adcl
mov
and
mov
nop
fcmovbe
scas
js
xor
push
test
ret
cmp
arpl
in
add
sub
pop
xor
add
add
dec
or
cmp
stc
dec
add
jnp
sbb
cmp
cmpsb
xor
shl
or
imul
inc
orl
shrl
sub
fstpl
dec
cmp
outsl
inc
inc
into
mov
fcmovb
out
mov
mov
push
repz
insb
sbb
mov
mov
iret
pop
cmc
addl
fistpll
mov
mov
out
inc
xchg
insl
jns
sti
enter
or
pushf
mov
xor
divb
sbbb
aas
mov
mov
mov
repnz
inc
jae
sbb
dec
mov
addl
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
mov
push
std
and
int
bound
xor
adc
pop
sti
cmp
call
or
and
push
inc
nop
arpl
pusha
jo
pop
inc
jl
je
jle
push
pop
jbe
fidivs
xchg
push
icebp
decl
jnp
js
xor
arpl
cmp
xchg
jle
xor
and
mov
or
or
push
lock
push
cwtl
bound
pushl
ror
mov
mov
sahf
rol
inc
popa
push
push
pop
sbb
sarb
push
cmpl
add
pusha
loope
ljmp
xchg
jmp
test
mov
stos
into
jl
adc
xor
test
insl
lods
fisubrl
into
insb
sbb
dec
aaa
cmpl
jo
push
movsl
add
rclb
mov
shlb
cltd
sub
jecxz
add
jb
jecxz
stc
outsl
sub
push
and
xor
cltd
hlt
sbbb
cmp
inc
fcmovb
mull
ds
ds
movsl
cmp
ss
or
jns
out
push
jg
xor
inc
out
test
loopne
or
inc
addb
xchg
into
push
xchg
push
mov
pusha
mov
popf
adc
sub
mov
int3
shlb
mov
inc
cmp
push
pop
xor
adc
mov
dec
jp
cmp
mov
mov
lock
and
mov
jecxz
adc
jno
inc
push
push
fistl
lods
dec
call
lret
rcrl
sbb
xor
lods
and
aad
cmp
gs
cmp
xchg
cmp
fldl
push
mov
inc
lods
icebp
pusha
ja
fimuls
mov
cwtl
out
or
push
push
sub
in
cmp
aad
lret
and
pop
jmp
ds
jns
push
cmp
mov
mov
int
icebp
and
xchg
rorl
mov
inc
orb
inc
int3
cli
shl
fsub
pop
add
mov
jg
sbb
or
mov
movsl
add
lahf
jmp
and
mov
mov
testb
std
fwait
dec
xlat
jo
add
pop
pop
lret
daa
push
and
adc
mov
inc
xchg
rcrb
push
mov
roll
cmp
ficoms
das
mov
test
test
mov
dec
popa
jno
or
gs
in
mov
mov
add
mov
mov
sbb
mov
inc
adc
pop
mov
inc
mov
and
mov
cmp
mov
ret
xchg
leave
mov
xchg
xor
pop
push
mov
jmp
push
push
sub
mov
ds
xor
into
push
push
mov
test
cwtl
or
push
int3
adcb
lds
jo
adc
cld
cs
call
jnp
flds
popf
cwtl
fldt
ss
andl
jg
push
rol
ret
aad
mov
scas
sahf
pop
lds
stos
pusha
ss
dec
xchg
sbbl
push
out
repz
fs
mov
sbb
pop
in
adc
jg
dec
cs
add
push
adcb
gs
push
mov
xchg
push
sbb
or
cmpsl
arpl
mov
sub
add
subl
mov
sarb
insl
negl
jmp
mov
scas
jo
in
aaa
lret
sbb
sub
test
stos
lods
mov
cmp
adc
inc
pop
fidivs
test
inc
out
dec
sbb
bswap
xor
aas
sub
and
es
sbb
clc
mov
and
lods
jno
xor
xor
daa
out
and
xchg
mov
pop
cmpsl
mov
aas
inc
pushf
mov
out
xor
push
in
scas
cmp
push
add
imull
sub
jl
out
loop
pop
mov
xor
sub
xchg
cltd
adc
aam
cmp
xchg
into
jnp
sti
mov
mov
test
push
in
mov
dec
dec
loope
cmpb
dec
negb
and
sub
mov
out
fbstp
adc
les
ja
outsb
pusha
adc
add
mov
lret
cltd
aas
xchg
mov
cmp
push
call
insl
cld
push
jmp
loope
cmp
es
shl
sub
fmuls
push
sbb
xor
push
mov
sub
sub
xchg
jno
xchg
inc
dec
mov
ss
stc
mov
jp
dec
fbstp
mov
jmp
push
fs
jmp
fdivs
loop
data16
stc
dec
sahf
mov
dec
sub
mov
xchg
push
adc
ds
ret
push
cmpsb
jp
jno
mov
sbb
pop
lds
pop
leave
and
repz
jl
jbe
pop
and
loopne
sbb
mov
pop
inc
clc
call
mov
inc
sbb
int3
leave
mov
add
mov
inc
xchg
leave
mov
enter
arpl
sub
in
or
lret
inc
andnps
xchg
xor
fcoml
cld
test
adcl
inc
xchg
cltd
push
cmp
inc
mov
or
ficomps
pop
add
and
mov
dec
loopne
pop
cmp
pop
mov
rolb
mov
xchg
add
mov
test
call
sbb
mov
int
lods
or
jbe
pop
int3
aas
and
or
jmp
pop
xor
popf
mov
scas
add
push
imul
scas
fistpll
add
stos
pop
std
dec
stos
mov
mov
sbb
stos
mov
call
xchg
stc
mov
mov
daa
jp
pop
subb
repz
and
movsl
dec
adc
je
sbb
inc
dec
push
clc
hlt
int3
les
add
xor
cmp
mov
pop
stos
fisttps
pop
or
js
xor
dec
pop
shll
jo
stc
adc
xlat
int
mov
push
call
ljmp
sbb
aaa
cmpsb
and
movsl
adc
in
cld
clc
out
cmp
adc
xchg
inc
insl
inc
xor
call
in
inc
addb
dec
lret
push
loope
and
and
out
sbb
push
cmpsb
std
in
inc
mov
nop
test
or
clc
or
ja
push
and
xchg
pop
insb
subb
test
add
lds
add
mov
popa
cmp
imul
shlb
repnz
push
mov
call
add
lea
sub
stos
shlb
iret
pop
push
lretw
idivb
push
adc
and
push
ret
mov
loop
or
dec
push
sub
je
aaa
jnp
cmpsb
outsl
roll
arpl
loopne,pn
sbb
mov
adc
sbb
or
xchg
xchg
sub
mov
mov
lahf
pop
cmp
push
loop
js
rorb
sub
cld
inc
cmpsb
or
jae
xor
outsb
lods
sbb
enter
int3
mov
mov
sbb
jne
loope
mulb
cmp
push
sbb
rol
out
pop
hlt
stos
xor
js
lret
xchg
pusha
mov
mov
sub
inc
mov
in
mov
aaa
mov
sub
jecxz
add
dec
test
mov
in
push
xlat
aaa
imul
ret
push
pusha
cmp
aas
cmp
dec
insb
popa
ret
sub
lahf
and
sbb
inc
in
stos
repnz
lahf
pusha
leave
stos
gs
cmpsb
push
jnp
xor
mov
loopne
faddl
mov
lock
in
loop
out
into
test
pop
cmp
ss
cli
mov
repz
jecxz
mov
pop
dec
data16
sbb
sti
mov
jns
adc
icebp
pushf
lods
iret
jecxz
flds
push
test
cmp
mov
ja
and
xchg
mov
adc
xchg
xor
in
mov
xchg
lret
xchg
ror
add
mov
daa
in
adc
mov
mov
popf
call
pop
enter
andb
pop
adc
ljmp
loop
stos
adc
inc
mov
mov
inc
push
sbb
adc
movsl
dec
push
loope
inc
dec
or
dec
push
push
lods
ds
mov
adc
pop
sub
cwtl
push
dec
pusha
inc
dec
pop
sbb
ret
insl
aad
fiadds
cltd
cmc
ret
mov
ds
and
divl
stos
push
or
inc
mov
bnd
lcall
cmpl
push
push
or
call
xchg
mov
cltd
mov
xchg
fildl
add
sbb
xor
jecxz
inc
test
ss
aas
hlt
cli
push
cwtl
lods
and
in
xchg
sbb
cmp
les
xchg
pop
stos
insb
dec
jb
cwtl
adc
loopne
and
ret
cmpl
jp
push
in
lea
xor
in
stos
es
outsl
fsubrp
stos
mov
pop
pop
data16
push
pop
stos
mov
adc
adc
inc
mull
pop
lcall
cmp
pop
in
insl
add
in
out
loope
daa
jne
imul
xlat
add
sbb
add
out
sub
or
jl
fmulp
fwait
jb
or
cmp
imul
sub
inc
inc
sub
mov
inc
or
repnz
fwait
ror
in
fisttpl
add
ret
loope
mov
cltd
and
repnz
mov
mov
ret
push
push
call
stos
dec
push
gs
inc
cmp
lret
fildl
lret
pusha
mov
sahf
out
push
std
stos
adc
sub
andl
inc
sub
jl
dec
sub
push
xchg
mov
shll
jg
sti
mov
outsb
inc
dec
test
sub
mov
iret
out
notl
dec
pop
push
push
aaa
push
lods
mov
pop
clc
cmovl
sbb
sbbb
jmp
inc
fnsave
add
jle
jo
mov
insb
sbb
xlat
out
push
jns
sti
jo
push
rcrb
fldenv
fildl
ss
fsubp
mov
out
or
sbb
jmp
inc
mov
add
mulb
test
dec
xchg
sbb
inc
std
adc
inc
cltd
xor
imul
jp
push
xor
sbb
mov
pusha
roll
fmul
lea
xchg
data16
pop
inc
mov
mov
dec
jmp
cmc
testl
xchg
sbb
movsl
inc
inc
rolb
xor
sbb
jnp
lret
in
or
pop
orb
gs
repz
pushf
push
sbb
js
and
test
fsubs
and
and
xchg
bound
shrb
cld
jo
jns
es
mov
js
sbb
pop
es
pop
and
mov
ja
or
lret
inc
pop
dec
test
lret
or
ljmp
cmp
xchg
sub
push
mov
cltd
int
pop
and
lods
mov
push
test
repnz
mov
sbb
sbb
test
sbb
loopne
jnp
push
sub
fistps
or
mov
pop
addr16
xchg
add
movsb
add
dec
mov
xor
insb
int
jp
xor
int
inc
scas
mov
inc
xchg
lahf
push
bound
mov
stos
or
push
or
fdiv
lea
stos
clc
lahf
push
lahf
out
in
jb
mov
lock
xchg
pop
loop
mov
mov
ss
cwtl
or
nop
in
shrl
lret
ret
mov
mov
icebp
sbb
sbb
in
addr16
cli
add
enter
mov
int
enter
push
mov
das
adc
mov
add
popf
cmp
xchg
imul
cmp
mov
test
mov
das
add
and
loop
clc
push
pop
cmpsl
sub
jmp
insb
pop
mov
roll
clc
fbld
inc
mov
mov
sub
orb
jae
jne
shrb
mov
adc
mov
in
dec
out
adc
dec
sub
and
fistpll
insb
push
pop
ljmp
inc
sti
lock
aaa
int3
nop
into
mov
xchg
add
jg
pop
aas
cmpsl
mov
ficoms
aad
sub
xor
adc
mov
push
rclb
push
out
cmp
pop
push
fidivrl
jle
cmpsl
js
cmc
in
aas
repnz
or
aaa
sub
mov
dec
in
stos
enter
pop
xor
out
mov
push
add
add
xor
daa
jo
mov
gs
das
and
sub
jb
or
fwait
add
sbb
sub
scas
leave
aas
mov
out
inc
lock
and
jecxz
popa
xchg
packssdw
lods
lret
rorl
xchg
icebp
inc
imul
xchg
andb
lods
sbb
sub
mov
stos
cmpsl
fwait
mov
and
bound
cmp
mov
mov
and
pop
cwtl
fisttps
ret
jb
push
movsl
mov
pusha
mov
mov
push
stos
xchg
and
pop
inc
adc
arpl
mov
xchg
lahf
mov
mov
dec
jb
data16
pop
adc
das
sbb
push
mov
mov
sarl
adc
test
ss
mov
inc
test
add
ds
lods
add
into
add
adc
bound
push
pop
add
and
dec
outsl
inc
cltd
xchg
jbe
flds
cwtl
lret
xor
mov
cmp
lds
iret
mov
ret
popa
fwait
daa
pop
aam
scas
testl
cs
out
js
sbb
mov
mov
test
jbe
push
rorl
jg
sub
or
stc
mov
mov
cmpsb
mov
insb
jmp
mov
or
daa
push
mov
add
inc
out
je
mov
out
pop
mov
test
lods
insb
or
dec
or
push
dec
inc
sub
add
scas
setle
rcrb
inc
mov
mov
jl
subb
out
push
push
cmp
ljmp
cmp
std
daa
ficompl
call
scas
add
cmpsl
push
cld
or
or
cmc
orl
pop
outsl
jnp
adc
pushf
test
cmp
pop
sbb
push
and
repz
inc
cmpsb
adc
aad
lds
lods
mov
xchg
sbb
inc
pop
lock
dec
inc
sahf
notl
push
scas
scas
ss
es
mov
xorl
in
arpl
pushf
push
pop
cmc
push
sbb
cs
lea
stc
fs
lcall
adc
ja
bound
xchg
xchg
xchg
repz
or
popf
imul
push
add
sti
mov
mov
cld
repnz
jmp
mov
cmp
jbe
adc
push
rclb
aaa
and
sub
repnz
push
cltd
adc
stc
stc
mov
jge
mov
pop
test
xchg
xor
xlat
enter
fcmovu
enter
pop
scas
ret
aaa
nop
add
mov
cmpb
dec
mov
mov
push
out
aas
aaa
fst
orb
pop
movsb
adc
int3
bound
sbb
mov
shrb
pop
cmp
sub
lret
mov
push
cmp
xchg
push
xchg
sub
ljmp
cmp
stos
test
hlt
ljmp
sbb
popa
xchg
stos
xor
xor
ds
jb
jecxz
push
jbe
ds
int3
fnstenv
dec
cmp
cmc
ss
les
hlt
fisttps
pushf
xchg
pop
jnp
in
pop
mov
leave
mov
std
cli
xchg
adc
arpl
xchg
mov
pop
pop
fiaddl
mov
and
sahf
dec
movsb
pushf
mov
inc
lods
push
in
cmp
jge
xchg
mov
movsb
inc
test
push
push
insb
ja
xchg
mov
js
pop
adc
add
std
movsl
loopne
aad
test
cmp
cmp
lcall
xchg
xchg
popa
aam
xchg
sub
push
in
xor
jne
and
test
and
outsb
mov
xchg
mov
add
imul
dec
rolb
and
iret
xchg
pop
push
ret
call
iret
and
jp
mov
pop
sbb
arpl
inc
push
out
cwtl
jbe
mov
cmp
adc
imulb
sub
stos
dec
mov
cs
lds
cmp
cs
pop
sbb
push
jge
fildll
lock
inc
push
mov
jnp
jle
inc
insl
jmp
ret
sbb
push
dec
popa
and
orl
adc
in
jo
mov
xchg
push
mov
xchg
clc
pop
mov
ljmp
cvtpi2ps
adc
pop
mov
rcrb
mov
fcmovu
mov
mov
lret
aam
mov
lcall
fldl
sbb
xchg
push
jmp
dec
jne
xchg
cmp
into
push
dec
and
push
lcall
aam
test
push
cmpsl
dec
icebp
mov
mov
lods
xchg
pop
std
jmp
and
xor
inc
mov
test
ss
mov
insl
lds
xchg
sub
lods
push
lds
in
dec
icebp
cmp
mov
and
cli
pop
js
out
int
adc
pushf
or
and
xor
cmp
mov
add
xchg
adc
pop
adc
fisttpll
loopne
pop
mov
jno
cltd
mov
loop
pop
cmc
jge
xchg
cwtl
mov
mov
outsl
add
repnz
or
dec
into
jne
stc
push
xchg
loope
and
mov
jb
push
cld
and
push
adc
cli
adc
imul
xor
jnp
jle
mov
jae
adc
aad
xchg
cmp
mov
jo
cmp
adc
inc
into
in
add
pop
nop
mov
adc
cmp
fmull
das
xor
dec
loopne
pop
dec
pop
add
daa
dec
shll
xor
hlt
pop
fadds
ficompl
fnstsw
in
xchg
ds
jno
popf
jb
push
repz
sub
dec
adc
stos
cmp
add
pop
mov
aam
out
mov
ds
clc
stc
popa
mov
rol
nop
rcl
adc
mov
push
mov
daa
and
fmull
loope
sbb
loopne
cmp
ret
dec
inc
or
addl
scas
mov
scas
stos
pmaddwd
rcr
lea
jecxz
xor
int
and
pop
lahf
sbb
sbb
stc
inc
sub
sub
and
scas
adc
add
shl
xchg
push
or
inc
int3
lret
sti
fucomp
aaa
inc
ljmp
xchg
sahf
dec
mov
sub
xor
add
mov
popf
das
sbb
divb
inc
push
and
fnstenv
pop
push
pusha
pop
scas
cwtl
or
pop
mov
jecxz
sbb
leave
sbb
push
in
sub
jno
xchg
arpl
cmpb
mov
ja
jmp
pop
test
mov
bound
push
mov
into
sub
inc
push
push
aas
push
mov
or
outsb
hlt
pop
dec
jae
lahf
ret
push
pushf
clc
incb
jbe
shr
mov
cmp
sbb
aas
dec
hlt
xorb
mov
imul
cs
mul
in
xchg
jae
adc
sti
aad
adcl
in
aam
cmp
jmp
sti
pushl
push
mov
sbb
lods
je
pusha
repnz
xchg
add
add
or
cmpsb
sti
sbb
pushf
pop
stos
inc
imul
aad
sub
add
in
adc
daa
mov
cmc
test
mov
push
lcall
and
fidivs
or
sbb
es
sbb
outsb
ja
jg
in
adc
insb
out
test
lahf
sub
jno
shrb
icebp
push
dec
xchg
push
pop
xchg
pop
mov
mov
xlat
aaa
in
mov
mov
xchg
or
int3
rcr
mov
sbb
mov
cmp
mov
jns
push
imul
scas
aad
jne
std
mov
push
xor
add
adc
mov
fwait
mov
add
mov
popf
iret
fsts
mov
loope
insl
sbb
fsubrs
pop
movb
mov
loope
fidivrl
data16
je
jne
addr16
push
sub
and
xchg
mov
test
pusha
stc
pop
mov
add
adc
mov
mov
or
lods
loope
fmulp
cmp
xchg
mov
in
sub
aas
mov
sbb
or
in
push
dec
sti
push
sbb
xchg
mov
dec
mov
push
mov
push
add
sbb
pop
out
popa
mov
cmp
push
mov
scas
pop
inc
out
sbb
pop
out
xchg
dec
test
mov
and
jbe
adc
imul
mov
mov
mov
mov
jle
push
std
mov
sbb
int
pop
mov
mov
dec
adc
imul
dec
mull
sbb
push
mov
add
stc
pop
sahf
push
jecxz
and
or
scas
cltd
add
scas
pop
xor
jmp
leave
cmc
popa
cmp
jb
ret
mov
jecxz
push
mov
dec
mov
fistpll
inc
std
mov
popf
sub
push
jae
fsubl
xor
outsl
aad
jp
imul
mov
xor
repz
int3
sarl
adc
testb
push
adcb
push
mov
sub
and
and
cmp
push
or
add
ljmp
fcoms
mov
jns
sub
cmp
scas
pop
sbb
adc
push
pop
lea
jecxz
mov
and
sti
jnp
inc
push
rol
gs
mov
or
repz
inc
mov
mov
js
pusha
ljmp
push
xor
adc
mov
cmp
xchg
push
aam
dec
jge
nop
sbb
xorb
sbb
mov
jle
cmp
test
subb
xchg
fsts
xor
addb
dec
sub
incb
mov
ret
sub
pop
push
cs
xchg
adc
and
popf
ljmp
ficomps
repz
mov
jno
mov
push
aam
js
xchg
dec
in
pop
adc
jge
inc
sub
lahf
outsl
bnd
xor
pop
sbb
cmp
popa
xor
aad
mov
mov
inc
js
out
cltd
and
iret
cltd
add
mov
fcomps
inc
push
adc
lret
push
stos
cmp
lods
sbb
dec
or
sub
gs
mov
dec
dec
cmp
repz
sub
fndisi(8087
inc
adc
pop
jecxz
clc
lret
cmpsb
jg
je
mov
and
out
jns
imul
icebp
pop
js
xchg
filds
lds
cmpl
jno
adc
shld
sub
fsubl
js
stc
adc
mov
jb
js
adc
icebp
add
movsl
mov
sbb
movsb
lods
jp
and
adc
or
fst
int
push
pop
lods
in
adc
xor
fs
mov
sbb
sub
mov
cli
sbb
lahf
push
sub
aas
xchg
xchg
dec
pop
jl
imul
fdivrl
stc
neg
adc
outsb
mov
lock
and
popa
push
cld
push
popa
repnz
inc
jb
popf
push
cmp
sub
pop
daa
movsl
ss
fnstsw
stos
js
ret
cs
movsb
test
cld
lods
leave
lcall
or
and
movsb
dec
cltd
xchg
mov
es
xor
inc
movsb
test
ss
ljmp
cli
cmp
dec
lock
leave
pop
shrb
filds
add
int3
and
arpl
std
in
push
insb
hlt
inc
in
je
push
xor
cmpsl
mov
lcall
loope
or
push
mov
sub
push
stc
inc
fs
pop
in
pop
out
std
inc
add
aas
jnp
mov
ret
mov
jmp
jns
fidivrl
test
cmp
sbb
orl
popa
cld
add
pop
push
mov
pop
dec
mov
jne
in
movl
sbb
fsubl
mov
andl
inc
fisubrs
xor
push
lds
icebp
dec
mov
pop
jmp
aas
add
rcr
enter
inc
daa
sbb
mov
sarl
mov
dec
pop
push
negb
test
or
mov
jo
outsl
jne
pop
rcrl
jmp
dec
daa
leave
cs
in
jle
sub
inc
or
es
adc
enter
stos
leave
adc
sbb
addr16
dec
or
fwait
xor
sbb
lods
fistpll
push
mov
and
sub
mov
jecxz
les
cwtl
es
sbbb
or
popa
movsl
cmp
push
cmpsb
leave
pop
aaa
push
jmp
out
fidivrl
lcall
ret
flds
ljmp
jmp
mov
addr16
xor
subl
xchg
sti
pusha
jl
rolb
lahf
xchg
jae
sbb
xchg
ret
sbb
xor
addr16
mov
pop
inc
push
jmp
and
jmp
mov
pop
pop
xor
xchg
jo
xchg
mov
mov
xchg
loope
push
xchg
pop
push
mov
push
push
not
jbe
jae
sub
or
out
stos
jns
js
faddp
cmp
cmpsl
aas
push
sub
pop
or
into
mov
bt
test
cmp
in
mov
das
sub
mov
and
pop
adc
jnp
dec
add
mov
sbb
in
hlt
lds
pop
mov
pop
cwtl
xchg
jb
pushf
hlt
cmc
leave
xchg
or
xchg
arpl
icebp
aam
daa
lods
es
pop
or
jg
ret
mov
mov
int3
inc
xchg
mov
xor
mov
clc
pop
aam
add
cmpsl
stos
and
adc
add
adc
sti
mov
xor
lds
cltd
cmp
cli
mov
addr16
xchg
movsb
push
rcll
call
add
fistl
cli
lcall
les
test
test
pop
push
or
cmc
in
rcrb
xchg
inc
in
mov
out
adc
adc
shrb
adc
loop
hlt
push
mov
add
es
es
dec
cmp
bound
dec
xor
mov
adc
scas
sub
es
scas
sbb
pmulhw
cs
and
roll
into
jns
lret
jl
and
inc
jae
int
jmp
sti
out
push
xor
mov
xorb
jns
movsl
out
dec
ss
pop
mov
ja
sbb
push
jge
lahf
outsl
sub
stos
mov
cld
dec
xor
pop
pop
and
in
and
jle
nop
mov
movsb
mov
test
xchg
mov
or
ret
sbb
stc
aad
stc
cltd
sbb
adc
andb
adc
loop
sbb
std
mov
lcall
dec
mov
mov
xchg
aam
add
pop
or
push
sti
adc
mov
testl
add
test
cmp
das
dec
loopne
nop
lods
popa
pop
gs
sbb
pusha
jo
js
insb
mov
xlat
add
bound
out
in
sub
mov
rcrb
pop
pop
cmp
adc
jecxz
jbe
xor
inc
jmp
jmp
mov
stc
shr
sbb
cmpb
in
inc
addl
push
sbb
mov
mov
idivl
std
cmp
sbb
inc
xlat
mov
mov
jnp
jb
pop
dec
test
add
xchg
in
sub
xchg
mov
inc
xchg
lds
insl
mov
dec
sbb
jo
sti
push
push
insb
arpl
mov
pop
xlat
pop
jb
pop
cli
ljmp
jecxz
mov
cwtl
lea
cmpsl
out
leave
testl
or
repnz
jge
repz
jno
das
dec
popa
repnz
cs
int3
push
outsb
insb
mov
jecxz
stos
mov
mov
into
cmc
subl
lds
jecxz
xchg
or
test
or
xor
or
nop
or
jno
pop
mov
sbb
call
sbb
lods
icebp
mov
adc
sbb
mov
test
adc
mov
add
sub
clc
add
es
cmc
das
sbb
repz
adc
dec
pop
shlb
mov
pushfw
int
lods
cld
or
sbb
dec
ss
jae
bswap
out
rcrl
in
adc
cmp
sbb
daa
xor
sub
mov
popa
aaa
add
stos
rcrl
push
sahf
push
push
or
pop
scas
cmp
test
cltd
push
xor
cltd
fisubl
xlat
scas
and
dec
pop
fistpl
clc
stc
cmp
dec
dec
iret
fnstcw
push
xor
cltd
hlt
int
mov
pop
mov
shll
ret
adc
pop
add
pop
mov
pop
jb
mov
inc
pop
je
mov
nop
xchg
or
andl
gs
jle
bound
inc
mov
mov
mov
gs
push
pop
stc
loopne
insb
pop
mov
repnz
inc
cmp
pop
cmp
pop
dec
test
mov
sbb
je
dec
dec
mov
inc
pop
aad
jbe
xlat
icebp
in
adc
xor
lock
cmp
idivb
addb
mov
jno
jno
push
loopne
jae
into
adc
push
inc
sub
mov
cmp
jno
cwtl
pusha
push
mov
jl
nop
add
mov
mov
in
sub
in
cli
mov
stc
div
sub
gs
leave
xlat
lds
ret
inc
mov
adc
fildl
inc
cmp
add
leave
add
cmpsl
hlt
mov
pushf
imul
imul
add
or
inc
jne
inc
cmp
loop
xchg
gs
std
div
mov
pop
mov
mov
xchg
push
sahf
insl
insb
leave
test
pop
pop
lods
mov
and
mov
xchg
rclb
cld
and
ljmp
fnstsw
popf
insb
iret
mov
fdivrs
aas
mov
cli
jb
sub
loope
xor
jp
movsb
insb
xor
das
sub
mov
jae
jecxz
pop
movsb
jbe
cmpsl
or
scas
test
sar
mov
xor
aaa
test
insl
push
clc
mov
pop
adc
in
fmul
dec
stos
stos
mov
jg
cmpl
addr16
je
aam
fldt
cmp
jmp
or
pop
imull
cmp
shl
lahf
repnz
add
cmp
mov
mov
mov
outsl
dec
mov
out
clc
fwait
testb
jbe
dec
adc
jle
ja
mov
outsb
or
faddl
pop
lods
sbb
inc
push
dec
fwait
cmp
lea
test
push
mov
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
dec
dec
add
int
bound
outsl
jecxz
dec
jecxz
pop
rcll
pop
push
loope
cmp
lret
mov
sub
es
in
add
je
dec
in
int
jmp
cvtdq2ps
jns
mov
in
xchg
pushf
shr
cmp
out
fs
adc
sbb
cmpsb
cs
xor
dec
mov
dec
jo
in
int3
or
and
inc
testb
fsts
adc
insl
push
xor
mov
aas
cmp
ljmp
jle
jg
cmp
mov
add
in
lods
pop
fcomps
push
xchg
nop
xor
mov
or
popf
fmulp
jne
shl
xchg
dec
ljmp
das
mov
scas
cltd
sbb
iret
mov
arpl
lret
inc
push
push
mov
jae
int3
sub
or
popf
cmp
lret
push
xchg
repz
shll
cmpl
test
sbb
mov
lock
jo
lcall
dec
pop
lock
shll
mov
jecxz
in
mov
js
ss
imul
fdivrs
daa
jle
mov
pop
ss
push
jle
jnp
adc
call
popf
stc
mov
aaa
push
cwtl
popf
add
jbe
mov
je,pn
push
cmpsl
rcrb
jmp
mov
jno
leave
and
adc
dec
bswap
aas
pop
aaa
add
or
adc
rcrb
nop
jae
push
sti
jmp
out
mov
imul
adc
cld
inc
mov
adc
incl
fldcw
push
push
aaa
cmp
push
push
push
mov
mull
pop
add
jne
fbstp
push
dec
sub
adc
pop
pop
push
loop
sbbb
push
jge,pt
stos
cmpsl
shll
mov
stos
pmaxub
cmp
jb
es
push
mov
mov
lock
outsb
ss
add
xchg
iret
mov
mov
cmpsl
into
xchg
repnz
test
push
bound
jnp
sahf
jg
or
inc
sbb
pusha
sub
inc
das
sbb
fcomps
inc
fdivl
sbb
test
cmp
push
push
arpl
push
pop
fiaddl
pop
push
cmp
add
lds
in
push
mov
pop
aam
mov
mov
pop
sub
loopne
in
mov
imul
sti
in
fisttps
push
lret
push
cmpsb
xor
push
push
aam
leave
sti
pop
xor
pop
push
inc
shlb
in
lods
mov
fidivl
pop
popf
sub
mulb
mov
fs
push
cmpsl
push
inc
addb
fmulp
and
jle
mov
sub
mov
outsl
jg
push
or
iret
out
inc
loopne
sub
movsl
dec
mov
mov
dec
pop
and
mov
jmp
jne
push
xchg
xchg
lea
outsl
inc
xchg
ja
mov
mov
mov
fidivrl
xchg
jb
jecxz
xor
addr16
fucom
push
xlat
inc
mov
test
and
scas
xchg
lods
pop
rcll
stos
outsb
push
inc
jne
pop
insl
outsb
jno
leave
enter
insb
out
daa
shll
decl
hlt
inc
jo
push
sub
lea
cmc
jge
popl
aas
jle
call
sbb
jecxz
adc
out
xchg
adc
nop
sub
fnsave
dec
iret
mov
push
int
push
push
pushf
jmp
imul
adc
dec
pop
icebp
in
repnz
out
ss
and
push
xor
xchg
scas
fcmovnbe
dec
mov
pop
in
aas
add
scas
jl
xor
fdivs
daa
jo
xor
jg
stos
pop
mov
pop
inc
push
push
mov
push
sbb
jo
repnz
or
xorl
or
test
pop
xor
icebp
inc
fidivrs
int3
testb
movsl
mov
leave
or
mov
popf
xchg
les
and
jbe
js
inc
jl
sbb
enter
lret
sub
mov
mov
xchg
sbb
mov
rcrl
popa
ret
push
jae
fwait
adc
push
xchg
add
jecxz
pop
lahf
push
das
inc
pop
xor
xlat
pop
dec
xchg
xchg
div
and
sub
movsb
xor
je
daa
scas
cmp
repnz
cltd
loopne
mov
fwait
lret
inc
ljmp
pop
dec
xchg
jne
adc
cld
loope
les
adc
addl
inc
data16
mov
and
stos
xchg
push
jmp
outsb
insb
ljmp
iret
push
loopne
push
xor
dec
cmpsb
cmc
fisubs
fidivl
push
fcmovnbe
jge
aaa
cld
and
loop
mov
dec
sbb
outsl
lahf
mov
sbbb
mov
push
out
imul
mov
push
cmp
leave
lcall
clc
mov
cwtl
stos
adc
shl
sub
push
je
add
sbb
inc
insl
fmul
push
lret
lcall
int
fdivs
jecxz
and
cmp
xchg
mov
inc
jnp
inc
jne
xor
cmpl
adc
fwait
leave
dec
cmp
xchg
xchg
cmpsb
and
xchg
or
cmp
push
mov
push
inc
hlt
lods
daa
pop
mov
xchg
ljmp
adc
sub
rolb
lods
push
jno
das
fwait
lahf
xor
sbb
aad
ret
pop
mov
outsl
int3
jl
fwait
loop
mov
out
jle
mov
lods
xchg
lret
mov
fs
test
ljmp
inc
or
rcl
clc
cmc
mov
inc
jmp
xor
mov
scas
dec
xchg
std
mov
mov
push
mov
adc
dec
sarb
fsubrs
xor
ret
sub
dec
lea
sbb
daa
push
fs
lret
mov
inc
mov
dec
xchg
mov
shr
push
pop
inc
movd
fsubrs
jg
and
rcl
adc
xchg
enter
pop
or
inc
scas
pop
mov
mov
inc
inc
int
pop
test
dec
mov
push
add
cli
int3
icebp
push
iret
jne
sbb
aam
je
mov
adc
aas
sub
int3
lret
cltd
xchg
inc
sub
inc
insl
inc
pop
fidivrs
nop
xor
pop
xchg
or
add
xchg
or
mov
jb
loop
sub
icebp
inc
mov
pushf
pop
loope
pop
dec
mov
xchg
mov
adc
and
xor
iret
pop
pop
jno
test
sub
imul
mov
push
cmp
ja
push
pop
notb
std
cmp
push
and
sahf
gs
mov
dec
leave
add
loope
mov
or
rclb
arpl
idivl
add
jns
add
cmp
stc
mov
push
std
sbb
mov
out
adc
add
dec
mov
stos
sub
inc
rolb
add
sbb
mov
xor
movsb
shr
push
lret
cmp
cmc
scas
and
loope
dec
out
or
hlt
adc
in
cmp
mov
xor
mov
and
xor
fisubs
dec
lods
testb
lods
cs
into
movsb
mov
notb
or
add
xor
dec
fbstp
mov
out
fcmovne
sub
mov
sbb
xchg
xor
filds
cmc
dec
bound
call
lock
cmp
int3
aaa
fisubrl
jae
and
cmp
mov
loope
fs
movsb
cmp
mov
dec
push
cwtl
jl
mov
iret
cmp
push
out
lea
push
or
mov
sti
pop
leave
ds
xchg
push
push
repz
pop
adc
lods
jle
aad
je
or
mov
jle
aaa
ljmp
decb
in
adc
cmp
sub
cwtl
mov
sub
nop
mov
sti
sub
jmp
xor
mov
or
inc
xchg
dec
cld
jmp
test
inc
lds
out
movl
and
lods
lcall
and
insb
xor
and
xlat
xchg
dec
adcb
xchg
pop
jmp
pop
inc
and
stos
xchg
jl
mov
in
mov
push
loop
pop
test
imul
pusha
ljmp
mov
sbbb
fmuls
outsb
js
sbb
inc
aaa
cmpsl
sbb
mov
fistps
call
or
add
pushf
sub
mov
stc
leave
frstor
add
mov
shr
repnz
mov
mov
mov
repz
sti
pop
jecxz
ret
sub
loop
sub
inc
ds
dec
push
mov
mov
bound
xor
cmpsl
push
movsl
xlat
mov
or
sbb
test
jnp
push
stos
push
insb
in
and
rolb
aam
popa
inc
in
sbb
pop
xchg
cmp
push
dec
or
shlb
mov
fisttpl
jo
popf
cmc
sub
adc
aad
cmpsb
push
ret
dec
pushf
scas
orb
test
jp
adc
data16
pop
mov
dec
push
cmpb
mov
pop
pusha
xchg
lds
out
or
cmp
push
ret
daa
inc
mov
sbb
jae
negl
sub
lcall
test
inc
aad
mov
adc
push
inc
push
addr16
mov
or
je
push
cmp
movsb
xor
sub
or
ss
mov
cmp
ja
dec
xor
in
insb
sbb
push
cmp
loope
xor
stos
sub
mov
push
movsl
lcall
inc
jge
push
sbbb
xor
mov
mov
fs
xchg
jbe
aad
inc
aam
or
mov
aaa
inc
sahf
fdivrs
pop
jp
iret
mov
and
mov
clc
inc
stc
mov
sub
push
lock
or
mov
nop
addr16
adc
mov
nop
cwtl
ljmp
test
mov
cmpsl
rorl
mov
loopne
mov
adc
inc
outsb
mov
push
or
mov
pop
mov
into
xchg
test
dec
pop
and
mov
scas
lods
fmull
push
cmp
xchg
orl
and
lds
push
xlat
mov
idivb
aam
pop
and
push
jae
ja
shl
lcall
lds
test
in
lret
xchg
push
ljmp
cmc
mov
int
jo
push
cltd
rolb
dec
loopne
gs
int3
test
add
cwtl
jp
cmc
or
and
pop
xchg
inc
mov
sub
and
fstp
in
add
inc
xchg
fnsave
sahf
insl
jmp
push
xor
push
test
xchg
jae
cli
cmp
mov
fbld
xor
push
sbbl
sti
xchg
push
pushf
int3
mov
out
enter
adc
xor
xor
sbb
loop
repz
jge
add
in
push
lods
hlt
jmp
mov
or
and
std
and
push
add
test
popf
stc
sbb
dec
pop
mov
fistpl
pop
fcoml
inc
fs
popf
mov
mov
loopne
dec
fcoml
fistps
push
rorb
push
int3
jae
outsl
icebp
pusha
daa
test
mov
enter
sub
adc
or
out
jns
hlt
or
pop
testl
add
inc
in
pop
xchg
fst
mov
xchg
dec
push
jo
mov
and
xlat
fimuls
je
xor
fstpt
jp
in
sub
mov
jo
test
and
push
aaa
pop
jecxz
lahf
cmp
cmpsl
roll
test
sub
xlat
cmpl
jp
fists
sbb
fdivrs
popf
ret
je
mov
movsb
scas
std
xor
mov
and
cmc
lods
dec
sub
sub
loope,pn
jle
movsb
test
sub
cltd
push
mov
xchg
push
jl
fstps
sub
lods
sub
fnstsw
dec
test
pusha
mov
movsb
sub
sub
rcrl
inc
xchg
xchg
sbb
test
rcrl
in
iret
xchg
xor
scas
xlat
or
inc
bound
mov
clc
mov
jp
and
jg
jb
mov
fildl
bound
pop
xor
call
lock
cmc
cmp
ret
adc
scas
mov
xchg
push
adc
cmp
in
jo
dec
xor
push
mov
jno
stos
les
scas
test
xor
jg
pop
dec
loope
scas
cmpsb
imul
pop
push
shll
call
scas
push
and
mov
pop
mov
dec
or
xor
sub
cwtl
sub
test
sarl
fnstenv
ja
loopne
or
inc
mov
nop
add
mov
jg
idivl
mov
inc
or
dec
popf
leave
loop
call
sbb
mov
sub
imul
rclb
push
jl
cmp
popa
sbb
mov
arpl
sub
shlb
push
sti
arpl
out
sti
mov
cmp
pop
push
cltd
add
addb
mov
rcrl
jmp
mov
mov
jo
lcall
add
aam
and
sub
push
mov
call
xchg
in
sub
adc
push
jle
cld
adc
pop
cmp
sub
xor
dec
clc
cmp
xor
les
ds
cmp
push
adc
ret
xor
leave
add
les
dec
ficomps
out
imul
push
pop
loopne
fs
movsb
jecxz
lcall
jle
addr16
push
mov
xchg
outsb
or
jnp
test
test
sbb
sbb
lret
pop
jbe
sub
cmp
or
bound
cltd
jne
addr16
cmp
iret
je
mov
cwtl
add
aad
cmpsb
cmp
xor
adc
dec
sti
or
cmpb
xor
lcall
jae
add
lods
fnstenv
jo
add
fiaddl
sbb
ljmp
adc
shrl
movsb
in
pop
in
arpl
sbb
lret
int
mov
sti
jp
gs
pop
and
push
pop
pop
adc
ljmp
xchg
xor
mov
sbb
push
js
imul
aam
ret
xor
js
setl
mov
es
mov
sbb
in
push
insl
sti
pop
cmpsl
dec
and
mov
icebp
xor
scas
movsb
jl
scas
add
mov
mov
push
xor
and
mov
mov
lds
scas
lahf
scas
mov
and
pusha
jo
scas
mov
mov
outsl
adc
jne
int
scas
lcall
loope
dec
cmp
mov
pusha
in
jmp
bound
push
mov
sbb
mov
les
rorb
fucomip
xchg
mov
ss
inc
jp
in
xchg
int
mov
push
out
xchg
inc
lret
push
dec
int
js
subb
mov
sbb
inc
call
aaa
and
punpcklbw
pop
out
pushf
lahf
or
adc
sarl
inc
jg
clc
mov
fsubrl
stos
or
cli
out
adc
ss
dec
arpl
or
mov
fnsave
in
shlb
aaa
call
adc
test
adc
and
mov
out
fidivl
fildll
xchg
hlt
cmpsb
push
push
fildl
fldl2e
cmc
sbb
mov
aas
mov
sub
out
push
mov
fs
add
inc
pop
out
sarl
cmc
dec
mov
daa
cmc
xchg
push
fidivrs
sti
sub
js
or
xor
clc
lock
inc
xchg
push
hlt
jns
pop
ret
or
and
xchg
fisttpl
sahf
push
dec
loope
shl
sahf
imul
mov
add
lcall
sahf
xor
in
mov
movb
adc
and
push
jmp
and
sbb
jl
adc
fstpt
adcl
add
mov
mov
mov
sbb
lret
adc
cmpb
mov
pop
or
sub
call
mov
out
into
xchg
push
cltd
add
xchg
push
stos
mulb
push
notb
xchg
pushf
or
leave
arpl
pop
cmpb
imul
das
into
iret
pop
stos
pushl
pop
mov
xchg
mov
sarb
cmp
xor
xchg
adcl
ja
sbb
sbb
pop
dec
imul
iret
mov
out
imul
mov
pop
int
jo
mov
mov
jmp
sbb
or
ljmp
sub
aaa
repnz
dec
cwtl
out
je
and
push
scas
fisubrl
jno
mov
pop
int
mov
inc
sub
test
adc
adc
out
notl
out
jo
ja
les
cmp
jne
mov
in
test
data16
xchg
rcl
cmp
pop
inc
imul
sub
pop
xchg
mov
push
addr16
mov
out
lcall
adc
mov
xor
decl
mov
ljmp
push
cmp
in
fstl
sar
push
cmpsb
mov
cld
in
jmp
scas
mov
in
dec
sub
insb
or
jns
add
lret
into
cld
aaa
aam
lret
mov
repz
fldt
and
jl
sbb
xchg
add
xor
idivb
mov
sarl
adc
jp
mull
pop
push
push
in
and
es
sbb
lahf
and
repnz
cwtl
dec
sti
divb
pop
mov
cmp
fcomps
xchg
pop
xor
cmp
cmp
cmpsl
out
xchg
push
decl
xchg
rclb
push
lods
sbb
jnp
test
ds
ljmp
cli
int3
dec
je
bnd
mov
adc
fistps
jb
add
data16
xor
sbb
orb
in
sti
out
out
popa
loope
lock
ror
jp
loopne
xor
insl
cli
sarb
jle
scas
dec
loop
int3
xchg
pop
movsb
arpl
orb
inc
mov
lea
inc
pop
mov
stos
mov
and
or
div
out
stc
cmp
cmc
ljmp
ljmp
bound
jg
or
out
jae
sbbl
rcll
lcall
aaa
adc
ret
dec
lds
pop
pop
mov
aad
sbb
ficoms
sub
ret
ss
lcall
das
pop
mov
lahf
mov
clc
ds
pop
movsl
hlt
add
popf
test
adc
pusha
cmc
out
cmc
dec
js
fimuls
mov
in
dec
pop
push
cli
icebp
cli
sbb
or
push
jmp
rcrb
xor
or
sub
out
mov
imul
xchg
cmp
xchg
push
cmp
cmp
ljmp
cltd
push
cmp
repnz
fmull
cmc
aaa
sub
push
clc
and
inc
mov
pushf
out
xor
fnstenv
movsb
sub
ror
mov
sub
popa
xor
push
pop
add
or
js
sub
xchg
sbb
push
or
bnd
pop
mov
and
pusha
inc
sti
dec
sbb
stc
push
test
xor
mov
jp
negb
cmpsb
aad
enter
push
icebp
dec
push
or
jnp
mov
xchg
pop
dec
adc
iret
mov
or
sbb
inc
adc
shrl
in
sahf
inc
leave
jge
sbb
jno
dec
add
xchg
lret
inc
cmp
push
push
repz
aaa
inc
xor
dec
out
xor
xor
fists
mov
call
or
pop
stc
xchg
loop
jmp
mov
daa
sbb
xchg
jecxz
lds
add
test
mov
mov
xchg
jle
xchg
outsb
insl
movups
out
mov
repnz
or
vmread
pop
mov
outsl
out
xchg
pop
mov
sbb
cltd
arpl
bound
and
notb
xchg
outsl
lods
cmpsl
or
dec
ret
inc
pop
sub
adc
jmp
idivl
xor
xchg
dec
mov
xchg
jg
xchg
mov
sbb
bound
data16
push
inc
or
jecxz
cmp
mov
or
and
arpl
jbe
pop
rclb
cmp
rcr
pusha
push
stos
jbe
mov
add
stc
lcall
cmp
jns
hlt
lds
sub
inc
add
sbb
fbld
lahf
mov
add
add
xlat
jl
cmpsl
pop
mov
jge
cmp
aad
xchg
jge
cmpsb
scas
jle
mov
cmp
andb
inc
sub
mov
pop
popf
jmp
int3
data16
dec
gs
mov
cmp
pushl
mov
outsb
hlt
test
andb
lods
and
cmp
movsl
int3
adc
imul
stc
stos
hlt
jg
pushf
pop
or
lea
enter
scas
faddl
hlt
and
mov
scas
adc
iret
pop
jae
inc
cmc
mov
repnz
or
popa
outsl
stc
xchg
xchg
xor
lcall
iret
leave
and
and
fcmovbe
fdivrl
jae
push
push
cmp
push
fdivr
mov
mov
jle
pop
adc
pop
adc
cld
sahf
loop
cld
xchg
jmp
in
mov
ret
lock
add
push
mov
lret
aad
cmpl
or
dec
pop
add
cli
lahf
jge
incl
loope
jbe
inc
jne
xor
lods
incl
xchg
cmpsl
insb
je
or
inc
loop
out
rcrl
cld
mov
in
repnz
inc
fbld
jnp
jge
jmp
int3
fs
add
das
lcall
dec
push
aas
push
les
jnp
out
in
inc
pop
or
mov
mov
mov
push
mov
and
pop
inc
sub
sub
mov
jns
loope
mov
into
pusha
mov
gs
jecxz
cwtl
fcom
popf
in
adc
rcrb
hlt
stos
lcall
pop
or
sub
push
fs
dec
mov
and
repz
cmp
or
xor
or
test
test
add
jecxz
fmuls
add
pop
shrl
adc
pop
lcall
push
lds
cmp
pop
push
pop
inc
sbb
lods
sbb
mov
adc
mov
aas
subl
jb
adc
outsl
in
arpl
aas
inc
fdivrl
sar
std
into
push
and
push
int3
ret
in
push
lock
lea
shlb
and
mov
cmp
xor
cmpsb
mov
shrd
fisubl
std
adc
add
push
and
lods
ljmp
negb
cmp
lret
push
aaa
jno
adc
rcll
xor
push
sbb
fdivrs
push
mov
into
pop
cmp
xchg
aas
negl
sbb
mov
jnp
pop
inc
adc
pop
cmp
mov
add
call
stc
jmp
andb
insl
sbb
pusha
xchg
in
push
and
repnz
xchg
fisubrl
xchg
das
dec
inc
decb
add
inc
jp
stos
je
mov
iret
xor
adc
cmp
inc
cmpl
scas
cmp
jb
xor
jns
in
xchg
sub
scas
test
or
cmp
outsb
int
push
test
lcall
cwtl
sub
insb
mov
mov
and
movsb
inc
lcall
jp
pop
add
icebp
test
xchg
stos
dec
repnz
sahf
sub
outsb
inc
dec
xchg
imul
insl
nop
cmc
imul
push
adc
sub
mov
cli
pop
inc
rcrb
jns
jb
mov
xlat
sahf
mov
mov
imul
or
or
fsts
fptan
push
out
rcll
adc
ss
sbb
cmp
or
rcrb
lret
push
and
scas
jle
adc
loop
sub
test
mov
and
adc
pop
mov
ds
pop
icebp
xor
xchg
stos
push
sbb
ljmp
fcomi
jb
or
and
test
pushf
addr16
mov
mov
jge
imul
sub
adc
hlt
loopne
aaa
cmp
fsubs
dec
data16
adc
pop
mov
dec
neg
in
aad
data16
mov
push
mov
sbb
mov
mov
pop
bound
jp
sbb
dec
sbb
mov
test
inc
and
adc
jbe
jmp
out
push
adc
dec
jb
aam
je
negl
clc
cmpsl
or
and
push
sbb
jg
fs
negb
add
sub
arpl
push
movsb
dec
mov
mov
fstpt
jl
jmp
push
jg
stc
xchg
inc
jns
dec
test
inc
idivl
fdivr
out
test
mov
push
jle
cmp
jg
mov
data16
out
dec
mov
inc
pop
jno
pop
lcall
mov
cld
mov
or
mov
xchg
inc
jns
adc
test
aad
inc
test
add
pushl
sti
fwait
js
int3
cmp
xchg
cs
cmp
push
mov
xor
mov
out
xchg
enter
mov
xor
sub
call
sub
dec
rcrb
sbb
out
mov
push
xchg
iret
lcall
push
xchg
fiadds
sbb
aaa
push
inc
push
testb
sbb
les
sub
cmp
xchg
xor
pop
inc
inc
out
xor
pop
call
xor
fdivl
mov
add
ret
dec
clc
das
das
idivb
cmp
addr16
std
mov
push
bound
or
sti
cwtl
mov
dec
cmp
sub
fisttpl
mov
xchg
gs
int3
test
mov
mov
out
ja
aad
or
sahf
jl
mov
popf
fidivs
lea
push
loope
dec
xlat
testb
dec
sbb
cwtl
mov
scas
fistl
in
inc
cmpsb
stc
scas
test
add
cmpsl
jns
loop
jle
js
dec
push
pop
stc
jnp
pushl
mov
or
mov
cmp
test
or
leave
arpl
mov
push
push
inc
jecxz
push
adc
xchg
sbb
out
rcll
xor
pop
add
aam
cmp
xor
cld
ds
sahf
dec
mov
repz
sub
push
fmul
out
push
cmp
cmp
stc
xchg
dec
lea
jle
xor
test
pop
sub
repz
or
in
mov
push
adcl
negb
out
add
pop
enter
test
int
jge
mov
rorb
pusha
mov
ja
mov
call
pop
rcl
mov
into
in
mov
jmp
lea
cmp
repnz
insl
ds
aad
mov
test
aam
push
jge
sbb
arpl
popa
inc
lcall
flds
mov
lret
lock
jae
aam
bound
add
notb
xchg
test
dec
or
out
in
clc
jns
jecxz
mov
mov
call
insl
adc
push
xchg
add
jo
movsb
jae
dec
mov
outsl
ljmp
pop
push
pop
mov
mov
notl
not
adc
cltd
jne
out
popa
pop
nop
sbb
mov
imul
adc
das
or
xchg
xchg
mov
fwait
and
lods
xor
lahf
dec
xchg
push
cmc
sti
xlat
pop
imul
fdiv
shr
insb
iret
insb
jl
dec
imul
nop
test
adc
push
outsb
jl
imul
xor
inc
inc
xchg
aad
iret
out
arpl
loope
shll
jecxz
dec
xchg
cmp
dec
xor
jg
jnp
cltd
pop
xorl
jnp
mov
cltd
pop
in
and
lret
ljmp
push
movsl
test
jne
mov
xchg
jecxz
adc
mov
test
push
cli
in
jno
aas
jne
mov
xchg
out
mov
test
dec
mov
and
xchg
cs
rcrl
repz
push
jno
loopne
and
cmp
and
mov
fwait
iret
daa
dec
add
sub
pop
cmp
js
or
push
xchg
mov
ss
rcll
mov
and
add
sub
in
movsl
sahf
ljmp
push
and
icebp
fwait
jae
aaa
or
loop
pop
divb
adc
subl
mov
xchg
daa
shll
icebp
xchg
cmp
push
ds
lret
push
repz
lock
adc
add
jb
jbe
clc
and
test
pop
adc
jno
in
mov
repz
rcr
imull
add
pop
sbb
and
nop
sbb
shlb
mov
and
sub
inc
mov
dec
inc
or
xchg
jne
mov
xchg
stc
pop
cltd
in
xor
sbb
jg
stos
pushl
mov
sahf
sbb
dec
dec
mov
xor
xchg
shl
inc
xlat
push
andb
ss
popf
gs
adc
fwait
js
inc
mov
add
sbb
cmp
xchg
outsl
sbb
mov
lock
stos
dec
in
or
mov
sub
cmp
adc
pop
jg
push
inc
mov
sub
inc
xchg
arpl
dec
xchg
js
das
ss
insb
jo
jle
cmpsl
sub
fcmovne
imul
leave
mov
inc
iret
out
adc
sub
mov
add
mov
dec
sti
rep
je
xor
add
hlt
filds
xor
inc
decl
dec
push
and
mov
in
ret
aad
inc
mov
hlt
andl
test
cmp
inc
dec
cmp
dec
cli
negb
add
xchg
scas
mov
je
shll
dec
mov
fcmovbe
imul
out
lret
jge
lahf
dec
popf
mov
mov
sarl
push
in
cmp
add
dec
mov
add
sub
adc
mov
xchg
aam
paddusw
sbb
in
xchg
outsl
xchg
mov
leave
xor
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
into
push
scas
test
add
sbb
xlat
jbe
add
pop
push
ret
and
pop
push
push
loop
lret
int3
adc
xor
or
ljmp
cmp
xchg
fsub
jo
pusha
cs
mov
in
and
pop
repnz
mov
pushf
push
add
push
sti
fbstp
int3
pop
push
imul
inc
dec
cwtl
leave
sub
cmpsl
repz
in
out
das
inc
sti
dec
ja
bound
les
mov
lcall
mov
push
cli
add
stc
push
adc
pop
lahf
call
insl
test
add
sub
adc
cmp
out
pop
xchg
push
pop
xchg
add
xchg
or
pop
dec
push
adc
sub
dec
out
out
jg
lret
aad
jge
push
mov
pushf
mov
jle
fidivl
dec
repnz
int3
jne
aad
jno
and
das
popf
lea
pop
stc
and
ficompl
lock
data16
pop
data16
rcr
es
cltd
enter
sub
mov
cmp
mov
mov
mov
popa
iret
pop
adc
xor
aas
loope
cltd
mov
pusha
sub
ss
cmp
inc
and
adc
push
outsb
jecxz
mov
pop
dec
fdivr
jge
aam
into
call
add
add
add
add
sub
sub
addb
xchg
add
arpl
mov
aam
testb
ds
pop
inc
in
or
sbb
scas
stos
ja
and
das
mov
les
lea
je
test
xchg
out
hlt
shlb
mov
lcall
xchg
ss
dec
jp
sbb
push
in
mov
and
dec
jb
xchg
rol
imul
or
adc
shll
sahf
ja
inc
push
dec
cmc
pop
mov
enter
lahf
outsl
xchg
adc
mov
push
and
mov
xchg
sbb
lock
loop
lahf
idivb
repz
sbb
add
and
aam
aam
ljmp
je
dec
jp
push
mov
add
lods
add
add
outsb
test
cs
lahf
inc
sbb
jnp
jle
pop
int
insl
loop
das
dec
jmp
cwtl
mov
repz
lcall
or
fidivrs
mov
or
lods
xor
inc
sti
enter
mov
scas
popl
test
pop
movsl
ret
pop
mov
ss
mov
movsb
pop
sbb
mov
enter
xor
jg
enter
pop
pop
cmp
data16
jmp
jge
fcomps
mov
xor
jmp
arpl
cmp
fcoml
add
add
mov
sti
cmpsl
mov
dec
mov
arpl
add
in
jns
scas
lods
push
sarb
or
mov
fdivs
sub
inc
in
push
add
movsb
pop
sbb
or
in
cmpsl
les
adc
sbb
sarl
sub
cmpsb
inc
pop
pop
gs
adcb
xor
adc
inc
in
xor
cmp
add
and
lock
jne
cmp
inc
push
and
sbb
enter
dec
mov
pop
pop
sbb
ret
lahf
pop
mov
arpl
in
loopne
and
xor
push
out
lods
cmp
stc
stc
shlb
bound
mov
add
int
push
jo
arpl
push
xchg
into
daa
xor
shl
push
add
js
lods
outsl
cmc
xchg
fisubrs
inc
sysret
push
out
lods
in
je
sbb
cmp
out
scas
xor
loope
shlb
aad
pusha
xchg
xchg
sbb
mov
xor
or
ja
repnz
aaa
shll
das
lock
es
outsb
push
pusha
xchg
mov
jge
orb
dec
sub
and
imul
notb
jle
insb
mov
push
cmp
negb
mov
dec
xor
add
push
xor
gs
aaa
push
lret
mov
add
add
mov
sbb
cli
pop
cld
sbb
sbb
repz
inc
repz
jo
ljmp
xlat
mov
testb
xchg
je
dec
gs
std
jmp
call
sub
lods
jae
or
lea
push
mov
loop
ja
jp
add
rcrl
xchg
add
dec
testl
xchg
movsb
mov
jp
xchg
adc
pusha
jno
pop
cmp
jbe
jne
iret
jnp
mov
pshufw
dec
mov
mov
dec
pop
push
popf
scas
mov
lock
add
add
sub
das
jle
jg
imul
das
movsb
and
stos
add
lods
add
add
stos
out
repz
sub
pop
lcall
adc
cmpsl
mov
repnz
lahf
mov
mov
int
push
aad
add
loope
pop
not
gs
mov
nop
add
fadds
jb
iret
push
mov
movsl
loope
int3
cmpsb
lret
invd
mov
movsl
mulb
frstor
mov
cltd
push
shrb
imul
fnstenv
into
xor
pop
jecxz
pusha
arpl
jo
adc
mov
cmpsb
imul
je
addr16
sti
outsl
cmp
add
add
and
mov
mov
jno
xor
add
lods
add
add
cmp
test
mov
cmp
inc
jecxz
push
mov
iret
les
xchg
std
add
ror
adc
xchg
xchg
leave
bound
pop
or
iret
jns
enter
test
cmpsl
mov
lock
sub
push
inc
imulb
dec
and
shrl
scas
lods
loop
xchg
outsb
rclb
mov
push
adc
fists
fimull
cli
add
push
addb
sahf
jnp
and
xor
jmp
mov
lock
mov
es
jmp
sub
jbe
jge
insb
das
mov
inc
outsl
mov
add
ret
or
ret
lods
sub
mov
or
lods
add
lods
add
add
in
xchg
test
fwait
dec
xchg
pop
rol
mov
in
mov
push
dec
mov
pusha
stos
lret
dec
mov
xchg
dec
push
sub
and
imul
pop
ret
and
sbb
mov
adc
push
divl
mov
or
lahf
jne
insl
lret
leave
adcl
mov
xchg
das
fstpl
iret
test
shll
inc
icebp
xchg
adc
out
add
sbb
cmp
and
mov
inc
ds
outsb
stos
in
pop
cmp
jo
or
push
adc
xchg
sbb
add
ret
pop
iret
fst
enter
fstps
add
lods
add
add
fs
aas
insb
pushf
iret
cld
cmpsb
xchg
adc
add
das
lret
scas
loope
push
decb
add
stc
hlt
popa
out
adc
push
pusha
and
mov
push
pop
das
push
add
or
jae
std
xor
dec
dec
pushf
or
rol
outsl
mov
adc
mov
outsl
repnz
adc
xlat
sbb
add
mov
je
pop
jae
frstor
std
xchg
and
mov
push
mov
sub
mov
xor
insl
xchg
jno
scas
hlt
push
jmp
scas
mov
fists
add
add
add
add
lock
out
repz
mov
ret
in
stc
dec
test
add
add
add
stos
push
add
add
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
int3
aad
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
push
rolb
dec
aam
add
inc
add
aad
add
add
aad
add
aam
add
inc
add
aad
add
test
pushf
clc
dec
aam
add
aam
add
aad
add
inc
add
inc
add
inc
add
aad
add
or
sbbl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
inc
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
cmp
inc
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
adc
pop
sub
add
xchg
jne
jo
out
jl
sub
jbe
fnstsw
int
jns
mov
popa
sti
mov
outsb
fisttpll
dec
inc
inc
std
adc
das
inc
pop
push
dec
clc
xchg
in
aam
mov
jns
pop
fsubl
push
mov
xlat
aaa
dec
call
ret
pop
sbb
and
arpl
nop
and
loope
es
cmp
sub
scas
shll
push
mov
adc
popa
sbb
std
xchg
rcrl
push
inc
push
int3
sar
pushf
mov
adc
mov
scas
mov
sarl
jg
jne
mov
dec
mov
rcrb
add
sub
cli
jl
xlat
push
in
scas
sbb
add
lods
add
add
mov
pop
mov
mov
sub
add
xor
lret
sahf
push
ja
rcrl
movsb
push
aad
scas
push
insl
fwait
aam
sub
jp
mov
cmpsl
adc
in
and
sbb
and
jg
inc
fsubrl
xchg
jg
add
adc
out
or
popa
jg
testl
movsl
jecxz
ljmp
iret
imulb
mov
xor
popa
add
push
pop
dec
pop
popa
ror
push
xchg
out
sub
fidivrs
push
dec
pusha
push
sbb
mov
jg
ljmp
push
add
xchg
add
lods
add
add
jg
mov
je
fld
fsubrl
lahf
insb
loop
inc
lahf
or
int3
add
mov
inc
pop
jno
cmp
std
jbe
popf
sbbb
dec
pop
sbb
lahf
inc
ljmp
sub
fdivrs
fldt
lcall
in
jno
js
push
das
roll
sub
pop
jnp
daa
cmpsl
cld
xchg
xchg
sub
leave
enter
es
mov
mov
out
out
push
ja
mov
push
lods
xchg
xchg
iret
lds
push
sbb
test
mov
insl
push
pop
add
add
cmp
in
fimuls
cmp
fwait
cwtl
add
lods
add
add
and
ljmp
pop
scas
imul
jecxz
lock
cltd
lds
outsl
mov
ret
jge
xchg
and
cmc
bound
jecxz
and
jne
jb
sbb
inc
decb
push
add
mov
les
lock
xchg
pop
test
popa
mov
jnp
add
icebp
jg
add
pop
fildll
mov
or
lahf
jns
add
cmpl
in
test
stos
cmp
mov
mov
aaa
mov
mov
popa
and
roll
add
fnstenv
std
negb
sub
pushf
xchg
and
dec
cltd
add
lods
add
add
mov
dec
or
bound
xchg
mov
mov
call
mov
cmpsb
cmp
xor
jbe
pop
xlat
inc
call
mov
xor
int
filds
arpl
xchg
or
mov
adc
push
movsl
xchg
dec
les
push
notb
push
pop
dec
jae
aaa
xchg
clc
mov
call
rorl
adcb
add
aam
inc
jmp
mov
cmp
jl
scas
es
and
sar
cld
aaa
jle
sub
adc
leave
ljmp
and
add
add
add
add
xor
jb
inc
mov
jns
cltd
add
lods
add
add
push
xor
lods
inc
mov
in
stc
inc
jae
xchg
cmpsb
pop
ret
xlat
ljmp
pop
or
and
jne
popf
cmc
jmp
aas
ljmp
pushf
mov
or
repz
jl
fldenv
ret
dec
notl
lcall
cmp
test
out
adc
int
jno
mov
mov
fstl
shlb
cmp
cmp
jno
jns
popa
notl
dec
xchg
out
mov
dec
sbbb
push
cltd
cmp
or
xchg
nop
lods
or
in
call
ss
ds
mov
add
dec
in
fwait
scas
fdiv
pop
sub
mov
lcall
testb
inc
in
rcll
adc
into
cld
xchg
mov
movsl
push
jg
lret
lea
aad
jg
loope
popf
dec
out
or
fldenv
sbb
mov
int
mov
cmp
pop
pop
int
inc
jae
rcrl
xchg
js
add
jo
jp
ds
push
xchg
push
cmp
mov
sbbl
adc
jp
jo
xchg
xchg
out
out
loopne
popf
jns
sub
mov
pushf
ds
jno
stc
sbb
jg
push
xchg
frstor
mov
push
into
sub
mov
arpl
push
add
xor
jb
insl
xor
and
dec
fwait
add
lods
add
add
xchg
jne
push
or
inc
xchg
les
xor
popa
push
ret
es
scas
in
shlb
sbb
sbb
adc
pop
pop
jmp
cmpl
push
xor
jecxz
inc
mov
jle
sahf
mov
lods
mov
pop
data16
mov
push
lods
in
add
pushf
out
pop
cmpsl
js
mov
inc
adc
jg
sub
inc
jecxz
faddl
mov
sub
cmc
mov
mov
mov
es
dec
and
jnp
into
stc
enter
add
add
push
add
mov
out
xchg
movsl
cmp
add
lods
add
add
mov
or
push
ja
and
arpl
push
push
pop
sbb
je
sti
xor
inc
fstps
idiv
xchg
xor
xor
jmp
call
add
sub
pop
mov
imul
mov
test
push
xor
addr16
fstps
cld
add
xchg
ja
sbb
add
mov
push
sbb
pop
addr16
fistl
roll
or
or
jo
cmp
nop
nop
dec
mov
shr
clc
sub
add
mov
jmp
fimull
repz
add
dec
mov
ja
insl
fs
or
and
int
inc
out
push
cmp
testl
mov
outsl
andb
xchg
imul
push
fldenv
xchg
fbld
ds
lock
cwtl
sub
mov
mov
test
adc
outsl
xchg
into
mov
jmp
scas
inc
cld
shlb
mov
mov
sti
jle
outsb
inc
xchg
jle
inc
dec
clc
dec
adc
daa
nop
adc
fcoml
nop
test
daa
xor
xor
dec
push
push
lods
repz
sbb
pop
enter
and
mov
mov
add
pop
inc
pop
iret
pop
aad
ss
dec
cltd
clc
mov
add
sub
shrl
es
clc
inc
xchg
jno
push
jmp
mov
scas
sub
mov
mov
outsl
mov
push
push
cmc
cwtl
bound
sub
or
sub
test
adc
test
pusha
jno
sub
pop
push
aam
push
outsb
and
ljmp
add
jno
int3
data16
ja
mov
mov
hlt
ret
loopne
fistpl
into
push
cld
lcall
movsb
aad
adc
addb
or
push
js
and
add
fwait
test
jg
sbb
in
in
sahf
add
lods
add
add
dec
stos
cmp
bsf
adc
or
shll
add
pop
cwtl
movsb
pop
pop
push
cltd
sub
sub
pusha
dec
pop
fcoms
mov
jmp
mov
pop
jns
fcomp
push
mov
dec
or
loope
push
leave
and
pushf
into
in
adc
movb
jp
int
roll
loop
add
into
pusha
xchg
shrl
sbbl
xchg
data16
pop
add
inc
lret
pop
mov
adc
xor
int3
push
popl
rolb
add
add
lock
jle
repz
xchg
repz
add
lods
add
add
insl
in
push
js
mov
ja
sbb
fidivrs
outsl
inc
mov
inc
push
aad
iret
xchg
ret
xchg
and
mov
into
cmovp
xor
test
mov
test
fmull
aaa
mov
mov
jbe
mov
es
insl
push
xor
out
in
pusha
dec
add
sbb
jmp
xor
pusha
push
or
jbe
lods
pop
sub
push
mov
insl
movsb
xchg
or
cmp
arpl
ljmp
dec
jge
pop
lret
mov
add
add
adc
adc
mov
lds
pop
lahf
add
lods
add
add
xchg
scas
or
and
andl
test
ds
and
popf
test
outsl
jmp
and
dec
mov
shl
pop
daa
or
dec
dec
pop
sbb
cld
dec
gs
lcall
mov
inc
adc
mov
and
sbb
fiadds
adc
jl
and
sbb
adc
pop
call
incb
xchg
mov
inc
pop
fsubs
xor
mov
sar
rolb
movsb
lods
jg
jno
or
shl
call
mov
sarl
add
add
add
add
mov
lock
mov
shrb
add
lods
add
add
mov
rcrl
adc
mov
iret
jg
fwait
cld
cmp
stc
popa
pop
cwtl
in
cltd
mov
mov
inc
or
sub
fwait
movsbl
hlt
icebp
sbb
out
out
lahf
dec
int3
stc
mov
ret
jmp
gs
movsb
jnp
jle
and
stos
jae
lock
ljmp
add
aas
inc
ja,pn
jo
in
cmc
fs
pop
adc
push
pop
call
sub
aam
andb
mov
nop
xchg
sub
mov
xchg
adc
push
mov
sub
arpl
pop
arpl
in
lods
xchg
add
add
sqrtps
cmc
das
sbb
xchg
iret
jg
imul
mov
add
lods
add
add
adc
pushf
popl
stc
cs
xchg
pop
mov
testb
xchg
sub
scas
pop
dec
mov
popa
or
mov
js
jb
fsubrl
es
sbb
ss
xchg
inc
jg
mulb
jle
mov
pushl
nop
and
rcr
cmpsl
movsl
daa
in
mov
loop
pusha
xchg
jae
jge
or
xchg
or
dec
or
add
fwait
inc
pop
dec
dec
push
push
test
adcl
push
sbb
jns
insb
dec
mov
test
cli
imul
jle
loop
adcl
adc
int
xchg
inc
cmc
sti
fildll
mov
lret
mov
add
sbb
push
cmpsl
cmp
rcrl
pusha
pop
adc
dec
pop
add
mov
mov
jo
sbb
clc
mov
mov
push
cmp
ljmp
jns
mov
add
lea
xchg
lahf
mov
mov
dec
cltd
aam
imul
andb
enter
push
xor
fisttps
jg
and
das
nop
and
push
arpl
xchg
jecxz
push
lds
in
fs
xchg
add
jl
insl
sbb
push
mov
xchg
xchg
push
js
and
add
add
fs
testl
push
ret
add
lods
add
add
in
dec
sbb
in
hlt
jbe
sbb
or
inc
dec
push
cli
and
mov
pop
mov
test
xor
clc
add
outsl
arpl
repnz
mov
mov
inc
cmpsb
mov
push
sub
push
fiadds
dec
test
int
fsub
cmp
jmp
add
cmp
inc
test
das
and
ret
push
cmpsl
scas
hlt
call
jnp
jnp
inc
and
jnp
mov
hlt
jo
insl
lahf
mov
and
add
stos
lods
hlt
bound
cltd
stos
aaa
inc
mov
test
sbb
adc
add
add
push
imul
out
popa
fidivrl
mov
add
push
lods
or
inc
repnz
dec
adc
add
add
lds
out
aas
sbb
stos
jae
rcr
inc
mov
xchg
test
and
xchg
jno
adc
adc
xchg
sbb
or
scas
or
cmp
and
sub
pop
dec
cmpsl
push
xchg
out
aad
ficompl
push
int3
push
sarl
iret
sub
out
das
pop
mov
sub
mov
in
sbb
mov
incl
and
cmp
xlat
aaa
movswl
adc
inc
in
mov
add
add
add
add
add
jne
jg
clc
cs
push
push
add
lods
add
add
cmp
aad
or
jnp
mov
mov
push
mov
jne
push
sbb
shll
call
inc
inc
xchg
dec
pop
sbb
mov
or
push
jb
jns
jo
push
add
adc
shll
es
mov
iret
inc
and
pop
xchg
mov
cmc
adc
movsb
sbb
push
dec
hlt
mov
insb
mov
lahf
mov
push
in
inc
dec
in
aam
lahf
popl
add
mov
mov
mov
pop
fildll
cmpsb
stc
mov
mov
scas
push
ljmp
add
add
add
or
dec
mov
je
lcall
add
lods
add
add
incb
arpl
cld
jae
jge
aas
mov
and
inc
ja
sbb
cmp
push
fbstp
sbb
pop
mov
jo
fdivrp
or
cmp
sbbb
js
in
mov
outsb
rcll
rorb
mov
hlt
sarb
dec
leave
movsl
cmp
jnp
scas
jns
cli
sbb
iret
push
cwtl
push
sbb
sbb
and
cmpb
repnz
sub
sub
mov
test
inc
adc
cli
push
cltd
add
mov
les
outsl
out
pop
xor
decb
add
fists
dec
mov
xchg
adc
cmp
jmp
lods
add
add
adc
mov
adc
aas
jae
in
aaa
ret
cli
pushf
xor
daa
cmpsb
add
sbb
xchg
out
xor
leave
sti
leave
dec
pop
xor
xchg
add
mov
daa
push
imul
inc
jl
loope
cmp
xor
jecxz
sbb
cmpsb
stc
stos
or
mov
fdivrl
sub
jp
adc
sub
insb
jge
mov
dec
adc
stc
icebp
push
push
lods
push
cmpsb
sbbl
clc
mov
sbbl
dec
lods
xor
jmp
add
cwtl
test
cmpsl
dec
inc
mov
add
add
fisttps
push
rep
popl
lods
add
add
adcb
mov
shr
in
icebp
push
add
add
add
repnz
dec
fcomp
mov
dec
gs
test
decl
adc
sub
dec
mov
out
mov
arpl
lret
or
dec
loope
jbe
rorb
sti
mov
rclb
lahf
clc
cmp
add
pusha
dec
sbb
fcomp
and
test
lock
mov
xor
rorb
out
cmpsb
sbb
add
testl
mov
mov
jo
hlt
pop
mov
sub
out
lret
ss
jbe
stos
fildl
add
lahf
arpl
std
jle
out
sbb
mov
lea
add
rorl
ror
pop
mov
inc
imull
icebp
divb
push
cmp
in
ss
push
mov
sbb
aas
inc
dec
sub
xor
cmpsl
push
push
push
cld
inc
pop
mov
nop
mov
shll
mov
rclb
mov
stos
scas
or
push
jge
xorl
outsl
inc
cli
dec
mov
ja
lcall
or
adc
xchg
xchg
fs
mov
and
add
mov
xor
sbb
ret
pop
and
aad
inc
sub
ljmp
add
add
add
and
cmp
addb
add
add
push
cwtl
sub
inc
popf
sbb
clc
mulb
jle
jbe
out
in
rol
clc
ret
insl
add
rep
loopne
jp
lods
icebp
pop
fwait
mov
stc
pop
and
xchg
fwait
popf
daa
mov
xchg
lret
xchg
lret
popa
outsb
call
inc
enter
dec
push
adc
xor
inc
fwait
stc
je
fisubs
popa
push
jns
adc
fidivl
and
jbe
or
add
bound
mov
popa
mov
repnz
mov
inc
std
mov
scas
addb
add
popf
aam
or
js
add
lods
add
add
lods
xchg
fldenv
int3
pop
mov
push
inc
jno
repz
int
insb
inc
out
xor
or
inc
sbb
jmp
into
dec
mov
outsl
ja
mov
int
into
loop
das
loop
rcll
lods
into
cmp
push
stos
mov
cltd
sub
lcall
inc
popf
scas
sbb
jg
enter
int3
dec
movsl
scas
mov
pusha
je
cmc
push
int
scas
jge
dec
lods
pusha
add
jnp
or
mov
dec
frstor
or
cmp
mov
cmp
subl
outsb
or
data16
add
mov
jbe
hlt
mov
and
cmpsb
stc
and
shlb
add
add
mov
push
popf
adc
pushf
mov
loope
adc
insb
stos
cmpsb
dec
inc
pop
pop
lods
fs
sahf
lret
dec
mov
movsl
sbb
inc
xor
int
gs
fnstsw
inc
mov
jl
adc
movsl
sbb
or
scas
add
sub
cld
cs
ss
cmp
rcr
loope
lock
out
or
scas
and
jne
mov
dec
add
pop
jno
or
inc
inc
pop
push
xlat
pop
addr16
adc
stc
cmp
aad
or
js
fcomps
jl
add
add
ror
mov
sub
out
fstl
inc
inc
rorb
add
sbb
push
incb
cmp
mov
adc
ss
call
ficomps
pop
mov
mov
jl
mov
xchg
popa
insb
mov
jl
pop
xchg
mov
mov
inc
mov
cltd
fnstenv
pop
cmp
mov
jns
dec
fmulp
shrl
popa
sarb
cld
lods
out
push
adc
shrb
jp
pop
lds
adc
ret
cltd
mov
filds
stc
jb
jg
outsb
popf
in
lcall
dec
cmpsb
movsb
push
xorb
dec
inc
scas
ljmp
add
in
outsb
and
pop
mov
jg
add
lods
add
add
je
repnz
push
mov
mov
mov
mov
loopne
int3
pop
mov
mov
jbe
roll
mov
sbb
push
xchg
adc
and
push
mov
pushf
lds
jbe
mov
sbb
mov
ja
push
aas
xor
adc
ja
cmp
stos
sub
sub
add
mov
loop
movsb
cmc
and
xchg
aaa
lods
lds
sub
sub
out
pushf
xchg
hlt
lret
scas
mov
push
pop
pop
loopne
jbe
arpl
pop
xlat
push
bound
add
add
mov
and
stos
sub
add
lods
add
add
loope
or
rolb
test
jbe
loop
sub
aam
fs
mov
lcall
cmc
mov
loope
idivb
push
mov
jns
xor
std
adc
lahf
sahf
std
inc
lock
or
fstps
mov
ret
mov
jno
mov
ret
mov
dec
fimuls
mov
inc
aam
mov
inc
add
jecxz
mov
mov
pop
call
fs
repz
push
pop
add
sub
dec
stos
sbb
mov
roll
add
add
stc
call
into
inc
mov
sub
xchg
add
lods
add
add
ljmp
xchg
sarl
popl
pop
test
addl
stos
mov
jno
cmc
aas
popf
jge
arpl
cmp
or
jnp
repz
xchg
repz
in
leave
aad
pushf
cmp
xor
xchg
aad
movb
mov
ljmp
mov
cmp
mov
test
mov
lret
subb
bnd
xchg
aas
inc
rcr
inc
mov
shrl
subb
lods
xlat
cmpsb
dec
mov
cs
pop
es
inc
dec
inc
andl
add
add
sub
sub
dec
cmp
xor
lods
add
add
or
pop
lahf
fbld
popa
fwait
out
mov
mov
fsubrl
out
js
test
cmp
rorb
ss
scas
cld
sub
cwtl
mov
push
test
mov
push
aas
and
xchg
push
or
jno
jmp
insb
int3
push
les
jmp
add
jmp
xlat
add
loop
repz
cltd
sub
xor
lds
mov
aaa
sbb
cmpsb
and
imul
xor
ficompl
icebp
jp
pop
push
pop
add
call
add
dec
aas
int3
sbb
out
loopne
lods
adc
or
xchg
add
lods
add
add
jnp
push
sbb
loope
jg
aam
cmp
sub
roll
cmp
ret
dec
jo
mov
hlt
fdivrs
xchg
cmpsl
xchg
mov
les
lret
mov
sbb
sti
adc
mov
lret
repz
pop
jo
mov
cwtl
cmp
jmp
xchg
mov
cmp
mov
test
inc
pop
ds
mov
orb
cmp
andb
int3
adc
aad
lods
xchg
pop
fsubrs
fdivp
xor
push
or
mov
shlb
outsl
call
repnz
add
add
test
fildll
dec
test
int
xchg
add
lods
add
add
xor
stos
loopne
push
pop
and
je
test
and
cmp
inc
and
pop
test
add
in
adc
pop
jno
loopne
pop
mov
xchg
cmpsb
sub
out
xor
cmp
cmp
lahf
inc
ficomps
xor
cli
enter
xchg
mov
out
mov
cmp
dec
add
scas
mov
and
sub
ret
das
outsb
mov
mov
pushf
cmpsl
popa
es
xchg
ds
sub
mov
and
rcll
data16
jl
aad
scas
daa
movsb
or
imul
add
lods
fcomi
sarb
add
test
add
lods
add
add
lcall
dec
jns
dec
aad
adc
jl
sub
stos
adc
xchg
arpl
lds
mov
xor
dec
cmp
jmp
in
cmp
add
pushf
dec
cmc
cmp
sbb
jg
pop
dec
push
popa
aam
mov
cmp
cmpsb
pop
int
mov
mov
sub
mov
adc
cmp
inc
push
pop
hlt
fsubr
sbb
push
in
daa
add
or
cmp
inc
xor
adc
sbb
test
aad
xchg
cmp
sub
push
sub
insb
aam
fs
js
and
jb
fbstp
inc
or
or
ja
dec
cmp
dec
jle
adcb
add
lods
add
add
out
pop
stos
stos
fsubs
push
mov
xor
add
hlt
jl
arpl
mov
lcall
into
addr16
sub
mov
icebp
push
std
mov
adc
push
outsb
lods
sbb
add
cmp
pop
or
test
sub
test
mov
push
push
and
mov
inc
in
xor
pop
daa
xchg
mov
aaa
icebp
stos
or
sarb
jbe
in
outsb
test
into
lahf
stos
nop
lods
mov
faddl
dec
mov
pop
adc
enter
and
decb
add
arpl
jge
mov
daa
fs
inc
jae
xchg
add
lods
add
add
sbb
outsl
add
test
cmp
jbe
adc
inc
jp
adc
jns
outsl
fsts
sbb
in
js
adc
nop
test
int
sub
test
popf
xor
adc
xchg
out
call
flds
jno
mov
adc
mov
jecxz
outsl
out
or
fwait
add
adc
pop
xlat
pop
mov
pop
push
push
mov
pop
lds
lea
test
decb
pop
out
or
add
ljmp
xchg
jp
xor
mov
push
add
add
ss
xor
and
clc
icebp
imul
add
push
cmc
xchg
or
mov
xor
loopne
outsl
stc
loopne
xor
inc
pushf
inc
dec
sub
sub
xchg
push
or
pop
pop
out
push
imull
or
mov
inc
xchg
loope
testl
loope
pop
dec
add
leave
pop
lds
loope
cmp
call
sub
pop
cmp
incb
adc
xor
or
sub
push
dec
lock
rorw
pop
pusha
fstl
inc
lods
push
popa
daa
jno
xchg
popf
xor
mov
add
out
mul
aaa
cmc
xchg
lcall
sbb
add
cmp
xchg
call
xchg
test
cli
sti
dec
mov
sub
mov
aas
incb
test
push
inc
imulb
in
cltd
sub
mov
pusha
ds
jle
cmpsl
cs
out
sub
inc
mov
or
cmc
js
push
sub
pop
int
imul
test
mov
inc
mov
bound
sbb
insb
adc
inc
push
xor
mov
mov
jle
xor
jae
cmp
lds
mov
rcrb
lods
xor
adc
sahf
push
sahf
int3
in
adc
add
aad
out
fucomip
ss
cmp
imul
movsb
add
lods
add
add
mov
mov
jb
insl
adc
cltd
fdiv
add
mov
jne
xor
inc
jns
fisubs
xchg
mov
adc
xchg
mov
outsl
or
or
popa
cmpsb
ret
jecxz
sbb
inc
jp
cmp
mov
adc
xchg
cltd
out
push
out
and
sbb
pop
dec
dec
push
insb
lret
mov
mov
sub
stos
mov
je
xchg
in
dec
sub
jbe
sbb
push
mov
ljmp
xchg
shll
popf
or
out
std
xchg
fnstenv
jae
inc
or
add
in
cld
fisubrl
sbb
dec
dec
jb
add
lods
add
add
out
mov
mov
sub
repz
aaa
sarl
mov
mov
pop
jae
fstps
or
shrl
repnz
or
addr16
outsl
enter
dec
mov
enter
ss
jmp
out
into
inc
aam
mov
pushf
jmp
pop
sub
fdivp
femms
pop
or
popf
push
negb
daa
std
mov
jae
mov
sub
dec
sub
mov
and
lds
dec
lea
sbb
mov
add
push
les
in
lahf
sti
ja
rcll
out
cmpsb
add
lods
add
add
mov
bound
push
stos
aas
xor
mov
cwtl
aad
adc
and
outsb
add
mov
cmp
push
push
ret
cmp
and
nop
incb
inc
push
sti
and
sub
popf
daa
sbb
and
mov
push
call
insb
lea
push
inc
mov
mov
nop
popa
push
xor
sbb
and
lods
xor
int3
push
jns
int3
stc
ljmp
mov
jae
fadds
mov
cmp
xor
pusha
cmpsl
jb
js
add
xchg
cmpl
push
loopne
lcall
add
lods
add
add
aas
inc
cmp
push
fptan
into
loope
stos
inc
icebp
pslld
and
cmp
mov
push
test
out
dec
popa
test
mov
sub
dec
gs
rolb
inc
sub
loope
enter
adc
add
mov
cmp
jle
xchg
inc
std
pop
cmp
dec
cmp
stos
data16
int
pop
jns
cmp
cmp
xchg
adc
out
mov
fsubs
repz
pop
pop
addb
push
loop
push
mov
hlt
repz
pop
gs
movsb
loope
popa
insb
xor
adc
xor
add
test
and
pop
dec
imul
add
popa
cmp
pop
shll
sbb
das
aas
mov
popf
adc
insb
jg
ljmp
arpl
mov
add
xor
imul
jbe
enter
out
cmpsl
jp
push
icebp
pop
ret
mov
mov
adc
xchg
or
loop
mov
jg
sub
popf
jecxz
aad
push
add
test
jp
mov
sub
or
xchg
mov
xor
aas
xlat
in
lods
std
lds
dec
into
add
dec
or
out
pop
mov
fdivl
add
aam
fnstsw
out
fcmovu
in
fwait
stos
ret
add
lods
add
add
ja
sub
mov
shlb
lds
insl
jo
or
jl
jnp
and
or
pop
fsubl
in
jae
addl
daa
adc
outsb
sub
dec
cmp
push
in
mov
sub
mov
adc
stos
incb
sahf
test
jae
lret
nop
push
loope
je
data16
lahf
push
subl
pop
aas
jle
mov
fdivs
push
je
divb
add
fwait
xchg
std
pop
insl
icebp
cmp
dec
adc
xchg
mov
add
stc
sbb
inc
jecxz
mov
lret
dec
shrl
add
or
mov
jnp
jae
xor
or
add
dec
imul
mov
das
inc
bound
stc
shll
shrb
imul
sub
push
adc
dec
divl
xor
add
loope
mov
jp
xchg
std
stc
cmc
cmpsl
add
lahf
mov
movsb
mov
jp
xor
pushf
mov
js
cmpsl
loope
movsb
lods
or
movsb
or
jb
inc
pop
jno
mov
lret
cmp
xchg
arpl
imul
mov
cmpsl
jp
roll
mov
cmc
fisubrs
xor
add
mov
mov
icebp
and
push
subb
add
stos
enterw
test
shlb
push
popa
shlb
dec
adc
pop
inc
sub
push
mov
mov
mov
xor
dec
lret
loop
push
push
mov
jp
push
mov
fucomip
push
xchg
lock
sub
dec
xlat
in
sbbl
mov
cltd
jge
adc
pop
lret
mov
pop
pop
lret
stos
or
xchg
pop
or
pop
xor
lret
scas
aas
outsb
mov
ret
jl
or
mov
push
jns
test
jo
adc
in
andl
push
mov
adc
repz
das
cli
fists
dec
es
mov
sbb
stos
add
lods
add
add
dec
sarb
mov
xchg
orb
rol
loop
int3
cmp
mov
mov
cltd
lret
adc
loope
jns
inc
add
dec
repnz
rolb
gs
mov
imul
arpl
xlat
ja
adc
in
fcmovu
repnz
inc
fidivrs
or
outsb
outsb
pop
xor
mov
xchg
xor
xor
ret
sbb
cli
and
test
call
sbb
jecxz
arpl
pop
rorl
xchg
out
lods
push
sub
cmp
add
adc
push
adc
cwtl
out
sti
cmpsl
scas
outsb
fisubrl
add
add
frstor
push
and
push
add
mov
sbb
pushf
mov
xchg
hlt
push
jg
push
loopne
and
jno
pop
push
dec
mov
mov
adc
xchg
dec
shrl
fstl
inc
jb
and
push
loop
sbb
and
and
out
cmpsb
or
or
jo
fstpt
inc
cmp
mov
and
dec
xadd
scas
and
xchg
outsl
xor
test
xchg
mov
xchg
inc
test
mov
int3
lahf
iret
popa
cmp
int3
fsubr
jnp
aas
fldt
xchg
sbb
call
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
jl
add
addb
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
