push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
mov
orl
orl
sbbl
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
je
push
push
push
call
orl
orl
adc
xor
neg
neg
cmpl
movl
mov
mov
movl
jmp
movl
jg
push
call
xor
adc
movl
mov
add
add
not
mov
sub
mov
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jbe
push
pushl
push
push
pushl
call
mov
mov
sub
and
sbb
sub
adcl
orl
or
orl
mov
mov
sub
or
lea
cmpl
mov
movl
not
mov
jmp
mov
not
jge
push
push
push
push
push
push
call
or
adc
sub
incl
mov
mov
sub
or
and
xor
xor
and
adc
mov
mov
cmpl
movl
mov
not
mov
jmp
mov
jle
push
push
push
pushl
call
orl
xor
mov
sbb
sub
mov
and
mov
xorl
xor
or
sub
mov
inc
mov
xor
add
mov
mov
add
mov
mov
addl
shrd
shr
mov
mov
xor
xor
addl
or
mov
add
mov
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
pushl
push
push
push
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
movl
or
movl
movl
movl
add
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jle
push
pushl
push
push
pushl
call
andl
notl
andl
orl
addl
sbbl
mov
subl
shl
xor
mov
xorl
push
sbbl
push
push
push
sbbl
call
mov
or
mov
mov
or
mov
xor
mov
mov
cmpl
mov
movl
mov
notl
jmp
movl
movl
jl
push
push
call
adcl
sub
adcl
negl
and
or
movzwl
add
mov
sbb
add
sub
sub
mov
xor
or
adc
lea
subl
mov
inc
mov
andl
or
and
adcl
mov
adcl
or
xorl
xor
movl
cmp
movl
jne
and
mov
or
mov
shrd
adc
shr
notl
mov
sbb
mov
shl
subl
xor
xor
or
mov
movl
cmp
movl
jne
xor
mov
mov
addl
xor
mov
sbbl
mov
mov
add
mov
shrd
andl
mov
mov
addl
xor
xorl
shr
mov
adc
mov
xor
movl
or
movl
shl
sub
mov
mov
subl
mov
add
mov
mov
add
mov
sbb
mov
shrd
cmpl
not
not
mov
mov
jmp
movl
movl
ja
push
push
call
xor
add
and
mov
movzbl
adc
mov
sbb
and
movzbl
sub
cmpl
mov
mov
mov
jmp
movl
jge
pushl
call
sub
mov
mov
or
subl
or
neg
adcl
shr
sbb
mov
mov
sbbl
xor
xor
shl
adc
xor
or
add
mov
mov
andl
jmp
mov
imul
mov
adc
pop
adc
adc
inc
xor
lea
push
xor
sub
lods
clc
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
push
mov
mull
in
enter
sbb
imul
mov
mov
jl,pn
movsb
xor
sub
xchg
pushf
adc
mov
jecxz
inc
adc
fsubrs
push
push
cmpsb
mov
mov
mov
jo
cmp
jp
rcrb
dec
and
outsl
ret
lds
jle
aad
jb
rolb
or
mov
or
in
in
pop
fs
jp
jno
rclb
ja
lahf
out
mov
inc
cmc
sahf
inc
addr16
xchg
inc
loop
push
cmp
cmc
xchg
aaa
aas
adc
in
mov
add
add
loop
js
dec
inc
imul
sub
adc
xchg
into
pop
push
ljmp
addr16
out
mov
sub
test
pop
inc
mov
test
fmuls
jge
cmp
cmp
pop
jae
mov
and
mul
fisubl
xchg
xchg
pop
out
test
inc
data16
jbe
push
ficoms
push
inc
outsl
cmpsl
pushf
sub
test
cmpsl
mov
into
and
jbe
jno
jno
mov
idivl
add
loop
or
cld
insl
cli
add
icebp
add
cmp
mov
jge
sub
xor
jecxz
add
adc
data16
adc
add
push
imul
popa
sahf
push
push
mov
jo
dec
mov
cli
pop
mov
push
add
in
ficomps
repz
jg
int
mov
jecxz
aad
pop
mov
pusha
inc
loop
in
stc
test
popa
inc
loopne
inc
sbb
add
adc
xchg
mov
mov
add
and
leave
cld
scas
xchg
mov
pop
enter
xchg
add
into
push
outsl
das
stc
in
rcrb
push
arpl
mov
leave
xor
pop
mov
pop
icebp
pop
inc
push
xor
arpl
nop
pop
push
mov
aam
mov
aas
or
insl
hlt
iret
movsb
mov
aaa
dec
rolb
jb
mov
sbb
dec
int
xchg
gs
lock
out
mov
adc
mov
mov
or
xchg
xchg
xchg
bound
sbb
or
ficompl
pop
pop
lock
push
rorl
pop
mov
ret
rclb
inc
dec
aam
lret
push
pop
xor
xor
adc
dec
lcall
pop
mov
in
outsl
mov
test
aas
enter
mov
jle
sbb
mov
mov
fistps
xchg
dec
jecxz
inc
mov
push
mov
lods
or
test
jmp
cmp
xlat
cmpsb
inc
xchg
std
arpl
ret
inc
bound
in
push
jmp
nop
adc
lahf
lea
or
cmp
mov
sti
lret
jb
pusha
mov
sub
movsb
fldenv
lahf
pop
fs
icebp
push
sbb
jmp
sbb
test
sub
std
int3
repnz
or
icebp
jb
ja
lret
scas
in
sbbl
add
sti
ljmp
dec
in
mov
jle
inc
ljmp
es
lea
adc
dec
rcr
cli
push
jg
cmpl
test
jg
ja
and
pop
and
stc
bound
mov
xchg
adc
and
cmp
push
fidivs
mov
ss
shll
sbbb
aam
out
in
adc
or
cmc
imul
mov
lret
clc
adc
add
lds
iret
add
mov
jnp
icebp
pop
dec
out
jb
decl
lds
sbb
call
ljmp
loopne
das
xchg
cs
xor
dec
inc
pop
jo
fcmovnbe
jne
sbb
pop
ja
xchg
add
cwtl
xchg
test
lds
ret
sbb
pop
mov
enter
sahf
sbb
js
adc
mov
fs
hlt
movsb
movl
or
sbb
mov
cltd
loop
mov
pop
pop
cmc
cld
dec
cmp
in
std
and
cmp
push
bswap
test
lock
int
mov
add
lret
dec
or
js
leave
out
mov
lret
dec
imul
dec
stos
lahf
je
cmp
dec
and
inc
scas
jne
inc
ja
mov
test
shl
push
push
pusha
add
xchg
dec
lret
dec
pop
sub
stos
inc
pop
scas
push
lods
loop
push
test
mov
stos
and
jo
cltd
in
sahf
out
and
movsl
out
out
in
out
stos
nop
inc
sub
and
mov
cld
pop
lods
sbb
cmp
aas
push
jbe
repnz
jo
adc
addr16
jne
adc
xchg
push
xchg
imul
push
xchg
out
adc
mov
push
loope
mov
sbb
lahf
sbb
mov
insl
fldl
std
mov
pop
lea
cmp
stos
test
push
es
popf
mov
inc
movd
add
mov
insl
rorb
ret
sbb
xchg
mov
mov
inc
mov
mov
jge
mov
push
inc
iret
xchg
call
aam
lods
in
out
dec
adc
add
or
in
cmc
call
pop
popa
ret
jns
and
int
add
cmpsl
arpl
adcb
out
cs
xor
pusha
sahf
jnp
inc
sbbl
mov
cmpsb
mov
mov
cltd
push
sbb
sbb
inc
mov
cmp
and
daa
mov
dec
jl
shrl
sub
sbb
lock
or
ds
ljmp
data16
cmp
push
neg
adc
scas
pop
pop
in
add
jge
jnp
shll
dec
cmp
out
push
ret
push
test
call
in
shrl
ror
aam
pushf
into
lods
mov
pcmpgtb
mov
ja
stos
scas
inc
jb
orl
mov
test
sbb
dec
jge
enter
or
fcomip
or
imul
mov
xchg
daa
pop
xchg
xor
outsl
xchg
xchg
fadds
and
inc
cmp
ss
mov
lds
les
mov
push
decb
or
jmp
call
add
xchg
mov
nop
or
xchg
lahf
jo
shll
sahf
pushf
adc
les
cld
ja
push
cmp
xchg
ss
in
decl
push
and
into
rolb
cmp
nop
mov
add
jp
mov
loop
movsb
push
nop
pushf
leave
and
das
arpl
je
mov
mull
xchg
adcb
push
sbbl
push
insl
lret
add
sbb
mov
add
ret
pop
insl
fisttpl
and
push
lcall
jle
nop
fsqrt
pop
sub
js
insl
insl
adc
or
mov
sahf
sarl
mov
in
jne
inc
xchg
jmp
cmp
cmpsb
mov
fsubrl
mov
inc
mov
push
adc
fucomi
push
das
jo
xchg
mov
lcall
mov
push
cmp
ret
sbb
sub
lahf
es
xchg
addl
fldcw
loop
cmp
in
mov
cmp
mov
cmc
xor
fstl
jne
pop
adc
xor
mov
mov
gs
mov
rcl
or
scas
xchg
mov
ficoms
mov
jo
sub
jns
xchg
outsl
popf
adc
dec
lret
mov
ss
xchg
jbe
outsb
sarb
mov
sub
push
outsb
out
ficoml
mov
test
push
stos
loopne
mov
fadds
mov
adc
pop
lods
dec
adc
insb
test
xchg
mov
mov
sub
in
xchg
inc
scas
mov
call
popf
cltd
xchg
outsl
imul
mov
test
pusha
cmp
mov
ja
sub
ja
pop
frstor
enter
add
cltd
mov
ds
and
or
repnz
je
lods
ja
insb
fcompl
mov
jg
and
xor
clc
pop
dec
xor
add
mov
cmc
xchg
je
test
jle
shlb
aas
adc
lods
aaa
xchg
ret
jecxz
mov
scas
xchg
xor
dec
xor
data16
sub
pop
nop
mov
or
jl
xchg
cmp
mov
mov
fsubl
add
push
imul
inc
sbb
cli
testl
jnp
jae
adcb
mov
sbb
lea
incb
xor
mov
mov
andl
idivb
bound
adc
sbb
mov
gs
imul
decl
xchg
pop
imul
mov
inc
lret
lock
pop
mov
enter
fwait
sbbb
jnp
mov
ja
jb
xchg
mov
add
dec
fdivrs
xchg
pop
xchg
xor
lods
fadds
lret
aas
cmp
mov
adcl
loopne,pn
mov
call
inc
ja
mov
mov
xchg
lds
mov
xor
nop
cmc
data16
lods
mov
jmp
cltd
add
fmuls
mov
xchg
cmp
sub
cmpsb
or
dec
lods
add
sbb
dec
clc
and
icebp
add
fsubl
sbb
mov
mov
sbb
cmp
xor
sbb
jno
jp
movntps
inc
xor
out
pop
jnp
jo
pop
sbb
jb
mov
icebp
dec
add
and
adc
pop
pop
jp
cmp
inc
jo
arpl
addr16
into
inc
pop
es
popf
adc
fs
cmp
int
movsl
push
loop,pn
jne
adc
push
pop
fcmovnbe
lods
addr16
push
loope
sbb
jl
js
pop
adc
repz
mov
pop
insb
repz
mov
or
push
shrb
pop
int3
dec
std
dec
shl
dec
mov
push
cmp
jnp
and
test
std
leave
popf
cs
xchg
mov
mov
mov
sbb
mov
jae
or
pop
mov
daa
xor
cmp
xchg
adc
or
les
push
js
jo
out
leave
adc
test
mov
xor
jnp
push
xchg
lahf
js
js
xor
cmpsb
cmp
xor
mov
loope
and
mov
xchg
xor
ss
pavgb
xor
hlt
jge
sub
stos
sahf
rcll
aas
dec
lret
scas
sbb
std
inc
or
sar
dec
lea
pusha
xlat
jne
cmc
mov
cltd
pop
inc
pop
or
movsb
ljmp
add
jne
xor
mov
inc
sub
inc
sub
cwtl
pop
mov
xchg
cmp
add
dec
cld
push
xchg
incl
cmp
fucomip
fcomp
pop
fcompl
addr16
push
fwait
mov
xchg
push
jbe
jbe
in
aas
popf
mov
rolb
aam
fwait
aaa
out
xor
pushf
xor
jl
fstpl
push
push
addr16
cmp
jnp
mov
inc
dec
rep
mov
es
adc
xchg
or
fsubl
and
loope
xchg
sbb
sbb
xchg
add
cmp
sub
xor
lahf
jmp
pushf
lret
ficompl
sub
or
arpl
pop
rep
sahf
fwait
xchg
fnstsw
pop
sbb
idivb
cwtl
xchg
sub
and
sbb
fsubr
rorb
dec
inc
adc
aaa
das
loopne
stc
jecxz
add
aam
inc
sub
popl
pop
sbb
insl
rclb
scas
add
lret
cs
adc
mov
or
mov
aam
je
xor
popf
iret
rcll
rcrb
jmp
inc
popl
and
mov
dec
push
and
enter
fnsave
loopne
test
dec
inc
out
repnz
loope,pt
loop
test
or
sub
mov
cmp
pop
js
shl
lods
and
and
add
pop
popa
lds
sbb
lods
aaa
addb
shlb
and
nop
sub
push
jo
or
sbb
dec
lock
std
jb
orb
test
es
test
daa
shl
sub
xchg
adc
mov
push
loope
aam
test
mov
enter
or
push
jns
nop
stos
pop
fisttpll
pop
lds
push
add
repnz
in
xchg
nop
add
repnz
cs
jmp
divb
mul
or
movsb
and
push
fistl
pop
cmc
dec
enter
xchg
dec
inc
lods
ljmp
cmpsl
jbe
xor
mov
std
repnz
aaa
dec
je
xchg
shlb
vpcmov
incb
inc
dec
sbb
and
pop
lods
mov
imul
xchg
xor
add
lcall
or
add
push
scas
fcoml
cmp
jns
push
sbb
mov
push
cli
adc
pushf
aaa
insl
cmp
adc
fldcw
sbb
aas
insl
mov
test
mov
xor
pop
in
and
add
xchg
les
cmc
jns
mov
adc
imul
sub
mov
xchg
insl
sahf
and
ret
push
and
inc
jmp
dec
pop
inc
dec
pop
pop
mov
add
fcompl
mov
lahf
in
movsb
fstpl
jno
mov
cmp
mov
shrl
mov
jns
jno
popl
cmp
xchg
scas
push
cmpsb
rorb
mov
mov
xor
or
adc
iret
fldl
sub
rorb
ds
inc
inc
add
sub
ret
xchg
call
dec
and
cmp
pop
sbb
fwait
enter
clc
roll
repz
shr
scas
and
add
das
insb
outsb
lea
icebp
sub
cmp
pop
dec
shl
mov
lcall
sbb
cmp
inc
shlb
xchg
push
mov
pop
sub
inc
cld
je
push
jnp
push
dec
loopne
cmp
daa
mov
or
mov
fnstenv
inc
mov
xor
das
adcl
push
enter
cmp
gs
adc
sub
cli
xor
out
cmc
arpl
xchg
cwtl
mov
xor
xchg
out
pop
repz
rcll
mov
add
ret
mov
sbb
fsubrp
imul
outsl
mov
cmc
sbb
insl
cmp
sbb
ds
sbb
les
rcr
or
cs
outsl
gs
fdivrs
cmp
add
test
xor
cmp
add
test
sti
aam
pop
add
out
int
mov
jno
sub
decb
mov
inc
jg
pusha
lock
xchg
inc
jnp
sti
clc
pop
jle
dec
cmp
jnp
mov
insl
mov
xchg
aad
inc
sbb
je
jge
fisttps
fisubrl
pop
shll
ficoml
scas
pusha
sti
ret
push
das
add
shrb
jmp
std
test
mov
out
add
xchg
rorb
push
les
mov
push
fcomps
std
pop
lcall
pop
js
jmp
jb
push
cmpsl
inc
pop
rolb
xchg
push
pop
cmc
and
out
repz
xchg
sub
sbb
cmpsb
jo
jmp
stos
mov
adc
push
mov
orl
jmp
jl
data16
push
jl
pop
scas
pop
and
sti
jle
rcrl
mov
bound
aam
push
dec
in
jl
sub
dec
es
aad
adc
push
repz
lods
hlt
sub
push
add
ret
sub
sbb
xchg
add
jbe
aaa
lahf
mov
push
or
jl
pop
das
je
cli
popa
dec
rol
pusha
or
jnp
loope
repz
subl
roll
das
sub
mov
add
cmpsl
idiv
cmc
xchg
push
xor
shll
lahf
or
hlt
jns
mov
test
inc
ret
out
sub
ret
xchg
test
aaa
sbb
cmp
sub
cs
jno
data16
cmp
mov
fnsave
adc
fistps
into
test
or
imul
push
dec
fidivs
jg
loopne
movsb
rclb
scas
je
jno
fistpll
lahf
mov
lods
xor
inc
lea
cmp
inc
dec
aad
lret
into
int
push
sbb
call
add
ret
jmp
hlt
xorb
shll
insl
push
push
rcr
mov
pop
cmp
test
mov
fcmovbe
xchg
adc
in
cmp
je
xchg
push
int
xchg
jbe
mov
dec
sub
std
xor
mov
and
dec
jl
cmp
mov
xchg
loop
cwtl
pop
repnz
mov
lea
mul
arpl
pop
jg
adc
dec
mov
into
cmp
loop
pop
into
dec
je
inc
push
cltd
fldcw
jle
push
pop
and
or
jle
enter
pop
ds
push
cli
jno
ret
int3
or
mov
test
pop
fldenv
sub
mov
popl
into
cmp
arpl
repz
dec
test
lret
and
cmc
and
sti
mov
dec
or
xor
add
inc
mov
push
ret
das
xchg
mov
mov
xchg
nop
adc
inc
push
out
push
sarl
lcall
jle
xchg
cmp
ficompl
aam
dec
jge
jo
int
aad
mov
xor
sub
or
mov
divl
pop
loope
mov
idivb
loop
lds
aaa
movsl
fsubrl
cmp
dec
push
test
mov
es
jne
mov
inc
shrl
inc
pop
dec
mov
jmp
gs
add
lea
jne
adcb
cmp
scas
cwtl
add
into
cmp
lahf
rorl
sarb
adc
inc
push
dec
fs
cmp
jb
insl
push
jno
pop
mov
popa
dec
movsl
and
push
call
xlat
jg
les
imul
mov
cmp
cwtl
mov
xchg
add
rcll
sub
mov
push
push
dec
nop
pop
adc
adc
pop
gs
cmp
clc
rolb
cld
in
cmpsb
jae
lock
loop
imul
imul
xor
cltd
add
or
pop
fisttpll
popa
aad
rorb
mov
sbb
test
cmp
les
jg
push
cli
call
imul
or
shll
divl
push
or
in
push
mov
sbb
incl
inc
sbbl
das
or
push
push
imul
mov
lret
mov
push
xor
pop
sub
std
xchg
js
fcoms
fbstp
ljmp
pop
aam
fs
mov
add
jg
jno
into
hlt
pusha
gs
mov
add
rcrl
or
xchg
push
pop
dec
inc
into
idivl
sub
mov
int
cmp
xor
movsl
add
fisttpl
mov
jecxz
mov
test
xchg
sub
arpl
sar
push
xchg
adc
insl
mov
scas
clc
or
and
imul
std
dec
out
sub
in
jmp
mov
int3
ret
add
mov
stos
out
dec
test
out
jne
pop
dec
test
loopne
pop
clc
jge
adc
into
rcrl
jecxz
pop
jp
and
cmc
adc
int
pop
adc
or
inc
lahf
cmp
push
pop
data16
xor
jne
sbbb
sub
mov
dec
xor
cmpsl
jp
in
cmp
cmpsb
in
imul
bound
sahf
or
pop
sti
mov
jle
xlat
push
add
jnp
insb
push
mov
fcmove
xchg
cmp
imul
add
jnp
scas
iret
repz
mov
jle
xchg
sub
sti
and
loopne
ds
xor
add
data16
jne
mov
bound
sub
pushf
push
push
sbb
cld
cmp
out
aad
fists
add
lods
addr16
inc
mov
push
cmp
pop
lret
jge
aaa
sbbb
and
jl
xor
fwait
stos
sub
dec
adc
add
repnz
or
adc
xchg
andl
aaa
dec
in
mov
daa
jns
mov
imul
outsl
push
fcom
push
sbb
inc
push
mov
inc
enter
lods
dec
push
xchg
popf
daa
scas
jle
cmp
add
cmp
add
aam
mov
inc
cmp
sbb
pusha
jle
outsb
stc
add
ja
sbb
adc
jecxz
dec
insb
sbb
cli
xlat
xchg
and
cli
js
inc
sbb
xchg
xor
sbb
mov
popa
cmp
mov
mov
mov
add
out
repnz
mov
add
stos
insb
sarl
enter
cmp
and
mov
xchg
dec
and
pushf
or
fimull
pusha
popf
inc
cwtl
ds
pop
rolb
ret
xor
call
sub
bound
jns
adc
out
cltd
mov
mov
dec
xor
loopne
ret
addl
jl
and
xchg
jo
cmp
pop
jmp
test
leave
loop
pop
lods
es
add
jne
xrelease
fisubrl
out
mov
jecxz
xlat
push
jae
shrl
dec
mov
aas
outsb
sbb
out
push
mov
hlt
sub
movsb
dec
rcl
rcrb
mov
idivb
inc
sub
aaa
lcall
push
push
ljmp
sub
inc
or
jge
push
adc
jnp
mov
mov
sbb
xor
push
dec
xchg
mov
outsb
repnz
pop
sub
pop
sbb
lcall
push
xchg
scas
loope
jmp
sbb
mov
adc
negl
je
mov
xchg
cli
push
sti
add
in
jno
push
cli
enter
and
jle
adc
out
cmp
cwtl
mov
xor
and
sub
mov
scas
sarl
ret
scas
sbb
iret
popf
in
mov
push
jmp
mov
mov
aaa
mov
in
movsl
sbb
pop
and
xchg
movb
mov
call
sbbl
popa
dec
jae
pushf
push
lret
xor
cmpsb
insl
jno
inc
imul
pop
pop
mov
or
add
flds
cbtw
adc
sub
push
cmp
mov
mov
ja
inc
lock
fstpl
lock
mulb
inc
in
mov
call
gs
adc
popf
jmp
test
jge
test
xor
mov
imul
xchg
cli
les
adc
xchg
mov
jle
fmull
and
mov
mov
out
fdivl
sub
cmpsl
dec
mov
jo
call
rorb
pop
cmp
test
call
ret
clc
or
popf
jno
iret
icebp
or
cmpsb
cltd
and
sub
lea
push
pop
sbb
dec
cld
ss
xor
xor
add
cs
mov
popa
mov
in
ja
cmp
dec
std
push
insl
add
mov
xchg
inc
add
ret
icebp
enter
lea
xor
pusha
aas
xchg
test
sub
das
pop
cmpl
inc
xor
in
sbb
mov
xchg
xchg
outsl
outsl
je
daa
stos
inc
pusha
cmp
imul
inc
shr
int3
sub
cmpsl
cmc
hlt
sbb
xchg
test
pop
shll
fisttpll
js
sub
test
adc
idiv
sti
and
imul
stos
call
adc
aaa
dec
and
push
jge
movsb
add
frstor
sbb
aaa
sbb
xchg
stos
fiaddl
jo
out
xchg
sbb
mov
sub
arpl
push
xor
cmp
jmp
loope
sbb
xchg
insl
gs
sub
cmp
outsb
add
jecxz
push
cmp
cmpsb
xlat
repz
sbb
pop
sub
cmp
pop
data16
mov
loope
out
fcomip
lahf
sbb
pop
mov
gs
repz
push
push
push
aam
pop
pop
cmc
mov
orl
stos
les
pop
in
sar
les
stos
adc
mov
dec
mov
out
shl
xchg
in
pop
outsl
loope
insl
out
call
sub
jbe
hlt
nop
mul
filds
inc
popa
jmp
imul
jne
push
sbb
nop
add
das
mov
xchg
shrb
jb
adc
enter
scas
dec
int
aam
cs
out
add
mov
mov
movsb
cmp
sar
test
xchg
jmp
insb
jno
daa
mov
cs
inc
enter
clc
push
xor
nop
mov
mov
jns
vfmadd231pd
mov
aaa
mov
mov
jge
push
fcomps
cmp
dec
je
fwait
bound
inc
pushf
dec
cwtl
cmp
adc
xchg
jge
cmc
fsubl
xor
mov
xchg
or
push
cwtl
and
sbb
test
push
jb
add
leave
jp
sbbl
test
inc
add
pop
sahf
push
out
arpl
cmp
shrl
adc
dec
or
negb
loopne
in
roll
aad
and
stos
outsl
in
pop
popa
sbb
mov
jbe
pusha
fldcw
adc
sbb
lds
hlt
out
xor
fdivrs
cmp
rcrl
scas
push
iret
sbb
idivl
addr16
inc
mov
std
mov
pop
js
or
loop
sub
shr
pop
pop
mov
popf
lahf
mov
inc
or
mov
ret
mov
gs
push
adc
pop
lock
jg
sti
and
out
lea
mov
pop
mov
adc
adc
sbb
icebp
fistpll
scas
imul
pop
orb
pop
or
cmc
ret
mull
xor
sub
adcb
jnp
xor
push
inc
sub
cmp
jne
dec
mov
mov
jno
js
adc
mov
mov
ret
adc
scas
insb
scas
push
imull
pop
lea
out
push
lahf
mov
negl
jo
sbb
lds
mov
fidivrl
idivl
push
shlb
mov
in
mov
addl
cmp
pop
cmc
out
icebp
push
sub
scas
cld
mov
cmp
xor
or
ret
clc
out
pop
stos
xchg
scas
int
sbb
les
lock
xor
cmp
or
test
iret
mov
js
outsb
xlat
cmpsb
addr16
repz
or
dec
mov
or
push
push
lods
ds
and
mov
inc
inc
das
add
je
inc
enter
cmp
sbb
lret
out
nop
adc
mov
jns
push
jecxz
fwait
aam
cmp
cld
mov
int
aas
test
sbb
cmp
dec
sbb
xor
mov
test
mov
gs
aam
sub
dec
mov
out
outsl
mov
loopne
arpl
movsb
test
mov
jb
cmc
ret
out
out
adc
sub
jno
cmc
aaa
outsl
sbb
sbb
xchg
cmc
dec
or
dec
xchg
jnp
add
out
xlat
pop
out
mov
fists
loop
cmp
xchg
out
cli
xchg
scas
mov
cld
xchg
xor
lcall
in
add
xor
test
sarb
mov
in
sub
push
rolb
ret
xchg
iret
cli
pop
jecxz
xor
test
mov
out
inc
ret
popa
add
sub
scas
jns
lods
push
popa
lods
sub
fdivrl
insl
sbb
mov
or
xchg
sbb
fldenv
push
jmp
decb
dec
adc
or
or
add
rolb
mov
outsb
add
out
push
or
mov
or
loop
enter
adc
xor
pop
cli
test
xorb
sub
or
pop
and
in
sahf
jmp
in
lock
movsb
xchg
out
pop
decl
and
or
pop
xor
pop
jge
mov
orl
jecxz
dec
into
rorl
into
xchg
jae
xchg
push
mov
popa
xchg
add
pop
sub
adc
xor
lods
roll
shr
sbb
mov
mov
mov
orl
xor
xor
or
orl
shl
addl
lea
or
mov
cmpl
mov
mov
jmp
mov
movl
jl
pushl
pushl
push
push
call
sbb
movzbl
xor
mov
addl
sbbl
mov
sbbl
shrd
andl
shr
xor
mov
and
mov
mov
sbb
xor
movzbl
or
mov
mov
subl
xor
or
orl
shl
imul
mov
cmpl
mov
mov
movl
jmp
notl
jne
push
push
push
push
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
movl
or
and
sub
subl
sub
sbbl
mov
adcl
shrd
mov
mov
xor
decl
shr
cmpl
movl
movl
jmp
movl
movl
jl
pushl
push
push
call
adc
or
or
sbb
xor
neg
sbbl
mov
mov
sub
mov
mov
xor
or
negl
shl
xorl
sub
mov
movl
cmp
mov
mov
movl
jg
and
mov
mov
xorl
shrd
mov
xor
mov
xor
shl
xor
or
shr
cmpl
mov
movl
jmp
movl
movl
jb
push
push
pushl
push
call
neg
xorl
neg
xorl
inc
andl
adc
mov
addl
mov
cmpl
mov
mov
jmp
movl
jne
pushl
call
adc
sub
sub
and
sbb
mov
cmpl
mov
movl
jmp
movl
ja
pushl
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
shrd
shr
mov
mov
cmpl
mov
not
jmp
movl
movl
jl
call
dec
movzwl
sbb
and
xorl
movl
add
mov
xor
movl
xor
adcl
or
xorl
shl
subl
imul
adcl
sub
movl
jmp
movzwl
sbb
mov
mov
cmpl
movzwl
mov
movl
not
jmp
movl
movl
jg
push
push
push
pushl
pushl
push
push
push
pushl
call
adcl
sub
sbb
adcl
xorl
not
xor
xor
sub
mov
decl
shrd
mov
decl
mov
xor
xorl
shl
decl
xor
or
addl
shr
mov
mov
mov
and
mov
sbbl
shrd
sbbl
shr
decl
mov
cmpl
movl
not
jmp
mov
movl
je
push
call
and
adc
mov
sub
mov
movzbl
or
add
xor
xor
add
mov
sub
sub
mov
mov
xor
xor
orl
or
addl
shl
xor
add
add
mov
mov
xor
shrd
movzbl
sbb
shr
mov
mov
orl
xor
shl
xorl
xor
or
sbb
mov
xor
or
sub
mov
movl
sbb
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
push
push
push
push
push
push
push
pushl
call
dec
movzbl
sbb
sub
and
mov
mov
sub
add
mov
movl
mov
mov
sbb
mov
xorl
jmp
pop
pop
iret
pop
cltd
sbb
dec
fldenv
push
or
mov
pop
adc
push
call
adc
inc
pop
dec
rcll
cs
cmp
insl
dec
daa
scas
inc
loopne
mov
xor
sti
push
inc
pop
in
out
inc
xorl
mov
int3
fwait
js
pop
push
jnp
push
fcoms
add
das
iret
adc
call
mov
aam
xchg
xchg
lcall
popf
jmp
and
dec
subl
test
bound
jl
aas
lea
xchg
in
int3
enter
mov
int3
icebp
jmp
dec
cmp
dec
in
and
adc
cmp
fsts
inc
cltd
mov
jmp
shlb
mov
mov
cmc
pop
mov
test
mov
out
inc
pusha
adc
mov
mov
jae
jp
dec
pop
dec
cmpsb
dec
pusha
fwait
out
leave
loopne
mov
mov
xchg
dec
dec
aaa
or
popf
or
daa
sub
out
ja
push
xor
cmpsl
int3
cmp
sub
inc
aad
xchg
repnz
jnp
dec
adc
cli
aaa
inc
inc
lret
loop
pop
lds
js
rorb
mov
sub
addr16
inc
xchg
imul
lods
mov
mov
in
or
fistl
mov
test
cli
add
lods
cmp
aad
adc
fsubl
frstor
lcall
push
mov
cmp
sbb
jae
jle
dec
cmp
pop
test
mov
loopne
jg
push
iret
mov
mov
cmpsb
mov
and
dec
divb
mov
or
pop
cmp
adc
and
popf
fsub
cmp
arpl
lahf
movsb
jo
int
push
push
mov
loop
leave
push
push
jne
xchg
fs
pop
mov
mov
adc
xchg
fisubrs
push
pextrw
dec
mov
fs
popf
xor
and
in
movsb
lock
mov
adc
push
arpl
add
cwtl
xchg
cmp
adc
in
pop
jb
mov
cmp
frstor
and
dec
inc
xor
cs
xchg
sbb
pop
cmpsl
leave
je
dec
mov
movsl
mov
fcompl
aas
cwtl
and
xchg
mov
je
orb
sbb
pop
daa
cmp
clc
in
test
js
mov
ficompl
aas
icebp
jbe
mov
in
or
xor
xchg
or
xor
les
push
pusha
cmpsl
imull
std
jns
int
sbb
sahf
repz
aas
xchg
adc
hlt
cltd
add
scas
loopne
mov
or
pop
push
mov
cwtl
movsl
nop
sbb
movsl
jno
scas
sbb
pop
dec
in
pop
mov
sub
stc
cmp
imul
jp
icebp
xchg
push
int
imul
sub
cmp
mov
mulb
iret
mov
outsb
fs
pop
popa
jno
jne
and
fwait
movsl
add
pop
test
pop
pop
pusha
fisttps
out
and
fistpl
add
xchg
xor
xor
dec
xorl
xor
ret
add
stc
les
push
dec
xchg
mov
mov
sbb
mov
mov
pop
cmp
xor
lret
int3
mulb
push
ss
popf
adc
enter
aas
cmp
cmp
push
xchg
mov
mov
sub
xchg
in
mov
sbb
jmp
cmp
gs
jns
mov
adc
outsl
mov
lret
and
xor
sbb
imulb
pop
loope
mov
adc
xchg
add
cmp
sbb
cmpsl
shr
sbb
mov
fdivrl
movsb
mov
or
std
jle
mov
scas
pop
cmp
pop
insl
add
hlt
leave
sub
test
jg
xchg
addr16
repz
xor
fldenv
xor
dec
cmp
popa
or
lret
and
jne
sbb
push
mov
insb
stos
push
and
sub
mov
mov
mov
jno
lock
test
jmp
mov
pop
mov
shlb
scas
fdivs
or
leave
repnz
rep
frstor
incl
push
shl
cmp
xchg
or
pop
jno
inc
adc
stos
enter
xchg
jae
int3
push
cmp
xor
enter
mov
cmpl
decl
xchg
lret
xlat
dec
inc
imul
cld
mov
iret
sub
pop
pop
mov
test
loopne
and
add
mov
jns
xor
ss
loopne
push
xchg
movsl
out
jp
imul
lods
out
adc
pop
cwtl
mov
pop
cmp
mov
adc
adc
test
pop
inc
inc
sub
aas
jge
rcl
push
gs
cmp
jge
push
mov
xor
fldt
cmp
adc
arpl
lea
add
jbe
fmull
fdivl
shll
xchg
xor
jnp
movsl
lock
cmp
pusha
lods
push
push
jnp
dec
xor
inc
adc
sbb
jne
imulb
hlt
add
push
pop
or
mov
in
pusha
push
add
ds
lret
stc
mov
push
ss
mov
mov
inc
shll
cmp
mov
scas
jnp
jle
xchg
fwait
cli
lods
cwtl
cltd
jp
inc
push
and
enter
xorl
inc
enter
enter
cmpsl
push
xchg
je
cmpsl
mov
or
arpl
sarb
cmp
test
xchg
imulb
jmp
test
mov
ljmp
mov
or
shlb
lahf
mov
inc
cltd
push
mov
xchg
divl
dec
mov
mov
mov
int3
sub
fists
in
cwtl
nop
mov
arpl
int3
test
ret
fimull
jno
pop
push
sub
mov
cmp
inc
sub
mov
pop
sub
sbb
or
int
pop
sbb
pop
sbb
sarb
jns
in
sub
aad
aam
rcrb
adc
fildll
out
aaa
push
mov
mov
xorl
test
sbb
mov
mov
cld
shlb
cmp
pop
insb
sahf
aam
repz
mov
std
lret
popf
jp
inc
add
lea
cmp
nop
push
iret
cmovo
loope
sub
pop
adc
lock
lods
frstor
mov
lret
call
mov
in
xor
adc
leave
or
mov
inc
inc
fistl
in
popa
scas
push
mov
sar
mov
es
in
sti
setne
jmp
xor
aad
mov
xor
or
insb
out
sti
lret
enter
aaa
fldcw
mov
mov
mov
dec
clc
and
or
jge
jb
ds
pop
mov
arpl
rcrb
xor
lods
cmpsb
push
mov
add
push
add
lock
dec
leave
ljmp
add
mov
insb
sahf
mov
bound
sbb
inc
mov
dec
dec
into
lods
gs
inc
xchg
push
fdivr
outsl
js
mov
jnp
movsb
out
dec
out
or
orl
xchg
inc
pop
lcall
jmp
or
stc
das
xor
lcall
movb
jb
push
mov
xor
mov
push
or
repnz
enter
inc
push
shrl
sub
movsb
xchg
sub
mov
mov
add
cmp
leave
sahf
enter
push
dec
mov
sti
xor
rorb
and
lret
xchg
add
jno
mov
jae
fs
xchg
jg
into
mov
pop
cmp
xchg
jb
out
popa
sbb
push
ljmp
jno
sub
insl
mov
rcr
push
dec
sbb
mov
pop
lea
aad
jecxz
pop
hlt
hlt
inc
lods
out
jecxz
adc
sub
mov
sub
inc
dec
mov
mov
gs
call
mov
xor
inc
push
scas
cltd
jb
loopne
negb
ss
and
jl
mov
xchg
daa
ljmp
xchg
in
sbb
fs
and
pushf
dec
mov
cmp
imul
orb
iret
mov
cmpsl
test
sub
add
aad
adc
out
jb
movsl
scas
fnstenv
cltd
mov
lock
movsl
sub
push
push
push
in
es
xchg
mov
xchg
movsb
enter
mov
add
enter
pop
pop
mov
jns
and
xchg
sbb
sbb
ja
imul
sub
xchg
sub
nop
xor
in
mov
mov
add
rclb
mov
dec
xor
jp
in
push
out
jae
xchg
aad
xchg
cltd
iret
ja
sub
inc
jge
das
movsb
mov
std
mov
cmp
mov
das
popa
mov
adc
sbb
inc
lock
push
mov
pushf
ret
les
xor
adc
pusha
or
sub
aas
add
movsb
adc
add
pop
jno
arpl
xchg
cwtl
out
push
pop
cmp
sub
test
aad
pop
jp
outsb
iret
jo
aas
ds
or
jno
jb
or
pusha
decb
int
stos
xchg
inc
leave
push
xor
xchg
jecxz
push
sub
mov
das
adc
dec
scas
sub
mov
rdpmc
sub
lods
fisubl
mov
jle
mov
mov
mov
sbb
leave
mov
sarl
out
xorb
inc
imul
xor
pop
pushf
dec
ficomps
adc
loopne
inc
pop
push
mov
sbb
cmp
popf
lods
clc
push
lret
cmp
and
call
in
inc
pop
dec
lods
fmul
jmp
sahf
js
inc
xchg
push
inc
xor
fimull
lahf
dec
inc
bswap
jo
add
das
insb
jns
mov
xchg
test
inc
das
cmp
inc
pop
insb
daa
lods
insb
fiaddl
sbb
lret
cmp
pop
or
sbb
jp
decb
cmp
cmpsb
jle
stos
mov
push
mov
repz
int3
sbb
push
pop
out
add
ja
and
out
mov
inc
adc
ljmp
hlt
call
adc
outsb
push
or
fyl2x
movb
stc
nop
sahf
ret
mov
in
xlat
mov
daa
mov
aad
je
add
or
or
les
pop
jge,pn
test
fs
and
sti
imul
jmp
cs
or
cmc
inc
loop
sub
push
imul
lods
ss
push
movsl
gs
fs
repnz
out
add
adc
outsl
dec
ja
pop
mov
inc
pop
push
push
mov
mov
nop
loopne
or
xor
push
iret
ss
ret
rorb
aam
sub
adc
mov
sbb
and
mov
adc
mov
sub
cmc
or
xchg
adc
jo
adc
mov
fnstcw
and
les
lods
cwtl
xlat
mov
jbe
and
mov
outsb
push
test
ja
cmc
xor
in
jbe
or
mov
fs
ljmp
add
dec
cwtl
xchg
cmpsl
jg
scas
dec
push
iret
cli
lods
mov
ja
inc
cmp
pop
sti
aam
ficompl
jmp
cmp
or
push
dec
test
xlat
or
dec
and
outsl
adc
add
or
out
push
jge
popa
push
psubq
scas
addr16
dec
sbb
pop
outsl
cwtl
jmp
cmp
push
rcrb
dec
mov
into
mov
jge
cmp
xchg
push
or
sub
ss
sahf
xchg
out
adc
lods
loope
cli
sbb
js
xchg
or
aaa
xchg
xchg
sub
out
mov
addr16
and
mov
mov
jmp
jp
aad
jno
scas
mov
subl
push
mov
adc
pop
pusha
lret
pop
into
dec
pop
or
mov
cmp
mul
scas
shll
mov
dec
push
sub
lock
aad
pop
adc
les
jl
int3
jne
out
jp
add
test
dec
sub
fimull
rol
mov
jne
jne
push
mov
sub
sbb
push
shlb
mov
hlt
repnz
hlt
test
imul
fwait
push
and
add
aas
cmp
sbb
or
xchg
mov
jmp
lds
inc
leave
clc
cmp
inc
arpl
popf
int
add
call
or
xchg
cmp
lret
jl
cmpb
out
xchg
call
hlt
xchg
ja
sbbl
mov
lods
mov
pop
and
stos
or
les
shlb
inc
mov
outsb
fistpll
fadds
into
xor
cmpl
pop
neg
pop
push
repnz
and
push
sbb
and
jo
adc
mov
ljmp
and
xchg
pusha
sbbl
popa
cld
mov
mov
inc
cmpsb
decb
cwtl
fdivs
mov
das
mov
jle
cmp
push
cwtl
sub
bnd
lahf
cmp
mov
inc
loop
out
mov
mov
push
cmp
es
fs
idiv
pop
mov
push
mov
lods
jb
rorl
cmove
jp
lock
and
mov
fs
mov
and
or
or
out
pop
movsl
push
mov
jnp
mov
out
dec
or
idivl
lods
mov
in
xlat
movsb
gs
insl
dec
scas
out
int
imul
popf
sub
inc
movsb
adc
mov
cwtl
movsb
jnp
arpl
shll
and
xorb
in
mov
dec
fdivrl
sub
sbb
scas
imul
orl
pop
test
push
sub
es
pop
imul
mov
pop
mov
loope
and
call
out
pop
out
jp
push
jne
push
stos
mov
fimuls
pop
cmp
inc
inc
jp
or
fsts
fistpl
dec
jl
dec
pop
jecxz,pt
mov
out
fcompl
movsb
mov
psubsw
fcmovnu
lds
sbb
mov
dec
and
push
roll
adc
es
xor
jo
dec
mov
sub
daa
sahf
repz
mov
and
jl
jo
in
mov
movsb
push
or
sahf
jnp
dec
dec
lahf
lahf
fsubrs
into
inc
jecxz
mov
jle
pop
xor
out
adc
test
add
pop
push
cmp
stos
add
rclb
xor
in
stos
lret
mov
add
adc
sahf
stos
push
cmp
or
js
int
movsl
inc
fldcw
pop
mov
xchg
insl
jae
test
mov
fadd
das
and
pushf
sarl
data16
xor
xchg
dec
clc
or
rcrl
imul
jne
add
cwtl
dec
push
addr16
into
shrl
jns
pusha
movl
pushf
es
adc
push
adc
lock
mov
pop
or
mov
lret
inc
dec
sub
pop
cwtl
fsubs
jae
push
inc
mov
divb
and
fstl
insl
shr
fistps
mov
lret
jle
je
dec
hlt
cltd
inc
dec
arpl
jmp
xor
scas
sub
jge
out
push
push
ljmp
xor
adc
leave
sarb
push
xor
test
or
cmpsl
fldenv
pop
and
mov
setne
pop
test
cmp
pushf
and
cs
push
shl
pop
push
mov
jae
and
and
mov
or
out
iret
mov
js
dec
cmpsl
push
push
aad
shr
lret
inc
mov
lret
incb
push
out
popf
push
mov
jns
loopne
sub
subl
ret
ljmp
or
pop
in
jo
or
sbb
jno
fs
jmp
cmp
add
jae
divl
push
or
pop
in
cmp
outsb
les
sbb
enter
dec
sub
ljmp
sbb
test
cmp
outsl
and
sub
mov
bound
daa
in
rclb
rorw
dec
lcall
sub
aad
fwait
sub
mov
xchg
sub
add
pop
pop
cmc
cli
movsl
push
lret
push
ds
test
int3
dec
mov
subb
dec
jge
dec
insl
xor
adc
ret
rcrl
sarb
stos
and
sbb
xchg
pop
stos
int
fsts
das
outsb
push
push
insb
ret
mov
mov
scas
pop
stos
or
shlb
sub
bound
iret
sbb
fistpl
mov
or
and
jno
imul
pop
dec
jl
jle
mov
push
divb
loope
sbb
addr16
fs
mov
rcl
pop
mov
jae
adc
xor
add
jne
hlt
pop
gs
mov
mov
repnz
ja
call
xor
fwait
jbe
and
xchg
xor
jns
daa
sub
pop
xor
rcrb
push
cmp
mov
xor
nop
loope
push
jns
adc
scas
gs
mov
push
sbb
mov
and
fcmove
scas
xor
add
jecxz
mov
pop
fwait
push
aam
jae
or
sub
lret
mov
insl
jo
jne
out
push
repnz
and
push
cwtl
push
addl
outsb
dec
aas
push
adc
mov
rclb
add
sti
dec
out
loopne
adc
jge
xchg
inc
and
insb
pop
pop
js
shll
in
cmp
and
sahf
jp
inc
pop
pop
xchg
out
repnz
inc
inc
data16
out
jno
mov
cld
ja
jecxz
je
mov
xchg
call
shlb
and
mov
cmpsb
sbb
scas
pushf
pop
test
mov
call
clc
ja
pop
and
es
push
sbb
mov
pop
jae
cmpsb
pop
and
jnp
cs
jge
adc
jae
out
add
cs
push
scas
push
repz
sar
sub
fwait
push
pusha
out
mov
pop
pop
loopne
addb
sbb
jl
xchg
or
sub
lock
sbb
mov
test
xchg
repnz
jae
addr16
pop
mov
in
or
loop
fiadds
loope
sti
fwait
xchg
xor
push
cmp
shll
and
stc
and
loope
mov
sub
cli
sub
cmp
js
dec
push
dec
mov
out
sub
xor
cld
lock
and
stos
jl
mov
mov
push
loop
stc
je
imul
repz
and
xchg
into
push
stc
sbb
scas
mov
cmc
scas
lods
sbb
data16
mov
std
addr16
dec
aas
push
dec
lds
push
in
in
imul
cmp
cld
adc
mov
loopne
push
xor
popf
insl
scas
jecxz
cltd
mov
add
add
push
movsb
stos
jle
ja
push
pop
add
and
sbb
jae
enter
imulb
imul
cmpsb
in
cltd
mov
aas
sub
stos
or
stos
frstor
jmp
add
imulb
leave
pop
std
pop
lods
inc
stc
stos
pop
or
repz
xchg
clc
mov
mov
push
addr16
fwait
mov
jnp
inc
insb
jnp
cmpsb
das
ds
fstp
and
add
inc
mov
les
pop
xor
call
xor
test
in
xor
adc
xor
adc
dec
xor
stos
jp
xchg
add
sbb
lret
mov
xor
mov
pop
mov
cmpsl
test
sahf
push
push
jnp
hlt
xchg
mov
ret
mov
and
or
inc
call
sahf
adc
mov
xchg
fwait
dec
montmul
cmpsb
ret
icebp
jge
rcll
or
pop
jbe,pt
aam
sbb
push
mov
enter
aas
fimuls
ss
adc
mov
sti
les
sbb
mov
test
out
out
pop
pop
jecxz
aad
mov
or
out
jge
ficompl
and
mov
inc
push
out
std
pushf
xchg
cld
hlt
cwtl
decb
mov
sahf
addb
lods
test
movsl
or
shlb
pop
sbb
mov
dec
insl
jbe
push
insb
pop
int
ljmp
insl
insl
lods
and
nop
jo
cltd
sbb
insb
iret
xor
subb
mov
mov
mov
test
fsubl
pop
mov
mov
jnp
cmp
das
scas
aad
mov
jmp
js
sti
jae
or
inc
jle
cs
dec
dec
aam
aad
pop
inc
loop
dec
pop
inc
dec
mov
shll
push
lods
das
repnz
jb
push
es
mov
jl
fcmovu
mov
mov
xor
xor
aam
jne
mov
idivb
jl
addr16
lods
xor
insl
lret
dec
push
xchg
dec
mov
je
pop
jbe
dec
fadd
lods
lahf
mov
or
inc
daa
int
jmp
and
std
lods
add
test
iret
iret
pushf
mov
sub
mov
and
push
mov
inc
rcl
lret
add
fnsave
js
push
cs
xchg
divb
add
dec
jae
cmp
mov
mov
std
or
cmp
sarb
xchg
and
iret
push
loope
icebp
push
cmpsl
mov
pop
push
inc
inc
pop
scas
daa
cli
jo
push
pop
xlat
xor
jecxz
and
lahf
and
pop
cmpsl
jmp
xchg
jecxz
mov
cmpsb
mov
rcrb
inc
daa
sbb
sbb
or
std
add
pop
sahf
outsb
ret
push
leave
shll
pop
daa
sub
adc
repnz
inc
call
popf
sti
bound
movsl
jns
pop
dec
mov
push
arpl
les
lods
jmp
outsl
mov
fisubl
ds
iret
cli
sbb
fwait
out
or
test
xchg
dec
jge
or
mov
inc
push
frstor
cwtl
mov
pop
push
sub
add
aaa
call
inc
add
cmp
pusha
aas
lahf
test
cmp
sub
insb
movsl
aad
sub
push
lods
sarl
divl
add
or
lds
xor
fcos
and
cmpsb
out
inc
shr
fsubp
rcll
push
pop
dec
cld
test
push
fmulp
lock
mov
sbb
shrb
lock
andb
mov
xchg
test
adc
adc
push
cli
sub
sub
push
adc
out
shlb
repnz
nop
rcll
dec
xchg
aaa
sub
fwait
sbb
jns
popa
sbb
xchg
ret
add
dec
mov
loop
push
sub
xor
push
jle
ficoml
xor
out
mov
adc
nop
sti
jmp
mov
cld
add
out
adc
add
int
lahf
sub
stc
fisttpl
lcall
fildll
adc
mov
lahf
call
aam
in
dec
aas
cs
std
sub
sbb
ss
pushf
or
popf
ds
adc
lds
lock
jp
in
iret
adc
ret
mov
adc
pusha
aam
adc
mov
add
out
clc
sub
nop
jns
arpl
fildl
sahf
rcll
sub
arpl
jge
push
enter
test
test
mov
sbb
loopne
shr
mov
je
add
dec
test
cs
pop
sbb
inc
stos
push
dec
xor
repz
push
mov
scas
xchg
lea
icebp
in
or
xlat
rcl
pop
in
loopne
jge
cltd
fisttpll
xor
fwait
cwtl
nop
cltd
inc
sahf
pop
cmp
hlt
in
ss
push
xor
cmp
pop
mov
xchg
inc
and
bound
in
es
iret
mov
clc
sub
mov
les
add
mov
xlat
pop
cmp
jb
fisubs
loop
shlb
insl
lods
movsl
sbb
mov
push
pop
aam
cltd
aad
call
rorl
ja
insl
ja
shlb
push
andl
jmp
sbb
mov
sahf
mov
in
ret
imul
pop
cmpsl
or
pop
aam
xchg
dec
dec
pop
jnp
pushl
scas
push
aam
lahf
xor
jl
jo
sub
pop
iret
test
das
or
or
mov
sub
cli
ret
mov
pop
sub
rclb
std
dec
pop
rcrl
inc
and
sti
push
stos
jle
shlb
jae
pusha
into
ret
fisttpll
aam
js
inc
xchg
pop
adc
add
dec
add
outsb
fcmovnu
popf
push
or
int
and
int3
loope
and
mov
mov
inc
cmpsl
mov
cltd
stc
sub
push
pusha
ficoms
cli
cld
inc
add
push
fidivrs
jle
and
mov
aad
push
push
sub
pop
adc
out
lret
push
and
inc
mov
arpl
push
aam
push
and
mov
dec
and
std
xchg
dec
jmp
iret
loopne
insl
mov
pushf
cld
sti
js
fstpt
lret
xor
mov
mov
popa
jmp
mov
mov
nop
sbb
push
sub
jecxz
fldl
lret
mov
les
mov
sarb
rcrl
pop
sbb
arpl
scas
jae
call
test
insb
iret
xor
cwtl
mov
push
sub
ja
in
punpcklwd
and
mov
leave
stos
cmc
fsubr
mov
push
adc
push
fdivl
aad
shlb
movsb
jbe
xchg
test
mov
mov
jno
fstpl
xor
fstpt
add
insl
ljmp
fsubl
push
mov
mov
mov
pop
mov
inc
cli
push
das
in
pop
push
scas
mulb
xchg
rcr
nop
icebp
add
xlat
inc
pushf
add
and
sti
outsb
adc
mov
imul
or
add
shlb
pop
repnz
arpl
filds
push
inc
gs
jle
in
jp
push
inc
das
sub
sub
adc
inc
ja
xchg
jmp
mov
jnp
outsb
inc
jecxz
std
pop
leave
int3
into
dec
xchg
mov
adc
xor
or
adc
icebp
sub
idivb
fadds
jle
mov
xor
stos
mov
sub
insl
cld
dec
cli
push
or
cmp
pop
add
mov
cmp
or
test
ljmp
fisttpl
dec
fsubl
push
fucomp
push
jle
jbe
ret
fisubrl
fcoms
aas
aad
ret
test
mov
or
rol
and
jl
loope
mov
push
out
inc
bound
loopne
ror
jbe
jl
jnp
jp
push
add
push
xor
aam
es
mov
fdivl
mov
push
and
or
daa
sub
fbld
aad
cwtl
xor
inc
sub
push
pusha
movsb
scas
add
outsl
push
scas
insl
sbb
sub
lods
rcrb
outsb
pop
cld
sub
nop
lds
loop
add
dec
or
fbstp
push
pop
mov
call
jmp
sbb
cmp
xchg
cmpsl
adc
xlat
mov
and
push
aam
mov
pushf
mov
add
pop
or
push
fdivrs
inc
mov
rorb
testl
jb
popf
ss
lcall
das
add
movl
sub
popa
ret
js
shll
xadd
jg
lea
icebp
mov
aam
idivb
mov
pop
and
and
stc
aad
push
test
and
insl
push
add
push
pusha
test
jo
mov
mov
dec
mov
lcall
test
shlb
xchg
clc
pop
mov
sahf
jge
mov
stos
cmp
mov
outsl
jge
push
adc
test
pop
push
loopne
sti
xlat
and
or
lods
pop
cmp
sbb
fcompl
adc
adc
lods
mov
in
cwtl
stc
mov
inc
dec
iret
push
lret
ds
fs
inc
cmpsl
mov
sahf
xor
sbb
popf
mov
cmc
iret
jle
add
xchg
bound
dec
jo
jle
lcall
mov
scas
lahf
ret
loop
ja
and
push
fs
int3
mov
dec
lock
lock
stos
push
sahf
push
cmpsb
loopne
and
outsl
sbb
or
adc
sub
ss
mov
and
pop
push
loope
xchg
nop
mov
ficoml
cmc
and
jp
test
arpl
movsl
xor
and
jmp
outsl
xchg
insl
add
dec
sbb
dec
dec
test
insl
in
mov
xchg
pushf
fs
gs
pusha
data16
inc
sub
cwtl
push
sbb
mov
jp
lock
popf
test
fwait
scas
xor
mov
out
xchg
dec
adc
jno
push
push
dec
xlat
out
inc
outsb
inc
xchg
inc
xor
jp
dec
pop
repz
dec
loop
test
sbb
in
out
sbb
push
cmpl
jp
jb
fmulp
mov
ffreep
jmp
into
push
fsubs
jp
gs
jle
ret
cld
cmp
cmp
push
cmp
push
jo
aaa
jb
or
pop
mov
cmp
cli
test
mov
adc
push
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
call
or
adc
xor
mov
xor
or
sub
xor
xorl
xor
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
jmp
push
shl
dec
jne
sub
lods
repz
cmpb
adc
push
fbld
push
jno
adc
in
sub
xor
popa
ja
daa
in
mov
and
cmc
aaa
mov
or
cwtl
xchg
mov
aas
incb
sub
jmp
leave
cmpsl
pop
movsl
nop
popf
pop
mov
sbb
add
and
lahf
xor
push
mov
sbb
arpl
pop
push
fwait
and
lahf
adc
pushf
pop
neg
cwtl
or
in
imul
rcrb
por
sahf
lds
or
cltd
jbe
insb
cmp
jo
out
ja
lcall
out
repz
mov
or
test
jge
push
lcall
addr16
mov
out
lret
mov
pop
or
test
mov
cmovnp
or
dec
fstpl
cwtl
lea
and
mov
stos
daa
mov
xorb
jae
mov
add
jo
mov
or
adc
xchg
mov
negl
inc
inc
push
sbb
icebp
fidivrl
cmpb
sbb
rcr
jb
mov
cmpsb
and
adc
js
loopne
test
frstor
xchg
cmpsl
js
popf
push
jno
cmpsl
xor
or
push
hlt
pop
pop
sub
dec
stos
sbb
jg
loopne
sbb
xor
shll
loop
nop
or
and
inc
cs
fwait
add
lea
xlat
lret
sub
into
enter
dec
mov
push
out
and
add
xchg
push
call
and
lret
fistpll
and
mov
sar
fadd
mov
push
insl
mov
aam
out
test
daa
fnsetpm(287
in
ja
ficompl
jo
or
nop
push
adc
outsl
jge
loop
fdivrs
ret
mov
fcomps
repz
popf
mov
push
jo
arpl
sbb
push
repnz
inc
fisttpll
les
jl
scas
adc
sbb
jb
ret
in
add
bnd
orb
andl
test
out
enter
fsubr
or
xchg
mov
cli
mov
and
mov
pop
out
aaa
cmp
add
push
jge
out
ja
in
push
adc
daa
xor
sbb
adc
in
pop
mov
push
loopne
and
cwtl
int
fisttpll
clc
inc
stc
in
mov
iret
jmp
mov
sbbb
push
fstpt
pop
xchg
jle
into
add
es
lds
insl
rep
push
in
popa
mov
pop
dec
mov
xchg
dec
ja
pop
lods
jge
jo
dec
orl
jl
add
mov
out
movsb
inc
pop
xchg
pop
js
lods
lcall
lcall
xchg
out
popa
sti
stos
inc
push
leave
xchg
roll
ds
mov
add
adc
and
test
into
mov
hlt
fadds
cmp
mov
add
test
dec
mov
mov
in
lea
xchg
lcallw
dec
push
rcrl
push
adc
push
nop
inc
dec
sub
pushf
or
fsubrp
fwait
inc
xchg
inc
or
les
lea
sub
mov
cmp
movsb
inc
pop
mov
pop
mov
push
and
negl
mov
aam
pop
lds
xchg
and
adc
test
subl
mov
test
call
xchg
dec
mov
fucomip
test
fstpl
sub
xchg
lcall
jne
sub
pop
daa
and
out
loop
mov
ret
loop
xchg
push
nop
jae
cltd
jbe
mov
cmp
pop
mov
icebp
ror
mov
or
aas
test
daa
pop
xchg
lret
mov
enter
out
xchg
and
mov
xchg
jne
ss
xchg
mov
sbb
fcmovb
ljmp
cmc
out
cwtl
test
xor
fs
sub
xorb
jg
mov
dec
loopne
and
adc
test
shrb
mov
dec
dec
loopne
xor
pop
xchg
pop
push
std
arpl
sub
sbb
test
xlat
sbb
add
dec
xchg
out
cmpsb
inc
imul
roll
faddl
sbb
push
ret
arpl
mov
shr
mov
cmp
lods
mov
pop
loope,pn
xchg
inc
mov
adc
addb
dec
out
repz
xorb
dec
insb
cli
xor
dec
bound
mov
mov
pushf
ret
push
cmc
push
ss
or
sbb
call
push
jl
arpl
add
in
insb
fimuls
pop
mov
cmp
cmp
or
scas
xor
or
imul
out
ret
xchg
rorb
cmpl
push
push
cwtl
push
mov
arpl
test
push
shlb
mov
in
add
lock
xchg
inc
lds
xchg
inc
sbb
mov
arpl
mov
lods
push
sub
loopne
inc
jmp
push
in
xor
fisttps
xlat
ljmp
pop
fildll
xor
loop
mov
out
inc
mov
fwait
ljmp
jbe
neg
sub
inc
pop
cld
ret
test
hlt
call
pop
popa
ds
xchg
movsl
cmp
inc
or
cmp
lahf
ret
pop
sub
jb
cmp
mov
or
int3
pushf
repz
cmpl
add
xlat
ret
leave
or
sbb
sub
and
xor
and
xlat
sub
lock
mov
test
sub
push
fwait
les
outsl
jne
xchg
cmp
mov
sbb
inc
push
js
lret
pushf
fs
jge
pop
jo
cltd
imul
and
or
mov
and
and
popf
out
fdivrl
xor
xchg
dec
mov
ljmp
dec
sbb
jbe
push
imul
xchg
sbb
mov
pusha
sbb
inc
add
mov
mov
outsl
insb
sub
shl
pop
ljmp
out
mov
mov
addr16
xor
jge
stc
jge
stc
xchg
sbb
pop
test
or
cmp
jl
add
adc
nop
cmp
add
je
bound
sub
xor
std
into
push
aam
jb
dec
mov
xchg
xor
and
cld
jns
jle
push
rcll
call
outsl
shll
push
xchg
pop
push
shll
xor
xchg
js
loop
lcall
dec
cmp
add
fbld
fildl
iret
xor
roll
and
inc
rorb
fmul
mov
pusha
mov
sbb
push
das
rcr
hlt
aam
std
push
cmp
dec
jae
fwait
dec
push
inc
movsb
ret
mov
pushf
and
test
mov
lods
sbb
jbe
test
psraw
pop
stos
dec
stc
pop
in
xor
mov
lods
or
jge
push
xchg
mov
mov
mov
ret
or
cmc
pop
inc
inc
fimuls
add
sub
mov
jge
mov
xor
push
int3
das
in
aas
mov
inc
mov
shrl
xchg
cmp
fwait
adc
jbe
xchg
push
lahf
jmp
pop
push
mov
andb
fistpll
xchg
iret
push
gs
repz
jns
cmp
pop
xor
dec
sub
sbb
icebp
mull
xchg
cmc
data16
fnstsw
test
mov
pop
outsb
dec
cmp
pop
subl
jg
enter
xchg
mov
lock
daa
jns
js
andb
iret
or
sti
push
and
push
xchg
sbb
or
aad
xchg
inc
sub
shlb
inc
cltd
int
mov
outsb
add
dec
stos
loopne
sub
shlb
popa
inc
popf
sub
shrb
mov
call
adc
add
pusha
sub
push
mov
jmp
adc
inc
sbb
mov
arpl
push
aas
dec
out
pop
jns
xor
aaa
jg
or
test
loopne
sub
mov
mov
movsl
mov
lods
sub
sub
jp
cld
pop
test
jecxz
movsl
push
ds
mov
loopne
shll
push
cs
lds
mov
out
lcall
fsubrs
pop
test
mov
sbb
push
ds
jbe
mov
fadd
dec
sbb
mov
out
mov
pop
fadd
inc
ja
je
mov
test
shl
xchg
data16
mov
jb
out
shlb
dec
fldl2e
push
sub
nop
stc
cmp
lods
loope
mov
sbb
loop
push
daa
fsubrs
jae
test
popf
pop
mov
das
mov
rcrl
repz
pop
rorb
lock
lea
xor
jns
hlt
je
mov
xchg
pop
fnstenv
jp
stos
mov
mov
fsubrs
xchg
jne
daa
add
es
or
or
jne
int
push
adcb
xlat
jmp
stos
pop
sbb
jo
iret
fiaddl
int3
and
adc
data16
ret
pop
and
or
jg
sub
cmp
mov
lret
popf
aad
add
int
shll
jne
divb
cmp
pop
stos
ja
icebp
rolb
jmp
jmp
push
jo
fsubl
sbb
mull
mov
cmp
jmp
pop
xchg
mov
add
movsb
aas
jb
call
fcomps
xchg
imul
jne
test
lcall
mov
addr16
jb
outsl
stos
mov
nop
mov
int3
cmp
inc
ljmp
sbb
jecxz
movsb
dec
sti
adc
push
mov
adc
subb
add
adc
cmp
xor
call
stos
jle
je
mov
mov
rorl
out
movsl
xor
sbb
add
dec
xchg
ret
out
gs
cmp
js
insb
in
out
lcall
adc
testl
jmp
sbb
pushf
sub
adc
cmpsb
and
mov
and
sub
dec
push
xchg
sub
dec
xchg
xchg
sub
inc
adc
loop
aad
cld
imul
and
pop
mov
call
fisubs
inc
and
testl
sub
mov
or
and
inc
adc
clc
xor
mov
mov
add
repnz
call
loopne
add
xchg
mov
dec
mov
cmp
xchg
and
and
jmp
mov
inc
lcall
js
int3
repz
add
mov
lock
outsb
dec
cs
adcl
outsb
ljmp
popf
jecxz
cmc
das
addr16
lods
sub
push
mov
dec
add
xchg
mov
dec
fildl
push
mov
pop
fidivl
mov
mov
mov
dec
test
sub
xor
cmc
xorl
cld
jne
cmp
pop
outsl
int3
cli
int3
jne
scas
mov
jns
in
fnstcw
mov
fwait
and
in
shlb
out
jp
xchg
add
imul
push
sarb
push
or
sub
push
mov
aam
iret
add
cmpb
cwtl
mov
movsb
test
mov
sbb
prefetchwt1
or
mov
fimull
int
insb
test
or
ret
fwait
in
cmpsb
negl
mov
pop
mov
fidivrs
sub
xchg
sahf
xor
fs
sbb
mov
outsb
mov
stos
jns
call
fadds
jb
inc
ss
fistpll
inc
mov
fisubrl
stc
neg
cmpsb
in
iret
mov
orl
xchg
xchg
dec
cmp
or
enter
xchg
pop
xlat
stos
lret
std
fs
pop
sub
push
popf
int3
mov
add
mov
pop
xchg
rorb
mov
cmpsl
je
sub
rclb
dec
sub
mov
dec
inc
pop
xor
xchg
xor
or
pusha
pop
sub
test
sbb
dec
and
loope
jp
ret
mov
adc
and
dec
lahf
cwtl
pop
adc
push
jg
jmp
mov
xlat
cmp
sub
jne
inc
loop
shlb
lret
push
inc
adc
inc
mov
movsb
add
add
cmp
adc
mov
aas
mov
outsl
cmp
xchg
xor
sbb
js
sub
or
mov
leave
loop
fs
pop
and
adc
jp
mov
adc
outsl
cmp
xchg
aam
add
cmpsb
or
addr16
mov
sbb
ljmp
jne
cmc
in
jb
pop
in
loop
cmpsb
call
clc
loopne
loopne
mov
mov
sbb
and
jno
xchg
faddp
add
sbb
xor
cmc
arpl
and
movsb
jp
call
addr16
inc
xorb
push
mov
mov
add
out
and
jmp
xor
add
mov
push
pop
sbb
mov
sbbl
cli
imul
sbb
cmp
cltd
and
out
push
popa
cmpsb
adc
or
movsl
inc
sub
scas
rclb
test
lcall
fwait
outsl
xor
sahf
popf
push
or
stos
xchg
push
ffree
add
cmp
icebp
lret
ds
fcoms
pop
inc
gs
push
in
aad
inc
movsl
xchg
testb
ja
add
jo
inc
mov
jns
int3
ret
stos
testl
jmp
or
dec
xchg
fnsave
lods
lret
lret
iret
xor
fisubrl
or
xorb
mov
int3
adc
mov
daa
mov
gs
dec
lds
jge
mov
sub
jge
sti
or
mov
inc
mov
rcrb
xor
pop
or
dec
pop
ret
lret
les
inc
add
ljmp
mov
rcrb
inc
lea
cmp
insb
pop
sub
xor
push
pop
iret
push
rcl
mov
insb
es
lahf
gs
jl
ss
push
inc
pop
icebp
jmp
scas
jp
test
dec
and
mov
and
fstp
sbb
ret
fistpl
js
inc
loope
sbb
sahf
dec
cld
xchg
insl
push
sub
stos
subl
loopne
xor
and
hlt
jnp
movsb
mov
inc
lds
lods
pop
and
and
jb
cmpsb
cltd
in
int3
imul
pusha
xchg
sets
xchg
dec
inc
push
jns
jg
scas
jl
in
jb
sub
aad
pop
inc
clc
jecxz
cwtl
pop
push
jae
stc
and
add
jae
movsl
js
imul
sub
sub
gs
gs
or
popa
enter
jl
cmpsb
in
fstps
sahf
adc
inc
and
and
or
cmpsl
dec
cmp
nop
adc
les
stos
sub
xor
sbb
jp
rcrl
inc
imul
push
add
sbb
hlt
lock
or
fistpll
dec
add
and
pop
pop
or
mov
ja
pop
push
xor
cmp
sub
iret
pop
in
enter
push
mov
repnz
sub
clc
xlat
cwtl
aad
and
repz
movsl
push
sub
repz
std
and
mov
adc
lcall
bound
add
jle,pt
cs
dec
decb
sub
outsb
jg
aad
xor
xor
push
xlat
mov
in
sbb
rcrl
pop
jge
mov
flds
mov
testb
xor
lahf
mov
or
cmpsl
lds
cmpsl
cltd
imul
ror
mov
stos
pop
lret
mov
xorl
mov
push
orb
or
xor
lods
mov
rorb
ret
inc
push
testl
mov
inc
std
xchg
and
adc
ja
mov
ret
ret
movsl
mov
inc
sbb
jne
sbb
cmp
test
xor
xchg
cmp
int3
xchg
pop
fcmovnu
lods
xor
enter
push
cmc
sub
testb
loop
pusha
sti
mov
je
dec
xchg
shll
bound
nop
push
das
mov
and
sbb
int3
in
aam
jo
jo
cmp
jl
adc
int3
jp
imul
jnp
push
push
imul
sarb
cmp
testb
xor
ljmp
hlt
pop
mov
insb
or
xchg
loop
stos
push
loope
xchg
push
inc
push
adc
fnclex
shld
stos
cmp
mov
loopne
and
add
add
insb
mov
sbb
push
mov
push
or
jl
ret
jmp
mov
test
mov
push
pushf
inc
mov
inc
mov
fcmovnb
dec
xlat
cmp
pop
sti
lock
dec
pop
pusha
bound
mov
push
xor
mov
das
sbb
push
sub
int
repnz
fsubs
cmp
cltd
xor
fs
cmp
jns
stos
fbld
fisubrs
push
sbb
rclb
mov
cmc
mov
lea
xor
fwait
sbb
rcr
mov
stos
insl
jle
mov
ret
into
push
int3
enter
pop
push
jns
scas
out
in
xchg
shrb
pop
push
sahf
push
fs
push
clc
lods
mov
mov
in
sbb
iret
aam
in
stos
icebp
sub
xor
sbb
mov
ss
add
js
outsb
pop
adc
jb
jb
les
std
push
dec
mov
stc
enter
push
adc
pop
sbb
inc
xchg
scas
daa
lea
ss
push
inc
sbb
test
imul
stc
sub
clc
mov
movb
push
pop
xchg
nop
cmpsl
xchg
xlat
pusha
iret
sahf
seto
fs
adc
cld
or
cmpb
xor
pushl
mov
mov
outsl
pop
and
push
pop
inc
cld
add
rorb
pusha
movsbl
xchg
jne
xor
sbb
inc
sub
int3
cmpsb
cmp
jnp
sub
pop
adc
push
push
sub
mov
pop
xor
ljmp
adcl
mov
add
mov
jle
inc
repnz
lds
fidivrl
adc
jo
outsb
xchg
jo
sbb
xchg
dec
sarl
push
fcmovne
pop
int3
add
fs
xchg
das
push
es
int
inc
and
jge
pop
fs
jge
xor
xchg
and
push
cmp
movsb
cmpsl
and
cmp
xlat
lcall
addr16
adc
mov
call
mov
jae
push
inc
pusha
mov
jg
and
imul
adc
stos
addr16
sahf
jne
jnp
add
cmp
mov
ja
hlt
push
repz
xchg
dec
adc
mov
xor
in
mov
pop
inc
hlt
fstps
insb
loop
mov
out
mov
stc
pop
sahf
mov
push
push
lds
dec
push
cmp
push
add
in
jmp
es
dec
das
mov
sbb
push
mov
or
xchg
mov
repz
fiaddl
ror
pop
repz
inc
push
add
xor
mov
add
mov
ret
addl
mov
adc
test
mov
arpl
cmp
scas
in
push
icebp
les
xchg
fldcw
dec
mov
aam
pusha
shlb
sub
dec
cmp
cld
idivl
leave
mov
test
cmc
lret
bound
icebp
jno
mov
lea
xor
pop
lock
stc
clc
jge
push
out
adc
mov
gs
pop
gs
cmpl
test
mov
jg
and
mov
std
dec
int
inc
fwait
xor
repnz
js
lods
test
mov
repnz
outsl
pop
popf
push
std
ds
push
pop
scas
jl
jmp
jno
lahf
or
in
sbb
adc
mov
lcall
into
andb
in
sub
jns
enter
jge
sub
sbb
cwtl
shl
test
mov
mov
lds
xlat
gs
sbb
loop
sub
inc
or
lahf
lods
int3
cwtl
xchg
and
insl
or
icebp
jecxz
mov
xacquire
movsb
xlat
xor
xchg
mov
icebp
pop
adc
push
adc
pop
scas
sbb
fwait
imull
mov
es
lret
stos
jno
jmp
dec
push
push
aad
adc
sub
es
clc
adc
push
and
aad
das
sbb
dec
mov
shlb
or
cmpb
out
lahf
mov
out
sahf
shlb
iret
cmp
push
jo
jbe
adc
adcb
adc
outsb
lods
sahf
xchg
inc
je
or
or
push
push
pop
sahf
add
pop
mov
aaa
push
xchg
mov
add
inc
inc
mov
adc
out
xorl
std
fcmovnu
add
int3
adc
jp
push
icebp
lahf
aas
sbb
pop
adc
lds
mov
mov
mov
xor
or
sbb
jmp
fdivs
scas
sti
inc
mov
fwait
pop
divl
lret
pop
pop
mov
xchg
arpl
lods
xor
adc
test
fcmovnb
xor
mov
inc
push
data16
xlat
adc
sbb
cmp
pusha
les
add
je
pop
mov
data16
int3
loop
repnz
cltd
jp
add
push
cvtps2pi
insb
jg
pusha
in
mov
push
add
jecxz
sbb
in
shrb
out
repz
inc
int
mov
fstl
mov
sbb
jp
and
sbb
pop
or
jg
cld
jecxz,pt
filds
scas
push
imul
mov
push
daa
roll
rclb
add
mov
jne
cmpps
push
push
rcrb
add
add
jo
mov
aaa
nop
jne
cmp
mov
ds
sbb
inc
dec
push
mov
out
inc
mov
mov
fnsave
mov
xchg
adc
test
push
aaa
movsb
popf
dec
fwait
std
dec
mov
push
iret
lret
xchg
push
lods
popl
scas
in
enter
rorb
int
jle
cmpsl
orb
adc
js
pop
in
sbb
sub
aaa
dec
push
mov
scas
dec
shlb
adc
inc
and
jo
and
insb
mull
mov
or
mov
lcall
push
je
mov
push
jae
xchg
and
sbb
adc
jp
push
pushl
cmp
rcrb
aam
cli
xlat
insb
andb
xchg
fimull
icebp
and
pop
loopne
adc
inc
es
mov
and
or
cmp
dec
inc
pop
fwait
push
call
adc
pusha
add
mov
movsb
mov
pop
adc
xor
cmp
cmp
mov
arpl
cld
mov
inc
lds
cli
add
dec
xor
mov
mov
sbbl
jb
aam
mov
xchg
lcall
in
lea
inc
push
cmp
pop
mov
insl
push
xchg
inc
out
mov
xorl
add
jp
mov
mov
push
outsl
push
and
mov
pop
pop
in
xchg
mov
aas
scas
add
add
mov
ds
xchg
leave
sub
inc
inc
repnz
clc
cld
ds
mov
dec
jae
dec
push
lods
fdivl
jnp
dec
fucomip
fists
and
xchg
fcompl
xlat
enter
mov
jg
loop
xor
mov
push
cmp
dec
repz
fmuls
inc
add
cmp
outsb
pop
inc
sub
clc
loop
pop
inc
cwtl
cwtl
js
les
mov
addr16
pop
lret
fnstsw
mov
mov
inc
movsl
test
mov
adc
jnp
push
popf
inc
cltd
stos
cmp
pop
mov
inc
jnp
lcall
sbb
cli
xchg
rcrl
mov
shlb
jne
mov
push
xchg
ret
jg
jb
iret
fldt
fldcw
shll
add
fs
ret
aas
shlb
sbb
xchg
cmp
popf
nop
daa
sbb
add
jo
push
fwait
test
xchg
or
mov
les
mov
xlat
test
hlt
aaa
cltd
inc
dec
add
jl
xor
xchg
loopne
shl
jo
pop
adc
fwait
repnz
pusha
hlt
test
repz
xor
out
dec
xchg
lods
add
push
enter
bound
inc
rcrl
pusha
arpl
fs
xchg
in
inc
fs
leave
mov
mov
push
sbb
cwtl
push
mov
mov
scas
ljmp
and
fs
sub
mov
mov
loope
int
fsubrs
dec
call
jge
inc
and
jno
arpl
call
call
stos
and
test
cltd
add
imul
push
lret
je
fiaddl
sbb
add
mov
xchg
pop
jecxz
jne
in
xchg
inc
jb
and
sub
mov
out
lcall
sub
dec
add
or
andb
hlt
popf
push
push
lret
lock
stos
cmc
lock
xchg
int3
hlt
sub
in
lds
fdivrs
popa
sbb
scas
xor
cs
add
lods
push
add
rclb
rcll
adc
add
mov
cmp
sub
addl
xchg
jb
sub
aad
cltd
push
adcl
mov
lock
or
jge
cmp
push
and
out
sub
loopne
push
iret
inc
loop
imul
xchg
mov
jne
pop
dec
sub
push
daa
sbb
cmp
xor
xchg
mov
stos
outsb
bound
pushf
xor
int
aam
jbe
jne
jp
repnz
insb
or
lock
daa
movsb
mov
shlb
out
xchg
inc
aas
cmc
push
lcall
aaa
xchg
or
incb
fistps
push
jae
sbb
and
jge
mov
pop
xchg
sti
lahf
jecxz
lahf
and
push
jnp
cmp
data16
into
xor
mov
adc
subl
or
xchg
stos
xor
jne
shll
jns
ja
dec
xchg
std
ret
sbb
cmpb
and
jnp
fbstp
arpl
push
mov
test
lock
ret
push
sti
sbb
push
lock
dec
or
es
mov
je
and
je
leave
das
push
jb
cwtl
fadds
sbb
fistps
rclb
pop
into
outsl
xor
mov
sub
call
mov
inc
clc
fadd
scas
ljmp
or
add
pop
or
jmp
mov
lcall
mov
in
fidivl
cmp
sbb
dec
pop
test
fdivrs
shlb
test
or
sti
fidivrs
add
sbb
into
pop
insb
ja
add
enter
sub
pusha
int
lea
dec
cmc
jecxz
lock
loope
sbb
shlb
sub
pop
sub
mov
mov
iret
xor
xchg
push
loopne
iret
cmp
mov
mov
or
bound
sbb
popa
fsts
stos
scas
scas
adc
and
mov
sub
add
lods
sbb
lods
mov
into
stos
ret
insl
sub
add
lcall
dec
loop
aam
daa
lock
in
mov
jmp
push
and
fstpt
mov
jae
es
jmp
aaa
in
mov
orb
stc
cmp
cmp
jp
call
mov
addr16
sahf
daa
mov
mov
add
jl
or
xchg
jb
std
lds
mov
stos
cmp
add
pop
loope
pop
enter
xchg
inc
jb
dec
ja
in
lds
imul
scas
shll
xlat
shr
jle
cld
sub
lea
cltd
push
mov
aad
jle
into
shlb
mov
mov
int
std
push
jno
dec
mov
adc
add
pop
call
popf
arpl
add
and
xchg
shl
sahf
jp
mov
or
stos
nop
pop
shlb
div
and
sub
adc
xchg
pop
mov
pop
cmp
lods
sub
stos
pop
outsb
outsb
dec
aaa
inc
cli
mov
rcr
popf
pop
lods
out
shrb
xchg
insl
inc
js
aam
adc
pop
jno
sbb
push
jmp
xchg
pop
loopne
loopne
sbb
xchg
mov
popa
push
inc
jmp
aaa
scas
jle
insl
dec
dec
mov
cmp
push
xor
cmpsl
out
and
movsb
mov
popa
stos
sub
roll
outsl
ljmp
enter
mov
clc
add
clc
ss
push
orb
jb
mov
dec
adc
fisubrs
sar
cmpb
pop
inc
frstor
pop
xchg
into
jb
lds
mov
and
xchg
mov
stc
mov
into
jnp
ljmp
test
shrb
and
jmp
jbe
cwtl
xor
pop
mov
mov
dec
push
fs
fs
sbbb
sub
int3
and
dec
inc
insb
sbb
xchg
cmc
mov
pop
or
or
adc
mov
jns
mov
mov
jae
xor
stc
and
add
fstpt
mov
adc
pop
adc
rol
pop
fists
push
data16
std
mov
rclb
sub
popa
or
mov
std
lcall
mov
or
pop
mov
flds
mov
pop
fdivl
jecxz
pop
decl
aas
mov
mov
ds
jo
sbb
or
jle
jmp
aaa
in
loop
xchg
jmp
stos
jge
cs
xchg
loope
into
in
insb
or
mov
stos
cwtl
cmpsb
imul
cld
outsb
mov
popa
repnz
pop
inc
imul
das
hlt
flds
adc
mov
cmpl
sub
repz
aas
mov
jmp
adc
add
add
inc
xor
mov
in
mov
jbe
in
rorl
jmp
push
jg
cld
daa
mov
jg
fidivrl
sbb
cmp
mov
fcoms
jmp
lds
pop
or
mov
mov
jmp
sub
loop
or
dec
fldcw
daa
lcall
xor
jmp
mov
jmp
int3
repz
jnp
xchg
push
jo
dec
sub
and
test
pop
adc
mov
add
ljmp
add
lea
cmp
fdivrs
pop
jnp
cmp
into
cmp
dec
sbb
je
push
xor
cmpsb
sbb
les
lods
mov
inc
cmpsl
adc
dec
or
jno
inc
subl
lret
in
add
ljmp
adcl
cmp
jp
mov
pusha
orb
pop
pop
cmp
mov
push
push
rcr
lds
orl
leave
iret
sbb
pop
sbb
jmp
scas
outsl
jb
cmp
mov
push
sahf
xchg
inc
lods
push
popf
in
ljmp
cmp
call
mov
jge
cltd
iret
movsb
pop
xchg
clc
bound
nop
sbb
aam
push
mov
sahf
jl
xchg
mov
imul
inc
jb
in
jne
pop
scas
push
int
testl
cmp
adc
pop
adc
movsb
xorl
inc
dec
mov
sbb
jle
sub
cmpsl
ret
daa
sbb
jle
sub
jb
sub
mov
lds
hlt
add
icebp
in
sbb
lea
insl
negl
inc
sub
sub
cmp
xchg
mov
pop
push
hlt
mov
fisubrs
and
pop
stc
in
pop
arpl
inc
insl
pop
xchg
repz
sub
dec
jp
adc
adc
mov
pop
pop
jo
test
jmp
stos
std
sbb
cmp
repnz
inc
or
shll
sti
and
pop
fldl
cmp
bound
cwtl
cmp
ljmp
loope
add
imul
push
dec
adc
dec
pop
push
jle
outsl
data16
mov
mov
jp
xchg
and
mov
inc
adc
scas
jl
into
push
or
push
xor
xor
loopne
jp
push
mov
jl
fwait
mov
insb
stos
addr16
pop
into
mov
dec
shrb
mov
repnz
mov
test
frstor
int
xchg
push
data16
cld
outsb
xor
sub
sbb
bound
nop
je
in
or
mov
push
aas
mov
in
fs
sbb
inc
pop
pop
jae
xchg
sub
push
outsb
imul
mov
or
xor
popa
aaa
test
insl
pop
xchg
outsl
iret
jne
dec
arpl
lods
aam
jns
mov
out
xchg
repz
insb
cmpl
push
inc
xchg
mov
ficomps
mov
xor
xchg
hlt
cmp
hlt
dec
cmp
gs
repnz
mov
das
sub
jae
cmpsl
xor
inc
jg
setp
ja
sbb
cmp
cld
jp
add
mov
sbb
pop
sub
mov
mov
gs
push
or
and
sub
mov
test
and
insb
mov
nop
cmpsl
sbb
adc
jp
pushf
xchg
sti
adc
in
xchg
ljmp
pop
outsb
adc
mov
lret
scas
lods
pop
mov
xlat
inc
push
jnp
hlt
push
mov
fcompl
les
pusha
inc
xchg
inc
adc
and
filds
mov
mov
cltd
ljmp
in
pusha
mov
add
cmpb
ds
sbbl
pop
mov
sbb
in
insb
rcll
pmulhuw
cmpsl
pop
cld
in
jge
mov
popf
or
movsb
sbb
fisubrl
fstpl
push
test
icebp
jbe
pop
xlat
pop
and
pop
rolb
adc
aas
add
pop
movsb
lret
nop
movsl
outsl
add
sbb
test
jbe
iret
sub
adc
xor
pop
push
in
cmp
xchg
sti
lcall
mulb
and
pop
cmp
ds
mov
pop
int
arpl
dec
sub
push
push
mov
sub
or
xorb
and
loopne
icebp
inc
cmpl
sbb
sbb
orl
xchg
sub
pop
es
shll
xor
dec
mov
in
mov
cmp
adc
cmp
int3
mov
push
dec
sub
mov
js
pop
movb
mov
shl
push
inc
ror
pop
fisubrl
dec
leave
or
addr16
or
pusha
testb
mov
mov
mov
adc
dec
mov
movsb
jge
rorb
fs
xchg
adc
pop
push
lock
andb
sbb
outsl
inc
and
sbb
push
js
nop
add
aam
add
subb
xacquire
js
mov
lods
or
pop
jge
sbb
movl
push
cmpsb
xor
or
xor
mov
out
outsl
sbb
adc
jne
test
ret
int
jne
mov
cmp
stos
js
das
and
mov
xor
jb
adc
mov
or
pop
cs
movsb
scas
xor
inc
scas
push
aad
ret
adc
leave
dec
mov
mov
and
aad
cli
outsl
int
js
jbe
and
mov
inc
shlb
scas
pop
mov
adc
dec
sbb
jge
adc
iret
ds
sbb
fcomip
cwtl
jnp
lahf
jno
inc
cmc
out
or
jns
aad
lods
mov
cs
xor
jns
hlt
pop
sbb
xchg
push
pop
jbe
pop
daa
pop
adc
fwait
and
inc
mov
dec
je
leave
rorb
xor
rorb
cltd
js
cmp
xorb
jns
add
and
insl
cs
jg
out
adc
lea
call
add
mov
inc
sbb
xor
xor
mov
sti
subb
mov
into
into
push
lahf
shl
inc
push
pusha
cmc
xor
in
mov
mov
pop
xchg
inc
es
dec
inc
fnstcw
mov
je
xor
pop
sbb
ss
and
jno
mov
sbb
push
pop
jge
data16
and
sbb
adc
and
addr16
inc
pop
dec
fidivrl
push
mov
mov
testb
cld
daa
clc
inc
dec
or
in
lret
cmp
rcrb
jae
ljmp
call
sti
add
cmp
add
and
ret
dec
imul
fistl
inc
test
outsl
sbb
push
repnz
mov
push
lea
xchg
movsl
sahf
ds
shlb
mov
add
sbb
lahf
mov
or
sbb
push
and
adc
ret
out
add
adc
gs
lds
insl
cld
xchg
pop
sub
mov
or
fs
mov
jg
xchg
shl
in
mov
mov
gs
popa
mov
arpl
pop
jo
stos
xor
lods
outsb
jg
scas
rcr
les
jb
stos
dec
sub
cltd
jbe
rclb
pop
movsb
cmp
sti
in
mov
pop
ljmp
sbb
dec
test
mov
lods
sub
int3
test
dec
fwait
jp
adc
mov
push
xchg
push
jecxz
ficomps
repnz
dec
scas
cli
repnz
adc
push
push
std
add
sahf
fstpt
jbe
cwtl
inc
imul
clc
icebp
scas
adc
cltd
mov
sarl
pushf
xchg
cld
push
ror
popa
fcomps
mov
or
es
aas
addb
stos
xchg
mov
dec
movsl
aam
repz
nop
sbb
mov
pop
data16
mov
mov
dec
test
inc
mov
sub
add
insl
dec
xchg
sub
je
inc
sub
lods
dec
int
inc
jge
pop
ffreep
pop
mov
ret
jbe
aam
ret
mov
xchg
cmc
leave
pop
or
divb
or
dec
add
scas
in
call
push
xchg
jle
pop
mov
jecxz
jmp
add
idivb
out
sbb
hlt
add
dec
inc
push
idivb
mov
bound
addr16
jns
mov
stc
leave
pushf
lahf
push
mov
movsb
ret
cmp
sub
xlat
push
in
and
scas
ret
sbb
mov
fwait
icebp
sub
pop
xchg
cld
jne
in
lods
fwait
jmp
mov
add
lahf
push
xor
xchg
bound
fmul
jg
lea
mov
inc
repz
and
negb
notb
mov
test
push
insb
andb
xorb
jg
cmp
or
pop
adc
adc
ljmp
mov
repz
popf
divb
popf
add
add
fcomi
lahf
xor
mov
pop
xchg
sub
cmp
pop
arpl
mov
cmc
icebp
aad
dec
lahf
repz
pop
xor
outsl
daa
rcl
sub
mov
jno
mov
aaa
xchg
aad
je
xor
idiv
sub
cmc
pop
cmp
pop
xor
in
sub
stos
jb
add
repz
fst
pop
or
add
inc
dec
es
jns
xchg
repz
mov
ljmp
push
dec
enter
aaa
vmwrite
pop
shrb
insb
pop
cmpsl
pop
sahf
jno
outsl
daa
inc
movsb
dec
push
std
jmp
and
xchg
ret
aas
sub
aas
ja
incl
ljmp
mov
mov
sub
push
mov
pop
fistpll
mov
es
and
das
cmp
adc
mov
mov
push
aas
imul
movsl
pusha
mov
aaa
sub
lret
inc
shrl
outsb
cmp
insl
test
movl
aad
jbe
in
lock
jmp
cmp
jae
adc
inc
mov
jmp
out
jno
movl
inc
ret
and
aad
int
push
or
dec
hlt
out
shll
imulb
popa
movsl
mov
decb
pop
jl
push
sub
pushf
test
push
into
popf
inc
ss
mov
leave
xchg
pop
mov
push
movsl
sbb
xor
or
xor
mov
lods
out
cmp
pop
mov
scas
push
push
fidivs
push
jecxz
ret
stos
dec
call
mov
xlat
clc
jmp
mov
push
jb
cmp
pushf
inc
inc
mov
jno
repnz
ja
mov
arpl
jne
mov
or
sbb
hlt
pop
jnp
loop
inc
call
mov
inc
cmp
es
hlt
fcoms
and
adc
inc
test
test
push
inc
add
cmpsl
movb
pushf
test
or
ds
xor
push
jo
fists
ret
gs
dec
mov
cmp
or
jae
jmp
loopne
cmp
push
in
push
xor
inc
movsl
and
into
mov
sub
dec
cld
insl
cmp
inc
cld
mov
cmpsb
xor
and
jno
out
pop
call
es
js
data16
sbb
in
into
and
lcall
sub
xchg
hlt
inc
xor
clc
sbb
adc
xor
test
xchg
cmpsb
mov
jl
popa
iret
aam
fbstp
or
inc
arpl
cmpsb
cmp
and
and
and
add
xorb
sbb
aas
push
movsl
dec
inc
idivb
xchg
xor
lcall
andl
je
xor
sbb
push
jp
sub
bound
dec
jnp
hlt
push
fsubp
pop
je
loop
dec
jns
lea
or
mov
pusha
testl
in
inc
loopne
and
mov
out
adc
lock
pushl
pandn
xor
les
icebp
shll
dec
lahf
lret
xlat
cmp
sbb
pop
push
rolb
pop
imul
dec
and
lret
arpl
mov
mov
or
imul
clc
mov
jg
lock
xchg
int
icebp
dec
scas
cmc
cmp
lret
dec
mov
adc
bound
inc
arpl
cmp
fnsave
shrl
je
push
add
pop
sbb
and
adc
or
xchg
dec
mov
popf
cmp
imul
pop
fyl2xp1
out
mov
shll
arpl
jmp
sub
aas
fs
fisubs
enter
fistpl
fsubl
lcall
cmp
lret
push
loope
or
gs
shll
mov
fwait
jecxz
lea
icebp
shl
js
xchg
xchg
push
xor
mov
lahf
mov
mov
mov
and
mov
or
mov
clc
aas
xchg
mov
cltd
mov
enter
movsl
cmp
es
fisubs
pushf
cmpsb
pop
cmc
xchg
xchg
mov
dec
push
pop
push
mov
pop
test
leave
in
sub
xchg
pop
lret
lock
and
cmp
mov
cmp
add
jne
pop
xor
xor
inc
mov
lods
in
fs
mov
lahf
xchg
jns
push
mov
cwtl
push
push
imul
pop
jno
inc
mov
into
add
xor
adc
sti
mov
in
mov
loope
inc
bnd
pop
out
sbb
mov
dec
sbb
out
and
sbb
mov
add
cmpl
neg
out
lahf
fistpll
call
dec
repnz
cld
dec
inc
push
fistpl
test
inc
xor
or
cltd
jmp
mov
cmp
pusha
call
add
xchg
mov
icebp
and
int3
in
jae
loopne
gs
mov
rolb
ds
stos
cli
imul
cmpsl
shll
int
push
jmp
push
test
xor
movsb
xchg
or
sbb
daa
sahf
sbb
test
adc
or
fwait
cmc
mov
xor
adc
push
pop
pop
lret
or
cmp
sub
pushf
outsl
frstor
pop
cmp
mov
ret
jecxz
test
xchg
test
popa
inc
mov
inc
jo
fnstsw
call
outsl
loop
cmp
mov
sub
sti
je
aaa
repz
inc
cmp
shll
nop
xchg
mov
loopne
lret
xlat
sarb
out
push
ret
push
lcall
cmp
or
aaa
cltd
mov
sahf
in
inc
jne
in
adc
and
ret
cwtl
mov
decb
dec
pop
aam
jg
lods
movsl
sub
cwtl
add
bound
mov
push
and
xchg
popa
dec
aaa
mov
sbb
mov
sbb
cli
cmc
sub
fs
inc
xchg
or
jmp
fdecstp
and
xchg
lret
shr
iret
sbb
inc
mov
adc
jb
mov
jnp
pop
cmp
adc
sub
dec
mov
jae
pop
fimull
cmpsl
cmp
mov
push
imul
test
shl
jno
incb
mov
loopne
pop
jo
mov
addr16
lock
pop
ret
sbb
loop
and
pushf
xchg
test
stc
sub
lds
es
add
je
push
cli
pop
jbe
cmp
shrl
outsb
loop
lods
aas
sbb
ja
mov
xchg
or
inc
push
in
sahf
rorb
repz
xchg
pop
or
inc
xchg
outsl
repz
jl
ljmp
pusha
xchg
mov
xor
jnp
test
cmp
loopne
mov
dec
icebp
mov
sub
sub
jne
std
loope
push
push
int3
or
xchg
flds
jge
sbb
or
pop
cmp
or
xchg
psubusb
cmp
mov
mov
dec
popa
js
pop
fsub
mov
insb
mov
pop
shl
jnp
test
stc
mov
cmpl
mov
and
iret
ss
test
inc
rcrl
push
in
outsb
pop
out
xor
aaa
repz
inc
out
in
xor
xchg
or
dec
mov
ret
mov
xlat
fsubrl
out
lahf
cmp
and
jl
push
cmp
aas
outsl
or
lahf
lods
movsb
insl
inc
jl
xchg
insb
stos
xorl
das
sbb
xchg
cwtl
jl
dec
mov
shrl
dec
add
enter
xchg
inc
xlat
loope
mov
sbb
ds
mov
jl
lret
idivb
cli
and
or
aam
xchg
inc
iret
mov
sub
mov
and
cltd
xor
adc
jnp
jmp
dec
out
push
stos
mov
add
rcll
cmpsl
and
add
adc
lahf
dec
dec
cmp
mov
or
iret
xchg
sub
mov
xchg
adc
daa
sub
pop
outsb
cmp
cli
les
mov
pushf
mov
mov
inc
loopne
xor
dec
and
dec
mov
push
sbbl
es
inc
mov
xchg
adc
inc
popf
xlat
test
fs
ljmp
cltd
mov
dec
pop
mov
idiv
mov
int3
int3
xchg
mov
xlat
lea
movsl
cmpsb
dec
cmp
hlt
adc
mov
push
mov
pusha
push
xchg
jecxz
inc
mov
fcompl
sbb
rolb
push
mov
or
pop
out
hlt
add
test
jle
rcl
fcoml
push
js
pushf
fcoml
in
adc
out
cmpb
rclb
adc
addr16
data16
movsb
inc
imul
cmp
mov
test
push
xor
aad
jnp
push
pushf
aas
cmp
popa
inc
in
and
and
insb
xor
push
lods
push
into
xchg
jnp
into
add
and
dec
xor
popa
inc
mov
xchg
scas
pop
dec
or
cwtl
stc
inc
lahf
and
je
repz
cmp
andb
or
cmp
pusha
repz
les
mov
mov
pop
movb
loop
sub
popf
test
sbb
inc
fmuls
gs
add
cmpsl
xchg
xchg
out
aad
lds
mov
xchg
testl
imul
mov
cld
jle
push
pushf
pusha
cmp
test
pop
xorl
mov
jnp
test
loop
stos
imul
push
xchg
jmp
mov
or
inc
pop
or
jae
je
out
mov
test
jb
mov
loope
jmp
xor
int3
dec
insl
mov
mov
addr16
add
dec
inc
add
push
and
inc
sahf
add
xchg
cmp
iret
xchg
mov
fcomi
outsb
mov
ss
dec
filds
jo
pushf
xchg
scas
aad
mov
add
dec
sub
pop
dec
bound
mov
in
xchg
lret
mov
stos
push
sarl
test
fcoml
dec
popa
add
jmp
push
pop
mov
in
pop
mov
and
lods
pop
push
add
add
jbe
aaa
subl
push
pop
mov
lods
stos
fsubrs
mov
pop
scas
test
or
mov
fdivl
adc
cmp
jecxz
adc
mov
enter
jb
decl
pop
push
popf
or
js
sub
sbb
xchg
mov
js
call
pusha
or
inc
inc
mov
dec
les
es
ds
xchg
mov
lcall
cmp
dec
iret
ret
dec
stos
fwait
cmp
pusha
fidivs
dec
fnstsw
cmc
mov
lea
add
or
daa
jecxz
loope
loop
mov
inc
into
repnz
mull
imul
or
movsb
lret
and
pusha
mov
mov
mov
dec
fimull
rcll
jmp
imul
es
dec
adc
mov
mov
add
inc
adc
xchg
std
mov
xlat
push
aaa
xchg
mov
xlat
xchg
popf
adc
mov
xor
imul
jmp
int3
and
mov
pop
xchg
dec
dec
sbb
addr16
jecxz
loop
cli
mov
pop
test
push
sahf
pop
aaa
mov
xchg
xchg
arpl
mov
or
neg
sbb
inc
cmpb
dec
stos
loop
jnp
sbb
sti
sbb
and
movl
xor
scas
js
and
sbb
sub
mov
into
inc
inc
mov
in
popf
mov
in
xchg
pop
pop
outsl
push
test
enter
sub
jle
jo
lcall
repnz
or
jmp
xor
mov
dec
xchg
mov
jnp
mov
divl
in
mov
mov
push
sti
mov
inc
add
arpl
mov
xchg
mov
lea
xor
jbe
nop
cmpsb
scas
hlt
mov
add
arpl
mov
mov
or
shrb
sub
dec
xchg
je
mov
inc
jle
ret
je
enter
sahf
insb
jle
xlat
enter
lea
clc
push
imul
aaa
sbb
clc
xchg
mov
adc
mov
pop
ja
add
pop
mov
xchg
rolb
jge
pop
std
and
sub
inc
test
filds
sarl
mov
cmp
dec
xor
lret
pop
xor
cwtl
repnz
pop
cmpsl
clc
orb
and
sbb
jmp
sbb
cmp
pushf
shrl
add
cltd
clc
aad
xchg
addr16
mov
mov
adc
stc
add
ret
mov
or
inc
loop
sbb
popa
cmc
jge
int3
aas
sub
roll
xor
adc
fmul
loopne
xor
mov
rcrl
cmp
add
push
fsubrs
outsl
add
aad
frstor
dec
mov
push
fisubs
inc
push
push
repz
adc
fists
movb
jle
cmc
push
or
sbb
and
cmc
mov
mov
xlat
int
lods
xchg
dec
mov
ljmp
mov
rcl
out
test
les
jne
loope
inc
nop
adc
mov
add
lock
mov
push
rolb
loop
xchg
test
push
insb
add
popa
or
sti
ljmp
cmp
push
jbe
push
cmp
inc
lcall
aas
cs
adc
loope
push
xchg
mov
scas
pop
clc
fcomps
mulb
and
rcl
mov
and
push
pop
cmp
sbbl
push
inc
ljmp
sub
lret
fcmovbe
flds
in
fwait
ss
push
xchg
aaa
cmp
add
cmp
sub
jmp
push
test
jp
xchg
push
sub
loop
ret
sbb
call
mov
lea
jle
push
pop
jl
xor
cmp
call
adc
lahf
ljmp
cli
cmp
stos
das
mov
jecxz
push
out
add
out
in
aas
sub
int3
add
les
xchg
cltd
mov
cmp
negl
mov
jmp
je
mov
sarb
cmpsb
jmp
push
popa
icebp
push
loopne
rcrb
jg
xor
imul
xor
push
adc
dec
call
lahf
jns
inc
test
pop
jno
mov
dec
clc
inc
push
sbb
cmp
xchg
dec
xchg
je
lea
fmull
rol
pop
cmc
lcall
in
or
out
mov
nop
dec
xchg
xchg
xchg
rcll
mov
pop
cmp
aam
lahf
scas
out
out
xor
adc
outsl
mov
test
and
mov
mov
loope
or
cltd
out
pushf
and
xchg
test
repnz
adcl
cmp
jle
mov
jl
mov
mov
sub
sbb
sahf
push
mov
rolb
mov
fimull
cmp
lcall
pop
push
add
pushf
mov
ficompl
adc
push
ja
iret
cmp
data16
push
jb
jae
stc
cmp
sub
daa
xchg
mov
mov
push
ja
add
xchg
aam
xor
sub
daa
mov
out
xorb
pop
mov
fs
inc
add
call
sbb
add
jne
insl
sti
cmp
fisttps
jmp
push
push
jge
inc
inc
out
pop
push
adc
sahf
dec
mov
jp
add
insb
adc
sbb
push
push
sub
sbb
int
arpl
andb
std
mov
fldcw
and
inc
xchg
push
rcrb
fldenv
xor
push
pop
add
jge
inc
cmp
dec
cs
mov
mov
sbb
jmp
jmp
and
jg
fisubrs
push
pop
out
pop
and
test
push
dec
jmp
in
sar
pop
rol
xchg
mov
xchg
push
shll
lret
mov
setbe
xor
cmp
sub
sub
hlt
xchg
push
fadd
imul
insl
inc
int
fstl
xchg
or
loopne
stos
addb
insl
jge
pop
sahf
mov
pop
mov
fdivrl
mov
push
lahf
ds
push
mov
push
cmp
stos
in
unpcklps
mov
push
clc
lds
mov
inc
movsl
cli
lahf
aas
fnstenv
xchg
pop
mov
ficoms
dec
inc
pop
mov
mov
seta
jp
push
fdivrs
xchg
mov
pop
les
inc
out
jmp
mov
pop
mov
xor
mov
pop
sbb
cmp
jmp
jne
shrb
pop
lock
sahf
pop
jne
push
icebp
mov
lds
dec
adc
jae
xor
lds
mov
jnp
popf
ds
sub
jmp
mov
pusha
adc
fwait
mov
lret
repz
jae
ret
push
and
adc
cmp
lahf
fsubrs
fisttpll
jmp
cmc
icebp
cmp
repnz
mov
push
test
in
mov
and
clc
xchg
aam
adc
loop
sub
or
je
arpl
rorl
shlb
mov
push
je
lcall
jns
movhps
sbb
leave
ds
imul
out
cmp
push
das
fildl
xlat
mov
mov
adc
mov
mov
imul
addr16
sub
inc
add
sbb
mov
adc
cmp
mov
or
push
xchg
pop
xchg
pop
push
cmpsl
mov
adc
add
add
add
imul
push
mov
and
inc
stos
repz
lea
add
movsl
daa
mov
and
lods
fsub
scas
cmp
add
adc
inc
jbe
mov
jb
mov
mov
iret
inc
mov
stos
out
iret
daa
shl
mov
into
mov
mov
jne
mov
roll
out
push
mov
jne
mov
in
sbb
sbb
xchg
jl
cmp
lock
mov
fdivrl
insl
inc
xchg
or
dec
xor
and
orl
xor
ja
idivb
mov
mov
cmpl
pop
jle
ljmp
cs
mov
pop
xchg
xchg
push
mov
out
fwait
gs
loopne
dec
or
stc
push
sbb
or
test
jbe
jp
mov
push
xlat
push
mov
rcll
cli
pusha
push
psubd
pop
test
cltd
push
cmc
add
sub
cmp
and
xchg
stos
loope
mov
xor
into
js
jmp
dec
sub
movb
bound
dec
inc
xchg
out
in
mov
int3
or
xchg
adc
iret
and
lock
mov
mov
jecxz
xor
xchg
pusha
inc
stos
xorl
inc
xor
mov
pushf
mov
xor
dec
mov
jge
cli
cs
mov
mov
cmc
test
sarl
test
push
cli
sbb
test
sahf
and
shrb
test
flds
lret
aam
push
mov
pop
mov
jl
or
or
sbb
xchg
sar
xchg
push
insb
sbb
out
or
dec
lods
into
rorl
out
jb
or
xor
dec
dec
out
mov
ret
hlt
insb
std
and
lret
sbb
ljmp
push
cmp
scas
add
fs
clc
mov
or
mov
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
lods
mov
xor
pop
sbb
js
ret
sub
adc
pop
adc
fdivs
aaa
xchg
pop
mov
movsb
push
es
das
js
pop
lds
dec
imul
fdivs
pop
cwtl
jmp
iret
aaa
xchg
stos
mov
imul
jg
imul
mov
inc
ret
xchg
fildl
mov
jne
push
xor
mov
sub
sbb
fdiv
xchg
cmc
sub
fidivs
sti
mov
and
orl
daa
or
sbb
jecxz
movsl
and
mov
dec
push
mov
mov
pop
hlt
mov
inc
mov
push
cmp
pop
xor
stc
js
push
add
push
or
sbb
movsb
jmp
pop
aad
imull
decl
push
fmuls
shll
mov
sub
inc
pop
xchg
nop
xchg
add
shl
adc
and
mov
mov
mov
push
jns
cwtl
or
arpl
cmpb
sub
xor
js
and
icebp
jns
xchg
cmpsl
inc
outsb
sbb
or
jbe
jno
ficoml
dec
jge
loopne
fcoms
xchg
pop
out
xchg
xchg
int3
arpl
sbbb
or
jae
push
fists
push
sahf
fcomps
mov
or
je
inc
nop
sbb
ret
sub
mov
sub
xor
bound
insl
out
or
lods
aam
cmpsl
clc
orl
pop
inc
jae
dec
leave
stc
nop
mov
stos
jno
fsts
lahf
hlt
push
pop
aas
push
lock
outsb
or
call
fs
aam
ds
adcb
leave
cmp
sub
cmp
push
int
scas
jge
pop
fisubrl
cmpb
inc
pop
stos
test
cmp
jmp
and
xchg
movsb
and
ret
jnp
stos
repz
inc
jns
lea
mov
sub
gs
sti
xchg
insb
rcrb
cmpsb
push
or
popa
shrb
pusha
test
andl
sub
loope
mov
mov
mov
aad
mov
icebp
add
adc
push
jb
rcrl
xorl
clc
inc
pop
and
fmul
repnz
cmp
jbe
negl
dec
push
scas
ds
push
xchg
mov
jmp
sahf
adc
sub
mov
or
repz
sbb
xor
mov
out
mov
xor
test
dec
add
sbb
push
hlt
outsl
sbb
mov
loope
mov
pop
dec
mov
clc
loopne
sub
in
insb
mov
ja
mov
pop
out
fbstp
inc
lret
pop
insl
push
inc
jo
and
inc
xor
push
xor
jns
fstpt
mov
mov
movsb
clc
std
mov
or
stos
and
and
inc
inc
adc
or
adc
pusha
sbb
mov
mov
mov
xchg
pop
popa
ss
cmpsb
stos
js
sbb
adcl
mov
fisttpll
daa
jmp
xchg
and
in
push
or
or
iret
mov
add
loop
and
inc
dec
sbb
mov
es
call
xchg
fidivs
mov
data16
jp
cmp
sbb
insl
add
loope
scas
and
lea
xchg
stos
popf
jecxz
or
stos
pop
push
push
fsubl
test
mov
cli
jnp
pop
das
push
mov
sbb
jl
lods
aaa
scas
mov
ror
add
xchg
xchg
add
ret
aam
push
out
mov
in
js
mov
xor
sbb
adc
fcomps
outsl
cmc
lock
or
sub
inc
sbb
psubusb
inc
push
mov
xchg
cmpl
std
mov
ret
lods
xor
lods
arpl
or
lret
jp
mov
out
xchg
bound
popf
mov
xor
cmp
loop
sbb
lahf
pop
fs
xchg
add
inc
xchg
out
in
mov
mov
push
push
pop
or
xlat
fnstsw
imul
inc
in
out
cmpsl
xor
je
sbb
data16
inc
mov
mov
lcall
xchg
pop
jg
enter
fadd
les
xchg
repnz
gs
add
push
loop
lds
cmp
xor
sub
fnsetpm(287
orl
enter
jmp
push
daa
arpl
push
into
mov
adc
lea
and
out
and
loop
lret
pop
in
dec
inc
pop
dec
push
mov
lds
jg
mov
cld
cli
ss
push
test
cmpsb
addr16
and
in
push
mov
in
push
sub
xchg
xchg
stos
fldenv
mov
mov
dec
enter
notl
shlb
aas
dec
arpl
mov
mov
lcall
lcall
push
mov
cmp
xchg
sub
insb
test
cmp
ja
cmp
mov
adc
cltd
push
dec
iret
aam
filds
push
call
dec
xchg
sbb
mov
mov
mov
lods
sub
xlat
push
rorl
cmpsb
jg
mov
aaa
in
repnz
xlat
jnp
into
push
arpl
xchg
mov
add
mov
sti
imul
test
mov
jl
icebp
test
push
jle
push
and
inc
xchg
mov
xchg
jb
and
xchg
scas
sub
insl
int
mov
ljmp
lret
xchg
push
jno
sbb
outsb
mov
cld
mov
sbb
cwtl
lods
xchg
xchg
cwtl
shll
push
dec
add
ss
arpl
aas
inc
int
xlat
fstl
shr
hlt
or
xchg
or
das
hlt
mov
lds
adcb
decl
arpl
arpl
xchg
mov
and
divb
je
insl
inc
xor
mov
mov
or
inc
jmp
rcrb
sub
inc
mov
xchg
dec
xchg
subl
pop
cmp
pop
cmp
das
stos
pop
popf
sbb
push
pop
jbe
xchg
jge
inc
xor
cmp
arpl
bound
jbe
fwait
xchg
mov
adc
imul
mov
nop
and
fs
xchg
xchg
sub
fwait
inc
push
pop
xor
dec
fmulp
aam
inc
lds
outsl
outsl
mov
in
dec
add
xchg
cmp
mov
ljmp
pop
ss
loopne
push
lret
inc
rorl
loope
cmp
lea
pop
sarb
repnz
mov
push
push
fdivr
lds
push
xor
ljmp
lods
negl
sub
in
flds
cld
ja
loope
push
sbb
lods
mov
cmp
popa
ret
and
jne
mov
aaa
testl
xchg
das
rorl
xor
jnp
out
pusha
int
jl
lsl
lret
add
in
and
inc
sbb
or
into
xchg
ljmp
add
pop
mov
gs
leave
shr
xchg
push
ffree
sbb
dec
and
lods
adc
testb
fs
std
cmp
loop,pn
aas
sti
mov
add
add
push
sub
dec
sbb
loop
stc
rcr
lock
mov
mov
cmp
fistps
cmpb
sbb
inc
and
adc
mov
push
mov
mov
cmp
sbb
sbb
fstpt
repz
and
jnp
and
jno
cmp
sbb
or
inc
sbb
push
jge
jecxz
sbb
push
mov
aaa
cs
jnp
pop
push
push
xchg
loop
push
dec
mov
rclb
pusha
std
mov
lahf
pushf
icebp
stos
xlat
nop
mov
out
shll
cwtl
dec
adc
jnp
mov
lds
into
hlt
cmp
fstp
mov
in
gs
inc
stos
mov
imulb
mov
test
aam
das
adc
fidivrl
mov
cmp
jae
inc
fdivrs
in
mov
fcoml
or
push
inc
popl
or
sti
ret
decl
jmp
pop
je
std
ja
dec
mov
sbb
add
sbb
mov
mov
repz
jg
sbb
mov
test
cmp
mov
testl
add
mov
add
incb
cli
jl
mov
sbbl
test
negl
fbld
adc
scas
dec
xchg
mov
pushf
push
push
cmpsl
or
adc
xor
imul
jb
add
jp
and
xlat
add
pop
adcl
pop
lods
fucom
or
lcall
sahf
dec
jp
and
or
out
repz
push
mov
lret
add
or
or
lcall
pushf
rcrl
lods
push
or
lods
or
mov
rorl
mov
adc
daa
loope
je
les
int
mov
int
push
xor
out
repz
rorl
sbbb
arpl
out
out
push
sub
and
mov
les
arpl
fmull
and
cs
rorl
and
xor
sarb
lea
mov
imul
lock
push
xor
and
xorl
divps
pop
jle
insb
jle
cld
jno
scas
adc
adc
xor
mov
fdivs
cmpsb
pop
pop
in
lea
jb
jns
dec
fcmovne
sbb
cmp
or
dec
cld
jl
ja
pop
mov
cs
sarb
shl
adc
mov
in
shrl
jle
fidivs
xchg
inc
sub
lret
or
inc
mov
inc
push
lahf
push
adc
sahf
and
out
out
inc
int3
xchg
lret
cmp
or
and
data16
imul
mov
inc
mov
inc
push
test
mov
shll
sbb
mov
sub
jne
popf
fistpll
add
jne
in
adc
aam
es
push
cld
inc
xlat
mov
mov
into
orb
cmpsl
gs
sarb
pop
pop
es
pop
mov
push
sbb
imul
sbb
mov
cmp
mov
pop
pcmpeqd
mov
push
or
sbb
sbb
lahf
xchg
cmp
mov
jb
xor
sub
nop
repnz
lcall
mov
icebp
inc
lods
stc
push
add
out
mov
pop
and
mov
bound
xchg
cmp
mov
push
imul
imul
dec
add
jle
jecxz
lods
enter
jbe
jb
testl
pop
cli
mov
inc
pop
ror
add
scas
pop
scas
jb
push
cmpb
mov
rcrl
lods
xchg
xchg
fcmove
scas
out
push
and
hlt
pushf
or
jl
push
xchg
cmp
loop
xor
lods
rcrb
and
fstl
xor
mov
pop
test
push
test
mov
xchg
sub
pop
and
dec
and
cs
mov
ss
fdivr
xchg
mov
add
add
xchg
mov
rcll
rcrl
xor
mov
xor
cli
mov
cmpsl
adc
sbb
adc
pop
ljmp
push
mulb
inc
jnp
sub
pop
jb
jmp
mov
dec
cwtl
scas
cld
lods
pop
stos
loopne
les
pusha
mov
fnstenv
fwait
mov
add
mov
mov
xorl
fldenv
sbb
mov
and
and
add
add
jae
jno
cmc
xlat
scas
into
stos
jbe
add
sbb
sarl
dec
pop
sub
add
xchg
lret
pushf
in
add
xchg
idivl
fisubrs
addr16
es
fwait
std
sub
adc
rolb
sbb
orb
pop
std
jmp
scas
mov
cwtl
lds
sub
and
jge
xchg
push
ret
scas
mov
lock
xchg
jmp
jl
mov
loop
cli
fwait
insl
adc
adc
in
dec
fstl
cmp
cld
lret
stos
or
jbe
std
add
xchg
mov
adc
xor
mov
lods
jne
and
ja
xor
jp
push
xchg
aas
fdivrl
test
pop
jmp
jo
fwait
daa
loop
enter
out
jecxz
or
xor
and
aas
insl
lods
push
pop
es
arpl
dec
ja
cmpb
test
outsb
in
imul
rclb
mov
and
dec
xchg
cwtl
daa
dec
sbb
sub
push
or
inc
sub
loopne
mov
or
aam
inc
and
out
push
call
out
pop
imul
and
jg,pn
pop
std
dec
mov
xchg
js
or
sub
out
fiaddl
and
adc
addr16
sub
dec
in
stos
dec
shlb
test
and
and
arpl
mov
push
mov
mov
push
xchg
adc
dec
aaa
testl
out
loop
dec
jns
mov
jg
add
mov
aas
dec
sub
cwtl
pop
repnz
or
cmp
add
scas
cs
sbb
call
mov
push
mov
mov
insb
push
dec
mov
cltd
and
mov
xchg
fisttpll
pop
in
int3
mov
xchg
sti
mull
cmpsl
inc
mov
push
xchg
es
mov
outsl
popf
loope
insb
fs
jp
out
lahf
fwait
push
rcrl
mov
mov
jmp
pop
add
cmp
shrl
xor
xchg
mov
in
incb
cmpsb
cmp
and
sbb
mov
es
scas
aaa
lods
cltd
pop
in
rcll
adc
xchg
and
sahf
inc
rolb
cmp
xchg
sbb
daa
jo
repz
inc
push
add
pop
icebp
repz
push
dec
adc
into
mov
jae
int3
leave
jmp
adc
adc
sub
dec
divb
cs
jmp
sbb
or
iret
xchg
push
clc
xchg
rol
xchg
jno
mov
test
adcl
movsb
insl
dec
adc
out
subl
sub
pop
or
jne
inc
dec
push
cwtl
xchg
mov
xchg
pop
jg
inc
jg
mov
int
shl
imul
lock
not
aam
into
jbe
mov
xchg
mov
jns
sbb
dec
das
push
push
stos
jmp
and
jmp
lret
cmp
lret
xor
sbb
arpl
lods
or
jae
jne
cmc
fisubrs
mov
insl
cmp
push
mov
cwtl
xorb
pop
xchg
mov
xorb
xor
in
cmp
and
ds
push
test
mov
or
sti
adc
cmp
into
pop
dec
mov
mov
fnsave
in
outsb
loopne
pop
shlb
jae
mov
outsb
sahf
or
pop
jne
jp
pop
jge
stos
insl
push
les
jp
das
and
dec
stc
dec
push
inc
xor
pop
mov
pusha
or
test
out
pop
add
incl
mov
popf
pop
or
test
insb
js
mov
xor
sub
and
xor
jg
sbb
rolb
sub
dec
ljmp
mov
popa
inc
aas
repz
and
movsb
jp
dec
ret
or
movsb
adc
ja
ds
jge
mov
enter
cld
outsl
in
mov
push
outsl
push
pusha
jb
or
sub
js
and
les
dec
pop
ss
shrb
in
pushl
ds
loope
add
dec
orl
mov
and
mov
lcall
jb
lcall
pushf
fadds
add
dec
lret
call
pop
test
push
fimull
cmpsl
push
cs
lret
aad
loop
sub
add
repnz
test
or
add
repnz
mov
inc
pop
lods
adc
xchg
or
pop
inc
out
popf
inc
jo
dec
mov
push
mov
pusha
push
bound
pop
sahf
testb
and
pushf
out
jnp
leave
arpl
mov
mov
or
jns
je
inc
lret
mov
push
insl
inc
inc
add
push
cmp
sbb
insl
sub
aas
add
and
mov
or
cmp
inc
and
sbb
mov
fldl
shr
in
cmp
addb
pop
aam
lret
daa
add
xchg
dec
sbb
add
adc
loopne
sub
shll
push
mov
rcr
pop
adcl
loope
push
cmp
push
jge
adc
lcall
jg
xchg
xorl
in
cmc
out
inc
outsl
sbb
and
mov
mov
or
aam
dec
call
fiaddl
xor
push
mov
cmc
pusha
loop
pop
daa
mov
clc
pop
clc
xchg
inc
ret
add
lods
add
push
add
dec
dec
fwait
call
xchg
inc
rcrl
and
aas
inc
dec
cltd
pop
mov
test
shrl
mov
add
sub
mov
inc
imul
add
jl
mov
xchg
mov
dec
fsubrl
xchg
pop
cs
or
cltd
pop
pushw
test
mov
test
sub
mov
ja
lock
push
xor
out
sub
lods
sbbb
pop
xor
cmovb
out
fisubrl
das
dec
push
outsb
or
cld
fldl
add
fistpl
adc
stc
jnp
sbb
xlat
aad
pop
aaa
cli
in
rcll
divl
jne
jp
fcoms
mov
pop
sub
dec
and
jbe
jnp
in
adc
cmp
ret
rcrl
loopne
or
lock
bound
cli
inc
mov
add
push
out
into
xor
jno
testl
jne
mov
push
gs
into
and
test
push
sbb
jmp
mov
stos
movsl
pop
jno
test
or
lods
imul
mov
into
jno
and
or
add
dec
push
xlat
inc
and
mov
aam
jo
js
stc
xchg
pop
es
dec
lods
xor
adc
idivb
sub
sbb
pusha
jno
dec
insb
push
sub
mov
or
add
fisttpll
xor
hlt
sbb
int
lahf
outsl
rolb
adcb
iret
pop
mov
mov
fcmovnu
ja
dec
and
dec
movsl
movsl
andl
int3
andb
sbb
mov
xlat
mov
jl
jno
std
rolb
mov
popf
in
lcall
call
dec
inc
dec
xchg
push
mov
push
jge
cltd
dec
xor
inc
push
or
push
xchg
dec
loop
mov
cmp
call
mov
fists
lret
mov
arpl
stos
mov
inc
loope
insb
inc
add
adc
sbb
pop
stos
aam
mov
pusha
inc
cli
xchg
fisttps
and
push
orl
jle
outsb
cli
or
roll
stc
jbe
shlb
call
aad
in
or
sti
jecxz
pushf
scas
xor
cmpsl
loopne
cmp
xchg
cmp
xchg
and
lret
mov
mov
shl
mov
mov
inc
rcrl
inc
mov
pop
mov
lods
cs
nop
es
add
out
outsb
add
push
inc
aaa
push
jno
dec
pop
inc
mov
cs
insb
inc
insb
xor
or
aaa
mov
push
add
aaa
arpl
add
pop
jg
ljmp
xchg
xchg
mov
pop
dec
xor
test
cmp
dec
pop
aad
loop
pop
jae
cmp
push
test
mov
push
dec
push
jbe,pn
jecxz
iret
lock
stc
fyl2xp1
dec
popf
push
pop
dec
mov
inc
and
ret
mov
inc
mov
stc
add
mov
jmp
or
push
xchg
xor
dec
mov
xchg
sarb
sbb
imul
jl
rcrb
lods
leave
cmp
out
and
imul
dec
cli
les
mov
scas
push
mov
out
mov
mov
xchg
xchg
lcall
mov
test
test
mov
lret
cmpb
cmp
pop
dec
iret
lcall
fisubs
jp
jae
lds
cmpsb
stos
push
idivb
add
mov
pop
popf
jp
xchg
cs
adc
aas
nop
fsts
sub
mov
adc
cmc
gs
cmpl
add
jmp
into
daa
lods
flds
cs
int3
xchg
sahf
cmp
fbstp
imul
hlt
pop
cmp
stos
into
movsb
popf
in
or
add
addr16
sbb
xchg
push
mov
in
and
pop
jns
scas
sub
shll
adc
push
movsl
cmp
scas
push
inc
mov
push
inc
test
cltd
jbe
test
mov
js
mov
fimuls
mov
lcall
mov
fs
movsl
ljmp
sbb
inc
imul
test
cmpl
fcmovu
sub
dec
pop
dec
inc
cmpsb
mov
hlt
lret
ljmp
sub
push
pop
xchg
int
dec
test
aad
out
enter
jl
cmp
xchg
repz
cmc
repnz
inc
jnp
ss
arpl
push
inc
or
std
cmpsl
jnp
mov
iret
mov
jecxz
movsb
stos
mov
aad
and
repnz
inc
fmul
or
jne
insb
dec
and
pop
dec
loop
movsb
sub
insb
xlat
lahf
jbe
fwait
jle
sbb
jb
or
push
xor
or
lret
test
push
test
je
adc
or
inc
or
inc
popf
pop
and
leave
loopne
movsl
xchg
lahf
pop
pop
mov
cld
sbb
icebp
push
movsl
pop
jnp
out
les
sub
inc
cmc
lods
pop
dec
mov
push
sub
daa
xchg
outsb
leave
xchg
std
jl
mov
and
orl
in
mov
test
mul
scas
lahf
mov
in
arpl
xor
or
les
sub
jmp
push
sti
or
add
mov
pop
lahf
push
ret
mov
add
or
cld
arpl
jecxz
popf
in
pop
lea
adc
pop
or
and
jge
data16
cmpsl
les
pop
mov
dec
addr16
arpl
cmp
in
cmpsb
popf
cmp
jns
xchg
idivb
or
stc
int
cli
popf
jnp
sbb
loopne
lahf
or
fdivs
xchg
insb
leave
xchg
lods
mov
mov
lods
sbbb
sti
mov
push
adc
xchg
jo
scas
jmp
add
inc
rol
ret
cld
sub
inc
add
inc
iret
jne
and
jnp
jl
sub
sahf
lcall
ss
rcll
mov
xchg
sbb
add
repz
mov
adc
dec
mov
test
sub
jne
mov
cs
scas
jmp
push
out
test
enter
push
mov
lods
clc
outsl
inc
movsb
xchg
push
cmp
insl
push
shll
lret
push
and
inc
mov
cmpsb
stos
in
popf
fcoml
cmp
mov
int
jne
call
or
or
insl
mov
mov
mov
stc
rcrl
js
dec
fldenv
ficomps
repnz
add
jge
in
fmuls
insb
sbb
mov
pop
cmc
sti
aam
lock
dec
lds
xor
sub
aaa
mov
cwtl
out
sbb
push
xor
xor
xchg
fwait
loopne
mov
inc
adcl
jo
xor
fcmovbe
mov
jecxz
repnz
dec
popf
and
jmp
out
mov
into
dec
or
in
adc
push
inc
and
push
sub
cmp
xchg
mov
test
enter
out
cld
std
aad
dec
rclb
imull
fnstcw
aaa
adc
mov
jne
add
pop
fisubrl
or
and
mov
scas
lcall
add
add
xchg
cwtl
fcmovne
mov
out
xlat
ds
and
in
mov
inc
loope
push
adc
test
xchg
jae
inc
pushf
shr
std
mov
xor
add
xlat
xor
jle
fistpll
cwtl
jmp
push
mov
jp
dec
jge
or
mov
cmp
xor
mov
sub
js
cwtl
test
add
push
mov
or
nop
adc
fidivrl
es
popf
aam
xor
cmp
sti
and
fdivs
sarb
call
and
pushf
int
push
cmp
loope
neg
mov
mov
gs
mov
andb
and
pop
mov
pop
mov
adc
aam
xchg
inc
jbe
icebp
fsubs
ja
notb
lea
jne
jecxz
sbb
in
fnstsw
inc
test
adc
sbb
inc
and
pop
or
rorb
clc
mov
jnp
or
je
imul
or
mov
and
or
sub
ret
xor
jg
push
call
pop
fs
jno
into
jno
sub
repnz
push
sti
mov
int3
cmc
sub
or
outsl
pop
mov
adc
inc
adc
cli
in
xchg
pusha
jl
pop
dec
ja
fmuls
or
cmpsl
jge
pop
movsb
pop
sbb
xchg
cmp
adc
in
sbb
mov
cmp
insl
sbb
cld
mov
mov
mov
cwtl
mov
cli
cltd
sub
stc
and
and
jmp
pop
ss
int3
outsl
push
outsl
push
cmp
rcrl
mov
shlb
push
rdpmc
sbb
nop
nop
mov
and
pop
loopne
fdivs
sbb
dec
xchg
shl
add
aaa
mov
and
pop
mov
mov
fdivrs
jmp
inc
lcall
fstpt
stos
push
addb
aam
mov
stos
fdivrl
inc
xchg
div
test
lret
mov
stos
jp
xchg
das
enter
mov
inc
jmp
xchg
push
cmc
and
push
pop
in
adc
int3
xor
verr
add
addr16
stos
cmpsl
rcrl
lods
cwtl
adc
lods
mov
or
mov
add
add
mov
mov
enter
mov
xchg
in
push
jb
icebp
outsb
mov
ficompl
add
mov
dec
je
fwait
xchg
mov
sbb
pop
aam
sub
mov
and
lret
lods
add
cmpsl
mov
fs
sbb
pop
shrl
clc
jecxz
imul
and
sbb
lds
sub
pop
outsl
in
call
test
std
outsb
addb
stc
inc
sub
ja
out
in
fld1
pop
mov
test
adc
mov
sahf
add
mov
dec
fnstsw
inc
add
mov
shrl
in
xchg
cltd
sbb
dec
mov
dec
pushf
add
icebp
adc
mov
pop
outsl
in
in
adc
mov
fsubs
mov
push
sub
addr16
adc
cmc
push
push
mov
sub
into
add
js
dec
hlt
popa
dec
es
scas
or
pusha
stos
xor
push
sub
or
dec
mov
pop
movsl
xchg
shr
lods
das
push
hlt
push
js
push
outsl
adc
dec
mov
xchg
test
test
cli
fisttps
jb
jecxz
test
lods
pop
insb
xchg
arpl
push
xor
nop
inc
pop
xor
lods
insl
mov
jbe
push
pop
jo
mov
xchg
mov
pop
stc
jnp
add
mov
fisubrl
adc
aas
mov
sti
out
or
mov
cmp
pop
cs
pop
xchg
push
cmovae
ja
lahf
sub
imul
push
mov
les
or
add
sub
test
push
testb
mov
mov
lret
popf
mov
or
pop
adc
lods
push
insb
sbb
push
add
fisubl
jb
sahf
movsb
mov
sub
push
push
pop
mov
or
inc
sbb
stc
add
push
jb
cwtl
jle
mov
repz
or
ljmp
js
jo
test
pop
rorb
adc
jmp
pop
adc
fiadds
sbb
das
xchg
stos
aam
lock
lods
xor
enter
xchg
out
sub
jbe
and
dec
jne
in
sbb
cmp
xor
and
popa
sarl
mov
loop
dec
lds
or
or
jo
scas
popa
jno
lods
pop
jl
sub
roll
and
jge
mov
push
xchg
mov
push
dec
cmc
sub
scas
aaa
inc
ss
pop
lock
out
aaa
mov
mov
cmp
ds
jno
push
out
mov
div
cmp
loope
mov
subb
in
pop
jmp
or
mov
icebp
stc
sub
push
sub
sub
sub
push
cmp
adc
push
sub
or
cmp
ljmp
adc
mov
sub
dec
mov
movsb
movsl
addb
dec
lock
shrl
mov
call
xor
cli
mov
cmp
push
clc
scas
lcall
rorl
add
loop
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
jmp
inc
mov
aaa
cwtl
arpl
push
test
jbe
adc
pop
adc
call
loopne
arpl
loop
xchg
add
xorb
in
filds
in
out
in
test
xchg
rorl
mov
mov
negb
fiadds
xor
and
or
scas
xchg
sub
lcall
fidivrs
test
xchg
dec
stc
push
adc
or
cmp
jmp
bound
push
in
icebp
xor
movsb
add
mov
mov
sbb
popf
cmp
cmp
mov
mov
lea
movsl
es
movl
movb
sti
lods
push
sub
jge
hlt
sub
in
cli
inc
lods
sbb
pop
jns
addl
ficomps
pop
push
lcall
repz
stos
loopne
push
loop
sbb
add
and
jne
cmpsb
cmp
fstp
jmp
pop
lods
and
mov
sub
mov
movsb
and
or
addl
ja
or
or
stc
fldl
sarb
xor
push
sub
ficoml
xor
jae
negl
out
xchg
mov
lds
fsubl
xor
inc
cmp
sbb
mov
aam
aas
cli
je
sub
mov
xor
xchg
xchg
in
mov
lcall
jb
sub
mov
push
sub
ds
lret
pslld
pop
aam
fs
repnz
and
push
icebp
jle
push
fs
sub
clc
pop
lea
adc
fstpt
or
fildll
aam
xchg
dec
inc
ret
cwtl
push
adc
pop
xor
imul
pop
add
out
fistl
cwtl
in
xor
mov
mov
loope
sub
and
mov
mov
sahf
inc
cmpsb
lods
sbb
fiaddl
movsb
aaa
dec
jnp
aad
push
jg
out
dec
or
cmc
dec
dec
rcr
mov
shlb
adc
push
dec
movsb
aas
sub
dec
ss
add
insl
int
xchg
in
js
jg
jmp
jecxz
and
daa
cmp
fdiv
popf
xlat
push
out
int3
sbb
push
mov
add
inc
pop
adc
add
fdivrs
dec
int3
aad
stc
pushf
imul
imul
add
cltd
inc
adc
adc
add
jnp
mov
cwtl
mov
loopne
sarb
into
push
mov
inc
pop
jl
loop
fisubl
mov
or
fs
xor
fcmovbe
cmc
fnstsw
je
jae
mov
xchg
jbe
or
lods
mov
lds
or
mov
je
or
adc
aaa
and
push
imul
pop
fwait
pop
sub
xchg
jecxz
xor
shrl
out
pop
sarb
cmp
dec
scas
lret
cwtl
jo
dec
scas
sub
sar
inc
call
stc
sti
xchg
lret
pop
test
sti
aam
inc
ret
push
out
test
inc
int3
jne
in
add
xlat
fstpl
insb
shlb
inc
jl
rcl
pop
jge
xchg
pop
sarb
push
pop
inc
test
dec
insl
pop
lcall
mov
ljmp
hlt
fcomip
push
or
xchg
popa
mov
pop
fs
xchg
nop
add
adc
enter
inc
lods
adc
push
stc
add
ljmp
xchg
andl
jecxz
ret
xchg
lret
jp
repnz
or
cld
test
mov
pop
dec
loopne
insl
shl
or
enter
scas
pop
xor
popa
adc
push
lods
and
cli
out
mov
xlat
inc
inc
cmp
pop
stos
pop
pop
fidivrs
mov
pushf
inc
adc
mov
mov
orb
add
pop
jne
adcl
dec
loop
mov
dec
push
lcall
nop
nop
jns
scas
pushf
inc
mov
mov
mov
xor
les
push
xor
push
xlat
sub
fstl
mov
mov
pop
and
ret
fwait
popf
ss
es
jecxz
std
mov
adc
loop
movb
inc
cwtl
dec
jb
jne
pushf
in
das
cltd
shll
jns
stc
and
lahf
inc
daa
dec
adc
in
popa
lret
xchg
xchg
insb
je
inc
mov
or
and
jb
push
jecxz
sub
xchg
sbb
addr16
shr
sbb
add
inc
fs
lahf
push
push
sub
ds
push
mov
shrl
scas
push
xchg
mov
scas
jno
pop
arpl
fisttpl
push
out
sub
jo
sub
fsubrs
das
ss
jecxz
hlt
jno
scas
sub
push
add
mov
cmp
lahf
mov
fidivl
fstl
test
jecxz
loop
lock
int3
sub
loop
cmpsl
roll
add
enter
push
add
cwtl
jo
dec
shlb
pop
dec
and
leave
out
ret
mov
imul
adc
aad
push
jp
lcall
cmp
sahf
inc
decb
out
enter
sub
pusha
push
movsb
fldl
push
gs
push
fldcw
xchg
inc
cmc
insl
test
xor
faddl
mov
je
lea
shlb
xchg
xorl
mov
pusha
push
test
std
cmp
pop
inc
int
mov
push
and
fisubrl
cmp
pop
clc
cwtl
dec
inc
inc
outsl
nop
mov
pop
or
shrl
shl
pop
adcb
jp
clc
and
pop
scas
hlt
add
mov
or
loope
sbb
push
in
mov
test
push
sbb
mov
add
jae
mov
cmc
fadds
sub
test
loop
and
repnz
pushf
cmp
mov
push
and
push
arpl
cmpsl
icebp
mov
ljmp
mov
jl
inc
or
pop
xor
cmc
repz
mov
mov
fs
xor
jns
adc
dec
lret
addr16
rorl
or
fs
movsl
jge
ret
sbb
pop
fdivrl
cwtl
mov
sub
lret
add
inc
aad
jne
adc
je
cwtl
inc
shlb
inc
icebp
repnz
loope
sarb
ja
dec
xchg
xchg
stos
popa
int3
add
cmp
mov
test
iret
mov
pop
or
mov
stc
cmc
int
mov
loope
fxch
call
mov
int
xor
fistpl
test
pusha
out
int3
data16
xor
shrl
shll
roll
repz
movb
pop
scas
out
mov
mov
xchg
pop
cmc
xchg
xor
clc
pop
jg
adc
and
dec
mov
lcall
stos
outsl
inc
pop
loop
or
int
lcall
fldcw
ja
jl
jp
jecxz
pop
xchg
sbb
imul
imul
ret
or
mov
mov
popf
pop
jge
stos
or
scas
cltd
in
cli
xor
and
inc
mov
loopne
or
push
jne
sub
cmp
cmc
jmp
call
push
arpl
dec
inc
jbe
jno
mov
mov
loope
shr
aaa
mov
inc
scas
pushf
stos
adc
fimull
xlat
cmp
cmpsl
hlt
pop
out
shll
sub
push
adc
xchg
sbb
push
adc
test
clc
push
aaa
leave
pop
add
movsb
adc
sub
inc
or
fcmovnb
data16
ret
mov
pop
xchg
push
rolb
dec
mov
sbb
jmp
sbb
add
stos
nop
test
pop
lock
int3
add
jge
xchg
andb
leave
adc
cs
and
test
cmp
jmp
dec
out
jecxz
mov
out
outsb
adc
pop
jle
jae
adc
jno
andl
cmpsb
sub
sahf
pop
dec
ficomps
xor
xor
scas
fistps
fsubp
or
mov
add
pusha
sub
cmpsl
cmc
add
pop
pop
imulb
cs
or
repz
adc
ljmp
aaa
jecxz
and
jb
xor
lock
sti
icebp
or
push
lcall
add
xor
inc
loop
clc
push
test
pusha
pushf
mov
dec
jge
stc
jb
inc
dec
clc
xor
sub
test
int
fisttps
test
insb
fildl
bound
mov
out
popf
jg
jl
movsl
stos
jnp
ds
fcoms
gs
add
ljmp
imul
xchg
dec
fstl
xchg
inc
add
imul
sbb
inc
inc
imul
cli
aas
xchg
fisttps
sbb
jae
adcl
xchg
sub
pop
lahf
mov
divb
mov
add
dec
insl
xchg
adc
lods
mov
xchg
xlat
mov
jo
in
sarl
mov
mov
repnz
js
jns
xlat
lcall
dec
outsl
cmp
insb
mov
mov
movb
and
sub
xlat
shrb
iret
mov
rcll
inc
mov
rcrl
mov
jb
sub
mov
testb
sar
sarb
or
lret
sbbl
mov
test
dec
add
stc
push
xchg
into
jb
mov
daa
aaa
mul
outsb
rcl
popa
cmp
add
cmp
filds
fnop
cmpsb
mov
int3
push
mov
dec
xor
mov
push
ss
fcomip
jl
pop
pop
mov
and
sub
imul
mov
in
ret
mov
call
or
dec
gs
imul
mov
xchg
xlat
adc
pop
in
mov
mov
jbe
pushf
and
xchg
in
lds
idiv
inc
and
clc
ret
pop
js
sub
fs
push
jg
lds
push
mov
pop
adc
pop
push
xchg
push
adc
aam
fcmovbe
addr16
lods
fmuls
jmp
mov
out
shrb
or
sarb
push
fucom
sgdtl
mov
popf
mov
inc
or
jge
cs
sti
xor
repz
inc
and
or
mov
sub
scas
mov
inc
and
ret
and
push
sub
jl
push
add
push
fnstenv
jecxz
xchg
push
test
cmp
and
push
or
push
mov
sbb
shll
pop
test
inc
out
nop
pop
mov
dec
aad
and
rcll
dec
push
add
fiaddl
aam
sub
sarb
mov
add
cmc
push
or
pop
test
xchg
stc
sub
fbstp
mov
mov
add
mov
stos
mov
out
mov
sti
popf
add
dec
lods
and
loope
cmp
add
fidivrl
and
xchg
int
int
mov
mov
adc
call
rorb
js
mov
mov
jmp
rolb
sub
stos
jbe
rcll
mov
jne
adc
add
in
rcrl
cwtl
scas
mov
dec
stos
loope
or
mov
xchg
aas
loope
xchg
xor
lret
call
jl
or
xor
push
ret
jp
and
les
into
and
jnp
pop
mov
fldt
popf
subl
popf
icebp
mov
dec
cld
mov
mov
inc
pop
into
ljmp
mov
jl
dec
mov
xchg
mov
mov
sbb
and
jg
ret
std
scas
mov
fiadds
loop
int
adc
jg
lods
and
in
jl
call
aam
xlat
mov
repnz
idivb
test
and
aaa
ss
daa
loop
inc
daa
insl
pusha
mov
xor
pop
ret
mov
fwait
push
repz
add
nop
sub
pop
lock
sbb
xchg
jmp
aam
jmp
push
adc
test
mov
mov
xorl
andl
mov
adc
push
ret
out
cmpsb
jnp
push
and
mov
mov
dec
testl
fwait
shr
gs
mov
nop
push
push
popf
cmp
cmpsb
dec
pop
mov
outsb
mov
in
adc
mov
lea
rcrb
fcomp
add
outsb
outsl
jmp
or
pop
pop
mov
shrb
pop
pusha
fs
jns
lret
fistps
jmp
pushl
std
cld
xchg
in
bound
jle
stos
ret
push
cmp
fwait
push
mov
pop
vmread
adc
sub
bound
mov
js
sbb
jns
cltd
or
dec
cmc
movsl
mov
inc
jo
sub
out
pop
sbbb
sbb
inc
xchg
inc
popf
mov
insb
pushf
cmc
jg
mov
adc
lret
xchg
into
data16
xor
jne
xor
imul
jecxz
xlat
jne
mov
inc
pushf
mov
cmpsb
out
and
xor
mov
repnz
inc
lret
test
xor
aas
nop
push
pop
add
enter
aas
aas
lret
imul
roll
mov
ret
call
mov
or
dec
mov
imull
pop
loope
push
repz
pop
adc
pop
add
pop
outsl
sti
push
ja
sbb
cmp
cmp
or
into
mov
pop
cmp
and
outsb
dec
imul
or
or
jo
and
xor
imul
fmuls
inc
xor
cmpsb
cmp
ret
dec
lret
add
add
cmc
push
loopne
mov
fisubl
popa
enter
cmp
test
xor
adc
sbb
lea
std
mov
ja
shl
push
inc
mov
cmpsb
jl
adc
fcompl
loopne
cltd
dec
ror
inc
xchg
mov
outsl
xchg
cmp
adc
xchg
mov
js
sub
jp
sub
or
mov
jp
mov
in
dec
popa
pop
and
sbb
jae
push
xchg
decl
cmp
pusha
inc
dec
cli
mov
pusha
fisubrl
adc
loope
adc
mov
xlat
add
jmp
add
rcl
enter
xchg
mov
dec
cltd
loop
es
mov
mov
xor
fwait
insb
inc
movsl
mov
call
sub
jae
cmp
or
adc
pop
jecxz
mov
cmp
xchg
mov
and
xchg
mov
testb
fwait
into
sbb
add
cmp
mov
iret
cmp
mov
testb
fidivs
sub
in
mov
shll
popa
inc
sub
jl,pt
incl
mov
and
lahf
dec
mov
xchg
xchg
aaa
or
push
cmp
or
popa
cmp
mov
pop
cmp
int
je
pop
dec
shlb
dec
movsb
movb
insl
jnp
mov
sti
mov
xchg
shll
mov
insl
xor
cmp
dec
jmp
fs
push
dec
dec
jge
mov
mov
mov
or
negl
jmp
xor
fsubrl
jo
stos
mov
push
daa
and
adc
test
jno
sti
iret
mov
mov
ja
mov
out
nop
fs
push
insl
loop
es
xchg
lods
inc
stos
push
xchg
je
pop
push
inc
jae
divl
lret
or
xlat
sub
mov
mov
xchg
les
mov
pusha
test
push
in
ljmp
dec
inc
sub
pop
xchg
add
mov
pop
ret
jne
addl
les
xchg
xchg
xor
in
xchg
lods
or
mov
outsb
sub
ds
xlat
adc
iret
js
adc
je
mov
cld
in
dec
cli
sbb
jp
iret
test
pop
iret
push
mov
movsl
jns
mov
push
jo
and
std
jo
je
and
adc
dec
inc
sub
cmpsl
or
and
jae
mov
mov
cmpsb
xchg
inc
leave
sub
lcall
ja
sti
ss
clc
test
and
dec
lock
jb
nop
cmp
inc
xlat
mov
pop
insb
push
jecxz
jmp
fcom
xchg
mov
pop
dec
xchg
add
xor
add
test
enter
sub
pushf
fs
ja
mov
add
push
cmc
inc
mov
sahf
xchg
fsubl
testb
sbb
and
inc
hlt
push
into
in
notl
insb
adc
dec
mov
mov
lea
scas
xor
cmpsb
push
push
sahf
shll
dec
icebp
stc
mov
push
jbe
stos
or
push
lock
push
mov
fldcw
xlat
cmc
lods
cmc
xchg
cs
daa
arpl
rcll
arpl
push
add
test
loope
in
fstpt
sub
cmp
mov
dec
xchg
dec
add
mov
push
ret
jns
rorb
bswap
sub
xor
cmp
in
fisttps
xorl
or
mov
adc
sub
add
test
inc
cmp
dec
dec
cmp
ss
test
mov
icebp
cmc
inc
xchg
pop
pop
aam
in
scas
jle
imul
decl
rcrb
jns
dec
push
in
adc
loopne
mov
pop
and
gs
mov
dec
adc
and
es
pusha
cmp
stos
stc
inc
sub
pushl
test
add
or
cld
dec
push
pop
jmp
and
lods
fdivs
jmp
push
xor
ss
int3
push
sti
fs
cmp
mov
int3
or
fucomip
fmuls
leave
scas
mov
outsb
adc
jmp
mov
jne
pop
xchg
dec
test
sub
cs
repz
lea
add
loope
shufps
rcrb
push
or
ljmp
test
xor
jae
stos
dec
ss
stos
add
out
leave
aad
ljmp
push
pop
mov
inc
add
pop
inc
and
cmp
shl
dec
aas
mov
lods
cmpsb
xchg
xchg
out
js
push
inc
or
dec
push
les
imull
in
mov
insb
lods
jp
lahf
aaa
inc
mov
and
je
lea
icebp
minps
fbld
cmp
inc
xor
push
mov
pop
pop
fdivl
ja
push
fimuls
jl
or
sbb
ja
sub
push
jp
movsb
test
pop
lahf
and
or
es
jae
add
cmp
sbb
adc
iret
sub
movsb
enter
mov
cmp
lcall
pop
ja
xchg
lods
cmpsb
out
ficoml
push
fidivrl
pop
jl
xchg
sbb
jae
cmp
mov
ss
dec
jne
filds
mov
and
sbbb
adc
mov
hlt
pop
sti
xlat
lahf
mov
filds
mov
movsb
sbb
divb
dec
and
cmp
je
jno,pn
inc
jae
sbb
and
xchg
rorl
push
xchg
mov
in
fstpt
out
clc
fisttpl
jmp
pop
inc
jge
dec
xchg
data16
mov
or
int
inc
push
sub
sti
mov
lea
es
cltd
add
ds
enter
inc
stos
sub
rorb
inc
mov
sub
repnz
inc
loopne
iret
testb
inc
mov
aam
dec
addr16
xor
fbld
add
test
and
ficoml
sub
sbb
mov
jbe
imul
loop
or
jo
mov
push
pushf
inc
lods
sub
jb
aaa
xor
jle
clc
jg
lock
icebp
xor
cmp
cmp
or
movsl
leave
idivl
push
cmp
xchg
adc
stos
cmp
dec
fwait
cmp
ret
pop
stc
push
mov
mov
pop
cwtl
subl
and
sub
jno
int
dec
or
fsubl
and
xchg
int3
sub
pop
cmpsb
loop
mov
mov
adc
cmp
rclb
enter
add
std
xlat
insl
mov
xchg
xor
int3
int
das
jbe
int3
dec
xchg
adc
test
mov
imul
test
rcrb
in
jns
sub
mulb
jno
jno
lods
das
mov
sub
xor
or
negl
or
jg
pop
xor
sarb
push
jmpw
and
jle
jge
pop
pop
scas
scas
test
arpl
ffree
shll
hlt
rcrb
repz
ljmp
sahf
imul
inc
shrb
jns
mov
push
jb
adc
xlat
les
cmc
mov
inc
aam
dec
popf
dec
and
mov
add
adc
sbb
outsl
mov
push
xchg
sub
push
sub
push
dec
jns
adc
mov
out
iret
push
rcll
and
mov
iret
mov
push
push
or
dec
in
add
jnp
test
movsb
in
shlb
mov
pop
inc
xor
jae
sti
out
dec
push
movsl
mov
ror
and
pop
mov
push
insl
test
repnz
sahf
xor
xor
ljmp
or
dec
in
mov
repnz
add
sub
dec
pusha
xchg
aad
sub
into
into
stos
rcrl
in
insl
dec
pusha
sbb
test
aaa
enter
insl
cmp
dec
dec
pop
out
push
xor
mov
movsb
scas
jmp
call
lods
sbb
sub
jmp
and
mov
lods
bound
dec
jnp
lds
sarb
cmp
jg
mov
dec
inc
push
sti
add
inc
roll
xchg
dec
add
stc
mov
negb
call
add
inc
insb
mov
lcall
imul
fistps
ffreep
cmp
mov
xchg
and
mov
int
mov
or
xchg
test
lods
daa
push
cmpsl
repz
repz
jmp
push
out
and
fstpt
shrl
fsubl
lods
scas
mov
fcmovnb
outsl
mov
xor
adc
ret
jmp
mov
loop
cmp
mov
xchg
je
pop
lock
push
cmp
hlt
data16
lahf
rcl
roll
push
sub
sbb
cmp
in
and
in
inc
xchg
ss
aam
xchg
in
lea
icebp
test
ror
inc
sub
sahf
jnp
cwtl
dec
push
pop
pop
lds
add
push
fstl
shr
pop
movsb
fwait
pop
clc
add
adcb
sub
sbb
in
sub
rcl
repz
sbb
shrl
xchg
in
jge
fiadds
push
jo
mov
mov
mov
push
adc
std
in
inc
bound
and
xor
sub
pop
inc
or
fldt
xchg
xor
lahf
bound
nop
lock
iret
icebp
arpl
inc
pop
cli
cmp
addl
dec
fstps
dec
cmpl
push
xlat
lods
aas
push
aam
and
mov
sub
enter
ret
pop
pop
fidivrs
mov
outsl
pop
loopne
sahf
or
sbb
xchg
ja
add
sbb
iret
mov
pop
adc
pop
jnp
sub
push
repnz
mov
or
in
test
push
push
lods
sar
sahf
mov
xor
and
mov
push
fstps
icebp
mov
jbe
xlat
sbb
mov
test
xor
adc
icebp
jbe
cli
or
int3
mov
fdivr
ljmp
sbb
xchg
xchg
ficomps
out
out
dec
mov
push
push
test
jge
shld
mov
mov
rol
out
xchg
pusha
ret
jbe
scas
push
js
push
jmp
adc
imul
jo
xchg
or
adc
jne
andb
jb
add
in
jg
cmp
call
popf
xchg
addr16
mov
push
in
push
mov
rol
loopne
push
jnp
pop
sbb
inc
push
xor
push
pop
mov
jne
sarl
cltd
adc
fisubl
enter
leave
fcompl
inc
outsb
adc
cmp
cmp
push
cmp
push
das
repz
cmpsb
sbb
fsubs
les
fimull
adc
mov
xchg
or
mov
cmp
and
xchg
outsl
ss
std
xor
or
adc
cmp
and
es
daa
pop
pop
ljmp
cmp
aam
lret
sub
pop
test
rorl
pop
cmp
add
jns
lcall
inc
movsl
int3
sarb
out
js
lock
lods
daa
test
bound
add
fldenv
bound
xor
aaa
outsl
mov
mov
sbb
in
or
leave
test
push
cs
add
adc
fwait
inc
fidivrl
jp
jo
add
add
xchg
les
dec
or
push
andb
lods
ficoml
adc
lock
push
xor
pop
lods
loop
stos
push
pop
sahf
lods
adc
sbb
in
arpl
addl
enter
add
aas
add
cmp
xchg
rcrl
xor
and
dec
xchg
fs
popa
mov
inc
or
and
push
loope
ret
inc
or
in
jbe
hlt
sub
shll
pop
test
lock
fnstsw
inc
jl
mov
sub
arpl
inc
cld
jbe,pt
movsb
or
mov
sub
jbe
mov
fwait
lret
and
pop
or
pop
shl
cmp
inc
cli
in
xchg
inc
ja
clc
aad
jno
popa
sub
jnp
lds
stc
or
pop
xor
add
adc
mov
je
mov
cltd
pop
sarb
ret
and
jae
cmpsl
nop
adc
lock
mov
or
je
push
movsl
cmp
dec
mov
mov
pop
insl
pushf
pop
fdivrl
lret
loope
aam
fldt
bound
ds
test
jno
and
ret
pop
insb
scas
mov
mov
iret
and
add
sub
and
or
xchg
cmp
sbb
sbb
leave
orl
outsl
pusha
rol
rclb
pusha
jg
and
repnz
pop
and
xor
dec
sti
popa
push
imul
xchg
int
std
pop
xchg
inc
and
sbb
dec
xchg
add
mov
lcall
loop
arpl
pop
push
sbb
mov
lret
inc
jp
addl
addb
inc
pop
mov
ret
mov
push
cmpb
mov
inc
push
aaa
mov
inc
xlat
xor
cmp
xchg
xor
inc
inc
shl
shll
int3
pop
jecxz
sbb
lds
jbe
xchg
cmc
jno
test
push
lods
push
dec
popf
fcomp
push
arpl
imul
inc
dec
or
add
add
push
xchg
fcoml
push
cmp
jp
sbb
xchg
cmp
mov
jmp
loopne
add
fwait
pop
dec
cmp
flds
je
dec
mov
push
popf
push
inc
inc
mov
fdivs
imul
enter
pop
pop
mov
adc
cld
sub
imulb
pop
adc
dec
lods
jnp
push
xor
movsb
mov
and
mov
cmc
icebp
jnp
fldt
push
xchg
xchg
pusha
jg
xchg
and
cmp
add
mov
leave
pop
into
cwtl
cmpsb
rol
adc
mov
flds
test
stos
mov
jnp
mov
add
lea
loopne
xchg
push
popf
insl
push
fistpll
std
mov
lahf
pushf
push
xor
movsl
ljmp
pushf
push
pop
xor
imul
ds
cmpl
jb
pop
mov
mov
leave
jmp
adc
test
and
or
push
fstl
lcall
mov
inc
ljmp
sbb
jno
popf
jbe
add
mov
fisubrl
in
xor
xchg
inc
cmc
fisubl
es
adc
fidivrl
repnz
sti
pop
cmpsb
mov
nop
cmp
xchg
sub
jmp
cmp
jle
inc
dec
mov
jb
mov
sbb
loopne
and
cmp
rcrb
scas
sbb
in
inc
mov
int
pop
out
dec
add
adc
or
mov
scas
cmp
pop
cmp
cmp
jns
xlat
test
fidivs
iret
sbb
push
jle
leave
xchg
xor
fdivr
sub
rol
dec
pop
xchg
cltd
lcall
mov
adc
or
jae
dec
push
iret
mov
mov
popa
xor
sbb
movsl
and
cmpsl
lods
lods
nop
aad
nop
outsb
dec
lock
cld
pushf
enter
sbb
or
add
test
xchg
movsl
scas
and
movsb
xor
pop
stos
jmp
xchg
jecxz
lods
cmp
out
rclb
ljmp
mov
addb
cmp
adc
inc
mov
jbe
adc
jne
adc
jp
xor
mov
push
inc
sub
jmp
divb
test
dec
dec
out
test
test
cmp
xor
adc
aam
inc
push
ja
mov
lret
insb
jae
mov
in
xchg
das
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
jmp
add
lret
lret
add
out
mov
adc
xchg
cmp
rcrl
add
cmpl
es
mov
call
aas
movsb
mov
dec
ja
lahf
dec
cwtl
std
xor
enter
cmp
je
and
cltd
lods
cmp
popf
scas
into
sbbb
cmp
jp
dec
push
lock
mov
xchg
xchg
or
xchg
inc
and
sub
imul
repz
sbb
cld
shrb
ret
pop
xor
mov
mov
punpckhbw
faddl
cmc
jle,pt
add
xchg
pushf
mov
js
sti
ss
gs
push
jnp
fs
loop
adc
in
bound
fwait
in
jmp
sub
test
mov
bound
adc
mov
enter
lahf
lret
je
fadds
push
mov
mov
vmovaps
movd
pop
test
lock
sbb
out
and
xor
xchg
push
mov
outsb
inc
into
sub
aaa
xchg
stos
push
xchg
sti
xlat
lods
sahf
bound
fnstcw
jae
test
inc
sbb
dec
inc
insb
stc
fsubrs
mov
jmp
sbb
jp
push
sahf
push
aas
pop
mov
add
lods
es
bound
jg
push
mov
dec
sub
cmp
cli
cmc
xchg
jg
mov
cmp
dec
pop
daa
cmp
out
and
mov
lea
dec
inc
pop
mov
neg
mov
xchg
lods
cmp
in
int3
ficompl
adc
and
jae
lock
pop
stos
ja
rcr
xchg
ret
xchg
jmp
pop
adc
dec
and
aas
bound
shrl
dec
mov
push
ja
enter
bound
dec
fistps
cmpsl
pop
stos
xor
jnp
sub
test
sbb
xor
add
jp
stos
out
adc
mov
fld1
and
xor
sbb
inc
adc
add
repz
cmp
leave
and
mov
adcl
add
sub
jg
movl
adc
loopne
mov
shrb
cmpsl
pop
pop
lods
sti
bound
mov
loopne
push
ret
ds
stc
mov
ret
pop
pusha
push
nop
hlt
hlt
std
mov
imul
mov
xor
test
xchg
fmul
push
outsb
cvtdq2ps
lahf
fimuls
jne
push
add
scas
aam
in
cltd
jns
push
or
outsb
or
test
cmp
into
mov
stos
inc
jbe
and
jbe
ret
xlat
mov
insb
rcrl
inc
dec
or
and
and
xchg
in
andb
inc
aad
movsl
fisubrl
sub
sbb
cmovo
ret
cmp
cmp
cmpsb
cmp
aam
sbb
dec
add
das
inc
mov
fdivr
pop
jns
jmp
push
pop
push
fcoms
xchg
and
gs
in
mov
dec
xchg
or
push
or
mov
jecxz
adc
ds
jle
out
adc
or
mov
inc
xchg
push
jns
xchg
movsl
mov
das
inc
mov
pop
enter
cmc
push
outsl
cs
xlat
test
jns
mov
sbb
mov
stos
stos
into
jb
call
pop
mov
mov
sarl
rcrb
movsl
loope
mov
sbb
stos
add
hlt
icebp
jns
or
pop
sub
mov
loopne
rcll
int
jne
pop
xchg
in
and
xchg
scas
and
into
sub
imul
cmpsb
stos
aaa
pop
cmp
mov
and
dec
incl
or
push
mov
jbe
pop
cmp
lret
fimuls
and
outsb
push
add
mov
ret
insb
fsub
xchg
lods
push
bound
cmc
arpl
ljmp
push
out
imul
xchg
pop
dec
mov
in
mov
mov
paddb
subb
pushf
adc
sub
lods
outsl
dec
sbb
ret
insl
movsl
ror
out
les
xchg
aaa
es
xchg
shll
or
push
in
xor
in
or
jb
inc
insl
push
sti
loope
jle
scas
adc
out
aaa
sub
dec
jmp
mov
mov
mov
mov
mov
aad
adc
dec
pop
movsl
mov
adc
fildll
and
aaa
mov
cmp
xchg
test
mov
mov
and
add
add
dec
pop
mov
les
test
xor
enter
insl
fisubrs
scas
dec
mov
ret
int
inc
sbb
cmc
sbb
or
dec
int
mov
negb
out
jmp
aam
mov
addr16
aaa
outsb
repz
sahf
and
inc
jb
inc
jbe
fbld
jg
mov
das
jne
and
xchg
in
or
stos
lea
leave
mov
jne
outsl
or
jnp
test
shll
test
pop
sub
mov
shll
loop
or
aas
push
ret
fs
in
jle
jmp
call
movsl
out
mov
push
inc
jae
je
mov
fsubrs
dec
mov
xchg
stos
jbe
cmp
push
mov
std
xor
xor
js
test
enter
dec
add
in
xor
mov
js
mov
js
adc
xorl
mov
lret
jne
leave
insb
add
pop
lret
hlt
lahf
dec
mov
fs
aaa
dec
jmp
stos
clc
mov
ds
xor
cmc
mov
ljmp
push
mov
cmp
sub
add
mov
mov
movsl
jbe
push
inc
ror
aas
add
sbb
dec
cmp
pop
shll
sarl
lret
dec
dec
divb
jbe
rorl
ss
jmp
xchg
dec
test
int3
jbe
iret
pop
roll
lret
sub
stc
std
sbb
adc
repz
fwait
rcrb
mov
mov
lea
mov
lea
xchg
cwtl
pusha
mov
jl
imul
aam
xor
imul
adc
jle
lds
or
fbld
xchg
jb
test
scas
push
out
pop
outsl
lods
pushf
push
imul
rol
mov
mov
pop
xlat
repz
int3
jne
rorl
jne
push
cmp
add
push
int
pop
dec
rcll
jge
stc
sub
das
iret
dec
fwait
push
mov
out
xor
andb
jns
je
jb
adc
sbb
mov
scas
enter
in
push
mov
and
dec
pop
cmc
jmp
les
sbb
inc
rcrl
fwait
ljmp
lock
adc
hlt
notl
cmpsb
xchg
shlb
pop
lcall
rcrb
inc
insl
adc
iret
add
pop
and
dec
shrb
push
ret
jp
inc
pop
lods
xor
xchg
pop
dec
mov
fbstp
sub
lods
lret
mov
xor
lods
ss
mov
jae
jnp
cmpsb
paddb
pop
mov
repnz
mov
xlat
dec
mov
mov
sbb
cwtl
jp
aam
sub
es
test
int
jp
jl
and
aad
push
jne
jl
sarb
jae
lds
les
loopne
ficoms
mov
adc
shl
pop
test
call
push
std
jno
adc
mov
pop
inc
adc
test
mov
testb
frstor
jl
xchg
sbb
lock
or
fnsave
popa
mov
outsb
add
push
ret
mov
push
test
aaa
pop
dec
push
and
mov
pop
stc
test
mov
push
push
dec
stc
fwait
jns
js
std
adc
lock
movsl
push
leave
jmp
dec
movsl
dec
addr16
sub
xor
pushf
push
and
call
cmpsl
xchg
adc
add
inc
dec
add
or
sub
mov
jl
or
cmp
pop
sbb
je
add
mov
jb
sti
xor
xchg
das
push
aam
bound
orl
xor
imul
je
outsb
mov
pop
loope
packssdw
leave
ucomiss
cli
xlat
in
clc
push
push
pop
frstor
mov
imul
mov
pop
aam
jne
loop
adc
notl
testb
ljmp
scas
fimuls
push
jno
push
mov
mov
cmp
cmp
sbb
in
fisttpll
xchg
fwait
jge
dec
in
lret
test
adc
dec
mov
sub
gs
mov
xchg
jp
rcl
ds
shlb
jecxz
daa
ret
stc
stc
das
popa
pop
xchg
adc
sub
add
mov
lock
in
xor
sbb
notl
in
incb
inc
xor
dec
nop
inc
clc
push
and
or
xchg
push
cmp
loope
xor
mov
aaa
les
mov
xor
mov
cmp
or
jecxz
sub
out
and
pop
mov
adc
jg
dec
pop
xchg
pop
test
pop
std
and
ficompl
dec
in
lods
out
mov
lea
neg
push
adc
sti
arpl
pop
push
imul
pop
and
add
pop
int
mov
mov
inc
sbb
sub
test
lcall
movsl
xor
mov
xlat
or
xchg
idiv
cmp
inc
inc
xchg
sub
sbb
or
lret
aam
rol
clc
mov
popa
push
or
cld
lea
jl
push
mull
je
xchg
mov
cmp
and
lcall
and
mov
jl
pop
mov
add
mov
pcmpgtd
lods
iret
in
add
xchg
mov
testb
leave
addb
in
sbb
mov
mov
cld
add
jbe
inc
daa
dec
pop
add
fmull
xchg
xlat
pop
es
scas
js
cmpsl
xchg
in
lcall
push
mov
push
or
xchg
lea
push
pop
mov
mov
xor
mov
push
stos
push
push
mov
cmp
add
fwait
jmp
jge
xor
xchg
rorb
dec
js
sarb
mov
push
fs
sub
push
dec
jmp
pushf
leave
and
sbb
inc
jmp
jg
bound
ss
popa
nop
xchg
dec
pop
cmpsb
rcll
push
outsl
xchg
jo
sbbl
jae
int
ss
jmp
scas
push
test
or
mov
mov
js
mov
imul
mov
ds
and
sub
push
icebp
and
mov
mov
pop
add
testb
sub
es
xchg
out
pop
shrb
loop
and
xor
mov
mov
cmp
ret
and
int
inc
insb
adc
movl
imul
imul
jmp
mov
outsl
jg
lcall
adc
dec
aad
xchg
lock
mov
pop
inc
jecxz
cmp
pusha
imul
push
mov
push
call
data16
mulb
mov
loopne
add
xor
jne
push
mov
dec
aam
bound
cmp
xchg
testb
sub
pusha
fucomip
cmpsl
sahf
popa
and
pusha
jbe
push
jle
aaa
lock
add
mov
jb
pop
mov
je
inc
mov
xchg
test
popf
pop
push
xchg
mov
insb
mov
test
and
test
add
add
in
push
insb
loope
ljmp
sbb
and
call
or
fcomi
out
rcrl
cmp
cltd
mov
push
mov
xchg
dec
xchg
cld
das
and
xchg
or
fucomp
int3
lods
jb
and
dec
adc
cmp
out
iret
push
xchg
es
ficoms
push
xor
ret
sub
scas
nop
push
xchg
ljmp
popa
mov
les
dec
xor
xor
pop
inc
push
pop
xchg
push
in
cmp
mov
cmp
iret
inc
mov
adc
adc
mov
cs
je
sarl
rclb
mov
and
push
test
adc
adc
scas
mov
outsl
pop
fiaddl
xchg
or
dec
ret
scas
out
popf
lods
sbb
fistps
decb
call
and
xor
gs
fists
shl
cmp
aaa
mov
cmp
test
in
shl
xchg
mov
jmp
xor
call
or
push
pushf
cmp
insb
das
cmp
in
test
sbb
in
jbe
jno
outsl
in
cli
repz
lods
jne
mov
fisubrl
lods
imul
pop
xchg
mov
mov
mov
movsb
scas
pusha
xchg
sti
pusha
pop
xchg
lcall
sub
mov
insb
sbb
push
imull
js
ljmp
jg
push
sbb
mov
loopne
dec
addl
cwtl
pop
push
jo
lcall
xchg
lods
mov
mov
rcl
cld
jp
pop
sub
incb
xlat
cli
mov
pop
stos
popa
scas
lret
jge
jmp
addr16
fists
mov
fs
outsb
jno
lds
lcall
in
gs
js
cltd
flds
push
cmp
pop
iret
sarb
adc
mov
add
mov
or
cmp
int
jge
mov
flds
fs
cmp
lods
adc
or
mov
and
jmp
and
loopne
inc
xchg
pop
mov
sub
jmp
mov
sub
testb
cmp
int3
mov
xchg
stos
jae
outsb
pop
stos
jg
rolb
mov
jg
std
pop
int3
ljmp
push
cmp
xchg
mov
cmpl
add
outsl
sub
ret
iret
sub
prefetchw
insb
mov
pop
fidivl
adc
repnz
dec
or
mov
xor
sbb
pop
adc
xor
sti
jle
je
mov
adc
sub
mov
xchg
sub
inc
mov
cmpsl
mov
xor
stos
inc
push
clc
sbb
jns
fs
or
xor
imul
dec
xor
ds
mov
mov
mov
fcmovbe
bnd
xchg
add
pushf
dec
jge
push
mov
test
and
mov
sti
movl
and
xchg
xor
add
jnp
pushf
pop
hlt
stos
lcall
and
cmp
mov
fwait
add
jb
jecxz
je
or
adcl
xchg
inc
clc
in
test
aas
cmp
repz
mov
test
shl
dec
ss
mov
inc
inc
pop
jecxz
call
pop
xor
notb
push
jle
mov
jmp
out
hlt
cmp
adc
xor
stos
insl
jae
jnp
cmp
js
jno
dec
in
pop
cltd
stc
sbb
sahf
fwait
psubsw
lcall
cmp
lea
sarb
lea
jbe
mov
push
dec
mov
and
clc
pop
mov
add
lock
sub
inc
jg
and
adc
sbb
and
in
mov
xchg
or
cmp
shll
jg
movsb
shl
stos
in
out
push
adc
cmp
and
notl
loope
pop
jne
sahf
mov
ja
aas
rol
add
sbb
jne
inc
jns
mov
cld
cmp
cld
hlt
xchg
cmp
out
mov
hlt
xor
inc
lea
call
call
jmp
and
ret
je
pop
sub
outsb
in
adc
adc
push
minps
dec
xchg
mov
pop
xchg
dec
mov
cmp
aas
and
add
jp
nop
or
xchg
adcb
sub
push
out
js
dec
enter
movsl
int3
ljmp
inc
inc
stos
xchg
sbb
dec
mov
ja
pop
xorb
jmp
ja
sbb
insb
mov
push
idivb
or
mov
enter
ret
xor
mov
jmp
cltd
inc
adc
dec
mov
daa
divl
orb
ja
mov
mov
mov
mov
imul
js
cmc
fdivs
cmp
cmp
add
clc
dec
jnp
lcall
add
insb
jo
mov
xlat
filds
mov
cmp
mov
push
xor
pop
inc
jg
je
push
clc
cmp
mov
xor
divl
cmp
lock
loopne
sahf
sub
sbb
lfs
shlb
or
repnz
mov
adc
dec
cmc
les
push
in
mov
sub
jb
repz
mov
mov
jo
test
push
cmp
popa
inc
push
pop
loope
xchg
fbstp
mov
mov
xlat
push
add
bound
addr16
mov
cmpsb
jmp
add
and
loopne
cmp
inc
mov
rorb
scas
xchg
rclb
mov
cmp
sbb
mov
gs
cmp
xchg
mov
jl
mov
sub
rcl
xchg
test
or
sub
pop
aas
loopne
push
inc
sub
add
daa
in
arpl
sub
gs
dec
nop
daa
icebp
fistpll
mov
data16
fxch
xchg
mov
adc
mov
out
cmp
idivb
and
cmp
jne
popf
xchg
push
ljmp
gs
jp
pop
jo
adc
sub
jb
mov
mov
daa
cli
clc
fstl
test
andb
aam
mov
pop
mov
pop
dec
loopne
and
sbb
ja
pop
push
popa
ja
dec
aaa
sub
xlat
sbbb
push
xchg
les
pop
jne
mov
jb
popa
mov
sbb
or
or
lret
dec
mov
xchg
in
scas
mov
sbb
push
sbb
xchg
in
and
xchg
or
insb
stos
sbb
data16
mov
push
in
push
jo
fs
js
pop
adc
pop
pop
rcrb
cmp
sbb
dec
push
push
push
push
js
mov
fdivrl
ljmp
jg
aad
cmp
popf
fnstcw
shlb
loope
in
stos
test
jbe
data16
fstpt
out
sub
fs
cmpl
inc
add
jge
fisubl
addb
cmovnp
rol
or
cwtl
and
xchg
sub
int
xorl
in
rcrl
mov
sbb
xchg
cld
mov
shll
gs
mov
push
add
lods
dec
adc
call
add
and
or
push
mov
les
scas
stc
lea
sub
mov
psubsw
pop
cmc
inc
leave
mov
lods
cmp
das
ss
mov
push
xchg
mov
lret
out
mov
cwtl
sahf
xor
int3
cmpsb
add
pop
cmp
cmp
push
push
aas
cmp
mov
dec
fmul
mov
ret
adc
jne
test
inc
hlt
sahf
dec
pop
out
sti
fcoml
jp
pop
cmpsl
imul
adc
and
xor
jle
mov
sbb
call
sbb
cmp
lock
cltd
rcll
jecxz
popf
jle
sub
or
in
dec
inc
daa
and
loope
mov
roll
adc
rcrl
clc
icebp
std
fsubrs
fisubl
and
imul
pushf
mov
push
pushw
mov
out
push
jne
pop
sub
ret
mov
lods
js
repnz
cmp
jg
rorl
lea
loop
out
mov
mov
or
out
sub
add
sub
in
testl
sbb
xchg
scas
sbb
lods
ret
push
dec
mov
orl
std
fs
mov
mov
pop
cwtl
in
ljmp
bound
sbb
inc
int
and
xchg
adc
jecxz
sub
sbb
push
lods
inc
mov
dec
in
out
push
adc
mov
pop
in
mov
aad
movsb
push
sbb
popa
daa
mov
adc
test
inc
add
les
sub
sti
mov
inc
pop
sbb
cld
pop
les
mov
jbe
dec
aad
push
in
mov
inc
mov
adc
mov
cld
add
or
jecxz
in
in
jns
mov
mov
or
jne
mov
mov
loop
cmpsb
lds
push
mov
mov
sub
test
nop
sahf
les
adc
pop
pop
outsl
mov
jle,pt
pop
or
aaa
or
adc
pop
adc
xor
sub
cwtl
add
fldt
xor
xorb
pop
fildll
fidivrs
xchg
mov
repz
ljmp
or
mov
aam
jns
mov
sbb
outsb
in
dec
cmp
jnp
jae
jne
clc
xchg
xchg
shrb
enter
push
mov
mov
lods
jg
loopne
outsb
rcr
lahf
xlat
add
fwait
adc
mov
inc
icebp
loop
gs
mov
xchg
es
stos
int
mov
mov
fnstsw
outsl
pusha
jge
fsts
sub
sub
or
repz
out
pop
mov
dec
lret
ljmp
xor
or
mov
shlb
xchg
add
outsb
push
or
push
push
inc
pop
ss
inc
lods
push
mov
cli
and
imul
icebp
push
inc
imul
imulb
mov
scas
sub
jl
pusha
adc
fildl
orb
outsl
arpl
lcall
lcall
inc
out
mov
adc
mov
mov
inc
lahf
das
test
xchg
add
pop
sub
sbb
hlt
mov
aam
pop
popf
mov
inc
cmpb
or
stos
cmc
jno
dec
push
stos
xor
jnp
add
fmull
push
stos
pushf
loopne
imul
push
loope
inc
and
inc
enter
push
iret
mov
xchg
and
js
jmp
mov
and
out
cs
decl
push
data16
add
xchg
or
inc
xchg
mov
xchg
jmp
mov
fcoml
aam
daa
jno
xchg
in
cli
sbb
pop
lock
fdivrl
std
lock
stos
movsl
add
int3
pop
lret
orb
ror
ds
mov
sub
jns
mov
jns
or
xchg
cltd
pushf
push
movsb
cmp
or
fidivrl
sbb
jnp
imul
xchg
pop
lret
xor
xlat
pop
add
adc
push
jmp
dec
mov
adc
ja
mov
mov
push
add
or
aaa
ret
call
enter
pop
add
shrb
jl
fsubrl
cmp
fwait
sub
mov
repz
repz
lock
scas
jg
mov
lret
and
repz
sbb
inc
mov
rcll
sub
mov
xchg
fistl
pusha
popa
jge
push
inc
dec
dec
lahf
test
test
inc
roll
lea
inc
inc
test
push
lea
xchg
cmp
imul
movsb
aas
inc
loopne
test
fisubs
fwait
cld
jle
push
pop
inc
movsb
mov
pop
cli
jge
stc
popf
fwait
pusha
jns
insb
test
fstpl
or
push
in
adc
in
sub
inc
mov
fidivrs
fstps
mov
lcall
std
or
mov
and
inc
push
dec
sbb
jp
adc
int
inc
fisubrs
mov
fdivrs
cmp
adc
mov
inc
out
fistps
scas
dec
sbb
es
fnclex
ds
and
add
loopne
cwtl
push
xor
push
mov
sahf
inc
pop
fidivrl
movsb
mov
jae
add
sub
sub
mov
jno
dec
addr16
mov
xchg
cmp
xchg
dec
push
loop
ljmp
ljmp
pop
cmp
je
outsl
in
iret
ss
mov
sbb
pop
dec
jecxz
add
mov
pop
stos
add
call
mov
pop
mov
mov
push
or
rcrl
mov
sub
jbe
xchg
test
sbb
in
mov
sti
fisttps
adc
inc
inc
ret
stos
dec
pop
dec
and
into
xchg
xchg
scas
jo
fldcw
cmp
push
lock
pushf
inc
sbb
bound
push
mov
push
xchg
add
jbe
mov
push
push
mov
adc
repz
enter
mov
sub
or
mov
push
xchg
test
jle
and
or
je
imul
jns
push
push
add
push
mov
mov
test
cmp
out
dec
je
xchg
mov
ds
add
jle
out
xlat
lcall
jl
mov
stos
movsl
mov
and
mov
mov
adc
inc
sarb
out
add
int3
sub
xor
mov
movsl
sbb
dec
push
pop
push
fcompl
js
loopne
stos
ficoms
popa
push
dec
jns
gs
dec
sub
cmpsb
fldl
in
pop
mov
push
xor
cli
pop
pop
and
mov
mov
dec
and
dec
sbb
ljmp
in
push
add
sub
cmp
dec
xor
push
adc
in
arpl
iret
in
cs
xchg
bswap
pop
ljmp
lcall
add
sub
xchg
repnz
sub
xchg
push
jne
lahf
idivb
jno
inc
jl
sub
xorl
push
imul
fisubrs
mov
std
inc
fbld
sub
dec
sub
imul
sahf
jne
adc
cmp
xorb
scas
nop
lods
arpl
call
mov
xor
in
inc
cmp
sub
xchg
or
fstpt
jl
fcmovnu
mov
xor
jecxz
xchg
adc
mov
inc
lret
push
jbe
push
sub
jg
scas
mov
dec
fbld
dec
pop
je
mov
add
cmpsb
and
scas
jb
xchg
jae
dec
lock
inc
or
bnd
pushf
mov
jl
mov
add
dec
lods
das
push
test
push
loope
cmp
in
adc
rcr
icebp
pop
in
leave
cmpsb
mov
int
iret
rolb
inc
sub
sub
ja
adc
xchg
and
sbb
inc
xchg
mov
lea
scas
lret
xchg
mov
ljmp
mov
mov
dec
push
aaa
mov
fisubl
enter
fadds
out
or
mov
lahf
mov
pop
mov
fwait
and
mov
fstl
shll
or
sbb
pop
push
xor
sbb
cmp
repz
dec
pop
iret
cmp
jne
sbb
sub
jbe
repz
push
sub
adc
or
subl
xor
mov
jle
stc
push
popa
mov
inc
lret
pushf
inc
jno
mov
test
cmc
lods
out
or
pop
xchg
cmp
scas
rorl
add
cltd
jae
in
jmp
adc
push
test
cmp
jnp
cmp
add
mov
es
or
imul
cwtl
das
add
cld
add
jb
ljmp
ljmp
mov
add
fnsave
repnz
inc
sub
nop
pusha
dec
notb
inc
rcll
mov
push
shlb
movsl
stos
jo
mov
dec
out
xchg
xor
into
inc
push
rorl
mov
cmpsb
daa
cmp
insb
xchg
in
jb
out
sbb
mov
and
mov
pop
cmp
outsb
nop
inc
int3
cmpsl
fwait
mov
add
in
je
shl
inc
test
int
fldcw
pop
cmp
sub
lods
inc
fs
mov
or
mov
cmpsl
insl
mov
mov
sbbl
ret
mov
or
xor
mov
cmp
adcl
test
dec
sbb
ds
call
popa
loopne
dec
mov
iret
inc
sub
inc
sbb
rcl
enter
sbb
or
lret
cmpl
sub
dec
push
mov
stos
bound
mov
add
mov
clc
cmp
sbb
jp
sbb
cmp
incb
adc
in
sub
cmp
dec
cmc
mov
stos
sub
jl
out
mov
iret
mov
jnp
hlt
daa
mov
and
out
pusha
stc
inc
inc
cmp
xor
and
xchg
dec
pop
fstpt
iret
hlt
push
xor
adc
scas
sub
leave
lods
adc
mov
gs
adc
inc
adc
mov
les
aad
mov
mov
dec
lods
movsl
mov
loope
loopne
adc
mov
sbb
mov
cmp
movsb
ljmp
fwait
jl
fwait
cld
and
mov
lods
jnp
lods
movsl
dec
cmp
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
jmp
jnp
imul
sub
pop
dec
jle,pt
cmp
adc
cmp
xchg
out
xor
xor
mov
xor
adc
and
sbb
mov
sarb
xchg
sbb
mov
mov
aam
pop
mov
je
cli
lcall
and
int3
lahf
scas
mov
xchg
or
sub
jbe
adc
jge
inc
test
arpl
loopne
sar
daa
push
in
xchg
xlat
cwtl
fcoms
jae
push
mov
jns
je
imul
xchg
mull
pop
dec
xchg
cwtl
dec
mov
and
movsb
or
imul
or
int
cmp
mov
in
push
cmp
ret
pusha
ret
jno
cmp
mov
mov
sub
shrl
insb
or
cmpsl
loope
shlb
movl
or
push
mov
in
inc
es
pushf
sbb
repnz
int
push
out
xor
adcl
sub
add
cmc
pop
mov
lcall
add
mov
aad
sub
fisubs
inc
adc
mov
not
xor
pop
push
cli
xchg
jnp
pop
mov
xchg
lea
jnp
mov
push
stos
mov
ret
add
test
pop
jnp
adcb
mov
aad
jbe
adc
or
in
push
inc
jno
daa
fldt
pslld
fimuls
scas
mov
testl
popf
je
sbb
push
stos
fs
fnstcw
inc
leave
mov
xor
cmp
sbb
out
push
int3
ja
loop
inc
push
add
xor
aaa
aad
pop
rcll
aad
jae
adc
or
cwtl
dec
in
or
insl
sbb
mov
sti
lret
xor
test
mov
and
sarb
lds
out
or
or
and
and
outsl
mov
in
xcrypt-ofb
cmpsl
sub
in
or
or
push
test
imul
fidivrl
test
xchg
clc
inc
adc
pushf
cmp
js
sbb
repnz
xor
mov
sub
test
xchg
call
cmp
into
pushf
sub
adc
filds
test
inc
testb
dec
movsb
lahf
bound
fs
fsubrs
neg
pop
cmp
and
cmpsl
cwtl
xchg
fsubrs
cmpb
cli
popa
outsl
orb
inc
lahf
sbb
inc
mov
or
shrb
sarb
push
jl
rcl
and
imul
cmpsl
loope
sbb
sub
push
inc
std
sti
hlt
data16
sbb
arpl
aas
jmp
fiadds
rcr
mov
fwait
mov
scas
sbb
popl
adc
sbb
xor
das
sub
jne
sub
divb
js
fstps
mul
sbb
test
adc
lock
repnz
mov
inc
jmp
sub
lret
jg
loopne
sarl
add
and
and
daa
pop
lods
ret
inc
cli
loopne
cs
sub
pop
in
add
xchg
fwait
stos
std
jbe
ss
mov
jo
bound
or
mov
push
sahf
call
lcall
and
and
jp
inc
sub
test
out
adc
rolb
imulb
aaa
repnz
leave
cltd
ret
cmpsl
stos
inc
sbb
add
add
jecxz
repnz
cmp
mov
adc
in
pop
mov
popa
push
pushf
cmp
jmp
aad
subb
mov
in
push
movsl
sub
dec
push
enter
les
xchg
lcall
lea
cmp
xor
incb
and
test
cli
sbb
pop
mov
push
in
testl
jg
subl
es
data16
jle
add
std
sbb
or
push
rclb
popa
sbb
cmp
or
xor
jb
pop
push
stos
mov
andl
xor
push
jecxz
shrb
imul
test
mov
repz
adc
mov
pop
push
out
lahf
fnsave
push
fdivs
or
and
sbb
shrb
aaa
lret
mov
cmpsb
stos
xchg
sbb
lods
pop
les
outsl
push
mov
xchg
idivb
test
xchg
rcll
mov
inc
out
popa
pop
mov
js
or
mov
xor
ds
xchg
cli
inc
pop
out
test
loope
inc
jmp
lret
add
lds
fidivrl
popf
or
cld
xchg
dec
add
lock
sbbl
int3
icebp
pop
es
sbb
push
rcl
inc
cwtl
out
cmp
pop
xorb
adc
xchg
and
adc
jnp
sbb
fisttpl
inc
pop
push
mov
pop
mov
lds
ret
not
sbb
mov
xor
adc
xchg
and
pushf
lods
enter
loope
scas
ret
aas
aaa
mov
fstl
sub
or
push
pusha
adc
and
ja
cmp
adc
jb
push
jg
addb
cmp
xchg
dec
dec
cwtl
hlt
xchg
in
xor
loopne
test
and
lret
xchg
mov
cs
cmc
pop
sub
mov
into
cmp
add
push
sub
movsl
lret
fs
in
ret
cs
dec
mov
movsb
movsl
xor
jne
xor
mov
mov
loopne
fists
arpl
loope
insb
or
enter
outsb
jp
pop
daa
loop
pop
popa
or
mov
loope
jnp
xchg
mov
sahf
and
jle
aam
jle
xchg
bound
inc
mov
pushf
imul
les
jle
mov
sbb
aas
mov
mov
push
clc
inc
mov
lods
dec
xor
sbb
sbb
push
mov
data16
test
jg
mov
xor
das
shrb
sub
test
cmpsb
mov
movsb
lods
ret
xlat
in
into
dec
push
jno
jl
xchg
cmpsb
jnp
imul
push
mov
pop
mov
pushf
push
fwait
popa
mov
sbb
mov
mov
mov
mov
leave
test
mov
jb
data16
popf
cld
xor
push
jle
pop
mov
pop
inc
xlat
lea
xor
xchg
dec
in
scas
jg
lea
push
sbb
mov
fucomi
adc
test
jg
jge
or
push
or
movb
sarl
test
cli
aam
pop
frstor
jb
icebp
mov
repz
push
cmp
inc
xor
lret
sub
test
xchg
mov
and
mov
stc
ret
adc
sub
scas
pop
mov
mov
xor
push
mov
aaa
pop
mov
ljmp
xchg
sbb
mov
xor
jg
add
mov
push
inc
xor
pop
mov
inc
test
out
mov
add
fdiv
enter
enter
jne
or
and
test
lods
ret
pop
ret
xor
pop
cltd
shlb
pop
inc
or
iret
cmc
mov
dec
addr16
ret
rorb
xlat
arpl
mov
popf
loop
push
inc
arpl
mov
adc
xchg
pop
imul
in
jb
jg
movsl
mov
mov
sub
or
and
cwtl
pop
mov
push
sbb
jmp
mov
sti
ljmp
mov
lods
outsb
icebp
loopne
mov
dec
roll
fstpl
cmp
enter
lock
mov
sbb
jb
mov
cmpsb
jle
cmp
aas
out
loope
testl
imul
popl
bound
fisttps
in
add
fs
lock
and
outsl
aaa
rcrb
in
xchg
inc
or
leave
pop
mov
sub
lds
subb
push
xor
adc
push
stos
test
xchg
add
psubsb
out
adc
outsb
lods
lahf
inc
je
jnp
mov
push
imul
jp
nop
aaa
or
and
fninit
sbb
mov
lock
pop
shl
push
out
sbb
fldcw
les
mov
jp
add
push
push
icebp
mov
addr16
aam
jno
push
addr16
sbb
mov
lretw
lods
pop
jle
and
pop
into
push
mov
push
les
lods
add
cmp
mov
lahf
jecxz
test
adc
insl
call
dec
add
sub
out
loope
pop
bound
cmp
ljmp
lret
jbe
jno
aaa
fildll
ljmp
xchg
orb
scas
imul
fidivs
or
jno
dec
clc
mov
or
insl
js
add
add
mov
cs
mov
ret
or
ret
mov
es
jnp
jo
xchg
sbb
jae
sbb
iret
or
ficoml
imul
imul
out
lea
mov
xor
jo
vcmpps
pop
pop
mov
mov
mov
mov
mov
clc
stos
adcb
dec
loopne
or
nop
pop
fbstp
ret
xor
outsl
sub
incl
dec
nop
ljmp
adc
sub
cmp
test
popa
ds
movsl
mov
testl
fists
cmp
stc
inc
mov
sub
aam
ret
jns
xor
or
inc
sbb
add
rorb
pop
fists
cmc
lods
out
xor
and
roll
cmp
jb
in
mov
pop
xchg
sub
ret
push
lea
imul
jb
je
ljmp
xchg
sbb
imul
sahf
adc
sbb
mov
cmpsb
mov
mov
push
add
xchg
jg
cmp
and
lea
clc
ficoml
dec
gs
and
adc
daa
test
jnp
add
mov
test
or
mov
leave
push
add
push
lods
sbbl
adc
jne
mov
sub
leave
and
inc
outsb
aad
aas
enter
push
sbb
push
fmul
inc
mov
pusha
jns
cmpsl
pop
das
jecxz
arpl
jne
or
lahf
leave
sbb
mov
mov
ret
push
xchg
push
je
adc
xchg
out
shll
jae
scas
cli
mov
cmp
adc
bound
add
aaa
mov
inc
xor
xor
repnz
mov
mov
lds
repz
addr16
fcompl
inc
aad
sbb
lods
in
icebp
xchg
fists
nop
movl
jl
pushf
fs
inc
xor
mov
mov
sub
and
or
cmc
and
inc
loopne
pop
xchg
in
mov
loop
push
mov
ret
stos
ljmp
xor
sub
push
mov
sbb
aad
std
cli
jl
sarb
adcb
lret
lret
mov
repnz
sbb
xchg
xchg
inc
popf
cmp
dec
in
ds
decl
fsubrs
daa
or
test
and
js
lock
inc
iret
pop
sbb
inc
movsb
jne
push
cmpsb
xchg
mov
jne
push
push
mov
jo
cmp
xor
mov
sarb
cmp
pushf
pop
xor
sbb
cmp
mov
fadds
jb
xor
pop
popa
int
aam
mov
stos
ror
shrl
push
jl
lock
sub
or
lds
dec
rcr
js
cmc
mov
cmp
and
test
mov
inc
push
ret
fcmovb
lret
enter
pop
daa
pop
int
dec
incl
push
add
lds
pop
inc
pop
sti
call
sbb
ret
loope
cmp
add
inc
push
pop
mov
or
inc
cmpsb
in
les
pop
mov
das
mov
movsl
dec
cmp
cmp
sbb
fcmove
je
and
jg
jb
pop
test
call
or
sbb
mov
pusha
and
add
add
loope
cmp
xor
lahf
mov
stos
mov
jl
xor
imul
es
sub
dec
mov
mov
outsb
mov
sbb
xchg
pushf
std
sub
aam
lcall
cld
mov
cmpsl
push
cld
int3
sub
incl
std
outsb
insl
inc
mov
add
mov
popf
pop
fdivr
out
icebp
cltd
or
adc
lea
addr16
sti
pusha
imul
and
js
dec
adc
dec
rorb
mov
push
add
inc
lock
repnz
xchg
xor
shll
mov
sub
jp
iret
ljmp
roll
mov
xchg
fnstcw
push
shlb
mov
ror
xchg
mov
jg
mov
daa
and
les
scas
add
sahf
pop
negl
mov
or
cmp
xchg
sub
imul
clc
adc
and
insl
loop
cld
repnz
jmp
pop
js
mov
xor
jo
cs
in
cs
stos
outsb
pushf
dec
gs
pusha
mov
movsb
rcrl
nop
xor
inc
int3
push
shrb
xchg
mov
lahf
inc
mov
mov
mov
pop
push
into
mov
sti
adc
mov
mov
add
mov
jecxz
popa
fistpl
jbe
aaa
inc
add
mov
dec
je
push
in
and
and
xchg
in
add
sbb
int3
add
or
mov
ljmp
rorl
or
movsl
xchg
loope
adc
pop
call
cld
stos
mov
add
and
sbb
imul
insl
cmp
scas
mov
pop
push
jle
xchg
sbb
add
add
jbe
fcmovnb
or
xor
jns
dec
inc
cwtl
jl
jo
or
lods
subb
addr16
popa
fcomps
sub
xor
jge
aam
lret
fimull
push
jnp
inc
out
clc
fisttpl
stos
ja
inc
push
fisttps
fdiv
xor
xlat
jp
js
clc
aam
clc
sbbb
test
jne
add
dec
adc
out
add
cltd
push
into
mov
pop
jno
leave
neg
xor
lock
or
pop
je
mov
pop
daa
xor
gs
cmpb
or
jl
jbe
mov
enter
push
inc
push
mov
ss
iret
fildll
or
sbb
dec
mov
cmp
cld
jg
pusha
ja
push
jmp
fists
jns
mov
lcall
test
and
mov
jecxz
sbb
push
cmc
gs
adc
adc
ss
ljmp
push
xchg
xor
movsb
fs
xor
xor
popf
sbb
mov
mov
push
xchg
enter
mov
mov
shrb
sbb
out
inc
xor
add
fbstp
es
std
inc
pop
imul
out
jmp
jge
nop
inc
push
sbb
rclb
add
push
xor
xor
jnp
jl
fsubrp
lods
xchg
push
not
sub
icebp
sub
icebp
or
stos
aam
xchg
sarl
jge
ja
movsl
mov
sbb
arpl
jl
stc
test
nop
aaa
sub
mov
mov
jno
shl
ss
xchg
push
sub
sub
data16
ljmp
mov
nop
lods
push
mov
jno
clc
stos
mov
enter
dec
push
fnstenv
mov
sbb
push
les
and
fcomps
mov
inc
sahf
fisubs
and
push
test
adc
mov
decb
add
inc
fcomip
fcoml
daa
jmp
adc
stos
stc
arpl
icebp
adc
or
stos
jae
adc
xor
or
mov
repnz
mov
into
jnp
push
stc
inc
lret
or
jl
cmp
sub
jp
mov
and
sbb
daa
enter
or
lods
std
dec
push
aaa
das
rcrl
mov
aas
push
push
lock
std
ret
andb
xchg
loope
pop
scas
ss
data16
in
and
jbe
xchg
outsl
imul
dec
push
lods
inc
lds
out
cmc
mov
out
dec
push
pop
ret
mov
movb
xchg
sub
mov
ja
ret
push
outsl
mov
xor
enter
nop
int
sti
popf
inc
mov
les
outsl
insb
rcl
imul
xor
cwtl
dec
jns
dec
pop
fisttpll
rcrl
popf
mov
es
stc
sarb
mov
add
ret
mov
dec
mov
mov
inc
inc
test
jae
data16
or
push
pop
pop
mov
cmc
scas
aas
and
xchg
add
adc
xchg
call
and
and
imul
pop
dec
filds
lret
or
dec
sbb
adc
push
in
and
std
jae
test
imul
jle
sub
cli
testb
or
sub
sub
sbb
popf
testb
push
inc
inc
addr16
mov
cmp
ja
push
and
jo
xor
cwtl
sbb
or
inc
enter
dec
mov
xor
jecxz
sub
test
sub
xor
negb
cmp
jbe
dec
mov
mov
inc
nop
js
or
or
mov
xchg
in
sub
mov
jno
out
in
inc
xor
repnz
sahf
add
arpl
mov
mov
dec
mov
xchg
add
lahf
lret
push
sbb
xor
aaa
ret
aaa
test
push
mov
adc
test
push
lea
gs
pop
lret
mov
nop
inc
fildl
cld
outsb
test
in
test
outsb
lret
lods
xlat
filds
fidivs
pop
idivb
shll
ljmp
insl
stc
jmp
pop
int
jl
in
cmpl
lds
pop
xchg
inc
add
xor
lock
arpl
addl
lea
cmp
add
dec
fsubl
and
cmp
icebp
sbb
push
add
movsb
xchg
loope
loope
and
outsb
mov
cmp
dec
dec
in
adc
mov
dec
and
xchg
and
out
mov
inc
popa
cmp
rclb
pop
fsub
jle
mov
iret
in
lahf
out
loop
ror
inc
leave
stos
aad
add
jb
and
pop
fcmovu
mov
inc
mov
jae
xchg
pop
std
cmc
in
hlt
out
loope
cmpsb
mov
or
mov
test
sub
jbe
fwait
or
popa
insl
lret
out
test
and
inc
ja
mov
testb
mov
push
xchg
mov
sbb
mov
js
sbb
xchg
inc
sub
aam
nop
adc
mov
test
ds
dec
dec
push
push
packuswb
fldt
outsb
mov
aaa
fcomps
cmpsl
rclb
out
into
pop
loop
sbbb
push
outsb
lret
fstp
xlat
and
xor
mov
dec
mov
cld
mov
les
mov
lods
pop
lret
sbb
movsl
adc
jmp
test
ja
pop
mov
std
fstps
mov
imul
ret
cld
fsubrs
scas
int3
cmc
into
hlt
int
cmp
xor
pop
ds
loope
xchg
adc
imulb
xor
add
sub
jae
dec
jle
ljmp
dec
inc
jae
ret
mov
orl
jge
jl
je
dec
shll
lods
xchg
cmp
les
stc
mov
jno
sub
jg
int
jo
xor
pop
dec
xor
lock
sub
push
vmovups
jnp
dec
dec
xchg
mov
jne
jle
dec
inc
addl
dec
adc
xor
ds
fdivl
push
sbb
fucomi
lods
or
dec
insb
cmp
scas
rcrl
add
ret
jp
mov
xchg
inc
mov
xor
cwtl
lahf
push
and
xchg
test
movsb
fisubrl
arpl
mov
loope
iret
push
test
fistps
lds
jp
fmull
mov
pop
sbb
jno
lods
outsb
xchg
cs
orl
mov
dec
inc
outsb
push
mov
fcoms
notl
idivl
cmp
inc
sub
repz
ljmp
dec
repz
add
jno
inc
and
pusha
rorl
lock
lea
sub
jnp
cld
cmp
and
and
add
addr16
stos
push
lahf
test
adc
or
cmp
fiaddl
sbb
lods
jl
sbb
dec
or
mov
add
adc
adc
pop
subb
rcrl
xchg
iret
cld
mov
mov
imul
adc
jbe
xor
jo
scas
lods
jb
inc
iret
jne
sbb
xchg
subb
mov
out
mov
lret
sub
hlt
mov
out
call
mov
imul
xor
mov
pushf
loopnew
xor
or
loop
mov
cmp
js
pop
jge
push
cmpsb
mov
cmp
ljmp
sub
and
mov
in
xor
in
add
push
daa
fs
aaa
lock
xchg
shl
adc
mov
fs
cmp
arpl
sbb
inc
lret
int
mov
daa
and
bound
pop
cmp
ret
movb
ss
movsb
dec
clc
ret
aam
imul
sbb
cmp
add
xchg
out
shlb
sub
fwait
inc
or
shlb
dec
cmp
push
gs
dec
push
and
mov
in
add
outsl
pop
and
into
ds
xlat
cmp
add
in
cmp
and
out
sub
push
jb
xor
xchg
inc
nop
cmp
mov
lret
lahf
cli
shrb
and
and
mov
push
mov
divl
cmpsl
inc
mov
xchg
insl
cmp
gs
xlat
pop
mov
call
adc
xchg
rol
mov
dec
mov
je,pt
xor
xlat
jbe
stc
bound
ds
adc
mov
mov
les
loopne
xchg
ds
pusha
xchg
aas
imul
out
push
mov
mov
subl
jmp
rcll
les
xor
aam
nopl
test
decb
mov
inc
cli
adc
lret
xor
mov
add
xchg
and
mov
push
xchg
pop
add
ja
fcmovnu
mov
mov
push
fnstcw
sub
fnstsw
xor
mov
inc
add
xchg
orl
das
in
sub
mov
testb
test
mov
xchg
pop
lcall
sbb
push
or
sub
popf
loope
jae
addr16
inc
and
cmpsl
mov
add
cmpsb
mov
mov
pop
test
imulb
ret
mov
cmp
fmul
and
call
sub
inc
mov
stos
shlb
aaa
jmp
mov
xor
inc
aad
inc
imul
adc
inc
into
repz
gs
out
mov
fadd
lret
gs
add
sbb
adc
test
mov
sarb
vphsubbw
stc
adc
sbb
mov
mov
insl
fs
jmp
dec
sbb
cmp
mov
push
xor
mov
xchg
scas
sbb
imul
add
push
lret
cmpsb
pop
pop
mov
in
lahf
clc
mov
xchg
imul
cmp
mov
xchg
ja
stos
and
fs
aas
in
outsb
jb
mov
mov
dec
push
push
jne
add
mov
jb
es
fsts
mov
mov
mov
jnp
outsb
jmp
rorb
push
pop
add
cmpsb
adc
cmp
aam
xor
mov
hlt
push
adc
leave
jmp
xchg
sbb
lods
sbb
push
outsl
std
and
dec
add
decb
out
xchg
mov
jns
add
ds
xchg
xchg
xorb
aaa
push
fldenv
mov
sbb
sbb
ds
jmp
or
dec
lret
das
and
mov
out
adc
mov
push
fdivp
imul
ljmp
fnsave
call
jno
lods
inc
jl
shll
in
dec
or
hlt
test
xlat
dec
push
in
out
jno
pop
in
inc
std
xor
and
fs
mov
push
out
mov
cmpsl
or
inc
xor
xor
add
cmp
out
loop
out
je
in
aaa
push
mov
sub
je
test
mov
movsb
incl
cmp
mov
rol
pop
js
dec
insl
or
xchg
cmp
mov
lret
outsl
pop
xor
cmp
cmpsl
jmp
add
shr
adc
pop
mov
lea
mov
mov
pop
jle
je
push
cmp
test
mov
add
bswap
push
jg
xchg
popf
and
ret
out
fwait
sbb
jg
js
out
ss
adc
sbb
pop
rolb
sub
pop
cmp
dec
add
xchg
sti
inc
jecxz
pop
clc
std
cmp
mov
lcall
adc
and
movlps
and
ds
jno
push
add
lea
xchg
adc
into
lds
ret
xor
rcrb
jmp
or
repz
push
add
scas
popa
cmp
inc
mov
jp
and
mov
test
mov
lock
inc
pop
sub
mov
aad
out
outsb
es
popa
aaa
mov
push
add
into
popf
xor
cmp
push
addr16
xor
mov
aaa
mov
inc
bound
test
dec
stc
call
aaa
sub
adc
fistl
add
movsl
and
jbe
in
inc
lods
rorl
scas
aad
jmp
inc
xor
push
mov
push
bound
popf
movsl
or
dec
inc
fbld
add
xor
stos
aad
cmp
repz
push
xchg
cmpsb
ret
loope
inc
add
sar
out
insb
ljmp
int
je
int3
les
out
iret
pop
jo
repz
stc
cmpsb
repz
mov
xor
sarb
je
cmp
push
dec
stc
jl
roll
ljmp
add
das
testb
iret
stos
cmp
xchg
push
ret
mov
dec
mov
inc
push
push
jl
call
out
dec
mov
test
jle
or
out
push
fwait
scas
lahf
push
adc
dec
nop
sub
adc
scas
clc
push
jnp
push
outsb
jmp
insl
clc
in
out
push
cmpsb
dec
and
jbe
negl
decl
test
mov
inc
dec
mov
add
in
xchg
std
adc
adc
jbe
imul
leave
mov
ds
dec
or
cmp
cmc
ljmp
inc
xchg
and
adc
pop
and
mov
iret
cs
js
incl
and
xor
or
xchg
outsl
push
es
aad
in
aam
sar
insb
jnp
lods
inc
xchg
rcrb
mov
adc
xchg
or
xlat
ret
cmp
bound
jp
gs
jne
lods
cli
cmp
mov
test
call
lods
add
pop
and
cmc
fsubr
sarl
scas
out
add
pop
test
ret
inc
add
aam
mov
sbb
and
and
mov
ret
inc
jmp
std
pop
inc
mov
mov
cmp
insl
mov
mov
icebp
pop
pop
inc
mov
enter
rsm
jp
loope
xor
ja
jb
adc
pop
loop
or
jno
cmp
xchg
idiv
sbb
xchg
adc
and
adc
mov
inc
fists
jae
imulb
cmp
ret
ljmp
adc
jo
pop
fildl
sbb
rol
mov
dec
hlt
push
or
push
pop
repz
xor
ret
cli
lgs
cld
adc
clc
cmp
lret
xor
repnz
sbb
xchg
inc
out
lahf
iret
xchg
mov
adc
jle
rorl
inc
aad
push
stos
loope
lret
cmp
aaa
xor
push
loope
dec
add
push
pop
test
lock
imull
mov
test
in
adcb
dec
ret
pop
frstor
mov
inc
mov
scas
in
into
mov
lret
aas
fisubl
sub
sbb
mov
add
cmp
pop
cmp
dec
mov
lcall
in
and
xlat
insl
jb
jmp
jns
movsb
xchg
outsb
push
dec
push
inc
aam
pop
dec
xor
mov
mov
push
in
imul
daa
popf
or
iret
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
jmp
shrb
push
sbb
mov
inc
notl
adc
mov
insb
push
pop
cmp
iret
dec
cli
fucom
fwait
push
ja
inc
mov
lahf
cltd
pusha
fidivs
jle
mov
ds
in
sub
adc
mov
inc
pop
fxch
cmp
jp
push
pop
int
and
mov
mov
les
pop
arpl
sbb
mov
push
insb
sub
cmp
and
arpl
xor
stos
movb
mov
adc
dec
add
pop
test
xor
iret
xchg
dec
fnsave
or
pop
lahf
pop
cmc
mov
sbb
test
call
popf
les
subb
aam
cmp
lret
outsl
xchg
movsl
dec
cli
into
and
lock
inc
sti
ror
pop
pop
out
and
mov
in
jo
icebp
shll
in
push
scas
push
sbb
in
fldl
cmp
outsl
call
mov
mov
inc
jne
jbe
dec
xor
xchg
repnz
mull
or
cli
xor
and
inc
lods
inc
pusha
cmp
push
outsb
dec
adc
cs
leave
adc
cmpsb
jno
notb
dec
cmp
xchg
jbe
nop
push
mov
mov
stos
push
or
push
bound
jne
stos
jmp
scas
mov
cli
add
lret
or
or
sbb
ja
iret
lea
mov
in
push
in
clc
sbb
dec
notl
insl
push
add
jb
jl
or
and
pop
pop
mov
jae
push
push
cmp
add
and
setle
push
mov
imul
enter
fs
push
loope
jno
xor
mov
dec
jecxz
scas
pop
rcrl
outsb
fcom
scas
mov
out
fdivl
xlat
xchg
add
divl
aad
repz
loop
cld
lds
aas
push
ret
and
mov
mov
in
outsl
daa
outsb
mov
divb
fisubs
xchg
fs
ret
mov
popa
sbb
pushf
int
jle
dec
andl
jmp
test
stos
inc
cmc
push
arpl
gs
cmp
fwait
imul
test
insl
mov
pop
pop
loop
jecxz
setnp
xchg
dec
jo
loop
popa
mov
stc
xchg
leave
lret
jecxz
mov
push
dec
mov
into
jnp
andb
inc
inc
or
es
std
popa
loopne
mov
adc
dec
movsb
xor
dec
push
pop
ret
push
lret
jb
adc
into
arpl
icebp
cmp
jns
adc
fdiv
into
push
cmpsl
mov
push
popa
cmp
insl
addr16
icebp
in
add
aad
jb
xlat
pop
mov
pop
jnp
insb
aaa
xor
dec
loop
imul
adc
daa
outsb
jl
fwait
xchg
movsl
shrl
neg
xor
sarb
mov
enter
sbb
xor
shlb
cmpsl
clc
lret
mov
cli
inc
ret
jb
cmp
mov
push
xor
xchg
les
mov
shll
dec
sti
icebp
iret
pop
mov
fisttps
push
add
pop
xchg
sbb
andb
rcr
mov
loope
and
xchg
push
push
gs
outsl
cmp
dec
insb
loop
loope
movsb
adc
shll
cwtl
xchg
dec
fdivrl
or
insl
ljmp
fadds
sbb
push
out
mov
ljmp
jb
cltd
inc
je
mov
mov
mov
push
xor
mov
test
loope
cltd
lahf
push
ror
mov
shl
repnz
and
shlb
push
jnp
add
pop
jp
mov
arpl
and
jl
ja
cmp
jmp
or
push
mov
jp
inc
dec
int
ds
sbb
stos
cmp
sbb
sub
int3
xor
cltd
ss
xchg
in
jno
and
dec
fidivrl
xlat
pop
sbb
push
mov
pop
ljmp
insb
pop
jecxz
pop
movq
push
sub
dec
out
sbb
or
or
or
pop
lahf
jmp
scas
mov
xor
push
add
fwait
nop
in
movsb
dec
dec
pushf
ljmp
mov
lods
shrl
inc
push
subb
jnp
mov
sub
adcb
loope
cmp
push
mov
bound
jge
mov
loope
dec
sti
push
xchg
jbe
jne
xlat
enter
jp
xor
pusha
scas
add
mov
scas
cmp
inc
scas
rcr
scas
nop
mov
cmpsl
mov
xchg
stos
mov
sbb
aam
fldenv
cmc
and
ljmp
sub
jbe
mov
mov
mov
sub
mov
cmc
je
pop
xchg
mov
xor
aad
push
mov
or
ds
mov
data16
push
cltd
fisttps
mov
pusha
push
xor
pop
lea
jae
sahf
push
sub
nop
stos
sub
andb
sub
aam
lods
jbe
in
push
xchg
xchg
xor
push
xchg
add
xor
stos
inc
fld
cmp
repz
cmp
hlt
pop
leave
sbb
inc
sub
pop
popa
add
outsl
ret
jl
and
mulb
push
push
adc
mov
cmpb
pop
sbb
push
je
dec
push
fnsave
add
daa
aas
cmc
fcomip
inc
cmp
pop
sarl
movb
int3
clc
cmpsb
jg
gs
leave
rorl
test
sahf
test
mov
lods
jnp
addr16
mov
inc
insl
sbb
cs
or
out
push
mov
addl
hlt
adc
ja
dec
xor
fimuls
inc
mov
hlt
pop
mov
jge
mov
sti
add
mov
jle
andb
rep
ficoml
scas
js
jnp
adc
jnp
cmp
hlt
dec
bound
adc
fmull
add
inc
and
ret
push
xchg
add
cli
xor
and
fiadds
sbb
ret
std
imul
loop
mov
inc
int
aam
shr
stos
loopne
les
or
push
dec
jmp
sti
out
pop
dec
mov
in
sbbb
xchg
add
loopne
dec
je
push
and
loope
lahf
add
add
bound
rcrl
mov
cwtl
or
inc
jae
sbb
mov
dec
add
sub
fwait
xchg
lret
cmp
jmp
int
push
xor
roll
push
or
repnz
lds
inc
jb
mov
xchg
push
outsl
enter
jp
sarl
lahf
out
dec
jecxz
test
push
inc
jge
fisttpll
xchg
sbb
or
add
and
or
sub
push
jnp
adc
ljmp
cmp
jge
xor
fdivrl
dec
push
fiaddl
out
inc
movsb
pop
jno
in
mov
and
adc
pop
xlat
and
and
fst
mov
xor
loop
and
push
cmp
movsb
xchg
sbbb
call
mov
mov
cld
mov
icebp
in
mov
scas
adc
cmp
and
fldcw
mov
sub
loope
rorl
jle
loopne
data16
movsb
fsubrs
popf
shlb
je
dec
push
in
pop
push
fsubrs
push
pop
lea
add
mov
movl
sub
aam
movsl
jge
cmp
jb
fidivrs
mov
rcl
out
dec
sbb
adc
push
fbstp
testb
push
mov
stos
xchg
ja
int3
mov
xchg
mov
ljmp
imulb
enter
cmp
movsb
adc
aaa
add
daa
and
addr16
and
shl
and
fs
pusha
xchg
lcall
sub
mov
push
sub
adc
mov
popf
enter
push
ja
ss
aad
mov
adc
pop
sbb
inc
sahf
xchg
aam
add
mov
fistps
out
push
cld
mov
xchg
test
pop
repz
xchg
sub
lret
xor
xor
and
in
inc
in
or
and
push
and
inc
call
in
pop
addr16
jecxz
gs
push
xchg
test
pop
rcr
arpl
std
jbe
or
sbb
les
lret
add
div
dec
jmp
add
cltd
mov
jmp
push
flds
sbb
jge
shlb
std
andb
imul
jl
sbb
or
test
or
bound
fsubrs
dec
pop
fsts
xchg
rorl
daa
xlat
xchg
test
push
je
scas
ljmp
rcrb
and
pop
add
mov
or
shl
jnp
insl
or
or
sahf
in
xchg
fiaddl
mov
loope
enter
enter
lea
pop
jns
in
repnz
sbb
mov
mov
leave
fs
push
lret
aam
and
in
push
lcall
mov
inc
and
jmp
xchg
mov
xor
inc
mov
push
pop
gs
mov
push
pop
push
mov
shr
lods
xchg
inc
or
xor
test
ss
idiv
push
daa
sub
or
and
adc
scas
lods
pop
fldenv
mov
imul
dec
andb
sub
mov
add
lret
sub
and
aas
push
popf
jnp
xor
sbb
pop
out
pop
leave
push
adc
popf
mov
ds
jne
xor
xor
pop
cmp
mov
mov
movsl
pusha
adc
jecxz
dec
dec
sub
cmp
mov
sub
push
in
mov
icebp
xlat
or
fldln2
push
jns
mov
pop
cwtl
add
outsl
or
adc
mov
in
scas
jl
lods
sbbb
jp
push
sub
xor
pop
std
push
cmpsl
mov
xor
xor
sub
push
bound
pop
loop
xlat
les
fmuls
sarl
add
cwtl
inc
xchg
jne
sbb
test
inc
push
movb
mov
xor
insb
adc
fldl
sub
aas
movsl
ss
push
loop
dec
add
out
dec
push
sbb
jno
imul
addr16
mov
lock
fwait
std
shlb
int3
inc
pop
jmp
push
mov
push
push
fsubrs
jg
add
loopne
push
or
mov
loope
scas
xlat
addr16
insl
ret
aam
push
dec
int3
das
aad
scas
mov
rorl
mov
sub
push
jns
cld
and
pop
inc
jmp
jge
push
mov
mov
aas
jmp
and
adc
fdivrs
insl
dec
aam
cmp
and
push
jo
pop
rcrb
or
pop
cmp
idivb
popa
insb
rcr
outsb
inc
out
mov
stos
sbb
out
lods
mov
nop
repz
imul
mov
xchg
jns
pop
push
xchg
mov
shlb
jns
cli
lret
sbb
cltd
pop
mov
loopne
bound
dec
loop
push
inc
push
sarl
xchg
xor
shl
lea
sahf
adc
pop
test
dec
xchg
push
and
jno
mov
clc
sub
cmpb
in
fidivs
pop
daa
rclb
inc
or
pusha
jno
inc
cmp
addb
adc
xor
cmp
xor
aaa
push
ds
pop
lahf
arpl
and
xchg
sub
cmp
rorl
nop
or
repz
daa
xor
aas
cmp
ss
push
inc
jbe
or
dec
imul
adc
daa
mov
jae
pop
mov
mov
ret
fiadds
es
movsb
push
loop
dec
sbb
push
xchg
xor
and
inc
push
jl
mov
mov
xlat
outsl
add
add
mov
mov
or
cmp
cs
inc
jp
sub
sub
sbb
cs
mov
mov
push
pop
shll
cmp
pop
pop
cld
int
lret
gs
int3
stos
ljmp
roll
ret
pop
mov
adc
and
fisubrs
xchg
jae
and
jb
xchg
out
or
repnz
das
lret
inc
stos
xlat
dec
and
ljmp
mov
pop
inc
leave
push
mov
xor
idivl
insb
fs
stos
mov
into
inc
scas
in
cmp
inc
mov
push
or
inc
sti
ss
aaa
fisttpl
sub
xchg
into
dec
jp
aad
jmp
pop
mov
and
cld
jg
mov
lahf
dec
data16
fbstp
adc
xor
rcl
jg
or
cltd
into
shll
dec
ret
pop
and
cmp
mov
out
xor
xlat
push
lods
mov
xor
cmc
jecxz
sbb
mov
push
in
mov
xor
fbld
xchg
stos
push
pusha
out
sub
ficoms
or
aam
repnz
aam
inc
lret
mov
nop
adc
add
test
xor
loope
sub
xchg
jecxz
mov
mov
sub
sub
and
fwait
enter
out
outsb
andb
in
add
lds
dec
and
jg
dec
out
mov
cmc
rcrb
adc
stos
iret
in
pop
xor
ret
jae
mov
roll
je
mov
cmp
cmpl
sub
jbe
mov
sbb
xor
pop
fs
xchg
mov
push
push
repz
sbb
sbb
inc
mov
addr16
cmc
xor
subl
jbe
dec
jne
sub
mov
divb
jbe
xchg
cmp
jle
xor
ficoml
mov
shll
or
add
add
adc
pop
xchg
cmp
sbb
xchg
test
ja
lds
cld
inc
adc
andb
stos
fisttpll
cli
addr16
xor
push
sti
add
adc
sbb
lcall
clc
sub
arpl
or
jp
insl
scas
push
mov
scas
fisttps
inc
push
inc
xchg
xchg
pop
push
int
sarl
mov
out
insb
ljmp
pop
sbb
iret
popa
out
mov
push
mov
cmp
lcall
xchg
dec
iret
loop
out
inc
daa
ret
ja
mov
mov
cmp
aam
int
xchg
inc
jnp
jne
leave
push
test
pop
pop
jge
cmp
pop
xor
pop
call
mov
add
pop
cmp
lret
fistpl
dec
and
dec
daa
push
adc
xor
popf
sub
mov
popf
aaa
pop
sbb
data16
push
out
mov
lods
inc
test
movntps
mov
jnp
test
push
jo
pop
jo
and
das
in
pop
fdivr
adc
insb
mov
ljmp
pop
sub
sub
insl
lret
mov
push
out
popa
enter
lahf
push
mov
aas
or
mov
add
or
fwait
rcrl
scas
jbe
out
shll
mov
nop
and
xchg
sbb
xchg
cs
mov
cmp
clc
cli
mov
mov
push
pop
sahf
mov
and
lret
pop
cmp
scas
add
stc
mov
andl
push
xorl
add
lret
sub
inc
sub
test
iret
arpl
xor
mov
sbb
je
pop
lock
notb
mov
push
cmp
jmp
ljmp
or
scas
or
hlt
mov
scas
push
add
xor
js
pop
aaa
aad
loopne
jle
mov
sub
mov
mov
ret
cmp
xchg
hlt
inc
add
xchg
xor
mov
stos
fs
jae
fmull
pop
sbb
leave
push
add
hlt
mov
subb
push
stos
bound
icebp
fstpl
fcoms
dec
mov
inc
movsb
sub
mov
inc
mov
lods
pusha
jnp
mov
sub
jbe
fs
orb
dec
sub
adc
loope
and
popl
adc
int
fcoml
or
div
movsb
or
jno
inc
mov
test
xor
call
vprotw
lahf
subb
pushf
pop
mov
dec
popf
pop
mov
leave
mov
mov
push
loop
mov
push
orl
adcb
mov
mov
jae
mov
ret
pushf
sub
and
lods
rcl
sbb
rol
es
pop
jp
dec
push
popa
pop
mov
scas
inc
jbe
test
pop
addr16
sbb
iret
xchg
dec
sub
ja
js
lahf
gs
out
pop
push
jno
pop
xor
pop
xchg
std
cmp
push
push
inc
sub
incl
xchg
fadds
aam
xchg
xchg
adc
xchg
push
pop
pop
pop
pop
lcall
fisttps
cmpsl
out
lods
mov
add
jl
cmp
pop
mov
cmpsb
jae
xorl
mov
aaa
mov
cmp
push
icebp
mov
sbb
xchg
shr
cs
stc
xor
and
mov
jae
sub
out
jbe
pop
inc
lret
repz
insb
adc
popa
push
inc
push
sbb
jmp
mov
insl
sbb
aad
out
in
roll
jle
pop
add
sbb
mov
add
std
aaa
cmc
ss
cmp
jns
popa
pushf
adc
dec
push
fs
adc
sub
sub
inc
pop
jo
dec
push
das
sbb
inc
mov
adc
mov
add
pop
mov
inc
scas
adc
xchg
sbb
cli
pop
adc
fcoml
push
push
mov
mov
mov
emms
push
das
pop
das
dec
mov
sbb
adc
dec
or
into
inc
sub
fcomip
cmovs
les
and
rorl
shl
aad
sbb
pushf
repz
scas
xlat
and
add
lds
pop
in
jo
pop
inc
or
ret
jmp
xchg
push
mov
pop
xor
xchg
scas
fwait
mov
aam
test
adc
push
cmpsb
lret
das
xchg
jmp
rol
or
jmp
jae
aas
jne
or
stos
lods
push
sub
test
adc
jne
jnp
fcomps
rcrb
sahf
push
add
imul
inc
out
mov
pop
sahf
push
cmpsb
mov
or
pop
pop
aad
sarl
mov
mov
dec
dec
call
adc
inc
push
subl
xchg
and
fstpt
or
imul
jo
pop
adc
daa
xor
xchg
jl
push
mov
testl
jge
stc
fsubrs
push
les
lea
mov
decb
push
pop
sub
mov
jae
out
fwait
lret
stos
lret
add
dec
lds
arpl
mov
lret
cmc
sub
push
or
lret
mov
fcoms
pop
repnz
and
adc
adc
imul
mov
fmull
aas
jbe
dec
repnz
lahf
ds
in
push
and
cwtl
insl
push
rcll
mov
jb
pusha
data16
push
fnstsw
movsl
clc
xor
xor
pop
rol
lahf
movsb
cwtl
jmp
inc
sti
mov
mov
mov
lret
test
aaa
outsl
xor
mov
insb
mov
mov
shr
loop
jl
idivl
lock
dec
lcall
les
repnz
insl
mov
or
test
cmp
repz
jns
adc
ds
cmp
lods
mov
je
and
iret
pop
pop
scas
je
push
test
cltd
lret
xchg
inc
jg
lret
fs
ja
scas
sub
cmp
mov
dec
loope
xchg
loope
push
into
lods
jmp
add
mov
test
sub
xchg
mov
or
adc
iret
movsl
mov
test
ret
clc
adc
adcl
hlt
daa
repz
cld
enter
test
push
jge
push
dec
ljmp
push
mov
loop
jle
adc
dec
push
and
xor
inc
jp
dec
sub
dec
icebp
ds
fcompl
pop
xchg
push
cld
rclb
pop
lcall
cli
rorb
xchg
shl
es
lret
lea
nop
cld
inc
push
ja
jns
pop
push
add
mov
mov
inc
arpl
shlb
jno
jmp
jp
frstor
loop
or
pop
adc
sbb
hlt
push
in
rcrb
notl
loop
jo
shrb
inc
add
fists
cs
xchg
or
loopne
sti
sub
jo
outsl
enter
je
or
cld
aam
push
fisubrl
pop
in
adc
pop
ror
dec
xchg
cmpsl
not
outsl
xchg
jl
leave
out
testb
std
push
std
inc
es
lahf
test
dec
mov
add
push
add
and
xchg
pop
rcr
fs
or
cmp
lret
mov
bnd
pop
fldenv
push
jmp
inc
es
dec
xor
push
and
cmp
sub
inc
mov
mov
dec
jno,pt
push
xor
lret
cmpsb
sbb
out
test
loope
shrb
adc
cmp
pop
daa
cli
add
dec
hlt
xor
mov
cli
jbe
cmpsl
jo
notb
in
outsl
dec
cmp
ret
xor
jge
jp
bound
jns
call
in
mov
lods
aad
rcrl
cmp
testl
pop
push
cmp
ja
ret
add
push
cmp
mov
xchg
lock
stos
mov
add
jae
mov
mov
push
test
jno
insl
and
ret
push
xchg
outsb
lahf
int3
dec
ror
push
pop
pop
daa
mov
xchg
jge
pusha
iret
mov
jle
pop
cmp
mov
test
popf
fmul
jne
pop
or
movl
in
test
ja
pushf
jle
cs
inc
xchg
dec
cmp
mov
test
push
outsb
jge
and
mov
mov
jmp
xlat
popf
loopne
imul
loopne
popf
dec
pop
imul
xor
dec
mov
xchg
push
nop
and
xchg
sub
mov
mov
mov
adc
pop
cwtl
cwtl
inc
mov
je
pop
fldenv
add
loopne
xor
jge
or
dec
dec
repnz
add
pop
and
sbb
loop
in
popa
shrb
movsb
xor
mov
fwait
or
nop
xchg
int
xchg
movsb
sahf
and
jbe
mov
push
inc
int
imul
push
pop
mov
dec
lcall
xchg
out
mov
and
shl
and
icebp
sub
and
mov
sbb
or
pop
enter
adc
jg
popf
ret
dec
xchg
scas
shlb
ja
push
sub
or
pop
sub
mov
add
push
icebp
shl
fdivrs
loop
int
pop
adc
es
lods
mov
dec
or
xchg
xor
add
mov
add
ret
data16
fstpt
inc
daa
insb
mov
mov
ret
xor
sbb
cmpsl
jns
and
push
sti
insl
int3
cmp
loope
adc
mov
xchg
jl
std
pusha
dec
repnz
sbb
int
mov
mov
add
addr16
nop
rol
jge
sbb
mov
cmc
xchg
jae
sub
int
xchg
mov
popa
or
adc
jge
aas
nop
sarl
std
aad
stos
jne
ja
rcll
xlat
subl
add
mov
jp
jge
iret
loopne
cld
sbb
scas
xchg
mov
xor
imul
inc
fs
mov
aad
pushf
or
clc
fdivp
lea
ficoml
shrl
fnsave
popa
sti
divb
pop
jge
aas
jp
sti
add
jbe
jne
dec
mov
mov
push
jbe
aaa
xchg
int3
adc
mov
mov
lahf
xor
dec
cmp
enter
std
popa
inc
lock
push
inc
mov
loope
fnstenv
cmp
mov
mov
cs
xchg
and
mov
addl
mov
sbb
lods
jbe
jo
push
jbe
shrb
adc
inc
into
sbb
add
pop
jecxz
adc
push
mov
dec
push
je
mov
sub
xchg
cmp
cltd
pop
jns
cmp
ret
jmp
dec
cmp
adc
aas
jb
ret
mov
sub
adc
shr
mov
and
sub
mov
iret
mov
inc
jl
sbb
push
push
pop
sbb
sbb
pop
lds
int
fnstcw
mov
cmpsb
or
push
and
cld
fwait
imulb
xor
loopne
pop
lea
js
or
sbb
cmp
test
cmpsb
mov
lret
or
out
pop
scas
pop
leave
jg
pushf
mov
test
popa
xchg
stc
pushf
call
mov
sub
int3
scas
out
cmp
xchg
lea
add
jg
sub
jbe
enter
and
stos
add
bound
xor
imul
xchg
mov
mov
pop
pop
dec
and
and
mov
les
sbb
or
js
test
imul
inc
push
push
sti
adc
mov
shl
jbe
dec
adc
mov
sahf
xchg
pop
insl
xlat
pushf
cmp
jmp
dec
test
dec
pop
push
xlat
stos
hlt
jl
or
lret
daa
dec
mov
jo
add
push
or
jle
xchg
rorl
mov
stos
insl
xlat
xchg
lock
push
lock
call
mov
cmp
xorb
mov
xchg
fcomps
xor
cmpsl
add
push
cmc
push
jl
push
gs
or
ret
jnp
aaa
pop
mov
dec
insl
stos
add
adc
mov
push
jnp
xorl
push
sub
rorl
sbb
insb
lret
hlt
push
fildll
stos
call
mov
ljmp
xchg
dec
outsb
subb
push
sbb
mov
mov
cmp
lea
les
cmp
int
cmp
fidivs
popf
mov
cmp
wrmsr
push
lds
or
js
int3
nop
insl
or
jne
jmp
cmpsl
mov
adcl
sarl
push
icebp
mov
pop
sbb
int
and
les
aam
jmp
cs
sarb
inc
xchg
jbe
test
xorl
cmp
in
out
arpl
movsb
push
test
int3
inc
je
fldenv
xchg
jnp
fidivrl
mov
jge
insl
xchg
adc
fdivrp
cli
andb
xor
or
fstps
leave
and
test
aad
outsl
mov
sahf
pop
iret
mov
fwait
cmpsb
shlb
jge
daa
imul
cli
sbb
xchg
inc
xchg
sbb
repz
sub
add
data16
in
in
dec
pop
cs
les
fnstenv
pop
ljmp
adc
cwtl
cmp
cmp
cwtl
and
mov
xchg
jmp
xor
sub
insl
push
mov
das
cmpsb
mov
push
dec
fwait
movsl
mov
adc
stc
fs
and
add
fwait
mov
pop
lock
or
shlb
ja
cld
xor
push
dec
mov
mov
incl
jo
fs
jmp
mov
shl
xchg
lahf
mov
mov
leave
sub
xchg
test
xor
cld
popa
push
loopne
mov
sub
or
fdiv
call
test
aaa
loop
pop
inc
jmp
stos
jmp
hlt
jecxz
repnz
cmp
push
mov
mov
bound
faddl
notl
dec
mov
int3
stc
test
push
adc
and
inc
cmp
jae
das
mov
inc
mov
and
add
fadds
cmp
stc
lock
xlat
pop
push
lock
outsl
ds
fcoms
cmp
sbb
scas
je
pushf
cmp
sub
mov
add
negl
sub
lahf
leave
cmp
adc
push
pop
dec
adc
dec
cmpl
orb
dec
aas
mov
je
les
push
shlb
pop
nop
cld
fsubl
cmp
insb
sbb
and
test
fnstsw
push
ss
addr16
aam
jge
arpl
stos
inc
popf
outsb
push
mov
mov
in
add
lret
lods
repz
mov
ret
jmp
scas
cwtl
aaa
arpl
test
push
outsb
int3
inc
fisubrs
movsl
rolb
inc
dec
dec
sub
mov
xchg
pop
sbb
push
stc
stos
pop
adc
pop
dec
and
cmp
arpl
int3
sub
and
pop
outsl
pop
mov
pop
outsb
lahf
xchg
pop
rcrb
dec
aas
popa
mov
outsb
cmp
outsb
ljmp
adc
stos
sub
lahf
sbb
test
lock
mov
int3
sbb
dec
lds
rcrb
arpl
and
cmc
cltd
push
mov
sarl
stos
icebp
cmp
sbbl
adc
cmp
enter
pop
call
and
xlat
sbb
testl
mov
sbb
push
mov
insl
add
add
and
jnp
cmp
add
push
push
test
inc
insb
lds
cwtl
and
jecxz
enter
xchg
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
shr
ret
mov
xor
addl
and
shr
ret
jmp
mov
and
loopne
in
pop
lods
lea
adc
dec
adc
sub
mov
and
mov
aam
jbe
add
lds
pop
int
cwtl
mov
setae
and
mov
inc
jno
pop
test
pushf
sub
add
dec
repz
or
cmpl
and
shrl
push
cmp
jmp
mov
mov
or
mov
fscale
in
xchg
sbb
inc
add
je
mov
scas
push
cmp
and
shrl
repz
xchg
jb
xor
push
call
dec
inc
dec
rorb
push
xchg
incb
mov
fidivl
pop
test
mov
insb
mov
aaa
xchg
add
push
cmc
test
push
sub
fidivrl
pop
mov
jle
int3
pushf
mov
xchg
dec
into
and
je
mov
mulb
imul
xor
push
xor
clc
cld
jge
adc
rolb
mov
sub
mov
cmpb
data16
lods
or
push
sbb
pop
adc
cwtl
insb
push
loop
xlat
out
xchg
loope
jb
push
push
adc
rcrb
je
xor
pop
pop
mov
and
outsb
sub
cmpsb
sbb
aaa
rolb
mov
mov
add
in
repnz
jae
dec
je
in
pop
mov
repnz
xchg
jl
adc
scas
jl
out
adc
daa
incl
dec
cld
lock
pop
filds
cmp
into
pusha
dec
stc
inc
insl
es
mov
lahf
iret
inc
cltd
xor
mov
pusha
sti
mov
in
lods
jmp
in
pop
sub
mov
jne
cltd
lahf
js
or
xchg
cmp
dec
inc
mov
ret
shl
sbb
xchg
adc
xchg
jecxz
int3
push
or
push
mov
jo
fstpl
jmp
cld
fxch
jns
in
in
mov
in
test
mov
es
xchg
sub
push
addl
push
and
aaa
inc
xor
xchg
sahf
cmp
shrb
lahf
mov
loopne
sub
imul
sti
int
mov
dec
aad
xor
fcompl
mov
lods
mov
sbb
sub
sbb
aaa
lcall
out
mov
mov
adc
inc
xorb
mov
inc
push
jb
std
inc
lods
int
out
add
jne
mov
dec
and
fs
lock
jge
or
pop
xchg
cmp
jns
test
mov
mov
adc
pop
xor
shll
addr16
push
mov
sub
cmpsl
repnz
movsl
xchg
jo
or
jbe
adc
adc
iret
roll
movsb
cmp
nop
dec
imul
js
cltd
mov
mov
dec
adc
aad
cmpb
outsl
inc
mov
push
xchg
ficoml
sub
ss
inc
aaa
jb
nop
mov
enter
jecxz
fldt
dec
inc
push
shr
pop
xchg
fldcw
mov
ret
mov
imul
out
mov
mov
fwait
ret
into
cltd
sbb
test
xchg
xor
addl
ret
stos
cmp
int
adc
jb
push
xchg
rorl
ds
mov
ficoms
and
sbb
cmp
in
adc
pusha
fs
mov
sbb
call
and
movzwl
repz
bound
popa
push
jmp
mov
sbbb
movsl
xor
fsts
pop
outsl
mov
cli
jnp
lahf
dec
rcl
or
sbb
mov
xchg
in
jmp
mov
icebp
mov
xstore-rng
cmpsl
movl
or
aad
lods
fldcw
mov
or
rorb
push
and
or
mov
add
int
pop
pop
dec
mov
imul
xchg
adc
pop
jmp
push
pop
xchg
add
xor
cwtl
lods
cmpsb
je
ljmp
in
sti
inc
jne
invd
arpl
test
pop
jbe
jns
out
xor
shll
push
inc
and
cwtl
and
lods
xor
xor
or
shr
cwtl
mov
sub
add
mov
pusha
pop
mov
popf
iret
pop
cmp
cs
test
pushf
insl
push
or
rcr
fcompl
mov
es
fimuls
stc
jl
iret
inc
lahf
movl
inc
mov
push
and
inc
cmp
in
mov
mov
mov
inc
sub
xor
scas
sub
lea
xor
mov
ficomps
pop
pusha
and
enter
insl
mov
cld
lret
fiadds
enter
cld
pop
mov
lahf
or
mov
and
roll
mov
shrb
sbb
pop
and
mov
sbb
sbb
ja
add
shlb
jge
imul
lahf
xchg
jbe
xlat
mov
lds
xor
and
pop
out
inc
mov
mov
mov
psubsw
and
xor
pop
xchg
mov
dec
data16
cli
push
aas
xor
subb
push
fwait
scas
fsubrs
xchg
clc
jg
mov
stos
jae
adc
xchg
mov
add
je
cmp
push
decb
les
js
push
cmc
insl
ljmp
adc
jbe
adc
jne
lahf
fildll
shlb
call
mov
jl
pushf
pop
sahf
and
pop
lahf
pushf
adc
pop
mov
fsubs
aam
sbb
mov
jle
test
inc
daa
add
lds
cltd
inc
test
bound
addr16
rorl
loope
and
lahf
imul
out
add
scas
lds
std
popf
sub
ss
sbb
test
call
or
in
into
stos
rcr
jbe
inc
ss
xor
jp
xchg
shll
stos
xchg
std
sub
cmc
mov
movsb
or
push
cld
in
mov
pop
inc
aad
jnp
les
or
or
xchg
xor
pop
pop
jmp
fsubs
inc
nop
test
or
add
enter
sahf
cmp
andb
jno
rcrl
sti
dec
jne
sub
into
jne
sbb
int3
sub
jecxz
or
pop
and
sub
pop
adc
in
xor
jg
add
pop
dec
inc
aaa
sub
cmc
lods
mov
enter
mov
xor
testb
sub
sub
addb
test
call
cmp
out
jecxz
out
nop
inc
fucomip
sti
xor
mov
xchg
push
movl
stos
jno
int3
loop
div
push
aam
cmpsl
push
sbbb
fs
ret
std
rcl
aam
dec
sub
mov
mov
push
xchg
push
ficomps
mov
sbb
fisubrl
xor
jp
adc
ud2
xchg
mov
fmull
pop
aam
mov
leave
push
mov
sahf
pusha
data16
push
das
jo
adc
jo
lods
jle
repnz
or
xor
sub
xchg
loopne
stos
cmc
sub
add
mov
pop
orl
mov
aam
push
jge
mov
js
push
sub
or
fistps
cli
loop
mov
mov
mov
pop
sbb
pop
lods
add
and
les
pop
stos
shlb
addr16
or
and
out
inc
xchg
lcall
and
and
cmpl
inc
dec
outsb
lock
addb
or
xlat
mov
push
adc
je
imul
imul
rclb
icebp
lods
dec
sbb
fisubl
mov
dec
mov
xchg
jp
lcall
test
jle
sbb
fcomp
aaa
jno
cmpsb
push
add
sub
aaa
mov
xlat
je
and
xchg
sbb
cs
mov
dec
dec
mov
sbb
dec
mov
inc
jb
and
fsts
cmp
mov
shll
and
pusha
jo
lds
mov
inc
int3
mov
test
stos
mov
inc
mov
ficoml
scas
or
mov
aad
xchg
movsl
inc
push
stos
or
loope
add
and
mov
leave
aad
mov
scas
inc
cmp
fcmovb
dec
jge
divb
insl
mov
je
jg
jge
push
scas
test
push
xor
in
push
fidivl
sbb
xor
cmpsb
cmp
test
jl
pop
or
mov
adc
add
ret
or
mov
je
mov
ficoms
ret
jle
imul
sub
mov
daa
and
ljmp
and
jb
sti
pop
ss
push
push
cld
ja
jg
dec
lahf
sub
popf
cld
cltd
adc
or
push
out
push
out
cmp
dec
mov
sahf
mov
adcl
adc
out
dec
adc
or
mov
mov
inc
and
cmp
cmpsl
xchg
bound
add
push
cmp
scas
jnp
je
call
ficoms
mov
xchg
fisubs
adc
cmpsl
mov
into
movsl
lds
push
divb
push
and
and
es
push
movl
arpl
mov
inc
shl
in
add
cwtl
adc
xchg
je
bound
out
jbe
in
sub
mov
dec
cmp
test
je
out
sub
scas
or
mov
inc
fcmovu
inc
daa
stos
fnstenv
jl
xor
adc
mov
pop
movsb
push
daa
imul
pop
jge
xor
fstps
sti
xchg
push
jns
out
es
idivb
xlat
mov
jle
xlat
andps
jb
sbb
xor
gs
daa
test
ror
pushf
insb
rcl
movsl
jo
inc
test
lds
std
pop
push
xchg
enter
fstpt
std
cmp
lea
pop
dec
mov
div
idivl
xchg
enter
xchg
cltd
jmp
mov
adc
sub
cld
inc
loop
xchg
sbb
sub
mov
and
into
sti
insl
adc
lcall
in
mov
jg
loop
sbb
imul
sbb
add
cld
fdivl
adc
jnp
mov
xor
cmp
int
ret
add
fwait
mov
in
mov
adc
xor
add
jle
dec
jb
cmp
and
xor
mov
jno
mov
pop
or
xor
enter
jmp
leave
and
cmc
test
push
or
cli
jno
mov
pop
inc
mov
pop
loope
or
sub
mov
imul
mov
add
xor
mov
ret
loope
scas
fnsave
out
cmp
or
xlat
jp
sub
dec
mov
cld
add
dec
inc
das
push
sbb
test
lods
cmc
pop
sti
nop
fiaddl
popa
std
and
sub
icebp
add
pop
pop
scas
adc
lock
jmp
xchg
mov
or
sub
and
mov
inc
jecxz
push
iret
and
lret
or
mov
xchg
leave
push
movsl
mov
in
hlt
dec
push
jle
data16
xlat
je
mov
sbb
lret
xor
sbb
sub
test
xchg
sahf
mov
leave
ja
mov
and
nop
lcall
mov
or
pusha
adc
cltd
add
xchg
scas
adc
mov
sub
les
in
jg
xor
pop
sub
xor
jge
lcall
push
adc
cld
faddp
notl
shl
popf
ss
ja
arpl
push
push
pop
add
int
nop
hlt
sbbl
out
out
lret
lret
cmp
adc
and
mov
pushf
jno
pop
cltd
jmp
pushf
and
mov
mov
jns
mov
dec
nopl
and
in
stc
xor
lods
ficomps
mov
xor
inc
sbb
push
iret
imul
jne
pop
pop
fisubrs
loopne
mov
sbb
add
push
mov
jnp
mov
ljmp
push
and
bound
inc
jno
push
in
xchg
sbb
fimuls
mov
sarb
jl
add
sub
inc
es
pushf
lret
shr
mov
mov
divb
and
jno
jae
scas
lods
pop
inc
ja
sbb
jmp
lret
jo
insl
aad
mov
daa
test
out
std
out
outsb
bound
inc
in
push
stos
mov
cmc
fildll
push
ret
push
pop
mov
cmp
ja
jo
mov
dec
out
es
inc
add
pushf
cmc
xchg
nop
and
push
inc
mov
fstps
jno
in
mov
lods
xchg
ja,pn
ja
insl
mov
and
in
filds
and
jbe
out
lock
pop
dec
test
repz
clc
mov
daa
dec
scas
loopne
jge
xor
pop
mov
inc
orb
or
rcr
inc
mov
aad
nop
sbb
push
cwtl
popf
dec
add
dec
in
popf
pop
push
push
xchg
sub
bnd
loopne
add
mov
or
repz
sub
mov
cmp
nop
nop
pop
fld
add
rcr
mov
mov
mov
dec
and
pop
mov
in
jecxz
mov
test
xchg
sub
imul
add
stos
out
aam
jb
push
loop
jecxz
xor
push
or
add
into
and
lds
mov
sub
loopne
mov
push
mov
xor
sbb
mov
fisttpll
cmpl
out
mov
imul
jo
cmp
clc
addr16
cmc
jo
sbb
filds
cmpsl
add
dec
in
cmp
jns
mov
shrl
mov
pushf
out
mov
js
shlb
les
and
mov
xor
jp
in
mov
jmp
ret
hlt
inc
cmp
mov
mov
ficompl
xor
icebp
inc
xlat
or
xchg
inc
xchg
mov
cmp
test
and
sbb
jecxz
inc
addr16
pop
les
mov
nop
and
add
pop
adc
jno
mov
push
stc
fsubrp
adc
testl
fisubrs
push
sbb
fcmovnb
mov
jecxz
mov
fsubl
movsb
xor
jle
sub
push
les
xor
movsl
popa
js
xchg
rdpmc
pop
ja
sar
inc
shll
out
fcomps
popf
hlt
data16
fstl
inc
or
in
add
fwait
dec
mov
bound
shrl
jmp
mov
cmp
pop
fiaddl
ss
hlt
push
xchg
cmp
mov
adc
mov
shll
pop
pop
dec
nop
fsubp
cwtl
mov
pop
dec
xor
mov
sbb
mov
xchg
mov
cmpsb
cmp
lds
and
jb
in
add
sarl
sahf
pop
fs
scas
addl
popf
inc
xlat
in
inc
push
cmp
and
sub
or
mov
cmc
rorb
cmp
push
sbb
loopne
insb
dec
mov
bt
into
mov
dec
sub
dec
push
inc
mov
add
jne
cmp
addr16
mov
dec
and
dec
clc
lret
scas
test
in
push
arpl
push
pop
sbb
jecxz
lret
mov
push
add
push
push
lahf
push
inc
xlat
xor
or
popf
push
aad
mov
ss
push
dec
inc
sahf
pop
xchg
push
adc
loop
dec
push
ss
push
add
ds
shrb
and
imul
adc
dec
cmpsb
sahf
aam
cs
cli
jp
mov
rcrl
jb
jbe
mov
stc
mov
and
mov
sub
iret
jmp
mov
les
lret
mov
push
mov
aad
pop
movsl
adc
orl
cmc
in
sub
or
sbb
jnp
pcmpeqw
mov
mov
cmpsb
sbb
add
push
xchg
pop
pushl
stos
loopne
mov
cmpsb
adc
cmp
loopne
xchg
pusha
and
inc
nop
jmp
imul
sti
insl
jp
arpl
nop
add
hlt
add
fisubrs
gs
pop
dec
addb
push
inc
ljmp
fidivs
push
int
jb
std
inc
xchg
xchg
in
xor
xor
push
mov
icebp
cmp
xchg
pop
push
or
mov
test
fstpt
inc
sahf
cmp
cmp
mov
or
mov
xor
jno
push
pop
push
push
and
pop
sarl
inc
fsubrs
out
xchg
shll
xchg
add
lcall
lret
cmp
popf
movsl
in
inc
jle
test
add
cmp
addl
push
push
mov
out
lcall
mov
xchg
mov
ss
insb
je
shll
data16
push
int3
cwtl
xlat
xchg
loop
test
nop
pop
stos
lods
cli
js
mov
aad
jge
stc
pop
add
xchg
insb
loop
jae
inc
sbb
aas
fsts
sub
sbb
mov
cmp
jmp
and
clc
cmp
sbb
insb
pop
lods
fdivs
jecxz
mov
jle
insb
ljmp
filds
insb
pop
mov
mov
iret
fistpll
inc
aam
movsb
inc
lret
jae
mov
rcrl
adc
cmp
jp
xchg
sbb
lods
out
lret
xchg
popf
jp
or
or
mov
in
xchg
das
pop
adc
pop
inc
mov
push
jb
in
lea
jno
cs
cltd
ret
stc
sbb
fmull
repz
jns
mov
addr16
pusha
pop
mov
loopne
lret
xor
iret
pop
jle
imul
or
dec
xor
add
adc
imul
cmp
leave
jge
pop
es
xor
mov
ljmp
mov
pop
cltd
test
mov
gs
and
push
stc
fcoml
test
mov
subl
xor
xchg
scas
pop
push
mov
push
inc
ret
imul
arpl
xor
lahf
add
mov
push
adc
ret
mov
pop
push
aaa
adc
movsb
stos
mov
mov
int
jns
and
xchg
test
cltd
movsl
arpl
xlat
dec
shl
inc
or
sub
xor
call
loope
fnsave
call
sahf
iret
cmc
mov
sbb
inc
insb
enter
fsubl
movb
mov
fimuls
jp
jne
sub
add
cltd
mov
leave
or
dec
in
ja
mov
adc
fs
std
test
loop
inc
in
movsb
mov
les
dec
xchg
xlat
lahf
fsts
movsb
xor
mov
mov
ret
mov
js
dec
lahf
movsl
addl
sti
sbb
arpl
and
mov
and
or
nop
or
lods
test
bound
xor
lods
lahf
push
rcrl
push
stos
jg
xchg
inc
loop
mov
addb
xor
imulb
lds
mov
fstl
inc
cmp
or
sub
das
in
dec
psrad
cmp
test
fstpt
mov
jle
xor
std
jmp
push
or
xchg
dec
ss
in
push
dec
inc
daa
add
into
mov
daa
inc
inc
xor
test
shrb
not
decb
fistl
test
mov
sbbb
sub
mov
xchg
stos
jns
test
cmp
not
addr16
std
sahf
out
shlb
fistl
jns
mov
add
sbb
sbb
pop
das
outsb
lahf
movsb
inc
imul
rol
adc
add
jle
iret
or
xchg
mov
arpl
jns
mov
cmpsb
cmp
jecxz
out
hlt
sbb
sub
clc
aas
ja
push
idivl
cli
or
sbbl
mov
sub
add
test
xchg
lcall
xchg
fs
insl
ljmp
push
dec
inc
mov
shl
xchg
add
aaa
out
icebp
lahf
stos
mov
loop
inc
into
mov
nop
push
inc
sbb
jns
loope
adc
sbb
pop
push
push
sub
sub
and
negb
and
dec
in
xchg
xor
or
mov
decb
fsubrp
out
or
xchg
sbb
sahf
scas
call
fstl
jae
sbb
mov
dec
es
mov
lea
insb
push
mov
out
mov
push
jg
pop
test
mov
mov
aam
pop
popa
jbe
and
jge
and
inc
scas
out
lahf
aas
mov
out
loope
hlt
add
cwtl
addb
cmp
rclb
jl
cmp
fstl
push
imul
es
in
ret
cld
sub
in
dec
inc
sbb
cmp
cs
popf
jns
jg
and
test
inc
cmpsl
lock
icebp
pop
popf
aam
fcoms
insl
scas
mov
mov
je
jmp
mov
inc
std
adc
mov
and
or
sub
push
fists
stc
and
pushf
scas
test
ret
adc
inc
inc
rorl
jo
or
inc
punpcklwd
fstl
sub
rorl
mov
push
cwtl
lret
sbb
divl
das
js
push
lock
and
in
bound
ret
lahf
xlat
add
std
adc
inc
mov
xchg
mov
aam
pop
fsubrl
sahf
jle
nopl
jns
jge
les
popa
rcrl
lods
mov
ficoml
sub
test
cmp
gs
sahf
push
fisubl
jmp
jg
or
jo
bound
cmpsb
jbe
mov
push
bound
mov
push
push
jl
loopne
add
sub
rcrb
std
mov
dec
jae
dec
push
adc
dec
pop
scas
inc
mov
xlat
dec
sahf
mov
divb
out
mov
in
cld
jg
mov
leave
pop
pop
popa
and
and
jnp
cli
repz
pop
pop
enter
mov
ja
rcl
es
push
frstor
and
rcr
mov
inc
sbb
push
jecxz
data16
sub
jbe
sbb
stos
cltd
adc
inc
movsl
stos
push
gs
imul
inc
aaa
ja
xchg
sahf
lret
adc
rcl
add
nop
push
sbb
and
imul
pushf
or
js
mov
xor
lock
dec
icebp
cli
cmp
ljmp
bound
sub
push
inc
stos
pushf
dec
sti
adc
xchg
xor
xor
icebp
std
hlt
inc
addl
fisubrs
adc
aaa
fildl
cli
dec
xchg
int
push
mov
adc
push
dec
mov
jg
pop
add
icebp
les
enter
loop
fisttps
lret
enter
cmpl
jge
scas
shr
mull
pop
je
and
jne
dec
sti
aas
xor
cmp
mov
scas
adc
or
jmp
push
pop
cmp
mov
loope
mov
js
dec
lock
fcoms
imul
pop
in
loopne
xchg
mov
mov
out
fisubl
mov
sarl
int
enter
xchg
rcrb
jne
clc
leave
sub
adc
lock
out
push
arpl
testl
xorl
mov
sub
out
shrl
aas
mov
adc
pop
jo
mov
xchg
xor
out
sarb
out
jecxz
xlat
pusha
adc
push
push
or
pop
sbb
out
lock
mov
xor
ja
adc
je
js
xchg
jo
mov
ret
cltd
jg
loopne
mov
jmp
jb
jb
pop
pop
push
into
jmp
sahf
fcomp
fisubl
mov
jmp
xor
fwait
dec
aaa
mov
mov
into
mov
dec
aad
sub
scas
jle
xchg
dec
cli
inc
lock
adc
mov
pop
sbb
je
pand
sub
lcall
movb
mov
out
out
fmull
mov
jnp
push
mov
jecxz
repz
rcrb
shlb
push
inc
xchg
pop
pop
arpl
das
pop
dec
js
call
mov
fwait
inc
mov
into
nop
test
jp
or
mov
mov
pusha
fwait
aam
inc
dec
ret
cltd
mov
and
dec
out
mov
pop
mov
aam
mov
mov
ret
das
xor
outsl
cmpsl
flds
shl
or
movsb
daa
xchg
xor
les
mov
shrl
lock
jge
mov
pusha
neg
outsb
adc
outsb
int3
xlat
and
dec
mov
aaa
mov
mov
sti
jbe
adc
inc
enter
adc
shrl
dec
shrl
lahf
fwait
jmp
test
aam
fdivl
push
fucomp
test
sbb
xchg
test
arpl
outsb
hlt
mov
cmpl
mov
jnp
and
dec
and
pop
xchg
push
ja
mov
stos
mov
popf
or
aam
stos
aam
repnz
out
mov
jo
or
pop
pop
fadds
in
inc
jae
adc
mov
in
mov
mov
insl
lods
sahf
pop
scas
cmpsb
and
mov
ja
into
mov
cmp
popa
arpl
test
ret
cltd
out
add
sub
mov
sti
ficoml
xor
arpl
cmpsl
add
or
das
and
stos
mov
out
iret
cltd
mov
mov
cmp
push
leave
sub
xchg
out
andb
xorb
ja
mov
push
fadds
push
sbb
mov
lret
mov
xor
leave
or
jo
pop
enter
insl
cmpsl
loopne
jmp
cwtl
test
cmp
fstps
mov
cmp
in
jl
jno
addr16
push
xchg
loop
sub
dec
fbstp
cmp
jae
lock
push
xchg
test
popa
insl
push
negb
jns
and
rclb
gs
inc
clc
jge
scas
add
pop
xchg
and
xor
int3
or
xor
xchg
fiaddl
mov
hlt
inc
adc
addr16
rcr
mov
cli
mov
stos
and
mov
int
ret
mov
sub
out
divl
in
mull
add
lcall
lds
bound
jl
outsl
pop
push
push
inc
nop
ljmp
imul
cmp
pop
inc
sub
mov
add
fcmovnb
mov
cmp
iret
test
ret
dec
xlat
out
add
cmp
jne
dec
mov
sub
mov
sbbl
test
hlt
lret
popa
push
xchg
jmp
inc
bound
mov
mov
cmp
mov
rolb
adc
sub
das
xor
xor
hlt
cs
stos
test
pop
test
fisubrs
xchg
hlt
in
outsl
push
cmp
sbb
mov
cmp
add
sbb
push
mov
into
cs
xchg
sarb
add
add
xlat
test
bnd
pop
jae
imul
loop
scas
or
fdivrl
or
xor
adc
and
stos
inc
sti
pop
movsl
gs
outsl
push
int
sub
test
ror
repz
mov
imul
rcrb
nop
cmp
sbb
jbe
es
decb
aas
lcall
push
mov
push
sbb
stos
mov
jmp
int
es
and
pop
cmpsb
lock
lret
cmp
sbb
ret
sub
stos
mov
add
dec
sar
and
add
xchg
mov
pop
adc
xlat
adc
gs
mov
cmp
push
call
sbb
push
cmp
pop
into
push
mov
lods
xor
jnp
mov
cmp
mov
inc
inc
bsf
cmp
fistps
adc
mov
and
xchg
xlat
mov
pushf
in
or
push
mov
fldl
ret
imull
dec
ljmp
jp
lock
inc
jp
filds
repz
push
sub
arpl
push
xchg
xchg
adc
mov
js
pop
stos
inc
cmp
jo
es
movsb
adc
jle
and
hlt
and
pop
mov
in
popf
jmp
lods
xor
leave
dec
ss
stc
add
dec
cmpsl
pop
push
xchg
popa
insl
addl
cmp
mov
ret
adc
dec
pop
or
push
mov
xchg
inc
jnp
int
mov
or
jo
adc
xor
dec
dec
rorl
mov
popa
mov
mov
lahf
test
stos
insl
mov
sbb
fwait
out
into
test
into
testb
push
jno
xchg
repz
add
in
gs
jp
jl
push
mov
aaa
sub
inc
cmpsb
loop
lret
test
add
jp
xchg
adc
std
fistpll
sub
icebp
std
sahf
sahf
shrb
mov
shr
outsl
cmpsl
adcb
rorb
arpl
add
add
icebp
mov
scas
xor
dec
inc
xorl
movsl
add
mov
add
lods
sub
xor
shlb
ret
push
mov
sub
sbb
movl
mov
orl
mov
movl
cmpl
mov
movl
not
not
jmp
mov
ja
push
push
call
or
mov
xor
xor
add
or
sbb
add
adc
movzwl
xor
dec
mov
movl
addl
movl
cmpl
not
movl
jmp
mov
mov
jne
pushl
call
inc
movzbl
xor
mov
or
neg
and
adc
xor
movl
add
movl
movl
cmpl
mov
mov
jmp
mov
movl
jb
push
push
push
call
add
movl
xor
xor
movl
mov
mov
cmpl
mov
movl
movl
jmp
mov
jg
push
call
subl
or
add
sub
and
xor
add
sub
mov
andl
mov
sub
mov
push
mov
sbb
mov
cmpl
movl
movl
mov
jmp
mov
je
pushl
push
push
push
call
orl
dec
adc
xor
xorl
xor
or
mov
andl
push
addl
push
notl
push
push
incl
call
mov
mov
xor
and
not
xor
and
xor
or
mov
sub
xor
and
cmpl
mov
movl
jmp
movl
jg
pushl
push
pushl
push
pushl
pushl
pushl
call
add
xor
add
and
add
mov
and
add
mov
jmp
movsl
add
mov
stos
cmpsb
pop
sbb
js
adc
adc
aas
or
aaa
adc
push
add
ds
decb
movsb
ret
jmp
mov
and
filds
mov
loopne
inc
jmp
sarb
xor
inc
push
cmc
xor
push
int3
pop
mov
inc
inc
les
sbb
lcall
mov
jae
leave
icebp
aam
movsl
fldcw
cltd
add
arpl
dec
jmp
cmp
mov
push
daa
cmp
add
push
in
sbb
popf
or
xor
cmpsb
popf
sub
xor
std
push
mov
sub
xchg
jns
sbbb
xor
clc
out
add
dec
into
scas
mov
sti
std
rolb
mov
xchg
xchg
fisttps
push
ja
ljmp
ror
out
int3
in
lea
stos
insl
jnp
scas
mov
in
out
clc
push
subl
mov
jle
ja
in
inc
or
pop
stc
sub
push
pop
jl
in
pop
sbb
xchg
cmpsb
jge
add
call
leave
sub
insb
rcll
sbb
mov
pop
cmp
dec
pop
push
popf
icebp
data16
pusha
or
fstps
fcompl
rorb
mov
mov
add
arpl
arpl
xor
repz
push
dec
insb
imul
in
lret
aas
jl
jb
add
sbb
movsb
push
dec
sbb
xchg
adc
push
push
iret
insb
push
sub
fisubrl
rorl
jae
scas
dec
pop
and
mov
dec
adc
and
icebp
test
add
xor
pusha
add
add
push
ret
and
push
call
pfcmpge
ret
xor
fcmovnu
xlat
enter
jnp
fisubl
or
int3
in
movsb
mov
inc
mov
lret
inc
addr16
adc
ret
call
hlt
pop
aaa
lods
shll
in
jmp
int
inc
sti
insl
pop
fldenv
out
adc
xor
dec
mov
cmp
or
repnz
inc
jnp
enter
aas
hlt
push
mov
lods
lds
out
cmp
into
and
pop
xchg
adc
mov
cmp
adc
mov
or
aad
cmp
je
repnz
mov
repz
pop
and
jns
and
lea
dec
dec
sbb
jmp
stc
or
call
inc
xchg
cmp
xor
xor
call
dec
inc
das
mov
loopne
push
mov
cld
adc
mov
or
call
iret
xor
dec
sbb
lret
mov
pop
sub
fcmovnu
push
mov
add
and
add
xor
and
xor
mov
addr16
insl
mov
or
push
pop
jae
adc
push
fidivl
fs
lret
lods
ja
dec
es
loop
sbb
xchg
in
sub
pop
add
mov
or
add
inc
imul
aaa
movsl
loope
ljmp
xor
xchg
jecxz
arpl
adc
push
test
push
icebp
sbb
adc
lahf
jnp
cmp
mov
je
mov
xchg
jge
loopne
lea
insl
aaa
add
xchg
pop
fwait
xchg
ret
xchg
xchg
jmp
mov
or
idivl
in
ret
xchg
mov
dec
cmc
inc
cld
cmc
je
lret
push
cmpsl
lods
test
fs
push
and
push
lahf
std
mov
pop
add
inc
push
sbb
jae
pop
outsl
jne
enter
dec
movsl
push
mov
sub
and
popf
loop
loope
into
imul
cmp
enter
shlb
in
push
cmpsb
dec
sub
jle
push
jns
dec
mov
lds
adc
dec
sub
and
push
lock
xchg
outsl
jbe
cmp
jae
loop
pusha
stos
or
cmc
pop
cld
and
mov
ljmp
pop
sbb
fdivs
xor
hlt
sbb
out
sti
rolb
adc
push
lret
and
in
addl
pushf
jl
pushf
push
out
les
ret
jb
stos
test
movsl
and
xor
stos
mov
call
jbe
sbb
aad
mov
xchg
mov
clc
bound
test
adc
dec
lods
dec
cwtl
test
mov
cmpsb
mov
das
imul
push
xor
fadds
inc
notl
rcrb
pop
adc
arpl
inc
cmp
fisubl
add
pop
cli
mov
fcompl
call
cmpb
pop
mov
andb
mov
add
roll
ss
push
shll
jb
shr
lods
nop
lahf
mov
bound
xchg
add
stos
cmp
cmpb
jge
jmp
int3
sbbb
add
out
cli
fstl
add
fwait
orb
scas
mov
jo
insb
xor
pop
lea
lcall
pushf
sahf
sbb
xchg
shll
inc
jge
enter
movsb
xorl
xlat
sub
fsubp
test
clc
sub
test
mov
mov
adc
pop
adc
in
cmc
push
add
lea
fwait
clc
mov
jmp
cs
test
inc
fcmovu
dec
fucomip
subb
add
rcrb
pushf
or
pop
addr16
mov
pusha
loop
leave
lods
test
pop
jecxz
flds
pop
pop
je
cmp
push
icebp
inc
mov
push
mov
sbb
xor
xor
call
sbb
xchg
stos
out
xor
pop
lahf
mov
jp
jo
sub
jg
loop
push
xchg
cwtl
aam
sti
sub
inc
lds
lock
insb
cmp
repnz
mov
dec
insb
pop
xchg
roll
sub
mov
fbld
sub
xlat
jne
mov
jmp
pop
jmp
cs
xchg
iret
lds
sub
mov
adc
and
add
ret
stos
and
or
in
idivb
inc
mov
cs
in
movzwl
in
fdivrl
cltd
dec
sub
add
jo
inc
pop
mov
insb
dec
loopne
adc
pushf
dec
inc
xchg
and
cwtl
ficoml
mov
mov
iret
leave
daa
adc
xor
jns
sar
dec
cwtl
in
xchg
push
daa
or
movsl
add
mov
incl
mov
icebp
cwtl
lods
inc
mov
imul
sub
sbb
ror
jne
sub
lock
mov
or
rep
and
rolb
adc
cmpsb
pusha
out
in
aaa
jbe
or
ja
xchg
arpl
xor
mov
sti
test
push
xchg
mov
aas
cltd
mov
mov
aas
mov
mov
sub
xchg
add
cmp
scas
pop
mov
push
hlt
rorl
and
push
and
lds
clc
loopne
mov
ljmp
pop
or
pop
test
int
adc
rol
dec
adc
rol
adc
dec
push
cs
adc
mov
stos
push
dec
into
mov
push
or
sub
cmpb
inc
ss
jmp
push
clc
pop
xchg
jle
mov
pop
nop
mov
sbb
jbe
dec
pop
jno
xor
enter
sbb
shlb
test
fistl
fcoms
and
and
adc
xchg
cs
push
aam
jge
mov
mov
push
icebp
sbb
sub
call
add
mov
add
into
dec
test
shll
push
dec
ds
jp
ret
inc
fsub
aad
scas
cmp
nop
js
int3
push
xlat
pop
and
imul
or
loop
xor
and
rcll
push
mov
out
lds
push
les
cmpb
pop
movsl
xor
mov
dec
cmpb
push
filds
inc
cs
outsl
xor
out
xchg
rcrl
shl
xor
insb
xor
mov
mov
pop
ja,pn
orb
fistpll
fs
jae
push
in
loopne
test
je
aaa
pushf
scas
punpckhdq
add
fbstp
sbb
orb
outsb
push
jnp
lret
mov
jne
mov
das
mov
aaa
or
arpl
imul
div
pop
fists
or
and
adc
clc
xorb
push
std
mov
shlb
lea
pop
add
cmp
cmp
pop
sub
lea
push
jbe
mov
jmp
dec
mov
mov
push
mov
test
push
sbb
mov
imulb
pop
test
aam
xchg
out
dec
mov
lret
cmp
jmp
mov
fimull
repnz
xor
dec
mov
sbb
inc
addr16
fcomip
mov
mov
ss
mov
sub
inc
or
nop
gs
jo
frstor
fcoms
push
popa
cmp
pop
je
mov
xor
adc
push
in
in
push
and
inc
insl
addr16
sar
dec
js
insb
add
incl
mov
or
xchg
addb
jge
icebp
or
mov
mov
call
pop
mov
fsubl
sub
sub
jp
in
popa
in
cmpsl
dec
fstps
mov
orl
sbb
cli
and
gs
xchg
push
inc
jl
shll
test
enter
daa
cmp
sub
jnp
lret
cmp
cmc
fisubs
xchg
sbb
mov
sbb
xchg
aam
ds
icebp
fwait
xchg
sbb
punpckhdq
insl
pop
mov
add
das
mov
cltd
pushf
cmc
ja
cs
mov
mov
inc
pop
jp
repnz
sahf
xor
imul
das
and
jne
mov
mov
rcll
mov
add
stos
jnp
iret
lods
in
adc
adc
into
je
sbb
cmpxchg
cmc
js
or
pop
mov
inc
sbb
adc
sub
add
mov
sbb
add
bound
mov
and
negb
add
jno
cmp
cmp
loopne
bound
mov
inc
dec
pop
xor
js
mov
jle
and
jl
mov
mov
sub
sbbb
mov
sub
popf
jbe
jecxz
add
lock
jns
pop
inc
push
push
xchg
test
xor
mov
loope
sub
addr16
mov
popa
shrb
mov
fimuls
call
add
push
cltd
xchg
push
or
add
xor
dec
push
mov
mov
mov
jo
sub
or
into
out
or
pusha
add
jle
insb
push
dec
aam
pusha
fnsave
lods
sbb
sbb
fwait
loop
dec
sub
stos
xor
sbb
insl
cmp
xchg
and
mov
fisubrl
mov
cltd
xchg
test
test
push
and
mov
lret
pop
add
push
mov
jb
and
pop
adc
mov
fwait
cs
dec
clc
mov
and
dec
cld
and
shll
push
popf
mov
add
dec
and
sub
xchg
ja
aad
push
fmuls
sub
pop
call
jae
nop
inc
push
pop
adc
cmp
aas
into
and
je
xchg
popa
sub
es
dec
aas
call
sbbl
repnz
pushl
push
and
lcall
sub
in
mov
cld
mov
mov
xchg
xor
imul
mov
lahf
add
mov
cmp
add
dec
lods
mov
or
mov
test
sub
lret
jo
cld
out
sti
lods
add
xchg
notl
jo
inc
mov
int
or
js
push
add
test
data16
push
inc
test
mov
push
push
aaa
pop
popf
scas
cmp
cmpb
sbb
dec
pop
in
cmp
xor
xchg
scas
in
mov
les
lea
ja
sti
mov
bound
cmp
andl
push
jb
adc
repnz
adc
fiaddl
jns
xor
sub
dec
jns
pusha
cmc
leave
inc
or
es
xchg
hlt
adc
ss
xor
fmul
jo
xlat
stc
test
jp
mov
adc
repnz
xor
ret
jnp
jecxz
stos
xchg
mov
mov
rcr
outsl
jl
xchg
clc
inc
and
arpl
out
jo
pop
ds
lds
add
dec
rcll
ss
sub
outsb
ss
je
mov
lret
add
push
outsl
mov
xchg
sbb
ja
mov
andb
popa
or
call
rcl
loopne
arpl
dec
fldenv
mov
in
push
ret
jmp
mov
pop
lea
mov
pop
mov
aas
aas
inc
jne
jne
pop
jl
and
add
mov
sbb
cmc
mov
pop
lock
inc
cli
sbb
hlt
arpl
lret
mov
mov
stos
mov
adc
xchg
pop
mov
xchg
xchg
fdivl
orl
insl
xchg
inc
mov
mov
movsl
cmpsb
mov
cmp
in
repnz
test
rorb
inc
lret
fstps
repnz
hlt
mov
lods
dec
pop
add
outsl
cli
stos
call
into
call
mov
push
rcll
clc
push
fs
outsb
lret
cld
xchg
cmp
jnp
pop
in
jmp
hlt
pop
test
mov
mov
pop
pop
or
mov
xor
mov
and
or
cwtl
aas
sub
mov
ret
inc
call
mov
out
cltd
xchg
imull
pusha
sub
pop
pop
lret
inc
sti
dec
pminub
mov
cmp
insl
fs
cmp
push
add
mov
mov
mov
push
add
aam
jl
xchg
stos
pop
adc
cld
fnstsw
jg
jge
and
cmc
out
xchg
push
ret
imulb
push
push
test
js
adc
and
jb
sbb
out
mov
adc
sub
mov
sbb
sub
je
mov
jp
decb
mov
fdivp
push
push
push
sub
ret
mov
inc
cli
dec
ja
jge
loope
adc
or
and
mov
xor
fstps
mov
ljmp
and
pusha
dec
inc
shlb
dec
push
in
mov
cmp
js
mov
fmuls
mov
pop
mov
xchg
fistpll
sub
adc
ljmp
cmc
inc
dec
es
adc
xchg
das
jle
enter
sbb
int
lret
scas
insb
push
xchg
fisubl
imul
push
xchg
repz
je
lods
xchg
nop
push
iret
test
pop
or
imul
add
int3
and
adc
push
pop
and
mov
jno
fimuls
lock
adc
push
ficoml
fldcw
mov
cmpsl
xchg
mov
mov
loopne
adc
stos
add
ja
int3
push
jmp
clc
imul
lcall
mov
dec
sbb
ret
hlt
mov
fnstenv
mov
fisubrl
mov
cmp
jo
xor
stos
je,pt
dec
mov
lahf
ret
std
jno
std
loop
sbb
sub
cmpsl
loope
bound
imul
xor
testb
cwtl
mov
push
jae
lahf
cmp
and
pop
xchg
shr
inc
add
sbb
shlb
arpl
aam
dec
in
enter
lods
xor
xchg
sbb
loop
out
add
cmp
sub
pop
mov
pop
les
dec
or
unpckhps
sahf
jmp
stc
pop
ss
or
stos
and
jnp
rclb
cmp
filds
adc
cltd
addr16
mov
mov
sbb
mov
arpl
jge
cltd
or
jns
pop
fs
stos
cmp
dec
dec
xchg
test
mov
sub
loope
dec
push
push
aam
out
pushf
std
jle
pop
jbe
xlat
adc
mov
jae
in
mov
add
imul
adc
mov
rcl
dec
cmp
jo
test
dec
mov
cltd
push
pop
scas
hlt
mov
pop
xchg
add
stos
or
or
or
sub
notl
fsubrs
pusha
call
stos
or
xorl
arpl
cmp
loopne
pop
icebp
repz
pop
pop
push
push
mov
aam
loopne
insl
andb
mov
sbb
test
pusha
lds
imul
fsubs
fdivl
pop
daa
sbb
out
mov
add
js
les
cltd
fs
pushf
cmp
push
stc
sbb
and
sub
test
sbb
lods
imul
sub
xchg
adc
mov
js
adcb
xor
jno
sahf
pop
js
fldenv
mov
pop
clc
mov
enter
orb
scas
loope
dec
shr
pop
bound
imul
mov
dec
mov
or
cltd
mov
or
bound
and
shr
imul
lar
pop
repnz
pop
sbb
sbb
out
lods
pop
adc
lret
mov
lock
inc
outsb
test
and
mov
in
sub
inc
mov
test
xor
sbb
lock
jg
int
ret
repnz
adc
lods
sbb
arpl
fiaddl
sbb
ficoml
add
push
push
xor
loopne
pop
xchg
adc
mov
fisubl
ja
add
hlt
add
lahf
addr16
into
cld
ljmp
shlb
pop
hlt
fiadds
or
movsl
mov
pop
aaa
and
or
stos
jle
mov
jae
jnp
sti
xchg
xchg
lret
aas
and
jp
sub
jl
ss
fisttpl
xchg
xrelease
lcall
fld
loopne
or
inc
scas
sub
mov
push
pop
pop
jb
scas
pop
jecxz
pop
fwait
cmp
sahf
inc
sbb
dec
mov
addl
jbe
cltd
std
sti
pop
xchg
js
add
xchg
fadd
mov
das
cwtl
jae
push
icebp
fcompl
push
repnz
fildll
mov
enter
xchg
fstpl
mov
dec
stc
mov
ret
inc
movsb
jl
ja
movsb
sub
out
pop
lods
push
fisubl
mov
imul
mov
jp
pop
fiadds
gs
inc
lcall
movsl
inc
dec
daa
stos
jmp
mov
and
out
lock
movsl
fcoms
fmull
data16
push
push
daa
pop
mov
and
in
and
sub
mov
dec
ret
fs
adc
lods
and
jnp
test
inc
in
inc
addl
sub
lcall
test
jl
cmpsb
arpl
adc
aas
adc
ret
cltd
imul
inc
mov
xchg
out
repnz
or
push
call
lock
sub
jne
rcrb
fsubrs
cmc
push
mov
ret
neg
cmpb
mov
outsb
pop
mov
pop
adc
mov
imul
jo
aam
repz
gs
xor
insl
pop
xor
pop
cmpsb
fcompl
mov
jge
sbb
mov
fidivrs
dec
cld
pushf
push
arpl
lods
aad
lret
mov
jmp
jg
jb
cmpsl
sahf
test
push
mull
clc
out
pop
mov
outsl
cld
pop
enter
push
enter
les
and
xlat
add
test
jge
xor
and
xor
adc
adc
cmp
roll
add
arpl
cmp
mov
ja
adc
je
out
outsl
mov
xchg
cmp
jbe
das
pop
sbb
cwtl
test
mov
mov
and
cld
fs
or
adcb
and
sub
sbb
std
sti
paddw
mov
mov
mov
mov
inc
test
ret
popf
enter
and
imul
adc
rcll
addr16
sbb
nop
test
lods
arpl
lahf
cmp
mov
cmc
xchg
push
pop
sbb
clc
and
mov
clc
sub
aaa
daa
loopne
aad
dec
mov
jnp
aad
enter
cmovne
and
sets
fdiv
fdivrp
xchg
cmp
xchg
mov
rorb
in
not
loopne
jo
out
mov
add
jmp
iret
sbb
cmp
pop
mov
xchg
jecxz
pop
push
aad
xchg
sub
jg
jecxz
mov
fistps
dec
daa
cmp
xchg
jmp
in
jp
rcrb
sub
int3
enter
inc
inc
push
add
pop
jae
imul
sbb
inc
mov
ret
and
mov
mov
cwtl
sub
hlt
loopne
insl
rorb
repz
adc
out
xor
inc
outsb
push
push
sbb
arpl
icebp
notl
push
shlb
movsb
ljmp
dec
or
inc
pop
mov
pusha
mov
fsubrs
add
and
xchg
imul
inc
inc
ja
daa
mov
jnp
xchg
iret
sarl
xchg
mov
pop
or
push
mov
daa
aam
cs
pop
out
in
mov
sub
xor
cmp
xor
jg
inc
inc
and
jb
iret
fidivs
sub
lea
lahf
adc
cli
jmp
mov
lds
adc
testb
mov
mov
stos
outsb
ss
add
sahf
fcompl
call
cltd
xor
test
out
inc
xchg
lcall
test
movsb
out
xchg
dec
stos
xor
or
mov
pop
and
or
cmc
dec
add
js
ds
sbb
rorb
ret
jl
push
push
cmp
cmp
filds
loope
cmp
xor
call
jb
mov
and
adcb
push
outsb
push
mov
cld
inc
testb
aad
outsl
fists
inc
xchg
cmp
ljmp
jns
js
popf
roll
mov
add
jle
cwtl
rcrl
idivl
mov
sub
dec
cmp
fidivs
lret
sbb
mov
push
lock
daa
sarb
sub
int3
lcall
sub
enter
cltd
inc
inc
cmpsl
sub
je
sbb
push
iret
xchg
mov
ss
xor
mov
inc
ljmp
aas
push
out
xchg
xchg
stc
inc
pop
sub
mov
jmp
iret
out
xor
lock
pop
jg
jae
fsubrs
dec
push
jp
jbe
enter
jecxz
sbbl
xor
mov
dec
xor
fidivrs
mov
cltd
fsubl
adc
lret
in
fsubl
scas
movsb
jno
mov
lods
pop
cmc
clc
lret
enter
jns
xchg
or
dec
in
lahf
cli
cmp
jne
push
cwtl
or
clc
cld
ret
lcall
mov
pop
xlat
loope
push
in
add
push
ret
fistpl
sbb
mov
fnstsw
sbb
aam
sahf
mull
dec
bswap
xchg
fisubs
cmp
negb
pop
xor
sub
and
xor
iret
cmp
xchg
and
subb
and
psrlq
fldl
inc
repz
lods
xchg
fs
pusha
xor
ja
pop
cwtl
push
pop
sbb
dec
pop
cmp
cwtl
mov
and
lret
push
sub
test
rcll
imul
in
mov
addr16
adc
mov
movsb
push
lcall
scas
ss
stos
bound
xchg
dec
add
roll
xor
sti
add
or
add
push
mov
push
mov
test
dec
jns
pop
outsl
filds
ss
cmpsl
push
mov
gs
push
cmp
notb
mov
sbb
mov
xorb
and
jbe
sbb
jbe
mov
insb
jp
das
push
adc
and
lods
insb
lret
std
loop
pop
mov
ljmp
std
adc
insl
mov
dec
add
leave
inc
jo
lcall
pop
icebp
insl
or
add
int
inc
pop
in
jmp
jmp
push
jb
int3
or
mov
cld
xor
cltd
or
lods
adc
nop
cmp
je
inc
cmp
sub
icebp
movsb
add
jo
mov
pop
push
bound
mov
pop
add
add
arpl
je
mov
push
dec
pop
sub
out
stos
pop
insl
pop
pop
aad
sub
mov
aam
hlt
sbb
and
add
mov
dec
mov
imul
dec
fdivp
loopne
sub
xor
int
push
cmp
mov
arpl
ss
cmp
jns
dec
mov
fdivr
mov
stos
jl
scas
decl
test
data16
jns
outsb
mov
mov
cwtl
sub
jmp
scas
fwait
or
lcall
mov
fstpt
test
movb
push
in
mov
push
gs
aaa
fisubrl
add
lret
rorb
xchg
subb
cwtl
dec
dec
aam
dec
push
scas
mov
movsl
stc
sub
dec
push
js
xorl
arpl
push
into
xlat
pop
xchg
aam
push
jnp
and
jno
out
mov
arpl
adcb
daa
fnstenv
stc
jnp
mov
and
xor
or
imull
push
fisubl
mulb
enter
add
in
mov
fisubrl
rcl
mov
fcomps
or
testl
sti
loope
sbb
rol
and
cld
cmp
xor
clc
push
add
movsb
fildll
push
adc
scas
jmp
cmp
cltd
lcall
lret
jnp
cltd
insb
cmp
lahf
icebp
prefetch
scas
js
icebp
cmp
inc
and
pop
inc
idivb
in
push
dec
inc
std
das
gs
fptan
popl
cmp
mov
push
int3
mov
les
out
fistpl
pop
xorb
fwait
cs
push
xor
idivb
adc
sbb
sub
and
jge
or
and
xchg
inc
dec
ret
dec
jl
test
or
scas
ret
add
mov
cmp
inc
jo
add
out
subl
fmuls
and
test
push
aam
push
aam
imul
lahf
dec
sahf
cmpsl
int3
adc
into
dec
mov
pop
sbb
cltd
mov
xchg
push
out
dec
jg
add
movsl
add
sbb
push
fnstenv
cs
inc
dec
push
dec
es
stc
jge
cmp
mov
leave
ds
aas
scas
pop
aad
into
lods
fwait
int
clc
ss
inc
dec
xor
push
imul
jbe
cmc
loop
enter
push
and
aad
lcall
insl
mov
and
jns
in
mov
xor
add
jmp
jle
dec
stos
out
cmp
shrb
push
jns
popf
loop
fadd
subl
push
fmuls
loop
test
sbb
cmp
rorl
test
jge
aaa
pop
inc
push
or
shlb
bound
mov
or
aad
push
xor
pop
xchg
loopne
loop
add
mov
loop
add
das
sar
in
mov
mov
movsb
adc
mov
jle
test
jnp
push
or
jecxz
mov
lock
xlat
cmp
mov
sbbl
xor
jp
daa
push
lea
mov
mov
mov
and
sahf
aam
add
xor
outsl
pop
dec
mov
xchg
mov
mov
lock
cmp
dec
or
push
aaa
dec
in
loopne
jno
cmpsb
mov
mov
cli
mov
jns
dec
aas
pop
pop
cwtl
jg
lahf
cmp
xchg
inc
sub
outsl
cs
mov
mov
push
loop
xor
ret
sbb
pop
or
data16
sahf
mov
cwtl
xor
xorl
ret
mov
mov
mov
popa
outsb
icebp
into
imul
fiaddl
ja
lods
test
out
xor
movsl
ljmp
xor
xchg
je
cmp
xchg
cmp
das
mov
test
mov
pop
mov
xor
adcb
sbb
inc
in
in
cmc
sbb
jno
and
xchg
mov
mov
dec
xorl
push
scas
adc
icebp
fidivrs
leave
mov
pop
shrl
and
dec
xor
ds
add
adc
stc
adc
inc
loopne
push
add
cmpl
movl
mov
mov
jmp
mov
je
push
push
pushl
pushl
pushl
call
mov
mov
sub
xor
xor
xor
sub
andl
add
mov
adc
mov
movl
inc
movl
or
movl
cmpl
mov
movl
mov
jmp
movl
mov
jl
pushl
pushl
push
push
call
xor
movzbl
adc
mov
neg
adcl
sub
cmpl
mov
movl
movzwl
jmp
mov
jl
call
andl
adc
or
neg
sub
add
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
add
insb
shrb
sbb
jbe
push
push
imul
loopne
adc
adc
ja
sbb
iret
movsl
jns
mov
dec
jb
xor
xchg
mov
jl
fnsave
out
add
push
mov
cmp
push
adc
imul
icebp
pop
lcall
mov
dec
xlat
hlt
inc
xchg
fsubrl
push
push
add
rolb
inc
sahf
add
sbbl
push
sub
cmp
and
test
jns
ljmp
aaa
repnz
test
inc
sbb
and
or
out
insb
mov
and
aam
xorl
mov
sbbl
xor
cs
scas
mov
dec
in
fisttpll
dec
push
bound
arpl
dec
sti
ret
shr
shl
js
ret
lcall
test
push
jle
std
aas
mov
mov
lods
popf
inc
xor
dec
xchg
xchg
lea
push
nop
jo
dec
pop
or
adc
inc
add
mov
int3
xor
mov
aas
inc
pop
xchg
mov
test
aaa
cmpb
push
pop
fisubrl
fmuls
jge
shlb
and
lods
pusha
mov
or
pop
scas
insb
aas
sarl
push
and
jle
and
cmp
xlat
notb
js
rcr
adc
mov
xor
push
outsl
pop
push
cmpsb
xlat
dec
out
loop
pusha
and
cmp
dec
les
or
in
lods
fisubs
xlat
mov
inc
xor
das
shll
mov
sbb
loope
test
fsts
jns
xchg
add
and
jl
dec
test
push
fsubl
mov
jne
adc
jmp
add
pusha
push
sti
cmp
test
mov
negl
jle
pop
mov
sbb
in
and
divb
movsb
inc
inc
lret
bound
aas
enter
les
insl
gs
fistps
icebp
jo
cmp
shlb
inc
sub
sub
addr16
ret
clc
movsl
jbe
xor
int
jns
add
test
rclb
sbb
call
div
fcmovu
lods
cmc
inc
ret
cmc
inc
push
orb
sbb
dec
es
pop
push
addl
insb
shrl
pop
fcomip
mov
push
adc
aaa
loopne
clc
pop
jb
mov
stos
test
xchg
ret
repz
push
inc
dec
mov
loopne
adc
andb
sub
imul
test
pop
fdivrl
inc
jbe
xor
cmp
movsl
xchg
inc
cmpsb
jle
outsl
jp
insl
sub
mov
sahf
mov
adc
jl
mov
adc
lret
cs
cmp
sub
mov
dec
pop
scas
outsb
dec
adc
mov
mov
inc
sub
stos
fdivl
sbb
adc
mov
push
test
lods
adc
sub
test
jmp
lret
or
mov
ja
xchg
xor
sub
sarl
jp
decl
scas
loope
out
inc
mov
mov
iret
fwait
rclb
mov
mov
dec
stos
adcb
add
out
xor
jae
fbstp
pusha
jp
dec
mov
push
push
ret
inc
ss
sub
mov
inc
mov
subl
add
rolb
mov
ds
adc
jecxz
mov
lret
cmc
xchg
jl
xchg
and
std
pop
pop
fdivl
sbb
mov
cwtl
prefetch
incb
icebp
insl
adc
std
mov
mov
mov
nop
sbb
dec
jge
adc
mov
in
dec
out
scas
xchg
clc
pop
sub
pop
ret
hlt
enter
adc
mov
xor
cli
or
add
inc
or
jo
cmp
dec
pop
ss
das
mov
or
pop
push
call
pop
sahf
and
jg
xchg
inc
pop
rcr
lea
sbb
jno
ficoml
push
mov
pop
test
ret
pop
sahf
test
xor
cmp
adc
push
or
mov
in
sub
and
cltd
jle
mov
mov
jne
dec
scas
add
push
popa
aaa
leave
lahf
pop
sub
test
cwtl
cwtl
xchg
loopne
cmpsl
mov
or
cld
sahf
outsl
sarl
inc
icebp
ljmp
dec
inc
fcompl
mov
mov
loope
movsb
sub
cmp
repz
cmp
es
daa
and
pop
subb
imul
ret
rcrl
mov
jecxz
test
jnp
push
outsl
aad
mov
leave
dec
mov
nop
nop
pop
outsl
dec
pop
sbb
lcall
out
push
ror
outsl
data16
mov
xchg
dec
int3
jbe
inc
lock
sti
cltd
mov
int
out
clts
xchg
and
fsubrl
sbb
jbe
jle
push
insb
cwtl
lcall
aas
cmp
shrb
scas
or
out
sbb
sub
fadds
push
shrb
test
bound
insl
test
xchg
out
jmp
roll
addl
cmp
xchg
mov
inc
test
mov
mov
sbb
pop
push
xlat
mov
test
in
aaa
kandnb
cmp
cli
lahf
xchg
call
clc
rol
aaa
in
jns
iret
jmp
cld
insw
cmp
push
scas
fwait
loope
xchg
inc
lcall
xor
ror
xchg
jle
mov
dec
mov
ret
cltd
cmp
loop
sub
and
aam
inc
pop
xor
xor
lret
dec
inc
inc
icebp
or
xchg
add
decl
xchg
lods
cmp
cld
jno
std
sub
fdivs
mov
nop
lds
and
sahf
inc
mov
push
dec
fstpl
jb
or
decb
aad
insb
inc
push
pop
jecxz
popa
pop
sbb
cmp
xor
adc
sub
cltd
iret
jmp
adc
shrb
shrb
or
pop
in
lea
push
mov
mov
dec
mov
rcll
ljmp
xchg
jae
dec
push
leave
lret
or
add
jmp
movsl
fists
stos
aaa
dec
inc
mov
subb
cwtl
dec
mov
pushf
mov
pop
out
cmp
dec
or
roll
test
cmp
loope
test
jae
mov
inc
lret
add
mov
scas
imul
lcall
insb
sub
add
fldl
hlt
inc
test
bound
lods
add
nop
jmp
scas
cmp
or
mov
mov
sub
std
dec
cmp
cmp
stos
push
nop
or
incl
jne
ja
mov
mov
lcall
insl
mov
ret
mov
popf
es
mov
xor
inc
sbb
pop
lret
test
enterw
inc
xlat
lods
flds
cld
xor
mov
loop
add
dec
inc
adc
push
mov
ret
sbb
cli
dec
add
push
imul
loop
push
imul
add
push
mov
movaps
lock
insl
push
inc
scas
mov
repz
mov
mov
inc
test
pop
into
fwait
sub
inc
jmp
aaa
sar
arpl
jnp
test
iret
jns
xchg
xchg
ds
dec
cmp
add
cli
lods
cltd
rol
inc
mov
scas
pop
fsubr
popf
out
sti
xchg
add
pop
into
cs
mov
pop
xchg
sub
sbb
nop
outsb
popf
xchg
mov
nop
or
mov
test
mov
or
inc
sub
addl
std
std
add
data16
shrb
add
fbstp
push
jg
mov
mov
rcrl
adc
inc
xchg
shrb
sti
popa
push
mov
dec
ds
mov
mov
imull
or
mov
xor
push
pop
push
enter
mov
pop
mov
inc
lds
xchg
pop
sbb
mov
add
cli
pop
pop
or
jne
sub
stos
push
inc
testb
int
xor
mov
inc
enter
das
dec
popa
sub
or
xchg
mov
mov
bound
int3
movl
add
mov
inc
loopne
or
insb
sub
adc
dec
or
nop
test
dec
xchg
fsubl
loope
shl
imul
and
mov
jl
arpl
inc
fdivrl
dec
mov
xchg
div
lock
inc
test
fmulp
xchg
je
sbb
lds
ja
adc
cltd
aad
add
mov
and
push
pop
rolb
lock
fcompl
pusha
sbb
adc
sub
push
cmpsb
into
pop
in
adc
push
mov
aas
jnp
jae
xor
sbb
jne
cltd
inc
inc
jg
or
dec
stos
pop
insb
dec
ljmp
scas
dec
dec
dec
stc
mov
push
sub
sbb
sub
rcr
sub
add
mov
fsubl
and
xchg
xchg
and
jnp
sbb
pusha
jbe
sub
pop
dec
cs
dec
fnstsw
in
sbb
adc
int
movsb
sub
in
mov
cs
xchg
mov
inc
push
jle
push
ret
xlat
inc
orb
shrl
cld
pop
adc
shrl
xlat
xchg
fcomps
ds
adc
push
jns
jb
sbb
jae
aam
sub
jne
scas
jo
pop
or
sub
mov
std
and
sbb
sub
mov
mov
push
fld
js
xchg
push
sub
xchg
mov
jle
cltd
fistpll
sbbb
cs
dec
loop
cmc
mov
std
add
lret
lods
lods
into
or
fucomi
in
sahf
xchg
sub
cmpsl
pop
das
dec
add
aas
push
push
ss
ljmp
addr16
xor
popa
addl
loopne
sub
lds
and
xchg
movsb
push
jnp
iret
dec
dec
movsb
xchg
xor
or
pushf
pusha
lea
sbb
movups
xor
inc
ret
jle
shr
and
pop
dec
mov
and
mov
rcrl
movsl
popf
push
rolb
jp
je
add
add
jmp
js
jmp
push
mov
outsl
mov
cld
incb
xchg
or
xchg
dec
sub
cmp
push
sub
roll
mov
mov
fcomps
lods
pushf
jle
ss
or
test
mov
scas
daa
call
inc
daa
jae
adc
notl
and
xchg
lods
cmp
sahf
imul
lock
nop
and
dec
mov
lds
insl
cld
push
xchg
and
pop
icebp
mov
adc
xor
rclw
or
jg
mov
sbbb
fisttpl
sbb
in
aaa
hlt
mov
out
jp
cmp
mov
jmp
aad
mov
adc
push
inc
jp
mov
arpl
jmp
daa
xor
lret
sbb
popa
mov
push
pop
lock
in
dec
sbb
xchg
jnp
mov
fnsave
sub
out
cwtl
and
icebp
test
sahf
mul
inc
fisttps
xor
push
stos
out
cmc
popa
pushl
std
das
mov
cli
cmp
loop
pop
loope
iret
lret
fwait
xchg
sbb
xor
xchg
adc
mov
cltd
ret
and
dec
xchg
mov
dec
mov
lock
gs
pop
cmp
and
in
push
xor
xor
fists
push
inc
loop
popa
mov
gs
push
loopne
movsb
push
cmpsb
mov
out
xor
in
push
jl
and
ja
ja
loopne
or
fimuls
cltd
jge
adc
push
sub
jno
stos
int
test
outsl
aam
cwtl
mov
cs
shrb
adc
imul
xchg
cli
mov
sbb
push
aad
sbb
repz
sbb
push
sbb
sub
fwait
xchg
sub
sbb
ja
xchg
xchg
adc
adc
or
lcall
or
ljmp
lahf
std
cltd
xor
jo
fsubrs
and
cmp
jb
inc
dec
xchg
outsb
shr
cmp
xchg
mov
xor
mov
push
pop
push
pushf
xor
adc
mov
xor
fidivrl
sub
jae
psubd
mov
lock
sbb
repnz
and
sbbl
mov
fwait
jg
insl
cs
or
jb
in
aad
xor
sub
mov
dec
dec
dec
adc
and
or
and
cmpsl
jnp
and
lock
out
int
pushf
xchg
xor
cmp
sbb
mov
cs
les
cmp
les
lret
repnz
cld
lods
dec
ss
test
mov
addr16
xor
push
outsb
in
xchg
push
fidivrl
sbb
insl
jb
xor
fdivs
loop
daa
add
mov
push
imul
sbb
arpl
stc
incb
adc
cltd
pop
or
pop
loopne
cmc
jbe
mov
outsl
xchg
pop
cmpsl
jge
in
dec
stc
or
add
incl
fistl
loope
ret
push
jbe
sbb
sbb
lret
inc
addr16
or
push
jb
les
dec
mov
out
push
xor
inc
iret
xor
xchg
pop
lret
bound
mov
fidivrl
std
jle
push
int3
sar
repnz
cmp
js
aad
cmp
mov
adc
dec
aam
sub
jnp
push
cmpsb
repz
nop
inc
jp
push
fsubrp
bound
cmp
add
bound
sbb
popa
inc
mov
xchg
in
pop
push
xchg
scas
mov
je
out
lea
xor
aam
cmp
and
or
pop
sbb
sbb
insl
push
push
bound
jne
repz
dec
pop
lret
bswap
adc
jae
aad
call
shll
mov
out
loop
sbb
mov
push
cmpsl
jmp
out
loopne
jbe
jno
pushf
cli
cmc
in
inc
cmp
faddl
leave
xchg
sub
mov
pop
dec
fcompl
xchg
push
daa
push
cmp
mov
push
pop
lock
mov
out
mov
jp
xor
outsl
nop
adc
adc
dec
pop
fdivrs
push
es
adc
rcrb
or
icebp
push
mov
push
ljmp
cmp
lret
dec
inc
enter
pop
mov
mov
ljmp
loope
test
out
scas
int
push
push
das
push
cmp
mov
pop
add
mov
test
push
loop
es
jno
lcall
shrb
jne
or
loope
jb
dec
cld
push
jmp
in
dec
andb
lods
les
int
scas
in
orb
mov
and
stc
add
rclb
ss
push
imul
mov
sbb
push
test
flds
mov
stos
mov
sub
andl
out
mov
fimuls
mov
push
aaa
out
rcrl
sbb
fidivrs
loope
xor
sub
pushf
dec
test
push
jl
sarb
lea
imul
test
sti
mov
push
cmp
in
mov
dec
or
stc
and
add
push
std
mov
aaa
push
push
rcll
jns
daa
dec
and
jmp
test
sub
sub
fwait
mov
mov
inc
out
pop
cmc
cmp
test
int
mov
or
jmp
sbb
adc
and
rorl
jmp
repz
dec
or
out
push
je
sub
push
mov
mov
jbe
stos
fwait
adc
ficomps
push
jns
cmp
iret
pop
daa
cmp
cwtl
sbb
add
leave
and
loopne
fisubs
and
dec
into
call
lcall
dec
hlt
inc
push
xlat
adc
sub
sub
push
cmpsb
call
push
jb
mov
ja
or
lods
bound
movsl
enter
or
loope
xchg
stc
jl
and
push
push
cmpsb
inc
test
push
jmp
mov
sahf
loop
push
fdivl
bound
rolb
rcl
dec
push
pop
add
push
mov
fwait
mov
repz
iret
mov
mov
mov
or
cs
pusha
xor
jecxz
mov
sbb
mov
mov
inc
and
jmp
cltd
rolb
scas
push
jecxz
xor
mov
sbb
push
out
es
or
mov
insl
iret
jle
movsb
stc
icebp
dec
je
in
test
sub
frstor
dec
sub
insb
leave
mov
sbb
loopne
sbb
cwtl
das
xor
dec
xchg
aam
ljmp
stos
insb
jle
pop
add
jne
xchg
jl
xor
push
in
push
mov
aas
popa
ljmp
and
push
sbb
scas
xchg
and
jmp
or
adc
shlb
movsl
lret
or
fbstp
dec
push
outsb
mov
lock
jg
inc
push
test
insb
aam
rcl
xchg
lods
mov
stc
mov
add
scas
stos
stos
fsts
pushf
cmpsl
fldcw
mov
or
popf
out
inc
cmp
insl
outsb
iret
pop
jae
cli
in
xchg
fdivrs
jne
or
push
jge
and
add
push
sub
loopne
das
insl
gs
jo
xor
push
mov
sbb
jno
andb
dec
scas
jp
loopne
out
cmp
mov
xchg
mov
sub
lods
das
outsl
pushf
pop
leave
enter
xor
mov
enter
nop
fistps
cwtd
xchg
inc
pop
xor
or
add
fdiv
add
mov
jge
data16
and
je
or
dec
mov
out
faddl
or
fsubs
dec
jno
retw
or
popa
in
or
int
in
enter
mov
xchg
aad
inc
aas
std
repz
aad
test
mov
push
pop
outsb
daa
out
adc
jns
dec
mov
ror
add
xor
jbe
push
push
addr16
enter
and
daa
or
xchg
xor
add
cmp
jp
push
xchg
dec
pop
in
stc
cltd
xchg
sbb
loop
ja
push
ret
push
ja
fidivrs
ss
mov
fldl
dec
push
xor
and
punpcklwd
xor
adc
pop
fistps
sub
mov
inc
out
xor
fwait
pusha
in
inc
or
pop
shl
or
adc
scas
hlt
sbb
pop
outsl
aas
dec
test
inc
hlt
add
add
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sbbl
push
push
mov
cmpl
mov
mov
movzbl
jmp
movzwl
je
pushl
call
and
or
xor
add
xor
mov
mov
xor
mov
orl
add
adc
mov
shrd
cmpl
movl
movl
not
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
adc
addl
mov
mov
sub
xor
xor
xor
and
adc
or
cmpl
not
movl
movl
movl
jmp
mov
ja
push
push
call
negl
mov
mov
xor
or
sub
adc
mov
xor
movzwl
add
shr
adcl
mov
mov
mov
sbb
xor
cmpl
movl
mov
jmp
mov
jle
push
pushl
push
push
call
mov
sub
mov
and
movzbl
sub
not
xor
or
xorl
mov
add
mov
not
shl
xorl
mov
shrd
sub
xor
shr
cmpl
movzwl
not
mov
movzwl
jmp
movl
movl
jbe
push
push
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
jae
pushl
push
pushl
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
mov
mov
mov
jmp
movl
not
jg
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jb
pushl
push
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jg
push
pushl
pushl
pushl
push
pushl
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
mov
movl
mov
jmp
movl
movl
jle
push
push
call
dec
sbb
xor
xorl
sub
addl
xor
shld
movl
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
cmp
movl
jne
cmp
movl
je
mov
subl
mov
sbb
push
pop
cmpl
mov
movl
jmp
not
jae
push
pushl
pushl
push
call
mov
or
mov
adcl
xor
xor
xor
mov
and
xor
or
add
movzwl
adc
xor
decl
shl
mov
xor
shr
incl
or
cmpl
mov
movzwl
movl
mov
jmp
movl
movl
jg
pushl
pushl
push
push
pushl
call
sbb
or
xor
sbb
and
adcl
movzbl
add
mov
mov
mov
adcl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jbe
push
push
call
sbbl
xor
neg
add
inc
adc
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
cmpl
mov
movl
jmp
movl
mov
jae
pushl
pushl
push
pushl
call
or
or
xor
pushl
pop
adc
mov
add
xor
adc
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
movl
jne
adcl
xor
jmp
xor
add
mov
sub
sub
mov
add
movl
mov
mov
and
movl
cmpl
movl
mov
mov
jmp
mov
jg
pushl
call
or
mov
xor
sbb
adc
xor
xor
mov
adc
and
not
and
movl
movl
movl
cmpl
not
mov
jmp
movl
not
ja
pushl
pushl
pushl
push
call
mov
mov
xor
or
sub
adc
movl
sbb
cmpl
mov
mov
movl
mov
jmp
mov
jge
push
pushl
call
mov
mov
add
sub
add
add
movl
movl
xorl
push
movzwl
sbb
movl
or
mov
mov
subl
push
sbbl
push
andl
push
andl
call
mov
mov
push
adcl
push
push
xorl
push
adcl
call
mov
mov
sub
sub
mov
sbb
mov
add
movl
mov
movl
adc
mov
addl
xor
mov
subl
xor
mov
cmpl
mov
mov
movl
jmp
mov
movl
je
push
push
push
pushl
push
push
call
adc
movzwl
and
adc
and
xor
xor
xor
xor
sub
movl
cmpl
mov
movl
movzbl
jmp
movl
mov
jle
pushl
push
push
call
add
sub
xorl
incl
neg
or
movl
cmpl
mov
notl
not
jmp
mov
jg
push
push
push
call
mov
sub
mov
xor
movzwl
sub
sbbl
and
movzbl
sub
movl
cmpl
mov
movl
mov
jmp
movl
jle
push
push
push
push
push
pushl
push
call
adc
xorl
xor
add
adc
sbb
mov
sbb
mov
add
xor
movl
cmpl
movl
movzwl
movl
jmp
mov
movl
jbe
push
pushl
pushl
call
adcl
sbb
xor
add
xor
sbbl
adcl
sub
sub
movl
adc
push
add
movl
mov
mov
add
mov
mov
incl
push
sbbl
push
subl
push
adcl
call
cmpl
movzwl
mov
jmp
not
movzwl
ja
push
call
xor
or
xor
sbb
xor
adcl
mov
mov
xorl
push
push
adcl
push
push
call
cmpl
mov
movl
jmp
mov
movl
jl
pushl
push
call
subl
adcl
xor
mov
mov
sub
and
movzwl
add
or
and
mov
orl
mov
xor
orl
mov
sbbl
xor
mov
xor
sbbl
xor
cmp
jne
cmp
jne
movl
mov
adc
movl
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
push
pushl
pushl
push
call
adc
xor
xor
mov
sbb
xorl
or
movl
xorl
mov
adcl
imul
add
xor
mov
div
movzbl
and
pushl
or
xor
sbbl
and
not
xor
inc
pushl
mov
movzwl
adc
mov
push
notl
pop
xorl
div
mov
andl
sub
add
xorl
imul
adcl
and
xor
pushl
pushl
pushl
pushl
andl
pushl
call
movl
sub
movl
cmpl
movzbl
movl
jmp
movl
jbe
pushl
push
push
pushl
call
xor
sub
sub
add
adcl
mov
xor
or
mov
or
mov
adcl
sub
cmpl
movzbl
mov
movl
jmp
movl
jle
push
pushl
push
push
call
add
and
add
adc
dec
xor
add
add
dec
mov
andl
xor
adcl
xor
movl
div
imul
addl
xor
sbbl
pushl
sbbl
pushl
sbbl
call
sub
movl
cmpl
mov
movl
jmp
mov
ja
pushl
call
sub
and
add
sbbl
mov
sbb
andl
mov
movl
movl
mov
mov
sub
or
mov
mov
mov
adcl
mov
push
push
adcl
xor
xorl
xor
push
push
notl
call
orl
add
mov
movl
adc
mov
sbbl
movl
andl
movl
movl
addl
movl
dec
jne
cmpl
movl
movl
movzwl
jmp
mov
jle
push
pushl
call
sub
sbb
adc
not
sbb
sbb
add
movl
xor
mov
mov
subl
movl
mov
call
cmpl
movl
mov
movzwl
jmp
not
movl
jb
pushl
push
call
adc
xor
mov
add
mov
xor
lea
mov
lea
xor
add
mov
adc
mov
subl
mov
xor
or
adc
mov
mov
cmpl
mov
mov
mov
mov
jmp
mov
jae
pushl
call
xor
xor
mov
sub
xor
orl
xorl
mov
xor
mov
xor
mov
xor
and
xor
shl
subl
shr
or
sbb
mov
cmpl
mov
mov
movl
jmp
mov
mov
jl
push
call
adcl
sbb
adc
subl
dec
subl
mov
mov
mov
mov
mov
sub
sub
mov
add
mov
mov
shrd
shr
mov
add
mov
mov
xorl
xor
addl
xor
or
mov
subl
push
pushl
addl
lea
andl
push
shl
subl
call
lea
push
andl
mov
movl
mov
sbbl
lea
xorl
push
mov
adcl
lea
mov
orl
mov
sbbl
mov
push
sbbl
call
movl
push
orl
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
addl
push
sub
push
adc
movl
movl
mov
adc
movl
mov
movzwl
xor
mov
subl
xor
div
or
imul
cmpl
movl
mov
movl
jmp
movl
mov
jbe
push
call
movl
orl
mov
or
xor
or
adc
and
add
mov
andl
xor
and
xorl
mov
xorl
xor
div
cmpl
mov
mov
mov
jmp
mov
movzwl
jb
push
pushl
push
call
mov
mov
sub
and
mov
mov
sub
xor
xor
xor
add
sub
imul
adc
mov
mov
adc
mov
mov
adc
and
sub
mov
movl
add
movl
movl
or
mov
andl
add
neg
xor
xor
sbbl
imul
mov
or
mov
mov
and
xor
add
mov
or
sub
adc
mov
sbb
movl
sbb
movl
notl
movl
add
movl
and
mov
movzwl
xor
imul
adc
mov
cmpl
movl
movzwl
movl
jmp
mov
jae
push
push
pushl
call
mov
sbb
mov
sub
andl
and
mov
sbb
mov
imul
imul
neg
mov
xorl
and
dec
or
xor
mov
xor
mov
mov
xorl
lea
mov
mov
sbb
mov
movl
movl
cmpl
movl
movl
mov
movl
jmp
mov
mov
jle
pushl
call
xorl
sbb
dec
subl
mov
mov
or
and
adc
movl
cmpl
mov
movzwl
mov
movl
jmp
movzbl
notl
jge
pushl
call
and
xor
movzwl
adc
and
xor
sbb
mov
xor
mov
or
or
add
or
mov
or
add
or
xor
mov
movl
cmpl
movl
mov
movzbl
jmp
movl
je
push
pushl
pushl
push
call
not
mov
mov
adc
sub
mov
mov
and
or
movl
cmpl
movl
notl
not
mov
jmp
mov
mov
jae
pushl
pushl
push
pushl
pushl
pushl
call
neg
dec
movzbl
and
dec
sbbl
sbb
sbb
cmpl
movl
mov
mov
jmp
not
jge
pushl
push
pushl
call
mov
adc
or
xor
xor
xor
mov
xor
mov
add
adcl
movl
mov
add
mov
addl
sub
mov
adcl
lea
sbbl
or
cmpl
movzbl
mov
jmp
movl
jl
push
push
pushl
call
and
adc
add
and
adc
mov
add
mov
and
sub
mov
xor
mov
mov
xor
movl
cmpl
mov
mov
jmp
mov
movzwl
jae
pushl
push
push
push
call
mov
or
mov
orl
orl
sbb
and
adc
movl
mov
add
imul
mov
adc
mov
adcl
imul
orl
xor
xor
or
or
mov
div
cmpl
mov
mov
movl
jmp
movl
movl
jle
pushl
pushl
push
push
pushl
call
adc
or
add
xor
add
neg
xor
xor
and
sub
or
mov
addl
movl
sbb
movl
and
movl
mov
mov
sub
mov
cmpl
mov
movl
jmp
movl
jge
call
adc
or
mov
adc
sbb
sub
mov
adcl
xor
addl
div
imul
cmpl
mov
mov
mov
movl
jmp
movl
movl
jne
pushl
push
push
pushl
push
push
pushl
call
orl
xorl
xor
and
orl
orl
inc
add
mov
subl
xor
movzbl
sbb
mov
xor
mov
adcl
div
add
xor
movzbl
adc
mov
movl
movl
movl
cmpl
mov
mov
jmp
mov
movl
jbe
push
push
pushl
call
add
sbb
movzwl
sbb
adcl
movzwl
sub
or
movl
mov
and
mov
andl
sub
shr
sub
mov
addl
imul
cmpl
movl
movl
movl
jmp
movl
jl
pushl
call
sbbl
xorl
xor
orl
sbb
mov
and
cmpl
movl
movl
jmp
mov
jle
pushl
push
push
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
sub
mov
neg
movl
xor
movl
xor
mov
or
xor
mov
or
movl
sub
dec
mov
movl
mov
xor
add
sub
imul
movl
movl
movl
add
movl
movl
movl
mov
mov
or
add
orl
mov
sub
incl
mov
movl
imul
imul
andl
mov
orl
or
mov
lea
orl
push
xorl
call
sub
mov
mov
imul
add
cmpl
movl
movl
mov
jmp
movl
jb
pushl
push
call
sbb
mov
or
xorl
addl
xor
add
adc
addl
and
mov
sub
mov
sub
or
xor
mov
xorl
div
cmpl
movl
mov
jmp
not
jl
push
push
push
push
call
xor
movzbl
and
mov
and
or
xor
add
add
mov
adc
movl
movl
movl
movl
mov
xor
movl
sbb
movl
cmpl
mov
movl
movl
jmp
mov
jbe
pushl
push
call
sbb
sbb
sub
adc
adc
movl
or
movl
sbb
movl
cmpl
movl
mov
mov
mov
jmp
movl
jge
push
push
call
andl
and
adc
mov
mov
and
sub
mov
or
movl
cmpl
mov
mov
jmp
mov
mov
jle
pushl
call
adc
mov
and
mov
xor
mov
sub
movzwl
and
mov
adc
movl
movl
and
mov
xorl
mov
adc
mov
and
and
sbbl
sub
sub
imul
mov
xor
lea
xor
mov
orl
mov
or
mov
mov
xor
add
add
mov
cmpl
movl
mov
jmp
movl
movl
jbe
push
push
pushl
call
or
sub
adc
xor
dec
movl
or
or
add
lea
or
and
mov
add
sub
add
add
mov
mov
xor
or
sub
xor
movl
mov
sbb
mov
movl
movl
adc
movl
and
mov
orl
mov
subl
mov
addl
xor
orl
xor
adcl
mov
notl
call
add
mov
sub
mov
mov
andl
mov
xor
adcl
xor
mov
orl
call
subl
or
or
adcl
mov
mov
adcl
xor
adcl
xor
sbbl
mov
call
mov
mov
mov
cmpl
movzbl
mov
mov
movl
jmp
movl
jle
push
push
pushl
call
sbbl
notl
xorl
neg
add
mov
xor
orl
xor
andl
mov
movzbl
adc
mov
mov
mov
xor
mov
adcl
mov
subl
mov
sbbl
call
sub
mov
or
mov
orl
or
subl
push
push
subl
push
xorl
push
call
mov
cmp
movl
jne
mov
cmpl
not
movzwl
mov
jmp
movl
ja
call
mov
sbb
sbb
xorl
movzwl
sbb
and
xor
mov
xor
orl
xor
orl
mov
xorl
call
cmpl
mov
movl
jmp
movl
jg
pushl
push
push
call
mov
add
and
or
or
mov
mov
sub
or
xor
mov
sub
mov
mov
adc
mov
xor
andl
xor
mov
subl
call
or
cmpl
movl
movl
jmp
mov
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
pushl
push
pushl
call
adcl
orl
adc
sbbl
orl
addl
notl
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
movzbl
sub
push
mov
or
movl
jne
or
mov
cmpl
notl
mov
mov
jmp
mov
jae
pushl
call
or
adc
xorl
movzbl
or
mov
sbbl
sub
mov
xor
incl
div
xor
or
sub
mov
mov
sub
mov
orl
div
mov
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
cmpl
mov
mov
movl
mov
jmp
movl
movzbl
jne
pushl
push
call
sbb
add
mov
xor
add
sub
and
inc
add
add
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
orl
shld
shl
ret
cmpl
mov
movl
jmp
movl
movl
jge
pushl
push
call
sub
xor
sbbl
movzwl
adc
mov
xor
and
shl
ret
xor
xor
ret
