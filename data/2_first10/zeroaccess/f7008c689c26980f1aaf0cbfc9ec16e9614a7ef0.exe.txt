push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
dec
xchg
jo
bound
fstpl
bound
sub
pop
add
pop
jne
int
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
insl
js
fstpl
call
repnz
idiv
ljmp
or
lea
push
mov
std
leave
xor
sub
xor
icebp
jns
push
repz
push
sub
mov
mov
lods
leave
mov
mov
call
popa
dec
cwtl
mov
test
mov
jle
pop
aaa
test
push
addr16
ror
rorb
jmp
mov
lahf
sub
pop
es
ljmp
jmp
jbe
cs
sbb
push
mov
xor
push
cli
mov
sbb
imul
mov
int3
mov
pop
add
fistpl
adc
aad
push
mov
aad
fcoms
jb
sbb
mov
jo
pop
mov
jmp
xor
movsl
mov
pop
cmp
into
subb
inc
dec
fimuls
cmp
mov
push
or
xchg
fs
pop
imul
imull
lret
push
push
and
xchg
jnp
jecxz
push
jl
mov
push
push
mov
shll
loope
cmp
mov
test
add
pop
mov
push
jmp
test
xor
into
adc
pop
dec
das
cwtl
sub
dec
or
jbe
push
xchg
cmpb
add
jno
or
rolb
repnz
enter
cmp
push
dec
mov
fcoms
cmp
pop
loop
aaa
or
push
jmp
jmp
cltd
inc
push
rcl
insb
push
fistpl
loopne
out
push
shlb
cmp
bound
lds
fisubs
mov
sbb
scas
inc
ljmp
xchg
mov
in
and
or
das
mov
xchg
sub
jmp
pop
test
sbbl
cmp
icebp
hlt
push
jle
fcomps
sub
xor
push
mov
pop
icebp
inc
iret
add
shl
imul
addr16
adc
mov
outsb
and
xchg
adc
push
xrelease
lcall
lods
adc
push
fstpl
cmp
xor
xchg
xchg
pop
and
stc
fdivrs
xchg
cwtl
rcl
imul
xorl
addb
or
mov
cld
shll
hlt
dec
inc
ja
je
inc
fildll
push
jl
test
sbb
stos
out
cmp
pop
xor
das
adc
xchg
fcmovnu
push
divb
aad
mov
scas
cmpsl
subl
sub
add
icebp
xlat
cwtl
and
pop
mov
in
mov
sub
stc
xlat
insb
stos
test
daa
add
stos
in
dec
add
inc
in
in
dec
dec
push
lea
push
mov
mov
dec
mov
xchg
scas
inc
push
inc
out
imul
add
xlat
in
hlt
movb
sub
cwtl
gs
xchg
push
test
sub
xchg
or
clc
adc
jno
or
ret
add
idiv
cmp
je
pop
pop
jge
mov
inc
in
cmp
cli
cmp
jp
out
inc
add
mov
jbe
pop
jl
movb
iret
fmuls
daa
cmc
pop
fdivr
out
cmp
mov
test
sub
iret
dec
push
mov
xor
arpl
cld
inc
jmp
pop
pop
popf
cmc
in
sahf
dec
push
inc
adc
es
pop
and
sub
dec
mov
call
or
add
dec
or
xor
or
cltd
sarl
mov
xchg
adc
ss
and
test
mov
push
jp
bound
mov
add
out
std
test
cmp
sub
xor
inc
sbbb
pop
adc
push
xchg
adcl
jle
mov
and
movsl
loope
push
into
out
lods
or
cld
and
fcom
pop
add
lock
cmpsb
gs
aam
in
mov
push
adc
jecxz
in
cmp
push
sbb
cwtl
or
xor
mov
xchg
int3
nop
cmpsl
jb
mov
mov
sbb
inc
test
sbb
pop
int
stc
test
lret
fstpt
dec
push
sbb
ss
rorl
or
mov
ja
les
imul
arpl
push
cmpsl
jno
mov
fisubl
push
ja
int3
push
xor
jge
rcrb
mov
cmp
adc
fsubrs
dec
push
lret
lea
add
enter
jo
fisubrl
rorl
mov
ljmp
sub
pop
inc
call
outsb
lret
sbbb
inc
aad
std
pop
pop
jle
lcall
dec
outsb
xor
lds
push
ror
mov
test
mov
fwait
add
xchg
push
xchg
or
cwtl
stos
in
push
sbb
adc
shlb
mov
repz
push
cmp
leave
jge
push
outsb
sub
movsb
and
sti
stc
js
insl
mov
popf
jbe
ret
mov
mov
and
and
shll
popf
movsb
repz
xor
js
add
lods
aaa
lahf
sti
and
push
fwait
add
lock
xchg
lds
inc
jns
xchg
pushf
pop
cmp
mov
jno
inc
test
fwait
mov
or
cltd
mov
cltd
gs
jle
sbb
bound
aad
sbb
mov
loope
in
test
bound
sub
dec
movsb
cmc
in
inc
sub
scas
mov
nop
roll
test
gs
lret
and
sub
dec
jecxz
or
pop
in
shl
out
lcall
mov
cmp
mov
mov
sbb
orb
jns
gs
repnz
adc
add
fmuls
int3
out
xchg
or
das
cmp
lahf
aam
out
cmp
lods
jns
mov
inc
mov
and
fst
nop
iret
fadd
rorl
idivl
loope
and
call
outsb
cltd
mov
fildl
loopne
subl
inc
daa
and
mov
lock
aad
data16
mov
inc
filds
negl
cli
movb
mov
push
cmp
mov
adc
xchg
mov
popa
test
sbb
and
iret
inc
and
jge
adcb
mov
jle
adc
aas
xor
cli
pop
dec
test
pop
imul
je
adc
mov
pop
mov
jmp
ret
incb
ds
cmp
lret
scas
add
mov
cmpl
push
int
xor
mov
cmp
fdivrl
fxch
cltd
or
iret
faddl
loope
and
sub
cwtl
mov
xchg
or
pop
jmp
into
outsb
adc
push
and
sarl
subl
fildll
lock
dec
jg
dec
sahf
xchg
xor
cld
xchg
incl
mov
hlt
sahf
ret
or
cwtl
fstp
insb
cli
dec
adc
inc
iret
in
xor
or
inc
lret
sub
paddw
pop
leave
sbb
adc
roll
clc
push
bound
mov
pop
and
addr16
int3
fcompl
daa
push
jbe
dec
push
cmp
lods
sub
pop
outsl
shrl
shll
xchg
testb
xor
and
addr16
hlt
xchg
rolb
mov
push
sub
pop
xchg
xchg
movsl
pop
lret
daa
dec
jns
mov
jne
mov
and
idiv
and
repz
mov
jne
inc
lcall
pusha
push
sub
jle
xchg
in
in
inc
testl
fistpl
adc
sarb
xor
sub
dec
push
inc
push
in
rolb
enter
or
jo
scas
ret
push
scas
add
and
pop
andb
jmp
sbb
push
lret
jle
mov
cmp
adc
addr16
push
jg
pop
xchg
paddsb
xchg
jecxz
jmp
fnstsw
adc
xchg
leave
mov
cwtl
notl
add
and
push
xor
ret
and
xchg
xchg
add
jl
fdivrl
xchg
push
mov
in
outsb
out
sbb
mov
lock
rclb
or
mov
cmpsl
in
dec
sub
dec
je
ret
rorb
gs
mov
and
mov
mov
mov
dec
dec
push
push
lods
dec
cmp
enter
hlt
or
adc
pop
cmp
sbb
int
ds
push
lods
clc
add
cmp
and
std
adc
jecxz
int3
push
outsl
int
or
push
enter
sub
xor
outsl
cmp
loop
xor
icebp
add
or
arpl
aam
adc
out
imul
jecxz
adc
into
ja
lret
jle
mov
cmpsl
inc
aam
mov
scas
scas
or
inc
in
addl
loopne
ss
out
ja
and
imul
imul
sub
fcmovu
rcrl
lods
mov
mov
ss
and
inc
adc
mov
sbb
dec
cmc
cmc
add
fldcw
xor
stc
push
mov
xchg
data16
sbb
adc
or
fs
lret
add
push
pop
mov
mov
dec
xor
mov
fs
rcrb
jmp
loop
adc
testl
int
fidivl
pop
mov
adc
jge
jecxz
push
mov
add
jae
adc
jg
test
inc
fmull
push
add
dec
add
pusha
mov
mov
stc
lock
mov
into
xor
insb
outsb
and
inc
out
adc
loopne
dec
jg
daa
jne
or
pop
fwait
outsb
and
xor
iret
loope
in
add
dec
sub
push
cld
cltd
mov
adc
adc
cli
jmp
dec
jecxz
push
jne
shlb
xchg
pop
jle
lret
or
testb
outsb
pop
insl
lret
std
jmp
lods
cmp
movsl
cmp
into
mov
mov
mov
lods
movntps
and
jno
sbb
pushf
mov
sub
into
roll
cmp
cmpsl
por
jnp
push
jge
ss
pop
pop
leave
cmp
std
outsb
fwait
dec
aad
jbe
aaa
or
add
rorl
inc
out
xchg
inc
imul
cmp
repz
push
aas
int
cltd
in
xchg
nop
enter
push
mov
test
jge
scas
hlt
adc
push
clc
nop
movsl
cs
pop
push
push
push
xchg
mov
mov
inc
sub
mov
ja
xchg
mov
xor
in
adc
push
fdivl
add
add
outsb
stc
adc
add
sti
jnp
in
decl
out
jg
rcrl
pop
xchg
fldcw
inc
jmp
iret
mov
mov
in
sub
xor
sbbb
hlt
subl
mov
mov
ret
das
cmp
js
stc
in
mov
popf
dec
push
je
jmp
shlb
inc
cwtl
hlt
cmpsb
ret
out
jne
nop
loope
xor
cmp
ljmp
mov
inc
mov
push
mov
xchg
lahf
sbb
mulb
data16
mov
xor
cmp
test
xchg
int3
sbb
mov
aad
andb
jb
adc
test
loope
mov
sub
aaa
cmp
mov
push
adc
jno
or
iret
insl
int
push
ljmp
mov
mov
out
mov
sbb
jge
mov
inc
lea
rcr
fistl
inc
movsb
mov
js
or
xchg
cmpl
idivb
sbb
mov
mov
mov
jmp
and
pop
and
ja
fnstcw
mov
out
xchg
xor
dec
pop
mov
fidivrs
out
imul
and
pop
popa
lret
lahf
mov
clc
pop
mov
faddl
rcrb
filds
hlt
mov
pop
pop
jbe
sub
sbb
aas
mov
xor
jle
scas
ret
jmp
sahf
jae
push
dec
imul
repz
aas
mov
xor
fnstcw
sbb
daa
lds
add
adc
dec
sub
push
data16
xchg
popa
lock
aad
lahf
xor
mov
leave
pop
pop
rol
int
sbb
jg
dec
adc
xor
xchg
pop
cmc
xorl
scas
xchg
push
dec
cs
mov
mov
addb
xlat
pop
xor
pop
aaa
addr16
outsl
aas
add
int
or
xor
adc
xchg
stos
push
ret
jbe
pop
dec
xlat
fildl
aaa
negb
cmpsl
or
ret
bound
mov
scas
jecxz
movsl
les
xchg
fiadds
movsl
fimuls
dec
mov
mov
pushf
xchg
lods
cmp
adc
lcall
xor
jge
push
xor
mov
sbb
lcall
ja
push
dec
jmp
xor
push
adc
rclb
mov
movsl
jp
cltd
xor
add
sbb
cmpsb
jns
mov
push
test
test
or
loop
out
fdivl
xor
shll
mov
add
mov
jg
sub
mov
nop
mov
xchg
ss
stos
cld
push
ja
push
cmp
sub
neg
jle
inc
push
xlat
jge
fwait
pop
not
pushf
xchg
cmpsl
call
adc
popf
mov
xchg
push
outsb
inc
pop
jnp
ja
mov
lret
pop
aam
out
in
jo
inc
sub
outsl
rorb
ret
or
inc
insl
pop
adc
int3
sub
jo
adc
icebp
rcl
lahf
xor
mov
cmc
int3
rol
mov
icebp
idivl
mull
xchg
push
or
xor
push
inc
in
push
lahf
xor
mov
arpl
iret
and
adc
pop
pop
dec
xor
mov
aaa
popf
add
push
jne
pop
jno
push
or
pop
iret
cwtl
scas
hlt
push
es
mov
imul
xor
lds
jl
mov
rcll
and
adc
and
sbb
mov
dec
jg
mov
jb
rcrl
or
mov
imul
sbb
test
imul
fdivl
push
out
jg
lahf
popf
inc
dec
cmp
ficomps
push
aaa
pmullw
out
add
jge
dec
cmpsb
fcmovnu
or
mov
mov
sub
daa
inc
fisubl
mov
inc
jbe
mov
sub
mov
popf
xchg
hlt
adc
push
push
push
xchg
out
jns
xor
xor
dec
out
and
pop
mov
xor
add
rcll
fistps
jae
pop
lcall
mov
and
sbb
adc
mov
inc
adc
adc
fdivrp
loopw
inc
addr16
rorl
popa
sub
xor
stos
cld
add
insb
dec
inc
add
shll
sub
jo
int3
mov
shl
xorl
rcr
in
sub
dec
pop
icebp
jmp
push
inc
add
add
sbbb
in
ljmp
add
mov
cmp
cmp
jle
jmp
cmc
push
mov
movl
add
insb
repz
data16
sbb
mov
ret
mov
mov
je
mov
jne
int3
call
repz
cltd
push
push
jmp
in
push
sub
aam
ja
mov
mov
jb
adc
mov
mov
cmpl
jbe
loopne
sbb
or
fsts
std
mov
add
movsl
into
adc
adc
sahf
imul
push
sti
cmp
add
and
push
es
jnp
int3
push
int3
lret
jb
negb
lret
jge
repz
test
pop
xor
fs
idivl
and
cmpsb
lret
pusha
insb
mov
pop
lods
push
and
push
lock
add
std
inc
push
out
ss
dec
movsb
inc
sub
call
xor
scas
pop
jbe
xor
push
mov
mov
sub
dec
add
xchg
xchg
scas
ja
sbb
incl
mov
mov
je
into
mov
mov
insb
mov
test
nop
test
cmc
pop
push
and
jg
or
push
stc
jbe
mov
ljmp
fsts
xor
mov
cmp
mov
aaa
pop
add
pushaw
inc
pop
pop
repnz
jne
sbb
dec
mov
shrl
inc
icebp
sbb
stos
sub
mov
sub
xchg
or
xor
test
cli
mov
pop
jne
mov
cmpsb
add
xchg
jmp
mov
jb
nop
das
and
add
adc
in
xorl
or
push
mov
xchg
dec
cltd
adc
pop
push
and
dec
cmc
or
shlb
xor
cmp
ret
sub
test
mov
lods
je
cwtl
and
insl
add
divb
xchg
ds
adc
cmpsl
adc
jbe
and
aad
xor
daa
and
sub
jb
add
sub
mov
test
sub
outsl
in
pop
xchg
inc
ja
cli
pusha
icebp
lcall
sbb
fcmovu
mov
lods
mov
adc
pop
testb
fsubp
loopne
lods
pop
outsb
das
cmpsb
push
or
aaa
es
notrack
mov
insl
fldcw
jns
hlt
mov
push
out
ss
mov
cmp
setge
outsb
mov
and
pop
std
test
popa
sub
dec
inc
lcall
scas
aaa
out
or
mov
xlat
and
stos
mov
notl
subl
sbb
ret
shrb
sarb
mov
jle
jo
aad
add
adc
sbb
mov
xor
push
or
lahf
lods
mov
aas
popa
stc
jmp
sbb
sti
mov
cwtl
sub
xchg
cmp
push
and
cmpb
js
lods
ret
pop
mov
roll
rol
cmp
push
cmp
mov
int3
lds
mov
fwait
jl
sar
div
in
les
test
hlt
repnz
fcmovnb
cld
sub
pop
xor
data16
inc
scas
insl
adc
jmp
js
mov
dec
daa
cs
lret
je
addb
adc
adc
movsb
dec
shlb
jo
xchg
arpl
jnp
jmp
fbstp
sub
push
push
or
jp
xor
int3
popf
lods
icebp
ja
add
or
bound
lret
ja
fisttpll
mov
mov
sahf
xor
scas
inc
in
push
jle
push
ret
adc
inc
pop
add
out
imul
add
imul
and
cs
mov
push
add
and
push
inc
test
push
mov
dec
add
jns
icebp
lcall
jae
and
add
nop
adc
xchg
xor
daa
dec
notl
xchg
pop
inc
jmp
and
and
add
outsl
push
mov
push
bound
popa
mov
addr16
fistps
jae
ret
lret
cmpsl
outsl
pop
mov
add
pop
mov
stos
pop
in
into
mov
test
mov
lods
negb
sbb
stc
and
enter
loop
mov
jno
mov
cltd
xchg
sub
cmp
fcomp
dec
inc
inc
lret
xchg
xchg
aas
test
add
int
mov
decl
jp
dec
dec
xchg
leave
cmp
xchg
add
ret
pop
and
sub
xchg
mov
lods
cli
xchg
dec
mov
cmpsl
and
out
sahf
je
mov
dec
push
test
aas
adc
inc
ja
and
gs
sbb
xlat
add
sub
cmp
mov
jb
aaa
fsubl
fcoml
mov
jb
mov
lea
aaa
call
sub
and
sbb
add
xchg
sti
adcb
popa
hlt
fs
icebp
sub
sbb
dec
outsl
ljmp
ret
cmc
test
add
movsb
xchg
adc
repz
jg
cmpb
cmp
mov
in
add
aaa
scas
lea
sbb
je
mov
and
or
or
leave
dec
jns
mov
xchg
xor
and
imul
repnz
or
mov
xchg
push
aad
cwtl
mov
mov
cmpsb
push
dec
repz
lret
mov
mov
mov
js
imul
xchg
xor
dec
or
mov
jno
jp
or
push
mov
adc
in
jnp
lea
loop
sar
add
pop
scas
sti
pop
lret
xchg
test
daa
xor
insl
add
icebp
jge
stc
adc
xor
push
out
mov
ds
mov
mov
and
jmp
mov
addb
lret
in
in
ds
pushl
sub
jmp
add
mov
inc
and
mov
sub
inc
cltd
mov
cli
pop
xor
pushf
inc
insb
or
hlt
lods
outsb
mov
inc
ja
and
jno
or
aaa
mov
lods
and
or
pusha
lret
xchg
jnp
push
mov
ja
stc
out
add
fsubrp
inc
addr16
cmp
lods
or
call
or
out
adc
sub
adc
into
pop
testl
rcrl
mov
or
roll
loope
lret
ret
ljmp
sbb
cli
jl
imul
rolb
adc
inc
push
mov
test
pop
jp
das
jge
loop
mov
bound
scas
movsb
xchg
sub
or
in
pop
mov
pop
sahf
jp
cwtl
xchg
xchg
sub
cmpsb
pusha
scas
leave
pop
js
xlat
inc
in
into
add
dec
sbb
test
bound
int3
mov
cli
ret
ss
sub
rep
mov
dec
lods
adcl
and
sbb
dec
push
cmp
mov
or
fmull
das
mov
pop
shll
mov
lods
adc
dec
push
cmp
mov
cld
test
shll
divb
aas
out
or
inc
xchg
cld
pushf
push
dec
cmp
shll
test
adc
mov
hlt
or
test
xchg
dec
pop
stos
and
add
pop
cmc
repz
xchg
cmpsb
inc
ret
or
int
xchg
or
mov
sarl
sbb
fisubrs
mov
divl
sub
and
mov
add
lcall
out
cmpsl
lods
je
jmp
add
inc
je
mov
mov
cmpsb
rorb
xor
xchg
addr16
pop
sub
daa
fcmovb
inc
rorl
pop
xor
roll
adc
stos
fimuls
lret
jns
pop
mov
cmpb
sbb
cwtl
add
push
stc
add
xlat
inc
pop
or
and
es
movsl
and
pusha
xchg
inc
jb
pusha
shll
cmp
xchg
xchg
lds
lret
mov
fldl
jae
inc
sbbb
mul
xchg
shrl
shlb
pop
pushf
shrl
movsl
sub
mov
sbb
adc
imul
fs
cmpl
mov
mov
nop
or
pop
out
cmpsl
call
mov
mov
and
xchg
out
movsl
mov
push
ljmp
inc
and
or
jle
ds
rol
stos
rcll
into
jg
sub
ror
test
nop
and
add
inc
fldcw
repz
outsl
in
cmp
ret
dec
and
daa
cli
push
adc
push
scas
dec
js
mov
xchg
cmpsl
sahf
cmp
cmp
add
paddusb
or
fnstcw
test
shll
enter
push
adc
adc
jge
mov
push
lahf
push
les
mov
add
push
push
cmc
ret
fnstenv
add
mov
clc
mov
and
movsl
add
xchg
pop
pop
and
movsl
ss
mov
rorl
and
and
scas
push
push
loope
iret
lcall
aam
imul
scas
sti
and
push
dec
rcll
sti
inc
nop
inc
sub
pop
push
std
sbb
dec
int3
outsl
cli
xor
jb
dec
icebp
dec
das
push
inc
fwait
mov
adc
inc
jmp
mov
cld
inc
repnz
sarl
adc
push
xor
sub
push
sub
push
xchg
js
aaa
jne
add
shll
or
ffreep
sahf
lock
stc
push
fiaddl
and
push
mov
xchg
scas
push
xchg
scas
push
xchg
cmp
in
xchg
xchg
movsl
fisttps
minps
dec
jecxz
ss
orl
jns
out
cwtl
popf
arpl
adc
in
mov
mov
sbb
sti
clc
jl
into
lea
and
pop
ret
insb
je
jne
dec
mov
cmp
adc
decl
ljmp
sbb
aam
mov
das
scas
xor
mov
cmpsl
mov
and
cli
push
jae
je
movsb
inc
call
push
inc
fimuls
stos
cmc
out
popa
jp
lret
pop
adc
rorb
stos
or
inc
pusha
xchg
lods
sub
in
fidivrl
add
leave
inc
aad
adc
test
xor
je
jno
mov
inc
ret
or
fadd
rcrb
int
jbe
in
fld
leave
insl
inc
loope
or
repz
cmc
arpl
jae
cmp
pop
clc
rcr
mov
pop
jle
mov
or
pop
inc
cmp
jne
push
pop
inc
pusha
ficompl
jnp
jno
je
pop
pushf
pop
and
in
sahf
mov
cmp
lock
out
mov
adc
xor
xor
mov
lcall
xor
push
pop
jmp
jne
sub
in
lods
mov
aam
or
xchg
adc
or
sbb
pop
test
xor
mov
pushf
adc
in
cmp
jnp
in
pop
cmp
sti
mov
in
in
es
jns
inc
add
les
mov
in
dec
rdmsr
and
repnz
movsb
mov
imul
dec
ret
add
cmp
add
mov
sub
add
add
pop
outsb
or
in
xor
dec
bnd
jecxz
xor
adc
sbb
pusha
and
xchg
out
cs
mov
inc
mov
jns
loopne
sub
add
pop
in
out
fistps
loop
cmp
sub
sub
repz
lods
jle
cmp
jae
es
jl
xlat
repnz
imul
sbb
xchg
add
mov
add
call
add
daa
ja
int
inc
adc
pop
mov
add
fcomi
repz
xchg
pop
mov
aam
pop
ss
sbb
adc
xorl
pop
jns
jnp
gs
repnz
adc
cld
mov
fistps
pop
sub
out
clc
pop
rclb
sbb
roll
lea
push
popa
adc
sub
mov
dec
pop
aad
jno
sti
insl
xchg
inc
lds
cmc
mov
out
cwtl
lret
pop
jae
rolb
sarb
inc
sarl
push
xchg
nopl
pop
push
adc
jne
dec
negl
pop
and
inc
aam
add
pushf
ret
cltd
rcrl
xor
sub
cli
ret
enter
adc
push
dec
daa
push
mov
mov
shl
int
out
leave
cmp
call
das
in
test
clc
std
and
int
sub
sbb
cs
and
in
push
jns
enter
and
lock
sahf
sub
xor
insl
mov
mov
xor
fisubrs
mov
xor
mov
mov
stos
les
inc
add
xor
push
clc
ret
lcall
stc
xchg
inc
adcb
nop
pop
int3
pop
scas
or
lret
sti
imul
add
or
cmp
cmc
push
cmpl
mov
add
jecxz
arpl
cwtl
fwait
sahf
fiadds
push
xchg
dec
adcl
sar
addr16
loopne
pushf
dec
mov
sbb
inc
mov
pop
xor
adc
out
adcb
dec
push
out
or
xor
jle
cwtl
cmp
dec
addr16
pop
lods
cli
shlb
pop
test
jnp
lret
mov
jmp
push
push
push
cld
inc
outsl
sub
or
mov
in
xor
gs
cmp
lret
push
mov
dec
pushf
jb
jle
leave
jno
clc
mov
sti
pop
shlb
sarb
cwtl
add
inc
es
test
mov
ret
ja
sub
inc
subb
xchg
decb
enter
rcl
mov
sbb
jmp
and
pop
movsl
in
add
loop
cmp
dec
or
das
das
roll
dec
pop
sub
in
add
inc
ficoml
mov
mov
inc
sbb
and
xchg
mov
dec
and
mov
insb
and
in
and
inc
clc
les
cmpsl
sub
iret
jg
dec
xor
fsubr
loope
push
push
pop
bound
adc
hlt
cmp
push
or
dec
imul
cmp
cmp
das
hlt
arpl
test
jo
lods
cmp
inc
sub
lahf
pop
jge
popf
xchg
imul
jge
pusha
fninit
push
in
cmp
xlat
mov
xor
sbb
fwait
dec
dec
add
xor
cmp
push
or
or
out
add
test
lahf
mov
into
mov
scas
int
repnz
shrl
pop
movsb
xor
outsb
mov
test
aam
movsl
xchg
int3
shrl
and
iret
shrb
test
inc
xor
into
lds
mov
mov
in
ret
loope
rcrl
cmp
inc
stos
lock
mov
and
hlt
jb
dec
dec
dec
mov
inc
xrelease
pop
sub
jae
adc
push
std
mov
mov
mov
popa
add
sbb
or
enter
cmp
imul
push
mov
jno
sarb
inc
lahf
mov
mov
and
out
mov
nop
jecxz
test
or
mov
jle
jo
or
icebp
mov
in
aaa
jmp
jbe
jne
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fsubl
pop
bound
pop
bound
sbb
dec
mov
jge
in
call
loopne
dec
dec
das
mov
maxps
mov
and
in
pmullw
mov
test
in
enter
xchg
not
adc
icebp
fsubrs
shlb
push
ljmp
insl
cltd
dec
inc
rcr
iret
dec
pop
js
mov
adc
out
jo
clc
add
mov
sbb
sbb
shll
add
shrl
push
bound
clc
int3
test
mov
pop
nop
sub
or
xor
int
xor
fwait
xchg
loope
cli
mov
jp
insl
mov
adc
insb
int
jle
dec
pop
and
mov
loope
cmp
and
ja
jle
push
fcmovnu
testb
xlat
adc
add
push
adc
fwait
outsl
into
cmp
ret
and
out
pop
pop
xor
dec
lret
lcall
mov
loop
mov
repnz
fisttps
cmp
cmpsl
lods
sub
fwait
mov
dec
adc
xor
xor
xchg
push
leave
push
mov
cli
dec
xor
sahf
pushf
cmp
js
xchg
fidivrl
sar
xor
mov
lock
mov
mov
xor
and
sahf
jg
mov
subl
lea
cmp
pop
divb
out
inc
sub
cmc
lret
jnp
loopne
xor
xchg
xor
das
pop
sbb
lahf
data16
out
pop
test
push
daa
gs
cld
test
mov
jne
pusha
xlat
inc
xchg
aam
mov
mov
jecxz
push
sub
test
sbb
pop
inc
xor
adc
jbe,pn
dec
xor
lds
call
mov
cmpsb
push
xchg
es
aas
rol
cmpsb
xchg
add
andl
fildl
push
mov
gs
or
out
pop
xor
ljmp
xchg
loope
repz
or
push
xor
arpl
andl
mov
xor
lret
rcl
mov
movsl
mov
sub
imul
inc
sarl
cmpb
xlat
popf
xchg
xchg
fmul
mov
call
ret
std
pop
fistpl
xchg
push
mov
shl
movsl
sub
gs
notb
ljmp
ret
fsubr
mov
mov
sub
or
sub
mov
xor
add
cmp
push
sti
lock
fildll
ds
mov
mov
dec
insb
pusha
ljmp
xor
jmp
mov
enter
sub
fdivrp
push
inc
jae
sub
or
sbb
or
aam
fmul
mov
cli
sahf
mov
ret
mov
add
mov
jecxz
mov
push
outsl
dec
sbb
sbb
ss
pop
xor
outsl
rolb
mov
pop
cmpsl
mov
int3
sbb
ficoms
push
adc
cs
adc
cmp
cwtl
icebp
sub
pop
testb
xor
pop
sub
imul
fcompl
arpl
or
inc
mov
icebp
or
adc
int3
mov
xor
stc
rorl
test
add
insl
pop
inc
cmpb
in
addr16
arpl
xor
cs
call
add
mov
jecxz
repnz
sbb
fs
pop
sub
sub
jl
stos
int
lods
ljmp
pushf
inc
cld
dec
sub
dec
xlat
iret
sbb
push
aad
psubusw
jecxz
dec
mov
pushf
rolb
cld
xchg
fbld
mov
mov
sbb
fsubs
jl
dec
inc
pop
adc
push
fcomi
cmp
sub
jle
imul
stc
cld
push
cmpsb
push
ljmp
popa
adc
pop
or
test
lahf
pop
jae
gs
stos
adc
sbb
shlb
jae
sbb
lea
loopne
mov
sbb
jl
xor
pop
xor
arpl
shrb
or
hlt
sbb
add
mov
lds
pop
adc
push
adc
inc
fistpl
mov
cmp
xor
pop
outsb
xchg
jbe
jb
xor
ret
sbb
mov
pop
xchg
jge
inc
cmp
mov
adc
shrb
dec
or
fstps
int
fldt
popf
lods
push
lcall
into
mov
pop
and
xchg
add
push
inc
out
test
into
int3
mov
aas
adc
jo,pt
hlt
subb
fsubrs
cwtl
in
in
sbb
mov
mov
rcrl
cmp
inc
call
xchg
sub
mov
lds
and
aam
push
mov
pop
adc
jns
shll
mov
adcb
xchg
add
adc
shll
out
movsb
dec
shll
outsb
pop
dec
add
lret
mov
sbb
loopne
out
mov
pop
pop
std
sub
mov
inc
loop
add
xor
pop
mov
push
xchg
in
scas
iret
mov
in
xor
or
pushf
in
iret
xchg
das
fildl
add
dec
fnsave
in
fistpl
pushf
outsl
xlat
push
inc
outsb
mov
rcrl
js
push
sub
mov
add
cltd
sbb
movl
insb
or
jecxz
mov
cmp
mov
sbb
push
lahf
pop
cmp
icebp
cld
xchg
or
cmpsb
daa
pop
inc
dec
loop
push
mov
sub
in
jo
jae
hlt
cmpsl
mov
jo
ret
lods
mov
xchg
ds
in
fldt
into
loope
xlat
pop
aaa
or
aaa
loopne
loope
dec
jne
mov
lret
rcrb
adc
movsb
sub
iret
mov
adc
push
int
lcall
movsb
jnp
out
movsl
add
ud2
add
and
cltd
jns
cmp
mov
xlat
rol
in
and
push
pop
bound
out
pop
frstor
adc
mov
add
aaa
add
push
pop
push
arpl
sub
pop
cmc
or
pushf
inc
mov
xor
jo
add
imul
out
mov
jae
nop
popa
jl
pop
xchg
xchg
mov
and
xchg
mov
mov
inc
or
cld
push
stos
je
out
lock
subb
xor
test
stos
jnp
jecxz
inc
outsb
sub
clc
add
mov
cmp
insl
cltd
add
in
std
cmp
ficompl
fstpl
loopne,pn
cs
inc
sbb
sub
hlt
gs
bound
add
push
mov
jge
je
stc
leave
dec
movsb
mov
testb
adc
push
pusha
mov
mov
out
in
pushf
lods
and
sub
dec
call
fdivl
jnp
dec
adc
lods
dec
mov
rolb
or
ret
jo
ljmp
inc
ss
push
sti
sub
adc
mov
pop
sub
lock
lret
xchg
jp
or
push
test
rcrl
sahf
push
fnstenv
jne
fnstenv
les
mov
cmpsl
sbb
push
lea
clc
lret
push
fildl
addl
ljmp
mov
je
pop
test
pop
inc
shrb
push
test
gs
cmp
je
lods
mov
jge
ret
cmc
xor
fcomps
movsl
neg
xor
les
cltd
adc
mov
fwait
in
enter
mov
jg
testb
jbe
inc
push
cld
fistl
pop
xchg
or
lret
arpl
and
fistpll
xchg
sbbl
dec
mov
mov
lret
movsl
push
xor
push
int3
pop
sub
xchg
jnp
mov
add
or
push
jmp
xchg
jp
repz
repnz
addl
adc
mov
cmp
movsb
mov
xor
das
dec
jecxz
es
outsb
push
lgs
imul
fadds
sbb
adcb
sub
imul
mov
cli
pop
inc
shl
rcr
movsl
lret
into
cwtl
mov
insb
mov
movsb
js
xor
jg
lret
out
roll
lret
or
add
jnp
dec
cmp
iret
out
mov
mov
pop
inc
es
pop
cltd
push
jle
fsubr
lock
pushf
fdivrl
mov
mov
scas
and
jle
bound
xchg
mov
cmpsl
loop
cmp
outsw
outsb
out
ror
mov
aas
inc
cwtl
sbb
inc
jle
xchg
mov
stos
sbb
flds
and
cmp
or
ljmp
cmpl
xchg
mov
repz
push
jecxz
push
popa
lea
pop
jg
push
adc
test
sbb
pusha
dec
ret
jne
inc
aam
adc
imull
lahf
push
gs
out
je
les
daa
pushf
leave
outsl
inc
adc
inc
and
mov
mov
testl
pusha
pop
hlt
aam
push
adc
ds
dec
lret
cltd
lret
cmc
sahf
bound
cmp
add
xchg
add
clc
jne
clc
push
jle
repnz
fdivl
inc
pop
fsubrl
popf
jg
ds
push
pop
ja
stc
das
or
ret
icebp
aas
imul
popa
adc
movsb
mov
and
dec
gs
mov
cmp
and
dec
daa
dec
in
sbb
outsb
decb
mov
pop
xlat
inc
insl
inc
xor
mov
jne
fdivs
jae
fstl
int
into
cmp
mov
cmp
stos
cmp
shrl
fldt
popf
cmc
xchg
sub
sub
repz
jmp
divb
stos
int3
je
pop
sub
testl
inc
mov
imul
fadds
jbe
and
aad
mov
jl
jae
fcomip
rclb
aas
cmp
rcrl
es
cmpsb
jecxz
push
cli
fldcw
jo
mov
enter
jns
enter
dec
repz
xor
jp
mov
ss
xor
fdivrs
iret
sub
pop
push
cmpsl
adc
xor
movsb
cmc
shl
mov
or
inc
push
mov
mov
popl
pop
pop
test
inc
pop
ret
shr
mov
jmp
or
adc
pop
pusha
je
and
mulps
cmp
xor
and
mov
ret
add
cmc
push
jp
add
movsb
jmp
ficoml
xor
pop
push
mov
mov
mov
js
movsl
adc
test
cmp
icebp
add
adc
xchg
test
xchg
ss
jb
cmp
or
mov
dec
movsl
rolb
push
push
xchg
mov
pop
mov
ficoms
mov
fists
mov
in
testl
shlb
sbb
mov
les
sbb
dec
shrl
loop
cmp
pushf
mov
insl
in
test
jecxz
add
pop
push
and
outsb
dec
int3
cmp
inc
loope
outsl
push
jge
sub
movsl
out
jge
test
stos
imul
or
mov
test
xor
orl
sub
cmp
cmpsb
mov
aaa
jmp
sub
ljmp
pusha
add
shlb
jns
and
cmp
lods
pop
aad
xchg
bound
pusha
test
mov
fadds
xor
pop
and
stos
xchg
jmp
ja
xor
cmpb
dec
cmp
xchg
mov
ret
icebp
cmp
jo
adc
leave
jg
cmpsl
lahf
jns
cmp
je
ret
lret
sbbl
jae
insb
xchg
cmp
jns
fbld
or
xor
push
cmp
data16
adc
cltd
xor
pop
inc
push
push
clc
pushf
mov
ja
into
int
mov
dec
jecxz
pop
movb
sbb
mov
sbb
test
clc
pop
fcmovnu
movsl
test
jl
mov
cmc
push
xchg
cmp
test
call
aam
mov
and
push
cmpsb
cmpsl
pop
jl
push
mov
cmc
lcall
add
fstpl
es
imul
xchg
movsb
test
shlb
cmp
movsb
cs
je
mov
push
jmp
repnz
lock
mov
fsts
xor
mov
movsb
mov
movsb
clc
mov
add
inc
mov
sbbl
push
iret
pop
mov
ja
ficoms
add
ret
inc
mov
gs
knotw
vpmadcswd
dec
or
stc
adc
test
xchg
cs
and
test
jno
mov
loope
bound
or
loop
mov
test
je
stos
iret
popf
push
fsubrl
loop
sahf
sub
adc
and
cmp
std
xchg
insb
frstor
jne
cld
shrl
or
fs
packuswb
xchg
inc
addr16
jle
dec
push
fcmovnb
add
inc
out
stos
data16
add
push
adc
or
clc
call
xchg
ret
jmp
int
in
rol
fwait
cltd
dec
rclb
jge
mov
mov
clc
push
aad
push
jns
ds
popa
daa
shrl
inc
dec
cmpsb
sub
ss
pop
mov
sbb
rorb
cmc
jmp
imul
stc
push
xlat
imul
insl
push
sahf
ljmp
enter
in
fsubl
rclb
dec
cmp
or
cmp
dec
sti
ljmp
lret
sbb
sub
mov
or
jmp
popf
push
insl
daa
or
jge
rolb
mov
lahf
aas
je
imul
mov
movsl
dec
push
arpl
in
aas
xchg
xchg
popa
es
icebp
cli
push
fsubrl
jge
mov
cmp
aas
fcomps
dec
mov
ret
or
iret
pop
stos
hlt
enter
test
std
out
fldl
scas
jmp
js
fnstenv
cmpsl
adc
mov
lods
or
and
lret
mov
xchg
insl
sub
int3
in
icebp
xor
xor
in
cltd
les
fs
inc
shl
mov
add
push
es
stos
roll
repnz
pop
leave
cld
jno
lcall
push
enter
mov
sbb
jae
sub
lahf
cmp
jmp
lods
outsl
cld
cmpsl
out
int3
dec
outsb
and
jge
lret
mov
pop
pop
cmpsl
jmp
inc
mov
sub
xlat
repz
out
xchg
outsl
decb
jp
iret
dec
adc
loope
adc
mov
movq
or
mov
test
into
lret
roll
pop
inc
stos
inc
ss
aas
add
in
inc
je
loopne
ja
mov
cmp
dec
lahf
jecxz
add
testb
push
dec
mov
cs
jo
fsubrl
sbb
cmpsb
mov
adc
bswap
cld
sub
adc
push
lahf
mov
das
cltd
sbb
push
inc
cmpl
aad
call
mov
sub
out
jbe
ljmp
cs
inc
mov
repz
ja
fs
daa
mov
sub
jbe
push
fs
cld
xchg
fwait
cmpl
mov
out
jg
repz
loop
daa
cli
outsl
sbb
and
sbb
cmpb
in
mov
sub
cmp
and
xor
insb
aam
fs
jb
fs
nop
sbb
push
stos
call
mov
sub
add
push
push
mov
dec
dec
subb
and
or
cmp
shrb
test
xchg
sarl
push
jns
or
int
dec
jo
mov
cltd
stos
jp
or
in
gs
lods
fs
push
mov
stos
popf
pop
in
or
mov
andb
add
inc
adc
mov
cld
test
divb
jg
mov
in
stos
jmp
and
push
xor
pop
jmp
jge
inc
xchg
cli
arpl
jl
jno
mov
out
or
setp
and
loope
dec
mov
jbe
dec
arpl
jo
add
mov
inc
fs
hlt
or
fsubrs
jg
push
pusha
fucomi
add
shlb
lock
sub
ja
sub
dec
jle
push
mov
xor
mov
fmull
mov
setp
xchg
sbb
sbb
clc
mov
lcall
mov
cmp
ljmp
mov
jp
out
mov
mov
or
and
mov
dec
jno
adc
sub
xchg
in
push
es
jl
push
inc
or
cmc
cwtl
xchg
outsl
mov
cmp
movsb
add
xchg
inc
mov
xor
mov
push
mov
lahf
js
push
int3
mov
std
lods
cmp
cld
aad
pushf
xchg
dec
sbb
repnz
sub
sbb
pop
push
cmp
mov
or
bnd
mov
movsl
sub
or
lret
xlat
lret
cmp
pop
inc
or
aas
and
cli
mov
in
leave
jne
cvtps2pi
dec
das
imul
add
loop
xchg
fs
test
mov
int3
fisubrl
out
jmp
leave
cmp
ret
aad
cmp
imul
shr
or
lods
and
roll
ret
enter
pusha
jae
xchg
or
and
sub
pop
mov
xchg
pushf
inc
mov
aam
out
cmp
mov
mov
das
inc
push
enter
ja
jge
divb
sbb
std
loopne
fmull
lret
inc
xlat
sub
pmulhw
push
imul
push
ljmp
mov
ljmp
add
loopne
imul
cmp
mov
out
and
dec
mov
and
test
out
mov
dec
stos
push
popa
pop
jno
clc
cmpsl
fdivrp
js
cwtl
and
cltd
das
cmp
xor
fistl
pop
and
sub
mul
shll
stc
icebp
test
adc
test
outsl
adc
xchg
xchg
jecxz
sub
add
imul
outsl
jmp
adc
adc
rcr
or
add
inc
ja
sub
int3
sbb
int3
push
dec
hlt
mov
pop
sarb
adc
popf
and
movsb
mov
sub
lret
dec
xor
stos
mov
jecxz
xor
popf
push
fcoms
xchg
jns
icebp
repz
clc
loopne
aad
mov
pop
test
pop
jmp
mov
mov
mov
sar
loop
in
lods
mov
dec
inc
cmp
jmp
dec
jp
dec
test
loopne
into
mov
pop
stos
movsl
dec
sbb
push
jl
in
adc
pop
outsb
fbld
xchg
repnz
lcall
in
mov
mov
lcall
shlb
lret
dec
filds
adc
adc
ror
imul
xchg
lret
stc
in
sbb
mov
mov
ficompl
mov
xchg
repnz
jl
fadd
flds
jmp
outsb
lods
add
or
push
call
mov
ret
iret
mov
or
mov
sarl
int3
inc
aam
xor
popf
cmp
pop
repz
jmp
in
sbb
xor
sarl
mov
cmp
in
dec
xlat
pop
mov
xor
jns
inc
push
adc
dec
add
cmc
cmp
mov
adc
gs
cli
inc
std
addl
insb
outsl
cld
add
popf
jno
jae
jae
shrl
enter
jno
ret
test
jg
cltd
sbb
cmp
mov
pop
pop
std
xchg
je
lock
lret
push
sahf
rol
push
ret
push
mov
mov
sub
xlat
xlat
insb
dec
adc
push
xchg
push
xor
add
pop
sbb
js
lahf
sbb
sub
or
lret
mov
je
mov
jmp
sub
inc
adc
rcl
loop
nop
or
xorl
mov
js
sub
ljmp
mov
insb
and
addr16
and
jl
incb
dec
pop
sbb
lods
add
inc
jno
ds
adc
jmp
int3
pusha
cmpb
imul
push
cmp
mov
or
insb
sahf
out
rol
ret
ret
out
pop
lahf
mov
mov
xor
xor
inc
fidivrs
imul
fwait
sub
inc
jp
pop
mov
stos
in
rorl
aas
mov
ret
in
aam
push
push
lds
push
lahf
cmp
pop
lahf
push
fmull
dec
cmp
jnp
pop
ljmp
dec
and
and
jo
int
xchg
ja
hlt
mov
sti
or
sbb
sbb
ret
mov
shl
or
xchg
and
xchg
adc
xchg
cmp
enter
and
out
cwtl
sbb
insl
dec
out
push
cwtl
add
pop
xor
mov
jl
xchg
and
jp
push
mov
and
outsb
push
mov
adc
mov
xor
xor
mov
in
inc
jo
sub
pop
imul
mov
scas
mov
push
mov
push
pop
sub
cwtl
push
mov
sub
insb
xchg
lock
insb
pop
xor
ss
aad
ds
adc
jmp
movsb
mov
sbb
mov
add
addl
dec
push
stc
cld
adc
ja
jle
push
push
arpl
xchg
loope
xor
and
aaa
inc
fildll
jge
mov
lea
ljmp
lea
sub
enter
add
out
cmp
pop
mov
mov
and
adc
repz
fbstp
out
xor
add
and
mov
mov
fmull
stos
les
xor
fs
and
pop
or
push
jmp
dec
icebp
adc
adc
ljmp
imul
fwait
es
sbb
sysenter
int3
cli
leave
jo
and
sbb
jne
ds
daa
lods
xlat
int
pop
pop
sbb
pushf
ss
xchg
jnp
imul
pop
xchg
sub
dec
jp
and
shrl
bound
leave
inc
sbb
loopne
push
dec
scas
push
push
lcall
movsb
popf
sub
jbe
stos
xchg
jb
add
jbe
ret
mov
or
mov
jmp
sbb
or
fwait
adc
cmc
fidivl
adc
pop
push
xchg
cmc
sbb
jle
std
lea
loopne
jb
add
out
jns
jnp
sub
fistpll
fs
xor
cmp
fs
cmc
clc
fwait
xor
enter
inc
aaa
xchg
enter
bswap
dec
sub
ds
rcrb
aam
in
movb
out
sub
test
jmp
sbb
das
andl
xor
idivl
add
rorl
sub
lcall
stos
out
pop
pop
xchg
imul
adc
xchg
movd
scas
cli
inc
addr16
ds
add
and
jge
shrb
push
sti
push
and
xlat
jae
cmp
scas
dec
and
push
int3
mov
mov
push
xorb
jecxz
imulb
psubsw
jae
jo
sbb
lock
lock
add
jne
inc
cmp
add
lcall
push
int3
xorb
nop
shrb
cltd
bound
nop
mov
adc
shl
inc
adc
fists
pop
mov
icebp
notb
cld
cs
mov
mov
imul
aas
outsl
aas
shlb
dec
ss
lds
lods
data16
cli
xor
fsubrs
pop
xor
pop
push
dec
dec
mov
inc
loop
cli
xchg
pop
mov
inc
dec
push
pop
sbb
cltd
push
pop
nop
bnd
add
aad
scas
xor
xor
mov
xor
into
jmp
jg
and
aam
mov
or
lock
test
je
adc
fsts
aaa
mov
iret
shlb
xorb
mov
std
orb
ss
scas
adc
push
test
adc
movsb
xor
push
add
and
repnz
push
or
out
cmp
mov
push
out
adc
addr16
fs
xor
mov
sub
cmp
mov
cmpsl
ficoms
popa
call
adc
push
add
es
mov
add
data16
lret
pop
mov
movsl
imul
jmp
adc
sarb
data16
dec
dec
sar
jl
pop
cli
into
sub
ret
test
cmpsl
sbb
iret
mov
adc
mov
push
jecxz
push
cmp
xchg
inc
inc
call
cmpsl
repnz
mov
sub
pop
jge
iret
out
mov
inc
int
and
push
repnz
add
dec
xchg
shlb
jnp
and
shll
jge
ss
xor
jl
leave
sahf
mov
les
pop
js
sbb
ret
jp
js
cmc
and
sbb
pusha
pop
scas
mov
cmpl
sahf
inc
jno
add
arpl
aaa
loopne
add
call
xchg
in
pop
cmp
pusha
sub
shll
je
aas
mov
mov
fnstsw
rclb
xor
inc
arpl
sub
leave
dec
popa
inc
ljmp
or
sbb
jl
jmp
push
lds
inc
mov
bound
jmp
inc
push
cmpsl
mov
cmp
into
movsl
mov
mov
out
sahf
daa
jp
mov
shld
in
sub
arpl
addl
fnstsw
pop
mov
and
fstpl
sbb
daa
mov
inc
jl
mov
mov
leave
add
das
or
push
lret
lea
lock
and
add
je
sarl
addr16
dec
pop
pusha
xchg
out
subl
rorl
shr
push
nop
dec
fadds
js
testb
adc
jl
sbb
fcoms
lds
test
mov
jno
int
cmp
shll
ja
mov
loop
fidivl
jecxz
outsl
test
xchg
cld
icebp
out
stos
xor
inc
mov
push
mov
sub
xchg
stos
dec
fists
nop
mov
in
loope
xchg
sub
and
dec
add
xor
sbb
dec
dec
pop
out
fsubl
push
xchg
mov
sbbb
movsb
loope
shr
mov
imul
push
lret
js
outsl
es
adc
push
sub
pop
and
xor
pop
sarl
xchg
mov
and
rcrb
sahf
xchg
addr16
jecxz
mov
ljmp
and
jb
loope
or
mov
shlb
fnstenv
sbbb
mov
add
add
insb
add
xchg
mov
xor
cld
lods
mov
lahf
push
enter
or
insl
dec
jp
movsl
cmp
push
inc
int
bound
cli
ljmp
push
add
inc
xor
add
xchg
je
pop
cs
fs
add
sbb
sub
ficomps
lret
loop
push
xor
arpl
sbbb
clc
mov
mov
rolb
mov
shlb
pop
sub
xchg
mov
sub
sar
shll
ret
test
stos
pop
xor
hlt
or
jg
jle
push
mov
push
out
mov
or
mov
or
rcr
mov
mov
adc
inc
or
and
test
inc
fsubs
xorl
scas
sub
jmp
scas
jno
dec
sub
clc
aad
xor
add
adc
sub
sbb
ljmp
sub
insb
xchg
icebp
lahf
cmp
push
repnz
mov
inc
xchg
out
cmp
add
dec
dec
sub
or
nop
inc
inc
push
xchg
cltd
mov
and
loopne
imul
int
enter
pop
mov
push
test
xchg
inc
pop
addl
push
xchg
xchg
dec
mov
int
test
ret
xor
sub
loopne
push
cmp
add
mov
jmp
xor
and
loope
aas
ret
test
out
add
cmp
fisttps
mov
call
xor
ljmp
add
stos
mov
movsl
pushf
mov
sarl
jl
fwait
cli
mov
cmpsb
bound
pop
in
mov
les
mov
mov
sub
mov
addb
js
cmp
testl
jle
cwtl
inc
cmpsb
in
stos
outsl
repz
fisttpll
mov
fcoms
insl
xchg
pop
push
push
out
jns
pop
jo
in
clc
mov
pop
stc
insb
dec
pop
repz
cmp
jns
mov
pop
mov
inc
cmc
cmp
mov
inc
lds
sahf
or
mov
xor
aam
stos
flds
xchg
mov
outsl
mov
xor
lahf
lcall
je
faddl
adc
mov
jo
push
cmp
sub
out
loope
push
cmpsb
pop
lock
aas
mov
jle
mov
cmpsb
push
enter
adc
adc
dec
mov
mov
mov
dec
fucom
and
cmp
push
dec
loop
out
movsl
push
mov
add
mov
test
push
imul
or
out
jb
adc
stc
and
js
adc
pop
loope
cli
data16
scas
sub
scas
mov
push
cmpl
mov
jo
std
push
xchg
cltd
push
ja
cmp
faddl
mov
push
dec
lock
pop
xchg
jb
scas
ljmp
cwtl
dec
test
cmp
fisttpl
adc
cltd
mov
rcll
push
inc
and
inc
mov
mov
mov
test
mov
sub
mov
call
sarb
add
pop
and
stos
xchg
loop
push
mov
xor
mov
ljmp
or
mov
push
cmc
hlt
cmp
and
cmpsl
xchg
push
mov
les
cmpl
or
sbb
roll
mov
jge
push
or
notl
or
mov
push
ret
out
out
push
lea
sahf
out
jg
or
push
pcmpeqw
aas
insl
filds
nop
fmul
insl
jns
dec
test
pop
mov
push
das
cmpl
pop
push
mov
lret
pop
lret
mov
inc
es
test
leave
mov
adc
out
mov
sarl
inc
fisttpl
adc
jle
or
in
les
fdivr
xchg
mov
ja
or
bound
int
loopne
cmp
pop
add
push
jnp
pop
ja
mov
dec
int3
scas
add
nop
inc
insb
orl
std
or
ret
jae
mov
das
xor
mov
sbb
mov
mov
jp
pop
adc
jno
test
aaa
subl
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
jns
xchg
cmp
bound
pop
bound
push
mov
insl
cmp
pop
aad
incb
jno
jl
add
sbb
jp
adc
shrb
xor
inc
and
fidivs
jmp
pop
cmp
movsb
push
dec
pop
fwait
ficomps
movsl
inc
jnp
and
roll
in
jo
sbb
dec
sub
and
sub
inc
rclb
pusha
mov
icebp
shll
sbb
es
stc
addr16
pop
jp
jg
xchg
or
or
cmc
loope
call
out
pop
std
xchg
push
jnp
and
popa
test
fsubs
jnp
sub
ljmp
xor
xor
call
add
add
dec
cmp
daa
fisttps
or
stc
mov
push
dec
push
in
xchg
mov
or
cmp
sbb
mov
popf
jae
bnd
leave
and
xchg
jmp
int
xor
loope
inc
pushf
fisubl
icebp
dec
xchg
sub
push
lcall
push
xchg
in
dec
fcomps
mov
movl
jns
bound
clc
shrl
out
rclb
jmp
cmpsl
repnz
shrl
xor
mov
sahf
xor
test
jmp
int
test
jl
lcall
loope
mov
pop
fnstenv
xor
pop
jo
jnp
jmp
int3
ljmp
lds
mov
jb
xchg
mov
insb
test
sbb
scas
orb
pushf
cwtl
jb
and
inc
mov
into
sti
mov
cwtl
jle
jmp
fnstcw
insl
mov
inc
adc
xchg
lret
jecxz
arpl
push
aaa
enter
adcl
sbb
xchg
lret
push
push
and
adc
cmp
loope
push
pop
cmpsl
or
xchg
pushf
sbbl
test
sbb
push
fwait
roll
sub
mov
scas
adcl
loope
cmc
ljmp
mov
cmp
dec
fcompl
mov
xor
arpl
push
dec
or
push
lret
out
inc
loope
adc
jo
sbb
mov
mulb
xor
cmp
xchg
sub
in
cmp
roll
aaa
mov
les
pop
xor
jns
scas
mov
mov
cmp
icebp
pop
pop
ror
imul
xchg
sbb
lods
mov
or
notb
cli
repnz
cmp
mov
cmp
add
test
mov
push
dec
mov
stos
cmp
jp
pop
je
mov
sar
jo
push
jg
in
xor
mov
arpl
stos
sbb
pop
lods
rorl
lahf
mov
scas
or
mov
pop
mov
das
xor
push
or
into
test
imul
mov
inc
enter
arpl
jg
scas
jmp
push
test
jae
cmp
into
inc
push
push
imulb
les
inc
jmp
add
popf
cmc
out
orl
leave
fidivl
cmp
xchg
cmp
fidivl
sub
jb
or
jp
lret
jns
hlt
dec
imul
adc
fadds
roll
fwait
jg
mov
cld
adc
dec
aam
and
fimuls
into
cmp
xor
insb
fisttps
fs
rol
jp
dec
sub
jb
sub
data16
xchg
sti
mov
xor
fadds
int
js
jge
inc
sbb
das
stc
jle
jo
sar
adc
ror
or
add
jb
fmul
jge
lcall
xor
lret
push
push
iret
call
lods
or
andl
movsb
into
inc
shlb
lahf
ljmp
sbb
je
cmpl
ficoms
sti
cmpsb
fistpl
or
mov
xor
shll
outsb
push
and
jo
pop
lret
jmp
mov
inc
inc
subl
push
add
movb
lods
add
out
add
in
push
push
xchg
rcrb
xor
dec
cld
cmp
mov
add
fcomps
push
jo
sarl
stc
fwait
ret
mov
imul
es
adc
cmc
mov
xchg
in
adc
hlt
add
jne
and
hlt
fldt
fwait
jle
mov
mov
xor
pop
repnz
out
pop
xor
and
xchg
inc
push
lret
arpl
insb
cli
inc
das
jl
popf
shrb
fwait
xor
out
inc
jbe
fdivl
adc
dec
cmp
enter
test
pop
and
dec
sub
mov
aas
or
adc
clc
or
loopne
cmpl
xor
test
add
xchg
sub
push
inc
imul
mov
dec
dec
in
stos
or
stc
insl
fisttpll
stc
sub
push
imul
pop
repnz
cmp
inc
ror
ficomps
add
outsb
fsubl
xor
pop
pop
adc
lock
ja
xor
push
shrl
mov
sete
mov
mov
cli
pop
popf
mov
dec
xchg
add
dec
ret
or
and
cmp
into
fisttpl
or
sub
adc
adc
fiaddl
cmp
addr16
xchg
les
lcall
sar
or
ljmp
mov
or
fcoms
je
pop
xchg
mov
pop
pop
lahf
pop
push
lock
adc
pop
lcall
imul
stc
adc
test
scas
imul
jle
in
sbb
mov
das
ret
jge
lahf
add
pop
dec
addb
sub
lock
in
insl
jp
nop
sbb
dec
add
cli
arpl
cmp
call
outsl
pop
rorl
sub
imull
test
inc
fistl
inc
lret
mov
ret
cmp
push
xorb
add
dec
pop
and
pop
push
and
cmp
sbb
xor
adc
xchg
shrl
mov
cmpsb
xor
xor
or
pop
mull
int
jmp
scas
inc
jl
mov
movsl
push
xchg
sbb
inc
ljmp
in
mov
xor
outsb
mov
mov
lods
aas
pop
mov
fidivrl
out
sbb
lods
into
pushf
xchg
rorb
push
and
adc
les
loope
int3
imull
sti
arpl
add
inc
jg
cmp
mov
add
adc
fsubs
div
mov
nop
fidivs
shrl
jo
es
push
dec
test
dec
repz
push
pop
or
pop
mov
popa
jp
xor
lret
divl
call
mov
in
or
add
add
roll
test
lahf
mov
mov
repnz
jae
cmpsl
jg
in
leave
sub
fisubl
adc
pop
and
and
cmpb
dec
int3
dec
es
mov
mov
das
mov
inc
fcom
xchg
outsb
adc
jl
jmp
int
imul
sti
fsubrs
cmp
leave
arpl
addl
call
dec
push
and
fldl
add
adc
mov
faddl
rorb
xchg
mov
push
enter
adc
xlat
ror
cmp
push
inc
sbb
mov
adc
femms
cmp
test
or
gs
jge
sub
mov
ret
jns
sbb
aas
xorl
mov
add
mov
adc
dec
cmpsl
in
mov
and
in
shll
fldenv
lea
sub
outsl
mov
push
sbb
cld
mov
clc
cmp
repnz
or
inc
xchg
mov
loopne
outsb
out
jo
push
inc
lahf
aas
jmp
mov
test
shrb
fs
ret
out
addr16
les
and
rcrl
lcall
or
mov
aam
movsl
popf
push
ror
xor
sub
rorb
daa
lcall
xchg
fadds
dec
ret
add
pusha
xchg
push
mov
in
or
xchg
sbb
or
jae
mov
mov
xchg
arpl
mov
jo
add
xor
outsb
jbe
das
stos
mov
pop
lds
cmp
cmp
insb
add
into
jl
icebp
out
xor
cmpsl
out
adc
push
dec
dec
inc
stos
dec
adcl
jl
push
add
insl
pop
loope
lds
pushf
cltd
fldcw
fdivrs
lea
shl
mov
inc
clc
sbb
pop
xor
stc
jp
inc
jecxz
add
inc
ret
stos
mov
inc
cmp
je
add
xor
jl
or
sbb
maxps
outsl
push
sbb
subl
add
pop
sahf
push
pop
daa
jp
inc
mov
fldcw
pushf
mov
and
push
cmc
fisttps
add
push
add
mov
mov
arpl
mov
sbb
xor
mov
repnz
mov
and
int
js
nop
cmp
insl
push
repz
or
jns
lcall
loop
dec
inc
jne
pop
punpckhbw
sahf
add
or
pop
add
fwait
cmp
ljmp
xchg
xor
popa
es
std
jmp
cld
sub
jge
mov
or
fistl
pop
pop
adc
lret
cld
inc
inc
dec
mov
test
in
lret
lcall
mov
jae
sub
lret
enter
sahf
das
or
adc
jno
imul
popf
inc
pop
push
dec
jno
adc
push
fcomi
adc
cmp
sti
mov
repz
ret
shlb
incl
fidivrl
and
xor
add
stos
mov
mov
pop
xchg
sub
pop
insl
ffreep
mov
xchg
sub
xor
inc
faddp
out
mov
stos
push
into
add
cld
mov
and
sbb
mov
jmp
int
mov
mov
dec
lock
loopne
or
stc
sbb
mov
push
inc
sbb
mov
cmpsl
push
dec
je
add
sub
icebp
push
sbb
clc
int
mov
pop
fldl
xor
insb
xor
mov
loope
rcl
aaa
in
pop
or
add
popa
and
insb
inc
jge
fsqrt
test
lcall
mov
fisttpll
loop
or
nop
enter
iret
xchg
mov
fs
cmpsl
ja
notl
dec
stos
jl
push
iret
jge
xchg
popf
mov
test
fldl
mulb
scas
push
fldt
dec
xor
insb
jb
or
or
call
jae
push
shl
pop
sub
mov
push
call
jno
test
imulb
mov
pushf
leave
sti
jle
incb
pop
cltd
out
or
out
or
rorl
smsw
out
push
mov
jb
data16
adc
jb
rcr
jo
pushf
jns
sbb
cmp
push
add
popa
popa
ds
jns
cli
jo
nop
ja
dec
push
aad
jnp
and
mov
rolb
and
adc
cmp
mov
fwait
scas
mov
mov
loop
or
sub
movsl
call
sahf
cli
sbb
push
pop
cltd
pop
pushf
sti
mov
xor
mov
adc
out
out
leave
out
or
mov
and
in
mov
xchg
aad
lods
push
push
push
or
pop
mov
xor
mov
xchg
sbb
dec
fisubrl
jp
divl
sbb
dec
jp
push
cmc
xor
or
jo
xor
jecxz
or
cmp
jns
insl
xchg
std
rclb
pop
xor
or
push
sbb
mov
adcl
cmp
stc
mov
mov
ret
fimull
lea
jmp
loopne
mov
push
push
loop
addr16
std
sbb
xchg
shlb
dec
scas
pusha
ret
mov
enter
ret
les
fsubp
cltd
cmp
jae
mov
push
jae
xor
mov
cmpsb
test
lea
cmpsb
rorb
mov
jge
xlat
and
pop
mov
add
enter
sahf
fidivs
rcrl
bswap
clc
and
ret
cs
push
sub
cli
daa
incb
cs
insl
ljmp
adc
leave
xor
push
adc
insl
xchg
pushf
xchg
mov
les
jae
xor
jmp
cs
xchg
pop
jecxz
pop
jl
imul
test
sub
in
push
mov
insb
jnp
pop
sub
jecxz
and
xchg
mov
jb
gs
test
mov
imul
popa
add
inc
mov
pop
andl
push
xor
lods
cmp
jb
push
cmp
pop
mov
pop
sub
pop
jecxz
subl
mov
cs
mov
cmp
out
das
and
repz
jp
fs
mov
sub
das
pop
xchg
dec
and
std
loop
enter
pop
sub
aam
ds
mov
cmp
pusha
movsl
rolb
test
push
outsb
push
push
mov
mov
iret
fimull
mov
pop
incb
cld
push
inc
cmpsl
cmpsb
pop
mov
dec
test
mov
stos
jp
and
fucom
cld
pop
jg
clc
push
mov
mov
gs
cmpb
int
lods
out
cmpsl
fcomp
xchg
jg
fstp
das
sahf
cwtl
mov
movsl
aam
jp
rorl
adc
pop
xchg
xor
jno
loope
dec
jo
mov
or
mov
in
sbb
dec
mov
xorb
imulb
push
push
mov
adc
fidivrl
sub
call
jmp
xor
xor
xchg
ret
push
mov
test
cmpsl
cmc
jecxz
mov
mov
imul
fadds
mov
fstpl
int
lock
xor
dec
cs
pop
mov
in
cs
cmp
mov
out
pop
push
mov
ja
imul
jl
das
push
test
out
mov
inc
repnz
mov
movl
push
dec
scas
lods
sub
sub
adcb
mov
add
pop
mov
enter
xchg
subl
add
ficomps
mov
icebp
jns
shlb
js
fs
cmpsl
jae
repz
or
mov
inc
rcrl
out
pop
std
mov
fisubrl
imul
jne
inc
shl
lock
adc
mov
dec
lock
jae
sbb
lahf
cld
jb
mov
pop
inc
and
inc
xor
pop
imull
or
xchg
aad
sub
adc
sub
addr16
dec
xlat
or
out
jnp
jecxz
cmpl
ljmp
test
fstl
adc
cmp
cmpsb
inc
add
mov
push
fadds
xchg
lods
pop
mov
xchg
and
dec
fsubl
jns
push
shll
int3
cltd
in
mov
xchg
ror
fstpt
mov
pop
mul
pop
jae
daa
jns
cs
cmc
out
leave
aaa
adc
jg
nop
pop
push
int
push
add
jb
outsb
test
and
xchg
and
hlt
xor
andl
mull
inc
out
cmpsl
add
pop
call
enter
movsl
cmp
lret
mov
das
popa
jo
xchg
inc
rcrl
sbb
cmp
pushf
jle
sarb
sub
loope
mov
scas
pop
cld
mov
pop
adcb
fsts
push
cwtl
pop
inc
pop
mov
inc
add
ret
xor
jb
test
lret
pusha
push
sti
pop
jo
test
cmpsl
push
pop
push
inc
repz
lds
mull
push
or
push
adc
ja
mov
notl
cmp
pop
cmpsl
adc
jmp
jge
les
or
cwtl
test
rorb
int3
and
mov
jnp
gs
mov
shll
scas
out
push
mov
sti
not
ja
call
sahf
push
push
jne
sub
xor
int
adc
cmp
jle
mov
pop
fs
lods
mov
jmp
je
orb
shlb
je
mov
arpl
fimull
lret
xchg
je
adc
out
sbb
mov
xor
inc
cmp
leave
in
adc
push
shl
mov
push
mov
mov
je
test
das
imul
xor
movhps
mov
vmwrite
mov
ds
scas
test
and
sub
add
jnp
push
mov
movsl
sbbl
sub
sub
jmp
dec
pop
add
xchg
ret
pop
xchg
adcl
fcomip
rol
das
pop
movsl
out
dec
mov
mov
popa
pushf
int3
fcomps
sbb
mov
clc
and
jnp
push
pop
jno
adc
jmp
and
mov
mov
std
xchg
sub
and
sub
adc
mov
dec
xchg
push
cmp
adc
hlt
mov
push
cltd
enter
fsts
mov
ror
aas
shl
pop
lcall
and
lret
xchg
push
mov
sub
je
subb
jo
sahf
mov
cmp
iret
les
loopne
push
aaa
add
nop
out
adc
hlt
mov
test
xchg
lock
and
mov
out
hlt
ret
imul
mov
cs
adc
sbb
mov
cmp
leave
data16
cmp
les
add
jbe
loope
mov
mov
push
mov
sub
lods
lods
xorb
test
jge
push
dec
leave
add
fucom
mov
rcrl
inc
aam
cwtl
dec
mov
pop
xchg
mov
mov
inc
enter
outsl
popf
inc
fcomp
cmpsb
mov
aas
inc
push
loopne
stc
mov
inc
in
fcompp
cmp
adc
cs
out
adc
mov
inc
int
fistpll
adc
jo
pop
aas
insl
inc
das
es
push
mov
setge
cmp
dec
insl
jb
dec
cmpsb
pusha
bound
daa
mov
loope
push
scas
mov
sub
push
mov
inc
xchg
xchg
sbb
pop
cmpl
lret
jg
xorb
dec
iret
push
pop
daa
or
aas
mov
cwtl
gs
lret
dec
jae
sub
and
xchg
inc
xchg
pop
iret
stc
int3
cmc
out
add
sbb
movl
andb
call
in
out
scas
test
adc
mov
pusha
in
jbe
iret
in
movsb
in
mov
mov
test
jecxz
repnz
adc
mov
push
movsl
gs
push
push
mov
in
xchg
into
addr16
insb
insl
inc
mov
mov
and
cmp
pop
inc
jmp
insl
jp
xorl
push
inc
sbb
stos
fsub
xor
aad
pop
and
add
xchg
mov
into
fsubp
adc
inc
mov
hlt
leave
pop
dec
movsb
mov
iret
cli
nop
movsb
out
add
aad
jmp
adc
movsb
movsl
or
cwtl
jge
in
insl
mov
rclb
cmp
inc
scas
sbb
dec
pop
pop
xchg
mov
mov
ret
fadds
sub
out
arpl
mov
shll
jle
js
leave
mov
xor
add
fistl
inc
test
cld
adc
rcr
call
cmc
lea
sbb
push
fmul
fdivrp
dec
xor
push
stc
inc
fcoml
imul
ljmp
cmp
mov
arpl
stos
stc
pop
cltd
mov
ret
inc
repnz
xor
lret
xor
lods
popa
dec
mov
xor
inc
stos
lret
cmp
ret
xor
es
sbb
and
addr16
push
mov
mov
stos
inc
bound
fisubl
adc
test
sti
aas
add
jg
cli
aas
in
ja
repnz
xlat
cmp
in
pop
int3
in
inc
xor
popf
test
mov
mov
enter
dec
sarl
shlb
loope
shrl
pop
xlat
mov
jecxz
mov
mov
and
aad
add
add
movsb
xchg
add
inc
ja
jl
scas
mov
mov
xchg
pop
pop
scas
pop
clc
jp
adc
leave
xchg
lock
mov
fwait
pushf
hlt
inc
or
lcall
loope
sahf
inc
cmc
in
inc
lods
inc
ret
fs
popa
pop
ffree
pop
lods
addr16
and
loop
cmp
lods
and
sub
sub
fwait
loopne
pushl
push
cs
push
add
mov
xchg
mov
daa
xchg
push
js
push
xor
cmp
shrd
lret
xor
test
mov
dec
push
mov
push
add
sub
jmp
lods
test
dec
inc
div
or
ficompl
mov
jb
xchg
adc
jae
mov
add
jb
push
push
xchg
mov
iret
push
sub
mov
xlat
pop
jne
and
adc
mov
or
cmp
fwait
xor
push
lea
cmpsl
fstps
mov
call
jmp
mov
imul
push
push
dec
push
das
mov
xchg
or
loopne
xchg
push
outsl
jmp
in
das
pushf
cmc
dec
test
jge
and
pop
xchg
xchg
inc
into
or
push
in
xor
sub
or
leave
loopne,pn
inc
inc
jle
shll
cwtl
or
jnp
int
fldcw
cmc
mov
pop
cld
ss
mov
pop
jbe
pop
jp
sbb
les
xor
xchg
xor
loopne
mov
addr16
adc
jbe
sbbb
mov
stc
daa
jecxz
fidivs
dec
push
mul
push
stos
stc
ljmp
lods
dec
mov
out
and
mov
nop
mov
daa
lds
xor
and
push
loop
cli
mov
fdivrs
pushf
jge
dec
sub
pop
dec
mov
movsl
mov
out
cmp
testb
add
mov
insb
mov
or
imul
dec
ja
gs
dec
insl
daa
dec
mov
jnp
mov
rcrb
arpl
jle
popa
cmpsb
scas
xchg
ror
aaa
cmp
xor
dec
cmp
mov
xchg
fcomi
cwtl
out
aad
jmp
or
fsubr
pop
cmc
les
xchg
sarl
mov
loope
xchg
fsubl
leave
mov
xor
jno
push
or
mov
arpl
fbld
outsl
jg
movsl
and
repz
sbb
jmp
out
les
adcb
adc
dec
xor
mov
lret
jl
jp
push
pop
add
push
gs
add
cltd
fildl
inc
lret
cs
sbbb
inc
imul
js
pop
sbb
pop
mov
xor
cli
sbbb
sahf
or
jns
arpl
in
dec
pop
cltd
adc
inc
jae
and
popa
testl
mov
dec
sub
mov
lea
push
inc
jne
out
scas
insl
sub
xor
xor
pushf
in
in
add
sar
daa
decl
and
int
mov
fs
pop
ret
fcoms
std
xor
pop
test
shll
pop
aam
xchg
mov
arpl
xlat
cmp
loopne
xor
fldenv
xchg
inc
cmp
cld
jg
mov
lock
and
ret
je
int
test
or
nop
or
into
dec
out
rcr
mov
pushf
mov
std
stc
rorb
sub
push
dec
sub
andb
int3
jge
jp
lods
xor
mov
mull
push
pushf
mov
mov
stc
jecxz
ljmp
and
vmread
or
loope
cmp
pop
gs
pop
mov
and
dec
in
popa
cs
sbb
inc
cwtl
and
push
push
sbb
xor
push
cld
push
pop
lds
sub
icebp
mov
pop
push
sarb
push
sub
decl
std
mov
lods
push
imul
xchg
test
hlt
pop
int3
xor
movsb
cmp
mov
xchg
xlat
jbe
xchg
inc
cmpb
das
mov
push
repnz
push
and
mov
xor
ljmp
sub
in
inc
mov
sbb
push
jge
xlat
or
mov
sub
ds
cmpsl
scas
xorl
mov
fnstsw
hlt
shl
mov
roll
xchg
xchg
data16
insb
fsubl
dec
cmp
lock
cli
mov
repz
sbb
mov
add
and
inc
lahf
push
arpl
jb
scas
test
fadd
or
cwtl
rorl
pusha
add
pusha
cli
pushf
xor
nop
push
lods
pop
in
stos
push
push
icebp
scas
or
loop
pop
movsl
mov
popa
jo
nop
test
pop
jecxz
xlat
jge
pop
xchg
jg
stc
or
mov
add
or
push
lods
cmp
xchg
subl
fadds
fldl
in
or
mov
in
xchg
push
jp
leave
jg
out
gs
pop
cmpsl
icebp
jp
xor
dec
daa
ds
push
mov
push
inc
xor
roll
and
jne
sub
mov
mov
xlat
rep
push
mov
sub
int3
adc
pop
dec
push
mov
inc
xchg
out
sbb
es
mov
fiadds
jg
sub
jge
dec
dec
das
mov
xor
repnz
xor
xor
sti
sub
lds
xchg
imul
inc
inc
mov
push
int
bound
daa
fdiv
push
fs
dec
sbb
out
xor
mov
pop
ljmp
pop
iret
push
jle
push
das
push
and
in
inc
test
push
mov
cmp
inc
sbbb
and
repnz
rolb
or
loopne
jg
xchg
aad
jbe
orl
lret
aas
adc
arpl
shlb
xchg
and
add
scas
xor
pop
out
jecxz
cmpsl
lods
inc
adc
data16
sarl
add
or
sbbl
push
dec
mov
push
rcrb
lds
sbb
cmp
pop
sarb
xor
cmp
pusha
shll
mov
pop
push
xchg
sub
or
sbb
xor
xor
adc
inc
mov
movsb
movsl
into
pushf
andl
xor
sahf
dec
xor
rclb
mov
sub
jg
rcll
jmp
xlat
adc
aad
and
jbe
inc
divl
in
outsl
fstps
add
iret
push
inc
rolb
and
in
mov
imul
outsl
lret
enter
cmpb
std
dec
fdivr
lret
sub
sub
xchg
shll
lret
insl
push
mov
shlb
sub
and
ljmp
mov
daa
inc
dec
ret
adc
sbb
pop
sub
xchg
inc
sub
stos
sub
test
pop
fsubl
int3
aaa
jg
adc
mov
sub
fs
add
push
cmp
ret
mov
mov
push
mov
dec
js
mov
loop
push
pop
sub
clc
cmpsb
xchg
sub
and
insb
xlat
les
bnd
xchg
push
lea
dec
lods
jnp
mov
or
add
js
or
sub
or
dec
adc
jns
pop
scas
ja
cli
int3
sbb
ja
and
push
mov
divl
movsb
push
xor
hlt
imull
loopne
out
repz
fsubp
insl
inc
mov
inc
outsb
mov
mov
mov
pushf
jle
and
xlat
or
fidivl
sub
fistpl
stos
lcall
mov
pop
jb
jbe
sbbl
cmp
push
inc
mov
xchg
imul
sahf
push
mov
inc
inc
popf
push
fwait
es
sbb
push
lcall
or
cmp
popa
lea
mov
in
ret
movsl
jo
or
xchg
es
loop
push
sub
push
pop
rcrl
test
in
xchg
jecxz
cwtl
xchg
pop
sbb
das
fcomi
adc
dec
psubb
cs
xchg
popa
hlt
sbb
add
dec
out
jnp
mov
or
inc
cld
adcb
mov
lss
cwtl
jb
cwtl
inc
mov
pop
cld
push
mov
or
pushf
push
test
fs
dec
roll
loopne
sbb
cmpb
scas
mov
call
jp
mov
daa
cs
les
xchg
fucomp
pop
lcall
cmp
add
cmp
addr16
inc
or
cmp
inc
test
sar
jns
xchg
jo
mov
lcall
mov
mov
cltd
popa
pusha
shlb
pushf
aaa
call
mov
dec
cld
rclb
pop
shlb
jg
mov
mov
or
sbb
shll
pop
push
xchg
cmc
add
repz
xchg
lods
lahf
xor
negb
scas
aas
sub
mov
out
in
dec
mov
cld
xor
loope
xchg
xor
jns
lock
mov
leave
mov
ficoml
lock
dec
sub
test
cltd
stos
arpl
ljmp
imul
aad
adc
fs
jno
push
in
shll
dec
inc
xor
adc
addr16
add
and
outsl
daa
icebp
xchg
ljmp
shll
push
cmpsl
cmp
movsb
pushf
test
fs
jle
sahf
cmpsl
cwtl
dec
rolb
jo
xor
mov
fildl
aad
mov
push
sbb
sub
cmp
dec
imul
icebp
mov
popf
or
stos
jmp
lds
jne
xor
jnp
ja
pop
cmp
pop
pop
dec
mov
mov
decl
fnstenv
in
stc
scas
arpl
fsubrl
push
bound
pusha
and
mov
cwtl
jecxz
gs
rorb
sti
lahf
pop
aaa
or
add
jnp
mov
xchg
imul
push
mov
lock
fdivs
push
xchg
mov
mov
das
inc
pop
test
lock
stos
ret
cltd
bnd
pop
les
adcl
mov
pusha
lock
xor
call
sbb
add
mov
adc
das
sub
test
test
add
rorb
cmpsl
mov
mov
nop
add
fcmovnb
movsl
je
je
add
rcrb
ret
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
pop
xchg
scas
scas
jmp
dec
pop
repnz
ds
xchg
mov
out
mov
fcmovnbe
pop
pusha
mov
loop
leave
sub
xor
sub
arpl
idivl
call
lods
pop
cmp
sub
xchg
pushf
jp
in
mov
or
cmp
incl
das
sbb
test
jge
push
in
xchg
sbb
mov
shl
es
sbb
inc
fmul
mov
or
addl
out
add
jo
imul
adc
in
inc
pslld
test
popa
sbb
cmpsl
pop
mov
xchg
into
roll
je
test
repz
inc
jmp
repnz
jno
aaa
mov
lret
adc
mul
cs
pushf
or
dec
ljmp
xchg
or
or
test
test
xchg
js
fcmovu
xchg
lods
sar
ss
pop
pop
fisubrl
shll
into
xchg
adc
push
sbb
jmp
xor
or
add
jne
and
push
cmpsb
nop
fwait
sarl
inc
fdivr
xchg
sub
dec
jne
lods
inc
xchg
js
cmp
adc
xor
dec
inc
and
or
adc
and
push
xor
pop
es
int
in
xor
mov
nop
aad
or
jnp
ljmp
jecxz
out
mov
xchg
cmc
push
adc
and
popa
ret
movsl
xlat
pop
push
fprem1
or
cltd
scas
es
xor
mov
push
sbb
loop
cmp
shrl
add
outsl
jnp
imul
jb
cmp
jg
lahf
pop
pusha
jns
adc
push
jae
les
pop
enter
ja
mov
icebp
jle
jmp
rcr
mov
test
push
cld
imul
dec
mov
adc
lods
pop
fwait
mov
xchg
popa
push
out
je
xlat
adc
out
sub
mov
mov
sbb
enter
sahf
fxch
popf
lods
mov
and
je
movsb
cmpsl
fs
fs
xchg
into
and
pop
test
out
fstps
pop
sbb
cmp
repz
jnp
mov
pusha
mov
cmp
mov
sti
pop
mov
loopne
fidivrs
je
push
nop
mov
dec
ljmp
inc
mov
insl
hlt
mov
pop
xchg
mov
lds
call
fldt
or
call
xor
nop
dec
xchg
jp
sub
xchg
inc
cmpsl
addps
xor
jg
lods
mov
fists
add
pop
add
xor
popa
mov
sub
lods
xchg
in
inc
mov
ss
mov
pop
dec
mov
or
mov
adc
sub
loope
jb
push
jo
mov
shr
and
daa
in
and
add
mov
dec
and
stc
addb
dec
ret
jecxz
loope
mov
and
aaa
or
and
inc
and
xchg
mov
popa
clc
mov
fcmovne
insb
aaa
pop
clc
out
adc
or
and
out
imul
lahf
pusha
inc
add
rorl
inc
and
lcall
pushf
xchg
fisubl
xor
cmpl
icebp
jp
and
push
stos
loop
push
jp
pop
pop
int
dec
daa
pushf
pop
xchg
stos
adc
sbb
dec
out
sbb
cmpsb
mov
sbb
xor
xchg
int3
cmp
mov
inc
pop
test
cmpb
imul
loopne
xor
jo
add
mov
outsl
stos
pop
mov
out
adc
xchg
or
imul
or
stc
fbld
inc
dec
mov
subb
fwait
ds
test
clc
shll
cmp
dec
xor
lods
movsl
sbb
enter
fstpl
cmp
stos
scas
movsb
add
or
add
lret
dec
mov
movsl
lcall
mov
in
xchg
test
inc
mov
xchg
test
cwtl
sbb
pop
pop
mov
adc
adc
xchg
adc
jl
pusha
shrl
sar
outsb
inc
pop
fisubs
mov
xchg
pop
dec
pop
sbb
fmull
xchg
aam
mov
jmp
cmp
jae
popf
cmpsl
ja,pn
jp
inc
cmp
jg
jns
jmp
push
rcl
leave
scas
cmc
nop
sarl
xlat
scas
adc
bound
mov
pop
inc
inc
sub
aas
arpl
xlat
dec
test
out
lock
cmpsb
orl
sub
das
out
mov
pop
cmp
mov
lea
mov
sub
and
mov
lods
and
xchg
mov
clc
mov
aaa
cmc
dec
pop
and
and
fnop
pop
pop
mov
sbb
rclb
jmp
in
jo
imul
sbb
ds
outsb
lods
or
mov
push
adc
into
out
fistpl
icebp
orl
inc
mov
mov
ror
jl
movsl
loop
mov
dec
es
lods
or
xchg
sahf
jns
clc
mov
addr16
and
jp
jmp
ds
pop
ds
movsl
out
cmp
xor
cwtl
sub
or
push
test
cmc
icebp
fwait
into
lret
popf
pop
loope
inc
and
adc
jecxz
addl
test
xor
scas
cmp
pop
test
inc
adc
cmc
iret
sub
cmp
xchg
sbbl
mov
bound
sbb
xor
fldl
mov
test
mov
and
jnp
movsl
movsl
mov
pusha
loopne
mov
dec
aaa
std
mov
fdivl
mov
xchg
mov
pop
adc
jbe
adc
pop
lcall
pop
sub
adc
js
ja
push
fcoml
push
movsb
cltd
inc
xchg
push
and
orb
mov
sbb
jl
mov
popa
sbb
add
cld
mov
sti
inc
stos
push
or
pop
scas
jmp
lret
xor
pop
movsl
push
jmp
adc
push
out
cmpsb
lcall
lret
std
movsl
push
lds
dec
lret
mov
lret
adc
dec
mov
dec
jne
or
loope
push
xor
clc
sbb
out
mov
xor
add
stc
addl
jae
ja
adcl
mov
fisubs
ret
sbb
push
add
outsb
adc
xchg
mov
aam
loope
fwait
push
xor
push
pop
mov
push
and
mov
xor
icebp
or
bnd
mov
inc
lcall
xor
clc
jne
addl
sbb
int3
sub
cmp
dec
xor
xchg
les
fwait
pop
cmp
pop
push
icebp
xchg
pop
sub
xor
cwtl
mov
add
addr16
inc
sub
push
mov
add
sbb
or
aad
mov
push
nop
mov
sbb
lods
jns
jmp
loop
movsl
fcoms
clc
sub
lcall
aas
cwtl
cmp
add
add
cwtl
leave
rorb
movsb
xor
xchg
inc
push
icebp
sub
js
cld
mov
es
out
pop
shlb
sarl
imulb
cmp
dec
adc
and
add
mov
jbe
xor
inc
pusha
lahf
sbb
clc
jecxz
pop
bound
pop
dec
sbb
dec
dec
or
idivl
mov
and
mov
out
mov
cmp
addr16
cld
in
fnop
mov
cmp
test
mov
jae
inc
mov
or
jmp
jbe
and
dec
adc
push
sar
adc
mov
sub
mov
or
daa
cmp
imul
rsqrtps
loop
hlt
mov
sub
sbb
push
adc
orl
enter
mov
mov
inc
cmpsb
lahf
and
jne
imul
mov
mov
lcall
xchg
and
dec
stc
ds
movsb
pop
push
gs
fwait
mov
pop
fcoms
ficoms
call
dec
sarb
aad
jns
mov
mov
int
pop
pop
adc
icebp
xorb
movsl
out
mov
adc
repz
mov
mov
cmp
imul
mov
mov
cs
push
mov
xor
js
xchg
cmpsl
inc
int3
add
test
fistpl
in
push
ror
iret
repnz
mov
popf
push
mov
stc
ss
cmp
mov
and
call
outsb
fnsave
adcl
mov
out
jbe
sub
inc
cmp
arpl
and
fidivs
insl
jmp
fucomi
lock
cmc
aad
outsl
inc
into
scas
das
cmc
or
in
rol
adcl
push
inc
xor
pushf
nop
push
pop
mov
leave
adc
cmp
xor
into
add
push
xor
mov
push
xchg
or
pop
mov
or
imul
lret
ss
cmp
popa
bound
lods
in
inc
jne
push
jmp
dec
push
dec
ljmp
dec
ljmp
pop
lahf
or
outsl
mov
push
mov
enter
int
fisubrs
sbbl
xorl
data16
js
push
xchg
and
scas
adc
xchg
inc
cld
and
push
insl
fs
xchg
xchg
das
lea
outsb
mov
rcrb
iret
pop
or
cmp
jge
out
stos
pushf
fbld
subl
fidivrl
insb
cwtl
xchg
int
add
jg
xchg
push
sub
fadds
iret
insl
jl
adc
mov
cltd
cmp
cmp
lcall
sub
cmp
and
mov
addr16
rolb
mov
inc
dec
scas
mov
sbb
fwait
je
icebp
divb
mov
inc
lods
mov
push
xor
cmp
mov
mov
dec
add
lcall
ss
sub
and
adc
inc
in
mov
imul
add
out
or
daa
dec
scas
add
into
mov
pop
lods
ret
pusha
enter
jns
dec
pop
add
das
xor
cmp
or
pusha
clc
xchg
dec
outsb
lds
xor
mov
cmpsl
mov
push
and
jb
or
aam
or
jg
ja
adc
cmpsb
jle
loope
cmp
lret
xor
dec
or
repz
ret
psubusw
test
cmc
cmp
imul
push
push
cli
xor
jmp
lea
sub
das
in
xor
xor
xor
pop
fisttps
push
dec
subl
ret
cmp
scas
push
movsl
std
sbb
aad
std
int3
sbb
cltd
loop
dec
mov
daa
das
jo
cmpsl
das
mov
xchg
xor
jne
in
adc
inc
jns
jg
cli
jbe
dec
push
fwait
add
cmp
dec
sbb
pop
fisubrs
subl
jmp
ljmp
pop
push
lret
dec
cmp
push
push
cld
xor
sbb
cmp
mov
dec
jge
daa
xchg
pop
push
repz
dec
jns
sbbl
mov
dec
cli
fisubrl
addr16
adc
cmpsl
cmpl
jecxz
sub
out
jle
cmp
pop
test
cmc
add
add
sub
xor
aam
lcall
adc
int
fwait
lds
xor
lods
cli
arpl
shr
aam
push
aam
outsb
or
js
scas
or
sbb
enter
xchg
mov
mov
insl
sub
adc
mov
sub
push
cmpb
xlat
and
jno
adcb
cmpb
lock
fdivrs
repnz
leave
aad
push
arpl
pop
xchg
push
xchg
jmp
sub
fdivs
mov
xchg
imul
xlat
xchg
notl
jecxz
push
adc
adc
ss
orb
fnsave
inc
std
jl
inc
inc
lds
mov
ret
sbb
dec
mov
out
stos
aas
aam
stos
sbb
mov
sub
xchg
sbb
mov
jb
arpl
jno
movsl
mov
inc
cmp
pop
inc
rorb
jl
cs
in
sub
in
test
sbb
ljmp
outsl
cwtl
and
dec
bound
loopne
adc
add
js
mov
inc
jp
mov
ror
xchg
fwait
or
jo
repnz
xorl
sub
jecxz
pop
add
mov
mov
xor
icebp
pop
in
test
sbb
cmp
not
adc
mov
inc
movl
jl
pop
cmp
pushf
xor
push
rcrb
cltd
mov
cmc
mov
xchg
xor
stc
xor
pusha
dec
sahf
ret
pushf
cmp
loope
ss
jmp
push
jge
or
push
ljmp
push
dec
sub
les
sbb
inc
mov
outsl
inc
scas
movsl
sbb
push
test
xlat
mov
cmp
push
lods
inc
cmp
repnz
and
xchg
cs
inc
clc
notb
mov
scas
sbb
addr16
mov
add
pop
push
push
jl
push
add
test
icebp
and
sub
arpl
shll
xlat
adc
xor
fsub
sahf
lock
sbb
sub
dec
test
mov
leave
lods
popa
pop
insb
in
xor
pop
test
dec
fists
lods
dec
xlat
sub
jge
shr
test
bound
daa
push
rolb
mov
fildll
add
pop
jno
cmpb
pop
cmp
js
xchg
ja
or
mov
in
call
xchg
push
inc
adc
ja
ds
and
xor
in
dec
cmp
xchg
mov
mov
dec
dec
push
sbbb
loopne
stc
repnz
int
dec
pop
jle
fnsave
test
repz
fmulp
sbb
push
cmp
out
mov
pop
das
mov
cs
cld
xor
jl
adc
dec
andb
pop
mov
fnstcw
or
out
sbb
sbbb
xchg
xchg
mov
jne
cmpb
cwtl
aam
mov
mov
xor
mov
clc
in
andb
mov
repnz
mov
leave
lods
jge
out
gs
fbstp
in
hlt
dec
or
xlat
fsubs
loop
jo
sbb
or
adc
push
out
lret
lods
sub
stos
pushl
ret
xor
pop
push
push
gs
xor
scas
loope
inc
pushf
out
mov
pushf
mov
arpl
and
sub
test
push
dec
sbb
incb
mov
xchg
popf
rorb
jl
fwait
mov
adc
xchg
sbb
jle
adc
mov
js
sbb
inc
jnp
lret
xor
or
xor
cmp
in
sub
mov
enter
mov
cmp
addl
stc
push
mov
pusha
xchg
hlt
or
cmp
dec
pop
dec
sbb
mov
mov
mov
sbb
pop
fistps
sbb
lret
mov
mov
out
adcl
mov
insl
sahf
xchg
add
jecxz
sub
xchg
mov
inc
push
in
mov
mov
adc
mov
imul
clc
cmp
lods
or
loopne
or
cmp
xor
xchg
mov
xchg
push
stos
xor
mov
test
adc
pop
mov
pop
add
sbb
outsl
fsub
in
push
cmpsb
shll
es
or
cwtl
insb
icebp
mov
dec
imul
push
xor
leave
and
lea
xor
sbbb
scas
sbb
jae
xchg
push
jge
cld
mov
jns
popa
fildl
mov
or
repz
push
and
les
mov
cmc
lcall
cmp
dec
inc
jno
inc
mov
clc
or
call
and
and
push
dec
jge
sbb
mov
lret
adc
push
mov
shl
jae
sti
je
fwait
or
mov
inc
ljmp
ja
in
add
fs
ljmp
mov
outsl
push
fcomip
or
fmuls
add
xchg
sub
cld
dec
movsb
test
lods
out
jge
xor
xlat
xchg
mov
jle
fcomps
adc
fisubs
fisubrs
lret
jmp
lret
xor
dec
ja
jns
das
inc
mov
addr16
in
xlat
outsl
adc
popf
xchg
or
cmpsb
push
loope
cmpsl
jmp
arpl
test
xchg
and
push
dec
xchg
sub
rolb
push
cmp
adc
push
mov
mov
lds
inc
inc
sti
cmpsl
pop
add
shrl
shrl
mov
and
push
cmp
dec
jge
mov
test
rclb
test
addl
push
lock
aam
push
fnsetpm(287
push
pop
call
arpl
dec
lahf
jmp
int
mov
dec
popf
outsb
je
in
sbb
nop
outsb
jnp
jmp
pop
xchg
fs
push
or
faddp
or
cld
inc
push
add
xor
jb
out
lods
cld
cli
jge
xor
shll
popf
popa
sub
push
jp
js
dec
add
add
pop
xchg
imulb
cmc
jl
xor
into
fadds
outsb
out
push
bound
sbb
out
outsl
jg
push
mov
mov
leave
cmp
jne
add
jp
out
stos
popf
cmp
je
xor
call
dec
std
or
jp
mov
sub
jne
loopne
add
sub
and
push
inc
stc
xchg
bound
lock
jmp
jmp
and
in
mov
dec
xchg
adc
cmpsl
movsl
or
push
mov
nop
inc
xor
aas
or
or
lahf
or
insl
mov
stos
jb
add
rcrb
in
into
xchg
jecxz
cmpsb
adc
lcall
cli
xchg
jo
mov
add
mov
push
inc
out
push
or
xchg
pop
xchg
or
ds
call
sahf
gs
dec
inc
xor
sti
mov
rcrb
mov
jnp
push
adc
aam
mov
push
scas
adcb
out
pop
pop
xchg
push
mov
sbb
cmp
xchg
xchg
loopne
mov
add
orl
addr16
and
add
inc
in
stos
mov
dec
sbb
dec
subb
dec
in
sbb
adc
dec
sbb
idivl
jmp
mov
out
pop
inc
xchg
pop
stos
mov
xchg
mov
or
cmp
popf
dec
dec
xor
insl
lret
cmp
jnp
arpl
lds
sub
pop
and
mov
push
lcall
lahf
loop
pop
xor
jbe
out
decl
pusha
stos
fprem
sbb
add
cltd
jne
icebp
add
sbb
aas
add
xchg
xchg
inc
push
dec
xor
call
xchg
addr16
andl
sbb
push
xchg
icebp
orl
mov
aas
test
mov
or
and
addb
ret
cmp
fcoml
mov
lock
sub
call
cmp
int
test
lea
aas
sub
repz
movsb
push
and
mov
xchg
mov
jp
adc
lret
test
jae
enter
movsl
inc
cli
out
sbb
dec
add
int3
les
pop
aas
jns
xor
sbbl
or
shrb
xor
test
scas
jae
mov
pop
iret
stc
mov
sub
sub
dec
push
mov
sbb
dec
mov
loope
fdivr
scas
ret
out
sub
jbe
sub
sub
mov
sbb
jno
pop
jge
fmuls
mov
subl
pop
and
dec
mov
pop
ret
stos
nop
adc
and
ja
xor
frstor
jmp
lods
imul
fwait
lds
xchg
pop
add
sub
mov
dec
pop
outsl
loopnew
xchg
xor
jp
jg
push
pop
outsl
push
aad
and
or
jno
out
repnz
outsb
mov
jmp
push
pop
push
cwtl
inc
mov
cmp
sarb
fisubl
rcll
call
inc
punpckhbw
pop
in
jb
lret
mov
sarl
xchg
push
mov
adc
xchg
ffreep
cmpsl
push
test
inc
pop
int
pushf
add
mov
mov
mov
pop
pop
xchg
push
mov
xchg
pusha
dec
into
scas
inc
or
sbb
jno
ljmp
mov
push
lods
mov
ljmp
std
popa
jns
xchg
fmull
pushf
jb
xchg
notb
adc
dec
lods
cmc
pop
mov
iret
stos
xchg
xor
inc
dec
into
dec
mov
cltd
rorl
xor
and
add
roll
sti
sub
jecxz
jns
xchg
out
xchg
jo
repnz
loope
or
iret
mov
add
addr16
les
lods
out
mov
push
enter
das
pop
add
sub
cmp
rolb
icebp
or
push
sbb
repz
out
xor
andl
mov
das
mov
cld
pop
jae,pt
jb
lds
push
mov
mov
xor
mov
mov
out
shlb
mov
dec
push
mov
push
ds
stc
je
stos
jge,pt
sub
std
std
pop
push
js
xor
sbb
mulb
daa
xor
cmpsl
xor
fcmovu
xlat
mov
loop
inc
mov
xchg
jl
cmp
sti
push
inc
pop
mov
push
pop
xchg
pop
lret
sub
mov
push
xor
fidivrs
int
pop
lret
xor
inc
mov
jns
mov
jecxz
shll
mov
je
and
mov
sahf
add
int3
fimull
or
lods
add
and
movq
mov
xchg
pop
jle
cld
mov
shll
inc
sbb
or
gs
les
clc
fstpl
add
adc
rorl
pop
ret
fnstcw
lret
icebp
dec
rcr
stc
out
dec
xchg
jmp
add
dec
mov
scas
nop
aas
or
pop
dec
aaa
add
dec
inc
imul
out
sub
jnp
outsb
jae
out
hlt
lock
and
or
jmp
sbb
in
pop
xchg
inc
or
sbb
sti
adc
repz
push
shr
jo
pushl
sub
pop
je
lahf
daa
jle
imul
mov
in
leave
mov
inc
jb
xchg
adc
sbb
scas
js
imul
movsb
gs
xlat
ljmp
cwtl
mov
sub
int
adc
popa
push
lods
mov
lods
adc
xchg
pextrw
test
sub
push
inc
stos
mov
sahf
adc
inc
and
out
outsb
in
mov
and
mov
push
cwtl
sub
and
inc
rcl
inc
sbb
imul
test
mov
and
sub
je
push
cbtw
mov
and
mov
xchg
dec
jl
pop
ja
sub
insl
loop
ss
cmpsl
out
mov
jo
es
call
stc
mov
adc
mov
fwait
lahf
jno
js
jle
cmpsl
cli
inc
add
nop
xchg
aas
in
enter
btr
jno
ss
xor
outsb
pop
in
or
cs
mov
out
dec
or
cmpsl
sbb
shl
mov
jns
lods
mov
clc
sbb
pop
hlt
and
or
or
lret
inc
test
sbb
cvtpi2ps
add
pop
jnp
insb
add
sbb
into
pop
pop
lock
jae
lcall
loope
scas
pop
scas
mov
adc
aas
lahf
sahf
outsl
and
mov
cmpsb
xchg
sub
mov
int3
pop
mov
fwait
xor
inc
cs
lock
aas
mov
repz
enter
or
xchg
or
adc
lret
out
dec
jnp
stc
push
inc
xor
pop
cmp
sbb
ss
and
ljmp
xchg
andl
xor
imul
sub
aaa
into
pop
aad
loop
jecxz,pn
pop
lcall
cmp
jne
fldcw
lds
add
pushf
loopne
xor
xchg
mov
or
into
sub
mov
dec
pop
jnp
cli
lock
loop
inc
add
movsl
inc
jae
add
data16
test
inc
rol
pop
cs
in
popa
jmp
repz
dec
pop
jnp
xlat
ss
jae
movsb
adc
arpl
aaa
lahf
or
jno
loopne
cmp
mov
stos
mov
or
les
xchg
push
dec
imul
call
jmp
ret
and
repz
xchg
rol
or
insl
test
test
mov
cmpsb
inc
cld
aas
hlt
ret
jae
sub
add
inc
cmp
popf
cmp
cmp
push
das
lcall
outsb
pusha
adc
and
fiadds
add
add
cmp
ja
and
pop
inc
mov
push
mov
push
fisubs
or
adc
pop
sub
push
or
fmuls
sbb
in
pavgb
xor
rolb
push
jae
imul
mov
jecxz
xchg
lods
or
push
dec
lcall
fsubrp
sub
les
negl
mov
push
sti
cmp
lods
popa
std
les
sbb
push
mov
add
mov
push
jmp
pop
sbb
inc
sub
mov
xchg
inc
daa
lea
pusha
scas
lahf
gs
jg
push
clc
cmp
mov
dec
call
lahf
dec
popa
orl
cmpsl
dec
sbbb
pop
cwtl
mov
lahf
dec
and
push
sub
into
subb
andl
mov
dec
pop
mov
cmp
test
adc
xchg
or
aas
jae
jbe
pop
stos
loopne
cmc
add
fiaddl
pop
xchg
or
xchg
adc
xor
cmc
sbb
fildl
lea
subb
push
sub
push
xor
lock
mov
or
aad
es
je
lret
adc
into
mov
jbe
aad
and
es
gs
adc
mov
xor
mov
out
xchg
push
dec
mov
iret
insb
cmpb
pop
or
jmp
andl
loope
lods
out
pop
adc
jae
mov
loopne
cmp
bound
dec
add
jp,pn
cmc
cmp
mov
inc
addl
lods
mov
stos
mov
xor
sahf
lock
sti
out
mov
xchg
imul
scas
sahf
xchg
or
mov
dec
sbb
test
js
shrb
xor
jmp
popf
out
add
pop
fists
mov
fdivrl
lret
inc
in
pop
lods
jp
fdivr
das
sub
jg
or
dec
xor
sarb
cmpsl
mov
mov
ret
push
cltd
ss
push
pop
lock
rolb
dec
ret
sub
shrb
pushf
jne
mov
repnz
jmp
inc
cmpsb
and
ja
ret
xchg
jle
ja
inc
add
sub
hlt
cmp
xor
lret
pop
lods
push
outsb
push
lea
repnz
xchg
pop
dec
test
gs
inc
mov
ret
adc
je
adc
push
notb
aas
xchg
jle
cmpsb
dec
mov
loop
adc
dec
leave
popa
das
addr16
and
stos
testl
pop
add
call
pop
std
fcmovbe
mov
rclb
cmp
sahf
cmp
add
sahf
test
add
and
sti
mov
call
or
pop
es
mov
dec
mov
pop
mov
pop
aaa
pop
xorb
pop
cmpsb
pop
scas
and
sti
push
pop
loope
mov
clc
pop
lods
mov
jo
out
out
and
adc
mov
add
adc
inc
inc
mov
inc
sbb
cmp
ret
orb
jne
xlat
jmp
iret
push
scas
daa
dec
xchg
fsubrl
jnp
cld
mov
sbb
jecxz
cmc
adc
mov
mov
test
inc
lock
inc
test
daa
add
cmp
jno
popa
or
cmpsb
jns
ss
jno
adc
pop
sub
sarb
mov
cld
pop
mov
mov
mov
xchg
xlat
xor
mov
mov
pop
pusha
cltd
pop
fisubl
mov
xchg
arpl
xor
and
fidivl
adc
stos
adc
mov
sub
xor
add
mov
sti
pop
push
mov
js
cmpsb
push
cmp
adc
outsb
jae
mov
repz
lock
repz
mov
jo
or
add
fsubl
pop
xorl
mov
shl
imul
push
xor
or
jb
iret
cli
mov
xchg
mov
mov
push
sub
scas
in
out
into
push
push
punpcklbw
dec
pop
scas
repz
xchg
pop
pop
mov
faddl
clc
jbe
jge
xor
cmp
adc
and
jl
and
jl
jl
stc
dec
bound
and
test
call
cmp
xchg
ds
rol
mov
pop
adc
push
shlb
inc
mov
int
cmp
sub
cltd
mov
les
mov
xchg
repz
mov
jle
mov
sub
or
mov
or
xor
add
arpl
in
xchg
jmp
rol
pushf
rorb
dec
mov
int
jmp
outsb
js
leave
add
mov
lods
xor
xor
sbb
cmpsl
cltd
xchg
adc
and
je
dec
cmp
stos
pop
lret
and
lret
movsb
lcall
lea
dec
outsl
lock
pop
xchg
rorb
addr16
outsb
mov
xchg
imul
xor
enter
stos
xchg
mov
adc
movsb
push
and
pop
add
shrb
mov
and
sub
cmp
cs
aaa
movsl
out
mov
pop
xor
not
or
in
repnz
inc
cmpsb
pop
ja
jbe
push
xchg
jnp
dec
insb
in
ja
sbb
sbb
pusha
ds
or
and
sbb
lock
roll
adc
inc
cs
out
xor
jge
xchg
jb
shll
andb
adc
call
adc
popf
mov
in
mov
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
jp
hlt
bound
pop
bound
fnsave
test
mov
xorl
and
and
scas
insl
push
shr
imulb
push
mov
or
pop
dec
inc
popf
dec
dec
mov
xchg
push
jp
hlt
mov
pusha
in
int
popf
xchg
fcompl
add
cmpsl
inc
pop
push
inc
and
jno
inc
fldcw
mov
sbb
stos
push
xor
xor
test
push
sarb
mov
das
int
popf
test
loopne
loop
int3
mov
jle
and
sub
in
enter
out
mov
pop
pop
popf
cltd
and
cmc
lahf
mov
ret
pop
lret
fldcw
mov
dec
mov
shll
scas
stc
and
pop
lea
ficompl
push
js
lcall
mov
out
or
and
pop
push
std
dec
mov
imul
mov
insb
add
nop
or
mov
xor
shll
fiaddl
sbb
inc
dec
push
pop
jnp
push
test
add
enter
mov
adc
int3
add
jge
jecxz
add
cmc
filds
inc
mov
mov
fwait
imul
inc
add
xchg
dec
scas
repnz
testb
add
sbb
sbb
sbb
jbe
popa
mov
lock
fsubs
mov
lds
pusha
dec
add
fwait
mov
xorb
int
addr16
jmp
stos
add
fcomps
sub
jae
cmp
leave
mov
inc
sub
pop
and
mov
stos
add
add
xchg
psrlw
pop
fs
gs
nop
outsb
or
ja
in
in
mov
sti
mov
sbb
out
sub
jns
rclb
popa
cld
xchg
push
popa
add
setbe
mov
push
adc
stos
sub
mov
rcr
incb
imul
ficoml
or
or
sbb
shrl
ljmp
sub
sub
and
gs
subb
jmp
stos
inc
adc
mov
sti
mov
imulb
cmp
fsubp
pop
test
mov
mov
push
movsb
and
fimull
xchg
adc
jbe
pop
hlt
icebp
jbe
sub
cmpsl
dec
call
fdivs
mov
lods
xchg
fbld
push
inc
sbbb
dec
inc
jmp
fidivl
push
add
enter
loope
repz
sub
popf
add
inc
add
stos
xor
xor
xchg
mov
xor
sub
xorb
push
adc
lret
xor
bound
fnstenv
jmp
stos
leave
rcrl
call
in
stos
lods
jge,pt
xor
sub
ds
fs
mov
popf
mov
and
jge
testl
pop
xchg
mov
cmp
aaa
cmp
iret
push
add
jle
pop
xor
pop
push
pop
cli
insl
mov
inc
dec
fwait
cmpsb
cmp
insl
shl
sahf
jp
js
adc
cwtl
or
ret
std
fstpl
movb
xchg
dec
test
out
fwait
mov
fimull
mov
dec
lret
stos
jb
lahf
or
dec
imul
imul
pop
mov
loope
dec
movsl
mov
mov
icebp
es
sbb
adc
jns
test
je
repnz
sbb
adc
aaa
jo
sbb
or
sub
cld
shll
push
pop
shll
mov
rclb
push
stos
mov
shrb
and
jmp
arpl
imull
inc
push
add
push
repz
popa
xchg
mov
scas
xchg
sbb
iret
jb
mov
pop
cmc
in
dec
inc
cld
push
mov
imul
ficoms
inc
xor
inc
es
add
fbstp
fdiv
mov
shll
daa
outsl
stos
sarl
jmp
sub
or
mov
add
popf
in
data16
xor
pushf
out
mov
in
adc
mov
cld
push
test
popf
aad
cmp
enter
xchg
ss
scas
jecxz
rolb
fldt
lea
xor
xor
jns
add
sub
fimull
xchg
push
pushf
aas
sbb
shll
mov
add
xor
pop
push
dec
gs
mov
jmp
out
xchg
push
orl
xor
cmp
pop
loop
cmp
xchg
mov
adc
insb
xchg
xor
fimull
sub
scas
js
and
dec
inc
dec
pop
dec
jns
xlat
cmpl
push
push
fs
adc
xchg
mov
scas
jbe
fnsave
stos
aaa
shl
je
inc
cmp
int
mov
daa
jae
xor
fsubr
dec
xchg
fcoml
fisttpl
sbb
xchg
and
incl
mov
popl
in
sub
or
mov
mov
or
stc
or
pop
iret
rcl
incb
lea
fwait
or
fnstsw
xchg
rolb
xchg
pop
xor
and
mov
loop
mov
jecxz
bound
sbb
jo
stc
inc
sbb
imulb
or
and
out
pop
cli
in
inc
jnp
jo
shll
iret
push
lock
sbb
hlt
lcall
pop
lock
out
dec
mov
cltd
pop
dec
cli
arpl
jo
popa
mov
xor
inc
and
add
stos
mov
sub
clc
leave
popf
icebp
ds
cmpsl
xor
push
cmp
imul
add
jo
jo
lods
push
jge
in
fwait
xchg
lcall
stos
adcb
jle
jmp
in
stc
xor
test
fdivrs
add
xchg
enter
mov
fcoms
xchg
mov
in
out
sbb
add
and
dec
mov
push
shl
add
pop
subb
jbe
and
xchg
jge
cmp
or
mov
std
test
cmp
loope
mov
loope
mov
fwait
mov
pop
push
in
or
jmp
pop
je
scas
outsb
inc
loope
adc
sub
test
mov
pop
int
cmp
idiv
data16
gs
stc
push
ljmp
insb
loopne
cmp
subb
addr16
inc
pop
push
ja
mov
add
push
in
jecxz
fisttpl
cwtl
pop
push
add
scas
and
shl
fs
sbb
daa
aaa
xchg
movntps
mov
shlb
mov
scas
mov
adc
icebp
mov
push
int
fs
xor
shll
and
cld
lahf
push
add
pushf
test
adc
pop
push
inc
test
dec
xor
jl
pop
out
bound
mov
fstpt
dec
push
dec
inc
stc
out
scas
pop
out
imul
call
into
xor
sub
daa
cld
in
pop
jl
and
popa
cmpsl
movsb
inc
sbb
rolb
lea
add
pop
sbb
jle
dec
and
pop
addr16
adc
mov
rcrb
mov
fs
jle
aaa
cli
add
scas
fcompl
mov
jnp
pop
shrb
aaa
sbbl
rcrl
or
nop
inc
ss
loop
sbb
icebp
jbe
mov
mov
fisubs
push
sbb
pop
pop
add
test
scas
push
cmp
xor
test
dec
pop
mov
mov
pusha
add
lods
mov
mov
push
jbe
cmp
and
inc
cmpsl
sbb
adc
sub
sbb
cmc
popf
xchg
dec
popa
aas
or
movsb
loope
fwait
cmp
adc
push
xchg
jo
sbb
and
int3
cmp
cwtl
pushf
push
mov
daa
jns
mov
jb
push
aas
inc
lret
sub
stos
dec
mov
xchg
cmp
into
bound
shl
jae
sub
mov
int3
lds
pop
dec
or
cmp
orb
mov
jge
mov
ffree
jmp
jnp
rcr
jno
faddl
loope
jbe
jae
jp
cmc
jl
adc
out
dec
xchg
and
scas
pop
mov
mov
xor
and
pushf
pop
ret
and
mov
lods
cmp
in
xchg
jnp
jo
mov
stos
shlb
cwtl
sahf
adcl
inc
pop
sahf
fs
roll
mov
add
scas
stos
jae
xchg
mov
xchg
dec
out
stos
jae
push
and
pop
mov
bnd
sub
push
adcl
jge
push
pop
leave
das
or
inc
das
inc
outsb
sahf
xorl
stc
cmpsl
add
int
mov
jl
aad
or
adc
dec
ucomiss
inc
shll
sbbl
push
mov
notl
jbe
pusha
lods
jl
dec
add
push
mov
jle
mov
aad
dec
fsubs
dec
lods
push
hlt
mov
add
add
nop
mov
cmp
jo
push
cmp
mov
mov
sarl
sub
std
lods
adc
add
sub
jle
cmp
xor
in
rcrl
push
jb
dec
xor
or
xor
test
nop
hlt
clc
mov
push
jae
jecxz
stos
or
sbb
push
mov
ret
sbb
mov
xor
movsb
xchg
push
jmp
xchg
loop
or
aad
adc
adc
popf
addr16
dec
cmp
push
lea
push
loope
icebp
hlt
mov
pop
mov
pop
popf
inc
sub
xor
mov
sub
divl
pushf
insl
or
gs
int
push
in
sub
ret
push
cmc
dec
pop
cld
mov
jno
adc
mov
pop
test
cmp
out
pop
jle
mov
loopne
fsubs
sti
adc
fcoml
out
stos
aas
test
mov
dec
xor
dec
push
mov
mov
rcrl
rcrb
out
lea
ljmp
push
lods
add
or
jp
in
jmp
sbb
jg
push
in
in
adc
push
jge
fmulp
repnz
xchg
mov
sub
sbb
fbstp
cmp
in
push
inc
in
inc
mulb
lret
xlat
aam
shrl
lcall
test
inc
loope
in
xchg
jnp
dec
aam
sub
xor
sub
lea
add
addr16
mov
push
mov
inc
xchg
or
cmp
imul
add
xor
inc
fstpt
int3
rcrl
or
out
shlb
cli
mov
push
jnp
repnz
rcrb
xchg
das
ja
jbe
add
xor
lods
test
int
mov
lcall
daa
mov
jns
dec
sbb
inc
mov
shlb
jno
or
dec
pushf
dec
je
daa
mov
clc
pop
stos
cmp
push
cmc
gs
test
or
fsub
mov
popa
push
pop
dec
jbe
fwait
icebp
mov
add
cs
dec
pop
push
add
add
sbb
popa
adc
dec
inc
pusha
popa
mov
mov
cmc
popf
sbb
pusha
jl
mov
cmp
xchg
ja
flds
rcrl
add
xchg
xor
mov
and
push
loopne
into
dec
mov
xor
lea
mov
xor
aaa
clc
and
pop
mov
mov
aad
in
pop
out
fcompl
int
push
int3
xchg
out
cld
dec
cmc
aas
inc
cli
cmpsb
ret
dec
and
popa
sub
xchg
aad
lcall
xchg
dec
xlat
mov
jmp
inc
data16
jmp
dec
mov
add
mov
sub
jecxz
sbb
imull
inc
xor
xchg
add
inc
xchg
and
enter
out
pop
es
jecxz
jbe
cli
sub
jecxz
add
fistpl
ror
mov
int3
stos
inc
push
jne
sbbb
xchg
out
ss
notb
and
xor
pop
add
inc
testb
mov
scas
fnsave
gs
lcall
xlat
pop
test
ljmp
and
fmull
jne
cwtl
hlt
add
in
mov
movsb
in
xor
add
pop
fnsave
cmpsl
scas
cs
mov
jp
test
push
and
repnz
rcrb
xor
xchg
out
popa
push
lcall
repnz
mov
mov
mov
sti
arpl
test
push
add
fwait
dec
pop
sub
add
add
je
stc
popa
sub
mov
jge
add
push
and
shrb
les
jle
in
test
lret
mov
mov
mov
add
sub
test
pop
inc
fimuls
sbb
jle
std
pop
mov
adc
hlt
mov
shrb
dec
dec
sbb
jbe
cmp
mov
aad
dec
jg
add
jne
cs
fisttpl
icebp
pop
cs
clc
pop
repnz
push
pop
or
mov
stos
repz
popa
mov
dec
inc
jo
mov
in
mov
jmp
cmp
mov
aam
aad
xor
aam
and
mov
xor
or
ja
xlat
pushf
jae
push
xor
aaa
clc
pop
sbb
aas
and
out
pop
jl
pop
shr
insb
xor
add
or
fcompl
loope
popf
push
pop
mov
sti
fcompl
cltd
inc
popf
sbb
aam
in
lret
gs
sahf
gs
loope
jmp
fdivrp
push
ja
js
imul
repz
xchg
cmp
outsb
jns
push
fwait
popf
mov
clc
out
in
outsl
lret
test
pop
push
in
xor
cmp
pandn
fists
sbb
pop
shll
outsl
inc
xlat
out
lcall
push
movsl
std
shll
cmp
sti
leave
pop
jl
jp
jo
or
lods
sub
push
xor
sub
push
fsubl
pop
dec
cmp
test
cmp
mov
ret
lret
jnp
rclb
rcll
mov
cwtl
inc
push
inc
push
fdivrs
repnz
mov
mov
jns
adc
xchg
cli
cli
stos
push
rcrb
cmp
add
sahf
andl
pop
mov
cmp
xor
and
addb
in
test
out
mov
sub
xchg
sub
insb
push
dec
loop
sbb
sbb
add
cli
outsb
jge
push
xor
mov
pop
sti
pop
iret
jno
sub
cmp
movsl
push
cmc
xor
jne
data16
cmp
xchg
gs
mov
pop
stos
lcall
cwtl
inc
out
stc
out
pop
rcr
mov
in
jp
sub
inc
fimull
sahf
sbb
call
jne
imul
xor
shlb
mov
dec
imul
mov
fwait
mov
das
mov
lcall
movsb
and
data16
jmp
punpckhbw
mov
test
jl
jne
inc
dec
sub
cmp
pop
or
fisttpl
test
dec
adc
adc
rol
and
mov
adc
push
loopne
stos
clc
out
popa
mov
cmp
sub
fcoml
xchg
sbb
pop
outsl
ror
aaa
and
xchg
dec
push
sub
jmp
inc
enter
sbb
iret
mov
sub
imul
or
mov
cmpsl
push
xor
addb
pop
pushf
mov
jge
cmp
add
mov
sub
xor
loope
and
leave
dec
push
mov
xchg
ret
push
repz
mov
mulb
mov
idivb
xchg
xchg
push
gs
ret
sbbl
jecxz
repnz
xor
pop
xchg
cli
pop
aam
fidivrl
clc
adc
pop
int3
pop
enter
sub
adc
fdivr
sbb
and
out
sbb
lret
jb
loope
dec
or
mov
fidivl
and
mov
sub
adc
pop
mov
xchg
inc
arpl
cmp
cmp
push
fwait
pop
imul
outsb
scas
data16
dec
cmp
xorb
sbb
push
xor
inc
push
fs
pusha
jge
test
pop
jmp
and
sbb
dec
ficoms
pop
xchg
sub
add
test
loopne
mov
or
push
in
inc
jns
cld
jns
or
inc
ficoms
sbb
push
lret
cli
xor
clc
adcb
add
dec
dec
jle
or
add
xor
in
sarb
pop
lods
aas
test
lods
xchg
mov
jmp
add
inc
stc
lahf
test
adc
fistps
loopne
jmp
fwait
push
sub
pop
push
int3
inc
push
inc
imul
jge
xchg
stos
pop
nop
push
push
and
jbe
and
out
pop
aaa
scas
lret
pop
lods
push
and
xchg
pop
int
mov
adc
lods
rcrb
rcr
cmp
rcl
fildl
push
xchg
ret
pusha
push
loope
push
jb
cmp
push
lods
faddp
fwait
lret
jg
stos
or
clc
fnstsw
cmp
es
mov
cmp
and
jge
popa
jmp
stc
outsb
jg
jl
repz
ja
shll
fbstp
lahf
push
jp
daa
mov
sub
scas
lds
popf
lods
popf
enter
idivb
inc
and
add
aas
dec
mov
push
divb
adc
push
jns
lret
add
inc
jne
into
dec
cmp
sti
scas
xchg
and
mov
or
js
lds
movsb
sbb
fisubl
xchg
inc
imul
jmp
jp
mov
or
scas
push
movl
adc
or
sti
stos
sqrtps
dec
sbb
popa
shl
fcompl
cmpsb
pusha
mov
cmp
in
add
sbb
xor
in
fists
cli
insl
lea
icebp
push
cltd
addr16
test
nop
xor
ret
pushf
xchg
repnz
mov
jb
mov
movsl
xlat
ret
jns
testl
cltd
push
stos
movsb
cwtl
pushf
push
or
ljmp
jbe
and
imul
push
push
mov
bound
and
mov
mov
in
jne
sub
scas
popf
lock
adc
clc
jp
xchg
movsb
pop
fldt
aad
pop
fidivl
or
dec
fstl
sbb
jb
stos
cmp
js
sbb
and
xchg
sahf
inc
test
push
cmp
xor
addr16
jecxz
js,pn
cmp
mov
mov
adc
adc
jg
xchg
or
incl
sbb
iret
push
pop
push
enter
aas
cmp
sbb
jle
xchg
mov
pushf
push
jno,pt
cmpsl
dec
repnz
dec
sbb
pop
arpl
loope
in
movl
jecxz
addr16
jge
out
movsl
or
mov
into
push
mov
add
lret
jo
mov
imul
mov
cltd
mov
daa
lods
xlat
loope
rclb
aaa
mov
jne
pop
push
subl
jg
paddw
loope
shlb
jl
clc
shlb
push
rcrl
push
daa
mov
pop
imul
push
fadds
fiaddl
xchg
sbb
jp
xor
inc
sub
pop
sub
aad
dec
add
sar
lret
mov
xor
fsubl
cmc
outsl
xor
loope
aam
adc
push
xchg
scas
push
leave
mov
and
sub
in
aaa
mov
test
stos
fs
pop
cld
imul
sbb
fistl
dec
mov
int3
setno
loop
decl
mov
ja
pop
inc
sub
arpl
in
xor
sub
xor
lret
sub
mov
sahf
sub
mov
jb
dec
cltd
daa
inc
adc
or
les
jb
add
jo
push
je
pop
xchg
out
out
in
mov
repz
mov
cmc
mov
and
scas
inc
nop
pop
out
jl
test
stos
inc
and
or
mov
leave
mov
add
ljmp
cld
lret
adc
xchg
outsl
jno
repz
pop
cmc
popf
push
and
sbb
out
addb
pop
mov
or
xor
cmp
jg
loope
dec
adc
inc
pop
in
fwait
daa
or
mov
cmp
jle
and
inc
jno
jge
cmp
mov
movsl
xor
dec
call
cmc
cld
lahf
and
jecxz
cs
shl
data16
dec
and
imul
push
cmp
popa
in
adc
jle
cmpsb
push
lret
sti
jne
push
mov
or
push
fxch
test
call
leave
pop
push
iret
sbb
test
repz
jmp
sbb
testb
push
repz
or
pop
add
jmp
xor
sbb
pop
mov
push
out
dec
push
sub
cwtl
jo
fstps
idivl
add
fimuls
push
or
inc
sbb
fmulp
repz
lods
popa
add
stos
test
mov
dec
ret
mov
mov
jb
xlat
sbb
mov
test
mov
pop
js
adc
sbbl
dec
imul
push
nop
and
sub
pushf
insl
sub
out
push
lods
mov
icebp
mov
xlat
mov
push
dec
push
rolb
pop
xchg
insb
jp
jge
ficomps
jbe,pn
pop
iret
repnz
sbb
aas
and
arpl
mov
mov
push
xor
subb
and
fs
stos
or
or
cmp
add
fistpl
outsl
fwait
je
or
andb
jno
ret
sarl
add
adc
dec
push
sub
cld
ffreep
xlat
loope
pop
pop
sub
lret
jnp
pop
push
inc
push
lret
pop
lret
cmp
mov
stc
sbb
sub
xor
sub
sbb
das
cli
mov
test
cmp
out
xchg
pushf
das
into
inc
out
je
jns
imul
out
mov
lds
enter
mov
arpl
xchg
pop
mov
and
cs
not
loop
xor
cmp
outsl
das
into
xor
into
xchg
inc
rcr
cld
mov
std
sub
jp
imul
sbb
hlt
push
sub
xor
mov
push
and
push
mov
cmp
adc
add
in
adc
cli
mov
test
sub
xchg
repnz
add
int3
cmp
stos
movb
pop
sub
fsubr
sti
xchg
xchg
jbe
push
jo
jns
jg
push
pusha
leave
inc
cmpsb
into
cmpsb
jnp
addr16
xchg
insl
nop
jl
xchg
xchg
call
add
jg
mov
fbstp
adc
in
mov
mov
xchg
sets
fwait
popf
clc
xor
inc
insl
aam
pop
mov
mov
insb
call
outsb
lods
fcompl
adc
outsb
movsb
clc
cmpsl
daa
out
imul
out
test
cmc
pop
sbb
mov
scas
dec
enter
fidivrs
js
adc
push
jecxz
inc
daa
pop
idivl
ljmp
lahf
cwtl
jae
ffree
mov
adc
mov
pop
pop
pop
in
mov
jb
push
mov
jbe
mov
mov
icebp
mov
cmp
mov
insl
add
cmp
xorps
mov
push
mov
dec
repnz
loop
dec
xchg
adc
inc
ret
mov
icebp
jmp
enter
inc
sub
outsl
jno
push
stos
push
mov
icebp
xor
sbb
jl
jnp
scas
mov
popf
pop
je
cmpb
mov
cmp
movsl
cmp
mov
dec
jle
sbb
imul
pop
ss
neg
push
clc
inc
mov
fiadds
jg
adc
push
or
inc
cmp
or
test
cli
inc
stc
and
test
xor
pop
cmp
pushf
lods
sbb
xchg
sbb
xchg
test
aaa
jbe
rclb
out
dec
jmp
nop
cld
repnz
cs
ds
mov
mov
scas
jle
pop
xor
adc
jp
hlt
mov
stos
jo
pop
xchg
arpl
sbb
popf
out
or
lcall
jbe
stos
jl
xor
pop
dec
mov
xchg
insb
mov
mov
test
adc
repnz
gs
stc
mov
cmp
movsl
outsb
pusha
and
std
cmp
inc
jnp
std
fmul
les
push
cmp
sub
popf
mov
cltd
push
test
or
push
push
in
push
pop
push
sub
arpl
es
les
sbb
push
in
push
test
xchg
xorl
sub
inc
inc
cs
pop
jo
adc
idivb
adc
dec
push
inc
loopne
into
mov
cs
push
xchg
adc
dec
stos
cmp
test
add
push
sub
cmpsl
mov
adc
xchg
and
mov
inc
in
cmpsl
sub
in
jle
in
jb
push
out
pop
jge
pop
push
and
or
fsubrl
nop
xor
adc
ja
push
mov
dec
maskmovq
jg
sbb
repz
adc
insl
and
cmpsb
pop
lods
repz
sub
data16
scas
pop
jg
and
fisttps
sbb
and
in
push
ljmp
pop
testb
adc
test
pop
adc
mov
cli
enter
mov
das
pop
pop
mov
add
mov
xor
or
cli
popa
movsl
push
ret
testb
pop
add
jns
xor
cmp
adc
sbb
sahf
sub
fsubrs
inc
inc
pop
fldl
mov
and
sbb
add
mov
aaa
inc
cltd
sbb
mov
jae
inc
inc
arpl
jno
or
call
or
mov
or
xchg
jp
mov
ja
sti
aad
dec
push
and
adc
cmp
jl
xchg
fstl
jp
inc
insl
sbb
fs
jnp
jmp
pop
cltd
adc
adc
out
bound
out
lahf
sub
jbe
fwait
js
leave
and
nop
and
or
xor
sbb
lahf
adc
aaa
push
outsb
or
jge
sbbb
pop
sbb
test
jbe
repnz
adc
or
in
shrb
add
xchg
loopne
push
ss
roll
jns
inc
test
lret
jbe
push
or
scas
and
push
inc
aam
test
mov
insl
fnstcw
mov
xor
pop
test
icebp
jo
pop
cmp
pop
sub
out
lds
loope
hlt
pop
cltd
push
in
mov
aad
inc
adc
xchg
mov
lods
push
lds
push
test
insb
dec
xchg
sub
fmuls
rcr
ret
hlt
cmpsl
sti
mov
add
or
je
dec
push
push
cwtl
loop
shll
lret
xlat
and
add
push
sahf
rcll
jmp
adcb
loope
mov
aad
push
insb
ret
cmp
adc
xchg
shlb
add
jae
cltd
scas
out
imul
push
and
cld
test
cmc
jbe
testb
adc
bound
data16
adc
lea
test
pop
fsubrp
leave
dec
fdiv
scas
xchg
xrelease
aad
cmp
jns,pn
clts
mov
mov
jle
test
lods
pop
mov
aam
pop
mov
enter
mov
xor
mov
xchg
out
movsl
mov
bound
and
pop
frstor
add
push
call
and
cs
cld
imul
stos
cltd
cmp
ret
sbb
mov
mov
adc
icebp
in
pop
insl
xchg
bound
pop
mov
imul
mov
pop
insb
or
mov
fmull
movsb
lret
paddsw
into
and
and
push
xchg
dec
test
mov
add
jae
insl
dec
cmp
cmp
jns
cmpsl
ret
inc
sarb
clc
dec
mov
movsb
inc
xchg
movsl
cwtl
leave
pop
mov
mov
dec
mov
sub
push
pushf
daa
lea
push
cmp
dec
mov
repz
add
jne
std
lret
test
ljmp
daa
xchg
cmp
mov
or
sub
mov
inc
idiv
mov
ljmp
mov
mov
push
add
lahf
pop
bound
aas
imul
mov
addb
or
xchg
testl
imul
sub
pop
cmp
inc
daa
icebp
shll
jle
popf
pop
sbb
out
and
andb
test
out
mov
mov
loope
sbb
ss
sbb
pop
sbb
insb
mov
jno
or
loope
mov
mov
jmp
pushf
xchg
mov
mov
in
ss
mov
dec
cmc
enter
je
fildl
xchg
std
push
fbstp
dec
jo
cmp
adc
push
mov
stc
jl
or
xlat
pop
lods
sbb
push
or
int
ljmp
and
sub
stc
ds
inc
ret
fidivrs
mov
cwtl
mov
sbb
sub
lods
xor
push
lods
sbb
xchg
mov
xchg
push
arpl
pop
and
xchg
fisubs
rorb
or
add
ret
jae
mov
xor
fisttps
jo
add
fisttpll
lds
cs
inc
lret
mov
test
test
test
add
loop
sbb
aas
lret
mov
mov
data16
sub
lcall
cmpsl
push
push
inc
out
mov
push
dec
push
cwtl
js
inc
outsb
pop
cli
and
push
pop
lock
rclb
xlat
dec
lret
push
sub
or
mov
push
push
sbb
xchg
es
xchg
pop
pop
xor
sar
mov
mov
push
wbinvd
rorb
cmp
xor
push
es
sbb
mov
mov
mov
cli
fs
call
cmp
stos
push
xchg
inc
lahf
mov
test
jo
scas
lods
pushf
and
xcrypt-ctr
cmpsl
ficoml
dec
sti
icebp
je
lods
xor
pop
out
clc
popf
rcrb
dec
ficoms
insl
pop
cltd
dec
call
aaa
jmp
dec
dec
jp
cli
pop
inc
sbb
fimull
and
test
shr
adc
insb
dec
daa
pop
mov
mov
shl
jp
sub
into
icebp
push
sti
idiv
cmp
sub
out
std
or
xor
jle
scas
cmpsl
and
cmp
lcall
lcall
sbb
ljmp
inc
stos
xor
arpl
fdivs
aam
push
jge
int3
sub
pop
aad
repz
mov
mov
es
pop
add
inc
or
dec
outsb
sub
jne
sbb
pusha
test
repz
pop
mov
sub
xlat
jno
mov
out
call
add
mov
and
test
jge
pop
int
fcmovu
mov
cmc
inc
ss
out
nop
test
mov
jl
in
or
fcmovnu
sbb
mov
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
aam
scas
xor
jmp
bound
xchg
xchg
in
scas
jnp
arpl
ficompl
lcall
cmp
pusha
mov
fisubrl
enter
pushf
push
pop
js
cmp
xchg
in
sub
mov
push
mov
push
iret
imul
add
mov
dec
lret
inc
js
add
fcmovnbe
daa
xor
jns
punpckhdq
xchg
sbb
lret
push
sbb
mov
sub
sarb
pop
xchg
mov
fs
sub
bound
mov
mov
inc
push
mov
and
mov
pop
push
sub
in
mov
xor
or
sub
leave
inc
rcrl
lods
adc
arpl
and
xor
mov
mov
out
cs
dec
into
sbb
lods
jge
add
negb
and
pop
das
lods
push
scas
push
xchg
das
hlt
outsb
mov
imul
mov
add
xor
fdivs
jecxz
adc
cmp
repz
int
xor
cmp
test
push
loopne
sbb
loope
push
dec
pop
mov
and
xchg
out
xchg
xlat
or
imul
mov
push
mov
sbb
outsb
push
pop
inc
lods
sbb
dec
lahf
xchg
dec
cmp
stos
out
shlb
out
fadds
inc
loope
jg
jno
and
cltd
sub
push
push
ja
test
mov
sbb
js
lods
and
adc
xchg
mov
sbb
pop
and
jge
pop
xchg
mov
mov
or
jmp
and
lcall
out
ss
pop
popf
xlat
mov
mov
xchg
bound
sbb
out
inc
cmp
adc
xchg
mov
cli
mov
stos
xchg
push
mov
cli
inc
push
std
or
jbe
jne
mov
fstps
pop
dec
hlt
xor
inc
add
lret
mov
xor
cmp
sub
std
mov
call
lret
jmp
mov
gs
push
push
das
mov
and
mov
outsl
jg
in
add
sbb
and
sbb
xchg
cmp
push
mov
call
cwtl
dec
xor
push
sub
mov
ds
insl
pop
repnz
inc
push
add
nop
ret
incl
adc
out
and
pop
lock
cld
adc
pop
push
jle
ret
fcoms
negb
lock
cli
push
mov
dec
or
pop
xchg
not
outsb
jecxz
je
mov
xor
mov
mov
xor
enter
mov
fldl
out
pop
mov
lea
lret
iret
into
cmp
scas
hlt
push
and
nop
mov
jnp
ficoms
xchg
repnz
mov
cltd
mov
add
daa
mov
enter
jl
adc
mov
xchg
fstp
sbb
xor
loop
xchg
mov
call
sub
loop
pop
mov
fwait
mov
scas
dec
push
aas
lods
pop
cmc
pushf
std
lret
push
cmpsb
leave
xor
lods
inc
scas
aas
cs
push
popa
push
inc
jmp
outsb
insb
dec
in
mov
loop
das
ljmp
cld
mov
insl
lods
push
in
int
idivl
push
and
add
ljmp
test
inc
jnp
cmp
ret
imul
jns
outsb
icebp
sbbl
sbb
mov
sbb
dec
adc
push
or
push
xlat
idivb
call
sbb
and
fnstsw
cmpsb
shrb
dec
pop
pop
test
cmp
sti
mov
cwtl
orb
stos
mull
mov
dec
push
pushf
jle
cli
lret
and
cmp
cmpsl
or
xchg
in
dec
aam
jmp
rcll
dec
mov
jbe
mov
adc
or
aad
mov
mov
jnp
les
mov
push
ret
scas
dec
cwtl
jbe
imull
daa
arpl
subl
pop
daa
xlat
into
push
pop
arpl
pop
icebp
lret
pop
mov
pop
add
cwtl
push
out
call
popf
adcl
stc
mov
nop
mov
sbb
mov
ja
inc
les
dec
mov
dec
mov
aas
dec
pop
pushf
loopne
adc
not
xchg
push
mov
clc
cwtl
mov
ss
or
ret
aas
xor
push
stc
lcall
les
icebp
inc
inc
imul
adc
inc
loope
mov
sub
push
lcall
stc
test
or
loop
and
loop
sbb
hlt
cwtl
rcrl
loop
sub
push
sub
jge
add
mov
and
daa
int3
fscale
test
sbb
popa
pop
jnp
pop
pop
dec
outsl
pop
divl
arpl
mov
jp
sub
pop
subb
cmpsb
aad
ljmp
dec
cli
nop
sub
ja
sbb
fildl
mov
out
mov
insb
mov
inc
sbb
mov
test
cmpsb
push
addl
mov
ljmp
xor
pop
out
ja
lret
and
dec
clc
ss
mov
jg
scas
jo
pop
scas
gs
xchg
inc
lret
iret
push
lock
xor
cs
sub
lret
or
cmovnp
ds
shl
inc
dec
mov
sub
fwait
or
lods
and
sbb
mov
mov
dec
lods
cltd
test
fimuls
xor
fisttpll
es
lea
mov
pop
andb
xchg
and
test
stc
shl
addb
out
cmpsb
std
mov
int3
xor
sub
xchg
xchg
movsb
cld
lcall
mov
fmull
jecxz
pop
dec
rolb
mov
jo
and
movsb
xchg
aam
mov
bound
lret
push
and
ret
mov
shlb
test
test
gs
add
int
loop
lahf
in
sbb
cmc
aaa
lods
push
push
cmp
loope
or
jns
sbb
cmp
jecxz
or
inc
lea
inc
mov
shlb
xchg
fiaddl
std
mov
shl
xchg
add
adc
cmp
or
imul
stos
ret
lock
or
and
add
sti
je
shlb
push
fcomip
clc
pop
xchg
inc
mov
jo
insb
jge
iret
testb
hlt
call
or
sahf
test
jle
leave
mov
nop
xchg
pop
stc
popf
fwait
push
imull
jb
add
btr
shll
xlat
test
hlt
aas
xor
mov
bound
flds
fiadds
ds
stos
mov
mov
cmp
sbb
pop
sub
xchg
stos
cld
rorb
mov
les
mov
push
or
notl
adc
mov
sbb
scas
sub
movsl
pop
cmp
cmovb
adc
mov
lahf
mov
stos
push
jo
xor
mov
mov
push
mov
add
sub
or
add
in
inc
test
xlat
mov
enter
and
xchg
fmuls
es
test
ret
inc
fxch
or
je
daa
cmp
dec
fisubrs
inc
sbb
mov
xchg
push
cmp
pop
and
sub
mov
sub
les
loope
adc
fdivr
div
xor
mov
mov
sub
test
or
mov
pop
repnz
pop
scas
jl
cmp
adc
ja
arpl
xor
sub
out
mov
test
add
fistpl
loope
das
test
rorb
mov
xchg
add
mov
xchg
xchg
push
pop
mov
xlat
dec
sub
test
push
cld
shrb
mov
ljmp
shrl
xchg
xrelease
in
mov
scas
sti
fisubs
mov
dec
dec
jg
xchg
jns
arpl
loop
add
out
mov
iret
loopne
push
inc
adc
xchg
xlat
imul
mov
mov
ret
fstp
daa
xor
test
jmp
out
out
and
loop
mov
adc
out
xchg
xchg
pop
fbstp
pop
std
popf
in
add
pop
jp
int
mov
int
test
sub
and
insl
sbb
adc
loop
mov
fbld
xchg
mov
scas
add
pop
adc
cmp
shr
test
addr16
lret
push
and
xor
pop
cmp
test
incb
dec
scas
bound
rcrb
dec
push
pop
or
sarl
jg
sarb
mov
jnp
insb
pop
shlb
sub
aaa
jge
aas
in
insl
fs
insb
enter
sbb
mov
in
repz
and
inc
fwait
sbb
mov
mov
mov
mov
or
addr16
mov
imul
adc
lahf
jecxz
daa
mulb
add
in
mov
in
test
dec
mov
or
fxam
push
push
out
push
inc
and
cmpl
ljmp
sbb
gs
mov
std
xor
fidivs
sahf
mov
push
adc
xchg
push
in
pop
push
test
mov
push
mov
inc
push
mov
mov
mov
xlat
scas
mov
pop
insl
xor
mov
aaa
test
cmc
xchg
das
mov
in
out
xor
aaa
jle
addb
lock
inc
cmp
add
inc
xchg
enter
out
testl
int3
mov
out
shl
test
psubusw
push
outsl
lds
adc
lret
sub
mov
mov
mov
jo
fcomi
fwait
aam
cld
cwtl
add
subb
pop
ss
shll
sub
mov
enter
mov
dec
inc
clc
add
or
xchg
xorl
ja
gs
mov
xorb
divl
jne
out
mov
bound
imul
jne
clc
lds
sub
add
mov
aas
in
inc
cmpsb
sbb
int3
dec
cwtl
movsb
xor
shll
popw
cmpsl
das
add
loopne
fwait
jle
cmp
mov
and
rcl
dec
clc
pop
ja
ret
adc
push
bound
cmp
or
mov
sbb
sub
jecxz
dec
popa
mov
jmp
into
add
inc
xchg
adc
adc
rorb
test
clc
mov
orl
or
sub
and
enter
icebp
jle
addb
pop
lods
pop
jae
out
sub
jbe
jae
loope
pop
stc
mov
mov
mov
daa
mov
leave
pop
mov
lcall
or
inc
fistl
or
xor
and
push
lahf
gs
addr16
push
imul
inc
mov
dec
enter
test
test
int
insb
xchg
lret
dec
push
add
scas
push
sub
jno
stos
lock
cmpsl
daa
lahf
mov
ret
inc
xchg
rclb
popf
mov
jmp
mov
push
or
mov
mov
dec
fwait
sti
sbb
xor
in
mov
and
jl
cmp
jp
fidivl
xor
mov
or
xor
push
inc
push
fmuls
push
jns
sub
orl
xor
mov
lods
lock
pushf
or
sub
mov
sbb
insb
dec
adc
push
stc
fisttpll
ja
jge
xchg
in
test
mov
mov
add
pop
gs
and
test
adc
push
fbstp
inc
ja
sti
sub
sub
nop
dec
out
xchg
mov
inc
jp
repz
pop
orb
lock
xor
mov
add
ficomps
and
or
fsubl
shl
xchg
xchg
push
sbb
adc
int3
xchg
jle
mov
stc
dec
sbb
jnp
cmp
xor
xor
or
out
in
mov
push
pop
push
adc
mov
xor
leave
fstpl
es
iret
or
lods
sub
dec
mov
fwait
sub
iret
cs
mov
push
mov
dec
aad
or
adc
pop
clc
mov
mov
fwait
push
lods
fwait
jg
addb
xor
and
cmpsb
out
sbb
into
leave
sbb
xchg
test
scas
xchg
test
cltd
jne
mov
les
adc
cmp
fistps
mov
lods
mov
push
sbb
data16
insb
dec
loope
negb
jle
scas
xchg
jne
xchg
inc
mov
enter
sbb
fs
xchg
shrl
dec
push
iret
push
pusha
mov
loopne
mov
mov
mov
cmp
lds
int3
sbb
cmpsb
stos
lcall
adc
xchg
xor
popf
jae
inc
bound
push
fldenv
cld
mov
jle
jns
xor
cmpsb
add
sti
xchg
in
lret
sbb
mov
cmpsb
lods
enter
pop
xor
dec
jecxz
les
fwait
push
jae
add
sub
adc
inc
jl
mov
cmp
scas
mov
cmpl
repnz
mov
mov
inc
data16
div
and
mov
lea
mov
cmpsl
out
inc
mov
loopne
inc
es
imul
movsl
dec
xor
add
mov
idivb
loope
hlt
ds
scas
das
popa
mov
lcall
sub
jnp
xor
shll
pop
add
add
cmp
xchg
ss
movsb
xchg
push
cmpsl
in
ljmp
leave
jbe
mov
lods
or
popa
in
ret
mov
roll
divl
mov
negb
sub
int3
add
idivb
and
push
cwtl
pop
mov
cmp
and
lea
add
out
push
addl
aas
mov
lods
outsb
test
or
push
mov
mov
pop
and
mov
repnz
xchg
cmpsl
jle
cld
inc
jl
shl
jns
shlb
mov
flds
mov
testb
xchg
ret
test
mov
jge
mov
inc
js
mov
in
in
fstpt
lret
cltd
test
xor
jg
mov
movb
adc
loop
lods
push
mov
imul
push
xchg
mov
adc
cmc
cwtl
icebp
lock
test
imul
push
mov
testl
nop
jle
mov
nop
mov
cmp
sbb
and
cwtl
xor
or
pop
leave
mov
stc
lret
pop
mov
dec
cwtl
push
add
push
push
or
loopne
std
pop
jle
imul
daa
mov
shrb
int
xchg
inc
outsb
sub
sub
jo
xchg
jle
imul
into
add
sub
pop
mov
movsb
in
mov
insl
pop
jl
imul
pop
pop
push
add
sub
mov
scas
add
aad
pop
xchg
cmc
aad
outsb
jg
mov
repnz
push
and
popf
in
mov
int
add
cmp
pop
fidivl
cmp
inc
loopne
lcall
inc
mov
push
sub
cli
sub
aam
ljmp
xchg
icebp
fimuls
insl
rclb
xor
or
add
in
movsb
les
enter
int3
mov
xor
movsl
imul
scas
jno
dec
nop
out
jecxz
jnp
cmc
cmpsb
stos
push
jns
push
xor
xchg
mov
cmp
and
stos
ret
jp
in
mov
inc
adc
push
test
aad
adc
push
fwait
call
lea
mov
fwait
cmp
cwtl
and
dec
je
xchg
xchg
xchg
sbb
and
adc
loop
mov
mov
jb
push
ds
mov
lock
lods
in
or
xor
call
mov
bound
sbb
cltd
mov
xor
xchg
in
pop
bound
fcoms
xchg
enter
push
xchg
clc
mov
punpcklbw
mov
dec
xor
xchg
outsl
fs
mov
sbb
fs
or
popa
jo
mov
ret
xchg
aas
out
sbb
pop
vpmaxub
bound
push
jp
and
xchg
in
out
pop
aas
in
add
addr16
aad
fistl
push
sub
cltd
mov
push
and
inc
arpl
mov
mov
scas
aaa
xor
std
leave
dec
cli
push
mov
in
jnp
fnsave
shl
cmpb
dec
or
jmp
ret
push
mov
aad
icebp
cmp
push
add
jno
inc
cli
lods
ds
mov
inc
loop
adc
sar
jecxz
fwait
nop
inc
xor
push
mov
add
push
push
les
xchg
inc
cmc
mull
pusha
outsb
xchg
push
jae
xchg
or
jp
sub
mov
pop
push
fcoml
mov
std
fmuls
fwait
fwait
add
mov
mull
pop
int
mov
mov
cmp
mov
xor
ljmp
pushf
mov
xor
adc
and
jbe
mov
adc
aaa
out
aas
xchg
push
cltd
xlat
sbb
dec
rorl
xchg
leave
pop
aam
jge
dec
push
scas
pop
ret
fldl
loopne
add
push
push
push
or
sub
sub
jne
loop
jbe
fimuls
pusha
push
lds
insl
dec
cmp
xor
and
fadd
add
adc
ficomps
cmp
fimuls
out
jbe
inc
mov
push
stc
ficompl
lods
imul
mov
pop
movsb
mov
movsl
adc
es
fdiv
shlb
imul
adc
sbb
repnz
stos
pop
sub
jb
mov
ror
ljmp
cmp
leave
addr16
icebp
in
sub
mov
xor
addr16
pop
push
dec
jb
das
ja
xchg
neg
adc
fwait
pop
add
shrb
addb
xchg
pop
bound
and
or
out
and
shlb
mov
xchg
test
xchg
mulb
sub
addb
jnp
shlb
mull
dec
seto
jecxz
fldcw
bnd
std
shlb
cmp
and
or
jecxz
jmp
std
int3
pop
mov
lret
mov
xchg
andl
xchg
cmp
and
int
loop
es
fs
cmp
call
ja
scas
jmp
stos
jbe
xor
ljmp
mov
fbstp
lds
out
int3
sbb
inc
add
dec
dec
pop
and
pop
adcb
gs
lock
int
addr16
sub
mov
xchg
dec
int3
fnstenv
adc
jno
adc
lahf
leave
xchg
pop
imul
test
aas
mov
add
rolb
in
push
push
mov
sbb
fwait
icebp
das
bound
pop
imul
gs
jno
inc
stos
icebp
cwtl
mov
fmuls
sbb
or
push
xchg
orl
dec
repz
in
xchg
sahf
mov
arpl
ja
fadds
into
pcmpgtb
adc
inc
scas
xchg
les
ljmp
subb
push
jmp
add
cmpsb
in
add
xchg
std
js
push
inc
jae
add
mov
sbb
sbbl
xchg
push
fdivrl
or
sbb
mov
xor
dec
ror
mov
xor
fistl
or
mov
ss
jo
inc
js
test
dec
xchg
jne
out
xchg
push
jne
mov
xchg
ja
jnp
and
xchg
sbb
into
jmp
jnp
pop
call
or
into
or
jo
ret
pop
hlt
xor
imul
push
into
mov
or
arpl
push
cwtl
jo
sub
aad
push
scas
loopne
sbb
jge
mov
add
shll
je
push
add
cmp
jg
jo
or
jg
mov
mov
scas
lret
int3
sub
mov
adc
xchg
cli
es
inc
repz
ds
add
sahf
and
out
mov
iretw
mov
movsl
out
cmp
outsl
and
mov
int3
sti
jp
test
mov
mov
lods
in
dec
js
faddp
dec
out
out
add
mov
mov
sti
sub
icebp
dec
inc
push
xchg
mov
stos
lret
xchg
fdivrs
inc
jg
out
pushf
outsl
sub
repnz
movnti
xchg
mov
stos
push
dec
ffreep
xor
outsl
pop
push
loop
test
xor
int
jg
xchg
cmpsb
cmp
in
mov
int
push
and
sub
mov
fnsave
sub
jnp
movsl
mov
push
or
nop
push
mov
mov
ficoms
or
dec
ret
push
push
shll
jecxz
ffreep
sbb
out
je
roll
scas
inc
movsl
push
inc
in
sub
xchg
lret
inc
xor
cmp
aas
cmp
ficompl
lret
and
dec
dec
ljmp
daa
fs
mov
push
je
outsl
xchg
push
fidivl
jecxz
fwait
lock
rcll
and
std
sbb
adc
inc
cmpsb
push
clc
add
add
push
mov
mov
push
insb
movsl
adc
sbb
jae
jecxz
lods
insb
leave
xchg
and
inc
loopne
mov
lcall
push
inc
repnz
dec
jp
adc
sahf
xor
addr16
mov
xchg
jp
lock
push
data16
adc
test
and
push
cmpsb
bound
ljmp
jbe
push
imul
scas
dec
loop
cmp
dec
xchg
and
outsb
cmpsl
aas
sbb
jae
adc
in
push
mov
sub
das
mov
push
mov
mov
int
or
call
xchg
add
xor
xorb
mov
shr
in
jb
imul
adc
inc
jnp
dec
push
out
scas
movsb
and
cli
mull
pop
or
adc
mov
stos
jo
lret
adc
repnz
lcall
push
mov
cwtl
inc
imulb
pop
arpl
add
rcrl
dec
aad
mov
out
push
jecxz
push
cmp
shrb
xor
xor
mov
pusha
hlt
popa
lahf
inc
rcl
gs
xorb
sahf
dec
fidivrl
xchg
mov
pop
cltd
sbb
out
jb
mov
dec
insb
jbe
iret
pushl
sahf
xorl
add
mov
fdivrs
test
mov
popl
dec
rorb
cmpsl
int
xor
filds
incl
or
sbb
pop
dec
arpl
dec
push
in
push
call
pop
cltd
pop
adc
xor
and
and
mov
pushf
xor
dec
iret
jb
imul
jge
cmp
faddp
cmp
mov
aas
jmp
jb
mov
push
push
stc
aad
bound
lock
and
popf
xchg
lods
movsl
repz
adc
hlt
mov
adc
xorl
js
andb
gs
arpl
and
adc
mov
jecxz
mov
lret
adc
push
imul
insb
adc
push
setae
cmp
out
imul
sti
add
push
inc
pop
int
stc
sub
nop
aam
sub
and
jp
outsl
mov
cmp
in
and
sbb
imul
pop
or
out
pop
push
faddp
push
fstpl
jge
aaa
and
mov
hlt
fidivrl
enter
in
aad
mov
dec
sub
push
push
fcomps
mov
pop
hlt
pop
mov
xchg
sub
cmp
lods
or
pop
sub
pusha
ljmp
call
mov
roll
adc
pop
xor
jmp
lds
dec
mov
pop
and
out
in
dec
das
mov
mov
cmp
enter
mov
push
and
sub
call
jae
stc
pop
add
dec
push
enter
je
test
aas
js
inc
pushf
notb
push
ret
inc
mov
pop
dec
testb
jmp
lds
pusha
mov
repz
shrb
sbb
jle
and
mov
cmp
cmc
push
call
inc
lcall
std
push
adc
push
insl
jb
in
nop
sbb
cmp
insl
jae
jg
xlat
cmp
cmp
xchg
les
push
xchg
stc
inc
jp
xchg
xorb
insb
xchg
gs
sub
sbb
adc
lcall
push
pop
push
lods
insl
mov
test
shrb
xchg
cli
jnp
lea
test
cmp
or
xchg
pop
xchg
ja
repnz
fcomi
adc
das
lret
adc
dec
adc
dec
sti
clc
dec
leave
mov
lods
stc
inc
fwait
popa
insl
xor
pusha
js
mov
inc
pop
pop
mov
ficoms
sub
jge
or
sub
addr16
leave
insl
xor
cmp
out
ljmp
or
push
in
xchg
in
xchg
or
jmp
shlb
test
jae
cwtl
pop
and
dec
sbb
sub
das
inc
mov
dec
fs
pop
sub
addr16
jmp
mov
mov
rclb
xchg
pop
lods
inc
pop
cmp
aas
and
icebp
sub
push
jp
mov
xor
lahf
push
ret
call
ds
sbb
movsb
adc
lret
adcb
mov
xor
sub
mov
data16
or
fidivrs
mov
mov
add
sahf
jbe
and
lahf
outsl
inc
lds
cmp
insb
ja
mov
push
fisubrl
enter
jne
mov
push
mov
pop
mov
outsb
and
and
mov
lret
push
sahf
sbb
sub
push
cmp
pop
jne
shll
mov
adc
xor
jbe
or
ss
push
cli
out
test
pushl
or
mov
jmp
scas
xor
jne
dec
lcall
xor
int
xor
add
jg
adc
mov
das
xor
loop
push
jle
shlb
and
daa
subb
adc
ret
mov
cwtl
add
sub
movsb
pop
loopne
shlb
pop
ffree
test
imul
addb
sti
push
outsb
mov
inc
in
cltd
scas
add
cmpsl
or
mov
jge
push
xor
push
xchg
in
outsb
cmp
pop
imul
test
inc
adc
popa
dec
lock
xchg
cmp
repz
rclb
and
into
stc
or
or
push
inc
jg
ja
in
sub
imul
add
dec
mov
loop
aas
ds
xor
rcr
data16
jae
inc
push
lods
andb
test
adc
lea
add
push
loope
insl
sub
daa
xor
rolb
jb
popa
ror
test
fsub
inc
cli
rol
movsl
dec
aad
fwait
ds
in
int3
repz
push
sbbl
imul
sbb
dec
sbb
test
xchg
int
movb
mov
sub
dec
adc
sahf
jp
mov
mov
cmpsl
cmpsb
adc
or
pushf
imul
xchg
hlt
jb
cltd
imul
scas
testb
aaa
sbb
cmp
aaa
push
sbb
jge
daa
shll
std
scas
mov
push
inc
jne
dec
lods
mov
xor
pop
jl
mov
dec
ss
xchg
push
lcall
sbb
mov
pop
lret
cmp
pop
mov
mov
mov
out
jl
lret
fidivrl
jmp
mov
mov
or
sub
out
std
jnp
dec
out
sbb
pop
out
lret
popa
fistpl
pusha
outsb
xor
and
mov
sbb
in
sub
orl
not
sbb
pop
sarb
lahf
cmp
push
jns
cs
mov
xchg
or
pop
stc
call
adc
popa
into
hlt
sub
add
vpsubw
sub
stc
or
or
sbb
pop
roll
aaa
mov
insl
fmul
sti
test
flds
sbb
or
clc
jae
bound
inc
stc
sbb
clc
and
arpl
in
jbe
mov
mov
repz
jecxz
mov
leave
lret
mov
mov
lea
int
mov
push
xor
mov
aaa
xchg
and
fbld
in
xor
arpl
push
mov
mov
or
mov
xchg
push
in
addb
jae
cmpsb
sub
stos
in
outsb
andb
imul
pop
adc
xchg
setge
inc
push
sub
dec
jbe
cmp
sbb
movsl
sub
enter
mov
jecxz
jo
popf
fs
pushf
addr16
sub
inc
xorb
pusha
outsl
push
out
aad
jl
stc
mov
pushf
jae
mov
ret
gs
cld
or
mov
fsubl
add
pusha
iret
cmpsb
movsl
add
cmp
pop
jp
mov
cmp
mov
ljmp
xchg
push
inc
lahf
jo
mov
mov
xchg
stos
fdivrp
sbb
dec
jmp
call
pusha
or
jecxz
pop
push
inc
jecxz
cmc
inc
mov
xor
std
dec
inc
cmp
inc
mov
pop
mov
movsl
fnstsw
jae
xchg
rorb
jae
in
dec
in
lahf
jb
and
ret
ss
insb
adc
addr16
xchg
in
cmp
jb
out
pushf
push
mov
sub
aam
aas
pop
fs
jge
sbb
frstor
inc
add
cmp
xchg
sbb
fnstsw
dec
push
movsl
insb
mov
sbb
sbb
push
mov
inc
aam
dec
inc
jge
pop
std
jmp
or
push
leave
or
sbb
push
out
in
cmp
mov
out
add
lcall
lea
mov
je
int
repnz
mov
push
aas
inc
dec
pop
sbb
stc
mov
addl
iret
ja
out
push
jg
aad
call
fsubrs
mov
lods
imull
nop
psubusw
push
sub
mov
push
pop
xor
icebp
clc
test
and
pusha
or
pop
fs
mov
lret
sbb
xor
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
out
cmc
rorl
bound
pop
bound
jl
jae
cmp
jb
cmpsb
pop
push
rolb
jmp
cld
test
lea
dec
dec
lret
cmp
shlb
insl
es
mov
xchg
outsb
movsb
lahf
mov
les
sbb
jmp
les
stc
lcall
inc
mov
test
jp
ficoms
and
xorb
aas
leave
sub
jae
fiadds
inc
or
imul
pop
dec
pushf
or
int
iret
push
adc
mov
test
cmp
in
xchg
aam
mov
xor
leave
jl
sbb
jg
mov
mov
out
enter
out
sub
nop
or
pop
pushf
push
push
pop
pop
sbb
sub
mov
adc
shll
out
data16
test
mov
jns
into
xor
sub
jle
sub
int
cmpsb
inc
mov
jle
ljmp
test
dec
pop
ljmp
sbbb
rolb
jle
push
aam
or
leave
int3
cltd
push
mov
jecxz
clc
mov
mov
cli
outsl
inc
repz
jge
cmp
fs
scas
arpl
jp
std
lds
adc
or
jns
pop
je
or
inc
repnz
pop
ret
lock
das
dec
push
stos
mov
scas
dec
call
inc
or
fldt
es
sbb
or
not
icebp
outsb
mov
ret
pop
mov
mov
inc
jmp
push
dec
shll
jb
push
fsubrs
jno
push
sahf
cmp
push
pop
fs
pusha
mov
jge
inc
aad
fstpl
xchg
add
repz
mov
mov
pusha
stos
lds
scas
add
and
inc
fstpl
adc
add
mov
dec
mov
mov
or
hlt
into
leave
jge
int
mov
les
ret
push
or
mov
pop
dec
movsb
outsl
jl
sbb
dec
and
idiv
or
sub
sub
mov
inc
or
iret
jmp
xchg
add
mov
inc
jno
das
jecxz
cmp
stos
jne
pop
pushf
out
int3
inc
mov
inc
cmp
jg
fsubrp
fildl
lods
xor
cmp
mov
jbe
cmp
mov
mov
fwait
mov
aad
adc
push
sub
pop
jecxz
out
leave
pop
pop
or
cmp
fmul
jle
dec
adc
xor
out
enter
je
cmpsl
sarb
cmpl
pop
push
and
dec
imul
mov
test
cltd
fldz
leave
sbb
test
fldlg2
xchg
or
repnz
lock
add
js
adc
and
mov
inc
jmp
jne
mov
push
fnstsw
xchg
sarb
sbb
pop
inc
ds
scas
pushf
mov
sbb
in
mov
jg
loope
in
lods
jp
mov
jmp
leave
cmp
faddl
cmc
jmp
inc
mov
jnp
fisubrs
pusha
pop
in
jbe
xor
ljmp
dec
test
test
lcall
mov
in
xor
mov
jns
xor
adc
insl
pop
add
out
push
scas
aad
adc
inc
xor
pop
nop
adc
mov
jmp
ds
shl
jg
loop
mov
and
pop
push
fnstenv
fsubr
adcb
scas
outsl
dec
and
imul
push
push
stc
inc
jne
movsb
lea
push
lds
mov
sub
movsl
xchg
scas
or
in
sub
jae
divb
dec
call
ret
pop
fisttpl
bound
and
or
stos
mov
lock
cmp
xor
xchg
mov
and
jp
push
out
cltd
repnz
xlat
dec
cmp
cmpsl
sbb
pop
iret
push
sub
push
mov
nop
or
jg
cmpsb
or
mov
or
lea
lea
push
sbb
imul
xchg
sub
dec
out
dec
in
fldcw
test
test
movsb
xchg
xchg
cwtl
or
sbb
add
push
jb
cmp
js
sti
cmp
dec
test
lea
sbb
push
enter
push
out
cwtl
gs
pop
test
insb
inc
mov
adc
or
xor
sti
popa
mov
cmc
lock
into
sbb
out
dec
lea
outsb
xchg
sbb
dec
inc
sub
jb
mov
bound
adc
add
sbb
adc
mov
cmp
aam
jo
push
xchg
mov
inc
insl
rcrl
xchg
pushf
fs
cmpsb
call
push
mov
ljmp
add
pop
enter
mov
out
and
push
stc
jecxz
in
cmp
outsb
repz
int
xor
pusha
jecxz
pop
xorb
in
or
mov
add
cli
subl
inc
xor
aaa
pop
aad
or
push
mov
stos
sbb
push
mov
shr
aaa
movsb
add
ss
push
dec
les
xchg
loop
shll
shll
push
fadds
imul
cli
push
jmp
test
mov
and
mov
insl
in
and
cltd
test
or
xor
cltd
fld
sub
push
enter
sub
mov
adc
hlt
arpl
sub
xchg
out
cmpsb
test
lods
aam
shll
xor
xor
adc
jo
add
enter
bound
daa
lds
jo
adc
mov
adc
pop
sbb
js
int3
adc
aaa
adc
out
fildl
mov
mov
out
mov
in
push
insl
mov
imul
dec
sbb
test
ss
out
lods
xchg
mov
sub
inc
jbe
pop
push
test
jo
gs
pop
mov
movsl
jnp
xor
mov
sarb
repz
pop
in
in
lret
xchg
mov
push
stos
mov
jl
or
xor
pop
push
sbb
enter
bound
mov
test
push
xor
push
mov
loop,pt
pop
out
jbe
scas
add
pop
dec
push
fiaddl
adcb
xor
xchg
sahf
fbstp
in
sbb
jmp
jns
jmp
sbbb
subb
int3
in
iret
pop
scas
cmpsl
in
push
shrl
into
sarb
enter
add
aaa
daa
sti
mov
mov
or
les
nop
xchg
out
push
outsl
scas
loop
mov
pushf
movl
adc
in
test
test
mov
fwait
inc
cmp
stos
push
and
sahf
or
iret
add
dec
pop
xchg
inc
mov
sbb
movlps
hlt
xor
mov
or
push
icebp
je
push
lods
subb
adc
ds
and
cmp
les
push
lret
lcall
test
out
in
xor
sbb
call
je
ret
jp
cld
out
outsb
aaa
dec
outsl
add
mov
int3
mov
lock
lds
push
loopne
jbe
jo
imul
or
inc
adc
pop
mov
xchg
je
daa
cmp
fcoml
sbb
cwtl
dec
cltd
push
fbstp
scas
test
mov
repnz
aaa
inc
adc
cmc
outsl
xor
pcmpgtw
dec
jge
stc
mov
je
sbb
mov
pop
sti
test
insl
and
push
cmp
cs
cmp
ja
aad
lahf
and
adc
gs
push
shr
ret
aad
xchg
rclb
pop
sbb
push
xchg
mov
addr16
lock
dec
pop
cmp
mov
test
dec
mov
push
push
xchg
loope
pop
int3
gs
pop
pop
dec
notb
mov
dec
sub
and
call
pop
fisubs
adc
sarl
and
pop
es
mov
test
fmul
mov
sahf
outsl
mov
in
leave
xlat
push
jo
movsl
lods
cli
fwait
cmp
cmc
int
mov
roll
mov
aas
mov
inc
les
sub
int3
ljmp
or
mov
lret
add
outsl
jmp
in
ret
inc
pop
pop
pushf
clc
getsec
out
push
popf
sub
or
jecxz
dec
push
adc
inc
push
aad
dec
push
and
int3
jge
jb
outsl
mov
cmp
and
sub
lods
loope
pop
decl
xchg
mov
scas
xor
mov
mov
mov
and
ja
inc
ds
loopne
je
iret
fst
addl
rcrb
out
mov
in
arpl
mov
jo
mov
cmp
xchg
jae
cmp
cs
test
in
cmpsl
repnz
js
sbb
es
cwtl
cltd
data16
js
cmp
pop
pop
pop
add
lret
adc
adc
mov
xor
add
insl
xchg
scas
sbb
or
out
stos
es
loope
mov
lcall
sbb
or
js
pop
mov
adc
and
pop
fsubl
aas
inc
mov
cli
pop
fwait
fwait
adc
pushf
rcrb
xor
inc
cli
dec
dec
pop
mov
push
push
repz
fmul
mov
pop
adc
jle
and
call
xor
aam
pop
insb
add
mov
push
in
mov
push
sti
addb
shlb
jle
sbb
test
imul
push
sbb
filds
iret
cmp
fwait
xchg
dec
ret
ret
negb
sahf
cmp
xchg
xchg
call
mov
out
mov
sti
and
mov
inc
jnp
xor
rorl
mov
rcl
xchg
paddw
xorps
xor
push
pop
sbb
scas
and
cmp
xor
inc
inc
add
outsb
add
ret
ds
pop
sub
adc
leave
cmp
mov
inc
xchg
or
inc
cli
sbb
sar
shrb
sub
je
mov
fs
add
ja
cmp
and
xlat
pop
mov
mov
fwait
sub
cmp
icebp
xchg
movsb
hlt
xor
lcall
fidivrl
shll
xor
cmp
cmp
nop
xchg
test
push
cld
inc
xchg
mov
dec
mov
in
push
jbe
lcall
insl
out
or
xchg
sti
cmp
mov
mov
in
cli
cmp
nop
mov
sbb
popf
push
fwait
rcll
rcll
inc
mov
xchg
jns
jo
sbb
xor
xchg
ljmp
imul
pop
sub
dec
add
rcl
sti
clc
cmpb
pop
mov
cli
fisttpll
mov
mov
adc
xor
fcoml
stos
fcmovu
mov
ret
stc
fildll
int
bound
in
rcr
test
or
lret
lods
mov
clc
pop
push
mov
add
cmp
push
sbb
jo
std
popf
jmp
dec
push
cmp
cmp
pop
xchg
movsl
adc
into
xor
jnp
cmp
aas
cmpb
push
roll
iret
mov
lds
in
xor
cld
adc
jle
enter
aaa
iret
loope
mov
push
sbb
xor
add
pusha
cmpsb
jge
xchg
js
and
in
push
or
roll
lock
inc
sub
in
aam
jae
dec
jo
sbb
rorb
jb
xorl
lret
xchg
mov
dec
in
into
orb
push
cwtl
mov
push
int3
movsl
daa
xor
ds
pop
fwait
sub
rorl
mov
or
mov
xchg
fdivl
and
lret
gs
paddq
mov
lock
mov
out
popf
lret
data16
push
jp
in
and
lret
std
mov
mov
cmpsl
popa
pop
aad
orl
or
popf
lret
mov
les
and
in
pop
loop
loop
push
clc
mov
mov
and
and
jns
and
insb
fsubrs
js
inc
cmc
add
lock
push
movsb
and
es
leave
pop
pop
adc
inc
and
aam
xlat
push
mov
dec
xchg
mov
sub
imul
data16
addr16
iret
cmc
add
jl
enter
pushf
ss
aas
and
fstps
mov
jge
mov
push
es
or
xchg
std
mov
dec
inc
icebp
mov
sub
insb
xlat
fwait
arpl
mulb
aad
mov
ficompl
orb
cmp
and
jg
push
insb
into
xorb
loop
clc
push
iret
flds
lea
lret
pop
push
jecxz
cmc
jecxz
pop
xchg
pop
cmp
sub
subb
add
inc
mov
jp
aam
add
test
adc
pusha
mov
insl
inc
shll
les
bswap
mov
push
cmc
jne
mov
add
rcrb
inc
inc
dec
stos
cltd
push
test
leave
bound
push
jmp
sbb
push
pop
jbe
ljmp
pop
in
shl
out
mov
mov
in
pop
aam
dec
pop
fistps
jnp
mov
jge
pop
cmp
or
cmpsb
scas
cmpl
iret
mov
dec
cmp
or
test
or
pop
and
or
jmp
cmpl
ret
sub
pop
daa
daa
fs
add
icebp
fcmove
aaa
sub
mov
sub
sbb
repnz
jbe
out
inc
and
xor
je
cmpsl
icebp
inc
pop
jecxz
hlt
jb
sub
mov
mov
stc
movsl
push
push
jbe
inc
bound
icebp
mov
and
outsb
pshufw
and
inc
jbe
mov
mov
shlb
add
clc
pop
xchg
sub
das
sbb
stos
rcr
rol
add
or
and
clc
xor
cmpb
fwait
sbb
imul
das
pushf
xchg
fs
daa
in
pop
adc
add
cmp
xchg
aad
mov
pop
popf
repz
and
rcll
lock
pop
lea
lret
mov
loop
out
repz
ret
or
dec
add
push
imul
or
in
mov
sti
push
xlat
jle
xchg
pop
sbb
add
xchg
pop
mov
cmp
add
xchg
or
xchg
xlat
push
int3
inc
pushf
mov
leave
xor
and
cmpsb
mov
xchg
pusha
int
sbb
or
jle
popf
out
out
bound
pop
sarl
je
adc
fs
outsb
stos
mov
cwtl
ljmp
xlat
mov
sbb
fwait
je
jge
jle
arpl
test
add
push
andl
jmp
movsb
mov
jns
xchg
sbb
xchg
iret
inc
mov
mov
repz
sub
mov
mov
mov
gs
call
orb
mov
jae
dec
xchg
jp
stos
fisubs
daa
test
mov
xchg
push
dec
gs
pop
fstpl
ja
adc
mov
aaa
mov
sbb
test
test
dec
cmp
shlb
sbb
mov
outsl
out
mov
or
xchg
data16
inc
leave
mov
negb
scas
hlt
leave
mov
inc
out
mov
pop
xor
in
or
cwtl
jno
add
mov
clc
ficompl
lods
out
or
je
stc
or
add
dec
mov
sub
movsb
sub
pop
ficompl
pop
sbb
decb
mov
mov
fstpt
xchg
iret
inc
cmp
sarb
xor
mov
les
pop
inc
mov
jecxz
pop
js
mov
add
pop
mov
cmp
push
dec
cltd
push
cmp
into
insb
sub
and
in
out
test
in
dec
adcb
jbe
imul
mov
xor
jb
and
ficoml
mov
lods
lods
xchg
push
xchg
repz
cmp
cmpsl
sub
xlat
shll
or
call
and
dec
mov
or
sbb
xchg
dec
push
xor
jl
outsl
aaa
cmpl
sarl
repnz
push
stos
std
cli
in
xchg
mov
insl
cmp
inc
jge
sub
jge
sar
sbb
negl
push
gs
mov
inc
call
cwtl
ja
test
dec
adc
mov
test
ja
mov
push
add
xor
mov
xor
mov
sbb
aad
sar
sub
mov
loopne
shl
adc
test
dec
jo
lahf
fucom
rcl
insl
mov
leave
and
or
adcl
push
bound
jg
test
btr
je
pop
mov
outsl
jns
insl
shlb
fisttps
stos
out
xor
adc
inc
mov
imul
mov
out
jl
jp
and
push
bound
gs
or
rorl
mov
xchg
dec
les
jl
les
mov
stos
xchg
mov
scas
xchg
push
mov
ljmp
arpl
cmpsl
mov
xlat
fsubl
jmp
movsb
test
jl
loope
sbb
adc
dec
xor
pusha
clc
loope
lock
or
mov
inc
mov
dec
sbb
ret
lret
mov
add
fisubs
aaa
mov
std
sbb
imul
and
xor
mov
mov
jb
repz
mov
shlb
in
pop
stos
jg
hlt
and
xchg
repnz
dec
mov
jmp
cwtl
adc
lock
not
jmp
icebp
int
in
mov
iret
jnp
pusha
sub
ss
popf
lds
ret
das
jne
push
test
jns
loop
fcoml
loop
sub
in
cmp
push
mov
xor
push
cmp
call
sub
gs
cmc
cmp
sahf
or
cli
dec
inc
out
xor
jne
outsb
out
repz
ljmp
xchg
les
jno
cmp
test
jecxz
imul
mov
sub
lods
mov
push
or
xchg
int3
pusha
mov
shlb
inc
in
outsl
sbb
in
in
popf
xchg
inc
aad
inc
lock
fwait
push
adc
push
jne
xchg
cmp
mov
out
mov
inc
jl
ret
aad
rolb
and
imul
mov
pushf
mov
sub
push
dec
adc
pop
pop
fsub
bound
mov
mul
scas
lret
movsl
pop
lcall
scas
push
lock
adc
cli
mov
mov
ljmp
outsl
inc
cmpsb
push
pop
in
jb
mov
imul
movsl
int
push
call
pop
xchg
pop
pusha
sub
sbb
inc
dec
hlt
jl
xchg
lret
add
scas
in
loopne
and
cmp
pop
sbb
push
lret
cmc
xchg
clc
xchg
lods
push
sub
sbb
or
xlat
push
cmp
mov
and
idivl
mov
inc
rclb
xchg
int
xor
mov
adc
xor
sbb
scas
dec
or
xor
dec
repz
lods
xor
mov
fs
mov
aad
in
xor
daa
pop
jno
loop
push
loop
inc
test
fucompp
xor
xor
lods
adc
insb
mov
mov
fisttps
je
stos
in
xor
sub
bound
xchg
in
mov
sti
mull
pop
xorl
and
cmp
mov
rorb
add
mov
adc
add
js
aaa
sub
dec
in
fstps
pusha
fdivp
push
cld
mov
in
loope
aad
cwtl
dec
insl
stc
popa
mov
pop
mov
popa
dec
pushf
add
ret
lret
icebp
adc
loopne
cmp
push
jns
aad
push
or
xor
cld
or
mov
cmp
aas
adc
cmc
jne
std
and
or
lds
rol
cld
mov
push
or
or
int3
cmp
push
mov
std
ja
xchg
mov
movsb
inc
and
dec
mov
cmp
sub
pop
jp
pusha
loopne
sbb
iret
in
mov
mov
cmp
lahf
outsl
or
and
arpl
fnsave
jns
loop
inc
lds
addr16
sub
pop
jp
fucomp
sarl
in
xor
aad
mov
test
arpl
push
cmp
mov
dec
push
mov
loope
and
cwtl
sti
or
imulb
adc
insl
mov
stos
int
dec
cltd
xchg
scas
stc
cmp
ljmp
push
dec
or
call
jns
xchg
in
pushf
mov
ret
xchg
scas
mov
sti
in
out
jecxz
lods
inc
lods
fstpl
sbb
fidivrl
in
inc
lods
mov
mov
addl
or
adc
int
fs
in
sbbl
inc
imul
and
test
nop
int3
std
add
jb
sbb
dec
cmpsl
sub
push
push
mov
or
gs
add
scas
pop
outsl
push
add
cmp
daa
cmp
daa
cli
andl
xchg
jnp
jg
test
xlat
sbb
ret
std
cltd
aam
dec
in
aam
test
lock
std
adc
ret
iret
cmp
mov
ss
insl
icebp
loop
lock
xchg
test
in
cmpb
jno
adc
movsl
sub
test
enter
rorb
and
cmp
scas
add
lods
das
outsb
out
std
jmp
mov
daa
sbb
mov
inc
sti
push
in
cmp
les
dec
or
ret
mov
fcmovb
jmp
add
arpl
stos
or
clc
sbb
xchg
xchg
xchg
lret
jbe
gs
pop
out
out
es
ljmp
push
ds
hlt
int3
std
iret
cld
movsl
xchg
shll
pop
add
fstp
lods
push
mov
ljmp
and
xor
pusha
push
inc
lahf
shll
adc
dec
xchg
pop
pop
push
jae
xchg
jecxz
dec
lret
pop
inc
or
pop
hlt
sub
sub
fwait
or
fiaddl
cmp
lods
mov
imul
insb
and
or
popf
dec
or
jle
and
add
mov
mov
je
xor
dec
movsb
ret
inc
jns
testl
add
mov
and
fistpl
jne
sahf
mov
fs
sbb
adc
add
or
and
mov
pusha
adc
inc
dec
push
xchg
js
fwait
xor
in
sbb
notb
xor
and
leave
out
scas
mov
lret
add
pusha
or
popa
inc
rcrb
inc
dec
sub
xchg
cmpsl
in
pop
inc
jbe
xlat
dec
fistpll
rcll
movsb
push
fistpl
lods
fistpl
push
mov
and
cmc
pusha
mov
repz
sbb
cmc
inc
loope
xor
and
add
int3
arpl
pusha
mov
xor
lock
loop
cwtl
sub
or
pop
mov
rorb
fbstp
xchg
jns
dec
xor
or
insb
add
dec
test
aad
xchg
adc
iret
or
test
sbb
popf
in
dec
jns
gs
mov
and
pop
push
mov
sarl
testb
add
push
mov
dec
sbb
xor
ljmp
popf
aam
and
rcrb
fcomps
jne
xchg
push
test
pop
cmp
adc
mov
in
jne
inc
push
fucom
inc
sahf
mov
push
sahf
add
jp
xchg
in
push
iret
xor
cmp
inc
scas
xor
fidivl
jae
push
imul
jg
push
adc
in
mov
jo
movsl
mov
jo
mov
hlt
jle
sub
mov
stos
xchg
outsb
or
bound
xlat
es
rcll
aas
mov
xchg
test
shlb
dec
dec
mov
jmp
in
inc
dec
test
fstpt
pop
xchg
sbb
push
ret
push
cmp
int3
pop
stos
popf
sub
aad
insb
dec
les
int
mov
mov
sub
push
aam
mov
push
jge
ret
xchg
or
inc
test
repnz
call
frstor
mov
bound
mov
adc
adc
arpl
sub
xlat
mov
mov
mov
lods
gs
in
mov
inc
jmp
or
xchg
les
std
mov
xchg
int3
aaa
mov
push
addl
jno
cmp
mov
dec
loopne
enter
sub
dec
cmp
std
insl
cmp
push
pop
arpl
mov
aam
ret
push
xor
or
mov
pop
xorb
sbb
ret
repz
nop
pop
daa
daa
inc
mov
popf
aad
mov
dec
adc
sbb
push
loope
dec
inc
add
push
fbld
loopne
pop
lret
xchg
iret
stos
pop
adc
insl
push
lcall
pusha
sarb
test
insb
into
psrlw
push
neg
push
and
dec
xor
fisubrl
fistpll
cmpb
cltd
or
mov
filds
lea
loop
das
rolb
mov
mov
cld
jno
and
pop
mov
imul
cmp
adc
fisubrs
out
xor
loope
aad
rcl
jecxz
inc
xchg
aam
adc
xor
or
pop
cmp
rolb
pop
mov
cmp
jecxz
adc
pop
mov
and
mov
test
xchg
sbb
mov
rcrb
inc
mov
and
add
pop
jae
push
xchg
xchg
push
push
cli
or
pop
jae
mov
sbb
cmp
push
cs
push
icebp
dec
mov
shlb
sub
xchg
fbld
dec
sbb
add
in
enter
xchg
mov
mov
and
stc
mov
dec
enter
cwtl
int
popf
lods
xchg
add
iret
sub
ljmp
or
mov
outsb
ds
mov
mov
xchg
mov
inc
ret
push
repnz
and
jnp
xor
out
icebp
dec
loopne
mov
mov
pop
push
shrb
sbb
mov
test
cld
lods
jb
mov
cmpsb
dec
in
outsl
pop
aas
loopne
jb
mov
out
jecxz
adc
mov
vpunpckhbw
pop
and
inc
mov
gs
jbe
ljmp
cmpsl
aad
shl
dec
stos
fimull
movsb
movb
sub
dec
adc
pop
mov
or
pop
mov
mov
add
sub
adc
mov
jmp
mov
std
mov
sti
stos
test
and
lods
or
jbe
adc
pop
repz
ret
sub
push
xchg
imul
dec
out
repnz
dec
pop
arpl
cvtpi2ps
pop
repz
mov
lcall
test
push
and
adc
in
xchg
cmp
loopne
xchg
pop
add
add
pop
xchg
xor
cmpsb
mov
pushf
out
addb
cmpsb
hlt
cmp
xchg
push
xchg
stc
cmp
xor
mov
push
nop
cmpsl
cld
insl
push
mov
cwtl
scas
sub
push
int
jl
pop
push
ret
and
iret
aam
ret
cs
in
ljmp
and
and
push
jo
out
adc
pop
aas
addl
jno
inc
dec
mov
inc
add
xchg
push
scas
adc
loop
sbb
xchg
xchg
mov
loop
cmp
cmpsb
lods
mov
pop
repz
inc
pop
icebp
xor
push
sbb
cmc
and
bound
addb
ljmp
insl
fmuls
fs
mov
into
xor
sbb
push
fimuls
loope
mul
pushf
jg
test
and
push
cmp
cmp
imul
ret
faddl
jbe
test
push
and
lret
stos
cwtl
outsl
mov
movsb
cs
and
xor
rcr
nop
or
pop
add
ja
insl
mov
push
push
icebp
stc
andl
test
jae
cmp
nop
ljmp
push
gs
pop
movsl
inc
jle
std
pop
iret
mov
subl
rcr
mov
jl
mov
sub
mulb
xor
push
cs
call
ja
and
test
fistl
mov
iret
cwtl
dec
adcb
cmp
sbb
out
fidivl
push
loopne
cmp
into
bound
push
mov
push
ret
lods
add
outsb
mov
inc
or
dec
rclb
cltd
shlb
add
lds
mov
std
rcrb
dec
sbb
cmpsl
mov
stc
push
jo
lahf
rcrl
xchg
xchg
in
les
jno
xorb
mov
mov
cld
lahf
hlt
cmp
enter
fsts
adc
pusha
inc
mov
jbe
in
xlat
sub
mov
scas
addr16
ss
jecxz
mov
xor
loopne
xchg
imull
adc
movsb
jecxz
jno
pop
jmp
jae
push
lods
repnz
and
inc
test
jno,pn
mov
mov
movsb
test
inc
push
mov
cmc
mov
push
hlt
xabort
das
pop
sbb
add
xlat
gs
leave
jge
mov
clc
sbbl
xchg
mov
dec
shr
and
in
nop
mov
ret
ret
cmpsw
stos
in
xorl
xchg
cmpsl
int
pop
and
stos
pop
in
divl
stos
repz
sar
addl
jbe
icebp
mov
pop
sub
aas
or
enter
je
or
pop
jl
mov
filds
imul
shll
xor
xchg
add
and
mov
mov
mov
and
lods
enter
shrl
imul
dec
add
flds
push
xchg
sbb
push
jns
pushf
jno
sahf
fwait
decb
hlt
jno
pop
cmc
adc
jge
rorb
add
xchg
push
mov
insl
insb
mov
test
sub
dec
data16
fnsave
inc
mov
mov
sahf
loop
popa
cld
push
imul
lods
xlat
in
pushf
add
jle
pop
je
enter
dec
add
bound
and
cli
test
sarb
dec
movsl
aaa
ljmp
and
das
dec
fadds
pop
xchg
pop
mov
mov
adc
mov
jbe
and
movsb
and
int
mov
sub
dec
iret
inc
push
fisubrl
and
jmp
dec
push
les
addr16
push
popa
mov
pop
daa
xor
in
push
adc
test
mov
les
inc
push
lret
fdivr
rep
xchg
or
or
xor
data16
pop
mov
pop
sub
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
pushf
mov
push
jmp
bound
mov
push
hlt
loope
push
enter
mov
inc
and
mov
rcll
mov
inc
iret
mov
lock
sahf
rorb
pop
xlat
jle
lcall
test
out
cmp
jne
aad
lcall
mov
ret
in
lcall
shll
shll
push
aam
popf
mov
aad
push
inc
ds
mov
popf
dec
xchg
test
cmpsb
repz
mov
xrelease
and
mov
xchg
pop
push
out
dec
inc
pop
inc
outsb
cmp
adc
sbb
aam
inc
inc
xor
jmp
imul
push
scas
jge
cmc
jb
aad
or
in
mov
cmc
cli
mov
mov
mov
cmp
movntps
xchg
pop
je
mov
imul
and
cwtl
push
jne
or
mov
lods
nop
mov
add
jl
pop
mov
inc
cld
xchg
jecxz
sti
and
fildll
or
lcall
flds
dec
push
dec
sub
divb
push
mov
xor
xor
or
push
aad
movsb
out
cli
xchg
sub
push
add
xchg
mov
sub
lret
adc
jns
scas
aas
jp
inc
pop
ret
xchg
lods
je
mov
sub
fcoml
sub
jbe
andb
mov
and
jl
loop
cmp
scas
data16
mov
pop
ljmp
jae
shrb
lods
das
push
hlt
daa
sbb
cmp
test
xchg
xor
cmp
xor
mov
push
or
les
outsl
rcrl
sbb
dec
pop
or
and
push
test
lods
mov
in
push
subb
and
mov
lock
xchg
fstps
std
cmpsl
or
fnstsw
std
js
out
mov
fisttps
sub
and
cmp
test
cmc
es
jb
out
pop
cltd
fs
dec
cld
xor
movsl
fsubl
insb
sub
repz
add
mov
jno
mov
pop
lcall
push
mov
out
lret
imull
clc
icebp
xchg
push
jle
movsb
arpl
sbb
cmp
jnp
mov
lods
pop
fsubrs
outsb
add
inc
mov
push
and
sub
sbb
sar
lcall
push
lret
adc
mov
stc
xor
push
or
push
pop
add
push
mov
dec
dec
mov
xchg
add
xor
sbb
or
jle
mov
outsl
jg
push
repnz
or
mov
bound
cmp
daa
add
add
mov
and
mov
and
mov
cwtl
loop
je
push
jge
fcompl
pusha
add
lock
push
ljmp
rcll
mov
lret
cmp
ret
cs
jl
in
pop
ds
iret
hlt
out
in
ja
push
push
fildll
pop
movsl
loopne
fcmovb
mov
mov
fiadds
shl
fcompl
movsl
repnz
lods
push
in
jno
inc
mov
into
push
push
adc
xor
and
add
inc
or
push
iret
sub
sbb
pusha
push
mov
mov
xchg
cmpsb
add
and
out
xchg
in
sub
cmp
aaa
repz
cmc
cltd
mov
jae
jbe
call
mov
js
push
aaa
xchg
mov
add
loopne
stc
rclb
imul
pop
pop
jo
inc
pop
fisubrl
popa
fisubl
jl
dec
add
mov
aaa
xchg
xor
cmpsb
lret
test
xor
out
jmp
cmpl
xchg
lods
rolb
stos
mov
add
insb
adc
dec
cmp
adc
cmp
notb
inc
or
sub
jmp
lcall
adcl
add
cmp
cli
rcll
mov
js
cmc
daa
sti
push
clc
or
ss
mov
lds
jge
add
add
fwait
shl
shrl
sub
into
filds
jle
jp
das
xchg
aaa
fdivl
repnz
jb
mov
inc
pushf
clc
std
or
aas
nop
insb
lods
lods
pushf
aas
mov
daa
inc
call
test
mov
push
jo
mov
lahf
or
and
xchg
lea
aam
inc
dec
test
mov
decl
test
sbb
and
xchg
dec
push
pushf
cmp
cltd
imul
pop
daa
push
xor
cli
add
cmp
mov
scas
xchg
push
lods
and
sub
les
add
jl
xchg
and
push
sti
hlt
nop
xchg
fisttpl
imul
push
and
adc
stc
neg
mov
popf
push
add
dec
mov
mov
nop
sbb
adc
rolb
cltd
clc
aas
jb
dec
out
fildll
movsl
fbld
and
ret
push
mov
xchg
loopne
daa
push
hlt
jbe
jne
mov
mov
cmpsb
add
dec
lret
or
cmpsl
lcall
inc
aas
inc
jmp
shll
pop
out
cs
mov
imul
mov
fwait
inc
push
xor
lods
jle
push
mov
mov
jb
add
lahf
cmc
ds
das
test
dec
dec
and
mov
add
push
in
nop
sahf
xor
jg
mov
pop
out
push
xchg
inc
jne
push
test
std
xor
nop
rol
push
repz
sub
sub
jnp
or
xlat
andl
js
add
or
jae
jnp
gs
loopne
jne
addl
sbb
add
ds
mov
push
aaa
fnsave
sub
or
mov
sub
pop
xor
ljmp
loop
adc
ret
mov
shlb
inc
push
and
sub
cmp
insl
jnp
xorb
adc
es
lock
ja
movsl
lea
mov
add
ss
push
rcrb
test
mov
fists
pushf
adc
bound
mov
dec
dec
dec
mov
or
xor
insb
and
les
cmp
test
cs
and
cmp
je
lock
insl
fstl
jmp
or
int
cltd
jne
adc
std
decb
jae
popa
lahf
in
es
scas
and
fnsave
daa
lock
xor
mov
andb
sbb
push
addr16
and
push
jb
data16
adc
or
cwtl
jge
or
or
xor
push
xchg
xlat
test
or
mov
push
sti
aad
cld
cmp
adc
mov
xchg
insl
mov
mov
xor
mov
mov
or
inc
xor
adc
adc
sbb
push
sbb
out
jmp
cli
gs
xchg
scas
dec
xor
roll
dec
and
mov
add
cmp
nop
or
xchg
cld
test
mov
mov
dec
push
mov
loopne
xchg
lret
shll
popf
inc
add
loopne
iret
and
loop
je
lock
std
adc
cmc
shll
mov
fcmovnbe
pop
push
test
add
or
dec
pop
ret
mov
filds
pop
in
testl
test
jne
fwait
pop
inc
add
in
jge
sarl
xor
scas
jp
or
push
sbb
stc
adc
add
scas
mov
pop
rcll
mov
cld
pop
data16
hlt
dec
xchg
dec
stc
add
add
xor
mov
js
and
sub
dec
shlb
cmp
ffree
or
mov
test
insb
popa
sub
daa
push
xchg
fdivl
test
mov
lret
sub
jae
mov
movsl
pop
incb
pop
nop
nop
add
aas
adc
xor
push
clc
fwait
stos
scas
xchg
hlt
mov
lret
mov
inc
jne
mov
push
xor
fstl
jb
repnz
mov
pushf
ficoml
andl
clc
leave
and
insl
jp
inc
add
fidivs
mov
jle
jb
or
imul
xlat
push
jb
ss
ds
lea
dec
push
cmpsl
loopne
ffree
jnp
pop
xchg
stos
xor
dec
shlb
loopne
imul
stc
aad
cmp
jnp
in
je
not
lret
ret
mov
pushf
or
das
add
sbb
sbb
sub
xchg
dec
jg
out
movsl
xor
push
add
jo
imull
test
xchg
jg
pop
loopne
fstl
leave
push
ret
ficoml
icebp
scas
aam
adc
mov
sub
shl
jbe
jmp
cmpsl
mov
rcr
enter
mov
roll
dec
cmp
dec
sti
cmp
cmp
inc
dec
repz
inc
push
mov
sub
xchg
test
ds
subl
das
mov
add
xchg
bound
jp
pop
out
das
mov
xchg
dec
scas
icebp
and
cmpb
adc
aad
ss
pushf
icebp
inc
sbb
mov
fdivrl
lods
pop
dec
xchg
js
insl
jge
mov
pop
scas
mov
mov
mov
andl
cmpl
push
cltd
xor
xchg
jecxz
pusha
test
test
fidivl
or
test
and
iret
inc
jb
mov
aas
mov
adc
adc
jecxz
pop
pop
and
ret
dec
nop
sub
pop
clc
sub
addr16
jae
aas
xchg
test
nop
int
dec
rorb
xchg
jmp
xor
lods
add
inc
push
aaa
push
stos
cmp
xor
jle
out
jnp
push
cmpsb
loop
inc
mov
adc
or
pop
dec
pop
jl
insb
int
pushf
pop
or
push
dec
repnz
inc
cmpsb
hlt
lods
mov
cmp
testb
shl
jns
addr16
rcr
aas
pop
jb
mov
mov
fbld
xor
xchg
sub
lods
lret
xor
movsl
and
dec
test
cmp
cmpsb
cmc
cmp
imulb
in
ljmp
fs
mov
or
js
enter
jg
xchg
sbb
jge
addr16
inc
clc
add
inc
sub
push
in
ficoms
testb
pop
iret
adc
xor
jne
adc
pop
inc
xor
or
mov
je
call
sti
sub
cli
mov
adc
lea
mov
jge
jne
adc
or
and
das
les
push
mov
ret
sub
add
ficomps
push
cmp
push
jnp
pop
scas
call
inc
pop
and
cmpb
add
xchg
lods
push
cmc
mov
rcrb
cmp
add
shrl
idivb
xor
mov
mov
jecxz
adc
pop
scas
mov
mov
push
cmpsb
nop
mov
pop
aaa
das
or
insl
push
sub
sbb
fnstcw
out
jns
sar
jmp
movsb
and
shll
mov
mov
xchg
ljmp
stos
iret
addb
inc
sub
xorb
stc
sbb
test
mov
gs
sbb
fcomps
out
and
cmpsl
pop
mov
push
push
cmp
repz
rcll
sbb
testb
push
dec
ret
stos
pushf
scas
test
ljmp
mov
popf
mov
sbb
pop
cmpsl
mov
xchg
sub
cmpsl
test
lahf
adc
xchg
mov
xor
xor
cs
add
rorb
jle
or
xor
add
daa
rclb
cmp
cmp
ror
lds
mov
xor
xchg
clc
add
lret
inc
ret
insl
dec
repnz
test
insb
jecxz
stc
dec
add
outsb
dec
pushf
cmpsb
out
bound
in
cwtl
mov
lcall
mov
repnz
push
dec
dec
addr16
push
and
sbb
sbb
scas
dec
lret
clc
scas
test
jo
jae
cli
mov
cld
xor
sbb
je
add
gs
outsb
pop
shl
popf
cmpsl
cmp
outsb
adc
jno
test
jmp
pop
shlb
cwtl
int3
push
fwait
dec
xor
into
frstor
mov
pusha
or
xchg
jmp
or
xor
scas
rcrl
push
or
add
inc
movsb
push
imul
or
sbb
imul
repnz
aas
cld
aam
js
sub
aaa
daa
cmp
dec
stos
mov
decb
ds
sbb
push
cmp
cmp
loope
cs
or
sbb
inc
lcall
and
stos
push
lret
jp
icebp
jbe
repnz
sbb
jl
add
fstl
mov
cmovge
cmpsl
adcl
xor
pusha
test
jp
dec
and
loope
adc
sub
push
dec
imul
cmpsl
xchg
pop
push
mov
sub
or
dec
es
jl
mov
and
jmp
movsb
es
cltd
mov
mov
mov
mov
jle
sbb
push
shll
fidivl
pop
sub
stos
inc
fbstp
int3
insl
out
lds
or
pop
ss
mov
pop
popa
icebp
push
inc
inc
adc
add
or
loopne
cmpsb
push
pop
in
sub
jno
push
jns
dec
pop
add
lahf
push
inc
xchg
pop
inc
psubusb
out
mov
out
in
and
std
xor
sarb
in
cmp
lods
sub
pop
xor
mov
pop
xor
test
shl
sbb
mov
sbb
rcrb
repnz
push
adc
xchg
mov
fs
cli
rorl
push
sub
addr16
call
push
negl
mov
xor
mov
aam
push
xchg
jmp
out
add
mov
pop
into
ret
outsl
xchg
sub
inc
inc
movsb
jae
xor
mov
add
in
fabs
jge
std
mov
out
push
inc
lcall
cmpsl
inc
jl
loope
stos
xchg
loop
aas
mov
mov
xchg
lea
pop
mov
inc
adc
cli
xchg
cmpsl
mov
enter
pop
inc
cmpsb
mov
call
cmp
out
jge
scas
lcall
outsb
nop
adc
xchg
cmpl
inc
ss
cmp
push
mov
sub
push
scas
cmc
lds
jle
mov
or
in
or
out
pop
mov
negl
cltd
sti
dec
aam
xchg
push
ficoms
ss
cmp
or
lds
and
pop
lcall
adc
pop
dec
jns
loopne
cs
test
xchg
xchg
inc
push
aas
xor
fwait
stos
jo
cmp
mov
mov
shrb
jle
pop
cmc
push
xchg
or
jnp
rcll
cmp
sbb
aad
xor
dec
clc
scas
inc
or
cmp
mov
adc
push
fwait
mov
xchg
cmp
push
fs
sbb
loope
out
leave
pop
adc
int3
push
jae
in
jnp
flds
jae
sbb
movsl
aam
or
mov
adc
cmpsl
adc
and
pop
imul
push
push
jo
fucomi
test
stos
fadds
xchg
pusha
aaa
das
sub
js
aas
jb
out
sbb
sti
pop
sbb
dec
dec
loopne
mov
repnz
mov
cmpsl
xor
es
repz
jae
jecxz
mov
jae
and
loop
enter
pop
lret
xchg
cmp
cltd
aad
jno
stos
sti
jns
adc
mov
out
sbb
sub
xor
and
lcall
mov
int3
popa
add
test
pop
adc
dec
mov
cmp
sahf
icebp
fwait
in
push
in
push
jecxz
ret
dec
popf
dec
cmpsl
and
or
jbe
int
sub
orl
popf
mov
pusha
pushf
ljmp
dec
mov
push
loope
push
leave
aad
push
jg
cltd
call
xor
lds
or
jp
adc
out
and
add
std
mov
sub
jbe
clc
jge
fsubrs
jl
xlat
sub
into
jns
jnp
rcrl
mov
mov
imul
fnstsw
dec
pop
arpl
adc
jns
dec
cmp
into
in
cwtl
rol
cmpsb
inc
jmp
and
notb
dec
mov
xor
in
iret
xchg
out
push
pop
push
fdivrs
hlt
or
sbb
xor
push
popf
xchg
pusha
ss
and
pop
lods
je
pop
mov
imul
pop
lcall
pushf
xchg
repnz
lods
out
out
lods
mov
dec
add
sub
test
cwtl
xor
xchg
test
std
sbb
or
pop
inc
xchg
sbb
call
or
jb
addl
repnz
pusha
incb
mov
enter
mov
xchg
icebp
repz
ret
outsl
roll
fists
aaa
addr16
jge
fsts
inc
int3
add
dec
sub
push
fdivl
and
cmpsl
jmp
andb
fldl
pop
cmp
pop
jns
jo
outsb
jmp
add
loop
xchg
into
nop
jmp
mov
fmulp
mov
in
xorb
and
sbb
mov
cmpl
loopne
push
pop
test
repz
arpl
ss
mov
push
aas
ror
xor
bound
int3
mov
aas
mov
insb
pop
inc
addr16
and
sbb
xor
pop
or
pop
fwait
sub
inc
sbb
xchg
inc
sub
push
lret
jae
adc
dec
movsb
dec
inc
cltd
adc
jb
adc
and
sub
cld
add
inc
xchg
mov
leavew
mov
sahf
mov
jmp
ret
testb
shlb
stc
push
cmc
or
xchg
and
push
sbb
push
and
cmp
stc
sbb
inc
out
dec
cltd
cwtl
inc
pop
test
cmp
sarl
mov
aam
test
data16
mov
adc
inc
push
cmpsb
shr
popf
add
gs
loop
int
stos
loope
sbbl
push
aam
outsl
sub
inc
dec
cmpsl
pop
push
popf
leave
loop
cmpb
jne
mov
hlt
hlt
adc
dec
fstpl
test
sub
adc
loop
cmp
sti
jecxz
push
scas
ss
sub
lahf
jg
inc
das
repz
hlt
sub
adc
xchg
push
negl
jl
push
pop
dec
lahf
and
popl
mov
cmp
aam
je
test
pop
movsl
outsl
cmpsl
xor
fidivl
inc
dec
jne
mov
or
sbb
mov
cli
pop
fisttpl
push
hlt
xchg
ljmp
inc
mov
or
ja
daa
push
lock
and
leave
fisubrl
mov
sti
sbb
pop
mov
mov
shr
addr16
cmp
sub
sub
movsb
inc
dec
cmp
mov
aaa
cld
jnp
push
clc
test
sbb
das
out
pop
sahf
mov
xor
or
orb
mov
cmp
add
mov
mov
push
xchg
sbbb
nop
jbe
out
inc
pop
push
sti
lock
cmp
cwtl
ror
rclb
mov
lods
push
jno
out
push
sub
mov
add
add
scas
and
imul
insb
and
aaa
int3
or
stc
push
cli
inc
js
mov
out
sti
push
add
push
out
and
mov
sub
rcl
repz
push
out
movsb
sbb
jp
ss
leave
push
ret
push
and
sbbl
mov
daa
push
pop
aas
dec
ljmp
repnz
inc
mov
out
xchg
sbb
pusha
sbb
scas
add
cli
pop
enter
orb
js
mov
in
stos
scas
lahf
mov
icebp
push
lea
push
in
faddl
cmp
sub
aad
mov
xchg
add
pop
jns
or
dec
inc
push
or
mov
sbb
sarb
pusha
sbbl
sbb
mov
pop
or
push
sahf
jns
ror
les
fcoms
lret
and
icebp
mov
aam
rcr
movl
call
pop
xchg
lea
bnd
dec
movsl
fistl
out
in
loopne
mov
dec
sbb
lret
lock
in
stos
dec
jmp
jns
mov
sub
xchg
or
mov
aam
sbb
arpl
push
xor
cmp
push
test
mov
fs
pop
movsl
lea
in
bound
popf
movsb
pop
pop
mov
xchg
fdivl
xor
lds
cmp
jns
in
pop
xor
sub
aam
push
mov
test
inc
das
fwait
les
in
sti
lea
xlat
lret
sbb
push
sub
jl
lods
push
cmp
enter
inc
lds
xchg
fdivl
adc
xchg
cld
cmp
mov
pop
push
dec
aas
sbbl
mov
push
out
mov
adc
fnstsw
cmp
test
sarl
lahf
dec
lds
push
test
push
dec
mov
out
js
test
push
mov
cmp
rolb
mov
int3
and
xlat
push
push
lds
xchg
lcall
adc
fldt
xchg
mov
ja
movsb
and
cmpsb
inc
xchg
je
xchg
inc
testl
fadds
cmc
mov
mov
xchg
push
bnd
pushl
sbb
aad
jmp
xor
mov
inc
sahf
scas
fwait
andb
jl
dec
dec
inc
mov
mov
sbb
pop
clc
and
je
sbb
adc
mov
enter
inc
call
mov
dec
mov
sub
pop
js
aad
nop
daa
stc
sbb
add
test
dec
mov
test
movsb
int
mov
xchg
stc
adc
sub
rcrb
sub
mov
daa
jmp
cmp
push
jns
dec
add
dec
mov
dec
cmpsl
jo
jge
std
jp
push
xchg
ret
jne
sub
inc
lcall
sbb
add
std
fs
out
sbb
rclb
rclb
out
mov
mov
sbb
xchg
mov
into
cs
and
xlat
sar
and
ljmp
sub
push
xchg
ret
inc
fbstp
in
ja
mov
mov
out
dec
or
mov
jge
xchg
mov
xor
fs
in
int3
lret
in
repnz
inc
pop
js
icebp
mov
xchg
je
lods
mov
sub
hlt
loope
sbb
fldcw
das
jmp
inc
cli
push
jne
or
test
cmpsb
mov
mov
lods
xchg
add
aaa
jns
mov
bound
and
lea
mov
addr16
mov
inc
mov
or
xchg
push
out
xor
push
js
mov
cli
test
mov
adc
insl
xchg
sub
cmp
or
mov
aam
mov
mov
and
xchg
mov
mov
mov
push
push
into
inc
popa
imul
inc
mov
xchg
daa
pop
mov
lock
aam
out
cmp
lcall
in
lret
mov
fsubs
push
pop
push
mov
loopne
push
or
in
cmpsb
cwtl
sbb
xor
xchg
mov
imul
jne
mov
jmp
push
jle
ja
cmc
int
shlb
inc
inc
pushf
leave
jle
mov
xor
xlat
xor
repz
lret
movl
pop
push
scas
and
testl
sbb
jle
adc
into
sub
cltd
stc
jp
dec
adc
icebp
or
dec
jl
push
pop
aaa
or
cmc
aas
fcompl
fwait
shl
mov
sbb
mov
das
jl
fs
loopne
and
in
add
sub
push
pop
push
int3
aad
imul
lea
daa
pop
adc
bound
in
adc
mov
lret
ss
iret
push
rorb
shll
jecxz
imul
ror
cmp
popf
xor
dec
cmp
or
or
pushf
push
ja
cwtl
std
mov
mov
xor
inc
stc
xor
xor
cs
orl
inc
testl
inc
adc
cmp
pop
mov
roll
mov
mov
stos
add
frstor
mov
pop
cli
dec
mov
pop
fmull
mov
data16
pop
movsl
in
mov
int3
jp
sbb
xor
jl
pop
inc
imul
jg
dec
int
or
or
mov
pop
push
mov
test
jb
cld
pop
xor
adc
lea
xorl
lods
mov
ficoml
in
cwtl
xchg
movd
xor
jns
in
push
loop
daa
sub
xchg
cmpsb
mov
imul
jnp
ss
xchg
int3
xor
and
fildl
cmp
mov
lcall
pop
std
out
cmp
lods
mov
adc
jns
xchg
add
add
fnstcw
sub
xor
adc
clc
push
lds
or
xlat
cltd
pop
sub
add
xor
lea
or
inc
scas
dec
aas
xchg
dec
into
sub
lret
xchg
mov
add
dec
mov
jmp
dec
mov
jae
std
xor
enter
pop
js
imul
fmuls
mov
sti
data16
repnz
lock
jmp
cld
xor
call
lea
add
xchg
es
test
jl
add
fcmovne
mov
addr16
dec
push
cli
push
sub
aad
inc
hlt
sahf
jg
loope
cwtl
push
push
lret
mov
fwait
pop
in
sbbl
decl
xchg
dec
pop
pop
addr16
loopne
shrl
mov
xchg
mov
push
scas
test
push
xor
jo
negb
test
pop
pop
inc
or
rolb
jle
mov
insl
notl
and
pop
push
sar
sbb
xchg
stos
sub
into
cs
mov
sub
mov
nop
sbb
mov
jg
hlt
ret
test
scas
pop
mov
leave
inc
mov
fcomp
into
push
into
push
loopne
clc
adc
sarl
mov
out
roll
jge
push
adc
pop
cmp
mov
sbb
pushf
dec
mov
dec
lahf
sbb
adc
sarl
movsb
loope
push
inc
push
mov
dec
bound
add
adc
scas
cltd
mov
pop
leave
shl
xchg
setns
mov
pop
nop
ja
pop
into
or
testb
aad
stos
aad
inc
in
clc
fsubl
icebp
pop
adc
jp
lods
insl
and
divb
ljmp
inc
add
and
cmp
mov
cli
or
icebp
inc
inc
mov
jle
adc
mov
jns
cmc
insb
nop
pop
sbb
adc
sbb
mov
addr16
ja
xor
gs
mov
inc
or
lea
fists
lds
or
cmp
sub
into
xor
sbb
ret
std
js
rcrb
inc
out
movsl
pop
mov
or
xor
mov
mov
push
xor
andb
loopne
jecxz
rorb
jnp
cmp
add
test
add
add
cmc
add
ret
add
or
or
sub
xchg
add
out
dec
jmp
neg
xchg
imul
and
pop
lsl
pop
movsl
sub
cwtl
movsb
arpl
push
adc
mov
scas
dec
sbb
stos
mov
mov
mov
xchg
add
or
xchg
cmpb
loope
les
in
icebp
loopne
paddq
inc
popa
mov
jno
cmpsl
aam
aam
dec
mov
movsl
sub
enter
dec
push
sbb
mov
push
pushf
dec
xchg
fisubl
jae
cmp
add
in
dec
mov
cmpsl
cmc
sub
std
push
outsb
lahf
aad
lds
or
fsubs
cmp
sub
out
adc
fildll
nop
fildll
loope
loope
insl
push
jmp
shll
jmp
mov
inc
push
lods
sbb
mov
mov
lods
xchg
jle
or
inc
lea
fs
test
mov
sub
cs
dec
lret
sti
pop
mov
mov
jp
lods
xor
xor
int
les
outsl
cld
addr16
mov
test
mov
push
rcl
mov
xchg
in
repnz
test
adc
mov
mov
mov
call
in
xor
cmp
mov
xor
outsl
enter
inc
test
mov
pop
out
pop
pop
lds
push
pusha
add
or
pop
push
lods
push
cltd
mov
dec
outsl
sbb
jns
repnz
add
les
push
mov
push
cmp
jmp
popf
and
and
into
shll
jo
aas
cmpsl
fwait
sub
add
daa
xor
sarl
lock
pop
in
sub
mov
add
cli
xchg
sbb
dec
add
push
pop
jbe
jns
addb
lret
mov
cwtl
push
xor
fcmovb
push
pushf
dec
lret
push
xor
mov
mov
mov
movsb
sbb
sti
jecxz
in
popa
jae
lret
into
mov
xchg
in
cmp
xor
lret
call
or
ret
mov
sub
ret
icebp
ljmp
iret
out
es
add
cli
jecxz
or
rcrb
cli
xchg
xchg
test
jl
in
les
mov
cmp
clc
iret
rolb
pop
push
and
outsb
outsb
jns
sub
push
push
cmc
mov
xor
lods
and
dec
or
into
stc
pop
fidivrs
sbb
or
pusha
into
daa
xchg
dec
daa
cmc
in
cmp
add
mov
cltd
je
rcrl
inc
fists
jl
out
ffree
aam
mov
dec
inc
cmp
mov
shll
xchg
pop
mov
test
or
xor
push
lcall
lahf
dec
lds
fmull
inc
pop
out
cmpsl
xlat
lret
mov
dec
adcb
inc
pop
jge
movd
jmp
fcomps
outsl
cmpsb
push
pushf
nop
les
xchg
mov
push
int
dec
insl
cwtl
lahf
cld
data16
adc
and
fcompl
inc
pop
sbb
pop
repnz
stos
loop
add
ljmp
out
out
cmp
outsb
jg
sub
dec
js
push
mov
fdivp
rcll
popl
sbbl
iret
mov
xor
mov
add
int
jno
pop
push
ljmp
roll
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
inc
popa
rcrb
outsl
xor
mov
jae
leave
jg
sbbb
lret
inc
arpl
jbe
enter
cwtl
mov
daa
ficomps
dec
aad
xor
jno
add
inc
fwait
jle
jne
sti
jp
sbb
es
movsb
orb
loope
out
jo
stos
push
pop
cmc
or
push
cmp
roll
push
and
cmpsb
nop
repnz
leave
and
ja
aaa
in
sbb
into
fldcw
cmp
cld
fnsave
shrl
cmpsb
mov
xor
xor
ljmp
xchg
xchg
out
pusha
ret
inc
or
jno
hlt
stos
filds
mov
jns
add
in
xor
and
cmp
pop
dec
xor
leave
jbe
push
je
cmpsl
cmp
inc
dec
inc
in
in
xchg
je
sahf
adc
out
loope
fisubrl
lret
aaa
pop
lods
add
arpl
inc
loop
es
in
int3
mov
iret
push
lods
sub
mov
sub
mov
mov
clc
and
sub
and
push
ret
or
iret
mov
jg
cwtl
rorl
mov
xor
and
aad
and
shll
jecxz
and
sbb
mov
lock
aam
push
inc
push
mov
lret
dec
xor
out
sbb
or
ret
add
int3
push
aad
cmp
adc
lret
jne
sub
sbb
pavgw
insb
jmp
lea
jmp
adc
addr16
fisubl
and
jecxz
push
pop
lock
ljmp
inc
sti
imul
into
clc
aad
movl
cmp
push
xchg
push
mov
test
add
mov
ja
and
xlat
imul
or
dec
xchg
scas
in
roll
stos
fidivrs
popa
fwait
pusha
mov
xor
cmp
mov
aas
add
adc
cmp
stc
popa
xor
sbb
push
push
dec
lcall
enter
inc
dec
test
out
out
jmp
je
mov
xor
jl
mov
mov
pop
js
mov
sub
push
cmp
lea
sti
mov
mov
mov
enter
sbb
sub
cmp
inc
jmp
scas
addr16
fs
mov
pop
cld
inc
inc
cmc
sahf
mov
pop
scas
pop
sub
orl
cld
sahf
adc
scas
insb
jl
in
mov
lret
xchg
in
scas
cli
adc
xor
pop
cmp
push
gs
shrl
push
imul
push
stos
in
cmpsl
mov
pop
adc
fldenv
test
and
push
inc
sahf
dec
xchg
add
ss
dec
shrb
push
mov
sub
mov
mov
xchg
clc
mov
call
sbb
mov
and
incb
xchg
cmp
add
pop
mov
lret
jp
or
xchg
and
mov
call
cmc
out
aam
imul
rdtsc
int
xchg
out
cltd
lods
sub
enterw
push
mov
iret
cmpsb
repz
ja
leave
fdiv
stos
jae
mov
dec
fcomps
and
iret
repnz
adc
xor
jecxz
lret
out
add
ljmp
insb
xchg
adc
push
adc
sbb
leave
mov
xor
leave
nop
mov
and
sbb
push
push
ljmp
je
pop
mov
mov
fdivs
inc
leave
movsb
push
inc
mov
cmpsb
ja
mov
inc
push
cmpl
and
lock
inc
jp
je
int3
mov
cmc
and
mov
daa
scas
daa
lahf
arpl
lock
push
mov
adc
or
xchg
mov
aad
mov
cmp
xor
xchg
pop
ja
enter
dec
stc
mov
adc
ljmp
fs
add
adc
cwtl
adc
idiv
cmp
into
and
jle
sar
pop
xchg
jmp
jl
sub
jnp
ret
jle
test
mov
pop
out
inc
mov
pushf
add
ljmp
mov
jg
jo
fwait
cltd
dec
or
addr16
mov
and
dec
inc
or
stc
out
pop
mov
loop
or
adc
mov
sub
stos
lcall
mov
inc
lods
add
push
mov
xchg
pop
leave
dec
syscall
stos
mov
xchg
insb
testb
xor
es
xor
popf
test
inc
es
iret
pmulhw
imul
inc
shr
or
jns
push
pop
push
sub
leave
cmp
test
xor
pop
cs
jge
xchg
hlt
xor
and
adc
mov
mov
leave
mov
dec
fsts
cwtl
or
arpl
xchg
or
mulb
and
ss
cmpsl
xor
sbb
into
lret
dec
xchg
xor
lahf
pop
lcall
inc
hlt
push
cmpsl
xor
fadds
ss
daa
mov
and
jb
sub
jno
dec
subb
fs
adc
imul
dec
jbe
sub
jo
xchg
push
mov
xchg
jl
jle
adc
es
repz
clc
mov
std
lds
mov
xchg
lahf
xor
inc
xchg
mov
jnp
out
inc
leave
pusha
in
int
add
mov
push
and
aas
out
sti
pushw
dec
mov
cmp
test
pop
shll
dec
pop
mov
loope
js
pop
popa
cs
movsl
xchg
ss
lds
ds
push
xlat
mov
sub
addb
das
negb
or
popa
jle
mov
push
pop
push
mov
lock
int3
in
into
inc
sub
call
dec
adc
xchg
push
das
lock
xchg
xor
fnstsw
sahf
ja
or
mov
stc
jle
dec
aam
test
mov
or
xchg
mov
mov
lret
in
xlat
aad
scas
cmp
fsubrp
dec
add
dec
in
sub
sbb
jge
cmp
inc
stos
popf
xchg
pop
leave
xor
push
jne
stos
insb
movsl
js
cmp
test
out
out
fwait
and
int3
ljmp
leave
xchg
pop
insl
ds
jo
inc
mov
and
jle
lea
mov
jne
js
jnp
mov
adc
bound
jae
push
ds
cli
incl
negl
rcrl
arpl
pusha
sub
aam
and
mov
rorl
sub
lods
push
mov
scas
adc
cmp
and
push
ret
xor
jecxz
adc
es
mov
mov
stos
cmpsl
xor
cmpsl
negb
cld
testl
add
sti
scas
or
cmpl
shr
daa
dec
dec
sub
cmp
push
inc
fstl
in
lret
sub
fnstsw
repnz
sti
outsb
ficoms
adc
mov
mov
cmp
push
rorl
sahf
sub
dec
push
adc
mov
dec
and
call
xor
inc
adc
sahf
dec
sbb
xor
jg
sbb
and
aad
inc
lahf
inc
cmc
dec
and
or
fdivr
rcr
mov
mov
jo
push
or
mov
xor
std
sbb
or
pop
inc
xchg
ror
lds
movsl
test
int
sbb
mov
daa
mov
sbb
or
jnp
push
mov
cmc
push
sbb
fcompl
jmp
sbb
jae
loop
sbb
cltd
dec
jbe
subl
sbb
mov
jne
pop
pop
icebp
popa
jae
xchg
push
pushf
addb
mov
test
mov
in
adc
cltd
xchg
jp
int3
mov
jle
insb
bound
jbe
xchg
negl
xor
mov
sbb
jbe
aad
xchg
cmpb
xchg
pop
hlt
pusha
test
adc
xchg
mov
mov
shl
and
mov
testb
cmp
jns
fwait
in
mov
xchg
cmp
xchg
sahf
adc
push
test
gs
pusha
outsl
push
dec
mov
dec
test
jb
mov
out
xchg
mov
lods
add
mov
sub
inc
insb
iret
push
fwait
mov
outsb
das
rcl
xor
dec
pop
adc
aam
sub
daa
pop
mov
lahf
les
mov
out
cs
cmp
push
push
in
and
stos
push
std
dec
testb
movsb
std
nop
cmp
js
adc
adc
add
xchg
test
xchg
add
push
xchg
repnz
sub
fcompl
mov
cmp
xor
adc
in
int3
lahf
or
pop
jp
inc
stos
roll
xchg
cmc
lret
iret
adc
push
and
pop
or
std
sahf
out
dec
cltd
fidivrs
push
cmp
sbb
mov
xchg
gs
repnz
xor
aas
dec
pushf
js
pop
lret
inc
stos
imul
jb
mov
das
loopne
xor
cwtl
sbb
leave
xlat
repnz
fisubrs
lods
add
mul
icebp
xor
je
sbb
ror
std
and
rcrl
inc
aam
loop
leave
cltd
sbb
std
mov
push
add
nop
aam
push
daa
xor
mov
dec
sbb
dec
jl
push
lods
inc
cmp
mov
fmul
aam
stos
sbb
and
dec
stos
mov
pushf
dec
pop
xor
jnp
mov
lret
xor
xor
mov
jle
adc
mov
movsb
mov
pusha
sbb
cmp
loopne
xchg
push
mov
out
and
pushf
jno
fcompl
and
scas
pop
addr16
ds
sub
sub
lods
jmp
stc
xchg
push
insb
ljmp
je
mov
sarb
mov
repz
les
lods
and
and
jecxz
xchg
gs
mov
fucomi
mov
shrl
pop
or
mov
sbb
push
add
js
mov
ljmp
mov
mov
scas
bound
xchg
bound
cmp
and
and
mov
stos
cmp
jmp
xchg
cmp
adc
lahf
pop
inc
xor
and
push
jg
or
jmp
push
xchg
test
inc
mov
xlat
lea
add
mov
repz
in
inc
xchg
push
iret
adc
xchg
pushf
add
roll
adc
mov
jnp
sbb
ss
jbe
std
cld
mov
mov
lods
push
int3
mov
adc
xor
cmpsl
scas
leave
mov
insb
hlt
addl
jno
je
int3
in
lahf
xor
mov
push
imul
xchg
jl
mov
mov
loop
outsl
inc
and
xchg
repz
add
dec
adc
setae
or
mov
aas
mov
repnz
rol
add
ss
mov
cmpsb
shll
ds
mov
insl
cmp
dec
lret
pop
xor
sbb
fcomp
cmpsl
mov
sub
es
sti
pusha
push
idivb
insl
insb
aaa
mov
incb
std
xchg
jp
in
sub
sti
fwait
push
xchg
lcall
push
ds
push
fnop
and
in
pusha
dec
and
loopne
mov
icebp
enter
push
pushf
jle
mov
into
or
sahf
xchg
add
sub
cltd
add
xorl
js
cmp
hlt
inc
mov
or
das
int3
mov
mov
sub
dec
int
jmp
sbb
jge
and
lret
and
add
xchg
in
out
andb
push
xor
lahf
add
xlat
inc
enter
bound
add
scas
adc
movsb
pop
add
xchg
lret
sbbb
stos
scas
mov
call
xchg
dec
shll
arpl
add
inc
jnp
jne
fdivrl
cmpsl
push
lret
and
mov
rcrl
xor
lds
lock
add
pop
sbb
or
lods
mov
movsl
arpl
add
sbb
mov
fists
dec
and
sbb
mov
pop
loope
push
imul
fimull
clc
out
xchg
sti
mov
add
mov
mov
mov
xor
lcall
aaa
add
iret
mov
jno
push
xchg
mov
lcall
lahf
mov
inc
xor
add
cmpl
notb
mov
cld
or
fmul
int3
sub
imul
outsl
in
cltd
ret
das
add
ret
or
insb
add
ds
mov
xor
shlb
cmp
pop
shlb
mov
or
pop
push
xchg
jp
std
sbbl
pop
scas
pop
or
mov
in
pop
test
cmp
sub
in
jg
fsub
xor
rol
daa
cmp
sbb
inc
inc
in
out
mov
mov
xchg
or
inc
jg
cmpsb
pop
fwait
pop
ret
int3
push
jge
cmc
loop
mov
and
push
sarl
xchg
xchg
mov
and
std
xchg
aad
add
pop
scas
xor
testb
ss
adc
mov
inc
or
push
rcrl
imul
pop
push
jecxz
mov
in
sbb
fistpl
add
pop
sbb
inc
lock
out
xor
cmp
add
jbe
sub
inc
sub
bound
leave
xor
and
mov
test
pusha
pop
or
or
pop
sti
repnz
jbe
popa
data16
xchg
adc
jbe
mov
xchg
sbb
in
jae
mov
sti
stc
push
aam
xchg
fnstcw
or
fiaddl
xchg
pop
icebp
sbb
mov
stc
dec
pop
test
inc
enter
les
hlt
scas
shr
and
lds
stc
mov
ljmp
in
stos
and
imul
aaa
jno
cmp
adc
test
mov
or
sub
jmp
dec
gs
fdivrl
mov
pop
mov
jmp
push
dec
add
out
inc
testl
cs
loope
lods
fwait
ret
sbb
xor
out
sub
adc
add
loope
push
sbb
scas
adc
pop
jae
in
adc
or
push
lahf
aas
idivl
pop
sub
adc
bound
sahf
xor
icebp
sub
hlt
jo,pt
lods
test
ljmp
out
push
and
repz
ja
mov
fwait
xchg
iret
or
and
les
xchg
sti
dec
sbb
cmpsl
xor
je
adc
dec
fstpt
loopne
dec
mov
js
xor
imul
pop
mov
inc
fcoms
push
jmp
sub
popa
and
dec
cli
in
pushf
add
adc
push
ret
cld
dec
sti
jecxz
mov
mov
imul
pop
pop
mov
mov
es
pop
sub
lahf
dec
or
jecxz
sahf
mov
sub
les
adc
push
jo
stc
jns
stos
mov
lods
pushf
hlt
xchg
shlb
lahf
inc
insl
push
cmp
test
cmpsb
scas
shrb
inc
jmp
xor
jg
rcrb
cmp
aaa
fstpt
add
frstor
loope
pop
test
jle
jecxz
inc
cmovge
mov
imul
or
ja
incb
push
lahf
push
fcoms
test
xchg
and
aam
movsl
out
cmp
test
stc
jecxz
push
inc
movsl
xchg
shlb
ror
and
push
iret
icebp
stos
sbb
mov
call
push
cli
sub
test
lds
pop
gs
xchg
loope
addr16
mov
xchg
loope
in
mov
mov
and
fstpl
pop
adc
fidivrl
popa
xchg
mov
lods
xor
fsubs
int
mov
inc
int3
jecxz
sbb
xchg
jno
fidivl
xor
adc
xor
xlat
out
das
push
daa
xor
dec
pop
dec
xor
mov
jg
mov
inc
lea
jmp
pop
mov
insb
insb
testb
dec
mov
inc
js
pop
sbb
cli
push
call
and
lcall
sbb
inc
mov
enter
pop
jo
jnp
mov
outsb
and
rorl
xchg
jno
xor
mov
je
out
dec
ljmp
arpl
insb
fsubs
cmc
subb
aaa
or
out
cmp
inc
sbb
fsubrs
mov
sub
js
cs
mov
in
int
jnp
jne
adcl
insl
repnz
or
or
push
mov
or
lea
mov
loopne
push
imul
loop
cwtl
ficoms
dec
test
ljmp
in
pop
je
sub
sbb
lods
aad
and
pop
cld
mov
out
andl
sbb
xor
fld
sahf
adc
std
scas
add
iret
jnp
or
sar
in
imul
adc
xchg
pusha
cld
mov
jle
aaa
daa
js
xor
and
cmc
add
iret
gs
popf
sub
pop
int
jecxz
test
fstpl
into
cmpsl
stc
pop
daa
test
dec
dec
xchg
adc
fmull
inc
andb
icebp
ljmp
mov
cs
push
sbb
aam
movsb
arpl
mov
std
mov
test
jl
in
dec
inc
push
lea
leave
popf
repnz
test
or
outsb
add
icebp
leave
sbb
inc
gs
adc
jmp
pop
jg
xchg
mov
or
int
or
lret
ror
cmpsl
iret
sbb
jno
popa
ret
inc
jmp
ljmp
mov
cld
mov
dec
fxch
fwait
xchg
push
cs
push
inc
in
dec
dec
mov
xor
adc
xorl
int3
pop
popa
or
iret
mov
ret
fwait
stc
mov
sbb
jge
ds
sbb
lahf
inc
shl
xor
dec
into
mov
lods
mov
outsb
arpl
ret
jge
xchg
push
sti
bound
jge
inc
cmp
subb
mov
mov
jle
repz
loop
mov
and
jge
ret
jg
stc
and
cmp
bnd
xchg
cmpsb
sbb
fsubrp
add
dec
decl
rcll
shr
pushf
mov
mov
jae
dec
out
cli
xchg
test
imul
imul
jbe
sub
push
mov
jl
adc
jb
in
nop
add
mov
movsl
popa
repnz
push
pop
and
cmp
incb
pop
inc
js
test
loope
enter
loope
fstpl
jg
dec
cmpsb
mov
test
in
add
mov
adc
xor
inc
addr16
clc
sbb
sbb
xor
lret
push
push
loopne
outsb
xor
fistpll
mov
cmpsb
jne
push
pop
fnstenv
add
jle
sub
jle
cmp
test
pop
shll
lcall
imul
lahf
inc
adc
or
not
addb
jo
cmp
jmp
fdivl
leave
xchg
jge
lods
inc
in
dec
mov
mov
mov
popf
jmp
fs
and
mov
jns
xor
stos
mov
cs
stos
or
ret
and
cmp
add
push
loope
xor
jmp
xor
mov
pusha
or
into
nop
adcl
pop
es
idivb
sub
fwait
push
repz
adc
sbb
jae
pop
push
xor
popf
jnp
addb
jnp
cmp
inc
ljmp
jecxz
cli
pop
xchg
lds
xor
inc
movsb
lahf
add
les
jbe
xor
enter
lcall
sbbl
int3
jl
fwait
ds
out
pop
in
cld
mov
push
out
lcall
mov
inc
xor
ret
dec
pop
push
mov
jo
xor
and
push
mov
rcrb
cltd
leave
jne
push
mov
lds
mov
push
icebp
xchg
inc
cmpxchg
imul
xchg
jne
inc
ljmp
outsl
inc
sbb
jg
mov
insb
stc
xchg
fmulp
rcl
mov
arpl
in
adc
mov
mov
jle
pop
movlps
ss
loope
adc
and
enter
jge
mov
add
cmpl
rcrl
mov
cmpsl
cmp
ds
cs
fsts
mov
call
jmp
ret
cmp
stos
lea
lea
rorl
push
cwtl
cmp
jmp
hlt
mov
or
pop
fdivrl
aaa
mov
inc
jo
out
gs
jnp
aaa
pop
scas
scas
or
cmpsl
mov
pop
inc
leave
pop
and
mov
xor
loopne
mov
cmpsl
jecxz
push
jmp
push
sub
and
pop
jl
clc
rcrb
adc
frstor
leave
xchg
adc
inc
dec
mulb
dec
adc
mov
lahf
inc
out
test
push
ss
imul
lock
and
movsb
cmp
lods
out
es
cld
adc
repz
and
add
nop
dec
mov
arpl
sahf
inc
or
scas
adc
push
fildll
sti
cmp
cld
aad
and
inc
shlb
js
xor
imul
xor
mov
into
dec
int
dec
je
aam
insl
movq
xor
std
pop
stos
hlt
xor
cmpsb
and
sub
orl
lret
testl
les
jmp
loop
scas
mul
sbb
ljmp
imul
rol
aas
jmp
mov
repz
xchg
jge
aam
fisubl
push
mov
and
pop
adc
addl
or
mov
in
imul
inc
cmpsl
xchg
cs
dec
inc
push
mov
pop
pop
out
xchg
mov
inc
mov
pop
out
ret
adc
in
or
inc
cmpsl
fwait
das
jno
pop
imulb
mov
das
dec
push
jmp
push
fxam
movsb
xchg
cmp
popa
popf
andl
cmp
repz
je
andl
mov
mov
sbb
sub
mov
in
jle
rorl
pop
push
cmpsb
pop
xor
sbb
pop
mov
pop
in
cmc
repz
fiadds
xor
push
inc
cmpl
mov
mov
test
jmp
shlb
or
or
inc
sbb
xchg
insb
out
loop
inc
pop
jl
rcl
es
insl
fnstsw
xor
add
dec
in
fiadds
adc
and
pop
inc
cmp
cs
xor
pusha
pop
cmp
enter
nop
lds
sbb
leave
pop
mov
shl
jl
add
sub
push
ss
lock
popf
xchg
xchg
enter
test
lret
dec
loop
push
pop
sbb
iret
jg,pn
mov
push
arpl
gs
or
arpl
sbb
jl
repnz
pushf
mov
test
pop
mov
stos
lock
cld
inc
or
mov
das
stos
pop
pushf
sbb
lock
iret
int
push
mov
cmp
les
cmp
loop
test
jl
cmp
repz
jmp
inc
sbb
aas
fsubs
mov
sahf
push
mov
cli
push
das
icebp
fcompl
jns
es
insb
fwait
jbe
nop
pop
dec
adc
jmp
pop
gs
xchg
in
jg
fcompl
lds
fildll
add
jns
testb
in
dec
call
push
fnsave
xchg
push
sarl
test
fists
hlt
sbb
cmp
outsl
imul
pop
cmp
loopne
les
xor
dec
jp
push
xor
les
in
rcrl
test
xor
or
mov
xchg
mov
loop
push
xor
xchg
or
mov
mov
push
sbb
scas
push
jle
addr16
ja
in
add
mov
cmp
jno
test
jmp
dec
pop
in
cmp
add
add
fildll
sbbb
jno
add
adc
cli
mov
enter
test
adc
jecxz
mov
jg
jmp
adc
outsb
sahf
jae
in
shlb
mov
or
negl
or
rcr
and
popf
test
scas
inc
add
test
adc
or
adc
in
xchg
rcrl
sahf
ret
mov
and
push
fs
sbb
jp
loop
into
jmp
dec
insl
mov
jg
popa
jecxz
jns
out
ret
pop
cmp
pop
mov
jge
out
inc
jp
jnp
sub
inc
fistps
xchg
loop
sbb
cwtl
cltd
ljmp
mov
xor
test
or
bound
sub
int
dec
push
push
push
mov
out
sbb
jnp
pop
rclb
xchg
mov
repz
mov
jge
fnstcw
lahf
jo
js
push
insl
cli
out
push
subl
rcrl
inc
pusha
sbb
pusha
mov
test
popa
cwtl
mov
push
pusha
xchg
dec
xor
xor
lea
sub
sahf
lahf
jae
adc
pop
fstpl
rclb
push
add
mov
push
sbb
ret
xchg
gs
mov
outsb
lods
dec
outsb
mov
and
lods
inc
subl
push
push
sbb
clc
fsqrt
rcrl
test
mov
jnp
aas
dec
sahf
pusha
push
lock
outsl
adc
daa
push
pop
push
adc
pop
sub
or
mov
xchg
lret
lods
aas
bound
adc
scas
lret
jp
xlat
sub
aaa
in
aam
adc
lret
sbb
lret
out
cmp
cld
faddl
push
idivl
sub
cld
mov
mov
repnz
cmpsb
inc
sub
std
icebp
in
pop
lods
push
sahf
push
and
cmpsl
xchg
or
push
sub
cmp
inc
xor
xchg
je
pop
rolb
fwait
outsl
xchg
mov
sbb
ja
add
or
push
dec
unpckhps
lahf
cmp
xchg
lods
xor
rcll
jmp
cmpsb
push
test
test
mov
and
call
dec
jo
mov
mov
push
adc
shlb
xchg
clc
mov
push
cs
push
rorl
pop
inc
dec
dec
outsb
inc
test
cwtl
arpl
loope
aaa
shlb
dec
mov
sbb
xchg
add
pop
sub
add
jmp
adc
decb
cmp
int
inc
adc
aad
insl
stos
xchg
stos
iret
test
aad
fildll
inc
add
out
sbbb
jecxz
pop
hlt
mov
out
xchg
mov
mov
test
int3
jo
xchg
mov
mov
xor
insb
add
mov
idivl
loope
shlb
inc
lods
pop
cltd
push
pushf
out
or
int3
sub
es
aas
dec
lcall
push
pop
sub
repnz
cli
mov
xchg
ss
ret
ss
or
lahf
insb
mov
int
leave
push
fs
nop
push
outsl
out
xchg
cmp
filds
xchg
mov
lods
pop
loope
fs
bound
sbb
add
mov
mov
cli
lock
xchg
inc
and
push
jb
fmull
or
pop
push
add
add
js
push
imul
dec
push
jl
scas
ljmp
fistpll
insb
pushf
mov
xchg
xchg
xchg
movsl
adc
hlt
dec
fucom
ret
je
loopne
ljmp
les
cli
pop
call
ss
and
iret
xor
xchg
pop
sub
adc
pop
pop
lcall
inc
push
addb
push
js
js
and
xchg
rorl
xchg
add
cmc
jp
pop
and
fst
jg
mov
filds
adc
inc
notl
testl
or
js
dec
mov
mov
dec
test
and
xchg
dec
mov
xorl
push
push
aad
cmc
mov
push
out
xchg
mov
scas
pop
fs
xchg
inc
fwait
adc
loop
mov
arpl
push
add
inc
mov
je
cli
push
pop
pop
xor
pop
mov
bound
repnz
push
and
add
jb
xchg
push
jnp
daa
dec
popa
insl
js
fs
out
ret
pop
xor
scas
imul
pop
ds
pop
repnz
stc
nop
jnp
imul
and
andb
push
jb
repnz
dec
and
lock
mov
lahf
aad
cmp
adc
dec
std
xor
out
stos
scas
test
or
jae
subb
int
sub
mov
jp
out
add
out
imul
lock
ja
fwait
into
lret
lahf
bound
inc
sbb
outsb
sub
dec
lods
inc
iret
mov
test
jmp
aad
repnz
push
sahf
add
ret
cmp
sub
cmp
repz
cmp
lock
push
orl
or
mov
pop
mov
jg
and
xor
ret
xlat
dec
jbe
rorl
mov
out
aaa
cmp
movsl
scas
das
mov
xchg
xor
xchg
ret
push
loop
ja
mov
mov
xchg
cwtl
adc
aas
stos
xchg
cmpsl
mov
xchg
and
mov
mov
leave
aaa
push
or
and
sbb
cmpsb
scas
mov
sub
mov
xor
fwait
mov
ja
jmp
xchg
aas
inc
mov
xchg
dec
push
fistpl
mov
jge
jg
adc
ja
sti
repnz
sub
js
sub
aad
cmpsl
out
jb
arpl
lock
rcrb
mov
or
xchg
pop
lea
lahf
jl
cmpsl
push
mov
cmpsb
sub
nop
cli
arpl
movsl
and
and
test
push
lods
xlat
xor
pop
sarl
xor
mov
lret
stos
nop
cmpsl
in
pop
out
jl
xchg
inc
loope
adc
mov
adc
cmp
test
xor
lock
xchg
int3
stc
adc
sub
rclb
sub
pop
xor
sbb
in
rorb
or
into
sbb
push
mov
fldenv
jp
adc
sbb
sti
in
outsb
jo
adc
mov
stc
sbb
push
fwait
lock
jae
in
dec
jb
dec
jp
or
inc
std
xchg
sbbb
pusha
add
mov
push
popf
imul
movb
in
add
xchg
sbb
shlb
fs
sbb
push
testl
push
fnsave
inc
inc
dec
push
jo
arpl
xor
ss
lea
mov
pushf
lds
outsl
loopne
stos
or
out
cmc
or
add
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
jne
popa
rcrb
cmp
arpl
divb
xor
pop
jg
cmp
bound
mov
sarl
popa
push
cmp
dec
out
fstpt
xchg
addr16
lahf
in
fdivl
daa
ret
mov
push
in
js
push
mov
imul
xlat
aad
imul
cmp
or
pop
pusha
popa
mov
mov
and
pop
iret
call
jge
lds
lcall
xor
sbb
out
js
xchg
pop
int
jg
dec
xor
insl
dec
mov
fisubl
pushf
push
std
mov
cmpsb
loopne
jecxz
fnstcw
sub
or
aad
gs
stc
sub
push
adc
dec
mov
mov
cmp
repz
inc
xchg
add
mov
mov
sar
notb
out
jg
cld
insb
inc
movsb
stos
rcl
pop
rol
adc
dec
ja
jae
repz
or
out
adc
nop
pop
lahf
into
cmp
out
pushf
rolb
add
jecxz
pop
mov
loop
insl
sub
or
int
fistpl
or
push
in
push
nop
jl
aas
pusha
fdivrs
pop
push
cmp
jle
jae
lock
mov
xchg
push
dec
adc
mov
test
jp
push
jo
lds
jmp
js
sbb
jmp
rorl
addb
fmul
push
cmp
xchg
push
subb
inc
mov
pusha
lret
dec
mov
repnz
mov
loopne
aas
dec
out
or
test
mov
movsl
je
andb
fistpl
iret
xor
or
dec
shl
imul
sti
adc
aas
sub
inc
cmpsb
rolb
mov
fs
in
jg
cltd
insl
cld
jae
sbb
push
fwait
cld
pop
sbbl
ds
roll
cmp
add
pop
flds
fwait
inc
jl
push
and
lods
ffree
imul
mov
push
pop
into
xchg
sbb
and
data16
fiadds
adc
out
add
data16
sbb
fmull
lds
in
repz
or
xlat
movsb
xchg
stos
cmp
movsb
push
dec
aam
int3
cmpsb
pop
jbe
or
or
aad
rol
adc
insl
or
sahf
jo
jg
cmp
in
lea
dec
and
cld
fnsave
dec
scas
and
int3
aaa
out
inc
sarl
sbb
xchg
fnsave
push
pop
ss
pop
dec
sub
jne
fldcw
push
mov
sbb
scas
pop
psrad
sub
mov
and
ds
xchg
mov
mov
xor
xor
out
fstpt
jmp
les
mov
out
mov
cmp
pop
call
popf
cmpsl
fisubrs
outsl
push
jbe
sub
cmp
xchg
pushl
aaa
js
adc
sub
cwtl
les
inc
arpl
inc
in
jo
cld
fiaddl
sbb
popl
mov
cld
adc
pop
lods
fcoml
and
daa
fs
xor
shlb
inc
xchg
jp
fadds
dec
push
pop
shrl
andl
mov
out
xchg
pop
pop
fsubrp
pop
adc
in
cmpsl
mov
cmp
out
test
jo
out
sbb
or
mov
jmp
adc
fisubrs
dec
mov
mov
stos
test
push
cmpb
out
xor
nop
ficoms
and
push
stos
mov
pop
mov
cmpsb
lea
scas
ds
nop
dec
imul
sub
fsubrs
sub
jecxz
icebp
arpl
mov
cmp
jge
sbb
ror
inc
subb
andl
test
mov
icebp
popf
mov
popa
rcll
js
shlb
dec
cmp
mov
dec
pop
mov
test
nop
out
dec
fsubs
mov
inc
outsb
popa
xchg
test
lock
popf
js
and
jb
ret
sarb
pop
cmpsb
push
out
in
xor
mov
mov
and
fidivs
xor
rcr
xor
xor
xchg
sbb
dec
pusha
test
fstps
jecxz
mov
pop
out
repnz
xor
push
pushf
push
or
js
repnz
add
sub
in
pop
mov
out
loope
sarl
ljmp
xchg
mov
push
leave
das
lods
imul
add
pop
mov
scas
pop
es
and
pop
sub
pop
daa
sub
cmp
aaa
aam
pusha
push
flds
cli
gs
inc
xor
cmp
inc
mov
lods
je
scas
xchg
mov
push
dec
adc
mov
out
adc
push
ja
cmp
xchg
xor
xor
mov
ss
xchg
add
mov
rorl
repz
dec
cmp
loope
cmpl
mov
in
je
mov
out
or
pop
sub
lods
inc
pushf
addr16
out
mov
cs
mov
lahf
fs
pop
dec
add
mov
lret
sub
sbb
jno
in
nop
pop
in
jmp
jmp
imul
scas
pop
xor
out
sbb
add
pop
push
and
xchg
adc
mov
sbb
push
cmp
dec
fsubrs
lret
mov
orl
mov
mov
and
rolb
sti
loope
lods
push
out
mov
and
push
nop
or
vdivpd
push
addr16
mov
cli
push
outsl
loop
mov
pusha
inc
in
imul
pop
mov
xchg
and
cmpsl
mov
and
inc
jmp
push
mov
andl
push
inc
inc
shl
dec
cmp
jae
fldz
add
imul
cwtl
sub
sahf
pop
js
dec
test
mov
jae
xor
sub
out
adc
ss
adc
sarb
mov
mov
in
inc
and
jb
sbb
sahf
xor
pop
push
pop
lock
pop
adc
movsb
pop
test
sub
inc
pop
dec
or
repnz
inc
gs
inc
rolb
fstpl
jno
fildl
or
arpl
lock
mov
out
inc
mov
and
push
enter
stc
push
mov
jae
dec
ror
push
sbb
sub
pop
xor
sub
cli
popa
sub
fdivrl
sub
jmp
popa
adc
cmpsb
lods
sbb
lods
movhps
and
loop
rcll
and
gs
xchg
daa
outsb
rclb
call
or
mov
add
mov
jecxz
dec
icebp
mov
in
and
fs
insl
jl
pop
mov
mov
mov
sub
test
mov
mov
int3
fnstenv
aam
xchg
lods
mov
cltd
mov
fs
imul
mov
rol
in
mov
sub
xchg
pop
shlb
fldenv
mov
sub
shr
shll
inc
xor
inc
jecxz
xor
les
sbb
xor
adc
sbbl
out
insb
jne
arpl
les
mov
add
mov
cmp
mov
outsl
js
cmc
sub
push
or
into
pushf
or
sbb
mulb
inc
xor
js
xchg
dec
dec
test
loope
or
xor
mov
mov
xchg
testb
mov
dec
push
inc
ds
mov
jbe
shl
loop
xchg
mov
fsts
pop
xchg
movsb
fidivrs
out
push
jge
adc
sbb
cmpsb
xchg
mov
mov
bound
lods
cmp
sub
jg
icebp
es
mov
push
stos
push
pusha
inc
sahf
int3
incb
movsl
movsb
sti
push
nop
jg
sub
inc
ljmp
lret
push
bound
stos
iret
or
daa
aad
and
mov
fs
xchg
popl
sub
int
sub
and
push
inc
into
add
cltd
mov
xchg
jl
or
jo
mov
test
ret
movsl
adc
adc
mov
xchg
push
inc
or
adc
loop
jg
nop
xchg
imul
inc
inc
fldcw
mov
add
and
fxch
es
adc
pop
pushf
out
mov
dec
sub
xor
dec
daa
lea
sahf
es
fwait
pop
popf
rcll
outsl
rolb
cld
sbb
sarb
push
icebp
andb
jmp
jl
ljmp
arpl
cwtl
sub
and
mov
rolb
pop
enter
add
imul
push
imul
daa
sbb
rcr
sbb
add
loopne
clc
push
cld
repz
dec
lock
cmpsl
cmp
cmpsl
jae
bound
cli
sub
add
jnp
repnz
add
or
ret
test
addr16
inc
mov
mov
movsl
push
addr16
fisubl
and
mov
pop
js
addr16
je
das
mov
or
lret
xchg
pop
fwait
mov
mov
bound
xchg
adc
xchg
sub
jne
add
fbld
out
jne
xchg
lret
sub
dec
js
icebp
das
dec
jae
ficomps
gs
cmpsl
rorb
mov
push
jb
lods
fnstenv
push
push
ja
inc
addr16
jbe
test
aaa
sub
mov
repz
mov
push
and
pop
fisttpl
jp
pop
xor
and
xor
sub
sub
fistpl
inc
in
dec
sarb
insb
xchg
adc
lods
push
ja
push
popf
add
cs
sub
jae
fldt
mov
push
mov
nop
pop
scas
sbb
jb
call
inc
xor
fldl
inc
in
pop
imul
fidivs
pop
clc
push
add
mov
daa
sub
rsm
xchg
sub
pop
sub
loop
dec
lods
cmp
inc
ja
pop
push
add
mov
shll
jmp
fwait
ss
mov
pop
push
xlat
xor
pop
inc
push
ljmp
mov
pop
or
and
mov
shrb
mov
fnstcw
mov
out
push
mov
int3
adc
js
dec
or
push
js
mov
repz
imulb
inc
xor
nop
lea
insb
fwait
movsb
and
jne
pop
fldcw
cltd
idivb
fndisi(8087
dec
cmp
hlt
add
sahf
pop
call
mov
lret
mov
cltd
nop
pushf
mulb
faddp
rcrl
jae
push
rcrl
xchg
repz
cwtl
jbe
mov
and
dec
xchg
cmp
data16
enter
fistps
push
rorl
cmp
mov
ret
imul
xorl
loope
push
xor
stos
imul
jae
in
test
cmp
insb
cmp
cmpsl
xchg
inc
fdivs
fwait
dec
add
testl
mov
loop
cmpsb
sti
ja
out
div
fcmovne
popa
roll
leave
xor
sbb
push
les
cmp
scas
mov
cmpsl
scas
stos
cmp
pop
mov
jae
imul
jp
pusha
sbb
loopne
mov
dec
mov
sub
jmp
mov
push
icebp
push
dec
stos
pop
aas
je
xor
das
or
jns
sub
scas
sub
dec
gs
in
add
mov
sbb
fwait
sbb
pop
adc
insb
ljmp
push
sbb
pop
adc
sub
addr16
sahf
loope
sbb
rorl
jne
aas
dec
inc
mov
or
mov
into
mov
sbb
fs
mov
adc
arpl
jns
gs
sub
std
xchg
mov
and
xor
add
and
stos
or
inc
xchg
imul
jne
sarb
in
dec
mov
add
xlat
sarb
ja
icebp
fdivrl
imul
xor
jae
mov
sub
imul
pop
in
xor
mov
push
jle
cli
lret
pop
iret
push
jae
mov
pop
dec
ret
add
sbb
pop
jmp
sbb
jg
cmp
push
ss
mov
pop
repz
lcall
add
push
xor
push
aad
popa
fs
dec
sub
mov
sbb
mov
mov
aaa
ja
mov
sbbb
xor
mov
dec
pop
mov
sbb
dec
or
lret
mov
jno
ja
sub
repnz
inc
out
xor
pop
pop
sbb
sbb
and
js
popa
dec
lods
ja
jnp
sub
jmp
xor
out
shlb
repz
push
add
outsb
test
pop
out
movsb
in
mov
bnd
sbb
stos
pusha
pop
jle
dec
dec
pop
pusha
clc
push
mov
add
push
and
xor
xchg
jmp
andl
xor
mov
or
pop
jbe
push
jp
pop
pop
int
jg
test
cmp
mov
iret
cld
mov
push
adc
out
fidivrs
add
loop
in
jno
imul
lods
loop
dec
adc
xchg
push
xchg
lret
fwait
inc
out
imul
xor
cld
dec
mov
mov
add
imul
aam
push
xchg
jl
ja
arpl
adc
aas
cmp
add
push
xchg
and
std
mov
jmp
push
or
lahf
enter
ss
or
inc
sub
push
iret
je
test
mov
xchg
pop
test
insl
inc
mov
pop
inc
and
movsb
mov
test
mov
and
mov
pop
adc
sahf
mov
jnp
bnd
lret
adc
inc
sbb
les
rorb
mov
mov
xor
jb
cs
sbb
arpl
aaa
inc
repz
xor
dec
inc
add
imul
inc
popa
mov
mov
negl
pop
sub
jae
xor
jg
push
adc
int3
push
and
jmp
xchg
xchg
pop
movd
mov
mov
mov
push
sbb
sbb
lock
add
cmp
fdivl
cmp
scas
repz
cmp
xchg
hlt
and
jge
mov
push
std
pop
or
mov
ret
and
gs
xor
lcall
xor
in
rcrb
cld
pop
xchg
outsl
das
pop
or
aaa
mov
lcall
sbb
iret
xor
mov
push
or
pop
icebp
jno
lcall
push
inc
mov
xor
ja
inc
imull
addb
ds
pop
dec
movsl
pop
cmp
jg
pop
mov
out
jo
add
dec
clc
int
lret
fistl
cltd
xchg
pop
out
dec
xchg
cmpsl
mov
call
xchg
movsl
andb
mov
and
sbb
sub
icebp
std
or
jbe
call
pop
or
in
lods
mov
mov
xchg
pop
stos
pop
movsl
in
icebp
lds
sbb
or
xchg
les
out
js
mov
ds
add
cmp
inc
mov
mov
imul
in
jae
or
out
enter
cwtl
cmc
adc
sub
or
mov
and
fwait
aaa
je
div
pop
lds
cs
inc
fsubs
or
adc
fildl
or
and
lds
xchg
in
push
jo
bnd
pop
stc
and
scas
les
repz
sub
push
mov
imul
fldenv
in
jo
jge
mov
jge
ret
sub
mov
les
or
sets
dec
mov
xchg
xlat
movsl
aaa
dec
xor
js
jmp
sub
add
or
or
in
sbb
mov
shlb
out
sub
dec
aas
scas
mov
nop
cltd
mov
cwtl
fisttpl
jecxz
ja
sub
cli
ja
aad
repz
mov
xor
sbb
mov
adc
mov
dec
add
inc
into
loopne
jmp
dec
or
cld
push
mov
push
mov
sbb
in
cltd
shrb
in
cld
adcl
subl
scas
mov
mov
push
xchg
out
sbb
and
imul
scas
fptan
fdivrl
call
outsl
addl
sub
xlat
shll
adc
jae
clc
pop
push
add
jne
into
repz
push
sbb
lea
rcr
push
fdivrp
js
mov
cltd
cmpsl
sub
cli
cmp
adc
mov
push
mov
pop
scas
cmovno
and
push
fld
pushf
inc
sub
mov
cmpsl
pop
cmp
xor
mov
in
sbb
scas
mov
cs
mov
cmp
jmp
mov
aaa
and
inc
outsl
mov
adc
int3
xchg
rcrb
mov
js,pt
std
cli
movsl
dec
xor
in
xchg
or
rorl
testb
lds
mov
cmc
fstps
cmp
pop
fdivrs
push
mov
cmp
pop
subb
mov
jg
push
adc
sub
jns
inc
imul
stc
adc
js
dec
aas
jg
stos
es
faddp
xor
outsb
mov
fcomi
cmpsb
test
mov
xor
iret
jo
call
dec
pop
sbbl
scas
cmpb
cmc
rol
sub
pop
jecxz
in
jecxz
int
mov
lret
in
leave
jmp
push
std
pop
mov
sahf
or
dec
mov
les
inc
fistl
outsl
fstpl
sub
fsts
icebp
mov
jle
repz
test
in
sub
cs
dec
cs
into
mov
and
push
mov
inc
sbb
pop
push
ret
add
xchg
push
jge
dec
push
mov
jecxz
push
dec
int3
sub
xlat
daa
dec
jns
xchg
js
jbe
bswap
mov
jmp
es
mov
jl
jle
stc
fisubrl
fdecstp
data16
pop
push
and
push
push
icebp
add
mov
adc
into
jmp
lcall
and
cmc
js
pop
insl
in
dec
pop
dec
pop
out
xor
jne
dec
or
xchg
fisubrl
push
xchg
mov
mov
mov
div
in
xchg
xchg
gs
jns
sub
cli
stos
and
stos
xor
mov
xchg
pop
or
inc
inc
push
leave
lods
jge
adc
push
loop
insb
enter
pusha
outsl
mov
and
adcl
arpl
test
mov
xor
pop
mov
jmp
push
inc
inc
jbe
imul
dec
es
scas
cmpsl
cmc
aaa
daa
push
add
roll
je
lods
dec
stc
outsb
pop
into
imul
std
cmp
lcall
mov
add
imul
adc
mov
sahf
outsb
inc
cld
call
push
hlt
mov
xchg
daa
test
jns
cmpsb
inc
jbe
push
andl
cmp
rolb
add
std
scas
std
or
jb
in
sti
mov
push
lret
shlb
adc
test
repnz
imul
sub
push
lea
subb
jae
pop
pop
adc
and
cmp
loopne
jo
inc
repnz
arpl
push
inc
cmc
cld
inc
into
push
arpl
leave
sarl
jecxz
xor
push
loope
add
aam
pusha
cwtl
cmp
aad
shlb
and
hlt
add
cmp
mov
pushf
adc
or
push
xor
pop
into
mov
jmp
ror
or
arpl
xchg
cwtl
add
sub
dec
sub
add
lock
andl
outsl
js
jno
xlat
repnz
cmp
in
fnsave
sbb
stos
mov
dec
or
out
sub
adc
xchg
bound
or
jno,pn
loop
out
jmp
and
cs
xchg
in
lds
mov
pop
mov
scas
sub
cmp
xchg
mov
xchg
stos
cld
pop
push
mov
mov
lods
adc
mov
in
dec
rclw
cli
mov
lcall
push
into
gs
push
jmp
jg
pop
in
mov
cmpsb
or
and
pop
pusha
pop
sub
dec
loop
imul
xor
pop
xchg
das
push
cmpsl
push
gs
stc
jo
das
mov
pop
gs
mov
dec
mov
cmpsb
stos
and
sub
inc
push
or
ret
out
out
sub
into
inc
rclb
imul
xchg
addb
cs
jge
roll
and
jle
fisttpll
test
pop
cmpsl
rcrl
xchg
mov
xchg
inc
inc
sbb
in
out
lock
icebp
sbbl
cmp
push
ret
jae
popa
inc
jge
ljmp
xorl
andl
mov
mov
call
rorb
addr16
arpl
mov
fcomi
mov
iret
sbb
inc
pop
xorl
xor
jmp
dec
andb
jbe
cs
xchg
pop
insl
xchg
outsb
mov
sbb
lret
xor
rolb
xchg
lds
and
ja
dec
and
pusha
movsl
fnstenv
sub
lahf
dec
push
lock
or
sahf
in
int3
repnz
push
bnd
xor
daa
loope
inc
push
stos
add
pushf
addb
adc
shlb
mov
roll
stc
push
aaa
cwtl
jmp
cld
push
add
subb
cmp
in
inc
les
and
movsb
movsb
sub
shr
mov
aam
testb
and
pop
mov
push
xchg
es
mov
lahf
sub
sahf
pop
stc
cmp
cmpsl
int
mov
or
lcall
mov
pop
insb
das
push
add
loopne
mov
jge
mov
sbb
xchg
push
push
push
iret
or
xor
push
outsb
dec
gs
xchg
lret
adc
push
negb
sbb
insl
inc
test
jne
inc
aas
js
cmp
test
dec
dec
mulb
addb
sahf
jne
or
pop
jp
popf
cmp
sbb
jge
out
mov
push
nop
notl
int
mov
popa
pusha
mov
cmc
enter
push
or
push
aas
lods
sub
add
mov
pop
mov
in
daa
jbe
push
or
es
outsl
push
mov
add
fistpl
mov
pushf
adc
inc
dec
or
fstpt
cwtl
inc
jg
enter
xor
inc
dec
mov
adc
sub
cmpsb
fnsetpm(287
loope
adc
mov
int3
aad
mov
xor
jno
jmp
and
push
test
push
addl
jmp
mov
mov
sti
sub
out
pop
cltd
xor
or
ss
and
je
test
mov
insb
jl
lahf
push
inc
hlt
movsb
sbb
cmp
dec
jb
cld
fstps
jmp
pop
push
sahf
nop
into
fdivrl
jb
aam
add
imul
push
mov
fsubs
or
lahf
cmp
scas
dec
push
je
js
push
movsb
cltd
test
sarl
sahf
sbb
or
jle
push
add
cmp
in
stos
sti
cmp
or
jmp
jecxz
push
mov
mov
fsub
hlt
inc
lock
pop
xor
pop
fldenv
pop
imul
sbb
sub
fmuls
leave
mov
inc
shrl
mov
or
aam
ljmp
sbb
cmp
jns
push
cld
dec
push
push
leave
pop
cld
test
pop
adc
ljmp
xor
dec
call
sti
ficompl
jecxz
loop
jmp
inc
xchg
in
xchg
icebp
jmp
in
push
ftst
xor
jnp
mov
xchg
int
shrb
jp
jmp
sbb
lret
dec
fisubrl
dec
cmp
pusha
adc
cltd
pusha
xor
pop
or
dec
cld
adc
and
nop
clc
mov
loope
repz
adc
loope
mov
mov
mov
test
cmp
scas
mov
pusha
icebp
inc
in
cld
add
xor
ds
gs
xlat
add
dec
int
cmp
aad
inc
or
sub
arpl
pop
int
jns
xchg
jg
cmp
mov
mov
stos
sub
insb
mov
aaa
nop
adc
cmpb
ljmp
push
rorb
cmp
out
push
inc
add
or
mov
sub
shll
addr16
cmc
mov
clc
outsl
cmp
out
mov
cltd
sbb
sub
rcr
adcb
scas
cmpl
mov
fimull
test
clc
push
adc
push
out
adcl
xchg
pop
cmp
scas
adc
fidivl
or
cmc
push
push
mov
xor
loop
jmp
pushl
cli
xchg
shll
fidivrl
sub
xchg
mov
or
daa
cmc
dec
and
movsb
push
mov
mov
iret
pop
pusha
sub
rcrb
mov
jl
ficoml
push
test
lret
sahf
mov
mov
int
add
fs
in
lret
fadd
ret
int
sti
xchg
xchg
jecxz
inc
xor
jl
fimuls
test
mov
add
sub
ret
push
cli
dec
pop
stos
das
add
mov
sbb
mov
xchg
and
mov
sub
mov
xor
adc
int
filds
cmc
sbb
mov
outsb
cmc
cmp
pusha
sub
daa
push
test
cmp
sub
insl
jae
sbb
mov
in
dec
inc
test
fcmovnbe
push
test
adc
test
xchg
loop
aas
dec
and
push
push
stos
and
or
into
jecxz
movsb
fnsave
cli
pop
inc
mov
sti
sarb
mov
mov
mov
out
mov
out
mov
pop
lea
js
mov
jl
sub
and
nop
cmp
mov
test
xor
decb
gs
movsb
retw
loop
ficompl
dec
adc
fwait
adc
push
cli
add
das
cld
mov
sbb
push
rcrl
dec
jne
sub
fst
pop
pushf
add
test
ds
and
mov
int
add
mov
push
pop
mov
dec
mov
xchg
ret
dec
stos
adc
neg
gs
xchg
bound
jecxz
outsb
jb
cmp
dec
movsl
xchg
movsl
push
push
je
jge
roll
sub
mov
loop
out
push
in
add
or
jnp
inc
jno
dec
mov
jne
cmc
jnp
insb
cltd
outsl
or
or
inc
or
mov
push
addr16
icebp
iret
lods
mov
mov
jecxz
jbe
mov
shll
push
ret
jp
mov
add
jns
in
dec
test
dec
pop
cmp
push
jne
testb
push
aad
push
lret
mov
std
cs
jmp
loop
aad
xor
icebp
enter
mov
jl
testb
jge
cmp
test
ds
shll
or
sbb
into
in
sub
repnz
rcll
cmpsl
sarb
bound
and
xchg
pushf
icebp
clc
mov
cmp
or
loope
mov
data16
mov
loope
mov
mov
or
negl
adc
dec
mov
xchg
sub
sarb
popa
aad
push
cmp
test
cmpl
shl
mov
jo
dec
rcr
adc
mov
inc
push
ljmp
jbe
ljmp
jns
pop
push
repnz
jno
icebp
inc
sbb
pushf
pop
jno
loop
decl
add
cmc
cmp
fwait
lock
int3
inc
xchg
dec
into
jnp,pt
loop
add
icebp
dec
lahf
mov
jno
adc
fwait
mov
loopne
mov
jmp
push
sbb
cmpsb
lahf
push
xor
sub
inc
add
sbb
mov
cmp
inc
imul
inc
mov
pop
jo
mov
ret
cmp
movsb
jmp
rol
js
or
pop
pop
rolb
mov
inc
push
into
mov
or
test
ffree
aam
icebp
fcoms
rcr
jb
test
loope
test
pop
lods
sbbl
je
imul
je
and
xor
cmp
jae
mov
mov
xor
push
les
pop
mov
cld
push
mov
cld
jecxz
dec
xchg
pop
and
sub
fwait
add
dec
mov
lcall
scas
lock
fnsave
add
sahf
aas
cmp
ja
js
les
jbe
adcb
clc
fisttps
push
loope
movsb
push
test
ss
push
js
fwait
push
imul
cmp
dec
fwait
dec
fs
jns
mov
sub
add
jo
xchg
mov
mov
lds
movsb
sub
push
adc
lock
fwait
sbb
jge
repnz
sub
subl
push
push
ror
scas
and
pop
sub
mov
test
fsubr
test
jo
rcr
pushf
lret
jmp
shlb
push
idivb
popf
dec
sbb
out
mov
pop
and
out
iret
ficompl
imul
lcall
fdivl
mov
jp
inc
pop
std
mov
pop
and
and
mov
outsb
and
push
roll
loop
jae
outsb
cmc
lea
loopne
lcall
add
cld
xchg
or
int
mov
out
pop
or
jg
or
mov
mov
adc
cld
int
dec
loope
sub
push
xchg
pop
push
in
and
outsb
add
mov
into
mov
les
fldcw
sti
xlat
xchg
sbbl
and
jge
leave
mov
mov
mov
out
xchg
call
outsl
jl
mov
mov
movsb
not
adc
add
cmpsl
adc
inc
aas
aad
popa
int3
cs
xchg
clc
dec
and
movsb
mov
rcll
sbb
xor
jb
inc
dec
test
and
sub
popf
out
xchg
jle
mov
outsl
add
sub
mov
mov
pushf
mov
adc
int3
fcmovnb
mov
mov
add
add
loop
mov
lods
mov
ljmp
addr16
std
cld
inc
mov
daa
and
push
stos
mov
xchg
mov
shll
adc
jmp
nop
xchg
add
or
dec
es
popa
jbe
push
mov
jb
mov
in
xchg
pxor
movsl
inc
in
jnp
rcl
out
push
push
adc
pop
jp
xchg
mov
mov
ret
xor
test
inc
or
rorl
scas
shr
and
add
loope
mov
test
mov
lods
ficompl
rcrb
adc
lods
fmul
mov
xor
inc
rcrl
adc
stos
mov
setno
aam
cli
or
hlt
pop
push
out
clc
push
push
or
jae
fisttps
aam
xchg
call
jns
aad
push
mov
cs
and
xchg
jmp
stos
xchg
dec
pop
adc
es
cld
data16
fldcw
cmp
cmc
and
sub
xor
inc
pusha
mov
lcall
xor
and
push
out
lahf
in
mov
xchg
jecxz
pop
xchg
into
ret
cmp
in
lahf
je
lcall
cmp
adc
push
push
mov
xchg
jl
mov
punpcklwd
clc
inc
or
xchg
pusha
movb
push
out
sub
rorl
inc
cld
idivb
ret
loop
arpl
loope
fmull
mov
and
daa
pop
cmpsl
aas
cltd
cmc
leave
popa
push
mov
lret
jne
inc
pop
sti
adc
jae
mov
mov
mov
mov
int3
repz
fbld
lahf
ficompl
xchg
push
xchg
std
mov
rcl
test
popf
lea
ja
scas
inc
mov
insl
stos
test
psubusw
jb
jl
sti
inc
push
pop
mov
dec
mov
dec
cmp
lock
les
iret
ds
lcall
xlat
cmp
sub
pop
std
push
iret
leave
fstp
jae
rdpmc
outsl
int3
sti
pop
add
outsb
jo,pn
mov
and
fistpll
and
sahf
pop
jnp
les
jne
xor
ret
or
dec
clc
mov
xor
jns
push
jns
pop
das
cmp
mov
adc
and
adc
xor
or
push
jge
and
cmp
mov
sbb
sbbl
pop
cmpsl
and
push
stc
sub
je
dec
sbb
mov
push
jne
jg
xchg
pop
in
iret
movsb
jbe
or
js
mov
push
loop
and
pushf
cwtl
push
sbb
je
push
sbb
insb
test
jno
push
jg
and
sarb
xchg
push
push
or
out
mov
xchg
cltd
dec
filds
fsub
jbe
lods
mov
cld
or
ljmp
jae
mov
xor
xchg
or
and
push
stc
dec
loope
clc
bnd
inc
jg
test
clc
push
cmp
pop
push
mov
cmc
jo
inc
test
aad
outsb
jge
jg
push
and
inc
cli
and
dec
xor
sbb
sub
fs
pusha
xor
mov
inc
xchg
xchg
sahf
push
dec
mov
stc
sbb
aam
clc
sub
mov
mov
cmp
loope
and
pop
sbb
adc
fidivs
cmp
or
push
inc
push
test
push
fadd
out
scas
rorl
add
xchg
sahf
xor
jne
mov
dec
rcr
add
adc
movsl
cmp
mov
fwait
cmp
mov
flds
fadd
jle
je
dec
loope
push
js
inc
mov
push
out
repz
adc
sbb
mov
pop
ja
inc
movsl
out
imul
loopne
sub
dec
imull
test
in
popa
adc
stos
mov
out
stos
dec
mov
cmpb
lods
inc
mov
mov
xor
add
test
lods
insb
and
out
or
jo
and
jae
jge
xchg
shl
xchg
call
adc
sub
mov
lahf
orl
sbb
cltd
lret
sbb
jmp
dec
inc
push
test
pop
or
push
mov
jp
insl
jbe
pop
or
arpl
stc
aad
mov
pop
xor
fstpl
cmp
jmp
add
mov
daa
add
adc
and
push
sub
adc
imul
sbb
cmc
jae
stos
push
jle
mov
xor
call
hlt
addl
shr
mov
orb
int3
and
push
inc
fidivl
ja
addr16
pop
nop
test
add
cmp
icebp
jecxz
lock
lahf
jle
out
cmc
xor
pop
mov
sub
jl
out
loope
sub
mov
inc
loop
test
int3
xchg
push
pop
testl
fcmovb
adc
cmovp
fimull
xorl
or
mov
mov
jbe
sub
mov
out
inc
stos
dec
hlt
in
fucomip
outsl
pop
repz
adc
dec
jecxz
mov
dec
or
or
xchg
or
nop
adcl
xlat
mov
xchg
mov
pop
movsl
and
test
xchg
aam
add
fdivp
push
jl
or
in
mov
mov
inc
dec
push
addl
pusha
popf
cwtl
out
mov
xchg
lahf
xchg
sarb
fs
adc
pop
hlt
mov
add
lds
ficoms
adc
push
test
mov
cmp
fabs
xchg
pop
out
or
push
out
jns
pop
pop
sub
stc
sarl
jnp
adcb
adc
frstor
ret
mov
inc
cmp
xchg
pop
loop
cmp
push
leave
sarl
sbb
mov
fidivrs
lods
sahf
outsb
dec
rcll
pop
push
rorl
dec
movsl
fidivl
pop
xchg
mov
insb
push
xchg
mov
leave
pop
mov
and
mov
mov
mov
mov
mov
pop
and
pop
ficomps
lods
je
fs
cmp
loop
sarb
xor
jo
mov
out
nop
inc
adc
pop
icebp
and
fxch
lahf
xchg
and
cmp
sbb
inc
jb
or
xchg
push
cmc
test
addr16
int3
in
or
test
mov
repz
addb
inc
push
lods
dec
sub
sbb
add
mov
and
xor
lea
pop
push
out
lods
adc
mov
xor
mov
dec
je
xor
xchg
pop
mov
jo
cs
dec
scas
testl
add
ss
hlt
adc
enter
inc
rorl
icebp
ss
jb
mov
adc
sub
sbb
stos
dec
cmc
rolb
cmp
or
sbb
push
xchg
jp
cmp
push
arpl
movsb
test
push
inc
and
mov
mov
aas
and
push
test
popf
cmc
and
in
bound
pop
sub
ret
imul
scas
enter
cmp
fbld
repnz
nop
jl
cmpsl
sbb
popf
mov
push
sbbb
div
call
loop
call
push
sti
out
shrb
pop
push
in
cmpsb
fidivrs
mov
test
and
inc
inc
ficoms
idivl
ja
mov
rcrl
sar
je
and
pop
les
fdivrs
lods
xchg
lea
inc
arpl
lock
sub
xor
cmp
push
push
lods
push
shlb
add
movsl
out
pop
inc
stc
sub
cmpsb
sbb
cmp
lds
xchg
pop
fstpt
and
xchg
mov
js
iret
jno
inc
pop
mov
popa
out
jae
add
hlt
leave
into
popl
lcall
jl
xor
add
xor
push
cmpsb
repz
push
out
mov
push
push
jo
jg
ljmp
pop
and
mov
adc
cmp
loop
cltd
add
add
jns
add
or
mov
xchg
shr
mov
jnp
aam
dec
mov
pop
sbb
int
int
mov
inc
gs
jb
aam
repz
push
int3
lret
loopne
ud2
test
adc
sbb
sbb
pop
lcall
roll
sub
and
mov
mov
mov
cmp
adc
mov
repnz
xchg
fdivrs
mov
hlt
enter
sub
inc
inc
inc
cmp
jp
pop
pop
enter
ret
in
adc
lds
stc
stos
jns
int3
xchg
aas
mov
das
inc
test
sbb
mov
and
jae
aam
jl
rol
into
mov
xchg
or
pop
mov
enter
clc
jmp
imul
scas
and
rolb
mov
insb
add
ja
sbb
mov
xchg
pop
jo
sub
int3
dec
mov
addr16
xchg
inc
mov
mov
in
adc
int
ret
cmp
in
push
and
mov
filds
rcll
mov
test
ret
aaa
mov
out
cli
movsl
and
gs
scas
cmp
sbb
mov
xor
sbb
fidivs
std
adc
ljmpw
adc
dec
adc
xchg
add
push
sub
fisttps
mov
cwtl
xchg
outsl
add
and
out
jno
mov
ret
mov
ret
aaa
fdivrl
dec
mov
int3
push
outsb
adc
lods
sub
add
outsb
xor
ss
add
jmp
inc
add
shrb
pop
add
ds
add
push
stc
jnp
std
cmp
cmp
or
adc
jae
sub
ror
pop
mov
jecxz
mov
mov
jg
imul
inc
mov
push
adcl
daa
and
das
mov
in
popa
sbb
popa
jge
lret
insl
xor
loopne
lock
fwait
inc
jle
dec
or
mov
mov
lds
and
iret
jecxz
and
outsb
lret
out
jb
clc
paddsb
repnz
push
aas
js
inc
add
loopne
sub
inc
dec
cwtl
jae
arpl
dec
dec
pop
mov
push
and
inc
ret
ret
cmc
adc
andl
and
insl
xor
cmp
test
add
adc
and
xor
out
in
jecxz
sbb
jb
push
repz
and
dec
scas
mov
cli
xchg
xchg
addr16
pop
push
lret
gs
fsubrs
xchg
ret
mov
jp
lret
ficoms
sub
push
mov
xchg
stos
add
dec
mov
adc
dec
pusha
inc
loope
mov
mov
fiaddl
jge
fdiv
dec
mov
mov
sub
push
fistl
adc
push
pop
shl
adc
sbb
push
fcoms
out
addb
jmp
sbb
bound
fnstcw
jg
add
mov
orl
fistl
xchg
ja
dec
icebp
add
out
ss
lods
loope
test
fcoms
mov
addb
imull
jge
clc
mov
frstor
pop
fs
sub
lds
push
mov
ret
addr16
jnp
push
dec
xchg
mov
and
jno
push
mov
mov
inc
andb
rcll
jl
adc
inc
adc
stc
jbe
subb
testb
vmrun
and
lahf
sbb
arpl
xchg
lret
fstps
shr
xor
jbe
out
in
mov
mov
rcrl
fsubrl
cmpsb
imul
loope
aad
fcoml
repz
in
lock
lahf
xchg
hlt
sub
or
cmpsl
or
push
rorb
adc
repz
push
sub
mov
in
orb
and
dec
test
cmpsl
lock
cmp
mov
inc
adc
dec
dec
and
cli
add
mov
out
scas
sbb
sub
dec
xchg
idivl
pushf
aas
and
outsl
mov
and
or
sti
sub
adc
imul
daa
cmpsl
mov
jo
lret
lock
sub
ficomps
js
push
cmp
stos
dec
mov
and
jne
movsb
xor
or
mov
adc
stos
bound
and
int
pop
dec
inc
mov
arpl
outsb
shl
push
fsubr
xor
test
out
push
xchg
scas
pop
addl
mov
popa
and
mov
test
adcl
xchg
jne
pop
lock
jmp
sub
push
psraw
xchg
cwtl
lret
nop
incl
cli
pop
decl
mov
jp
inc
dec
pop
or
ret
sub
mov
pop
mov
sub
call
xorps
jmp
xchg
jnp
lods
mov
test
xchg
sub
jp
pop
sub
mov
lahf
push
add
jle
mov
dec
std
cmp
pushf
sub
cli
mov
js
fldenv
or
or
jg
lcall
mov
mov
std
pop
and
fcoms
jmp
push
inc
and
int3
xor
jmp
push
bnd
pop
testl
lahf
add
es
jmp
in
pop
popf
jnp
movsb
jb
cmpl
pop
dec
xchg
cmpsl
mov
xchg
cmp
xchg
cmp
in
cmp
daa
push
cli
cltd
fptan
add
repz
scas
mov
shlb
xlat
sbb
mov
in
cmp
mov
shrl
insb
sub
mov
shl
mov
mov
ss
xor
aad
pop
mov
add
cmp
mov
inc
jb
lret
dec
std
rcl
inc
stos
or
xchg
scas
inc
mov
sbb
daa
cmc
ss
dec
ss
out
lahf
mov
test
dec
rcll
push
or
push
aad
dec
pop
sub
and
xchg
in
bound
out
adc
sub
pop
jb
stos
push
add
scas
push
icebp
inc
xchg
jnp
test
lcall
mov
pop
sar
xor
out
ss
mov
add
pop
mov
jo
pop
movsb
mov
sti
add
clc
mov
inc
jae
add
mov
pop
adc
out
int3
push
push
inc
xchg
aad
scas
adc
popa
cltd
dec
add
push
inc
cmpsb
xlat
out
push
jp
aam
sarb
dec
movl
cmpsl
push
push
mov
iret
in
fsubl
leave
lock
push
and
sub
inc
and
test
dec
cmp
out
push
cmpb
push
mov
inc
xlat
mov
cli
int
movups
cmp
das
cs
insl
jbe
in
mov
stc
lock
adc
or
cmp
add
pop
data16
dec
adc
outsb
mov
lea
sbb
pop
jnp
push
jecxz
cmp
mov
mov
xchg
jmp
pop
sub
add
mov
out
mov
mov
cmp
jecxz
push
fucomi
push
adc
ror
pushf
mov
stos
pop
cmp
inc
mov
fsts
out
insb
in
fwait
sub
cmp
jmp
inc
adc
inc
and
fcoms
push
adc
shl
inc
dec
loopne
mov
push
lods
cli
mov
rorl
int
jle
push
jecxz
scas
enter
xchg
mov
pop
sbb
cmp
xlat
fdivr
enter
inc
or
jge
cmp
dec
cld
hlt
push
jne
and
adc
mov
mov
outsl
test
jnp
test
jno
inc
sub
and
out
ja
xchg
gs
movb
inc
fdivrs
dec
xchg
ss
mov
jno
fiadds
das
inc
inc
movsb
jbe
stos
sub
and
mov
lret
mov
icebp
jne
push
imul
clc
pop
aad
je
int3
shrb
nop
push
push
bound
aaa
cmpl
clc
faddl
outsb
test
lret
jecxz
addb
and
repz
icebp
sub
xor
cli
inc
jnp
sahf
insl
mov
es
movsl
cmc
push
add
test
call
and
sbb
push
in
push
hlt
enter
insb
loope
pop
sbb
popa
sti
arpl
cli
xor
sbb
add
mov
xchg
mov
rol
or
sub
and
fsubs
xlat
xchg
rcl
mov
sbb
sub
inc
in
pop
xlat
test
inc
jns
add
test
jl
xlat
rclb
fcmovb
and
sbb
fwait
mov
adc
fnstcw
das
dec
int3
sub
cld
fcoml
jle
mov
push
insl
add
push
inc
lret
add
mov
mov
lea
push
mov
adc
lds
sarl
test
xlat
mov
lds
jae
sub
sbb
mov
or
andl
shl
movsb
adc
sbb
adc
and
mov
pop
inc
ja
mov
mov
sub
mov
and
mov
push
mov
push
int3
in
cld
subl
cltd
or
mov
jge
jbe
xchg
sub
jmp
xchg
add
mov
push
clc
cmp
cmp
xor
ficompl
imul
inc
mov
loop
js
sbb
in
cmp
arpl
ret
shl
cmp
mov
ljmp
xchg
mov
mov
out
xor
adc
xchg
inc
insb
decl
xor
sbb
mov
mov
xchg
pop
pop
ljmp
push
sub
pop
dec
outsl
jo
decb
jbe
popf
inc
hlt
out
sarl
mov
pop
push
insb
dec
repnz
jo
mov
add
stos
in
rcl
iret
mov
and
adc
cmpsl
pop
sbb
mov
inc
cwtl
cltd
mov
daa
fstp
icebp
out
inc
mov
push
and
pop
lret
repnz
mull
add
cs
inc
inc
rcpps
adcl
push
sti
test
jmp
add
daa
mov
add
xor
lds
mov
rcr
mov
mov
cmpsl
dec
sbb
rorl
pusha
fwait
xchg
and
mov
mov
pop
fildll
iret
sbb
xchg
xchg
repz
pop
cmc
andl
pop
fbstp
inc
fbstp
xchg
loop
test
lods
imul
cmp
sbb
or
dec
mov
dec
stos
dec
jge
xchg
add
iret
pop
loop
sbb
fwait
mov
dec
cmp
push
jg
hlt
and
mov
dec
sbb
xor
push
fstpl
sti
add
xchg
pop
ret
imul
in
ret
push
inc
test
out
and
insl
std
pop
jcxz
fldcw
add
pop
ljmp
lds
stos
push
adc
or
in
pop
int
lea
popf
adc
addr16
mov
xchg
lods
or
add
je
cmp
pop
sarl
ss
mov
icebp
and
int3
sub
aam
mov
insl
pop
and
out
push
cmp
mov
push
sub
cmp
mov
neg
jge
xchg
or
sub
sbb
addb
jge
cmp
cmpsb
mov
stos
jp
adc
je
out
ret
and
js
mov
dec
fstps
rorb
repz
dec
pop
jnp
add
std
cli
sar
jg
or
leave
je
pop
mov
dec
mov
notb
and
icebp
fidivl
mov
pop
pop
mov
ljmp
sbb
xchg
jp
test
xlat
pop
aaa
push
aam
push
push
shrl
out
push
sub
or
sti
sarl
loop
dec
into
lret
jbe
ret
add
cltd
pusha
xlat
push
mov
movl
pop
add
mov
cmpsl
jns
sbb
inc
adc
aaa
iret
xor
ret
test
cs
iret
push
push
inc
xchg
imul
movsl
dec
int
dec
mov
scas
sub
cmp
cwtl
ret
mov
xor
jge
push
xchg
enter
and
mov
lcall
adc
fisubs
dec
dec
cmp
jne
je
mov
xchg
bound
outsl
sbb
and
and
or
arpl
cmp
lods
and
in
test
adc
pop
mov
sbb
out
xlat
xchg
sbb
sbb
push
test
xchg
lds
xor
xor
jnp
pop
push
stc
push
inc
lock
outsb
push
and
jne
out
sub
dec
add
clc
in
xor
sub
mov
inc
adc
jp
subb
mov
outsb
int3
mov
mov
int3
in
lahf
jne
insb
pushf
orl
scas
stos
sbb
aas
imul
sbb
out
mov
jo
and
push
int
out
push
adc
adc
adc
mov
stos
add
rcrl
fucomip
sbb
enter
lret
xor
pop
je
mov
leave
sbb
fdivl
lret
pop
packssdw
das
insb
cmp
orb
sub
in
loop
jo
repz
aad
aas
notl
arpl
mov
sbb
fistl
jle
mov
loope
push
xchg
insb
fsubrl
cmc
aam
ror
cs
xor
push
std
sub
add
dec
mov
ss
mov
stos
and
and
das
rclb
cmp
add
aam
dec
add
push
xchg
test
dec
adc
push
sub
les
xlat
xchg
xchg
xor
mov
popf
or
lods
inc
not
lods
cmp
jge
xlat
pop
adc
mov
pop
dec
inc
xlat
mov
adc
push
adc
shrd
jge
push
add
cwtl
icebp
das
dec
xchg
fwait
inc
lahf
push
in
mov
mov
adc
add
out
flds
and
inc
call
aas
and
adc
stc
mov
xor
xlat
das
pop
in
outsl
sahf
cmp
ret
aam
dec
sub
jo
adc
pushf
xor
test
fldcw
pop
sarb
xor
cmpsl
sub
sti
mov
ljmp
push
jne
loop
aad
inc
stc
mov
int
mov
mov
adc
out
mov
inc
cltd
cmpsb
fdiv
loop
into
adc
mov
xchg
sub
cwtl
inc
sbb
out
jle
push
loope
mov
mov
lods
in
sbb
add
add
je
arpl
test
xchg
sub
das
add
std
xor
sub
jb
cmp
sahf
fdivrl
push
outsl
pushf
repz
imul
pushf
in
xor
repz
data16
cmp
lea
mov
fsubl
jo
push
clc
pushw
pop
or
xchg
mov
add
push
adc
add
in
pop
or
or
mov
adc
dec
aad
cltd
adc
mov
cmp
dec
mov
aam
sbb
repnz
push
jo
jle
xor
mov
xor
insb
cmp
or
cmp
mov
std
sbbl
jp
stos
dec
stos
xchg
sbb
cmp
jns
scas
ffree
jecxz
cs
mov
push
daa
cwtl
pushf
loope
mov
testl
fs
pop
pop
xor
pop
repz
jmp
jae
cltd
jb
jae
inc
movsb
into
dec
pop
adc
xchg
jb
and
cld
mov
shll
xchg
add
mov
or
mov
xor
ss
lea
xor
jecxz
sahf
cmp
sub
add
scas
pop
inc
cmpsl
mov
stos
push
cli
add
es
sub
mov
cmc
testl
mov
mov
lret
xor
cmp
enter
adc
adc
sub
lret
xor
stos
xchg
rcll
xchg
fs
adc
push
cmp
dec
ret
mov
fisubs
and
cwtl
daa
clc
movl
fcomps
cmpsl
jo
jge
push
ror
ss
out
repnz
sub
sub
cmp
test
cmpsl
lret
popa
je
dec
cld
mov
sub
and
inc
pop
inc
lea
cmp
push
xor
sbb
in
pop
and
mov
inc
fwait
pop
add
push
push
adc
pop
sbb
xchg
subb
js
push
test
mov
sti
leave
or
jnp
mov
inc
out
test
mov
cwtl
jb
xor
mov
addr16
push
push
xchg
sahf
mov
cltd
mov
aaa
or
testb
dec
stc
dec
or
sbb
test
jns
sbb
sbb
test
and
mov
stc
imul
fisubs
aad
and
xchg
wbinvd
sub
mov
mov
js
pop
subl
push
mov
cmp
xlat
adc
push
aas
popa
push
dec
adcl
push
out
idivb
fcomp
test
jge
inc
sub
cli
sbb
or
data16
xor
std
rcrb
adc
mov
das
pop
xchg
fistl
ret
aam
movsl
in
pop
das
in
sarl
mov
xor
xchg
clc
rorl
ss
pop
sub
xor
add
mov
jmp
in
loopne
inc
lea
dec
addr16
mov
xchg
in
out
and
pop
sub
test
mov
jmp
mov
jno
sub
mov
sub
adc
fisubl
in
sbb
or
mov
sarb
loope
add
lods
addr16
push
lods
aaa
out
test
shll
roll
fchs
call
mov
cltd
jmp
xlat
cmpsb
push
ds
jmp
test
mov
xchg
pop
sub
jp
mov
add
les
mov
mov
clc
add
sub
popa
mov
into
xchg
push
fadds
sbb
rcrl
jmp
adc
push
add
das
push
movsl
adc
clc
shl
push
aam
push
push
jmp
jle
dec
bound
mov
inc
bts
hlt
sahf
pop
cmpl
add
and
test
mov
mov
fimull
xor
xor
lds
mov
push
aad
popf
mulb
sub
dec
xor
pop
mov
xlat
mov
push
pop
dec
mov
imul
adc
mov
es
lods
sub
mov
dec
jo
pushl
mov
mov
xchg
sub
jnp
inc
jg
fistpl
and
and
in
push
dec
or
cmpsb
xlat
in
divw
subl
testl
cs
das
stos
lds
fiadds
cltd
rolb
out
xchg
jp
negl
les
push
pushf
xchg
mov
out
aas
dec
icebp
sub
cld
dec
jnp
int3
icebp
xor
jge
sarl
add
inc
in
fnstenv
imulb
enter
or
cmpl
pop
mov
test
mov
pop
jmp
pop
pushf
adc
dec
imul
cmp
ds
xchg
ret
call
popa
stc
in
enter
sub
adc
imul
in
loopne
push
jno
jge
int
dec
cmp
adc
in
inc
cmp
and
push
clc
mov
mov
loop
imulb
mov
je
push
sbb
push
orb
hlt
int
dec
popf
xor
arpl
ja
pop
int
ljmp
fsubl
sbb
jg
outsl
lods
lcall
sub
and
push
cltd
push
jo
mov
ret
cld
push
jecxz
jmp
outsl
xor
out
push
cmp
out
in
stos
invd
xor
pushf
mov
xchg
adc
test
ja
adc
pop
inc
adc
add
aas
fs
in
inc
bound
not
push
pusha
pop
mov
sub
test
out
dec
pop
sub
xor
mov
ret
xchg
or
jb
adc
jbe
jmp
aad
les
push
or
mov
aaa
fbld
mov
mov
inc
sahf
popf
jmp
inc
jne
xor
mov
fwait
add
lds
test
xor
mov
rorl
inc
jnp
ljmp
add
xor
or
inc
in
xchg
jns
repz
pop
mov
xchg
xchg
jecxz
cmp
mov
pop
mov
repnz
inc
sub
data16
jl
pushf
in
popf
divb
add
push
cld
dec
dec
jge
xchg
xchg
daa
shl
mov
repnz
loopne
ret
cmp
mov
popa
sbb
stos
jno
inc
push
fsubrs
out
and
jle
sbb
push
mov
inc
in
fs
pop
mov
fs
neg
dec
mov
lock
push
sub
dec
and
lret
mov
outsl
rcrl
lods
adc
mov
in
jl
dec
or
xchg
cld
sbb
lock
sbb
paddb
xchg
xchg
xchg
popa
mov
lcall
add
lcall
push
mov
in
inc
lods
aas
fcmovnu
push
adc
movsl
mov
sub
aaa
daa
mov
mov
lret
sbb
or
and
faddl
das
jbe
sarl
push
rcrb
adc
loop
fisttpll
aam
adc
daa
cmpsl
and
push
pop
in
or
and
mov
jle
and
testl
mov
cmp
sub
mov
ljmp
cmp
jb
das
in
mov
inc
stos
in
jnp
add
mov
mov
in
loope
sti
fwait
or
inc
and
sti
jecxz
inc
mov
repnz
sub
pop
push
loope
and
mov
cmp
call
cmp
fiaddl
popf
push
jle
sub
rcl
outsb
pop
addl
jae
lret
cli
inc
loopne
inc
popa
or
mov
sbb
push
in
adc
loop
lods
cmpsb
stc
testb
repnz
cs
xchg
shr
mov
xor
mov
test
cmp
js
pushf
sbb
or
stos
arpl
out
cld
mov
push
scas
mov
das
or
dec
stos
test
push
stos
ljmp
ja
inc
mov
aam
jl
mov
sub
push
xchg
cld
sbb
xor
cmp
subb
and
loop
cmp
mov
dec
push
fimull
lods
or
xchg
sti
notb
add
inc
push
cmc
inc
aad
scas
sub
pop
inc
push
movsl
push
cltd
mov
outsb
pop
sub
push
jmp
rcr
sub
sbb
fdivl
jl
push
jno
xchg
adcl
imul
push
pushf
lcall
sub
add
mov
cltd
mov
or
cli
sub
daa
cmpsl
push
dec
mov
inc
into
das
in
push
cs
repz
jecxz
stos
mov
xor
std
xlat
push
inc
sub
clc
jg
in
pop
mov
add
and
fistl
xor
xor
cld
mov
in
inc
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
dec
sub
xchg
cld
popa
bound
bound
mov
mov
shl
lcall
insl
cmp
mov
clc
mov
aas
adc
and
repz
xchg
jnp
arpl
jecxz
pop
sbb
inc
dec
inc
imul
subl
sbb
mov
add
daa
test
adc
push
das
sti
push
or
js
dec
popa
or
roll
icebp
ljmp
sub
xchg
sbb
push
add
pusha
das
mov
cmp
mov
data16
mov
push
movsb
lret
mov
mov
mov
jae
add
loop
pop
movsb
xchg
insl
xchg
xchg
or
adc
lods
and
push
mov
mov
add
xchg
dec
adc
push
cmp
inc
ret
out
js
add
mov
iret
xor
sub
cs
mov
and
fiaddl
lahf
loop
rcrb
xor
push
iret
mov
push
lret
push
inc
test
stos
jmp
pop
push
sarb
negb
ss
das
mov
call
jl
imul
pop
push
mov
push
enter
mov
adc
mov
jmp
dec
pop
pop
adc
lcall
jle
xchg
mov
mov
sahf
in
out
xchg
cmp
jmp
or
sbb
sar
imul
into
jmp
rcll
inc
mov
push
clc
push
or
std
or
mov
xchg
loope
rorl
bnd
mov
scas
jo
fdivs
dec
and
or
xor
in
cmp
and
jg
pusha
mov
insl
and
inc
mov
cmp
inc
xchg
mov
jne
push
and
jmp
xchg
sub
fcmovu
pop
mov
mov
mov
mov
test
lret
ljmp
inc
mov
outsl
cmp
out
test
stc
sub
mov
in
lods
jno
nop
push
leave
jg
aad
push
cmp
push
mov
add
fs
xchg
pop
std
sub
stos
pop
push
loopne
mov
fidivrl
sahf
push
in
jae
cltd
cmp
adc
in
and
nop
movsl
aas
cmp
inc
int3
xchg
ljmp
xchg
sub
add
pop
mov
lods
sub
xchg
test
aaa
jnp
clc
insb
iret
lret
push
adc
adc
push
ror
sub
and
aaa
mov
xor
mov
js
js
adc
or
mov
mov
mov
xor
or
scas
daa
xchg
data16
int3
add
fld
iret
mov
xchg
mov
fwait
pop
sub
dec
dec
add
push
stos
int3
sbb
addr16
push
mov
push
aam
cld
lcall
jp
cmp
je
js
xchg
sbb
stos
int
pusha
or
and
mov
clc
aas
and
xchg
mov
jno
inc
dec
cmp
sub
inc
jp
push
int
and
orl
lret
cmpsb
lods
and
inc
int
adc
shrb
lea
out
xchg
cli
inc
imul
mov
inc
rcrb
mov
mov
sbb
jno
adc
jle
adc
dec
mov
scas
xchg
cmp
lock
ret
push
pop
mov
xchg
jne
jg
jb
dec
in
lods
or
and
lds
and
xchg
popa
lock
pop
mov
add
mov
lcall
cmpsl
shlb
je
outsl
jmp
ret
or
pusha
shl
inc
xchg
daa
insl
leave
push
add
jp
mov
movsb
lahf
push
mov
jbe
xor
cmpsb
sbb
add
dec
cmp
js
inc
dec
sti
into
push
pop
pop
ja
xor
subl
out
ret
ret
js
mov
ja
fneni(8087
in
push
scas
mov
cmc
or
int3
lahf
jno
add
cli
sub
lods
inc
cmp
xchg
dec
mov
dec
int
test
ss
push
fists
aas
push
dec
aaa
push
lea
in
push
mov
rclb
imull
mov
push
mov
out
xchg
push
push
push
push
call
nop
xchg
ror
cmp
jns
and
out
sub
add
aaa
or
popf
aad
popa
push
cmp
adc
mov
push
jns
inc
jmp
xchg
cld
and
out
sub
mov
stos
dec
mov
je
xor
inc
cmp
pushf
push
pop
jp
and
mov
stc
cmpb
sbb
adc
out
mov
pop
imul
cmp
and
add
fiadds
cmp
pop
int3
inc
mov
push
stos
cli
mov
sbbb
orb
xchg
cmp
cmpsl
mov
cmp
sbb
nop
stc
popa
ja,pt
cmp
dec
mov
out
nop
out
add
push
addl
inc
dec
fsubs
loop
loope
inc
cwtl
sub
inc
or
mov
and
cmp
adc
lea
mov
add
sbb
aaa
repz
pop
shrb
push
insb
jecxz
xor
mov
bound
cmpsb
and
adc
push
mov
inc
ds
hlt
es
pushf
out
or
roll
adc
push
or
loop
cmp
ret
or
lea
add
push
xchg
inc
pop
mov
cmc
je
xor
cmpsl
scas
sub
cmp
adc
ficoml
out
arpl
jle
dec
inc
loopne
cmpsb
xor
lods
fld1
inc
sbb
fstl
jle
push
lahf
mov
outsl
sti
in
dec
push
in
imull
sub
jl
xor
pusha
sub
scas
mov
lret
repnz
inc
lds
inc
ret
or
xor
adc
rorl
test
inc
xchg
packuswb
sti
in
cmp
test
jns
shrb
inc
adc
idiv
movsl
add
test
push
adc
int
ja
mov
adc
cli
fistl
jo
xchg
mov
xor
xlat
pop
insb
sbb
and
popa
insl
jg
mov
ljmp
test
and
sub
adc
fimull
rorl
mov
and
in
test
jmp
mov
inc
and
mov
loop
jnp
hlt
test
jmp
add
fwait
pop
jl
xchg
mov
rcll
in
popf
mov
cmpsl
jne
push
leave
ficoms
pusha
test
out
mov
adc
imul
pop
out
and
sbb
out
std
push
outsl
mov
lea
mov
scas
pop
in
shll
int3
sahf
sbb
movsb
mov
xchg
in
js
xchg
xchg
dec
xchg
out
xchg
mov
daa
mov
xchg
fcmovu
popa
scas
jo
and
adc
cmp
add
movb
ret
nop
stos
and
movsl
cmp
es
pusha
sahf
dec
or
pop
test
jge
mov
fsts
loope
fwait
bnd
loope
das
stos
cmp
xchg
inc
in
jmp
jne
pushf
mov
in
or
out
popf
cmp
sbb
sub
int
outsl
add
push
nop
inc
jecxz
lea
into
rol
xchg
xchg
jecxz
add
cltd
js
mov
stc
ds
gs
and
jl
in
cmp
adc
iret
cld
or
jnp
jae
test
mov
out
jl
xchg
enter
in
test
cmp
push
cmp
dec
lds
imul
shll
in
js
cmpb
xor
out
daa
xor
and
dec
ss
fldenv
fwait
xorl
jae
push
fadds
push
fidivrl
pop
dec
mov
push
push
insl
cmp
xor
orb
mov
xchg
aam
mov
jo
mov
mov
mov
sub
push
popf
mov
aas
pushf
out
jp
dec
cmp
adc
cmp
xor
shll
xchg
xor
ljmp
lret
sarb
ret
cmpsl
jns
sub
ret
xor
push
xor
pushf
fsubrs
lods
pop
mov
mov
mov
dec
vmwrite
dec
mov
sub
lods
push
or
adcb
push
fdivrs
jbe
cwtl
ds
push
and
mov
add
es
adc
xor
or
out
stc
dec
out
cmpsl
sbb
push
repz
cmp
inc
ja
xor
cmc
push
mov
mov
stc
cs
inc
adc
fsubs
push
into
mov
insl
js
inc
dec
nop
push
pop
mov
ret
rolb
outsl
jl
cmp
cmp
rorb
xchg
repz
pop
and
aad
push
sub
pop
mov
inc
mov
insb
jbe
or
bound
arpl
jge
lahf
cld
dec
sbb
mov
lret
xchg
mov
mov
repz
add
inc
inc
fisttpll
scas
lahf
push
xorl
or
stc
out
lds
mov
inc
scas
cs
aas
mov
jbe
xor
push
aam
jno
loop
or
in
std
stos
mov
and
jg
mov
or
and
push
push
or
ret
aam
lods
aam
mov
dec
mov
dec
xor
sub
test
pop
repz
sub
js
cmp
push
xor
in
mov
mov
push
outsl
lret
and
lock
arpl
aam
test
cmp
nop
pop
daa
mov
push
cld
push
jg
lds
test
aas
jmp
aaa
ret
xchg
es
jp
aaa
mov
fsubr
lcall
cmpsl
out
mov
adc
sub
or
adc
daa
imul
lea
pusha
bound
pop
push
nop
out
add
xchg
cmp
lods
pop
mov
sbb
push
nop
lahf
pop
mov
pushf
arpl
test
jmp
je
test
jnp
cmp
cmp
arpl
movsb
push
cwtl
repnz
jmp
jbe
fldenv
cmp
xlat
jl
xchg
xor
sti
jg
pop
or
xor
add
fisubrl
lods
pop
callw
jno
or
insb
fisubrl
movsl
fistpll
adcb
lock
in
fstps
dec
sti
lea
call
in
push
mov
or
sub
mov
jl
or
addb
sbb
xchg
push
ret
inc
xchg
mov
add
sti
xor
xor
jb
outsl
add
popl
int
lock
push
icebp
jns
test
sbb
jp
xlat
lret
imul
pop
xlat
addr16
jb
icebp
popf
push
inc
mov
movsb
mov
adc
or
inc
lcall
jge
jl
xchg
std
cmp
mov
repz
xlat
mov
xadd
mov
fnsave
imul
leave
pusha
push
xchg
sbbb
sbb
mov
inc
mov
ds
in
and
mov
cmp
popf
sbb
fcomip
push
cli
xchg
or
hlt
setle
jns
pusha
push
fs
cmp
aaa
pop
cli
jno
push
inc
sti
mov
inc
loopne
out
pop
repnz
add
imul
mov
nop
cmpsb
ret
jge
mov
hlt
ljmp
out
add
jmp
xchg
sarb
pop
insb
jne
xor
out
sbb
std
stc
sahf
rcl
subb
fstl
mov
or
pop
pop
addl
or
sbb
jo
xorb
sub
imul
mov
daa
outsl
std
in
sub
cmpsb
add
cld
pop
fwait
and
inc
ja
jb
icebp
sbb
push
sub
lret
xchg
push
loope
adcb
mov
ja
jecxz
sub
mov
xor
out
popf
popf
pop
fimull
mov
push
outsl
ret
and
in
push
lahf
addr16
push
test
dec
test
test
aam
mov
push
dec
dec
repz
imul
scas
push
cmpsb
outsb
adc
ret
jmp
bswap
outsb
lods
add
adc
cmpsb
les
cli
push
repz
add
negl
jbe
insl
inc
xchg
or
mov
mov
rorl
inc
pop
mov
xchg
pop
sbb
mov
adc
scas
jns
cli
cmp
testl
aad
pop
std
sbb
movsb
outsb
mulb
inc
fwait
xchg
inc
mov
and
test
ljmp
add
gs
jl
inc
push
mov
icebp
xor
inc
les
std
xchg
enter
repz
mov
jbe
pop
inc
cmpsl
cltd
aam
imul
xor
es
and
cwtl
jmp
fdivrl
or
cmp
std
mov
xchg
xchg
lret
clc
and
xchg
xor
cmpsl
test
sar
movsbl
scas
fldln2
push
push
pop
dec
cmp
sbb
in
repz
loop
add
outsl
sbb
dec
ret
sub
shrl
aam
xchg
xchg
out
sti
pusha
or
test
xchg
jecxz
out
pop
ror
inc
addr16
cmp
and
call
mov
cmp
icebp
pushf
iret
xor
and
addb
mov
sub
movsl
push
mov
or
dec
mov
lods
mov
mov
shll
cmc
mov
call
jb
pop
jecxz
or
sbb
adc
mov
inc
pop
call
jbe
outsl
addr16
sti
dec
pop
lods
lea
cmp
test
cmovg
jp
repz
sub
xor
outsb
pop
pop
mov
jmp
dec
loope
int3
outsb
xor
out
push
cmpb
cmp
lcall
dec
cli
in
mov
dec
je
dec
loope
jbe
ret
jnp
cwtl
fstps
mov
pushf
bound
pop
ds
jp
lahf
dec
jae
push
push
mov
adc
shlb
inc
add
xor
inc
ds
addr16
push
loop
ret
fiaddl
cwtl
pop
rclb
imul
push
xor
dec
pop
and
fildll
jne
fdivr
cmp
shr
rcll
es
jae
jb
addl
insb
xchg
push
addr16
icebp
outsl
add
outsb
sub
jo
ficomps
mov
mov
push
and
bound
pop
mov
in
rol
movsb
push
repnz
fisubrs
mov
out
lods
cmp
js
sub
into
mov
or
mov
mov
adc
inc
out
adc
cltd
dec
adc
shl
push
les
ds
lret
mov
mov
dec
aam
int
and
add
std
mov
mov
insl
lcall
mov
cmpsb
xor
mov
mov
xchg
dec
jmp
je
cld
cmp
jno
xchg
pop
enter
fidivrl
push
fisubl
jmp
cwtl
pop
fwait
mov
mov
jle
sub
pushf
push
enter
lahf
stos
cmp
in
or
pop
daa
add
jp
xchg
out
and
pop
push
inc
dec
loopne
loopne
adcl
int3
push
iret
xor
lcall
into
inc
cmp
xor
inc
sub
or
cmp
iret
mov
sub
jp
stc
xchg
sahf
adc
fbstp
out
cld
and
pop
cmp
test
lock
loopne
aam
mov
pop
stos
es
pop
js
xchg
xor
inc
scas
mov
push
inc
xor
pushl
lock
leave
pop
js
mov
cs
pop
inc
xchg
mov
adc
and
xlat
adc
adc
lods
push
jecxz
push
shl
push
orb
rcll
dec
dec
fsubs
push
xor
ret
mov
sbbl
or
test
jb
loope
shlb
xchg
add
iret
xor
fcmovu
dec
push
in
xchg
aad
mov
pop
cmpb
scas
push
and
cmp
lock
ret
jo
ret
jge
popa
dec
xor
sbb
test
inc
jle
scas
icebp
stos
mov
leave
orl
cmp
xchg
fcomi
inc
push
addl
js
adc
pusha
les
cld
dec
pusha
sub
xor
xchg
jge
push
aaa
dec
fsts
add
xchg
out
inc
sbb
dec
jle
cmpsl
push
adc
sbb
cmp
ja
fs
test
add
xor
push
lods
daa
lret
inc
xchg
add
std
ret
or
pop
lret
fs
lea
out
jnp
adc
es
aad
in
mov
sahf
scas
and
test
xchg
and
pop
adc
bound
insl
dec
jecxz
cltd
xor
std
jbe
jle
cmpsl
leave
jge
push
idivb
jb
fbld
xchg
lock
inc
pop
push
dec
sbb
and
jge
mov
mov
roll
in
lods
mov
cmp
xor
pop
stos
xchg
pop
sbb
int
andl
lds
icebp
enter
lock
leave
and
into
pushf
jns
mov
shl
mov
inc
jecxz
xchg
add
add
adc
icebp
push
cmpsb
stos
sub
lcall
mov
cmc
mov
in
xchg
inc
sbb
les
sub
pop
test
dec
imul
jmp
sti
mov
xor
mov
xchg
stc
xor
ret
fst
or
mov
fiaddl
shlb
mov
xchg
push
lea
aad
js
stc
into
ljmp
inc
iret
cmp
push
push
dec
fistps
inc
inc
mov
push
arpl
rorb
daa
pop
jae
cltd
sub
push
dec
ret
add
and
mov
out
repnz
dec
sbb
or
pop
add
xor
add
popa
xor
inc
inc
jnp
xchg
pop
xor
jae
mov
push
lds
pop
jo
rclb
pusha
pop
cmp
int3
in
movl
sbb
andb
jl
inc
mov
sahf
xor
js
xchg
mov
loope
mov
aam
dec
mov
jecxz
bound
jb
enter
enter
jge
cmpsl
scas
shrl
popa
jle
push
mov
xorb
push
fs
xchg
jnp
pop
mov
sbb
aas
ss
addl
push
scas
bound
mov
lods
adc
push
push
mov
clc
lcall
jnp
add
cwtl
xchg
imul
dec
push
out
mov
xchg
imul
lret
loop
push
or
and
sbb
xor
ja,pn
fildll
dec
cmpsb
into
mov
mov
andb
outsb
pop
stos
mov
mov
xor
fstps
enter
mov
push
xchg
popf
inc
fisttpl
dec
pop
xor
ja
xchg
pushf
sti
imul
push
nop
cmpsl
lds
imul
xlat
push
and
cld
and
pmaxub
test
xchg
dec
mov
jg
push
pop
pop
enter
fcompl
add
clc
jo
lret
mov
jge
into
xchg
aas
rclb
jecxz
mov
mov
lods
inc
xor
stc
xchg
mov
mov
cmpsl
mov
push
dec
inc
pop
call
mov
inc
ficomps
shl
shlb
loope
or
aaa
mov
lea
pop
hlt
mov
sbb
sub
or
dec
jmp
pop
jnp
wrmsr
mov
xchg
cld
cmpsl
cmp
in
mov
add
add
subl
inc
pop
or
xchg
lds
les
xchg
cmpsl
inc
in
sbb
jmp
inc
loope
in
and
sahf
stos
add
cs
scas
in
xor
adcl
mov
adc
or
xor
into
call
pop
sub
fdivr
bound
jae
nop
inc
push
jmp
fbld
sbb
cs
sub
popa
mov
mov
mov
adc
push
enter
cmp
and
sub
pop
fnstcw
out
jp
sub
dec
movsl
mov
mov
test
or
dec
push
push
ljmp
push
mov
insl
adc
and
stos
push
int3
cld
cmpsb
stc
adc
loop
loop
popa
push
popf
pop
xchg
adcl
sbb
mov
inc
insl
das
jno
leave
icebp
dec
fwait
sbbl
es
negb
pop
cmp
push
sti
and
push
cmp
loop
cltd
mov
sarl
xor
loope
xchg
loop
ficompl
dec
cli
mov
adc
xchg
mov
lcall
mov
cmp
and
sbb
pusha
pop
rorb
rcll
adc
sbb
mov
das
ja
rolb
inc
push
addr16
scas
fisttpll
lahf
lods
push
cmp
jg
sub
mov
xor
int
sbb
push
mov
int3
in
insb
mov
aad
popf
hlt
fcompl
xchg
mov
retw
add
push
adc
pushf
fdivrl
ljmp
loope
mov
repz
mov
subl
jp
scas
xchg
lea
mov
fistpl
inc
fwait
js
adc
and
sub
xchg
xor
sub
cltd
arpl
pop
xchg
lret
mov
int
scas
xor
pop
xchg
adc
sbb
rorb
pusha
adc
fbld
fwait
fs
fcomp
xchg
outsb
test
rcl
jmp
gs
andb
jnp
aad
sarl
shl
or
lret
jle
fistl
xlat
sbb
adc
jno
or
mov
xchg
cmp
jnp
arpl
add
orl
sbb
in
or
mov
add
pop
bound
push
adc
ss
sub
inc
fwait
cmp
ret
inc
xor
popf
jnp
inc
add
movb
mov
in
pop
cmp
push
jmp
push
repnz
insb
mov
lret
lea
add
mov
test
cmpsl
out
cs
pop
cs
fidivs
adc
test
pop
adc
sbb
mov
test
cmp
and
mov
fldcw
inc
sbb
mov
test
ret
call
mov
pop
idivl
cltd
repnz
hlt
insl
sti
cld
dec
or
xor
bound
pop
ja
jmp
xlat
add
ficoml
nop
les
insb
addr16
in
jnp
xchg
or
loop
dec
cmp
pop
push
jge
testl
jae,pn
adc
incl
push
test
push
ja
in
cmp
fiaddl
cmp
xor
jno
neg
sub
mov
in
je
xor
jmp
cmp
pop
mov
decb
or
sbb
push
in
mov
sti
mov
push
cmp
dec
cmc
and
shrl
mov
nop
outsl
jno
inc
test
test
mov
jnp
lret
jp
cmc
xor
mov
xor
pop
inc
xchg
mov
push
dec
inc
cmpsl
xchg
inc
scas
adc
mov
mov
pop
test
ret
mov
mov
lds
inc
dec
xchg
push
dec
pop
movsl
or
or
push
test
xlat
orl
shll
cwtl
adc
adc
mov
mov
lea
call
imul
xlat
xorl
arpl
sub
xchg
or
dec
mov
cmp
jle
dec
call
in
jo
movsb
lds
mov
mov
inc
mov
enter
std
movsb
testl
stos
or
and
push
pop
push
adc
loop
cli
subl
xchg
ja
pop
aas
xor
stos
jbe
mov
cmp
mov
lret
das
in
outsl
or
scas
push
cmp
add
stos
shlb
ds
in
push
adc
jns
fdivrs
mov
into
int
imul
out
pop
cmpsl
push
pop
push
js
pop
xchg
imul
gs
sub
insl
daa
lods
dec
xor
shlb
xchg
inc
mov
adc
pop
pop
cmpl
cmp
push
shll
cltd
dec
adcb
push
lret
and
pop
jmp
lods
inc
dec
cmp
iret
je
xchg
pop
and
mov
and
movq
nop
in
mov
mov
push
sub
jnp
sub
cld
mov
outsb
jb
sub
adc
popa
push
push
lret
and
or
mov
add
or
sbb
ss
addr16
andl
jp
cmp
into
cmp
mov
jp
inc
outsl
pusha
jb
cmp
sahf
xchg
push
movsb
cmp
pop
inc
je
cld
mov
mov
or
mov
mov
ja
cmp
js
add
adc
jle
ljmp
nop
sbb
cmp
in
mov
test
jg
je
test
pushf
lods
popf
out
fcoms
icebp
mov
leave
or
outsl
iret
mov
adc
aas
aas
cmp
mov
jae
adc
addr16
pop
or
mov
orb
push
test
test
sbb
inc
mov
mov
icebp
addr16
jne
lods
inc
pop
insb
push
cmc
add
ficoms
out
js
cld
xor
shrl
jbe
mov
or
sub
add
push
push
fcomip
inc
in
mov
add
inc
insb
shl
ljmp
pop
outsb
mov
inc
cmp
pop
inc
addr16
addb
xchg
insl
add
test
lods
add
mov
and
mov
jns
rorl
mov
dec
jp
mov
pop
fsubrs
cmp
lods
jo
and
dec
mov
decl
push
mov
arpl
rorb
data16
in
jecxz
std
inc
das
data16
push
inc
xor
sti
cli
pop
lods
and
mov
test
inc
fstpt
sub
and
js
inc
cmpsb
sub
add
and
pop
jae
mov
int3
inc
adc
jnp
test
icebp
dec
sbb
aad
shll
dec
inc
testl
aad
or
xor
test
cmp
push
shlb
add
add
jne
iret
adc
arpl
icebp
mov
push
stos
lock
arpl
mov
jecxz
fmul
add
call
js
imul
sub
imul
adc
arpl
add
cmpsl
pop
sti
roll
aam
shll
mov
push
adc
dec
adc
int3
sub
inc
test
xchg
xor
mov
pop
or
jns
xchg
jne
push
push
int
out
push
mov
out
sub
xor
pop
sbb
loopne
jg
int3
jge
jecxz
add
mov
push
out
dec
ss
sti
ja
div
sbb
pop
dec
test
adcb
test
stos
push
add
jmp
inc
mov
inc
rolb
cs
adc
test
xchg
loopne
into
mov
scas
adc
xorb
cmp
rorl
aam
push
js
cmp
mov
dec
arpl
fwait
or
push
mov
mov
sub
cli
pushf
inc
mov
jmp
push
js
test
or
inc
sub
xchg
add
cwtl
test
xor
pop
xchg
mov
test
cmp
into
pop
fstp
jbe
jp
xchg
jmp
cwtl
mov
sbb
sbb
mov
pushf
inc
jns
and
loopne
xchg
push
mov
outsb
jle
clc
testb
push
lods
sub
or
iret
sub
fcomps
cmp
loope
dec
push
stos
sub
jnp
jecxz
inc
sbb
push
and
sbbl
add
jno
sbb
cmp
pop
lret
ret
aaa
pop
and
sub
ljmp
xchg
das
adc
insl
out
fs
lcall
pop
ficomps
arpl
jle
dec
jmp
fdivrl
cmp
cwtl
mov
cmpsl
push
inc
mov
jmp
std
pop
cs
xor
icebp
or
arpl
testb
inc
aas
xchg
push
and
icebp
xlat
mov
mov
pop
mov
bndldx
jge
popf
aad
xor
adc
fldenv
shlb
push
gs
out
dec
mov
loopne
jnp
and
mov
jns
mov
jne
adc
sbb
aam
sbb
stc
cs
jns
sarl
repnz
inc
test
fsubp
ror
xor
mov
add
adc
mov
sub
xor
add
out
and
paddusb
test
cmpsb
lods
mov
push
addl
outsl
sbb
dec
push
ret
lret
lods
sbb
cs
adc
enter
pushf
add
xchg
sub
jmp
ja
in
sarl
into
push
imul
dec
jb
jno
aaa
repnz
rcrl
shlb
out
out
ffreep
inc
sub
mov
xchg
mov
ljmp
out
lock
adc
aam
fimull
in
ds
fs
push
inc
push
lahf
pop
jns
mov
shr
popa
jnp
stos
add
ret
scas
aad
inc
loope
or
fcomi
aas
lea
cmp
ret
add
sub
push
iret
loop
and
dec
push
shlb
loop
push
fistpll
sar
sbb
adc
pushf
call
or
jnp
jo
pop
data16
test
rorl
out
rcrl
xor
mov
mov
ret
out
iret
lods
sub
rcrl
popf
loopne
mov
pop
dec
push
std
into
cmp
push
add
push
subl
scas
sbb
cmp
jl
es
cltd
cltd
sbb
testb
jl
test
xor
imul
jnp
ret
jg
xchg
outsl
shrb
add
mov
lock
popa
and
fdivrs
mov
push
xlat
jae
mov
or
das
and
jne
and
addr16
mov
dec
popf
fwait
jno
test
lods
adc
lahf
lret
dec
loopne
add
adc
popf
scas
jg
test
inc
clc
cmp
mov
mov
xor
ret
sub
dec
loope
popa
sti
inc
into
outsl
pop
lret
cmpsl
cmp
mov
jne
sti
fwait
outsb
mov
std
out
push
pop
stos
add
cwtl
push
fmuls
arpl
mov
fisubrl
adc
pop
sti
xchg
mov
mov
cs
ja
test
push
decb
mov
inc
jmp
sub
inc
in
ss
aaa
mov
xlat
lcall
mov
rcll
xor
bound
sarl
mov
movsl
out
xchg
int3
insl
or
outsb
addr16
jge
movsl
pop
push
fstpl
mov
lods
sbb
adc
iretw
push
sub
xchg
enter
test
decl
or
sub
dec
or
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
pop
mov
cmp
bound
and
push
dec
pop
pop
jno
mov
sbb
int
and
cmp
sbb
push
cld
inc
into
jg
into
call
fstl
xchg
inc
es
decl
shlb
test
ss
scas
imul
lahf
xor
inc
xorl
dec
fdivr
fidivrs
fwait
test
cwtl
lcall
inc
jne
out
xor
ljmp
das
adcl
xor
data16
adc
sub
daa
inc
arpl
roll
gs
mov
and
mov
push
shrb
jmp
mov
in
pop
lret
jbe
je
movsl
je
rol
add
push
mov
pop
jnp
xchg
in
push
cmp
pop
inc
add
gs
xchg
ljmp
dec
pop
fisttpll
mov
mov
xchg
std
fs
adc
mov
stos
push
addr16
or
into
mov
ss
pushf
jnp
icebp
jbe
outsl
pop
fwait
mov
inc
shrl
push
pushf
sahf
jp
orb
insl
hlt
loop
rcrl
int
cmp
inc
ficoms
dec
mov
mov
ja
ss
inc
lea
loopne
mov
insl
shrb
es
outsb
push
sub
xor
jl
shrl
lds
repnz
mov
into
and
mov
fdivr
jns
add
mov
stos
cmp
inc
sti
and
jp
int
cmp
imul
jge
dec
insl
mov
jnp
scas
or
sub
and
data16
outsb
mov
faddl
xchg
xchg
andl
ficomps
inc
repz
jge
jne
scas
call
mov
sub
inc
cli
movsb
xchg
xchg
dec
scas
add
jl
bound
jmp
lock
dec
mov
cld
int3
cmpsl
stos
das
sbb
into
xor
pop
jecxz
jb
scas
leave
dec
sub
xor
lods
test
jp
addr16
aas
and
in
enter
loop
mov
leave
push
es
subl
adc
ds
out
xor
sti
sub
pop
stc
jmp
arpl
inc
mov
jnp
xchg
pop
cld
mov
add
hlt
leave
inc
mov
cmpl
xor
fstpl
stc
mov
push
and
out
sbb
xchg
decb
pop
inc
lods
add
mov
xchg
das
mov
or
sbbl
cmp
jnp
or
push
pusha
mov
jae
das
sbb
loopne
adcl
adc
stc
imul
xchg
fabs
dec
inc
bound
add
dec
mov
insl
or
mov
fnsave
mov
mov
add
arpl
rorb
sbb
xor
sbb
scas
jnp
mov
jnp
inc
movb
jecxz
xchg
jns
dec
push
mov
mov
xchg
das
adc
lret
aad
mov
loop
pusha
cli
jns
stc
push
jbe
lods
adc
sub
jbe
dec
cli
pop
fwait
mov
enter
incb
inc
cld
mov
jns
push
mov
dec
dec
push
mov
dec
inc
es
sub
mov
out
mov
cmp
in
test
popf
iret
sbb
cmp
cmc
jae
add
xlat
lds
mov
ds
inc
popa
loop
lds
arpl
jae
inc
stos
and
das
lods
out
lods
fcmovu
and
mov
add
ss
aad
in
stc
cmc
jnp
int
enter
xor
fmull
addl
mov
mov
lret
dec
sar
pop
stc
std
cmpsl
push
jle
or
mov
insl
lds
mov
or
xchg
jo
mov
mov
mov
andb
aas
jle
pop
jg
and
ss
push
mov
adc
test
mov
repz
jg
fwait
xchg
jbe
call
jb
mov
xor
push
inc
push
mov
add
cmp
out
jg
shlb
inc
or
bound
mov
adc
test
sbb
test
test
inc
iret
inc
repnz
rcl
inc
negb
in
add
and
pop
add
mov
xor
testl
lret
int
arpl
scas
mov
repnz
test
xchg
insb
stos
mov
and
jb
inc
jle
cmp
or
aas
push
xchg
push
fistpll
loopne
stos
enter
out
cmc
lret
test
mov
inc
inc
xchg
sbb
cmpsb
dec
fistl
mov
setns
test
adc
jo
xorl
jnp
lods
fs
aaa
sbb
jnp
xor
xchg
clc
popf
movsb
test
ror
jne
xor
out
daa
cmp
pop
imul
push
pop
sarb
popa
mov
jecxz
cmpsl
sub
js
adc
mov
adc
popa
xor
push
test
insl
jge
movsl
xchg
mov
dec
loopne
lcall
adc
inc
movsb
pop
cmp
scas
loope
stos
shrb
add
ret
pop
jle
fdivrs
fisttpll
ds
jecxz
addr16
ss
push
sbb
mov
sti
mov
lahf
xchg
mov
rorb
pop
cmp
jmp
push
arpl
pusha
fwait
inc
or
pop
xor
sti
jno
cwtl
cmpsb
sahf
out
pop
mov
loope
loop
sub
scas
cmpsl
neg
rcll
fistpl
xor
jno
hlt
fcmovne
stos
sti
out
sub
inc
cs
mov
aam
and
or
sub
cmp
fwait
xchg
call
jecxz
adc
inc
jecxz
loope
jl
lahf
lods
shlb
and
mov
nop
test
int3
out
imul
push
sbb
sbb
mov
test
mov
test
pop
gs
jle
jae
xchg
sbb
pop
xor
adc
cmpsb
xchg
xor
aaa
sti
sbb
repz
ljmp
sub
push
and
adc
jae
daa
mov
cli
insl
insb
and
aam
int
fisttps
js
aam
mov
sbb
mov
jp
dec
cmp
popf
pop
insl
mov
add
mov
xchg
fimull
pop
inc
adc
scas
jecxz
xorb
aaa
or
mov
fsts
push
loop
mov
or
test
scas
jb
push
lahf
add
sbb
xchg
jb
fstp
imul
mov
cmp
xor
dec
xchg
sub
mov
fimull
test
cmp
pop
xchg
das
mov
int3
adc
aas
imul
sahf
cmp
repz
mov
xchg
out
in
xchg
subl
hlt
rep
in
cli
jg
or
mov
push
sub
inc
sub
outsb
jne
sarb
push
inc
and
ds
push
cmpl
and
aad
cmp
or
pop
dec
nop
sbb
enter
xor
lret
sbb
mov
push
mov
and
cmpsb
push
push
frstpm(287
jl
addr16
outsb
or
push
outsb
scas
repnz
mov
xor
push
ret
mov
pop
mov
jge
pusha
mov
inc
and
je
les
pop
pop
pop
sti
icebp
aaa
gs
pushf
mov
lfs
push
out
mov
jle
outsl
or
daa
inc
ficomps
in
mov
sub
and
movsl
mov
mov
cmpsb
pop
inc
pop
movsl
jmp
aam
fldenv
andl
push
mov
adc
incb
rcr
sub
stc
stc
fnstenv
loopw
aaa
xchg
ja
in
xor
and
jno
std
vxorps
cmp
lahf
jae
dec
jns
cmp
or
jno
adc
test
fimull
sbb
jl
aad
sbb
cmpsb
adc
cmp
addr16
hlt
mov
jle
js
bound
xor
in
adc
mov
and
add
xchg
popa
sub
and
cmp
xchg
jl
rcrb
fistps
jno
adc
sbb
shrb
dec
and
dec
cmp
mov
push
das
jge
decb
lock
lods
fisttps
xor
push
gs
lock
push
jo
out
in
sub
nop
loopne
arpl
inc
jns
or
daa
ret
sbb
mov
mov
mov
jmp
ret
stos
or
insb
arpl
jg
or
or
jae
or
ret
mov
into
leave
out
fucomi
mov
mov
or
mov
testb
pop
dec
xor
clc
hlt
add
lret
lcall
bound
xchg
les
shr
test
xchg
sti
enter
xchg
mov
or
fisubrs
lret
inc
or
sbb
aam
cvtps2pi
add
sbb
cmp
xor
adc
lods
jg
outsb
xor
xor
sbb
insb
xchg
and
xor
loopne
adc
jns
cltd
xchg
mov
push
scas
push
jo
sbbl
xor
shrl
pop
sub
in
in
fst
sbb
jp
xchg
add
icebp
test
shlb
adc
mov
lods
add
xor
insl
movsl
mov
repnz
adc
movl
jae
mov
data16
fwait
xchg
jge,pt
fnstenv
adc
repnz
data16
inc
mov
xor
fwait
lods
push
xchg
xor
sbb
pop
xlat
pop
nop
or
jl
enter
int3
js
repz
mov
lods
pop
mov
mov
dec
into
sbb
subb
bound
pop
xchg
or
add
jmp
inc
scas
out
or
mov
dec
inc
movsl
and
mov
stos
adc
and
pop
push
sahf
inc
mov
cli
jg
lea
aaa
cmp
dec
shll
outsl
jbe
insb
xchg
iret
push
aas
movsl
mov
adc
dec
mov
rclb
cwtl
adc
and
pop
rorb
cmp
insb
popf
inc
adc
or
cs
jge
dec
jmp
pop
push
lret
cmp
jecxz
fwait
push
xor
push
push
ret
loope
mov
mov
addb
xor
pushf
lock
cli
mov
cwtl
repnz
popf
cmp
xchg
imul
inc
xor
rcr
push
add
or
iret
imul
sti
jne
scas
lds
clc
fidivrl
adc
mov
dec
and
popa
adc
adc
push
and
repz
call
jp
cltd
push
call
pop
mov
pop
inc
cs
addr16
dec
mov
and
adc
add
out
and
out
movsb
rorl
negl
insb
fisttpl
lods
into
into
das
call
sti
mov
push
xor
inc
out
and
mov
xchg
pop
xor
adc
xchg
fnstsw
movsl
mov
jmp
cmp
out
enter
hlt
int
xchg
or
mov
movsl
das
js
scas
cld
mov
movsb
clc
fcoml
adc
dec
jecxz
pop
mov
scas
pop
test
add
pop
inc
dec
sbb
rclb
mov
cmc
pusha
inc
sub
pop
mov
pop
cmpsb
repnz
std
leave
add
adc
fidivrl
or
cld
dec
les
loop
inc
bound
mov
cwtl
int3
push
inc
or
imul
enter
sar
mov
scas
mov
fwait
mov
xor
and
pop
add
mov
scas
mov
jl
nop
movsb
jb
add
je
stc
push
roll
mov
icebp
or
pop
mov
cmp
out
dec
div
cmp
xor
lods
sub
pop
jno
add
sub
outsb
mov
push
in
jg
add
mov
enter
dec
push
std
xor
pop
adc
out
shr
jmp
adc
mov
sahf
lahf
jne
push
pop
xor
push
push
adcl
cmp
mov
ss
sub
push
push
jb
lea
inc
inc
lods
or
mov
adc
adc
mov
aaa
ret
hlt
aam
dec
mov
gs
test
lret
mov
loopne
enter
loopne
push
js
jo
in
jmp
int
xchg
fdivrs
push
ficoml
in
test
leave
notb
add
jne
and
cmpl
mov
fnstsw
movsl
pop
cwtl
xor
cmp
mov
mov
or
mov
movsb
movsb
sbb
repnz
in
nop
sti
imul
sti
daa
inc
xchg
xchg
mov
and
cmp
or
out
or
nop
sbbl
repz
mov
jmp
divb
ja
inc
stc
pop
dec
lods
xor
xchg
inc
ret
cltd
aaa
xchg
ficoml
insl
popf
movsl
packssdw
rorb
aad
in
jo
push
call
cmp
in
lods
jl
cmpsb
or
push
ret
xchg
repz
inc
inc
or
movsl
out
sti
cmc
xchg
add
sti
cltd
or
call
push
add
jno
ljmp
sub
scas
fs
jbe
pop
ret
scas
test
xchg
xlat
xchg
adc
pop
int3
mov
jge
cmc
dec
arpl
dec
fyl2x
mov
sub
mov
xlat
xor
fisubs
mov
and
xor
and
inc
std
xchg
pop
inc
sahf
popf
xor
jo
dec
ficompl
in
mov
les
mov
daa
or
pop
jmp
sti
sub
cli
inc
jns
mov
and
xlat
cwtl
jge
jno
imul
adc
cld
mov
xchg
jp
xchg
repnz
and
insl
or
push
pop
pusha
call
sub
adc
int
mov
int
xchg
xchg
pushf
mov
mov
int
stos
mov
into
rorb
xchg
outsb
dec
mov
pop
stos
fwait
cld
mov
xchg
mov
fiaddl
pop
flds
fs
dec
lret
or
or
int3
sti
push
mov
imulb
xchg
int3
or
inc
popa
in
ficompl
cs
sbb
mov
push
mov
clc
insb
data16
inc
andl
dec
jecxz
pop
mov
stos
stos
cmp
push
jb
jg
or
mov
pusha
jo
push
movsl
repz
lahf
sahf
adc
ret
or
fimull
pushf
cmp
nop
mov
ret
clc
gs
outsb
cmp
jbe
sub
mov
adc
push
xor
fcmovb
in
or
add
loop
out
out
data16
xorl
cmpsl
lret
ret
pop
jb
out
xor
adc
jnp
push
jae
shll
sbb
out
push
push
push
push
icebp
hlt
test
ljmpw
or
inc
cld
jp
adc
je
adc
cmp
out
shrl
stc
adc
and
lods
iret
lods
push
adc
pop
stc
push
lds
test
sbb
mov
push
xor
sub
bound
add
ficoml
rcll
dec
out
dec
or
dec
jp
xchg
pushf
mov
jmp
jecxz
jge
imul
cmp
loopne
lods
dec
jae
ret
or
or
data16
fists
daa
out
aaa
adc
mov
adc
ror
pop
das
mov
sbbb
mov
data16
lea
lock
dec
int3
xchg
xchg
xchg
fwait
mov
fnstenv
lods
stos
in
incb
sub
push
push
daa
or
cmpsl
pop
out
adc
aam
jge
mov
ret
dec
jg
out
lods
sub
mov
cmp
out
sarb
test
inc
int
adc
int3
shrl
xchg
sbb
lret
imul
cld
push
inc
cmc
or
lcall
mov
adc
pop
outsl
push
std
icebp
pop
jmp
cli
push
mov
adc
lods
xlat
sbb
repz
ljmp
mov
fists
insl
shll
insl
sub
lret
rol
leave
mov
pushf
push
ljmp
pop
lods
pop
popf
add
jae
xchg
add
lods
fsubs
sub
add
shll
fmull
push
or
cld
test
or
shll
ss
push
mov
lcall
cmp
mov
je
jmp
aam
jl
xchg
dec
jg
xor
dec
mov
push
sub
mov
mov
outsb
lods
in
cltd
dec
push
jmp
xor
outsl
das
rcrb
mov
fdivl
or
rcr
sbb
jecxz
jb
inc
ds
push
pop
jns
jmp
dec
iret
insb
pop
clc
cmc
inc
ret
sahf
cld
mov
push
and
sub
xor
call
mov
pop
hlt
mov
pop
in
pop
cmpsl
sub
nop
pop
mov
adc
mov
addps
out
cmc
mov
repz
lret
sub
and
dec
cltd
push
add
mov
pop
dec
xchg
cltd
or
xchg
test
xor
push
add
stos
sub
inc
lret
sbb
pusha
xchg
jbe
push
std
sti
sarl
stos
mov
push
push
jne
add
out
cmpsl
push
push
pusha
ss
and
mov
inc
mov
faddp
pushf
out
xor
push
addr16
jle
lods
loope
rcl
push
fmuls
xor
cmp
jae
adc
test
sub
lret
in
stos
lret
sub
push
xchg
mov
jp
pop
lret
sarl
mov
shrb
das
jns
xlat
sahf
rcrb
mov
cmp
fisubs
fsubrs
or
scas
sbb
sbb
fcmovne
daa
scas
nop
cmpsl
repz
dec
push
inc
inc
adc
es
and
movsl
sbb
out
call
adc
test
pminsw
dec
sub
sub
cs
int3
inc
mov
out
test
push
pop
stos
loope
push
lret
lret
fistl
inc
inc
add
in
hlt
cli
inc
push
jnp
or
mov
rclb
mov
push
fwait
das
and
xchg
push
xorl
jbe
shlb
xchg
jge
cmp
sub
mov
cmpsl
out
ds
sub
popf
in
mov
inc
mov
mov
inc
add
xchg
pop
ret
or
jp
into
xchg
add
gs
cmpsl
testb
loope
aad
cmp
push
inc
xchg
add
sbb
das
daa
adc
dec
mov
in
vucomisd
xor
push
cmp
mov
or
cwtl
mov
outsb
jo
xor
jnp
test
push
adc
mulb
inc
add
int
inc
and
rorl
nop
or
pushf
xchg
dec
cmpsb
subl
inc
cmp
out
repz
pop
pop
test
mov
lock
in
inc
jp
cmp
cmp
in
inc
mov
cld
add
ret
inc
jecxz
xchg
repnz
rcl
add
pop
enter
xor
inc
dec
push
mov
inc
aad
out
popa
jmp
add
push
andl
sbb
movzbl
pop
popa
push
pop
push
xor
jno
xchg
add
mov
icebp
xor
add
ror
mov
xor
xchg
jb
jmp
jo
xor
arpl
rcr
aaa
ljmp
in
ljmp
mov
loop
mov
pop
mov
leave
xor
mov
or
inc
addr16
mov
outsb
pop
cli
cld
pop
mov
into
mov
das
xor
out
aam
pop
sub
sub
xchg
lcall
popf
clc
daa
mov
xchg
jb
pop
aaa
insl
gs
in
pop
xor
loopne
je
in
inc
lods
xchg
adc
jge
mov
fmuls
push
dec
inc
lea
movsl
and
fmull
addb
loope
divb
cli
in
xlat
pusha
enter
fdivl
jmp
aaa
lret
addr16
lcall
outsl
lret
ds
jns
jmp
repnz
int
push
int3
adc
jo
push
sbb
andl
sbb
loopne
fisubrl
aaa
dec
cld
and
enter
fwait
ret
jns
push
call
ficompl
test
xor
jbe
lods
rolb
jg
sub
movsl
out
mov
hlt
xchg
in
out
push
inc
push
mov
mov
test
mov
test
ja
cwtl
sbb
outsb
jl
out
mov
push
xor
sbb
gs
lea
lods
out
xchg
pop
dec
mov
aaa
daa
xchg
fwait
jl
xchg
jecxz
pop
int3
ljmp
xor
cmp
fidivrs
xbegin
cmpsb
xchg
push
movzbl
mov
add
loope
xchg
jecxz
push
sub
sbb
jnp
out
or
and
out
or
outsl
loopne
leave
or
xor
pop
orb
sbb
in
lods
xorl
shll
xlat
insl
fdivrs
xchg
jmp
cmp
xor
xchg
jo
and
xchg
adc
mov
jle
xchg
jp
sbb
cmc
shlb
inc
sahf
out
mov
outsb
xchg
pop
imul
lock
pop
leave
in
inc
mov
outsl
movsb
xchg
scas
mov
jmp
sbbl
dec
and
sbb
es
fidivrl
movsl
dec
div
std
adc
push
lcall
in
jl
pop
js
or
test
ljmp
mov
push
or
scas
scas
add
loope
or
or
shll
mov
add
inc
sbb
insl
mov
mov
pop
movsb
mov
outsb
shlb
insl
push
cwtl
add
pusha
cmp
addr16
andb
insl
mov
or
fs
jecxz
xchg
orb
scas
test
dec
sti
adc
fmull
mov
dec
incl
les
fmul
sbb
ss
outsb
adc
fisubl
mov
pop
mov
nop
sbb
in
inc
xchg
in
inc
out
xchg
stc
les
stc
ljmp
lods
fisubs
dec
sbb
setno
jle
or
and
add
lea
dec
xorl
in
pop
push
in
sub
add
xchg
pop
xchg
adc
mov
or
pop
mov
into
vsubpd
mov
pop
lods
loope
bnd
movsb
inc
sbb
std
mov
mov
jp
jge
push
cld
push
adc
test
rorl
inc
fdivp
cli
sub
nop
jg
adcl
xor
pushf
sub
data16
xor
adc
mov
cmp
push
push
mov
ret
arpl
pop
repz
push
add
mov
sub
popa
mov
cld
lds
aad
repz
hlt
sbb
aam
shrb
cmp
mov
sti
push
inc
dec
lcall
or
lock
scas
inc
js
pop
mov
mov
test
push
test
dec
pusha
inc
das
movsb
subl
ljmp
fisubrl
cmp
vmaxsd
mov
inc
cltd
imul
aad
ret
pop
lahf
xchg
cmpsb
or
outsl
loope
xor
xor
dec
mov
dec
mov
add
jl
mov
or
hlt
and
mov
je
sbb
push
adc
mov
push
or
xchg
push
dec
add
mov
mov
mov
imul
inc
and
pop
mov
xor
in
adc
iret
xchg
and
inc
pop
not
rol
adc
mov
pop
in
shrl
mov
sbb
lret
js
mov
pushf
fnstsw
push
push
insb
ds
sbb
xor
jl
and
shll
and
push
xchg
insl
cmp
movsb
out
repz
in
mov
adc
add
mov
inc
mov
adc
shll
insl
xchg
js
xor
out
mov
push
pop
das
push
pop
sbb
sub
dec
idivb
or
ljmp
lahf
inc
pop
mov
inc
pop
fldenv
loopne
aad
adc
repnz
or
addr16
gs
test
ds
fcomi
orb
mov
int
psadbw
aam
fildll
jl
mov
pop
sahf
neg
int
insl
test
gs
out
out
and
sub
shll
push
ja
add
rorl
xor
jge
jmp
xchg
subl
jno
xlat
or
inc
in
add
in
xchg
mov
int3
mov
pop
dec
add
std
mov
cmp
les
shll
sahf
push
push
lea
lods
fmull
push
sub
or
jp
cmp
pop
fs
loop
fnstenv
jp
imul
pop
xchg
inc
pop
jns
jmp
into
out
mov
cmpsl
repnz
mov
test
jg
xchg
loopne
mov
inc
sub
out
mov
xor
mov
rclb
mov
insb
popa
mov
std
pandn
movb
pop
call
scas
lods
xchg
add
fildll
ds
inc
testl
cmpsl
jmp
inc
xchg
sbb
xlat
or
pop
cmpsl
dec
loope
es
pop
fildll
push
in
and
scas
pop
sub
lock
out
pop
pop
cltd
outsl
mov
stos
insb
pop
push
xor
lret
dec
jno
dec
out
push
push
cmp
mov
add
sbb
fldenv
xchg
cmp
andl
hlt
jo
es
jp
xchg
mov
int3
xchg
iret
imul
mov
fs
dec
dec
das
fldcw
ficoml
xor
icebp
insb
xor
addr16
jae
push
dec
inc
das
mov
push
jecxz
push
xchg
test
lret
or
fwait
mov
xlat
aad
inc
push
and
in
mov
aam
gs
js
add
mov
adc
jne
mov
popa
cs
mov
pop
xchg
add
dec
mul
scas
bound
cli
push
je
int
int3
dec
into
push
shl
mov
fnstsw
ret
mov
pop
je
push
mov
pusha
add
mov
sub
xchg
xor
imul
jb
push
imul
add
hlt
pusha
adc
sbb
or
loope
inc
arpl
sbb
push
cmpsl
mov
fdiv
mov
mov
adc
loope
mov
mov
mov
test
mov
mov
mov
mov
mov
sbb
dec
xchg
bound
lret
dec
mov
test
push
inc
xor
aad
mov
addl
insb
jge
add
or
inc
xlat
jbe
xchg
cltd
xor
push
push
xchg
sbb
rcl
sahf
call
cmp
mov
jne
add
mov
in
pop
testl
imul
inc
clc
mov
fstps
adc
aas
jp
and
cmp
hlt
insl
or
aad
shrl
pop
outsb
test
inc
stos
cmp
dec
cld
dec
test
push
adc
mov
cmp
mov
mov
imul
js
stos
dec
xor
mov
or
xlat
aad
xchg
psubw
mov
cmp
je
xchg
aad
rol
xchg
or
sub
add
test
cmp
scas
pop
mov
adc
out
cmp
jns
or
hlt
add
js
and
pop
jmp
or
in
lock
cld
mov
jbe
cmp
xor
ret
aam
stos
pushw
test
out
idivb
in
mov
addl
cmp
dec
pop
outsb
xor
stos
mov
adc
xchg
sbb
out
mov
pavgw
test
popa
popa
out
inc
inc
xchg
test
push
addr16
inc
xor
or
adc
ficompl
pusha
push
adc
std
lods
out
mov
jne
dec
ret
lock
aam
inc
sub
sub
mov
pop
insb
insb
pop
int3
and
iret
scas
sub
mov
vmread
sti
cmp
andb
xlat
pop
mov
pop
iret
inc
push
dec
mov
dec
hlt
daa
shl
push
rcr
mov
sbb
test
xchg
mov
andb
pop
sbb
or
rorl
out
jae
aam
add
cltd
dec
lds
movsl
into
pop
push
adc
loope
and
shrl
pop
lret
addr16
out
arpl
stos
cmp
sub
rorb
lahf
aad
lea
out
or
sub
mov
dec
fsubrs
xchg
scas
or
imul
add
loopne
push
mov
js
loopne
insl
add
add
jle
arpl
or
mov
mov
adc
movsb
sub
pop
fsubl
clc
mov
mov
pop
call
mov
jb
push
pop
ds
cmp
lret
outsb
pop
arpl
loop
xchg
fidivrs
mov
adc
xor
cmp
mov
lods
mov
lds
mov
push
jge
hlt
push
or
cmp
jno
test
mov
clc
fsubl
xor
inc
jo
jle
push
push
popf
jne
imul
aas
jbe
in
pop
daa
inc
ret
lret
jmp
fcmovnb
jmp
jne
cmp
stos
push
test
je
lods
ds
mov
ljmp
test
mov
xor
pop
cmp
jl
out
cmp
das
lret
xchg
xchg
insb
jnp
sbb
jo
cli
jo
sahf
stos
shl
sub
xor
dec
and
popf
and
outsl
sarb
xchg
ret
pop
lods
jecxz
subb
fcmovu
out
faddl
leave
daa
xor
mov
dec
outsl
jo
lods
mov
popa
out
test
push
xchg
fcomi
xor
push
xchg
pop
jmp
ret
xchg
out
in
insl
mov
mov
pop
mov
cmp
test
pop
repz
mov
fs
in
xchg
sub
xchg
sub
in
jb
mov
xchg
inc
pop
cmp
jnp
pop
repz
out
pop
shl
mov
out
jnp
mov
sub
into
testl
push
cmpsl
cltd
sub
icebp
adc
std
pop
xor
fstpl
dec
imul
orb
xor
xchg
sub
jg
cs
in
sbb
sub
popf
fucompp
mov
xor
fistpl
out
xor
and
jg
or
mov
mov
mov
push
in
inc
lret
loope
inc
jnp
aas
add
test
sub
xor
xor
sbb
outsl
dec
mov
push
dec
jmp
push
imul
fcomip
jne
insb
add
xchg
popf
mov
or
jne
cmp
xchg
push
or
mov
mov
clc
popa
cli
sub
mov
sbb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
frstor
int
add
add
sub
scas
fildll
mov
or
or
out
cmp
cmp
rcrb
cmpsl
xor
push
sbb
adc
or
cmp
sub
icebp
pushf
inc
mull
sub
or
out
lods
adc
xor
adc
xchg
jge
sbb
cmp
aad
adc
add
add
shrl
adc
cmp
out
pop
xchg
push
fcmove
add
arpl
add
stos
xor
mov
xchg
int3
gs
out
cmp
adc
xor
mov
cmp
hlt
fwait
dec
inc
std
sbb
sahf
insl
cmpsl
adc
mov
outsl
lahf
iret
jbe
fimull
imul
leave
or
out
and
adc
mov
lock
xchg
adc
rolb
add
mov
gs
mov
inc
jmp
out
add
add
pop
sub
sub
addb
into
add
arpl
add
or
jmp
sub
add
je
imul
icebp
loope
out
movsl
pop
sub
orb
ljmp
cs
jno
cs
mov
mov
inc
dec
adc
sarl
aad
std
dec
out
lea
filds
mov
in
push
shrb
mov
add
add
and
aam
aam
ljmp
je
mov
into
add
arpl
add
mov
adc
out
rcrb
scas
push
adc
adc
mov
cltd
inc
jecxz
stos
xchg
mov
lds
sub
and
dec
sub
fdivl
sbb
jae
push
cli
inc
nop
movsb
adc
xor
movsl
loop
jne
jle
popl
adc
add
add
add
mov
sti
cmpsl
mov
dec
mov
add
add
arpl
add
dec
dec
enter
or
pop
mov
ds
xchg
lcall
fsubrl
dec
adc
sbb
jb
mov
scas
add
mov
aam
push
pop
cwtl
cmc
push
adc
and
decb
dec
ret
loopne
loope
shll
shll
ss
in
fdivrl
addl
add
add
out
lods
cmp
stc
stc
lds
pcmpgtd
add
arpl
add
repnz
into
stc
icebp
icebp
outsb
inc
xor
mov
push
test
and
test
shr
jne
scas
cmp
ret
adcl
adc
xor
mov
mov
notl
loopne
imul
subb
daa
jb
xchg
idivb
add
inc
gs
aaa
push
mov
iret
add
arpl
add
lods
xor
cmp
jge
fnsave
gs
aad
inc
pop
push
scas
jmp
jmp
in
adc
out
mov
sub
sbbb
and
add
icebp
in
mov
mov
data16
sar
pop
shrl
sbb
mov
jnp
lods
jne
jno
aaa
out
arpl
add
add
adc
push
adc
cwtl
out
popa
inc
push
cwtl
mov
add
add
popa
out
sbb
stos
cld
test
sub
xor
mov
mov
stc
add
adc
mov
ss
or
push
out
and
inc
sbb
xor
xor
lea
mov
adc
mov
cmp
adc
cld
fnsave
push
int3
inc
sbb
push
lods
add
add
add
sub
das
jle
jg
imul
sbb
xor
jecxz
add
add
lock
lahf
adcb
push
orb
fwait
sbb
push
jno
push
mov
cmp
mov
pop
fistpll
xlat
mov
leave
pop
xchg
jne
into
popf
push
add
dec
int3
movsl
bound
cmpsb
nop
fistl
imulb
pop
adc
insl
push
out
xchg
mov
xorb
add
add
and
mov
mov
pop
ja
jecxz
add
add
jo
mov
jns
and
movsb
or
je
and
dec
lahf
aam
dec
jl
ss
pop
sub
jle
iret
inc
mov
test
into
mov
dec
add
movsb
std
loope
nop
inc
fsts
cli
lock
shll
scas
aad
enter
ret
xchg
push
icebp
aaa
movsl
imul
ret
or
ret
lods
sub
mov
xor
jecxz
add
add
pop
sub
dec
cmp
mov
push
and
daa
xor
pop
jp
outsb
fistl
and
arpl
int3
mov
xchg
stos
fisubl
pop
mov
ss
mov
repz
nop
test
xchg
pop
dec
adc
push
mov
cli
call
push
sarl
add
add
add
ret
pop
iret
fst
enter
xor
ja
dec
in
add
add
fstpl
repnz
inc
or
in
add
shr
adc
adc
mov
xor
loop
popa
cld
test
push
fwait
jecxz
cli
mov
arpl
or
lea
mov
sbb
jbe
iret
test
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
aaa
inc
pushf
arpl
xlat
add
arpl
add
fwait
xchg
lcall
mov
mov
hlt
mov
adc
mov
roll
mov
dec
repz
mov
pop
out
mov
cwtl
sub
fcmovu
cmpl
mov
movhps
dec
cmp
nop
dec
cmp
iret
rcll
sbb
add
add
sub
cli
jl
xlat
push
xlat
fisubs
add
add
xchg
dec
pop
out
push
gs
aam
inc
jo
sub
into
stos
out
jno
fisubl
loope
int3
dec
push
xor
ds
mov
ss
in
xchg
mulb
lods
and
sub
clc
xchg
test
dec
adc
push
in
xlat
pop
insl
jp
aam
pop
adc
aaa
xchg
insb
add
add
add
stos
pushl
xchg
push
xor
xlat
add
arpl
add
inc
int
add
push
mov
ljmp
push
mov
push
sarb
mov
xchg
sub
push
leave
mov
mov
repnz
inc
divb
lods
imul
jl
xor
dec
in
adc
cmpsl
add
sub
int
jnp
xchg
das
in
mov
pop
add
add
add
cmp
in
fimuls
sbb
xchg
dec
fadds
add
add
cmp
fcmovbe
lock
decl
daa
mov
ret
das
mov
add
pop
cmp
and
js
push
jl
dec
xchg
cs
dec
and
xchg
push
data16
sbb
sbb
mov
cmp
loop
or
outsl
jecxz
xchg
dec
daa
add
add
add
mov
sbb
std
negb
sub
mov
add
arpl
add
xchg
loope
imul
arpl
ljmp
mov
test
lahf
out
into
push
ret
out
enter
ds
cmp
mov
jmp
cmpsb
mov
sbb
xor
mov
aas
mov
lahf
push
inc
dec
imul
shrb
fnstcw
mov
sub
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
adc
add
arpl
add
inc
aaa
dec
arpl
add
inc
nop
ficomps
pop
sti
les
addr16
adc
cmpsl
inc
xor
push
xor
test
adc
cwtl
pop
cmp
insb
mov
or
mov
xchg
dec
adc
jbe
jbe
hlt
or
packssdw
icebp
mov
sub
lock
movb
in
fwait
scas
fdiv
pop
sub
add
add
add
fbld
daa
xchg
stos
in
push
out
frstor
movsl
test
xchg
mov
push
in
cwtl
call
test
iret
daa
mov
inc
xor
mov
cs
jge
call
lods
inc
rcr
nop
mov
xor
and
push
sbb
lcall
xchg
mov
add
add
push
add
xor
jb
insl
xor
and
xlat
flds
add
add
rcrl
jmp
sahf
and
cmc
mov
sti
sub
fnstsw
mov
dec
push
add
push
jne
adc
jns
arpl
mov
mov
test
mov
jbe
fsubl
pop
andl
mov
loop
adc
pusha
dec
sti
inc
aam
pop
aaa
enter
add
cmp
add
mov
out
lahf
jne
fiaddl
add
add
lds
ds
stos
stc
mov
xchg
sbb
xchg
pop
es
or
push
mov
repnz
fcmovb
fs
lret
popf
dec
sub
fstp
push
xlat
inc
and
xchg
stc
fmull
inc
sti
shrb
or
scas
sbb
in
inc
push
fdivs
cmpsb
rcl
inc
mov
xorb
stc
out
loop
add
add
jmp
repz
fimull
pop
mov
add
arpl
add
jne
lods
sbb
xor
imul
std
repnz
nop
xchg
xchg
pop
or
pop
and
orb
dec
int3
ret
in
xchg
js
cmp
les
mov
loope
test
inc
lds
xor
xor
pop
mov
flds
mov
test
sbb
popa
loope
lods
fistpl
add
pop
inc
pop
iret
pop
aad
ss
dec
out
push
mov
add
add
and
pop
fiadds
aad
in
push
pushf
sbb
rcl
push
and
push
mov
lret
lahf
push
push
fsubr
nop
add
push
loopne
int
mov
cmp
lock
rcll
push
mov
jg
subl
into
mov
mov
push
jae
nop
lods
mov
add
add
add
cld
push
iret
adc
arpl
add
sbb
push
shlb
sub
dec
jb
ret
test
sahf
loope
out
fmuls
ljmp
mov
cwtl
dec
dec
lock
fistps
pop
mov
mull
ficomps
sub
imul
sub
adc
aaa
stos
jmp
add
test
add
add
outsb
jae
lret
jle
repz
push
lock
fildl
add
add
mulb
insb
ficoml
scas
xor
mov
test
pop
mov
inc
dec
fnsave
inc
jg
sbb
or
lods
add
ds
movsb
mov
std
cmp
daa
dec
sbb
stos
pop
or
jle
xchg
lret
mov
mov
xchg
shrb
sbb
into
xchg
pop
sub
mov
in
push
push
add
add
add
adc
adc
mov
lds
sub
add
arpl
add
jp
or
sbb
pop
mov
js
test
or
push
rolb
fisttpll
sub
or
pop
or
lret
inc
shll
pushf
cmp
add
cld
aam
and
nop
xchg
push
xor
add
jge
mov
cmp
mov
shlb
mov
faddl
add
add
cmp
sbb
aam
mov
loope
push
fwait
divl
aas
xor
mov
hlt
jl
xor
xchg
mov
test
jle
ret
shll
pop
jae
push
xor
js
jnp
push
pop
aas
outsb
jmp
jne
mov
jmp
push
int
daa
cmp
clc
adc
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
pop
push
push
xchg
out
faddl
add
add
cmpb
jnp
scas
mov
cmp
lods
pop
xlat
out
repnz
pop
js
scas
lds
jnp
mov
jb
sub
adc
repz
pop
sbb
lret
sbb
leave
mov
loop
shll
xchg
in
pop
setp
cmp
stos
jns
pop
sub
dec
sbb
popa
loopne
and
and
xchg
add
add
int
xchg
inc
cmc
sti
fildll
fs
push
mov
arpl
add
xor
sarl
and
xchg
or
mov
cmpl
xor
es
mov
inc
ja
cmp
popa
test
outsl
pop
je
test
pop
push
dec
jle
lock
cmc
mov
xor
mov
testl
push
xor
imull
add
add
add
fs
testl
cmp
mov
add
arpl
add
mull
dec
jns
fpatan
sub
sbb
sub
push
orb
movsb
jb
sub
out
pop
push
ret
out
and
imul
ret
shrb
gs
pushf
mov
or
lret
xchg
pop
push
cmp
in
jmp
test
mov
push
add
add
add
add
jne
jg
clc
cs
push
sub
add
arpl
add
cmc
xchg
repz
es
incb
mov
dec
jb
and
push
in
xchg
mov
mov
iret
jnp
xchg
stos
adc
hlt
sub
inc
hlt
js
adc
scas
hlt
in
xchg
mov
sub
movsb
or
inc
daa
push
cwtl
loopne
push
int3
fucomip
jmp
repnz
mov
movsl
jg
scas
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
arpl
add
sbb
sbb
adc
test
repnz
adc
cmp
out
inc
fidivl
fistpll
in
divl
mov
dec
jo
cmpsl
mov
jecxz
add
jae
lock
into
es
pushf
scas
xchg
movsl
test
xorl
pop
loopne
popf
cmpsb
call
add
add
fists
dec
mov
xchg
adc
leave
addb
add
add
jnp
fmuls
xchg
imul
daa
push
add
xchg
sbb
out
add
xchg
push
cmpsb
pop
cmp
stc
jmp
add
imul
mov
gs
dec
xchg
cwtl
out
mov
add
mov
imul
ss
xor
jmp
das
adc
add
add
fisttps
push
add
add
arpl
add
sbb
pop
inc
push
les
in
adc
test
mov
cmc
mov
xorl
mov
mov
int3
pusha
inc
mov
or
fmull
popa
mov
jp
and
adcb
sti
xor
sub
daa
dec
pop
scas
ja
scas
mov
cmpsl
dec
lahf
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
stos
fcmovu
or
mov
adc
push
nop
into
mov
jnp
inc
sbb
push
or
fisttpll
daa
mov
daa
dec
test
fwait
stos
jno
pop
mov
pusha
fistl
cmp
mov
aas
arpl
out
push
sbbb
movsl
out
xchg
adc
pushf
or
xor
and
lahf
pop
fdivrl
add
add
jo
and
cmp
xor
rolb
add
add
mov
adc
fwait
in
outsb
shlb
inc
out
jo
pop
ss
sbb
xor
xchg
stc
fisubl
cli
ljmp
mov
lock
insb
add
lds
jp
push
pop
sarb
imul
push
mov
add
cwtl
push
repz
add
add
xchg
nop
ffree
popf
aam
mov
add
arpl
add
popf
icebp
ror
xor
iret
ret
jl
cwtl
add
lret
mov
lahf
dec
xchg
fdivs
adc
push
jl
add
push
xchg
or
xchg
int
call
pop
addr16
dec
push
lock
daa
pop
iret
cmpsl
jae
sub
jne
sbb
inc
pop
jbe
jb,pt
adc
add
add
hlt
mov
jbe
hlt
mov
and
cmpsb
int3
mov
add
add
dec
pop
or
pop
or
repnz
into
andl
scas
inc
out
rcl
inc
mov
sub
xor
jnp
lods
mov
sub
idivl
out
add
ror
mov
clc
aaa
icebp
push
ja
aad
sar
repz
jg
js
ror
mov
dec
mov
mov
adc
add
add
xor
into
mov
sub
out
out
mov
add
arpl
add
and
jecxz
xlat
jl
das
or
insb
push
shlb
mov
js
sbb
cli
adcb
lods
mov
sbb
fdiv
mov
arpl
fistpll
adc
test
xchg
push
stos
mov
leave
cltd
sbb
out
int
lret
int3
push
cmp
test
cs
or
add
add
add
in
outsb
and
pop
mov
cmpsl
roll
add
add
push
and
jbe
ret
les
mov
imul
ror
xlat
clc
std
or
ljmp
dec
les
xchg
jb
mov
mov
sub
ja
scas
lahf
ret
daa
cmpsb
shl
mov
int
sbb
jmp
xor
cmpb
popf
ja
dec
ret
mov
outsl
push
xor
add
add
add
mov
and
test
aam
add
add
xchg
push
shll
push
rclb
repz
jno
faddl
repnz
out
scas
and
in
popl
or
or
into
add
sar
les
mov
loop
out
ljmp
cmp
cmp
fidivrl
mov
hlt
pop
gs
outsb
lock
cli
xlat
addr16
add
add
add
stc
call
into
inc
mov
and
arpl
add
jb
cld
clc
mov
clc
mov
mov
stos
vpaddusb
add
pop
sub
and
and
pop
mov
sub
mov
xor
addr16
and
or
mov
negb
shlb
xor
adc
jge
in
mov
es
fstp
aad
jb
movsb
in
add
add
add
sub
sub
xor
pop
cld
rcl
add
arpl
add
inc
push
sub
pushf
mov
xchg
add
sbb
and
push
fadds
xorl
into
mov
inc
stos
or
test
popa
das
dec
or
xchg
mov
loopne
xor
pop
out
jp
sahf
std
cmp
outsb
add
cmp
dec
cld
and
add
in
dec
loop
mov
add
add
dec
aas
int3
sbb
out
loopne
lods
movsl
fsubl
add
arpl
add
jns
loope
inc
stos
mov
shlb
pusha
lock
adc
adc
dec
mov
pop
daa
push
lret
jl
mov
push
add
cmc
adc
outsl
dec
push
and
arpl
into
push
add
mov
jp
ss
adc
stos
or
or
jae
lret
add
pop
rcrb
add
add
add
test
fildll
and
aad
add
add
popf
aam
std
jg
inc
aas
jge
cmp
push
pop
in
in
rcrl
das
dec
movsl
dec
jecxz
cmp
mov
and
mov
cmp
popf
jns
push
test
fstpt
adc
jb
fisttpll
fidivs
test
pusha
gs
and
in
sub
dec
jg
mov
add
add
add
lods
fcomi
sarb
add
inc
dec
stc
aad
add
add
dec
cmp
daa
test
insb
movsb
pop
outsb
cli
add
and
sbbl
or
sub
sub
mov
rorb
nop
add
aaa
testb
sbb
daa
popa
mov
cmp
out
dec
xor
inc
push
or
test
inc
out
adc
and
add
add
or
ja
dec
cmp
dec
test
arpl
add
mov
xchg
sbb
push
pop
ror
fidivl
and
add
sub
adc
cpuid
lds
xchg
add
cmp
imul
int3
push
and
dec
stos
rcrb
sti
shll
cmc
xchg
fsubs
or
push
add
stos
push
mov
mov
add
add
arpl
jge
mov
daa
push
dec
outsl
dec
mov
add
add
mov
inc
sahf
int3
sbb
or
int
pcmpeqw
jp
popa
cmp
mov
aam
test
fdiv
and
cmpsl
das
imul
ret
sub
dec
cltd
jl
jae
xchg
insl
mov
or
ljmp
adc
mov
xlat
jno
inc
and
add
push
imul
inc
sub
sbb
add
arpl
add
inc
subl
out
lock
xor
cltd
mov
frstor
cmp
xor
jno
xor
mov
lds
jns
mov
push
hlt
or
int3
jle
aaa
out
cmpsl
cmp
mov
movsl
outsl
js
mov
add
xchg
repnz
xor
mov
add
add
add
ss
xor
and
rorl
add
add
mov
xor
loop
fcoms
add
dec
dec
les
pop
add
mov
jecxz
pop
orl
push
leave
mov
repnz
in
scas
or
int
dec
rorl
push
cld
pop
roll
in
ljmp
aam
add
dec
icebp
fwait
jne
rorl
add
aaa
out
mul
aaa
cmc
xchg
lcall
add
arpl
add
gs
fldl
xchg
std
ds
lock
mov
jp
call
cmpsb
imul
je
scas
mov
sbb
push
iret
push
add
ljmp
lock
adc
pop
movsb
stos
xchg
push
fcoms
cmc
jle
popf
addr16
cmp
mov
jbe
pop
adc
add
add
add
aad
out
fucomip
ss
cmp
lret
aad
filds
add
add
test
inc
imul
push
mov
mov
and
xchg
push
add
mov
adc
sbb
sbb
and
inc
sbb
jp
sti
pop
std
push
test
jle
mov
pop
loop
mov
dec
in
imul
push
pusha
jno
mov
or
or
and
pop
adc
imul
mov
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
movsb
filds
add
add
loopne
pusha
cmp
sub
popl
jg
aas
xchg
jge
pop
mov
rcr
negl
jl
mov
iret
lret
cwtl
inc
and
stos
shlb
enter
pusha
mov
mov
push
xor
adc
in
xchg
test
push
and
arpl
pop
scas
arpl
push
add
add
add
add
push
les
in
lahf
sti
ja
rcll
mov
loopne
add
add
inc
mov
ss
add
call
xor
pop
cmp
shrl
scas
mulb
fisttpl
jecxz
or
pusha
jecxz
mov
pop
sbb
lret
mov
repz
leave
aaa
jbe
pop
dec
adc
cmp
sahf
and
lcall
mov
add
add
xchg
cmpl
push
loopne
lcall
add
arpl
add
jecxz
mov
dec
shrb
into
fildll
cmc
mov
daa
pop
jmp
enter
ret
inc
addr16
int3
fisttpll
ljmp
and
loope
xlat
push
shlb
cltd
outsb
out
clc
aas
sarb
cld
push
sbb
leave
push
jg
imulb
xchg
cltd
ficoml
dec
mov
mov
add
fincstp
shl
frstor
pop
dec
jp
and
loopne
add
add
aam
icebp
icebp
pusha
clc
inc
pop
test
fcomps
pushl
jl
xor
cmp
shll
pop
xchg
lahf
mov
jg
mov
push
sub
loopne
ds
sub
add
gs
adc
iret
insl
js
test
cmp
and
mulb
sub
je
jp
xchg
int3
call
mov
mov
push
ret
add
add
add
aam
fnstsw
out
fcmovu
in
mov
add
arpl
add
or
jge
push
cmp
mov
inc
pusha
sub
and
fistpl
cmp
sub
movsb
push
and
int3
imul
ret
mov
or
mov
cwtl
arpl
gs
push
jecxz
out
cwtl
sahf
inc
jg
repz
jb
mov
into
add
add
add
sbb
inc
jecxz
mov
sub
loope
add
add
push
arpl
push
stc
out
mov
fucomp
mov
cli
sub
jge
repnz
mov
or
pop
xchg
dec
aam
cltd
jno
fstl
add
jbe
lock
jg
cmp
ljmp
ds
push
pop
lcall
loop
lcall
mov
xor
out
pop
pushf
call
pop
icebp
ja
stc
lret
add
add
mov
icebp
and
ds
loope
add
add
mov
ret
mov
psrlq
cmpb
or
icebp
ret
inc
mov
aas
mov
ss
cwtl
cmp
push
xor
xor
dec
in
lea
jne
mov
lea
xor
mov
push
movsl
pop
push
adc
xor
stc
add
add
add
adc
repz
das
cli
fists
dec
es
inc
dec
push
or
add
arpl
add
mov
nop
cmp
sub
mov
pop
decl
rcll
xchg
movsb
into
shlb
xchg
repnz
adc
dec
fdivl
shl
jbe
jp
mov
pop
jbe
cmpsb
xor
add
daa
dec
dec
push
xor
loopne
fdivrs
add
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
