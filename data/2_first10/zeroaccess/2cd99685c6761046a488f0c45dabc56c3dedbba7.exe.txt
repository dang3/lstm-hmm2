push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
loope
scas
push
push
push
push
sub
push
push
pop
sub
sub
cmp
sbb
push
popf
add
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
sub
push
aaa
clc
xor
repnz
incl
mov
push
pop
dec
jo
mov
lret
mov
jge
push
iret
out
and
mov
out
clc
xchg
pusha
mov
inc
push
sbb
adc
int3
sbb
sub
repnz
pop
or
xorb
sti
cmp
arpl
add
outsb
andb
pop
out
mov
fdivl
ret
in
adc
out
sahf
adc
xor
push
rclb
xor
imul
cmpsl
gs
adc
cmp
iret
mov
xor
push
xchg
test
sub
cmpl
sub
sbb
xchg
int3
xlat
out
divb
push
out
inc
rolb
movsb
popf
dec
xchg
shrb
mov
cs
mov
sub
sbb
mov
cmp
cmpsb
push
jecxz
jo
hlt
test
test
jnp
push
int3
jno
xchg
push
fdivrp
int3
out
icebp
or
add
repnz
push
xchg
rcl
xchg
mov
repz
call
dec
iret
test
mov
outsl
cmp
pop
jmp
testl
addb
mov
cmp
cmp
adc
mov
cmp
pop
out
ds
push
xor
imul
jbe
fstpl
mov
pop
loopne
nop
pop
sub
xchg
gs
sub
in
jmp
imul
mov
mov
push
mov
xchg
lcall
or
and
fwait
dec
dec
iret
mov
sbb
fisubrl
mov
aaa
push
rep
mov
mov
adc
rcrl
loop
cli
fcmovnu
cmp
dec
arpl
aad
call
rol
push
ds
cmpsl
jg
loope
hlt
sub
sahf
mov
idiv
sti
cmp
cld
adc
mov
sub
popa
dec
subl
push
iret
out
fnsave
mov
stos
hlt
lcall
dec
sbb
inc
ss
mov
repnz
int
fwait
into
pop
je
mov
lds
rcrb
cltd
sub
push
pop
iret
shr
mov
test
pop
in
inc
and
les
jb
cwtl
arpl
jp
pop
and
lods
cwtl
add
int3
xchg
sbb
pop
jns
push
rol
xchg
fwait
mov
sbb
sub
cmp
clc
inc
out
mov
mov
mov
icebp
jb
movsl
adc
scas
ror
mov
cmp
mov
lods
fsts
sar
push
cmp
lcall
add
pop
push
jno
cld
jmp
pop
scas
or
adc
test
adc
ret
sub
loopne
out
inc
fdivrp
xchg
loop
ja
in
or
test
mov
into
xor
jno
dec
push
mov
adc
push
sbb
jge
fsubrp
fstp
jb
ret
fwait
lods
and
bound
movsb
ret
adc
mov
xor
jmp
or
sbb
movsb
sahf
cmp
jg
pop
sbb
test
dec
ds
push
lock
or
add
dec
jb
in
lods
xchg
mov
sarl
inc
and
or
cmp
cmp
scas
idivb
outsb
jg
int
mov
dec
test
movb
sub
minps
pop
and
std
enter
repnz
cmp
movsl
add
mov
out
or
popa
out
fmul
lods
nop
push
cli
adc
loopne
mov
add
inc
iret
into
jmp
das
push
rorb
shrl
inc
jg
cld
push
jl
inc
mov
fimull
lods
jne
data16
outsl
jbe
pop
push
xchg
xchg
mov
adc
aaa
mov
sbb
sub
mov
dec
jns
xchg
aad
bound
xbegin
cli
int
adc
movsl
xor
jecxz
ds
adcl
lret
inc
mov
cmp
xchg
imul
pop
imul
inc
jl
mov
push
movsb
mov
dec
pop
cld
jle
out
call
pop
jmp
mov
push
or
sarl
jmp
shrb
mov
icebp
push
jge
int3
test
repz
cmp
mov
cmp
ror
cmpsl
insl
mov
inc
add
cltd
jl
dec
inc
xchg
inc
xchg
pushl
ret
cmp
lret
inc
stos
xor
sbb
adc
orl
mov
mov
inc
or
jl
insl
dec
sti
inc
push
mov
call
aad
sub
xchg
out
sbb
mov
scas
fiaddl
jmp
gs
add
jno
test
stos
mov
add
in
mov
roll
push
cmp
dec
cs
sahf
cmp
sub
mov
repnz
cmpsl
cmp
mov
xor
add
sub
and
push
jp
arpl
mov
and
imul
jecxz
dec
scas
lahf
mov
add
in
inc
sbbl
hlt
mov
and
jge
pop
push
jle
mov
jle
fwait
pop
adc
sub
dec
mov
add
dec
inc
cmp
mov
adc
idivl
aad
push
xor
out
sbb
daa
sbb
repnz
inc
sbb
push
jge
out
frstor
jp
dec
cs
fwait
popf
inc
adc
mov
sbb
mov
dec
mov
cltd
jmp
loope
mov
notb
cli
or
je
out
and
stos
inc
iret
test
push
and
testb
xor
mov
test
add
imul
jmp
scas
roll
dec
rcrb
int
outsl
jecxz
popf
loope
repz
jne
jl
cmpsb
push
in
xor
pop
mov
adc
xor
addb
pop
or
mov
cmp
outsl
ret
scas
push
int
mov
jle
xor
adc
mov
pop
sbb
jg
jl
fwait
mov
jns
mov
ss
push
push
jp
sbbb
icebp
adc
leave
mov
fs
and
sub
pop
sbbb
ret
dec
push
and
lret
inc
jmp
lahf
sbb
xchg
daa
cmp
arpl
fidivs
jno
movsb
add
push
pop
iret
inc
adc
repz
mov
loop
rorl
adc
add
xor
xlat
idivb
inc
inc
dec
or
enter
aam
lret
scas
cltd
sub
mov
out
mov
arpl
pop
sbb
movsl
out
ret
adc
dec
lea
adc
mov
mov
pop
mov
repnz
jle
out
mov
cmpsb
out
pop
aaa
xor
imul
outsl
and
pop
add
jp
mov
jmp
jo
std
fs
enter
push
sbb
jbe
push
push
xor
lcall
cwtl
xor
adc
sbb
ret
lret
adc
sbb
add
stc
add
lock
pop
adc
xchg
sub
xchg
dec
add
push
add
stos
mov
test
add
xor
pop
rorb
movsb
xor
push
mov
and
mov
or
loope
iret
adc
pop
add
mov
xlat
std
pop
push
in
xlat
loopne
sbbl
mov
cmp
add
enter
or
push
pop
xor
movsl
lahf
outsl
lock
sub
ss
mov
mov
mov
mov
inc
jno
push
jp
cmp
sbb
sub
xor
xor
add
mov
inc
jl
in
mov
ret
or
mov
fptan
xor
xlat
movsb
scas
daa
cmpsl
scas
scas
mov
jae
xchg
cmp
mov
jg
push
loope
xor
dec
and
jbe
jno
push
cmp
je
outsb
xlat
add
xor
xchg
hlt
ljmp
jns
push
cwtl
insb
add
push
add
jmp
fidivrs
aam
pusha
test
sbb
add
test
sub
icebp
repz
insb
cmp
cmp
inc
cld
out
mov
and
or
aad
and
fimull
test
inc
out
pop
es
insb
cwtl
fiadds
test
arpl
cwtl
dec
xchg
rorb
jae
push
inc
jmp
add
fdivrp
cwtl
xlat
fbstp
es
adc
adc
adc
jae
sbb
leave
stos
jb
and
cmp
xchg
cmp
xor
rcrb
cli
fnsave
or
adc
push
int
sbb
addr16
loopne
fimull
mov
adc
cmp
mov
insl
and
or
fwait
jp
and
popf
repz
movsl
xchg
lret
sbb
pusha
adc
sub
mov
dec
lcall
js
mov
rorb
sub
pusha
adc
jge
sub
pop
and
add
push
mov
sub
fmul
push
inc
push
xchg
mov
jne
jl
pusha
adc
mov
xchg
push
jno
arpl
movsb
xchg
scas
inc
sub
pop
dec
arpl
pop
inc
xchg
rorl
sbb
rcl
mov
push
jl
popf
mov
iret
xor
jb
outsl
mov
cli
xchg
adc
out
xor
and
dec
mov
adc
pop
jg
xchg
fisttpll
cmp
int
jle
mov
rolb
movl
or
jae
add
lock
pop
pop
push
dec
mov
movsb
push
lret
imul
sbb
lret
or
ret
cmc
fdivrl
out
pop
movsb
cmc
int
mov
sbb
sub
cmp
jne
mov
pop
jbe
push
jp
fyl2x
jne
ficoms
scas
xchg
xor
std
dec
in
mov
out
cmp
lahf
ficomps
and
aad
sbb
loope
xor
and
or
nop
push
jns
les
cmp
fistpl
lret
xchg
int3
fdivl
push
mov
jbe
or
icebp
outsb
std
in
xchg
mov
xor
adc
mov
addr16
lret
push
nop
pushf
jecxz
mov
fists
jge
pop
xchg
clc
and
popf
pminub
or
js
jns
xor
and
andl
pusha
fdivr
pop
adc
dec
jl
mov
inc
sbb
and
in
lock
cmpsl
adc
xor
xchg
outsb
and
loopne
out
xchg
jns
into
push
out
data16
aas
not
adc
inc
fmull
adc
pop
int3
shll
adc
les
out
pop
and
fisttps
nop
jle
ud1
sbb
add
ss
and
ret
dec
aas
dec
int
aad
test
es
mov
push
std
jmp
test
stos
or
cmpsl
inc
or
or
xor
adc
mov
test
sbbb
scas
lret
mov
dec
mov
ja
mov
pop
cli
cmp
shlb
jne
push
jbe
lea
mov
add
andl
sub
into
dec
lcall
inc
insl
js
cwtl
fdivl
mov
movsb
xchg
xchg
mov
mov
cmp
iret
int3
inc
test
das
sbb
mov
mov
and
mov
mov
lcall
adc
jbe
ja
add
inc
jp
xor
pop
add
mov
cwtl
aaa
push
mov
decl
sub
mov
sub
int
cmp
fidivs
sbb
lods
popa
mov
pop
lds
lock
bnd
add
out
and
stc
xchg
push
push
arpl
jbe
addr16
cltd
mov
pop
je
sbb
jbe
push
cmpsl
arpl
jns
and
imul
mov
inc
mov
cmp
fstps
ficompl
pop
sbb
pop
mov
lds
imull
pop
or
sub
sub
outsb
add
xchg
sbb
rclb
popf
iret
sub
shl
jns
dec
popa
push
cmp
test
jnp
js
jo
fiadds
push
imul
mov
stos
popf
jg
mov
pop
call
pop
mov
in
ret
jae
and
jns
cld
inc
jge
adc
lods
lock
cmp
or
mov
bound
frstor
out
push
subb
pop
subb
and
inc
sub
jns
ss
jp
in
push
sbb
or
cwtl
sbb
sbb
mov
adc
xchg
iret
lock
pop
jno
stos
incb
inc
pop
hlt
and
sti
mov
hlt
mov
pop
stos
mov
shrb
test
dec
dec
jae
mov
jge
shrl
and
pop
stc
jmp
mov
sbb
fiaddl
adc
adc
push
xchg
ljmp
shlb
cmp
push
mov
mov
sarb
mov
test
cs
lea
or
inc
pushf
adc
push
testl
in
pop
nop
mov
fidivrs
ret
pop
mov
movsb
aaa
mov
cmp
add
mov
imul
jns
or
mov
or
push
pop
mov
mov
call
rcrl
fwait
inc
mov
push
mov
out
and
movsl
adc
mov
scas
insb
sbb
xchg
pop
fdiv
mov
xor
js
pop
add
or
sub
pushf
jo
lea
xor
or
mov
lock
scas
mov
jmp
outsl
test
out
filds
ss
fnsetpm(287
sti
and
loopne
push
adc
lods
push
sbb
jge
fadd
iret
fmull
loopne
push
iret
inc
into
mov
and
shlb
stos
fwait
lock
enter
mov
fstl
sarb
xchg
dec
push
add
pop
or
xchg
jno
fmull
in
fimuls
pop
shl
pop
cmp
and
test
xor
fidivrl
ficoml
popa
arpl
shl
jecxz
and
insb
mov
push
sub
sub
addr16
pop
inc
and
movsl
sbb
outsb
inc
mov
adc
xlat
iret
pop
insl
push
mov
pop
nop
jle
and
loopne
jbe
push
in
scas
push
sbb
inc
iret
xchg
add
jo
adc
jmp
out
dec
or
test
in
jl
shl
mov
arpl
dec
aam
leave
adc
cltd
jecxz
or
xor
je
dec
aas
pop
lock
fistpl
das
inc
fcmove
in
leave
push
mov
pop
and
xchg
incl
xor
and
xor
lock
das
in
cmc
mov
movsl
jno
movsb
or
mov
xor
adc
dec
adc
fisttpl
sti
lahf
push
popf
ficoml
mov
ret
and
gs
pushf
stc
cli
pusha
gs
cld
out
rep
sbb
mov
lret
pop
sbb
fnstsw
imul
fdivrp
pop
push
sti
xor
jmp
in
scas
xbegin
inc
out
lret
fldenv
fldt
jg
fwait
dec
pushf
xor
add
sahf
out
movsb
dec
xor
lcall
mov
das
repz
xor
hlt
push
or
pop
lock
pusha
leave
xchg
in
sbb
jecxz
jecxz
add
mov
adc
xchg
jnp
pop
subl
jp
fnstenv
fidivs
mov
sbb
pop
adc
jle
add
lret
aad
mov
std
testl
dec
mov
add
dec
std
fldt
sbb
inc
mov
orl
inc
xor
xchg
js
fildl
inc
fnstenv
test
dec
fdivp
ret
test
and
dec
dec
in
push
scas
pop
jno
in
adcb
pop
in
scas
xchg
and
jb
cwtl
mov
daa
lret
jmp
in
ficomps
adc
adc
daa
xchg
xchg
scas
in
jl
jno
shlb
push
fwait
adc
pushl
sahf
add
inc
test
jno
sbb
bound
add
das
inc
lret
std
xor
inc
sub
out
xor
out
stos
shll
jecxz
test
push
pop
jp
jl
mov
xchg
mov
or
sti
xchg
sub
arpl
add
add
aad
mov
fildll
or
sbb
adc
xchg
aas
xchg
dec
pop
adc
push
in
aaa
jmp
cmp
das
or
push
insb
ret
test
push
jb
add
les
push
fisubs
out
fwait
jmp
sbb
fs
mov
fstl
ss
bound
jb
sub
pushf
cmp
jl
outsl
int
jnp
adc
test
fisubrl
add
adc
std
xchg
pop
inc
jae
xor
jmp
fsub
test
mov
ja
jp
adc
lcall
call
pop
and
mov
mov
and
mov
imul
dec
sub
insb
add
push
rorb
in
call
and
or
sbb
aaa
push
stc
test
nop
xchg
sahf
lds
insl
sub
int3
mov
sahf
cmp
mov
lldt
push
pop
jne
aaa
adc
scas
das
pop
lcall
or
outsb
push
sbb
roll
loopne
stos
test
pushf
aad
adc
push
insb
arpl
jmp
fldt
insb
mov
outsl
adc
enter
aam
mov
fstpt
adc
inc
pop
mov
sub
or
lds
and
add
inc
push
in
std
cmp
popf
dec
stc
rcl
nop
jnp
cmp
mov
scas
jl
das
out
mov
movsl
mov
cmp
dec
dec
dec
push
xchg
push
call
jp
fstl
xchg
xor
mov
ss
or
pop
jecxz
sarb
insb
iret
jne
jbe
add
mov
mov
push
pushf
cld
lock
cmp
mov
fists
pop
jo
lock
add
jo
hlt
icebp
xchg
lds
push
dec
adc
jecxz
aaa
jmp
jbe
mov
dec
shrl
mov
and
cmp
ret
add
ret
loopne
lea
and
test
movsl
imul
out
dec
das
jnp
lock
fiaddl
xor
pop
jg
adc
in
popf
jo
shr
cmp
jl
call
hlt
sub
cli
test
fnstsw
xor
inc
test
ds
push
push
test
repnz
mov
inc
pop
pop
cld
cmp
stc
sbb
mov
popa
test
adc
mov
adc
data16
and
mov
nop
jno
xor
inc
loop
add
inc
jge
mov
rcll
arpl
xchg
mov
or
mov
repnz
mov
incl
mov
imul
cmp
pop
xchg
push
add
mov
jb
lds
jp
push
and
xchg
cmpsl
out
cmp
imul
adc
sti
cmp
dec
sub
sbb
mov
in
test
pushf
and
lock
inc
fstpt
aas
int3
in
imul
ret
mov
pop
in
sbb
fsubrl
and
rolb
fs
push
mov
jbe
add
cmp
or
jl
insb
adc
aad
aaa
mov
lahf
xchg
nop
in
test
or
push
xchg
xor
out
dec
ljmp
pop
dec
icebp
lods
xchg
push
push
rcrb
sub
pop
shr
xchg
push
mov
loope
aas
jb
jmp
add
pop
mov
dec
cmp
add
dec
lret
add
outsl
jnp
lock
mov
xorl
in
es
movl
and
and
leave
push
and
ds
adc
in
pop
sub
clc
mov
dec
mov
leave
sarl
iret
cltd
inc
inc
enter
icebp
or
lret
loope
outsb
loopne
adc
pop
xor
pop
iret
jmp
lods
das
mov
stos
xor
jns
jmp
add
pop
ret
adc
mov
dec
jno
inc
adc
sbbb
aad
mov
movsl
addr16
fst
ficompl
mov
push
push
mov
cmpl
int
jmp
mov
sub
pop
popa
rorl
js
xchg
push
mov
cmp
and
insb
add
cmp
mov
xchg
mov
mov
jnp
cmp
enter
sbb
dec
pop
jg
mov
adc
jae
andl
add
cmpsb
data16
sub
mov
pop
pop
and
cmpsb
mov
push
mov
mov
inc
out
enter
in
jbe
jbe
movsl
or
in
push
in
insb
jns
stos
jmp
inc
push
mov
inc
sub
cld
frstor
add
inc
mov
cmp
pop
cmpsb
js
int
xlat
test
push
xchg
mov
mov
jecxz
stos
add
shll
adcb
fucom
dec
aam
add
or
sub
jns
dec
movsl
pop
inc
dec
pop
inc
or
dec
lock
pop
dec
js
into
nop
jp
xchg
pusha
and
inc
pop
insb
shlb
add
loope
into
sbb
push
push
cltd
lcall
test
test
xchg
movsl
or
push
mov
cmpsl
xchg
mov
and
pop
push
pop
loopne
lahf
dec
inc
mov
aad
stos
mov
popf
pop
push
inc
cmp
push
lods
out
or
dec
or
js
test
cwtl
mov
or
sub
cli
inc
dec
adc
fidivs
jo
adc
adc
or
and
pop
pop
mov
xor
dec
shrl
aad
pop
lcall
ret
jle
shl
mov
cmp
scas
stos
orb
xchg
sbb
lcall
in
and
mov
inc
pop
jae
stc
xchg
xchg
sbb
out
cltd
jecxz
jb,pn
jmp
mov
xor
push
in
ja
xchg
stos
lcall
lods
out
pop
mov
bound
imul
push
clc
shrl
cmp
aaa
shlb
mov
stos
xor
lods
rclb
or
mov
cmp
imul
mov
stos
scas
mov
mov
or
loop
adc
aas
int3
ret
inc
je
testl
ja
xchg
push
add
das
dec
jne
pop
sar
and
into
mov
jle
sbb
repnz
jns
sbbb
movsb
clc
cld
pop
icebp
mov
mov
push
pop
cmp
mov
push
lds
nop
loop
ret
in
mov
adc
add
popf
std
cmp
sbb
insb
jmp
xchg
adc
pop
call
add
arpl
cmp
inc
add
or
pusha
out
das
pop
fwait
or
sub
pusha
add
lret
sub
mul
push
test
mov
inc
sub
dec
inc
xor
push
adc
mov
loop
ljmp
out
xchg
jmp
add
wbinvd
xchg
inc
or
push
pop
cld
shr
cs
jle
repnz
xchg
mov
stos
mov
mov
bound
repnz
lret
pop
push
jae
push
pop
mov
jle
sbb
xor
xor
add
jmp
repnz
aas
shl
push
outsb
loopne
inc
adc
and
in
jecxz
pop
lcall
push
mov
inc
pusha
push
mov
out
cs
sbb
and
in
cs
mov
ret
shll
cmp
push
pop
outsl
jo
pop
fdivl
sahf
lock
or
stos
push
lcall
stos
and
push
popa
cmpsb
roll
mov
or
mov
out
outsl
xor
rorb
insb
mov
pop
dec
mov
ss
push
lahf
adc
sbb
rorb
cld
lahf
daa
mov
inc
inc
insb
jne
mov
or
repnz
scas
popf
insl
adc
mov
inc
adc
sub
push
fldpi
push
xchg
pop
inc
out
mulb
xchg
jge
test
ss
or
pushw
pusha
add
sbb
mov
push
xchg
push
nop
dec
fdivrs
filds
sti
ja
loope
test
mov
leave
movsb
test
loope
int
fwait
add
add
adc
jle
inc
add
es
lahf
dec
and
inc
nop
add
cmp
lods
out
mov
mov
jnp
jae
inc
jle
sub
out
mov
mov
jle
gs
call
test
out
jmp
mov
adc
iret
stc
aaa
and
fwait
bound
mov
cltd
push
push
mov
mov
xor
clc
or
test
fs
cmp
mov
mov
or
imul
push
sub
jg
js
jne
dec
lret
dec
lods
repz
mov
sub
lahf
sub
mov
add
out
leave
cmp
dec
and
push
cli
cld
inc
lea
push
or
lock
test
dec
test
clc
fs
call
lock
mov
in
add
cld
mov
push
idivb
jge
push
and
add
push
jg
pop
in
daa
lcall
aaa
mov
aad
popa
fimull
push
mov
es
cmp
mov
loopne
loop
nop
movsl
les
adc
lea
mov
xor
mov
test
jnp
setnp
sbb
js
xchg
cld
mov
jnp
les
dec
add
pop
leave
fsts
bnd
and
cmp
sub
adc
mov
jle
or
cmpsl
xchg
nop
xchg
lret
dec
or
cli
or
adc
push
or
in
mov
inc
jns
popf
lret
sub
pop
in
mov
push
in
insb
push
push
bound
sub
jnp
mov
or
cltd
pop
push
add
and
dec
dec
ljmp
adc
cld
dec
mov
les
jnp
call
js
lods
xlat
mov
scas
inc
mov
pusha
mov
aaa
push
shlb
sbb
testl
inc
fisubrl
pop
inc
pop
push
xchg
and
sbb
add
and
inc
adc
mov
push
push
rorl
rol
clc
nop
movsl
cmc
cmp
imul
mov
adc
lock
dec
popl
adcl
popa
and
cmpsl
bound
and
dec
inc
mov
adc
dec
popa
sub
or
pop
or
xor
mov
mov
lcall
daa
and
xchg
jmp
jo
mov
mov
in
or
jo
es
or
mov
outsl
shlb
jo
cwtl
movsb
bound
dec
shlb
mov
cmc
iret
inc
ret
cmp
dec
xchg
xor
jle
in
lds
jbe
xchg
cs
rorb
and
or
cmpsb
aam
scas
mov
inc
adc
xor
punpckldq
popf
shll
dec
shrl
leave
mov
fdivs
adc
mov
jae
xchg
subl
push
cmpl
push
xorl
cld
nop
test
insb
pop
sbb
xchg
inc
push
das
stc
pop
sbb
add
jecxz
rcrb
add
fadds
outsb
fwait
divl
xor
and
pop
scas
mov
mov
shrb
sub
mov
jbe
fists
push
push
and
jl
jb
test
mov
mov
pop
orl
aam
pop
bsr
imul
mov
xor
or
dec
dec
jo
push
mov
jg
inc
rorl
cwtl
add
and
adc
pusha
mov
sub
push
push
cs
xchg
pop
push
mov
ret
out
push
sti
push
jle
sub
aas
lahf
push
jnp
out
ljmp
fdivrs
maxps
negl
imul
dec
aam
in
rclb
jb
jmp
iret
adcl
xor
mov
hlt
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
sbb
sub
push
push
sub
push
push
add
cld
int3
mov
mov
das
shlb
xlat
test
push
rorb
xchg
push
mov
mov
push
aas
inc
mov
mov
lret
push
inc
inc
nop
xor
mov
mov
push
ret
mov
push
xchg
cmp
dec
sub
movsb
hlt
nop
fs
scas
hlt
pushf
mov
inc
sbb
sub
fcompl
lods
add
cltd
jge
pushf
push
inc
test
or
cli
call
movsl
pop
lret
inc
jbe
clc
cs
jb
arpl
xchg
jnp
insl
cld
pop
inc
mov
adcl
das
jne
and
xor
je
iret
push
dec
and
repz
push
xor
xor
movsl
lods
push
sbb
fcomps
icebp
and
std
daa
jne
jge
xchg
push
xor
scas
mov
push
lret
loope
stc
fisubrs
stos
inc
call
xchg
jecxz
divb
js
mov
xchg
push
sbb
jnp
adc
out
or
xchg
dec
roll
sbb
out
and
mov
ret
ja
or
sbb
mov
movsb
push
mov
add
stos
pop
and
ds
pop
fsubrl
sahf
cwtl
in
adc
mov
lahf
push
jne
jo
jns
mov
pop
jo
mov
andb
pop
xchg
cmp
out
jp
jmp
xchg
pop
push
aam
xchg
push
xchg
cmp
jmp
in
fwait
in
sbb
mov
jecxz
aam
mov
jb
jb
cmp
fstpt
cmpsl
sub
scas
mov
adc
aam
cmp
jnp
mov
roll
fnstenv
pop
add
and
rorb
and
cmc
dec
push
cmp
inc
inc
add
je
xor
mov
dec
xchg
push
imul
add
jne
pop
ret
subl
sbb
cli
mov
mov
push
outsl
sbb
inc
cmp
sahf
int
test
adc
cmp
cs
stos
mov
mov
lds
cmp
pushf
mov
inc
add
dec
sub
test
mov
ret
sbb
test
fiadds
jge
xchg
mov
pop
jle
mov
test
movsb
add
pop
jp
repz
sub
mov
and
xchg
pop
aad
adc
int3
mov
iret
aaa
sbb
fldl
jno
jbe
rorl
sub
push
aaa
add
dec
fstl
or
fadds
mov
inc
sbb
iret
and
stos
push
mov
sub
jmp
inc
push
jne
xor
fbld
pop
sbb
fidivrs
cli
inc
ds
lods
add
les
nop
xor
dec
pushf
xchg
pop
stos
inc
and
push
icebp
les
xorb
add
bnd
push
add
ss
push
lock
scas
cwtl
lock
ret
pop
in
ds
fwait
pusha
ret
or
push
push
pushf
mov
and
loope
je
fdivrs
sub
mov
jnp
xor
push
cli
inc
rolb
dec
leave
flds
insb
dec
pop
push
fnsave
loop
mov
cmp
out
jecxz
int
dec
sub
cmp
jp
or
pop
sub
cmp
xlat
imul
ret
jb
repz
out
sbb
cmpsl
clc
dec
sub
pop
repz
cmp
rolb
ret
inc
cmp
inc
pop
in
sbb
js
xor
xchg
pop
and
and
mulb
mov
das
push
jne
add
rorl
out
mov
push
test
insb
xchg
mov
or
pop
mov
pop
ret
stos
ljmp
or
enter
or
pop
jae
mov
mov
sub
andl
fimuls
stos
mov
jns
mov
cmp
mov
enter
lahf
push
call
daa
inc
xor
sub
dec
mov
cmp
push
movsb
mov
mov
xor
cltd
sub
pop
mov
sahf
push
push
mov
mov
cli
fists
push
or
icebp
dec
pop
cwtl
pop
cmpsb
mov
insl
push
pop
pop
in
scas
dec
push
bound
mov
jo
rorl
push
mov
leave
adc
dec
sbb
jl
cltd
pop
fmull
jg
imul
insl
popf
or
sbb
jo
scas
mov
sub
fidivl
lahf
add
xor
or
xchg
or
cmpsl
icebp
lahf
lea
mov
mov
xchg
pop
cld
fisttps
rorb
rcrl
pusha
loop
jns
arpl
push
push
mov
int
push
mov
dec
dec
jecxz
test
sti
fldt
push
mov
dec
popf
sti
rol
jl
push
stc
repz
sub
mov
andb
and
push
fcompl
outsl
add
fcoms
and
in
adc
aas
push
clc
mov
bound
pop
call
ljmp
push
cmpsb
pop
and
mov
popf
adc
fistpl
mov
imul
shlb
mov
mov
or
loope
or
aad
jge
fwait
loope
mov
pop
mov
xor
or
xchg
inc
jg
aas
cwtl
pop
addb
push
icebp
mov
aas
lret
dec
shlb
adc
jbe
lods
push
fcoml
cli
jmp
xchg
stos
xor
cmp
and
arpl
imul
push
mov
and
hlt
adcl
insl
lods
jns
sbb
jae
mov
jae
adc
add
cmp
mov
pop
mov
lods
add
mov
adcl
lahf
imul
adc
mov
mov
push
and
sub
mov
xchg
adc
push
cmp
or
aas
in
mov
shr
adc
cmp
mov
and
adc
sbb
pop
mov
fucom
dec
cmp
cmp
mov
dec
or
cmp
xlat
aam
adc
sub
imul
stos
and
xor
insl
push
cwtl
adc
jmp
je
lcall
sbb
stc
push
outsl
mov
dec
enter
data16
inc
arpl
or
les
sbb
out
mov
insb
iret
mov
pop
dec
lock
mov
test
mov
cwtl
sbb
mov
jecxz
jbe
imul
shlb
ljmp
mov
pop
jns
je
mov
mov
movsl
jbe
js
pop
mov
shll
in
clc
adc
into
outsl
std
lret
rcll
cmp
inc
cmp
dec
jo
fisubl
call
mov
out
and
add
call
dec
loopne
aam
mov
lock
inc
mov
xor
jns
jo
xchg
fiadds
jo
xchg
adc
rcr
xchg
jl
sbb
dec
fwait
sti
dec
fdiv
std
mov
fcomps
mov
adcl
or
pop
inc
mov
mov
inc
imul
jp
and
mov
iret
sbbb
sub
xor
push
cmp
outsb
push
pop
or
or
xchg
sbb
adc
lahf
mov
cld
into
mov
repnz
mov
push
iret
scas
in
enter
aas
insb
aas
mov
js
ret
jmp
ret
fnstcw
rol
test
pop
bswap
shld
adc
mov
adc
push
and
sub
leave
xor
cmp
xchg
add
add
pop
and
jbe
xchg
pop
cmpsb
jl
xchg
xor
or
js
cmc
sbbb
jne
lcall
in
das
sbb
mov
or
outsb
nop
cmp
ret
icebp
mov
push
ds
les
cmp
shr
nop
pop
sbb
push
jnp
mov
xchg
lahf
xlat
in
sub
xchg
xor
adc
dec
cltd
enter
outsb
sbb
loope
aam
loopne
inc
icebp
jbe
ret
loopne
dec
lds
inc
jnp
ljmp
xchg
cmp
sarl
ficoml
imul
ja
mov
xchg
out
jl
jnp
pop
lret
mov
hlt
jne
cmp
stos
lret
clc
fistl
js
cld
lods
jmp
repnz
repnz
pop
pop
stos
dec
push
xchg
out
add
fdivl
xchg
inc
inc
add
sub
scas
push
and
mov
cmp
jp
jge
mov
fs
xchg
pop
mov
loope
lcall
enter
insl
mov
jno
ds
and
jle
inc
add
iret
push
jle
rdpmc
jb
sarl
dec
pop
daa
lahf
mov
sub
std
adc
ljmp
pop
out
lret
xor
arpl
inc
pushw
xor
aad
adc
dec
es
xchg
into
subl
and
inc
adc
cmp
pop
sbb
in
fistps
xchg
dec
rolb
rorl
or
fsubrl
mov
int3
adcl
mov
cmc
xchg
adc
xchg
push
or
inc
sarl
insb
pop
test
dec
pop
dec
dec
xchg
inc
jp
into
leave
mov
sbbb
pop
out
sbb
push
jnp
lcall
mov
xchg
scas
int
ljmp
or
jg
clc
in
mov
outsl
push
and
jne
mov
das
addr16
adc
add
fildll
sti
mov
aas
dec
cmp
mov
mov
js
and
repnz
sub
mov
test
jle
mov
imul
or
xchg
lret
push
cmpsb
xlat
sbb
insb
test
loope
lea
jns
scas
pop
loope
dec
daa
mov
sbb
mov
test
mov
mov
ret
fdiv
mov
enter
inc
cwtl
jecxz
mov
in
cmp
jno
sbb
data16
jae
jle
jmp
test
divb
push
ja
in
insl
fs
or
or
mov
mov
dec
mov
fistps
cmpsb
push
cmp
sbb
xor
les
jmp
xchg
pop
xchg
roll
add
pop
push
dec
cmpsb
movsl
repz
push
jnp
neg
add
adc
aad
mov
xor
in
inc
jno
pop
mov
and
mov
mov
testl
pop
loope
out
push
fcoms
pop
out
call
lods
les
stc
dec
popa
lods
push
loope
xlat
mov
movsb
pop
pop
mov
xor
sub
jl
pusha
or
dec
jle
lahf
or
jae
or
bound
sub
ret
fnstsw
popa
cmp
inc
push
sbb
pop
adc
mov
jmp
xchg
arpl
into
mov
pop
sbb
jmp
adc
aaa
fwait
pop
push
incl
mov
jno
sub
xorb
push
inc
lock
and
cltd
dec
fsubrl
xor
js
fadds
test
test
scas
cmpsl
out
das
sti
inc
or
in
dec
lds
dec
sub
jb
cmp
cs
mov
mov
mov
mov
xchg
test
mov
lock
adc
mov
int3
pop
mov
inc
pop
jno
flds
scas
gs
mov
test
std
pop
inc
xor
pop
cmc
sbb
in
mov
pop
lret
sbb
mov
aas
cs
outsl
stos
adcb
dec
pop
push
loope
jb
jns
lods
nop
mov
add
xchg
mov
sti
rorl
sbb
das
js
stc
dec
sub
jns
into
pop
or
mov
pop
add
aaa
push
clc
xor
mov
lret
int3
roll
jp
sarl
call
stos
push
push
mov
je
fidivrs
xor
jl
cmp
popw
out
daa
xchg
cmp
loope
xlat
lahf
jmp
pop
adc
sahf
lea
jmp
or
mov
sub
ret
ljmp
cld
pop
loopne
data16
add
jno
and
and
lahf
aam
int3
push
jmp
jb
repz
ja
repnz
out
dec
sub
outsl
aas
cmp
push
xchg
and
test
jge
lea
in
pop
inc
push
push
xchg
das
xchg
ljmp
jp
repnz
mov
add
test
enter
stos
ficoml
aaa
cmpsl
iret
jl
fwait
adcb
and
int3
push
mov
dec
mov
inc
call
mov
adcl
fadds
add
xor
test
jnp
jae
push
in
adc
dec
and
loop
xchg
mov
les
test
decb
push
nop
js
nop
mov
subb
call
stc
ds
and
imul
pop
fmuls
clc
imul
cwtl
jge
out
push
inc
mov
cmp
mov
push
jne
sbb
push
inc
movsb
lcall
sbb
sbb
inc
aas
pop
fisubl
cmp
pusha
in
jl
xor
push
pop
mov
sub
aaa
mov
fmull
sbb
jns
push
or
out
cmp
mov
pop
xor
dec
push
jmp
outsb
je
or
sti
mov
adc
dec
mov
push
sub
stos
add
pop
add
push
push
insl
hlt
xor
pop
cmpsb
movsl
pushl
outsb
mov
fstpl
lcall
out
movsl
rcrb
inc
cli
popf
insl
xchg
pop
add
incl
and
cs
or
ljmp
add
or
mov
movsb
popa
fists
pop
pop
adc
es
shlb
or
xor
pusha
stos
enter
add
mov
rcrb
mov
jo
push
repnz
loop
addr16
mov
jp
shlb
push
scas
push
pop
mov
sahf
xor
jg
into
push
fucomp
adc
push
ja
adc
xor
lcall
jnp
mov
test
ds
pop
outsl
mov
inc
xchg
adcl
xchg
in
or
and
mov
cmp
pop
or
movsl
clc
mov
scas
mov
xchg
pop
cltd
daa
notb
push
cmp
in
mov
jmp
lds
cmp
mov
sub
outsl
dec
or
insl
ret
cmp
dec
push
sub
xchg
ds
imul
pop
xchg
adc
sub
cmp
inc
repnz
adc
stos
sub
std
adc
xchg
rol
or
es
adc
shl
mov
jnp
cmp
sarl
dec
inc
and
or
movsb
ja
or
jne
inc
jmp
pop
fdivr
dec
pop
push
insb
ret
insl
in
or
adc
lods
pop
repz
sbbb
lret
ret
into
add
loope
insb
mov
fdivs
mov
push
add
adc
pusha
popl
imul
push
fs
mov
cltd
sub
xor
out
xor
es
test
adcb
cmp
ret
aad
dec
pop
out
imul
movb
jnp
into
cmp
nopl
cmpsb
mov
xchg
dec
fdiv
pop
jb
pop
dec
dec
popf
fidivrl
or
sub
negl
mov
imul
lds
js
xor
fwait
mov
scas
adc
cmpsb
cmpsl
push
out
mov
or
mov
fimull
cwtl
and
movsb
or
or
mov
xor
inc
sbb
or
inc
dec
add
xchg
inc
xor
mov
inc
push
xchg
movsb
mov
and
sbb
cltd
mov
nop
hlt
call
push
add
dec
inc
movsb
movsb
sti
add
lret
push
mov
daa
ret
andl
jnp
sahf
mov
or
jg
mov
mov
iret
test
mov
arpl
hlt
mov
icebp
jp
mov
sub
xlat
mov
and
cld
pop
in
push
pop
dec
addr16
cltd
jge
shll
js
cmpsl
callw
jo
bound
xchg
sub
lret
mov
add
xor
sub
xor
xor
in
mov
cmp
sbb
dec
andl
mov
ljmp
jnp
stc
and
xor
jl
divl
pop
je
fistpl
push
pop
xor
add
mov
stos
mov
lret
adc
or
movsb
jg
out
mov
jns
gs
shrb
test
add
sbb
xlat
cmpsl
xchg
test
test
add
add
ret
pop
pop
fists
sti
fisttpll
dec
push
fsts
lcall
and
mov
xor
and
lcall
cltd
jg
inc
jno
jp
xchg
push
pop
lcall
add
push
or
add
jnp
lods
mov
test
cmp
dec
out
shl
adc
jle
push
sub
dec
cmpsb
add
js
ret
push
fstpl
scas
lcall
inc
imul
dec
mov
ret
push
adc
test
inc
ret
adc
inc
enter
clc
fdivrl
mov
das
push
cli
rcr
push
fnstenv
inc
push
hlt
jmp
xor
inc
lods
arpl
cmp
lcall
mov
movsl
sub
or
fcoml
dec
dec
dec
loope
cmp
jno
and
mov
in
clc
enter
fstps
dec
lahf
leave
sbb
push
insb
or
inc
ss
pop
fbld
das
xchg
jb
in
and
sti
mov
mov
sbb
dec
jmp
inc
add
pop
add
rcrb
mov
jns
jmp
xchg
push
dec
jno
inc
rorl
stos
jge
stos
push
ja
add
xchg
ffree
cltd
nop
pusha
test
sqrtps
movsl
cmc
xchg
icebp
ljmp
lock
push
mov
cs
enter
adc
lahf
mov
push
test
pop
adc
fldt
push
mov
xchg
xchg
cmp
mov
jb
lcall
mov
ljmp
bound
xchg
sbb
xchg
repnz
xor
xor
jmp
fists
sub
in
sub
movsb
mov
sbb
mov
hlt
leave
jo
ljmp
mov
jo
fldt
push
xchg
cmpsl
add
xlat
je
fsts
mov
dec
xor
pop
inc
mov
adc
cs
int
imul
js
mov
int3
pop
rcrb
mov
pop
mov
cmpsb
and
pop
sub
add
inc
sahf
fmuls
xor
hlt
dec
fs
dec
sahf
loop
lret
xchg
es
cmp
or
outsl
lcall
mov
dec
mov
xor
xor
dec
inc
in
dec
cmp
or
lock
push
mov
xchg
stos
mov
pop
inc
movsl
fidivl
dec
adcb
in
fdivl
rclb
les
icebp
sarl
addr16
insb
test
push
xor
sti
mov
test
in
sbb
sub
sarl
mov
shrl
adcb
mov
imulb
mov
ja
mov
push
dec
pop
loopne
sti
int
mov
sbb
repnz
loopne
sub
das
or
and
adcl
fwait
jb
mov
imul
sub
aaa
adc
ret
fstl
fisttps
dec
mov
mov
jno
mov
mov
gs
add
scas
lds
jbe
push
push
and
sbb
stos
ret
mov
inc
xchg
insb
dec
leave
mov
or
pop
inc
and
lahf
mov
dec
les
cmc
add
mov
fsubl
addl
pop
sbb
dec
pop
loop
sarb
insl
adc
dec
ljmp
in
int3
inc
fildl
movsl
dec
insl
repnz
jl
aad
dec
dec
or
and
in
mov
ja
adcb
and
les
jbe
mov
jb
cmp
in
inc
pop
or
js
mov
call
add
stos
insb
in
inc
xlat
mov
xlat
xchg
lahf
mov
clc
push
adc
jbe
dec
out
add
out
xchg
inc
les
ds
sub
test
notl
fs
std
dec
cwtl
fldl2t
lock
sbb
adc
loopne
cmp
jae
and
bound
test
xchg
mov
mov
lock
dec
push
xchg
adc
xchg
jp
and
mov
jno
test
das
punpcklwd
xor
fldt
sbb
lret
xchg
push
jo
loop
or
jo
mov
test
push
mov
cmpl
inc
mov
stos
mov
jg
in
xchg
popf
pop
and
jns
jmp
lods
loop
sbb
xchg
and
mov
outsl
addb
sub
dec
stc
dec
and
adcb
jae
into
jle
and
pop
or
js
xor
test
jae
mov
xchg
sbb
dec
adc
insl
not
mov
and
pop
fcmovb
pop
movsl
fbld
fwait
xchg
mov
leave
push
pop
or
xchg
mov
les
inc
shlb
gs
in
mov
mov
jge
fistpll
dec
lods
adcl
cmp
test
xchg
xor
cmpsl
add
cmp
or
std
in
mov
xorl
mov
jo,pn
lret
out
cmp
jbe
mov
mov
fisubrs
jmp
js
mov
lea
xor
jae
push
orl
sbb
bound
mov
call
imulb
cli
jge
ret
jp
mov
xchg
cmp
and
mov
xchg
xchg
test
in
or
fldt
repz
daa
add
sti
je
outsb
dec
in
pop
insb
into
inc
jle
xchg
inc
pop
mov
push
jg
imul
inc
inc
push
test
xor
jmp
xchg
movsl
inc
popf
aas
gs
mov
pcmpeqd
dec
js
push
movsb
nop
fists
scas
inc
cmp
mov
push
ss
lret
std
in
stc
mov
mov
jo
push
push
ret
test
cmp
push
jnp
pushf
cmc
jmp
sbb
ds
sub
ljmp
pop
jg
pop
pop
bswap
aas
cmp
cmp
mov
shl
into
je
mov
sub
jge
into
cltd
enter
aad
dec
jne
pop
cmp
push
jne
addr16
jecxz
xchg
xchg
mov
in
pop
xchg
daa
push
fimuls
rcl
ret
mov
fisttps
jo
push
fcompl
rolb
cmpsl
push
arpl
in
shl
int3
inc
inc
sbb
cmpsl
or
out
or
pop
pop
ljmp
and
xor
fldenv
mov
mov
outsl
sub
lret
mov
dec
push
push
sbb
pop
pushl
mov
cmp
sub
pop
push
mov
mov
mov
jbe
mov
mov
push
sub
outsl
arpl
addb
cmp
xlat
or
clc
fs
jp
pop
sbb
movsl
sbb
push
dec
push
movsb
cltd
rol
xchg
push
sbb
std
mov
xchg
loope
jge
fs
stos
sbb
xchg
mov
arpl
add
je
mov
inc
fisubrl
pop
mov
xchg
ret
cmp
ss
imull
addr16
fs
aad
adc
fnsave
mov
int3
mov
aam
mov
xor
mov
jbe
push
adc
push
data16
pop
cmp
pop
ss
push
mov
sub
mov
adc
xchg
and
cmp
ljmp
cltd
cltd
and
or
fidivs
jne
cltd
fbstp
cwtl
mov
int
jecxz
cld
and
and
nop
cld
mov
cmpsb
scas
push
jbe
pop
and
push
aad
insb
jg
pop
pop
popf
sub
push
test
imul
mov
and
loopne
dec
dec
scas
push
xor
pop
xor
clc
sbb
or
cmp
sub
hlt
aam
push
inc
das
and
or
inc
mov
mov
sub
repnz
das
mov
cli
mov
adc
sbb
iret
lods
mov
xorb
outsl
sbb
and
sti
in
push
pop
insl
or
out
inc
ljmp
daa
mov
pushf
lods
dec
in
insb
adc
or
fwait
aaa
insl
fists
mov
xor
gs
test
rorl
sbb
pop
and
adc
xchg
nop
pop
jb
mov
mov
jns
nop
jno
sub
pop
lock
xor
idivb
out
add
or
inc
pop
pop
lds
adc
jne
icebp
lret
jecxz
xchg
mov
in
xchg
jbe
inc
lods
and
inc
movsl
loope
mov
divl
sub
out
add
xchg
jnp
pop
push
and
jmp
xor
or
into
test
movsl
insl
inc
in
cld
mov
jmp
push
cmp
or
mov
pop
divb
out
jo
adc
push
jo
sub
sbb
mov
sar
nop
shl
jb
cmp
dec
xor
out
xchg
xchg
lret
jmp
ror
adc
mov
mov
cli
jg
fsubrp
shrb
dec
aad
xchg
leave
bound
call
adc
adcb
inc
das
add
xor
sub
jb
sub
orb
es
icebp
push
add
sbb
pop
or
jbe
enter
nop
in
xor
insb
mov
xchg
push
xor
lods
mov
fld1
jno
jmp
add
push
dec
stos
inc
stos
outsl
scas
sub
ret
and
ss
dec
pop
dec
or
pushf
inc
pop
dec
hlt
or
into
stos
lock
ja
ja
lret
sarb
pushf
sbb
mov
sbb
dec
mov
fsubs
jnp
adc
pop
jns
mov
mov
pop
inc
push
lahf
sub
cs
sub
inc
fcomps
cwtl
andb
addr16
inc
outsb
leave
insb
in
sahf
sub
push
out
xlat
sub
fbstp
push
outsb
inc
rsqrtps
test
mov
dec
sbb
dec
cli
xchg
pop
pop
sbb
ror
call
push
inc
popa
push
std
leave
std
mov
orb
js
pop
rcrl
imul
fistpll
mov
lcall
add
mov
out
ds
xchg
mov
cwtl
js
add
out
mov
and
mov
add
lock
divl
mov
inc
orb
jle
xor
dec
xor
xor
jmp
lcall
test
loop
in
mov
mov
dec
loop
arpl
repnz
mov
cmpsb
mov
cwtl
movsb
add
add
mov
inc
nop
cmp
std
cmp
inc
sbb
cmc
sub
add
jns
and
mov
clc
mov
loop
jg
call
cld
jns
in
cmp
ss
xor
fldcw
dec
fdivs
pop
push
lock
sarl
xchg
sub
xorb
adc
aad
jno
iret
cltd
jle
ljmp
push
dec
cs
cmpsl
outsb
or
xchg
dec
sti
xor
inc
inc
mov
mov
lds
mov
lahf
pop
daa
pop
adc
adc
arpl
lods
add
adc
pop
cmp
loope
jecxz
movsl
scas
dec
bound
fdivs
ret
iret
push
xchg
mov
push
lret
imul
lods
or
dec
in
xchg
imul
sarb
int
rol
cmpsl
aas
pop
xchg
mov
xlat
mov
jecxz
jl
movl
mov
std
push
stc
cli
dec
push
jmp
inc
rcr
cmp
cmp
push
int
jg
sbb
cmp
inc
ds
call
stos
inc
aam
xchg
dec
sbb
jne
cwtl
rcrl
pop
mov
adc
mov
dec
ljmp
mov
cld
cmp
add
int
jne
add
and
mov
imul
mov
repnz
mov
and
inc
les
mov
add
mov
pop
mov
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
arpl
pop
divb
xor
shrb
fcom
jge
je
add
in
test
popf
jmp
mov
jns
add
xchg
repnz
mov
js
cmp
imul
sti
stos
jge
loop
fimuls
inc
xlat
paddsw
lret
push
sub
repz
rcll
test
add
xchg
cmp
sub
scas
cmp
ja
bound
cmp
loopne
scas
push
int3
psubusb
sbb
es
cmp
jnp
xorb
add
push
cmpsl
mov
push
jnp
data16
jnp
push
inc
cmpl
push
cmc
out
outsl
add
cmp
cmc
or
fcmovnu
arpl
cmp
int3
mov
mov
std
fstpt
adc
imul
insb
cmp
rol
xor
out
dec
enter
outsw
pop
outsl
xchg
push
inc
mov
xor
add
lret
repnz
imul
pusha
mov
packsswb
insb
xchg
fs
sub
mov
lea
jle
jno
mov
insl
lea
add
stc
jle
jl
dec
lods
lahf
popf
mov
in
mov
int
adc
movsb
push
push
fiadds
mov
ja
sub
jg
xchg
js
insl
jnp
in
inc
xlat
pop
popf
pop
loope
xchg
jnp
adc
add
xor
sbb
or
mov
and
out
insw
push
push
lock
push
je
mov
push
mov
adc
jmp
cmp
push
pop
es
and
aaa
fcmovu
cmp
mov
loopne
cmp
in
aas
aas
das
out
cmpsb
xor
sbb
fcomps
mov
fistpll
pop
inc
mov
rcr
out
divl
xchg
sub
mov
jbe
es
or
jno
mov
aad
pushf
out
or
sti
sbb
repnz
jmp
add
fbld
pop
rorb
sub
jp
sbbb
push
xchg
adc
lods
mov
mulb
rclb
mov
sbb
dec
dec
xchg
psubsw
sbb
movb
inc
jbe
xchg
mov
dec
push
popa
paddb
pop
pushf
stc
subb
push
sub
rorb
push
jnp
add
mov
push
inc
push
scas
lds
cmovns
loope
jno
and
cmp
imul
aas
add
roll
into
les
in
stos
mov
add
aam
lret
mov
shrl
jmp
cmpsb
vphaddwd
std
dec
mov
out
imul
frstor
mov
mov
add
push
and
push
jbe
adc
xor
mov
jmp
std
cld
lcall
push
gs
mov
add
iret
mov
push
mov
xchg
cmp
fs
ret
pop
mov
in
add
shrl
mov
scas
xor
bound
aad
mov
dec
imul
pop
sub
xchg
dec
shl
pop
int3
xlat
mov
fwait
mov
push
inc
sbb
cli
jns
jl
jge
mov
sbb
jb
mov
daa
adc
je
nop
push
xor
lcall
xchg
in
xchg
or
push
lods
xor
jmp
nop
aam
rclb
cmc
pop
cmp
lods
jno
mov
push
rclb
dec
call
pushf
dec
das
inc
cld
fldenv
cmp
cld
rolb
cmpsb
jbe
imul
push
inc
mov
inc
icebp
adc
repnz
sub
call
lahf
inc
dec
sub
sub
aad
test
add
dec
jne
lret
movsl
subb
lock
xchg
daa
pop
dec
js
rolb
sbb
dec
inc
and
dec
mov
notl
mov
dec
insl
mov
es
push
add
addr16
shl
notb
lds
aaa
outsb
pop
add
jb
mov
movb
sbb
sub
hlt
cmp
mov
call
fisubrl
jmp
pop
int3
mov
es
aas
mov
cli
inc
call
jb
stos
inc
shlb
jle
aas
or
cmp
loop
daa
sub
cmpsl
push
testb
shrb
xor
sar
ret
and
dec
stos
jae
sbb
movsl
jp
mov
push
sub
pop
ret
insl
and
push
sbb
pop
test
mov
bound
jg
inc
sbb
das
sub
ss
xor
mov
jge
dec
xor
insb
add
inc
and
shll
xchg
jmp
aaa
jp
cltd
imul
popf
sti
out
mov
ret
jg
scas
lods
xor
push
out
leave
bnd
jnp
divl
test
das
pop
fnstsw
mov
arpl
fbld
mov
mov
hlt
popf
jb
xchg
push
daa
pop
sbb
repnz
test
jecxz
xchg
xchg
out
xor
ljmp
push
sub
loop
or
and
cld
sbbl
dec
mov
jae
aas
sarl
pop
mov
cwtl
shr
pop
jb
std
adc
dec
or
stc
inc
mov
dec
mov
dec
and
push
lods
sets
fsub
rcll
mov
andl
aad
cmp
jns
scas
icebp
das
dec
dec
pop
lea
jo
adc
fcoml
inc
xchg
mov
addr16
cmp
test
dec
pop
or
inc
dec
and
sti
ror
cmpsl
adc
xor
sub
addb
sub
cmovge
leave
adc
cmp
push
orl
stos
bound
mov
lock
filds
xchg
cmpsb
ret
inc
or
dec
xor
xchg
pop
xchg
push
sti
adc
xlat
iret
xchg
mov
pop
mov
inc
sarb
loop
sahf
loop
scas
push
insl
mov
inc
mov
jecxz
inc
or
out
hlt
jmp
jge
outsb
pop
or
inc
xchg
aaa
rolb
cmp
mov
xor
or
popf
daa
rcr
out
xor
sarb
inc
rorl
loope
xor
sar
sbb
mov
inc
out
rolb
int3
mov
fs
add
jne
lods
sti
sub
pusha
arpl
hlt
fnstsw
setne
pop
pop
adc
out
loop
loope
inc
mov
clc
sbb
pop
pop
add
jno
clc
or
mov
stos
insb
pop
jl
dec
arpl
daa
xor
icebp
sar
out
inc
xchg
mov
push
cmpsl
or
out
sarb
out
rcl
int
js
cld
popa
cmp
lret
movsb
imul
es
hlt
aad
sbb
mov
dec
repz
call
or
mov
fisttpll
dec
in
test
insl
mov
nop
jge
out
leave
pop
popf
fidivs
into
loopne
lret
dec
jmp
add
cli
xchg
push
mov
pusha
imul
mov
popf
mov
je
xchg
inc
stos
hlt
mov
ja
data16
in
rorb
cmp
out
fs
push
xchg
xor
mov
pop
xor
adc
stos
imul
mov
test
or
dec
in
pop
dec
movsl
lods
fsts
ret
mov
in
sbb
cmp
lea
rclb
jmp
fildll
les
xchg
mov
jecxz
xchg
add
lea
ljmp
lds
scas
sbb
fcmovnb
add
repnz
sti
aas
dec
sti
mov
aas
push
jmp
fs
pop
cmp
sub
xor
repz
sar
pop
shll
cli
rcrb
outsb
adc
insb
dec
outsb
lods
jae
cld
cmp
dec
bound
or
mov
in
dec
mov
jmp
and
sbb
adc
or
xchg
xchg
sub
scas
or
jnp
rclb
xlat
push
in
dec
fmull
mov
test
mov
test
iret
arpl
or
or
fisttps
sub
int3
hlt
movsb
jmp
mov
xor
and
shll
lahf
pop
xchg
mov
sub
cmpsl
mov
pop
in
bound
imul
stos
lea
movsb
ficompl
testb
mov
into
or
or
push
cs
loop
jnp
inc
and
xchg
mov
jmp
cs
js
inc
mov
pusha
xchg
ds
adc
in
or
insb
into
stos
imul
ret
stos
aas
mov
dec
jns
xor
gs
fsts
out
jae
mov
mov
fstpt
lcall
jle
push
mov
sub
es
or
and
ror
mov
cmp
outsl
or
cmp
divl
inc
jmp
mov
imul
clc
push
push
imull
data16
das
bnd
mov
pop
mov
lea
pop
xchg
frstor
dec
repz
dec
cmc
xlat
jae
leave
inc
mov
lock
xor
add
jnp
jae
xor
data16
inc
mov
sar
dec
sbb
and
mov
sub
je
adc
shl
push
movsl
sbb
sbb
dec
dec
adc
xchg
push
mov
jbe
js
lods
xchg
xchg
jle
imul
out
jae
aad
sub
je
or
ret
jmp
cli
mov
dec
xor
fcoms
mov
cltd
pop
lcall
ss
lret
jmp
fstps
fdivl
adc
ret
out
popa
shr
sbbl
fimuls
fadds
jne
lcall
push
pop
imul
outsb
jns
jmp
or
aam
dec
hlt
mov
or
fdivr
sub
in
push
push
shll
pop
xchg
movsl
mov
push
insb
dec
pop
pop
das
das
ss
mov
lcall
out
jb
pop
data16
mov
pusha
repz
std
repz
cmp
pop
mov
shlb
push
jecxz
fs
cltd
mov
out
mov
and
fmull
push
iret
incb
lcall
cmp
bound
test
repz
mov
sub
in
or
fstpt
ss
pop
ss
std
or
fwait
or
sbb
xor
test
pop
sub
lret
nop
xchg
std
mov
mov
jl
std
dec
fcoml
pop
xchg
ror
aas
push
jo
fcomp
or
cli
cmp
cmp
lcall
lret
dec
js
aas
pop
sarl
lea
add
mov
cmpsl
inc
fs
sub
call
insl
pop
inc
stos
jp
out
bound
mov
cmp
and
fisubrs
xor
shlb
data16
ret
cmp
andb
xchg
aas
sub
and
dec
cmp
mov
xor
mov
mov
push
pop
mov
pmaxsw
std
in
mov
test
dec
lret
push
rcrl
cwtl
dec
add
nop
stos
test
or
arpl
loop
mov
lds
leave
sub
shrb
inc
inc
inc
fistps
inc
dec
test
ja
sub
bound
call
pop
jmp
pop
insb
or
loopne
iret
jbe
inc
call
inc
or
lods
fcoms
stos
cltd
pop
stos
push
dec
pop
sub
mov
pop
pop
xor
inc
ret
pop
test
jg
sub
aas
cmp
pop
dec
push
aad
int3
mov
mov
lret
mov
jp
clc
addl
xor
gs
into
and
pop
jno
mov
sti
sbb
das
leave
orb
addr16
jge
ret
mov
lods
dec
ds
add
cmp
scas
or
xchg
pop
xchg
gs
movsl
and
js
test
adc
sbb
cmpsb
stos
rep
leave
mov
lea
pop
pop
hlt
xor
hlt
jecxz
add
jp
in
xchg
push
push
xchg
stc
lahf
xchg
lcall
sbb
pop
or
out
gs
fsts
test
mov
sbb
sub
cli
or
jno
sub
sub
sbb
pop
xor
aad
sbb
dec
cmp
sbb
bound
mov
jecxz
mov
hlt
aad
sub
inc
sub
rcll
xchg
je
sbb
mov
mov
int3
xchg
out
fwait
cmp
pushf
and
movsb
punpckhdq
pop
insl
sbb
ret
notb
xlat
lods
mov
aam
std
out
sbb
inc
inc
mov
test
xchg
mov
mov
shlb
xchg
mov
and
out
xchg
ja
cmp
pop
fcmovu
sub
sarb
sbb
jb
cmc
dec
aad
outsl
push
aad
jg
and
test
in
pop
xchg
aad
int
lods
fcoml
imul
stos
aaa
movsb
add
leave
shlb
ficoms
xchg
pop
je
fsubl
icebp
int3
lret
lahf
jb
ja
dec
fcoml
ficomps
iret
mov
lods
ret
adc
dec
fldl
pop
enter
pusha
aam
fwait
dec
movsl
faddl
push
stos
flds
aas
jae
ss
pop
data16
les
daa
mov
repz
sub
movl
add
fisubrl
sub
ljmp
add
lock
cmpsb
jl
rcll
sbb
jnp
lods
and
ljmp
lcall
shll
or
pop
cltd
in
xchg
fstpt
push
inc
int
and
pushw
imul
cmp
test
movsl
popf
inc
sub
jne
cmp
or
leave
stos
stos
js
jno
and
dec
mov
push
push
mov
jae
jb
cmpsb
fistpll
mov
jno
jno
movsl
int
movsb
pusha
lcall
lock
in
loop
jge
pop
jp
inc
test
mov
mov
mov
jae
imul
in
adcl
sarl
jg
jle
cld
xchg
mov
popa
pop
mov
pop
dec
or
rolb
into
inc
jnp
mov
stos
xchg
aaa
cmc
popa
jg
lcall
mov
loope
mov
sahf
aaa
xchg
lock
inc
ret
test
icebp
mov
das
or
insl
mov
enter
mul
test
fs
xor
lods
fidivs
mul
test
xor
dec
push
xchg
cli
mov
popf
pop
push
stc
ficompl
std
addr16
cwtl
adc
orb
xorl
fsubr
mov
adc
mov
aad
push
dec
dec
lahf
jp
xchg
sbb
sub
shll
insb
mov
fists
pop
jp
negb
and
add
sbb
cmc
xchg
cwtl
rcrb
cmp
pop
leave
pusha
lods
lods
push
adc
dec
mov
jp
rorb
mov
in
stos
add
dec
jl
stos
xchg
sub
and
negb
aaa
xlat
and
imul
xor
lret
aas
or
mov
sbb
sbb
aas
insb
mov
call
xchg
sub
in
add
outsb
mov
lods
mov
ret
les
inc
xchg
sub
dec
push
inc
scas
lock
pop
jle
dec
cwtl
jl
out
sub
gs
mov
sar
or
lahf
pop
ret
mov
iret
imul
sbb
sub
adc
push
sub
dec
or
adc
sbb
push
push
xchg
or
mov
cwtl
mov
inc
pop
icebp
sarl
movsl
pusha
jno
mov
pop
cmp
std
and
aas
and
in
xor
sub
shl
pop
decl
outsl
cs
sahf
xchg
adc
mov
xor
imul
lods
popf
inc
pop
push
dec
out
push
lds
mov
mov
repz
outsb
lcall
cmp
or
dec
or
dec
fwait
gs
inc
push
fst
jno
sub
in
jg
cltd
adc
sti
pop
dec
mov
js
inc
sub
add
out
jns
push
mov
jge
cmp
mov
jecxz
pop
mov
repnz
mov
xchg
insl
jp
imul
sub
andb
cs
insb
sub
imul
and
cmpsl
add
inc
xor
inc
dec
mov
repz
and
xchg
ja
or
push
hlt
in
cmc
sbb
mov
lods
gs
dec
pop
jge
sbb
test
bound
imull
fldl
fcomps
xor
lods
push
inc
mov
cltd
mov
cltd
fisubrl
and
dec
push
bound
mov
stos
cmpsb
jb
dec
dec
jmp
das
mov
stc
push
mov
mov
lea
lock
cs
pop
mov
pop
test
mov
push
lcall
das
iret
push
bound
pushf
xor
pop
push
cmp
int3
inc
shll
add
cmpsb
push
dec
adc
roll
rcrl
fwait
pop
out
xor
add
movsl
inc
sbb
daa
sti
ds
pcmpeqd
mov
scas
xchg
inc
xor
cmp
aas
sti
jnp
enter
test
jae
test
pop
push
cmp
xchg
ljmp
cmp
pop
fildll
adc
cmpb
shll
mov
jmp
xchg
ja
xchg
and
cmp
dec
mov
pop
or
lahf
mov
add
sbb
mov
stos
iret
mov
mov
mov
lods
in
imul
sbb
cltd
inc
push
sub
xchg
cli
push
in
mov
shl
dec
stos
push
test
vmread
xchg
cltd
pop
icebp
mov
push
adc
cmp
lahf
loopne
pop
sbb
jmp
cmp
test
push
xor
cli
lock
and
xor
aad
pop
insl
imul
push
add
and
pop
insb
out
dec
std
push
mov
loope
or
xor
mov
aaa
jae
orl
in
or
sarb
push
or
pushf
push
xchg
cltd
push
xor
dec
push
jmp
mov
mov
push
mov
xchg
imul
jp
leave
mov
jnp
jno
les
inc
xchg
shl
and
je
pop
loope
sub
out
xor
adc
leave
cmp
adc
dec
xchg
and
movhps
dec
pshufw
cmp
or
inc
repz
gs
xchg
scas
xor
fs
leave
outsl
inc
add
les
int
push
push
xor
mov
cmp
or
test
sub
jp
popf
jmp
sub
lds
aad
sbb
popf
data16
adc
lods
cmp
dec
mov
stos
xchg
daa
mov
fimull
bound
pop
add
ss
icebp
pop
and
ljmp
pop
in
add
enter
mov
in
cmp
inc
cmpsb
test
mov
fisubl
cmc
push
xor
divl
into
cmp
adc
movsl
mov
sbbb
jae
mov
mov
repz
sahf
adcb
cmc
mov
xchg
lahf
sbb
push
scas
pop
pop
insb
mov
in
inc
pop
shl
adc
subl
add
jae
push
sbb
jl
pop
mov
jns
fstl
dec
mov
mov
stc
fs
mov
ret
push
stos
test
jmp
add
inc
dec
cmp
push
les
push
lcall
add
mov
les
enter
push
dec
stc
jp
cli
mov
popa
mov
xor
leave
sub
fldl
push
cltd
and
push
testb
aad
sbb
scas
arpl
shl
mov
dec
push
fnsave
ja
inc
mov
push
jmp
push
cmpb
mov
sub
sbb
sub
outsb
xchg
lahf
push
xchg
lret
in
cmp
jae
xchg
mov
pop
mov
ret
lcall
add
adc
add
inc
mov
sub
or
xor
and
xchg
mov
je
shrb
mov
insl
and
pop
shl
cmp
mov
lret
push
rol
jno
sub
and
pop
enter
mov
jg
and
inc
lea
mov
jg
stos
cwtl
in
xchg
ja
mov
shll
test
getsec
rcl
cmp
fld
mov
stos
call
out
lahf
jns
push
push
test
repz
inc
nop
mov
insl
mov
das
sub
mov
lcall
js
mov
xchg
push
sahf
scas
push
pop
cmp
push
mov
jl
cmp
jb
cmpsl
repz
ret
cwtl
fildll
imul
xchg
mov
sti
push
mov
pop
aaa
rcrl
cmp
sub
jnp
jnp
dec
outsl
push
dec
sbb
lidtl
mov
add
inc
movsl
ds
xchg
cmc
dec
cmp
cmc
loopne
repz
jb
sbb
imul
adc
mov
mov
mov
jp
inc
lahf
sbb
lods
clc
jmp
mov
adc
mov
and
pop
ja
mov
jge
scas
iret
ja
cmc
push
fsubr
enter
stos
cmc
adc
ret
aam
mov
xor
fmuls
add
pop
pop
inc
ret
aas
mov
outsb
jo
jl
push
inc
pop
lock
mov
and
sub
out
hlt
test
inc
mov
sub
xchg
inc
stos
sbb
xor
scas
mov
push
cltd
inc
jae
jmp
lret
loop
inc
jo
jb
adc
sbb
test
cmpsl
sub
lea
or
add
in
stos
fstpl
xor
inc
jns
pop
repnz
or
dec
fisubl
rcrl
aam
jnp
iret
pop
mov
mov
repz
idivb
insb
out
push
mov
fcmovne
aaa
jnp
outsl
jle
or
fdivrl
scas
mov
loop
sub
lret
mov
dec
mov
iret
sbb
roll
and
pushf
sub
lods
ds
pop
and
pop
inc
push
adc
jb
in
hlt
sbb
ret
xchg
aas
push
push
fprem1
sub
push
lds
ret
daa
pop
leave
mov
ljmp
out
xchg
adcb
xor
int3
dec
pop
sbb
lret
add
pop
jne
mov
add
and
repz
popf
xchg
jge
xlat
or
imul
call
divl
leave
repnz
dec
call
pop
dec
xor
pop
mov
mov
insb
pusha
mov
loop
adc
inc
push
dec
imul
dec
int3
mov
rclb
push
adc
pop
jle
in
adc
test
into
icebp
sbb
cli
dec
loop
mov
mov
cmp
popa
mov
dec
inc
das
and
dec
adc
and
lahf
stos
outsl
mov
adc
pop
xchg
cmp
lods
ds
aam
sarl
dec
aaa
sbb
push
lds
or
loop
cmp
rclb
or
dec
lds
aad
jbe
stos
and
fadds
es
xor
jg
and
add
sti
ja
adc
cmp
mov
push
dec
sub
sbb
push
shll
out
lods
adc
xchg
lds
mov
add
jne
xchg
cmp
push
aaa
stos
jmp
lock
mov
jae
popl
mov
pop
jno
mov
xlat
push
xchg
jecxz
or
cmpsb
xchg
xor
xorl
xchg
mov
cmc
jge
out
mov
in
sub
jle
popf
jne
nop
jge
push
in
mov
and
and
fprem
xchg
lcall
or
stos
cltd
jno
mov
imul
jns
xchg
mov
inc
mov
fisubl
or
cmp
int3
cmp
pop
mov
mov
lock
sub
push
mov
mov
scas
and
fsubrl
or
daa
iret
bound
enter
xor
insl
lds
addr16
fisubrl
cwtl
out
outsb
cmpsb
popl
pop
push
sbb
push
sbb
dec
idivb
jecxz
in
mov
roll
data16
adc
sbb
push
inc
add
lret
orl
fstpl
icebp
cmc
int
lahf
lahf
mulb
lds
sbb
movsl
call
popf
jo
sbb
fstl
mov
pop
sahf
sbb
pop
push
jb
and
xor
pusha
cmovge
imul
aas
xor
lods
push
pop
out
rclb
je
or
out
mov
into
dec
push
out
psubw
imul
mov
or
pop
lock
stc
aaa
aas
xchg
bound
sub
pop
pop
movsb
lds
mov
hlt
lahf
lods
mov
sti
subl
into
gs
stos
or
add
in
mov
and
stos
inc
lock
cmp
adcb
xor
xor
mov
add
jl
push
push
aaa
ss
sub
data16
add
sub
stos
mov
out
jecxz
xchg
stos
push
dec
loop
mov
jno
mov
sub
scas
test
inc
push
cmpsb
cmp
pop
cmpsb
xchg
repz
aad
mov
pop
cmc
hlt
cmpsb
xor
test
test
xchg
in
aas
test
push
and
adc
sub
fstpl
pop
fisttpl
pop
add
ljmp
cmpsl
mov
dec
in
jb
das
dec
fdivr
pop
jno
sub
xchg
or
pop
mov
ret
mov
and
cmpsb
or
daa
addr16
lea
fsubrp
inc
mov
and
lret
dec
and
es
jle
enter
jge
data16
popl
push
mov
or
fldl
mov
xor
and
mov
repnz
xor
cmpsl
dec
jnp
xorb
mov
scas
cmpsl
lret
push
sbb
xor
mov
inc
sbb
bound
mov
int
cs
adc
sbbl
jns
stos
aam
vcomisd
mov
pop
xor
lahf
imul
inc
repnz
jl
repnz
rolb
mov
mov
nop
fcoml
xchg
mov
js
push
xchg
add
cmp
std
inc
and
push
or
cli
inc
pop
mov
sub
in
nop
movsl
jle
ljmp
fld
dec
incl
pop
mov
cltd
lahf
cltd
cmp
dec
fldt
roll
lock
lock
imul
mov
insl
pop
adc
push
ljmp
enter
inc
jge
in
cmp
insl
sub
sbb
sbb
mov
mov
and
divb
mov
sbb
push
mov
or
xchg
push
es
out
add
aad
hlt
pop
das
in
and
pop
loope
inc
sbb
jns
adc
andb
popl
inc
ds
sahf
mov
cwtl
push
xchg
sahf
xchg
dec
daa
xlat
jb
jns
jns
outsb
call
adcl
and
jmp
adc
xor
cmp
lret
pop
aas
xchg
mov
cwtl
ja
mov
and
sbb
popf
sbb
ret
jae
fnstenv
sub
mov
push
movsl
div
mov
mov
xchg
or
pusha
aaa
out
outsb
mov
push
imul
pop
cmp
inc
mov
sub
dec
xchg
repnz
std
or
inc
pop
gs
xlat
inc
ds
dec
lahf
fstpl
jmp
mov
push
dec
xchg
and
xor
aad
int3
lret
rcl
jle
and
subl
iret
xchg
sub
pop
rorb
mov
mov
fistl
repz
adc
loopne
pusha
pop
stc
xchg
or
pushf
sub
push
sub
fmuls
lock
int3
fwait
xor
mov
out
dec
out
cwtl
mov
lods
aas
dec
sbb
lea
push
cld
and
sub
shrb
xchg
inc
jge
loope
or
subb
int
jae
lods
or
add
sbb
inc
jns
sbb
sub
cltd
mov
dec
push
xchg
ss
mov
dec
xacquire
mov
lahf
nop
aam
adc
ret
inc
pushf
and
ret
hlt
cmc
adc
movsl
add
adc
mov
data16
in
adc
shll
enter
inc
add
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
sti
fdivl
push
push
sub
push
push
push
scas
pop
in
cmp
aaa
or
jne
testl
scas
xchg
mov
pop
ja
xchg
cmp
adc
adc
fmull
enter
cli
and
in
mov
fs
sbb
jecxz
ljmp
dec
and
in
xchg
and
inc
div
xchg
mov
or
and
popf
repz
cltd
pop
test
pop
shlb
mov
outsl
aam
mov
or
xchg
iret
idivb
popa
loopne
frstor
into
dec
negb
icebp
xchg
outsl
sbb
pop
lods
pop
arpl
pop
push
int3
ret
mov
push
insl
jp
mov
mov
jg
add
push
filds
das
aad
stos
adcb
outsl
mov
mov
lcall
dec
aaa
xlat
dec
test
sub
push
test
jl
push
stc
inc
and
dec
adc
cmp
gs
add
fnstenv
jns,pt
jecxz
shll
mov
cmp
mov
and
mov
sub
rep
adc
daa
adc
add
sbb
std
fadds
and
sbb
push
and
les
dec
inc
cmp
jns
sbb
cmp
push
dec
repnz
mov
lods
mov
xchg
stos
xchg
stos
mov
push
clc
jb
xchg
in
inc
bound
ljmp
shlb
imul
xor
outsl
insb
ja
ret
xor
pop
xchg
fildl
inc
addr16
cmp
pushf
push
les
mov
xchg
bound
and
pop
inc
mov
mov
out
jg
cmp
in
jmp
sti
sbbl
or
sti
icebp
in
xor
into
or
insb
sub
jle
jb
fiaddl
or
or
rol
aas
xorl
ljmp
dec
cltd
fimuls
test
dec
stc
add
insb
adc
fadds
jne
rcrb
mov
icebp
mov
cmp
mov
add
lods
cwtl
sub
inc
enter
jg
fmuls
cmpsb
repz
fbld
mov
xchg
lds
sbb
inc
test
push
sub
mov
or
ja
pop
mov
insl
cmpsl
push
cs
pushl
test
xor
aas
sub
dec
pop
arpl
sbb
test
insb
jne
sbb
dec
ja
fdivs
pusha
ds
or
jb
scas
ljmp
cmc
mov
aam
pop
jo
mov
testb
add
cmpsb
adc
jnp
sub
mov
pop
cmc
and
jno
daa
int
xchg
or
addr16
sub
xchg
cmp
sahf
xor
mov
push
iret
dec
pusha
sbb
sub
lods
sbb
adc
data16
sbb
dec
or
xor
sbb
push
subb
test
movsb
push
fs
inc
mov
gs
fisubrs
in
mov
cld
mov
sub
jl
daa
sbb
pop
mov
fwait
sub
sub
insl
dec
imull
test
pop
ds
lret
pop
repnz
scas
push
cmp
pop
dec
sub
iret
or
mov
mov
jmp
jmp
push
cmpl
sub
sti
bound
mov
int3
movsl
loopne
data16
or
pop
cmpsl
aad
pop
lea
andl
dec
nop
fs
mov
inc
into
xor
fdiv
add
adc
mov
fbstp
adc
mov
scas
shrl
sbb
mov
push
pop
fbstp
das
shl
jo
and
and
hlt
rcrl
ljmp
rcrl
arpl
push
add
fisubrl
mov
ljmp
add
mov
mov
mov
adc
imul
test
fiadds
push
push
cmpl
mov
push
adc
lods
push
adc
imul
mov
cmp
add
fnstenv
add
mov
jns
sbb
test
loopne
mov
dec
pop
cmp
jno
insl
sbb
iret
pop
orb
aaa
dec
adc
pop
out
cli
pop
or
or
mov
pushf
jmp
leave
sahf
popa
loope
aam
loop
push
xchg
xchg
out
mov
push
sti
repnz
insl
fistpl
repz
or
mov
mov
inc
mov
pop
popf
mov
pushf
cltd
pop
ficoms
rolb
in
jl
mov
jno
adc
andb
jmp
pop
push
shll
mov
mov
outsb
lea
xchg
push
subl
adc
mov
mov
dec
adc
std
cltd
mov
in
test
dec
fwait
sub
xchg
sbb
or
shrl
sub
push
sbb
imul
mov
xchg
push
or
icebp
std
mov
push
push
aaa
pop
sub
jne
push
add
inc
int3
jle
lret
stc
mov
faddl
lock
sub
loope
arpl
lcall
xchg
adc
ss
orb
mov
fldenv
pop
xorb
test
add
loope
mov
loop
mov
cmp
dec
les
mov
fistl
testl
inc
or
dec
aam
mov
inc
insl
xchg
or
out
imul
dec
mov
stos
inc
stos
jne
sbb
into
jle
mov
stos
and
push
inc
dec
out
jecxz
fistl
jge
push
dec
cmp
leave
pop
outsb
cmc
sbb
pop
lea
ljmp
mov
inc
xor
mov
mov
repz
je
imul
fwait
mov
pop
sub
mov
sub
adc
mov
dec
or
jg
adc
insb
stc
popa
fmull
cli
mov
xchg
lods
and
inc
push
pushf
out
lret
clc
mov
fimuls
iret
stos
aad
pop
es
inc
add
loopne
xor
subl
mov
inc
jno,pt
fucomip
fadds
enter
das
cmc
and
and
dec
sub
jns
add
inc
jns
cs
pop
or
mov
and
cmp
jg
sbb
sub
adc
mov
inc
dec
xchg
xor
mov
insw
mov
sub
aaa
sub
sbb
insb
pushf
and
lea
loope
or
or
mov
adc
push
pop
jmp
sub
popf
popa
dec
xor
das
xchg
pop
or
jo
mov
and
mov
and
adc
or
lods
push
fistps
inc
xor
mov
jle
dec
cmpsl
ja
movsb
jbe
push
xor
xchg
idiv
pop
xchg
add
imul
je
sbb
mov
xchg
sbb
cli
leave
cmp
outsl
into
push
fcomps
jge
clc
mov
jno
sub
movsb
dec
dec
xor
rorl
dec
cmp
cmp
push
das
es
stos
add
xchg
rorb
arpl
xchg
fs
adc
subb
add
mov
mov
mov
fbld
lahf
std
dec
jnp
jle
push
mov
sbb
aaa
mov
jo
pop
cmpsl
scas
loop
fs
mov
add
ja
push
cltd
sarb
popf
es
stos
cwtl
adc
add
jno
xor
sub
mov
pop
or
mov
xor
les
js
sbb
js
ret
leave
stc
out
xchg
cmp
xor
dec
in
sbb
fwait
std
pop
lret
mov
sub
or
and
mov
mov
arpl
push
faddl
adc
inc
sahf
cmp
stos
subb
int
mov
gs
test
std
inc
cmp
push
imul
hlt
inc
mov
inc
adc
shrb
xchg
mov
xchg
popa
mov
sahf
or
xchg
fdivp
rolb
mov
sub
roll
int3
cmp
roll
push
jg
xor
cmp
xor
lcall
push
out
lret
cmp
cmp
cmp
adc
lods
dec
mov
call
fcompl
in
into
andb
stos
std
mov
pop
iret
push
sub
push
fadd
std
aaa
inc
cltd
aad
ljmp
and
arpl
sbb
push
mov
xchg
cmp
sub
in
mov
mov
enter
lcall
shl
add
enter
push
push
cmp
popa
in
hlt
xor
stos
gs
xchg
dec
fidivrs
jne
pushf
shl
sahf
out
sbb
inc
bnd
cmp
fbstp
and
pusha
fdivr
sub
pushf
or
idivl
pop
in
adc
sub
cmp
arpl
pop
ss
inc
xor
adcl
inc
adc
mov
stos
adc
js
adc
leave
and
cmp
inc
pusha
sub
scas
xor
adc
cmp
dec
int
push
xlat
lcall
gs
sbb
xlat
pop
xor
mov
lcall
movsl
inc
daa
in
mov
cs
leave
scas
in
aad
call
ret
fcoms
mov
cmpsb
mov
or
xchg
sbb
pop
mov
fwait
aas
iret
orl
sub
cli
or
and
sub
aaa
and
push
push
dec
dec
jle
push
sarb
xlat
push
adc
xor
pop
and
sti
aas
push
clc
dec
push
inc
cwtl
xor
fs
or
inc
int
dec
cmp
mov
or
js
pop
clc
inc
xor
dec
xchg
add
jnp
decb
push
sbb
push
jo
int
jle
push
pop
jnp
cld
leave
lret
out
mov
cmp
jge
in
dec
shl
jle
cltd
fucomp
aad
inc
mov
loop
add
std
mov
popa
add
mov
xchg
sub
adc
cmp
mov
fcomps
mul
jecxz
fcom
pop
mov
add
mov
adc
mov
pop
inc
jp
inc
mov
sbb
arpl
xor
dec
rol
aas
imul
push
inc
xchg
inc
int3
aaa
or
and
pop
xlat
xchg
adc
mov
aad
pushf
shrb
or
mov
add
stos
push
jbe
in
mov
aam
mov
sub
or
jmp
fcoml
xor
pop
add
dec
jo
out
stc
rolb
orb
je
jb
or
ror
mov
shlb
push
mov
dec
dec
out
ds
xor
js
inc
pop
inc
mov
insb
xor
fs
jne
lahf
cmp
xchg
jns
pop
pop
add
imul
scas
xor
inc
xchg
push
insl
cmp
jae
push
bound
sub
jb
mov
mov
fsubl
out
testl
push
xchg
push
ja
int3
mov
lcall
push
rcll
movsl
sub
out
and
int3
les
adc
push
in
push
js
push
xor
sub
jg
jl
mov
xor
data16
mull
outsl
push
push
cmc
mov
jecxz
xchg
or
imul
aaa
in
xchg
xlat
jno
stos
rcrl
js
sahf
inc
cld
inc
test
scas
inc
fcompl
call
pop
dec
loope
aaa
movsl
pop
jle
sub
outsl
ja
rorl
or
mov
jecxz
ss
cmp
dec
adc
push
mov
mov
sub
out
loope
or
fcoms
pop
cmc
movsb
xlat
call
mov
adc
cwtl
sub
xchg
mov
ret
xor
fwait
mov
push
dec
nop
xor
mov
test
stos
push
les
add
neg
pop
add
xor
pop
mov
fmuls
in
xor
call
and
xor
test
mov
xchg
jl
scas
adc
fistpll
int3
xchg
out
stos
xchg
shlb
icebp
push
push
xor
clc
xlat
push
outsl
sbb
pop
popa
lret
mov
out
fcmovne
sti
cli
insw
push
outsl
or
mov
mov
aam
adc
xchg
xlat
stos
shll
inc
push
pop
xchg
push
and
pop
sbb
inc
jb
call
out
jmp
lcall
lods
xor
in
and
xchg
data16
and
ljmp
pop
gs
test
xchg
cltd
pusha
push
mov
push
call
xor
xor
cmp
pop
lahf
mov
push
sub
int3
mov
daa
dec
repz
mov
inc
pop
mov
cwtl
cld
sub
adc
jmp
cmp
or
test
ja
iret
divl
and
cmpsl
pop
das
sbb
pop
cli
movsb
xlat
sbb
enter
sti
inc
lcall
sub
jno
fdivrs
mov
movsb
mov
cmp
add
inc
ja
dec
dec
cld
mov
mov
push
les
or
cmpsl
adc
xchg
scas
cs
aad
add
dec
out
imul
xchg
aas
dec
mov
mov
loope
sub
xchg
inc
pop
and
stc
add
push
nop
and
aaa
cmpsl
fisttps
iret
push
dec
fisttpl
fists
xchg
sbb
loop
push
add
adc
addr16
out
out
imul
jae
mov
cld
faddl
cld
outsl
mov
in
cs
mov
lods
aam
jg
jno
xchg
pop
shrl
xchg
push
inc
scas
and
push
subl
pop
sar
lods
lcall
and
daa
icebp
lcall
push
daa
lea
imul
xchg
lahf
mov
imul
fisttps
lods
lock
repnz
jle
fistps
je
mov
xor
sub
mov
fcmovnbe
mov
dec
push
jecxz
mov
icebp
lret
popf
test
mov
fdivrl
ja
mov
sahf
mov
fistl
filds
jecxz
fistpll
cli
outsl
in
cmp
xchg
sub
jl
addr16
cwtl
enter
mov
jp
jbe
out
jmp
imulb
enter
xchg
comiss
js
dec
dec
shr
test
popl
cmp
stos
push
ja
out
fs
mov
stos
adc
xor
ds
loope
test
test
clc
sub
or
sbb
xlat
ljmp
mov
loope
int3
jb
sti
mov
xchg
sti
cmp
sbb
shlb
repz
jle
testl
dec
testl
inc
addr16
mov
dec
mov
mov
cld
out
fimull
pop
adc
xor
mov
push
mov
or
xor
mov
lock
mov
or
push
mov
ss
add
movhlps
movsb
lea
hlt
sahf
imul
int3
pop
cmpsb
mov
gs
clc
mov
inc
cmp
cltd
lret
int3
sbb
xor
dec
loope
orl
cmp
loope
into
jo
loope
insb
incl
dec
xchg
inc
in
dec
jecxz
out
pop
movsl
fwait
dec
pushf
scas
mov
add
xchg
and
nop
lds
rol
mov
loop
mov
daa
fildll
leave
mov
push
push
sub
lret
xor
sarb
push
std
jae
stos
cmpl
lret
leave
in
cmp
xor
sti
call
inc
jmp
fidivl
orl
cld
xor
jb
movsl
push
inc
xor
leave
mov
adc
mov
sub
sbb
inc
xchg
lahf
loope
lret
pop
add
hlt
mov
mov
pop
stc
sbb
sbb
xchg
les
mov
cli
adc
mov
and
or
mov
xchg
adc
jne
test
or
pop
pop
imul
lods
xchg
push
or
mov
push
xchg
or
xchg
add
aad
filds
lahf
and
clc
cmpsl
test
adc
insl
scas
cld
stos
push
mov
adc
sub
or
fildl
leave
mov
lret
mov
xor
jmp
inc
sbb
sub
sub
sbb
xchg
fwait
push
xchg
imul
pop
fisubl
inc
cmp
orb
adc
mov
cld
fwait
add
xor
ss
gs
or
mov
inc
shlb
aam
insb
inc
scas
ret
clc
jae
mov
cltd
fsubs
sbb
adc
loopne
or
xchg
pop
inc
ret
sahf
mov
xorb
in
ret
insb
fistps
fisttpl
or
scas
mov
cmc
xchg
push
pushf
sub
cld
ds
clc
lahf
sbb
cmp
call
das
imul
test
icebp
mov
push
leave
cmp
cmpsb
test
sub
cmp
das
loope
mov
sti
add
mov
cmp
ss
iret
xchg
and
mov
movsb
jle
jne
sbb
pusha
sbb
jl
mov
inc
xor
insb
mov
iret
add
jmp
std
aad
fnsave
adc
adc
cmovno
jnp
mov
jae
mov
mov
nop
bound
and
or
lds
sub
mov
ss
xchg
stos
icebp
je
sub
sbb
sbb
stos
adc
or
lock
sarl
lea
iret
cli
das
xor
sbb
into
popa
mov
out
add
mov
inc
pop
add
rcrl
xor
xchg
and
or
aas
scas
sub
lods
jae
mov
sub
jns
cmpsb
mov
sti
push
xchg
lods
xor
lds
das
lret
sbb
into
cmp
inc
into
lock
aad
or
in
mov
push
movl
jb
outsb
fistpll
xchg
inc
sbb
add
out
xchg
icebp
xchg
or
sub
xor
shlb
cmpsl
scas
lds
loop
ret
push
jns
call
in
rorb
shrb
pusha
pop
inc
inc
dec
push
sub
sbb
cmpsb
aad
adc
jmp
push
sarb
test
fadds
mov
xor
sub
and
push
sbb
dec
sub
ss
push
leave
gs
mov
int
push
xorb
js
push
fwait
xor
arpl
dec
call
popf
mov
or
lds
push
mov
jecxz
dec
shr
jg
mov
pop
jl
cmc
and
add
pop
in
mov
adc
mov
jge
imul
push
sub
or
sub
sub
loope
std
push
push
popf
fwait
mov
xlat
out
movsb
sub
or
inc
scas
rcrb
aas
jle
push
adc
inc
leave
loope
leave
icebp
fldcw
arpl
pop
je
xchg
inc
cwtl
into
dec
push
push
push
mov
push
ret
sub
rcrb
mov
je
aaa
imul
ds
stos
outsb
and
sbb
push
outsl
sub
mov
sbb
cs
add
fdivrp
pop
mov
pushf
cltd
sbb
ss
xchg
enter
cmc
cmc
clc
add
jg
repz
inc
xchg
mov
ret
popf
push
sub
xchg
ss
loop
aad
adc
negl
or
or
int
pop
repz
cmp
frstors
push
jo
cmpsb
lahf
push
sub
iret
sub
mov
sti
mov
jmp
xchg
cmp
add
pop
push
in
loopne
pop
mov
mov
pop
stos
xchg
xor
test
push
xor
in
rcrb
mov
dec
imul
jl
xor
repnz
aad
jle
cmp
icebp
lock
jnp
int
inc
iret
repz
xchg
fisubs
les
xchg
mov
lcall
cmp
test
jno
or
add
xchg
xchg
cmp
lsl
xchg
stos
scas
es
leave
pop
inc
je
cmp
sbb
pop
mov
jl
rcr
mov
lret
aaa
outsb
jbe
maxps
sbb
ljmp
jo
cltd
cmpsb
dec
sub
lret
sub
and
dec
inc
mov
push
es
lcall
xor
or
push
or
dec
enter
xchg
jae
ret
xor
pop
out
inc
jno
sbb
dec
aam
add
es
dec
insb
add
xor
les
push
mov
xchg
sbb
js
bound
fldenv
dec
cmp
sbbb
mov
pop
loope
xor
cmp
fnstsw
lea
ret
cmp
gs
js
pop
mov
jp
cmpsl
push
nop
leave
scas
rcrb
and
and
mov
xor
xor
lods
leave
mov
aaa
inc
imul
mov
leave
leave
xor
shlb
or
push
and
int
and
adc
ja
insb
divb
daa
jl
out
push
inc
mov
outsl
mov
roll
jge
fists
hlt
mov
add
aaa
jae
xchg
shlb
ja
das
stos
pop
test
test
or
mov
subb
and
dec
sub
mov
dec
cmp
sub
shll
cmp
or
lds
pop
cmp
adc
push
pop
out
sub
jg
insb
out
sub
mov
mov
std
pushf
add
mov
dec
xchg
push
pop
aad
pop
icebp
xchg
mov
mov
lret
aas
cli
sti
ljmp
push
pop
cmp
add
loop
mov
mov
nop
xlat
fcompl
xchg
jns
ja
ret
mov
xlat
mov
pop
test
addr16
mov
call
push
mov
fldenv
xchg
or
pop
out
pop
add
dec
pop
mov
movsb
in
ret
pop
mov
cs
xor
mov
pop
sub
daa
xor
cli
xchg
cmp
xor
inc
scas
xchg
add
xor
in
mov
loopne
jecxz
das
add
lods
mov
xchg
into
jle
cmc
push
out
stos
arpl
data16
adc
mov
mov
push
out
rcrl
lea
insb
xchg
leave
xchg
mull
mov
movsb
cs
cmc
lahf
cmp
fwait
mov
dec
lret
sahf
cmp
mov
mov
jmp
dec
adc
inc
lret
push
cmpsw
fcmove
cld
push
or
push
mov
mov
aaa
pusha
shlb
pusha
push
aad
jae
inc
add
movsb
or
dec
add
add
jne
aaa
fwait
scas
shll
test
call
push
bound
mov
sbbl
es
and
scas
mov
and
or
xor
lods
inc
leave
ret
ret
fwait
jmp
push
fistl
pop
jbe
cmp
and
int
jp
js
add
hlt
push
les
mov
jecxz
pop
cmp
lcall
dec
jle
jle
or
mov
arpl
push
es
jg
adc
pusha
inc
stos
add
dec
cmp
orb
outsb
sub
mov
das
and
or
push
lea
and
lret
push
andl
fptan
inc
fnstenv
add
and
adc
jae
test
jl
pop
mov
stos
ret
dec
mov
mov
adc
xchg
push
sbbb
inc
in
pop
fwait
mov
pop
cltd
jle
jge
adc
fisubs
mov
mov
mov
jge
aam
iret
test
insb
test
lea
repz
xor
lahf
mov
sub
and
dec
out
sbb
in
sbb
addr16
lea
sub
jmp
xor
stos
das
fistl
inc
and
mov
mov
inc
or
cmp
add
stos
jb
pop
push
in
pop
lock
pop
mov
xchg
add
xor
mov
pop
mov
fwait
loopne
sti
and
push
mov
dec
imul
mov
push
or
ret
mov
dec
xor
sub
shll
sahf
mov
inc
outsb
pop
push
or
ljmp
push
int3
xchg
push
sub
mov
sub
lea
fwait
pushl
xchg
das
ficoml
mov
pop
xchg
push
int
or
mov
movl
and
insl
cmp
decl
sub
or
mov
fs
jmp
pop
mov
pop
jbe
mov
rcrb
lods
mov
pop
inc
cmpsb
leave
repz
ss
xrelease
imul
in
push
inc
jmp
sub
testl
dec
into
cli
inc
add
add
pop
add
xor
lods
ja
enter
jae
inc
stos
cmp
aaa
out
pop
sbb
jmp
jg
cmp
or
nop
pop
popa
or
leave
jl
xorl
jnp
arpl
in
movsl
xchg
lods
lods
add
enter
mov
lahf
ret
inc
stos
pop
js
out
inc
mov
stos
outsl
clc
iret
push
popf
cmpb
cmp
cmp
lock
pop
mov
gs
es
roll
iret
or
jns
inc
mov
test
jno
jl
xchg
or
loop
adc
aam
push
cltd
shll
test
jecxz
dec
dec
or
out
data16
test
cmc
mov
popa
pop
ret
out
mov
or
stos
int3
jne
inc
jne
and
repnz
insb
fwait
push
int3
icebp
and
lahf
add
repz
dec
int
jne
loope
jp
bound
fdivrs
icebp
sahf
je
ret
enter
lds
leave
fsubrl
aaa
xor
fsubp
inc
pop
push
dec
cmpsl
push
push
add
sbb
jg
inc
in
loopne
add
movsl
inc
scas
jle
ss
dec
jmp
lods
push
mov
or
jmp
sbb
push
es
orl
shll
adcl
mov
dec
add
and
out
xchg
push
adc
repnz
lods
mov
jl
fldcw
mov
test
scas
add
xchg
xlat
outsl
bound
sub
cwtl
fldenv
push
xor
das
or
mov
push
iret
cmp
fistpll
xor
ret
lds
loopne
xchg
fidivrl
jp
mov
shlb
jae
xor
in
pop
mov
data16
in
sub
loop
sub
and
test
lret
dec
inc
aad
mov
hlt
xadd
pop
pushf
xchg
out
icebp
leave
cltd
lock
jecxz
dec
scas
les
mov
les
and
mov
hlt
mov
xchg
sub
test
ljmp
std
out
and
pusha
dec
js
or
ds
popf
scas
loopne
and
xchg
mov
xchg
fiaddl
dec
fldt
mov
stos
xor
pop
mov
in
arpl
ss
dec
gs
jmp
pop
and
cltd
mov
xchg
adc
fists
adc
dec
mov
test
add
ljmp
fidivrl
inc
push
int
dec
cwtl
push
adc
jno
xchg
lcall
call
jae
mov
lock
xor
inc
cmp
cmp
bound
sbbb
filds
mov
or
jl
pop
inc
mov
cmp
dec
mov
mov
pop
cmp
pop
add
cwtl
pop
cmc
iret
add
push
push
aam
mov
mov
jle
nop
sbb
adc
int
jg
ljmp
loope
adc
xchg
and
sub
sub
inc
hlt
lret
push
pop
inc
int
mov
ret
dec
aam
in
rol
lcall
sahf
mov
cmp
pop
rorl
xor
mov
jp
sbb
faddp
rolb
enter
xor
jno
les
out
sarl
repz
mov
mov
pop
mov
aam
push
je
pop
aaa
daa
shrb
xor
ret
lds
bound
scas
push
inc
stos
dec
mov
xor
jg
adc
push
stos
add
inc
cwtl
shll
lock
push
imul
mov
imul
mov
mov
vmaxss
add
ss
arpl
and
add
sbb
adc
mov
lret
dec
inc
outsl
js
cmp
mov
fstl
jge
jnp
cmc
fnstcw
sbb
push
in
sub
sti
loopne
or
xor
push
jo
or
add
pusha
lds
pop
rcl
sub
sub
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
cltd
fs
or
push
push
xor
out
movsb
mov
inc
add
in
pop
loop
call
in
mov
dec
int
out
bound
pop
adc
outsb
xor
das
es
or
cltd
push
rcrb
cmp
jb
enter
inc
arpl
jg
sbb
mov
mov
mov
dec
mov
pop
xchg
push
out
push
jns
shrl
pop
shrl
enter
loop
xor
dec
xchg
scas
add
ja
les
mov
and
pop
push
sbb
jbe
jp
addl
mov
hlt
push
cs
insb
shlb
xor
stos
subb
pop
sbb
fwait
loope
outsb
lret
push
and
pop
mov
mov
add
xchg
scas
xor
out
pop
dec
inc
sub
or
and
ja
rcr
and
mov
cs
mov
lret
dec
mov
or
xor
test
xor
xchg
or
mov
sub
mov
ds
movsb
pushl
mov
dec
push
xor
test
test
jnp
hlt
leave
call
aad
cmp
mov
outsl
mov
inc
ret
call
and
inc
int3
pop
pusha
jns
testl
jmp
xchg
shrb
add
test
imul
shl
mov
push
mov
inc
shl
sub
dec
and
movsl
ss
hlt
es
pop
xchg
pop
adc
and
push
cmp
sbb
shld
jne
jo
fidivs
inc
mov
add
xchg
mov
jbe
sbb
inc
or
dec
dec
jge
shrl
mov
sub
int3
pusha
mov
or
dec
stc
push
mov
inc
arpl
mov
sahf
and
add
jns
or
push
mov
xchg
push
mov
js
dec
ss
xchg
cmp
aad
and
mov
fcmove
cmpsl
repnz
push
xchg
je
xor
mov
jnp
dec
mov
dec
push
into
pop
enter
or
sarb
xchg
aas
in
daa
es
fwait
insl
int3
or
sbb
mov
push
stos
in
icebp
cmpsb
mov
sub
insb
or
fstps
lahf
popa
push
dec
cmpsl
testb
insb
xor
cmp
arpl
insl
mov
or
xor
cmp
mov
nop
popf
push
dec
mov
cmp
leave
mov
adc
icebp
out
mov
sbb
in
idivl
repz
lret
idivl
loope
cwtl
mov
add
aas
push
les
repz
or
dec
mov
gs
lock
push
push
pop
cmp
pop
stos
push
and
sbb
arpl
pop
pushf
adc
add
mov
cmp
adc
push
popf
movsl
ds
jns
icebp
insb
dec
adc
push
pop
mov
out
mov
jb
aaa
lods
shrl
insl
sbb
pop
loope
negb
cmpl
test
popf
icebp
jg
adc
test
push
cmpl
adc
lock
add
ror
xchg
jbe
cltd
mov
loopne
jp
mov
mov
sbb
pop
mov
sbb
push
es
std
mov
sub
pop
std
push
pop
imul
popf
out
xchg
setne
and
mov
repnz
test
ret
pop
or
cmp
lds
fcoms
push
addl
lds
sbb
inc
xlat
pop
repz
in
xchg
lods
and
ljmp
repnz
scas
imul
fwait
cmp
mov
iret
arpl
cmp
fnsave
xor
push
cmp
outsb
lahf
scas
xchg
and
dec
pop
and
or
push
or
insl
fadd
imul
mov
mov
xchg
sbb
sub
sbb
fs
fdivr
xlat
xchg
xchg
inc
adc
sbb
fimull
cmpsb
out
out
out
psrld
and
lock
stos
addl
int
sub
lret
dec
dec
ja
shll
ror
call
popl
pushf
testl
pop
inc
adc
das
mov
lret
or
adc
fcoml
lea
jae
cmc
xchg
dec
movl
das
sub
repz
push
or
add
movsb
inc
ret
mov
adc
js
mov
popf
push
mov
into
in
mov
ds
lahf
cmpsb
jbe
sbb
gs
xchg
xor
mov
in
insl
and
std
std
push
cmp
add
sub
test
or
mull
inc
push
sbb
mov
into
test
std
lods
stos
and
imul
sbb
insl
pop
push
int3
mov
adcl
xchg
and
mov
xchg
stos
iret
mov
inc
mov
fisttpll
adc
mov
mov
add
testb
jo
sub
dec
addl
jl
sbb
jl
je
mov
aas
jecxz
lds
mov
cmp
lcall
pusha
push
and
rorl
test
cmp
push
push
clc
aas
sub
pop
clc
and
sbb
sbbb
xchg
sbbl
xor
mov
ret
loope
cltd
mov
fistpll
xor
inc
addr16
sti
mov
jg
fidivrs
das
ss
cmc
jns
popa
jnp
add
inc
aad
or
adc
das
ffree
sbb
jecxz
inc
ret
push
inc
cmp
cmp
test
ret
or
mov
add
lea
cmp
mov
js
jno
rcl
shl
xchg
or
cmp
dec
push
and
out
shr
xorb
ret
mov
pusha
sbb
jl
mov
in
or
and
into
push
subl
dec
insb
jbe
mov
gs
mov
hlt
std
or
outsl
cmpxchg
je
mov
cmp
std
popf
cmpb
adc
mov
insb
outsl
test
ret
cmc
inc
mov
jb
push
mov
pop
std
pushf
inc
xor
cld
pop
jnp
add
and
ljmp
mov
cli
pushf
xor
xchg
ds
pop
cmpsl
cmpl
xchg
outsl
jno
leave
inc
sbb
pop
daa
cmp
out
scas
sub
cvtps2pi
mov
ret
cltd
sub
sbb
das
fildl
sbb
pop
out
and
pusha
pop
mov
loope
sbbb
setbe
push
push
and
lahf
or
out
repz
sub
mov
in
loop
jno
push
sti
mov
gs
pop
andb
nop
lret
sbb
mov
stos
xlat
scas
pop
lret
hlt
lret
ljmp
fcmovnbe
jo
ds
inc
inc
ds
loop
iret
mov
and
cld
movsb
sub
in
mov
mov
repnz
std
iret
stc
sub
mov
loop
sahf
pop
inc
jl
add
jbe
xchg
jae
add
jne
pushf
xchg
and
and
push
or
sti
mov
lock
addr16
leave
jg
test
loope
and
adc
hlt
test
das
arpl
pop
repz
mov
hlt
es
clc
enter
out
out
arpl
push
pop
cmp
arpl
xlat
in
or
inc
aam
dec
pop
dec
inc
sub
mov
jno
add
ljmp
inc
pop
int
push
in
dec
scas
mov
inc
cs
cld
and
ss
mov
stc
mov
jbe
adc
stos
inc
rcll
movsb
xorl
cmp
push
imul
xchg
shll
test
and
fisttpl
mov
inc
insl
pop
or
incl
flds
cmp
loope
ret
inc
adc
cld
data16
sub
test
int3
popf
sarb
dec
lcall
dec
nop
outsl
mov
pop
jne
pop
stos
repnz
lret
and
pop
repnz
mov
inc
mov
pop
xchg
xchg
and
inc
mov
push
jg
xchg
mov
in
pop
out
push
lods
cmpl
stos
mov
sbb
pop
jno
jecxz
push
push
cs
shrl
es
jle
push
mov
cwtl
ror
pop
push
adc
test
scas
jnp
add
xor
div
repnz
push
push
xchg
jb
ficomps
imul
cmp
add
sub
push
and
pop
test
sub
mov
mov
mov
jmp
jl
aas
cmc
enter
lret
sbb
outsl
aaa
shl
cmpsb
fcom
movsl
mov
cmp
xor
out
frstor
into
inc
mov
xchg
div
sub
xor
mov
mov
ljmp
xor
or
dec
push
mov
arpl
mov
in
sub
xorb
or
push
mov
shlb
jl
sub
pushf
inc
lods
negl
jbe
ror
push
mov
jle
jae
push
mov
test
filds
insl
pop
inc
addr16
jne
lahf
push
ja
inc
outsb
dec
loope
clc
jno
popa
pop
xchg
into
jne
test
pusha
cltd
lea
jne
adc
push
test
jne
bound
push
in
aas
into
mov
movsb
mov
sbb
idivl
sub
push
push
mov
dec
and
lock
out
cmp
mov
dec
and
jecxz
inc
xorb
mov
and
mov
imul
aas
xor
lods
dec
push
shl
push
jae
pushf
sbb
add
jae
mov
test
es
ja
fisttpl
mov
push
arpl
mov
xchg
call
pop
add
ret
inc
sahf
outsb
rolb
push
hlt
mov
mov
ljmp
js
sbb
xor
xchg
jle
dec
xor
or
push
movsb
jne
fidivl
stc
dec
jp
cwtl
xor
scas
cmp
hlt
mov
mov
es
cli
daa
addr16
cmp
push
test
sbb
rorl
frstor
adc
mov
js
mov
xlat
nop
jecxz
cmp
stos
push
push
or
or
leave
in
xchg
jae
mov
in
lcall
movsl
xor
inc
mov
int
test
xchg
adc
xchg
iret
pmulhw
movsb
scas
sbb
add
bound
lret
fcoml
xchg
cld
push
imul
mov
cli
andb
stos
mov
fs
add
pop
sti
sbb
jg
ljmp
jmp
xchg
jb
rclb
popa
add
push
jle
mov
outsl
or
aaa
cmpsb
cmp
add
out
and
xchg
xchg
pop
cwtl
jmp
sbb
mov
mov
adc
addl
sbb
sub
mov
inc
das
push
xchg
out
pop
inc
mov
fsts
cmp
jecxz
arpl
daa
mov
in
xchg
jecxz
movsb
mov
mov
out
dec
aad
outsl
int3
or
xor
push
int3
cmp
stos
xchg
mov
cmovbe
adc
sbb
cmp
out
imul
sub
std
nop
iret
mov
fs
aad
mov
enter
fs
mov
mov
nop
adc
or
pop
repnz
xlat
imul
push
andb
imul
xor
lcall
pusha
inc
and
jnp,pt
stos
jecxz
pop
test
sti
ljmp
lcall
insb
bound
jmp
and
scas
std
lret
adcb
es
outsl
fs
xchg
sbb
cli
push
outsb
loope
lock
packuswb
push
and
xchg
dec
js
in
ret
shl
jbe
inc
push
inc
in
test
insl
aad
fwait
push
pop
dec
xor
or
outsb
mov
adc
inc
movsl
mov
sti
add
mov
pop
cmp
xchg
adc
jno
in
rcl
mov
jbe
nop
ret
xor
fistpll
jae
std
cmpsb
mov
scas
iret
aad
fucom
dec
fldenv
mov
hlt
clc
imull
and
out
inc
jno
out
xor
jge
loopne
lret
or
adc
les
dec
sti
add
xor
test
cmpl
dec
fidivrl
mov
and
jns
dec
aam
jns
and
movsb
rolb
stos
mov
push
mov
mov
add
lock
cld
nop
outsb
les
jns
add
stc
in
or
popf
xchg
jg
cmc
and
addr16
sub
cwtl
enter
fmuls
cli
xlat
in
add
mov
lods
outsb
movsb
inc
jbe
repz
loop
adc
xchg
or
das
mov
movsl
mov
shrl
mov
aam
or
lods
sarb
xchg
fisubl
cld
mov
and
aaa
outsl
jmp
mov
sub
addr16
divb
mov
mov
fsubs
jo
or
mov
add
push
xrelease
dec
hlt
ds
pusha
mov
sti
in
lret
jae
pop
lea
lret
es
frstor
xor
aas
pop
test
add
mov
jb
dec
gs
sbb
icebp
inc
sub
out
pushf
jle
or
xchg
or
insl
push
mov
movsb
call
sahf
or
mov
and
mov
loopne
out
adc
subb
lods
push
dec
mov
mov
adc
movsl
jg
push
orl
bound
iret
mov
lcall
pop
push
lret
pop
cwtl
jne
mov
inc
andl
mov
shl
mov
outsl
dec
fsts
inc
xor
xchg
or
icebp
lret
pop
lahf
adc
jo
and
pop
stc
int
sbb
mov
mov
ljmp
jp
xor
dec
mov
imul
mov
insl
adc
pop
inc
imul
int3
xchg
or
mov
sub
sahf
xchg
jge
inc
std
shrl
push
push
popf
pop
sub
add
leave
or
dec
out
roll
in
or
inc
cli
scas
cwtl
cmp
or
mov
dec
cs
pushf
lea
imul
sub
inc
stos
or
cmp
xor
imul
xor
pop
mov
neg
xchg
loop
mov
mov
mov
dec
repnz
movsb
push
pop
push
mov
sbb
fmull
mov
ss
mov
pusha
inc
push
test
cmp
dec
mov
mov
outsb
cwtl
aaa
add
cli
mov
mov
mov
leave
cld
mov
and
cmp
sub
jo
inc
xchg
out
sbb
insb
mov
movsb
jbe
mov
mov
call
lds
mov
mov
loop
pop
jmp
scas
or
stos
call
cs
jo
inc
and
es
repnz
stos
inc
xor
out
cmp
out
fucomi
call
pop
test
jge
scas
ret
mov
xchg
fsubrs
test
je
cs
push
mov
push
push
xchg
and
das
mov
ds
shll
int3
mov
mov
sub
out
cs
andb
imul
es
aaa
cltd
cwtl
icebp
test
inc
add
into
bound
sbb
jge
ss
adc
call
sbb
push
mov
jp
push
push
mov
jno
pusha
lds
sbb
push
xor
idivl
xor
scas
aas
lds
outsw
add
xlat
cmp
push
inc
pop
add
push
dec
push
mov
xchg
cmpsl
notb
repnz
push
bound
mov
xor
or
mov
imul
shrb
add
rorl
movsl
imul
clc
push
xchg
shll
inc
in
or
xchg
cmc
push
cld
mov
shll
pop
gs
movsl
aas
in
imul
add
sub
es
ret
add
pop
lret
mov
xchg
mov
outsb
or
xlat
push
push
adc
inc
lahf
mov
cmp
arpl
cli
sbb
cs
sahf
lock
mov
sbb
pushw
call
or
mov
stos
or
pop
and
out
sub
dec
insl
push
lahf
mov
insl
xchg
inc
aad
ret
data16
push
lcall
dec
dec
incl
jge
mov
push
push
nop
jecxz
int3
push
xchg
push
mov
arpl
and
jmp
sbb
pop
cs
dec
adcl
lock
mov
and
popa
mov
cmp
jbe
cmp
xchg
cltd
mov
js
sub
iret
mov
inc
and
xchg
fdiv
stos
and
iret
nop
mov
cltd
in
test
mov
sbb
and
out
sbb
adc
pop
pop
stos
das
call
pop
aaa
movsb
fists
nop
int3
sarb
psadbw
cmp
adc
in
int3
out
pop
test
aaa
dec
or
jecxz
movl
sarl
bound
xchg
mov
dec
repz
cmc
test
stos
sbb
scas
mov
popf
mov
pop
call
jnp
shl
push
sbb
call
sbb
add
jge
mov
insl
sbb
ja
mov
aaa
push
xchg
imul
pop
xchg
into
data16
xchg
inc
dec
out
inc
leave
mov
jl
cwtl
adc
mov
jne
test
in
pop
lods
add
push
or
add
in
inc
stc
xchg
out
insb
int
gs
pop
popl
push
xorb
aas
push
mov
ja
inc
lcall
cmp
cmc
arpl
imul
mov
xchg
xchg
mov
push
mov
dec
add
mov
mov
cld
ffree
lods
xlat
mov
arpl
fstps
sbb
mov
dec
js
in
addr16
mov
mov
shl
hlt
mov
lcall
dec
lret
in
push
push
inc
dec
dec
imul
add
cmc
xor
je
out
pop
daa
xchg
push
xchg
mov
fdivrl
push
stos
aad
adc
cmp
out
aas
or
lds
jae
lock
xchg
mov
mov
mov
mov
dec
push
test
xchg
mov
xchg
push
loopne
sbbl
pusha
enter
jecxz
jl
sub
xor
hlt
cltd
rcl
sarb
cmp
add
inc
xlat
fwait
test
mov
repnz
test
adc
fnstenv
in
test
jb
pop
cmpsb
in
test
std
or
test
and
imul
push
sbbl
ret
idivl
cld
dec
mov
adcb
add
mov
scas
imul
cmp
dec
nop
cmp
lds
fucompp
stc
sub
mov
mov
xchg
hlt
lret
add
xchg
add
nop
cmc
negl
cmp
push
jo
fildll
push
push
push
jo
repnz
fildl
xchg
push
rclb
nop
pop
push
pop
push
mov
rcr
xchg
ss
insb
pop
push
or
push
push
pop
xchg
inc
add
push
arpl
sub
mov
sarl
jmp
dec
ret
cmpb
mov
xchg
fcom
jg
xchg
add
and
xchg
cmp
mov
fistps
push
mov
jl
loope
cmp
mov
add
add
jge
and
sarb
sti
sbb
fs
cmpl
sub
or
lret
jecxz
xor
or
xchg
dec
call
lret
hlt
jmp
ss
push
ret
call
sbb
adc
or
and
scas
sbb
outsb
inc
inc
cmp
push
inc
outsl
ja
mov
lret
aaa
cs
imul
cwtl
scas
pop
and
fsubr
sbb
push
pop
mov
mov
divl
ror
testb
test
xchg
xor
in
mov
inc
mov
xor
negb
negl
addr16
xchg
xor
out
jl
push
push
xchg
ljmp
push
cmpsl
aam
add
xchg
lcall
std
inc
loopne
mov
push
sbb
cli
std
clc
lahf
adc
xor
push
jp
or
jns
ss
or
leave
pop
lock
out
dec
lret
and
jns
not
fidivrl
loop
pop
push
nop
or
fimull
adc
out
and
rcrl
jge
int
dec
ljmp
nop
fisttpll
arpl
jmp
pop
xor
shll
jmp
lea
xlat
or
xchg
push
sub
es
fildll
push
sbb
jmp
inc
sbb
add
push
adcl
and
loop
cmp
sub
sar
cmp
and
lea
leave
leave
lcall
std
pop
std
cs
pop
jae
cmpsb
mov
jp
popa
addb
shl
xchg
mov
scas
jle
rcl
je
shrl
jge
and
ljmp
std
mov
scas
insb
mov
push
mov
jo
mov
sub
pop
or
sbb
loopne
jno
mov
mov
ficomps
push
push
outsb
xor
dec
xchg
cmp
or
orl
mov
xor
stc
rol
mov
or
or
cmp
xchg
cmp
dec
insl
cmp
cmp
xchg
mov
jns
loop
xchg
adc
jp
shlb
ljmp
pop
js
out
gs
and
xchg
idiv
outsl
xor
shll
shll
jae
imul
cmpsb
mov
inc
dec
xor
xor
dec
mov
add
lcall
cmp
lods
jno
ror
lahf
mov
sub
xchg
jae
rclb
mov
cmp
pop
cmp
sti
faddl
cmp
ficompl
shrb
mov
cmp
pop
ret
adc
dec
and
or
lods
sbb
bound
in
outsb
mov
mov
loopew
je
in
mov
ljmp
mov
adc
mov
mov
stos
pop
dec
mov
or
adc
sub
mov
push
adc
cmc
pushf
cmp
mov
mov
dec
push
stos
stc
out
sub
je
repz
xlat
data16
pop
ss
or
imul
mov
mov
jno
test
add
sahf
adc
test
mov
adc
addr16
mov
push
and
add
mov
push
and
cwtl
jecxz
and
push
cmp
push
jno
rorl
inc
fists
clc
outsl
and
dec
xor
mov
xor
incb
xchg
adc
shll
pushf
das
sub
pop
adc
xor
movsb
lahf
and
push
incb
ljmp
fs
jno
xor
pop
clc
and
inc
int
ja
adc
mov
ret
cmp
jnp
lret
inc
cmp
or
jmp
ljmp
xor
push
hlt
mov
call
push
int
cmp
dec
outsl
aaa
sahf
in
adc
pop
aas
mov
pusha
jns
push
negb
popl
es
cld
mov
cs
or
pop
mov
jno
add
mov
mov
mov
shrb
sbb
push
or
lret
out
insb
clts
add
add
daa
lock
mov
sti
add
mov
cmp
std
xchg
inc
dec
pop
pop
rcrb
mov
cli
repz
lret
mov
adc
les
adc
sbb
stos
mov
add
sub
xor
lret
shll
pop
mov
adc
aas
mov
stos
add
xor
dec
jp
repz
sub
lods
pop
fs
sarl
sub
insb
das
inc
dec
jge
jle
adc
fs
inc
int
in
push
adc
daa
or
in
push
mov
les
lret
dec
dec
mov
imul
lcall
sbb
mov
dec
sub
and
fbstp
fwait
cmpsb
sbb
clc
cmp
jmp
add
stos
pop
push
test
movsl
mov
xor
out
sub
cli
mov
or
fildl
add
mov
insl
adc
xchg
fisttps
int3
cmc
mov
push
fdivs
inc
sbb
in
fldcw
fs
iret
enter
push
dec
push
cmc
stos
xor
insl
jnp
xchg
int
jne
loop
nop
repnz
loopne
scas
icebp
jne
cli
dec
or
out
cld
pop
push
outsb
push
pop
add
out
dec
mov
mov
icebp
cs
orl
jp
mov
fadds
lods
ds
test
ret
shlb
or
mov
mov
ds
mov
sub
ret
xor
mov
lock
sbb
adc
hlt
or
pusha
or
fildl
std
stc
push
and
clc
lods
inc
cmpxchg
xchg
and
ficompl
add
xchg
rol
or
adc
mov
mov
adc
pop
daa
dec
into
lret
adc
out
inc
pop
std
std
mov
popl
scas
das
insl
and
addb
movsl
pop
or
imul
lea
pop
cmp
inc
clc
mov
hlt
pop
pop
out
mov
or
fldcw
daa
dec
mov
nop
sub
fdivl
clc
xor
cld
push
mov
dec
xchg
std
mov
rcl
pop
icebp
fidivrs
out
and
jge
jns
vpacksswb
popa
adc
outsl
dec
mov
jo
adc
scas
sbb
leave
push
leave
or
dec
cwtl
stos
inc
in
jp
icebp
sub
mov
mov
int3
aad
mov
mov
adc
fs
sahf
arpl
and
dec
xor
inc
pop
mov
loope
xor
pop
inc
inc
xor
sbb
scas
mov
add
jbe
jno,pt
cmp
ficompl
inc
mov
inc
sbb
lods
cmpsb
xchg
adc
jae
cmp
sub
aas
fiaddl
fwait
cli
add
int3
lods
jns
scas
push
sub
mov
test
or
add
out
adc
aad
push
ret
xchg
sahf
leave
insl
aaa
sbb
sub
cmp
addr16
gs
push
sbb
push
lahf
out
shrl
xor
pop
xor
bound
sub
in
repz
lock
xchg
out
iret
add
dec
fucomip
scas
ds
mov
shr
xor
loopne
cmp
mov
daa
push
mov
out
out
clc
insl
mov
cltd
inc
jle
xchg
sti
add
nop
xor
inc
pusha
push
int3
or
pop
and
fwait
cltd
or
mov
test
fs
sbbb
aad
mov
mov
stc
in
pop
lea
jnp
jae
rcr
mov
aaa
jmp
and
push
inc
xchg
int3
and
cmpsl
vandnps
adc
arpl
pop
fisttpl
sub
in
push
mov
inc
subb
xlat
aas
mov
and
dec
jg
pop
pusha
add
push
add
test
das
nop
mov
cmp
sbbl
lcall
push
mov
jae
aaa
popa
repnz
stc
lods
push
sbb
sub
out
fcmovne
xor
pop
cmp
sbb
xchg
xlat
rclb
std
fucomip
dec
jb
jnp
nop
dec
add
jl
ret
add
ret
pop
imul
or
data16
int
and
xchg
sub
jl
xor
and
sti
and
xor
out
inc
mov
lods
enter
add
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
dec
data16
jno
push
push
sub
push
push
adc
aaa
add
mov
push
popf
pop
lea
mov
push
inc
mov
inc
nop
mov
pushf
and
mov
nop
jb
add
lret
imul
rcll
xchg
jmp
mov
jle
push
sbbl
xchg
mov
adc
sub
das
xchg
popa
cs
scas
cmp
aad
js
ljmp
xchg
pop
in
stc
push
lcall
mov
dec
iret
sbb
jb
hlt
sub
lret
in
fs
inc
adcl
push
dec
test
pop
int3
push
popa
lock
ror
mov
sub
je
xor
or
xchg
inc
cmp
fwait
in
rcrb
outsb
out
bound
cmp
mov
xor
sub
sbb
stc
repnz
lahf
lret
pop
push
sub
roll
bound
mov
mov
cmp
ss
cmp
mov
mov
jns
cmpsb
xor
cmp
adc
mov
sbb
pusha
push
jg
adc
es
fidivl
add
es
mov
cs
dec
out
test
mov
addr16
or
push
jge
mov
in
adc
xchg
xchg
out
dec
sub
loope
hlt
imul
inc
lahf
or
add
data16
fcmovnb
adc
lods
jae
cmp
in
roll
dec
inc
add
mov
fsts
cld
xchg
push
pop
pop
dec
testl
insl
dec
lret
aad
fnstenv
add
mov
mov
in
pop
fucomi
lds
icebp
pop
inc
je
jmp
scas
stos
dec
jecxz
xchg
ss
push
inc
fldl2t
cmc
stc
and
das
dec
and
popf
mov
xchg
xchg
jmp
pop
in
fcoml
xor
sub
hlt
lods
xchg
xor
repz
dec
cmpsl
stc
negb
mov
inc
xchg
and
add
dec
in
lock
or
mov
sti
adc
pop
gs
lret
pop
cmp
arpl
loopne
ljmp
mov
adc
mov
xlat
push
jle
mov
and
mov
pop
stos
adc
and
adc
sub
xchg
jae
push
sub
or
jmp
call
hlt
push
push
in
mov
fwait
leave
out
fdiv
ja
sub
mov
les
std
dec
cs
fwait
or
and
fcoms
jmp
arpl
mov
mov
mov
loopne
mov
or
mov
sti
sub
adc
pop
das
js
stos
cltd
and
hlt
xchg
fs
push
mov
xchg
and
pop
push
and
dec
leave
enter
sbb
and
frstor
test
or
xor
sub
aad
stos
rcl
xchg
leave
adc
and
jl
push
aam
pop
dec
imul
fcmovb
dec
mov
jae
cmp
xorb
callw
mov
xchg
clc
fwait
dec
push
jbe
sbb
xchg
arpl
push
pop
out
dec
fsts
mov
lea
mov
lock
pushf
test
mov
mov
push
cmpsb
xchg
andb
push
sbb
mov
aas
push
add
pushf
dec
sbb
cmp
inc
aas
jp
cmp
dec
xchg
or
or
inc
jecxz
scas
imul
scas
push
xchg
call
lea
aad
hlt
lock
inc
add
add
dec
call
push
mov
add
data16
inc
xchg
ret
shll
mov
cmp
aaa
lcall
adc
xor
sbb
cwtl
add
arpl
and
sahf
push
xchg
subl
and
mov
andb
into
out
add
pop
mov
pop
fmulp
dec
test
xchg
leave
mov
mov
daa
adc
fwait
rorl
push
push
fisubs
cmp
aaa
cs
add
mov
adc
stc
sbb
and
imul
mov
xlat
jb
daa
dec
jmp
xchg
stos
cmp
rcrb
into
mov
ljmp
es
sub
push
sub
clc
jns
in
ds
pop
stc
enter
pop
andl
jo
inc
testb
xor
dec
push
xor
mov
andb
loop
add
sub
jnp
roll
leave
insb
dec
inc
rol
inc
dec
mov
cmpl
cmp
clc
nop
shlb
push
pop
decl
jmp
enter
fidivrs
xor
mov
in
jmp
add
jp
xchg
xor
sbb
and
pop
jp
inc
jge
popf
mov
push
pop
and
hlt
out
xchg
shlb
fisubl
inc
xchg
icebp
test
cmp
add
cmp
and
and
daa
lods
popa
mov
iret
mov
cli
xchg
mov
pop
add
mov
xchg
pop
faddl
lock
xlat
fyl2xp1
iret
push
add
cltd
xlat
xor
lret
xchg
lgs
sbb
mov
sbb
test
add
aaa
dec
sub
cmp
xchg
xchg
or
movsb
xor
xchg
aad
xor
repz
cmp
sub
jne
xchg
cwtl
jbe
xor
insb
outsl
clc
cmp
loop
out
xorb
gs
cltd
js
ret
int3
fwait
xchg
or
rclb
call
lret
in
lods
inc
and
pop
lods
pop
xor
adc
aas
sbb
ficoml
add
mov
xchg
xor
popa
jno
pop
push
xlat
xchg
add
jno
push
rcrb
mov
or
stos
pusha
adc
push
push
pop
pop
cmpsl
popa
ret
jl
dec
mull
shrl
testb
push
xor
lcall
mov
addr16
jg
add
sarb
loop
xor
repz
popf
cmp
leave
shrl
sbb
data16
push
inc
inc
fiaddl
lea
sti
and
xchg
shlb
and
lods
cld
jae
jp
cmp
inc
cmc
cmpb
add
dec
shrl
mov
add
push
aaa
cmp
scas
scas
pop
adc
mov
pop
movsb
jbe
push
xchg
out
aas
xchg
mov
loope
ljmp
and
gs
outsb
sbb
insb
jae
pop
adc
inc
pop
dec
daa
cmp
dec
push
pushf
cmp
cmc
add
in
jecxz
push
sub
jecxz
pop
lods
fbstp
inc
out
lcall
inc
dec
dec
or
mov
cltd
lock
jne
add
push
adc
dec
pop
push
jnp
cmpsl
aas
mov
add
jg
cmp
xchg
lcall
inc
ret
out
cmpb
fnstcw
mov
sbb
rcll
out
mov
bound
mov
stos
andb
shlb
ja
add
lods
ljmp
pop
inc
jne
inc
cmp
jg
pop
cli
push
lret
cwtl
cmpb
sbb
cmpsb
gs
cltd
nop
pop
and
addr16
insb
in
pop
inc
repnz
cmp
mov
fwait
jb
xor
pop
ret
add
movsw
fs
stos
insb
lock
mov
sbb
clc
aam
inc
jbe
gs
in
das
cmpb
jmp
sbbl
test
cmp
ret
mov
xchg
cmpsl
cltd
mov
adc
dec
lods
mov
pop
pop
fdivrp
ret
sub
jle
sub
jns
add
jg
repnz
push
dec
out
nop
jno
inc
mov
and
jl
and
clc
test
stos
mov
or
dec
cmp
inc
inc
fstpl
or
xchg
repz
cmp
nop
shrl
push
lock
cmp
mov
xchg
out
loop
nop
dec
push
cmp
adc
push
in
test
pop
add
decl
repz
xor
mov
jae
cmp
add
or
xchg
ja
iret
push
jne
fwait
xor
fwait
idivl
mov
xor
add
mov
add
jo
lods
shrb
sarl
add
cmpsl
jecxz,pn
ret
fmull
repz
xlat
adc
aas
mov
mov
lds
jbe
mov
movsb
push
ds
in
cwtl
mov
xchg
add
aaa
cmp
and
gs
mov
mov
fstps
movsl
stos
sub
inc
test
jae
sbb
xor
sub
xor
adc
jge
mov
divb
xor
fwait
mov
inc
add
ret
adc
xchg
mov
loope
dec
xlat
in
xchg
xorb
movb
fildl
rol
loopne
xor
movsb
and
fiaddl
daa
sbb
cmpsl
or
gs
mov
sub
test
push
cmp
jns
shrb
sbb
jns
fmuls
jns
push
ds
mov
push
insl
cmpsl
mov
xchg
popa
push
push
pusha
xchg
rolb
mov
fdivrl
jmp
dec
loop
cmp
shl
mov
sbb
jne
addr16
jmp
or
cmp
ss
movsl
repz
jne
loopne
outsb
addr16
mov
pop
into
xchg
xchg
push
stos
mov
push
push
adc
dec
or
mov
xchg
mov
pop
cs
push
or
xlat
pop
xchg
out
pop
inc
inc
mov
xchg
xchg
or
daa
mov
pushf
sbb
pop
lcall
test
clc
dec
dec
cmp
mov
inc
js
sbb
aam
lret
pusha
imul
out
and
fldt
or
repz
fisubl
push
xor
jge
adcb
loope
lds
lahf
out
enter
sub
cmp
cwtl
in
js
xor
call
pop
jg
pop
fldcw
and
in
fistl
dec
ss
mov
dec
cmp
adc
lea
lcall
and
mov
mov
mov
xchg
mov
xchg
cmp
xchg
stos
fldenv
mov
push
aaa
and
test
inc
test
loopne
adc
cmp
mov
and
dec
push
or
nop
stc
ljmp
add
and
data16
xchg
mov
out
push
movsb
inc
push
jne
gs
push
or
xor
jmp
jne
setae
lds
psrlw
jge
or
daa
inc
ljmp
push
inc
addl
shlb
or
test
jmp
xchg
mov
aam
pop
push
dec
xchg
insl
xchg
mov
add
jae
mov
test
mov
ljmp
jmp
mov
test
lds
lahf
jo
shrl
xchg
mov
stos
lea
xchg
jnp
dec
mov
movl
test
fsubrl
or
adc
test
pop
add
insb
sbb
pop
jmp
inc
jb
jmp
dec
mov
shll
es
push
hlt
jl
xchg
sub
sub
sahf
in
popa
push
xchg
sbb
dec
stc
add
out
jp
jmp
sub
insb
push
fisubl
push
shr
push
jg
repz
movl
icebp
xor
xlat
jmp
pop
in
fidivs
out
inc
jae
inc
jmp
or
mov
addr16
inc
fdivrl
popf
insl
xchg
jecxz
ret
mov
add
js
movsb
xor
fimull
sbb
and
out
pop
pop
push
repz
push
vpaddsw
insl
or
bnd
sbb
cmp
cmc
and
lods
and
divb
mov
cmp
jnp
les
xchg
in
mov
mov
and
push
inc
ja
jle
or
jno
cmp
orl
cmp
test
outsw
cmp
add
add
jnp
or
movsl
gs
cli
mov
fsubrs
push
dec
jmp
cld
fwait
jnp
jg
cmc
stos
mov
aas
dec
add
jge
or
push
mov
pop
nop
xor
mov
push
dec
stc
les
sbb
jnp
mov
je
add
ror
clc
nop
jecxz
dec
outsb
rcrl
mov
mov
mov
testb
jb
jle
loop
test
sub
push
nop
cmc
inc
outsl
nop
sbb
dec
add
movsb
jp
jecxz
fs
subl
aas
sbb
sbb
xchg
lret
lea
sbb
hlt
mov
xor
pop
movsb
and
add
xor
dec
mov
adc
cli
out
push
cmp
sub
cltd
lds
notb
push
push
mov
gs
add
adcb
cmc
movsl
mov
add
cmp
mov
sar
or
test
pushl
cmp
bound
test
into
lock
je
xchg
jne
and
sbb
xor
sub
add
cmpsl
jge
dec
fsubr
fidivrl
or
sahf
inc
dec
lret
mov
jecxz
jp
xor
shlb
pop
jg
cwtl
jl
into
test
or
sub
xchg
rcr
jne
pop
jno
das
adc
mov
leave
xchg
and
fwait
xor
adcb
fisubrs
pop
repnz
mov
xlat
add
push
mov
movsb
mov
or
dec
pushf
inc
pop
mov
mov
mov
push
popf
add
int3
mulb
xlat
outsl
out
push
popf
dec
fiadds
pop
and
cmp
lds
sub
sbb
popa
dec
aas
repnz
loop
mov
das
push
imul
push
xchg
sub
push
push
out
sbb
mov
sahf
mov
xchg
push
movsl
test
push
movsl
popfw
or
dec
xchg
bswap
ret
xor
cmp
jae
mov
push
in
push
lcall
stos
mov
test
adc
fst
push
and
test
inc
lds
sti
adc
hlt
jns
jl
pop
or
ss
jmp
das
push
icebp
in
scas
xchg
dec
jno
aam
pop
mov
mov
push
ljmp
sub
mov
and
jbe
xlat
add
iret
jp
scas
cli
sarb
lcall
hlt
out
cmp
das
cmp
out
in
lock
je
dec
pop
pop
pop
push
in
call
gs
repnz
out
xchg
mov
sbb
xor
ret
stos
sub
mov
stc
ss
mov
in
data16
dec
add
inc
jmp
out
pop
push
push
cs
cmp
mov
add
stos
aad
or
adc
mov
pusha
adc
adc
inc
dec
push
pop
and
repz
lahf
and
sbbb
xor
aam
add
adc
ret
adc
mov
mov
and
call
jg
sbbl
jns
mov
pop
int
inc
or
popa
dec
adc
jnp
xchg
lock
adc
fisttps
arpl
sahf
sahf
outsl
cmp
inc
ja
repz
mov
add
fs
imul
leave
pop
cmp
icebp
jmp
xor
jmp
imul
or
lahf
cmpsb
push
cmpsb
or
push
movsl
lahf
pop
dec
adc
and
out
int
out
das
add
aam
into
pusha
mov
imul
mov
call
push
jl
movsb
stos
pusha
xlat
dec
and
xchg
xor
sbb
and
mov
fisubrl
adc
mov
outsl
popf
lock
xchg
pushf
or
inc
xchg
cmp
insl
arpl
jo
cmpl
in
adc
das
mov
pusha
jge
daa
mov
nop
loope
into
sbbl
sub
insl
out
or
or
scas
adc
pushf
lret
call
cmp
push
xor
jmp
repnz
mov
fcoml
pusha
pop
lcall
and
dec
lock
filds
adc
test
mov
movsb
sbb
adc
call
xchg
loopne
push
outsl
lea
ds
outsb
mov
inc
cs
dec
frstor
xchg
sbb
cmpsb
cwtl
mov
jne
jmp
jbe
dec
mov
dec
lds
dec
sarl
lds
mov
movsl
je
stos
mov
lahf
popf
js
cli
adc
je
pop
sub
add
push
out
mov
xor
xchg
fidivl
cmp
icebp
push
or
cmc
fidivrl
cmp
mov
pop
jo
lods
fcomp
adc
push
ljmp
ja
fdivrs
sub
cltd
pop
dec
aad
pop
mov
sbb
nop
std
jp
and
push
or
out
flds
adc
push
call
xchg
pushf
cltd
sbb
push
sub
mov
or
leave
xor
aaa
inc
mov
jecxz
fs
cli
cwtl
rol
imul
ret
ret
outsb
dec
xchg
inc
imul
pop
pop
test
in
adc
adc
mov
mov
xchg
mov
stos
sbb
add
inc
popa
in
int
add
pop
lret
mov
cmp
in
sub
pop
xchg
hlt
mov
and
dec
ja
rcrl
sub
ret
daa
cld
mov
leave
scas
mov
popa
pop
lods
adc
adc
adc
pop
adc
incb
into
pop
imul
push
jmp
xor
xor
cmp
mov
in
dec
mov
cltd
lahf
xchg
rclb
inc
stc
mov
addl
sub
sbb
cld
or
ds
adc
movsb
js
push
push
out
out
sub
push
int
stos
xchg
movaps
push
inc
cmp
das
jne
cmpsl
mov
hlt
adc
fidivrl
cwtl
pop
xor
mov
pop
jg
xchg
fsubs
xor
mov
xchg
stos
pushf
sar
cwtl
daa
dec
cmp
repnz
mov
repz
inc
or
pusha
ror
fiaddl
pop
outsl
imulb
jno
lret
and
mov
xor
xor
iret
push
test
mov
mov
in
xor
xor
inc
pushf
rcrb
pop
inc
pop
or
and
ljmp
sbb
xor
ffree
pop
jne
movsl
andl
pop
iret
inc
dec
cld
cmpsb
add
shrd
je
or
dec
arpl
push
pop
dec
popa
cmp
sbb
xchg
mov
paddusw
mov
jp
mov
sbb
fidivrs
mov
ss
mov
jl
loopne
sti
pushf
cwtl
out
and
das
loop
in
and
stos
adc
sbb
mov
add
xchg
fnstsw
test
sbb
sbb
mov
jo,pt
add
fcmovne
adc
jno
shlb
push
lahf
push
inc
neg
xchg
imul
or
popf
fstpt
push
dec
test
pop
out
push
add
adcb
dec
sub
mov
pop
cmp
adc
decb
lea
testb
daa
lahf
loope
xchg
test
out
jo
sub
bt
sbb
repz
idivb
sub
fdivr
mov
pop
and
stc
xor
aaa
jecxz
pop
xor
into
push
daa
sti
jae
mov
ljmp
dec
sahf
push
mov
repz
and
inc
js
cmp
push
addl
out
pop
fs
cmpsl
push
or
nop
hlt
movsl
js
or
jne
cli
pop
fdivs
sbb
mov
iret
ljmp
stos
adc
sti
mov
mov
or
out
mov
push
jno
sarb
imul
adc
cmc
stos
fcoml
or
adc
cmp
push
ja
outsl
daa
mov
adc
cli
inc
les
adc
mov
cmp
das
jg
adc
mov
mov
and
and
cmp
xchg
shrb
xchg
pop
pop
scas
rcl
dec
dec
movsl
imul
ja
mov
lods
das
fisttps
sub
and
push
push
pop
repz
cmc
jp
fwait
sbb
loopne
movsl
rcrb
fisttps
push
daa
jb
and
ss
dec
mov
add
stos
test
cmp
cmc
test
pop
mov
cmp
sbb
das
aam
imul
lock
stos
es
notb
call
data16
pop
push
jae
popf
jae
and
push
std
in
lock
push
not
and
sub
loop
decb
les
aad
popf
outsl
faddl
mov
mov
cltd
xchg
ss
add
pop
lea
push
push
les
sbb
daa
cld
insl
sub
leave
dec
sub
cmp
pop
lea
out
cmp
arpl
jnp
mov
mov
ljmp
lcall
sub
in
mov
mov
mov
mov
fisubrl
repz
adc
std
jp
ljmp
dec
cli
addr16
ficomps
lods
test
sub
mov
fsubrl
pop
mov
ret
cmp
mov
out
sbb
jns
fs
les
addr16
lahf
movsl
xchg
lcall
dec
jg
cmpsl
sbb
std
test
movsl
or
xchg
add
mull
xor
jb
and
movsl
or
adc
xor
sbb
push
ss
ud1
xchg
outsl
sub
into
sbb
pop
sub
adc
push
iret
pop
dec
mov
mov
or
mov
xor
loope
in
int
pop
fwait
jp
lret
dec
pop
mov
jns
adc
sub
add
pop
arpl
cwtl
popl
cmc
mov
ret
adc
mov
iret
int
in
faddl
lret
adc
gs
xchg
or
mov
push
pop
mov
insw
dec
icebp
hlt
xor
fucomip
mov
jb
mov
xchg
jecxz
gs
leave
cmp
aaa
push
in
test
jge
push
xor
fistpll
clc
cld
fmull
push
sub
cmpsb
subl
mov
or
xor
sub
pop
int
push
sbb
cmc
inc
xchg
aas
not
cmc
push
mov
ret
jecxz
inc
mov
pop
stos
js
push
icebp
mov
add
fildl
dec
pusha
inc
jb
xchg
nop
movsb
loope
jg
xlat
xor
pop
out
fisubs
mov
add
repz
xor
rcr
test
mov
inc
add
mov
pushf
jne
scas
scas
stc
mov
in
xlat
shr
push
xchg
adc
fwait
in
shrb
popf
fldcw
pop
dec
pop
loop
adc
ljmp
ss
xchg
shlb
adc
test
stos
enter
or
movsb
out
cld
dec
ret
cs
js
mov
lret
test
push
arpl
or
mov
in
cltd
xchg
pushf
sbb
je
lret
push
mov
out
leave
jmp
pushf
xchg
and
addr16
sub
movl
jge
adc
sahf
in
fnstsw
jmp
out
mov
pushf
pop
mov
cmp
int
in
shrb
les
dec
sbb
jo
push
arpl
add
dec
pop
mov
jns
rcrl
mov
pushf
xchg
movsb
add
scas
test
inc
arpl
cmpsb
add
mov
mov
mov
jle
iret
lods
mov
in
jp
inc
aas
jnp
xchg
test
mov
movsb
or
cltd
cmp
dec
sbb
outsb
adc
inc
pushf
pop
cmc
aam
jb
fdivrl
jp
pop
sbb
lcall
push
jo
jg
cmp
push
cld
dec
pop
dec
scas
xor
vcvtsi2ss
test
faddl
adcl
arpl
andl
daa
xor
xchg
inc
cmp
mov
cwtl
out
movsl
push
out
stos
out
cmp
cltd
lcall
movsb
mov
mov
push
jle
xchg
shlb
jo
test
dec
sbb
lahf
loope
out
lret
xor
arpl
ds
cli
pop
jnp
xor
mov
cltd
inc
push
mov
shll
fstps
fdiv
fsts
sarl
add
xchg
repz
push
lahf
and
jp
leave
jmp
mov
sbb
lods
cmp
push
mov
pop
fidivs
in
lock
test
mov
int
imul
sub
icebp
les
repz
mov
stos
outsl
imul
mov
push
test
insb
push
dec
cltd
jecxz
cmpsl
hlt
ret
pop
sbbb
pop
cwtl
sbb
mov
lahf
jae
sbb
in
notb
pop
sti
pop
iret
jnp
push
loopne
add
sbb
cmp
mov
push
pushf
jnp
mov
jge
gs
xchg
shrb
ss
mov
clc
aam
orl
fwait
outsb
rcll
add
mulb
bound
cmp
fildl
cmp
xchg
xor
mov
arpl
sbb
lea
and
and
dec
cmp
push
notl
into
and
hlt
mov
sbb
cmp
fistps
rolb
dec
aad
test
repnz
push
push
imul
addl
xor
call
push
xor
xor
jns
pop
mov
xchg
push
mov
andl
cli
loopne
or
xchg
jle
stos
stos
push
inc
mov
fisttps
xor
leave
push
fdivl
test
mov
mov
mov
or
cmp
xchg
push
mov
jbe
test
add
ds
mov
push
cmpsl
fistpll
mov
mov
mov
popf
cli
jns
incl
sub
scas
cmpsb
dec
jecxz
adcb
sub
scas
jno
lods
xchg
adc
lret
adc
pushf
adc
data16
fildl
hlt
mov
daa
nop
xchg
sbb
jg
adc
pusha
add
and
cmp
lds
inc
scas
mov
dec
push
lahf
test
dec
and
xor
or
cmpsb
mov
mov
idivb
jbe
mov
fsubl
gs
dec
ret
addr16
mull
inc
fdiv
lds
push
mov
rol
xor
cld
loope
adc
fiaddl
in
imul
repz
lds
push
xchg
pop
imul
mov
mov
aad
and
mov
mov
rcll
mov
push
mov
ret
imul
or
mov
push
mov
aam
repnz
iret
add
xor
int3
sbb
cmp
and
test
in
pop
das
test
sub
jecxz
pop
test
jae
sub
jp
or
clc
adc
inc
mov
stc
js
js
jbe
es
jecxz
lds
sti
daa
adc
cmpsb
mov
inc
jbe
jb
das
ret
sahf
push
sbb
mov
call
push
sub
icebp
cli
sbb
lds
mov
adc
or
xchg
jmp
mov
push
xor
push
out
adcb
addr16
and
mov
cs
push
xor
lods
test
jnp
fwait
mov
mov
sub
fiadds
nop
maskmovq
addl
ss
add
leave
lods
dec
jnp
jae
xor
and
sti
sub
daa
pusha
push
lret
cmpl
stc
aas
cmp
iret
pop
jl
cld
out
leave
in
adc
rcll
mov
dec
mov
or
nop
or
push
pusha
mov
js
sti
jo
push
int3
enter
push
and
sub
ficoms
cmpsl
loope
xor
pop
pop
stos
scas
pop
add
aam
mov
sub
push
es
and
cs
cmp
sub
or
mov
inc
push
in
icebp
dec
inc
adc
testl
sub
jns
mov
test
dec
cmpsb
mov
mov
push
sub
dec
add
mov
push
inc
mov
push
sbb
mov
test
jl
adc
xor
mov
adc
sbbb
xchg
push
shlb
lods
push
rcrb
cmp
jmp
xor
or
sti
std
push
test
les
dec
push
repnz
or
push
inc
ficomps
jge
test
bound
mov
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
mov
test
jp
push
push
sub
push
push
mov
rorb
add
jle
add
cmp
fsubl
fstl
outsl
and
divl
mov
pop
xchg
add
cld
lock
inc
mov
daa
mov
scas
arpl
insb
movsl
jne
imul
inc
call
lahf
jae
lock
cs
sub
xchg
stos
ret
add
lret
xchg
push
aad
xchg
xchg
mov
xchg
fs
dec
inc
sahf
jg,pt
shrb
out
daa
jbe
xor
pop
push
in
in
bound
push
cmp
ljmp
pop
adc
or
pop
xchg
xorl
in
out
iret
je
mov
ljmp
pop
imull
enter
scas
clc
or
cmp
pop
lret
cwtl
das
and
dec
sti
mov
lods
push
bound
inc
push
push
cmc
push
bound
aam
lds
mov
fisttpll
mov
dec
mov
sbbl
or
fistpl
jbe
xchg
fldenv
enter
push
mov
push
mov
lods
mov
push
test
call
clc
sbb
fsincos
insb
sahf
adc
lock
imul
cmp
out
lahf
jl
hlt
popa
mov
int
push
dec
mov
ret
aas
aad
leave
jecxz
cltd
sub
push
xchg
insb
pop
dec
push
pop
bound
sub
dec
sbb
popf
cmp
mov
jmp
lods
lahf
cltd
cld
pop
cmpsl
jb
lods
ret
jecxz
or
xchg
fdivrp
sbb
push
movsl
pop
js
pushf
in
sbbl
adc
xchg
inc
adc
fs
adc
std
imul
insl
out
lret
sub
mov
nop
out
pop
scas
or
jp
mov
int
dec
movsl
mov
cmpsl
loopne
imul
imul
sub
loope
stos
xchg
in
pushf
mov
sub
loop
mov
xchg
jbe
cli
dec
mov
ds
adc
shr
push
xor
fs
hlt
idiv
pop
cmp
mov
mov
movsl
dec
in
js
ja
xchg
jp
cmpsl
es
or
popf
xor
mov
add
sahf
sahf
add
mull
ret
cli
xchg
push
and
pusha
and
add
es
jne
cmc
push
mov
pop
fisttps
jecxz
xor
sahf
dec
inc
stos
xor
fs
and
es
cmp
push
adcb
jne
aaa
movsl
push
decb
scas
gs
scas
and
mov
and
lds
mov
imul
push
stos
jnp
lret
add
pop
mov
repnz
mov
mov
cmp
add
arpl
sbb
dec
movsl
cmp
popa
in
ja
dec
inc
adcb
mov
lds
loopne
xchg
cli
clc
jbe
dec
insb
pop
rcrl
pop
leave
push
popa
je
in
stc
movsb
arpl
imul
insl
sbb
add
jne
mov
sbb
std
mov
and
xchg
aas
and
sbb
ljmp
mov
cmp
or
fcmovb
out
xor
mov
cltd
loope
inc
or
lret
mov
xchg
push
test
mov
aaa
enter
decb
inc
fwait
cwtl
xlat
xor
dec
push
bound
mov
inc
push
add
stos
sub
lods
sbb
xchg
pop
lret
inc
call
xchg
push
fcoml
call
pushf
xor
or
std
iret
lea
pushf
sbb
or
cli
xor
pusha
pop
sarb
dec
xor
aas
jg
jne
adc
xchg
jae
inc
push
sbb
cltd
divb
inc
mov
outsl
sub
adc
mov
popf
mov
and
and
mov
mov
sub
cmp
int
js
mov
xchg
add
aas
jge
or
jg
pusha
or
jb
repz
mull
and
jecxz
lret
adc
pop
mov
loop
addb
mov
pop
lock
mov
std
shl
test
je
pusha
inc
incb
lods
call
xchg
mov
fildll
fcoml
xchg
sbb
adc
aad
xchg
into
or
into
cmp
test
adc
lds
aad
not
mov
xorb
dec
shl
bound
mov
mov
or
xor
ret
aaa
adcl
shlb
mov
sub
or
rolb
int3
pop
jge
sbb
mov
mov
jl
cmpsw
pushf
enter
mov
xchg
xor
inc
dec
sbb
lock
jl
bound
popf
push
pop
or
jmp
adc
scas
out
adc
xchg
idivl
dec
faddl
push
add
pusha
lods
outsb
cmpsb
fs
sbb
xor
pop
pop
pusha
sti
iret
sub
insl
lahf
stc
fwait
inc
inc
and
xor
jbe
adc
lods
ljmp
cmpsl
addr16
mov
sarl
ret
sub
test
in
pop
jns
int3
mov
addl
push
pop
in
pop
dec
adc
das
aas
in
adc
push
cs
sub
decl
sub
jbe
push
sarl
jo
ficomps
push
test
lea
or
rsm
xchg
fimuls
inc
cmc
scas
dec
iret
insb
fisttpl
cli
push
jp
push
mov
fs
out
dec
add
pushf
push
mov
outsl
inc
jnp
je
aam
scas
cmp
jg
movsb
aad
push
push
push
lret
push
pop
insl
ljmp
adcl
inc
repz
dec
xor
dec
mov
or
scas
addl
fsubr
mov
mov
pop
ds
or
es
scas
pop
jno
repz
xor
inc
stc
test
inc
mov
sub
ret
enter
test
sahf
loopne
test
push
dec
mov
aam
push
mov
fwait
lret
fistl
fsubrp
mov
xchg
ss
inc
push
adc
dec
cmp
lods
pop
aas
shll
pop
mov
adc
mov
cmp
cmp
xchg
mov
adc
insb
add
bound
insl
or
aaa
mov
mov
ret
mov
inc
push
out
pop
fidivrl
and
test
or
cmp
xorl
or
sub
lods
mov
lods
js
lea
sub
push
push
aaa
into
outsb
lods
ja
push
arpl
cmp
lock
adc
or
jg
or
int3
mov
movsl
push
aad
inc
and
clc
pop
add
push
in
call
std
les
popl
jecxz
mov
enter
or
lea
stc
jno
sti
pop
mov
faddp
rcr
pop
nop
mov
lea
cld
push
and
jno
out
sbb
push
and
aam
xchg
push
call
cli
inc
or
fmull
repnz
mov
adc
push
mov
sub
bound
sti
cmpsb
push
js
lea
lods
imul
sbb
sub
xlat
aad
mov
fdivl
and
rcl
and
push
dec
fwait
add
in
loope
sarb
jo
xchg
pusha
pcmpeqd
inc
ss
es
insb
das
add
and
jge
push
jle
pop
not
cld
or
sahf
jb
mov
dec
mov
jmp
mov
xlat
sbb
mov
jp
and
sub
roll
enter
xor
ds
mov
mov
mov
scas
xor
into
push
sub
movsl
xchg
fdivs
incl
and
aaa
scas
mov
pop
push
lea
addr16
mov
mov
fildl
add
dec
sbb
sbb
xchg
je
cwtl
subb
mov
sub
adc
loopne
adc
data16
insl
push
sub
xor
jae
push
out
ret
imul
jecxz
popa
pop
fwait
cmpsl
bound
mov
loope
xor
sbb
adc
cli
sbb
jl
adcl
sbb
orl
push
fdivs
out
and
push
cli
jbe
push
nop
adcb
mov
jo
movsb
inc
imulb
dec
insl
inc
int
ss
aam
rorl
and
push
push
outsl
jmp
mov
cmp
sub
adcl
or
ret
int
pop
mov
dec
xchg
adc
daa
mul
fidivs
pop
lahf
repnz
mov
fwait
loop
loop
lods
cltd
divb
addr16
cmpl
add
xchg
sub
fldt
testb
fistps
imul
mov
cmp
aas
mov
adc
mov
and
scas
mov
xlat
negl
decl
pop
dec
cmp
add
shrb
leave
sub
aam
mov
out
icebp
aad
scas
mov
mov
push
cld
push
lahf
mov
add
mov
imul
jmp
ds
in
js
lods
test
pop
arpl
xchg
cltd
je
xchg
sub
shl
cwtl
jge
inc
mov
in
les
jge
pop
aam
sub
fwait
xor
in
dec
add
and
in
add
in
loope
stos
xchg
push
sahf
stos
jle
push
or
mov
and
hlt
dec
insl
enter
hlt
cmc
lock
mov
fwait
test
out
mov
into
jae
add
addr16
or
mov
add
ret
pop
pop
aaa
lods
xchg
push
inc
lret
cltd
test
in
inc
push
es
or
fcoms
ficompl
stc
iret
pop
mov
xor
cmc
fidivl
mov
cs
mov
iret
daa
stc
cmp
mov
mov
lea
sbb
cmc
xchg
adc
sub
dec
or
test
test
cmp
xchg
sbb
imul
and
loope
insb
dec
std
fisttpll
push
into
cld
mov
insl
aaa
fildl
aaa
mov
mov
arpl
push
clc
adc
sbb
jle
sub
xchg
loopne
xchg
shlb
in
mov
shr
into
sbb
lret
pop
mov
into
xchg
sahf
xor
scas
sub
inc
mov
cmp
adc
mov
fistpl
ret
mov
pop
movsl
int
jb
popf
dec
xchg
xchg
cmpsl
xor
movsb
cs
mov
dec
jne
fadds
mov
inc
or
push
jecxz
fs
arpl
lcall
test
mov
mov
push
mov
mov
jne
mov
out
dec
sbb
lcall
in
sbb
movsb
jae
cmp
jo
mov
pop
xchg
out
xchg
fsubrs
or
loope
call
jl
lds
outsb
ret
mov
xchg
hlt
xchg
leave
jge
sbb
cld
inc
push
xorb
lahf
int
ret
or
or
in
fs
cwtl
hlt
cmpsb
cmp
mov
or
test
push
das
test
les
jecxz
shrb
rcrl
ljmp
xchg
fcompl
or
ja
jecxz
sbbl
inc
xchg
jmp
push
or
xor
mov
jg
icebp
out
xor
lahf
add
lock
pop
bound
mov
mulb
dec
notl
sbb
fstpl
add
add
push
xor
ljmp
ror
mov
lahf
and
lea
rcrl
mov
push
outsb
in
sub
aam
pop
rorb
lods
fistpl
sub
nop
out
repnz
xor
insb
cmc
sub
pop
sub
test
xor
sti
jge
dec
mov
jmp
pop
outsb
adc
xorb
movsl
sub
pop
mov
sbbl
mov
jno
sub
das
fwait
mov
cmovg
and
add
push
test
pop
cmp
cmp
cmp
add
mov
lea
mov
xor
mul
inc
stc
mov
icebp
mov
push
add
and
jecxz
and
sub
ss
ds
push
adc
cmp
loope
push
push
pop
aam
adc
clc
jp
shrl
imul
mov
xor
out
aad
mov
pop
sub
pusha
add
and
loop
jnp
jns
les
mov
notl
mov
jnp
nop
roll
push
lods
fstps
adc
insb
pop
test
or
popl
loop
pop
cmc
rolb
pusha
mov
hlt
inc
fstpl
mov
mov
repnz
adc
adc
jae
js
setae
sub
add
lret
ss
push
xor
arpl
call
sti
pop
jmp
sub
or
xchg
cmpsl
mov
imul
les
mov
xor
jle
mov
inc
mov
xor
mov
sub
jnp
ds
or
cmpsb
pop
dec
and
inc
push
sub
shlb
test
inc
xchg
xchg
outsb
xchg
jl
push
pop
lcall
cmpsl
push
loopne
aam
bound
cmp
push
xor
mov
adc
sub
shlb
lret
mov
ja
xchg
dec
js
jmp
sbb
adc
push
or
push
adc
adc
lods
mov
rcrb
ficomps
leave
inc
addr16
movsl
sub
mov
clc
mov
inc
insb
addr16
jl
mov
jae
sbbl
adc
in
inc
out
mov
fadd
and
xor
inc
mov
clc
mov
movsl
arpl
sub
int
shl
insl
sbb
shlb
or
pop
ljmp
lahf
insb
pop
ret
fiaddl
loopne
test
mov
es
js
js
xor
mov
movsb
mov
cmp
xchg
xlat
cmc
add
push
inc
jae
push
xchg
icebp
test
jg
or
movsb
sub
mov
or
sub
insl
in
into
mov
cmp
scas
pop
lahf
mov
lret
stc
dec
lcall
push
lret
vpsrld
pop
or
cmp
pusha
fnstcw
cmpsl
sbb
mov
mov
xchg
xor
cmp
mov
pop
and
mov
xchg
or
lock
mulb
lods
dec
rclb
xchg
xchg
jo
push
out
push
pop
adc
sub
xor
xchg
push
xchg
aas
inc
dec
je
ja
cmpsl
out
fsqrt
push
jg
testl
or
mov
push
adc
into
testb
mov
xchg
out
dec
ja
std
add
jne
adc
out
jecxz
mov
lret
sub
pop
dec
int
push
pusha
mov
in
decb
cmp
in
xlat
lock
xor
jmp
lds
int
repnz
test
scas
imul
dec
pop
cmp
xor
ret
jmp
and
out
lret
xchg
mov
lea
lret
lock
fidivrs
mov
pop
fisubs
pop
divb
pop
pop
dec
andb
mov
outsb
xchg
outsb
cmp
sbb
mov
inc
iret
jae
and
popa
and
pop
jmp
xchg
pop
cmp
inc
push
sub
dec
or
pop
xor
push
xchg
std
ss
leave
into
or
leave
les
sbb
pusha
jecxz
pop
in
outsl
pshufw
mov
xchg
ret
jl
and
fld
daa
push
sbb
push
test
jmp
jo
lret
movsb
cwtl
pop
mov
cltd
mov
inc
clc
cs
movq
xor
mov
pop
jle
push
cwtl
fs
lea
aam
inc
pop
or
jae
sub
mov
xor
or
or
mov
cmc
dec
adc
jmp
sbb
sbb
or
lahf
movsl
cmp
dec
or
fwait
xchg
adc
bound
mov
add
jl
fwait
rolb
cmp
out
push
arpl
lock
sbb
cmp
pop
inc
sub
push
xchg
fwait
xchg
les
mov
adc
xchg
stos
or
cmp
or
add
mov
and
jns
iret
rorb
into
xchg
std
shlb
test
stc
add
pop
add
xchg
fldl
mov
sti
lods
dec
dec
sbb
cld
loope
adc
fwait
xor
add
clc
aaa
mov
cmp
jb
mov
xor
cmp
int3
leave
mov
outsl
shll
jg
bound
int
xchg
gs
add
inc
roll
mov
mov
clc
inc
insb
test
faddl
sti
pop
add
push
jbe
pop
lret
pop
and
push
adc
movsl
or
in
es
and
dec
daa
cmpsl
xor
jno
movsb
js
mov
jae
inc
inc
pop
mov
push
hlt
sub
xchg
fwait
pop
jp
std
lods
xchg
inc
repnz
andl
and
rcrb
ljmp
outsl
dec
pop
adc
ds
mov
add
jmp
push
cld
repnz
lods
insl
imul
in
sbb
mov
ror
inc
fiaddl
cld
mov
jbe
add
es
mov
loope
and
sahf
pusha
enter
jne
xchg
jne
repz
jns
mov
cld
ds
fwait
pop
loope
and
push
icebp
pop
lahf
sub
leave
rorb
sbb
rorl
les
mov
inc
jg
add
jp
xor
jg
loope
mov
pcmpgtd
xchg
sbbl
pop
push
pop
adc
mov
push
and
push
iret
sbb
jp
or
xchg
dec
mov
out
addr16
inc
sub
inc
add
adc
lahf
lret
cmpsl
and
iret
and
dec
push
call
and
push
imul
cmp
cmp
sbb
ret
call
jge
out
xor
roll
xchg
neg
pop
push
bound
or
scas
lret
divb
add
out
jp
fstps
shr
gs
lret
mov
jno
push
adc
pop
outsl
push
sbb
test
repnz
push
sbb
pushf
xchg
out
aam
inc
addr16
fs
or
clc
and
push
xor
rorb
push
pop
sub
rcl
xchg
clc
push
cmp
scas
adc
push
out
stos
stos
sbb
iret
test
pop
call
pop
dec
add
movsl
push
adc
inc
pop
roll
stc
enter
push
out
in
sbb
insb
mov
or
aaa
mov
xchg
and
or
dec
lock
jbe
mov
lods
sbb
out
mov
add
xchg
pop
add
out
cmp
testb
inc
pop
stos
xchg
pop
fucom
fdivrp
pop
jmp
inc
stc
or
repz
imul
popa
stc
daa
mov
fists
movsb
and
daa
ja
cmp
ret
rorl
mov
ljmp
nop
bound
bound
aas
fsubrl
cmp
or
push
cmc
mov
decb
insl
insb
cmp
faddl
jno
or
jns
mov
imul
and
faddl
jne
fmul
mov
cmpsl
push
jae
rorl
xchg
jg
push
pushf
loop
cmp
xchg
pop
ss
jmp
loopne
pop
sub
sarb
loope
fisubrs
push
fwait
push
adc
jmp
lret
pop
push
stos
loopne
gs
imul
mov
aaa
pop
lret
imulb
add
jmp
daa
rorb
icebp
test
mov
ds
xlat
dec
adc
mov
lock
ss
inc
sub
sarb
jnp
loop
pop
pop
lds
clc
outsb
lahf
mov
push
test
push
outsb
push
test
pusha
xlat
test
in
xchg
lret
es
test
out
cld
test
push
stc
inc
push
rol
cmp
lret
sbb
add
stos
stos
add
outsb
in
aam
mov
push
push
mov
dec
cltd
sub
xchg
mov
xchg
stos
push
push
pop
popa
mov
or
out
je
aaa
xchg
jg
outsl
xchg
jae
sbb
lock
shr
jo
insl
adc
push
add
mov
lods
imul
xor
out
repz
jne
lcall
fistpll
jp
xchg
leave
sahf
cmp
out
loop
sbb
xchg
test
inc
fs
xchg
push
push
pop
aam
stos
insl
xchg
pusha
add
insb
cli
lret
popa
or
dec
xchg
xchg
cmp
xchg
insb
fists
dec
cmc
into
addr16
dec
mov
movsb
adc
sbb
mov
add
xor
sarb
mov
push
fmuls
jo
popa
jle
sub
cmp
insb
loop
jl
inc
push
outsb
mov
push
ss
loop
cmp
sahf
jmp
mov
gs
jno
vpminub
xchg
leave
addb
sti
stos
lods
pop
andl
sub
or
xor
out
push
in
and
push
pop
sub
and
scas
jp
mov
add
xchg
lods
inc
sbb
addl
das
std
sbb
mov
jb
fistpll
pusha
ss
popa
test
fcoms
pop
pop
jge,pt
xor
ljmp
jne
and
xchg
cmp
mov
testb
sbb
inc
mov
fcoml
idiv
leave
xor
call
loopne
insl
jp
decb
enter
in
jb
jmp
aas
add
mov
push
call
fldcw
jae
xchg
pop
rclb
scas
stos
or
pop
lods
mov
cmp
mov
cmpsb
iret
lea
lods
and
in
adc
je
addr16
push
sbb
mov
test
call
in
sub
mov
xlat
movb
mov
cmp
mov
adc
testb
sbb
mov
mov
movsb
and
rcl
and
jecxz
aas
dec
repnz
push
push
pop
aaa
flds
loop
ficompl
std
lahf
pop
xor
mov
lods
cmpsb
out
stos
mov
jl
inc
or
loop
push
cltd
test
sub
mov
xlat
mov
sbb
lock
add
sarw
mov
push
pushf
sbb
aaa
testl
sbb
pusha
dec
lret
mov
pusha
mov
mov
das
inc
cmpsb
xor
inc
jo
dec
pop
sub
pop
fildl
stc
shrl
jmp
inc
arpl
out
movsb
or
pop
dec
and
aad
sti
push
in
sub
inc
xor
inc
sub
xchg
nop
push
xor
xor
sti
cmpsl
jbe
idivb
adc
mov
shlb
xchg
lods
or
lcall
rclb
xor
and
lds
xor
pushf
and
aam
push
sub
es
mov
popf
or
cs
fs
sbb
pop
push
lds
daa
leave
imul
inc
mov
inc
enter
pop
mov
sub
xchg
mov
and
lret
cltd
lret
push
fstps
pop
jp
sahf
mov
roll
push
or
repz
xchg
sub
sbb
push
cmp
fs
jno
xchg
lods
movsl
jecxz
ss
in
mov
sbb
sahf
in
sub
decl
cld
jbe
dec
add
clc
xor
ds
cmpsl
out
xor
leave
mov
sbb
sub
sub
mov
incb
aaa
pop
mov
fbld
in
xor
inc
mulb
xor
mov
scas
pop
ror
mov
shl
cmpl
adc
mov
int
jb
mov
int3
ss
and
in
jge
sbb
mov
sub
push
jmp
imul
data16
in
scas
mov
pop
shrl
xor
pop
out
ds
rorb
cmc
mov
ss
or
loope
testl
enter
out
mov
jno
aaa
xor
pop
push
push
lods
or
adc
mov
int
or
leave
lcall
xor
sub
or
jle
lret
mov
sbb
sbb
xchg
pop
adc
jecxz
cmp
push
pop
dec
inc
cmpsl
jno
sarl
cwtl
inc
mov
pusha
std
pop
jb
mov
adc
inc
shl
dec
or
mov
inc
les
dec
nop
test
push
fnstenv
and
sub
es
insb
jb
mov
aaa
lock
mov
cltd
repnz
gs
xchg
sub
pop
mov
push
ds
call
lea
data16
cmc
loop
or
insb
sbbl
imul
mov
and
std
jno
dec
int3
jbe
add
fistpll
ljmp
aaa
scas
jge
hlt
inc
and
insb
add
in
data16
lret
cmp
sub
test
mov
cld
loopne
mov
xchg
aad
dec
das
cmp
daa
repnz
sbb
pusha
fmuls
sub
mov
rcr
xorl
cmpsb
ja
push
popf
subl
adc
test
mov
notl
sbb
or
xchg
mov
int
loopne
out
or
stos
seto
dec
jmp
sbb
lcall
pop
rcrb
in
jl
add
shlb
lcall
mov
dec
das
shll
subb
lea
sbb
nop
inc
daa
xor
xor
stc
lods
cmp
cmp
adc
hlt
add
jp
xor
xchg
jns
test
sbb
daa
xchg
sbb
cmp
in
and
fwait
mov
push
add
sbb
sti
lods
subl
push
loop
jb
out
insb
rorb
fnstcw
cmc
inc
xlat
push
enter
sbb
xor
repz
aad
std
je
mov
xlat
stc
inc
mov
jg
mov
into
cli
sub
fstpt
cwtl
sarl
cmc
lods
lods
jmp
or
pop
xchg
fwait
dec
mov
sbb
mov
sbb
inc
nop
and
sahf
pop
jne
xchg
push
movsb
das
pop
dec
dec
sbb
mov
push
push
gs
out
jecxz
pop
stos
fptan
hlt
push
sub
sahf
cmpsb
sub
sahf
mov
dec
stos
sub
add
xchg
add
pop
out
add
pop
xchg
cmp
rcrl
inc
cmpsl
sbbl
out
push
aad
mov
popf
imull
and
add
mov
sbb
mov
mov
jo
mov
punpckldq
mov
aas
add
and
xlat
dec
in
ja
popf
sub
adc
in
fsubs
stos
or
and
cwtl
jno
imul
std
add
lds
loopne
mov
adc
add
dec
rcrb
pop
sahf
mov
fs
adc
shl
jae
push
mov
enter
fucomi
fdivrl
mov
decb
cwtl
xor
mov
leave
stc
mov
mov
mov
loop
add
dec
popf
aam
les
cmpsl
loope
pop
and
pmulhw
push
mov
push
repnz
jle
fstpt
out
pop
aas
jnp
jp
mov
sub
pop
pushf
ljmp
sub
fdivs
push
and
lahf
aad
sbb
cmp
dec
dec
mov
push
add
notb
in
outsl
jmp
and
cli
mov
aam
ret
adc
jb
ljmp
sahf
pushw
push
and
cmp
add
xchg
and
jne
adc
cmp
rorl
into
js
repz
sbb
in
sbb
sub
mov
sub
jae
sub
arpl
outsl
subb
into
adc
mov
ss
mov
subb
add
imul
cmp
mov
adcb
loop
int
sbb
sbb
pop
mov
xchg
fdivs
int
push
cmc
mov
cmp
and
mov
cmp
xchg
pop
fadds
fcmovnb
test
out
jnp
mov
mov
pop
mov
add
outsl
adc
stc
cld
clc
sub
popf
or
adc
outsb
cli
mov
add
clc
pushf
cmp
and
mov
pop
ret
xchg
das
sub
into
xchg
lods
lea
fmull
mov
sub
in
lret
movsb
pop
mov
pop
scas
aaa
fisttpll
dec
mov
fsubr
adc
or
int
jl
jp
popa
orl
cmp
enter
adc
aad
sbb
test
sahf
stos
jns
out
inc
cmpsl
test
cmp
xorb
daa
iret
cmp
repnz
push
mov
aam
push
ja
sbb
sub
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
outsb
lea
push
sub
push
push
xchg
repz
cmp
leave
mov
and
xor
xchg
mov
adc
push
cltd
popf
cmpsl
clc
dec
movsl
loop
dec
push
or
rcll
imul
adc
dec
mov
nop/reserved
mov
pop
xchg
xor
mov
mov
cmp
add
add
jp
out
cmp
loopne
icebp
cmp
and
sbb
sbb
imul
pop
add
mov
notb
lea
mov
mov
into
inc
fldenv
imul
in
aam
sbb
imul
insb
sbb
push
adc
out
xchg
mov
mov
cmp
cmpsl
cli
mov
xor
sub
add
sti
and
xchg
xor
dec
jmp
adc
push
jecxz
les
in
shlb
mov
xor
stc
xor
push
mov
pop
dec
andb
sbb
shl
jns
xor
lret
out
xchg
scas
out
mov
push
add
ds
cmp
dec
lfs
cmp
add
jecxz
add
lds
pop
mov
mov
push
xchg
mov
fwait
scas
test
mov
fidivl
xchg
sbb
into
out
pusha
es
int3
scas
call
fcoms
xor
inc
sub
fldcw
arpl
jo
jae
enter
test
lahf
or
adc
lock
addr16
dec
loope
mov
add
sbb
jle
stc
rorb
xor
xor
add
in
xor
jbe
xor
xchg
loop
hlt
jle
mov
jae
loop
out
cmp
add
shll
cmp
push
in
sub
lahf
fimull
shr
ds
sub
mov
jl
jnp
mov
inc
js
mulb
fistpll
jge
mov
xchg
je
fsubrs
out
scas
fldcw
leave
fisubrl
popf
into
data16
xor
shrb
or
sub
dec
xor
fmul
mov
dec
bound
cmp
xchg
mov
or
push
xlat
pop
leave
jge
data16
jo
mov
test
sub
sbb
sbb
out
pop
popa
inc
pop
sbb
mov
je
rcll
icebp
jns
dec
or
and
test
mov
mov
dec
out
or
cli
fldcw
mov
push
dec
test
lahf
int
adcb
lret
and
fwait
test
pop
push
aam
sub
sbb
mov
cli
add
mov
mov
test
mov
ret
je
les
and
xchg
fnstcw
or
adc
xchg
sbb
pop
mov
or
mov
push
aaa
aad
jle
xchg
iret
pop
pop
lods
aad
std
gs
pop
repnz
inc
lds
mov
loope
add
add
dec
repnz
pop
aam
dec
jle
push
shll
sbb
ljmp
fimull
in
xchg
pop
fwait
dec
mov
loop
fnstsw
sub
stc
iret
outsb
andl
sti
sahf
push
inc
cmp
cltd
adc
push
jae
jno
dec
lret
fistpll
loop
mov
into
lret
mov
cmp
jne
jb
inc
xchg
and
jns
jle
ds
outsl
pop
stos
jne
out
cld
mov
fdivl
aas
sub
sbb
rolb
movsb
cmp
imul
stc
das
ja
push
inc
roll
mov
mov
sub
mov
repz
xor
cli
test
ret
loop
movsl
in
adc
icebp
iret
popa
sub
cs
jp
jg
add
add
test
jge
sti
rorl
push
fcoml
push
leave
stos
mov
dec
xor
iret
test
cmp
mov
in
outsl
xor
mov
xchg
jbe
ljmp
mov
pushf
jp
inc
std
sbb
dec
enter
jge
xor
mov
sub
mov
push
mov
icebp
and
mov
add
ficoml
xchg
xor
fmuls
inc
icebp
push
xchg
pop
clc
cli
shlb
adc
aas
mov
mov
test
mov
xor
sub
das
push
jbe
mov
push
adc
jmp
jge
pop
pop
test
popa
negb
xchg
ret
bound
push
icebp
stos
lret
jge
jne
jecxz
adc
xor
adc
jp
jb
jb
stc
lods
sub
mov
rcr
cmp
addr16
rcrl
jno
inc
in
sarb
lret
lret
jmp
js
or
fdiv
xor
jle
mov
js
xor
mov
je
jge
pop
hlt
mov
adc
ret
sti
fidivrl
add
mov
mov
js
inc
shrl
mov
cmc
or
hlt
popf
or
fcomp
adc
sbb
and
idivl
les
nop
inc
fwait
adc
xchg
sti
mov
xor
lds
test
push
adc
sti
push
pop
jae
push
adc
aaa
pop
xchg
jecxz
inc
sub
jno
xor
inc
xor
in
and
cmp
cmc
mov
insb
adc
ds
xlat
xlat
adc
int
lcall
sahf
cmpsl
repz
stos
mov
jae
pop
or
or
fsubs
stos
into
push
call
jp
out
mov
insb
lcall
stc
mov
lods
dec
add
ds
or
rorl
sub
mov
jno
dec
jmp
idivb
inc
and
into
rcl
xchg
sbb
or
cmp
dec
out
xchg
bnd
xchg
sbbb
mov
sarb
jnp
adc
imul
and
mov
movsb
pusha
mov
movsb
bnd
lds
xchg
xchg
jg
dec
or
inc
jbe
xchg
loopne
leave
mov
adc
xchg
mov
sub
fcomip
sar
push
xor
in
adcb
lret
popa
movsb
inc
aas
pop
cmp
and
sub
lds
add
iret
mov
inc
xor
lahf
fildll
aam
js
loope
mov
test
cwtl
push
into
push
cmp
in
lcall
pop
test
inc
sub
jl
shl
push
repz
xchg
push
daa
sbb
add
or
dec
sbb
adc
in
cli
mov
add
add
fs
mov
fsubl
adc
push
push
and
popa
pop
or
add
aad
mov
movsl
popa
aas
mov
jg
adc
in
les
jmp
jg
icebp
int
adc
mov
fwait
out
mov
push
test
das
and
rclb
inc
daa
aaa
decl
inc
imul
ret
loopne
imul
mov
xchg
repz
xchg
push
ljmp
dec
shlb
test
dec
pop
mov
rclb
rolb
fisubl
inc
fistl
fnstenv
lods
jge
mov
aam
mov
xor
psrld
std
pavgw
inc
dec
xchg
cmc
stos
adc
faddl
scas
sbb
and
iret
mov
push
test
cmpsl
ds
xchg
movsl
clc
push
out
push
and
loopne
add
test
add
imul
jae
mov
pop
addl
and
frstor
sub
inc
dec
jb
pop
out
jge
dec
xchg
rorl
jns
adc
cmpb
insb
cmp
mov
divb
mov
sbb
sbb
mov
test
lock
mov
push
movl
mov
sahf
sub
jl
mov
popf
push
inc
pop
mov
and
adc
mov
outsl
mov
sub
sahf
shlb
add
addr16
fidivs
inc
fstp
mov
scas
outsb
mov
sub
bnd
mov
and
sub
out
pop
outsl
iret
push
jp
cmpsb
or
jbe
ds
fwait
xchg
loope
pop
push
sbb
mov
push
jp
shrl
xor
mov
pop
arpl
mov
mov
mov
inc
lcall
fwait
and
fimull
cli
jg
enter
fstpl
repnz
pop
or
fldcw
xor
lahf
mov
fistpl
push
ss
xchg
call
mov
cmp
shll
lds
loope
or
xchg
sbb
sbb
lcall
xor
inc
in
pop
add
mov
das
adc
dec
and
flds
mov
and
jnp
push
push
sbb
addr16
xchg
icebp
adc
inc
loopne
ror
pop
and
in
outsb
jb
popf
sbb
or
outsl
outsl
test
arpl
mov
adc
push
sub
sbb
sub
loope
mov
orl
movsl
mov
push
pop
out
xchg
mov
mov
xchg
jl
cmp
xor
sbb
in
inc
mov
pop
cs
int3
scas
push
repz
into
cmp
fs
push
and
inc
scas
loope
inc
lret
jge
imul
sub
push
xor
int3
aam
inc
mov
jne
call
dec
mov
hlt
mul
pop
neg
pop
rorl
addl
pop
xor
push
aas
sbb
inc
test
jge
or
or
shll
adc
mov
pop
sbb
mov
adc
aad
jbe
les
push
cmp
mov
int
shll
dec
mov
mov
stos
orb
les
movsb
sarb
mov
adc
mov
sub
fsub
pop
scas
call
leave
mov
int3
into
mov
jg
jo
jb
pusha
xor
push
mov
lds
inc
xchg
aam
push
popf
mov
push
aaa
loope
dec
or
inc
rcrl
repnz
add
pop
jae
jns
nop
dec
xchg
jae
xor
pop
cwtl
std
pushf
jb
pop
dec
mov
mov
or
and
out
je
cmp
or
add
imul
cmp
daa
sbb
sbb
ljmp
adc
enter
pusha
lock
mov
daa
xor
xchg
jno
ss
cmc
and
bound
push
insl
or
scas
dec
mov
adcl
pop
pop
xchg
lds
mov
pop
xlat
data16
pop
mov
xor
test
lods
fsts
mov
add
xchg
pop
stc
aas
or
hlt
mov
add
lds
pop
adc
in
xchg
xchg
ret
dec
stc
hlt
jl
arpl
pop
andb
xchg
loope
cwtl
sub
and
int3
push
and
jnp
les
sub
test
pushf
add
notl
xchg
add
in
inc
xchg
cmp
xor
sbb
pop
sbb
cmp
je
mov
push
lds
stos
jp
in
cli
mov
push
push
stos
cmp
sbb
repnz
adc
pop
jecxz
sahf
into
stos
xchg
andb
add
repz
sub
fidivrl
xchg
clc
sub
imul
sub
outsb
sub
push
mov
inc
negl
daa
outsl
pop
or
and
fwait
sub
xchg
cmp
arpl
out
jno
sub
inc
sub
xchg
xchg
sbbb
xor
push
xchg
mov
add
mov
das
sub
das
or
js
adc
in
xor
cmpsb
ljmp
mov
or
push
sub
jecxz
roll
sub
xchg
jg
scas
icebp
in
outsl
rorb
sahf
bnd
mov
mov
subb
outsl
mov
pop
xor
jns
adc
sub
push
or
icebp
fsin
mov
aaa
xchg
mov
jbe,pn
cmp
cmc
loop
pop
fstp
jle
cmpsl
cli
lret
outsb
ret
icebp
mov
test
ret
hlt
push
lods
lret
pop
lret
popf
scas
jmp
mov
inc
adc
xor
mov
in
cwtl
push
pop
es
addl
scas
pushf
fstpt
sti
cmp
stos
mov
sub
mov
cld
repnz
adc
loope
stos
out
pusha
push
mov
pop
xchg
dec
nop
lea
jo
imul
xor
jo
cmp
push
imull
addr16
dec
movsb
ljmp
les
pop
cli
leave
es
pop
pop
cmp
xchg
fsubs
pop
add
rclb
shrl
mov
mov
cmp
xor
bound
jno
aaa
pop
jecxz
insl
push
out
orl
es
push
fisubl
gs
sub
mov
pop
ds
lahf
in
xchg
out
aas
cmp
int
sahf
pop
pop
repz
cmpb
mov
pusha
stc
sti
lcall
mov
fcmovu
xor
pop
dec
push
push
jns
inc
aam
add
xchg
mulps
out
lods
cmp
xor
sbb
or
push
fcomip
test
inc
xchg
xchg
clc
aas
or
mov
sub
mov
cmpsl
inc
fcoml
xor
inc
add
mov
or
dec
adc
lods
jne
daa
mov
push
mov
lock
add
mov
dec
cwtl
les
decb
cmp
push
push
push
cmp
insb
mov
sbb
das
mov
mov
pop
push
mov
xchg
test
adc
inc
loop
out
out
cmc
stc
ds
mov
xchg
jb
sti
adc
inc
pop
pusha
mov
out
shll
sub
loopne
add
pop
push
or
out
xchg
mov
pop
xchg
mov
js
pop
mov
leave
test
jmp
add
clc
dec
mov
cmpsb
adc
mov
inc
mov
jecxz
push
test
push
lods
xchg
xchg
int
cmp
and
and
dec
cwtl
lcall
out
cmp
jmp
mul
scas
out
mov
pop
hlt
xor
cmpsb
loop
xchg
iret
xchg
nop
std
jmp
dec
cmpsl
or
leave
std
mov
mov
data16
add
and
loope
jno
push
in
lods
cmc
xor
jge
mov
gs
fiadds
jmp
mov
push
mov
push
jl
popa
scas
mov
bsf
inc
pop
fwait
lods
or
cmpsl
cld
int3
push
lock
push
data16
mov
mov
jle
and
or
pusha
mov
mov
pop
mov
mov
mov
in
dec
shll
and
pop
sbb
dec
std
repnz
mov
xorl
inc
cmc
leave
or
xor
and
and
int
xchg
pop
sub
lcall
cmp
cmc
adc
xchg
imul
pop
push
outsl
add
out
stc
add
mov
and
add
adc
sarb
sbb
imull
scas
mov
repz
repnz
insb
mov
sbbl
inc
outsl
mov
inc
pusha
rolb
lcall
dec
sahf
mov
loopne
jne
jmp
aas
inc
sbb
sbbl
xchg
pop
aam
or
sbb
ficompl
ds
pop
sbb
lret
cmp
and
adc
add
in
test
pushf
xchg
fstl
arpl
movsl
mov
fsub
jbe
mov
push
sub
xor
dec
cmp
repz
sub
jno
in
push
neg
mov
dec
pop
xchg
in
cltd
sti
xchg
roll
repz
cld
add
push
mov
jecxz
mov
inc
ljmp
mov
pop
lock
inc
mov
into
dec
aad
bound
jg
dec
cwtl
cltd
sbb
xchg
insb
adc
sbb
aaa
fcompl
mov
and
sbb
ret
inc
leave
sbb
ljmp
pop
adc
push
aad
cmc
jbe
jecxz
mov
adc
int3
mov
cmc
les
cmp
dec
xchg
fisttpl
les
jbe
pop
stc
in
jge
xor
jnp
jmp
scas
push
es
cld
and
int3
lds
push
mov
jno
and
jo
lods
lret
movsb
adc
scas
testl
daa
xchg
inc
xor
sar
or
dec
jp
sbb
inc
push
pop
pushl
sbb
jae
dec
rcr
adc
mov
sub
sahf
aas
addr16
mov
mov
mov
xchg
add
jnp
sub
inc
cmpsb
xor
fsubrs
popa
in
stc
lods
cmc
in
fistpl
dec
cltd
fdivrl
pop
mov
mov
xor
data16
push
jbe
sti
mov
scas
pushf
arpl
adcb
pop
stos
inc
lret
jmp
nop
mov
xchg
and
pop
lea
mov
testl
mov
lcall
in
dec
and
fistpll
dec
and
push
push
out
inc
sub
rolb
ja
jecxz
lret
mov
pop
and
xor
aas
aad
lcall
mov
shrl
mov
pop
add
es
and
mov
lret
jae
mov
roll
fsub
std
lds
pusha
push
lods
pop
push
lahf
or
aas
xchg
and
cmpsb
cli
mov
mov
out
bound
inc
lret
xchg
pop
loop
mov
in
and
pop
and
cs
aas
pop
mov
repnz
jmp
sbb
frstor
push
out
jmp
or
faddp
jecxz
cwtl
xor
addr16
ss
mov
test
xor
cmc
pop
xchg
jb
sbb
mov
scas
scas
fcmovnu
mov
xchg
in
lods
adc
jg
mov
and
int3
cltd
js
std
inc
adc
cmpsl
imul
in
xchg
das
add
aas
repz
repnz
outsl
jne
rclb
or
cmp
lock
subps
jno
test
clc
xchg
shll
mov
adc
adc
push
ja
rolb
pop
add
dec
bound
seto
and
pop
sbb
cmp
imul
jge
push
pushl
cld
dec
shll
push
rcrb
lahf
loope
or
push
int
les
push
repnz
scas
aam
or
out
and
mov
pushf
xchg
hlt
pop
xchg
lret
xchg
test
sbb
mov
push
ss
imul
pusha
push
cld
lods
test
pop
mov
jg
adc
cmp
cmpsl
sbb
pop
xor
xchg
lret
out
xchg
inc
sub
mov
adc
pop
fbld
xchg
mov
ljmp
sbb
cmp
imul
fisubl
lods
inc
jle
push
out
push
bound
dec
lea
cmp
loopne
ds
dec
imul
ja
and
stc
shlb
push
xchg
in
pusha
jp
adc
out
out
std
jg
cmp
mov
sahf
cmpl
xchg
mov
push
scas
jb
cmp
and
fs
jmp
dec
jmp
insb
jecxz
xchg
ror
mov
lret
pop
call
les
inc
imul
push
mov
shl
xchg
xlat
pop
sub
into
add
mov
and
insb
ret
outsl
cmp
inc
sti
in
pop
push
xor
adc
test
mov
and
inc
aad
or
cs
loope
cmc
hlt
sub
arpl
add
xchg
les
xor
and
xor
cltd
lods
cld
or
sub
mov
cmp
je
jecxz
and
outsl
jmp
decl
dec
push
cmp
dec
inc
push
loop
cmp
sub
push
pop
add
push
push
imul
or
pop
push
sbb
pop
or
mov
jge
mov
loop
adc
mov
mov
dec
stos
lods
pop
jnp
pop
mov
mov
adc
sbb
mov
push
ja
loop
add
in
xchg
test
js
cmp
mov
out
push
add
fldenv
sub
idivb
push
insl
hlt
pop
out
push
lahf
std
roll
dec
std
or
stc
fistpll
in
les
mov
push
mov
pop
aad
mov
xchg
loop
or
hlt
das
hlt
pusha
out
clc
into
jno
arpl
mov
adc
int
pusha
dec
pop
sti
push
pop
mov
enter
cs
sub
jb
add
or
out
push
ret
scas
cmp
jae
sbb
cmp
push
call
cs
pusha
mov
imul
push
jnp
out
sub
jecxz
dec
aaa
inc
nop
xchg
mov
pop
test
pop
sub
repz
inc
push
mov
ja
mov
sbbl
sub
sbb
inc
les
ljmp
cmc
and
mov
push
lcall
sti
insb
adc
sub
daa
enter
out
aas
in
sbb
xchg
cld
add
xchg
int
iret
adc
pop
or
add
xor
pop
and
dec
test
pusha
sbb
movsb
dec
je
mov
mov
test
xor
pop
cli
mov
jno
and
cmp
loopne
mov
lock
shr
add
cli
adc
pop
mov
sub
je
movsb
testb
nop
sub
hlt
data16
lods
mov
sub
fwait
lret
dec
stos
jge
sarb
and
mov
ds
icebp
mov
jg
shl
lret
fistpl
lods
int3
xor
xor
lahf
xlat
lods
jg
jmp
ss
dec
sbbl
shlb
sub
popa
inc
addr16
lret
push
in
mov
icebp
xchg
fimuls
and
imul
stos
imul
aam
adc
xchg
lea
leave
sub
jp
mull
lds
dec
cmp
push
cli
rcr
rcrb
jmp
int
sahf
xchg
sbb
pushf
cmp
insl
push
movsl
nop
icebp
mov
aad
dec
dec
aad
xchg
mov
pop
nop
insl
push
mov
call
cmpsl
sub
lea
and
dec
xchg
jae
sub
xchg
out
sbb
repnz
lock
fistpl
aam
je
movl
jl
dec
jle
adc
lods
sarl
cltd
jl
pop
fisttpl
mov
decl
add
out
mov
push
sbb
out
jmp
or
into
mov
stos
jns
fs
mov
js
sub
jbe
lret
jle
mov
sbb
jno
lods
dec
xchg
xchg
add
fisttps
inc
mov
lahf
pop
cltd
and
jbe
adc
push
dec
xlat
add
push
fsubrl
pop
mov
js
push
popf
mov
loop
and
cmc
mov
xlat
jecxz
mov
mov
js
clc
sub
sahf
xor
push
data16
pop
jne
into
xchg
inc
imul
sbb
push
mov
clc
sub
cwtl
mov
les
jg
gs
test
ret
pop
arpl
je
or
jmp
es
sti
inc
dec
sbb
jns
mov
mov
adc
xor
sete
call
mov
hlt
test
adc
or
push
aad
mov
push
xchg
outsl
xchg
mov
in
pop
push
mov
stos
int3
les
jnp
mov
push
arpl
sub
xchg
imul
leave
test
fwait
sbb
dec
cmp
sbb
cmpsb
out
dec
fs
inc
push
insb
orb
popa
bound
inc
inc
icebp
mov
cld
loope
jl
pop
xchg
sahf
push
push
push
jb
aas
cmpl
pop
adc
call
pop
test
cmp
ss
data16
push
es
or
cmc
js
or
and
ret
pop
test
mov
jns
inc
inc
iret
mov
jns
cmc
or
cmpsb
sbb
imul
dec
cmpsb
lds
xchg
cmpsl
das
inc
iret
clc
pushf
out
cmp
loopne,pt
jae
lret
loope
jns
xchg
mov
push
cmp
push
hlt
and
incl
cmpsl
and
mov
cltd
lds
add
or
outsl
sbb
sbb
push
inc
cltd
mov
mov
pop
scas
int3
popa
rorl
xchg
push
sarl
pop
out
mov
mov
jg,pt
sub
hlt
inc
cwtl
push
push
mov
xchg
dec
mov
sbbb
jge
sub
xor
inc
jg
call
sarb
sub
xchg
sbb
and
sbb
add
loope
ljmp
jbe
inc
cmp
sbb
jb
add
outsb
pusha
into
pop
push
adc
cmp
or
jae
repz
xchg
xchg
fnsave
cltd
xchg
addr16
jbe
test
jnp
out
or
mov
pop
aas
sbb
es
cmpb
repnz
pop
sahf
sbb
out
aam
lods
xor
lock
and
and
repz
gs
mov
inc
scas
mov
hlt
ds
pop
lret
outsb
inc
hlt
test
xacquire
fnstenv
mov
pop
sub
fcoml
push
xor
mov
icebp
xor
repz
inc
ret
leave
cmp
ljmp
xchg
mov
xchg
push
nop
adc
lcall
add
fwait
mov
icebp
test
scas
fisubrs
jnp
rclb
nop
jge
outsl
fcomip
mov
enter
adc
pushf
cltd
inc
mov
and
dec
not
out
sbb
into
push
js
and
mov
cmp
inc
lods
push
push
sub
inc
rorb
js
and
mov
and
adc
jnp
jg
push
cmp
sbb
mov
mov
movsl
dec
js
icebp
shr
cli
cmp
push
push
jne
lea
sbb
or
jecxz
movsl
leave
ja
pop
cmp
clc
sbb
dec
cwtl
ficoms
push
fsubrs
or
fisubrl
lods
testl
cmpsb
lret
sbb
out
into
xchg
fs
lcall
cwtl
mov
xor
cmpsl
outsl
int3
insl
pop
mov
rclb
sbb
and
rcrl
push
ror
xchg
int3
scas
push
add
pop
stos
lea
or
pop
mov
xchg
xchg
and
push
cmp
push
sbb
cmp
daa
mov
aas
test
fdivr
cltd
sub
mov
jp
mov
xor
icebp
cltd
rolb
mov
and
mov
push
push
das
rclb
xchg
cmpsl
cmp
jo
xor
int
scas
inc
out
and
stos
movsl
sbb
add
mov
mov
js
outsl
mov
xor
movsl
sbb
and
cmp
repz
ficompl
mov
push
subb
pop
push
push
rcr
push
sbbb
into
call
xor
jmp
xor
xchg
pop
js
lds
sbbl
jmp
neg
filds
inc
loopne
test
lcall
xchg
scas
dec
ret
cmpl
icebp
test
add
push
or
mov
lcall
enter
mov
call
xchg
es
xlat
add
mov
incb
movsb
mov
cmp
dec
xor
mov
push
pop
push
shlb
inc
cli
xchg
fs
pop
fwait
outsl
xchg
cwtl
push
cmp
pop
jo
lods
in
and
mov
sub
or
mov
mov
cmp
mov
fimull
in
jl
fldl
xor
lret
outsl
je
jmp
add
hlt
out
mov
arpl
rcr
pop
cmp
fisubl
jnp
add
jl
adc
xor
inc
aad
and
out
mov
cmpsb
popf
xchg
inc
sahf
outsb
imul
ja
sahf
mov
mulb
sbb
mov
mov
test
aaa
rorb
fisttpl
pop
shrl
add
daa
out
clc
xchg
jb
xchg
in
pop
rep
push
rcrb
inc
icebp
xor
stc
sub
jg
frstor
push
pop
sub
dec
gs
jns
jge
jg
mov
out
adc
hlt
inc
cmpsl
xchg
shlb
cwtl
dec
bound
pop
lds
push
jl
jmp
push
stc
or
cmpsl
pop
sub
mov
mov
xchg
push
fcoms
pop
sub
imul
out
fldenv
imul
pop
icebp
mov
movsb
xor
adc
lahf
cmp
in
xchg
dec
ss
pop
lods
push
gs
or
stos
cltd
lahf
push
and
loop
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
xchg
adc
or
sub
push
push
jecxz
cmp
or
cmp
xchg
inc
clc
xor
shlb
repz
jno
icebp
xor
dec
ss
push
dec
pushf
pop
lods
sub
pop
cld
ja
mov
cmp
rcll
iret
push
xchg
scas
push
xchg
push
sub
popf
gs
popf
pop
out
fiadds
push
bnd
test
clc
orb
push
inc
in
sub
adc
inc
fadd
imul
out
pop
sub
testb
sub
test
or
sbb
addb
xor
pushf
jmp
mov
icebp
push
inc
mov
repnz
and
xor
inc
jmp
jmp
in
pop
mov
and
inc
add
test
aam
pop
mov
imul
mov
dec
lea
or
push
daa
in
lock
xchg
data16
cld
scas
and
fnstcw
cld
addr16
arpl
jecxz
popf
inc
movsl
bound
xchg
incb
push
push
ficompl
mov
mov
das
dec
insb
ret
pop
int
lods
stos
nop
push
xor
inc
pop
js
shrl
inc
jl
lods
adc
cmpsl
push
nop
lcall
xchg
push
jp
mov
adc
mov
lea
outsl
loopne
xlat
inc
adc
icebp
out
add
test
cmpb
add
inc
mov
jl
pop
pushf
cmovns
cmp
jle
ret
add
mov
insl
cmp
es
fldt
or
aas
incl
popa
popl
popf
js
bound
test
pop
adc
jne
std
push
inc
sahf
cmp
scas
push
pop
out
jmp
fidivrl
sarb
inc
mov
jmp
cmp
andb
sbbb
mov
scas
or
mov
jmp
mov
in
adc
dec
adc
stos
gs
push
es
bound
dec
pop
ja
and
sub
jns
mov
in
jmp
loope
xchg
arpl
xorl
push
rorb
sub
pop
add
lods
jno
cltd
mov
xor
cltd
in
cmp
jge
xchg
and
pop
adc
sbb
shl
pop
fmull
int
mov
inc
dec
in
jo
outsb
dec
testb
popa
cli
loopne
pop
adc
out
loopne
out
push
in
imul
hlt
and
daa
sub
mov
lds
dec
hlt
loope
stc
jp
and
xchg
cmpsb
jb
shll
cmp
in
xchg
cmc
in
or
xor
mov
xor
mov
les
xchg
xor
and
imul
inc
dec
and
pop
iret
dec
push
lret
fcompl
xchg
push
leave
mov
stos
add
cmp
push
movsb
mov
dec
inc
sti
add
shll
test
mov
fisttpll
pop
push
stos
push
inc
pop
cmp
data16
scas
ds
into
pop
sbb
jecxz
and
jae
adc
cltd
xor
cmc
xchg
dec
repnz
mov
cli
and
xchg
xchg
adc
outsl
shl
jmp
xchg
negb
arpl
fnstenv
bound
mov
and
xor
sub
clc
jecxz
out
mov
iret
scas
push
fstpt
sub
lock
mov
es
lea
outsl
push
stos
sbb
popa
aad
fs
cli
js
je
sbb
ret
jns
fimuls
xchg
dec
fs
pop
xor
negl
popa
flds
jge
aas
aad
cwtl
cmp
jl
fwait
std
lea
roll
sahf
mov
dec
fdivr
iret
add
inc
ficoms
mov
cmp
adc
push
sbb
aam
pusha
jg
fsubs
insb
lret
in
jecxz
push
push
imul
sub
jmp
or
addr16
cmc
inc
jmp
add
scas
out
test
adc
mov
xor
inc
call
pop
fmull
pop
popf
mov
fsub
gs
push
adc
mov
shll
adc
jp
xchg
dec
imul
aaa
es
movsl
scas
mov
incb
fcmovnu
mov
jns
mov
dec
rorb
out
outsl
jle
xor
cmp
fst
lds
xchg
lret
mov
outsb
xlat
inc
clc
dec
mov
xchg
sub
cmp
std
shr
data16
rclb
xchg
mov
call
fcmovnb
movsl
mov
push
xor
xchg
xor
pop
call
lret
push
mov
fdiv
daa
repz
es
xchg
enter
scas
test
subb
and
mov
lcall
lods
push
dec
fdivrl
dec
mov
sub
jge
inc
xor
addl
leave
xor
push
ret
rcll
ror
inc
dec
scas
add
jmp
sbb
mov
cltd
push
inc
adc
out
lcall
add
add
add
sub
inc
inc
xchg
fs
mov
ret
mov
xlat
mov
aaa
adc
inc
and
adc
add
inc
mov
and
xor
xor
adc
ja
push
adc
jecxz
stc
and
shl
out
push
mov
push
or
jecxz
outsb
cmp
aas
ja
push
xor
mov
inc
mov
call
or
mov
loop
xchg
cmp
inc
jb
loop
lahf
sub
in
mov
shld
mov
mov
shll
xor
fs
test
cmc
mov
jp
or
mov
into
or
or
lds
frstor
repz
clc
in
or
mov
notb
add
ss
jmp
dec
aas
xor
inc
sub
inc
xor
fwait
jge
call
roll
mov
adc
xchg
ja
mov
daa
add
mov
mov
push
and
mov
idivb
sub
movsl
lods
or
jge
cmovnp
and
scas
inc
aam
rcll
fstps
pop
inc
mov
ss
lcall
mov
out
inc
mov
dec
add
js
push
loop
ljmp
hlt
lods
pusha
xchg
pop
dec
loop
push
jne
cmpsl
add
push
jmp
pop
adc
mov
test
sub
lods
nop
xchg
testb
mov
adc
xor
cld
and
arpl
scas
pop
add
mov
test
mov
or
dec
andl
sub
xor
into
idivl
mov
pop
sbb
out
divb
mov
add
out
push
ds
in
fistl
mov
push
add
or
jge
xor
lcall
leave
inc
mov
adc
lcall
jns
pop
jmp
xor
push
sbb
push
in
and
ss
mov
ficompl
xchg
leave
movsl
ljmp
shrl
mov
dec
pop
fdivrs
dec
aas
arpl
jle
lock
aas
aam
sbb
lret
arpl
fsts
xlat
fsubrp
and
imul
addb
and
jmp
sub
sub
ja
and
cmp
leave
lcall
pop
pop
dec
adc
movsb
je
cmp
outsl
iret
scas
cmc
sbb
and
mov
xchg
lret
lock
stos
dec
hlt
xchg
lods
cmp
push
push
xlat
ficomps
push
xor
stc
fisubl
or
popf
mov
call
je
and
adc
push
add
jne
out
cmp
jno
mov
hlt
push
inc
ljmp
inc
push
sbb
outsl
mov
popa
mov
add
fwait
cmpsl
or
xor
push
mov
dec
mov
inc
inc
lea
je
jae
mov
inc
mov
mov
mov
je
mov
cltd
sub
cmp
dec
call
push
pop
ret
repz
adc
pop
ret
lods
lock
lods
xchg
nopl
lods
imul
inc
sub
sub
adc
xor
inc
stc
call
hlt
push
and
jmp
stos
pop
sbb
push
test
adc
popa
mov
shlb
adc
cwtl
add
dec
hlt
mov
mov
movsl
outsb
je
sbb
cs
cmp
push
rcrb
xor
mov
push
lock
mov
movsb
push
dec
dec
push
out
fdivr
sbb
sbb
lret
push
insb
sub
xchg
jne
adc
dec
mov
movsb
cmp
dec
cs
cwtl
lcall
fstpt
add
jecxz
mov
push
inc
mov
fildl
pop
push
sub
sub
shrb
sub
hlt
and
pop
in
lret
loop
cmp
fmull
jo
cmp
cltd
push
inc
cmp
adc
jg
or
inc
mov
mov
mov
stos
mov
es
popf
sbb
lods
add
push
xchg
xchg
sbb
push
mov
xor
scas
mov
mov
ja
mov
push
insb
inc
loop
in
dec
sub
loope
dec
mov
mov
jmp
lods
lds
inc
jecxz
jo
out
jnp
stos
and
cmp
mov
aad
pop
retw
pop
popf
mov
jnp
fldcw
mov
or
pop
lcall
xchg
inc
pop
push
xor
or
cmp
fsubs
pop
sbb
call
lods
sbbl
dec
push
xchg
shlb
pop
cmp
mov
hlt
push
flds
stc
jp
dec
insl
mov
add
lret
mov
bound
cmp
dec
repz
sub
xchg
fisttpl
xor
dec
stos
xor
inc
pop
jecxz
sarb
lahf
movsl
dec
dec
mov
hlt
mov
addr16
leave
inc
xor
scas
pop
and
nop
in
push
sub
andl
sub
pop
inc
loop
cmp
dec
dec
sub
mov
jno
movsl
mov
xor
inc
sbb
lock
sti
fsubrl
nop
lods
divl
aam
mov
sahf
cli
dec
rcrl
add
and
hlt
inc
cmp
insb
cmpsb
pop
cmp
nop
jmp
popf
and
push
rcl
cmpsb
push
or
push
in
sub
xchg
and
or
add
pop
sbb
mov
jg
fstps
mov
and
mov
push
leave
test
cltd
add
sub
mov
popa
movsb
sar
or
ss
push
insb
cmpsb
lahf
lock
push
nop
int3
add
cltd
mov
mov
jne
addr16
sbb
imul
inc
mov
in
mov
mov
orb
dec
dec
dec
pop
rol
scas
add
aad
jmp
xchg
daa
sbb
aam
mov
mov
lods
cmp
pop
clc
mov
jb
add
jmp
gs
in
adc
jo
push
push
mov
mov
lea
out
push
test
std
jns
mov
mov
jnp
mov
lock
or
jp
gs
push
cld
or
jne
shlb
frstor
test
in
dec
out
add
icebp
out
inc
xchg
add
es
sub
pop
daa
sbb
push
sub
aas
aas
fisttps
pop
sbb
push
call
gs
pop
ror
rclb
jae
and
jecxz
testl
faddp
lahf
sbb
fisttpll
fidivrs
lods
lcall
dec
jle
fwait
inc
jae
mov
ja
or
mov
ljmp
dec
and
xor
inc
pop
lret
xchg
jne
daa
stos
adcb
sahf
pop
into
outsl
mov
ljmp
loop
shrl
addl
pop
inc
cs
cwtl
mov
insw
pop
xchg
push
dec
push
daa
sub
inc
mov
sbb
pop
add
or
add
cmp
cmp
jge
push
jmp
inc
testl
adc
add
add
movsl
pop
stos
scas
xor
xchg
lods
outsb
mov
pop
pop
das
cwtl
das
pop
js
cmc
xor
xchg
cmp
loopne
dec
mov
shlb
pop
push
jg
daa
or
fstl
fs
cmp
popf
das
jb
pusha
cld
cmp
bound
xor
mov
pop
arpl
popf
jge
xor
inc
std
lahf
xchg
dec
add
cmp
add
into
pop
jb
jl
out
gs
adc
xchg
fsubrl
or
adc
pop
shlb
sub
arpl
std
inc
sub
ss
ret
jbe
cs
xchg
out
sti
shr
pop
bound
fisubrs
shlb
inc
mov
and
sbb
cwtl
int
pop
xchg
and
xchg
arpl
ja
push
fwait
dec
xor
fdivs
push
call
daa
lahf
daa
adc
dec
cmp
pop
sbbl
iret
int3
into
scas
insl
jo
hlt
mov
sub
loop
mov
fadds
sub
repnz
and
mov
pop
and
jecxz
dec
pop
repnz
sub
xor
push
data16
lods
cld
aad
je
roll
idiv
jnp
int3
xchg
je
inc
das
ss
imul
iret
test
push
cmp
das
stc
push
cmp
mov
pusha
inc
sub
movsl
mov
push
cmpsb
jbe
es
addr16
ficompl
and
jmp
jl
sarl
lods
leave
inc
and
subb
sbb
ror
xchg
insb
jg
gs
shll
or
je
mov
cmp
fs
mov
movsl
lcall
cmp
push
mov
sbb
out
push
lds
or
iret
cmpsb
imul
xchg
jno
popf
std
lcall
xorb
fstp
and
js
mov
mov
ror
xor
or
mov
adc
push
lods
add
sbb
xchg
sar
adc
setb
in
out
lock
xchg
setle
adc
inc
sbb
std
inc
and
pop
dec
ljmp
add
addr16
mov
mov
xchg
and
inc
or
or
sbb
or
adc
pusha
pop
mov
add
push
dec
mov
inc
and
dec
fadds
adc
test
xor
shl
fnop
test
leave
outsb
mov
push
mov
int3
push
sub
sub
rcrb
adc
orb
dec
xlat
ds
aaa
adc
xlat
lcall
scas
sub
imul
scas
sbb
flds
andb
dec
xchg
outsb
sbb
cmp
fnstenv
mov
in
sbb
out
test
sbb
lret
mov
in
jbe
pop
fistpl
ja
or
cli
out
and
push
and
mov
and
test
ror
dec
jbe
ja
subb
gs
jmp
cmp
xor
lahf
mov
inc
or
lods
cmpl
dec
cmpsb
sbb
mov
sub
ret
mov
imul
outsb
stos
xlat
ret
call
and
outsb
push
leave
addr16
outsl
incb
int
mov
add
pop
lahf
adc
or
ds
sub
mov
dec
out
out
loope
pop
das
lock
adc
in
jp
inc
jbe
ret
fisubrs
gs
cmpb
lea
push
push
add
loopne
dec
int
ret
repz
in
pop
icebp
and
push
inc
adc
sbb
pop
ds
xchg
push
aad
mov
movsl
fstps
cmp
mov
ret
ljmp
movsl
jnp
mov
popa
sti
fistpll
popf
rorl
sbb
insl
imul
int3
pop
mov
mov
mov
out
ret
inc
sarb
iret
cli
dec
lret
clc
push
stos
xchg
lds
into
pop
push
fisttps
fisubrl
jge
dec
shl
push
push
cmp
push
test
xchg
push
jno
or
lea
jae
test
insl
push
mov
xchg
andl
xchg
add
mov
pop
pop
aas
dec
andl
push
adcb
mov
adc
flds
push
inc
mov
mov
imul
lcall
and
xchg
jmp
mov
cmp
jl
fbld
sbb
loop
cmp
push
jmp
push
aas
push
lahf
xchg
push
jl
cmpsl
aaa
inc
dec
and
cltd
clc
ss
test
mov
xor
aaa
bound
lret
jo,pn
sbb
fistpl
sub
xchg
ret
gs
cmpsl
adc
cli
cmpsb
xor
sbb
movsb
pop
xchg
imul
leave
cmp
sbb
mov
lret
mov
push
jmp
je
jnp
repnz
and
pop
lret
imull
xchg
ja
in
xchg
test
jecxz
out
and
lock
mov
stos
pop
sub
add
mov
inc
out
idivl
nop
outsl
mov
push
fiaddl
cmpsl
sub
mov
or
xor
jae
pusha
cmc
add
hlt
push
sub
mov
mov
sbb
mov
push
mov
mov
cmpsb
clc
xchg
jnp
out
push
stos
add
rcrb
dec
dec
fildll
mov
call
out
add
adc
cmc
dec
fimuls
div
in
stos
lock
or
add
inc
adc
inc
mov
ja
push
int3
call
or
jne
divb
lahf
fsub
out
mov
popa
mov
sbb
add
dec
pop
jl
pusha
gs
test
out
pop
push
mov
fistl
push
rorl
push
movsl
stos
mov
loop
lret
push
and
cmpsl
imul
std
sub
xlat
test
or
jb
cmp
xchg
in
call
loope
iret
aaa
push
dec
sub
in
push
subb
sbb
push
aas
cmp
lods
xchg
add
jmp
lds
fs
xor
xor
jle
sahf
xor
pop
rorb
aad
dec
jecxz
jmp
push
cmc
jns
andl
insl
lods
pusha
pop
sti
jp
inc
mov
sti
dec
and
inc
xchg
sub
test
fadds
add
lcall
cmc
xor
hlt
shr
testl
mov
push
into
inc
pop
fmull
jecxz
fmul
sub
lds
daa
inc
xchg
insb
sbb
rcr
dec
mov
nop
sbb
dec
mov
pushf
cltd
orb
and
jecxz
mov
sub
or
roll
cs
jecxz
ret
mov
call
test
jp
cmpsl
mov
fadd
pop
ret
cmp
mov
push
sub
out
jae
or
decl
mov
fbstp
inc
rcll
pop
mov
rcrl
mov
out
jmp
jo
das
int3
inc
js
fnstsw
addr16
stos
loop
sti
insb
add
test
lods
adc
cwtl
data16
cmpsl
mov
pop
pusha
jge
std
insl
in
fildl
push
pop
jp
mov
pop
inc
sbb
jnp
mov
push
imulb
inc
or
popa
outsb
cld
mov
nop
xor
popa
xor
setl
or
jnp
cmpsb
sbb
incb
xor
cmp
sahf
jp
lret
lock
scas
sub
inc
pusha
adc
mov
addr16
push
sahf
mov
push
in
leave
add
xor
int3
iret
add
cmp
add
jecxz
mov
shlb
cmp
fstl
int3
xor
fidivrl
xor
cmp
int3
mov
movsb
mov
subb
mov
adc
cmp
mov
cltd
pop
shll
out
stc
fstpl
lcall
lret
inc
add
sbb
mov
pop
sub
shl
fidivl
not
jl
jnp
lods
mov
sbb
jne
and
mov
and
push
dec
shll
inc
pop
faddl
jecxz
ficomps
push
call
pop
add
xchg
inc
loope
shrb
ljmp
push
in
call
test
adc
imul
fstp
jmp
insb
xlat
nop
outsl
inc
loop
mov
ds
lods
sbb
scas
pop
jb
lea
loop
loopne
cmc
repz
sti
mov
push
fsubrs
jno
cmpb
int
shlb
sbb
ja
insb
cmp
ret
sbb
cmp
mov
dec
hlt
push
imul
repz
in
enter
jb
lret
int
push
mulb
cmp
iret
sarb
cmpsl
sti
shr
xor
inc
add
xchg
push
popf
and
popa
pop
jae
jbe
dec
shrb
fildl
cmpsl
fisttps
mov
pop
and
or
adc
mov
ds
cmp
in
clc
jp
dec
sub
scas
test
gs
mov
cmpsb
adc
cmp
int3
pusha
mov
movsb
adc
repz
jecxz
mov
lcall
scas
jnp
xchg
lods
inc
mov
lds
dec
dec
add
lods
scas
arpl
or
adc
test
lock
pop
jecxz
cmc
fldt
int
in
test
inc
insl
scas
add
in
xor
or
in
call
shlb
mov
popf
setge
push
icebp
lcall
cmc
out
push
adc
mov
jae
jb
jo
sub
stos
inc
scas
pop
mov
addb
shl
or
addr16
lds
sbb
mov
xlat
test
cmp
mov
adc
cmc
test
cmp
push
das
jo
pop
enter
in
mov
scas
test
or
rclb
pop
jg
xchg
cmp
and
jmp
xchg
nop
mov
jl
cmpsl
pusha
sbb
ror
sbb
clc
jb
pop
pop
mov
cmp
and
inc
and
xor
and
shll
push
dec
call
lret
popw
inc
sbb
cld
cld
jl
and
cli
enter
fs
mov
add
adc
lcall
loop
adc
dec
fadds
popf
jg
lock
out
adc
push
inc
xchg
xor
imul
xchg
push
mov
int
mov
push
ret
push
and
cld
xorb
cmp
sub
jbe
lcall
cmp
sub
mov
fnstcw
xchg
pop
lods
cli
scas
das
into
xor
outsb
inc
mov
mov
ja
pusha
mov
xor
lret
int3
mov
scas
cmp
xor
adc
or
jnp
loope
and
icebp
stos
in
nop
pop
ja
jo
inc
xchg
xchg
cmp
daa
or
outsl
sub
push
lea
out
scas
ret
adc
test
fdivs
sbb
push
stc
adc
idiv
int
ljmp
or
je
xor
jle
pop
mov
xchg
inc
and
dec
pop
hlt
dec
jle
subb
and
shr
lahf
lock
and
jecxz
loop
dec
jge
sti
in
cwtl
cmp
push
ja
scas
jno
jecxz
jne
xor
or
das
negb
or
sbb
and
aaa
pop
shlb
xorb
leave
int3
jne
adc
cli
hlt
or
push
push
jge
sub
in
hlt
or
xlat
add
aaa
jae
cmpsb
mov
xchg
xchg
xchg
movsl
dec
sbb
es
sub
xor
add
shr
imul
xchg
cmc
mov
shlb
mov
jbe
xchg
in
aaa
pop
lds
pop
and
in
cmp
add
lret
xchg
mov
cmp
xor
std
push
dec
dec
xchg
or
mov
les
sub
test
ss
push
mov
xchg
jmp
decl
mov
mov
jae
shlb
mov
div
repz
push
ret
lret
faddl
jecxz
cmp
or
in
lods
pop
lret
xor
or
push
sbb
lahf
daa
push
add
mov
and
pop
loop
fmulp
add
fs
dec
insl
xorb
push
in
adc
in
mov
mov
push
mov
sub
jecxz
cmp
cmp
fs
sbb
imul
inc
add
movsb
pop
xchg
inc
pop
mov
push
ret
and
jnp
mov
cmp
daa
mov
cmp
std
call
sbb
fs
in
or
cmp
adc
popf
loop
test
pop
sub
fldt
in
mov
aam
xor
sub
xor
lock
or
mov
aad
inc
test
pop
frstor
sbb
or
xor
mov
in
jb
mov
pushf
mov
mov
mov
stc
ljmp
and
aaa
out
pop
xchg
pop
lods
nop
insl
mov
inc
sarl
sub
aaa
icebp
loop
adc
mov
aaa
ror
movb
aad
mov
in
les
cmp
mov
lock
out
jbe
dec
cmp
mov
and
adc
stc
jnp
sub
cltd
iret
jbe
jo
call
dec
cmp
inc
cmp
mov
in
mov
mov
xor
push
sub
and
ja
sbb
daa
mov
xchg
cmc
xchg
inc
mov
mov
inc
shlb
lods
popf
idiv
test
outsb
jno
stc
lods
je
fcom
jbe
out
inc
movsb
pop
repnz
js
cmp
jae
inc
test
cs
out
sahf
in
push
mov
ljmp
pop
lea
std
nop
lret
notb
jg
pop
sbb
mov
mov
xor
and
mov
rol
sub
sub
adc
pop
insb
adc
fistpl
fnstsw
inc
xchg
gs
xor
pop
push
or
icebp
fadd
cmp
fdivs
mov
jae
hlt
cwtl
lock
inc
mov
fisubrl
jmp
cld
das
xor
lock
mov
test
and
mov
jns
mul
lea
inc
dec
fidivs
mov
in
push
lods
pushf
leave
mov
mov
stos
dec
cmpsl
inc
fs
mov
repnz
mov
ss
xchg
adc
cmp
iret
cwtl
dec
inc
ljmp
insl
sbb
push
fimuls
js
subb
mov
mov
push
cmp
in
adc
push
aas
add
test
jnp
sub
fbstp
icebp
dec
cltd
or
movsb
sti
push
adc
ds
jns
pusha
xor
sub
sbb
js
adc
and
sarl
push
out
xor
sub
or
sti
dec
adc
adc
cmp
and
hlt
test
sub
mov
and
fistpl
and
je
dec
inc
cmpb
mov
mov
pushf
push
lods
adc
faddl
clc
add
xor
outsl
insl
fdivs
xchg
add
cmp
push
mov
lret
add
sbb
andl
add
dec
cmc
scas
push
push
popa
data16
daa
xchg
xchg
push
mov
jno
scas
push
mov
mov
ficomps
dec
lahf
push
repz
push
loop
adc
cmp
adc
nop
pushf
aam
es
nopl
shrb
idivb
sbb
movsl
movsb
js
stc
es
or
pandn
call
sbb
dec
sbb
jae
mov
movsb
dec
jg
jns
pop
aaa
push
add
nop
lods
rcrb
sub
cwtl
out
and
jae
and
add
out
mov
mov
xchg
xchg
or
and
cli
clc
cmc
int3
sub
aad
or
sbb
or
ds
push
in
sbb
mov
imul
data16
push
in
scas
out
jle
dec
cmpsb
add
push
add
gs
push
jge
cld
adc
lods
aad
sahf
mov
xor
imul
jmp
mov
add
test
dec
ljmp
jno
mov
and
stos
cmpl
popa
sbb
adcb
subl
xchg
push
xor
loopne
wbinvd
sbbb
and
jmp
stos
and
mov
sub
xor
inc
lret
daa
push
fcmovb
and
adc
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
sbb
pop
mov
lret
dec
ds
pop
or
je
jne
jb
js
into
jo
dec
fwait
xchg
aas
leave
xorl
mov
inc
jne
lret
mov
out
movsl
lret
dec
mulb
jg
pop
add
mov
lret
mul
cwtl
test
bound
add
push
inc
xor
mov
ret
mov
mov
fldt
sahf
loop
ljmp
repnz
insl
jbe
dec
dec
cltd
dec
mov
cltd
push
pop
jge
mov
stos
arpl
pusha
cmp
cs
jns
movsl
push
inc
xchg
push
and
mov
push
loope
dec
push
aam
mov
cmp
leave
aad
jae
or
lea
dec
push
inc
idiv
xor
jg
insb
cli
push
adc
pop
popa
sub
jbe
adc
lea
scas
dec
sarb
jbe
fisubs
lock
xchg
jnp
mov
idivb
hlt
jg
subb
jecxz
jl
lcall
aam
xchg
rclb
out
lea
clc
leave
adcl
hlt
mov
lds
jo
outsb
lods
test
sti
es
repnz
mov
repz
shrl
lcall
mov
push
xor
ret
out
mov
jp
ds
aas
scas
pop
jb
push
test
inc
or
ljmp
outsl
call
cli
jecxz
repz
mov
cwtl
pop
insl
lret
xchg
mov
rolb
lret
rorl
cmp
mov
sbb
aam
daa
loopne
xor
or
mov
push
leave
sub
add
pop
pushf
xlat
cmp
in
pop
je
xor
fbstp
stc
stos
mov
sub
or
jp
push
sub
loope
repnz
fcom
mov
cmpsb
fadds
scas
push
jg
push
adc
loopne
dec
cmp
idivl
notb
sub
mov
xchg
shll
inc
ret
xchg
mov
stos
add
mov
mov
test
insb
fidivs
js
xor
lea
pop
enter
pushl
in
dec
inc
in
mov
and
lret
mov
dec
pop
and
xor
aas
repz
outsw
push
mov
lock
ljmp
inc
iret
mov
sub
out
arpl
xor
pushf
in
outsb
xchg
dec
loop
sbb
and
xor
xor
add
sub
sbb
xchg
inc
sti
sbb
cld
mov
nop
mov
jnp
sub
or
sbb
pop
or
pushf
outsl
hlt
sbb
int
clc
call
mov
and
pushf
mov
xchg
jl
and
push
insl
mov
mov
mov
mov
mov
repnz
fistpl
gs
cmp
sbb
push
push
pop
inc
xchg
jmp
addr16
mov
mov
loop
adc
mov
scas
fsubl
int
xor
push
in
mov
dec
mov
cli
xorb
jbe
into
mov
mov
pop
sub
fidivrl
sub
xor
cmp
lahf
jnp
test
jno
pop
lds
jle
mov
loopne
lret
dec
pop
inc
popa
jb
inc
sub
lret
fiaddl
or
jp
jb
bound
or
adc
imul
mov
inc
jns
lods
shufps
pop
xor
inc
push
mov
jb
sbb
push
cmp
inc
out
daa
or
pop
add
roll
xchg
imul
pop
fldl
mov
cmp
mov
fs
test
cwtl
sub
out
cmp
ja
inc
in
push
cmpl
cmpsb
ds
cli
sbb
repnz
xor
pop
scas
cwtl
push
xchg
mov
movsl
dec
adc
sub
dec
lret
mov
cmp
cltd
clc
js
iret
push
lds
pop
mov
rcrl
or
xor
fcoml
iret
and
jnp
les
in
scas
lds
lahf
jnp
int
js
inc
jno
lea
mov
gs
mov
leave
jnp
jecxz
push
adc
mov
jmp
pop
dec
mov
pop
jnp
mov
xchg
fdivs
push
out
or
mov
mov
mov
fnstcw
mov
sti
adc
fcmovnu
and
mov
jbe
je
int3
leave
cmpsl
add
imul
mov
cmc
jge
mov
mov
sbb
insl
add
sub
jne
adc
jb
xchg
dec
sbb
mov
call
pop
xchg
outsb
enter
mov
or
jns
cmc
pop
sub
mov
in
jle
mov
xchg
jo
mov
xor
dec
imul
or
dec
cmc
sub
push
lret
adc
xor
inc
mov
stc
jae
sbb
jecxz
imul
jns
dec
pop
es
pop
jmp
xchg
and
loopne
pop
or
fisubrl
xchg
arpl
std
push
push
stos
xor
sub
sahf
fdivl
mov
xchg
mov
rorb
fisubs
andl
push
push
xor
xchg
inc
and
xchg
scas
stos
mov
mov
adc
jb
jnp
fcmovnb
bound
fiadds
ret
test
and
in
rcrl
xchg
ja
mov
clc
adc
test
lahf
popa
imul
std
inc
inc
fildl
mov
mov
dec
dec
cmp
addr16
test
roll
jmp
and
adc
inc
in
pop
mov
fs
pusha
push
jno
jae
add
xchg
lods
xchg
xchg
inc
loope
nop
fs
jmp
sahf
lret
inc
jecxz
sub
aas
ret
sti
adcl
rolb
push
inc
fwait
out
nop
xor
rorl
inc
ss
inc
jge
aas
adc
cli
in
sbb
push
mov
jbe
movsb
lcall
cltd
dec
loop
mov
in
mov
popf
shll
or
out
mov
out
movsl
xchg
sub
cmpsl
add
test
mov
pop
jns
push
insl
lods
cmp
dec
cs
stos
lea
mov
adc
aaa
mov
mov
push
cmpb
movsl
inc
shrl
add
mov
sub
inc
inc
xchg
inc
sbb
add
xchg
imul
dec
push
xor
and
sahf
inc
imul
mov
adc
pop
and
adc
dec
mov
sub
popf
aaa
jl
icebp
mov
sbb
cmpsb
push
inc
mov
inc
fadds
mov
jno
sarl
fsts
test
outsl
icebp
and
pop
pop
sub
inc
rclb
test
fwait
in
std
popf
pop
mov
bound
adc
popf
pusha
in
xchg
xlat
nop
pop
dec
daa
stos
mov
inc
mov
xchg
pop
je
ss
cld
and
aad
insb
pop
inc
lock
xchg
inc
adc
add
cmpsb
in
ja
xor
pushf
ja
cmp
and
lidtl
inc
mov
sbb
stc
movsb
jge
mov
mov
xchg
dec
mov
jge
aam
push
ljmp
in
scas
loop
lods
mov
fwait
mov
movsl
push
mov
clc
and
shl
add
int
mov
push
in
loope
jp
xchg
cmc
push
stc
jae
dec
call
stc
iret
in
jl
insb
mov
out
fdivr
add
je
cmp
ret
sbb
add
mov
pop
xor
inc
loop
xor
fucom
cmp
lock
xchg
sbb
sbb
imulb
xchg
fwait
lods
icebp
pop
mov
into
mov
gs
subb
fisubrl
pop
sub
popa
aam
rclb
push
fidivrl
adc
ljmp
je
movsl
cld
or
outsl
jp
mov
cli
hlt
in
aam
xchg
out
sub
mov
jae
jb
fwait
and
or
loopne
arpl
xor
or
mov
fiadds
test
mov
xchg
mov
jnp
add
lods
xor
mov
stc
ljmp
sti
mov
call
fcomi
mov
rcll
and
mov
or
in
and
imul
sbb
sub
dec
mov
inc
pop
int3
inc
lods
push
push
xchg
cmp
clc
cmp
pop
fisttpl
lods
push
or
ljmp
movsl
ja
es
mov
jbe
stos
and
clc
int
movsb
jle
shll
test
sbb
lods
ficompl
dec
add
aas
rolb
cmc
adc
cmpl
inc
xlat
ds
adc
std
pop
sarb
sbb
rol
aaa
xlat
lea
das
fwait
mov
jns
les
subb
push
ret
dec
pop
movsl
mov
repnz
jns
mov
clc
sub
pusha
iret
jg
or
cmp
jb
sub
lods
jns
nop
xor
add
cmpsb
outsl
dec
gs
pop
mov
push
pushf
xchg
leave
out
push
xorl
add
out
push
xchg
sbb
xchg
cmp
popf
shll
notb
sahf
inc
push
jecxz
clc
subl
mov
jge
and
sbb
ljmp
and
mov
xor
aam
fwait
push
rcr
inc
push
insb
jbe
sbb
inc
nop
std
into
mov
ror
cmp
out
mov
shrb
inc
int
mov
cmpsl
mov
leave
add
clc
std
aad
add
xor
jne
xor
pop
ds
stos
ja
ds
leave
cmp
sbb
fisubs
push
punpckhbw
std
insb
mov
sub
ja
imulb
sbbl
aas
mov
sbb
inc
iret
inc
cmp
int3
fsubs
fwait
insb
icebp
cmpsl
jg
add
dec
outsb
jl
repz
xchg
jg
stos
movsb
sub
and
aas
movsb
cld
adc
ss
lods
or
pop
xor
jne
xchg
jne
inc
cld
call
cs
dec
mov
xlat
xor
jbe
sub
jne
mov
add
lock
push
jle
nop
cmc
adc
inc
add
dec
mov
jp
fdivrs
mov
rol
imul
fisubs
and
xchg
int
imul
xor
ficompl
xlat
jb
pop
sub
ss
in
jg
rclb
ja
and
std
into
lcall
dec
inc
pop
jno
push
pop
adc
icebp
aam
fcompp
aad
lret
pop
loopne
jnp
dec
push
push
xchg
mov
call
mov
xchg
gs
call
pusha
cli
shrl
xor
aas
or
sbbb
cmp
fsubr
mov
jg
adc
sbb
fdivp
sub
mov
ljmp
cli
ja
jge
hlt
aad
test
inc
testb
jbe
stos
mov
sbb
icebp
loopne
sub
inc
imul
mov
cs
cmp
xchg
shrl
mov
jbe
lods
mov
mov
dec
rolb
loop
test
test
dec
mov
imul
pop
lcall
popa
xorb
pop
dec
in
leave
sub
mov
in
dec
and
mov
dec
push
jg
les
lock
fiadds
or
lock
aaa
or
and
inc
sbb
and
stos
lret
shr
repz
push
addr16
jnp
cmpsb
add
test
out
test
add
lock
adc
jae
ja
jle
adc
popf
pop
test
lods
ja
jecxz
inc
cwtl
push
roll
out
cwtl
fs
mov
sub
adc
or
xchg
mov
js
or
popf
xchg
pop
and
outsl
add
push
ljmp
and
fnsave
ss
lods
inc
dec
adc
cmp
mov
adc
mov
stos
xchg
daa
mov
test
push
iret
das
std
inc
xor
inc
inc
dec
mov
insb
leave
jne
in
mov
xchg
xchg
or
cmpsb
pop
imul
xorl
push
test
aaa
jg
sbb
test
adc
loope
mull
xor
add
je
aam
not
outsb
ret
mov
mov
inc
mov
dec
xchg
sbb
insl
sbb
jp
in
incl
mov
dec
sub
pop
or
push
pop
popf
or
and
sub
lock
rcll
dec
out
sub
inc
dec
shll
daa
xchg
pop
mov
mov
fnstcw
pop
sbbl
faddp
rclb
pop
add
jo
push
sar
mov
xchg
notb
inc
pop
sti
or
cld
stc
enter
sahf
test
in
test
jp
sub
out
loope
add
dec
mov
out
add
movsb
int
fildll
jge
fildl
mov
inc
popa
add
in
fwait
clc
insl
adc
das
jno
push
sub
add
test
xchg
mov
cli
and
and
int
xor
in
pop
scas
cmp
xchg
cmp
inc
sarl
sub
aad
sub
into
fnsave
gs
add
pop
out
add
xchg
mov
cltd
or
mov
cltd
jecxz
aaa
aad
xchg
pop
shrl
sbb
cmp
fstps
jg
jb
mov
mov
rcrl
incl
mov
push
arpl
cmpsb
test
jg
lcall
stos
and
outsb
fnsave
cmp
sub
clc
movb
add
push
ds
ds
nop
or
xchg
imul
andl
inc
loope
mov
mov
xlat
cs
jp
test
fcmovnu
pop
xor
dec
fisttpl
adc
hlt
inc
test
cmp
mov
stos
out
dec
sub
dec
xchg
sarl
pushf
jmp
sbb
or
in
je
xchg
inc
sub
lods
bound
out
pop
lret
mov
mov
and
mov
jecxz
pop
xchg
loopne
hlt
test
jb
pusha
jnp
xchg
aad
jbe
push
jb
xchg
fs
mov
pop
cmpsb
xchg
jg
inc
test
in
cmp
xor
xor
aad
fwait
clc
test
add
popa
jmp
xorb
and
shr
dec
cmp
shr
movb
sti
stos
das
and
mov
jp
fstl
mov
subb
ljmp
mov
shll
daa
add
negb
mov
lret
test
fcmovnbe
or
lahf
test
notb
inc
dec
mov
fs
in
ret
arpl
or
push
sbbl
add
jns
call
add
inc
adc
push
inc
inc
or
or
iret
xor
imul
jp
sub
sbb
add
cltd
je
dec
lea
nop
xchg
mov
sahf
add
add
aaa
popa
std
out
xchg
jle
das
push
jmp
imul
pusha
scas
mov
jae
jl
sbb
cld
adc
push
push
pop
or
push
nop
inc
lea
enter
pusha
pop
fcomps
push
fstps
pop
jg
mov
mov
sahf
in
bnd
popf
lret
inc
mov
xchg
test
mov
dec
addr16
lds
cmpsb
loope
dec
mov
repnz
dec
mov
testb
loop
stos
nop
fwait
adc
js
pop
nop
mov
jge
cltd
dec
hlt
sub
sarl
push
popf
push
ljmp
pop
cmp
mov
add
lds
xchg
rcrb
push
push
popa
nop
pop
mov
js
jae
adc
repz
push
mov
out
sub
add
insl
push
lea
mov
inc
aad
sub
negb
int3
andl
lret
es
push
jp
pop
cmp
jbe
ret
ds
sahf
lods
mov
mov
pop
inc
sbb
repnz
or
ficompl
cmpsb
arpl
je
inc
mov
adc
pop
mov
stos
outsb
xchg
fcomps
out
mov
arpl
mov
add
ss
test
out
mov
lahf
mov
inc
in
mov
dec
inc
cmp
jp
lret
dec
pushf
sub
es
mov
testb
ljmp
pop
mov
lea
mov
jb
arpl
xchg
pop
mov
push
sbb
insb
push
mov
fsts
inc
and
or
sbb
jmp
inc
mov
out
or
cmp
jecxz
pushf
lds
arpl
stc
out
jge
cmpsb
add
mov
jmp
es
mov
fwait
clc
mov
push
outsl
call
jo
jl
sbb
lock
fs
inc
push
and
push
outsl
sbb
aas
fwait
or
and
stos
fsts
fidivrl
push
adc
push
imul
fnstenv
ret
inc
inc
daa
aas
jne
xor
mov
pusha
adc
mov
addb
and
mov
repnz
out
das
cmpl
frstor
and
lock
orb
fcomps
push
jecxz
sub
mov
outsl
or
in
jb
scas
jge
push
inc
pushw
push
pop
inc
aam
roll
hlt
fcomps
mov
shll
test
sbb
pop
in
test
push
mov
or
sbbb
out
push
adc
mov
fisttps
or
cmc
pop
out
push
adc
jo
push
outsl
xchg
icebp
xchg
je
repnz
pushf
hlt
inc
sti
jno
aam
xor
jp
icebp
mov
out
xchg
mov
sbb
scas
xlat
inc
repz
ss
js
ds
and
je
cmpsl
out
ret
lock
xchg
cmp
sub
jge
mov
push
int3
test
cmp
int
loope
pop
fwait
lret
mulb
lret
cmp
jl
stc
push
and
jne
adc
push
in
cltd
test
cltd
fnstsw
daa
fcom
dec
xchg
popf
mov
inc
pop
or
xor
mov
insb
rolb
adc
xchg
push
xchg
test
jbe
mov
mov
cmp
push
repnz
fistps
fisttpll
ss
imul
push
cld
jnp
pop
mov
mov
loope
jecxz
les
or
lods
dec
pop
insl
sbbb
adc
mov
insb
jns
adc
jmp
cmp
cmc
loope
arpl
mov
fs
jne
daa
adc
and
push
rorb
ss
mov
test
mov
xchg
mov
mov
in
jmp
add
lret
mov
loop
xor
add
clc
insb
push
xor
push
pusha
jle
add
fnstcw
je
pop
fwait
lods
lods
or
xor
adc
and
loopne
mov
ds
enter
inc
ret
clc
pop
or
or
push
fsubrp
xlat
and
inc
or
or
mov
jb
cmp
ss
outsl
dec
sub
mov
mov
jne
aas
into
fildl
lock
mov
scas
jae
subl
mov
dec
mov
pop
leave
imull
and
int3
xor
xor
cmp
lods
shl
xor
jmp
lds
xlat
cmp
lcall
stc
jno
ffreep
inc
sbb
mov
push
sub
mov
in
dec
fstps
outsl
adc
jbe
pop
insl
sbb
or
jge
sub
push
mov
xchg
das
mov
cmp
popf
mov
out
into
inc
and
lds
leave
mov
gs
xor
xchg
push
fbstp
jnp
rolb
imul
mov
add
push
or
xor
shll
mov
faddp
xor
pop
inc
sub
xchg
les
push
and
sbb
ret
and
fcmovb
and
arpl
shlb
xchg
dec
lock
rclb
ljmp
cli
pop
popf
mov
inc
and
xor
cltd
pop
addr16
mov
xor
mov
pop
jb
xchg
ret
popf
and
sbb
daa
mov
stos
nop
jne
xchg
inc
in
cmp
sub
sbb
push
jp
hlt
jp
ljmp
or
stos
pop
js
mov
add
jo
xchg
lods
int3
imul
test
xor
or
lock
pushf
inc
push
leave
jp
push
clc
push
dec
adc
stc
push
ret
mov
mov
fcmovnb
jmp
mov
shl
mov
scas
sub
lds
js
scas
ds
cld
movsb
pop
into
dec
rcrb
cmc
arpl
cmp
ret
popa
jbe
jbe
cmpsl
push
adc
adc
push
hlt
cmpsb
fistl
jl
aam
cmp
jmp
loop
es
inc
mov
ds
mov
push
mov
outsl
loopne
movsb
push
inc
cs
adc
in
pslld
js
insl
sub
int3
mov
mov
cmpsl
dec
lcall
cmc
aam
pop
aad
les
cmp
sub
cli
int3
xor
std
push
rorl
es
and
mov
out
mov
sahf
pop
mov
aam
fistps
pop
mov
les
in
stos
scas
mov
push
repz
in
jns
cmp
nop
dec
mov
xor
test
cwtl
insb
mov
test
xor
push
movsb
mov
pop
cmc
fcos
sbb
or
shll
sbb
hlt
ss
test
test
and
push
and
xchg
das
mov
mov
mov
and
movl
cli
stos
or
scas
roll
pop
xchg
or
movsb
mov
daa
shlb
or
clc
movsl
push
sub
mov
mov
xchg
push
jae
cli
pop
mov
popf
adc
pop
iret
loop
lret
movsl
insb
dec
scas
adc
sbb
inc
dec
negb
lahf
sarl
loop
movsl
mov
int3
pop
out
sahf
gs
cli
je
or
pushf
test
leave
stc
popa
mov
outsl
sub
xchg
fisttpl
test
jno
xchg
jg
aaa
pop
lods
orb
mov
push
dec
into
into
sbb
stos
push
inc
push
ret
push
cmp
insl
mov
test
jne
lds
sub
mov
cmp
push
ljmp
sub
into
mov
dec
jne
mov
lea
adc
hlt
movsb
insl
inc
fmul
idiv
enter
fdivrs
fnsave
es
enter
xchg
cmpsl
dec
lea
repnz
popf
out
mov
mov
jne
test
sub
ret
dec
add
hlt
inc
xchg
sub
out
xchg
jo
and
subl
dec
mov
sti
das
inc
jl
loop
fiaddl
xor
mov
inc
stc
lds
sti
dec
sarl
ret
clc
dec
cmp
xchg
std
fstl
stc
pushf
out
xor
inc
xchg
movsb
cmp
cld
adc
insb
lds
int3
push
ret
mov
mov
int3
pop
mov
pop
sub
cwtl
jnp
xchg
jne
push
clc
mov
and
push
cmp
addr16
mov
fsubs
insb
and
out
pop
lods
jge
mov
xor
add
das
in
jae
xchg
mov
mov
aam
mov
sti
sub
and
cmp
insb
stc
call
add
jg
mov
cmc
test
jo
mov
inc
xchg
cmp
mov
enter
popa
dec
call
mov
dec
stos
divb
lods
std
jbe
enter
out
xlat
rcll
mov
add
and
test
icebp
cvtdq2ps
loope
fwait
loop
sbb
jno
jmp
sbb
data16
jnp
jne
adc
pop
mov
adc
push
mov
out
divl
repnz
sub
mov
iret
mov
sub
scas
mov
loopne
mov
bound
xor
jbe
ss
lret
push
xchg
sub
dec
jle
and
lods
mov
mov
test
cwtl
xor
icebp
lret
jge
sbb
fcoms
sub
pop
sti
pop
imul
arpl
mov
dec
mov
mov
lods
addr16
imul
lods
arpl
aad
cmp
ja
mov
loopne
xor
xor
mov
sbbl
lahf
fsubl
dec
popf
inc
ret
xor
pop
cmpsl
pop
mov
cmpl
notl
dec
sub
sbb
shl
mov
xorb
lret
int
pop
cmpsl
jnp
out
mov
insb
data16
out
std
and
std
jmp
sbb
sub
pop
mov
mov
adc
push
dec
dec
stos
cmp
lret
fimull
sbb
sahf
jae
push
and
std
jo
or
or
or
adc
xor
xchg
dec
std
pushf
pop
xchg
fisubs
jno
int
xor
mov
rolb
daa
out
sub
ljmp
sub
stos
addb
loop
pushw
cmp
addb
iret
repz
mov
in
dec
in
mov
shlb
cmp
js
mov
aas
inc
loop
cmpsb
sbb
mov
jb
cmc
cltd
ficoms
push
add
inc
push
loope
aaa
jg
insb
xchg
sbb
sahf
cmp
push
mov
sbbb
fdivs
ja
lock
notl
inc
adc
add
cmpsb
mov
push
into
ret
dec
jle
and
mov
lods
mov
hlt
cmpsb
cmp
mov
sub
outsb
ss
or
dec
nop
pop
mov
jle
jo
or
push
jecxz
add
fsubrl
out
jge
pop
je
jno
rorb
inc
adc
ljmp
rorl
outsb
loopne
or
cmp
jae
aas
bound
xchg
out
and
fsts
and
and
jp
jbe
pop
and
ret
clc
inc
iret
or
mov
adc
sub
xor
xchg
mov
adc
and
sbb
es
mov
mov
inc
dec
pop
or
rcl
adc
fldcw
jno
imul
call
cmp
xor
sbb
jmp
jae
enter
xchg
push
bound
cmpsb
lods
xor
dec
mov
ss
mov
enter
ljmp
ljmp
movsb
rorl
imulb
mulb
inc
pop
pop
dec
hlt
lock
mov
lret
inc
fwait
cmpsl
mov
dec
fldt
andl
mov
adc
or
mov
out
cwtl
mov
inc
int3
jne
pop
push
lret
rcr
jmp
sub
repz
xor
push
and
pop
xor
add
add
inc
out
sbb
mov
jae
test
xorl
ljmp
push
jmp
ret
subb
repz
fstpt
fdivl
fidivs
jae
push
outsb
mov
lret
jnp
add
sahf
idivl
sub
xor
sahf
je
lea
adc
nop
mov
inc
and
cmp
adc
sub
inc
cli
mov
fistl
or
in
int
xchg
pop
hlt
popf
and
mov
cmp
mov
jl
fs
xor
push
or
cmp
stc
mov
inc
cmpl
js
scas
test
add
das
sub
add
sahf
fs
pop
add
or
popf
sub
outsb
push
jp
cmp
call
mov
inc
dec
ficoms
test
ss
andl
cmp
loope
cli
inc
lea
xchg
sahf
data16
filds
fwait
aas
popa
mov
loop
decl
mov
xlat
call
adc
or
inc
dec
aad
mov
fs
sub
lret
lea
pop
xchg
movsb
ret
dec
jge
adc
dec
lcall
and
clc
cmp
inc
scas
std
xchg
or
test
xor
arpl
mov
stos
push
inc
aaa
xchg
mov
notl
jnp
andl
cld
das
add
xchg
mov
test
subl
xchg
mov
movsb
stc
xlat
scas
add
mov
out
arpl
ja
inc
push
mov
leave
cmp
xor
mov
fs
in
xchg
and
out
inc
ret
and
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
pushf
push
mov
or
sub
push
push
dec
and
out
divl
and
adc
pop
mov
fiaddl
xchg
xchg
bswap
xor
loope
shl
inc
mov
or
addl
loopne
xor
mov
dec
aad
mov
aas
pop
inc
xchg
scas
out
mov
fidivl
lock
cmpb
nop
cmc
ret
das
int3
push
loop
divl
xchg
orb
in
fdiv
pop
sub
shl
mov
test
mov
push
mov
cmpsl
xchg
lds
mov
loope
lods
mov
cld
add
cltd
cmpsl
test
mov
lcall
sub
popf
sub
push
out
js
cmp
cli
mov
sbb
inc
cli
in
and
stos
mov
out
sub
das
sti
popa
arpl
shll
sbb
mov
sbb
xchg
test
dec
andl
repnz
fdivrl
stos
ja
mov
les
push
jnp
je
popa
adc
and
and
outsb
out
sub
bound
mov
ret
loope
jo
insb
jb
pop
nop
pop
imul
add
jb
stos
repnz
jns
call
sub
adc
cs
push
cmp
xor
mov
ja
push
repnz
cmpsl
in
jb
test
push
push
aas
test
xor
sub
adc
lcall
push
loope
arpl
insl
aam
idivl
adc
out
dec
pop
sbb
mov
loope
sarb
pop
cld
mov
cltd
push
aam
push
inc
fstpl
sub
mov
mov
out
push
shll
xchg
pop
inc
pop
xchg
mov
jae
pop
addl
icebp
imul
dec
mov
loop
movsb
mov
xor
data16
inc
xchg
clc
popf
fmull
test
inc
inc
inc
jbe
stos
lods
mov
inc
lods
add
xchg
mov
shrb
jg
rorb
adcb
jne
inc
outsl
mov
or
loopne
or
aas
lcall
pop
cltd
pop
xor
jo
scas
sbb
xchg
out
out
mov
xor
or
fstl
pop
cmp
ret
sahf
mov
out
inc
and
push
insl
mov
fcmove
mov
cmpsl
jl
je
pop
push
dec
push
inc
pop
and
call
aam
mov
mov
or
enter
add
cmpsl
js
imul
mov
mov
mov
xchg
and
cwtl
xchg
out
push
cvtps2pi
jecxz
sub
movsl
inc
xchg
cmp
inc
add
movsb
jae
xor
fmuls
lds
push
cld
aas
and
or
push
push
fmull
ret
leave
sub
and
jecxz
push
xchg
aam
iret
pop
clc
mov
ss
in
push
mov
subl
push
sbb
add
jo
dec
adc
lahf
sub
xor
cmpsb
data16
daa
dec
sub
icebp
std
out
xchg
pop
pop
das
cmp
icebp
push
push
inc
xor
inc
pop
ja
fs
imul
ret
sbb
sbb
and
add
sbb
mov
xor
cmp
jnp
shrb
imul
xchg
push
repnz
inc
loop
lret
gs
inc
inc
xchg
dec
fdivl
or
popf
jmp
mov
mov
dec
mov
mov
addr16
fiaddl
jl
sub
pop
roll
mov
lods
sbb
out
xor
fisubrs
es
cmp
ret
xchg
xor
jae
int
andw
lcall
push
xchg
popa
scas
dec
aam
push
sbb
push
pusha
mov
inc
xor
pop
inc
and
pop
lods
sbb
jle
mov
shr
rclb
xlat
gs
push
mov
fndisi(8087
push
ds
push
test
scas
mov
sbb
loopne
aaa
fidivs
push
xor
js
je
pop
in
adc
shll
xor
or
call
xchg
scas
xchg
inc
jnp
mov
clc
and
jae
mov
add
push
loope
movsb
jecxz
movsb
or
test
or
mov
test
sarb
shrb
sub
push
pusha
icebp
adc
fwait
aam
pop
mov
push
sub
mov
mov
push
shll
push
cmpsb
inc
fidivrl
in
cwtl
jbe
cmc
xor
mov
pop
aam
int
fwait
notb
xor
dec
pop
mov
cmp
or
xchg
pop
adc
aaa
mov
jns
out
inc
adc
pusha
xlat
jp
sbb
mov
dec
pop
mov
xchg
xchg
addb
dec
fistps
and
rorl
stos
icebp
lock
mov
arpl
sub
icebp
sub
jnp
popf
popf
popa
push
sub
fists
sbb
lock
inc
push
mov
out
mov
lock
imul
mov
xchg
stos
cmp
stos
jno
mov
popf
xchg
jmp
mov
jmp
push
lret
dec
clc
sarb
or
repnz
cmc
lea
lahf
addr16
loopne
stos
adc
movsb
fiaddl
sub
pop
sbb
xchg
or
lds
xor
xlat
sbb
mov
and
jle
bound
mov
mov
add
fs
mov
cmpsb
enter
insl
cld
rclb
sub
inc
inc
mov
inc
stos
jp
jmp
je
pushf
loope
aam
cmp
fwait
in
xlat
pop
int3
aaa
inc
xor
mov
insl
push
jno
decb
nop
int3
mov
adc
push
not
sbb
mov
nop
pushf
pop
leave
mov
adc
fisubs
push
testl
outsl
in
cmp
sbb
ss
xor
push
repnz
push
ss
pop
mov
lcall
jecxz
pop
or
cmp
push
push
hlt
shll
mov
pop
cltd
sbb
xor
loopne
cltd
int3
sub
mov
outsl
movsb
testl
pop
icebp
pop
repnz
sbb
push
dec
or
xchg
dec
pusha
imul
mov
std
jecxz
xchg
xlat
pusha
icebp
inc
pop
cmpsl
aaa
add
jp
ss
test
adcb
mov
mov
push
cld
leave
shlb
icebp
xor
sbb
ret
int3
fldt
ftst
rorb
inc
pop
add
shll
sbb
sub
pop
jmp
or
mov
in
aaa
xchg
test
jns
cmp
push
test
adc
sti
in
int3
icebp
dec
mov
jns
fdivrl
les
ficoms
repz
into
or
divb
mov
loop
repz
out
dec
loope
jb
xor
add
es
push
jns
pop
scas
inc
decl
fbld
mov
mov
aam
fs
fwait
push
loop
into
xchg
pusha
push
cltd
mov
mov
sbb
scas
fcompl
notb
dec
out
add
push
insb
mov
xchg
dec
shr
dec
lea
xor
cld
in
pusha
repz
xchg
fwait
test
movlps
xor
xchg
test
xchg
and
lods
divl
sbb
stos
jae
imul
shrl
hlt
insl
imulb
les
scas
xchg
push
dec
jg
fisubrs
sub
jle
ret
decl
dec
or
add
sbb
sahf
enter
popf
aam
pop
sub
cmpsl
add
jnp
xor
mov
loope
fisubl
fldt
in
jge
out
dec
outsl
xchg
jmp
sbb
and
or
adcl
cmp
mov
dec
add
imulb
repz
jne
sbb
inc
cmp
loope
jno,pt
sbb
xchg
or
mov
push
mov
jmp
push
mov
je
adc
outsl
daa
popa
push
bound
cmp
addr16
dec
shl
test
dec
fisubs
fsubl
add
mov
cld
adc
sub
xchg
in
push
push
loop
mov
movsb
jge
mov
ja
icebp
push
ja
movsb
inc
push
mov
stos
add
pop
fisubs
cmpsb
push
fwait
enter
dec
aaa
cmpsl
repz
jbe
test
mov
push
lret
sbb
and
lods
jno
insb
mov
ss
and
data16
jae
push
add
lods
lret
add
lock
sub
lea
std
push
enter
cli
outsl
lret
adc
dec
push
stos
jne
sbb
dec
lcall
adc
in
jp
adc
inc
pusha
dec
inc
xchg
xchg
mov
sbb
lcall
aam
lods
xchg
mov
out
in
sbb
je
dec
cld
mov
push
cmp
pop
pop
hlt
out
add
loope
push
cli
roll
adcl
xor
push
in
cli
inc
sub
push
int
addr16
push
xchg
fsub
scas
arpl
inc
jecxz
or
pop
fldcw
or
movsb
cli
and
jb
pusha
mov
dec
mov
xlat
or
dec
lahf
and
add
cmpsl
push
mov
ljmp
outsb
sbb
jns
test
jge
mov
sub
mov
insl
jp
mov
cli
enter
sbb
repz
cmp
adc
cmpsl
outsl
ljmp
fsubrs
pusha
fcoml
add
xchg
test
aad
icebp
repz
sbb
lret
daa
sbb
and
mov
adc
aam
xor
mov
sahf
mov
fs
push
add
scas
jo
lahf
mov
lea
sub
jecxz
cmp
push
mov
shll
movsb
ja
mov
xor
jno
ljmp
add
stos
inc
cmp
stos
cs
hlt
xchg
mov
nop
add
test
js
insl
mov
daa
cld
scas
test
pop
mull
mov
mov
add
ss
stc
mov
xchg
sub
jmp
add
push
psrlw
aam
mov
ret
sbb
xchg
push
push
dec
das
imul
dec
mov
into
xor
cli
scas
fmul
xlat
sbb
sub
and
loopne
mov
rorb
cmpsl
push
jge
and
mov
fcompl
inc
mov
mov
clc
jge
xlat
loop
addr16
add
pop
mov
das
insb
sti
inc
pop
cmp
pop
and
mov
bound
repz
vfixupimmsd
repz
outsb
jae
adc
es
test
or
sbb
aam
xchg
cmp
jno
mov
test
xchg
sub
stos
out
xchg
daa
add
mov
dec
popf
mull
or
xor
cltd
pop
movsl
push
daa
pop
add
dec
call
jmp
loope
inc
lods
xlat
xor
repz
mov
mov
jbe
push
xchg
int
mov
dec
mov
pop
dec
pop
ja
addb
stos
xchg
outsb
ja
sub
sbb
jmp
jo
mov
lahf
pop
or
pop
xor
cmp
negl
cmp
insb
fstps
lock
add
and
pop
pop
je
add
cmp
pop
pop
push
pop
mov
cmp
pop
in
sbb
add
aam
cmp
jne
push
sub
stos
sub
imull
f2xm1
xor
mov
in
jg
or
les
pop
sbb
pop
sbb
cmp
push
jno
fistpl
sbb
mov
test
lahf
outsl
xchg
sets
xor
les
sbb
icebp
pop
mov
lcall
stc
das
mov
aas
inc
mov
pop
jno
xorl
jno
inc
inc
cmp
mov
cmp
xor
hlt
mov
add
push
scas
cltd
pop
insl
out
mov
data16
mov
gs
mov
jo
popf
in
mov
ds
rcl
call
insb
inc
pop
lret
jns
pop
cmpsb
xchg
jl
inc
push
cmp
aad
jbe
xchg
adc
lds
mov
cli
pop
popf
orl
dec
and
push
push
test
cmp
repz
mov
xchg
insb
mov
push
cli
jp
sub
push
mov
push
test
mov
cmc
pusha
popa
dec
aas
test
or
aaa
popf
out
pusha
xor
mov
cld
jb
aaa
mov
jle
cmpsb
inc
outsl
inc
mov
leave
notl
jns
mov
dec
shrl
pop
orb
sub
enter
cmp
addr16
dec
add
popf
scas
jp
lcall
das
fisubrs
xchg
aaa
lahf
fcoml
sahf
inc
fstl
addl
mov
sbb
sahf
pop
dec
dec
mov
out
pop
dec
mov
in
jne
popa
sbb
rol
in
lret
imul
sti
orl
loope
sbb
add
int3
imul
lods
jle
mov
mov
lahf
inc
sbb
or
lock
rol
lock
push
and
in
adc
sbb
push
lods
andl
pop
mov
inc
inc
sbb
lds
scas
cld
enter
scas
cltd
movsb
ds
mov
jns
dec
add
cld
repz
add
pusha
mov
push
mov
pop
xchg
pop
jo
fs
lds
nop
std
pushf
into
loopne
or
in
sub
imul
aad
and
mov
adc
lods
scas
pushl
mov
idivl
mov
push
adc
rolb
sbb
mov
icebp
mov
insl
adcl
pop
jb
and
test
mov
imul
lea
mov
fwait
push
pop
dec
pop
adcl
test
adc
popf
out
aam
inc
shll
sbb
cmp
jo
xchg
mov
inc
fnstenv
scas
popf
and
fs
fwait
jne
xchg
adc
push
or
mov
out
jae
movlps
cs
push
insl
shlb
fists
sti
lret
adc
sti
scas
xchg
icebp
sbb
popa
and
xor
insb
lcall
inc
cmc
std
mov
repz
es
das
mov
int3
loop
pop
mov
outsl
fstpl
out
mov
loopw
push
jns
stc
ds
or
push
lds
aad
pop
ffree
mov
lock
pop
or
mov
mov
inc
adc
cli
push
pushf
add
rcrl
addr16
add
jp
mov
sbb
sahf
aam
inc
xchg
lret
push
movsl
and
fs
mov
aaa
lea
out
mov
sub
fidivl
lret
mov
or
int3
adc
loop
flds
mov
and
pop
dec
lds
xchg
fidivrs
notl
adc
cli
imul
js
cltd
adc
xlat
out
ja
icebp
pop
fstpl
pop
xchg
cmp
jo
inc
jge
pop
ret
insb
lds
nop
aas
jnp
add
cwtl
xchg
outsb
mov
js
mov
xor
dec
inc
inc
adc
out
pop
inc
sarb
mov
out
mov
inc
sub
mov
mov
jmp
dec
adc
pop
loope
xlat
sbb
lods
pop
mov
and
lods
dec
xor
imul
fimuls
jle
xor
push
sbb
test
aam
jecxz
movsb
fldcw
cwtl
shll
gs
fnstenv
testb
dec
imulb
enter
and
fists
int3
ja
fiadds
jmp
ljmp
push
or
xor
sbb
cmp
pop
push
lods
das
es
data16
movsl
mov
add
mov
or
sbb
sbb
cld
sar
in
loopne
repz
and
fsubs
pop
pop
cmp
xchg
xor
pop
nop
xor
repnz
inc
fldl
test
test
adc
push
dec
add
scas
cwtl
or
jbe
mov
push
xor
mov
int
or
test
in
pop
ds
sub
jle
dec
iret
shlb
sarb
adc
mov
cwtl
adc
mov
dec
jge
dec
jp
sbb
mov
mov
add
push
pop
pop
jbe
cmp
js
fsub
daa
jmp
adc
sarl
repz
hlt
cld
test
dec
jno
jnp
in
js
ds
lcall
fbld
jle
mov
sub
or
sbb
push
xchg
stos
jo
outsl
hlt
xor
or
and
mov
jle
addr16
clc
mov
mov
push
leave
in
mov
push
xchg
or
shl
stos
bound
ja
mov
push
add
push
in
jmp
dec
cmc
loope
cmp
ds
test
xchg
mov
pop
repnz
scas
mov
ja
cmp
and
cmc
repz
mov
daa
lods
ret
faddl
sti
data16
cmpsb
or
hlt
push
fisubrl
or
movsb
ds
jg
lcall
sub
imul
ds
testb
bound
push
dec
mov
repz
pop
aaa
idivl
xor
dec
aad
fisubrs
inc
adc
mov
cmp
mov
cs
push
cwtl
fxsave
lcall
popf
aam
push
aaa
or
push
xor
and
bound
mov
fcomps
add
push
fwait
jns
rorl
inc
push
vsqrtps
sub
push
std
movsb
movsb
and
xchg
xor
pop
cmp
mov
lock
mov
loop
xchg
sub
mov
test
cld
sbb
lcall
enter
lods
push
and
push
adc
sub
leave
push
pop
test
push
test
ret
mov
lahf
fistps
add
jo
cmp
andb
pop
sahf
mov
into
adc
pushf
sbb
jp
int
xor
enter
sub
fs
dec
mov
aam
testl
xor
dec
jns
aam
mov
fdivrs
sub
repz
push
xchg
rcrl
jo
data16
in
pop
inc
movsl
stc
out
inc
or
mov
loope
shl
pop
loope
iret
addr16
int3
lods
xor
sub
add
mov
xchg
testb
aad
cmp
mov
dec
pop
lock
sbbl
or
cmp
pop
aas
int
daa
sbb
aaa
inc
cmpsl
pop
sub
jmp
out
inc
fwait
mov
movsl
out
test
sbb
scas
xchg
rclb
or
mov
ret
lcall
fimuls
mov
data16
or
jne
ljmp
mov
add
out
adc
jmp
push
ret
mov
out
jae
add
jle
xlat
push
aaa
jp
ss
jmp
pushf
cmp
lret
mov
mov
cltd
mov
or
or
popf
inc
and
fdiv
imul
nop
pop
mulb
mov
pop
cwtl
and
mov
clc
subb
fstps
rclb
xchg
fwait
stc
ret
cli
das
mov
jg
sbb
dec
cmp
popf
clc
jne
lds
dec
rcl
pusha
push
loope
icebp
inc
repnz
fiadds
mov
cmpsb
cmp
pop
in
test
inc
jg
jg
cmp
add
out
insl
fisubrl
pop
and
nop
pop
lds
jl
lahf
jp
push
xchg
dec
mov
cmp
faddp
rep
scas
jbe
cmp
add
loopne
xchg
mov
mov
shl
cmc
cmpb
adc
enter
lret
fcmovne
cmp
jmp
sarb
jno
ljmp
lock
int3
mov
lcall
frstor
mov
fldenv
jp
cmp
sub
push
fucomi
pop
addl
adc
push
push
pop
fists
loope
movsb
fmul
cmp
add
push
ret
pushf
jbe
imul
cmpsl
scas
and
add
jecxz
out
sahf
mov
adc
jl
push
imul
fwait
bswap
xor
jmp
jae
mov
std
mov
cmpsb
sub
or
jmp
leave
inc
mov
push
xlat
adc
icebp
je
jle
adc
and
shlb
mov
rcr
add
mulb
mulb
out
in
jnp
jl
mov
cmp
aad
ljmp
sub
mov
or
lods
addl
aas
sub
mov
lahf
mov
mov
adc
dec
sbb
and
stc
sub
mov
leave
pop
cmpsl
cmp
mov
insb
inc
xor
dec
inc
mov
test
jnp
addr16
std
dec
mov
xlat
mov
in
fwait
jb
cld
or
add
xor
push
sbb
adc
inc
inc
adc
pop
icebp
es
fsubl
pop
inc
scas
mov
mov
add
inc
nop
sub
shrl
add
mov
pop
push
adcl
addr16
das
cmp
sahf
xor
inc
dec
fs
sahf
mov
xlat
mov
sub
leave
es
adc
repz
and
pop
push
mov
jno
inc
ss
and
jmp
loopne
lods
lea
adc
dec
jne
or
and
cli
push
xlat
xor
neg
in
cmpb
movsl
xor
nop
cmpsb
sbb
pop
xchg
jecxz
into
add
sahf
test
push
sahf
addb
loope
or
fs
push
mov
mov
push
push
push
mov
jns
inc
arpl
xor
jne
jge
and
sub
cmpsb
jecxz
imul
push
jae
and
pop
mov
jo
cmc
add
cwtl
cld
pop
dec
fisubl
iret
sbb
ds
jns
sub
sbb
mov
sub
cmp
ret
cmp
aaa
dec
arpl
pop
icebp
push
pop
testb
lock
pop
bound
fcomip
xchg
das
mov
sbb
test
sub
mov
or
push
pop
das
jmp
sbb
pop
mov
int
std
sub
mov
imul
mov
outsl
or
jle
sub
inc
dec
stos
pop
inc
popa
mov
xor
and
mov
sub
cmc
in
pop
mov
div
pop
aaa
outsb
xchg
lods
mov
int
push
xlat
push
gs
mov
rclb
xor
das
lret
xchg
arpl
fdivl
aaa
les
jo
clc
div
mov
call
mov
std
mov
inc
push
and
push
cmpsl
and
pop
fs
xchg
roll
cmp
pop
ljmp
jns
adc
jl
jp
push
mov
test
scas
inc
lea
sbb
lds
push
inc
push
dec
sub
mov
mov
ret
insb
xchg
mov
mov
mov
lock
inc
push
mov
andl
xchg
adc
in
pushf
leave
cwtl
xor
imul
sahf
mov
aaa
mov
mov
pop
and
arpl
loopne
es
call
shl
sahf
inc
push
stc
cmp
mov
and
pop
pop
lahf
shrl
inc
jg
mov
int3
jb
imul
call
nop
ja
ficoml
mov
in
xchg
std
faddl
popf
out
loopne
inc
ret
jl
aaa
scas
aaa
movsb
sarl
jge
cmp
push
inc
sbb
adc
xor
inc
daa
jno
ret
add
adc
pop
adc
enter
test
add
lock
pusha
sub
aas
popf
push
xchg
mov
mov
leave
pop
mov
aaa
and
aam
aad
pop
mov
out
les
jp
xchg
push
adcb
mov
mov
cmp
push
loope
push
jne
aaa
daa
inc
in
push
adc
xchg
in
std
sbb
push
call
fstps
dec
fidivrl
jae
jnp
cmp
jne
lcall
or
mov
adc
jnp
nop
sub
test
xchg
lds
arpl
and
or
cwtl
sahf
fbld
inc
std
mov
sti
mov
sahf
push
adc
dec
adcb
out
lahf
mov
imul
stos
mov
imul
mov
jbe
ret
xor
popa
sbbb
add
add
adc
jg
jne
dec
and
jae
cmp
push
inc
ror
sbb
sub
rsm
mov
adc
inc
nop
sbb
je
ret
or
fld1
fstpl
outsb
push
jge
pop
xor
cs
scas
je,pt
outsb
or
fidivrl
sbb
cmpb
test
shrb
sbb
pushf
in
dec
dec
int
sahf
jge
pop
shlb
mov
inc
int3
pop
in
dec
movsb
xor
test
lahf
jne
stos
sub
mov
pop
les
or
pop
xor
pop
or
add
loope
hlt
bound
js
aam
ret
fistpl
adc
inc
dec
inc
jecxz
or
jnp
jo
or
out
jns
sti
jp
aaa
sub
out
sbb
leave
test
pusha
inc
xchg
cmp
pop
xor
out
inc
cmp
xchg
pop
or
divb
lds
repnz
notl
sub
or
dec
aaa
fnstsw
jb
xor
lea
cmpsl
call
pop
sub
out
push
inc
cmp
sub
cmp
lds
cltd
pop
je
imul
xchg
sbb
mov
inc
jl
jae
mov
mov
mov
lds
lods
orl
pop
xchg
into
xchg
mov
fcomip
dec
idiv
aaa
dec
into
mov
xchg
xchg
in
outsb
popa
and
test
or
movsl
xchg
sub
jg
test
cmp
inc
push
push
cmpsb
addb
xor
jge
cmp
cmc
push
test
push
loope
aam
cwtl
push
movb
pop
inc
adc
mov
inc
mov
lods
ficomps
enter
xor
cmp
pop
pop
imul
cwtl
lds
outsl
sub
bound
ds
push
mov
jnp
ss
xchg
les
add
xchg
mov
push
shrb
xchg
and
pop
je
scas
inc
repnz
xor
cld
lods
add
popf
adc
in
std
push
flds
jle
xor
insb
cld
sbb
jno
ljmp
popa
jae
mov
loopne
mov
push
test
nop
pop
cmpb
jae
imul
inc
fimuls
std
or
inc
push
mov
ss
cmp
mov
inc
outsb
push
add
xlat
sbb
xor
lods
inc
stc
adc
jl
insl
lock
scas
pop
cmc
add
in
and
shl
les
je
iret
arpl
xor
test
xchg
push
mov
sbb
or
mov
add
out
inc
jne
insl
add
testb
and
in
cli
push
das
jp
and
cld
idiv
sbb
sub
stos
mov
adc
daa
test
or
cmpsb
sub
dec
add
loopne
jb
dec
and
in
push
inc
es
xor
jg
shlb
arpl
outsb
xor
aam
pop
lods
ljmp
add
filds
jmp
inc
push
stc
out
adc
push
mov
mov
mov
pop
pop
ja
sub
inc
aaa
mov
stos
dec
outsl
and
test
rcr
cmp
ljmp
inc
sub
pop
jns
pushf
rcll
or
mov
data16
in
mov
mov
ljmp
inc
fs
cs
mov
lcall
xchg
and
mov
sbb
iret
push
flds
popf
int3
ss
inc
jg
inc
rcrb
mov
push
lret
mov
daa
pushf
sahf
bound
inc
in
out
adc
push
outsl
lods
rcrl
pop
hlt
cwtl
push
mov
je
xchg
push
or
or
gs
dec
xor
in
mov
in
pop
lock
dec
push
ja
testl
pushf
mov
popa
and
not
mov
push
add
xchg
or
aas
sarb
cmp
js
int3
pop
stos
push
hlt
jae
mov
jmp
aas
inc
es
ss
sbb
dec
test
and
ja
fildl
mov
xor
cmpsb
mov
inc
adc
jns
js
outsb
lahf
in
ret
fidivrs
mov
gs
add
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
test
inc
or
xchg
int
push
enter
scas
jg
xor
jg
enter
xor
insb
push
gs
lahf
aas
mov
xchg
outsl
mov
dec
repz
inc
dec
popa
mov
enter
in
or
xor
dec
in
pusha
pop
ja
push
or
cmp
or
cmp
pop
mov
mulb
jecxz
pop
shl
sub
ja
iret
or
inc
or
stos
cmp
addr16
aaa
push
test
insl
push
ljmp
pop
popa
fwait
push
pop
inc
push
adc
mov
mov
fstpt
cmp
mov
ds
repz
mov
int
in
jge
dec
push
dec
cld
in
cmp
scas
mov
jmp
or
out
fdiv
cld
out
sub
inc
mov
dec
push
inc
dec
pop
mov
stc
lret
addr16
mov
lret
arpl
pop
add
inc
sar
jg
pop
or
adc
push
push
movsb
add
testl
dec
xchg
hlt
jg
stc
pop
xchg
ret
leave
ret
out
lods
out
mov
jne
jmp
add
sub
faddl
stc
in
mov
std
in
sbb
mov
add
push
fs
or
ret
test
stc
cmp
scas
mov
fstl
stos
mov
adc
inc
notb
aas
mov
les
push
js
dec
test
mov
loope
inc
sub
jae
mov
xchg
jb
test
in
sub
sbb
test
inc
inc
rorb
push
ss
xor
adc
hlt
aam
add
or
mov
cmp
cmp
sbb
lods
jg
xchg
into
loopne
dec
pop
ficomps
xor
fs
inc
mov
inc
inc
push
gs
add
in
push
enter
call
jg
push
in
adc
lods
outsb
pusha
mov
xor
scas
xlat
inc
adc
add
inc
or
pop
mov
sub
cltd
lret
mov
jecxz
mul
out
outsb
xor
or
inc
outsl
mov
add
mov
lds
push
mov
mov
xchg
add
adc
cmc
mov
imul
in
mov
or
mov
mov
cmp
jmp
orb
stos
xchg
jg
out
sbb
and
jae
fwait
inc
dec
sbb
je
daa
xchg
jae
int
xor
leave
in
add
add
push
movsb
push
mov
dec
ljmp
sbb
fildll
shll
stos
and
loopne
mov
clc
lcall
mov
stos
int3
push
mov
xchg
jl
fisttpll
outsb
lds
and
repnz
push
test
subb
scas
mov
test
sbb
clc
vucomiss
aam
cmpsb
or
cs
in
loopne
adc
inc
inc
imul
pop
and
and
adc
ja
daa
lret
test
pop
cmpsl
mov
and
ljmp
and
xchg
jne
nop
xchg
push
lock
cmp
or
pop
cltd
push
sub
push
jnp
bound
fildl
sbb
icebp
mov
xchg
xlat
dec
xchg
jmp
int
jecxz
sub
ret
jg
xor
cmc
cmpsl
ret
mov
call
daa
loopne
movsb
int
ret
ret
mov
push
aas
push
cwtl
mov
sub
movsb
sub
pop
cltd
dec
stos
xchg
adc
xor
cmpsl
mov
sti
push
imull
dec
and
call
mov
negb
es
cmc
mov
cmp
shl
sbb
sub
mov
mull
cmp
enter
fdivrl
call
push
push
sbb
jle
mov
xchg
jg
ss
sbb
xor
sub
fimull
fwait
popa
cmpsb
xchg
js
sti
jl
rorb
mov
pushf
pop
push
inc
fs
and
mov
or
mov
dec
cli
mov
push
in
aam
xchg
dec
mov
xchg
mov
repnz
int
scas
in
rcr
xchg
leave
cwtl
sub
cli
fcmovbe
jp
repnz
sbb
xchg
lea
cmc
movsl
ss
repnz
mov
mov
inc
jns
mov
mov
int
mov
jmp
mov
stos
subw
call
daa
xchg
dec
ljmp
stc
fwait
add
cltd
stc
out
xchg
cwtl
testl
call
lcall
cld
xchg
inc
ja
lock
ret
hlt
cmpsl
popf
in
sbb
push
cli
pop
mov
xchg
and
aas
stc
nop
call
fwait
iret
cmc
nop
pop
outsb
xchg
xchg
adc
cltd
and
stos
jmp
ljmp
imul
lods
test
aad
stos
sbbl
dec
adc
sub
dec
addr16
mov
xlat
cs
movsl
icebp
les
push
lret
ja
les
test
xor
in
cmpsl
lods
push
imul
or
popa
pop
xchg
xchg
std
in
mov
pop
sbb
out
jnp
insl
out
loopne
cli
jno
dec
dec
jecxz
and
pusha
fucomi
sub
in
loope
scas
xor
jmp
lea
dec
fs
not
repnz
push
jae
mov
pop
in
adc
out
xor
sbb
loop
sub
mov
cli
and
mov
js
mov
cmc
and
sub
add
ds
inc
lock
call
test
bound
inc
pusha
dec
mov
push
lea
sbb
jnp
xchg
adc
push
outsl
sub
aaa
inc
xor
out
add
pop
push
call
jne
cmp
xor
inc
dec
xchg
jno
sbb
pop
sub
stos
iret
inc
jns
xchg
push
mov
sub
stc
mov
pop
mov
lods
jmp
inc
sub
js
mov
test
or
in
ficompl
loopne
mov
cmpsl
ficoms
aam
add
loopne
lods
dec
in
out
mov
daa
xchg
sbb
jbe
repz
push
dec
sbb
das
inc
xchg
mov
sbb
sub
mov
dec
shlb
ss
addr16
enter
idivb
jae
mov
push
and
pop
adc
ja
das
push
pop
lods
cmpsl
lcall
iret
leave
xchg
and
sbb
xor
mov
insb
push
mov
xor
repnz
dec
les
jecxz
jl
je
repnz
fcoml
sub
pop
aaa
cmp
popa
data16
adc
mov
lds
dec
xorb
dec
pop
xlat
mov
repz
cmp
pushf
or
sbb
sarb
inc
push
or
aas
pop
lock
loop
mov
insl
adc
add
mov
add
inc
fists
pop
sub
bound
xorb
repz
ds
popf
inc
sbb
imul
and
cmp
mov
mov
push
lahf
out
fsubrl
sahf
push
sbb
jbe
pop
les
outsb
cltd
and
out
sub
dec
push
ds
hlt
jbe
mov
and
lock
aas
pop
cmp
jbe
push
mov
mov
lcall
push
scas
add
loopne
mov
xchg
mov
mov
jecxz
out
jbe
lret
inc
inc
arpl
xor
push
test
jp
or
test
rcl
push
scas
adc
push
pushf
pop
lock
push
xor
push
shrb
mov
lret
shrb
aam
into
fstps
mov
jg
push
or
stos
push
shrl
popf
push
xchg
fs
and
or
mov
arpl
pop
ret
cmpsl
cmp
aad
repz
outsb
adc
dec
cmp
pop
arpl
mov
aam
sbb
push
pop
mov
cmp
arpl
or
sub
lcall
mov
push
out
lret
cmpsb
sub
std
mov
int
xchg
pop
fdivl
sti
sar
aam
jmp
daa
sub
jne
or
cmp
jle
pusha
xchg
fbstp
cmp
fsubrs
xchg
data16
mov
data16
shl
or
inc
xor
jg
outsl
adc
sahf
stos
xchg
icebp
das
test
mov
aas
sbb
lock
or
ret
mov
movsb
jle
cmp
addr16
mov
or
decb
call
cs
mov
lods
inc
cli
in
out
int3
or
adc
insl
mov
lret
or
sti
sbb
mov
mov
das
pop
inc
mov
lds
mov
lds
orb
cmp
cmp
iret
adc
sbb
adc
call
cmp
inc
mov
mov
pop
lret
sbb
ds
enter
sti
retw
xor
je
sub
cmpsb
pop
out
dec
leave
in
mov
or
popa
in
xchg
fstps
push
jg
mov
pop
test
pop
pop
mov
aad
bound
mov
jno
cmp
aad
out
mov
mov
shll
push
outsl
daa
pusha
stos
dec
popa
cmp
insl
leave
sbb
xor
aaa
adc
out
cwtl
icebp
adc
testl
call
cmp
adc
xor
pop
ljmp
notl
or
or
sub
loop
clc
int
roll
push
xchg
mov
not
cmp
push
les
mov
daa
sbbl
push
pop
dec
dec
mov
mov
and
enter
pop
jle
push
push
sbb
fnstsw
gs
cmp
inc
ss
mov
lret
or
out
call
xor
sbb
int3
push
adc
ret
sub
adc
xchg
or
cmp
pop
cmp
loop
aaa
divl
clc
sti
mov
das
push
das
jnp
dec
rolb
cmp
cmp
lcall
jb
jg
xchg
mov
xchg
inc
mov
pop
scas
sti
or
mov
cmpl
js
sbb
jmp
stc
lret
neg
dec
scas
adc
inc
or
adc
lock
dec
andb
adc
addb
mov
cmp
add
es
outsl
and
daa
ret
rcrl
and
dec
push
inc
or
mov
ficoml
add
mov
xchg
xchg
add
push
test
cmp
data16
in
xlat
mov
cmp
mov
adc
pop
adc
icebp
clc
test
jo
loopne
aad
push
adc
aas
xchg
push
sub
add
and
sub
dec
outsb
in
pop
or
pop
scas
push
fisubs
popf
dec
daa
fdivr
push
dec
aam
fbstp
movsb
cmc
gs
pop
mov
jmp
xchg
adc
cmp
lods
test
pop
jnp
dec
shlb
add
ror
test
push
sub
xchg
mov
stos
xor
mov
mov
in
rorl
and
pop
push
icebp
mov
push
ror
call
xchg
dec
sbb
xchg
jmp
mov
mov
push
and
shrd
sbb
arpl
out
push
inc
cmp
push
andb
lea
fldz
xchg
movsl
ja
and
lcall
cld
xchg
lret
mov
leave
imul
push
dec
sti
jp
jg
mov
mov
ja
xchg
xchg
fists
mov
ss
jns
mov
mov
or
test
inc
inc
xchg
mov
sub
lcall
mov
xchg
hlt
idivl
js
jns
insl
out
xor
jnp
jae
adc
arpl
jbe
into
hlt
jl
dec
lret
out
loope
dec
lock
enter
outsl
test
frstor
ret
add
scas
inc
adc
enter
insb
or
dec
je
jmp
cli
ror
loope
adc
fldt
inc
dec
sbb
cli
mov
clc
in
lods
mov
cs
cli
das
sub
mov
inc
mov
push
out
adc
xor
mov
mov
jp
mov
icebp
xchg
or
mov
cs
mov
pop
sub
idivb
xchg
fs
enter
lret
lcall
cmpsl
pop
out
sbb
pop
push
aad
push
mov
into
pushf
xor
pop
push
push
jo
cmpsb
lea
leave
push
mov
loopne
inc
add
push
bound
lret
and
movsl
pop
xchg
push
mov
sub
push
pop
test
jl
xchg
shrl
xchg
jecxz
enter
daa
push
shlb
xchg
push
or
out
movsl
push
pop
mov
je
jge
mov
lods
push
add
sub
ds
fadds
dec
adc
jbe
inc
loope
adc
scas
lock
sub
dec
xchg
jb
mov
jg
inc
mov
mov
ds
push
cmp
das
stc
xchg
call
lcall
addr16
fwait
dec
and
sahf
cmpsb
push
sahf
inc
outsl
sbb
push
std
andb
push
dec
and
fidivl
mov
div
jp
xchg
pop
jnp,pt
lock
insl
data16
repz
mov
call
sti
ret
adc
aad
sub
push
jno
cmp
hlt
gs
cmpsb
or
pusha
sub
aad
xor
push
lock
in
mov
cmpb
pop
xlat
jb
clc
sbb
sbb
dec
ds
mov
xchg
push
jbe
orl
leave
mov
je
and
stos
inc
in
and
cli
cmp
xchg
push
leave
mov
scas
xchg
lea
ret
cmpl
dec
push
test
or
inc
dec
inc
mov
xchg
add
int3
pop
mov
jb
sarb
repnz
shlb
dec
push
pushf
data16
mov
jno
jecxz
lcall
roll
xor
or
jmp
jg
bnd
adc
pop
lret
or
popf
sub
pop
in
mov
shl
cmpsl
cmc
test
fmuls
in
xor
aad
add
scas
js
pop
sarb
pop
ds
test
ss
test
mov
add
xor
ja
cs
add
movsl
fsubrl
mov
push
repz
sbb
mov
sti
iret
add
mov
push
inc
rolb
or
imul
roll
lahf
xchg
sub
outsb
add
rorb
mov
iret
jne
inc
add
icebp
xchg
data16
jbe
xor
lods
outsl
mov
cmp
or
xchg
bound
jmp
cmpsl
xchg
inc
add
inc
add
pop
jecxz
push
pushf
fs
xchg
xor
xor
push
inc
mov
mov
cltd
jns
pop
cmpsb
mov
jle
jmp
in
push
loope
int
int3
xchg
lods
std
adc
pop
jne
mov
fwait
loop
mov
mov
dec
pop
jbe
cmp
in
ljmp
mov
sub
lret
shlb
std
lods
idivl
outsb
in
inc
stc
popf
jno
cmp
test
jne
lods
rcr
and
inc
push
add
in
icebp
repnz
loopne
iret
sahf
mov
outsl
out
jo
shlb
mov
cmp
jb
pop
dec
imull
fistpll
int3
xchg
and
dec
cmp
jnp
xor
mov
lahf
pop
rcrb
xchg
js
cs
repz
jmp
movl
mov
pop
or
test
push
cld
fisttpll
stc
scas
lods
rorb
fcomps
jecxz
jp
push
push
lock
or
or
xchg
aam
push
jle
sbbl
and
inc
aas
add
xchg
cmpsb
xchg
out
sub
insl
sbb
rcll
push
outsl
and
lea
sub
aaa
jmp
add
mov
fwait
push
test
or
fnsave
add
addr16
push
xchg
add
orb
hlt
xor
push
cltd
gs
inc
adc
movsl
ss
les
shll
sub
cltd
mov
fisttpl
mov
rcr
xchg
nop
or
jp
pop
mov
lcall
pop
adc
rcll
pop
enter
loop
je
clc
add
push
add
push
inc
clc
mov
sahf
stc
cmp
mov
clc
mov
jge
stos
addb
cltd
dec
daa
shrl
inc
inc
inc
mov
and
pushf
pushf
sbb
cmpsl
stos
mov
dec
in
push
bound
sbb
pop
sub
test
in
fbld
iret
aad
int
add
lret
stc
orl
xor
inc
in
and
pop
xchg
mov
jg
adc
jnp
ret
lea
and
test
fisttpl
mov
arpl
push
int
subl
clc
out
leave
ret
xor
xchg
xchg
add
push
aas
xchg
inc
fsubrs
iret
sub
aad
xor
addb
sub
xchg
fistl
js
xor
stos
cmp
mov
jno
mov
cli
into
das
mov
adc
pop
cltd
sbb
inc
jmp
pop
adc
inc
pop
andb
xor
sbb
sub
fs
jge
lcall
daa
dec
outsb
fnsave
lds
aaa
ss
jne
sbb
or
sarb
mov
jmp
jle
fadds
es
les
cmpsl
mov
sub
fs
inc
jp
divl
sbb
cs
xchg
sbb
mov
sbb
sbb
and
into
aaa
push
cmc
xchg
ljmp
push
xchg
xchg
rcll
pop
or
push
je
stc
vpsrlq
pusha
mov
fisttpl
out
mov
stos
sahf
faddl
pushf
subl
mov
sub
rorb
sub
sarb
mov
dec
jg
add
inc
sbb
sub
int3
pop
mov
xchg
and
inc
nop
add
push
cmc
aaa
subb
jne
dec
adc
aad
xor
dec
inc
cmpsl
fcoms
pop
mov
xor
push
xor
pusha
ss
pushf
enter
xchg
adc
in
mov
insl
fisubrl
mov
mov
inc
gs
xchg
ljmp
shrl
push
sbb
rorl
dec
neg
jbe
cmpl
mov
int
mov
dec
icebp
pop
mov
fnsave
mov
in
divl
pusha
test
pop
int
and
inc
rorl
xor
ds
mov
inc
mov
out
daa
out
call
push
nop
aas
jle
or
xor
sbb
xchg
imul
xor
sbb
pop
xchg
ja
ret
push
icebp
std
shl
adc
or
test
xchg
icebp
jbe
jno
mov
cmp
hlt
fistpl
inc
test
cli
outsl
addr16
cmpsb
inc
cltd
pusha
sti
jmp
sub
scas
in
sub
mov
lea
out
push
push
cmp
push
add
xchg
incl
outsb
add
push
scas
aaa
jp
insl
xor
mov
mov
test
repnz
lock
inc
mov
sub
pop
les
mov
inc
cs
repnz
pop
movsb
pop
subl
ljmp
mov
cmp
aas
push
decb
jns
sub
in
scas
pop
mov
cmpsb
jb
popf
sbb
push
in
push
movaps
int
mov
mov
mov
shrb
mov
xor
cltd
movsl
dec
ds
cmp
insl
xor
jae
aam
leave
jno
push
jb
arpl
outsb
xchg
hlt
push
ss
xchg
sbb
xchg
mov
sub
sbb
cmc
push
and
mov
imul
mov
in
lret
pop
setge
mov
cmc
push
sbb
mov
xor
pop
xor
repz
mov
pop
daa
rcrl
mov
fistpl
add
sti
adc
sahf
insl
sbb
sbb
dec
sbb
add
mov
shlb
call
push
in
xor
mov
mov
pusha
sub
pop
stos
inc
jno
cmp
mov
insl
inc
and
pop
rorb
repz
add
jne
les
mov
jae
sahf
jb
xchg
icebp
outsb
sbb
xor
fmuls
lock
cmp
sub
xor
repnz
jge
out
cmp
cwtl
dec
inc
mov
sbb
jge
push
in
jns
adc
orb
stos
fs
pushf
jae
pop
stos
je
xchg
in
mov
je
fmull
mov
pushf
adc
cltd
out
fs
adcb
fistps
aam
inc
addr16
jge
shl
aas
inc
lahf
aam
and
push
arpl
test
push
outsb
add
shll
jb
ljmp
mov
mov
mov
lcall
movsb
subl
jnp
test
bnd
sbb
arpl
inc
cs
leave
inc
unpcklps
lcall
ret
mov
mov
jns
or
jl
cltd
push
in
cmpsb
mov
lds
mov
js
xchg
xor
mov
jo
lods
push
loopne
xchg
jb
or
movsb
jp
int3
cmp
iret
xchg
inc
out
gs
xchg
push
xchg
mov
push
insl
or
adc
js
in
cmp
imul
pop
mov
xchg
inc
pop
cli
lods
cltd
pusha
das
add
adc
push
aaa
push
arpl
fwait
jmp
pop
sarl
mov
dec
lds
pop
lods
ljmp
stc
add
push
and
repz
xlat
imul
pop
divb
je
xchg
sub
fwait
adc
xor
xor
mov
sub
imul
jae
clc
in
test
sub
and
inc
sahf
add
xchg
mov
nop
cmpsl
pusha
pop
mov
mov
adc
test
rolb
cs
ficoms
or
jecxz
lods
pop
cmp
nop
inc
adc
cmp
and
scas
and
xchg
sbb
pop
mov
jp
aaa
sbb
pop
mov
ficoms
cmp
pop
sarb
or
stc
jle
cmpsl
mov
inc
lea
pop
add
insl
mov
lods
out
loopne
les
mov
lcall
in
xchg
adc
pop
add
imul
imul
mov
mov
cld
pop
pop
cltd
jnp
and
push
test
pop
insl
stc
cmp
test
stos
sti
push
aad
cli
in
xchg
nop
xor
imul
mov
enter
lea
fldt
stos
insl
aad
bound
xchg
sbb
lcall
in
gs
adc
shld
jb
adc
or
stos
and
mov
in
sahf
test
sub
jmp
lods
xchg
cltd
add
push
ljmp
loopne
lea
mov
sbb
push
sub
push
mov
push
in
inc
or
mov
imul
add
pop
push
cmp
adc
and
mov
or
sub
pushl
dec
xchg
xor
jb
pusha
or
or
xchg
test
or
xchg
mov
je
test
stos
in
scas
add
xor
jp
fs
mov
push
xchg
pop
and
xchg
stos
mov
pop
add
out
dec
mov
iret
pop
add
and
push
insl
xchg
popa
in
cmp
pop
jg
mov
dec
push
mov
fadds
outsb
mov
mov
mov
mov
mov
test
mov
outsb
xchg
test
loope
loop
push
mov
rolb
test
push
xlat
fimuls
adc
xchg
je
push
vorps
jecxz
dec
adc
nop
mov
mov
lock
xchg
addl
rcll
std
pushf
xor
daa
jns
cmp
mov
das
sbb
push
jmp
add
adc
test
and
subl
outsl
mov
fisttpll
fsubl
aad
outsl
clc
inc
movsb
dec
adc
cmp
inc
icebp
xchg
push
jg
sbb
or
jecxz
lea
or
dec
cli
jge
adc
insb
or
push
mov
pop
mov
cmp
pop
cwtl
mov
stc
cmp
mov
rorb
adc
mov
fcoml
xor
mov
adc
jp
xor
pop
dec
insb
cmpl
xchg
cmp
out
leave
dec
and
in
pop
std
add
jne
cmpsl
adc
test
xchg
jg
in
ja
mov
jo
cmp
mov
rcr
pusha
in
or
rcrl
nop
mov
imul
or
rolb
andl
clc
pop
push
push
jge
ret
test
xor
pop
in
sub
test
fs
int3
lods
jne
ret
xor
sub
and
ja
sbb
addr16
sub
rorb
xlat
push
mov
adc
aad
cmp
inc
jb
js
push
xor
fistpl
fstp
mov
or
pusha
sbb
cmpb
ret
or
pop
loope
rcrb
test
mov
pop
mov
pop
sbb
mov
and
dec
push
jge
movsl
or
mov
jae,pn
js
scas
and
cwtl
and
or
imul
loopne
xchg
mov
jl
push
inc
inc
sub
push
pop
aad
cmc
inc
cmp
mov
aas
pop
insl
or
bound
push
xor
push
mov
dec
sub
and
es
inc
pop
pusha
or
pop
enter
mov
in
test
sub
imul
and
adc
repz
cwtl
pop
std
xchg
das
mov
fs
add
dec
cmpsl
andl
leave
fidivs
in
loope
fcompl
out
push
outsb
inc
test
cmp
mov
xor
pop
dec
cmpsl
xor
inc
insb
and
and
push
je
sbb
fcmovnb
pusha
notl
ljmp
arpl
ljmp
cmpsb
xlat
lret
sahf
push
lods
mov
sub
mov
jle
xchg
iret
enter
or
iret
or
pop
xor
dec
xchg
push
js
lock
sti
cmp
ret
cmc
enter
icebp
imul
xor
sbb
mov
mov
dec
sbb
sbb
or
insb
xchg
lcall
dec
sarb
mov
test
fmull
movsb
xor
stos
shll
sbb
std
jp
mov
cs
sub
lods
in
dec
cltd
dec
aam
inc
rorb
cli
jg
gs
repz
dec
push
mov
std
sub
movsl
or
sub
clc
xchg
mov
jg
sub
jle
out
int
gs
and
adc
jno
insl
scas
dec
outsl
push
fsubrs
pushf
clc
jns
pop
test
sbb
aas
je
bound
jb
test
sbb
sub
add
cs
jnp
aas
shll
jmp
dec
mov
subl
dec
and
fmul
dec
hlt
pop
xchg
push
sbb
inc
jle
data16
fdivrs
notl
div
into
aam
in
testl
ja
and
call
bound
ds
sbb
cmp
test
fcomps
cltd
jne
push
movntq
out
icebp
popf
or
cwtl
fmuls
push
adc
fnstenv
divb
jl
jne
ret
mov
adc
jge
jnp
mov
xor
popf
xchg
xchg
push
fldt
lock
fwait
sub
fmull
repnz
call
mov
fnsetpm(287
pop
pop
sti
orb
frstor
xchg
cmp
push
popf
pop
je
stc
stos
push
or
lock
cltd
shrl
in
dec
pushf
andl
and
cltd
inc
or
add
cli
stos
push
dec
pop
add
data16
pop
add
lret
negl
repz
push
mov
pop
and
dec
sbb
add
pop
xor
or
sbb
pop
scas
out
out
sti
insb
lock
negb
aas
push
mov
in
adc
sti
lea
and
jns
push
adc
js
mov
push
stos
stos
xchg
jle
dec
es
sub
andb
cmp
in
dec
aam
pop
mov
inc
push
inc
incb
dec
xchg
in
sbb
push
icebp
push
imul
mov
aad
sub
fmull
aam
into
gs
shll
cmp
mov
pop
pushf
repnz
insb
test
addl
ret
sahf
dec
stc
xchg
pop
mov
out
fcmovb
push
push
mov
fdivs
andb
call
jns
xchg
ja
repnz
dec
loope
jg
leave
fbld
pop
out
popf
mov
cmp
sub
adc
fcmove
push
gs
adc
ds
sbb
sbb
rorb
nop
aaa
lods
push
lahf
sti
adc
sahf
jb
cmp
inc
mov
aam
fmul
mov
cmovb
mov
mov
mov
insl
mov
dec
pop
aaa
cmp
lcall
mov
sub
ftst
std
push
rorl
arpl
adc
dec
into
jmp
aaa
adc
test
icebp
inc
mov
dec
jp
pop
test
dec
mov
arpl
pop
out
sub
inc
cmpsb
mov
xor
xchg
sub
and
jne
pop
mov
cmp
imul
repz
jle
or
pop
inc
and
nop
rcr
cmc
pushf
or
not
push
pop
xchg
inc
adc
dec
fmull
in
ret
lock
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
js
mov
add
scas
or
push
adc
jge
loop
inc
xchg
sbb
and
jae
cmp
sbb
addb
rorl
sbb
mov
rorl
pop
mov
fcmovnu
pusha
pop
jmp
cmp
push
inc
dec
dec
stos
add
mov
or
mov
daa
push
xchg
xchg
dec
sti
inc
jne
into
test
xor
mov
and
fdivs
inc
aad
addr16
addl
xchg
sub
or
jle
pop
mov
pop
inc
xor
stc
jno
adc
les
inc
mov
adc
cmp
pushl
xchg
dec
mov
mov
hlt
test
adc
lods
divl
mov
addr16
and
je
sbb
mov
xchg
jle
jg
pop
out
cmc
mov
repnz
dec
xor
jo
add
dec
pop
enter
jecxz
pop
int
mov
cmp
addl
xor
stc
jmp
sbb
mov
mov
dec
loop
dec
ret
jnp
mov
sbb
adc
arpl
inc
push
repnz
call
mov
lods
jg
fimuls
add
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
