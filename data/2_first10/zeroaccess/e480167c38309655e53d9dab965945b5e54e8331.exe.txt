add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
rcrb
fidivrl
jle
cmp
fld
ja
or
add
bswap
adc
sbb
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
pop
dec
add
adc
leave
scas
lods
jge
in
mov
xor
addr16
inc
mov
push
stos
bound
out
iret
ljmp
mov
push
push
jmp
mov
lret
js
pop
and
cmc
xchg
jne
push
mov
scas
mov
lahf
stos
add
add
xor
cld
loopne
cld
jnp
sbb
imul
fisubl
push
adc
cltd
pop
or
push
out
mov
cmp
mov
pop
loop
jae
pop
sti
add
lock
mov
lret
aaa
gs
sti
mov
seto
inc
test
sbb
push
jle
add
movb
mov
je
add
fstl
cltd
loope
jns
and
scas
pop
addr16
pop
sub
jg
jle
jg
jle
adc
jl
test
aas
aam
icebp
in
dec
cwtl
lds
jg
lods
std
add
stos
loopne
pop
cmp
mov
jge
fcmovnu
mov
nop
inc
pop
mov
mov
outsl
mov
add
jg
lret
jp
mov
mov
dec
loope
push
sub
pop
mov
fprem
shrl
add
cmc
and
les
cmp
jnp
ljmp
mov
push
lret
scas
cwtl
dec
scas
shld
sbb
inc
leave
inc
mov
jmp
or
add
or
cmc
mov
push
push
push
jnp
inc
and
outsl
mov
jp
out
or
cmp
rorl
fdivrl
invd
push
push
rcrb
jns
and
push
sbb
xchg
dec
cmpsl
jns
sbb
cmp
and
xchg
push
out
aas
out
xor
xor
lds
fcompl
push
lret
push
add
pop
xchg
add
fs
mov
fistps
call
repz
ja
mov
jb
cmp
loop
mov
sti
insb
adc
mov
out
pop
idiv
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
sub
jl
jle
jg
jle
sarl
sbb
pop
mov
leave
and
mov
test
loopne
or
cmp
dec
mov
mov
xchg
jo
iret
pop
iret
sti
sbb
pushf
lahf
rol
sbb
js
imul
add
mov
lods
mov
fs
mov
xchg
xchg
repnz
daa
mov
shrb
sub
xchg
jo
sbb
and
xor
xchg
sub
in
sti
inc
jo
and
subb
pushl
imul
movsb
xlat
mov
pushl
call
mov
inc
mov
and
int3
xorl
in
adc
aad
ja
mov
inc
or
xor
and
cmp
xor
mov
push
pop
pop
insb
dec
aam
add
aad
les
popl
pop
fstl
lcall
or
fisubrs
in
rorl
lahf
cld
xor
insl
pop
and
cmpsb
dec
cmp
pop
stos
cmp
negl
mov
cmpsl
es
mov
cli
sub
or
imul
or
adc
int3
loope
ja
daa
mov
lods
adc
mov
add
jmp
lods
cmp
iret
test
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
outsl
pop
js
jb
jle
jg
jle
fnsave
imul
cmp
jb
out
nop
cmp
add
jae
mov
sub
aaa
pop
out
and
in
jb
repz
inc
inc
or
mov
cmp
jl
sbb
std
mov
dec
popa
cli
les
cmp
xchg
push
ds
lret
cmp
lods
lods
sub
mov
movsb
inc
sahf
lahf
and
repz
cmc
popa
adc
sbb
sub
cmp
pop
xor
shl
xchg
xor
fmul
fs
es
xchg
mov
jb
popa
loop
push
mov
pop
push
cmpsb
inc
daa
cltd
fwait
leave
insl
push
jno,pn
pop
sub
xchg
xor
fwait
adc
into
in
fldt
adcl
not
sub
or
cmp
pusha
enter
push
inc
add
jge
insb
jae
hlt
clc
or
mov
clc
add
jecxz,pn
sahf
push
cmp
or
dec
ret
imul
mov
inc
lcall
enter
jecxz
subb
daa
andnps
add
adc
pop
xor
orb
cmp
adc
dec
xchg
add
xchg
and
in
aad
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
mov
sub
arpl
inc
push
out
lods
inc
lock
dec
insl
pop
imul
jl
into
sbb
push
sub
out
ljmpw
sub
lock
dec
test
ret
stc
jmp
stos
xor
loopne
jg
inc
stos
fwait
scas
fwait
ds
jno
fbld
dec
push
loopne
ss
and
cli
fs
iret
mov
out
xlat
pop
lahf
xor
sbb
rorl
stos
mov
add
pusha
jp
mov
sarl
ljmp
xchg
jo
xor
hlt
fcoml
mov
or
add
push
inc
scas
adc
test
popa
push
stos
mov
orl
or
xchg
inc
xchg
hlt
jge
data16
test
pop
mov
mov
mov
rcrl
dec
push
fisubs
mov
mov
fs
jl
pop
test
aas
dec
inc
mov
mov
pop
mov
ror
fsubr
scas
mov
push
xchg
sbb
mov
pop
jne
mov
movsl
mov
xor
sub
xor
xchg
pushl
aaa
inc
mov
fidivl
rorb
enter
jo
test
pop
pop
and
or
pop
and
adc
add
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
andb
jle
fidivrl
jle
test
imul
add
xor
cmp
dec
jp
stos
cmp
push
adc
xor
and
pop
lods
pop
pop
int3
sub
or
or
adc
mov
outsl
cmc
cmp
xchg
mov
mov
inc
cmp
psubsw
in
add
daa
out
insb
mov
cmc
addr16
adc
adc
or
fprem1
iret
in
cmp
push
xlat
mov
xchg
jae
push
push
add
mov
subb
test
das
outsb
outsl
cli
mov
inc
ret
mov
cmp
xor
sti
stc
rclb
ja
xchg
cmp
ds
push
int3
jge
fiaddl
push
es
ret
mov
mov
stos
int3
push
fwait
or
in
scas
fs
mov
mov
jmp
xor
hlt
or
adc
and
pop
mov
jbe
dec
mov
imul
pop
pop
repz
into
inc
push
fiaddl
nop
mov
inc
push
movb
lods
dec
inc
jl
xchg
movsb
push
ljmp
inc
mov
and
sub
pop
dec
pop
insl
adc
lcall
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
clc
jmp
xchg
push
jbe
jle
jg
jle
dec
and
ret
test
mov
sbb
mov
jne
xor
mov
ror
ss
cltd
jl
add
jecxz
push
cmp
jo
sarb
adc
dec
gs
xchg
adc
addr16
iret
jae
cmpsb
rol
leave
and
mov
jecxz
scas
popa
mov
sti
idivb
and
jae
ja
mov
mov
add
cmp
cld
jb
and
xlat
xor
xchg
insl
push
sti
and
in
pop
jne
pusha
ret
cmp
hlt
movsb
sub
in
popa
and
rcrb
popf
aam
cwtl
jns
aam
inc
jb
inc
pop
sub
pop
add
pop
push
mov
mov
cltd
mov
in
aas
insb
xchg
in
adc
xchg
and
mov
mov
push
and
arpl
push
push
inc
jne
in
data16
stc
ja
in
xor
adc
int
xor
in
insl
in
xchg
inc
sub
fldenv
imul
inc
sub
dec
jo
xor
daa
popa
xor
scas
shld
ja
cltd
repz
test
lret
inc
push
gs
push
mul
fstl
cmp
jge
pushaw
in
scas
ret
add
xor
cmc
scas
js
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
mov
bnd
jle
jg
jle
hlt
xor
movq
mov
mov
scas
stos
and
pop
pop
sbb
repnz
in
andl
mov
stos
push
out
imul
xchg
in
lcall
mov
dec
insl
xchg
push
je
or
rorl
xchg
mov
imul
leave
in
nop
push
xchg
pop
xchg
sub
lds
dec
dec
xchg
mov
lret
sahf
and
scas
or
pop
fsts
pushf
xor
or
mov
push
inc
out
adc
xchg
push
bound
sbb
scas
int
xchg
fdivl
loope
adc
in
call
cmc
subb
mov
lds
cli
scas
testb
add
pop
jne
xor
es
push
fs
cmp
inc
push
inc
mov
add
push
dec
mov
xor
and
fsub
leave
push
or
jle
xchg
xor
jo
out
insl
pop
inc
jp
sbb
sbb
dec
orl
sti
or
das
in
jo
fisubl
add
mov
aas
scas
mov
rol
loope
pop
imul
inc
ret
mov
test
mov
enter
add
fdivl
adc
nop
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
pop
mov
jle
fidivrl
jle
xor
mov
push
xchg
data16
jb
sbb
pushl
ret
cmpsb
cmp
lahf
xchg
mov
ljmp
adc
xor
popf
push
shlb
add
or
dec
push
popa
imul
and
push
pop
sbb
pop
mov
adc
bound
or
je
icebp
cwtl
mov
adc
sub
outsl
or
sbb
or
dec
or
js
rcrl
fs
aad
out
pop
std
pop
mov
hlt
inc
mov
sub
jno
push
movsb
in
or
sub
cmp
mov
js
mov
mov
inc
ret
sbb
arpl
je
jnp
add
dec
cmpsb
dec
movsl
push
lret
mov
test
dec
inc
mov
aaa
dec
cmp
sbb
test
nop
inc
mov
add
xchg
je
adc
push
dec
xchg
jno
in
lock
lcall
jnp
pushf
into
push
nop/reserved
inc
cmc
cs
xor
or
dec
fstps
mov
daa
repz
fldcw
out
xchg
sbb
lret
test
xor
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
mov
jle
fidivrl
jle
inc
loopne
or
cmc
outsl
push
mov
sub
fucom
cmc
enter
mov
and
add
loopne
imull
call
pusha
outsb
adc
mov
dec
adc
call
pushf
clc
jnp
mov
dec
fcmovu
pop
jns
jp
movsb
mov
xor
sbb
sub
push
push
sub
lahf
mov
outsb
dec
in
jle
lahf
popa
stos
ret
mov
movsl
or
dec
xor
popl
fld
pop
repnz
or
clc
imul
or
mov
fucom
scas
cmp
cmp
ret
jo
icebp
inc
mov
lahf
push
pop
dec
or
popf
call
lock
push
imulb
sbb
test
idivb
push
push
pop
outsb
orb
lahf
cmp
loop
sub
aad
sbb
push
pop
push
stos
xchg
mov
out
inc
push
fbstp
mov
inc
mov
pop
insl
rcr
fcoms
dec
cwtl
xor
jae
xchg
cld
push
adc
leave
jne
adc
je
cltd
dec
nop
outsb
dec
lea
push
mov
into
outsl
jno
dec
sbb
imul
adc
add
mov
int
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
mov
inc
xchg
jle
and
jle
data16
sub
mov
mov
mov
pop
mov
xor
dec
arpl
cmpb
lods
xchg
addb
movsb
adc
mov
cmp
divl
test
adc
sbb
xchg
aaa
imul
cwtl
xchg
std
sub
ljmp
mov
and
repz
mov
cmp
pop
in
push
setge
test
dec
xchg
adc
or
fsubs
dec
test
cld
and
insl
rcll
cmp
xor
jp
fsubrl
jne
mov
in
cli
aad
cmp
sahf
cwtl
adc
stos
add
dec
and
movsb
addb
sti
scas
push
push
out
pop
daa
lret
jle
push
mov
xlat
jp
inc
fnstcw
inc
data16
xchg
clc
xchg
jbe
pcmpgtd
xchg
out
inc
sbb
sbb
xchg
movsb
mov
adc
incl
push
jle
adc
test
scas
and
xchg
mov
ljmp
push
out
xor
push
sbbb
fs
clc
xchg
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
lock
and
jle
inc
and
inc
dec
pop
mov
fisttpll
mov
das
cli
ljmp
imul
adc
mov
push
rolb
mov
stc
movsl
iret
push
xchg
adc
aaa
mov
divl
repnz
mov
lcall
loopne
aam
test
sbb
mov
jnp
jle
mov
clc
ljmp
xchg
pushf
push
cmpsb
movsb
push
in
jbe
lea
test
icebp
push
fs
ror
jmp
aad
jg
cmp
ljmp
in
imul
and
or
sbb
icebp
xor
sub
sti
xor
or
sbb
hlt
leave
jmp
fnsave
cmp
or
fistpll
and
jae
insb
and
lcall
out
push
cmp
mov
repnz
aaa
sti
xchg
scas
mov
popa
sbb
imul
cmp
mov
sub
jbe
sti
cltd
jp
cmp
mov
lcall
adc
lret
in
mov
inc
jmp
or
mov
or
push
jo
std
jl
jle
and
jle
fmuls
test
int3
mov
fiaddl
add
push
or
cmp
push
inc
and
cli
cltd
pop
jle
jne
mov
lds
push
adc
mov
mov
mov
adc
xor
data16
fnsave
outsb
rep
xchg
cltd
sub
into
push
sbb
mov
pusha
shr
mov
repz
popa
sbb
stos
ja
mov
mov
mov
adcb
cmc
lods
sarl
mov
push
out
xor
lret
scas
add
jns
add
pushf
scas
iret
mov
mov
arpl
dec
cmp
lahf
mov
jne
or
push
jmp
imul
push
cwtl
cli
fdivrs
lods
push
daa
aaa
repz
fsubrl
or
xchg
iret
dec
push
sub
push
lret
nop
cmpsl
outsl
push
cmc
inc
jg
leave
dec
daa
jae
out
cmovl
inc
xchg
cmpsl
fldt
adc
dec
pop
lock
jnp
loopne
das
rclb
xchg
test
jmp
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
push
shl
movd
jg
jle
mov
xor
roll
enter
push
sbb
push
dec
pop
popl
ds
push
or
inc
fsubrl
mov
cmpb
push
push
jns
cltd
into
in
daa
mov
mov
pop
push
stos
int3
adc
subb
dec
mov
mov
sbb
push
outsl
sbb
add
loopne
ja,pn
or
aam
andb
sub
add
cmp
add
xchg
sub
ficoms
je
inc
adc
clc
das
in
push
mov
adc
lret
popf
xlat
insb
shrb
cmp
or
repnz
cwtl
inc
rcll
enter
mov
push
xchg
shrl
stc
dec
hlt
add
mov
xchg
push
mov
inc
outsl
xchg
mov
repnz
xor
jge
ret
dec
notb
xlat
xor
add
std
cli
popa
cld
stos
or
fldl
xor
out
xor
fldl
aaa
cmpsl
inc
xchg
mov
mov
or
in
jns
dec
mov
jp
test
cmpsl
sub
jge
xchg
xlat
dec
in
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
cmp
out
mov
dec
mov
es
jno
out
arpl
push
push
aad
in
inc
mov
jae
popf
imul
imul
into
and
and
outsb
roll
into
mov
jb
lea
pop
je
pop
rcl
pop
jmp
test
rorl
cmpsb
fidivrs
scas
mov
std
jecxz
inc
pushf
fadds
out
dec
pop
pop
sbb
fcompl
inc
and
and
fnstsw
sahf
imul
fisubs
call
testl
or
fsubr
add
mov
add
cltd
stos
and
clc
rorb
mov
loop
sub
cmp
cld
cli
jns
push
or
and
fcoms
and
mov
and
aaa
addb
loope
popa
mov
pop
or
scas
inc
pop
fnsave
cmpsb
repz
cs
out
sub
cmp
repz
pushf
enter
mov
fcoms
jns
mov
aas
lahf
pop
add
insb
mov
inc
add
xor
add
add
imul
mov
jmp
jbe
xchg
call
adc
cmp
jle
jg
jle
dec
adc
xor
cmp
xchg
add
shll
pop
push
fsub
movb
out
fidivrs
pop
pop
nop
enter
jge
mov
std
mov
bound
and
cmp
mov
mov
sarb
push
xchg
cmp
addl
addb
jge
jg
adc
into
and
push
in
idiv
ljmp
lret
mov
arpl
test
and
pop
daa
pop
mov
cwtl
fldl
div
leave
fsubs
lods
lods
dec
mov
ror
fildl
push
aaa
fldt
mov
js
in
pop
cmp
push
lcall
xor
repz
or
je
cmp
and
pushf
ljmp
mov
mov
mov
mov
cli
pop
cmp
rol
out
and
inc
xchg
jno
stc
fimull
and
sti
jae
icebp
movsb
jo
pop
repz
lock
xor
bound
aaa
push
jp,pn
sub
lret
inc
repnz
add
push
sub
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
sub
add
and
jle
pop
pop
push
lret
loope
jbe
sub
mov
add
scas
loop
push
cmp
enter
imul
dec
mov
aas
inc
fcmovnbe
or
sbb
adc
inc
pmuludq
pusha
push
pop
jnp
jp
pop
es
lods
imul
fiadds
push
fistpl
xor
xor
sub
in
inc
fistl
mov
adc
outsb
das
or
dec
decb
xor
shlb
icebp
cmp
jb
pop
fsub
js
insb
xchg
and
adc
repz
jne
jns
xchg
orb
out
pushf
in
shll
rclb
scas
add
bswap
jne
inc
add
addr16
ds
push
stos
sar
xchg
test
push
push
icebp
mov
imul
pusha
xlat
idivl
sub
push
inc
jg
scas
int
dec
in
cmp
pop
ja
shl
add
and
mov
in
nop
pop
repz
nop
fiaddl
movsb
popa
xor
lods
push
test
into
cmpsb
cltd
adc
pop
inc
dec
out
pop
jmp
cmp
xlat
push
shlb
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
pop
jg
add
and
jle
cmpsl
jno
cltd
rcll
dec
pop
dec
mov
repnz
loop
xor
push
add
pusha
xor
repz
jge
jp
ret
frstor
xor
mov
fsubl
push
adc
xchg
pop
mov
rol
add
test
sbb
jns
push
sub
lods
ljmp
enter
or
mov
mov
mov
leave
mov
pop
pop
rclb
pop
adc
fadd
cmp
rclb
repnz
imulb
xchg
mov
aad
xor
xchg
push
or
sbb
pop
dec
aad
mov
aaa
or
rcrl
into
mov
loopne
adc
jo
mov
mov
lds
or
xor
pop
imul
pop
pavgb
push
mov
ja
push
and
jge
nop
nop
push
pop
jl
inc
es
in
sbb
out
push
mov
arpl
jns
ja
mov
and
fs
pop
cld
cmc
mov
push
iret
addb
add
add
sti
mov
stc
repnz
xor
add
and
jle
pop
stc
push
std
call
in
arpl
enter
repz
loope
inc
dec
xor
mov
in
call
pop
out
xchg
out
add
mov
push
add
mov
adc
xchg
inc
outsl
subl
pushf
mov
imul
add
mov
dec
mov
imul
sbb
cltd
mov
or
cmc
mov
jne
je
data16
leave
ret
fucomi
cmp
and
xor
mov
push
mov
mov
add
stc
mov
dec
xor
stos
stc
push
jge
lret
push
push
pusha
mov
jbe
inc
dec
das
add
jo
jo
jp
add
jno
mov
loop
mov
insl
rol
adcl
aas
dec
sti
cltd
repnz
mov
pop
loopne
les
mov
fcomi
daa
pop
popa
push
jecxz
jno
jmp
addr16
cmpsb
addr16
jnp
loop
cmp
pop
lret
push
push
lahf
jp
ds
jns
shll
mov
mov
cwtl
popf
sub
in
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
mov
mov
lods
subl
pop
sub
mov
ret
push
test
add
arpl
jp
mov
imul
insb
cmpsl
dec
clc
sub
inc
sti
inc
cs
jle
cmpsb
shrb
mov
sbb
insl
add
mov
out
xchg
js
sub
out
xlat
pusha
pop
sbb
pop
or
sbb
rclb
mov
xor
jno
in
insl
in
icebp
les
popf
enter
pop
jns
cmc
pop
pushl
jmp
out
inc
push
call
pushf
scas
ja
mov
mov
jno
push
stos
dec
jae
outsb
jno
int
aas
dec
int3
or
into
test
push
xchg
leave
stos
cmp
out
mov
stos
lret
and
popf
mov
insl
arpl
cmpsb
repz
jp
mov
add
out
jns
jno
loope
dec
add
pop
mov
and
cmpsb
fistpl
mov
repnz
sub
test
cmpl
xchg
adc
jae
sbb
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
ss
xchg
pop
jle
and
jle
addl
out
push
ror
or
or
sbb
add
pop
push
test
int3
cli
sbb
cwtl
add
jl
cmp
and
stos
sbb
push
jp
jno
cmp
xorb
mov
outsl
loop
xchg
leave
popf
xchg
push
cli
outsl
push
jg
xchg
jl
fstps
or
in
xchg
mov
loope
mov
outsl
out
xor
pusha
xor
das
mov
in
int3
mov
xchg
xchg
mov
pop
xor
sbb
mov
cmp
sahf
sub
mov
push
jbe
out
popf
lcall
mov
js
dec
andl
or
outsl
sti
sub
mov
in
push
jecxz
mov
movsb
mov
inc
pop
jae
push
xchg
and
aaa
fnstcw
repz
in
cmc
into
lcall
add
fstl
mov
xor
add
mov
adc
cld
jne
dec
int3
fnsave
in
cmp
test
lahf
jb
add
dec
add
add
mov
dec
js
movsl
mov
lods
je,pn
add
and
jle
mov
add
pop
jg
sub
mov
ds
shrb
xor
sub
push
xor
mov
sub
ljmp
fdivp
lods
sbb
call
das
fnstcw
cli
movsb
insb
mov
ror
xorl
lret
lret
sub
or
into
mov
jae
pop
mov
xchg
cmp
das
mov
or
pop
mov
inc
ja
cmc
sub
add
arpl
or
mov
sti
add
dec
sarl
jns
dec
sbb
or
iret
popa
inc
mov
jp
ja
jne
je
jnp
aas
sarl
push
sub
out
adc
add
in
rcrl
or
and
cld
xlat
push
std
negb
sub
les
notb
pop
push
sbb
jae
in
jnp
mov
fnsave
ret
pop
xchg
cmp
mov
mov
lret
jl
mov
and
sbb
push
cmp
daa
ffree
int3
pop
jle
mov
inc
inc
jae
and
inc
aas
adc
lahf
xchg
xchg
cld
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
mov
sbb
and
jle
sti
dec
xor
xchg
lods
loope
xchg
imull
movsl
clc
repz
stc
or
xorb
ss
inc
sbb
fs
call
add
pop
call
or
adc
cmp
sub
push
insl
inc
insl
addb
mov
dec
jnp
sub
mov
cmp
addr16
and
fisubrs
mov
mull
and
jae
out
ds
rcrb
pop
into
dec
pop
out
xchg
js
sqrtps
ljmp
imul
jle
out
dec
push
pop
add
mov
stos
pop
pop
jae
sbb
mov
mov
aad
add
mov
cmpsb
shl
dec
pushf
stos
push
push
push
sbb
mov
faddp
adc
ficomps
push
test
mov
add
in
popa
call
insb
mulb
cmp
dec
sbb
or
lahf
pop
dec
and
mov
pop
adc
in
mov
movsl
shll
out
negl
mov
and
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
int3
mov
jle
jg
jle
jecxz
sbb
pop
cmp
addr16
out
aam
out
les
loop
scas
repz
push
or
cmp
jecxz
sub
in
or
push
repnz
dec
xor
pop
in
jle
sub
push
int3
inc
pusha
jbe
add
pop
lcall
pop
xchg
lds
test
mov
movsl
mov
dec
sub
inc
test
push
dec
cmp
mov
pop
fmuls
push
cmc
cld
ret
jae
test
leave
add
test
lock
stos
cmc
sbb
pop
adc
int3
out
mov
arpl
push
cltd
pop
cli
mov
jge
xchg
iret
mov
sarl
scas
fwait
lods
pop
push
push
cmp
adc
add
jnp
mov
jl
int3
lret
out
int3
cmp
fcmovb
scas
out
aad
rcrb
lcall
add
in
add
outsb
test
or
pop
mov
inc
push
iret
xchg
or
std
sub
fwait
loope
mov
xor
loopne
pop
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
and
sbb
and
jle
in
xor
xlat
push
push
lret
ror
jg
out
mov
cmp
mov
sub
add
enter
and
jecxz
inc
cmp
sti
dec
cmp
loop
mov
cs
ret
adc
dec
out
inc
mov
sbb
pop
pop
in
pop
sbb
lcall
jae
xor
mov
daa
cwtl
aad
jle
pop
aad
xchg
ja
mov
sti
jmp
fsubs
cmp
in
mov
mov
push
and
repnz
test
push
mov
popf
out
xor
push
push
insl
xchg
mov
mov
cmpsl
and
jge
jmp
or
mov
rolb
jmp
stos
adc
ret
sub
mov
outsl
push
adc
movsl
imul
push
mov
and
cltd
in
lahf
loop
push
xchg
sahf
imul
stc
xchg
mov
shlb
push
push
subl
mov
push
repnz
ja
inc
cmp
pop
dec
mov
sub
mov
cmpsl
mov
and
and
imul
add
in
jmp
jb
test
adc
dec
jg
jle
mov
inc
hlt
inc
adc
mov
aas
and
jmp
jnp
movsb
loop
clc
pop
cli
test
rcll
jl
ret
inc
sti
mov
cmp
leave
cmp
xchg
dec
insl
iret
and
hlt
sub
add
popf
mov
sbb
push
stc
aam
or
lahf
sub
dec
fisttpl
xchg
and
cld
xchg
ja
sti
lret
adc
lea
sub
xchg
pop
in
daa
nop
idiv
clc
divl
or
call
loope
sbb
lcall
mov
mov
xlat
push
sub
mov
lock
aas
lahf
jne
addb
xor
mov
sbb
int
dec
nop
out
loope
mov
jle
inc
pop
push
sub
push
inc
sbb
xchg
push
hlt
mov
fbstp
inc
dec
xor
and
push
jg
jle
xor
mov
sbb
lret
lret
out
and
push
std
xor
inc
pop
sbb
leave
mov
lahf
aas
fidivrs
pop
sti
stc
jl
xor
out
xorb
into
frstor
or
dec
xchg
das
xchg
into
mov
out
into
in
sub
mov
jmp
imul
rcrl
mov
shr
inc
divb
fisubrl
stc
xlat
inc
xlat
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
xchg
loop
sbb
jle
jmp
push
pushl
repz
add
hlt
xchg
inc
jbe
pop
in
fucomp
pop
adc
imul
pop
and
movsl
xchg
mov
out
jecxz
mov
out
jle
aad
pop
cs
jns
mov
fwait
movsl
mov
stos
xor
mov
or
or
test
daa
push
shl
cs
push
mov
insl
mov
mov
mov
mov
inc
xor
push
in
std
pop
mov
orl
in
sub
in
in
and
outsb
popa
jbe
lods
dec
mov
outsb
out
xchg
int3
imul
adc
sbb
loope
push
loopne
outsl
aas
dec
add
add
sahf
movsl
das
xor
push
mov
cmp
push
int
stos
add
cmp
scas
loope
xchg
or
mov
mov
xchg
ret
mov
icebp
cmp
mov
or
inc
adc
adc
into
push
push
jecxz
fnstenv
enter
idiv
mov
or
insl
scas
xchg
dec
loopne
adc
jp
nop
cmpsb
mov
sub
ficompl
inc
pop
repz
pop
mov
fiadds
lahf
mov
out
push
subl
adc
fsubrs
xor
rorl
arpl
outsl
jb
pop
daa
lods
mov
sbb
pushf
jno
scas
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
std
add
cmp
call
lods
push
js
outsb
test
jmp
add
cmpsb
or
fcoms
mov
cmp
ret
cmp
sub
movsl
int3
dec
lahf
pop
mov
jb
or
mov
aas
inc
jne
lea
xchg
hlt
sti
dec
in
cmp
sti
pop
xor
jg
mov
stc
pop
fsubrl
adc
lea
push
or
adc
mov
sub
mov
pop
rcrb
push
push
add
inc
push
mov
sub
insb
lahf
xchg
out
cmpl
or
in
sub
je
adc
data16
test
xor
imul
add
push
mov
cmp
outsl
movl
rorl
xor
int
push
or
xchg
test
lcall
stos
sbb
sub
clc
enter
pusha
pop
xchg
insb
cs
and
sub
fnsave
cmp
call
out
aas
outsl
jl
adc
xor
enter
xchg
jg
jns
imul
jmp
call
mov
xor
ficompl
lock
mov
push
xor
jne
sti
xabort
sub
pop
lret
aas
and
xlat
dec
scas
out
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
sbb
jle
jg
jle
les
icebp
out
cli
stos
loope
jns
movsl
jmp
cld
sub
cs
dec
sbb
aad
cmpb
stos
push
nop
ror
add
cmp
xchg
pop
mov
popa
sarl
lahf
and
mov
out
insl
sbb
jns
inc
sub
daa
add
mov
jne
testl
jle
push
mov
js
add
rcrb
fisubrs
dec
inc
xor
lcall
jns
cs
mov
or
mov
fldcw
inc
adc
cmp
mov
das
outsb
mov
out
aas
or
push
popf
xchg
repnz
sbb
fsubl
leave
imul
lcall
fldl
fadds
rcl
xor
mov
loop
in
inc
mov
lcall
push
cmp
int3
popa
mov
inc
xchg
mov
sbb
js
ret
shrl
adc
cmp
dec
mov
scas
gs
arpl
fcomi
add
lahf
add
les
ss
scas
pop
xchg
xchg
push
leave
xor
push
stos
jo
adc
sub
push
xor
push
test
add
lods
jno
mov
jbe
cli
inc
in
bswap
ja
sarb
dec
sbb
pushf
xor
adc
roll
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
inc
jmp
jg
jle
leave
and
repnz
xorb
out
ret
adcb
xchg
stos
test
cltd
clc
push
or
dec
pop
lcall
add
jne
fiaddl
incl
aam
stos
stos
stc
ljmp
xchg
andl
sahf
les
push
push
push
pusha
mov
sbb
lahf
push
sarl
ljmp
and
lret
imul
push
test
or
and
sbb
stos
daa
jbe
mov
lods
shl
cmp
pop
pop
movsl
loopne
xchg
jge
add
push
daa
aas
xchg
movsb
xchg
dec
in
or
mov
fsub
ds
jle
jo
cmp
clts
jg
dec
lahf
ljmp
mov
push
popf
jbe
add
sub
adc
xorb
push
gs
xor
and
repz
xor
pop
lea
or
pop
or
pop
and
into
pop
test
in
mov
push
dec
add
xor
jle
push
pop
jecxz
xchg
daa
xor
int
mov
pushl
push
pop
adc
mov
scas
inc
xchg
sbb
loopne
inc
out
fdivs
sub
mov
pop
jl
mov
xor
pop
out
xchg
pusha
mov
bound
fbstp
push
jb
pop
xchg
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
hlt
cwtl
je
adc
fdivrl
jle
sbb
lcall
fwait
out
mov
fstp
out
sub
aad
inc
xlat
mov
loop
or
or
inc
push
shll
or
ret
mov
and
mov
push
push
imul
dec
fidivl
push
lahf
cmp
aam
ljmp
adc
jnp
dec
xorb
mov
cmp
dec
lcall
fdivs
sub
stc
and
lods
ja
push
jle
fs
out
jge
xchg
loopne
lcall
cmpsl
insl
icebp
in
add
cltd
loop
dec
xchg
int3
adc
push
push
and
lahf
and
loopne
ds
push
mov
hlt
sbb
stos
out
call
addr16
aaa
mov
xchg
cs
sub
lea
addr16
mov
cmp
dec
or
jp
push
loopne
pushf
arpl
ret
cmpsb
mov
push
adc
test
rcll
xchg
ds
out
sti
adcb
aaa
ror
cs
add
fmuls
cmp
shrb
mov
rcrl
lods
pushf
or
ja
jmp
daa
in
testl
mov
scas
and
mov
sbb
lcall
xor
add
mov
mov
jmp
and
pop
xchg
adc
arpl
js
jg
sub
jg
jle
cmp
push
dec
jnp
xchg
xor
add
sub
icebp
xchg
mov
aad
mov
push
xor
pop
dec
sahf
mov
xor
pushf
test
adcb
movsb
loope
push
out
push
add
popf
fwait
xchg
or
mov
cmp
and
popw
sahf
jns
lret
push
xor
and
imul
mov
or
inc
sbb
addb
sbb
dec
cwtl
add
loop
adc
call
dec
in
stc
sub
push
add
fs
rorl
inc
jb
out
mov
xor
mul
hlt
push
mov
andb
inc
adc
aas
mov
jo
push
sbb
test
dec
stc
pushf
cmp
mov
cltd
pushf
fidivrl
scas
add
sahf
enter
xor
pop
fidivrs
sbb
lahf
mov
adc
lea
add
popa
roll
mov
xor
adc
inc
mov
or
mov
out
test
int3
dec
mov
int
in
pop
cmp
js
mov
arpl
aaa
scas
lea
imul
push
mov
pop
mov
adc
ret
inc
add
mov
add
mov
jmp
push
gs
movsb
sub
xchg
adcl
jle
jg
jle
enter
inc
push
jae
shrl
cmp
out
fxch
push
pop
pop
shl
add
out
jne
cli
dec
mov
lcall
mov
icebp
pop
fnop
pop
cmpsb
sub
add
ja
fmuls
mov
and
mov
outsl
fdivrl
lcall
xchg
inc
movsl
push
test
xchg
dec
in
and
jge
movsl
xor
jge
xchg
xor
rorb
sbb
stos
pop
sarb
arpl
jmp
leave
repnz
ds
fdivrl
mov
negb
mov
add
adc
pop
pop
pop
test
inc
or
ror
inc
inc
jno
dec
je
and
xchg
shlb
sbb
xor
fidivs
subb
testb
aas
insl
insb
or
and
cld
pmaxub
lret
lods
aad
push
xchg
mov
cmp
or
lahf
xchg
mov
xor
repnz
xlat
ret
sbb
sbb
mov
xor
and
xor
test
jb
pusha
or
sub
jg
pushf
cmpl
fimull
outsl
lods
mov
in
sbb
xchg
cmc
pop
test
pusha
aas
inc
push
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
loope
xor
push
adc
pop
add
mov
lods
in
pop
mov
jno
mov
int3
sbb
pop
negl
fisttpl
call
mov
xor
adcb
add
aaa
push
xchg
xor
icebp
xor
add
aas
push
scas
jge
push
add
movsb
shufps
pop
jne
fcomip
loope
add
pop
aad
sub
dec
and
jp
cld
adc
xor
lret
mov
jbe
cli
push
jo
push
sbb
fldt
lahf
das
andl
mov
loop
icebp
fsts
fcomi
pop
mov
or
push
test
movsb
mov
dec
push
or
xchg
sub
jne
ficompl
ja
adc
adc
ret
inc
out
xor
sarb
in
cld
or
jge
xchg
xor
mov
in
adc
add
nop
mov
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
xor
cmc
jge
jle
or
jle
pop
cmpl
ret
movsb
pop
aad
fnstsw
adc
jnp
shrl
sbb
jp
shld
add
mov
pop
push
inc
pop
pusha
pop
insb
pop
sub
lret
aam
pop
popa
mov
int
icebp
loope
sbb
cs
dec
add
inc
jp
mov
das
stos
jb
adc
jmp
sub
rcrl
out
push
mov
insb
push
push
imul
mov
cltd
mov
xor
enter
out
inc
or
dec
lods
test
or
in
add
in
pop
mov
addl
outsb
and
xchg
sbb
xchg
in
out
adc
iret
shlb
in
mov
pusha
inc
pop
jl
lods
int3
stos
mov
int3
fmull
daa
dec
cwtl
jl
pop
jmp
xchg
add
cmp
pushf
sub
repnz
icebp
test
aad
in
int3
insl
nop
les
or
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
or
jle
jg
jle
popf
lret
inc
aas
add
add
jmp
xor
pop
xor
stc
pop
lret
pop
imul
cmp
fiaddl
pop
lods
jecxz
jns
xorb
push
pop
cmp
aad
sti
lret
sbb
or
pop
hlt
in
dec
out
adc
jge
cmpsl
mov
jno
xor
mov
jo
dec
pop
cld
inc
or
mov
sti
add
ror
adc
add
data16
lret
aam
mov
pushl
pop
jle
js
faddl
jo
xchg
sub
mov
shrl
dec
dec
icebp
cs
movb
sbb
stos
lret
idiv
push
dec
aaa
inc
xorb
lea
push
sbb
aaa
nop
sub
fisubrs
pop
ja
cmp
xchg
ja
outsl
loope
xor
fcoml
jbe
call
jb,pn
jle
rcrl
xchg
xor
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
adc
jle
jg
jle
aas
aad
or
dec
dec
lds
adc
mov
shll
addr16
cmc
mov
or
imull
mov
cmpsl
lds
fwait
adc
mov
int3
cmp
je
insb
jecxz
aad
and
lods
or
sahf
int
or
cmpsb
adc
insb
jb
jecxz
pop
add
divb
mov
out
roll
inc
jge
ja
jecxz
mov
push
or
jmp
jo
mov
ljmp
jnp
loop
xchg
pusha
lahf
mov
push
mov
popf
xor
mov
gs
bound
mov
data16
sarb
scas
es
scas
cvttps2pi
lret
dec
clc
sarb
or
lcall
jmp
cmpsl
pop
jbe
pop
fwait
loop
adc
pop
or
adc
sar
lods
sarb
xor
cld
cmp
adc
roll
cmp
je
jmp
xor
cltd
js
popa
cmp
adc
jle
or
jle
mov
push
fisubrs
sbb
fistps
pop
out
xor
lret
xor
in
outsl
cmpsl
fimuls
xchg
sub
jnp
or
sub
mov
pop
and
movaps
daa
insl
mov
cmp
jae
push
mov
and
dec
inc
mov
jge
adcl
mov
lret
aaa
in
imul
lods
push
cmpsl
inc
adc
fwait
inc
nop
popf
aad
adc
jmp
cmpsl
xor
stos
je
in
cmp
fstpt
xchg
in
add
jbe
call
dec
nop
inc
les
sbb
aas
mov
pop
outsl
stos
cmp
jp
scas
mov
jmp
or
rcrb
sub
jle
arpl
jmp
push
or
cmp
stos
xlat
loop
and
mov
jno
pop
push
fists
clc
fistpll
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
in
lods
aad
jle,pn
or
jle
mov
mov
xor
shl
mov
mov
das
movl
mov
inc
mov
mov
jecxz
pop
fisttps
jg
and
sub
cwtl
add
loopne
repnz
outsb
cld
xchg
out
dec
bound
sbb
mov
call
int3
out
cwtl
out
jo
xchg
and
in
rcll
out
cmpb
dec
shrb
ljmp
and
push
or
fs
push
pop
sbb
mov
iret
pop
cmp
movsb
mov
loop
cmp
push
es
adc
sbb
insb
xor
and
fdivs
arpl
push
call
out
jb
in
cmpsl
cmp
jle
stc
mov
inc
inc
lods
scas
lea
idiv
in
push
sarl
or
jns
jb
sbb
repnz
mov
or
xchg
test
inc
ds
jno
xor
mov
mov
adc
push
mov
repz
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
pop
imul
jg
jle
gs
clc
dec
int
dec
pop
lahf
scas
xlat
dec
adc
sarb
popa
jp
mov
push
mov
sbb
and
jp
stos
and
dec
inc
mov
pusha
mov
pop
cwtl
mov
stos
insb
jo
nop
add
ja
inc
ret
xchg
and
iret
test
outsb
cld
mov
mov
sahf
adc
loop
cltd
aaa
ja
mov
loope
push
adc
sub
pop
pop
jbe
adc
xchg
test
xchg
pop
sbb
jmp
dec
cmp
adc
jo
std
cwtl
aaa
repz
or
das
xchg
movsl
push
lds
add
add
dec
icebp
mov
mov
jg
outsl
mov
lods
es
jns
adc
inc
and
cmp
jmp
sub
and
std
jg
aas
pop
movl
fnstcw
xor
iret
xlat
fidivrl
inc
fwait
imul
mov
out
mov
sbb
jmp
dec
sub
lock
fisttps
sub
jle
jg
jle
sub
sbb
stc
int3
xorl
ja
pop
pop
int
xchg
mov
test
inc
xchg
sbb
lahf
mov
leave
xchg
dec
pop
adc
sub
imul
mov
pusha
aam
push
stos
push
jno
sahf
jmp
push
out
push
or
mov
cmpsb
sahf
jle
mov
bound
inc
mov
add
enter
mov
mov
subl
xorb
in
in
pop
cmp
dec
int3
mov
sbbb
push
adc
pop
cmc
popf
inc
xchg
clc
test
add
movl
ficompl
lock
and
xchg
scas
fsts
and
or
add
ljmp
insl
fstps
inc
arpl
fdivs
enter
adc
int3
xchg
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
jg
shrl
jle
cld
xchg
ret
add
std
adc
aas
inc
fmul
mov
dec
repz
push
adc
dec
adc
in
in
push
sub
ja
pop
nop
inc
outsl
pusha
in
xchg
sbbl
pop
add
insb
mov
std
push
lret
xor
inc
sbb
ret
cmpsb
xchg
cmp
push
aad
xchg
push
adc
jl
imul
inc
js
outsl
adc
xchg
xchg
testb
psrlq
mov
push
pop
stos
jp
push
cmp
mov
cmp
inc
sub
mov
or
xor
mov
in
cmp
adc
cmp
loopne
movsl
data16
ds
cmp
and
dec
xor
dec
or
mov
leave
and
mov
sbb
aaa
inc
shlb
inc
ret
push
les
sbb
dec
dec
fstpt
mov
lret
sti
jnp
or
mov
mov
pop
pop
movsl
mov
sahf
jp
cmp
lahf
lcall
xor
mov
add
adc
roll
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
leave
inc
pushf
frstor
jle
or
jle
hlt
dec
xchg
mov
mov
hlt
test
xchg
jecxz
jl
shlb
pop
dec
dec
inc
mov
lahf
mov
mov
mov
rcrl
ret
aas
clc
int
or
aas
mov
xchg
xor
jo
xchg
push
push
and
jnp
ljmp
dec
mov
bound
jge
lahf
jbe
inc
lea
xor
push
sub
jb
arpl
mov
sahf
mov
stos
aad
insl
add
jbe
bound
iret
jecxz
dec
imul
and
outsb
andl
adc
add
mov
add
insb
pop
movsl
stc
cwtl
cltd
fiadds
std
sbb
cld
xor
jbe
jmp
add
push
sbb
and
decl
jne
inc
aad
arpl
mov
cs
fs
mov
lret
push
xchg
movsb
sbb
inc
mov
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
xor
jmp
jg
jle
push
xor
add
cwtl
lret
rcll
test
lcall
xchg
lock
dec
cmp
in
mov
jne
inc
das
jp
or
cmp
in
ret
lahf
mov
xchg
and
inc
sbb
sbb
or
pop
sbb
pop
sub
cs
push
xor
adc
sbb
add
sub
cli
jo
jmp
xor
mov
or
or
imul
loope
inc
jl
dec
and
inc
fwait
dec
icebp
push
cmp
pop
cs
stos
xor
pop
inc
jns
jns
inc
in
add
bt
or
sbb
xor
pushf
and
cmp
orb
les
xlat
hlt
bound
sahf
mov
inc
lret
les
sbb
dec
stos
mov
in
int3
in
std
and
or
mov
int
ja
jp
shrb
in
adc
dec
adc
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
fdivl
and
ret
sub
lods
pop
jns
pushf
adc
aad
gs
mov
loopne
lret
lret
in
loope
mov
and
adc
mov
mov
ds
pop
adc
xchg
xlat
les
lahf
dec
and
pop
jae
neg
popa
push
repz
jge
sub
adc
jmp
mov
lret
jno
popf
pop
mov
fldt
or
into
push
rolb
inc
lds
lock
inc
ja
bound
mov
sbb
scas
cmp
push
popf
mov
mov
mov
mov
jmp
es
mov
les
xor
and
cmpb
push
cwtl
outsl
inc
mov
push
imul
jg
test
cs
out
cmp
push
xor
movsb
jno
add
popf
clc
aaa
insb
add
and
mov
xor
out
addr16
inc
mov
push
testl
jns
cs
fdivr
stos
mov
fs
jne
xor
mov
inc
adc
lret
xor
jo
add
xchg
pushf
out
push
jg
xchg
cld
mul
mov
xchg
montmul
cmpsb
add
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
inc
pop
lret
popf
and
push
jg
jle
enter
inc
adc
fisttpl
adc
fs
mov
insl
adc
fsts
jo
fildl
js
addl
or
shlb
imulb
stc
mov
imulb
dec
push
insb
not
mov
test
shrl
sub
push
sarb
adc
add
xor
add
xchg
int
ljmp
pushf
push
daa
gs
cmpsl
or
sub
push
mov
pop
xor
mov
scas
mov
xor
out
adcb
leave
movsb
adc
lcall
loopne
mov
pusha
adc
lds
push
inc
mov
cmp
mov
mov
mov
xchg
or
in
push
push
out
pop
lds
sub
mov
xchg
inc
adc
pop
jns
jne
icebp
mov
mov
inc
mov
and
mov
shlb
pop
in
add
ja
sbb
outsb
hlt
cmpsl
and
inc
lods
jbe
push
nop
xchg
in
out
push
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
adc
jle
push
jg
jle
push
lods
daa
adc
loopne
add
aad
pusha
push
cli
mov
jo
mov
aaa
into
in
mov
lcall
mov
mov
pop
out
fwait
inc
out
inc
push
sti
clc
ret
or
jmp
jl
out
ss
mov
cmc
popf
dec
sub
mull
popa
mov
icebp
ss
jle
jae
out
cmp
add
sub
fists
xchg
outsb
mov
in
enter
or
movsb
fmul
mov
xchg
leave
jecxz
push
shr
daa
mov
push
loopne
call
push
mov
lods
popl
lret
sbb
jne
push
cs
add
or
sti
and
and
jle
out
clc
or
mov
cmpb
stos
imul
repnz
jg
loop
cmc
test
lret
shlb
test
pushf
pop
fwait
inc
idivl
pop
push
add
sbb
jb
arpl
push
or
adc
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
imul
jle
cmp
int3
rcrl
loopne
into
in
xlat
jmp
adc
cmp
pop
pop
pop
xor
push
loope
es
loopne
arpl
es
rcl
jmp
sub
sti
and
js
pop
out
aaa
mov
inc
inc
dec
ret
jg
adc
test
test
iret
pop
ficomps
int3
mov
insb
adc
jbe
jl
dec
xchg
sub
stos
aaa
jne
sub
mov
cmp
incl
cmpb
push
mov
add
cmp
out
loopne
mov
nop
js
lods
and
int3
movsb
sbb
mov
cmp
fstp
pop
fsts
add
cmp
idiv
push
pop
sbb
pop
xchg
cmpsb
jae
or
mov
lods
bound
pop
mov
lods
call
out
shlb
imul
xchg
lods
jno
xor
sbb
pop
sbb
scas
js
dec
mov
lods
mov
dec
stos
dec
ret
dec
out
jmp
cltd
add
imul
jle
and
js
test
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
outsl
arpl
test
lds
jle
sarb
mov
ret
mov
into
andl
sahf
es
cltd
inc
sub
sub
mov
mov
sarl
sub
fnstsw
sbb
lods
jae
pand
stos
adc
fimuls
sahf
mov
pop
mov
inc
mov
sub
fisubl
pop
fildll
repnz
add
insb
leave
mov
xchg
mov
loopne
out
pop
fnstsw
ja
fildll
test
test
mov
std
inc
je
add
push
xchg
inc
jp
mov
cmpsl
aam
mov
stc
rcrl
xlat
decb
loop
aad
fstl
lret
mov
xor
dec
fnstenv
call
jno
fidivl
popa
insl
sahf
push
out
mov
fnsave
daa
and
dec
cld
das
push
sub
and
jbe
ret
sub
sub
call
cmp
jecxz
gs
push
xlat
movsb
cmp
shlb
lea
arpl
lods
and
das
jl
scas
lcall
mov
jge
mov
mov
inc
pop
loope
jg
ss
stos
in
test
pop
arpl
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
cmp
xchg
loopne
jle
lds
jle
inc
sub
adc
lods
clc
xchg
test
dec
subb
or
or
xlat
push
or
add
adc
push
hlt
pop
sub
loope
mov
in
shll
cmp
fwait
sub
lods
cltd
mov
xlat
pop
cmp
push
xchg
and
pop
add
mov
add
imul
scas
mov
push
jno
test
and
gs
mov
jl
aad
dec
jge
mov
mov
out
sahf
lret
xchg
ret
pop
and
or
jecxz
cmp
pusha
lock
or
push
jbe
sub
and
in
int
push
sub
insl
mov
ret
jecxz
lods
pop
into
xchg
push
mov
mov
mov
push
push
xor
push
bound
sbb
dec
subb
lret
inc
push
xchg
je
imul
movsl
add
inc
loopne
scas
cmpsl
and
das
shr
mov
mov
dec
rorl
adc
sahf
jmp
dec
cld
movsl
push
rcrl
xor
dec
inc
inc
adc
pop
cs
jb
inc
inc
fimuls
cmp
xor
xor
add
jmp
jg
add
jns
cmp
sbb
jle
jg
jle
cltd
loop
dec
lds
cmc
inc
or
in
jae
xor
jb
fisubrl
dec
cmpsl
cmpsb
insl
outsb
into
jae
mov
sbbb
addl
mov
cli
jecxz
jl
imul
mov
xor
pop
out
mov
or
cmp
inc
and
nop
xchg
mov
mov
xchg
bound
sahf
xchg
and
ret
sbb
jle,pt
adc
mov
aas
addr16
mov
dec
jno
dec
data16
pop
loop
push
in
addr16
out
sti
mov
xor
pushf
adc
add
xchg
scas
aam
add
pushf
mov
pop
fdivrl
xchg
lret
xchg
data16
pushf
adcl
xchg
movsb
cs
mov
push
sbb
loope
inc
jns
into
idivb
rcrl
lret
sbb
fistl
repz
dec
push
pop
lret
das
push
mov
pop
mov
xchg
movsb
push
jge
pop
aad
fidivs
adc
cmp
cmpsb
call
inc
pop
mov
loopne
in
adcl
push
fcoml
xchg
test
mov
fwait
add
jecxz
add
test
jg
mov
icebp
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
leave
leave
mov
cmp
lds
jle
xchg
inc
in
xor
movsb
cmp
cwtl
imul
jbe
test
clc
push
cmp
mov
or
add
cmpsb
xchg
xlat
int
mov
cmp
xor
jns
pop
inc
es
jp
dec
iret
lock
iret
mov
mov
mov
mov
push
and
pushf
shl
das
mov
stc
pop
cs
mov
nop
pop
js
fldl
add
jb
fiadds
or
mov
movsb
imulb
mov
and
cmp
punpckhwd
repz
mov
inc
mov
pop
jne
imul
call
sbb
mov
int3
adc
fnstcw
lret
jge
sti
jp
je
loope
inc
scas
nop
and
pop
adc
cli
inc
shr
les
js
pop
pop
sti
and
cli
iret
imulb
adc
in
jp
adc
fnstcw
inc
mov
aaa
add
mov
xchg
and
cwtl
cmp
fldt
pop
dec
inc
fidivrs
sbb
dec
outsl
pop
sub
xchg
jo
inc
inc
iret
sub
xchg
mov
mov
loope
lock
adc
xchg
or
xchg
sub
pop
add
aas
insl
cmp
add
jbe
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
pusha
dec
icebp
jle,pt
mov
jle
mov
cltd
jle
pop
cmp
mov
or
and
fdivr
xchg
fmul
mov
lret
stos
jg
mov
mov
addl
and
mov
jge
in
adc
shrl
mov
repnz
loope
sub
fmuls
mov
sti
dec
cmpsl
aam
sbb
enter
aad
xor
movsb
push
cmc
sbb
mov
aaa
cmpl
aas
adc
mov
adc
out
loope
mov
jae
push
sbb
add
xor
test
sub
sbb
das
and
push
add
mov
xor
leave
push
jecxz
mov
mov
mov
cmpsl
add
push
xchg
sub
add
lret
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
popa
pop
stos
leave
aas
jle
mov
jle
mov
leave
arpl
subb
mov
xchg
add
cmp
std
dec
fwait
smsw
in
cli
inc
push
mov
push
dec
fisubl
dec
jge
ja
popa
insb
mov
jns
pop
mov
dec
push
in
test
push
sbb
adc
mov
xor
mov
xchg
mov
bound
xor
ja
aas
adc
pop
int
and
push
bswap
lock
push
xor
fbstp
xchg
xor
and
push
scas
cmp
data16
dec
aam
xchg
mov
fisttpll
dec
jp
dec
popa
adcb
xor
mov
movzbl
and
jmp
mov
stos
popa
jns
in
mov
and
jle
mov
jle
sub
xor
test
rorb
data16
xor
bound
popa
inc
cmc
ja
push
push
ljmp
ror
push
jns
mov
add
andb
repz
push
adc
push
mov
fwait
je
in
jmp
sbb
divb
sub
jo
jnp
inc
push
dec
xchg
mov
enter
jle
in
mov
outsl
jb
dec
out
mov
mov
jp
insl
mov
adc
mov
cmp
maskmovq
mull
push
jns
push
ljmp
jae
dec
fsubs
jno
dec
mov
aam
inc
xorl
adc
mov
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
dec
jno
cmp
jle
jle
jle
or
enter
push
aas
push
cmc
mov
pop
pop
rorl
and
mov
push
lods
xchg
xchg
and
add
in
add
clc
int3
xchg
mov
test
mov
jl
and
insb
jecxz
orb
mov
push
daa
and
xor
jl
mov
inc
inc
imul
idivl
jmp
mov
stos
and
xchg
pop
xor
in
add
or
mov
lret
jmp
fidivrl
arpl
stos
scas
push
or
mov
icebp
pop
mov
adc
lods
xchg
xchg
mov
push
adc
jmp
addr16
fsubr
or
pop
adc
jne
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
mov
jle
mov
jle
dec
scas
gs
and
pop
or
push
cmp
int
in
iret
sbb
add
add
movsl
dec
addr16
inc
push
sbb
loopne
hlt
mov
push
dec
fs
movsl
push
xor
add
inc
xchg
clc
pop
push
cmc
cmp
add
ss
mov
lcall
adc
sub
add
outsl
add
mov
inc
cmp
pop
xchg
mov
sub
outsb
je
outsb
ret
sub
adc
mov
repnz
addr16
sub
fs
mov
ret
inc
mov
jl
mov
cltd
sbb
jmp
mov
shrb
mov
je
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
fisubl
jle
jle
jle
dec
sub
pop
lret
mov
lods
mov
sbb
imul
mov
loopne
test
xchg
cmpsl
adc
enter
shrb
cmc
loopne
sbb
xchg
inc
xorb
nop
pop
push
call
adc
fs
loopne
pop
and
xchg
test
in
cmp
mov
push
or
hlt
fwait
int
sahf
lods
dec
push
in
xchg
jl
pushf
enter
xor
js
je
mov
xor
add
cmp
das
stos
add
loop
das
test
ret
mov
mov
push
cli
mov
push
inc
push
daa
add
daa
and
je
imul
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
es
xor
mov
jle
pusha
xor
pop
jno
push
cmp
lcall
outsl
cmc
out
mov
in
in
fisttpl
xor
xchg
adc
sub
mov
call
bswap
push
xor
add
mov
xchg
das
and
into
mov
stc
pop
sbb
xchg
cltd
stc
xchg
cmp
xchg
stos
push
loope
test
or
imul
jbe
pop
leave
js
xor
cltd
popa
mov
and
icebp
popf
xor
fsubr
cwtl
lret
jno
scas
or
lret
call
bound
mov
pop
cwtl
sahf
ja
or
popf
add
icebp
addr16
or
faddl
mov
mov
push
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
xorb
jns
jle
mov
jle
mov
out
mov
iret
negb
mov
sbb
test
mov
rcrl
add
cltd
mov
add
adc
cmp
xchg
dec
stos
and
out
pop
dec
pop
cmp
cmp
push
dec
rcl
pop
or
push
jne
rcr
clc
imul
je
in
mov
cwtl
int
scas
pusha
pop
mov
sbb
jecxz
pop
cltd
xor
punpcklwd
insb
test
xchg
loopne
xchg
add
jnp
loope
mov
std
push
inc
cmp
push
push
imul
sbb
les
lock
pop
xchg
lods
mov
push
les
add
iret
inc
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
test
mov
jle
mov
jle
xchg
fwait
add
out
fidivs
sbb
jl
jg
adc
insb
dec
into
dec
mov
add
adc
or
and
fisubl
cltd
popa
jne
rol
test
mov
sub
xchg
mov
mov
aaa
push
sbb
jo
incb
fwait
loope
mov
pushf
jbe
fstp
inc
and
movsl
loopne
jmp
lahf
dec
mov
jns
xchg
sbb
jg
jo
shrb
or
lcall
or
mov
inc
mov
pop
jb
in
inc
nop
cwtl
dec
inc
sbb
dec
jne
sub
dec
lcall
push
inc
push
dec
cmp
push
xchg
add
les
inc
orl
adcb
movb
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
mov
mov
mov
jle
scas
std
dec
add
mov
inc
jno
inc
add
push
pushf
mov
mov
repnz
scas
cmp
cmpl
mov
mov
pop
sub
adc
jmp
xor
or
xor
hlt
adc
divl
pop
das
add
ret
adc
inc
inc
mov
mov
ljmp
jno
int
cmp
jne
in
adc
dec
push
cmp
maskmovq
negl
dec
movsb
dec
andl
xchg
jge
xor
out
inc
mov
push
pop
in
sub
fstps
jmp
cli
pop
mov
push
fsubl
outsb
out
mulb
sub
add
scas
mov
flds
in
scas
shrl
mov
mov
mov
jmp
xchg
adcl
mov
insl
and
ss
mov
jle
cld
movsl
pop
and
sub
aaa
test
sbb
jno
mov
outsl
xor
andb
pop
mov
mov
xlat
dec
xchg
sub
inc
repz
xchg
jnp
out
xchg
mov
add
dec
and
jle
mov
mov
sub
movl
out
test
ds
in
and
push
out
dec
hlt
xor
rolb
xchg
mov
adc
cs
cmpb
pop
stc
cmp
das
out
inc
cld
fiadds
mov
in
mov
out
inc
push
xchg
or
inc
sti
jmp
repz
mov
inc
sub
cld
jnp
or
scas
aad
imul
sarl
ret
or
add
mov
jmp
decl
xchg
push
inc
sub
aaa
jle
mov
jle
push
call
shl
lahf
lret
into
push
cmp
in
mov
jb
dec
cmpsb
jae
movb
and
mov
sbb
stc
out
iret
adc
push
dec
mov
add
adc
jecxz
outsb
repnz
ss
cmp
fnstenv
fs
inc
in
dec
mov
xchg
loope
rolb
jnp
xor
and
push
xor
sub
mov
mov
sub
or
mov
fdivl
test
loope
sub
jmp
cwtl
aad
fisttps
push
xlat
std
sbbb
inc
pop
push
cmp
push
out
xor
lahf
insb
mov
sub
imul
jmp
inc
loop
xchg
imul
mov
jle
jle
jle
pop
shlb
sbb
lock
popf
mov
addr16
pop
add
loope
mov
or
icebp
lahf
cli
cmp
std
push
xchg
push
imul
jae
mov
xchg
jnp
sbb
js
movsl
movsl
and
mov
adc
xor
jle
popf
pop
xor
andb
data16
sti
inc
enter
add
pop
lret
mov
xor
push
dec
xor
out
das
mov
add
cli
jmp
fs
xchg
and
aam
pop
hlt
mov
jle
pushf
aaa
cmp
push
and
push
mov
dec
pop
fnstsw
mov
je
jecxz
ja
loop
fiaddl
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
sbb
jle
mov
jle
cli
jg
divl
xchg
call
stc
int3
pop
sbb
sbbl
mov
ljmp
xchg
or
mov
xor
negl
fucomp
pop
test
loop
cld
pop
mov
add
jp
inc
cmp
aad
sahf
test
or
mov
mov
cmp
and
dec
push
adc
bound
lcall
inc
jp
sbb
fwait
xorl
adc
xchg
mov
push
pop
arpl
push
lods
fucom
pop
out
sub
push
pop
mov
push
ret
scas
and
cmp
mov
adc
push
cmpsb
nop
push
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
inc
cmc
lods
mov
mov
jle
pop
mov
in
mov
js
xchg
mov
int3
adc
jg
push
sbb
jecxz,pt
xchg
cld
jp
inc
fstpt
mov
cmpsb
repnz
mov
je
mov
mov
arpl
cmpsb
xor
addr16
cltd
jbe
call
lock
arpl
jmp
lret
cmpsl
mov
pcmpgtw
es
cmpsl
pusha
daa
out
xor
hlt
rcrb
jb
lcall
sbbl
push
add
dec
mov
les
or
pop
jg
xchg
in
jmp
es
in
and
xchg
sbb
jno
add
scas
ja
lea
lea
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
rol
xor
je
test
jl
lods
repnz
fiaddl
fisubs
lods
lahf
pop
icebp
push
enter
lahf
lcall
xchg
mul
pop
repz
ret
neg
inc
fisttps
push
mov
insb
fidivl
ret
adc
popa
xchg
jg
or
mov
test
mov
xchg
dec
subl
xchg
repnz
leave
fisttpl
inc
dec
dec
fucomp
adc
fstp
fimull
iret
in
pop
fmul
xor
mov
jno
jo
imul
dec
sti
adcl
ror
jge
dec
je
fidivrs
or
adc
jns
jne
pop
inc
adc
and
adc
mov
mov
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
mov
iret
daa
jno
jle
mov
jle
out
push
pushf
cwtl
dec
push
ret
scas
dec
movsl
mov
adc
mov
clc
scas
ja
or
pop
mov
addb
mov
sub
mov
cmp
test
mov
cmp
mov
adcl
cmp
mov
jecxz
fwait
test
das
dec
aas
add
jp
jbe
ljmp
jno
xor
dec
repnz
fimull
leave
imul
cmp
rolb
das
mov
fsubs
and
mov
mov
cmp
jno
push
sub
or
roll
jmp
cmovle
dec
mov
sub
sbb
jmp
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
mov
jle
jle
jle
mov
push
fsubs
and
or
je
ja
in
aad
daa
xchg
cmp
add
aam
xchg
loop
loopne
cmp
add
xchg
adc
xlat
fldt
mov
xor
push
hlt
and
test
jmp
and
mov
mov
add
push
pop
jge
imul
or
push
mov
lret
xchg
mov
sbb
dec
push
cltd
dec
jp
inc
cmpsb
movb
inc
mov
sarl
push
arpl
jp
fcoml
lods
repz
inc
cmp
pop
movsb
inc
out
call
push
xchg
addr16
cmp
adc
lcall
sub
pop
xchg
loop
and
inc
cmp
jmp
test
xchg
push
stos
push
push
gs
test
jle
jle
jle
rolb
je
fsubr
pop
or
es
std
sbb
push
je
mov
mov
mov
xchg
ds
or
cld
mov
lret
loopne
popf
test
adc
mov
andl
stos
cmp
hlt
pop
adc
xor
dec
lret
mov
mov
and
pop
roll
pushf
test
fsubl
popf
adc
stc
xor
ret
aas
out
lahf
mov
sbb
inc
xor
mov
fimuls
and
enter
pop
add
pop
test
icebp
push
add
ds
mov
or
inc
mov
repnz
inc
xor
lret
dec
js
ss
cmp
int3
das
pop
movsb
mov
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
cmc
cs
or
dec
dec
addb
pop
or
pop
mov
sbb
sub
mov
sub
or
test
sub
push
je
repz
gs
in
fnsave
jno
inc
sub
popf
shlb
cs
fisttpl
jno
and
mov
ja
loopne
sub
mov
pop
out
or
loop
add
xor
or
aad
pop
adc
jmp
hlt
in
push
lea
fimuls
cmp
stos
push
adcl
dec
test
cmp
pop
mov
sbb
in
mulb
ret
rcrb
lret
xchg
xchg
enter
inc
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
