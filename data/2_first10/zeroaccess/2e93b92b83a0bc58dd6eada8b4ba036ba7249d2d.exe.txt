push
mov
sub
mov
mov
xorl
mov
jmp
jnp
jl
js
ja
stos
or
jecxz
jecxz
or
or
iret
add
or
test
mov
dec
xchg
xor
shll
pop
lret
adc
repnz
ja
mov
repnz
dec
mov
mov
sub
cli
faddl
jne
dec
inc
jno
imul
jge
icebp
cmp
frstor
lods
dec
pop
push
adc
mov
fnstsw
outsb
repz
lods
fcmovb
mov
out
adc
cltd
movsb
fsubr
aad
movsl
sbb
stc
add
push
imul
in
inc
sub
enter
negl
sahf
add
in
in
adc
adc
xchg
test
mov
xor
in
mov
push
or
sarl
pop
ret
in
je
ret
in
aad
jle
or
addl
ds
or
xor
dec
filds
cmp
inc
mov
jnp
cwtl
enter
add
pop
aad
mov
mov
cwtl
fldcw
cwtl
mov
adc
mov
dec
ds
lods
mov
mov
test
je
stos
lret
cmc
fidivl
and
inc
loope
roll
bound
rorl
add
shrl
int
movsl
mov
cmp
pop
mov
xor
sbb
push
stc
fldlg2
fisttpll
ret
lods
inc
mov
pushf
insl
popa
cmp
clc
inc
negl
or
in
stc
jg
adc
add
aad
movsl
pop
pop
out
mov
cmpsl
fiadds
cmc
dec
mov
dec
iret
push
fs
sbbb
repz
int3
mov
xchg
xchg
test
rcll
xor
imul
loope
std
sub
hlt
inc
je
sub
into
jns
lret
ds
push
fs
jno
xchg
lods
cmp
lods
pop
xor
daa
xchg
stos
arpl
enter
sub
xchg
pop
ret
xchg
xchg
mov
inc
ds
and
stos
cld
sahf
in
jp
xor
shrl
lahf
pusha
mov
adc
mov
aad
fdivp
repnz
add
mov
pop
loopne
inc
fnstsw
dec
mov
movsb
mov
in
and
sar
push
pop
jg
pop
mov
mov
shl
push
insl
fwait
les
jae
or
sub
xlat
push
lds
cmc
in
test
xchg
cmp
fwait
stos
imul
add
daa
aaa
cmp
iret
sub
jl
sub
dec
jecxz
loop
inc
scas
mov
das
cmp
std
pop
push
loop
daa
movsl
adc
and
or
arpl
fsubrl
mov
sbb
scas
ds
je
movsb
push
jno
roll
adc
lea
shll
fwait
mov
mov
pop
xchg
or
cli
das
mov
mov
in
jnp
pop
mov
and
inc
mov
adc
xchg
repz
sbb
mov
push
dec
sbb
cld
lea
add
rcr
sbb
aad
or
pop
mov
lods
push
test
and
mov
dec
sahf
ficoml
and
fdiv
adc
cmpsl
aaa
data16
or
lcall
adc
gs
idivb
test
subl
jecxz
or
call
fmuls
pop
repz
push
cmp
adc
fnstenv
push
fmuls
mov
dec
cmpsl
mov
xchg
scas
ret
inc
xor
mov
mov
loop
adc
sbb
add
inc
and
je
cmp
cmp
ss
xor
imul
sbb
or
dec
push
pop
lret
or
in
ss
mov
pop
adc
cltd
cmp
imul
inc
jno
jmp
jmp
lods
dec
and
adc
ss
rcrb
nop
cmp
sub
gs
pop
jb
fistps
das
add
lahf
mov
add
jecxz
lcall
mov
sub
dec
fs
add
imul
out
outsb
add
lret
lods
daa
mov
push
in
test
lret
cmpsb
dec
jge
sbb
inc
push
sub
ds
ror
push
add
sbb
and
xor
xchg
sbb
stc
push
jae
dec
call
call
inc
iret
add
jnp
sarl
adc
lret
sbb
sub
cmc
jnp
xor
out
xor
je
mov
xlat
out
mov
jp
inc
mov
add
push
cmpsl
sub
cld
mov
mov
or
push
repnz
fistpl
inc
inc
jge
cmp
gs
jp
xor
push
ss
mov
dec
mov
mov
mov
stos
xchg
or
mov
add
movsl
aam
xor
rorb
rcrb
hlt
mov
and
jo
xor
inc
push
inc
mov
or
popf
out
mov
daa
lock
out
pop
insl
mov
jmp
or
jg
lds
pop
in
jmp
jo
inc
adc
insb
sarl
inc
sub
push
jmp
add
lds
mov
mov
xorb
iret
add
or
add
or
pop
sub
jge
call
sub
sbb
test
popa
and
std
in
and
sub
jecxz
mov
aad
jae
popa
mov
ds
cmp
inc
add
pop
aad
loope
push
xchg
fstl
cmp
call
add
gs
imul
outsl
push
add
jl
int3
fisubrs
shl
add
mov
and
notb
xchg
in
aas
lahf
rep
mov
test
sarl
addr16
cmpsb
cmp
mov
nop
lds
jb
int3
hlt
rcr
mov
xchg
xchg
fldt
sub
xlat
dec
into
push
add
bswap
adc
or
jle
insb
daa
and
mov
gs
jmp
cmp
les
jnp
push
mov
push
into
mov
inc
pushf
cmp
adc
dec
nop
push
into
mov
gs
and
jae
int3
jo
dec
stc
out
imul
inc
ds
xchg
das
mov
xchg
cmp
js
pop
ja
outsb
pop
push
int3
inc
cmpsb
pop
cmp
ret
mov
pop
pop
push
cmc
sbb
popf
ficompl
addr16
leave
cwtl
gs
mov
loopne
mov
jb
clc
push
xchg
lret
aas
sub
mov
and
dec
rol
subl
adc
sbb
cmpsb
fwait
je
push
orl
and
cmp
mov
lahf
jno
pop
xor
comiss
cmp
push
inc
andl
mov
sti
sub
sti
call
cmpsl
fcomp
icebp
add
lods
inc
sub
les
pop
jmp
adcb
ss
outsb
imul
cwtl
xor
es
aad
jbe
nop
ja
sub
repz
movsl
fdivrs
idivl
adc
cld
fcoms
sub
jmp
jmp
cmp
inc
cmp
sbb
sub
mov
or
push
xchg
pop
addr16
dec
pop
fmull
nop
sub
xchg
cld
push
sbb
adc
add
xchg
addr16
fildl
test
notb
rol
sahf
xor
clc
inc
loope
pushf
scas
xchg
push
outsb
jecxz
mov
pop
xor
out
xchg
nopl
cmp
lret
adcl
repnz
mov
movsb
dec
in
inc
push
xor
and
popf
pop
icebp
les
lea
cmpsb
push
imul
mov
mov
mov
cmp
mov
mov
and
repz
leave
ret
sub
xor
cltd
inc
lret
pop
inc
test
ret
or
adc
movaps
andb
lret
pop
call
and
xchg
adcb
dec
popf
enter
cmp
movsl
pop
xor
xor
movsl
sub
sub
push
aaa
test
mov
mov
push
push
pop
orb
adc
jg
out
mov
sbb
out
test
adcl
mov
and
mov
pop
inc
push
add
stc
lods
adc
push
mov
mov
dec
sbb
pop
lahf
adc
inc
mov
push
add
jle
mov
mov
push
add
push
in
mov
addr16
addr16
testl
sub
xlat
enter
jge
dec
dec
cwtl
or
cmp
jns
add
fidivl
movsl
loope
jle
xchg
rcrb
lret
arpl
or
cltd
aad
mov
xor
mov
xor
sub
aam
std
jle
mov
jnp
fwait
into
mov
std
inc
add
mov
dec
rcr
sbb
imul
ss
add
fldl2e
pop
mov
pusha
inc
sti
mov
pushf
in
xlat
test
fs
into
mov
in
addr16
mov
cmp
stos
ss
jle
daa
lret
mov
mov
rolb
jno
hlt
cmp
imul
dec
push
mov
test
sub
std
inc
test
cwtl
push
adc
xchg
mov
xchg
mov
pop
call
inc
adc
in
in
mov
imul
inc
test
in
jo
mov
sub
adc
outsl
enter
shlb
inc
push
xor
ss
dec
sub
call
aas
loop
xchg
xlat
movb
call
out
mov
arpl
iret
sub
cwtl
fcoml
push
aas
aam
or
xor
jg
addr16
xchg
add
or
fldt
or
push
push
and
adc
rclb
popf
xchg
gs
pop
shl
loop
out
pop
add
and
mov
cmpsl
rclb
inc
mov
mov
mov
mov
mov
sub
add
or
rolb
jae
addr16
and
outsb
ljmp
pop
dec
adc
lahf
lret
jp
mov
sub
and
cltd
push
xchg
sbb
or
fmull
sub
adc
push
lods
mov
pusha
shll
scas
lds
jae
and
push
cmp
arpl
mov
mov
sbb
mov
xor
jmp
dec
jne
adc
test
adc
xchg
or
iret
add
or
das
cmp
xchg
push
enter
push
aas
xor
repz
leave
mov
xor
jns
push
jmp
ja
imul
sbb
and
pop
xchg
mov
out
xorl
clc
cltd
sbb
insb
lret
stc
or
inc
dec
push
pop
scas
call
mov
sbb
loop
xor
xorb
sub
mov
in
pusha
and
popa
in
dec
hlt
lea
fnsave
xor
sub
ret
stc
int3
mov
mov
outsl
fdiv
testb
mov
mov
mov
mov
stc
mov
cld
pop
xorl
fs
jae
je
pop
popf
push
fdivrl
scas
clc
pop
inc
inc
mov
jl
mov
clc
xchg
insb
sbb
cmpsl
jns,pt
lock
sbb
xbegin
lahf
out
jns
lock
xchg
sahf
sub
pop
data16
xchg
jns
mov
mov
lock
loopne
mov
jle
loope
dec
std
fnstenv
iret
sbb
push
dec
popf
out
je
mov
adc
xchg
and
mov
push
arpl
sahf
and
and
xchg
and
and
xor
adc
enter
popf
shrb
popf
fld
push
add
or
out
cwtl
pop
subl
mov
mov
pop
daa
cmp
std
pop
fldt
mov
add
popa
dec
mov
mov
fs
icebp
mov
aad
pop
nop
jle
mov
or
inc
cmp
adc
insl
and
mov
dec
mov
lahf
fmuls
adc
adc
add
mov
ss
jge
loopne
adc
xor
les
stc
dec
inc
jno
add
jg
sbb
cli
imul
stos
mov
ss
jmp
movsl
mov
pop
pop
jle
out
repz
sbb
lock
mov
pop
inc
or
lcall
and
dec
mov
mov
or
aad
lods
jl
add
jle
inc
jmp
imul
cwtl
mov
fwait
cmc
xor
in
sbb
out
xor
mov
imul
jbe
popa
push
sti
les
insl
test
fstpt
popa
xchg
inc
add
pop
test
ret
jge
cltd
bound
ja
sub
lcall
mov
scas
das
mov
xor
fiaddl
inc
sarl
sbb
data16
sub
mov
add
mov
insb
adc
test
fdivrs
subl
mov
or
sbb
mov
mov
sub
fisubs
imul
pop
fs
nop
scas
daa
stos
push
es
push
or
ljmp
iret
sti
ja
incb
fwait
incl
jb
int
and
ja
dec
push
dec
dec
movsb
cmpsb
mov
pop
inc
inc
lret
rcrb
jne
lds
or
pop
ficoms
mov
xor
lods
jb
mov
and
cmpl
shll
xor
jnp
in
push
mov
pop
adc
jbe
push
cld
and
jnp
pop
shl
and
jle
insb
or
loopne
ds
aam
xchg
pop
push
cmp
mov
add
pusha
ficoml
cmc
fsubs
mov
ja
aas
add
push
cs
sub
xor
sbb
cmc
iret
pop
scas
sub
jl
fimuls
jnp
test
jnp
xchg
test
testl
mov
out
and
icebp
test
test
cmp
shr
inc
mov
gs
pop
adc
cmp
push
inc
cmpl
loopw
adc
sub
lret
cmpsb
cmp
mull
imulb
xor
enter
repz
and
jbe
aaa
push
das
push
cwtl
sub
cmp
pop
sbb
or
jbe
arpl
nop
push
sub
mov
mov
add
add
cmp
fisubrs
add
add
push
and
inc
ficomps
cltd
aam
fs
test
nop
mov
ret
scas
and
jns
pop
ljmp
and
bound
pop
stos
shlb
clc
jl
jge
sar
rolb
int
sbb
mov
adc
lret
pusha
ficomps
insl
addr16
stc
mulb
mov
pop
pop
mov
xchg
push
sbb
mov
mov
bound
cmp
push
ds
jecxz
sti
jle
xchg
mov
sub
jno
cmpsl
or
sahf
cmp
push
mov
mov
pop
push
repz
mov
mov
inc
cmp
pop
test
in
sbb
xor
push
push
test
pop
ljmp
dec
push
mov
jle
int3
pop
popa
jns
dec
xchg
sbb
aam
in
add
cmc
sbb
insb
xchg
or
aas
int
xchg
push
mov
jb
pop
jl
add
movsl
cmp
shlb
sbb
push
mov
out
mov
bound
into
jns
daa
pop
enter
ret
sub
orl
adc
orl
cmpl
mov
mov
jmp
mov
movzwl
jne
call
xor
sbb
orl
sbb
and
sub
mov
mov
mov
adcl
mov
sub
mov
mov
sbb
cmpl
mov
mov
movl
jmp
movl
movl
jge
pushl
push
push
pushl
call
inc
notl
add
subl
sub
xor
sbbl
mov
orl
orl
xor
lea
mov
mov
sub
mov
adc
mov
orl
add
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
jbe
push
push
push
push
pushl
call
adcl
sbb
negl
and
adc
adc
subl
movl
shrd
xor
shr
cmpl
mov
movl
jmp
movl
jg
call
mov
adc
addl
subl
add
or
addl
and
add
adc
mov
sbb
mov
xor
xor
or
mov
movl
movl
movl
subl
movl
cmpl
movl
movl
jmp
movl
jbe
push
push
call
add
orl
adc
xorl
subl
movl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
push
call
adcl
andl
subl
adcl
addl
sbbl
orl
adc
movl
movl
or
movl
xor
xor
or
mov
movl
movl
movl
movl
cmpl
movl
movl
movl
jmp
movl
jbe
pushl
call
sbb
adcl
sbb
xorl
and
movl
cmpl
movl
movl
jmp
not
jl
pushl
push
pushl
call
sbb
andl
and
addl
sbbl
subl
or
movl
cmpl
mov
movl
mov
jmp
movl
jl
push
call
addl
addl
movl
sbbl
movl
orl
movl
sbb
movl
movzwl
sub
movl
movl
neg
movl
movl
xor
movl
cmpl
movl
movl
jmp
mov
mov
jbe
pushl
call
orl
xorl
or
addl
movl
adcl
and
movl
mov
adcl
shl
mov
adc
mov
mov
adcl
jmp
scas
mov
mov
jno
jne
pop
leave
addr16
or
iret
add
or
xor
push
ds
mov
in
sub
xlat
out
xchg
mov
lock
cmpsl
daa
ja
dec
add
sub
popa
cwtl
jmp
adc
mov
call
rclb
xchg
jge
adc
into
mov
xor
mov
xchg
mov
push
or
stc
leave
in
pop
and
xor
push
shll
add
and
roll
test
test
mov
mov
cmp
pop
push
loope
or
mov
mov
call
sub
test
lahf
rcrb
xchg
adc
mov
roll
in
mov
out
mov
and
lea
xchg
stos
push
and
jbe
rorl
mov
in
fs
int
fs
adc
in
push
push
in
push
add
xor
lea
push
sub
adc
test
leave
push
imul
xor
push
imul
push
in
in
mulb
loope
cwtl
push
sbbb
or
dec
loope
add
add
mov
mov
lret
data16
cmp
jae
icebp
xchg
rcll
call
and
mov
push
xor
hlt
loopne
es
add
test
into
dec
ss
inc
mov
and
out
dec
pop
aaa
in
sbb
sbb
ficompl
leave
sub
add
testl
sub
mov
arpl
pop
nop
stos
add
fcoms
lds
loopne
or
pop
adc
shl
mov
adc
and
mov
or
push
fsubl
xor
inc
lea
sbb
and
pop
inc
xor
jns
push
sbb
filds
cmp
push
mov
jp
xchg
xor
mov
test
mov
push
cmc
leave
mov
adcl
arpl
xchg
cmp
mov
sbb
addr16
fcompl
shlb
loop
mov
lods
adc
xor
sbb
dec
rolb
imul
sbb
sub
jl
les
adc
xchg
mov
inc
adc
and
mov
sub
add
mov
data16
lret
sub
sub
pop
arpl
ljmp
add
or
mov
xchg
aas
sbb
arpl
aaa
in
insl
fwait
in
pop
dec
out
movsb
test
adc
out
lods
in
in
mov
int3
sub
push
xor
lock
scas
lock
ror
mov
insb
or
jnp
roll
imul
xorl
into
mov
rolb
popa
push
inc
in
sub
in
xchg
hlt
lock
out
xor
shlb
sub
shll
adc
lret
shl
xchg
xor
cld
and
and
mov
cld
ret
and
stos
mov
mov
add
inc
fs
mov
mov
sub
cmpl
scas
aas
rclb
test
pop
cmp
test
stos
fdivp
pop
imul
jae
test
cltd
or
ret
xchg
and
sub
jl
and
sub
and
push
sbb
mov
in
cvtsd2si
adc
imull
mov
lods
pop
int3
mov
aaa
mov
shll
jae
pushf
ljmp
jae
insb
add
sbb
push
fcomi
subb
and
pop
je
mov
test
movsl
daa
mov
repz
lock
dec
and
inc
scas
mov
dec
cmp
fistpl
es
cmpsl
test
jb
sbb
cmp
fsubl
mov
mov
das
sahf
repz
mov
lea
das
test
mov
mov
std
fbstp
dec
fisubl
loopne
pop
sub
iret
sbb
rclb
push
movsb
add
lcall
idivb
push
rorb
in
and
aaa
xchg
ja
push
popf
stc
jg
addr16
cmp
sbb
sbb
loope
repnz
cmp
dec
ret
mov
push
shrb
xchg
xorb
add
popf
es
xor
add
mov
mov
cmp
test
push
fdivrs
mov
mov
lret
adc
mov
sbb
or
sbb
xchg
out
push
lods
lds
int3
or
imul
fsubs
sub
movsl
sub
lea
out
jo
push
stos
in
in
fisttpl
test
shrl
out
lret
xor
adc
gs
add
ds
push
push
lahf
pop
call
int3
cs
int
test
movd
adc
les
sub
sub
mov
push
adc
push
pop
aad
pop
dec
ret
xor
cmc
push
jb
pop
rorb
out
sub
loopne
push
imul
sbbl
push
push
push
call
adc
mov
movl
mov
movzbl
add
xor
jmp
push
xorl
in
mov
or
add
or
jp
and
loop
bound
inc
mov
push
shlb
loop
and
sbb
dec
pop
or
jo
and
fimuls
in
or
cmc
add
decb
call
mov
fmul
mov
add
add
mov
and
test
cmc
jl
jge
xlat
dec
push
jno
mov
cmp
add
icebp
mov
test
aaa
cmp
lret
stc
mov
pop
aad
and
inc
sahf
jle
xchg
outsl
cmpsb
js
ret
out
lea
pusha
and
cli
divb
dec
out
inc
pusha
scas
mov
push
aas
mov
testl
pop
outsl
lcall
lea
sbb
jecxz
push
orl
icebp
inc
in
lds
aaa
sar
gs
pop
or
in
lds
push
test
sbb
clc
dec
jecxz
fisttps
cmp
lods
test
aaa
dec
call
repnz
inc
rorl
mov
dec
mov
sub
dec
nop
inc
jbe
aaa
mov
jmp
adc
or
jne
aaa
mov
insb
add
dec
or
ret
lahf
lret
addr16
test
push
jecxz
mov
into
test
das
pop
adc
push
test
movl
outsl
testl
inc
or
hlt
xchg
cmpl
mov
jge
flds
loop
dec
adc
sti
mov
dec
mov
jbe
insb
jmp
lds
pop
mov
jb
cmp
adc
movsb
add
aaa
cmp
adc
mov
in
xor
ss
int
cwtl
fs
out
daa
shlb
xchg
xorb
push
test
mov
out
stc
es
fnsave
xchg
das
push
std
cli
int
pusha
xlat
jnp
popf
scas
push
jns
push
adc
pop
pusha
insl
mov
jne
test
lods
lahf
cmc
add
pop
pop
dec
out
lock
lds
pushf
ret
mov
inc
or
add
je
repz
rorl
xchg
jns
mov
mov
mov
mov
sbb
mov
decl
addl
test
push
sahf
in
cmc
mov
inc
int3
xchg
loope
mov
int
adc
lock
mov
scas
mov
mov
sub
add
adc
pop
icebp
cmpsb
insb
fidivl
leave
or
jmp
dec
fsubs
xchg
push
dec
and
test
jmp
scas
scas
inc
adc
ret
sub
and
sub
dec
insl
adc
jmp
lcall
popf
repnz
sub
pop
xor
outsb
stos
xor
mov
inc
sub
notl
cltd
inc
aaa
cli
sbb
mov
movsb
push
pop
jnp
push
pop
sbb
mov
sub
jle
loopne
push
daa
rcrb
popf
sub
push
jb
dec
sub
test
cmp
es
mov
mov
mov
outsb
arpl
xor
outsb
jmp
pop
outsb
inc
xchg
jae
jb
jne
add
in
pop
imul
pop
push
sti
jge
out
push
out
mov
or
out
mov
sbb
pop
push
in
xchg
loop
sahf
mov
lock
cmp
jo
inc
add
pmaxub
int
jno
mov
cmp
enter
inc
pushf
repnz
mov
mov
inc
aad
out
mov
roll
fdivl
jbe
cs
inc
xchg
mov
mov
lcall
les
rclb
xlat
cmp
lea
inc
mov
cwtl
jne
pop
mov
adc
in
xor
fdivs
add
sub
in
in
xchg
or
and
sbb
loop
jns
or
shll
inc
jmp
and
xchg
pop
push
mov
push
aaa
mov
gs
adc
mov
sbb
fidivl
ffreep
sbb
out
push
jnp
mov
subl
and
or
push
pop
mov
mov
inc
pop
rorb
aad
popa
mov
adc
cs
mov
mov
fsubr
lcall
je
icebp
xor
andb
fildll
dec
lret
dec
sub
lock
fcmove
das
jp
adc
dec
inc
jbe
das
jle
adc
mov
and
push
int3
inc
fists
data16
lret
outsb
mov
sahf
and
and
xor
ret
adc
loopne
cli
and
cltd
dec
sbb
sbbb
mov
and
mov
adc
mov
cmpsl
call
mov
xchg
adcl
mov
in
push
in
sbb
addr16
adc
mov
xchg
mov
push
xchg
ret
adc
push
cmc
inc
fs
jg
push
xlat
push
dec
orl
std
adc
adc
xchg
adcl
mov
subl
in
mov
jg
lods
sbb
fimull
clc
jecxz
pop
mov
mov
sub
adcl
mov
lea
xor
xor
or
jmp
enter
xor
mov
add
jae
rorb
or
add
or
gs
jecxz
lods
dec
test
test
loop
xchg
add
inc
fistpl
notl
xchg
add
mov
jne
jno
sbb
out
in
outsl
shr
stc
inc
pop
push
inc
ret
cmp
cltd
mov
inc
je
call
std
xchg
divb
push
pop
int3
pop
jge
mov
in
xchg
roll
ja
xchg
sub
ds
mov
mov
stos
clc
cmc
dec
adc
adc
mov
lret
or
scas
out
daa
dec
out
xor
and
cli
out
lds
rcrl
fidivs
cmp
mov
rclb
pop
mov
lret
or
jge
fdiv
loopne
jno
lods
stc
mov
mov
movsl
std
xchg
scas
testl
add
xor
cld
add
pop
cmpsb
jbe
outsl
cmc
jmp
aad
scas
pop
xchg
jmp
lea
push
push
xchg
rolb
fwait
xchg
aaa
lods
mov
lods
das
pop
repnz
or
aam
jecxz
push
fiadds
decl
into
mov
sub
enter
mov
fcmovne
sub
clc
add
bound
inc
fisubl
xor
inc
pop
cmp
dec
movsb
divl
pop
sub
mov
dec
adc
fcomps
push
jmp
adc
cs
outsb
hlt
mov
faddl
test
sub
outsl
iret
xchg
out
add
inc
mov
inc
cmc
dec
stos
bound
pslld
fnstenv
rcll
in
cmpsl
bound
mov
pop
into
jmp
daa
xchg
insl
sbb
imul
jl
dec
xor
shlb
mov
test
ret
das
jno
and
js
adc
mov
cmpsl
fdivs
in
fwait
mov
push
out
push
xchg
mov
fsubl
cmp
fnstenv
sub
in
and
jno
push
jne
push
aad
mov
stc
mov
lea
xor
push
inc
mov
sbb
movsb
dec
leave
cmpsb
and
outsl
and
loopne
cltd
int
rorb
movsb
insl
xor
xlat
push
cli
or
rcrb
in
jbe
sbb
and
sbbl
mov
mov
dec
sahf
add
mov
jg
add
mov
mov
cmp
cld
pop
dec
xor
add
dec
into
ss
push
imul
pusha
into
arpl
sub
call
jno
mov
imul
addr16
popf
lahf
sub
and
movsb
adc
sub
test
pop
cmp
and
dec
sub
dec
mulb
fs
sbb
mov
test
pop
jecxz
lods
cmp
int3
enter
leave
inc
add
fdivrs
cmpsl
cmc
sbb
gs
pop
add
and
sbb
in
mov
pop
je
test
and
ret
sahf
mov
mov
data16
hlt
enter
clc
xor
mov
ja
cmp
jo
loope
mov
dec
jb
push
scas
sbb
imul
lds
adc
pop
mov
ficoml
lea
lret
loopne
sub
sbb
fs
aas
js
sbb
data16
sub
fldcw
xchg
dec
out
adc
xor
and
cmp
sub
ds
ja
jp
inc
repnz
scas
mov
adc
pop
inc
mov
mov
fistpl
in
push
add
jg
inc
dec
cmp
jb
sub
push
cli
repnz
mov
adc
fs
aad
test
xchg
xchg
les
scas
push
arpl
pop
ficoml
test
xchg
sar
sti
mov
mov
imul
xchg
daa
sbb
ror
push
das
push
lcall
push
xor
jmp
mov
lds
xlat
ljmp
inc
adc
jecxz,pt
lods
or
lret
adc
cltd
decb
push
sub
fildl
icebp
cmp
je
push
adc
push
jns
mov
gs
cmpsl
mov
lock
iret
pop
add
xorb
fists
mov
sbb
inc
add
sahf
add
fdivr
push
mov
mov
repnz
fadds
or
ljmp
pushf
xor
pop
mov
pop
add
jmp
jno
inc
jb
mov
ja
cmp
cmp
sub
cmp
pop
dec
stos
scas
loop
cld
adcl
cmp
repz
dec
push
xchg
jge
mov
sub
cmp
cs
les
add
xlat
sbbb
rcrl
negl
xchg
clc
push
jae,pn
cmc
mov
dec
pop
mov
loope
cmp
inc
xchg
gs
fnstcw
xor
xor
icebp
add
jg
stos
enter
push
pop
mov
dec
xchg
and
int
fimull
shl
inc
sti
mov
mov
jbe
sub
sub
out
sahf
add
jb
out
aas
ficoml
xchg
lcall
and
fisttpll
aam
leave
add
add
lret
push
int3
xorl
or
xor
movl
cmp
movl
jne
mov
adc
mov
xor
shrd
adc
jmp
cs
push
loopne
lahf
pop
and
adc
or
add
or
adc
in
or
lahf
add
pop
aam
sbb
subb
mov
add
mov
mov
xchg
jae
jo
js
jl
or
sub
mov
cli
and
decb
xor
sbb
jmp
sbb
mov
mov
jge
sub
pop
scas
popf
rolb
test
repnz
xchg
das
push
fwait
les
notb
jg
out
push
jae
in
or
scas
imul
aam
jge
stos
repz
inc
jl
data16
outsb
push
cmp
jecxz
and
sbb
arpl
fxch
data16
dec
fst
cli
sti
and
fistl
pusha
es
mov
inc
fcompl
mov
xchg
push
int3
pop
adc
cmc
push
adc
dec
insl
int3
mov
loopne
adc
sbb
test
push
mov
shlb
or
xchg
ficoms
sub
push
sbb
ret
sbb
dec
hlt
xor
movsl
inc
adcl
mov
sbb
rolb
mov
xor
insl
hlt
xchg
je
insb
and
mov
jns
in
xor
adcb
shrl
call
mov
push
jmp
rorl
in
mov
stc
mov
add
cld
test
shll
aam
xchg
das
push
cmp
xchg
in
xchg
clc
leave
pop
mov
cmp
sbb
fdivrs
test
cltd
movsb
mov
xchg
and
cld
cli
push
jmp
add
les
addl
clc
pop
daa
pop
les
push
fldenv
sub
mov
jge
adc
mov
cwtl
pushf
xorb
test
shrb
jb
cwtl
mov
cmp
testb
icebp
dec
jp
ljmp
outsb
insb
test
imul
add
lds
cmpsl
inc
clc
repnz
add
lretw
sbb
dec
sub
adc
mov
xor
cmp
es
add
inc
cmp
and
daa
mov
xchg
push
push
outsb
mov
decl
fbstp
leave
cmp
adc
addl
fsincos
inc
or
and
xor
and
jns
aas
stos
push
out
adc
scas
mov
nop
les
mov
fiaddl
cli
movsl
les
push
xor
test
mov
aad
shll
jp
push
push
jb
xor
imul
add
push
xor
mov
aaa
cmp
stos
cmpsb
daa
ret
push
roll
icebp
sbb
out
pop
pusha
pop
addr16
or
imul
mov
cmp
stc
sbb
jno
sub
cmc
fs
fnstsw
mov
jmp
or
push
aam
rcll
pop
nop
mov
std
jmp
cmpsb
lock
and
push
mov
lock
pop
or
repz
pop
cmp
and
mov
shlb
data16
pop
xchg
cmp
xchg
packssdw
incb
xchg
loop
es
shl
loop
jp
cld
shll
sub
iret
xor
out
movsl
push
test
sbb
mov
js
jecxz
int3
cmp
mov
or
cmpsb
out
xchg
jne
das
push
fsubs
cwtl
jae
lret
pop
in
dec
lods
mov
add
ret
pusha
mov
xor
fucom
dec
xor
popa
arpl
ret
jo
sbb
cli
add
or
mov
shll
inc
mov
or
mull
icebp
orb
test
adc
add
xchg
out
adc
aas
sbb
imul
dec
negl
inc
push
inc
das
xchg
ret
dec
popf
sbb
lret
cmp
cld
dec
je
addr16
js
pop
adc
mov
mov
pop
mov
into
xor
pop
lock
pop
dec
fsubl
mov
sbb
cmp
mov
inc
mov
lcall
loope
in
adc
lcall
lea
sbb
pop
and
push
fisttpl
jge
stos
and
sbb
shl
inc
rcr
lea
push
adc
lret
push
fistpl
loopne
jb
and
push
inc
sbb
and
sub
fs
and
pop
mov
and
xchg
loop
push
addr16
loopne
loopne
xchg
ficompl
sub
xchg
sub
cmp
mov
repz
lods
pop
adc
ds
xor
xor
sbb
cs
adc
fwait
pop
fnstsw
xor
adc
jle,pt
sub
cmp
adc
dec
imul
hlt
les
mov
add
add
xchg
push
xchg
push
jmp
push
cmp
mov
inc
popf
cli
sahf
dec
ljmp
pop
or
cmp
jb
pop
mov
loop
inc
xor
daa
int
fldcw
or
adc
push
jnp
gs
mov
ffreep
mov
in
decl
scas
push
das
push
cmpsl
inc
into
aam
sbb
ljmp
shll
add
mov
sub
imul
mov
or
mov
shl
adcl
xor
xor
sbbl
or
mov
mov
cmp
jne
or
mov
sbb
mov
cmpl
mov
movl
movl
jmp
mov
jg
pushl
push
pushl
push
pushl
pushl
call
adc
xor
mov
or
adc
and
xor
movzwl
add
mov
mov
add
mov
incl
shrd
negl
mov
mov
and
mov
xor
shr
mov
xor
or
shl
cmpl
mov
mov
mov
movl
jmp
movl
jl
pushl
call
and
andl
sub
orl
sub
mov
subl
mov
mov
xor
add
subl
jmp
xchg
and
inc
xchg
arpl
mov
enter
add
or
sub
ljmp
addr16
mov
jno
push
mov
mov
pop
cli
enter
rcr
test
mov
jge
dec
xor
adc
xor
inc
repnz
mov
sbb
cmp
mov
and
rorl
push
loope
fs
add
insl
test
je
jmp
call
hlt
adc
outsb
loop
icebp
popf
cvtps2pi
push
mov
insl
or
push
mov
pop
outsl
xchg
in
or
sbb
lds
je
jnp
sub
jle
sub
xor
push
adc
pusha
enter
cmp
lret
out
xchg
inc
arpl
mov
xor
push
mov
sbb
fwait
xchg
jmp
out
jbe
jnp
push
push
aaa
pop
stos
add
mov
loopne
mov
adc
out
push
push
fdivl
and
out
mov
les
insb
daa
inc
pop
push
mov
and
adc
scas
sarl
rorl
je
aas
popf
ja
lret
ja
add
jae
fcomi
push
adc
sbb
dec
push
mov
dec
sub
fs
sub
aas
xor
add
sbb
int
addr16
xchg
pusha
or
sbb
ds
xor
movsl
clc
clc
cwtl
adc
mov
lock
xor
test
jbe
ret
sub
jo
pushf
fdiv
sub
clc
les
lahf
inc
sub
and
aas
add
or
jmp
add
stc
xchg
push
xchg
insb
pop
mov
inc
add
mov
sub
adc
pop
push
xor
pop
std
aam
int
sbb
xchg
xchg
fdivl
stos
push
sub
jecxz
mov
sub
xchg
stos
fadd
sub
insb
mov
inc
fisttps
mov
leave
out
add
sub
xor
addr16
aas
push
dec
loopne
ret
lds
and
inc
xchg
mov
xor
aas
lods
lcall
sarb
outsl
push
jnp
daa
ret
push
and
push
push
xchg
fwait
or
push
mov
int
mov
addr16
or
mov
mov
cld
scas
xchg
in
out
ja
sub
lock
and
lcall
je
xchg
push
nop
xchg
push
loopne
popa
xchg
mov
pop
adc
inc
mov
scas
push
xor
pop
and
push
cli
cmpsb
and
mov
bnd
sar
roll
or
cmpsb
and
cmp
movsb
test
mov
xor
inc
stc
mov
aad
cmp
sub
and
mov
lahf
icebp
mov
in
mov
out
into
xchg
sbb
repz
adc
lea
push
fstp
int3
mov
aad
ret
movsl
imul
cmp
and
pop
mov
cmp
xchg
xchg
sbb
leave
cs
js
mov
push
mov
insb
shlb
xlat
add
inc
enter
shll
xlat
push
pop
aam
out
inc
in
or
push
or
dec
mov
lock
iret
cmpsb
pop
jge
jle
jle
aas
mov
xchg
sbb
idivl
pushf
push
jo
mov
iret
popa
fs
in
and
pop
out
pop
lea
ljmp
lock
xlat
pop
push
mov
xchg
add
inc
or
dec
sub
test
mov
aam
sahf
fildl
jbe
scas
js
insb
push
into
stc
std
subl
cmp
shll
and
mov
dec
cmp
shll
mov
xchg
mov
sahf
in
xchg
in
fcom
jae
pop
fwait
pop
ret
insl
mov
dec
jp
shlb
cld
sbb
je,pn
lret
or
dec
mov
add
mov
pushf
mulb
test
loopw
stc
nop
aad
loopne
mov
pop
std
or
lahf
mov
daa
aas
jne
pop
add
insl
cmpsb
or
jle
and
push
outsb
push
and
movsb
pop
add
ficomps
ret
sub
inc
mov
insl
jl
test
or
and
mov
push
insb
sub
mov
push
cmp
pop
adc
pop
mov
aam
cmp
jae
cmp
sar
out
imul
les
pop
call
test
cmc
adc
inc
xchg
sub
mov
and
insb
call
test
leave
mov
cmpsb
xchg
inc
popf
shl
cmp
jb
xor
jae
out
scas
sbb
jecxz
scas
push
aam
les
pop
inc
enter
in
adc
fs
lcall
mov
fwait
inc
fwait
sbbb
mov
xor
sti
jmp
aad
cmp
adc
gs
in
cs
cmp
roll
mov
inc
in
mov
mov
shrd
movzbl
and
mov
shr
andl
mov
xorl
mov
xor
add
jmp
pop
push
mov
mov
pop
adc
sub
fidivl
or
push
loope
cmpsb
scas
cmp
mov
xchg
mov
int3
push
push
cmp
jbe
and
sub
add
nop
cmpsb
das
inc
ret
addb
jp
sbb
hlt
stc
push
inc
insb
xor
dec
bound
or
fs
addb
pop
notl
je
sti
lret
leave
jecxz
jne
cltd
in
test
cwtl
inc
sarb
xchg
jp
mov
es
sub
cmp
jmp
mov
jbe
les
adc
lret
mov
or
repz
imul
pop
rorb
cmp
mov
test
dec
mov
xchg
cmpsb
mov
lods
lahf
js
jl
pop
push
lods
outsb
mov
and
shll
jmp
and
push
lret
dec
or
xor
inc
xor
icebp
pop
pop
inc
insb
or
movsb
js
jmp
mov
ss
loop
std
and
cmp
dec
dec
inc
ja
inc
or
cmp
test
and
jbe
mov
mov
inc
add
sbb
rcl
mov
mov
sbb
and
or
or
jg
or
cli
inc
lcall
arpl
mov
pop
bound
mov
sbb
imul
outsb
clc
push
push
shrb
aad
mov
sub
sbb
cmp
pop
ds
js
jmp
sti
cmpsb
dec
dec
leave
incl
jno
ja
push
xchg
stos
pushf
push
cmpsb
popa
in
jbe
add
fnstcw
das
mov
sahf
add
dec
mov
popa
pop
push
ret
bound
xchg
aas
inc
mov
inc
mov
fimuls
int3
insl
jne
cmp
dec
sub
das
add
jge
jp
pushf
push
pop
mull
cwtl
maskmovq
negl
je
mov
xor
cmp
jo
lods
jge
pop
push
push
mov
popf
dec
xchg
dec
xor
je
and
lret
mov
lea
into
aad
mov
out
subl
pop
inc
std
push
bound
xor
ss
les
xchg
jno
inc
bound
sub
cmp
or
rclb
pop
cld
shlb
cmpsl
push
scas
pop
mov
adc
inc
push
stc
xor
ds
cmp
jb
xchg
push
inc
js
fwait
mov
adc
jecxz
fcom
fldt
xchg
ret
sbb
filds
data16
jnp
aas
cmp
imul
pop
cli
lahf
lahf
jg
cltd
sbb
add
nop
push
or
push
xor
leave
cli
popa
test
pop
cmp
rorl
lcall
pop
sub
ficomps
ss
xchg
push
mov
pop
add
jae
insl
repz
movsb
scas
push
sub
fnstcw
sarl
jmp
lock
sub
ja
add
mov
adc
xor
sub
or
in
push
stc
xchg
adc
imul
sti
popa
popf
jg
aam
pop
test
rcr
adc
aad
mov
inc
ja
jg
ljmp
cmp
mov
mov
push
jg
dec
sub
or
stos
data16
mov
xor
call
mov
je
ja
sub
push
xchg
xchg
xchg
sub
movsl
nop
pop
push
mov
mov
int3
imul
in
cmp
or
push
add
lods
sub
lcall
std
mov
mov
pop
pop
cmc
push
mov
and
mov
add
inc
sub
and
adc
aas
bound
mov
sub
rolb
jnp
lock
mov
out
and
rorb
inc
and
notb
sub
mov
sub
aad
imul
ljmp
popa
and
daa
ss
sub
imul
mov
and
xchg
pusha
sub
cmp
lcall
lret
mov
out
movsl
ret
jno
jge
outsb
je
add
insb
aam
push
std
scas
jns
loop
inc
fildl
mov
test
shr
test
xlat
mov
cmp
test
je
jl
adc
sbb
fnstcw
and
xor
fmuls
jns
adc
sbb
enter
cs
aaa
insb
cmp
push
ds
sub
clc
dec
mov
xor
mov
gs
dec
sbb
popf
hlt
pop
ret
icebp
lods
ss
fidivs
dec
dec
pusha
movsl
fsubs
dec
lea
cli
lods
aas
and
das
repnz
xor
pushf
push
out
popf
mov
mov
leave
pop
bound
add
xchg
push
cmovg
mov
and
rorb
jle
pop
mov
mov
pop
aaa
xchg
or
mov
push
icebp
setb
jecxz
xchg
mov
sbb
clc
sti
inc
stc
mov
jge
add
mov
mov
adc
int3
and
mull
mov
cwtl
and
inc
pop
push
das
hlt
out
int3
cmp
outsb
and
lods
shl
xor
addl
or
sub
mov
mov
adcl
shrd
shr
andl
mov
cmpl
movzbl
movzwl
not
jmp
mov
movzbl
jb
call
sbbl
or
and
or
xor
add
mov
sub
xor
sub
orl
mov
mov
xor
xor
decl
or
jmp
add
ret
jge
pushf
xchg
mov
fs
mov
scas
or
iret
add
or
fimull
adc
push
adc
and
scas
popf
ret
mov
lret
mov
dec
xchg
xlat
ficomps
hlt
ss
dec
mov
add
repz
and
je
xchg
add
add
xor
or
lods
dec
std
sub
out
bound
popf
xchg
dec
xor
mov
pusha
sub
mov
push
stos
cmc
loope
push
push
mov
jb
mov
cmp
mov
in
or
add
fcmovne
pop
jae
ficompl
mov
jp
sub
out
pop
xlat
mov
movsb
mov
int
jno
movsl
cld
adc
jmp
aad
jl
roll
xchg
pop
xchg
cltd
and
lods
and
inc
add
shr
mov
mov
and
movsb
stos
or
loop
xlat
sahf
stc
js
test
lea
mov
mov
xchg
sbb
push
in
cmp
sub
cmp
nop
jae
add
cs
cmp
iret
loopne
jns
push
pusha
bound
es
ljmp
or
jl
loop
arpl
sub
clc
insl
push
mov
es
js
mov
mov
pop
sti
loopne
js
mov
mov
pusha
jae
pushf
lea
dec
xor
iret
movsb
jp
jae
jle
jge
mov
aam
out
cmp
outsb
dec
mov
testb
aad
xchg
scas
push
fimull
cld
sarl
rcrb
paddw
add
mov
adc
mov
loop
inc
pop
jb
ficoms
pop
jmp
and
xor
clc
lods
add
push
cmc
aas
fcomps
daa
push
fwait
cmp
mov
push
mov
jo
sahf
push
lahf
mov
jmp
push
lret
sbb
lock
inc
das
inc
push
lods
scas
jle
leave
out
cmp
sbb
jnp
adc
sahf
jg
xchg
or
test
fistps
rcrl
in
and
push
xchg
pop
clc
jmp
in
add
test
and
mov
cmpsl
scas
dec
imul
imul
in
pop
incl
shrb
pop
shlb
dec
mov
out
test
repz
insl
stos
arpl
jnp
push
push
stc
pop
les
adc
imul
mov
sub
xlat
dec
mov
mov
outsl
xchg
aas
mov
out
jl
fdivrp
jnp
nopl
sbb
sbb
sbb
clc
mov
sub
mov
mov
iret
mov
cld
mov
iret
lods
sbb
or
gs
sti
cmp
in
jmp
pop
and
insb
fst
pop
out
outsl
shr
inc
inc
and
lods
mov
mov
push
fcmovne
and
daa
jg
lret
pop
xor
jecxz
mov
enterw
cmc
and
adc
imul
imul
shrb
aaa
fldenv
imul
orb
xor
mov
push
push
imul
in
lret
jbe
ja
jg
push
cmpsb
fnstsw
mulb
add
arpl
inc
pop
std
push
movsl
mov
adc
and
pusha
jnp
imul
inc
stos
xchg
inc
xchg
push
test
lods
push
pop
into
xchg
or
xchg
push
nop
sahf
add
pop
cmpsl
inc
and
jbe
sub
in
bound
dec
out
stc
cmp
jnp
in
mov
mov
cmp
imul
mov
scas
mov
mov
and
sbb
push
mov
xlat
leave
or
add
push
push
shll
jmp
cmp
test
jmp
xor
mov
pop
out
sbb
jl
cli
xor
dec
sbb
iret
add
xchg
jmp
nop
test
out
xlat
cmp
ret
mov
pop
inc
and
mov
into
cmpsb
or
les
lock
push
xlat
push
scas
repnz
sbb
inc
cmp
xchg
mov
jle
add
fcomi
push
pop
inc
jl
mov
outsl
jle
mov
or
xor
pop
dec
and
jo
int3
add
shrl
inc
pop
add
lock
leave
xchg
cmp
aaa
sbb
fnstcw
pop
mov
dec
xor
popf
movsl
jno
dec
or
cmove
aad
rorb
lahf
rcrl
push
mov
arpl
dec
mov
push
fsubs
je
mov
jne
cmpsb
lock
mov
xchg
stos
loope
cmp
mov
scas
push
imul
repz
adc
fildll
inc
out
js
dec
sbbl
bound
mov
mov
xor
mov
adc
imul
mov
test
and
add
cmp
xor
insl
cmc
ret
mov
or
into
lods
xor
call
add
adc
shl
subl
lea
xor
mov
mov
adcl
shrd
sbbl
shr
jmp
arpl
and
add
addr16
jns
push
lcall
push
call
cld
call
add
clc
in
mov
pop
nop
out
mov
movsl
push
lahf
lret
add
xor
pop
adc
and
adc
add
jmp
pop
push
loop
and
popa
xchg
daa
sbb
imul
fcoml
and
mov
dec
test
sbb
or
dec
ds
adcb
test
out
lret
xor
add
aas
inc
arpl
shll
mov
sahf
cmpsb
mov
outsb
adc
inc
and
push
icebp
xlat
sbb
xchg
arpl
dec
lock
sub
inc
inc
xor
idivb
pop
movl
xchg
ret
fiadds
mov
adc
xchg
je
jge
add
fcmovnbe
cld
aas
test
into
imul
out
cld
aaa
pushf
int3
cltd
dec
pop
lds
test
xor
jae
push
inc
int3
roll
xor
out
pop
dec
outsl
jno
add
cmp
dec
loope
pop
or
mov
pop
mov
sahf
fisubs
pop
adc
mov
sbb
mov
sbb
xor
in
call
fdivrl
pop
mov
and
xor
inc
sti
pop
pop
jp
mov
xor
sarl
sub
je
jg
inc
sbb
adc
or
testb
jno
mov
inc
hlt
clc
popf
inc
lock
inc
jo
insb
imul
dec
cmc
lds
or
mulb
fsubrl
ds
mov
shlb
and
fcmovb
jnp
popf
sub
add
sbb
xchg
cli
push
mov
jl
stc
lahf
sahf
xor
pop
mov
ss
pop
xlat
pop
and
xor
mov
bswap
sbb
cld
insl
into
xchg
inc
stos
dec
lret
xchg
out
fs
test
sub
or
fildll
dec
lcall
lea
icebp
lcall
fldt
out
popa
pop
mov
pushaw
and
jo
fwait
xor
aad
pop
push
dec
xchg
popa
adcl
cmpsl
lcall
icebp
adc
hlt
xchg
test
push
mov
int
shl
arpl
or
push
or
lds
xlat
push
and
shlb
je
inc
xchg
in
cs
int3
jmp
jns
decl
leave
into
cmp
enter
cmc
xchg
and
cmp
fnstcw
sub
mov
xor
stos
pop
aam
jp
push
push
leave
clc
pusha
roll
xchg
scas
add
ficomps
cwtl
fmuls
adcb
xchg
cmp
push
push
mov
scas
cltd
jge
inc
mov
fnstenv
adc
scas
bound
rcrb
sub
or
mov
bnd
jle
ds
ret
cmp
fadds
imul
push
sbb
jae
stc
repz
sub
mov
inc
fists
iret
rcrl
sub
xchg
xchg
js
dec
shrb
fcoms
scas
loop
mov
cmp
pop
test
or
jno
jno
and
mov
out
das
cmc
push
sub
cmp
pusha
add
fdivrl
xchg
inc
out
pop
mov
sbb
lds
hlt
movsb
shrb
push
rorb
mov
sbb
mov
jecxz
push
cmc
jo
and
dec
sub
fidivl
loopne
push
out
push
mov
int
xlat
push
icebp
fcoms
loop
ret
sar
fmuls
mov
imul
and
mov
and
sub
das
inc
or
xchg
dec
enter
mov
pop
sub
push
lcall
cltd
shr
lret
dec
jp
fs
lods
xchg
movsb
pop
popf
outsb
inc
adc
cld
dec
sbb
push
xor
out
mov
or
dec
lahf
cmpsl
mov
insb
xchg
xchg
es
shll
movb
jae
cltd
addr16
std
xor
and
lds
jg
jg
rcll
sahf
cli
mov
mov
les
xchg
push
leave
push
mov
mov
and
mov
leave
stc
rol
les
xor
push
xchg
in
sbb
and
cmpsb
inc
or
xchg
subl
outsb
ljmp
xchg
orl
out
loopne
pop
or
aam
sub
rcr
push
test
xchg
push
outsl
push
test
push
pop
ror
mov
xchg
fnstsw
jle
cmp
adc
pop
push
flds
cwtl
sub
nop
push
cmp
jae
notb
sahf
xor
adcb
ret
add
cmp
lds
call
push
lock
push
sbb
cli
mov
rcll
mov
repz
push
cmpsl
sti
pop
mov
mov
in
pop
pusha
mov
sahf
sub
push
dec
test
push
fildll
xlat
lds
inc
inc
add
repnz
sbb
je
stc
test
repnz
mov
cmpl
mov
movl
jmp
mov
jbe
push
push
pushl
push
pushl
pushl
push
call
mov
mov
sbb
movl
sbbl
adc
mov
or
or
mov
sub
mov
xor
cmpl
mov
not
jmp
movl
movl
je
push
push
call
sub
not
movl
neg
and
movzbl
and
mov
sbbl
xor
adcl
jmp
pop
lea
or
xchg
dec
dec
mov
mov
xor
xchg
or
iret
add
or
push
push
xchg
adc
mov
add
shlb
pop
add
clc
gs
ficoms
lcall
in
shll
pop
call
xchg
call
lods
mov
and
push
ss
sub
js
packuswb
cs
pop
cltd
mov
push
jbe
ss
bound
stos
adc
rclb
jl
ss
inc
pop
ljmp
lock
lahf
cmc
ret
pushf
and
xor
mov
pop
push
xor
adc
sub
divb
jnp
add
cmpsb
cmc
add
loopne
pop
das
mov
jbe
mov
insb
cmp
shrb
xchg
inc
xchg
leavew
out
ret
leave
clc
loop
pop
mov
inc
or
aam
pop
adc
adcl
jg
push
and
push
jns
jle
imul
and
andb
adc
mov
int
pop
cmpb
clc
ss
push
xor
divl
jnp
mov
or
into
lcall
xor
dec
popf
mov
fldenv
in
outsl
push
jmp
addr16
xchg
xor
loop
test
in
sub
icebp
fmull
cmpsl
stc
cmpb
gs
call
iret
and
psrad
lds
lock
sbb
bound
jmp
sub
cmc
inc
sarb
push
test
add
scas
pop
bound
add
ljmp
ds
sub
es
int3
jae
repz
and
or
call
add
sbb
flds
xor
mov
inc
xchg
movb
popa
pop
in
mov
or
or
clc
xchg
xchg
incl
push
sbb
aam
fistl
sbb
pushf
push
sub
sbb
jae
cmp
jmp
mov
popa
cmp
xchg
adc
and
xor
xlat
lret
push
sbb
scas
cmp
push
ja
adc
push
mov
jecxz
mov
loope
sbb
mov
push
icebp
or
das
popa
inc
cltd
push
pop
insl
add
test
aam
ret
xchg
cwtl
pop
push
and
sub
push
in
mov
fdivrs
pop
and
shlb
sahf
lods
and
xor
pop
imulb
ss
push
jl
sbb
sub
orl
fistps
lret
jge
aad
xchg
xlat
or
int
or
fsubr
xchg
xchg
mov
decb
jno
loopne
icebp
les
call
push
icebp
fstl
mov
mov
dec
cmp
jae
xchg
loope
cmp
ja
imul
jmp
xor
fidivrl
cmp
aad
push
gs
add
or
mov
sbb
jae
subl
lret
and
aas
mov
mov
push
pop
imul
xchg
iret
inc
adc
xor
add
push
adc
dec
call
jg
inc
fistps
jp
pop
xchg
das
push
mov
out
in
xchg
push
mov
or
push
lds
adc
jg
dec
cli
mov
hlt
ret
sub
mov
sbb
pop
or
inc
inc
mov
xchg
mov
shrl
xor
lds
out
sub
add
dec
je
fwait
leave
aam
or
shlb
pushf
cmpsb
es
fstl
nop
int3
mov
out
add
icebp
mov
push
sahf
mov
push
enter
insb
in
mov
add
inc
mov
pop
test
xor
insb
shll
inc
push
iret
or
push
bound
test
xor
enter
inc
pop
or
pop
loope
push
sbb
sub
cmp
out
sub
outsb
add
repz
mov
xor
nop
pushf
and
insb
sbb
pop
jmp
nop
loop
sbb
xchg
inc
mov
mov
gs
mov
nop
cs
fdivrs
divb
mov
loopne
sbb
aas
dec
add
orl
push
cltd
mov
andl
and
mov
cmpsb
mov
lret
cs
out
pop
inc
add
shll
inc
jp
dec
gs
pop
push
inc
stos
sbb
jo
rclb
and
jge
insb
pop
cmp
dec
cmp
pusha
fcomp
push
dec
push
xchg
psrlw
es
push
lret
pushf
outsb
sub
je,pn
push
loope
mov
cmp
sub
insl
cmpsl
sub
push
fdivrl
aad
mov
mov
push
jae
clc
sbb
push
jno
or
fiaddl
lds
bound
jge
neg
cmp
stos
pushf
and
fnsave
push
jno
adc
push
mov
cmc
mov
inc
jecxz
scas
gs
jmp
mov
stos
in
pop
sub
cmc
or
adcl
shl
imul
cmpl
mov
mov
mov
jmp
movl
jne
pushl
call
and
sub
or
or
xor
mov
and
mov
mov
shrd
sbbl
mov
mov
andl
xor
shr
jmp
mov
adc
and
mov
nop
or
iret
add
or
stos
loope
or
mov
sarl
or
or
push
cmpsb
js,pt
inc
dec
lret
lret
mov
gs
int3
sub
popa
xchg
cmp
sti
pushf
ljmp
cmp
mov
fisttps
add
push
in
in
or
jle
and
cwtl
mov
inc
les
dec
mov
fwait
in
mov
loope
and
pop
push
push
and
sub
push
adc
mov
clc
lret
repz
jg
rclb
xor
lea
out
mov
loope
lods
and
rol
pushf
mov
mov
loopne
dec
dec
sbb
loopne
idivb
repz
inc
inc
cmpsl
test
inc
packuswb
adc
mov
push
sub
aaa
call
daa
xor
std
js
lahf
pop
jl
ja
ds
pop
xor
stos
add
sbb
pop
xor
fisubrs
add
je
pop
fisubrl
test
add
cmp
cli
push
addr16
mulb
mov
in
jb
xchg
sub
xor
cwtl
jae
cmc
xchg
cmpsb
dec
lock
xchg
les
push
ret
cwtl
inc
cmpsl
cwtl
enter
fnclex
rolb
aaa
sub
shrb
pop
out
or
pop
aas
mov
inc
pop
mov
orb
scas
inc
inc
out
jmp
add
adc
mov
mov
add
xchg
sbb
in
and
ljmp
testb
call
mov
int3
xchg
mov
add
jno
adc
dec
imul
mov
shrb
or
fisttpl
mov
sbb
xor
mov
sti
lods
inc
ja
add
sub
lahf
stos
dec
pop
rorl
stos
inc
pop
test
negl
ficoml
cmp
xorb
push
inc
std
clc
ja
pop
cmp
sbb
movsl
and
inc
mov
and
cmc
sub
dec
jo
pop
rorl
lcall
sub
inc
popf
out
sub
jnp
push
in
jmp
imul
ret
push
jmp
scas
xchg
push
or
mov
xlat
sub
int3
roll
cwtl
clc
aas
dec
arpl
out
cmp
dec
dec
faddl
mov
mov
jle
inc
inc
bound
push
ret
dec
dec
roll
arpl
fcmovnb
pop
ds
out
cmp
xor
ss
jp
lcall
mov
push
inc
lahf
ja
das
movsl
or
add
imul
jae
scas
push
cmpsb
or
dec
lea
in
cwtl
scas
mov
out
add
inc
add
aas
cltd
sbb
xchg
aam
mov
imul
mov
pop
stos
outsl
xor
lahf
inc
mov
inc
push
xchg
xor
inc
push
call
ljmp
fdivs
stc
popa
jmp
shr
mov
mov
iret
fwait
or
and
movsb
pop
mov
repnz
jne
outsb
std
in
ficoms
cmp
imul
xchg
cli
add
mov
sub
fistpll
push
in
pop
mov
mov
out
lahf
dec
jl
movsl
inc
int
dec
mov
cmpsl
cmp
fmul
mov
movlhps
cwtl
dec
je
int3
hlt
jge
dec
int3
jne
inc
xchg
or
arpl
inc
adc
push
aad
adcb
fcom
or
out
sub
xchg
add
or
and
fimull
adc
sub
push
mov
jmp
cltd
cmp
lds
sbb
mov
mov
gs
xchg
movsl
cwtl
sub
or
movsb
cmp
mov
enter
and
sbb
xor
shl
pop
mov
mov
push
lods
cmpsb
lds
hlt
xchg
and
add
test
jle
xchg
sub
pop
insb
pop
mov
adc
cmpsb
sub
hlt
mov
in
jb
mov
and
dec
and
sbbb
mov
movl
adc
jno
dec
es
cltd
inc
repnz
fmuls
gs
inc
mov
rcrb
call
jmp
xchg
xlat
dec
pop
mov
icebp
push
sbb
adc
sub
subl
lods
xorl
das
push
ret
add
repz
scas
sahf
cli
jne
mov
stc
mov
and
push
and
mov
ds
popf
addr16
xlat
pop
nop
fildl
repz
xor
mov
addb
int
sti
xor
dec
cld
stos
or
movsl
or
add
pusha
jns
adc
in
test
lret
cmc
into
mov
cwtl
jecxz
or
mov
repnz
setp
xor
mov
es
nop
xor
mov
push
add
jp
dec
sbb
popa
outsb
repnz
popf
or
pop
and
xor
mov
adc
lret
sbb
movsb
push
inc
adc
dec
test
mov
mov
mov
adc
mov
adcl
xor
andl
or
shl
addl
sub
mov
movl
jmp
cli
and
and
and
adc
ret
mov
iret
in
mov
iret
add
or
setno
cmc
out
pop
mov
dec
push
ljmp
js
sub
mov
mov
lods
mov
sub
flds
rclb
insb
add
push
imul
inc
sub
mov
mov
mov
bound
add
cs
push
in
mov
bound
xor
mov
pusha
or
orl
pop
leave
adc
or
in
jmp
fisttpl
and
mov
dec
dec
pushf
dec
or
mov
add
jg
inc
jmp
adc
inc
jno
test
push
repz
or
dec
and
push
mov
mov
mov
leave
push
nop
leave
push
mov
subl
xchg
sub
pop
cmp
add
inc
jecxz
roll
xchg
jle
add
test
xchg
ficoml
in
cltd
push
lahf
jns
bnd
stos
insb
xchg
jns
lret
icebp
data16
and
jb
dec
push
mov
es
sub
ret
add
mov
cli
inc
xchg
jb
mull
sbb
mov
adc
dec
push
or
push
xchg
xor
orl
fs
jns
mov
andb
jb
rorl
adc
adc
fisttps
movsl
ret
cli
pop
test
mov
sub
cs
push
xchg
xor
ret
push
add
pop
test
cltd
or
sub
sub
ret
cmpsl
lcall
out
popf
scas
lret
xorl
js
dec
shlb
dec
jg
xlat
pop
mov
imul
or
data16
sbb
test
push
and
mov
push
xchg
inc
xchg
add
or
jl
xlat
push
xchg
roll
out
sub
daa
lret
pop
push
push
ja
inc
popf
cmp
lock
sbb
dec
pop
add
xchg
adc
in
fwait
mov
stos
or
rorl
cmp
inc
std
rcr
and
push
int3
scas
dec
outsl
daa
pop
inc
mov
inc
sti
mov
jecxz
rclb
xor
inc
out
dec
orb
testb
test
and
lret
or
pop
repnz
enter
call
pop
fiadds
out
test
sub
adc
addr16
loop
mov
pop
mov
mov
mov
scas
out
sbb
mov
xchg
pop
mov
rep
sbb
in
adc
insb
es
cmpsb
fs
dec
out
push
nop
gs
cmp
and
out
out
mov
sbb
cmp
scas
jp
jecxz
mov
loopne
inc
fsubr
sub
mov
or
hlt
rorl
test
aaa
adc
call
ds
insl
mov
or
or
test
iret
daa
negl
cmp
mov
ds
int
push
xor
bnd
add
fsub
push
mov
and
shll
int3
aaa
mov
pusha
and
pop
push
fidivrl
pop
movsb
mov
sbb
cltd
out
xor
mov
gs
rcr
mov
outsl
cmp
scas
sub
xchg
jge
test
outsb
pop
repz
movsl
xchg
ds
and
cmovo
jnp
test
push
inc
jp
pop
inc
mov
adc
pop
stos
push
pop
scas
sbb
out
pop
gs
aam
adc
lds
stos
xor
gs
lock
push
xchg
push
mov
outsb
out
mov
pop
psubb
push
shr
sub
adc
push
and
jo
daa
dec
push
adc
inc
xlat
pop
test
add
jno
mov
scas
add
push
ret
subl
iret
in
insl
mov
ljmp
into
out
shr
mov
stos
xor
inc
cld
int
cmpsl
push
push
push
push
xor
cmc
cmp
dec
sub
fwait
pop
das
and
repz
fisubrs
dec
mov
jl
outsl
fs
xor
sarb
jl
inc
mov
xchg
pop
popf
mov
dec
gs
jbe
ja
add
jbe
clc
std
hlt
sbb
xor
or
stos
imul
mov
call
sbb
fsubs
cmp
andl
mov
nop
xor
loopne
jb
xchg
and
sarb
repnz
std
mov
jmp
aas
adc
adc
das
in
shll
or
mov
shlb
lcall
add
das
aas
push
push
and
inc
fs
sbb
ficompl
aaa
icebp
cmp
fwait
gs
and
mov
popa
push
jnp
fisttpll
xchg
mov
cmp
sbb
xchg
or
dec
shrb
ljmp
sbb
dec
outsl
sub
pop
jo
or
add
data16
lret
pop
adc
ds
add
loop
mov
mov
add
leave
or
fstpt
gs
icebp
push
stos
cmp
and
pop
push
mov
call
insl
add
dec
xlat
sbbb
jg
shll
adc
and
in
imul
adc
loope
cmp
mov
jg
mov
mov
shrd
orl
mov
mov
xor
shl
xor
movl
or
adcl
shr
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
andl
sbb
xor
sub
sub
adc
mov
sub
mov
xor
mov
cmpl
mov
movl
mov
jmp
movl
movl
jg
pushl
push
push
call
sub
mov
sbb
mov
adc
and
mov
sbb
dec
or
mov
jmp
test
aaa
push
insb
add
cmp
add
or
dec
adc
mov
hlt
mov
sub
jnp
xchg
dec
mov
pop
pop
add
fcompl
jp
hlt
mov
cltd
andb
sub
push
cld
cmp
jo
and
imul
inc
cs
sbb
mov
xchg
mov
push
movsl
mov
je
arpl
dec
mov
fs
popf
fisttpll
pusha
push
adc
cmp
jle
mov
pop
mov
pop
cmpb
adc
push
cmp
push
das
pop
xchg
mov
addr16
fcomip
cmpsl
mov
mov
push
movsb
add
sub
mov
aaa
mov
fucomi
popa
movsb
mov
mov
mov
pop
and
aam
pop
push
lret
out
std
jae
fxch
inc
lret
test
outsb
cmp
je
push
test
shr
jl
jae
lcall
lsl
adc
add
pop
add
insl
fdivrs
pushf
cmp
fistpll
fildl
ss
imul
rolb
xchg
and
out
je
fistpll
mov
cmp
imul
pop
nop
inc
pop
adc
or
pusha
cmp
or
sbbl
loope
das
jle
adc
push
pop
inc
hlt
dec
xchg
movsl
sti
mov
imul
and
aad
push
hlt
loope
clc
inc
out
bound
ficoms
fdivrl
shll
aam
aas
sbb
je
clc
mov
mov
lock
sub
ss
enter
bound
sbb
add
loopne
jmp
xor
lock
stos
xchg
std
mov
jbe
inc
sarb
repz
push
ljmp
ss
adcl
inc
mov
rcrb
and
jecxz
loopne
push
jae
cld
outsb
mov
pop
rorl
fidivl
mov
jo
cld
movsb
jg
jns
add
cmpsl
lcall
xor
inc
lea
jle
rol
cmp
daa
rorb
lret
mov
sub
shr
adc
lret
jmp
push
sti
xlat
xchg
xor
scas
vunpckhps
loope
push
inc
mulb
sbb
dec
mov
out
pop
ds
xchg
xchg
scas
iret
bound
xchg
movsb
call
jmp
cmp
sbb
push
jb
dec
repz
push
call
sub
scas
dec
imul
cmp
stos
mov
sub
insb
loopne
mov
xlat
mov
repnz
loopne
cltd
mov
fcoms
shll
push
or
pop
sub
lahf
in
cld
mov
loop
jb
push
push
lret
ljmp
add
test
push
dec
mov
mov
hlt
mov
mov
aam
pop
gs
xchg
in
cmp
jecxz
rcrb
mov
inc
add
cli
lret
mov
pusha
add
repnz
add
jo
adc
loope
mov
mov
mov
add
adc
dec
jecxz
popf
fidivl
scas
cmp
enter
data16
stos
xchg
cmp
loope
inc
sub
adc
xor
mov
mov
mov
mov
out
xchg
clc
sub
inc
push
pop
pop
xchg
data16
and
incl
imul
jns
sbb
sbb
mov
lds
add
shlb
jb
test
fcomip
mov
roll
rol
test
cmp
xchg
ds
xor
hlt
mov
cli
pop
sub
adc
or
pop
into
popa
inc
in
inc
insl
cwtl
loope
add
xor
jp
repnz
sbb
sub
jecxz
inc
fs
inc
insl
cmp
jp
jns
leave
push
fisttpll
mov
add
das
jle
mov
aas
test
rolb
xchg
imul
out
dec
mov
lods
aad
and
adc
cltd
test
mov
lea
xchg
in
fisubrl
outsb
pop
stos
std
out
cld
cs
sbb
dec
pop
lods
test
or
mov
sub
dec
insl
insl
adc
xchg
imul
pop
and
mov
xor
pop
std
sbb
or
das
pop
xchg
cmp
mov
mov
cld
sti
fstl
adc
in
shlb
int3
test
and
xchg
cmpsb
idivl
sahf
dec
dec
mov
call
sbb
inc
mov
loopne
into
cmpsl
popa
or
push
adc
imul
jecxz
xor
jne
mov
lds
fs
call
sub
nop
pusha
adc
lods
jg
cli
std
daa
hlt
add
outsl
jmp
mov
and
jb
and
push
mov
dec
shl
jmp
xchg
pop
lret
mov
mov
lcall
mov
aas
push
flds
push
test
pop
int
test
into
stos
js
cli
xchg
jmp
push
shrd
andl
shr
mov
adc
mov
xorl
mov
xorl
mov
subl
jmp
sbb
daa
sbb
cmpsl
sar
xor
bound
or
add
or
int
sub
jge
fbstp
add
aas
sub
js
fcoml
mov
sub
out
stc
inc
inc
enter
xchg
std
pop
movsl
stos
out
mov
cmp
pushf
fbld
imul
xchg
sahf
sbbl
add
mov
loopne
loop
push
enter
mov
and
or
and
push
and
negl
dec
cmc
inc
or
xchg
data16
ss
hlt
xor
hlt
cmp
movb
subb
push
inc
dec
sahf
mov
push
int
pop
sti
loopnew
cmpsb
inc
inc
adc
test
test
mov
cmp
lods
out
pop
xor
cwtl
cmp
dec
push
push
mov
insb
inc
repz
mov
dec
push
test
or
jnp
lock
push
sbb
adc
sub
iret
mov
movsl
sbb
or
jge,pn
fwait
xchg
mov
cmp
xor
rorl
push
les
xchg
jecxz
divl
arpl
sub
shld
lods
add
mov
mov
jo
mov
rcrl
movsb
inc
outsl
rcll
cs
icebp
cwtl
or
xor
jnp
lods
push
pop
lods
xor
mov
dec
leave
pop
lock
neg
pop
es
xchg
xor
pop
jo
jge
bound
pop
inc
mov
out
mov
xchg
pop
out
lods
inc
ret
dec
out
mov
rcl
ljmp
or
out
mov
add
std
adc
cmp
rolb
fiadds
inc
mov
cmp
add
mov
cmc
in
jmp
push
mov
mov
outsb
nop
jp
jbe
inc
scas
popf
jbe
imul
inc
aas
cmc
mov
jg
fbld
jbe
lods
ja
sub
mov
inc
xor
mov
add
push
je
lcall
stos
inc
ja
mov
pop
in
sbb
add
mov
shlb
js
cmp
lock
sbb
int
mov
add
sti
lahf
aad
in
incb
adc
xchg
lds
sbb
mov
dec
incb
push
repnz
mov
pop
pop
dec
es
jl
loopne
cmc
into
jmp
push
lods
xor
stos
cmpsb
dec
shrl
leave
push
lcall
int
mov
lret
movsl
push
sub
inc
mov
lds
stos
leave
dec
aas
sbb
pop
dec
movsb
xor
stc
aam
pop
fwait
aam
add
dec
push
jle
or
cwtl
mov
xchg
mov
mov
pop
dec
add
fcomip
and
outsl
xor
dec
test
jbe
mov
jmp
sbb
cmpsl
loop
cmc
ss
sbb
fstpl
repnz
aaa
and
xchg
leave
add
fsts
loopne
xor
int
and
addr16
in
mov
pop
sub
repz
adcl
test
push
loop
fnstcw
mov
bound
aad
push
lock
jp
cltd
icebp
mov
mov
sub
push
sub
test
push
and
lock
and
jmp
pusha
mov
jne
sbb
mov
and
add
je
sbb
sahf
mov
cmc
or
fwait
mov
lret
sarb
mov
pop
mov
sbb
mov
mov
lods
mov
mov
push
mov
sub
push
rcrl
lahf
pop
push
sbb
out
and
daa
xchg
adc
ret
jle
scas
nop
mov
adc
mov
sub
mov
in
popl
ret
xor
inc
clc
push
push
jp
and
insl
dec
pop
push
stos
arpl
dec
jbe
pop
in
and
arpl
cld
in
dec
sbb
jne
inc
pop
shll
push
subl
add
rcrl
in
std
jle
jg
popa
test
push
movsb
insb
adcb
inc
mov
xchg
mov
dec
dec
xchg
and
mov
mov
sub
movsl
nop
push
adc
sarl
dec
adc
xchg
mov
lret
popa
xchg
in
pop
jne
in
dec
xor
mov
lcall
cmp
or
inc
lret
rclb
push
xor
mov
push
mov
lods
xor
test
testb
pop
push
mov
das
adc
add
sub
add
movsl
ja
xchg
mov
out
fwait
lea
jnp
mov
cmp
mov
add
repnz
mov
in
inc
push
mov
xchg
sub
mov
sub
and
push
mov
in
push
cmp
fcmovnbe
mov
xlat
fildll
xchg
dec
in
push
rclb
cmp
outsl
ret
call
inc
fnstenv
sbb
scas
js
push
cmp
xchg
testb
sar
jno
pop
daa
addr16
xor
addr16
ss
aad
sbb
xchg
xchg
xchg
divl
jno
sbb
cli
mov
fnstenv
jge
xorl
xor
or
shl
adcl
imul
sub
movl
jmp
mov
add
mov
shrd
orl
mov
mov
addl
xor
shl
xorl
xor
xorl
or
shr
mov
mov
mov
cmpl
mov
movzbl
jmp
movl
jle
pushl
push
push
call
sbbl
or
sbb
orl
sbbl
mov
sub
mov
mov
xor
add
mov
shrd
shr
and
mov
cmpl
movl
mov
jmp
movl
movl
jg
pushl
push
call
and
sbb
xor
add
xor
add
sub
or
add
sub
xor
or
add
mov
xorl
mov
add
mov
sub
mov
andl
xor
orl
xor
or
shl
add
sub
add
movzbl
sbb
mov
xor
add
mov
sub
and
mov
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
adc
sbb
sbb
xor
xorl
mov
sub
mov
and
cmpl
movl
mov
mov
mov
jmp
movl
movl
jge
pushl
pushl
call
orl
sub
adc
sub
andl
addl
shrd
cmpl
mov
movl
movl
jmp
mov
ja
pushl
push
call
movzbl
sub
mov
orl
and
add
and
mov
xor
adc
and
shr
mov
mov
orl
xor
xorl
shl
cmpl
movl
movl
jmp
movl
movl
jb
push
push
pushl
call
sbb
not
add
andl
incl
adcl
xor
or
mov
or
movl
mov
cmpl
mov
not
jmp
mov
jbe
pushl
pushl
push
call
mov
sbb
dec
xorl
xor
sbb
add
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
push
push
pushl
push
call
not
or
and
mov
mov
sub
sub
movl
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
push
loop
inc
pop
inc
sbb
jae
xchg
or
pop
or
iret
add
or
add
pop
mov
mov
leave
movsb
jmp
sub
outsb
fldenv
aas
lret
aad
mov
adcb
inc
fbld
jb
insl
iret
pushf
adc
fiadds
ret
push
push
lods
into
lock
movsl
mov
mov
add
repz
mov
push
jo,pn
imul
cmp
jmp
sti
repnz
in
lock
stos
mov
jo
sub
pop
ljmp
push
ljmp
stc
loopne
pusha
jl
push
jo,pt
mov
pushf
jl
sub
mov
push
lret
xchg
adc
ja
pop
mov
and
fnsave
xchg
mov
repz
lret
add
imul
jg
not
icebp
sub
imul
push
test
fldcw
shl
aaa
and
das
cmp
cmp
sub
cmp
mov
out
mov
in
rclb
in
pop
mov
roll
sub
and
add
or
fadds
inc
loope
xor
out
loopne
pop
in
cmp
fstpl
xorb
into
shlb
fimuls
push
inc
add
enter
test
sbb
inc
out
shl
pop
dec
xchg
mov
ret
push
ss
fsts
lret
sub
fistl
jg
mov
sub
mov
mov
sbb
push
adc
stos
pop
sahf
das
add
push
data16
add
imul
cltd
and
xlat
push
pop
addr16
dec
cmpsb
mov
loop
gs
hlt
fcoml
jg
and
and
sbb
data16
mov
pop
imul
fwait
mov
adc
sub
inc
adc
pop
add
sbb
mov
xchg
sub
add
cmp
enter
dec
push
xor
in
adc
subb
mov
lea
ret
test
adc
inc
leave
pop
cmp
mov
inc
decl
test
sbb
fwait
add
movsb
mov
insb
ss
imul
add
dec
or
lds
mov
stos
enter
and
vdivpd
lds
jecxz
in
mov
cmpsl
out
lds
push
scas
bound
or
cmpl
inc
iret
test
push
pop
inc
pop
xchg
ss
in
mov
inc
xchg
icebp
sbb
inc
mov
iret
in
push
mov
jo
cwtl
mov
mov
push
push
ljmp
push
sbb
pop
les
fsubl
jge
into
icebp
stos
cmp
stos
sub
or
aaa
repz
sti
stos
psubsb
push
cmp
adc
fsubrl
inc
outsb
dec
stos
sbb
popa
sub
inc
mov
mov
sub
jg
dec
adc
and
mov
fisttpl
popa
xchg
scas
push
mov
leave
test
cltd
add
jp
mov
shll
sti
sub
mov
nop
dec
pushf
hlt
lret
pushf
fldt
add
je
sub
iret
xor
xchg
pop
jnp
cmpb
icebp
out
out
pop
push
aaa
roll
or
popa
push
cmp
mov
inc
jno
or
mov
cld
fcompp
call
cwtl
lcall
loope
add
mov
fldln2
cwtl
incb
rolb
fisttps
adc
mov
ror
mov
xchg
cmpsb
test
cld
mov
sbb
push
push
cmpsl
mov
addb
shll
stos
arpl
dec
jecxz
jb
push
cmp
sub
cmp
cli
push
cmp
pop
adc
xor
fildll
popa
cwtl
add
int3
out
das
cmc
aam
int
jg,pn
loope
out
inc
lcall
xor
out
shl
shrb
lret
dec
ror
dec
and
xchg
sub
movsb
sub
jns
movsb
mov
xlat
cmc
hlt
mov
outsl
ss
outsl
push
lock
jmp
mov
add
adc
dec
enter
pop
mov
data16
and
fbstp
ljmp
aam
pushf
leave
push
jle
sub
adc
sub
xchg
xor
mov
push
fcmovne
adc
dec
fisubl
xor
iret
mov
jg
sar
dec
mov
fsts
out
sub
sub
adc
sub
lds
dec
mov
jne
sbb
pop
aam
push
subb
mov
mov
cwtl
mov
ja
mov
mov
xchg
cmove
cmp
adc
jne
out
sarb
fildll
adc
xchg
addr16
sub
add
cld
push
mov
cltd
push
les
sahf
xchg
cld
mov
sub
sbb
inc
int
addl
scas
aas
ffree
dec
mov
clc
xchg
or
cmp
sbb
xchg
hlt
xor
adc
pop
xchg
outsb
jmp
mov
out
jne
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
jmp
lods
loop
repz
cld
insl
cmpsl
sti
inc
and
pop
or
iret
add
or
shll
faddp
div
mov
std
out
cmp
mov
faddl
rol
xrelease
pushf
aad
add
mov
xrelease
sub
jg
lods
in
inc
dec
cmpsb
cmpsl
jb
bound
jl
dec
mov
mov
xchg
push
cwtl
in
mov
cmp
test
adc
popf
cmp
and
or
shll
mov
daa
cwtl
lret
lret
rorb
add
dec
add
aaa
in
insb
fcompl
pop
add
mov
insl
fsubp
test
fadd
inc
cwtl
xchg
jne
xlat
lret
lock
jae
repnz
sub
cmp
aaa
push
dec
mov
adc
push
xchg
sti
inc
push
xchg
rolb
pop
shll
or
daa
or
imul
or
pop
inc
jg
jbe
adc
das
add
push
push
insl
adc
aam
std
or
xchg
cmc
loop
mov
pop
test
jecxz
test
leave
stos
sbb
icebp
lock
movb
cmpsl
loope
push
mov
scas
xor
fmuls
mov
adc
or
pop
inc
shll
insb
or
push
fdivrs
mov
fistps
imul
pusha
mov
inc
xchg
dec
popa
das
repz
aad
lds
aaa
cmp
jbe
call
pop
dec
mov
xchg
jno
inc
mov
popf
fs
bound
or
aad
icebp
es
jnp
call
aas
adc
jmp
mov
inc
jmp
mov
int3
pushf
and
xchg
daa
dec
xchg
mov
dec
sbb
or
cld
pop
andb
scas
outsb
out
mov
aam
push
ret
mov
mov
aas
lcall
repnz
jle
dec
orl
and
bound
cmp
filds
and
cmpsl
mov
iret
sbb
mov
sub
imul
push
mov
cmpsl
pop
rorl
repz
cmp
aaa
rol
mov
std
xor
cltd
jmp
stos
pop
pop
dec
cs
mov
mov
leave
insb
pop
jae
cmp
inc
in
push
jo
add
push
orl
mov
or
mov
pop
inc
test
lock
popf
or
notb
decb
mov
sub
push
push
xchg
ljmp
enter
cli
add
addb
repnz
adc
xchg
cli
push
and
mov
xor
mov
lret
out
mov
clc
out
out
loope
cmp
and
leave
add
or
cmpsl
in
push
lcall
ss
jb
add
test
in
dec
jle
bound
add
jl
clc
cmp
mov
test
clc
shl
pop
ja
sbb
divl
mov
xor
pop
push
scas
jnp
xchg
mov
mov
stos
movsb
out
jne
lods
mov
push
pop
fs
lcall
pop
imul
xor
loope
and
mov
push
adc
sub
push
stos
mov
dec
inc
jne
rcrl
cld
sbb
fisttpl
mov
movsb
arpl
imul
cmc
shr
xor
jns
call
and
out
mov
push
push
cmp
pop
int
rcr
and
out
xchg
cmp
xchg
cmpsb
pusha
out
loop
adc
shrl
test
xor
stos
int
sbb
jae
push
sub
negb
add
or
jp
aad
lods
mov
daa
add
in
mov
insl
notl
in
add
dec
fbstp
jmp
add
sbbb
adc
fs
fildl
pop
popa
push
push
loop
or
push
leave
test
sub
nop
pop
xchg
outsb
jecxz
std
popf
stos
sbb
push
ja
cmpsl
mov
ds
pop
lods
push
dec
aad
outsb
arpl
into
icebp
push
je
es
xchg
imul
sbb
xor
mov
arpl
insb
clc
cmp
and
cmp
neg
push
incb
fisubl
out
xchg
cmp
jmp
push
pop
dec
sahf
and
dec
and
lahf
arpl
sub
push
push
mov
sub
ret
enter
lea
jmp
xchg
rorb
testl
or
jbe
fisubl
and
xor
adc
push
push
jbe
sub
stos
cwtl
mov
das
mov
mov
fdivrl
jo
leave
add
push
pop
cld
push
xor
mov
ja
jne
fmul
cmp
cmp
test
adc
lock
add
bound
xor
das
push
rclb
and
aaa
add
fs
push
sbb
lds
sub
dec
popa
push
sti
or
insb
xor
lods
xchg
push
iret
cmp
xchg
dec
pop
xor
jmp
mov
xorb
xchg
pop
adcb
stos
xchg
sub
or
add
or
mov
call
sub
cmpsb
repz
imul
add
mov
mov
lock
and
cmp
rol
sub
stc
or
popa
push
icebp
insl
push
cmp
mov
jo
loop
cmp
cli
clc
push
xor
ljmp
repnz
insb
xchg
cmp
or
imul
mov
popf
mov
popa
pop
dec
jns
cld
jp
xchg
fs
orl
mov
jg
ljmp
jle
lret
dec
mov
pop
lods
cmp
push
mov
bound
pop
push
inc
inc
xor
xchg
fucomp
pop
sbb
int3
insl
lock
cmc
mov
xchg
cmp
pop
add
mov
in
and
sub
mov
scas
inc
push
mov
popa
xor
jno
enter
nop
or
jne
ss
jp
jmp
test
roll
into
jp
cmp
inc
sahf
sbb
jmp
inc
and
push
lock
push
mov
cmpsl
cld
inc
jae
sbb
je
mov
lea
sub
sub
cli
adc
xor
xchg
insl
mov
insb
push
fwait
scas
add
shlb
repz
es
cwtl
pop
pop
jbe
cmp
pop
xchg
fmul
adc
jmp
sub
fisttps
add
push
aas
cmpl
xchg
pop
xor
adc
int
xor
sub
xor
mov
js
push
cmc
call
cmp
dec
push
or
aas
loope
push
fsubrl
sbb
and
scas
jns
sub
mov
xchg
ja
mov
inc
sub
pop
pushf
or
adc
cli
mov
pop
adc
movsl
out
scas
out
add
out
fldl2t
cmp
lcall
fidivrs
pop
loope
lahf
cltd
mov
sub
aas
arpl
shl
pushf
int3
or
dec
xor
scas
xabort
rcl
fbstp
push
inc
xchg
sahf
cmp
rorb
sbb
insb
jmp
mov
mov
ja
add
fwait
insb
mov
xchg
mov
pop
dec
xchg
add
jbe
ret
mov
and
and
pop
pusha
dec
jne
mov
mov
enter
lcall
mov
adc
lods
mov
jns
sbb
and
stos
xlat
push
mov
xchg
or
mov
scas
xor
or
push
nop
xchg
mov
iret
cld
xor
inc
jecxz
cmp
xor
adc
ret
pusha
in
cmp
jo
bound
dec
inc
test
add
dec
movsb
jle
mov
mov
out
fisubrl
mov
aas
shlb
pop
jae
inc
push
out
inc
push
xchg
bound
leave
xchg
jmp
xor
hlt
cmpb
sbb
lcall
add
outsb
mov
cltd
scas
jno
outsb
nop
mov
cwtl
jo
aam
fldenv
push
loopne
push
lahf
lds
or
add
inc
repz
movsl
dec
shr
dec
push
mov
push
dec
cmp
das
and
div
inc
das
loope
or
mov
pop
mov
ss
mov
xchg
movsl
loope
imul
push
cmp
xlat
cmpsl
lds
fwait
cmp
cwtl
rcrl
mov
aas
jae
je
fcmovbe
fildl
out
dec
dec
mov
fmulp
dec
lret
loope
int
test
sbb
iret
or
test
arpl
std
sahf
or
outsb
mov
pop
cmc
orl
mov
xor
jb
pop
cmp
int
iret
lods
dec
pop
movsl
ljmp
dec
xor
ja
add
cs
mov
filds
mov
jb
dec
mov
adc
push
sub
loopne
fists
inc
fcoml
jecxz
and
dec
jp
imulb
cmp
mov
jnp
outsl
nop
inc
sahf
daa
xchg
loope
jmp
test
gs
bound
adc
mov
enter
adc
dec
cmpb
ss
addb
xchg
xor
xchg
jo
mov
xchg
mov
mov
pop
imul
jg
into
sub
pop
scas
cmc
loopne
cmp
xlat
mov
icebp
insl
mov
dec
in
cmp
push
scas
inc
jns
and
sbb
push
sub
mov
push
pop
jbe
jp
and
stc
sub
call
inc
test
cmpsl
mov
cmp
roll
lret
xor
addr16
inc
mov
outsl
outsl
sbb
lods
dec
cmp
and
cmpsl
sti
insb
xchg
mov
icebp
and
push
add
mov
cmp
js
and
mov
add
cmp
xor
imull
inc
add
subl
aam
popa
cmpsb
dec
divb
xlat
push
cltd
pop
or
xor
pushf
loopne
mov
and
push
into
test
loope
popf
popf
or
sub
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
jmp
and
imul
nop
push
mov
leave
xlat
mov
iret
add
or
fldcw
adc
cli
add
ljmp
and
movsl
hlt
aaa
dec
les
xchg
stos
loop
mov
in
adc
and
sbb
adc
or
aas
mov
jl
xchg
lcall
lcall
xor
jmp
inc
inc
add
inc
fisttpll
inc
cmp
test
and
les
lods
dec
xor
dec
repz
cli
or
stos
aam
mov
daa
mov
mov
xchg
push
gs
imul
cmp
hlt
nop
fcoms
fs
jb
mov
mov
out
pop
das
adc
orb
or
add
add
ja
std
push
mov
xor
xor
mov
jmp
loop
ss
in
push
test
cmp
js
repnz
push
sti
adc
dec
out
clc
out
mov
pusha
sbb
push
push
pop
leave
loopne
fs
fdivrl
outsb
dec
sahf
lock
jmp
mov
jbe
xchg
push
xchg
in
jo
iret
or
or
inc
and
icebp
xchg
sbb
sub
pop
rclb
dec
test
fidivs
leave
adc
inc
cs
leave
mov
add
negb
js
stc
jnp
and
pop
adc
sub
inc
lock
jne
in
and
add
jmp
addr16
dec
xchg
or
inc
xor
sbb
cld
daa
sub
mov
aaa
divb
xor
mov
stc
cli
pop
xchg
ds
loope
or
and
or
jnp
push
push
and
pop
xchg
jp
mov
je
dec
leave
pop
xor
subb
test
mov
mov
lret
lock
push
mov
jne
fdivs
call
jae
add
ret
nop
repnz
sti
call
arpl
pop
rorb
imul
mov
cwtl
or
and
out
xchg
mov
inc
pop
cmp
jnp
repz
cmp
sbb
add
mov
lock
loopne
and
pop
push
push
fwait
mov
daa
mov
sbb
xchg
shr
js
jno
pop
sti
jno
jnp
out
pop
lcall
je
jge
ds
pusha
imul
push
mov
rclb
xlat
test
imul
leave
repnz
pop
push
mov
insl
aas
sub
nop
sub
adc
sahf
sbb
divl
lahf
jl
xor
ds
mov
cmp
cmp
and
out
mov
jp
push
push
jne
inc
das
pop
and
out
lret
xchg
mov
xlat
push
and
sub
clc
cli
movsb
int3
inc
lea
pushf
push
sub
adc
add
dec
cmpsb
ret
mov
cmp
gs
jmp
test
test
mov
daa
add
mov
xchg
je
int3
mov
outsb
clc
in
shr
out
mov
dec
and
stos
cmp
xor
and
mov
fwait
test
icebp
adc
adc
loopne
pop
cmp
mov
movsl
sbb
or
out
mov
mov
ficomps
rorb
in
push
xor
xchg
push
in
mov
fwait
aas
iret
xor
sub
mov
and
scas
dec
xor
fadd
add
ret
in
or
stos
cmc
aad
stos
or
pop
xchg
test
inc
lret
xor
dec
daa
jecxz
lret
testb
pop
push
mov
inc
mov
push
push
cmpsl
shll
sbb
mov
pop
arpl
jnp
jg
sub
out
jns
into
frstor
cltd
xchg
sub
cltd
and
or
cwtl
pop
mov
sub
sub
dec
pop
or
adc
inc
sub
jle
fstpl
mov
inc
lods
movsl
lds
push
and
mov
fwait
jecxz
ret
mulb
aaa
jns
adc
inc
mov
jnp
test
push
inc
add
pop
pop
test
addr16
jmp
js
dec
mov
or
xchg
xor
sbb
sahf
jns
xchg
push
lahf
push
xor
mov
pop
mov
lods
mov
pushf
sbb
add
out
fidivrs
sub
mov
cld
pop
fucom
scas
and
mov
add
and
leave
mov
or
outsb
mov
loopne
fldl2t
mov
adc
pop
mov
inc
push
scas
pusha
sbb
ds
mov
cmp
pop
xorb
push
test
cmpsb
sub
cmpsb
xor
pop
adc
inc
mov
movsb
mov
stos
cltd
xchg
xor
adc
idiv
or
dec
stos
cmp
ret
fcoml
movsl
loope
pcmpeqw
mulb
lods
out
loop
and
or
cltd
sbb
xchg
or
sbb
mov
jmp
imul
pop
lock
pop
pop
aad
mov
cmpsl
add
iret
add
or
jns
repnz
sbb
iret
stos
cli
inc
adc
movsl
into
repz
cmp
cmpsb
inc
stos
mov
stos
enter
icebp
jne
sub
push
and
jmp
repz
popf
repnz
sbb
lcall
pop
xchg
gs
xor
nop
sbb
adc
pop
mov
pop
daa
jle
in
adc
lcall
mov
jg
mov
mov
cmp
outsb
push
adc
aaa
dec
gs
inc
cwtl
xchg
lahf
fnstcw
lret
icebp
push
test
daa
insl
loope
outsl
or
cltd
mov
pause
lret
sub
in
out
mov
sub
sub
cmp
in
adc
mov
mov
mov
daa
sub
inc
cmp
jp
add
sbb
jecxz
cmp
mov
inc
push
mov
str
cmpl
inc
jbe
push
inc
movsl
fistpll
loop
gs
movb
mov
push
adc
jne
cmp
lcall
out
xor
nop
cmp
bound
dec
loop
sub
ja
dec
popf
xor
xlat
or
mov
mov
ret
or
inc
daa
dec
aam
pusha
push
xor
addr16
outsl
pop
mov
add
mov
cmpb
sub
or
sbb
add
repnz
xor
and
aad
jo
pop
mov
daa
pop
mov
xor
es
cmp
cltd
jecxz
outsb
aad
sub
sub
les
add
imul
shrd
push
out
jmp
pop
sahf
mov
mov
daa
dec
xchg
jmp
sub
xor
and
jo
pop
movsl
jecxz
aam
pushf
mov
fldl
call
movsl
test
and
jbe
sbb
add
mov
mov
cmovno
test
aam
cltd
cltd
lock
mov
icebp
insl
push
aam
pop
cmp
jbe
jl
mov
movsl
ja
pop
ds
xchg
mov
or
pop
push
addl
or
cwtl
xchg
and
out
add
fwait
adc
or
dec
mov
pop
outsl
add
xor
pop
mov
push
add
jne
jge
int
push
xchg
sbbl
mov
xlat
add
sub
sub
mov
push
add
and
cmp
mov
push
mov
clc
lods
cmp
cmpsl
out
ljmp
pop
cmpsb
arpl
in
dec
pop
cmp
sbb
imul
adc
arpl
cltd
arpl
mov
cmpsb
jmp
lea
or
dec
adc
dec
add
cld
mov
int
fcoml
mov
insb
pop
aaa
les
mov
aad
push
loop
lcall
sbb
and
pop
sbbl
mov
push
arpl
cvtdq2ps
mov
pop
jle
popf
sub
pop
mov
sub
mov
pop
sub
adc
jmp
xor
xor
mov
test
add
in
jecxz
add
sahf
add
std
js
pop
mov
lods
clc
sbb
icebp
mov
repnz
dec
outsl
mov
mov
jp
xor
in
xchg
aad
dec
adc
adc
mov
sub
push
sbb
stc
xlat
inc
lcall
sub
cmc
dec
imul
dec
push
pop
decb
ja
cltd
cmc
test
sarb
movups
in
push
inc
cmpb
add
bound
imul
jne
leave
fimuls
xchg
and
outsl
lods
pusha
js
xor
and
dec
cmc
out
push
sbb
mov
loope
xchg
inc
xchg
mov
bound
add
hlt
mov
xor
cs
adc
sub
mov
or
push
xor
and
pop
cmp
in
sbb
xor
fsubrp
mov
fdivr
bound
mov
mov
pop
xor
ljmp
bound
jl
inc
xchg
xchg
adc
fdivs
pop
push
stos
nop
mov
imul
mov
xor
jb
adc
scas
mov
mov
xchg
add
and
out
inc
adc
aaa
xor
out
in
add
test
inc
js
mov
out
sub
sti
add
outsb
jge
mov
leave
dec
cli
out
cli
push
xor
lods
jl
add
das
jecxz
xor
ja
mov
jp
sbb
jge
outsb
sbb
mov
enter
nop
jne
aam
mov
std
subb
or
xor
and
sub
loop
nop
fsubr
cli
insl
mov
mov
cmc
push
lock
mov
data16
push
fidivs
in
cmp
mov
ljmp
ret
cmp
push
inc
push
sbb
stos
mov
in
scas
xchg
or
dec
repnz
sub
js
sbb
or
hlt
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
lcall
pop
jp
ljmp
or
iret
add
or
push
out
inc
jp
xlat
shll
jge
xchg
add
sti
pop
inc
pop
scas
jns
sbb
or
mov
jbe
and
pusha
in
repz
cwtl
mov
mov
xchg
loope
xor
mov
mov
fisttpl
adc
mov
add
es
pop
popa
adc
mov
sbb
loopew
gs
pushf
adc
loope
out
xchg
pop
ret
push
in
xchg
xchg
jne
xor
cmp
dec
add
fwait
push
mov
cltd
push
adc
sbb
and
hlt
xor
inc
inc
xchg
push
lahf
pop
adc
jne
lock
outsb
and
int3
xchg
icebp
mov
xchg
sti
mov
mov
loopne
out
inc
movb
jp
icebp
mov
push
loope
icebp
xchg
popf
mov
lock
leave
in
out
insb
mov
aas
test
adc
sbb
popf
js
cmp
adc
fdivrl
adc
dec
ljmp
mov
test
adc
jecxz
lret
mov
cmp
adcl
sbb
out
jmp
inc
popf
in
cmp
cmp
mov
add
or
add
and
in
inc
xchg
cmp
mulb
jg
out
out
ljmp
xchg
lahf
aas
enter
sbbl
jo
pop
sbb
or
mov
outsb
xlat
jne
rcr
xor
push
das
jg
mov
lods
cmp
in
jl
push
or
pop
xchg
mov
mov
inc
sub
cmp
fnstenv
pop
pop
test
push
add
jle
add
mov
jbe
cli
inc
pop
push
js
dec
xchg
imul
jbe
sahf
push
cltd
test
sbb
addl
dec
lcall
jnp
mov
jbe
cmp
and
push
addl
in
jno
stos
adc
cltd
mov
lods
ds
cli
lea
mov
and
xchg
lock
pop
push
and
popa
push
cmp
dec
dec
xchg
and
ljmp
pop
xor
ffreep
sbb
inc
sti
aaa
js
adc
xchg
insl
mov
adc
sbb
fwait
add
pusha
cltd
adc
jo
mov
jg
inc
pusha
je
push
aam
xlat
sub
out
cmp
sub
stos
mov
jne
inc
mov
lahf
orb
addr16
aam
out
les
int
jnp
pusha
mov
ret
push
pusha
push
xchg
dec
dec
sbb
movsb
sbb
ds
rcl
call
sub
cmp
icebp
jae
add
test
aad
sub
mov
adc
iret
in
imul
pop
inc
mov
lcall
pusha
mov
cmp
pop
cli
das
icebp
inc
movsl
sahf
add
mov
push
sub
sarl
jg,pn
push
call
mov
inc
push
adc
movsl
cld
data16
cmp
loope
xchg
test
std
dec
bound
movsb
xchg
das
cmp
fiaddl
xor
pop
sub
repnz
add
mov
adc
cld
mov
jno
mov
pop
insl
ret
dec
cld
jmp
jnp
fs
mov
mov
mov
in
sub
jae
xchg
inc
lea
rcll
sbb
mov
pop
gs
mov
repz
xor
sbb
sub
push
cmpl
inc
mov
xor
mov
push
sbb
arpl
dec
push
repz
je
and
push
mov
mov
imul
sub
outsb
aad
dec
xor
stc
sub
fsubs
cmp
bound
ljmp
and
popa
ja
jmp
ret
cwtl
mov
or
xor
loop
jle
loope
ret
xchg
sarl
mov
sub
das
leave
sub
std
fistpll
nop
sbb
sub
hlt
cmp
insb
jns
movsl
pop
bound
sbb
in
popa
pop
mov
gs
add
dec
lea
iret
mov
ret
addr16
cmpsb
xor
mov
and
add
adc
into
cmp
or
mov
cmp
loopne
lock
jmp
jge
sbb
sub
cmpsb
lods
xchg
inc
xlat
push
push
enter
xor
add
ljmp
pop
xchg
out
es
mov
dec
cmc
sbb
ret
test
or
in
fmulp
sarl
inc
dec
cmp
dec
fs
mov
xchg
or
jbe
cld
fs
int3
push
cmpsl
mov
cmpsb
pop
fildll
jno
ds
pop
cmp
add
es
mov
pop
jo
sbb
mov
repnz
cmpsb
and
mov
xchg
lahf
inc
cli
mov
in
adc
fisubrs
or
push
and
ja
sub
dec
arpl
popf
push
shlb
pop
gs
pop
add
jnp
popf
jmp
xor
shl
mov
xor
or
mov
mov
add
mov
jmp
mov
mov
std
jmp
and
adc
or
add
or
bswap
push
out
nop
jg
push
mov
xor
repnz
xlat
push
mov
jle
jne
into
inc
test
loopne
ja
dec
sub
imul
rclb
sub
sub
pop
xchg
xchg
out
test
outsb
rcll
jle
sbb
push
mov
lock
xchg
out
lret
or
xchg
adc
pusha
adc
lds
imull
mov
psubq
sbb
fdivs
loop
imul
sub
aas
add
xchg
or
mov
lds
mov
insl
ja
repz
ret
sub
inc
fisubs
pop
push
jo
adc
in
push
mov
sub
pop
test
pop
lods
pop
mov
mov
lret
fwait
jne
imul
imul
rorb
mov
into
dec
mov
sbb
cmp
in
popl
pop
scas
dec
iret
out
or
cmp
stc
sbb
adc
fldenv
cmp
mov
push
pop
loop
sbbl
sbb
je
mov
or
or
jb
ds
pushf
es
call
sbb
aaa
test
mov
test
inc
int3
dec
mov
add
sarb
js
pop
into
loopne
sbb
add
cli
nop
fld
pop
cli
sub
mov
pop
push
clc
add
sbb
cmp
sub
inc
ljmp
fstps
scas
jecxz
jno
mov
adc
jmp
mov
add
fldt
sbb
in
jb
int
leave
sti
loop
adc
int
pop
jl
movsb
sbb
lea
aaa
sbb
mov
gs
adc
stos
and
or
mov
pop
inc
gs
xchg
dec
xchg
cld
into
shrb
cmp
stc
adc
jo
jmp
pop
mov
out
sub
loopne
shlb
adc
cmpsb
jne
arpl
int3
dec
out
pop
xor
addb
sahf
dec
dec
mov
dec
jb
push
sbb
lods
sbb
int3
imul
or
pop
in
mov
or
fdivrs
iret
pop
jae
mov
or
mov
jge
jp
shrl
xor
dec
jno
dec
daa
jp
ja
xchg
xchg
mov
in
jnp
mov
outsb
bound
iret
or
js
xor
mov
hlt
sbb
mov
sti
test
jge
dec
in
mov
jno
lods
add
ret
mov
mov
cmp
sub
imul
mov
dec
xchg
or
pushfw
cmp
adc
nop
inc
jmp
movsl
and
push
adc
nop
out
or
sub
jl
pop
clc
lds
scas
das
ret
in
jae
inc
aad
fsubrl
xchg
mov
lods
and
xor
add
ss
mov
or
repz
and
loop
lods
push
lock
es
dec
or
notl
stos
mov
mov
mov
lods
loopne
pop
inc
lea
mov
xor
daa
or
nop
jmp
push
mov
push
xlat
popf
mov
xor
stos
ja
ret
add
add
fdivrs
pop
fildll
aad
lods
inc
mov
pusha
fsts
inc
inc
jb
daa
lods
jbe
xor
cmp
repnz
lea
dec
adc
mov
fcomps
jo
adc
insb
mov
test
xor
jge
ret
pop
cld
testb
out
adc
sbb
lods
mov
movsb
mov
push
xor
sbb
pop
repnz
movsb
icebp
or
fsub
mov
fistpll
ljmp
repnz
sub
fstpl
loope
push
mov
sub
addr16
sbb
add
repnz
vpaddw
out
pop
cltd
movsb
push
in
out
adc
sbb
pop
insb
xchg
scas
and
mull
pop
pop
or
sahf
mov
pop
mov
mov
push
std
gs
das
mov
jmp
pop
fnstenv
mov
les
adc
sbb
inc
cwtl
mov
dec
testl
adcl
movsl
inc
dec
push
sti
push
add
mov
mov
fs
mull
ror
dec
call
fmul
sbb
outsl
loope
faddl
inc
ds
cwtl
inc
jp
and
push
inc
pop
jmp
leave
lock
movsb
mov
mov
cmp
jecxz
dec
xchg
test
stc
hlt
sbb
pop
mov
mov
adc
repz
rcll
stc
jle
test
mov
push
test
mov
pop
add
fsubr
out
jns
rcr
sbb
mov
push
jmp
pop
mov
icebp
dec
insb
push
test
enter
outsl
mov
dec
mov
fdivrl
mov
bswap
adc
leave
mov
pop
ss
rcrb
mov
iret
dec
dec
xor
pop
adc
insl
pop
dec
adc
pop
cmp
movsl
lods
sahf
nop
daa
sbbl
cmp
xor
cwtl
xchg
leave
jo
mov
shrd
shr
mov
jmp
rorl
test
out
out
mov
or
or
add
or
insl
jl
and
mov
cmpsb
cmpsb
dec
xchg
cmc
mov
popf
icebp
or
adcb
pop
lret
xchg
jp
push
rcrl
cwtl
sbb
pop
xchg
push
call
and
jno
dec
sub
cmp
sarb
aaa
dec
pop
mov
mov
push
mov
stc
roll
xor
pop
ret
xor
sub
or
mov
fwait
scas
out
push
and
int
mov
pop
insb
sub
cmc
push
pop
neg
xor
mov
lods
mov
sbb
cwtl
dec
iret
dec
test
mov
jle
gs
xor
sub
xchg
mov
cmp
lea
in
add
pop
incl
adc
dec
cld
into
cli
and
pop
and
or
jno
nop
dec
mov
dec
or
data16
jo
jns
mov
repz
sbb
addr16
mov
leave
ja
adc
in
pusha
cmc
into
scas
cltd
popf
shl
inc
mov
or
adc
sub
sbb
rep
jl
add
push
ds
fucomp
pusha
xchg
cmpsl
hlt
push
mov
and
shlb
adc
sub
jnp
lret
adc
cmp
aad
outsb
jge
fisubrs
pop
and
dec
mov
rorb
push
int3
sub
ja
pop
cmp
and
ds
dec
push
and
cs
clc
pushf
sahf
outsb
adc
jg
movsl
inc
js
push
fnstenv
mov
sub
inc
and
loop
in
scas
add
rorb
add
fbld
insl
enter
cltd
mov
or
arpl
js
jmp
dec
mov
xor
dec
mov
mov
mov
scas
cmpsb
lea
cmp
cs
jmp
xchg
dec
cmp
loope
sub
pop
xor
arpl
adc
loope
pop
mov
dec
mov
dec
loop
mov
mov
push
fidivl
or
cs
pop
inc
std
sbb
push
adc
push
dec
push
lcall
cmp
mov
mov
or
popa
arpl
dec
mov
movntq
cltd
pop
or
sti
das
dec
add
rcll
xor
stos
jp
xor
push
cmp
lods
jae
pop
mov
add
aaa
std
mov
or
push
es
call
lahf
in
loope
fcmovu
sbb
in
insl
fs
dec
iret
test
into
adc
mov
mov
ret
xchg
hlt
cmp
repz
xor
pop
cmp
mov
int
xor
sbb
sbb
std
sbb
out
fistl
dec
rcr
pop
and
push
mov
cmp
or
pop
insl
imul
dec
mov
lods
add
mov
inc
data16
lret
lret
fucomp
mov
incb
mov
mov
cs
jle
rorl
aaa
cmpsb
mov
mov
int
sub
sub
push
push
xor
xor
add
aad
testl
jmp
ljmp
cmp
leave
pushf
xor
dec
ret
js
sub
test
imul
in
lret
jnp
mov
cmp
pop
addr16
and
pop
movsb
test
ss
push
push
and
shrl
mov
js
fidivl
pop
in
pop
or
lcall
or
rclb
push
xchg
push
nop
and
jl
push
adc
or
repnz
jmp
enter
faddl
arpl
stc
fwait
push
loope
js
pop
inc
popf
dec
and
clc
jne
es
jns
cwtl
adc
push
dec
mov
xchg
pop
outsb
xor
mov
jno
dec
clc
popf
dec
pop
xchg
or
aam
cli
mov
adcl
mov
or
mov
xchg
cwtl
and
xor
xchg
out
lea
xchg
leave
jg
dec
push
sti
push
mov
out
and
pop
shr
aaa
pushf
arpl
adc
sbb
negl
clc
xchg
adc
in
iret
cwtl
and
add
xchg
movsb
outsl
stos
cmc
dec
movsl
stos
jae
mov
pop
test
nop
xchg
inc
aam
add
mov
idiv
je
mov
mov
lea
dec
into
add
sub
or
or
xor
nop
lcall
add
mov
mov
jle
ss
mov
popf
icebp
inc
jge
fsubs
adc
xor
bnd
les
inc
imul
push
mull
dec
aad
dec
add
push
adc
in
inc
int3
inc
inc
mov
sub
cmpsl
das
les
data16
inc
mov
inc
sub
movsb
cmpsl
and
les
mov
dec
stos
mov
xchg
adc
fs
mov
xor
loop
in
inc
clc
loope
fnsave
mov
andl
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
inc
push
pop
cmp
aas
and
jne
xchg
mov
jp
or
iret
add
or
sub
loope
mov
and
loopne
sbb
xchg
insl
push
iret
push
and
jae
mov
aam
insl
mov
lahf
bound
inc
cmp
out
fsubrs
sbb
in
mov
lods
push
push
jg
dec
mov
mov
imul
sbb
rorl
pop
stc
iret
and
add
jno
push
movsb
mov
jne
pop
xchg
jno
scas
cmc
push
lret
mov
clc
dec
add
cmp
inc
fnstenv
cmp
sub
out
dec
sub
popf
jg
push
outsb
add
add
push
popa
mov
mov
xchg
and
fimull
out
dec
jo
aad
aad
mov
adc
adc
imul
push
pop
mov
daa
and
cltd
sarl
popa
popf
cwtl
mov
pushf
jae
push
inc
mov
in
dec
lods
outsl
out
xlat
iret
xchg
sti
or
dec
pop
add
sbb
int
fidivs
imul
jg
inc
add
mov
jp
mov
adc
pop
mov
fwait
pop
sub
pop
int
shrl
int
push
push
push
add
stc
add
add
test
loope
xchg
jge
fs
push
inc
mov
jnp
or
xchg
push
ret
outsl
mov
std
shl
je
sbb
fbld
loope
sbb
jns
cs
fistl
outsb
cmpb
cmc
into
and
in
adc
fists
pop
xlat
mov
xchg
test
aas
xor
mov
mov
and
stos
pcmpgtb
pop
xor
es
insb
push
inc
insb
mov
movsl
xchg
js
repnz
fwait
xchg
and
ret
inc
popf
sub
push
pushf
fisttpll
and
push
stos
jae
adc
inc
mov
or
pop
cmp
outsl
inc
xchg
movl
adc
loop
out
or
mov
adc
jg
xor
sarl
add
in
dec
pushf
enter
inc
sbb
enter
sbb
into
pop
mov
sub
and
sub
mov
out
data16
push
dec
hlt
sbb
and
xchg
push
clc
dec
iret
push
int3
dec
js
pop
adc
clc
jge
inc
popf
ret
mov
adc
jo
fcmovnbe
int
jno
pop
adc
push
inc
xor
cmpsl
push
jmp
int3
dec
std
stc
add
mov
mov
push
pusha
pop
imul
shl
cmp
jg
push
dec
cmpsl
adc
shr
adc
lcall
jb
shrl
mov
imul
mull
xor
push
aas
je
xor
in
sbb
outsl
cmpsb
mov
pop
pop
loop
inc
cltd
js
sbb
xchg
lods
push
test
mov
sub
push
jle
popa
xchg
mov
test
mulb
jb
sbb
pusha
in
ret
jae
or
pop
pop
jns
mov
push
les
push
add
xor
inc
js
xor
xchg
stos
xchg
mov
cmp
inc
popa
xor
push
jl
cltd
ret
mov
mov
lock
jecxz
sub
pop
xor
stos
shrb
mov
mov
pushl
mov
fwait
jo
inc
imul
pop
and
les
push
mov
mov
xchg
push
popa
insb
je
lret
dec
imul
mov
xchg
testl
push
fwait
mov
aad
lcall
inc
mov
sub
pop
or
pop
subl
clc
dec
jns
sub
add
ja
adc
pop
pop
pop
cmp
xor
nop
jo
aam
pop
dec
out
pop
jmp
insb
add
dec
adc
daa
popa
and
out
pop
jns
mov
mov
cmpsb
int
mov
cmpsl
adc
inc
ret
enter
cli
cmp
push
iret
lret
pop
pushf
mov
add
je
sub
mov
mov
pop
mov
iret
test
lcall
lea
imul
or
lods
xor
fdivr
das
xchg
dec
pop
mov
jb
pop
fwait
aas
outsl
into
in
and
inc
cmpb
mov
aaa
or
xor
xor
or
pop
test
inc
push
outsb
mov
out
fcom
insl
adc
es
pop
icebp
push
and
mov
jge
push
das
xor
movsb
mov
cmp
sbbb
push
mov
jle
xchg
jle
test
shlb
sbb
xchg
sub
shlb
repz
pop
shll
ret
sahf
mov
repnz
cmp
lods
je
lret
shr
out
inc
inc
dec
xchg
lock
or
mov
shrl
adc
xor
movsl
and
xchg
dec
adc
pusha
xor
je
xchg
inc
fwait
lahf
lock
int3
outsb
xchg
adc
mov
aad
es
jp
idivb
jl
mov
lds
jge
in
sbb
sub
lahf
and
bound
fcoms
imul
and
es
in
mov
in
cs
aas
cwtl
jl
lock
mov
sub
sub
mov
arpl
fisubrs
mov
shrb
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
jmp
sbb
pop
adc
mov
xchg
scas
cmpsl
aas
repnz
iret
add
or
cltd
or
imul
sarb
sbb
and
push
inc
xlat
push
and
testb
loop
push
mov
movsb
daa
aaa
sub
into
lds
std
mov
sbb
inc
xchg
jge
xchg
dec
pop
sub
fwait
aad
or
add
jo
mov
fwait
scas
in
pop
pushf
mov
xchg
popf
dec
lahf
xchg
mov
test
not
jge
mov
mov
ret
jge
xchg
repz
inc
les
hlt
adc
push
cli
cmp
cmp
int3
push
jno
imul
nop
dec
mov
scas
dec
pop
lcall
popa
jmp
insb
movl
outsl
push
cmp
std
out
in
int
sahf
cmpsl
and
pop
pop
and
daa
das
std
cld
pop
push
cmc
rolb
lret
lds
push
push
pop
daa
jne
pop
movsl
neg
imulb
sarb
pop
outsb
fildll
test
cmp
ja
in
add
mov
out
fwait
movsb
xchg
xchg
inc
ret
xchg
int3
sbb
hlt
mov
adc
pop
add
inc
mov
jmp
dec
fdivrl
filds
or
add
outsb
push
aas
ja
adc
je
pop
nop
cmp
xchg
mov
in
sub
repnz
mov
inc
and
fdivr
dec
imul
lock
fsubr
push
mov
sbb
pop
jnp
mov
push
cmp
jns
int3
rorl
xchg
sub
pop
xor
movsb
out
ds
lahf
inc
ret
xchg
test
sbb
inc
xor
or
loope
add
jecxz
push
sbb
or
push
out
mov
jbe
adc
sub
idiv
out
fisubl
add
rorb
sbb
push
add
push
cmpsl
insl
mov
dec
inc
xor
jb
inc
sbb
jnp
repz
xchg
adc
out
mov
xor
cmpsb
jle
repnz
rol
and
fs
mov
shll
iret
push
and
xchg
mov
xor
das
pop
mov
jecxz
call
cwtl
rcr
inc
sbb
jne
mov
sarb
pop
andl
inc
clc
mov
mov
lods
sub
or
movsl
imul
lahf
lds
push
lret
xchg
clc
js
outsb
leave
das
ds
adc
lcall
and
adc
push
in
das
lahf
nop
fwait
or
in
pop
inc
repnz
bound
int
adc
loopne
fstpt
pop
xor
pop
fsubs
repnz
push
jns
push
mov
sub
jecxz
mov
mov
sbb
xlat
push
pop
sahf
dec
ficomps
sbb
mov
push
xchg
push
cmpsb
or
mov
cmc
cltd
lretw
sbb
and
push
imul
rorb
xchg
xchg
sbb
fcomip
rorl
test
pop
mov
icebp
mov
xlat
dec
and
loope
xor
in
dec
jne
adc
cmpxchg
xchg
push
push
cs
xor
outsl
out
mov
cmp
fnstenv
in
ror
sub
test
adc
arpl
adc
add
out
add
in
ds
jns
lahf
sbb
aam
inc
inc
jbe
es
xlat
mov
or
pop
lcall
int
or
mov
test
mov
xorl
fwait
ljmp
mov
shl
mov
cmp
sarl
xchg
inc
pop
ficoml
shrl
cmp
jbe
das
jle
mov
mov
xor
adc
clc
fs
sub
mov
clc
xchg
and
dec
or
fldenv
jbe
and
call
sbb
fdivl
adc
or
fstps
int3
inc
std
push
test
add
stos
rolb
loope
sbb
bound
loope
sbb
dec
outsb
scas
outsb
decb
fcoml
or
test
mov
ljmp
pop
mov
enter
leave
aad
sub
insl
aam
data16
or
std
in
addr16
mov
inc
cmpsb
subb
loopne
fs
pushf
jle
out
xorb
negl
imul
rorb
into
int
stos
mov
scas
rcl
mov
sbb
in
xorl
mov
jne
fwait
shlb
xor
and
cmp
popa
jl
or
sbb
jne
fwait
and
nop
fwait
lods
pop
xchg
dec
dec
fsubp
cmp
pop
xor
pop
or
dec
cmpsb
pop
addr16
mov
mov
xor
add
dec
ret
cmp
pushf
mov
jb
icebp
fcmovnb
or
cmp
into
mov
fsts
xor
sbb
pop
xor
dec
sbb
or
aam
lret
loop
stc
pop
jl
pop
xchg
xlat
cmp
push
mov
jb
mov
xor
imul
pop
dec
xor
call
imul
mov
inc
cld
mov
xor
or
mov
mov
shrd
shr
jmp
and
stos
push
scas
adc
xor
addr16
or
iret
add
or
dec
adc
add
mov
shrb
je
mov
mov
addr16
adc
fidivrs
subps
cmp
push
stos
pop
push
sub
in
xchg
ret
scas
or
clc
cmp
and
popf
xlat
inc
push
jae
mov
inc
fs
add
cmc
clc
outsb
add
test
scas
inc
cmp
iret
or
add
mov
mov
dec
aam
add
push
imul
cld
stos
repz
push
pop
mov
jmp
lea
pushf
pop
mov
lods
loope
mov
push
cmp
jns
pop
je
cmp
mov
mov
sub
cld
incb
pop
lods
into
push
loop
ret
loope
cs
mov
out
in
xchg
ja
sub
out
ret
scas
out
push
subl
jae
out
xor
dec
xor
inc
jb
inc
int
faddl
jb
ds
xchg
test
push
mov
jg
aam
imul
sub
jge
adc
add
insb
insb
inc
mov
mov
sub
loopne
xchg
popa
push
into
ja
scas
mulb
push
mov
out
sti
iret
jns
icebp
outsb
adc
pop
push
add
jae
push
push
test
jecxz
cli
and
aas
xchg
inc
data16
push
sbb
jp
inc
mov
outsl
iret
cmp
or
aam
pusha
loope
in
sub
xchg
aad
pop
arpl
sbb
ljmp
loopne
jns
lds
lock
gs
mov
and
lock
push
xchg
mov
inc
popf
scas
aad
pop
push
cmpsb
cmp
jno
mov
mov
ss
mov
fwait
mov
popa
fwait
inc
cmc
gs
cmp
imul
nop
inc
sbb
mov
dec
pushf
les
inc
xor
cmpsb
sbb
leave
xchg
adc
jns
loop
push
inc
cld
cmp
cmc
inc
cltd
call
cs
call
mov
les
enter
rorl
repnz
xlat
mov
fcoml
inc
xor
sbb
test
pop
inc
jle
pusha
popa
mov
loopne
sbb
inc
push
daa
test
push
mov
lock
mov
push
or
pushf
jge
icebp
or
movsb
out
sarl
pusha
sbb
in
outsb
sub
mov
lods
lcall
xchg
push
fisttpll
cmpsl
add
xchg
add
inc
mov
fwait
jae
sbb
cmpsb
faddl
cli
insl
in
data16
repz
cli
lods
loop
shll
xchg
mov
popl
pop
fwait
and
int3
sti
jmp
test
fistpl
jae
xor
fidivrs
repnz
call
push
lds
jle
cmpb
push
sub
jbe
sub
out
std
leave
test
jb
adcb
test
mull
push
loope
cmp
cs
movsb
inc
jecxz
in
dec
sahf
mov
int3
lahf
inc
mov
dec
push
scas
jne
js
lds
mov
mov
daa
cmp
jle
pop
cmpsb
mov
cmp
arpl
ljmp
and
testb
mov
lcall
mov
cmp
lret
jo
sub
xor
mov
test
dec
adc
movsb
xchg
cmc
xlat
hlt
ljmp
jns
push
mov
loop
fcompl
test
push
and
mov
cs
fldt
pop
push
loope
add
pop
pop
cld
scas
jb
in
jo
lock
icebp
pop
fimuls
test
inc
cmpsb
call
jnp
xor
and
jge
dec
and
lock
loop
mov
dec
outsl
cmp
outsb
aad
push
dec
dec
push
inc
push
inc
xchg
nop
mov
mov
out
out
adc
movsb
mov
xor
repz
arpl
adc
repz
sbb
or
popa
shl
std
mov
xor
orb
lret
sub
mov
cmpsl
movsb
cmc
rol
imul
add
fnstcw
cmp
push
cli
pop
jnp
aas
sub
fsubrs
enter
test
test
pop
jecxz
loope
jl
push
ds
pop
pop
in
int3
jmp
iret
or
cwtl
fs
push
dec
xchg
popa
push
imul
stos
mov
pop
jo
out
pop
pop
sbb
rolb
sub
repnz
xchg
orl
out
aas
push
sbb
iret
adc
push
jo
popf
push
js
rclb
mov
adc
test
pop
aas
lcall
mov
push
aam
outsl
daa
cmp
pop
mov
gs
add
add
cmpsl
push
imul
rolb
dec
mov
gs
and
push
inc
scas
jmp
adc
sbb
dec
insl
icebp
push
incb
xor
push
mov
nop
call
shll
push
push
enter
adc
fs
pop
pop
sbb
and
jle
ficoms
add
xor
std
mov
push
or
adc
adc
add
scas
outsb
into
adc
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
clc
clc
dec
xlat
dec
adc
mov
lods
or
add
or
aaa
loop
jp
insb
mov
out
sti
fisttpl
dec
or
data16
popf
jbe
insl
and
mov
pop
test
cmp
sbb
dec
push
xchg
fwait
int
cmp
dec
lea
jmp
dec
mov
or
or
adc
lods
inc
push
ret
xchg
outsl
jns
clc
dec
stos
insl
ret
pop
fisttpll
nop
int
pop
loope
lods
andl
or
test
mov
popf
adc
jnp
lret
push
insl
cmp
mov
daa
adc
dec
xchg
int
dec
jo
subl
stos
lcall
ret
scas
popf
sub
jle
ficoms
daa
fs
in
ret
inc
aas
mov
inc
imul
cmp
jp
xor
add
lcall
int3
jno
push
fistpll
dec
leave
mov
in
fcomp
jo
xchg
in
xor
iret
shr
mov
push
enter
cmp
cli
jae
and
inc
add
sbbl
jb
fisttpll
ja
adc
sbb
ret
xorb
push
loope
fisubrl
rcrl
and
or
pop
imul
pop
adc
int3
test
xchg
mov
jb
pop
popl
in
lret
sbb
es
test
cmp
rcrb
int
fisubrs
insl
push
xlat
adc
ss
lahf
and
in
mov
push
or
fdivr
inc
sub
mov
sub
les
popf
pop
jl
adc
pushf
jns
jge
push
inc
inc
jns
insb
int3
fbld
push
and
add
pop
jne
push
lret
insl
shll
enter
in
fisubs
fsubrs
xchg
jl
sub
lock
jmp
xchg
push
js
sahf
push
adc
mov
add
jmp
mov
in
sub
push
xchg
sbb
pop
push
movsb
pop
push
jbe
jbe
insb
daa
jo
adc
orl
jg
jbe
loopne
sbb
jl
xor
pop
ljmp
mov
arpl
out
test
mov
lods
test
repz
outsb
add
jmp
daa
aam
enter
test
mov
ljmp
mov
and
sub
cmp
in
sbb
inc
push
pop
adc
dec
adc
xor
rcrb
pushf
int
out
out
inc
cmpsl
adc
and
sbb
pop
sahf
out
push
lds
push
jg
adc
mov
cmp
or
fildl
shrb
gs
lds
test
pop
jmp
les
cld
adc
jmp
scas
ljmp
sbb
sbb
push
adc
push
arpl
mov
lahf
call
aam
cmp
test
inc
fwait
addr16
imul
lcall
push
frstor
adc
aas
pop
pop
sahf
push
sbb
lock
arpl
nop
sub
mov
icebp
pop
add
or
cmpsl
push
call
cli
stos
fmull
in
sahf
adc
bound
aas
sub
rcll
inc
insb
push
inc
out
and
jle
out
mov
push
aad
sub
stos
sub
and
cvtps2pi
mov
cmc
push
cs
ud2
xchg
jne
xchg
add
push
inc
ffreep
jp
push
jl
mov
mov
pop
in
adc
xchg
cltd
in
sti
sub
push
cmp
ret
nop
cltd
scas
gs
leave
push
adc
add
and
decl
jmp
mov
ljmp
in
arpl
fsts
js
add
fistps
into
push
test
popf
lea
ljmp
cwtl
mov
fidivl
loope
mov
jae
sub
loopne
mov
mov
pop
push
or
xchg
hlt
std
mov
rol
sub
mov
push
mov
xchg
jmp
inc
fwait
loope
fstp
and
insb
insl
and
lret
out
insl
in
jg
xor
xor
sahf
adc
mov
lret
les
call
inc
jecxz
push
scas
xchg
sbb
das
jne
xor
dec
shlb
inc
pop
cmp
mov
mov
pop
bnd
push
mov
jmp
xor
inc
scas
outsb
cs
add
inc
scas
mov
lcall
or
xchg
lea
pop
out
stc
ja
aaa
aam
push
push
enter
sub
xchg
cli
in
aam
daa
mov
push
or
outsb
rcl
push
xor
imul
xchg
push
enter
shlb
push
sbb
push
adcl
push
cmc
leave
jecxz
int3
pop
cmp
enter
data16
jmp
jno
daa
mov
repz
fwait
sub
out
ljmp
ja
subb
and
sbbb
test
and
jecxz
fistpl
cli
inc
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
jmp
jne
lcall
imul
addr16
rorl
or
add
or
push
pop
and
imul
out
mov
in
daa
fimull
repz
pop
push
in
mov
push
das
testb
call
jmp
outsl
hlt
and
fisubrs
jl
add
push
int
sub
int3
movsl
pop
bound
jo
dec
lea
dec
sub
rcl
mov
test
xchg
xchg
push
xor
dec
aam
mov
jp
fmull
mov
xor
dec
xchg
hlt
lret
ljmp
jmp
add
ret
movsb
loopne
push
lcall
jne
push
mov
cltd
mov
in
jns
test
mov
sub
push
addl
sti
jo
push
inc
arpl
add
popf
shll
sbb
mov
push
jmp
xor
mov
aaa
clc
js
sub
jg
aas
iret
inc
test
sbb
mov
push
or
imul
jns
lods
or
rclb
sbb
dec
pop
or
dec
pop
jp
sub
es
repz
mov
sbb
leave
iret
mov
mov
subl
ja
lea
pop
push
pop
lock
inc
insb
mov
and
ljmp
hlt
mov
jl
testl
xlat
movsl
push
pushf
jmp
cmpxchg
sahf
hlt
stos
inc
pop
pop
addb
les
popa
aas
cmp
mov
mov
adc
pushf
pushf
cmp
or
test
jnp
pop
popf
jb
leave
dec
js
xchg
loop
loopne
mov
mov
insl
int3
mov
inc
cli
outsb
mov
pop
push
repnz
fsubl
cmp
loopne
clc
scas
pop
mov
xlat
sub
insl
xchg
icebp
mov
pop
fsubrs
gs
jp
leave
cmp
push
arpl
loope
xor
pop
hlt
mov
mov
dec
popf
cmp
pop
pop
mov
iret
pop
xchg
push
jae
imul
aaa
inc
sbb
imul
push
sbbl
out
rolb
jbe
es
jae
sbb
xor
add
xor
ljmp
mov
imul
xchg
cmp
ret
fmull
lds
sub
std
repnz
pop
mov
pop
jmp
cmc
cmp
rclb
mov
xor
xor
push
outsb
in
push
mov
add
arpl
leave
jno
shl
xchg
dec
pushf
test
mov
shll
callw
sub
jg
adc
mov
pusha
imul
mov
call
adc
aas
push
lret
mov
xchg
fistpl
and
test
push
clc
in
mov
pop
pop
fisubs
adcl
lea
and
je
push
and
lock
mov
scas
mov
ss
add
xchg
inc
jge
mov
pop
nop
cli
mov
scas
jle
push
sar
push
mov
rolb
sbb
fstpt
fnstenv
cld
pop
adc
rcrl
sbb
push
mov
testl
pop
sub
cli
into
fstl
clc
add
xor
fstpl
push
adc
add
xlat
popa
mov
call
lahf
imul
pop
repnz
faddl
add
adc
add
xor
test
divb
mov
mov
iret
inc
cmp
xor
cmpsl
shrl
int
xor
jbe
inc
notb
lret
pop
loopne
inc
popf
mov
mov
pop
mov
lock
in
jecxz
movsb
push
nop
loope
xor
or
pop
push
popf
aad
adc
pop
push
jae
xchg
mov
fldl
or
orb
mov
xchg
hlt
jne
cmp
data16
dec
js
loop
mov
mov
jp
inc
frstor
popa
test
sahf
xorl
in
test
ja
adc
lds
fnstcw
addr16
out
cmp
mov
push
jmp
mov
mov
mov
xchg
call
aam
sbb
jp
mov
ds
xor
stc
outsb
les
loop
stos
xor
outsb
xor
in
or
loopne
and
rcrl
movq
nop
push
mov
xor
jae,pn
jecxz
mov
push
pop
push
fwait
sahf
mov
fidivrs
mov
das
jae
fs
lods
fisubrs
adc
inc
pop
mov
data16
dec
mov
add
and
js
aaa
or
lcall
hlt
pop
mov
sbb
mov
loope
inc
sub
mov
add
mov
jae
addb
iret
icebp
sahf
jne
stos
mov
mov
or
push
add
rcl
cmp
in
xchg
aam
pop
movsl
lds
push
aam
mov
mov
xchg
fwait
xchg
mov
repz
mulb
or
or
iret
add
or
xor
adc
ja
adc
leave
push
and
pushf
xchg
iret
out
das
cli
lret
inc
dec
loope
std
cmc
in
mov
mov
dec
loope
xchg
adc
cltd
xchg
mov
sbb
or
loope,pn
lds
jno
xor
rorb
push
pop
mov
jae
aaa
mov
jl
dec
xchg
insl
les
push
sub
pushf
and
push
jb
sub
cmp
jae
lahf
imul
or
out
push
xchg
jo
ss
jno
sti
or
je
add
push
mov
int
sbb
mov
imul
insl
jecxz
imul
jg
sbb
std
pop
mov
shl
aas
loop
or
pushf
lds
jno
fxch
mov
cld
aaa
jne
push
std
dec
cmp
mov
jae
movb
cmp
lds
daa
lock
sbb
stc
push
rcrb
xchg
fstpt
aad
int
push
adc
mov
insb
pop
xchg
xchg
ljmp
lock
pop
mov
and
sbb
aam
mov
jecxz
jns
push
std
dec
add
lods
clc
dec
daa
movsl
pop
jb
cwtl
clc
dec
je
loopne
dec
push
mov
push
adc
mov
jns
popa
mov
cwtl
mov
fcmovne
xchg
sub
gs
or
add
sbb
icebp
mov
int3
pop
imul
js
xchg
arpl
and
cmpl
sbb
pop
and
sbb
sub
jb
sub
adc
jmp
mov
cmp
pop
aam
jge
stos
roll
cmp
mov
jo
pop
and
pop
int3
push
aad
sub
jns
inc
adc
push
pop
cmpsb
cmp
dec
or
orb
mov
xlat
sub
std
mov
mov
bound
in
sub
adc
and
clc
int3
push
outsb
jnp
jmp
fnstenv
fsubrp
call
push
in
mov
add
mov
mov
lock
das
repz
pop
xchg
and
dec
cmc
fwait
jbe
xor
fs
jmp
aad
xor
cmp
lcall
cmpb
inc
jae,pn
pop
popa
testb
mov
mov
mov
xor
inc
cmp
pusha
push
mov
es
shll
mov
cmpl
inc
movsb
fldenv
mov
cli
cmpsl
push
shrb
movsb
sahf
iret
inc
xor
jp
dec
xlat
push
xchg
scas
imul
or
inc
push
mov
xchg
push
inc
cmp
sar
lds
inc
dec
invd
loopne
push
sti
mov
je
push
xlat
leave
sub
std
pop
imul
or
imul
add
adc
dec
test
jecxz
xchg
outsb
out
adcl
int
inc
push
icebp
loope
jp
insb
mov
jbe
lahf
push
mov
out
push
test
mov
mov
out
sbb
adc
mov
mov
frstor
lret
fxch
mov
out
sub
pop
loope
jne
in
hlt
stc
adc
sar
cmp
ss
mov
pop
nop
xor
imul
xor
push
or
mov
xchg
cmp
dec
pop
addr16
add
aam
fimuls
push
paddsw
mov
mov
mov
pop
popf
imul
mov
cmpsb
pop
mov
clc
xor
jp
les
gs
mov
shrl
mov
mov
out
mov
gs
mov
mov
xor
mov
add
push
sub
jno
add
test
idivl
loop
pop
fidivrs
dec
cmp
cwtl
adc
mov
pop
pop
mov
jmp
push
imul
lods
push
sub
pop
sar
pop
sub
push
scas
lods
jne
jno
fldt
stos
jge
std
mov
rcll
and
or
sbb
add
sub
loope
frstor
cmpsb
repz
lea
jns
jne
popf
pop
and
inc
push
outsb
xchg
outsl
dec
adc
and
aam
iret
stos
add
outsb
sbb
rorl
pop
call
add
rorl
or
adc
in
cmp
incb
femms
jae
mov
outsb
mov
sarb
jp
mov
xchg
adc
divl
pushf
scas
mov
lret
ret
cwtl
adc
mov
popf
push
push
push
add
dec
and
in
js
push
mov
jne
cmp
fsts
push
enter
outsb
inc
push
insb
mov
sbb
inc
test
xchg
mov
pop
jae
pushf
xchg
cmp
idivl
adc
sbbb
je
mov
clc
jnp
cmp
xchg
adc
jmp
push
xchg
or
add
scas
insb
and
cli
inc
fiaddl
push
lds
inc
jl
jg
fimuls
jbe
xchg
sti
xchg
jno
push
insl
shll
inc
fiaddl
mov
mov
inc
icebp
push
xor
bound
shlb
rol
push
xor
mov
mov
jmp
jge
inc
pop
pop
push
cld
mov
shll
or
add
or
pop
loope
stos
gs
sbb
inc
fnsave
test
sbb
push
add
jle
js
stc
lods
lcall
sbb
andl
lds
inc
fs
jns
fwait
jmp
cmp
add
clc
pop
stos
out
xchg
ret
repz
lods
test
andl
ror
mov
push
cwtl
cwtl
pop
jge
push
or
lret
dec
push
shrl
sub
pop
lret
pop
adc
jg
aad
scas
in
push
jnp
out
adc
hlt
fiadds
cmp
into
lret
sahf
push
adc
or
sub
push
leave
sbb
sbb
pop
xchg
aad
fbstp
mov
xchg
push
push
cmp
leave
lea
sub
dec
and
inc
inc
mov
test
jb
inc
mov
dec
imul
cmpsl
mov
insl
in
dec
movsb
pop
pop
out
adc
mov
loopne
scas
roll
jle
lret
jbe
mov
mov
int3
shll
mov
add
subb
mov
xor
lret
in
mov
push
cltd
hlt
outsb
aas
mov
or
stos
adc
and
push
jae
sbb
cmp
popl
push
testl
pop
scas
jmp
inc
and
jp
pop
in
adc
push
mov
cmp
jne
outsb
jecxz
sbb
int3
fsubrs
iret
ss
cmp
fldt
loope
push
shlb
mov
cmpsl
lods
loop
xchg
je
cmp
shrl
sbb
push
test
or
jns
inc
stos
outsl
mov
inc
repz
jge
sbb
cmp
cli
iret
add
mov
loopne
mov
xchg
or
mov
or
mov
push
adc
mov
pop
mov
dec
jmp
and
rorl
mov
push
pushf
call
xchg
dec
cld
les
and
pop
mov
neg
in
adc
jg
inc
cmp
cmp
xchg
mov
fs
adc
xchg
loopne
shlb
ja
dec
lds
pop
mov
mov
in
jge
fstl
ficompl
test
ror
test
add
fadds
pop
aam
sbb
repnz
add
pop
mov
dec
pop
push
pop
pop
dec
rcr
pop
shrb
cli
sahf
testl
add
fsubrs
loopne
stc
int3
lock
rcrb
paddusw
push
mov
push
test
jle
mov
add
cmp
push
jecxz
lods
into
cli
fsubr
cmc
mov
jg
in
int
push
cli
xor
leave
xchg
call
lret
and
mov
add
jmp
dec
out
mov
in
ret
testb
bound
xor
int
or
andl
push
pop
ret
inc
mov
jbe
sbb
imul
fisubrl
mov
adcb
sarl
lcall
in
and
pop
cli
cltd
push
jns
enter
stos
xor
fdivs
ret
in
inc
iret
sbb
fists
ljmp
sbb
inc
test
or
cli
pop
aas
or
into
cmp
out
fdivr
cmc
or
das
mov
scas
mov
sbb
pop
fs
mov
pushf
mov
mov
inc
lret
aas
out
push
inc
or
push
test
stos
fdivs
pusha
jl
cmp
dec
or
inc
mov
ljmp
lea
stc
adc
cwtl
out
shlb
nop
sbb
sbb
mov
dec
insb
sub
pop
sub
adc
cmp
lea
push
scas
test
mov
ja
fucomi
jl
add
or
lahf
jle
std
andl
test
es
insb
fimuls
push
sbb
rorl
jbe
bound
adc
shr
in
sbb
subl
sbb
sahf
xor
pop
xor
outsl
aad
jle
add
push
ja
adc
movsl
aad
sub
insl
hlt
xor
ds
mov
mov
cmp
xchg
adcl
and
inc
js
mov
cmp
stc
lret
shlb
out
jae
xor
xchg
in
sbb
xchg
lock
movsl
and
lahf
jl
repz
xor
dec
mov
adc
push
mov
pop
inc
jge
mov
in
inc
sub
mov
out
jae
push
add
mov
pop
pop
gs
fdivrl
fdivr
sbb
stos
mov
mov
xchg
dec
jg
mov
test
icebp
add
mov
inc
cmp
inc
cwtl
mov
scas
xchg
xor
pop
inc
mov
mov
aad
xor
cmp
in
scas
ret
sub
jno
sbb
cmp
mov
xchg
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
jmp
popa
jb
clc
xchg
pop
and
push
pop
jne
push
dec
jne
mov
or
add
or
and
fistl
cmp
ret
xchg
mov
movzwl
pop
nop
shld
scas
outsb
xchg
mov
sbb
pop
loop
xchg
addr16
orb
pop
decl
dec
cmpl
cmp
xlat
mov
loopne
pusha
adc
getsec
dec
mov
adc
bound
iret
daa
jns
inc
or
repz
scas
xor
or
lds
jno
fcmovb
in
inc
rorl
lcall
mov
and
xchg
push
loop
xchg
popa
movsb
dec
call
repz
addr16
xchg
push
fists
push
stc
lret
cmp
mov
das
shrb
int
les
je
push
xchg
addr16
add
cmp
inc
outsb
jo
xorb
daa
jl
and
and
dec
mov
cmc
test
into
ljmp
clc
sbb
incb
mov
pop
cmp
mov
aaa
push
mov
push
sub
fildll
bound
lock
in
jnp
and
pop
pop
fnstcw
push
shll
loope
xor
sbb
pusha
loop
dec
cld
mov
jmp
mov
xor
lret
jg
in
loopne
mov
sub
pop
pop
lret
cmp
mov
jb
sbb
pop
nop
xor
lahf
les
ja
sub
aam
leave
inc
xchg
hlt
mov
jle
adc
mov
fisubrl
push
xchg
fcoms
jns
adc
rcl
push
pop
inc
daa
arpl
dec
adc
push
and
aad
mov
addr16
in
lods
fmull
fs
pop
out
testl
xor
int3
das
inc
sub
sbb
push
shlb
adc
movsb
ss
arpl
aam
add
pushl
cmc
aad
and
mov
in
int3
xlat
nop
sarl
rorl
fwait
push
out
mov
cmpsb
les
or
push
cmpsb
add
shlb
jge
fnsave
pop
mov
adc
leave
sub
rdpmc
scas
mov
jo
pop
or
shlb
inc
out
outsl
mov
das
push
push
repnz
movsb
cs
fmul
roll
imull
shrl
sub
dec
insl
dec
in
out
cmp
loopne
lret
rclb
mov
movsbl
jns
in
pushf
call
fstps
imul
pop
inc
dec
jecxz
mov
dec
jmp
xor
rorl
repnz
jb
iret
out
scas
scas
sti
jmp
mov
jle
mov
popa
cli
stc
xor
push
sub
stos
gs
ret
mov
in
ds
insl
std
sti
jmp
jle
test
cwtl
sub
daa
or
push
sub
ret
popa
fistl
adc
dec
rorl
pop
mov
xchg
test
insl
jg
gs
jae
ret
sub
fwait
sbb
test
or
jae
aaa
call
mov
or
bound
out
add
push
cwtl
popf
shrb
inc
sub
jns
mov
cmp
pop
test
push
adc
or
rcl
fldcw
sbb
ds
addr16
test
jmp
xchg
xchg
sbb
arpl
adc
iret
int
cmp
in
pop
xor
arpl
popf
jns
jge
movl
lods
xchg
shlb
int
dec
xchg
sub
pop
inc
dec
pop
mov
xchg
mov
adc
dec
shlb
jo
xor
rcl
fdivl
jb
insl
bound
in
daa
mov
shrl
ljmp
add
sbb
inc
or
ret
sbb
fcmovnu
add
mov
stc
loop
xchg
lock
pop
push
pinsrw
and
mov
inc
sbb
imul
or
daa
nop
enter
sahf
fisttpl
ret
arpl
pushf
add
lret
lahf
or
aaa
dec
addl
enter
mov
cmp
xor
xchg
pop
lods
push
mov
adc
in
fisttpl
js
and
or
xchg
shl
cmp
inc
inc
pusha
adc
fdivrl
pop
and
pop
push
and
pop
lahf
das
out
sbb
inc
dec
pop
sbb
pop
xchg
dec
sub
xchg
cmp
fcompl
pop
sbbb
pop
adc
inc
push
mov
scas
fwait
std
and
jp
sub
out
nop
or
icebp
add
xor
ds
mov
test
cmp
ret
and
repnz
mov
repnz
jne
dec
sarl
aad
loop
nop
inc
in
xchg
loope
inc
call
sub
sbb
sub
sbb
imul
pop
ret
push
icebp
mov
dec
and
int
ret
and
loopne
fwait
js
cmp
test
cmpsb
hlt
cmp
shlb
adc
sub
iret
je
sahf
pusha
insb
into
popf
inc
je,pn
pop
jnp
js
test
movsl
shlb
sub
in
jge
pop
jl
xor
jno
in
xchg
cmp
push
add
inc
addb
jl
mov
mov
xchg
std
pop
stc
jg
xchg
call
push
pop
jne
ljmp
adc
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
jmp
outsl
or
shll
xchg
daa
ja
sbb
cmpsl
mov
mov
or
cwtl
add
pop
and
daa
ljmp
xchg
xor
cmc
push
clc
fldenv
mov
mov
test
loopne
ficomps
jno
cld
pop
insb
imul
outsl
lock
add
lret
mov
fisttpl
aad
fists
jns
mov
jecxz
fisubrl
pop
ja
shlb
adc
jg
mov
sub
inc
fcmovnbe
shr
das
push
cmc
or
jle
jle
leave
cmp
xor
out
pop
gs
jge
fstp
in
push
or
insb
and
scas
dec
adc
jl
mov
cmpsl
mov
pop
push
insl
and
pop
xchg
push
lret
lock
cld
outsb
push
jg
nop
enter
add
cmc
mov
jmp
pop
push
jp
lcall
jmp
sbb
mov
scas
mov
call
clc
mov
jp
pop
and
sub
arpl
inc
mov
cmc
add
cli
mov
stc
inc
mov
jg
dec
xchg
jno
jnp
mov
jecxz
add
loopne
lret
mov
cs
dec
mov
push
aad
and
lret
push
mov
mov
stos
lahf
cmp
loop
add
sub
pop
add
inc
jbe
dec
adc
mov
insl
or
or
jle
shlb
jno
movsl
xchg
pop
loope
jbe
movsl
test
xchg
loope
mov
ficoms
inc
decb
imul
test
shrb
inc
inc
jae
sbb
stos
and
cmp
dec
push
imul
cli
iret
push
aaa
movsb
sti
or
insl
cmp
inc
in
repz
inc
sub
sahf
dec
out
or
dec
lock
mov
or
in
fs
add
les
jle
dec
mov
sbb
pop
stc
sub
ret
inc
scas
inc
mov
out
inc
dec
dec
push
mov
aam
mov
sahf
nop
pop
ss
in
gs
lcall
pop
scas
icebp
andl
es
fwait
pop
mov
xchg
imul
adc
mov
mov
jp
test
mov
push
int3
rorl
mov
int
xchg
xchg
sar
sub
fldenv
jbe
add
xchg
sbb
and
or
adc
fadd
in
cmp
jge
push
adc
inc
insl
jecxz
cltd
mov
mov
js
cmpsb
clc
mov
cmp
sbb
scas
jbe
inc
sub
jge
test
arpl
ret
inc
out
outsb
cmp
dec
pop
mov
jnp
lods
mov
ret
cwtl
xchg
adc
fsubr
dec
ret
lret
inc
and
cmc
stos
pusha
pop
adc
push
or
nop
jne
push
in
push
or
in
aas
or
mov
mov
mov
adc
mov
xlat
iret
rorl
adc
aam
sbb
add
mov
test
test
pop
in
sbb
out
cwtl
cmp
js
loop
ds
stos
and
mov
adc
pop
xor
cld
out
xchg
mov
scas
push
jne
sub
test
mov
lret
out
das
std
inc
lds
repnz
cmpb
outsb
das
cmp
xchg
bound
cmp
and
rcll
ljmp
xchg
pop
outsl
inc
inc
sbb
nop
sbb
data16
rcrl
jo
jo
in
es
adc
enter
fucomp
mov
aaa
gs
in
mov
xchg
icebp
sbb
mov
lret
and
insb
sub
push
cs
gs
ret
lret
xor
inc
sub
pop
fs
shl
inc
xchg
and
mov
ljmp
fmuls
mov
jg
jb
dec
subl
movsb
sbb
add
mov
ljmp
cli
dec
sub
inc
arpl
icebp
pop
and
add
mov
mov
pop
ret
mov
out
pop
xchg
or
xor
pushf
pop
add
mov
cli
aad
jo
mov
lcall
xor
orb
sub
fldt
insb
dec
jg
int3
icebp
fbstp
ret
test
and
mov
test
fistpll
repnz
lock
mov
dec
sub
repnz
in
xor
movsb
adc
inc
fiaddl
cltd
push
mov
mov
cmc
mov
in
imul
push
mov
xor
nop
lret
cmp
rcrl
nop
sub
mov
push
sahf
lds
fldcw
sbbl
add
sub
repz
jp
xchg
rcrl
movb
dec
fldt
fisttpl
iret
dec
inc
xlat
mov
or
push
stos
add
xchg
popa
jge
cwtl
shll
jb
cmp
out
mov
icebp
add
cmpsl
sub
or
dec
mov
insl
test
stc
mov
enter
jb
ljmp
mov
jmp
in
cld
adc
daa
xlat
pop
pop
stc
push
mov
setge
or
add
or
mov
pusha
xor
test
fmulp
lock
out
je
test
push
loop
adc
outsb
mov
cmpsb
xor
fwait
ljmp
mov
mov
fs
jle
inc
sub
lahf
xchg
adc
dec
and
inc
sbb
int
sub
mov
in
orl
xchg
pop
gs
mov
mov
sub
mov
mov
imul
aam
and
iret
dec
jp
jae
jmp
lods
das
mov
outsb
xorb
js
add
and
sbb
ljmp
arpl
jg
push
sub
push
insb
mov
das
stc
xchg
and
mov
cmp
mov
fwait
js
cmpsb
movsl
jp
flds
popa
inc
xchg
push
xchg
sub
les
mov
xor
cltd
stos
jge
les
dec
rolb
insl
lea
popa
push
neg
jge
jp
data16
ljmp
xor
cmp
into
adc
jno
lcall
push
repnz
mov
xchg
stos
mov
mov
in
dec
sub
es
cli
cmc
or
rcrl
pusha
cld
xor
lret
mov
dec
add
xchg
cmp
add
shr
fistps
add
sti
sbb
int
lcall
mov
fldenv
mov
mov
in
mov
inc
cltd
imul
jb
push
int3
inc
sbb
dec
sbb
cmp
andl
adc
mov
in
sub
pop
jecxz
ror
out
es
lods
dec
popl
xchg
out
mov
push
inc
lods
adc
nop
pusha
push
test
adc
pusha
sub
sub
loope
xor
les
movsl
lahf
cmp
or
inc
cmp
pop
mov
into
xchg
lret
scas
lea
stc
jb
insb
mov
dec
gs
fs
dec
xor
mov
xlat
inc
call
push
jmp
mov
mov
test
pop
inc
sub
mov
out
xor
adc
cwtl
and
int3
mov
add
in
loop
or
out
icebp
mov
fnstenv
xchg
mov
scas
outsb
movsb
add
xor
movsb
insb
repz
jne
insb
pop
andb
ret
add
sbb
fists
fs
adc
shl
call
cltd
cltd
or
cmp
lods
fbld
rcrb
test
mov
ds
movsb
jp
cmp
push
into
jge
push
sub
push
cmp
push
orb
rol
and
fwait
adc
fadds
mov
cmp
sbb
test
mov
lods
or
popf
outsb
xorb
pop
jg
jns
lods
xor
xchg
in
int
sbb
pop
ss
xor
les
inc
lcall
cmpsb
xor
pop
fmul
xor
test
notrack
fcmovbe
movsl
ljmp
xadd
lcall
stos
push
mov
es
nop
int3
in
adc
sahf
ss
pusha
mov
js
popa
test
xor
imul
push
jle
cmp
ss
mov
out
popa
mov
or
jb
lock
cmpsb
and
dec
lahf
enter
adc
imul
cli
fidivrl
push
xchg
mov
xchg
ficomps
pop
cmpsl
pushf
test
xor
adc
out
xchg
pushf
xor
dec
aas
xchg
or
mov
andl
orb
jl
iret
xlat
dec
jb
lahf
mov
clc
mov
push
add
pop
mov
add
mov
lret
pop
or
cmp
dec
mov
mov
cltd
hlt
pop
or
mov
jno
sub
add
xlat
ds
nop
cld
or
add
inc
lcall
jo
int3
or
ja
insl
stos
adc
int
xor
and
push
sbb
or
data16
add
test
inc
into
jne
vpavgw
pop
in
pop
jo
add
mov
sub
addl
enter
push
imul
xor
arpl
xchg
cmp
jns
lret
fs
mov
add
divl
in
test
sub
jno
push
pop
push
fwait
pop
mov
shr
iret
lahf
push
movsb
sbb
ja
mov
fidivs
pop
xor
sbb
adc
jge
insb
divb
cmc
in
fldt
adc
aad
jae
mov
cmp
cmp
mov
ljmp
or
clc
mov
movl
adc
mov
adc
pop
jl
fwait
mov
push
dec
fiadds
push
outsb
xor
stc
cli
jne
popf
fcmovbe
jp
loopne
sub
shll
inc
inc
lahf
mov
ret
push
xchg
push
mov
data16
clc
into
sbbb
out
sub
mov
jle
test
cwtl
scas
sahf
in
mov
stos
push
mov
es
jno
pop
bound
sub
lods
rolb
mov
mov
xor
shr
mov
xor
shl
jmp
sbb
adc
mov
push
stos
cmpsl
lds
or
push
loope
adc
cmp
adc
mov
cmpsb
sub
dec
or
jecxz
push
sbb
jp
mov
sbb
jno
hlt
jne
xchg
in
aam
popf
pop
leave
pop
fwait
fs
jnp
sub
test
xchg
add
inc
leave
mov
jge
cld
mov
push
ja
adc
pandn
add
lds
mov
movsb
xor
out
leave
lea
xchg
movsl
and
sub
mov
imul
push
xor
sarb
rorb
pop
out
call
popa
sub
xchg
fdivp
in
inc
push
add
int3
adc
mov
lds
push
lock
imul
addr16
add
jo
lods
stos
mov
out
sub
mov
in
and
jecxz
repnz
jae
fcoms
popa
mov
jle
and
jns
or
push
inc
jnp
jb
xchg
adc
lcall
rorl
jbe
xchg
mov
shr
mov
and
pop
cltd
test
es
push
test
data16
decb
dec
adc
push
and
inc
sub
fwait
xchg
add
aad
push
inc
cmp
rcrb
jno
pop
cmc
std
jno
xchg
and
dec
xor
mov
mov
jg
cmp
sti
jae
rcrl
out
pusha
ljmp
inc
inc
xorl
bound
int3
cmpsb
in
scas
push
dec
mov
lret
mov
lret
adc
jae
pop
push
ret
pushf
pop
mov
lcall
gs
pop
sti
inc
mov
lods
sub
test
or
push
and
cmp
jbe
mov
push
jo
push
call
das
cmpsl
rcrb
out
sub
inc
adcl
xor
jl
rcrb
cmpsb
inc
nop
pop
out
gs
clc
push
add
sub
pop
push
xchg
mov
pop
mov
xchg
notb
push
insl
dec
push
xlat
ret
lret
push
lcall
sub
dec
popa
into
in
cmp
inc
orb
mov
jo
mov
popf
std
mov
pop
add
insl
and
rcl
pop
mov
in
mov
or
dec
pop
movsl
filds
gs
fst
leave
jno
filds
dec
lea
cld
dec
cmp
sbb
cli
pop
add
pushf
pop
add
frstor
push
cmp
inc
std
adc
add
push
or
mov
in
push
test
lsl
dec
scas
cmpsb
inc
inc
pop
adcl
pop
sbb
bound
shlb
mov
jmp
xor
adc
test
xor
inc
xor
lret
test
outsb
sbb
test
add
xchg
mov
xor
outsl
sub
rcrl
inc
jmp
or
sub
ds
mov
aad
insb
stc
daa
popa
mov
int
pop
pop
sub
mov
das
push
pop
inc
sbb
into
popa
pop
mov
out
lahf
fs
jb
mov
inc
shr
add
xor
or
ss
or
sub
sbbl
rclb
call
sbb
jmp
jnp
cmp
add
push
aad
add
notl
daa
adc
mov
push
and
fwait
int
mov
test
xor
std
and
scas
push
pop
jne
outsl
mov
stos
mov
out
out
mov
jnp
lods
cmpb
sub
in
jb
mov
and
push
inc
xchg
imul
ds
fisubrl
jb
int3
mov
or
push
xor
sub
cmp
add
push
add
cltd
sub
mov
pusha
mov
add
fsub
adc
adc
mov
sub
dec
popl
xchg
call
enter
sti
loop
sub
pop
cmp
mov
xor
and
push
in
push
pusha
xor
enter
sbb
inc
sub
sub
bound
or
subb
popf
push
pop
pop
pop
lahf
jl
imul
aad
jl
bnd
sbb
add
xor
dec
sub
push
mov
push
lret
push
das
or
aam
shlb
pop
mov
fwait
into
and
icebp
inc
push
push
imul
sarb
daa
mov
lret
ficomps
in
arpl
imul
cmp
mov
sahf
ret
or
dec
ss
and
test
ljmp
push
bound
rorl
test
test
ret
testb
das
lock
or
inc
dec
mov
cmp
cmp
sbb
ficoml
dec
sbb
movsb
mov
and
xor
or
fnsave
push
adc
push
fmuls
fdivl
rorb
movsb
ret
rorl
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
jmp
add
cmp
adc
sti
add
jae
jl
or
iret
add
or
imul
mov
dec
dec
lahf
lea
lods
push
arpl
enter
in
fsts
mov
inc
fldl
adc
test
jns
fnstcw
cs
mov
sbb
cwtl
push
xchg
into
or
jge
xor
ja
jne
lahf
mov
or
dec
inc
repnz
mov
xchg
mov
icebp
dec
rcrl
pusha
out
sarb
loopne
out
cmpsl
dec
js
mov
sbb
sti
arpl
push
push
mov
sub
mov
or
xchg
adcl
dec
pop
pop
les
les
pop
dec
mov
pop
lds
dec
and
repnz
cmp
jl
mov
inc
jle
scas
scas
ljmp
mov
lock
mov
mov
mov
out
xor
repnz
sbb
pop
outsb
les
addr16
dec
push
pop
pop
into
test
stos
lcall
es
out
decl
jb
lods
push
xor
jg
inc
stos
pop
bound
inc
push
lret
cmp
and
enter
pop
inc
ja
adc
int
or
pusha
sub
mov
sbb
fidivl
sti
cmc
dec
mov
leave
jne
orb
pop
jb
outsl
roll
pop
inc
dec
sbb
lods
pop
rorl
aaa
popf
imul
and
loop
fwait
divb
movsb
iret
sub
ret
cmp
jne
xlat
push
scas
dec
inc
jno
loope
xor
dec
add
insb
movsb
jl
das
mov
sbbl
push
push
roll
nop
pop
add
clc
in
dec
ret
lea
imul
paddq
mov
subb
inc
jo
cmp
js
das
push
or
outsb
aas
cmp
mov
jnp
cmpl
fiadds
inc
xchg
lcall
xchg
out
es
inc
xchg
pusha
sahf
add
ret
adc
jle
lret
jge
or
push
add
jge
scas
cli
sub
mov
test
xchg
iret
jecxz
jne
add
jle
sahf
sub
scas
lods
lods
sar
and
std
in
dec
and
lea
adc
jle
xchg
mov
mov
movsl
dec
mov
xchg
repz
test
ret
xchg
into
loop
lret
shrb
ja
add
cmpl
lods
push
add
outsl
jl
lock
ret
mov
xchg
enter
aam
xor
fucomp
out
pop
movsl
fwait
dec
cli
movsl
dec
pop
into
addr16
or
add
mov
pop
add
in
hlt
cmp
mov
aaa
push
cvtdq2ps
cmp
es
ret
cs
xor
adc
rclb
and
out
pop
or
push
pop
testb
js
or
ret
les
mov
insl
push
inc
cmpsb
inc
sub
or
stc
dec
lds
cmpsl
int3
fisubl
mov
jnp
fs
movsb
mov
sub
cmp
aas
or
addr16
adc
stc
or
xchg
adc
fsubrp
ret
in
gs
ss
push
cli
sub
lret
xor
les
xor
jmp
daa
insl
inc
pop
push
subb
ret
fiaddl
cmp
mov
mov
ljmp
push
or
imul
iret
xchg
jno
mov
mov
pop
test
cs
cmp
and
xchg
gs
iret
xchg
fildl
pop
and
popf
xor
jmp
cmp
pop
insl
jne
jmp
push
jmp
int
sub
ficoms
cmp
sbb
pop
lea
fsqrt
mov
lods
mov
mov
adc
jbe
fistps
jns
xor
mov
push
outsb
aam
inc
lods
cmp
mov
fildl
imul
mov
cmp
jg
cmc
sbb
loop
sti
sub
push
lret
movsb
push
pop
inc
mov
lods
icebp
sti
cmp
sub
out
not
rcll
movsl
jle
sti
out
sub
idivl
cmpsl
in
test
dec
scas
fstl
push
push
pop
jecxz
mov
cmp
fldt
xor
and
repnz
cs
lret
jmp
cmp
cmp
or
jecxz
add
jmp
jmp
push
push
cmp
dec
jnp
adc
clc
push
ljmp
stos
rcrb
xor
and
mov
cmp
jl
mov
sub
leave
aam
xor
mov
test
aaa
das
data16
mov
push
aas
mov
cli
jne
jno
xchg
flds
pop
pop
push
inc
mov
dec
add
cmpsl
mov
mov
cmpsl
fdivs
cld
cltd
pop
jg
mov
mov
mov
lret
xor
xchg
mov
pop
add
xchg
orb
add
into
andb
js
xor
add
ficompl
mov
testb
scas
jnp
jne
mov
push
in
sub
lock
jecxz
pop
dec
leave
xchg
pop
mov
jl
inc
popa
mov
push
push
adc
jg
cs
loop
mov
mov
xor
mov
mov
xor
xor
jmp
stos
ret
and
rorl
sbb
inc
mov
iret
add
or
cmpsl
sbb
add
jo
sti
sub
pop
rcrb
add
mov
xchg
movsl
lods
leave
dec
leave
cltd
adc
mov
mov
rcll
jne
dec
xorl
std
add
test
out
push
sbb
adc
mov
rcrl
lret
xor
pop
mov
in
sub
mov
or
inc
sbb
sbbb
lods
dec
cmpsl
cmp
xor
and
pop
out
test
cmp
incb
test
push
in
stos
out
xor
mov
adc
popf
pop
sub
mov
push
cmp
negb
xor
arpl
in
or
jecxz
mov
and
fistpll
inc
aaa
std
jmp
fldl
popa
sbb
cmp
sub
add
inc
aaa
add
xor
sbb
imul
ret
fchs
lahf
xor
xor
popf
or
lock
add
dec
mov
sti
gs
test
iret
dec
popa
hlt
xchg
aad
daa
out
xchg
aam
popf
xor
jg
aaa
add
fiaddl
push
test
mov
mov
pop
iret
das
xchg
gs
int3
rorl
cmp
push
xor
jge
jp
jno
sub
mov
cmp
iret
cwtl
rclb
jecxz
std
inc
inc
fistl
andb
push
mov
in
fnsave
pop
in
sbb
cs
test
adc
fldl
ljmp
cmpsl
imul
call
aaa
mov
cmp
stc
shl
jns
in
cli
inc
cmp
enter
into
out
fcomps
push
push
inc
sbb
das
push
mov
dec
adc
push
rorb
push
sbb
xchg
scas
and
cmpsl
pushf
lods
je
adc
mov
dec
adc
mov
rcrb
pop
xbegin
sbb
pusha
sub
mov
test
push
nop
mov
inc
sbb
mov
mov
or
xor
mov
add
inc
pop
cmc
fbstp
jp
mov
in
adc
bound
push
movsl
push
pop
dec
mov
adc
fwait
xor
ret
in
add
xlat
push
pop
dec
in
adc
adc
jno
mov
cwtl
mov
sbb
das
add
ret
xor
pushf
fisubl
mov
mov
jecxz
lea
push
and
push
addr16
ja
add
pop
adc
or
in
into
inc
imul
vandnpd
or
stc
ja
mov
rcrb
dec
mov
mov
in
int3
mov
cld
std
push
or
cmpsb
mov
fsub
mov
and
outsl
lock
stc
test
mov
repnz
pop
xor
test
sbb
ljmp
pop
int
or
adc
fldcw
mov
push
addr16
jg
xor
or
add
iret
push
dec
fldcw
add
cld
xchg
mov
pop
or
mov
test
lcall
push
je
test
ljmp
es
pop
sub
adc
imul
adc
and
rcrb
lods
jmp
shlb
imul
dec
aam
mov
and
fidivl
jbe
push
sbb
imul
xor
fists
pop
int
jle
out
mov
cltd
cvtpi2ps
inc
insb
pop
stos
or
push
add
mov
lret
dec
sti
in
movsl
fs
inc
js
and
push
inc
int3
imul
ficompl
ret
jne
into
pop
roll
adc
cmp
inc
push
inc
incb
icebp
push
testb
xor
dec
mov
and
push
mov
inc
stos
mov
in
or
gs
stos
jecxz
stos
jnp
xor
mov
mov
add
in
push
loop
es
jmp
daa
leave
rcrb
sub
jne
arpl
mov
adc
adc
aam
test
arpl
add
pop
icebp
dec
imul
aaa
popa
or
add
pop
fadd
bound
sub
lds
cmp
jp
lea
pop
jle
push
sbb
push
daa
lds
cmc
cmpsl
stos
pop
sbb
nop
push
mov
inc
pop
in
sub
mull
sbb
psubusw
cs
rcrl
jecxz
push
xor
dec
jne
sub
in
outsb
in
cs
push
popa
or
cli
xor
sbb
jmp
out
xor
mov
pop
jno
outsl
cmc
andb
enter
sub
push
fldt
or
cmp
clc
inc
and
test
enter
loop
mov
insl
lret
and
push
into
mov
sub
push
adc
sbb
jg
jb
xchg
insb
lds
xchg
loopne
xchg
enter
adc
jmp
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
jmp
lea
xchg
enter
jge
xchg
mov
imul
or
xchg
xchg
mov
mov
insl
int
xor
mov
xor
push
nop
inc
xor
fstl
inc
xchg
pushf
cli
or
mov
cs
jne
inc
mov
cld
xor
pop
das
lret
or
mov
jp
mov
in
cli
adc
gs
jecxz
xorb
stos
fs
xor
in
iret
or
push
fstps
lret
jb
push
ljmp
inc
lds
mov
sub
loopne
inc
daa
aad
mov
sbb
lret
pop
lods
fldl
jo
popa
outsl
sahf
mov
sub
and
idivl
cmp
push
xor
mov
scas
in
xor
jmp
adc
jae
push
lods
movsb
jge
sub
push
cld
lahf
loop
sbb
xor
enter
stc
sbb
xor
mov
pop
push
pop
or
les
test
int
pop
jl
mov
iret
or
pop
or
add
mov
daa
adc
lds
dec
sbb
jge
std
jo
sbb
mov
mov
adc
ficoml
lahf
push
dec
daa
loop
mov
int
cltd
and
or
push
cmp
enter
mov
mov
mov
ja
stc
call
mov
mov
imul
pop
cmp
sub
xchg
xchg
out
js
xchg
call
aaa
movsl
push
dec
jle
cmp
movsb
faddl
movsb
ret
mov
cltd
mov
push
fbld
ret
ret
xchg
rolb
mov
pop
data16
stc
faddl
inc
pop
xor
sbb
push
inc
push
mov
fsubs
adc
out
mov
out
enter
mov
pop
fisttpl
ss
mov
daa
fsubl
jmp
mov
cmp
sub
sub
repnz
es
cmpsl
icebp
inc
push
push
sbb
pop
je
call
mov
pop
dec
sahf
fmul
inc
mov
cli
and
xchg
cs
sbb
bound
call
pop
and
mov
cmp
sbb
jnp
sbb
xchg
test
jb
in
lret
in
test
mov
and
adc
jp
sar
lods
jnp
inc
xchg
sar
push
mov
js
mov
or
int
xchg
add
cltd
fwait
mov
xor
cmp
push
sbb
outsl
cltd
inc
xchg
or
pop
jb
mov
jge
push
mov
enter
pop
loop
jo
inc
mov
jmp
push
mov
sahf
dec
lds
lcall
sub
ja
dec
inc
mov
lock
fsubl
fnstsw
in
movsl
xchg
into
pop
cltd
sub
jo
inc
cmpsb
pop
iret
movsl
fdivrs
jmp
insl
mov
xor
inc
or
inc
jmp
xor
lret
fidivrl
lods
aam
push
dec
mov
xor
jmp
icebp
aam
and
add
fstl
sub
mov
push
in
mov
inc
pop
xor
bound
inc
cltd
jecxz
fsubrl
jmp
jo
in
inc
or
hlt
xor
cmp
xchg
lods
out
push
insl
push
out
cmp
sbb
push
movsb
adc
out
das
sbb
decl
jb
or
xchg
scas
gs
mov
flds
movsb
mov
xchg
pop
movsl
lea
aam
popf
mov
sub
sub
subl
loopne
push
rorl
inc
or
mov
pop
dec
adc
push
xchg
je
dec
decb
xchg
addb
rclb
and
inc
dec
fxch
ds
stc
jmp
jbe
outsb
and
pop
pop
mov
jecxz
cmpsl
pop
jno
mov
sub
cmpsl
lds
subb
in
in
gs
lds
or
sub
sub
fsub
xor
sub
call
aaa
dec
outsb
pushf
loopne
or
push
ss
pop
and
dec
in
jae
jle
push
movsl
cmp
xchg
mov
push
pop
xor
xor
xchg
cld
pop
stos
ret
cwtl
xorl
jne
ds
dec
test
inc
adc
lea
nop
add
arpl
sbb
xchg
sbb
daa
inc
pop
add
sub
jno
dec
loop
mov
sub
sub
cmpl
pop
push
hlt
xchg
lcall
jg
mov
insl
test
and
je
lock
insl
stos
adc
repz
push
pop
bnd
mov
in
cwtl
or
lahf
dec
ss
xor
call
imul
ret
sub
ret
mov
mov
mov
sarl
loope
mov
inc
fwait
add
xchg
jno
xchg
scas
add
pop
sarb
pop
mov
fldl
mov
das
js
cmp
dec
xor
add
jnp
nop
adcb
fsts
cmc
mov
push
lods
popa
es
sbb
mov
lea
pop
jae
mov
hlt
pop
or
push
inc
xchg
mov
push
push
push
call
shld
mov
xor
or
mov
mov
jmp
ja
popf
adcl
pop
fisubrs
mov
or
iret
add
or
pop
dec
adc
cltd
daa
mov
scas
push
pop
cmp
sbb
jo
pop
mov
inc
in
dec
xchg
xchg
iret
negl
pop
aad
push
push
cwtl
or
xor
pop
inc
mov
scas
jg
insb
push
call
cmp
test
xchg
nop
cmp
ljmp
pop
push
dec
mov
scas
and
jbe
cld
push
fiaddl
mov
je
fbstp
loopne
add
push
test
insl
scas
roll
ret
add
call
out
xor
pop
dec
in
addr16
mov
lods
dec
sti
xchg
scas
repnz
pushf
xchg
out
or
mov
add
xor
xor
test
pusha
sub
pop
enter
mov
movsl
jns
mov
push
cmc
call
in
cmpsl
adc
lret
loopne
clc
lret
jg
in
bound
out
cmpsl
xchg
ficomps
arpl
or
mov
jecxz
mov
push
pushl
inc
stos
fwait
or
adc
pop
cmp
add
push
shlb
mov
or
cmp
lea
shl
mov
mov
outsb
cmp
popf
add
call
or
sub
cmc
outsl
mov
cld
xorl
ds
cmp
iret
das
movsb
pop
repz
xchg
nopl
test
loop
data16
mov
lds
xchg
jbe
jbe
cmp
ljmp
cmp
mov
inc
lea
test
pop
ret
and
test
pop
out
loope
mov
imul
shll
nop
ss
loopne
push
mov
xchg
cli
pop
lcall
mov
xor
pusha
lds
pop
mov
mov
shrl
dec
daa
inc
repnz
in
xlat
arpl
sub
fcmovb
sbb
xor
hlt
mov
and
outsl
pop
push
pop
outsb
push
daa
lret
out
jp
jb
faddl
cmpsb
mov
mov
ds
lret
ljmp
sahf
xchg
mov
popa
pop
sub
ret
into
movsl
xchg
sub
bound
sti
decb
jecxz
jge
jno
pop
push
and
mov
vpavgb
dec
or
and
pop
and
mov
dec
inc
pop
andb
sbbl
xchg
js
in
call
jle
sub
xor
mov
rorl
cltd
lock
mov
mov
pop
fwait
outsl
sbb
xor
and
int
std
adc
mov
loopne
arpl
and
pop
xchg
es
or
loopne
iret
inc
test
out
repnz
cmp
and
inc
pop
xchg
push
mov
mov
nop
scas
pusha
ret
ror
aaa
jno
xor
data16
out
mov
jge
push
mov
cmp
stos
xor
fistps
inc
ss
sub
les
js
lret
mov
push
sti
popf
paddusw
xchg
movsb
adc
jl
inc
xor
mov
repnz
or
sbb
sbb
jnp
mov
sti
dec
fimuls
inc
enter
imul
xor
cmp
in
dec
mov
cmp
popa
inc
dec
subl
adc
add
jno
push
mov
lods
stc
jle
out
mov
mov
dec
cltd
xor
fsubrl
or
imul
loopne
enter
xchg
arpl
dec
sbb
js
in
clc
mov
imul
dec
ret
jp
iret
fmul
popa
pop
rclb
mov
xchg
mov
mov
adc
pop
pop
aas
bound
push
test
push
je
incl
enter
rep
add
arpl
outsl
jg
xor
sarl
iret
jb
movsb
cmpsl
hlt
aaa
js
or
lods
in
or
je
call
lcall
pop
adc
das
pop
inc
mov
lods
jno
mov
rcl
and
loop
xor
and
inc
loope
hlt
jb
pop
xchg
addr16
jo
inc
in
outsb
dec
or
lds
cmp
jge
clc
push
clc
fldt
adc
pop
notl
add
mov
adc
shlb
adc
mov
and
xchg
bound
mov
aad
xchg
test
xor
insl
push
pop
sti
pop
and
xor
das
push
movb
js
fistpll
std
and
popa
loop
icebp
fwait
push
xor
imul
fsubrs
test
cmpsb
in
sub
adc
inc
js
jmp
pusha
xchg
scas
imulb
sub
push
hlt
xchg
ss
fldenv
pop
mov
inc
loop
out
mov
jge
and
out
and
scas
ds
into
fwait
cs
sahf
adc
dec
pop
mov
aaa
xchg
je
xchg
popa
mov
leave
fwait
cmp
cmp
xor
or
stos
gs
cltd
sbb
sub
stc
xchg
add
pop
push
jl
xchg
bound
dec
outsb
clc
dec
or
int3
xchg
sub
push
psrld
sbb
arpl
stos
xchg
lahf
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
jmp
pop
and
aaa
out
adc
std
nop
push
mov
pop
or
iret
add
or
loope
mov
xchg
das
aaa
lea
dec
xchg
std
inc
add
mov
das
mov
inc
out
ficoms
out
sub
jae
pusha
sub
push
push
jl
addb
xor
mov
xchg
cmp
sbb
adc
fisubs
mov
dec
dec
loop
test
xor
inc
mov
push
add
jle
jnp
sbb
fcompl
arpl
dec
sbb
mov
shlb
or
insl
xlat
pushf
inc
pop
gs
push
push
pop
rclb
pop
cmp
jg
mov
gs
cli
pop
cmpl
cli
add
xor
mov
push
fcoms
mov
nop
xchg
stc
mov
sbb
xchg
mov
lods
xchg
sbbb
and
mov
out
mov
insl
in
cmp
fs
adc
or
fidivl
xchg
sbb
lea
in
xchg
in
jle
mov
jnp
shll
ds
movsb
test
jg
cmp
pop
add
outsl
sub
lock
add
inc
imul
or
cmp
push
dec
repz
inc
adc
repnz
mov
add
loopne
xchg
jmp
int3
loope
xlat
nop
enter
cwtl
test
or
js
imulb
or
sub
mov
mov
push
dec
xor
mov
lock
ljmp
pushf
test
inc
cmp
cs
jg
mov
test
xchg
bound
insb
adc
jb
movsl
ds
xchg
imul
ficoml
lds
shlb
dec
cmp
lret
pusha
movsl
insl
popa
pop
fldcw
inc
pop
mov
sti
cmc
push
repz
jne
aas
cs
movsb
repz
xchg
mov
fucomip
dec
insl
rorl
arpl
push
cmp
mov
pop
mov
shlb
mov
and
testb
out
sbb
or
nop
push
add
adc
testl
xor
data16
aaa
mov
shlb
mov
fmull
xchg
sbb
jb
adc
lock
stos
lds
sbb
jbe
jno
dec
push
push
lret
daa
xchg
jns
int
jmp
xor
repnz
push
jge
fstpl
jno
dec
push
mov
call
dec
dec
jo
iret
roll
leave
sbbb
cltd
test
push
out
mov
mov
mov
cmpsb
ficoml
mov
adc
stos
mov
jp
sbb
and
popa
lock
rorl
ror
int3
mov
mov
rclb
xor
add
cmp
push
mov
xor
icebp
xchg
shlb
cmpl
mov
cwtl
xchg
in
shlb
sbb
out
decl
cmc
mov
xchg
jg
pushf
repz
jg
pushf
cmp
pop
add
jecxz
imul
mov
repz
push
add
bound
daa
call
popf
movsb
ss
sbb
sahf
fstl
jp
cmp
das
sarl
pop
daa
lcall
lret
into
pop
pop
dec
push
sub
repz
outsb
in
ss
cmp
or
inc
or
pop
stc
outsl
pop
xor
pop
faddl
mov
aad
inc
imul
test
mov
mov
daa
jne
mov
mov
mov
into
mov
and
aas
xor
bound
outsl
les
mov
pop
cmp
push
and
add
inc
icebp
stos
sbb
nop
in
xchg
insl
pushf
pushl
pop
xchg
pop
mov
jmp
ljmp
popa
fwait
jne
mov
lret
or
js
out
loope
pusha
jns
jl
flds
fstpt
xchg
mov
insb
xor
rclb
std
stos
repnz
dec
pop
xchg
mov
lock
sbb
lea
jle
xor
or
ret
imul
js
inc
lea
inc
cs
push
mov
inc
push
js
insl
fwait
pop
inc
in
lahf
xorb
pop
lcall
repnz
jl
testl
jg
ds
or
popa
fimull
mov
xor
jbe
sub
add
in
mov
or
xor
aaa
mov
pop
and
xor
mov
xor
push
xor
pop
lahf
cltd
mov
insb
ret
push
xor
fnstsw
adcl
mov
jecxz
inc
stc
jo
push
mov
loopne
insb
inc
fdivrl
and
rclb
arpl
adc
mov
inc
fmull
pusha
stos
sbb
div
cmp
cmp
jmp
adc
jne
push
shl
sbb
xlat
xchg
xchg
jl
arpl
shl
and
fidivs
fsubl
and
repnz
dec
mov
jo
xchg
sbb
xor
push
jg
movsb
jecxz
stos
clc
mov
pop
jp
hlt
xchg
ds
out
mov
xor
push
sbb
or
jnp
mov
mov
ljmp
pusha
movsl
and
mov
fsubr
mov
push
inc
aad
aad
dec
xchg
mov
or
add
or
or
arpl
push
dec
xor
or
loopne
cmp
push
test
cmp
adc
int
into
cltd
xor
dec
lahf
push
push
stos
xor
mov
cmp
outsl
fbstp
idivb
nop
fisubrl
sbb
test
in
mov
and
push
pop
sub
fdivr
incl
in
xor
push
mov
fwait
mov
and
mov
movsb
test
cmpsb
lcall
jecxz
pusha
and
xor
jp
mov
std
fwait
dec
fcoms
add
adc
clc
and
int3
pop
mov
or
cli
cmpsl
les
sub
lds
sbb
lock
mov
mov
or
sti
inc
pop
push
outsl
or
xor
cmc
xchg
add
enter
scas
sub
adc
sarb
adc
imul
pop
cmpsb
popa
cld
pop
lods
ret
sub
adc
in
inc
xor
mov
push
jl
or
rol
jmp
mov
std
scas
faddl
add
xor
mov
call
loope
fcoms
add
jnp
jg
mull
mov
mov
cli
insb
dec
jb
fcomip
pop
dec
mov
scas
repz
out
jle
rcrb
mov
lret
loop
push
lock
xor
and
icebp
xor
das
outsb
xor
pop
int3
jb
imul
cwtl
out
js
jo
out
dec
add
pop
push
fcoml
sbb
bound
push
shlb
adcb
push
in
mov
test
lahf
xlat
and
push
outsb
xchg
mov
loopne
xchg
lret
cmp
dec
mov
iret
cmp
sub
repz
das
xchg
mov
shr
dec
xchg
call
addb
jg
bound
jg
add
ficoms
cltd
xor
sbb
sti
push
cmc
imul
out
adc
pop
lret
push
mov
mov
rorl
sub
gs
fistpll
sbb
inc
lahf
mov
das
gs
outsl
mov
or
xlat
adc
ds
inc
orl
push
push
mov
sbb
inc
rcrl
ja
mov
dec
lods
push
sub
rorl
xor
adc
jne
cmp
pop
cmp
push
inc
scas
fnstsw
mov
inc
out
jnp
push
jg
and
in
loopne
imul
jl
negl
pop
lret
scas
pop
mov
std
aas
popf
lock
sarl
mov
push
cmp
jae
mov
cmp
dec
int
xor
test
jmp
and
or
sub
std
fldcw
sbb
les
imul
xor
movsl
cmp
push
xor
int
lods
mov
sbb
stc
jg
cmc
inc
ss
dec
pop
lock
in
mov
les
enter
mov
mov
out
pop
repz
push
arpl
jmp
incb
mov
cmpsb
push
mov
jo
dec
scas
cmp
jg
insb
mov
test
mov
lea
xor
mov
mov
leave
and
pusha
jno
jg
pusha
aas
cmpsb
and
pop
inc
mov
bound
pusha
cmp
enter
xor
pop
je
outsl
adc
xchg
es
sbb
out
cmp
or
outsb
mov
and
sbb
test
sub
ljmp
nop
aad
les
dec
stos
dec
and
in
jns
adc
scas
mov
push
ljmp
fisttps
mov
sahf
pop
shrb
mov
repnz
int
xchg
mov
shlb
sbb
lds
das
xor
popa
sbb
lret
subb
mov
push
pop
aas
movsl
sar
pop
push
xor
stos
rcrb
cmpl
cs
inc
fdivrs
repz
push
outsb
push
jp
or
and
adc
or
adc
mov
popa
xchg
fstl
cmpsl
cmpsl
fadd
test
outsl
lret
outsl
ja
daa
sbb
jae
test
or
dec
cltd
jl
test
pop
push
sub
mov
xor
and
mov
data16
adcb
xor
mov
adc
fwait
inc
cld
pushf
sub
ja
and
xchg
cs
es
repz
push
ljmp
lods
sbb
ret
xchg
pop
inc
in
lods
icebp
out
lret
mov
lret
sahf
lods
xchg
jl
sbb
add
lcall
sub
adc
push
stos
and
sbbl
mov
add
lret
idiv
test
sbb
ja
mov
mov
mov
scas
jb
xor
fwait
testl
gs
cmp
aas
jl
or
adc
in
xchg
sbb
enter
lock
pop
and
aam
movsb
inc
popf
repnz
mov
push
hlt
jbe
mov
es
mov
pop
repnz
pop
jo
xlat
adc
ret
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
jmp
push
pop
sub
das
and
dec
jne
inc
or
iret
add
or
dec
fisttpl
dec
test
out
mov
jno
push
dec
mov
adc
lods
dec
add
push
int
stc
jl
imul
xor
push
int3
pop
push
mov
imul
stos
ret
xorl
jo
jl
xor
or
sub
jg
shl
sti
xchg
cmpsl
lods
mov
or
or
pop
test
lret
fidivrl
sbb
js
and
push
inc
popf
out
jge
insl
ret
aaa
icebp
lret
or
inc
xor
cltd
cmp
mov
cltd
add
in
adc
dec
cmpsb
popf
cwtl
in
or
sub
bound
lods
addr16
scas
cmc
mov
xchg
cmpsl
repz
repz
pusha
and
ds
cmp
add
stc
sub
lods
fwait
sub
pop
loope
iret
cs
xchg
push
jmp
outsb
addl
je
ja
and
push
xor
ds
in
push
shll
and
aas
add
xchg
shl
cmp
jno
dec
or
mov
cmp
fimuls
rorb
cmp
popa
cmp
push
pop
lods
js
or
push
add
sub
mov
popf
int3
push
mul
mov
cld
lods
enter
imul
cmpsb
lret
hlt
repnz
imul
adc
mov
not
xor
push
mov
push
mov
cmp
ret
xchg
mov
sbb
cmp
testl
jnp
mov
movsb
and
cs
sub
inc
ljmp
sbb
sahf
pop
sub
and
xchg
lcall
stc
andl
jmp
icebp
xor
fcmovbe
pop
push
push
xchg
xor
or
xlat
out
mov
and
adc
mov
jno
js
test
fmull
sub
popf
loopne
adc
leave
insl
cmp
out
mov
jge
outsb
or
test
stc
mov
outsb
mov
xor
jnp
leave
fists
jmp
gs
in
es
std
mulb
ljmp
cltd
mov
out
and
mov
out
ret
cwtl
aaa
adc
add
mov
or
addl
inc
adc
adc
jmp
adc
inc
mov
scas
cli
and
pusha
sbb
sti
adc
mov
mov
xchg
notl
insl
test
fs
repz
into
cmpb
adc
pop
repnz
test
sbb
lds
xor
jb
push
lock
pop
lds
xor
jecxz
inc
sbb
test
sub
xchg
cmp
adcb
dec
mov
orb
xchg
xchg
sub
sarl
sub
xchg
pop
daa
pusha
sbb
mov
dec
cs
inc
jne
jg
loopne
stos
pop
mov
pop
dec
push
scas
pusha
cld
lcall
daa
jmp
mov
add
sbb
mov
inc
xor
scas
cmpsb
fsubrl
cli
push
xor
int3
mov
repnz
movl
dec
inc
mov
mov
mov
shll
sbb
repz
aaa
inc
mov
dec
push
cmp
pop
or
popf
sub
sub
sub
xor
out
xor
ret
sbb
pop
rcll
push
push
lret
xor
hlt
fdivrl
test
mov
push
cld
andb
xchg
call
sub
mov
pop
out
test
aas
insb
and
cmp
cmpsb
and
in
xlat
test
dec
cmpsl
xchg
ds
or
mov
xor
mov
arpl
push
push
and
enter
imul
shll
stc
imul
push
stc
jo
xlat
lcall
fstps
inc
xor
es
daa
lahf
frstor
and
fwait
stos
inc
aaa
cmc
aam
lock
xchg
ret
add
sub
lahf
cmpsb
adc
pop
dec
push
test
setnp
lods
mov
shll
jle
mov
cmp
jg
push
and
sub
inc
iret
adc
cmp
sub
fistpl
popf
sti
stos
push
jns
loop
xchg
sub
mov
cmpsb
sbb
sbb
cmp
cmp
sbb
leave
mov
pop
in
mov
and
aaa
cmpb
pusha
test
inc
sbb
bound
enter
push
pop
sbb
lea
mov
das
popa
push
rol
jne
shrb
or
mov
inc
cli
mov
adc
pop
xchg
pusha
call
subl
and
shll
aam
fnsave
stos
xor
mov
cmp
xor
call
add
imul
push
sub
adc
mov
cltd
xchg
cld
mov
mov
int3
gs
pop
jne
mov
xor
cwtl
in
dec
jb
cmp
xchg
sbb
mov
arpl
inc
push
jne
aad
jo
shrb
push
movsb
jl
fisttps
lods
add
lods
enter
add
movsb
xor
jmp
xor
addb
mov
jne
test
or
add
or
push
icebp
mov
clc
fisubrs
fsts
xor
repnz
xor
in
enter
leave
aaa
adc
push
je
lcall
aaa
cli
or
sbbl
push
dec
adc
pop
cmp
mulb
hlt
mov
in
xchg
xchg
fwait
lcall
les
mov
jno
cmp
bswap
mov
push
or
push
inc
push
aaa
andl
mov
xchg
pop
out
xor
push
mov
sbb
dec
add
int
xchg
imul
ss
insl
es
cmc
add
imul
movsl
sahf
fisubs
mov
in
xorl
xor
pop
arpl
mov
push
out
mov
sub
mov
stos
jle
daa
popf
insb
push
loope
in
dec
mov
pop
xchg
cmp
xchg
lds
push
shlb
rcrl
push
xchg
push
inc
cli
or
push
push
out
mov
scas
mov
shl
enter
aam
cmp
and
daa
pop
iret
in
sub
ds
lock
inc
mov
fwait
push
ds
cmp
iret
fistpll
inc
jle
cmp
es
frstor
cmp
xor
or
repnz
repz
mov
or
je
mov
inc
insb
and
inc
or
pop
test
loopne
shll
cmp
pop
pop
icebp
cld
add
lds
xor
jge
frstor
lea
shrb
mov
inc
adc
cld
mov
aaa
mov
push
mov
rolb
and
pusha
pop
adc
jmp
imul
xor
mov
mov
xor
dec
jnp
scas
mov
ljmp
or
adc
pop
loop
push
stos
outsb
pushw
xor
fsubrl
rclb
pop
push
sub
cmpb
push
popl
addb
mov
aad
ljmp
sbb
lods
insl
cld
xrelease
movsb
jle
add
dec
je
mov
inc
cs
push
jb
add
pop
fadds
aas
in
xchg
add
push
xchg
ss
dec
out
test
insb
fwait
add
add
mov
sub
cmpl
push
xor
sbb
pop
add
pop
pop
movsl
cmp
not
aaa
lock
add
rorb
call
mov
mov
push
aam
shlb
jp
pusha
sahf
ret
imul
add
sub
jo
leave
pop
adc
mov
push
stos
mov
cmp
loope
js
cmp
fs
subb
cmp
sbb
pop
pop
add
std
and
cmpsb
in
mov
adc
add
fs
call
push
xchg
out
push
mulb
nop
mov
nop
add
xlat
dec
test
out
inc
cli
xlat
fbstp
cltd
xchg
int3
loopne
inc
add
loope
in
jmp
rcll
adc
adc
xchg
icebp
xchg
in
sbb
sti
dec
cmp
xor
int
shrb
lea
xor
in
sub
je
inc
mov
lret
addl
push
in
ret
lea
cmpsl
adc
mov
insb
lret
push
lcall
stc
fldcw
xchg
bound
ret
je
sbb
sub
sahf
aam
call
sbbl
sub
shlb
nop
xchg
mov
popf
or
hlt
inc
repnz
mov
jns
mov
aam
xchg
jne
and
or
out
mov
push
bound
insl
lea
ret
sahf
ret
ficomps
repz
pop
scas
mov
mov
jmp
jb
sub
ds
in
pop
push
repz
xchg
dec
enter
mov
icebp
mulb
out
fstps
shl
dec
es
cmc
daa
hlt
adc
mov
mov
scas
inc
and
aad
test
orl
scas
mov
mov
add
shlb
fwait
addr16
jge
addr16
lret
repnz
sti
into
xchg
ss
sahf
jae
int3
aam
out
ss
xor
push
out
sbb
jns
scas
aaa
jg
jbe
out
jb,pn
flds
add
daa
fists
ret
or
jge
leave
mov
std
pop
roll
xchg
psraw
pop
lret
jp
dec
inc
imul
test
repnz
fimuls
sub
cmc
jae
sbb
and
xor
mov
mov
repz
sarl
pop
pop
fwait
das
sub
pop
pop
into
lret
jo
adc
adc
mov
aam
ret
mov
bound
mov
fdivs
xchg
or
jae
sbb
insb
dec
out
gs
add
mov
cmpsb
push
shlw
dec
or
ret
adc
push
xchg
fldenv
or
push
inc
pop
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
fbstp
mov
xor
and
ds
shrb
dec
sub
or
in
jbe
fcoml
mov
pop
ljmpw
push
xor
pop
jmp
pop
aam
pop
jno
xlat
pop
insl
or
lret
mov
popa
push
and
mov
inc
push
or
mov
push
add
sub
jae
fiadds
ds
or
and
lcall
pop
mov
mov
pop
stos
mov
aad
push
hlt
push
pushf
push
pop
and
cltd
cli
mov
mov
jne
into
popa
stos
mov
data16
and
add
loope
les
fwait
mov
sub
sub
scas
lcall
xchg
cmpsb
mov
mov
cmp
lahf
jle
adc
jmp
cmp
push
or
aad
pop
rolb
hlt
stc
mov
cmp
adc
mov
in
xor
lock
or
jb
scas
add
jg
mov
inc
les
inc
cli
in
cmpsb
jb
pushf
and
or
andl
pusha
lds
dec
adc
push
mov
test
xchg
gs
inc
mov
popa
lods
jecxz
aad
loope
callw
inc
cli
imul
adc
push
into
dec
int3
lahf
push
xor
pushf
xor
lcall
pop
pop
jne
xor
in
jae
and
imul
test
iret
add
std
stos
insl
mov
mov
imul
add
mov
bound
mov
push
sub
xlat
aas
ja
xor
ljmp
fucom
iret
cmp
testl
lcall
or
out
pop
or
jo
sar
mov
shll
inc
sbb
xor
lods
mov
or
imul
fs
cmp
xchg
inc
jb
out
popa
subl
sub
mov
mov
xchg
jle
outsl
xchg
jnp
push
bound
cmpsb
out
jo
je
fidivrl
push
push
pop
loop
test
mov
fldpi
cli
mov
subl
fcmovne
mov
fidivrl
push
and
xor
sub
ret
nop
xor
sub
ljmp
inc
sbb
dec
cmp
addr16
mov
mov
sar
sbb
jo
inc
sub
xlat
cld
jo
aaa
or
xchg
sbb
and
sahf
and
cmpsb
jp
xorb
lea
stos
jmp
and
sub
or
in
mov
sbb
ja
inc
les
ret
pushf
inc
mov
jbe
add
push
jecxz
cltd
pop
in
ss
jns
out
inc
jo
mov
lret
rorl
fisubs
mov
fnstcw
dec
xor
sbb
jb
jge
jecxz
mov
ss
fisubl
cmp
je
pop
cmp
bound
xchg
sub
mov
xor
mov
mov
sub
cmp
sti
jg
sbb
mov
cmp
pop
adc
push
cltd
or
inc
push
loopne
int
push
lods
addl
pop
xor
enter
jbe,pt
fsubp
out
mov
leave
mov
mov
std
xchg
mov
addl
out
nop
or
pop
jb
stc
insb
push
insl
in
lods
xchg
inc
mov
ds
loop
and
movsl
leave
lock
nop
push
imul
push
lret
pusha
fsubrl
punpckldq
sbb
lds
add
lock
jg
add
andb
or
cmp
sbb
mov
enter
inc
loopne
and
jns
cmpsl
or
out
cmp
in
dec
fildl
ss
jae
push
in
mov
jmp
xor
loope
out
add
mov
mov
sub
or
push
fnstcw
movsl
mov
je
mov
mov
xchg
frstor
jmp
fldcw
jmp
popf
mov
cmp
scas
mov
cmp
cmp
sub
into
popf
or
lock
fisttpll
add
pusha
push
xchg
mov
dec
xor
xchg
xor
data16
xchg
dec
outsl
mov
aas
push
pop
cmpsb
imul
xlat
rcrl
jl
bound
cmp
in
je
mov
jbe
inc
loope
movsb
gs
mov
or
add
push
sbb
pop
insb
cs
pop
mov
dec
push
xor
push
jne
hlt
xor
pop
sbb
pop
test
push
jb
imul
pushf
shrb
fdivs
imul
cmpl
mov
xor
sub
mov
pop
out
es
out
push
xchg
testb
aaa
xor
jl
cmp
stos
mov
jnp
inc
mov
clc
cmp
scas
mov
dec
fnsetpm(287
in
pusha
adc
mov
jle
sbb
cmp
in
out
cld
xchg
es
and
ja
xchg
cmp
or
mov
idivb
xor
es
and
in
aaa
jge
rorb
ret
add
or
mov
jmp
pop
idiv
insb
push
addr16
clc
fiaddl
mov
add
or
iret
add
or
test
push
popf
pop
cmpsl
xchg
in
insb
adc
adc
in
out
arpl
mov
mov
jnp
rol
dec
or
aam
in
mov
cmp
out
add
xchg
je
sub
ret
movsl
shll
aaa
sti
imul
cmp
ds
inc
pop
cmpsb
sub
mov
mov
dec
jge
sub
cmp
xchg
xor
cmpsl
bound
jno
pushf
fsubrs
out
push
repz
pop
pop
adc
mov
jmp
add
adc
in
mov
lock
mov
cmp
mov
je
or
sub
std
ja
jne
lahf
sbb
popf
sti
and
and
fiadds
and
dec
fnsave
jecxz
or
inc
mov
cmc
pop
movsl
movsl
pop
push
add
inc
push
add
loopne
std
fisttpll
jmp
outsl
mov
and
leave
sbb
scas
andl
push
add
sbb
adc
imul
cmp
sub
adc
fwait
jp
xchg
test
jge
jmp
mov
outsw
out
clc
nop
dec
sub
or
shlb
pop
xor
pop
mov
xchg
xor
jno
cmp
add
adc
std
adc
push
pop
out
cs
scas
lds
sahf
cmp
cmpsb
sahf
push
sahf
add
mov
sti
and
add
pop
mull
push
xlat
add
dec
mov
adc
mov
imul
repnz
in
add
xor
dec
xor
or
popf
movsl
push
cmp
dec
pusha
dec
push
mov
lock
and
xor
cmp
sarb
adc
mov
test
nop
jne
aad
lahf
mov
pusha
enter
in
ret
out
dec
mov
or
dec
stos
inc
pop
je
test
and
aaa
dec
inc
or
or
jp
int
int
cmp
pusha
dec
add
dec
stos
dec
adc
dec
mov
stos
or
fsub
xchg
sub
ret
test
and
add
add
push
pop
ficomps
out
mov
aam
insb
sahf
push
fwait
push
adc
je
dec
jno
or
fmuls
and
mov
icebp
test
es
inc
subb
hlt
adc
fcomps
adc
in
arpl
add
fwait
scas
cmpb
jne
sub
cli
jne
cltd
ljmp
xchg
bound
push
jb
stc
sbb
push
rol
xor
pop
cld
mov
mov
jns
pushf
xor
push
pop
clc
rcll
inc
movsb
les
je
fcomip
sub
loope
cmp
test
add
adc
fistl
mov
xor
cltd
jbe
push
xor
loope
inc
cmp
mov
pop
sahf
push
lret
in
sub
fists
lods
push
or
into
and
icebp
stos
movsb
xchg
test
inc
sahf
icebp
arpl
in
je
clc
frstor
xchg
cmp
fdivrs
dec
inc
jne
stos
call
pcmpeqb
mov
xlat
jg
in
xor
mov
sub
and
arpl
mov
and
jl
xlat
or
out
pop
add
and
lods
insb
sbb
aaa
ret
inc
repnz
xor
or
mov
pop
fwait
scas
stos
lret
add
adc
pop
mov
or
sbb
das
cmpsl
inc
shrl
or
or
imul
dec
cmp
and
dec
movsl
pop
mov
ljmp
iret
xor
fidivl
cmp
loopne
mov
rol
outsb
lock
scas
pop
and
add
sub
repz
sbb
fnstsw
and
jnp
in
js
fists
add
jmp
stos
push
sub
jno
cmc
stos
mov
mov
or
movsb
loop
push
dec
lods
stos
das
push
das
pop
mov
mov
xor
popf
inc
jb
ret
mov
lods
xlat
adc
push
push
sbb
xchg
mov
or
mov
fidivrl
xchg
jne
aaa
fnsave
cltd
push
jbe
pusha
add
sbb
into
stos
push
xchg
mov
out
dec
jle
jnp
mov
arpl
xorl
dec
aad
int3
lods
pop
dec
add
xchg
mov
adc
cmp
sbb
outsl
aas
in
das
or
add
pop
test
pop
add
sbb
sbb
ljmp
sub
shrb
iret
into
pop
jbe
popa
outsl
xor
inc
cmpsb
cli
push
fs
cmp
std
inc
add
stc
shlb
loopne
sub
movsl
ss
into
fidivl
andl
push
xchg
mov
mov
js
push
pop
enter
xchg
lahf
pop
jno
inc
in
lahf
xor
inc
jne
add
xor
dec
jp
in
sbbb
cmp
cmp
mov
fsts
jo
cmpsb
lea
xchg
cmp
adc
sub
les
test
cld
stc
ja
data16
pushf
out
push
addr16
addl
mov
mov
enter
add
mov
or
add
shl
mov
mov
jmp
or
pop
mov
dec
jne
jbe
addr16
adc
or
add
or
aas
adc
cmp
hlt
mov
pop
cmp
imul
xchg
jle
fsubrp
mov
imul
add
pop
or
call
mov
sub
movsl
push
xor
jne
pop
loopne
loope
xor
inc
cld
mov
cwtl
xchg
out
inc
pop
not
pop
cmp
lea
dec
out
clc
xlat
xchg
inc
jge
leave
xchg
loop
sbb
outsl
decb
mov
add
icebp
push
out
mov
jecxz
in
roll
fxch
lret
mov
mov
cmp
sbb
out
rcrl
stos
jecxz
fnsave
mov
hlt
sbb
out
xor
cmp
or
stos
add
pop
in
imul
out
dec
ficoms
js
xchg
mov
out
out
xchg
test
mov
lahf
inc
mov
lret
mov
in
mov
std
xor
sbb
pop
adc
xor
bound
lods
hlt
outsl
xlat
or
into
shlb
mov
or
sbb
xchg
pop
movsb
negl
aam
jle
out
aaa
and
out
loop
pusha
ljmp
addr16
arpl
mov
push
insb
cmp
ds
cmpsl
stos
arpl
daa
or
cmp
xorb
testl
loope
xlat
pop
ds
test
test
ljmp
movsl
cmp
xor
out
cmp
push
and
lcall
jnp
mov
cmp
in
add
pop
aaa
mov
xchg
inc
inc
xor
cld
insb
jo
lahf
sbb
push
in
sbb
mov
add
sbb
jle
xchg
xchg
in
or
xchg
dec
inc
xor
ja
sbb
sbb
xor
mov
lea
inc
stos
fwait
test
in
push
jge
xor
add
aad
push
pop
pusha
aas
hlt
mov
lds
call
ds
sarl
or
in
and
push
shlb
inc
sarl
icebp
mov
fsubrs
ss
sub
inc
popf
cmp
inc
rclb
pop
cltd
xchg
jle
mov
js
cmp
fdivrl
xchg
popa
aas
stos
out
dec
inc
es
out
jne
push
jg
ds
or
xlat
mov
jae
test
fistpl
filds
lea
lret
and
cwtl
and
shll
mov
inc
jno
add
add
movsl
jg
jge
cwtl
adc
mov
xor
xchg
add
mov
xor
xor
rclb
mov
add
mov
xlat
sbb
adc
or
out
inc
in
cmc
test
shll
int
mov
push
es
lods
insb
mov
pop
mov
xor
lret
pop
xchg
sbb
mov
lods
jnp
js
out
xchg
testb
jp
sahf
out
lret
mov
ds
ja
xchg
or
adc
daa
jne
or
sub
sbb
movsl
cmpsl
int3
inc
dec
sub
xor
and
ja
test
in
jns
push
ret
push
mov
lods
mov
cld
jmp
mov
adc
stos
scas
rcll
cmp
jo
pop
outsb
xchg
mov
add
movsb
sub
cld
inc
and
addl
dec
jne
sub
inc
push
jne
sbb
in
jnp
push
mov
pop
ret
fmuls
mov
pop
sahf
testl
add
or
scas
pop
orl
cmp
aad
ret
push
scas
dec
pop
int3
pop
es
mov
jl
cmp
xorl
je
mov
sub
xor
testl
dec
mov
adc
cwtl
pop
sub
pop
xchg
push
mov
cmp
pop
imul
sub
not
xchg
xor
or
adc
mov
adc
sbb
inc
scas
and
jae
inc
in
fucomip
lods
push
insb
inc
lret
inc
mov
fists
cmc
push
nop
cmc
lahf
jge
rorb
inc
in
push
xorl
mov
xor
pop
sbb
ss
push
xor
mov
jo
or
dec
shl
test
adc
test
jns
cli
mov
out
pop
mov
es
lea
stos
mov
mov
aad
std
ljmp
popf
jae
pop
ja
jnp
lret
fistpl
mov
and
arpl
sbb
push
outsb
inc
inc
std
loopne
stc
pop
gs
stos
ljmp
push
arpl
adc
cli
lods
iret
inc
test
inc
pop
popf
xchg
gs
mov
push
sbb
jge
jne
arpl
mov
jge
pop
sbb
push
int
les
ret
mov
mov
mov
mov
iret
cmp
xchg
push
fildl
pop
gs
cs
movzbl
and
loopne
or
inc
xchg
xor
dec
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
fbstp
xchg
scas
cmc
xor
mov
ud2
or
add
or
test
fsubrs
add
outsb
sub
xchg
or
inc
jecxz
pop
sbb
and
push
test
ja
clc
scas
out
cmpsl
xchg
leave
sbb
fs
out
jns
into
lods
and
dec
pop
push
push
pop
fldcw
push
int3
rcll
jmp
cltd
fmul
out
pop
mov
xlat
xchg
mov
adc
sti
jmp
cs
pop
ret
adc
gs
adc
pop
fists
pusha
xor
out
push
ret
adc
xor
add
std
or
adc
sbb
mov
sarl
ret
scas
scas
mov
dec
addr16
cmp
int3
dec
mov
mov
lahf
js
and
scas
sub
data16
mov
iret
loopne
ss
imul
mov
lcall
std
ficompl
bound
aaa
fs
jmp
or
test
addb
mov
dec
cwtl
int3
mov
xchg
inc
cwtl
push
dec
ret
icebp
xlat
lret
es
pop
lods
rorl
cltd
pop
mov
fstpt
out
js
inc
ret
repz
dec
rcll
cwtl
pushf
sub
notl
jle
push
pushf
xor
mov
lret
sbb
jbe
push
aas
jne
mov
jno
lea
xorb
sbb
jnp
push
jno
fnstsw
fwait
jo
xchg
xchg
mul
std
gs
pop
daa
negl
sub
pop
pop
lds
ss
inc
stos
jge
inc
mov
cmpsl
pop
mov
stos
in
mov
pop
imul
jo
loopne
jg
dec
dec
out
ret
pop
outsb
in
push
repz
mov
or
inc
mov
nop
ja
cmp
stos
rcrl
shll
stos
imul
jl
sub
pop
stos
and
push
aad
xchg
test
inc
and
or
dec
or
adc
es
lcall
in
repz
fwait
dec
lret
jg
mov
jmp
and
lods
fildll
mov
cld
or
out
rorl
push
or
call
jl
out
nop
ret
test
mov
gs
fcmovb
xchg
xchg
sub
and
push
sub
stos
pop
jnp
jecxz
mov
scas
outsl
frstpm(287
xchg
xor
add
out
iret
pop
mov
or
cmp
insb
or
pop
les
int
mov
ffreep
sbb
andb
jne
jne
xchg
jecxz
dec
inc
imul
andl
jecxz
fcmovne
jb
imull
and
neg
adc
fcoml
jno
mov
xor
mov
xor
jbe
inc
jmp
aas
xchg
push
mov
out
test
cwtl
ret
xchg
repz
fisttpll
or
js
lahf
mov
dec
pop
es
jae
fstps
shrl
mov
std
data16
icebp
bound
inc
sbb
dec
push
mov
aad
loopne
inc
sub
int
cltd
lcall
sub
adc
enter
inc
push
pop
lods
dec
push
push
fcmovnu
xchg
mov
fsubrl
push
sbbb
add
sbb
icebp
pop
pushf
js
jb
fs
pop
repnz
out
gs
rol
cmp
mov
push
mov
mov
cltd
mov
mov
in
and
push
mov
jg
push
mov
xor
dec
jp
mov
dec
gs
mov
fcomps
dec
mov
sbbb
sub
pop
pop
imul
and
sub
movsl
arpl
sbb
push
lret
fdivrl
lea
mov
icebp
push
push
icebp
or
push
sub
pusha
xlat
cmpb
cs
add
ret
add
mov
and
sub
mov
scas
add
loop
std
mov
iret
jg
mov
add
fs
ja
mov
jns
lahf
loope
cmpsl
xchg
imul
jle
add
loopne
jns
adc
dec
mov
push
inc
xor
cli
imul
loop
or
repz
xchg
fs
lods
jae
sbb
rolb
push
add
sub
out
gs
push
pop
xlat
mov
clc
xchg
aad
ljmp
xor
aam
add
pop
push
lret
pop
cmpb
sub
lret
dec
dec
addr16
mov
dec
dec
dec
fcoml
test
mov
out
fisttpl
stos
jbe
mov
xchg
lock
outsb
fwait
inc
out
inc
leave
adc
notb
mov
inc
out
mov
push
push
and
push
add
adc
int3
clc
iret
imul
and
mov
and
cltd
loopne
and
or
outsl
test
sub
shll
push
push
jbe
lea
lods
in
fcomi
mov
or
test
sbb
faddp
mov
add
or
mov
scas
and
call
scas
pop
orl
cmp
push
inc
inc
movsb
sti
inc
push
cmpsb
scas
loop
subl
or
mov
int
xor
jnp
pop
fnsave
or
xchg
test
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
jmp
cmc
adc
jne
int
arpl
pop
in
xor
or
iret
add
or
xchg
sub
loopne
ror
test
jle
out
push
jg
movsb
fidivs
notl
pop
mov
jae
adc
mov
cmpsb
scas
and
out
xchg
stos
cmpsb
mov
xor
int3
sub
dec
xchg
xchg
adc
aaa
jp
jge
ljmp
xorb
xchg
push
add
push
lahf
test
bound
ljmp
sbb
fdivrl
cmp
sbb
in
leave
xchg
xor
dec
push
pop
nop
std
call
mov
es
jecxz
in
dec
and
lods
mov
fs
jns
xor
or
inc
jne
xchg
movups
enter
add
test
xor
fmulp
and
and
push
xor
xlat
lcall
cmpsb
cld
push
jae
cltd
fldcw
imul
push
dec
and
sti
mov
in
push
xchg
and
sti
in
inc
cwtl
ret
imul
pop
mov
adc
in
jle
xchg
cmpsb
lea
jecxz
add
inc
sti
xchg
jge
xor
aaa
mov
mov
xor
inc
loop
fimull
loope
jbe
repz
dec
ror
push
icebp
add
mov
push
mov
add
fwait
and
push
lods
aaa
jp
clc
xor
cmp
inc
mov
sub
outsl
repnz
pop
xlat
stos
xchg
push
xor
mov
sub
jp,pn
sarl
das
popf
pop
cmpb
mov
mov
dec
pop
jb
adc
in
lahf
popf
or
test
in
mov
add
and
adc
ret
mov
pop
adc
push
xchg
pop
js
int
lods
ret
or
sub
inc
mov
mov
sbb
or
xor
test
rorb
mov
cmc
cmp
mov
pusha
shl
addr16
sub
in
lods
fwait
sbb
js
imul
test
fsubrl
dec
stos
push
mov
fisubrs
xor
mov
pop
shlb
cmp
jl
inc
fstpt
adc
adc
push
inc
lock
or
lcall
jg
inc
dec
cwtl
in
es
je
test
lret
fiaddl
cld
enter
aad
mov
and
lea
das
dec
or
xor
sbb
aas
jmp
adc
lret
sub
std
in
push
mov
sbb
mov
fwait
in
push
sarl
sub
lods
cmpsl
lahf
or
std
jnp
sub
xor
data16
push
cltd
rep
jl
or
dec
aaa
xor
fsubp
dec
sahf
rcrl
out
xor
data16
cs
ret
stc
call
dec
je
inc
cld
out
es
pop
pop
mov
test
loopne
xor
icebp
push
inc
out
loop,pt
add
pop
xchg
dec
adc
xchg
popa
sub
adcl
inc
sbb
js
insl
jecxz
dec
cmp
ret
cli
adc
arpl
mov
mov
xor
orb
daa
jbe
dec
jle
stos
sub
jge
jge
sbb
xor
outsl
out
adc
adc
fistl
inc
jne
adc
dec
jo
mov
fisttpl
shrl
lock
mov
out
mov
sub
adc
nop
lret
lods
aas
std
lds
inc
mov
mov
pop
adc
adc
sub
mov
push
push
cmp
adc
idivb
or
cmc
cmp
sahf
pusha
cmpsl
into
add
outsb
dec
into
mov
ds
adc
fnsave
test
mov
icebp
adc
xchg
icebp
movsb
sub
xchg
rorl
sahf
das
imull
jl
mov
outsl
into
xorb
addr16
adc
pop
aaa
mov
aad
jb
or
jle
pop
ret
ror
imul
movl
xor
sub
stos
add
push
cmpl
rol
lods
fiaddl
xlat
sbb
push
shl
xchg
push
adc
enter
test
mov
aad
lods
jecxz
push
sbb
cmp
inc
or
inc
cs
push
clc
cmc
jae
rcl
pop
jmp
out
shll
xchg
push
pop
sti
decb
gs
push
push
outsb
repnz
add
jmp
fsubrl
adc
pop
outsb
xchg
scas
pop
test
outsl
clc
outsl
outsb
mov
daa
loop
cmp
mov
loope
inc
daa
ffree
lea
mov
lea
add
sbb
add
inc
lret
loopne
js
js
in
arpl
out
add
ss
push
jecxz
xchg
cmp
jl
and
lea
mov
jns
inc
pop
cmp
inc
mov
mov
sbb
leave
ret
mov
ljmp
sub
mov
es
mov
ds
and
cmp
es
cmp
mov
fdivrs
or
mov
mov
push
enter
jle
inc
arpl
inc
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
jmp
cli
jae
xchg
test
fwait
adc
aad
pop
and
or
add
or
push
cwtl
sub
and
mov
mov
je
mov
push
xchg
lcall
xchg
es
fstl
jmp
frstor
mov
push
mov
sub
test
mov
sbb
out
insl
push
inc
iret
mov
or
daa
xor
and
xchg
fisttpl
sub
jmp
push
jp
fsubs
cmp
test
xchg
push
std
mov
in
inc
jecxz
std
enter
mov
lods
subb
mov
ds
pop
stos
pop
push
imul
scas
enter
leave
gs
rolb
imul
mov
jge
outsb
pop
mov
lods
pop
jecxz
push
sarb
ljmp
imul
mov
repz
lahf
out
sub
mov
out
mov
or
dec
fwait
sbb
cs
arpl
mov
fists
negl
mov
sarb
ret
icebp
ss
icebp
cmpsl
sub
sbb
mov
jb
dec
pop
mov
xor
cs
xchg
mov
test
xor
hlt
jno
in
out
shrl
mov
dec
or
inc
int
popl
xor
out
push
inc
into
mov
jmp
enter
pop
imul
lods
xlat
setle
out
test
cmpb
or
sbb
mov
cwtl
fldt
outsb
cmp
imul
ds
sbb
pop
int3
fbld
pop
xor
cmpsl
aas
pop
outsb
cmp
test
imul
lock
jge
mov
insb
add
xor
mov
arpl
shll
scas
out
and
in
vmaxps
loopne
and
xor
mov
loope
inc
xchg
daa
xor
mov
es
cmp
out
lcall
xchg
xchg
mov
sub
mov
xchg
sub
sbb
jmp
jl
cmc
push
push
xlat
sahf
daa
pusha
inc
mov
mov
jmp
mov
bsr
mov
idiv
aaa
sti
lret
cs
cmp
hlt
cmp
xlat
sub
or
popa
adc
xor
js
cmp
mov
and
fstps
jle
mov
into
mov
leave
lods
push
scas
push
dec
cwtl
and
or
imul
shl
cmc
or
mov
ret
jmp
mov
popa
cmp
xchg
ret
shl
fs
loopne
adc
sbb
pushf
inc
int3
and
scas
pop
sub
icebp
dec
int3
sub
push
jge
mov
xchg
sbb
sbb
addr16
in
pop
xchg
mov
xor
push
push
pushl
mov
cmp
out
or
je
lcall
dec
jmp
push
push
fildll
aad
xchg
dec
aas
jmp
cmp
dec
arpl
stos
push
fld
xor
xor
sti
outsl
pusha
aaa
add
xchg
jg
sbb
out
movsb
out
lods
dec
jle
add
push
sub
stos
lahf
pop
in
xor
test
cmp
xor
pop
push
test
in
and
dec
mov
fisttpl
push
movsb
inc
push
cltd
pusha
out
sti
adc
leave
je
pusha
imul
or
pop
xchg
and
push
sbb
jb
push
fisttpl
xor
ror
xor
cmp
jae
or
lahf
inc
adc
mov
bound
inc
dec
lcall
mov
repnz
stc
ljmp
mov
js
and
addl
aaa
movsl
or
or
push
sub
mov
xchg
push
aas
or
es
mov
roll
mov
or
and
mov
sbb
int
data16
adc
stos
push
popf
adc
push
fstpt
scas
repz
xchg
jno
cmp
insb
test
push
jl
and
mov
sub
fisttpll
test
xor
test
xchg
lahf
mov
scas
cmp
movsb
and
orb
cmpl
push
insl
scas
dec
fstps
inc
inc
test
nop
xchg
cmp
xchg
adc
mov
fstp
push
jnp
pop
xchg
nop
mov
fmull
jae
sahf
ljmp
int3
mov
test
or
adc
cmp
lret
mov
jmp
cmp
fisubrl
mov
nop
test
cli
inc
subl
pusha
fwait
pop
cmpsb
push
imul
sub
cmp
ds
jo
cmp
pop
dec
cli
add
pop
add
rclb
or
stc
sub
xchg
scas
xchg
bound
and
pop
lahf
pause
lock
shr
andb
mov
add
cmpsl
xlat
fdivs
or
adc
jbe
lcall
sahf
shr
push
mov
ret
shrl
jae
aam
add
jbe
inc
aam
sti
icebp
add
cmp
xchg
push
das
cmpsl
cmp
jno
and
mov
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
adc
dec
aas
cmp
mov
idivb
mov
loop
or
add
or
cmpsl
mov
jo
pusha
mov
dec
dec
aas
sub
rcr
mov
or
stc
cwtl
cs
sbb
test
lds
das
mov
adc
dec
cmp
or
into
sahf
repz
popa
cmp
insl
jge
dec
mov
pop
frstor
scas
cmpsb
test
cmp
xor
stos
sbb
adc
rcll
and
jge
sti
cmp
and
adc
mov
int3
xchg
popa
fistps
clc
mov
sbb
cwtl
outsl
push
or
ds
xchg
ljmp
cmpsb
mov
mov
mov
cld
jbe
or
cmp
lea
pop
mov
mov
int
repz
push
mov
xchg
jmp
iret
xchg
jno
sub
cmpsl
sub
aas
addb
push
push
dec
xchg
enter
cli
add
xor
mov
xchg
repnz
jo
outsb
or
mov
sub
fimuls
add
loop
inc
ja
test
cmpsl
ljmp
inc
out
fwait
xchg
call
adc
icebp
or
repnz
cmp
lods
popf
ret
orl
push
cmp
negl
stc
rcrb
dec
in
push
pop
and
push
negb
push
or
lds
mov
cmp
cmp
adc
sbb
push
adc
pop
jno
neg
out
add
bound
cmpl
shl
es
mov
shlb
inc
sub
pop
outsl
outsl
hlt
adc
inc
xor
mov
sub
ss
sub
pop
mov
les
and
mov
sbb
aad
test
mov
mov
push
jg
mov
ret
in
xchg
mov
xchg
fbld
dec
fs
bnd
cmp
mov
rcll
test
daa
divb
arpl
je
cmp
mov
bound
push
mov
or
jb
mov
sti
aam
stos
je
mov
lea
dec
stos
sbb
mov
fsts
pop
lock
cmp
jno
lds
into
dec
mov
pusha
daa
mov
push
outsb
dec
lret
mov
jo
sub
insb
iret
jecxz
das
sub
xchg
pop
jbe
mov
add
mov
jns
call
inc
mov
insl
pop
sub
or
pop
mov
iret
mov
and
out
into
and
mov
out
fdivl
pop
nop
daa
bound
call
scas
push
cmp
mov
mov
int3
sub
jns
inc
mov
cwtl
andl
pop
or
testb
or
fisubl
adc
adc
mov
sbb
insb
ds
mov
xchg
sti
mov
cli
js
mov
popf
lret
popa
adc
xchg
lea
cmp
jno
pop
cmp
aam
jecxz
icebp
mov
adc
add
aas
rcrl
dec
out
ja
push
loope
icebp
ficompl
mull
mov
jnp
enter
sub
xorl
or
test
add
or
jb
push
inc
and
ss
pop
sbb
rcrl
bound
dec
out
push
jns
loopne
xchg
mov
pop
jae
dec
xor
pop
cmpsb
pop
mov
inc
sbb
xchg
scas
jp
jp
jbe
cmpsb
ret
ljmp
mov
pop
lret
rolb
push
mov
out
mov
mov
xor
pop
pop
outsl
adc
pop
ljmp
and
and
test
pop
xchg
rorb
cmovp
push
inc
orb
gs
rcrl
data16
aas
inc
or
cli
inc
out
inc
sahf
pushf
mov
out
cmpsb
pop
insl
pop
jg,pn
pop
jae
mov
cltd
adc
pop
popf
mov
pop
pusha
es
dec
push
inc
dec
cmp
lea
in
test
xor
pop
icebp
lret
lock
aam
aad
jo
ja
cmpsb
leave
loopne
mov
sti
dec
stc
lcall
mov
loop
test
xlat
in
push
jb
ficoms
ss
data16
lods
mov
loope
xchg
xor
xchg
dec
aas
or
test
xchg
add
lret
add
lahf
loopne
mov
call
xchg
int
sahf
xchg
sbb
jp
add
dec
jbe
in
push
mov
pop
push
arpl
xchg
jl
mov
cmp
pusha
fiaddl
adc
inc
mov
inc
lret
iret
std
mov
jnp
cmp
inc
nop
popa
jns
pop
pop
enter
jno
mov
jns
ret
jle
jg
stos
mov
rcrl
sub
popf
jno
pop
sahf
sub
or
inc
ret
xchg
cmc
lahf
roll
fildl
int3
dec
outsl
test
xchg
pusha
test
inc
cli
lock
pop
dec
sub
dec
jl
push
not
lcall
loopne
bound
int
js
fistpl
imul
sub
sbb
movsl
lods
jbe
das
dec
bound
xchg
mov
lret
enter
adc
jmp
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
es
bound
and
aas
mov
movsl
jae
fmull
or
add
or
insl
xchg
loope
adcl
test
xchg
shr
xor
jmp
in
mov
push
scas
icebp
insb
pop
movsl
stos
push
sbbl
pushf
xchg
and
test
scas
les
and
push
pop
or
or
pop
adc
push
lret
cmp
mov
int
jg
cmp
sbb
enter
rorl
mov
xorb
out
lret
fdivs
cltd
or
push
cmp
fcoml
xlat
mov
sbb
inc
in
xchg
xchg
or
push
mov
pop
lods
stos
mov
je
jge
lock
cmp
dec
add
adc
mov
int3
mov
int3
sbb
mov
add
pop
mov
mov
mov
repnz
loop
into
ret
sub
jb
sub
jg
sbb
xchg
jb
jnp
fldcw
sbb
sbb
push
cmp
dec
and
stc
pop
movsb
sti
fisttpll
pop
and
arpl
inc
aas
les
js
test
xorb
dec
sub
and
mov
test
rclb
xor
ret
xorb
ljmp
pop
jecxz
inc
inc
lcall
lret
sub
inc
xchg
mov
divl
mov
or
ljmp
sbb
add
call
adc
pop
and
lock
xchg
sbb
or
test
or
push
cmp
add
jp
enter
popl
nop
ret
out
dec
push
std
notb
adc
orb
push
mov
or
repz
jb
push
test
sub
pop
jp
jl
sbb
pop
fidivl
adcl
test
dec
mov
bswap
shll
dec
popa
jo
cmp
inc
pop
loop
fstpt
stos
rcl
aaa
lods
jne
out
lods
pusha
sub
or
cmp
cmpl
nop
and
movsl
dec
nop
or
dec
jbe
or
test
dec
out
div
in
inc
daa
test
xor
sbb
jo
icebp
daa
adc
out
jge
mull
popa
sbb
insb
mov
or
rcrl
adc
mov
and
pop
push
inc
fisubrs
jecxz
shll
jg
in
pusha
push
loope
rcrl
cmc
aam
cmpsl
enter
out
les
imul
xchg
dec
mov
mov
fisttps
jecxz
test
int
push
clc
ret
cmp
jmp
xchg
mov
inc
mov
stos
ds
pop
or
or
xor
push
lcall
in
iret
imul
sbb
push
lods
push
push
mov
ficoms
xor
pop
jle
fwait
aad
or
inc
lods
sub
mov
and
shll
rorl
or
and
in
inc
cmp
dec
pop
test
mov
pushf
sbb
and
nop
mov
inc
mov
jbe
dec
push
add
hlt
addr16
dec
flds
outsb
mov
mov
inc
xchg
cltd
push
xlat
popa
fistl
sub
rcl
add
fnstsw
mov
jb
pop
jne
adc
in
in
movsb
movsl
sbb
xchg
aas
in
enter
xchg
mov
dec
or
in
mov
adc
xlat
scas
loope
addl
jo
dec
sub
gs
icebp
out
xor
les
jle
js
inc
outsl
cs
jne
cmc
iret
cmp
shlb
fldenv
fcmovu
jmp
stos
mov
shrb
in
mov
push
repz
push
dec
sub
dec
movsb
push
inc
clc
test
push
js
sub
add
xor
fnstsw
lds
pop
sbb
pushf
mov
jg
lcall
aad
ret
dec
jl
xchg
xor
imul
xor
mov
outsb
add
inc
pop
mov
jmp
add
in
bound
inc
cmp
repz
mov
jb
cmpsb
dec
sub
scas
repz
cmp
fcomp
pop
ljmp
lret
lods
inc
cs
shlb
data16
stos
cmpl
dec
icebp
shr
addl
into
pop
mov
mov
pop
or
mov
lds
loop
jns,pt
jo
jecxz
shr
sub
jge
push
mov
fnstenv
mov
mov
or
mov
subl
ret
mulb
mov
inc
or
xor
sub
mov
or
aaa
push
dec
or
push
jl
je
add
add
add
cmpsb
jmp
mov
test
lcall
push
int3
mov
mov
cmpsb
mov
or
cmp
jecxz
int
mov
pop
and
repz
stos
dec
scas
xlat
add
add
in
sahf
xor
imul
lods
inc
jge
lahf
dec
pop
outsl
pop
fs
nop
push
ret
inc
mov
imul
or
mov
jmp
test
sbb
mov
mov
out
aaa
popa
sbb
or
iret
add
or
sbbl
ja
cwtl
pop
mov
push
pop
test
or
jbe
gs
cwtl
push
pop
jbe
scas
popf
dec
and
test
jae
mov
out
loope
push
shr
sub
out
adcl
xor
dec
xlat
inc
in
cmpsl
inc
push
xchg
fisubrs
pop
outsl
lahf
imul
test
mov
stos
push
push
pusha
lea
and
leave
sbb
fld
inc
and
jnp
sub
fimuls
push
insl
push
and
in
push
outsl
lock
pop
and
daa
mov
mov
aas
testl
popa
adc
aaa
mov
int
jne
sub
dec
mov
and
icebp
and
sub
pop
lods
mov
iret
in
mov
pop
ja
and
je
mov
cltd
aas
or
adc
adc
ret
xchg
and
xchg
ljmp
shl
mov
mov
cwtl
je
cld
sbb
jae
push
push
mov
push
out
or
cmp
push
xor
rclb
imul
xchg
sub
sbb
ret
lret
inc
sbb
std
or
and
and
dec
in
jmp
mov
jo
add
imull
sub
insb
cld
cmpsl
sbb
jp
jo
mov
cmc
mov
jmp
pop
cs
pop
ds
test
sti
dec
jecxz
test
ja
jmp
sbbl
in
ljmp
ja
push
in
int3
lret
int3
push
lret
in
imul
in
and
and
dec
jmp
nop
nop
lea
cld
fs
clc
out
mov
shrl
sub
or
loope
jmp
push
in
stos
pop
mov
aaa
add
mov
test
fsub
or
jo
cmp
mov
imul
loopne
mov
sbb
scas
pop
cli
push
movsl
popf
shll
lock
pop
pop
fisttps
dec
icebp
push
adc
pushf
shlb
mov
fwait
sahf
push
and
adc
dec
stc
mov
cli
adc
mov
mov
loopne
sbb
jbe
lahf
es
loopne
xchg
fbld
outsl
rorb
mov
mov
jbe
leave
sahf
fmuls
cltd
xor
loopne
jle
test
adc
rolb
stos
xchg
push
lcall
inc
jge
or
dec
xor
lahf
mov
test
xchg
inc
pop
sub
cmp
jns
sbb
dec
rorb
mov
rcrl
mov
mov
cmpsl
test
dec
jl
cmovge
mov
ljmp
add
adc
inc
xor
dec
ds
pop
rcll
cld
loopne
mov
or
imul
xchg
jecxz
jne
fadd
and
stos
sbb
insb
inc
andl
adc
inc
pop
cli
into
and
popf
sbb
je
mov
cmp
pushw
mov
cmpsl
push
inc
les
jmp
in
aas
inc
ret
in
out
push
and
test
lea
jne
decb
mov
imul
aas
pop
scas
lds
cmp
ds
adc
iret
cmp
fwait
test
daa
xchg
cs
cltd
icebp
gs
mov
enter
nop
std
lcall
add
jnp
sub
jg
out
inc
inc
jae
mov
test
pop
inc
adc
in
xchg
fisubl
sub
add
mov
lea
int
lcall
jmp
mov
in
mov
nop
das
mov
or
test
xor
data16
outsb
std
out
in
and
idivl
xchg
sub
mov
xor
imul
scas
inc
xor
das
jg
fidivrs
lret
test
ficompl
fs
inc
jge
cmp
mov
mov
dec
sub
jp
stos
outsl
das
mov
jae
inc
mov
popa
data16
aas
lsl
std
jne
lret
lcall
push
gs
add
outsl
ljmp
testl
jp
dec
mov
rorb
cmc
movsl
aaa
sbb
and
mov
cmp
shrb
iret
jae
jmp
out
dec
pusha
fistl
sub
adc
dec
push
outsb
jl
push
mov
stc
dec
inc
push
cmp
cs
xor
ljmp
out
cltd
sub
insb
pop
sub
mov
xchg
mov
fwait
and
mov
lahf
lcall
add
outsb
add
pushf
das
cmpsl
sub
subb
xchg
test
into
push
sub
test
mov
inc
and
ret
lods
adc
sti
cmpsl
xor
cli
mov
jmp
cwtl
or
jmp
or
adc
push
in
inc
cmp
js
imul
psraw
push
dec
cmp
pop
mov
sub
adc
cmc
xor
or
dec
adc
sub
or
sub
dec
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
jmp
popa
das
xchg
inc
xchg
aaa
push
das
pusha
dec
pop
addr16
les
or
div
fisttpl
in
cmp
jl
push
jno
mov
addr16
cmp
lods
push
or
in
rcl
cmp
into
and
sti
push
dec
inc
arpl
push
xchg
sub
adc
or
mov
sbb
xchg
fcmovnbe
sbb
inc
mov
xlat
insb
imull
pop
bound
insb
mov
cmp
push
frstor
mov
in
js
call
sbb
movsl
aas
dec
jbe
iret
mov
push
iret
jnp
outsb
shl
lods
jae
shr
or
or
mov
mov
stos
ss
movb
mov
mov
push
stc
pop
push
out
loop
lods
dec
xor
and
cltd
mov
jl
ror
or
jp
ss
mov
dec
adc
inc
dec
and
xchg
jae
pop
dec
inc
sub
xchg
les
scas
xchg
jg
dec
mov
add
aas
mov
sbb
mov
push
out
push
xchg
movsl
push
out
sbb
int
mov
pop
jnp
dec
inc
mov
mov
std
enter
dec
mov
xor
iret
data16
pop
fstps
push
push
in
stc
add
pop
adc
xor
and
shr
push
xor
mov
fs
adc
scas
pop
jnp
lret
lahf
jmp
xchg
lock
cs
repnz
call
inc
scas
aam
inc
cmpsl
test
lcall
cmpb
jmp
es
aad
in
movsl
scas
push
mov
into
movsl
data16
mov
jo
ss
fstpt
leave
or
adc
std
pop
or
rol
repnz
pop
inc
jbe
jge
cmp
ds
and
imul
pop
mov
dec
pop
xchg
lret
push
adc
and
adc
ret
pop
inc
mov
mov
cwtl
arpl
je
push
jne
dec
lds
popa
jle
cltd
aad
pusha
dec
inc
inc
in
adc
push
push
mov
adc
fwait
mov
or
sub
lret
js
imul
push
leave
or
in
xchg
inc
jo
insb
sbb
loope
pop
dec
fisubs
add
fstpt
sbb
push
into
or
call
mov
lods
shlb
adc
jno
mov
push
cmpsb
mov
repnz
arpl
dec
ret
xorb
sbb
xchg
xchg
push
xchg
ds
in
jecxz
and
loope
mov
stc
lcall
lret
stos
cwtl
pushf
xchg
ror
stos
sbbl
call
add
ds
fcomps
shrb
rclb
adc
cli
les
lods
mov
mov
daa
and
fldenv
xor
mov
or
sbb
leave
cwtl
jg
sbb
pop
sbb
out
rorl
lcall
cmpsb
popf
popf
filds
and
sbb
aam
adc
adc
xchg
xchg
aam
dec
adc
inc
pop
data16
jg
popf
sahf
adc
je
adc
or
xchg
subl
and
and
out
movsb
repnz
xchg
jle
sbb
mov
or
ja
stos
jmp
sbb
push
mov
and
cld
test
iret
pop
ret
cltd
cmp
push
xchg
repnz
add
inc
daa
mov
xlat
cmp
sbb
jbe
daa
fildll
cmp
adc
and
dec
jae
push
dec
decl
mov
sub
cld
or
xchg
lret
inc
push
aaa
mov
xor
insl
adc
iret
nopl
mov
mov
call
repnz
fisubs
lods
push
jl
mov
jecxz
mov
sarb
add
jl
loope
xor
adc
mov
pop
loop
mov
jmp
fidivrl
xlat
jae
out
mov
jle
xchg
in
cld
dec
mov
shll
mov
sub
iret
adc
rclb
lds
stc
loope
cmp
jns
mov
es
jle
mov
cmpb
cmp
loop
push
mov
jb
mov
fcmovbe
cmpsb
mov
lds
pop
pop
fwait
sbb
and
add
pop
pop
xchg
lds
mov
push
xor
mov
fsubr
data16
jae
movl
cmp
movl
jae
andl
shrd
movl
shr
ret
subl
mov
xor
and
shr
ret
jmp
aam
in
xchg
push
adc
hlt
popa
dec
mov
or
mov
or
loopne
cli
adc
inc
mov
fbld
icebp
scas
sahf
jg
xor
pusha
bound
lds
jmp
push
inc
add
jl
xchg
or
pop
addr16
pop
push
std
repnz
pop
scas
ja
test
jmp
je
fadd
mov
sbbb
lret
out
jle
pushf
loopne
cwtl
fistl
in
in
inc
fistpll
add
orb
fstpt
sbb
xchg
sar
mov
pop
push
mov
inc
mov
pop
add
jecxz
aaa
xchg
add
xor
mov
and
stos
xlat
into
fldcw
adc
push
or
fcmovnu
js
lret
mov
dec
out
lcall
pop
and
push
lret
sub
jle
add
in
xor
xchg
xchg
js
mov
push
push
nop
mov
jmp
adc
xor
test
xchg
sbb
xchg
mov
ret
sbb
cmpsl
stos
insb
mov
ja
sarl
cwtl
pop
mov
ljmp
cmpsb
stos
and
jns
lods
stc
lods
scas
add
or
xchg
mul
stos
rcrb
or
jecxz
ficompl
leave
xchg
pop
pop
dec
sbb
pop
pop
xchg
aam
sub
shll
inc
clc
std
arpl
mov
add
clc
stos
xchg
ret
stos
inc
jo
push
jo
mov
int
adc
pop
push
insl
test
call
dec
ds
loop
enter
rcl
xor
xor
adc
jnp
mov
rcll
ret
neg
jge
xchg
pop
not
je
arpl
xor
cmp
in
inc
lock
adc
movsb
sub
js
xchg
or
test
or
jns
inc
mov
inc
mov
mov
xchg
push
or
xchg
js
cmp
stc
lret
not
call
stos
shrl
jge
mov
push
shll
mov
dec
push
mov
push
imul
push
in
mov
push
cmc
out
jle
fwait
mov
mov
xchg
mov
cmp
imul
outsl
popf
jns
push
dec
sbb
scas
xor
jge
cmp
pop
sbb
mov
aam
cltd
sbb
addr16
dec
jno
pop
cld
les
rcl
lcall
popf
clc
push
or
or
mov
lahf
pop
push
test
out
jo
in
mov
xchg
pop
in
xchg
lcall
push
or
sbb
adc
push
shrb
pushf
mov
aaa
lea
fdivl
insb
jmp
imul
clc
dec
hlt
push
xchg
movsb
rorl
jnp
cmpsl
cmpsl
sahf
sbb
dec
cmp
out
mov
xchg
punpckhwd
inc
pop
ljmp
mov
add
mov
in
pushf
in
cld
jmp
clc
pop
mov
rorb
xor
push
call
lock
cmp
loope
xchg
add
jae
or
mov
mov
push
es
imul
add
ret
xorb
addl
dec
stos
pop
mov
sti
dec
and
inc
movzbl
int3
inc
in
push
pop
iret
mov
lock
push
jmp
push
adc
jno
sahf
enter
stos
ds
cmp
adc
mov
mov
pop
scas
imull
out
push
jmp
dec
roll
pop
cmpsb
imul
and
testb
imul
iret
xchg
lea
mov
sbb
jnp
xor
cld
scas
push
cmp
xor
icebp
fucom
push
rorl
adc
cmp
or
push
outsb
mov
cmp
leave
out
mov
filds
fld
or
aam
jl
in
push
dec
mov
js
in
pop
pusha
jbe
sbb
addr16
push
sbb
loopne
mov
mov
xlat
or
push
mov
popf
shll
jge
cmp
push
jmp
adc
enter
pop
xor
movsl
ljmp
add
sti
push
jo
insb
cs
out
cmp
ret
mov
add
push
jno
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
mov
movl
jl
push
call
orl
xorl
add
sub
movzbl
sub
mov
sbbl
movl
mov
mov
jmp
lret
xchg
stos
ds
xor
jge
pop
gs
shll
or
push
arpl
jg
xchg
inc
js
pop
or
je
lcall
dec
cwtl
loop
xor
add
jb
add
mov
cmp
data16
out
fneni(8087
jl
xchg
mov
int
loop
mov
jae
pop
sbb
mov
inc
and
ret
add
sbb
lods
dec
lcall
inc
ss
stc
out
lea
and
inc
pop
cmp
jbe
or
out
sahf
dec
pop
pop
and
pop
repz
sar
lcall
leave
inc
sub
imul
adc
in
pop
xchg
imul
outsl
inc
sti
dec
sub
loop
xchg
es
out
push
adc
jne
cwtl
out
dec
out
mov
test
mov
daa
pop
stc
loope
inc
pop
mov
clc
cltd
jbe
mov
jge
icebp
inc
aaa
or
dec
sub
pusha
xor
adc
popf
adc
or
dec
mov
ret
ror
lret
push
mov
inc
xor
cmp
adc
jecxz
mov
xchg
mov
icebp
dec
add
push
sbb
sub
les
rcr
imul
cmp
mov
and
and
aas
sti
inc
or
nop
xchg
adc
mov
jl
shll
inc
or
iret
and
add
les
add
std
xchg
sahf
inc
sub
sbb
mov
push
lods
xchg
mov
data16
cmc
xchg
and
sub
sbb
int3
add
dec
out
cwtl
lods
add
pop
in
xchg
mov
dec
mov
pop
pop
pop
adc
fwait
sub
sub
mov
and
xchg
mov
fstl
je
mov
loopne
mov
inc
xchg
je
in
idivl
cltd
sbb
mov
xchg
xor
sub
sti
add
addr16
int
pop
mov
xchg
mov
pop
lods
lds
shrd
lods
movsb
in
test
outsb
fcomps
and
cmc
xchg
push
xchg
xor
test
fisubs
dec
dec
mov
pop
mov
xchg
sub
lret
dec
push
pop
sbb
cmovs
gs
cli
push
sub
dec
adc
fbld
subl
bnd
rolb
inc
add
sub
fimuls
push
imul
in
inc
jae
stos
pop
clc
ds
js
or
xchg
mov
lahf
cli
or
ret
insb
pushf
imul
fsub
negl
sub
cmp
insl
rcrb
cmp
xchg
mov
push
mov
add
mov
sbb
loop
inc
mov
test
sbb
cmp
jae
test
into
shrl
stos
push
xchg
les
loopne
ret
mov
inc
lds
cmp
out
dec
or
cld
xor
xchg
aad
data16
lcall
aam
rcrl
cld
sahf
in
push
in
dec
push
sub
in
xchg
cmp
mov
mov
out
dec
adc
push
jae
into
jae
xchg
xchg
xchg
popa
icebp
mov
jnp
mov
scas
push
popf
add
out
pop
dec
adc
pop
mov
inc
xchg
leave
and
and
inc
clc
cli
mov
movsb
jns,pt
push
inc
inc
xor
pushf
cld
aaa
sbb
fldenv
shrl
xchg
or
out
pushf
xchg
mov
jno
add
pusha
inc
push
fmull
xchg
stos
int3
add
aas
mov
inc
xor
sbb
shrb
push
std
and
fisubl
mov
mov
dec
sarl
dec
xchg
add
xor
sub
jnp
sub
jge
push
and
stos
jo
pop
imul
xchg
pop
jne
jp
mov
and
jg
mov
push
outsl
xor
js
jl
jp
lods
pop
or
vcmppd
das
fwait
or
out
mov
aam
xchg
imul
fldl
xchg
in
notb
mov
insl
mov
xchg
in
fdecstp
ljmp
rolb
mov
xchg
andb
cmp
inc
shlb
mov
inc
add
mov
mov
movzbl
jmp
movl
jae
pushl
push
pushl
pushl
call
xor
add
mov
sub
sub
sub
and
andl
adc
sub
adc
mov
adc
movl
cmpl
mov
mov
jmp
mov
jl
pushl
push
pushl
push
call
add
mov
mov
sub
add
or
sub
or
movzbl
or
movl
cmpl
mov
movl
movl
jmp
mov
jb
call
inc
and
mov
sub
mov
or
xor
add
adc
movl
adc
movl
or
movl
and
movl
mov
and
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
push
pushl
call
mov
and
sub
inc
xor
adc
movl
mov
sub
mov
mov
sub
push
notl
mov
mov
sbb
mov
mov
push
push
adcl
push
sbbl
push
call
cmpl
movl
mov
jmp
notl
jbe
push
push
push
call
movl
movl
andl
incl
mov
and
xor
xor
mov
sub
add
mov
mov
xor
adcl
and
cmpl
mov
movl
mov
mov
jmp
movl
jb
pushl
call
sbbl
negl
orl
adc
movzbl
sub
xor
and
movzwl
add
and
or
mov
cmpl
movl
mov
jmp
movl
mov
je
call
xor
xor
xor
or
sub
add
xor
neg
addl
sub
adcl
and
andl
mov
adc
movl
cmpl
mov
not
movl
jmp
mov
jbe
push
call
xor
xor
xor
xor
orl
notl
xor
movl
movl
movl
mov
mov
jmp
ja
sub
pop
push
pop
inc
push
test
insl
cmpsl
sahf
mov
or
add
or
mov
lret
mov
in
aad
jnp
jecxz
or
sbb
mov
out
xor
cld
add
cli
test
sub
aam
and
sarl
mov
cmpsb
mov
testb
rcrl
roll
popa
dec
adc
mov
test
sub
lret
pop
test
ss
xor
dec
and
or
movl
adc
or
ret
faddl
cwtl
adc
fwait
sub
or
movsl
mov
outsl
sbb
or
push
out
aaa
inc
mov
stc
jo
mov
es
cmc
push
insl
dec
jle
xchg
xorb
loope
out
jb
movsl
dec
pusha
mov
fdivrp
lods
dec
daa
movsl
inc
ss
sbb
movsl
xchg
xchg
or
hlt
ja
loopne
cmp
xchg
inc
loop
unpckhps
data16
rorl
imull
fsubrs
aas
inc
mov
lds
jae
inc
ret
out
add
jns
imul
add
fiadds
out
test
lahf
push
add
push
enter
push
jecxz
push
insb
lahf
mov
fldenv
push
mov
or
sbb
mov
popa
add
xchg
inc
dec
fldl
aam
pop
pop
sbb
cld
xchg
jo
shlb
add
int3
push
cmpsl
mov
repnz
or
push
ret
jae
sbb
or
imul
aas
scas
xchg
push
sbb
sub
popf
xchg
adc
icebp
ficoms
dec
cmp
sahf
mov
xor
dec
arpl
dec
sub
and
add
in
pop
icebp
xlat
adc
pop
jmp
xor
pushf
pop
cmp
popf
jg
outsb
mov
lcall
jmp
xor
addr16
decl
out
sbb
jle
std
adc
dec
pop
es
loopne
rclb
insl
lcall
xchg
pop
lret
push
xor
dec
cmp
mov
xor
rcr
or
in
ljmp
mov
cmp
nop
in
scas
lcall
push
adc
les
and
pushf
cld
out
adc
mov
xchg
dec
cld
mov
inc
stos
add
shr
decl
out
sub
and
cmovo
jne
pop
inc
jbe
push
mov
sub
sub
dec
adc
arpl
nop
rcll
and
pop
loope
ret
ficoml
cmp
inc
int3
fucomi
mov
inc
into
push
repz
lcall
dec
mov
fistl
imul
lock
xchg
mov
fdivr
out
pop
mov
inc
mov
mov
jnp
ret
jno
sbb
ljmp
insb
aam
add
cmpl
xor
test
adc
jne
xor
sub
test
mov
inc
lret
and
or
inc
rcl
shll
xor
xchg
jp
dec
and
sub
pop
arpl
std
jns
adc
xchg
pop
nop
inc
je
fwait
stc
xchg
pushf
lret
pop
test
push
rorl
pop
pop
or
insb
and
push
int3
add
pushf
sarl
aam
xchg
or
jnp
xchg
leave
push
sbb
or
test
mov
mov
jbe
bnd
jns
mov
call
xchg
std
and
push
push
cmpsb
sarl
nop
ficoml
push
popf
and
add
in
push
push
push
insl
jbe
out
cltd
fcoml
lods
push
loope
clc
jns
or
lds
ss
push
mov
inc
sub
cmp
sbb
xchg
popa
or
xchg
add
dec
and
repnz
daa
sub
pop
pusha
test
popf
ret
mov
ja
sarl
test
adcl
and
sbb
push
xor
sub
popf
xor
mov
xor
outsb
adc
imul
jne
or
sbb
imul
mov
or
cmpl
ss
data16
mov
jmp
mov
add
push
adc
push
and
and
push
push
call
mov
mov
cmp
jmp
int
jmp
xchg
add
aas
mov
test
or
add
or
fistpll
out
outsb
add
sub
push
aad
or
and
xlat
data16
cmpsl
inc
loop
mov
pop
xor
cmp
outsl
mov
dec
pushf
faddp
cmpsl
cmp
and
cld
jns
aas
imul
fistpll
and
and
lods
mov
hlt
sbb
or
out
mov
inc
pop
mov
outsl
pushf
jecxz
jp
mov
add
bound
xchg
jg
popa
jbe
pop
les
and
data16
in
fcoml
pop
aad
shrb
mov
movsb
pmulhw
pop
or
bound
frstor
or
rcrl
pop
ja
nopl
xor
popf
push
leave
pop
mov
mov
in
mov
mov
mov
jbe
cmp
push
inc
rcll
push
mov
jne
sub
cmp
je
push
jle
imul
push
dec
leave
mov
call
fistpl
sbb
and
jnp
das
inc
aad
repz
into
xor
mov
lcall
out
in
pop
ljmp
xor
mov
push
sbb
pop
neg
add
sbb
icebp
mov
in
popa
jmp
adc
push
loope
xchg
int3
popa
aad
mov
or
popf
mov
adc
sti
jnp
cs
int3
dec
dec
dec
cmp
test
inc
gs
pop
push
lds
sub
push
pop
push
mov
fbld
pop
aas
ja
jge
jecxz
popa
mov
or
jg
xchg
seta
test
cmpsb
adc
lock
imul
ret
das
pushf
aas
out
mov
inc
ret
mov
test
xor
insb
jge
pop
inc
bound
inc
adc
fiadds
jmp
pop
outsb
sbb
xchg
mov
inc
mov
xor
ds
aas
adc
test
mov
loopne
mov
ss
jns
out
push
sbb
outsb
js
mov
int
jmp
xor
in
lret
mov
mov
lea
jae
add
stos
adc
icebp
rcrb
xor
pushf
pusha
das
push
outsl
fs
sbb
xchg
jnp
inc
es
mov
fistpll
hlt
mov
lret
mov
sub
jb
in
adc
popf
cmp
push
xchg
inc
daa
ret
mov
pop
or
stos
daa
mov
inc
test
jbe
sbb
xchg
movsb
mov
test
dec
movsb
xchg
add
xchg
mov
subl
loopne
ljmp
mov
sbb
aaa
dec
push
pop
std
dec
add
jae
loope
clc
jno
mov
pusha
icebp
dec
cmp
call
in
sub
mov
int3
scas
and
pop
inc
std
outsb
rcr
add
or
cmp
cs
xchg
ret
loop
les
pusha
outsb
mov
mov
sub
mov
add
add
jmp
lret
in
inc
dec
lods
hlt
stc
ss
push
stos
popa
in
imul
fildl
std
clc
or
popl
jo
ret
lcall
mov
mov
jecxz
push
push
shll
xchg
in
inc
jge
stc
aaa
mov
xchg
xchg
pop
push
mov
shrb
xor
sbb
adc
adc
jecxz
sbb
inc
xor
xchg
adc
fildll
test
std
lss
outsb
out
pop
pop
jp
pop
cltd
mov
xor
inc
dec
adc
lret
add
imul
xor
addr16
jo
or
mov
int
add
push
sbb
hlt
pop
ret
jmp
and
sarl
cltd
mov
sbb
cmp
push
jbe
icebp
lods
cmpsb
sbb
movsb
xchg
inc
dec
out
inc
mov
jp
je
xchg
pop
cmp
frstor
dec
cmp
loope
adc
sub
xchg
add
and
pop
push
push
dec
clc
mov
or
dec
lock
hlt
stc
loop
mov
add
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
jmp
pop
xor
dec
movsl
sbb
pop
imul
or
aad
or
ss
in
pusha
in
hlt
sar
ljmp
jbe
xchg
into
loope
mov
ret
mov
and
pop
adc
loope
ss
mov
push
ja
ss
jns
and
mov
lods
push
ret
mov
jno
rorb
sbb
hlt
and
mov
or
add
subl
xor
pop
repz
add
out
inc
mov
xchg
push
fsubs
jbe
clc
mov
sbb
nop
dec
inc
repnz
inc
cmpsb
xchg
rcrl
ret
aad
add
pop
cwtl
test
insl
decb
jno
je
lret
in
jno
push
leave
sub
xchg
adc
jl
ja
vmwrite
push
jl
aad
pop
mov
shrl
sar
inc
imul
cmpsl
iret
in
sbb
stc
sahf
add
scas
mov
ffreep
xor
and
adc
sub
loope
jbe
inc
push
push
xchg
stos
cmpsl
or
mov
lcall
test
sarb
mov
sub
dec
push
pushf
repz
push
jge
xor
in
mov
cmp
jae
xor
cmp
or
adc
lcall
fistpl
out
imull
mov
mov
popa
test
jmp
fisttpl
and
lods
push
cwtl
mov
lods
lock
jl
xor
or
add
stos
add
retw
scas
fstl
mov
add
adc
scas
outsl
dec
lahf
fs
push
fs
inc
mull
sbb
cmp
testl
pop
cwtl
dec
sbb
mov
incl
fsub
fcmovb
sub
pop
jno
scas
and
cwtl
lock
loope
pop
rorb
call
dec
sub
out
or
mov
xchg
loope
and
push
ret
out
adc
je
add
pop
sub
jns
xor
ds
xor
and
inc
shlb
sbb
sub
xor
add
aaa
popa
cltd
inc
cmpsl
inc
add
ljmp
stc
mov
lret
sub
xor
inc
xor
out
adc
mov
jbe,pn
adc
jno
outsl
cmpsl
dec
rorl
pop
sahf
sub
push
sub
mov
fcompl
and
out
mov
adc
and
rorb
xchg
push
xchg
mov
sub
dec
popf
repnz
mov
push
in
pop
in
out
and
gs
xchg
adc
lahf
mov
fisubrl
out
push
cmp
insb
or
mov
test
mov
and
icebp
sub
sbb
cld
add
mov
xor
loop
arpl
and
jo
pop
jg
pop
mov
push
mov
jno
mov
add
test
dec
xchg
enter
inc
popf
sub
sub
adc
shlb
adc
mov
add
mov
cmc
loopne
leave
sbbb
push
mov
inc
pushf
lock
jg
fimull
xor
fists
pop
ret
loop
fldenv
push
ret
test
cltd
push
sbb
pop
mov
push
sub
cwtl
xor
repnz
jp
mov
inc
xchg
outsl
jbe
push
dec
jne
lds
cmpsl
pop
aas
mov
cmp
aam
out
enter
sub
je
mov
cmp
arpl
mov
enter
cmp
xchg
das
dec
std
jl
or
jno
pop
dec
push
out
mov
dec
sub
xor
addr16
xor
cmc
cmove
ror
inc
mov
xchg
lock
xchg
inc
sbb
aam
mov
popf
add
xchg
cltd
and
lods
dec
push
imul
or
pusha
mov
sbb
in
mov
fstpt
pop
ss
movsl
jo
ljmpw
rclb
insb
test
rcrb
or
out
pop
mov
mov
hlt
enter
sub
loopne
lcall
testl
cld
mov
jle
mov
mov
loopne
add
mov
lret
out
sbb
xchg
pop
rol
mov
jbe
mov
mov
or
add
or
movsl
xchg
mov
test
jg
and
js
inc
mov
or
jno
shlb
or
cmp
in
movsl
test
lahf
xor
cltd
adc
cmp
pop
mov
dec
xchg
mov
mov
or
aam
scas
sub
aam
mov
dec
lods
das
mov
fsts
sti
imul
mov
daa
or
into
jno
mov
lahf
jmp
insl
shlb
jne
inc
xchg
loop
shrl
or
repnz
add
outsl
mov
push
sub
sub
jae
push
shll
shll
fwait
mov
inc
gs
fsubr
or
out
inc
dec
vpshufd
rorl
cmp
xor
mov
nop
lret
push
inc
dec
mov
or
jno
jae
or
fnstcw
lds
sbb
dec
mov
inc
jmp
inc
aas
scas
fcomi
cmpsl
in
dec
jecxz
repz
pop
lods
sbb
int
lret
xor
std
movsb
je
nop
mov
loope
push
jae
cmp
outsl
inc
repz
fcoms
cmp
inc
mov
pop
stos
jb
or
aaa
add
adc
into
in
mov
push
add
mov
cmp
jbe
fcompl
dec
dec
cmp
test
lcall
mov
xor
cwtl
addl
pop
cmp
out
adc
lock
pop
pop
push
cmp
adc
mov
test
dec
sub
shr
dec
xchg
in
pusha
shll
xchg
cmp
outsl
mov
mov
ljmp
sbb
cld
aad
mov
or
and
scas
out
or
fs
out
mov
dec
insl
jg
and
pop
dec
dec
icebp
out
data16
and
stc
addr16
iret
xchg
es
repz
jmp
cmp
rcl
hlt
loope
fidivs
xchg
std
sbb
loop
lret
push
fs
inc
cmp
or
pop
sahf
inc
add
pop
xchg
and
enter
inc
pop
pop
call
inc
mov
leave
lahf
fstpl
scas
std
subl
inc
dec
jb
ljmp
add
mov
mov
cmpsb
jne
stc
mov
ficomps
sbb
pop
repz
adc
js
decl
mov
pusha
add
cmp
fs
pop
dec
xor
inc
lock
cltd
ret
pop
cmp
adc
out
call
fdivr
das
lock
or
call
int
aad
int
in
leave
out
test
out
movsl
pop
xchg
ljmp
in
xchg
jae
ret
xor
inc
jb
cli
lods
rolb
sbb
cmp
mov
pusha
mov
cmp
cmpsl
es
and
js
clc
adc
mov
repz
arpl
pop
xlat
sub
cmp
pop
das
negl
jb
push
jle
dec
xchg
mull
jae
inc
es
cs
sub
mov
icebp
jns
cld
arpl
lcall
cmc
leave
mov
mov
and
push
ja
xor
dec
xchg
dec
jbe
pop
sub
into
adc
pop
sbb
pushf
add
jp
out
mov
hlt
scas
cltd
std
dec
jae
cmp
test
test
cmp
in
and
ficoml
or
frstor
pop
movsl
in
into
pop
cld
arpl
inc
std
std
jmp
in
mov
sub
adc
mov
loope
add
nop
inc
jecxz
dec
xchg
jb
in
jnp
push
testl
sahf
mov
sub
dec
andl
push
cltd
ds
adc
cli
push
in
fwait
xor
scas
je
push
push
push
sbbl
cmp
test
jmp
pop
dec
xor
cmp
cmp
fmull
in
lock
cmc
int3
out
add
mov
and
shlb
xor
ss
mov
xchg
ret
cld
inc
sbb
scas
divb
adc
mov
dec
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
jmp
jecxz
pop
mov
xor
add
lods
test
or
add
or
aad
inc
adcl
inc
sbb
add
js
mov
test
fs
mov
pop
xchg
repnz
mov
sbb
stos
jge
jge
mov
cltd
or
or
js
mov
cltd
dec
or
jge
cmp
push
xchg
pop
pushf
stos
cli
adc
mov
add
fdivl
movsb
mov
shl
popa
cwtl
ja
xor
je
mov
mov
and
lahf
dec
push
pop
pusha
mov
ret
popf
mov
scas
dec
jno,pn
out
addl
or
and
sub
jp
insb
scas
xchg
cmpsb
sbb
cmp
shll
inc
loop
mov
push
mov
fiadds
leave
pop
push
jb
pop
fldt
and
mov
test
xchg
popf
xchg
and
xor
xchg
pop
cltd
test
xchg
push
adc
lea
int
xor
negb
loopne
dec
jl
daa
dec
mov
notl
sbbb
sub
testl
mov
insb
and
int3
out
fs
xchg
sub
jmp
cld
xor
lret
aad
lcall
popf
sub
int3
pop
lret
push
shrb
lret
fmul
out
cwtl
or
push
addr16
xor
lds
mov
mov
mov
das
int
mov
cmp
and
push
clc
xchg
ja
mov
in
cmp
xorb
xor
and
fbstp
mov
push
dec
imul
mov
movsb
push
enter
insl
jmp
nop
sbb
lret
dec
jl
das
dec
insb
loopne
shll
lcall
xchg
pop
push
or
loop
ljmp
cmpsb
aas
mov
cli
inc
jns
je
out
test
cltd
add
lods
js
mov
mov
fidivl
out
xchg
or
loop
mov
xchg
cli
xchg
and
je
cmp
xchg
mov
pop
inc
add
jmp
cmp
pop
push
sbb
xchg
adc
in
mov
push
jmp
mov
pop
lods
cld
xor
iret
arpl
lret
cli
in
lods
xor
pop
sahf
stc
mov
stos
cmpsl
enter
call
mov
lcall
sub
xchg
out
shrl
idivl
sub
xor
jp
jmp
pop
rcr
addr16
mov
movsb
rorl
sbbl
or
push
adc
insl
sub
clc
mov
inc
pop
push
call
xchg
faddp
xchg
jo
cld
push
pop
pop
xor
imul
or
imul
xorb
decb
pop
pusha
cmpsb
sar
fmulp
iret
or
clc
dec
cmpsb
adc
loopne
xchg
push
xor
or
sbb
rol
cwtl
ja
in
pop
push
adc
jns
arpl
ret
jmp
test
mov
dec
push
je
mov
push
popa
xchg
xchg
cmpsl
js
add
gs
cli
roll
mov
out
adc
clc
jns
cmpsl
loop
ds
adc
sub
push
sbb
enter
orb
xchg
jo
fcomps
sarb
jne
in
loop
lock
call
loopne
sbb
and
dec
popa
stos
jbe
out
imul
lcall
scas
cs
pop
inc
andb
fsub
clc
dec
bound
cld
fsubs
mov
cmpsl
fwait
add
cmp
sbb
aam
pop
das
push
xchg
jb
pop
mov
jo
pushf
or
lret
fucomip
and
xchg
jb
jae
fistpll
add
cld
shll
or
jo
and
push
pop
push
cmp
cmpl
fsubrs
mov
int3
jle
sahf
decb
shlb
mov
mov
xorl
pop
jae
fs
into
pop
mov
lret
pop
pop
addr16
sub
mov
repnz
idivl
dec
les
push
push
call
xor
jmp
repz
mov
adc
lret
dec
addr16
mov
jae
jle
or
add
or
mov
dec
xchg
mov
push
cmp
jmp
mov
mov
mov
cli
movsb
popf
push
mov
jmp
xchg
push
xor
arpl
lock
stc
lahf
mov
jo
sbb
or
xchg
fstpt
add
mov
and
shlb
add
mov
mov
std
jle
xchg
cmpsl
ret
iret
outsl
dec
sub
icebp
jmp
cmp
negb
cmp
call
data16
int
call
imul
jmp
pop
pop
mov
xor
stos
xor
fs
clc
mov
adc
test
pop
cmp
scas
imul
dec
invd
dec
cmp
inc
lods
sbb
into
loope
push
xlat
mov
sub
mov
xchg
inc
xchg
xchg
jp
mov
imul
dec
cmpsb
mov
popaw
inc
jae
push
jb
cmp
cmpsl
lcall
or
and
inc
fstps
push
sar
out
imul
xor
cmp
mov
mov
test
popf
pop
sub
sahf
pop
push
sbb
pminub
jae
cmc
pushf
insl
lds
push
out
add
idivl
movsl
rcrl
jl
jge
mov
xor
rclb
push
jecxz
mov
movsb
xchg
add
cmp
insb
fs
xor
mov
imul
into
sarb
mov
sbb
out
ja
dec
stc
xor
or
pop
cmc
ret
add
testl
jne
push
pop
xor
xchg
dec
jl
and
ja
bnd
mov
lahf
addr16
sub
push
fwait
jns
scas
sbb
xchg
loop
loop
sbb
arpl
cli
loope
lea
sub
dec
adc
jmp
cmpsb
lahf
xor
adc
and
test
lahf
popa
shrb
es
jg
inc
lcall
out
cmp
or
hlt
test
xor
add
xchg
lds
or
sub
mov
mov
dec
push
sub
add
loope
xor
adcb
push
dec
fcoms
xor
cmp
dec
jl
cltd
cmpb
out
aaa
xchg
out
hlt
mov
stc
mov
shll
or
lcall
xchg
andl
cmpsb
add
add
pop
out
mov
daa
sub
inc
in
push
imulb
mov
sbb
pop
aas
lahf
outsl
add
push
dec
aas
loopne
xlat
mov
imul
push
push
mov
in
fdivl
jg
jbe
in
std
mov
add
mov
sbb
xor
out
and
imul
xor
inc
or
and
xchg
rcrb
cltd
mov
pop
push
inc
mov
ljmp
sbb
cwtl
imul
popa
scas
mov
xchg
adc
jnp
add
xlat
xor
jnp
cmovb
cmc
insl
dec
jle
and
test
roll
sbb
mov
add
in
sbb
shr
lods
mov
push
sbb
pop
dec
xor
sub
jno
inc
push
dec
sbb
inc
xor
push
imul
aad
pop
jl
orps
std
in
push
leave
mov
arpl
push
mov
pop
icebp
ja
shrl
lahf
repz
or
or
das
rcr
fadd
cld
mov
push
pop
push
xchg
shll
dec
dec
dec
fbstp
ret
call
jp
outsb
faddl
pslld
ficoml
lret
cwtl
jg
insl
inc
xor
js
fmul
or
incb
mov
arpl
out
repnz
inc
nop
imul
js
dec
sbb
mov
aaa
adc
lock
jle
push
xchg
sbb
push
sub
les
cmp
in
xchg
gs
out
inc
lea
sub
adc
pop
push
jmp
lods
nop
sub
dec
das
add
dec
xchg
push
push
insl
add
xorb
shlb
xlat
mov
fcomi
leave
icebp
mov
mov
fidivl
mov
jle
cmc
push
orl
out
mov
push
jecxz
decl
mov
adc
xchg
fiadds
lret
shl
lcall
repnz
add
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
mov
jno
pop
jno
addr16
jecxz
jae
jbe
or
add
or
pop
xchg
loope
fmuls
push
ds
dec
fmulp
movsb
mov
fisubrs
lds
mov
jbe
fisubrl
movsl
sbb
ret
imul
rcll
and
and
jb
push
loopne
test
arpl
imul
sbb
or
stc
pop
jns
int3
adc
jg
sub
sbb
lret
push
mov
cmp
lods
call
lcall
rcl
stos
fldenv
xor
mov
es
test
rclb
inc
adc
fs
enter
xchg
aaa
add
jne
into
jnp
pop
cmp
add
inc
cmp
and
arpl
clc
ret
shll
aaa
push
jbe
pop
push
mov
xchg
loope
push
loopne
jns
mov
inc
sub
push
roll
in
mov
xchg
pushf
in
inc
jmp
shlb
and
lret
into
adc
pop
inc
data16
push
ror
mov
sub
rolb
mov
shl
mov
dec
and
sub
pop
sub
sub
pop
xlat
jle
jbe
mov
add
das
xchg
lock
cmc
sti
push
mov
mov
cltd
cmp
iret
in
sub
mov
cmpsb
fcomps
mov
cmp
cwtl
sbb
push
repnz
cmc
adc
jns
sahf
int3
out
cmp
jecxz
jae
and
jmp
pop
stc
adc
mov
inc
lahf
and
mov
stos
xchg
sarl
xchg
xor
mov
mov
imul
into
aas
sub
stos
pop
xlat
lods
repz
out
jle
loope
jne
pop
pushf
rol
push
mov
vmwrite
leave
icebp
jns
push
add
test
mov
pop
cltd
add
ss
pop
cmpsl
mov
aaa
hlt
and
fldl
sbb
pop
xlat
push
sti
jb
mov
sti
dec
sub
nop
lret
inc
mov
mov
fdivrl
lret
je
sti
inc
xlat
and
jno
je
inc
xchg
std
enter
icebp
push
and
mov
ljmp
out
mov
sbb
xchg
pop
shl
pop
icebp
loope
jno
repz
scas
jge
push
mov
lea
fdivr
test
xor
mov
push
mov
xor
fidivrs
fcomip
imul
xchg
mov
push
fldt
mov
aad
xchg
sub
or
test
cwtl
scas
in
mov
in
fidivrs
inc
out
push
orb
out
pop
xor
inc
lods
or
add
rcrl
dec
hlt
or
rol
mov
mov
ss
aas
and
mov
popf
adc
adc
out
push
jecxz
push
jp
sub
mov
push
add
lods
ret
cmp
aad
sub
jo
out
inc
and
sbb
js
xlat
lea
scas
dec
xchg
jp
pop
cmpsl
adc
fwait
div
sub
mov
mov
push
out
imul
add
inc
ljmp
mov
rcr
fwait
ljmp
sub
and
sub
xor
mov
fnop
xchg
mov
jns
cli
neg
dec
outsb
xchg
jbe
xlat
mov
dec
je
dec
movb
push
test
out
fidivrs
mov
iret
and
sarb
jno
or
std
outsl
std
xchg
xchg
ret
lock
fisttps
out
jecxz
add
repnz
ss
aaa
lds
push
jnp
adc
test
inc
sub
mov
jno
or
push
mov
nop
int
cli
jne
or
xchg
dec
loopne
pop
mov
mov
ret
or
cmpsl
jae
lret
lahf
andb
jecxz
scas
lods
adc
insb
mulb
clc
mov
pop
js
shr
into
outsb
cmp
sbb
lds
fwait
pusha
adc
adc
addr16
lret
aam
dec
cld
jae
cmp
jne
shrd
shl
mov
mov
xor
shr
mov
jmp
fucomi
js
js
fists
mov
mov
bnd
or
add
or
dec
sbb
add
push
mov
pop
cld
out
jb
test
dec
mov
mov
in
xchg
pop
push
bound
adc
adc
call
inc
and
lcall
pop
xchg
sub
adcl
lods
add
sub
inc
push
and
fdivrp
dec
sbb
sub
test
les
cmpsb
sub
mov
mov
in
fsub
mov
ret
imul
out
dec
fs
jb
aas
popa
sbb
inc
mov
and
jl
test
popa
flds
xchg
and
out
and
gs
pop
mov
lods
jmp
std
jne
mov
cmp
bound
jne
xor
push
mov
lods
sub
popf
cmp
fs
pop
push
and
sub
int
dec
insl
ja
aaa
in
cltd
sub
mov
and
daa
inc
fisubrl
pushf
cltd
sub
imul
inc
dec
aaa
xchg
xor
imul
cmp
shll
mov
fstps
lret
aas
scas
add
xchg
setg
fcomp
inc
lcall
data16
jnp
clc
mov
sub
out
jo
sbb
lcall
lret
cmp
out
or
clc
mov
fisttpll
js
xor
in
push
pop
mov
mov
lahf
mov
sbb
xchg
inc
or
lods
shrl
divb
test
mov
mov
jp
mov
ljmp
or
outsb
ficoms
and
sti
repz
xorb
and
gs
popf
repz
inc
add
pop
pop
mov
push
jmp
dec
mov
pop
popf
movsl
push
push
loop
stc
cmpsb
jae
xor
mov
popa
and
sbb
lea
lock
in
call
repz
pusha
add
pavgw
push
jns
xchg
sub
aam
loope
push
inc
ds
out
xchg
inc
nop
shl
lcall
push
or
lods
adc
sub
mov
lods
mov
pop
lock
xor
cli
xchg
xor
xchg
cmp
mov
cmp
mov
mov
sti
jnp
push
gs
push
cmp
push
jbe
dec
jmp
dec
xchg
aas
test
xchg
adc
cli
sub
mov
jo
insl
sub
and
sub
imul
xchg
jnp
daa
lock
or
lret
ja
pop
into
or
cmp
and
pop
insb
daa
mov
cmp
add
ret
mov
sub
and
add
lcall
fwait
inc
jnp
xor
test
push
movl
push
int
jecxz
movsl
enter
mov
lock
cmp
sbb
dec
dec
sahf
adc
dec
dec
out
push
jno,pt
outsb
aas
rcrl
jmp
mov
push
das
cltd
mov
fcoml
jl
cmp
mov
or
adc
loop
mov
test
push
je
movsb
ljmp
and
leave
jge
out
mov
push
push
fadd
ror
lock
jp
jbe
stos
jo
mov
push
inc
jle
mov
lods
aam
ja
stc
add
ja
test
sbb
mov
pop
mov
inc
vpsrad
orl
orl
pushf
fmull
into
ljmp
int
cwtl
mov
dec
jne
jae
jl
sub
pop
shll
leave
cmp
add
test
jg
sbb
sub
dec
orb
lcall
fdivl
lock
ucomiss
cwtl
fimuls
mov
fmul
or
push
popa
adc
push
dec
mov
xor
stos
push
clc
jle
jnp
shlb
aad
jbe
std
fmull
xchg
fildll
inc
fs
sbb
fs
out
sahf
sub
jg
push
sub
mov
cld
push
adc
add
cmp
movsb
sub
lods
and
scas
sbb
or
mov
fisttpl
je
out
xchg
imul
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
jmp
add
popf
mov
in
pop
addr16
jg
mov
add
or
xchg
in
sub
cmp
xchg
es
mov
or
je
lea
inc
sti
fcoml
fildll
jge
loopne
sub
mov
dec
mov
lcall
scas
iret
push
movsb
sub
pop
imul
shrb
jmp
jge
cmp
or
jg
inc
call
cmpsb
cs
mov
mov
or
daa
mov
xor
push
xchg
xchg
xorl
imul
sub
xor
pushf
jne
sub
pop
xchg
add
mov
mov
lea
cmpsb
sbb
lahf
pushf
add
andl
aad
cmp
jb
adc
fcompl
cmp
pop
and
mov
mov
loop
shlb
lock
mov
cmp
mov
jno
cs
movsb
mov
push
push
call
scas
or
inc
add
arpl
push
sub
mov
fimuls
outsb
pop
jnp
movsl
sub
mov
add
scas
pop
xor
ss
mov
push
pop
xorb
inc
aad
sub
push
dec
mov
or
sahf
sub
test
push
pop
cld
movsb
lahf
xor
mov
hlt
sub
inc
or
sti
sub
lcall
fwait
call
xchg
popa
mov
lea
xor
push
sub
popf
dec
filds
push
cmpsb
scas
addr16
insb
mov
ucomiss
dec
sub
push
movb
orl
das
sbb
mov
and
or
inc
add
aam
sub
mov
cmpsb
dec
daa
pop
fmul
mov
aaa
ret
jle
stc
pop
lcall
xor
fs
sub
inc
movsb
sarl
cli
cmpb
adc
stos
outsb
adcl
fwait
cmp
push
leave
cmp
xchg
push
add
adc
lods
jo
dec
fnstcw
jae
add
fwait
jne
dec
lret
cmp
mov
mov
xchg
xchg
loop
orb
xchg
mov
xor
jp
cwtl
sbb
sbb
repz
push
stos
dec
xchg
and
add
pusha
into
nop
jl
mov
cwtl
mov
fsub
and
mov
loope
xor
xchg
je
jb
shll
popf
and
add
lahf
cmpsl
jno
dec
inc
adcl
fucompp
ret
insb
push
jg
ljmp
jge
push
sbb
out
stos
push
xchg
inc
sub
out
jb
cmp
xchg
and
cltd
adc
cli
dec
stc
pop
mov
xchg
fsubrl
ss
cmp
nop
jecxz
imul
xlat
mov
ffreep
mov
fldcw
repnz
js
xchg
movsb
cmp
test
mov
iret
xor
and
stc
out
jmp
dec
adc
icebp
pop
sarb
push
push
test
pop
mov
loope
out
mov
push
cmc
jnp
jmp
inc
adc
push
or
clc
adc
scas
add
push
sub
out
push
jo
sbb
push
fdivs
das
movsb
mov
test
cmp
aaa
sbb
jnp
fsts
outsb
inc
jecxz
adc
pop
mulb
stos
mov
fwait
cwtl
cltd
cmp
pop
mov
test
jnp
push
push
lea
decl
mov
jo
and
pop
adc
xor
ja
mov
push
mov
push
cmp
jecxz
leave
xchg
fadds
or
in
add
pop
jmp
in
test
aad
mov
js
sub
push
pop
lods
push
das
and
std
dec
add
ret
cld
xor
repz
or
push
mov
scas
movsl
pop
cmpsl
xchg
dec
pusha
lret
clc
add
shl
mov
cld
pop
push
je
jns
cs
lods
aad
mov
or
dec
dec
pop
aam
std
mov
test
into
sub
inc
xchg
jp
cld
pop
jne
popa
jno
imul
pusha
xchg
xchg
mov
std
xchg
movb
movb
mov
movzbl
mov
movzbl
shl
jmp
loopne
jg
pop
xor
fnsave
leave
jno
jns
or
aad
or
call
add
fxam
jo
push
cld
inc
out
xchg
sbb
xor
hlt
cmpsb
xor
in
scas
pop
jle
inc
cmp
add
pop
adc
and
push
fisttpl
imul
out
sub
pushf
fadd
loop
data16
and
pushf
pusha
push
shll
adcb
or
inc
jb
lea
movsb
pop
or
push
mov
stos
js
addr16
pusha
addb
add
js
push
xchg
hlt
inc
in
dec
loop
push
cmp
cmpl
nop
adc
inc
jnp
imul
std
cmc
call
add
cs
inc
enter
pusha
cmp
mov
sub
add
sub
mov
cmp
add
sti
loop
inc
loop
mov
gs
enter
into
sub
mov
sbb
and
imul
enter
test
dec
push
bound
les
fldt
xchg
lret
cmc
and
rep
insl
iret
sbb
mov
outsb
adc
out
mov
push
xorl
jne
and
xchg
loopne
adc
call
sub
jnp
cli
jno
xchg
sbb
cs
inc
shrb
jle
push
jb
ljmp
repnz
sub
jle
sub
cmpsl
das
sub
jge
fsts
popa
inc
iret
mov
call
pop
xchg
inc
lret
xchg
inc
inc
dec
loopne
dec
fst
jle
pushf
mov
test
push
push
fninit
inc
lods
mov
ret
shrl
cmpsl
ret
inc
sub
sub
jl
mov
pop
adc
sub
mov
mov
inc
inc
xor
add
sbb
cmp
push
sub
nop
out
xchg
cld
xor
xchg
mov
fwait
mov
lahf
ret
adc
ljmp
or
in
insl
and
outsl
dec
lret
and
adc
push
xor
xchg
flds
mov
mov
sub
inc
repnz
mov
icebp
mov
nop
xor
adc
mov
xchg
cmp
outsl
fnstenv
cmp
fcoml
addr16
ss
lcall
mov
ds
fsubrs
mov
out
sub
dec
cmpsl
insl
pusha
test
insb
insb
ljmp
and
ds
test
ja
int
loopne
push
arpl
pop
push
mov
je
pop
and
xor
pusha
xor
shll
push
adc
fsubl
scas
fwait
sub
mov
rorl
xchg
mov
push
jns
sub
push
xor
das
movsb
xor
mov
sub
scas
and
sahf
popa
inc
gs
fsts
or
scas
dec
in
xchg
push
or
cmp
mov
test
jne
cmpsb
jp
aad
adc
mov
jp
leave
xchg
sub
repz
fistpl
jne
or
rcrb
dec
lret
inc
pop
dec
xlat
ficomps
fisubrs
xchg
and
mov
cmp
and
xchg
cmp
cmp
pop
xor
cmpsb
sbb
push
pop
fdivrs
or
test
dec
sahf
imul
adc
sub
das
xor
loopne
mov
fnstsw
out
inc
lds
mulb
mov
loop
mov
in
xchg
imul
shl
and
mov
les
mov
cli
cld
adc
stc
mov
cmp
out
push
stc
lds
in
andb
and
inc
sbb
loop
xchg
js
xor
gs
xchg
jle
pop
and
or
add
mov
push
fnstsw
mov
ja
enter
cmpb
push
inc
loop
hlt
push
adc
shll
add
cwtl
jp
cli
pop
lods
roll
xor
sbb
dec
mov
pop
mov
lods
aad
mov
pop
xor
cs
sub
testb
mov
xchg
inc
add
insb
add
push
call
jl
dec
shlb
cli
sub
ror
xchg
movsb
mov
xchg
xor
test
outsl
or
ljmp
adc
lcall
jno
lcall
sub
xchg
gs
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
jmp
push
adc
pop
xlat
sub
mov
adc
inc
dec
or
aad
or
and
jecxz
inc
inc
and
cs
ljmp
ret
imul
lcall
xlat
dec
cmc
lahf
sbb
loopne
fwait
jb
lahf
scas
push
or
push
lods
arpl
pop
add
push
cmp
and
shr
outsb
mov
sbb
xchg
sbb
mov
pop
std
mov
popa
and
out
push
pop
pop
imul
adc
jle
push
out
in
insb
and
outsl
add
inc
xchg
pushf
fdivrl
clc
xor
iret
jmp
jae
and
ds
push
push
pop
mov
add
xchg
lods
push
hlt
stos
dec
dec
test
addl
push
ja
mov
and
push
pop
mov
push
call
mov
in
repz
push
cltd
or
test
cs
outsb
adc
je
jg
cmp
ret
pop
fstp
sbb
sti
or
fnstsw
mov
pop
jmp
cltd
sbb
hlt
mov
outsl
lock
pop
add
test
pusha
and
mov
and
or
mov
lds
sub
mov
int3
lds
or
cmp
sub
push
andb
stos
dec
lret
mov
rolb
ror
fimuls
loope
mov
scas
push
xor
inc
inc
xchg
push
pop
xor
jo
int
jmp
pop
mov
push
out
cli
push
arpl
adc
cmc
in
pop
or
and
repnz
mov
cmpb
jl
test
das
fbstp
jne
push
pop
cwtl
mov
mov
dec
sbb
jl
pop
shlb
xor
hlt
dec
in
lods
mov
adc
xor
mov
test
rcrl
negl
jne
les
add
andb
push
int3
pusha
je
push
fimull
mov
call
push
repnz
jge
mov
in
push
sbb
dec
jb
mov
out
test
pushf
pop
clc
dec
sub
mov
ret
pop
push
jns
xchg
jne,pn
mov
sub
aas
sahf
xchg
push
je
adcb
add
lods
mov
arpl
dec
xchg
mov
dec
jl
xchg
push
fwait
cmp
cmpsb
or
scas
pop
movsl
mov
sub
shl
add
pop
and
icebp
and
scas
jmp
jnp
mov
sbb
mov
ljmp
pushf
movsl
sub
icebp
jo
lods
inc
aaa
adc
and
push
test
mov
je
idiv
inc
xor
mov
das
insb
adc
adc
aad
adc
fidivs
xor
lret
aad
pop
popf
jle
sub
daa
jecxz
popw
push
pop
adc
repz
mov
es
sbb
and
and
test
stos
jne
repnz
aam
pop
dec
jno
add
inc
jbe
and
arpl
add
mov
xchg
mov
rolb
ret
pop
mov
xchg
or
and
fisubs
or
cmp
adc
jl
lods
sbbb
inc
and
shrl
lock
jbe
movsb
and
sub
cld
leave
dec
ret
jmp
or
pop
push
lods
dec
jmp
repz
rsqrtps
push
cmp
mov
mov
ret
mov
in
sti
call
mov
push
push
fildll
jl
sub
jns
rcr
push
idivb
inc
call
lea
jns
dec
loop
pop
mov
add
inc
dec
jmp
loop
cwtl
xlat
lods
lods
pusha
inc
cmp
fs
les
pop
fs
mov
fmuls
push
and
in
and
fsub
std
lock
or
mov
xor
fmulp
pop
pop
or
inc
or
mov
dec
adc
pop
test
xor
dec
test
inc
pop
inc
push
aas
cli
xchg
fdivp
les
int
hlt
jle
test
ljmp
in
mov
inc
mov
fmul
sub
vpaddb
jmp
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
jmp
sbb
inc
daa
inc
pop
and
lahf
adc
mov
inc
or
aad
or
jge
sub
inc
cwtl
je
push
scas
or
mov
pop
pop
push
lock
cmp
xchg
dec
push
into
popa
shrb
jne
lods
adc
test
inc
add
cmp
push
and
sub
outsl
mov
xchg
sbb
add
dec
pop
mov
cltd
inc
jg
fsts
inc
and
or
in
xor
jecxz
imul
mov
inc
fdivrp
mov
imul
push
sbb
mov
jl
pop
adc
mov
dec
in
dec
push
in
gs
lcall
xchg
and
jg
add
icebp
adc
lock
call
pop
aad
mov
jmp
sub
in
bound
test
jo
lcall
pop
or
adc
mov
mov
push
lds
sti
dec
notl
sbb
mov
jbe
loope
mov
scas
xor
or
xlat
and
mov
adc
pop
xchg
test
cmp
fsubrl
int
movsb
lods
in
sbb
cmp
mov
add
into
or
shlb
mov
lods
or
idivl
ret
pop
mov
dec
xorb
cld
ja
movl
mov
push
jmp
popa
icebp
pusha
mov
es
mov
cmp
mov
ljmp
lea
jecxz
ljmp
lret
or
outsl
jle
lock
push
jle
into
outsl
and
neg
and
pop
scas
fistps
mov
in
ret
mov
jge
xlat
sarb
mov
or
xchg
pushf
and
out
mov
add
push
adc
mov
dec
js
xchg
out
xor
add
fs
or
popa
inc
les
cmp
lea
stos
repz
sub
xor
or
nop
sub
movsb
xor
add
rorl
outsl
xchg
mov
xchg
xor
inc
and
push
xchg
cmp
lret
in
mov
add
lock
lea
repz
pmuludq
xor
pop
jne
fisubl
inc
arpl
add
xchg
xor
mov
shlb
jno
jl
rorb
lret
mov
daa
dec
cmc
mov
add
daa
into
mov
jg
popa
jb
lret
fnstcw
xor
add
frstor
mov
sbb
outsl
adc
mov
pop
inc
xchg
ja
pusha
aaa
pop
xorb
in
inc
int
roll
adc
jo
xchg
test
into
and
sahf
mov
sbb
notl
jne
mov
subl
cmp
cmp
in
pop
mov
jecxz
roll
pop
mov
ja
scas
xchg
js
sbb
repnz
xchg
mov
lahf
popf
add
add
imul
mov
ret
push
shrl
sub
inc
icebp
test
sbb
jns
aas
outsb
and
push
mov
mov
pop
fcoml
mov
mov
mov
mov
ret
nop
sti
mov
dec
arpl
xor
test
out
cltd
mov
push
add
leave
mov
xor
or
ds
add
jl
push
mov
movsb
popf
add
les
adc
mov
add
ret
xchg
mov
outsl
xor
or
in
xchg
or
lcall
cmpsb
mov
ljmp
cmp
fiadds
push
pmulhuw
cld
push
test
mov
roll
arpl
adc
movsl
add
lret
popa
inc
mov
or
xchg
mov
cwtl
fisubrl
cmpb
inc
pop
addr16
pushf
cmc
mov
cmp
les
daa
add
rcl
mov
add
outsl
xor
xlat
pop
icebp
push
and
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
jmp
xlat
js
ret
push
pop
stc
xchg
jns
iret
daa
sub
or
push
fsub
inc
dec
xchg
dec
popa
jnp
sti
shlb
xor
not
add
out
xchg
add
in
mov
call
inc
pusha
jnp
mov
mov
inc
add
inc
cmp
mov
ss
xor
jbe
xchg
jno
mov
loopne
iret
movsl
loopne
sti
or
rorl
das
insb
cmp
mov
inc
sub
fnstcw
test
mov
icebp
stc
sub
enter
lea
je
xchg
push
stos
roll
cmp
mov
inc
push
aas
push
ja
dec
pop
rcr
test
std
aas
push
adc
inc
cld
insl
cmp
mov
dec
xor
push
int
mov
cltd
out
movhps
xchg
xorl
mov
dec
mov
fisubl
inc
insl
mov
jnp
mov
test
or
aam
fmull
xchg
jns
sub
jp
clc
push
ret
dec
pop
fdivl
fwait
out
or
cwtl
aas
add
or
popa
mov
addr16
cld
sub
add
add
mov
push
jb
subl
popa
sub
sbb
popa
shl
and
outsl
xchg
or
pop
into
ret
pop
mov
js
cmp
cmp
fcmove
pushf
loope
sahf
rorb
xchg
mov
in
addr16
jg
roll
dec
push
inc
xchg
pop
cmp
and
sub
adc
loope
out
mov
or
sahf
shll
or
jns
inc
fsubr
jp
push
dec
mov
sub
adc
add
cmp
into
mov
int
mov
imul
repz
inc
andb
push
mov
jecxz
idivb
sarb
sti
test
dec
ljmp
cwtl
push
or
stc
test
adc
pusha
and
cmpsb
leave
out
adc
mov
addr16
push
aaa
pop
jecxz
shlb
adc
aaa
add
mov
dec
test
clc
lcall
inc
mov
popf
pop
leave
adc
jmp
rcl
es
dec
in
jae
ret
outsb
sbbb
int3
iret
inc
loop
and
mov
jle
and
sub
inc
push
xor
push
xor
push
push
outsb
mov
push
or
xchg
mov
lods
cmc
jmp
out
and
sbb
je
lret
push
outsl
xor
testl
jnp
jb
cmp
sub
fbld
jo
jae
daa
cld
shl
push
push
mov
icebp
and
mov
cmp
mov
stos
xchg
sub
xor
inc
sub
mov
lods
in
lret
out
sub
popf
sub
or
test
dec
jne
in
jo
adc
cwtl
rcll
stos
mov
mov
sbb
mov
or
mov
call
cmp
mov
shl
ss
rcll
xchg
pop
adc
out
cs
stos
mov
or
roll
shlb
mov
inc
out
lret
repz
clc
out
mov
out
and
pop
je
subl
lret
or
cmp
sub
aam
rcrl
jnp
mov
cmp
ljmp
mov
add
jl
loop
inc
movsb
test
xor
lcall
in
fs
loop
mov
xchg
orl
cmpsl
ret
sbb
adc
push
iret
jle
jmp
lcall
rcl
and
pop
sub
dec
and
lret
sbb
lods
imul
mov
mov
lret
and
sub
adc
cmpsl
aad
je
sub
adc
movsb
cmp
adc
popf
shll
loopne
adc
or
jmp
jns
imul
hlt
test
stos
push
mov
xchg
faddl
add
stos
cmp
jne
roll
leave
sbb
int
mov
out
cmp
dec
xchg
enter
adc
jns
or
pop
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
jmp
fadd
mulb
xchg
sbb
aaa
dec
jno,pt
lahf
scas
and
cmp
or
andb
int3
jl
imul
pop
rcrl
int3
dec
popa
fwait
int
test
and
push
test
jo
push
mov
loop
jmp
jg
jo
jmp
push
sarl
cmc
push
call
outsl
insb
or
dec
sub
cld
adc
les
jns
xchg
ret
shlb
jns
call
pop
xor
dec
shl
call
cmp
pop
pushf
fwait
push
in
jne
es
popa
jmp
idivb
frstor
push
mov
xchg
dec
cltd
loopne
outsl
test
rorb
mov
dec
sbb
cmp
fnstcw
sub
sbb
xchg
test
scas
insl
loopne
insl
jb
aad
divl
jecxz
dec
into
push
mov
movsl
insb
lahf
xor
inc
cmpsb
lret
xchg
mov
mov
mov
inc
mov
clc
cld
mov
fildl
mov
mov
mov
pop
mov
aam
xlat
jecxz
adcb
jmp
cld
mov
lret
add
sbb
xchg
and
xchg
mov
and
push
mov
cwtl
xchg
pop
cwtl
and
movsl
daa
jae
cmpsl
cli
inc
pushl
fdivrs
push
imul
fistpll
int3
cmp
loope
mov
mov
inc
mov
push
je
fmuls
push
stos
in
int3
fbld
ljmp
cltd
fwait
outsl
xor
in
hlt
mov
dec
sbb
inc
ds
es
fisubs
in
lcall
in
mov
jl
xor
inc
pop
stc
cld
jecxz
les
les
ds
aas
test
test
xor
mov
xchg
pop
movsb
mov
rcrl
xchg
xor
adc
aam
lods
sahf
xchg
add
and
sbb
fbld
movsl
mov
cmp
jecxz
sti
imull
stc
add
inc
add
repnz
mov
pushf
mov
fnsave
xor
outsl
or
inc
mov
ret
aaa
aaa
mov
cmp
cmpsl
push
ja
sbb
xor
jmp
dec
mov
iret
scas
rol
rolb
roll
fistpl
imul
pop
lods
xchg
mov
sbbb
rorb
loopne
add
les
out
cmp
leave
fsubrl
cmp
inc
push
xorl
xor
icebp
or
test
data16
sti
dec
int
lret
xchg
jnp
fadds
push
mov
lea
in
in
hlt
leave
std
adc
lret
push
mov
mov
roll
stc
lret
mov
incl
inc
ret
out
enter
loope
pop
sahf
cld
dec
push
or
inc
xor
add
dec
jne
or
lods
and
rcl
aam
push
popf
adc
int3
mov
push
out
fsubs
icebp
enter
push
sub
pop
adc
inc
jl
mov
int3
xor
shll
sub
pop
call
pusha
and
sub
movsl
sub
mov
popf
sub
lret
repz
fadds
sbb
insb
mov
xchg
sub
fidivl
icebp
lods
popa
daa
adc
arpl
fdivs
cld
dec
sub
xchg
jle
jb
sub
dec
shll
pusha
inc
pop
jb
iret
pop
push
xchg
cs
sahf
or
and
aas
int
push
movsb
push
jmp
mov
outsl
xchg
lahf
shl
and
insl
or
mov
lahf
xacquire
out
xlat
ror
xchg
xchg
std
jl
mov
pushl
pop
fists
mov
pop
loop
dec
push
adc
lret
mov
bound
or
data16
ret
test
sub
loope
outsb
lahf
mov
push
icebp
insl
out
mov
js
cmp
and
inc
or
mov
inc
popa
pop
pop
subb
or
cmovns
enter
call
xchg
iret
fidivs
rcl
out
mov
sbb
xor
cmpsb
pop
xor
cmc
xor
lods
pop
sbb
int3
hlt
sbb
ficompl
lahf
cmp
push
aad
push
cltd
rcl
jno
fcmovnu
jo
mov
push
rcrb
insl
outsl
gs
mov
std
cmp
inc
push
out
pop
in
jno
cmc
mov
cli
push
scas
sbbb
scas
stos
adcb
push
inc
mov
iret
push
aad
sub
out
dec
movsb
mov
and
sarb
lret
ljmp
pop
jmp
xchg
push
xor
dec
pop
aad
adc
add
or
sub
sub
push
shll
cmc
mov
dec
jae
mov
vmovdqa
and
inc
jno
or
ss
and
xor
add
inc
in
call
cmp
xchg
or
xchg
pop
lods
cli
lds
dec
movsl
cmp
iret
pop
ljmp
dec
xchg
dec
das
push
bsr
inc
loop
cmpl
mov
sbb
add
pop
add
mov
in
mov
pop
add
jecxz
or
insl
scas
incb
cmp
icebp
es
or
mov
or
mov
adc
mov
nop
mov
pusha
push
movsl
xor
sbb
fdivl
pop
aaa
jmp
adcl
lcall
push
add
lcall
xorl
int
sbb
jb
mov
addr16
shll
cwtl
popa
repz
jne
sub
mov
xchg
sub
add
adc
es
into
xor
pop
hlt
and
imul
sbb
vpsadbw
pop
mov
cmpsb
es
movsb
push
test
or
cmpsb
or
bound
sub
sub
cmp
inc
out
inc
xchg
inc
lret
lret
sbb
xchg
insb
mov
xchg
insb
ja
xor
pop
push
std
cmp
aam
sti
cmp
das
or
cld
mov
into
xor
cmp
imul
dec
inc
movsl
pusha
out
rolb
enter
lods
sub
mov
je
lcall
mov
enter
or
fwait
push
adc
fwait
or
dec
add
jbe
mov
fsubrl
leave
mov
ja
bound
sti
arpl
rcrb
repz
fcmovne
adc
sub
mov
lea
ss
fs
or
jnp
sbb
fiadds
mov
and
mov
jge
jp
sub
dec
out
rolb
xchg
mov
jbe
icebp
shr
pop
hlt
push
insb
mulb
adc
mov
push
mov
cmc
in
xchg
pop
inc
and
push
push
push
sbb
sbb
cmpsb
stc
fisubl
adc
filds
insb
xor
lret
into
cmp
mov
int
mov
lods
dec
pushf
or
pop
gs
ret
aas
push
pop
push
shl
out
mov
pop
inc
cli
scas
fcomps
xor
icebp
mov
sub
pop
imul
popf
flds
mov
sub
sahf
mov
jnp
rcrb
sbb
sbb
lahf
inc
sbb
cs
leave
sub
sti
insl
push
outsb
lret
movsl
dec
adc
mov
jp
mov
jg
inc
insl
pop
sbb
pop
inc
ss
dec
popf
les
xchg
ret
data16
sbb
inc
fidivrl
mov
stos
cmc
sahf
mov
outsl
sbb
sub
pop
popa
sbb
dec
mov
xlat
jecxz
movsl
int3
sahf
std
pop
cli
sahf
mov
inc
xchg
stos
sub
loope
sub
fstps
mov
xchg
mov
shrb
aam
inc
adc
sub
mov
loopne
mull
adc
pop
les
adcb
mov
mov
inc
idivl
push
inc
movsb
iret
xor
and
pop
dec
loop
inc
shll
xchg
fisttpl
push
repnz
mov
pop
jo
adc
das
mov
dec
and
je
push
sar
leave
ret
bnd
jp
les
ret
in
orl
loopne
push
cmpsb
loop
hlt
mov
jp
inc
jbe
daa
pop
xchg
jb
mov
in
cmp
jae
int3
adc
fldcw
movsl
add
hlt
sbb
sbb
lcall
hlt
mov
daa
mov
mov
out
sub
scas
outsl
or
loop
data16
lea
or
mov
cmp
adcl
shll
dec
push
or
divb
out
mov
dec
imul
in
xchg
rcl
notb
dec
stc
dec
imul
sbb
jge
shrl
out
mov
dec
pop
ret
andl
mov
movl
jmp
push
jae
iret
sub
fnsave
adc
mov
or
mov
or
dec
adc
cli
std
jo
adc
sbb
xor
cmc
sub
mov
movsb
data16
mov
loop
cmp
cs
inc
sub
addr16
xor
repnz
adc
leave
clc
push
sahf
negl
dec
test
mov
sbb
nop
mov
xchg
rorl
add
inc
cltd
jae
movsl
mov
loop
js
rcll
pop
mov
lods
xchg
pop
fld
test
dec
scas
mov
loopne
mov
sub
scas
pop
mov
int3
out
fiadds
outsb
hlt
cmp
cmp
inc
pop
leave
mov
leave
cmp
popa
popf
push
or
iret
push
add
dec
aad
xor
std
shrl
dec
bound
jno
jne
inc
mov
fistpl
fs
inc
push
inc
insb
xchg
ret
inc
or
pop
push
mov
mov
lds
mov
mov
sub
xchg
xchg
push
add
lcall
add
imul
inc
jne
in
fidivs
push
mov
in
mov
inc
jno
popa
ljmp
dec
add
fdivp
call
inc
fiadds
mov
mov
movsl
pop
sbb
mov
push
and
jge
cltd
rcrb
mov
sbb
inc
mov
jl
xor
imul
xchg
out
sub
imul
mov
fldcw
popl
inc
fisttpll
xlat
mov
inc
cmp
and
fs
jb
push
loope
cmp
out
xchg
ljmp
cld
test
xor
daa
imull
push
mov
inc
fstpl
ljmp
inc
or
ss
lea
sub
mov
bound
cmp
mov
adc
fiaddl
sti
test
jmp
arpl
sti
movsl
push
cmp
jns
cmovae
pop
mov
inc
in
or
push
or
jo
dec
movsl
ja
sub
cltd
pop
out
xchg
pop
sbb
cmp
lods
xchg
imul
stos
add
ret
popa
add
loop
or
lods
in
mov
lret
notl
rdpmc
pop
cmp
add
adc
cmpsl
sub
jg
sbb
cs
mov
mov
pop
push
sar
xor
in
sub
je
out
dec
mov
mov
push
mov
iret
popf
mov
mov
dec
add
push
pop
mov
mov
jmp
out
mov
inc
mov
imul
into
xor
push
mov
nop
jae
shlb
mov
jl
cmpsb
jne
bound
dec
mov
fcoms
sub
outsl
pop
xchg
sbb
jno
xchg
mov
test
cmp
and
xchg
cmpsl
clc
jg
fldl
dec
int
lods
aad
xor
mov
and
in
jmp
pop
in
add
test
scas
inc
jae
es
pop
inc
sub
lahf
nop
and
test
ja
jae
adc
inc
jp
out
shlb
push
or
push
push
lods
mov
add
or
divb
ljmp
push
pop
xor
lea
mov
xchg
add
shr
xchg
clc
push
imul
js
clc
ret
xchg
lea
jns
loop
call
mov
jns
sub
jns
inc
jnp
xor
or
aaa
adc
decb
lock
jbe
insl
and
ds
lea
adc
jae
arpl
lock
dec
sub
and
mov
xchg
mov
xlat
or
mov
stos
sbb
adc
inc
mov
int3
mov
sbb
push
ljmp
fstpt
inc
sub
dec
fs
jmp
stos
mov
ja
cmp
lret
fstps
test
cmp
adc
jb
or
dec
ror
xchg
xor
sub
sub
lahf
fwait
sub
push
sub
test
sub
flds
fs
xchg
in
enter
mov
movl
movl
jmp
jae
push
cmp
adc
shll
jae
adc
or
xor
sub
aas
jle
cmp
dec
adc
push
inc
js
push
push
inc
mov
lock
out
mov
pop
push
imul
jbe
sahf
inc
and
jecxz
ret
ja
mov
or
int
into
fwait
mov
fsts
sub
fistps
mov
arpl
mov
ficoml
push
adc
pop
andb
rcr
cld
or
testl
xchg
mov
mov
mov
pop
das
cld
enter
call
jle
dec
in
pop
jo
jno
in
pop
rcr
pop
faddp
xchg
sti
test
xchg
lret
add
push
fidivrs
rol
push
es
jnp
mov
push
fldl
out
cmp
lahf
decb
sbb
cmp
mov
pop
ficoml
dec
mov
das
mov
lods
add
lcall
xor
and
mov
test
je
sbb
mov
jns
jmp
punpckldq
mov
cmp
pop
je
adcb
mov
xlat
divb
shll
movsb
inc
fwait
or
mov
cli
jno
sbb
call
fimuls
out
test
inc
xor
dec
hlt
iret
mov
adc
outsb
jge
and
push
aas
gs
push
cld
pop
mov
outsb
in
ds
fcoml
std
xchg
insb
mov
dec
cmc
insb
jae
lahf
mov
cltd
pop
in
sbb
stc
mov
jl
or
sub
aam
and
mov
or
leave
push
adc
popf
xchg
cmpsb
xchg
xchg
jmp
or
inc
jecxz
xchg
xchg
js
loopne
iret
adc
lahf
push
mov
cli
xor
or
sbb
cs
movsl
jge
in
lahf
mov
fwait
sbb
mov
xor
jbe
iret
xor
or
iret
rcll
ret
push
ret
mov
adc
hlt
popa
scas
outsb
dec
insb
adc
mov
dec
lds
cmp
xchg
jb
loopne
xor
std
pushf
xchg
mov
push
mov
repz
mov
lret
push
fwait
jmp
adc
and
inc
fistpll
fisubrl
insl
mov
jle
insb
jo
cmp
pop
icebp
xor
std
dec
xor
pop
es
mov
sbb
and
jae
in
xchg
pushl
push
loope
rcrl
lret
out
aad
es
sbbb
outsl
loop
mov
dec
pop
mov
repz
pop
jno
jbe
xchg
fimull
push
lret
mov
fucomi
xor
addr16
inc
push
int
shlb
fdivs
dec
push
lods
push
pusha
push
loopne
inc
into
xchg
stos
sahf
adc
dec
sbb
mov
hlt
pop
xor
xchg
cmp
arpl
cli
cmove
into
xchg
or
xchg
lds
pop
mov
stos
in
push
sub
mov
lods
test
test
mov
ja
inc
lods
sti
arpl
jae
cmc
rdtsc
xor
push
rcl
mov
lcall
dec
inc
movaps
aas
ror
mov
jmp
fcmovb
arpl
mov
pop
add
jo
dec
and
or
sbb
shrb
imul
or
popf
pusha
jmp
lahf
inc
int3
ds
lcall
bound
fimuls
jne
int
xor
and
gs
xor
daa
cltd
add
sub
cmp
cmpsb
loopne
inc
push
loop
fs
and
push
pop
or
adc
xor
cmp
lret
out
das
adc
psubd
loop
push
inc
dec
xchg
mov
pushf
cmpsl
bound
pop
shl
fidivl
out
xchg
jno
leave
push
push
sbb
and
add
xchg
ret
adc
mov
xor
xchg
jmp
fidivl
jb
outsl
xor
xlat
int
or
add
scas
movsl
leave
mov
arpl
lods
shlb
into
mov
in
out
addr16
xchg
inc
xchg
add
add
sarb
xlat
ds
xchg
subb
scas
fnsave
rol
cmpsb
cmc
jnp
nop
xchg
adc
xlat
in
icebp
out
idivl
sbb
inc
cld
movl
movl
xor
movl
jmp
sub
fistpl
mov
stc
push
or
mov
or
test
sbb
add
mov
mov
mov
and
mov
mov
stc
aaa
repnz
jbe
inc
mov
pusha
cmp
push
aaa
xchg
push
mov
or
in
rcr
mov
cwtl
cltd
loop
insb
or
sub
xor
jo
mov
inc
fisubl
push
data16
insl
pop
fistpll
out
test
jnp
mov
div
shlb
mov
inc
pop
jno
int3
add
jb
pop
sub
lahf
lahf
fs
hlt
movsl
xor
inc
idivb
cmp
or
movsl
popa
jne
xor
ficoms
sti
cmc
imul
std
adc
adc
fwait
in
pusha
add
dec
testl
mov
mov
nop
or
cmp
mov
fsubp
dec
dec
out
iret
or
lret
lret
jp
sub
mov
ffreep
aam
aaa
int3
jle
cld
into
inc
jg
sub
inc
mov
cmp
add
cmp
mov
call
pusha
inc
cltd
pop
xlat
jb
addb
icebp
aam
xor
or
mov
fwait
push
mov
adc
mov
dec
inc
in
inc
subl
jg
test
loope
mov
pop
fdiv
ds
adc
aas
and
mov
lcall
cltd
dec
and
sub
out
repnz
jnp
insl
ja
add
call
pusha
sar
mov
push
stos
mov
jae
test
jnp
pop
nop
pusha
popf
rcll
push
repz
movsb
sahf
jecxz
ds
add
in
lret
aaa
xor
stos
outsl
jp
insl
iret
aad
call
xchg
mov
sbb
shll
sarl
mov
sbb
bound
xor
cld
nop
inc
test
aad
xchg
cld
jmp
repz
arpl
imul
insl
stc
cmp
std
fwait
lret
sbb
nop
loop
mov
jns
inc
ss
mov
bound
push
xchg
stc
scas
inc
adc
inc
fbld
psubq
adc
dec
call
jl
inc
lret
stos
hlt
aad
insb
sub
sbb
aad
and
xor
xorl
hlt
adc
mov
lds
jno
lds
fcoms
aam
sub
inc
cmp
and
dec
sahf
mov
push
hlt
out
ds
rdmsr
cmpsl
inc
insb
fmuls
mov
jno
and
and
sbb
mov
movb
movsl
xchg
fdivr
movsl
push
xchg
pop
insl
loopne
js
movsb
xlat
das
or
jmp
fnstsw
sahf
das
mov
adc
add
xchg
ret
into
popf
int
mov
sub
aas
clc
rcr
sub
mov
push
jmp
movsb
mov
sbb
nop
dec
out
or
jb
fdivrs
xchg
lahf
sbb
jmp
sahf
xchg
and
dec
sti
pop
xorl
adc
cmp
inc
mov
push
pop
lea
out
dec
push
pushf
in
and
rcr
inc
pop
mov
test
dec
outsl
std
enter
lcall
dec
or
or
push
ds
lea
sub
outsb
orb
les
jbe
imul
xchg
inc
jle
push
test
pop
mov
hlt
andb
xchg
mov
and
and
test
lods
or
or
xor
or
xchg
xchg
sbb
out
arpl
lea
test
xchg
fucomp
scas
daa
add
add
rol
sbb
push
push
mov
xchg
mov
and
xchg
mov
mov
rcrb
js
adc
adc
movl
mov
jbe
je
outsb
xchg
inc
stos
mov
orl
or
lods
outsl
adc
lahf
ja
jg
les
aad
fldenv
enter
adc
jno
mov
insl
dec
pop
push
inc
xor
cmpsb
and
je
cmp
cmp
xchg
aad
push
cmp
sahf
add
mov
imul
outsl
stos
ljmp
jg
test
or
cltd
mov
mov
mov
xor
loope
mov
inc
fmuls
pop
add
div
mov
xor
mov
div
mov
xor
div
jmp
enter
js
enter
mov
rcrb
jne
push
or
fimuls
or
enter
into
or
cmp
mov
out
jp
aam
call
mov
out
test
sbb
les
fsubrl
gs
imul
xlat
testb
dec
lds
arpl
hlt
mov
cltd
pusha
and
andl
mov
into
scas
test
ffree
xor
int3
stc
scas
sbb
push
loope
push
and
sub
cmp
jmp
aas
dec
outsb
lock
js
out
xor
rcrl
add
inc
push
adc
ficompl
xchg
push
adc
and
ret
hlt
or
inc
addl
mov
pop
cld
aaa
pop
or
stos
inc
test
lods
pop
jg
fdivrs
jo
scas
pop
xchg
mov
mov
insl
sbb
xchg
cmp
and
lret
rol
xchg
mov
daa
ret
adc
mov
sar
ljmp
mov
aad
cli
popa
lock
mov
andb
leave
je
cltd
mov
into
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
or
xor
or
xor
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
push
pop
sub
mov
mov
sub
mov
add
mov
mov
mov
shl
xor
xor
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
push
adc
xor
xor
shrd
or
shr
or
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
xor
push
push
sub
push
adc
mov
add
mov
not
shrd
cmpl
mov
mov
mov
jmp
mov
jbe
pushl
push
call
orl
mov
and
or
sub
not
shr
mov
mov
adc
xor
movzbl
adc
mov
cmpl
mov
movl
jmp
movl
movl
jb
push
pushl
call
decl
orl
and
andl
xor
add
xor
cmpl
movl
mov
jmp
mov
mov
jae
pushl
push
push
push
pushl
push
call
adc
mov
adc
mov
and
add
xor
or
mov
xorl
mov
shl
cmpl
not
mov
movl
mov
jmp
mov
jge
push
call
sbb
sbb
inc
addl
not
mov
shrd
cmpl
mov
mov
jmp
movzwl
jle
push
pushl
call
xorl
andl
mov
sbb
or
xor
adcl
xor
xor
shr
mov
and
mov
xor
or
orl
mov
cmpl
movl
mov
movl
jmp
movl
jl
push
call
mov
xor
or
adc
adcl
or
cmpl
movl
movl
mov
jmp
mov
jg
push
push
push
push
push
pushl
push
call
mov
sub
mov
subl
and
mov
sub
or
and
mov
xor
or
sub
or
mov
cmpl
movl
mov
jmp
movl
movl
jg
pushl
push
push
call
add
andl
add
sbb
add
xor
mov
cmpl
movzbl
not
movzwl
movl
jmp
movl
jbe
push
push
push
call
sub
or
mov
or
sub
movl
xor
sbb
mov
mov
adc
mov
mov
mov
adc
mov
adc
mov
mov
add
mov
mov
mov
shl
cmpl
mov
not
jmp
movl
jle
pushl
call
and
sbb
mov
or
sub
xor
or
shld
sub
shl
and
mov
cmpl
mov
mov
movzwl
mov
jmp
movl
movl
jl
push
push
call
sbb
or
mov
and
sbb
mov
mov
sub
mov
mov
negl
mov
subl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
mov
mov
addl
xor
orl
shld
shl
andl
xor
mov
addl
xor
movl
mov
movl
cmp
jne
movl
cmp
movl
je
mov
adcl
mov
movzwl
and
mov
shl
movl
mov
sbbl
xor
shr
incl
or
mov
sbb
mov
sub
mov
mov
or
mov
sub
mov
sbb
push
cmpl
movl
movl
movl
jmp
mov
movl
jne
call
xorl
incl
subl
sbbl
andl
andl
pop
sub
mov
add
adcl
mov
mov
mov
add
lea
mov
xor
mov
sbb
mov
sbbl
xor
xorl
shr
shl
or
mov
movl
mov
mov
subl
xor
shr
shl
adcl
or
push
lea
push
lea
push
call
mov
mov
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
or
mov
mov
jne
mov
mul
ret
push
add
mul
mov
xor
mov
addl
mull
orl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
mov
inc
push
call
pushl
call
test
jg
movl
addl
movl
movl
movl
movl
movl
movl
cmpl
mov
not
movl
mov
jmp
movl
ja
pushl
push
push
call
sub
mov
sub
mov
inc
adc
movzwl
and
sub
mov
mov
mov
cmpl
not
movl
jmp
movl
jne
push
pushl
call
inc
mov
adc
mov
sbbl
movl
adcl
xor
mov
adcl
or
andl
or
subl
add
mov
mov
adc
cmpl
not
mov
mov
movl
jmp
movl
jbe
push
call
xor
inc
sbb
sbbl
inc
xor
xor
mov
add
mov
mov
adc
and
mov
movl
movzbl
add
mov
movl
movl
and
movl
mov
subl
mov
mov
mov
sub
or
mov
mov
andl
push
push
or
or
push
subl
push
call
push
andl
push
push
push
call
mov
mov
mov
movl
cmp
movl
jb
ja
cmp
jbe
cmpl
mov
movl
mov
jmp
movl
jge
pushl
push
pushl
pushl
call
or
sbb
adc
adc
orl
adc
movl
movzbl
xor
movl
mov
movl
movl
or
movl
add
movl
cmpl
mov
movl
mov
movl
jmp
movl
not
jne
push
pushl
call
dec
sbb
adc
adc
notl
add
neg
and
movl
mov
adc
movl
xorl
movl
sub
mov
add
movl
movl
cmpl
not
movzwl
mov
jmp
mov
mov
jbe
push
push
pushl
call
sbbl
and
or
sbb
incl
adcl
movl
mov
mov
or
mov
sbbl
or
orl
sub
sbbl
and
mov
or
xor
add
pushl
mov
sbbl
mov
adcl
add
adcl
xor
div
mov
pushl
adcl
xor
movl
pushl
andl
pushl
or
xorl
mov
andl
or
sbbl
and
sbb
mov
sub
mov
xorl
pushl
mov
or
mov
mov
lea
xor
mov
orl
xor
or
mov
addl
or
pushl
xorl
mov
mov
subl
and
sbbl
div
cmpl
notl
notl
jmp
movl
jge
push
push
pushl
push
push
push
call
adc
sub
xor
adc
addl
sub
mov
movl
add
xor
not
mov
sub
dec
mov
addl
pushl
shr
pushl
pushl
incl
call
add
movl
sub
movl
sbb
mov
mov
andl
xor
div
subl
or
xor
andl
pushl
call
sbb
pushl
xorl
mov
xor
xor
mov
sub
xor
pushl
movl
cmpl
mov
mov
mov
jmp
not
mov
je
call
sbb
add
sub
sbb
adcl
pushl
movl
sbb
mov
mov
andl
or
sub
cmpl
mov
mov
movl
jmp
mov
movl
je
push
call
movzwl
and
mov
and
movzwl
add
xorl
movl
mov
xor
div
orl
xor
orl
pushl
pushl
andl
call
mov
sub
mov
movl
cmpl
mov
movl
mov
jmp
mov
jl
push
call
adc
addl
movzbl
sub
and
add
adc
movl
cmpl
movl
mov
movl
movl
jmp
movl
mov
jb
pushl
push
push
push
pushl
push
call
xor
add
adc
mov
andl
sbb
sub
or
sbb
xor
movl
add
movl
movl
xorl
movl
subl
movl
mov
xorl
mov
sub
sbbl
and
dec
and
add
mov
orl
sub
cmpl
movl
movl
movl
movl
jmp
mov
mov
jbe
push
push
pushl
push
push
call
xorl
adcl
orl
sbb
adcl
sbbl
mov
adc
mov
pushl
sub
mov
mov
lea
push
cmpl
mov
mov
jmp
movl
je
push
push
push
call
adcl
xor
movzbl
or
negl
pop
andl
xor
div
mov
sub
pushl
mov
mov
adc
pushl
movzbl
xor
mov
xorl
pushl
subl
and
sbb
pushl
addl
mov
pushl
xor
and
pushl
movl
mov
sub
decl
pushl
subl
call
mov
mov
sub
and
movl
cmpl
movzbl
mov
jmp
movl
jle
call
add
or
xor
xor
add
orl
andl
not
sbb
movl
cmpl
movzwl
movl
movl
mov
jmp
mov
mov
jae
push
push
pushl
push
pushl
push
push
call
and
sbb
sub
adc
sbbl
sbb
adc
movl
add
movl
mov
mov
adcl
sub
neg
mov
and
subl
mov
adcl
xor
shr
imul
decl
pushl
subl
call
dec
cmp
movl
jne
movl
movl
mov
addl
mov
adcl
movl
sbbl
mov
adcl
call
lea
cmpl
mov
movl
mov
jmp
mov
mov
jle
pushl
call
adc
subl
adc
add
adc
mov
lea
sub
mov
and
mov
dec
mov
sbbl
mov
and
mov
addl
xor
add
shl
shr
xor
xor
mov
sub
xor
or
adc
mov
cmpl
mov
not
mov
mov
jmp
movl
movl
jbe
push
push
push
call
sub
or
sbb
xor
or
sub
mov
mov
mov
mov
cmpl
movl
mov
jmp
mov
mov
jle
push
push
call
sub
adc
mov
xor
xor
sub
xor
xor
not
andl
add
mov
mov
shrd
adcl
shr
mov
cmpl
mov
mov
not
jmp
movl
movl
jg
pushl
call
inc
adc
sub
and
inc
mov
orl
xor
xor
or
sbb
mov
orl
push
andl
pushl
adcl
lea
push
andl
shl
orl
call
sbbl
lea
orl
push
mov
addl
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
subl
push
push
and
movl
movl
cmpl
mov
mov
jmp
notl
mov
jle
push
call
add
adc
adcl
sbb
or
sbb
xor
xor
sbb
movl
movzbl
adc
mov
mov
cmpl
mov
mov
movl
jmp
mov
mov
jb
pushl
pushl
call
xorl
addl
andl
addl
incl
mov
andl
xor
subl
div
imul
adc
mov
subl
xor
and
sub
mov
subl
xor
div
mov
mov
adc
sub
mov
andl
movl
movl
movl
mov
add
add
xor
mov
mov
and
xor
sub
imul
mov
and
sub
notl
mov
movl
cmpl
notl
mov
movl
jmp
movl
mov
jbe
push
push
pushl
call
adc
movzbl
adc
xor
xor
or
mov
sub
or
not
movl
movl
movl
cmpl
mov
movl
notl
movl
jmp
not
movzwl
jg
pushl
push
push
pushl
call
dec
or
mov
mov
sub
sub
movl
adc
adc
mov
imul
sub
mov
cmpl
movl
movl
jmp
movl
jb
push
push
call
or
adcl
xor
and
xor
add
add
cmpl
notl
mov
mov
jmp
movl
movl
jne
call
xor
sbb
andl
mov
mov
or
sbb
and
add
imul
sbb
imul
mov
and
or
negl
mov
addl
xor
mov
mov
and
mov
orl
mov
lea
mov
inc
movl
sbbl
movl
xor
movl
and
mov
cmpl
not
mov
mov
jmp
mov
jae
push
push
pushl
call
movl
movzbl
add
xor
sbbl
inc
xor
orl
mov
movl
or
cmpl
movl
mov
mov
jmp
mov
jge
push
pushl
push
push
call
mov
sbb
mov
dec
negl
add
adcl
adc
xor
add
cmpl
mov
movl
not
mov
jmp
movl
movl
jg
pushl
pushl
call
andl
and
sbb
xor
add
sbb
mov
mov
or
add
xor
or
mov
sub
movl
movl
movl
cmpl
movl
not
jmp
mov
mov
jae
push
push
pushl
call
mov
mov
add
orl
add
add
and
not
movzbl
xor
mov
add
cmpl
notl
movl
mov
jmp
movl
movl
jbe
pushl
pushl
push
push
push
pushl
call
add
add
subl
xor
not
andl
adcl
mov
sbbl
sub
mov
addl
lea
cmpl
movzbl
movl
mov
jmp
movl
jge
push
push
push
push
push
call
sbbl
xorl
add
add
add
mov
sub
or
xor
sub
movl
mov
adc
movl
xor
movl
mov
or
add
adcl
imul
dec
mov
addl
imul
adc
xor
mov
movl
div
cmpl
movl
mov
movl
jmp
movl
mov
je
pushl
call
sbb
addl
xor
addl
xorl
mov
sbb
sub
mov
and
sub
xor
mov
movl
cmpl
notl
mov
jmp
mov
mov
je
pushl
push
push
call
xor
adc
sbb
or
sub
movl
movl
mov
add
mov
xor
div
imul
add
mov
subl
xor
xor
mov
sub
mov
div
xor
orl
mov
movl
or
movl
cmpl
mov
mov
notl
mov
jmp
mov
ja
push
pushl
pushl
pushl
call
and
adc
movzbl
or
addl
mov
or
mov
and
movl
mov
or
mov
orl
sub
shr
andl
sub
mov
imul
mov
andl
and
add
mov
orl
sub
xor
xor
add
mov
mov
adc
movl
orl
movl
xor
mov
movzbl
xor
or
xor
mov
or
or
sub
xor
xor
xor
mov
mov
xorl
movl
sub
movl
add
movl
or
movl
and
movl
movl
cmpl
movl
mov
movl
mov
jmp
movl
mov
jbe
push
pushl
pushl
push
call
mov
or
andl
xorl
andl
mov
mov
add
cmpl
movzbl
notl
jmp
mov
jg
call
xor
or
mov
adc
sbb
xor
sbb
and
or
movl
mov
add
mov
subl
sub
not
mov
addl
imul
or
imul
mov
andl
or
mov
lea
push
call
mov
xor
xor
sbb
mov
mov
cmpl
mov
mov
jmp
movl
jge
pushl
call
xor
or
mov
sub
movzbl
sub
addl
mov
mov
and
movl
movzwl
xor
mov
add
imul
add
and
or
sub
mov
or
mov
xor
add
mov
addl
div
xor
cmpl
movl
mov
mov
jmp
movl
not
jl
push
call
mov
mov
sbb
add
adc
not
sub
add
add
mov
movl
mov
add
movl
xor
movl
movzwl
and
mov
movl
sub
movl
adc
movl
movl
add
movl
mov
and
movl
movl
and
movl
orl
movl
adc
mov
andl
mov
cmpl
notl
mov
movl
jmp
movl
movl
jl
pushl
push
push
push
pushl
pushl
call
orl
sbbl
sub
adc
add
adc
mov
sbb
and
add
sub
mov
xor
xor
sub
xor
sub
cmpl
mov
movl
not
jmp
mov
ja
pushl
push
pushl
push
push
push
push
call
not
xor
xor
or
mov
sub
or
sub
adc
andl
or
imul
sub
mov
incl
lea
mov
mov
mov
xor
mov
subl
mov
sub
mov
sbb
xor
or
add
mov
mov
xor
lea
add
and
mov
sub
adc
add
mov
cmpl
mov
notl
movl
jmp
movl
mov
jne
call
mov
mov
sub
or
sbb
xor
adc
andl
and
movl
cmpl
mov
mov
mov
mov
jmp
movl
mov
jge
pushl
push
push
call
mov
mov
or
subl
sbbl
xor
add
adc
movzwl
sbb
mov
movl
cmpl
movzwl
mov
movzbl
mov
jmp
movzbl
movl
jge
push
push
call
and
sub
mov
adc
adc
xor
movl
movl
mov
sbb
mov
sbb
mov
adcl
xor
adcl
xor
mov
call
mov
adc
mov
or
mov
and
mov
addl
mov
xorl
xor
subl
xor
adcl
mov
call
or
mov
xor
or
add
mov
mov
add
mov
orl
xor
notl
xor
andl
mov
adcl
call
subl
mov
movzwl
add
mov
andl
mov
movzwl
adc
mov
mov
xor
adcl
xor
adcl
mov
subl
mov
or
mov
xorl
mov
andl
mov
adcl
call
mov
or
cmpl
notl
movl
movl
jmp
notl
mov
jae
push
call
xorl
adcl
incl
xorl
addl
sbbl
orl
mov
adcl
or
adcl
push
push
andl
push
subl
push
xorl
call
mov
movl
cmp
jne
movzwl
sbb
mov
adc
mov
addl
xor
sbbl
xor
mov
incl
call
mov
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
call
xor
add
sbb
not
add
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
mov
mov
add
push
xor
push
negl
mov
or
jne
mov
cmpl
movl
mov
mov
movzbl
jmp
mov
jbe
push
call
xorl
movzbl
sbb
movzwl
and
subl
xor
sub
or
mov
cmpl
mov
mov
movl
jmp
mov
notl
jle
push
pushl
call
sbb
decl
addl
sbbl
adcl
or
and
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
cmpl
movl
mov
movl
jmp
movl
movl
ja
pushl
push
pushl
call
xor
or
sbbl
mov
and
mov
xor
sbb
mov
xor
xor
sub
and
add
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
orl
shld
movl
shl
ret
dec
mov
addl
xor
and
shl
ret
xor
xor
ret
