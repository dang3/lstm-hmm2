push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
nop
add
hlt
adc
adc
push
clc
adc
std
mov
mov
mov
lea
ret
fcompl
int3
or
adc
jo
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fcom
or
fucomi
les
mov
sbb
jns
and
xor
mov
mov
lcall
rorl
xchg
lods
lods
ret
in
loop
xor
jge
roll
jo
cmp
dec
ret
test
push
add
loope
adc
imul
movsl
and
cmp
push
bound
out
jnp
lock
in
dec
push
sahf
or
cli
sbb
outsb
inc
mov
in
cmp
mov
cwtl
dec
fcmovb
pop
add
jge
add
adc
das
adc
lds
sub
lock
cmpl
into
pop
sahf
fstpt
push
and
sub
scas
and
scas
jl
stc
aad
xchg
fldt
lods
pop
das
repz
iret
jge
js
fpatan
out
insl
jbe
xchg
cmc
test
faddl
scas
mov
scas
out
or
mov
ds
cmpsl
pop
vsqrtpd
pop
mov
push
pop
idivb
mov
jae
add
ret
lods
and
cltd
sbb
mov
stc
js
imul
pushf
sbb
rclb
jl
rorl
xor
ret
icebp
cwtl
aad
scas
sub
mov
je
mov
xchg
lea
lret
mov
insl
adc
pop
sbb
and
hlt
xorl
mov
in
pop
hlt
data16
xchg
roll
stc
rclb
psubq
add
or
test
jnp
je
xchg
lret
negl
dec
mov
mov
aad
mov
mov
decl
testb
push
stc
xchg
test
ret
cmc
inc
xor
stc
ret
inc
movb
movsb
jl
mov
cltd
bound
push
clc
inc
push
mov
out
inc
dec
add
push
pushf
bound
xor
aam
ja
pop
sub
or
xchg
xor
xor
cmp
push
push
mov
pop
jmp
sub
jge
stos
ret
lds
es
int
sub
int3
add
fldl
fdivs
aad
fistpll
pop
imul
out
inc
fisttpll
jbe
adc
daa
sub
shll
adc
gs
mov
push
pop
mov
out
lods
cmp
ret
push
clc
dec
lahf
or
pop
test
jne
test
ret
aad
xchg
lret
sbbb
xlat
mov
test
mov
pusha
ret
xchg
mov
adc
in
and
in
push
shlb
sbb
mov
sbb
je
fsub
push
popa
xor
inc
aam
dec
sahf
outsb
out
mov
add
lea
jmp
adc
or
popa
jns
test
aas
jmp
inc
push
ret
mov
cmp
jns
test
push
pop
add
repnz
xor
jo
addr16
cmp
jo
mov
pop
jo
insl
dec
jne
addr16
es
mov
adc
add
inc
mov
iret
mov
mov
mov
sbb
stc
aaa
pop
sub
ja
jns
rclb
jl
sbb
pop
aam
and
nop
cmc
cmp
xor
lds
lea
jecxz
scas
scas
mov
repnz
adc
pop
imul
mov
pushf
dec
dec
out
aaa
ficoms
lods
sbb
into
xchg
cmp
or
mov
insl
push
js
and
dec
mov
fisubrs
jbe
popa
mov
and
icebp
lahf
sti
gs
sbb
jbe
jp
and
mov
sbb
xor
add
lcall
fbld
in
aaa
rcl
in
adc
pop
test
sub
out
int
jne
mov
mov
loop
xchg
dec
sbb
insb
or
mov
xor
fsts
jg
addr16
adc
add
sbb
mov
ret
xor
mov
imul
mov
mov
ljmp
js
mov
lret
or
inc
ret
jl
or
lea
add
popf
or
scas
sahf
mov
int3
movsb
mov
push
in
fcomps
cmpsl
sub
add
xlat
shlb
stc
pop
xchg
mov
loopne
sub
pop
ja
mov
mov
and
push
dec
stos
xchg
push
enter
pusha
xor
neg
popa
push
pop
and
fdivl
popf
imul
mov
jle
mov
lret
loop
xchg
add
clc
popf
inc
pop
inc
ss
ret
aad
mov
mov
jae
inc
scas
adc
lods
imul
js
xor
jg
fwait
cmp
mov
subb
cwtl
repz
nop
popf
jle
push
in
out
cli
dec
jp
int
and
outsl
lods
jmp
pusha
dec
xor
enter
xor
stos
sub
sub
jp
push
sahf
mov
dec
mov
test
repz
stos
push
xchg
inc
sbb
pusha
inc
aaa
inc
adc
xor
daa
arpl
mov
jne
aam
dec
aad
arpl
loopne
jne
imul
lcall
sub
xor
out
test
pop
mov
xor
xchg
fs
inc
enter
test
cmpsl
xlat
fst
mov
lret
stos
jne
clc
pop
gs
jno
jae
xchg
fs
lock
mov
and
mov
add
ret
adc
adc
push
test
in
lods
jl
das
or
mov
stos
into
jo
pop
pushf
jne
kmovd
nop
filds
dec
sti
push
jne
add
lahf
and
in
iret
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
andb
adc
clc
adc
mov
fdivrs
cmpsb
mov
ja
cmp
pop
ja
hlt
cltd
cli
jae
jbe
loop
adc
xchg
push
mov
or
cmc
loopne
push
push
sub
stos
dec
fs
sar
fwait
and
stos
movl
adc
aad
jo
pop
sarl
mov
push
adcb
cmc
jno
outsl
push
pop
cltd
cmc
fsubrs
pminub
cmp
jae
fidivrl
jecxz
loope
mov
fwait
mov
jo
loopne
xchg
imul
mov
jle
lret
pusha
jg
mov
push
call
inc
lahf
pop
hlt
add
dec
adc
imul
push
fadds
in
sub
pop
pop
add
loop
popa
leave
fs
dec
and
stc
fdiv
jecxz
mov
or
push
ljmp
sub
mov
flds
jb
bound
jae
out
test
push
loopne
mov
jg
int
or
test
add
mov
std
push
les
or
hlt
mov
pop
in
xor
cmp
lds
out
xchg
sub
cmc
xor
ficompl
jne
add
add
adc
stos
movsl
stc
jecxz
cs
cmpsl
add
repnz
sbb
in
jmp
outsb
inc
pop
fimull
adc
and
sub
pop
and
sti
shlb
lahf
aaa
paddusw
cmpsl
adc
test
std
pop
adc
pop
or
push
push
mov
dec
shll
pop
dec
int3
dec
mov
shl
and
pop
popf
and
aad
fimuls
xor
mov
sahf
mov
les
add
xchg
pop
dec
cmp
add
imul
int3
int3
mov
sub
movsl
aam
lret
decl
xlat
mov
adc
andl
scas
test
jmp
aaa
push
mov
jb
mov
notl
mov
push
add
cmp
push
dec
cwtl
xchg
sar
fmuls
dec
and
scas
decl
jne
mov
and
xor
test
mov
lahf
jbe
lahf
sbb
in
cwtl
xor
popa
jno
xchg
mov
push
and
inc
into
shlb
repz
push
rorb
sbb
je
add
jp
add
dec
cmp
dec
inc
pushf
mov
mov
sbb
cmc
push
in
mov
push
das
callw
movl
fiadds
dec
sahf
ljmp
test
xchg
lret
mov
fcomip
not
fistpll
push
xor
inc
mov
ss
out
stos
aam
xlat
jnp
sub
movsb
imul
and
test
scas
pop
int3
cli
addr16
pop
mov
xchg
push
jne
call
jecxz
jecxz
stos
xor
mov
push
xchg
and
add
leave
popa
cs
lock
and
addr16
or
push
push
inc
leave
fsubrs
mov
or
daa
insb
add
jl
std
mov
jns
xor
fdiv
cld
fstps
pushf
cmpl
xchg
xlat
imul
movsb
subl
dec
jle
push
adc
fisttpl
loope
jle
xor
jns
adc
insl
popa
rcrl
jecxz
pmaddwd
dec
shl
and
and
adcl
lds
scas
sarb
sbb
mov
orb
rorb
jbe
pop
cli
in
dec
js
pop
mov
pop
add
insb
inc
inc
lret
xchg
in
push
fcom
fsts
outsb
in
jmp
sbb
xlat
mov
push
mov
or
push
jne
dec
jge
fmuls
clc
jne
xor
xor
fadd
invd
data16
pop
aaa
push
push
pop
rol
mov
cmp
pop
call
testl
sti
loope
icebp
pop
pushf
imull
bound
push
push
cwtl
cld
cld
lret
xorl
movsl
mov
add
stos
imul
les
push
loope
lods
sbb
adc
mov
push
cld
add
inc
popf
or
jb
push
insl
xchg
and
iret
clc
sbb
mov
mov
in
mov
mov
loope
cmc
andb
and
pushf
sub
xor
js
cmc
mov
push
fisttpll
jae
std
cmp
mov
add
scas
mov
cmp
bound
mov
mov
add
lods
mov
cs
mov
xor
lcall
pop
in
stos
daa
repnz
lret
dec
loop
jae
lret
sbb
xchg
sub
daa
sub
fwait
jle
loop
push
mov
adc
pop
xor
rcl
out
push
pop
xchg
pop
lods
ljmp
cmc
mov
cmp
pusha
adc
rclb
out
loope
or
push
scas
xchg
shrb
movsb
ret
jecxz
inc
lods
into
hlt
cmp
outsl
xchg
rorl
pop
mov
nop
shlb
dec
mov
in
push
pop
jnp
mov
es
inc
and
adc
xchg
scas
adc
roll
jae
fistps
cmpsl
adc
jbe
jl
jnp
cmp
in
xor
or
adc
mov
out
lret
lret
inc
cltd
mov
xchg
inc
mov
decb
fcompl
cli
cmpsl
sbbb
lahf
arpl
call
mov
sbb
in
xchg
mov
mov
ja
add
fdiv
int
mov
gs
push
sbb
sbb
mov
out
xlat
xchg
cmpsb
cmp
lcall
fadds
adc
cli
icebp
aad
bswap
movsb
lret
push
lods
pop
in
push
push
pop
out
call
daa
xlat
sub
iret
jno
xchg
mov
xchg
dec
fprem1
popl
loopne
pop
out
xchg
lret
mov
loopne
push
push
test
aaa
jle
add
movsb
jne
mov
movl
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
call
adc
push
clc
adc
or
jge
not
xchg
iret
and
cmpsb
pop
jbe
jnp
divb
mov
jmp
stos
jnp
adc
cmpsl
xchg
call
into
cltd
cmpsb
cmp
lods
sbb
aad
cmpsl
adc
cmp
and
cld
and
jno
insl
or
cmp
int
enter
inc
dec
sub
test
pop
mov
push
insb
or
cmp
repz
dec
in
adc
mov
mov
jecxz
and
inc
push
inc
test
fwait
sub
shrd
insb
je
rcl
in
xor
rorl
jne
push
adc
and
and
clc
push
es
loope
out
jne
and
inc
sbb
pusha
rcrl
adc
cltd
mov
ret
enter
xchg
mov
mov
mov
inc
cmp
mov
insl
add
scas
icebp
jle
cltd
dec
iret
pop
xor
rcrb
insb
adc
cmp
xchg
movsb
mov
outsl
sbb
cmc
lcall
std
push
cmp
push
in
jbe
pop
xchg
fs
stos
repnz
sar
int
mov
jb
pop
test
mov
sbb
loope
inc
ljmp
fidivl
aaa
and
push
mov
loope
dec
out
add
pop
aas
push
xor
jp
xchg
push
daa
les
push
ret
out
dec
jge
push
push
clc
int
jnp
mov
out
pop
hlt
mov
inc
lahf
sub
nop
lcall
adc
mov
stc
add
divl
movsb
insl
std
mov
xor
cwtl
addb
jnp
push
rcrb
dec
cmpsl
mov
jecxz
aam
jg
je
mov
push
aaa
stos
or
rcll
mov
data16
lods
stos
popf
mov
loop
fs
push
mov
dec
jl
out
test
jmp
fadds
add
or
mov
xor
jbe
iret
ret
rcll
mov
cmp
sub
mov
enter
insb
dec
jp
and
rorl
xor
cmpsl
mov
inc
mov
pop
mov
xchg
out
xchg
sub
imul
sar
sahf
mov
out
push
in
lds
cwtl
repnz
ljmp
lods
adcl
sub
test
ss
fidivrs
fstpt
loopne
push
test
jns
mov
cmp
ss
xchg
mov
push
ret
imul
cmpsl
xor
and
cli
pop
rorb
repnz
repnz
xchg
test
sub
call
loop
lahf
mov
inc
clc
push
dec
mov
leave
jp
xchg
leave
dec
fsts
lea
pop
and
rcll
out
adc
adc
add
add
sahf
inc
rorb
cli
sub
push
pop
rcl
and
scas
testl
icebp
dec
mov
fdivs
push
cmp
push
xchg
xchg
dec
pop
jo
cltd
or
sub
mov
push
shll
sbb
push
movsl
cmp
jns
pop
adc
add
loopne
add
lds
jle
addr16
scas
ret
outsl
pop
cmp
mov
mov
mov
sub
pop
add
stos
cwtl
idivb
jle
sub
fildl
pop
and
fwait
xor
mov
or
pop
inc
push
dec
arpl
movb
fmul
loope
or
pop
cmp
sub
xchg
add
jns
setg
cmp
add
icebp
sub
fsubp
xor
lods
dec
inc
int3
iret
outsl
pushl
cmp
lret
mov
jae
mov
inc
sub
add
xor
cmp
xchg
mov
mov
push
icebp
imul
dec
push
test
and
mov
hlt
imul
add
notl
adc
inc
scas
scas
fdiv
push
mov
mov
out
test
into
or
cmpsl
mov
iret
pop
or
mov
jle
and
cmp
test
outsb
pop
nop
cwtd
pop
xchg
stc
insl
add
add
or
mov
add
push
and
or
push
sub
dec
rolb
inc
or
mov
dec
jb
das
pop
loop
insl
lods
jp
bound
xchg
adc
xchg
mov
sub
shrl
popa
jbe
fmull
es
leave
sbb
xchg
add
and
stos
outsb
shl
pop
fsubrs
aas
push
mov
int
or
and
jo
arpl
not
rorb
push
repz
jae
xchg
sarb
xor
jmp
negb
int
and
in
push
call
or
pop
jl
inc
rclb
sub
mov
cmp
mov
cmpl
inc
into
ret
in
insb
pop
adc
dec
jne
bound
cli
std
and
popa
cmp
add
movsb
add
je
lret
jnp
rclb
pop
repz
sub
jg
push
jns
inc
mov
jae
jmp
push
sbb
jbe
mov
xchg
idiv
fwait
test
iret
rcrb
xor
cld
orl
in
int3
out
pop
inc
xchg
cmc
push
imul
aam
imul
pop
pushf
xchg
lea
int
sub
push
push
enter
shl
bound
pop
jnp
xchg
dec
dec
shl
ljmp
or
sbb
in
ficompl
das
sahf
push
cmp
or
iret
sbb
sbb
popf
push
xor
leave
sub
mov
loopne
adc
les
out
scas
dec
outsb
mov
jno
push
xchg
xchg
pop
pop
push
inc
cmc
mov
push
mov
mov
add
adc
sahf
aad
mov
sahf
cli
ja
xchg
jmp
inc
push
and
dec
lods
and
je
lock
pop
aas
jne
xchg
sbb
mov
sti
push
mov
test
bound
sbb
mov
fs
popa
call
xlat
xchg
push
js
divl
mov
jge
adc
enter
inc
xchg
mov
inc
cwtl
inc
sbb
add
inc
pushf
jge
add
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
test
add
orl
jmp
or
pushf
sub
popa
rcr
add
call
mov
or
fmull
mov
pop
es
in
sub
in
mov
sbb
cltd
push
push
xchg
pop
loop
inc
jmp
sub
std
or
mov
pop
cli
repnz
xor
mov
xor
inc
lds
pop
icebp
call
push
rorb
cmc
jl
cmp
add
out
hlt
shll
sbb
cli
push
pop
add
jecxz
mov
es
dec
mov
lret
lock
stos
fnstsw
or
rcrb
mov
mov
out
add
cmp
sub
cmc
xor
adc
sub
cmp
lods
lret
aad
sti
sub
cmpsb
xor
lods
mov
adc
adc
adc
insl
add
sub
incl
sti
adc
mov
xchg
or
mov
dec
pop
lahf
aas
lods
xor
jmp
das
and
fsubrl
test
xchg
into
mov
dec
pop
mov
mov
jecxz
hlt
add
ljmp
jecxz
xchg
push
and
add
or
push
jnp
fisubs
push
in
push
mov
cmc
adc
dec
out
xor
mov
push
push
cmp
aam
push
fidivs
push
and
jle
loopne
enter
das
clc
daa
stos
stos
mov
push
daa
cmp
cli
push
cs
adc
lods
add
jb
mov
stos
jmp
pop
daa
sbb
lock
lcall
mov
sbb
cmp
fcomp
xor
sbb
lea
push
cwtl
jns
inc
ret
pop
mov
test
mov
loopne
sarb
fwait
sub
fnsave
sarb
sub
xor
iret
fmull
lock
xchg
int
out
xchg
les
repnz
cmp
xchg
cmp
lods
out
or
mov
xor
mov
lds
or
adc
fimuls
xchg
ss
imul
push
push
or
push
push
aas
jl
aas
sti
movsb
ficoms
sub
mov
loopne
loop
movsl
wrmsr
mov
lea
mov
rcll
mov
fsubrs
dec
mov
sbb
faddp
rorl
adc
ror
in
dec
mov
jmp
daa
sti
loop
inc
jecxz
stos
addr16
inc
aaa
inc
pop
mov
cmp
scas
rol
xchg
jne
shlb
pop
loopne
movsl
xchg
outsb
push
pusha
imul
ret
mov
lea
jmp
cld
pop
sbb
cmpl
rclb
sbb
arpl
ror
in
jno
outsl
nop
das
js
dec
jne
shlb
in
mov
add
dec
test
inc
mov
andl
mov
icebp
xchg
push
test
dec
xor
cmc
cmp
and
sub
sbb
adc
imul
xlat
xor
pusha
sbb
cmc
mov
cmp
test
loop
or
and
inc
pop
ja
push
mov
cmp
jl
or
sbb
xor
push
inc
fidivs
lret
mov
sub
scas
movsl
movsb
sub
cmpsl
ja
xor
dec
test
xlat
sbb
dec
add
mov
pop
int3
mov
lods
push
daa
xchg
in
imul
dec
fs
cli
jnp
movsl
cmp
fisttpll
mov
adc
loope
jb
jnp
adc
je
or
xchg
nop
xor
lods
fsubrl
scas
pop
push
or
repz
pusha
movsb
movsb
pop
repz
mov
jb
or
lods
lcall
adc
fimuls
jmp
adc
cli
sbb
cmpsb
ds
push
leave
sbb
movsl
pop
je
or
xchg
das
or
cli
and
fwait
push
arpl
mov
sbb
repz
or
stos
push
jmp
loopne
or
bswap
xchg
pop
jno
daa
xor
faddl
out
in
inc
jmp
pushf
mov
adc
stos
mov
popa
out
repnz
jnp
mov
push
dec
adcb
push
fcmovnbe
dec
cmpsb
dec
sub
xchg
pop
xchg
cmp
dec
decb
push
inc
sub
cmp
les
loop
bound
pop
push
mov
mov
pop
icebp
repnz
push
mov
gs
xchg
mov
add
imul
mov
enter
aaa
fxch
in
loope
dec
shlb
jle
dec
dec
jbe
sbb
push
add
cmpsd
mov
mov
jno
xlat
push
jecxz
sarb
test
lret
shrb
xor
xchg
xchg
xchg
xor
dec
mov
mov
jmp
fidivs
add
out
mov
outsl
lods
adcl
push
pop
in
sar
inc
stos
out
jg
inc
call
mov
cmp
test
iret
je
xor
pop
mov
stc
test
out
jp
sbb
adc
xchg
xor
lahf
xchg
rorl
add
pop
in
or
xor
mov
mov
xchg
js
jo
ja
cmp
icebp
sbb
sub
in
and
xchg
daa
stos
into
outsl
adc
sbb
in
pop
lahf
jp
shl
push
adc
and
inc
sbb
jnp
imul
add
sub
fimuls
mov
push
and
stos
popa
repnz
or
in
push
mov
js
std
xchg
and
and
push
test
cld
int3
bound
dec
lods
mov
add
inc
mov
sub
sbb
cmc
enter
aas
data16
cli
std
xchg
out
ljmp
xor
sbb
mulb
lds
adc
fdiv
nop
lea
stos
and
jmp
fcomp
pop
sti
movl
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
filds
and
adc
clc
adc
mov
scas
test
pop
mov
test
test
xor
and
dec
mov
xchg
mov
insb
shrb
test
dec
dec
or
sbb
jge
movsl
fsubrl
sbb
jp
sarl
fldl
cmp
pop
or
sbb
push
adc
xchg
sbb
or
icebp
jno
in
pop
cmp
movsl
dec
pop
and
lock
add
push
sub
mov
xchg
cwtl
rcr
call
xchg
cmp
ja
dec
lret
adc
push
dec
enter
xorl
hlt
push
imul
mov
inc
inc
neg
sbb
cmp
dec
mov
aas
in
mov
stc
fwait
sub
mov
push
outsl
gs
xor
cld
frstor
and
in
cmp
push
fists
imul
and
ret
int
cmc
add
mov
popf
stos
or
ljmp
mov
push
mov
lods
pop
jo
xor
addl
fidivl
movsl
add
sub
fbstp
cmpsb
jbe
lret
cmp
sbb
xorl
mov
push
pop
shlb
out
mov
pushf
mov
mov
jl
sub
insl
pop
in
add
inc
pusha
sbb
out
icebp
jmp
out
mov
sub
add
cmp
out
or
fildll
fistps
je
push
inc
cli
inc
gs
movsb
aad
xchg
lea
ret
cmpsl
cmp
lock
jnp
sti
fdivl
xor
mov
clc
and
std
pushf
lea
cwtl
aas
jbe
pop
cmpb
mov
vpunpckhqdq
in
cmp
aad
mov
dec
aad
mov
gs
push
pop
stos
aam
jle
mov
outsb
adc
rcll
cs
sbbb
jnp
aaa
pop
sbb
pop
mov
jns
sti
mov
dec
push
fisubl
shll
xor
sti
das
jns
mov
mov
scas
lret
test
push
pusha
pop
rorl
xchg
xor
xchg
mov
adc
scas
and
mov
jmp
pop
xor
and
movl
pop
add
xchg
vminps
mov
hlt
sti
cmp
mov
mov
imul
gs
jmp
std
push
aas
pop
es
dec
inc
adc
push
mov
push
fwait
push
pushf
jmp
push
mov
inc
out
test
cmp
pop
rcr
sbb
and
push
and
jnp
test
mov
mov
inc
xor
xor
dec
mov
pop
cmp
ljmp
and
jge
inc
shlb
dec
dec
fdivrs
mov
xchg
dec
pop
fmuls
scas
enter
push
aas
stc
mov
subl
mov
add
mov
cs
shl
insb
idivl
cmp
jecxz
test
arpl
mov
inc
lea
add
jge
sub
out
sbb
cmp
cmpsb
lahf
and
and
andb
std
rorl
jle
jcxz
stc
xor
xor
mov
inc
mov
cmp
push
adc
stos
adc
jbe
in
jge
sbb
dec
and
add
push
inc
and
sarb
jecxz
adcl
decb
leave
inc
iret
mov
mov
loope
inc
aad
jns
shlb
or
cmp
adc
xchg
add
adc
shll
mov
pop
pop
push
xor
push
out
fcomps
push
outsl
adc
jge
pop
sub
in
xchg
lret
lahf
shrl
loopne
pop
repnz
icebp
cmp
jmp
shrl
out
adc
push
cmp
jo
inc
push
xchg
add
pop
roll
mov
sub
add
mov
ret
cmpsl
aad
mov
insb
lret
xchg
gs
cmp
hlt
or
mov
and
dec
jle
or
mov
dec
add
push
std
mov
mov
xor
enter
xchg
outsl
mov
mov
jecxz
cmp
mov
mov
outsl
push
repz
sarb
push
pop
sbb
jmp
mov
daa
stos
int
loope
pop
arpl
iret
mov
adc
cmp
aam
lock
fistpl
mov
xacquire
mov
jp
pop
jp
cmp
mov
mulb
inc
sbb
or
sti
notb
mov
sub
push
insb
call
out
push
shlb
pusha
push
inc
xor
sbb
add
inc
and
xor
cmp
mov
xchg
jno
movsb
pop
pop
mov
lds
mov
jecxz
sub
movsl
sbb
cmpsl
xchg
xchg
add
or
fucomip
test
sbb
mov
call
mov
jno
mov
xchg
adc
or
xchg
add
jle
aas
mov
xchg
scas
and
mulb
jmp
jmp
idivl
shll
or
mov
dec
call
loopne
and
xchg
aaa
xchg
dec
faddl
dec
or
or
mov
pop
je
movb
jae
xor
cwtl
mov
test
inc
xor
mov
imul
mov
jo
bound
in
xchg
push
cltd
push
inc
loop
pushf
or
push
mov
addl
mov
add
xorl
std
imul
or
test
inc
clc
mov
mov
and
js
dec
and
xchg
cltd
daa
xor
popf
bnd
push
inc
sub
mov
xchg
pop
jmp
sbb
into
rolb
cs
mov
pusha
lea
mov
inc
or
jne
cmpl
movl
mov
mov
jmp
movl
jae
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
pop
add
adc
push
clc
adc
mov
insb
insl
cmc
xchg
vpaddb
or
stos
je
cltd
pushf
mov
mov
fildl
sahf
es
dec
lds
or
pop
mov
jmp
push
mov
xor
mov
mov
ret
inc
mov
dec
pop
xor
cmpl
std
cs
cmp
push
xor
mov
clc
add
sbb
lock
xor
push
or
pop
js
lret
lea
mov
sbb
pop
movsb
sbb
xor
add
mov
mov
fs
pop
ror
les
dec
cmp
xor
mov
mov
mov
jbe
loop
std
pop
in
repz
or
and
push
sbb
out
addr16
jae
lods
repnz
mov
jnp
jnp
pusha
adc
inc
fistpll
pop
and
outsb
xor
push
adc
mov
clc
outsb
jae
ret
out
lcall
xchg
cmp
pop
pop
pop
test
push
pusha
test
sub
insb
xchg
cmp
sbb
incb
insl
sti
popf
sub
out
push
mov
mov
imul
adc
lods
sub
in
scas
mov
aam
and
xor
sub
dec
imul
mov
test
jno,pt
mov
xchg
jnp
mov
lret
rcrb
pop
inc
cltd
dec
jbe
cmp
cld
or
ds
sbb
mov
rcpps
idivb
lret
and
cmpsl
push
push
pusha
and
test
sahf
ljmp
inc
sub
and
test
inc
cmp
adcb
xchg
out
jge
bound
std
or
test
jb
sahf
inc
add
sti
jo
push
jbe
imul
mov
jp
loopne
ss
or
leave
jo
adc
mov
mov
mov
push
add
add
mov
lods
fldcw
push
inc
repnz
in
xor
aas
sbb
mov
fadds
jge
loop
push
cli
popa
das
hlt
mov
sub
addr16
int3
loopne
mov
mov
rclb
rcl
into
sub
test
mov
cmp
push
ss
rol
pop
insb
or
push
test
mov
pusha
cmp
push
pop
out
fisubs
or
lret
popa
lcall
jle
xor
shr
pop
add
cltd
lcall
add
adc
dec
pop
cmp
add
rorl
outsl
mov
stc
int3
and
sbb
test
lret
call
xchg
jmp
sahf
mov
loopne
popa
scas
xlat
sub
cmc
lret
jl
jns
imul
jg
lret
testb
lahf
pop
or
lret
sub
lret
sbb
jo
iret
dec
aas
test
mov
ljmp
mov
lret
xchg
cltd
dec
mov
mov
xchg
movl
cmp
cmp
push
popa
movsb
fwait
fs
aas
pop
cmovs
lods
or
mov
xchg
adcl
data16
jge
sub
jle
jle
jmp
or
bound
ss
mov
bound
jmp
fldlg2
lret
mov
xchg
fstpt
pop
push
aas
rorl
xchg
repz
push
cltd
jle
ljmp
repz
ror
addr16
mov
push
ss
out
xchg
jne
xchg
aad
jmp
inc
and
push
outsb
xor
push
xchg
cmp
das
mov
xlat
and
lock
xor
and
and
jb
xor
cs
loop
imulb
xor
inc
lock
adc
repz
pop
jge
sub
nop
adc
xor
rol
cmp
ss
adc
mov
sub
mov
and
test
push
stos
cmc
stos
or
push
scas
and
sbb
add
rcrb
or
jno
jno
sub
mov
inc
stc
jle
iret
call
xor
jnp
add
lea
in
adc
mov
dec
sub
mov
test
loop
popa
cs
daa
pop
push
fs
insl
loope
cltd
sbb
xor
fsubs
pop
lea
sbb
out
stc
imul
and
jl
inc
shrb
insb
mov
int
out
je
inc
pop
cmpsb
in
cmp
mov
mov
outsl
xor
xorb
xlat
rep
mov
cmp
loop
shl
add
cmpsl
repz
je
shll
add
mov
rcrb
ret
xor
mov
lahf
adcl
add
or
jmp
int
mov
xchg
enter
mov
les
negl
rorl
mov
xchg
and
fs
cmp
in
movl
sti
pop
das
imul
cs
inc
pop
cmp
dec
ret
cmp
fcoms
xor
dec
push
enter
push
mov
inc
push
inc
aam
pop
scas
sahf
int
scas
xchg
inc
ficompl
lock
jmp
sub
sbb
test
pusha
cmp
or
aad
sbb
sbb
and
jnp
je
dec
and
movsb
movsl
pop
cmp
outsl
jnp
jmp
lahf
jmp
mov
push
dec
mov
xchg
les
dec
inc
mov
pushf
jecxz
pop
mov
and
pop
and
dec
arpl
cmp
xchg
popf
or
das
test
jb
hlt
add
stc
add
xor
mov
mov
add
movsl
xchg
xchg
push
xor
hlt
pop
sarb
ret
fimull
cmp
cmpsb
jp
sub
cwtl
fwait
add
pop
les
lock
loope
loope
cwtl
or
push
mov
pop
loope
mov
lret
add
jmp
xor
xor
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
and
push
add
clc
adc
sub
fmul
mov
mov
pop
pushf
mov
cs
mov
cmp
pusha
sbb
movsb
rol
aaa
flds
dec
out
decl
or
hlt
dec
sub
aad
mov
loop
arpl
adc
xchg
sbb
and
nop
pop
jmp
add
push
imull
add
add
sbb
test
xchg
in
popl
andl
add
jmp
and
inc
call
scas
int
adc
popa
mov
mov
jge
add
inc
aad
iret
outsl
pop
mov
cmp
dec
mov
sbb
sub
sub
mov
mov
ficomps
adc
daa
mov
testl
test
dec
jl
pop
mov
sti
mov
pop
jns
or
and
lcall
fiaddl
test
pop
lea
rcrb
les
imul
outsb
push
pusha
hlt
sbb
pop
lcall
pop
and
add
inc
pop
iret
cs
lahf
sti
mov
cmpsb
sbb
add
addr16
aaa
inc
sbb
aas
push
dec
btr
mov
inc
jp
cmp
pop
dec
in
jae
sub
repnz
andl
rcrb
and
sub
push
mov
or
add
dec
pop
jno
xchg
mov
ss
push
loop
pop
and
mov
inc
mov
addb
fldenv
flds
mov
fadd
sub
in
push
adc
cmp
les
sub
in
pop
loopne
aam
enter
insb
test
pushf
fistpl
xlat
imul
inc
jae
jl
es
and
jmp
jnp
push
ss
push
hlt
pop
mov
add
dec
dec
jge
daa
test
jp
popa
rcrl
dec
dec
insb
xchg
or
jo
xchg
pushf
in
xchg
dec
add
mov
jle
movb
sub
fistl
mov
adc
cmc
adc
xchg
pop
xchg
add
push
and
pop
inc
mov
sub
dec
gs
ss
mov
loopne
dec
mov
lock
jp
push
inc
sbb
loopne
aam
rclb
dec
xchg
sub
inc
or
test
inc
fcoml
aad
jp
rcrl
mov
repnz
xchg
mov
pop
push
cwtl
xchg
jmp
ja
or
sbb
jge
cli
fstps
jl
lods
aaa
inc
in
inc
jns
mov
ds
mov
xlat
push
rolb
inc
lcall
push
push
pop
xor
in
clc
ds
fs
subl
push
inc
mov
das
cmp
mov
pop
sbb
push
cmp
pop
or
push
inc
mov
sbb
iret
mov
jg
jmp
dec
orl
addr16
lcall
mov
mov
ror
sub
in
pushf
push
mov
nop
mov
mov
ret
fimull
jns
add
fadds
ret
mov
jbe
adc
dec
sbbl
inc
pop
adc
stc
jp
mov
mov
fistl
xchg
push
add
gs
imul
jns
mov
push
xor
fchs
xchg
jp
scas
pushf
stos
cmp
std
lods
dec
inc
adc
pop
das
fisubl
inc
mov
mov
dec
add
inc
pop
je
xor
inc
out
mov
leave
test
das
shll
popf
cmp
or
fimuls
xchg
into
fcomps
jne
xchg
lcall
jp
int
push
fnsave
pop
icebp
or
cltd
push
leave
ja
daa
lock
loop
icebp
sub
mov
cmc
xchg
pop
xchg
in
movsl
fwait
aad
mov
lret
push
addr16
lret
pop
pop
sti
pop
jo
cmp
stos
out
leave
add
xorb
push
fwait
aam
fwait
stos
test
sbb
mov
popa
or
aaa
mov
dec
add
pop
add
imul
aas
insl
imul
mov
sub
sbb
nop
shlb
mov
sahf
xor
lret
in
jno
and
mov
xchg
push
cld
outsb
sbb
adc
sahf
mov
sub
mov
sbb
test
jp
fistps
clc
cmpsb
insb
shl
rolb
shl
mov
dec
cmp
xchg
sahf
outsl
fiadds
sub
test
scas
push
cmp
fnstsw
jle
stos
js
int3
mov
test
push
fcomps
ss
ja
rcrb
dec
push
insl
or
divl
or
insl
mov
scas
pop
lods
in
cmp
xor
cmp
inc
push
ret
mov
add
push
cwtl
and
xchg
jbe
mov
dec
jnp
jg
call
test
xchg
repnz
add
mov
push
jne
sub
hlt
dec
dec
je
jb
inc
into
jo
cmp
into
xchg
sbb
push
insl
out
jp
lret
icebp
cli
mov
adc
xor
sbb
stc
cli
mov
jb
cmp
ret
and
push
xor
aad
test
movsl
negl
fldcw
push
movsl
jg
icebp
push
out
fwait
imul
dec
in
xlat
inc
es
adc
mov
ja
pop
push
shlb
fidivrs
out
push
pop
movsb
subl
in
cmc
push
mov
push
pushf
test
jg
xorl
push
cmp
inc
xor
rol
sahf
adc
rcl
mov
pop
sub
mov
or
stc
in
mov
stos
stos
lods
lahf
push
push
jmp
leave
cmp
pop
test
dec
mov
lea
bnd
lcall
ret
shlb
mov
sbb
insl
inc
fldenv
jb
pop
add
add
lock
jl
dec
fmull
sub
mov
or
xchg
adc
mov
pop
popa
ss
mov
mov
cmp
mov
stos
push
out
jecxz
mov
repz
inc
or
jnp
mov
cmp
add
add
js
add
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
enter
aad
adc
push
clc
adc
sbb
iret
sub
pop
mov
pop
inc
in
xor
mov
fildl
sar
test
outsl
xchg
dec
loop
mov
fnstenv
lea
popa
or
cltd
daa
pusha
sbb
lds
cmpb
sub
loope
and
loopne
loopne
mov
lods
mov
cs
out
orb
insl
cmpsb
arpl
xchg
mov
cmc
clc
xlat
fs
cltd
movsb
pop
dec
cmp
jae
push
mov
fistps
sbb
xchg
push
and
jno
dec
and
cmp
inc
sbb
pusha
les
das
ror
cmp
or
sbb
cmp
cmp
add
aad
leave
pop
ss
or
in
push
mov
push
ret
aaa
orb
sub
push
pop
in
mov
xor
mov
flds
jl
sub
rorl
xor
xchg
popf
fldcw
inc
ret
xchg
outsb
das
jp
xor
sub
cli
clc
mov
mov
dec
pop
push
in
shrb
rorb
dec
in
lds
addr16
pop
lds
adc
jmp
leave
sub
pop
sahf
cs
mov
jp
ljmp
outsb
movsl
lahf
inc
adc
fmull
dec
mov
or
daa
or
das
test
inc
cmp
xchg
fisttpll
jns
aaa
pushf
jb
push
add
out
jne
push
jne
adc
lret
bound
pushf
pusha
sbb
decl
in
mov
and
or
aas
fadds
pop
fbld
lds
ja
insb
imul
sbb
lea
sub
or
push
rolb
test
xchg
and
push
sbb
aaa
stos
xchg
xchg
or
out
movzwl
push
sub
cmpps
out
xor
test
shll
stos
jb
es
cmp
cli
jp
ljmp
sbb
hlt
or
or
mov
fldenv
cmp
xor
mov
subb
movsb
lahf
jmp
jno
sbbb
xchg
xchg
dec
pop
mul
fs
mov
fsubr
dec
adc
jge
sub
cld
mov
cmp
inc
lcall
shrl
jg
or
pop
loopne
imul
clc
xor
push
xor
or
push
lds
daa
inc
and
xchg
pop
insb
les
scas
adc
dec
frstor
mov
cltd
mov
inc
fsubrs
push
add
adc
pop
shlb
data16
push
pop
decb
inc
pop
int3
mov
mov
adc
xorb
into
sub
mulb
fcoms
sahf
enter
sub
mov
test
pushf
dec
mov
jecxz
roll
xchg
lcall
xorl
movsl
rcrl
adc
xchg
loopne
addr16
xchg
ss
dec
mov
loope
adc
pop
cmp
das
jae,pn
push
test
adc
or
push
sbb
and
xor
ret
cmc
mov
gs
mov
sarb
jle
jmp
inc
jecxz
ljmp
push
pusha
sbb
fisubrs
adc
test
rolb
xor
lds
insb
jbe
icebp
fsubrs
add
cmpsb
dec
xchg
inc
cmpsb
inc
mov
jmp
int
mov
daa
mov
lea
dec
lret
ds
adc
aas
xor
out
mov
mov
jne
mov
jb
in
jle
pop
call
popf
cmp
dec
mov
jle
fdivl
adc
xchg
rcll
or
and
and
sbb
movsl
pop
cld
adc
xchg
jp
inc
mov
mov
dec
cmc
mov
es
mov
or
mov
lcall
lcall
gs
psubb
fs
nop
adc
mov
mov
jbe
sbb
outsl
push
dec
lahf
push
push
bound
add
ds
mov
cmc
ds
and
stos
mov
xor
cmp
cmp
stos
adc
je
jne
push
push
lock
cmp
aam
cmc
sbb
mov
aaa
add
jb
cmp
lock
inc
mov
mov
or
pushf
mov
movsb
js
aas
push
pusha
xchg
xor
out
jne
icebp
inc
or
pop
daa
addr16
and
data16
inc
test
je
into
je
rcll
ret
jo
fnstcw
mov
jg
mov
cmp
cld
int
mov
adc
in
mov
add
in
push
xchg
xchg
lods
insb
inc
cmp
xor
jl
sub
adc
cmovp
clc
ret
movsl
pop
es
mull
stc
fwait
cs
dec
adc
xor
fistpll
pop
paddusb
mov
insl
out
push
lds
dec
dec
inc
bound
ret
ficoms
push
add
test
sbb
loopne
scas
sub
lahf
shrb
jecxz
jb
lcall
ja
aaa
xor
jge
cli
mov
fcoms
cwtl
mov
pop
jmp
or
mov
outsl
bound
sbb
xor
inc
frstor
push
rorb
fldenv
jno
xchg
popa
fidivs
push
xchg
lods
jecxz
cmpsl
mov
push
and
dec
xor
loope
dec
js
dec
pop
adc
int3
mov
jo
cmp
jmp
arpl
or
mov
inc
push
mov
shll
dec
lcall
data16
xchg
and
push
mov
aad
in
jne
test
sub
pop
dec
insb
rcrb
popa
test
mov
xlat
add
push
adc
adc
out
mov
dec
add
scas
movsl
adc
daa
inc
ficompl
fsubr
or
push
and
cmp
add
xor
mov
out
add
out
adc
push
mov
jl
push
pop
adc
pop
shrl
mov
mov
xchg
lea
or
mov
xor
or
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
jno
cmp
adc
adc
push
clc
adc
jp
xchg
sub
cmp
pop
jb
inc
sbb
jle
lods
xchg
std
and
adc
aas
mov
and
push
mov
ds
call
fsts
push
add
jo
test
lret
std
mov
xor
lods
dec
dec
mov
ret
mov
or
adc
add
inc
scas
sbb
mov
sub
lcall
mov
push
stos
ret
lods
std
mov
gs
jecxz
jnp
out
mov
lds
sbb
add
pop
jg
sub
xchg
mov
sub
pop
daa
pusha
loope
ret
mov
cwtl
imul
and
mov
scas
xchg
fnsave
lods
imul
cmpl
subl
xchg
jne
rorb
insb
xor
clc
aas
gs
adc
lahf
imul
pop
sub
lcall
pop
jp
hlt
imul
gs
lea
shlb
pushl
movsb
push
outsb
pop
lret
into
movsl
dec
or
aam
bound
rcr
je
pop
outsb
mov
and
and
cli
fucomi
jb
mov
jle
les
sbb
shrl
adc
or
xor
jl
shrl
xchg
call
xchg
arpl
jmp
out
adc
mov
into
fildl
mov
and
lret
jecxz
sub
adc
scas
xchg
in
mov
out
frstor
lahf
mov
pop
imul
enter
jecxz
push
aam
repz
loop
add
in
imul
fs
rcrb
movsl
jbe
ror
and
pushf
mov
filds
cwtl
sub
jmp
rclb
jg
and
es
or
dec
or
adc
ret
mov
xchg
imul
xchg
std
jae
sub
xor
in
pop
lret
push
adc
dec
jmp
xlat
inc
mov
dec
jmp
test
enter
addl
fcmovnu
cmp
popa
sbb
std
mov
add
decl
ljmp
fdiv
inc
cmp
sti
das
inc
out
or
insl
insb
clc
rcrl
lea
mov
lods
cld
or
stos
stos
mov
xor
arpl
pop
subb
cmc
adc
in
mov
pushf
clc
xlat
mov
lods
xchg
filds
mov
stc
jmp
fs
stos
fstl
push
sub
aam
and
sbb
xchg
inc
scas
jg
dec
mov
mov
dec
cmp
ds
jge
shlb
sub
xor
and
jo
add
das
cmpsl
cli
jg
lock
adc
mov
push
enter
xchg
jno
xorb
daa
lock
inc
dec
out
mov
lret
enter
rcrl
cmc
add
adc
mov
sbb
or
adc
std
jl
xor
cmc
xchg
mov
inc
je
hlt
icebp
push
adc
mov
int
loope
stc
mov
jns
add
cmpsl
dec
idivb
lret
cwtl
lock
fwait
imul
cmp
cld
sub
add
data16
andb
add
mov
sahf
inc
scas
lret
cmc
lock
dec
fdivl
sub
mov
xchg
push
xchg
xor
movsb
scas
cmpsl
cmp
loopne
mov
push
fwait
lds
mov
xchg
stos
push
cmc
ljmp
jb
lahf
fwait
fs
aas
xor
dec
ficompl
fwait
leave
fmuls
cmp
adc
repnz
loop
in
aas
imul
inc
push
insl
repz
adc
aam
push
xor
js
push
arpl
mov
test
cmp
mov
mov
addr16
rcrl
push
mov
cld
push
mov
adc
and
xchg
ficompl
shrb
adc
imulb
dec
xchg
into
push
jp
inc
dec
xor
cmp
test
enter
pop
shlb
cmpsb
lret
nop
cmp
pop
cmc
shr
add
jno
subb
mov
adcb
popf
mov
ss
mov
push
shrb
push
insb
sarl
pop
mov
add
cmpsb
xchg
sbb
lods
std
pop
or
pop
imul
jb
jecxz
adcl
mov
test
adc
xchg
filds
aas
xchg
inc
xchg
mov
push
or
adc
adc
mov
ret
lods
add
or
mov
mov
or
mov
in
pusha
test
sbb
sti
imull
les
arpl
lods
rcll
mov
add
jecxz
jae
dec
scas
xchg
jb
add
mov
and
shll
mov
test
fwait
jmp
push
iret
loop
mov
dec
mov
sbb
sti
mov
xchg
push
je
lods
outsb
dec
icebp
daa
lcall
pop
add
xchg
ljmp
jnp
pop
or
cld
ljmp
sub
push
cmp
adc
loope
hlt
sar
test
inc
fldcw
scas
and
loopne
movsl
mov
push
leave
mov
lods
sti
xchg
cmp
lret
add
ja
test
xchg
test
cmp
push
popa
test
adc
cmpb
and
ja
mov
les
or
pop
fmulp
xor
jno
cmp
xchg
loope
push
mov
cmpb
clc
lods
insl
and
push
hlt
pop
aas
dec
pop
jl
push
push
push
adc
and
jecxz
nop
pop
dec
pop
and
loope
jb
mov
jne
aam
test
jb
dec
mov
dec
adc
ret
xchg
inc
inc
jno
mov
sub
ljmp
sbb
cmpsl
fistpll
cmc
mov
xor
mov
or
jbe
mov
xchg
fidivrl
jae
rcrb
adc
test
icebp
pushf
shrb
cmc
inc
ja
popf
xor
mov
inc
push
cmc
xor
xchg
fistps
mov
movl
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
cmp
push
mov
push
clc
adc
arpl
mov
mov
inc
aad
or
xor
cltd
test
push
in
shlb
dec
jne
stc
adc
xlat
call
mov
out
fldl
les
push
jns
push
lret
push
jo
or
xchg
add
or
clc
inc
push
inc
mov
in
xor
fimull
add
lret
jae
lret
addl
jl
stos
inc
mov
lahf
fnstsw
and
mov
and
jp
pop
sub
arpl
aas
push
cmp
and
lret
adc
push
add
pop
lods
mov
or
pop
mov
test
add
out
add
xchg
xchg
sbb
repnz
lret
add
rcrl
arpl
pop
jle
lods
rcrl
cmpsl
stc
ud2
inc
inc
cmp
loopne
xor
daa
pop
pop
xor
ja
pop
push
fs
aaa
dec
movsl
mov
sub
xchg
sti
mov
jle
push
in
push
cmp
stos
sbb
push
mov
gs
jne
sub
je
xor
xchg
mov
js
sti
out
push
or
mov
jns
les
sti
aad
sarl
in
or
aad
and
loopne
adc
jge
jp
cmc
or
negl
ret
and
mov
or
push
cmp
push
adc
clc
sti
cmp
mov
sub
or
xor
pop
cmpb
add
aad
xor
bound
dec
stos
cwtl
scas
jge
push
sbb
inc
icebp
mov
jge
lds
dec
mov
lds
enter
ds
push
mov
inc
adc
dec
notb
jle
mov
sub
pop
movsb
inc
scas
stc
jno
cltd
push
jno
pop
std
jae
fcmovu
ret
add
out
imul
daa
or
fwait
jb
add
lcall
pop
mov
sbb
adc
lods
jb
les
pushf
xor
jmp
push
dec
call
iret
pushf
xor
dec
push
mov
into
ds
jb
xchg
mov
ja
in
ret
xor
add
and
push
pusha
jp
jbe
mov
dec
call
nop
sahf
ljmp
xchg
repz
mov
xlat
adc
or
or
in
inc
jle
arpl
xor
es
mov
sub
pop
test
push
mov
mov
dec
adc
and
push
add
sub
jb
mov
sahf
cmp
out
ss
call
out
dec
shlb
ds
jnp
call
mov
cmc
push
xchg
lock
sub
push
add
xor
movsl
push
pop
sub
dec
jns
cs
push
pop
mov
sbb
testb
aas
lret
cmp
lea
dec
lret
jns
mov
outsb
outsl
std
lds
pop
fisttpl
pop
stc
pop
mov
je
xchg
jl
std
testb
js
loopne
out
ret
mov
setg
cmpb
push
jmp
mov
fimuls
mov
push
out
popl
xchg
cmp
dec
cmp
push
adc
in
ljmp
jp
fwait
xlat
push
mov
mov
loopne
out
mov
lahf
int3
lods
outsb
mov
js
cld
jecxz
cmp
ret
jbe
repz
pop
cmpsb
stos
cmp
nop
jp
setl
xor
std
add
and
or
mov
push
inc
cmp
pop
sbb
leave
ljmp
outsl
inc
sub
sbb
std
mov
data16
adc
jns
in
inc
mov
fidivs
push
add
jno
out
push
lods
call
inc
shlb
rcll
scas
push
cmp
adc
test
in
aas
inc
adc
test
xor
pop
jp
pop
jge
sbb
lds
pop
movsb
inc
jecxz
in
outsb
out
push
es
int3
jle
inc
inc
in
cmp
or
mov
pop
push
jp
lea
push
sbb
mov
outsl
jae
imul
xor
xchg
cmc
jp
iret
xor
jae
xchg
pushf
add
fmull
mov
call
jb
int3
dec
push
negl
dec
aam
nop
add
ret
mov
rcr
jbe
inc
and
orl
and
pop
push
mov
dec
sahf
lea
and
jle
adc
mov
mov
lods
xor
jb
sahf
outsl
mov
pop
insb
jmp
divl
dec
cmp
notb
or
xchg
jmp
mov
insl
sbb
adc
stos
fldenv
mov
lret
mov
scas
xchg
rclb
bound
inc
ss
add
pop
xorb
rcrb
test
jp
data16
mov
xchg
test
lea
lret
dec
mov
test
jnp
shr
adc
ds
cmp
push
mov
cmpsb
lretw
popf
test
push
or
jl
jge
fdivl
cmpsl
mov
or
push
xchg
adc
daa
mov
lock
mov
cmpb
push
out
mov
dec
and
int3
inc
es
push
rcrb
dec
xchg
imul
push
ds
clc
sub
insl
xchg
push
repz
mov
imul
mov
mov
lock
lods
cmp
cmp
jmp
pop
jns
mov
movsl
dec
loopne
in
mov
mov
adc
lcall
xor
enter
sub
mov
shll
inc
add
cli
cmp
sub
or
pop
mov
jnp
fsubrs
push
hlt
js
fdivrs
pop
cmp
das
add
shll
loope
sub
fbld
mov
mov
stos
loop
lahf
ja
sbb
cmp
cmpsb
push
lea
bound
sbb
mov
cmp
mov
inc
or
or
shl
andl
imul
jmp
mov
or
push
and
ljmp
hlt
xchg
jge
adc
clc
adc
les
push
inc
xor
jo
outsb
jg
inc
push
popf
adc
mov
mov
pop
outsb
cmpb
leave
jb
das
sub
add
int3
or
addl
xchg
nop
ds
xchg
or
inc
adc
mov
stc
mov
dec
sbb
aad
call
add
je
idivb
lods
frstor
mov
ret
leave
cmp
sbb
scas
ljmp
cs
fisubs
sub
arpl
jbe
mov
iret
adcb
fnstcw
enter
xchg
loopne
inc
lcall
stc
xchg
push
sbb
call
out
xchg
mov
fists
mov
push
mov
movsl
sub
in
and
movsb
pop
mov
jbe
fwait
add
testb
fists
adc
insl
mov
out
cmpsb
loop
and
inc
sbb
push
add
mov
sbb
jg
dec
jae
xorb
xchg
jb
out
add
mov
cmp
out
out
mov
mov
sahf
int3
out
ljmp
out
stos
xchg
sub
sti
mov
or
add
adc
sub
in
dec
xor
dec
mov
das
cmpsb
mov
imulb
xor
push
in
jp
adc
adc
push
cli
push
push
sub
sub
jle
leave
test
push
pop
mov
ss
sbb
lret
push
xchg
mov
loop
mov
aas
push
test
or
and
je
je
popa
mov
test
jae
xchg
and
sbb
jo
fldln2
loope
pop
jnp
cli
cwtl
inc
jno
shrb
movsb
add
xor
rcr
lds
mov
sub
push
lock
ljmp
int
jbe
shlb
aad
and
addr16
stc
lock
dec
cmp
repz
nop
xchg
jmp
inc
call
mov
cmp
inc
mov
scas
adc
loopne
sar
nop
mov
hlt
mov
int3
arpl
pop
mov
enter
notb
pop
jno
scas
dec
pop
push
mul
ret
cs
insb
and
push
pop
repnz
add
mov
push
notl
adcl
rcrb
stos
push
negb
cwtl
loopne
je
push
imul
fidivl
inc
sarl
sub
fchs
jne
adc
cmp
lret
out
pop
pmulhw
sub
shll
inc
in
lea
push
pop
inc
aam
push
mov
int
fs
pop
repz
xchg
dec
mov
cmp
xchg
daa
or
les
and
mov
into
push
mov
mov
cli
cli
shrb
stos
mov
inc
dec
sub
and
add
andl
faddl
xor
in
push
and
sti
or
mov
push
xchg
mov
je
xlat
pop
shrl
xchg
cmp
push
lock
mov
movsl
xor
jmp
xchg
imul
insl
xchg
loope
pop
mov
mov
add
sub
add
cmpsb
cli
and
sbb
fnstenv
pushw
icebp
mov
mov
inc
cmpsb
pop
scas
lods
inc
cmp
xchg
pop
xchg
jns
sbb
es
pop
sahf
mov
and
pop
sahf
js
xchg
jae
mov
in
out
cmp
sbb
sbb
rorb
pop
jmp
xchg
dec
notb
nop
pop
jle
xor
mov
jno
or
out
outsl
js
out
push
add
sbb
pop
pop
stc
inc
pop
jge
xchg
and
fistpl
jecxz
adc
sub
add
mov
ret
inc
push
int3
sub
jecxz
cli
test
sub
xor
xor
enter
repnz
jl
pop
fisttpl
imul
std
jnp
fildll
sarl
je
imul
jl
dec
pop
push
jne
loope
add
sbb
stos
mov
sbb
mov
les
cmp
int
arpl
les
call
push
mov
lock
jae
mov
mov
cmp
xor
ficoms
xchg
push
dec
ss
out
aad
int3
pop
push
cs
and
xchg
test
sbb
cld
mov
or
rcr
jmp
fwait
and
insl
xor
scas
mov
sahf
inc
mov
jge
jl
fildl
arpl
adc
imull
ljmp
aam
icebp
mov
pop
in
mov
push
xlat
bound
addl
dec
or
sub
add
inc
imul
test
push
or
in
inc
lods
popa
dec
fxch
cmpsl
mov
mov
dec
fnstenv
mov
sbbl
ljmp
insb
sbb
jbe
lods
pop
xchg
adc
lret
add
stc
or
mov
mov
xor
inc
mov
subl
test
adc
incb
aaa
adc
and
xorb
lahf
fldenv
adc
mov
add
mov
int3
scas
fwait
inc
lods
push
and
jg
inc
neg
xchg
ljmp
sub
fnstenv
or
add
cmpsb
loopne
push
into
push
jnp
sub
bnd
adc
inc
fwait
divb
out
dec
dec
filds
test
out
and
or
cmp
mov
popa
push
shlb
mov
xor
push
xchg
loop
cs
add
mov
aaa
push
push
mov
out
rorb
and
lcall
sub
fidivs
in
mov
adc
pop
les
out
fwait
push
adc
cltd
pop
jmp
pop
sbbl
jae
and
sub
sub
nop
lahf
jg
in
call
jne
in
sbb
leave
xchg
push
pop
leave
cmp
mov
ret
out
mov
scas
xchg
lret
mov
lret
pusha
cmp
add
mov
pop
mov
ljmp
or
fwait
mov
or
test
cwtl
mov
sub
lds
dec
data16
pushf
into
mov
adc
mov
add
mov
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
dec
inc
aam
adc
push
clc
adc
fwait
inc
mov
addr16
es
pusha
or
lods
sub
inc
scas
das
dec
push
fs
daa
arpl
stos
jl
pop
in
mov
call
addr16
movsb
adc
sbbl
lea
sbb
into
shrl
dec
pop
movsl
sbb
cltd
test
sbb
insb
loopne
pop
or
hlt
sub
push
jp
pushf
mov
jnp
xchg
dec
leave
xor
push
cmpsl
fmulp
mov
repnz
or
outsl
loop
lods
jne
xchg
sbb
filds
repz
and
std
push
mov
ret
or
sub
xchg
add
out
jns
aad
jno
cmpsb
lods
sbb
inc
push
cld
leave
jno
pop
fiadds
ficoml
pop
mov
xchg
fcos
jle
mov
pop
cli
mov
push
loope
add
ficoms
bound
jecxz
sub
adc
xor
jno
sbb
push
subl
test
data16
fstpl
fs
clc
cs
cmpsb
sbb
dec
pop
push
push
ja
add
iret
in
push
insb
dec
xor
jb
fstpt
aaa
mov
jno
movsb
add
sub
and
andb
ss
pop
push
xchg
mov
ret
aas
xor
and
dec
mov
mov
test
sub
sbbb
adc
out
into
imul
aad
sub
mov
or
les
sbb
in
out
dec
jb
cwtl
adc
rol
mov
fsubrs
into
adc
rorb
lds
icebp
mov
mov
rclb
addb
aam
jmp
sbb
lock
ret
sbb
std
push
xchg
es
add
popa
sub
fs
sub
mov
ss
mov
pop
fxch
lods
test
inc
add
push
test
clc
ret
jae
pop
mov
or
xchg
push
mov
mov
ret
push
mov
adc
add
mov
jp
outsb
pusha
dec
les
aas
cmp
stos
rcrl
jl
jo
mov
cmp
gs
or
push
and
ja
imul
cmc
cmp
test
pop
inc
test
pop
fidivrs
test
adc
imul
cmp
rorl
movsb
mov
in
movsb
notb
sbb
jne
mov
mov
mov
cmp
or
xor
sti
popf
inc
inc
sub
sar
push
scas
lret
mov
mov
adc
inc
push
std
pop
arpl
cmp
das
js
into
dec
push
stos
mov
mov
push
sbb
push
push
mov
jnp
pop
movsl
jns
push
fcmovnbe
sub
mov
mov
leave
inc
cwtl
sbb
push
xchg
andl
cltd
scas
insb
mov
movsb
inc
jp
mov
in
je
shll
pop
ret
stc
repz
stc
inc
sub
pop
jno
rol
stos
push
leave
push
cmp
mov
sbb
nop
mov
repnz
adc
movsl
clc
popf
test
pop
and
jns
xlat
cmp
inc
sbbl
popf
mov
cs
push
sbb
jns
out
mov
imul
cmp
outsl
lret
dec
dec
ror
dec
test
mov
pop
sub
ret
adc
inc
cltd
add
cmpsb
xchg
das
mov
or
mov
cmp
ds
lds
fsubrl
outsb
jmp
sahf
cmp
jno
adc
out
xchg
mov
jns
jl
lods
ret
push
dec
inc
aam
dec
ds
inc
cmpsb
dec
xchg
jp
pop
sub
out
mov
jmp
cmpb
mov
mov
dec
and
sbb
lods
push
cmp
sub
lock
push
mov
bound
push
das
jo
flds
je
jmp
xchg
lcall
jge
add
jl
inc
les
dec
mov
and
mov
js
lahf
xor
lret
mov
xor
sub
mov
lcall
aas
ja
idivl
adcb
aas
push
or
leave
fs
jbe
out
stc
repnz
mov
nop
sub
xchg
lahf
fcomip
add
mov
dec
inc
adc
cli
xor
je
push
lcall
into
push
nop
aas
lret
imul
loop
repz
testb
inc
mov
daa
insb
ret
daa
pushf
out
stos
jno
jmp
addb
sbb
push
add
iret
mov
or
jo
fwait
enter
add
push
test
mov
add
popf
xchg
xchg
jge
ds
sbb
roll
cmp
mov
cmp
pop
sbb
out
pop
mov
pop
aaa
jb
imul
cmp
jno
fisubl
repnz
mov
xchg
add
mov
sbb
jg
add
int
jl
mov
inc
add
lods
xlat
scas
sbb
push
enter
scas
gs
adc
pop
cs
nop
repnz
loop
jmp
cmp
sbb
sbb
jo
sbb
inc
jecxz
fisubrl
scas
mov
pop
test
cmpsb
std
add
xchg
pop
push
lret
cmp
data16
push
adc
into
ds
cmpsb
mov
pop
dec
dec
das
test
daa
fildl
into
les
ja
mov
inc
or
inc
mul
xchg
dec
jne
mov
dec
mov
mov
push
or
and
jb
jmp
or
fnsave
mov
and
in
orl
push
pop
ja
jmp
orb
dec
rclb
xchg
ret
aad
xchg
xchg
popf
sbb
dec
and
dec
cmpsl
dec
jbe
daa
add
std
cld
imul
shlb
sahf
ret
decb
cmpsl
scas
adc
xchg
mov
adc
enter
in
arpl
sbb
jp
sahf
test
cmp
insl
dec
jbe
in
inc
or
repz
movsl
dec
and
xchg
jp
sbb
das
inc
inc
mov
addl
xor
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
adcb
adc
clc
adc
ret
sub
popa
dec
push
jo,pt
sbb
sbbl
jmp
inc
fnstcw
popf
les
cmp
dec
loopne
dec
xchg
mov
fdivrs
in
push
gs
cmp
push
ljmp
sub
int3
jns
mov
mov
mov
inc
pop
jb
inc
divl
jo
out
push
rol
lock
mov
add
nop
dec
mov
sbbb
fmuls
pop
cmp
push
outsl
cltd
pop
call
fildll
adc
and
insb
pushf
fbld
mov
movsl
ja
repnz
cmpsb
mov
jmp
mov
cmp
loopne
push
pop
mov
jno
mov
mov
in
popa
jns
push
dec
add
mov
mov
add
sbb
repnz
test
daa
adc
xor
clc
movsl
sub
pop
outsl
push
mov
cmp
cmp
dec
inc
jg
test
lcall
repnz
sbb
lods
xor
insb
scas
lods
sub
sbb
xor
and
pusha
mov
xchg
aas
mov
sar
mov
add
add
fprem
dec
inc
xchg
cmpsb
ret
arpl
cmp
in
ret
cmp
arpl
sub
clc
jecxz
cwtl
stos
push
pop
push
xor
or
mov
cmp
fs
jbe
dec
adc
push
aad
loop
xchg
and
imul
xor
or
jo
or
stc
lahf
push
push
pushf
pop
dec
hlt
sbb
add
je
and
cld
xchg
jmp
pop
mov
aam
add
test
roll
stos
xlat
push
mov
nop
sbb
cli
and
mov
clc
mov
mov
ss
mov
mov
sarb
add
pushl
in
mov
mov
fdivl
jnp
out
jp
mov
sahf
jge
pop
int
into
add
jne
sub
jge
sbb
cmp
mov
dec
dec
inc
stos
popf
dec
lock
fwait
adc
in
div
or
ret
int3
cmc
lret
mov
sbb
push
inc
lods
push
bound
adc
mov
sbb
xor
mov
sub
stos
inc
jge
test
pusha
or
inc
std
pusha
pop
mov
test
add
jmp
cli
push
movsb
and
inc
sbb
lahf
lret
xor
out
pop
clc
jge
insl
lcall
push
out
ja
iret
jns
fs
fs
jecxz
push
inc
in
cwtl
add
push
sarb
stos
cmpsb
ret
int3
ficoms
cli
jle
lock
out
lods
inc
adc
push
shlb
scas
jmp
xchg
ffree
sbb
sbb
loope
roll
jl
mov
jmp
add
js
inc
push
adc
sbb
scas
jnp
jl
xchg
test
and
lock
mov
sub
and
and
pusha
scas
adc
or
xchg
xchg
out
shlb
dec
shrl
inc
ret
pop
jae
pushf
pop
lret
in
xor
fs
cmpsb
mov
xchg
add
mov
push
rolb
ret
fndisi(8087
and
cmp
imul
jp
push
bound
pusha
out
inc
xor
adc
cld
pop
and
inc
or
jmp
outsb
xor
scas
jecxz
mov
adc
lods
cmpsl
ja
inc
xchg
lret
sti
jo,pt
push
inc
mov
in
jecxz
pop
adc
adc
jmp
jns
cmp
adc
lods
adc
cmc
mov
or
mov
fdivrs
add
andb
stos
lret
lock
test
inc
push
lret
xchg
lahf
jne
in
jp
dec
inc
pushf
ret
loope
loop
xchg
add
pop
mov
lret
push
shr
xor
mov
adc
fcomip
fsubs
xchg
inc
and
or
dec
rcrl
xchg
aad
mov
mov
sbb
shl
jecxz
and
push
lock
test
pusha
fisttps
dec
fidivrl
jg
xor
shl
andl
pop
cmc
jl
jo
mov
addl
mov
adc
scas
shrl
dec
pop
mov
shlb
mov
jl
hlt
xchg
repnz
test
and
orl
stos
push
gs
cwtl
test
jae
ss
xchg
mov
pop
fldt
mov
popa
roll
std
jb
jno
cwtl
add
in
add
aas
nop
inc
cmpsb
sbb
xchg
dec
pop
scas
int3
test
fisubrl
cwtl
mov
sbb
test
outsb
mov
mov
lcall
mov
mov
xchg
xchg
or
mov
xchg
shll
pop
dec
in
or
ret
mov
fnsave
cmp
sub
fimuls
in
adc
in
pop
jge
mov
jge
and
xor
and
andb
scas
xchg
hlt
test
xlat
xchg
dec
xor
ds
mov
or
fldl
divl
jae
push
jg
xchg
mov
dec
xchg
push
rcll
and
movsl
pop
add
aaa
insb
push
rcrl
pop
shlb
push
lods
mov
push
rolb
xlat
or
es
shll
cmp
mov
xchg
push
inc
fimuls
sub
sub
aam
ljmp
mov
fstpt
pop
sbb
popf
jecxz
sarb
pop
sbb
cmp
inc
jno
outsl
add
or
jbe
add
push
mov
mov
imul
jbe
inc
outsl
js
test
insl
xor
filds
pop
bound
ds
out
sub
adc
dec
sbb
inc
outsl
bound
loop
and
cltd
xor
xlat
daa
add
sub
mov
insl
outsb
call
xchg
out
daa
mov
push
jp
cltd
cmp
xchg
hlt
pop
js
outsl
lret
adc
xlat
push
out
out
testl
cmp
cs
push
push
and
jo
mov
mov
push
mov
ds
xchg
mov
mov
inc
pop
stos
adc
sub
jno
pop
stc
popf
sbb
cmp
fidivs
jne
aad
daa
pop
daa
test
dec
push
clc
sub
pop
aaa
mov
xor
mov
xor
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
js
movb
adc
push
clc
adc
fcmovb
outsl
add
xchg
mov
ljmp
mov
xchg
in
mov
mov
add
enter
mov
pop
mov
packsswb
je
adc
sbb
sbb
out
jmp
push
divb
sub
mov
loope
clc
pushf
andb
sub
mov
mov
and
filds
fsts
fs
jo
loop
cs
pop
mov
mov
jb
out
call
mov
pop
rcrl
insl
pop
in
mov
dec
or
jmp
outsl
fldenv
data16
and
jg
flds
inc
andl
mov
jle
fs
arpl
aad
fstpt
or
pop
or
add
roll
push
daa
popf
stos
lret
dec
sti
adc
aaa
mov
mov
xchg
xor
ds
dec
push
sbb
fadds
aam
movaps
je
and
stc
fisttps
sub
pop
inc
test
fcmovnbe
adc
mov
jb
adc
push
mov
addr16
inc
mov
dec
inc
outsl
cmp
nop
or
sub
divl
or
jp
adc
iret
ffree
loopne
test
add
sbb
dec
sub
flds
fs
ss
adc
adc
mov
mov
mov
mov
loop
jb
repnz
sub
xchg
test
loope
mov
pusha
scas
sub
mov
xor
cmp
mov
icebp
nop
dec
lods
and
xchg
sub
jne
dec
loop
icebp
sbb
xor
inc
xchg
out
mov
mov
andl
xlat
out
mov
int3
inc
adc
lods
add
ja
inc
mov
aas
jp
push
mov
pop
jg
and
ficompl
pop
dec
mov
hlt
cwtl
notl
cli
sub
inc
xor
push
loopne
or
cmp
adc
or
or
pop
lock
mov
and
cmp
mov
xor
mov
bound
sarb
cmp
or
shrb
aaa
movsb
cmpb
cltd
dec
aaa
fnstcw
dec
mov
mov
jle
mov
ret
xchg
nop
sub
icebp
insl
in
inc
stos
inc
daa
lret
cmp
lret
lcall
test
xchg
mov
movsl
cmp
or
add
cmp
repnz
pushf
lock
mov
lret
ror
add
aas
lcall
sahf
jge
mov
data16
fs
nop
cmp
into
repz
push
hlt
repnz
enter
popa
jl
sbb
dec
shlb
stos
js
loopne,pn
jbe
ret
mov
jae
fsubl
jmp
movsb
dec
test
dec
mov
lret
nop
sbb
mov
jecxz
cmp
int
std
in
cmpsb
aad
stos
popa
push
jno
push
es
pop
or
movsb
repz
data16
fdivl
mov
xchg
adc
dec
lahf
clc
push
mov
ror
push
cli
loop
scas
loop
cmp
jo
pop
mov
add
mov
cwtl
fwait
sbb
lea
enter
cmc
mov
popf
adc
dec
in
dec
out
xchg
push
insl
xlat
lea
iret
cmp
aaa
lods
xchg
dec
inc
add
lahf
lcall
cmp
sahf
sti
push
mov
dec
adc
lret
xor
or
nop
xchg
nop
mov
cmpsb
pop
cli
mov
inc
repnz
fisttpll
sti
outsl
popf
xchg
xchg
negb
mov
mov
push
fs
pushf
cmp
add
inc
hlt
cmp
cmp
movsl
adc
rol
insb
icebp
insb
xchg
jno
lret
es
popf
jl
nop
sub
cwtl
xchg
das
lcall
fstl
push
cli
cmc
mov
and
test
std
xor
ja
xor
incl
cmp
scas
shll
adc
movsb
clc
pop
in
out
inc
jge
or
and
sub
sbb
xor
insl
mov
daa
jecxz
xchg
rorl
sar
cmp
dec
movsl
dec
pop
cmp
cld
mov
sub
repnz
fidivrl
inc
sbb
fsubrp
adc
in
xor
insl
nop
pop
sub
enter
cmp
loope
pop
or
dec
test
ja
dec
push
inc
rclb
pop
fstpt
xor
xlat
or
shrb
ret
mov
jge
decb
inc
jne
stc
decb
pop
arpl
loop
pusha
sub
imul
scas
add
push
repz
add
sbb
out
dec
imul
mov
shl
shrb
pop
sbb
mov
hlt
dec
adc
call
adc
cs
incl
jp
push
push
popf
mov
insl
in
pop
aam
cmp
movsb
pop
rorb
hlt
dec
scas
pop
fld
and
lods
ret
fsubl
pop
adc
sbb
xchg
loop
lods
adc
loop
jecxz
das
lds
int
out
outsl
clc
mov
and
dec
shl
in
mov
std
mov
adc
adc
stos
mov
lahf
mov
pop
mov
nop
jle
pushf
jle
aaa
movsl
add
test
leave
fnstenv
pop
imul
std
xor
stc
std
xor
cwtl
fwait
into
mov
sub
jmp
jne
lahf
aas
lods
xchg
inc
ja
xor
xchg
push
movsb
arpl
pop
mov
adc
sub
pop
clc
push
push
mov
int
jl
sub
ror
push
jle
xor
in
gs
ljmp
and
mov
push
and
inc
ja
arpl
subb
shl
out
in
out
push
jno
ja
shlb
insl
daa
out
cmp
ret
xchg
cmp
inc
rclb
imul
lret
loopne
jae
out
int
pop
cmpsl
stos
cltd
es
shrl
push
or
rol
xchg
faddl
add
adc
dec
mov
pop
push
pop
loop
xchg
inc
ret
and
daa
dec
push
repnz
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
or
adc
push
clc
adc
xchg
pop
lahf
sti
int3
scas
mov
test
add
mov
cwtl
jb
cmp
clc
xchg
push
inc
push
adc
lret
or
inc
push
mov
cmp
xchg
scas
js
add
sahf
jnp
sbb
mov
jne
std
orl
ljmp
ljmp
lcall
push
adc
mov
cmp
xchg
ljmp
cmpsb
adc
pop
ret
dec
mov
and
push
sbb
fisubrl
loope
pusha
push
leave
cwtl
sub
mov
jp
sub
jecxz
pushf
xlat
les
dec
push
call
repz
adc
in
mov
arpl
xchg
jnp
mov
push
xchg
arpl
andb
push
add
imul
pop
push
dec
mov
jnp
push
lock
xor
sbb
jl
xchg
push
jg
leave
mov
rorl
push
pop
les
push
pop
jl
add
scas
and
xchg
pop
dec
and
jnp
enter
cltd
adc
cmp
xorl
cmp
lret
jno
notl
enter
mov
mov
adc
daa
add
adc
jns
jns
adc
repz
adc
and
mov
ret
sahf
cmc
cmp
inc
mov
mov
and
je
pop
fcmovne
push
mov
into
aad
cmp
popf
mov
hlt
pop
inc
popf
mulb
movsl
movsl
push
mov
add
add
sbb
or
popf
and
mov
mov
push
xor
idivl
sahf
xchg
jno
test
test
mov
repz
ret
or
pop
mov
in
cwtl
sub
or
lahf
fsub
sub
xor
mov
fcomps
mov
outsl
jne
cld
decl
nop
jl
pusha
mov
push
scas
jecxz
scas
in
test
or
sahf
aad
sub
adc
xchg
out
clc
xchg
push
mov
idivl
pop
mov
aam
mov
cmp
mov
mov
sbb
inc
addr16
xor
testl
jo
add
aad
lret
popl
mov
loope
in
lret
pop
in
ret
insb
outsl
dec
mov
scas
add
dec
outsb
jmp
addr16
add
in
fimull
cmp
les
jno
mov
pop
mov
out
jle
and
sub
sub
push
dec
jns
xchg
and
mov
mov
adc
mov
cmp
xlat
insb
imul
test
sub
pop
fldenv
inc
lock
jnp
xchg
push
pop
cld
adc
sbb
lahf
push
bound
xchg
insl
mov
jge
push
adc
in
loopne
icebp
sbb
sbb
addb
mov
in
push
lods
add
cmp
in
add
xor
pop
sti
or
call
pop
js
pushf
insb
test
mov
inc
call
in
mulb
mov
ret
popa
je
lock
and
jl
fcos
pushf
jg
addr16
les
mov
or
incl
mov
sbb
and
mov
cmpsl
pop
inc
xor
push
daa
mov
xchg
and
adcl
popf
or
xor
stc
pop
shll
sub
shrl
sti
push
adc
and
mov
test
mov
add
ret
ds
jne
xor
leave
fldt
lods
xchg
scas
scas
mov
adc
mov
test
aaa
or
jbe
jbe
mov
xchg
mov
or
std
icebp
mov
or
pushf
fldt
xchg
lret
and
in
outsb
in
ret
loop
sahf
mov
adc
jae
ret
cmp
ljmp
dec
test
jle
mov
fcoml
cwtl
les
test
mov
xor
mov
filds
cmp
jbe
lods
jne
ret
adc
cwtl
sub
pusha
fisubs
fildl
jecxz
xor
or
mov
cltd
dec
jle
call
out
ret
mov
inc
cmp
insb
out
int3
cmpsl
push
dec
fidivl
test
dec
mov
mov
jle
jl
sbb
and
pop
cs
repz
adc
mov
and
aad
jg
push
arpl
ret
call
sub
xchg
sbb
mov
subb
inc
stc
and
outsl
xchg
int
hlt
jp
arpl
mov
mov
cmp
ret
dec
scas
dec
cmp
lret
ds
mov
pop
cmp
and
jp
push
gs
hlt
lea
adcl
jmp
inc
xchg
cmp
rorb
push
mov
aam
or
pusha
jmp
mov
mov
cmpsl
les
or
aas
and
xlat
jl
movsl
mov
sub
inc
cmp
and
add
push
cmp
dec
fdivrl
aam
out
mov
aaa
add
xor
mov
aas
sbb
repz
jmp
ja
xor
dec
in
cmpsl
shr
pusha
push
loop
add
inc
call
aam
popa
sub
xor
sbbb
jbe
ret
int3
and
xchg
sub
sub
add
arpl
push
cs
and
js
enter
cmp
jnp
inc
scas
dec
test
add
shlb
sbb
out
inc
shrb
mov
mov
xchg
es
or
rcll
or
in
loopne
mov
cmp
sub
push
daa
xlat
je
xchg
push
push
test
pop
dec
rolb
pop
cmp
or
les
xchg
data16
in
adc
pop
das
fildl
pop
scas
je
pushf
popf
jmp
ja
and
sti
aad
aam
shll
jb
push
mov
fidivs
and
movl
mov
jmp
add
mov
sbb
dec
ss
xor
push
clc
adc
inc
mov
push
sti
xlat
pusha
orb
adcb
mov
mov
fidivrs
xor
test
sahf
imul
mov
cmp
xor
jbe
mov
lods
insb
mov
jo
fs
out
jns
xor
mov
xchg
jge
xchg
bound
out
xchg
adc
movsl
and
cmc
cmc
bound
and
data16
pop
outsl
hlt
jns
popf
lcall
repnz
push
dec
xchg
mov
std
out
push
rclb
loope
int
xchg
inc
sti
inc
or
subb
sbb
sub
inc
aad
mov
in
ret
clc
out
das
push
push
addr16
xchg
out
jmp
jmp
mov
fisttpll
stos
ret
or
pop
xchg
sbb
mov
add
xor
loope
add
stos
fcmovne
or
jne
jae
jo
outsl
arpl
pusha
jnp
xor
push
mov
cmc
mov
or
dec
ds
lahf
icebp
inc
adc
subl
mov
hlt
mov
pop
cmovp
xchg
in
pop
push
pusha
sbbb
xchg
jle
push
arpl
andb
push
mov
xchg
mov
mov
xchg
dec
mov
js
dec
xchg
dec
cmp
enter
lret
xchg
ret
testb
test
cltd
or
dec
into
jecxz
test
leave
shl
jnp
sarb
popf
enter
and
cmp
repz
jbe
adc
inc
push
test
lods
popf
cmp
nop
sti
stos
aas
jecxz
pop
int3
inc
xor
lcall
cmp
pushf
mov
mov
jl
adc
pusha
mov
push
pop
xchg
push
pop
insl
inc
out
mov
inc
mov
mov
stos
sub
mov
or
mov
sarb
mov
mov
and
pop
and
dec
push
pop
jmp
lret
dec
mov
xor
loopne
in
addb
mov
fwait
inc
rcr
or
sub
mov
imul
sub
pop
pop
xchg
mov
mov
les
in
fsub
cwtl
sbb
pop
and
xor
icebp
xchg
jne
or
sbb
xchg
bound
push
mov
es
xor
lods
mov
cmp
sbb
cmp
jmp
xchg
sub
in
out
nop
in
push
sbb
dec
mov
jecxz
icebp
push
cs
rcl
jp
fs
dec
mov
jns
jnp
xor
pusha
mov
aas
mov
das
sbb
mov
fnstsw
pop
pop
rcl
mov
xchg
pop
mov
out
mul
outsb
out
sbb
bound
fistl
xchg
movsl
jae
mov
shlb
imul
fbld
aaa
lahf
fildll
xchg
loop
lahf
mov
lds
sub
inc
cmp
mov
in
fwait
push
adc
xchg
adc
ret
and
mov
test
sbb
push
or
dec
pop
jmp
and
cmpl
aaa
sbb
fstpt
pushf
jg
mov
mov
xor
jo
cmc
shlb
xor
adc
fisttpl
lcall
jge
push
pop
xor
cltd
in
mov
mov
movsb
lods
lret
mov
test
push
in
and
inc
xor
sbb
add
xor
sbb
enter
xor
mov
imul
int
sub
cmpsb
xor
fs
mov
ja
jbe
mov
lods
shl
lods
pop
mov
mov
and
cmp
dec
ret
ret
sbb
and
incb
inc
addl
jmp
xchg
addr16
dec
and
mov
dec
jge
mov
dec
mov
mov
push
and
test
jmp
test
std
dec
mov
push
cmp
sbb
xchg
js
ret
test
mov
stos
stos
jnp
mov
fistpl
insb
pop
mov
lret
mov
fldcw
xor
mov
insb
dec
shll
mov
sub
ret
jle
jns
jne
mov
addr16
subl
inc
es
sbb
xlat
mov
sub
or
popf
dec
cmp
mov
jbe
push
cltd
xchg
xor
and
lods
insb
sbb
fildl
insb
testb
dec
pop
push
sbb
test
xchg
fwait
xchg
call
filds
push
sub
lea
push
fstl
lahf
xorl
push
xor
ja
imul
sahf
pop
xor
sbb
jecxz
xor
movsl
sub
xor
cmp
iret
or
test
data16
cmp
movl
lock
movsb
out
shll
rclb
inc
es
adc
inc
dec
push
push
xchg
push
and
add
mov
or
ja
mov
pop
add
mov
push
loopne
into
lcall
jne
and
sbb
lcall
sub
adc
sbb
mov
sub
lret
data16
out
mov
mov
dec
stos
jb
add
xchg
je
popa
mov
or
addr16
or
mov
push
cmp
bound
mov
aam
and
mov
sbb
ljmp
pop
xchg
das
mov
mov
xchg
dec
ljmp
int
arpl
ljmp
lock
lds
addr16
call
dec
por
roll
mov
dec
jl
mov
inc
xchg
mov
or
inc
lret
outsl
jmp
or
shlb
jo
out
aad
mov
push
movsb
ljmp
je
aas
mov
sbb
in
push
cld
xor
mov
shl
push
mov
cld
jg
and
fadd
lds
sub
add
jo
loop
xchg
cmpsb
movsl
jb
dec
sti
push
es
je
fs
outsb
inc
std
and
cmp
sahf
push
or
in
jae
cs
xchg
js
dec
lcall
lods
cltd
pop
cmp
and
outsl
jecxz
testb
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
movsl
frstor
mov
push
shlb
mov
loopne
fcomps
je
test
or
iret
ds
mov
dec
push
imul
push
jno
xor
and
rorb
xchg
stos
call
push
int3
dec
fmull
negb
popa
cmp
mov
push
and
jne
add
sub
push
cmc
inc
jno
mov
and
inc
sub
fdivl
push
mov
sbb
adc
push
xor
mov
push
xchg
inc
in
pop
inc
arpl
leave
hlt
scas
xor
and
pop
cmp
sbb
jmp
cmp
sub
add
repz
xchg
pusha
inc
or
add
and
cmp
mov
mov
movsl
scas
sub
xchg
pusha
lea
pop
sysenter
imul
mov
xor
call
test
ret
repz
rorb
in
leave
xor
les
inc
decb
mov
pusha
pop
adc
mov
std
sbbb
sub
daa
imul
xchg
fadds
insl
ret
rolb
xchg
mov
test
mov
lret
push
rolb
pop
insb
sub
bound
pop
aaa
in
pop
adc
fdivr
out
les
jg
push
lret
in
mov
sbb
jns
xchg
add
pop
movsl
push
or
repz
mov
test
inc
push
lods
pop
cmp
or
filds
jg
pusha
cwtl
mov
add
jecxz
fldl
mull
and
ds
lcall
cmp
adc
lcall
mov
orb
imulb
and
push
data16
dec
sub
cmc
das
mov
enter
cmp
add
iret
cmp
mov
xor
pop
enter
bound
aas
xor
fstl
or
and
adc
jmp
aad
mov
push
arpl
lods
fs
insl
push
jb
dec
jmp
push
das
fs
scas
mov
scas
adc
popa
add
dec
das
psraw
or
jl
aad
jge
dec
add
and
pop
mov
jbe
pop
out
out
dec
and
sahf
scas
shr
pop
jl
xchg
leave
sets
mov
xor
cli
sub
in
push
cltd
xchg
imul
lret
adc
xchg
push
outsl
jp
pop
cmp
and
in
push
mov
or
pop
stos
andb
aam
inc
add
xchg
cmp
sarb
stos
stos
repnz
fwait
ljmp
mov
inc
push
stos
cwtl
mov
pop
in
jge
jl
arpl
mov
mov
rolb
sbb
lock
ss
and
pop
mov
jns
mov
dec
filds
daa
inc
mov
add
fdivrs
cmpb
stos
in
ss
and
je
xchg
sbb
xchg
rcrb
xchg
cmpsb
pop
jmp
xchg
movsb
mov
xor
or
add
rcrl
scas
movsl
icebp
xor
fistl
mov
aas
movsb
push
adcl
mov
inc
or
jge
imul
bound
inc
adc
pop
ds
mov
repz
dec
xchg
lret
cltd
adc
lret
incb
sub
loop
cmpsb
add
dec
jbe
mov
and
inc
loop
pop
ret
cmp
mov
push
icebp
mull
imull
pop
jp
cld
cld
movsl
sbb
movsb
jnp
inc
mov
fwait
jo
inc
ss
lcall
sbb
add
test
insb
rolb
mov
into
pushf
mov
lret
sub
cmp
ror
sar
push
push
ljmp
int
fwait
je
xor
fwait
xchg
cmp
insl
int
lcall
inc
clc
push
fadds
inc
js
test
add
bound
andnps
insb
shll
mov
sub
clc
sbb
lods
mov
subb
aad
shrb
xor
dec
xchg
sub
ljmp
cwtl
and
sbb
xor
cmp
test
jge
add
fwait
lds
ret
or
mov
sbb
mov
es
jo
adc
test
sbbb
jp
cwtl
mov
lock
fs
mov
and
lcall
jbe
xlat
rcrl
pop
dec
push
loopne
ds
arpl
mov
imul
in
and
out
sbb
sub
and
sub
mov
imul
xchg
adc
int3
jmp
cmp
cmp
subl
movb
test
aaa
es
std
dec
jecxz
mov
add
adc
mov
cmp
imul
jno
mov
xchg
jmp
gs
inc
loop
add
lahf
and
cmp
repz
stc
jl
outsb
in
inc
das
xor
xor
mov
popf
mov
mov
shlb
cmp
mov
mov
shrl
es
xchg
mov
movsl
je
lock
cmpsl
imulb
push
int
mov
jmp
test
into
mov
push
pop
shrl
pop
pop
sub
mov
cmc
xor
in
inc
mov
jle
mov
loop
inc
dec
popa
pop
lret
lret
add
imul
pop
sub
imul
test
xchg
cltd
out
out
jp
dec
xchg
xchg
inc
push
insl
mov
lock
insb
cmp
and
rcrb
fstl
mov
xchg
scas
xor
mov
or
hlt
cmp
loope
push
xchg
inc
jmp
inc
ret
mov
xor
cmp
pusha
sahf
push
sbb
pop
xchg
push
cld
push
aam
mov
addss
xchg
mov
cmpsb
mov
cmp
in
cltd
mov
add
xchg
sbb
cltd
pop
xchg
xor
setg
mov
xchg
adc
pop
cmp
xchg
imul
adc
icebp
mov
mov
popa
hlt
clc
mov
mov
sti
testl
imul
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
adc
sbb
adc
jmp
aam
lds
cld
mov
mov
and
sbb
jbe
in
inc
out
cmp
cltd
pop
inc
mov
frstor
pop
int
iret
push
push
xor
add
loop
inc
lret
add
sbb
push
pop
mov
outsl
ja
mov
in
mov
test
dec
int3
movsb
adc
jl
mov
push
mov
aam
outsb
cs
sbb
movsl
sbb
fdivs
adc
or
jmp
mov
cld
push
push
repz
enter
jae
and
popf
int3
cwtl
or
mov
in
inc
pop
popa
pop
sbbl
out
outsb
push
test
gs
dec
pushf
push
xor
hlt
mov
out
into
jp
push
addr16
in
outsl
out
pop
fcomp
out
and
or
jnp
adc
inc
jmp
outsl
pop
js
hlt
add
je
xlat
pop
ret
adc
jp
in
loope
test
add
cmp
sbb
add
inc
jns
orb
mov
inc
rorl
dec
insl
pop
test
jae
mov
dec
push
mov
leave
fimuls
addr16
popf
jne
cmp
insl
pop
lods
mov
fcompl
and
push
iret
mov
dec
mov
adc
out
repnz
jp
sub
xor
imul
pop
inc
loope
xorl
scas
popa
jns
pop
outsb
add
loop
jecxz
pop
leave
adc
mov
push
sar
xor
mov
dec
push
jns
or
int
test
outsb
and
insl
push
notl
insl
dec
repnz
add
popa
jge
push
jne
inc
out
mov
je
outsb
pop
dec
mov
jmp
push
pop
mov
pop
or
mov
mov
sar
jnp
fstl
sub
mov
cwtl
or
sub
lds
scas
pop
sbb
popa
xchg
sub
xchg
dec
dec
or
mov
pop
test
pusha
jno
or
pop
xchg
outsl
adc
inc
jecxz
mov
je
jge
fistps
sbb
jge
or
test
lods
xor
mov
sub
lea
sub
jle
in
je
push
cmpsb
cli
pop
movsl
cld
cmpsb
aas
xchg
xchg
push
cmc
cmpsl
lods
movsb
inc
jge,pn
push
xor
aam
dec
out
push
ror
pop
aas
push
cld
scas
fldenv
mov
movsl
lods
mov
mov
or
lds
jnp
shrb
aas
sbb
outsb
jmp
jbe
insb
add
mov
mov
pop
je
push
and
cs
cmp
outsb
ret
gs
cmpsl
clc
cmc
stc
fadds
enter
push
roll
cld
pop
lahf
sub
movsb
sub
push
lds
das
xchg
fistpl
mov
pop
fistpll
in
das
test
je
lret
imul
in
xor
adc
mov
ss
rolb
filds
and
sub
and
les
test
ss
fsubrp
pop
inc
xchg
sub
out
jo
push
test
and
lods
adc
imul
cld
out
inc
out
shl
xor
dec
xchg
pusha
mov
jae
test
push
xor
push
out
loope
imul
and
or
adc
push
stos
into
push
scas
lret
cs
dec
inc
xchg
mov
nop
adc
xchg
daa
repnz
push
clc
sbb
push
hlt
cmp
outsl
sbb
dec
cli
sub
dec
xchg
rolb
mov
xlat
jno
mov
xchg
jb
mov
or
jb
and
mov
jge
mov
in
mov
push
lock
push
lret
pop
orl
sub
ret
lods
or
jle
popa
popa
add
fiaddl
in
pushf
jge
cld
fwait
movaps
shrb
xor
sub
insl
push
pop
mov
add
and
jne
adc
add
xor
stc
push
rol
daa
sahf
or
call
or
xlat
lret
jp
in
sbb
sub
xchg
lret
xor
or
cmpsl
jno
xchg
mov
fsubrl
lret
or
mov
pusha
mov
lods
ds
xchg
jge
divl
mov
and
mov
lods
push
mov
test
xchg
outsl
ss
addr16
mov
xor
int3
mov
xchg
mov
mov
mov
cs
pop
cld
popf
mov
mov
insb
xor
add
mov
cltd
xchg
jae
add
mov
addl
mov
dec
popf
das
dec
mov
pop
out
ja
in
jmp
cmpsl
imul
mov
mov
cmp
cwtl
push
push
mov
movsb
movsb
sbb
popf
lods
fs
sbb
int
repnz
test
xchg
sbb
into
in
push
cmp
test
mov
and
test
cmp
sub
mov
cli
xchg
mov
sbb
je
adc
fwait
add
movsb
mov
xchg
xchg
cmp
clc
mov
pop
lods
enter
insb
das
sub
sbb
lahf
push
loopne
addr16
div
hlt
xor
adc
xor
clc
cld
arpl
lahf
pop
ret
jo
pop
adc
cmp
clc
loopne
push
push
jns
adc
dec
inc
xchg
push
push
sbb
out
add
icebp
jne
xor
mov
dec
addr16
inc
mov
xchg
inc
xor
insb
repz
inc
sbb
sbb
push
or
inc
sti
lcall
insb
sub
insl
outsl
push
xorl
cli
pop
inc
shl
and
mov
test
dec
cmp
divb
loope
add
in
cltd
sbb
ret
les
fmul
dec
shll
add
lcall
ds
mov
leave
mov
shrb
mov
enterw
daa
mov
jne
push
jnp
fstpl
scas
adc
xor
stos
sub
aas
leave
popa
jge
into
add
nop
arpl
daa
lds
movsb
mov
shrd
shr
mov
mov
xor
shl
jmp
add
xchg
rorb
addr16
add
adc
jl
testl
push
inc
sub
mov
sub
cltd
mov
sub
push
inc
mov
adc
repnz
leave
imul
popl
test
scas
xchg
icebp
sahf
push
fs
xchg
je
popf
out
fildl
add
ja
dec
and
lcall
push
jns
movsb
jl
mov
out
rcrb
aas
dec
dec
das
mov
in
repz
sbb
mov
outsb
shll
inc
adc
in
hlt
push
fists
xor
dec
negb
test
jmp
dec
mov
lret
jbe
cmp
lea
sub
pop
push
test
or
inc
mov
arpl
xor
push
fs
dec
or
ljmp
push
subb
das
jns
add
popl
xchg
test
xchg
mov
push
adc
or
js
xchg
pop
clc
inc
cmpsl
in
out
dec
jmp
cmp
ret
fs
cmp
sbb
jne
mov
out
ret
ljmp
xor
leave
daa
inc
imull
pop
test
cmp
pop
rolb
push
lock
xchg
adc
subl
pop
cli
dec
push
fisttpll
in
mov
xor
pop
fisubrl
push
imul
mov
dec
fdiv
jmp
mov
ljmp
cbtw
push
aaa
pop
pop
sub
scas
jg
faddl
jbe
mov
cmp
inc
mov
jp
mov
push
divl
dec
jne
ja
icebp
pusha
rclb
xchg
loope
mul
pop
add
mov
add
addl
sub
mov
rcll
scas
movsl
jbe
fstps
push
scas
adc
std
push
add
jmp
dec
out
mov
je
inc
test
ljmp
pusha
push
aam
mov
leave
repnz
pop
sub
sub
jle
scas
and
pop
into
adc
cmp
outsb
inc
cwtl
cmp
into
enter
stos
fisubs
adc
xor
aad
lods
call
nop
dec
inc
push
loopne
add
add
loope
xlat
outsl
scas
fists
mov
add
sub
neg
sbb
fwait
xchg
loopne
shl
inc
pop
xor
clc
jo
and
xor
in
loope
shll
xor
cs
nop
and
fs
lahf
cld
xchg
sar
nop
push
mov
jg
cli
aam
inc
jne
in
into
pop
pop
push
push
dec
in
aad
and
mov
cmp
or
repz
js
ret
cli
lock
adc
mov
push
and
sub
call
dec
clc
ret
xchg
fisttpl
loopne
and
adc
in
mov
jg
sub
dec
add
fchs
xchg
sbb
mov
cmpl
in
mov
enter
jecxz
mov
mov
xchg
pop
pop
or
fistps
or
mov
push
pop
sbb
testb
sbb
ret
add
dec
pop
fs
addl
jmp
loop
ss
insb
and
sbb
or
ja
sub
adc
or
push
iret
fdivrl
and
out
xor
cwtl
or
and
or
xchg
mov
push
cmp
sbb
mov
dec
mov
and
incl
stc
mov
mov
mov
mov
inc
mov
jno
mov
sub
dec
leave
loope
and
pop
jae
sbb
push
push
lret
test
rorb
fdiv
cmpl
sub
fdivrs
fsts
jns
xor
daa
mov
call
xor
scas
cld
xchg
mov
mov
insl
jg
repnz
lods
fs
repnz
and
ficompl
aaa
ficomps
fdivr
sahf
jmp
inc
mov
nop
xorb
rcrl
pop
mov
mov
sbbb
pop
ds
jns
sub
sub
mov
clc
cmpsw
dec
dec
sbb
sbb
test
xor
stos
jns
fs
lods
ds
jecxz
dec
and
adc
jmp
and
push
ret
mov
and
fwait
orl
pop
lods
mov
cmp
in
insl
push
stos
xchg
ds
cmc
jbe
jb
lds
pop
xchg
jmp
lcall
and
imul
ss
shll
das
popa
test
shlb
outsl
push
jae
notb
frstor
or
xchg
and
inc
mov
rcrl
xchg
in
leave
dec
fcompl
xor
imul
push
add
inc
inc
pop
push
arpl
cmpl
add
aad
sti
pop
popa
jnp
add
inc
lret
aad
pop
into
arpl
sub
pop
sar
sub
sbb
imul
imul
add
movsb
push
jge
sbb
sbb
sti
sbb
and
pushf
xor
inc
jnp,pt
scas
cltd
jno
and
arpl
imul
stc
sbb
inc
push
mov
out
and
gs
ss
or
mov
in
push
aas
jne
loope
cwtl
dec
jle
cs
nop
add
repnz
movsl
push
sti
mulb
push
fldt
icebp
stos
mov
mov
js
sub
inc
pusha
arpl
xor
xor
fsubrs
cltd
pusha
jge
sub
fistpl
aas
in
add
insl
or
and
lcall
and
xchg
inc
pushf
sbb
lods
pop
aam
cmp
loop
sbb
or
into
cmp
dec
scas
mov
mov
insl
out
pop
mov
inc
daa
rolb
push
pop
mov
pop
std
xchg
rclb
push
cli
insl
pop
cmc
xchg
inc
sar
enter
das
xchg
fmuls
pop
mov
lret
imul
add
rorl
xor
cmp
in
lds
or
test
mov
imul
cmpsl
xchg
negl
imul
test
ss
loope
cmpsl
in
adc
and
es
jg
aas
pop
sbb
shll
push
jge
push
lret
shlb
test
sahf
push
push
je
loop
xor
or
lea
mov
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
pop
aam
adc
push
clc
adc
ljmp
mov
ljmp
fmuls
push
jae
and
cs
sbb
sub
aad
mov
lcall
icebp
jl
inc
xchg
sbb
lahf
stc
and
fstps
loope
xchg
add
jbe
pop
adc
adc
mov
pushf
aaa
out
mov
movsl
push
test
cmpsb
pop
xor
dec
clc
push
lock
jp
jno
cmp
push
incl
sahf
int3
and
dec
sbb
jnp
dec
rol
in
mov
icebp
scas
iret
fnstsw
jb
mov
dec
cs
xchg
test
pop
jge
ljmp
mov
fcompl
cmpsb
pop
sub
call
and
adc
movsl
or
pop
xchg
xor
jno
mul
daa
adc
xchg
sbb
jb
jbe
inc
jge
or
cwtl
rcrl
lret
arpl
xor
lret
mov
popa
cmp
cs
sbb
scas
fcoms
jp
cli
aaa
mov
inc
mov
dec
or
jp
jmp
pop
pop
out
xor
fnsave
xchg
jmp
aad
add
ljmp
sub
out
mov
pop
push
inc
je
mov
outsb
xor
jno
cmpl
pop
pop
or
fndisi(8087
lds
popf
add
jns
pop
pusha
adc
xor
testl
mov
aam
sar
rcll
lret
pop
sub
fisubs
inc
mov
jecxz
push
and
mov
out
fistpll
pop
mov
mov
jp
jnp
arpl
push
lcall
mov
movsb
imul
push
or
cmp
or
mov
fnstsw
aas
scas
clc
fwait
mov
xchg
leave
clc
cltd
inc
mov
std
lcall
in
repz
fwait
mov
jge
jle
inc
mov
popf
jge
fmul
xchg
in
ja
dec
mov
pop
xchg
cmp
cmpsb
jne
pop
jge
mov
mov
cmp
test
gs
imul
jg
add
aaa
push
mov
rcrl
shr
movsb
cmpsl
fisttps
mov
mov
das
jnp
pop
mov
sbb
test
lcall
es
test
xor
daa
sti
cmpsb
orl
ffree
mov
ficompl
jae
insl
sub
mov
imul
push
pop
outsl
add
push
adc
sbb
fnstenv
push
mov
pushf
ficoml
push
insb
aas
pop
mov
sub
das
outsb
pop
lret
mov
jle
andb
inc
pmuludq
gs
lret
pushf
in
stos
outsl
pop
fucomp
push
inc
push
dec
insl
cmc
sub
or
and
mov
repz
or
and
push
fsubrs
inc
mov
push
xor
scas
sub
test
jg
outsb
cmp
cli
repz
lods
xor
imul
enter
rclb
and
inc
cs
mov
lds
and
mov
pop
xor
jl
loope
sbb
sbb
out
movsl
filds
jmp
test
adc
int
mov
sub
lcall
sbb
nop
mov
jno
mov
fwait
and
inc
mov
xchg
gs
or
cld
popf
aam
xor
push
or
xor
xchg
xchg
inc
or
dec
add
and
mov
mov
pop
mov
fstps
mov
jb
push
xor
xchg
sub
mov
inc
aad
repz
int3
push
xchg
or
je
jo
outsb
lret
out
test
stos
jae
pop
sahf
out
or
insl
lods
pop
cmpsb
push
sub
push
mov
dec
js
add
ljmp
xchg
insb
mulb
in
xor
fbld
xadd
jecxz
popa
lahf
in
dec
lcall
lods
dec
out
cmp
ds
xor
xchg
adcb
das
mov
sti
mov
cmpsb
push
add
lahf
idiv
clc
je
adc
fs
push
incl
mov
fcompl
fsubrs
and
and
sbb
js
imulb
push
daa
cltd
or
mov
fisttpll
add
aaa
aam
mov
in
repz
inc
ret
sbb
aam
enter
sbb
mov
cmp
fnstcw
inc
mov
jl
xor
push
cmp
sub
mov
push
pop
call
ret
cmp
mov
in
sbb
in
mov
int
fimull
inc
xor
hlt
in
scas
cmpsb
imul
sbb
dec
ret
mov
cwtl
lcall
fbstp
call
sbb
out
repz
push
or
xchg
adc
test
or
aaa
int3
push
push
pop
mov
mov
adc
sarb
add
jb
movlps
or
adc
in
fldt
mov
test
in
mov
jl
xchg
mov
jbe
jo
mov
stos
aad
push
stos
in
arpl
mov
idivb
addl
push
adc
jo
nop
inc
sub
sbb
out
movsb
dec
in
cld
xchg
out
or
fsubr
in
push
jg
jle
iret
arpl
aaa
rorb
pop
pop
jecxz
clc
mov
outsl
into
icebp
mov
aad
test
xlat
lcall
and
bound
add
xor
mov
imul
mov
bound
mov
orl
jge
test
and
mov
xlat
sub
mov
stos
mov
jg
mov
sub
lret
xchg
imul
fildll
insl
js
lcall
mov
add
inc
sub
xchg
test
pop
xlat
popf
push
cld
imul
cwtl
and
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
js
adc
adc
clc
adc
fsub
dec
std
jae
fwait
and
insl
mov
hlt
adc
jns
sti
xlat
mov
in
nop
sub
ja
imul
ds
loop
sub
mov
mov
in
mov
insb
cmpsl
movsl
out
inc
movsb
popf
arpl
push
imul
out
mulb
sub
prefetch
push
mov
sbb
mov
aad
out
loope
and
jnp
mov
dec
fisubrs
push
inc
test
mov
out
push
stos
sti
test
sub
push
push
and
addr16
cmpl
adc
mov
clc
shr
push
cmp
cmp
jns
out
incl
fdivl
popf
negb
cltd
int3
xchg
cmpl
jno
adc
loop
pop
iret
mov
dec
call
cmpb
aaa
xor
lret
sub
mov
scas
cmp
mov
push
test
cwtl
sahf
jg
arpl
sub
ss
or
insb
cs
ret
add
pop
adc
add
mov
xchg
aaa
mov
mov
mov
jle
rcrb
stc
test
repnz
scas
pop
nop
add
lret
mov
jb
hlt
dec
cmp
sub
test
add
popa
lds
test
lods
xor
gs
lret
pop
adc
mov
jge
mov
pop
inc
iret
rorl
add
lcall
sub
nop
clc
loope
inc
std
out
or
movsb
mov
rorb
adc
jbe
into
push
outsl
notl
adc
xor
lock
insl
cmc
lods
jle
push
pop
mov
cmp
jb
mov
pop
push
push
rcll
mov
test
inc
stc
jge
or
in
push
decb
or
pushf
jg
in
arpl
mov
dec
mov
insl
and
loope
arpl
and
in
fdivrs
sbb
call
dec
mov
mov
lcall
push
cmp
andl
test
loopne
adc
out
xor
push
pop
mov
xor
shrl
adc
push
loopne
xor
jno
popa
test
jns
andl
outsb
and
mov
jg
cli
imul
pop
test
fmul
xchg
or
sti
movsb
fsubl
scas
cmpsl
imul
push
xor
jmp
fwait
decb
mov
push
out
fs
outsl
xchg
dec
sti
push
xor
nop
je
stc
add
push
and
imul
out
mov
pop
sub
mov
mov
cs
insl
lcall
hlt
fnstsw
sub
jecxz
faddp
sbb
mov
cs
flds
jle
jbe
mov
push
sti
addr16
cmc
jmp
sahf
scas
mulb
jp
jne
jne
js
fisubl
sbb
mulb
lea
mov
jb
rolb
pop
arpl
or
pop
mov
push
adc
cmpsl
clc
xchg
jge
decb
sbb
push
outsl
pop
daa
mov
hlt
add
cmp
roll
cmpsb
xchg
aam
insb
sti
ljmp
aaa
or
stos
in
and
cmc
mov
addr16
push
push
mov
aam
and
xor
leave
xchg
xchg
xchg
sti
xchg
jo
mov
dec
push
fs
idivb
lods
sub
cs
aas
imul
test
xchg
lahf
xchg
out
push
cli
push
and
fnstsw
shrb
imulb
or
pop
push
adc
mov
lret
dec
cmpsb
arpl
jge
std
inc
in
add
pop
loop
mov
call
jnp
popf
or
xchg
xor
mov
je
andb
enter
rolb
mov
dec
xor
cmpsb
aaa
push
push
bound
mov
xchg
cmc
add
lahf
cltd
in
cmp
data16
ds
movsl
in
push
cmpsl
dec
rorb
fisttps
lret
jne
push
rorb
and
mov
pop
lea
push
add
xorl
xor
leave
jno
jne,pt
cmp
cmp
les
and
in
pusha
movsl
add
enter
out
push
loope
push
xor
stos
mov
mov
std
das
push
jb
cmp
fs
pusha
icebp
scas
addr16
pop
xor
adcb
in
mov
loope
out
sub
jmp
fs
xchg
sbb
pop
lcall
test
outsb
xor
adc
test
or
dec
fidivs
push
popa
or
pop
or
adc
shll
ret
cmp
rorl
dec
dec
jns
test
mov
lods
rcrb
in
test
mov
add
ret
aad
sahf
inc
jge
pop
test
fisttps
xor
adc
sbb
int3
cmpsb
inc
in
or
arpl
js
movsl
mov
out
mov
subb
aam
jmp
inc
sbb
nop
xor
and
mov
push
out
adc
pop
inc
imul
xchg
and
test
sub
out
je
add
push
jle
mov
enter
das
ret
jl
insb
and
jmp
push
sub
fsts
mov
cmp
xlat
shrl
mov
in
popf
popa
lcall
pop
loop
enter
adc
arpl
les
lods
xchg
mov
push
negl
mov
pop
xchg
sub
mov
cmc
inc
dec
sbb
dec
xchg
sbb
and
push
mov
shr
ds
out
sbb
lcall
xlat
pop
push
in
push
lds
pop
mov
mov
jb
cmp
or
inc
ds
jne
sbb
adcb
jmp
fmuls
inc
push
cld
mov
or
and
or
mov
scas
shll
or
dec
mov
xor
xor
push
mov
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
ds
adc
push
clc
adc
adc
outsb
add
out
lods
push
fcmovu
jb
mov
xchg
push
jno
inc
inc
out
shrl
shlb
lds
rorl
test
mov
pop
out
in
fisttpll
or
fidivl
xchg
dec
sbb
push
push
jmp
insl
inc
js
push
lcall
mov
lods
jbe
fisubl
jbe
aad
roll
inc
into
push
lds
push
cmp
sub
movsl
push
jg
int3
push
outsb
sub
pop
push
xchg
fcompl
cmp
cs
es
push
cmpsl
xor
out
mov
or
xor
popf
mov
je
outsb
mov
dec
sbb
out
inc
xor
mov
adc
daa
inc
fsub
repz
nop
sti
shll
and
xchg
jmp
in
inc
test
or
std
mov
dec
pop
pop
jmp
int
lahf
lods
fs
xor
outsl
lds
insb
fstpt
mov
sub
push
xchg
orl
test
icebp
xchg
imul
push
adcl
add
mov
rcll
out
and
adc
aam
jg
xor
dec
das
fs
inc
push
jae
jbe
jmp
mov
repnz
jge
sub
shlb
iret
leave
addr16
xchg
call
enter
mov
cmp
mov
fwait
jl
pop
jnp
test
mov
adc
xchg
jg
negb
mov
arpl
mov
mov
sbbl
movsb
daa
lods
cmp
adc
scas
ljmp
sbb
cld
arpl
test
jle
mov
pop
sti
cmp
mov
insb
jae
rcrl
mov
xorl
mov
ja
in
mov
adc
ret
scas
adc
sbb
push
pop
fimuls
xchg
int
fs
in
cmp
sarb
cld
mov
push
mov
mov
fcmovnbe
adc
inc
pop
sub
imul
test
outsl
jae
sub
fwait
mov
out
inc
and
mov
out
iret
pop
pushf
mov
cmp
call
sub
scas
popf
sti
xchg
popf
add
xor
mul
pop
flds
enter
or
and
and
js
mov
push
divl
xchg
divl
movsb
adc
orl
pop
test
cmp
cltd
mov
cmp
cmp
pop
repnz
aam
xchg
adc
stos
cs
fistps
jge
arpl
popf
inc
ja
es
xchg
in
adc
cmp
push
scas
sbb
inc
mov
xor
pop
into
push
push
or
sbb
mov
data16
daa
jae
mov
stos
ds
or
push
inc
test
adc
sbb
clc
movsl
cmp
mov
mov
pop
lea
adc
mov
pop
call
jno
push
movsl
mov
rclb
lcall
push
mov
scas
inc
jbe
xchg
or
call
ds
cmp
mov
dec
or
mov
mov
inc
adc
aaa
pusha
adc
or
inc
mov
or
inc
sub
and
xchg
popf
dec
cmp
xor
xor
bound
pop
out
pushl
std
push
pop
xchg
push
cwtl
jae
aas
jbe
inc
pop
bound
sahf
cmpsb
cs
sub
jmp
das
fwait
lods
add
jl
leave
pop
cmp
sub
shlb
inc
ret
ja
fsubrl
sbb
rcll
inc
pop
pop
es
in
jbe
sub
cltd
xchg
sti
rcrl
bound
xor
add
and
pusha
mov
fcmovnb
xor
push
push
outsl
sub
cmc
lods
cmp
push
adc
pushf
push
negl
xchg
shll
pop
and
mov
push
mov
cwtl
int
in
cmp
icebp
cltd
push
adc
sti
push
sbb
jg
cmp
lret
hlt
jge
or
aaa
subb
mov
push
out
ja
pusha
push
mov
inc
sub
jne
or
aad
jne
or
cmp
mov
inc
jae
or
or
cld
lods
pop
pusha
lret
inc
xchg
inc
and
scas
outsl
cmp
dec
mov
fucom
mov
hlt
packuswb
mov
ret
out
xchg
cmp
xchg
aam
jmp
inc
lods
mov
xchg
dec
dec
ret
lcall
mov
mov
lahf
test
fwait
sub
into
mov
pop
mov
sub
add
rorb
frstor
push
inc
stos
fwait
mov
aam
clc
fs
jg
out
andb
sub
cmp
loopne
adc
movsl
int
rorb
push
cmpsl
mov
pop
adc
and
test
ds
rol
sub
xchg
jns
sbb
mov
adc
push
mov
mov
test
data16
add
cmpsb
andl
scas
int3
movsb
xchg
fcoml
ja
pop
mov
sbb
mov
lock
pop
lods
test
pop
ds
pop
inc
movsb
fiaddl
in
mov
sti
sub
int
push
rolb
cmovno
outsl
xor
inc
mov
and
xlat
mov
adc
dec
idivl
mov
add
xchg
adc
jle
test
shrb
xchg
leave
mov
jge
pop
int3
and
movsb
sub
bound
cmpsl
mov
sbb
ljmp
inc
out
or
test
fcomps
aas
jae
dec
push
shll
sbb
mov
adc
sbb
mov
push
loopne
push
ljmp
js
cmpsb
hlt
add
sbb
dec
cmpsb
int3
push
cmp
movsb
subl
je
lea
push
mov
jp
sbb
mov
and
jle
adc
pop
xor
cs
pop
push
jp
pop
ret
lock
add
ja
jno
xor
or
mov
shl
jmp
push
xchg
push
pop
push
es
leave
or
adc
clc
adc
sbb
repnz
ret
or
pop
sbb
sbb
adc
push
mov
cmpsl
inc
xor
cmc
orl
cmp
ret
inc
xchg
jmp
divb
fcomps
adc
addb
or
sub
jno
sahf
mov
xor
mov
xchg
iret
cmp
pop
mov
push
bound
pop
out
push
and
and
dec
mov
adc
xchg
push
mov
jne
xchg
mov
insl
mov
int
mov
mov
imul
je
mov
xor
push
cli
icebp
and
mov
xchg
dec
mov
pop
mov
scas
popa
in
in
jmp
arpl
sub
add
jl
insb
sbb
cmp
lock
mov
call
push
adc
orb
sahf
loop
into
pop
pop
pop
mov
cmc
outsb
insb
fldcw
scas
or
enter
sub
push
cltd
mov
divb
mov
insb
mov
ja
ss
sub
add
sahf
sti
scas
inc
xor
dec
out
mov
cmpsl
cmp
lock
xchg
sub
sahf
shlb
xchg
sahf
jo
aad
mov
lods
and
adcb
push
scas
ljmp
sbb
dec
cmp
lret
dec
jp,pt
or
mov
and
add
int
push
mov
mov
popf
out
in
xchg
pop
mov
dec
ret
dec
test
adc
mov
in
or
inc
sbb
mov
xchg
dec
scas
into
hlt
sbb
mov
loope
xchg
sbb
lret
jns
lahf
xchg
adc
je
jns
push
pop
rolb
aam
xchg
shrl
mov
in
and
or
cmp
jg
adc
cmp
sbb
add
xor
jne
push
aam
imull
hlt
fmull
icebp
xchg
jg
mov
mov
and
sub
jne
aam
sbb
nop
lock
and
inc
cmp
sub
xor
icebp
add
mov
aas
test
jg
repz
js
mov
enter
xor
push
sbb
adc
pop
push
jnp
scas
mov
mov
mov
sahf
xchg
int
cmpsl
jo
sar
aad
iret
insl
rcr
mov
pusha
shlb
push
xor
pop
mov
xchg
dec
mov
aad
push
inc
pop
xchg
clc
or
hlt
stc
mov
xchg
mov
mov
cmp
cmp
lods
stos
add
jp
inc
lret
paddusw
dec
pushf
or
dec
icebp
push
push
imul
mul
test
arpl
jae
in
ds
ds
lds
cmpsl
mov
cli
pop
xor
mov
jb
pop
jb
in
adc
mov
repnz
test
dec
insl
and
into
fs
push
test
or
sub
je
loope
push
js
dec
push
test
and
inc
out
jg
or
mov
add
cmp
enter
sub
adc
xchg
loope
jg
clc
cld
inc
or
sbb
mov
mov
lret
fcompl
jp
dec
nop
imul
fnstcw
cltd
and
xchg
push
in
fildl
lret
cmpsl
mov
loop
loope
jbe
or
dec
cltd
lock
jae
in
xlat
pop
xor
lcall
xor
daa
and
pop
xor
cmpsl
xor
push
dec
push
int
jp
je
addr16
and
jmp
lret
lret
rcr
imul
jle
sarl
inc
jmp
adc
or
fidivl
jl
inc
mov
leave
aam
pop
adc
pusha
jne
jmp
aam
movb
xchg
ret
sub
out
js
inc
fists
xor
mov
sub
adc
mull
not
scas
stc
jl
jmp
mov
call
mov
fst
pop
push
dec
and
xor
adc
jbe
mov
orl
pop
movq
ficompl
jb
fists
xor
stos
js
jno
mov
mov
fdivs
sub
loop
insb
xlat
loope
std
and
inc
clc
jge
and
fdivs
add
cmovl
mov
push
and
mov
sbb
sahf
mov
out
dec
stos
imull
shlb
lfs
scas
loopne
jl
or
jecxz
cmp
das
cmp
sti
clc
call
push
sub
push
sub
push
pop
pusha
imul
push
in
mov
icebp
rcrl
jmp
aad
jl
sarb
loope
or
jne
movsl
xchg
mov
xor
rorb
aaa
gs
repnz
or
push
daa
dec
push
into
adc
lods
cli
negl
pop
ljmp
scas
out
xchg
and
fmuls
sahf
jne
push
jge
aam
push
pop
mov
loope
cmp
cmp
into
jne
adc
mov
ljmp
cmpsl
mov
adc
mov
xlat
sub
xchg
add
pop
and
mov
arpl
push
dec
int3
and
js
ja
pop
stos
icebp
pop
mov
es
daa
in
push
push
pop
dec
mov
pushf
aaa
xor
mov
pop
fadds
sbb
cli
rorb
mov
adc
pand
cmp
mov
push
or
inc
adc
and
test
mov
dec
inc
pop
xlat
inc
add
or
jmp
push
lock
push
in
mov
sbb
xchg
xchg
arpl
mov
jnp
out
jge
rorb
inc
mov
cmp
xchg
inc
stos
ret
fdivrs
ret
dec
dec
in
xor
push
faddp
call
pop
in
jg
jo
jg
in
jb
inc
inc
vandps
stos
cmp
int
mov
pop
daa
hlt
xor
pop
or
ret
insb
dec
jbe
andl
push
outsb
test
cmc
xor
adcl
popf
sub
out
sbb
pop
fwait
in
cmpsb
stos
call
xchg
lods
push
push
pop
fdivrs
aam
dec
loopne
jmp
or
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
inc
cwtl
jbe
aad
adc
push
clc
adc
lods
pop
inc
add
hlt
int3
push
mov
push
push
push
lcall
test
rclb
mov
rorl
subl
mov
cwtl
loopne
mov
ja
mov
in
sub
sub
sub
jp
insl
popf
ljmp
xchg
cmpl
cmp
cmp
mov
sub
in
loope
xor
repz
cmp
add
xchg
js
out
and
mov
or
les
sbb
stos
rcrl
cmp
pop
cmp
out
inc
out
mov
push
into
adc
cwtl
mov
ljmp
xor
push
pop
push
pop
push
insb
push
and
sub
lock
xor
add
repz
ss
hlt
mov
adc
xor
mov
fucom
dec
jp
mov
fsubs
hlt
ja
adc
fst
mov
sbb
stc
xor
loopne
insl
fimuls
push
jmp
adcl
dec
adc
lcall
mov
add
lock
cwtl
mov
outsb
jle
pop
hlt
fwait
popf
push
ja
sub
lcall
jl
mov
xorb
or
sbb
jb
mov
xchg
mov
mov
mov
mov
mov
pushf
jge
pop
cs
rolb
in
pop
adc
ljmp
inc
cmp
cmp
add
adc
cld
mov
ljmp
pop
lock
test
mov
adc
xchg
test
or
call
test
dec
cwtl
mov
mov
lret
fcomps
out
les
pushf
xlat
cmp
mov
mov
xchg
pop
mov
stos
jge
dec
mov
inc
jae
add
lods
sar
push
jg
mov
outsb
movsl
mov
sub
popf
jns
or
cmp
or
xor
sti
rclb
imul
push
inc
pop
out
jge
push
incl
out
sub
jg
cmc
sbb
xchg
mov
cmp
popf
jnp
mov
scas
repnz
mov
push
adcl
mov
lcall
add
scas
dec
fs
imull
shl
mov
fnstcw
dec
cld
popf
cwtl
arpl
pop
lea
adc
cmp
add
addl
jbe
or
cs
xchg
add
loope
mov
testb
dec
mov
push
add
sub
lds
hlt
mov
je
dec
stos
outsb
in
pushf
movsl
in
dec
inc
and
fmuls
mov
pop
jg
xchg
test
sub
andl
mov
test
push
in
xor
jb
gs
fimull
adc
mov
mov
mov
cli
dec
mov
cmpsb
lods
shl
or
ds
jnp
mov
adc
mov
dec
xor
stc
add
dec
and
sub
mov
loope
jmp
inc
xchg
outsb
mov
popf
xchg
dec
pop
fists
das
and
push
shlb
loop
inc
sbb
cltd
or
pushl
dec
inc
test
test
adc
jecxz
ret
dec
fisubl
sbb
inc
mov
adc
inc
pop
pop
push
jae
mov
mov
std
inc
adc
test
lret
outsl
lcall
dec
mov
enter
jg
jp
loope
into
movsl
loope
jno
fstpl
dec
and
out
mov
push
xor
jno
aad
stos
mov
inc
mov
ljmp
ljmp
cmp
pop
pop
pop
fwait
out
test
xchg
fs
out
fcmovbe
lock
jge
adc
gs
pop
add
adc
nop
mov
mov
push
sub
scas
pop
dec
scas
testl
xchg
scas
pop
xorl
xor
push
inc
pusha
loop
xor
jae
gs
xchg
sbb
dec
insl
jno
les
mov
icebp
cmp
stos
leave
mov
inc
aas
inc
loope
test
sbb
xchg
loopne
adc
loope
jp
rolb
loop
add
fwait
add
pop
cld
insl
std
add
xor
enter
aaa
jl
jmp
cmpb
dec
ror
sarb
fwait
dec
mov
loope
addr16
clc
outsl
ljmp
xor
repz
mov
or
inc
or
jae
not
std
pop
repz
decl
cmp
fstp
rcrl
insl
das
std
mov
lods
dec
xor
daa
dec
lock
ja
cmpl
ret
fdivrl
adc
bswap
and
jle
or
add
std
das
mov
inc
in
rol
jae
emms
mov
mov
icebp
test
pop
insb
and
adc
rorl
imul
fidivs
inc
or
sub
lods
ja
daa
orb
adc
pop
stos
or
mov
mov
mov
je
xchg
movsl
ret
scas
xchg
inc
sbb
xchg
fstl
push
not
mov
xor
sub
std
inc
add
inc
cmc
in
jno
inc
test
insl
cmp
mov
jbe
mul
jle
sbb
or
lds
gs
fistl
xchg
dec
lods
shlb
pop
dec
inc
addr16
inc
jnp
xor
in
mov
leave
dec
call
addl
xchg
or
mov
cs
pop
scas
test
fildl
test
das
sub
add
inc
xchg
dec
or
clc
out
mov
or
jns
mov
ja
pop
pop
add
dec
cmp
pusha
mov
insl
popa
in
lahf
push
int
adc
jmp
lret
ljmp
sti
inc
sbb
lea
int
in
mov
add
js
sti
jbe
lods
mov
dec
fstps
fwait
popa
lret
mov
xor
addr16
std
xor
pop
or
imul
mov
leave
stos
dec
not
and
xor
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
jp
mov
adc
adc
push
clc
adc
in
inc
add
xorb
sbb
jmp
xor
negb
fisttps
leave
cmp
jge
movsb
sub
sbb
add
sbb
jae
movsb
adc
and
rol
lcall
xlat
cltd
fsubl
dec
orl
mov
fdivrs
ds
fcomps
jge
adc
je
xor
sub
jno
adc
xchg
jo
mov
out
add
aas
lret
outsl
shrl
and
in
inc
sbb
aam
mov
cmpsb
xchg
jo
mov
dec
cmpsl
xchg
or
mov
push
and
push
fstpt
bound
repnz
aam
test
scas
lret
or
rcr
push
in
lret
cmp
dec
mov
xor
sbb
and
addr16
add
and
push
bound
cmp
je
cmp
add
hlt
notl
adc
xchg
dec
outsb
sbb
test
mov
daa
dec
stc
cmp
and
or
imul
imul
cmp
xor
cmpsb
adc
data16
daa
outsb
das
shld
sub
or
mov
add
push
lahf
aas
jne
xor
add
add
or
sub
aad
movsb
xor
inc
push
inc
mov
stos
push
das
jnp
repz
adc
and
and
out
jecxz
add
sbb
out
xchg
das
mov
insl
push
xor
mov
scas
or
std
xor
lds
xchg
pop
test
jae
mov
mov
dec
in
mov
mov
cs
xchg
push
push
bound
jle
sar
movsl
iret
cld
adc
adc
in
test
repz
lahf
sbb
je
in
pop
cmp
sbb
add
pop
xor
shrl
push
fisubl
rorl
pop
mov
pop
sbb
out
insb
cmpsl
jle
cltd
pop
es
adc
in
add
hlt
pop
repnz
fstl
gs
aaa
movsb
in
cmp
add
pop
or
mov
xchg
adcl
adc
pop
or
std
or
movsl
ja
addl
in
sbb
ret
roll
xchg
push
por
cmp
gs
lds
lods
test
cld
adc
inc
inc
pop
adc
xor
int3
popf
or
lfs
cwtl
cld
fisubl
stc
mov
lcall
inc
int3
adc
jno
add
jl
sbb
int
xor
cmp
loop
lcall
aam
sub
sbb
dec
enter
aas
add
dec
cmp
inc
mov
push
or
lods
dec
mov
jns
push
and
push
fs
ja
dec
lret
hlt
cmpsl
sub
lret
dec
adc
mov
push
or
mov
in
inc
lock
pop
sbbb
cmp
dec
sahf
mov
push
pop
sbb
sub
pop
in
push
inc
cmp
xchg
adc
xlat
cli
pop
push
das
sbb
arpl
mov
aaa
aad
add
inc
jbe
jns
call
fstps
xor
and
add
or
mov
ds
and
inc
mov
xor
rolb
xchg
pop
jne
sub
sub
adc
ljmp
es
movsb
ret
mov
gs
xchg
in
push
mov
ja
cmp
jge
pop
repz
xor
hlt
cmpsl
addl
call
std
jbe
cmp
sbb
add
lea
xor
iret
mov
stos
popa
int
jmp
dec
test
imul
xchg
ret
dec
ljmp
and
or
fcomps
mov
and
ret
xchg
push
ds
dec
dec
rol
and
sub
add
call
scas
push
and
xchg
pusha
xchg
sbb
fmul
xchg
inc
xchg
or
mov
pop
ret
jae
mov
jmp
out
ss
pop
adc
adc
jne
cltd
cmpsl
mov
dec
sbb
movsb
shll
mov
sbb
lea
add
cmc
shrb
stos
int
xchg
pop
stos
mov
xor
dec
add
lret
add
cmc
jecxz
xor
pusha
push
ja
adc
push
call
jecxz
fcoms
mov
push
pop
popl
inc
xchg
inc
pop
pop
mov
push
cmp
add
rcrb
and
xchg
lret
stos
push
fidivrs
mov
add
add
or
pop
imul
outsb
push
loopne
or
mov
jae
or
cs
mov
testb
pop
int3
scas
adc
mov
cli
jge
stos
es
rorb
enter
test
notl
jecxz
movsb
adc
mov
xchg
jmp
dec
pop
in
loopne
add
adc
inc
movsl
xchg
arpl
jle
imul
mov
jp
rcrb
pop
mov
nop
dec
or
and
mov
mov
gs
mov
mov
pop
add
push
cmp
out
xchg
ds
mov
aam
shll
xor
or
mov
stos
mov
mov
xlat
int
push
mov
mov
xlat
push
lock
or
sbb
sub
adc
icebp
aaa
lods
sbb
outsb
repnz
xchg
jb
jno
cmp
sbb
ja
es
adc
rcr
push
pop
in
in
adc
sbb
add
mov
lods
and
aas
mov
lahf
xchg
cmp
jecxz
mov
bound
test
enter
mov
cltd
xlat
stc
loopne
xchg
jno
adc
cmc
dec
ret
sbb
ds
jg
mov
xor
mov
iret
mov
aaa
dec
or
sub
jns
xchg
dec
insb
adc
push
stos
sub
sahf
cmc
loopne
into
ds
rcr
jne
and
and
rclb
inc
stos
xlat
sub
mov
loope
xor
jnp
and
rcrb
xor
fcompl
inc
inc
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
xorb
clc
adc
mov
push
push
loope
cmpsb
popa
mov
push
arpl
mov
imul
arpl
mov
and
inc
pop
jbe
aaa
loopne
xor
add
jnp
mov
sub
aam
cmp
lgs
aad
mov
test
add
jbe
pop
push
test
cmp
lahf
frstor
repnz
inc
lea
cmp
jge
es
daa
mov
sbbb
int
imul
out
ds
and
sub
outsb
mov
hlt
arpl
dec
or
mov
data16
sub
jecxz
je
xlat
test
jmp
or
aam
mov
cli
imul
aam
decl
insl
test
or
dec
mov
push
inc
mov
mov
in
mov
icebp
xor
mov
mov
int3
shll
xchg
pop
sub
cmp
inc
mov
sbb
imul
jbe,pt
cwtl
and
push
dec
pushf
out
xor
imul
jecxz
mov
jnp
push
incb
pop
inc
cmpsl
jg
ror
xchg
inc
cmp
inc
xchg
push
jp
or
mov
mov
sub
faddp
mov
jo
xchg
rcrb
arpl
jnp
fmulp
xor
adc
pop
mov
fidivrs
call
jle
sub
rclb
mov
stos
dec
movd
stc
and
in
cmc
loop
ret
cmpsb
jnp
call
fists
ret
inc
xchg
stos
push
push
int3
mov
fs
shll
lahf
outsl
fldl
sub
jecxz
mov
mov
mov
enter
sbb
jae
js
mov
jmp
xchg
lahf
ret
xlat
aad
xchg
hlt
xlat
iret
cwtl
sbb
addl
aaa
stos
jmp
xlat
mov
adc
fcompl
in
fimuls
xor
and
mov
negl
or
stos
add
loop
jne
fcos
mov
lret
roll
data16
loope
xchg
cmp
in
adc
loope
mov
fisubrl
or
mov
cli
movsl
sbb
bound
or
gs
idiv
mov
sti
stos
mov
adc
orl
cs
cld
movsl
cmp
sbb
push
xor
clc
lds
jge
movsb
outsb
add
and
mov
shrl
int3
mov
jecxz
or
push
mov
popa
or
sub
sub
aad
and
aad
ljmp
push
mov
les
outsb
cmpb
dec
sub
mov
mov
inc
test
add
insb
mov
loop
jmp
hlt
lcall
and
sbb
ja
scas
aam
jns
jae
sahf
or
lods
inc
pop
sub
cmp
add
sbb
inc
je
pop
bswap
sub
jbe
cmpsb
enter
adc
xor
push
jne
out
jae
mov
aam
enter
xor
fs
test
xchg
pop
and
dec
bound
cld
ror
lds
dec
mov
mov
and
xchg
lea
mov
inc
inc
data16
nop
outsb
ss
pusha
and
in
test
popf
ficomps
clc
mov
clc
leave
icebp
mov
lcall
cmp
fs
test
and
dec
int
pop
in
lock
aad
cmpsb
cmp
pushf
outsl
jl
or
xor
lahf
push
jne
pusha
mov
mov
mov
fdivrl
fisubs
pop
sbb
mov
je
or
movsb
jb
pop
push
ret
jmp
outsb
cwtl
mov
es
call
call
add
neg
sub
lea
mov
rcl
add
je
xor
mov
decb
xchg
cld
and
adc
jg
scas
fwait
sbb
out
pop
lock
adc
pop
js
mov
lds
cwtl
sbb
adc
sub
push
pushf
fwait
mov
push
inc
inc
lock
clc
test
repnz
fists
data16
dec
add
popa
repnz
into
mov
js
pop
lds
jnp
lds
xorb
and
lock
and
xchg
cmpsb
mov
gs
dec
or
push
lods
stos
insl
mov
arpl
mov
push
sbb
std
rorl
adc
mov
std
mov
or
push
cmpl
cld
sahf
insb
cwtl
jno
jmp
push
jo
loop
dec
mov
dec
fisttpll
or
push
lahf
push
aad
ljmp
in
add
adcl
lahf
mov
add
inc
mov
jecxz
mov
xor
lock
fstpl
loopne
mov
mov
movsl
push
add
mov
stos
movsb
les
movsl
leave
jno
daa
jbe
or
cmpsb
dec
pop
jae
push
rorb
es
and
mov
cmc
les
mov
fldl
pushf
or
sbb
sahf
jmp
fcom
popf
out
cmpl
mov
cli
mov
push
adc
and
sbb
fisttps
rorl
mov
mov
imul
inc
leave
mov
insb
xchg
adc
push
pop
out
scas
mov
ljmp
insl
mov
and
push
std
aam
dec
adc
pushf
add
fsubrs
mov
cmp
mov
cmpsb
fnsave
lea
push
mov
mov
fnstenv
lahf
add
fisttps
push
fadd
repnz
das
push
fs
add
les
mov
out
aas
adc
mov
mov
adc
adc
ret
fnstsw
lds
jae
subl
and
mov
shll
lret
fwait
scas
test
mov
stos
push
movb
iret
in
inc
add
lea
fistps
inc
fdivrs
jns
mov
mov
sbb
enter
test
shll
cld
mov
in
popf
shrl
repnz
xchg
gs
sub
data16
cs
andl
dec
add
enter
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
sbb
adc
push
clc
adc
arpl
les
lods
adc
sub
xchg
pop
sbb
mov
cltd
popf
mov
repz
sbb
cli
fsub
cmp
xchg
into
xchg
stos
add
pop
adc
xchg
data16
es
imull
jge
adc
push
cmp
xchg
ss
cld
daa
jb
add
lods
call
xorb
or
addb
rcrl
dec
sbb
add
pop
iret
fsubr
and
dec
xor
ret
mov
movsl
inc
loope
jo
mov
mov
or
and
push
xchg
scas
jle
aad
fdivs
add
or
adc
mov
aad
xor
jl
sbb
cmp
jle
pop
pop
xchg
inc
xchg
cli
cmc
mov
movsb
inc
push
mov
pop
adc
xchg
fwait
add
es
gs
lea
lods
rol
sbb
cs
mov
xor
mov
or
push
cmp
and
mov
lods
fsubl
dec
cmp
es
mov
cmpsl
lds
fmuls
int3
dec
lods
inc
sbb
hlt
cltd
push
cld
mov
in
loop
test
imul
lret
test
lods
cmp
jbe
dec
idivb
pop
and
loopne
mov
nop
repz
data16
xchg
dec
mov
lods
jp
pop
jbe
test
mov
lret
or
orl
lret
and
mov
ljmp
cmp
ret
pop
mov
icebp
push
fnstcw
dec
push
cmpsl
pop
pop
subps
push
insb
or
pusha
xchg
push
push
push
xor
mov
mov
loopne
std
push
sub
jp
push
adc
out
mov
outsb
fisubrl
xor
sbbb
jne
xor
push
inc
inc
cmp
pop
clc
or
dec
aam
popf
dec
pop
shll
int
push
mov
mov
jle
nop
cltd
lods
movsb
jmp
jns
test
xchg
push
loopne
jle
or
mov
outsb
inc
sbb
sub
push
cmpb
push
fcomps
call
ja
inc
insl
adc
pop
rcrb
and
nop
out
loope
mov
xlat
fldt
dec
mov
lods
mov
jb
out
int3
jmp
push
jo
jg
mov
or
int
mov
stos
mov
jle
and
pusha
dec
std
add
or
sbb
outsl
mov
pcmpeqd
mov
cmp
lret
jp
aam
into
lret
xchg
aas
mov
add
cld
jge
add
test
movsb
xchg
jecxz
and
cltd
mov
dec
ss
adc
and
pop
lcall
jbe
jg
mov
xchg
sbb
xchg
cmpsb
testb
mov
cld
aaa
pop
in
cmpsb
dec
das
mov
lea
pop
popa
mov
sarl
push
pop
pop
imul
push
std
fisubrs
pop
mov
mov
mov
outsl
xchg
jmp
imulb
xchg
in
imul
cmpb
sub
mov
cmp
mov
jne
mov
in
mov
cs
or
aam
decl
jnp
push
push
lock
fnstsw
and
sbb
loopne
dec
in
sbb
mov
into
fdivrl
fidivl
cmpsb
daa
push
cltd
add
dec
data16
inc
sub
ret
sti
int
aad
and
lahf
xor
mov
or
aaa
pop
xor
stos
mov
sbb
and
pusha
hlt
outsb
frstor
jne
shll
add
rcll
negb
jl
fstpt
mov
rcll
repnz
pop
push
mov
enter
ljmp
push
mov
mov
cltd
rorb
pop
aam
dec
test
push
movsl
test
xchg
imul
mov
pop
jo
pop
mov
pushf
ljmp
dec
dec
jg
adc
pusha
pop
mov
int3
nop
iret
and
iret
stos
add
loop
jne
js
sub
dec
lcall
jl
push
inc
faddl
sbbb
jecxz
cmc
ljmp
sar
out
shl
bound
cmp
inc
sub
ss
adc
ja
leave
adc
repnz
inc
cltd
xor
cmpsb
jo
sub
scas
arpl
push
dec
cltd
cmp
bnd
imul
adc
inc
cmp
std
imul
and
add
mov
aaa
push
daa
jbe
mov
xchg
sbb
movb
and
ss
aad
add
and
movsb
dec
adc
setl
loop
inc
int3
out
jecxz
add
jp
push
lcall
loop
push
inc
adc
add
jae
mov
dec
push
movsb
pop
push
xchg
jp
imul
adcl
fstpl
loop
push
bound
xchg
ja
scas
add
gs
jmp
mov
fsts
dec
push
and
mov
clc
pop
outsl
out
repz
pop
mov
enter
fnstcw
test
fnstenv
mov
ret
ds
in
or
mov
cmp
adc
cli
pop
jmp
leave
inc
ljmp
call
cmp
mov
jae
mov
repnz
add
cltd
outsb
cltd
stos
jae
loop
xor
and
mov
cmp
ret
in
movsb
adc
insl
out
jg
iret
mov
pop
sahf
scas
push
leave
divb
lahf
movsb
push
ja
je
bound
add
lods
pushf
adc
sbb
dec
cli
or
cs
add
pop
and
mov
pop
and
adc
sahf
cwtl
mov
icebp
mov
xchg
fneni(8087
cli
pop
and
aad
lret
lcall
sbb
dec
rcrb
sub
in
ss
add
xlat
jmp
adc
jo
cmpl
xor
dec
xchg
xchg
cwtl
jecxz
cmc
decl
in
adc
cld
rcrb
pop
jnp
cmc
and
cmp
mov
pop
lret
push
cmp
leave
stc
rclb
cmc
mov
insl
cmpsl
pop
sbb
xor
movsl
xchg
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
push
cld
mov
adc
clc
adc
xchg
lret
mov
add
call
xor
ficomps
add
cmp
lret
loope
int
test
dec
daa
xchg
cwtl
clc
ret
jo
push
sub
push
push
jge
in
dec
inc
std
clc
js
sbbb
repnz
repnz
in
in
fistpll
pushf
fstl
xor
scas
push
sub
stos
mov
adc
mov
xor
js
mov
push
ds
icebp
shl
daa
loope,pn
mov
pop
push
xor
dec
cli
out
pop
mov
orl
in
lahf
lea
inc
mov
cwtl
pop
mov
push
fcomi
stc
inc
into
lret
jg
sti
and
enter
jle
int3
pop
out
fiaddl
jp
ret
cs
pusha
or
test
in
bound
or
popa
fbld
fdivrl
cmp
movsb
xchg
les
lea
adc
mov
push
pushf
leave
sub
and
xlat
jmp
aad
sub
mov
push
jecxz
in
sti
xchg
bound
push
repz
and
sbb
push
mov
xor
lea
sbb
xchg
ret
f2xm1
dec
adc
leave
inc
pop
inc
mov
push
or
div
cmp
xchg
adc
xchg
sub
rcrl
pop
inc
fnstenv
inc
mov
mov
int3
bound
sbb
add
insb
mov
mov
push
and
addl
adc
mov
ss
jp
mov
push
cs
sub
aas
lea
push
mov
das
sub
loope
in
or
or
ljmp
or
mov
jl
jl
mov
lret
mov
rorb
push
xor
inc
or
cmpsb
xlat
jno
pop
inc
ja
repnz
adc
es
mov
ret
and
push
pop
jne
decb
sub
push
cld
mov
sbb
int3
pop
sbb
sub
js
add
pop
imul
mov
sbb
push
ljmp
sti
ljmp
test
add
pop
mov
add
adc
xorl
dec
sbb
movsl
std
cmpb
fwait
push
je
push
cltd
div
sbb
or
jp
in
jp
pop
lahf
push
jmp
jb
cltd
iret
scas
out
and
ret
push
add
jle
lds
arpl
or
inc
cmp
imul
push
sbb
xor
lea
jp
inc
insl
pop
inc
cmp
push
call
cmp
push
jno
scas
dec
aas
sub
xchg
imul
sub
jle
aaa
cmpb
je
xor
add
iret
mov
lahf
int3
and
jmp
or
pop
repz
nop
sbb
mov
sti
test
push
arpl
jb
push
aam
ds
xor
popa
xchg
into
stc
mov
and
out
fwait
jbe
leave
shl
push
cltd
and
inc
fwait
cmp
imul
fiaddl
xchg
fwait
and
subl
add
jg
loop
mov
inc
add
mov
stc
out
fucom
les
lcall
mov
mov
fcoml
out
add
or
sbb
pop
out
sahf
pop
hlt
bound
dec
adc
mov
cmp
sbb
jl
and
xor
lret
mov
mov
xchg
call
in
push
lock
mov
lcall
daa
jl
cli
jbe
sahf
mov
inc
dec
xor
xor
jnp
popf
mov
std
fcomps
mov
add
cli
pushf
mov
or
mov
lods
test
mov
sub
shlb
fwait
mov
lods
and
mov
leave
mov
adc
xchg
ja
adc
and
mov
aaa
popa
and
add
addr16
lds
int
cmp
cs
adc
or
and
mov
mov
jmp
xor
sahf
scas
xchg
inc
iret
scas
fadd
fdivrs
cmpsl
fwait
lods
enter
mov
adc
into
xchg
jge
les
popf
jns
stos
or
imul
fisubrs
rolb
xchg
inc
loope
cmpsb
add
loop
scas
lock
outsb
lretw
movsb
mov
leave
or
ja
or
imul
clc
mov
test
iret
jmp
push
push
jmp
andb
adc
out
leave
sub
repnz
xchg
lret
ds
jne,pt
cmp
inc
jp
jp
jmp
mov
imul
mov
ficomps
jne
and
xorb
xor
daa
cmp
push
xlat
lods
inc
fldt
pop
jl
cwtl
and
aad
add
sbb
add
lahf
repz
push
js
out
gs
push
dec
and
cs
gs
in
xor
fdivl
pop
push
into
jo
pop
fwait
and
and
movsl
dec
push
fistpll
movsb
aaa
jp
enter
lods
out
pop
dec
jecxz
add
sub
push
idivb
fistpl
mov
repz
push
or
jmp
lods
cmp
xchg
adc
sub
add
out
or
jae
sub
mull
jns
push
adc
aam
lret
cmc
out
cmp
xor
inc
movsb
repz
stc
mov
stc
cwtl
lret
movsl
lods
jno
or
push
out
scas
pop
dec
addr16
aas
popf
enter
test
add
xchg
roll
jnp
cmp
jecxz
add
idivl
xor
imul
xchg
enter
adc
pop
and
lret
imul
ret
mov
add
enter
dec
loop
mov
rorl
fsubrs
pop
mov
sbb
icebp
std
mov
es
sub
or
aad
or
test
js
mov
test
fildll
stos
ret
xchg
lret
jnp
or
out
mov
inc
mov
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
or
adc
clc
adc
repz
push
imul
movsb
das
sbb
ss
leave
stos
shrb
xchg
jmp
pop
aad
fs
ret
dec
jl
shlb
fstpl
adc
stos
or
iret
leave
cmp
lcall
push
outsb
testl
inc
into
mov
sub
pop
sub
xor
sbb
movsb
and
xor
out
cli
nop
xchg
icebp
ss
xor
je
lock
mov
mov
xor
aas
cmp
fwait
dec
cmp
mov
pop
into
aas
sub
lock
data16
pop
ja
jge
les
outsl
ja
aaa
mov
sub
stos
inc
mov
test
inc
aam
adc
faddl
inc
fwait
pop
mov
data16
outsl
fiaddl
inc
sti
mov
mov
scas
icebp
gs
mov
outsb
in
cmc
cmp
xor
xor
sahf
jns
mov
jg
sub
pop
imul
clc
les
daa
mov
or
ds
sti
sbb
cmp
out
inc
xor
adc
leave
pop
add
enter
mov
sti
jmp
sub
mov
ret
sbb
into
push
aaa
jo
mov
mov
or
jno
adc
test
loop
lock
xchg
lret
lea
sbb
test
orl
pop
mov
pushaw
ja
mov
xor
insl
or
or
data16
out
cmpb
xchg
cs
jnp
sub
add
std
jl
jns
out
iret
add
add
out
fldcw
loopne
cli
sub
sub
xchg
ret
in
sbb
lcall
xor
xchg
dec
xchg
rcr
daa
mov
outsb
sbb
pusha
push
adc
enter
jo
push
xchg
popf
loopne
nop
inc
das
cwtl
fwait
pop
clc
int
into
xor
jge
lret
sbb
hlt
adc
cmp
sbb
repz
outsb
push
jp
adc
pop
mov
mov
cmp
in
mov
test
push
sub
cmpsl
test
cmp
negb
pop
xor
dec
push
dec
mov
stos
sub
aas
cli
pop
add
fcompl
fabs
aas
cmpsb
in
lcall
pop
out
daa
call
push
pop
and
dec
inc
bswap
push
mov
cmp
or
data16
xchg
mov
mov
sahf
stc
dec
shl
mov
push
cmp
pop
xchg
sub
push
ljmp
or
pop
lretw
push
sub
out
xchg
mov
push
jecxz
push
inc
and
xchg
jnp
add
push
lcall
cmp
imul
or
jp
mov
les
inc
in
repnz
push
std
mov
mov
shlb
xchg
je
leave
data16
dec
repz
push
repnz
inc
sti
cmp
lcall
out
pop
test
lods
sbb
push
stc
push
jg,pt
orb
inc
les
mov
fchs
hlt
popa
xchg
addr16
les
mov
adc
loope
sbb
das
mov
in
call
mul
and
sub
adc
adcl
pop
orl
mov
cmp
rclb
dec
and
and
add
lcall
out
jmp
inc
sarb
xchg
iret
jo
cmp
shrl
js
test
dec
push
and
ret
push
jb
ja
lret
loop
cmpsb
mov
insb
loop
aam
cmp
test
das
jge
xchg
andb
jp
xchg
xor
gs
mov
xchg
cmp
and
push
aam
aam
adc
data16
dec
and
pop
test
aaa
cmpsb
push
add
pop
inc
cmpsl
mov
js
xchg
inc
or
pop
xchg
xchg
dec
or
cmp
aam
xchg
stos
popa
mov
xor
ljmp
dec
sub
jb
out
int3
xchg
pop
adc
es
ret
in
je
clc
cmp
and
fidivrl
mov
and
mov
loopne
ljmp
and
pop
bound
push
inc
sub
jno
sti
nop
test
sbb
mov
movsb
rcl
fcoml
ds
mov
lcall
pop
scas
ljmp
sbb
adc
push
pop
mov
sahf
jne
jge
xchg
pop
add
stos
mov
in
movsb
mov
sub
mov
mov
lods
daa
dec
test
sub
shl
sbb
push
mov
hlt
les
and
outsl
mov
or
dec
clc
xor
test
and
shl
xorb
cmc
sti
cld
mov
insb
adc
ds
mov
nop
je
lret
adc
test
addr16
jmp
mov
or
fdivrp
xchg
lock
jg
and
in
repnz
call
jno
sub
jne
mov
xlat
push
pusha
sbb
or
push
mov
daa
inc
or
loop
mov
jl
or
cmp
sti
or
cmp
je
lret
push
dec
cmp
push
jbe
mov
xor
jne
ret
out
stos
in
dec
mov
sar
inc
push
daa
push
or
arpl
fbstp
jp
and
in
jne
jp
outsb
movsb
jecxz
mov
pushf
jo
cmc
fcoml
icebp
imul
rcrb
dec
inc
orl
shlb
inc
fistps
out
sbb
mov
sti
inc
push
rcrl
mov
mov
or
mov
mov
push
push
push
sahf
pop
pop
mov
jmp
or
imul
xor
xchg
ljmp
inc
jo
mov
pop
repz
scas
in
rolb
mov
ds
dec
outsl
or
sub
xchg
push
xchg
rolb
mov
ss
loopne
test
jle
insl
in
and
add
ds
fmuls
testl
stos
out
stc
push
je
ror
mov
inc
dec
rcrl
je
xor
stos
sub
xor
rorl
ret
xor
ds
or
shr
push
dec
inc
int
mov
das
out
sbb
mov
and
or
sbb
push
push
jmp
inc
fdivl
rorb
movsb
ret
rorl
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
hlt
pop
push
xchg
push
clc
adc
fwait
jbe
sub
xor
lcall
nop
jo
fs
mov
das
or
mov
fmuls
sahf
subl
and
mov
sub
push
fadd
sub
dec
in
push
loope
jnp
out
shll
adc
add
push
dec
lods
pushf
cmp
divl
test
stc
xlat
push
rorb
xchg
mov
imul
pop
push
add
daa
ret
popf
gs
rclb
inc
in
or
imul
mov
inc
into
adc
lods
outsb
jns
mov
lock
xchg
nop
mov
inc
sbb
jmp
cmp
or
divl
and
jecxz
cwtl
loopne
rcll
clc
imul
mov
cmp
xchg
jbe
rcll
jg
xor
lret
add
mov
icebp
cmp
loope
jns
lods
test
loopne
pop
mov
inc
mov
mov
mov
or
divl
leave
fdivrs
lret
jns
mov
push
scas
int3
adc
dec
jno
push
xchg
mov
cmc
les
shlb
mov
notl
out
sbb
inc
mov
cmovl
xchg
dec
fldt
mov
jb
sbb
mov
sbb
sbb
es
inc
push
pop
sbb
inc
lock
mov
insb
dec
xchg
jmp
jae
fnstcw
jne
mov
cs
sub
mov
inc
daa
scas
or
inc
mov
inc
in
mov
nop
ret
stc
aam
loopne
xchg
mov
gs
xchg
pop
push
movsl
lds
jg
in
es
pop
push
popa
jmp
or
dec
jnp
mov
enter
int3
dec
jmp
mov
nop
dec
xchg
repz
jnp
pop
cltd
mov
inc
xchg
xchg
aaa
scas
es
mov
pop
xchg
sub
ja
leave
leave
rcll
mov
test
aas
xchg
stc
test
sbb
filds
scas
fwait
addr16
sahf
inc
arpl
add
add
outsl
push
icebp
push
popa
adc
rcrl
push
decl
aaa
push
inc
insb
mov
mov
inc
ss
jl
mov
into
outsl
add
imul
in
jl
push
or
jns
pop
idiv
jge
lods
aad
into
sub
fwait
lods
mulb
cmp
cmp
stos
stos
icebp
adc
lock
rep
mov
aad
lods
jns
into
fimuls
add
shll
cmp
repz
and
xor
stos
xor
cld
es
pop
cmp
stos
inc
shrl
daa
dec
sub
into
sbb
dec
pop
aam
clc
sbb
pop
fsin
dec
insb
rorb
and
ret
xchg
xchg
ss
cmpsb
add
daa
ss
dec
dec
sub
fxch
mov
call
or
insl
outsb
mov
sbb
and
test
cmc
sbb
push
add
mov
or
jp
inc
ficoms
in
jge
outsb
call
push
leave
shrb
iret
sub
pop
push
in
in
mov
push
cltd
mov
push
cmc
mov
dec
fiaddl
mov
stos
jbe
xor
push
out
cwtl
jbe
movsb
icebp
and
mov
cmpsl
mov
fiadds
imul
sbb
pop
xor
mov
andb
mov
mov
adc
and
js
daa
push
adc
out
ret
inc
lahf
cli
xor
popa
xchg
add
rclb
call
ljmp
out
sarb
flds
mov
pushf
jecxz
xchg
hlt
je
pop
pop
call
sub
repnz
xor
notl
lahf
insl
lods
xchg
sub
fstps
lds
jo
test
jmp
mov
inc
jae
fwait
ret
gs
repnz
cmp
mov
pop
inc
inc
ret
repz
dec
sbb
xor
in
xchg
adc
push
sub
push
jmp
mov
jmp
imull
inc
es
sti
mov
fwait
inc
dec
mov
xchg
and
sub
insl
aaa
lcall
ret
dec
push
test
add
cli
out
test
in
xor
jg
inc
jnp
add
subb
inc
push
mov
loop
sahf
and
mov
jecxz
mov
clc
loop
xchg
repz
scas
mov
sarl
das
hlt
pop
arpl
in
pusha
jmp
cltd
gs
dec
aas
mov
sbb
ljmp
cmp
cltd
pop
mov
jecxz
sbb
push
or
not
out
xor
xchg
inc
add
inc
sub
data16
push
dec
mov
xor
mov
fists
xor
outsl
insb
lahf
add
insb
imul
mov
adc
xchg
notb
sbb
pop
push
mov
push
fadds
imul
dec
sti
movsb
jnp
cmp
dec
fadd
xor
adc
cmpsl
sbb
cmp
das
xchg
testb
push
mov
pusha
outsb
mov
adc
inc
sub
mov
sub
jg
adc
int3
mov
adc
xchg
jns
movsb
fsubl
xor
repz
fwait
cmp
pop
jle
aas
icebp
jae
daa
icebp
scas
shlb
mov
mov
stc
dec
jp
pop
into
push
inc
lea
mov
push
rorw
es
jae
add
xor
out
outsb
add
stos
pusha
callw
cmp
jns
ds
je
xor
shrl
mov
mov
push
add
test
mov
addb
xchg
mov
or
icebp
shrl
icebp
mov
hlt
and
pop
or
lods
testl
jb
faddl
push
sbb
hlt
lods
stos
pop
es
sahf
add
stos
and
sub
dec
idivl
and
cmc
cmp
out
and
sbb
xor
mov
mov
add
mov
push
addl
pop
aam
notb
pop
dec
icebp
mov
pop
push
jmp
jg
fwait
jbe
adc
push
jae
xor
jnp
push
stos
jecxz
ljmp
pushf
lods
fs
and
es
mov
add
stos
outsl
jnp
imul
movl
xchg
push
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
imul
push
mov
push
adc
xchg
push
mov
sub
pop
push
aaa
scas
or
clc
xor
adc
scas
xchg
repz
sbb
fists
jb
mov
or
sub
jmp
int
sub
movsb
mov
xor
icebp
xor
outsl
in
and
push
mov
mov
gs
lods
push
add
incb
pop
sub
adc
das
xor
xchg
mov
into
jle
dec
out
ljmp
pop
mov
out
sub
iret
into
xor
xor
inc
xchg
repnz
loopne
lahf
mov
or
mov
and
mov
repz
or
std
mov
aam
std
and
xchg
jmp
jecxz
dec
jb
mov
push
jb
test
stos
inc
pushf
xor
inc
aad
pop
push
popf
lods
push
or
push
repnz
orb
add
and
dec
adc
add
aaa
add
sarw
jp
xorb
out
push
pop
gs
cmp
pop
call
cmpsb
lea
cmc
pop
ret
mulb
aas
call
dec
cmpsb
mov
cmpsb
adc
pop
jo
mov
adc
hlt
pop
dec
inc
dec
das
pop
mov
cs
mov
fcmovne
leave
pop
pop
outsl
js
mov
rorb
mov
dec
pop
lock
daa
in
sbb
je
mov
andl
pop
dec
dec
shll
psrad
add
sbb
ss
cmpb
jmp
aad
sti
or
jmp
stc
lods
notb
outsl
iret
lods
sti
mov
jbe
inc
mov
iret
push
hlt
mov
pmulhw
mov
pop
adc
xchg
stc
xchg
mov
neg
sub
sarb
xchg
cltd
dec
or
lret
fsts
sbb
cmp
insb
ret
mov
and
mov
xor
ficoml
cmp
and
pop
lods
movsb
dec
cmc
jle
cmp
adc
pop
mov
ret
add
imul
incb
xor
xchg
xor
fwait
lods
dec
xor
jmp
adc
xchg
xchg
fs
ret
ds
mov
fnstenv
or
add
movsb
imulb
mov
fcomps
out
andb
mov
or
and
push
call
adc
gs
in
xchg
call
movsb
andl
sub
sub
test
popf
lret
push
bswap
cmp
adc
rorl
mov
cmp
push
inc
jecxz
iret
xor
jnp
es
mov
mov
dec
cltd
or
aam
cld
outsb
test
sub
jmp
push
je
loop
and
dec
fiaddl
push
and
or
shll
lret
pop
sub
push
inc
and
xchg
cmp
dec
mov
bound
mov
lods
pop
pop
cmp
pop
dec
mov
lea
jbe
mov
pop
in
repz
xchg
pop
movsl
xchg
jbe
mov
mov
cmp
push
mov
fwait
and
xchg
push
out
pusha
testl
movsl
or
into
push
mov
pop
jo
popf
gs
mov
and
sub
push
pop
hlt
push
aam
and
jp
lahf
push
jecxz
lock
aas
xor
adc
ret
push
lahf
xorb
or
movsl
mov
adcl
int
roll
decl
mov
shlb
rcr
jg
outsl
test
insl
mov
shld
and
stos
push
pop
jg
cmp
xlat
sub
jmp
sti
push
in
mov
out
into
in
subl
and
pop
sub
lock
or
stc
cmp
comiss
movsl
xchg
outsl
lahf
mov
out
pop
movsb
push
out
jnp
mov
std
mov
movsb
in
bound
add
rcrb
push
out
xchg
bound
push
int3
in
lock
cli
add
popf
loopne
stc
hlt
sar
dec
call
rcl
adc
adc
fiaddl
jnp
jb
cli
sbb
xchg
xor
ds
call
jmp
inc
mov
inc
cmp
fdivs
cs
int
xchg
inc
jno
xchg
mov
jno
mov
mov
test
jnp
cs
inc
mov
inc
mov
dec
enter
cli
fists
xchg
sbb
shlb
es
xor
fcoml
push
xchg
sbb
mov
lret
fs
jmp
lea
es
and
jb
push
jns
mov
shll
jne
pop
push
mov
loope
sahf
inc
mov
mov
or
cmpsl
cwtl
and
mov
int3
test
add
xchg
lea
jmp
push
imul
cmpsb
sub
lds
ficomps
or
or
push
sub
push
insl
xor
sub
push
xchg
popa
xor
das
cld
mov
lds
fisubs
subb
fistpll
nop
jle
lods
push
add
push
pop
mov
or
es
push
cli
out
movsl
jge
enter
cmpsb
icebp
scas
add
mov
outsb
mov
stos
jle
pop
je
loopne
call
adc
mov
xor
adc
and
aam
and
add
icebp
pop
pop
inc
dec
popa
cmp
sub
and
ljmp
sub
jb
cli
stc
fsubs
mov
lret
in
out
mov
dec
xchg
jb
pop
lcall
dec
sub
fsubrs
sub
cwtl
push
xor
xchg
fisubrs
pushf
and
xor
cmp
cmp
push
or
ret
and
sub
dec
inc
sbb
js
and
jnp
pop
xchg
rcrb
sbb
inc
xor
mov
sub
fsub
dec
in
xchg
jns
in
sbb
xor
mov
imul
pushf
lds
mov
test
add
or
in
ret
sbb
pop
fidivl
mov
mov
or
xor
sbb
popa
movsb
inc
loopne
cmp
pop
ds
xor
das
stc
cmp
add
aam
idivb
fwait
arpl
xlat
xorl
push
xchg
dec
jns
inc
or
test
push
mov
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
sti
sub
aad
adc
push
clc
adc
loop
mov
insb
cltd
out
mov
cmp
jmp
test
ret
nop
loop
or
cmc
fisttps
punpcklwd
loope
int
shrl
sarl
cmp
insb
iret
in
mov
daa
lods
lods
repnz
stc
or
dec
imul
je
xor
add
pop
jp
mov
fs
lcall
mov
daa
mov
xorl
arpl
mov
pop
dec
arpl
in
sub
sbb
notb
or
fisubrs
fisttpl
push
ja
mov
lahf
cmp
js
orl
push
push
mov
mov
bound
imul
xor
int3
cmpsb
out
fwait
stc
mov
push
inc
xorl
scas
cmc
test
popa
movsb
cmp
sub
and
addl
sub
adc
or
bswap
xchg
cmp
sbb
fnstsw
lret
gs
ljmp
adc
rcr
add
mov
sub
pusha
cmpsb
xor
add
cld
testb
fs
and
sahf
shlb
aam
loopne
mov
sbb
scas
mov
xor
pop
test
push
mov
and
sahf
std
pushf
add
lahf
push
in
jg
lods
push
pop
aam
mov
mov
inc
loop
inc
in
std
push
mov
pusha
adc
sbb
mov
sbb
sarl
orl
sub
ljmp
pop
push
pop
repz
push
mov
jmp
test
bound
jo,pt
mov
mov
mov
ja
mov
mov
mov
insl
imul
mov
stos
shlb
add
in
fidivrl
pop
add
mov
pop
ret
mov
inc
adc
add
je
rcrl
cmp
out
xor
jl
iret
xchg
xlat
mov
test
lods
and
jp
add
cli
fucomp
sti
hlt
sub
mov
cmp
pop
push
andl
push
and
dec
push
add
adc
and
adc
dec
sbb
das
xor
in
imul
ljmp
jp
mov
mov
add
lea
test
not
cltd
mov
and
stos
jecxz
mov
aad
ret
mov
lret
inc
inc
add
jno
jne
les
aas
lcall
lret
vmaxss
scas
addr16
sub
or
push
cmpsb
jne
jo
push
push
arpl
mov
divl
imul
popa
cli
jae
stos
adcb
cli
enter
jo
pop
xor
insb
cs
jnp
lods
jge
faddl
lret
cld
rorl
in
movsb
xlat
sbb
mov
int3
xor
out
pop
lock
or
mov
rorl
or
gs
rcrl
cmpl
movsl
repnz
imul
mov
push
out
fs
xor
inc
inc
mov
inc
or
cld
popf
fists
lea
lret
stos
mov
inc
shufps
xchg
les
jnp
decl
cmc
xchg
xlat
loope
xchg
jbe
dec
sub
sbb
xchg
fnsave
daa
outsl
sub
jmp
adc
cltd
cmp
loopne
mov
mov
and
or
cltd
iret
jo
bnd
pop
mov
insb
lds
test
push
ss
mov
movsb
cmp
xor
jnp
cli
dec
xchg
mov
ds
and
jno
leave
sbb
aad
ficompl
push
sub
outsb
pop
imul
pcmpeqb
jg
push
repnz
mov
call
push
and
or
cmp
xlat
test
xor
add
sub
into
in
repnz
push
dec
shlb
push
out
push
add
add
mov
or
push
ret
aad
or
mov
loop
pop
pusha
pop
popa
test
fwait
mov
mov
loop,pt
std
or
ret
mov
lret
push
ljmp
insb
gs
mov
int3
lea
and
iret
cld
dec
inc
fwait
pop
mulb
aas
lahf
sahf
cli
mov
mov
xchg
cmp
inc
insl
jb
and
cmpl
pop
int3
push
mulb
cli
inc
dec
mov
xor
fdivrs
adc
jno
iret
scas
shrl
xchg
mov
push
push
add
daa
cmpsb
sbb
push
stos
jae
out
pop
decb
dec
cmp
or
and
mov
pop
pop
push
mov
lret
inc
dec
bound
mov
adc
mov
mov
test
fwait
adc
mov
test
aad
roll
movhlps
test
inc
and
xchg
xchg
lods
das
loopne
imul
lds
mov
pop
jno
idivl
pop
cli
out
mov
sub
test
cmp
data16
mov
into
pop
cmp
outsl
dec
push
pop
fucomp
js
pop
stos
add
push
pop
or
pop
jne
inc
lret
mulb
sbb
sub
sub
ficoms
pop
enter
pop
push
xchg
mov
push
pushf
cmp
shl
shr
push
call
xor
mov
xchg
mov
sahf
jge
xor
push
or
inc
cmp
sbb
push
cs
test
adc
out
lret
push
and
jmp
inc
mov
push
out
mov
test
dec
ss
sub
push
loop
testb
and
push
test
and
in
push
or
in
in
sub
pop
in
mov
add
fidivrl
bound
js
mov
cmpsl
or
xor
es
mov
pushf
jnp
mov
stos
push
jecxz
sub
packssdw
mov
push
out
cmp
lcall
data16
rcrl
push
and
xchg
adc
mov
dec
imul
mov
jmp
push
test
test
add
mov
dec
or
lods
mov
rclb
push
mov
mov
jmp
cmpsl
sbb
jbe
es
sbb
hlt
adc
adc
push
clc
adc
call
into
mov
mov
lock
sub
out
and
dec
mov
pop
dec
fiaddl
jo
mov
aas
xor
xchg
jb
loopne
inc
lret
push
pop
and
ja
or
ret
or
test
jno
pop
sub
repnz
xchg
addl
sub
add
mov
fwait
jl
inc
mov
ds
dec
xchg
or
jecxz
mov
dec
movsb
sarb
mov
sbb
adc
push
pushw
out
sbb
int3
arpl
je
sbb
jo
inc
sbbl
and
xchg
nop
add
es
sub
mov
repnz
je
jo
lcall
mov
jg
xchg
and
mov
sbb
les
cmp
bswap
xor
fs
jge
xor
push
fbstp
insb
pop
mov
repz
sub
stos
fwait
sub
testb
test
push
cld
out
out
xchg
cmpsb
adc
xchg
mov
cwtl
cmpsl
test
enter
gs
or
and
mov
fldcw
jl
add
ljmp
mov
outsb
pop
mov
aad
mov
push
jbe
jo
inc
pop
dec
in
and
xor
mov
insb
and
mov
inc
outsl
negl
sub
xchg
add
mov
imul
mov
js
mov
mov
adc
arpl
mov
lcall
xor
loop
andl
lret
lds
xorl
sub
jno
and
clc
adc
and
adc
mov
scas
inc
mov
movsb
push
cmp
loop
push
filds
push
pop
repnz
int
hlt
ret
dec
scas
daa
mov
loopne
test
out
xchg
lods
daa
and
sub
test
fcomps
jb
jae
dec
loope
sbb
shlb
jnp
lcall
fstl
lods
and
orb
sub
pop
pusha
loope
inc
test
mov
dec
dec
shrl
xor
mov
imul
adc
lods
ds
outsb
lahf
pop
inc
rolb
lahf
lret
and
xor
in
daa
imull
popa
and
inc
stc
jl
sbb
push
dec
sub
mov
jl
adc
add
fisubrl
cmp
in
mov
mov
mov
lcall
push
jnp
push
and
add
push
nop
xor
sub
jb
pop
mov
negb
xchg
push
push
cs
push
cs
filds
sbb
scas
in
pop
movsl
imul
aaa
jge
addb
dec
push
lea
mov
sub
mov
cmpsl
dec
leave
icebp
pop
fwait
call
push
call
ret
mov
jl
fcoms
rorb
lret
xchg
pop
xchg
mov
sub
and
push
pop
popf
lods
dec
push
adc
or
xchg
adc
jo
xchg
test
jl,pt
mov
inc
mov
out
mov
xor
mov
cmc
xchg
jg
pop
add
iret
jo
lea
push
imul
fdivr
sbbl
sub
mov
imul
fistl
repnz
or
mov
lods
pop
adc
movb
jo
push
fisubrs
loope
and
jge
test
stc
std
aaa
sbb
nop
xor
and
inc
in
les
mov
aad
insb
insb
push
dec
cmp
jl
push
sub
popa
adc
cmp
icebp
cwtl
push
arpl
mov
jnp
sti
insl
and
cld
dec
data16
dec
movsb
or
dec
iret
movsl
fwait
cmc
xchg
mov
mov
pop
and
push
cmp
sub
pop
cmp
nop
out
in
popa
fildll
std
cmpsl
movsl
mov
roll
out
ja
movsl
cwtl
andb
subb
cmp
cs
icebp
fwait
push
jae
xchg
outsl
mov
imul
pop
sub
je
cmp
and
push
and
lods
or
xchg
popf
jle
or
ret
repz
ljmp
push
ja
loop
or
dec
into
cld
out
sub
outsl
xor
adc
outsb
mov
or
push
jle
test
jl
leave
cmp
cs
inc
or
push
in
or
xchg
and
int3
in
pop
or
mov
push
pop
rol
test
or
mov
push
inc
sahf
or
movsb
dec
orb
int3
dec
rcr
push
xrelease
movsl
dec
daa
sbb
inc
add
or
aam
pushf
subb
test
ljmp
bound
xor
rorl
and
inc
jl
jle
xchg
js
sar
sbbl
js
xlat
shll
xor
push
fldenv
lods
pop
cmp
mov
or
leave
xor
inc
push
sub
jns
pop
xchg
idivl
orl
in
push
popa
fbstp
push
or
sub
inc
mov
cmp
xor
cmp
sbb
outsb
inc
sub
mov
and
jg
scas
mov
out
xchg
jnp
mov
adc
and
add
mov
arpl
dec
cmp
icebp
popa
sbb
mov
mov
out
insl
in
adc
clc
sbb
add
inc
xorb
mov
movsl
pusha
loope
or
fidivs
repz
inc
mov
cmp
test
pushf
das
or
stos
cmp
nop
and
dec
xchg
inc
push
push
add
mov
in
xchg
mov
sbb
cmp
repnz
sbb
mov
sbb
cmp
rcrl
mov
faddl
jne
inc
push
push
jns
mov
adc
icebp
xchg
push
int3
insb
mov
inc
adc
dec
push
or
mov
jns
and
cmp
leave
xor
lea
fs
and
cmp
in
in
insl
xor
pmulhw
and
inc
fnstsw
lret
in
movsb
repz
aam
pop
add
pop
pop
mov
arpl
shrd
or
shr
mov
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
scas
jp
push
push
adc
push
clc
adc
and
nop
add
popf
add
stc
sahf
mov
lahf
mov
jae
pop
out
repz
icebp
call
sbb
movsl
bound
movsb
xchg
sub
insl
add
adc
dec
idivl
cmp
sahf
sbb
cwtl
loopne
pop
iret
xchg
or
cmp
aas
or
scas
inc
xor
xor
js
faddp
dec
or
fs
mov
popf
jmp
dec
popa
les
dec
xchg
insl
loope
dec
sti
lods
clc
dec
add
pop
cwtl
fstp
out
mov
push
sbb
push
clc
xchg
fwait
or
in
loope
pop
pop
sbb
mov
scas
fildl
add
dec
repnz
sub
lret
out
ficoml
nop
mov
sbb
popf
sub
sub
dec
lahf
pushl
sbb
jb
push
insb
hlt
imul
leave
add
insl
mov
sub
pop
pop
and
mov
adc
dec
icebp
jno
subb
outsl
xchg
xorb
xor
and
cmp
sub
loop
mov
mov
les
arpl
mov
xchg
mov
jmp
mov
cmpsl
or
lahf
sub
mov
add
scas
inc
jnp
cmp
insl
jns
mov
ljmpw
cmp
sti
les
inc
out
dec
stc
dec
cld
pop
cmp
mov
popa
int
andl
inc
fistpl
inc
dec
imul
add
vucomisd
clc
out
ja
add
xchg
cltd
push
xor
je
andl
in
jecxz
jo
or
jne
dec
inc
add
lret
jg
dec
sbb
xchg
enter
negb
push
add
sbb
movsl
pop
rorb
in
scas
xchg
icebp
mov
test
or
fimull
pop
jb
push
xor
shl
pop
mov
lea
sub
lods
loopne
jg
xchg
cmp
sbb
hlt
roll
lret
mov
mov
pop
xor
test
ror
xlat
jae
mov
or
sbb
dec
subl
icebp
and
add
fldenv
popa
dec
pop
nop
out
pop
xchg
cwtl
mov
push
jbe
jo
or
inc
int
pop
push
dec
js
lods
mov
loop
mov
in
inc
cld
mov
adc
pop
cwtl
xchg
xor
cltd
movsl
mov
and
bnd
lret
ds
add
loop
and
ret
add
aas
enter
and
cmp
cwtl
mov
cltd
or
stos
sub
jmp
addr16
mov
push
xor
pop
leave
repz
sub
insl
jmp
rcr
loopne
jecxz
jg
int
fadd
mov
mov
lahf
out
add
mov
cmp
ficompl
pop
or
jecxz
in
inc
ficoms
int3
pop
aaa
sti
jnp
cmp
aam
enter
cwtl
aas
add
imul
pop
sub
sub
fstpl
lock
mov
xchg
adc
push
add
or
inc
aad
push
cmp
out
dec
punpckhwd
idivl
and
xchg
mov
leave
add
cltd
inc
xor
adc
jo
inc
gs
adc
shl
mov
xor
mov
in
lcall
std
insb
pop
mov
cmpsb
fnop
xlat
adc
inc
mov
jl
push
mov
dec
xor
sahf
and
lret
mov
mov
les
cmp
push
sbb
fisubrl
js
pop
dec
jle
inc
outsl
jmp
mov
icebp
fisubs
aam
sti
or
lahf
add
pop
ficoms
fisubl
cld
mov
sbb
sbb
mov
mov
sub
mov
xchg
in
pop
inc
arpl
mov
stos
ja
dec
movsb
pop
pushf
iret
cmpxchg
push
lods
fcoml
setns
inc
in
fldenv
mov
pusha
les
or
shl
push
mov
shr
jb
int3
mov
mov
jmp
movsl
dec
popa
iret
pop
dec
pop
xor
jmp
iret
push
sbbb
inc
xchg
out
fisttpl
mov
mov
push
fsts
int
mov
lret
mov
out
mov
pop
popa
lea
dec
sbb
mov
mov
int
iret
mov
pop
jle
es
aas
ss
imul
sub
fists
andb
pusha
inc
xchg
jle
inc
test
jg
sub
insl
mov
xchg
imul
mov
out
pop
lret
repz
test
ljmp
sbb
dec
fmul
add
sbb
incb
or
and
push
fimull
xor
inc
push
pop
pop
pop
pop
xchg
das
pushf
call
inc
jg
mov
mov
xchg
or
mov
cmc
aad
test
or
mov
jmp
scas
xor
jge
cmp
mov
mov
cs
inc
cwtl
jp
mov
mov
imul
cmp
pop
shrl
sbb
cs
or
mov
into
mov
and
jmp
movsb
push
out
lock
mov
or
dec
hlt
ss
jbe
sub
push
aam
mov
xchg
adc
jo
sub
out
or
ljmp
inc
orl
push
jmp
movsl
mov
ret
push
sbb
in
loope
adc
mov
int3
jne
ss
adc
loope
inc
lods
in
cltd
or
pop
xchg
stos
push
sarb
aam
iret
dec
dec
pushf
pusha
mov
out
lret
bound
jp
inc
scas
subl
pop
js
fcomps
imul
and
loopne
rorb
pushf
cmp
out
out
jge
js
clc
and
sub
jle
lods
out
jae
and
cmp
out
call
pop
jmp
loopne
jle
pop
mov
sahf
push
ret
xchg
xor
adc
mov
shlb
dec
test
xchg
lret
pop
pop
popa
lret
mov
cwtl
xchg
hlt
sahf
mov
das
add
data16
loopne
hlt
cmc
cltd
rorb
push
push
xchg
mov
mov
or
cld
push
add
add
mov
inc
insl
inc
pop
push
inc
adc
push
clc
adc
pushf
mov
sbb
push
pop
jne
pushf
in
imul
in
push
fsubl
mov
adcb
or
movsl
dec
popa
push
outsl
fstl
sbb
sub
push
add
pop
enter
daa
sti
mov
insl
ds
insb
pop
sub
nop
jp
call
jnp
test
test
pop
fiadds
shrl
in
jb
xor
cmp
cmp
ret
or
stc
aas
xor
adc
fsubl
sbb
movsl
mov
out
push
loope
jge
inc
icebp
ljmp
inc
and
sbbb
or
jno
xchg
fs
push
arpl
notb
mov
jmp
sub
cltd
test
push
dec
shll
pop
sti
sub
push
cmp
push
mov
jmp
scas
push
push
iret
test
cmpsl
pop
jmp
xchg
or
rcrb
insb
out
push
mov
mov
fsubr
fcoms
xchg
popa
dec
hlt
sub
in
stc
leave
xchg
jge
add
xor
loop
mov
cli
fcmovnu
scas
add
pop
mov
push
mov
pop
xor
repz
jbe
rep
pop
jle
ljmp
xor
dec
adc
cltd
pusha
std
into
add
add
lds
sti
jle
xor
cli
icebp
pop
push
leave
push
mov
aam
jle
inc
fcmovu
or
ret
fstps
stos
insl
pop
mov
call
lods
dec
pop
or
loopne
leave
daa
sub
cs
inc
dec
sub
lahf
decl
in
adc
and
mov
xchg
pop
ss
pop
icebp
into
sub
jno
jmp
ja
push
adc
movsl
test
sub
ja
aad
sub
test
dec
push
cmc
je
fistl
jo,pn
mov
xlat
imul
push
mov
xchg
xchg
fwait
adc
push
push
jbe
stc
push
mov
dec
notl
inc
sti
sarl
cmpsb
aam
scas
ds
bound
mov
add
pop
xor
push
cmc
je
push
sbb
out
mov
jne
cltd
lcall
test
fidivrs
movsl
dec
pop
xor
or
xor
or
pop
xor
mov
pusha
sbb
loope
fistps
and
ret
out
pop
outsb
shll
sub
neg
pop
mov
lock
loopne
push
or
in
pop
mov
fwait
aas
fs
add
rorb
and
leave
mov
fists
loopnew
scas
fmull
dec
stc
xor
sbb
xchg
push
dec
push
mov
stc
jl
cmp
pop
pop
jge
das
mov
cmpsl
lret
cmc
loopne
hlt
lds
cmpsl
push
hlt
push
inc
and
push
push
push
insl
mov
jb
mov
mov
inc
repz
lahf
cltd
cmp
mov
nop
mov
cmp
call
dec
icebp
jp
aas
and
mov
int3
stos
mov
add
lds
fbstp
cmp
mov
roll
fdivs
inc
sub
mov
dec
inc
shr
pop
cmp
repz
scas
jecxz
cmp
mov
or
ret
inc
addr16
mov
test
dec
mov
or
mov
and
jno
mulb
inc
or
mov
daa
scas
pusha
es
mov
daa
jae
xor
and
aaa
nop
lods
add
mov
xchg
lret
das
xchg
xchg
bound
jno
out
jno
daa
push
ljmp
mov
mov
push
inc
mov
push
dec
sbb
xchg
scas
cwtl
test
or
inc
fcompl
lret
mov
jbe
ret
pop
ret
sahf
inc
sub
je
adc
mov
mov
fnstenv
sbb
repnz
inc
cmpsb
sub
push
push
inc
mov
jg
cli
int
into
scas
pop
xor
mov
sysexit
stos
cli
pop
sub
flds
out
push
cmp
add
inc
shll
jnp
jne
fwait
aaa
jnp
mov
sbb
imul
mov
inc
xchg
aam
fs
xor
adc
ja
out
and
add
pop
mov
jnp
cmpb
mov
adc
push
jp
push
adc
ds
leave
mov
sbb
mov
fcomps
mov
int3
test
mov
out
push
cwtl
inc
jl
pop
cs
addr16
fnstsw
pusha
outsl
or
divl
sub
ljmp
and
jp
adc
stos
pop
dec
xchg
ror
push
dec
arpl
adc
mov
stos
mov
xchg
mov
test
mov
mov
lcall
adc
and
push
dec
jbe
arpl
pop
outsb
fldenv
ficoms
icebp
fwait
jne
repz
ss
loopne
iret
lret
fs
pop
popf
dec
cmpsb
stc
pop
sbb
add
cmp
cld
rcll
test
push
cmpsl
xchg
jno
enter
cmp
subl
sub
cmp
scas
aaa
jne
xor
sbb
movsl
aam
rcrl
aam
bound
mov
and
aam
fistps
lea
cmp
inc
dec
lods
insb
notl
xchg
mov
jle
cltd
aaa
fidivs
dec
pusha
cmpb
shlb
insb
adc
add
mov
stos
xor
mov
lcall
and
rolb
xchg
rclb
push
loope
aas
cmp
sbb
jb
mov
movsl
push
pushf
and
test
aam
or
or
jl
test
cmp
scas
add
mov
sub
jl
sbbl
movsb
loope
xchg
push
cltd
push
pop
xchg
shlb
sti
cld
cwtl
sbb
dec
aam
out
lds
xor
rcll
push
repnz
pusha
dec
jp
out
lahf
dec
push
lock
jecxz
mov
cmp
push
in
fs
inc
push
bound
mov
ss
mov
gs
scas
dec
sbb
pushf
cmpsl
lods
xor
sbb
shl
sbb
pop
je
jecxz
pop
mov
dec
add
test
cmpl
xor
xchg
mov
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
outsb
test
adc
push
clc
adc
aam
inc
add
fld
test
jl
movsl
fnsave
mov
jg
stos
insl
mov
stos
xchg
out
dec
sbb
js
add
mov
stc
int
push
pop
pop
or
int3
je
sahf
dec
add
fadd
xchg
filds
sub
push
dec
xchg
push
inc
scas
int3
cmp
shr
ffreep
mov
std
mov
pop
pop
sbb
aad
mov
pop
push
fnstenv
mov
insl
pop
leave
mov
cmp
test
lahf
stos
js
mov
pop
mov
pop
arpl
icebp
rclb
sbb
mov
or
mov
and
out
mov
mov
clc
adc
ret
pop
mov
les
xchg
aaa
fdivrp
iret
or
lods
test
pop
adc
push
adc
xor
add
cltd
mov
stos
daa
jp
dec
shr
mov
inc
in
mov
dec
clc
stos
push
test
jl
ficomps
sub
mov
xchg
dec
out
pop
test
cmpsl
push
into
scas
stos
push
shlb
cld
jnp
mov
cld
scas
xor
out
in
pop
jle
pop
aas
negl
pop
addr16
jno
clc
fidivs
cmpsb
mov
ficoms
inc
or
add
cmpsb
loope
mov
fidivrl
hlt
pop
pop
dec
loop
lcall
xchg
jg
or
mov
inc
mov
xor
lods
push
fxam
insb
pop
pop
mov
xchg
sar
or
imul
sarb
lods
and
fnstcw
sub
mov
adc
dec
and
fwait
call
dec
rep
cmp
jge
fwait
jae
loope
or
lahf
mov
adc
dec
push
push
fwait
xchg
pushl
cmc
out
cmp
cmc
mov
scas
out
adc
rclb
lahf
cmp
lock
movsl
xor
or
shrl
movsb
test
sub
mov
lods
adcl
xlat
out
sti
pop
loop
sub
lahf
pop
jb
dec
pop
addr16
cli
insl
ret
test
xlat
mov
and
sti
jb
jl
cli
out
stos
inc
lcall
mov
and
int
mov
or
lcall
outsl
mov
movsb
inc
lret
pushl
lods
xor
push
ds
addr16
aaa
scas
call
ss
jns
loope
mov
rcrl
pop
xchg
shrb
adc
imul
jg
insb
cli
les
outsl
mov
stc
decb
add
mov
mov
rol
shll
sbb
dec
mov
out
fld
inc
sbb
xor
or
scas
fmul
clc
mov
pop
in
jae
mov
pop
inc
adc
mov
jecxz
in
fistpl
cmp
push
idivb
imul
fnsave
mov
inc
ja
out
aam
inc
xchg
les
aam
push
inc
jmp
push
adc
fists
push
jno
lahf
dec
push
movsl
sbb
xor
fadds
xchg
dec
enter
popf
mov
cwtl
jnp
and
push
jo
xorb
jbe
or
pusha
leave
jbe
sbb
push
iret
mov
cmp
scas
pop
lods
jl
je
jb
inc
xchg
insb
sub
subl
cmc
cmp
popa
push
lods
in
xor
pop
sbb
pusha
jmp
xor
inc
pop
in
pop
xchg
inc
jns
mov
adc
js
mov
cmpsl
or
stos
arpl
push
mov
outsl
pop
push
pop
into
orl
js
inc
lcall
lds
pusha
dec
adc
sbb
imul
pusha
mov
mov
cmc
testb
nop
sti
jnp
xchg
cmp
repz
test
lods
ret
fistps
cltd
and
in
sub
cbtw
stc
fldl
pop
mov
cmpsl
dec
push
insb
pop
adc
popa
push
insl
mov
scas
test
cmp
out
mov
aas
fidivrl
subb
es
bound
enter
loope
push
imul
adc
push
dec
pop
or
push
fstpl
adc
jg
inc
fwait
vandnps
lahf
test
pop
add
inc
mov
js
das
clc
sti
or
and
aaa
sarl
add
fistps
and
add
pop
std
dec
inc
adc
jmp
or
push
lock
push
adc
mov
mov
cmp
push
std
mov
xchg
jnp
dec
dec
mov
xchg
inc
sahf
sub
popa
lea
add
jb
mov
push
ret
mov
cmp
xlat
push
adc
in
aaa
fsubrl
movsb
fiadds
cmpsb
popf
pop
scas
setb
mov
mov
scas
out
sbb
mov
mov
test
mov
and
mov
push
pop
cltd
imul
xchg
add
hlt
lods
test
mov
ljmp
js
or
push
rorl
mov
mov
lret
out
push
cmpsb
test
inc
or
in
cmp
int3
lcall
rorb
add
out
sbb
pop
out
lret
adc
add
in
std
mov
dec
xchg
ds
aaa
sbb
jns
imul
mov
dec
pop
sbb
adcl
dec
in
adc
jbe
addr16
cmpsb
sbb
mov
sbb
mov
dec
sbb
fnstenv
mov
pop
sbb
loopne
stos
push
jbe
ret
sahf
inc
call
mov
sbb
push
pop
push
ret
sahf
loope
adc
fsubrs
lock
add
adc
iret
jne
mov
add
and
loop
mov
xor
push
dec
adc
dec
and
jae
sub
xlat
inc
mov
mov
add
out
xchg
into
jg
call
push
mov
in
lods
gs
mov
mov
movsl
repz
xor
sbb
pop
xchg
popa
int
test
push
inc
je
inc
inc
adc
and
mov
shrd
shr
mov
mov
xor
shl
jmp
lods
jmp
nop
cmp
push
add
es
push
clc
adc
gs
sub
mov
mov
pop
fwait
mov
mov
push
pusha
xor
in
and
dec
mov
inc
jge
xor
xchg
inc
pop
sub
mov
mov
je
sub
mull
sti
push
sarl
xchg
sahf
mov
popf
push
xor
xchg
insl
xor
sub
mov
adc
and
daa
loop
push
popa
sub
out
jmp
push
in
ret
int3
add
lcall
xor
addr16
sbb
lahf
mov
mov
mov
ss
sahf
outsb
bound
push
cmp
mov
pop
ljmp
xor
adc
inc
cmp
leave
lods
ja
lods
hlt
inc
aaa
cmp
das
int
sub
addr16
aad
hlt
aad
inc
fwait
adc
int3
adc
xchg
cmpsb
in
std
push
xor
cwtl
cmp
pop
popf
mov
cli
das
inc
add
lock
scas
clc
shlb
jl
mov
and
pop
test
orl
and
insb
pop
fnstcw
xchg
iret
ds
js
sub
sub
insb
push
inc
enter
es
test
insb
push
test
inc
mov
xor
or
in
mov
sub
fadds
sbb
sub
in
aaa
nop
test
sahf
dec
xor
notb
inc
ljmp
cld
movsb
sbb
mov
or
insb
push
cmp
add
das
push
cmp
fcmovb
jns
stc
lret
int3
sbb
shrb
adc
push
xchg
sub
std
sbb
iret
cmp
mov
and
mov
stos
or
enter
sbb
out
leave
in
mov
sbb
xor
cmp
cmpsb
leave
mov
xchg
pop
mov
add
inc
fnsave
cmp
jnp
jae
xchg
inc
orb
ljmp
outsb
mov
test
mov
movsb
pusha
hlt
incb
insb
cmpsb
cmp
icebp
add
into
mov
or
sub
cmp
movsl
outsl
jmp
je
inc
outsb
flds
pop
dec
mov
in
cld
gs
cmc
mov
aam
lods
out
dec
lods
lret
shlb
fbld
pushf
push
gs
push
sbb
mov
mov
cmpsb
push
push
int
jno
xchg
subb
sbb
xchg
test
mov
scas
outsb
dec
out
jecxz
sbb
dec
enter
mov
xchg
or
hlt
test
jno
scas
cli
decb
clc
sbb
fs
inc
mov
clc
cs
xchg
fnstcw
test
ljmp
aam
and
or
dec
and
jmp
lods
or
outsl
scas
test
ss
into
sbb
push
xchg
jg
loop
and
inc
or
scas
xor
imul
outsl
pop
stos
xchg
xchg
cmp
loop
movsl
pop
test
inc
subb
sbb
rcll
pop
pop
add
cltd
mov
repz
push
das
iret
push
leave
inc
push
sbb
mov
lock
imul
les
rorl
rorb
gs
mov
add
cwtl
les
cmp
fiaddl
iret
push
rclb
cmpsl
jno
dec
sbb
mov
dec
fwait
xchg
lock
pusha
or
pushw
cmp
fstpl
mov
insb
xchg
scas
outsb
ds
add
rclb
xchg
jle
js
pusha
xchg
add
rorl
add
jno
lcall
test
xorl
stos
fsincos
rorb
lret
or
dec
stc
incb
sbb
push
xor
cwtl
pop
pusha
sub
loop
and
cmc
add
sbb
pop
rcrl
test
lods
outsb
insl
cmp
in
sub
pop
sub
into
adc
pop
fcomps
inc
pusha
cmp
addr16
ss
dec
xchg
dec
dec
inc
jno
or
xchg
sti
sub
das
push
pop
sar
adc
scas
pushf
test
inc
inc
dec
sarl
lahf
dec
jno
cmc
mov
pop
dec
mov
stos
loop
jb
or
inc
mov
and
repz
loop
sbb
pushf
rcrl
test
pop
jae
int
cmp
sub
arpl
pusha
insl
data16
js
ljmp
lock
add
mov
cmp
lea
mov
lods
cmp
aam
out
pop
stos
ljmp
pop
pop
inc
cmp
dec
add
je
push
in
enter
sarl
inc
clc
or
pop
stc
inc
sbb
add
fistpll
mov
dec
loopne
mov
std
lret
stos
jmp
daa
sub
pop
xorb
pushf
jmp
rclb
jae
mov
out
into
lock
lahf
push
pop
dec
adc
gs
push
mov
loopne
pusha
std
outsb
imull
push
sbbb
testb
xor
or
aam
mov
push
or
or
adc
rcll
xchg
test
pushf
test
imul
dec
outsl
xor
pop
out
jg
ret
mov
in
sbb
xchg
mov
outsb
repz
pushf
das
inc
mov
mov
stos
dec
or
outsb
clc
ss
ja
je
mov
xchg
adc
inc
js
mov
xchg
mov
insb
sbb
roll
sahf
dec
pop
adc
scas
pushf
int3
in
dec
add
and
fs
insl
or
sarl
and
adc
jb
aam
in
inc
sbb
jle
icebp
es
rcll
and
jae
sub
inc
xlat
and
fimull
mov
inc
jo
rcr
jo
and
aaa
outsl
xchg
adc
mov
ja
mov
xor
arpl
push
dec
push
cmc
mov
fsubs
imul
pushf
stos
xor
lea
int
fistpl
lock
adc
cmp
loope
jmp
push
jne
inc
mov
popa
adc
orl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
icebp
inc
push
or
push
clc
adc
bound
int3
cld
sbb
rolb
addr16
push
xchg
jbe
jecxz
or
addr16
adc
jmp
test
cmc
xchg
fs
ja
adc
jge
ret
shld
jnp
cmpsl
inc
lock
test
repnz
jb
jmp
dec
popa
xor
mov
or
mov
mov
fistpl
pusha
ror
dec
cmc
dec
arpl
push
mov
sahf
cmp
bound
cmp
pop
add
mov
int3
xor
mov
jl
mov
call
scas
push
bound
and
js
cmp
int
dec
sbb
lea
sbb
sbb
xor
sti
jp
adc
stos
stos
bound
jl
dec
icebp
scas
mov
adc
ret
les
sub
scas
daa
je
sbb
and
mov
dec
push
lahf
jb
in
and
add
fbld
leave
xchg
fiadds
aam
mov
jno
bound
icebp
sbb
loopne
mov
dec
cmp
xor
xchg
jg
push
jecxz
pop
and
adc
mov
int3
pop
fcoms
add
ds
aad
add
addr16
xchg
aam
cs
or
mov
jmp
fstps
jb
sub
sub
loop
xchg
mov
cmp
rcl
push
jle
push
pop
pop
push
mov
outsl
call
std
xchg
inc
sbb
or
int3
xchg
sub
popf
inc
decb
outsl
or
rorl
cli
ret
or
dec
sbb
xchg
jo
movsb
jb
pop
mov
insb
movsl
repz
mov
sub
inc
lock
iret
pop
cwtl
fwait
rorb
out
sub
jnp
lods
pop
cmp
adc
rcrl
pushf
cmp
in
inc
ss
mov
xchg
rorb
lcall
ja
cmpsb
cmpsb
and
xchg
fisubrs
adc
jo
dec
loop
and
or
xchg
push
pop
sbb
test
inc
rcl
dec
fdivl
and
push
jl
mov
xchg
mov
mov
icebp
popa
cmpsl
shl
dec
imul
rorl
bound
pavgb
cmp
cmp
and
out
push
sub
cmp
pop
xor
jmp
adc
jno
aad
imul
es
inc
push
jnp
popa
out
popf
dec
mov
rorl
xor
jae
fisubrs
das
ljmp
les
hlt
in
loope
push
pop
mov
scas
add
iret
test
iret
adc
fidivrs
movsb
jle
or
dec
mov
jecxz
add
out
in
adc
dec
dec
pop
pop
ljmp
xchg
lret
and
add
mov
sub
shrl
loope
in
loop
call
sbb
dec
lea
imul
cmp
jg
mov
sbb
or
cmp
sbb
xchg
fsubrl
loop
std
jns
fmuls
jmp
lret
cli
cli
test
jns
mov
jl
inc
popf
lods
add
push
cmp
out
ss
push
pop
jb
in
test
mov
jo
or
sbb
outsl
jg
nop
out
jns
daa
add
stos
push
daa
or
jno
pushf
cld
addr16
loopne
push
sub
call
arpl
add
movsl
loope
test
pop
jp
xchg
popa
inc
test
sbb
push
mov
movq
dec
inc
sti
gs
adc
stos
ret
dec
or
nop
scas
add
ret
xchg
sbb
jbe
aas
roll
pop
and
fisubrl
outsb
cmp
sbb
or
cld
push
ret
lock
adc
jno
les
cmp
addr16
cmp
sub
sbb
icebp
mov
xor
cmp
xor
push
pop
adc
sub
or
adc
sbb
and
clc
and
sub
sti
bound
in
and
mov
mov
mov
xor
jl
xorl
movsb
arpl
pop
repz
mov
sub
jo
mov
sub
jno
sbbb
mov
xor
fidivrs
orl
inc
in
fcmove
xchg
pop
test
fcoml
insb
dec
inc
ss
and
sti
mov
cmp
xchg
out
pop
mov
frstor
add
lret
pop
ret
dec
and
ss
mov
sbb
scas
xchg
fs
shrb
inc
sti
rcl
out
insb
neg
and
jg
jno
inc
cmpsl
rol
hlt
fidivl
hlt
out
popf
movsb
adc
arpl
bound
and
scas
mov
insl
dec
lds
mov
ljmp
jne
sbb
adc
negl
xchg
xchg
mov
clc
xchg
fstpt
cmp
lahf
ds
dec
lahf
cmp
push
popf
mov
pop
push
sbb
sub
rcll
inc
mov
hlt
or
out
and
cmpsl
mov
fdivl
sbb
mov
gs
testl
fiadds
and
dec
loope
lods
push
jne
dec
cli
inc
cmp
lret
andb
cmp
dec
mov
shll
xlat
dec
cmp
lds
loopne
xchg
and
nop
in
sub
out
daa
sub
sahf
sbb
or
or
xor
and
js
mov
sub
sub
or
in
mov
push
cmp
and
icebp
xorl
sub
push
or
mov
cmp
mov
out
lock
fldcw
cli
sbb
xor
push
mov
cmp
cmpsl
aad
aam
jle
adc
cmpb
adc
das
int3
mov
std
inc
xchg
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
and
adc
clc
adc
inc
push
mov
shll
push
shrl
loopne
repnz
out
pop
lock
mov
xor
outsl
jbe
pusha
pop
rcrl
add
mov
xor
pop
out
out
fidivs
daa
imul
mov
mov
rorl
int3
fistpll
adc
mov
repz
in
lcall
mov
lcall
sbb
out
xor
lods
xchg
jo
inc
and
sbb
data16
add
fcoms
lahf
negb
mov
push
xchg
lret
adc
xor
mov
xor
and
jnp
cmpsb
shll
cwtl
pop
and
pusha
fsubrl
loope
sub
aam
mov
loope
push
repnz
mov
scas
add
test
mov
sbb
mov
into
mov
or
or
sub
ds
pop
dec
stc
xor
push
add
adc
xor
add
jnp
je
or
ret
xchg
or
push
and
mov
in
mov
jge
jp
sbb
cmp
sbb
leave
pop
add
xor
pop
cs
pop
sub
mov
xor
or
cmpb
ja
mov
dec
or
mov
mov
nop
and
cs
dec
sahf
mov
icebp
and
push
and
add
push
ds
and
stos
sub
movsb
sbb
out
js
push
inc
cmpsb
sub
push
test
das
adc
xor
pushf
mov
popa
fwait
pop
lret
jge
mov
test
cmp
add
cwtl
cwtl
mov
dec
cmp
scas
xor
sub
mov
popa
divl
sub
aaa
fs
clc
loopne
out
adc
imul
sub
cmp
add
pop
pushf
rolb
scas
push
cmp
in
imul
cmp
adc
mov
lret
rolb
les
xlat
in
cmp
pop
sub
fdiv
enter
lds
roll
mov
mov
jb
adc
adc
std
fnstenv
mov
pushf
and
and
sub
sub
rcr
sub
cltd
cmp
std
dec
sbb
out
or
mov
sbb
push
jp
and
mov
aaa
stc
ja
inc
mov
bswap
int3
sub
in
inc
and
xchg
fisubrs
xor
fmul
lock
dec
repz
sbb
and
daa
rorb
add
sub
movsl
adc
mov
fstps
inc
sbb
stc
inc
pop
jmp
jmp
adc
loopne
xor
and
in
mov
outsb
jp
jne
cmp
sub
and
or
cmc
jns
data16
sti
fidivrs
pop
mov
pop
adcl
xchg
push
fnstsw
push
inc
ffree
push
inc
mov
xor
sbb
and
dec
mov
sub
repnz
stc
sbb
fiadds
cmp
shrl
or
jo
pop
test
inc
cwtl
pusha
aad
dec
js
and
or
xchg
pop
es
scas
dec
shrl
ss
add
jmp
dec
call
popf
push
sahf
add
jle
jnp
lcall
test
xchg
xchg
mov
shrl
pop
cli
bound
mov
xor
mov
and
jnp
sub
sbb
data16
imul
lods
and
ja
mov
jnp
mov
mov
mov
mov
or
inc
adc
jno
das
stos
test
xchg
push
cmp
call
fisttpll
and
arpl
test
fincstp
aam
push
lods
shrl
lea
inc
or
pop
jo
inc
mov
push
push
dec
push
sbb
xchg
mov
push
sbb
push
adc
mov
add
mov
lds
movsl
pusha
dec
movsb
lock
call
mov
bnd
lcall
in
pusha
push
push
les
movsb
out
inc
fbstp
mov
push
iret
mov
inc
sub
pop
fwait
incb
lds
sbbb
scas
imul
lods
push
push
fmuls
jp
in
sbb
enter
xlat
mov
mov
jae
in
nop
je
push
mov
call
leave
les
andl
adc
sti
jle
xchg
iret
leave
and
xchg
test
cltd
add
adc
add
fcom
adc
or
popf
inc
pusha
and
pop
sub
sub
cmp
int3
imul
pop
testb
push
fdivr
add
sbb
sbb
xor
push
test
loope
les
sbb
lods
mov
push
or
mov
arpl
add
cmp
xchg
jmp
fstpt
dec
push
popa
jmp
lock
xchg
inc
jp
push
or
test
jo
imul
addl
mov
int3
push
out
jg
and
aad
leave
push
mov
js
inc
jecxz
mov
xchg
or
cltd
mov
out
das
nop
dec
vmread
sbb
push
cwtl
dec
adc
lcall
int
in
adc
mov
pop
mov
pop
gs
xchg
pop
xor
push
mov
fdivl
std
push
lret
sub
mov
test
mov
aad
cmp
mov
sbb
xchg
sbb
es
mov
xchg
xor
jl
sbb
jmp
and
push
ret
jbe
inc
hlt
mov
bswap
inc
inc
push
push
mov
pop
mov
pop
jb
adcb
aad
pop
bt
insb
movsb
leave
je
repnz
ljmp
sarb
cmc
dec
mov
fwait
dec
fmul
lea
add
nop
sbb
gs
inc
push
pop
fbld
pop
xchg
aaa
in
scas
add
addr16
or
adc
cwtl
dec
inc
sub
mov
enter
pop
push
jb
pop
test
fimull
sar
inc
adc
or
mov
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
inc
aad
adc
clc
adc
stos
cmp
enter
and
mov
test
test
mov
sbb
shrl
pop
push
cmp
jo
xchg
insb
or
shll
punpcklbw
cmpsl
fdivrl
test
imul
sub
bound
pusha
icebp
rcrl
stos
jl
push
push
mov
sub
loopne
mov
scas
imul
mov
stos
imul
in
lret
ja
and
fdivs
insb
jae
ret
cmp
jle
mov
stos
dec
sub
fwait
or
pop
jnp
leave
or
or
aaa
roll
push
push
ja
mov
shlb
inc
inc
jbe
ret
xchg
icebp
aad
les
ret
xor
mov
pop
mov
cmp
sub
xlat
ret
mov
andl
xor
sub
jo
imul
jle
enter
inc
jae
xor
pop
int3
mov
cmpsl
xor
ss
adc
stos
xor
push
cli
stos
push
popa
rcll
aad
adc
xchg
out
pop
or
or
shrb
push
into
sarb
outsb
fs
mov
repnz
mov
and
cmp
shl
pcmpeqw
mov
pop
push
dec
shr
add
pop
adc
xchg
and
ret
aaa
popf
sahf
push
mov
nopl
jo
or
push
mov
popf
xchg
mov
incl
pop
popf
shlb
mov
and
sbb
call
xorl
fwait
fwait
or
aas
ret
cmp
shrb
mov
jge
sbb
out
test
mov
pop
inc
xchg
inc
xor
fcompl
je
add
inc
stos
dec
push
nop
push
ret
mov
sub
pop
bound
std
mov
push
inc
loop
sarb
adc
test
sub
or
out
insl
loopne
add
in
mov
imul
in
xchg
stc
scas
out
hlt
mov
mov
dec
fcomps
pop
dec
sbb
or
rorl
jno
fwait
rcrl
test
mov
mull
sub
aas
call
fst
mov
out
cwtl
imul
aaa
jmp
and
aad
mov
shll
cmp
mov
cwtl
xchg
mov
xchg
mov
xchg
pop
push
cli
fdivrl
aas
fdiv
xchg
fs
shl
mov
jbe
xor
rcrl
xor
mov
in
xchg
jnp
jmp
outsb
lods
test
lahf
cmp
xor
jl
jl
cmp
jge
lret
test
rcrl
pusha
jg
inc
lock
jp
push
jnp
mov
clc
sarb
pushl
xor
pop
imul
pop
pop
xlat
imul
jmp
pop
test
inc
cmp
xchg
and
dec
push
xor
dec
push
push
das
in
sar
imul
pop
adc
pop
mov
adc
jmp
pop
popf
or
je
inc
and
pop
out
push
dec
xchg
into
ja
test
mov
cmp
movsb
insl
rcr
shl
fdivrl
mov
mov
pop
xchg
call
sub
nop
sbb
sub
enter
mov
imul
cmp
mov
push
pop
data16
add
push
mov
gs
jb
pop
dec
sbb
call
aaa
pop
sbb
cmp
jae
or
shl
cmpsl
mov
pop
incl
stos
lods
adc
xchg
out
aad
lcall
das
mov
enter
pop
aas
popa
jl
decb
pop
lods
push
pusha
sub
dec
out
mov
dec
xor
push
xchg
mov
test
dec
xor
xchg
xor
imul
arpl
idivb
lret
loopne
imul
adc
sub
scas
mov
ret
repz
test
pop
cmp
fwait
shrb
xor
push
iret
repz
arpl
out
jmp
jecxz
cmp
jge
mov
mov
sub
cwtl
xchg
inc
in
in
or
adc
ret
iret
inc
mov
cmc
xchg
and
test
jecxz
testb
mov
in
hlt
or
sbb
inc
test
jp
mov
pop
cmp
dec
mov
popa
or
movsl
popf
inc
jl
aam
xor
gs
fisubs
jecxz
jge
mov
xchg
adc
daa
das
pop
nop
test
sub
jo
int
fcmovnu
into
sahf
mov
add
sub
std
sub
adc
js
cmp
aas
ror
test
xor
sub
push
cltd
jl
adc
push
mov
popf
imul
adc
jecxz
lods
dec
xor
mov
pop
ss
push
xchg
adc
mov
sbb
dec
cmp
clc
sub
cmpl
inc
sub
xor
mov
cltd
icebp
lods
dec
jae
mov
out
ret
lea
out
mov
lock
test
sub
jo
inc
ljmp
and
jns
mov
cmpsl
enter
add
xchg
cli
jge
pop
push
aas
ds
adc
int3
ljmp
popf
mov
or
ljmp
pop
scas
xor
push
fwait
push
push
movsl
pop
mov
idivl
scas
cmp
xchg
cltd
push
adc
aad
inc
push
and
pop
add
mov
popa
enter
cmp
jecxz
mov
out
add
jnp
dec
scas
push
dec
mov
push
stos
pop
pop
xchg
push
and
push
sbb
lahf
xchg
std
imul
scas
push
add
lret
cmp
sub
mov
pop
bound
cwtl
adc
pop
push
sbb
add
test
lods
fcmove
hlt
jne
adc
cmp
call
xchg
outsl
andl
inc
adc
sbb
les
sub
cmp
sbb
cmc
pop
rclb
pop
inc
cltd
and
push
cmc
adc
pop
cs
push
ret
cwtl
and
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
fcmovu
adc
adc
clc
adc
inc
sbb
sub
xlat
testb
iret
xchg
push
aad
jmp
imul
jbe
pushf
cmp
or
add
fs
inc
shlb
stos
jo
out
lea
push
mov
xchg
mov
aad
aad
pop
aad
dec
imul
js
jle
and
cmp
or
add
push
adc
stos
inc
in
or
lods
cmpb
push
pop
test
mov
add
test
adc
mov
cmp
pop
push
imul
out
push
test
out
lds
pop
js
cltd
neg
sbb
int3
test
mov
stos
test
dec
inc
cmp
mov
test
and
loopne
mov
fadd
shr
das
sub
xor
jle
call
and
and
push
mov
les
or
cmpsb
rorl
cwtl
mov
orb
lahf
fstpt
bound
es
loope
icebp
out
sub
mov
lcall
je
loope
adc
fldcw
jo
ret
inc
dec
xor
insb
mov
clc
fdiv
mov
test
sbb
adc
pop
or
ja
cltd
insb
in
out
jnp
jnp
jle
add
int3
cmp
popf
push
push
or
pop
or
pop
lds
xor
jo
or
pushf
scas
push
mov
mov
pop
lea
adc
test
nop
aaa
push
cmp
in
or
adc
jle
leave
insl
out
imul
dec
ss
scas
lcall
jae
mulb
xchg
jle
lret
inc
popa
or
jns
jns
pop
add
imul
xor
ret
mov
mov
mov
jl
or
jnp
int3
add
jne
cmp
mov
jp
movsb
lea
xchg
repnz
sbb
test
adc
mov
jae
popa
cmc
xor
push
inc
sti
cmp
js
jecxz
mov
int3
call
out
rcll
sub
adc
sub
mov
and
dec
cmp
arpl
sbb
mov
mov
mov
arpl
lods
dec
imul
imul
inc
cwtl
add
cmpsl
adc
cs
jecxz
insb
adc
push
pop
jae
jnp
sub
mov
rclb
xchg
jns
xchg
addr16
mov
mov
fimull
pop
stc
push
pop
sbb
mov
cld
sub
cmp
lahf
xchg
test
nop
push
leave
fcoml
xlat
sub
cwtl
dec
pop
ficoml
cmp
out
mov
jmp
inc
xchg
dec
sahf
and
ljmp
mov
loope
xchg
add
outsl
mov
mov
jg
fiaddl
scas
fisttps
gs
push
jne
jae
fadds
cmp
scas
subb
int
sbbb
stos
jle
cmp
push
lahf
fisttpl
mov
faddl
cmp
cmp
outsl
add
or
shll
iret
outsb
loop
cmp
add
mov
mov
test
and
imul
jbe
shld
insb
lahf
sub
mov
lret
movsw
mov
les
lahf
enter
push
neg
sbb
call
cmpsb
adc
jnp
fldenv
inc
iret
out
jmp
fidivs
and
mov
call
mov
add
mov
pusha
pop
adc
adc
adc
lds
xchg
jnp
insl
xchg
in
mov
fucomp
lds
xchg
lret
sub
jns
mov
ret
dec
inc
and
cmp
inc
mov
add
test
pop
or
test
sub
fisttps
mov
or
push
mov
nop
xchg
jge
aad
stos
stos
int3
sbb
fnstcw
push
hlt
sub
in
cmp
mov
outsl
out
aas
addb
lahf
jmp
add
lahf
cmp
mov
mov
jecxz
dec
sub
fnstenv
lea
jae
int
or
icebp
sbb
ja
int3
cmovge
jb
xchg
mov
inc
lahf
dec
and
pop
scas
xchg
lods
xchg
xor
sbb
jge
mov
stos
ficoms
stos
rolb
xchg
jg
xor
les
mov
pusha
es
mov
push
add
jae
jmp
adc
sub
mov
sbb
leave
and
xchg
mov
cmp
test
mov
les
stc
je
icebp
jnp
insb
in
loop
std
cs
insl
mov
fs
dec
sub
sbb
and
pushf
sbb
iret
or
lods
test
dec
stc
mov
mov
in
stc
mov
imul
mov
divb
xchg
outsl
sub
mov
fisubrl
int
pop
pop
test
pop
aam
mov
adc
mov
into
adc
inc
subl
imul
mov
into
cmpsl
cmpsb
push
add
fsts
shrl
push
adc
test
iret
mov
push
add
je
push
insl
pop
jo
test
cmc
mov
sub
dec
dec
es
inc
jmp
adc
ja
mov
mov
or
mov
dec
pop
dec
pusha
aaa
cmp
inc
pop
sahf
cmpsl
cmp
mov
mov
icebp
cmp
push
cld
xchg
ss
xchg
sbbl
lds
cmp
push
cld
push
pop
stos
imul
fidivl
popf
xor
or
push
push
repz
adc
fmul
add
ret
sbb
gs
repnz
repnz
xchg
repnz
adc
ficomps
pop
pop
icebp
ja
mov
fdivl
cld
in
adc
cmp
shl
push
mov
imul
sbb
cltd
sbb
scas
mov
js
jmp
sbb
mov
push
inc
mov
sarl
in
or
adc
ljmp
in
jbe
rorl
push
push
jo
mov
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
fisttps
pmulhuw
push
jecxz
adc
clc
adc
and
int3
movsl
dec
sub
out
loop
and
push
cs
push
lods
movsb
and
push
cltd
xor
lods
enter
lock
and
shll
loop
mov
mov
clc
xor
std
xor
mov
mov
push
hlt
mov
rcr
mov
mov
xor
adc
stc
lcall
mov
push
test
mov
stos
bsr
mov
popa
push
jmp
iret
jns
fs
sbb
cmc
testl
pop
loop
inc
mov
xlat
xchg
xlat
sbb
pop
inc
jg
lahf
jl
dec
ret
push
jge
scas
mov
cmp
je
adc
mov
sbb
xchg
xor
add
das
cmp
pop
lret
sbb
xchg
xchg
mov
push
repnz
sbb
adc
cmp
int3
jno
adc
xor
lock
sahf
decb
mov
mov
jl
test
orl
insb
cmp
dec
lcall
xchg
mov
loopne
push
xorl
sbb
dec
clc
push
cmp
mov
outsl
mov
sbb
popa
or
pop
call
iret
add
je
pop
iret
xchg
push
pop
sub
mov
xor
add
adc
xchg
hlt
cmp
rsqrtps
mov
pop
cmp
inc
je
pusha
fiadds
inc
jg
fcomps
mov
ret
pop
lret
movsb
jmp
in
test
mov
or
and
lcall
add
pop
pop
shlb
push
in
shll
jle
sar
pop
out
lods
xor
mov
mov
jnp
int
sub
pop
shrb
dec
scas
int
scas
jae
pop
mov
out
cmp
std
jp
adc
jo
inc
cltd
mov
and
loopne
mov
or
mov
mov
imul
subl
int
dec
negl
stos
out
cmp
jo
or
data16
lcall
xchg
xor
shr
loopne
loopne
or
inc
pop
dec
test
xchg
inc
ljmp
jecxz
in
lcall
sbb
xorl
out
jle
sub
inc
mov
inc
std
fistl
push
jecxz
test
mov
add
sub
xchg
out
cli
push
daa
mov
xor
leave
div
shll
jle
inc
sbb
hlt
sub
shr
sbb
addr16
inc
jno
pop
cmpl
out
push
in
adcl
dec
adc
cld
dec
lea
jne
push
mov
ret
lret
rcrb
or
adc
cmc
add
cmpsl
jnp
pop
lods
mov
insb
push
sbb
fnstsw
dec
push
mov
push
cmp
insb
shrl
and
xor
lods
in
in
jns
mov
inc
fincstp
jno
out
pop
inc
pop
pop
lahf
jmp
add
xchg
push
xchg
xchg
scas
mov
lds
or
mov
inc
pop
je
inc
aam
xchg
jb
lods
ret
in
jno
addl
sbb
mov
add
negb
or
lret
int3
mov
addr16
test
fisttpll
in
lahf
pop
add
cmp
xchg
xor
jbe
inc
mov
or
mov
xorl
lea
dec
cli
faddp
ret
daa
mov
mov
outsl
pushf
stos
jne
stc
adc
push
mov
cmp
pop
fbstp
and
lds
pop
push
adc
pop
pop
outsl
je,pn
cwtl
inc
xchg
xor
rcrl
xor
mov
enter
push
dec
inc
in
sub
addr16
imul
out
addr16
popa
mov
sarb
out
push
movsl
cmp
add
pop
dec
jnp
outsb
cwtl
pop
add
aaa
sbb
xchg
push
movsl
mov
mov
std
inc
dec
or
pop
enter
outsl
jnp
lock
and
and
test
sti
xor
flds
cld
cmpsb
add
mov
adc
je
ss
shlb
stos
cmc
add
jle
jno
adc
xchg
fcoms
push
data16
adc
and
test
add
mov
sub
lods
mov
pop
call
xor
mov
mov
mov
dec
and
in
xlat
sbb
dec
push
call
ret
into
sub
js
popa
mov
les
hlt
jg
cmp
or
mov
cmp
scas
add
cmp
call
push
test
out
mov
je
add
mov
mov
add
adc
mov
test
pop
sub
mov
adc
ds
cs
sbbl
add
std
int3
lock
jbe
jae
mov
leave
adc
insl
paddsw
fidivs
lahf
adc
std
xor
cmp
inc
insb
cmpsb
xchg
xchg
sbb
sbb
fldl
ror
dec
jno
int3
mov
pop
lock
mov
add
push
xor
mov
aam
push
imul
loop
in
sub
pop
pusha
sti
in
stos
mov
push
push
aaa
jb
push
les
sbb
imull
jge
scas
and
std
jae
scas
add
jl
dec
rcr
xor
das
and
inc
dec
sub
pop
ficoml
scas
push
pushf
fidivrs
stos
clc
aad
sub
jbe
jge
shrb
insl
nop
lret
mov
es
out
adc
add
arpl
rcll
ja
daa
out
pop
je
push
or
mov
push
leave
or
pop
rorb
sub
xchg
js
imul
adc
pop
or
adc
fimuls
and
inc
mov
scas
icebp
inc
scas
in
js
mov
mov
adc
pop
mov
frstor
add
rol
out
inc
sub
pusha
mov
push
pop
stos
addr16
aas
jnp
or
test
mov
mov
iret
or
mov
or
ret
or
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
enter
xchg
aad
adc
clc
adc
sbb
add
adc
data16
mov
loop
jle
or
mov
and
xchg
pop
push
addr16
loope
les
adc
ja
movaps
xor
repnz
gs
sahf
cld
in
fsubrl
and
movsb
mov
fildl
dec
call
lea
pop
sbbl
mov
sbb
sbb
inc
dec
xchg
mov
mov
ret
rep
jb
fstl
out
mov
loop
mov
outsb
mov
inc
fidivrl
ds
enter
bound
daa
adc
dec
testb
sub
sbb
lret
jns
cs
add
cli
imul
add
sub
or
push
xchg
mov
test
aam
shl
std
xor
xor
fwait
repnz
mov
jle
sbb
adc
lret
mov
inc
lds
lret
std
lcall
dec
adc
cmp
sbb
or
pop
adc
dec
out
mov
dec
in
adc
fsubrl
cmp
push
push
aam
popa
pop
jno
cwtl
and
sub
testl
or
mov
pop
fidivrs
repz
jl
shll
fcomp
mov
mov
push
les
out
sarb
xor
lret
movsl
call
clc
cmp
jns
aad
cwtl
fmull
inc
ljmp
cmp
rorb
or
pop
call
add
outsl
sub
xchg
cmp
out
and
test
inc
xchg
add
inc
jmp
scas
hlt
inc
mov
cld
push
mov
mov
and
mov
add
xor
arpl
pusha
jae
add
xchg
mov
lahf
insb
push
fldl
mov
inc
adc
cmp
popf
lcall
mov
xchg
lods
aas
mov
sbb
push
mov
lahf
adcb
mov
mov
stc
outsl
popa
xchg
add
cld
lcall
sahf
jle
ss
xchg
repnz
cmp
hlt
lds
fdivs
jl
popa
and
repnz
push
jecxz
jge
arpl
loopne
push
sarb
lods
ja
jl
addr16
jae
adc
xor
in
mov
into
mov
add
inc
into
ja
mov
popa
fadds
push
out
inc
fs
cmp
mov
mov
lea
in
decl
loope
jecxz
arpl
int
pop
out
nop
stos
in
sbb
bswap
jns
cmp
mov
adc
jnp
out
movsb
dec
insb
outsl
mov
jp
ljmp
iret
into
mov
mov
pop
movsb
leave
test
fisttps
mov
cmpsb
icebp
call
jle
aad
xor
stos
cmp
push
sbb
lret
dec
xchg
xchg
lods
push
int3
dec
inc
loope
push
nop
pop
xor
xchg
aas
test
push
rcrl
out
mov
mov
cmp
xchg
dec
fdiv
and
ficompl
subb
sti
or
pop
pop
dec
sbb
movb
adc
pop
cmp
push
dec
pop
enter
mov
or
test
imull
out
sbb
mov
mov
aam
fucomi
addr16
lea
inc
into
test
xchg
out
dec
mov
outsl
cwtl
ss
mov
shr
sub
or
or
mov
popf
movsb
jge
int
push
addb
mov
pop
inc
xchg
enter
add
fcmovnbe
stc
fdivs
adc
mov
cmp
mov
add
cld
cwtl
stos
into
jnp
jg
jmp
adc
fstps
mov
pop
jne
pop
loopne
stc
dec
andb
dec
lods
loope
fcom
sti
lock
xor
jmp
push
fsubr
dec
or
pop
lea
test
jmp
mov
fisttpl
dec
ret
lock
ljmp
add
fildl
mov
movsl
in
add
lcall
dec
mov
fbld
mov
xchg
inc
mov
jle
dec
mov
push
hlt
mov
pop
aas
loop
dec
jno
daa
lret
pushf
jle
pop
jmp
les
aaa
mov
add
rolb
loope
jp
pop
push
dec
out
mov
adc
cmp
out
loope
jnp
enter
cmpsb
fnstsw
jno
mov
add
dec
cmc
orb
cmp
pop
sahf
or
out
jle
xor
subb
and
shlb
mov
mov
sub
mov
pop
push
ret
ds
xchg
dec
jge
mov
cs
aad
mov
adc
ficomps
aam
jno
icebp
popa
ror
mov
nop
andb
sub
inc
inc
dec
mov
ret
sbb
add
jnp
out
shlb
inc
dec
inc
cmp
fs
sub
jmp
or
cmp
mov
dec
mov
cmp
dec
iret
mov
lahf
pop
cld
inc
out
jno
cwtl
xchg
cwtl
jo
add
pop
paddusw
sbb
in
inc
mov
jns
inc
push
add
sub
fstpl
fmul
xchg
ja
mov
pop
lret
hlt
sbb
sub
dec
lods
cwtl
outsl
add
test
popl
gs
cld
shlb
mov
pop
fdivrl
push
adc
jl
or
mov
movsl
cmp
loop
push
mov
xor
lods
sti
call
roll
pop
dec
nop
or
or
adc
jb
mov
pop
push
push
pop
inc
mov
in
cmp
aaa
cmc
mov
mov
sub
int
ret
rcrb
leave
push
push
mov
or
push
xor
clc
add
sub
ja
fstp
cmc
or
cs
xchg
push
lcall
jg
cmp
rol
fdiv
fsts
pop
cltd
mov
inc
ret
cs
movsl
mov
add
cmp
stos
in
jnp
daa
adc
sbbb
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
jnp
imul
rorl
jecxz
jbe
mov
dec
pop
mov
aas
jl
mov
dec
pusha
sub
sbb
and
insl
das
andb
push
out
add
jno
adc
xchg
dec
jl
cmp
or
sarl
mov
lds
pop
sbb
imulb
mov
aas
mov
mov
sub
pushf
mov
xchg
mov
mov
push
cs
les
cmc
cmc
int3
int
add
mov
insb
jmp
roll
mov
cmpsl
daa
mov
add
xchg
or
and
cmp
push
xor
das
pop
movsb
dec
repnz
xchg
enter
mov
mov
sbb
adcl
jno
sahf
daa
dec
jnp
xchg
jmpw
popf
test
cwtl
fistpl
pop
ss
dec
fwait
pop
push
mov
stc
in
inc
test
mov
lret
out
mov
cs
jl
mov
fcoml
stc
inc
fists
pushf
int3
xchg
sub
cmp
cmp
add
in
paddsb
mov
sub
xor
jb
cmpsl
sub
in
aaa
mov
arpl
push
rcr
iret
fwait
int3
je
and
sahf
leave
add
inc
testb
sbb
xchg
dec
cmp
xor
es
and
stc
mov
test
adc
push
adc
mov
shl
sahf
sbb
ret
loope
into
lret
inc
pop
imul
sub
icebp
mov
scas
jae
xor
add
jp
fwait
sbb
lahf
ret
sbb
int
fmul
and
xor
jo
insl
adc
out
xor
fiaddl
insl
and
std
mov
adc
cmpsb
xchg
pop
adc
xchg
sti
jecxz
enter
and
rcll
outsl
popf
jmp
dec
fdivrs
inc
xor
mov
mov
imul
fnop
pop
js
mov
inc
add
and
jge
pushf
pop
push
ss
inc
dec
aad
sub
ds
xorb
pop
aaa
in
mov
in
inc
stc
sbb
mov
loopne
leave
jmp
or
in
lods
and
cmpsl
sarb
and
leave
inc
lcall
mov
sub
test
sbb
repz
dec
or
dec
outsb
jo
mov
aam
roll
mov
xchg
dec
sbbl
imul
xor
mov
sbb
xlat
insl
fdivl
sub
push
negl
mov
push
xor
repnz
addr16
imul
ss
mov
imull
inc
loopne
push
loope
and
bound
das
and
test
lods
xchg
mov
mulb
aas
lahf
dec
jecxz
inc
cltd
jle
mov
cmpsl
pop
inc
push
ljmp
xchg
ja
movsl
xchg
mov
psubsw
pop
fdivrl
mov
and
in
lock
out
ljmp
rcrl
mov
sub
ss
xor
dec
pop
gs
test
jb
leave
mov
jnp
adc
jecxz
and
data16
insl
or
fisubrl
add
add
dec
push
adc
mov
adc
in
ret
nop
adc
mov
jne
push
roll
lds
or
jo
in
adc
dec
aas
aaa
fcoml
aad
fisttpll
xchg
ja
lret
sub
shl
sub
jno
jne
adc
je
sub
repnz
in
sub
xor
add
mov
dec
mov
out
aaa
rcll
int3
fwait
push
ret
shll
testb
mov
movsl
xor
loop
mov
pop
sub
add
jmp
repnz
out
sub
push
inc
pop
push
roll
xchg
or
inc
and
test
or
inc
loope
sub
pop
dec
xor
xlat
aas
add
andb
mov
sbb
enter
dec
outsb
cs
sti
jl
adc
push
jmp
mov
or
test
and
or
sub
leave
jp
pop
pop
dec
mov
fdivl
fcoml
xor
ja
inc
inc
icebp
ljmp
cmp
stos
sti
sahf
out
rolb
iret
js
cltd
ss
nop
arpl
mov
push
outsb
test
in
out
lret
fwait
cld
insl
jg
mov
xchg
cmc
xchg
clc
lret
mov
jge
push
pop
dec
mov
data16
cwtl
dec
jge
pop
push
sub
cmpsb
adc
push
gs
dec
mov
push
xor
xchg
rcrb
shrl
push
leave
mov
inc
sub
dec
add
pusha
mov
dec
jmp
test
push
lods
add
insb
mov
out
cltd
inc
cltd
lds
repz
xchg
rorl
lret
mov
dec
loopne
add
gs
inc
lea
cwtl
enter
sbb
out
fistpl
js
sub
mov
and
xorb
mov
adc
js
loop
sub
inc
ja
mov
testl
add
jb
inc
xor
in
sbb
out
mov
ret
daa
jae
inc
ds
cmpsb
inc
dec
mov
leave
js
cmpb
mov
push
inc
jno
jnp
mov
xchg
loop
test
pop
mov
in
lods
pop
add
jl
popf
dec
pop
stos
pop
jno
inc
mov
sbb
scas
out
dec
xor
hlt
and
sbb
inc
jno
sub
cmp
decl
loopne
push
repnz
addb
stos
inc
testb
cmc
lcall
stc
dec
sbb
out
xchg
jnp
mov
sub
xor
mov
add
mov
mov
sub
mov
rorb
pop
inc
pop
jb
sti
xchg
data16
mull
test
out
sub
test
mov
test
nop
sbb
pop
add
int
outsb
jbe
and
sti
or
pop
xor
dec
push
push
fsubrl
lcall
hlt
push
mov
lock
in
movsb
popa
jbe
xor
arpl
xor
push
loope
movsl
dec
mov
fnstsw
sti
xchg
lods
mov
test
scas
sub
xchg
test
xchg
sbb
rorb
lods
cli
add
out
add
jge
xor
or
jmp
lea
cwtl
sbb
sbb
push
dec
mov
adc
clc
adc
in
push
mov
scas
sahf
loopne
mov
adc
subb
push
cmpsb
imul
popa
gs
pop
sahf
shrl
imul
sub
and
mov
mov
and
iret
cmp
mov
stc
xor
shrb
mul
movsb
nop
ds
mov
in
ljmp
dec
sarl
adc
pop
inc
ja
add
xchg
test
je
pop
xlat
inc
push
addr16
and
lret
mov
mov
js
lods
aas
scas
test
mull
repz
pop
out
jbe
sub
fadds
mov
mov
lea
jg
cmp
sti
inc
sbb
sbb
mov
mov
out
add
mov
mov
repnz
sti
inc
pop
ljmp
mov
cmp
nop
add
jnp
std
mov
xor
loopne
mov
iret
rolb
push
fsub
adc
mov
movsb
or
jecxz
inc
mov
scas
js
mov
jp
icebp
sahf
xor
scas
call
pop
aaa
shr
iret
pop
cmc
push
add
xchg
sbb
pop
rolb
ss
hlt
and
add
popf
call
imul
sub
mov
dec
cwtl
inc
push
sarb
inc
add
dec
and
fistl
mov
lret
xchg
or
mov
out
int
popa
outsl
clc
das
cli
leave
xchg
mov
jmp
sub
lret
dec
shll
in
ljmp
sbb
sbb
inc
pop
clc
fldt
sarb
jl
xchg
repnz
movsl
pop
sub
sub
sub
mov
popf
or
sub
push
and
cmp
imul
cmp
dec
insl
push
pop
cmpl
or
add
clc
xchg
fdivs
sarl
xchg
js
xorl
pop
mov
inc
bound
lods
jle
loopne
cmp
jb
inc
popa
adc
scas
scas
bound
adc
mov
cli
add
jae
jmp
dec
aaa
ficompl
fisttpl
xor
in
push
stos
or
sbb
sub
shl
rol
jns
xchg
js
pop
cltd
int
jnp
fnsave
inc
sub
xorl
push
push
adc
cli
xchg
xor
cld
jne
pushl
add
lods
xchg
push
test
fwait
mov
loopne
ja
push
ljmp
in
xchg
fbstp
hlt
mov
add
lock
jbe
std
insl
cld
jae
xchg
jmp
stc
fcoml
cld
adc
sbb
addr16
pop
aaa
mov
and
add
push
add
scas
ds
inc
and
dec
fcoms
jg
pop
add
mov
cmp
xchg
or
sbb
mov
into
js
xchg
mov
pop
xchg
dec
out
sub
pop
pop
arpl
xchg
fldt
out
paddq
cmpsb
sub
pop
into
mov
imul
fcomp
test
les
insb
and
add
mov
dec
cmpsl
loope
add
cmpsl
ret
pop
or
adc
or
xchg
ss
int
enter
add
mov
pop
cmp
divl
fdivl
xor
pop
inc
cwtl
movntps
test
pop
sbb
cmp
inc
xor
cmp
and
fucom
jmp
ja
adc
cmp
and
add
jo
dec
inc
push
mov
cbtw
inc
pop
cmp
or
int3
lods
mov
clc
pop
mov
lea
mov
jb
loope
jo
mov
cmp
popf
xchg
adc
lea
movsl
ret
xor
sbb
aaa
add
sub
popf
sbb
test
sub
stc
scas
jecxz
in
dec
pop
out
jl
bound
inc
inc
sarl
cltd
inc
mov
jp
fs
xor
pop
out
mov
dec
inc
stos
jns
std
and
testl
std
jmp
out
cmpsl
je
test
fwait
jbe
xchg
dec
or
in
adc
lcall
fldcw
sti
jae
xchg
or
push
adc
push
fxch
stos
cmp
mov
push
cmp
dec
mov
lods
leave
shlb
jmp
loop
xchg
icebp
jae
jge
mov
mov
xorl
outsb
inc
sbb
in
cmp
xor
jmp
mov
ljmp
xor
jge
ret
jmp
je
dec
fnstsw
ljmp
jae
mov
ds
mov
lret
aam
fcmovnu
sub
dec
mov
mov
inc
je
and
and
pop
mov
ret
paddsw
outsb
sbb
lods
icebp
data16
push
push
mov
or
fnstcw
inc
outsb
mov
cld
inc
repnz
shl
mov
mov
jge
adc
mov
and
repnz
loop
cltd
das
mov
pop
mov
add
fildll
insl
fwait
das
mov
les
hlt
mov
or
mov
pop
das
fisubl
push
ja
xor
and
jo
inc
inc
jbe
jno
popf
mov
push
test
dec
jb
stos
mov
repz
xlat
sti
ja
pop
cmpsl
andl
lock
dec
adc
jge
adc
inc
push
fsubl
mov
mov
xor
enter
popl
test
push
mov
add
fsubrs
into
add
test
sub
out
test
lret
mov
scas
mov
cli
aam
sbb
scas
das
cs
dec
bound
add
cld
mov
subb
testb
adc
adc
inc
sbb
int3
lcall
mov
mov
add
pop
jae
adc
jge
push
lods
xchg
dec
xchg
mov
add
pop
paddsb
push
jbe
pop
imul
and
sbb
addr16
mov
pop
test
pop
aaa
cld
cmpsb
cmp
fsubs
adc
xor
mov
mov
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
sub
fwait
adc
clc
adc
lea
sub
push
adc
mov
sbb
cmpsb
lcall
leave
sub
xchg
jbe
fidivrs
xor
hlt
adc
mov
jmp
or
mov
shll
lcall
sub
sub
adc
scas
push
in
push
aas
enter
je
pop
nop
dec
test
pop
in
add
mov
mov
push
jae
shll
adc
cmc
or
clc
lods
loop
cmpsl
xchg
add
push
jne
mov
pusha
out
ss
fldcw
mov
xor
pop
rorb
out
out
mov
jns
xchg
push
add
or
loop
jb
int
sti
cs
test
into
xchg
or
fucomp
and
mov
dec
adc
inc
inc
out
ret
pop
inc
mov
in
sub
push
arpl
stc
das
mov
std
or
pop
jge
dec
iretw
lods
mov
sub
and
cmp
push
rol
popa
cs
aas
scas
push
cmp
jns
dec
sbb
mov
and
enter
test
push
inc
inc
ja
sbb
lods
cmp
jl
cli
adc
pop
ljmp
mov
rorl
cmc
adc
sub
insb
adc
iret
in
jle
ja
scas
jmp
mov
sahf
jns
out
dec
lret
mov
dec
daa
mov
xchg
xchg
inc
les
cmp
adc
pop
adc
mov
mov
xchg
add
aas
addb
push
adc
int
inc
xchg
fisttps
xor
xor
push
mov
imul
push
xor
addb
jle
shlb
stos
ss
lods
icebp
and
mov
and
lcall
cld
and
mov
sbb
test
into
jge
push
sub
xor
jae
jecxz
push
xchg
adc
push
ds
movsb
xchg
aaa
lods
sub
inc
xor
and
andl
jp
in
cmp
adc
sti
jae
dec
mov
push
std
cltd
test
xor
pop
add
fcom
push
test
mov
aaa
sub
pop
lods
pop
mov
sti
hlt
mov
dec
mov
lret
jb
roll
lcall
cwtl
popf
fisttpl
pop
sbb
repnz
xchg
pop
lret
xchg
add
dec
cmpsb
arpl
fnstsw
dec
sub
or
cmp
sbb
mov
mov
adcb
mov
pop
cmpsl
sbb
out
cmp
push
pop
push
mov
xor
adc
xor
jne
addb
aad
jp
mov
jl
mov
cltd
aaa
jae
lret
leave
pop
xchg
cmp
cmpsb
mov
sbb
add
adc
or
jbe
xchg
movsl
rcl
adc
xchg
mov
cld
push
pop
ret
arpl
inc
adc
arpl
add
add
out
mov
pop
jecxz
mov
dec
xchg
sbb
add
cmp
inc
push
test
xchg
pop
mov
imul
mov
sbbb
xchg
push
sbb
notb
mov
les
and
cmpsl
std
fwait
cmp
loope
call
adc
in
cmp
inc
inc
xchg
jo
aas
and
int3
mov
jae
cmc
lea
pusha
lret
sbb
lods
sti
push
cmp
leave
jne
ss
jb
out
cmp
sbb
es
pop
sbb
jo
xchg
rcrl
xchg
insb
sbb
scas
add
pop
push
xchg
mov
sbb
jnp
adc
daa
adcl
fbld
xor
fdivr
rcrl
sbb
test
sbb
lret
or
sarl
sahf
out
jecxz
dec
das
mov
popf
push
sbb
orl
iret
jmp
shlb
ret
ljmp
stos
pop
rcr
andl
lea
add
ret
mov
push
int3
test
sbbb
and
mov
mov
mov
sbb
inc
or
jg
std
out
les
inc
inc
pop
jp
inc
iret
jnp
mov
sti
out
mov
ds
sahf
cltd
hlt
inc
pop
mov
mov
out
fiaddl
ds
mov
jle
addr16
pushf
cmp
dec
xor
fwait
push
dec
loop
rcll
sbb
adc
jae
emms
add
or
sub
push
inc
fwait
inc
pop
dec
add
mov
mov
mov
lahf
dec
lret
push
leave
adcl
push
pop
and
or
in
iret
outsl
loop
test
and
dec
push
imul
lcall
pushf
popf
or
mov
dec
ja
mov
or
insl
repnz
sbb
jge
xor
mov
add
adc
and
inc
xor
sbb
cli
mov
shr
mov
cmpsb
adc
push
inc
inc
rolb
loopne
cld
rcrb
or
shll
xor
mov
add
outsl
sahf
mov
mov
adc
int
xor
xlat
dec
fmull
inc
pop
push
cmc
and
enter
jge
jnp
js
xor
and
push
in
cmc
sbb
fsubrl
call
jl
inc
push
je
arpl
xchg
pop
js
outsl
push
or
nop
fnsave
push
adc
inc
mov
mov
faddl
lea
ljmp
gs
sub
lcall
and
jg
push
imul
mov
dec
mov
ftst
xor
xor
insl
fistps
or
in
pop
movsb
aas
insb
cs
xchg
mov
and
aas
xchg
ds
imul
mov
inc
stos
sub
jge
cmp
test
test
mov
aaa
push
outsb
out
push
repz
es
adc
add
xlat
jl
ljmp
hlt
jecxz
push
ss
scas
cmp
mov
jle
fs
adc
push
sti
and
cmp
dec
inc
or
in
lret
sub
push
in
ja
or
lock
cmp
push
sub
pop
push
and
adc
sub
pop
outsb
movsl
jle
and
add
sub
and
push
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
mov
lea
adc
clc
adc
cmp
cmp
lret
data16
fdivl
fldl
or
pop
push
add
test
or
jle
pop
pop
les
add
leave
fdivs
xor
jp
mov
rclb
ja
pop
pop
fprem1
inc
and
lds
and
or
cmp
jnp
dec
or
lahf
test
lods
loop
testb
fdivl
orb
iret
xchg
mov
mov
xor
mov
cwtl
mov
mov
enter
pushf
mov
xor
xchg
sarb
loop
test
fsub
mov
xor
into
scas
stos
pop
test
cld
or
fbstp
orb
dec
lcall
divb
push
cmp
and
sbb
lds
mov
jp
cmpb
lods
jno
ret
popa
ret
jmp
cli
sbb
cli
cwtl
shll
lds
mov
pushf
lods
aas
lcall
cmp
pop
movsb
in
stos
mov
mov
or
xor
decl
or
call
clc
inc
adc
mov
iret
std
push
xor
fadd
push
in
mov
mov
inc
loop
mov
bound
and
lret
dec
popf
lret
cltd
inc
push
mov
lcall
add
sbb
ss
fsubr
inc
push
sbb
ja
pop
pushl
dec
pop
lret
shl
insb
mov
dec
out
mov
fs
adc
sbb
inc
mov
in
mov
out
adcl
dec
and
sbbl
push
cs
push
jl
and
fisubs
mov
rcll
sub
out
loop
jbe
lahf
mov
mov
icebp
sub
out
addr16
cmpsl
pop
push
push
add
sub
movsl
dec
icebp
imul
dec
mov
mov
movsl
xchg
mov
fxch
andl
or
mov
push
dec
sub
xchg
clc
xchg
xchg
cmp
movsb
sahf
out
loope
xor
lock
int3
dec
jle
out
and
cwtl
ljmp
push
pop
push
out
out
outsb
fs
pop
jmp
and
jo
lds
outsl
pop
lret
or
in
mov
sbbl
inc
cli
sub
sub
jne
mov
sub
dec
push
daa
or
out
into
add
dec
dec
inc
cmpsb
sbb
leave
xchg
mov
sub
add
xchg
xchg
rcrl
mov
add
clc
js
dec
js
gs
or
loope
decl
sub
loopne
dec
sbb
mov
add
mov
jl
sbb
ret
clc
mov
lods
mov
mov
or
dec
mov
mov
movsl
xchg
mov
mov
into
pop
sbb
lock
orl
fld
mov
push
divl
shlb
pop
das
inc
fwait
dec
je
popf
pop
test
mov
hlt
call
cmp
inc
bound
orb
icebp
out
movsl
outsl
push
cmpsl
shrb
int
sbb
fsubrl
aam
popf
xchg
imul
in
xchg
stos
icebp
loopne
lret
inc
les
cmc
pop
call
outsl
cmp
jp
jge
loop
js
pop
out
insl
sbb
sub
mov
and
scas
mov
dec
inc
int3
frstor
xlat
push
mov
loopne
inc
and
push
stos
repnz
mov
cmp
lea
dec
sub
cmp
popa
pop
ret
adcl
add
out
fdivrp
pop
sbb
xchg
mov
lods
push
mov
or
popa
jp
clc
inc
xor
inc
pop
jmp
stos
lods
scas
xchg
pop
sub
movsl
xchg
xor
mov
adc
mov
sub
mov
xor
bound
je
jns
sbbb
adc
mov
jg
subl
addr16
lcall
or
lods
daa
int3
or
adc
ds
fldt
repz
mov
pop
push
push
push
jg
lret
mov
push
jge
mov
dec
in
or
xor
test
pextrw
mov
movsl
in
jl
rcrl
or
mov
xor
adc
rcr
mov
hlt
rorl
sbb
or
xchg
pop
loopne
jmp
xor
jo
pop
mulb
or
pop
scas
rcr
imul
out
jbe
or
or
ret
push
cmp
push
mull
inc
out
daa
icebp
mov
sbb
out
idivl
push
mov
aad
std
pop
xchg
cmp
mov
xchg
sbb
jp
aam
sub
inc
and
testb
and
lods
test
mov
add
mov
adc
cmp
mov
rclb
pop
adc
lahf
arpl
and
xor
leave
add
out
add
cmc
push
rol
sahf
xor
pop
std
and
sete
jae
sub
cmp
mov
in
ljmp
fwait
and
out
mov
jecxz
sbb
push
nop
stos
ss
mov
or
scas
negb
orl
push
fwait
ljmp
aad
add
aas
xchg
jl
test
aad
popfw
fsubr
mov
sub
call
sarl
mov
lret
push
and
mov
ja
jnp
mov
mov
insl
inc
jecxz
mov
xor
aad
sub
cld
push
movsl
xor
add
orb
push
add
dec
xor
xchg
flds
push
daa
xchg
add
sub
adc
les
or
dec
push
adc
sub
in
inc
push
int3
cmp
jg
pop
cli
push
fwait
add
popa
repnz
jae
fisttps
fmull
fdivrp
inc
in
push
jbe
dec
sub
pop
mov
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
inc
aad
adc
clc
adc
fwait
inc
xchg
add
pop
jns
test
pop
sbb
push
xchg
js
dec
lret
adc
ds
pop
push
lea
push
lock
pop
jb
adc
or
pop
std
daa
jns
sbb
leave
jns
scas
push
cld
mov
mov
lods
dec
push
adc
inc
add
jmp
pop
das
add
arpl
jle
cmpb
hlt
ret
iret
add
fbstp
xchg
mov
ror
push
push
jno
sbb
dec
sbb
loopne
aam
xchg
test
jl
js
lods
int3
mov
dec
pushf
shlb
lods
inc
or
testb
imul
mov
ds
adc
cmp
adc
call
cmpsb
xor
cmp
adc
lret
xor
rorb
adcl
inc
add
hlt
push
stos
ss
arpl
inc
xor
inc
xor
sti
rorl
insl
movsb
cltd
addr16
inc
jne
mov
mov
sub
out
sub
fisubl
or
inc
jo
or
fnsave
jmp
loope
sub
rclb
inc
mov
adc
xor
cmp
testl
push
dec
push
add
adc
pop
lods
int
insb
xchg
add
dec
sub
les
scas
pop
je
xor
mov
push
or
pop
icebp
push
adc
inc
ja
jecxz
xor
jo
jae
inc
xchg
enter
notl
lock
movhps
shlb
pop
dec
pusha
lcall
sbb
and
imul
inc
push
push
xor
loop
xchg
movsl
leave
pop
pop
sbb
mov
xor
es
mov
into
sbb
ljmp
xchg
scas
or
mov
cs
mov
inc
repnz
jne
add
mov
lea
mov
mov
lea
jg
movsl
jo
dec
popf
mov
mov
xchg
mov
cmp
jnp
cmp
int
test
imul
push
scas
dec
jmp
lret
mov
dec
loop
in
stos
cltd
push
sti
jae
mov
into
cmp
imul
outsl
add
lret
in
cmp
je
jno
rcl
loop
test
scas
loope
inc
or
es
pop
out
sub
add
nop
sub
xchg
xchg
lds
pop
inc
sbb
pusha
stos
mov
test
push
xor
int3
pop
imul
rcll
jecxz
mov
arpl
arpl
jo
pop
push
fcoml
sub
adc
lods
push
pop
sub
loope
jl
lock
pusha
fs
pop
insl
xchg
xchg
outsb
in
add
int
xor
lahf
push
adc
ja
jo
xchg
xchg
mov
cmpsl
mov
mov
mov
icebp
outsb
cltd
cmp
xor
adc
dec
std
sub
jae
xor
icebp
push
aaa
out
out
loopne
push
arpl
cmp
shl
repnz
ljmp
fnstenv
sub
mov
cld
rorb
push
lcall
jne
mov
imul
jbe
imul
mov
flds
repz
pop
pop
lds
cmp
lea
xchg
stos
pop
lods
inc
das
gs
sbb
jnp
pop
push
adc
das
insb
xor
push
out
stos
pushf
aas
lret
nop
mov
xchg
pusha
mov
pop
or
icebp
mov
test
and
nop
ja
jbe,pn
loop
aaa
mov
stos
sub
fucomip
xchg
lret
push
push
mov
jnp
push
ss
sub
aad
fwait
fwait
and
iret
clc
jmp
ss
adc
mov
mov
xchg
pop
into
cmpsb
into
cld
cmp
sub
gs
sub
xchg
imul
lods
stos
or
jp
shll
xchg
dec
mov
add
into
int
loop
add
jg
loope
xchg
movsl
dec
mov
adc
sbb
pop
jnp
cmpsb
mov
leave
sbb
rcrl
rorb
lods
lods
sub
push
cltd
sub
stos
test
addr16
out
dec
in
ret
or
cltd
xor
imul
jp
adc
shl
pop
gs
es
or
and
sub
pop
repz
enter
xor
push
push
cld
lods
sub
ja
jp
cvtdq2ps
ror
std
in
insl
es
xchg
pop
int3
icebp
int
pop
pop
dec
je
inc
jmp
or
add
inc
dec
stc
pusha
push
inc
fcoms
aad
xor
loope
je
mov
xchg
rcrl
mov
mov
hlt
mul
shlb
shll
data16
xor
cmpsb
aam
les
dec
addr16
mov
dec
and
mov
adc
jecxz
adc
popf
push
stos
inc
pop
iret
fdivs
stc
dec
addl
mov
xchg
push
aas
pslld
fcoms
xor
cwtl
lahf
popa
sbb
stc
sbb
xlat
daa
mulb
add
in
test
mov
ja
jae
aas
adc
push
test
cmp
out
push
repnz
fs
and
pushf
lock
inc
out
push
cmp
inc
cmp
daa
divl
cmpsb
ja
fsubrs
lock
sbb
and
out
mov
dec
mov
push
stc
inc
sbb
daa
adc
mov
imul
mov
dec
js
pop
lret
push
lret
mov
enter
leave
je
jmp
mov
xchg
in
les
stos
xchg
sub
into
add
push
inc
or
sub
pop
sbb
mov
pusha
push
push
add
sbb
pop
dec
adc
fs
or
xchg
nop
and
jl
mov
push
imul
xchg
jmp
jns
ss
add
std
mov
push
jb
dec
dec
mov
jae
mov
cld
fistpl
jb
cwtl
clc
sbb
int3
pop
pop
or
jne
jecxz
sti
and
mov
movsl
fadds
and
mov
push
idiv
icebp
in
jmp
or
in
enter
imul
inc
adc
adc
clc
adc
jnp
xchg
add
ret
loopne
lahf
in
and
filds
cwtl
imul
ss
ret
or
jecxz
xchg
inc
mov
rcll
cmp
mov
imul
das
jle
es
xchg
incl
pusha
pop
cli
or
pop
xor
out
cmp
repnz
or
insb
mov
push
inc
sbb
push
testl
xchg
lock
xchg
jb
ret
adc
out
or
sub
mov
mov
pop
pop
mov
or
rcrb
push
lcall
nop
xchg
mov
cmpsl
cmpsb
loope
jno
lret
pop
jae
cmp
mov
or
lret
pop
fcomps
scas
int3
test
xor
sbb
jg
mov
jno
int
test
sub
xor
jecxz
xchg
jg
pop
fisttpll
mov
cmp
movsl
adc
push
sbb
stos
mov
mov
sub
push
std
lret
sbb
cmp
mov
push
aas
insb
push
out
sbb
iret
jbe
jmp
loopne
sub
mov
or
clc
enter
cs
pusha
push
mov
ret
in
shll
push
jne
test
pop
inc
cli
or
in
rolb
xchg
push
adc
repnz
popf
jle
pop
insb
ja
jo
lret
xor
pusha
aaa
pop
push
shll
int
dec
nop
pusha
in
out
mov
ljmp
mov
pushf
test
pop
and
or
xchg
roll
fs
cmpsl
mov
xchg
cwtl
sbb
or
outsb
adc
fsub
mov
loope
fwait
inc
mov
dec
adc
cld
cs
lds
dec
leave
pop
mov
shll
xor
push
movhps
and
fmull
ret
lods
sub
inc
daa
shll
adcl
es
mov
das
aam
fsubs
aam
arpl
fisubrl
pushf
mov
inc
fnstsw
fidivrs
dec
mov
scas
stos
repz
adc
popa
xor
cmp
mov
outsb
out
inc
mull
add
jb
dec
sarl
xchg
sub
mov
mov
xchg
pop
ret
dec
inc
iret
inc
out
jl
inc
into
cwtl
bound
xchg
repnz
jae
push
in
js
loope
cmp
pop
dec
stos
shlb
lcall
and
inc
inc
je
xor
repnz
push
sub
imul
sub
cmp
mov
mov
cmp
pop
jg
cld
aaa
add
xlat
mov
and
push
jecxz
sub
push
inc
cmp
adcl
push
cmp
sbb
xchg
loope
repz
fnstcw
or
bound
fs
mov
mov
daa
ret
cli
andb
loop
jmp
cmpl
cltd
push
lahf
pop
add
cmpb
sti
and
lret
fnstenv
sbb
loop
shll
das
and
stc
xchg
sbb
jecxz
xlat
jmp
mov
mov
jg,pt
cwtl
stos
cmc
out
div
mov
fs
mov
xchg
xchg
ljmp
arpl
xchg
pop
lea
std
inc
loope
out
icebp
jmp
pop
add
adc
push
fdivr
and
pop
pop
inc
push
pop
sbb
push
pminsw
sub
sbb
pop
cmc
inc
dec
jmp
bnd
xor
and
sbb
mov
aas
daa
lcall
push
sub
outsb
clc
inc
and
js
push
sub
fidivrs
daa
lock
cmpsl
push
pop
adc
test
je
xor
scas
xor
fiaddl
adc
jge
inc
mov
mov
mov
mulb
sbb
rcl
pusha
inc
mov
dec
xchg
cwtl
rorl
fcompl
hlt
jbe
push
inc
sbb
scas
dec
aad
add
sahf
sbb
mov
outsl
es
cmpsl
loope
in
insb
xlat
or
mov
ret
pop
pushf
sub
mov
pop
cmp
fstpt
test
ret
adc
subb
adc
insl
in
push
hlt
mov
fidivl
fiaddl
enter
or
testl
mov
test
jl
xchg
int
mov
stc
mov
imul
jle
cmp
dec
cs
pop
dec
shrl
jo
aam
in
cld
xchg
dec
cmpb
cld
sbb
inc
inc
rorl
fistpl
xor
cs
adc
test
fnstenv
insb
push
aas
in
test
mov
adc
jbe
imul
xlat
fcomip
jg
inc
dec
cmp
ds
mov
push
leave
hlt
and
jnp
jo
sahf
cltd
xor
jle
icebp
mov
fcoml
fyl2x
sub
lea
out
add
scas
leave
ds
push
data16
sub
fistps
sbb
arpl
push
lahf
lahf
cmp
xchg
lock
shll
lods
add
out
icebp
fdivr
jmp
test
call
insb
push
pusha
jge
xor
mov
push
and
in
pop
sarl
mov
and
mov
lcall
repnz
leave
sbb
mov
lock
les
pop
adc
xchg
jge
cld
fdivrp
xchg
or
push
mov
inc
mov
jmp
mov
pop
xchg
mov
cli
je
das
sub
out
dec
inc
sahf
shlb
aaa
test
cmpsl
sub
insb
ret
lods
push
sub
ljmp
inc
sbb
push
xchg
mov
js
jne
pop
cmpsl
out
dec
pushf
dec
movsb
ljmp
out
loope
mov
pop
scas
imul
sub
or
ficompl
cmp
sub
mov
mov
adc
lahf
add
fcmovnbe
sub
call
daa
jg
mov
test
pushf
and
inc
sbb
xor
xor
push
loop
pop
sbb
add
xchg
and
and
mov
inc
arpl
arpl
add
jmp
in
cmc
dec
stos
dec
sub
add
shlb
clc
adc
lret
fimull
pusha
add
aas
xor
clc
sbb
jno
dec
and
push
out
sbbb
icebp
mov
sbb
push
mov
mov
push
aad
xchg
lea
pop
and
das
rcr
jo
scas
rcrl
push
and
add
sub
or
dec
sbb
cmp
jmp
addb
xchg
mov
xchg
shll
call
mov
push
mov
push
dec
sahf
or
test
test
lcall
out
jge
adc
add
jno
out
sub
rol
sbbl
mov
pop
cmpsl
mov
dec
lcall
dec
sub
fstl
push
sarl
sub
ljmp
pop
sbb
lret
adc
cmpl
mov
and
shlb
ficoms
mov
pop
lcall
aaa
in
mov
mov
flds
lahf
insl
adc
cld
pop
fimull
arpl
pop
xchg
or
mov
and
and
or
lock
shrl
fucom
psubusb
int
inc
mov
mov
push
pushf
mov
scas
push
rcr
sub
aad
cmp
lea
rcrb
push
mov
loopne
adc
or
outsl
les
or
call
jl
imul
mov
int
or
cmp
js
push
icebp
and
popa
lods
mov
sub
push
xchg
mov
repnz
cmp
xlat
gs
test
push
xor
dec
rcll
xchg
lahf
dec
sub
lcall
push
loopne
push
jle
pop
shlb
sbb
jae
cmp
push
xchg
mov
mov
movsb
mov
je
push
or
sahf
jae
fwait
sub
aam
jmp
sahf
stos
loop
pop
aam
sub
insl
arpl
imul
sbb
xchg
sub
add
movsb
les
cld
cmp
or
jne
scas
in
mov
mov
cmpsb
xchg
jo
imul
ret
enter
sbb
aas
pop
sbb
sahf
imulb
push
scas
mov
test
xchg
arpl
sbb
ja
lods
jo
fidivrs
pop
fstpt
and
mov
mov
jb
das
inc
jp
sbb
push
out
shlb
xlat
dec
lea
std
rcr
inc
xchg
xchg
dec
push
pop
out
mov
jnp
jmp
pop
and
jnp
jbe
movsb
and
ret
negb
cmpsb
sub
test
or
xor
fsubl
mov
outsb
std
sub
push
mov
hlt
push
dec
xchg
pop
xor
in
mov
shrb
mov
faddl
fists
inc
scas
scas
mov
jg
sub
jb
cwtl
aas
mov
outsl
mov
jle
add
push
mov
mov
scas
push
xchg
push
aam
pop
jg
mov
das
dec
mov
outsb
or
add
mov
adc
add
mov
mov
xor
outsl
xchg
adc
pop
xchg
ja
in
and
movsb
and
xchg
cs
aas
mov
and
int
and
icebp
cmc
pop
push
lahf
pushf
and
and
loop
dec
jnp
movsb
cmp
sahf
lcall
aam
cmpsb
pop
fldz
nop
adc
mov
dec
jge
orl
xor
sub
in
sahf
pop
idiv
jbe
jg
lretw
into
xchg
fimuls
hlt
leave
cld
out
call
dec
and
and
ljmp
sub
and
or
imul
popa
aad
popf
pushf
push
shrb
mov
adc
add
out
or
jecxz
push
enter
lret
repz
or
mov
arpl
dec
out
mov
push
rclb
rclb
or
ficomps
out
in
push
and
dec
mov
stc
add
adc
adc
xchg
cmp
push
out
in
call
cld
dec
mov
lea
shrb
mov
push
mov
mov
outsl
leave
push
lahf
sub
push
aaa
js
sub
xchg
xor
nop
sbb
out
xor
xchg
jnp
add
add
pop
daa
mov
dec
adc
or
pop
push
repz
adc
jmp
pop
cmp
loopne
pop
jae
imul
int
push
push
lahf
adc
push
jo
mov
out
loop
jmp
sub
fldt
xor
mov
mov
mov
andl
into
shlb
mov
jb
sub
dec
scas
xor
sub
aaa
dec
sub
lret
jbe
sbb
and
mov
sbb
stos
xchg
test
jle
out
insb
mov
xor
out
sub
cmpsb
mov
stos
adc
mov
icebp
je
add
sbb
cli
pop
and
adc
and
mov
movsb
sub
fsubs
das
cmp
or
xchg
push
xchg
adc
push
push
addl
iret
in
faddl
or
and
add
imul
jo
rcll
or
mov
sub
jmp
lods
arpl
test
test
push
fldl
ds
dec
xlat
lea
pushf
daa
pushl
push
adc
mov
push
xchg
jecxz
leave
mov
in
push
ljmp
fwait
jnp
cltd
mov
cmc
jle
xchg
aam
fwait
insl
push
scas
pop
push
mov
hlt
fcmovnu
aas
sahf
pop
out
and
loop
cli
or
fcom
pop
cmp
shll
jle
and
jbe
sub
push
mov
pop
cs
pop
jne
in
shl
das
dec
outsb
enter
sarb
adc
lret
mov
shrd
jmp
sbbb
pop
mov
pusha
push
push
out
cmp
lds
add
adc
lods
cwtl
mov
enter
cwtl
cmp
xor
push
push
xchg
dec
xor
fsubp
stos
in
push
repz
push
popf
add
iret
test
inc
inc
lahf
mov
xor
fisttpll
mov
scas
cs
cmpsb
ljmp
pop
arpl
xor
je
lcall
mov
lcall
js
int3
lahf
cmpsb
sub
xor
popa
repz
in
daa
lds
push
psubsw
xchg
xlat
cmp
or
lock
adc
ret
mov
mov
mov
pushf
std
fnsave
int
in
outsl
add
push
mov
in
outsb
sahf
inc
imul
sbb
lret
jae
aaa
sub
or
jmp
movsb
sbb
subl
mov
addr16
dec
out
push
push
out
push
pusha
mov
ffreep
ja
jne
dec
repnz
orl
notb
jns
dec
stos
mov
lds
sbb
sbb
stos
popf
in
push
frstor
lcall
xor
jmp
mov
jae
mov
jnp
sub
scas
int
xor
ss
test
jns
xchg
sbb
out
lds
pop
cmp
jmp
mov
xchg
divb
sbb
xor
cwtl
mov
in
aad
cmpsb
outsb
inc
jp
push
jne
adcb
adc
sub
adc
addl
or
jb
inc
sub
popf
and
adc
cmc
call
pop
in
cwtl
add
or
push
iret
ds
push
add
and
sbbb
pop
mov
add
dec
pop
stc
push
sub
adc
aam
adc
aaa
pop
movl
pop
lret
shlb
test
daa
lret
mov
cld
pop
xchg
stos
shrl
in
subl
xlat
jle
fcoml
int
stos
add
sarb
jle
dec
xchg
mov
mov
ljmp
pop
cli
test
and
aad
mov
mov
ljmp
pop
lea
sub
fbstp
dec
jnp
imul
xchg
push
xor
dec
mov
xor
sbb
xor
push
js
jmp
push
jns
adc
clc
inc
pop
fst
pop
cmp
cld
pusha
stos
add
cld
sub
push
jnp
out
push
je
lret
pop
jmp
and
inc
aad
fsub
fisttpl
xchg
dec
ret
jnp
push
inc
fnsave
xlat
xor
fcoms
scas
xor
pop
inc
dec
insl
xchg
cmp
aam
lahf
popf
push
mov
inc
pop
insl
in
int
pop
add
pushl
add
movsl
mov
dec
add
and
pop
outsl
in
data16
mov
pop
sahf
ss
jb
clc
shrb
jae
push
aaa
fcoml
mov
sub
mov
or
stos
subl
cs
leave
sub
fbstp
inc
cli
stc
pushf
stos
in
dec
jecxz
lds
jns
jno
push
jge
mov
pop
rcrl
dec
xchg
and
xlat
adc
loopne
rcrl
mov
inc
push
ljmp
xor
int3
orl
fwait
sub
add
lret
fistl
rorb
repnz
addr16
cltd
imul
rol
mov
mov
shr
push
sbb
dec
cmovno
mov
xor
mov
nop
jge
ret
or
cmp
adc
cmp
jae
jns
mov
sub
jo
pop
lahf
jb
mov
push
push
add
push
or
xchg
out
cmp
mov
jb
jns
or
repnz
cmp
pusha
faddl
or
jae
das
iret
pop
jo
cmp
lods
or
js
aas
js
sbb
mov
push
scas
imul
rorb
mov
ds
mov
rcl
pushl
outsb
daa
sti
aad
jle
adc
and
nop
repz
cwtl
pop
and
push
cmp
fldt
push
fsub
sahf
mov
cwtl
add
push
mov
jo
imul
test
adc
cli
dec
lcall
test
test
push
push
and
push
stc
outsl
mov
cmp
fidivrl
pop
dec
or
add
push
mov
jb
dec
mov
xchg
adc
mov
push
js
dec
sbb
pusha
lds
cmp
arpl
sbb
lret
data16
int3
and
add
cmpsb
and
mov
push
mov
sbb
hlt
loope
lds
fdivrl
scas
std
xor
mov
mov
data16
inc
loopne
mov
scas
outsb
xor
adc
ds
adc
into
push
leave
das
mov
lret
cmp
pop
xchg
adc
in
mov
popa
mov
in
movsl
mov
cmp
push
sbb
mov
js
mov
push
cmp
call
out
mov
mov
pop
cmpsb
dec
mulb
mov
loop
pop
and
or
cmp
roll
das
je
fwait
xor
push
ljmp
fwait
push
test
out
out
insl
mov
stos
les
lock
stos
test
cmpsl
mov
sub
mov
add
push
push
jl
pop
xor
pop
inc
arpl
fcmovne
gs
cli
add
xor
rcrb
jno
lahf
or
xchg
push
push
lret
ljmp
inc
sub
jo
call
push
int3
sbb
xor
sub
mov
lret
pusha
das
addr16
mov
push
sbb
jle
pop
push
movsb
outsb
dec
dec
sbb
lcall
mov
ja
sub
icebp
ret
int3
and
push
sbbl
sbb
hlt
cwtl
push
ja
push
pop
add
jns
push
xchg
stc
mov
jb
dec
test
dec
fwait
adc
cltd
xchg
je
test
mov
mov
mov
push
fdivs
aaa
in
or
adc
or
scas
mov
jo
sub
hlt
test
pop
sbb
jmp
xor
push
xor
jmp
mov
push
push
push
mov
insb
les
push
clc
adc
mov
fsubrl
sbb
xor
out
inc
add
ss
pop
clc
pop
hlt
ss
and
push
ds
mov
aam
insb
dec
add
mov
jb
mov
xor
fistpll
fstps
jecxz
mov
mov
outsb
mov
pop
mov
and
and
andl
jne
pop
or
adc
xor
xor
sub
popf
sbb
push
loope
ljmp
popf
cmc
pop
lea
cmpsb
adc
dec
sbb
int
pusha
push
mov
out
pop
sbb
lock
repnz
xchg
add
jmp
inc
mov
jp
cmp
push
loope
push
shll
cwtl
jae
subb
std
or
add
sub
out
xlat
mov
scas
jmp
dec
movsb
shlb
subl
rcl
push
cmp
insb
pop
bound
pusha
dec
mov
jle
mov
lret
scas
inc
xchg
jecxz
jne
imul
adc
lret
ja
mov
adc
add
imul
mov
loope
mov
cmp
mov
pop
sbb
pop
pop
sbb
mov
sub
flds
loop
mov
lahf
inc
ja
push
ds
pop
cmp
sti
mov
cmpsl
leave
jg
dec
ficompl
dec
sbb
clc
mov
push
sbb
mov
ficoms
adc
jecxz
jne
shr
mov
call
xchg
lret
xchg
push
xchg
lcall
aas
dec
shlb
cld
push
daa
dec
cmp
mov
and
inc
push
xchg
pop
jo
xchg
rcll
dec
jns
adc
cmp
movsb
sbb
add
lods
xor
xchg
test
scas
inc
repz
aas
pop
dec
pop
cmp
loopne
jmp
test
mov
out
in
push
das
fmulp
add
mov
gs
scas
jb
xorb
cmpsl
push
test
add
sahf
sahf
test
mov
push
dec
pop
mov
outsb
xchg
in
xor
shrb
mov
pop
icebp
fadds
out
push
sarl
gs
mov
fnstcw
cs
adc
aas
add
inc
add
sub
mov
sarl
rcrb
add
cmpsl
in
std
add
jns
fists
std
dec
xlat
jnp
scas
scas
mov
iret
mov
cmpsb
xchg
shll
pushf
xor
test
andl
push
mov
add
push
mov
test
push
scas
jg
push
decl
cmp
cmpl
lret
dec
outsb
and
push
sbb
dec
ret
mov
jbe
ljmp
mov
bound
sub
cmp
jg
adc
jnp
push
cmpsb
adc
pop
testb
loope
and
test
jl
mov
and
dec
mov
mov
lock
popl
and
push
cs
rcr
rcl
push
and
mov
adc
aaa
jo
bnd
mov
jg
pop
dec
fstpt
sbb
jmp
es
jne
dec
xchg
pop
cwtl
mov
push
daa
or
es
mov
pop
pop
pop
adc
cmp
jne
mov
fisubl
push
call
push
push
sbb
ret
repz
hlt
push
adc
mov
xlat
sub
jns
popf
sbb
or
add
lahf
mov
shl
ljmp
mov
push
jp
inc
mov
mov
xor
push
dec
sub
cmpsb
icebp
fcomi
jae
jae
nop
push
add
loop
cmpsb
in
pop
pop
loope
xor
sub
pop
add
std
mov
pop
add
and
pop
sbb
test
sbb
movl
cs
sar
daa
jnp
repnz
into
out
adc
fnstsw
pop
pop
int3
adc
out
xchg
sahf
jnp
ss
pop
andb
stos
aad
shrb
cmpsb
cmp
sahf
ljmp
adc
jg
aaa
leave
das
les
fcmovu
pop
repz
push
ror
sbb
stc
lret
cmpsl
shlb
shlb
mov
lret
push
dec
inc
cmpsl
or
repnz
subb
jecxz
out
std
imul
into
in
in
sbb
dec
cmp
dec
cld
fwait
xorb
mov
fmul
add
adc
inc
fsts
call
push
dec
outsl
xor
or
sbbb
sbb
or
stos
pushf
fwait
sti
mov
jecxz
mov
jbe
xor
js
negb
jae
mov
fcmovne
mov
js
pop
jp
in
sbb
lret
adc
mov
cmc
test
sbb
mov
push
jmp
fcom
popa
inc
iret
int3
mov
xchg
dec
xor
pop
sbb
cli
scas
stos
mov
imul
dec
push
jb
jp
push
fwait
pop
xchg
adc
fstps
or
adc
scas
push
ja
cmc
fcompl
jb
push
je
lahf
jno
mov
mov
jo
sub
movsl
sbb
mov
push
icebp
fsub
dec
xchg
mov
cs
test
fisttpl
shlb
pop
testb
adcl
data16
leave
stos
xor
dec
pop
lock
shrl
push
test
adc
incb
xchg
mov
cli
and
clc
ds
cmp
int
pop
in
adc
mov
aas
jmp
jns
data16
clc
add
push
cmp
inc
sahf
and
in
or
jle
in
out
cmpsl
aad
add
test
cmpsb
sub
mov
scas
lea
or
mov
xor
loope
mov
fistpl
fimuls
dec
push
je
repz
dec
das
shll
das
jg
stos
jbe
dec
xchg
nop
sbb
js
xchg
push
sbb
sbb
sub
sbb
pushf
xchg
stc
in
sbb
cmpsb
and
rorb
xchg
jbe
int
fidivrl
cmp
aad
ds
out
xor
mov
mov
add
add
cwtl
in
insb
fwait
push
pop
push
mov
mov
mov
push
push
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
nop
push
jmp
adc
clc
adc
std
add
sub
mov
repz
enter
mov
mov
add
aaa
cmp
or
shlb
jmp
ljmp
xchg
push
push
aaa
popf
xchg
cmp
fs
insl
jmp
shl
fistl
push
sbb
push
xchg
popf
cmp
cmpl
mov
and
push
inc
pop
mov
mov
or
jno
mov
mov
decb
sub
mov
fadds
inc
popf
mov
lret
add
in
sub
xchg
pop
int3
jge
mov
add
mov
pop
adc
ret
out
popf
popa
mov
sbb
aas
insl
scas
popf
mov
stos
int3
inc
shlb
outsl
pop
xchg
add
lea
icebp
adc
test
test
dec
arpl
xchg
and
pop
repnz
stos
enter
pusha
sub
mov
mov
pop
push
xlat
and
and
leave
imul
mov
js
inc
pop
mov
lahf
adc
push
cmp
movsl
sbb
pusha
in
xor
roll
mov
aad
fbstp
daa
and
popa
or
jo
out
je
push
cmpsl
je
mov
adc
mov
arpl
mov
mov
cmp
js
mov
mov
sbb
mov
pop
mov
mov
fadds
rolb
adc
icebp
es
and
sub
or
ret
and
mov
jg
mov
out
adc
lahf
inc
movsb
xchg
clc
mov
push
cmc
andb
out
jnp
and
adc
sbb
jnp
test
pushf
into
loop
adc
add
es
xor
mov
mov
aam
test
test
cmpl
cmp
inc
jae
into
fistps
pop
add
movsb
pop
adc
and
aam
sub
cmpsb
jl
inc
mov
jbe
push
dec
push
jb
sbb
jne
cmp
or
in
shrl
int3
sub
push
out
add
sub
movsl
enter
and
and
jmp
aam
and
lret
cmp
lea
sub
xor
aad
fs
sbb
in
pop
lahf
sbb
jnp
mov
xchg
leave
pop
jmp
in
cmp
pop
out
stos
fisubrs
filds
ljmp
daa
jo
sub
mov
inc
add
mov
lds
imul
cmc
xchg
dec
mov
push
test
and
dec
jo
add
xchg
fdivrl
xor
pop
cmp
add
lcall
loop
pusha
scas
xchg
jg
imul
xor
imul
jp
inc
out
jg
aas
and
in
ljmp
inc
pop
repnz
cmp
xchg
cwtl
inc
xchg
arpl
mov
cwtl
pusha
add
test
mov
add
xchg
cli
lods
js
pop
push
add
xchg
mov
fidivrl
xchg
shlb
sbb
push
fcompl
test
mov
cmc
pcmpeqd
xchg
sbb
sub
adc
adc
icebp
xchg
cld
pushf
add
jnp
dec
shrb
xchg
mov
jo
mov
mov
dec
pop
ret
fimuls
jp
js
std
mov
pop
xchg
jp
gs
inc
xor
add
jb
mov
fsubrs
aaa
loopne
cmp
imul
mov
lahf
adc
insb
leave
out
js
popf
ror
pop
add
imul
mov
dec
lret
pushf
and
cmp
int
test
mov
divl
leave
mov
push
out
testl
insl
scas
or
lods
pop
sbb
and
cmp
out
push
in
pop
xchg
cmp
stos
imul
pop
jl
in
inc
insl
mov
adc
or
test
rcr
cmp
pop
and
in
adc
mov
out
jmp
mov
hlt
imul
in
out
enter
sbb
daa
and
or
in
xchg
dec
in
dec
sbb
addr16
scas
lret
fs
incl
mov
test
jecxz
andb
mull
xor
inc
pop
out
fcompl
testl
or
jl
fldenv
icebp
out
xlat
imul
sahf
arpl
cmp
pop
dec
clc
test
mov
mov
dec
pop
aad
jmp
cmp
sbb
shrl
call
mov
pop
pop
mov
cmpsl
inc
mov
addb
into
js
stos
xor
inc
push
add
mov
sahf
fildl
add
jnp
dec
dec
fsts
inc
xchg
xchg
pop
andb
jnp
addl
in
lods
mov
mov
scas
cmpsb
sbb
movsl
fsubrs
popl
dec
daa
loope
aas
in
xchg
xchg
loope
add
shrb
sbb
jg
je
ds
mov
out
jge
and
sbb
cmp
int
out
lahf
or
arpl
out
popa
mov
push
xchg
sbb
rorb
mov
xor
push
dec
ljmp
filds
dec
cmc
mov
rorl
push
cli
xor
dec
int3
fcoml
sbb
cmp
imul
cmp
cli
mov
dec
inc
inc
push
jg
sub
pop
xchg
insb
in
xchg
or
mov
shlb
add
shlb
daa
cmp
fstpt
mov
sahf
dec
and
cmpsb
mov
int
adc
movsb
add
pop
addr16
test
mov
adc
mov
mov
inc
stc
popf
push
dec
mov
and
xchg
les
push
push
and
int3
call
imul
shrl
push
dec
jns
lds
movlps
dec
mov
xor
inc
inc
jno
addr16
in
add
fisubl
std
in
push
adc
mov
popf
cmp
jle
fimull
dec
adc
rorb
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
in
add
sub
adc
ret
mov
cld
jo
sbb
mov
and
or
andl
jne
cmpsb
mov
dec
jo
mov
stos
mov
loop
mov
mov
fldl
ret
sahf
fwait
lea
inc
daa
lahf
add
jmp
lret
cmp
shlb
xor
sbb
or
adc
hlt
fidivrs
and
mov
jl
push
dec
jle
std
nop
push
dec
test
cmp
mov
mov
xchg
xchg
or
inc
and
adc
jl
pop
jg
dec
mov
pushf
pop
push
pop
data16
sbb
pushf
iret
leave
imul
pop
iret
and
in
pusha
xchg
loope
xor
cltd
cmpl
and
fimull
or
mov
mov
arpl
push
adc
pop
push
jl
xchg
cmp
inc
cs
mov
jl
pop
mov
mov
insl
jno
stc
pop
sub
ret
repz
jo
aaa
lret
add
push
dec
ret
inc
mov
lret
xor
xchg
sbb
sbb
sti
in
jge
add
fildll
inc
jns
and
pop
ja
fs
mov
fucomp
negb
mov
aam
add
loope
nop
fdiv
mov
loop
sbb
shlb
jae
jg
dec
sub
push
dec
test
dec
mov
pop
pop
cmp
sbb
aaa
cmp
inc
imulb
lea
scas
aas
pop
sete
adc
or
stos
jmp
or
cmp
xchg
rclb
inc
or
pop
ret
push
jecxz
xor
outsb
or
cltd
aam
sbb
lds
jmp
push
imul
shlb
push
inc
shrb
add
pcmpgtd
cs
movsl
int
push
sbbl
fdivrs
loopne
cmp
sarl
push
add
adc
add
std
pop
cmp
sub
dec
out
outsl
or
lods
push
aaa
or
je
out
pop
movsb
outsb
leave
ss
and
xchg
shl
and
xor
sub
sbb
mov
pushf
and
fidivl
add
mov
mov
adc
cltd
cmp
repnz
cmc
lea
sbbl
mov
aad
sub
in
and
lods
frstor
jg
movsl
pop
adc
cwtl
add
mov
addr16
or
add
jno
int3
fistpl
lock
les
mov
mov
lea
mov
push
outsb
cli
fsubrs
mov
lock
mov
shrb
mov
movsb
push
repnz
out
sub
sub
pop
sub
cmp
int3
test
mov
test
mov
enter
add
inc
ljmp
mov
arpl
enter
js
sub
sahf
iret
pop
push
xorl
xchg
dec
clc
push
mov
add
decb
dec
or
fistpl
shrl
adc
xchg
movsl
and
jg
insl
cmpb
aam
sbb
outsl
push
push
push
ss
loope
mov
push
out
ds
hlt
mov
sbb
jnp
inc
mov
daa
dec
jo
addr16
rcll
mov
or
or
icebp
mov
insl
into
insl
out
adc
or
mov
in
add
mov
dec
repz
loope
jno
and
jg
stos
mov
dec
jnp
mov
jae
jbe
mov
adc
stos
imul
xchg
test
jne
psrad
pushf
lret
adc
cltd
xchg
ljmp
test
fldenv
add
mov
cld
jl
test
jecxz
shlb
lret
iret
push
lret
jbe
cmp
aaa
hlt
jns
shlb
mov
fcmove
xchg
pop
xchg
cmp
inc
insl
stos
add
call
fdivl
add
pusha
adc
jge
or
popa
pop
pop
add
out
dec
rclb
and
dec
cmc
out
pop
push
sbb
outsb
cmpsl
js
fcmove
das
cwtl
bound
rolb
mov
loopne
movsb
xchg
sbb
cmp
push
mov
push
jo
std
push
test
dec
xor
outsl
and
rsm
or
xchg
inc
push
inc
adc
xor
jae
inc
xor
xorb
shr
pushf
lods
sahf
bound
dec
add
mov
push
int3
aam
outsl
inc
leave
jbe
pop
ja
mov
adc
into
shl
outsb
mov
mov
cmp
or
xchg
loopne
clc
xchg
sub
sub
fimull
sub
movsb
ja
nop
inc
adc
push
cli
mov
lcallw
xor
jecxz
in
mov
ret
js
and
jecxz
jmp
cli
dec
lods
fcoms
mov
prefetch
or
cmp
inc
xor
aad
imul
rclb
shrb
lea
out
push
subb
mov
push
jbe
pop
add
popa
nop
andl
mov
push
sub
mov
call
je
jne
or
xor
pop
imul
fcomip
pop
rcll
and
cltd
jg
add
jmp
push
cmp
xor
loopne
adcl
mov
pop
push
and
jne
mov
or
es
add
inc
ja
rorl
pusha
inc
or
add
dec
xchg
cmpb
scas
pop
lea
sbb
push
aad
mov
js
push
out
imul
add
cs
jmp
imul
adcl
test
inc
fbld
adc
test
jo
stos
ret
movsb
fidivrs
jno
add
jmp
xor
je
ss
cltd
or
mov
sbb
inc
fildll
movsb
fcmovnu
insb
sbb
lods
adc
popa
mov
int
jno
aam
dec
aam
sbb
fwait
sbb
xchg
mov
sbb
or
cmc
jno
sub
dec
orb
insl
pop
or
mov
lcall
leave
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
add
clc
adc
mov
pop
std
sub
es
ljmp
jbe
push
icebp
pop
sub
cmc
lahf
and
and
test
xchg
push
push
lret
andl
mov
mov
sub
pop
or
mov
mov
imul
das
adc
movsb
fists
sbb
stc
cs
xor
sbb
cmp
fldenv
mov
cmc
lret
icebp
and
cmc
cmp
shr
movsl
cmp
sbb
imul
jb
pop
mov
imul
fldenv
imul
movsl
xor
xor
adc
scas
push
dec
xchg
jle
sub
mov
dec
xor
jns
shlb
mov
sbb
mov
xor
js
roll
pushf
push
cltd
xchg
clc
pop
bnd
adc
dec
pusha
jnp
pop
lock
mov
or
scas
xorb
dec
leave
inc
lcall
lods
pusha
mov
dec
mov
mov
or
lea
mov
pop
mov
pop
das
stc
or
loopne
pop
outsl
call
cld
iret
pushf
popa
and
outsl
rclb
int
pushf
in
mov
outsb
imul
or
and
push
lea
pop
aaa
dec
xor
test
or
sahf
nop
ret
dec
mov
cmp
mov
inc
aaa
test
je
cmc
test
adc
xchg
or
cld
rcrl
xor
out
and
mov
pop
icebp
or
mov
xchg
imul
xor
xchg
mov
int3
xor
or
sub
sarl
fidivrl
shl
ss
cmpsl
outsl
mov
scas
jecxz
cmc
mov
jge
aaa
pop
mov
sbb
xchg
push
mov
jbe
xchg
sub
add
insb
pop
cld
iret
ficompl
xchg
inc
push
and
ret
mov
jnp
fwait
daa
cwtl
ret
andb
dec
into
sbb
or
in
aas
or
in
xor
add
sub
xchg
mov
dec
cli
mov
fbld
ss
add
dec
or
dec
sti
push
cwtl
pop
sub
sub
pop
dec
aam
push
push
jecxz
inc
hlt
jl
dec
inc
or
jmp
mov
mov
xchg
call
int
imul
aaa
cwtd
jp
mov
push
pop
cmpsb
int
mov
push
test
arpl
test
cmp
mov
cmp
ficoms
scas
or
pop
pop
mov
jecxz
add
jo
sbb
add
insb
lret
inc
cltd
xchg
push
lods
xor
sbb
popf
cmpl
jo
mov
push
inc
sbb
sub
xor
pop
call
daa
and
in
addr16
out
push
in
inc
in
push
jno
rcr
test
cmp
shll
lret
push
loop
cmp
pop
jb
xchg
jnp
lret
xor
negb
rcrl
and
inc
lock
pushf
push
ficompl
fldl
inc
dec
sbb
mov
popf
xchg
lock
daa
fcoms
arpl
adc
popf
xchg
mov
mov
rolb
cmp
jbe
pop
addl
cmp
xor
sbb
xchg
sbb
out
mov
jo
add
insl
sub
es
mov
roll
and
outsl
xor
pop
jle
std
cmc
test
adcb
dec
add
dec
sbb
inc
and
jnp
xor
sub
test
dec
inc
sbb
mov
xlat
xchg
adc
xchg
iret
out
xchg
and
in
into
lods
addr16
mov
test
inc
xchg
xor
and
int
mov
or
icebp
mov
jo
outsb
mov
out
mov
iret
pop
xor
mov
add
mov
pop
dec
mov
out
mov
add
cmc
adc
int3
rcrb
and
fsubrs
mov
or
push
mov
bnd
cs
inc
fidivrl
xor
xchg
scas
scas
add
jecxz
mov
fisttps
or
addl
xchg
int
les
sbb
andb
jnp
adc
adc
into
or
mov
dec
nop
push
cwtl
out
aaa
mov
pop
jae
lea
les
xchg
sub
and
hlt
mov
scas
xorb
ja
or
ja
jno
dec
test
fldt
pop
sbb
and
cmpsb
cmpsl
sbb
cmpsb
aam
stos
push
jb
inc
outsl
mov
pop
add
push
push
js
in
lahf
and
rcll
int3
xor
sbb
jns
ret
nop
shl
or
movsl
pop
and
pop
pop
subl
subb
sbb
jne
std
mov
cmp
xor
sbb
iret
jle
and
sub
cmpsl
in
push
shll
fisttps
pusha
les
or
mov
mov
push
out
pop
fcomp
push
outsb
sub
jb
cmpb
cmc
aaa
jp
fptan
int3
sbb
or
sub
dec
xor
stc
sbb
dec
out
hlt
imull
fsub
inc
sbb
fwait
test
pusha
js
dec
fisubrl
or
and
mov
in
movsb
inc
nop
xor
pop
inc
sub
mov
add
xchg
or
mov
fwait
pop
jb
rclb
mov
push
or
mov
pop
mov
xlat
pop
inc
lods
mov
pushf
push
and
cmp
or
lahf
pop
das
xor
or
loope
sub
cmp
pop
mov
push
call
xor
popa
add
pop
in
push
je
pop
mov
inc
stc
inc
sub
shlb
sub
sbb
xchg
stos
inc
pop
repz
adc
ljmp
shrl
xchg
idiv
adc
stos
push
and
and
lret
rorb
and
add
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
lret
push
add
and
adc
push
adc
lods
and
lea
add
xchg
jecxz
gs
pop
sbb
in
test
pop
insl
push
cmc
dec
pop
gs
mov
lret
test
cmp
jb
jo
and
imul
adc
lahf
mov
and
mov
bound
mov
xchg
pop
test
dec
sbb
insl
add
insb
xchg
in
inc
mov
mov
notb
jbe
fldl
addl
test
fistpll
inc
sub
aad
jnp
lret
sub
cld
repz
push
mov
ss
test
addb
fildll
sbb
mov
scas
sub
or
aas
or
and
pop
stos
sbb
add
out
inc
fs
shlb
or
push
arpl
les
scas
mov
dec
shrl
test
out
jle
out
ret
fnsave
in
fmull
scas
mulb
push
inc
inc
mov
mull
arpl
xchg
cltd
mov
lods
xchg
jo
shlb
fbld
dec
repz
add
mov
pusha
ficoms
nop
rolb
into
faddl
andl
and
stos
adc
push
mov
insl
cmpsl
cmp
and
aaa
push
leave
test
scas
daa
mov
add
jmp
dec
add
push
jne
aas
lcall
std
cli
lcall
dec
jg
xlat
rcrb
dec
das
cmp
daa
adc
ss
fists
sbb
pop
das
xlat
aad
push
sub
icebp
jmp
adc
scas
push
sbb
popa
push
hlt
mov
or
rol
jg
mov
add
inc
cld
mov
pop
ret
ror
xchg
pop
int
dec
sbb
xchg
popa
lahf
adc
xchg
push
push
mov
lret
sbb
sub
sub
dec
push
and
jns
ret
adc
dec
les
cld
neg
mov
push
imul
mov
adc
cld
shlb
cmp
sbb
into
mov
daa
adc
push
rorb
lcall
mov
mov
mov
mov
das
pop
loope
fcmovne
xchg
inc
jle
push
arpl
cmpsb
mov
jcxz
scas
aam
ljmp
decl
loope
clc
test
addr16
mov
xor
cmp
mov
iret
fmuls
adc
mov
ja
cmp
in
das
imul
in
movsl
into
dec
sub
das
or
mov
jns
lds
adc
sbb
repz
fstpt
ret
lahf
and
and
mov
fdivr
jecxz
xchg
push
xchg
std
adc
mov
mov
xchg
mov
test
lods
iret
les
sbb
scas
inc
jl
dec
and
add
add
xor
ss
fisttpll
cmp
mov
pop
jle
aam
fldenv
filds
ret
fisttpl
adc
call
popf
add
push
aad
sbb
mov
or
mov
mov
push
push
sub
sbb
mov
test
lds
jae
out
add
lret
or
pop
cli
pushf
scas
scas
enter
popf
call
and
xchg
mov
or
daa
aam
rcr
ja
rolb
scas
in
sbb
cmc
mov
add
adc
push
xchg
jnp
xor
repz
mov
dec
pop
test
out
sahf
sub
outsb
outsb
loop
xor
popf
fistpll
loopne
insb
jecxz
pop
bound
mov
lea
ss
cs
test
ljmp
sbb
sub
push
aaa
sbb
scas
add
iret
jne
xlat
xchg
sub
es
sbb
cmp
or
push
sbbb
mov
test
nop
hlt
sahf
sti
popf
imul
pop
loop
pop
jl
jle
psraw
ss
cmp
fsubl
das
mov
dec
jle
mov
imul
js
jmp
lret
xor
push
outsb
icebp
dec
jecxz
inc
cli
mov
mov
or
inc
adc
fistl
in
fdivl
lods
aad
pop
repnz
popf
pop
cmpsb
test
fdivr
frstor
mov
cmc
jmp
icebp
dec
jecxz
jp
or
push
sub
nop
subl
shrd
add
ss
add
arpl
mov
ret
mov
clc
sub
mov
cld
loopne
pop
shr
adc
xlat
icebp
in
js
jno
xchg
lds
or
push
mov
enter
adc
lret
sarl
cmpsb
xor
aam
gs
add
pusha
fstpl
xchg
ret
mov
inc
movsl
int
aas
sub
and
in
cmpsb
xor
mov
cmpsl
mov
sbb
pop
inc
cmp
and
bound
nop
cwtl
sbb
push
cmc
push
cmpsl
gs
push
inc
bound
push
inc
xor
jne
stc
sar
aam
lock
jo
sbb
and
jo
fdivrp
dec
inc
ficomps
les
inc
jo
jmp
mov
mov
orl
enter
rolb
xlat
in
lds
add
or
shl
stos
cmp
cmp
fmuls
sbb
ret
sbbb
xchg
mov
cmp
ret
pop
sub
or
cmc
shl
and
aam
or
xchg
int3
add
lods
fidivs
push
xchg
lea
xchg
xor
jne
rorl
fimuls
add
dec
push
js
or
shrl
fsubs
jg
pop
jp
jae
mov
rcrl
repz
mov
rorl
inc
dec
mov
push
sbb
fiadds
adcb
xor
inc
ret
out
repnz
mov
setp
shrb
icebp
add
ror
cmc
xchg
in
sub
and
mov
jae
bound
push
fbstp
xor
arpl
and
push
aad
cmp
clc
jp
pop
xchg
loope
rclb
adc
jo
sbb
mov
adcb
ja
lcall
out
shl
shrb
dec
mov
xor
jmp
mov
icebp
sarl
dec
icebp
lcall
popa
out
sbb
xchg
jne
daa
movsl
inc
push
adc
clc
test
jmp
jne
pop
and
dec
rorl
leave
scas
lea
jae
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
adc
jb
or
cli
adc
jmp
repz
ret
or
mov
pop
xor
and
ss
mov
fistpl
sbb
scas
dec
gs
mov
mov
iret
push
mov
ret
jbe
dec
out
ljmp
pusha
and
jno
popa
je
mov
mov
iret
les
mov
fisttpl
xor
rclb
mov
stos
lods
repz
aaa
add
mov
test
stos
in
dec
test
fs
add
push
inc
out
sub
mov
cli
lods
call
mull
adc
sbb
add
mov
cmp
push
nop
test
lds
rorl
or
dec
or
inc
and
pop
cvttps2pi
adc
aaa
cmp
pusha
testl
scas
mov
xor
mov
arpl
cmpsb
cmp
inc
ret
cs
push
outsl
mov
sub
or
push
mov
mov
stos
xlat
cmc
ja
cmp
mov
cwtl
adc
pop
in
mov
lods
cs
push
jmp
aaa
sbb
xchg
dec
pop
jae
mov
jmp
push
add
idivb
or
rcll
outsl
cmc
add
mov
aas
cli
jnp
sarl
pop
or
ret
mov
cltd
mov
sti
sbb
xlat
scas
sahf
inc
cmpb
add
dec
pop
int
inc
sbbl
cli
mov
push
js
mov
outsb
outsl
adc
addr16
inc
pop
mov
jbe
mov
fcmovnb
jge
adc
pop
jp
push
lretw
rorl
dec
mov
ss
mov
or
xor
rsm
and
adcl
lea
dec
mov
fdivr
sbb
movsb
pop
sarb
mov
sbb
xchg
push
and
in
push
mov
push
jns
xor
mov
adc
es
jae
movsb
and
and
sub
lcall
pop
loope
dec
repz
mov
sub
jb
movb
inc
and
aam
psubb
cmp
rcrb
cmc
mov
mov
cmpsl
ss
and
iret
daa
adcb
mov
mov
xchg
mov
cwtl
les
imul
mov
test
repnz
ret
in
leave
lahf
insl
push
jmp
adc
mov
jecxz
adc
sti
leave
imul
scas
adc
push
leave
mov
in
orb
push
mov
loop
push
jecxz
call
inc
sbb
lcall
mov
xor
pop
pop
dec
fsub
xchg
cmpsb
scas
xor
ds
fwait
int3
pop
push
sti
mov
lds
in
loopne
xor
push
dec
out
rcl
repz
clc
or
adc
nop
or
adc
fwait
dec
movsl
mov
jle
jecxz
inc
xchg
sub
ljmp
jb
fidivs
cmp
loopne
cmp
test
pop
inc
aam
nop
sub
pop
nop
add
shr
or
test
ljmp
std
insl
std
cmp
cmpsb
clc
push
popa
adc
pushf
pusha
dec
sahf
and
mov
push
jl
pop
lock
inc
push
in
ds
fucomi
mov
jnp
jmp
pop
xorb
inc
jno
out
test
je
pop
sarb
cmp
pop
adc
push
mov
insl
sbb
lock
imul
mov
add
idivl
or
inc
adc
scas
cmc
dec
sub
test
fs
and
test
mov
insb
sbb
sbb
pop
test
lea
xchg
gs
add
loope
inc
je
push
push
and
or
dec
movsl
fcoms
adc
xchg
test
cmp
mov
push
push
mov
fsubrl
mov
popa
inc
ja
adc
ja
nop
mov
sub
insl
or
imul
cmpsl
dec
loop
fiaddl
subb
cs
jo
mov
pushf
pop
or
add
sub
pop
test
leave
pop
mov
call
cli
out
mov
sub
mov
pcmpeqb
int
pop
pushf
mov
mov
lcall
pop
ficomps
xor
test
lock
sti
int3
mov
cwtl
inc
push
pop
mov
out
test
xor
sub
lahf
xchg
popa
es
sub
xor
sub
pop
mov
push
div
out
xor
pop
xchg
push
or
dec
test
adc
stos
sub
mov
jae
cmpsb
inc
mov
dec
sbb
fisttpl
jnp
dec
ret
insl
addl
mov
sub
fcmovbe
dec
fs
stc
mov
repz
sbb
mov
es
xchg
push
into
ljmp
ret
test
outsl
out
fstps
mov
imul
repz
negb
out
dec
xor
xchg
iret
das
xor
add
stos
fs
repz
mov
notb
test
test
mov
shlb
sub
add
incl
jnp
fsincos
cmp
jnp
cmp
call
rol
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
