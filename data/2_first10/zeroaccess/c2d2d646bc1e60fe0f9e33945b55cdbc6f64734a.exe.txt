push
mov
sub
andl
push
mov
movl
push
movl
push
call
adcl
test
movl
je
orl
xor
movl
jmp
subl
push
push
xor
subl
inc
subl
push
sbbl
push
xorl
call
test
movl
je
incl
xor
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
jne
sbbl
push
xorl
push
orl
call
andl
test
movl
jne
push
push
call
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
jne
push
subl
push
adcl
push
orl
call
decl
test
movl
jne
push
orl
push
call
subl
test
jne
addl
push
adcl
push
call
sbbl
test
jne
orl
push
push
orl
call
test
movl
jne
movl
push
push
push
call
test
jne
push
push
orl
push
movl
call
test
jne
sbbl
push
orl
push
call
test
jne
push
andl
push
subl
call
xorl
test
jne
push
subl
push
adcl
call
xorl
test
movl
jne
addl
push
orl
push
andl
push
call
adcl
test
jne
orl
push
push
push
call
test
movl
jne
push
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
call
test
movl
jne
adcl
push
push
push
movl
call
test
movl
jne
adcl
push
push
sbbl
push
call
adcl
test
movl
jne
xorl
push
addl
push
orl
call
test
movl
jne
decl
push
andl
push
orl
call
test
jne
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
push
xorl
call
addl
test
movl
jne
push
orl
push
addl
push
andl
call
test
jne
adcl
push
orl
push
subl
call
test
jne
orl
push
andl
push
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
je
addl
xor
jmp
movl
mov
mov
adc
mov
inc
mov
movl
lea
xor
mov
lea
dec
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
adcl
mov
sbb
mov
xor
mov
mov
adc
mov
add
movl
mov
movl
mov
cmp
movl
jne
mov
mov
sbb
mov
xor
mov
mov
xor
sub
add
sbbl
mov
xor
mov
xor
add
andl
mov
xor
mov
mov
mov
mov
mov
mov
sbb
mov
mov
add
mov
mov
mov
not
movl
movzbl
add
mov
mov
orl
xor
orl
add
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
xor
andl
lea
orl
push
mov
and
mov
subl
xor
sbbl
lea
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbbl
pushl
andl
call
sbb
mov
mov
xor
lea
add
mov
mov
xor
xor
subl
add
mov
subl
xor
lea
mov
movl
cmp
jbe
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
mov
or
mov
movzbl
sbb
mov
mov
sub
xor
movl
mov
mov
movl
cmp
jne
decl
lea
adcl
mov
lea
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
test
movl
je
sub
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jb
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
cltd
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
sbb
mov
add
adc
xor
andl
xor
mov
sub
mov
mov
dec
mov
mov
movl
xor
mov
mov
and
add
mov
adcl
xor
mov
mov
xor
movl
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
mov
mov
adcl
mov
xor
addl
add
movl
adc
addl
xor
xor
movl
cmp
movl
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
push
inc
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
addl
mov
xorl
push
adc
mov
andl
add
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
xchg
add
xchg
mov
dec
ja
xor
jp
jp
dec
pop
jp
adc
pop
cmp
popa
cmp
xchg
pusha
push
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
add
jb
out
lret
and
add
outsb
mov
daa
cmp
dec
mov
sbb
popf
imul
sti
jae
test
mov
or
adcb
fldenv
stos
mov
lret
push
jne
adc
mov
lret
shrb
js
mov
mov
cmp
add
and
jno
xchg
lret
outsl
and
sub
cmpsl
or
cmpsb
mov
das
negl
sbb
jb
pop
movsl
inc
jno
mov
scas
push
rol
aaa
jbe
jnp
or
xchg
xchg
jge
mov
jle
fldenv
insl
inc
fisubrl
cmp
sub
addr16
jmp
xchg
imul
xor
popa
daa
pop
xchg
or
ret
push
iret
icebp
dec
rcrb
pop
aam
nop
mov
not
xchg
xchg
arpl
aaa
rcll
les
lret
hlt
jmp
shll
or
dec
cmp
or
sbb
and
xor
mov
dec
bound
pop
dec
add
push
lock
cmp
pop
add
and
cmp
mov
or
dec
and
jmp
sbb
pushf
bound
adc
ja
mov
cld
and
fadds
lcall
pop
push
inc
and
roll
stos
mov
dec
add
stc
jl
test
rclb
mov
mov
hlt
lret
pop
lock
arpl
out
stc
imul
jae
icebp
cmp
and
icebp
into
jp,pt
hlt
dec
and
icebp
into
sub
dec
test
fcompl
dec
fisubrs
mov
push
sub
jg
cmp
jns
inc
push
jle,pn
call
ja
test
test
incb
ds
sarb
aas
testb
pop
mov
dec
fs
lods
adc
xor
icebp
pop
imul
jno
popf
push
pop
scas
stc
cmp
push
int3
shll
clc
test
sbb
out
mov
je
jecxz
pop
nop
mov
aam
mov
add
cmp
or
sbb
cs
sbb
inc
aas
add
stc
mov
cmp
adc
out
fcoms
divl
lds
sub
int
push
add
lahf
loope
mov
push
add
push
mov
sbb
leave
ljmp
dec
push
or
jmp
jb
adc
adc
and
lock
xorl
mov
and
stc
push
sti
jne
sbb
sbb
inc
dec
xchg
in
add
mov
push
add
testl
push
mov
int
mov
cmp
dec
mov
push
jne
addr16
int3
adc
sub
int
dec
xor
std
xchg
aam
jnp
js
cmp
cli
pop
call
mov
jecxz
ffreep
or
inc
push
or
aas
adc
mov
sbb
jnp
or
pop
mov
int3
cmp
gs
xchg
lods
or
jbe
cmp
vpmacssww
pop
icebp
outsl
or
test
jge
mov
adc
inc
mov
or
icebp
xchg
pop
or
mov
and
or
sub
pop
cmp
pusha
xchg
sub
rol
mov
inc
cli
mov
clc
lahf
xor
adc
fsubp
es
nop
and
jg
das
jbe
dec
in
repnz
fs
incl
jo
daa
mov
ja
cltd
ljmp
or
pop
cmp
idivl
push
test
xlat
aam
pop
or
jmp
sbb
jne
and
mov
test
lret
imul
test
cli
mov
jl
addb
shll
ja
je
xchg
das
jl
mov
rorb
fcompl
push
sub
push
mov
iret
rorb
mov
inc
movsl
js
cmp
movsl
push
rclb
cltd
jo
pop
add
pop
jg
add
fisubs
mov
lods
je
pop
js
adc
and
iret
out
mov
xor
jle
jmp
inc
lret
dec
and
xorb
in
dec
nop
cltd
je
lcall
jae
mov
daa
insb
sti
xchg
sarl
xor
pop
iret
es
fwait
js
stc
xlat
cmp
rcl
xchg
push
dec
xor
cmp
out
or
dec
loop
repz
mov
shl
sti
mov
cmp
cltd
xor
test
into
lahf
mov
idivl
inc
or
inc
cmp
lock
pop
and
ret
popa
arpl
das
lret
inc
sub
popf
movsb
dec
sub
cmpsb
enter
stc
push
ret
jl
daa
inc
xor
repz
fidivs
mov
fidivrs
cmpsb
lret
pop
add
popa
push
xor
pop
jb
push
push
sub
xchg
jnp,pn
xlat
jl
sbb
fpatan
push
adc
push
sub
xchg
pop
ss
xchg
lcall
pop
mov
repnz
and
dec
pop
sbb
or
xchg
and
mov
imul
sbb
pop
out
and
sbb
inc
fldz
jp
mov
adc
xor
push
das
xor
mov
imul
xor
sbbb
sbb
jmp
mov
mov
add
imul
ds
jecxz
mov
xchg
mov
insb
jae
daa
sbb
movsl
int3
xchg
scas
test
cmc
popf
jle
inc
insl
mov
fildll
mov
push
cmp
inc
push
mov
sbb
adc
lcall
and
mov
jl
mov
fdivs
push
insl
in
jns
icebp
movsl
aaa
adc
xlat
mov
xchg
leave
xchg
subl
ret
jo
fsts
fcomip
movsl
xchg
add
inc
mov
dec
stc
stc
inc
lods
inc
mov
mov
scas
push
mov
pop
bnd
jo
orl
fbld
pop
inc
add
repz
pop
jbe
stos
lcall
lahf
dec
mov
inc
inc
int
push
xchg
or
sub
push
mov
jmp
xchg
ds
data16
sbb
sbb
push
ja
pop
in
in
cmp
push
leave
cmpsl
adc
push
inc
lret
loopne
lock
jle
push
add
gs
fldcw
jle
add
mov
mov
mov
stos
sbb
ja
adc
lods
xchg
push
push
test
sub
push
mov
push
add
cli
les
cmp
aad
popf
fcoml
lods
adc
rcr
in
addl
repz
fstpl
ljmp
or
test
push
push
mov
lods
dec
je
push
xchg
dec
push
push
sarb
into
push
aam
jb
cmp
push
adc
sub
leave
out
sbb
jbe
cmp
aad
mov
mov
cmp
xorb
mov
sbb
pop
dec
dec
subl
or
adc
adc
movsl
adc
out
sub
push
jmp
incl
cmp
repz
inc
repz
les
bnd
xchg
mov
sarl
dec
ds
aam
xor
cltd
inc
movsb
imul
mov
push
or
negl
repnz
imul
inc
ljmp
clc
adc
inc
jb
adc
mov
mov
mov
and
sahf
jno
adc
shrb
insl
ret
outsl
jle
ljmp
cld
imul
fucomp
push
cmpl
aas
jg
nop
dec
movsb
fwait
das
rolb
in
frstor
xchg
cmpsl
cld
add
call
fldcw
insl
loop
in
or
mov
out
stos
data16
out
ja
fisttps
fistps
xchg
mov
add
push
ds
xchg
sbb
cmp
push
pop
scas
loopne
jle
push
or
rcrl
rorl
rcll
push
int3
das
in
pop
pop
cmp
out
inc
je
leave
leave
xchg
sahf
jae
xchg
mov
jl
add
pop
outsl
jo
mov
fstpt
and
cmp
arpl
out
add
push
inc
xchg
leave
mov
out
testl
or
hlt
jl
popa
andl
adc
sbb
scas
rol
outsb
mov
dec
fmuls
inc
or
dec
jae
mov
push
mov
dec
js
or
jp
push
mov
imul
xchg
xor
sahf
js
js
rolb
int3
out
xchg
mov
mov
fsubp
pop
and
xchg
jle,pt
ficomps
xchg
push
dec
adc
push
enter
and
inc
rcrb
xor
inc
xor
push
andb
lea
cltd
stos
pop
mov
push
push
pop
jmp
lds
xor
pushf
mov
in
leave
jecxz
mov
cmp
cmp
ss
dec
mov
or
cwtl
mov
mov
push
ja
leave
mov
jmp
push
sti
stc
or
inc
cmp
add
cmpsl
xchg
sbb
fidivs
inc
iret
or
test
cmpsb
add
ret
jnp
lret
mov
mov
insl
xor
pop
xchg
shr
fcmovb
pop
or
lahf
pop
stos
cli
xor
scas
imul
imul
sti
subb
popa
inc
jp
mov
jle
jno
jp
jns
cmpsb
scas
cmp
addr16
mov
sbb
int
sarl
repnz
iret
dec
xor
sub
stos
pop
cli
inc
push
xrelease
mov
clc
mov
xor
imul
stc
bound
push
movsl
pop
jge
ja
xchg
test
jmp
lea
mov
in
testl
in
dec
test
or
and
jmp
iret
scas
ljmp
jle
add
xor
mov
test
rcrb
aaa
test
out
or
adc
ljmp
aad
and
sbb
scas
and
jmpw
test
daa
adc
add
jl
pop
pop
pop
cmpb
add
dec
xor
mov
cmpsb
cmpsb
pop
stos
pop
data16
flds
divl
push
mov
xchg
fcompl
js
jecxz
mov
ficoms
pop
in
cmp
pop
pop
stc
cmpsb
out
in
mov
imul
decl
cmp
shlb
xlat
cmp
out
xchg
scas
lahf
incb
mov
xchg
sbbb
fs
pop
popf
imull
sbb
popa
xor
scas
xchg
movsl
mov
mov
lock
push
xor
push
lods
call
push
mov
ja
pop
aam
sbb
xor
or
sub
push
sub
repz
lret
mov
jle
stc
pop
pop
add
shll
stc
mov
cwtl
mov
inc
inc
test
inc
std
jl
jbe
jl
adc
xor
jecxz
in
sub
outsl
sbb
xchg
mov
call
push
icebp
stos
pop
and
imul
push
repnz
lahf
fdivrs
adc
mov
test
push
xchg
and
dec
xlat
outsb
outsl
jno
sub
xor
dec
and
lcall
lcall
inc
push
pop
inc
cwtl
leave
mov
dec
xchg
testl
loopne
mov
jg
and
xor
push
mov
mov
mov
in
inc
mov
insb
lcall
mov
mov
xchg
mov
add
xchg
loope
imul
add
leave
pop
repz
and
xor
push
or
icebp
mov
mov
adc
cmpsl
insw
jge
adc
cld
enter
enter
out
mov
cmp
iret
adc
sahf
stos
mov
imul
leave
dec
cmp
jnp
jno
or
incl
or
repz
mov
and
js
inc
rcrl
jl
pushw
pop
push
jb
mov
imul
xor
out
or
adc
pop
jae
mov
push
jecxz
xchg
cltd
jne
pop
mov
dec
jecxz
repz
adc
mov
lds
shlb
inc
sub
pop
aaa
testl
enter
or
sahf
cmp
subb
xor
popl
mov
cmp
icebp
insb
cmp
xchg
inc
inc
xchg
push
shl
mov
sbb
or
gs
cmc
pop
dec
test
out
push
cmpsl
aaa
lock
hlt
stos
arpl
pop
mov
or
pop
add
push
inc
push
cmpl
mov
aaa
xchg
inc
popf
jg
repnz
pop
je
dec
sbb
jge
cli
sbb
aam
scas
rcl
add
cmpl
js
inc
clc
ljmp
rcll
aad
ror
mov
or
jns
outsb
xchg
mov
lret
daa
sbb
xchg
inc
cld
jbe
push
or
pop
dec
xchg
pop
dec
mov
inc
outsl
xchg
push
lcall
nop
test
mov
add
and
sahf
adc
lahf
pop
push
pop
mov
aaa
leave
jne
sub
jle
clc
pop
xor
ljmp
mov
mov
mov
rorb
add
int3
fstpt
int3
loop
xor
movsl
mov
mov
sub
mov
in
mov
xlat
leave
pop
pop
es
or
aam
lock
nop
xchg
mov
push
xor
inc
push
cmpsl
ss
pop
cli
push
cmp
je
insl
leave
add
pop
stos
xchg
and
xchg
lahf
js
and
pusha
push
xor
mov
mov
fiadds
jg
faddl
je
inc
lahf
pop
cmp
test
mov
lahf
mov
xor
adc
es
js
pop
mov
shll
inc
add
push
jae
push
push
cld
bound
shrl
mov
mov
sbb
mov
cli
filds
stos
int3
sbb
in
mov
add
pop
cs
pop
jl
add
push
jo
std
loope
fnstcw
push
movw
sbb
dec
add
popa
sub
xorl
jp
nop
mov
pop
mov
das
cmpsl
sbb
rcll
fs
les
aam
mov
or
push
xor
xor
xchg
lret
aas
mov
js
scas
push
shlb
jbe
xchg
test
mov
loope
ss
test
aam
mov
cmpsl
aaa
testb
call
mov
out
lds
cmp
mov
sti
aas
lahf
mov
fldt
sbb
mov
loop
sti
mov
aam
lret
jl
adc
imul
inc
into
dec
or
repnz
mov
cmp
movsb
jle
sbbb
jmp
js
mov
jp
fistl
mov
movsl
jl
pop
rcr
sbb
cmp
push
xchg
or
out
outsb
nop
inc
mov
scas
lret
popa
sbb
lret
pop
fstl
add
shrl
stos
fsubr
mov
dec
sahf
in
gs
push
xor
adc
pop
and
clc
sub
adc
movsl
mov
dec
inc
cmp
cmpsl
mov
sub
mov
cmp
mov
leave
fisubrl
das
push
iret
adc
ds
xchg
and
xor
out
out
cmpsl
adc
xchg
sub
push
sbb
loopne
jae
cmp
mov
and
jb
subl
in
sbb
xor
xor
dec
movsb
stos
sbb
in
or
or
xor
pop
cmp
push
or
sbb
or
cwtl
pop
lds
cmpsb
pop
mov
pop
or
lcall
jmp
mov
out
dec
outsl
adc
outsb
orb
inc
cmp
mov
cmp
add
pop
mov
cmp
leave
mov
mov
lea
xchg
repz
dec
mov
sar
push
hlt
inc
jns
fs
loope
and
outsl
push
cmp
mov
sbb
out
out
nop
pop
outsl
adc
push
push
cmp
stc
push
mov
lcall
pop
fnstsw
push
adc
jp
hlt
mov
mov
out
xor
pushf
enter
xchg
leave
popa
mov
repz
mov
loopne
pop
sahf
rcrb
movsb
imul
addl
insl
xlat
ljmp
jp
aam
test
jge
jp
sarl
popa
inc
xchg
loopne
or
gs
repnz
jno
add
mov
icebp
nop
aam
sarb
xchg
jns
dec
test
out
aad
stos
repz
stc
lret
icebp
pushf
inc
xchg
mov
out
jp
and
inc
dec
pop
es
xchg
and
or
inc
push
cmp
cmp
cmp
pop
lods
stos
rclb
sbb
push
add
push
xchg
lret
iret
ficoms
idivl
ljmp
js
out
pop
cs
les
cmpsb
lret
pop
pop
shrl
in
aad
xchg
imulb
jg
xchg
and
shl
lcall
push
xchg
je
cmp
sbb
incb
sub
outsl
shrb
fwait
adc
ftst
rcrl
pop
out
mov
jno
adc
pusha
xor
mov
cli
xchg
mov
push
mov
bound
push
push
mov
shll
mov
jmp
es
std
and
scas
dec
push
pop
jl
add
push
xchg
xchg
pusha
mov
in
aaa
mov
sub
icebp
cld
mov
jne
pop
sbb
or
imul
out
imul
mov
add
fcmovnu
pop
mov
movsb
xchg
mov
cmp
mov
daa
sub
lret
jbe
data16
or
sub
jns
mov
loop
lds
adc
dec
insl
push
push
pop
lret
mov
es
push
xor
and
cmp
and
mov
jb
aas
dec
dec
call
stos
dec
cli
ljmp
das
popf
je
movsb
or
pop
jo
and
sbbb
bound
inc
xchg
xchg
xor
jmp
jl
push
shr
popf
inc
cmpsl
adc
fwait
cmp
jbe
jl
pop
sbb
imul
stc
push
cmp
jp
adc
mov
ds
dec
dec
mov
mov
adc
pushf
dec
loop
stc
js
dec
sub
push
lahf
subl
jle
movsl
rcrl
jno
xchg
fs
es
cmpsl
movsl
fistl
imul
cld
cmpsl
cmp
shl
data16
push
and
pop
scas
jge
mov
gs
mov
in
aam
mov
imul
ret
outsl
mov
cmp
lret
sub
out
sti
fwait
mov
mov
inc
aas
into
cltd
loope
repz
jno
cmp
cltd
sub
push
pop
mov
xchg
in
sbb
add
mov
push
dec
sbb
cmp
cld
mov
or
sub
xor
sub
pop
test
shl
xchg
popf
mov
addb
aas
pop
fistpll
inc
add
cwtl
or
lcall
loope
fists
cmpb
jno
es
sbb
repnz
mov
pusha
stos
jle
fadds
mov
push
aam
mov
in
sti
mov
mov
xor
test
sbb
popf
inc
icebp
jp
mov
inc
sub
push
lcall
cmpl
popf
pop
mov
xchg
xchg
jecxz
outsb
pushf
cmp
add
jae
mov
arpl
int
roll
roll
fildll
stos
lahf
inc
in
rorl
push
pop
sbb
shl
repz
fnstsw
jno
data16
test
dec
and
sbb
jecxz
in
jecxz
jae
shr
js
ret
scas
sbb
jle
jb
sbb
fs
lods
add
in
notb
ljmp
jg
fstpt
ljmp
mov
sbb
scas
popa
jns
cld
loopne
outsb
cmp
xor
add
lret
repz
push
jle
scas
inc
adc
mov
jmp
cmp
andl
out
in
push
mov
lret
lret
cmpsl
mov
pop
mov
sahf
or
movsb
mov
int
and
fwait
xchg
cmp
icebp
sbb
xlat
inc
xchg
adc
mov
cmp
adc
shlb
mov
xchg
push
imul
mov
pop
mov
rcll
roll
dec
push
push
test
jmp
xor
pop
std
adc
movsl
dec
or
pop
inc
lods
negl
mov
mov
push
sarl
sbb
xchg
std
mov
mov
loopne
inc
sub
rcll
int
loope
add
insb
and
outsl
xchg
mov
cltd
xchg
dec
testb
mov
sti
inc
mov
xchg
fildll
mov
lahf
sahf
and
popf
es
cmp
pushf
stos
push
fstps
cltd
stos
popf
adc
push
arpl
out
cmp
and
sti
inc
sarl
and
repnz
inc
pop
jge
aaa
sar
xchg
add
xchg
xchg
add
sbb
push
out
ljmp
mov
jmp
or
cld
sti
mov
sbb
cli
push
xlat
ret
cmp
imulb
sub
mov
inc
mov
cmp
fidivrl
pop
insl
xchg
mov
lock
fiaddl
mov
xchg
fiaddl
sti
add
or
cmpsl
fwait
pmullw
mov
and
xor
add
and
jp
and
ret
dec
dec
sbbl
subb
add
push
outsb
inc
loopne
hlt
xchg
in
loopne
jle
jle
idivb
in
lods
fs
pop
dec
xchg
mov
sub
and
cmc
out
outsb
outsl
xor
repnz
ret
out
cmc
dec
mov
rep
pop
cbtw
lcall
mov
pop
lock
loope
pop
movl
nop
std
xor
lea
insl
mov
sar
in
dec
imul
jmp
std
nop
mov
leave
xor
and
add
pop
cld
call
sti
xor
dec
outsb
sti
popf
rclb
lods
jp
cld
dec
loop
and
testb
jnp
insl
and
loope
call
mov
inc
cmpsb
xor
std
xor
jbe
pushf
enter
mov
pop
fiaddl
lret
inc
rdtsc
mov
daa
sahf
mov
dec
in
ljmp
jmp
mov
int3
je
out
mov
ret
mov
xchg
jp
xchg
je
and
lds
pop
add
or
mov
pop
insl
adc
sbb
loopne
imul
call
aad
xor
inc
xor
push
dec
or
into
xchg
pop
fcoml
push
and
mov
adc
enter
insl
stos
mov
xchg
adc
and
mov
in
call
ss
arpl
inc
scas
push
dec
loope
call
je
imul
jb
xorl
mov
fs
mov
decb
inc
into
push
imul
pop
call
push
adc
sub
cmp
lcall
mov
jp
jnp
icebp
adcb
call
mov
andl
rolb
daa
cmc
cmp
sbb
inc
mov
das
or
dec
mov
jno
jge
mov
les
xchg
or
and
pop
inc
push
das
dec
mov
jge
insb
mov
fs
out
test
inc
cmpl
lcall
sarl
push
jae
add
lock
mov
push
cmpl
iret
mov
sbb
stos
mov
adc
pop
xorb
outsl
pop
call
dec
xchg
movsl
pop
mov
jmp
sub
js
rcl
adc
test
jp
shrb
push
in
into
push
cmp
jno
outsl
call
bound
hlt
dec
jb
xchg
call
mov
dec
xorl
sub
adc
xchg
lock
dec
mov
add
insb
sti
pop
mov
out
mov
and
data16
cmp
in
mov
insb
iret
inc
sbb
adc
fst
push
fistpl
cmp
pop
in
sbb
ret
push
in
adc
in
sub
jle
out
sti
cmpl
cltd
jl
add
orb
stos
repnz
jnp
and
call
cmp
dec
imul
mov
lea
mov
mov
sbb
mov
stos
sub
aad
push
jnp
sbb
ret
sbb
xor
push
cmp
hlt
cwtl
mov
inc
adc
mov
jl
orl
insl
pop
push
js
loop
pop
scas
mov
push
rcrl
test
dec
xor
std
popa
pop
or
jmp
mov
jp
leave
sbb
pusha
lcall
dec
stc
fbld
out
dec
das
push
test
sub
cs
fisttpll
mov
stos
mov
mov
cld
jge
ljmp
mov
add
repz
or
lret
ds
dec
mov
xor
dec
pusha
jnp
jnp
dec
ds
repz
pop
arpl
xchg
ror
push
and
lock
dec
adc
push
out
inc
ret
pop
cmpsb
fcoms
jae
ret
fidivs
inc
mov
test
int3
mov
scas
jns
nop
inc
jle
or
daa
push
scas
lods
xor
lcall
hlt
out
mov
call
mov
cld
orl
or
dec
inc
and
sti
test
or
or
in
fcompl
xchg
add
ljmp
mov
add
mov
mov
js
arpl
rcr
add
jne
inc
jg
push
pushf
xchg
sub
jecxz
out
cmpsw
push
dec
xorl
movsl
push
sub
ret
xor
fwait
pop
adc
mov
dec
jae
jmp
sbb
mov
pop
jmp
js
je
sti
push
sahf
mov
cld
stc
add
xor
xor
xchg
sub
pushf
lahf
fldenv
pop
hlt
sub
pop
dec
cmpsl
cld
pop
cmp
push
das
ror
adc
xchg
arpl
pop
xchg
pop
scas
pop
dec
fbstp
ja
xor
sbb
loope
or
pop
sbb
lods
mov
mov
movl
add
or
sub
xchg
add
push
add
dec
push
adc
aaa
pusha
xor
xchg
push
ret
push
cwtl
fcomp
pop
push
jl
pop
jecxz
addr16
in
and
mov
adc
adc
in
lret
push
in
insl
push
pop
int3
mov
out
push
push
jmp
cwtl
int
sahf
clc
xchg
adc
out
xchg
sarl
mov
jmp
iret
dec
xchg
out
mov
fsts
sbb
fsubrl
iret
leave
cmpsb
xorl
cwtl
iret
fsts
test
or
jp
nop
cltd
out
sahf
mov
sbb
inc
sub
cmc
sub
push
rdtsc
loopne
outsl
pusha
testl
pushw
imul
add
xchg
mov
and
mov
sub
ja
pop
imul
xchg
jne
stos
cli
sbb
mov
push
cmpsb
mov
pop
frstor
lods
insb
pop
add
fadd
push
scas
mov
icebp
mov
orb
xchg
lret
push
lret
jl
addr16
jecxz
mov
and
test
cmp
aam
subb
pop
decl
stos
jbe
neg
fwait
inc
and
fldpi
inc
stos
aaa
testb
sahf
inc
stos
adc
xchg
mov
out
mov
xchg
adc
pop
inc
and
or
js
sti
inc
mov
and
mov
and
add
clc
outsl
nop
mov
test
xor
mov
in
out
lock
arpl
pop
daa
dec
fimull
mov
andb
jnp
mov
enter
jmp
inc
push
adc
sub
jmp
repnz
mov
fstl
add
cmpsb
mov
fcmovu
mov
sarl
xchg
mov
loopne
cmp
stos
in
dec
push
rolb
xchg
in
mov
pop
mov
mov
jo
sahf
test
sbb
push
push
pop
dec
inc
orb
and
movsb
mov
std
push
and
jg
test
aaa
xor
shll
and
outsl
mov
jmp
rcll
sbb
nop
rcrb
xor
mov
loop
lods
push
pop
scas
sbb
xor
inc
adc
orl
dec
push
lods
mov
jp
data16
movsb
mov
dec
mov
divb
sbb
xchg
mov
mov
out
xor
jns
pushf
mov
and
aaa
jmp
sbb
lods
pop
scas
jle
jns
enter
cmp
jno
add
ret
jp
mov
daa
and
es
pop
jmp
lds
out
cmp
frstor
xor
jg
lret
ja
jae
bound
inc
add
dec
push
orb
pop
fisttpl
dec
sub
stc
dec
mov
adc
pop
mov
mov
xchg
std
loope
stc
sbb
mov
arpl
xchg
and
mov
dec
fimull
or
lcall
and
aam
sbb
rcll
push
loope
pusha
cmp
aam
loope
pop
mov
or
xor
jns
cmp
mov
cmpsl
xchg
inc
loop
inc
imul
cs
mov
aaa
popf
mov
cwtl
sub
daa
pop
xchg
adc
mov
mov
push
push
or
mov
fidivs
dec
xor
push
movsb
nop
pop
mov
dec
sbb
in
pop
daa
add
lods
mov
loopne
cmp
hlt
xchg
mov
adc
or
sarl
lock
jb
stos
mov
fstp
or
call
iret
or
popf
cmp
xchg
test
push
inc
mov
dec
out
outsl
pop
cld
inc
out
js
loope
mov
lcall
xor
and
repz
inc
pop
test
mov
out
test
xor
scas
imul
dec
xor
aaa
enter
adc
jb
cli
imul
xchg
push
std
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
sub
movl
mov
movsbl
or
mov
sub
sub
mov
xor
mov
sbbl
xor
movl
cmp
movl
jne
xorl
mov
andl
push
mov
xorl
add
mov
and
mov
mov
add
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
subl
push
push
push
lea
push
lea
adcl
jmp
outsl
or
or
scas
leave
add
pop
jp
test
aas
subb
or
addl
sub
push
divl
fisttpl
mov
mov
add
das
out
ret
divb
jae
fisttps
dec
test
mov
push
mov
movsl
jo
add
mov
jnp
pop
cmp
insb
jecxz
jp
daa
stc
push
jp
pop
pushf
pop
loop
sub
mov
cmpsl
pop
dec
push
icebp
mov
cmp
lahf
outsb
push
pop
addr16
fsubrs
gs
mov
and
mov
jno
cwtl
jbe
adc
ljmp
pop
das
pop
stos
adc
cmp
cwtl
repnz
mov
pop
das
nop
es
push
sbb
stos
inc
adc
loope
mov
sub
mul
push
cmp
jno
sbb
loopne
xchg
dec
adc
scas
and
xor
xchg
mov
adc
dec
dec
movsb
adc
xchg
jno
cmpb
inc
pop
jg
insl
loopne
movsb
mov
xchg
rclb
xchg
mov
push
cli
sar
cmp
mov
cli
jae
ret
sti
sub
icebp
sarl
clc
pushf
pop
xchg
movb
mov
inc
sub
icebp
adcb
sub
inc
adc
jle
mov
aaa
dec
scas
scas
inc
push
icebp
sti
push
cmp
sub
data16
lds
sbb
mov
push
xorb
jns
inc
sbb
lods
cwtl
les
fnstenv
roll
inc
mov
in
push
dec
cld
xchg
inc
mull
fcmovne
popa
lahf
iret
aas
xor
pop
push
mov
or
jl
inc
std
stos
mov
push
lds
gs
jmp
ret
sbb
sub
cli
call
add
pop
jge
xchg
or
fidivrs
sti
and
dec
adc
out
add
inc
add
loop
pop
jmp
mov
ss
clc
rcrl
out
lds
adc
out
jo
pop
and
insb
xor
and
cmpsl
xchg
xor
inc
cs
cwtl
into
xchg
mov
cwtl
out
xor
js
notb
icebp
pop
push
mov
mov
into
push
shrb
mov
out
fimull
daa
in
cs
mov
jmp
movsl
cmc
nop
rcrb
adc
adc
stos
and
cmpsl
push
cmp
ret
insl
lock
sti
and
sub
cmp
cmc
or
movsb
and
lds
and
jmp
push
pusha
jle
or
lods
mov
sub
icebp
lahf
cmpsl
xlat
fs
daa
andl
or
pop
clc
sub
mov
ja
add
fs
xchg
xor
mov
into
popa
andl
lret
insl
lods
das
int
adc
shl
adc
push
adc
ss
testb
or
push
xchg
repz
mov
imul
je
hlt
push
movsl
mov
xor
stos
adc
mov
cltd
pop
in
mov
jnp
jge
out
cmp
mov
jo
cmpsb
notb
push
lods
sub
fildll
fiadds
sahf
test
cmpsb
sbb
enter
mov
or
lahf
data16
test
sub
std
add
jge
jb
test
fbld
sbb
mov
xchg
or
jo
and
jno
loope
xor
cwtl
repnz
jns
mov
fmul
push
icebp
jmp
outsl
sbb
push
inc
push
sbb
lods
insb
xchg
xchg
jne
sbb
dec
cmovs
and
call
rcr
clc
sbb
push
adc
fcom
add
sarb
pop
dec
ljmp
or
xor
stc
icebp
rcrb
cltd
mov
pop
dec
out
pop
lret
out
insl
sbb
push
sbb
cli
push
mov
popa
push
icebp
lret
push
rcl
bound
rclb
stc
mov
out
call
scas
jb
gs
insl
push
sbb
mov
pop
mov
sub
mov
fdivl
or
out
int
xchg
call
not
test
std
push
cwtl
or
mov
mov
movsl
and
jmp
mov
cmp
cmpsb
cmpsl
mov
and
fsub
jno
pmulhuw
fisubl
sub
fcompl
push
popl
mov
mov
mov
xorl
push
pop
xchg
pop
xchg
xchg
mov
push
std
jbe
mov
sbb
lds
filds
stos
xor
lea
inc
leave
out
jle
cwtl
rolb
rcrl
aaa
mov
or
aam
cwtl
add
inc
fwait
and
adc
pop
je
jmp
xchg
sbb
pop
sbb
and
mov
jb
stos
mov
aam
and
cmp
and
aad
dec
xchg
ds
xchg
dec
in
stos
xchg
push
movsl
nop
push
mov
jno
addr16
or
insb
mov
push
ret
jge
pop
stos
or
mov
imul
out
cli
in
push
inc
pop
sub
mov
addr16
cvttps2pi
push
mull
sub
pop
imul
or
popf
mov
pop
and
jae
push
into
loop
cmpsl
jnp
scas
cli
xor
fiaddl
mov
push
cmpl
mov
xchg
cmpsb
fucomi
cmp
push
pop
cmp
and
and
dec
inc
ja
xchg
mov
dec
dec
movsb
push
jno
add
mov
cs
and
push
leave
push
inc
enter
add
cmp
ret
mov
mov
popa
out
push
jl
push
mov
or
outsl
int
out
ret
cmp
pop
jbe
pop
and
xor
je
sub
inc
rol
inc
pop
jo
push
insl
push
in
stos
xor
data16
sti
mov
push
adc
inc
adc
or
mov
inc
fcoms
lret
in
inc
aaa
fistps
mov
lds
imul
add
in
jne
mov
jecxz
out
mov
and
popa
test
inc
hlt
fld
jo
add
movsb
pushf
out
mov
aas
cmp
in
cmp
or
and
je
fistpll
outsb
pop
cmpl
inc
mov
je
adc
test
mov
and
out
sar
mov
xchg
std
hlt
adc
testl
push
mov
sub
push
aaa
stc
dec
jnp
ja
loop
xchg
out
inc
outsl
pop
pushf
daa
mov
fists
xchg
imul
push
mov
mov
icebp
add
pusha
inc
rcrl
loop
pop
mov
mov
push
cmp
vfnmsub213ss
nop
test
lret
pop
divl
jns
cmp
mov
repnz
inc
sub
sbb
or
or
sbb
xor
or
mov
jo
popf
les
call
cmp
je
push
icebp
cs
xorb
jns
xchg
sub
mov
and
lock
test
scas
or
inc
pop
and
mov
jns
adc
jno
xor
xchg
xchg
sbbl
dec
mov
ja
ss
repnz
rorb
lcall
dec
mov
das
aam
pop
int
adc
cmp
fwait
mov
sbb
sahf
jl
xchg
in
sbb
dec
dec
dec
subb
cmpsb
adc
repz
pushf
pop
inc
rclb
cld
and
popa
dec
xchg
imul
aas
add
pop
test
push
fidivs
and
cltd
add
inc
sbb
lock
aad
mov
jne
inc
rorl
cmp
fstps
imul
or
insl
loop
mov
xor
icebp
add
icebp
mov
xor
cwtl
jl
add
cmp
and
iret
repz
sbb
pusha
jp
and
jns
fisubl
outsl
dec
push
pop
pusha
out
mov
scas
or
xchg
in
push
cs
lock
ret
cld
mov
cmp
iret
add
aad
pop
jne
push
mov
xchg
inc
insb
cmp
dec
loopne
and
aaa
cwtl
jae
mov
cmpsl
mov
dec
inc
loope
mov
mov
or
jb
adc
jno
out
pop
addb
cld
jge
xlat
and
fisttpll
push
or
mov
ja
sub
push
sahf
push
push
sbb
leave
repnz
mov
and
or
push
xorb
add
fcompl
fistl
fistl
jle
or
mov
fisubrs
rcrl
data16
mov
dec
in
or
fistpl
add
pop
call
pop
imul
or
fs
imulb
pop
cmpsl
out
mov
cli
sbb
cli
enter
insl
push
mov
in
cmc
push
mov
sbb
popf
jo
inc
pop
lods
fdivr
mov
aas
movsl
into
pushf
mov
int
mov
pop
imul
adc
imul
lods
adcb
mov
mov
lcall
jb
into
stos
mov
out
in
stos
jns
js
dec
enter
cmp
movsl
ja
pop
dec
sti
in
and
mov
add
xchg
sub
sahf
dec
pop
ljmp
mov
mov
xchg
cmp
int
fldt
inc
push
dec
sub
cmp
aad
lods
sub
push
push
xor
jle
leave
mov
mov
das
fdivp
sbb
dec
nop
pop
insb
test
movsb
lock
pop
sbb
dec
pushf
test
into
pushl
push
jle
pop
jp
jb
in
push
mov
xchg
ret
xor
pop
inc
mov
cmpsl
jae
out
pop
inc
cmp
pop
jae
daa
ucomiss
andb
sbb
xchg
jnp
faddp
mov
jmp
sbb
daa
push
popa
das
xchg
mov
lock
lret
pop
jae
addr16
notb
cmc
jmp
sub
push
or
inc
inc
push
aaa
stos
notb
dec
and
lock
mov
dec
and
xor
jp
dec
imulb
sbb
xor
xor
jge
mov
fbld
and
inc
decl
enter
inc
fistpl
stos
int
and
xlat
aam
jle
rorb
push
xor
mov
adc
mov
fsubrl
in
imul
inc
imul
mov
notl
jge
mov
mov
cmp
cli
fstps
mov
adc
mov
popf
add
es
or
je
mov
pop
mov
aam
and
or
jp
insb
icebp
mov
jge
jecxz
mov
pop
jbe
mov
inc
insl
inc
cmp
cmp
mov
mov
jnp
adc
iret
xchg
inc
subb
dec
and
mov
inc
int3
push
or
mov
cmp
xchg
shrb
shlb
in
sbb
in
push
cmp
pop
sar
mov
dec
jne
mov
mov
out
dec
movsl
dec
stos
jno
enter
adc
fwait
jge
arpl
mov
sbb
adc
adc
enter
sub
test
jo
fwait
adc
enter
hlt
and
dec
and
sub
out
test
jle
mov
js
in
mov
popf
sbb
jb
push
sub
sbb
loope
xchg
dec
and
test
cld
mov
sub
sub
in
push
cmp
xchg
stos
push
ds
pushf
sbb
loop
xor
lret
scas
cmp
mov
iret
imul
adc
in
call
jle
dec
cmp
nop
mov
mov
mov
sub
leave
jnp
stc
dec
repnz
push
loop
fs
imul
mov
psrlw
sub
dec
adc
lret
pop
add
imul
xchg
sub
jle
fstpt
dec
pop
mov
mov
pop
mov
imul
inc
or
sbb
pusha
jnp
jo
ffreep
orb
iret
xorl
mov
add
iret
jge
dec
cmp
mov
stc
push
arpl
mov
and
das
scas
mov
ds
mov
pop
or
popa
out
dec
inc
aad
adc
cltd
inc
dec
test
cmp
mov
or
outsb
dec
movsb
call
gs
cmpsb
push
adcl
in
xor
inc
je
stos
les
call
push
adc
dec
lret
push
sub
js
jne
in
fcmovu
fistps
cwtl
push
filds
or
xchg
mov
pandn
mov
jge
mov
insl
pop
stc
push
out
cmc
shll
int
sub
stos
jge
test
addr16
fs
das
or
mov
and
leave
cmc
or
cld
cli
push
out
int
enter
push
daa
rolb
adc
dec
jecxz
push
and
adc
push
mov
imulb
scas
jbe
std
add
adc
ficoml
je
dec
inc
jnp
cmp
mov
fsubs
sbb
je
outsw
rcll
push
jl
jle
aas
fdivr
aam
out
ss
fstpl
cmpsb
xchg
push
jle
fdivrl
push
push
ffreep
or
addr16
aaa
dec
sub
cli
sahf
xchg
in
fwait
push
or
lcall
sub
lods
push
clc
mov
call
mov
mov
mov
cmp
das
mov
mov
cmp
fistl
sti
xor
sbbb
pushf
mov
inc
ljmp
hlt
dec
arpl
xchg
subl
stc
into
fldcw
mov
out
sbb
imul
push
subb
aaa
orb
inc
fistps
add
leave
and
xor
adc
cmp
push
jne,pt
popf
jg
jbe
mov
adc
dec
addl
fs
insb
mov
icebp
jbe
cmp
dec
ds
mov
xchg
lods
mov
push
pop
icebp
jle
inc
jbe
popa
les
sbb
cmp
pop
inc
mov
mov
loop
add
sub
or
sub
pop
push
add
jae
dec
inc
stos
inc
cmp
push
sbb
sbb
cmp
aaa
sbb
jae
subb
fidivl
cmp
jl
push
sbb
iret
notl
faddl
push
mov
cmp
lret
hlt
mov
sub
ljmp
xchg
mov
mov
add
and
add
int3
sbb
insl
hlt
adc
inc
mov
mov
xchg
mov
xor
sarl
lcall
push
lcall
jbe
push
int3
and
jno
imul
dec
or
mov
sti
lret
mov
jnp
mov
cmc
mov
aad
dec
scas
push
mov
add
add
aad
xor
shll
nop
data16
lea
loope
pop
or
enter
xor
into
adcl
sbb
fstps
fists
cld
pop
ficomps
hlt
pop
and
or
rclb
repz
mov
in
add
xchg
sub
fldcw
mov
push
je
pop
icebp
xor
pop
mov
movsl
mov
movsl
movsb
mov
pusha
xlat
das
push
popa
xchg
pop
ss
mov
ret
shll
mov
add
add
hlt
mov
popf
mov
movsb
leave
xor
sbbb
adc
mov
mov
xchg
loopne
sti
sti
je
add
lret
orl
xor
shrb
inc
xor
mov
and
push
inc
mov
ror
jp
cmp
cltd
stos
cmpsl
mov
adc
data16
or
adc
xor
mov
pushf
mov
xchg
sub
mov
std
jge
repz
jg
testb
cmp
repnz
sbb
outsl
inc
les
unpcklps
pop
out
ror
int
andb
jae
dec
in
mov
mov
dec
lods
out
frstor
ljmp
icebp
std
push
mov
enter
bound
jecxz
dec
xchg
scas
scas
loop
stc
xorb
xchg
mov
fwait
outsl
leave
cwtl
or
inc
mov
leave
xlat
push
and
pushf
out
aam
and
and
ljmp
add
jge
out
xchg
push
cld
and
mov
xchg
lods
fdivrl
pop
das
push
pop
movsl
xchg
push
mov
pop
push
cmp
xlat
loopne
adcl
ret
mov
add
mov
jns
mov
push
cmp
sbbl
ret
jbe
cmp
stos
and
xchg
sti
repz
in
icebp
jp
mov
popl
add
cmp
or
xlat
inc
mov
mov
out
lods
cmpsb
and
rclb
mov
pop
fadds
in
and
and
call
xlat
jbe
in
ds
loop
std
xor
stc
mov
cmp
xchg
out
sub
data16
mov
mov
push
xor
bound
loope
pop
call
aam
pop
dec
sbb
inc
iret
rcrl
imul
xor
xchg
mov
fistpll
lea
in
cvtpi2ps
mov
mov
cmpsl
es
enter
pushf
mov
sti
mov
mov
jbe
xor
sub
xor
pop
or
cwtl
negl
or
sub
out
or
add
push
push
push
stc
mov
cs
mov
push
pop
inc
stc
jl
jne
push
int3
sbb
call
pop
std
dec
rcrl
and
xchg
push
cmp
or
push
adcl
inc
and
lods
dec
sarb
mov
test
sub
aad
cmpsb
dec
shlb
xor
test
xor
ss
mov
mov
hlt
dec
adc
xor
cmp
test
into
fcmovb
aam
and
fnstcw
mov
sarl
fs
pop
pop
popf
push
mov
push
rolb
dec
or
loop
cmp
add
cmp
mov
add
mov
dec
mov
push
sub
add
push
cmp
jg
popa
dec
je
pop
jbe
test
mov
jo
sbb
push
idivl
lods
or
pop
inc
and
mov
xchg
pop
cmc
jg
jl
je
or
jne
jbe
ret
jae
cmp
clc
jg
loope
add
mov
out
lahf
dec
push
sbb
mov
lcall
mov
add
pop
cli
movsb
fisttps
xchg
push
ror
movsb
mov
popa
xchg
int
sub
mov
dec
arpl
xor
push
lret
push
jecxz
dec
push
push
xor
mov
in
cld
testl
in
jb
shld
cmp
push
pop
sarl
jp
insb
ret
dec
fimull
lret
imull
cmp
imul
sub
jo
or
mov
xchg
stc
cwtl
xchg
das
in
dec
fs
insb
pop
push
sub
mov
pop
insl
cmp
pop
sahf
dec
popa
scas
enter
pop
mov
ret
xchg
in
adc
cmp
lock
jo
mov
push
sub
mov
push
ss
adc
stos
shlb
imul
and
pop
xchg
cmp
lea
icebp
sbb
das
push
movsb
push
out
dec
pop
cmp
sub
mov
arpl
movsb
mov
iret
add
dec
mov
stos
push
cli
push
andl
inc
in
mov
xor
test
divb
push
jns
clc
jle
mov
jl
push
jae
cli
movsl
and
movsl
insl
out
lock
rolb
mov
jo
test
daa
mov
fisttpll
sar
ror
sub
outsb
xchg
test
cltd
mov
gs
xor
and
xor
stc
jo
sub
insl
sahf
fcoml
push
and
out
sub
daa
jl
bound
packssdw
scas
aaa
out
dec
dec
dec
xor
adc
shlb
push
sbb
and
popf
or
jns
lods
movsw
jp
inc
inc
fdivs
adc
xchg
lret
shl
cltd
mov
clc
shl
loop
pop
cltd
mov
aam
cmp
push
mov
jb
pop
cmp
stos
rol
sbb
faddp
mov
sub
movb
aaa
or
rorl
cmp
aaa
sbb
in
and
cld
pop
sahf
jo
loop
xchg
dec
dec
mov
jmp
sub
pop
cld
data16
adc
cwtl
andl
jb
loope
or
into
enter
jge
cmp
pop
pushf
pop
add
divl
inc
push
adc
sahf
lahf
and
fwait
lcall
adc
dec
shll
inc
inc
xchg
jl
jl
sbb
xor
lret
repz
fnop
or
lock
cmp
fdivrl
adc
and
sub
xorb
fcompl
xchg
add
aam
and
aas
movsb
pop
int
mov
xlat
adc
mov
jp
gs
ret
dec
fwait
mov
popf
rol
push
adc
in
adc
int3
test
pusha
sbb
insb
or
cmp
icebp
les
jmp
aam
std
movups
ljmp
out
and
addb
mov
scas
popa
pop
or
rcl
pop
mov
rcrb
lret
xor
mov
cmc
jae
xor
or
test
dec
std
sahf
repz
push
sbb
inc
jp
pop
adc
mov
jbe
mov
stos
lds
fidivrl
xchg
dec
in
push
cmp
push
pop
xchg
adc
mov
in
aas
mov
inc
mov
sar
repnz
rcrl
and
push
mov
dec
and
push
jo
test
enter
or
push
in
or
mov
jae
add
mov
sti
stos
xlat
ficompl
jl
pop
and
xor
icebp
aas
es
jmp
fiadds
cli
sarb
add
sarl
ljmp
enter
call
imul
xchg
push
xchg
jecxz
xor
leave
lahf
rcrb
mov
rclb
dec
pop
xor
jecxz
sahf
arpl
mov
jg
push
or
das
cmc
adc
push
std
pop
jbe
fcmovnbe
pop
lods
adc
pop
push
push
adc
and
das
jmp
inc
cmpsl
cmp
out
testb
out
test
mov
aaa
sbb
pop
fcom
test
ret
sar
pop
fidivrs
loop
sub
xchg
loopne
clc
lods
cmc
sahf
ss
imul
cmpsb
mov
data16
sar
movsl
add
jnp
int3
rcr
dec
pop
xchg
xor
cmpsb
inc
cmp
testb
pushf
pusha
cmpsl
xor
dec
mov
mov
jmp
or
aad
fnstenv
clc
inc
xchg
int3
inc
cmpb
xor
sahf
vminps
xchg
jne
mov
ja
aam
mov
jbe
mov
mov
repnz
stc
int
movhps
stos
mov
fnstcw
jl
mov
outsl
dec
inc
aas
jmp
add
pop
mov
xchg
gs
cmp
jns
dec
movsl
subb
aaa
add
sbbb
xor
aam
mov
xor
stos
jo
in
cli
push
mov
sbb
lods
je
pop
lea
push
out
divl
xchg
xchg
ds
stos
cmpb
add
push
sub
rorl
jg
out
mov
jle
pop
rcr
ss
pop
lea
xor
cmpsb
xchg
daa
int
es
dec
dec
popf
in
fucomi
clc
sub
aaa
inc
loop
add
addr16
test
cmp
ret
jle
or
out
in
and
pop
mov
fstl
sub
ja
fcmovne
es
pop
fs
fcmovnu
ja
daa
in
push
dec
dec
sub
dec
push
out
sbb
sub
xlat
orb
cld
in
out
in
out
dec
cld
xchg
jbe
mov
in
jecxz
push
sbb
pop
andl
add
cmp
shlb
mov
jle
jmp
cltd
and
xchg
sbb
lea
mov
into
movsl
test
jbe
add
jnp
push
call
popa
out
or
inc
lds
lahf
fisubs
sbb
xor
fdiv
adc
mov
orl
mov
xchg
lcall
aam
pop
mov
dec
mov
gs
or
mov
imul
xor
lcall
xchg
adc
stc
scas
cmc
xor
mov
mov
lcall
stos
movsl
dec
hlt
push
fsts
scas
fcmovnb
hlt
dec
mov
mov
test
sbb
fldt
xchg
xor
rolb
dec
mov
mov
push
arpl
jne
pop
pop
cmp
dec
push
pop
mov
add
stc
fdivl
xor
pop
dec
pop
mov
xchg
mov
dec
insl
in
mov
sub
or
jo
gs
mov
inc
aam
pop
add
aad
in
dec
jno
shll
fxch
mov
mov
cmpsb
xchg
dec
cmc
jb
movb
adc
dec
mov
es
shr
shl
sub
sub
sbb
hlt
out
pushf
cmp
fistpl
jle
dec
push
push
pusha
jge
ljmp
mov
sar
shll
sbb
add
sbb
movnti
js
in
aaa
scas
aaa
bound
fiaddl
shrb
outsl
shl
not
out
and
sbb
ret
cmp
imul
cmp
add
aam
push
ret
insl
sub
push
and
and
dec
fmull
fiaddl
lods
rcl
dec
push
mov
lods
scas
adc
inc
or
inc
popf
pop
jg
stos
fimuls
aas
xor
inc
fs
mov
nop
jl
int
gs
repnz
negl
push
cmc
mov
jg
xor
movsl
cmc
pop
jp
or
aaa
or
into
and
insl
aaa
aad
jne
mov
jbe
lahf
ljmp
mov
jl
loop
dec
cmp
call
xchg
jge
push
loope
shlb
sub
mov
push
int
pop
xor
sub
pushf
imul
dec
and
loope
stos
push
lahf
jle
xchg
sbb
mov
mov
jg
sub
fadd
shlb
adcb
mov
sub
add
mov
int3
jp
or
adc
mov
sbb
mov
sbb
subb
pop
gs
dec
dec
add
dec
ret
mov
sbb
lods
push
mov
les
clc
and
movsb
iret
jns
dec
jecxz
inc
leave
lods
pop
sub
mov
and
xor
repnz
xchg
sbb
xchg
or
iret
loope
push
dec
sub
or
leave
ret
pop
mov
loope
fists
test
adc
sbb
mov
sub
repnz
adc
pop
lods
push
jmp
movsb
popa
cmp
lds
and
in
xchg
xor
ficomps
mov
arpl
in
jnp
sbb
js
in
dec
push
and
mov
push
and
mov
pop
jmp
mov
aam
jae
lea
push
mov
pushf
xchg
out
add
insl
sbb
test
adc
cmp
inc
in
push
sti
xor
movsl
pusha
dec
mov
jl
data16
add
and
aam
leave
enter
or
mov
loop
pop
test
mov
push
sarb
push
xor
cld
jg
negb
insl
pop
dec
jns
mov
push
sbb
lahf
out
or
popa
push
pop
popa
mov
fsubp
mov
xchg
pop
cmp
add
push
mov
or
push
clc
xchg
es
nop
insb
xchg
inc
call
in
iret
adc
cld
cmp
mov
sbb
out
repz
lret
jge
dec
or
imulb
pop
lret
xlat
jmp
dec
je
sbb
push
mov
popa
mov
sub
fidivs
pop
cltd
pop
lret
movsl
jmp
fcoms
add
lds
pop
enter
sbb
outsl
jbe
dec
xor
es
mov
dec
xor
cmpsb
sub
dec
mov
dec
mov
xor
cmp
out
dec
cmp
popa
push
in
mov
scas
jmp
cmp
or
jge
sbb
mov
in
scas
add
jmp
jmp
mov
dec
jl
psllw
hlt
xor
shrb
loop
mov
sub
cmp
mov
out
nop
mov
test
sti
repnz
mov
cwtl
or
mov
roll
push
test
fdivrl
lea
pop
sbb
pop
or
mov
leave
mov
inc
and
mov
sub
movsb
cltd
adc
pushf
ds
rcr
mov
call
jno
mov
int
inc
movsl
cli
je
mov
rol
mov
xor
pop
pop
fistpl
push
rclb
shll
ret
icebp
andl
dec
dec
iret
cmp
and
xchg
cmp
cmp
inc
sub
dec
in
les
adc
sub
cld
mov
loop
push
repz
mov
push
mov
xchg
xor
lcall
dec
mov
mov
adc
fidivs
and
std
xchg
cld
insl
jns
rcr
fwait
ud1
sbb
int3
adc
adc
inc
insb
or
in
stos
mov
shlb
popl
jmp
dec
aad
push
outsb
push
and
je
mov
push
lock
andl
mov
push
ljmp
andb
out
int
mov
and
push
jecxz
sub
js
pop
lods
in
fstpt
cmc
pop
xchg
cltd
lcall
xor
pop
xchg
inc
out
repnz
adcl
sahf
or
inc
mov
push
test
mov
push
or
ljmp
movnti
decl
dec
stos
xchg
xor
cmp
pop
push
inc
in
out
pop
push
int3
pop
mov
pop
cmp
lret
inc
or
jne
je
xor
mov
std
inc
xchg
lea
jecxz
fcomi
or
inc
rcl
cmp
sub
fisubrl
mov
fdivrl
mov
jmp
loopne
pop
jge
ja
ret
mov
fadd
jg
jns
test
add
pop
add
notb
sbb
es
lret
lret
sbb
sbb
fwait
aas
and
jae
test
dec
cmpsb
test
xchg
push
movsb
mov
jle
das
inc
ss
fdivrl
imul
jb
or
cmp
sbb
stos
hlt
insb
js
ret
iret
pop
mov
and
jecxz
adc
jo
add
out
mov
mov
repz
or
out
mov
sbb
insl
movsb
cmp
push
gs
jo
and
jbe
and
push
ret
pop
dec
scas
rcrl
jp
push
sbbl
jmp
inc
js
mov
inc
xchg
adc
lahf
mov
mov
mov
adc
mov
js
mov
aaa
adc
push
andl
call
notl
push
push
xorl
push
andl
call
sbb
movl
movl
mov
mov
inc
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
mov
add
mov
sbb
mov
test
movl
je
movzwl
sub
mov
movl
mov
mov
mov
xor
imul
mov
mov
sub
and
mov
add
xchg
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
mov
jnp
mov
sbb
fwait
cmpsl
outsb
cmp
jp
bound
inc
dec
ret
fists
adc
inc
push
fsts
scas
mov
repz
mov
cmp
dec
xchg
fimuls
jne
movsl
ret
adc
lret
xchg
and
les
add
push
adc
cmp
cwtl
sarl
push
cltd
ret
xor
sahf
iret
es
pusha
inc
xor
inc
xor
les
jmp
dec
adcb
sub
decl
cmp
xchg
or
icebp
xchg
mov
xor
sub
mov
cmp
push
and
inc
lods
arpl
push
cmp
leave
adc
pop
and
xchg
std
movl
outsl
aam
outsl
or
cmp
std
aam
addr16
pop
push
data16
in
cwtl
clc
push
jg
xchg
jp
les
nop
push
dec
popa
outsl
lock
jae
cmp
sbb
leave
fsubrs
xchg
add
aam
icebp
enter
jne
pop
and
jns
fldcw
xlat
dec
ljmp
jns
fsubl
sub
push
clc
or
popf
pop
jmp
mov
and
adc
add
add
aaa
ret
mov
in
sbb
lods
pop
sub
jp
push
cli
ja
xchg
xrelease
or
out
mov
mov
ljmp
sbb
dec
inc
inc
int
stc
incl
mov
aas
lcall
mov
rcrb
mov
cld
cmp
jae
and
movsb
outsb
aaa
mov
filds
mov
jp
mov
out
xchg
incb
xchg
cli
lea
shl
test
mov
out
pop
mov
jmp
or
mov
int3
xor
add
ss
pop
hlt
adcb
cmp
in
mov
stos
mov
aad
mov
mov
rcr
cwtl
pop
jp
fwait
into
mov
psubb
loopne
enter
xchg
loop
jmp
adc
and
arpl
movsl
cmpsl
mov
ja
nop
pop
inc
inc
or
xor
scas
loop
out
jns
sbb
rclb
mov
sbb
pop
jmp
and
movsl
cmp
sbb
dec
outsl
mov
hlt
pop
clc
sbb
adc
in
loopne
mov
sbb
mov
fincstp
jo
inc
das
popa
adc
scas
cmp
mov
out
adc
adc
mov
test
mov
iret
inc
andl
jp
xchg
pop
jecxz
inc
movsl
xchg
xor
push
adc
xorl
fwait
xchg
je
repz
or
mov
inc
push
add
ret
mov
add
mov
xchg
fstps
and
inc
movsb
fists
subb
cmpsl
fimuls
push
les
add
mov
pop
adc
jbe
inc
xor
ret
jo
icebp
sub
negb
outsl
lret
das
sub
fsubl
jle
mov
fiaddl
push
call
inc
pop
push
iret
push
test
and
das
ds
lds
sbb
inc
or
or
mov
cs
push
icebp
iret
mov
sbb
jmp
loopne
fildll
bound
xchg
and
pushf
je
dec
mov
mov
pop
dec
xchg
adc
jnp
dec
mov
dec
xchg
inc
or
jp
mov
cwtl
mov
cs
jle
imul
mov
fildl
popf
flds
xchg
and
adc
out
jbe
adc
cmc
das
sbb
pop
in
and
sti
mov
add
ss
pop
mov
mov
int
fdiv
cmc
loopne
out
mov
rclb
stc
inc
inc
test
jmp
pop
lahf
cld
inc
jp
adc
pop
mov
dec
xchg
mov
gs
pop
fidivs
roll
negl
sbb
stc
fstpt
pop
sub
rol
mov
filds
cmp
xorb
aad
and
idivl
aas
dec
inc
jno
xchg
dec
in
inc
xchg
xor
pop
scas
fwait
push
and
es
jg
xorb
xchg
cld
pop
out
insb
mov
dec
pop
jl
sbb
mov
outsb
xchg
mov
sbb
lods
inc
fcomi
sub
je
adc
inc
xor
aam
xor
movsl
test
adc
inc
jp
push
aas
or
bsr
push
xchg
popa
lock
data16
pop
mov
and
cmp
mov
int
popf
pop
pop
fcmovu
aaa
test
mov
xor
int
sti
jae
add
mov
pop
xor
dec
dec
jne
sub
addb
jl
into
jae
add
in
into
subl
jle
int3
mov
aad
shl
mov
and
mov
rclb
leave
pop
pop
push
jecxz
out
addr16
imul
sub
adc
or
lcall
in
add
pop
jnp
mov
add
xor
sti
rcl
jns
in
xorl
dec
popf
clc
mov
es
insl
mov
sbb
xchg
adc
and
cmp
pop
addr16
bound
fs
fwait
mov
mov
jl
sbb
push
xchg
xchg
mov
loop
addr16
mov
orl
in
sbbl
or
enter
xlat
mov
sbbb
cmp
inc
cmp
mov
or
dec
push
sbb
mov
jl
lods
shrl
cwtl
cwtl
push
out
mov
jae
cli
inc
popf
or
idivb
dec
cltd
push
icebp
test
ret
cs
sub
push
scas
fnstcw
adc
mov
lret
dec
push
scas
inc
mov
shll
lds
test
inc
movsl
and
insb
xchg
inc
cmp
fisubs
js
cmp
add
mov
pop
push
jg
and
cwtl
mov
push
sub
xchg
mov
cmpsl
push
add
jb
bound
inc
pop
push
mov
pop
pop
test
scas
rcrl
xor
in
push
ror
dec
jg
div
iret
test
sbb
insb
std
or
ja
bound
jns
and
push
or
xchg
push
loope
gs
bound
mov
icebp
out
xor
push
mov
pop
rcrl
and
add
mov
pop
std
mov
push
jae
cld
imul
loope
mov
dec
xorb
inc
add
rcll
xor
movsb
mov
inc
cld
cmp
mov
pop
push
fbstp
xor
rorb
shll
repz
addb
mov
ja
call
outsb
push
outsl
or
xchg
inc
or
mov
mov
dec
push
ja
dec
add
xor
xchg
jo
and
push
mov
mov
rcrb
xchg
or
push
cmpsb
js
inc
test
inc
inc
in
mov
jmp
mov
pop
scas
repnz
test
int3
aam
mov
loope
jle
repz
mov
mov
xchg
mov
or
movsb
mov
mov
ret
jg
insl
sub
xor
push
dec
and
stos
dec
stc
push
jns
dec
jl
xor
dec
xchg
lret
xchg
adc
or
dec
stos
fildll
loopne
sbb
repz
jns
or
scas
cld
ljmp
adc
aad
loop
pop
xchg
mov
jae
arpl
mov
jno
add
jne
out
xchg
movsl
push
dec
inc
iret
sub
hlt
mov
leave
lods
hlt
adc
and
push
adc
scas
add
inc
imul
stos
sbb
out
flds
les
mov
jns
mov
pop
ss
mov
sub
lret
mov
lods
int
loope
mov
push
das
mov
pop
test
xchg
inc
jecxz
pop
inc
hlt
pop
pusha
xchg
inc
cmp
sub
xchg
mov
add
out
out
gs
pop
cmc
fisttpll
push
xchg
or
and
mov
inc
daa
and
mov
int3
mov
sub
not
in
push
cmp
or
movsb
sti
repz
or
jle
mov
movsl
sti
stc
add
out
sbb
xlat
movsl
mov
mov
jmp
and
lods
outsl
adc
push
test
int
push
dec
pop
or
outsb
push
xlat
pop
aam
pusha
int3
cltd
movsl
sbb
je
mov
ss
jle
hlt
nop
pop
push
cwtl
xor
mov
jno
jmp
push
loop
loope
jl
js
sbb
hlt
sub
lret
hlt
aaa
pop
popf
es
scas
arpl
sarl
cmp
jno
popf
cmp
aam
daa
mov
pop
lahf
mov
sti
push
dec
js
jno
inc
mov
pop
add
aad
xor
hlt
jl
jae
xchg
mov
cmpsl
out
mov
cmp
xlat
cmpsb
out
adc
sub
mov
shll
xchg
inc
mov
jno
mov
hlt
mov
scas
push
xor
aad
cli
popa
ret
mov
iret
mov
jbe
int3
mov
int
leave
pop
mov
push
pop
sub
adc
mov
test
push
fidivs
pop
push
lds
cmpsl
lods
push
aas
int
jmp
imul
pop
xlat
xor
cmp
pop
enter
cmp
outsb
mov
ja
xor
cld
notb
fisttpll
xor
mov
std
xchg
jmp
jmp
pop
or
push
repz
mov
jle
mov
mov
and
and
sbbl
xor
test
shlb
mov
nop
das
imul
mov
xor
and
or
jnp
gs
int3
push
inc
sti
divl
stc
aad
clc
imul
jg
cmc
pop
xlat
stos
mov
fsubp
xchg
mov
fwait
jl
jge
out
cmp
out
mov
mov
pop
aad
fcomps
pop
fs
aam
testl
in
inc
subb
adc
mov
sub
shll
pusha
call
orl
cmp
lret
out
call
jge
push
jbe
testb
mov
cmp
test
dec
mov
or
add
shll
std
test
cmc
aad
bound
sub
mov
jge
xor
inc
pop
cmc
dec
movsb
ss
mov
pop
lcall
dec
pop
mov
mov
pop
fptan
xor
fstl
rcr
add
add
ret
push
jge
sti
aas
lret
shl
sbb
stos
push
in
and
xor
outsb
xor
jne
mov
mov
xor
aas
jb
imul
fcmovnu
daa
mov
push
adc
lret
jne
add
pop
int3
cmp
pop
push
cld
mov
mov
addr16
pushf
std
or
push
jmp
mov
lret
push
rclb
xchg
cmpsl
sbb
pop
ds
dec
int3
jne
mov
fidivrl
push
scas
jo
cmp
cli
rclb
ds
sub
xorl
sub
jmp
negb
mov
or
or
aas
mov
xchg
fsts
enter
dec
cmp
inc
jmp
push
inc
pop
imul
xchg
mov
fstpt
and
add
in
test
or
mov
inc
xor
xor
pop
adc
lret
lods
aaa
dec
mov
cmp
es
daa
dec
push
lock
cmp
or
xchg
dec
clc
mov
push
ret
and
imul
mov
xor
sbb
pop
mov
sbb
in
dec
mov
cli
mov
sub
push
inc
push
sbbl
rcrb
sub
cmp
hlt
test
adc
insl
jle
inc
cmp
pop
xchg
push
aas
test
cmp
mov
xor
loope
rolb
loopne
or
leave
js
mov
sub
adc
mov
addl
bound
sbb
les
push
dec
frstor
mov
adc
xor
and
dec
loopne
jno
xor
or
das
mov
mov
inc
arpl
test
jae
pop
fs
mov
popf
or
adc
pop
dec
test
test
aam
fimuls
movsl
loopne
cltd
cmp
mov
dec
push
lock
mov
inc
test
jae
cld
sub
push
pop
lcall
inc
enter
xor
in
cmpsb
push
jae
ficomps
dec
clc
inc
fwait
in
popa
sub
xlat
test
test
mov
mov
and
inc
push
mov
pusha
or
jmp
inc
aad
scas
call
ret
jge
or
push
mov
cld
setnp
clc
adc
mov
and
repnz
movsl
test
and
shlb
add
lds
xchg
std
fwait
pop
pop
out
push
jo
add
stc
pusha
mov
paddusw
aas
push
jge
mov
sub
or
inc
push
icebp
pop
inc
jg
iret
sbb
lahf
cld
push
test
jp
dec
xchg
xchg
lahf
rcrl
inc
frstor
jecxz
lcall
mov
push
pop
cmpsl
adc
jp
pusha
add
addl
cmp
pop
les
cmp
push
movsl
pop
adc
jp
xor
mov
lods
sbb
pop
sbb
enter
mov
fstpl
push
nop
scas
outsb
mov
faddl
inc
fnstenv
jmp
inc
aam
ret
xchg
sti
jl
in
outsl
test
adc
std
mov
out
les
cmpsl
stos
push
pop
push
out
jmp
es
div
pop
xchg
je
push
push
frstor
int
fimuls
js
aam
xchg
mov
hlt
andl
cltd
xor
sub
cmp
ja
lock
cmpsb
pop
or
jns
out
or
mov
xchg
dec
jbe
jmp
ret
rcrl
jmp
loop
inc
in
jmp
add
add
xchg
ljmp
cmp
sub
xor
jno
imul
outsl
mov
ret
repz
cmpsl
adc
sahf
jne
lods
dec
mov
fadd
fwait
dec
cs
push
xor
subl
cs
insb
push
push
add
in
daa
xchg
add
push
pop
push
daa
sbb
and
pop
and
cmp
fs
shlb
add
stos
jl
pushl
movsb
popw
lcall
push
and
scas
push
cmp
add
push
insl
sarb
ja
dec
ret
jbe
push
or
add
movsl
lods
and
fiaddl
mov
cmp
fdivrs
int3
pop
cmpsb
pop
and
inc
pop
cmpsb
sub
mov
sub
aad
aas
lods
jbe
sti
iret
xor
lds
adc
xor
adc
clc
je
bound
or
icebp
mov
aam
mov
inc
mov
dec
cmpl
xchg
mov
jl
rolb
and
lock
popa
cmp
or
call
adc
cwtl
pop
hlt
lret
xor
popf
cltd
dec
push
inc
dec
xchg
imull
fneni(8087
push
mov
lret
or
decb
or
iret
test
xlat
ds
jp
int3
pop
push
hlt
shlb
in
pop
clc
add
ja
insl
lret
ljmp
inc
insb
mov
push
adc
cmp
icebp
lea
lds
xchg
out
cwtl
sti
push
xor
je
adc
jp
push
in
fcoms
bound
fbstp
daa
pop
adc
pusha
inc
sub
shlb
loope
imul
adc
into
xchg
mov
xor
pop
pop
fbld
push
jns
mov
cltd
jecxz
xchg
or
add
pop
jbe
movsl
cmpsl
cld
sti
rcrw
insb
bound
repz
xchg
lods
insl
arpl
scas
xor
inc
movsl
cwtl
inc
shlb
dec
aam
lea
mov
sbb
ret
jmp
add
andl
push
sarb
ja
outsb
xor
in
jl
adc
rorb
lds
scas
and
add
fcmovbe
addr16
xor
cmpb
inc
push
lock
pop
shlb
jo
mov
aaa
pushf
adc
push
cmpsl
aad
nop
and
add
jbe
push
sbbb
ljmp
pop
shll
mov
leave
push
insl
sub
stos
shlb
movsl
inc
lcall
xchg
add
sahf
dec
popa
xchg
imul
sarb
cmp
jecxz
jbe
sahf
pop
int
mov
inc
in
in
inc
jbe
ret
inc
insb
or
jns
jno
mov
insl
das
mov
ret
sahf
or
mov
daa
xor
ds
lret
cmp
mov
fisubs
xchg
jns
popa
jno
jne
push
mov
call
cld
sbb
icebp
push
cli
cmp
and
js
lock
jle
fld
cltd
fwait
adc
hlt
cltd
mov
cltd
pop
movsb
lds
push
in
popf
xlat
dec
push
sub
push
inc
mov
xor
or
push
sbb
icebp
jo
mov
push
pop
lock
jae
dec
push
inc
cmc
xlat
sahf
cmc
das
jno
pop
cmp
stc
inc
xchg
push
imul
inc
pop
xchg
int3
popa
mov
movsb
mov
std
add
dec
dec
call
dec
pop
out
pop
js
pusha
cmpsl
dec
mov
mov
jb
aam
popf
mov
out
dec
popa
xor
dec
wrmsr
ffreep
push
push
pop
push
mov
push
dec
cli
fisttps
rolb
mov
lds
pushf
dec
mov
popa
jb
lea
out
push
outsl
xor
push
or
push
je
aaa
xchg
sub
jns
dec
call
pop
push
aaa
pop
movsl
pop
clc
inc
pop
out
bound
rcrb
mov
push
jle
mov
sub
cmpsb
out
in
ss
or
mov
cmp
out
rcl
adc
inc
mov
rcr
mov
ret
out
push
fstpt
fcmovb
inc
loopne
in
sub
aaa
sbb
jo
mov
and
and
cli
dec
roll
fcomps
out
jg
rorb
shlb
or
bound
lods
cmpsb
addr16
imul
mov
dec
pop
into
add
lret
fisttps
call
push
sub
call
and
ret
flds
mov
fisttpl
shrl
dec
cmc
dec
stos
mov
cld
test
pop
movsl
lcall
test
je
sub
cltd
int3
sahf
test
inc
popa
pop
lods
loop
and
jmp
lret
mov
out
fimull
dec
mov
push
fbstp
dec
rcrl
divl
loopne
outsb
cmp
jge
popf
into
inc
ret
dec
xor
cltd
negb
jmp
add
mov
sbb
push
stc
add
xor
lahf
mov
push
dec
dec
xchg
and
out
dec
ds
xchg
repz
imul
pop
and
or
pop
punpckhdq
add
test
loope
clc
pop
pop
mov
and
mov
cmp
pop
repnz
jb
cmc
adc
outsl
and
lds
push
dec
jl
inc
xchg
dec
lret
and
das
mov
testl
divb
pop
pop
fstp
mov
ljmp
dec
pop
sbb
jnp
clc
lcall
lcall
add
data16
lahf
xlat
daa
push
movsl
rcr
or
cmp
push
arpl
ja
loope
rorl
stc
in
fisttpl
xchg
xor
mov
cwtl
nop
enter
xor
or
fisttps
outsb
add
push
es
addr16
in
and
mov
fisttpll
in
aaa
push
xchg
out
mov
movsl
jl
inc
pop
mov
lods
jp
xchg
inc
scas
cmp
std
add
inc
mov
in
testl
addr16
cmp
mov
cmc
das
pop
jne
and
sbb
sub
fstl
movsb
xchg
aas
orl
out
dec
inc
lahf
movsl
xlat
push
cmp
andl
push
add
sbb
adc
fs
cmp
xlat
dec
lea
aas
xlat
adc
dec
xchg
adc
jmp
fsubrl
pop
fs
ss
pop
adc
into
fdivl
sbbl
mov
int
outsb
push
iret
int
xchg
test
repz
sti
cs
cmp
mov
fidivs
adc
leave
mov
push
xorb
mov
xor
cld
sub
push
and
mov
ret
into
cwtl
hlt
aaa
pusha
icebp
stos
cmp
call
sahf
aad
mov
stc
in
pop
aam
cmp
dec
mov
test
push
xor
sub
ds
xor
sbb
or
mov
test
push
in
insl
xchg
rorb
push
movsl
lods
sbb
dec
aas
aad
pop
cmc
ja
mov
jae
sub
rolb
fidivrs
push
pushw
mov
sub
cmp
sti
sub
inc
data16
sub
out
inc
fdivrs
xchg
push
lret
sbb
inc
outsl
jbe
lcall
xlat
mov
bound
test
mov
inc
outsb
ss
xchg
sahf
loopne
push
sub
dec
dec
pop
cmp
arpl
jle
adc
cmpsl
xchg
mov
jp
arpl
pusha
nop/reserved
jne
add
inc
push
lret
mov
inc
gs
jnp
ds
mul
imul
outsl
cmc
sub
mov
aam
cmp
idiv
xor
and
mov
adc
icebp
outsl
xchg
sbb
inc
dec
adc
mov
imul
daa
mov
pusha
mov
mov
fmuls
add
push
lods
jl
call
js
dec
out
mov
jns
pop
ja
dec
jns
pushf
scas
sub
fsubrp
ret
movsb
and
sarb
fwait
insb
xor
sub
mov
ds
mov
jnp
jecxz
enter
xor
sbb
jle
inc
ja
adc
push
int3
push
in
inc
dec
inc
pusha
je
das
push
mov
adc
cmpsl
dec
test
popa
mov
push
dec
arpl
push
cld
lret
cmpsb
inc
in
push
loop
les
inc
push
movsl
pop
jg
das
mov
js
cmp
test
je
ret
pushf
aas
and
int3
jmp
sub
call
jmp
sbbb
mov
cltd
add
pushf
test
imul
push
jno
and
lods
xchg
mov
sahf
and
mov
roll
xor
clc
test
xchg
imul
in
sbb
mov
cli
xor
push
fists
loope
lea
rclb
adc
cmpsb
outsb
into
pushf
mov
insb
add
scas
push
push
addr16
aas
xchg
and
sub
lods
pop
fwait
jne
inc
loopne
fnstsw
maxps
push
insb
or
scas
leave
dec
mov
aaa
adc
sbb
jmp
push
jbe
xor
jmp
dec
inc
adc
push
out
mov
xor
jns
cmp
adc
xchg
gs
jns
cs
xchg
add
js
cmp
or
inc
cmp
push
addr16
mov
adc
inc
mov
xor
lcall
imul
and
mov
xor
and
jmp
xlat
pop
mov
xchg
xchg
arpl
sub
fnsave
push
nop
dec
loopne
push
fwait
mov
scas
jp
mov
and
outsl
sarl
int3
or
js
cltd
mov
sub
inc
loopne
inc
mov
ret
push
and
addb
sub
xchg
mov
stos
mov
emms
mov
push
sti
aaa
jae
dec
ja
xor
push
hlt
test
scas
icebp
xor
pop
in
sahf
sbb
aad
push
lret
out
data16
mov
addr16
ja
outsb
pop
fadds
je
loope
orb
push
cmp
loopne
mov
sbb
fnstenv
mul
and
xchg
addb
xchg
cmp
pop
ficoml
into
mov
push
fwait
ret
mov
fimuls
daa
or
mov
dec
lea
in
in
jo
jno
ret
roll
sahf
jbe
or
loope
pushf
jle
arpl
loopne
clc
daa
ficoms
ret
mov
push
cmpsl
cmpsl
test
push
ret
dec
pop
gs
clc
xchg
xorl
or
mov
test
push
popf
movsl
and
mov
or
mov
int3
jle
add
mov
out
into
test
aas
out
xor
pusha
cld
cli
mov
cmc
sub
ret
nop
or
lea
mov
push
add
rcl
mov
sbb
add
testl
adc
out
sub
sbb
les
mov
subl
adc
cmp
insb
cmc
adc
aam
pop
in
jns
shlb
movsl
and
xchg
add
repnz
out
push
fs
daa
mov
sub
xchg
test
push
fadd
lea
jne
dec
aam
stc
or
jmp
xlat
imul
mov
sub
fistl
adc
les
mov
inc
add
sbb
mov
icebp
int3
gs
orl
rep
incl
out
in
stc
cmpsl
jmp
jl
sarb
fistl
shr
add
adc
and
insl
popf
dec
dec
mov
dec
push
jmp
cmc
mov
repnz
xchg
mov
xor
push
lods
mov
bound
ss
imul
mov
testl
fisttpl
adc
cmpsl
dec
pop
or
xchg
xchg
movsl
add
movsb
and
pop
fistpll
or
lret
dec
inc
sbb
test
push
inc
sbbl
pop
pusha
mov
and
lahf
mov
fldenv
nop
sub
das
dec
mov
xchg
adc
inc
fldl
in
dec
stc
jmp
sub
xchg
xchg
xor
out
sbb
xor
push
cld
lea
lahf
es
inc
push
sub
clc
sbb
cmpsl
push
and
jg
jg
iret
imul
pop
ret
movsl
jne
adc
jb
jle
or
arpl
lcall
pusha
sub
mov
in
sub
sbb
outsl
int
out
mov
lods
jge
push
xor
orl
xchg
into
shll
stos
fisubs
ljmp
gs
data16
jecxz
mov
push
cmc
int3
out
in
or
outsl
ret
cs
incl
lret
push
int3
mov
es
pop
add
rolb
js
or
mov
xchg
scas
rcl
and
leave
jmp
sub
imul
add
sub
sbb
pop
add
stc
movsl
pop
divb
xor
loope
dec
cltd
mov
adc
divl
jmp
cmpsb
lods
loopne
roll
adc
adc
inc
push
xchg
cmc
or
mov
mov
push
inc
ja
jno
imul
add
mov
iret
rcll
call
lret
lcall
outsb
jnp
std
inc
outsb
xchg
sub
jns
adc
xor
mov
dec
jnp
push
nop
dec
pop
lret
dec
mov
pop
xchg
jbe
les
sub
xchg
mov
jbe
mov
mov
mov
popf
or
into
ss
cmp
push
ficoml
or
fwait
lret
adc
or
rcr
mov
mov
lret
sub
outsb
push
adc
mov
push
and
movsb
mov
lcall
daa
das
cmpsl
xchg
dec
xor
mov
test
das
aaa
jecxz
into
lock
in
dec
sbb
push
int
inc
mov
adc
mov
scas
adc
pop
int3
sub
cmp
daa
or
cmp
fldl
xor
mov
add
inc
fisubrs
mov
pushf
pop
xor
add
push
ljmp
mov
adc
xchg
or
inc
add
inc
xchg
insl
sbb
leave
inc
lods
and
pop
mov
adc
xchg
and
es
hlt
push
jns
int3
ds
mov
inc
push
push
shll
push
jae
jb
pop
imul
fildll
fs
in
inc
inc
inc
les
adc
xor
add
push
xchg
fsubrs
pop
dec
inc
inc
jno
lahf
fs
test
push
das
cmc
lret
movsb
xor
cmp
pushf
icebp
add
bound
mov
dec
add
xchg
ds
pushf
insl
add
and
cld
sbb
cld
jle
xchg
sbb
popa
xor
mov
xchg
fidivrs
mov
push
rcrl
nop
sbbb
test
cwtl
repnz
sbb
mov
push
outsb
or
pop
push
cmp
cli
sub
pop
fnstcw
out
pop
and
and
aad
loope
inc
test
clc
push
mov
sbb
adc
mov
es
scas
mov
popa
jb
ss
leave
push
aas
sbb
and
push
push
imul
stos
iret
repnz
mov
in
cmp
outsl
ds
push
add
push
mov
push
outsl
popa
and
sahf
lods
mov
sbb
dec
cmpsl
cld
lods
rcl
sbb
leave
icebp
lods
xchg
or
push
shrb
xchg
icebp
lds
jl
add
mov
sbb
push
ret
roll
ret
mov
jno
mov
add
dec
stc
inc
dec
add
mov
fidivrl
pop
mov
sahf
xchg
fstps
into
or
and
dec
xchg
cltd
mov
push
xor
mov
ja
xchg
add
and
push
sahf
inc
rcrb
subl
push
lods
adcl
lret
dec
mov
adc
les
mov
xchg
pop
outsb
mov
fsts
push
ss
sub
mov
cmp
mov
iret
in
scas
lret
cld
lods
mov
dec
mov
cmpsl
cmp
mov
cld
push
repnz
fistl
sub
xor
outsb
frstor
rclb
adc
adc
inc
cmp
popa
adc
mov
push
and
jle
add
ds
into
into
fsubl
sbb
loopne
stos
or
test
lock
fs
sub
imul
mov
xchg
xor
fcompl
aaa
ret
dec
push
fidivs
in
jne
or
xorb
jp
push
mov
daa
jo
xor
dec
cmpsl
push
out
rorl
scas
decl
mov
pop
cmp
test
les
pop
jmp
push
aaa
pusha
inc
cltd
stc
ja
xchg
pop
dec
xor
out
outsl
shlb
outsl
test
sub
lods
add
lcall
fiadds
fnstsw
pop
in
mov
push
scas
lret
icebp
sarl
subl
pop
jecxz
jmp
leave
mov
idiv
jnp
push
enter
mov
add
add
add
add
xor
cmpl
jne
push
call
cmpl
jb
sbb
mov
mov
xor
xor
incl
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
xor
mov
or
mov
xor
add
mov
decl
mov
xor
add
sbb
mov
sub
lea
xor
xorl
xor
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
xor
sbbl
add
movl
cmp
movl
jne
pushl
adcl
call
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
xor
sbb
mov
xorl
add
movl
cmp
je
addl
pushl
pushl
orl
call
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
and
mov
and
mov
mov
decl
xor
add
movl
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
sbb
push
mov
adc
mov
push
mov
adc
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
movl
mov
adc
jmp
gs
jne
jle
fs
jp
adc
cmp
hlt
out
inc
mov
fisttpl
mov
addl
mov
insb
inc
ret
pop
rol
sarb
pop
and
sar
xor
fwait
lret
sbb
push
cs
mov
sub
sbb
or
sub
cmp
mov
loopne
test
xchg
les
test
xchg
lahf
cli
xchg
jmp
adc
mov
inc
dec
loop
mov
and
loopne
push
add
fs
dec
xor
cmp
push
sahf
sti
lahf
imul
lret
cmpsb
mov
fsubr
dec
add
imul
fwait
mov
loope
ret
movsl
addr16
mov
mov
mov
sub
bound
inc
add
jb
or
mov
out
mov
dec
sub
xor
cmpsl
mov
pushf
sbb
inc
adc
xchg
adc
mov
ret
cmp
add
shll
faddl
fdivl
xchg
in
lock
addr16
andl
push
sbb
sbb
mov
fildl
ss
shlb
imul
loope
lods
outsb
pusha
push
cmp
lods
test
mov
mov
dec
in
jl
inc
bound
add
aad
cs
xchg
mov
rolb
jno
inc
push
data16
test
les
sbb
orb
push
mov
pushf
mov
jmp
icebp
pusha
out
rorb
and
js
jns
sub
shrb
repnz
shlb
les
imul
sub
mov
mov
cmp
inc
jbe
push
inc
mov
testb
cmpsb
push
cmpsl
mov
cmp
bound
dec
fbld
adc
stc
or
inc
mov
jne
hlt
in
xor
gs
test
pusha
fmul
outsb
fsts
test
stc
repnz
mov
push
inc
or
leave
dec
dec
sbb
shll
shrl
adc
add
mov
rcll
push
add
pop
pop
or
cmc
mov
push
lea
out
xchg
call
cs
imul
lods
aaa
and
sbb
fistpll
cli
jl
idivb
ljmp
and
mov
push
out
incl
sub
pop
scas
mov
lea
jmp
add
test
arpl
jbe
ja
popa
xchg
frstor
sbb
stc
popa
into
fsts
jl
nop
inc
adc
xchg
ret
outsl
push
mov
insl
mov
xchg
imul
negb
ret
cs
pop
cwtl
repnz
es
pop
adc
icebp
pop
call
xchg
arpl
test
lret
jnp
lcall
icebp
cmp
test
jmp
mov
cs
lods
push
mov
cmpl
insl
les
call
inc
push
xchg
or
repz
clc
pop
lds
gs
cli
scas
mov
cli
mov
out
xchg
xor
mov
in
frstor
repz
fisubl
xlat
xor
test
mov
mov
in
push
cmp
push
dec
ja
push
cli
adc
les
xlat
loopne
mov
sub
aad
ret
pop
push
push
fistpll
int
sahf
fdivl
mov
add
inc
das
leave
sub
incb
scas
cmp
xchg
ss
mov
stos
shl
adc
popf
stos
repz
call
pushl
xchg
fsubrs
and
jg
pop
stos
sbb
out
out
repnz
cmpsl
lods
repnz
lcall
aaa
or
hlt
fdivr
fs
xor
fcmove
aam
lcall
fcoms
ja
lds
iret
test
or
nop
mov
imul
icebp
sbb
jge
jg
arpl
sbb
inc
mov
xchg
jmp
aad
pop
imul
dec
jge
movsl
popf
add
scas
subl
inc
lahf
add
sub
lock
hlt
inc
push
jl
and
lea
jp
cmpsl
push
lret
or
adc
clc
mov
enter
xchg
repz
xchg
xchg
inc
and
push
jbe
leave
jnp
pop
xchg
sbb
movl
iret
pop
cmp
movsb
fsubrs
xchg
jbe
das
shr
xor
dec
ret
es
xchg
push
movsb
out
scas
js
inc
cmpsb
cmpsb
jns
les
aam
mov
imul
fs
jle
adc
jecxz
add
imul
xchg
and
ficomps
int3
mov
xor
outsb
inc
popl
jl
fsub
push
jns
pop
jne
mov
aam
std
push
mov
int3
sbb
add
iret
arpl
mov
clc
notb
cmc
mov
js
ja
ret
sti
das
mov
cmp
mov
pusha
cmp
xchg
ss
pop
pusha
insb
gs
int
or
cld
mov
cmpsl
add
lods
add
shl
ds
push
jb
dec
jle
pop
push
rcrb
aad
cmp
sbb
jl
push
fistpl
test
lea
sti
in
sar
arpl
daa
add
jns
sub
adcl
dec
ret
imul
mov
xchg
jecxz
push
or
lahf
push
loop
ficoml
lcall
pop
call
gs
in
loopne
pusha
into
ficoml
jle
jb
scas
outsb
xchg
dec
repz
int
ss
inc
and
out
incb
mov
fsts
daa
imul
pop
mov
or
int
andl
ss
pop
cmc
rcrl
or
cmp
fmul
std
jb
fs
mov
andl
outsb
loope
push
rcr
mov
sub
dec
dec
sbb
cmp
xchg
stc
outsl
popf
les
aam
add
adc
lds
mov
icebp
mov
lods
std
sub
scas
push
in
int3
xor
out
mov
movsb
or
jae
les
inc
xchg
ret
inc
fucomp
fisubrs
sbb
mov
movsb
lret
es
lcall
gs
push
adc
addl
loope
xchg
outsb
hlt
and
dec
insl
test
jnp
icebp
out
dec
test
cmp
or
enter
mov
mov
arpl
test
push
insb
cltd
bound
dec
cmpsl
rcrl
cmc
lahf
jmp
mov
lods
pusha
cmp
mov
mov
stos
hlt
pop
fwait
xchg
into
sbb
push
pop
imul
fldl
add
repz
cmp
dec
rol
and
push
jno
bound
mov
mov
dec
xchg
mov
out
ljmp
adc
cmp
filds
in
push
insl
jno
jns
sti
or
leave
or
rclb
and
icebp
jno
mov
push
ret
inc
dec
pop
inc
push
and
fcomip
test
out
add
mov
xchg
jnp
cmp
pusha
sub
pop
ret
int
pop
xchg
pop
mov
sub
out
push
stc
push
xchg
ficompl
outsb
lahf
sub
loop
addr16
pop
pop
cmp
iret
and
bound
sti
mov
push
rclb
cmp
pop
pop
leave
dec
aaa
testb
jb
aam
lods
inc
fisttps
mov
mov
addr16
lea
adc
pusha
pop
je
pop
jl
lods
sbb
xor
xchg
cmpsb
jmp
sbb
xchg
or
and
repz
rcr
push
pop
loop
loopne
dec
mov
icebp
in
pop
dec
mov
and
jecxz
fisttpll
push
mov
outsb
mov
pop
sub
mov
loope
in
jnp
push
movb
cmpsl
jle
les
scas
addb
mov
leave
scas
sbb
xchg
test
imul
inc
cmp
nop
sbb
mov
repz
pop
bound
jge
jb
stc
sti
mov
imul
push
fisubrs
popf
insb
mov
into
lret
push
addr16
repz
ds
scas
out
sub
mov
or
push
add
sub
sub
dec
outsl
cmp
gs
sub
pop
inc
roll
rcll
scas
jmp
cmpsb
push
inc
jno
mov
leave
jmp
loop
mov
and
int3
incl
lret
mov
dec
movsb
shlb
and
jae
add
and
inc
inc
in
int
sbb
xchg
adc
add
js
sub
sbb
cmp
lcall
lds
das
xchg
in
in
mov
jle
push
and
std
cmp
dec
add
sbb
or
jecxz
or
pop
dec
clc
xchg
and
fdivrs
ja
aam
dec
push
jb
aaa
mov
enter
cltd
push
lods
pushf
fisubl
jg
or
mov
sti
cmp
fwait
adc
sbb
mov
in
mov
sarl
cld
mov
jb
daa
test
push
adc
inc
dec
shll
mov
dec
imul
ss
arpl
orb
mov
push
sahf
push
pop
xor
aad
cmpsb
stos
fwait
jne
xor
pusha
lahf
pop
sbb
mov
push
sahf
dec
sti
nop
and
mov
cmc
fistpll
or
scas
xor
or
out
pop
call
jmp
pop
pop
push
dec
test
lret
adc
icebp
int3
clc
mov
cs
scas
sub
orb
xchg
out
inc
mov
mov
data16
mov
fidivs
mov
fdivl
add
xor
icebp
mov
cmpb
cwtl
filds
mov
cmp
inc
sub
lret
mov
sub
sbb
xor
ss
and
jns
adc
lret
fdivr
scas
ja
lods
pop
jp
mov
mov
and
jnp
dec
inc
xchg
pop
mov
xchg
icebp
ja
stos
sar
jp
movsb
or
xor
mov
xor
push
lret
out
imulb
mov
pop
pusha
or
mov
jbe
ja
mov
fwait
cmc
les
xchg
push
add
ffreep
addb
loopne
ret
jno
push
xchg
outsl
add
and
xchg
mov
dec
clc
add
fildll
movsb
jb
pushf
lods
inc
adc
nop
das
addr16
out
xchg
test
sahf
and
loope
ret
sbb
ljmp
in
cmc
mov
iret
fisttps
push
jle
shll
push
outsl
push
inc
cmp
rcrl
mov
or
cltd
and
std
pop
inc
mov
mov
js
lds
scas
outsl
mov
mov
fs
adc
jae
pop
sbb
jne
or
dec
xor
sbb
imul
int3
enter
outsl
test
bound
gs
js
adc
stos
xlat
sahf
mov
aas
mov
andb
jp
dec
xor
dec
mov
add
cmpsb
pop
nop
int
ret
push
inc
pushl
add
int
or
xchg
cli
or
iret
lahf
movsl
dec
loopne
ljmp
arpl
cmpsl
out
int3
mov
int3
hlt
ror
cmp
int
fisubs
fdivs
pushf
out
jne
shlb
cmp
ja
popa
push
jle
or
ss
or
das
pushf
push
or
daa
insl
jae
stos
dec
sub
pop
les
mov
out
push
mov
outsb
into
popf
je
ffree
or
mov
ljmp
xchg
dec
out
js
push
or
js
fcompl
stos
ljmp
xor
mov
jge
stc
std
and
lock
or
cltd
jecxz
iret
rorl
insb
dec
mov
testb
add
sarb
mov
adc
jno
mov
push
icebp
int3
aad
popf
jmp
sbb
int
jae
cmp
or
and
test
lcall
ret
sub
dec
fnstcw
sbb
mov
jnp
adc
movsl
cmpsb
in
lcall
xor
sbb
bound
dec
clc
fldenv
mov
sub
mov
mov
mov
push
mov
loopne
aas
add
mov
cltd
xchg
sub
dec
pop
sbb
xor
mov
out
cltd
int
lods
xorb
and
imul
movsl
icebp
dec
dec
push
in
test
cltd
mov
cli
arpl
xlat
fldt
xchg
push
mov
sbb
aad
mov
icebp
mov
jnp
mov
cmc
cmp
dec
pop
imul
adc
fwait
mov
in
add
lret
jns
xchg
xor
and
loop
xchg
icebp
into
in
mov
mov
or
out
inc
scas
jae
mov
sub
scas
jae
loope
enter
aam
mov
mov
add
rorb
lahf
ret
outsb
aad
lods
imul
popf
sti
data16
int
jb
xchg
push
mov
jb
push
popa
aam
mov
cli
sub
cmpsl
pop
dec
jbe
inc
sarl
dec
pop
test
xchg
jmp
out
fwait
adc
xor
pop
push
jecxz
adc
aaa
add
inc
push
mov
frstor
loop
lds
fmull
mov
pop
cltd
adc
pop
mov
xchg
inc
jns
xchg
xchg
dec
sahf
dec
andb
inc
push
xchg
and
xchg
jmp
adc
bndstx
xor
imul
sub
pushf
ljmp
nop
test
addb
scas
push
enter
int3
ficompl
jmp
fnstsw
adcl
and
fisttpll
repz
repnz
jg
sti
xchg
dec
mov
dec
aaa
or
mov
addr16
les
sub
sub
cli
sbb
fdivrp
push
vcvtsd2ss
mov
pop
insl
lods
sahf
dec
mov
imul
shlb
or
sbb
jb
repz
xchg
pop
pop
ja
shl
pop
sbb
mov
nop
dec
addr16
jl
jns
cmc
push
insl
mov
repz
mov
xchg
sarl
sub
xor
adc
icebp
xchg
jno
repnz
adc
lcall
jo
push
bound
or
and
repz
jnp
inc
mov
call
negl
ss
repz
daa
mov
mov
push
ret
lea
out
lods
rclb
fucompp
gs
mov
test
data16
pop
testb
inc
jmp
push
es
mov
cmp
add
inc
popa
insb
xchg
and
lahf
jne
stos
push
and
xchg
xchg
inc
push
in
stc
mov
adc
int
fadd
add
or
mov
lods
aas
dec
xchg
call
mov
mov
mov
loopne
adc
sub
aam
loope
jne
xchg
lret
add
jae
xor
jae
test
push
fs
mov
sub
cli
inc
jl
imul
ret
pop
mov
in
and
arpl
and
or
sub
xchg
sti
repz
movl
push
fs
jmp
js
cmp
scas
addr16
insl
mov
cmpsb
push
cli
pop
cmp
icebp
fisubl
pop
pop
sbb
pushf
adc
mov
pop
loopne
rcll
and
xchg
mov
jo
lock
sbb
in
stos
ss
pop
add
push
movsl
xchg
and
into
out
loop
push
aam
adc
imul
stc
sub
imul
xchg
hlt
scas
jae
xchg
lods
fmulp
lret
sub
mov
xchg
notl
mov
adcl
outsl
leave
dec
dec
adcb
jecxz
sti
mov
adc
leave
sub
ret
mov
lea
jp
adc
mov
lock
dec
cmp
loope
sub
cmpb
xor
sub
cwtl
mov
lret
mov
dec
cmp
cmp
and
icebp
xlat
inc
bound
xor
leave
xchg
cmpl
rcrl
adc
pop
pop
out
int
into
inc
jns
nop
int
icebp
sbb
cltd
repz
insl
in
lods
sub
pop
aad
sub
sub
leave
rorb
inc
add
mov
cmp
mov
pop
mov
or
adc
mov
add
sbb
mov
xchg
dec
pop
cmp
xchg
aas
in
les
push
daa
push
or
lds
scas
dec
mov
push
or
mov
jnp
add
popa
add
inc
inc
sbb
cmc
test
mov
or
or
shlb
fistpll
xor
jnp
gs
insl
dec
in
sub
xor
add
cld
push
and
mov
nop
jno
sbb
ret
stc
paddw
jae
push
into
mov
mov
mov
xor
or
mov
clc
repz
push
xchg
jge
jae
dec
sbb
jl
rcll
gs
mov
xchg
mov
call
jbe
shrl
mov
outsl
pop
pop
push
push
sbb
pop
or
into
cld
push
sbb
bswap
movsl
fsub
cld
ret
pop
jno
cmp
xor
inc
imul
xchg
sbb
sbb
shl
sbb
aaa
push
xchg
add
dec
andl
push
in
dec
xlat
cld
xor
ds
test
mov
daa
lds
xor
fdivp
sbb
js
pushf
push
loope
push
out
aaa
cltd
sbb
mov
cltd
pop
add
loope
cs
jmp
mov
out
jge
test
push
mov
into
inc
cmc
cmp
rorb
and
xor
dec
sti
shlb
dec
scas
or
imull
dec
pop
jo
jo
cmpsb
fadds
mov
add
aaa
inc
aam
decl
push
sub
lock
jge
inc
mov
mov
je
cmp
mov
inc
push
sahf
mov
add
insl
xor
xor
pop
dec
dec
outsb
push
cmp
jg
sub
cld
in
scas
je
cmp
mov
adc
imul
movsb
cmp
lea
and
sbbb
pusha
push
pop
mov
gs
pushw
std
add
stos
and
mov
inc
or
jmp
int
test
push
ljmp
jmp
add
cmp
mov
test
jl
fldcw
jns
mov
outsb
rorb
add
cmp
xor
das
or
inc
out
bound
cwtl
mov
imul
mov
loopne
inc
test
jnp
popa
push
lret
sub
mov
mov
fcmovnb
fmull
jecxz
jo
jbe
inc
mov
in
push
jne
push
adc
jae
movsb
dec
and
loope
sbb
sarb
ret
mov
push
in
or
add
jl
sbb
mov
out
xchg
clc
mov
push
in
test
sub
pop
sub
iret
push
jle
clc
and
movsl
shrb
sti
sbb
mov
jne
repnz
push
dec
jb
lock
icebp
push
aaa
pushf
sti
jge
or
popa
fistl
push
push
add
daa
aad
sbb
pop
aas
xchg
lods
fistps
inc
ja
or
mov
jl
leave
sahf
pushf
push
arpl
rorl
adc
lahf
pop
lcall
jbe
popa
pop
and
mov
ljmp
out
jnp
xor
mov
stos
sub
pop
pop
jg
les
dec
jle
mov
vmread
inc
movsb
lock
fnstenv
xchg
leave
rcrl
and
add
dec
lret
cmp
pop
icebp
dec
cmp
and
pop
imul
mov
stos
sbb
loopne
cmp
or
and
jnp
mov
push
cli
mov
cmc
push
inc
push
mov
sub
je
icebp
pusha
jnp
gs
lcall
inc
cmp
and
movsb
stc
cmp
cltd
xchg
mov
pop
dec
jne
mov
push
in
bts
add
js
push
xchg
push
add
mov
sbb
jns
pop
push
cmp
stos
sahf
jmp
pop
shll
mov
xchg
mov
in
push
gs
call
cmc
push
xor
arpl
push
cmp
lahf
or
call
pusha
clc
jg
cmpsl
mov
xor
jne
test
mov
bound
mov
jmp
nop
mov
pop
and
sub
repz
sti
mov
dec
fidivrl
mov
fisubrl
jg
movsb
push
mov
in
test
jl
pop
add
and
push
pop
jbe
in
cld
jecxz
xchg
call
bound
jbe
pop
mov
insb
dec
mov
dec
insl
jg
adc
in
sub
sbb
imull
rcrl
or
mov
xor
lock
fwait
cmp
sub
or
cld
mov
outsb
mov
or
stos
lock
call
daa
rclb
or
sbb
loopne
rolb
jno
add
xor
into
jge
cwtl
jl
aaa
cmp
jno
xor
das
add
cmp
push
mov
push
mov
xor
scas
jecxz
rorl
pop
nop
or
shrb
roll
pushf
popaw
inc
das
xor
jbe
icebp
subl
popf
repz
scas
in
dec
ret
pop
lret
int
roll
push
shlb
push
cmc
xchg
xlat
or
push
pusha
or
rcrl
pushl
rcrl
addl
ds
xor
adc
flds
gs
fadd
xchg
jp
lds
push
aaa
push
out
pop
in
dec
sub
scas
lods
mov
jo
mov
mov
insl
rcll
cld
and
adc
rcrl
mov
jb
sub
or
and
pop
mov
fs
add
mov
mov
xchg
sbb
cltd
ljmp
adc
aas
pusha
ret
shl
ljmp
hlt
xlat
mov
es
dec
mov
in
lea
fnstsw
adc
mov
std
insb
push
jp
xchg
xchg
add
or
pop
cmpsl
loopne
adc
lea
dec
push
mov
cmp
out
test
aas
sub
sub
lds
pop
lret
pop
lret
mov
jg
fnstcw
adc
or
jg
pop
pop
mov
jne
outsl
nop
fimull
ja
mov
neg
push
mov
sbb
dec
scas
pop
rorb
dec
les
rorb
xchg
xchg
es
clc
xchg
js
inc
push
loopne
sahf
jle
xlat
mov
popa
mov
jp
jle
mov
jecxz
jmp
adc
js
lea
mov
hlt
sub
popa
or
xor
aas
sbb
pop
cmp
ljmp
loopne
cli
jl
nop
jne
mov
scas
popf
cs
movsl
cmp
push
stos
inc
sub
ss
mov
aaa
mov
int
jg
fmuls
loopne
dec
es
nop
fnsave
pop
int
testl
cli
sbb
jno
lock
iret
adcl
fnstenv
fs
jno
dec
js
sbb
into
sarl
call
aaa
cwtl
jne
push
loope
fstpl
test
cmp
in
jg
cmp
out
bound
sbb
mov
jne
cmpsb
mov
mov
nop
push
pusha
cmp
fwait
not
faddl
and
pop
pop
rorb
pop
sub
mov
push
lret
fildll
mov
call
mov
loope
lds
fsubs
pop
or
sub
dec
jae
jb
xchg
popf
jne
dec
test
movsb
inc
mov
aam
push
xlat
mov
out
arpl
sub
or
add
jg
shr
mov
inc
mov
insl
inc
repz
mov
insl
lahf
lret
dec
ss
sarl
inc
clc
mov
icebp
xor
sbb
cmp
push
bound
xchg
xlat
sub
sub
cltd
aas
loop
mov
icebp
in
push
inc
add
xor
in
or
push
popf
push
cmp
mov
into
xchg
out
mov
mov
je
popf
xchg
xchg
mov
xchg
fmul
mov
inc
shr
mov
adc
inc
fdivr
lods
stos
faddl
aam
ljmp
roll
cmpb
int3
imul
ret
in
test
sub
mov
test
jp
call
adc
cmp
iret
xchg
jmp
scas
lret
icebp
lea
nop
fwait
mov
push
mov
imul
sub
outsl
arpl
xchg
rcrb
add
loop
js
sub
dec
pusha
dec
in
inc
mov
sbb
stc
sbb
jmp
or
jecxz
aam
cmp
test
rcr
cmp
adc
mov
das
jle
fists
movsl
mov
sub
fmull
pop
inc
dec
pop
inc
mov
adcb
sub
dec
add
jle
sub
popf
add
push
jne
js
sub
xor
sbb
std
cmp
sub
dec
cs
mov
or
test
out
testl
popa
mov
jb
mov
push
mov
or
std
xchg
movsl
out
std
jge
lock
les
shlb
push
push
mov
and
repz
out
ret
ds
lret
pop
lds
sbb
out
stos
cmp
loop
pop
xor
adc
mov
push
loopew
xor
testl
cmpsb
stos
repz
or
icebp
lds
inc
push
mov
leavew
mov
cmp
or
jge
fstpl
add
lahf
out
mov
shll
mov
dec
addr16
shlb
push
into
cwtl
mov
mulb
aas
xchg
add
int3
aad
pop
rcl
pop
add
sarl
pop
and
cmpsl
jg
js
xchg
inc
and
daa
dec
push
inc
inc
pop
inc
cmpsb
inc
pop
cli
lahf
call
sub
pusha
dec
mov
cld
ja
inc
mov
mov
mov
cmpsb
inc
ret
sbbl
in
inc
mov
es
jae
sub
shl
repz
jecxz
add
sub
rcl
jp
or
les
fildl
add
jp
push
les
mov
and
jmp
dec
xchg
test
stc
iret
push
jne
fistpl
aaa
push
dec
aaa
fidivs
mov
popf
enter
stc
push
movsb
and
daa
scas
das
test
cwtl
cmp
out
insl
adc
icebp
jbe
in
push
shrb
call
mov
imul
or
sbb
cmp
xor
xchg
pop
test
loopne
popf
sahf
mov
xchg
int
push
mov
pop
loop
inc
inc
rorl
loope
mov
jmp
cmp
fidivrl
aaa
xchg
into
inc
pop
cmp
mov
push
test
mov
pop
insl
call
cmc
shlb
xor
adc
dec
inc
xchg
mov
xor
lcall
inc
push
or
cld
stos
push
stc
jbe
aaa
push
das
pop
sahf
dec
mov
int3
push
lret
fs
into
pop
pop
lods
insl
add
inc
fucomp
int
cmp
jnp
mov
testl
jmp
or
inc
adc
xchg
mov
lods
push
mov
aam
mov
cmpsb
add
mov
dec
add
repnz
cmp
pushf
xor
xlat
mov
mov
pop
xchg
adc
cli
das
aas
adc
push
or
or
dec
negl
cmp
adc
jno
sbb
stc
decb
loop
xor
and
leave
not
icebp
ja
lahf
jo
out
lods
movsl
popf
and
adc
xchg
xchg
pop
mov
call
rcll
cmp
jns
cmp
mov
stos
cmp
fsts
inc
mov
sbb
sbb
arpl
mov
push
imul
sub
out
and
cmc
jb
mov
and
xchg
mov
push
cltd
jnp
cmp
ret
pop
jl
push
into
pop
push
push
jne
loopne
and
hlt
cld
pop
inc
fimuls
lea
pop
xor
adc
adc
jno
mov
mov
mov
or
sub
jns
daa
mov
lahf
movsl
cmpsl
cltd
push
push
inc
adc
idiv
aam
in
mov
ds
sbb
in
inc
pop
js
cmp
and
inc
je
pop
mov
jle
add
dec
jmp
scas
mov
pusha
adc
dec
mov
cmpl
xchg
push
cwtl
and
je
aad
mull
xchg
aad
in
jmp
hlt
pop
mov
sub
add
adc
pop
and
xchg
cld
cltd
push
cld
sbb
xor
ja
jge
sub
xor
jg
ror
jae
cmc
push
mov
mov
shrl
lods
cli
push
leave
pop
insl
aas
rcll
icebp
and
and
roll
inc
and
xor
or
mov
cld
or
push
test
loope
iret
inc
mov
cli
push
cmpsl
jle
xor
pop
loope
dec
jle
pop
and
sub
dec
xchg
jb
and
push
mov
jno
outsb
lock
push
push
fldt
pushf
shlb
fistpl
jl
das
mov
push
lock
sbb
xor
sub
ret
daa
pop
sub
add
dec
inc
ret
bound
or
inc
jge
push
in
into
test
mov
sub
cmp
dec
bound
in
in
cmp
test
xchg
out
cmc
jbe
outsb
xchg
hlt
cmp
pop
dec
addr16
adc
ret
dec
push
jge
mov
mov
mov
adc
pop
sub
mov
mov
mov
in
rcl
mov
push
out
test
outsb
jnp
movsl
mov
mov
arpl
jl
xor
lock
cmp
mov
aaa
enter
adc
inc
sahf
push
inc
jbe
lods
mov
lds
lahf
clc
sbb
cmpsl
fdivl
iret
jge
inc
ss
lret
inc
jo
je
mov
pop
jmp
add
imul
jl
mov
pop
pop
out
and
adc
pop
es
sbb
ljmp
popa
sub
push
js
push
push
ds
outsl
icebp
or
cs
adc
adc
jae
adc
and
xor
loope
and
mov
push
les
push
inc
or
imul
xchg
rcl
dec
jns
inc
jnp
push
lock
and
icebp
xlat
ret
xor
daa
mov
xchg
pusha
imulb
push
mov
mov
or
mov
mov
sbb
sub
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
and
mov
mov
orl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
mov
sub
mov
sub
add
mov
orl
sub
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
adc
lea
and
mov
movzbl
sub
mov
push
mov
movzbl
sbb
mov
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
mov
mov
sbb
mov
xor
addl
add
negl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
mov
add
sbbl
push
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzwl
add
mov
adc
mov
sub
xor
mov
subl
jmp
fildll
push
mov
mov
pop
sub
cmpsl
mov
jp
pop
jp
fmull
fwait
shr
jae
in
jmp
dec
clc
xor
xor
xchg
ret
repz
aam
jle
stos
cmp
adc
push
repnz
rcr
push
es
jae
test
pop
cmpsb
xchg
shr
shr
cltd
mov
or
jbe
sti
dec
popf
icebp
mov
dec
jp
cmpsl
rol
push
add
rcrl
jecxz
push
add
xchg
lods
std
pop
aam
movsl
mov
inc
mov
jecxz
add
pop
xchg
xlat
and
hlt
fmuls
cmp
inc
int3
push
sub
repz
ret
iret
jecxz
mov
xchg
insl
mov
jae
jnp
je
imul
lcall
ret
pushf
pop
and
scas
and
sahf
arpl
inc
push
mov
repnz
fnsetpm(287
adc
ljmp
sub
test
jns
mov
repnz
inc
push
icebp
jae
dec
repz
sbb
cmpsl
cltd
int3
mov
push
cmpsl
data16
lock
or
jecxz
clc
lret
add
ja
test
add
cli
cmc
add
enter
xchg
cmp
sub
mov
inc
dec
add
data16
loopne
pop
cmp
repz
xchg
loop
push
addr16
popf
cmc
mov
xor
imul
sub
stc
mov
fnsave
inc
js
xchg
cwtl
inc
push
push
rcrb
shrl
sbb
daa
mov
inc
clc
out
jmp
or
inc
negl
sub
or
sub
aaa
stos
dec
fidivs
les
mov
inc
dec
popf
mov
jmp
sub
pop
and
dec
jns
dec
sarb
add
arpl
int
iret
scas
mov
lods
cmp
sbb
lods
jl
dec
mov
xchg
shll
mov
adc
xchg
insl
mov
sub
cmp
mov
sbb
mov
cli
hlt
or
ds
outsl
or
filds
in
sbb
sub
adc
push
mov
pop
jecxz
andl
out
and
sarl
cmp
aam
into
mov
lods
and
xchg
pop
cmc
call
pop
mov
sbb
popf
mov
lcall
roll
scas
fcomps
test
das
movl
sub
jns
xchg
xchg
push
repz
mov
loop
ja
in
jmp
add
mov
sub
aam
mov
ss
and
dec
jnp
cmpsl
pop
mov
jp
lods
push
dec
xchg
xchg
lcall
in
inc
mov
and
xchg
pusha
lahf
rcll
pop
jbe
mov
jnp
cltd
lods
sub
and
aaa
pop
sub
mov
jecxz
xchg
fisubrs
pop
mov
xor
stos
fabs
imul
ja
mov
stos
out
mov
adc
out
add
sub
cmpl
and
and
jb
daa
sbb
sahf
mov
insb
loopne
pop
sub
adcb
sub
xchg
inc
es
jbe
bound
inc
xchg
push
xchg
fisubl
cwtl
fidivl
shrl
ret
or
mov
sbb
add
inc
dec
mov
xchg
rorb
inc
mov
push
imul
mov
jg
xor
xchg
or
mov
jl
aaa
pop
imul
cld
jb
xorb
nop
fmul
jns
ret
xchg
pop
jle
dec
xchg
mov
pop
cmp
sti
insl
pusha
pop
pop
int3
pushf
loope
mov
jns
dec
and
in
loop
mov
jp
leave
lret
cwtl
addr16
add
xchg
imul
dec
dec
mov
leave
push
scas
ds
loopne
lcall
lcall
loopne
scas
fnstenv
pop
in
add
push
outsl
data16
mov
xor
ljmp
shll
ja
push
sbb
jp
xchg
adc
iret
push
in
mov
icebp
fstl
rcrb
mov
mov
dec
inc
imul
lea
push
das
loop
pop
in
jns
inc
push
adc
lret
aam
push
cltd
out
lea
dec
aaa
pop
and
cmp
pop
je
iret
add
jo
icebp
fidivrl
in
or
lds
lods
push
ds
or
shlb
cmpsl
jo,pt
adc
loope
aas
cmp
dec
jbe
inc
cld
mov
add
fdiv
cmp
out
iret
mov
cmp
dec
pop
fidivrs
stc
and
xchg
pushf
ja
cmpsl
fsubl
jns
aad
mov
sbb
fistl
mov
pop
bswap
enter
lock
loopne
mov
mov
out
push
or
sub
and
xorl
mov
in
and
sbb
jle
popa
pop
out
jbe
push
addr16
ja
mov
movsl
xor
mov
dec
bound
cmp
mov
xchg
pop
sbb
xor
mov
jns
addr16
mov
or
ret
pop
fs
xchg
and
xor
or
xor
aad
sub
and
addr16
push
pop
cmp
sub
loope
xlat
lret
cmpsl
outsb
push
shrb
xchg
pop
xlat
aaa
add
push
mov
test
cltd
ja
fnstenv
xor
add
push
sub
and
aam
jl
inc
mov
ja
cltd
pop
adc
jg
push
sbb
sub
and
pop
fldenv
pop
andl
outsb
add
inc
lret
sti
pop
lods
mov
pop
lods
test
jle
inc
pop
arpl
mov
sub
out
inc
or
add
leave
shll
mov
movsl
push
and
mov
push
xchg
xor
and
pushf
aas
sub
mov
fstl
mov
xor
adc
jb
xchg
mov
pop
nop
cs
je
xchg
faddl
scas
ret
mov
ljmp
or
jecxz
or
push
and
je
dec
shrb
test
and
pop
sarl
jo
and
loopne
mov
movsl
cld
gs
andb
mov
int3
and
jmp
rorl
cld
das
mulb
cmp
addr16
push
mov
sbb
mov
xor
mov
arpl
bound
mov
mov
mov
mov
pop
fdivrs
fdivrl
or
jbe
scas
ja
pop
fmuls
sbb
mov
fidivrs
push
add
sti
aaa
jge
mov
not
ss
mov
and
xchg
js
mov
sbb
xchg
in
out
xchg
xchg
inc
push
cmc
pop
mov
dec
xor
jo
dec
mov
add
mov
sbb
dec
sti
ds
dec
xchg
push
push
sub
dec
outsb
push
loop
sbb
sub
cs
sbb
push
out
pop
xchg
and
scas
scas
pop
out
sbb
nop
sbbl
xchg
add
insl
cmp
std
arpl
test
push
and
sti
push
pop
les
mov
icebp
pop
jge
cmp
or
sahf
jns
sub
cmp
in
fcompl
pop
lock
lods
test
hlt
sub
xchg
push
aas
xchg
inc
fsubrp
sub
and
rorl
data16
sbb
in
jno
push
inc
inc
outsb
fnstcw
dec
pop
or
mov
mov
jecxz
fdivr
jne
pop
pop
or
sub
popf
sbb
or
or
jae
je
and
les
and
insb
cmpsl
jbe
cli
fdivrl
loope
cli
and
ficompl
shlb
inc
sbb
mov
mov
sarb
test
add
lock
in
dec
xchg
jb
pop
int
push
test
pop
jb
pop
or
out
jnp
cmpsb
push
les
clc
in
jp
hlt
lahf
leave
arpl
lret
push
dec
sbb
and
xor
ret
jmp
insl
test
push
xchg
cmp
shll
add
pop
dec
cmp
sub
mull
xchg
push
data16
sbb
add
daa
daa
test
inc
int3
ret
push
fidivrs
std
es
loopne
in
pop
dec
out
or
mov
rorl
pop
into
bnd
mov
sbb
scas
add
fxch
xchg
lret
fsubr
xchg
add
loopne
dec
adc
and
sbb
pop
movsl
mov
je
arpl
sbb
inc
outsb
les
stc
jp
inc
push
mov
jmp
and
add
push
stos
xchg
roll
push
jae
xor
push
jecxz
iret
mov
cmp
cmp
mov
xchg
mov
mov
ja
int
add
sar
fcmovnbe
sub
leave
xchg
mov
and
sarb
fcos
jbe
mov
sahf
jns
add
push
mov
and
je
jb
daa
lcall
cs
cwtl
lds
shr
lock
fsubrl
sub
cs
mov
inc
mov
mov
add
sub
push
mov
sbb
jo
imul
movsb
sub
ds
and
mov
sti
lret
mov
fisttpl
cwtl
pop
pop
push
mov
xor
js
imul
int
scas
mov
jp
xor
popf
stos
xchg
mov
movl
push
cmp
push
popa
mov
fsts
lret
mov
jnp
mov
pop
stc
arpl
repnz
fwait
mov
pop
jns
mov
jnp
mov
ljmp
xor
fists
loopne
xchg
icebp
xchg
lcall
enter
jae
push
lds
push
aas
mov
dec
sahf
dec
jnp
push
add
je
shrb
inc
adc
cmp
adc
push
out
mov
mov
insb
jns
sbb
clc
inc
inc
dec
rcl
rcl
insl
push
push
pop
add
inc
xchg
imul
or
jle
loope
mov
push
lcall
mov
mov
in
fwait
mov
pop
dec
jo
jp
xor
imul
jg
imul
sbb
add
leave
out
leave
mov
mov
cwtl
pop
push
mov
into
sbb
stos
xchg
ljmp
cltd
movsb
int
sbb
fs
inc
cmp
jnp
imul
and
inc
cmpb
call
mov
lods
adc
stos
sub
cmp
fwait
mov
iret
lods
inc
mov
add
test
push
jb
xor
and
ret
xchg
mov
sub
out
mov
mov
mov
jle
pop
nop
les
ret
in
mov
fsts
mov
pop
sbb
mov
add
push
cli
je
adc
sbbb
add
nop
push
sbbl
aam
inc
or
cmp
divb
xor
xchg
out
push
in
xor
cmp
dec
push
mov
test
or
add
sarl
leave
jge
rcll
add
xchg
jecxz
loopne
mov
lods
or
sub
daa
sbb
push
cmp
push
mov
inc
das
dec
pop
and
sbb
scas
push
aaa
inc
les
jl
sbb
xor
push
testl
and
push
mov
mov
adc
mov
push
outsb
les
test
add
jmp
ds
add
ret
das
lock
repnz
imul
mov
mov
call
aaa
sbb
dec
icebp
adc
xchg
repz
lea
inc
test
cmc
movsl
and
lds
push
fstl
fldenv
pop
cwtl
adc
add
sub
stc
aam
and
add
lret
sti
jmp
inc
arpl
pop
mov
xchg
add
pop
icebp
sub
gs
rorb
leave
push
lret
rol
cmp
popf
pop
adc
add
and
mov
shll
fnstcw
push
lcall
loope
cli
mov
cwtl
dec
movl
rcl
leave
push
lock
daa
push
addr16
mov
xor
xor
enter
sbbb
pop
lret
jo
or
pusha
sbb
xor
pop
jmp
xchg
mov
lds
inc
movsb
rcll
imul
jp
add
pop
jno
outsb
cmp
test
and
sub
push
adcl
xlat
test
scas
outsl
jnp
adc
adc
xlat
jbe
inc
xchg
xchg
inc
std
sbb
test
sbb
pop
fidivrs
sbb
bound
decl
adc
sub
lea
lcall
mov
xor
daa
aas
push
pop
fs
in
flds
in
lcall
push
ret
dec
add
pop
pop
pop
aam
pop
lods
and
sahf
js
adc
jle
dec
or
adc
and
and
imull
jno
cmp
iret
incb
pop
cltd
enter
scas
or
das
jns
sbb
in
sti
orl
dec
and
fiaddl
mov
pop
lock
cwtl
inc
cld
inc
xor
dec
ljmp
push
jmp
sarl
test
mov
and
or
imul
icebp
out
inc
nopl
fstpl
push
xor
mov
and
or
jno
cmp
adc
in
push
inc
and
mov
mov
fsubrp
out
xor
pop
push
sub
sbbl
and
sahf
cmp
push
hlt
or
sub
mov
mov
shr
xchg
and
rorb
mov
mov
mov
nop
frstor
stos
dec
mov
int3
add
sbb
std
push
int3
pop
xchg
xor
cmp
rorl
insb
dec
sub
push
js
push
insl
movsb
and
insb
lea
add
mov
xor
mov
dec
adc
imul
lahf
out
imul
movsb
testl
testl
lea
jg
fistl
dec
aad
dec
or
sub
push
mov
dec
in
xchg
jge
and
pusha
insl
insb
jns
add
jge
mov
xchg
mov
fdivrp
inc
stc
test
jle
bound
mov
aaa
mov
mov
jne
out
insl
pop
mov
sbb
popf
cmp
loop
or
loop
cmpsb
mov
or
rol
mov
pop
dec
leave
add
mov
std
adc
push
mov
leave
and
adc
cltd
mov
add
jns
xor
fiadds
push
cwtl
stos
mov
xor
fsubl
mov
push
lcall
orb
jno
and
shlb
sarl
mov
stos
outsb
aas
inc
test
inc
xor
test
adc
pop
xchg
ss
mov
in
xor
mov
sbb
xchg
push
mov
cmp
in
bound
push
jecxz
inc
or
mov
leave
pop
lock
out
push
aad
xor
out
mov
jae
sub
add
imul
xchg
cltd
pop
inc
arpl
sbb
mov
xchg
pop
push
pop
sub
lcall
mov
pushf
mov
pop
and
jmp
cmpsb
sub
out
or
and
out
sub
jge
and
mov
xor
fmul
cwtl
ret
bound
rcll
or
jmp
cmp
jae
out
cmp
xchg
mov
std
movsb
imull
loop
lds
or
dec
push
jae
sbb
sbb
dec
stc
cld
xchg
insb
cltd
sub
jp
sub
lcall
jns
add
xchg
cmp
push
push
lock
stos
cmp
negl
in
mov
add
jnp
std
lahf
inc
faddl
fistpl
iret
xor
push
stc
jne
dec
jo
sub
icebp
mov
fisubrl
mov
mov
clc
jno
leave
push
xor
and
xor
data16
test
leave
sbb
loopne
je
mov
or
loop
orl
inc
dec
rcrl
jmp
sub
cltd
and
fs
lea
inc
cltd
fsubs
sub
xchg
jge
pop
rorl
and
pop
shlb
xchg
adc
pop
mov
int3
rcll
inc
sbb
roll
test
jecxz
jp
loop
popa
loope
cli
aad
ss
sti
sub
xchg
or
loopne
sub
and
pushf
add
mov
mov
sbb
fwait
negb
cvtps2pd
jecxz
lcall
xor
push
jnp
cmc
incl
lds
fstpt
sti
jmp
fwait
adc
cwtl
mov
inc
cmp
insb
push
ds
cmp
inc
imulb
push
push
and
dec
sub
inc
mov
call
and
call
mov
icebp
xchg
mov
divl
dec
add
aam
xor
jb
cmp
add
fwait
cs
lock
lods
mov
mov
cmp
pop
ret
xchg
fisubrl
add
inc
add
fidivrs
jns
cmpsb
ret
push
add
lods
xlat
push
or
dec
mov
sti
out
daa
push
jge
in
mov
xor
fdivl
sbb
xchg
cmpsl
imulb
scas
enter
xor
decb
faddp
rcr
mov
lds
cmpsb
mov
mov
mov
xchg
jge
mov
sub
and
rclb
xchg
inc
aas
lcall
fmull
xor
add
sbb
mov
clc
dec
lcall
sbb
inc
stos
or
push
pop
imul
incl
ds
sub
in
mov
jp
lret
sbb
inc
cmp
lahf
fisubrl
jbe
cwtl
push
pop
jne
cmp
push
cld
or
sub
sub
xor
dec
and
push
dec
jno
insl
in
jnp
inc
add
mov
icebp
push
shl
and
sbb
mov
push
aaa
add
xchg
mov
fwait
pop
or
lds
sub
mov
stos
dec
cmp
pop
xchg
adc
sub
push
push
ds
jle
les
jecxz
cmpsb
in
dec
stc
loop
cwtl
mov
sub
jnp
add
sbb
add
sbb
add
in
inc
lret
pop
fcmovne
cwtl
mov
mov
and
or
negb
inc
inc
into
inc
cmp
adc
scas
jae
jp
test
xchg
xrelease
ss
cmpb
roll
push
xor
mov
or
sub
sub
add
jbe
test
clc
lea
mov
and
mov
dec
rcrl
aaa
ror
scas
and
mov
imul
cmp
mov
cltd
dec
pop
in
xchg
mov
and
popa
sbb
or
and
jae
lahf
lcall
dec
in
xor
push
or
dec
lods
fidivl
aam
sbb
mov
mov
pop
xchg
aaa
pop
daa
push
out
push
and
xchg
jb
fs
jl
shll
in
xor
sbb
push
lret
xor
dec
ror
test
dec
arpl
arpl
ljmp
lcall
adc
aam
lret
jle
ret
lods
in
adc
pop
cltd
loop
hlt
out
push
sbb
adc
dec
loopne
and
frstor
outsl
dec
adc
gs
int
pop
push
aad
loop
pop
sub
jp
fmuls
push
add
add
or
sub
std
adc
test
cmpsb
add
cmp
or
mov
hlt
fstpl
outsb
ds
or
out
cs
incl
or
push
push
loop
test
push
mov
cmc
dec
sub
in
push
mov
pop
jmp
clc
pop
xchg
jle
xor
sub
nop
movsb
lret
push
mov
stos
test
fmul
xor
mov
lods
pop
mov
or
jns
ret
fcomps
pop
ss
test
mov
or
repz
in
mov
mov
pusha
pop
mov
pop
mov
dec
sbb
mov
dec
sub
enter
lret
lock
add
data16
pop
mov
inc
adc
cs
incl
movb
cmpsb
xor
int
sbb
sti
stos
inc
cmpb
push
mov
mov
test
pop
nop
xchg
data16
jl
psadbw
push
cmp
add
sub
inc
lahf
js
das
cmp
pop
out
rcrb
aad
fimuls
sub
ss
fimuls
or
insb
pop
xor
repnz
xchg
loopne
lds
fdivrl
orb
call
jge
popf
or
push
xchg
and
xchg
es
sub
outsb
mov
in
idivl
movsl
sbb
pop
imul
inc
jecxz
call
js
sub
mov
pop
jl
faddl
popf
in
xchg
adc
inc
stos
imul
xor
jmp
sbb
sub
lcall
mov
and
dec
jle
into
dec
mov
pop
cmp
in
insb
movsl
cmp
inc
cli
or
dec
out
sub
add
call
call
cli
jnp
sub
pop
iret
enter
dec
popa
das
and
daa
jae
clc
data16
mov
mov
fbstp
ficomps
shll
clc
cmp
testl
popf
imul
loop
xchg
dec
stos
cmpsl
mov
jbe
adc
dec
in
fdivr
sahf
enter
sbb
faddp
clc
mov
sbb
sbb
mov
sti
test
sbb
cld
xlat
les
or
dec
sbb
sub
dec
xchg
push
mov
pop
addr16
dec
mov
insb
cmpsb
decl
cld
test
je
pop
mov
scas
sbb
lods
adc
daa
jb,pn
fsubs
push
cmpsb
or
or
cmp
dec
jno
kxnorw
rorl
mov
andl
in
pop
pop
cmp
mov
dec
test
adc
test
push
ljmp
jmp
fcom
xchg
lods
das
mov
mov
mov
add
jge
mov
sub
pop
pop
pop
adc
dec
outsl
je
jecxz
adc
scas
orl
icebp
jne
mov
inc
mov
ja
xor
dec
cmp
push
push
xchg
or
mov
sbb
mov
dec
jle
outsl
cmp
push
popa
nop
mov
cmp
dec
mov
and
in
mov
dec
mov
xchg
fisubrl
jo
lret
std
cmp
dec
es
in
pop
jb
imul
roll
pop
inc
sub
push
push
cwtl
jnp
repnz
ljmp
mov
xchg
pop
sub
sub
and
xchg
inc
mov
xchg
cmp
decl
mov
stc
idiv
jb
aaa
inc
or
outsl
pushf
xchg
adc
sub
stos
daa
adc
jmp
in
push
inc
cmp
in
mov
mov
inc
sbb
pop
mov
aam
fs
xor
repnz
dec
push
mov
pop
mov
daa
fsubr
cltd
lret
inc
lods
test
popa
push
cli
inc
ret
scas
xchg
push
jecxz
into
fadd
bound
icebp
ja
insb
lahf
out
fistl
mov
mov
int
sti
ficoms
imul
popf
repnz
or
cltd
pusha
inc
test
add
pop
adc
jmp
out
outsb
insb
insl
loopne
xor
pop
or
pop
in
add
ds
arpl
cmp
dec
adc
cmp
pushf
ror
or
out
mov
sbb
je
sbb
or
add
iret
xchg
adc
rcll
mov
push
adc
cwtl
shl
aam
xchg
movsb
push
pop
addr16
fidivs
push
jno
sub
cltd
dec
lcall
xor
mov
push
mov
or
cmpsl
ds
push
mov
cmp
dec
popa
mov
mov
xchg
or
aas
xchg
icebp
mov
adc
push
dec
jb
push
hlt
imul
xchg
mov
dec
int3
inc
and
cli
outsl
push
addl
pop
push
mov
inc
aad
push
jo
aas
or
arpl
ljmp
cmp
push
xchg
pushf
in
iret
cmpsb
loopne
inc
fldenv
jne
movsb
mov
fs
xchg
loop
fimull
jecxz
shll
cmp
lret
mov
mov
orl
cltd
rcrl
sub
xchg
jle
imul
popf
mov
or
fistpl
sub
lahf
mov
push
fdivs
or
iret
add
fdivrl
mov
aaa
push
adcl
addr16
sbbl
sub
mov
xor
push
mov
sub
adc
out
int3
sub
jge
cmp
lahf
shl
loop
jmp
or
pop
stos
or
andb
out
push
or
scas
loop
psubusb
jae
dec
xor
and
movsb
stos
rclb
adcb
mov
bound
add
or
mov
and
enter
sbb
cmpsb
js
test
repnz
mov
in
inc
test
pushf
scas
adc
ds
cmp
push
pop
lcall
out
adc
cmp
adc
cmpsl
sbb
push
sbb
hlt
repnz
xor
sub
or
hlt
lds
scas
mov
enter
pop
dec
cwtl
jp
push
dec
jo
dec
sub
gs
test
test
lods
aas
xchg
pop
test
in
clc
pushl
loop
fcom
shr
pop
inc
sub
pop
xchg
push
jg
lock
lea
inc
icebp
cmp
sub
aad
in
dec
imull
mov
mov
mov
push
loope
inc
jp
add
mov
fidivrl
jg
fwait
xchg
pop
mov
scas
shlb
scas
mov
pop
cmp
ret
jmp
mov
pop
in
jo
outsl
stos
cmp
movsl
andl
jne
mov
inc
push
hlt
inc
ds
gs
xchg
mov
fisttpl
out
fcomps
jp
push
push
je
pop
repz
clc
rorl
idivb
cwtl
or
sbb
les
jno
cmc
jle
mov
out
aas
cs
push
lcall
scas
stos
add
push
push
repz
dec
icebp
cli
push
insl
pop
pop
fisubrs
jno
movsl
loop
fsubl
push
xor
cmp
add
insb
cmp
adcb
addb
xchg
xlat
sub
pop
mov
outsb
and
dec
pop
add
pop
in
idivl
adc
xor
jg
loope
add
adc
ret
ret
orl
jo
xor
jl
inc
loop
aad
cmpsb
jmp
pushf
int
es
or
and
and
vmwrite
out
mov
jge
cli
clc
mov
clc
in
clc
roll
mov
lock
aam
ljmp
pop
jno
cltd
addr16
aaa
and
pop
xchg
test
stos
adc
push
mov
jle
iret
cwtl
jne
lods
into
ss
or
sub
sti
movsb
scas
add
in
loopne
ds
enter
adc
and
or
dec
insl
cmc
ss
ret
cmp
sbbb
sub
dec
aam
pop
sti
or
xor
push
mov
insl
mov
inc
and
push
jne
dec
dec
jge
jp
lods
push
fadds
pop
fsubrl
push
fdivl
xchg
fldt
sarl
sahf
or
xor
imul
sub
cwtl
inc
adc
mov
sub
mov
arpl
mov
cli
mov
xchg
sub
arpl
xchg
push
add
push
xchg
int3
setl
jge
imul
xor
push
xchg
je
arpl
mov
mov
cmp
loopne
out
xor
out
in
andl
jle
mov
xchg
inc
loope
mov
dec
ds
femms
push
cmp
jmp
data16
or
fildl
scas
fwait
nop
js
jge
mov
pusha
pop
mov
inc
xlat
pushl
mov
decl
pop
ljmp
or
sub
push
or
pop
fmuls
inc
xorl
inc
popa
inc
push
scas
out
or
adc
xor
adc
adc
dec
in
adc
and
lds
aad
push
dec
ret
mov
add
loop
rcrl
sub
mov
aas
pop
push
sbb
jne
push
fs
mov
in
inc
xchg
fimuls
lods
add
ja
pop
mov
dec
stc
rolb
or
mov
xchg
test
decb
dec
jae
adcb
xchg
mov
std
fldenv
lahf
mov
dec
stc
mov
addb
test
jb
mov
test
lods
data16
lcall
mov
sbb
outsl
stc
push
pop
lea
cmpsb
push
test
inc
ret
into
cmp
je
das
dec
add
inc
fistpl
add
push
cmp
add
pop
fsubrl
movsb
sbb
push
adc
enter
push
dec
inc
mov
leave
jbe
mov
icebp
and
xchg
rcrl
jae
scas
mov
add
sub
jno
push
inc
aaa
mov
or
mov
mov
repz
add
test
push
repnz
xor
jne
dec
add
and
aas
testb
sub
mov
in
pushf
icebp
dec
add
popa
insb
adcb
push
setb
xchg
in
out
lret
cmp
cs
fidivl
pop
cli
leave
sbb
leave
jae
xor
push
xor
sti
pop
aad
push
lret
test
rorl
aas
outsl
les
add
inc
pop
adc
or
cmp
fidivrl
inc
cmp
sbb
xchg
dec
lods
cmp
inc
lahf
cwtl
xor
iret
jb
mov
ror
add
in
fdivp
sub
xchg
xor
je
imulb
subl
or
insl
cmp
outsl
jno
inc
out
testl
push
sbb
jecxz
hlt
mov
insb
pop
add
lds
outsb
imul
jmp
push
sub
adc
sub
or
pop
dec
and
pop
ljmp
iret
pop
outsb
pusha
outsb
scas
inc
or
xor
cvttps2pi
sub
adc
aaa
fstpl
or
addl
push
out
push
or
mov
ret
stos
sbb
sub
lds
ja
sbb
call
sub
les
fnstcw
mov
sub
or
lret
and
fwait
pop
and
mov
add
xlat
sbb
add
inc
xchg
xchg
cmp
js
xchg
xchg
push
test
xor
or
stc
aad
push
les
jno
lahf
push
mov
pop
in
dec
leave
lcall
repz
jp
xchg
cmpsb
rcrl
xchg
lds
icebp
lods
outsb
negb
sub
adc
movsl
cmpsb
lods
sbb
sub
cmc
sub
popf
flds
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
call
xor
xor
dec
mov
jmp
adcl
add
movzwl
xor
mov
mov
mov
xor
mov
or
mov
orl
xor
movl
add
movl
imul
dec
mov
andl
xor
adcl
add
cmp
mov
mov
push
movl
je
addl
mov
add
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
sub
mov
neg
mov
subl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
jmp
rorl
xchg
mov
pop
jmp
dec
aas
inc
xor
pusha
leave
jp
adc
jp
and
lea
in
xchg
rcrl
mov
out
pop
out
stos
jae
mov
int3
add
scas
mov
dec
sub
xchg
shll
iret
mov
jle
inc
pop
test
push
push
mov
sbb
cmp
xchg
dec
test
rorb
pop
mov
sub
lahf
pop
adc
sti
push
fwait
pop
cs
dec
js
sbb
sahf
stc
shrl
jo
scas
mov
mov
xor
jmp
xor
pop
sbb
adc
js
xchg
mov
les
adc
mov
xor
daa
popa
cmpsb
stos
out
arpl
imul
nop
pop
arpl
lcall
push
outsl
enter
data16
jbe
addr16
mov
xor
adc
mov
divb
data16
fneni(8087
cmp
pop
dec
xor
mov
jle
sbb
mov
aam
xor
mov
jmp
cmp
cmpsl
xor
test
shlb
xor
lcall
popa
jne
lcall
fcomi
push
aad
lret
xor
fsubrs
cs
sub
lods
test
in
jl
inc
fcmovne
fldl
rcll
frstor
nop
and
pushf
cmp
cmpsl
mov
bound
insb
lods
cmc
mov
jo
imul
cmp
sbb
ret
daa
push
lock
inc
jle
push
pop
and
jg
mov
addr16
xor
lods
or
rcrb
jl
andl
enter
mov
ret
repz
sahf
out
or
adc
or
les
test
in
das
push
popf
dec
cmp
or
aam
xchg
push
pop
inc
mov
inc
insb
cmp
push
and
out
popf
jmp
inc
pop
iret
iret
or
aam
dec
dec
cmp
sub
mov
mov
jecxz
fidivs
xchg
or
pop
dec
hlt
pop
inc
insb
sbb
movsl
inc
faddp
faddl
pop
mov
shr
in
mov
popf
int3
mov
pop
cmp
mov
mov
je
and
mov
dec
jns
push
sarl
add
sarl
cmp
js
push
xchg
jle
sbb
or
inc
into
push
pushf
leave
ljmp
addr16
stos
mov
aad
mov
add
pop
mov
mov
pop
mov
std
daa
sarb
rclb
sbb
popf
jne
add
dec
jge
imul
sbb
outsb
jg
lea
adc
dec
jne
xor
dec
mov
cmp
loop
xor
daa
adc
lret
jbe
add
xor
sbb
sbb
xchg
cmp
xchg
xchg
fdivrs
aas
mov
icebp
mov
rcll
mov
xchg
shrl
inc
rcpps
adc
mov
sub
roll
push
jno
and
xor
lds
adc
daa
int
push
orl
mov
sti
jmp
pop
or
rorl
mov
xor
dec
scas
das
mov
clc
shl
mov
or
mov
bound
repz
sbb
sbb
imul
aad
lahf
pop
insl
in
push
push
aaa
xchg
mov
or
push
int3
scas
imul
jecxz
pop
mov
loop
icebp
test
xorb
pop
xor
loope
repz
into
scas
int
test
movsb
and
sub
lret
push
movsl
enter
or
int
jle
rcll
out
cmp
lods
push
sbb
addb
sti
out
iret
testl
aam
cmp
data16
cli
outsb
cli
pop
std
stc
push
in
mov
loop
fstpt
adcl
sub
out
jo
push
je
sbb
add
push
je
xchg
mov
fbstp
ja
testl
and
loopne
or
mov
jmp
sti
test
in
or
arpl
fmulp
cmc
sub
mov
sub
ja
add
sbb
jl
call
cmpsb
pop
arpl
push
push
popa
in
int3
jbe
mov
push
cmp
push
insl
repnz
int
push
push
inc
jae
mov
push
inc
sub
sub
cmp
dec
cmp
out
sbb
push
dec
inc
pop
testl
sub
adc
les
ja
insb
lods
jp
xchg
imul
movb
scas
test
orl
adc
scas
cs
or
dec
pusha
or
popa
jle
js
push
sarb
pop
adc
dec
clc
push
sti
lds
gs
mov
jmp
inc
enter
mov
fldl
push
cmpsl
test
dec
ret
and
daa
dec
mov
shrb
test
dec
cs
push
out
lods
push
mov
ja
jno
out
push
jp
mov
les
dec
lcall
mov
xor
sbb
cwtl
out
scas
xchg
xchg
nop
insl
lahf
lods
add
roll
push
push
dec
out
into
or
rclb
jno
push
and
mov
rorl
shll
iret
fisttps
lock
cmp
rcrl
pop
push
jno
push
shlb
jp
pop
adc
jae
push
clc
and
fmul
mov
nop
imul
out
sub
cmpsb
out
addl
orl
pushf
outsb
xchg
int
add
mov
loope
ss
pop
test
jb
cmpsb
and
repnz
shlb
pop
aaa
inc
jmp
fisttpl
lcall
mov
sub
and
cltd
iret
jno
scas
lods
sub
push
fcomps
aaa
push
jle
or
cmpsl
fs
pop
in
mov
add
movsl
mov
push
jns
push
stc
cmp
in
mov
xor
out
cltd
adc
cmp
xor
mov
mov
xchg
adc
je
faddp
cli
push
mov
lods
notb
xor
nop
pop
call
xor
add
ja
add
cli
or
pop
jnp
adc
das
mov
repz
shlb
sahf
les
mov
leave
xor
sub
int3
les
push
sub
mov
rol
push
rcrb
data16
rcll
push
adc
ja
dec
jae
es
xchg
dec
pop
ret
fsubrl
dec
cmp
mov
push
pop
pop
call
push
das
aam
sub
dec
ljmp
lret
out
mov
pop
bound
mov
bound
fwait
call
out
movsl
dec
popa
loopne
jecxz
jo
push
lcall
jmp
inc
pop
dec
sub
xlat
mov
clc
aas
lret
leave
mov
arpl
out
jge
sti
pop
sahf
cs
pop
ja
in
sti
push
mov
push
cmp
lcall
cmc
arpl
cltd
push
into
insb
imul
outsl
push
shr
add
push
mov
arpl
xchg
scas
lods
loopne
outsb
or
fdivrl
mov
jns
mov
incb
bound
lock
les
add
cmp
mov
movsl
ja
nop
pop
dec
pusha
ficompl
lahf
add
ret
fs
mov
push
repnz
jmp
arpl
clc
push
jge
adc
mov
mov
sub
dec
pop
gs
cmp
push
jmp
mov
xchg
inc
movsl
shlb
cmp
test
popa
sbb
and
jo
adc
ljmp
cmp
mov
mov
cmc
scas
jo
cld
push
mov
cmp
enter
mov
fildl
jne
push
inc
dec
pop
dec
lock
les
jmp
enter
into
push
pop
lods
popa
ss
xchg
adc
jne
push
daa
xchg
jl
adc
xor
sub
mov
outsb
xlat
loope
sbb
push
mov
mov
cmp
addr16
ret
mov
push
mov
jmp
jb
or
jb
xchg
mov
insb
sbb
push
jp
adc
pop
dec
sub
dec
scas
pop
cltd
add
je
mov
fsub
out
cmpb
adc
mov
shlb
cmpsb
sub
sbb
fs
jo
pop
inc
jge
fildl
jbe
iret
fildl
add
aas
call
jg
lahf
xchg
xor
jecxz
add
dec
stos
mov
add
scas
adc
fsubrp
pop
and
rclb
jbe
jne
cwtl
sarb
jg
xchg
xor
xor
sbb
xor
jmp
fistps
or
movsb
xor
dec
out
cltd
sti
mov
dec
push
outsl
out
dec
lods
sbb
push
sbb
xor
clc
pop
push
push
arpl
rclb
and
cmpsb
adc
xchg
loope
jmp
jb
aam
testl
inc
and
cld
lret
fisttpll
push
push
orb
les
packssdw
pop
pop
cli
popf
in
jecxz
popa
lahf
jbe,pn
shlb
call
fsubrs
mov
xchg
pop
out
data16
push
lods
arpl
nop
sub
lret
mov
aam
mov
ja
daa
lock
icebp
stos
dec
sbb
cmp
lods
popf
xchg
dec
and
and
dec
jl
jecxz
inc
iret
xchg
popf
addr16
pop
xchg
fs
out
push
sub
jbe
insb
sub
and
clc
std
aaa
enter
sahf
mov
jne
out
dec
xor
add
add
adc
cmp
sub
inc
movsl
addl
mov
js
cltd
fidivl
mov
xchg
hlt
push
std
lods
ja
icebp
movsl
out
add
bound
mov
xchg
int
fdivrs
lcall
adc
sti
inc
inc
push
add
sbb
fistl
out
mov
and
cmc
add
fwait
inc
outsb
testl
add
dec
not
out
les
add
cmp
lods
push
add
loop
cmp
in
fidivs
loope
cmp
movsb
aaa
ss
xor
ret
dec
outsb
and
dec
fcomp
jbe
ret
add
mov
andb
pusha
movsl
sub
sub
je
and
cmp
inc
lds
dec
out
pop
mov
xlat
jecxz
adcb
in
mov
cmp
arpl
and
mov
xchg
rorb
inc
mov
sub
xchg
icebp
sbb
fsubrp
jno
clc
dec
xchg
jp
xchg
out
xor
out
std
jo
mov
jmp
jecxz
pop
ret
and
mov
into
gs
dec
sbb
xchg
cmp
cmp
in
fdivl
jmp
inc
mov
stc
push
and
daa
stos
and
adcl
mov
out
mov
dec
das
inc
out
arpl
inc
dec
cmpsl
inc
or
pcmpgtw
iret
sti
cmpsb
cmp
pop
lds
and
dec
sub
inc
pop
jle
pop
sti
movsb
or
cld
outsb
pop
dec
jle
imul
or
pop
inc
lret
push
mov
add
dec
xor
mov
aas
lds
cmp
jmp
inc
adc
sbb
and
sub
xor
jae
inc
jg
rcll
xchg
in
negb
pop
loop
add
popa
and
and
js
xchg
cmpsl
fsubs
adc
cmp
fnstsw
daa
xchg
cmpsl
sar
lahf
in
out
cwtd
testb
lret
sahf
or
out
sub
mov
add
nop
sub
das
cwtl
fsubrs
jae
xlat
mov
pop
sti
add
jp
pop
nop
jo
sub
mov
xchg
jle
mov
pop
sub
imul
or
jle
outsl
pop
fwait
or
je
mov
sub
iret
pop
sbbb
notb
add
int3
push
lret
inc
xor
es
jg
loopne
sbb
jae
add
or
sbb
test
add
popf
mov
add
lods
out
stos
xchg
fcoms
lcall
pop
out
lahf
test
fstpl
mov
lods
jo
sbb
pop
sub
jno
int3
jmp
jle
scas
int3
into
mov
shr
out
mov
test
sub
cltd
sbb
pusha
xchg
repnz
shrb
mov
cli
ljmp
sub
push
mov
pop
pop
ret
push
pop
std
pop
push
xchg
cwtl
mov
rcll
hlt
xor
lret
mov
pushf
mov
into
fdivp
stos
xor
dec
or
mov
scas
cwtl
aaa
jns
decl
push
add
aas
mov
cltd
les
cmp
or
ja
xchg
adc
rcrl
loop
adc
mov
mov
pop
lret
push
mov
fsubs
pop
pop
mov
data16
add
sahf
inc
and
mov
cli
arpl
push
push
jnp
movhps
push
popa
dec
inc
sti
sarl
sub
rolb
sub
int
dec
ja
lods
mov
dec
dec
jge
fsts
call
loop
dec
ljmp
push
cmp
mov
xor
dec
sub
ror
adc
push
push
cmpsb
leave
and
mov
dec
shrb
push
je
arpl
ror
lret
jo
lock
das
sbb
ds
test
lret
aad
sarb
adc
insl
stc
leave
shr
stos
push
sbb
mov
loopne
xor
push
add
jmp
adc
icebp
pop
or
stos
mov
fmull
popf
dec
pushf
jns
sar
sbb
inc
dec
rcrb
test
xor
fildll
das
sahf
lahf
xchg
push
cmp
mov
sbb
jmp
aaa
dec
fs
dec
pop
aam
ror
loopne
stos
in
push
mov
jbe
ja
mov
imul
inc
cmp
mov
ja
sbb
push
sahf
adc
and
movsb
aas
icebp
repnz
js
pop
das
cmp
mov
push
xchg
cmp
sahf
xor
adc
popf
xchg
push
push
int
lret
mov
xchg
cmp
mov
in
fs
push
lds
shrb
inc
sub
dec
mov
int3
je
jp
in
andl
inc
adc
loope
rcrb
cmp
stos
movl
hlt
movsb
pop
pop
test
imulb
jno
test
mov
and
je
sbb
or
pop
fimuls
repnz
addr16
fbstp
fcomps
cmp
icebp
lds
sub
mov
sub
push
inc
lahf
ret
dec
jns
stc
sbb
addr16
fldcw
jl
cmp
pushf
push
out
jg
or
lret
xchg
pushf
push
mov
mov
repz
insb
kmovb
xchg
xchg
sbb
pop
sbb
dec
jle
pop
xchg
mov
add
push
pop
or
mov
mull
sbb
add
daa
pop
scas
dec
lret
add
imull
mov
jg
or
inc
shlb
ficoms
cmp
push
xlat
js
ret
in
ret
mov
addb
arpl
sbb
cld
mov
sub
inc
mov
inc
mov
fwait
add
mov
fisubl
mov
sub
and
jp
dec
shlb
mov
data16
loopne
push
jo
pop
pop
mov
lods
lcall
mov
loope
out
mov
orl
xchg
das
push
testb
xchg
xchg
jnp
int3
and
rcrl
jne
mov
sti
out
mov
daa
sbb
xorb
cli
or
loop
cmc
aaa
mov
push
and
in
mov
inc
xor
sbb
adc
or
or
out
jge
mov
idivl
inc
or
mov
es
dec
in
mov
xchg
mov
inc
push
sbb
ljmp
inc
iret
es
add
pop
outsl
in
push
repnz
stc
clc
cwtl
lds
hlt
jge
sub
sahf
xor
loop
fs
push
mov
and
cmp
add
addl
push
xchg
push
loopne
jmp
sbb
add
sbb
dec
mov
insl
rcll
test
mov
xchg
addl
rclb
adc
push
jbe
int3
or
push
inc
or
imul
and
mov
rcll
repnz
jbe
das
fs
jl
jl
mov
leave
insb
cmpb
popf
daa
push
adc
sub
xlat
xor
aam
pop
lea
sbb
jl
cwtl
test
xor
stc
mov
mov
mov
scas
insl
lods
and
xor
mov
and
inc
mov
push
mov
dec
sarl
lock
push
cwtl
inc
and
mov
imul
cld
pusha
dec
fiaddl
sub
pop
es
pop
repz
pop
sub
add
jno
mov
xchg
dec
mov
cmpl
and
adc
lods
or
jg
adcl
sub
pop
pop
nop
out
fst
js
push
mov
mov
jl
in
pop
aas
xchg
adc
imul
pop
hlt
lea
imul
and
push
jno
ror
pop
imull
int
mov
mov
leave
arpl
gs
adc
cmpsl
or
mov
ficoms
in
and
push
js
lea
cltd
push
xchg
inc
push
stc
int
dec
add
jbe
cmp
sub
push
mov
sbb
call
jp
push
jle
leave
mov
stos
fstpl
push
mov
out
loope
decb
int
sub
lock
pop
rorb
add
test
cmp
inc
pop
fmuls
je
out
aad
or
xchg
or
aas
js
dec
cmc
push
sub
sub
add
mov
add
ret
hlt
cmp
mov
mov
add
into
cmp
xchg
das
dec
push
pop
out
add
imul
push
mov
mov
push
xchg
fistl
push
int3
xor
or
push
es
cmpsl
xorb
dec
loopne
jl
jae
outsb
out
sbb
cmp
mov
cpuid
das
push
mov
sarl
cmp
mov
cmpsb
push
enter
cmpsb
stos
mov
pop
xor
jecxz
xor
jbe
xchg
mov
adc
pop
pop
inc
cwtl
scas
shll
mov
int
aaa
cltd
sbb
mov
and
inc
add
jle
in
lret
and
jl
adc
ret
lcall
dec
inc
sub
jg
adc
loopne
pop
mov
imul
push
repz
in
xchg
int3
pushf
push
bound
and
mov
ret
mov
push
dec
aas
jle
lock
xchg
shll
mov
daa
ficomps
subl
pop
mov
push
inc
xchg
cmpb
sbb
push
push
push
out
mov
jmp
sub
xlat
jno
add
xor
test
push
les
stos
and
inc
sbb
inc
int
push
sub
outsb
ficompl
cld
adc
adc
or
cmovb
aam
fwait
sbb
cltd
add
test
jmp
and
arpl
fimull
xchg
mov
jo
push
jmp
test
fiaddl
ss
fdivr
in
sub
fildl
out
enter
xor
pushf
xor
lds
shlb
shlb
inc
fdivr
lcall
sbb
push
jnp
int
pop
aaa
jl
ret
xor
sbb
pop
loopne
in
sti
dec
push
adc
and
dec
rcrb
cmp
fs
lahf
fdivs
mov
cwtl
negl
jge
mov
and
mov
ja
pusha
sub
push
or
jbe
lds
mov
cld
and
dec
mov
roll
pop
dec
lods
add
sbb
call
or
testb
mov
pop
arpl
movl
or
mov
sub
out
pop
outsl
sub
mov
out
pop
orl
or
push
inc
or
test
jmp
mov
cmpsb
call
sbb
stos
ds
dec
out
jmp
scas
in
xchg
jb
xor
pop
jge
mov
dec
call
test
push
rolb
iret
pop
aaa
push
movsb
insb
sub
sbb
dec
stc
or
std
imul
pop
sub
leave
movsl
test
into
push
pop
push
leave
aam
mov
lods
loopne
mov
lea
rcll
dec
inc
pusha
in
into
fwait
cmpsb
je
imul
mov
mov
into
imul
not
shlb
adc
enter
mov
imul
mov
mov
pop
mov
aam
rcll
dec
xchg
hlt
xor
test
sub
out
dec
jo
cmova
aad
mov
or
sbb
jno
cmc
inc
mov
sbb
shlb
loop
jmp
xchg
icebp
adc
sub
insb
movsb
arpl
xor
or
push
fdivs
add
push
ja
shll
and
add
dec
aad
jmp
xchg
push
loop
push
adcl
xchg
adc
inc
sub
shl
cmpsl
call
jp
repz
inc
repnz
mov
lahf
cmp
addr16
repnz
in
cs
xchg
push
cmp
cmp
mov
ljmp
and
xchg
xchg
leave
xor
das
bound
subl
fdivrl
into
cmp
aaa
mov
jo
hlt
add
dec
std
inc
aad
in
cltd
push
push
xor
js
int3
sub
es
pop
imul
sti
jo
lret
xchg
out
adc
mov
ds
sbb
push
and
cltd
mov
pushf
jecxz
and
pop
cmpl
insl
cwtl
xor
ret
shll
repz
je
mov
arpl
imul
jb
adc
fcoml
xchg
in
roll
adc
xor
orb
out
out
adc
lea
out
lods
jae
adc
outsb
mov
insb
mov
pop
xchg
pushf
das
xchg
fs
popf
and
aam
xor
mov
mov
mov
cmpsb
in
cwtl
and
fldenv
jle
jnp
lods
push
jo
int3
jmp
pop
lods
scas
lahf
dec
jl
cmp
lcall
push
adc
test
or
jp
jae
pusha
mov
xor
jne
mov
jmp
cmp
aaa
lahf
push
test
jl
or
outsl
hlt
adc
es
xchg
sub
push
movsl
iret
sub
and
stos
ss
xlat
stos
add
ja
sbb
dec
jnp
or
loopne
pop
add
add
jae
fwait
xorl
adc
xchg
xchg
lods
data16
ds
and
sub
mov
push
nop
inc
and
sbb
rol
sbb
sti
jb
mov
jnp
lods
mov
push
inc
xchg
xchg
ljmp
movsl
mov
xchg
cmp
pop
repnz
rcl
or
rcr
sbb
in
inc
int3
xchg
or
mov
xchg
jecxz
jo
pop
dec
shr
rorl
mov
push
jge
pop
dec
cld
sarl
test
jmp
imul
adc
cli
jl
pushf
fwait
movsb
nop
lahf
sub
ret
inc
mov
popa
cmp
popl
fdivs
dec
adc
js
enter
or
in
push
mov
jae
sub
cmp
out
test
lcall
in
sbb
xchg
add
and
dec
lods
push
sbbl
dec
out
jmp
cmp
add
stos
arpl
lods
div
mov
inc
mov
inc
and
sub
cmp
cltd
adc
movsl
loope
add
lods
test
jmp
lcall
cmp
lds
out
adc
add
shlb
sbb
lea
inc
mov
xor
ljmp
arpl
cmp
cmc
aam
test
pop
xor
mov
jp
scas
lcall
ja
lahf
jmp
inc
js
sar
aam
cld
shll
and
and
pop
pop
cmp
cmp
int
popa
lahf
pop
sub
sub
push
adc
dec
xor
dec
stos
jl
inc
or
xchg
cmp
dec
mov
iret
nop
cmpb
mov
mul
adc
fiaddl
sub
sub
xchg
popf
push
inc
movsl
push
mov
out
loop
push
fwait
add
icebp
scas
lcall
lcall
inc
jo
imul
mov
cmp
mov
or
dec
int3
jge
and
stos
clc
mov
pop
leave
incb
movl
popa
mov
popa
nop
movd
mov
out
mov
in
jle
shrb
test
jmp
call
in
push
mov
dec
loop
rcrb
lret
push
mov
add
push
adcl
mov
jns
mov
xchg
aam
daa
ds
jg
jne
push
adc
mov
adc
push
xor
inc
jne
jecxz
int
mov
pop
das
lcall
pop
mov
mov
call
popf
xchg
mov
jne
sbb
and
stos
dec
add
add
cmp
popf
aas
hlt
xchg
inc
es
xchg
push
dec
mov
lret
das
stos
insb
adcl
push
cwtl
bound
or
pop
ficoms
xchg
cmp
test
pop
mov
imul
cld
insl
mov
push
or
inc
das
mov
ret
pop
loop
popf
movsl
xor
jp
mov
call
sbb
je
add
and
es
and
mov
clc
insb
or
jecxz
jecxz
dec
loop
add
into
cmp
jge
jecxz
adc
mov
mov
mov
je
jg
add
sbb
and
aam
mov
add
xchg
scas
mov
gs
pop
int
or
mov
movsb
sbb
cltd
mov
mov
or
in
sti
sahf
or
lcall
ja
inc
fsub
psubsw
cs
xchg
xlat
negb
mov
cltd
jecxz
lcall
mov
adc
pusha
cmp
gs
aas
nop
sub
inc
mov
ja
stos
adc
cmp
xchg
jge
xchg
outsb
cmpsl
sub
xor
add
rclb
sbb
adc
mov
adc
add
es
mov
mov
fucomi
mov
outsb
jge
insb
xchg
dec
call
std
mov
jp
adc
pop
inc
ja
daa
pop
mov
adcl
mov
bnd
xor
add
jns
and
xchg
mov
xorl
icebp
ret
cld
sub
sub
nop
insb
sub
dec
test
js
mov
leave
or
mov
and
lret
and
sbb
mov
out
xlat
jns
aam
into
or
cmp
push
mov
push
push
outsb
in
inc
mov
les
or
or
popa
xchg
enter
mov
inc
and
cld
ja
scas
pop
leave
pop
in
fcom
lods
or
add
push
out
adc
jae
lods
push
lock
sbb
push
addr16
inc
cli
inc
push
sbb
sub
mov
pop
or
aad
mov
les
loop
jecxz
sbb
xchg
mov
daa
daa
xchg
and
rcrb
call
imul
mov
adc
arpl
xchg
clc
mov
xor
cmpsl
out
pop
adc
push
and
aas
in
movsb
idivl
idiv
movsl
insb
ljmp
jo
aad
arpl
xchg
stos
mov
cs
cmp
mov
int3
movsb
imul
jp
ret
jle
jno
addr16
cmpb
popa
popf
or
cld
xchg
xchg
and
in
out
mov
insl
test
je
pop
cmpsb
pop
mov
push
xchg
pop
pop
push
cmpsb
ja
inc
fsubp
das
jno
inc
push
or
pop
xor
pushl
add
sbb
push
jl
dec
int
addr16
inc
push
and
out
imul
lret
mov
jo
sar
mov
scas
faddl
sub
jge
jno
or
jle
sub
xchg
cld
repnz
mov
sub
mov
add
jecxz
pop
sbb
lret
jl
jne
cmpl
push
in
mov
int3
mov
addl
in
stc
dec
cs
inc
adc
sbb
pop
fndisi(8087
repnz
lock
mov
shlb
adc
xchg
mov
pop
pop
and
sahf
adc
aad
sub
popw
fimuls
loopne
das
roll
icebp
cltd
inc
enter
push
in
add
addr16
pop
xchg
rcll
mov
int
and
iret
mov
ss
ss
xor
scas
xchg
popa
sbb
mov
or
ljmp
shl
cli
stos
mov
scas
sub
jl
scas
or
ds
and
dec
aam
add
ja
lods
insb
dec
dec
das
mov
repz
add
inc
xchg
sbb
stos
dec
shrl
push
icebp
fbld
and
arpl
les
mov
adc
inc
sbb
cwtl
dec
mov
add
lds
jge
fsub
push
outsb
sub
pop
sbb
add
jno
sub
add
push
popa
inc
or
or
sbb
pop
test
es
and
pusha
dec
fwait
call
push
xor
jns
scas
push
xchg
xor
add
add
std
and
aaa
js
sub
test
dec
sbb
push
mov
sbb
rcrl
out
mov
aad
les
out
psubusw
xlat
xchg
loopne
ds
imul
adc
stos
mov
mov
ret
fs
adc
push
nop
sub
ja
push
test
jnp
push
loope
loop
sbb
cmp
or
mov
pop
notb
dec
inc
mov
jle
arpl
dec
jnp
popf
lret
pusha
or
loopne
fdivl
jge
jnp
or
aas
scas
int
loop
out
aas
aam
shll
push
adc
subb
xchg
sub
adc
pop
in
mov
inc
into
sbb
pop
add
mov
or
mov
pop
cmp
in
roll
sub
es
mov
mov
out
fisttpll
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
and
mov
orl
mov
xor
xor
xor
add
sub
imul
movl
add
push
adc
mov
mov
xor
or
adc
mov
mov
or
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
add
xor
addl
mov
addl
add
sbbl
add
addl
imul
movl
mov
movl
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
sbbl
add
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
xor
mov
adcl
mov
subl
xor
mov
xorl
add
movzbl
sub
movzwl
mov
mov
add
movb
lea
mov
xor
mov
mov
andl
mov
sbb
mov
xor
orl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
andl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
movl
xor
xor
or
mov
adc
push
add
mov
add
xor
mov
movl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
movl
mov
addl
xor
xorl
add
jmp
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
sbb
mov
sbbl
mov
xor
orl
mov
addl
add
movzwl
mov
mov
subl
movzwl
xor
add
mov
mov
inc
not
mov
movl
cmp
movl
jne
mov
mov
xor
add
mov
sbb
mov
xor
add
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
mov
adcl
movl
movl
sbb
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
sbb
mov
or
mov
xor
inc
add
mov
mov
mov
je
mov
mov
xor
jmp
aas
xor
es
hlt
and
sbb
icebp
in
cli
jae
sbb
jp
xor
inc
add
out
sahf
cmpsl
and
stc
inc
and
push
out
ret
mov
sub
pop
xchg
lret
cmp
int
adc
sti
xchg
lods
mov
cltd
pop
add
lock
out
fldenv
sbb
sbb
in
rcll
jg
shl
xor
out
enter
roll
dec
inc
subb
pop
or
and
jbe
jl
sbb
repz
fnstenv
lds
and
rcll
gs
call
lret
push
mov
lea
xchg
dec
addl
jle
insl
gs
and
and
das
xor
fucom
mov
test
add
xchg
mov
out
mov
dec
push
leave
les
xor
cmp
dec
test
add
mov
or
pop
mov
andl
xchg
mov
push
lods
int3
pop
pop
ret
xchg
enter
mov
jo
xor
out
je
ret
jge
or
cmp
mov
cmp
outsl
les
scas
call
pop
mov
in
int3
cmp
fstpt
fadd
cmp
shrb
rorl
call
push
add
mov
ja
adc
push
and
out
jae
pop
lea
cmp
pop
cmc
lret
add
sbb
std
mov
cwtl
fsub
sti
rolb
and
jmp
stc
in
out
or
jae
add
stos
or
shrb
xchg
inc
mov
pop
sub
ja
lcall
sub
and
clc
jb
rcrl
repnz
loop
test
mov
cmp
pop
test
cmc
sbb
mov
cmp
pushf
adc
cwtl
mov
mov
and
jae
adc
clc
test
cmpsb
cmp
call
cmp
ret
inc
pop
push
andl
into
out
inc
sub
sbb
jmp
mov
lds
dec
mov
xor
push
and
and
jbe
xor
jnp
call
jae
jmp
mov
dec
mov
cwtl
lods
cli
push
cmp
sbb
lds
sub
pop
cmp
fwait
inc
popf
xchg
sub
pop
sti
sbb
push
inc
push
mov
test
mov
ret
inc
lock
sub
test
jb
xchg
mov
pusha
fldenv
lret
ret
inc
dec
repz
sbb
jns
pop
test
or
lret
lods
ret
and
and
js
jnp
lock
imul
dec
pushf
cmp
xor
inc
xor
and
in
sbb
int
mov
xchg
cltd
cltd
and
js
sahf
xor
adc
adc
gs
sbb
imul
xor
mov
sbb
rcll
inc
sub
out
push
and
jge
xor
in
xor
rcrb
fbld
adc
movsb
sar
and
cmp
mov
mov
xchg
stos
dec
sbb
nop
pop
dec
call
rcrl
rolb
je
fdivl
mov
cmpsb
lock
fidivs
loopne
outsl
iret
cmpb
dec
sub
or
jae
push
movsl
push
outsb
cmc
pop
fisubl
mov
lret
cmp
lock
addr16
jg
pop
adc
mov
fldl
pushf
xchg
test
push
xchg
movsb
sahf
add
hlt
mov
ror
adc
jno
stos
in
into
not
inc
mov
pusha
xor
mov
ds
out
repnz
xchg
add
outsl
mov
add
mov
sub
xor
iret
int
loopne
jno
aaa
bound
imul
and
adcl
mov
jp
sub
shrb
out
push
out
lret
outsl
loopne
or
sbb
mov
jp
pusha
jge
loopne
inc
movsb
push
dec
jle
cltd
jno
dec
test
mov
in
std
dec
cmp
aad
inc
mov
adc
orl
pusha
aaa
imul
push
adc
mov
mov
loop
in
pop
shll
aas
jg
fsubl
ret
sbb
sbb
jns
or
mov
movsl
xor
pop
cmp
xor
fcomi
mov
add
popf
dec
bound
aaa
sub
cmc
push
shll
and
lcall
int3
mov
jbe
cmpsl
and
aaa
jno
inc
sti
and
out
inc
dec
popa
fisubrs
cmp
sti
test
mov
je
inc
pop
roll
dec
mov
pop
insl
dec
cmp
lods
jo
fmull
jne
jecxz
sub
push
pop
push
and
outsb
fsubl
aaa
or
or
jo
and
adc
sbb
insb
ret
mov
fsubl
mov
or
push
arpl
xor
aaa
inc
popa
pop
mov
cmp
mov
pop
out
jl
icebp
lods
or
push
inc
je
dec
dec
aam
inc
mov
cmpsb
bound
je
inc
jl
pop
dec
and
shll
and
push
jne
into
push
add
arpl
mov
push
daa
lret
jecxz
adc
movsl
xor
mov
test
mov
out
fdivrl
mov
push
cld
lods
mull
int3
jo
or
sbb
fisttpl
or
xchg
ret
push
jnp
xchg
sti
addb
cwtl
scas
loop
daa
leave
and
movsb
pop
aam
in
jne
bound
test
pop
and
iret
loope
subl
cld
rclb
filds
out
je
sbb
scas
loopne
sbb
adc
andl
nop
addr16
mov
pop
adc
scas
add
xor
adc
cmp
in
pushf
jb
out
sbb
push
mov
push
outsl
mov
lretw
les
or
testl
aaa
adc
cmp
mov
test
int
scas
sbb
in
jg
incl
in
out
imul
xchg
mov
pusha
jle
xchg
pop
pop
xchg
out
or
mov
out
stos
add
inc
push
lahf
movsl
repz
cli
sub
cmpsb
cwtl
mov
xchg
insl
and
out
sub
and
decl
inc
loop
sti
iret
repnz
add
stc
inc
add
jnp
jae
xor
or
dec
and
or
push
enter
arpl
insb
dec
lret
adc
mov
fisubs
leave
into
lret
inc
pop
iret
xchg
insb
pop
sahf
or
jg
mov
fld
lea
ret
mov
ror
or
or
out
aaa
stc
jl
leave
inc
lods
xchg
add
fs
push
testb
scas
push
inc
mov
insl
imul
popf
and
jmp
mov
mov
jns
mov
movsb
scas
adc
adc
dec
les
or
mov
dec
sarb
mov
mov
scas
aam
das
add
shrb
sbb
adc
cmp
adc
idivb
xor
ljmp
addl
cmpsb
insl
rorl
movb
loop
mov
out
aaa
lahf
sub
lret
fsubs
xchg
movsl
pop
push
mov
cmpsl
repnz
data16
and
stc
mov
mov
push
pop
mov
dec
push
negb
jno
sbb
cmpl
jl
out
in
shll
inc
cmpsb
xchg
push
inc
aaa
jecxz
inc
shrl
push
fmul
ret
push
cli
mov
pop
sub
push
shr
mov
insb
inc
outsb
sti
or
jbe
mov
clc
pop
mov
add
mov
push
out
rdmsr
imul
loopne
outsl
or
sub
pop
out
hlt
bnd
sub
dec
mov
inc
dec
push
or
inc
mov
jns
cmpsb
jecxz
pop
repnz
mov
push
int3
into
pop
fcmovnbe
jle
int
xor
jg
lock
jno
xchg
sub
popf
push
stos
roll
mov
sub
cwtl
jmp
dec
mov
ds
cltd
sbbl
cmp
test
aaa
mov
leave
ret
push
test
push
or
push
repnz
les
mov
sub
add
mov
testl
xor
lcall
scas
lods
negl
xor
jmp
sub
pop
cmp
jmp
dec
movsl
mov
sbbl
out
add
nop
inc
push
mov
mov
mov
daa
sbb
push
inc
fxtract
mov
imull
stos
cli
sbb
mov
add
push
in
fnsave
and
or
mov
mov
mov
push
lahf
orb
mov
bnd
sub
mov
and
lahf
mov
jge
rorb
lret
outsb
or
lods
int3
mov
mov
in
fisttpl
or
cmc
adc
mov
inc
lods
cld
xor
std
cmp
aaa
sub
sub
in
dec
lret
dec
push
cli
push
inc
mov
sbb
data16
rcrb
xchg
push
push
aas
jnp
push
jnp
adc
mov
fwait
or
cmc
sbb
jp
out
aaa
push
test
mov
test
mov
jo
sub
add
sbb
push
sub
addb
sub
cmpsl
subb
lods
xchg
popa
sbb
push
xchg
jmp
mov
repnz
cltd
pop
cmc
jns
xchg
cmp
aad
or
mov
in
mov
lcall
sti
adc
jle
ja
xchg
sub
mov
outsb
jl
cmp
push
aas
stos
cmc
push
cmp
mov
or
std
jns
mov
mov
flds
sbb
arpl
outsb
xchg
push
xchg
add
mov
mov
jg
dec
inc
popa
mov
and
sbb
lea
push
mov
in
imul
adc
cmpsl
push
push
sub
mov
repnz
xor
cmp
insb
cmp
add
mov
lret
sub
dec
inc
pop
mov
xor
test
push
cli
fdivl
or
jbe
pushf
mov
cmp
movsl
aam
dec
jge
mov
xor
cmp
mov
sbb
cmp
addps
test
mov
lods
in
mov
jmp
jge
lock
mov
pop
mov
call
fcmovb
cld
sar
push
out
dec
jge
dec
jmp
pop
xchg
xchg
xchg
testl
mov
shlb
push
xor
mov
cwtl
adcl
or
shlb
fcompl
add
xchg
adc
test
stc
xor
les
pop
outsl
xor
out
mov
inc
jo
loop
lock
mov
push
adc
push
add
sub
lds
fadds
icebp
imul
cld
mov
add
xchg
popf
bound
gs
mov
pop
xchg
inc
mov
nop
xchg
test
cmp
fs
jbe
into
shrl
sub
mov
or
outsb
aad
aam
pop
xor
dec
mov
enter
hlt
mov
fnstsw
xchg
aas
out
mov
shl
cmpsb
popf
lds
push
push
add
nop
das
ror
push
xchg
inc
ds
shlb
fcmovnbe
out
sbb
jmp
xlat
lods
pop
pop
xor
jecxz
lret
inc
push
xchg
ds
in
dec
mov
imul
fdivrs
test
cwtl
or
xlat
sub
sbb
in
inc
aas
xchg
outsb
sbb
jns
add
xchg
movsl
fdivrl
movsb
cmp
or
jle
jl
jle
test
and
pop
lods
out
pop
incb
pop
mov
mov
popa
int
sti
sub
roll
inc
dec
or
mov
adc
out
push
stos
xchg
mov
aad
adc
xor
icebp
fcom
push
out
lret
adc
addr16
mov
int
lock
mov
test
jl
mov
clc
mov
lret
sbb
jb
aas
dec
outsl
into
hlt
or
jbe
arpl
sub
mov
cmp
movsl
pop
and
dec
jnp
pop
cmp
aad
stos
mov
test
add
lea
clc
mov
repnz
push
enter
repnz
jecxz
movsl
mov
outsl
jmp
ret
sub
mov
les
bound
fstpt
mov
fldcw
jge
push
or
jbe
fldt
mov
and
test
repnz
cltd
lods
lods
pop
mov
lds
sub
lret
add
pop
pusha
hlt
fwait
in
aas
and
adc
stos
xchg
push
push
js
or
dec
je
imul
std
shl
int
xchg
jb
out
mov
outsb
in
test
mov
lret
mov
nop
sub
jg
loope
fsubs
fidivrl
jmp
sub
mov
xchg
ficomps
pushf
stc
push
pop
push
pop
xchg
in
add
and
xchg
pop
or
xchg
sub
inc
jae
out
add
push
cmpsb
aam
adc
sbbl
or
push
bound
mov
ss
das
movsb
and
xchg
cmpsb
jns
jo
in
jnp
imull
shlb
xchg
dec
pop
lods
mov
addl
push
lcall
insl
shl
enter
mov
xor
add
cmp
jb
inc
mov
add
or
add
sbb
xchg
push
je
cmp
jl,pt
stc
pop
push
les
jmp
lds
adcl
std
mov
mov
cmp
sbb
adc
inc
jo
xor
in
nop
lods
add
clc
xor
sbb
fnstcw
sahf
shlb
add
aaa
jmp
adc
xchg
xchg
mov
sbb
xchg
push
and
aam
enter
in
mov
loopne
ret
call
sub
inc
jl
xchg
aas
insb
xchg
out
lds
cmp
call
out
aad
jne
cmpsb
xor
inc
popa
adc
lea
test
jno
scas
js
and
cmpsb
jge
xchg
sbb
call
std
dec
mov
pop
aam
nop
popa
push
jp
ret
pushf
aaa
cmp
sar
fwait
cmpsb
int
je
scas
idivl
lahf
adc
xchg
insb
pushf
and
add
js
loopne
in
mov
aaa
xchg
add
gs
cltd
cmp
jbe
inc
adc
adc
ljmp
sbb
mov
sbb
pop
bound
dec
lds
jo
and
xchg
inc
and
sbbb
lods
out
push
mov
fisubrs
push
ret
je
jae
fs
and
mov
mov
in
adc
test
mov
pop
inc
lock
ds
sub
sbb
adc
in
sbb
cmp
mov
sub
icebp
cmp
dec
rcll
lret
into
pop
ret
sbb
lods
push
add
inc
jo
xor
es
ljmp
sub
jb
test
sub
mov
jmp
pop
add
lds
andb
xlat
xor
add
sub
push
jp
shrb
mov
jge
add
mov
sbb
popa
and
cmc
stos
aaa
lods
push
shlb
sub
jmp
push
subb
movsb
cmp
sarl
xor
xor
orb
fistpl
lods
stos
sub
xchg
xor
mov
cwtl
and
mov
daa
cwtl
jecxz
mov
sub
popa
lock
jns
cmpsl
daa
adc
daa
roll
cmp
jo
fisubs
xor
movsl
imul
loope
jecxz
enter
push
dec
iret
xchg
dec
or
roll
rsqrtps
jae
shlb
loopne
cmp
mov
sub
add
add
lret
mov
mov
imul
fwait
or
test
cmp
mov
push
insb
xchg
cmpsl
lds
ret
push
xor
popa
loop
call
push
repz
sub
sbb
adcb
imul
stos
sub
sahf
rorl
sub
xor
dec
stc
into
ds
cmp
inc
mov
xor
lods
loop
push
dec
inc
out
hlt
ret
scas
xor
testl
inc
or
popa
sbb
jo
jmp
mov
xchg
pusha
rorb
jl
mov
lret
popa
test
adc
fdivrp
xchg
jae
imul
das
ds
cmp
cmp
ja
fwait
cmp
stos
movsl
loope
xchg
fs
and
int3
pop
pop
cmp
push
inc
adc
lods
jbe
mov
xchg
mov
or
and
sbb
rcll
sahf
pushf
cmp
lds
add
jle
mov
or
call
xchg
into
push
stos
sub
fld1
inc
insb
push
pushf
cltd
notl
adc
cmc
es
and
jbe
movsl
cmovge
gs
mov
xchg
sbb
push
dec
xlat
xor
pop
mov
cld
add
push
sub
insl
inc
js
mov
test
adc
mov
rcll
in
xchg
in
inc
xchg
andl
cwtl
test
lds
push
hlt
pop
sub
xchg
std
daa
push
inc
pop
jmp
addr16
mov
pop
adc
js
ds
loop
stos
mov
movsl
push
arpl
scas
push
mov
loope
jl
cmpb
je
push
adc
sbb
cmpl
pop
pop
test
add
or
lcall
pop
pop
mov
push
push
pop
outsl
lahf
add
or
push
adc
div
ja
xchg
add
pop
push
inc
scas
scas
scas
mov
push
push
orb
mov
sub
repnz
cli
xchg
mov
jmp
in
sbb
and
add
lods
mov
scas
in
fildl
mov
lret
sbbl
outsb
mov
dec
sbb
jge
idivl
out
cmp
mov
xor
xchg
cli
dec
out
push
jo
test
inc
xchg
push
jge
mov
cmp
sti
call
xchg
dec
cwtl
pop
lods
jns
fs
test
adc
int3
mov
stos
aam
sbb
push
pop
sbb
xchg
cmpsl
and
int3
sahf
ja
or
cmpsb
popa
cld
mov
sub
adc
xor
xlat
idivb
loope
and
rcr
xchg
enter
cmc
lret
test
inc
jbe
xor
push
mov
sahf
icebp
or
mov
jl
push
cmp
add
enter
stos
icebp
cltd
popa
aad
cli
push
in
xor
js
data16
xor
inc
jo
adc
rcl
sbbl
cwtl
xchg
lcall
clc
pop
lods
sahf
push
xor
pop
notb
imul
popa
test
pop
jnp
in
or
out
push
movsl
in
cmc
sub
mov
sub
xchg
lods
pop
pop
adc
mov
jg
cwtl
repz
push
int3
fs
add
stos
pop
sbb
sbb
bound
xchg
xor
mov
loop
and
movsb
inc
xchg
mulb
mov
inc
fcoml
mov
inc
mov
adcl
pop
jne
stc
sub
pusha
es
pop
ljmp
jno
xor
and
xchg
jno
outsb
dec
push
xchg
stos
push
mov
cmp
mov
pushl
jecxz
xchg
xlat
std
lds
ret
or
adc
pop
pusha
decl
test
outsb
scas
mov
or
lods
push
aad
sub
lods
std
fwait
rcll
fwait
aaa
sahf
pop
cmp
xor
jns
jbe
cmpsb
stos
movsb
cs
xor
cld
mov
sbb
pop
mov
dec
lahf
or
add
or
inc
lcall
and
inc
inc
inc
pop
fldt
xchg
ljmp
cs
arpl
js
pusha
test
ja
mov
push
dec
push
or
sub
cmp
shlb
push
scas
pop
clc
push
mov
shlb
lods
cmc
ljmp
jl,pt
mov
sbb
mov
xor
adc
js
fmul
cmp
inc
loop
ss
dec
xchg
xor
daa
lods
mov
cli
aam
enter
rcl
aas
or
rolb
imul
dec
push
shll
mov
and
data16
repz
lock
xchg
lret
leave
cwtl
jae
dec
out
inc
jl
ss
push
mov
imul
shrl
out
std
or
jno
and
sbb
mov
jns
sahf
je
push
aad
jae
push
sub
pushf
cmp
daa
adc
loope
add
movsb
mov
mov
and
outsb
in
aad
inc
in
cmpsb
das
loope
imul
xor
xchg
mov
fdivrl
lds
aad
xchg
xchg
data16
jl
push
mov
adc
sbb
pmaddwd
push
outsb
xor
sbb
outsb
add
and
and
inc
out
sub
mov
pop
adc
sub
nop
lods
out
and
xchg
inc
jbe
mov
ljmp
fwait
popf
shrb
jg
inc
pop
es
lods
xchg
lods
fimuls
push
outsl
daa
popf
xor
xchg
xchg
jecxz
sbb
adc
mov
test
cmp
pop
mov
mov
int
lods
ret
repz
sbb
dec
pushf
jnp
push
cmp
ds
js
flds
clc
cmp
bound
xchg
mov
int3
inc
iret
loop
insb
in
inc
jg
ret
int3
adc
idiv
jge
loope
mov
ss
xchg
stos
xor
bound
mov
imul
push
stos
ja
notl
stos
mov
or
jmp
dec
sub
loope
dec
push
push
imul
add
test
and
sbb
fwait
int3
xor
test
pusha
add
cmp
out
sub
test
mov
stos
sbb
daa
add
lcall
adc
mov
pusha
dec
mov
dec
lret
mov
add
or
mov
xchg
sub
stos
shll
push
xchg
mov
push
mov
adc
jns
and
jae
lcall
jg
int3
pusha
jge
xor
inc
nop
mov
dec
mov
pop
fsubrs
fisttpl
jnp
sub
call
sahf
xchg
dec
push
push
daa
fsubrl
jnp
pop
or
fisubs
push
mov
pushl
loope
fists
xchg
pop
pop
test
jo
imul
ljmp
pop
lods
mov
sbb
dec
popf
or
dec
mov
mov
xlat
jb
jmp
or
enter
mov
push
xor
and
cmpb
jg
xor
outsb
addb
inc
xchg
xor
mull
mov
dec
add
mov
push
movd
mov
add
dec
int
out
xchg
push
test
pop
adc
repz
xchg
fdivr
cltd
jecxz
pop
jmp
aam
aad
mov
daa
sub
pop
fstpt
xchg
pop
fs
mov
lcall
mov
fimull
cmp
pushf
pop
rcrb
aas
sbbl
repz
mov
cmpsb
out
mov
or
movsb
ret
inc
and
push
xchg
lahf
xor
sbb
in
mov
sarl
or
push
jo
stos
adc
adc
outsb
mov
pop
dec
sbb
stos
mov
repnz
inc
add
scas
push
lds
jl
cmpsl
in
out
clc
loop
pop
test
lods
mov
outsl
cmp
lods
xchg
mov
clc
push
cmp
enter
and
push
mov
push
add
mov
mov
mov
jb
jle
insb
push
shl
xor
and
push
or
mov
fmulp
mov
xchg
jg
sbb
jle
sbb
push
inc
mov
adc
push
das
push
clc
in
pusha
dec
mov
ss
leave
pop
mov
cltd
xchg
jb
imul
js
test
mov
cmp
cld
sbb
push
stc
xor
movsl
jmp
lret
shlb
aam
and
ja
out
adc
out
pop
repz
xor
sbb
dec
pop
fmull
add
xor
out
jo
mov
sub
push
mov
loope
xor
lret
cmc
std
ret
lods
jnp
push
xchg
mov
pop
popf
icebp
mov
repnz
sbb
inc
mov
cmpsl
shr
ja
mull
insb
and
movzwl
insb
adc
sub
adc
jge
sarb
sbbb
xchg
std
lods
into
jl
int
bound
push
xlat
lea
imul
sbb
push
jg
mov
cmpsl
and
std
loop
mov
pop
pusha
icebp
fstl
gs
lods
popa
out
daa
inc
xchg
push
ljmp
mov
fdivrs
sub
mov
insl
xor
aas
shl
in
imul
and
fldt
test
jp
dec
ss
and
or
sbbl
pop
fadds
push
lahf
mov
push
enter
add
imul
mov
pop
in
bound
stos
mov
stos
push
ret
pusha
dec
rcrl
andl
cmp
lret
cld
aam
rol
mov
adc
das
push
sti
ja
push
repnz
mov
fwait
test
fstpl
pop
xchg
adc
pop
icebp
inc
xor
push
mov
pop
aas
inc
mov
loop
testl
pusha
outsl
in
loop
or
xchg
test
pop
pop
fcmovne
mov
mov
faddl
pushf
mov
leave
sbb
jp
xor
fisubrs
ret
scas
dec
and
lods
xchg
test
subl
or
dec
popf
push
sahf
ret
pop
cmpsl
fs
pusha
or
rorl
enter
cmpsl
xchg
icebp
pop
or
sbbl
push
xor
push
xlat
sub
icebp
stos
nop
dec
push
aas
bound
shrb
mov
dec
pop
in
adc
mov
inc
mov
mov
pop
xor
lock
mov
or
or
outsb
pop
ss
outsl
pop
arpl
mov
mov
or
push
js
inc
xor
pop
mov
push
mov
in
mov
movsl
fldenv
into
inc
clc
pop
cli
testl
cs
pop
pop
mov
jecxz
mov
mov
dec
mov
das
int3
mov
scas
stc
adc
into
call
cmp
ret
add
mov
arpl
jl
pop
mov
push
pop
pop
dec
xchg
xlat
stos
mov
loopne
pop
fcompl
nop
push
sub
mov
sub
inc
icebp
ret
push
add
rcrl
or
mov
push
sub
stc
sub
inc
adc
adc
push
test
imul
push
jecxz
out
jp
cmp
outsl
loope
repnz
xchg
push
sbb
ljmp
xchg
pushf
push
pop
pop
js
mov
fimuls
push
add
imul
push
dec
xchg
cmp
jmp
mov
and
mov
cmp
sbb
shrb
and
lret
xor
add
dec
je
inc
sub
dec
mov
mov
and
and
xor
cwtl
and
add
dec
ljmp
fimull
mov
dec
test
fs
dec
xchg
add
jne
mov
or
or
repnz
push
aaa
xlat
push
inc
imul
fwait
pop
ja
nop
cmp
aas
jae
cmp
test
cld
je
pop
shl
jb
add
push
jmp
mov
mov
imul
out
stc
sub
orb
rolb
daa
push
cli
push
mov
xor
pusha
add
lret
dec
xchg
pop
daa
sub
mov
and
sahf
adc
adc
repz
jmp
rolb
mov
fisubl
daa
testb
in
std
adc
es
mov
andl
dec
push
mov
jge
xchg
outsl
adc
fisubrs
lret
push
fisttpl
jecxz
shll
mov
push
cmp
adc
mov
xor
test
sub
popf
outsl
jbe
xor
test
xor
movsl
xor
or
or
sbb
js
mov
cwtl
insb
js
mov
js
out
dec
jmp
fcomps
sahf
sbb
adc
popf
pop
loopne
jmp
test
leave
mov
fidivrl
sti
pop
or
add
xchg
arpl
xchg
dec
in
aad
pop
pop
jns
lock
sbb
out
stos
inc
fisttpll
mov
xor
daa
mov
xchg
inc
cli
scas
or
push
or
es
dec
popa
pop
leave
jg
xlat
sahf
cwtl
js
xchg
mov
icebp
xorl
push
lret
bound
rolb
cmp
and
and
adc
mov
mov
les
fwait
insb
jo
dec
mov
repz
stc
iret
inc
xchg
jno
fnstcw
jnp
into
je
sbb
mov
rolb
mov
lret
adc
in
adc
dec
push
push
test
add
push
outsb
out
xchg
cmp
negl
sbb
pop
ficomps
popf
sub
add
jle
sbb
xor
xor
mov
in
mov
push
cmpsl
mov
mov
aaa
fdiv
pop
jl
dec
fdivr
mov
or
push
xchg
cmpsb
xor
or
gs
push
inc
loop
bound
ss
add
sbb
call
fstpl
stos
aad
add
pop
fisttpl
lret
xchg
rorb
cmpsb
lea
add
ss
jns
out
dec
addb
std
testl
mov
mov
div
mov
add
popa
mov
sbb
jne
jl
mov
adc
repnz
leave
sub
pop
in
std
mov
movsb
push
faddp
movsl
fisttpl
fisttps
jg
xchg
sub
fidivrs
or
dec
mov
js
aad
std
gs
mov
les
xchg
outsl
cmp
adc
aad
aam
sub
mov
mov
mov
and
inc
mov
sub
mov
xor
adc
lods
xchg
xchg
jmp
xor
adc
mov
lock
nop
adc
pop
aad
fmull
loop
jecxz
bound
ljmp
sarl
dec
mov
fildl
mov
mov
mov
je
ret
aaa
je
cmc
lds
ficoms
addr16
jb
push
or
jle
std
jg
pop
pop
shrb
jle
cwtl
push
or
addr16
loopne
inc
adc
add
or
insl
dec
push
loop
shrl
mov
mov
sti
stos
insl
or
not
mov
and
lahf
sbb
mov
testl
xor
inc
cld
sub
mov
pop
cs
push
pop
push
pop
inc
popa
int
jo
push
xchg
mov
add
rcl
fs
xor
orl
sub
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
movl
add
andl
imul
mov
mov
mov
add
subl
or
mov
mov
mov
and
mov
movzwl
sub
mov
andl
add
xor
sbb
mov
and
mov
mov
addl
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
lea
sub
mov
sbbl
mov
incl
mov
addl
sub
adc
add
subl
mov
mov
orl
xor
addl
add
movl
jne
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
subl
xor
xor
sub
sub
xor
mov
mov
movl
jmp
pop
loope
mov
jnp
ror
scas
pop
cmc
imul
jp
pop
jp
jo
fcmovb
or
movsl
sub
pop
cmp
mov
jg
outsl
in
push
or
aad
mov
xchg
inc
test
jo
mov
pop
cli
ds
popf
hlt
adc
ret
and
inc
inc
in
data16
sti
enter
test
ret
movsb
icebp
inc
cmp
loop
cmc
lds
mov
popf
je
xor
jns
jnp
jne
push
je
push
lret
test
inc
jno
mov
or
and
sub
mov
lea
mov
stos
and
mov
iret
cmp
fstps
mov
jnp
pop
sbbl
mov
push
ja
lock
scas
lcall
icebp
das
adc
jbe
pop
test
in
es
fdivr
mov
pop
mov
ss
jb
adc
jnp
jo
js
stc
push
xor
dec
jo
mov
arpl
mov
xchg
leave
sub
clc
subb
pusha
repz
and
fildll
inc
leave
inc
jl
sub
loopne
xchg
add
xchg
add
fnstenv
lock
mov
jae
insb
pusha
mov
mov
adc
out
adc
push
stos
pop
scas
mov
push
add
pop
mov
fs
outsb
hlt
mov
mov
xchg
cmp
fdivrs
mov
dec
rorb
pop
cmp
in
shll
dec
es
jg
pop
mov
and
psadbw
cli
ljmp
lock
mov
cmpsb
add
and
jbe
shl
mov
sub
movsl
idivl
enter
adc
cmpsl
cltd
cmp
cmp
lods
dec
jb
xlat
out
sbb
lock
in
inc
jb
loopne
fcmove
sbb
cmp
hlt
push
mov
sub
das
push
out
mov
dec
pop
jmp
xchg
test
mov
gs
sub
inc
sub
daa
sub
lahf
inc
mov
es
jle
sbb
call
inc
push
jb
and
sub
dec
mov
sarb
addl
cld
xor
out
pushf
ss
add
sub
inc
repz
out
popa
out
pop
fucomp
xchg
dec
jno
xchg
rcll
stos
inc
scas
inc
dec
push
inc
xchg
push
or
lcall
add
sbb
sub
lods
xchg
je
loop
push
pop
cltd
pop
mov
fdivrl
inc
push
jne
loop
out
sbb
lds
ljmp
dec
outsb
aam
stc
imul
sbb
xchg
cmp
jmp
inc
fisubrl
call
popa
icebp
xchg
mov
or
mov
out
aas
jne
inc
sub
je
insb
inc
ds
sti
pop
mov
iret
aaa
mov
xchg
xchg
jge
loopne
repz
jnp
repz
imul
lret
jne
jp
push
mov
push
pop
lret
xchg
loopne
sti
add
mov
and
scas
into
pusha
cmpsb
dec
sbb
push
mov
mov
out
push
cmpsl
outsb
xor
leave
ffree
mov
jb
mov
or
push
mov
dec
push
ljmp
pusha
and
lcall
in
fdivs
pop
xchg
fsubs
pop
cwtl
call
jo
and
cmp
cli
pop
pop
addr16
inc
xor
jns
push
mov
mov
out
andl
roll
inc
cmc
fldcw
aaa
cmpsl
clc
and
dec
push
cld
jg
repnz
pop
ljmp
jmp
repnz
mov
ss
in
mov
lahf
test
sbbl
or
hlt
int
nop
mov
cli
inc
xor
negl
inc
add
loope
movsb
inc
push
inc
xchg
pop
sbb
push
dec
xor
sbb
test
fs
add
movsb
xor
mov
mov
pop
aad
bnd
imul
sti
jo
in
enter
pop
push
push
jb
cmp
pop
das
lods
out
fcmovu
fidivs
mov
sub
adc
or
ror
xor
xlat
xchg
scas
stc
pusha
jae
xchg
outsb
arpl
push
lcall
scas
or
push
fwait
popa
jge
shrb
jbe
js
push
dec
cli
cld
loopne
or
mov
and
or
std
xchg
jae
mov
lret
adc
inc
xchg
inc
filds
xor
stc
sti
call
pushl
ficompl
sarb
mov
xchg
sbb
mov
in
div
inc
push
jbe
mov
pop
clc
push
xor
jnp
pop
hlt
negb
addb
xor
insb
push
add
push
outsl
and
mov
in
in
imul
mov
out
xchg
mov
gs
test
pushw
lret
sub
adc
mov
insb
pop
in
test
int3
les
cmpsb
sbb
or
dec
fdivs
aaa
ds
lds
adc
roll
cmpsl
movsb
jbe
inc
xchg
mov
fbld
add
movsb
lods
syscall
ret
or
sbb
mov
ficompl
mov
push
xchg
outsl
jmp
push
lods
ret
mov
sbb
icebp
sub
ss
aam
inc
stos
addr16
xor
jno
adc
iret
imul
or
testl
insb
jg
data16
mov
mov
jmp
insb
jo
dec
ds
outsb
push
aad
xchg
and
outsl
and
push
clc
lcall
stos
mov
jecxz
pop
cmp
imul
push
push
xchg
inc
adc
lods
pop
jbe
mov
cmp
lret
push
sti
int3
insb
and
stos
sub
mov
pop
mov
sub
test
or
test
xchg
mov
test
xchg
jb
jp
loope
lds
mov
inc
jle
pop
sub
or
pop
dec
je
sbb
mov
push
xorl
bound
mov
xor
cli
push
hlt
pop
and
add
sbb
nop
jae
inc
fimuls
mov
sbbb
flds
xchg
cmp
dec
std
or
add
push
push
clc
orl
and
daa
or
dec
loop
ss
loopnew
inc
jae
test
es
add
xor
add
iret
adc
lock
mov
dec
in
clc
mov
lods
jmp
jge
pusha
inc
pop
dec
cltd
push
lret
lahf
jbe
je
push
loope
and
bound
stos
in
or
pop
or
jbe
mov
inc
faddp
rcr
push
cmpl
xor
mov
scas
push
xchg
movsb
out
orb
bound
fldenv
jae
out
push
fld
nop
fdivl
cltd
test
subb
pop
sbb
jns
mov
call
mov
imul
pop
in
leave
pop
stc
jb
jae
iret
test
dec
loop
stos
lea
fs
and
mov
xchg
loop
push
jl
jo
shl
add
clc
or
scas
xor
and
mov
aaa
nopl
fucom
inc
push
pop
shlb
shrl
adc
pop
cltd
cs
add
cmpsl
jne
ficoms
sahf
jne
inc
xchg
and
inc
mov
xor
shl
iret
in
jbe
adc
popa
leave
mov
jle
popf
dec
scas
out
notl
mov
and
dec
push
xor
mov
jp
jle
in
iret
iret
stos
add
dec
test
repnz
or
mov
in
jecxz
bound
aam
jne
mov
out
int3
orb
orl
add
inc
mov
mov
add
sub
mov
adc
push
xchg
jnp
popa
stos
or
cmp
lret
lods
aam
ds
cltd
jl
call
or
adc
jge
pop
mov
xchg
fimull
and
test
iret
popa
jmp
sahf
dec
es
inc
or
pop
add
mov
enter
pusha
lret
inc
cld
cmpsb
cs
iret
sub
dec
pop
sub
mov
mov
pop
sub
std
outsl
int
in
ljmp
sti
lods
out
mov
aaa
xchg
or
jbe
pop
sub
fldl
xor
enter
pop
add
add
xchg
pushf
sbb
ffree
test
repnz
lret
xchg
mov
pop
mov
xlat
xor
sahf
push
icebp
jo
and
lcall
ds
popf
inc
and
cwtl
cli
call
call
loopne
xor
lods
subb
mov
popa
out
pop
mov
cmpl
insb
test
add
xor
jg
icebp
lcall
lock
arpl
xor
scas
adc
dec
cli
push
test
push
jne
mov
std
dec
xchg
add
xor
cmp
std
fwait
js
dec
add
loop
mov
fucomi
iret
dec
xor
inc
fldl
xchg
icebp
sti
xchg
mov
and
gs
add
movsb
cwtl
adc
aam
or
mov
fistpll
mov
into
imul
xchg
iret
mov
xchg
mov
jae
pop
scas
inc
mov
push
test
mov
fdivl
ret
cmp
sbb
inc
test
stc
rcll
loop
bsr
pop
shrb
lcall
push
mov
jmp
hlt
aam
fmull
test
add
jo
pop
jbe
mov
jge
inc
jp
and
arpl
idiv
icebp
mov
mov
sub
cmp
in
aas
cmc
xchg
xchg
jmp
cs
lcall
roll
ljmp
iret
imul
nop
xor
bound
mov
mov
mov
testl
cmp
mov
and
jb
sarl
or
pop
in
scas
and
les
int3
lcall
xchg
pop
sar
push
jbe
push
aaa
test
adc
jo
push
mov
adc
xchg
aas
ror
push
and
pop
aad
imulb
scas
mov
outsl
fiadds
xchg
sub
sbb
xor
ds
pop
jb
xor
push
mov
push
xor
and
scas
test
xchg
dec
cli
or
pop
in
lcall
in
sbb
lahf
push
seta
sub
xor
xor
mov
mov
jne
call
dec
dec
mov
pop
push
and
adc
repz
cmp
sub
add
jb
cmp
jbe
ss
mov
unpckhps
repz
in
je
mov
dec
push
aad
and
popa
push
lods
fiaddl
adc
sub
xchg
popf
mov
dec
leave
lret
das
mov
popa
lds
inc
jecxz
fchs
mov
lret
imul
pop
inc
fimull
inc
data16
aad
fldl
mov
sub
test
xchg
pushf
jge
inc
out
xchg
rcll
sub
int3
inc
loope
cs
les
push
inc
cmp
test
add
and
loopne
pop
cmp
mov
ja
andl
add
and
daa
fsubrs
jg
in
or
or
shll
jb
cmp
xor
xor
mov
sub
add
nop
mov
out
push
inc
add
inc
mov
iret
out
and
mov
mov
mov
xor
fidivl
mov
mov
pop
jle
mov
imul
mov
inc
fisubrl
lahf
jle
xor
mov
jg
bound
mov
add
push
dec
cmc
test
sahf
lods
push
mov
dec
pusha
and
bound
shll
jno
stos
inc
dec
xchg
into
idivl
in
or
loop
pusha
test
inc
jg
xchg
or
mov
adc
cmpsb
insb
dec
pop
nop
and
stos
scas
cmp
mov
fdivl
scas
pop
nop
mov
mov
mov
xchg
int3
in
gs
jns
je
ss
idivl
and
lret
into
inc
ret
mov
cs
adc
ficompl
or
testb
push
ja
xor
sahf
and
cld
imul
jbe
mov
je
add
sub
inc
aam
mov
xor
imul
sbb
sbb
lret
and
jb
out
jne
and
xor
push
jns
shr
lret
movsl
outsl
push
mov
and
inc
dec
inc
or
or
shll
lods
stc
into
ret
inc
iret
jge
andl
add
ja
sub
stc
jns
cmp
dec
cmp
xlat
add
jnp
push
subl
mov
xchg
push
pop
in
xchg
std
idivl
cltd
loope
or
mov
mov
movsl
lods
inc
arpl
cwtl
pushf
xchg
pop
xlat
or
adc
mov
cmp
aam
idivb
cmp
jecxz
push
and
repnz
lret
adc
xor
stos
jmp
dec
pop
shrb
test
adcl
and
fwait
add
hlt
cltd
lods
leave
cld
mov
xor
insb
mov
push
dec
mov
roll
or
in
rcrl
dec
mov
sbb
ja
sbb
imul
add
in
mov
inc
inc
mov
mov
dec
test
leave
cmp
lea
or
mov
imul
arpl
mov
rclb
std
jne
outsl
xchg
test
or
pop
xchg
cmpsl
negb
int3
inc
into
int
imul
inc
pop
pop
jbe
inc
push
stos
mov
xchg
sbb
adc
divl
subb
jns
popa
xchg
inc
jbe
push
pop
jg
sbb
or
stc
jmp
cmp
pop
mov
push
aad
and
xchg
mov
inc
xor
test
ret
add
aad
into
cs
or
mov
das
sub
jecxz
push
mov
leave
lcall
add
les
sbb
mov
or
push
fsubrl
adc
nop
xlat
jle
outsl
push
sbb
stos
inc
dec
test
adc
test
fwait
in
jg
cmc
out
nop
push
inc
jge
icebp
icebp
add
loopne
inc
ret
pop
enter
dec
dec
push
pushf
or
push
cmp
clc
cmpsl
xlat
loopne
push
mov
xchg
lcall
sub
cmpxchg
lcall
push
jo
mov
pop
add
or
cli
js
jp
inc
je
iret
xchg
repz
push
mov
push
push
leave
xchg
pop
xchg
jbe
mov
fidivrl
movsl
insb
fidivs
scas
dec
in
inc
iret
xchg
out
loop
stc
incl
pop
loopne
je
leave
out
sbb
and
jl
fdivrs
addr16
adc
or
ja
ja
sahf
pop
push
add
shlb
mov
ret
iret
loopne
add
ficoms
pop
cmp
pop
int
sbb
nop
sarl
les
dec
inc
jnp
add
mov
into
dec
push
fwait
aad
clc
gs
out
jnp
jp
lods
fdivp
lret
jnp
push
xlat
push
dec
rorl
jmp
das
inc
push
push
inc
sub
sarl
enter
or
insb
mov
ja
mov
jl
mov
sub
insl
insl
add
mov
xor
jno
sub
icebp
lahf
xchg
mov
xor
jle
fistps
inc
cmp
lahf
dec
loopne
insb
push
jmp
jle
mov
jecxz
and
jl
fs
mov
dec
pusha
int3
int3
fdivs
jbe
pop
push
or
push
popa
outsl
stc
adc
aam
sub
ljmp
in
jo
mov
scas
xor
iret
jbe
push
aaa
fs
jo
pushf
je
dec
mov
out
jmp
aam
xchg
xchg
pop
repz
mov
out
pop
aam
push
mov
stos
enter
fwait
sbb
lcall
sbb
xor
xchg
lret
adcb
pop
jle
cwtl
sbb
lock
adc
lods
out
fstpl
lods
out
sub
xchg
sub
shrl
cli
xchg
jae
jb
and
xor
shll
mov
stc
addr16
push
mov
add
lahf
xchg
fcomip
pop
push
mov
pop
iret
xor
shll
enter
dec
or
xor
adc
sub
jmp
loope
inc
jne
adcl
push
adcl
inc
mov
sahf
jb
or
push
test
cmp
mov
add
sub
in
dec
and
dec
mov
stos
int
es
roll
je
mov
loop
sbbb
or
or
xorb
ret
jb
fisubl
inc
and
ss
iret
ret
hlt
push
pop
aam
in
rclb
push
lahf
mov
mov
orb
subl
dec
or
push
lcall
gs
push
jb
and
cmp
movsl
mov
gs
scas
inc
push
imul
xchg
cmp
mov
add
mov
imul
xchg
adc
aad
and
movsl
ret
das
xor
mov
mov
stc
push
xor
inc
xor
scas
test
in
rcl
jb
jge
jp
mov
fs
lods
mov
xchg
ljmp
out
mov
sahf
add
dec
loope
sub
sbb
or
mov
mov
mov
add
in
das
outsl
cmp
and
loope
imul
insb
push
adc
mov
pop
mov
xor
mulb
or
lds
mov
rol
fiadds
bswap
icebp
repz
int
lea
fs
mov
and
inc
xlat
jecxz
fwait
jne
or
insl
pop
ret
ficoms
jnp
out
icebp
jecxz
addr16
fnsave
fs
sti
data16
pop
xchg
sbb
iret
incb
popf
shrb
std
sub
adc
xor
repnz
xchg
jmp
and
fstl
mov
jl
xor
scas
in
popf
pop
mov
lods
mov
movsl
call
cmp
push
pop
repz
add
gs
jp
jns
insl
call
stos
popaw
jb
mov
cs
arpl
cmp
imul
pop
in
fsts
push
jnp
mov
ret
mov
aad
arpl
dec
out
and
jnp
jae
adc
cs
out
pusha
addl
or
int
call
push
shlb
lea
sub
adc
xchg
repz
cmpsl
jmp
ds
aas
divl
cwtl
ret
nop
push
movsl
imul
and
and
pushf
or
hlt
cmpsb
cmp
mov
into
sub
leave
push
shrl
inc
jg
jecxz
hlt
test
rcrb
lahf
or
imul
jp
icebp
lret
push
jb
mov
movsl
sahf
cmp
pop
dec
out
pop
into
inc
push
jecxz
mov
cmpsb
out
les
add
scas
pop
or
inc
jmp
ss
mov
shl
adc
pop
insb
or
or
pop
std
inc
lcall
fsubrp
rolb
jge
mov
scas
pop
pop
mov
push
clc
pop
mov
sub
aam
lods
push
popa
jle
cli
push
push
orl
inc
mov
ds
push
fsubrl
cmc
cmp
add
jle
fwait
dec
mov
orb
cltd
mov
es
stos
dec
xchg
int
xchg
ret
mov
dec
cmp
jge
pop
adc
sub
pop
xchg
xchg
inc
xchg
add
sahf
push
jg
push
inc
sbb
fdivr
mov
xor
stc
das
int3
pop
sub
cmp
lock
pop
stc
out
push
mov
jnp
sbb
inc
stos
faddl
call
cld
cmp
pop
sbb
sbb
xor
rol
cld
xchg
pushf
push
mov
or
pop
mov
stc
ss
mov
test
and
adc
stos
out
push
inc
mov
adc
fildl
dec
xlat
jg
sub
out
pop
sbb
pushf
jp
popa
jae
int
mov
xor
loope
pop
fwait
cmp
mov
cmc
lods
mov
ret
mulb
add
call
xchg
scas
inc
imul
mov
mov
int3
sbb
shr
inc
mov
decl
icebp
movsl
add
sub
jp
dec
js
pop
jno
ljmp
ds
in
push
or
or
mov
addl
xchg
loopne
negl
sbbl
mov
mov
out
or
fs
loopne
dec
inc
mov
push
icebp
imul
xchg
repnz
lcall
scas
cmp
lea
jmp
lods
std
insl
or
mov
or
out
lods
and
push
call
dec
or
sbb
adc
add
rol
jl,pn
ds
stc
add
and
lock
jge
lahf
mov
mov
xchg
add
inc
es
movsl
xor
xchg
cltd
jl
jns
dec
cltd
int
add
dec
mov
lea
jmp
sub
mov
cmp
pop
xchg
cwtl
xor
lcall
fnsetpm(287
sahf
pushl
sbb
sbb
imul
push
push
cwtl
scas
inc
imul
jle
fucom
scas
xor
xor
inc
inc
inc
xor
inc
xchg
out
push
push
pop
es
arpl
push
cwtl
repnz
sbb
in
sub
cmpsl
jle
dec
test
sub
data16
jb
imul
sub
loopne
mov
dec
cmp
and
jns
lahf
imul
push
pop
cmp
pop
in
clc
inc
sahf
pop
ljmp
les
fnstcw
dec
cmc
and
ljmp
jge
push
stos
xchg
jecxz
sahf
pop
add
ja
aaa
dec
sti
mov
sub
rol
inc
jge
fsubs
in
pop
out
ret
out
pop
mov
pop
addb
dec
in
push
or
inc
push
pop
cwtl
das
xor
mov
jb
adc
test
push
cmp
mov
xor
mov
sbb
lods
or
test
push
xchg
sahf
push
xchg
scas
ret
xor
daa
push
adc
scas
sbb
testb
push
test
adc
lods
mov
push
daa
sbb
insl
scas
xchg
push
inc
stc
les
leave
jecxz
fcomps
call
mov
rorl
cmpb
notb
pop
incl
bound
mov
xor
mov
ljmp
movsb
nop
dec
mov
out
bound
cmpb
arpl
into
xchg
int3
push
fwait
adc
dec
xor
imul
popa
loop
adc
mov
ret
jno
cmpsl
push
sbb
mov
mov
insb
das
fstl
jl
add
xchg
leave
cmpsb
sbb
sbb
xchg
into
mov
cmpsb
add
sub
les
mov
lds
inc
repnz
adc
adc
loop
imul
sub
cmp
mov
push
mov
xchg
rcll
adc
in
add
jo
enter
mov
push
mov
sarl
lret
push
push
lds
aam
cli
xchg
mov
mov
mov
scas
lcall
sbb
push
xchg
sbb
sub
mov
arpl
shll
xor
rcll
sub
mov
mov
repz
sbb
mov
nop
inc
sahf
sbb
js
adc
sub
jecxz
scas
sbb
jmp
push
or
adc
mov
mov
mov
outsl
mov
mov
add
popa
push
and
xor
test
cmpsb
push
or
mov
shll
xor
insb
adc
fcoms
stos
inc
insb
mov
mov
xlat
js
popa
xchg
test
hlt
enter
and
je
and
arpl
fildll
movsb
lods
cmpsl
sbb
idivl
sub
mov
andl
or
lods
lods
in
subb
andb
adc
jge
insb
scas
sbb
gs
into
jmp
and
mov
andb
das
push
hlt
and
out
xchg
jb
push
mov
js
call
and
mov
lods
mov
jecxz
xchg
push
mov
pop
cwtl
jno
dec
push
icebp
loopne
dec
mov
adc
dec
dec
pop
inc
sbbl
jmp
sbb
xor
ja
mov
rol
scas
ds
stos
decb
xchg
cmp
push
jo
cmp
ja
test
inc
repz
jbe
sbb
lcall
push
fnstcw
movsb
push
cmpsb
push
ret
and
add
jecxz
clc
sahf
cmp
mov
lcall
enter
mov
pop
aad
ret
mov
mov
outsl
ffreep
mov
xor
bound
push
orps
lea
inc
adc
aam
subb
adc
push
dec
add
imul
jae
ret
xor
fwait
or
test
repz
fisubrs
clc
add
loopne
add
ret
xchg
xlat
ret
frstor
enter
xchg
cwtl
int
push
adc
loope
push
push
and
sbb
mov
xor
or
lahf
jle
add
push
faddl
xor
xor
stc
gs
push
add
mov
pop
iret
clc
mov
rolb
mov
jbe
sbb
ficoms
icebp
andb
mov
sbb
fwait
cli
js
nop
in
inc
stos
pop
ret
mov
jmp
lods
mov
fnstsw
int
push
jge
jo
add
repnz
aas
cmp
pop
cltd
movsw
mov
mov
xlat
sub
and
and
mov
mov
jbe
ds
iret
inc
jg
pop
pop
mov
mov
add
daa
xchg
call
or
mov
cmovp
div
adc
cmc
hlt
push
lret
cltd
js
je
pop
dec
pop
sbb
out
stc
mov
push
hlt
jnp
movsb
aam
scas
pop
push
cmp
dec
pop
scas
adc
aam
pop
sbb
dec
fstpl
cmpsl
ja
and
lret
push
shll
insl
sbb
mov
fistl
mov
rcr
nop
lea
sahf
in
adc
xor
jo
fst
add
fstpl
push
adc
mov
gs
ret
imul
mov
dec
lock
scas
jcxz
cmpsl
das
pop
mov
movsl
push
push
adc
stc
pop
mov
call
lret
arpl
loop
inc
outsb
mov
xchg
jns
inc
mov
or
stc
out
jnp
dec
sub
loopne
loopne
sbb
push
dec
mov
adc
jae
adc
pop
jg
lods
jp
xor
jns
pusha
push
jge
fistpll
xor
int
push
inc
push
out
jbe
jge
jo
mov
movsl
call
and
cld
xorl
sub
shr
js,pt
adc
push
fbld
push
rclb
xchg
inc
jno
xchg
out
out
sbb
sarb
push
sbb
sbb
push
rcl
enter
push
mov
cmpsl
adc
or
cld
es
push
and
jmp
jae
ds
addr16
sub
and
sar
sub
je
fwait
mov
subb
es
in
dec
scas
sar
push
lock
popa
cmpsb
pop
cs
jg
repz
mov
lcall
fistpl
inc
int
in
enter
bound
xor
push
mov
jl
sub
push
jae
scas
inc
cmp
and
jo
jno
fisttpll
pushf
bound
cwtl
dec
pop
jge
sbb
hlt
repz
xchg
inc
xchg
stos
xlat
cmp
cmpsl
mov
xchg
jns
cmp
mov
dec
jmp
int
orb
dec
stos
pop
inc
mov
stos
mov
rcr
out
push
ret
mov
cmp
sub
xor
push
lahf
jnp
lahf
dec
sahf
jmp
sbb
cltd
inc
insb
stc
shrl
sbb
lret
and
mov
inc
cmovae
mov
int
push
mov
loop
imul
call
std
inc
pusha
add
clc
aaa
repz
or
imull
adc
jp
cmp
ja
pushf
repz
int
xchg
sbb
insb
xorb
ljmp
into
subb
xor
shrb
scas
out
pop
dec
add
mov
repz
aas
imul
or
dec
mov
out
xorl
lea
jnp,pt
movsl
outsl
add
inc
jl
lahf
lds
xchg
int
cs
fsubrl
pop
inc
pop
gs
sbb
or
mov
les
mov
repz
sbb
push
add
test
pop
test
adc
gs
and
lods
sbb
pusha
push
jno
hlt
mov
and
xacquire
adcb
pop
out
or
ja
test
adc
push
jge
add
dec
mov
sti
movq
stc
sarb
dec
mov
pushl
ficomps
fwait
inc
mov
xchg
xchg
adc
jl
sub
push
ret
popl
sti
cmpsb
cmp
mov
cmp
mov
cmp
cmpsb
rcrb
mov
adc
pop
pop
mov
push
mov
aad
mov
inc
dec
pop
xchg
dec
jg
inc
bound
cld
outsl
cmp
lock
inc
test
add
ds
lea
jl
inc
cltd
cmp
xchg
f2xm1
xor
stos
outsb
xchg
aad
jg
sahf
push
xor
or
loop
cmp
jp
subl
and
dec
lahf
mov
mov
enter
gs
subb
movsb
add
into
lret
jbe
add
xchg
ss
ret
pop
xchg
rcll
hlt
clc
lret
mov
sub
in
mov
mov
inc
push
test
sbb
leave
scas
test
aam
les
mov
push
in
inc
cld
adc
mov
inc
cmpsb
mov
sar
pushf
outsb
jae
les
pop
iret
mov
in
adc
adcb
cmp
xor
and
cmp
out
mov
dec
xor
sub
jbe
fs
jns
xor
cmp
jb
movsb
sti
push
divl
dec
push
and
ret
inc
inc
sarl
in
ja
iret
cli
icebp
out
pusha
test
aas
adcb
or
jbe
out
movl
sub
repz
xchg
push
gs
push
and
adcl
push
lods
mov
ret
fistpll
add
pop
fisubl
scas
push
xchg
pop
push
and
mov
sbb
pop
aad
mov
jnp
lret
dec
fnstcw
pop
into
mov
lods
sub
daa
mov
and
xchg
sarl
imul
push
push
mov
rcrl
and
in
orl
mov
outsl
push
mov
adc
fsubrp
cld
xor
mov
jmp
enter
loope
mov
jns
addr16
or
aam
cwtl
bound
popa
in
dec
xchg
xor
jl
std
sahf
lods
sub
add
out
xlat
xchg
int
clc
xor
dec
xchg
dec
bswap
pop
scas
push
xchg
aam
push
and
mov
and
and
jb
xor
int3
in
inc
xor
mov
jmp
mov
subl
jmp
sbb
sub
jnp
mov
add
divl
push
jns
push
pop
jp
loopne
outsb
sub
jne
adc
pusha
mov
cmp
movsb
cld
pop
jp
jmp
pop
pop
mov
pop
mov
push
add
data16
xchg
sub
push
sub
das
test
cmp
fnsave
into
push
or
dec
jmp
inc
ret
mov
addr16
adc
push
rorb
cmp
mov
imul
adc
mov
imull
push
cwtl
bound
jmp
call
mov
addr16
sub
repz
mov
call
shrb
aad
lock
cmovge
decb
inc
jge
and
pop
push
dec
xchg
pop
dec
add
jae
xchg
popf
mov
pop
or
negb
and
and
je
or
mov
or
jns
sub
outsb
sub
cmp
jp
adc
xor
mov
sti
mov
mov
out
sub
sahf
cmp
mov
mov
xor
fists
sbb
mov
rorb
test
lahf
aas
loope
loopne
mov
or
xchg
xor
and
adc
loop
rolb
jmp
or
cmp
xchg
xlat
push
dec
and
rep
les
js
jle
mov
aad
aam
icebp
data16
xor
sub
mov
ss
xchg
inc
inc
add
outsb
xchg
scas
imul
dec
pop
aad
out
mov
xorb
pop
stc
add
pop
arpl
jge
dec
repz
insl
cltd
adc
faddl
inc
push
out
testl
jge
in
push
cmpsb
adc
je
push
arpl
sti
xchg
adc
loope
lret
fcompl
clc
xor
pushf
jge
pop
das
jne
out
mov
subb
in
cmpsl
in
adc
adc
add
mov
lret
pop
lret
movsl
cmp
sbb
dec
pop
xchg
mov
dec
fistps
addr16
push
popf
loope
mov
test
insl
into
mov
loopne
jns
cld
jg
test
add
lret
dec
or
rclb
aad
out
int3
pop
fadds
mov
inc
jne
add
lahf
idivl
aas
and
sbb
pop
pop
fwait
call
lcall
out
movsb
mov
xchg
aaa
pop
jns
sub
inc
out
ljmp
fwait
jnp
sub
cld
popf
push
clc
sub
fldenv
adc
mov
push
inc
repz
mov
in
out
pop
fdivrp
lcall
xchg
repz
lret
out
cs
imul
cmpb
dec
loop
sar
mov
sti
add
negl
pushf
scas
mov
or
push
cmc
in
push
mov
int3
add
dec
pop
mov
sahf
mov
pop
xor
ret
in
jb
add
adc
stos
pop
loop
cmpsl
jno
jmp
add
jmp
jmp
cmc
mov
stos
mov
sub
aad
mov
push
push
inc
pop
jp
sbb
push
cmp
cwtl
and
inc
jg
and
cmp
imul
dec
push
les
jb
cwtl
arpl
or
scas
xchg
mov
es
flds
iret
adc
in
inc
pop
xor
fidivs
mov
or
out
cmpsl
icebp
mov
jle
inc
aad
and
cmp
fstl
add
push
adc
sub
add
inc
inc
es
mov
sbb
lds
mov
js
mov
ljmp
addl
sbb
dec
push
dec
pushf
pop
mov
inc
mov
add
cmp
sub
std
xor
inc
int3
add
int
xchg
hlt
scas
lcall
jne
int
insb
cltd
shll
mov
lcall
jb
out
addb
sbbl
jns
sbb
sbb
lcall
ja
sub
inc
adc
fstl
cmc
sub
adc
add
and
das
mov
mov
jmp
mov
fldt
bound
pushl
or
aas
sahf
jb
add
add
hlt
cmp
mov
es
or
or
sbb
insb
lods
mov
loop
push
or
jle
scas
sub
fisubrl
stos
jnp
sbbl
rcr
jle
ds
sbbb
sub
packuswb
jg
or
or
mov
imul
pop
xor
loope
mov
lods
lea
nop
divb
jp
nop
sub
push
psllq
adc
mov
sti
rol
sbb
fnstsw
sbbl
pushf
scas
pop
mov
mov
lds
mov
outsl
pop
cli
mov
mov
insl
stc
enter
mov
jmp
outsb
jno
jle
mov
jns
test
pop
cld
xchg
clc
repz
inc
int
sub
mov
popf
mov
or
jne
je
mov
mov
daa
sbb
xor
pop
add
cmp
cmp
lea
sub
sbb
xchg
xchg
mov
imul
adc
mov
sbb
or
test
aam
and
xorl
sahf
or
fucom
addl
imul
mov
repnz
mov
mov
pusha
fldt
jae
aaa
mov
lods
les
push
dec
xchg
lahf
mov
movsb
inc
test
dec
mov
test
mov
xor
pop
xor
mov
stos
mov
sub
out
cmp
cwtl
dec
pusha
xchg
cmp
sbb
adc
inc
icebp
push
cli
inc
lds
enter
pusha
movsb
movsb
dec
mov
xor
fimull
pop
adc
shlb
aam
ja
lret
sub
push
aam
push
pop
lds
repz
adc
xchg
add
pushf
pop
mov
pop
mov
xchg
ficompl
jg
pushf
push
sbb
dec
jns
fstps
adc
jbe
mov
push
sbb
jnp
es
cmc
xchg
ret
xchg
cmc
adc
sub
cmp
loop
jne
loope
bound
xchg
push
pusha
enter
xor
sbb
test
into
jb
lea
push
xchg
push
and
into
lds
popa
inc
repnz
or
xchg
repnz
xchg
sub
add
pop
arpl
rorb
jmp
dec
pop
xchg
in
rcl
mov
in
jg
sbb
xlat
xchg
int
push
sub
jnp
fwait
xor
dec
mov
and
xchg
fsubr
push
dec
mov
add
sbbl
ljmp
cltd
insb
fstp
xor
push
sbb
xor
push
mov
sub
lods
bound
or
push
xor
sub
mov
jo
test
xchg
stc
cwtl
sbb
in
cmpsb
clc
imul
or
nop
xlat
pusha
imul
mov
inc
cmpsl
stos
and
cli
scas
xchg
sbb
call
shlb
aas
push
cs
or
test
fmuls
popa
pop
in
xchg
hlt
pushl
jge
xchg
sti
leave
adc
ljmp
jecxz
adc
jb
stos
mov
and
add
ja
jb
inc
leave
fsts
jmp
sbb
data16
push
movsb
adc
mov
icebp
cmp
lods
mov
std
fidivs
cwtl
adc
scas
and
push
xchg
add
aad
rclb
fisttpll
cld
cmp
xchg
push
xchg
cmp
divl
fsubrl
xlat
mov
mov
cmc
cmc
negb
imul
ja
hlt
xor
sbb
fdivs
int
out
or
xchg
addr16
fs
adc
xor
add
ret
push
mov
inc
mov
push
test
xor
pop
rorl
out
mov
sbb
jnp
loop
mov
nop
ret
in
rorb
dec
clc
push
pop
imul
pusha
stc
sub
push
cmp
pop
sarb
push
sti
cmpsb
sbb
mov
jno
rcll
pop
xor
mov
pop
jo
test
adc
into
push
hlt
jecxz
add
sbb
mov
pop
fbstp
les
int
sub
mov
inc
outsl
and
add
stc
pop
dec
sub
in
mov
add
fmuls
push
insl
ljmp
mov
movups
mov
and
mov
pop
push
mov
aad
or
call
and
push
xor
sti
push
sbb
cmp
xor
ds
cld
sar
and
jnp
push
subb
mov
jns
or
daa
cmp
or
leave
mov
fsubr
ret
fwait
dec
xchg
addr16
test
cmp
mov
insl
lea
mov
decb
pusha
pushf
movsl
sbbl
addr16
lock
gs
or
pop
pop
push
frstor
pushf
stos
push
jnp
and
dec
js
add
sbb
lret
dec
insl
scas
cli
vsqrtss
fcompl
adc
out
jge
call
xor
sub
sub
in
les
xor
add
adcl
ret
sbb
repz
jae
cmp
inc
mov
mov
stos
das
or
clc
push
push
ljmp
popa
scas
or
es
and
cltd
cmp
ret
mov
adc
daa
sbb
subb
push
inc
jbe
jnp
mov
cltd
adc
mov
scas
bound
jnp
jle
jmp
loop
icebp
ja
adcl
loopne
inc
push
sub
fwait
cld
call
fldl2t
jmp
sub
mov
adc
pop
fwait
push
mov
add
mov
insl
cmp
jo
repz
outsb
movsl
pop
es
sub
dec
inc
jle
int
fisttpl
lahf
cli
adc
sahf
jecxz
xchg
in
mov
hlt
push
xchg
sbb
sbb
ss
push
ja
imul
mov
bound
and
scas
add
adc
rol
push
sbb
lret
inc
mov
je
fldcw
pop
ret
faddl
push
cmpsb
sbb
cmp
fwait
pop
mov
mov
mov
stos
je
and
test
das
jns
icebp
decl
xor
pusha
fisubrs
xor
cli
dec
ret
aaa
outsl
xchg
sub
mov
loop
pusha
mov
shl
jb
shll
xchg
add
add
mov
fs
scas
test
mov
inc
push
lds
out
sarb
out
mov
add
push
push
add
lret
mov
cwtl
mov
jns
pop
in
int3
dec
inc
push
and
sub
out
hlt
mov
sub
sub
andl
push
jmp
je
in
pop
mov
and
or
insb
jmp
xchg
stc
mov
sub
pushf
cwtl
inc
push
push
cmpsb
and
sbb
push
or
lds
mov
add
es
in
push
mov
cmpsl
out
pop
cld
adc
dec
leave
cmp
es
fwait
dec
in
stc
repz
or
sbb
rcll
jae
shlb
out
jae
cli
aam
xor
push
insb
hlt
mov
jb
lret
jns
cmp
fnstsw
ret
xchg
dec
adc
and
test
mov
mov
sbb
pop
sar
fwait
cmp
arpl
in
dec
inc
jp
arpl
adc
push
testl
push
xchg
rcrb
stos
movsl
pusha
xchg
lret
lret
js
pop
daa
dec
xor
cmpsb
lds
or
mov
push
mov
xchg
xor
leave
mov
inc
icebp
repnz
sbb
incl
dec
mov
mov
enter
mov
push
dec
in
popf
addr16
cmc
mov
inc
sbb
loopne
mov
mov
or
xor
lret
inc
pusha
cmpsb
jbe
frstor
and
fwait
lcall
jbe
imul
pop
lcall
xchg
cmpsb
mov
push
js
lods
stc
cmp
adc
pusha
sub
mov
iret
hlt
mov
and
and
jno,pt
push
mov
cmp
enter
jo
and
xchg
fimuls
mov
in
std
xor
adc
into
shr
mov
sub
lods
jmp
in
cwtl
mov
mov
fwait
pusha
icebp
xchg
ja
lret
dec
out
mov
jbe
sbb
loop
repnz
xlat
xchg
xor
clc
lods
xchg
fwait
xchg
movsl
addr16
jo
cmp
test
fucom
stos
inc
dec
iret
in
call
mov
pop
lds
sub
inc
or
outsb
cmc
outsb
inc
jb
push
inc
imul
sbb
out
xchg
dec
pop
push
ret
mov
pop
fmuls
pop
hlt
jmp
addr16
pop
test
jle
push
cmp
sti
sbb
aaa
rorl
inc
lods
cwtl
dec
mov
push
cltd
adc
aam
enter
jl
cmpsl
pop
lret
ror
cmp
mov
lret
mov
pop
add
lret
inc
andl
cmp
cli
mov
jne
mov
mov
test
inc
int3
addr16
faddp
pop
sub
lds
xor
mov
out
push
jbe
sbb
pop
inc
int
add
sub
sub
sti
jle
cmp
push
mov
lods
cs
add
ss
outsl
xchg
jg
xorl
loope
js
pop
jne
aam
ss
ljmp
jecxz
inc
jns
lret
in
pusha
arpl
push
cmp
jp
mov
mov
loopne
das
pop
aas
or
loopne
or
push
push
jae
or
add
xchg
mov
add
pop
push
cltd
aam
xor
fwait
out
addr16
lods
jo
push
fnsave
pop
pop
lock
push
mov
nop
roll
cmp
adc
aam
inc
add
lret
pop
xchg
daa
pop
cltd
dec
notb
scas
mov
pop
mov
leave
cmc
xor
test
stc
pop
push
and
shrl
add
stc
inc
test
cmp
push
xchg
dec
or
add
sub
mov
daa
pop
lea
pop
mov
out
cmpsl
rolb
std
imul
negb
add
popf
aam
movsl
jmp
stos
mov
mov
mov
mov
lods
inc
lods
test
or
or
test
add
jbe
daa
ja
sub
popa
rcrb
xlat
jae
sub
push
push
divl
xor
xor
xchg
xor
jnp
pushl
scas
aas
jno
push
pushl
jne
or
popf
fldcw
adc
jmp
rolb
lret
notl
lcall
mov
lret
out
xor
mov
lea
fcompl
pop
inc
xchg
je
sub
pusha
xchg
fcoms
or
bnd
xor
add
mov
call
or
mov
movb
cmpsl
lahf
aaa
jnp
pop
xor
shlb
pusha
lret
loope
xor
lret
mov
adc
push
divb
mov
dec
call
or
or
xchg
sbb
lahf
aad
repz
xlat
jb
pop
out
pop
sbb
mov
fiadds
mov
enter
lods
imul
mov
add
inc
stc
xor
in
sbb
mov
lcall
in
mov
pusha
cmp
xor
ja
fucomip
dec
pop
inc
xchg
inc
sbb
pop
inc
mov
pop
pop
mov
and
dec
push
sub
sub
mov
data16
adc
and
jne
out
jb
out
xchg
jmp
push
xor
out
jle
outsb
adc
cmp
cmp
mov
jbe
stos
aaa
flds
adc
fimull
sub
daa
or
push
jecxz
or
andl
mov
and
xchg
cmp
cmpsl
rcll
inc
xor
out
adc
rcrb
or
out
test
sahf
gs
push
aaa
outsl
aas
add
repnz
mov
inc
movsl
mov
stc
imul
iret
jmp
xor
shll
les
mov
sti
lods
out
testl
leave
xchg
xor
cmp
mov
aam
aad
sbb
inc
ds
push
aaa
and
ja
mov
aaa
xor
mov
and
inc
pop
lret
mov
inc
popa
cmp
mov
pop
mov
dec
fnstsw
sbb
jmp
enter
push
add
ja
fidivrs
lret
mov
xor
loope
push
lcall
jecxz
cmp
adc
iret
ret
xchg
lock
xor
xchg
sub
sub
mov
mov
pusha
lea
out
subb
stc
nop
inc
repnz
cmp
cmp
add
pop
out
call
mov
sbb
js
jecxz
cli
xor
jbe
dec
jo
sbb
int3
xlat
jne
imul
push
cmp
sbb
push
sub
jge
filds
pop
mov
xchg
into
xchg
jle
add
mov
cmp
mov
adc
pop
dec
in
rol
cmp
lret
push
sbb
jl
cltd
push
stc
out
orb
ss
cwtl
rorl
adc
lea
dec
fidivl
and
pop
or
imul
cld
mov
call
adc
adc
or
mov
cmp
adc
sub
sub
adc
or
stos
sub
add
out
notl
dec
mov
dec
icebp
xor
ret
sub
xchg
mov
ja
stos
mov
sub
loope
adc
cmp
cltd
pop
iret
ret
test
inc
xchg
push
mov
sar
in
fwait
dec
mov
pop
xchg
xor
cwtl
fdivl
test
ja
jg
mov
mov
int3
add
xor
cmpsl
fldz
mov
insl
outsb
inc
das
insl
out
adc
jo
ds
sub
xor
sbbb
inc
mov
adc
mov
push
rcl
sbb
sbb
int
mov
xchg
cli
mov
rorl
xchg
cld
jno
jno
and
cmp
out
out
jecxz
notl
iret
std
fisubs
xor
sub
sub
add
das
mov
xlat
and
jb
jno
jno
sub
sub
daa
push
sbb
push
mov
cmpsl
jmp
repz
bswap
addr16
mov
push
mov
pop
lock
mov
jl
movsb
sub
mov
inc
loopne
inc
lods
jns
sbb
mov
cmc
clc
pop
iret
cli
push
fmul
aaa
fnstcw
adc
imul
mov
pop
ret
push
jbe
shlb
sbb
cmc
ljmp
aas
push
adc
or
pushf
push
in
or
sbb
mov
push
xchg
in
test
and
pop
or
pusha
adc
popa
lcall
push
mov
outsl
mov
lret
mov
idivb
push
mov
out
xlat
dec
pop
mov
jecxz
roll
fiaddl
and
rorl
jae
add
aad
jbe
dec
cmpsl
dec
fwait
and
xor
popf
xchg
mov
in
pop
push
jmp
xor
dec
lahf
int3
mov
fs
sbb
xchg
pushf
or
push
lods
xlat
adc
es
es
mov
adc
push
mov
and
test
mov
push
std
shl
mov
iret
imul
fisubl
pop
fwait
pop
aaa
xchg
push
adc
pop
mov
xchg
jns
in
ret
cmc
adc
scas
scas
dec
leave
aam
dec
mov
ret
cmpsb
stc
and
ret
dec
xchg
bound
add
mov
adc
or
jae
out
push
xor
jnp
pop
add
ret
and
test
pop
lret
loop
pop
or
cmp
lahf
sub
in
divb
xor
addb
cmp
sub
cmp
fadds
int3
sbb
inc
jne
xlat
inc
std
ja
and
inc
xor
inc
add
fbstp
addr16
mov
rcrb
push
pop
ja
xchg
or
imul
and
fdivrs
andb
loop
and
shr
cmp
add
test
push
inc
cmpsl
je
fidivrl
lcall
pop
adc
in
push
test
loop
outsb
ja
stos
imul
xchg
adc
adc
mov
cltd
jle
jae
xchg
aad
push
or
fisttpl
int
xchg
xchg
in
add
lahf
mov
lahf
mov
mov
xorl
fsubrs
fsubl
mov
xchg
movsb
mov
jae
lcall
stos
daa
outsl
push
jo
sti
jp
loop
mov
xchg
push
jg
lods
jg
out
sub
test
mov
xor
in
adc
mov
fmul
test
xor
sahf
decb
mov
add
daa
fcompl
pop
sub
insb
js
sbb
sysexit
mov
ljmp
inc
xchg
push
xchg
out
addr16
loop
jb
das
xor
leave
nop
inc
pushf
xchg
sub
ffreep
pop
push
int
dec
and
mov
shlb
mulb
test
jl
test
dec
sbb
add
push
jl
addr16
inc
loope
cmp
xchg
mov
test
mov
mov
scas
scas
cmpsl
pop
adc
popf
xor
lahf
popa
pop
mov
lea
mov
push
pop
xchg
sti
sbb
xor
into
sbb
inc
sub
xor
jb
sti
out
xor
mov
test
pop
xchg
sbb
mov
insl
scas
inc
push
pusha
inc
mov
mov
sub
mov
xor
aad
ficoms
xchg
movsb
rorl
test
and
pusha
jmp
push
call
sub
ret
test
or
pop
sub
daa
jg
in
add
stc
test
lcall
jae
insb
jge
mov
lcall
cmp
push
ds
out
dec
insl
lahf
icebp
out
dec
inc
sub
hlt
mov
lea
insb
push
mov
test
add
iret
into
rcrb
mov
rorl
and
xor
push
xchg
mov
sub
push
nop
adcb
cmp
test
lods
lea
push
sbb
xor
push
es
dec
out
in
std
mov
or
lret
mov
pop
subb
loope
mov
cs
mov
cmp
daa
loop
fldt
dec
jb
or
in
nop
ret
das
lahf
ja
insb
jl
sub
jno
mov
dec
lds
jp
fsub
adc
ds
add
mov
or
jmp
shrb
test
mov
mov
sub
push
jno
bound
out
or
lcall
movsb
fisubrs
add
div
xor
push
test
xor
or
mov
rcll
push
call
es
stos
aas
je
in
push
mov
sub
xchg
mov
fistpl
xchg
push
in
int3
jge
int3
insb
divb
pusha
xchg
sub
xlat
int
dec
pop
sbb
enter
ss
dec
repz
outsl
sbb
in
filds
jnp
xchg
inc
sbb
cmc
mov
icebp
lea
dec
cmp
inc
jmp
fwait
pusha
pop
mov
xchg
mov
jecxz
and
stos
inc
popa
push
and
inc
push
xchg
test
jno
cmp
xor
mov
and
ljmp
mov
mov
pushf
sub
sub
mov
inc
mov
mov
xchg
xchg
movsl
pop
mov
movsl
iret
mul
cmp
add
das
push
scas
push
xor
jecxz
call
stc
mov
rolb
ljmp
dec
dec
gs
jne
dec
xchg
cmp
jne
loop
out
push
xor
in
das
mov
iret
mov
push
dec
jno
repz
scas
push
out
popa
loopne
incb
jns
dec
js
dec
dec
jb
in
cs
xchg
test
fsub
xchg
pushf
push
add
lcall
mov
xchg
js
ret
fsub
add
icebp
sub
add
xchg
dec
mov
adc
vzeroall
inc
sub
mov
mov
movsb
pushf
mov
push
push
cbtw
lret
mov
fidivrs
pop
outsb
xlat
push
in
sub
jecxz
push
xlat
mov
mov
or
push
lret
hlt
outsb
add
jp
mov
fbld
or
pop
loopne
adc
mov
fsubrl
scas
adc
dec
popa
push
jmp
addr16
flds
dec
pop
sub
mov
sahf
and
aam
or
jnp
adc
mov
inc
inc
icebp
or
daa
lock
inc
xchg
mov
pop
adc
mov
scas
pop
mov
insb
pop
sbb
pop
sub
xchg
negl
mov
imul
sar
push
xchg
and
cmpsl
lret
ficomps
mov
fcoms
out
or
pop
fmuls
stos
pop
scas
xlat
mov
orl
mov
pop
scas
cli
and
scas
jb
data16
fcomps
std
inc
xchg
and
test
mov
in
mov
dec
es
lds
negl
pop
pop
out
cmp
jmp
out
or
testl
into
mov
inc
clc
push
scas
je
fnstenv
adc
push
fcom
inc
test
cmp
xchg
stos
or
dec
jne
jne
mov
psraw
loopne
lahf
pusha
out
lock
push
cs
mov
test
adc
xchg
pushf
sarl
pop
and
jp
mov
pop
mov
test
fadd
mov
add
testb
jae
dec
outsb
je
shll
lea
sub
cltd
adc
add
adc
sub
inc
fnstenv
inc
sbb
cmpsl
fs
lds
xchg
dec
add
rcrb
fiadds
fisttpl
in
inc
inc
and
xchg
xchg
sbb
dec
test
pop
lahf
and
sahf
lcall
dec
fisubl
icebp
pop
sbb
xchg
mov
mov
or
mov
and
sti
inc
sub
jl
jl
addr16
int
xor
jg
fldcw
bound
out
out
popf
adc
test
les
lods
xchg
lods
aad
dec
call
cmp
cmpb
call
pop
aad
aaa
into
rcrb
and
jge
jns
ds
gs
mov
pop
xor
push
pop
jmp
inc
stos
loop
or
xlat
subb
cmpsl
jg
int
mov
fxam
sti
enter
jno
cmova
and
cmpsb
enter
repz
daa
and
xchg
sbb
pop
adc
jb
adc
outsl
lock
inc
mov
mov
repnz
inc
adc
cwtl
mov
inc
icebp
out
loop
dec
lods
xorl
in
lret
lea
lock
cmp
std
or
jl
or
movsl
xor
mov
movsl
push
mov
mov
stc
or
inc
mov
cmp
pop
inc
jnp
sarl
jno
xchg
inc
stos
dec
sub
push
pop
inc
push
pop
test
aas
popa
xchg
jb
test
add
scas
adc
adc
cmp
dec
add
pop
cmp
out
jns
cmp
push
xlat
jmp
mov
cld
push
sbb
xchg
mov
inc
add
das
jg
lahf
push
push
jge
cmpsb
pop
call
bound
cld
push
mov
pop
mov
inc
cmpsl
lods
cmpsl
xor
shll
or
and
pop
stos
and
or
or
sub
cmp
jae
jl
mov
pop
stos
sbb
ret
in
or
in
jmp
movsl
decl
pop
jge
push
test
xor
push
aas
nop
xchg
cwtl
sbb
or
lcall
pushf
cltd
mov
or
mov
adc
in
cmp
movsl
xchg
sbb
push
adc
ds
aam
in
lods
mov
cmc
cmp
or
leave
dec
test
andl
pop
xchg
fimull
inc
push
stos
cwtl
add
aaa
int3
xor
dec
orl
test
or
test
call
cmp
shrl
dec
xchg
js
mov
ds
mov
mov
das
fmuls
adc
adc
test
insb
xchg
ds
aas
push
cli
sbb
mov
sub
lahf
hlt
sub
or
push
xor
enter
xchg
cld
movb
mov
pop
cmp
push
shrb
mov
outsl
jo
mov
mov
xlat
push
loope
sub
sbb
push
mov
push
sub
lcall
jecxz
xor
aas
sub
punpckhdq
or
xchg
or
inc
stos
xchg
pop
xchg
mov
jmp
sbb
ljmp
mov
cli
push
inc
push
insb
mov
cmpl
inc
lret
mov
in
xor
ds
push
js
lds
cmp
mov
popa
fisubs
test
mov
mov
ss
cltd
mov
les
xchg
push
insl
or
add
lods
ja
popa
movsb
sahf
fcoms
cli
and
jbe
lret
cmp
cmp
ss
adc
jmp
lret
stos
cwtl
lds
add
in
pop
shrb
jecxz
imul
add
push
pop
jmp
or
jnp
or
pushl
cmp
push
rcll
jnp
add
rcrb
mov
cli
bound
pop
mov
sarl
pop
sub
jecxz
mov
jp
lods
add
lcall
sub
mov
pop
clc
popl
sahf
xor
fwait
sti
pusha
push
imul
sub
mov
adcl
pop
pop
and
imul
mov
out
insl
sti
mov
sub
jl
adc
xchg
sahf
out
and
xchg
cmp
xchg
adc
mov
xor
add
loop
ret
sub
fidivs
inc
dec
in
sbb
sub
pop
fwait
mov
lods
xor
and
adc
xchg
xchg
push
jne
mov
pop
jbe
ljmp
cmp
xchg
xor
daa
stos
inc
mov
mov
mov
call
xchg
xor
xchg
lret
mov
dec
push
mov
into
jle
xor
mov
cld
idiv
mov
iret
xchg
sti
popl
adc
mov
les
add
cld
out
pushf
pop
and
sbb
sti
pop
lea
fimuls
mov
ss
notl
mov
adc
sub
mov
ds
nop
dec
dec
test
push
ss
push
in
adc
mov
addl
xor
xor
sub
sub
sub
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
xor
neg
mov
mov
mov
add
orl
imul
subl
mov
mov
mov
adcl
add
sbbl
or
xor
mov
mov
and
mov
orl
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
jmp
rcrb
iret
ja
jno
into
fidivs
mov
push
pop
jp
pop
lds
jo
lods
shl
xchg
xchg
sub
shll
fs
pop
xor
sub
enter
cmp
clc
ds
or
mov
jnp
test
mov
lret
dec
sub
sub
mov
je
sbb
xor
pop
sbb
pop
adc
ret
xchg
out
bound
test
and
pop
pop
lret
outsl
sbbl
cli
sub
pop
stos
rcrb
lret
sarb
cmp
mov
dec
rcrb
pop
rorl
sub
mov
shrb
bound
shl
es
xor
outsb
clc
dec
call
sti
mov
jp
negb
enter
testb
mov
shlb
rclb
jg
jge
mov
push
xchg
lahf
and
and
mov
ljmp
lds
rorb
jecxz
add
or
enter
xorl
sbb
sbb
mov
test
fs
push
jae
outsb
ljmp
fistpll
call
push
scas
cmp
out
arpl
test
insl
cmp
shl
pop
sti
push
les
push
outsl
orb
hlt
aam
dec
test
mov
outsb
mov
outsl
push
pop
pusha
cltd
lds
push
testl
sbb
insb
loop
lea
aas
popf
mov
xor
mov
push
js
mov
mov
sbb
jp
lahf
push
mov
xor
xor
add
xor
push
sbb
xchg
add
xchg
sbbb
fistps
push
insb
add
cmp
nop
or
xlat
cli
pop
das
and
dec
dec
jns
jg
xchg
divl
dec
fsts
out
or
pop
cwtl
shlb
sub
jae
cmp
cmp
fwait
jecxz
mov
push
aam
stos
cmp
dec
rcll
jae
insl
jno
pop
cwtl
hlt
fwait
stos
repnz
sub
xor
adc
mov
mov
mov
inc
addr16
test
mov
push
add
loope
fwait
outsb
call
push
push
jae
sub
or
pop
cmp
xchg
cmp
lret
popa
adc
ficomps
adc
call
mov
rolb
iret
jb
mov
into
daa
xchg
xorl
adc
lahf
or
notl
push
jle
jmp
jp
aaa
negb
and
subb
adc
push
addr16
push
cmp
xor
jge
fisttps
jbe
movsb
gs
xor
loopne
fbstp
jb
dec
cs
fdivrs
fldt
jne
je
cli
dec
pop
aaa
dec
jnp
mov
sbb
add
hlt
out
xchg
inc
int
loop
insl
jge
stos
icebp
mov
or
mov
xchg
insb
jmp
push
movsb
mov
aas
mov
fdivr
rolb
mov
mov
jmp
cmp
arpl
sbb
aaa
jp
test
adc
or
sbb
lret
fwait
std
in
dec
mov
repz
sarb
or
shrl
mov
sbb
xlat
jo
fwait
xchg
cwtl
sarb
dec
bound
xchg
mov
mov
stos
jo
lret
data16
pop
les
jno
mov
pop
ret
add
ljmp
lcall
test
out
inc
shr
lods
scas
popl
push
sub
cmp
cmp
push
orb
iret
xchg
xchg
int3
inc
arpl
or
pop
xor
or
js
rolb
shrb
mov
clc
cmpl
rorb
mov
fldcw
hlt
out
jne
lahf
push
out
pusha
test
gs
jo
cmp
das
sbb
cmpsb
sub
push
psrad
jle,pn
ret
jl
andb
pop
popa
mov
or
or
mov
aaa
lahf
inc
shrb
push
pop
call
dec
out
ljmp
ljmp
add
scas
mov
xlat
outsl
push
mov
sbb
add
insb
aam
pop
mov
add
mov
outsl
test
leave
in
add
dec
mov
hlt
adc
icebp
sub
xchg
or
push
xchg
push
cld
mov
add
dec
pusha
pop
push
out
andb
fmulp
icebp
shl
jmp
in
stos
mov
roll
clc
mov
xchg
dec
fdivs
inc
imul
bound
xchg
test
mov
nop
sub
mov
mov
pop
sahf
cwtl
pop
cs
fistps
stos
push
and
fwait
out
cmp
jno
mov
push
mov
or
sbb
lds
lcall
hlt
mov
push
sbb
insb
sbb
mov
push
mov
cmp
push
hlt
std
push
hlt
xchg
lock
add
jnp
jecxz
sub
add
insb
divb
je
insl
lahf
mov
fwait
push
push
fnstcw
mov
dec
faddp
idivl
loopne
add
mov
push
inc
sub
sub
pop
jg
leave
xor
xchg
fisttpl
ret
aaa
pushf
sub
push
push
lds
arpl
pop
xchg
daa
xor
cmp
ret
mov
ficomps
cmpsl
mov
jns
push
imul
lret
xor
cmpsl
inc
or
dec
mov
sub
jbe
jb
lock
in
lds
mov
xchg
xor
push
movsb
fildll
scas
aam
sub
mov
mov
popa
popf
js
sbb
loop
les
out
popl
xchg
faddl
jecxz
xchg
xchg
sahf
mov
cmp
test
enter
jbe
insb
push
scas
mov
xlat
cmpb
lcall
mov
push
push
roll
imul
sbb
adc
leave
popl
insl
out
pop
mov
mov
mov
inc
shll
mov
xor
jge
cmp
sub
inc
aam
push
test
push
loop
fwait
and
jmp
adc
stc
lods
dec
cmp
inc
xor
or
ret
pop
sub
inc
outsb
pop
mov
push
lret
movsl
daa
xor
xor
xchg
sub
jb
cmp
push
sbb
das
cmp
rcr
jge
push
push
sbb
fisubl
bnd
pop
mov
sbb
lret
mov
xchg
cld
adcb
enter
or
addr16
insb
push
xlat
mov
push
sbb
enter
cmp
add
mov
pushf
pop
cwtl
mov
mov
xchg
cmp
in
and
push
aas
xor
xchg
lret
pusha
andb
loop
lret
lods
xorl
mov
cmc
xchg
arpl
insl
rcll
lahf
out
loop
fwait
sbb
idivl
test
lcall
pop
mov
adc
xchg
xchg
fdivrs
jno
dec
xor
cwtl
std
ret
sarb
xchg
lea
sbb
ficompl
loop
jo
aam
xchg
data16
inc
xchg
mov
andb
jecxz
das
push
jns
into
lret
inc
ficomps
cmp
inc
jo
push
inc
xchg
and
cwtl
test
jno
hlt
pop
nop
adc
pop
repz
mov
js
mov
aas
xchg
loop
testl
dec
in
mov
or
rcll
push
dec
jl
inc
jae
imul
mov
imul
push
dec
test
das
mov
sub
imul
push
rclb
mov
mov
ficoms
cmpsb
mov
mov
jbe
sub
fidivrs
or
pop
sub
mov
out
xchg
fmull
push
imul
sub
mov
xchg
xorb
cmpsl
into
cli
shrl
cltd
mov
loopne
ficompl
arpl
xchg
sahf
or
xchg
cwtl
mov
pop
subb
int
les
pushf
jnp
outsb
mull
fnstsw
jp
cld
mov
sbb
out
ss
pop
sbb
sbb
ret
leave
int3
jb
ret
pop
pop
xor
xchg
call
pop
mov
push
fsub
jb
in
sub
andl
adc
scas
int
aaa
mov
shlb
or
lds
bnd
arpl
rep
mov
rcrb
imul
sahf
jg
aaa
dec
lea
add
jnp
mov
cmpsl
stc
sub
jb
cmp
dec
out
lods
call
and
push
push
sub
aaa
sahf
inc
dec
add
popf
add
aas
into
cmp
push
inc
dec
dec
iret
mov
xchg
lret
mov
and
jns
data16
shrb
in
cmpsb
adc
loope
clc
push
xchg
fwait
mov
jmp
daa
shlb
jbe
xlat
test
mov
xchg
jge
add
bound
sub
outsl
sbb
aam
pop
sbb
mov
loopne
sarl
in
aad
mov
dec
hlt
sbb
xor
mov
ror
xchg
mov
rcrl
mov
pop
sub
insb
push
movsl
mov
cmpsl
xor
ds
cmp
push
or
mov
mov
enter
pushf
fld
movsl
xor
push
popa
mov
add
xchg
data16
adc
sbb
ret
es
adc
daa
movsb
sbb
push
push
rcll
inc
xor
cltd
mov
push
or
js
fnstenv
loop
add
adc
shlb
incb
adc
aam
loope
add
push
jg
outsl
mov
lds
shlb
or
fldl
xchg
rolb
sub
cltd
mov
fcmovbe
inc
jnp
add
xchg
mov
scas
cmp
cli
and
jae
cltd
mov
popl
es
add
mov
jb
push
jp
shr
lahf
dec
cltd
divl
mov
inc
xor
std
jae,pn
jecxz
scas
and
sub
push
cmp
int3
iret
stos
inc
inc
shll
stos
mov
inc
inc
inc
push
pop
dec
mov
mov
sbb
xchg
sub
push
cltd
lock
rorb
push
enter
and
jbe
mov
test
push
jbe
jns
popa
cmp
stos
mov
sub
add
mov
ja
fs
test
int3
and
pop
and
rolb
xchg
sbb
dec
arpl
in
ss
testb
or
jg
cmp
pop
and
sti
cmp
mov
outsb
sub
and
insb
push
subb
scas
int
mov
cmpsb
or
lret
clc
ss
cmp
mov
adcb
loope
loopew
stc
mov
js
es
dec
inc
xlat
inc
cmp
insb
adc
or
dec
lods
adc
xor
pop
faddl
mov
loop
mov
xlat
xchg
mov
and
pop
jge
wbinvd
pop
jmp
icebp
lret
push
pop
stos
in
or
insl
out
dec
xor
pop
inc
movsb
mov
arpl
ret
jmp
icebp
mov
add
jl
adc
lods
dec
xchg
inc
rcrb
lods
xchg
jns
jl
sbb
push
bnd
mov
mov
pop
das
cli
movsl
pop
rorl
xchg
test
sbb
mov
push
push
or
int3
cmp
xor
pusha
repnz
jg
cld
inc
mov
adc
stc
push
loopne
push
add
rep
imul
cmpl
mov
xor
dec
add
hlt
loope
movsl
add
fdivl
loopne
xchg
repnz
dec
mov
pop
adc
jo
xchg
dec
das
icebp
sub
xor
es
aam
fwait
clc
xor
into
icebp
pop
lcall
cmp
ror
fdivrs
sub
push
leave
adc
push
mov
adc
adc
mov
adc
cs
mov
mov
xchg
xor
imul
jnp
pop
mov
dec
xchg
test
cmp
pop
scas
cmp
sub
jo
mov
push
out
pop
cmp
jno
data16
hlt
dec
push
in
movsl
in
cli
cmp
cmp
bound
mov
test
mov
in
mov
adc
outsl
mov
cld
out
and
fidivl
sbb
dec
inc
jae
add
stc
repnz
into
push
cmp
rorl
lahf
mov
test
and
dec
inc
loop
push
sbb
xchg
and
xchg
call
sbb
fcoms
fldenv
add
cwtl
addl
mov
hlt
pop
mov
cwtl
xchg
jb
lret
movsl
mov
xchg
xor
loopne
xchg
mov
out
or
mov
sbb
push
adc
shll
add
sub
lahf
or
ret
ljmp
xchg
push
inc
pop
inc
and
shlb
xchg
mov
mov
lods
xchg
movsl
jne
sbb
faddl
nop
imul
scas
test
mov
decl
pop
xchg
sbb
xchg
xor
cltd
push
aaa
lods
lock
mov
sbb
daa
xchg
mov
pop
repnz
dec
mov
pushf
pop
cmp
aas
push
jmp
lahf
call
lods
adc
mov
mov
pop
pushf
cmp
mov
subb
lcall
cmp
and
into
out
push
mov
xchg
xor
loop
jae
dec
scas
adc
add
cmp
scas
mov
aad
sbb
mov
imul
push
mov
orl
les
lcall
adc
test
lret
push
adc
mov
inc
jb
xlat
push
jge
mov
sarb
or
push
ret
data16
int3
jno
pop
lea
aaa
loopne
mov
mov
hlt
mov
dec
add
cmp
cmp
inc
fsubrp
hlt
scas
xor
pop
cmp
sub
or
cltd
ljmp
fisttpll
loope
dec
int3
mov
and
es
sub
mov
out
xchg
or
shll
leave
loopne
lret
les
loopne
add
sub
dec
jb
fmul
or
ret
mov
pop
dec
add
xlat
insl
mov
bound
adc
pop
sub
mov
cmp
call
jg
sub
inc
sbb
int
add
fiadds
xchg
lods
loope
call
imul
insl
repz
sub
jp
jno
subb
rcrb
fnstenv
adc
out
sahf
neg
xchg
mov
mov
popa
cmp
add
sbb
dec
mov
xchg
loop
sbb
dec
and
stc
out
pop
sti
cmpsb
or
add
in
in
and
mov
xchg
xor
mov
cmpsb
icebp
pop
jnp
xchg
and
cmp
std
ret
cld
shl
jns
mov
mov
inc
adc
xor
cmp
pop
jmp
scas
gs
cltd
mov
mov
cltd
add
pcmpgtd
cltd
stc
xlat
sbb
idivb
dec
cmp
inc
test
aam
push
xchg
add
add
pop
ret
pop
inc
mov
mov
int3
mov
movl
cmpsb
shrb
loope
and
mov
loop
fnstsw
ja
aas
push
stos
imul
stos
enter
inc
sti
data16
mov
bound
adc
adc
xchg
pop
sbb
andl
arpl
cli
iret
sbb
inc
imul
inc
adc
cmp
dec
inc
int3
mov
std
dec
test
lods
call
ret
and
sti
sbb
movsb
jno
mov
nop
loope
imul
sub
test
in
mov
mov
out
int
arpl
cmp
or
xor
jb
mov
adc
cltd
cmp
add
jg
jle
pop
or
fldl
outsb
pop
pop
pop
add
pop
fisubrs
rorl
xlat
adc
cmpl
lcall
jle
jo
dec
cmp
addl
xor
jbe
push
sub
nop
je
xchg
imul
lret
push
mov
sti
and
cwtl
push
hlt
rolb
and
mov
add
sti
mov
cltd
add
bnd
inc
mov
mov
out
cmp
dec
outsl
pop
fdivrl
xor
test
or
gs
mov
fadd
lahf
push
fldcw
xchg
xor
std
test
add
adc
jno
mov
dec
clc
arpl
nop
xchg
fldl
fbstp
movsb
and
icebp
ret
sahf
loop
es
push
insb
std
pop
mov
push
sub
or
xchg
pop
scas
mov
sbb
ja
mov
or
mov
mov
es
jge
and
mov
loope
out
stos
cmpsb
push
mov
fisubrl
or
gs
pop
adc
mov
xchg
cmp
or
mov
rcl
int3
loope
popa
imul
mov
loopne
jp
out
xor
in
icebp
push
je
lcall
jle
add
xorl
repnz
dec
lret
xor
loopne
aas
pavgb
lret
in
xchg
scas
mov
pusha
pop
push
out
shrl
fsubrp
xlat
sbb
cli
mov
insb
pop
aad
xchg
cwtl
pop
push
call
sbb
mov
sbb
mov
dec
movsl
mov
xchg
js
bnd
lcall
adc
adc
and
add
dec
push
rcrb
gs
adc
sub
loop
into
fs
rclb
mov
lods
or
sbb
mov
lock
testb
push
cmp
inc
cmp
xchg
mov
cmp
push
gs
sbb
out
sarl
jl
pop
lea
mov
clc
sbb
push
cmpl
mov
in
dec
adc
orl
push
test
in
mov
bound
jecxz
jne
push
inc
out
testb
jmp
sub
adc
dec
in
lock
je
or
pop
push
cmpl
adc
push
popa
jle
add
test
adc
xor
repnz
xor
jnp
mov
ja
cmp
pop
mov
add
aad
mov
push
push
test
mov
dec
and
sbb
pop
push
int3
dec
jp
xchg
jge
fldz
and
clc
cmpb
mov
xchg
push
ficomps
adc
and
adc
inc
into
popf
xor
push
xlat
jmp
movsb
mov
mov
adc
es
fidivl
or
jnp
lcall
xchg
xchg
sti
jbe,pn
clc
std
adc
xchg
sbb
std
mov
mov
mov
mov
xor
mov
mov
sar
cli
cwtl
dec
jo
dec
adc
lods
mov
lods
push
jle
cmpsb
cmp
repz
mov
sub
fldln2
data16
outsl
dec
loope
leave
sub
fsubs
add
jo
fiadds
movsb
insb
daa
sbb
cmp
dec
das
mov
mov
cli
sti
adc
cmp
add
mov
or
arpl
push
inc
cmp
xchg
mov
or
cmp
jl
or
jnp
rcll
xor
subb
mov
mov
sbbl
push
xchg
cltd
add
ds
cmp
mov
push
int
jno
pop
sub
arpl
mov
shrl
scas
aas
sub
add
sub
cmp
and
mov
out
sub
or
xchg
test
addr16
ljmp
mov
lret
sbb
xlat
mov
hlt
imul
in
adc
jmp
or
push
sbb
mov
or
or
mov
add
in
cmp
or
rcrl
xchg
test
aas
add
jmp
cmp
bound
in
mov
mov
lea
lds
rep
cs
sbb
mov
insl
or
in
mov
adc
mov
rclb
cld
scas
fs
pop
sbbl
sbb
aaa
pop
test
ljmp
lods
std
add
out
pop
mov
jnp
mov
mov
clc
dec
cmpsl
add
popf
add
and
cmpsb
cmc
nop
mov
out
dec
sti
ret
push
and
cmpsl
outsl
cmpl
dec
rcr
and
jbe
adc
sub
sub
xchg
into
lret
sub
outsl
pop
je
leave
loope
test
add
pop
loop
xchg
lds
loopne
gs
push
js
ret
sbb
rorb
xor
pminub
mov
outsb
lret
fidivs
aas
adc
cmp
jl
mov
push
pop
jge
sbb
push
lcall
dec
pop
add
outsb
adc
xchg
jo
pop
shrl
mov
and
and
cmp
enter
mov
hlt
mov
cmpsb
pushf
cmpsl
sbb
mov
and
jg
and
fdivl
xor
lock
pop
rorb
jle
mov
mov
outsb
mov
xor
sub
icebp
mov
es
jmp
rol
pop
mov
xlat
scas
inc
dec
sbb
cmc
pop
lds
leave
out
inc
sbb
leave
inc
jp
dec
ss
bound
or
cld
repnz
sbb
pusha
jo
test
mov
jle
out
les
stos
fisttpl
mov
stc
cwtl
jl
add
loope
and
test
imul
or
rcrl
daa
add
xchg
arpl
sub
push
mov
fs
lock
mov
les
movsl
idivl
pop
inc
jne
fldcw
jb
ret
inc
outsb
mov
loop
lret
push
xor
sbbl
aas
sbb
pop
and
out
inc
stos
xchg
dec
shr
jmp
mov
mov
jge
and
sbb
jecxz
test
stc
pop
cmc
fnop
imul
or
pop
lds
loop
imul
xor
outsb
xor
inc
mov
stos
pop
sub
arpl
mov
aad
lods
addb
addl
fcmovne
pop
pop
push
sub
mov
popf
fidivrs
fcmovu
jae
inc
fcmovb
pop
out
mov
jg
das
jecxz
adc
push
adc
xchg
fidivl
xchg
xchg
mov
addl
sbb
in
lret
pop
inc
sbb
dec
add
and
xlat
jae
cltd
lods
pop
addr16
outsb
xor
fwait
pop
xor
pcmpeqb
mov
adc
xchg
fucomip
sub
mov
lods
filds
lret
int
mov
icebp
sub
adc
cld
mov
sbb
pop
outsb
push
stos
inc
push
ss
pop
adc
sarb
dec
mov
das
icebp
stos
push
sbb
popa
callw
rol
xor
cmc
addb
popa
iret
dec
jmp
bswap
xchg
or
xor
mov
xor
sub
bound
mov
pop
mov
mov
or
fldl
fucom
insl
gs
lock
xor
mov
lahf
cmp
xor
lret
xor
or
xlat
mov
aam
and
cli
int3
or
aas
scas
cmpl
cmp
pop
insl
xchg
mov
dec
and
and
imul
inc
pop
mov
fwait
xchg
sbb
lahf
xor
push
stc
mov
arpl
cltd
pop
push
out
pushl
cltd
in
xor
xor
fisubrl
inc
or
hlt
push
enter
fs
in
mov
add
arpl
push
add
jo
sbbl
jp
loope
jecxz
add
mov
push
ja
dec
mov
sub
xchg
push
iret
pop
je
jg
fs
shrl
add
and
out
sbb
mov
outsb
add
jo
xorl
jp
adc
mov
dec
cmp
es
js
pop
cmp
or
sub
xchg
jns
notb
addr16
imul
iret
cmc
int
sub
fisubs
lea
dec
adc
mov
pop
hlt
sub
loope
add
pop
fsubs
xchg
jp
mov
popf
jnp
cmc
dec
adc
push
inc
mov
loopne
sub
push
dec
push
cmp
pusha
mov
xchg
and
pop
stos
pop
lea
notb
stos
ret
insl
ss
fs
shll
jge
insb
and
jmp
inc
sub
test
stos
fmul
dec
mov
lret
roll
mov
mov
dec
popa
test
jge
out
faddl
xor
in
test
addr16
jns
or
mull
mov
scas
loop
cmp
das
or
xchg
ret
ficomps
dec
in
and
lods
inc
sahf
imul
jle
push
repz
leave
in
sahf
cwtl
lret
decb
mov
ja
pop
subb
and
or
out
fwait
out
jno
sbb
sub
repnz
jns
pop
aaa
fwait
jb
cltd
js
ss
pop
cmp
cmp
fidivrl
mov
aaa
xchg
add
outsl
xor
sub
sub
cltd
pop
pop
dec
dec
insl
lcall
imul
int
movsl
les
outsb
stos
movsb
rcrl
pop
roll
and
stos
xchg
mov
les
cmc
xor
mov
hlt
in
or
negb
and
push
gs
inc
lret
pusha
push
pop
cmc
dec
imul
loope
inc
mov
imul
cltd
insl
rol
ljmp
enter
out
sbb
dec
xchg
icebp
mov
sbb
mov
cmp
in
lods
xchg
jno
sbb
les
shl
mov
or
in
rolb
or
mov
jg
jge,pt
lock
fsubl
jnp
rclb
or
xor
aad
jbe
mov
inc
jne
mov
jl
cmp
or
adc
out
add
jmp
aam
dec
xlat
addr16
dec
add
scas
xchg
shl
add
pop
sbb
or
int
inc
inc
leave
bswap
mov
mov
das
mov
mov
cmp
ret
mov
in
pop
or
mov
data16
aaa
jbe
inc
jo
dec
jnp
shll
fimull
jmp
dec
fs
and
adc
pop
or
xor
fildl
xor
call
fsubrl
sbb
add
mov
mov
sub
das
push
iret
xor
frstor
nop
add
mov
aam
popa
push
ja
fistps
loopne
cmp
aaa
jne
xlat
and
cmc
and
les
xor
pusha
out
xor
inc
testl
shr
inc
in
lcall
popa
movsl
dec
sub
xchg
cwtl
cmp
xchg
pop
scas
lea
xor
push
js
cs
jle
in
clc
mov
or
in
sub
gs
in
rolb
cwtl
faddl
pop
dec
hlt
sbb
push
jp
push
sbb
inc
insl
ljmp
push
mov
push
pusha
enter
test
in
lret
lock
xor
jmp
lahf
mov
nop
push
sub
scas
dec
ficompl
test
adc
jp
pop
jae
popf
fsubp
xor
sub
mov
fisubs
ljmp
jle
repz
sbb
es
mov
sarb
xchg
ret
pushf
cmp
add
cmpsb
rolb
pop
jae
inc
fidivrs
dec
rclb
leave
add
cmp
pop
push
add
mov
inc
ss
inc
neg
ds
fildl
fimull
inc
xchg
push
jnp
sub
test
shlb
or
cmp
or
sti
sub
cs
sbb
out
adc
jae
xchg
iret
sbb
jbe
nop
add
sti
xchg
lret
add
or
lea
mov
push
addr16
test
push
mov
into
imul
dec
ds
enter
sub
icebp
aad
jo
jbe
repnz
cmp
and
xor
jge
dec
and
push
gs
xor
push
fisubl
lahf
or
and
mov
mov
pop
dec
inc
or
repz
idiv
sub
cmp
ljmp
mov
inc
test
jecxz
sub
daa
xor
sub
test
loop
mov
xlat
jae
fs
jno
mov
aad
or
inc
bound
mov
out
xor
fcoml
leave
mov
sub
push
pop
dec
or
mov
imul
mov
popf
jl
or
pop
xchg
adc
mov
sahf
lret
dec
push
ret
xchg
push
out
mov
insb
cmpsb
mov
inc
inc
jne
xchg
jnp
mov
in
jnp
pop
dec
pushf
enter
mov
mov
lret
idivl
clc
pop
pop
dec
sbb
or
sub
test
push
or
cltd
push
enter
adc
in
daa
pop
outsl
cltd
add
push
into
jb
out
les
jae
fadd
xchg
nop
fisubrl
pusha
cmp
jmp
adc
inc
add
mov
out
push
enter
clc
mov
mov
mov
pop
dec
bound
icebp
sub
mov
jns
dec
nop
or
stos
adc
adc
xchg
pop
push
lods
mov
repnz
add
push
stc
insl
mov
pop
std
adc
inc
sbb
out
sub
cmpsl
pop
xchg
cmpsl
or
push
sbb
pop
xor
xor
cli
xchg
xlat
mov
pushf
int
sbb
stos
inc
jle
in
popf
test
mov
dec
fiaddl
mov
lret
mov
dec
repnz
dec
fnsave
repz
pop
jmp
pusha
int
mov
in
daa
es
dec
cs
stos
xchg
push
out
popa
dec
inc
lds
cwtl
mov
dec
dec
xchg
or
sbb
mov
mov
shr
lock
cs
loop
imull
icebp
xchg
and
dec
sbb
mov
xchg
aaa
inc
icebp
xor
ljmp
xchg
sub
je
lods
cmc
aam
mov
test
and
mov
sbb
dec
pop
cmpl
and
mov
lds
test
mov
repnz
cmpsb
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
out
dec
mov
jne
jae
or
cltd
jns
push
pop
jp
xchg
nop
fldl
dec
mov
imul
std
aas
lock
sub
dec
lahf
ret
cld
xor
ss
mov
xchg
cmp
test
das
lret
leave
aaa
mov
sti
pop
mov
addr16
iret
jle
cmp
sub
ljmp
add
mov
jge
iret
into
imull
jg
and
insb
xor
and
into
jecxz
jg
xlat
int
scas
or
shr
fsubp
xlat
pop
xchg
sub
jo
rorl
sbb
jp
clc
into
cmp
cmpsb
mov
aad
xor
mov
fdivs
fisubl
push
stc
clc
arpl
mov
pushf
sbb
std
stc
hlt
jae
xchg
test
inc
arpl
je
lcall
dec
in
push
mov
adc
sub
push
xor
dec
xor
sub
mov
cmc
pop
mov
test
mov
add
push
and
jp
jo
aas
hlt
test
loope
lahf
jl
adc
push
inc
ret
les
xor
sbb
xchg
xchg
fstl
sbb
mov
push
repz
sbb
mov
insl
test
in
lock
pushf
test
loope
pusha
mov
pop
ret
addb
lds
jle
fwait
and
ja
loope
dec
jo
es
add
test
sbb
xchg
mov
xchg
jge
test
pop
in
jge
div
xor
fists
int
mov
jecxz
rol
fcmovnbe
adc
jno
xchg
notb
adc
push
pop
shlb
push
mov
insb
negb
imul
dec
es
inc
sbb
push
in
les
fwait
add
imul
insl
push
pop
fistpll
out
jb
mov
adc
popa
call
cltd
std
daa
in
push
jo
test
fldenv
mov
mov
jmp
jl
add
lcall
mov
cmp
nop
shr
sbb
adc
cmpsl
or
push
and
sbb
icebp
or
fisttpll
pop
ss
sbb
mov
cmpsb
xor
outsb
jl
int
mov
sbb
cld
push
stos
push
adc
inc
mov
jno
dec
js
sbb
mov
add
insl
mov
xchg
lods
icebp
int3
or
push
add
xchg
push
aam
pusha
sbb
stos
mov
aad
je
xor
fmull
in
ds
cmp
in
aas
hlt
stc
inc
stos
pusha
mov
movsb
dec
dec
mov
add
nop
mov
data16
es
sub
pop
and
daa
fcomps
jmp
xchg
pop
xor
mov
lds
xchg
mov
push
imul
punpcklbw
mov
test
mov
es
sti
dec
ficoms
jb
sbb
lods
xor
or
mov
aam
cmp
jmp
lcall
and
xor
jnp
dec
je
out
das
push
lahf
icebp
int
into
nop
push
aam
data16
out
mov
arpl
arpl
fistpll
test
and
aaa
jg
push
jp
mulb
imul
fwait
ljmp
sbb
ss
dec
insb
imulb
movsl
mov
and
lret
ljmp
add
mov
mov
lock
mov
cmpsb
fsub
mov
push
cmp
fidivrs
out
and
aam
lds
into
jmp
call
mov
jl
or
test
imul
jp
push
jno
out
mov
pop
mov
arpl
fisttpl
mov
lcall
scas
push
sub
out
sbb
std
mov
cmp
inc
int3
ljmp
mov
pop
sbb
popf
incb
aam
push
repz
clc
cmp
imul
in
add
mov
pusha
adc
pop
adc
xchg
jae
inc
in
adc
jp
xor
inc
call
cmpsl
and
test
cmp
sub
xchg
jae
out
lock
and
push
rep
mov
mov
icebp
mov
inc
test
mov
pop
jl
lcall
mov
pushw
pop
stc
jecxz
rcll
mov
inc
adc
mov
dec
jnp
out
sub
stc
sahf
push
out
xor
xchg
ret
fmull
or
sub
loopne
mov
insb
push
push
scas
sub
int
int
jno
mov
idivb
sbb
xor
sbb
test
push
push
adc
mov
outsb
xchg
sbb
repnz
outsb
and
push
sub
mov
nop
pop
adc
mov
jle
adc
into
adc
and
outsl
mov
in
pop
xor
mov
cmp
out
mov
outsb
stos
testl
xor
iret
data16
outsl
push
in
and
sbb
aad
cmc
lahf
pusha
loope
outsl
fcomip
call
mov
dec
push
insb
push
pop
aam
mov
arpl
adc
sbbl
lock
xlat
cmpb
xchg
mov
lods
and
lret
clc
mov
sub
cmc
pop
je
clc
add
shr
out
sbb
popa
stos
inc
mov
mov
fistpl
sahf
mov
aam
push
xor
mov
add
sub
sub
inc
addl
xorb
shll
dec
ds
les
cs
loopne
sbb
sbb
fists
sub
fstpl
push
fwait
bound
sar
dec
aam
and
filds
push
xor
or
ficoms
mov
mov
fsubl
push
mov
cmp
imul
cmp
and
pop
jle
mov
sub
pop
int3
adc
mov
leave
js
ds
inc
imulb
xlat
mov
cld
adc
jbe
gs
push
add
movsl
loopne
or
and
aam
inc
mov
es
stos
flds
gs
xor
scas
movb
sbb
imul
mov
nop
inc
ret
popf
inc
mov
dec
rcr
inc
cs
jnp
arpl
dec
jbe
sbb
and
fisttps
clc
ljmp
testl
fs
dec
cmp
push
push
cs
push
adc
xlat
ljmp
repnz
cmp
fwait
stc
popf
in
mov
mov
add
mov
pushf
stc
inc
sarb
xchg
out
dec
aad
xchg
inc
test
pop
jp
lcall
pop
mov
mov
rcll
push
adc
sti
and
xlat
loope
and
dec
sub
out
add
adc
mov
faddp
jmp
push
jne
push
mov
in
out
jge
push
enter
xor
or
inc
inc
inc
dec
adc
xor
fwait
cli
xchg
outsl
mov
jns
ds
bound
das
jnp
cmp
aas
and
jle
cmp
push
push
push
fistl
lret
dec
ljmp
flds
es
fwait
outsb
js
jo
mov
scas
sub
push
fisubl
repnz
inc
aas
jne
lods
dec
add
andl
and
lret
daa
dec
or
or
mov
and
out
mov
ss
test
bound
add
cmpsl
movsb
push
std
fildll
ss
rclb
adc
out
xchg
jecxz
jo
push
mov
xor
adc
adc
dec
jb
testb
jl
sub
in
mov
inc
fnsave
mov
push
fcmovbe
mov
pop
xor
enter
and
lret
leave
movsb
mov
jp
sbb
lahf
lcall
popa
or
jno
cmp
outsb
and
xor
fucomip
push
pop
jmp
mov
fisubl
dec
mov
cmp
mov
stos
sets
dec
je
or
nop
mov
stos
lods
pop
lds
or
jecxz
cmp
test
dec
mov
or
shll
adc
insl
add
or
push
sbb
loopne
push
cmp
xchg
stos
stos
pop
js
sbb
stos
cmc
push
insb
shr
pop
xchg
mov
pop
roll
fimull
pop
in
mov
mov
cmpsb
popf
sahf
mov
xor
dec
sub
xor
je
insl
pop
inc
scas
aas
add
xchg
scas
outsb
and
ficomps
jno
bound
je
lock
lahf
fs
mov
js
adc
jne
jne
cmp
push
pop
add
insl
add
addr16
std
pushf
add
mov
ds
lahf
sbb
sbb
mov
jg
lret
sub
sbb
sub
xchg
cld
mov
fwait
xor
cmp
mov
js
imul
dec
fsubrl
xchg
sub
imul
push
js
int3
push
daa
jg
jmp
sbb
xchg
sub
cmp
mov
mov
jns
dec
mov
xor
jnp
imul
mov
jno
cmpsl
jne
pop
push
leave
outsl
repz
outsl
out
push
inc
add
aam
add
hlt
push
adc
push
cmpsb
push
add
jb
dec
enter
dec
pop
and
fwait
or
int3
pop
jbe
ret
sub
xor
pop
cmp
mov
iret
cmp
mov
clc
stc
frstor
jecxz
mov
mov
movsl
lds
dec
pop
jne
movsb
and
repz
push
push
stc
aas
add
outsb
inc
dec
leave
jae
in
adc
lea
sub
fiaddl
lret
adc
lret
dec
push
mov
and
and
sub
aam
mov
inc
push
flds
lds
adc
lock
and
leave
mov
pop
loopne
aas
jecxz
jbe
push
mov
sub
mulb
les
hlt
pop
cld
in
lea
subl
insb
movsl
mov
mov
das
sub
pop
les
scas
movsl
lods
and
mov
cmp
stos
lret
js
arpl
cmp
movsb
aad
mov
add
xchg
mov
mov
inc
aas
pop
sub
dec
fsub
jb
sahf
bnd
imul
rcrl
decb
in
xor
xchg
pop
mov
pop
dec
dec
ljmp
xchg
pop
sahf
in
repz
stos
add
fstpt
jmp
cmp
add
push
repnz
and
iret
iret
outsl
push
shrb
adc
cmpsl
cwtl
adc
stc
add
lds
jle
int
iret
mov
pop
and
or
loopne
lcall
sti
dec
test
cwtl
jle
dec
sbb
fwait
out
push
aas
das
jo
inc
xchg
cltd
je
ficomps
loop
jl
cmp
jns
add
mov
ljmp
add
or
mov
out
mov
xchg
cmp
popf
dec
addb
mov
enter
pop
test
cmp
repnz
xor
les
inc
enter
scas
jle
fmull
inc
mov
movsl
push
stc
stos
xor
mov
jmp
pushf
fs
sub
cmp
lea
cli
sub
aad
mov
xor
xor
int3
jno
into
dec
fcoms
jmp
sbb
dec
and
xlat
cmp
and
scas
add
aam
mov
push
bound
std
inc
fistpl
push
push
sbb
pushf
dec
mov
mov
xlat
pop
dec
popf
sti
sub
idivl
sub
or
dec
jae
inc
mov
fdivs
or
push
sbb
jne
jecxz
mov
xor
mov
inc
and
out
adc
decb
add
rclb
fcomps
leave
mov
ljmp
sbb
movsl
xor
mov
mov
inc
mov
js
pop
in
fwait
dec
in
stos
push
inc
push
xchg
push
popw
pop
fcmovne
movsl
rclb
add
aas
push
jecxz
int
jge
inc
loopne
mov
xor
mov
jo
test
adc
les
sub
iret
pop
fisubrs
xor
adc
jnp
sbb
js
std
jno
mov
push
xor
pop
and
push
sar
in
clc
pusha
fsubrs
sub
dec
out
cmp
cmp
cld
push
jne
push
inc
push
es
add
iret
addl
ret
xor
outsl
mov
pop
mov
cmp
in
xor
mov
or
das
jno
cmp
inc
mov
pushf
popa
sbb
sub
cmp
mov
inc
int3
xor
sub
stos
sub
mulb
mov
pop
hlt
push
or
cmpsl
jnp
inc
push
pop
cltd
mov
mov
fistpll
adc
test
out
dec
lcall
cmp
jecxz
cs
scas
lret
shl
pop
mov
hlt
sar
scas
int
adc
movsl
lds
and
jmp
sbb
out
pop
insb
push
fs
cmp
xorb
xchg
or
cmc
xchg
and
mov
xor
or
int
jle
test
aaa
imul
pop
adc
mov
cmc
jle
pop
adc
fucomip
cmp
mov
push
pop
fimull
lea
xorl
or
packuswb
cmpsl
jmp
add
into
xchg
mov
int3
das
xchg
mov
int3
cltd
mov
mov
and
mov
xor
out
ret
jns
jbe
jl
mov
fdiv
sahf
testl
ret
jne
cmp
stc
pushf
sbb
add
mov
fs
out
stos
in
hlt
ja
jo
jl
loopne
xchg
sahf
imul
lds
negl
rcrb
xor
sub
pop
pop
cmp
mov
and
loopne
aam
ds
mov
mov
loop
cld
or
stc
xlat
lret
push
and
jnp
aad
pop
sbb
jle
mov
mov
ret
jo
shlb
push
movsb
addr16
jge
push
mov
cli
lcall
orb
inc
scas
sub
cwtl
push
lea
pop
sub
shrb
add
jne
arpl
or
lods
movsb
jae
adc
and
enter
jp
pop
mov
adc
lret
inc
movsb
and
sarl
cmp
sti
cmp
jnp
sbb
lahf
sbb
test
push
or
ror
jbe
push
jne
adc
pop
dec
in
sbb
ficomps
push
pop
or
out
add
ret
popf
idivl
in
sahf
das
stc
mov
sbb
inc
xchg
int
adc
movsb
pop
and
mov
lds
fsubrs
out
cmp
pop
dec
cmp
mov
insb
lret
cmp
and
jp
dec
loopne
loop
or
das
mov
push
int
outsb
sub
inc
dec
and
insl
and
adc
gs
and
ds
lock
imul
push
pop
mov
or
jecxz
inc
sub
int3
inc
xor
rclb
dec
pop
mov
in
mov
cmp
sub
push
movsl
jg
lods
out
imul
mov
mov
cmpsl
xadd
mov
icebp
cwtl
sub
inc
and
adc
into
test
mov
incl
xor
pop
mov
add
and
pop
sub
and
in
fisttpl
sub
into
icebp
sub
ficoms
pop
jb
movsl
jmp
shr
jmp
aas
inc
jne
push
mov
out
mov
mov
aad
cmp
jecxz
test
movsb
out
pop
int3
cmp
jg
pop
fildl
mov
mov
add
cmc
xchg
add
push
inc
jecxz
add
out
push
push
ret
jl
lock
stos
aaa
sub
pushf
adc
fisttps
and
cltd
mov
les
xor
pop
cmp
cmp
jb
mov
inc
test
movsl
nop
dec
and
insl
inc
inc
xchg
xor
adc
xorl
mov
cmc
pop
icebp
ljmp
leave
ret
push
adc
movsb
xchg
pop
out
lea
mov
jl
ret
fabs
lds
adc
jle
jae
xor
notl
inc
push
ds
dec
dec
sub
fbstp
or
pop
mov
fimull
adc
mov
add
imul
mov
xlat
and
int
sarl
add
xorl
add
mov
adcb
jo
xchg
mov
cmp
test
cmpsb
mov
inc
push
lea
fcmovnbe
ret
xchg
mov
int3
mov
mov
lcall
leave
push
mov
mov
and
jp
cli
cmp
add
stos
cmp
divb
int3
xchg
dec
loope
and
xchg
shlb
fbstp
mov
inc
cmc
aam
cmpsl
call
jge
pop
sub
jne
iret
push
sbbl
aaa
adc
outsb
xchg
jns
mov
ret
adc
mov
lods
jnp
je
les
xlat
in
repz
rcrb
cmp
or
aad
adc
scas
repz
adc
push
mov
negl
stc
bound
cwtl
sub
cmpsl
sbb
xchg
in
sti
aam
je
xor
ss
xchg
mov
js
and
add
ja
jl
pop
insb
jg
lret
cmp
add
push
bound
roll
sbb
lods
jnp
call
repnz
inc
or
push
fwait
cwtl
push
lgs
jnp
pop
je
popa
adc
jnp
ds
es
enter
cltd
andps
and
xchg
add
cli
je
dec
sub
xor
sahf
push
dec
jmp
mov
or
adc
add
enter
jecxz
jl
fs
push
cs
aad
roll
jge
out
push
sahf
pusha
or
sub
adc
fldt
sub
repz
pop
push
sub
sub
lahf
push
mov
stos
dec
dec
hlt
jge
fimuls
test
cli
fs
loope
mov
jo
fmuls
les
and
imul
inc
js
call
push
cmc
mov
nop
repnz
lcall
push
cli
movsl
adc
jae
adc
cmp
insl
ds
and
push
addr16
dec
out
pop
addr16
cmpsb
xchg
gs
lret
icebp
cmp
xchg
imul
rcrb
nop
ds
inc
loop
lret
xor
mov
scas
ljmp
sub
adc
mov
mov
shlb
addr16
pusha
stc
jge
add
sub
or
mov
push
mov
cwtl
imul
add
push
dec
popa
adc
mov
nop
ja
pop
aam
push
imul
clc
dec
xor
inc
iret
xor
imul
stc
adc
push
add
xchg
lret
mov
inc
xchg
dec
ret
mov
or
push
sti
push
popa
pop
movsl
popf
xchg
mov
and
sub
adc
add
popf
lcall
fldenv
xor
fistpl
pop
mov
loop
sub
dec
into
push
jle
sub
pop
jnp
ret
rorb
mov
cwtl
out
loopne
sub
mov
adc
in
hlt
shrl
imul
dec
test
sbbl
sbb
sub
inc
sbb
cli
cmp
sub
in
inc
cmp
jno
repz
or
jp
movsl
cmp
add
fdivl
fmulp
xor
imul
mov
sbb
incl
jl,pt
mov
pop
adc
mov
sti
xor
pop
and
mov
sbb
lock
outsb
out
push
adc
mov
fstps
shll
xchg
andb
cltd
cmp
adc
sbb
xchg
push
sub
inc
adc
mov
mov
cmp
cwtl
and
aad
movsl
add
cmp
jmp
test
adc
xchg
andl
andb
aad
jmp
sbb
push
imul
pop
into
and
and
in
jnp
pop
and
popa
sub
inc
fmull
fcoml
out
outsb
inc
out
leave
mov
lods
ss
loopne
leave
sub
fcmovb
mov
in
mov
loop
sub
add
scas
sti
jecxz
sbb
dec
setno
fwait
pop
loopne
jbe
push
pop
fsub
mov
bound
or
lea
push
jp
push
loope
jle
push
and
js
cli
arpl
sub
bound
xchg
ljmp
jge
jo
sbb
jne
stc
fsubp
jge
outsl
aaa
aad
iret
sub
mov
lods
jmp
mov
and
sub
mov
jb
ja
sub
notl
scas
xchg
mov
in
mov
inc
cmp
hlt
dec
stc
xchg
adc
fcmovbe
or
shll
xor
addl
sti
and
subl
mov
sbb
xor
mov
outsb
ficoms
xor
out
mov
sbb
movsb
sbb
rcll
sub
testl
fimull
inc
add
cmpsl
xchg
test
out
inc
imul
jl
scas
in
enter
int3
jp
clc
xor
dec
xchg
nop
cltd
xchg
xchg
adc
pushf
divb
push
loop
shl
sti
mov
xor
outsl
push
lcall
jge
rclb
arpl
test
add
cmpsl
or
pop
loopne
push
sub
dec
cmpsb
mov
inc
fs
iret
cmpsl
jb
dec
mov
adc
sub
cmpsl
lret
fiaddl
es
jnp
out
orl
popf
dec
in
inc
subl
test
jae
inc
clc
or
and
lcall
pop
sub
fstl
sbbb
cmp
mov
shrl
mov
pushw
mov
or
test
roll
sti
mov
push
cltd
add
dec
inc
loopne
loopne
fsubs
xor
push
sbb
inc
movsl
hlt
push
daa
pop
hlt
rorb
xor
lahf
loopne
aam
xor
loope
in
push
mov
fdiv
pop
test
ds
cld
lods
push
mov
int3
call
adc
xchg
mov
enter
pop
xchg
and
sub
gs
mov
mov
outsl
add
arpl
cmp
mov
cmp
cmp
jp
out
inc
xor
outsb
imul
enter
out
mov
sbb
jl
notb
sub
ret
movb
lock
push
mov
jbe
inc
mov
sti
es
movsb
dec
cld
std
outsl
or
mov
cmpsb
outsl
stos
mov
popf
in
stos
add
mov
cmp
enter
enter
mov
adc
shlb
add
enter
dec
or
out
sar
test
pop
jg
or
lods
cmpsl
enter
push
movsb
sub
pop
push
shrb
bound
and
adc
mov
or
iret
adc
inc
inc
mov
and
iret
aaa
mov
jnp
jne
mov
pop
daa
mov
mov
mov
pop
loopne
ss
jecxz
xlat
mov
ds
jecxz
mov
mov
push
xchg
rclb
xor
fistl
inc
mov
mov
mov
jge
sbb
movsb
ret
jnp
fwait
jg
push
mov
repz
mov
xchg
mov
stos
inc
or
pop
fcmovb
jno
rolb
jno
aam
pop
and
insl
and
arpl
loopne
sub
out
dec
data16
and
or
sbbl
loop
stc
loop
mov
shrl
rorb
aam
push
int3
jl
jns
mov
mov
iret
inc
lret
jg
xlat
out
sbb
bound
mov
xor
xor
enter
push
pop
xlat
ds
adc
push
mov
sti
flds
daa
fdivrs
inc
sub
cmpsl
push
es
jl
mov
mov
mov
mov
aaa
and
rorb
lret
inc
in
push
sarb
or
rcll
xchg
or
data16
fistpl
jns
int
jne
jne
jae
inc
popa
jmp
mov
pop
jge
push
loopne
xor
movb
sub
mov
test
fstl
lret
je
out
dec
push
dec
push
fldl
test
and
aad
push
aad
stc
scas
out
mov
pop
add
daa
inc
jp
or
mov
lock
pop
bound
call
stos
jbe
shrl
xchg
leave
test
pop
xor
and
rcll
dec
mov
les
inc
es
inc
mov
aaa
fisubs
push
nop
mov
cmpsb
or
lcall
inc
add
mov
int
test
sarb
jbe
addr16
ret
into
ficompl
mov
xchg
dec
inc
icebp
jb
call
cltd
xchg
sub
cli
xchg
jns
jle
outsl
inc
add
ret
jae
mov
lods
push
stc
addl
xor
mov
xor
sbb
jbe
std
arpl
jb
imul
push
mov
push
inc
inc
dec
mov
insl
jno
jae
imul
add
stc
push
adc
xlat
and
aam
adc
sub
scas
fsts
pop
cmp
push
add
dec
jmp
sub
leave
out
dec
push
xchg
sbb
cmc
mov
int3
loop
pop
in
das
cs
jne
shrb
subb
xor
lds
cltd
mov
sbb
or
and
loopne
and
dec
jl
xlat
or
add
fstpl
es
out
push
hlt
dec
or
pushf
inc
add
inc
xchg
aaa
jbe
cmp
or
mov
subl
cmp
add
sbb
aas
int3
cli
push
cltd
popf
in
mov
bound
pop
cwtl
adc
scas
xchg
push
cmpl
pushf
sbb
mov
cmp
lods
inc
mov
ret
jb
or
xor
xor
sbb
push
int3
jae
ja
sub
out
jmp
iret
xor
jp
xor
xor
jae
jns
inc
pop
adc
test
cmp
push
jg
arpl
sti
mov
dec
lods
push
sahf
jb
in
int3
jge
cmp
xchg
xchg
aaa
inc
fstp
pusha
adc
cmpsl
adc
pop
sbb
movb
dec
sbb
dec
jnp
cmpsl
lea
lods
cmp
outsb
mov
inc
and
dec
xchg
pushf
push
mov
in
xor
xchg
ret
shl
mov
dec
mov
inc
jmp
mov
dec
cli
int
cmp
lret
inc
push
fnstsw
push
cmp
pop
test
fiadds
add
cwtl
arpl
aaa
xchg
adc
mov
das
fistl
xor
popw
mov
bound
add
sahf
adc
scas
and
adc
mov
rcrl
jge
inc
add
push
cmp
test
sahf
imul
cmp
loope
fcomp
xchg
fsubs
cmp
inc
jge
daa
pop
mov
aaa
fincstp
lcall
adc
lods
cmp
scas
insb
cmpsl
fadds
mov
fimull
shl
xchg
call
push
xor
push
and
movsl
stos
cs
cmp
pop
push
jmp
shlb
movsb
insl
sbb
sahf
jp
push
mov
inc
outsb
or
ret
js
jno
jne
mov
movsb
add
ss
iret
int
xor
adc
add
mov
popl
push
call
ja
sbb
cld
into
stos
into
push
push
sub
dec
add
flds
mov
sbb
arpl
mov
mov
adc
cmp
sbb
xchg
dec
push
movsb
shlb
repz
lods
xchg
lahf
xchg
pop
xchg
dec
lea
add
push
pop
dec
in
adc
pop
pop
outsl
stc
test
int
xor
xor
dec
popf
imul
data16
sbb
fnsave
adc
lcall
jae
or
xchg
std
into
test
cmp
lock
inc
sub
in
cmp
lods
out
xchg
xor
inc
push
mov
dec
cmp
inc
sub
dec
cmp
dec
xchg
jnp
mov
xchg
lret
cmove
pop
cwtl
push
dec
aas
mov
out
mov
shl
andb
inc
xlat
add
push
mov
loope
jne
push
xchg
lret
xchg
mov
test
fdivrl
leave
xor
push
push
dec
rorl
outsl
mov
sar
iret
pop
push
pusha
cmpsl
hlt
push
in
leave
imul
repz
mov
sub
jecxz
arpl
call
mov
add
sbb
mov
popf
cmp
mov
jmp
out
imul
daa
imul
test
or
popa
outsl
adc
jg
xchg
in
outsb
mov
mov
das
adc
cmpsb
daa
pushf
loop
mov
push
sub
xor
outsb
cmp
sbb
outsb
add
iret
mov
lret
mov
jl
mov
clc
xchg
mov
popa
lds
lea
dec
dec
add
in
fs
scas
mov
mov
xor
cmc
stos
push
cs
xor
dec
mov
ds
aad
sbb
jne
dec
push
scas
in
in
cmp
repz
jne
sub
mov
js
in
jmp
fnstsw
rorl
pop
pop
cmpsl
jo
sbb
dec
std
in
int3
mov
sti
xor
adc
scas
push
or
jecxz
sub
outsb
jns
dec
cwtl
in
je
into
jl
adc
test
aam
hlt
mov
sbb
sbb
push
add
ds
push
mov
orb
lret
fwait
mov
cltd
jg
adc
sahf
jb
pop
mov
movlps
mov
and
addr16
xor
call
mov
or
gs
mov
hlt
pop
adc
mov
sbb
adc
dec
sub
dec
cld
aaa
jp
arpl
pop
sub
mov
sub
cmc
dec
loopne
push
fidivrs
and
mov
pop
add
mov
sub
push
icebp
adc
lea
loop
xchg
repz
ficomps
pusha
rcrb
ljmp
mov
in
sbb
adc
or
mov
inc
cmp
fwait
pop
or
sar
push
dec
out
les
mov
xorl
fwait
mov
aas
jle
sub
lret
std
pop
inc
dec
cmp
dec
mov
jg
xor
jecxz
fcompl
popa
test
sub
pop
add
and
scas
and
jo
jg
leave
sbbb
xor
imul
lcall
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
jmp
xchg
pop
and
mov
jo
push
aam
and
jp
pop
jp
or
frstor
jb
mull
push
xor
add
popf
enter
insb
das
fwait
or
adc
sbb
mov
pop
mov
dec
icebp
stos
inc
aam
andl
xorb
dec
stos
std
sub
adc
and
push
sub
in
and
shrl
out
cltd
push
cld
in
stc
aaa
arpl
imul
pop
mov
mov
leave
cld
fistpl
into
push
cmpsl
test
mov
hlt
xchg
pushf
sbb
xchg
das
sti
push
jns
adc
rolb
inc
jae
lods
ja
or
push
fisubrs
fmull
subl
xchg
inc
pop
lret
sbb
int
fadds
imul
add
jbe
fists
push
sub
dec
push
jle
addl
ds
int3
add
das
sbb
popa
daa
lods
outsb
push
hlt
sub
adc
inc
stos
mov
aam
fs
stos
lock
sbb
pop
repnz
ret
mov
fidivl
clc
lods
adc
xchg
cmp
sbb
outsb
mov
enter
out
les
jp
sbb
fcomip
push
addb
pop
xor
test
jg
scas
imul
pxor
push
shrl
popa
add
cli
scas
outsb
xchg
mov
sub
and
rcrb
push
jb
jecxz
shl
movsb
and
into
adc
std
testb
clc
rclb
dec
sbb
addr16
add
jge
test
inc
ss
jge
aas
ret
test
das
pop
lock
dec
xor
push
and
es
push
lcall
cltd
xchg
sbb
lcall
push
lock
inc
je
bnd
lret
int
out
pop
into
mov
cwtl
dec
mov
xchg
xchg
stos
outsb
cs
jge
add
ret
cmc
inc
repnz
inc
add
notl
popa
mov
pop
shl
xor
jl
fbstp
rol
icebp
xchg
stos
stos
and
scas
rcrl
popf
fisttps
rclb
mov
aaa
mul
enter
adc
fidivl
push
add
sti
jns
jle
test
add
pushf
rol
dec
push
nop
lock
cmp
shlb
enter
or
mov
xor
out
or
lods
ljmp
or
or
in
lods
lcall
dec
dec
dec
adc
in
mov
or
mov
jae
cmp
mov
outsl
mov
shlb
cwtl
iretw
leave
jl
jl
push
cltd
mov
push
add
mov
mov
jmp
pop
mov
mov
and
cltd
xchg
sti
pop
les
mov
scas
xor
stc
into
cmp
shrb
enter
test
into
divb
test
dec
cmp
sub
je
xor
in
sub
test
jg
xor
xchg
in
add
xor
cmp
int3
ja
mov
int
and
sub
xorl
ja
and
insb
or
jb
push
sahf
jns
mov
xchg
repnz
pusha
adc
std
mov
scas
call
mov
sahf
imull
cmpsl
out
mov
test
aam
test
ret
adc
outsl
push
insl
pop
push
mov
pop
xchg
mov
pop
xchg
inc
int3
lods
dec
lock
dec
mov
sahf
stc
pop
mov
adc
in
push
cmp
faddp
out
xchg
outsb
xchg
addr16
bound
jp
add
test
push
dec
stc
imul
push
jns
out
in
mov
mov
out
xchg
sti
mov
pop
pop
jp
inc
jmp
jp
dec
pop
push
pop
xchg
cwtl
je
into
mov
je
jae
rclb
xchg
add
leave
pop
adc
mov
insb
mov
stos
subb
and
sbb
iret
add
jge
aas
fdivr
fmull
dec
pop
sbb
jnp
fisubl
xchg
je
lods
into
pop
les
jb
negb
add
frstor
scas
pusha
sub
imul
cltd
out
bnd
movsb
xchg
or
lahf
ja
or
sbbb
push
sbbb
cmp
popf
mov
in
sbb
xchg
out
mov
nop
js
pop
jb
mov
sbb
mov
popa
mov
repnz
inc
clc
xor
test
enter
movsl
lods
imul
jmp
into
xor
push
shll
or
xor
enter
add
xor
lret
mull
or
sub
loope
je,pn
sub
in
dec
mov
fnstenv
aam
mov
push
pop
jne
cmp
cs
adc
push
inc
rorl
add
xor
les
mov
insb
pusha
sbb
mov
and
xor
loope
add
xchg
pushf
sub
fisttpl
pushw
jnp
insl
stc
les
clc
xor
divl
xchg
fst
xchg
lret
mov
push
jbe
mov
pop
dec
adc
xchg
pop
sub
mov
pop
xor
mov
popa
mov
shll
xor
inc
test
jge
xor
addr16
scas
add
repz
add
call
mov
lods
imull
mov
mov
push
pusha
cmp
clc
popa
xchg
push
lea
sbbl
popa
inc
xor
add
adc
mov
or
aaa
scas
cmp
adc
sahf
scas
mov
xor
hlt
cmp
mov
cwtl
push
pop
and
xchg
or
clc
push
decb
repz
push
inc
pop
scas
dec
outsl
dec
lahf
mov
insl
dec
lods
sub
xchg
mov
lret
xchg
in
scas
xorb
call
and
insb
mov
cld
dec
pushf
repz
lock
xor
xchg
pusha
in
pop
and
dec
pop
or
push
aam
jae
cmp
sbb
iret
sar
pusha
inc
adc
imul
sub
xor
lods
cs
or
scas
lret
jmp
ja
sti
lds
mov
or
xchg
insb
or
cmp
mov
adc
loopne
xor
push
cmp
cmp
and
and
xlat
cmp
pop
pop
sahf
call
sbb
xchg
test
add
add
popl
add
xchg
sbb
jno
or
mov
out
lcall
inc
sub
shll
cmpsb
and
rcr
dec
test
dec
xchg
in
call
fs
sahf
sub
rolb
jle
mov
ret
stos
js
mov
xchg
push
fldenv
mov
sahf
mov
pop
mov
inc
das
sarb
ljmp
arpl
sbb
enter
movsl
cwtl
addl
inc
rcl
push
add
adc
mov
pop
test
movsl
cmp
mov
mov
or
mov
repz
pop
pop
nop
mov
add
cmpl
testl
mov
or
scas
nop
xor
shlb
xlat
xchg
and
and
jb
jge
jmp
icebp
nop
je
sub
pop
push
mov
mov
pop
xchg
sbb
gs
inc
loope
xchg
nop
shr
xchg
sti
and
xchg
sbb
xor
pop
ret
pop
cmp
call
jecxz
std
adc
insb
andl
sub
les
pop
jle
mov
xor
je
push
shll
and
xor
push
dec
sub
mov
mov
gs
movsb
sahf
lods
sub
pop
xchg
sti
fidivs
insl
pop
mov
dec
pusha
movsb
cmp
pushf
mov
movsl
rcrb
es
jmp
ret
stc
jae
xor
xor
shlb
xchg
pusha
push
cwtl
nop
xchg
repz
mov
dec
jbe
jmp
mov
arpl
fsts
or
inc
outsl
fs
mov
repnz
pop
add
call
mov
cltd
pop
fidivrl
pushf
xchg
bound
movsb
jmp
insb
into
xchg
jp
cmp
adc
scas
inc
or
shrl
sub
aad
movsl
and
sub
cwtl
cwtl
mov
out
das
ljmp
pop
ljmp
fnstenv
sbb
bound
lds
sub
stos
loope
xchg
orl
int3
lea
iret
lods
stos
lea
inc
mov
repnz
loope
fldl
cltd
jnp
xor
je
cmp
jl
adc
stc
arpl
pop
mov
jbe
xchg
cwtl
add
lret
sbb
das
inc
jae
lods
or
pop
rcr
cmpsb
sub
mov
mov
cmp
xchg
mov
sub
xor
int
sbb
fadd
mov
cltd
inc
in
cmpsb
xchg
call
cmp
orl
jno
ds
ss
xchg
cmp
jmp
cli
cltd
scas
jge
loope
pop
inc
add
jnp
add
push
sbb
xchg
outsl
daa
xlat
sbb
test
pusha
adc
xchg
imul
bound
sub
insl
ja
push
mov
pop
ds
and
jno
insb
sub
push
push
enter
pop
dec
stos
xor
jbe
scas
xor
mov
in
jo
es
or
cmpsb
fs
adc
aaa
outsb
jo
test
out
sahf
sbb
and
sti
mov
fninit
sub
inc
pop
lahf
nop
cltd
inc
jmp
and
dec
loopne
jmp
xchg
and
out
xor
push
daa
push
mov
cmp
idivb
fcmove
pop
dec
fstps
shl
daa
addl
outsl
jae
lret
add
out
mov
stos
xor
and
inc
hlt
mov
aaa
push
pop
xor
dec
cli
xor
icebp
adc
call
cmp
subl
mov
mov
or
jb
out
fcomip
lahf
xor
outsb
mov
popa
xor
pop
xorb
fiadds
std
dec
mov
shrl
adc
aaa
jo
adc
sub
pop
hlt
xchg
cld
or
hlt
mov
cmp
lahf
sbb
xor
cmp
jg
mov
rcrb
imul
jns
lret
push
test
outsb
icebp
adc
gs
cli
popa
inc
ret
xor
cld
lret
ja
fs
sbb
je
sahf
movl
insb
push
shl
dec
adc
add
in
dec
adc
test
daa
adc
ror
in
lods
mov
rorb
xor
ret
aam
and
arpl
jae,pt
cmp
inc
or
ja
and
in
xchg
pop
cltd
in
xor
add
xchg
xlat
jno
and
jbe
or
cld
outsb
pop
push
push
mov
outsl
xor
test
mov
push
fimuls
je
mov
xor
push
push
rol
jg
scas
test
lods
mov
sub
add
push
fsts
inc
jb
dec
jns
ffree
cmp
sub
jmp
aaa
movsl
mov
cld
mov
mov
push
ds
es
cmp
jl
movsl
jle
jle
loop
adc
imul
add
insb
sbb
rcr
test
out
lahf
cmpsl
lods
adc
cmp
pop
sbbb
add
push
icebp
jmp
lcall
push
dec
inc
adc
jecxz
test
mov
ret
mov
leave
mov
loope
arpl
mov
jno
test
mov
test
ss
std
shrl
mov
mov
test
pop
cmpb
lock
int
jnp
xor
push
pop
add
into
sbbl
iret
jecxz
add
push
jl
stos
mov
push
das
cmpsb
mov
sbb
pushf
xchg
lcall
nop
lods
and
jne
mov
insl
mov
dec
into
mov
enter
mov
cli
in
mov
stos
sub
inc
sbb
scas
insb
test
inc
push
or
mov
je
or
push
adc
scas
fimull
jp
adc
int
mov
pop
push
aam
dec
int
sbb
and
out
hlt
jae
shll
mov
xchg
sbb
pop
daa
fs
clc
fstp
shrl
icebp
notb
js
fwait
pop
lcall
and
mov
jg
mov
mov
imul
jo
pop
into
int3
inc
mov
xchg
movsb
lods
sub
mov
or
bound
iret
lahf
fnsave
and
sbb
sbb
mov
lds
ljmp
cwtl
jmp
cltd
cmpl
add
sub
push
and
sub
ds
outsb
fadd
psrlq
aad
adc
mov
adc
push
leave
scas
push
rcrl
in
scas
aam
loope
xchg
inc
mov
pop
cmpsb
sbb
ja
loop
fldenv
sub
xor
jnp
cmpsl
sub
adc
xchg
ss
stos
xor
sahf
pop
pop
sub
clc
jge
daa
jecxz
mov
mov
push
mov
pop
ds
cwtl
repz
xchg
arpl
shlb
cld
in
testb
mov
jecxz
xchg
loope
or
jno
sbbl
mov
jnp
out
sub
out
mov
and
daa
jne
and
rcrb
es
int3
sub
mov
pushw
es
adc
nop
pop
mov
loop
dec
pop
xor
fwait
int3
mov
push
inc
adc
hlt
int
sbb
lret
mov
addr16
pop
fwait
outsb
ficomps
ret
sahf
lcall
sbb
sahf
movsb
xchg
pop
loope,pt
add
mov
dec
dec
mov
data16
leave
mov
pop
add
sub
jne
jg
mov
idiv
popa
dec
insb
xchg
pop
test
pop
imul
clc
sub
push
inc
dec
cld
sub
lahf
xlat
mov
roll
hlt
outsb
sti
imul
push
xor
mov
mov
sbb
cmp
push
adc
stos
pop
lret
pushf
test
pushf
cmpsb
insb
test
pop
push
fldenv
imul
stc
pusha
lea
out
test
pop
sub
push
sti
cmp
clc
gs
jae
mov
pop
das
repnz
jp
dec
gs
aad
fs
cpuid
jb
mov
jl
cmpsb
loopne
int
aas
sbb
mov
iret
and
dec
call
pop
inc
xlat
cltd
popa
adc
inc
pusha
imul
pop
shlb
ljmp
fisubrs
ret
je
fbstp
mov
cmp
outsl
lock
and
fsubrs
cwtl
jge
pushf
fwait
push
xchg
loope
pop
loop
fdivrp
mov
stos
mov
scas
das
jl
out
jl
cmp
push
add
dec
cmp
mov
out
addr16
jle
pop
sbb
rol
inc
cmpsb
mov
xchg
push
pop
sbb
hlt
fst
subl
dec
push
sub
dec
xlat
mov
subb
or
mov
ret
cmp
in
repnz
mov
test
push
jo
cmp
in
dec
xor
add
cli
fdiv
jmp
push
xor
mov
loope
push
add
lods
into
jle
loopne
xchg
mov
insl
adc
lds
cs
repz
mov
xchg
xorl
pop
fcmove
xchg
outsl
adc
test
push
add
mov
mov
jmp
mov
daa
fld1
mov
das
pop
shll
mov
scas
push
mov
lods
adc
pusha
data16
loope
shl
xchg
push
pop
xchg
rorl
daa
jp
outsl
jg
sbb
or
sbb
int3
fistpl
fcmovu
jmp
pop
or
insb
ja
dec
push
movsb
xchg
pop
mov
fidivs
js
pop
loopne
sbb
movsb
pusha
imul
shlb
xchg
orl
ljmp
popa
xor
push
add
mov
pusha
cwtl
stc
push
idivl
inc
xor
and
mov
jnp
add
decb
fdivl
mov
ret
add
icebp
cmp
stos
sub
mov
dec
jl
out
push
imul
inc
mov
xor
cmp
cmp
rol
cmp
xchg
push
fldl
cli
sahf
lea
ljmp
arpl
add
dec
mov
into
sub
xchg
sub
or
addb
xor
mov
shll
mov
mov
shlb
repz
xchg
mov
scas
pop
xor
pop
push
scas
iret
shll
xor
fldcw
or
xchg
mov
scas
xchg
std
pop
mov
push
cld
pop
fidivrs
pop
push
movsl
es
lcall
lret
rcl
sbb
pop
icebp
push
insb
push
mov
push
hlt
lds
mov
inc
dec
popa
idivb
xor
xchg
mov
cmc
stc
xor
dec
mov
cltd
mov
dec
cmc
insl
sbb
pop
movsl
adc
cmc
lcall
rcll
ja
lock
mov
mov
cld
cltd
mov
pop
mov
mov
mov
bound
das
xchg
mov
mov
repnz
scas
add
pop
subb
or
scas
je
pop
inc
fildll
add
sbb
shlb
test
adc
bound
add
or
fnsave
daa
pop
cmp
loope
jmp
mov
adc
xlat
scas
dec
insl
addr16
dec
inc
jmp
das
xor
addl
push
out
sbb
mov
push
adc
mov
push
or
and
jns
stos
shll
mov
cmc
rcr
cmp
fistpll
sbb
sub
aas
repz
in
stos
mov
icebp
jno
xor
pop
jl
fnstcw
inc
xlat
sbb
push
mov
sbb
lods
fstpl
ficompl
shlb
scas
outsl
pushf
xor
aam
lock
inc
out
push
lods
adc
add
adc
loope
sub
fnstenv
adc
lret
cmp
or
fldenv
pop
icebp
xchg
mov
jnp
xor
sub
mov
pop
jg
movsb
scas
adc
test
aaa
jno
sub
outsb
mov
icebp
xchg
dec
movsb
mov
or
dec
rorb
xor
fisttpll
into
out
es
sub
add
sbbl
adc
in
pusha
and
in
or
gs
in
push
add
clc
jl
xchg
out
mov
iret
or
loop
inc
inc
or
jg
ljmp
call
ds
repnz
or
jecxz
flds
jns
and
call
xlat
jae
jae
daa
pand
push
cli
sub
or
test
das
decl
mov
or
push
push
movsl
cltd
cli
sbbl
mov
addb
stos
lds
ret
inc
fcoms
ficomps
fcmovu
insl
mov
outsb
mov
stos
jo
outsb
jp,pn
xchg
mov
mov
add
jge
and
pop
push
movb
xlat
leave
ljmp
stos
push
sub
jl
inc
or
cmpb
hlt
sub
mov
popf
mov
cmpsb
pop
or
mov
call
sub
cmp
and
push
add
jnp
shll
jle
xchg
adc
lds
fsubr
push
pusha
mov
lods
or
mov
cmp
cmpl
pop
pop
pushf
mov
fs
lds
or
xlat
inc
fdiv
sub
xchg
cmp
xor
mov
lcall
mov
out
adc
insl
cmpsl
leave
loope
fistpl
or
in
push
pop
movsl
dec
rorl
fldl
clc
xchg
mov
mov
in
inc
jns
jl
cli
dec
mov
pop
xchg
mov
jmp
dec
xchg
mov
popf
ror
arpl
cld
fsts
xchg
ror
inc
inc
jbe
cmp
xchg
and
jge
bnd
jle
movb
das
movsl
or
leave
push
add
int3
pop
xor
mov
inc
dec
jns
dec
outsb
lret
jmp
adc
pop
push
xor
shll
and
mov
inc
xor
adc
sbb
jno
push
arpl
or
jns
adc
loope
cmc
movsb
xchg
add
mov
mov
cmpsl
sub
addl
sar
mov
decb
lcall
out
in
shrl
movsb
jb
das
imul
lret
jnp
call
js
ret
mov
gs
jns
es
std
pusha
mov
sahf
pop
sbb
mov
lahf
sbb
xlat
mov
jb
int3
insl
xor
mov
xor
stos
mov
inc
pop
mov
mov
je
push
mov
test
or
clc
repz
mov
aad
cmp
mov
fidivrs
bound
aad
outsl
pop
pop
xchg
sub
pop
xor
xchg
fs
and
dec
and
sub
out
cltd
sbb
sub
xor
in
fbld
jg
lret
jo
pushf
xor
add
stos
test
mov
fisttpll
mov
pop
stos
sub
and
cmp
mov
jp
mov
test
pushf
sub
dec
cmc
mov
and
imulb
not
push
inc
mov
inc
data16
jbe
in
inc
lahf
cli
add
push
pop
jnp
inc
dec
cmp
shl
xchg
lcall
repnz
sub
orl
hlt
int
sbb
fld
dec
fldcw
es
pop
leave
out
mov
inc
jecxz
movsb
insb
xchg
mov
pop
sbb
jbe
popa
ret
stos
out
fadd
fidivs
sub
fbstp
lds
or
test
repnz
cmp
sbb
or
push
pop
ret
in
icebp
or
lock
sahf
adc
loopne
pop
jae
es
sbb
dec
dec
sarb
insl
orl
cmpsb
scas
mov
add
and
test
je
lahf
xor
push
pop
fdivr
dec
out
bound
add
cmc
rcrl
out
ljmp
dec
andb
push
test
fildl
sub
movsl
xor
push
and
jo
rsqrtps
loop
clc
dec
pop
mov
das
aas
mov
mov
push
bound
cmpsl
or
shl
dec
mov
push
std
adc
jmp
jb
lods
xchg
scas
push
add
xchg
stc
dec
cs
in
mov
fucomp
mov
mov
nop
mov
jbe
mov
ja
sbb
and
shlb
scas
pop
sbbb
stc
ds
sub
fists
add
adc
push
test
lock
imul
in
cmp
mov
xchg
xor
test
cmp
push
repnz
dec
mov
insb
pop
push
or
imul
pop
pop
insb
sub
mov
test
in
push
sbb
xor
test
xchg
cmc
insb
ja
fcoms
cli
dec
fidivrl
xorb
je
mov
jo
mov
pop
ds
mov
out
lods
cmp
loop
sti
pushf
hlt
mov
push
mov
cmc
out
add
push
mov
xor
xchg
cmp
jnp
mov
xor
imul
cmpsb
das
inc
aaa
sub
and
int3
sbb
sub
xchg
stc
fucomp
loop
inc
cwtl
mov
and
mov
ret
loope
and
je
loopne
jbe
mov
dec
xchg
fdivp
cli
sbb
aad
in
dec
push
mov
popa
mov
push
mov
arpl
xchg
push
lods
cwtl
mov
pop
sahf
cmc
fdivrl
push
leave
sbb
out
add
mov
cld
xor
aad
pop
arpl
ss
or
dec
mov
clc
out
int
fnstsw
inc
mov
push
push
js
mov
mov
test
cmp
pop
or
lret
mov
and
push
iret
inc
out
shr
mov
out
imul
outsl
les
repnz
lcall
arpl
aaa
mov
inc
and
push
and
or
jo
or
xchg
mov
cwtl
out
mov
adc
outsl
sahf
jae
lock
repnz
popf
jo
pop
cli
sub
dec
pop
mov
xor
xchg
mov
adc
pop
inc
xchg
and
pop
movsl
scas
mov
jbe
pop
xor
stos
gs
lcall
aas
and
cmp
shl
sbb
clc
xchg
loopne
mov
cwtl
stos
add
and
mov
mov
in
sub
adc
push
in
aad
fdivrl
gs
cs
or
mov
in
bound
cmp
dec
push
decb
fdivl
pop
pop
inc
pop
imul
adcl
pop
lock
imul
xchg
xchg
test
bswap
aaa
sbb
mov
pusha
sub
ret
mov
add
es
cmpsb
roll
sbb
sub
mov
sub
dec
jle
push
hlt
das
loop
stos
pop
add
in
push
cmp
cmp
dec
or
insb
jmp
adc
outsl
cmpsb
sub
outsb
xchg
mov
fdivl
test
cs
xchg
sub
lock
xor
pop
in
xorb
outsl
jmp
lret
test
or
mov
jno
in
or
jp
and
push
decb
stos
out
mov
fsub
mov
inc
insl
jbe
mov
xor
aas
iret
mov
in
lret
lret
jg
mov
insl
cli
jnp
and
jbe
ror
in
int3
inc
insl
lret
cmp
pop
roll
sub
stc
push
xchg
std
push
xor
call
xchg
icebp
push
clc
cmp
adc
int
shr
xor
outsb
inc
push
push
mov
xor
movsb
cmp
movsl
je
mov
jno
sbb
push
cmp
mov
push
pop
jnp
jge
mov
add
sahf
jbe
jne
mov
lods
fcompl
cmp
iret
sbb
ja
mov
add
ja
cwtl
in
inc
rcr
inc
repz
adc
xchg
ficoms
lea
xchg
inc
sub
cmp
add
and
sbb
dec
outsl
sbb
js
aam
pop
decb
mov
jmp
outsl
push
and
mov
sub
dec
mov
mov
cmc
xor
cltd
inc
jo
fwait
push
fwait
xor
jae
lods
fwait
cmp
sbb
iret
mov
jno
mov
dec
mov
aas
lock
repnz
mov
xor
xchg
fwait
cmpl
ficoms
loopne
sbb
inc
stc
cltd
rcrl
and
or
mov
jmp
iret
fisubrl
and
shrb
sub
pusha
aad
cmp
outsl
or
mov
into
sbb
cmc
xor
mov
lcall
push
sarl
jmp
adc
mov
mov
loope
cltd
movsl
mov
mov
iret
test
mov
mov
repz
sarb
jnp
mov
adc
xor
sbb
mov
cwtl
xchg
ret
mov
xor
mov
cmp
adc
int
daa
jb
inc
adc
cmpsl
mov
push
test
dec
mov
in
out
push
sti
movsb
outsl
mov
xchg
js
xchg
xchg
or
jnp
cwtl
xchg
sbb
stc
ficoml
sub
or
mov
lods
or
lea
mov
lods
sbb
sbb
inc
int
mov
movsb
ljmp
movsb
add
nop
sti
jbe
rorb
push
aaa
or
jmp
andl
xlat
or
xchg
mov
push
je
imul
out
movsl
jle
lods
bound
mov
sbb
cmp
mov
das
adc
testb
mov
push
fbld
or
xchg
jne
sbb
mov
dec
pusha
cmp
in
cmp
jmp
add
aaa
std
rol
mov
add
jl
cmc
not
test
or
cmc
sub
mov
pop
xchg
cmpsb
inc
jbe
aam
jns
jp
pop
outsl
xchg
inc
pop
xchg
sbb
cld
test
shll
xchg
es
or
rol
adc
or
dec
xor
lock
repz
xlat
aam
or
jnp
pop
mov
fsubrs
mov
shlb
fs
fs
jmp
mov
adc
push
jp
aas
xor
iret
addr16
pop
lret
cmpsb
nop
ds
dec
es
and
scas
les
cmp
inc
inc
xchg
xchg
insl
icebp
cmc
and
jno
insl
rolb
inc
data16
push
inc
mov
mov
stc
std
jecxz
mov
jo
fwait
roll
push
cld
fcomps
imull
push
call
push
mov
adc
add
imulb
push
arpl
pop
repz
sub
ret
mov
adc
fisubrs
push
subl
or
xchg
sub
xor
mov
ja
inc
inc
sub
fsts
daa
adc
and
rolb
mov
push
rcl
mov
je
push
fimuls
lds
popa
insl
dec
jno
or
push
imul
mov
std
pop
roll
cmp
xchg
std
push
inc
mov
or
ljmp
pop
test
test
cld
push
cmc
pushf
clc
or
test
and
in
je
xchg
test
xchg
inc
bound
icebp
xchg
mov
pop
and
cli
sbb
inc
mov
mov
lds
jge
xchg
pop
and
sub
orl
cmp
lret
enter
sub
or
pop
imulb
dec
jmp
imull
call
dec
sub
lret
stos
out
lret
pop
or
push
mov
mov
mov
cli
outsl
xor
xchg
imul
jno
xor
mov
jae
sbb
add
jle
mov
inc
fnsave
cmpsb
mov
stos
fcmovne
stc
arpl
push
push
jp
lea
pop
xorl
add
movsb
out
mov
jb
cmp
nop
or
push
sbb
mov
push
test
insl
into
jl
xor
or
sbb
inc
xor
jl
mov
mov
ds
push
sbb
adc
popf
dec
push
and
out
or
paddusb
add
xchg
inc
bound
or
in
mov
outsb
cmpsl
ja
jae
ficompl
outsl
pop
adc
or
mov
repnz
add
enter
or
ret
dec
out
inc
testb
mov
cmp
xchg
pop
movsb
lods
xor
nop
and
pop
dec
inc
xor
xlat
sub
and
adc
xorb
sbb
rorb
pop
inc
cmp
outsb
jmp
stc
sbb
std
mov
mov
cmp
in
inc
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jmp
out
call
ljmp
sub
pop
jp
or
or
mov
clc
inc
inc
jmp
dec
dec
movsl
mov
addl
test
adc
popa
icebp
pop
jb
stos
stos
lock
cmp
mov
enter
insb
cmc
lret
pop
dec
sub
movsb
add
movsl
lods
inc
sub
fnstcw
push
mov
test
inc
std
icebp
cld
std
push
cmpsb
mov
pop
pop
sbb
or
out
add
mov
pop
aam
fidivs
push
pop
nop
out
imul
mov
or
addr16
push
dec
movsb
push
sbb
out
inc
cmpsl
lret
inc
icebp
call
add
stos
dec
mov
push
shl
imull
inc
loop
jb
arpl
or
orb
xchg
dec
lea
loope
push
sub
xchg
push
bound
icebp
movb
mov
cld
shrb
xchg
inc
sti
pop
popf
pop
sub
adc
push
jle
jb
mov
mov
data16
out
add
or
outsb
push
lods
jmp
pop
adc
jmp
jge
jbe
mov
jbe
jne
outsl
es
dec
inc
mov
fists
push
scas
xchg
mov
lods
imulb
push
jge
pop
add
cli
jge
xchg
cmp
ja
cmpb
and
aam
push
dec
test
xchg
pop
dec
jle
stos
shll
inc
scas
test
enter
xchg
mov
cltd
dec
adc
and
nop
sbb
or
inc
adc
jp
push
mov
mov
outsb
inc
sub
ja
xchg
jmp
les
test
cwtl
dec
movsb
fucomip
push
nop
xchg
and
or
push
sub
test
xchg
and
je
inc
adc
lds
adc
pushf
fwait
mov
xchg
xchg
dec
sub
outsb
sbb
sub
mov
daa
pop
sbb
push
fnstenv
pusha
fsubl
mov
bound
sbb
sbb
push
shlb
aad
sub
popa
pusha
aad
sbb
cld
and
xchg
stc
inc
dec
sub
sbb
or
pop
fisubs
mov
mov
shrl
and
in
sub
pop
out
push
sti
mov
dec
pop
shrl
mov
rcll
mov
test
jns
and
xcrypt-ofb
cmpsl
insl
out
aam
ljmp
sub
ret
adc
fsubrl
mov
adc
and
movsl
shrl
cmp
mov
es
push
xchg
or
mov
rorb
cmpsl
cwtl
add
cld
or
ja
cwtl
pop
addr16
loopne
xor
inc
and
push
sbb
add
iret
adc
scas
mov
jmp
cmc
jns
push
mov
xchg
or
or
adc
push
mov
fistl
in
push
mov
lock
pop
std
int
popf
out
and
cmp
das
pop
clc
je
nop
lcall
movsb
push
ds
pop
cli
jg
pop
rol
sbb
cli
movsb
add
push
out
outsb
or
pop
inc
push
out
cmp
jae
pop
push
jp
imul
test
inc
mov
cltd
rorl
out
sub
inc
enter
loope
jb
jp
dec
rcrl
mov
mov
add
mov
addl
mov
aaa
cltd
cmp
adcb
push
push
movsl
cmpsb
cmp
aam
repnz
repnz
repnz
xchg
pop
cld
out
mov
aas
adc
int3
push
aaa
sahf
rolb
test
aad
push
mov
mov
or
cmp
jne
mov
xor
test
jno
adcb
inc
and
dec
push
fsubl
add
add
scas
add
mov
inc
inc
sub
pop
ret
bswap
loopne
inc
pushf
movl
or
into
push
mov
xor
dec
shlb
sub
mov
adc
leave
sub
rcrl
or
fistpll
cmpb
xchg
mov
aam
fcomi
and
out
inc
stos
rorb
iret
pop
std
xor
lods
test
mov
cmp
int3
sbb
mov
pop
mov
add
mov
add
into
adc
sarb
rcrb
mov
mov
add
mulb
test
imulb
jns
lock
ficoml
sti
inc
dec
rorl
fcoms
mov
imul
fimuls
and
outsl
xlat
enter
addb
fs
iret
les
cmp
jg
xchg
mov
insb
xchg
scas
xchg
jp
out
cmp
pop
push
in
xchg
jge
fsubs
pop
xchg
aad
lcall
ss
and
inc
mov
and
pop
addr16
jecxz
push
dec
xlat
mov
inc
cmp
cmc
xchg
shrb
cmp
leave
push
aad
and
aas
arpl
insl
lea
xchg
negb
popa
jl
outsb
hlt
daa
test
dec
into
push
xchg
sahf
cltd
or
xor
xchg
sahf
xchg
int
mov
or
cmp
sti
pop
sbb
fwait
cs
lods
lahf
mull
mov
pop
inc
mov
imul
push
jecxz
mov
pushf
push
push
xor
enter
jmp
out
mov
lret
nop
popa
push
test
cmc
sahf
push
shll
in
es
sbb
push
xor
xchg
loope
sarb
or
mov
dec
adc
dec
and
and
adc
jl
mov
mov
std
sarl
push
aas
inc
sahf
push
testb
clc
jns
jp
arpl
sbb
pushf
adc
shrl
sub
mov
jns
jne
and
pop
test
mov
loope
cmp
lret
stc
xor
hlt
push
fmuls
push
sub
into
popf
aas
or
cwtl
pop
jmp
and
in
shlb
push
cmp
dec
adc
inc
stc
dec
popa
sub
sub
ds
ja
push
mov
push
pop
aaa
lcall
testl
push
lahf
lahf
int3
mov
in
mov
push
and
dec
and
sbb
dec
mov
std
es
xor
movsl
lods
xor
loopne
jge
gs
enter
loopne
aam
cmpsl
add
sbb
xchg
rcrb
cmp
fwait
lahf
in
subb
and
sub
outsb
lock
test
sbb
mov
aad
xor
out
stos
inc
sti
lods
mov
pusha
and
jne
jno
or
add
mov
dec
pop
pop
xor
or
xor
testl
daa
out
hlt
lea
xchg
outsb
lahf
fwait
ret
mov
loope
add
into
mov
outsb
mov
push
adc
and
xchg
add
sbb
mov
div
scas
addb
sti
xchg
pop
js
push
rcr
fsubl
push
mov
sub
fsubr
sti
xor
inc
or
cli
xor
mov
cmc
or
jb
mov
jp
ret
out
dec
insl
popf
cltd
rcrb
xor
out
movsl
cltd
int
xor
data16
fcompl
insl
pop
imull
sbb
jne
movaps
sub
mov
inc
pop
jp
out
js
mov
inc
icebp
mov
dec
adc
sub
sub
inc
cld
mov
pop
xchg
or
push
mov
sub
mov
mov
pop
das
lcall
test
repz
call
sub
dec
mov
mov
add
xchg
shlb
sti
loop
ss
rolb
dec
int
dec
movsl
dec
lcall
adc
cmpb
test
push
leave
stc
mov
mov
test
test
mov
iret
repnz
pop
lea
jnp
mov
rcl
ss
fdivl
mov
xchg
xchg
in
idivb
or
mov
sub
and
cld
push
or
mov
push
stc
mov
sbbl
test
xor
dec
jne
repz
pop
shr
pop
rorl
rcll
jp
mov
test
jno
in
inc
push
movb
push
add
mov
call
dec
mov
test
dec
mov
gs
xor
arpl
or
sbb
shlb
int
dec
sub
push
inc
push
push
jns
enter
pop
sbb
es
pop
jmp
mov
pop
shl
xor
aad
mov
add
pmaddwd
mov
into
push
mov
movsl
out
lds
inc
mov
push
gs
mov
cmc
xchg
loop
sbb
or
sti
add
cmp
xor
push
dec
fsubs
push
adc
popa
xchg
mov
pushf
push
fwait
addr16
cs
push
mov
cld
in
add
cmp
scas
jp
pushf
cmpsb
pop
pop
xchg
mov
test
add
pop
cs
mov
into
jge
bndstx
xor
pop
jns
rcrl
fdiv
ds
repnz
sarb
fmuls
stos
test
iret
mov
mov
xor
repz
inc
xlat
out
jae
roll
shll
dec
mov
iret
ret
shrl
mov
mov
fisubrl
rol
popf
dec
std
xlat
outsl
add
jecxz
cli
std
sbb
dec
stos
test
mov
dec
clc
and
enter
adc
xchg
pop
cltd
xor
mov
cmpl
ret
mov
or
imul
mov
mov
pop
test
or
mov
scas
dec
inc
sub
sub
into
test
mov
ret
adc
call
cmp
jg
in
dec
xor
notl
in
out
mov
xchg
jo
jnp
push
mov
subb
mov
cmp
mov
inc
sub
pop
aad
jl
xchg
xchg
add
data16
fcoml
decb
cmp
jmp
lcall
pop
out
xchg
sarb
mov
mov
adc
mov
add
xchg
dec
push
fsubrp
adc
lds
adc
ret
fsub
js
mov
cli
adc
inc
push
sti
xchg
pop
jg
fwait
popf
add
cmp
cmpl
jno
jae
shrl
shlb
and
fs
rcll
test
add
lret
inc
add
push
jo
mov
ljmp
fisubl
mov
ss
sub
movsl
jg
ficompl
jl
mov
aaa
int
push
aad
aam
iret
xor
sti
movsl
dec
movsb
and
push
sahf
daa
sub
fsubrs
cmp
sbb
jle
jns
xchg
or
fwait
sbb
jl
push
inc
mov
push
mov
fisttps
xor
sub
hlt
mov
add
ret
cwtl
dec
pop
add
xor
out
shl
aam
lret
or
data16
add
sbb
xchg
cmp
call
sbb
xor
out
push
push
in
outsl
jp
sub
lods
scas
mov
ficomps
fists
pop
inc
shl
and
xchg
mov
mov
fldenv
or
addr16
mov
fisttpll
inc
push
and
mov
xorl
rcrl
je
push
rcr
loopne
nop
notb
imull
push
sbbl
dec
xor
movsl
hlt
movb
popa
mov
cmpsb
add
scas
es
push
test
adc
xor
or
mov
cli
leave
mov
mov
jns
jnp
pop
inc
jecxz
dec
adc
push
mov
xor
mov
int3
pop
fcmovbe
in
adc
scas
rol
imul
cwtl
rorl
mov
cmp
std
out
and
pop
sbb
cmp
popa
in
call
setbe
in
xorb
sbb
stos
sub
pop
xchg
pop
pextrw
and
stos
cmc
ljmp
mov
leave
adc
adc
sbb
mov
jnp
or
idivl
data16
push
mov
test
cli
fs
xchg
mov
stc
cmp
push
int3
xor
cmp
add
add
and
inc
fucomi
sub
mov
cmp
sbb
imul
jp
sbb
mov
cwtl
mov
or
sarb
aaa
or
scas
cs
imul
sbb
js
fucomi
push
test
adc
dec
aaa
mov
dec
or
sbb
cwtl
inc
into
aas
sub
movsb
inc
mov
or
test
xlat
mov
mov
aad
dec
enter
adc
es
mov
cmpsb
and
in
pusha
fwait
loope
rcll
scas
pop
push
adc
outsb
sarl
cli
idivl
push
adc
mov
mov
xor
inc
push
in
pop
and
and
pusha
je
add
lds
pop
fbld
lret
out
or
pop
fwait
dec
mov
dec
aam
popf
cwtl
fisubs
insl
repnz
xchg
adc
add
out
in
and
scas
dec
push
inc
pop
adc
xchg
mov
lret
add
dec
call
jae
outsb
lods
bound
inc
adc
dec
adc
dec
add
xorl
and
ljmp
sbb
or
aas
mov
jns,pn
popf
call
aaa
in
jo
xor
shl
add
adc
sub
cmp
clc
setp
xorb
les
loopne
shll
loope
frstor
xor
push
in
shl
movsw
lods
imul
mov
adc
jbe
pop
jp
iret
cwtl
mov
lahf
and
aam
addl
sub
push
das
lret
test
xchg
pop
mov
push
subps
aad
dec
mov
cld
push
mov
jbe
jnp
mov
dec
hlt
movsb
inc
fdivr
or
rcll
xor
mov
xor
test
cmp
push
xor
push
push
fwait
icebp
mov
mov
mov
pop
aam
cld
add
sar
pop
dec
jl
mov
lea
call
xchg
icebp
add
cwtl
sbb
push
lret
pop
out
cmp
add
fucomip
cmp
hlt
negl
ljmp
add
mov
push
jle
sbb
je
sub
lret
scas
pop
sahf
push
pop
inc
sbb
cmpsl
rolb
add
pop
in
mov
ret
xchg
sbb
or
mov
loopne
pop
inc
mov
hlt
and
fstps
mov
sbb
daa
add
es
inc
jecxz
in
jle
out
push
mov
dec
jge
cmpsb
std
adc
xlat
push
fadds
aaa
pop
inc
fsubp
pushf
aad
out
faddl
mov
xchg
mov
mov
ds
nop
lcall
and
xchg
fwait
xor
jge
ja
mov
stos
jae
adc
push
jp
ds
mov
ss
xchg
popa
mov
inc
fldcw
sbb
sbb
xchg
comiss
or
cmp
in
cmpsl
psadbw
rcl
inc
sub
xor
jg
cmp
aad
sub
mov
adc
mov
clc
inc
insb
dec
iret
mov
mov
gs
and
or
adc
jns
add
or
shll
test
fwait
in
je
dec
push
pop
fldcw
lcall
rorl
testl
and
push
movsl
xchg
imul
pop
mov
add
mov
jmp
push
push
mov
mov
mov
cli
mov
adc
sub
lahf
shr
or
xor
inc
arpl
mov
pop
stos
or
xor
pop
mov
mov
xchg
popa
push
cmpsb
jmp
nop
xlat
push
ljmp
pushf
sahf
lock
insb
xchg
pusha
pop
lahf
mov
xlat
lock
cmp
xor
jg
xchg
lcall
sahf
iret
xchg
pop
add
insb
sti
and
ja
repnz
enter
outsb
or
inc
std
cmp
dec
push
pop
cmp
mov
fwait
push
adc
push
call
mov
inc
decl
arpl
inc
mov
das
in
lret
xor
popa
into
sub
lods
push
lcall
pusha
mov
lods
cmpsl
sahf
movsb
push
xchg
xchg
xchg
pop
mov
cmp
lods
mov
mov
loop
cmpsb
push
lret
xor
rorl
dec
lds
cmpsb
ljmp
decb
mov
sub
mov
pop
fnsave
add
mov
jle
sti
in
mov
pop
pop
lahf
and
sbb
ds
mov
add
jns
mov
test
inc
mov
sarl
lods
lds
cmp
cmp
adc
icebp
ja
je
xor
jecxz
arpl
pusha
into
cli
jmp
mov
mov
push
scas
push
push
sub
lods
cmc
mov
mov
pop
dec
cli
mov
icebp
jnp
testb
jb
mov
adc
imul
mov
ss
dec
movsl
and
lret
jl
loopnew
cli
add
ffree
pop
rcll
hlt
xlat
sahf
push
mov
mov
cmp
sub
lret
jmp
adc
popa
stos
pop
lods
mov
enter
lds
or
shll
ret
mov
mov
roll
arpl
movsl
push
sub
rol
jmp
fbstp
in
test
dec
add
cmp
cmp
das
dec
dec
insb
out
xchg
sarb
mov
mov
mov
mov
addl
pop
mov
xor
and
mov
and
add
std
and
scas
xchg
jnp
repnz
mov
sub
stc
ror
xor
ret
stc
sbb
aad
cmp
adc
insl
lret
movlps
ljmp
inc
adc
jbe
movsl
push
cmp
dec
sub
jae
xor
mov
out
lods
nop
dec
leave
lret
push
push
and
inc
cmp
test
push
ss
js
pushf
xchg
and
rorb
shrl
loopne
into
clc
cltd
fs
inc
adcl
std
rcrb
xor
aaa
fcoml
fadd
loope
mov
fldl
inc
dec
xchg
mov
xorb
repnz
pop
cmpsb
sahf
es
stc
popa
inc
in
xchg
aam
insb
mov
jns
pop
cmp
xor
cmpsb
xor
loop
pusha
jo
xchg
push
fcoml
lock
jbe
fs
push
nop
add
jns
fistpl
leave
mov
jne
out
xchg
push
fs
js
imul
sub
rclb
stos
out
into
mov
out
in
int
push
add
jmp
imulb
mov
push
inc
pop
shrb
or
popa
imul
xor
sbb
cltd
sahf
sahf
lahf
out
mov
jecxz
outsl
mov
push
add
aad
push
mov
out
dec
xchg
mov
cmpsb
jne
popa
push
and
loop
push
outsl
pop
sub
adc
insl
repz
test
lock
or
cwtl
xchg
fstpl
add
push
add
jne
inc
pop
mov
inc
xchg
mov
cmpsb
xor
dec
and
push
cli
aas
push
div
add
cli
add
test
les
adc
or
fiaddl
inc
xchg
pop
jae
pop
cmp
ret
and
cmc
jno
ljmp
xchg
adc
cmpsb
push
sub
pop
data16
adc
sarl
xchg
mov
push
sub
push
xchg
int
loop
lods
hlt
ficoml
out
in
out
cwtl
das
hlt
push
sbb
mov
mov
cltd
and
pusha
ret
std
adc
int3
arpl
or
add
and
xlat
ficoml
and
js
insb
pop
mov
cmp
add
dec
or
jb
aam
or
xor
mov
inc
in
movsl
out
das
arpl
lock
xchg
add
clc
sbb
dec
lods
inc
or
xchg
shrl
xor
lcall
decl
mov
push
mov
pop
xchg
stos
inc
mov
in
jo
xchg
pushf
jg
dec
add
mov
push
out
add
out
lret
ror
sbb
cmc
mov
gs
sbb
shrb
mov
dec
sub
insb
loop
js
pop
cmc
adc
cwtl
ljmp
inc
int3
test
sti
cmp
aaa
fwait
jno
inc
or
repnz
dec
ss
pop
sahf
mov
mov
stc
cmp
mov
mov
aam
push
push
in
xor
mov
mov
pop
jae
out
adc
cli
andb
out
sub
movsb
popf
inc
ljmpw
ret
or
sarl
lret
into
out
mov
lods
mov
test
xchg
adc
dec
insb
xchg
mov
test
xchg
jne
or
fwait
push
push
mov
mov
mov
lods
shll
or
daa
cpuid
sub
pop
adc
ret
cmp
lcall
movsl
mov
cmc
sbbl
cmc
cmp
aam
call
sbb
clc
mov
ljmp
testb
inc
pop
insb
scas
ficompl
and
jb
aas
jle
push
pop
sbb
dec
jo
dec
inc
sbb
push
jb
mov
jmp
rcll
push
clc
sbb
dec
sub
gs
sti
sbb
mov
ljmp
and
scas
je
or
not
in
mov
shrl
sub
mov
jno
pop
add
cmp
or
sub
add
adc
cwtl
cmp
dec
dec
repz
pop
mov
or
in
mov
sbb
jne
mov
leave
pop
adc
repz
shlb
adc
xor
xor
cmpsb
dec
xchg
sbb
fldenv
aas
stos
mov
fcom
adc
add
fnstenv
sbb
leave
mov
enter
out
lret
xchg
pop
push
pop
out
scas
inc
pop
add
sub
cmovo
js
fmull
and
filds
das
inc
push
jmp
mov
inc
lods
xchg
mov
cli
sub
jmp
mov
xlat
mov
hlt
jne
data16
inc
push
xchg
and
imul
je
mov
adc
mov
xchg
adc
push
and
lret
jecxz
flds
arpl
rcll
lods
pop
adc
cmp
lret
mov
dec
dec
nop
push
pop
push
into
fcoms
mov
insl
mov
dec
ljmp
cmp
arpl
repz
xchg
inc
mov
pushf
xchg
mov
paddsw
mov
imul
jp
decb
loopne
addr16
or
nop
pop
cmc
and
popa
and
xor
cwtl
out
mov
pop
outsb
popa
mov
stos
adc
inc
shr
dec
push
jne
lret
or
jl
sbb
jmp
ja
ud1
roll
mov
bound
ret
dec
jo
out
fsts
inc
jbe
push
pop
enter
jg
cltd
mov
stos
cmp
jno
xchg
add
jno
lahf
sub
push
and
ret
or
inc
mov
fimuls
add
mov
filds
dec
or
pop
jbe
cmp
adc
repz
mov
shlb
out
cmp
inc
sti
ret
mov
push
sti
mov
jo
clc
lods
js
aam
setbe
cmc
dec
mov
orb
inc
lahf
mov
pusha
movsl
js
sub
jle
mov
jl
loope
test
andl
call
sti
pop
or
pop
mov
add
stc
enter
rcll
mov
mov
out
mov
adcl
fwait
lock
cmp
adc
pop
jb
icebp
mov
cmp
and
sahf
cmc
ds
lret
inc
int
push
outsl
test
cld
aad
cs
mov
push
and
fwait
enter
cmpl
out
pop
cmp
xor
in
scas
lods
push
cmp
xor
maxps
inc
xchg
cmp
insl
jae
cli
mov
xor
push
dec
or
gs
pushf
shll
std
jae
insb
push
int3
push
lea
xor
call
div
and
mov
insl
push
enter
mov
dec
adc
sub
sub
xchg
sub
mov
cmp
out
test
movsb
faddl
inc
push
inc
pushw
xor
or
sbbl
clc
pop
adc
xchg
fimull
jmp
outsb
daa
ret
inc
mov
in
lcall
dec
aas
and
add
ffree
lods
ljmp
cmp
push
add
and
inc
sbb
test
icebp
fwait
lret
scas
fsubrs
lret
ss
dec
pop
das
xor
and
cmp
inc
dec
push
and
add
lcall
popf
adc
pcmpgtd
mov
dec
sub
push
pushf
jl
sbb
push
adc
pushf
xchg
call
loope
jbe
icebp
cmc
push
out
cmpb
loopne
outsl
jle
jnp
fisubrl
lods
maxps
push
cwtl
sub
mov
mov
lods
xchg
fcomps
adcl
shlb
lahf
lret
cmpsb
std
sub
mov
outsb
mov
xchg
repnz
adc
mov
ret
push
add
repz
jbe
test
push
leave
std
ret
hlt
out
jno
shl
adc
inc
fiaddl
jbe
adc
pop
dec
or
adc
lock
call
sub
mov
xchg
cltd
fldl
push
jbe
fmuls
mov
lcall
xor
cmpsb
sbb
xchg
push
scas
push
ret
in
push
inc
push
xchg
lret
and
dec
fstpl
pop
sahf
xor
js
mov
jmp
or
fucom
xchg
movsb
mov
mov
out
mov
cmp
lock
add
test
jg
rolb
and
rcrl
aam
aad
and
xor
lods
mov
fsub
xchg
stos
insb
cmp
add
add
shll
aaa
in
popf
push
dec
jle
test
mov
ret
dec
movsl
in
call
push
xchg
mov
sbb
call
xchg
or
ja
add
push
pushf
sub
rolb
sbb
mov
or
or
in
dec
pop
addr16
pop
mov
out
sarb
inc
int3
insl
cmpsl
in
pop
jbe
xor
push
fnstsw
shrb
add
into
mov
cld
arpl
js
dec
mov
lods
mov
addb
mov
mov
nop
test
ljmp
outsb
sahf
fistl
inc
in
ret
mov
fs
dec
jno
aas
pushf
stos
scas
outsb
fbstp
scas
adc
or
or
dec
inc
or
jp
in
ljmp
dec
daa
or
aad
mov
sbbl
je
jnp
and
push
lea
notl
std
aas
dec
insb
fimull
xor
pushf
sbb
xlat
imul
dec
insb
aam
mov
sahf
adc
inc
and
dec
inc
leave
jmp
in
pop
mov
or
scas
hlt
cmpsl
mov
pop
adc
xchg
xlat
rolb
out
pop
nop
jg
subl
add
or
test
jg
mov
dec
jns
mov
test
add
lret
mov
xchg
jae
mov
and
sbb
fstps
xor
mov
push
mov
push
call
cltd
enter
out
pop
push
in
xchg
sahf
mov
movsl
jl
test
xor
or
scas
addb
add
cmpsb
dec
lcall
sbb
xchg
cmc
sbb
je
fisttpl
insl
push
sbb
adc
fsubs
inc
xchg
mov
nop
test
int
push
xor
das
or
out
jle
popf
jbe
and
jmp
jmp
clc
mov
adc
mov
xchg
push
cli
aas
pop
xor
pusha
addb
jns
mov
mov
inc
xor
cld
bound
sub
inc
sub
push
shrl
cmp
movsb
xchg
jecxz
gs
inc
ljmp
repz
xor
js
pop
repnz
rolb
pushf
cwtl
pop
subl
mov
dec
fimuls
popa
xchg
mov
mov
pop
dec
mov
leave
xchg
sbb
or
outsb
mov
popa
orb
jle
mov
or
or
clc
dec
inc
ja
push
xchg
jae
xor
sbb
lret
test
cmp
inc
sar
or
sub
in
adc
imul
xchg
imul
rorl
add
xor
cli
int3
int3
pop
jo
in
push
mov
int
mov
push
push
negb
into
xchg
sbb
pop
mov
jmp
rolb
and
test
mov
sar
fbstp
js
ret
and
repnz
and
mov
push
add
add
add
pop
movsl
nop
jge
clc
cmp
push
pop
jne
das
data16
and
imulb
mov
pushf
js
pop
jns
jmp
gs
addr16
enter
cmp
mov
ds
jge
jb
inc
das
pop
in
ret
sbb
mov
sbb
push
rolb
adc
and
into
stos
push
push
cmp
jae
push
rol
sub
es
leave
mov
or
dec
push
and
and
out
mov
sahf
subb
pop
jb
inc
pop
mov
add
push
ret
or
mov
push
xor
ret
inc
fisubs
dec
ss
loope
or
mov
pop
mov
or
fwait
out
push
push
jo
imul
scas
pop
push
inc
sbb
push
add
in
add
stc
sbb
xor
inc
fidivs
mov
mov
xor
pop
fistpll
rcrl
in
push
cltd
jno
sub
cmp
pusha
sub
sarl
iret
sbb
add
jno
shrl
mov
pop
lcall
cmpsl
loop
xor
lret
and
test
jle
cmp
in
jg
addr16
mov
out
mov
mov
jne
gs
das
dec
xlat
lods
cmp
inc
and
int3
sub
mov
int
pop
adc
dec
jle
sub
pop
mov
push
js
inc
pop
in
mov
sbb
aad
adc
mov
insb
ja
aas
outsl
adc
jg
inc
push
or
mov
loopne
xchg
xchg
fcompl
paddd
sub
rcrl
dec
jp
stos
jbe
out
sbb
xlat
repnz
repnz
dec
cld
jge
out
pop
roll
sub
cld
mov
mov
mov
pop
loope
pop
jmp
ror
lcall
lods
in
jo
loop
mov
sbb
mov
cmpsb
pop
adc
jmp
sbb
adc
fidivrs
divb
insb
in
outsl
cwtl
push
or
pushf
mov
jbe
cmpsb
dec
mov
adc
xchg
adc
scas
fiaddl
icebp
aaa
int3
mov
jo
lcall
cli
mov
mov
lahf
inc
cmpsb
ss
mov
loop
ret
roll
cmp
sbb
aam
lcall
inc
jb
int
das
push
inc
push
jnp
roll
aas
add
xchg
xchg
ret
ja
pop
js
xchg
xor
imul
fidivrl
shl
dec
insb
es
jmp
lods
aas
shlb
jmp
iret
lret
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
jmp
sub
addr16
jnp
jne
jne
imull
cmpsb
jns
push
pop
jp
mov
jp
mov
popf
sbb
sbb
sbb
lcall
xchg
cmpsb
insb
add
dec
out
sub
mov
sub
je
cmp
jno
xchg
mov
jge
dec
adc
xchg
jmp
sub
jnp
frstor
xor
cltd
or
mov
or
push
in
or
sbb
cwtl
and
icebp
stos
mov
mov
outsl
sub
stos
jb
fisubl
pop
punpcklbw
adc
aas
xchg
mull
into
or
jg
cli
cmp
pop
mov
test
cmp
sub
lods
cmpsb
movsl
pop
stos
jns
scas
aam
push
imul
inc
mov
jnp
mov
scas
jne
jno
mov
fisubl
call
lea
xor
int3
out
aaa
test
sub
in
rorb
sbb
arpl
movsb
into
scas
repnz
xchg
repnz
arpl
pop
scas
and
mulps
sbb
mov
sbb
pop
dec
dec
push
mov
loopne
add
out
add
mov
inc
lds
and
scas
and
or
push
dec
fistpl
lods
fsubrl
jns
jp
xor
out
xor
mov
ret
lret
mov
or
sub
out
loopne
sub
mov
repnz
in
cmp
jbe
vcvtps2pd
mov
mov
mov
jns
addr16
mov
mov
dec
shll
pop
bts
mov
or
xor
test
andb
adc
mov
and
mov
test
mov
xor
bound
in
scas
add
mov
mov
faddp
in
pop
dec
jne
xchg
int
cmp
out
fwait
shrb
pop
inc
push
push
orb
lret
repnz
inc
movsl
sub
and
jbe
mov
loope
mov
adcl
notl
sbb
sbb
fdivrs
add
xchg
cmpsl
scas
inc
jb
push
pusha
or
mov
fldl
test
es
outsb
out
pop
mov
cmpsl
jle
or
sub
out
enter
es
or
movsl
jecxz
mov
pop
pop
data16
xchg
push
mov
xchg
push
push
testb
dec
jb
adc
cld
inc
lahf
mov
fidivs
test
pusha
lcall
aad
push
and
mov
lock
mov
imul
imul
mov
pop
adc
arpl
xchg
push
dec
ss
aam
fs
xorb
inc
stc
mov
sti
cmc
or
ss
popa
mov
subb
bound
icebp
aas
dec
cmpsl
rcrl
bound
dec
repnz
loop
xchg
cld
mov
fwait
ret
je
mov
sub
mov
mov
test
mov
mov
pop
cmp
cmpsl
jmp
rclb
jle
subb
lock
cmc
xchg
xchg
test
jno
popl
dec
jae
js
cmpsl
insb
mov
aas
push
push
rcrb
push
inc
add
push
xchg
lahf
or
paddd
cmp
cmp
rcrb
inc
inc
jno
push
ja
enter
out
dec
dec
fs
inc
pop
cli
pop
in
sarb
repnz
mov
repnz
aam
leave
roll
inc
std
idivb
std
cmp
cmp
sar
xchg
mov
popf
cmp
sbbl
inc
lea
mov
dec
inc
jg
bound
andb
ja
rcll
movsb
add
adc
movsl
cmp
push
pop
sbb
loop
xchg
andb
orps
mov
jmp
mov
nop
shll
mov
rcrb
xorb
cld
cmpsb
outsl
stos
xchg
jecxz
xchg
lret
sahf
adc
and
and
movsl
mov
lea
fadds
std
int
push
arpl
hlt
test
repz
sub
sbbl
loop
pusha
xchg
push
aad
xchg
fstpt
into
mov
jo
shlb
divl
xchg
jle
dec
jnp
pop
xchg
in
xchg
xchg
cmc
push
and
cmp
inc
sbbl
mov
cmc
iret
incb
dec
inc
lock
popl
jns
pop
jo
adc
or
adc
scas
or
sbb
clc
in
pop
fsubrl
call
nop
inc
into
scas
inc
push
xlat
sbb
xlat
and
rorb
cmpsl
pop
aad
pop
ret
shlb
dec
ljmp
arpl
cmpsl
inc
cmp
mov
jmp
in
mov
add
adc
xchg
lds
lock
rcr
xchg
dec
cmc
or
mov
in
mov
ficompl
test
js
sbb
in
jnp
in
mov
loope
cld
fldl2t
lea
or
xchg
mov
xlat
xchg
fwait
xchg
js
and
out
and
sbb
jns
adc
xchg
rclb
and
das
jecxz
mov
aam
sub
in
aad
xor
out
fistps
sub
aaa
sbb
pop
xchg
cwtl
fdivrs
mov
repnz
inc
into
int3
sahf
dec
dec
cmp
xchg
mov
ror
push
es
lret
xchg
pop
scas
adc
cmpsl
mov
ja
mov
aaa
lcall
sub
push
ret
lock
pop
xor
ljmp
aas
jo
push
into
mov
aad
pushf
and
sub
xchg
cmpb
push
movsb
xchg
call
aam
push
pop
sub
dec
push
arpl
inc
and
push
dec
push
imul
mov
dec
dec
push
and
pusha
pop
fisubs
loop
adcb
jg
jnp
dec
shll
int3
push
add
inc
push
or
insl
jno
inc
in
xor
into
mov
or
mov
sub
insl
fndisi(8087
mov
sbb
rolb
fildl
xchg
xor
sbb
lods
hlt
dec
push
add
or
sub
xchg
ss
push
movsl
movb
lret
mov
jle
aaa
push
sti
stos
sahf
leave
or
sbb
mov
sbb
cmp
cmp
push
cmc
jp
or
and
ja
or
jo
shl
lods
stos
es
fldenv
test
pop
aaa
cwtl
xor
push
imul
inc
sbb
sbb
dec
clc
push
xor
popf
test
les
cltd
repz
ljmp
addr16
add
fs
lock
sahf
insl
dec
ds
xchg
jmp
cmc
bound
adc
inc
push
movsb
pop
cmp
out
fistl
dec
sub
fs
bound
gs
inc
fld
gs
push
jmp
addl
adc
add
cmp
mov
icebp
test
mov
mov
pop
aam
mov
repnz
inc
fwait
mov
push
and
inc
mov
or
sub
insl
andl
outsb
enter
xor
cmpsb
and
jnp
scas
mov
sahf
ret
setp
stos
je
sti
imulb
cmp
mov
mov
fidivrl
sbb
dec
cwtl
or
add
cmp
add
xchg
push
add
push
sbb
xor
scas
aad
push
test
cmp
aam
popa
clc
mov
sbb
xchg
mov
push
mov
and
or
int
add
lock
aas
add
jp
xor
xlat
popa
sbb
je
jl
or
push
dec
mov
popa
inc
sub
aas
xchg
mov
dec
andb
inc
or
mov
add
subb
daa
iret
enter
call
out
and
mov
adc
and
push
cwtl
jmp
shrl
cmp
pop
movsl
mov
mov
or
mov
fcoms
dec
cmp
stc
xor
add
or
jle
xchg
movsb
fwait
add
pop
xchg
popa
hlt
stc
cmp
iret
xchg
inc
sub
sarb
lret
xchg
ret
ret
ds
and
xor
mov
push
mov
xlat
lock
lock
or
sahf
mov
cmp
ret
pop
flds
mov
lea
or
scas
incb
fnstenv
das
push
ret
dec
lea
iret
fisttpll
mov
mov
nop
dec
cmc
movsb
sbb
pop
or
out
adc
std
cmp
or
lret
lock
push
mov
in
xchg
clc
les
mov
stos
inc
xchg
dec
xor
push
mov
add
mov
stos
or
sbb
ja
mul
jp
dec
xor
fisttps
or
repnz
sbb
arpl
test
push
mov
pushf
pusha
push
popa
jg
movsb
dec
xchg
lret
mov
jne
mov
mov
rcrb
jb
stos
lds
cltd
ret
rorl
push
ret
jae
and
sbb
into
sbb
jg
out
fmuls
fs
movsl
and
lds
stc
sub
mov
or
rolb
push
test
out
xor
jmp
cmpxchg
sub
in
mov
add
dec
add
insl
adc
leave
mov
adc
jecxz
jno
inc
jl
lds
push
push
cltd
cld
sbb
mov
push
movsb
ja
mov
insl
push
das
sbb
sub
in
jl
and
mov
or
push
or
pop
add
addl
cmp
inc
lock
icebp
sub
por
cmp
dec
inc
or
and
push
lods
cmp
push
insl
es
popl
sbb
mov
push
out
dec
mov
into
loop
lret
and
stos
int3
mov
mov
jecxz
xchg
push
add
imul
insl
mov
dec
je
popf
add
sub
cmp
push
gs
push
push
loope
mov
sub
jb
jno
leave
cmpsb
sahf
ja
dec
ss
inc
sbb
in
pop
sarl
rorl
jmp
pop
lret
xor
push
js
sub
test
xor
repz
inc
sub
nop
xchg
push
lods
int3
xchg
mov
add
pop
ret
faddl
mov
cmpb
mov
sub
fldt
mov
jp
push
mov
out
mov
sub
adc
loope
cmpsl
pop
lds
sbbl
mov
cld
in
or
push
push
jo
xorb
hlt
jl
cs
jmp
dec
or
bound
lcall
xchg
rorb
push
adc
mov
int
mov
sti
mov
push
aas
hlt
decl
add
roll
push
int3
dec
sub
sarl
cli
imul
loopne
test
inc
push
and
dec
jns
out
adc
shll
pop
sub
adc
fadds
adc
mov
clc
push
mov
jmp
jge
inc
movsl
mov
cli
push
out
mov
pop
jg
lock
cmpsl
sub
xor
pop
xchg
add
pushl
imul
sbb
fldl
out
lret
xchg
call
imul
aam
outsl
loopne
cld
in
cmp
pop
jle
dec
jne
or
rolb
adc
scas
or
int3
jae
mov
ret
adc
xchg
das
xor
pushf
push
mov
and
out
loop
mov
sub
ljmp
mov
arpl
add
xor
pop
sbbb
inc
lret
scas
add
aaa
mov
xchg
pcmpeqd
sti
pop
lods
pop
cli
ret
or
add
loope
pushf
out
cmp
adc
mov
gs
hlt
cli
or
and
xor
enter
mov
push
pop
mov
lahf
ja
scas
jge
mov
mov
ljmp
inc
insb
or
sti
mov
jmp
jle
mov
push
ljmp
push
and
pop
iret
fmull
add
push
add
mov
cli
outsl
sbb
arpl
push
xor
andl
fs
jns
ffreep
or
mov
and
loopne
and
and
inc
bound
sub
pop
enter
ljmp
iret
cli
fsub
add
adc
xchg
mov
push
or
xchg
or
hlt
enter
lods
or
hlt
ja
mov
mov
dec
data16
fldz
mov
loope
stos
mov
push
xor
adc
xor
jmp
pop
pop
jecxz
mov
fnstcw
imul
es
mov
or
dec
xchg
hlt
adc
or
push
cmp
mov
rolb
cmp
mov
imul
imul
mov
stos
rorl
call
pushf
xchg
bound
sbb
icebp
test
add
pop
mov
sub
and
incb
pop
mov
pop
test
cli
and
and
inc
out
cwtl
push
jg
jnp
jae
lret
cmp
icebp
inc
inc
loopne
xor
cmp
sti
sti
pop
cmp
ret
std
cmp
add
hlt
stc
adc
mov
into
adc
dec
jmp
test
aaa
cmp
inc
fisttpl
imull
into
out
test
jo
pop
test
or
mov
mov
dec
sti
int3
cltd
xor
jb
jl
in
mov
xlat
in
cltd
iret
call
mov
pop
and
xor
cltd
shl
jnp
mov
mov
iret
jle
mov
loop
shr
mov
test
lds
iret
bound
and
add
pop
inc
fstps
bswap
mov
pop
dec
into
aas
jg
jmp
ss
adc
pop
lret
push
pop
mov
movsb
xor
pop
ficoms
adc
outsb
sbb
rcrb
mov
mov
ret
and
push
adc
mov
repz
orb
mov
insl
mov
xchg
scas
adcl
pop
jns
lcall
fstps
test
xchg
scas
cmp
jb
das
imul
pop
or
dec
cmpl
sbb
les
push
push
bound
scas
daa
repnz
jp
mov
cmpsl
popa
sahf
in
lds
dec
adc
dec
push
xlat
cltd
subl
insl
pop
jmp
push
jb
cmc
andl
test
mov
push
jno
cmp
mov
jmp
push
push
inc
mov
or
mov
mov
mov
aaa
xchg
int3
ficoml
or
sub
adc
sub
out
pop
xchg
mov
out
insl
outsl
aaa
adc
outsl
or
repz
outsl
mov
jae
pop
dec
push
pavgw
inc
inc
in
pop
lods
je
shlb
mov
xchg
fisubrs
lock
and
cltd
xor
sbb
sub
inc
push
lods
pop
lret
adc
add
scas
cwtl
pop
jnp
clc
sub
pusha
mov
mov
in
dec
mov
xchg
inc
ror
sti
ret
and
or
shll
adc
into
xor
in
fs
aaa
into
adc
call
int
dec
push
pop
push
jnp
sub
xchg
push
je
jo
sti
cmp
loop
jno
clc
lods
mov
or
xchg
xor
pop
sbb
mov
push
adc
dec
lods
pop
inc
outsl
push
mov
and
mov
sub
aaa
sub
jo
mov
lret
mov
repz
cli
inc
or
jo
mov
ret
ds
data16
loope
out
or
out
aam
testb
xor
mov
xor
add
mov
mov
dec
and
xor
jg
loopne
mov
je
je
add
mov
sub
sub
hlt
das
negb
mov
add
cmp
sbb
inc
mov
lock
add
out
mov
cmp
and
jbe
jnp
push
xor
gs
jae
mov
gs
push
or
popa
out
push
xchg
rorb
mov
stc
pop
mov
push
rcr
cmp
in
loope
scas
fisubrl
cmp
fwait
popf
lahf
gs
sbb
add
mov
jp
scas
jge
lea
cmp
cmpsl
fldt
cs
out
jne
push
mov
mov
sbb
cmc
inc
inc
cmp
test
iret
ss
dec
aas
outsb
adc
std
lods
xchg
cltd
mov
mov
shll
or
push
xor
repz
insl
mov
xor
inc
xor
mov
pusha
ret
in
xlat
vmovupd
xchg
sar
cli
jmp
and
fbld
mov
lret
aam
or
loopne
sbb
lock
sti
inc
and
xchg
repz
pop
pop
test
imull
mov
cmp
mov
sub
fcomps
ret
mov
scas
add
and
test
mov
pop
or
mov
dec
mov
andl
push
xor
mov
daa
or
call
push
xchg
jns
incl
inc
repnz
gs
mov
adc
enter
iret
fs
xor
aad
jb
jl
mov
xchg
icebp
mov
inc
push
pop
pushf
lahf
subl
xor
adc
scas
and
mov
push
test
enter
cmc
loop
out
cwtl
pop
pop
aaa
adc
jp
xchg
jnp
shrb
mov
push
bound
stos
pop
mov
dec
mov
adc
in
pop
cmpsl
arpl
cli
or
sbb
loope
or
shrl
push
jno
pop
push
xor
int
ret
cmp
push
fwait
push
xchg
lcall
ret
cltd
cmp
xchg
xchg
inc
test
push
xchg
mov
mov
xor
js
mov
repz
add
scas
jmp
or
scas
icebp
ret
adc
dec
aas
jne
jl
cmp
mov
jge
ret
les
rorb
push
inc
jae
lret
add
sub
pop
std
in
inc
lock
cld
mov
mov
test
and
xchg
cmp
push
sbb
call
test
jg
test
and
xchg
mov
pop
pusha
push
test
sbb
add
pop
fisttpll
sbb
sbb
std
jge
xchg
nop
inc
pop
in
daa
shlb
inc
mov
push
insl
addr16
jp
push
mov
subb
rorl
bound
test
enter
orb
fidivs
jae
scas
fwait
pop
std
lcall
push
out
movsb
add
adcb
xor
cmp
jecxz
test
cwtl
mov
inc
test
mov
jg
mov
xor
shll
fimull
push
mov
jbe
pop
push
aas
int3
push
je
pop
adc
ljmp
sub
xor
out
sbb
mov
adc
in
insb
and
outsl
cmpsl
enter
addr16
pop
andl
add
pop
mov
xor
loope
out
fmull
sarb
push
mov
lahf
scas
xor
xchg
sub
dec
and
adc
cmp
xor
sbb
xchg
push
fs
add
push
les
pop
fnstcw
cmp
jb
cmp
cmp
cli
or
iret
mov
daa
add
mov
and
nop
lock
adc
dec
cmp
push
popf
cmc
in
xchg
lds
pusha
into
repnz
and
xchg
out
jmp
xchg
jae
popa
repz
adc
xchg
adc
adc
mov
outsl
ret
aas
mov
out
pop
jne
cwtl
int3
xor
xchg
in
push
sbb
push
and
xor
movsb
add
and
sub
out
aam
aaa
stos
out
xchg
xor
fbstp
push
xor
sub
inc
sub
cs
cmp
imul
movsb
xchg
adc
pop
mov
dec
add
aaa
xchg
push
divb
insl
inc
inc
pop
into
mov
xor
cmp
pop
into
addr16
push
dec
shlb
shlb
add
dec
xor
rcrb
imul
dec
mov
sbb
repz
mov
hlt
add
jge
cmp
mov
and
loop
mov
jle
mov
adc
push
mov
jmp
mov
aaa
jle
sub
or
sarb
cld
push
mov
addr16
or
arpl
imul
sbb
and
bound
push
mov
mov
dec
mov
pop
pushf
mov
add
pop
dec
in
xlat
call
mov
cwtl
sbb
dec
lods
in
jl
adcb
and
ret
add
dec
dec
sbb
mov
sbb
sbb
adc
jmp
arpl
push
pop
sub
cmp
mov
es
cmpsl
push
xchg
aad
adc
imul
repnz
push
add
sti
mov
cltd
add
in
jns
movsb
and
jmp
pusha
test
aaa
push
in
cs
cmpsl
pop
repnz
jmp
icebp
pop
jge
imul
mov
pop
out
test
xchg
fdivrs
push
xchg
in
pop
jns
scas
xchg
adc
xlat
mov
xor
lret
jne,pn
dec
fstpl
dec
loopne
inc
or
popf
and
pusha
push
aas
xor
das
sub
shlb
mov
in
xrelease
ja
jbe
enter
sub
sahf
out
jo
pushf
je
mov
flds
cmp
testb
or
loop
stc
movsl
and
ds
jecxz
cmp
or
push
jnp
push
push
imul
sbb
xchg
adc
out
xchg
in
pop
std
add
jae
in
mov
repnz
mov
ss
sahf
pop
call
sub
cmp
bound
sbb
ss
and
call
es
pop
xchg
icebp
inc
mov
push
shrl
notl
cmp
pop
mov
sbb
fs
xor
jl
cmp
dec
aad
stos
cmp
repnz
repz
sub
ds
cmp
mov
jo
fs
mov
push
je
icebp
mov
pop
add
adc
xchg
pop
lds
mov
sub
out
iret
jmp
ret
adc
mov
adc
icebp
push
daa
js
dec
roll
mov
lods
pop
xor
adc
mov
je
testb
insl
and
insl
mov
push
cmc
mov
add
jl
shl
pop
scas
in
jp
push
push
cmpsb
or
or
mov
into
mov
adc
cmpsb
mov
cmp
push
jecxz
cmc
cmpsb
shrb
xor
call
xlat
push
rcll
adc
popa
movsl
test
push
mov
ja
sub
push
je
xchg
bound
js
sarb
dec
fistpll
jnp
dec
pop
sbb
pop
test
and
and
sahf
icebp
aad
test
xor
movsb
jge
dec
icebp
adc
jl
imul
sbb
adc
cmp
int3
out
dec
call
int
add
or
decl
insb
cmp
pop
mov
xor
test
imul
xor
repz
inc
test
xchg
push
mov
jl
negb
sarb
mov
ficoms
or
cltd
loopne
mov
cmpsb
mov
adc
shr
push
ret
sub
fnstcw
jmp
jns
adc
push
ficompl
in
jns
and
adc
dec
cmp
sub
ror
mov
sub
jne
lods
sbb
imul
mov
fcmovnbe
jnp
lods
not
insb
pop
stos
loop
shrl
fcmovu
cmp
sahf
sub
repnz
and
jl
mov
inc
ss
or
leave
mov
inc
outsb
xchg
cmp
popf
call
dec
adcl
xchg
dec
mov
jmp
mov
add
inc
mov
stc
jl
ss
xor
xor
aaa
sti
cmp
aad
test
mov
mov
nop
push
incb
adc
xor
cli
lock
mov
jne
iret
and
inc
rep
xor
sub
sarb
loop
xchg
sub
mov
add
sub
mov
xorl
inc
xchg
pop
movsb
stos
mov
mov
jo
in
cltd
pop
mov
push
xchg
push
xor
push
fadds
pushf
movsb
in
ss
leave
inc
inc
adc
std
add
cmc
loop
xchg
js
ds
iret
inc
ret
bound
adc
or
repnz
sahf
xchg
push
mov
lods
sti
ss
push
sti
mov
jnp
mov
ror
inc
mov
jne
cmp
loopne
nop
cmpsl
mulb
fdivl
xor
aas
cli
daa
dec
aad
push
mov
mov
jg
xchg
es
push
call
inc
pop
and
xchg
xchg
cmp
insl
mov
dec
sub
mov
fmuls
adc
cmp
fnstenv
test
lcall
mov
jb
dec
ret
add
mov
fwait
jbe
in
ror
or
lret
fsubs
pop
fistpll
idivb
pop
out
add
xor
clc
jno
sub
rclb
pop
addb
jecxz
addl
mov
sbb
shlb
stc
fcmovb
popf
cwtl
jge
shl
in
push
mov
iret
andb
sarl
dec
mov
dec
sbb
jmp
cwtl
adc
fs
fidivl
mov
mov
inc
imul
add
mov
int3
addb
add
mov
sub
cli
lods
xchg
filds
xlat
dec
jae
mov
inc
jnp
xchg
xor
jmp
cmp
pop
shl
cmp
mov
gs
xchg
mov
fwait
dec
in
ss
fwait
out
xor
out
xchg
push
movsl
movsl
je
clc
sub
jnp
xchg
mov
add
sbb
ds
pop
ret
into
add
sbb
aam
popa
and
cwtl
fcmovnbe
push
pop
xchg
lahf
cmc
repnz
jb
push
in
cmp
loopnew
std
xchg
add
clc
or
pop
pop
push
lods
cs
and
push
cmp
push
fiadds
and
dec
dec
in
mov
pop
int
or
or
cli
cmc
lret
sahf
pushf
mov
mov
orl
add
xor
movsb
testb
icebp
ds
lahf
or
xor
in
jmp
repnz
add
sub
adcb
icebp
andl
scas
outsl
jo
mov
cmp
ret
cmc
pop
dec
sub
jno
std
std
dec
loop
or
cmp
cmpsb
mov
and
xor
sbb
add
lods
adc
xchg
rorb
jne
ret
insl
and
pop
aam
push
jae
and
mov
or
add
mull
pop
fwait
int
movsb
fwait
mov
cltd
hlt
sbb
cld
cld
ljmp
ret
ret
ja
scas
mov
inc
in
enter
icebp
jmp
xor
pop
push
rcll
insl
in
cmp
dec
andb
xchg
fists
pop
repnz
rclb
lock
addr16
dec
and
fisubrs
jne
fldcw
xor
cmc
rorb
in
repz
std
imul
or
jge
push
mov
dec
ja
mov
clc
stos
pop
in
xlat
jl
iret
push
mov
test
enter
xchg
xor
sub
mov
xor
stos
mov
incl
sub
push
and
xlat
dec
popf
lock
enter
imul
and
sarb
shll
dec
sbb
jl
addl
xor
sti
pop
dec
xchg
leave
mov
add
pop
enter
cmpsl
iret
fistpl
xor
mov
out
or
clc
bound
fbld
inc
outsl
mov
test
pop
xor
mov
mov
mov
addl
pop
add
addr16
jp
jle
aaa
sub
or
cmp
push
shll
cmp
negl
pop
mov
xor
lcall
cmp
adc
std
cwtl
pusha
mov
mov
in
sub
hlt
repnz
mov
pusha
daa
sub
jb
and
jecxz
or
je
jbe
adc
add
sbb
pop
lds
sub
sahf
cltd
mov
xchg
mov
fsubrs
sbb
rolb
push
icebp
push
jge
mov
mov
mov
imul
aaa
xor
fdivrl
sbb
into
imul
jecxz
pushf
jp
and
cmp
andl
pusha
xchg
mov
dec
dec
inc
lret
mov
enter
pop
ret
mov
sub
push
inc
sbb
scas
mov
mov
mov
sti
fwait
push
mov
mov
and
stc
out
adc
mov
sbb
push
test
shrl
test
sbb
test
mul
or
pop
jecxz
rol
cmp
nop
addr16
lahf
xor
addr16
mov
mov
clc
insl
pop
dec
scas
sub
xchg
dec
xor
das
pop
jg
xchg
cmp
cmpsl
fs
pop
into
add
filds
cltd
out
shlb
cmpsl
cmp
pop
cmp
xchg
adc
cli
push
bound
push
mov
mov
adc
fimull
inc
dec
jo
orl
sbb
rolb
push
xchg
iret
arpl
jg
adc
mov
loop
add
out
iret
sub
jge
insl
or
gs
int
into
movntps
xlat
insb
mov
ss
adc
sub
sbb
aam
mov
pop
or
addl
and
xor
sub
ss
mov
sub
jmp
imul
xchg
pop
clc
daa
xchg
cmc
aas
aas
sub
stos
pop
dec
mul
jmp
mov
pop
stc
lods
jecxz
mov
cmpsl
sub
shll
jl
call
incb
push
adc
andb
fldt
aas
push
ret
or
scas
fidivrs
adc
xchg
scas
dec
xor
cmp
lods
lret
stc
mov
mov
pop
mov
dec
push
jmp
lret
into
stc
sub
stc
popf
jbe
ret
fxam
and
sbb
out
mov
adc
leave
test
jne
out
cld
idivl
xchg
out
and
pop
mov
imul
cli
fwait
xchg
cbtw
xchg
push
insb
jle
sbb
outsl
pop
xchg
mov
mov
inc
rclb
sub
lahf
movsl
push
out
scas
rorl
or
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
imul
scas
repnz
and
sub
mov
push
gs
dec
and
push
daa
icebp
cmp
fwait
xor
bound
push
pusha
insl
push
pop
cld
fbld
xchg
sub
mov
arpl
mov
pusha
adc
and
out
push
push
daa
jns
dec
pop
imul
js
push
clc
mov
and
add
fwait
loop
rcrb
sbb
subl
pop
fcoml
mov
sbb
or
cld
dec
movsl
sub
adc
ret
mov
daa
mov
sahf
mov
addl
or
ret
fwait
push
stc
outsb
xchg
ds
mov
mov
mov
sbb
out
faddl
inc
inc
cmp
mov
mov
push
jmp
lods
and
gs
inc
and
push
cltd
adc
jo
mov
sar
fisttpl
leave
or
stos
jae
cld
sub
bound
in
sub
pop
mov
cmp
inc
add
sbb
jns
call
jmp
xor
lock
jo
lcall
xor
repnz
adc
push
mov
jno
xchg
mov
push
jbe
lcall
inc
pop
test
or
add
xchg
mov
jge
repz
fidivrl
pop
cmp
mov
or
and
pop
jmp
lret
sbb
push
jmp
dec
sarb
insl
dec
lahf
scas
mov
or
inc
sbb
mov
cmpsl
repnz
testb
adcb
popa
jb
jb
int3
adcb
inc
mov
xor
cmp
and
pop
inc
pop
pop
sbb
lds
cmp
sbb
push
add
pop
mov
sub
lock
sbb
inc
xchg
jmp
dec
xchg
xor
jae
shl
and
push
push
push
out
cmp
fwait
adc
stos
add
outsl
int
mov
ficoml
ret
out
aad
lods
ficoms
cmpsb
mov
mov
mov
xor
ud1
cmp
ss
addl
js
lret
adc
adc
cmp
jnp
mov
orb
push
test
jmp
std
cmpsb
xchg
xchg
hlt
mov
fcompl
sbb
mov
adcl
sbb
cld
pop
mov
mov
out
lret
stos
stos
inc
jge
pop
adc
xor
sbb
push
lret
or
mov
sub
mov
comiss
sub
jmp
sbb
movsb
cmp
cmp
or
xchg
cmpsb
bound
ret
ret
leave
dec
fprem
xchg
mov
mov
push
and
in
xor
xchg
ss
xchg
jo
mov
clc
gs
je
pop
mov
mov
es
pop
inc
push
mov
jnp
and
sub
and
lds
rolb
je
lea
std
mov
pushf
add
outsb
cmpsb
call
imul
push
sub
lidtl
add
mov
icebp
std
xchg
es
push
lret
mov
imul
push
call
outsl
add
or
sahf
add
xchg
mov
mov
jns
sbb
aam
call
inc
adc
mov
filds
mov
ror
adc
movaps
cld
mov
ficomps
sbb
adc
push
ds
xchg
inc
in
das
nop
outsl
ds
xchg
xor
pop
imull
push
cmp
pop
int
sbb
ficomps
push
push
mov
xor
inc
mov
les
adc
push
fsubrl
outsb
int3
sbb
sbb
cmp
aam
xlat
mov
cld
insl
pop
shll
xlat
insl
and
jg
push
mov
enter
sub
rcrb
xchg
inc
inc
int3
inc
dec
faddl
or
mov
daa
mov
mov
mov
repz
lods
push
rorb
jle
push
test
rcr
sbb
or
and
dec
inc
and
and
cmp
je
arpl
dec
lahf
sub
jp
imul
add
inc
les
and
inc
imul
and
xchg
fisttpll
arpl
inc
popf
fwait
jg
adc
sahf
cmp
and
testb
xchg
mov
insl
icebp
inc
pop
push
pop
jge
les
popa
or
mov
negl
jecxz
aas
mov
decl
clc
add
mov
imul
test
cmp
sbb
xchg
push
dec
popf
jbe
push
cmp
sub
mov
mov
xor
xchg
sbb
lods
push
or
int3
lahf
ds
sub
std
add
scas
pop
and
push
dec
jge
cmp
out
out
test
lods
add
and
outsb
test
mov
xchg
test
sbbl
xor
daa
jecxz
sbb
imul
mov
mov
leave
mov
aas
dec
adc
xchg
nop
fidivrl
and
loope,pt
dec
jbe
out
xchg
test
mov
repnz
mov
in
mull
mov
out
pop
xor
stos
mov
inc
cmp
insl
jnp
and
or
ror
or
ds
aas
ljmp
in
xchg
fmuls
les
orb
fidivrs
rorl
orb
lcall
adcb
insb
fistl
jns
enter
dec
pop
pusha
sub
fmull
ficompl
pop
add
jp
fcoms
add
xor
out
xchg
in
lods
enter
push
push
fldl
and
xor
roll
and
mov
mov
incl
and
xlat
in
mov
jne
mov
xlat
jl
add
fsubl
and
sbb
lock
fildl
mov
push
cmp
adc
sub
and
or
js
mov
sub
push
inc
push
insl
xchg
lods
outsl
mov
out
mov
orb
in
stos
adc
ljmp
fwait
stos
push
cmp
out
aaa
int
pop
xor
push
lods
and
insl
scas
ficoml
sbb
rorl
pop
ss
sbb
rcrb
mov
roll
rclb
jo
cmp
sub
scas
pop
fwait
iret
testb
sub
push
jo
ret
jge
fistpl
or
mov
sysret
cwtl
dec
andl
jnp
sub
push
sbb
movsl
hlt
cmp
fwait
jmp
sbb
jge
mov
jno
and
mov
stc
cmp
repz
pop
insl
xchg
push
mov
into
or
fists
fistps
mov
rcrl
enter
rcrl
mov
lahf
mov
ljmp
hlt
mov
push
inc
popf
jnp
sub
inc
mov
and
fidivs
jmp
mov
xchg
int3
pop
mov
jp
mov
xchg
cli
cmpsl
mov
cmp
notl
pop
testb
js
scas
xchg
cltd
imul
mov
rol
les
add
das
adc
stc
fisttpl
ret
or
mov
jp
stc
shrl
lods
in
arpl
xchg
push
sbb
data16
mov
cmpb
lret
rcrb
xor
insl
dec
adc
pop
lret
or
fsts
adcl
sub
fistl
dec
cmp
push
daa
sub
leave
rol
lret
add
outsb
and
ret
lods
icebp
add
pop
icebp
sbb
mov
adc
mov
cmp
in
xor
mov
scas
mov
icebp
mull
cmp
test
fs
and
pop
mov
fsts
fucomp
clc
cmp
push
pop
in
incb
xor
in
ret
sbb
ffreep
xchg
mov
in
es
icebp
push
xchg
adc
cmp
into
loop
xor
push
pushf
cmp
jo
dec
adc
imul
mov
aam
mull
ja
pop
xchg
divl
pop
mov
movsl
daa
sbb
fimuls
add
faddl
sahf
inc
xchg
lea
mov
cmp
mov
or
shl
ret
jmp
loope
mov
mov
call
addr16
sarb
out
xor
cmp
inc
mov
mov
and
out
shrb
mov
xchg
cmp
and
mov
xlat
mov
in
data16
ret
stos
aas
adcl
lods
jmp
popf
out
das
mov
pop
xchg
int
les
jge
add
incb
movsb
sbb
imul
lock
mov
ja
int3
push
xchg
out
out
outsl
dec
push
adcl
mov
xchg
pop
popa
mov
push
sti
fstl
dec
mov
push
std
pop
and
in
mov
cmp
inc
mov
xor
push
popa
add
mov
push
adc
xor
mov
sbb
adc
sub
jecxz
sbb
scas
iret
xorb
push
sub
loope
sub
in
mov
les
out
jmp
mov
shll
rolb
movsl
daa
imul
repnz
je
testl
cmp
subb
push
imull
jge
lods
sbb
and
inc
pop
xchg
push
mov
and
in
outsb
call
jp
add
jae
jb
out
mov
pop
cwtl
mov
subb
or
out
dec
or
insl
outsb
jae
push
cmc
jecxz
adc
notl
push
mov
lcall
dec
jecxz
dec
push
dec
and
mov
fucomp
fdivrs
mov
rorl
sbb
and
mov
pusha
push
jb
cli
mov
nop
ljmp
mov
scas
mov
sub
shll
out
sbb
imul
dec
iret
inc
and
shlb
inc
incl
fs
out
cmp
call
fiadds
pusha
gs
and
dec
scas
push
sbb
pop
mov
pop
cmp
adc
xor
leave
pop
repnz
in
dec
inc
and
mov
lock
jo
arpl
ljmp
inc
sbb
popa
ret
mov
icebp
or
and
enter
cwtl
lea
lea
push
dec
lods
mov
cmp
out
icebp
fcmovnu
or
dec
hlt
lods
add
jo
adc
loope
repnz
pop
cmc
scas
lcall
lcall
cmpsb
dec
adc
js
sub
je
xorl
loope
cmp
std
imul
scas
out
push
loop
jbe
jmp
adc
addb
negl
ret
push
jle
adc
xor
jmp
imul
mov
shll
outsb
sub
pop
cmc
lods
and
shll
jge
mov
das
cmp
outsb
cld
test
and
pop
push
es
std
push
and
mov
ret
mov
repz
pop
push
cli
stos
je
mov
aaa
xchg
sub
aaa
repz
dec
stos
push
pop
dec
cmp
lods
or
mov
ds
outsl
pop
xchg
cmp
cli
sbb
fisttpll
and
dec
fnstsw
xchg
outsl
cs
add
test
jne,pt
mov
push
in
shlb
mov
popa
inc
push
test
sar
lods
cmp
or
inc
cmp
ret
mov
cmpsb
mov
cmp
fwait
mov
jo
xor
jb
sub
cmc
inc
call
dec
inc
js
mov
lock
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
add
add
hlt
xlat
dec
add
add
add
add
cmp
dec
add
adc
add
hlt
xlat
dec
add
add
bound
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pusha
dec
add
xor
dec
add
add
inc
jns
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
dec
stos
xor
aad
add
adc
add
lret
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
