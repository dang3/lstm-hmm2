push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
inc
mov
jo
jo
in
jo
rcl
aad
ror
rol
pop
push
add
je
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
movsb
ds
rolb
test
jb
movsb
lret
mov
pop
xchg
cmp
sub
mov
sub
inc
adc
cmp
dec
in
and
mov
xchg
dec
popf
add
gs
xor
mov
movsb
inc
inc
push
mov
arpl
in
int3
jp
mov
imul
sbb
dec
dec
or
aad
mov
mov
add
xor
sub
arpl
jecxz
decb
cmpsb
les
adc
xchg
xchg
mov
mov
pop
aam
inc
push
dec
ljmp
cmp
loop
xchg
das
pop
sub
rorl
mov
das
cs
pop
xor
in
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
jg
jo
jg
jo
std
nop
jl
lcall
dec
inc
cmc
rcl
rorb
add
or
lea
xor
inc
xor
insl
lea
xor
stc
and
clc
fwait
and
cmp
ds
hlt
je
fwait
loopne
roll
stos
jnp
fcmovbe
inc
and
bnd
dec
out
add
popa
into
xor
adc
adc
pop
mov
outsb
sbb
mov
sbb
std
mov
xchg
aas
std
cld
cmp
sbb
fbstp
mov
mov
sub
fdivrp
call
mov
jae
rcrb
cmp
pop
or
out
scas
pop
dec
mov
into
cwtl
sbb
push
adc
decl
add
sbb
cmpsb
addr16
push
repz
jg
cwtl
aas
mov
xchg
ret
mov
sub
dec
inc
mov
cmp
push
test
pop
popf
adc
cmp
push
icebp
nop
rclb
rolb
push
jp
adcb
pusha
out
and
sub
lea
mov
out
or
cmp
scas
push
fistpl
fcmovnu
jo
sarl
mov
push
push
and
adc
and
lods
pop
mov
push
fidivl
icebp
imul
mov
push
stos
push
and
add
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
mov
jo
in
jo
mov
fstpl
popf
ja
orl
cld
adc
sub
mov
ljmp
xchg
jo
dec
minps
or
xchg
sbb
pushf
out
adc
mulb
shll
xor
mov
loope
jg
mov
jns
mov
jecxz
jmp
cmp
push
inc
orps
adc
test
adc
xlat
stos
add
mov
loop
push
pop
stos
sub
xor
adc
mov
mov
mov
out
jp
cmpsl
aam
out
es
adc
xlat
loop
in
dec
xchg
cmp
cmc
and
sub
rcrl
inc
or
test
mov
imul
fs
popf
fdiv
scas
dec
test
pusha
mov
mov
into
repz
add
imul
lret
cmpsl
jl
lods
xchg
dec
xchg
iret
sbb
inc
scas
ljmp
fsubr
adc
jmp
pop
addr16
mov
add
xchg
std
adc
mull
es
sbb
mov
mov
add
hlt
mov
sbb
mov
loope
xchg
dec
ljmp
mov
popa
rolb
fs
mov
lcall
bound
shlb
xor
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
push
or
in
jo
rcl
out
out
pop
mov
cmp
xlat
jbe
xchg
es
mov
inc
cwtl
stos
sub
sub
sub
mov
pop
cmp
adc
mov
sub
inc
loopne
mov
cmc
dec
xor
mov
xor
aam
xchg
adcl
push
mov
lods
out
hlt
movsb
adc
je
cmp
mov
cltd
push
push
pop
test
sbb
fadd
add
loopne
test
xrelease
push
inc
mov
hlt
lea
imul
jbe
outsb
fisubrl
inc
adc
xor
cli
pop
push
das
int
das
fdivrs
imul
adc
shlb
jecxz
shl
xor
fsub
or
xor
inc
or
shlb
outsb
pusha
or
mov
xlat
push
or
jne
xlat
dec
test
imul
xor
sbb
and
mov
mov
pop
jo
jle
add
in
mov
lea
notb
movsb
sahf
scas
push
mov
mov
mov
test
test
nop
sbb
or
repnz
mov
xor
mov
sbb
xlat
mov
pmulhuw
push
sbb
cmp
sbb
mov
cwtl
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
daa
loope
pop
movsb
jnp
jo
jge
jo
xchg
xchg
push
arpl
lods
bound
push
and
aaa
stos
xchg
inc
iret
in
sbb
out
imul
in
mov
adcb
pop
cmp
pusha
jno
xor
jp
pop
cli
mov
imul
repnz
pop
in
adc
add
inc
xchg
sbb
cli
sti
dec
dec
ret
hlt
imul
push
scas
aam
and
popa
sub
test
loopne
mov
and
dec
xor
or
mov
cmp
push
lods
jbe
out
pop
mov
int
outsl
cmp
es
or
insl
push
jmp
add
dec
jbe
addr16
pop
push
adc
cmpsl
xor
dec
pop
dec
dec
pop
ret
clc
cmpsl
out
add
sub
mov
cmp
mov
dec
sarb
add
jne
push
int3
notb
inc
push
dec
test
push
jbe
mov
push
cmp
lahf
lods
movsb
jo
jns
dec
mov
push
and
in
sbb
loope
cld
pop
cmp
mov
xor
xchg
xor
movsb
in
enter
ds
push
jbe
dec
lret
ljmp
mov
xchg
dec
push
into
mov
push
xchg
in
mov
dec
ljmp
lahf
mulb
aad
clc
jne
pop
es
mov
push
mov
outsl
test
mov
in
cmpsb
ljmp
pop
fcoms
andl
add
loope
lret
push
rcrb
roll
movsl
pop
dec
adc
pop
dec
les
push
cltd
insl
ret
push
cmp
imul
pop
clc
mov
or
xchg
in
fsts
dec
filds
xchg
push
sub
bound
test
ret
loopne
sbb
push
xchg
cmp
adc
and
icebp
popf
mov
fs
mov
ss
sbb
add
rcl
or
or
inc
xor
add
dec
lds
aas
repz
icebp
cmc
mov
pop
and
pop
movb
rcl
push
push
popa
push
or
pop
pop
jne
push
popf
and
ja
repz
inc
aad
leave
fistpll
or
or
ss
mov
pop
out
ja
popa
fnstcw
insb
insl
stc
imul
out
gs
fistpll
test
mov
push
cwtl
mov
addb
cmp
movsb
lret
je
or
outsl
xchg
lret
je
imul
pop
jl
lcall
dec
dec
pushf
push
insb
sahf
jge
inc
lock
sbb
pop
cs
out
dec
xlat
or
push
xor
ret
dec
jnp
mov
je
or
inc
hlt
dec
add
in
jp
gs
test
push
and
insl
mull
add
popf
leave
lret
mov
jmp
jno
mov
cld
mov
in
mov
out
pop
movsl
ror
mov
mov
add
test
fdivl
fwait
test
jne
mov
je
es
lods
icebp
mov
aaa
push
out
fisttps
fcompl
push
pusha
out
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
mov
decb
jo
xchg
jge
jo
mov
cld
pushf
aam
inc
incl
jge
pop
mov
stc
data16
jle
xor
pop
or
pop
sahf
mov
jbe
mov
jnp
jbe
sub
pop
mov
cmp
insb
outsb
mov
icebp
stos
ds
ret
lods
test
mov
and
arpl
outsl
and
out
cmp
adc
bound
ss
cld
mov
fldenv
add
scas
xor
or
and
push
ja
dec
xbegin
inc
sub
fcmovnbe
ljmp
xchg
mov
fmul
mov
fisubl
je
test
arpl
inc
or
in
je
test
rclb
xlat
in
cld
inc
or
push
test
adc
sub
cmp
test
adc
inc
pop
shlb
pop
inc
push
push
das
xchg
and
fldl
sti
or
push
inc
int3
xchg
adcl
adcb
mov
out
lcall
cli
inc
std
sti
stos
subl
into
mov
add
sbb
xchg
nop
lret
ljmp
addl
sub
aam
adc
xchg
mov
mov
leave
leave
jne
pop
shll
inc
cmp
outsb
dec
iret
or
test
es
leave
int
pop
cmp
mov
mov
mov
mov
add
test
or
xchg
daa
mov
jmp
or
dec
daa
mov
cld
sarb
loope
mov
push
fistpll
pop
dec
mov
xchg
jge
mov
xor
push
pause
in
push
js
mov
jecxz
xchg
es
and
push
in
imul
insb
mull
cmp
lret
lea
dec
sahf
lds
cmc
push
adc
xor
push
pop
aas
cmp
add
into
xchg
or
mov
cld
xlat
sbb
or
call
xchg
mov
jg
mov
mov
pop
cmp
test
or
loopne
xchg
pop
bound
cmp
xchg
cwtl
sub
sti
push
in
repnz
push
into
mov
adc
pop
mov
out
mov
mov
jg
inc
adc
xchg
or
inc
fxtract
and
dec
fildll
adc
dec
mov
cmp
fs
outsb
inc
orb
sub
push
xchg
inc
adc
jle
loop
inc
xor
adc
inc
jle
or
mov
lods
push
and
jo
adc
repnz
mov
lea
decb
sti
mov
icebp
add
call
das
sti
leave
add
adc
mov
adc
add
cmpb
lea
iret
ds
enter
cmpsl
test
repz
insl
mov
xlat
movl
and
xchg
add
cmc
fdivl
je
data16
ljmp
pop
inc
mov
cmp
lahf
and
jnp
sbb
sarl
enter
popa
push
ficoms
dec
mov
xchg
and
mov
inc
dec
jbe
inc
movsb
xor
jmp
xchg
dec
mov
fisttpll
setns
and
sub
and
repnz
imul
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
in
dec
inc
push
add
jo
jge
jo
popf
jg
add
test
sub
imul
arpl
push
jmp
pop
rcrb
ss
mov
iret
movsl
xchg
aas
outsb
cmp
outsb
sub
xlat
cmp
int
lahf
jecxz
sbb
nop
push
stos
mov
js
mov
xor
ret
out
imul
mov
dec
xor
js
xor
jnp
jle
arpl
ljmp
jbe
push
jp
xor
div
dec
jns
cltd
push
call
lods
xchg
testb
data16
add
mov
adc
push
out
mov
les
pop
jne
mov
aad
and
into
add
cmp
ret
stc
xchg
test
mov
popf
leave
adc
cltd
adc
jns
and
scas
pusha
leave
out
cmp
push
ret
fldl
aad
rclb
xchg
or
push
fisubs
add
mov
pop
inc
mov
and
hlt
js
aaa
ss
popa
inc
and
xchg
cwtl
aas
cmp
adc
sub
inc
sub
es
test
push
repnz
fistpll
addl
shl
es
adc
mov
sub
jp
pop
loop
sbb
cmp
inc
and
out
pop
jp
jo
fisubl
jno
or
xchg
push
jmp
push
inc
int3
addb
push
idivb
xchg
or
sbb
cmp
aaa
rclb
insl
daa
cmpsl
adc
adc
rorl
cmp
js
pusha
flds
jmp
and
cmp
push
lret
testl
inc
push
dec
lock
dec
pop
push
or
jns
movsb
or
and
pop
lds
jg
push
jmp
addr16
push
pushf
xor
loop
mov
mov
in
xor
dec
je
shll
lock
ljmp
inc
je
test
das
sbb
and
int3
add
stos
test
inc
lock
jns
ret
rclb
jbe
pop
push
xchg
and
stc
jge
add
or
xchg
add
cmp
sub
and
pop
cmp
fwait
enter
daa
push
mov
fsub
ror
dec
jg
lcall
sub
mov
jmp
cmpsb
and
pop
test
jecxz
sbb
std
pop
jbe
jecxz
ds
sti
cwtl
mov
pop
mov
lret
sbb
shrl
cwtl
das
in
in
xor
ja
scas
xchg
adc
cmp
mov
rol
and
das
test
jb
push
adc
adc
mov
push
xchg
icebp
cmp
pop
mov
fsts
addr16
rorb
pop
sar
adc
pushf
cmp
out
adcl
mov
fmuls
sub
cmp
add
cmp
mov
testb
test
jecxz
mov
enter
mov
idivl
push
pop
inc
scas
dec
xlat
mov
xchg
lds
fbld
repz
in
dec
stos
lea
xchg
mov
add
inc
jo
lahf
cltd
movsl
jae
or
leave
mov
out
cmp
popa
pop
pusha
jle
or
mov
add
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
mov
add
xchg
jge
jo
cmp
jns
mov
jno
dec
jecxz
add
out
and
cmpb
push
inc
popf
decb
in
dec
xor
pop
je
xor
or
sub
dec
daa
test
popa
lods
cld
xchg
pop
fdivr
div
add
pusha
into
add
stos
xor
jp
adc
and
pop
adc
cmp
imul
mov
test
loop
ret
mov
sub
mov
repnz
in
pop
mov
insl
mov
outsl
arpl
stc
decb
leave
ds
data16
mov
or
pop
mov
xor
pop
dec
sbb
shll
insl
adc
in
adcl
arpl
push
arpl
in
add
inc
jbe
inc
cld
mov
sub
xchg
push
jge
push
xchg
pop
arpl
popa
nop
mov
outsb
out
int
jne
inc
pop
outsl
insb
mov
idivb
xchg
mov
gs
sub
add
fbstp
mov
out
scas
inc
dec
mov
pop
mov
jno
in
mov
or
pmaxub
cmp
mov
repz
out
arpl
add
mov
push
sbb
sub
mov
testb
push
loopne
adc
js
je
dec
stos
inc
or
mov
loopne
add
lods
xor
sub
insb
jecxz
shlb
dec
inc
inc
pop
mov
lock
arpl
lods
jb
xor
dec
mov
lea
inc
push
xor
pop
pop
pop
and
jne
insl
mov
mov
inc
aas
ds
sub
mov
into
inc
pop
cmp
mov
sbb
or
rcrb
jecxz
pop
pop
adc
or
inc
xchg
test
sub
aaa
mov
mov
push
adc
es
scas
sub
and
mov
js
data16
sar
orl
sbb
and
int
sub
sbbb
sar
cmpsb
fistl
or
add
pop
mov
sbb
dec
aaa
nop
xchg
and
repnz
shrb
or
pusha
push
imul
sbb
mov
nop
js
mov
cmpsb
divb
xchg
bound
cmp
add
pop
jbe
leave
mov
jmp
lock
jnp
dec
xor
push
jge
test
dec
or
outsb
push
or
out
xchg
xor
imul
lret
mov
roll
lea
mov
aaa
xchg
arpl
cltd
add
add
lods
leave
sahf
pushf
cmc
dec
add
and
push
and
adc
cmp
je
add
call
sbb
out
ud0
scas
inc
mov
call
add
jmp
lods
mov
enter
adc
in
xchg
sahf
cmp
or
adc
inc
adc
faddl
mov
icebp
js
ds
inc
in
sub
or
xchg
and
lret
and
bound
mov
icebp
add
jp
fwait
or
lret
mov
into
repz
push
push
lret
mov
cmp
sub
cmp
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
scas
incl
or
jo
jge
jo
and
mov
nop
sub
cwtl
or
in
and
subl
rol
jmp
push
ds
mov
in
jns
cmc
and
cmp
movsb
mov
cli
inc
ljmp
xchg
fidivrl
adcl
mov
lcall
pop
pop
dec
out
adc
or
pusha
in
sub
idivl
ja
xor
leave
outsl
and
mov
mov
fwait
xchg
sbbb
xchg
cmp
pop
add
insb
pushf
cmpsl
sbb
addl
out
pop
dec
cld
pop
cli
or
sbb
lahf
sub
adc
lret
mov
pushf
dec
sub
mov
inc
jnp
jns
js
mov
iret
push
xor
ja
mov
out
and
cmpsb
xor
inc
sub
ret
pop
in
imul
lods
inc
clc
dec
pop
scas
jg
out
inc
dec
jnp
push
mov
bound
movsl
ret
fs
pusha
xor
inc
test
icebp
lcall
add
sub
sbb
fimuls
cwtl
dec
xchg
fstps
dec
inc
cmp
adc
xor
js
dec
movups
dec
dec
and
and
bound
fildl
in
test
loop
xlat
cwtl
fwait
and
inc
ret
pop
or
and
pushf
mov
test
je
jno
xlat
push
into
pop
popf
pusha
or
push
push
mov
ret
je
mov
dec
sbb
push
mov
push
and
lea
jbe
call
xor
lods
mov
loop
mov
mov
movsl
arpl
aad
sub
fisttpl
and
pop
hlt
popf
pop
and
mov
inc
xor
cli
pushf
dec
and
sbb
imul
lcall
stos
sub
loop
cmp
dec
jmp
js
and
out
in
les
adc
mov
dec
mov
hlt
pop
mov
mov
mov
sbbl
lods
cmp
fnstcw
nop
add
jge
ficoml
gs
cmpsb
rcrl
sub
rcr
sbb
test
gs
scas
imul
testb
xchg
mov
insl
cmp
icebp
nop
imul
xchg
lcall
xchg
push
mov
cmp
jecxz
sub
sub
or
icebp
sbbl
mov
test
xchg
xor
sahf
inc
mov
mov
pop
push
mov
fldenv
mov
test
mov
int
lcall
das
stos
inc
pop
ja
fsts
jne
jecxz
gs
add
jae
insb
pushf
xchg
aaa
in
in
or
mov
sbb
fwait
roll
testl
out
or
pop
pop
test
push
mov
jle
add
pop
push
or
lock
jne
push
je
or
sub
ja
leave
xor
in
popa
sbb
adc
or
dec
mov
sub
cli
pushf
sub
xor
out
es
movntps
sub
je
push
movsl
sbb
dec
push
int
mov
jge
jmp
cs
loopne
in
jnp
jmp
rorb
jge
or
xchg
jge
jo
stos
xchg
add
add
pop
jg
jmp
cmp
outsl
jg
loope
testl
or
xorb
pop
mov
stos
pop
jne
mov
adc
and
adc
mov
xor
sti
out
add
xchg
xchg
adc
fidivrl
or
popa
clc
aaa
jg
repnz
pop
cli
repz
iret
xor
in
xor
popf
mov
out
sti
fsubrl
hlt
sti
mov
sbb
dec
fidivrs
push
mov
cmp
xor
and
and
int
cmp
rcl
lea
jb
sub
les
gs
inc
out
or
aas
sub
mov
xchg
pop
arpl
mov
test
sar
push
sub
xor
lret
fiaddl
pop
sbb
repnz
xor
movsb
test
les
call
gs
sbb
pushf
adc
daa
xchg
sub
push
subl
jbe
sbb
shll
ds
cmp
pop
mov
sub
frstor
ja
das
jge
js
repz
roll
xor
xchg
jb
adc
mov
insb
push
add
pop
xchg
push
cmp
das
les
add
ret
ret
clc
push
stos
mov
pusha
add
lock
mov
sbb
dec
inc
enter
pushf
idivb
mov
push
push
je
xchg
adc
rcl
ja
sub
sub
adc
ret
movsb
pop
repz
dec
lock
jae
and
dec
push
mov
mov
nop
adc
pop
jmp
stos
sti
pop
fs
ret
dec
and
cli
sbb
fcoml
pop
mov
or
or
scas
out
mov
enter
aas
and
mov
mov
add
repnz
out
fwait
and
xor
loop
jp
aas
lods
in
inc
imul
mov
roll
movsl
lcall
pop
jl
cmc
cltd
push
xchg
les
cmp
mov
jno
scas
adc
inc
dec
xor
pop
test
lock
lods
mov
add
adc
loop
push
imul
xchg
cmp
aad
push
pop
push
xchg
mov
cmp
or
dec
out
loope
inc
mov
push
in
dec
push
cmp
fdivs
jo
pop
cltd
lea
test
shlb
adc
push
push
inc
jp
insl
push
adc
push
jbe
fwait
mov
push
shrb
sbb
mov
sbb
loopne
cs
fsubrl
je
push
movsl
sub
jl
jge
outsb
in
in
daa
fistps
or
xor
sbb
add
mov
xchg
stos
jno
fdivrp
mov
lret
int
in
imul
add
add
rcrb
mov
sbb
push
ja
sub
sub
push
mov
jb
repnz
loopne
cmp
jg
xor
lods
cmp
jns
push
push
out
xchg
shrl
daa
mov
push
js
xor
fcomps
lcall
les
jp
int3
in
jne
push
inc
incb
lcall
enter
mov
add
data16
in
int3
jne
popa
jno
imul
mov
adc
jo
clc
stc
aas
in
sub
push
lcall
pop
mov
sub
jg
popa
int3
sbb
or
popf
xor
xchg
inc
sbb
sbb
cmp
es
inc
les
mov
ds
int3
popf
out
test
mov
push
push
popl
test
icebp
idiv
add
dec
jge
adc
mov
jne
data16
pop
dec
push
push
paddsb
mov
test
pushf
test
xchg
fisttps
xor
ret
js
push
pop
mov
cmp
decb
cmp
jg
sbb
xor
jmp
mov
sub
sti
in
push
sub
pusha
inc
sbb
jns
lods
test
dec
push
or
shrl
or
ds
mov
jp
rcrl
inc
adc
pusha
in
stc
test
js
shl
mov
faddl
pop
mov
shrb
or
scas
bound
or
repz
dec
xchg
push
xor
sbb
mov
dec
fmuls
xlat
mov
adc
mov
adcb
xor
and
mov
dec
nop
push
xor
imul
and
sub
dec
in
lea
adc
std
sub
movsl
aam
subb
pop
xchg
push
mov
add
cmpsb
xlat
push
fwait
iret
ds
icebp
ljmp
lock
push
and
jle
add
pop
push
pop
mov
push
push
mov
cli
das
ret
ret
push
repnz
call
sub
scas
sbb
out
cmc
dec
sti
stos
mov
mov
into
mov
cmp
xchg
mov
jae
cmp
imul
xor
mov
pusha
sub
lock
mov
or
xchg
push
in
xchg
mov
jle
daa
mov
cmp
xchg
cld
push
sub
cmp
sar
and
sbb
mov
pop
push
and
xor
dec
or
lcall
push
mov
popf
mov
call
shrl
in
out
inc
mov
mov
or
insb
and
cmp
pop
popa
insb
repz
and
pop
mov
mov
cmp
lods
out
sti
rorb
sbb
loopne
xchg
addr16
sub
call
adc
push
jb
sbb
stc
mov
into
sub
mov
xor
fnstsw
inc
divb
test
mov
inc
rcrb
pop
cs
into
lods
sub
arpl
adc
ret
iret
imul
jae
lret
test
cmp
mov
jae
pop
or
dec
cwtl
push
push
cs
push
sbb
cmc
rcrb
mov
jne
adc
lods
int
fisttpl
stos
mov
mov
iret
push
dec
mov
sub
int3
cmp
and
dec
pop
xchg
mov
add
dec
cmp
or
xchg
jae
sub
pop
mov
pop
les
lea
lret
daa
and
aaa
xchg
sbb
sub
incl
or
pop
lea
inc
sbb
jl
sbb
mov
sub
dec
mov
mov
jne
imul
mov
jmp
jle
mov
xchg
icebp
repz
je
leave
push
adc
xchg
jge
jo
mov
sarl
popa
add
push
inc
ds
mov
sub
in
jl
xchg
daa
cltd
outsl
jp
stc
divl
int3
jecxz
adc
mov
jbe
adc
arpl
repz
cmp
jnp
pop
test
test
scas
cmpsb
xchg
push
adc
mov
cli
add
inc
dec
out
stos
sub
push
adc
test
js
aaa
xchg
fldt
cmpsl
rcl
lcall
pop
int3
icebp
daa
dec
push
cmp
sti
cli
push
into
aas
cmc
dec
sub
out
bnd
into
or
fwait
addb
dec
jne
aam
gs
insl
jle
rclb
or
scas
lret
cmpl
xor
pop
jbe
in
jbe
xor
data16
xor
addb
sub
jo
sbb
movsb
jb
lods
mov
mov
aaa
fcmovnb
movsb
out
or
mulb
sub
jp
sbb
xor
call
into
xor
bound
repnz
sahf
push
mov
sbb
mov
nop
lods
xor
aam
daa
jb
test
mov
testl
adc
jmp
scas
lcall
mov
dec
loopne
inc
push
mov
gs
xor
mov
cmp
js
mov
ret
jge
cmp
leave
jge
jp
das
push
insl
ret
cli
push
add
add
cmp
stos
xor
lret
repnz
and
add
jge
lret
sub
push
jg
fsubl
andb
pop
aad
xchg
mov
outsl
dec
xchg
jb
test
data16
sbb
jne
int3
lds
mov
das
inc
sbb
fnsave
xchg
sti
and
xor
call
das
push
lcall
add
cmpsb
sbb
stc
sti
xchg
mov
idivl
pinsrw
sti
lcall
pop
les
mov
jmp
rcl
jb
adc
test
push
xor
lds
in
and
xchg
push
es
out
dec
out
int3
hlt
divl
rclb
mov
mov
jns
inc
jo
jns
and
iret
cmc
xlat
les
cmp
fstl
cmpsb
sbb
cmp
ret
leave
lahf
out
shl
sub
sbb
xchg
mov
nop
push
xor
xor
add
push
mov
cli
rclb
fdivrs
pop
stos
cmpsb
sbb
and
stc
bound
mov
jp
cmp
sti
xchg
mov
xor
xchg
cwtl
imul
cmpsb
lds
faddp
out
ja
or
popf
ds
insb
fidivl
add
and
pop
cmpsl
addr16
jo
xchg
lcall
or
ja
jno
cmp
clc
nop
mov
mov
loope
movsl
enter
mov
aas
pop
test
repz
push
invd
jge
out
lahf
pop
into
mov
adc
jnp
push
fwait
jnp
out
mov
jb
negb
pop
xchg
pop
pop
xchg
cmp
pop
inc
and
xlat
add
cmp
daa
aam
lret
inc
inc
xchg
lret
in
sub
lahf
mov
xchg
pop
xor
push
xor
test
dec
movsl
movsl
outsl
data16
enter
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
ds
push
jo
sbb
jo
adc
pop
pop
cmpl
xchg
iret
push
pop
push
dec
jo
dec
mov
mov
ja
idiv
ss
inc
pop
and
cmp
or
jp
adc
bound
inc
mov
jnp
dec
scas
pop
push
icebp
movsb
loopne
scas
and
movsl
and
dec
test
dec
loope
and
xor
mov
sub
pusha
ret
fs
and
or
jae
mov
frstor
pusha
ljmp
xchg
mov
xchg
add
nop
add
inc
cmp
loopne
in
add
arpl
lret
inc
insl
pop
cs
nop
push
aaa
out
out
mov
push
rcrl
mov
mov
pop
jge
or
cmp
and
rcr
mov
mov
imul
xor
mov
daa
sbb
sahf
in
push
popl
daa
push
inc
jp
jmp
fstl
iret
dec
dec
popf
push
sbb
stc
fstp
stc
cmp
outsb
pushf
cmp
je
mov
mul
sub
cli
mov
out
mov
xor
vpunpckldq
shl
push
inc
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
sbb
jo
sbb
jo
sbb
sbb
fs
movsl
movsb
xor
stos
jno
fnstenv
inc
rclb
push
test
popa
mov
inc
imulb
cwtl
inc
add
imul
loope
test
jo
xor
xor
mov
sub
xchg
mov
adc
xlat
out
mov
cmovge
sbb
inc
out
loopne
pushaw
push
mov
cmp
mov
cmpsl
out
sbb
out
cwtl
push
shlb
inc
push
sbb
adc
lahf
cmp
and
sub
mov
pop
mov
repnz
sub
push
sub
xchg
clc
scas
cmpsl
xor
clc
dec
mov
cmc
pop
shll
sbb
mov
sub
lea
mov
inc
inc
xor
mulb
dec
mov
pusha
xchg
and
js
and
repnz
mov
outsb
mov
push
ss
inc
dec
jecxz
dec
sbb
aas
adc
xchg
jno
push
add
dec
jbe
cmp
pop
stc
loop
and
mov
decl
lcall
add
push
add
add
rolb
lcall
inc
inc
add
add
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
jnp
or
mov
jg
jo
and
fld
movsb
jae
popa
push
addr16
push
push
in
stos
inc
mov
shlb
in
negl
std
mov
mov
test
xchg
cmp
filds
fwait
sbb
mov
dec
sub
sub
push
inc
dec
fbld
shlb
cmp
in
shl
pop
jecxz
repnz
sub
daa
jg
in
mov
xchg
xor
push
or
sarb
int3
lahf
mov
inc
fisubrl
inc
nop
pop
clc
xor
mov
scas
repnz
aad
fdivrp
cmp
dec
push
or
mov
shrl
mov
pop
mov
mov
stos
fisubrs
ja
xchg
sti
test
xor
sbb
fldl
aaa
lret
jbe
stos
in
mov
or
stc
sbb
cwtl
cmp
cs
add
cmc
inc
jno
mov
fmuls
pop
fisttpll
clc
jbe
xchg
aam
or
cmp
pushf
xchg
or
into
push
pushf
fwait
mov
je
shlb
inc
push
and
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
outsb
aas
push
repz
sbb
jo
mov
sub
pop
aad
test
ds
insl
loop
and
adc
in
cmc
aam
aad
cmp
lea
adc
fnstenv
push
les
repz
negb
or
stos
xor
movsl
xor
stos
fwait
std
lods
dec
repz
mov
sbb
dec
cmp
fldl
xor
je
sub
aad
and
push
mov
push
cmpsl
pop
xchg
inc
data16
sbb
adcb
out
or
xor
aad
sub
scas
shlb
sub
jge
orb
or
adc
pop
dec
jmp
test
movl
pop
xchg
icebp
mov
dec
cmp
cmp
add
aaa
enter
mov
cmp
fwait
jp
xchg
movsb
ds
sub
rol
mov
add
enter
in
cli
mov
aam
and
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
leave
lea
and
sahf
enter
loopne
jecxz
in
out
pop
xor
jnp
pop
lds
subb
mov
test
push
inc
xchg
jg
cld
clc
arpl
push
inc
push
sbbb
into
adcl
loop
sbbl
xchg
push
push
stos
pop
inc
mov
push
mov
shl
mov
cs
inc
jns
int3
scas
int
hlt
mov
sbb
mov
leave
fs
or
repnz
or
fists
xor
xchg
mov
xchg
pop
mov
sub
jno
fs
sub
out
xor
jo
jge
nop
jae
ja
loopne
jmp
aas
insl
cli
sbb
daa
add
pop
push
pop
xchg
fldl
xchg
sbb
xor
cmp
xchg
adc
lods
inc
sbb
mov
xchg
mov
neg
push
mov
push
jmp
push
mov
jno
push
dec
pop
into
lcall
or
jg
out
xchg
cmp
neg
jmp
mov
fcompl
mov
mov
xor
add
jmp
ffree
adcb
mov
cmp
jo
sbb
jo
sbb
sahf
cmp
add
jbe
sub
aad
mov
sbb
push
es
cmc
xchg
fisubs
pop
sub
les
adc
adcb
call
aad
mov
pop
cmp
push
lahf
pop
bound
jno
push
cs
notb
or
jo
add
lcall
xchg
test
and
popf
jne
out
aad
movsl
mov
fstl
mov
jl
mov
push
mov
push
xchg
sahf
adc
fisttpll
mov
add
mov
lea
lret
fidivrs
imul
popf
sbb
stc
scas
cmp
push
clc
xchg
or
lock
push
leave
js
fdivrl
pop
sarb
pop
test
pop
and
pop
aaa
dec
int
aaa
pop
js
je
mov
pop
add
push
cmpsl
sbbb
jb
jp
ljmp
mov
stos
cmp
sti
lcall
ja
bound
inc
push
mov
and
int3
movsb
loopne
xrelease
mov
mov
mov
cmp
je
mov
mov
jmp
scas
or
repz
test
roll
jo
sbb
jo
cmp
sub
or
xchg
or
push
out
dec
or
gs
insb
push
push
test
out
pop
inc
jmp
mov
loop
jg
lret
mov
enter
xchg
push
cs
imul
lods
enter
in
and
mov
in
test
adc
aam
ds
sahf
inc
dec
or
mov
lret
and
outsl
and
shrl
paddb
adc
pop
and
ja
adc
fiaddl
cmc
out
ds
and
fs
cmpl
leave
add
aam
jne
repnz
cmp
mov
jno
rcll
repz
mov
movsb
idivb
gs
sbb
mov
mov
or
xor
test
add
call
pushf
mov
imul
jmp
dec
cs
inc
push
jmp
decl
mov
repnz
pushf
sub
mov
mov
test
jne
mov
jmp
dec
push
test
xor
popa
jns
lods
and
es
sbb
jo
mov
jp
je
shlb
jnp
cwtl
out
cli
xlat
and
push
sub
out
int3
lahf
out
clc
inc
pop
inc
or
pop
sarb
adc
sub
sbb
push
outsl
xchg
mov
mov
push
fcomp
jp
mov
bound
pop
push
mov
inc
inc
int3
mov
lea
jnp
enter
loop
mov
sar
lret
dec
jb
je
cltd
loopne
cmp
fnstcw
add
add
and
inc
mov
sub
negb
mov
sub
movsb
enter
push
cmp
add
aad
mov
jne
sub
test
lcall
cld
imulb
adcl
sbb
sub
push
popa
mov
stos
or
inc
push
push
daa
repnz
test
pop
out
clc
xchg
cmpsb
inc
push
cmpsb
rcll
shr
sbb
xchg
cltd
gs
dec
sbb
out
jecxz
xor
adc
mov
movsbl
xor
add
cmp
jmp
mov
gs
nop
sbb
es
and
jo
push
mov
fsub
mov
sbb
add
scas
xchg
stc
fstl
cmovp
mull
test
imul
inc
pop
push
xor
or
xor
lods
inc
mov
add
out
add
inc
icebp
repnz
roll
neg
cwtl
sbb
cmpxchg
hlt
add
loop
xchg
push
andl
jns
mov
hlt
mov
push
lock
sub
movsl
add
sub
cmp
rcr
push
push
nop
int3
mull
mov
fisttps
js
fisubl
in
movsb
bound
aad
enter
inc
mov
sbb
notl
add
inc
js
ss
repz
testb
jne
call
loop
dec
xor
outsb
dec
xchg
inc
lds
imul
dec
daa
mov
shrl
fldenv
lds
loope
inc
sbb
gs
add
aas
mov
daa
adc
push
insb
lock
rcr
je
lock
push
mov
test
add
add
inc
call
jmp
aaa
dec
rcrl
jno
repz
enter
in
and
sbb
jo
popa
jno
cmc
pop
sub
jge
xlat
dec
test
sarb
inc
sbb
and
push
int
pop
push
addl
jecxz
xchg
aas
out
jae
mov
rcrl
dec
cmp
jg
in
lcall
loop
push
dec
test
jecxz
pop
sti
cmp
popa
in
or
mov
out
es
aad
cli
stc
mov
fbld
add
pusha
test
lret
call
jns
shrl
in
xlat
icebp
mull
gs
loope
packsswb
dec
inc
inc
cmp
dec
inc
int3
and
jnp
add
cld
mov
out
dec
popa
jp
push
repnz
mov
enter
jl
enter
mov
push
jle
xchg
gs
lret
insb
sbb
jne
add
aaa
cmp
jge
popa
pop
sbbl
jge
ret
daa
outsb
outsb
or
add
nop
lds
cwtl
sub
das
and
jbe
xchg
sbb
add
cltd
dec
cwtl
xchg
cmc
cmp
sbb
push
into
adc
fistl
ficompl
hlt
xor
mov
inc
and
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
mov
rolb
movl
push
or
imul
in
push
pop
je
add
stc
arpl
jl
push
mov
aad
fwait
js
test
pop
xchg
movsl
xacquire
pushf
repnz
ficompl
and
pushf
psubw
jecxz
mov
test
sbb
lahf
iret
fistpll
cli
out
xlat
pop
xchg
out
or
sub
stc
xchg
arpl
push
push
inc
scas
add
adc
adc
pop
jbe
das
int3
je
sbb
push
nop
inc
dec
pop
mov
dec
push
and
inc
cwtl
sbb
inc
and
movsl
mov
or
pusha
jb
je
stos
int3
mull
aas
in
pop
or
xchg
js
mov
pop
inc
jge
jne
push
and
int3
aaa
arpl
pusha
leave
movb
cs
scas
jp
push
aaa
leave
cmpsl
xlat
icebp
shl
arpl
xor
mov
adc
sahf
xchg
icebp
in
push
outsb
and
lods
out
adc
pop
lods
daa
sbbl
xor
jle
aam
sti
pushf
in
popf
push
ds
jmp
cmp
xor
sarl
cld
push
push
xor
and
sbb
jo
in
stos
iret
lahf
dec
cmpsb
mov
inc
fcomps
push
fstpl
cmp
pop
test
out
test
repz
nop
inc
addl
hlt
jmp
push
sahf
jbe
scas
inc
aam
or
dec
test
push
jl
lcall
js
mov
aad
xchg
gs
pop
and
sub
pop
jnp
dec
and
sub
and
inc
mov
mov
sti
addr16
inc
movsl
repz
push
js
xchg
pop
jno
lcall
test
outsl
out
mov
xchg
leave
push
lods
stos
mov
ljmp
mov
movsl
dec
insl
ja
in
pop
hlt
xchg
int3
es
pushf
fwait
xor
js
mov
ror
and
cmp
push
shrb
sub
sub
mov
or
add
or
pusha
imul
inc
addl
out
mov
xor
nop
xlat
out
in
push
stc
fwait
popf
sbb
sti
cmp
cmp
pop
push
mov
ljmp
es
in
push
mov
mov
and
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
inc
pop
jg
jp
dec
pop
int
push
lods
or
popa
or
inc
ds
in
pop
ret
pop
jnp
mov
mov
mov
je
mov
stos
fdivr
mov
int3
movsl
cld
and
xorb
arpl
adc
jbe
jae
in
js
pop
lret
aas
jmp
in
dec
or
mov
xor
lret
cmp
xchg
ds
sub
mulb
jmp
add
jnp
imul
push
movsl
mov
push
dec
jns
sbb
imul
sub
pop
lcall
mov
repnz
xlat
mov
push
les
movsl
push
aas
sub
fisttpl
inc
rcll
cmpb
mov
adc
pop
rol
ret
inc
push
push
out
adc
push
fs
imul
or
dec
pop
mov
mov
cmp
sahf
xchg
test
xchg
push
aaa
rorl
gs
mov
ja
mov
or
lret
or
int
mov
pop
leave
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
or
push
hlt
das
jo
fnstcw
jo
mov
cwtl
test
sub
push
and
insl
shlb
push
mov
inc
out
pop
mov
out
sub
scas
int
dec
je
in
lock
lods
addb
lock
add
and
sahf
dec
out
aam
xor
xchg
out
xchg
ds
das
insl
fsincos
lret
mov
or
ljmp
cwtl
sbb
pop
sbb
out
lds
mov
mov
test
sbb
fsubl
cltd
into
xchg
outsb
stc
add
jno
lcall
mov
divps
pop
fwait
jmp
and
jl
imul
and
loop
inc
mov
sub
shrl
out
dec
sbb
sub
outsb
pop
mov
insl
lods
dec
popf
enter
pop
arpl
push
jnp
mov
daa
cbtw
repz
cmp
loope
add
xor
mov
out
mov
push
out
test
leave
ret
sub
xchg
stos
fisttpll
loop
sub
lcall
es
push
dec
lahf
dec
rorl
lahf
fildl
int
or
stc
cs
mov
xor
add
imul
and
out
and
jbe
sarb
xchg
stos
or
out
das
jnp
adc
popf
outsl
inc
pxor
add
mov
xchg
mov
push
ja
sub
arpl
fnstsw
xchg
stos
xchg
inc
pop
cmpb
lahf
mov
adc
jp
mov
pop
push
push
adc
jo
xchg
mov
pop
dec
lock
rsqrtps
icebp
repz
adc
and
leave
pop
mov
data16
xchg
xchg
mov
push
repnz
out
bound
xor
roll
push
addr16
test
popa
arpl
cmp
xor
sbb
mov
xlat
pop
xchg
add
push
sub
test
pcmpeqd
jne
rorl
jae
sub
pop
add
hlt
mov
inc
insl
js
cmp
xchg
mov
enter
ss
cli
jge
adc
push
loopne
cmp
inc
xor
xor
ja
mov
and
push
int
cmpsl
mov
loope
inc
or
add
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
ss
jo
jle
jo
lret
cmovle
insl
rorl
cmp
dec
mov
and
rcll
mov
sbb
mov
xor
lret
pop
testl
xor
mov
cmp
jns
push
cltd
mov
cld
stos
cmp
sbb
xlat
lret
insb
and
shlb
daa
sub
lahf
out
ljmp
jle
or
insl
cld
in
movsb
cmp
cmp
addr16
cmp
xor
jge
jge
data16
cmp
xor
movsl
cmpsl
mov
repz
pop
lds
enter
push
push
add
dec
dec
jb
sbb
mov
adc
cmc
push
pop
cs
cmc
and
out
xchg
cmp
loop
add
pop
iret
dec
xorb
cmp
pop
fidivrl
lahf
sbb
fnsetpm(287
pop
scas
pop
and
es
ljmp
mov
pop
lret
fsubl
add
les
mov
jle
lock
aaa
repz
jp
shlb
or
movsl
std
push
test
or
dec
mov
dec
mov
push
lret
or
adc
stos
andl
ljmp
cli
addr16
das
loop
mov
daa
mov
and
dec
popf
stos
outsl
push
fistpl
mov
xchg
pop
sbbl
in
mov
mov
add
leave
test
dec
sbb
sbb
xor
push
mov
clc
dec
mov
dec
inc
insb
popf
shlb
or
test
adc
adc
jnp
int3
add
pop
cwtl
mov
aad
test
leave
mov
add
dec
lods
outsb
mov
lock
jnp
adc
mov
push
add
jl
pushf
in
push
inc
sbb
sbb
ljmp
sahf
int3
shl
cmp
mov
int
sub
repnz
pop
pop
ljmp
xor
addr16
mov
and
xchg
push
xlat
sti
int3
pop
xor
cs
sbbb
cmp
push
ja
stos
mov
inc
dec
push
xchg
lret
lcall
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
fnstsw
sub
fnstcw
jo
mov
cmpsb
cltd
and
mov
jmp
movsl
push
push
movsl
cmp
ficoms
jns
or
popf
add
inc
loop
xchg
shlb
cltd
jns
movsb
test
sbb
jle
jmp
sbb
iret
cmp
pop
shlb
add
imul
jne
adc
cmp
inc
push
test
roll
cli
inc
mov
shrb
mov
dec
sbb
mov
cmp
pusha
dec
addb
pop
aaa
adc
cmp
icebp
lcall
or
pop
push
xor
mov
pop
icebp
adc
add
shrl
jo
push
and
gs
fwait
push
outsb
inc
out
push
lods
mov
out
scas
dec
movsb
lret
jle
mov
or
enter
and
fildll
call
fldln2
sarl
lcall
aad
jne
mov
jmp
loope
aas
in
fmull
cli
movsb
jno
loop
jns
into
cmp
push
push
and
stos
std
pop
xor
cmp
dec
jmp
jp
dec
and
and
leave
hlt
andb
jl
andb
arpl
mov
and
push
xchg
fadd
push
out
pop
stc
push
les
inc
scas
cmpsl
flds
mov
aam
inc
mov
ja
and
inc
fdivl
lret
sti
xchg
js
out
ret
cmp
addr16
pop
inc
or
int3
mov
dec
shll
in
rcrb
sbb
movsl
stos
sub
pusha
icebp
pop
daa
ss
lret
adc
test
mov
sti
lret
sbb
loopne
xor
out
fadds
mov
cmc
mov
testb
lahf
push
test
jo
mov
and
sub
mov
fwait
dec
pusha
jmp
bound
dec
fldcw
push
or
test
movsb
push
mov
scas
xchg
cli
sub
push
in
rdtsc
xchg
pop
cmpsb
out
jno
cltd
xor
cmpb
jmp
push
and
sbb
cmp
hlt
icebp
ss
jmp
cltd
jae
push
in
or
xor
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
jmp
les
jo
leave
mov
add
xor
jp
jecxz
mov
les
loop
fdivl
inc
das
pushf
je
dec
testl
cli
dec
scas
fsubrs
fldz
out
pop
jae
push
fcmovb
mov
out
or
and
jo
push
lahf
fldln2
cmp
adc
pop
and
push
or
fwait
aaa
xor
movsb
sub
cli
pop
daa
xor
push
cmc
dec
push
idivl
std
bound
fwait
and
andl
pop
mov
repnz
jns
incl
lock
mulb
enter
mov
cmp
out
mov
mov
inc
push
or
mov
outsl
mov
sbb
testb
push
xadd
dec
inc
je
jne
and
mov
jns
iret
mov
movsl
ret
fucom
inc
push
stos
orb
dec
nop
js
add
stos
inc
jge
fwait
pop
sbb
cwtl
cmpsb
sbb
inc
test
and
ret
insb
ret
mov
adc
xor
out
xlat
call
rolb
jbe
xchg
bound
test
pop
xor
fwait
adc
icebp
sti
arpl
mov
cmp
xchg
iret
cltd
bt
xlat
jl
lods
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
dec
xchg
test
aaa
jo
les
jo
ret
hlt
push
fsubl
add
sahf
das
jne
cmpsb
push
bound
push
shlb
shrl
xchg
push
adc
nop
fcoms
orb
cmp
inc
in
sub
pop
inc
cmp
hlt
mov
pop
pusha
mov
jl
add
xchg
sti
lcall
pop
std
dec
shrb
adc
push
movsb
mov
lods
rcll
cmp
repnz
iret
shl
sti
and
mov
xchg
popa
add
pop
xchg
lcall
xor
iret
out
decb
fdivs
mov
lock
push
dec
jns
push
cwtl
xor
aas
sub
mov
test
out
test
mov
pop
hlt
push
or
push
push
cmp
xor
jb
adc
test
xchg
in
cmp
or
repnz
rcr
movsl
repnz
adc
leave
push
sarl
cmp
ss
push
aad
fstps
mov
xchg
cmc
add
dec
push
movsb
adc
xor
mov
js
out
mov
or
adc
xor
and
xchg
inc
popa
cwtl
insb
cs
push
mov
call
out
aaa
cli
fdivs
xchg
push
outsb
icebp
repnz
xor
add
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
inc
xor
jo
sub
fisubrl
add
xor
mov
mov
ficoms
pop
mov
roll
add
fmuls
mov
fsubp
inc
and
cld
add
pop
dec
sbb
call
pop
and
add
mov
in
mov
into
mov
outsl
dec
xchg
add
pop
jp
xchg
enter
test
outsb
add
inc
and
iret
decb
pop
push
popf
pop
jmp
outsl
lret
stos
in
std
jnp
enter
sub
rcrb
stc
fwait
into
jo
jle
cmp
xorb
dec
in
lock
mov
fsubr
mov
mov
xchg
stc
insb
pop
addb
jns
in
dec
clc
mov
adc
notl
cmp
into
call
and
imul
jmp
push
pop
and
dec
pop
icebp
add
fadd
aaa
jp
jo
cli
or
cmpsl
lahf
push
out
and
sbb
lods
inc
cmpsb
add
push
cmp
and
lcall
ja
xchg
fwait
or
push
mov
aad
icebp
push
repz
call
inc
mov
lcall
es
xlat
jle
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
add
mov
and
jo
xor
mov
out
push
lret
fbld
cmp
cld
xor
mov
sbb
shll
shrb
or
in
lock
cmp
sbb
pusha
inc
cmp
mov
mov
popa
pop
pusha
outsb
jmp
mov
data16
ret
xchg
mov
test
int3
push
test
and
aas
addr16
das
push
jl
dec
gs
or
pop
in
cmp
cmp
and
cmp
out
mov
js
cld
daa
push
xchg
clc
cmp
push
out
sub
jge
test
sti
inc
popa
pop
inc
pop
pop
scas
out
xchg
ret
mov
inc
mov
cmpb
fnstsw
cmp
add
mov
inc
dec
mov
mov
imul
pop
je
or
mov
cmp
sbb
shrb
push
push
mov
push
pusha
add
lahf
stc
jmp
and
outsb
stc
mov
std
dec
jo
or
mov
aam
push
jg
push
add
jl
inc
mov
shll
jbe
stc
and
ss
cmp
mov
push
fcom
pop
dec
mov
fists
pop
pop
pop
jg
popa
push
mov
pop
mov
arpl
fadds
ljmp
jo,pn
mov
std
enter
or
cltd
xchg
jge
lea
aaa
jb
inc
push
push
mov
enter
push
xchg
ret
adc
lods
adc
mov
int3
pop
mov
inc
add
or
inc
xchg
int
data16
stc
xor
mov
push
or
push
cmp
mov
inc
imul
mov
mov
mov
clc
out
adc
mov
xchg
cmp
aam
xchg
data16
loope
or
fistl
cmp
and
adc
sub
ja
mov
dec
popa
es
sbb
insb
ret
nop
dec
pop
inc
jo
insb
mov
jg
imul
mov
sub
jecxz
in
inc
mov
cmpsl
fidivrs
mov
and
in
cmp
fimuls
push
cld
mov
xchg
jmp
add
addr16
push
mov
movsl
fs
mov
and
or
adc
add
jb
jmp
or
xor
int3
mov
mov
int
and
mov
out
lods
incl
jl
push
jbe
pop
adc
and
shl
or
xor
test
jnp
cmc
lods
sarl
xchg
test
out
cmp
or
push
mov
mov
xchg
xchg
aaa
dec
sub
xchg
jno
cltd
push
sbb
cld
pop
in
mov
push
aas
rcrl
jnp
loop
imul
sbb
xchg
imul
in
adc
dec
imul
inc
sahf
cs
outsb
cmp
cwtl
sbb
jp
inc
popa
cmp
cmp
xor
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
ret
cmp
xor
and
jo
xor
fs
and
dec
mov
dec
xchg
or
and
pushf
jns
fwait
imul
mov
lock
adc
lahf
scas
negb
mov
dec
xchg
add
aaa
mov
rol
cld
dec
mov
mov
mov
dec
push
jl
das
popa
popf
aaa
lods
dec
icebp
cmp
jecxz
push
aad
inc
jnp
outsb
aaa
push
lock
or
adc
push
mov
fiadds
loop
xchg
nop
dec
shrl
jno
lds
movaps
jmp
push
pushf
aam
jg
fsubs
jmp
xchg
pop
cwtl
pop
and
mov
jp
jl
xor
sub
xor
mov
dec
or
stc
aaa
outsl
leave
in
shrb
lcall
pusha
filds
lahf
and
loop
shll
sub
into
mov
jno
mov
and
inc
mov
and
test
xor
rcrb
shrl
jns
gs
adc
sti
inc
cld
xchg
jb
ds
or
lcall
push
xorl
jp
shlb
adc
test
fwait
sub
cmpsb
sbb
lret
xchg
cmpsb
mov
sbb
jne
mov
push
popf
pop
mov
push
push
ss
call
pop
lret
addr16
add
mov
test
stc
mov
cmp
mov
loope
mov
push
and
cmp
into
lret
xor
popa
push
pop
dec
subb
mov
pushf
xchg
add
inc
fucomp
xchg
lea
into
iret
and
dec
mov
pop
push
mov
push
addl
dec
sub
lret
xchg
in
popf
test
shrb
mov
cmp
sub
jg
push
cli
jnp
fstp
pop
arpl
push
loop
sarl
mov
pop
mov
sahf
jo
scas
cli
mov
xchg
xchg
in
in
out
fistpl
cmp
push
ret
jnp
fbld
xor
call
cmp
sub
mov
mov
push
lret
inc
movsl
aaa
sbb
leave
fcoml
cmp
cmpsb
test
sub
dec
and
movsb
sbb
stos
jmp
mov
xchg
xor
inc
mov
push
push
rcr
addr16
push
inc
add
flds
lds
nop
dec
adc
or
pop
mov
xor
js
mov
sbb
mov
fstpl
xchg
jbe
das
mov
push
mov
jle
xchg
cld
and
pop
lea
lods
sbb
xchg
push
shlb
cs
mov
cmpsl
and
mov
test
adc
rcl
pop
mov
adc
mov
push
jmp
xchg
cmp
and
sub
mov
sub
cli
pop
push
jb
js
stc
mov
mov
lret
nop
jb
or
inc
leave
jne
mov
cmove
adc
mov
mov
xorl
movl
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fistps
mov
jo
and
jo
sarl
out
xchg
cmc
sub
sti
out
dec
mov
mov
sti
push
inc
out
adc
mov
jb
rorb
int
movsb
dec
in
mov
lcall
inc
and
xlat
sti
cmp
test
lock
sub
jbe
push
out
test
mov
sub
or
sub
imul
les
jae
xchg
xor
cmp
mov
cmp
scas
and
inc
jmp
and
loopne
out
sbb
xchg
jmp
leave
scas
fisubl
lds
jg
fidivrl
push
mov
lods
sbb
sti
sbb
xor
push
add
or
jmp
pop
rclb
push
fs
sbb
repz
lods
fistps
push
xchg
repnz
xor
mov
mov
cmp
add
lock
sar
imul
inc
pop
inc
repz
pop
into
int3
xchg
push
test
mov
mov
push
sbb
or
out
sahf
mul
loope
fidivrl
data16
pop
fwait
sub
xor
jae
cmpsb
push
pop
rcll
lods
into
nop
in
mov
xor
and
pop
clc
cwtl
pop
cmp
adc
mov
and
cmp
js
jae
adc
in
gs
insl
lcall
pop
add
sub
ds
sbb
js
movsb
in
pop
das
daa
adcl
in
les
mov
cmp
call
add
xchg
das
aam
ror
dec
rcrl
andb
inc
mov
jg
pop
jne
xchg
mov
insb
pop
rol
pop
mov
or
pop
cmp
dec
stos
push
into
mov
into
insb
xor
xchg
pop
sub
and
pop
out
mov
adc
popa
adc
scas
out
push
int
pop
pop
neg
push
mov
jg
icebp
ja
xchg
mov
dec
and
mov
imul
or
mov
cmpsb
jnp
sub
pop
or
sub
sub
xchg
pushf
dec
rorb
or
pop
xorl
and
lods
jo
or
inc
cmp
shll
pop
xchg
mov
pop
je
fsubrs
test
jae
xchg
pop
inc
xchg
divb
push
cld
jecxz
mov
sub
movb
jmp
push
xchg
push
popa
int3
mov
js
mov
hlt
stos
and
scas
iret
scas
popf
fstpl
and
lret
cmp
out
pop
cwtl
add
mov
xchg
fists
pop
div
mov
std
xchg
xor
mov
loopne
push
push
fwait
xchg
sub
daa
outsb
adc
hlt
sbb
ja
ss
mov
or
ja
push
dec
iret
xchg
cmc
inc
outsb
push
fisttpl
cmp
xchg
jecxz
loop
ljmp
cmpsl
ja
sbbl
add
jno
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
mov
sub
sbb
jo
and
jo
dec
sub
outsb
cs
push
push
xchg
dec
mov
in
mov
leave
dec
in
inc
scas
imul
dec
or
xor
inc
mov
adc
bound
mov
sub
push
repz
fcom
mov
gs
gs
jnp
xor
mov
jmp
mov
mov
adc
jmp
push
mov
xlat
das
pop
mov
repnz
js
movsb
xchg
scas
jno
sbb
pop
fbld
push
nop
pop
das
sbb
and
xchg
in
and
call
mov
or
fwait
mov
xor
dec
xchg
mov
loopne
addr16
loop
stc
pop
xchg
ror
sub
or
loope
mov
xor
stos
pop
cmp
daa
insl
and
adc
adc
mov
imulb
push
aaa
repz
cmp
pop
movsb
jecxz
pop
and
mov
cmp
push
add
andl
mov
not
and
testb
sub
pop
jmp
mov
inc
test
loope
xchg
cmc
daa
push
andl
mov
loopne
xor
push
fisubs
sub
daa
mov
or
push
cltd
mov
fsubrl
cmpsb
and
push
jo
addb
or
mov
dec
inc
cmpxchg8b
es
or
adc
aaa
gs
jp
filds
ljmp
sarl
cmpsb
or
insl
pop
mov
out
mov
add
test
ret
mov
mov
mov
enter
outsb
xchg
inc
push
push
cld
jns
jne
or
adc
ror
pusha
out
cmpsb
pop
pop
lcall
dec
inc
cmpsb
xor
stos
adc
test
popa
mov
ret
insl
mov
push
inc
hlt
inc
or
jne
adc
jbe
jg
cs
cmp
inc
cmp
out
js
lea
xchg
jge
dec
mov
repnz
imul
out
xlat
or
push
loopne
pop
nop
ficompl
sub
out
pop
in
add
sbbl
dec
jge
cmpsb
and
jo
pop
jae
lcall
imulb
push
sbb
hlt
jns
xchg
insl
mov
pop
cmpsl
jle
xor
mov
mov
lahf
loop
mov
and
push
xor
mov
lret
add
push
cmp
xchg
outsl
mov
cmp
stos
hlt
or
jne
fisttpl
bound
iret
repz
add
in
loop
int3
sbb
imul
xchg
sbb
lods
test
sbb
rorb
sbb
roll
mov
xchg
sub
lea
mov
push
mov
imul
add
cmp
mov
inc
xchg
sbb
in
sbb
jle
shl
jne
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
jae
lret
jo
and
jo
ret
imul
jae
imul
inc
cmp
or
movsb
pop
push
mov
leave
mov
pop
mov
adc
push
int
pushf
popa
or
xchg
repz
data16
fs
xchg
fs
fldenv
push
xor
outsl
lods
pop
enter
push
out
xchg
xor
js
loope
xor
inc
fs
pop
mov
mov
pop
aad
dec
jle
inc
mov
xorl
or
mov
add
or
enter
ret
pop
and
inc
dec
ds
cmp
into
cmovle
fs
push
push
subl
imul
jl
les
sbb
stc
sub
inc
lahf
jmp
cmp
test
xchg
xchg
cmpsl
pop
daa
movsl
xor
repz
popa
xchg
push
mov
push
mov
lret
shl
fsub
nop
inc
sub
in
inc
cmp
jecxz
xchg
add
inc
jmp
in
mov
idivb
je
sbb
das
aad
mov
and
cli
xor
add
pop
inc
aas
cmp
data16
adc
pushf
out
in
cmpsl
sarb
in
push
pop
cmc
pop
sbb
sbb
loopne
std
sar
add
out
jno
xchg
cld
scas
in
adc
movsl
lds
loop
cmp
arpl
into
adc
mov
cld
pop
daa
adc
jo
call
add
in
gs
movsb
lea
mov
in
mov
test
shl
sbb
test
adc
push
loope
xlat
inc
and
sti
int
cmp
vzeroupper
lods
pop
sub
call
pop
sub
enter
mov
lret
in
dec
xor
fdivp
mov
lock
adc
cwtl
dec
leave
sub
int3
push
mov
sbbl
and
push
inc
enter
jo
pop
mov
jg
bound
decl
pop
cmp
mov
adc
mov
xchg
jne
aam
mov
aam
cmp
ds
sbb
rol
ror
cmp
jle
adc
stc
jle
dec
or
jne
or
xorb
add
aas
pushf
adcw
xor
call
clc
jbe
jmp
pop
rolb
fcoml
shlb
mov
mov
pop
shrl
nop
movsl
loopne
sahf
mov
mov
out
dec
and
out
sbb
xor
dec
jnp
aaa
popa
xchg
mov
stos
push
adc
ret
dec
dec
adc
jne
cltd
imul
adc
subl
enter
mov
mov
adc
ds
pop
xchg
je
lods
sarl
subl
jle
mov
mov
js
sub
mov
call
std
test
dec
xchg
fsts
in
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
imul
push
gs
xchg
aaa
pavgw
fnstenv
xor
mov
jne
and
adc
pop
mov
inc
in
and
int3
jb
lds
pop
ja
xchg
inc
dec
lret
lds
dec
sub
and
sbb
ja
movsb
ja
dec
shlb
repnz
xchg
mov
jne
fistl
sub
mov
push
mov
cmp
out
scas
dec
mov
mov
stc
inc
pop
dec
push
or
sbb
insb
push
jbe
and
cld
icebp
int3
xchg
add
in
xor
add
les
cmp
insb
aad
push
clc
in
dec
lods
clc
inc
xchg
test
roll
or
popa
test
daa
cmp
adc
in
fsubs
ja
sub
lret
cmpsb
iret
cmp
pop
mov
or
outsb
iret
push
sbb
into
xchg
xor
add
test
push
test
repnz
add
cmp
sti
dec
bound
or
pop
fwait
aaa
fisttpll
outsl
mov
pop
orb
sub
jmp
dec
fdivl
lods
dec
jl
jae
addr16
adc
add
adc
insl
out
jecxz
leave
mov
call
fidivl
mov
movsl
or
jecxz
dec
test
mov
xchg
cli
and
cltd
lahf
sub
inc
jle
mov
loop
insl
arpl
mov
add
fwait
sbb
popf
sarb
and
xlat
fdivr
ficoml
ds
cmp
sub
ret
adc
lock
cs
insb
das
add
mov
cmp
out
mov
fildl
pop
jns
lahf
and
cmp
pop
or
or
adc
pop
mov
cld
lds
test
popf
ljmp
push
pop
test
iret
cmpsb
xor
jno
lahf
les
sbb
arpl
in
push
pinsrw
dec
arpl
hlt
pop
sub
and
loopne
into
push
in
mov
mov
mov
mov
mov
sbb
mov
or
and
pop
data16
inc
sub
xchg
and
mov
in
mov
push
loopne
imul
repnz
mov
ret
add
ss
popf
cmp
fs
or
lret
movsb
fsubs
or
roll
xchg
xchg
dec
ds
pop
int3
js
jnp
dec
int
pop
dec
movsb
and
and
stos
cmpsb
aad
es
into
adc
add
or
imul
cli
out
xchg
mov
mov
fistl
sub
sub
pop
movsl
and
mov
arpl
pop
mov
gs
adc
mov
add
xor
xchg
orl
loop
mov
lods
or
cli
insl
call
add
add
xor
fstps
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
push
or
cmpsl
stos
shll
jge
jo
rorb
sbb
fcomp
adcl
mov
test
mov
sbb
fnstenv
sub
or
data16
xchg
fiadds
sbb
test
mov
inc
outsl
mov
jne
xchg
int
pop
mov
xor
xor
lea
lret
lock
pop
mov
adc
dec
push
ficoms
daa
xchg
jecxz
jne
pop
mov
outsb
js
cli
ja
dec
fcompl
int
sti
push
clc
xor
pop
scas
les
jne
repz
add
push
push
inc
and
ret
out
push
or
inc
ja
ret
sbb
cmc
push
sti
sub
test
and
and
pop
or
sbb
stos
jo
add
jp
call
mov
into
pop
or
and
jmp
gs
ss
es
inc
push
fs
xor
in
push
xchg
xchg
and
xchg
push
xor
ret
mov
lcall
scas
stos
mov
add
jge
jp
sub
mov
imul
gs
xor
arpl
out
bsf
movsl
jl
ret
xor
nop
lret
push
lods
mov
add
fs
xchg
and
pushf
mov
loope
es
hlt
xchg
xor
pop
ss
dec
out
shrb
mov
test
jb
or
push
fsubl
pextrw
jp
add
inc
jnp
and
or
dec
fs
mov
cli
lods
mov
push
push
popf
add
add
cmpb
push
test
movsb
dec
dec
cmp
ss
movsb
mov
push
call
push
push
stos
jne
mov
fs
xlat
adc
dec
cmpsl
je
pop
xchg
loop
enterw
repz
punpckhdq
movsl
rclb
enter
cmp
fwait
pop
mov
or
xor
pushf
int3
lea
mov
mov
in
or
dec
and
loopne
mov
fnstsw
jecxz
jo
ljmp
mov
daa
adc
xlat
shll
push
std
pop
lcall
lea
push
sub
dec
fisttpll
xchg
jg
jecxz
out
push
stc
movsb
xchg
xchg
push
adc
les
xchg
cmc
xchg
loopne
cli
stc
cmp
int
push
jecxz
mov
popf
pushf
mov
and
and
dec
shll
cmpb
ret
ret
push
or
xchg
xor
fildll
dec
pop
in
jecxz
mov
aaa
adcl
jmp
sbb
imul
int
int
ljmp
sbb
lds
push
xor
loop
jecxz
push
mov
mov
sti
ss
sub
pop
xor
mov
lds
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
insb
xor
jo
imul
sub
cltd
mov
rcl
dec
mov
jb
jnp
xor
pop
add
test
inc
push
out
dec
lea
xor
aam
out
xor
stos
adcl
les
pop
mov
cmp
sub
out
push
sbb
mov
push
leave
xor
pop
and
push
int
or
in
xor
loope
or
shlb
adc
cwtl
jne
je
imul
ret
jo
fdivrp
jns
lea
mov
clc
push
lret
lds
xchg
xchg
adc
mov
daa
dec
into
mov
mov
adc
push
and
popf
jbe
popa
scas
movsb
das
in
xchg
sbb
xor
xor
ja
jecxz
jp
inc
sub
dec
push
xor
into
xchg
dec
jl
cmc
subl
dec
xchg
js
inc
jle
loop
lret
das
and
add
aas
je
in
cmpsb
ja
ja
roll
sub
sub
cwtl
notl
pop
leave
push
pop
push
push
test
fcomp
iret
data16
sub
cmp
adc
mov
aas
sbb
fisubs
cmp
add
xlat
cmp
es
xchg
mov
jecxz
mov
rorb
outsb
jnp
add
ds
js
cli
add
dec
lcall
pop
jno
fdivrp
movsb
jns
aaa
cmp
push
ja
xchg
adc
popf
jle
xchg
out
push
mov
shll
mov
popf
jle
es
bound
mov
cmp
aad
dec
jb
add
ja,pn
cmp
jmp
or
jno
xor
ljmp
loope
mov
inc
out
add
outsl
inc
inc
int3
das
int3
movl
add
movl
mov
sub
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
xor
push
int3
jo
imul
nop
dec
loopne
mov
cld
mov
test
cmpsl
in
test
pop
xor
iret
xor
adc
xchg
pop
cwtl
ss
lret
xchg
inc
fcoms
or
mov
push
fcom
or
or
inc
arpl
fwait
pusha
adc
repnz
mov
mov
sub
sub
pop
cmpb
insl
hlt
sti
pop
jle
and
nop
fcmovnb
clc
cmp
lods
sbb
lret
add
or
inc
jo
xchg
xor
ret
call
mov
les
xor
dec
lret
nop
cmpsb
cmp
inc
push
mov
add
jae
int
jmp
cwtl
out
cld
pop
jecxz
nopl
pop
mov
push
ja
push
int
ja
sub
fs
and
in
push
mov
and
adc
jno
mul
xchg
stos
loop
xchg
and
push
mov
les
lods
scas
inc
ret
and
inc
sub
iret
mov
mov
push
mov
aad
leave
adc
sahf
xchg
sub
xchg
mov
sbb
mov
das
mov
fcoms
dec
pop
pop
inc
jo
mov
dec
sub
outsl
lret
xor
and
inc
call
mov
sub
arpl
inc
aaa
cmp
xor
mov
xor
dec
leave
insl
sbb
and
jae
sub
lahf
dec
bswap
dec
lret
scas
adc
cmc
ret
mov
pop
add
pop
in
dec
repz
xchg
mov
dec
add
add
jecxz
or
fsubr
in
inc
in
mov
push
sbbb
out
inc
fisubs
and
movsl
fcompl
aas
and
pop
outsb
ffree
mov
pop
mov
daa
mov
daa
scas
mov
popf
fs
inc
les
test
inc
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
lret
imul
xor
rcll
rcll
xchg
push
sub
cltd
push
icebp
divb
dec
lock
or
mov
mov
dec
fs
xchg
in
lods
or
out
sbb
mov
sbb
mov
adc
mov
inc
xchg
test
test
icebp
sbb
push
sbb
rclb
leave
mov
xchg
xchg
push
div
cmpsl
adc
aad
mov
das
imul
icebp
push
cltd
mov
add
mov
int
imull
cwtl
push
rcl
fcos
adc
loop
and
mov
mov
je
in
lods
nopl
inc
xchg
scas
add
pop
outsl
xlat
fnstenv
outsl
jge
push
out
or
pop
dec
jbe
jb
xor
pop
cli
add
cmpsl
mov
cmovb
orl
sbb
test
loopne
push
xchg
mov
addl
add
insl
fidivrs
mov
repz
dec
xchg
outsl
push
loopne
jp
loop
hlt
xchg
call
outsb
in
scas
mov
jb
jnp
mov
sub
mov
push
xor
jno
sbb
sub
cmp
inc
lahf
out
outsb
aam
push
cmc
out
mov
jl
xor
mov
loop
fwait
adc
cmp
and
pop
and
add
add
aam
pusha
adcl
add
xchg
push
inc
cltd
into
mov
mov
sbb
jmp
imul
mov
adc
jbe
push
adc
movsl
push
sub
pop
fimuls
icebp
data16
ret
ret
fistpll
loopne
hlt
out
add
idiv
ljmp
dec
pop
sahf
jl
push
jmp
jg
sti
dec
scas
addr16
cmpsb
cmp
aam
sub
test
add
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
jg
xchg
mov
enter
jg
jo
pushf
pop
adc
loop
sbbb
cli
cli
push
jnp
rol
cmp
dec
mov
inc
lods
jbe
or
xchg
add
sbb
adc
inc
cmp
hlt
insb
sub
push
and
das
push
jl
cltd
outsl
mov
loope
test
test
push
es
jl
loop
test
push
sub
insb
or
test
insl
rcrb
and
or
inc
iret
xor
xor
bound
or
lea
add
sub
cld
sbb
mov
nop
sub
push
jecxz
cmp
rcrl
pusha
cmpsb
and
push
mov
test
mov
sbb
or
jns
bound
inc
out
sub
mov
xor
jp
out
sar
xchg
xor
pop
rcll
lods
outsb
loope
xor
or
jle
add
mov
xchg
cmp
dec
pop
in
inc
repnz
sub
xchg
scas
repz
push
push
dec
jb
mov
push
lods
test
test
aas
pop
sub
cmp
push
cmp
xor
mov
xchg
cmpsb
enter
jnp
pop
je
arpl
iret
xchg
mov
outsl
imul
mov
xchg
adc
add
adc
pop
fld
sbbl
aad
ret
lods
adc
lcall
aam
fnstenv
aad
xchg
fs
and
ret
ljmp
fmul
or
jmp
or
and
jl
push
hlt
and
sub
test
and
mov
push
insl
insb
mov
cmpsl
mov
add
mov
sbb
adc
sarl
es
xor
rolb
jbe
inc
fbld
dec
sub
cli
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
movsl
sub
mov
jg
jo
push
aam
xor
mov
xor
or
les
cmc
outsl
cmpsb
dec
cld
fadd
or
and
lret
fsin
push
mov
scas
lea
out
cli
scas
or
ja
push
popf
int
inc
jmp
jmp
sarl
mov
andl
pop
jbe
adc
test
ret
dec
cltd
push
orb
inc
popf
push
dec
mov
icebp
push
mov
lods
mov
dec
adc
lea
push
inc
inc
imul
dec
cmp
mov
cmpsl
movl
gs
push
sbb
pusha
dec
mov
dec
fnstcw
fdiv
jne
out
sub
jmp
jae
push
lret
out
sbb
add
xor
dec
test
divl
ss
bound
push
xlat
mov
jp
mov
sbb
and
inc
mov
xchg
rcrb
xchg
push
mov
inc
jno
ret
in
sbb
pop
imul
sub
jl
pusha
and
pop
cld
xor
scas
jbe
enter
push
jb
scas
pop
dec
les
in
rol
js
inc
adc
cmpsl
jns
push
mov
push
sub
fcompl
mov
mov
add
rep
xchg
mov
js
adc
gs
mov
nop
xchg
push
adc
cmp
adc
push
sbb
mov
bound
pop
cmc
mov
std
ja
sbb
adc
dec
mov
cmp
iret
movsl
inc
mov
mov
adc
mov
mov
jecxz
movsb
xor
sbb
or
paddsb
and
cmp
xchg
stos
pop
inc
and
aas
mov
andl
sarb
int3
jg
push
fs
mov
adc
add
rcll
add
mov
sbb
mov
xor
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
leave
icebp
adcl
jg
jo
sub
mov
cmp
daa
and
and
mov
xor
cmp
xor
bound
xor
cmc
push
data16
dec
cmpsl
out
xchg
mov
cmp
jg
enter
ss
lock
mov
imul
insl
adc
shlb
mov
xor
fs
adcl
fnsave
inc
rol
in
cltd
jns
cmp
fnsave
adc
hlt
aas
inc
hlt
insb
insb
in
aam
xor
adc
out
mov
push
inc
enter
test
faddl
sub
bound
mov
aad
lea
pop
shll
jnp
arpl
sbb
pop
dec
mov
xchg
or
or
push
iret
inc
add
mov
push
push
mov
fsubl
sub
jge
add
pop
test
cmpb
ds
pop
jne
in
cs
jle
enter
test
fs
out
sbb
jle
push
cli
leave
adc
stos
or
je
loope
pop
lret
or
push
inc
add
out
fmull
sub
cmc
popa
or
jecxz
sbb
lahf
mov
add
and
repz
lods
mov
fisubs
je
pop
ret
movsb
or
aam
ret
bound
arpl
mov
outsb
les
int
and
in
mov
clc
lods
stos
lahf
ret
xchg
repz
icebp
fdivs
mov
pop
imul
xor
dec
sub
or
sub
xchg
and
inc
mov
loopne
jl
cmp
pop
cmp
push
hlt
cwtl
cmp
sbb
stos
xchg
pop
mov
pop
push
jb
mov
out
data16
int
lea
mov
pop
fnstsw
addr16
ss
leave
cli
mov
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
pop
mov
jg
jo
sbb
adc
aam
gs
jb
dec
imul
adc
jmp
or
in
mov
movsl
loope
test
mov
andl
out
sarb
lret
jno
mov
or
out
cwtl
out
or
lods
mov
dec
clc
fisubrl
sub
fidivrs
jge
jb
fisttpll
dec
pop
jecxz
jg
inc
in
sub
pop
arpl
iret
xor
inc
cwtl
call
cmp
pop
arpl
cwtl
push
leave
fisubrs
psubsw
mov
adc
jp
sbb
fwait
mov
scas
adc
sti
stc
lahf
pusha
test
popf
jae
jb
shl
push
push
shr
out
sbb
jl
sub
popf
std
mov
roll
cmpsl
ret
mov
adc
push
xor
ljmp
push
mov
out
mov
cltd
je
inc
or
fwait
loopne
xor
popf
or
insl
fs
inc
stos
sbb
or
xor
fidivs
sub
stos
cli
inc
idivl
cld
jno
xchg
out
dec
stc
fistpll
pusha
add
ja
lret
mov
aas
pop
mov
push
push
shrl
out
not
xchg
ret
outsb
cmp
push
jecxz
inc
or
cmp
into
fcmovbe
push
xchg
notl
sub
loopne
aam
xchg
mov
jnp
ljmp
fwait
mov
xchg
xor
orl
xor
ret
ja
ss
and
in
mov
bound
or
xchg
loop
imul
loop
lahf
dec
pop
subb
pop
mov
add
dec
fdivp
out
or
in
add
je
dec
stc
mov
add
jecxz
pop
fdivrs
ret
cmp
mov
sbb
clc
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
sub
mov
imul
jb
in
dec
jle
and
repz
jp
sub
loopne
test
mov
testl
jbe
ss
shrb
jp
pop
bound
shrb
or
subl
mov
mov
scas
enter
mov
push
inc
or
xchg
mov
inc
jmp
pop
push
sbb
mov
sub
data16
stc
jbe
imul
loopne
js
scas
cmp
in
fs
push
mov
xchg
std
sub
insl
test
leave
adc
insb
mov
js
jp
push
xor
enter
imul
sbb
ja
repnz
jl
ds
xchg
mov
insb
sub
mov
das
mov
data16
mov
adc
add
inc
sub
stos
and
push
orl
mov
sub
jle
scas
xchg
inc
cmp
imul
sahf
pop
mov
sbb
aas
mov
fisubs
clc
ret
shll
pop
mov
mov
ss
sub
jle
and
push
mov
sub
fdivrs
test
xchg
lea
insl
lea
fnstcw
repnz
popf
pop
inc
in
in
mov
add
dec
inc
push
jle
xor
mov
and
fsubp
les
xchg
sub
adc
or
or
and
mov
adc
lahf
and
sub
cs
cli
adc
cmp
add
add
stc
pop
mov
sar
jmp
xor
inc
adc
xor
xor
mov
mov
push
cmp
sub
push
hlt
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
and
dec
fcoms
jg
jo
sbb
stos
jns
xor
mov
push
mov
and
mov
leave
and
enter
lret
lds
xor
jg
jne
mov
pop
imul
jb
inc
mull
arpl
xchg
movsb
adc
push
rol
adc
in
jns
and
jbe
jmp
scas
cs
jo
xchg
pop
mov
push
rcrb
jns
cltd
push
cmp
push
mov
fidivrl
cmpsb
sub
mov
subps
bound
pop
or
xor
fstl
shr
pop
lods
mov
loopne
pop
push
je
mov
jl
call
and
negl
adc
inc
inc
jns
adcl
mov
mov
cli
adc
pop
lock
adc
mov
jno
inc
mov
jmp
out
mov
aas
fcoml
out
xor
lret
pop
push
mov
iret
xchg
leave
xlat
daa
cwtl
pop
jb
or
add
mov
push
push
dec
adc
xor
jb
xlat
ficompl
test
mov
jnp
in
pop
add
int3
push
sub
mov
jge
aad
sar
lock
inc
insl
jb
cld
jmp
xchg
xchg
mov
and
cmc
enter
out
xchg
aas
inc
inc
mov
push
stos
insb
test
test
dec
mov
mov
ds
shlb
xchg
jbe
scas
jge
fdivrs
int3
movsb
add
dec
cld
add
cmp
mov
movsb
lods
inc
sub
fnstenv
xchg
in
mov
clc
sub
push
sar
mov
out
mov
shrb
lods
rorb
imul
push
nop
test
loope
sbb
outsl
cmpsl
xor
andb
push
jnp
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
and
mov
fdivl
imul
sbb
movsb
pop
pop
repnz
or
cmp
test
imul
or
sub
inc
or
inc
adc
mov
or
sub
mov
mov
mov
push
in
xor
add
cld
push
xchg
xchg
push
push
pop
jl
std
fistpl
inc
jbe
and
scas
stos
adc
mov
xor
stos
add
mov
xchg
or
nop
jnp
test
sbb
fwait
pop
inc
loopne
jnp
jmp
dec
mov
fwait
mov
push
inc
loopne,pt
mov
cli
cmp
loopne
mov
mov
lcall
push
cwtl
outsl
test
imul
in
popf
mov
pusha
jne
push
add
sbb
test
shll
lods
jb
dec
jl
jb
sbb
cmp
leave
mov
add
push
adc
add
imul
arpl
fcmovnbe
hlt
aas
ds
leave
lahf
lods
movsb
mov
mov
sbb
ljmp
ss
jae,pn
mov
cmp
pop
jmp
or
js
sub
mov
mov
jg
adc
popf
punpckhdq
adc
aam
or
hlt
cmp
mov
pushf
call
inc
mov
roll
push
cmpsb
and
lock
jne
adc
fucom
push
jmp
add
dec
mov
or
sahf
fs
pop
gs
inc
xchg
popa
xor
inc
call
xorl
mov
jl
sbb
out
cs
and
scas
sbb
scas
add
not
xchg
aas
push
jp
es
repz
lret
inc
jbe
stc
jmp
sbbb
cltd
js
mov
jo
pop
aam
fidivl
imul
in
int
loopne
sbb
dec
jp
stos
mov
xchg
scas
cld
push
sub
pop
ret
fs
and
sahf
adc
int3
repz
icebp
dec
repnz
sbb
jns
movsb
shll
push
xlat
push
or
aas
inc
jge
cmpl
mov
fwait
mov
call
adc
cmpsb
xchg
sub
jg
aam
jl
mov
mov
ret
push
or
dec
mov
xor
pop
xorb
sti
inc
dec
pusha
sbb
jle
gs
add
cld
js
enter
cmc
mov
add
add
mov
cmp
dec
pusha
int3
fsubrp
packsswb
xor
push
imul
and
mov
or
out
lds
dec
pop
pop
sti
mov
aam
lock
pop
pushl
sahf
imul
adc
dec
cwtl
in
ss
lret
lret
cmpsb
lret
and
pop
outsl
inc
loope
pop
into
ret
inc
mov
dec
lods
fdivp
push
es
lea
aam
and
aas
inc
xor
ds
xor
shrb
cltd
jno
out
out
scas
sbb
push
nop
sbb
in
out
in
xorl
add
inc
inc
mov
mov
xchg
xor
xor
xchg
inc
jo
xchg
out
addr16
adc
and
jb
lahf
and
mov
std
dec
in
pop
mov
cs
scas
jp
call
inc
push
adc
xor
icebp
jns
adc
repz
jmp
fdivr
rcrl
cmp
out
ljmp
lock
xchg
gs
subb
mov
sbb
testl
jne
mov
add
idivl
jmp
clc
icebp
mov
icebp
ficompl
push
jo
jg
jo
inc
test
mov
repz
fst
jno
inc
std
or
mov
bound
or
sbb
sbb
jbe
xchg
fildll
jp
in
aam
mov
dec
sub
popa
mov
jl
in
icebp
daa
hlt
pusha
pop
mov
jp
xchg
mov
sub
mov
addr16
sti
dec
jge
cmpsb
lret
jmp
mov
ljmp
shrl
lahf
gs
mov
and
fnstsw
jbe
inc
mov
and
mov
movsl
push
ret
xor
mov
xor
add
or
xor
aas
shl
adc
fs
in
das
testl
push
inc
sbb
fadds
sub
adc
fcmovnbe
inc
push
test
movsb
pop
out
push
jo
repnz
stos
inc
bound
pop
popa
dec
inc
ret
lcall
xchg
lahf
arpl
addb
jae
roll
inc
push
dec
jl
test
push
adc
mov
add
mov
loop
xor
jae
test
aaa
cs
sub
repz
mov
or
xor
icebp
jg
test
pop
and
mov
sub
scas
fidivl
repz
mov
scas
in
aaa
fsubrp
pop
push
push
arpl
jbe
fistpll
loop
inc
fiadds
jo
sbb
jo
pop
xchg
mov
sub
xorl
lock
dec
mov
pop
test
mov
stos
das
test
insl
iret
nop
xor
xchg
xchg
or
lret
repz
jl
jb
push
adc
push
add
outsb
mov
test
add
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
adc
scas
jecxz
out
jo
jg
jo
test
pop
and
movsb
mov
out
out
mov
shll
repnz
push
repnz
pop
sbb
sti
push
fdivs
aaa
xchg
and
dec
pop
fwait
cmp
popf
pop
scas
push
xchg
call
lea
enter
das
lret
pusha
in
mov
push
pop
jle
outsb
mov
add
arpl
xchg
lea
rcll
and
xchg
xlat
hlt
dec
xchg
cmpsb
inc
xlat
mov
pop
insb
fwait
or
jp
outsb
jae
lcall
and
cwtl
xchg
ret
jge
data16
testb
mov
les
adc
dec
jne
cs
fs
popa
cmpb
xlat
outsl
rcrb
push
cmpb
dec
cltd
test
mov
cld
mov
sahf
push
loop
cwtl
sbb
pshufw
out
leave
or
mov
or
popa
jmp
pop
mov
inc
cli
add
or
mov
xor
inc
jecxz
mov
in
pop
imul
in
add
mov
dec
test
sbb
mov
add
or
je
xchg
push
xchg
xchg
rolw
jae
cld
fldenv
adc
lea
enter
lcall
inc
arpl
and
test
pop
out
lods
add
push
decl
adc
cmp
inc
lods
pop
scas
mov
inc
adc
bnd
sbbb
jns
repnz
cld
and
std
out
insb
or
jmp
mov
sar
cmp
mov
mov
loop
inc
mov
out
xor
pop
jno
scas
sbb
adc
aad
outsb
inc
or
and
loopne
mov
aad
out
sub
and
ffreep
jmp
mov
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
insb
dec
add
in
jo
jg
jo
stc
xor
movsl
push
daa
dec
lahf
les
sbb
push
push
jg
inc
or
sub
fwait
dec
jle
and
and
les
cmc
mov
int3
jge
aad
xchg
or
push
shr
loopne
xchg
dec
hlt
push
daa
dec
aam
jge
sbb
dec
fldt
in
imul
dec
xchg
sub
aam
cli
imul
sub
add
push
push
dec
mov
mov
pop
cmp
sbb
repnz
mov
repz
sub
pop
mov
jmpw
les
inc
xor
insb
adc
fsub
push
in
int3
cmp
sbb
pop
xor
cltd
jecxz
inc
in
xchg
gs
lods
pop
lods
push
popa
lock
hlt
es
or
mov
das
xorb
lahf
xor
ds
ffree
or
or
push
out
in
lcall
insb
add
mov
xlat
dec
mov
mov
dec
jns
in
xlat
shll
js
scas
jbe
in
sub
xor
mov
aad
ror
bound
mov
mov
out
lea
sbb
aad
les
mov
sbb
cli
push
sbb
out
push
imul
jmp
sub
pusha
lds
cmpsb
scas
mov
pop
shll
insb
and
xchg
or
inc
add
adc
sbb
pop
jo
sahf
sub
pop
outsb
xor
push
incb
fimuls
sbb
push
dec
outsl
mov
push
or
xor
popf
fdivrl
loope
add
sbb
cmp
dec
mov
and
bt
ljmp
pop
push
mov
out
cli
jne
jge
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
inc
mov
jo
jg
jo
adc
jl
lods
stos
stos
mov
mov
sbb
xchg
test
xchg
mov
lcall
and
lcall
test
loopne
mov
ljmp
ja
jnp
cwtl
pop
adc
jmp
jae
cli
rcll
inc
daa
sub
mov
fldcw
mov
nopl
sub
in
add
xor
out
push
nop
push
je
jp
add
pusha
lock
mov
sahf
xor
add
cmp
outsb
mov
dec
stos
adc
dec
jbe
jo
lret
outsl
lret
cltd
or
out
add
mov
sti
xchg
inc
pop
fs
adc
mov
mov
mov
das
shlb
jp
and
addl
mov
adc
lock
jo
gs
fabs
insl
cli
or
fstl
jecxz
shrl
sub
and
into
mov
outsb
inc
dec
insl
ror
orb
data16
mov
ljmp
push
jge
scas
dec
lahf
loope
mov
xchg
push
mov
push
add
es
shl
bts
scas
cmp
jmp
imul
call
add
mov
xchg
sub
insb
ret
dec
cmp
into
std
loopne
xor
dec
mov
idivl
mov
or
test
jne
adc
in
mov
stos
jno
daa
fidivrl
inc
sub
out
div
dec
mov
push
ljmp
and
sbb
xchg
dec
inc
jge
push
sbb
xchg
adc
mov
adc
push
fmuls
sbb
or
cmpsw
cltd
xchg
mov
or
mov
out
inc
adc
dec
movl
movsb
js
mov
pop
enter
fs
int
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
bound
jo
jg
jo
and
bound
fdivl
enter
out
loopne
stos
xor
sbb
adc
or
neg
insl
fsts
test
sbb
pop
mov
xchg
mov
push
mov
lods
addr16
mov
xchg
rcll
pop
push
aad
adc
push
movsl
add
enter
mov
je
mov
adc
xor
jl
aad
push
js
mov
mov
inc
sub
sarb
add
fildll
dec
mov
xchg
pop
push
sti
ja
pushf
cmp
pop
mov
jns
lea
icebp
sbbb
outsl
inc
mov
lea
xchg
imul
dec
xchg
cld
orl
mov
repz
cmpsb
sub
addr16
mov
pop
lock
and
xchg
neg
rolb
rol
mov
dec
xlat
jmp
cmp
mov
mov
lret
dec
ljmp
loopne
sti
xor
enter
lods
pusha
mov
cmp
in
sub
sbb
pop
outsl
lock
dec
pushf
pop
or
xor
mov
jb
leave
fwait
xor
cs
jmp
leave
les
popf
fcoml
xor
push
pushf
xchg
sub
loopne
loope
and
inc
repz
inc
mov
shll
mov
mov
mov
add
inc
push
or
mov
mov
add
mov
jae
jno
mov
hlt
or
aas
loop
ja
jo
xchg
jg
jo
out
aas
xchg
jne
cmp
jno
cmpsb
fisubs
fs
in
lret
cs
xchg
jnp
jne
push
pop
mov
lcall
mov
sub
cltd
or
ja
sahf
xor
mov
add
sbb
int3
lret
or
lds
ds
call
testb
inc
sub
ss
loope
xchg
shl
and
add
dec
and
in
dec
inc
aam
movsl
jecxz
repnz
int3
xor
aad
add
aas
sbb
mov
jg
aaa
adc
mulb
and
iret
cmpsb
mov
popf
in
sarl
jae
pop
mov
insb
sbb
mov
pop
out
jae
mov
push
outsb
jo
in
mov
filds
std
in
push
repnz
lea
mov
fsubp
int3
mov
jle
data16
clc
cmp
rorb
lahf
mov
dec
not
mov
rorl
jnp
out
push
dec
mov
cmpsb
xlat
jb
or
cmp
mov
add
jmp
xchg
mov
inc
push
xchg
ret
mov
xorl
test
cmc
sbb
mov
pop
movsl
jecxz
cld
call
addr16
rolb
sti
cs
scas
add
pop
jle
test
stos
sub
test
loop
adc
inc
adcl
mov
js
sbb
arpl
icebp
xchg
pop
ljmp
inc
out
or
test
jecxz
les
jb
add
sbb
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
sub
jo
xchg
jg
jo
fisubrs
pop
mov
aad
mov
mov
insl
xor
fwait
dec
cmp
xor
cmp
lret
stos
mov
sahf
ficoml
push
inc
jg
cwtl
xchg
push
cmpsb
std
xchg
imul
jo
or
shll
pop
sub
out
sbb
adc
shll
nop
cld
jge
cmp
or
das
and
cmc
stos
and
lock
sbb
in
insl
pop
mov
sbb
pop
rolb
out
push
popl
cld
add
cmpsb
stc
xchg
hlt
jns
add
jae
cmp
xchg
push
pop
pop
pusha
mov
in
aam
cwtl
fcoms
and
rcrl
mov
inc
pop
cld
push
jle
xchg
lcall
lcall
mov
jl
inc
test
shlb
dec
leave
ljmp
xchg
sbb
cmpsl
inc
cltd
sbb
adc
daa
test
arpl
push
push
out
jbe
sub
xor
out
jg
gs
sti
sar
inc
add
mov
mov
xor
jl
push
adc
shl
dec
sbbl
adc
adc
ret
push
pop
aam
negb
decl
push
mov
iret
xlat
in
cmp
xor
ret
dec
call
add
call
inc
sbb
xchg
adc
outsl
jo
mov
jne
out
add
movsb
mov
mov
push
push
shll
pop
orb
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
mov
jmp
jo
jg
jo
and
dec
lock
aad
and
jge
inc
ds
or
cltd
out
mov
cmpsl
pop
mov
pop
jg
fidivrl
sub
rorb
xor
xchg
or
cmp
fcmovne
mov
push
xchg
test
xor
sbb
in
aas
jno
pop
fwait
sahf
add
mov
jp
jns
ret
mov
xor
or
dec
std
loope
inc
xchg
mov
mov
cmp
pop
xor
dec
clc
sub
lahf
jae
pop
in
shl
mov
adc
push
sub
push
cltd
xlat
in
jle
aam
jno
xchg
mov
mov
pop
push
fwait
jp
test
stos
bound
lcall
popf
push
mov
outsb
push
jae
out
jmp
cmpsb
movsb
aas
xchg
xchg
xchg
xchg
lods
lds
std
nop
xchg
in
arpl
or
mov
jnp
es
mov
xchg
fs
or
add
sbb
movsb
leave
insl
aas
imull
mov
clc
pop
inc
ss
nop
fisttpl
fnsave
and
es
bound
sub
push
xlat
insb
add
cmpsl
and
daa
bound
jns
fbld
out
iret
add
out
mov
jle
outsl
xlat
out
shrb
fcmovnbe
xor
mov
cmp
dec
mov
iretw
aad
and
das
test
in
mov
mov
adc
mov
fisttpl
jae
dec
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
pop
jno
dec
inc
ljmp
sarb
ret
pop
fs
ds
push
loop
add
xchg
xlat
add
lods
inc
xor
bound
and
jae
call
or
push
mov
push
inc
jo
mov
jo
das
fst
lret
mov
pop
loopne
push
jecxz
adc
testl
loopne
loopne
cmp
lock
push
or
mov
push
loop
pop
imul
fistps
lahf
fwait
xchg
pop
xchg
or
shlb
or
cmp
stc
adc
cmp
push
aad
mov
xor
sub
push
xor
pop
lret
cs
rorb
xchg
cli
pushf
or
jns
iret
aaa
fistps
jnp
popf
xor
lret
push
orl
inc
mov
lods
stos
sti
cld
adc
and
test
xchg
sub
and
cmp
inc
outsb
push
mov
jb
hlt
cs
xor
dec
test
mov
bound
ret
and
clc
movsl
mov
and
aas
je
mov
cwtl
mov
xchg
cmpb
jo
pop
inc
jns
adc
aaa
fwait
mov
pushf
jno
loop
cmp
fimuls
arpl
mov
cmp
test
sbb
push
scas
insl
outsb
das
pop
shrb
fidivrl
add
jecxz
ret
mov
cmpsl
std
push
push
ret
sarl
out
push
std
pop
sub
sub
clc
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
sahf
fucomi
jo
xchg
jg
jo
gs
push
jns
or
jno
mov
ss
aad
shlb
xor
mov
popa
xor
sbb
lret
fisttpll
mull
clc
pop
cwtl
cld
sbb
and
cld
adc
jmp
scas
out
jle
insl
ret
stos
dec
fcmovbe
jge
xchg
sub
enter
imul
dec
data16
pop
dec
and
dec
stos
test
xchg
imul
bound
pusha
xchg
adc
xchg
ret
orb
sbb
or
inc
js
mov
scas
mov
xchg
aam
or
cmp
aaa
loope
inc
mov
lods
imul
jb
lret
pop
and
mov
sbb
lods
ds
or
out
repz
divl
push
mov
inc
pop
or
push
push
inc
dec
popf
mov
out
or
ljmp
add
mov
mov
or
push
dec
lahf
mov
mov
aad
scas
sti
add
lcall
mov
cmc
test
jmp
and
nop
mov
cmp
xchg
ljmp
pop
pop
das
lahf
repz
loope
jg
hlt
repnz
divb
orl
fsubrs
mov
loope
jecxz
adc
push
jns
add
cwtl
rorb
repz
int3
inc
mov
push
xchg
es
popa
add
add
add
icebp
mov
push
adc
jo
jg
jo
iret
repz
sub
jp
fwait
inc
in
orb
adc
pop
push
cmpsl
push
jecxz
lods
in
jns
cmp
dec
lret
js
xor
mov
mov
dec
stos
sbb
push
das
aas
cmp
jmp
sbb
add
cmp
sahf
lds
dec
jae
jecxz
call
testb
add
and
mov
push
dec
cmp
test
mov
xor
mov
in
daa
mov
iret
clc
and
mov
loope
push
push
lret
sar
and
sbb
mov
outsl
mov
dec
mov
sbb
je
jmp
or
xor
clc
pinsrw
popf
rcl
loop
push
jp
loopne
cmpsl
scas
sub
ret
inc
and
jmp
sbb
repnz
cmp
scas
maxps
pop
int
divl
cmp
lods
inc
call
or
cmp
clc
mov
daa
push
scas
repnz
sub
xor
dec
cmp
and
pop
ffree
xchg
fiaddl
fstpt
sbb
ljmp
shll
cli
jecxz
es
push
jns
cmp
movsb
or
cwtl
jnp
into
jl
aaa
xchg
mov
cwtl
sub
push
push
scas
and
insb
jne
push
cmp
dec
xor
inc
jmp
test
xchg
sbb
xor
leave
ret
add
pop
out
imul
xchg
ret
cmpsl
adc
lahf
setno
test
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
ss
xchg
cmc
jo
xchg
jg
jo
xchg
loopne
inc
imul
call
ret
stc
test
jmp
dec
mov
ljmp
mov
cmp
mov
xor
bswap
lea
ds
jle
aas
rcl
mov
jp
inc
movmskps
push
mov
and
outsl
rclb
mov
je
and
test
jne
ret
insl
mov
jge
aaa
jl
mov
pop
outsb
int
dec
fbld
pushf
repnz
mov
jp
push
and
adc
movsl
mov
scas
xchg
xor
pop
xor
mov
add
pop
sub
lods
mov
add
and
lods
aad
insl
fwait
dec
insl
fld
xorb
push
rol
int
pop
in
aad
and
push
xchg
lret
lock
push
out
scas
xor
mov
xchg
sbb
repnz
push
adc
mov
dec
cltd
jne
mov
or
jp
mov
jg
push
sub
xor
push
test
lea
push
test
cmpsl
repnz
sbb
iret
test
shl
pop
cmpl
imul
les
shlb
jb
inc
stc
mov
cltd
testl
movl
sub
into
jb
jnp
push
mov
mov
loop
sti
mov
out
lock
xchg
mull
add
xlat
jns
cmpsl
jnp
push
mov
cld
pop
ret
mov
sub
inc
or
or
mov
add
frndint
std
imul
mov
xor
leave
sub
jo
xchg
jg
jo
xor
cli
and
enter
in
and
outsl
andl
or
fimull
je
sbb
in
sbb
out
pop
movsl
test
push
inc
je
sub
sub
icebp
cmp
push
dec
loope
ss
mov
jbe
aaa
add
jge
xchg
adc
push
add
scas
imul
mov
addr16
sbb
pop
shrb
fwait
lcall
inc
dec
push
sub
imul
jbe
add
mov
leave
dec
cmp
xchg
into
mov
fidivs
mov
push
imul
rorb
mov
fidivrs
mov
cmpsb
jae
sub
idivl
dec
shll
xor
jne
add
cmc
or
jnp
in
aam
adc
fstl
das
sbb
movsb
or
xor
push
aad
lret
loopne
adc
or
fwait
rcll
lret
pop
cmp
mov
aas
mov
mov
cltd
enter
dec
fisubl
test
mov
sub
aas
shlb
and
in
xor
mov
out
mov
shll
sbb
push
loope
dec
inc
test
push
es
repz
cli
inc
mov
cwtl
xchg
adc
sbb
mov
mov
or
sub
popf
xor
lcall
xor
in
xchg
shrb
movsl
loopne
jge
mov
inc
pop
xchg
sbbl
mov
add
jmp
hlt
sbb
rep
cmp
aaa
or
iret
aad
bnd
xchg
jg
jo
cmp
repnz
mov
iret
pop
gs
and
push
dec
imul
int
ficomps
dec
out
xchg
mov
jnp
adc
cmc
cld
mov
pop
mov
fbstp
xor
hlt
and
femms
jo
pushl
push
dec
mov
movsl
sbb
jae
xchg
icebp
add
jns
jo
xchg
sub
pop
mov
test
adc
mov
das
aam
scas
cmpsl
pop
xor
adc
repz
push
or
fcoml
shrb
pop
lret
cli
movsl
sbb
popa
enter
adc
pop
jmp
imul
fisttpll
mov
rorb
jl
mov
fsubs
mov
sub
adc
dec
dec
push
das
outsl
insb
test
enter
cmc
into
fcmovnb
ss
add
sbb
pop
push
bound
dec
movsl
cmpsb
insl
dec
lcall
repnz
clc
push
or
mov
or
ja
sarl
or
fidivrl
xchg
mov
fldl
add
lcall
daa
inc
sarb
test
jg
xchg
add
sti
js
mov
inc
ds
and
loopne
cwtl
push
movsb
push
mov
in
mov
es
push
jp
pop
ja
mov
mov
sbbb
in
mov
das
lea
inc
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
adc
xchg
jg
jo
mov
popa
gs
in
push
out
mov
push
out
sub
push
nop
jecxz
bound
arpl
lock
divb
sub
aaa
cli
mov
and
outsl
outsb
adc
dec
bound
dec
cmpsb
cmpsb
xor
out
push
xor
fadd
cmpsb
jo
adc
xor
aad
inc
out
push
adc
mov
push
mov
call
les
andb
push
jmp
lock
sub
sub
mov
mov
push
pop
stos
xchg
stos
dec
lods
fsubl
lods
push
insl
movsl
adc
cli
cmp
or
mov
pop
pop
pop
test
sbb
or
cmp
xchg
inc
sbbl
rolb
or
xor
out
mov
loopne
mov
test
cmpl
shrb
jmp
sbb
cld
ret
sbb
scas
inc
test
xor
pop
jne
insl
iret
jg
fidivrs
sbb
cmp
jecxz
mov
add
icebp
cmp
dec
fisubl
cmp
mov
xor
jno
enter
add
in
xor
jge
test
stc
push
lret
dec
pop
stc
mov
gs
enter
xor
lods
xchg
or
sub
iret
mov
cmpsl
loopne
jno
cli
push
cmp
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
mov
outsb
insl
xchg
cltd
sub
cmpl
aas
cmc
gs
stc
adc
in
imul
sub
loope
cmp
xchg
dec
shlb
lock
loope
lret
fsubs
out
xchg
mov
mov
xchg
fdivs
xlat
ret
mov
mov
push
xchg
adc
jbe
pop
sub
sbb
loopne
out
and
fldenv
push
repz
loope
sub
or
fldenv
cmp
adc
fnstcw
jo
sbbb
lret
push
enter
cmp
lods
push
sub
dec
sti
inc
or
jp
mov
xchg
mov
loop
push
jge
sbb
mov
jnp
jbe
xchg
mov
ret
xchg
sbb
pop
dec
sub
sub
popf
pop
and
test
cmp
and
sarl
inc
ficoms
mov
add
popf
push
data16
je
cmc
cld
pop
adc
insl
aad
fildll
lods
test
sbb
sub
clc
hlt
fsubs
ds
cmpsb
or
shrl
mov
mov
loop
and
sub
sbb
lret
fcmovnb
dec
lods
xchg
jno
enter
cmp
push
addr16
push
sub
dec
inc
add
mov
inc
movsb
add
sbb
xor
mov
mov
mov
sub
fidivrs
push
lods
cmp
sahf
or
and
xor
je
pop
or
sbb
mov
dec
pop
loope
adc
arpl
int3
call
add
or
pusha
jb
xchg
test
loope
rclb
addr16
in
in
dec
add
sub
ret
std
push
sbb
push
inc
jle
mov
sbb
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
jo
jb
jo
lods
jle
pop
jns
sbbl
jle
fsubs
inc
movsb
push
xchg
inc
jb
es
jl
push
xor
mov
sbb
push
jns
fsubs
mov
aaa
int3
cmp
lahf
mov
add
divl
mov
xor
xchg
repz
iret
mov
sbb
dec
and
fisttpl
shll
jl
notl
xor
enter
aaa
fistl
negl
mov
call
imul
out
and
icebp
dec
inc
xor
sub
rcl
orl
test
push
mov
jbe
mov
test
ss
enter
into
out
decb
insb
add
sti
cwtl
inc
jle
jo
pop
mov
inc
xchg
inc
push
or
insl
testb
push
push
xchg
sarl
add
mov
mov
mov
cmp
data16
xchg
jae
hlt
or
ds
imul
sahf
jecxz
add
stos
pop
inc
jo
xchg
add
pop
arpl
stos
fildl
pop
jo
xor
push
popf
mov
lret
test
arpl
mov
flds
sbb
into
mov
mov
sahf
push
je
adc
xchg
xchg
iret
fcomps
xor
out
in
push
fwait
mov
xor
repnz
xchg
les
iret
bound
iret
sbb
es
das
sti
xor
ret
clc
push
aaa
pop
mov
or
leave
xor
jb
mov
and
xchg
sub
cld
xor
je
imul
in
pop
jb
pop
fsubrs
mov
xchg
je
arpl
inc
fdiv
cmovno
pop
loop
adc
test
fwait
in
lea
jne
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
inc
sti
jge
jo
jb
jo
push
popa
cltd
mov
ljmp
outsl
adc
scas
into
adc
insl
mov
and
stos
and
ljmp
scas
and
add
insl
repz
call
lret
sbb
sbb
lret
shll
je
repnz
andl
push
sbb
stc
or
rcrb
push
adc
pushf
rcpps
dec
fs
mov
js
lret
lea
pop
mov
arpl
sub
call
and
shlb
mov
cmp
pop
cli
mov
push
je
xor
lods
mov
xchg
xchg
cmp
push
dec
adc
ret
in
test
les
lods
push
or
lock
pop
inc
sub
push
leave
sarb
or
scas
push
add
inc
jp
mov
enter
xor
insb
mov
enter
sub
mov
ds
test
push
cltd
lcall
lret
push
scas
test
mov
inc
jo
testb
dec
rcrb
ja
imull
insb
nop
jmp
ljmp
pop
xchg
cltd
or
inc
je
es
cmp
cmp
sbb
lods
movsl
insb
divb
out
inc
insb
lds
push
out
and
dec
sbb
rorb
sbb
mov
pop
aaa
pop
int3
xchg
xor
mov
incl
jno
shll
jmp
call
push
xchg
add
push
sbb
iret
jno
add
sbb
xchg
pop
or
cmp
lea
add
ds
pop
aaa
jnp
scas
movsl
cmp
pop
mov
popf
fisttpl
push
xchg
jecxz
loopne
jge
xchg
mov
out
add
in
lahf
movsl
push
jns
cmp
jg
pushf
push
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
xchg
mov
jo
jg
jo
addr16
outsb
add
sub
mov
jg
sub
cmp
adc
incb
adc
lea
mov
outsb
out
jno
pop
in
fld
cmpsb
mov
jecxz
inc
inc
fwait
cmp
xor
fidivrl
add
scas
out
inc
add
int3
adc
inc
imul
roll
mov
pop
dec
add
aad
ljmp
aam
enter
mov
sar
and
xchg
cmc
pusha
cmp
pop
adc
xor
and
mov
jle
inc
cmp
cltd
lock
mov
test
mov
pop
xor
in
lret
push
es
and
in
and
sti
xor
stos
xor
adc
inc
dec
out
push
das
sbb
mov
cld
scas
push
pop
push
sbb
cltd
inc
push
mov
jl
pushf
mov
rol
jo
je
sbb
lods
cs
call
cmp
dec
mov
inc
sbb
into
jmp
subb
and
sbbl
rol
jne
out
jo
sbbb
or
xor
and
xchg
xchg
subb
insl
jnp
mov
out
cld
fisubrs
or
and
cmpsb
inc
popf
sbb
aas
loop
bound
jns
mov
cmpb
pop
loop
cmp
pusha
sub
mov
inc
adc
dec
add
cmp
sub
push
or
mov
popf
js
out
mov
jmp
pop
jmp
pop
pop
or
ret
mov
mov
xlat
dec
or
sub
mov
dec
fisubrl
inc
push
cmpsb
cld
lcall
outsl
or
jp
cs
mov
stos
in
xor
das
lods
add
or
jmp
jnp
xchg
les
sub
sub
jo
jb
jo
ss
sarl
pop
lea
sub
xor
ds
in
ss
pop
pop
lahf
push
or
into
and
shl
jp
push
std
pop
leave
lahf
xor
mov
xchg
addr16
outsl
mov
xor
icebp
xchg
mov
in
push
leave
dec
xlat
into
sarl
jg
into
adc
or
push
idivl
adc
ss
pusha
inc
je
je
and
add
mov
sub
fdivrl
rcrb
andl
shlb
loop
cmpsb
jne
jae
pushf
adc
or
dec
jae
xor
sarb
cmp
lahf
xor
inc
rolb
int
push
mov
mov
or
repz
movsl
ffree
push
inc
jo
xchg
jo
adc
mov
jle
or
xor
inc
push
aas
jno
scas
push
cmc
out
dec
inc
enter
fidivrs
push
aam
or
sub
cld
cmp
jnp
aas
pusha
pop
adc
add
adc
jmp
int3
push
jle
push
mov
mov
test
or
cmp
sub
adc
push
call
sti
inc
cli
inc
sub
push
ret
sub
fs
inc
icebp
in
adc
mov
and
inc
adc
dec
sub
add
popa
sub
cmp
add
xor
jp
sbb
es
mov
push
subl
das
mov
hlt
aad
std
cmp
push
in
dec
push
add
loop
inc
sti
xchg
loopne
stos
incb
xchg
or
dec
push
clc
add
lock
inc
pop
mov
inc
pop
mov
lods
push
hlt
mov
or
xchg
je
push
leave
out
mov
mov
sar
inc
push
lods
mov
sub
ss
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
shll
mov
test
leave
jle
jo
push
pop
iret
aad
addl
shll
in
arpl
xchg
and
dec
int3
cmp
scas
les
gs
lods
cli
pop
sbb
jo
cli
mov
push
fists
xchg
dec
and
mov
mov
push
out
mov
repnz
push
loop
and
ficompl
in
mov
loop
repz
cmp
inc
arpl
outsb
addr16
cmpsb
cmp
push
inc
js
sub
insl
add
or
adc
stos
aaa
push
mov
dec
clc
pop
and
inc
pop
dec
mov
xchg
loope
aas
mov
roll
iret
dec
mov
fwait
fwait
or
jae
sbb
iret
dec
fsub
mov
adc
shrb
jno
in
in
or
shrb
fucomi
lcall
mov
dec
mov
add
add
push
ja
mov
orl
iret
jge
jge
scas
xchg
sbb
gs
push
and
jbe
xrelease
xor
fisttpll
push
push
icebp
pop
ficomps
cmp
into
jb
xlat
xorl
sbbb
jbe
fbstp
movsb
test
xchg
push
mov
sbb
notb
iret
xchg
rcl
mov
mov
xchg
pop
mov
loopne
icebp
sbb
cmp
movsb
inc
cmp
or
jae
int
shll
test
rolb
jle
xor
push
loopne,pt
push
in
lods
pop
pop
push
and
imul
cmp
xchg
mov
outsb
pop
jmp
loopne
rcrl
shl
fisubrs
or
xor
pop
or
pop
mov
lret
and
in
xor
in
jns
push
jae
sub
sarl
pop
inc
adc
stc
jo
dec
push
xor
repz
push
cs
xchg
push
in
and
sub
testl
inc
int
popf
rol
stos
stc
aas
test
jnp
fildll
fucomip
add
xchg
sbb
dec
dec
pop
nopl
popa
icebp
lret
sub
mov
adc
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
sahf
je
scas
int3
xorb
jle
jo
adc
or
cmc
dec
xchg
cmpb
add
f2xm1
and
ret
inc
cmpsb
xchg
cld
repnz
mov
adc
xchg
push
push
stos
push
adc
mov
jbe
sub
in
pop
pop
enter
lock
fdivl
bound
lret
int3
mov
and
mov
sbb
mov
inc
clc
jecxz
or
push
rcl
add
mov
sbb
lcall
xchg
adc
lods
das
cltd
outsb
scas
jae
xchg
cmp
pop
jne
xor
mov
arpl
ss
cmp
jnp
lcall
xor
sbb
jne
lds
pop
pop
push
add
ss
sbb
xor
adc
or
mov
pop
paddsb
mov
test
cmpsl
and
in
mov
cmpsl
jns
push
adc
mov
add
lcall
fildll
dec
lcall
aaa
ja
add
leave
aas
imul
repnz
shll
adc
sub
repnz
push
shl
and
std
and
cmp
mov
in
inc
push
sbb
shrb
push
pusha
out
cli
xchg
jb
outsb
add
mov
sbb
lea
jo
les
mov
sub
mov
ljmp
es
push
je
jb
mov
cmp
fsubr
out
mov
jg
inc
xchg
push
sbb
mov
jmp
add
xor
mov
or
out
je
dec
aas
and
pop
out
inc
ljmp
sbb
mulb
cwtl
jle
arpl
pop
and
imul
jg
mov
sub
jle
jbe
and
jns
pop
adc
dec
in
xchg
insb
jne
inc
jb
dec
sub
push
les
dec
and
fstl
outsl
fcmovnu
mov
mov
sbb
shl
sbb
cmp
sbb
jle
in
jecxz
int3
iret
jno
xor
mov
jge
add
push
lcall
jo
ret
add
add
and
dec
xchg
sarb
jo
dec
scas
out
xchg
lret
mov
mov
imul
sub
dec
mov
inc
add
in
mov
outsb
cwtl
fs
test
jg
or
add
fsts
or
roll
and
mov
xchg
lds
dec
adc
jle
push
sub
sub
in
pusha
xchg
jbe
xchg
sub
rorl
push
jp
mov
dec
or
inc
repz
aas
loopne
xchg
outsl
pushf
aaa
fisubl
loop
pop
add
or
push
fsubr
mov
jmp
mov
or
sahf
sbb
rclb
dec
in
push
fsts
dec
mov
enter
sbb
push
push
rcl
sarl
rcrb
cmc
jb
dec
inc
ljmp
cmp
or
mov
in
rorb
lods
inc
mov
jne
arpl
int3
inc
add
shll
cwtl
dec
fiadds
mov
shrl
jg
fdivrs
lret
and
lock
into
leave
dec
sbb
push
mov
sbb
lods
inc
adc
les
add
stc
clc
decl
and
out
les
hlt
scas
sahf
adc
or
xchg
jmp
pop
movsb
mov
faddl
cmp
lret
addr16
int
fld
repz
inc
shll
xor
push
xlat
jo
cld
shrl
clc
sarl
push
push
add
xorl
jno
imul
shlb
in
xlat
sbb
add
insl
push
pextrw
sub
iret
mov
jge
mov
in
lock
fstpt
mov
clc
pop
cmc
das
inc
scas
jmp
imulb
mov
jnp
jne
cwtl
inc
ret
rorl
xor
xor
ss
jmp
test
call
dec
add
int
jecxz
roll
ja
shll
fwait
mov
ja
pop
fbstp
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
scas
pop
jle
jo
dec
jge
jo
jae
jnp
push
jnp
dec
fildll
out
jae
mov
xchg
mov
inc
xor
xchg
push
mov
mov
bts
icebp
test
cld
and
xor
adc
stos
jle
mov
out
inc
imul
push
xor
sar
mov
sbb
stc
xchg
iret
fwait
cmp
mov
pusha
fistps
ja
push
icebp
mov
insl
pop
insl
dec
mov
sub
gs
jle
xchg
mov
sbb
mov
pop
inc
adc
js
cld
loop
adc
mov
xor
xchg
pop
sub
ss
insb
xor
cli
jecxz
inc
and
xchg
sub
fimuls
testl
pop
gs
repnz
and
sahf
push
mov
pop
mov
outsl
fwait
adc
mov
lret
mov
adc
jmp
mov
rorb
aam
lods
jle
dec
and
xor
push
fwait
out
lahf
cltd
loope
test
js
enter
adc
scas
jecxz
dec
mov
sbbb
sarb
mov
cmp
repz
cmpsl
cmp
test
adc
test
mov
xor
loop
nop
out
add
imull
inc
ficoms
mov
cmpsl
pop
popa
push
cltd
adcb
mov
push
mov
or
and
adc
fwait
stos
lea
pusha
cmp
aas
cmpl
cmp
data16
sub
inc
aam
stc
mov
dec
in
pop
ficompl
inc
popf
mov
dec
adc
mov
cmp
imul
adc
pop
xor
mov
inc
push
adc
popa
pushf
and
mov
cmpsb
cld
bound
mov
lea
mov
push
jno
adc
int3
xchg
imul
daa
aaa
push
lods
adc
xchg
scas
jns
xchg
pop
shrb
pop
push
mov
fcoml
push
pop
out
bound
repnz
inc
call
add
push
jecxz
sub
push
adc
xor
inc
inc
lock
fmul
enter
popw
pop
insb
sub
add
daa
inc
dec
not
cmp
clc
xchg
mov
xor
mov
jns
dec
movsl
and
test
lret
jg
mov
ficoms
add
sbb
jge
xorb
mov
data16
cmp
lahf
mov
pop
cmp
mul
xor
out
and
pop
dec
cltd
fstpt
out
push
add
jo
xchg
dec
dec
sti
lahf
fstl
insl
cmp
inc
hlt
bound
jl
ss
dec
insl
inc
lret
sbbb
cli
and
ficomps
js
js
mov
xchg
mov
cmp
ret
jne
flds
inc
lods
nop
in
mov
daa
mov
sahf
out
das
adc
inc
shrl
insb
jo
inc
lock
adc
add
jo
mov
cwtl
cmp
pop
in
xchg
pushf
sub
mov
shrl
arpl
into
mov
inc
sar
andl
mov
lea
jnp
je
les
cwtl
pop
lret
and
into
or
inc
cltd
fucomp
sub
aad
mov
orb
rolb
sbb
popa
repnz
jle
jae
add
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
shr
push
mov
dec
jge
jo
sub
jbe
and
jmp
fldenv
scas
jp
pop
mov
and
ja
xchg
jnp
dec
shrb
fs
lock
dec
dec
sahf
stc
add
lcall
push
lods
xchg
xchg
outsl
pop
mov
jle
mov
adc
std
call
pop
sub
mov
inc
push
pop
insb
sub
sbb
mov
cmp
push
shll
test
add
in
jne
mov
jnp
fsub
lock
push
push
popa
ja
and
aam
cmp
or
icebp
std
xchg
add
and
jnp
out
mov
in
adc
fs
add
ja
xchg
mov
repnz
fildll
cmp
scas
outsl
cmp
test
or
outsl
sub
fnstenv
repz
push
and
xchg
sbb
sahf
push
ret
adc
jae
jecxz
add
jne
mov
push
pop
mov
subb
pop
inc
shll
xor
outsl
jmp
andb
lea
daa
mov
inc
mov
xor
mov
add
mov
pop
out
fxch
out
lds
cwtl
inc
imul
mov
mov
repnz
out
dec
pop
jno
lods
sbb
rol
push
imul
ja
je
xorl
sbb
cmc
shlb
out
mov
pop
rorb
xchg
mov
mov
in
jne
xorl
inc
inc
out
out
pop
xor
rorl
ds
outsb
push
jnp
jp
decb
add
call
lret
sub
test
mov
or
mov
jmp
inc
or
and
loopne
jb
pop
js
jp
hlt
mov
into
cmp
or
mov
repnz
mov
cwtl
adc
dec
sar
repnz
mov
ljmp
adc
nop
mul
jns
fwait
adcl
ja
pop
sbb
cmp
sub
pop
dec
out
dec
inc
xor
loopne
mov
lock
push
fiaddl
mov
jp
jo
add
sub
pushl
pushf
mov
rorl
xor
test
sub
lds
movsb
mulb
inc
cmp
iret
outsb
sub
loope
test
cmp
aas
ja
lahf
sbb
add
pusha
int
aaa
aam
push
orb
fs
aas
ret
dec
xchg
and
xchg
add
dec
xlat
rcl
or
jnp
popf
pop
mov
jae
mov
fwait
sbb
ja
jmp
call
xor
sub
xor
lcall
adc
or
pop
jecxz
adcl
mov
mov
fcompl
jno
ror
pop
icebp
inc
adc
stos
push
adc
popf
push
jae
jg
cmp
in
xchg
daa
mov
add
movsl
dec
cmpsl
cwtl
push
adc
xor
push
outsl
shr
cmp
cmc
insb
addr16
sbb
jle
adc
sti
ret
or
adc
out
pop
loope
stc
pop
or
subl
call
pop
adc
movsl
out
out
dec
adc
lods
inc
scas
inc
mov
and
movsl
sub
mov
jnp
xchg
iret
repnz
sbb
push
clc
jecxz
cmpsl
testl
ds
lds
inc
repz
mov
movsb
fistps
ret
out
mov
int3
pop
inc
in
jb
push
loop
pop
pop
fwait
loopne
stos
enter
fidivs
mulps
xor
jne
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
insl
mov
mov
jge
jo
mov
jp
inc
aam
push
cmc
jbe
and
adc
imul
ljmp
cmovl
daa
dec
in
cli
and
imul
movsl
push
add
rolb
jp
movb
fimull
hlt
xor
or
jb
aam
popf
jno
data16
add
loopne
mov
addr16
add
out
mov
inc
mov
inc
std
mov
cli
sub
les
inc
or
pushf
mov
xor
lret
rcrl
jp
repz
mov
inc
test
daa
ds
cmp
test
cmp
push
dec
sti
add
fimuls
push
mov
inc
jno
adc
push
pop
or
rorb
pop
jg
aas
mov
fwait
es
aam
cld
mov
or
mov
cmp
mov
inc
inc
popf
mov
int
stos
cmc
cmp
push
cld
mov
imul
enter
cmp
pop
mov
add
lods
idivb
scas
icebp
push
and
out
pushf
ds
lret
jge
inc
out
cmp
jle
das
ja
repnz
cmp
std
sub
fstpl
lods
loopne
xor
mov
cmpsb
pushf
test
inc
stos
scas
not
daa
mov
mov
aas
add
lret
imul
sarl
out
pop
dec
scas
lods
xchg
sub
shll
jg
inc
push
imul
dec
ss
in
pop
adc
testb
bound
neg
or
push
shlb
lods
cmp
fwait
inc
add
sbb
pop
xchg
sbb
fchs
cmp
pop
dec
je
ret
arpl
and
ret
mov
add
aam
add
lret
xor
sub
clc
aaa
repz
xor
in
ficoms
insl
mov
jge
mov
cld
push
push
lahf
pop
mov
nop
cmpsl
std
scas
dec
sub
fs
fcmove
popa
test
add
jnp
cmp
int3
inc
sti
jg
xor
jecxz
mov
push
ja
cld
data16
or
int3
cs
mov
loopne
push
mov
sbbb
push
or
test
lcall
push
mov
adc
push
shl
aam
popfw
imul
jbe
iret
cwtl
stos
pushw
jmp
fwait
sub
push
fwait
jns
lods
jge
jge
cltd
pop
pop
nop
sbb
scas
sbb
mov
cmp
pop
sbb
jo
fdiv
add
add
neg
sbb
push
cmpsl
andb
inc
flds
sub
xchg
loop
jl
cld
fwait
adc
jmp
into
lods
ret
repnz
clc
lock
mov
mov
cmp
cmc
mov
sbb
xlat
mov
xchg
in
and
add
stc
sbb
mov
loop
cmp
or
ds
push
jne
pop
jb
add
mov
jp
in
xor
push
push
inc
adc
aam
mov
xor
or
mov
das
sbb
cli
inc
sub
push
pop
gs
aas
push
xor
ret
dec
insl
loop
jb
pusha
mov
push
push
dec
jg
repnz
stos
mov
sbb
add
sub
rcrl
lods
fistpll
push
mov
in
cwtl
xor
jne
inc
sarb
inc
jo
xchg
mov
mov
mov
fiaddl
pusha
cmpsl
inc
cmpsb
add
jmp
mov
mov
add
call
xor
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
dec
dec
stc
xchg
jo
dec
jge
jo
jge
mov
scas
call
jnp
jnp
and
xor
jns
in
pushf
sub
cli
dec
pop
nop
mov
arpl
imul
mov
iret
xchg
hlt
ret
xchg
sbbb
push
jo
cmpsl
dec
xor
mov
outsb
ss
vfrczsd
pcmpgtd
fs
dec
jl
mov
test
push
pop
fistps
dec
xchg
popa
pushf
scas
add
and
push
push
pusha
shl
sbb
aad
testb
sub
xchg
in
pusha
shlb
adc
movsb
mov
cmp
fdivl
lcall
mov
into
cmp
out
inc
scas
mov
in
sti
inc
pop
out
test
and
imul
ds
div
adc
mulb
xchg
add
adc
mov
sbb
daa
outsb
mov
mov
pop
cmc
outsl
pop
in
adc
shl
nop
xor
inc
std
sub
bound
jnp
sti
cmpsb
daa
cmp
sbb
in
mov
mov
add
mov
ljmp
sub
inc
xor
push
pop
mov
roll
xchg
jae
nop
add
addb
jge
daa
aad
mov
hlt
and
cltd
inc
js
adc
jb
pop
dec
into
imul
inc
pop
js
les
addl
scas
je
int
out
cmp
xor
in
movsb
or
jbe
loopne
push
and
mov
adc
jmp
or
movsl
sbb
dec
ret
mov
femms
fdivr
inc
mov
leave
inc
rorl
popf
sbb
test
push
mov
pop
dec
pop
cmc
adc
ret
lock
cmpsl
fistps
add
and
jmp
loop
pop
push
sarb
aas
imul
xlat
mov
loope
dec
les
add
and
xchg
mov
mov
jg
add
xchg
subl
mov
xor
dec
daa
out
sub
or
push
mov
scas
xor
std
sbb
ret
pop
mov
jno
addr16
movsb
das
lret
cltd
jo
cltd
pushf
imul
ret
popa
hlt
xor
mov
in
or
or
movsl
popa
bound
lea
and
inc
inc
in
xlat
loop
test
insb
mov
in
jbe
rorb
test
jno
mov
and
sbb
push
push
add
jecxz
out
pusha
imul
push
lock
xchg
or
ja
cmp
cmc
in
sub
xchg
int3
xor
jbe
pop
push
cvtps2pd
add
cmp
stos
mov
pop
loop
sub
jle
popa
stos
or
pop
sub
ja
loop
mov
push
push
aaa
adc
mov
push
push
or
test
jg
mov
lods
xchg
inc
ds
cmpsb
xor
ljmp
push
imul
mov
lea
xchg
jp
rclb
lahf
gs
incb
shl
jl
inc
pop
mov
movsl
cmpsb
pushf
je
mov
jnp
jl
pop
pop
sbb
hlt
push
rcrb
imul
int
jno
loope
sbb
ljmp
icebp
dec
imul
xor
and
ja
pop
arpl
sbb
add
mov
addb
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
push
or
rcrb
jo
in
outsb
mov
cld
inc
lret
lret
pop
aaa
jp
sahf
sub
jb
mov
adc
jle
jae
ljmp
jo
int3
or
dec
ficoml
mov
fisubl
jne
jecxz
inc
add
mov
faddl
mov
xchg
insl
jb
dec
jno
mov
pop
or
sti
sahf
xlat
lcall
lahf
pushf
or
cmp
push
mov
mov
mov
fidivrs
mov
xor
cltd
fsubs
jmp
loopne
pop
push
add
dec
sub
xchg
lcall
push
jl
pop
xor
xchg
mov
mul
loop
stos
data16
cmpsw
sarb
mov
fisttpll
sub
xor
movsl
push
shlb
xchg
inc
dec
xchg
insb
ret
shlb
loop
insl
inc
out
mov
iret
adc
mov
and
insb
addl
or
xorl
jecxz
pop
push
ja
sbb
xchg
cmpsl
loope
rol
popa
push
sbb
mov
out
pop
popa
add
adc
aad
xor
adc
pop
test
xchg
in
mov
sub
cld
mov
cmp
push
orps
mov
push
pop
sbb
mov
and
sbb
cmp
mov
jg
push
cmp
mov
cmp
and
divl
mov
mov
mov
movb
insl
cli
scas
xor
jp
and
inc
je
daa
mov
adc
push
xor
add
adc
or
xchg
pop
ss
loop
ret
or
outsl
addb
pushf
repz
xor
out
loop
int3
repnz
ficoml
and
std
add
cmp
jg
aam
cld
cmpsl
shll
mov
mov
or
out
testb
mov
cmpsl
stos
dec
push
pop
push
scas
mov
shrb
push
push
mov
mov
popl
push
lret
xchg
push
imulb
or
or
scas
and
aad
lret
push
test
negb
add
cmp
sub
mov
popf
jae
lea
sbb
cwtl
in
xchg
jge
test
cmp
inc
cmp
inc
mov
xlat
loop
mov
bts
movsl
mov
fstps
push
xor
aad
push
cmpsl
fwait
jo
inc
dec
stos
mov
in
subl
jnp
or
push
in
sub
jmp
mov
mov
push
aam
ficompl
ret
cmpsl
test
aam
fs
mov
rorb
testb
mov
dec
sbb
jns
jno
insb
addr16
ror
mov
andl
xlat
iret
bound
xor
fidivrl
lds
sub
jae
rcl
mov
add
dec
fdivrl
rcr
push
mov
mov
sbb
icebp
iret
push
or
mov
insl
lahf
pop
scas
test
adc
add
fstps
lret
cmc
xor
imul
shll
enter
jnp
cmpl
rclb
dec
add
cli
sbb
dec
add
lods
lds
inc
es
in
loopne
push
xchg
mov
adc
mov
mov
cmp
repz
dec
pop
dec
ljmp
mov
in
push
sub
mov
ret
std
test
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fidivrl
lcall
cld
jnp
cmc
roll
sarl
notb
inc
jecxz
bnd
fadd
mov
lock
inc
imul
inc
ds
sahf
repz
sarb
sub
test
dec
jge
mov
xor
mov
mov
out
inc
pop
dec
movsb
je
xchg
movsb
jl
orl
xchg
hlt
add
jge
push
xchg
add
addr16
mov
testb
repnz
sti
loope
push
test
xchg
and
push
jp
stos
jbe
lock
cmp
and
pop
add
push
push
hlt
xor
repnz
inc
inc
xlat
adc
pop
in
outsb
icebp
add
fidivrs
adc
outsl
jmp
xor
xchg
sub
xchg
pop
out
inc
enter
sahf
cmp
or
jmp
adc
adc
out
out
xor
sub
push
pop
cwtl
xor
mov
fidivl
sub
sub
mov
arpl
sub
mov
cmc
rcll
out
pop
sbbl
xlat
jnp
adc
jae
and
inc
xor
or
push
dec
xor
shr
mov
pop
fs
out
jmp
sti
mov
add
ret
push
stc
imul
xchg
dec
outsb
xor
hlt
pop
test
mov
mov
test
jo
or
adc
out
add
mov
insl
xchg
add
pop
jecxz
test
xchg
in
dec
stos
mov
int3
idivl
inc
inc
push
fadd
cmp
lods
lods
hlt
cmc
jl
add
mov
in
inc
pop
pop
pop
xor
lock
jno
push
jns
mov
ss
jne
add
out
sahf
push
pusha
and
mov
outsb
mov
and
push
push
push
mov
jle
xchg
testl
rcrl
jo
in
inc
mov
cmpsl
aas
dec
stos
mov
push
adc
cmc
shlb
loopne
push
pop
xor
lods
inc
int
sub
popa
push
repnz
cmp
enter
cmpsb
shr
xor
mov
sahf
dec
lea
pop
cld
es
loope
fldcw
or
flds
movl
jecxz
clc
inc
push
mov
lods
ja
dec
inc
loopw
jge
data16
push
lret
push
jle
fiadds
popf
xchg
xor
shrl
adc
mov
loopne
cmp
fs
pushf
stc
movsb
pop
sar
mov
xchg
push
xor
cmpsl
into
into
and
lret
js
and
sub
cltd
ret
addr16
and
push
in
push
pop
mov
jp
or
jno
imul
jp
dec
sbb
xchg
cmp
cmpsl
leave
add
adc
scas
lods
insl
jbe
movsb
push
jl
or
mov
mov
in
mov
in
xor
lods
rcr
jge
loope
pop
test
pusha
ret
add
fstpt
push
jns
fstps
add
adcb
lret
or
push
dec
mov
jp
push
sub
fucomi
inc
pop
xchg
pop
pop
mov
cmp
mov
mov
testb
jnp
mov
or
call
cmp
out
mov
dec
pop
mov
add
out
pop
cmp
out
push
bound
mov
fdiv
push
out
cmc
mov
dec
cli
lods
add
adc
xorb
sbb
outsl
into
daa
add
mov
inc
jl
inc
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
sahf
add
jo
dec
jge
jo
jnp
pusha
scas
loopne
in
ja
or
rcrb
and
push
int
aaa
inc
bound
ret
adc
imul
adc
outsb
aaa
pop
fisubl
das
push
xchg
push
repnz
je
adc
lods
imul
shr
mov
jmp
mov
push
ret
push
fidivrl
fdivrl
pop
lds
fwait
bound
lds
imul
adc
xor
mov
sub
pop
scas
aaa
mov
mov
sbb
test
xor
jae
ret
imul
shrl
cmpsl
mov
shll
pop
pop
mov
mov
lahf
jp
ds
test
ds
js
je
mov
stos
das
or
and
inc
out
sub
or
add
icebp
sbb
test
insb
divl
insb
into
dec
daa
insl
or
daa
xor
ljmp
sub
rorb
out
pop
adc
ljmp
cli
mov
arpl
mov
test
gs
mov
test
icebp
pushf
jb
enter
xor
sub
loope
mov
jno
int3
ljmp
and
jmp
in
mov
jo
rorl
pop
dec
loop
lds
mov
out
ud1
adc
jle
mov
xchg
ret
inc
push
scas
inc
adc
mov
mov
out
sub
insb
and
imul
jbe
fldenv
scas
loopne
cmpsb
leave
adc
push
pop
dec
repnz
inc
leave
out
shrb
dec
cs
xchg
loop
push
dec
icebp
sbb
or
aas
iret
stos
addb
insl
test
adc
xlat
sub
mov
test
sub
add
ret
loopne
shlb
jno
ss
sbb
sub
xor
pushf
and
lods
mov
adc
jg
ss
xor
sbb
mov
and
hlt
xor
inc
lock
dec
ficomps
ljmp
sbb
cmpb
push
cwtl
push
fs
mov
push
sbb
jmp
jmp
sub
xchg
mov
mov
shr
addb
mov
mov
idivl
jecxz
ds
push
pop
outsl
iret
push
hlt
jecxz
push
fmull
mov
in
push
loopne
mov
mov
ret
push
jp
pop
out
cmp
cmp
mov
add
cmp
outsb
jnp
push
mov
icebp
and
mov
sub
iret
fcmovbe
mov
push
jl
or
in
mov
ret
jne
fidivrs
call
data16
mov
sti
push
push
xor
lods
rcll
jb
pop
sub
add
pop
lcall
jne
or
fisttps
add
jno
mov
fdivrs
push
daa
push
outsb
aaa
mov
sti
sahf
push
jo
aam
in
stos
pop
out
sbb
pop
xchg
pop
mov
fimuls
push
insb
pop
aas
xchg
insb
jle
lahf
inc
cmp
aas
push
mov
mov
jle
leave
stos
movsl
lret
pop
pop
or
push
insb
negb
xchg
pop
cmp
js
bnd
hlt
arpl
dec
mov
dec
movsl
rclb
repnz
test
jge
aam
adc
clc
enter
xor
outsb
dec
ror
jae
xor
pusha
sub
mov
cmp
mov
xchg
idiv
pop
sbb
rcrb
lock
cmp
jg
xor
pop
cmc
out
aaa
add
mov
mov
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
and
outsb
pop
mov
jo
mov
aaa
insl
jge
xor
sbb
sub
fwait
inc
arpl
aam
xlat
mov
ret
add
testl
pop
scas
lds
das
xchg
jnp
cmpsb
std
jmp
jecxz
andb
pop
fcmovb
cli
mov
aaa
rol
loopne
pop
cwtl
mov
pop
addr16
push
jbe
arpl
adc
dec
outsb
xchg
and
jg
sbb
jb
rolb
xchg
lret
aad
xlat
add
sub
jno
pop
pop
cmpsb
fstl
movsb
inc
movsl
faddl
add
out
cmp
cwtl
xchg
pop
in
push
jne
icebp
test
icebp
sbb
cmp
cmp
stos
ss
push
pop
mov
mov
loopne
or
ljmp
clc
imul
sbbb
fiaddl
fimuls
repnz
adc
or
sub
push
jge
xchg
and
or
inc
sbb
adc
push
mov
add
insl
jno
je
in
xor
xchg
arpl
lahf
xor
fsubrl
aam
rcrb
jmp
out
jo
daa
insb
cmpl
adc
adc
xchg
xchg
loope
pusha
cmp
incb
and
cmp
ret
aas
std
mov
fwait
shr
aam
dec
lcall
rol
jmp
test
adc
push
mov
out
xchg
movsb
or
int3
sub
je
xchg
sub
cmpsb
xchg
xchg
or
aam
js
ds
mov
sarl
mov
in
inc
aam
push
outsb
xchg
dec
and
out
mov
sub
int
ret
mov
or
push
dec
mov
xchg
rcrl
xchg
ja
inc
pmaddwd
lahf
sbbl
fsts
sbb
repnz
xchg
pop
test
xlat
rorl
mov
mov
jno
ror
dec
popf
test
mov
sahf
and
xor
push
xchg
notb
push
jo
repnz
imul
bound
sti
or
scas
out
addr16
pop
xchg
pop
push
mov
lahf
jae
push
lcall
xor
out
jge
push
pop
push
test
and
test
mov
repz
hlt
xor
dec
lods
push
and
sbb
ss
pop
push
repz
aam
sub
jmp
lock
imul
sbb
out
adc
fistpll
mov
mov
stc
jmp
das
std
adc
jnp
roll
jl
stos
xchg
test
ljmp
repnz
sub
imul
push
push
jp
orl
mov
push
pop
mov
hlt
lahf
push
jmp
xchg
mov
inc
xchg
push
sti
dec
mov
adc
fwait
ret
inc
or
ss
test
arpl
loope
mov
nop
sbb
fcomps
push
mov
lds
rcr
pusha
inc
sbb
pop
out
pop
leave
outsb
out
and
pop
push
leave
in
sarb
cmovg
xchg
adc
dec
cwtl
decl
aam
call
popa
cmp
cmp
adc
js
pop
xor
ja,pn
pop
inc
adc
sbb
inc
decb
push
rorl
sub
gs
fldl
ret
push
arpl
ret
cmp
mov
push
mov
jecxz
xchg
loope
cmp
sbb
xor
jnp
mov
scas
xor
rcl
jmp
insb
adc
outsl
pop
xor
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
dec
call
jo
jge
jo
test
sub
adc
and
daa
sbb
aaa
in
xchg
mov
fiaddl
xor
sbb
dec
flds
je
adc
push
fmull
pop
in
cmp
loope
xchg
mov
rcrl
rcll
divl
cmpsl
cs
push
scas
ds
out
lods
inc
mov
sub
js
pop
sti
cltd
mov
cld
and
lock
out
fs
std
sbbl
cs
mov
pop
loop
cmp
rolb
xchg
fcmovb
negb
popa
xchg
push
out
pop
push
mov
movsb
pop
ss
rolb
xor
rol
push
sbb
repnz
arpl
xchg
incb
aaa
cmp
ret
jne
xchg
cmpsl
xchg
mulb
xchg
or
fs
adc
sub
mov
sub
stc
scas
insl
sbbb
push
fprem1
push
std
mov
icebp
hlt
pop
stos
mov
cwtl
loop
add
outsl
fdivp
pop
mov
test
mov
jnp
jg
js
call
dec
ljmp
adc
scas
or
cwtl
xor
ret
mov
enter
neg
fdivrl
jno
lret
es
sub
inc
mov
shl
bound
or
or
and
cmp
or
lock
sahf
fisttps
inc
jcxz
clc
pop
loop
inc
pusha
adc
xchg
out
cmc
mov
mov
push
sbb
inc
sbb
mov
loope
jae
inc
mov
inc
lods
ficomps
fucomp
lods
sub
adc
pop
pop
pop
jbe
in
rorl
push
and
jnp
jg
std
jae,pn
insl
iret
cmp
and
fs
jae
pop
std
pop
sub
lea
fs
cmp
fcmovne
mov
inc
dec
mov
mov
push
aas
dec
sub
adc
jg
sub
cmp
mov
call
shrb
mov
cmp
add
lds
adc
dec
and
adc
insb
pop
bound
mov
rolb
or
push
lret
mov
pop
mov
fcom
bound
ret
cmp
shlb
adc
mov
adc
pop
loope
cmp
test
incl
xor
cli
xchg
stos
outsb
or
into
cld
mov
test
adcl
ja
out
enter
cmp
mov
mov
addr16
pop
movsb
movsl
dec
ret
insl
iret
xor
push
in
aad
mov
fadds
cld
std
pushf
or
xor
les
loop
aas
xchg
sar
sbb
jnp
shll
popf
cmp
loopne
pop
test
push
adc
das
outsb
ret
inc
or
out
insb
and
inc
jle
push
ja
xor
push
jns
in
xor
push
or
inc
mov
ja
mov
mov
sbb
repz
push
jl
dec
orl
mov
mov
mov
mov
mov
shll
sub
cli
adc
cmpsb
aad
int3
cmp
out
push
dec
sbb
test
in
push
add
push
imull
pop
dec
xor
mov
jg
enter
jae
pop
inc
lret
push
cmp
sbb
std
inc
insb
popf
xor
stos
pop
xchg
mov
add
jmp
jne
jge
imul
jp
fsts
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
sub
sbb
stos
jo
dec
jge
jo
call
clc
mov
dec
adc
cltd
jbe
or
cltd
xor
jmp
imul
out
notl
ficoms
mov
loop
repz
adc
pop
mov
xlat
add
js
bnd
xchg
xchg
jl
pop
dec
jne
push
and
fcoms
cli
gs
inc
out
adc
loopne
fdivl
pusha
dec
and
fstpt
arpl
jg
xchg
pusha
and
sahf
add
faddp
int3
imul
rorl
js
cmc
jge
scas
ret
imul
imul
mov
in
stc
imul
leave
lods
sti
adc
xchg
mov
sub
subb
lock
jo
les
xchg
jge
sar
xlat
fnstcw
pusha
push
pop
xchg
out
fbld
daa
add
arpl
push
jle
sbb
adc
cmp
ds
test
cmp
test
cmp
pop
xchg
add
cmp
jne
mov
xchg
les
mov
lret
mov
mov
jnp
cmp
push
add
mov
add
push
insl
cld
ss
pop
push
jl
pop
nop
jecxz
pushf
lret
mov
sub
push
test
in
sub
std
mov
ret
push
lret
push
sub
xor
dec
rcl
push
cmp
ficompl
dec
jno
push
loope
imul
addr16
and
adc
shl
push
push
imul
push
orb
stc
psrlw
stos
imul
sahf
shrb
adc
sbb
imul
sbb
add
cmp
es
jmp
mov
les
iret
int
int3
clc
add
and
shlb
insb
jnp
stc
mov
mov
cmp
fnstsw
push
mov
add
out
into
cmp
cmp
and
fs
outsb
mov
inc
hlt
jae
out
lods
mov
and
mov
push
dec
pop
push
lods
popa
jmp
adc
ja
gs
dec
into
xchg
pop
mov
je
in
jne
nop
outsl
sti
cld
jp
mov
add
mov
sbb
fidivs
into
pop
jp
mov
sbb
push
pop
sub
rclb
add
jmp
sahf
jno
movsl
sbb
jg
xchg
pop
xchg
repnz
push
sub
pmullw
imul
xchg
gs
aas
adc
orl
jo
dec
call
aad
shlb
pusha
and
in
pop
ret
dec
insb
pop
sbb
or
sub
adc
cltd
test
gs
mov
mov
adc
cs
adc
mov
jnp
test
sbb
cmp
fldt
cmp
in
push
mov
pushf
rorl
inc
psraw
sbb
or
xchg
aam
and
or
pop
loopne
push
push
mov
in
jno
bound
inc
bound
mov
dec
in
mov
jmp
cltd
fcomip
or
into
test
frstor
cmpsb
jp
subl
xor
test
xor
sub
cmp
push
push
push
push
insb
repnz
xchg
push
dec
jmp
popa
pop
pop
dec
cmp
inc
addr16
or
les
ja
andl
pop
cmc
aas
jbe
xchg
inc
sub
cmp
or
sbb
inc
mov
dec
mov
jg
add
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
pop
or
movsl
fdivs
jo
and
outsb
repz
mov
push
push
pop
sbb
mov
jb
popa
jmp
push
jg
jbe
xchg
inc
jae
jg
repnz
insb
dec
cmp
ds
dec
fs
ret
jae
testl
lock
xchg
inc
pop
test
insb
repz
add
movsl
or
add
pop
mov
lret
and
data16
or
dec
orl
ficoms
dec
stc
cld
das
cmpps
add
or
subb
test
and
clc
mov
stos
cs
fsubs
add
ja
xorl
lret
es
cmp
fs
mov
sbb
cmp
xchg
xchg
int
into
jns
mov
jae
in
int
mov
out
pop
call
shll
xchg
and
call
adc
insb
xor
and
xor
jne
xchg
fucom
leavew
sbb
push
movsb
mov
mov
jecxz
lret
dec
push
stc
jg
ss
add
sahf
push
in
sbb
push
insb
sbb
outsl
popa
mov
dec
sbb
sbbl
adc
jno
inc
ds
scas
loopne
push
imul
and
fiadds
pop
and
test
xor
xor
jo
push
pop
gs
dec
and
cli
cmp
test
mov
jecxz
or
inc
jno
pop
pop
xchg
out
add
test
je
sub
into
lods
incb
aam
inc
push
add
add
xchg
leave
xor
js
push
pop
cwtl
mov
lret
cltd
xchg
aam
dec
sti
mov
pop
push
pop
lcall
arpl
mov
insb
mov
add
iret
xor
shrl
mov
push
xorl
inc
fadd
fidivs
sbb
sbb
push
dec
cltd
out
sbb
jle
mov
xorb
enter
in
add
inc
movsl
inc
pusha
adc
dec
mov
mov
in
andb
lahf
ret
inc
xchg
push
repz
pop
jae
outsb
add
mov
pop
cli
mov
sahf
inc
icebp
sub
xchg
or
ss
xor
sbb
fdivs
sbb
dec
lock
hlt
cs
pop
mov
test
aaa
repz
xlat
gs
adc
testl
lods
lds
mov
pop
push
cmp
popa
push
add
jecxz
int
hlt
test
pop
pop
pop
lahf
insb
fbstp
or
add
pop
mov
jne
movsb
inc
ja
bswap
cmp
popf
xchg
cmp
out
inc
sbb
add
repnz
sbb
lods
enter
mov
test
push
lods
xchg
fldl
fiadds
addb
andb
imul
sub
push
sti
jmp
jno
push
or
nop
addr16
sbbb
icebp
fisubrl
lea
xor
jp
stos
aas
sbb
cmp
and
pop
addb
loope
sbb
imul
add
rclb
adc
mov
mov
inc
mov
aaa
sarl
int3
pop
das
add
jns
cmp
lret
sub
outsl
lea
jns
add
pop
test
pushf
and
lret
lods
push
dec
push
add
std
inc
mov
fdivrs
ret
mov
rol
outsl
jle
jnp
sub
rclb
test
mov
test
rcrb
or
inc
cld
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
movntq
jo
jge
jo
push
cmp
out
arpl
dec
insl
nop
cld
push
insb
push
je
fnstcw
jl
xchg
ret
fstpt
cmp
iret
pop
orb
mov
stos
push
xchg
stos
dec
pop
sub
mov
jns
lcall
ret
lret
insl
pop
inc
or
das
pop
pop
movsb
push
lea
inc
aad
in
or
or
stc
sub
pop
pop
lods
push
sub
scas
fbld
mov
cmc
hlt
push
adc
addl
or
dec
stos
push
adc
loop
pop
es
inc
sub
cmp
aaa
in
push
inc
mov
gs
int3
rcrb
pop
je
jb
lahf
sbb
daa
inc
sub
xchg
pop
xor
pop
jno
cmp
pop
mov
cmc
mov
xlat
jb
addr16
test
insb
rcl
jo
ror
sbb
dec
xchg
dec
jne
dec
cmp
lahf
cld
cmpb
hlt
jmp
arpl
sub
pop
mov
cwtl
fcmovnb
or
add
in
mov
test
nop
lea
xchg
xchg
cli
cmp
fstpl
pop
dec
outsl
xor
mov
sub
jecxz
popa
insb
outsb
aas
frstor
les
jmp
or
mov
and
adc
inc
mov
sub
gs
mov
cmp
jmp
addl
mov
addl
jbe
jbe
cmp
cmpb
cs
adc
jp
das
ret
imul
inc
nop
mov
out
jb
mov
out
or
dec
out
test
dec
add
jo
pushf
sbb
mov
sbb
xchg
lods
lret
cmp
mov
mov
insb
popa
shlb
stos
fmull
jne
rcrl
ss
sbb
icebp
imul
mov
pop
mov
ds
shrb
mov
into
and
sbb
rcl
pusha
xrelease
mov
addr16
cltd
insl
daa
cmp
cltd
pop
dec
push
pop
addr16
xchg
dec
push
pop
pop
inc
and
in
out
lock
adc
test
cwtl
pop
adc
mov
pop
test
and
or
xor
sbb
mov
push
lock
cwtl
cli
adc
xchg
faddl
pushf
mov
inc
adc
mov
or
jmp
fildl
dec
sub
xchg
je
jnp
inc
int
aam
movsb
sahf
or
insb
sub
outsb
js
fists
inc
testb
lret
out
xchg
mov
scas
insb
arpl
cltd
insb
aad
hlt
xchg
ficoml
pop
insb
and
jecxz
enter
in
clc
sbb
mov
jge
imul
aas
cmp
dec
sub
mov
inc
pop
xor
mov
push
scas
les
in
insb
mov
pop
lea
jae
out
sub
cmp
divb
clc
adc
push
insl
sub
xor
insb
mov
or
add
test
pushf
xchg
outsl
fstpl
lret
or
in
push
aas
lret
shl
arpl
loopne
into
sub
and
push
mov
lods
add
gs
les
jbe
xchg
sbb
pop
jns
fdivrs
fwait
idivl
and
out
movsb
pop
jnp
or
scas
std
sub
sbb
insb
push
in
fs
jne
xchg
add
add
lods
mov
cmc
pop
int3
clc
repz
fildl
shl
aam
test
xchg
jl
push
dec
test
adc
add
cmpsb
push
mov
mov
add
add
add
out
pop
outsl
jne
data16
test
pushf
adc
jo
dec
jge
jo
xchg
mov
cmpsl
insb
lret
out
popa
out
and
cmpsb
pop
dec
sbb
lret
jne
sub
cltd
scas
xchg
xor
add
dec
sbb
cmp
js
jns
lock
addr16
sub
or
jb
mov
lahf
cli
sub
sub
jne
pop
sub
mov
pop
aaa
gs
sub
cwtl
loope
out
sbb
sub
mov
aam
push
push
inc
rcr
push
xor
push
nop
out
pop
imul
out
mov
rcrl
cmp
xchg
or
mov
lret
dec
and
outsb
and
iret
je
negb
push
dec
and
ret
xor
arpl
rolb
shrl
add
jbe
fmull
test
outsb
pushf
repnz
int
mov
mov
out
jno
je
xor
adc
lcall
divb
cmpsb
xor
sbb
dec
insl
cmp
fdivrs
in
movsl
leave
cmp
pop
adc
std
test
cmpsb
sub
sbb
mov
add
mov
in
xchg
inc
fidivrs
or
je
mov
jb
movsb
or
jmp
mov
push
cli
mov
and
fdivr
cmp
sub
add
xchg
ja
push
cmc
sub
mov
xchg
js
lods
in
scas
sbb
dec
mov
fiaddl
add
adc
or
test
bnd
adc
insb
outsb
popf
adc
pop
push
xor
stc
popf
inc
and
aad
xchg
push
inc
sub
call
das
push
test
xor
and
icebp
fsubrp
loop
test
cmpsb
andb
fwait
aas
into
je
loopne
lcall
jne
aad
sub
loop
cmp
push
pop
push
dec
adc
lret
loop
enter
test
imul
cmp
add
lcall
ret
push
jecxz
jne
xor
aad
xchg
mov
dec
gs
rorl
jle
in
imul
dec
add
mov
jge
xor
clc
negb
cltd
lcall
inc
lret
mov
jl
push
jl
jo
push
mov
jmp
add
cmp
cmp
pop
fcmovne
jb
push
rcrl
popf
xor
imull
xor
jae
push
ret
pop
sbb
lock
out
mov
cmp
js
pop
mov
sahf
sbb
mov
aad
sahf
pop
cmpsb
and
jb
flds
fists
push
lret
daa
lret
mov
push
cmpsb
pushf
out
sbb
sti
data16
pop
sub
push
fnstcw
cmp
clc
mov
adc
cltd
add
jno
stos
pushf
out
xor
and
cmp
adc
mov
cmp
push
mov
ret
sbbb
fwait
mov
xchg
pop
mov
push
stos
fistpl
or
cltd
aam
sub
inc
pop
mov
cmp
test
xor
dec
adc
int3
ret
imul
mov
stos
mull
cs
jg
sub
sbb
pusha
xchg
cmp
jle
loope
inc
fucom
icebp
iret
jl
jl
ss
addr16
stc
xor
cmpsl
mov
or
cmc
rclb
xlat
int3
and
testl
stos
lret
cmpsb
into
loope
ss
aas
sbb
add
push
roll
sub
push
dec
inc
xchg
jmp
cmp
adc
cmp
mov
mov
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
cmpsb
add
jo
dec
jge
jo
jecxz
out
mov
pop
mov
daa
cmp
and
jae
mov
cmp
inc
xchg
jecxz
jl
push
xor
pusha
in
jl
shr
dec
pusha
jg
mov
mov
mov
jns
jmp
mov
es
imul
mov
mov
xlat
push
popa
sub
jecxz
or
jmp
and
ds
push
mov
jp
fxch
pop
adc
sti
pusha
in
adc
aaa
ljmp
xchg
inc
out
int
jne
inc
add
lock
adc
je
lahf
inc
xchg
xchg
jmp
mov
std
cwtl
xchg
mov
pusha
loop
or
aas
jae
jnp
jbe
jo
adc
loopne
jae
mov
jg
ret
mov
inc
push
cli
inc
xor
lret
sbb
or
mov
xacquire
inc
adc
cwtl
pop
fbstp
sub
in
mov
insl
xchg
sub
in
insb
test
sbb
ret
fimuls
ja
push
sbb
mov
mov
cli
or
mov
push
ret
call
in
mov
and
mov
sub
push
pop
test
pop
cmp
push
mov
mov
lahf
mov
lods
popa
sub
cltd
outsl
aas
lahf
dec
pop
out
jle
push
push
inc
mov
push
xchg
add
jo
mov
repz
push
xor
or
or
cmc
aad
testl
lcall
je
cmc
push
mov
pop
push
sub
adc
add
lret
mov
adc
aad
in
mov
pop
dec
jle
lahf
or
inc
jbe
lods
in
mov
xchg
gs
adc
adc
adc
aas
out
cld
dec
fbstp
aam
lcall
adc
push
addr16
xchg
xor
xor
and
xor
pushf
jne
cmpsl
sbb
inc
xchg
inc
push
loope
movsl
add
xor
lds
arpl
std
mov
jp
stos
xchg
mov
and
pop
mov
or
nop
outsl
repnz
stos
adc
out
jg
ljmp
shrb
repz
adc
test
jl
loop
dec
mov
insb
or
adc
mov
push
mov
add
imul
out
xchg
je
jl
jne,pt
mov
jbe
inc
inc
and
je
cwtl
in
clc
mov
push
cmp
push
jecxz
cltd
shrl
notl
loop
mov
cmp
sbb
enter
loope
cli
jnp
and
lahf
lods
dec
inc
push
mov
cmp
popf
sbb
out
sbb
mov
popa
testl
enter
hlt
lds
inc
sbb
and
outsl
stc
test
sub
xchg
outsb
repz
sarl
pop
jecxz
xchg
jmp
jecxz
mov
rol
adcl
mov
adc
inc
cmpsb
fisttpll
sar
adc
nop
adc
mov
mov
dec
or
std
mov
addr16
add
xor
fcomps
adc
push
je
jno
pushf
sub
sub
imul
or
jae
cltd
push
push
or
mov
xor
or
sar
pop
lods
dec
into
insl
jecxz,pt
shrb
ss
pop
adc
jmp
arpl
subl
mov
mov
push
test
dec
jl
je
std
mov
movsb
inc
push
cli
int3
jo
int
testl
ret
stos
add
jb
inc
out
insb
inc
jbe
push
adc
outsl
mov
push
or
out
add
add
fisttpl
jp
xchg
mov
mov
jge
jo
lcall
out
and
add
mov
ficompl
dec
push
rcl
xchg
mov
and
dec
mov
iret
cli
jns
xor
daa
or
movsb
inc
dec
add
shlb
lock
mov
jl
push
push
dec
loopne
cmp
jns
sbb
mov
es
movsl
pop
mov
inc
shlb
shl
sbb
shlb
insl
adc
ficomps
and
cli
xchg
fldcw
je
push
out
push
mov
add
into
aas
pusha
and
sar
mov
in
movsb
in
xchg
cmc
ds
loope
push
sbb
loopne
mov
push
pop
xchg
pop
je
pop
subl
dec
rcrl
bound
xor
adc
shrl
fsubs
adc
insl
imul
mov
pop
bound
stos
jno
xchg
addr16
push
shrl
adc
cli
mov
sar
testl
mov
mov
das
outsb
pop
mov
loopw
rcrb
mov
jp
ja
mov
sarb
jno
test
pop
dec
inc
fs
out
inc
pop
inc
jb
loopne
mov
sub
in
roll
add
ljmp
das
fidivs
xchg
jp
push
fistl
into
mov
int
add
push
and
ja
rcll
lods
pop
pop
rclb
lods
popa
xchg
lret
int3
out
aad
mov
and
sti
sub
imul
loop
lret
sub
cs
adc
sbb
jne
les
mov
lret
sarl
or
jbe
imul
frstor
xor
aam
daa
js
ljmp
loopne
clc
push
push
out
pop
xor
sbb
lea
cmp
push
ljmp
pcmpeqd
idivl
stos
pushl
cmp
loopne
xor
int3
pop
popa
out
mov
xchg
or
lods
jns
sbb
mov
into
repnz
aas
in
and
out
inc
mov
outsl
sbbl
xlat
mov
mov
pop
cs
xor
xchg
ret
jmp
mov
pop
add
bound
outsl
push
test
into
lea
inc
sbb
dec
filds
jecxz
push
mov
xchg
fs
jp
lock
mov
test
or
mov
adc
push
cld
or
fistpll
add
daa
fcomps
out
jl
shl
xlat
and
test
shl
mov
int
test
dec
adc
lock
jbe
add
mov
push
jge
jge
arpl
mov
clc
and
and
mov
leave
adc
or
sub
mov
pop
inc
orb
add
pop
dec
shlb
push
in
adc
insl
daa
loope
movsl
xor
xchg
clc
or
jle
test
or
ret
das
push
xchg
jl
mov
push
movl
cli
cmp
hlt
jmp
bound
rorb
mov
aas
test
imul
outsb
loop
sub
cmp
call
cld
mov
leave
xchg
pop
dec
sub
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
inc
test
jge
jo
cmp
mov
mov
mov
xchg
adc
std
push
mov
push
jne
sub
cmc
je
sbb
imul
incl
sub
sub
xor
je
push
ss
inc
mov
pop
dec
mov
cmpl
call
cmpsb
mov
repz
cmp
mov
cltd
sbb
pop
movntps
call
xchg
mov
mov
cmp
xchg
mov
jae
in
mov
mov
je
sti
add
sub
cld
popa
push
mov
add
sub
orl
es
xchg
jnp
movsb
and
xor
adc
fcmovnbe
out
jl
ljmp
add
pusha
jmp
jle
insl
mov
or
add
es
lahf
mov
mov
scas
test
sbbl
gs
dec
jmp
jnp
das
sbb
dec
fs
cmpsb
add
dec
and
mov
push
mov
inc
cmpsb
orl
out
mov
mov
mov
mov
mov
jnp
sbb
mov
rol
cltd
push
mov
cltd
andl
dec
imul
daa
mov
mov
cs
addl
cli
mov
xor
mov
cmp
push
lea
and
cmpsb
jmp
aam
mov
stos
in
mov
mov
fadds
testl
push
jns
xor
sub
cmpsb
mov
mulb
ret
mov
loopne
cmp
add
adc
ja
lock
iret
add
adc
std
add
icebp
or
xor
stos
xchg
int
pop
pop
sub
in
mov
xchg
sahf
testb
stc
jo
fdivr
fsubrs
sub
dec
jmp
addr16
loope
and
das
mov
xor
cmc
cmp
hlt
shrl
pop
xor
out
xchg
sbb
push
jp
jae
xor
fmul
scas
pop
leave
pusha
ja
sub
jo,pn
add
lret
cmpsb
out
xlat
dec
push
cmpsl
and
shr
sti
cmpsb
std
aam
addl
mov
mov
add
test
jne
push
jp
push
inc
add
mov
jg
sub
jnp
pop
pop
adc
mov
mov
mov
xor
jp
pop
sub
std
int
pop
sub
daa
shr
pop
or
mov
dec
gs
data16
mov
and
cmp
push
adc
jle
cmp
mov
pop
add
pop
test
mov
stos
loopne
jmp
test
movsl
fcoml
jg
mov
andnps
or
adc
insb
push
adc
mov
push
add
pop
imul
stos
subl
lahf
pushf
push
nop
mov
mov
cmp
jle
xor
roll
lret
xchg
out
outsl
add
lods
cmp
push
mov
arpl
lods
fs
dec
push
xor
jecxz
gs
pop
vpmaxuq
imulb
inc
and
add
notl
xor
repnz
ret
loopne
add
repz
cld
outsb
cmpsl
dec
pop
es
popa
sbb
enter
xchg
cltd
jae
lahf
jno
xchg
nop
cs
sbb
outsl
cmp
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
inc
jo
dec
jge
jo
in
and
adc
adc
mov
aaa
or
adc
aad
push
in
test
dec
cli
pop
sahf
mov
push
cmpsb
mov
dec
adc
cmp
mov
lds
pop
lds
xor
pop
cmp
ja
jmp
xchg
incl
inc
lods
mov
push
fwait
fsts
sbb
adc
lcall
pop
mov
lods
hlt
mov
mov
xchg
pop
std
outsl
adc
xor
fsubr
mov
cmc
dec
fisttpll
lcall
insb
add
cmpsb
pop
dec
sbb
push
das
push
adc
clc
jecxz
in
or
cwtl
mov
dec
dec
fmuls
adc
cld
sub
jbe
dec
dec
mov
or
add
out
lds
jecxz
mov
data16
sbb
fsubl
sub
xor
xchg
clc
or
xor
gs
fsubp
and
xchg
pop
inc
in
or
aad
ss
push
imul
std
or
vphaddbw
jb
dec
jnp
dec
out
mov
jecxz
push
mov
dec
lock
out
add
popf
jl
dec
hlt
jne
in
xor
ds
sbb
mov
repnz
stos
mov
cmc
jg
mov
daa
pop
shll
mov
lods
shll
push
movsb
daa
lret
cmp
loop
xchg
pop
pusha
sbb
mov
bound
sbb
test
fwait
xor
loope
add
xor
or
mov
jae
outsb
xchg
mov
cld
push
add
mov
jne
inc
prefetch
sbb
lea
sub
dec
std
loope
pop
stc
loopne
sbb
sub
and
jle
push
dec
jl
and
and
push
jmp
xchg
mov
out
push
sub
push
test
pop
insb
or
pushf
dec
inc
fisttps
ret
mov
loop
push
dec
mov
into
test
not
jmp
leave
jecxz
pop
dec
xor
pushf
push
test
dec
int
push
gs
mov
adc
fwait
roll
mov
icebp
arpl
jp
xor
jno
aad
or
cwtl
orb
outsl
daa
arpl
dec
add
xchg
mov
test
fdivr
stc
cld
movsb
inc
mull
cmpsl
and
divb
into
inc
cmp
mov
inc
jmp
add
or
mov
outsb
sbbb
cli
out
sbb
pop
pop
movb
inc
fs
push
bound
dec
pop
jg
imul
scas
add
nop
xlat
mov
mov
xchg
mov
mov
rorb
jns
test
arpl
inc
or
add
jmp
sbb
inc
xchg
decb
or
ret
add
es
inc
mov
mov
push
cli
mov
jo
cmpsb
sbb
pop
testb
test
inc
out
ret
push
sub
mov
mov
dec
lock
in
daa
mov
pop
mov
add
aas
test
es
xchg
inc
mov
pop
mov
mov
push
scas
decl
xor
mov
jo
ds
imul
out
cmp
fimuls
out
cmpsl
popf
or
imul
sub
mov
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
sbb
dec
jo
dec
jge
jo
shrl
pop
mov
pop
test
ljmp
inc
not
xchg
xor
insl
sub
pop
clc
lret
xor
mov
pusha
cs
adc
stc
add
cwtl
cli
pop
das
out
shrl
xchg
xor
mov
imul
das
cli
fcoml
xchg
inc
out
adc
pop
dec
int
adc
loop
jmp
xor
jae
jae
das
mov
cmpsl
sti
push
sbb
xchg
mov
pop
lcall
or
xor
xor
ljmp
clc
xor
stos
clc
insl
sbb
scas
xchg
pop
jp
scas
jle
push
mov
dec
dec
xlat
fsubl
dec
mov
loopne
stc
out
cmp
jp
mov
adc
mov
jge
daa
pop
jnp
pop
fists
addr16
in
jl
inc
pop
pop
adc
xor
fisttpl
pop
in
ret
lods
insl
outsl
and
mov
fisttpll
mov
mov
sbb
sti
jb
lahf
into
ds
jge
enter
in
insl
inc
pop
jp
add
out
repz
pop
push
out
mov
mov
out
test
call
enter
fbld
add
popf
push
iret
ret
movsl
nop
mov
push
and
push
cmp
test
fs
pop
sbb
fcoms
ret
add
inc
lea
mov
mov
jb
popf
mov
roll
pop
sarl
push
incb
dec
and
inc
std
mov
mov
addr16
pop
mov
push
jg
cmp
lret
sbb
cltd
imul
sti
inc
push
int
pop
mov
or
xor
clc
inc
fdivl
xchg
push
add
roll
sub
out
ror
loopne,pt
or
mov
jo
jno
push
xor
dec
lret
out
clc
popf
sti
adc
mov
inc
adc
jo
jge
jb
xor
sbb
pop
adc
loopne
cmp
js
je
loope
mov
sub
scas
cltd
fsubr
ds
inc
int
jp
sbb
lds
popa
insb
xchg
jl
dec
and
das
les
daa
ret
mov
cltd
cmp
aam
rcr
out
jl
xor
dec
and
xchg
jmp
mov
ret
cmp
jle
xchg
sbb
rol
ss
jecxz
repnz
pop
dec
out
cmp
das
aam
xor
sbb
pop
roll
in
push
insl
sahf
sarb
ljmp
or
push
jnp
int3
xchg
nop
mov
js
outsb
mov
mov
xlat
xchg
adc
addb
jmp
mov
fmuls
cld
sbb
out
sub
rorl
into
lcall
mov
push
popf
fimull
sub
lea
mov
mov
xchg
cmp
flds
pushf
add
mov
inc
add
dec
sbb
xchg
mov
sbb
pop
add
loope
mov
sbb
insl
jecxz
ja
loope
les
adc
dec
addr16
cmpsb
pop
add
mov
fsubs
adc
rol
pushf
add
bound
iret
and
inc
scas
cmp
fistpl
outsb
and
xchg
push
les
or
cmp
divb
aad
jnp
or
inc
je
jge
lret
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
cltd
lods
cmp
adc
jo
jge
jo
sti
std
loopne
mov
push
cli
mov
jb
sbb
push
sbb
adc
lods
inc
adc
adc
ljmp
rorl
add
mov
sbb
jecxz
xchg
sub
insb
lods
jle
cmpsb
loope
into
cmpsb
lahf
push
xchg
cmp
xchg
in
and
xchg
popl
repz
sbb
sub
int
jp
sub
dec
leave
dec
push
mov
movsl
cmp
out
jp
lds
mov
jmp
cmp
dec
xchg
push
xor
lcall
mov
loopw
popa
loopne
pop
sbb
test
push
jne
mov
sbb
add
or
jl
xlat
jbe
je
and
push
inc
push
dec
inc
rcrl
cltd
push
add
js
inc
xor
jecxz
or
loopne
in
jmp
sub
mov
jae
out
xchg
inc
pop
stc
pop
xchg
push
js
hlt
mov
cli
sar
mov
jns
lret
sbb
cld
cltd
inc
mov
gs
idivb
sti
xchg
fsubrs
sarb
andb
scas
repnz
ret
test
addl
jecxz
aas
push
mov
xor
jecxz
xchg
cmp
mov
jle
xlat
pop
fistps
pop
push
cmp
xchg
pop
jl
push
adc
mov
dec
test
stc
sub
mov
dec
aaa
push
lret
inc
add
scas
repnz
test
inc
and
sti
imul
js
rcr
pop
addr16
mov
hlt
or
and
xlat
mov
stos
out
das
xchg
push
push
jno
imul
mov
jbe
dec
mov
and
inc
lods
dec
and
push
fisubs
adc
int3
mov
and
data16
sub
sub
andb
popf
js
jp
jo
xor
cmpsl
testl
xchg
les
hlt
inc
adc
cli
mov
pop
stos
dec
add
dec
cs
out
in
cmp
mov
shll
add
repnz
cmp
fstpl
daa
loop
in
int
out
add
dec
ja
lahf
pop
faddp
cmp
mov
cmpb
testl
jge
xchg
fnstcw
push
sahf
jo
inc
test
adc
and
lret
inc
cmp
imul
pop
mov
cs
add
cmpsl
lret
xchg
and
mov
into
aaa
idivl
xor
out
inc
mov
repz
cmp
testb
dec
pop
push
sti
lcall
xchg
mov
pop
mov
popf
sbb
push
aas
mov
dec
out
ljmp
add
add
inc
fwait
or
stc
dec
hlt
cmc
lret
sbb
mov
lods
pusha
test
les
aam
jae
mul
sbb
bound
insb
test
jge
push
testb
movsb
pushf
sub
lock
and
fstps
pop
enter
outsl
aam
lahf
test
mov
cld
mov
pop
fbstp
repnz
xchg
mov
stc
adc
pusha
jo
push
mov
arpl
mov
mov
insb
xchg
pop
mov
jne
and
fisubl
push
pop
push
jle
mov
addr16
pop
movsl
imul
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
