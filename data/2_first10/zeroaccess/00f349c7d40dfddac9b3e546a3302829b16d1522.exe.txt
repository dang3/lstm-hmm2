push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
test
mov
adc
adc
movlps
lahf
add
dec
mov
mov
stos
mov
lret
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
and
idiv
cli
in
enter
adc
imul
lret
push
into
cld
sahf
mov
adc
sar
nop
les
insl
scas
jno
lret
dec
ja
inc
dec
sbb
sbb
rorb
xchg
push
or
xchg
mov
jbe
sbb
sbb
and
scas
out
sub
mov
cmp
sbb
add
cmp
adc
cwtl
cmp
mov
cmp
sbb
pop
fnstcw
insl
pop
pop
or
jecxz
pop
call
cltd
xchg
fs
in
xor
sahf
dec
sar
in
sbb
rcr
jl
sub
lock
pop
xor
or
ficomps
jb
mov
mov
ror
jecxz,pn
xchg
cmp
mov
adc
mov
insl
adc
jo
pop
pusha
loopne
shlb
ficoml
dec
andb
lock
cs
rcl
addr16
dec
or
mov
push
insl
out
dec
popf
pop
xlat
sbb
mov
inc
or
push
or
xor
insl
cs
in
loope
dec
sbb
mov
push
aam
daa
pop
inc
stos
insl
pop
xor
mov
adc
faddl
repnz
jb
push
cmp
cs
or
cmc
sahf
popf
mov
movl
add
shr
push
add
add
push
mov
push
xchg
mov
movlps
movlps
daa
movsb
lods
loop
in
mov
fwait
outsl
push
add
dec
xor
adc
push
jg
adc
fbstp
pusha
ror
or
fldcw
xchg
das
inc
scas
pop
mov
xchg
fwait
push
jns
cmp
mov
call
aaa
pop
fs
sub
sub
icebp
fildl
daa
add
mov
xchg
test
loope
outsb
shlb
push
mov
outsb
jp
inc
dec
dec
rcrl
loopne
inc
pop
push
dec
int
popa
adc
dec
or
xchg
mov
mov
pop
out
incl
push
adc
push
popa
xchg
outsl
adc
pop
adc
test
int3
pop
pop
cmp
and
push
sti
nop
push
mov
sub
ljmp
out
ja
pop
inc
cs
gs
jecxz
mov
xchg
jb
hlt
sbb
iret
jg
ljmp
movsb
call
out
ss
and
mov
aam
add
icebp
in
out
xlat
test
gs
test
jnp
pop
movsb
add
je
push
xor
aad
cmp
jl
imul
mov
mov
leave
pushf
cmpsl
lret
loop
add
stos
sbb
xor
lods
popa
cltd
fildll
push
xchg
mov
jno
mov
sub
iret
push
inc
das
int
shlb
and
sbb
inc
mov
or
inc
cmc
es
jo
repnz
jmp
cmpsb
loop
mov
orb
cmpsl
in
fisubl
xchg
adc
test
adc
cmp
inc
mov
hlt
mov
push
jl
and
dec
fcomp
or
movsb
daa
lret
jecxz
jl
push
arpl
bound
and
cld
jmp
js
pushf
fdivr
andl
scas
add
lods
xchg
bound
mov
loop,pn
and
sub
xor
push
ss
stc
or
mov
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
mov
adc
movlps
popa
ss
and
pop
mov
xchg
les
xlat
fwait
jmp
xchg
inc
ljmp
xchg
test
jne
push
sbb
je
jl
mov
cmp
jmp
pop
mov
dec
xchg
stos
orl
shlb
push
mov
scas
movsl
mov
sbb
mov
xor
pop
cmp
adc
icebp
adc
fildll
rorl
xor
add
jno
mov
dec
jno
in
mov
sub
gs
sbb
xchg
pop
push
xlat
lret
jns
jg
xor
push
jno
sbb
cmp
popa
pop
xor
aaa
scas
rorl
add
xlat
mov
xchg
notb
and
mov
xlat
in
in
lods
push
pop
and
push
xlat
cmp
push
ret
push
les
nop
jmp
sarb
loop
mov
mov
sarb
or
orb
or
insb
sahf
addr16
push
pop
repz
mov
into
mov
or
xchg
sahf
ds
sbb
mov
leave
xorl
inc
dec
push
dec
mov
add
cs
adc
push
sbb
ljmp
cwtl
inc
jl
inc
sbb
and
ret
cmp
push
inc
mov
push
push
add
mov
shrl
bound
mov
add
out
cs
ds
pop
mov
imul
jle
push
popf
dec
adc
xchg
data16
inc
xchg
js
mov
sub
movsb
flds
sub
ds
pop
mov
test
mov
adc
xor
ffree
pop
add
int
adc
and
push
and
lahf
add
jnp
nop
ret
or
inc
sti
enter
loopne
adc
sbb
jb
lds
inc
adc
mov
mov
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
and
adc
movlps
xor
cmp
mov
das
in
pop
leave
push
push
cld
ss
xchg
scas
repz
mov
imulb
mov
sbb
jns
ret
repz
aas
in
inc
into
repz
test
outsl
mov
mov
fnsave
insb
outsl
out
loop
xor
outsb
out
mov
mov
out
pop
jne
jl
enter
pushf
int
fbstp
insb
insl
xor
rcrl
neg
movsl
mov
mov
cmpsl
mov
flds
jb
jmp
out
fnstsw
repnz
add
push
lods
fcmovbe
pop
sbb
sub
push
loope
adc
push
repnz
lcall
in
mov
jne
imul
fists
in
adc
hlt
decl
sarl
mov
lcall
movsl
jae
addb
repz
pop
adc
fsin
mov
inc
in
mov
enter
call
je
mov
and
cmc
aas
mov
sub
lret
cmp
aam
push
push
inc
int
cs
pop
xor
dec
sti
lahf
sub
ret
jae
mov
scas
jg
cltd
push
mov
pusha
mov
sub
bound
or
movsb
add
pop
lahf
loope
mov
xlat
dec
mov
ret
cmp
ret
pusha
jns
push
pushl
cmp
outsl
mov
adc
cmpsb
xor
mov
mov
or
cmp
push
pop
int
out
push
shlb
mov
int
xchg
pushf
mov
imul
sbb
std
ret
lcall
aaa
lahf
lret
mov
sub
mov
out
inc
xor
mov
mov
jmp
sbb
add
jb
test
sub
mov
mov
movl
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
mov
movlps
mov
push
hlt
hlt
aam
dec
test
sub
pop
ret
sub
nop
rcr
sarl
adc
dec
jae
dec
out
test
out
std
movsl
push
push
iret
cmpsb
popa
out
sub
ss
leave
xor
rcrb
outsl
push
add
add
xor
pop
scas
mov
jno
jnp,pt
insl
jae
push
mov
sub
jp
mov
inc
xchg
cmp
sti
fidivl
shrb
in
and
adc
add
repnz
cmp
cwtl
adc
insb
sarl
movsb
imull
pusha
ficomps
push
sbb
insb
jo
scas
mov
sub
test
in
fwait
js
setp
add
sti
fcmovbe
push
mov
scas
mov
push
lret
in
xchg
dec
xchg
movsb
xor
leave
nop
lock
and
push
xor
and
xor
mov
sub
enter
scas
mov
mov
bnd
ret
and
xchg
pop
test
mov
test
sub
xor
jmp
pop
jmp
iret
mov
cld
lret
pop
movsl
push
loope
orb
and
pop
and
ss
sbbb
cld
xchg
data16
mov
fmull
jno
mov
pop
stos
test
psrld
adc
pop
pop
adc
popf
sahf
inc
aam
aam
ds
push
jo
mov
scas
mov
and
mov
mov
out
inc
dec
popf
xor
pop
cmp
repz
jb
loopne
idiv
inc
int3
dec
dec
scas
sbb
mov
push
sti
insb
popa
rorl
gs
push
xchg
add
or
cli
mov
pop
xor
add
add
pop
jecxz
xor
sub
push
jo
mov
notl
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
insb
call
adc
movlps
cmp
xor
mov
ficoms
les
jp
mov
mov
dec
mov
popw
cmp
idivl
or
mov
mov
sahf
arpl
mov
pop
mov
aad
adc
mov
notb
lods
mov
cmpsl
fsubrs
shl
aam
mov
inc
fistpll
test
sbb
inc
dec
xchg
xchg
and
stos
test
out
aas
xchg
xor
mov
or
stos
out
inc
in
dec
cs
cmp
xor
sahf
stos
je
imul
push
add
or
xadd
fwait
or
insl
loopne
into
dec
inc
xor
cmp
jge
or
pop
daa
daa
cmp
sbb
sub
sub
adc
jno
sub
push
aad
xchg
mov
sbb
or
pop
adc
jb
inc
cmp
sub
faddl
movl
fdivrl
lods
mov
jmp
pop
mov
or
push
pop
cmpsl
push
jp
inc
fcomip
mov
xor
lock
xchg
fistps
scas
sahf
inc
ja
sbb
outsb
movsl
inc
loop
into
adc
loopne
imul
insb
cmpl
cmp
adcb
lahf
xlat
fstpl
ret
sub
sbb
inc
cmp
nop
push
pop
js
imul
xchg
and
mov
out
xor
loopne
cmpsl
icebp
add
mov
and
leave
lock
js
adc
and
mov
mov
sahf
sub
sti
xor
out
nop
out
lcall
jne
leave
jecxz
cltd
dec
inc
adc
pop
mov
lcall
test
je
arpl
mov
aam
lds
repnz
sahf
sub
and
inc
add
adc
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
ds
sti
sti
adc
movlps
dec
les
call
pop
dec
addr16
fdivl
cmp
icebp
lcall
and
xor
cli
cmpsl
ret
cmpsb
mov
mov
jge
in
clc
mov
outsl
adc
adc
push
decb
inc
into
add
test
arpl
mov
aaa
inc
test
push
aas
std
stos
scas
loop
dec
clc
pop
sub
pop
rcrl
jbe
fnsave
sub
cli
jecxz
xor
xchg
inc
or
xchg
popa
sahf
sub
mov
ret
and
dec
test
jb
notl
hlt
scas
loop
vmovq
push
addb
js
inc
xchg
sbb
out
sbb
repnz
lea
fdivrl
adcl
inc
aas
lods
cmp
outsb
enter
cmp
lds
xchg
xor
test
pop
hlt
jo
pop
scas
inc
std
imul
mov
cmp
in
dec
popf
sub
xchg
in
inc
mov
shrl
mov
sub
add
cmp
lock
movsl
fcmovbe
sbb
mov
fnsetpm(287
popf
mov
mov
test
std
jno
push
push
cmp
lods
sub
xor
int3
fidivrs
jl
cmp
faddp
mov
sti
into
or
shrb
mov
adc
insl
xchg
mov
cwtl
cld
fucomp
imul
mov
aad
popa
bnd
rcrb
push
mov
repz
mov
test
clc
insb
and
xchg
inc
js
jo
sub
jl
inc
testl
lret
add
xchg
das
sahf
loop
call
dec
xlat
cmp
xchg
sub
cwtl
mov
emms
sbb
and
mov
addl
xor
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
sahf
lods
div
adc
movlps
mov
push
cmp
jb
jns
mov
repnz
inc
ret
cmp
cmp
jecxz
xor
add
jbe
add
sbb
ja
mov
inc
aas
fcoms
testb
icebp
cmc
pop
loop
mov
fs
sub
lahf
js
mov
mov
fs
push
das
int3
add
push
fs
xlat
lds
pop
shlb
scas
data16
mov
mov
xlat
ja
push
inc
or
xchg
pop
pop
mov
pop
sub
and
push
test
add
jnp
sbb
in
push
jbe
or
pop
xchg
xchg
aad
jl
stos
pop
sub
xor
jb
pop
das
xor
inc
outsl
adc
cmp
mov
xchg
stc
xor
fisttps
cltd
mov
add
inc
push
frstor
insb
fldt
ja
shrl
icebp
gs
mov
bound
cltd
or
xchg
jno
sbb
jnp
sub
lcall
imulb
pop
mov
or
jnp
push
xor
adc
lds
scas
iret
sbb
cmp
in
mov
pop
mov
jg
jae
pop
lret
call
loope
lcall
inc
daa
xchg
nop
mov
mov
inc
pop
jns
sahf
mov
xchg
into
aaa
add
les
mov
mov
mov
xor
std
sub
cmp
jp
jg
push
push
xor
pop
xchg
out
mov
xchg
mov
cmp
fs
or
mov
int
mov
pop
and
mov
push
pop
pop
push
sub
add
xlat
dec
das
push
call
cwtl
jo,pt
loope
dec
mul
icebp
cmp
and
push
push
stc
in
das
sbb
pushf
inc
fwait
add
xchg
mov
stos
push
insb
xchg
xchg
push
mov
mov
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
jg
insb
repz
movlps
repnz
jle
xchg
jmp
jecxz
cli
std
cmp
out
dec
pop
out
pop
jmp
xchg
push
shrl
lcall
jnp
movsl
fldt
stc
test
mov
pop
mov
mov
mov
fisttpll
push
xlat
xchg
jbe
mov
fnstenv
outsl
or
imulb
mov
dec
test
dec
jo
dec
inc
jb
ss
or
faddl
test
cltd
cmpsb
imul
mov
jae
mov
movsb
lods
cmp
loope
or
xchg
cmp
adc
std
dec
inc
inc
lret
aam
mov
test
xor
cmpsl
cmp
std
test
fsts
and
jg
fldt
push
or
mov
cmp
dec
xchg
xchg
inc
jmp
xchg
xchg
and
cmp
push
cld
je
out
xorb
dec
imull
adc
andb
xor
adc
jbe
jmp
in
push
dec
jae
push
insl
jbe
ja
adc
pushf
xor
aad
add
cmc
jne
fcmovne
or
sub
mov
xor
dec
sbb
mov
mov
loopne
sbbl
cltd
xor
pop
sbb
pop
inc
or
xchg
mov
push
xor
sub
jg
lods
push
lds
sub
cmp
shlb
test
mov
cli
lock
add
jmp
cmc
mov
int3
dec
lcall
mov
xor
sarb
pop
jmp
xor
sub
repz
pop
mov
mov
aam
lods
cs
fdivrs
jo
adcl
js
adc
cmc
cmpsl
decb
mov
pop
adc
mov
addl
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
test
out
adc
movlps
nop
mov
sbb
pusha
sub
insl
push
or
fidivrs
lock
or
movsb
pop
or
jo
add
mov
push
xchg
out
fcmovnb
dec
lods
and
inc
hlt
add
outsb
add
mov
lahf
icebp
push
push
xchg
das
inc
gs
or
fcompl
mov
sub
aaa
leave
push
mov
mov
jmp
in
push
push
xchg
in
xchg
add
xor
and
xchg
leave
inc
shrl
mov
popa
mov
xor
lcall
lret
lcall
sub
enter
enter
jecxz
nop
test
cmc
jmp
sbbb
and
dec
stos
xchg
dec
xor
jle
shrb
push
repz
xor
out
xor
pop
mov
push
push
lcall
imul
data16
sahf
or
add
cs
cltd
fbld
push
call
sti
cmp
sbb
fidivrl
andl
imul
and
fimuls
push
adc
lret
and
push
stos
jae
rcll
es
add
mov
push
mov
fabs
push
idiv
sarl
movsl
imulb
pop
fldcw
aas
adc
mov
fs
push
jbe
ret
imulb
xor
xlat
test
or
adc
insl
ja
and
add
and
dec
repz
inc
cmp
cmp
jle
imul
pop
bswap
mul
fisubrs
cltd
lods
nop
iret
push
pop
sbb
inc
fidivs
nop
icebp
test
in
loop
nop
add
movsl
xchg
dec
sahf
add
inc
arpl
out
jmp
insb
lcall
jbe
lret
xchg
and
and
push
inc
adc
ds
lret
int
int
xor
fs
mov
push
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
dec
jmp
jmp
adc
movlps
add
int
inc
in
insl
sbb
xlat
mov
pop
jne
mov
push
in
stc
dec
lahf
mov
shlb
aam
cwtl
push
sub
lods
mov
xlat
push
jge
js
push
mov
rolb
in
mov
jne
add
jae
pop
pop
jnp
imul
lock
movsb
jns
bsf
sub
jne
mov
cs
mov
stos
loop
inc
push
sarb
mov
roll
test
mov
or
mov
push
sub
xlat
loopne
adc
fbstp
dec
add
aad
sub
sarl
inc
or
pop
pop
inc
cmp
cmpb
bound
xchg
fsts
shufps
push
pusha
jae
adc
cld
iret
mov
adc
xor
mov
lahf
dec
js
cwtl
mov
lret
jo
xor
sub
inc
pop
call
test
sbb
dec
xchg
mov
insb
push
xchg
lret
dec
mov
cs
call
dec
repnz
in
or
xchg
cmp
sti
sti
inc
fwait
and
pop
rcrb
test
lret
mov
iret
lahf
jp
daa
sub
push
cmp
jae
insb
sbb
mov
fisubl
popa
push
dec
add
mov
aam
pusha
pop
add
cli
push
popa
fwait
test
loop
test
roll
icebp
sbb
data16
sub
mov
xorb
nop
popf
mov
aaa
outsb
push
daa
jmp
cld
push
push
cmp
mov
loopne,pt
rclb
gs
out
pushf
push
cli
aam
adc
mov
sbb
adc
pop
clc
std
pusha
inc
mov
cmc
movsb
jg
scas
sbb
jo
iret
push
xor
sub
dec
or
sub
aam
hlt
int
push
in
das
push
aam
cmc
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
js
call
adc
pop
stos
neg
movsb
bound
and
mov
or
or
fld
mov
leave
int3
lret
push
test
mov
stos
inc
fbld
lds
sbb
imul
push
jge
or
fdivrs
or
dec
cmpsl
pop
in
push
add
ret
push
xor
sahf
add
cmp
add
andl
into
ror
mov
cmp
adc
sub
adc
jnp
enter
std
sbb
xchg
inc
popa
sahf
mov
and
push
jmp
xchg
push
push
and
ljmp
jbe
je
xor
xlat
mov
cmpsb
jle
inc
arpl
cmp
lret
jecxz
scas
loope
dec
mov
lods
pop
sti
push
mov
push
mov
leave
aad
es
incb
mov
cmp
push
insl
inc
pushf
gs
sbb
into
divl
inc
mov
xor
xchg
test
sti
scas
insl
or
fwait
push
mov
inc
enter
add
lsl
aad
repz
cmp
daa
push
iret
inc
pop
into
ror
pop
add
fimuls
dec
jp
cmpb
mov
fistpl
jp
pop
push
aad
push
andb
push
jle
gs
fsts
xchg
test
jnp
dec
test
js
xor
cli
call
push
ss
adc
push
dec
js
fimuls
cmpsl
arpl
ds
cmp
movaps
mov
fwait
jb
ret
cs
or
sarb
insl
inc
sbb
jbe
fdivl
pop
mov
add
movsb
inc
mov
xchg
rcll
subb
in
fwait
mov
gs
popa
mov
adcl
dec
sarl
cld
call
negb
call
lds
dec
sti
adc
or
add
test
inc
adc
inc
cld
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
fisubs
adc
movlps
inc
sbb
filds
sarl
jg
scas
jb
hlt
sbb
xlat
ret
je
cwtl
fs
push
ja
jp
mov
js
clc
hlt
or
or
push
cwtl
push
mov
jb
movsb
test
in
mov
cmp
fwait
xor
addr16
cmp
push
leave
and
sub
push
shlb
das
mov
or
dec
sar
jno
popf
fs
rolb
fbstp
and
mov
jo
or
push
jb
inc
out
sub
sbb
es
xchg
or
hlt
or
jae,pt
inc
ja
pushf
addl
enter
imul
mov
pop
pop
lcall
add
fimull
mov
pushf
cld
bound
dec
jge
fwait
mov
and
aad
inc
mov
and
push
sub
cwtl
push
push
clc
or
scas
sub
in
mov
cmp
ja
add
scas
fcmovnbe
push
das
repz
inc
fidivs
lods
cmp
pushf
into
test
sbb
in
mov
inc
cli
push
hlt
fdivl
ret
xchg
enter
fwait
dec
mov
lods
xor
xor
push
scas
xor
stos
ret
jbe
xchg
jle
xchg
ret
push
dec
pop
push
push
push
xchg
decb
xchg
test
xor
mov
inc
test
cld
add
xor
divl
out
stos
pop
xchg
mov
test
jp
lea
mov
cli
out
and
lds
dec
inc
test
cmpb
or
aam
repz
inc
iret
movsb
push
lods
adc
aas
inc
xchg
out
xchg
pushf
std
jg
mov
hlt
or
in
mov
fwait
sub
int
jae
mov
mov
cmp
test
push
test
sbb
scas
into
clc
call
pushf
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
xchg
ss
loopne
adc
movlps
mov
mov
and
xor
movsl
stos
popl
inc
sbb
fldenv
inc
es
out
sti
inc
lds
xchg
sbb
ror
daa
sub
call
es
jb
cmp
lret
ret
push
lods
sbb
xor
sete
dec
popa
mov
neg
mov
in
sub
ja
mov
mov
cmpsb
rcll
int
test
fwait
inc
sub
ljmp
jne
jno
jbe
lds
push
mov
push
clc
in
shrl
dec
xchg
test
subb
dec
inc
mov
repnz
jg
lcall
mov
aam
data16
xchg
into
arpl
xchg
jmp
fxch
push
mov
aaa
stc
pop
push
rorb
adc
inc
out
cs
or
sahf
lods
xchg
or
push
movsb
sbb
cmp
shr
adc
in
repnz
cmc
sub
es
test
fistps
popa
outsl
and
xchg
mov
fsubl
dec
dec
xor
data16
rol
mov
rcrb
inc
pop
out
adc
xchg
xor
bound
in
arpl
add
push
orl
divb
mov
mov
ds
pop
pusha
into
mov
sub
push
and
adc
fldl
mov
cltd
std
xor
mov
loopne
xlat
ret
lcall
repz
mov
jge
xchg
xor
xor
sub
cs
pop
pop
jns
jle
into
in
outsl
lds
into
hlt
mov
pop
or
pop
push
mov
xor
arpl
aad
outsl
iret
xchg
ficompl
enter
xor
push
mov
mov
lds
jo
pop
fwait
scas
xlat
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
inc
sbb
jle
fcoml
adc
movlps
mov
stos
enter
lahf
ss
clc
popa
aad
ret
push
jmp
bound
js
movl
inc
test
jno
imul
movsb
inc
push
fsub
mov
jg
jecxz
jecxz
rol
lret
out
dec
sahf
int3
xchg
ljmp
iret
out
push
pushf
push
or
jl
fsubr
pushf
pop
shr
xchg
xchg
jp
cmp
mov
adc
inc
sahf
shrl
xchg
insb
popf
pop
sarb
aaa
push
sbb
jb
pop
dec
aaa
jecxz
cmpsb
sub
mov
test
rcrl
cmp
inc
and
out
add
sub
sub
xlat
pop
dec
sbb
cmp
mov
jo
nop
aas
ss
sub
scas
imul
in
lahf
and
loope
mov
rclb
push
lcall
mov
mov
shl
pop
dec
ret
ss
push
mov
jnp
inc
pop
mov
push
in
aaa
mov
inc
xchg
inc
test
mov
js
pop
mov
and
pushf
xchg
or
pop
lcall
lock
sbb
sbb
pop
jns
pusha
fdivl
lds
shll
lods
mov
push
adc
pushf
sub
loop
aaa
test
repz
mov
add
aad
fadd
xor
shll
sbb
inc
iret
jae
ss
gs
dec
es
test
pop
les
sbbl
lea
rcrl
sarl
jmp
or
xchg
pop
or
push
mov
std
cmpsl
mov
daa
insl
jae
and
cmp
add
cmc
les
sub
mov
lods
push
dec
xor
cmp
sub
and
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
mov
loopne
fcomp
adc
movlps
pop
fistpl
xchg
fidivrl
pop
iret
cmp
xor
sar
jecxz
out
ret
lods
adc
sbb
dec
jp
mov
dec
dec
xorl
or
push
mov
jle
mov
rclb
xor
xchg
rorl
push
pop
not
cmc
sarb
test
out
sbb
mov
inc
pop
stos
mov
mov
add
sbb
add
push
in
nop
orl
push
shll
cmp
sub
test
jecxz
push
sbb
lcall
ret
push
sti
lods
mov
dec
add
sbb
pop
test
pop
push
fstpt
cmpsb
imul
addr16
cltd
jb
leave
fisubrs
cmp
mov
lock
jnp
in
fisttpll
mov
fwait
dec
cmpsl
lea
jb
mov
fwait
rcl
int3
inc
or
ret
outsb
loop
pushf
add
jge
nop
mov
xchg
test
cs
out
inc
test
or
mov
pop
dec
mov
pop
ljmp
imul
mov
xchg
xchg
rclb
nop
bound
ja
lahf
adc
add
adc
xorl
push
notl
add
jnp
mov
push
xchg
shll
int
hlt
and
stc
push
or
aad
mov
test
sub
mov
or
push
dec
mov
leave
sbb
xchg
mov
icebp
fdivrl
mov
jmp
cmp
jmp
or
fs
sub
and
adc
sahf
popa
bound
cmp
ret
mov
lret
cltd
xor
sub
inc
sbb
pop
push
mov
scas
fistl
ljmp
xchg
xchg
add
or
pop
mov
add
cmpsl
mov
jmp
sub
mov
fstpt
testb
aam
adc
movlps
fbld
sbb
xor
inc
mov
cli
pop
mov
fwait
jae
adc
adc
idivl
fcomps
jmp
ja
ljmp
push
pop
jno
push
dec
shrb
ja
ret
add
movsb
dec
lahf
or
jmp
mov
xor
mov
mov
cld
add
xlat
add
outsb
fstpt
mov
push
das
push
or
divl
sbb
loope
and
push
sbb
insb
jae
adc
outsb
xchg
popf
outsb
cmp
push
sbb
mov
push
xchg
repz
and
pop
lahf
out
sub
imull
add
gs
out
or
lcall
lret
scas
jp
rcl
pop
dec
repz
stc
out
lds
inc
ret
push
aaa
arpl
mov
pop
add
add
mov
mov
outsb
jb
mov
inc
dec
xchg
inc
shrb
clts
xchg
mov
jle
xor
adc
mov
and
ja
sub
add
out
push
add
je
xor
or
rcl
shrb
sub
and
aam
mov
fcompl
imul
or
mov
leave
mov
out
pop
pushf
icebp
adc
mov
leave
or
iret
test
xchg
inc
push
sbb
lock
loopne
add
pop
jbe
sti
lret
push
jle
mov
outsb
dec
pop
scas
sub
loop
adc
fistpll
in
jl
sbb
add
out
shll
or
pop
lcall
rclb
cmp
mov
fidivs
xchg
dec
inc
pushf
lods
jo
daa
xor
out
jne
fnstsw
pop
or
xchg
pop
sub
add
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
jbe
js
rclb
adc
movlps
and
nop
std
cmp
mov
mov
bound
xchg
mov
xchg
dec
std
fstl
jg
mov
inc
xor
decl
inc
scas
push
adc
fists
gs
sub
bound
fimuls
and
cmp
sbb
mov
call
pop
inc
xlat
xorl
pop
divb
fucomip
icebp
sbb
fisttpl
push
out
dec
pop
hlt
sbb
movsl
in
mov
add
ss
or
inc
mov
repnz
iret
jae
mov
fildll
push
dec
aam
in
sbb
mov
mov
jl
int
lret
sti
add
cmpsl
cmpsl
cwtl
cltd
loope
lcall
lods
leave
aaa
std
lret
pop
arpl
addr16
pop
jno
mov
mov
pop
roll
das
sahf
mov
add
adc
repnz
lahf
insb
mov
cli
xchg
sti
mov
iret
fcmovu
sub
and
cmpb
mov
into
xor
and
movsb
jns
icebp
cmp
pop
nop
mov
stos
lds
push
popf
xchg
lahf
add
xor
loopne
mov
adc
aaa
or
sub
and
shl
mov
cmpsb
inc
jp
lcall
sbb
adc
vhaddps
mov
ret
xchg
sahf
insb
xor
dec
or
dec
cmp
outsb
ljmp
add
mov
mov
or
ljmp
sbb
jg
or
push
gs
push
call
mov
insb
pop
repnz
into
jmp
enter
nop
inc
jp
jmp
adc
mov
mov
mov
mov
loope
ficomps
into
pop
fwait
lret
push
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
cli
push
push
int3
adc
movlps
jno
sbb
hlt
stos
ds
pushf
jge
inc
inc
shrb
add
mov
les
movsb
fwait
nop
in
fsubl
repz
lods
sahf
adc
mov
test
cmc
aad
adc
addr16
sub
dec
cld
pop
mov
jmp
hlt
fldenv
jge
xchg
adc
ljmp
xor
jne
fwait
call
out
push
outsl
icebp
sbb
inc
enter
mov
dec
ljmp
sbbb
mov
mov
sbb
jge
inc
sub
fildl
out
sbb
scas
push
subl
fbld
loope
stos
or
std
ss
sbb
add
aas
cltd
je
xchg
push
jmp
insl
jmp
xchg
femms
movsb
add
shl
orl
adc
pop
mov
faddl
loopne
pop
jmp
aas
pop
fucom
int3
dec
dec
ja
filds
xchg
loope
cmp
test
add
push
iret
popa
dec
scas
sub
dec
pop
add
repnz
fildll
jecxz
pop
mov
fs
out
les
fidivrs
fwait
out
xchg
stos
dec
les
fs
sub
gs
jge
cmp
pop
sub
add
add
sbbb
sbb
jmp
dec
sbbl
bound
call
imul
notb
out
jmp
mov
shrb
push
insl
fsubs
std
incb
out
pop
das
imul
mov
add
jae
mov
cmpsl
stos
pushf
imul
dec
or
data16
xlat
test
jns
cmpsb
jecxz
cmp
xchg
jns
cmc
js
popa
ret
push
or
sti
test
sub
sbb
outsl
je
popf
popa
cmp
add
xchg
repnz
fsubl
jae
dec
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
push
repnz
js
enter
movlps
fidivl
fucomip
dec
dec
es
imul
xor
in
inc
mov
ret
push
aas
leave
jns
mov
in
cmp
and
cmc
fdivrs
mov
out
movsl
pop
inc
fidivrl
cmp
pop
and
clc
or
rol
or
push
ficoms
pop
lret
and
mov
xchg
mov
xchg
mov
add
mov
dec
cmp
call
sub
fldenv
jl
popa
and
xor
cs
pop
mov
mov
mov
jmp
xlat
iret
js
push
loope
std
inc
mov
shrb
mov
ds
shrb
sbb
stc
jge
aam
aas
cmpsl
mov
adc
mov
mov
adc
adc
imul
popa
add
dec
dec
push
mov
xchg
addb
jo
sbb
adc
push
lock
aam
and
stos
enter
add
xor
cmp
xor
int3
cmpsl
xchg
movsl
cs
xchg
cmp
dec
pop
repnz
cmp
int
and
in
dec
inc
ss
fwait
pop
dec
adc
adcb
fnstcw
push
in
inc
sbb
xchg
xchg
sub
lods
sub
cwtl
negl
mov
lods
mov
mov
ret
insl
xor
and
insl
icebp
push
cltd
cmpb
out
xchg
loope
xor
sub
mov
jae
addb
xchg
push
inc
outsb
mov
repnz
popf
sbb
xor
lds
pop
gs
jg
repnz
sub
out
in
or
addl
jbe
push
mov
lods
lds
sbb
loop
in
scas
mov
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
enter
les
adc
movlps
mov
or
xchg
mov
xchg
or
xor
xor
ret
push
ret
fidivs
lods
rorb
xlat
adcb
jl
cld
iret
fsubrs
sbb
insl
push
into
dec
inc
in
or
xor
pop
sbb
sbb
cmp
xor
pop
in
loopne
inc
popf
mov
rclb
push
scas
jne
lret
jnp
enter
or
in
inc
popf
arpl
cmpl
jmp
jno
daa
cmc
fisubrs
cmp
adc
xor
dec
insl
test
push
cltd
jbe
cld
cli
gs
out
xchg
add
jno
idiv
lret
dec
fcmovnu
xchg
cmpsb
dec
jmp
std
and
mov
cli
pop
aas
mov
and
or
cmc
cltd
sarl
and
daa
outsl
lret
pop
mov
sub
jl
sarl
cmp
lods
ja
sub
jns
adc
add
rcll
pop
cli
arpl
and
ljmp
repz
ret
js
mov
jo
insb
arpl
xor
push
loopne
sub
jl
pop
adcb
popa
notb
xor
inc
imul
lods
sti
gs
lods
pop
sub
and
mov
jl
sub
iret
xchg
clc
jp
lret
mov
out
jne
push
fildl
or
add
cmpsb
adc
xor
pop
mov
movsb
or
pop
sbb
xchg
mov
in
fsubs
xor
jnp
add
fimull
pop
inc
cmp
daa
xor
pushf
out
imulb
sub
dec
rclb
add
popf
adc
jb
negb
es
cmp
sbb
lods
sbb
push
sar
dec
mov
fs
imul
dec
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
mov
mov
rol
adc
movlps
pusha
pop
lods
loop
inc
testb
cmp
dec
mov
and
iret
inc
mov
push
movsb
fcoms
xlat
enter
xchg
loopne
lock
cltd
inc
push
xor
xchg
test
lock
jle
adc
icebp
dec
adc
push
cmpsb
aad
cmpsl
aad
dec
lea
dec
into
scas
aaa
inc
int3
push
out
push
xor
mov
mov
mov
inc
or
aas
xchg
inc
out
mov
popa
push
cmp
iret
loopne
pop
mov
mov
in
pop
fstpt
sub
in
mov
fdivrp
std
mov
xchg
lea
mov
cmpl
mov
jb
repnz
sub
mov
sbb
push
rcll
lcall
xchg
bound
cmp
dec
mov
scas
jne
xchg
loopne
rcr
xchg
and
push
mov
push
mov
ret
sbb
ja
mov
loope
xchg
push
xchg
js
in
jno
mov
sbb
mov
jne
sti
xor
fildll
roll
std
lahf
add
pusha
movsl
dec
mov
std
cmp
out
arpl
push
pop
test
jae
imul
sbb
mov
jmp
xor
mov
pop
aad
movsl
mov
sbbb
mov
sbb
xchg
mov
xchg
sub
lret
rol
pop
cmpl
loope
orb
out
inc
sub
jle
dec
fisubrs
subb
cmp
push
mov
in
in
push
xchg
fisttpl
aaa
dec
fdivs
fstpt
out
in
sbb
jmp
adc
out
pop
loope
dec
cli
mov
gs
push
mov
jae
sub
ljmp
jle
add
sbb
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
inc
sbb
adc
movlps
cwtl
inc
jbe
mov
lret
sub
rol
push
cmp
ret
nop
jp
inc
fs
xor
cli
repz
adc
outsb
add
dec
xchg
jle
push
mov
pop
or
fwait
out
out
imul
lock
cmpb
inc
js
scas
xchg
cmc
hlt
sti
sti
or
cmp
imul
test
test
inc
jb
adc
aad
cmp
ret
jecxz
mov
lods
cmp
jo
vprotq
out
test
dec
xor
outsb
adc
xchg
pop
iret
and
xchg
pop
in
insb
sti
mov
cltd
scas
inc
cmc
aas
sarb
mov
push
inc
pop
in
jmp
pop
jo
int
aam
imul
pop
es
sarl
lcall
or
mov
call
pushl
push
rcl
enter
or
clc
stc
add
out
mov
lea
mov
cmp
out
into
insb
enter
jge
les
shlb
dec
std
dec
sub
sarl
pop
pop
arpl
frndint
mov
movsb
cmp
cmpsl
sbb
pusha
in
mov
call
mov
and
push
cltd
push
jl
push
in
mov
ror
mov
push
test
hlt
insb
lret
pushf
test
stos
sbb
dec
sahf
add
inc
aam
into
pop
fs
sub
cmpsb
jecxz
push
xor
ret
mov
xchg
mov
xchg
push
mov
mov
rcrb
pop
mov
call
adc
push
aaa
daa
aaa
xor
shll
add
sbb
jmp
loope
dec
lods
mov
push
in
test
sub
lds
fcompl
arpl
mov
add
repnz
setg
fsubrl
int3
jae
inc
or
xchg
out
scas
xchg
lcall
push
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
ljmp
adc
movlps
xchg
psllw
rolb
adc
jns
and
stc
mov
fnstcw
cld
cmc
subl
mov
lods
aam
out
fucom
mov
rdseed
mov
cmp
inc
imul
mov
cmpsl
mov
pop
das
lds
sbb
pop
xchg
mov
mov
fadd
ror
test
dec
mov
repz
xchg
inc
testl
cli
out
incl
testb
sub
test
jns
xor
xlat
dec
daa
xchg
outsb
sbb
cmc
dec
fisubrs
jp
std
and
adc
repnz
adc
inc
adcb
cmp
stos
js
dec
mov
cmp
test
inc
dec
ss
adc
xor
pop
inc
fistps
leave
mov
adc
jns
mov
push
add
mov
into
addr16
mov
ffreep
aad
in
pop
pop
addr16
inc
inc
ficomps
mov
jmp
mov
iret
iret
push
rorl
mov
aam
ret
mov
sbb
neg
pop
cld
push
shll
cmp
inc
andb
pushl
stos
jg
sbb
gs
leave
repnz
outsb
pop
sbb
adc
in
shll
jbe
divl
fisttpll
inc
je
stc
mov
pop
and
rcll
rolb
sub
dec
xchg
addr16
fsts
fsts
loope
loopne
stos
jae
in
aaa
mov
push
cmp
jg
cs
mov
inc
fisttpl
clc
lcall
push
out
ret
in
insl
je
and
loopne
mov
cmc
arpl
test
cmp
into
sub
repnz
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
or
mov
jno
rcll
lods
inc
in
push
loope
cwtl
push
hlt
mov
repnz
enter
lods
and
push
mov
leave
sub
xchg
insl
rolb
jno
cmp
test
mov
sbb
shrl
xor
in
nop
mov
mov
adc
es
xchg
push
loopne
fisttps
pop
xchg
or
insb
dec
das
fstpt
scas
mov
sub
add
mov
xchg
dec
jbe
lret
sbb
fsubp
xor
adc
mov
rclb
sti
adc
cwtl
pop
stc
sbb
push
imul
add
xchg
sub
icebp
push
or
inc
in
andl
lock
pop
pop
hlt
xchg
jb
test
rcrb
adc
push
stos
insb
push
test
imul
fidivrs
dec
int
jnp
enter
in
jl
pop
xchg
mov
gs
push
sbb
popf
jmp
pop
cmpsb
sti
or
mov
mov
cld
xor
mov
push
inc
es
xchg
dec
xor
xchg
push
movsl
xor
and
popf
lods
inc
push
jle
jbe
ds
xchg
loop
cmp
jb
xchg
rcrb
pop
pop
inc
loopne
outsl
jle
add
fwait
mov
clc
or
or
lods
movsb
lret
cli
pop
add
mov
ja
inc
shlb
or
adc
mov
jne
sub
lret
dec
xor
push
cmp
push
fwait
ja
pop
or
movsb
les
shl
mov
lods
idivb
repnz
add
jne
mov
call
and
fisttps
rol
incl
rol
adc
jbe
mov
push
subl
rorb
pusha
cmovne
bound
mov
push
xor
adc
arpl
mov
pop
mov
ficomps
xchg
call
cmp
movb
aaa
jbe
xchg
orl
stos
addl
loope
pop
in
push
fs
dec
cmpsb
inc
outsl
add
ja
ret
mov
sbb
lret
cmc
push
cmpsl
cmc
es
inc
cmp
inc
ja
js
adc
jg
add
neg
dec
shlb
push
sbb
mov
fldt
mov
ret
jle
lfs
aad
bound
out
add
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
lock
movsb
js
mov
adc
sub
incl
adc
push
int
and
pop
mov
lahf
outsb
sbb
xchg
mov
mov
cwtl
xor
xchg
mov
push
mov
ss
fldl
imul
sub
mov
xor
sbb
jnp
xor
push
add
adc
cmpsb
push
dec
adcb
sub
mulb
or
mov
jne
lahf
rcl
int3
in
dec
xor
inc
xchg
aaa
jnp
fidivrl
push
fcoml
xchg
out
subb
jg
and
jecxz
add
out
ret
dec
je
in
jno
pop
lea
mov
js
das
in
pop
call
xor
xchg
sbb
sarb
cli
and
pop
scas
in
add
xchg
jp
pop
inc
lds
push
mov
sub
je
adc
inc
stos
sub
or
in
out
mov
lahf
jno
scas
push
std
push
outsb
adc
mov
jg
fs
or
cltd
adc
cmpb
mov
aam
jp
mul
out
ljmp
push
clc
test
or
nop
ljmp
add
jge
stos
dec
outsb
inc
imul
sahf
inc
cmp
fwait
pop
das
dec
mov
sub
cmp
inc
push
xchg
mov
aaa
xchg
push
jns
xor
add
jecxz
sub
inc
lods
mov
insl
repz
jno
xchg
add
jecxz
sub
int3
out
cs
push
push
inc
and
les
insb
test
mov
push
push
dec
jmp
rcrb
push
push
jo
and
sub
das
xlat
adc
dec
xor
push
testb
xchg
xchg
xchg
xchg
jp
push
push
out
ficomps
into
dec
cmp
jmp
mov
sub
cli
sbb
leave
mov
xchg
imul
pop
in
ljmp
scas
maskmovq
xchg
repnz
cld
mov
push
mov
aam
inc
dec
ret
lock
lret
out
scas
ja
decl
fildl
arpl
cmp
adc
push
lods
and
pushf
mov
dec
mov
les
sub
mov
loope
mov
shlb
lret
cmc
adc
adc
sbb
fs
and
insl
mov
inc
cmpsb
push
sbb
scas
pop
push
hlt
int3
adc
xor
add
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
sub
xorb
jb
jne
jmp
loop
xchg
lcall
mov
inc
jecxz
add
cmp
test
outsl
push
dec
test
rclb
pop
dec
rcll
cmp
inc
mov
cmp
aas
repnz
pop
daa
dec
dec
insb
push
insl
ja
aad
lods
ja
adc
pop
rorb
lret
aad
push
fstpl
mov
jmp
xchg
jbe
bound
mov
dec
fs
mov
dec
repz
mov
push
jecxz
and
dec
adc
cwtl
sub
pop
inc
mov
cwtl
xchg
lcall
shll
movsb
insl
mov
mov
inc
adc
cmp
cmp
int
jne
mov
shrl
outsb
mov
test
mov
fprem1
mov
loopne
xor
lods
jl
adc
jg
jmp
or
adc
lods
not
arpl
inc
mov
mov
lret
jmp
xchg
cwtl
xor
sti
sub
push
cld
loop
pop
cmc
js
inc
add
push
xor
xor
push
mov
dec
push
cmpsl
lahf
inc
xchg
inc
shlb
inc
push
push
mov
cmp
jbe
pop
pop
insl
mov
push
xor
inc
and
adc
cmpb
and
ds
les
xchg
xchg
scas
adc
inc
call
adc
pop
mov
push
out
cmp
xor
pop
mov
add
int
dec
roll
jle
test
pavgb
cmc
mov
imul
dec
pop
pop
imull
and
adc
lods
dec
push
mov
push
test
popa
lret
test
jp
dec
and
and
arpl
mov
and
stc
inc
mov
and
push
scas
xchg
fadd
fsubl
cmpsl
repnz
cmpsl
in
cs
pop
adc
aaa
test
cs
mov
mov
dec
push
mov
in
dec
fstl
add
cmc
adc
sub
iret
test
mov
pop
in
cli
nop
mov
out
push
add
mov
out
mov
push
ja
xchg
jno
fwait
js
sbbb
mov
jl
cmp
dec
bound
fidivl
iret
gs
gs
inc
pop
ret
pop
jb
xchg
mov
add
mov
dec
hlt
inc
xchg
xlat
jmp
repz
sub
fmull
mov
pop
mov
mov
sub
stc
cmpsb
and
in
xor
xor
add
mov
adc
jmp
addl
scas
sbb
pop
add
mov
stos
pop
movsb
adc
lahf
movlps
adc
dec
xchg
push
pop
adc
sub
je
out
mov
pop
pop
xor
xor
xchg
pushf
in
lock
fldl
pop
mov
sbb
mov
jge
movsl
dec
xchg
jge
inc
jnp
add
das
outsl
pop
enter
ja
das
dec
ficoml
inc
xor
sub
adc
sbb
jnp
jle
push
stos
jne
mov
mov
or
insl
dec
cmp
and
les
sbb
sbb
sub
xchg
movsl
outsl
and
lods
repz
inc
add
xchg
mov
ljmp
daa
cmp
inc
mov
scas
jne
push
ficompl
mov
mov
insl
dec
pop
pop
xchg
ret
test
xchg
dec
jbe
add
insb
std
subb
sub
out
scas
cmp
add
push
cltd
add
push
sbb
imulb
push
mov
push
inc
push
adc
push
int3
pop
jge
dec
cmc
es
neg
push
pop
cmpsl
mov
sub
xor
xchg
xlat
mov
cmc
dec
pop
lods
cmp
mov
xchg
pop
negl
fstpt
cli
mov
jo
subb
cltd
dec
pushf
lds
fwait
lcall
lods
push
mov
or
xchg
or
sarb
mov
mov
mov
inc
pop
mov
sti
xchg
or
mov
inc
add
int
insb
push
and
hlt
inc
inc
mov
dec
sti
movsl
xchg
push
xchg
cmpsl
add
xchg
enter
add
rcr
rcll
xor
sbb
and
sbb
pop
sbbb
and
or
outsl
movl
adc
xchg
and
mov
ret
jbe
subb
pop
pushf
jmp
rolb
mov
mov
cmc
or
or
in
push
movl
fiadds
ffree
mov
lock
loop
test
icebp
cmp
or
push
mov
hlt
iret
popa
xchg
rorb
xchg
je
subl
out
sbb
pusha
cld
sbb
and
add
cltd
movsl
fld
xor
je
mov
js
add
and
fs
aaa
iret
inc
into
and
dec
push
mov
cmp
fldenv
mov
imul
sub
mov
les
xor
lretw
imul
shr
orl
add
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
lods
in
adc
lahf
movlps
jg
add
popa
mov
mov
mov
loope
push
xchg
lret
mov
aam
xchg
fsubrl
xorl
xchg
idivl
pop
ficoml
jl
test
imul
push
push
add
and
dec
insl
dec
test
xchg
sbb
jae
or
cmp
sub
leave
mov
scas
negb
pusha
scas
in
xchg
int
rorb
pmulhuw
or
ljmp
jmp
jne
push
out
imul
adc
pushf
mov
ret
push
ret
incl
mov
aaa
cwtl
lods
push
mov
add
or
lods
sub
sub
orb
or
hlt
jno
rcl
adc
out
or
cmp
push
adc
jb
popf
jbe
sbb
xor
fisubs
mov
mov
xorl
sub
mov
lret
or
and
dec
std
sbb
out
jp
nop
add
lret
mov
cmpsb
insl
out
and
jae
add
add
ret
xchg
mov
imul
sbb
pushf
f2xm1
subl
or
bound
imul
cld
mov
xchg
mov
mov
aas
dec
stos
xchg
or
out
mov
jae
mov
mov
jo
add
push
inc
jmp
test
push
in
int
jnp
adc
out
repz
or
mov
dec
pop
test
inc
aaa
and
pop
push
stos
popf
cmp
adc
in
jp
pop
fidivrl
std
xor
test
insb
cmp
roll
fbld
popa
test
cs
out
addl
aaa
mov
adc
bound
stos
pop
lods
xchg
mov
cmp
dec
test
xlat
out
or
loopne
dec
ficompl
or
les
lret
push
test
jo
add
cmpsb
adc
idivb
andl
dec
mov
jle
dec
sub
mov
or
and
outsb
mov
mov
rcll
and
add
flds
lret
outsb
xor
lcall
inc
and
xlat
bound
int3
pop
push
xor
mov
pop
dec
std
xor
andb
ss
fdivp
out
andl
cld
repz
push
mov
dec
adc
gs
out
dec
in
mov
rorl
inc
rclb
add
add
pop
add
rcll
push
bound
into
punpckhdq
adc
lahf
movlps
lcall
mov
jmp
stc
femms
mov
mov
pop
pushf
jmp
lods
ds
punpckhwd
movsb
and
outsb
push
in
fistps
mov
mov
fidivrl
push
pop
dec
les
cltd
aas
sbb
xor
fwait
cmc
out
push
xchg
ret
xor
es
filds
insl
sbb
sbb
repz
xor
xlat
xor
imul
lock
xor
inc
movsb
mov
mov
jnp
lds
std
jae
xor
pop
daa
push
cmpsl
sarl
mov
stos
sbb
insl
in
mov
mov
out
pop
xchg
scas
cs
ret
gs
mov
fcompl
mov
jb
in
leave
pop
out
cmpsl
cmp
mov
scas
xchg
sub
int3
pop
add
stc
sahf
jecxz
les
fistpll
xchg
imul
mov
dec
mov
jns
mov
jl
lret
and
dec
fstpl
and
inc
clc
scas
jbe
fimull
cltd
dec
fimuls
cld
roll
sub
xor
int
sahf
daa
mov
out
int3
lcall
std
xchg
cmp
and
rcrb
push
add
aad
push
rorl
mov
inc
call
mov
jae
leave
loopne
ljmp
sub
stos
ss
bound
aad
iret
jno
sub
pop
adc
mov
push
add
inc
mov
call
dec
inc
jb
in
push
add
ljmp
push
out
dec
push
xchg
jmp
mov
xchg
cli
mov
pop
mov
in
push
ljmp
push
out
enter
orb
fnsave
aaa
inc
ljmp
or
adc
xor
push
inc
jns
ljmp
cmp
mov
jmp
mov
cmp
hlt
sub
cs
filds
or
ss
add
imul
neg
les
add
jecxz
lahf
cmp
pop
cwtl
sub
aaa
add
pushf
push
and
out
pop
xchg
inc
daa
sahf
imul
lods
pop
imulb
aaa
sub
dec
test
hlt
aad
in
cmovnp
mov
push
flds
movsb
outsl
test
cmp
add
iret
xchg
test
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
xchg
js
xchg
adc
lahf
movlps
jp
das
fistpll
sbb
jne
les
inc
fidivl
jae
je
mov
stos
pop
aaa
and
mov
mov
dec
mov
dec
je
jle
icebp
and
adc
add
and
ss
into
ret
xchg
shrb
repz
inc
mov
xchg
add
fdivl
imul
lods
dec
cmp
pop
scas
aas
mov
dec
in
pusha
or
or
push
push
mov
push
out
jno
pop
lds
icebp
inc
mov
call
mov
sub
clc
jmp
aam
lock
xchg
sti
push
cmpsb
sahf
insb
cmp
xchg
fmul
repnz
jmp
mov
gs
lea
in
rcrl
xchg
push
movsl
pop
cli
fldt
sub
cmpsl
imul
int
or
adc
jo
push
stos
xchg
lret
and
pop
sub
ss
inc
fsts
imul
rep
clc
cmp
jae
insb
push
mov
inc
xchg
sbb
leave
cld
push
cmp
je
xchg
nop
ja
inc
mov
push
sub
xor
iret
mov
push
sub
adc
dec
mov
or
mov
add
add
mov
inc
push
int3
fdiv
sbb
xor
mov
call
push
arpl
scas
push
or
stos
xor
xor
mov
mov
jno
ljmp
jnp
in
out
sarl
cmpsb
cmpl
cmp
sbb
insb
jmp
adc
pop
mov
mov
xor
mov
cmp
push
fbld
test
push
shrb
call
out
mov
pop
jle
mov
and
scas
or
adc
mov
test
xlat
int3
addl
int3
ret
xor
imul
or
dec
cmp
add
rcl
jo
push
out
mov
daa
xor
or
jb
test
sub
cmp
fcompl
push
mov
or
or
loop
push
or
arpl
movb
sub
adc
scas
out
std
insl
inc
addr16
pop
lret
xlat
mov
sti
or
lock
int
popf
dec
cli
daa
add
roll
lcall
or
mov
add
pop
mov
inc
cld
out
jle
es
lods
pop
mov
mov
inc
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
inc
in
mov
adc
adc
repz
adcb
push
push
insl
subl
pop
dec
call
push
shll
cmp
out
jle,pn
and
add
dec
pop
shlb
rorl
sbb
bound
pop
repnz
xor
dec
pop
xchg
fistps
icebp
mov
or
adc
arpl
arpl
sbb
pop
cmp
jmp
mov
add
lock
push
stos
push
cmpsb
xchg
jno
push
js
mov
filds
pusha
insl
leave
mov
ljmp
shl
out
ret
mov
pop
imul
ret
xchg
xchg
js
inc
xorl
mov
in
rcr
and
in
out
cwtl
jl
adc
stos
xchg
or
mov
cmpsb
scas
mov
mov
pop
mov
pop
insb
out
jp
xchg
int3
cmp
imul
mov
pop
aad
xchg
aas
xor
fdivrl
fcoms
lods
movsl
icebp
loope
sub
daa
inc
insl
sub
xor
pop
sbb
ret
mov
or
rsm
int3
lret
notl
in
cmp
sub
aad
push
dec
sbb
insb
xchg
inc
popf
out
pushf
sub
fistps
add
repnz
lds
inc
adc
xchg
icebp
jo
jge
inc
and
cmp
ret
cmp
aas
imul
pop
add
mov
jmp
rcr
loopne
or
xor
pop
dec
push
adc
xchg
mov
adc
dec
shr
aaa
je
loop
inc
cli
stc
cs
jbe
mov
xchg
mov
or
jae
cmpsl
ret
les
shlb
mov
aad
stc
adc
lea
pop
mov
mov
mov
repnz
xchg
pop
scas
shll
fbstp
std
ret
fimull
mov
pop
or
ficoms
push
jb
aad
icebp
xchg
push
pop
jbe
lahf
cmp
mov
scas
test
fsubrl
adc
shrl
push
mov
outsl
add
pop
mov
push
ficomps
xor
leave
xchg
adc
add
jp
testb
inc
leave
in
pop
daa
dec
daa
cs
jne
xchg
xchg
loopne
pop
in
enter
data16
or
int
pop
dec
cmc
and
loope
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
in
mov
adc
pop
movlps
jg
adc
testl
sbb
in
lcall
sahf
clc
pop
loop
iret
movl
add
inc
lcall
pop
test
push
mov
mov
cmc
xchg
daa
push
ds
mov
fwait
push
mov
push
aas
popa
push
cld
pop
mov
push
adc
xchg
push
fidivs
rcrb
mov
js
sub
jns
xchg
mov
inc
outsb
mov
lcall
hlt
shlb
and
mov
jo
adc
push
xor
xchg
lea
mov
sar
mov
into
xchg
ljmp
lahf
or
test
xchg
fdivrp
enter
cmp
fsubl
popf
adcl
cwtl
and
ficomps
inc
pop
lock
add
jno
add
or
loopne
pop
sub
aas
adc
enter
pop
repz
push
mov
movsl
loopne
lods
and
add
mov
pusha
inc
out
jecxz
dec
jne
imul
push
ja
rorb
je
pandn
frstor
lret
dec
test
sbb
inc
aam
mov
sbb
add
jmp
sub
jne
cmpsb
sub
fldl
iret
jge
lods
pop
push
lock
dec
movsb
incb
inc
xchg
in
or
pusha
sub
lret
mov
aad
das
sub
jmp
test
adc
fcmovb
inc
add
pop
in
loope
popf
add
push
xchg
sub
in
cmp
loopne
js
popf
jno
in
add
sub
xor
mov
ss
pop
push
lods
mov
sub
xor
arpl
hlt
incb
lods
xlat
sub
or
daa
push
inc
aam
sbb
cltd
lds
mov
sarb
loope
fidivs
outsl
idivb
jg
fwait
cmp
cmp
std
pop
mov
cmp
dec
xor
and
imull
or
xchg
and
ficompl
test
sbbl
sub
jmp
pop
sbb
inc
loop
cmp
pop
inc
popf
push
and
cmc
pop
xchg
mov
std
pop
mov
xchg
jb
lock
bound
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
mov
pop
test
adc
adc
dec
cld
or
jp
and
xchg
mov
imul
add
push
mov
fcoml
mov
and
pop
jb
stos
jne
hlt
addb
rorl
les
pop
jmp
inc
pop
sti
out
mov
fldenv
push
mov
in
or
ss
movsl
sarb
nop
outsb
mov
repz
movsb
pop
or
push
mov
mov
mov
add
xor
call
out
sahf
scas
pushf
outsl
mov
loopne
pop
add
mov
push
sub
jle
mov
fwait
out
push
insl
ret
jp
popf
repnz
pusha
test
cmp
sub
adc
jb
jnp
gs
and
ret
insb
fdivr
mov
xchg
jecxz
repz
sbbb
sbb
in
push
fs
cwtl
imull
jne
adc
push
inc
or
sbb
aam
xlat
fcmovbe
insl
daa
xlat
decl
lahf
xchg
lret
cltd
stc
fsub
jbe
lret
fstl
dec
pop
mov
arpl
in
xchg
push
neg
lahf
std
push
adc
jl
push
mov
xchg
xor
mov
xchg
mov
bound
hlt
push
jnp
sub
imul
pop
ror
add
into
sub
pushf
clc
sub
mov
adc
out
push
dec
jle
xor
or
mov
cmp
inc
mov
shrl
pop
icebp
mov
lds
in
jo
adc
dec
xacquire
popf
ret
leave
push
lcall
int3
dec
fstpt
clc
insl
cmp
loopne
fisubrl
inc
stos
mov
adc
fdivl
scas
aaa
pop
in
pop
pop
pop
mov
clc
ljmp
and
jnp
test
call
pop
lret
jnp
sub
push
imul
sbb
sbb
ja
dec
or
jae
das
repz
push
stos
dec
repnz
fldcw
pusha
out
int
pop
xlat
pop
stos
mov
push
inc
data16
lods
dec
cmpsb
adc
in
cmp
pop
pop
dec
ret
bnd
nop
inc
cmpsl
or
test
cmpsl
inc
or
jmp
fdivl
fnstcw
sbb
push
lahf
ret
adcb
pop
movlps
fsubrs
fs
mov
and
inc
xchg
xchg
dec
dec
xchg
jmp
xor
jo
mov
repnz
push
imul
lods
and
stos
dec
and
ss
or
mov
jl
lret
ljmp
or
dec
and
arpl
mov
mov
dec
mov
xchg
loopne
mov
ja
insb
punpcklbw
dec
ficoms
sbbl
sbb
pop
pop
sub
add
xchg
jns
inc
adc
psrad
add
dec
mov
cmpb
or
dec
fimull
shlb
xor
sahf
add
daa
or
dec
movl
inc
outsl
lock
outsb
sbb
shrb
inc
into
push
jae
loop
aam
lds
or
outsl
or
movb
cmpsl
adc
xchg
pusha
cmp
pop
pop
testb
mov
imul
push
xor
pushf
push
dec
adc
xor
out
and
insb
out
push
popf
lds
out
fstps
cli
ja
jl
push
jbe
mov
xchg
out
dec
cmpsb
sbb
lss
push
and
adc
shll
mov
in
lods
shrl
pop
popf
cmpsb
pop
mov
push
test
xchg
aam
int
xchg
or
pop
mov
sub
cwtl
mov
ret
mov
ret
adc
inc
adc
xchg
mov
aaa
dec
imul
sbb
out
mov
jns
adc
hlt
ja
test
aas
mov
insl
mov
cmp
mov
mov
iret
mov
test
pop
ret
dec
sub
push
jnp
loope
scas
gs
push
xor
lret
test
xorb
inc
out
adc
or
fsubs
pop
cmpsb
pop
pop
push
les
pop
icebp
or
ret
mov
aam
and
inc
pop
push
loope
inc
cmp
lds
xor
lcall
test
inc
push
jo
mov
pop
out
js
ja
rcrb
into
rorl
inc
test
add
adc
aad
sub
ret
aad
push
cltd
arpl
push
dec
xor
xchg
test
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
pusha
cmpsb
js
jle
adc
adc
mov
xor
lret
xchg
rcrb
fnstenv
jp
pop
or
loop
add
nop
into
popf
push
scas
mov
or
dec
int3
shll
test
push
jns
adc
dec
stos
xor
rorb
or
rcll
jg
mov
xor
stos
xchg
fwait
and
fldenv
mov
xchg
rcrb
sub
xor
stos
stos
fwait
inc
inc
insb
and
lds
leave
or
ret
cld
mov
cmc
jl
jle
mov
push
xabort
fadd
pop
inc
cmp
cwtl
repnz
scas
xchg
sbb
sbb
jne
mov
call
fnstcw
movsb
xchg
dec
repz
push
xchg
dec
lea
loop
ret
cltd
inc
aas
sahf
and
or
inc
js
sti
in
cmpsl
js
fdivs
sbb
fidivrs
inc
and
cmp
mov
sbb
out
ret
jmp
sbb
es
shl
inc
mov
xchg
jge
and
inc
repnz
adcl
shrb
pop
push
addl
or
cltd
aas
xchg
xlat
xlat
fcoms
outsl
jge
or
cmp
xor
push
subb
jle
mov
insb
mov
fnstcw
addr16
into
or
lret
adc
mov
std
in
mov
int
dec
icebp
fbld
push
push
in
js
push
cmpsl
inc
jnp
push
int
ret
mov
idiv
cmp
lret
add
cmp
sahf
and
mov
sub
jle
or
mov
in
cld
push
pop
pop
int
sti
or
jl
jne
rcll
mov
and
xchg
lods
mov
nop
inc
mov
or
out
add
sub
fsub
nop
sti
lret
pop
loop
dec
in
cmpsl
shll
jp
pop
sub
cltd
mov
loop
xchg
test
repz
jmp
leave
sahf
enter
inc
cmp
sub
fmull
cmp
jmp
cld
mov
inc
outsb
fcompl
imul
scas
movsl
mov
and
stos
and
ret
pop
add
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
jb
mov
ficoms
adc
pushl
ljmp
arpl
mov
cwtl
or
adc
cltd
mov
jg
or
pop
sbb
cwtl
and
adc
sahf
xor
sub
jmp
test
and
mov
in
sti
mov
mov
wrmsr
and
mov
and
xor
aam
aaa
in
movsl
fmul
lds
cmpsl
in
inc
in
or
push
push
push
fstpl
mov
mov
mov
lret
ret
pop
ljmp
push
cltd
adc
mov
sahf
scas
xchg
mov
loopne
mov
mov
sbb
jge
orb
sub
divb
xchg
lret
jge
imul
call
xlat
mov
mov
sbb
test
popf
sarl
or
pop
adc
mov
ds
dec
stos
movsb
hlt
inc
sub
or
inc
clc
ret
fisubs
shrb
scas
in
loopne
cmp
jbe
xor
xor
cmp
cld
test
push
fwait
aas
ret
leave
pop
scas
and
mov
das
jecxz
loop
inc
rorb
xchg
xor
xor
cmp
and
mov
xchg
mov
subb
js
enter
sub
inc
lcall
jo
ret
jp
sbb
or
push
gs
jns
add
sti
cld
adc
push
and
inc
ret
scas
dec
xchg
xor
test
pop
add
les
mov
insb
in
and
sarl
mov
in
ror
mov
int
mov
es
cmp
pop
repz
jne
out
data16
and
cmp
cmpsl
dec
stos
dec
scas
movsl
out
inc
lcall
test
enter
sub
mov
xchg
aas
cmpsb
push
push
adc
dec
shll
xchg
adc
dec
ret
mov
and
into
icebp
ds
cmp
gs
fs
xchg
test
out
mov
add
and
stc
inc
xchg
sub
aaa
mov
test
orl
int3
pop
dec
mov
mov
test
call
lret
cld
sub
jmp
andl
cmp
aad
scas
gs
cmpsl
loope
push
push
std
das
adc
push
mov
repz
call
cwtl
sbb
popa
mov
pop
inc
xchg
notb
pop
bound
leave
or
mov
xor
sub
mov
adc
xlat
rorb
pop
arpl
sbb
test
imul
or
ja
aam
test
mov
xlat
arpl
test
mov
and
inc
hlt
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
and
push
jo
adc
adc
adc
test
cltd
in
and
sbb
add
lds
jo
bound
mov
adc
lret
dec
cs
inc
cmp
cmp
sti
jmp
push
repnz
je
mov
fcompl
lock
nop
in
cmp
cmp
or
fdivs
bound
mov
dec
cmpsb
mov
sbb
movl
xor
popa
arpl
test
clc
add
je
mov
std
cmc
mov
enter
stc
adcb
lds
pop
stos
lcall
les
push
hlt
icebp
adc
xchg
fsubrs
dec
push
adc
jnp
sub
loopne
mov
xchg
xchg
enter
rclb
dec
xchg
push
mov
inc
push
cld
fs
jne
mov
shr
inc
loop
mov
dec
dec
mov
mov
test
xchg
popa
adc
cwtl
or
mov
pop
stos
loop
int
cmp
scas
adc
add
mov
aam
cwtl
and
into
dec
sub
push
and
add
mov
clc
lahf
add
push
mov
xchg
mov
jnp
arpl
leave
xor
pop
push
aaa
pop
mov
pop
dec
jne
lea
imulb
out
inc
test
dec
push
xchg
popa
fwait
lods
dec
jl
jmp
test
arpl
mov
dec
fsubl
stc
fdivrl
mov
sbb
pop
jle
out
jecxz
xor
std
adc
data16
inc
nop
sub
or
mov
add
add
scas
cmpb
mov
in
loope
sub
mov
outsb
add
popf
test
xor
cltd
cmp
push
hlt
mov
or
dec
push
repnz
repnz
dec
pop
jno
repz
add
ja
loop
iret
ja
dec
mov
in
xlat
mov
les
mov
sbb
jmp
cmp
js
mov
and
addb
dec
mov
clc
dec
outsl
add
push
add
cmp
shlb
outsl
inc
cmp
iret
push
jecxz
xchg
jg
and
sub
movsl
in
pop
mov
xchg
ret
fmuls
or
pusha
aaa
inc
arpl
pop
lock
inc
pop
out
js
fwait
loop
jl
rcll
mov
div
ljmp
test
mov
addr16
or
inc
jg
sbb
cmp
and
adc
fwait
mov
int
es
jecxz
aas
jno
sbb
and
jg
mov
jp
insb
fildll
and
xchg
dec
in
int3
mov
and
insl
and
jg
pop
mov
jns
dec
hlt
fdivs
lods
or
gs
mov
inc
or
xchg
pop
out
int3
push
in
cmpsb
or
stos
push
clc
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
lods
mov
adc
ficoms
adc
outsl
jae
xor
sbb
movsb
inc
loope
or
int3
cwtl
shr
das
pusha
frndint
inc
adc
lahf
push
mov
pop
mov
ret
and
push
cwtl
add
mov
pop
sbb
pop
int3
adc
rcrb
and
pop
fistps
sub
lcall
stos
jp
sbb
cli
jo
pop
mov
or
cltd
das
arpl
lds
call
push
rcrb
notb
jae
sub
popf
incl
mov
xor
loop
ja
or
adc
fcoml
iret
cwtl
dec
pop
xor
add
xchg
scas
enter
dec
sub
scas
sahf
aad
push
fwait
cmp
sbb
dec
std
push
bnd
cltd
lods
rcll
push
xor
jg
ljmp
inc
or
sbb
cmp
sub
das
mov
push
cli
andl
std
cmp
lock
je
or
jp
xchg
adc
add
xchg
jle
jge
cli
adc
cmpsl
andb
fistpll
xchg
adc
dec
mov
insb
ds
in
or
jmp
jg
jbe
in
pusha
add
push
pop
xchg
movups
or
xchg
inc
lods
ja
gs
das
add
jnp
js
jns
ret
jb
pushf
pop
insb
fwait
stos
fstl
mull
add
mov
insb
sbb
bound
out
fbld
mov
lods
cmc
add
std
push
lds
mov
sbb
sbb
stos
sub
ret
loope
xchg
les
push
leave
in
pop
jns
sti
sbb
call
rcr
aad
ret
dec
mov
push
push
mov
mov
out
imul
lds
les
pop
push
mov
mov
xor
pop
add
push
mov
movd
or
mov
mov
adc
rcll
cmp
mov
mov
add
ret
mov
popf
jns
sahf
xchg
movsl
xchg
loope
das
ret
adc
into
xor
popa
push
enter
and
jecxz
dec
movsb
nop
adc
int
in
lds
out
cli
mov
pop
push
in
clc
mov
mov
iret
and
dec
hlt
mov
or
pop
adc
sahf
and
push
ret
fmul
mov
gs
lret
cmp
test
dec
xchg
and
addr16
sahf
aaa
sbb
insl
jnp
aam
mov
sbb
inc
jecxz
jnp
jl
leave
leave
loop
shr
jl
stos
cmp
nop
lea
push
jl
js
enter
add
sub
mov
pop
in
dec
fdivrs
out
mov
jne
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
mov
stos
insb
andl
lret
xor
out
std
xor
jbe
mov
aas
ljmp
mov
adc
xchg
leave
xchg
imul
nop
pop
mov
xor
roll
xlat
sbb
xorl
pmovmskb
popf
mov
repz
stos
imull
idiv
sub
pushf
xor
push
shr
imul
or
xchg
aaa
xchg
or
inc
add
dec
mov
mov
adc
cmp
mov
std
mov
mov
popa
icebp
xor
dec
cld
pop
icebp
adc
sub
sbb
pop
mov
dec
ret
adcb
push
fnstsw
mov
jmp
xor
jmp
sbb
nop
cmp
push
test
in
leave
inc
pusha
test
sub
shlb
mov
adc
shrb
mov
insl
je
jae
popf
ja
inc
add
gs
xor
out
cmp
sub
std
push
push
lods
fidivrs
inc
sbb
aad
mov
mov
mov
xlat
xchg
or
lods
cmp
xchg
pushl
adc
mov
lret
mov
fs
js
adc
jne
sub
jmp
stos
dec
and
subl
mov
iret
push
jp
daa
xorb
test
xor
sub
out
fisubrs
and
mov
cmp
insb
lock
add
int3
dec
ja
mov
pop
push
mov
lahf
loop
sbb
iret
dec
lods
xor
aam
sub
mov
int3
stc
leave
mov
fistpl
scas
mov
mov
xchg
aam
fbstp
jp
fstl
dec
mov
sub
pop
adc
jne
xchg
out
mov
pusha
push
mov
rcl
data16
push
sarb
addb
adcl
mov
xchg
cmp
xor
out
lcall
mov
leave
cmp
mov
or
es
cmp
ja
sarb
gs
ret
ret
pop
imul
les
dec
push
idivl
dec
les
pop
xor
xor
das
dec
inc
mov
loopne
lock
adc
xor
lahf
or
dec
in
xlat
ds
mov
sub
imul
subb
jno
aad
xor
and
lcall
les
or
pop
addl
pusha
pop
je
cmp
pop
sub
aad
mov
add
mov
ljmp
into
xchg
repnz
loope
jp
andb
fistps
push
into
mov
insl
psadbw
inc
addr16
xchg
inc
js
jmp
and
cmp
not
outsl
lds
add
call
adc
inc
les
enter
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
dec
mov
adc
ficoms
adc
add
pop
sbb
or
xor
popa
sti
fistps
repz
pop
jmp
and
lods
inc
into
mov
push
clc
lcall
nop
aaa
xor
mov
repz
dec
and
push
mov
add
dec
pop
mov
sub
rcrl
inc
adc
and
faddp
pop
and
pushf
mov
or
jae
popa
adc
xor
lods
inc
jl
inc
and
fs
dec
pushf
cli
lcall
in
cmpsb
inc
push
mov
xor
jge
mov
addr16
loope
lcall
sub
pushf
jg
mov
imul
gs
data16
fstl
aaa
in
lds
pop
scas
mov
mov
fs
jmp
fisttpl
shlb
in
mov
pushf
and
gs
pop
clc
out
fidivs
out
add
jae
push
lea
and
mov
xor
mov
push
pop
xor
push
adc
jno
outsl
push
adc
jg
jnp
dec
pop
div
jno
dec
jb
or
aas
arpl
sahf
xor
pop
fadd
jle
cmc
cmp
adc
xor
lcall
pop
loope
inc
pop
xchg
mov
les
and
push
xor
leave
adc
lret
dec
dec
rorl
and
fs
jp
cmpl
sub
sub
adcb
scas
mov
jecxz
sub
int
dec
inc
arpl
mov
sub
in
daa
rcrl
cmp
rcrb
int3
in
std
cmc
sub
test
popa
cli
xchg
pop
xor
push
xchg
adc
sbb
inc
getsec
lret
pcmpgtd
or
push
xchg
adc
inc
js
loop
add
inc
daa
adc
or
pop
or
xor
mov
cmp
sub
in
movsb
mov
pop
stos
xchg
mov
xor
rcll
jle
mov
lahf
out
or
xchg
xor
sbb
cmp
mov
fdivr
push
and
test
faddl
sub
aaa
pop
xor
push
cmp
sysret
inc
or
inc
ret
int3
iret
sbbl
cmp
inc
fs
pop
xor
int3
push
mov
adc
push
test
movb
push
test
cmp
xor
in
mov
fdivrs
inc
inc
sbb
and
test
xor
cwtl
mov
popa
les
sti
int3
dec
mov
and
mov
lods
loopew
sub
ja
xor
or
je
mul
xchg
xor
xorl
ds
mov
mov
int3
mulb
inc
and
push
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
push
push
pop
adc
xor
adc
sbb
xor
or
sub
sub
mov
add
xchg
jp
mov
push
jns
fistl
rcrl
fistps
cmpsl
sub
leave
out
addr16
lret
in
aam
inc
or
mov
mov
xlat
pushf
outsl
inc
mov
int3
ret
ss
and
jle
mov
xchg
lahf
aaa
and
in
es
outsb
int3
ficompl
ds
xchg
mov
fcomp
loop
mov
insb
jb
pop
cwtl
inc
aam
mov
sbb
xlat
push
jnp
xchg
sub
es
daa
cmp
test
div
cmp
lea
sbb
xor
orl
movsb
pop
adc
stc
inc
or
loopne
jle
test
addl
ret
insb
pop
sbb
rclb
ret
dec
jns
aad
cltd
inc
stos
bswap
mov
leave
je
addr16
dec
mov
sbb
jae
int
movsb
jl
adc
fs
bound
mov
lret
negb
or
bound
imul
xchg
sub
cmp
dec
cmp
leave
fs
sti
gs
and
fwait
pop
pop
rorb
dec
or
movsb
outsl
xor
enter
fs
or
out
sbb
dec
arpl
add
mov
ficoml
pop
mov
adc
into
pushf
imul
jbe
pusha
push
mov
test
sub
jb
mov
in
clc
xchg
inc
aam
sbb
sbb
shlb
mov
inc
out
inc
pop
arpl
subl
sbb
lods
mov
cmp
jg
ljmp
inc
insb
jno
js
call
es
mov
and
decb
xor
iret
insl
sbb
cmp
push
pop
mov
call
pop
insb
push
iret
es
popa
pop
test
push
push
out
dec
incb
aad
mov
add
lock
xlat
sub
jp
pop
or
xchg
out
mov
in
inc
int3
and
roll
mov
mov
adc
adc
int
cmp
sbb
shlb
ljmp
loopne
mov
fnstcw
in
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
push
mov
adc
movlps
sub
mov
int3
movsl
frndint
fidivrs
lea
or
faddl
jge
mov
and
pop
push
adc
fs
mov
and
mov
dec
xorb
and
mov
mov
cmp
inc
mov
sub
cltd
or
cmpsl
xor
ds
jmp
dec
bound
pop
in
outsl
leave
mov
repnz
pop
pop
xchg
imul
popf
cmp
pop
outsb
jg
movsl
test
out
test
mov
scas
jo
push
adc
add
xchg
ja
jle
cmp
pop
push
andb
js
inc
out
and
push
mov
test
popa
imul
jge
dec
lods
fwait
pop
mov
cmp
std
in
clc
sub
lea
inc
mov
xor
sbb
jl
int
mov
ja
call
outsb
fsubr
into
and
jnp
mov
mov
pop
outsl
push
add
iret
add
lds
test
daa
mov
pushf
or
into
add
popa
mov
and
lahf
cli
jnp
adc
sbb
pop
and
stos
mov
ljmp
mov
pop
sbb
cs
stos
cmp
in
pop
adcl
aaa
and
push
shlb
jmp
es
les
xor
neg
pop
pop
sahf
int
push
sahf
push
mov
adc
sub
jmp
mov
pop
add
ss
loopne
add
lods
adc
push
icebp
mov
repnz
mov
jns
loop
sbb
xchg
clc
js
xor
xor
push
sahf
lock
popf
inc
sub
fisubl
xor
nop
or
mov
leave
inc
and
in
pop
add
xlat
and
adc
mov
stos
idiv
dec
sbb
in
jb
and
inc
xlat
mov
addr16
ljmp
data16
shrl
lds
popf
fsubs
xchg
or
dec
fsubrp
pop
outsb
mov
mov
outsl
cmp
sub
test
lahf
pop
imul
inc
jg
mov
stos
push
jbe
fdivs
xor
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
pushf
xchg
adc
push
adc
push
adc
adc
lock
popa
movsl
push
jl
xchg
loopne
or
cmp
adc
jle
pop
popa
lahf
psubsb
jge
adc
mov
push
pushf
test
lahf
cld
mov
inc
cltd
rclb
push
lds
sub
mov
addb
cmp
cwtl
adc
adc
shlb
mov
inc
add
sbb
jbe
sub
scas
inc
xchg
imull
xor
mov
jg
mov
mov
leave
test
fsubl
das
sbb
push
sahf
mov
add
dec
test
shrb
xchg
cld
push
movsl
mov
mov
xchg
addr16
inc
jb
dec
mov
repnz
inc
lahf
call
pop
mov
in
test
adc
pop
lahf
sbb
and
popa
pop
mov
jae
loope
fucomi
pop
pushf
cmp
fldcw
pop
fs
mov
cmpsb
jp
outsl
aas
ffree
mov
fisttpll
adc
insl
ljmp
hlt
fwait
adc
xor
and
or
inc
dec
jnp
dec
loopne
adc
hlt
cli
fwait
cmp
cmpl
push
ficomps
and
orb
mov
in
in
ffreep
cmp
push
xor
test
pop
movsl
mov
and
cwtl
imul
lods
roll
scas
out
ret
stc
sbb
pop
les
inc
inc
inc
push
insl
pop
gs
pop
jns
arpl
push
pushf
adc
lds
imul
jmp
adc
aad
mov
fisubrs
inc
jns
outsl
cmp
pop
cmp
stos
xor
paddsw
leave
xchg
insb
arpl
mov
les
xchg
in
pop
cmc
mov
fmull
or
pop
rcr
xchg
sahf
aaa
scas
push
mov
lret
das
rcrl
mov
test
mov
mov
mov
ljmp
or
arpl
push
fnstsw
aam
and
xchg
loopne
stos
mov
mov
int
pop
pop
movsl
cmp
inc
dec
gs
repnz
clc
in
pop
pop
es
cli
xchg
cmc
sub
xchg
sarl
test
inc
sbb
adc
mov
jbe
cwtl
jle
xchg
mov
inc
sbb
mov
mov
or
shl
inc
pop
adc
mov
adc
arpl
cltd
mov
sbb
sahf
sbb
lods
cmp
in
test
or
push
mov
repz
or
rolb
inc
pushf
test
xchg
xchg
sub
xor
mov
sbb
adc
jnp
cmc
mov
push
testl
lahf
aas
fbstp
sbb
xchg
jge
insb
stos
pushf
fmul
mov
in
je
push
arpl
push
dec
mov
lods
mov
inc
jp
loop
iret
mov
mov
dec
adc
arpl
stc
je
int
add
xlat
cli
js
rclb
xor
mov
inc
jl
or
pop
lods
inc
rclb
mov
push
movl
mov
mov
push
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
push
pop
mov
push
adc
adc
ljmp
ss
imul
xchg
cltd
mov
xor
or
mov
inc
mov
jo
jl
jb
movsl
adc
das
inc
das
mov
dec
adcb
mov
mov
pop
xchg
mov
pusha
std
jbe
pop
cmp
mov
jno
shrb
sbb
inc
jecxz
mov
dec
ss
je
fdivrl
adc
push
pushf
ret
xor
jne
pop
pop
dec
test
mov
fstl
insl
push
out
fistps
cmp
lods
movsb
jnp
gs
andl
or
dec
inc
jns
pop
adc
xchg
iret
js
test
lods
and
shrb
cmp
ljmp
or
add
cmp
pop
mov
fadd
mov
adc
lds
add
jg
and
cli
pushf
es
daa
dec
fisubl
push
je
js
gs
pop
and
test
outsl
adc
or
scas
add
push
test
testl
jp
lret
mov
outsb
push
mov
movsl
out
stos
xchg
outsb
inc
in
ficomps
cwtl
js
movsl
and
mov
data16
in
dec
rcll
pop
iret
add
fs
insl
pop
adc
ds
sub
mov
mov
jle
sti
arpl
push
ret
inc
mov
pop
jnp
incl
add
mov
mov
dec
mov
mov
test
jne
adc
mov
repnz
adc
les
ficomps
adc
and
xor
xchg
test
int3
sbb
mov
fistl
mov
lret
and
movsl
dec
xor
std
inc
stos
lds
jp
out
mov
mov
pop
cli
in
mov
inc
sahf
lds
xchg
sub
lahf
fs
stc
incb
push
sbb
inc
adcl
test
arpl
pminsw
sbb
cmpsb
inc
pop
jae
lock
dec
dec
inc
stc
dec
xchg
cmp
dec
sub
test
mov
xchg
icebp
out
test
add
orb
jns
xchg
fstpl
gs
js
repnz
push
cmc
lret
dec
es
lret
repz
rol
das
sbb
sub
push
ret
fs
out
testb
mov
xor
insb
mov
and
dec
mov
out
in
aas
pop
popf
subb
cmp
mov
xchg
sbb
out
jmp
cmp
or
mov
repz
jns
pop
and
jns
mov
and
in
fists
push
ss
sub
dec
negl
and
icebp
ret
flds
dec
jg
repz
testl
mov
lcall
in
lret
xchg
notb
sarb
in
and
add
lea
lock
cmp
aad
sub
ljmp
nop
mov
mov
sbb
pop
inc
jcxz
cmpsl
cmp
in
rcrl
cmp
and
xorl
je
cmpsb
enter
out
mov
push
aam
inc
shlb
mov
xor
jmp
sarl
sbb
jbe
stos
repz
ljmp
adc
adc
shr
outsl
aad
mov
lret
aaa
dec
in
adc
arpl
and
add
and
sbb
test
jnp
sbb
je
mov
push
mov
enter
mov
rcrb
cmp
and
pop
push
mov
out
ret
cmp
mov
stos
push
add
cmc
and
addr16
adcl
sub
mov
int3
jo
fsub
lods
sbb
gs
xchg
stc
mov
mov
leave
jmp
ret
or
sub
or
mov
jmp
adc
jl
ja
xchg
stc
inc
gs
pop
jb
dec
mov
or
je
dec
aad
sbb
sub
insl
stos
cwtl
jp
xchg
jae
inc
pop
inc
dec
lods
insl
dec
mov
inc
cmp
bound
arpl
orl
das
das
addb
lcall
aam
add
fwait
bound
test
fs
hlt
das
gs
fdivrs
mov
test
adc
andb
sbb
ds
iret
sub
in
push
pusha
xchg
cwtl
out
add
xchg
mov
xlat
cmc
xchg
mov
pusha
add
cmc
pop
repnz
aam
jno
into
aam
cmp
adc
or
out
xchg
lret
xchg
sub
lret
push
addr16
xor
xchg
mov
xlat
fsubs
shll
add
cmpsl
mov
inc
dec
xchg
lods
subl
icebp
lret
outsl
mov
lahf
lcall
mov
sti
outsl
addl
xchg
fs
sub
xor
pop
imul
arpl
aaa
push
sahf
bound
loopne
mov
dec
shrb
jb
xor
add
adc
xor
pop
pushf
push
jno
jnp
in
scas
lret
ljmp
mov
nop
sbb
addr16
jp
cwtl
loope
lahf
jnp
shr
scas
mov
inc
xchg
jno
dec
xchg
inc
fcmovu
addl
jge
test
and
cmp
cmp
xchg
jnp
sbb
xor
jge
jp
insb
sbb
adc
insb
in
xor
movsl
movsb
and
push
test
aas
inc
aad
mov
pusha
push
xchg
pusha
mov
jmp
add
push
imul
lods
mov
ret
std
push
add
scas
dec
lea
fcmovnu
and
mov
mov
test
fcoms
call
rol
imul
or
inc
adc
int
push
sub
dec
cmp
nopl
pop
and
inc
into
push
out
fistpll
leave
cmp
dec
sbb
ljmp
push
repz
int3
sahf
mov
jae
xchg
or
mov
xor
sarl
inc
sbb
fnstsw
sub
stos
mov
push
aas
pop
xchg
xor
iret
xchg
push
jg
push
out
mov
mov
in
pop
enter
sbb
scas
jp
leave
or
iret
mov
mov
xor
dec
sub
roll
dec
jge
loopne
lahf
data16
lret
test
aad
mov
sub
into
fadds
add
push
aaa
and
add
and
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
mov
cmp
adc
adc
adc
and
xor
enter
sub
jnp
mov
stc
mov
cltd
addr16
jae
jg
pop
and
js
mov
shll
xchg
roll
or
clc
std
in
ret
push
loope
pop
mov
pop
das
add
lret
bound
pop
jo
jge
pop
sub
stos
add
xchg
insl
or
adc
push
inc
sbb
jbe
push
int3
aaa
cld
inc
ss
add
hlt
dec
stos
cwtl
ret
mov
and
fldl
les
and
dec
test
dec
test
xor
pop
jb
cld
std
pop
pop
sahf
ljmp
mov
inc
stos
lods
cmpsb
es
leave
and
pcmpeqw
xor
cmpsb
mov
lret
cmp
call
push
cmp
mov
adc
xchg
fnstsw
stos
fisubrl
lea
sahf
push
in
fldt
adc
pop
xchg
pop
mov
mov
ja
adc
loop
rcrb
cwtl
xor
in
and
xor
dec
sbb
push
adc
dec
nop
mov
dec
call
aas
pop
je
xchg
in
sub
test
push
sub
adc
test
dec
pop
cmp
pusha
sbb
cli
sbb
and
mov
jb
mov
dec
and
cmc
and
push
pop
imul
cmc
xorl
sbb
sub
and
ljmp
adc
pop
pop
aaa
push
ljmp
repnz
mov
pushf
iret
xlat
test
nop
cmp
mov
mov
shl
pop
jne
cmp
adc
test
fldt
sbb
push
cmpsb
and
dec
pop
mov
popa
dec
movsl
stos
std
sub
mov
pop
inc
addr16
lcall
push
or
sbb
xor
xorl
sub
ja
mov
ljmp
loopne
pusha
add
adc
test
xor
cli
add
ljmp
add
ja
scas
sbb
mov
inc
mov
cli
ss
mov
clc
fadds
sub
or
cmp
mov
divb
fsubs
mov
pop
data16
sbb
fldcw
cmp
cmp
pop
dec
jns
lcall
fldcw
imul
dec
ret
inc
das
jge
add
add
jne
jns
popa
es
push
insb
xchg
hlt
mov
loopne
dec
jg
inc
int3
jbe
adc
mov
mov
jmp
pmovmskb
leave
es
push
push
popf
addb
fstpt
ret
mov
or
incl
insl
loope
je
or
popa
jae
pop
dec
jb
mov
cs
shrl
jae
dec
mov
call
add
mov
and
pop
jb
cmpsl
movsb
add
and
imul
lods
inc
xor
sti
pop
pop
std
mov
mov
or
ds
testb
movsb
push
inc
inc
xchg
push
push
xorb
sub
fdivl
stc
mov
sbb
test
movsl
add
add
shlb
insb
daa
ret
mov
data16
push
mov
push
adc
adc
stos
adc
pop
push
add
add
mov
mov
jg
or
adc
and
inc
repz
xor
ficompl
sub
sub
rcll
outsl
adc
icebp
ds
sbb
jnp
out
cmp
leave
outsb
sti
stos
sbb
xchg
and
ret
sahf
fwait
popf
xchg
mov
xor
sub
fistpll
cmp
sub
mov
cwtl
arpl
lahf
dec
inc
add
or
lret
xor
mov
aas
push
jo
push
and
jnp
repz
divl
nop
enter
sub
push
test
rcrl
push
adcl
jne
ds
mov
xchg
sbb
int3
scas
push
test
jmp
jmp
addl
xchg
jo
cld
inc
xchg
inc
mov
dec
loop
lcall
pop
or
mov
addb
mov
in
xor
and
mov
inc
das
lret
mov
cmpsl
and
int
cmp
xchg
lcall
cld
pop
ds
mov
push
loope
notb
and
cmp
or
popa
insl
mov
jl
xchg
push
mov
js
sbb
pop
std
repz
push
add
and
mov
xor
xchg
mov
and
and
xor
adc
push
mov
lret
addr16
jp
arpl
fnstcw
imul
push
loopne,pt
sub
icebp
jnp
aas
insb
fsubl
push
arpl
jo
push
ret
popa
or
mov
daa
mov
and
mov
test
xchg
mov
xor
jle
into
sub
push
inc
mov
fcmovu
jbe
daa
push
sbb
pop
enter
loopne
inc
xor
fs
adc
inc
ret
in
mov
daa
ret
add
lods
pop
in
lea
mov
mov
sti
or
call
or
arpl
out
xchg
cmc
sub
push
out
and
mov
js
fmull
sub
push
push
gs
repnz
fsubrl
out
loope
or
adc
xor
sbb
jno
rolb
negl
jl
xchg
mov
mov
fldt
and
out
jnp
jecxz
xor
insl
jns
popf
js
mov
cmp
xor
push
or
and
jmp
pop
std
xor
mov
addr16
or
add
andl
xchg
sbb
dec
dec
arpl
shlb
and
test
sbb
lret
clc
dec
fists
addr16
cmp
inc
sti
cwtl
mov
int
jae
and
pop
and
mov
lock
cmpsb
out
sub
call
adc
hlt
inc
xorb
push
xor
ss
mov
lea
push
or
bound
out
lea
mov
lods
mov
add
mov
cwtl
inc
movsl
xor
add
jecxz
enter
dec
xchg
ret
sub
je
fisubs
rclb
lds
inc
mov
dec
mov
push
mov
sbb
add
add
ret
nop
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
pop
sbb
sub
add
adcb
call
shll
and
ficompl
push
insl
jno
add
out
test
xchg
lods
jno
fldenv
pop
addr16
shr
mov
repnz
push
jl
addl
push
xchg
dec
test
xchg
cmpsb
and
je
pop
adc
or
enter
adc
jno
lds
xor
scas
jns
cmp
sub
stos
or
je
cmp
out
adc
call
insl
pop
xor
into
negb
adc
fsubr
xor
loope
lds
test
add
pop
std
lods
xlat
cwtl
sti
cmp
jmp
int3
pop
cld
sti
pop
loopne
and
ret
xor
cmpl
icebp
movsl
leave
xor
and
lods
add
insb
ja
adc
xchg
cwtl
js
adcb
cmpsl
pop
ds
out
in
dec
sub
push
sub
push
stos
imul
faddl
cli
jne
add
mov
jns
test
in
mov
lcall
xor
jo
adc
cmpsb
out
jmp
sub
cs
outsb
cmc
out
sub
std
mov
add
pop
mov
outsb
inc
xchg
sarl
ljmp
cli
out
and
dec
jae
pop
loope
in
xchg
pavgb
ljmp
xchg
pop
and
jle
or
mov
cmp
ds
adcb
je
jb
aad
push
jge
ss
cmp
loopne
int3
sbb
mov
push
lods
add
and
mov
cltd
and
lret
imul
data16
mov
add
aam
and
pop
dec
fistpl
mov
mov
mov
fnstsw
adcb
ja
test
into
add
or
dec
inc
je
lret
aam
cltd
and
jmp
pop
aaa
dec
ss
nop
jl
sbb
js
stos
movsb
ds
add
aas
or
dec
lret
not
jno
push
cltd
cmc
cli
inc
fwait
lods
jb
jge
stos
xchg
push
lods
loope
or
aas
mov
test
mov
xor
jb
sub
jle
call
cmp
mov
jbe
por
adc
scas
in
imul
insb
mov
insl
or
rcll
cmpsl
xchg
push
sub
xchg
mov
lret
push
or
pop
pop
push
std
lods
adc
inc
pusha
push
and
xchg
add
xchg
push
sbb
sub
js
out
ret
cmp
outsb
pop
push
stc
add
daa
push
nop
out
repnz
jnp
mov
inc
jecxz
jbe
aas
inc
inc
jge
ds
adc
in
dec
cmpsb
push
cmp
pushf
push
inc
xchg
pop
adc
or
or
std
mov
xor
mov
mov
mov
push
enter
xor
sbb
les
ja
int
mov
pop
mov
jecxz
call
push
repnz
sub
mov
sub
xor
mov
rcrl
mov
out
std
add
sbb
inc
mov
jg
scas
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
push
insb
insb
fisubl
adc
push
adc
adc
inc
leave
das
and
jae
xor
inc
sbb
xchg
dec
pusha
cltd
cmp
add
dec
push
push
xor
pop
push
cmp
sub
ret
and
cli
mov
das
out
mov
icebp
jmp
inc
xchg
mov
cli
cmp
and
and
outsl
sub
dec
int
cltd
or
in
dec
jae
notb
shll
mov
jno
test
mov
js
gs
and
sahf
sbb
push
push
ss
int3
jno,pt
cwtl
jnp
rep
iret
cs
xchg
dec
fwait
outsl
xchg
xorl
aad
jno
imul
mov
leave
test
sahf
pop
and
jl
pushf
movsl
xchg
fisubrl
jns
ljmp
add
pop
adc
push
dec
call
fwait
and
cmp
addr16
mov
push
mov
pop
mov
mov
inc
ficoml
int
cvtps2pi
in
jb
scas
in
mov
add
roll
mov
inc
das
ds
cmp
mov
xor
and
pop
mov
xor
daa
jecxz
dec
dec
mov
mov
in
mov
fists
sub
sub
sub
leave
and
adc
sbb
out
clc
aam
adc
jns
nop
jmp
jecxz
xor
arpl
dec
mov
and
negb
push
adc
call
nop
sub
pop
in
jl
and
dec
inc
cmc
fnsave
incb
dec
mov
into
popf
mov
out
xchg
mov
rcll
setle
xchg
dec
push
insl
in
orb
jp
or
in
push
js
pop
xor
dec
sarb
mov
cs
mov
and
inc
lret
jp
dec
add
push
fldcw
cmp
lcall
jg
icebp
jp
jnp
icebp
aaa
xor
nop
dec
jb
mov
mov
xchg
add
ljmp
sub
and
popa
jbe
hlt
push
push
repz
ret
inc
inc
stc
pop
or
iret
cmp
outsb
sbb
push
jns
in
movb
out
dec
xchg
push
lds
cmp
mov
xchg
push
nop
sbb
adc
adc
jno
fdivrl
cli
dec
jle
xchg
cli
add
fiaddl
je
mov
jno
sub
xchg
dec
jb
sub
in
xchg
cmp
loop
daa
ds
fcomps
aad
repz
add
add
push
data16
dec
push
scas
adc
jbe
lods
mov
lret
sti
mov
incl
dec
add
mov
xor
mov
out
pop
or
dec
mov
sti
sub
mov
push
cmpsb
jle
mov
mov
push
lods
ja
pop
test
mov
and
and
clc
movsl
aam
enter
mov
pusha
xchg
mov
xorl
scas
fbld
xchg
xchg
out
mov
or
fdivrl
pop
sub
fistl
push
mov
inc
lds
adc
cmp
mov
xor
neg
xor
mov
and
cmpsb
pop
rol
push
inc
pop
pushf
mov
xchg
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
lock
mov
decb
adc
iret
addr16
call
out
inc
nop
mov
cmp
sbb
pusha
jle
cmp
cltd
and
jge
dec
jae
lret
add
es
mov
add
xchg
aaa
sub
fwait
push
jnp
and
sahf
sahf
fsub
sub
icebp
fisubrs
mov
sub
cmp
sarb
push
push
cld
mov
sub
inc
icebp
mov
bound
into
nop
sbb
out
test
cmp
jne
jbe
xchg
pop
mov
cmp
sbb
loopne
cmp
sti
scas
insl
rol
adc
rolb
inc
mov
cwtl
mov
cmp
jnp
jp
or
pushf
dec
aam
inc
je
incb
into
nop
loop
mov
shlb
nop
pop
sub
out
insb
aad
int
and
ja
push
or
xchg
lret
ljmp
daa
and
jmp
push
sbb
shrl
cmc
int
xor
mov
std
cmp
mov
xor
pop
repz
lcall
mov
or
xchg
xor
aas
pop
cmp
push
sbb
dec
dec
or
inc
jge
mov
xor
cmp
mov
lret
sub
jle
ds
jo
std
mov
mov
outsl
loop
cs
xor
pop
xchg
push
xor
jge
out
add
mov
das
dec
jg
rorb
ja
imul
jmp
dec
sti
nop
jnp
inc
push
push
test
in
sahf
ret
fidivl
call
and
fstpt
sbb
jo
add
mov
pop
inc
jg
js
imul
add
adc
lock
xorl
lds
jno
test
ret
sbb
es
mov
lret
int
insb
mov
outsb
or
lds
jle
pop
pop
outsb
push
inc
les
xor
pop
clc
cmp
push
sub
testb
jp
sbb
scas
push
jne
jnp
and
xchg
test
dec
inc
cld
jbe
cmp
hlt
jmp
mov
cmp
add
in
jg
movsb
jge
pop
push
and
outsb
jmp
enter
int
add
lret
cmc
popl
leave
test
into
jmp
mov
loop
and
xchg
xchg
repnz
push
imul
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
mov
adc
decb
adc
xchg
int3
shl
inc
lds
ret
and
jo
jns
inc
ret
inc
negl
xchg
push
stos
jo
ljmp
xor
out
jns
in
adc
lock
jge
pushf
push
mov
lahf
out
cs
adc
divl
and
mov
or
mov
xchg
test
stc
sub
push
or
cwtl
dec
pop
hlt
dec
xchg
movsl
adc
cmp
roll
push
sbb
in
jne
pop
sarl
xchg
mov
mov
inc
mov
xchg
sbb
inc
andb
jo
pop
mov
gs
fbld
sbb
push
roll
xchg
jmp
lret
push
push
jns
jbe
out
jb
jle
jae
scas
or
push
ds
loop
popa
inc
pop
add
cs
and
in
jns
pop
lahf
in
inc
out
mov
push
pop
inc
cmc
je
push
adc
sub
mov
mov
and
pop
and
js
push
popa
mov
int
call
scas
fldt
cmpsb
cmc
popa
add
mov
pushf
loopne
out
sub
int3
roll
sub
stos
mov
divb
and
mov
sbb
xchg
dec
int
mov
jl
add
insl
test
mov
mov
mov
hlt
insl
insb
rcr
clts
inc
jecxz
mov
shrl
lcall
adc
adc
ret
mov
sbb
ror
call
sub
mov
dec
cmp
ret
stos
fidivrs
push
mov
lcall
xchg
jmp
ds
int
dec
mov
test
fucomp
mov
into
adc
rol
dec
aas
xchg
iret
fdivs
adc
mov
jle
or
outsl
je
xor
cmc
int3
jb
popa
stos
mov
ljmp
insb
inc
arpl
pop
push
xor
xlat
pop
xchg
pusha
cmc
mov
sbb
inc
fwait
sub
or
popf
mov
fs
mov
jno
sti
test
add
mov
repz
or
repnz
out
xor
roll
push
loopne
out
xor
jno,pn
adc
dec
mov
and
popf
xor
stos
jle
imul
sahf
sub
xchg
stc
jne
mov
pusha
jmp
sub
jo
aam
mov
dec
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
sub
push
adc
decb
adc
rcrb
stos
adc
cs
mov
mov
es
lea
jbe
mull
hlt
aas
xchg
push
mov
es
push
int3
adc
popf
clc
divb
pop
call
scas
loope
scas
aaa
aaa
jecxz
stos
push
fs
jb
mov
mull
fidivs
and
lds
and
fmull
in
cmp
and
aaa
mov
inc
sbb
pop
sbb
gs
lea
in
arpl
pop
pop
loope
sbb
xchg
stc
inc
outsl
scas
insl
cmp
test
ret
pop
add
ret
and
jp
movsb
push
jp
jmp
movsl
sbb
ficoml
test
mov
mov
popa
ss
mov
push
ljmp
cmp
dec
xchg
xchg
adc
test
push
cmp
jg
sti
fisttpll
stos
leave
insl
pop
mov
movsl
stos
ret
and
mov
inc
mov
or
xlat
dec
pusha
pop
insb
fnstcw
cmpsl
test
repz
add
aas
outsl
scas
inc
jo
sbb
jp
inc
lret
cmp
mov
cmp
lock
out
jb
stos
les
pop
xor
add
sbb
pop
call
dec
aas
cltd
cmp
mov
jg
sbb
stos
je
pop
cmpsl
mov
stc
xchg
movsl
push
fidivl
cltd
cmp
or
adcb
or
inc
push
roll
negl
mov
nop
hlt
adc
pushf
aas
adcb
add
ss
popf
sub
bound
mov
dec
scas
iret
sti
sub
popl
ss
sub
inc
or
mov
add
sbb
sbb
call
mov
push
and
in
pop
push
cmc
mov
adc
jp
dec
and
dec
xor
cld
fwait
int
cmp
mov
inc
pop
or
or
pop
test
jl
aas
push
cmpsl
mov
jb
sub
cmp
or
movsl
out
mov
dec
add
xchg
mov
adcb
jecxz
mov
les
xor
or
xchg
int
test
sbb
mov
iret
das
mov
mov
inc
add
sbb
lds
dec
jmp
ljmp
add
mov
mov
mov
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
jg
es
or
adc
movlps
test
inc
jno
inc
lea
push
lods
or
or
sub
jo
jns
movsl
pop
cmpsl
mov
pop
inc
pushf
adc
pop
jle
xor
outsl
fsubrp
fwait
lahf
xchg
sub
pop
hlt
jbe
mov
push
ret
ss
inc
adc
push
jmp
iret
sub
mov
push
movsb
jne
pop
adc
movsb
aad
push
movsb
pop
cmpsb
test
mov
lret
cmpsb
jns
and
pop
or
bound
out
ret
sbb
vpshab
add
push
mov
and
imul
cmp
movsl
sbb
cmp
jp
sub
fs
fiadds
mov
cmp
sbb
lods
sahf
stos
orl
pop
cmp
shlb
sti
inc
dec
xchg
fldt
loop
mov
inc
sub
fdivrs
push
out
jge
xlat
dec
std
xchg
jo
scas
push
gs
mov
adc
lcall
adc
jg
bound
mov
xchg
dec
mov
mov
sbb
inc
les
cmp
dec
xchg
and
adc
sub
mov
or
js
mov
popf
xor
fwait
sahf
add
test
lahf
les
jne
mov
mov
pop
int3
jbe
mov
mov
daa
xchg
roll
dec
adc
test
pushl
mov
dec
jmp
or
orb
sti
in
lahf
xchg
mov
mov
in
mov
sbb
lds
push
pop
gs
test
pop
fcmovne
mov
jbe
mov
pop
jge
inc
imul
daa
or
mov
enter
mov
adc
sbb
and
insl
mov
shll
stos
mov
rcrl
push
jno
push
ss
jg
test
faddl
mov
dec
mov
les
lods
divl
loop
dec
mov
mov
dec
lahf
xchg
pushf
pop
pop
cmpb
shr
pop
and
mov
out
ret
jo
xchg
adc
aaa
dec
jl
outsl
stc
push
out
les
loopne
xlat
into
pop
sub
dec
dec
insb
mov
arpl
into
hlt
pop
mov
xor
fcoms
js
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
mov
lods
pop
or
adc
movlps
adc
xor
sub
sbb
sti
push
pop
cmp
mov
or
sar
xchg
dec
push
push
and
movsb
je
pushw
or
fcmovnb
mov
stc
hlt
sub
pop
sbbb
xor
mov
xchg
pop
lcall
push
pop
scas
lcall
inc
pop
and
or
jle
pop
aas
mov
mov
and
push
loope
cltd
out
aas
push
push
pop
lahf
adc
loop
mov
stos
icebp
incb
dec
adc
jne
aam
notb
and
pop
sbb
pop
xor
inc
fimull
nop
out
lods
out
and
sub
in
push
bound
scas
pop
cmc
call
jno
data16
mov
sub
orl
adc
flds
or
aaa
cmp
shlb
test
fucom
mov
jecxz
inc
or
mov
and
pop
loop
mov
jb
imul
fiaddl
cmp
pop
daa
cld
in
repnz
cli
popa
push
xchg
adc
shrl
jae
shrl
test
int
outsb
loopne
or
dec
subb
popa
mov
test
popa
pop
and
int3
or
insl
imul
addr16
pop
fisttps
or
jae
mull
popa
aad
mov
jge
cmp
int
xchg
insl
jp
dec
in
or
in
mov
pop
sti
dec
cmp
inc
insb
in
jmp
in
out
xchg
mov
mov
stos
sub
repz
sbb
sahf
dec
pop
cmpsb
sbb
push
push
and
mov
mov
cmpsl
lods
cmpsl
test
lcall
lret
cmp
cmp
data16
ficoml
xor
and
dec
push
pop
sahf
insb
mov
and
mov
jge
mov
call
lods
daa
enter
enter
cltd
mov
ret
movsb
xor
and
stc
dec
inc
ljmp
pusha
call
push
push
loopne
test
dec
out
add
pop
jge
or
sub
mov
in
jmp
pushf
dec
fs
stos
mov
lock
inc
xor
shll
sbb
jg
push
pop
push
jo
leave
dec
and
jbe
jne
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
and
xor
mov
ljmp
push
or
inc
push
notb
stos
cmpsl
cmpsl
sbbb
mov
ret
jae
insl
int3
and
stos
pop
adc
inc
jae
add
int3
and
loope
pop
movsl
adc
inc
notb
mov
jo
mov
hlt
push
jle
and
cs
mov
movsb
mov
pop
inc
adc
add
ds
test
pushf
sbb
incb
lahf
mov
outsb
lea
aad
mov
lock
sahf
sbb
jnp
lret
mov
and
pop
mov
in
dec
test
cli
push
call
icebp
pop
movsb
adc
or
dec
fstpt
rcr
rolb
jo
adc
lea
pop
ret
mov
sub
mov
sbb
imul
and
sub
cltd
je
shrb
iret
pop
push
rorl
cmp
bound
sub
dec
ss
in
div
mov
inc
dec
aaa
cmp
movsb
out
dec
jg
out
movsb
jmp
jnp
or
and
sbb
icebp
inc
pop
insl
lods
push
mov
adc
sti
push
aam
add
mov
mov
or
pusha
mov
mov
test
daa
movsl
js
inc
sar
inc
xchg
cltd
out
into
xchg
or
inc
lock
sbb
fcoms
push
les
adc
jbe
mov
test
sbb
jl
sub
shll
mov
mov
adcb
lods
push
mov
jle
int3
fiaddl
scas
pop
ret
mov
mov
ljmp
shlb
mov
std
mov
push
sbb
push
pushf
mov
push
mov
jecxz
and
hlt
cmp
cs
xor
adc
enter
fsubr
cmpl
adc
stc
ret
ret
add
cmc
jle
push
hlt
sbb
rdmsr
pop
adc
fildl
outsl
dec
dec
xlat
jae
movsl
test
testb
fmull
jle
faddp
lahf
roll
xor
outsl
pop
iret
pop
rorb
das
jl
ret
push
add
ret
dec
rcl
xor
dec
sbb
es
ret
es
xor
incb
clc
jnp
es
sbb
imul
mov
daa
fsubrs
adc
fimull
in
movsb
loop
jns
and
cmp
jno
pusha
fiaddl
cld
ljmp
jmp
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
loope
xchg
js
cld
adc
popa
movlps
xor
fistpll
roll
xchg
inc
test
inc
mov
out
push
shrl
push
inc
mov
sbb
aam
cmp
adc
pop
popa
inc
xor
jae
lret
cltd
jbe
pop
das
cmp
jle
push
lods
rolb
push
arpl
scas
fwait
or
ja
or
or
dec
mov
push
push
sub
xchg
cmpsb
mov
orb
cmpsl
enter
rcrl
jg
dec
int
push
mov
gs
lret
xor
jbe
arpl
lea
es
or
cmc
scas
pop
push
mov
and
sub
leave
adc
hlt
mov
aad
std
pop
roll
sbb
sahf
mov
xchg
cmp
rol
jmp
push
stos
jmp
push
nop
sub
or
inc
leave
test
dec
lds
test
cld
ret
pop
movsb
js
fcomps
mov
push
cmpsb
clc
mov
dec
shrb
es
sbb
and
pushf
js
xor
sub
in
fldl
sub
fistpl
setbe
cmp
enter
jno
mov
xor
test
pop
loope
lds
mov
imul
sbb
imulb
cmp
mov
ljmp
push
mov
inc
cwtl
lods
imul
jo
mov
outsl
mov
les
cmpsl
mov
scas
ss
lret
aaa
mov
loope
gs
sti
fdivl
and
rcl
pushf
mov
and
imul
sbb
fldcw
sbb
test
xor
xor
lahf
xor
test
pusha
test
scas
shlb
xor
lcall
sbb
sub
arpl
mov
and
loope
dec
icebp
jbe
add
and
aad
shl
scas
sub
and
pop
mov
push
mov
out
push
jnp
sbb
sub
jo
xchg
add
mov
clc
fisubrl
sbb
outsl
loope
jge
popf
push
data16
sbb
shl
jecxz
or
fstp
lahf
xor
test
int
mov
in
in
sbb
call
lret
roll
mov
inc
push
rclb
cwtl
pop
push
insb
loop
shrb
xchg
push
leave
lret
movsl
mov
xchg
rclb
in
loope
add
jae
insl
push
pavgw
stos
push
mov
or
call
push
add
divl
ds
rcl
or
dec
lods
push
hlt
clc
sub
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
loope
data16
clc
adc
popa
movlps
xor
repnz
mov
xor
pusha
inc
aaa
aas
pop
in
jmp
gs
mov
data16
cmpl
int
xchg
test
and
in
outsl
daa
pop
pop
ljmp
pop
lock
add
jl
or
mov
std
insl
scas
sbb
add
jns
stos
add
lock
sub
data16
lea
int
icebp
cwtl
inc
sbbl
imul
jae
jge
leave
jae
imul
andb
cmp
pop
jle
xor
xor
imul
loope
xor
shlb
push
xor
push
loopne
aad
out
and
sahf
repnz
mov
iret
dec
adc
lea
cmove
mov
jmp
lcall
xor
jge
in
xor
sub
ret
pop
jne
xor
wbinvd
or
mov
or
fnsave
mov
push
xor
jno
jmp
popa
fdivs
in
ret
add
repz
xor
es
in
push
cli
and
outsl
test
inc
adc
outsb
push
sahf
sub
sub
mov
xor
lods
fldcw
scas
mov
cmc
std
stos
mov
nop/reserved
aam
loop
fstpt
popf
das
fistl
push
out
cmp
xchg
ja
sub
aam
fiadds
inc
dec
inc
xor
mov
mov
ljmp
adc
shll
dec
xchg
mov
insb
xchg
out
arpl
ret
pop
mov
push
inc
shlb
pop
push
dec
ds
jb
push
mov
mov
mov
pusha
mov
imul
dec
inc
loope
movsb
push
push
pop
daa
test
sahf
xchg
pop
aad
mov
pop
xor
add
sbb
stc
lahf
shll
sub
xor
and
sbb
mov
repz
rcrb
mov
xor
popf
jecxz
push
sbb
jl
inc
jl
sub
add
std
lret
mov
cmp
call
hlt
lods
pop
mov
int3
cmpsl
push
stos
mov
sbb
lret
cmp
xadd
pop
jle
arpl
or
jp
out
fadd
xlat
push
pop
js
out
ret
or
call
aas
out
xchg
inc
push
jno
jmp
decb
sub
push
ja
popa
lcall
xchg
mov
sahf
jns
pop
xchg
out
cmp
adc
mov
pop
in
inc
adc
sbb
fs
jns
push
addr16
push
inc
and
adc
jp
js
sub
clc
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
push
dec
mov
popa
movlps
mov
mov
into
xchg
pop
cld
dec
pop
ja
inc
ret
dec
inc
sbb
push
pop
or
inc
jnp
loopne
pop
lock
outsb
out
xchg
mov
xchg
lods
in
out
xchg
cmpsb
sub
cmpsl
push
test
pop
cmp
cmp
or
popf
in
lds
xor
test
loopne
push
dec
mov
xor
fists
and
push
rcrl
frstor
push
or
add
jl
fadds
xchg
jb
jle
xchg
pop
adc
es
gs
sub
adc
or
inc
adc
dec
and
lods
in
testb
ja
mov
aaa
sbb
mov
mov
cwtl
cmp
cmp
js
mov
addr16
xor
jbe
mov
fsubrs
xchg
pop
mov
xor
fisubrl
mov
or
shl
rorl
xchg
test
sahf
orl
fstp
movsb
sub
sub
dec
js
mov
adc
lds
pop
jae
xchg
jp
dec
xor
mov
lret
inc
aam
sbb
movsw
jp
jmp
xchg
dec
jl
mov
loope
insb
pop
pushl
call
dec
and
cmp
push
jle
insl
cli
or
cmpsb
lock
lea
cmp
inc
xor
push
and
inc
fidivrl
jg
mov
pop
mov
fcmovnbe
or
xchg
add
js
addr16
dec
pop
js
call
mov
mov
sbbl
scas
divl
scas
inc
add
daa
iret
jo
inc
jmp
and
dec
and
imul
xor
lret
or
and
aas
fsubrp
adc
add
fisttpll
shll
jnp
icebp
cmp
int3
push
in
pop
and
dec
mov
fstl
dec
addb
pusha
insb
add
nop
pop
ja
inc
xchg
pop
ss
out
aas
in
fsubr
pop
loopne
mov
push
scas
movsl
push
ficoms
loop
mov
jne
test
add
std
pop
pushf
fsub
and
mov
ljmp
add
stc
loopne
fdivs
push
pop
in
push
loopne
pop
sar
movsl
jge
jo
and
xchg
hlt
out
mov
pop
push
xchg
out
jecxz
pop
iret
mov
mov
lods
xor
sub
mov
xchg
lds
sbb
pop
jbe
scas
cmc
sbb
lret
in
pcmpeqd
mov
cld
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
and
rep
fucomip
adc
popa
movlps
sbb
lods
sbb
movsb
ljmp
in
pop
xchg
test
insl
push
xor
ret
sub
jb
iret
jae
stos
out
adc
or
sbb
pushf
out
ja
loopne
ljmp
jl
cmp
and
nop
mov
jbe
add
push
repnz
mov
pop
fisubl
mov
in
xchg
pop
ja
sbb
mov
negb
or
cmc
mov
sti
loop
mov
ja
jp
stc
aad
cld
dec
es
push
dec
lea
jmp
loopne
lahf
fs
pop
inc
jae
ljmp
fwait
lds
xor
out
outsb
xchg
cs
mul
sbb
sub
dec
out
lea
mov
cwtl
mov
push
xchg
popa
icebp
add
cwtl
fimuls
mov
test
sbb
cmpsl
ljmp
in
sbb
scas
lds
jns
adc
imul
jmp
mov
dec
into
jno
xchg
sub
jge
push
mov
pop
ret
and
mov
mov
adc
je
xchg
cmp
xor
mov
cltd
fs
popf
cmp
jg
mov
mov
mov
mov
xor
add
pop
outsb
cld
fcompl
pusha
pop
mov
sbb
or
add
pop
jp
repz
shll
push
add
outsl
and
daa
push
add
xchg
pop
out
in
mov
xchg
mov
aad
mov
mov
call
sbb
je
outsb
ret
cmp
sub
aad
insb
xchg
inc
jp
adc
sarb
std
xor
in
call
cmpsb
fwait
jno
icebp
jecxz
mov
into
mov
stos
cld
call
scas
pop
pop
decb
sbb
adc
movsl
scas
adcb
mov
insb
ds
or
inc
push
imul
mov
cmc
cmp
mov
sub
mov
jl
mov
and
in
add
sub
int3
lock
loope
lods
xchg
faddl
sbb
push
pusha
add
stc
and
pop
fcompl
cmpsl
dec
pop
mov
jge
push
or
and
insb
mov
mov
out
aaa
insl
push
lods
std
push
and
shlb
lahf
xlat
lret
dec
sbb
or
inc
jbe
push
lods
call
push
lahf
int
movsl
lds
addr16
cmp
and
rol
icebp
or
inc
in
cli
push
xchg
ret
sub
pop
jnp
sub
xchg
jno
movsb
loopne
ret
mov
push
clc
push
loopne
insl
xor
ret
cmp
lock
and
rorb
adc
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
ficomps
inc
stos
cs
adc
aas
sub
and
dec
call
cwtl
push
into
insl
lock
imul
cmp
ret
sub
or
loop
lahf
sbb
and
xor
rol
jmp
xlat
mov
sbb
aad
popf
in
mov
addr16
and
arpl
push
gs
stos
std
mov
fsubrs
test
cmc
iret
mov
push
and
cld
lea
in
test
push
test
call
cs
fsubrl
int3
add
sub
lahf
dec
or
fwait
sub
lds
lea
xor
xor
adc
mov
aad
sarl
xor
fidivrs
mov
aad
adc
dec
pop
sub
sub
jg,pt
mov
addr16
pushf
sbb
adc
or
mov
add
sbb
ficomps
mov
dec
jmp
pop
xchg
movsb
pop
dec
jl
mov
cli
rclb
adc
mov
add
lock
sbb
cwtl
mov
pop
dec
pop
push
jo
lods
iret
out
jl
jl
inc
mov
dec
loop
xchg
cmp
int
jns
out
mov
mov
mov
push
add
mov
and
ret
and
sarb
jnp
out
jae
push
mov
xor
push
loop,pt
cld
mov
roll
jo
sbb
in
sub
cmc
aaa
fdivrs
sub
and
lods
scas
push
test
lods
ss
add
sbb
aam
sbbb
pushf
cmp
stos
and
xchg
rcll
inc
add
xchg
iret
shrl
imulb
out
mov
adc
fs
xchg
cmp
test
cmp
add
sub
fsubl
enter
sbb
add
inc
stos
imul
pop
mov
jl
xor
ss
fildll
loop
cmp
fiaddl
and
stc
mov
in
push
nop
xchg
push
push
inc
push
aam
add
out
ficoml
fs
fidivrs
nop
cli
xor
in
daa
rcll
mov
movb
ds
mov
sub
xor
push
aas
mov
movsb
sahf
jbe
jns
hlt
jnp
mov
shlb
mov
adc
into
mov
fcomps
or
je
sti
jae
sub
pusha
add
mov
sbb
lcall
xor
fcmovnb
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
pop
mov
movlps
pop
cmp
test
mov
jmp
dec
outsl
inc
fstps
sub
sbb
outsl
imul
xchg
or
mov
outsb
push
aad
out
sbb
xor
in
lcall
mov
pop
push
clc
mov
dec
enter
sub
sbb
xor
out
sub
jecxz
xor
loope
ss
sub
xchg
in
lds
and
xchg
dec
daa
call
sub
fisubrs
push
stos
add
fstpt
add
loopne
rorb
sub
mov
insl
inc
dec
xor
out
xchg
or
mov
push
pushf
leave
xchg
sub
fcmovnu
les
jp
das
adc
arpl
push
cmpsb
mov
negl
cmp
adc
loope
xchg
gs
stc
add
je
daa
scas
fidivrs
dec
stc
or
mov
dec
insl
orl
loopne
test
jl
leave
and
rcrb
test
sub
pop
rorl
inc
out
lahf
mov
mov
repnz
or
nop
mov
shrb
cmpsb
aad
or
lcall
rcrb
jnp
or
loop
jne
mov
aad
scas
xor
lea
push
sahf
inc
xchg
sbb
nopl
mov
js
ficoml
lods
sub
lahf
pop
jmp
adc
loop
pop
mov
fcmovb
inc
out
and
adc
dec
xor
roll
roll
das
dec
cmp
dec
mov
cwtl
movsl
movsb
mov
cmpsl
pop
sbb
mov
lahf
ret
ffreep
cmp
in
in
addl
sub
jecxz
stc
mov
fidivs
lret
inc
pop
push
mov
add
sbb
hlt
push
mov
idivb
sub
sub
cmp
mov
js
cmp
push
out
cwtl
dec
push
add
mov
je
lods
pop
out
jmp
and
dec
es
mov
xlat
mov
sub
mov
lock
mov
mov
jle
daa
popa
xor
pop
das
pop
into
movsl
xchg
scas
cmp
pop
pop
inc
sbb
mov
pop
out
movsb
dec
xlat
and
add
shr
movsb
notl
xlat
flds
sub
adc
arpl
cld
rcr
nop
pop
sbb
mov
sbb
ret
or
sbb
nop
sbb
popf
in
xchg
arpl
shr
mov
adc
cmp
add
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
mov
out
in
adc
std
cmc
dec
adc
pushf
lods
daa
out
jl
mov
hlt
add
sbb
fmuls
daa
jnp
aad
out
clc
in
xchg
pop
push
pop
fwait
mov
mov
and
cltd
in
push
mov
or
cltd
mov
push
sti
adc
add
fadd
fiaddl
pop
loopne
dec
shll
and
ljmp
sub
jae
pop
jmp
push
push
fstps
push
ds
dec
ror
inc
dec
cmp
outsb
sub
push
lcall
mov
ficompl
jl
mov
jmp
or
je
sbbb
sub
pop
cld
andb
xor
inc
pop
push
add
dec
icebp
mov
sub
jo
int3
test
xor
jmp
add
aaa
push
push
scas
mov
scas
rclb
aam
jle
mov
sqrtps
hlt
fwait
and
jns
inc
int
mov
dec
addr16
xor
push
popa
movsb
ja
in
cld
mov
leave
jp
mov
jg
pop
add
dec
and
xlat
cld
cmp
imul
fsts
mov
clc
push
in
mov
xor
mov
or
stos
fldenv
pop
xchg
insl
call
mov
arpl
fwait
pop
lock
cwtl
push
lods
xchg
push
mov
xchg
js
pop
arpl
add
or
in
shl
and
mov
mov
jmp
pop
hlt
mov
push
outsl
in
loope
add
xor
stos
pop
xor
pop
sbb
or
dec
inc
push
xchg
popa
mov
jmp
leave
lock
and
cltd
je
pop
inc
in
push
sbb
or
fdivrl
nop
leave
jge
bsr
jno
mov
adc
push
dec
xchg
cmp
mov
or
lret
stos
xor
enter
and
lods
and
xor
push
enter
movl
jp
sub
mov
test
ja
cmpsb
bound
xor
jecxz
fcomps
inc
mov
xchg
push
aas
sarb
adc
jno
in
jle
or
jb
shll
cmpsb
jmp
inc
int3
or
int
test
lea
cli
enter
cmp
addr16
data16
push
fcmovb
or
jmp
pop
inc
movsb
mov
cwtl
push
ja
push
dec
pop
jle
lods
push
loope
vpsrlw
pop
mov
test
add
lods
sub
int
in
fnsave
loop
stos
dec
sbb
loope
xor
xor
andl
jmp
sub
sbbl
pop
js
lods
test
test
mov
movlps
mov
push
xor
xorl
cmp
jo
xchg
mov
sti
js
inc
sub
imul
mov
cmp
insb
xchg
xor
add
push
stos
add
mov
shl
pusha
jmp
scas
xor
mov
mov
test
aam
pop
mov
add
pop
lods
cmp
push
rorb
lock
jo
dec
lret
repnz
imul
movsl
mov
mov
int3
xchg
rol
cmc
pop
push
mov
fcompl
jl,pn
jg
push
adc
dec
cmp
adc
sbb
mov
sarb
push
inc
inc
adc
leave
ret
add
popa
sub
sbb
mov
cmp
mov
ja
xchg
inc
out
sbb
dec
xor
push
outsb
xchg
ja
sbbb
and
ret
xchg
shl
addr16
cltd
or
dec
in
sub
arpl
pop
mov
inc
add
push
ljmp
inc
push
jbe
jnp
inc
mov
push
sbb
lahf
into
jmp
stc
pop
shll
jne
mov
int
imul
enter
mov
es
jae
add
pop
jecxz
fcomp
pop
jl
jp
xor
push
push
mov
sub
cltd
mov
pop
dec
pop
testb
leave
push
fwait
not
in
adc
jmp
repnz
aas
cwtl
pop
add
scas
push
outsl
pop
and
call
cmp
xor
mov
in
pop
mov
mov
xor
lahf
ja
mov
mov
jnp
arpl
and
stc
xor
gs
clc
arpl
mov
xchg
push
or
and
xor
movl
iret
imul
stc
cltd
lret
sub
sub
xlat
insw
xor
lock
push
dec
fisubrl
pop
test
sbb
mov
sub
inc
pop
sbb
mov
lds
mov
xchg
test
add
inc
fidivs
jg
jae
and
cmp
and
fidivs
jns
loope
ret
call
mov
pop
cmp
push
loop
cmp
sub
inc
js
pushf
add
or
add
decb
mov
jns
hlt
xor
sub
jns
lea
repz
xchg
cmp
or
sti
lods
sbb
mov
pushf
je
arpl
jle
loope
lret
inc
mov
lds
call
movb
movb
loope
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
out
dec
call
and
mov
outsl
fnstenv
mov
mov
les
mov
dec
js
lahf
cmp
add
sub
mulb
jmp
mov
dec
repnz
mov
inc
hlt
cmp
hlt
mov
push
xor
xchg
and
into
or
dec
shll
inc
sbb
pop
mov
aas
pushf
inc
sahf
cmp
test
jmp
pop
xchg
jb
mov
lret
dec
or
call
push
mov
inc
aas
fnstsw
jg
clc
sub
fsubl
pop
loope
inc
jle
dec
inc
ficompl
mov
mov
sub
loop
push
mov
in
cmp
jb
les
mov
outsl
shl
push
ds
jge
aas
sbb
or
imul
in
xor
addr16
jg
mov
push
dec
je
jo
push
jb
inc
loop
pop
jne
cmpsl
or
sbb
and
add
subb
jl
xlat
fsub
cmp
cld
add
fidivs
sarb
xor
lods
jmp
dec
bound
xchg
add
pop
jbe
jo
ficoms
mov
mov
ds
popa
int
add
pop
jne
mov
jge
lods
inc
clc
add
cmp
in
bnd
lret
aad
pop
or
iret
push
aam
sbb
je
test
sbb
ret
sbb
jge
shr
popa
aam
push
push
fs
sbb
call
mov
out
and
mov
mov
jae
hlt
adc
jp
test
sub
ds
and
or
adc
out
lahf
xor
imul
push
hlt
repz
sub
rcll
jp
shll
xlat
mov
mov
jge
push
pop
sbb
mov
js
sub
iret
pop
push
aas
push
jo
jmp
ljmp
aaa
ja
and
pop
out
and
lcall
push
add
loope
lret
cmp
stos
mov
inc
mov
lret
cmpl
mov
cmp
je
fnstsw
ret
sbbb
pop
nop
jecxz
add
jp
nop
sti
dec
push
stos
cltd
je
scas
cwtl
std
mov
inc
mov
scas
jle
and
js
aad
popf
mov
pop
xchg
out
pop
or
xor
mov
out
popl
xchg
in
clc
mov
add
addl
jl
push
roll
enter
adc
mov
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
gs
mov
xchg
movlps
pop
jbe
ljmp
jl
sbb
push
jl
dec
call
or
scas
inc
jae
inc
mov
lods
lcall
push
cs
mov
lock
cld
adc
sub
mov
sbb
stos
movsb
sbb
cmpsl
add
jmp
jbe
cmpsb
xor
lret
dec
cwtl
sub
mov
xchg
sti
sahf
jge
lret
fmull
in
jp
das
loop
popf
and
add
loopne
and
shlb
into
push
push
push
adc
arpl
pop
out
lahf
mov
jne
cmp
sti
and
mov
leave
cwtl
roll
mov
jo
roll
jb
jns
sbbl
pop
sub
or
stc
inc
jp
fildll
mov
lods
jne
daa
pop
or
hlt
popl
not
inc
repz
out
inc
aaa
push
in
orb
std
fwait
xchg
cmp
icebp
cs
movsl
add
je
lods
and
push
add
int3
inc
cmp
mov
xor
flds
cmc
inc
or
jle
in
nop
mov
fisttpl
dec
mov
mov
je
add
or
insb
xchg
pop
enter
sub
shlb
test
dec
mov
mov
xchg
jne
loopne
mov
push
fwait
or
cmp
jge
mov
insb
pop
cltd
xchg
add
adc
add
sub
cli
orb
mov
cli
cltd
sbb
daa
xor
cltd
shrb
jno
push
inc
rorb
popa
imul
fmuls
and
mov
inc
ljmp
loop
fsubrl
dec
push
mov
aam
pop
push
aam
dec
pop
out
pop
cmp
pop
cmc
xor
nop
mov
test
sub
sbb
stc
shlb
imul
xchg
andl
jae
mov
mov
imul
es
mov
dec
call
enter
jle
jns
testl
cwtl
jae
xchg
dec
outsb
sub
mov
cmc
stos
cmpsl
fidivs
jg
loopne
mov
jne
or
dec
movsb
insl
iret
xor
dec
xor
mov
in
fisttps
dec
cmp
cmpsl
lea
aas
adc
int
mov
jno
add
in
hlt
cs
dec
jmp
adc
gs
mov
mov
fcompl
mov
dec
sub
adc
test
stc
pop
stos
movsl
maxps
mov
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
add
adc
ret
outsl
sbb
imul
lahf
sbb
inc
jge
faddp
jg
mov
imul
xchg
mov
lock
mov
fs
sbb
cmc
mov
xor
lods
pop
xchg
fadds
lret
repnz
sahf
mov
mov
out
lret
mov
or
add
rorl
mov
cmp
js
push
and
ds
data16
stos
or
sbbb
mov
movsl
xchg
cmp
sbbb
stc
test
jns
imul
test
leave
or
test
stc
fiaddl
loopne
js
or
notb
repnz
scas
sub
adcl
add
loopne
inc
in
shll
daa
xor
pop
jne
in
addr16
cltd
xchg
pop
push
dec
aas
stos
sbb
mov
and
out
add
xchg
addr16
mov
inc
dec
mov
dec
mov
lea
dec
sub
inc
test
lods
stc
add
mov
das
test
dec
ljmp
rcll
int
jecxz
cmpsb
pop
testb
test
ss
dec
mov
sbb
test
ss
iret
push
jecxz
iret
testb
adc
mov
je
cmp
lret
test
jno
push
movsb
pop
mov
inc
bsf
xchg
xorl
loope
cmp
outsl
fiadds
cli
cmpsl
je
adc
mov
xor
mov
pop
cmp
xchg
lods
xchg
into
arpl
add
cwtl
lret
daa
daa
fisubl
imul
cmp
mov
and
or
dec
jmp
es
lods
xchg
je
jne
lods
dec
sub
inc
mov
xchg
jnp
or
push
daa
cmp
sarl
cltd
pop
lods
xchg
jg
cltd
inc
sbb
xor
test
sub
adc
lret
cld
cs
xchg
or
popa
fsts
sbb
push
xchg
or
inc
inc
dec
mov
loop
insb
int3
pop
jb
mov
cmp
pop
push
xchg
add
test
mov
test
lock
mov
fwait
xlat
mov
test
ja
dec
and
push
clc
repz
cmp
ljmp
cmovno
jne
shrl
mov
loope
cmp
pop
inc
xchg
out
mov
and
pusha
ja
push
dec
push
jmp
dec
out
push
xchg
cmp
add
inc
mov
fcmovne
shld
test
pop
aad
decl
mov
movl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
dec
push
mov
jne
ja
and
sbb
mov
scas
sub
lea
pop
push
mov
jo
pop
scas
leave
pop
add
std
imul
aam
repnz
dec
js
int3
mov
pop
data16
jae
or
adc
push
mov
pop
sbb
push
shrl
mov
adc
mov
mov
cmp
pop
idivl
adc
sbb
xchg
lahf
jg
add
sub
stos
xlat
movsb
dec
dec
pop
imul
adc
lret
or
dec
sbb
jle
xor
mov
mov
popf
push
rorb
jl
enter
adc
cmp
pop
mov
int
push
movsb
rorl
sbb
inc
pop
data16
aaa
decl
pop
lock
aam
out
jmp
xor
iret
xchg
sbb
cmp
mov
and
push
out
testb
mov
into
xchg
icebp
inc
daa
mov
xchg
lret
test
and
cmp
add
rorb
xchg
mov
mov
cmp
add
cmp
lock
das
add
jle
es
push
or
out
sbb
jno
insl
add
push
push
mul
repz
fldt
push
or
test
adcb
test
shlb
jle
cmpsl
popf
mov
inc
mov
ret
sub
dec
push
mov
or
jns
xchg
popf
lds
inc
push
in
aad
loope
xor
pop
in
ljmp
xor
mov
cmpsl
stos
add
mov
push
mov
pop
popa
imul
pushf
sahf
push
mov
mov
push
test
and
imul
cmp
aas
fmull
out
test
popf
leave
mov
mov
outsb
pop
adc
pusha
mov
xor
imul
mov
cmpsl
movsl
rorb
in
cmc
jle
mov
int3
xor
dec
inc
xor
mov
scas
into
orl
push
shll
idiv
mov
fsubl
push
data16
mov
sub
mov
daa
sarl
popl
mov
push
test
inc
push
ja
cmp
cs
sub
imul
fwait
inc
jecxz
mov
std
sbb
inc
loope
enter
mov
add
andl
std
sub
aas
add
cmp
push
jbe
loop
shrb
mov
xor
loope
call
jmp
imul
cltd
sbb
imul
push
push
mov
adc
andl
frstor
stos
lret
jae
out
inc
lret
mov
cmp
cmp
test
pop
sub
jl
int
cli
cmpsb
hlt
out
mov
repnz
add
cltd
cmp
lods
iret
pop
fs
aaa
cld
lret
inc
aas
pusha
or
ss
cmp
sub
nop
addr16
testl
insl
xchg
lret
mov
cwtl
sbb
stos
data16
xchg
adc
or
push
imull
std
pop
push
lgs
sub
lret
sbb
out
sub
mov
sub
in
pop
mov
test
mov
adc
mov
ds
hlt
lock
and
fiaddl
aaa
pop
sub
dec
les
jp
popa
loope
scas
shrl
inc
mov
nop
inc
mov
es
jmp
mov
cs
mov
add
push
xchg
mov
jae
xorb
shrb
adc
cli
call
outsb
mov
and
mov
push
repz
pop
pop
test
ret
sub
xor
mov
jle
fistpl
inc
outsb
ss
bound
or
jnp
cmp
out
xor
adc
or
xor
arpl
or
fbld
jl
xchg
mov
cmp
jnp
mov
mov
nop
lods
add
add
push
shl
jmp
mov
add
lods
ja
lods
fnsave
sti
ljmp
pop
stos
fsubs
dec
add
test
push
outsb
test
dec
sbb
push
sbb
mov
lods
fwait
ss
and
test
mov
pop
stos
mov
repnz
in
enter
add
xchg
loope
sti
call
or
xchg
mov
dec
sub
mov
lods
and
dec
or
sbb
jge
mov
decb
mov
xchg
shlb
xor
mov
or
xchg
mov
hlt
roll
xchg
xor
xchg
int
imul
mov
hlt
mov
add
mov
push
and
jecxz
inc
cmp
mov
add
nop
aaa
fsubl
std
add
test
mov
dec
jl
and
lcall
mov
adc
pushf
mov
adc
inc
adc
enter
add
adc
jmp
mov
mov
pop
pop
mov
lods
push
sub
lods
cwtl
mov
adc
jp
xor
ss
data16
xchg
sbb
popa
dec
popf
and
movsl
repz
andl
scas
sbb
not
push
outsl
data16
sahf
pop
mov
roll
push
jp
bound
scas
add
cmp
int3
pop
push
inc
pop
xor
jbe
push
test
lods
inc
mov
xchg
jo
movl
sub
mov
cwtl
jnp
push
pop
in
and
lcall
leave
aaa
adc
inc
in
ds
lcall
pop
jl
cmp
mov
pop
rorb
aad
sub
adc
or
inc
fiaddl
add
jae
cmp
shrl
cli
mov
shrl
mov
jne
or
scas
push
ffree
jb,pn
lret
shll
jle
and
lds
sahf
add
gs
mov
hlt
lahf
stos
and
int3
aaa
shl
in
and
shrb
ds
fchs
stos
mov
lds
std
cwtl
lret
jg
scas
shrl
push
cmp
in
cmp
or
jbe
push
int
jg
nop
jp
icebp
js
loope
insl
cmpsb
not
push
mov
cmpl
jmp
mov
jne
cmp
pop
aaa
push
aaa
les
push
pop
push
add
push
add
jne
iret
sub
sub
addb
test
sbb
out
mov
inc
sbb
or
sahf
aad
mov
pop
and
cli
loop
lcall
fdivrl
test
outsl
or
adc
mov
addr16
loope
bound
cmp
out
es
xorb
repnz
pop
mov
ficompl
and
stos
lret
adcl
pop
imulb
loop
sub
xchg
rorl
sub
fwait
jae
xor
ss
and
insl
lds
mov
add
stos
ret
rcr
xor
xchg
dec
dec
out
loopne
or
push
jo
cli
sbb
popf
push
or
nop
and
enter
xchg
scas
int
push
loope
pushl
dec
dec
dec
ds
ror
sub
cmpl
fdivr
mov
mov
jg
ret
cmp
inc
addl
insl
clc
popl
repnz
je
sbb
sbb
cltd
jmp
out
outsb
into
xor
ror
in
xchg
mov
mov
loop
push
pop
adc
cwtl
xchg
push
test
pushf
pop
or
nop
mov
jl
jo
mov
aam
sbb
mov
xchg
sbb
sub
mov
pop
sbb
xor
rorb
ret
cmp
add
xor
loope
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
mov
xchg
movlps
shrb
push
adc
loope
inc
xchg
fisubrl
ljmp
add
jmp
push
movl
sbb
fidivrl
mov
bound
adc
jae
repnz
jge
cmp
pop
and
out
ret
inc
jecxz
and
lret
lret
push
fadds
in
int3
xchg
or
pop
je
xchg
xchg
je
int
mov
loope
into
fnstenv
push
sub
xor
popl
fdivs
add
mov
pop
xchg
push
inc
cwtl
popa
and
aas
push
xor
cmp
and
nop
cmpsb
jmp
or
xchg
dec
repnz
test
in
mov
fmull
js,pn
loopne
mov
mov
enter
scas
cmp
dec
xor
lahf
loope
sub
mov
loop
rolb
test
xlat
mov
cmp
nop
sub
xchg
cld
pushf
mov
or
or
and
icebp
fs
cwtl
fldt
popf
subb
in
in
stos
jp
out
ss
xchg
bound
je
adc
mov
mov
ss
gs
add
repz
shl
out
repz
sub
and
pop
dec
ja
lods
mov
aaa
dec
jo
dec
ljmp
jbe
mov
shlb
lahf
mov
inc
or
cmp
daa
leave
xlat
arpl
push
sbb
je
test
test
lds
xor
mov
xor
ret
outsl
or
fisttps
pop
mov
pop
icebp
outsb
fistps
or
cwtl
xchg
data16
cwtl
mov
xor
shll
jge
xor
mov
sub
lret
cmp
movsb
cltd
rclb
xchg
or
cmp
sbb
les
lods
hlt
cmp
gs
shlb
push
js
xor
xchg
icebp
mov
imul
adc
cmp
mov
or
pop
out
enter
scas
insl
mov
mov
ffree
mov
pop
aas
cmp
mov
cmpsb
js
stos
jmp
dec
cltd
and
push
bound
sub
enter
xchg
add
dec
out
out
jmp
cmp
lret
add
xchg
out
xadd
sub
mov
adc
shl
cmp
aaa
add
data16
mov
jmp
arpl
stc
sub
aaa
imul
mov
fs
mov
pop
int3
insb
jle
and
push
paddd
pop
incl
add
decl
cmp
rorl
stc
cld
decl
test
cld
decl
or
lods
enter
add
or
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
es
mov
xchg
movlps
and
push
mov
jmp
inc
dec
in
jle
and
stos
into
add
into
test
fs
test
xor
mov
and
push
jle
fcom
mov
mov
pusha
push
ss
xchg
inc
or
mov
add
aas
js
cmpl
and
inc
ds
or
add
jl
fwait
xchg
sbb
lret
fwait
jl
sarb
mov
and
mov
int
inc
imul
add
jecxz
sahf
dec
out
push
mov
inc
ret
cmp
inc
imul
sub
push
sub
mov
adc
adc
add
or
sbb
and
pop
rorl
in
inc
popf
cvtdq2ps
sar
mov
les
mov
dec
loope
ss
cli
and
into
cld
mov
leave
sbb
mov
imul
adc
orb
push
loop
mov
adcb
or
xchg
lcall
inc
testl
mov
movsl
mov
jmp
mov
mov
pop
xchg
cwtl
cld
scas
int3
movsb
xor
mov
cmp
mov
add
inc
test
je
push
fiaddl
or
sub
arpl
pop
in
popf
xor
xchg
cs
bound
cmp
xor
or
push
xor
sbb
mov
cmp
pop
popa
iret
outsb
adc
in
inc
jg
jmp
stos
sub
mov
cld
fdivl
cmp
cli
sbb
or
push
sbb
xchg
pushf
mov
jne
mov
or
mov
sar
negb
aas
mov
pop
sti
cmc
push
repnz
mov
popl
add
jp
xchg
int3
test
adc
fwait
push
sysret
mov
dec
outsb
cmp
test
test
in
dec
out
xchg
or
mov
dec
cmpsl
cwtl
sub
iret
mov
push
adcl
loop
sar
std
xor
sbb
mov
loope
fdivr
into
nop
divl
dec
jg
icebp
call
into
rcl
adc
icebp
sub
or
push
fldt
sbb
sahf
je
imul
mov
lcall
and
push
dec
das
add
ljmp
imul
int
and
les
pushf
cs
mov
jo
in
sub
mov
js
pushf
xchg
pop
jbe
pushf
xchg
or
dec
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
jge
lods
push
mov
adc
mov
orb
sbb
fisttpll
arpl
inc
mov
in
push
xor
inc
test
or
sub
dec
jns
sti
fadds
ja
pop
sahf
push
push
imul
iret
or
xor
aam
ja
sub
outsl
jo
mov
ljmp
scas
dec
es
mov
js
mov
ds
push
mov
sub
scas
enter
sub
lds
pop
cli
imul
aaa
or
push
push
stc
jbe
push
out
jo
dec
or
aam
mov
loope
scas
xor
fdivs
xor
xchg
add
ret
pusha
inc
sbb
outsb
mov
movsb
aaa
pop
cli
cld
xor
xorb
push
cmp
pop
lcall
pop
mov
or
fwait
cmpsb
test
mov
incl
add
mov
fidivl
fists
scas
add
add
pop
out
stos
mov
int
sbb
pop
test
aaa
movsb
jge
dec
and
sub
imul
inc
and
xor
mov
lcall
adc
pop
add
clc
movsb
pop
outsl
pop
orb
pop
push
mov
push
push
neg
lock
ljmp
mov
sub
in
mov
cmp
daa
roll
cmp
scas
dec
ret
jge
pop
xchg
scas
int
add
aam
push
add
shlb
push
inc
jecxz
int3
xor
outsb
rcl
loopne
das
push
inc
into
hlt
jno
scas
adcl
xchg
sahf
xlat
push
iret
xchg
in
jno
mov
fimull
mov
fwait
ret
add
adc
outsb
add
sbb
sub
sub
push
sbb
stos
dec
jns
push
test
sub
or
nop
inc
popa
inc
lock
pop
scas
add
shlb
repz
pop
mov
inc
pop
push
outsb
add
lret
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
xchg
stos
insb
mov
adc
mov
in
xor
je
adc
xchg
scas
repnz
aaa
jnp
repnz
test
call
gs
icebp
sbb
fcoml
imul
fisubrl
scas
or
movsb
sub
xchg
push
insl
push
xor
jne
mov
pop
adc
inc
push
mov
jne
lret
sbb
jns
and
rclb
leave
mov
mov
xor
ror
jecxz
add
pop
aad
xchg
daa
outsb
xchg
movsl
shll
pusha
fisubs
repnz
xor
xor
adc
inc
add
dec
rorb
fcmovbe
add
xchg
mov
xchg
sub
adc
cmc
inc
pop
popf
lret
das
or
shll
mov
adc
sbb
inc
pop
cmp
das
pushf
mov
sahf
inc
test
pop
mov
or
jmp
stos
loop
cmp
xor
fs
lahf
fdivrs
adc
add
imul
jno
mov
push
imul
pushl
push
fwait
mov
insl
int
mov
cltd
xor
inc
loop
jnp
sbb
mov
ljmp
jmp
lret
jle
cmp
fs
mov
xchg
push
xor
mov
repz
das
and
inc
jo
in
mov
ljmp
jecxz
xchg
ficoml
sbb
andl
or
cmpsl
addb
push
pop
cmp
lods
iret
and
pop
jle
xor
inc
pop
stos
cs
and
inc
lret
in
cwtl
sbb
pusha
xchg
mov
repnz
lret
repz
jnp
ljmp
pop
or
gs
imul
outsl
ret
aad
xor
mov
inc
jecxz
sub
mov
or
ret
arpl
icebp
arpl
push
cli
mov
dec
mov
scas
ja
sub
mov
mov
cmp
push
aas
cs
shll
sbb
loopne
push
rcr
push
cmp
inc
stc
sbb
inc
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
pop
sysret
mov
mov
out
aaa
ljmp
mov
sbb
popa
loop
stc
sbb
jecxz
pop
mov
dec
push
cmp
lcall
fstl
out
test
mov
sbb
iret
sub
xchg
jns
push
pop
dec
neg
pushf
loop
cs
mov
lret
xchg
arpl
jp
test
jne
and
pop
pop
pop
push
in
jp
pop
out
cmp
leave
adc
mov
lahf
dec
out
mov
ja
pop
pop
mov
ja
ja
push
adc
or
adc
xchg
mov
mov
xor
fdivrs
int
pop
lds
mov
sbb
and
std
test
jl
pushf
fdivrl
shll
mov
and
out
sub
add
adc
push
shrl
stos
sub
mov
push
das
out
xor
dec
push
pop
addr16
out
rcrb
daa
cmp
jnp
push
dec
adc
push
inc
push
jnp
imull
sarl
xor
inc
dec
mov
inc
adc
lcall
add
xor
rol
push
inc
mov
lahf
sbb
daa
push
hlt
sbb
inc
mov
insb
mov
stc
jns
push
in
jmp
in
cs
cmpl
xchg
mov
cmp
mov
aaa
outsb
clc
arpl
mov
call
add
arpl
ds
xchg
mov
or
mov
jnp
mov
fistps
pop
mov
xchg
fwait
mov
cmp
mov
mov
inc
jge
pop
ja
xchg
int3
mov
fcomps
sub
rcrb
js
sub
rol
movsl
movsb
dec
inc
or
bound
fldt
lods
cwtl
mov
lcall
cmp
mov
fdivr
xchg
mov
lock
jns
xchg
lock
divb
push
push
pop
jl
push
xchg
lahf
je
das
push
aas
add
dec
add
jnp
mov
sarb
fimull
xchg
add
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
mov
movlps
dec
add
cmp
mov
imul
stos
and
pop
enter
add
xchg
push
jmp
inc
lcall
adc
fucom
add
fsin
ja
cmc
push
sub
or
cs
mov
mov
mov
rcr
hlt
nop
or
sbb
test
pop
and
fldt
sti
mov
pop
pop
outsl
sub
bound
mov
jmp
testb
scas
xchg
jo
add
jecxz
push
lods
mov
decl
sbbb
fnclex
out
cmpsb
mov
xor
es
fcmovbe
pusha
inc
js
pop
fcmovnbe
add
cwtl
mov
cmp
movsb
xchg
mov
add
sbb
pop
daa
mov
dec
loopne
pop
jo
addl
adc
jmp
mov
ljmp
push
ret
xchg
push
xor
mov
rorb
cmp
adc
jmp
fsubr
popf
andl
pop
aam
pushf
push
testb
or
aas
nop
xchg
and
sahf
jmp
xorl
mov
dec
pop
stos
sub
std
mov
inc
clc
jge
mov
ret
notl
out
and
pop
mov
pop
jg
movsl
jbe
mov
addr16
popa
maskmovq
inc
scas
movsl
push
cs
ja
jae
cs
mov
jecxz
xchg
xor
xor
mov
movsl
dec
sub
in
fisubrs
mov
mov
fldl
jge
push
stos
rorb
add
pop
mull
adc
pop
andl
jne
mov
inc
loop
pushf
clc
cs
pusha
sub
inc
pop
mov
adc
test
xlat
xor
inc
or
or
and
stos
nop
cmpsl
out
loop
push
add
xor
stc
mov
addr16
in
or
sbb
mov
dec
push
lret
jbe
push
sbb
popa
jne
mov
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
dec
mov
sahf
xchg
adc
pop
adc
adc
adc
sub
movsb
or
and
jp
or
pusha
sub
inc
sub
mov
enter
adc
mov
push
fists
lret
repnz
es
bound
inc
pusha
sbb
mov
push
add
dec
mov
dec
jg
cmp
pop
lcall
jo
ret
loope
xchg
xchg
push
aam
lahf
cmp
xorb
and
test
sub
xchg
test
mov
mov
jle
js
cmp
mov
rorl
aad
sbb
mov
jno
fstpt
jb
xchg
das
jb
adc
mulb
add
cs
adc
fs
push
dec
cmp
fidivl
rorb
test
call
testl
mov
pop
arpl
ret
mov
scas
fadd
pop
and
dec
push
pop
pop
xor
dec
rorb
outsb
addr16
fcompl
repz
loope
outsb
mov
in
fidivl
insl
pop
data16
jl
sub
jno
cli
mov
xchg
cmp
mov
leave
push
scas
lock
add
loop
insl
inc
push
icebp
popa
push
sbb
ja
scas
mov
icebp
out
hlt
push
data16
push
notl
push
xor
sbb
jns
into
notb
push
lret
aam
jl
sub
add
sub
sbb
or
dec
jnp
bound
xchg
adc
mov
loop,pn
repz
jge
loop
xlat
das
out
addr16
jp
cs
data16
pop
jl
test
push
dec
xchg
arpl
or
repnz
ficoml
inc
push
add
test
add
jle
sub
xchg
mov
sub
lcall
mov
xor
lret
pop
jb
sbb
push
jg
mov
scas
aam
mov
mov
add
cmp
pop
xchg
jle
enter
jo
gs
notb
dec
and
clc
add
fsubrl
fwait
jo
pop
addl
mov
pop
push
loop
scas
aaa
mov
mov
ja
in
xchg
clc
shlb
cmp
and
shrb
or
pop
ja
jmp
js
and
sbb
icebp
call
sbb
mov
mov
sub
mov
ss
hlt
test
or
and
cmp
and
mov
xchg
inc
test
adc
mov
jecxz
or
out
xorb
bnd
or
or
imul
push
aad
cmp
jb
mov
jp
inc
jns
out
mov
cmc
arpl
or
pop
shlb
scas
push
mov
sti
idiv
inc
int
sbb
jne
push
loope
into
scas
jno,pt
cmpsl
adcl
ja
sbb
stos
js
xor
add
lcall
sbb
dec
cmp
or
popf
cmc
testb
add
ds
subb
sbb
lret
cmp
stc
lret
subps
out
stc
xchg
roll
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
sub
pop
adc
adc
dec
sub
cmpsl
push
pop
orb
adc
sub
in
les
xchg
jl
xor
adcb
sarb
xchg
mov
jne
out
sahf
sbb
jo
pushf
jcxz
cld
adc
pop
mov
in
ret
dec
mov
cmp
push
cwtl
pop
cwtl
addl
or
adc
lea
sbb
inc
jmp
or
sbb
add
lea
xor
sub
inc
and
or
mov
int
push
movsb
ja
xlat
xchg
dec
cld
push
xchg
ret
and
mov
stos
mov
out
fistl
push
mov
xor
les
or
insl
mov
push
pop
shlb
mov
lea
divl
scas
clc
ja
out
add
sbb
cmp
popa
imul
and
cmp
jmp
shll
mov
lds
jmp
mov
pop
jne
or
push
out
add
aam
adc
lds
pushf
sub
mov
or
ss
mov
cmp
push
pop
daa
pusha
pop
mov
mov
cli
inc
and
cmp
dec
jg
aaa
cmpsb
sti
inc
and
pop
mov
in
mov
mov
fcmovu
xor
fdivrp
loope
nop
pop
xchg
jmp
sahf
sar
mov
frstor
shlb
test
xchg
add
aad
dec
fldt
call
pop
jno
mov
xlat
pop
fsubr
fwait
and
jae
fwait
and
jne
ja
mov
mov
xchg
loop
mov
push
mov
mulb
inc
push
jp
jp
mov
or
adc
mov
outsl
jg
enter
dec
and
xor
xor
jg
addl
fwait
mov
xchg
mov
sbb
jb
dec
lods
test
mov
shlb
into
data16
lcall
xchg
in
aam
inc
outsl
mov
fs
mov
push
loope
adc
mov
imul
dec
out
pushf
dec
push
insb
nop
outsl
cltd
aaa
iret
xchg
loopne
fidivl
outsl
mov
jge
push
enter
cmp
notb
jmp
push
mov
aam
jl
cs
stos
addl
push
jo
scas
inc
test
cmp
dec
movsl
dec
adc
mov
pop
adc
ret
cmp
cmp
adc
cltd
adcb
mov
cwtl
inc
test
cmpb
push
pop
dec
push
xor
mov
mull
gs
popa
or
adc
arpl
pop
jmp
shrb
sbb
js
pusha
push
pop
je
sahf
shll
enter
into
mov
data16
push
xor
nop
pop
dec
adc
cmpsb
and
sbb
fildl
jns
mov
mulb
adcl
bound
mov
cmp
add
shlb
push
cmp
dec
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
ljmp
sub
adc
adc
cmpsl
enter
and
mov
push
inc
addr16
lods
jne
and
enter
inc
ffree
sub
bnd
lock
sub
xchg
or
aam
and
call
jmp
addr16
iret
repz
jns
pop
dec
sti
iret
loop
gs
clc
cvttps2pi
push
pusha
mov
jmp
xor
xchg
xchg
leave
ret
jge
in
mov
sarb
push
lods
pop
aaa
outsl
aad
aaa
mov
jecxz
js
sbb
js
aam
xchg
push
aaa
mov
cmpsb
pop
push
cmp
cmp
jnp
mov
fidivl
jecxz
mov
and
negb
pop
jge
adc
insl
pusha
cmp
pop
mov
frstor
into
pop
lods
ret
or
std
ret
jae
scas
xchg
mov
xorl
jae
push
out
push
or
push
popa
xchg
repz
jbe
js
rcr
mov
xchg
pop
ffreep
icebp
mov
mov
xor
leave
gs
clc
icebp
rcr
in
cwtl
outsb
das
std
mov
popf
xchg
sahf
mov
sbb
sub
mov
and
sbb
dec
xor
add
pop
mov
cld
dec
aad
jo
xchg
add
mov
or
adc
popf
pop
xchg
dec
or
mov
sub
sahf
imul
inc
lcall
pop
and
shrb
and
jne
hlt
in
hlt
and
pop
or
push
faddp
repz
roll
pop
dec
fcmovbe
adc
jno
jmp
mov
jbe
mov
dec
test
mov
cltd
jecxz
jnp
jl
sti
cmp
pop
jle
xchg
call
outsb
test
testl
arpl
jge
dec
inc
mov
pop
imul
adcb
jnp
xchg
dec
cmp
dec
nop
and
adc
sti
stc
jp
frstor
lcall
jo
mov
ss
scas
outsb
sub
cmc
fisubs
cmpsl
xchg
cmc
sbb
add
notb
fld
cli
push
jl
test
add
inc
mov
je
sub
into
inc
js
jl
fs
cmp
loope
mov
imul
push
jae
xchg
cmp
cmpb
add
pop
lret
xchg
mov
scas
lods
ljmp
mov
in
sub
inc
movsl
mov
addb
jmp
adc
push
ljmp
inc
dec
aaa
popl
mov
lds
jnp
pop
lods
jmp
jmp
jmp
push
and
das
ja
negl
dec
ss
jl
push
movsb
or
stos
or
sub
mov
mov
jg
pop
imul
lahf
jg
mov
ja
cmovae
xchg
xor
in
inc
lods
add
shrl
or
jno
fs
insb
cmp
xchg
out
fnsave
int
std
adc
xchg
sbbb
mov
pusha
sahf
fmuls
fnstenv
add
mov
and
add
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
mov
pop
adc
adc
mov
mov
daa
sarl
push
mov
xchg
rcrl
cmp
lret
adc
stc
jecxz
insb
stos
dec
clc
cmp
push
pop
lds
cmp
xor
scas
fwait
push
inc
xchg
sub
outsl
lahf
and
jmp
iret
repnz
xor
xchg
adc
xor
es
daa
icebp
repnz
lcall
cmp
mov
jbe
jecxz
jp
into
dec
cs
add
pushf
cmc
and
scas
inc
inc
mov
ss
aad
movups
loop
jo
loop
ret
fwait
stc
popa
into
insb
dec
lret
adc
adc
jle
enter
cwtl
cmc
push
pop
push
clc
inc
popa
dec
lcall
jb
push
jge
mov
xchg
mov
xchg
inc
sub
loopne
mov
push
mov
out
ds
inc
xor
xor
mov
push
mov
cmpb
jnp
aas
cmp
js
cld
repz
fbstp
push
jmp
fists
xor
cmp
pop
daa
pop
or
adc
push
cmp
or
inc
jns
lds
mov
push
mov
shlb
fdivrl
outsl
pop
adcl
stc
ljmp
arpl
mov
and
inc
insb
xor
stos
mov
xchg
aam
fcomps
xor
add
jle
or
and
scas
in
xchg
scas
rolb
sti
test
mov
movsl
loop
lret
xchg
pushf
or
xor
cmc
cmc
jmp
leave
cwtl
add
fmuls
push
outsb
js
inc
test
fsts
xchg
movb
bound
adc
in
mov
sti
enter
rcrb
lret
jg
insl
push
add
inc
mov
lods
test
dec
mov
and
pop
mov
push
call
pop
jp
pop
or
outsl
jns
orl
cs
and
sub
lcall
mov
cmp
pop
dec
mov
int3
insl
pusha
mov
out
outsl
imul
loopne
popf
test
push
mov
lret
push
cmp
int
ds
fsubr
pop
test
sub
add
cld
add
idiv
daa
cmpsb
lahf
pop
push
or
xchg
inc
lret
adc
je
lds
xchg
mov
xor
mov
mov
inc
xchg
aam
into
sahf
enter
int3
sub
insb
cmc
out
sub
mov
loopne
movsb
jecxz
test
imul
addr16
mov
mov
fstps
sbb
cs
mov
mov
lret
xor
orl
mov
mov
pop
jbe
movsb
sahf
ja
cltd
rcrl
out
aam
jg
ficoms
dec
sbb
gs
lcall
hlt
loop
mov
scas
jno
mov
scas
inc
clc
repz
fdivr
fwait
mov
add
popf
jo
dec
aas
adc
icebp
lods
inc
mov
adc
fwait
add
mov
sub
insb
orb
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
lods
insb
mov
adc
adc
dec
xor
arpl
jl
mov
fidivrs
cli
in
xchg
pop
scas
stc
jno
cmp
cmp
mov
cmp
test
and
fxtract
bound
cmpsb
xor
and
cld
or
xchg
sub
push
fldl
fldcw
int
fmuls
popa
inc
lret
fmul
cs
pop
push
inc
lret
movsl
mov
jle
add
push
test
or
mov
xchg
pop
mov
test
push
ret
xchg
out
aam
lahf
add
jns
enter
addr16
nop
push
or
loopne
push
mov
add
pop
data16
clc
stc
xlat
std
sbb
ljmp
pop
movups
gs
pushf
cli
cmp
aaa
ja
jae
pop
sbb
negl
bound
mov
hlt
imul
adc
ljmp
mov
data16
add
dec
std
push
movsb
xor
fs
and
push
lods
or
in
jnp
insl
add
pop
mov
jae
push
pop
add
jno
pop
mov
ret
movsl
cmp
xchg
cmpsb
cli
dec
push
xchg
iret
sbb
dec
mov
mov
inc
insl
push
pop
inc
pushf
push
inc
fidivl
mov
clc
jmp
xchg
das
sbb
add
ret
popf
push
xchg
outsl
lea
jbe
rorl
ss
xor
lcall
rorb
pushf
insb
inc
std
push
cltd
dec
push
adcb
rcrl
cli
cmp
imul
loope
ljmp
mov
fisubs
dec
popa
sbb
sub
std
xchg
sbb
xor
push
jo
fsubp
xor
repz
pop
ds
repz
xor
sub
cmpsb
xchg
or
cwtl
dec
xor
lods
add
sar
push
jecxz
lret
imul
inc
lret
push
lds
test
adc
and
jno
xchg
das
push
aad
inc
add
shl
mov
xchg
xor
aaa
sub
pop
jo
sub
xchg
dec
adcl
filds
in
int
dec
pop
ret
pop
jae
icebp
ret
out
icebp
and
push
mov
sbb
clts
out
cmp
loopne
sbb
adc
mov
js
int3
xor
dec
sbb
push
or
sub
adc
cld
nop
or
and
leave
adc
adc
lret
mov
jno
lcall
fadd
mov
ret
mov
insl
sbb
dec
pop
xor
stc
sub
mov
testl
inc
scas
daa
lret
jne
cmpsb
fxch
aad
cmp
adc
in
fcmovnb
jnp
inc
adc
xchg
mov
stc
repz
in
ret
pop
enter
lock
xorb
jno
mov
test
ljmp
jg
jae
into
les
out
test
std
stos
push
loop
mov
loopne
aam
jb
add
popa
loopne
inc
fdivl
ror
shr
or
cs
movsb
xchg
add
dec
jmp
aaa
jae
out
out
xchg
sub
dec
std
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
stos
movsl
outsb
insb
add
adc
adc
shrl
sbb
inc
and
add
xchg
xor
sbbb
scas
ja
xor
hlt
mov
add
mov
fists
inc
or
push
clc
js
jo
mov
mov
popa
and
jno
sub
sub
xor
ret
push
icebp
out
cmpsl
notb
sub
imul
dec
push
jnp
lds
imul
in
cmp
cwtl
inc
out
mov
mov
mov
leave
dec
shll
mov
push
movsb
insl
pop
fistps
add
sub
daa
mov
sub
mov
or
lds
in
dec
loope
test
xlat
std
jns
gs
pop
in
jg
adc
inc
lods
rorb
fs
xchg
adc
shr
pop
leave
cmpsl
cmp
pop
cmp
cs
scas
xchg
sbb
loop
aaa
pop
lods
loop
popf
mov
pop
ficompl
jb
fwait
sbb
jb
inc
mov
shll
in
insl
mov
sbb
iret
jl
xchg
cmc
sub
scas
fstp
pusha
or
stos
dec
fdivl
sahf
pop
je
icebp
cli
xor
dec
and
repnz
or
lret
adc
sahf
fwait
jne
mov
in
clc
jne
sbb
adc
jl
jae
fsubrs
sbb
mov
dec
cwtl
adc
lods
inc
das
mov
popf
out
in
test
sbb
lcall
js
aaa
lods
les
mov
sbb
cmp
pop
pop
cmp
sbb
bound
add
add
mov
dec
fsub
fimull
push
adc
fucomi
dec
mov
push
mov
mov
clc
dec
icebp
fildll
dec
out
leave
pushf
mov
jae
sbb
in
add
cmpl
mov
and
das
or
test
push
lods
add
in
push
or
fdivrl
dec
cmp
pop
cmp
mov
aam
mov
sti
cmp
mov
adc
mov
bnd
adc
dec
sub
in
add
mov
or
shlb
arpl
cmp
add
out
daa
mov
xchg
rorl
push
cmp
adc
pop
sbb
sub
dec
jecxz
mov
icebp
inc
ds
mov
or
inc
push
jle,pt
sarl
in
adc
jno
xchg
push
adc
mul
mov
test
xchg
push
shl
push
lahf
mov
cmp
ret
adc
mov
xchg
lods
push
push
adc
repnz
scas
xor
cmp
fcmovu
pushf
in
and
push
je
push
pop
das
fidivrl
push
dec
cmpsl
adc
dec
jo
xor
push
dec
out
push
stos
sbb
sub
dec
lock
jb
ficompl
sbb
jae
push
adc
mov
add
jle
nop
mov
ljmp
inc
inc
pop
cmp
mov
mov
aam
cli
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
jge
mov
dec
pushf
mov
cmp
popa
pushf
push
arpl
lcall
adc
fstps
clc
xor
stos
in
scas
adc
das
jne
pusha
push
fst
ja
iret
mov
cmp
jns
stos
inc
stc
xchg
xor
in
mov
outsb
push
push
scas
push
and
out
dec
mov
aad
lret
push
test
jno
dec
cmpsl
dec
call
rclb
mov
test
imul
mov
cmp
int
enter
int
out
andb
and
mov
mov
xchg
arpl
cmp
dec
hlt
mov
dec
or
hlt
sbb
lock
loope
into
add
mov
and
test
out
pop
jo
push
xchg
mov
movsb
jo
mov
sti
mov
inc
jl
add
fmuls
sub
inc
jle
fldl
mov
jns
fldenv
mov
mov
inc
pop
push
push
add
repz
aad
cmp
xchg
std
subb
cmp
jae
sub
outsl
pop
pop
test
icebp
mov
inc
push
mov
mov
data16
sub
dec
push
js
xor
jae
sbb
sbb
ds
in
call
jno
pop
cmpsl
orb
aas
iret
hlt
lock
adc
std
mov
mov
leave
mov
or
jge
jmp
or
push
pop
popa
jbe
mov
imul
lret
mov
push
frstor
sub
into
insl
fidivs
xchg
cwtl
mov
mov
leave
bound
dec
movsb
cmp
or
push
mov
cs
fmuls
cmp
dec
mulb
lods
jns
lock
int
pop
or
push
cli
es
mov
out
dec
sbb
mov
and
pop
repz
mov
pop
mov
xor
and
leave
les
aad
popf
enter
xchg
xor
mov
out
sbb
sbb
imul
sahf
push
imul
dec
stc
jp
les
or
pop
movsb
mov
fnstsw
repnz
and
jge
ror
loop
dec
mov
jl
shl
push
lods
xchg
jp
cmp
pop
ficoms
jmp
pop
dec
sahf
sete
mov
cs
xchg
xchg
in
dec
push
mull
int3
lods
dec
inc
pop
xor
loopne
sub
aad
test
in
fnstenv
push
jae
rcrb
mov
out
lret
jns
arpl
int3
mov
push
cmp
pop
in
mov
mov
dec
push
andl
loop
push
fcmovu
and
pop
inc
lods
or
scas
dec
push
cmpl
int
mov
jg
aaa
ret
xor
insl
or
insb
sbb
push
das
daa
mov
lcall
sub
loope
adc
cmp
mov
jmp
cmp
sarb
sbb
push
roll
cmp
xchg
push
dec
sbb
and
and
xor
dec
mov
adc
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
mov
js
arpl
adc
adc
sub
pop
xchg
inc
dec
dec
test
push
xor
push
aam
or
inc
in
pop
adc
mov
inc
xchg
add
xchg
fwait
xchg
lahf
xlat
or
jbe
aaa
adc
and
add
xchg
xlat
adc
sub
add
mov
adc
inc
adc
sub
mov
rcl
inc
mov
loop
push
sub
mov
inc
popf
fwait
dec
jo
lret
sub
xor
jle
push
rcr
lcall
insb
mov
les
enter
call
adc
pop
push
out
rcrl
add
out
test
mov
mov
mov
cmc
inc
sti
xor
cli
push
mov
shlb
push
aas
ljmp
cwtl
mov
jge
xchg
aas
add
cld
sbb
lret
adc
push
jp
cmp
ret
nop
out
sub
xchg
shlb
or
les
mov
dec
cmpsl
inc
popf
pop
add
dec
sbb
lods
sub
divl
lret
loope
xor
jo
add
lea
ret
test
in
sub
inc
cmp
sub
fidivs
and
dec
ljmp
pop
sbb
fisubl
addr16
mov
addl
fwait
sub
orl
sub
xlat
pop
sahf
push
mov
popf
cmp
adc
clc
sub
mov
aad
push
popa
cwtl
movsb
iret
fsincos
pop
push
lcall
popa
sarl
fs
mov
insl
inc
mov
xchg
leave
cmp
movsb
cmp
std
pushf
scas
xchg
mov
std
mov
push
pop
pop
pop
stos
je
insb
lds
fs
sbb
and
in
xchg
fisubl
jnp
adc
shrl
movsb
or
leave
stos
adc
imul
cltd
inc
sbb
add
cmp
mov
popf
cmc
cli
cmp
adc
and
out
imul
xchg
pop
xor
add
mov
dec
cmp
sub
mov
inc
sub
fxrstor
gs
rcrl
out
xor
mov
int3
lea
pop
hlt
inc
sarb
jo
dec
inc
mov
push
add
cmpl
cltd
xor
or
insb
mov
add
and
call
mov
sbb
mov
dec
mov
dec
iret
adc
xor
das
sbb
ja
fisubrs
sbb
pop
ds
scas
jns
sahf
mov
dec
imul
sahf
dec
or
ja
lret
or
jge
pop
mov
movsb
push
andl
and
lock
test
cmp
mov
sti
lds
sub
lods
stc
out
pushf
popa
add
lahf
adc
and
aaa
arpl
push
jnp
stos
fnstenv
pusha
stos
jp
fadd
cmp
pop
scas
ljmp
orb
xor
push
xchg
cmp
add
xchg
mov
mov
xor
xchg
cltd
into
sbb
pop
adc
daa
xor
add
call
scas
jae
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
leave
lret
sahf
lods
ficomps
adc
adc
sti
adc
bound
inc
jne
sub
jns
mov
mov
push
sbb
cmc
aad
and
xchg
stos
divl
stos
mov
out
mov
hlt
mov
push
xlat
rdpmc
add
add
out
xchg
aam
push
sbb
fxch
pop
cmp
cld
pop
sub
in
js
mov
sbb
jo
test
jno
fwait
lret
push
xchg
int
je
ss
stos
adc
mov
addr16
mov
ror
jl
daa
xchg
cmpsl
pop
fs
das
loopne
or
cs
jmp
aam
cmpsb
mov
ds
push
sub
popf
mov
nop
sbb
fadd
out
mov
ret
in
and
ja
dec
lods
arpl
pop
adc
mov
inc
adc
or
xor
or
xchg
push
inc
sub
and
mov
mov
mov
lods
xchg
pushf
sti
mov
jge
mov
fistl
fdivs
sbb
adc
xor
push
insb
push
cmp
sarb
out
dec
in
into
xor
mov
nop
mov
dec
loopne
jl
out
dec
divl
fninit
cmp
mov
and
or
pop
add
xor
insl
and
xor
dec
mov
lcall
inc
add
sahf
enter
leave
mov
test
adc
mov
xor
cmp
mov
inc
out
idivl
cmp
cmp
dec
mov
jno
je
mov
shl
dec
movsl
fidivl
adc
cs
push
jns
js
pop
sbb
in
ror
or
aaa
mov
mov
scas
hlt
add
push
daa
add
inc
ret
add
jge
je
and
add
cld
or
popl
lds
or
inc
fdecstp
push
cmpsl
aaa
cltd
roll
jp
jo
mov
test
arpl
fcompl
call
ljmp
scas
data16
sub
lret
orb
sub
mov
jno
sahf
pop
sbb
push
xchg
push
pop
fidivs
and
std
mov
pop
mov
xchg
ja
aad
push
or
cwtl
adc
xchg
adc
cmp
aam
xor
dec
mov
jne
xor
cmp
lds
mov
repnz
pop
lds
insb
xchg
sbb
sub
push
sbbl
add
sbb
gs
cltd
popf
xchg
pop
or
xchg
inc
jbe,pt
mov
sbb
dec
bound
xchg
push
push
stc
push
shl
cmc
dec
adc
imul
addr16
inc
adc
into
in
lcall
sarl
and
shll
xorb
hlt
jg
sub
push
xorl
xlat
outsb
mov
fwait
xor
mov
test
scas
sbb
mov
or
mov
adc
push
mov
push
push
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
cltd
inc
call
adc
adc
mov
je
xor
rcrb
lods
adc
xchg
push
ss
je
and
mov
js
xchg
adc
adc
lret
test
xchg
jns
xchg
push
mov
std
pop
xchg
sub
pop
addr16
inc
xchg
es
xchg
pop
fstps
mov
test
inc
idivb
sbb
pop
loopne
mov
mov
push
mov
inc
dec
push
js
fs
cld
push
inc
popf
dec
jne
testb
stc
movsb
lea
and
and
inc
pop
push
pop
and
test
xchg
push
sub
mov
sbb
out
jno,pn
movsl
push
mov
rcl
ret
push
sbb
push
mov
data16
xorl
mov
sub
pop
lock
inc
loopne
xchg
mov
inc
and
out
bound
cmp
add
dec
test
mov
push
add
push
call
dec
aad
adc
adc
movsb
jmp
in
ja
inc
inc
sbb
dec
xor
or
pop
mov
repz
stos
sub
cmc
icebp
cmp
jo
or
adc
sarb
mov
cmp
shll
inc
cmp
and
test
loope
mov
sub
xor
aas
lcall
stos
int3
aaa
stos
cmp
sbb
arpl
mov
mov
cmp
and
and
fstpl
enter
arpl
push
outsl
push
gs
xchg
inc
dec
dec
sub
loop
addb
mov
adc
jmp
test
bound
sbb
mov
test
cmp
xor
and
mov
icebp
inc
pop
icebp
out
mov
inc
dec
mov
mov
jne
fistps
xorb
push
push
xchg
push
aam
iret
and
inc
stc
notl
hlt
sub
loope
hlt
xchg
or
add
clc
cmpsb
cmp
cmpsb
or
fbld
sbb
mov
clc
mov
stos
pusha
sbb
xchg
icebp
and
int3
bound
sub
inc
push
ret
addr16
sub
xchg
int
cmp
jnp
nop
mov
aad
in
inc
jp
aam
fldt
xlat
xchg
lret
push
test
div
and
jb
and
xor
cs
mov
out
in
enter
xchg
cltd
push
cmpb
inc
add
subl
sarl
mov
ret
xchg
call
pop
lea
mov
push
dec
xor
arpl
inc
in
arpl
push
xor
sub
dec
mov
popf
sbb
pop
imul
pop
sbb
dec
bnd
fnstcw
sbb
mov
mov
add
jge
jo
mov
sbb
pop
pop
push
mov
push
cmpl
loop
iret
adc
sbb
inc
out
imul
fidivl
sub
mov
ret
push
jg
cld
mov
popa
add
mov
jmp
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
stos
insb
insl
dec
adc
pop
adc
adc
sub
xor
cmp
dec
popa
in
outsb
fcoms
sub
jge
jge
xor
dec
mov
xchg
shll
in
shll
push
fwait
jmp
push
adc
std
test
int
aas
cld
jno
or
mov
out
mov
les
fldl
lds
imul
mov
sti
clc
push
adc
cmc
fsubrl
jns
int
xchg
lret
mov
mov
mov
mov
popf
inc
pop
hlt
mov
mov
cwtl
adc
pop
or
dec
out
mov
pusha
push
movsl
xlat
mov
icebp
fsubr
mov
rclb
repnz
push
xchg
iret
es
dec
int3
test
outsb
stos
mov
inc
loop
pusha
push
sub
mov
sub
jle
shlb
imul
pushf
pushf
and
addr16
xchg
cmpsb
lods
movb
in
mov
mov
pop
icebp
outsl
adc
in
inc
es
sub
rcrb
or
pusha
test
test
sbb
mov
nop
in
add
sub
mov
xorb
cmp
push
mov
mov
test
mov
in
loope
mov
sub
xchg
mov
xchg
or
ret
or
inc
ds
pop
fcmove
insl
push
pop
pop
insb
add
dec
imul
mov
push
mov
xchg
lret
es
loopne
ret
fwait
add
ds
mov
dec
xchg
inc
popf
jge
loop
xchg
divb
push
mov
jb
test
gs
ret
pop
and
test
jns
add
test
shrb
sbb
popa
push
sbb
ret
daa
call
mov
mov
jae
roll
and
sbb
ret
push
inc
jae
xchg
add
pusha
cmp
mov
jne
bound
clc
aas
sbb
mov
shl
stc
cld
rcll
inc
insb
fisubrl
mov
mov
xor
ja
enter
jbe
lods
or
inc
and
test
fcomip
addl
adc
arpl
push
mov
inc
cltd
sub
mov
pushf
ss
adc
loop
test
sbb
in
and
cmp
out
sub
mov
in
int3
int3
dec
dec
jno
dec
mov
xchg
xor
incl
inc
pop
add
pop
pushf
js
repnz
sbb
mov
xchg
popf
mov
xor
jo
fidivl
pop
daa
in
sub
fs
inc
out
nop
lret
push
insb
loopne
rclb
nop
or
out
into
and
shrb
push
and
sbb
cmp
pop
mov
in
sub
xchg
cmp
xchg
dec
inc
and
loop
mov
sahf
pop
cwtl
hlt
mov
gs
push
pop
call
lock
push
pop
movb
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
jo
mov
adc
pop
adc
adc
mov
int3
push
mov
rorb
in
pop
xchg
loope
add
stos
ret
xchg
fwait
jne
gs
ds
icebp
and
das
jo
jmp
xor
pop
pop
lret
in
inc
movsb
out
cmp
pop
mov
xchg
test
sarb
xor
outsl
out
sub
jnp
insl
add
xlat
mul
pop
mov
cltd
and
push
push
push
jge
and
lock
sub
adc
xor
out
adc
out
pop
bound
repz
push
test
jp
arpl
push
add
in
dec
push
jnp
test
xor
mov
outsb
fsts
push
mov
cmpsl
subb
loopne
lods
test
fdivp
push
cmp
xchg
imull
xchg
pop
addr16
xor
hlt
jbe
xor
pop
sbb
jl
and
scas
popl
jb
scas
shll
jmp
imulb
out
in
lret
mov
scas
daa
pop
dec
nop
xchg
sbb
sub
aam
mov
xchg
add
hlt
ljmp
inc
ds
enter
and
pop
push
xor
shll
enter
stc
jge
inc
or
xor
fnstcw
mov
std
ljmp
dec
sub
inc
movsb
sub
cld
inc
jnp
push
das
in
lret
lods
enter
mov
aas
mov
ficomps
mov
and
das
hlt
and
into
dec
sti
mov
sbb
jle
xchg
lea
aad
jp
sahf
sub
xchg
xor
push
pop
mov
dec
sub
mov
fsubr
cmc
adc
sbb
fucomi
cmp
mov
jl
sbb
lret
inc
lock
data16
mov
fsubrl
lods
or
cmp
xchg
int3
shrb
pop
outsb
adc
sbb
ret
pop
std
cmp
mov
push
push
cwtl
mov
pop
gs
dec
inc
xchg
test
cmp
xchg
ror
pop
popa
or
or
repz
fsubrs
xchg
add
mov
cmp
dec
sbb
xchg
xchg
mov
pushf
out
dec
mov
int3
jecxz
and
gs
cwtl
xchg
xchg
das
cmp
into
pop
aam
xor
enter
xchg
add
lea
push
shr
and
mov
es
fcomip
outsl
add
cmp
test
nop
fnstsw
lds
bound
in
iret
inc
popf
dec
jp
enter
cmp
mov
cmp
repz
jg
jns
mov
adcb
or
push
jno
jne
call
in
mov
shll
bound
jp
add
ret
adc
inc
ftst
cmp
cmpsb
xor
lock
sbb
stc
cmp
pusha
mov
lahf
mov
cwtl
mov
lcall
jae
mov
push
push
fadds
xchg
fcom
loop
scas
addr16
outsl
ss
stos
std
or
aas
mov
mov
rorb
leave
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
aaa
inc
bound
inc
adc
pop
adc
adc
cmpsb
loope
out
leave
pop
push
shrl
fistpll
lret
sub
xchg
sub
jnp
loop
jmp
test
je
cmp
sahf
cmpsb
out
test
std
pusha
lahf
xchg
inc
ss
jge
push
add
and
cmp
dec
xorl
fcompl
std
aam
xchg
dec
mov
mov
mov
jbe
mov
or
in
mov
inc
test
dec
sub
or
arpl
orb
push
mov
cmpsb
mov
bound
in
xchg
sub
pusha
adc
ret
or
mov
pop
xchg
sahf
sbb
or
rorl
loop
dec
cmpl
outsb
or
jg
mov
mov
pop
ja
flds
mov
pop
mov
fildll
pushf
mov
out
inc
neg
sub
stos
movsb
sbb
and
inc
rcrl
inc
scas
cmp
scas
cs
push
jg
mov
cmpsl
out
dec
fcmovnbe
sbb
jnp
mov
repz
iret
dec
xchg
cmp
mov
movsl
je
dec
jb
fistpll
out
or
jle
mov
mov
aaa
mov
outsl
cmp
add
sub
mov
adc
adc
jg
xchg
fcompl
mov
or
mov
push
in
rcrl
sbb
sub
aad
bound
fadds
xorb
mov
mov
shlb
inc
pop
ja
dec
test
fs
sub
bound
dec
dec
in
cmpsl
cld
mov
into
inc
mov
leave
cmp
fs
sbb
sbb
sbb
inc
sub
test
roll
fs
shlb
sarb
or
cmp
outsl
ja
xchg
xchg
xchg
repz
decl
fadds
push
sub
mov
mov
loop
sbb
stos
xor
sub
cmp
pop
or
ds
pop
fucomip
orb
push
xor
cli
push
orl
xchg
sbb
dec
mov
inc
adc
inc
rorl
pop
stos
pop
inc
cli
aad
arpl
inc
xchg
mov
mov
aad
pop
jns
aam
push
xchg
and
adc
fmuls
idivb
pushl
dec
fucom
cwtl
cmp
sbb
xchg
adc
jnp
sub
hlt
repz
fs
rolb
jle
jbe
mov
test
je
pop
mov
pop
stc
pushfw
lahf
and
andb
adc
mov
rol
inc
cmp
push
stos
xchg
mov
fmull
jnp
aas
push
lds
push
ret
jg
dec
cmpsb
dec
enter
addl
pop
int
in
mov
dec
adc
ljmp
xchg
int3
fcoml
in
and
push
fsubrl
jno
les
in
push
divb
les
sbb
adc
popf
and
push
add
js
mov
les
add
mov
push
lret
iret
adc
leave
cli
dec
sub
loopne
dec
xchg
mov
aaa
pusha
pop
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
pop
dec
push
cmp
cmc
out
mov
clc
dec
mov
dec
xchg
cwtl
xchg
hlt
push
and
out
inc
andb
idivb
addr16
cmp
cli
pop
add
jb
add
mov
pop
mov
or
push
xchg
sub
mov
xor
or
outsb
fimull
sub
mov
push
negb
sbb
rclb
lret
xchg
lods
lods
cmp
xchg
mov
cmp
rolb
lea
imul
aad
or
lea
shrl
dec
or
in
imul
push
xchg
xor
jl
jbe
loopne
push
dec
jg
scas
iret
aas
push
sbb
testl
ret
inc
mov
push
mov
mov
orl
ljmp
nop
add
inc
dec
outsl
xchg
daa
enter
adc
sti
or
mov
cmp
fiadds
push
test
int3
and
push
jl
xchg
stos
pop
add
and
or
gs
cmp
inc
mov
sbb
inc
daa
mov
lcall
mov
cld
test
cmpl
push
data16
outsb
xchg
sub
movsl
addb
lret
jbe
xchg
jo
pop
xchg
test
aas
adc
cmp
out
das
or
in
jno
inc
jle
repz
dec
dec
rcll
push
add
cltd
lahf
pop
sub
mov
mov
fisubs
and
mov
fistpl
lret
sbb
mov
adc
jge
into
test
cs
or
dec
data16
jmp
sbb
cmp
push
daa
mov
sub
pop
outsl
pop
clc
mov
sub
adc
jb
adc
jg
jbe
adc
cmp
fiaddl
jge
cltd
mov
sar
or
jnp
add
idiv
pop
and
test
or
fsts
or
xor
incb
popa
int3
dec
sbb
xchg
lock
in
fisubrl
shr
es
push
xor
js
jmp
push
sub
mov
xchg
mov
mov
xchg
xchg
je
loop
fisubs
jge
dec
xor
jnp
daa
inc
push
jmp
sbbl
ret
lds
push
xor
mov
xorb
xlat
push
testb
cmp
nop
sbb
xor
popf
jge
popaw
shlb
xorb
pusha
pop
dec
daa
jne
inc
xor
mov
pusha
mov
imul
rolb
inc
lods
lock
dec
out
imul
and
inc
sub
enter
mov
adc
movsl
and
ljmp
daa
movsb
xor
add
leave
jno
std
push
cs
movsl
sub
jo
iret
cmp
sbb
sub
push
dec
mov
shlb
fcmovb
es
cmp
jae
addr16
inc
loopne
aaa
push
push
and
add
fs
ret
sar
out
cmp
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
or
push
js
pop
add
cwtl
xor
cmp
in
xor
fldenv
or
xlat
roll
cwtl
push
nop
xchg
iret
fbld
xchg
cli
dec
loop
add
sbb
pop
ror
imul
pop
call
lock
stc
xchg
fdivl
outsl
jae
inc
popa
jl
mov
adcb
mov
mov
xchg
imul
subl
add
pop
and
cmp
aaa
std
inc
repnz
pop
leave
lret
adc
cmp
adc
sub
sbb
xchg
in
mov
push
mov
repz
es
shlb
xchg
je
adc
push
cli
mov
push
mov
pop
mull
sbb
mov
cld
scas
test
leave
jb
scas
movl
in
loopne
adc
mov
mov
dec
loope
fistps
xchg
mulb
outsb
xor
add
lea
loope
ret
push
cli
adc
adc
lret
inc
orl
or
sbb
pop
cmp
out
or
xor
std
fiaddl
repz
adc
cmpsb
inc
jnp
xor
mov
and
cltd
imul
mov
xchg
xchg
cltd
js
jle
add
subb
ja
in
push
test
daa
in
int3
mov
shrl
int
xchg
mov
adc
inc
popf
ja
dec
xchg
push
xor
push
dec
cld
pop
outsl
in
mov
sub
fwait
sub
sbb
mov
push
addr16
and
cmp
ja
js
mov
pop
xchg
pop
jns
call
idivl
addr16
add
fistpl
outsl
mov
cmpsb
int
jns
pop
pop
dec
mov
cld
iret
xchg
shrb
popf
pop
sti
lret
mov
leave
sbb
and
xchg
pushf
gs
jmp
and
lret
push
sbb
cli
dec
mov
mov
cwtl
pop
sbb
push
jp
push
dec
hlt
ss
ret
mov
pop
notl
jl
adc
testl
pop
mov
icebp
js
cmp
dec
cmp
jo
sub
sahf
imul
jmp
dec
fcomps
jp
pusha
push
cmpsl
push
cmp
sbb
outsl
xchg
push
mov
out
sbb
das
gs
xorl
jb
addl
ds
test
out
outsb
arpl
idivb
nop
into
test
popl
mov
adc
xchg
sub
pop
lret
jge
push
repz
imul
or
sub
xchg
loope
and
pop
sbb
dec
xor
xchg
rorl
hlt
or
mov
stc
bound
addl
push
sbb
xor
sti
inc
dec
xchg
fnstsw
nop
mov
aaa
add
push
push
cmpsb
in
or
pop
ss
and
inc
ds
pop
popf
fnstcw
pop
or
dec
addr16
shlb
aas
repnz
lret
lret
aad
hlt
mov
pop
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
out
lods
sarb
xor
adc
adc
and
jmp
in
mov
popa
sub
nop
mov
movsb
mov
push
andl
in
cmp
cmpsl
inc
test
adc
aam
cmp
or
xor
push
rorb
gs
and
and
pop
fidivrl
enter
mov
mov
inc
push
mov
aas
jl
mov
divl
lcall
mov
adc
cmpsb
pop
sbb
outsb
outsb
add
scas
or
stos
and
adc
inc
fldl
iret
notl
arpl
out
hlt
inc
and
sub
testl
stos
cvtdq2ps
push
stos
jcxz
lods
add
cwtl
orl
sbb
and
enter
ds
fstps
js
dec
or
ret
mov
mov
rorb
icebp
mov
movsl
ret
movsl
aam
adc
xor
fmulp
arpl
xorl
gs
dec
pop
push
mov
jg
inc
jno
push
pop
cmp
ficomps
add
add
in
inc
sahf
ss
cmp
out
push
or
cmp
mov
mov
or
test
repz
xchg
jb
or
pop
add
test
push
iret
jnp
xor
mov
mov
mov
jl
mov
cmc
jmp
aaa
push
shl
inc
lret
lret
js
jns
lods
push
aaa
inc
mov
test
cwtl
lods
pop
lods
test
push
out
cltd
or
jb
cld
mov
add
or
sti
pop
addr16
out
pop
std
mov
mov
pop
jne
es
dec
cmp
xlat
imul
fcomip
sbb
jbe
movsl
cmp
and
adc
sub
ret
mov
jno
xchg
adc
lcall
push
fcmovnbe
or
int
pop
stc
cmp
pop
dec
enter
fimuls
add
std
pop
dec
xchg
cld
jmp
and
pusha
loop
add
iret
cltd
mov
and
lods
mov
out
sub
jb
sbb
cmc
adc
arpl
cmp
push
sbb
fstps
dec
mov
outsb
inc
lcall
sbb
jae
mov
jmp
xor
pop
mov
pop
dec
xchg
lds
sar
jno
mov
mov
add
cmp
mov
sbb
push
pop
and
ss
mov
fucomi
push
fldl
jnp
fbld
and
or
loope
xor
mov
push
push
pop
test
jecxz
sub
shl
icebp
fldl
fistps
mov
push
add
or
mov
test
mov
popa
mov
negl
add
cwtl
adc
mov
dec
mov
das
mull
inc
mov
nop
or
fistpl
lahf
dec
rclb
xchg
push
jne
add
and
push
mov
sbb
jo
sarb
add
fistpll
jg
mov
lock
and
sub
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
xchg
cmpsl
in
jle
daa
adc
int3
movlps
stc
add
das
mov
rorl
hlt
or
cmpsl
sbb
mov
jle
imulb
movsl
sub
inc
cmp
daa
add
dec
mov
jge
outsb
and
fstpt
dec
jns
add
add
xor
mov
mov
xchg
jl
repz
and
mov
push
jge
pop
pop
dec
je
pushf
jge
fistpll
in
sahf
mov
setle
das
daa
mov
insl
push
xlat
xchg
rclb
stc
jge
lds
mov
xchg
int
fnsave
dec
push
pop
leave
add
rclb
sbb
jmp
mov
fldln2
popf
cmp
jl
pmulhuw
std
inc
xchg
outsl
mov
lret
cmp
jl
ss
pop
out
jle
mov
ret
jo
xor
mov
add
ljmp
pop
cld
adc
imul
add
addr16
scas
fidivl
push
push
and
sub
jo
xchg
mov
or
mov
xor
pop
mov
adc
push
js
push
pop
test
aaa
enter
out
or
shl
loop
das
adc
shrb
mov
jbe
movsl
inc
add
xchg
mov
push
and
and
jg
xor
adcl
xchg
lcall
outsl
inc
lock
jno
ret
in
ret
mov
nop
out
flds
aas
pop
std
mov
dec
movsl
sbb
dec
loop
iret
mov
cld
lock
xorl
ljmp
pop
mov
jnp
imul
cmp
mov
lods
mov
inc
lcall
sbb
sub
clc
sbb
lret
push
and
aad
jecxz
ljmp
jge
mov
xlat
repnz
movsb
aaa
jmp
fwait
xchg
dec
fwait
std
mov
adcl
push
xor
adc
jmp
jb
dec
adc
jb
sub
js
and
adc
xchg
or
loope
xchg
leave
shrb
jno
lds
sbb
outsb
pop
cmpsl
sub
mov
ficoml
adc
stos
add
sbb
mov
lock
daa
mov
sbb
jecxz
cmp
adc
xlat
mov
fmul
inc
rcr
jecxz
push
mov
std
and
loope
mov
out
jl
pop
jne
sbb
inc
push
mov
in
pushf
xchg
lods
mov
pop
xor
push
mov
stos
negb
ret
loop
mov
add
ret
jmp
xchg
or
push
and
and
add
roll
cli
mov
add
nop
negl
sub
jp
mov
mov
ds
xor
ljmp
mov
pop
xchg
daa
imul
cwtl
insl
pop
adc
lret
add
bnd
pop
inc
push
loope
icebp
xchg
les
aad
jnp
sar
fistpll
pop
mov
push
repz
cmovnp
mov
jmp
js
scas
inc
mov
out
mov
lds
pop
bound
jb
mov
jecxz
fisubrl
fildl
dec
rcrb
ret
fsubr
lea
stos
icebp
iret
das
jg
sbb
ja
fs
push
inc
lods
adc
mov
sbb
and
sub
rcll
jecxz
popf
add
jnp
mov
aas
pusha
and
aaa
add
inc
and
subl
cmpb
movsb
loop
inc
adc
mov
out
movl
in
imul
mov
push
jecxz
push
fs
ret
loope
jns
and
rorb
or
cmc
inc
push
js
mov
inc
insb
movsl
push
pushf
test
outsb
int
leave
dec
cmp
jge
int
ficoml
lcall
rcrl
lock
inc
jb
dec
mov
lcall
jno
pop
test
push
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
mov
mov
adc
movlps
cli
mov
inc
push
inc
mov
loope
lret
pop
sub
hlt
js
and
push
jl
or
xor
jo
xchg
or
imul
inc
lcall
or
xchg
jns
lea
mov
rcll
cltd
test
fimuls
adc
xchg
cwtl
and
push
push
rolb
adc
cmc
pop
insb
lea
js
das
ja
sbb
jg
cld
cmp
pop
push
scas
inc
test
mov
rcrl
add
int
aam
sub
mov
ficompl
icebp
push
ret
add
xorb
mull
push
mov
push
aad
fcomi
fwait
insb
jle
je
mov
sbb
divl
mov
rcrl
shr
inc
sub
clc
push
xchg
pusha
in
add
cmc
stos
adc
cli
mull
std
out
dec
push
in
and
mov
cltd
fsubr
mov
inc
clc
test
jb
aam
sbb
sti
push
popf
test
test
cs
fisttpll
pop
pushl
filds
jg
bndldx
pushf
or
xor
dec
ret
mov
insl
sub
cs
loopne
iret
xor
popa
fcompl
inc
dec
and
mov
push
xchg
inc
mov
outsb
lret
pop
loopne
lock
test
in
xchg
lock
jno
dec
or
imul
ficoms
mov
or
dec
mov
bound
dec
inc
add
dec
jge
inc
push
gs
lock
push
add
or
jle
push
push
push
or
stos
aam
in
inc
lods
shll
cmc
add
iret
inc
pushf
mov
fidivrl
mov
out
xchg
inc
jp
dec
inc
push
adc
insb
mov
mov
push
mov
xchg
jle
cwtl
and
push
gs
add
mov
push
mov
pop
fstl
sbb
xor
loope
lea
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
sbb
push
sub
daa
outsb
inc
repz
and
cmpsl
icebp
push
outsb
jno
sbb
ret
movsl
pop
push
add
aaa
jb
adc
add
fstl
inc
cltd
popl
cmc
mov
xor
ds
push
repnz
xor
cmpsl
iret
aad
scas
int3
dec
ret
aaa
sub
jae
inc
xorb
mov
dec
mov
arpl
or
sbb
pop
rcl
test
std
mov
lods
pop
cmpsl
cmp
shll
push
in
lea
inc
mov
jg
push
dec
or
xorb
push
add
cmpl
es
cmpsb
aam
mov
lds
and
inc
repnz
stc
popf
mov
add
das
idivl
cmc
mov
mov
and
sub
ja
or
out
mov
jl
mov
xchg
rolb
adc
sub
cmpsb
test
ret
lcall
scas
mov
mov
sbbl
lods
mov
add
pop
jmp
lods
in
mov
xchg
fbld
mov
or
popa
out
inc
cmp
sbb
dec
fisubl
xchg
add
js
lahf
push
cmc
out
ficomps
cmp
mov
adc
or
pop
pop
aam
in
lret
cmp
push
jno
loopne
push
popf
lods
xchg
ljmp
add
dec
xor
test
mov
cs
xchg
fstpt
jno
std
xlat
test
cmp
orb
sahf
fwait
das
std
shll
lods
outsb
xor
lds
int3
jg
jns
or
inc
ljmp
xchg
mov
jne
jge
dec
std
popa
out
mov
push
and
push
cmp
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
cmp
sbb
adc
movlps
xor
inc
lret
test
popa
xor
ds
lea
rcrb
xchg
jg
adc
add
imul
sub
arpl
inc
negl
dec
mov
cmpl
mov
add
imul
and
test
rclb
mov
push
or
xchg
and
sahf
push
mov
add
xchg
mov
mov
inc
out
mov
push
cmp
xchg
mov
cmp
lods
or
mov
roll
popa
or
xor
push
cmpb
jns
adc
and
cld
jnp
push
pop
arpl
cmc
jl
inc
clc
jne
scas
lods
gs
jo
leave
lock
sub
cmp
cmp
or
outsl
mov
test
loope
push
cmp
xor
cmpl
jmp
notb
sbb
lahf
sbb
or
int3
pop
cwtl
xchg
mov
sbb
mov
outsb
and
pop
jmp
cmp
adc
fyl2x
inc
lock
cld
das
std
fwait
push
inc
sbb
push
cs
roll
mov
adc
insl
call
jl
jp
mov
adc
cmp
pop
inc
cmp
push
adc
pop
dec
data16
and
lahf
fisttpll
push
lcall
lds
xor
cli
shlb
add
testl
lods
dec
pop
jo
push
clc
movsb
int
dec
mov
loope
xor
ja
add
adc
pop
movsb
inc
shrl
sub
dec
imul
call
xchg
lahf
mov
jo
insb
inc
xchg
shl
shr
and
pop
shl
add
or
call
rclb
popa
lock
into
sti
push
xchg
pop
sbb
cmpsb
cmp
push
mov
cld
and
movl
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
cmp
adc
adc
mov
dec
sti
xor
insl
movb
movsb
mov
xchg
xor
aas
orl
jmp
shrl
iret
xchg
push
movsb
xchg
dec
inc
push
lods
xchg
cmp
rcrb
inc
out
jns
mov
das
stos
aas
popa
add
pop
sub
mov
cmp
jno
out
cwtl
lret
fsubl
mov
test
ret
outsl
aas
pop
xor
fsubl
xor
out
mov
inc
fnstenv
jecxz
mov
mov
es
out
xor
xchg
lret
leave
cmc
movsb
mov
mov
rolb
dec
inc
pop
mov
sub
dec
ja
int3
pop
jg
xchg
testl
mov
push
hlt
dec
cmp
aaa
add
add
leave
stos
data16
stc
xor
rorb
test
xor
dec
cmc
mov
pop
push
mov
inc
jno
cmp
movsb
aas
add
imul
sarl
cltd
jae
inc
and
sbb
mov
jae
in
pop
xchg
jo
xchg
jp
out
push
cmovg
fistpl
or
les
imul
in
push
scas
insb
pushf
add
gs
push
mov
sub
loope
inc
pop
fidivs
orb
pop
pop
or
imul
lcall
mov
pop
loope
push
jl
pop
adc
xor
testb
mov
cs
xchg
xor
xchg
pop
movsb
stc
xor
dec
push
iret
push
test
mov
push
add
out
jne
inc
dec
popa
test
xor
stos
lret
pop
lock
xchg
pop
dec
jmp
incb
mov
lock
push
inc
dec
lcall
addb
inc
dec
xchg
aas
push
mov
inc
ret
jns
or
loop
inc
loope
inc
fsubrl
dec
scas
xor
bnd
pop
idivb
int
repnz
into
pop
sbb
push
push
jns
dec
loope
xchg
cltd
hlt
arpl
pop
pop
sar
inc
lret
mov
addl
or
add
mov
sbbl
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
add
sti
jle
adc
adc
out
shl
pop
lret
into
inc
adc
js
jle
scas
sbb
push
lret
xchg
inc
dec
sub
js
add
fwait
ss
add
xor
push
or
jge
pushf
loop
xor
mov
ss
aas
dec
stos
sbb
inc
loop
dec
pop
pop
mov
inc
pop
stos
mov
xchg
hlt
nop
mov
clc
push
sahf
lock
xlat
data16
fwait
mov
sbb
xchg
and
outsl
aaa
push
xlat
in
jo
jp
and
cmpsb
push
xor
inc
push
shlb
adc
xlat
inc
inc
mov
mov
mov
inc
addb
out
push
adc
aas
pop
mov
pop
fldt
xchg
mov
mov
lods
xchg
jg
add
les
addr16
mov
push
ja
cmp
movsl
xchg
pop
sub
or
xchg
imul
inc
leave
cltd
mov
pop
sub
lock
hlt
cmp
outsl
mov
adc
in
dec
mov
adc
mov
les
jp
rdmsr
push
mov
dec
es
xchg
lret
pop
xor
push
dec
ret
pushf
stc
push
mov
je
repz
fdivrl
outsl
nop
fsubl
inc
sub
sti
loope
pusha
in
shll
dec
outsl
xor
mov
and
push
jo
push
movsl
aam
mov
sub
jne
jns
pushf
cmp
test
fnsave
out
scas
arpl
xorb
adc
push
mov
xor
cld
inc
insl
stos
dec
fcomps
popf
mov
push
mov
mov
sub
inc
or
add
mov
and
sti
notb
inc
and
pop
ret
add
xchg
inc
shlb
lods
jb
orl
xor
cs
ficoms
pop
cmpsb
and
aad
adc
lods
popf
dec
lock
ljmp
lock
fs
nop
mov
xor
and
pushf
aas
push
sub
out
loop
sub
in
mov
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
pushf
lods
and
movlps
lahf
movsl
or
jnp
xchg
ljmp
pusha
fwait
addr16
rcrb
jle
iret
out
fcoml
insl
inc
repz
inc
sub
sbb
stos
lcall
addr16
fwait
mov
adc
mov
push
pop
mov
jle
adc
jl
push
push
out
cmc
lock
movsb
cs
xchg
jbe
iret
scas
push
movsb
add
push
icebp
cmpsl
fmuls
int3
stos
xor
cs
adc
push
iret
leave
lock
fwait
call
ffree
je
push
dec
into
and
ljmp
jl
shll
or
loope
sub
xor
dec
adc
cmc
addb
cld
bound
faddp
xchg
ficomps
fisttpll
mov
xchg
insb
pop
cmp
xchg
xor
lret
test
inc
cmp
aam
push
sbb
sbb
lods
cmp
pop
test
dec
jnp
cmc
cmpsl
inc
or
shll
loopne
scas
lcall
sbb
dec
push
xor
cwtl
adc
lods
push
leave
xchg
daa
rclb
je
fwait
mov
xorl
xor
sbb
jmp
test
dec
sub
hlt
mov
int3
jp
lods
mov
test
pop
inc
fcoml
jge
sub
nop
lods
add
out
icebp
outsl
aas
dec
in
imulb
or
xchg
or
pop
cmp
icebp
or
and
jne
ficompl
add
ljmp
pop
and
les
push
xchg
inc
mov
dec
jle
out
pop
sti
push
lea
test
or
cmp
pop
pop
mov
in
stos
push
pop
add
leave
nop
je
inc
outsb
inc
and
stc
aas
popf
add
movsl
adc
jge
add
shll
cmp
add
ss
jbe
bound
mov
xor
jne
ret
dec
int
xor
push
outsl
xor
icebp
andb
ds
pop
and
inc
frstor
or
imul
es
cmp
xchg
and
cmp
push
leave
div
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
sbb
stos
fiadds
adc
adc
pop
sbb
or
cmp
jg
jno
movsb
push
mov
push
and
dec
cmp
mov
adc
sbb
dec
xchg
sub
mov
stc
push
add
fldcw
loop
push
jl
fistpll
sbb
add
decb
int3
fsubrs
cmp
dec
lret
mov
out
adc
and
push
mov
mov
call
or
add
sbb
aaa
xor
out
arpl
mov
lret
cmp
xlat
flds
aas
or
out
scas
loopne
xchg
sbb
cmp
movsb
pop
int3
scas
lods
repnz
out
outsl
mov
aam
ret
jo
into
sub
movsb
xorb
dec
fldenv
clc
cmc
movsb
fdivs
jne
movsl
pushf
or
xchg
sbb
mov
push
fwait
jno
or
jno
xor
jo
xor
fcompl
mov
mov
inc
xor
leave
xchg
inc
call
cli
arpl
add
lea
les
ljmp
pop
and
xor
jae
mov
xchg
rcrb
adc
loope
in
sahf
or
push
xchg
subb
sahf
cltd
cmp
xchg
lret
fsubrl
lods
fidivrl
adc
adc
loopne
cli
sbb
mov
mov
mov
jl
jne
sub
adc
push
repz
mov
ds
roll
xor
into
mov
std
data16
dec
int3
add
push
xchg
fdiv
jb
test
cmp
ret
repnz
sti
mov
xchg
fisubrs
cwtl
and
out
sub
test
arpl
inc
in
sub
inc
inc
jo
sbb
lret
mov
mov
ds
mov
in
out
es
jg
aad
aad
cmp
pop
jecxz
and
xor
dec
xchg
xor
outsb
iret
stos
cli
xor
mov
mov
mov
push
jle
mov
add
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
test
gs
inc
add
loop
jl
xchg
or
xchg
fidivl
add
pop
xor
jge
iret
add
std
outsb
mov
jae
sarb
dec
lret
or
mov
in
mov
jecxz
adc
jmp
aam
add
rolb
mov
add
aaa
mov
insb
aaa
movsl
loop
iret
pushw
lret
sub
outsl
xchg
mov
scas
mov
pop
pusha
adc
nop
inc
enter
outsl
jp
push
nop
xor
cs
call
adc
fmul
test
pop
cmp
inc
outsl
arpl
insb
cwtl
fsts
xor
daa
or
or
inc
mov
rol
jmp
aam
mov
inc
push
cmpsb
repnz
test
addr16
scas
aad
xchg
push
rclb
push
test
loopne
lret
pushf
or
stc
xor
cmp
imul
test
icebp
or
ret
inc
or
andl
ret
fisttpll
push
or
and
cmp
jecxz
mov
and
sahf
xchg
jge
mov
jae
out
xchg
lret
sbb
in
inc
add
int
out
jmp
jmp
call
cmpsl
iret
pusha
xchg
jecxz
push
mov
les
fnstenv
ds
push
fsubl
into
lea
jl
lods
cmp
xchg
adc
push
jmp
sub
cmpsb
sbb
push
pushf
ret
sti
sub
stos
dec
mov
cmp
sahf
inc
push
fcmovu
shlb
lds
lds
lret
push
add
xchg
add
add
cmp
pushf
sbb
push
call
cli
pop
xor
roll
or
cld
sub
rorb
fdivrl
mov
daa
outsl
in
inc
cli
mov
mov
or
les
xchg
fnstenv
mov
out
clc
mov
xchg
movsb
aad
mov
mov
popa
sub
outsb
insb
xor
xor
mov
xorl
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
sub
int3
lods
dec
sti
adc
adc
dec
xor
lods
cld
inc
pop
fnstenv
in
mov
cltd
xchg
les
sbb
cltd
lods
ds
lea
pop
je
mov
xchg
test
push
add
cli
neg
mov
test
out
imul
jg
xor
or
sub
xor
pop
jg
push
mov
stc
gs
in
sti
lea
adc
in
jg
xor
mov
push
push
and
mov
leave
fistl
stos
or
xchg
pop
mov
mov
jno
xor
adc
mov
ss
out
inc
pop
push
inc
mov
fdiv
add
shr
adc
es
add
jns
movsb
ret
lods
and
push
push
cmp
hlt
imul
cmp
pop
cs
add
xchg
nop
add
test
sub
pop
out
es
mov
rcrl
jmp
push
and
icebp
out
and
shl
pop
out
and
call
cmp
loop
ss
inc
push
or
xchg
cld
out
xor
pop
pop
cltd
cld
adc
and
sub
aam
xchg
xchg
mov
sbb
jp
jg
outsb
or
jmp
xchg
out
mov
iret
fidivrl
mov
pushf
adc
das
jp
fdivrl
lea
out
test
inc
rorb
es
lds
ss
lods
lret
dec
push
cmova
mov
push
jl
cltd
add
test
std
jl
xor
ss
sub
xchg
mov
or
imul
enter
cmpsl
mov
pop
imul
stos
rcrb
movsb
dec
lods
repz
push
and
mov
mov
out
add
sub
inc
not
movsl
adc
add
mov
out
mov
push
mov
fwait
jmp
ss
pop
fisttpll
decl
ret
add
add
add
js
mov
jle
notl
adc
push
jp
sahf
push
mov
jg
fwait
ljmp
inc
adc
shlb
mov
xorl
in
cmp
push
icebp
sub
aad
insl
jbe
xor
divb
dec
loopne
lret
repnz
in
in
fimull
lahf
je
xchg
sarb
xor
inc
adc
in
pop
call
sub
mov
div
fwait
or
notl
xlat
mov
xchg
or
and
mov
pop
out
mov
mov
out
fimull
adc
lods
and
mov
shr
pop
sbb
dec
mov
add
inc
push
cmc
push
jp
dec
xchg
das
sbb
lds
scas
call
push
jb
mov
jne
icebp
loop
add
into
ret
hlt
xor
popa
lock
pop
push
ljmp
popf
push
sbb
mov
dec
mov
mov
mov
into
movsl
mov
xlat
cmp
dec
add
mov
or
pop
pop
mov
or
icebp
insb
js
je
pop
inc
pop
push
jmp
inc
les
mov
sub
mov
mov
imul
cltd
jecxz
or
aaa
jp
or
mov
repz
inc
xlat
cmp
out
add
jmp
sahf
jns
adc
mov
cs
daa
inc
mov
fwait
stos
push
mov
sub
mulb
sub
mov
fsubrp
das
cmp
lcall
adc
mov
add
jp
sub
mov
push
lea
movsl
popf
adc
inc
aad
pop
jbe
sbb
cwtl
adc
jb
mov
xchg
mov
jnp
inc
mov
sar
pop
sub
cmp
mov
xor
xor
pushl
or
xor
inc
inc
mov
lea
push
sbb
shrb
mov
cmp
sub
ret
mov
stos
fisubrl
divb
es
inc
push
dec
lea
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
xor
sbb
movsl
or
in
or
pop
xor
mov
nop
arpl
scas
sbb
rorl
int3
cs
jnp
divb
repz
and
pop
push
rorb
outsl
jecxz
sbb
xchg
pop
out
idivl
mov
sub
xor
aam
lret
push
fwait
adc
mov
inc
sahf
rorb
jnp
sarl
mov
mov
mov
notl
cmp
xor
std
cmpsb
push
jg
mov
adc
imul
out
aas
xchg
std
adc
mov
dec
or
je
dec
add
pusha
cmpsb
lods
mov
jnp
data16
xchg
jo
imul
inc
div
cltd
and
mov
aaa
incb
pop
clc
push
pop
aas
or
lods
or
push
pop
iret
xchg
dec
push
nop
cmp
ficomps
sar
sub
push
push
popf
jo
push
ret
mul
cmpb
dec
jb
iret
cltd
mov
mov
ret
cmp
lock
insl
lds
pusha
stc
out
jg
and
test
inc
idivl
or
fisttpl
mov
sbb
mov
ret
adc
mov
imul
jo
mov
xor
jecxz
fsubrl
mov
sub
ljmp
adc
jbe
jae
xchg
pop
out
test
outsb
sub
mov
sub
add
sub
mov
aaa
imul
jp
xor
xlat
jae
iret
fiaddl
push
repnz
sbb
pop
push
mov
mov
or
rorb
mov
mov
xlat
mov
push
fwait
sub
pop
push
lcall
sar
xor
xchg
or
popa
nop
dec
dec
in
aad
sti
loope
enter
int
sahf
lcall
inc
add
add
pop
sbb
sbb
ss
cmp
js
ficomps
adc
movlps
addb
lea
in
push
add
repz
xchg
nop
je
pop
aad
fcmovnu
sub
arpl
push
xor
mov
mov
call
test
ljmp
gs
inc
jmp
jae
in
js
loopne
push
into
insb
pop
sub
xor
popf
pop
cmc
aad
lcall
adc
jbe
dec
push
mov
or
push
mov
data16
insl
inc
xchg
xor
iret
mov
sbb
push
outsb
jae
fidivrl
out
shlb
bound
add
insl
and
enter
pop
pushf
popf
pop
lea
jl
je
pcmpgtw
pop
je
push
xor
adc
mov
mov
sar
jg
gs
sti
in
mov
ja
mov
cmc
adc
inc
dec
loope
or
stos
out
ret
add
mov
mov
xchg
push
in
mov
or
jno
and
fcmovb
outsl
movsl
mov
and
jp
inc
cltd
push
les
popa
push
dec
pop
dec
adc
test
sbb
adc
imul
mov
cmp
mov
in
mov
or
push
outsb
or
inc
pop
push
pop
ret
out
mov
pop
neg
xchg
dec
xlat
jae
imul
xchg
mov
mov
and
mov
imul
mov
iret
mov
add
sub
xlat
outsl
les
pop
mov
sbb
mulb
test
or
fucomp
test
arpl
mov
or
mov
aad
popf
adc
pushf
mov
sahf
dec
rcr
xchg
movsl
adc
mov
stos
scas
xchg
push
inc
dec
jae
lret
jg
stos
jle
data16
xor
out
lea
mov
and
cmpsb
insb
sbb
sub
cmp
xor
mov
jmp
out
es
ja
imul
push
xchg
jmp
lods
cwtl
push
lea
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
dec
lods
xchg
out
pop
and
ret
pop
insb
inc
dec
ss
testl
das
jae
clc
aas
mov
sbb
jge
push
sahf
lods
popf
xor
fstl
push
pop
and
ja
addr16
lret
mov
jge
dec
test
push
cmpsl
fmuls
ja
xchg
mov
iret
aaa
add
imul
bound
dec
cli
mov
mov
mov
mov
arpl
es
or
sub
ja
pop
jl
add
jg
loopne
jns
push
sub
pop
mov
cmpsb
mulb
shlb
in
add
movsb
scas
rcrb
xchg
cmp
xchg
lock
jno
push
dec
jp
lahf
test
mov
pop
aaa
rcrb
leave
hlt
mov
cwtl
in
stos
aaa
sbb
and
sbbl
push
lret
fs
addr16
repnz
decl
cmp
lcall
sbbl
je
cmp
fsubs
mov
mov
mov
wrmsr
rcll
ss
add
jae
cmp
decb
mov
nop
push
data16
mov
loope
push
mov
adc
fstsw
push
add
mov
push
mov
ljmp
repnz
jmp
mov
out
movsbl
push
and
xchg
mov
xor
mov
imul
scas
add
cltd
jnp
fsubs
inc
nop
xlat
mov
fs
xchg
out
out
push
and
xchg
sub
sbb
movsb
cwtl
insb
icebp
jbe
mov
sahf
ret
push
mov
dec
sub
shl
aas
and
push
xchg
xor
out
cmpsb
lret
cli
and
add
sub
xchg
shr
cmpb
insl
cmc
insl
hlt
mov
outsl
push
mov
test
pop
and
mov
mov
std
decl
jmp
xor
fisttpll
and
rcrb
lods
out
adc
adc
dec
dec
xor
lods
out
dec
jns
and
inc
mov
mov
lods
push
sahf
aad
ss
shrl
sbb
inc
jae
xchg
stc
stc
push
es
ds
inc
ret
es
pop
jno
mov
adc
aas
cmpsl
cli
xchg
add
pop
sub
or
xor
sarb
lods
xchg
dec
fsubrl
fmull
test
aad
sbb
or
pop
lock
addl
lret
rclb
cmc
xchg
mov
xor
repnz
jnp
in
lock
push
clc
or
repz
lods
pop
cmpsl
imul
dec
sbb
pop
or
das
add
cmp
mov
shrb
inc
fwait
imul
mov
mov
sbbl
push
mov
pop
jge
inc
cli
and
jp
mov
stos
les
daa
inc
mov
das
aas
aaa
test
xchg
add
cmpsb
sub
jmp
inc
stos
xor
lods
fnsave
xchg
xchg
test
sub
xchg
enter
lds
daa
mov
out
add
in
enter
pop
fwait
adc
jb
ds
dec
sahf
sbb
mov
or
sub
insl
arpl
pop
xor
sahf
push
pop
in
in
push
jl
pop
adc
loop
movsb
mov
xlat
cmp
js
test
int
adc
in
mov
nop
data16
xor
iret
jp
imul
pop
repnz
repnz
cmp
test
dec
sbbb
in
push
cmpb
push
xchg
ret
pop
lods
inc
clc
xchg
test
or
je
daa
push
push
and
loop
into
ljmp
test
cmpsl
ret
jle
enter
outsl
lock
xchg
push
mov
ljmp
popa
pop
outsb
sbb
xchg
push
outsl
int
cmpl
stos
sub
adc
xorl
in
mov
movsl
imul
or
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
inc
add
xor
mov
jo
dec
icebp
lods
sbbl
movsl
stos
mov
shl
lods
into
imul
mov
cld
adc
insl
std
test
and
jp
xlat
sbb
xor
adc
sbb
aas
fdivrl
xor
jbe
rorb
and
insb
pop
call
mov
mov
stos
aam
push
jmp
dec
cmc
or
std
or
push
js
push
and
mov
daa
dec
scas
shlb
imul
lods
jg
push
insb
lahf
add
ds
sub
xor
dec
pop
inc
adc
movsb
inc
clc
dec
inc
mov
jo,pt
mov
movsl
xchg
sbb
mov
pop
cmc
outsl
xor
stos
stos
imul
cmpsb
dec
test
popa
mov
ss
xchg
pop
sub
mov
inc
scas
sub
out
jae
int3
sbb
in
lds
and
mov
push
adc
adc
lods
movl
add
in
dec
xchg
mov
icebp
jno
shlb
cmpsb
or
pop
pop
mov
jbe
addr16
cmp
gs
add
pushf
icebp
push
pop
bound
ljmp
mov
inc
push
movsb
fisubrl
into
and
sbb
pop
mov
add
movsl
sbb
pop
jmp
jecxz
and
popf
js
or
or
mov
imul
inc
pop
or
mov
adc
loope
stc
dec
daa
repz
pushf
push
mov
or
xor
push
fimuls
lcall
in
xchg
pop
push
dec
pop
ss
adc
pushf
xor
clc
push
add
mov
inc
push
testl
das
movsb
fldenv
add
xor
outsl
inc
int3
xchg
jno
mov
imull
push
pop
fdivp
test
adc
or
icebp
js
lock
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
sub
cmpb
movlps
nop
rcrl
jne
enter
jmp
mov
ja
mov
icebp
mov
nop
jne
dec
jmp
je
push
scas
xor
inc
pop
out
push
mov
mov
arpl
mov
inc
push
jb
xlat
es
lcall
scas
cltd
pop
scas
subb
aas
out
enter
inc
aad
add
push
push
inc
dec
sbb
out
aaa
pop
adc
push
lret
in
mov
icebp
cmpl
pop
inc
inc
adc
fdivr
add
ljmp
xchg
add
jnp
pop
push
cmpl
xchg
sbb
in
jb
mov
mov
or
nop
mov
mov
adcl
sub
aam
adc
loope
or
popa
adc
jge
xor
pop
add
ja
rcrb
adc
out
fistpl
mov
add
loopne
sub
ret
cmp
int
xor
stos
mov
in
push
leave
lds
arpl
xchg
shlb
cmp
fldenv
inc
and
dec
loope
cmp
lahf
sbb
cmp
std
iret
jnp
sahf
and
fdivrl
arpl
sub
inc
add
mov
xor
inc
pusha
cmpsl
dec
mov
mov
cli
dec
dec
inc
mov
xchg
lcall
imul
add
shrl
lock
dec
add
xor
push
push
ja
daa
fsub
and
and
aam
cs
xchg
insb
ljmp
rcr
out
push
jo
adcb
in
mov
icebp
push
loop
loope
bsr
imul
mov
jge
test
push
pop
mov
inc
mov
roll
lret
imul
pusha
sbb
dec
dec
insb
sbb
mov
mov
jge
sti
into
xor
repz
sub
and
push
jne
test
push
mov
adc
mov
inc
mov
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
mov
adc
adc
and
nop
mov
out
shrb
xlat
sti
scas
adc
mov
insb
ret
ret
test
xchg
jnp
xor
push
into
fdivrs
and
xchg
sahf
fwait
mov
mov
inc
aas
xchg
and
fimull
jb
outsl
push
mov
jge
xchg
push
cmp
cmc
jo
call
pop
mov
data16
and
outsl
arpl
pop
insl
fdivrs
and
in
subb
fsubl
xchg
mov
or
pop
stos
pop
int3
shll
sbb
dec
mov
and
pop
mov
into
jae
js
addr16
jecxz
mov
xchg
push
mov
add
rcrb
je
push
xchg
inc
mov
mov
cmp
cmp
xorl
cs
cli
dec
je
xor
dec
stos
adc
mov
adc
mov
adc
cmp
mov
pop
and
mov
xor
rep
loopne
nop
mov
sub
jb
stos
mov
mov
xlat
jmp
adc
xchg
je
mov
aas
and
and
outsb
cmp
cmp
push
mov
lds
mov
dec
jne
aam
mov
insb
sti
pop
cwtl
imul
repnz
clc
outsb
movsb
mov
pop
push
call
dec
lcall
arpl
jg
daa
test
mov
jne
pop
sub
push
sbb
orb
adc
xor
std
aas
sbb
push
mov
or
cmp
sbb
xor
xor
cs
outsb
incl
orl
mov
imul
bound
fildll
add
sahf
repz
rclb
push
xor
and
and
jl
mov
sbb
pop
iret
clc
sbb
jecxz
add
mov
mov
jb
adc
rclb
jmp
test
fwait
jmp
out
mov
fucomi
mov
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
rolb
mov
int3
movlps
das
out
aaa
ljmp
inc
xchg
insb
iret
jbe
ds
ss
scas
test
fsubrs
leave
mov
mov
ret
add
push
mov
cmp
movsl
or
insb
test
jne
or
loope
fidivrl
cmp
fisttps
mov
fiadds
pop
loopne
mov
add
push
and
out
xor
orb
jge
pop
out
inc
mov
aaa
and
add
xor
shlb
sub
pop
out
bound
mov
out
mov
fmull
pop
dec
lret
lret
mov
mov
mov
xchg
pop
add
mov
incl
jb
leave
fs
sbb
lea
aad
rcl
scas
sbb
inc
repnz
fmuls
jmp
and
adc
pushf
xchg
test
or
jecxz
mov
cmp
cmp
mov
int3
mov
cmpsb
leave
mov
inc
mov
arpl
mov
pusha
mov
aad
xchg
xchg
test
adc
daa
imul
outsl
pop
cmp
punpcklbw
sbb
aad
into
jp
aaa
std
fstpl
popf
push
mov
inc
stc
xor
pop
push
push
push
jno
lods
sbb
jecxz
loopne
or
mov
shll
int3
test
jl
push
test
shll
cld
pop
jb
fdiv
and
sbb
pop
or
adc
mov
sub
add
mov
movsb
mov
mov
fcoml
sbb
loopne
sti
fstpt
scas
lds
shrb
std
adc
dec
jg
hlt
in
adc
jne
movl
fwait
push
pop
jle
xchg
xchg
and
and
shlb
lods
sub
inc
scas
subl
hlt
push
push
testl
pushf
dec
into
je
cwtl
rcr
jmp
testb
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
and
lods
jge
adc
adc
xor
mov
jmp
fcoms
jge
out
add
xor
or
cmp
mov
xor
in
inc
test
xor
sti
inc
push
ja
push
in
xchg
or
fildll
shrl
cmc
sbb
int
fldl
cmp
mov
jns
lods
fnstsw
popf
xchg
adc
movsb
sbb
sahf
mov
leave
dec
jle
aam
sbb
in
cli
push
test
xor
xchg
aam
inc
je
mov
and
in
jmp
dec
xor
insb
movsb
roll
jnp
int
xchg
dec
dec
or
dec
repz
lds
fisttpll
sub
pop
test
clc
lret
popl
lods
xchg
xlat
cmpsb
add
pextrw
jns
lcall
pop
adc
pop
push
xchg
xor
mov
add
ret
call
stos
pop
shlb
xchg
jp
jnp
and
and
adc
xor
lret
lods
cwtl
subl
aas
xchg
int
daa
pop
gs
out
pop
cs
dec
or
mov
cmpsl
adc
insl
insb
inc
jae
rorl
dec
fildl
std
imul
xor
sub
addr16
dec
movsl
push
pop
in
pop
fwait
stos
adc
lret
aad
ss
push
xchg
fcompl
das
js
push
in
xor
stos
cmc
cmp
pop
cmp
icebp
pop
bound
dec
movsl
cmpsl
jbe
movsl
shrb
cmp
lcall
pop
push
dec
cmpsb
idiv
loope
ficoml
jae
inc
push
out
mov
push
ljmp
add
xchg
and
or
push
movsl
in
dec
jbe
mov
xchg
push
out
sbb
test
xchg
push
arpl
iret
lock
sarb
out
adc
loope
jnp
scas
pop
mov
pop
inc
mov
jmp
mov
mov
mov
and
icebp
pop
ret
xchg
add
popl
jge
add
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
xor
mov
adc
movlps
pop
outsb
loop
dec
adc
push
mov
fists
in
in
adc
ret
mov
sti
jmp
fmull
xor
sbb
xchg
mov
add
test
loopne
adc
shlb
repz
inc
ficoml
or
push
sti
ds
and
jnp
inc
test
inc
scas
aas
dec
sbb
in
mov
mov
int
test
xor
out
test
xor
outsl
das
leave
mov
pop
cmpb
stos
xchg
je
insl
pop
pop
pushf
lcall
test
add
xor
ret
lcall
mov
das
mov
adc
neg
mov
fwait
jmp
cmp
sub
push
inc
mov
jae
fyl2x
dec
or
mov
jge
sub
add
loop
dec
cltd
push
xor
inc
mov
push
daa
jns
inc
out
jmp
cmp
inc
es
lcall
hlt
and
lea
push
das
fmuls
xchg
arpl
xchg
mov
enter
inc
xor
mov
inc
mov
andl
sbb
roll
or
sarb
xorb
pushf
inc
cmp
in
mov
cmp
pop
sarb
pop
lahf
cmpsl
dec
call
mov
insb
sub
test
mov
rol
stos
sahf
rol
daa
jb
add
iret
cmc
lcall
jg
ret
or
cmp
data16
push
mov
adc
stc
mov
or
into
add
mov
rolb
mov
mov
aaa
loope
outsl
repnz
push
inc
push
call
cmpb
mov
std
push
add
mov
in
and
aad
jl
push
and
insl
mov
push
insl
mov
pop
dec
xorb
push
mov
jecxz
jmp
or
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
stos
in
enter
movlps
shlb
cmpsb
sbb
jp
dec
stc
push
xlat
jle
or
ljmp
add
daa
shl
cwtl
xchg
mov
lods
int
pop
arpl
lds
aad
mov
popa
fsubrs
dec
pop
inc
xchg
dec
adc
sbb
sbb
fidivl
cmp
popa
aam
mov
lods
xchg
ljmp
mov
and
pop
adcl
mov
mov
pushf
in
cmp
pop
push
or
pop
aam
enter
es
add
pop
push
lods
sub
sbb
sbb
fwait
pop
enter
inc
push
lahf
and
or
add
leave
push
test
xor
ss
lret
fwait
or
roll
aam
jb
mov
sbb
js
sub
fwait
mov
mov
andb
pop
jg
sbb
cmp
dec
in
pop
xchg
mov
lahf
sub
lds
cmp
ror
mov
sbb
push
mov
mov
cmp
loopne
ret
mov
jo
inc
mov
sub
and
add
pop
push
fs
popa
mov
lret
adc
jge
pop
add
sar
bound
out
xor
sub
int3
add
jmp
ss
or
ss
adc
jle
xor
push
mov
xor
insl
mov
ret
sahf
pop
adc
dec
push
ror
jmp
sarb
or
jnp
in
leave
xchg
mov
dec
loopne
lods
and
xor
mov
pop
pop
cmp
outsl
mov
adc
xor
cmp
out
aad
xor
and
lods
pop
into
adc
jae
xchg
xchg
mov
add
sbb
push
aaa
lcall
push
insl
push
test
mov
imul
lcall
jns
sti
inc
cmc
and
push
stos
sti
or
in
movsb
xlat
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
adc
mov
int3
movlps
lock
fistl
loope
xchg
xchg
sub
test
mov
leave
outsb
adc
enter
mov
inc
mov
test
inc
in
imul
jb
cmp
cmp
or
scas
test
cltd
test
pusha
je
xchg
jmp
int3
test
xlat
std
sbb
testb
stos
out
jl
leave
repz
adc
stc
cmp
mov
mov
test
icebp
ret
sub
lret
mov
addb
pop
enter
dec
dec
jns
sbb
fisttpl
push
rcl
pushf
dec
or
inc
xor
push
stos
push
ret
test
mov
push
xchg
sub
sub
rcr
pop
popa
data16
xorb
subb
sbb
stos
jp
cmp
or
add
cld
jne
jle
push
or
mulb
sub
sbbb
and
inc
das
movsl
scas
das
add
push
mov
iret
jg
xchg
jmp
adc
ja
loop
aas
pop
rol
cmp
in
mov
or
or
lret
xchg
iret
mov
pop
adc
popa
inc
stos
sbb
movsb
das
cmp
je
mov
xor
cmc
cmpsb
xor
xchg
fisttpll
sbb
ss
mov
sbb
or
xlat
stos
xor
out
addl
sbb
in
insl
aaa
jns
xlat
cmp
outsl
cmp
push
sbb
jp
lods
imul
add
pop
movsl
sbb
mov
jl
mov
mov
dec
push
lock
mov
test
insb
das
xchg
shr
fnstsw
or
xor
fsubs
push
js
adc
pop
scas
int3
dec
pop
pop
jmp
sub
ret
mov
jmp
xor
pop
dec
mov
add
mov
sub
push
xchg
into
fs
cs
sti
or
cltd
adc
sub
pop
mov
out
dec
frstor
push
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
mov
adc
adc
int3
out
sub
jne
cmp
int
ja
shll
cmpl
mov
sub
xchg
aad
out
daa
shrb
out
xor
mov
jle
lds
dec
sbb
and
xchg
xchg
fwait
sub
loopne
out
cld
jne
or
fiaddl
lds
jnp
je
scas
je
lods
ds
sbb
repnz
pop
stc
je
loope
xor
lods
lahf
jle
jnp
push
pop
xor
inc
cltd
mov
fsubs
test
clc
aas
jle
loop
mov
fsubl
or
subl
and
pop
and
movsb
icebp
fsubrp
repz
js
or
into
mov
mov
out
leave
jno
jno
sbb
dec
mov
data16
addr16
adcb
ljmp
imul
enter
imul
inc
cmp
xchg
rcl
movsb
pushf
dec
adc
mov
xchg
rolb
add
and
xchg
ss
orl
push
dec
cs
push
movsl
lods
add
popa
lcall
push
lret
xor
shrl
inc
jae
mov
pop
in
push
pop
insl
pusha
jb
daa
rclb
dec
fisttpl
js
jo
cmc
sub
pop
rolb
adc
lock
dec
xchg
mov
inc
fistpll
xchg
clc
ss
dec
in
inc
mov
xchg
int3
dec
cmpsb
jle
arpl
stos
adc
pop
xchg
push
mul
fnclex
and
adc
push
insb
addr16
xor
or
scas
les
nop
jne
cmpsb
push
repz
pop
cmp
call
in
dec
stos
fldl
test
mov
out
out
out
mov
xchg
stos
dec
xchg
add
mov
adc
lret
xchg
insb
mov
xlat
or
pop
or
out
push
data16
inc
push
xor
jo
push
jo
mov
and
shr
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
dec
or
adc
movlps
filds
push
ljmp
fcmovbe
push
dec
ret
pop
repz
push
xor
call
mov
data16
adc
js
movsl
inc
or
arpl
lcall
std
push
jle
mov
mov
fisubrl
fdivl
aam
stos
aam
mov
sar
icebp
push
mov
dec
mov
outsb
int
mov
fwait
out
dec
popf
aas
xchg
mov
dec
movsl
test
hlt
pop
and
push
adc
lods
cmpsl
in
fsub
push
push
ss
sub
out
fsubr
int3
lea
fsubl
dec
leave
cmp
jbe
inc
popf
std
pop
out
andb
push
lods
cmp
and
std
lret
mov
cltd
ret
aam
jmp
outsb
fstp
push
dec
lods
inc
mov
rol
pop
cmpsl
pop
les
fcomps
mov
ret
xchg
dec
xor
gs
mov
test
mov
xor
lcall
push
inc
aam
push
test
int
push
nop
mov
out
hlt
mov
mov
mov
lahf
pop
fucomp
bound
push
mov
jno
pusha
mov
push
imul
and
repnz
cmc
jae
add
dec
cltd
fwait
push
inc
cmp
mov
lods
test
lret
mov
sub
mov
in
dec
ja
sarb
aaa
in
lds
mov
popa
cmp
in
sub
pop
int3
xchg
jbe
jecxz
mov
jp
imul
sbb
scas
mov
add
outsl
ret
cltd
or
and
push
mov
sub
mov
ret
das
orl
mov
adc
inc
in
push
fdivrl
xchg
sub
in
cmp
xchg
mov
sub
lock
push
clc
sub
push
popf
addr16
xor
dec
or
js
xchg
hlt
std
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
mov
js
mov
adc
cltd
into
and
rcrl
mov
mov
lods
lock
fcmove
xchg
push
xor
cmpsb
jmp
and
fsubr
ja
rolb
outsl
xor
pop
cmp
push
loop
mov
or
in
push
stc
aam
push
rclb
or
test
inc
push
mov
cmp
fs
xor
jbe
jne
ljmp
mov
push
adc
dec
push
cmp
enter
sub
repnz
les
inc
and
push
testb
jbe
push
xor
mov
xor
lock
adc
or
sub
cmpsl
xchg
movsl
stos
in
shr
int3
sbb
ja
xor
push
pop
outsb
inc
stos
sahf
repz
sbb
inc
ret
pop
mov
leave
or
movsb
mov
das
sbb
insb
stc
mov
cltd
loopne
jb
fdivrs
xchg
lea
test
jge
out
cmpsl
mulb
test
loop
or
push
adc
incb
dec
bound
cmp
fsub
rorb
mov
sbb
mov
sbb
or
jge
popw
sbb
daa
mov
mov
add
js
in
mov
add
mov
add
push
imul
es
xchg
add
daa
mov
lahf
sti
and
push
inc
addr16
mov
popl
inc
jle
cmp
insl
mov
outsl
and
adc
dec
imulb
cmp
sbb
mov
adc
sub
cmpsl
lret
or
bound
bound
inc
sti
icebp
movsl
or
cmp
mov
lock
and
adc
xor
dec
inc
inc
std
in
js
mov
pop
push
pop
outsl
sbb
adc
adc
inc
roll
ret
enter
incl
and
mov
inc
or
cli
mov
pop
gs
xor
popa
add
xchg
hlt
std
decl
mov
mov
add
mov
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
or
aas
int
mov
aad
mov
push
aad
imul
pop
sahf
popf
add
sub
adcl
nop
inc
mov
and
jmp
pop
aad
call
lods
stc
mov
jo
mov
out
push
xchg
in
mov
xor
shll
data16
jmp
ds
sbb
inc
aad
cmp
cwtl
xor
lods
sub
stos
xor
test
fcompl
les
jae
jnp
popf
ja
shl
and
flds
gs
out
add
and
insl
icebp
loopne
mov
mov
mov
cmp
jl
lret
icebp
xchg
cld
cwtl
cli
pop
add
inc
pop
add
mov
lahf
and
add
xchg
outsb
jp
adc
jo
jle
push
push
imul
daa
fwait
mov
add
or
add
jbe
insb
ja
ret
jns
adc
ret
out
adc
mov
xor
imul
cmpb
mov
adc
sbb
sbb
xchg
lcall
out
xchg
pop
mov
cmp
icebp
sbb
sub
std
hlt
shr
xor
cltd
dec
aad
push
adc
cmp
add
loop
lahf
pop
lock
or
mov
jecxz
adc
cmpl
push
xlat
das
dec
mov
mov
sub
mov
ret
mov
adc
mov
dec
test
leave
push
mov
out
loop
jne
sbb
pop
or
mov
cmp
orb
das
addl
shlb
je
arpl
mov
fwait
push
test
testl
sbb
xor
cwtl
push
jp
nop
decl
mov
lock
jbe
ror
push
lret
adc
iret
adc
push
xlat
and
jae
je
mov
call
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
cwtl
lods
cmp
movlps
out
cmpsl
stc
xor
bound
add
push
repz
push
dec
push
mov
mov
mov
sti
pusha
xorb
push
jmp
fdivr
pop
movsb
outsb
inc
notb
outsl
ss
dec
scas
mov
sbb
mov
inc
mov
xchg
xchg
in
or
sbbb
sub
jp
add
push
xlat
pop
lahf
dec
popa
mov
lcall
repz
cmp
pop
test
push
into
xor
jmp
je
and
inc
movsb
mov
mov
decb
adc
sub
dec
and
std
mov
pop
pop
add
std
sub
jge,pn
popf
outsl
loopne
icebp
xchg
push
jp
mov
es
dec
fmuls
js
movsl
sub
push
in
lods
mov
add
mov
mov
lea
or
mov
adcb
and
adc
or
ror
cs
dec
lcall
lock
ds
adc
adc
arpl
adc
mov
xor
sub
orb
in
xor
push
adc
jb
call
xor
call
pop
adc
pop
pop
jnp
mov
push
pop
pop
pushf
shll
sbb
fdivs
xchg
data16
in
lret
sub
xchg
adc
sar
jne
imul
leave
pop
sub
pusha
jo
mov
ljmp
pop
sub
mov
add
adc
mov
push
out
mov
lea
dec
jmp
test
movsl
sbb
sbb
nop
pop
cmp
movsbl
push
loopne
js
jmp
mov
in
push
and
mov
das
test
xchg
lea
gs
out
xchg
aas
push
jmp
add
mov
xchg
jo
push
or
movsl
imul
or
decl
test
decl
jmp
sub
sbb
sbb
cs
icebp
mov
cmc
stos
cmc
scas
adc
adc
xchg
pop
adc
popa
dec
xor
int3
fmuls
bound
mov
dec
ljmp
sahf
cmp
in
fcomps
sub
jge
push
dec
jb
ss
add
add
ret
mov
mov
sbb
in
cmc
movsl
out
out
aam
repnz
mov
dec
push
inc
mov
cmc
dec
cmp
push
jno
shr
xlat
in
lret
mov
pop
fmull
orb
adc
cmp
test
add
sub
push
mov
sti
push
and
pop
mov
iret
jge
sbb
rep
xchg
push
push
int3
push
and
adc
pop
rcr
push
jns
sbb
xchg
test
insl
adc
dec
shr
inc
mov
xor
popa
dec
push
cs
mov
jmp
mov
pop
lods
jg
insl
push
cmp
push
pop
and
out
lds
inc
xchg
jmp
sub
cmp
loopne
mov
or
or
outsb
push
mov
les
or
repnz
roll
dec
or
gs
je
out
sub
ss
sbb
pop
sbb
fcoms
lods
xchg
cmpsl
setnp
in
push
into
pop
fisubrl
ret
mov
mov
stc
and
in
dec
mov
xlat
arpl
outsl
fs
and
insb
add
sbb
xchg
xchg
mov
jb
lds
or
push
jg
push
mov
push
test
mov
mov
and
add
dec
pop
es
push
jge
dec
pop
cld
cmc
and
dec
fnstsw
mov
in
lret
test
fsubs
xchg
or
enter
push
dec
repnz
in
add
popf
inc
pop
out
jp
xor
hlt
rclb
rcrl
lea
aam
cltd
je
je
pop
imul
movsl
push
jle
out
mov
sub
push
lock
xor
ret
cmp
push
lock
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
jle
stos
adc
adc
imul
mov
pop
or
push
arpl
int
ret
xor
insl
mov
and
push
stos
mov
mov
pop
testb
inc
cs
cmp
enter
test
popa
mov
sahf
xchg
mov
mov
jno
outsb
jle
call
outsb
adc
jmp
sbb
cmp
add
xchg
cs
out
dec
adc
sbb
mov
xchg
mov
stc
xor
xchg
cmc
xlat
or
jnp
fsts
mov
fnsave
mov
lret
mov
cmp
mov
pop
aad
add
mov
add
aaa
setne
jbe
xor
jno
popf
cli
int
test
pop
mov
icebp
std
add
adc
lods
stos
jno
dec
push
das
into
fistpl
lret
mov
cmpsl
mov
test
data16
aaa
lahf
cmp
push
adc
loopne
ljmp
pushf
aaa
repz
sbb
insb
sbb
sub
xchg
cld
das
outsl
lcall
das
bound
cmp
rol
inc
clc
cmc
push
out
data16
jbe
in
cwtl
sahf
jne
scas
cld
rcll
repnz
inc
mov
xor
xchg
and
lahf
test
lock
call
inc
xchg
add
push
popa
jl
ds
je
xlat
ds
ficoml
mov
xchg
pop
sub
lcall
adc
jg
and
and
incl
sbb
lods
mov
incb
mov
adc
and
pop
fists
out
adcb
gs
mov
jo
jecxz
in
or
xchg
out
pusha
xchg
sbb
mov
aaa
icebp
in
add
sub
mov
scas
dec
pop
inc
mov
xor
aaa
cmc
xchg
lds
rcr
xor
popf
stos
out
add
shlb
decl
lock
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
jb
data16
adc
adc
movsl
loopne
divb
mov
sub
fcoml
gs
gs
inc
dec
inc
divl
jge
std
sub
sar
repz
cltd
sahf
mov
xchg
inc
cld
xchg
jge
xor
pop
adc
jno
cwtl
xor
fsubrl
sbb
arpl
dec
mov
cmpsl
pop
popf
icebp
mov
pop
cs
fildl
rclb
mov
dec
clc
sub
test
das
sbb
adc
fnsave
and
sbb
xor
enter
incl
sub
pop
scas
or
movsb
push
push
arpl
mov
push
or
pop
pusha
push
jo
pop
push
jbe
lods
jb
and
sbb
movsb
es
das
cmpsb
jne
movsl
jns
shll
mov
xor
or
ljmp
or
hlt
fistpll
jo
rcll
sbb
add
jnp
jp
sub
inc
push
je
add
bound
test
sub
test
xorb
pop
fsubrl
sbb
and
loop
fisttps
mov
xor
and
inc
fwait
mov
mul
xlat
in
mov
xor
pusha
out
divb
xchg
inc
adc
cmpsb
sbb
lret
jnp
sbb
std
leave
daa
or
mov
xchg
add
push
js
inc
std
add
mov
jbe
mov
sbb
es
int
mov
in
fs
pushf
add
dec
stc
jl
lock
loope
push
insl
or
icebp
inc
cltd
enter
xchg
cmp
lcall
int3
pop
sbb
in
xor
sti
int
jge
xchg
xor
ret
xor
lcall
mov
daa
dec
dec
lock
out
jnp
std
daa
mov
cmp
sbb
shrb
orl
add
insb
mov
sbb
lret
add
add
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
or
adc
adc
mov
inc
cmp
popf
fs
xor
xor
inc
sbb
mov
pushf
je
das
lea
repz
lret
lahf
into
xchg
xor
addr16
pavgw
and
sbb
inc
test
lock
into
mov
fimull
cwtl
push
push
mov
incl
dec
loopne
push
dec
inc
and
xor
bound
push
and
andl
rcr
xor
out
sub
jb
xchg
clc
fcomp
sarb
lahf
pop
add
xchg
loopne
inc
dec
xor
aas
mov
lods
dec
das
xchg
jmp
inc
outsb
sub
jae
leave
pusha
or
push
sahf
mov
lods
add
movsl
dec
jecxz
call
mov
jecxz
stc
dec
mov
hlt
mov
data16
pop
loopne
add
sbb
mov
mov
mov
sub
addr16
stc
adc
push
cld
outsb
jmp
add
cmp
pushf
test
inc
lds
jg
das
push
pop
mov
cmp
cli
ja
xchg
sub
sub
sub
fwait
neg
mov
push
push
fs
sub
cmp
xchg
daa
and
hlt
js
adc
test
xlat
push
mov
mov
ljmp
xchg
cmp
and
push
xchg
bound
push
inc
or
cmp
and
shr
lret
push
jge
or
nop
xor
sbb
ss
orb
lock
push
push
imul
push
mov
das
fldcw
push
enter
fdivs
decl
shl
and
ficoms
pop
out
mov
out
xchg
in
mov
ficomps
cmp
add
dec
inc
cmp
cltd
xchg
aam
in
mov
das
pusha
mov
cmp
jl
scas
and
testb
add
fs
and
cld
and
icebp
or
insb
movsb
or
dec
and
dec
data16
insl
mov
sub
je
imul
or
add
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
repnz
aad
adc
adc
neg
test
cmp
fcmovnu
data16
mov
adc
sub
test
pop
jmp
dec
lock
xchg
mov
and
inc
sbb
insl
pop
shll
mov
mov
mov
push
inc
rcll
mov
xchg
je
ss
lahf
xchg
jbe
pop
pop
adc
push
or
lods
rolb
cwtl
cmpsb
xor
adc
mov
adc
mov
jge
icebp
cmc
dec
clc
iret
sub
xchg
pop
mov
xchg
or
aad
lods
das
nop
add
fistps
inc
popf
mov
xor
add
and
pusha
push
cltd
pop
lahf
fwait
mov
and
stos
push
sub
dec
jle
xchg
add
jb
sub
add
mov
jno
cmp
xchg
lds
jo
jae
dec
into
fcmove
sub
cwtl
adc
cmpb
stos
push
add
nop
cmpsl
rcrl
clc
and
fs
inc
jae
mov
inc
imul
insb
mov
pop
sbb
arpl
inc
add
xor
subb
ret
insb
lahf
pop
or
mov
bound
jbe
das
cmpsl
push
mov
int
test
hlt
fiaddl
lods
in
scas
and
lds
pop
pop
adc
xchg
dec
cmc
inc
repz
dec
jne
movl
or
out
xor
ja
add
insb
ljmp
out
adc
and
mov
push
into
fucomip
icebp
scas
outsl
dec
rclb
shll
sbb
dec
adc
fnstenv
in
outsl
roll
out
jb
sub
and
push
sbbb
sbb
fildll
js
in
dec
pop
and
push
or
pop
jno
mov
in
lret
jl
shlb
movsl
test
push
inc
cmp
das
in
pusha
shl
enter
repz
fwait
cmp
sahf
imul
inc
test
imull
pusha
movsl
rcll
cmp
push
sub
mov
sahf
xor
mov
xor
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
mov
lea
adc
xor
cmc
jecxz
mov
sbb
mov
or
cmp
pop
neg
js
pop
negb
mov
dec
aaa
arpl
test
adc
or
sub
cmp
adc
stc
or
pop
xor
or
dec
jae
sub
in
ja
xchg
pusha
inc
orb
test
stos
data16
mov
cmpsb
sbb
js
jg
cmp
inc
icebp
pop
push
dec
or
lcall
fldcw
negb
mov
inc
push
nop
mov
xchg
pushf
dec
add
inc
sbb
add
cld
ret
fistps
sub
or
dec
mov
shll
adc
jo
insl
sbb
mov
ds
stos
sub
mov
imul
stos
jl
sbb
mov
jecxz
ss
inc
jb
fcmovne
fstpl
loope
and
pop
into
pop
stos
xchg
jb
clc
adc
loop
jbe
bound
sbb
mov
xor
inc
pop
or
inc
inc
popf
cmp
and
js
xchg
pop
ret
and
xchg
xchg
cmc
pop
cmpsl
ret
add
push
mov
cmc
mov
pop
jae
mov
pop
jl
sbb
sbb
enter
xorl
insb
jae
jae
popa
sub
pop
dec
fisttpl
scas
std
push
dec
arpl
dec
jb
push
pop
pop
push
call
out
out
cs
sahf
cmp
xchg
mov
and
xchg
dec
push
insb
call
sbb
add
mov
adc
jge
fisubs
pop
xchg
cmp
inc
pop
xor
mov
inc
test
test
js
pminsw
sub
push
ss
or
lods
lret
dec
cltd
push
inc
mov
leave
jp
cmp
icebp
jp
xor
mov
lahf
fwait
and
in
testl
or
cwtl
push
les
call
adc
popf
push
dec
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
stos
inc
xchg
adc
adc
push
xor
loope
out
aas
addr16
pop
push
iret
addr16
pop
mov
repz
sbb
push
gs
xchg
and
sbb
mov
and
xchg
pushl
aad
notb
or
jl
add
mov
dec
js
mov
shld
sbb
adc
cmp
fisubrs
int3
cmp
stc
out
pop
adc
jp
cwtl
ljmp
jb
mov
cmp
fwait
pop
cmp
popf
lret
aas
loope
add
xor
push
sbb
nop
ret
dec
mov
nop
mov
and
adc
lahf
mov
outsb
push
or
sub
sbb
pop
rclb
jo
pop
mov
sbb
push
popf
cmpsl
push
mov
pop
popa
insl
mov
push
sub
add
cmp
push
fmull
gs
dec
dec
ljmp
int3
push
jo
sub
daa
shrl
sub
jmp
push
ret
xchg
mov
pop
pop
rol
js
sub
mov
dec
or
cmp
int
pop
ljmp
adc
xchg
icebp
rcrl
cld
lds
pushf
pop
sbb
icebp
sbb
inc
dec
rcrb
jb
xchg
ret
pop
mov
sbb
mov
lahf
xchg
and
sub
loopne
pop
jp
dec
sub
leave
in
scas
jnp
pop
addr16
repnz
movb
adc
les
movsl
lea
and
xor
add
mov
cmp
adc
or
pop
lcall
nop
adc
cs
lea
fadds
ljmp
sub
inc
cwtl
mov
movsl
mov
xchg
add
aad
push
mov
arpl
inc
sbbl
mov
or
mov
icebp
fidivrl
lock
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
rcrb
std
mov
adc
aaa
imul
int
mov
test
pop
or
jnp
xor
test
cmp
sbb
mov
or
pop
insb
inc
in
leave
xlat
enter
dec
inc
mov
push
xor
xor
in
inc
push
push
pop
aas
jp
ficoms
bnd
rolb
jle
call
xor
jo
daa
ret
ror
or
je
jnp
inc
ss
into
imul
call
xchg
adc
js
cmp
add
fwait
xchg
sub
mov
dec
aaa
xchg
lock
fnstcw
repz
add
push
sarl
ds
xor
mov
ret
push
xchg
scas
push
orl
out
xor
dec
int
or
mov
mov
adc
jle
and
jae
jno
add
les
and
ss
shrl
mov
pop
cwtl
insl
mov
xchg
jbe
cld
jne
adc
cmpsl
adc
sub
cmp
xor
mov
mov
xlat
mov
and
pop
pop
cld
fucom
aam
sbb
mov
and
push
shll
mov
mov
rclb
out
adc
and
push
mov
mov
lret
jns
or
ret
pop
xchg
mov
mov
lods
dec
xor
stos
bound
xchg
in
aad
push
inc
adc
daa
dec
ret
xchg
inc
cltd
out
inc
jb
add
fisubl
mov
je
fstpt
sti
xor
imul
pop
cli
add
out
or
fabs
jl
in
sti
inc
sub
push
xchg
and
in
test
mov
pop
aam
sub
sub
or
inc
or
dec
push
fisubs
xchg
mov
cmp
dec
stos
int3
outsb
cmpsl
mov
mov
movsl
xchg
jle
rcll
xchg
dec
lahf
jns
inc
sbb
ljmp
mov
xor
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
jg
js
mov
adc
adc
lret
cmp
orl
ret
xchg
cmp
cmp
add
and
les
sub
mov
out
outsl
mov
je
xor
push
lds
inc
dec
sbb
xchg
and
into
adc
addr16
and
imul
test
rcr
and
adc
jns
cld
jecxz
out
xchg
ror
in
xchg
mov
cmc
dec
jmp
push
cltd
inc
ret
or
fsts
orl
xorl
pop
jl
jne
xchg
outsb
dec
adc
das
cmpsb
dec
cmp
lock
inc
mov
add
cs
jle
ret
xor
movsb
lret
popf
dec
ret
divb
add
prefetch
mov
cli
addr16
test
jne
adc
dec
add
stc
push
xor
flds
cmp
jmp
jle
mov
or
jno
add
xor
xchg
push
out
and
xchg
push
cmp
fstpl
lods
icebp
orl
xor
cmpsl
or
lods
fistpll
inc
out
lcall
mov
xor
mov
mov
andb
imul
ret
lods
inc
dec
subl
movl
dec
aam
xchg
fs
mov
jne
dec
gs
push
int3
mov
inc
lret
push
lods
or
ja
scas
lea
outsl
out
dec
into
sarb
aad
mov
cmp
add
mov
mov
and
dec
adc
cld
dec
mov
and
loop
push
into
es
pop
lds
push
pop
push
iret
shlb
mov
sarb
mov
mov
ficomps
inc
mov
dec
push
cmp
ret
sbb
xor
roll
sub
or
std
inc
cmp
out
xor
shr
pop
adc
jmp
inc
inc
shrb
inc
jge
mov
rorl
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
mov
outsb
test
adc
adc
imull
ss
out
pop
mov
inc
pusha
pop
bound
bound
pop
in
and
ljmp
shlb
roll
outsb
data16
add
pop
pop
add
in
iret
loopne
xlat
rcll
sub
push
cltd
repnz
loop
ljmp
jns
icebp
inc
adc
inc
pusha
mov
cmpsl
outsb
jmp
enter
rolb
push
pmaxub
cmp
test
cmp
ds
lods
loop
sub
shll
jge
das
int3
mov
dec
pop
or
fisttpl
in
rcr
pop
jl
jns
pop
int3
das
and
sbb
or
in
lds
adc
fdivrl
push
cmp
cmp
push
mov
push
jge
pop
sbb
cli
daa
pop
shr
fildl
mov
ret
out
push
push
fidivrs
leave
sub
push
push
inc
addr16
xor
jge
sub
pop
shlb
or
stc
inc
int3
fs
packsswb
clc
lods
sub
xor
jb
adc
xlat
hlt
leave
pushf
insl
cmp
enter
xor
sbb
shll
fwait
mov
loope
mov
and
dec
adc
mov
push
or
pop
test
mov
packsswb
rclb
out
inc
pop
add
push
imul
mov
jmp
adc
xchg
adc
xor
inc
inc
jns
or
jns
icebp
loope
das
je
mov
add
arpl
das
xchg
arpl
xchg
js
push
xor
mov
mov
fs
insl
mov
sti
sbb
ds
mov
xor
repnz
dec
sbb
sub
xchg
mov
mov
or
outsb
xchg
sbb
dec
add
popf
cli
xchg
jnp
push
add
xor
out
dec
idivl
and
nop
lahf
xchg
shlb
out
push
push
jbe
stos
fsubp
loopne
js
loop
insb
pop
xchg
mull
jmp
jnp
push
movsl
std
xchg
mov
cltd
mov
pusha
lcall
sub
xor
sub
andl
lcall
shll
loopne
lahf
push
fcoml
out
hlt
fwait
xor
dec
mov
ret
inc
jo
sti
adc
fwait
adc
pop
push
xor
mov
fstl
add
imul
jmp
into
push
ret
sub
shr
lea
mov
adc
icebp
sub
mov
jmp
xchg
int
adc
bound
sub
mov
mov
or
sbb
and
rcrb
aaa
sbb
pop
push
xchg
xor
fs
and
testb
xlat
pop
inc
sub
pusha
popf
sub
into
fwait
or
dec
adc
jbe
or
into
pop
daa
popf
pushf
push
out
mov
mov
fucomp
adc
pop
subl
xchg
add
outsl
mov
iret
or
sti
mov
mov
mov
add
jp
pusha
push
sbb
lods
inc
ds
xor
iret
cmc
sbb
rol
cli
xchg
icebp
mov
push
imul
jg
mov
stos
sub
push
fsts
shr
jmp
les
jno
sbb
and
lret
push
cmp
push
adcb
mov
test
stos
push
xchg
sbb
xor
pop
inc
mov
or
mov
repnz
popf
fstpl
sbb
pcmpeqd
std
mov
aad
xchg
aad
jp
fdivrl
arpl
pop
push
pop
repz
imul
push
ret
mov
movzwl
sub
sbb
sub
out
dec
mov
rcrl
pop
jle
dec
push
lock
mov
fmuls
sbb
dec
gs
mov
cmpb
lds
mov
out
mov
inc
mov
pop
xlat
inc
scas
lret
out
addr16
outsb
fisubl
repnz
mov
jo
sahf
stos
lock
dec
out
xor
divl
add
mov
adc
aad
bnd
data16
aaa
movsl
mov
sub
ds
mov
add
test
outsb
jle
jnp
cmpsl
divb
leave
xchg
xor
xchg
mov
mov
push
out
pop
pop
cmp
js
test
call
pop
xchg
js
repnz
cmp
push
add
aam
and
sub
jle
mov
inc
loop
xchg
and
adc
xchg
push
lahf
mov
xchg
arpl
lods
or
cmp
lcall
insl
push
mov
je
cmc
mov
lock
push
aad
popf
lods
ret
jne
in
call
mov
dec
jmp
pop
cmc
sub
ds
hlt
das
das
mov
imul
fldt
add
aas
scas
inc
fisttpll
jle
cmpsl
movl
push
push
cmpl
imul
arpl
push
out
dec
mov
loopne
cmpsl
xchg
sti
aaa
sbb
movsb
pop
jecxz
jmp
dec
fs
push
repz
ljmp
jl
fdivr
cmp
push
push
mov
xchg
inc
out
cli
cmp
dec
xchg
sahf
inc
mov
and
mov
daa
xchg
hlt
loopne
mov
cmc
xchg
lret
push
je
push
aas
or
push
jns
xchg
test
mov
lea
inc
test
int
inc
imulb
sti
imull
fistpl
mov
pop
negb
daa
mov
lods
push
test
ss
push
xchg
emms
ret
shll
shlb
inc
les
jb
mov
subb
pop
pushf
push
pushf
insl
jne
lea
ficomps
shll
mov
andl
mov
push
cltd
cld
popf
ljmp
out
mov
pop
aas
test
mov
loop
aas
arpl
xlat
push
sar
pop
add
adc
pop
jne
mov
fcoml
popa
pop
xor
ret
jns
sub
cmpsb
jno
push
pop
inc
push
pushl
ror
xor
and
or
scas
out
leave
sub
xor
addb
or
icebp
dec
loop
shrl
push
jo
xchg
jo
xchg
sub
les
call
in
sub
popa
jnp
nop
mov
xchg
mov
jecxz
sbb
movsb
sti
sub
leave
xor
int
dec
cmc
in
or
pop
inc
or
sub
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
