push
mov
jmp
adc
mov
jne
inc
push
test
movsl
add
add
mov
push
pop
inc
pop
dec
pop
push
or
xor
adc
adc
test
syscall
pop
push
adc
repnz
sbb
add
test
enter
or
adcb
fs
cmp
push
movsb
out
dec
jae
iret
lock
jnp
mov
dec
pop
jb,pn
femms
mov
int3
orl
pop
jge
pop
push
mov
shll
stc
inc
cmp
fbld
push
or
push
jbe
ss
sub
mov
and
ds
pop
shr
or
or
inc
cmc
out
mov
in
jbe
push
adc
jle
sub
mov
adc
mov
cmpl
jge
jmp
pushl
push
call
jmp
xchg
xor
and
jo
mov
xchg
mov
add
add
inc
cmp
dec
sbb
adc
mov
push
dec
imul
out
movsb
or
movsl
mov
mov
xchg
cmp
dec
cs
lods
xchg
pop
cmc
das
inc
pop
and
mov
bound
inc
xchg
les
or
and
mov
lret
shl
out
pop
pop
mov
push
dec
dec
jns
xchg
cmpb
out
add
into
mov
add
loope
ja
fldcw
push
push
or
mov
jne
aaa
notl
xchg
push
arpl
das
orl
out
mov
lods
mov
mov
inc
push
ret
mov
shrb
lret
mov
mov
push
shrb
jmp
push
or
outsl
out
dec
imul
add
xchg
push
cwtl
xchg
lods
pop
mov
mov
mov
iret
mov
mov
movb
stc
out
test
and
cmpsb
dec
ljmp
out
int
push
xor
rolb
scas
cmp
or
push
rcrb
mov
cmp
rcll
out
push
add
or
cwtl
jo
sub
shrl
iret
jg
outsb
sub
dec
jp
adc
push
loope
mov
scas
sub
xchg
jno
sbb
sub
mov
mov
lods
loop
lds
cwtl
inc
stos
xchg
dec
mov
mov
movsl
cmp
push
jmp
inc
aad
pop
mov
push
fisubrs
sub
add
mov
repnz
clc
mov
in
lcall
insb
data16
sbb
xor
ljmp
xlat
push
rcll
loop
stc
ret
add
shl
stos
leave
push
mov
pushw
dec
aas
cmp
cs
daa
stc
xchg
jb
repz
push
jge
stos
popa
sbb
push
neg
es
xchg
mov
test
scas
arpl
movsl
xchg
adc
addr16
fnstenv
xor
rolb
dec
add
arpl
pop
lahf
repnz
pop
popf
push
movsb
mov
cmp
pop
jae
sub
or
and
les
inc
pop
lcall
test
je
inc
push
pop
push
mov
sbb
rcrb
orl
mov
sub
orl
or
mov
cmpl
jbe
jmp
pushl
pushl
call
jmp
into
mov
into
mov
insl
sti
sbb
add
add
loopne
jo
out
ret
or
sbb
push
addr16
lea
add
cmp
push
cmp
push
mov
push
and
mov
mov
dec
dec
cmp
aad
outsl
pusha
mov
push
sarl
add
sti
mov
dec
adc
fstps
mov
lret
xor
or
mov
jg
mov
jmp
cwtl
mov
aas
xor
pop
ds
rcrl
mov
and
test
or
ss
or
push
int3
jno
sahf
sti
mov
fmull
sbb
mov
test
into
or
in
lods
into
lea
dec
or
mov
mov
mov
mov
sub
mov
movzbl
sbb
jmp
jecxz
adc
scas
sti
jge
scas
cltd
int
insb
mov
add
mov
push
das
inc
dec
xor
xchg
imul
testb
mov
mov
adc
pop
jo
xlat
inc
xor
or
sarl
xor
hlt
pop
mov
imul
adc
mov
cli
mov
es
xchg
and
add
movsb
sti
dec
dec
mov
and
pop
sub
inc
cmp
imul
stc
and
das
mov
dec
xor
popa
inc
out
scas
scas
push
dec
fdiv
sti
push
arpl
dec
jecxz
test
sub
popa
aas
ss
pop
sub
mov
mov
jb
dec
pop
and
inc
fstl
jmp
test
mov
mov
in
outsl
lea
test
in
add
add
sub
out
lret
cmp
push
ds
sti
add
movsb
mov
mov
mov
pop
mov
fildl
lahf
add
xor
xor
xchg
jecxz
or
lock
add
push
pop
cmp
jno
arpl
fs
mov
popa
xlat
or
adc
inc
inc
outsb
dec
push
rclb
xchg
mov
xchg
jo
scas
lds
mov
pop
jno
test
add
jp
bnd
sbb
cmp
pop
les
add
push
mov
mov
into
outsb
and
imul
or
pop
ljmp
sahf
xor
jmp
xor
sbb
mov
or
mov
mov
dec
jmp
mov
push
dec
rcll
add
add
adc
jb
data16
jp
pop
xchg
push
fwait
sub
nop
push
int
push
ljmp
mov
pop
movsb
xor
loopne
pop
fs
mov
jns
and
jo
sbb
xchg
add
rolb
repz
xor
mov
mov
out
and
xchg
xchg
or
scas
arpl
xchg
out
jmp
call
clc
enter
out
cwtl
call
sbb
xchg
sub
add
cmpsl
leave
inc
les
jne
xchg
or
mov
pop
pop
outsl
mov
or
addr16
push
inc
adc
movsl
sbb
popa
subps
sbb
jmp
pop
outsl
sub
out
xchg
dec
cmp
add
add
ss
sarl
xchg
stos
cld
scas
push
xor
dec
into
dec
subb
mov
xchg
mov
xor
mov
aaa
or
xor
mov
mov
jp
adc
stos
aas
and
sbb
push
mov
jmp
xchg
test
add
fsubs
ret
sub
test
adc
icebp
out
mov
or
pop
cmc
add
imul
shll
add
or
lcall
fcomp
cmp
movsl
js
das
add
mov
pop
insl
lods
push
pop
mov
dec
pop
pop
fdivs
roll
jne
jp
mov
lods
jmp
cs
jmp
out
jle
in
xor
mov
mov
jecxz
inc
lds
push
lods
sub
xor
movsb
mov
dec
mov
mov
mov
and
popf
stos
gs
xchg
shlb
inc
sbb
imulb
mov
arpl
mov
es
inc
mov
and
fbld
imul
cmc
inc
fildll
sbb
lea
push
loope
adc
add
movsl
ret
and
std
sub
and
dec
mov
mov
pusha
popa
dec
cmp
mov
in
out
imull
mov
sbb
inc
clc
xor
mov
jmp
mov
scas
repz
adc
jg
lods
and
or
mov
dec
xchg
divl
sbbl
jecxz
gs
push
cwtl
pusha
das
ror
loope
xor
push
popw
push
xchg
push
adc
jbe
or
xor
aam
clc
mov
inc
fs
add
sbb
fucomp
dec
fsubrs
cmc
repz
adc
cmp
jecxz
push
lahf
ja
in
call
or
adc
xor
dec
cld
jns
aad
ret
pop
adcb
icebp
adcl
sub
jns
out
scas
xchg
jne
push
pushf
rorl
dec
cld
and
sbb
push
pushf
xlat
pop
into
dec
int3
dec
jg
icebp
movsl
movsb
mov
icebp
mov
daa
jge
iret
or
xchg
imul
mov
js
mov
subl
xor
xor
mov
subl
sub
orl
jmp
xchg
inc
imul
lea
ret
inc
mov
pop
or
add
mov
mov
mov
mov
dec
xchg
cmp
dec
add
mov
imul
push
mov
aaa
jg
mov
push
nop
lea
jg
push
xor
mov
sub
outsl
and
js
and
cmpsl
dec
cld
cmc
push
das
iret
xchg
sub
cmp
mov
push
inc
call
mov
mov
dec
pop
adc
ds
inc
jbe
insb
xor
mov
mov
mov
add
mov
in
cwtl
mov
out
lret
inc
inc
mov
fwait
pop
insb
lgs
pop
xor
test
bnd
sub
or
xor
xor
sub
sbb
out
adc
lea
in
xor
lea
add
add
push
add
add
jne
pushl
push
push
call
movl
jmp
push
xchg
xchg
push
mov
les
add
mov
jl
and
ss
push
jmp
in
test
test
and
gs
and
lea
aad
pop
jae
add
mov
push
inc
pop
sub
fwait
std
cmp
push
push
arpl
and
ja
lret
adc
aas
call
dec
enter
sbb
sbbl
xor
dec
enter
in
pop
in
fwait
imul
sti
dec
push
pusha
adc
mov
mov
ret
and
fs
fsts
mov
pop
mov
jns
cld
outsb
cmc
sbb
cmpsb
mov
adc
ja
movw
add
movl
jmp
hlt
adc
xor
icebp
cmc
aad
cld
ja
and
xor
add
mov
mov
mov
lret
insb
add
sub
and
sbbl
add
xor
push
test
icebp
pop
jb
aad
add
mov
outsb
pop
subb
sub
jnp
sub
lods
testb
insb
add
fcmovb
dec
inc
repnz
sbb
jl
adc
daa
cmp
cmp
cmp
mov
inc
repz
in
pop
cmp
add
in
pop
js
dec
mov
insb
stos
and
loop
scas
pop
xchg
xchg
jne
mov
inc
jne
sub
loope
inc
pop
mov
add
dec
mov
dec
daa
push
add
inc
movl
movl
jmp
test
lcall
pop
mov
mov
mov
xor
sbb
movsb
or
fdivs
mov
ljmp
imul
add
mov
aas
hlt
jmp
pop
enter
enter
negl
ds
aaa
cmpsb
sarb
push
or
mov
stos
sbb
mov
cld
inc
ja
je
out
and
mov
mov
imul
jns
push
mov
pop
lret
add
js
scas
mov
adc
loop
xchg
ret
test
into
dec
into
nop
aas
in
mov
pop
mov
andl
cmp
es
adc
subb
inc
movsb
inc
push
add
jmp
cmp
shl
xlat
std
cmp
push
pop
lea
movsb
or
cmc
or
add
loop
push
adc
dec
int3
lahf
daa
js
inc
xchg
xchg
sbb
mov
sbb
mov
cld
add
jb
add
dec
sbb
sbb
jo
shl
ljmp
xor
push
scas
gs
xor
cmp
data16
popa
sbb
sbb
cltd
pop
loopne,pn
pop
daa
lods
cmpsb
fwait
mov
imul
into
sarl
test
xchg
xor
in
inc
sub
call
xor
xchg
cmp
rcll
or
mov
ret
aaa
in
xchg
ds
mov
pusha
fwait
mov
add
lock
add
movl
sub
movl
subl
jmp
cltd
xchg
inc
sub
std
mov
pop
mov
ret
mov
add
mov
xchg
out
dec
mov
sbb
pop
pop
inc
std
and
ja
sub
jmp
xor
not
push
or
jle
xchg
mov
pushf
cmp
push
mov
shlb
pusha
adc
mov
out
in
testl
lock
aad
ds
add
stos
mov
cmp
lds
test
dec
inc
fwait
lds
aam
stc
mov
aaa
in
arpl
lahf
fstl
push
and
dec
inc
mov
in
in
and
rorb
add
and
jae
int3
dec
aas
inc
hlt
in
lods
mov
mov
clc
loopne
push
pop
clc
fnsave
movl
mov
mov
sbb
movl
movl
cmpl
jbe
add
not
jmp
push
call
movl
push
pop
jmp
push
mov
push
in
jb
fisubrs
add
mov
fldt
in
sbb
mov
scas
xchg
mov
or
daa
repnz
mov
push
fcmovbe
xchg
scas
std
scas
mov
ds
and
cld
lahf
fldl
shll
imul
pop
mov
rcrb
sbb
mov
add
dec
jo
je
push
lahf
rcrb
daa
sbb
cmp
popa
dec
or
popa
outsl
mov
pop
xor
shrl
and
lods
jle
imul
fwait
sbb
sub
mov
clc
imul
mov
cmp
nop
sbb
or
ss
mov
pop
mov
movl
adc
movl
cmpl
ja
mov
xor
jmp
push
push
call
movl
jmp
jp
cmp
stc
out
mov
mov
add
xchg
mov
and
mov
sahf
mov
les
stc
xchg
mov
cmp
fiaddl
negb
test
leave
sub
mov
jg
cmp
xchg
into
mov
sar
mov
arpl
fstps
adc
pop
xchg
xor
xchg
jp
je
in
divb
pusha
fcmovnb
mov
cmp
jmp
sbb
movsl
fsubs
pop
out
xor
adc
xor
dec
in
jp
push
inc
das
push
cmpsl
xchg
mov
sbb
push
mov
lahf
mov
mov
pop
clc
sub
lds
dec
scas
mov
inc
int3
movsb
add
add
inc
int3
jle
add
jmp
pushf
push
adc
xchg
mov
add
add
mov
and
pop
mov
cmc
jo
or
push
rcl
push
sbb
popa
test
xchg
addb
or
hlt
mov
dec
dec
fistps
lds
ffreep
mov
inc
xor
lods
subl
test
pop
fwait
std
push
cld
add
jne
fiaddl
xor
cmp
fidivrl
je
rol
aaa
inc
mov
xor
jns
xchg
adcb
and
cmp
push
adc
movsb
push
in
adc
das
cld
lds
xchg
cltd
jbe
jne
dec
dec
pop
in
lret
stos
pop
lret
mov
inc
jg
sub
fs
xchg
jne
jle
jl
mov
push
mov
mov
xor
mov
orl
push
xorl
push
andl
jmp
xchg
xchg
mov
pop
cmp
loopne
cli
sbb
push
add
mov
cmc
shlb
into
mov
push
nop
outsb
sub
dec
jp
rcl
bswap
mov
dec
xor
adc
lea
lods
mov
es
int3
fidivs
inc
iret
xorb
out
or
xchg
int3
cmp
lahf
or
jbe
inc
imull
mov
inc
sub
sub
jge
cmp
add
or
das
mov
add
sarb
fildll
out
xchg
xchg
pop
test
out
push
push
adc
pop
aaa
leave
adc
fdivrs
jle
insl
daa
lcall
xchg
sbb
cmp
add
jae
add
mov
add
mov
andl
mov
and
mov
not
mov
and
xor
sub
cmpl
jb
mov
sbb
jmp
push
call
mov
lea
mov
mov
jmp
or
pop
pop
pop
pop
push
ds
or
push
sldt
mov
mov
ljmp
dec
and
imul
outsl
jno
stos
cwtl
jnp
fs
test
push
fmuls
adc
push
ficoml
lret
movsb
pop
inc
daa
imul
xor
fisttps
popf
test
pop
arpl
cmp
aad
sub
sub
mov
insb
pop
or
xor
loop
fcoml
jle
roll
sub
lcall
lods
adc
lods
into
loopne
lds
jmp
rolb
test
shr
mov
arpl
cld
sub
adc
ds
xchg
mov
std
mov
rorl
or
inc
add
add
and
sbbl
jmp
jp
cld
mov
mov
jnp
or
adc
add
mov
cs
and
int3
lret
add
inc
scas
fwait
and
pop
sarl
mov
lods
js
sub
jp
out
cmp
jae
mov
test
lcall
mov
fsub
and
adc
mov
jb
mov
cwtl
hlt
ja
push
add
cmpsb
xor
nop
add
and
movsl
das
pop
aam
and
xor
into
int
push
rclb
sub
dec
adc
aaa
mov
jl
cltd
jnp
or
and
das
and
add
sbb
xor
lods
or
ss
mov
push
sub
sbb
jb
pop
jge
jb
jb
fnstcw
stos
and
sbbl
jmp
loope
addr16
cli
je
jns
int
add
mov
neg
cmpsl
adc
hlt
xor
jb
push
jmp
cmp
pop
jae
inc
add
sbb
mov
outsl
add
pop
scas
in
lcall
cmp
notb
inc
ret
cli
out
push
jbe
or
push
mull
and
dec
adc
push
ja
cwtl
fsubp
xchg
fcoml
sub
mov
fistl
mov
bound
mov
lret
xchg
into
or
inc
xchg
out
mov
enter
pop
push
push
nop
enter
ja
std
adc
int3
or
je
sub
les
das
adc
pop
rcrb
push
iret
jg
into
insb
roll
push
add
movl
cmp
movl
jne
adc
mov
mov
cmpl
jg
add
jmp
push
call
mov
xor
add
cmp
jmp
in
cmc
xchg
notl
fbld
lcall
mov
jmp
push
fldenv
mov
xchg
mov
imul
les
fwait
aam
clc
xor
xchg
push
jb
mov
and
jns
scas
sbb
insl
inc
xchg
ret
jo
and
dec
rol
push
dec
or
addl
pop
push
bound
cmp
adc
pop
mov
dec
aad
clc
dec
mov
sbb
xchg
mov
cmp
cmp
loopne
mov
inc
jl
cli
pop
xor
sub
mov
jle
sbb
sub
cmp
xchg
sub
adc
cwtl
inc
adc
shll
cmpsl
pop
cmp
sbb
sbb
push
sti
pop
mov
push
add
add
mov
cmpl
ja
dec
jmp
pushl
call
xor
mov
mov
mov
xor
jmp
arpl
mov
mov
cld
js
movsb
mov
inc
adc
add
fisttps
popf
in
pop
sbb
fiadds
stc
out
jne
add
notb
or
sub
rcll
xor
or
loop
idivl
mov
jle
js
movsb
hlt
repnz
movsb
mov
stos
and
sbb
and
jnp
adc
sti
push
and
push
jno
pusha
cmp
push
shlb
lldt
std
js
inc
cmpsl
and
fldt
bound
in
or
add
lret
inc
cs
sbb
sbb
mov
lock
cmpl
jle
sbbl
xor
jmp
push
pushl
push
call
add
jmp
das
in
subb
out
in
addr16
repnz
js
divl
adc
add
sahf
nop
jg
ret
js
daa
pop
or
daa
fcompl
popa
out
repz
test
nop
mov
and
xchg
mov
mov
add
testb
add
in
cld
mull
cmpsl
sbb
mov
pop
mov
xor
sub
mov
ret
shlb
insb
jmp
add
inc
pop
sbbb
push
ljmp
inc
dec
xchg
loope
jns
push
mov
filds
sbb
loop
test
nop
cltd
insl
rolb
dec
fldenv
sbb
mov
iret
movsl
inc
pusha
jno
dec
adc
dec
sub
mov
jmp
f2xm1
out
out
xchg
stc
incb
xchg
push
addr16
pop
fidivrs
add
add
loop
xchg
dec
xor
aas
xchg
cld
sbbb
or
dec
or
xchg
inc
loope
test
fdivl
ja
and
mov
test
orl
shll
subb
int3
stos
jg
inc
add
je
cwtl
cmp
sbb
mov
ret
or
sbb
inc
insl
outsw
hlt
pop
test
push
in
cmpsl
in
pop
cmp
lar
pop
data16
call
sbb
push
out
push
scas
push
lret
inc
push
adc
push
sbb
sahf
sbbb
pop
addr16
ror
push
inc
sbb
js
mov
movzbl
sbb
xor
cmpl
jbe
and
jmp
push
push
pushl
push
push
pushl
pushl
push
call
add
adc
mov
jmp
mov
ljmp
lahf
inc
cmp
add
sbb
jl
iret
ret
out
sbb
xor
int
je
pop
fcmovu
and
inc
sub
aaa
lret
in
mov
pop
jge
mov
gs
out
xchg
lods
cmpl
out
stos
aam
pop
and
mov
test
orb
jae
fwait
lcall
fldl
arpl
cli
push
dec
jmp
and
cmpb
sahf
arpl
xor
sub
jle
mov
loope
mov
ja
fcmovbe
arpl
dec
outsb
jecxz
xchg
jbe
out
cmp
ja
pop
sbb
mov
push
sbb
fdivrs
cmc
out
gs
inc
and
jl
rorl
roll
add
or
popa
fdivrl
mov
ret
repnz
loop
das
adc
add
or
ret
mov
sti
bound
jae
mov
lods
dec
push
mov
xchg
loope
mov
xchg
cmp
cwtl
shlb
loope,pt
in
cmpsb
es
ret
les
jmp
daa
leave
ficompl
and
ja
notl
dec
sub
xchg
fwait
sub
sbb
lock
xchg
cmp
aam
push
jle
mov
shll
mov
dec
push
int3
mov
cwtl
inc
jb
jecxz
in
test
xor
or
mov
ficoml
sarb
add
fbstp
mov
push
mov
dec
adc
add
shr
roll
add
and
and
out
in
aam
push
or
ljmp
add
repnz
xor
xchg
adc
adc
cmpsb
rcll
outsl
jne
stc
hlt
and
or
push
xor
lea
test
or
scas
jno
push
inc
dec
add
addr16
bound
orl
fldl
stos
pop
xchg
in
xchg
push
scas
add
sahf
sbb
in
and
push
shll
push
cmpsb
cld
pop
sub
adc
add
fstl
mov
test
lahf
pop
int3
addr16
inc
decb
iret
xor
mov
sbb
and
pop
rcl
negb
out
pop
mov
jno
bound
add
movb
mov
roll
jmp
xor
cmpsl
aaa
out
jg
sti
mov
or
int
ret
movsl
push
add
mov
int
data16
repnz
popf
es
adc
sub
push
jl
push
fimuls
inc
pop
pusha
jae
pushf
inc
loope
xor
aad
sbb
fwait
jne
and
pop
sub
jbe
push
sbb
jo
notb
xchg
jmp
int
lods
mov
lret
out
fldcw
stos
push
in
lret
ds
sub
jnp
adc
mov
jmp
adc
mov
hlt
or
xchg
test
pop
or
mov
or
repnz
mov
dec
dec
jmp
loope
std
sbb
xchg
mov
bound
lock
movl
mov
movl
cmp
movl
jne
not
mov
movl
cmp
je
jmp
repz
pop
mov
mov
xor
jo
pop
add
mov
xor
mov
js
gs
ljmp
mov
mov
ljmp
mov
scas
and
leave
and
call
or
pop
incl
andl
push
int
dec
adc
call
bnd
or
push
or
push
outsb
jle
mov
sbb
rcr
lahf
stc
push
jno
cmc
cmc
mov
jg
daa
xor
aad
push
or
ja
xchg
sti
add
jbe
mov
sub
sub
push
sub
mov
scas
shlb
lock
lods
popf
ss
pop
and
xchg
ss
xor
add
mov
sbb
adc
add
jl
mov
mov
sub
add
jmp
pushl
push
push
pushl
pushl
push
call
jmp
xchg
pop
sbb
fistpl
fdiv
push
mov
add
lret
mov
adcb
push
and
push
push
int3
lahf
out
xor
lods
fidivl
mov
xchg
add
mov
mov
push
adc
adc
push
in
push
xor
sub
out
inc
movl
sbb
in
rolb
popf
pop
or
das
das
push
pop
pop
cwtl
movsl
jge
and
xor
ja
das
lods
aas
jnp
dec
repnz
jmp
mov
adc
nop
cli
push
sbb
jbe
adc
xor
jbe
lcall
test
aam
out
pop
or
fldcw
inc
mov
add
add
inc
test
xor
add
inc
lods
shrl
add
add
jge
or
jmp
push
pushl
push
push
pushl
push
push
pushl
call
movl
jmp
adc
clc
sar
cmp
cltd
dec
mov
sbb
add
dec
test
mov
jmp
xor
adcb
sub
inc
inc
setne
aas
cli
add
cld
jle
push
jne
pop
gs
js
push
stos
sbb
add
fmul
rorb
stos
iret
xchg
inc
insb
mov
in
je
xchg
jmp
mov
fstpl
in
xchg
and
les
insl
xor
or
leave
cmp
hlt
fistpll
into
fisubs
xchg
jge
dec
mov
in
test
lds
lock
icebp
lods
push
and
jg
fwait
cmp
cwtl
shrl
xor
pop
push
xor
jl
in
xchg
mov
sub
or
xor
notb
inc
movsb
jl
add
movl
jmp
cmp
jl
std
lahf
sti
inc
pop
fsts
xchg
sbb
add
jg
aam
scas
sti
dec
in
bound
mov
xor
mov
sbb
imull
dec
lods
test
jecxz
fmul
and
sub
mov
push
pop
dec
ljmp
popf
cmpsb
pop
fsubrs
sbb
mov
jo
jbe
js
xlat
push
pushf
dec
mov
pop
dec
pop
loopne
rcl
xchg
mov
mov
sbb
mov
loopne
push
scas
scas
mov
jae
decb
sub
sbb
pop
and
add
mov
inc
jle
pop
mov
mov
lcall
out
mov
jmp
and
scas
xchg
in
movl
mov
mov
mov
movzbl
xor
mov
jmp
jmp
stc
jg
cmp
fistpll
add
mov
add
div
push
insl
stos
and
mov
mov
sub
inc
xchg
movsb
js
hlt
inc
dec
insl
addl
mov
fistl
or
pop
mov
or
add
lcall
clc
pop
ja
cld
xchg
sub
and
das
shll
xor
test
movsb
dec
call
int3
xchg
lods
insb
popa
pop
in
or
jp
mov
std
test
int
ds
inc
std
movsb
and
adc
sbb
or
inc
clc
sarl
jle
leave
stc
fwait
pop
add
push
cmp
and
inc
and
cli
imul
add
ret
mov
mov
movl
adc
mov
push
jmp
mov
mov
cmp
leave
inc
xor
repnz
pop
sbb
add
cmp
dec
in
rclb
jl
pop
push
or
icebp
ror
jno
in
loopne
and
mov
cwtl
repz
or
add
inc
test
pop
mov
sub
imul
xor
call
add
push
int
cmp
mov
out
clc
aam
inc
clc
and
in
lds
mov
or
dec
mov
sub
mov
shll
not
push
push
dec
push
push
inc
mov
jbe
jmp
pop
lds
stos
adc
lds
mov
mov
or
cmp
inc
jp
imul
pop
push
xorl
push
adcl
push
andl
call
xor
mov
mov
and
mov
xor
sub
movl
mov
adc
and
or
sub
mov
lea
decl
add
xor
jmp
clc
xor
ret
call
xor
xor
sub
add
test
int
andb
andb
adc
inc
push
fldt
cltd
adc
std
xchg
and
sub
push
sti
ret
shlb
mov
fld
mov
sub
insl
orb
or
mov
jecxz
inc
roll
popa
xor
mov
sarb
inc
sbb
mov
inc
mov
test
insb
es
int3
cmp
push
mov
repnz
add
mov
or
push
lods
adc
xor
mov
push
jbe
xchg
push
out
dec
out
in
sub
dec
jmp
out
hlt
leave
xchg
dec
test
pop
push
mov
mov
pop
sti
mov
add
add
inc
clc
mov
movzbl
adc
mov
mov
subl
jmp
add
out
out
sbb
and
mov
loopne
pop
in
sbb
add
mov
add
int3
push
jne
clc
pop
ficomps
jmp
cmp
mov
push
push
out
out
jmp
mov
addr16
xor
mov
and
les
ret
in
cmp
testl
inc
std
or
popa
jmp
dec
repnz
ds
cmp
fstp
inc
mov
cmp
rorb
sarl
fwait
xor
icebp
fdivr
sbb
adc
jo
cltd
in
or
outsl
add
cmp
add
inc
push
aaa
stos
adc
sub
dec
and
sbb
out
mov
nop
popa
rclb
out
cmp
ret
xor
mov
or
jmp
jns
mov
leave
scas
mov
cmp
add
inc
es
cs
or
add
das
mov
adc
ret
pop
pushf
or
mov
popa
mov
ret
scas
cmp
outsl
out
inc
pop
mov
int
data16
or
imulb
jmp
xchg
filds
sub
jl
lcall
mov
and
outsl
mov
sti
mov
adc
sbb
fdivs
decl
xchg
sub
cmc
xchg
icebp
dec
shlb
jmp
adc
cmp
popf
and
jb
imul
shll
dec
lret
fs
lods
mov
jge
sahf
pusha
adc
fwait
add
sti
mov
mov
mov
sub
xor
mov
cmpl
jb
movzwl
and
jmp
push
call
mov
jmp
pop
push
ljmp
sarb
repz
add
mov
rcrl
fwait
cmp
cmp
and
or
fsubl
dec
pop
sbb
js
pop
mov
and
pop
fsts
push
ror
das
inc
sbb
int
ss
push
mov
into
cmc
sub
jmp
adc
pop
daa
add
pop
movsl
and
pop
add
test
adc
cmp
push
outsb
mov
inc
xlat
push
and
add
mov
fcompl
adc
push
ret
xlat
mov
pop
cmp
inc
sarb
pop
pop
xor
pop
insl
add
loopne
je
dec
adc
cmpsl
daa
fwait
push
xor
mov
jmp
pop
add
dec
out
scas
dec
and
and
push
push
add
mov
lds
pusha
jae
pop
inc
ljmp
inc
gs
stc
cld
rcl
lcall
movsl
lcall
in
negl
mov
jl
push
cmpsl
sub
xor
aas
aad
cwtl
imul
jcxz
fimuls
or
mov
loopne
and
inc
inc
sub
sti
aas
sbb
cld
cmp
push
push
jo
sti
aas
jle
inc
mov
push
lock
ds
pusha
bound
inc
push
lods
push
sub
jp
cmp
inc
lock
cmpsl
in
or
aam
orb
stc
mov
push
dec
in
nop
daa
push
aaa
mov
aaa
mov
push
es
xor
xor
jmp
hlt
ljmp
cmp
mov
lahf
imul
add
inc
loop
add
adc
and
repnz
sub
shr
scas
shrl
jmp
das
cltd
test
cpuid
pop
xlat
cmp
push
push
inc
jge
icebp
mov
jae
aas
mov
test
pop
fnstsw
out
and
add
addr16
enter
sub
out
fwait
or
cltd
push
mov
inc
in
lret
insb
popf
xor
add
std
stos
repnz
inc
and
jecxz
push
push
lds
cmp
xor
add
cmpsb
fdivl
pop
std
cmpsl
mov
adc
lds
inc
sub
lods
cmp
push
mov
push
call
pop
dec
lret
loop
fiaddl
test
lea
mov
cmpl
ja
incl
jmp
pushl
call
jmp
mov
push
xchg
idivb
or
add
mov
dec
cmpsl
fwait
cmpsb
push
ds
mov
push
stos
fwait
mov
and
in
and
push
sti
sbb
push
fdivs
push
sti
loope
lcall
pop
push
out
cmp
int3
mov
fs
iret
rclb
add
data16
push
or
ror
adc
inc
loopne
mov
lea
pop
aam
es
ss
pop
daa
mov
mov
sub
push
jno
test
icebp
xor
ljmp
addr16
sub
mov
xchg
jb
add
xor
sub
ret
mov
dec
mov
mov
jmp
push
nop
mov
mov
loope,pn
dec
fadd
dec
fbld
add
mov
les
jl
mov
movsb
push
mov
stc
sbb
movsl
pop
divb
and
loopne
xchg
pop
mov
and
dec
cmpsb
bound
in
and
mov
icebp
loop
repz
mov
xor
dec
scas
push
sbb
xchg
fcmovu
in
scas
sbb
mov
jmp
pop
mov
and
and
sub
and
movsb
mov
inc
xor
push
push
sbb
fdivrl
andl
int3
aaa
cwtl
mov
xchg
jg
mov
inc
adc
addl
mov
add
jmp
hlt
mov
out
pop
sbb
and
pop
jp
ret
dec
inc
ja
sub
imul
mov
sbb
mov
adc
mov
jmp
adcb
idiv
out
fistpll
ljmp
lcall
add
rorb
sti
shrb
es
outsl
push
insb
pusha
sbb
cmp
outsb
insb
fs
pop
popa
xor
lea
cli
cmpsl
andl
push
push
xchg
insb
xchg
pop
xor
sahf
notl
imul
in
mov
sbb
gs
ja
cmp
int3
addb
and
lret
ret
mov
pop
inc
sub
jp
sub
fs
jae
mov
lods
loop
fcomps
ficoml
inc
xchg
ror
dec
jnp
pop
dec
aad
mov
jle
add
push
int
pop
inc
sbb
pop
in
mov
or
adcl
xor
sbbl
sub
add
movl
cmp
mov
mov
movl
jmp
and
jae
push
in
or
push
and
add
pop
out
mov
or
mov
push
mov
lret
lcall
dec
add
xlat
xchg
les
iret
test
test
jo
push
ret
add
je
mov
jne
adc
mov
push
jno
repz
scas
sbb
sbb
aam
adcl
stc
sahf
fbld
jp
mov
xchg
ror
dec
hlt
popa
xor
gs
mov
out
in
mov
dec
push
mov
push
jmp
arpl
mov
rorb
sub
leave
add
fwait
mov
pusha
pop
jg
sub
jmp
outsl
and
cmp
add
fisubrs
and
add
gs
xor
push
les
jnp
mov
xor
push
dec
xlat
xchg
or
sbb
pop
cmp
and
sub
stc
push
addb
xchg
add
imul
add
cld
dec
and
sbb
repz
lahf
rcr
sbb
daa
jae
jno
xchg
mov
adc
cld
and
jle
add
fisttps
lret
lock
insl
rolb
or
insb
gs
aam
xchg
or
ss
fwait
ret
or
lock
pop
or
mov
fistpll
mov
dec
and
mov
inc
fcompl
adc
mov
neg
mov
xor
jmp
addl
fistps
lret
nop
xor
and
add
inc
loope
jg
sub
push
mov
lret
call
cli
add
ret
cmp
clc
mov
hlt
mov
mov
xchg
or
xor
imull
lret
mov
enter
xor
fimuls
mov
mov
les
inc
rep
loop
cmc
ds
movsl
sarb
xchg
lret
dec
in
cmpl
push
adc
js
add
sbb
comiss
fwait
je
mov
fidivrs
xchg
or
fwait
arpl
sarl
add
inc
scas
add
jmp
repz
sbb
repz
or
xor
and
add
imul
fisttpl
aad
les
jmp
jl
push
push
icebp
sub
jecxz
idivl
sti
dec
pop
rcr
jo
fs
jl
and
nop
pop
pusha
iret
imul
push
xchg
or
jb
fiaddl
loopne
out
inc
popa
push
jnp
adc
mov
popa
pop
int3
ficompl
sub
popf
jbe
pop
lea
xchg
loopne
lods
adc
popa
outsb
sti
push
lock
mov
cmp
aam
cmp
push
pop
leave
sub
xchg
push
enter
inc
pop
sub
sub
decl
mov
pop
lods
or
imul
aad
fldt
imul
jb,pn
scas
mov
jmp
jo
inc
dec
jbe
jle
repnz
nop
xor
and
add
add
jo
inc
push
stos
dec
hlt
scas
ficomps
sub
pop
add
scas
jnp
imul
inc
imul
dec
movsb
or
pop
lahf
mov
imul
jmp
or
and
or
jle
gs
inc
or
xor
pop
stos
push
outsl
push
jns
idivl
pop
jmp
pop
repz
popa
cwtl
pop
and
ss
das
cs
repz
or
inc
jne
ficomps
xor
movsb
cmp
ret
sbb
mov
and
jnp
dec
adc
sbb
jo
add
cmp
out
bound
mov
iret
mov
inc
mov
movzwl
and
jmp
pop
ds
sti
jg
cmp
popf
insl
cld
and
add
lcall
lret
sbb
ja
lods
dec
push
push
inc
addr16
jae
shrl
cmc
fadd
or
mov
xchg
xchg
sbb
jl
or
pop
xlat
mov
call
dec
jge
pop
mov
ljmp
inc
fimuls
xor
notl
jle
repz
cmpb
fldenv
scas
mov
cmp
aad
mov
lahf
in
sub
aam
mov
and
mov
nop
jbe
mov
mov
cmp
xchg
dec
inc
in
or
ds
mov
cltd
adcb
les
aad
js
imul
cmp
dec
sub
not
sub
mov
sub
imul
sub
mov
movzbl
or
mov
orl
jmp
icebp
out
in
std
test
cmp
mov
mov
xchg
push
sti
shlb
imul
repz
out
leave
stos
in
cmp
mov
xor
or
xor
pop
push
dec
mov
scas
aaa
inc
push
paddusw
or
lods
scas
mov
push
aam
inc
mov
call
sub
outsl
ret
pop
addr16
aaa
and
enter
pop
mov
adc
mov
cmpsb
dec
push
add
lahf
cmpb
jno
test
mov
les
jp
lea
mov
loope
mov
add
jl
mov
in
int
sub
xor
sub
movl
jmp
mov
mov
and
mov
mov
cmpl
ja
sbbl
dec
jmp
pushl
push
push
push
call
mov
xor
mov
mov
mov
adcl
jmp
jg
dec
jne
cmc
jg
mov
inc
pusha
pop
jb
add
mov
sarb
cmp
rorl
ljmp
sbb
pop
stos
ret
ret
sub
xchg
push
adc
aas
ss
xor
das
lock
push
sarl
rcl
sub
popa
rcrb
mov
inc
aad
cmpsl
hlt
dec
and
aam
insb
dec
out
xchg
xchg
inc
cmp
jmp
xchg
fwait
lea
cli
ja
sbb
pop
pop
jae
xchg
decb
sbb
movsb
add
pop
scas
dec
fnstenv
out
xorb
shlb
sbb
adc
hlt
popa
push
mov
mov
out
aas
add
xchg
jmp
je
jne
std
jg
push
inc
or
sub
add
add
cmc
xor
into
sbb
or
or
xchg
rorb
sbb
xor
jg
sarb
ret
scas
icebp
test
push
int3
jnp
lods
jno
out
repnz
cs
and
cmp
adc
ret
aad
xchg
test
dec
mov
subl
sub
in
jb
out
fidivl
xor
sbb
imul
dec
mov
sti
adc
cli
xchg
dec
fistps
mov
push
push
insb
sub
ud0
dec
mov
inc
jae
mov
sbb
ret
pop
ljmp
fidivrs
pop
iret
push
cmpsl
adcb
sarb
dec
dec
xchg
movb
inc
add
jmp
mov
mov
call
retw
cltd
mov
call
add
add
test
shrl
scas
dec
mov
idivb
pop
pop
cmp
scas
or
mov
sbb
js
sub
pop
arpl
ljmp
int3
xor
inc
or
mov
dec
cli
stc
or
mov
mov
xchg
xor
pop
mov
outsb
add
mov
cld
out
shlb
cld
das
mov
cmp
jno
repnz
dec
pop
push
aam
in
mov
loopne
int3
std
es
inc
add
push
js
push
mov
mov
mov
lea
xor
jmp
mov
jbe
out
xchg
aad
outsl
dec
test
mov
add
add
sub
jns
jb
dec
insl
arpl
jle
jle
imul
aam
adc
adc
inc
or
dec
xchg
std
fstp
adc
add
and
in
dec
cmp
xor
mov
cs
lea
and
decl
add
mov
clc
and
arpl
enter
daa
ret
sub
inc
xor
sub
out
in
or
fmul
stos
dec
sbb
lock
jmp
inc
cmpsl
lods
xchg
mov
data16
add
outsb
ret
mov
push
mov
or
test
dec
movl
pop
push
sub
adc
and
inc
add
adc
sbb
jmp
test
cld
sub
sub
xor
cmp
add
mov
add
loope
dec
mov
fiaddl
add
jnp
scas
enter
inc
icebp
and
sbb
push
addl
add
js
and
mov
mov
lcall
mov
add
imul
leave
loopne
fsts
inc
or
adc
hlt
out
mov
or
pushl
pop
pop
dec
out
sti
rorl
jle
std
js
repz
sub
mov
push
in
xchg
push
std
fcom
leave
cmp
inc
mov
pushf
push
lods
std
add
imul
pushf
mov
scas
jmp
rorl
jmp
decl
sub
inc
add
jbe
jmp
pushl
call
movl
mov
movl
mov
jmp
push
or
pop
fcmovnu
iret
jg
pop
fiadds
xlat
add
sbb
add
mov
fistps
adc
scas
ja
lea
stc
mov
data16
push
mov
xor
sbb
stos
push
mov
out
mov
pop
mov
notl
xchg
xor
sbb
adc
pop
sarl
mov
jns
jecxz
icebp
xor
pop
or
lock
jecxz
std
push
sub
rcr
test
push
adc
sub
push
rcrb
add
cmpsl
push
mov
sbb
decl
xchg
and
je
push
iret
arpl
and
and
mov
push
int3
popf
cwtl
jmp
cs
pop
test
aam
and
outsb
jae
jns
push
movl
mov
mov
decl
mov
cmpl
jle
jmp
call
xor
lea
mov
mov
mov
mov
xor
adcl
mov
mov
adc
jmp
call
jbe
mov
pop
loopne
in
sub
add
fs
notb
cld
add
jmp
out
inc
jno
ja
js
inc
sbb
or
sarb
cmp
adc
gs
aas
ffree
mov
cmc
push
mov
int3
addr16
xor
test
mov
into
icebp
mov
push
aam
mov
cmpsb
mov
insb
xchg
es
or
das
jg
je
dec
pop
mov
unpckhps
cmp
sbb
pop
mov
dec
push
shrb
push
xchg
jg
xor
inc
and
addr16
cmp
mov
pop
sbbb
lret
cli
popf
cmp
mov
test
imul
mov
inc
adc
add
push
add
jmp
lods
mov
mov
ds
bound
pop
mov
add
ss
jg
add
inc
ljmp
call
cld
je
mov
mov
xlat
int3
mov
dec
mov
cld
lea
imul
btr
ss
dec
or
vandps
in
aaa
push
mov
out
mov
mov
inc
mov
loope
inc
mov
repnz
cld
bound
xchg
jp
add
push
adc
push
ja
test
ret
inc
lret
test
bound
addr16
fidivrl
stc
fsubrs
sbb
faddl
mov
outsl
data16
gs
mov
pop
mov
loope
js
push
sub
mul
aaa
pop
cltd
xor
cmpl
jge
jmp
pushl
push
pushl
push
push
call
jmp
dec
or
arpl
neg
sub
sub
fidivs
dec
dec
sub
add
lcall
or
pop
mov
adc
xchg
out
in
iret
mov
mov
insb
mov
jns
lods
ficoml
loopne
sahf
loopne
js
sub
mov
scas
sub
das
cmc
jge
adc
roll
out
inc
daa
popa
xchg
cmc
adc
jo
dec
out
aas
mov
jg
adc
push
repz
xchg
xor
lea
xchg
fidivs
cld
enter
jle
outsb
pusha
pop
push
add
sbb
push
pop
aad
cmc
inc
mov
lods
cmp
int
addr16
or
inc
jle
xor
shlb
cli
leave
xor
cld
into
xchg
insb
mov
xchg
mov
mov
xor
lea
jmp
inc
add
ja
gs
add
mov
or
mov
fidivrs
pop
jns
jge
cmovb
popf
sub
mov
xchg
push
cmp
lea
ljmp
jo
push
cmc
inc
xchg
or
stc
or
stc
jl
fsubrl
mov
and
out
test
fistl
sbb
sub
sub
pop
add
xchg
mov
pusha
loop
sbb
mov
mov
pop
rcrl
adc
repz
dec
cmp
test
mov
push
adc
outsl
out
sbb
jns
mov
cmp
push
and
addr16
push
pop
ret
and
leave
imul
fwait
mov
jno
mov
jmp
jno
wbinvd
pop
das
ja
repnz
sbbl
add
mov
out
mov
jo
jno
out
shll
xor
pop
add
scas
inc
sub
mov
or
lret
addr16
and
push
mov
das
pop
inc
push
insb
or
mov
nop
decb
cmc
mov
cmc
out
into
lods
nop
mov
pop
sti
divl
insb
repnz
jnp
adc
es
clc
mov
imul
stos
rorl
loop
mov
inc
cltd
cltd
jmp
or
das
sahf
jno
call
mov
rolb
pop
sbb
clc
cmp
or
and
mov
and
roll
add
imul
jae
imul
fdivs
ret
in
das
add
mov
dec
jne
andb
inc
out
cmp
stc
pop
mov
xor
into
push
ja
or
daa
add
cmp
cmp
fldt
lea
add
addr16
fbstp
mov
xor
pop
mov
push
xor
cld
dec
mov
sub
movsl
jmp
ffreep
loopne
add
jmp
scas
sbb
fs
pusha
jb
jns
orl
ficoms
jecxz
sub
int3
adc
pop
xor
les
xor
imul
and
out
adc
xor
or
sub
mov
test
nop
mov
mov
addl
jmp
sbb
jge
xor
push
add
mov
cmpsl
push
pusha
mov
ret
ja
aas
lds
fiaddl
or
stc
lds
aad
inc
mov
push
notl
inc
lods
jae
daa
shr
sub
cmpsb
out
pusha
cmpl
cmc
aaa
mov
xor
xchg
dec
into
sub
icebp
hlt
jb
scas
mov
popa
push
and
imul
or
icebp
ret
mov
adc
js
imulb
cmp
pop
pop
je
test
sbb
mov
mov
sbb
inc
sarb
fwait
mov
sahf
sbb
or
sub
shrb
sahf
jno
inc
rol
stc
cmpl
nop
mov
pop
mov
ja
jnp
into
fwait
jge
xor
mov
mov
movl
xor
mov
or
jmp
stos
ficompl
in
aad
cld
fldenv
mov
dec
inc
pop
aas
push
adc
repnz
jg
xchg
or
add
aad
cmp
lds
imul
scas
mov
ja
push
ja
jae
xchg
xor
adc
aaa
ficoms
jns
lds
xor
sub
and
js
imul
loope
xor
int
pop
test
dec
imul
mull
xor
int3
stos
adc
dec
push
idivl
lds
pushf
dec
mov
stos
xchg
mov
xchg
xchg
sbb
jmp
stos
sahf
push
inc
sti
pop
mov
mov
jg
cmp
add
and
inc
add
roll
add
fstpt
inc
out
fistpll
add
add
mov
inc
xchg
jae
sti
enter
mov
fsubrp
insb
leave
pushf
add
out
jmp
or
fnstsw
into
add
es
jmp
addr16
bnd
sub
fsub
outsl
lret
div
push
cltd
popf
aaa
popa
dec
stos
popl
pop
lea
lds
repnz
jae
and
aam
nop
test
sub
sub
outsb
fwait
sti
inc
sbb
movsb
push
stos
mov
inc
into
and
pop
jg
xchg
fwait
int
inc
fstl
mov
mov
mov
out
fistpll
mov
push
add
lock
sbb
mov
pop
xlat
xchg
xor
add
add
insb
lds
out
iret
in
mov
adc
xor
add
mov
shl
shrb
je
nop
mov
in
pop
lret
sub
bound
xchg
inc
lret
adc
pop
shrb
or
or
adc
mov
xlat
xor
adc
sahf
sub
fdivp
pop
es
lret
out
rorb
outsb
pop
dec
jl
testb
ss
std
mov
inc
repnz
mov
inc
sahf
cmc
adc
cmpsl
sbb
pop
je
xor
lret
enter
shl
xchg
pop
popa
ja
pop
xor
cmpsl
xchg
jbe
jae
xchg
add
pusha
and
icebp
jl
gs
cwtl
mov
sbb
movsb
je
dec
ja
stc
lcall
fs
cmp
inc
add
add
mov
xor
shlb
mov
inc
add
roll
add
lods
sub
dec
scas
dec
in
ljmp
sub
add
mov
mov
out
mov
pop
clc
cli
pop
scas
cwtl
mov
sbb
repz
sarl
dec
sbb
sbb
movsl
int3
sysret
nop
sbb
jb
or
cltd
into
imul
loop
adc
out
xor
pop
mov
mov
mov
dec
xor
cmp
popf
cwtl
loopne
enter
jl
je
nop
das
loope
les
scas
sbb
aas
idiv
cmp
in
popa
leave
push
push
outsb
dec
jmp
add
xchg
mov
cmpsl
and
fwait
nop
aad
lret
jle
lds
xchg
lock
cmp
mov
adc
cli
imul
movsb
dec
mov
mov
mov
jmp
xchg
pop
sbb
stc
mov
dec
in
sbb
fnsave
add
mov
cld
jne
sub
cmp
and
mov
stos
push
and
xor
scas
mov
inc
jae
fwait
lods
mov
sbb
adc
lock
lret
stos
or
fisttps
add
inc
outsl
outsb
pop
mov
add
hlt
sub
lds
pop
lcall
movsb
or
popl
lahf
iret
movsl
mov
jg
pushf
xlat
adc
pop
mov
adc
mov
and
sub
ja
enter
icebp
sub
dec
dec
stos
fdivr
jl
cmp
mov
cwtl
fsin
aam
out
fadds
xor
cmpsb
sahf
ffreep
out
std
or
out
mov
cld
mov
xor
clc
xor
orl
jmp
test
fildll
in
mov
in
fimull
mov
mov
out
adc
inc
ja
dec
fs
jnp
jl
cli
ret
sub
aad
sub
fst
or
in
mov
sti
mov
xor
nop
scas
fisubrl
outsb
jnp
cmp
cld
nop
push
int3
adc
and
mov
cltd
aaa
cmp
imul
mov
mov
sbb
shrb
jge
and
das
into
ret
rcl
sub
mov
or
icebp
sub
sbbl
leave
xor
pop
in
push
pusha
mov
ret
inc
rcrl
pop
fistpl
pop
insl
mov
sub
dec
sbb
mov
inc
add
add
mov
sbbl
xor
cmpl
jbe
subl
jmp
push
call
jmp
xor
dec
jg
jg
lahf
outsb
xor
xor
add
and
push
imulb
sahf
jl
subl
cmc
into
in
jae
cs
dec
je
cmpsb
outsl
xchg
push
repz
mov
cmp
lcall
pusha
inc
pop
or
mov
sbb
cmpsl
adc
mov
cltd
rcr
adc
push
cmpsl
lret
fiadds
pop
xchg
pop
add
mov
inc
ret
mov
add
outsb
mov
sub
addr16
adc
dec
jle
mov
leave
out
pcmpgtb
fwait
cwtl
outsb
lds
pop
gs
push
xchg
pop
inc
xor
sub
fwait
jle
jne
mov
inc
mov
inc
mov
mov
dec
mov
add
mov
mov
jmp
lcall
fbstp
cmp
fistps
mov
push
jnp
ror
xchg
xchg
imul
lret
rcll
in
ss
std
push
aas
hlt
leave
mov
lahf
into
dec
push
mov
sbb
cmp
pand
loop
ret
sub
leave
in
pop
cmp
mov
cmp
dec
push
sti
test
mov
in
pusha
js
push
and
xchg
push
mov
insl
ljmp
ds
cmpb
cmp
cmp
loopne
fsubrp
xchg
dec
cmpsb
out
adc
lods
mov
lea
movsb
mov
adc
or
stos
pop
in
pop
mov
sbb
dec
adc
fbstp
stc
push
dec
pushf
or
jmp
jae
sub
inc
fwait
xchg
imul
add
add
push
or
sub
or
sti
rolb
into
or
shlb
jl
dec
jae
fwait
xor
mov
pop
push
imul
sbb
xor
and
call
cmp
aas
int
in
sub
sub
xor
adc
rorb
call
lods
dec
sbb
ss
ret
iret
push
neg
mov
pop
push
add
rcrb
dec
popa
in
or
gs
pusha
enter
jl
sbb
sbb
cs
icebp
dec
or
mov
mov
and
mov
orl
mov
subl
xor
mov
mov
xor
mov
jmp
je
lea
scas
sti
push
stos
xor
jne
test
add
mov
jle
gs
fistl
mov
mov
sub
sub
xchg
mov
push
adc
int
xchg
pop
ficoml
mov
sarl
mov
pop
pop
std
and
add
lock
cmpsl
mov
add
jge
mov
outsb
into
and
enter
xchg
aad
test
cli
mov
and
popf
or
mov
push
and
push
adc
iret
push
cmp
or
sbb
jnp
mov
out
push
in
ret
sbb
aas
pop
fisubrs
or
mov
cmp
jl
push
cmc
mov
cwtl
mov
cmp
push
mov
xor
mov
add
jmp
dec
xor
dec
dec
stos
jmp
inc
cmp
addr16
cmp
add
cmpl
fadd
fstpt
and
mov
sub
cli
sub
mov
adc
lcall
push
jmp
leave
lods
pop
mov
push
fwait
jecxz
inc
arpl
fcoms
adc
push
push
fdivr
js
push
jmp
shr
scas
enter
fxch
mov
adc
int
jmp
push
xor
imul
add
daa
inc
inc
dec
or
fidivrs
or
pushf
aaa
mov
inc
loope,pn
lcall
xor
ljmp
xchg
icebp
push
sub
or
in
and
movsb
lock
subl
inc
lcall
shlb
ret
add
add
push
mov
mov
leave
sub
cli
cmp
add
or
aad
fsts
pushf
sub
mov
imul
and
push
mov
sub
stos
and
mov
add
and
add
mov
fstpt
popf
insl
stos
inc
lcall
sub
pop
fldenv
shll
leave
jne
dec
xchg
nop
cmp
jecxz
pushf
imul
pop
cmp
bound
mov
inc
cmp
push
or
sub
mov
or
fs
xchg
adcl
jl
push
sahf
adc
cmp
mov
mov
mov
lods
xchg
sub
fnstsw
push
or
push
mov
out
jno
hlt
or
xchg
jle
mov
mov
jmp
pop
xor
stc
ja
aas
fsubp
fs
mov
xchg
adc
out
cmp
sbb
cmp
adc
xor
xor
mov
adc
xor
incb
dec
fwait
xor
insb
sbb
mov
fisubrs
js
cmpsl
xchg
sub
call
imul
sbb
lds
sub
add
shll
dec
int3
push
aas
loop
inc
ds
ret
mov
cmp
je
push
mov
movmskps
popa
pushf
adc
lods
outsl
test
push
adc
std
lahf
push
inc
mov
mov
dec
das
lock
dec
xchg
dec
lods
es
add
xchg
sub
mov
mov
xor
mov
add
mov
cmp
je
mov
sub
jmp
mov
scas
popf
ret
sarb
cmpsl
push
mov
jo
add
mov
jmp
int
les
mov
out
rcll
or
int3
jmp
mov
idivl
das
push
flds
out
xlat
pop
test
gs
movsb
cmp
push
and
add
imul
sti
sbbl
nop
push
pop
rorl
mov
fs
jnp
lods
clc
nop
popf
inc
cli
cmc
repz
fisubrs
sub
xlat
add
stc
imul
inc
arpl
cmp
fs
test
dec
popf
pop
out
cld
out
cmc
std
push
pop
pop
mov
outsl
dec
inc
call
xlat
inc
sub
inc
jno
std
jns
push
fistpl
sbbb
mov
inc
cld
mov
mov
xor
xor
jmp
mov
pushl
or
lahf
sub
add
mov
popa
xor
cmp
std
sbb
imul
ror
pop
and
cmpl
pop
lods
pop
ret
dec
add
out
xor
pop
xchg
adc
in
sbb
or
jmp
lds
xor
xor
sub
inc
out
in
cmpsl
cmp
inc
outsl
jmp
xor
pop
jmp
insb
es
sub
loopne
inc
lds
mov
cmp
mov
ds
or
loopne
xor
mov
cs
mov
sbbl
jne
mov
and
andb
mov
ja
lcall
push
mov
mov
add
popa
push
xchg
stos
ljmp
shlb
mov
mov
add
sti
arpl
movsb
inc
inc
in
mov
sbb
int3
inc
xor
fcomps
ljmp
jb
mov
loop
inc
dec
pop
push
pop
hlt
cmp
jb
pand
jno
in
xor
mov
mov
stos
fidivs
in
pop
iret
icebp
or
data16
jl
jecxz
fldl
pusha
mov
adc
dec
adc
or
stos
cmpsb
jmp
xor
or
mov
cmc
and
ficoms
stc
shr
sti
pop
mov
aad
push
test
cmp
mov
jb
sahf
scas
repz
adc
frstor
enter
jno
gs
adc
mov
mov
jmp
mov
stos
out
out
ljmp
mov
add
add
cmp
ret
mov
jecxz
add
push
xor
xchg
mov
loope
mov
push
pop
and
hlt
clc
mov
cmp
push
mov
aad
out
in
add
aaa
push
leave
aas
cwtl
mov
mov
lods
or
aad
loop
xlat
cmp
jl
inc
ljmp
dec
test
iret
fdivr
sbb
jmp
hlt
fcoms
jns
lahf
cmc
adc
pop
mov
fldenv
add
gs
testl
repz
push
in
mov
sbb
imulb
mov
dec
fwait
push
cltd
xchg
mov
push
sbb
push
add
xor
add
adc
mov
cmp
jne
jmp
ret
sti
push
jg
xor
or
pop
cmp
add
stos
xor
mov
int
mov
mov
xchg
aas
andb
add
jg
inc
mov
fwait
inc
pop
hlt
mov
mov
mov
add
mov
lock
cmpsb
add
jae
mov
lods
shll
xor
add
les
out
arpl
bound
aam
jecxz
pop
sbb
jle
add
out
jnp
sbbb
dec
sbb
xchg
adc
roll
jbe
or
push
je
pop
add
adc
aaa
dec
jne
xor
mov
pop
insb
lods
or
or
lods
stos
incb
pop
push
mov
cmp
je
jmp
jmp
jo
cld
add
sub
or
xor
add
mov
mov
xchg
dec
xchg
loopne
push
inc
stos
jge
xchg
negb
notb
mov
or
dec
imul
in
ss
mov
xchg
add
xor
and
pop
cltd
test
lret
lret
fidivrl
jg
xchg
ljmp
mov
jg
nop
int
imul
inc
adc
push
orl
test
nop
ficoms
mov
nop
negb
and
cmp
pop
sbb
pop
es
jno
mov
and
loope
sbb
fucomip
lret
cmp
into
sbb
dec
lods
fisubrl
pop
in
xor
sub
mov
mov
xor
xor
jmp
xchg
push
jg
fldenv
int
int3
sarb
add
mov
mov
in
add
mov
dec
push
cmp
fmul
arpl
imul
or
sub
cwtl
xchg
fmuls
outsl
mov
pop
xor
sub
and
shlb
repnz
jge
test
ds
les
xchg
aam
lds
sub
mov
sub
mulb
push
and
aam
add
mov
dec
cs
and
and
pop
fldenv
dec
dec
rcr
xlat
jb
jb
gs
fldcw
mov
frstor
inc
mov
push
mov
mov
ss
movsb
inc
loope
test
push
bound
lret
jnp
xchg
inc
shlb
stos
pop
dec
sbb
mov
lea
add
mov
mov
jmp
shr
adc
aas
xlat
out
jb
cmp
or
aas
add
mov
hlt
sbbb
ffree
jg
inc
pop
and
sbb
pop
pop
xor
and
rorb
mov
jg
jnp
aas
fistpl
xor
aas
mov
add
ljmp
dec
xchg
jl
rorb
clc
fs
push
dec
divl
mov
pushf
mov
and
or
mov
xchg
add
adc
cs
mov
out
or
rorb
out
in
push
jb
ljmp
dec
sbb
sbb
push
mov
push
jecxz
xchg
fs
out
shl
shlb
pop
lea
mov
mov
jmp
test
cmp
mov
pushf
aas
cmpsl
cmpsl
dec
xor
add
mov
jns
add
lea
and
shlb
bnd
jl
cmp
adc
and
xchg
dec
fwait
push
pop
mov
xchg
mov
pop
sub
mov
test
lods
lea
pop
jo
int
or
sbb
jecxz
push
and
bound
mov
out
or
fadds
cld
enter
add
roll
mov
jmp
fwait
jno
decb
popa
ds
test
mov
iret
fbstp
hlt
int3
jp
mov
xor
movsl
les
pop
sub
fdiv
and
popa
mov
test
adcl
mov
sbb
dec
bound
lea
add
add
add
push
add
adc
xor
fcom
jp
inc
add
mov
lahf
in
xchg
mov
mov
adc
out
mov
xchg
and
shl
call
pop
fs
in
aas
cmp
bound
ss
adc
shrb
imul
mov
mov
out
pop
mov
das
out
pop
cmpsl
xchg
and
out
sbb
xchg
mov
js
lret
xchg
and
loopne
lock
xlat
dec
sub
jecxz
dec
fstpl
inc
aas
rcll
cmpsl
sub
jbe
jge
adc
jle
stos
addr16
fcoml
lds
xor
aad
dec
inc
cmp
test
push
stos
ja
movsl
cmp
jne
mov
jmp
inc
mov
cmc
ljmp
idivl
mov
mov
add
add
data16
rcrl
xor
call
push
xchg
arpl
cmpsb
xchg
shrl
cmpsb
mov
inc
mov
repnz
lea
or
add
inc
dec
stos
sbb
test
int3
cltd
daa
fadd
mov
js
ss
xchg
lods
loop
push
mov
sbb
and
mov
dec
inc
sub
push
pop
jne
mov
ror
push
test
cs
and
mov
fucomip
cmp
sahf
insb
xor
mov
push
xor
imul
arpl
xchg
loope
mov
mov
mov
imul
loopne
pop
test
sbb
test
inc
or
cld
mov
lea
jmp
mov
pop
sarl
out
or
add
add
mov
in
clc
ja
lea
sub
jno
fwait
xchg
jecxz
and
adc
push
mov
enter
or
sbb
cld
pop
sub
ljmp
movlhps
das
jle
jbe
imul
mov
or
repnz
ror
adc
mov
aaa
aad
dec
push
push
add
jne
cmp
add
push
pop
lods
pop
push
mov
and
insl
mov
jge
xchg
push
add
js
dec
in
inc
imul
scas
mov
loope
inc
dec
add
push
pop
cmp
cmpsl
outsb
mov
xchg
push
iret
pop
and
inc
rcr
sub
out
sub
mov
mov
mov
jmp
lcall
out
pop
ss
addr16
aas
int
inc
add
mov
in
ds
pusha
aaa
adc
push
jo
xchg
or
test
out
ret
testb
cmp
push
test
scas
push
test
jo
xchg
cmp
je
popf
mov
lcall
loope
cmp
lock
fsubl
jnp
pop
fs
lret
fwait
jge
insl
pop
int
push
lret
es
test
je
or
push
cmp
sti
flds
loop
mov
inc
ret
shlb
push
cmpsl
cmp
xchg
push
sub
imul
dec
adc
pushf
fstps
dec
out
jle
jp
or
cmp
jnp
mov
mov
xor
jmp
ret
out
push
popf
js,pt
in
fwait
mov
inc
add
mov
dec
cs
dec
scas
cwtl
aaa
push
mov
xchg
aad
imul
mov
dec
mov
xchg
push
xor
or
xlat
mov
aaa
pop
push
or
ljmp
sbb
pop
sub
mov
aam
push
out
andb
push
in
inc
cmp
imul
mov
dec
adc
insl
call
lock
pop
std
add
xor
cld
into
aam
push
cmpb
add
andb
jmp
add
cmc
push
ret
or
mov
xchg
test
adc
lcall
mov
mov
xor
add
adc
jmp
add
mov
dec
adc
or
mov
xchg
inc
or
mov
mov
mov
test
jnp
push
and
or
jmp
mov
jno
pop
sbb
xorb
fs
mov
push
sub
aas
imul
adc
lock
out
jb
addr16
sub
adc
adc
jae,pn
movsb
ficoml
jge
and
imul
jne
xchg
dec
cmp
add
xor
call
dec
mov
cmp
and
fsts
and
or
outsl
cli
outsl
sbb
push
daa
adc
mov
mov
repnz
push
sti
add
xor
mov
mov
mov
mov
xor
mov
cmp
jmp
in
call
in
stc
ja
push
aas
out
mov
mov
mov
pop
fdivrs
xchg
ljmp
cmp
fidivs
jp
jns
xchg
cmp
xchg
inc
pop
jno
mov
adc
jmp
clc
dec
push
cmpsl
jbe
test
es
xlat
jle
or
mov
push
sahf
lods
inc
in
push
cs
loopne
mov
jg
sbb
and
mov
out
mov
push
decl
sbb
xchg
aaa
adc
lcall
addb
pop
inc
int
mov
mov
ss
ss
cmp
fadd
xchg
scas
mov
xor
push
mov
insb
call
jne
mov
jmp
sub
xlat
mov
pop
sbb
add
mov
imull
add
mov
sub
enter
add
and
stc
jne
push
ss
dec
and
sub
mov
xchg
dec
loope
insb
mov
es
sbb
xor
cmp
out
xor
and
cmp
adc
mov
inc
pop
and
adc
outsb
cmp
lcall
pop
sti
pop
popf
ja
push
jge
push
cli
loopne
lods
mov
mov
jmp
loop
or
add
cmp
cltd
and
ljmp
in
jns
push
mov
mov
inc
sbb
test
pop
add
mov
mov
xor
xor
jmp
xor
xor
cmp
addr16
xchg
dec
cld
pop
loop
fildl
add
xor
pop
add
xlat
in
stos
cmp
adc
and
stos
mov
pop
das
aas
dec
scas
ljmpw
xchg
push
sahf
insb
mov
gs
mov
xchg
push
adc
mov
inc
popf
xor
in
dec
stos
enter
fcompp
test
and
aaa
ja
xchg
out
push
pop
lock
or
pop
icebp
fistl
jecxz
lods
lea
rorb
jns
cltd
ja
jo
sub
lds
cltd
and
sti
fdivl
push
add
push
inc
dec
lods
int3
aaa
sub
pop
sahf
push
sub
inc
mov
mov
pop
jne
popa
popa
mov
add
mov
jmp
ss
in
out
mov
dec
and
ljmp
add
add
lcall
fs
jge
call
jnp
cmp
decb
sub
mov
mov
insl
jmp
sub
xchg
push
call
pop
dec
push
movsb
fldt
or
inc
or
push
adc
call
inc
loopne
jp
scas
cmp
or
imul
insb
sar
sbb
xchg
std
cmc
in
and
and
lcall
out
and
mov
jge
mov
daa
not
mov
pusha
pop
xchg
int
jns
xchg
cmp
pushf
test
mov
fldcw
dec
mov
mov
rorb
add
roll
add
and
jne
pop
mov
and
aas
add
ret
push
dec
add
mov
sbb
push
push
repnz
xchg
sbb
clc
les
in
pop
ret
lcall
xor
or
das
stc
jl
mov
stc
dec
push
inc
ss
mov
clc
cwtl
out
fsubs
int3
cmp
hlt
ljmp
mov
dec
xor
inc
mov
and
sahf
loopne
lgs
mov
jle
rclb
cmp
dec
scas
addr16
ret
mov
orl
mov
sub
or
js
aam
xchg
out
ret
mov
jg
mov
xchg
sar
lret
ret
adc
push
jmp
sbb
cwtl
sbb
mov
or
add
mov
push
dec
loopne
dec
rolb
lods
push
mov
adc
in
cmp
scas
pop
icebp
sub
sbb
xchg
mov
add
xchg
sahf
adc
sub
outsb
nop
adc
stos
aam
cmp
into
mov
and
push
es
push
inc
lret
inc
adc
add
fwait
sbb
cmp
mulb
insb
or
adc
cmp
mov
dec
mov
and
jne
cld
jb
sub
xchg
or
push
daa
int3
sbb
mov
jle
adc
jmp
scas
mov
inc
xchg
dec
cmp
mov
inc
xor
ret
arpl
mov
addr16
test
in
pushl
push
jmp
cmp
sti
sbb
repz
dec
add
mov
jle
pop
jp
and
xchg
cmpsl
das
mov
aam
and
bound
pop
les
test
dec
popa
cmpsb
iret
dec
cmp
mov
ret
insb
repnz
cmp
mov
or
xor
mov
stc
loope
xchg
scas
lea
mov
scas
lods
push
sbb
popa
add
xlat
lea
cmc
cmc
mov
xchg
shrb
mov
push
hlt
roll
in
mov
imul
add
jle
adc
inc
cmp
mov
enter
in
mov
jbe
cmp
cmp
xchg
jp
sub
jge
sbb
out
fs
lock
shll
push
sub
cld
pop
pop
sub
aas
cmp
push
imul
add
stos
mov
in
in
fisttps
fisubs
dec
add
mov
mov
xchg
popa
xchg
out
sbb
out
xchg
loope
pop
push
sbb
push
jae
add
dec
test
out
xor
and
mov
mov
mov
cmp
jo
or
je
adc
push
popa
shl
mov
pop
xor
sbb
loopne
inc
adc
mov
int3
xchg
push
lahf
clts
sbb
ret
mov
std
sbb
movsl
dec
hlt
pop
mov
cs
or
mov
jg
les
inc
mov
or
faddl
pushf
cwtl
ret
repnz
cmpb
aam
pop
xchg
out
in
andb
lods
movsl
gs
cmpsl
push
lods
ljmp
shll
notl
popf
inc
jmpw
add
cwtl
jns
jns
std
xor
xor
add
add
dec
pop
mov
pop
js
push
bnd
int3
stc
or
jmp
xor
cmp
sbb
add
fildll
inc
xchg
sub
fsubl
ret
jle
andb
nop
mov
xchg
leave
mov
aas
dec
push
jl
or
push
cli
inc
rol
and
scas
adc
shlb
popf
or
pop
rorl
mov
or
sub
notl
mov
xor
jae
pop
and
lods
add
clc
call
push
and
icebp
inc
pop
mov
inc
or
addr16
pop
cld
loop
shlb
jb
decl
add
add
loopne
test
repnz
addr16
dec
add
mov
idiv
mov
adc
and
cmp
outsl
daa
sarb
dec
xchg
call
xor
shl
xlat
popa
cmp
xor
js
sti
pop
xchg
pushf
mov
and
or
and
das
lds
jb
and
out
cli
hlt
or
bound
lret
dec
xlat
fwait
in
push
test
lret
mov
xchg
jo
xchg
jbe
mov
mov
lcall
add
addr16
aad
adc
push
clc
inc
dec
hlt
sub
jns
rcll
pop
sub
inc
scas
ljmp
js
mov
pop
jae
jns
dec
lock
xor
sub
sub
mov
add
push
or
roll
add
into
jmp
fdivrp
sbb
lods
aaa
insl
mov
add
mov
and
cmp
adc
je
call
dec
add
mov
gs
cli
pop
xlat
clc
xchg
aas
mov
mov
outsb
push
sbb
dec
mov
loope
pop
mov
sub
popa
inc
call
pusha
pop
clc
cmp
pop
je
insb
addb
incl
push
insl
pop
push
test
and
sbb
and
out
xor
jae
arpl
lahf
xchg
add
dec
and
movsl
fsubs
pushf
fstp
mov
sti
shrb
mov
xor
adc
cwtl
jg
rorb
dec
mov
sar
jnp
sbb
fisubrs
test
xchg
adc
ljmp
xor
xor
mov
jmp
mov
add
jmp
mov
xchg
jle
fwait
jge
int
or
mov
dec
and
je
lods
test
scas
cmpsb
sahf
sahf
or
loop
je
pop
test
jno
jo
sub
out
data16
jle
test
outsb
fisubrl
lret
inc
dec
pop
in
mov
lods
pop
pop
insb
push
jnp
imul
xchg
xor
add
xor
in
imul
mov
cltd
sbb
push
jae
movsl
pusha
stos
sbb
cli
jge
adc
sub
xchg
pop
cs
sahf
mov
mov
inc
sarl
and
mov
int3
ja
jo
mov
pop
xchg
pop
lahf
mov
lea
add
fs
xchg
jmp
aas
jb
ja
inc
lock
jmp
js
or
ds
jp
push
dec
or
repz
sub
add
mov
sub
shll
lds
fwait
clc
xchg
mov
inc
mov
scas
fmul
aad
clc
out
sub
cmp
call
and
jmp
sbb
mov
mulb
pop
decb
pop
sub
xchg
out
and
imul
and
movsl
xlat
xor
jmp
cmp
xor
inc
imul
push
insb
arpl
shrb
dec
ret
enter
movsl
fwait
cmp
pop
pushf
sub
add
sbb
xchg
fdivl
inc
dec
cmp
adc
fisubrs
adc
pusha
sbb
jl
fwait
jnp
rcrb
mov
movsb
les
push
cld
jmp
or
or
outsl
repnz
std
and
mov
mov
test
test
aaa
and
in
jne
ret
push
inc
add
mov
mov
pop
cmc
push
popf
inc
inc
push
adc
xor
lock
jne
hlt
into
xchg
add
sahf
mov
mov
in
pusha
add
and
add
xorl
je
enter
pop
adc
pop
mov
int3
jg
or
loopne
mov
dec
dec
test
imul
cmp
pushf
cmpsb
lds
or
test
sbb
ja
mov
mov
and
mov
sbb
adcb
movzwl
cltd
add
jmp
fimuls
xor
xor
out
and
mov
je
dec
add
mov
fists
popa
mov
adc
shlb
or
add
mov
sbb
push
loop
sbb
mov
or
fisubl
add
movsb
pusha
popf
and
xlat
xor
add
scas
mov
sub
mulb
stc
mov
push
pushf
pop
jbe
jmp
jmp
insb
sub
cmpsb
pop
insl
test
jo
fdivl
daa
or
iret
outsb
sbb
iret
movsl
insb
push
rcrb
cmc
xchg
adc
popa
pop
sub
js
mov
iret
repz
scas
jne
jecxz
pop
xor
test
ds
fisubs
pop
das
adc
xor
mov
mov
mov
mov
xor
mov
cmp
jne
jmp
sub
mov
pop
inc
pop
or
mov
repz
aaa
or
xor
pushf
rcr
xor
push
enter
sti
loope
lahf
ja
and
mov
icebp
xchg
scas
int
cmp
in
in
adc
mov
popf
roll
sub
push
cmp
adc
fdivs
lahf
mov
shll
add
adc
adc
push
lret
xchg
imul
mov
ds
imul
roll
jg
leave
inc
insl
xchg
lret
icebp
enter
sbb
jle
pop
les
enter
dec
pusha
dec
ljmp
cli
scas
push
mov
and
fcoml
pusha
repnz
jge
das
cmp
cmp
jmp
popa
xchg
xor
std
outsl
mov
loop
pop
ficoms
add
add
dec
in
roll
push
sub
test
cmp
mov
aad
movsb
pop
ficomps
orb
jno
aas
hlt
cmp
adc
daa
andl
lcall
sbb
out
pop
push
xchg
ret
inc
outsl
sbb
jle
lcall
mov
lds
push
jle
push
enter
insl
xchg
pusha
jns
cmp
sar
adc
into
dec
inc
pop
mov
mov
icebp
mov
js
push
icebp
cmc
sbb
negb
adc
gs
mov
int3
xor
push
xor
or
adc
and
inc
mov
xor
and
push
int3
and
sub
sbbl
addr16
add
add
rorl
mov
xor
mull
add
stos
pop
lret
adc
inc
sbb
or
icebp
inc
mov
mov
inc
test
cmpsb
lds
sbb
out
cmp
mov
mov
cmpb
mov
xchg
frstor
sarl
es
gs
mov
jp
jmp
scas
mov
fdivrs
mov
aad
insl
push
pop
pop
push
xchg
pop
cld
fisubl
mov
sbbl
aam
dec
lahf
xchg
pushaw
outsb
mov
mov
mov
and
mov
jns
xor
inc
add
push
sub
push
dec
imul
das
ss
mov
and
ljmp
inc
or
dec
jmp
mov
jmp
jecxz
outsb
loope
jmp
push
adc
xor
int3
mov
add
ret
sbb
adc
push
cld
bnd
or
sub
clts
pop
cmpsl
pop
mov
pop
jb
ds
or
add
add
cmc
or
jae
loop
imul
cwtl
mov
clc
data16
add
sub
cmp
sub
mov
outsb
cmp
fidivrl
mov
jmp
xor
iret
adc
fildl
or
sub
mov
dec
insb
mov
ret
sti
fisubrs
push
fildll
jmp
push
das
insb
jecxz
fnstcw
lahf
inc
cld
in
mov
movl
jmp
or
insl
ja
or
movsb
sti
xor
push
add
mov
pop
jo
lahf
inc
jmp
push
mov
mul
and
cmc
add
mov
imul
movsb
es
mov
iret
inc
inc
mov
je
test
mov
ja
andb
mov
adc
inc
lret
std
int3
cmp
aam
imul
adc
or
cwtl
sarb
sub
or
mov
xor
test
xor
fistps
fstl
xchg
mov
addr16
aas
mov
imul
xchg
shll
sbb
imul
push
les
js
adc
inc
sbb
roll
add
outsl
call
xor
ds
lcall
pop
jp
add
mov
lods
xor
fildl
jg
out
inc
jnp
aas
pop
outsl
subb
jle
sub
movsb
fstpl
xor
mov
dec
xchg
add
sub
push
enter
orl
adc
call
lock
imul
int
mov
cmc
vcmpss
jae
iret
cmp
cmpsb
add
xchg
gs
out
ret
pop
stc
xchg
pop
lcall
sbb
or
xchg
add
adc
mov
xchg
xchg
adc
das
jge
push
pushf
dec
inc
scas
icebp
add
and
aad
jmp
mov
movl
mov
mov
jmp
inc
std
inc
fwait
add
inc
cmp
pop
mov
add
add
xchg
mulb
xchg
ljmp
insb
js
inc
mov
mov
out
mov
push
adc
dec
lret
sbb
mov
cmpsl
xlat
fldl
cltd
data16
or
pushf
dec
sbb
enter
mov
sarb
dec
addr16
xchg
inc
or
roll
cmpsl
mov
push
clc
push
roll
clc
mov
popf
jne
mov
les
jl
insb
mov
xchg
imul
fmulp
stos
mov
test
mov
out
je
shll
pop
leave
ss
mov
mov
mov
fiadds
mov
mov
xor
jmp
mov
mov
mov
push
lahf
ja
add
mov
jmp
and
xor
loope
aad
es
lret
mov
lret
add
loopne
and
ss
cmpsl
lods
ss
subl
movsb
sbb
jg
aaa
hlt
pop
jnp
pop
jnp
in
pop
cmpsl
gs
xchg
ja
xchg
jae
pop
dec
or
notl
repnz
xchg
cmp
adc
add
pusha
sub
mov
jnp
loope
data16
inc
arpl
lret
pop
jno
flds
adc
jecxz
or
fsubrs
dec
xchg
sub
pop
dec
pop
cmp
xlat
sbb
bnd
movsl
xor
fcmovu
push
xchg
aas
mov
xchg
push
cld
imul
adc
or
jmp
jbe
enter
pushl
push
inc
cmp
push
add
mov
std
test
out
outsb
pushf
push
mov
int3
adc
lods
stos
dec
dec
imul
adcb
xchg
or
notb
push
sarl
cmc
ja
mov
mov
fxsave
in
lcall
pop
or
cmp
iret
sbb
insb
fcomps
dec
test
pop
inc
xor
aas
rcrb
mov
sbb
gs
repz
movsb
int
jo
mov
cmp
sarb
ljmp
std
movsl
cwtl
mov
mov
dec
add
imul
inc
test
cltd
pushl
push
mov
mov
push
and
xor
xchg
add
jmp
mov
sti
mov
lahf
adc
fisttpl
push
add
mov
add
dec
mov
jecxz
and
in
je
jo
and
insb
xchg
jno
push
jl
and
add
mov
data16
and
mov
push
and
xchg
arpl
loopne
pushf
mov
jmp
pop
mov
mov
mov
shl
lcall
incl
lret
pop
xchg
popa
movsb
scas
fstl
inc
inc
xchg
add
cwtl
lahf
jo
and
xorb
int3
jmp
dec
add
mov
lea
rorl
js
jecxz
inc
xor
cmp
imul
lods
dec
in
push
int3
leave
mov
pushf
repz
sbb
and
jno
mov
mov
xor
jmp
push
or
pop
pop
push
dec
sub
addr16
in
fisubrs
add
add
in
xlat
loop
adc
or
pushf
jnp
out
sbb
sbb
jg
std
pop
jp
jge
jmp
fnstenv
insb
ret
add
xchg
out
mov
xchg
adc
into
jo
loopne
mov
mov
loop
in
loop
push
pop
div
aaa
cmp
call
push
dec
inc
in
popa
mov
repz
mov
leave
out
add
inc
cmp
sub
lret
repnz
mov
xchg
bnd
cmc
in
pop
pop
or
popf
pusha
mov
add
xor
repz
xor
in
jp
xchg
jbe
add
inc
pop
pop
adc
xor
outsb
out
gs
push
fwait
mov
mov
mov
xor
jmp
xchg
subb
test
xchg
movsl
mov
pop
add
mov
pop
icebp
add
fs
pop
jmp
cmp
lret
mov
dec
lods
sbb
or
add
push
in
add
cmc
and
int3
push
sub
popf
les
fxtract
ss
sbb
push
hlt
ffree
jns
dec
or
xchg
sbb
dec
scas
shlb
inc
xchg
jo
lock
xchg
in
iret
and
cmp
fs
dec
roll
adc
lret
adc
sub
pop
fucomip
sub
pop
xor
jl
lock
lcall
inc
mov
add
inc
jno
push
stc
jno
in
enter
adc
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
jmp
inc
or
inc
jge
jg
arpl
push
or
push
pop
add
mov
mov
insb
add
repnz
dec
inc
lods
add
pop
xlat
nop
aaa
jl
pop
xor
mov
cld
and
mov
pushl
xchg
rcrl
in
or
pop
mov
mov
sbb
lahf
addb
sub
das
outsl
sti
repnz
add
push
xchg
pop
loopne
shll
sbb
mov
pop
insl
mov
orl
mov
rorl
notb
add
cmc
loop
fdivr
mov
cmp
pop
mov
mov
xchg
jecxz
mov
or
inc
mov
scas
push
xor
lea
mov
mov
mov
xor
mov
mov
xor
mov
jmp
insb
shlb
idiv
fisttps
inc
ficomps
fsubl
mov
pop
test
cmc
imul
xchg
fcomps
scas
jg
mov
fwait
mov
xchg
cmp
jo
sub
add
inc
sahf
xchg
ja
xor
lret
inc
dec
cmpsl
sub
pop
sub
push
sub
mov
out
jnp
jecxz
add
or
push
push
jle
mov
pop
pop
pop
adc
xor
adc
push
ljmp
inc
fcoml
mov
rep
jnp
pop
jecxz
xor
jo
aas
loopne
push
mov
xor
popf
daa
inc
inc
into
jbe
mov
int
cmp
pop
adc
dec
jbe
mov
jmp
jp
testb
lahf
sbb
sub
pop
add
mov
sub
dec
dec
dec
add
jae
enter
jle
ret
cltd
fldt
sub
pop
and
scas
push
test
inc
push
cmp
mov
xchg
adc
shrl
sbb
push
insl
mov
mov
repz
pop
pushfw
xor
lea
xchg
adc
call
jns
movsb
stc
out
fdivrp
and
pop
addr16
cmpsl
cmpsl
inc
fmulp
and
push
mov
repnz
pop
repz
or
jge
cmpl
xchg
clc
jno
inc
or
lds
xchg
test
sbbl
adc
xor
lea
jmp
and
in
outsl
mov
repnz
pop
add
mov
mov
push
jnp
ljmp
xchg
imul
sbb
sbb
sbb
mov
daa
movsb
dec
inc
cmp
shrl
or
fmull
shll
imul
pusha
daa
inc
shll
inc
pop
lret
inc
or
insb
jb
pushf
adc
pop
aaa
adc
push
fs
jb
mov
mov
mov
call
rcl
lock
cmp
out
fs
dec
sbb
push
scas
imul
call
int
mov
xchg
insl
add
sbb
push
add
xchg
mov
es
lods
sarb
mov
stos
mov
lds
push
cmc
aam
dec
jg
inc
adc
add
add
mov
sti
aas
mov
aas
ja
ret
add
pop
add
mov
clc
jb
idivl
xchg
xchg
and
xchg
test
dec
inc
mov
push
sti
cmp
je
or
and
or
shrb
imul
xchg
push
loope
xor
aas
or
jno
mov
scas
cs
and
pop
ljmp
and
ret
hlt
jg
mov
cs
pop
inc
jo
daa
mov
push
dec
lret
in
rcrl
es
sub
movsb
xor
pop
or
das
repnz
das
cwtl
sub
data16
jmp
sbb
sbb
cs
loopne
dec
loope
mov
or
lea
jmp
mov
jno
jne
mov
dec
fstl
lds
mov
xchg
data16
repnz
xor
jl
push
insl
cmp
fbld
mov
cmp
xor
lahf
pop
sbb
insb
stc
inc
cmpl
js
pop
in
mov
out
ss
fbstp
mov
push
mov
test
fadds
pop
out
aad
ds
fimuls
and
adc
dec
repnz
mov
dec
mov
fbstp
shlb
shrb
daa
add
push
test
jmp
outsl
sub
jno
inc
rcl
xor
lods
aam
rcrb
pop
inc
dec
xchg
add
xorl
mov
mov
mov
add
sti
stc
pop
insb
pop
out
jmp
pop
ret
je
sbbb
mov
repz
repnz
xchg
xchg
stos
test
repz
or
stos
movsl
cmp
insl
cmp
movsl
cmp
repz
cmpsl
cmp
inc
imul
je
in
jb
xchg
push
pop
xchg
xchg
setge
fmul
pop
add
fcompl
in
xchg
aam
cld
sbbl
push
push
ficoms
push
stos
jp
int3
add
adc
cld
mov
add
mov
fsubr
and
and
xlat
pop
scas
jmp
mov
fbld
inc
adc
add
mov
xor
jge
stc
pop
and
test
cmpsb
lahf
mov
mov
dec
bsr
fstps
adc
adc
add
jg
dec
mov
enter
shr
fcmovnb
cmp
add
adc
and
cmpsl
jge
or
out
push
lcall
pop
dec
mov
call
dec
fiadds
jb
push
and
outsb
sub
fs
js
notl
adc
jae
sbb
mov
mov
cld
test
mov
cwtl
insb
popa
push
mov
xchg
pop
jge
push
mov
and
lret
or
pop
dec
push
sti
repz
lea
daa
loop
pop
shrl
scas
dec
out
dec
push
mov
add
cwtl
mov
lret
aas
dec
rcl
cmp
or
pop
in
inc
enter
ficompl
aam
bound
mov
jmp
or
mov
adc
sti
jnp,pn
negb
add
and
dec
or
and
es
sbb
push
jecxz
das
mov
jmp
or
dec
test
out
pop
sub
in
sbbb
outsl
and
loope
mov
std
fldenv
push
jl
jo
test
dec
cli
dec
xor
add
cli
std
lret
inc
dec
push
mov
xor
in
xor
andb
mov
sbb
mov
and
test
xlat
bound
outsl
sti
push
leave
sbb
aam
call
and
sbb
jecxz
test
xor
in
xor
out
add
icebp
test
lret
and
hlt
jne
xor
jmp
call
cli
stc
sti
push
jecxz
add
mov
aas
mov
add
mov
call
hlt
cmp
ss
bound
or
xor
imul
adc
mov
cmp
mov
popa
jge
push
push
sbb
and
rcrb
cmp
imul
push
faddp
push
jecxz
mov
adc
mov
repz
out
in
std
mov
push
push
fnstcw
jnp
pop
cmpsb
jnp
inc
cs
jne
push
insb
shrl
adc
call
mov
out
cmpsl
adc
addl
outsl
add
and
sbb
inc
mov
jno
xor
jmp
cmpsb
xchg
leave
imul
cmp
fisubrl
add
pop
adc
sti
mov
jae
mov
pop
lock
jg,pt
xchg
or
jle
lock
sub
adc
xchg
dec
xor
loop
sub
mov
pusha
js
cmp
sub
aam
push
sbb
pop
xchg
jbe
addr16
pop
cmp
fucomip
outsl
or
sub
or
and
mov
sbb
xor
push
xchg
mov
cmp
and
fdivrl
xorb
sbb
inc
les
aad
jl
push
inc
sbb
fwait
push
ss
adc
jmp
adc
ret
xlat
pop
xlat
jl
stos
in
insl
fildll
popa
add
mov
lahf
gs
cmp
repz
das
filds
mov
mov
sub
mov
icebp
xchg
fwait
pop
mov
clc
ret
sti
dec
ljmp
jmp
into
sub
shll
jg
push
cmpsl
ret
stos
ret
inc
int
cmp
imul
stos
inc
mov
mov
addl
ds
xchg
xchg
cmpsl
mov
ja
push
push
lock
dec
mov
lahf
in
pop
insl
jb
jmp
add
iret
mov
xchg
arpl
lods
cmp
lret
sub
sarb
es
test
cmpsl
jnp
ret
push
shrb
shlb
jmp
nop
stos
mov
scas
lds
or
loop
add
mov
jno
push
sub
pop
cmp
xor
pushf
mov
jp
adc
xor
dec
les
mov
sub
xor
lcall
cs
sub
leave
mov
test
int
sub
push
mov
rcl
push
xlat
mov
repz
fsubrp
add
pushf
es
cmpsb
lock
pop
loope
aad
sub
loop
cld
and
jp
lcall
aam
aad
fcmovnb
clc
push
lret
jne
sahf
cmp
xor
or
dec
fcompl
adc
lods
mov
std
jae
jmp
mov
jmp
mov
jne
ja
lcall
inc
push
aas
popf
bound
add
mov
ret
out
mov
jmp
or
push
pop
fcoml
jnp
mov
jl
mov
and
aam
ljmp
push
cs
cmp
xchg
jne
movsl
pusha
pop
jns
mov
out
add
aam
xor
cmp
gs
or
inc
in
mov
xor
or
lea
mov
ljmp
or
cwtl
stos
das
and
enter
out
clc
and
jnp
push
xchg
xor
arpl
test
mov
pop
or
add
movsl
movsl
out
fsubs
xchg
xchg
mov
mov
xor
xor
add
adc
mov
cmp
jne
mov
cmp
jne
jmp
mov
mov
jmp
pop
push
out
pop
mov
mov
pop
arpl
add
cmpsl
push
xchg
sti
or
dec
mov
iret
mov
xor
xchg
out
sub
in
sub
xchg
jne
jecxz
shr
popf
xchg
push
and
movsl
imul
add
lds
adc
mov
mov
fdivrs
inc
ds
cmc
push
stos
call
mov
packsswb
call
inc
jle
adcb
sbb
mov
jne
xchg
repz
push
adc
cltd
pop
push
fcmovbe
sbb
lcall
pop
dec
add
cli
xor
mov
xor
adc
call
inc
test
mov
mov
or
xor
cmp
xor
add
mov
mov
mov
mov
adc
push
jmp
cmp
jge
rorb
xor
icebp
or
mov
sub
in
push
fstpl
aad
in
pop
xor
mov
and
sbb
mov
inc
or
xor
fyl2x
push
xchg
std
xchg
arpl
lods
xor
xlat
or
rclb
or
mov
ret
xor
idiv
mov
push
pop
sti
sbb
cmpsl
test
aaa
xchg
out
sub
xor
imul
dec
xchg
mov
orl
adc
mov
and
rol
mov
pop
or
push
lea
xchg
push
xbegin
loopne
gs
lds
mov
fdivrp
jne
push
push
call
jmp
lods
xchg
int
fdivrp
mov
pop
jns
pop
into
add
mov
loop
pusha
pushf
pop
mov
and
and
xor
sbb
outsb
int3
fbstp
lea
arpl
mov
dec
pop
fadd
xor
fcoml
adc
jnp
sbb
cmpsb
adc
fs
sbb
sub
popf
or
cmpsb
inc
jl
and
repnz
hlt
pop
cltd
jnp
push
push
mov
pushf
js
outsb
jg
mov
jbe
add
xchg
jle
and
dec
jne
cmp
pop
adcb
push
in
loop
ret
push
add
test
leave
sub
push
imul
add
mov
mov
add
adc
xor
mov
mov
xor
jmp
cmc
jae
cld
cmpsb
std
jnp
out
lahf
push
mov
mov
add
add
pop
jecxz
or
xchg
push
sbbb
inc
inc
inc
mov
push
lods
repz
jo
int3
and
pop
test
dec
movsl
adc
in
and
push
movsl
push
daa
dec
mov
ja
faddl
addl
fildll
xchg
mov
jbe
xchg
hlt
sub
fs
cmpsl
or
je
inc
dec
jno
dec
mov
pop
rcl
or
mov
jb
sub
cmpsl
adc
je
adc
push
mov
sub
pop
add
mov
xchg
push
mov
add
pop
mov
xor
xor
add
adc
mov
jmp
xlat
pushf
sbb
pop
lahf
test
aam
dec
inc
data16
mov
mov
movsl
loope
stc
out
xor
xorb
mov
pop
dec
inc
cmp
rorb
inc
and
int3
iret
pop
fmull
lea
sar
mov
repnz
lcall
or
xor
cmp
popa
scas
shl
and
cld
push
fldt
ds
das
std
or
es
dec
call
imul
enter
pushf
jo
pushf
push
mov
stos
or
ja
pop
pop
jae
inc
aas
lods
lret
ficomps
mov
sub
mov
jecxz
cli
jnp
loope
test
lea
mov
jmp
mov
ficomps
aaa
jo
int
imul
add
add
xchg
mov
jnp
fisubrs
cmp
shrl
and
scas
add
rol
imul
repz
in
arpl
cwtl
mov
and
scas
jl
sbb
fcomps
adc
push
test
pop
mov
inc
inc
adc
adc
xchg
pop
cmc
outsb
push
sbb
pop
sub
pusha
movsl
pop
mov
imul
in
int3
movsb
adc
push
mov
jb
aam
cmp
test
out
jns
adcl
xor
into
cmpsl
xchg
jbe
call
xchg
push
lcall
fistps
mov
sbb
jmp
jge
popf
push
out
imul
add
add
stos
and
test
stos
sbb
fdivrs
mov
fimuls
enter
sbb
dec
xor
jne
loop
add
out
ret
notb
test
popf
mov
mov
gs
xchg
repz
jne
fildll
jg
xchg
pop
movsb
rep
mov
mov
into
repz
leave
push
mov
mov
mov
pushf
push
dec
jmp
xor
add
inc
pop
sbbb
cs
mov
jle
cmp
sti
mov
je
mov
insl
jle
inc
nop
insl
insb
push
imul
movsb
push
inc
inc
and
shr
roll
add
les
cld
in
sub
rorl
addr16
jne
add
mov
mov
sbb
sub
stc
pop
dec
mov
push
fld
adc
movsb
dec
add
rcrl
das
ret
in
jno
pop
push
fmull
inc
test
xchg
xchg
jnp
addb
stos
sbbb
stos
pop
mov
pop
push
lret
hlt
xadd
xor
mov
dec
rcr
fwait
mov
cmp
ret
call
fwait
mov
hlt
ret
sarb
lock
std
ficomps
push
inc
pop
fnstcw
xor
fwait
dec
call
mov
ljmp
mov
popa
ds
mov
jb
test
sub
add
jmp
daa
incl
decl
mov
xor
add
add
ds
dec
stos
ds
cmp
insl
cmp
test
iret
ss
jae
sub
sbb
mov
cmp
pop
mov
mov
push
add
mov
ja
pop
dec
sub
and
cwtl
mov
push
and
pop
outsb
cmp
lods
arpl
lds
or
stos
cmpsl
in
aad
sbbb
mov
mov
mov
movsb
dec
scas
jae
jmp
mulb
adc
test
and
dec
adcb
mov
mov
pop
adc
adcb
test
adc
jb
lahf
mov
cmp
push
mov
push
loope
rcr
lea
add
roll
add
aaa
adc
xchg
outsl
mov
sti
mov
add
imul
add
insl
popa
inc
jns
jge
shll
dec
sub
shll
adc
dec
adc
jns
movsb
div
pop
orl
ja
sti
or
push
lcall
sbb
or
pop
aam
mov
jp
cmp
cmp
mov
jl
cld
insb
adc
andl
add
leave
dec
mov
sub
sbbb
inc
cwtl
shlb
cwtl
in
stos
or
cmp
mov
pop
and
insl
dec
aam
imul
mov
or
jl
loop
jle
mov
push
jmp
adc
and
jmp
adc
sub
sub
sti
cwtl
or
int3
jbe
negb
push
add
cld
and
das
fimuls
sbb
int3
call
mov
hlt
inc
push
or
jae
add
sub
adc
mov
gs
fidivl
push
inc
shll
cmc
stos
dec
pop
and
ficoms
sbb
jb
mov
andb
xor
rcrb
inc
sbb
ret
inc
jno
outsl
insb
mov
sbb
shll
loope
std
sbb
out
jg
pusha
gs
xchg
jns
inc
sbb
nop
test
lcall
mov
arpl
pop
aaa
test
sub
ret
push
sub
and
mov
ds
jne
cmp
je
jmp
cli
or
lahf
lahf
add
ficomps
imul
mov
les
shrl
jns
shr
push
mov
mov
enter
bound
shll
pop
pop
and
xchg
mov
sub
push
daa
and
out
jne
in
es
mov
sbb
fmull
mov
cmpsb
das
data16
data16
hlt
mov
sbb
jl
je
push
movsb
mov
fistps
dec
imul
push
lock
inc
jb
pop
and
into
imul
sub
rcl
xchg
xchg
das
setp
and
jne
or
push
mov
sub
xor
and
lea
std
pop
sub
jne
pushl
push
push
call
jmp
ja
xor
insb
cmp
popl
insb
add
mov
adc
in
lock
je
sarl
push
ret
xchg
pop
mov
std
adc
pop
xchg
xchg
outsb
xchg
and
es
mov
fwait
mov
mov
xchg
hlt
ret
push
mov
mov
pop
fmull
icebp
sub
ljmp
pop
iret
sub
push
jecxz
push
int3
je
jmp
fstpt
jbe
sbb
out
mov
dec
bound
cmp
sti
packuswb
test
xchg
rcr
arpl
fucomp
pop
inc
push
inc
shll
inc
xlat
je
mov
ljmp
jmp
fsubs
notl
mov
or
std
jb
jmp
jge
fst
call
jge
jno
jbe
and
add
mov
movsl
stos
pop
mov
mov
mov
push
add
mov
mov
jp
jne
mov
inc
or
mov
mov
pusha
mov
movsb
mov
jp
mov
out
mov
shrl
scas
outsb
stos
addr16
insl
les
xor
mov
ror
stos
shll
push
inc
clc
enter
adc
lods
lcallw
icebp
in
imul
cmpsl
add
jecxz
das
pushf
addb
dec
rcrb
pop
jnp
push
and
dec
adc
inc
xchg
mov
inc
sbb
or
cmp
push
push
mov
iret
dec
cmp
and
or
mov
push
dec
mov
and
push
mov
sub
push
jmp
orl
iret
mov
dec
sub
mov
imul
aad
movb
jmp
push
mov
rol
sbb
lcall
xchg
add
add
cmpsb
xchg
pushf
lret
mov
lds
or
push
mov
sub
pop
mov
jp
dec
std
mov
pop
dec
xor
loopne
jp
cltd
shrb
insb
add
aas
insb
mov
pop
inc
xor
push
sbb
pushf
movl
inc
jl
dec
inc
cmp
imul
xchg
test
pop
mov
cld
loop
or
adc
fnsave
mov
jns
adc
sbb
sbb
add
jmp
xchg
rorl
inc
dec
fstp
sarl
push
xor
outsb
add
movsl
add
add
or
movsl
mov
jle
pop
dec
fs
in
daa
adc
lret
xor
xor
clc
ret
out
adc
sbb
mov
sbb
into
inc
aam
push
xor
xchg
add
vprotw
imul
mov
jge
or
pop
push
jge
subb
xchg
nop
int3
pop
mov
in
out
jbe
inc
sbb
xor
insl
push
push
jg
xchg
jmp
mov
adc
jb,pt
nop
sbb
test
loopne
mov
cmovge
add
dec
dec
pop
dec
adc
movl
jmp
jg
sbb
jg
jmp
movsb
pop
or
int
outsb
add
movsl
add
add
ret
popf
cmc
daa
fnstsw
adc
aam
js
and
mov
sbb
cmp
sub
cli
add
dec
test
mov
jb
stos
out
jmp
das
jge
jmp
lcall
das
mov
pop
xlat
inc
pop
xor
pop
movsb
aas
dec
mov
pop
mov
loopne
popf
in
ret
push
ret
fbstp
jle
test
mov
mov
xchg
xchg
mov
dec
pop
push
test
pop
adc
scas
mov
or
sub
dec
jp
lahf
int
adc
shrb
imul
loopne
or
add
mov
sub
jg
mov
pop
inc
xor
fiadds
add
add
xchg
pop
jle
and
pop
mov
test
cmc
inc
popf
arpl
shlb
fwait
loop
mov
fwait
ds
xchg
or
call
pushf
dec
cmpl
adc
jge
xorl
push
cld
lret
mov
push
jge
sub
push
test
pop
cmp
add
test
pop
pop
shrl
imul
cmp
iret
mov
in
mov
test
aas
sub
insb
mov
add
add
jb
leave
inc
mov
inc
xchg
lahf
nop
outsb
inc
leave
jmp
add
mov
call
jmp
pop
inc
pusha
xor
pop
insl
das
lock
je
sub
es
add
inc
in
mov
sub
sbb
fbstp
and
mov
or
or
add
inc
jmp
fdivl
popl
mov
pop
ret
dec
repnz
jecxz
cld
mov
push
cmpsb
push
inc
sub
es
loopne
scas
aad
les
mov
cli
lahf
loopne
xchg
ja
out
mov
arpl
cmp
out
nop
add
cmp
stos
popf
test
push
sub
aas
dec
pop
loopne
jecxz
add
pusha
and
lods
rcrl
bswap
jns
inc
in
or
add
mov
and
sub
push
xor
push
xor
movl
movl
jmp
push
in
fnsave
mov
jp
lret
jo
add
xor
notl
fmull
mov
xchg
in
repz
cmp
or
jmp
adc
lcall
sbb
cmp
jns
push
ds
lea
dec
cmpb
pushf
add
sub
mov
sbb
insb
sbb
inc
movsl
stos
sub
adc
and
test
lahf
or
mov
out
jno
pop
repz
enter
ss
shlb
inc
pop
inc
sti
fbld
push
call
aam
sbb
inc
lock
imul
movl
jmp
sbb
cmp
xchg
or
add
nop
hlt
movsb
nop
push
out
cmpsl
stos
cld
cmp
sub
aaa
sarl
and
inc
add
push
or
lods
push
push
iret
gs
or
lock
inc
ja
inc
subl
push
test
push
scas
fsubrs
xchg
cmpsl
rclb
or
jle
push
aam
decl
xor
sub
push
js
popf
inc
or
jl
or
cmp
add
pushf
jle
sub
mov
mov
loopne
mov
jl
aam
sbb
sbb
loopne
inc
daa
mov
push
pop
div
jmp
jecxz
rcll
push
repz
shll
adc
add
add
iret
mov
mov
test
pop
push
out
add
ds
pop
cwtl
filds
cmp
push
sbb
xchg
fs
mov
inc
je
jl
jo
pop
lahf
stc
in
pop
jge
mov
stc
cmc
dec
out
lahf
pop
into
je
lahf
push
jae
lcall
push
orl
sub
rcll
cld
push
mov
pushf
mov
pusha
outsl
pop
enter
jmp
add
push
sub
les
aad
pop
adc
pop
jge
or
mov
mov
clc
jmp
inc
insl
jne
jge
imul
mov
push
mov
movsl
add
add
mov
pop
ds
push
xchg
test
ljmp
fldl
mov
lcall
dec
je
out
push
sbb
test
out
cmp
dec
dec
jnp
loopne
movsl
xchg
dec
xchg
and
mov
icebp
cmp
ljmp
pop
xor
dec
inc
bnd
mov
clc
or
je
scas
scas
adc
insl
mov
or
in
hlt
test
movsb
mov
iret
sti
out
pop
dec
sti
inc
mov
addl
dec
mov
mov
mov
or
mov
sub
mov
sub
xor
jmp
into
push
fcoms
xchg
add
lock
pop
jae
add
mov
pusha
sti
sub
setg
ficoms
sbb
rclb
mov
xchg
dec
call
out
inc
jl
push
test
into
lods
pop
inc
dec
sub
loopne
sbb
loopne
repz
mov
sub
push
inc
out
push
cmpsb
push
sbb
jg
jle
xchg
je
mov
adcb
fwait
add
pop
test
inc
pop
sub
sbb
insl
xor
sub
scas
mov
jbe
insl
idivl
sub
inc
pop
movl
adc
in
popf
xor
pop
cli
sbb
int3
xor
jmp
scas
inc
std
mov
mov
pop
xchg
mov
xchg
jo
je
add
or
loope
xchg
push
pop
sub
add
or
adc
jg
mov
xor
mov
subl
fimuls
xor
mull
adc
push
cmp
lock
in
xlat
mov
adc
cmp
mov
inc
fistps
add
aaa
out
mov
subb
stc
sarl
sub
sub
mov
xorb
pusha
les
dec
push
aam
lret
gs
pusha
dec
xor
pusha
pop
and
out
mov
cld
loop
out
popf
div
mov
xor
add
jmp
sub
jp
aam
in
mov
test
add
add
repnz
mov
xchg
mov
cmp
out
mov
xchg
and
insb
shrb
xor
inc
adc
lods
shl
mov
jb
subb
add
mov
mov
in
repz
push
cmp
lret
iret
lods
mov
pop
movl
lods
xchg
add
pop
in
cmp
pop
or
pushf
mov
fbld
in
ja
cmpsb
jae
mov
sbb
in
stc
leave
je
inc
dec
sbb
or
test
nop
cli
jae
jnp
mov
pop
shll
cmpb
jmp
rcrb
sti
fisttpll
adcl
add
add
mov
es
or
pushf
je
sahf
and
mov
mov
cmpsl
add
cmp
jno
sbb
add
icebp
fcmovnu
adc
loope
stc
sahf
pop
arpl
hlt
inc
sub
fsts
adc
stc
xchg
push
popf
mov
fstpl
fsubl
mov
add
fstl
push
xchg
mov
inc
mov
rcrl
out
out
or
cwtl
lahf
sub
xchg
mov
dec
pushl
xor
test
into
sub
jb
orb
outsl
push
out
jle,pt
dec
cld
mov
mov
mov
xor
mov
div
jmp
dec
lcall
pop
cmp
mov
repz
add
loope
mov
enter
rorb
loope
xor
inc
mov
and
icebp
xor
movsb
and
arpl
pop
xchg
stc
cli
sub
pop
push
mov
shll
negl
hlt
dec
mov
stos
xchg
jle
jnp
xchg
pop
lods
or
mov
lds
cwtl
out
arpl
jge
fnstsw
xchg
dec
xchg
popa
push
mov
insl
xor
mov
aaa
fs
dec
sub
jle
ret
int3
pop
out
push
pop
mov
imul
mov
jbe
add
push
mov
mov
add
xor
xor
div
mov
jmp
dec
shl
ljmp
rcrb
mov
add
ss
adc
xor
mov
insb
sarl
add
enter
pushf
das
jo
jge
mov
daa
adcb
cmp
fwait
out
mov
ret
fcoms
frstor
mov
daa
mov
lods
xor
lods
repnz
add
sub
movsl
popa
jl
xchg
in
out
rcrb
push
movsl
jno
das
pop
bound
jb
fwait
cs
ficoml
aas
xor
arpl
scas
cmp
outsb
shlb
in
test
mov
push
lock
add
enter
jmp
sbb
insl
jl
pop
ja
popl
popf
cmp
cmp
add
add
jae
pop
pop
enter
cli
fstpl
aam
xorl
inc
xchg
loope
ljmp
pop
fnstenv
mov
dec
jge
es
xchg
push
pusha
pop
adc
mov
iret
cld
or
jp
shlb
loope
pusha
in
pusha
test
xor
in
sub
out
xchg
sahf
popa
clc
push
insb
cmp
sbb
pop
hlt
mov
aad
xchg
shll
aad
movb
imul
sahf
scas
ss
sbb
je
dec
sbb
inc
mov
pushf
mov
xor
testl
ret
add
add
push
int
int
adc
idivl
and
add
movsl
add
add
jnp
mov
int
jnp
cmp
rcrl
popa
cmp
and
aam
popf
nop
xchg
mov
adc
pushf
iret
test
add
pop
es
or
adc
inc
loop
test
jmp
std
int3
fcmovne
mov
adc
xchg
scas
call
pop
sti
decl
mov
sbb
pop
enter
xchg
cmpsl
sub
mov
mov
out
test
add
or
mov
xorb
and
popf
mov
or
mov
and
sbb
mov
test
out
clc
test
or
jmp
mov
mov
imul
add
add
lock
popa
pop
test
andb
loop
iret
push
test
jae
movsl
xchg
repnz
psrlw
orb
and
popa
inc
movsb
movsl
and
iret
sub
lock
and
sbb
fmul
rcrl
pop
xor
neg
cs
flds
push
fwait
pop
or
call
cmp
inc
jmp
scas
mov
adc
movsl
xor
out
popa
ds
dec
movsl
test
cmp
add
in
popf
push
inc
ja
cltd
loope
test
rcrl
pushf
xlat
or
into
fwait
pop
popa
push
sub
push
mov
jne
jmp
scas
or
iret
in
scas
push
dec
mov
adc
aam
sub
add
movsl
add
add
iret
xchg
xchg
out
or
out
aas
les
ds
lock
inc
shl
loope
push
fdiv
xchg
lds
pushf
pop
loope
outsb
mov
inc
lds
pop
ret
in
cltd
push
lret
adc
subb
jle
xchg
pop
and
mov
xchg
add
push
cld
test
repnz
push
jecxz
int
cld
out
sub
das
mov
lcall
and
or
pop
aas
push
stc
ja
cmp
fidivrs
stc
int3
cwtl
adc
fs
mov
xchg
lods
imul
out
mov
inc
or
xor
add
rclb
add
jmp
cmpsl
fcmovnbe
sti
scas
jle
sub
sbb
adc
add
hlt
sbb
aad
pop
cltd
mov
aaa
jnp
push
jmp
pop
jle
pop
lea
dec
xchg
fmull
xor
or
stos
xor
cltd
pop
dec
sbb
push
dec
and
mov
cmovb
mov
cmp
cmpsl
outsb
sub
rcr
movsl
fcompl
and
mov
out
cmp
lock
xor
jne
icebp
mov
adc
cmp
in
int3
mov
cs
jecxz
sete
jp
ss
ret
les
js
jp
inc
stos
dec
mov
movl
movl
movl
movl
movl
mov
jmp
mov
mov
shlb
mov
dec
cmp
add
xchg
jg
mov
jb
mov
mov
and
mov
leave
add
loop
orb
add
test
xchg
adc
out
push
mov
lret
mov
or
sub
sbb
rol
add
cmpsl
push
jo
loopne
cmc
out
ror
popf
mov
inc
sub
mov
mov
lret
fildll
fdivrs
stos
arpl
pusha
addb
bound
adc
ror
or
arpl
fimuls
mov
shll
leave
jns
add
sub
imul
pop
xor
pop
movl
movl
jmp
andb
scas
repnz
mov
jnp
add
ret
inc
xchg
mov
popa
mov
leave
loope
mov
push
mov
insb
popa
std
sbb
or
and
cli
or
jge
cmp
stos
or
cmp
push
pop
push
mov
xor
rcll
ja
jnp
mov
pop
or
or
lcall
jmp
test
lcall
push
inc
cwtl
test
jo
pop
mov
out
inc
rep
jge
pushf
add
xlat
ds
aam
sub
mov
push
shrl
sub
or
pop
cmp
inc
or
add
jmp
dec
pop
inc
jae
jg
jnp
stos
mov
movsl
sarb
movsl
add
add
mov
sub
inc
into
and
push
dec
mov
xorl
xor
mov
pop
cmp
outsb
mov
cmp
push
dec
call
into
repnz
int3
test
dec
cmp
mov
or
xchg
mov
fdivrs
add
and
jns
xchg
js
in
jmp
pusha
imulb
arpl
test
push
inc
push
js
add
loopne
push
add
xor
leave
adc
inc
dec
aam
mov
repz
push
dec
movl
movl
jmp
shll
mov
in
loope
imul
xor
add
movsl
add
add
int3
loope
mov
inc
pop
cld
mov
inc
xor
aas
lret
mov
dec
xor
mov
into
or
cmc
repz
sbb
cs
aas
popf
xchg
cld
stc
test
imul
xlat
mov
mov
or
stc
dec
inc
fidivs
dec
lret
push
das
jns
lcall
shlb
pop
stc
sub
test
aad
hlt
cmpsl
fcmovne
cmp
mov
cmp
int3
jp
ficompl
fidivl
cmp
ljmp
in
jbe
cmp
mov
call
movl
jmp
inc
cmp
cmp
aaa
push
ret
test
dec
or
add
push
and
sti
sub
lret
jl
dec
xorb
cmp
je
stos
mov
leave
pushf
or
and
lea
in
xchg
lods
incl
mov
scas
jl
in
test
jg
pop
xor
xor
pop
add
scas
pop
incl
adc
shll
in
int3
insb
aam
testb
mov
jae
pop
or
aad
push
sbb
jb
xlat
mov
xchg
pop
cmp
inc
dec
cltd
popf
adc
sub
rolb
xchg
sbb
sarl
adc
addb
outsb
rorb
mov
or
and
jmp
scas
std
loopne
repz
std
xor
sub
add
movsl
add
add
adc
cmp
nop
faddp
fwait
push
xlat
mov
adc
xchg
lret
in
dec
mov
and
inc
xor
sbbb
add
je
push
outsl
scas
movlps
xor
inc
imull
shl
pop
mov
sub
leave
cmp
scas
or
xchg
mov
xor
andb
shl
sub
enter
out
cmpb
sub
xchg
dec
in
dec
sub
cmp
xor
lret
sub
lahf
lods
pop
or
call
imul
jnp
jbe
dec
pop
push
mov
repz
or
add
rorb
call
add
imul
ds
out
cli
push
popa
cmp
add
testb
or
stc
xchg
fidivrl
cwtl
dec
mov
jb
std
int
jnp
mov
test
flds
icebp
outsl
pop
fs
test
aad
push
cmc
inc
dec
testb
inc
xlat
sub
sub
or
into
jns
shll
in
xchg
jne
add
xchg
lock
hlt
xchg
aam
xchg
mov
and
scas
cs
cmp
xchg
xchg
mov
out
pusha
add
ss
sub
dec
sbb
xor
cmp
or
and
jl
test
test
imul
and
mov
sub
mov
or
mov
jmp
inc
push
rcl
rcl
inc
xchg
pop
ds
in
cmp
gs
jle
add
ds
dec
jp
push
int3
dec
pop
push
scas
pop
sbbl
cmpsb
mov
ror
sahf
sub
adc
rcll
in
std
fcoms
shrl
movsb
lds
pop
inc
insb
xchg
sbb
rolb
cli
jns
lahf
ficompl
movsb
add
cmp
inc
push
mov
repz
jne
xchg
pop
mov
test
inc
ljmp
xchg
mov
loopne
push
movsl
push
int3
mov
jmp
pusha
jns
dec
cmc
jl
mov
mov
fdivr
xchg
add
jmp
dec
nop
cmc
inc
std
gs
pushf
in
in
fldt
movsl
dec
or
movsl
add
add
add
scas
inc
mov
outsl
jbe
out
dec
inc
jecxz
mov
pop
inc
jle
movsb
sbb
jne
sub
lea
popa
int
in
and
dec
cmp
in
sti
push
mov
sub
push
es
jge
add
and
xchg
push
add
out
icebp
scas
stos
pop
mov
out
mov
adc
xchg
ljmp
shr
rcrb
in
sub
jmp
loopne
pop
rorb
test
jae
or
fisubl
outsb
in
popa
aad
xchg
adc
call
mov
jne
int
sub
ret
addb
movsl
add
add
hlt
jnp
push
jl
jbe
int
stos
into
je
or
jb
cmp
push
jge
into
and
cmp
insl
cmpsl
sub
add
pop
sub
sbb
xor
mov
in
mov
jnp
xchg
cmpsb
lret
loop
imul
cmovle
dec
inc
rcr
xor
jge
jb
inc
aad
inc
out
lea
arpl
cltd
mov
dec
fmuls
jge
push
push
les
addl
out
inc
inc
out
jmp
or
data16
jp
push
lds
dec
add
mov
jmp
and
jnp
mov
cli
pop
push
pop
call
add
add
push
mov
sub
push
fs
jb
add
xor
sub
pop
mov
ja
mov
notb
repnz
mov
push
aam
jno
push
sub
push
mov
mov
stos
push
jnp
fiaddl
andl
mov
rcl
pushf
mov
xchg
jecxz
lods
jmp
ficoms
cmp
add
push
mov
fs
add
jmp
notb
iret
xor
icebp
push
imul
sub
jmp
ja
in
adc
movsl
mov
mov
push
cmp
inc
hlt
mov
xor
add
imul
jmp
mov
sbb
popf
pop
jge
stos
xchg
in
mov
add
movsl
add
add
daa
loope
out
ror
dec
ret
rolb
and
lea
xchg
add
rol
subb
fwait
pushf
adc
lret
xchg
imul
jo
dec
nop
in
loopne
movsb
lahf
or
xchg
leave
rdpmc
xor
fidivrs
mov
js
cwtl
mov
and
out
sub
mov
cmp
das
sub
daa
jmp
in
in
mov
insb
test
mov
mov
sbb
int3
ret
sbb
popf
and
lock
xor
insl
or
lcall
in
adc
and
lea
mov
mov
or
mov
and
mov
jmp
jge
js
clc
out
jg
adc
imul
xor
add
cmp
lret
cmp
push
jg
mov
mov
divl
test
lods
pop
fstps
test
dec
adc
leave
int
pop
sub
inc
dec
int
and
lcall
into
xchg
add
mov
xchg
pop
lods
roll
lret
or
jnp
gs
sub
mov
xchg
mov
xchg
mov
push
add
lahf
add
out
jnp
or
push
ljmp
sbb
scas
mov
or
test
leave
stc
fs
mov
mov
jmp
nop
orb
push
xor
jmp
adc
in
negl
cmp
push
lahf
out
mov
add
movsl
add
add
je
jmp
add
dec
loopne
pop
in
nop
pop
and
xchg
push
mov
add
xor
mov
andl
mov
sub
clc
es
das
mov
out
add
loopne
adc
dec
adc
adc
lcall
call
movsl
mov
jno
mov
lret
and
jle
xor
xchg
out
mov
jg
stc
pop
and
inc
dec
cwtl
pop
xchg
std
call
pushf
subl
or
outsl
inc
add
mov
mov
ds
div
add
jmp
lods
test
mov
gs
xchg
push
sbb
jl
add
movsl
add
add
jnp
and
mov
jo
adc
mov
jb
lret
pusha
adc
sbb
sub
iret
hlt
in
shrl
aad
mov
cltd
mov
test
gs
jecxz
push
nop
leave
mov
or
mul
in
adc
jmp
adc
cli
xor
push
inc
cmpb
inc
es
ljmp
sub
loopne
iret
push
fstpt
inc
lcall
ret
in
dec
shll
mov
xor
imul
adc
adc
cmp
jbe
jmp
out
jb
ljmp
mov
jno
call
add
enter
sub
xchg
out
nop
cs
pop
jg
adc
mov
lahf
ret
xchg
jns
in
int
cmp
in
inc
lods
ljmp
push
mov
pushf
pop
mov
scas
add
mov
lret
sbb
in
jo
cmp
cmp
aaa
add
sbb
or
push
scas
sbb
or
icebp
jb
adc
pushf
and
stc
imul
sub
sbb
mov
cs
in
sub
imul
add
int3
jecxz
add
movl
movl
movl
movl
movl
jmp
jg
int
in
idivl
aas
movd
dec
out
movb
push
cmc
pusha
cmp
add
loope
pop
ret
mov
dec
pop
sahf
xchg
xchg
mov
push
mov
aad
push
call
scas
add
bound
rclb
sub
mov
fstpt
or
xor
mov
test
adc
test
dec
ret
and
mov
fstps
les
loopne
add
call
jmp
lock
or
clc
rorb
sbb
fsubl
dec
popf
jnp
inc
cmovne
mov
mov
mov
mov
xor
imul
jmp
arpl
xchg
insb
push
jo
mov
add
sbb
decb
out
popf
xor
adc
subb
ja
jg
imul
clc
push
stos
push
ljmp
loope
adc
arpl
stos
insb
jle
mov
inc
pusha
mov
fbstp
sbb
push
dec
dec
xchg
notb
out
popf
fnstenv
mov
jmp
std
loop
xor
pop
cs
aam
dec
add
inc
mov
movsb
inc
adc
cli
mov
cld
out
repnz
leave
in
or
fiaddl
call
xchg
cmp
inc
in
inc
add
mov
jge
xchg
mov
jmp
xchg
test
mov
add
jae
adc
add
inc
daa
pop
leave
cmp
lods
idivb
inc
into
js
jecxz
sbb
repnz
fwait
jg
cwtl
lock
test
adc
sti
xchg
inc
pop
adc
add
sti
sub
mov
xor
xchg
das
dec
sbb
add
ja
ret
mov
loope
jmp
adc
sbb
mov
sbb
push
mov
mov
shlb
cmp
jnp
xchg
outsl
lds
dec
movsb
hlt
push
xor
ss
mov
testl
pop
add
shll
addr16
insl
jnp
lea
pusha
add
jmp
jecxz
mov
fcomip
andb
mov
sbb
xchg
add
xor
stos
push
jo
adc
pusha
mov
xchg
and
add
loopne
mov
mov
mov
gs
adc
cwtl
in
add
aam
fidivrl
call
ss
out
ficompl
lcall
push
push
inc
mov
iret
leave
daa
in
sbb
sub
shl
int3
xchg
mov
xchg
lret
notl
jne
loope
inc
int
sub
cltd
xchg
out
jp
mov
pop
sarl
lcall
popl
and
cmp
push
mov
jmp
cwtl
xchg
jb
jp
fidivs
shrb
or
movsl
add
add
out
add
push
js
xchg
dec
pop
outsl
imul
cmp
or
push
inc
adc
and
ss
xor
cmpsb
sbb
or
js
mov
jne
push
fwait
inc
mov
shlb
or
std
pop
in
out
lret
push
jg
sbb
lcall
mov
sbb
lret
lods
inc
dec
mov
data16
inc
stos
push
mov
rcrl
gs
xorb
stc
gs
xorl
lcall
inc
xchg
leave
dec
lea
cs
movl
movl
movl
movl
jmp
xor
or
jnp
incl
add
sti
xor
jne
ja
cmp
hlt
pop
cwtl
sub
push
ficompl
xchg
push
xor
adc
mov
xor
dec
xlat
dec
push
mov
arpl
jne
cmpsl
pop
push
pop
test
outsb
jo
clc
pusha
push
xor
dec
dec
das
xor
daa
mov
aam
and
cmpsl
cmp
push
fdivr
push
sub
test
and
mov
mov
add
ret
cmp
loope
iret
lret
jecxz
inc
inc
xchg
jge
and
xchg
sub
mov
sbb
int
sub
insb
mov
repnz
mov
xor
add
xor
jmp
xchg
inc
or
out
int3
mov
in
or
add
movsl
add
add
add
push
pop
movsb
jb,pt
arpl
mov
mov
subb
cltd
add
out
pop
mov
jae
jle
xchg
dec
adc
jecxz
ja
sbb
aam
pop
cmp
or
lods
xchg
jns
pop
fs
inc
xchg
jo
out
adc
inc
mov
in
push
scas
jns
mov
adc
cltd
jbe
fs
jbe
push
push
or
push
or
bound
mov
sbb
imul
andl
mov
imul
inc
ret
cli
mov
sub
jmp
mov
cmpsb
or
mov
jbe
je
mov
add
shr
xor
inc
test
add
aad
adc
mov
xchg
mov
xor
sub
xchg
sub
inc
cli
jge
fisubs
add
test
or
jl
or
add
mov
cmp
xchg
stc
mov
out
xor
sbb
aaa
in
pop
mov
mov
jne
add
xchg
out
popa
jno
sbb
mov
xor
pop
sbb
sbb
mov
mov
adc
dec
fwait
stos
pop
sbb
aas
addr16
ret
addr16
cli
mov
pop
and
mov
mov
mov
jmp
test
push
mov
mov
mov
movsl
add
add
or
xor
push
aad
sub
xor
inc
and
or
xor
inc
or
xchg
loopne
and
mov
ljmp
rcrb
sub
pop
xchg
jl
mov
pop
movsl
pop
outsl
sub
push
jp
jl
jno
mov
testb
or
cmc
test
outsl
fldenv
lods
fdivrl
lods
inc
rclb
les
rclb
mov
fs
lcall
push
mov
iret
sub
add
xorb
jle
cmp
mov
or
and
mov
add
xor
mov
jmp
enter
fistps
mov
xor
jno
xchg
mov
add
adc
pop
repz
sbb
or
lret
aas
repnz
jp
popf
in
push
push
jne
adc
rcrb
jp
mov
lods
jbe
jnp
dec
lcall
std
cmp
test
and
outsb
movsb
mov
jo
inc
hlt
loop
xor
mov
cli
xor
imul
or
mov
xchg
push
cs
jno
cmp
sub
jo
fwait
movsb
jg
aas
iret
push
cs
cmpsl
gs
pmuludq
sti
xchg
jge
mov
sub
mov
mov
jmp
mov
jge
out
fucomip
xchg
ficoms
add
add
mov
mov
repz
push
out
mov
ljmp
cmp
sub
test
leave
in
push
and
push
insl
fistpll
sub
scas
add
ret
lods
sbb
cmp
jo
js
mov
mov
shl
sbb
jp
and
outsl
ret
popa
pushf
mov
and
scas
mov
inc
dec
loope
dec
movsl
std
insb
sbb
cmp
add
stos
mov
rcrb
pop
push
adc
mov
aaa
pop
jmp
int3
ret
or
enter
sbb
std
movl
pop
mov
mov
mov
jmp
cltd
loope
add
adc
stc
dec
dec
mov
xor
mov
add
adc
inc
repz
mov
cld
clc
loopne
les
pop
sbbl
inc
rorb
sub
and
insb
push
and
out
xlat
outsl
daa
movsb
aad
int3
clc
pop
outsl
xchg
in
inc
mov
loop
daa
loop
and
sarl
int3
sub
bound
pop
stc
icebp
call
cmp
or
jnp
fiaddl
movsb
sub
dec
je
int3
frstor
cs
lret
sub
stos
mov
jmp
fnsave
dec
xchg
dec
roll
adc
icebp
or
adc
into
xor
xchg
cmpsl
mov
in
inc
imul
or
and
xor
jmp
ljmp
leave
dec
sub
xchg
aam
lds
orb
lcall
jb
push
das
sbb
jns
pop
pusha
sar
push
or
icebp
popf
sbb
mov
popa
mov
or
aaa
nop
stos
out
jne
xchg
sti
mov
fsubrl
divb
pusha
loopne
mov
rcrb
xchg
add
xchg
or
mov
jo
jne
jnp
and
jnp
add
pop
pop
icebp
data16
pop
push
scas
inc
ja
mov
andb
aam
int
mov
arpl
mov
sti
or
shlb
add
mov
pop
in
inc
out
idiv
pop
int
or
xor
lea
add
xchg
cwtl
pop
inc
ss
xchg
clc
hlt
lret
testb
mov
pop
pop
inc
jbe
mov
out
iret
inc
jae
jbe
pop
movsb
xchg
push
fistl
pop
bound
xlat
lret
adc
add
pop
iret
adc
push
or
xchg
cmpl
pusha
fmulp
lfs
xchg
mov
call
and
cmc
xchg
daa
push
add
das
sub
fcmovu
shufps
sub
inc
icebp
xor
mov
mov
inc
mov
fnsave
xor
mov
div
jmp
cmp
fs
mov
push
pop
roll
add
movsl
add
add
into
and
ds
adc
popa
mov
inc
sbb
add
lds
mov
incb
dec
mov
iret
stos
popa
iret
dec
mov
popa
pushf
and
xor
inc
pop
enter
fnstsw
pop
sbb
pop
xchg
fisttpl
add
mov
add
jnp
outsl
rol
xorb
arpl
js
jnp
outsb
push
xlat
dec
add
aad
mov
jns
fdivrl
sarb
in
sbb
jb
test
clc
shlb
push
dec
test
fisttpl
daa
out
pop
gs
pxor
mov
inc
fsubrl
imul
or
sub
cmp
jbe
pop
leave
ret
jmp
sbb
adc
lock
nop
test
insl
daa
xchg
mov
mov
hlt
cmpsl
pop
cmp
ret
vphaddbd
stos
std
dec
lods
shll
mov
out
je
pop
popa
mov
mov
xchg
jle
insb
lret
jno
sub
mov
shrl
sahf
mov
cmp
nop
pop
aam
push
int
lods
imul
jnp
imul
push
jl
es
push
jo
int
cmpsb
addl
dec
mov
test
mov
mov
sarl
xchg
xorl
mov
push
jne
pop
cmp
test
xlat
xchg
jle
xchg
addr16
and
lret
cmc
stos
imul
gs
popa
add
lods
mov
mov
ret
push
mov
sub
movl
or
movl
movl
mov
xor
mov
sub
xor
xor
mov
add
add
mov
incl
imul
andl
xor
andl
div
cmpl
ja
jmp
pushl
push
call
mov
jmp
gs
dec
mov
inc
fstl
sub
add
out
mov
pop
loop
pop
mov
imul
outsb
rclb
lret
adc
in
mov
xor
fnstenv
mov
inc
enter
js
and
mov
mov
jb
int
inc
add
adc
mov
mov
ljmp
push
adc
xchg
cltd
and
mov
ret
ss
pop
add
dec
stc
mov
inc
mov
xor
aad
sbb
jno
ds
sbb
scas
push
imul
imul
and
jmp
add
inc
push
repnz
stos
test
xchg
and
xor
push
jmp
push
rcl
data16
data16
arpl
push
xchg
push
cs
ljmp
add
dec
push
mov
or
or
ret
pop
xchg
jbe
adc
pushf
xchg
push
call
int3
jo
fcom
inc
scas
fs
les
in
lods
dec
idivl
mov
andl
lock
pop
aad
inc
shlb
test
pop
imulb
and
xchg
mov
imul
lea
cwtl
fmuls
ret
pop
arpl
push
xor
out
inc
loop
xor
sub
test
test
xchg
jae
sub
lret
or
mov
mov
test
fildll
push
push
mov
inc
lods
mov
inc
mov
inc
fidivs
cmpsb
mov
outsb
pop
push
push
sub
mov
mov
xor
xor
sub
xor
movl
cmpl
jg
jmp
pushl
push
call
movl
movl
jmp
popf
mov
xor
mov
insl
add
scas
and
mov
jo
cmp
leave
outsl
adc
push
lret
out
int
mov
pop
mov
jb
xchg
jns
xchg
pushf
add
push
lods
lock
push
mov
mov
pop
rcll
stos
idivb
arpl
jno
daa
movsl
jecxz
lds
cwtl
les
cmp
in
cmpsl
xchg
jp
gs
movsb
dec
ret
jl
pop
pop
push
sbb
dec
stos
data16
pop
push
mov
jmp
pop
mov
das
dec
in
addb
push
mov
mov
push
mov
mov
stos
fidivrs
pop
push
les
add
mov
mov
xor
div
mov
mov
mov
add
imul
mov
mov
sub
and
sub
mov
adc
mov
jmp
push
and
mull
aam
lahf
push
xchg
add
mov
sbb
or
bound
push
push
insb
and
lea
dec
popa
rdpmc
and
push
pop
test
xchg
ja
inc
and
or
add
push
fistl
dec
sarl
jle
jle
movsl
jg
cmp
and
cmpsb
imul
test
lds
add
out
sbb
loop
adc
arpl
push
shrl
pop
jmp
stc
stos
loope
sub
adc
sahf
add
sub
out
call
test
cmp
mov
dec
cmpsl
and
notl
fmull
sahf
and
bswap
repnz
pop
pushf
xor
pop
mov
cmp
sub
inc
cmpsl
mov
movl
addl
movl
mov
xor
mov
movl
mov
mov
movl
add
mov
and
jmp
outsb
jl
clc
jle
out
push
jge
pop
int3
pop
cmp
mov
je
mov
into
jb
decb
or
dec
popa
lcall
rorl
inc
dec
lods
mov
test
pop
xor
xlat
add
ret
xchg
xchg
imul
sbb
xchg
cmp
inc
stc
dec
and
lock
fsubrl
insl
mov
mov
out
mov
sbb
sti
adc
jb
cmp
subb
or
jb
xchg
pusha
xchg
popf
inc
jmp
mov
push
pop
sbb
xchg
xchg
mov
rorb
sbb
cmp
adc
mov
ret
sbb
xchg
dec
insl
mov
andl
xor
and
xor
xorl
jmp
pop
xchg
pop
or
inc
mov
mov
out
add
mov
loopne
rorl
imul
fwait
inc
push
cld
jle
mov
push
out
filds
std
mov
je
scas
and
sub
int3
dec
int
sbb
cmp
hlt
sub
sarl
cmc
mov
fldl
adc
popf
mov
cmp
sahf
arpl
xor
jb
xchg
cltd
mov
mov
inc
push
fcoml
push
cmpsb
rcll
test
pop
test
dec
jnp
adc
les
pop
mov
adc
gs
fwait
imul
mov
stos
aaa
mov
lret
or
ljmp
repz
jmp
daa
xchg
and
loope
inc
loopne
adc
xor
mov
subl
imul
cmpl
ja
jmp
pushl
call
jmp
pop
lds
ljmp
sub
lret
out
cmp
add
add
mov
jb
jp
jb
insb
or
add
in
dec
fnstcw
inc
inc
add
daa
cmpsb
or
push
loopne
roll
mov
mov
jnp
mov
ja
imul
aas
cwtl
xlat
push
cwtl
sub
loopne
lret
push
rcr
push
popf
aam
roll
icebp
divb
sub
mov
outsl
dec
shll
pop
mov
add
pop
jg
stos
icebp
dec
mov
into
pop
adc
mov
pop
jns
xchg
sub
int3
movsb
mov
mov
jbe
insb
addl
subb
and
and
mov
xrelease
xchg
mov
mov
adc
or
lea
mov
add
mov
jmp
jecxz
xchg
hlt
mov
test
in
xchg
add
mov
mov
lahf
adc
scas
jl
icebp
jae
mov
add
repz
xchg
negl
inc
push
dec
andl
pop
imul
and
or
imul
rcrl
sbb
jo
add
jge
pop
xor
mov
rclb
xor
ud2
mov
sub
inc
jmp
call
inc
inc
mov
js
cmpsl
imul
cmc
xor
js
out
out
aas
in
push
iret
xor
std
mov
mov
shrl
xchg
inc
scas
outsl
flds
mov
cmovne
rorb
shl
jle
out
cmpsl
ret
mov
xchg
xor
movl
add
movl
cmpl
jg
addl
jmp
pushl
pushl
push
pushl
call
mov
jmp
cld
sahf
lret
repz
cld
lahf
push
mov
or
and
add
js
pusha
lock
fdivrs
push
lea
rolb
sub
repz
sbb
mov
fcmovnb
or
lea
into
fwait
push
xchg
push
je
xchg
push
adc
test
or
mov
mull
mov
cmp
jo
and
rol
or
push
inc
xchg
jns
ds
stos
ret
mov
mov
stc
out
mov
and
stos
rorl
icebp
decb
and
mov
aam
scas
aam
adc
add
insl
xor
add
dec
sbb
dec
jo
clc
je
push
fnstenv
dec
cmp
adc
push
repz
mov
add
xor
div
mov
xorl
or
not
jmp
outsb
inc
and
sub
jg
shll
add
xchg
add
mov
and
xorl
in
pop
jmp
adc
adcb
clc
bound
cmpsl
pop
fxch
mov
mov
and
out
dec
lret
into
mov
movl
dec
mov
cli
sbb
fdivrs
gs
add
add
imul
adc
mov
mov
push
fisubrs
cmp
test
push
add
adc
cwtl
rclb
push
popf
xchg
push
stos
shl
lcall
inc
jbe
aam
notb
sub
in
jecxz
adc
xor
stc
cmpsb
xchg
into
in
mov
pop
xchg
cli
or
addr16
ljmp
push
mov
rcrl
mov
out
insb
add
sub
mov
and
jmp
mov
mov
test
push
dec
dec
fildl
xchg
add
mov
inc
lret
out
push
lea
push
mov
push
jns
jg
rcr
jle
call
ret
call
es
xchg
test
lret
push
lret
daa
out
and
dec
dec
push
daa
lds
and
add
and
and
xchg
pop
pop
dec
js
dec
pop
ja
xchg
cld
dec
into
inc
mulb
in
push
pop
in
add
roll
dec
outsl
test
enter
and
adc
lret
stos
enter
into
cmp
add
mov
pop
mov
mov
pop
jne
jne
das
inc
xchg
es
dec
push
sub
mov
push
add
cmpl
jle
or
jmp
push
call
jmp
cmp
subl
insl
in
pusha
xchg
add
mov
fldenv
pop
and
stos
or
loop
push
adc
out
stos
dec
ljmp
ja
adc
adc
push
and
jns
out
sarl
addr16
or
scas
push
movsl
leave
andl
fwait
dec
stos
and
addl
jg
sbb
mov
and
arpl
pop
pop
push
adc
mov
loop
out
mov
sbb
cmp
mov
inc
rep
adc
sub
je
fwait
mov
xor
or
push
adc
nop
lods
push
adc
xor
push
arpl
outsb
pop
push
clc
mov
adc
pop
xchg
aaa
repnz
pop
fidivs
mov
jmp
nop
jno
xlat
repz
mov
jns
inc
in
xcrypt-ctr
cmpsl
lahf
pop
cwtl
add
mov
testb
push
add
dec
pop
cmp
les
ror
cmp
mov
sbbl
pop
mov
int
rorl
adc
xchg
and
outsb
adc
jge
popf
lods
lahf
movsl
xchg
iret
insb
loope
mov
fildll
nop
adc
shll
movsl
jns
mov
sarb
pushf
mov
pop
xor
adc
add
aad
dec
clc
stos
andl
mov
jmp
ja
jns
inc
iret
sti
xchg
mov
aad
daa
inc
movsl
push
push
aam
pushf
xlat
loopne
dec
fidivrs
int3
push
push
shlb
stos
push
add
out
insl
aad
dec
sub
jmp
cld
lret
mov
mov
loop
int
lret
ficomps
add
cmp
add
cwtl
sub
lret
jbe
sbb
xchg
out
inc
jae
sbb
xlat
div
fwait
scas
ret
inc
or
sahf
imul
mov
in
fldenv
dec
push
popf
jne
fistpll
ds
and
insb
push
push
or
aad
xor
jmp
adc
jmp
xor
mov
sbb
notb
fs
scas
ret
sub
dec
loopne
adc
notb
mov
shlb
inc
jnp
repz
jbe
cmp
out
pop
out
xchg
inc
pop
stos
faddl
xor
jmp
hlt
sub
lea
inc
fadds
push
test
cmpsb
and
sub
mov
movl
neg
movl
or
mov
cmpl
jbe
subl
and
jmp
push
pushl
push
call
mov
xor
add
imul
or
sub
jmp
sub
add
cmpsl
pop
testb
add
popf
cltd
add
mov
enter
ja
in
imul
dec
xlat
jg
js
sub
nop
mov
or
add
rorb
mov
add
jg
push
cli
ret
add
sub
les
test
adc
sbb
gs
sarl
inc
dec
sahf
mov
pop
cmp
jo
aaa
dec
lcall
adc
imul
push
mov
mov
and
mov
xchg
cmp
popa
push
sahf
cmp
sti
xchg
mov
push
notb
and
mov
dec
sbb
ja
push
pop
out
mov
push
in
daa
insl
insb
mov
fmuls
stos
sbbl
into
stc
mov
shrb
adcl
jmp
js
mov
mov
push
xchg
mov
pop
lcall
or
adc
xlat
adc
stc
insl
popa
sbbb
loop
test
xor
pop
push
into
jge
pop
fisttpl
jae
aaa
or
lret
fsubs
stos
fimull
pop
fisttpll
push
sbb
negl
outsl
psubw
xor
cmpb
adc
jg
sub
iret
mov
add
fwait
cmp
inc
daa
xor
jge
aad
ja
pop
ds
imul
pop
xchg
es
cmp
and
jno
xor
dec
xor
stos
or
lret
inc
fcmove
lcall
cmp
sub
lret
dec
popf
shrl
inc
push
xor
inc
fsubs
xor
movl
movl
jmp
push
cmc
aaa
fidivs
cmp
imul
add
add
in
aam
mov
sub
cmp
dec
movsl
js
dec
shl
jmp
fwait
movsb
popa
rcrl
and
xor
icebp
xchg
mov
scas
es
sbb
data16
pushf
cmp
inc
xchg
jno
fdivrl
xor
cmp
aad
lret
pop
dec
cmp
mov
adc
loopne
sbb
das
ret
jbe
mov
add
scas
jne
inc
cli
jae
aas
mov
jge
dec
in
cmp
mov
push
xchg
out
cld
sbb
inc
cli
xchg
rorb
jne
fcompl
jmp
push
cld
xchg
sub
insl
mov
jnp
mov
incb
mov
fldcw
lret
imul
add
add
jmp
lods
hlt
mov
jg
incl
in
int
fwait
add
mov
fnstcw
jecxz
dec
add
fdivr
adc
mov
sbb
aas
mov
mov
and
sbb
negl
insl
xchg
sbb
mov
xchg
mov
and
dec
in
inc
sub
sbb
mov
jbe
cmp
mov
icebp
inc
pop
pop
data16
mov
ds
fidivl
daa
or
pop
sahf
pop
fwait
push
push
ss
and
jl
and
mov
cmc
pushf
movsb
ds
push
in
and
test
test
cld
add
popf
std
inc
test
addb
cmp
push
int
int3
jae
movl
mov
mov
xor
xorl
imul
mov
andl
xor
addl
or
jmp
test
ljmp
sbb
cltd
pushf
add
mov
jbe
push
fisubrl
popf
inc
sarl
push
dec
insl
in
cmp
js
jns
adc
jns
or
xor
inc
arpl
push
lock
sub
loopne
dec
dec
or
xchg
mov
nop
cli
imul
jbe
mov
xor
adc
push
dec
mov
ret
mov
test
push
ljmp
jge
pop
pushf
cmpsl
popa
sub
leave
add
sbb
mov
add
jp
cmp
add
mov
loopne
repz
xchg
jb
sti
inc
push
shrb
and
mov
leave
cmpb
dec
xchg
lret
imul
das
ror
mulb
mov
shrb
popa
or
fdivs
and
addl
or
cmpl
jb
mov
sbb
jmp
pushl
pushl
push
push
push
push
pushl
push
call
mov
sub
mov
movl
mov
movzbl
and
jmp
in
cmp
xchg
repz
jg
or
dec
cmc
ficoms
pop
popf
add
mov
adc
jp
cmc
mov
add
xchg
xchg
xor
and
call
mov
jnp
sbb
addr16
fdivl
dec
mov
xchg
stc
sub
in
mov
xor
into
and
mov
cwtl
inc
test
ljmp
mov
cmpsl
mov
mov
xchg
shlb
push
jo
mov
test
loop
out
enter
jge
mov
lcall
fdivrs
xor
add
aaa
mov
fadds
xchg
outsl
addb
lret
and
fwait
inc
pop
stos
xor
stc
xchg
out
or
xor
jl
repz
add
add
xlat
add
add
jg
faddp
cwtl
adc
pop
sahf
add
mov
popa
mov
add
in
and
aas
lret
pandn
pop
and
push
nop
stos
dec
add
je
popa
iret
lods
or
mov
xor
sub
jnp
sahf
or
fwait
movsl
mov
adc
xor
mov
mov
sbb
cld
psubsw
or
jae
faddl
jecxz
jle
scas
jno
ficompl
push
ja
gs
or
shl
mov
orb
xlat
cmp
jle
scas
xor
mov
cmp
add
arpl
in
sbb
imul
cld
jle
and
sub
int
sub
add
jp
sub
add
add
pop
sub
mov
sub
movl
movl
adc
mov
andl
mov
jmp
mov
and
jge
leave
std
fnstenv
fisubl
add
mov
xchg
xchg
sbb
bound
pushf
mov
mov
mov
insb
jp
jnp
aaa
adc
dec
das
cmc
push
sbb
jmp
iret
scas
sahf
dec
cmpsl
lcall
push
scas
mov
bound
nop
inc
adc
insb
je
adc
ja
leave
jae
lahf
and
push
jp
xor
fwait
rol
sbb
aam
cmp
gs
mov
lret
add
add
addl
xchg
mov
shll
movsb
movsl
clc
fistpl
fstl
fistps
fidivs
inc
pop
mov
pop
into
sub
lods
ret
xor
cs
addl
xor
inc
add
sub
add
and
mov
movl
sub
jmp
cmp
outsl
jg
mov
fadds
or
aas
xchg
lahf
add
mov
jge
adc
or
adc
inc
into
cmp
cld
jl
inc
push
sub
pop
ja
mov
in
outsb
loop
xchg
or
mov
jmp
sahf
push
insb
cld
xchg
adc
negb
adc
imul
mov
cmpsb
call
pop
push
lahf
pop
pop
mov
mov
sbb
xchg
and
mov
leave
hlt
lahf
lret
aas
xchg
in
test
and
cltd
lock
mov
shlb
in
pushf
dec
push
add
outsl
sub
enter
mov
dec
lods
cmp
and
fistl
sub
xor
mov
roll
sar
popf
jbe
push
movw
add
sub
movl
adc
jmp
sbb
test
nop
mov
lahf
gs
mov
add
cmpsl
movsl
mov
pushl
inc
scas
pop
jle
loopne
iret
fisttpll
jge
ss
mov
lret
stc
icebp
arpl
mov
push
sbb
test
push
scas
bnd
out
or
outsl
out
sub
fcoms
daa
mov
daa
sbb
sub
and
inc
push
loopne
pop
pop
out
das
push
sub
std
loope
ds
call
xor
dec
push
inc
daa
lods
dec
xor
push
mov
rorl
test
dec
or
cltd
aam
lea
xor
mov
inc
lds
icebp
jle
clc
mov
jae
or
loope
xchg
imul
pop
inc
lds
lods
inc
xchg
outsb
mov
xchg
ds
fcomp
sbb
add
or
mov
and
mov
add
xorl
jmp
lock
xchg
fnstenv
int
push
mov
add
mov
mov
leave
mov
push
adc
int3
subb
dec
push
sub
and
push
ficoms
push
xchg
dec
inc
out
ja
add
jns
insl
andl
adc
std
jne
jecxz
es
pop
out
int
cs
lods
pop
movsl
insl
xlat
lret
enter
jae
or
push
and
push
cmp
push
out
dec
mov
xlat
outsb
in
or
into
jb
inc
aad
lcall
fcom
jno
ds
add
fwait
push
jo
jb
imul
test
stos
inc
subb
lret
aas
mov
and
mov
inc
and
push
mov
and
aad
inc
and
or
xorl
jmp
into
jo
stos
mov
add
imul
add
mov
jg
stos
xchg
inc
dec
ret
add
adc
sbb
xor
xlat
test
insl
pusha
daa
sti
icebp
lea
into
cmpsb
addr16
test
cmpl
lds
jne
aad
shlb
mov
jo
daa
and
std
imul
cltd
jmp
lds
jb
and
ja
sbb
dec
daa
xor
pop
and
add
xchg
cmp
mov
mov
pop
rcr
mov
icebp
je
out
push
fwait
jo
enter
cmp
mov
icebp
popf
aam
jecxz
mov
lea
bswap
xchg
rorl
xor
mov
mov
andl
lea
jmp
cmp
test
sti
push
cmp
mov
int
mov
add
sbb
insl
pushl
sub
sahf
sub
mov
in
fisubrs
mov
pop
jmp
push
mov
aad
insb
fnstsw
loopne
mov
mov
jl
sub
mov
and
in
mov
push
mov
rclb
popf
in
enter
inc
jns
loopnew
add
test
fidivrl
out
push
fisubs
sub
jbe
inc
xchg
popf
scas
sub
cmc
or
xchg
pop
fdivl
or
test
mov
push
in
push
leave
mov
loope
jb
pop
or
pop
mov
cmp
aam
cli
daa
sub
fwait
cltd
hlt
adc
push
decl
jmp
cmp
jns
sti
sti
inc
out
dec
int
cwtl
mov
add
cmp
push
push
xchg
or
push
mov
fidivs
insl
mov
rclb
add
ds
mov
mov
add
xorb
pop
ljmp
mov
ficompl
test
inc
sub
lret
stc
push
jns
xchg
pop
mov
roll
imul
inc
jge
jmp
repnz
loope
mov
lock
fimuls
in
push
cmp
mov
jl
imull
sbb
popa
inc
mov
push
lods
lahf
cmp
cmp
cmc
push
pop
mov
cmp
mov
aad
and
add
and
mov
cmpl
ja
xor
jmp
pushl
call
mov
or
jmp
jle
fstpl
in
adc
xor
movsb
add
mov
les
pop
mov
sub
sub
cmovg
jnp
and
shl
xor
popa
xor
aam
mov
dec
testl
push
jge
sub
add
inc
ret
pop
les
fstpt
pop
jecxz
add
ss
mov
cmp
aad
shrl
lds
aas
push
mov
sbb
mov
sub
sub
mov
ja
nop
sbb
clc
push
mov
insb
aam
mov
repz
mov
jnp
ds
aaa
fcompl
adc
rcr
mov
aam
fldl
cltd
and
push
test
mul
add
xor
push
pop
mov
adc
div
mov
xor
sbbl
xor
jmp
dec
test
xchg
out
fdivrp
inc
lahf
sbb
inc
hlt
xor
movsb
add
mov
pop
jg
pop
lods
push
mov
out
outsb
iret
pop
sub
mov
data16
sub
test
cmp
pop
enter
and
lcall
sub
sbb
out
cwtl
shll
mov
jno
mov
loop
xchg
sub
mov
test
xor
lods
in
jae
inc
dec
shrl
dec
jns
orb
lcall
stos
mov
cmpsb
inc
dec
add
out
dec
jnp
test
xchg
mov
sbb
test
sbb
pop
out
add
adc
test
mov
mov
inc
insl
push
test
cmp
add
adc
mov
sbb
movl
adc
movl
jmp
aad
mov
xlat
loopne
push
lahf
aad
fnstcw
mov
iret
cmpsl
gs
cwtl
dec
mov
bswap
adc
push
repz
aaa
jae
mov
push
add
cmpsb
xchg
stos
fwait
lahf
repz
dec
adc
fscale
sbb
dec
mov
rcll
aaa
mov
mov
mov
and
iret
jg
dec
in
fisubrl
aas
arpl
add
loop
subl
dec
icebp
push
or
sub
xchg
or
add
cmp
inc
add
test
in
pop
push
mov
sahf
fdivs
xchg
or
sub
shr
cmp
and
test
imul
rol
add
movl
cmpl
jb
or
jmp
push
push
call
jmp
mov
scas
mov
int
xchg
add
fs
pop
sbb
scas
pusha
xchg
cmpsl
or
jns
pop
aam
test
scas
cmp
sbb
and
movsb
mov
mov
mov
cmp
add
mov
shlb
cld
push
push
xor
les
xor
test
andb
add
cmp
jae
dec
push
nopl
out
stos
cmp
mov
jecxz
cmpsb
or
and
dec
mov
mov
iret
mov
push
out
lds
mov
jns
add
pop
sub
rol
cmpsb
push
rcll
aas
jno
push
dec
call
inc
int3
inc
popa
add
movl
movl
movl
movl
movl
xor
mov
mov
cmpl
jbe
jmp
pushl
pushl
pushl
push
call
or
mov
or
imul
xor
jmp
pop
iret
lods
jle
jg
out
into
add
dec
jae
loope
or
add
inc
xor
test
mov
popa
adc
sbb
mov
pop
adc
int
xor
add
jecxz
test
adc
ret
ss
pop
jnp
push
cmc
and
loope
sbb
shrb
std
xchg
mov
shlb
stos
movsl
pop
rorb
mov
inc
sub
jmp
ja
lret
xchg
out
jnp
pop
fwait
clc
aam
inc
xchg
dec
cmp
mov
icebp
in
mov
popa
scas
push
sahf
hlt
out
pushf
jo
fnstcw
in
mov
fisubrl
aad
pushf
add
xlat
es
add
inc
cmp
jne
jmp
pop
fbstp
mov
mov
imul
jmp
cltd
pop
pop
pop
xchg
push
fdivp
test
or
mov
jl
in
push
dec
mov
lret
mov
cltd
sbb
xor
jae
jl
cmp
add
ret
mov
xchg
lods
and
or
adc
cs
mov
outsl
inc
dec
xor
lret
inc
jnp
rsqrtps
imul
shlb
xor
mov
push
pop
mov
sbb
jl
adc
call
cvtps2pi
cld
arpl
inc
daa
xor
xchg
inc
test
les
inc
out
cmp
mov
jmp
sbb
test
xor
out
ja
daa
mov
mov
cmp
mov
inc
cld
mov
mov
sub
or
mov
or
mov
sub
imul
jmp
stos
jl
mov
mov
push
pop
adc
fimuls
add
add
pop
pushl
jb
xchg
out
jb
je
insl
or
xchg
out
je
jecxz
out
loop
mov
dec
push
fisubrs
cmpsb
sub
pop
pop
fidivrl
mov
fsubrl
and
out
pop
push
mov
xlat
repnz
adc
pusha
xor
mov
add
mov
rorl
insw
aam
jno
sti
out
dec
in
jbe
dec
sub
rcr
pusha
cmp
clc
mull
cmc
jno
pop
pop
sub
xchg
lods
or
mov
loop
cmp
aam
jo
decb
or
pop
adc
fsubrs
jg
pop
push
push
sbb
jl
pop
addl
add
rorb
adc
mov
add
add
mov
mov
sub
xor
jmp
push
xchg
mov
mov
out
data16
fiadds
fistpll
dec
test
add
or
sub
or
fld
mov
loope
and
mov
cltd
in
jne
push
hlt
shrl
mov
out
hlt
sbb
push
es
jp
or
nop
lds
repz
stos
daa
gs
idiv
in
jecxz
jg
hlt
inc
call
addb
movsb
rol
add
leave
xor
cmp
in
loop
out
es
mov
in
cmp
push
sbb
sub
pop
rorl
sub
jno
jb
push
daa
lods
push
nop
sarl
xchg
imul
sbb
out
push
or
shlb
xor
jb
sub
mov
mov
bound
jbe
mov
and
or
jmp
jp
xor
outsl
mov
add
add
push
ret
cld
popf
jne
xor
mov
test
das
mov
arpl
or
fcmovne
clc
std
adc
aam
mov
lahf
and
in
outsl
jbe
mov
call
cmpsl
lcall
sub
flds
and
mov
iret
test
push
jg
test
add
xchg
pop
int
or
fstl
mov
lea
imul
out
fisubrs
push
enter
pop
in
jg
imul
stc
mov
leave
mov
push
pop
std
push
adc
inc
fsubl
jno
dec
dec
mov
dec
hlt
sbb
xor
mov
mov
adc
add
movl
cmpl
jg
jmp
pushl
call
mov
mov
jmp
rorb
enter
or
data16
stos
add
mov
add
and
fstpl
xchg
in
repz
mov
or
fcompl
mov
pop
pusha
pop
sbb
movsl
dec
mov
mov
pop
mov
repnz
out
sub
mov
into
sbb
jns
rolb
xor
add
push
xor
out
sub
fs
ljmp
stc
daa
mov
mov
mull
inc
fdivp
xchg
ss
fnstenv
scas
mov
addr16
out
lods
jle
sub
pop
adc
mov
pop
pop
loope
les
xchg
mov
nop
mov
jne
mov
adc
inc
enter
jmp
inc
int3
jmp
push
push
and
and
repz
push
jp
in
test
mov
and
cltd
pop
push
add
mov
fstpl
inc
out
pop
inc
jle
mov
sti
add
pop
adc
dec
or
sbb
xchg
out
ljmp
bound
inc
test
add
ja
sub
xor
xor
dec
jp
pushf
mov
fwait
clc
or
les
jmp
pop
and
mov
nop
aas
xor
push
or
jge
inc
xor
outsl
ret
scas
sbb
std
das
or
out
or
push
fs
mov
and
rcrb
inc
mov
cs
dec
movsb
or
xlat
insb
sub
jle
or
push
gs
mov
mov
sbb
mov
mov
mov
xor
orl
xor
mov
sbbl
jmp
sub
ljmp
pushf
in
lahf
dec
add
add
add
xchg
jle
imul
addb
mov
xlat
xor
inc
jne
scas
sbb
popa
insb
sarb
pop
loop
outsb
sub
out
dec
adc
shlb
add
jge
pop
inc
fnstenv
xlat
movsl
movsl
fdivr
addb
stc
dec
xchg
adc
shl
idiv
mulb
mov
test
mov
xchg
lcall
pop
roll
cmpsb
and
push
sbb
jg
and
std
jp
sub
pop
ret
leave
lods
gs
loope
adc
movsb
sub
xchg
xchg
jns
out
pop
dec
pop
inc
jecxz
add
add
mov
cmp
sub
andl
sub
sbbl
imul
mov
movl
cmp
movl
je
movl
xor
mov
xorl
jmp
loopne
lahf
xchg
lahf
in
repz
lock
int
push
loopne
add
add
cmc
adc
or
out
xchg
jecxz
icebp
jbe
gs
popa
adc
fbstp
dec
fmull
out
cltd
push
xchg
scas
out
call
or
ret
iret
fbld
aas
lahf
sbb
data16
lods
mov
pop
stos
stos
into
test
out
mov
jmp
sbb
mov
in
mov
xchg
xor
and
popa
inc
aam
jne
push
out
mov
pop
ja
push
add
jg
out
mov
out
ja
push
push
inc
lods
cltd
pop
daa
notl
jge
push
hlt
and
push
adc
mov
fldcw
ret
icebp
pop
push
add
aam
sbb
call
add
sub
cmpl
jge
subl
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
shl
xor
jmp
aas
sbb
das
imul
lcall
xchg
negl
mov
jo
lods
add
mov
fldenv
fcomps
mov
push
mov
insl
mov
mov
sbb
jp
adc
dec
out
data16
xchg
sti
shlb
jle
mov
outsb
lock
xchg
pop
jns
pop
lock
adc
aaa
push
fs
or
or
nop
jbe
xor
ret
push
push
ret
jbe
inc
and
mov
add
arpl
sbb
aad
fldcw
adc
mov
test
xor
popl
xor
push
pop
xor
imul
and
push
xor
jb
movsb
in
jns
adc
pop
sbb
push
out
jae
add
imul
or
shr
xor
or
lea
sbb
mov
cmpl
jbe
jmp
push
push
push
pushl
push
push
call
mov
jmp
adc
sti
call
out
out
adc
in
mov
add
push
stos
and
dec
pusha
daa
and
jb
xor
jl
arpl
mov
rcrb
jo
sbb
outsl
cltd
cmp
leave
mov
dec
jge
inc
pop
lds
popf
insb
push
stos
cmc
or
mov
jbe
mov
inc
jge
nop
pop
or
pop
xchg
mov
adc
pop
sbb
in
or
adc
and
lcall
cli
push
cli
into
mov
sbb
cmp
inc
outsl
cmc
popa
jns
test
in
pop
hlt
jno
shll
jl
ret
negl
and
push
mov
pushf
rolb
repnz
jmp
inc
mov
inc
dec
mov
push
stos
lds
mov
pop
add
xchg
mov
mov
jmp
jge,pt
neg
idivl
std
push
popa
nop
pop
jo
fstps
scas
add
mov
popa
mov
adc
mov
shll
dec
movsl
adc
add
mov
sub
xchg
in
jmp
adc
popf
push
mov
lcall
jne
outsb
cs
sub
add
xchg
cmpsb
xchg
push
movsl
pop
rcll
pop
pop
fwait
push
push
in
sbb
inc
sub
pop
jne
xor
add
ljmp
push
setnp
and
cli
cs
sbb
mov
call
das
mov
aaa
sti
adc
sarb
nop
ret
daa
xchg
cs
hlt
sarl
push
dec
test
je
outsb
scas
jb
and
data16
dec
lock
mov
cmc
mov
mov
mov
xor
jmp
add
scas
in
leave
shlb
or
scas
add
mov
cltd
inc
es
pop
sub
dec
sub
ficoml
mov
or
sahf
and
jo
imul
sbb
fs
xor
mov
sub
imul
aas
and
mov
test
ja
clc
ljmp
sbb
std
cmp
sbb
or
or
xor
pushf
fisubl
divl
mov
out
jge
hlt
mov
jp
fildll
sub
mov
arpl
ljmp
adc
inc
int3
ljmp
xor
rorl
dec
pop
lds
or
js
mov
icebp
sub
sub
imul
jmp
notb
sahf
out
sahf
idivl
inc
adc
call
add
mov
cld
inc
test
mov
decb
jb
leave
in
and
jbe
push
flds
cmp
or
popf
mov
add
les
jl
shrl
jp
rcrb
dec
xchg
xor
mov
icebp
fs
xchg
dec
xchg
inc
mov
mov
sbb
pusha
mov
ljmp
pushf
push
fstps
cli
shlb
fldt
dec
xor
pushf
lea
push
push
sub
iret
xchg
or
adc
sbb
lock
sub
xchg
pop
mov
pusha
fisubs
jg
inc
sub
mov
test
push
jecxz
mov
sbb
pop
lods
mov
jno
ror
or
jp
jne
cmp
je
jmp
dec
mov
iret
mov
or
mov
jge
add
mov
leave
or
inc
adc
ss
xor
sti
mov
rcpps
cmpsl
stos
popa
dec
cwtl
xchg
ja
mov
sbb
dec
and
inc
pop
loope
out
xchg
sti
rcl
and
int
pop
sub
xor
ret
int
push
divb
xor
out
push
out
xchg
pop
lods
and
xor
jo
push
arpl
xchg
nop
roll
lea
pushl
loopne
nop
outsl
xor
adc
icebp
aam
sti
dec
test
inc
call
pop
in
fcmove
jbe
test
cmc
mov
ss
or
shll
pop
daa
leave
aaa
inc
xchg
sbb
mov
out
test
mov
mov
test
push
enter
jmp
inc
int
sbb
cld
ja
stos
sti
dec
cmp
xchg
ret
jo
mov
add
out
repnz
jae
nopl
inc
popf
stos
inc
push
xchg
out
sbb
cs
xor
add
mov
mov
sbb
mov
push
ret
add
xchg
outsb
mov
push
jb
pop
imul
push
sahf
mov
cmp
or
aam
mov
cs
xor
mov
lods
xchg
dec
std
lods
xchg
pop
pop
inc
test
testl
ss
ljmp
sbb
lock
xchg
repnz
loope
loopne
jno
xchg
jnp
pop
pop
xchg
cmp
sub
fnstcw
cs
cmp
fbstp
cmp
xor
fisttpll
dec
sub
lret
xor
jmp
pop
daa
in
hlt
std
pop
scas
in
pop
mov
sti
mov
add
mov
xchg
adc
inc
test
and
push
loope
mov
xchg
xor
or
adc
mov
lcall
or
sub
scas
out
mov
xchg
jo
pushf
sbb
addb
in
or
pop
push
je
mov
jmp
jae
cmp
jo
xchg
mov
clc
out
cmpsb
mov
xchg
xchg
jmp
mov
xor
outsl
repnz
int
gs
mov
icebp
push
mov
add
mov
adc
movq
jecxz
and
sarl
or
and
xchg
mov
loopne
test
lods
pop
fdivrl
xlat
mov
lahf
jno
sub
mov
imul
jmp
stos
xchg
out
das
lods
sahf
xchg
mov
mov
add
test
call
or
stos
adc
mov
lahf
add
dec
sbb
outsb
cmovo
mov
mov
shl
and
les
mov
add
sti
dec
xchg
jnp
push
lret
push
movsl
sbb
orl
mov
sub
shlb
push
jmp
dec
cmp
ret
nop
sbb
insb
inc
mov
clc
xchg
or
repnz
mov
jno
or
fldt
fildll
xchg
ja
mov
xchg
int
out
dec
popf
add
mov
stos
sahf
pop
mov
pop
xor
xchg
sbb
xor
add
mov
mov
jmp
mov
mov
mov
mov
jmp
test
xchg
and
loope
in
sarb
mov
add
mov
adc
push
sbb
into
into
jo
dec
sub
xor
pushf
jp
lret
outsb
lea
jmp
hlt
mov
and
xor
les
inc
iret
ret
add
jbe
mov
rol
jns
loopne
mov
leave
rclb
or
xchg
mov
pushf
cmp
xor
stc
dec
test
pop
mov
pop
jns
add
fidivs
fdivrs
pop
test
mov
jne
sbb
jmp
xchg
fldcw
push
cltd
jge
push
xchg
dec
mov
push
aad
xor
outsb
aad
rcl
in
xor
jmp
adc
dec
adc
add
in
std
push
lahf
cmp
add
cli
daa
in
inc
sarl
rclb
adc
sbbb
mov
and
rcr
dec
inc
sub
lea
outsb
cmp
pop
cld
sbbl
int3
mov
jns
int3
out
pushf
lret
add
xor
mov
dec
jg
inc
inc
negw
xchg
les
mov
jle
aam
jge
jge
inc
rcrl
les
or
mov
lds
jl
mov
rol
xchg
pop
fidivl
pop
scas
repnz
cli
mov
mov
mov
xchg
popf
xor
in
repz
add
cmp
xchg
dec
clc
out
push
mov
shrl
lock
imul
mov
jmp
xchg
cmp
mov
and
fdivp
mov
add
push
out
and
xor
add
int
add
jbe
mov
sti
jecxz
fs
dec
dec
dec
inc
nop
xchg
mov
push
jp
add
mov
sbb
pushf
mov
scas
add
jmp
jno
sbb
loope
sbb
cmp
pusha
adc
sahf
sbb
mov
movsb
push
gs
sbb
mov
jbe
lock
push
jae
out
inc
mov
adc
mov
scas
mov
push
push
rolb
pop
fwait
and
push
repnz
lret
sub
adcl
mov
pop
or
test
push
mov
sub
add
jmp
jne
and
jge
imul
mov
add
mov
movb
jmp
jmp
inc
hlt
push
outsl
mov
xchg
scas
cmp
mov
and
stc
jbe
dec
jae
sti
sub
push
aas
cwtl
mov
add
addr16
mov
inc
in
jo
insb
sti
xchg
int3
pop
xchg
stc
jp
loope
mov
push
ds
inc
add
pop
cwtl
in
xchg
call
sbb
cmp
xchg
inc
dec
in
rcr
aas
ret
and
cld
stos
lods
pop
rcrb
cmp
adc
rclb
push
mov
clc
push
clc
push
inc
adc
ljmp
outsl
mov
lds
loopne
repz
ret
aad
mov
or
lea
mov
movl
movl
jmp
inc
sub
popa
out
jmp
cs
and
imul
mov
add
sbb
mov
jo
xor
xlat
add
and
popa
das
jecxz
push
jne,pt
lods
out
in
js
repnz
test
and
mov
aaa
add
ror
icebp
sub
cld
mov
popa
push
fwait
es
mov
dec
push
dec
repnz
xchg
fwait
lret
jb
jb
pop
divl
nop
fcomps
popa
mov
sbb
in
jp
and
int
and
stos
aaa
push
jae
mov
lcall
test
and
push
imul
outsb
jno
push
fdivrl
gs
and
or
lret
mov
lock
jb
sub
movl
movl
movl
jmp
ficoms
fistps
mov
jecxz
jg
push
or
mov
roll
sbbb
fistpll
repnz
xor
xor
out
jno
mov
jl
push
rcr
scas
cmp
shl
push
leave
xchg
or
push
ds
adc
adc
mov
pop
scas
cmpsl
insb
popf
xchg
in
pop
out
pop
clc
jne
cmpl
adc
pop
pop
jg
test
xor
pop
test
inc
mov
lock
cmp
scas
fwait
mov
int3
inc
lret
sbb
imul
adc
int3
test
call
mov
mov
cmpsb
add
cs
push
cmp
or
rorl
sbb
movl
jmp
insl
out
push
stc
mov
ficomps
mov
add
jo
in
mov
xor
push
outsl
lds
xor
mov
jo
js
mov
lock
xchg
sti
rcll
nop
sub
mov
cltd
scas
test
movb
aam
add
dec
inc
or
and
ret
mov
test
insb
out
push
xchg
loopne
imul
inc
adc
mov
mov
and
aas
call
adc
cmc
add
loope
sub
cwtl
into
stos
fimuls
js
cld
inc
inc
fnstcw
push
nop
pop
sbbb
out
iret
pop
out
stc
fwait
decl
mov
out
sbb
aam
and
add
inc
int3
adc
add
jmp
mov
mov
jno
mov
pop
mov
add
mov
lahf
inc
pushl
cmpsb
pop
mov
repnz
pop
imul
jnp
ja
sub
loop
dec
pop
cmp
call
cwtl
mov
movl
adc
mov
push
imul
cmc
ficoms
or
rorb
add
push
fstp
aad
xor
and
mov
pop
and
rorb
sbb
adc
inc
xor
adc
jo
dec
sub
testl
clc
xor
cmp
mov
or
aad
mov
xchg
pop
mov
xor
clc
test
ret
iret
sub
mov
in
pop
popa
mov
mov
imul
sub
xor
div
mov
sub
mov
lea
mov
jmp
pop
stos
sbb
push
pop
mov
pop
scas
xor
mov
nop
hlt
mov
mov
clc
adc
dec
mov
das
sbb
xor
dec
mov
mov
mov
test
ret
fs
icebp
test
push
pusha
and
adc
and
jecxz
adc
rclb
mov
cwtd
jbe
test
cwtl
mov
fistpl
loope
in
xor
push
cmpsb
or
jo
lds
lret
hlt
jno
jp
dec
and
loopne
push
pop
addr16
fucomp
rolb
push
mov
insl
test
add
cmp
test
and
call
ja
jnp
mov
add
or
jmp
rcr
cmp
repnz
int
sti
dec
xor
add
notl
jl
out
rclb
sub
and
arpl
push
rorb
xor
lea
mov
idivb
pop
jo
mov
pop
aad
xchg
movsb
out
mov
jle
pop
test
outsl
sub
lods
or
stc
inc
and
jge
shrb
int
daa
scas
pop
scas
arpl
clc
sbb
imull
bound
add
addr16
js
andb
dec
shll
ja
push
sti
pushf
mov
lret
test
inc
ret
daa
mov
scas
sti
into
insl
mov
mov
scas
mov
push
sbb
lea
aaa
inc
loope
cmp
js
push
adc
dec
sub
mov
jmp
cli
push
jbe
jle
hlt
sbb
jae
idivb
out
mov
add
sbb
loopne
xchg
das
xchg
inc
xchg
jmp
jge
pop
cmpsb
addb
rcll
pop
ret
lods
fcmovnb
pop
sub
adc
push
and
sub
rolb
jmp
sti
or
push
add
or
cwtl
lcall
addl
mov
xchg
cmpb
rcl
jo
inc
inc
je
icebp
shll
jp
leave
fldt
push
jmp
movsl
sbb
inc
mov
push
mov
repnz
sub
pop
dec
in
outsb
dec
xchg
cld
and
jb
adc
shrl
ficompl
mov
sub
ljmp
jns
nop
bound
xchg
inc
sbb
and
add
jmp
data16
mov
dec
pop
pop
icebp
push
nop
pop
scas
mov
add
inc
mov
cli
sub
sub
into
cmc
aam
lock
inc
dec
ret
inc
jecxz
insb
jnp
in
lcall
lds
cld
stos
pop
xchg
stos
and
out
pop
dec
xchg
xlat
inc
add
cwtl
add
iret
cld
or
mov
jns
bnd
dec
add
jle
leave
cmp
mov
sub
adc
jne
cli
clc
mov
adc
out
mov
sub
call
cld
fdivl
icebp
or
shr
in
xchg
xor
les
xchg
andb
cmp
lods
cmp
repnz
aas
adc
or
enter
pop
dec
scas
cmc
pop
mov
cmp
bound
sbb
mov
mov
xor
sub
imul
add
mov
lea
mov
jmp
scas
sub
fidivrs
scas
cmp
out
je
mov
add
dec
cmpsl
cli
insl
sub
mov
movsl
cmp
lods
out
sub
xor
xor
fnstsw
inc
cmpsl
fdivrl
fadds
les
push
fwait
inc
sub
mov
mov
pop
xor
mov
comiss
out
mov
popa
insl
cli
cmp
sub
mov
mov
jg
into
mov
pop
push
scas
insb
jmp
dec
sbb
outsb
mov
aaa
lds
jecxz
mov
sbb
rorb
inc
sub
cwtl
pop
iret
lock
push
int
mov
adc
repz
mov
pop
movl
movl
jmp
bound
sti
mov
mov
mov
add
sbb
add
sub
movsl
xchg
ss
in
jmp
or
test
popl
sub
fcomps
sbb
pop
push
adc
cld
pop
sub
test
lahf
pop
mov
pop
lods
repz
xchg
mov
ret
add
sbb
imull
js
daa
push
fwait
test
or
int3
push
inc
dec
push
in
inc
dec
popa
scas
pusha
lcall
mov
cmp
dec
xor
push
or
sbb
imul
inc
scas
test
jp
push
fdivrp
aad
xchg
shlb
mov
xchg
test
xor
out
sub
test
push
sahf
mov
xchg
dec
movl
movl
jmp
rolb
fdiv
inc
push
std
dec
pop
add
jo
mov
add
or
pop
iret
push
push
jo
outsl
xor
jnp
push
arpl
fnstsw
mov
mov
ror
data16
mov
fldcw
pop
loope
push
and
call
sbb
jg
scas
cmp
dec
ret
outsl
int
mov
xchg
aam
xchg
dec
cmp
mov
xchg
lcall
cmp
nop
popf
leave
data16
movsl
pop
adc
pop
add
mov
fbstp
xor
mov
roll
adc
or
mov
push
mov
pop
movb
in
pushf
shlb
push
fimuls
mov
jb
int3
bound
mov
dec
gs
stos
mov
add
movl
movl
jmp
test
rcl
cli
xor
mov
mov
mov
push
sarb
cs
dec
mov
out
aad
ja
mov
or
lods
pop
adc
xchg
cmp
sub
xor
into
fstl
sahf
lods
xor
imul
sbb
jo
cmpsb
cmp
sbb
icebp
test
jmp
mov
adc
or
add
sti
inc
nop
leave
xchg
add
aad
out
xor
mov
mov
mov
dec
cs
push
outsl
ljmp
pop
out
add
xchg
adc
jo
roll
inc
cli
mov
sbb
lret
fadds
add
lcall
add
xlat
add
add
push
js
jnp
pop
in
outsl
orb
nop
fisubrs
add
mov
push
xor
mov
mov
cmpsb
test
mov
jno
or
arpl
sbb
dec
add
call
imul
loope
mov
outsb
jne
xor
cmp
mov
push
or
adc
clc
call
dec
scas
lcall
inc
fistpl
mov
sub
out
pop
sbb
aad
insb
loope
or
aas
aam
mov
sbb
mov
mov
mov
and
jg
push
std
mov
leave
mov
xchg
mov
dec
mov
daa
adc
jns
outsl
push
in
pop
inc
hlt
rcll
and
popa
movl
mov
jmp
add
subl
dec
ror
out
xchg
sti
xor
roll
mov
xor
clc
leave
imul
or
jge
cmp
or
fisubrs
test
shl
mov
adc
decb
push
add
jns
sub
jmp
xlat
cmpsl
jmp
mov
dec
in
mov
inc
stc
stos
push
rcrl
outsl
sbb
fmuls
dec
clc
xor
mov
rcrl
pop
push
cmc
movsb
mov
jb
call
mov
add
inc
icebp
scas
fsubs
add
inc
mulb
xor
jo
sbb
mov
fbstp
roll
and
mov
sbb
jl
dec
dec
scas
cmpsl
mov
add
mov
jmp
jle
decb
idivb
rorb
mov
mov
pop
and
push
dec
incb
sbb
adc
jne
jmp
dec
mov
cmp
inc
dec
mov
inc
ret
mov
in
push
adc
adc
dec
mov
xchg
dec
mov
xchg
dec
push
std
sub
lods
rorl
das
into
mov
adcl
cmpsb
mov
enter
sub
cmpsb
stos
mov
mov
push
out
mov
cltd
inc
jne
mov
cmpsb
dec
mov
cld
test
call
mov
stos
add
insl
in
dec
gs
out
cltd
jb
sbb
aaa
lds
cli
icebp
inc
sbb
push
in
mov
enter
xor
mov
jmp
insb
lret
rol
lret
outsl
out
xchg
cmp
cmpsb
ret
mov
lret
lahf
add
push
cmp
jo
cmp
call
testl
subl
pop
mov
out
cmp
sti
mov
jmp
and
push
push
push
int3
repz
enter
pop
dec
fwait
pop
test
or
jmp
push
dec
inc
push
out
inc
inc
add
in
insl
repz
or
push
inc
outsl
dec
outsl
aam
jnp
xchg
xchg
ss
jnp
jo
ficompl
push
or
aam
mov
mov
xor
insb
pop
loop
xor
cmp
xchg
jnp
fiaddl
mov
ss
lret
mov
jns
xor
add
add
xlat
add
add
pop
out
fidivl
ss
push
aas
aam
xor
gs
add
mov
bound
add
or
clc
nop
ljmp
je
mov
cmpsl
popf
xor
pop
push
insl
insl
fwait
pop
shlb
decl
or
pop
xor
cmpsl
cmpsl
push
mov
outsl
jge
shll
sti
call
icebp
and
rcll
rorb
movsb
mov
in
cmp
add
insb
enter
jg
push
pop
add
lods
mov
aam
rcrb
dec
bound
xchg
dec
pop
inc
in
rcll
in
movsl
jnp
add
pop
xchg
ljmp
imul
adc
fnstsw
test
pop
imul
mov
mov
or
xor
add
mov
xor
jmp
loopne
mov
cmc
mov
fwait
xor
push
add
add
mov
mov
outsb
xor
or
mov
enter
fsts
lock
xchg
pop
inc
ret
dec
loope
aaa
inc
fwait
adc
adc
or
movsb
hlt
jnp
rorl
cmp
lcall
mov
cmp
enter
push
fstpt
cmp
adc
mov
imul
fstp
pop
in
mov
repz
mov
push
mov
in
stc
repz
mov
bound
jge
cld
in
pushf
jle
mov
outsl
push
notb
jmp
lds
shl
arpl
daa
arpl
xor
aaa
xchg
sub
add
mov
mov
imul
sub
xor
mov
jmp
dec
mov
xchg
pushl
pushf
aas
inc
lahf
xor
jecxz
add
mov
cmpsl
inc
and
out
ljmp
cli
shrb
decl
or
xchg
or
xchg
hlt
dec
pop
incb
mull
test
ja
imull
push
sub
cmp
popa
adc
jae
lcall
and
loope
out
outsb
dec
js
stos
mov
test
nop
aam
divl
loopne
insb
rcl
int3
cmp
fidivs
xor
ljmp
cwtl
insb
imul
pop
rorb
jl
xorl
mov
in
int3
arpl
dec
repnz
sbb
ds
add
insl
repnz
push
cmp
add
add
inc
movsl
movsl
out
inc
data16
pop
inc
negl
lds
add
aam
test
es
xchg
loopne
adc
dec
push
xor
out
inc
jg
sbb
in
cmp
sbb
fwait
inc
imul
cltd
aam
xor
xor
rol
outsl
cwtl
cs
jb
xor
fwait
jo
add
inc
dec
arpl
pop
sub
xchg
lret
fbstp
jnp
and
mov
out
adc
jae
outsl
inc
add
mov
adc
shlb
sub
mov
mov
cmp
aaa
push
sarl
inc
xor
mov
push
leave
xchg
lcall
push
push
jae
adc
dec
cwtl
mov
ja
enter
lea
jmp
and
jo
div
push
lods
out
sub
xor
popa
movb
mov
ds
sbb
fwait
enter
pop
mov
sub
out
fld
jecxz
rcrl
in
mov
cmp
and
in
pop
orl
dec
test
repz
les
dec
loopne
and
pop
xor
push
pop
orl
inc
add
mov
push
ljmp
mov
or
jl
repz
mov
int3
aam
ss
insl
shrb
mov
inc
dec
adc
mov
loop
rcr
cld
ret
mov
jmp
xchg
push
push
repz
pop
test
and
mov
jmp
push
inc
or
int
add
loope
mov
and
add
mov
push
fwait
ret
or
pop
or
mov
es
mov
and
movsb
mov
mov
jae
or
inc
dec
cmp
idivl
jp
xor
xorb
sbb
add
fwait
stos
mov
bound
lea
cmc
std
pop
leave
cld
push
sarb
imul
adcl
rorb
sbb
xchg
nop
testb
stc
in
clc
push
push
jnp
subb
and
movsb
inc
vpmulhuw
xor
jecxz
jne
fdivrp
cmpsl
xchg
call
push
push
push
pop
retw
movsb
cmp
loope
adc
imul
in
xchg
sub
inc
cmp
shrb
inc
aam
imul
push
add
movl
movl
movl
movl
mov
and
mov
sub
mov
jmp
dec
adc
icebp
pop
repz
mov
push
and
ret
ffreep
add
mov
in
rcr
dec
sub
cmp
mov
stos
shrb
mov
test
outsl
test
jge
shlb
js
push
inc
dec
stc
xchg
mov
cmc
or
sbb
arpl
push
mov
sahf
mov
pop
sbb
push
mov
imul
mov
fs
movb
inc
xchg
jb
jne
mov
rcr
pop
ljmp
in
pop
js
test
daa
add
js
loop
cmp
test
jns
sarl
push
push
stos
loope
stos
roll
xchg
aas
adc
xlat
mov
jecxz
push
rcrl
and
sahf
xchg
sti
xor
or
rcr
add
mov
shr
jmp
mov
jg
in
adc
lret
enter
add
add
mov
inc
adc
jae
cld
xor
aam
test
add
insb
sti
push
or
push
push
jne
sub
adc
shl
mov
loop
shrb
or
xchg
inc
lcall
stos
add
mov
xchg
les
mov
jl
fbld
icebp
xchg
clc
out
xchg
lcall
std
test
nop
pop
std
cmp
aad
dec
hlt
inc
add
or
xchg
loope
cmpsl
jmp
hlt
cmp
aaa
ja
ret
in
test
mov
movsb
loop
xchg
cmp
add
dec
jbe
iret
dec
xor
imul
or
jmp
inc
inc
shlb
shll
popf
insl
xchg
aam
sbb
leave
add
mov
inc
sbb
add
divb
leave
inc
das
sar
xchg
xchg
mov
sub
xchg
push
dec
pusha
sbb
ds
dec
aas
ret
pop
and
into
in
loope
mov
repz
lcall
sti
jo
adc
dec
popl
push
cmp
bnd
xchg
movb
jecxz
ljmp
cmp
cmp
xor
mov
clc
scas
sub
mov
ja
jb
ret
arpl
sahf
lret
and
cmp
aad
or
sub
mov
xchg
ds
and
push
add
fiaddl
sbb
sub
pop
add
pop
fwait
mov
cld
xor
imul
xor
add
mov
mov
and
imul
mov
sub
xor
add
add
xor
mov
mov
jmp
push
pop
inc
test
inc
out
mov
sbb
add
mov
push
subl
ja
pop
push
out
cs
push
roll
push
stos
xchg
mov
xchg
fs
push
add
aam
or
adc
sbb
stc
sub
stos
mov
dec
push
xchg
add
jp
orl
aam
movnti
mov
loope
gs
outsl
nop
popf
lcall
into
js
pop
lret
scas
dec
or
xchg
cmp
cmp
dec
jb
addb
push
pusha
imull
mov
cmpsb
in
rorl
push
ljmp
pop
cltd
in
pcmpgtd
popa
mov
test
popf
sub
xor
outsb
mov
sbb
xlat
add
add
cmp
jle
mov
adc
lret
mov
mov
aad
sub
pushf
in
cld
push
fldenv
dec
int
rcrb
daa
jecxz
inc
xchg
or
add
mov
xchg
cmp
imul
xor
sbb
daa
mov
jecxz
mov
outsl
loopne
out
enter
out
mov
rolb
insl
cmpsl
inc
push
aaa
fs
rcrl
or
ds
sbb
jg
dec
dec
xchg
loope
clc
adc
adc
movsl
lock
and
fistpll
dec
sbb
lcall
insl
jmp
sub
xor
enter
bound
inc
insb
pop
add
les
or
incl
add
mov
jmp
add
mov
neg
insl
sti
scas
cmpl
mov
mov
mov
rcl
or
xchg
fcmovnb
lret
jecxz
into
adc
adc
dec
push
mov
enter
adc
test
adc
stos
out
sahf
push
insl
fwait
pop
scas
and
stos
jp
imul
cld
mov
add
jns
jp
mov
fimull
insl
adc
jno
adc
push
sbb
int
fldenv
xor
shlb
sub
inc
xchg
mov
rorb
xor
roll
les
daa
pop
das
xor
clc
and
mov
loop
out
adc
inc
and
lahf
out
loope
rcl
push
in
std
test
mov
add
mov
pushl
pushl
call
jmp
cwtl
arpl
sti
stos
fdivrs
in
xchg
xchg
fadd
jo
int3
add
mov
shl
aam
xchg
jno
enter
test
or
jo
ljmp
xlat
icebp
ret
mov
in
enter
push
add
lds
leave
fbstp
cltd
fldl
inc
mov
dec
add
pusha
insl
stc
into
dec
mov
in
xor
inc
mov
ret
call
ds
scas
sbb
adc
jl
mov
mov
enter
add
xor
orb
mov
xchg
test
adc
or
loop
aas
out
or
sbb
int
push
dec
xor
mov
sub
jne
mov
in
divb
inc
loopne
rorb
adc
add
mov
inc
cmp
jne
jmp
mov
movzwl
mov
mov
mov
mov
test
je
mov
jmp
dec
loopne
cmp
adc
sbb
add
mov
stc
or
add
mov
or
adc
cmp
cmpsl
dec
mov
push
repnz
sti
repnz
xchg
daa
sub
ret
out
mov
xor
int
ja
inc
mov
ret
ja
mov
mov
push
jb
in
repnz
mov
dec
xor
pop
es
fcomps
test
testb
mov
pop
bound
jbe
mov
sbb
sub
and
mov
or
xchg
cmpsb
loope
pop
cmp
push
repnz
inc
push
test
in
inc
imul
data16
jnp
lock
test
inc
sub
das
ret
mov
cwtl
inc
jns
sbb
outsl
ss
add
mov
mov
mov
test
je
jmp
xor
es
ds
jmp
xor
pop
add
add
mov
stc
jne
pop
arpl
push
mov
dec
cmp
mov
jl
adc
dec
negl
xchg
in
add
mov
mov
mov
test
sub
inc
into
imul
xchg
xchg
sahf
xor
jbe
fsubrl
xlat
fstpl
punpcklwd
in
fcomps
push
push
mov
iret
fwait
into
and
cmp
fsts
in
cs
sbb
je
jmp
idivl
xor
js
in
xchg
iret
xor
insb
and
xchg
shlb
add
repnz
cmp
pop
pop
out
inc
dec
out
push
sahf
push
out
scas
push
mov
xlat
cmp
inc
mov
test
je
mov
jmp
divb
add
xor
idivl
inc
lcall
add
add
lret
out
in
mov
ret
ja
mov
in
xchg
clc
push
orb
loopne
insb
mov
push
jmp
jbe
push
jge
insb
rcll
insb
push
insb
and
cmpl
scas
fmul
repz
mov
pop
jns
cmp
arpl
cli
xchg
mov
add
adc
sbb
sbb
jnp
adc
gs
ss
push
add
mov
pop
lods
cltd
fsts
movsl
call
adc
jecxz
sbb
popf
push
push
push
push
loop
movsl
out
dec
nop
test
rclb
mov
roll
cmp
jnp
xlat
mov
mov
daa
push
lret
shl
mov
jmp
xchg
add
test
mov
push
iret
add
mov
add
push
out
fwait
cmp
sub
shrl
fadds
movsl
in
add
mov
test
loop
fildl
cltd
pop
push
dec
call
out
sbb
insl
lret
pop
gs
jnp
mov
add
add
loopne
mov
xlat
ficoms
adc
dec
lock
dec
pop
and
imul
lds
in
mov
push
or
xchg
mov
stc
test
jle
xchg
jle
inc
std
sub
gs
lret
adc
in
daa
in
inc
mov
ds
mov
adc
xlat
add
add
sub
mov
jmp
insb
lret
or
add
mov
movsl
subl
sarb
sbb
loop
cmpsl
xor
inc
push
jnp
fs
test
dec
rclb
xor
testb
lods
xchg
push
add
inc
test
nop
add
push
movsl
js
shll
mov
xor
jg
shl
mov
sbb
out
push
lret
hlt
ljmp
enter
inc
subl
pusha
mov
pop
push
data16
mov
mov
pushf
and
mov
push
pop
sub
clc
pop
scas
mulb
adc
mov
jp
stos
lahf
das
xchg
movsl
test
loop
out
loopne
xchg
xchg
movsl
mov
shrb
or
gs
mov
jmp
mov
mov
mov
mov
jmp
xor
jl
mov
fnsave
cmp
xor
rolb
add
es
or
sbb
out
adc
sub
lcall
xor
mov
aas
int
stos
mov
out
in
gs
ficoml
sbb
push
data16
pushf
push
xchg
inc
cwtl
jbe
or
push
dec
fildll
mov
adc
iret
or
cmp
aam
and
xchg
outsb
add
sub
xchg
in
loopne
mov
insb
jle
cmpb
dec
adc
insb
mov
xor
dec
jns
sub
sub
jmp
mov
loope
test
es
cli
push
or
iret
in
fidivrs
xchg
int
jbe
bnd
push
xchg
add
adc
incl
mov
mov
cmp
jne
mov
call
xor
inc
cmp
je
add
jmp
adc
or
aas
sbb
mov
in
xchg
ficoml
add
add
push
push
fildll
xlat
sub
inc
pop
jle
jnp
test
mov
arpl
push
lret
repnz
dec
ds
dec
ss
mov
inc
add
jecxz
inc
int3
push
xchg
dec
inc
mov
aaa
nop
scas
cltd
xchg
scas
xchg
xor
sbb
xor
outsb
clc
dec
repnz
push
mov
push
loop
and
sub
xor
push
roll
or
sbb
fisubs
lret
xchg
aas
push
xchg
add
int3
sub
ficoml
popf
shr
or
outsl
and
adc
mov
and
inc
ss
mov
subl
lret
and
inc
hlt
jmp
out
imul
adc
ljmp
add
aaa
xor
add
push
mov
add
into
call
sub
xorl
sub
xlat
or
jp
lock
or
sub
push
lret
adc
sahf
or
xchg
pop
lahf
push
mov
xlat
jno
jge
in
sub
addl
sahf
sarl
fwait
sahf
ljmp
mov
jne
lcall
push
leave
test
popf
lcall
dec
stc
mov
loope
xorb
and
pop
jg
sub
data16
cmp
dec
sub
ss
lret
movsb
adc
into
jnp
sub
jae
jno
inc
pop
pop
movsl
out
mov
daa
push
mov
mov
mov
inc
hlt
pop
pop
jmp
int3
sub
push
call
mov
int
and
adc
add
mov
mov
pop
xchg
mov
push
test
or
fadds
mov
dec
or
imulb
xchg
je
ja
cmpsl
stos
jno
mov
lock
adc
rcrb
aam
stos
andl
xor
sahf
sub
inc
xor
rol
les
pop
fnsave
in
stc
movsb
push
cwtl
daa
add
mov
pop
push
xchg
inc
sbb
pop
cltd
aad
and
add
mov
sub
jae
mov
push
fidivrl
push
ficompl
stos
mov
or
das
insb
sbb
clc
sub
sub
xlat
mov
jecxz
dec
pop
subb
push
cld
push
mov
lods
dec
aam
pop
leave
ret
push
mov
sub
jmp
mov
and
movsb
pushf
mov
imul
roll
add
outsl
hlt
pop
sti
or
lea
add
aaa
rorl
in
mov
or
jmp
je
sub
dec
sub
out
int
inc
pop
add
jecxz
lods
mov
pop
jnp
cmp
add
push
popa
pop
in
inc
dec
cmp
dec
mov
adc
push
ficompl
mov
aaa
outsl
dec
jl
xchg
jecxz
cltd
pop
adc
in
inc
cmpsl
dec
jp
aaa
ror
scas
lea
dec
inc
ret
push
inc
adc
add
arpl
add
scas
jno
fmull
imul
push
movl
movl
movl
jmp
shr
xor
fcomip
jae
ret
xchg
cmp
add
scas
add
add
loope
stos
shll
ja
adc
push
sub
int3
mov
xchg
jmp
add
bound
adc
mov
pop
rcrb
mov
popa
xchg
ret
jnp
out
mov
int
fwait
mov
imul
mov
lcall
jecxz
add
pop
jg
iret
inc
test
pop
pushf
pop
xchg
fcompl
and
pusha
mov
push
jb
das
and
add
shlb
cmpsb
sub
adc
and
pop
pop
stc
dec
aad
push
test
dec
mov
xchg
int3
lea
inc
inc
icebp
pop
push
aad
mov
jmp
nop
xor
adc
stc
fidivl
out
mov
add
sub
mov
int3
adc
clc
xlat
push
push
loopne
mov
movsb
and
ja
fld
fisttpl
xchg
test
xor
shrl
out
xor
jo
es
out
mov
adc
dec
jmp
pop
and
lods
add
sti
int3
xor
fxch
lcall
lds
jnp
stos
mov
mov
push
mov
ljmp
icebp
enter
lret
shrb
inc
rcll
xchg
dec
pop
dec
xchg
test
icebp
out
cltd
mov
or
adc
fcmovb
and
ss
lcall
div
mov
and
mov
imul
jmp
into
jbe
mov
mov
lahf
dec
movb
sbb
aad
add
icebp
push
pop
cmpsl
daa
mov
push
cmp
sbb
cmp
sbb
and
push
in
scas
insb
jo
jne
jo
push
and
mov
lea
mov
out
nop
dec
add
aaa
imulb
mov
xor
xchg
lods
andl
dec
xchg
add
clc
fwait
cmp
cwtl
fnstenv
adc
shll
fst
sbb
push
pop
aaa
sub
jp
mov
lcall
add
js
xor
and
std
cmpsb
fisubrl
lea
dec
jmp
lahf
mov
mov
sbb
xor
add
mov
movl
movl
movl
mov
mov
add
or
mov
lea
lea
jmp
pusha
fwait
mov
lahf
das
fstpl
inc
mov
add
scas
add
add
jmp
xor
incb
popa
or
loope
imul
test
push
push
outsb
sub
lahf
loop
mov
mov
aad
and
or
clc
sbb
mov
push
out
clc
adc
cmp
cmp
test
mov
and
leave
sbb
js
popa
xchg
lods
fisubs
inc
lret
sub
dec
add
xchg
insl
sbb
faddl
xor
inc
fdivrl
or
dec
test
in
dec
fmuls
shll
mov
inc
xor
loopne
and
adc
add
repnz
test
orb
in
loop
add
jb
mov
mov
jmp
leave
adc
neg
in
aas
adc
dec
imul
std
adc
inc
testb
outsl
clc
je
xor
dec
addl
mov
out
sub
mov
ficomps
jae
xor
daa
and
push
sahf
mov
push
js
gs
cli
pop
mov
leave
pop
pushf
into
sub
mov
add
mov
sti
inc
pop
aam
in
bnd
out
fcomps
adc
or
std
jp
jge
pop
mov
aaa
test
xchg
pop
in
cwtl
sbb
cmpsb
push
push
jp
push
fdivrs
dec
mov
in
mov
movsb
icebp
cmc
leave
lret
into
push
fcomip
fadd
int
adc
addl
pop
mov
inc
hlt
std
push
add
movl
mov
mov
add
or
and
mov
sub
mov
movl
movl
movl
mov
mov
or
mov
jmp
es
repz
cmpsb
nop
cmp
dec
jecxz
add
scas
add
add
test
jae
push
popf
ret
push
je
outsl
push
dec
ja
popf
sbb
aam
test
in
push
push
pop
adc
addr16
mov
jp
arpl
dec
add
icebp
pop
popf
cmpsl
and
idivl
or
pop
js
movb
scas
stos
lret
push
gs
add
daa
repz
lcall
imul
xor
inc
out
lds
aam
popa
sub
je
into
aas
inc
mov
cmpsb
inc
negb
jle
lods
repnz
push
fs
stc
lret
cwtl
jb
ljmp
mov
imul
jmp
clc
cs
and
idiv
jmp
jae
mov
scas
add
add
jge
in
ret
mov
cmpsb
in
dec
loopne
arpl
pusha
adc
je
lods
imul
mov
pop
cmc
cmp
xorl
lds
adc
inc
jns
jne
ljmp
popf
or
sub
jae
add
pop
stos
lods
jne
testl
pop
pop
shl
in
push
jle
movsb
lods
cmpsl
shlb
and
repnz
insb
fnstcw
popf
lahf
mov
into
das
bound
stos
and
imul
and
sub
or
mov
lock
mov
shrl
inc
fadd
inc
cld
mov
movb
add
std
arpl
jg
add
ret
aas
flds
add
aad
lds
cmpsl
cmp
call
fwait
out
dec
rcl
cmp
mov
pop
and
add
out
dec
sub
mov
cwtl
sub
mov
call
inc
sti
inc
cld
xchg
inc
sub
adc
cmpsl
mov
sub
inc
and
arpl
dec
outsl
jg
jg
push
jno
inc
out
xchg
std
and
push
loope
cli
add
mov
inc
push
jno
mov
ljmp
adc
je
inc
xchg
ds
lock
cltd
es
inc
hlt
popa
pop
add
movl
mov
mov
shr
add
imul
mov
jmp
mov
mov
stos
lea
dec
outsb
jns
aas
in
flds
add
faddl
lods
fnstcw
stos
mov
hlt
fadd
inc
loope
ja
sbb
xor
sbb
inc
jne
test
inc
cmpsl
push
fnsave
sub
inc
dec
aaa
out
dec
ss
inc
jo
sti
andb
decb
out
pop
nop
mov
cmpsb
mov
scas
fwait
push
int3
mov
push
pop
movaps
mov
pop
sbb
and
sub
fstpl
loop
push
xchg
mov
add
mov
adc
fwait
jge
sub
repnz
je
fldcw
ret
inc
insb
fs
shlw
pop
push
xor
shrl
jl
add
mov
movl
jmp
test
xchg
mov
gs
ja
outsl
mov
add
scas
add
add
jge
fcompl
jnp
sbb
xor
sbbb
lret
mov
clc
adc
imul
addb
stos
int3
and
outsb
arpl
cmpsb
dec
sub
hlt
test
mull
test
sub
push
jl
dec
test
dec
ficomps
jno
cmp
sahf
btc
sub
inc
pop
inc
inc
pop
add
cltd
lret
jnp
lods
pop
in
out
and
dec
mov
stc
cmp
out
cmp
xchg
movsb
jbe
ja
mov
jmp
js
mov
cmp
and
inc
jl
add
movb
add
jbe
ja
notb
nop
ret
dec
fildl
add
pop
xor
dec
adcl
xchg
cmp
mov
dec
cmp
call
cmp
movsb
jmp
pop
data16
adc
and
add
out
dec
or
gs
add
mov
das
pop
cmp
imul
rolb
sbb
pop
lahf
xor
xchg
iret
pop
cwtl
in
mov
rcl
or
mov
push
jbe
icebp
arpl
leave
fs
cmc
addr16
inc
jbe
sub
rolb
rolb
push
jb
jp
js
and
add
ret
cmp
push
into
fnstcw
lcall
popa
movl
movl
mov
jmp
clc
outsl
lcall
ja
add
in
movd
fildl
add
loop
rcrb
xchg
fidivrl
and
pop
jo
xchg
divps
dec
lahf
out
dec
push
push
sarb
jnp
aad
jbe
jl
stc
out
sbb
cld
fwait
inc
lods
mov
adc
leave
inc
jl
xorb
leave
or
jb
std
adc
out
ds
inc
jbe,pt
add
int3
test
dec
sub
out
push
mov
imul
jecxz
sbb
pop
shr
add
push
jnp
cmp
adc
mov
das
jae
and
xchg
adc
sub
and
pop
jns
fsubrs
cli
mov
shr
lea
jmp
daa
adc
xchg
push
or
movsl
faddl
add
inc
int3
cmp
push
jo
mov
fldl
subb
inc
inc
aam
push
insb
sbb
ds
pop
fwait
roll
adc
test
sahf
push
out
cs
pop
andl
xlat
fimuls
xchg
xor
loop
add
add
mov
push
addr16
nop
xchg
jmp
mov
sub
jmp
add
jle
in
arpl
gs
cmpl
lret
nop
lret
in
jne
dec
sub
mov
xchg
daa
add
sbb
imul
mov
imul
add
mov
movl
movl
movl
movl
jmp
xchg
clc
shrb
stc
sub
cli
adc
cltd
addr16
fldl
add
arpl
jbe
add
xor
in
into
add
inc
push
mov
sub
popa
loope
mov
stos
in
lock
cld
adc
aam
rorb
push
push
mov
jb
jle
push
sahf
dec
test
into
int
add
mov
loop
fidivrs
cmp
fstpt
pop
or
pop
pop
mov
jle
into
xchg
mov
lea
mov
stos
cmpsl
push
fwait
lds
xchg
test
xchg
push
or
sub
fldl
jb
add
lahf
hlt
cmp
cmpl
xchg
inc
jl
bound
jmp
xchg
out
sti
push
jno
insl
or
jo
fiadds
add
push
jmp
add
test
dec
push
inc
or
pop
das
pop
test
out
test
insl
xchg
cmp
jp
inc
sub
mov
insb
add
jge
out
out
jmp
js
jmp
aaa
xor
sti
cmp
jno
mov
pop
pop
jmp
xor
mov
push
inc
dec
cmp
test
insb
jmp
in
mov
je
decl
lods
mov
pusha
insb
insl
pop
push
pusha
xor
cmp
jmp
leave
negb
movsl
lods
mov
lahf
mov
scas
cltd
aad
pop
and
mov
xchg
das
fsubl
fdivrs
pop
mov
xor
jmp
arpl
add
popf
jmp
rcll
in
jle
aas
scas
fiadds
add
xchg
jp
fcompp
mov
aaa
dec
popf
xchg
jbe
mov
addr16
addr16
dec
jmp
loop
mov
or
push
mov
test
pop
adc
cld
xor
dec
test
roll
mulb
mov
push
mov
xor
cmp
sahf
sub
lock
sub
sbb
or
jmp
mov
pusha
lcall
xchg
mov
or
cmp
scas
popa
movsl
adc
outsl
inc
xchg
cmp
repz
cmc
xor
push
jae
and
pop
push
xor
in
scas
cmp
into
icebp
scas
hlt
fidivrl
pop
mov
imul
jmp
lret
movsl
repz
mov
insb
in
ficomps
add
scas
add
add
and
loop
dec
dec
int
lods
inc
daa
popf
pop
std
sbb
inc
insb
or
test
and
leave
test
scas
std
aas
push
push
push
pop
or
scas
in
sbb
adc
mov
jbe
in
push
mov
push
dec
cwtl
out
xchg
mov
aaa
push
daa
lahf
pop
or
cltd
dec
mov
mov
mov
leave
out
sub
inc
call
data16
add
xor
int3
cmp
negl
jae
mov
int3
cmpsb
push
mov
sahf
push
jbe
in
sbb
nop
sbb
mov
mov
fisubrs
sub
and
stos
xchg
mov
cld
imul
xor
jmp
pusha
xor
outsl
mov
pop
or
or
add
scas
add
add
in
cld
pop
or
inc
mov
xchg
cmp
daa
sub
mulb
ss
cmp
push
loop
mov
inc
insl
add
fsubrl
and
cmpsb
mov
stos
mov
je
shl
cmp
int3
add
in
inc
push
add
lret
nop
sbb
imul
insb
adc
out
fstps
fscale
mov
into
outsl
inc
mov
xor
je
shrb
jge
mov
lods
sub
adc
loope
aam
mov
pop
repz
xlat
out
add
xor
xor
ret
div
sub
jmp
and
and
jo
stos
imul
inc
jge
out
mov
and
es
cmpsl
xchg
add
test
and
shrl
sbb
mov
inc
mov
icebp
xchg
push
fidivrs
in
nop
pop
pushf
test
pop
test
pop
mov
dec
sub
repz
lret
repz
idiv
xchg
daa
rorb
mov
clc
xchg
in
fld
dec
mov
jo
mov
enter
jmp
movsl
adc
push
lds
mov
sub
pop
movsb
es
std
pop
push
loop
out
inc
xchg
sbb
adc
mov
lods
movsl
cmpsl
cwtl
mov
outsb
push
cmc
push
test
js
xchg
and
sarb
fucomi
push
inc
aam
add
add
inc
fmul
xor
add
inc
fsubrl
add
movl
movl
mov
mov
mov
mov
add
adc
or
jmp
mov
std
mov
ss
jb
pop
dec
loopew
add
push
idiv
cltd
js
mov
mov
xor
das
cli
rcll
mov
out
pop
add
cmp
das
cwtl
enter
jg
sahf
in
mov
roll
mov
cwtl
aaa
mov
movsb
hlt
arpl
int3
xor
jbe
push
dec
sbb
and
jge
sbb
fisubl
lret
nop
add
sahf
pop
icebp
xor
xchg
rorb
dec
fcomip
push
bound
adc
mov
xor
jmp
jb
in
add
fstp
mov
les
adcb
ljmp
leave
fldl
dec
dec
repnz
cmp
mov
push
push
push
push
jmp
out
pop
out
jg
test
int3
popf
push
imul
or
jmp
in
dec
push
in
adcl
sahf
lret
aad
fdivrl
enter
pop
fnstsw
mov
out
popf
lods
in
mov
imul
lret
lret
push
add
pushf
outsb
out
sub
dec
cli
and
data16
enter
repnz
popl
inc
addb
pop
out
adc
jb
in
jno
jp
notb
pop
push
and
fwait
sub
mov
cmp
mov
sbb
sbb
stos
addr16
stos
aas
jmp
inc
xor
dec
mov
outsb
icebp
inc
and
call
and
and
jmp
mov
push
fistpll
or
ret
loop
add
pop
cmc
test
imul
aad
sbb
iret
clc
sub
out
mov
popl
pop
push
aad
mov
outsb
sbb
mov
fdivrl
inc
sarb
or
dec
adc
adc
sahf
sub
pushf
aaa
std
imul
ret
jecxz
hlt
mov
adc
dec
push
int3
in
or
adc
sub
cmp
mov
inc
ja
sub
dec
and
mov
mov
insb
jns
lfs
xor
movsl
lods
shlb
dec
or
mov
adc
mov
jmp
nop
rol
rcrb
fmul
push
ds
int
icebp
inc
imul
add
shll
adc
mov
xchg
add
jae
sti
aas
inc
pusha
pop
lock
mov
dec
test
pusha
in
pop
add
dec
outsl
mov
mov
std
sti
cmpsl
loopne
push
fdivp
cmp
aas
fiaddl
dec
bound
cs
jnp
aas
cmp
sub
sbb
subl
jecxz
cmp
sub
mov
inc
cli
addl
jns
das
cmp
fcomip
hlt
push
rcrl
cmp
cmp
dec
push
pop
lret
add
bound
subb
push
sbb
pusha
fidivrl
rclb
lret
repnz
or
andl
jnp
add
inc
mov
movl
jmp
aas
jns
push
xlat
cli
mov
gs
add
scas
add
add
cmc
lods
mov
add
addr16
enter
xor
gs
lahf
aas
mov
mov
mov
lret
xor
movaps
jae
add
mov
xchg
out
stos
cld
imul
cld
sbb
jmp
push
or
sub
pushf
movsl
cs
insl
scas
add
jns
rorl
cli
xor
outsl
mov
dec
and
inc
aad
inc
lret
loope
push
pushf
push
and
enter
lds
fcoms
mov
dec
pusha
in
aas
mov
push
mov
fstp
or
dec
mov
mov
inc
clc
aam
test
movl
movl
movl
movl
movl
movl
jmp
cmpsb
imul
int
push
add
scas
add
add
lret
push
cmp
mov
and
add
xchg
lock
sbb
pop
mov
and
les
cmc
pop
xchg
cltd
sub
jmp
cli
insl
jle
push
movsl
xchg
or
inc
xchg
mov
jl
repz
dec
push
dec
call
jb
aas
mov
jb
xor
jnp
mov
xchg
pusha
sbb
mov
cli
or
xchg
adcb
popf
call
push
xchg
addl
lods
pop
mov
mov
and
jmp
cmpsl
test
sarl
lea
sahf
in
sub
btrl
add
movl
movl
jmp
inc
sti
mov
mov
pop
test
sbb
in
add
mov
mov
inc
lcall
inc
popa
popa
mov
xchg
jg
addr16
ljmp
or
sti
xchg
sbb
nop
adc
outsb
into
sub
js
mov
or
sbb
into
pop
add
pushf
push
xchg
cmp
xor
dec
fnstsw
cmp
sub
pop
pop
sub
sahf
push
pop
mov
adc
dec
xchg
aas
clc
sub
push
pop
shr
rolb
xor
pop
and
jmp
cmpsl
filds
clc
adc
push
inc
inc
cmpsl
sub
mov
adc
mov
std
mov
lock
sub
push
jno
inc
jns
inc
int3
mov
inc
mov
pop
add
jmp
push
dec
inc
pop
ja
cmp
ja
out
add
xor
cltd
test
mov
xor
outsl
fnstcw
mov
cmpsl
lret
mov
inc
mov
ficoml
pop
dec
dec
inc
jbe
push
adc
aas
popa
movsl
cmpb
cld
adc
test
pop
ja
pop
pop
cmp
mov
ds
cwtl
cmpsl
cmc
push
push
cwtl
ljmp
add
fstpl
and
cmp
sub
jb
jno
inc
or
cmp
lods
jl
pop
inc
and
or
popa
inc
mov
pop
sub
inc
lret
inc
xchg
into
xchg
jecxz
mov
outsl
xor
cwtl
movl
movl
jmp
stos
dec
mov
ja
in
pop
mov
xlat
out
add
leave
cmc
adc
pusha
fbld
inc
xlat
ds
dec
cmpb
addr16
push
clc
or
mov
add
cmp
cmpsb
mov
fnstenv
icebp
xchg
cmp
mov
and
push
loop
clc
ret
sbb
sahf
lods
pop
insb
sub
inc
xorl
add
imul
add
mov
cmpsl
sub
out
mov
aad
sub
pop
andb
xchg
mov
aam
movsl
shll
outsb
rorb
repnz
cmp
jo
pusha
cli
lahf
jbe
jp
adc
push
cmp
shlb
inc
scas
lret
pop
mov
dec
add
movl
movl
movl
movl
movl
movl
jmp
xchg
mov
mov
mov
mov
inc
movsl
pop
mov
out
add
dec
icebp
popa
push
lcall
sbb
std
in
add
ss
mov
and
jmp
cmpsl
mov
fs
sub
jl
sbb
push
and
test
mov
dec
imul
push
gs
and
sub
outsb
test
hlt
xchg
push
or
inc
dec
rolb
lea
shll
mov
js
mov
sbb
xor
dec
push
mov
mov
jb
int3
xor
sbb
mov
push
icebp
out
nop
xchg
and
pop
leave
xchg
stos
mov
pop
pop
orl
fdivr
ljmp
shr
add
add
push
mov
lods
and
xchg
mov
call
add
xchg
xchg
cmp
xor
adc
jg,pt
mov
xor
push
cmc
cmpsb
mov
jecxz
mov
push
add
das
xor
add
mov
dec
iret
pop
xor
jns
test
das
lret
mov
add
add
xor
stos
cltd
mov
pop
mov
ret
sub
sbb
popa
iret
jnp
xchg
xchg
or
cwtl
xor
pop
mov
test
sarl
sahf
punpckhwd
cmp
repz
adcl
or
rorb
inc
cmc
add
xor
jmp
fidivrl
cli
call
sub
movsb
stc
dec
inc
pop
loope
add
scas
add
add
xor
sub
fst
and
aas
mov
sarl
fs
inc
aad
jo
icebp
aad
rcll
xor
mov
inc
stos
pop
dec
jnp
push
sbb
popf
jne
rol
or
push
push
pop
push
pusha
adc
mov
sbb
movsl
fldcw
mov
lret
loop
jno
mov
add
cmc
jnp
sub
lea
jne
mov
pop
xlat
jo
xchg
inc
push
xchg
add
adc
mov
inc
popa
mov
lods
lahf
lret
push
jns
cmp
das
or
add
mov
div
xor
add
push
jmp
std
orl
mov
pop
add
add
add
in
repz
push
push
pushf
lret
ret
and
cli
shrl
mov
sub
mov
mov
inc
pop
push
mov
ds
rorl
mov
test
adc
dec
xchg
pushf
sbb
lods
out
bound
mov
in
int3
dec
mov
jo
push
jmp
cmp
js
xor
mov
in
int
push
jle
push
out
out
xchg
inc
or
xchg
jecxz
cmp
aad
or
gs
fdiv
cmpsl
cmp
sub
mov
xor
das
cs
mov
movb
add
call
mov
cmp
add
add
mov
add
adc
out
pop
adc
scas
sub
push
leave
pmaxub
xchg
icebp
sbb
icebp
dec
inc
das
xor
cltd
test
pop
jb
push
xlat
jbe
insl
lds
enter
shll
sbb
sahf
sahf
andb
xchg
loopne
push
inc
adc
pop
stos
lods
push
cltd
mov
cmp
pushf
lock
cmpsl
cmp
dec
cmpsb
popa
cmp
pop
data16
sbb
sub
inc
jg
jp
add
ss
js
lcall
hlt
shrl
movsl
nop
add
shrb
add
movb
add
mov
dec
outsl
in
adc
mov
scas
add
add
repnz
and
clc
add
filds
outsl
jne
jae
push
mov
lea
sub
sub
pop
push
inc
out
mov
sub
push
pop
or
ss
test
notl
lret
push
and
flds
dec
insl
jae
out
sbb
mov
mov
fcompl
sti
mov
xchg
or
icebp
push
xchg
test
mov
fs
jns
daa
addl
in
cmp
cmpsl
fistpl
mov
inc
pop
das
mov
xor
push
xor
inc
test
test
jmp
in
xchg
sti
fwait
ljmp
dec
mov
cltd
jmp
add
pmaxub
jns
movsb
jns
xchg
hlt
mov
incl
mov
popa
in
call
sbb
dec
add
xchg
out
test
mov
lret
mov
bswap
iret
hlt
int
pop
jbe
xor
xchg
movsb
push
or
sbb
ret
inc
pop
mov
dec
adc
mov
push
push
push
popf
mov
push
xchg
aam
add
inc
cltd
adcb
jle
pop
data16
mov
into
sub
leave
imul
xor
pop
add
push
js
jecxz
fadd
loope
mov
jmp
fdivs
lret
fnsave
or
movl
add
das
dec
push
push
sub
mov
adc
ljmp
ljmp
imul
adc
sahf
add
ss
dec
mov
mov
aam
outsl
mov
lea
push
pop
pop
and
outsb
cmpsb
pop
adc
xchg
jmp
add
mov
jae
dec
mov
xchg
daa
fdivr
or
jae
inc
push
loop
aad
ret
xor
cltd
lock
cmpsb
inc
pop
add
mov
sbb
xor
inc
xor
jns
xor
and
xchg
sbb
add
add
fiaddl
mov
add
scas
shll
inc
pushf
push
jmp
mov
cmp
ds
mov
or
cmc
in
add
scas
add
add
dec
fucomi
loope
in
pop
cmpl
and
mov
fdivs
jg
mov
stc
mov
imul
das
ss
js
mov
mov
decl
rcll
mov
sbb
push
out
nop
repnz
fcoms
or
mov
xor
or
ja
pop
in
xlat
xchg
or
xor
out
lcall
repnz
mov
fidivrs
sbb
pusha
pop
mov
xchg
ljmp
inc
inc
data16
ficoms
stos
pop
repz
mov
movb
add
inc
clc
mov
and
cmp
mov
add
add
es
xor
sub
cmp
xchg
cmp
sub
add
repz
adc
mov
pop
fldl
cltd
push
testl
out
and
dec
mov
movb
out
enter
mov
push
jne
sbb
cmpsl
pop
jmp
sbb
int3
out
fcoms
xchg
push
xor
sub
xor
cmpsb
iret
cmp
outsl
repnz
jo
imull
xchg
jecxz
xchg
xor
mov
inc
sbbb
jnp
or
lods
pop
imul
mov
jecxz
loopne
lahf
sahf
inc
jnp
jl
mov
jmp
or
scas
das
pop
jns
fiadds
out
add
scas
add
add
cmpsb
je
jbe
sub
mov
lcall
mov
xchg
lret
push
mov
cmpsb
nop
sub
pop
mov
push
or
dec
int
or
lock
add
cmp
sbb
loop
mov
xchg
pop
aam
push
xor
dec
adc
mov
je
cmp
fwait
sub
mov
inc
jp
adc
fdivs
xor
add
lahf
push
outsl
pop
mov
dec
mov
ds
add
mov
cmc
xchg
jae
push
jo
js
mov
out
push
mov
fcmovnb
add
mov
mov
mov
or
imul
jmp
jg
cmpsb
popa
mov
xor
out
add
scas
add
add
imul
sub
test
jge
add
fs
sti
dec
out
out
stc
mov
xchg
insb
aas
mov
das
cmp
adc
fdivl
movsl
fstl
adc
cs
sbb
mov
ret
cmpsb
mov
mov
dec
push
inc
or
enter
xchg
push
arpl
adc
and
add
jle
ficoms
icebp
adcl
push
pop
xor
aad
aad
jne
sub
or
paddw
cmp
mov
lea
mov
imul
xchg
ja
shlb
sbb
fistps
xchg
or
mov
notb
push
add
jmp
push
les
std
mov
cli
pop
lods
out
add
scas
add
add
test
xor
pop
pop
mov
and
pop
jg
jnp
jns
push
rcll
mov
add
addl
add
sub
sub
xor
aaa
adc
or
arpl
jnp
adc
into
bound
popa
cmp
adc
cmp
loop
sbb
scas
cmp
stc
movsb
mov
shl
push
push
rcll
push
sbb
out
dec
pop
aad
or
sbb
sbbb
inc
cltd
nop
push
lds
testl
icebp
add
stos
enter
cs
dec
add
inc
dec
sub
and
lea
xor
push
mov
sub
jmp
ret
in
addr16
out
ljmp
mov
scas
add
add
mov
data16
and
add
push
cmpsl
xchg
push
cwtl
movsl
fidivl
pop
lods
cwtl
enter
and
add
xchg
lods
mov
dec
clc
add
jmp
int
add
mov
repz
inc
pusha
cltd
imul
sarb
movsb
mov
lcall
rcl
cmp
or
ret
fsqrt
out
cwtl
decl
dec
sbb
test
sbb
pushf
cli
xor
xor
pop
ja
sbb
aaa
cmpsl
and
outsl
jb
js
insb
add
xor
ficoms
test
lock
lea
jmp
or
inc
push
imul
xchg
lret
in
dec
out
out
mov
scas
add
add
mov
sbb
push
xchg
dec
cmp
and
pop
or
lcall
loop
inc
push
xor
icebp
outsl
pop
push
gs
cmp
out
loopne
inc
in
ss
xchg
sub
mov
pop
ja
out
pop
sub
xor
ret
inc
aam
ljmp
insl
or
dec
jbe
push
add
or
loopne
fdivr
sbb
mov
shlb
pop
xor
push
push
pusha
xorl
xchg
push
inc
mov
sbb
lahf
xchg
aam
ret
out
shrb
jns
lret
push
push
mov
mov
test
jp
dec
jge
mov
call
mov
mov
add
or
sub
cmp
jne
mov
jmp
or
push
xchg
jle
lret
mov
lods
mov
cmp
add
add
je
ret
cmp
add
popf
pop
movsb
aas
shr
fsubrl
lds
lea
in
scas
adc
insb
test
sti
subb
mov
movb
fdiv
xor
mulb
xor
or
mov
orl
pop
call
sti
mov
inc
repz
ret
sbb
iret
mov
and
enter
divl
cwtl
xor
mov
test
cwtl
inc
xchg
mov
inc
and
and
notb
sti
es
mov
jp,pn
xchg
lret
fistpl
outsl
pop
mov
imul
xor
and
add
jmp
push
and
xchg
mov
dec
int
mov
xchg
cmp
add
scas
add
add
xchg
sti
sti
ret
xor
clc
imul
andl
es
pushf
ret
cmp
inc
pop
inc
push
shl
dec
ret
jne
or
jb
jmp
shrl
imul
push
dec
loopne
adc
and
add
out
cmpsb
orb
arpl
outsl
loopne
jle
inc
mov
leave
xchg
shlb
or
xor
and
daa
xlat
rcll
fsubs
xchg
loopne
sbb
aaa
cmp
dec
cmp
je
mov
fcmovnb
lahf
adc
loope
icebp
out
push
xor
xor
lea
jmp
sub
lea
imul
pop
jl
fnstsw
adc
add
scas
add
add
pop
jl
pop
cmpsb
mov
cmp
inc
lahf
xchg
stos
rclb
or
rcll
cld
jg
or
sbb
mov
add
lods
add
dec
mov
roll
mov
aas
mov
in
xchg
je
je
sub
call
jp
mov
das
loopne
dec
dec
in
sbb
shlb
jg
push
fdivrp
adc
cli
cmp
sbb
add
scas
je
mov
jbe
ljmp
mov
fcoms
and
dec
jmp
mov
lret
add
imul
rolb
test
movb
add
movsl
outsl
imul
fidivrs
repz
add
scas
add
add
pop
cmp
test
jle
mov
cmp
incb
clc
ret
imul
mov
ss
push
add
f2xm1
iret
push
loope
ret
jb,pn
aad
movhps
and
add
pushf
icebp
loop
xlat
mov
jns
dec
in
sbb
ret
jns
add
xchg
pusha
frstor
mov
stc
xchg
jo
add
dec
cmp
jl
repz
pop
shll
fwait
xor
pop
out
mov
in
adc
fbstp
and
mov
inc
push
fimull
mov
and
xor
mov
imul
xor
jmp
pop
and
divb
div
jecxz
loope
dec
lods
sub
movsl
outsl
hlt
add
scas
add
add
xor
dec
adc
add
mov
in
jne
movsb
test
push
sbb
add
jle
xchg
test
mov
mov
mov
outsb
out
inc
jbe
jo
gs
or
or
adcb
push
imul
lods
insl
xchg
cs
loopne
lcall
and
xor
inc
fadds
pop
cmovbe
fiadds
adc
jp
mov
cmp
inc
xchg
push
sbb
mov
add
cltd
fimuls
divl
pop
ret
or
enter
xchg
fcoml
mov
inc
add
movb
add
push
sti
icebp
fldt
and
lahf
sbb
add
add
int3
in
cmp
add
mov
inc
push
cmp
rcr
imul
push
ficoml
cmpsb
adc
xchg
in
push
jp
cmpsb
mov
lods
mov
mov
das
fidivl
dec
aad
call
js
aam
aaa
push
push
or
mov
je
dec
shrl
push
andl
pop
mov
and
or
das
dec
pop
aad
std
lret
sub
cltd
dec
or
sub
sahf
mov
lods
adc
daa
inc
cmpsl
mov
cmp
inc
addr16
out
add
loop
ss
fs
push
sub
jb
stos
add
add
inc
aam
rclb
or
add
icebp
mov
xor
jmp
cmpb
fistpll
jmp
ret
std
cmpsl
pop
add
cmc
add
scas
add
add
test
popf
cmc
sub
ja
cld
out
shr
inc
adc
in
orb
das
sti
addr16
inc
es
mov
mov
adc
sbb
clc
int
enter
pop
inc
adc
pusha
loopne
pop
push
push
out
mov
dec
xchg
push
arpl
ss
add
fidivrs
cmpsb
jae
inc
lret
and
xchg
int
das
cmc
inc
xor
sub
mov
std
addr16
into
scas
jmp
test
adc
shll
sub
push
inc
mov
out
dec
dec
jb
ljmp
jne
pop
sarb
sahf
push
add
jmp
cmp
iret
jge
loope
dec
inc
popa
sub
testb
scas
add
add
cmpsb
rol
cld
pop
out
xchg
adc
out
push
and
outsl
pop
pop
pop
addr16
shll
mov
hlt
push
js
pusha
or
mov
pop
mov
push
cmp
jp
jno
sub
int
adc
lret
add
push
sub
fldt
arpl
cld
adc
imul
dec
dec
out
ds
sti
sbb
or
push
sub
mov
rcrl
xor
push
mov
dec
cli
dec
and
mov
cmp
add
insb
sub
jae
mov
mov
sbb
stos
pop
div
mov
mov
sub
pushl
call
mov
mov
lea
mov
incl
jmp
pop
jmp
insl
in
outsl
jmp
pop
adc
fstpl
int
testl
add
push
dec
mov
ret
dec
sbb
lods
pusha
gs
pop
push
mov
call
cmc
psubw
inc
leave
repnz
lahf
dec
pop
cmp
jb
pusha
int3
cltd
sub
scas
sahf
shrb
mov
xor
xchg
sub
jge
ret
dec
addr16
add
fldcw
or
jl
movb
ljmp
inc
lahf
int3
incl
ds
sbb
cld
in
imul
pop
clc
cmc
decb
imul
mov
jae
jo
inc
add
fdivl
inc
mov
jmp
pop
ds
cmp
out
into
xor
testl
add
mov
stos
dec
adc
pop
loop
mov
shrb
cmp
jo
aam
adc
aas
popf
dec
test
iret
les
inc
jb
repnz
out
or
roll
xchg
and
cmp
cmpsl
cmp
lods
leave
inc
pop
pusha
xor
loope
ds
mulb
xchg
insl
lahf
sbbl
push
loope
pop
xor
mov
shlb
js
jae
ja
mov
jns
mov
and
mov
cwtl
testl
dec
xor
cli
cmp
fmul
push
xor
nopl
addl
leave
add
adc
xor
xor
cmp
jmp
lret
fwait
xchg
sbb
mov
sbb
int
clc
add
scas
add
add
mov
xchg
mov
jns
xor
jae
add
mov
adc
mov
pop
sub
out
pop
adc
mov
lds
bound
int3
arpl
cmp
pop
pop
mov
insl
stos
shlb
pop
shlb
andl
mov
sbbl
icebp
add
cmpsb
add
dec
pusha
or
jp
pop
mov
mov
dec
jg
shrb
lods
dec
lea
std
scas
adc
push
mov
or
pop
je
pop
cmp
sub
jmp
shrb
stc
pop
fstps
sbbb
xchg
repnz
jae
push
jge
test
add
cmp
je
lea
mov
mov
mov
jmp
cltd
nop
add
or
hlt
bound
sub
addr16
add
scas
add
add
and
fs
inc
nop
lahf
iret
mov
lock
fldt
jae
add
jecxz
add
adc
mov
cmp
popa
cltd
cmc
xor
in
cli
ret
testl
pop
lret
mov
ja
imul
and
sub
cmpsl
dec
loope
push
push
xlat
and
adc
pop
jge
jbe
adc
addr16
shrb
mov
xchg
push
mov
popa
adc
call
lods
xlat
hlt
lahf
pushf
xchg
push
inc
push
test
data16
cmp
scas
cmc
lret
sbb
in
fdivl
mov
jmp
push
rclb
mov
dec
mov
add
sub
mov
out
dec
xor
and
ret
fldpi
jmp
and
movsl
movsb
jne
jmp
arpl
mov
ret
sub
add
outsl
mov
shrl
ret
dec
push
fdivs
add
sbb
movsb
inc
add
mov
loope
jge
fcompl
test
mov
call
jo
in
jl
leave
int3
mov
xchg
cmp
bound
gs
mov
sarl
push
and
add
lods
or
dec
shll
lock
jns
push
push
inc
ret
adc
dec
cmp
mov
sub
mov
jmp
and
pop
xchg
pop
imul
mov
mov
cli
add
scas
add
add
jge
mov
jae
jge
jo
inc
sub
xlat
or
repnz
jbe
adc
sarb
add
push
add
out
bound
mov
lods
int3
mov
mov
lods
cli
xchg
xlat
xchg
mov
loopne
adc
jns
rorb
dec
aam
call
mov
test
shll
pusha
push
xchg
mov
std
mov
call
jno
out
pop
dec
inc
xchg
fs
aad
xchg
push
jbe
in
arpl
inc
push
repz
push
dec
mov
sub
fucomi
pop
jb
repz
push
loopne
int3
cmpsl
mov
mov
sub
mov
jmp
jle
and
out
jnp
out
in
enter
sti
add
scas
add
add
cltd
call
add
or
add
add
mov
inc
aam
cld
negl
fdivr
ja
jge
sahf
xor
xor
or
sbb
mov
mov
xor
ret
jnp
ret
jb
fwait
add
adc
cmc
jl
push
push
pusha
out
add
and
js
cmpsl
pop
movsl
lea
rolb
adc
dec
popa
mov
aas
bound
in
cmp
movsb
adc
cmp
mov
pop
mov
jle
push
sti
and
movl
jmp
cmc
int3
mov
mov
lods
mov
aas
jmp
add
add
dec
addr16
enter
cld
lret
inc
mov
insl
sub
stos
loop
leave
clc
jge
ja
clc
pushl
ss
int3
imul
sbb
or
vcvtpd2dqx
fimuls
pop
or
mov
in
push
mov
mov
dec
cmp
inc
mov
adc
int
mov
adc
sub
leave
stos
mov
cmc
out
cmp
sbb
mov
push
out
imul
xor
leave
sbb
xchg
push
lea
out
data16
add
jo
xlat
movl
mov
jmp
sub
mov
std
push
mov
add
scas
pop
les
xor
cmp
cli
xor
lock
jo,pn
test
sub
sub
jae
mov
insl
pop
shl
in
lods
test
rcll
sti
sub
imul
loop
fcoms
jg
jp
push
mov
xchg
mov
aaa
and
cli
cmp
scas
inc
adc
popw
inc
scas
sbb
mov
pop
pop
scas
flds
inc
dec
pop
mov
gs
sbb
notl
xor
inc
cmpsl
mov
inc
sbb
jge
dec
cld
mov
mov
jmp
cmpsl
std
inc
ss
mov
and
std
add
scas
add
add
and
mov
lods
loop
test
fwait
aad
jnp
adc
jnp
fistps
in
ret
xor
adc
ss
arpl
cmp
cmpsb
dec
fwait
xor
dec
sub
xchg
pop
iret
mov
mov
nop
add
add
pop
mov
push
mov
push
push
lret
stos
dec
mov
leave
or
mov
ss
xchg
adc
hlt
mov
cmp
xchg
xlat
pop
stos
dec
cmp
pop
pushf
lods
dec
xchg
aam
sub
shr
jnp
push
inc
les
out
jecxz
call
stos
aam
es
dec
inc
xor
xor
pushl
pushl
pushl
jmp
in
jg
jmp
jge
or
addr16
out
scas
mov
scas
add
add
xchg
aaa
add
gs
jns
stc
pop
mov
fwait
lret
push
aas
sub
jp
iret
test
in
repz
fmuls
xchg
in
jno
push
data16
mov
adc
push
jp
aaa
push
or
cmpsb
cmp
inc
iret
int3
mov
imul
imul
jecxz
mov
sbb
xor
js
and
add
dec
push
fnstcw
mov
push
mov
out
or
push
int
ljmp
xchg
test
push
fsubl
fisubs
or
and
add
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
jmp
and
aaa
adc
rorl
mov
xor
add
add
cld
jle
incl
popf
pop
adc
mov
push
icebp
dec
decl
xor
fisubl
pop
stos
adc
aas
fcoml
pop
rcr
xor
cltd
cltd
popf
add
sbb
pop
jecxz
dec
or
jmp
out
inc
jo
je
and
mov
cmp
loopne
dec
pop
xchg
out
mov
nop
xchg
test
jo
pop
mov
repnz
rcl
mov
out
push
and
sahf
mov
and
das
aas
mov
dec
ret
fidivl
cs
cmpb
popf
std
mov
mov
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
jmp
ss
popf
stc
fbstp
jmp
addr16
push
mov
mov
add
cmp
sbb
pop
jle
mov
pushf
mov
xchg
inc
shll
into
into
mov
cmp
dec
fcompl
fisubrl
cmp
sarl
mov
jae
mov
cmp
xchg
jno
hlt
in
rorl
fcoms
arpl
add
push
mov
push
cmp
pushf
inc
test
pop
mov
push
jge
xchg
test
in
out
adc
inc
sub
jns
shll
sub
ds
pushf
pop
adc
mov
jbe
cli
ljmp
and
testb
test
jo
xchg
sub
xchg
mov
sarb
loop
push
push
push
call
jmp
sbb
gs
mov
adc
int
add
add
sub
adc
push
enter
jae
inc
dec
inc
add
ret
jno
js
xor
ja
push
sbb
gs
inc
jo
cltd
int
sbb
aas
xorl
adc
mov
push
cmp
pop
add
idivl
inc
dec
cmp
xchg
stos
scas
mov
xchg
int
loop
dec
gs
pusha
divb
rorl
fcompl
in
sbb
xchg
xor
jmp
pop
inc
push
scas
mov
mov
mov
cmpsb
arpl
add
movsl
int
jl
mov
xlat
pop
xchg
loopne
shlb
inc
push
xor
mov
adcb
incl
dec
clc
mov
push
push
push
push
call
xor
or
sub
mov
jmp
sbb
jg
icebp
cmpsb
ss
outsb
mov
add
add
sbb
and
stos
incb
push
les
cmpsb
jmp
push
ja
xchg
mov
jo
add
jo
mov
imul
adc
in
shrb
jmp
adc
aas
jg
sahf
xor
scas
push
rcrb
mov
test
xchg
or
out
std
shl
iret
fisubl
mov
cmp
cli
in
jmp
or
cmp
sbb
xor
sar
mov
push
test
mov
pop
xchg
pop
push
or
stos
jnp
add
xchg
inc
and
icebp
in
enter
dec
xchg
out
pusha
jl
dec
xor
and
sub
mov
add
movl
movl
movl
movl
movl
jmp
add
rcrb
std
jg
ja
cmp
add
add
in
xchg
loopne
add
and
movsl
dec
enter
sti
cltd
add
pop
rol
xlat
pause
pop
inc
clc
aam
rolb
xchg
pop
and
lods
dec
cmp
and
adc
mov
fistpl
jns
aad
push
lret
fcoml
pop
insb
mov
icebp
xlat
or
int
push
addr16
fbld
cmp
int
cli
add
and
out
daa
or
push
inc
dec
dec
stos
jle
xor
lahf
std
lahf
mov
stc
xor
cmp
push
adc
cli
addr16
int3
mov
jle
btr
dec
sub
outsl
daa
movl
mov
mov
jmp
push
pushf
xchg
mov
lret
mov
sub
add
mov
add
aam
in
push
in
xchg
icebp
xor
xchg
cwtl
ret
xor
arpl
stos
dec
or
mov
inc
repz
and
movsl
pop
xlat
sahf
clc
outsl
stos
inc
mov
mov
pusha
aam
fisttpl
mov
cmpsb
mov
idiv
sub
hlt
ret
jno
mov
adc
and
sbb
adc
pop
jae
adc
adc
adc
adc
pop
pusha
lods
and
xchg
rcrb
pusha
lret
jo
fnsave
xchg
sbb
dec
add
jl
inc
icebp
and
jmp
inc
ror
mov
cmp
jle
mov
jmp
adc
addl
xchg
jo
pop
push
mov
loop
add
mov
add
pop
cmp
jb
mov
ret
sbb
cmp
push
jecxz
std
cs
sbb
xor
movsb
loopne
sub
jp
loop
in
int
mov
xchg
das
xchg
or
push
int3
js
dec
popa
adcl
subl
cld
jnp
out
cltd
or
jo
fmull
insl
inc
lahf
rclb
dec
ret
cld
scas
mov
ljmp
mov
pop
push
jnp
push
in
pop
fnsave
ficoms
mov
or
out
loopne
adc
mov
test
js
loope
je
mov
adc
icebp
arpl
jp
pop
rcrl
daa
push
lret
xchg
pop
mov
push
push
and
jmp
insb
add
or
out
addr16
shr
or
cltd
add
add
ja
out
fistpl
inc
dec
pop
or
jg
xchg
jle
out
cmp
adc
push
enter
lahf
mov
inc
inc
mov
aaa
jp
outsb
cwtl
enter
push
mov
jo
call
sbb
mov
or
and
dec
xlat
xor
inc
jle
add
push
ret
mov
fs
xchg
cli
cmpsb
xorl
dec
mov
lahf
jl
rclb
mov
je
mov
test
cmp
cmp
cmp
inc
shl
imul
pop
aas
stos
jns
jmp
adc
mov
adc
scas
mov
add
push
jmp
sarl
sarl
stos
cs
push
add
add
xchg
mov
add
jnp
sub
sub
add
pusha
push
sub
les
inc
je
push
pop
inc
mov
xor
add
inc
push
cmpsb
aad
popf
inc
imulb
aam
ss
sub
sub
xor
clc
xlat
push
add
repnz
pop
mov
adc
add
push
repnz
cltd
mov
xor
jg
ljmp
mov
sub
or
pop
rcll
insl
ja
pop
lods
fs
loop
in
jmp
mov
fistl
add
dec
loopne
push
in
loop
add
sub
mov
jmp
xor
adc
ja
jmp
adc
add
mov
add
filds
xchg
and
ficompl
sub
nop
stc
cmp
xchg
cmp
and
push
shll
mov
or
in
cmp
pop
push
sbb
repnz
mov
mov
jmp
test
jne
push
or
loopne
cmp
pop
call
mov
xchg
add
push
xchg
fisubrl
cmc
subl
cwtl
js
iret
mov
sbb
push
push
mov
fnstcw
jns
call
ja
pop
fimuls
xor
fsubrp
nop
fiaddl
cmp
pop
mov
pushf
in
xchg
add
fstl
inc
leave
push
inc
cmpsl
sbb
or
inc
add
or
mov
jmp
xchg
xor
jbe
mov
mov
mov
add
das
decb
aaa
add
or
jbe
and
daa
and
mov
jb
xchg
enter
cmpl
mov
fstl
jns
aad
test
pop
cli
movsl
push
shr
aam
into
pop
jecxz
sub
dec
pop
xor
xchg
push
pop
ss
leave
test
cmpsb
pusha
aaa
or
jb
iret
repz
decb
xchg
cmp
js
ret
out
push
sti
out
push
cmp
rcrl
dec
mov
mov
push
mov
mov
fisttpll
sbbb
adc
ds
pop
xor
dec
sub
out
in
xor
dec
outsb
and
fdivrs
jne
movl
movl
mov
jmp
aaa
lock
jg
inc
mov
repnz
jne
add
mov
add
ljmp
ret
cltd
or
jge
scas
ret
imul
add
mov
fdivp
jge
test
mov
sbb
xchg
xorl
inc
add
adc
xchg
fsubl
sbb
cmp
adc
lea
sub
xor
jl
scas
loopne
adc
sub
add
pop
inc
or
mov
es
push
test
pushl
enter
add
sbb
jmp
stos
mov
stos
or
mov
loope
test
gs
xchg
cmpsl
mov
jnp
xchg
jmp
daa
xor
mov
jmp
mov
mov
mov
fisubrs
add
mov
add
and
xchg
xor
test
mov
int3
inc
enter
out
call
mov
xchg
rclb
sbb
lds
add
and
sub
mull
inc
adc
es
pop
or
mov
fs
inc
jo
xchg
mov
cmp
push
and
rcl
mul
push
push
sub
fs
pop
push
and
push
mov
mov
les
sub
gs
repz
pop
xor
mov
subl
clc
cmp
pop
test
sbb
mov
cmc
les
xchg
mov
daa
out
pusha
sub
mov
frstor
lret
inc
sub
add
shr
add
add
mov
iret
inc
mov
add
mov
add
dec
and
and
movsb
sbb
mov
pushf
mov
jmp
stos
repz
jmp
push
int
fbld
or
fwait
daa
es
inc
in
inc
cwtl
cmpsl
jmp
mov
stos
pop
rcrb
push
mov
lea
out
xor
outsb
dec
cwtl
arpl
mov
dec
sub
pop
lret
unpcklps
jb
jg
push
mov
push
mov
lret
jne
rcr
and
or
shrl
xor
outsl
scas
pop
add
scas
stos
imul
jge
test
xchg
in
push
push
faddp
les
add
cmp
push
lods
push
cli
add
xor
mov
div
mov
jmp
xchg
push
ffree
lock
lahf
lcall
add
fistpl
aas
idivl
pop
and
fiadds
dec
jbe
xchg
lock
cmp
inc
ja
lea
cmpsb
les
xchg
movsb
mov
push
lock
adc
or
or
lods
cmp
test
pop
push
or
or
mov
test
sbb
test
testb
arpl
imul
fdiv
enter
in
testb
cmp
cmp
pop
ss
movsl
mov
mov
or
outsb
imul
inc
cmp
sarb
pop
and
adc
jl
push
dec
jp
push
aaa
orb
shlb
mov
movl
mov
xor
jmp
jmp
dec
sbb
sbb
incl
inc
jp
cmp
add
mov
add
dec
imul
mov
mov
jge
cmpsb
dec
add
pop
insb
mov
adc
fwait
repnz
adc
pop
cmc
vmpsadbw
mov
dec
sti
cmp
test
fwait
stos
xor
out
dec
cmp
cwtl
pop
in
hlt
inc
or
push
test
pusha
subl
test
sub
cmp
xor
pop
sub
sbbb
scas
cmpsb
push
dec
mov
jbe
ds
mov
inc
mov
test
jp
movsl
pop
lods
mov
or
idivl
test
gs
mov
or
movsb
aad
pop
cmp
out
scas
ja
cmp
bound
jne
and
add
xor
mov
div
mov
jmp
das
imul
packuswb
mov
or
add
mov
add
inc
jge
mov
adcb
fidivrs
test
iret
cwtl
test
lods
jns
and
jge
jbe
or
out
movsb
xor
add
and
pop
scas
xor
cwtl
out
divl
add
pushf
xchg
pop
push
mov
repnz
shlb
add
movsb
inc
mov
fnsave
mov
je
xchg
mulb
std
sbb
push
lret
out
ljmp
pop
lods
pusha
sub
imul
push
xchg
into
gs
sub
lock
imul
mov
std
jg
pop
push
js
push
inc
mov
pop
adc
mov
movl
jmp
push
lret
fisubl
pop
popf
xor
jb
jle
mov
add
add
dec
or
clc
add
mov
mov
pop
push
xchg
test
gs
test
cmp
ret
push
lret
sbb
fdivrs
xlat
test
fistl
insl
sub
popl
mov
add
mov
sub
ss
fisttpl
dec
push
mov
jae
and
lods
cmp
add
fs
lock
mov
cmp
xlat
int
insl
outsl
push
lcall
lahf
push
and
insl
jmp
lret
inc
mov
or
scas
je
arpl
sub
imul
pop
in
mov
mov
nop
movl
movl
jmp
xor
and
aaa
out
cld
out
pushf
int
dec
rorb
jbe
add
mov
add
xor
pop
fwait
xchg
xlat
push
out
sub
and
sbb
xacquire
adc
lock
cltd
xchg
nop
sbb
sbb
mov
pop
gs
stos
inc
and
adc
pop
scas
pop
xlat
or
dec
sbb
test
aas
pop
leave
inc
rcrl
or
insb
inc
aam
int3
pop
loopne
lock
add
pushf
jbe
push
mov
mov
mov
jg
mov
cs
pop
pushf
fnstenv
in
dec
cmp
jne
mov
jno
out
test
cmp
mov
lret
mov
mov
and
mov
imul
mov
xor
jmp
cmp
jmp
mov
gs
jo
or
add
lock
cmpsb
in
subb
enter
add
push
sub
cld
cmp
repz
xchg
and
clc
data16
sbb
scas
aas
cltd
loopne
mov
cld
lds
sbb
cmpsl
dec
mov
sbb
cwtl
cmpsb
xchg
fsts
pusha
or
inc
mov
mov
mov
nop
faddl
stos
and
fmuls
or
sub
das
inc
push
mov
outsb
push
xor
sub
or
sub
scas
mov
repnz
or
pop
push
push
les
popa
pop
jmp
jns
movsl
mov
xchg
mov
jbe
aad
in
aas
out
out
sub
mov
movl
jmp
clc
push
add
pop
jmp
or
in
add
mov
add
clc
call
inc
into
je
dec
lret
and
fs
es
fwait
adcb
cmp
outsb
insl
and
repnz
test
mov
push
addr16
or
and
gs
mov
imul
xchg
arpl
cmc
out
xchg
xor
and
mov
test
adcb
sbb
popf
stos
xchg
push
aaa
imul
icebp
sahf
cmc
daa
mov
jl
repz
inc
nop
cmp
xchg
sub
push
stos
mov
ss
xchg
add
outsb
dec
mov
cmp
hlt
mov
cmp
add
adc
imul
movl
jmp
push
mov
repz
xchg
cmpsl
aas
fwait
or
add
push
mov
enter
xchg
fsubs
clc
mov
in
pop
ljmp
push
pop
popa
iret
adc
pop
add
adc
pop
cmp
push
out
rorl
xchg
aam
mov
mov
std
daa
fisubrl
xor
lret
ljmp
inc
fisubs
push
cmpsl
in
inc
xor
pop
jge
loope
adc
jp
popa
out
xor
pop
sbb
loopne
enter
repnz
sbb
sub
bound
push
arpl
fnstenv
fwait
or
sub
sti
xchg
or
inc
adc
jne
jg
fists
sbb
movl
mov
mov
add
and
mov
and
jmp
cmp
aas
cld
imul
push
push
add
mov
add
out
pushw
cmp
adc
shrb
dec
adc
or
fmull
gs
ja
mov
shl
adc
test
push
push
fldenv
cli
adc
mov
aaa
rcrb
cmp
clc
ret
mov
mov
add
ds
push
push
sbb
xchg
jno
subl
ret
in
jns
data16
mov
call
pop
push
cmp
adc
mov
xor
into
fildll
into
out
out
or
mov
jne
xchg
in
pusha
cmc
pusha
jnp
pmuludq
add
mov
and
mov
or
sarb
pop
mov
xor
xor
mov
div
pop
leave
ret
push
mov
sub
jmp
arpl
sub
sub
nop
pmulhuw
int
sgdtl
mov
add
test
lret
xchg
pavgw
adc
push
lods
mov
mov
push
fimull
imul
imul
hlt
xor
and
push
insb
xchg
adc
sub
and
jns
mov
add
xor
cmp
xchg
mov
rorb
xor
and
pusha
or
fs
repz
xchg
xor
or
or
xor
jae
pop
lcall
test
inc
lahf
in
dec
cwtl
push
cmpsl
ror
push
test
dec
hlt
stos
lret
xor
dec
mov
sbb
fxam
sbb
clc
xor
aad
inc
inc
call
add
js
jl
cld
std
std
fxch
xchg
xchg
int
rorb
sgdtl
mov
add
mov
or
scas
imul
imul
imul
xlat
mov
imul
inc
fwait
dec
ret
popf
lods
jnp
inc
sahf
xor
dec
lahf
arpl
jg
fcom
in
jecxz
mov
pop
cmp
stos
push
ds
out
insl
in
leave
mov
jns
outsl
push
ficompl
sbb
jns
je
ds
cwtl
pop
adc
cmp
mov
sub
and
rcl
or
push
mov
sbb
call
and
xor
mov
xchg
int3
add
mov
push
inc
mov
movl
movl
movl
movl
jmp
jae
jmp
stos
aam
inc
je
test
add
mov
fldcw
mov
sbb
lret
arpl
push
mov
xlat
adc
mov
out
xor
mov
mov
stos
inc
sub
pop
insb
adc
pop
rorb
dec
and
pop
jb
sub
push
xor
push
cmp
mov
aad
cmp
test
cli
roll
push
mov
imul
shl
jl
pop
mov
cmc
and
pushf
xchg
mov
mov
and
cmp
dec
cmc
shll
or
in
adc
orl
loope
imul
sbb
cmp
fcoms
xchg
les
inc
mov
dec
add
jmp
addb
fldt
mov
add
mov
add
les
xchg
push
push
imul
adc
and
idiv
stos
lea
pop
add
addl
adc
jle
mov
mov
test
mov
mov
into
xor
adcl
lock
mov
cmp
movsl
push
mov
mov
lret
int
lea
out
lock
rcll
mov
mov
inc
sbbb
aaa
mov
and
daa
bound
adc
inc
mov
fwait
cmp
sti
imul
adc
jne
mov
frstor
ds
jne
test
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
clc
repz
stc
pop
sti
clc
repz
xchg
lock
into
add
mov
add
xchg
cmpsl
pop
push
xchg
add
repnz
sub
dec
jo
push
add
mov
pop
mov
sub
cltd
pop
mov
movsl
repnz
iret
gs
jg
push
test
sub
mov
cmp
in
aaa
out
pop
jp
sub
pslld
mov
fstl
xor
or
add
leave
lods
movsl
lds
cmp
inc
xchg
and
sarb
jno
loopne
push
or
notb
dec
push
aad
inc
add
xor
or
test
dec
or
out
rorl
icebp
sbb
sar
jo
inc
fsubs
add
movl
movl
jmp
cmp
mov
inc
xor
push
xchg
pop
dec
adcl
add
cmpsb
mov
vmovaps
rcr
ds
push
fsubp
mov
adc
ss
lock
pop
jne
ss
cld
lods
sbb
test
mov
mov
pop
cli
push
mov
xlat
leave
cmp
xor
jg
sbb
adc
dec
cli
pop
jne
rcl
inc
xlat
out
lds
lahf
add
lret
addr16
cmc
shr
push
jp
jp
or
rolb
enter
imulb
push
mov
aas
push
and
rorl
leave
cmpb
iret
dec
cmp
mov
es
ret
fiaddl
pop
movl
movl
jmp
roll
jne
fnstenv
mov
add
mov
add
jno
outsb
fstpt
jge
jle
push
aaa
in
cmp
rol
pop
jo
lods
ss
sahf
push
dec
xor
sub
mov
fcomp
lods
sarb
js
jo
jge
inc
xor
adc
inc
das
add
mov
mov
addr16
push
test
mov
fisubrl
loope
xchg
ret
cltd
stos
imul
lods
mov
adc
repz
mov
in
pop
adc
adc
frstor
test
add
and
jo
dec
inc
or
cmp
mov
mov
mov
inc
xchg
imul
add
add
idiv
jnp
lea
in
adc
add
cmp
cld
dec
insb
mov
mov
ret
fcoml
cld
test
mov
iret
add
adc
lret
insl
jae
cmp
xor
js
repnz
inc
mov
not
push
inc
mov
test
lea
jo
nop
xchg
dec
les
cmp
sarl
cmp
jmp
jmp
jne
mov
push
push
xor
xchg
pop
fildll
xorl
mov
or
or
leave
into
enter
lds
fadd
pop
rorl
fisttpl
push
cmc
sbb
xlat
sti
addl
enter
inc
cwtl
lcall
adc
add
lret
add
into
data16
mov
sbb
adc
adc
add
jmp
shll
in
pop
rorb
add
lcall
jp
dec
mov
push
push
mov
push
cmp
sbb
and
mov
cmc
xchg
dec
cltd
mov
xlat
adc
xchg
aas
mov
add
fwait
mov
jmp
out
ret
outsl
dec
rolb
xor
jb
dec
mov
scas
mov
repz
sub
movsb
mov
push
insl
nop
js
cld
inc
pop
xchg
in
pop
nop
mov
add
sub
add
xor
shll
push
pop
adc
addr16
imul
xor
sbb
popf
movl
movl
movl
mov
mov
mov
mov
add
adc
jmp
mov
outsl
mov
fmulp
sbb
dec
adc
add
and
in
repnz
ds
stc
arpl
pop
js
fidivrs
leave
scas
sbb
push
inc
jb
xor
push
mov
fidivs
inc
pushf
xor
xorl
stos
lock
sbb
xchg
inc
mov
push
vpsllq
jb
mov
mov
add
subl
imul
loope
loope,pt
rcll
and
xchg
dec
jbe
in
pause
call
xchg
mov
flds
xchg
ss
in
and
leave
test
push
popf
js
push
popf
xchg
test
movsl
sub
loope
jmp
jmp
push
and
jmp
aas
dec
out
movsb
jmp
cmpb
adc
add
inc
dec
or
movsb
pop
pop
addr16
sbb
arpl
cmpsl
ds
test
mov
mov
into
movsb
mov
int3
push
push
iret
loope
mov
lock
psubusb
mov
push
mov
sbb
ljmp
mov
inc
scas
std
ljmp
adc
add
sub
xor
cmp
jae
int
xchg
cmpsl
pop
movsl
sbbl
dec
xchg
fldcw
xor
bound
add
cmp
jns
scas
hlt
adc
dec
sub
xchg
jge,pn
insl
xchg
inc
in
in
xchg
xor
inc
mov
and
mov
jmp
push
data16
ja
adc
lds
scas
push
add
mov
add
add
dec
scas
push
cmp
mov
cmpsb
fxch
cwtl
dec
lret
repz
out
bnd
sar
clc
lahf
stos
fnstcw
fs
push
xchg
add
jmp
test
jg
rcll
call
and
mov
out
pushf
xor
mov
ret
xor
or
add
mov
fwait
adc
ds
and
sub
sub
enter
xor
out
loope
leave
cmp
xchg
into
xchg
push
sbb
test
jne
cmpsl
je
imul
push
ljmp
and
sub
mov
mov
mov
sbb
add
cltd
jmp
shlb
inc
cmp
sbb
pop
add
mov
add
add
adc
xchg
fcmovb
outsl
push
pop
bound
outsb
mov
outsl
jle
push
sub
inc
mov
fsubrs
jg
lds
out
mov
in
shlb
jp
mov
inc
push
jmp
gs
cmpsl
mov
dec
or
adc
or
jp
insl
test
sub
fcoml
xor
push
pop
fisttps
dec
out
int3
pusha
sti
mov
xor
aam
jp
adc
fadds
pop
xor
rcll
cli
cld
inc
adc
jo
aas
shll
dec
push
push
mov
xor
inc
mov
add
cmp
jne
cmp
jmp
cmpb
call
scas
jge
cmp
xchg
add
ficoms
sbb
add
mov
and
push
adc
lcall
xchg
addr16
mov
mov
sahf
cltd
mov
add
pop
shll
in
imul
ljmp
aam
or
jecxz
mov
outsb
sub
pushl
or
pop
out
mov
or
xor
and
shlb
xchg
rcr
and
mov
mov
es
mov
add
push
hlt
dec
ret
ret
cmp
sbb
fst
jle
push
add
shlb
sub
lods
adc
imul
mov
cmp
or
test
add
add
lods
mov
mov
add
push
adc
jmp
loop
pop
dec
jle
repz
idivb
int
cs
lds
add
mov
add
jnp
add
dec
mov
addr16
addr16
cs
test
mov
cli
cmp
ret
in
dec
outsl
push
sub
int3
leave
std
lcall
mov
push
sub
push
cmpsl
xchg
sub
mov
leave
cltd
jb
xchg
cli
inc
fldcw
popf
sub
mov
pop
xchg
orb
in
pop
aam
and
data16
lahf
clc
int
cld
mov
insl
sarb
rcrb
sahf
hlt
aaa
inc
into
daa
mov
xor
add
pop
cmc
lds
pop
mov
scas
sbb
push
push
ret
sarb
lock
mov
add
add
into
jmp
lahf
jecxz
or
int3
mov
imul
add
add
sub
xchg
push
into
aas
int
push
push
xchg
and
add
jbe
scas
xlat
std
mov
xor
js
push
cmp
mov
bound
push
outsb
dec
out
in
mov
clc
aam
mov
xor
in
gs
ljmp
fcmovnbe
or
fisubl
ss
sarb
mov
lret
idivb
mov
and
dec
stc
lods
adc
xor
pop
in
mov
pop
mov
cmpsl
icebp
cld
xchg
arpl
pop
push
mov
rolb
pop
pusha
add
mov
mov
mov
jmp
movsb
lret
pop
hlt
ljmp
movsb
sub
add
mov
add
ret
pop
xor
inc
sub
cmp
jge
sbb
or
inc
insl
lods
out
packsswb
sub
and
mov
cmp
subl
pop
mov
imul
pop
stos
or
inc
mov
loop
push
mov
inc
imul
in
out
enter
test
mov
pop
xchg
xchg
jmp
loop
xor
mov
push
popf
push
jo
mov
jno
shrl
lret
test
call
cli
icebp
call
cld
inc
or
pusha
iret
stos
mov
push
mov
inc
xchg
or
lock
mov
mov
xchg
add
idivb
enter
or
jne
mov
or
add
xor
push
pop
div
jmp
test
and
inc
lcall
fldt
sbb
add
fwait
clc
lods
out
and
lret
lock
pusha
cmpsl
shrb
mov
jg
pop
fisttps
aas
lea
sub
nop
dec
jo
nop
call
test
call
sahf
cmp
cmp
fwait
lods
aas
pusha
cld
push
sahf
adc
add
dec
mov
push
sahf
or
cli
mov
mov
ja
popf
cmp
cwtl
sahf
xchg
loop
xchg
adc
ss
mov
cltd
out
sub
out
push
test
stc
lahf
push
and
cmp
popa
fdivrl
int3
cmc
push
add
rcrb
inc
dec
xchg
mov
cmp
dec
clc
xor
sub
mov
or
mov
sub
mov
add
xor
mov
jmp
imul
repz
lcall
jp
add
sbb
add
stos
push
adc
jg
sub
push
or
mov
sub
dec
repnz
not
xor
loope
or
push
dec
imul
dec
pop
or
in
rorl
test
movsl
lock
pop
addl
inc
mov
rorl
lods
inc
jecxz
roll
sub
pushf
inc
pop
jp
sub
outsb
pop
outsb
rclb
mov
pop
sbb
mov
mov
and
cmc
sub
cmc
mov
add
clc
mov
push
and
lret
push
fdivs
xor
les
push
xlat
into
pop
sbb
sti
xchg
lea
pop
cmp
mov
add
jmp
cmp
in
out
jg
fucomip
adc
mov
sbb
add
cld
aad
adc
xor
push
push
fmul
inc
iret
mov
out
cmp
orb
mov
scas
mov
mov
fadds
xchg
mov
lcall
xchg
xor
adc
fstl
pushf
rorb
xchg
fadds
xlat
jecxz
flds
scas
fadd
mov
mov
and
mov
jp
outsl
cmc
mov
add
cwtl
mov
push
sub
push
mov
outsl
dec
ficoms
popa
enter
fadd
xchg
cld
adc
or
sbb
sbb
push
push
sbb
add
rorl
add
fldl
movsl
sti
lods
fistpll
mov
gs
icebp
sbb
add
jbe
and
testl
xchg
push
insl
lcall
cmp
xchg
in
sbb
daa
and
and
add
add
scas
cltd
stos
jge
jle
adc
in
movsb
lahf
es
rcr
pop
pop
push
enter
leave
rolb
push
rorl
fstpl
fcomi
pop
repnz
shr
xchg
push
cmp
lret
test
dec
lea
or
int
sub
cmp
vaddsd
mov
push
mov
mov
notl
insb
push
push
pushw
shrd
aaa
fistpl
push
mov
lret
int3
scas
pop
sbb
dec
push
outsb
xor
div
mov
jmp
jb
fsubp
jnp
sub
mov
mov
add
add
and
pop
outsb
jbe
aam
dec
addl
decl
jno
pop
xchg
leave
push
cld
mov
es
arpl
push
lock
stos
roll
clc
cmp
pop
jns
inc
sub
je
lock
xor
adc
cmpsl
es
rcl
mov
mov
cld
pusha
sub
jmp
mov
fsubl
jbe
push
xor
lds
mov
adc
movsb
xlat
cmp
jge
incl
mov
inc
push
cmp
sub
roll
or
into
dec
jbe
jno
adc
pop
pop
leave
mov
and
push
or
lret
add
or
test
ret
dec
movsl
int3
imul
add
add
rorl
xchg
call
mov
out
scas
xchg
or
int
cmp
test
cmp
in
loopne
mov
sbb
pop
clc
shll
decl
into
sub
nop
sahf
jbe
jnp
pop
sbb
scas
les
shl
pop
add
repz
adc
jb
mov
or
testl
adc
sub
pop
push
cmp
push
popf
mov
mov
aaa
mov
cs
lods
inc
xor
cmpsb
inc
cmpsl
jbe
mull
out
mov
das
in
lea
pop
mov
adc
icebp
push
incl
add
lret
add
lock
cmc
je
add
int
in
or
mov
add
jbe
lods
adc
mov
ret
bound
or
ficoms
jecxz
fldt
cli
xor
mov
inc
xchg
xchg
aam
sbb
lret
lret
in
negl
fs
cld
mov
pop
rcr
pop
mov
dec
in
stc
data16
and
mov
pop
mov
dec
ja
xor
push
sbb
xchg
jle
mov
cmp
mov
pop
and
rcl
cli
cmpsb
xchg
sbb
mov
jne
adc
xchg
jmp
xor
xchg
sub
xorb
xor
jno
inc
mov
inc
xchg
jmp
in
icebp
inc
cmpb
scas
fidivs
or
add
jmp
add
inc
push
sbb
pop
inc
and
push
outsl
jo
pop
add
mov
add
inc
mov
into
jmp
dec
jmp
pusha
jg,pn
scas
and
in
aad
dec
and
outsl
test
adc
cmc
jle
add
jmp
push
push
xor
cmpsl
lea
rcll
or
cli
push
stc
outsb
fimuls
push
outsl
pop
xchg
mov
and
gs
pop
out
lods
dec
das
jg
shl
add
dec
in
push
fnstcw
xchg
rolb
lcall
mov
lcall
imul
mov
xchg
inc
xor
jmp
mov
arpl
mov
or
jmp
mov
pop
sbb
iret
and
jo
out
lahf
imul
add
jno
xor
jle
xchg
push
sub
movsb
push
pusha
popf
xchg
xchg
stc
pushf
xor
je
shrl
add
sbbl
pop
pusha
mov
jmp
sbb
pusha
ljmp
ljmp
and
and
mov
push
pop
fidivs
push
arpl
push
and
sub
stc
inc
fistl
push
mov
xchg
inc
cmp
orb
pop
jp
aaa
xchg
push
popa
add
out
cmc
in
pop
inc
push
xchg
mov
stc
push
mov
test
cmp
lahf
mov
loop
imul
mov
jmp
sub
mov
mov
das
fcmovnb
cmpb
add
lret
jnp
es
das
in
loopne
movsb
je
push
jns
lahf
pushf
popa
inc
pop
jg
pop
cmp
and
inc
jecxz
xor
push
lret
pop
call
fisubl
insb
pop
les
add
and
mov
push
cltd
or
sub
das
jmp
mov
nop
fadd
cmp
insl
es
fcompl
lds
or
push
je
pop
cmp
cwtl
cmpsl
jle
inc
mov
cmpsl
pop
cld
mov
mov
cwtl
jbe
mov
jnp
jb
rorb
jmp
pop
test
mov
daa
dec
addr16
pop
aam
iret
and
add
xor
rolb
test
movsb
sbb
jmp
notl
inc
xor
adc
pop
mov
aas
cltd
movsb
cwtl
pop
jmp
xlat
add
inc
dec
and
lea
jne
push
adc
sub
jle
cltd
or
dec
test
add
mov
pop
mov
push
cltd
jno
xchg
dec
loop
test
lods
stc
sub
aas
cmc
xor
ljmp
test
enter
dec
lret
daa
les
loope
fdivrs
int
jl
fnstsw
ja
jbe
inc
inc
imul
dec
lea
and
jge
mov
in
dec
and
xlat
push
xchg
call
or
add
mov
sub
mov
lea
jmp
mov
mov
pop
xchg
or
andl
add
sar
addl
fldenv
enter
mov
sbb
mov
js
sub
lret
jl
xor
sbb
aaa
pop
xor
cltd
test
add
in
sbb
pop
stos
xorl
cmp
mov
add
add
call
fiadds
add
fimull
sti
frstor
push
cmp
daa
pusha
shrb
imul
jecxz
mov
jecxz
popl
hlt
fldt
xor
insw
adc
cmp
jg
sbb
out
dec
ds
pushf
mov
add
mov
mov
mov
mov
jmp
cmp
imul
pop
js
pop
pop
push
cltd
dec
mov
and
add
loopne
push
popa
push
hlt
sub
sbbl
mov
pop
jne
dec
push
jb
pop
ret
bound
cld
sbb
mov
mov
icebp
xchg
aas
mov
add
clc
fisubrl
push
andl
test
fstpl
pop
and
inc
cmp
and
mov
xor
inc
ds
imul
call
dec
cld
push
push
mov
lds
sti
hlt
sub
gs
dec
xchg
mov
out
pushfw
and
xor
repz
jno
es
dec
pop
lret
cld
sub
daa
pop
stos
push
xor
xor
sub
mov
sbb
mov
or
mov
jmp
xlat
ja
xchg
push
lcall
and
add
in
inc
mov
pusha
xchg
out
xor
psubsw
lahf
hlt
aam
or
mov
adc
jne
adc
inc
fcmovb
fwait
mov
jl
push
inc
xor
mov
dec
aas
xor
movsl
repnz
adc
pop
mov
sub
pop
mov
pop
push
xor
or
aad
add
push
cli
mov
adc
stc
or
xchg
add
jb
std
and
jno
icebp
xchg
dec
sub
xchg
push
fsubl
mov
insl
movsb
mov
add
inc
and
push
stc
ljmp
jle
les
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
sub
xor
div
mov
or
imul
xor
add
mov
jmp
sar
test
jg
cld
xchg
out
mov
pop
xchg
and
add
add
pop
in
fs
es
sarb
jae
xchg
gs
sub
bound
test
sti
fiadds
pop
js
cmp
push
test
cmp
mov
or
xor
cltd
mov
ss
in
pop
scas
or
stc
test
inc
or
fcomi
sub
cli
fadd
pushf
aam
or
mov
jle
adc
call
lods
repz
jmp
in
and
kmovb
dec
lret
or
jnp
cmc
leave
jl
xchg
cs
lock
and
mov
outsl
add
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
inc
jae
push
cmc
xlat
divb
je
in
xchg
xchg
movsl
dec
and
add
je
mov
lds
aam
mov
into
add
int
pop
sub
add
insb
inc
loop
call
and
incb
and
inc
daa
lcall
jae
int3
fwait
dec
movl
sbb
jecxz
cmp
xchg
in
negl
cmp
pop
xchg
test
mov
repnz
mov
add
sub
repnz
dec
pushf
lock
loop
and
inc
push
aaa
mov
enter
insl
out
stos
xor
in
mov
mov
xchg
push
ss
test
dec
fiaddl
jb
or
inc
pushf
bound
add
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
push
jbe
int
in
ret
jp
cmc
mov
mov
add
mov
pushf
xchg
subb
rolb
xchg
and
mov
ljmp
aad
jo
mov
jae
aad
xchg
push
out
leave
into
insl
gs
push
sbb
cmp
xor
dec
leave
push
ljmp
cmp
sbbb
pop
mov
aas
in
sahf
mov
push
lret
sbb
bound
wbinvd
push
sub
lods
jbe
mov
adc
nop
sti
add
popf
stos
fsubs
xor
call
stc
in
dec
data16
sbb
cmp
pop
and
loop
in
mov
addr16
pop
mov
inc
out
outsl
movl
jmp
loop
cmpsl
lret
out
stc
mov
dec
imul
psubd
jg
xchg
add
mov
xchg
dec
xor
idiv
push
ret
clc
mov
push
jnp
or
dec
xlat
ds
jge
inc
sub
sub
scas
dec
pop
inc
lret
add
das
rcll
mov
and
dec
adc
outsb
jae
daa
dec
fsub
je
aad
cmp
push
xor
cs
jae
pop
pushw
mov
sti
lds
out
insl
xchg
jnp
leave
pop
mov
mov
icebp
push
dec
fs
lret
jbe
subl
ss
mov
mov
mov
ss
cmpsl
jns
cmp
pop
movsl
loopne
test
int
inc
fdivp
push
pop
imul
fcomp
bound
add
inc
fdiv
add
movl
movl
movl
jmp
adc
xlat
mov
pop
ret
pop
daa
add
mov
add
ss
scas
push
stos
sar
gs
mov
mov
stos
pop
xor
ds
loope
jg
jmp
jno
cmpsb
test
sub
xchg
mov
pop
jecxz
gs
sub
xor
and
mov
push
sbb
rorl
imul
in
xor
mov
add
cmp
jmp
or
xorb
xchg
mov
icebp
inc
in
cmc
fstpt
lods
jecxz
push
fisubl
pop
lahf
fwait
inc
pushf
add
sbb
sbb
cmpsb
call
and
sbb
loop
add
fmuls
or
cmp
in
insb
dec
add
jmp
sbb
mov
andl
add
add
fidivs
ljmp
inc
stos
adc
mov
or
lods
dec
xchg
cmc
sbb
addb
cld
pop
addr16
std
sbbb
out
pop
leave
lods
ret
outsl
sbb
roll
in
addr16
pusha
mov
xchg
xchg
adc
pop
add
and
les
pop
sbb
add
cwtl
jl
clc
fld
pop
lds
xchg
ret
neg
xchg
cmp
mov
flds
fdivs
mov
pop
test
jnp
sub
jp
mov
jg
xchg
inc
inc
jmp
in
into
push
xchg
mov
dec
cmp
or
inc
lock
add
jmp
and
fildll
pushl
dec
std
mov
add
popa
inc
push
pop
pop
inc
sbb
cmpl
fldenv
xor
cmp
leave
in
sub
gs
dec
push
pop
or
mov
and
mov
aas
mov
stos
out
mov
js
add
jo
data16
mov
cld
push
mov
jbe
dec
rcl
fwait
adc
int3
shrb
pop
pop
jecxz
dec
cli
pop
lock
hlt
or
aad
int3
mov
inc
push
loope
push
cmp
push
adc
outsl
and
push
cld
inc
mov
and
or
push
jmp
outsl
xchg
hlt
sub
add
enter
inc
ds
fstpt
int3
mov
dec
push
cmp
add
mov
add
out
clc
mov
notl
mov
dec
pop
push
dec
xlat
add
pop
add
es
add
popa
lea
inc
mov
lds
add
jecxz
mov
aas
dec
out
pop
in
push
fcompl
mov
mov
aaa
dec
mov
cld
stc
mov
jae
das
movsl
jae
sbb
jecxz
pop
mov
fs
les
loopne
sub
dec
loopne
loope
sbb
iret
dec
rcrb
inc
jno
inc
lcall
push
inc
orl
rcll
or
dec
mov
push
into
lods
cs
push
dec
movl
push
jmp
enter
imul
sti
pop
add
jmp
sbb
add
mov
add
mov
push
out
dec
pusha
call
push
jae
int3
push
repnz
ja
fwait
dec
adcl
jp
sub
ljmp
repz
cmp
incl
stos
inc
push
std
lahf
nop
rorb
sub
adc
dec
shrb
xchg
loopne
test
mov
rolb
dec
pusha
adc
insb
fistpll
pop
call
push
xlat
cmp
lea
and
popa
in
lods
sbb
out
dec
fwait
xchg
dec
cltd
cli
clc
xchg
fisubrl
pusha
sar
insl
xlat
les
stc
shl
pusha
insl
sti
xor
adc
and
mov
out
in
stc
and
ds
movl
jmp
xor
xchg
outsl
lahf
jg
sti
or
cs
leave
sub
add
mov
int3
mov
adc
insl
xchg
loope
add
and
jb
pop
aas
cmp
jl
testl
sbb
ss
xor
arpl
adc
sub
cwtl
and
enter
sbb
ja
loope
lock
or
jns
pushl
int3
aam
ret
mov
sub
push
fbld
adc
mov
cmc
loope
xchg
adc
push
inc
lcall
popf
or
and
dec
std
cltd
pop
adc
aaa
or
and
test
int3
and
cld
push
push
push
jmp
fsubl
std
mov
cmpsl
pop
ret
mov
lds
sub
add
lea
mov
lods
pop
jb
outsb
std
or
sbb
or
imul
call
and
cmp
imul
mov
xor
mov
and
dec
sbb
das
xchg
ds
mov
mov
cmp
fisubl
jnp
bound
adc
sub
cltd
cli
push
pushl
fcmovb
clc
dec
cltd
jle
out
mov
xchg
push
push
std
adc
in
push
gs
mov
sub
lock
or
test
mov
addl
push
test
sbb
jmp
dec
add
mov
mov
sub
mov
sbb
jmp
insb
mov
rcr
stc
jl
add
jecxz
sub
add
daa
in
mov
outsb
in
lods
fwait
sti
popa
sbb
add
xchg
mov
push
mov
xlat
mov
or
pop
mov
jg
cwtl
mov
andl
cld
mov
std
out
pop
push
pop
jle
in
xchg
sub
mov
enter
dec
mov
jb
fcmovnbe
or
jp
push
cmp
test
lret
jge
shld
sub
inc
mov
dec
je
ds
enter
mov
jl
push
jno
sbb
pop
and
cmp
sahf
fstps
es
out
sub
ljmp
push
push
shlb
jmp
fidivs
xchg
lods
repz
sub
pop
fldcw
add
insb
sbbl
call
xchg
or
dec
pushf
fdivp
mov
bnd
sub
xlat
movsb
jmp
mov
filds
inc
xchg
mov
jnp
push
xor
lods
iret
jb
setp
sti
sbb
jle
push
sbb
out
pop
arpl
push
add
shrl
rcr
loope
ret
push
loopne
orb
test
xchg
loop
mov
insl
aad
or
sub
nop
xor
lar
ds
icebp
and
dec
es
jb
push
les
in
pop
xchg
scas
adc
stos
sbb
test
andl
outsl
stc
cmpsb
xchg
int
ja
outsb
mov
push
outsl
lock
pop
mov
add
enter
or
ljmp
mov
pop
mov
add
mov
sbb
pop
scas
leave
mov
jne
adc
pop
outsl
mov
mov
jle
sbb
mov
std
mov
adc
mov
xchg
cli
mov
xchg
mov
xor
and
rorl
int3
mov
repz
sti
fldt
adc
sbb
insb
cmp
loopne
mov
pop
pop
mov
jnp
popf
fcoms
pop
cmp
sbb
add
shll
ja
sti
lock
add
push
jl
xchg
in
add
test
sahf
popa
push
test
and
pop
stc
add
mov
les
xlat
call
xor
and
jmp
rol
jmp
jmp
ljmp
push
cmp
add
mov
add
cltd
pop
inc
or
mov
outsb
inc
insl
hlt
mov
adc
scas
fwait
lods
push
ret
sub
adc
std
jmp
dec
sbb
cs
insl
test
add
cmpsl
movsb
imul
andb
aad
push
xchg
leave
lea
lret
xchg
pop
adc
in
cmp
add
out
dec
hlt
clc
inc
jb
jge
incb
xor
cmp
int
popa
jo
pop
mov
sbb
jae
test
fnstenv
shll
loopne
imul
mov
outsb
fnsave
repnz
or
xor
add
adc
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
mov
add
jmp
in
and
in
jg
fwait
sub
jmp
add
add
int
mov
test
ret
lcall
aaa
jge
add
pop
or
mov
cmp
push
bnd
fstl
or
addr16
or
xor
outsl
xchg
and
jmp
pop
mov
sbb
adc
imul
xchg
mov
cmpsb
dec
mov
lds
push
lcall
outsl
or
or
mov
lods
lock
test
sbb
mull
mov
mov
adc
mov
push
xchg
pop
call
in
leave
adc
and
jmp
and
push
jg
imul
sub
insl
cltd
das
add
mov
add
test
scas
not
nop
add
cmp
rorl
ret
int
cmpsb
adc
cltd
leave
js
lock
out
ds
ljmp
push
lcall
shr
mov
pop
cmc
pop
iret
adc
sbb
dec
push
mov
repnz
das
sub
xchg
dec
adc
call
cmp
stc
cld
sub
cmpb
lods
xor
mov
inc
lods
ficomps
aas
int3
mov
fisttpl
cmp
out
neg
enter
scas
pop
cmp
sti
jo
add
enter
sbb
mov
jo
or
dec
xor
add
into
pop
push
push
sub
jmp
dec
ds
data16
jne
daa
or
popl
xor
mov
xor
aaa
sbbb
cmp
lret
gs
mov
loopne
sub
lahf
push
loopne
daa
push
test
and
pusha
roll
or
out
in
jg
lret
xlat
mov
inc
sbb
not
pop
jge
xchg
xchg
rol
add
and
jno
stos
fldenv
add
int
or
fbstp
or
xchg
ljmp
cmp
jmp
jle
and
data16
mov
stc
xor
add
fs
enter
mov
and
adc
xorb
or
insl
movd
jp
fisubrl
xchg
loope
push
mov
mov
or
sbb
out
pop
lds
cltd
notl
loopne
in
mov
mov
xchg
xchg
or
and
popf
imull
aas
cld
aas
or
xor
adc
lock
pusha
sub
ret
xorb
aaa
mov
fstpl
inc
outsb
dec
cli
negb
dec
insb
push
xor
mov
aad
adc
movsl
push
and
scas
push
mov
cmp
fiadds
gs
in
mov
jp
call
shr
sar
call
jmp
std
pop
and
popf
adc
movsb
sahf
inc
gs
add
add
js
ret
lcall
popa
adc
and
cmc
cmp
dec
ret
push
cli
into
lcall
fnsave
movb
mov
mov
dec
push
and
call
mov
shll
or
popa
adc
dec
xchg
push
test
cmp
movsl
sbb
sub
xchg
std
adc
fstpt
stos
movsl
mov
pop
jmp
in
cwtl
fcmovb
jns
pop
sbb
mov
in
jg
lret
jno
push
je
icebp
out
xchg
inc
mov
jp
add
data16
push
out
and
adcb
call
add
xchg
mov
cwtl
push
add
mov
add
mov
add
inc
adc
jns
lret
arpl
pop
mov
adc
push
mov
js
xchg
insl
test
jle
mov
mov
aad
pusha
outsb
push
xchg
xor
test
gs
inc
shlb
pop
jb
dec
out
movsl
xchg
repz
sti
ds
and
cmp
ja
test
cmc
inc
xchg
hlt
add
mov
inc
std
les
in
out
stc
shlb
imul
dec
fildl
xchg
adcb
jmp
aaa
xchg
lds
dec
dec
xchg
or
push
shlb
inc
cmpsb
test
pop
in
add
jmp
xchg
dec
lret
scas
repz
mulb
push
or
add
mov
add
sbb
mov
jnp
sub
mov
xchg
adc
sbb
push
jns
imul
pusha
and
inc
push
dec
popf
dec
dec
dec
mov
outsl
test
pop
xchg
cmp
int3
dec
mov
cmp
add
rcr
push
jo
bound
enter
push
movl
fimull
xchg
jl
xor
lret
fs
sub
inc
jmp
sbb
mov
inc
or
xor
inc
inc
mov
push
cmp
mov
rcrb
dec
cmp
xor
fsts
mov
adc
add
adc
mov
mov
mov
mov
mov
mov
jmp
sbb
lods
std
out
cmp
std
xchg
push
jp
inc
mov
mov
add
add
lock
push
lods
sub
add
inc
xchg
or
inc
xor
icebp
or
inc
sub
aad
inc
lds
pop
push
aad
pusha
test
inc
add
shl
cmpsb
jmp
sbb
mov
push
les
ret
mov
popf
test
int3
or
mov
arpl
popa
mov
test
out
roll
scas
xchg
lret
enter
test
and
aas
popa
aas
xor
xor
popa
and
not
xor
notb
mov
push
cmp
cmp
sub
lahf
sub
aas
mov
lds
mov
and
jmp
xchg
dec
jns
stc
negl
mov
imul
add
mov
std
cwtl
lea
cmp
enter
cltd
outsb
push
add
pop
pop
cmpsl
inc
inc
inc
mov
pusha
xchg
repz
and
jecxz
cli
and
and
and
outsb
iret
shr
aaa
jmp
inc
leave
and
lds
cmpsl
outsb
dec
pop
out
aaa
in
pop
les
cli
jg
sahf
and
dec
test
fadd
xlat
lock
xchg
pop
mov
or
rcrb
ja
or
jo
push
js
test
jno
clc
dec
popf
xchg
xor
das
cmp
xor
popa
dec
dec
sar
sbb
fsubrl
in
mov
cwtl
icebp
and
mov
add
adc
das
scas
mov
insl
in
fiaddl
sbb
add
cmp
jnp
xor
test
pop
push
mov
mov
inc
mov
mov
in
in
push
cltd
clc
mov
neg
and
enter
and
and
xor
fidivs
out
jae
xchg
ret
cmp
and
pop
pop
clc
add
testb
ficompl
pusha
data16
std
addr16
push
aam
xor
inc
inc
imul
ret
cmp
jo
in
lods
pop
std
xchg
clc
pop
repz
daa
sub
fistl
add
mov
inc
jns
or
shl
in
xchg
and
xor
mov
jmp
cmp
arpl
pop
jmp
jecxz
sub
add
aas
cmp
inc
mov
sbb
mov
ja
add
pop
mov
fs
mov
mov
lahf
stos
cltd
clc
mov
movsb
test
xchg
movsl
xchg
das
push
ret
mov
pop
jl
inc
inc
loope
out
and
or
push
stos
mov
xchg
jne
sbb
dec
jle
sbb
stos
decb
mov
sbb
cltd
push
xchg
dec
out
int3
xchg
pop
dec
push
lcall
pop
jmp
xchg
or
test
push
bound
jns
xchg
sbb
clc
mov
scas
into
pop
push
cmp
sub
mov
test
into
decl
ret
add
add
mull
in
mov
add
test
mov
xchg
lahf
add
adc
sub
mov
mov
add
mov
sub
pop
add
mov
dec
inc
cltd
ja
cli
fimuls
nop
stos
repz
sbb
dec
and
push
ret
fisttpll
inc
sub
mov
push
adc
std
ret
iret
pushf
out
push
jbe
or
add
mov
jno
and
xlat
cmp
xlat
adc
jae
into
and
sub
rol
cmpsl
mov
scas
fidivrs
sbb
loopne
lret
mov
sub
jmp
mov
mov
jo
je
mov
aaa
add
mov
add
clc
stos
outsb
lret
adc
mov
out
imul
fadds
fcoms
fadd
mov
or
xor
movsb
arpl
mov
movsb
cmp
aam
mov
adc
pop
fimull
mov
or
out
jl
and
cmpsl
cmpl
jp
daa
aad
aas
aaa
sub
and
add
dec
iret
cli
fcompl
outsb
les
jo
in
and
les
insl
push
add
push
xor
in
aaa
sbb
pushf
pushf
sbb
pop
enter
popa
add
pop
popf
inc
and
fsts
xor
cwtl
mov
mov
jmp
clc
test
jg
inc
push
dec
jae
mov
mov
add
jl
lods
mov
jnp
add
insb
out
outsl
xor
in
mov
lcall
adc
jb
and
xor
scas
cwtl
std
sti
call
mov
outsl
out
inc
mov
ret
pushf
pop
cmpsb
ja
mov
mov
les
sti
sbb
adc
jns
lea
sub
lret
xchg
gs
lock
dec
mov
mov
cmp
pusha
or
inc
xor
js
push
add
mov
add
inc
xor
cmc
lds
mov
out
dec
push
mov
or
add
flds
adc
pop
add
enter
ljmp
out
ljmp
fimuls
add
add
jl
mov
or
xor
cs
push
push
push
test
sub
adc
not
orb
jns
ja
mov
rcr
add
mov
or
add
inc
or
daa
mov
dec
int3
pop
mov
leave
and
insb
loop
lods
mov
dec
lret
push
jns
sbb
fisubl
into
xor
add
xchg
mov
mov
gs
sub
orb
mov
rcrb
or
or
adc
mov
push
bnd
adc
int3
adc
and
xor
xor
jmp
mov
sbb
pop
fcompl
mov
cmp
add
mov
add
jb
xchg
fwait
adc
push
loopne
test
lods
fcmovnbe
and
fs
addr16
xlat
push
cmp
fsubs
cmc
leave
insl
loopne
add
popf
xchg
lods
xchg
mov
cli
lcall
negb
out
in
xchg
xchg
and
addr16
mov
sbb
stos
pop
pushf
and
and
mov
jno
and
jnp
inc
in
pop
dec
mov
or
xlat
jg
mov
jmp
pop
mov
and
xchg
enter
movsb
bnd
mov
fldl
ja
mov
ret
mov
adc
mov
mov
mov
mov
mov
and
jmp
ss
mov
fiadds
jl
fsubrp
cmp
add
cltd
add
scas
cld
xchg
ss
shrb
inc
loop
ja
add
sbb
cwtl
cmp
scas
sbb
add
cmc
rolb
cmp
test
fnstsw
pusha
xchg
outsl
gs
mov
xchg
hlt
sub
imul
xor
test
pop
fdivl
loope
das
jnp
leave
jb
shl
cmp
ja
fildll
and
cmpsl
das
ljmp
xor
insl
enter
cmp
add
xchg
cmp
clc
xchg
dec
or
popf
jmp
push
lcall
int3
sub
or
jo
aaa
xor
dec
ja
and
mov
and
jmp
pop
insl
scas
fdivrp
fbstp
mov
add
add
mov
add
xchg
fisttpl
jno
jne
mov
xor
stos
adc
call
aam
sub
icebp
lea
xchg
mov
stc
mov
int
or
int
imul
mov
js
lret
jae
ljmp
leave
aas
pavgb
aam
ret
and
insl
and
inc
in
sbb
stos
xchg
cs
jbe
aas
and
pop
test
in
movsl
insb
bound
inc
popf
mov
cmp
or
mov
aad
mov
jle
mov
out
call
sbb
lret
movsl
sub
push
push
push
push
call
mov
mov
mov
jmp
sub
mov
mov
aad
int
test
add
mov
add
and
rorb
les
repnz
ljmp
mov
or
pop
mov
dec
lret
movsb
arpl
rolb
out
pop
loop
xchg
test
std
fimuls
outsl
loop
mov
xor
add
jecxz
lcall
mov
dec
push
mov
xlat
addr16
dec
gs
pushf
imul
pushf
fistl
sub
and
sahf
fistl
leave
ljmp
js
in
loop
pusha
les
pop
data16
mov
push
push
adc
and
xchg
adc
xchg
pop
xor
jno
cltd
adc
mov
loope
inc
add
and
or
mov
or
mov
jmp
lahf
sub
test
xor
dec
jo
inc
sbb
cmp
add
and
cmp
push
xchg
pop
mov
add
mov
pop
cmpsb
pop
pop
test
xchg
cltd
js
sbb
rcrl
dec
repz
lret
pop
out
lock
sbb
and
cmp
dec
sub
add
lods
movsb
loopne
or
xchg
jg
and
mov
pop
rorl
dec
inc
int
cmp
inc
pop
xor
mov
loopne
popa
cmpsb
sti
lds
stos
inc
hlt
push
pusha
jg
mov
mov
push
shrb
dec
xchg
clc
mov
sbb
loop
inc
add
lods
jbe
xor
xor
add
mov
pop
jmp
adc
fstps
fcoml
jp
out
leave
addr16
add
add
int
icebp
sub
mov
test
or
jg
repnz
lods
xor
inc
xchg
inc
pop
std
test
cmpsb
jnp
xchg
stos
repnz
lods
and
das
dec
pop
enter
lds
mov
push
cmp
push
add
out
push
and
adc
cmp
push
xchg
imul
and
add
arpl
mov
fdivrl
negl
dec
cld
std
insb
or
icebp
loop
js
or
mov
jno
daa
imull
jmp
adc
out
push
mov
cmp
mov
fimuls
dec
jne
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
jmp
call
mov
loope
jmp
cmp
add
fmuls
mov
insl
xchg
imul
enter
push
imul
ret
insb
scas
test
mov
push
sbb
cltd
rorl
xchg
fbstp
pop
xlat
fnstenv
cmp
addr16
call
sub
addl
test
dec
sub
test
mov
cltd
cmp
aaa
flds
or
sub
daa
xorb
inc
pop
jle
adc
lcall
ror
aad
sarl
cmc
inc
sbb
into
scas
fiadds
add
inc
movl
movl
jmp
inc
pop
cmp
mov
lret
hlt
insl
fimuls
add
mov
add
push
jae
xchg
movl
in
sub
dec
mov
je
jb
pusha
cmc
ret
stos
iret
fwait
xor
fsubrl
mov
adc
inc
jbe
shrl
inc
lods
sub
iret
test
fisttps
out
imul
mov
xor
push
jno
sub
xchg
out
movzbl
fists
mov
jp
pushf
jns
or
inc
add
test
adc
fisubrs
out
add
push
ja
and
xchg
jnp
scas
lods
js
mov
xchg
and
cmpb
loopne
inc
pop
es
loopne
je
push
cmc
fs
movl
jmp
push
push
gs
ja
jo
fimull
jo
mov
add
add
leave
push
sahf
mov
stos
testb
or
stos
sub
cmpsl
hlt
xchg
xchg
dec
clc
lcall
inc
xor
insl
xor
pop
xchg
hlt
sub
pop
mov
cmp
nop
push
mov
in
std
inc
addr16
notb
sub
stos
mov
cmp
inc
push
mov
mov
stos
lods
icebp
test
imul
push
cltd
ret
ds
dec
inc
add
xor
or
int
add
mov
iret
pop
daa
in
jecxz
in
push
pusha
add
inc
mov
ja
cs
push
lret
pop
icebp
xchg
mov
jmp
loopne
iret
or
jmp
aas
mov
stos
out
jg
inc
into
push
in
aas
add
mov
add
movsl
test
hlt
shrl
in
or
scas
push
stc
sbb
out
mov
cmp
pop
inc
lsl
mov
es
mov
mov
mov
xchg
test
out
jae
jns
cmp
stos
jg
xor
or
dec
int3
lods
xor
lods
sahf
leave
xor
and
sub
pop
faddl
out
cmp
mov
or
lahf
xchg
pop
cmc
in
hlt
cmp
xchg
ja
mov
imul
or
les
repnz
dec
pop
les
inc
test
lahf
fisubl
cmp
mov
and
movw
add
movl
movl
movl
jmp
inc
call
xlat
ljmp
push
mov
mov
add
push
aam
push
push
jb
inc
jbe
inc
push
xor
mov
sbb
test
pop
pop
das
stos
fucomip
jg
and
jbe
mov
lock
hlt
andl
aam
or
out
pop
xor
xor
sbb
fsubrs
jg
push
cmpsl
cli
loope
out
aaa
in
fisubrl
lods
xchg
push
xchg
negl
repnz
dec
mov
xchg
xchg
or
loop
jle
insb
pushf
cmpb
hlt
imul
xchg
xchg
imull
out
test
xchg
mov
hlt
or
adc
mov
movl
movl
jmp
fs
jl
push
push
mov
into
inc
add
mov
add
out
inc
inc
aaa
xchg
loopne
test
and
mov
adc
aas
pop
sbbb
popf
adc
or
xchg
pop
dec
mov
push
aaa
icebp
jg
sbb
ret
pusha
inc
movsl
push
in
jne
aad
dec
inc
sbb
push
out
or
jns
jp
inc
call
aas
idivb
lds
mov
xor
add
pop
sti
repnz
jae
int
in
int3
fs
mov
mov
and
lock
cltd
inc
lods
sub
xlat
sbb
into
mov
movsb
and
test
sub
shrl
aam
jg
add
inc
fcomps
add
mov
mov
imul
sub
mov
jmp
xor
jg
cmpsb
and
lahf
jg
add
mov
add
push
xor
pop
ret
sti
enter
push
cmp
stos
mov
clc
mov
inc
into
aad
test
push
mov
mov
enter
mov
pop
movsb
mov
xor
je
leave
add
out
out
inc
mov
popf
xor
sbb
sub
lods
push
add
and
cmp
xor
mov
cmp
mov
ret
orb
fistl
test
jmp
cmp
daa
mov
lds
dec
jb
xchg
xchg
int3
and
xchg
mov
mov
jle
std
dec
push
adc
or
add
fdivrp
mov
mov
jmp
mov
fbld
imul
add
mov
add
test
fimuls
cltd
aad
adc
roll
mov
and
and
xor
ret
sub
mov
cmc
and
fildll
bound
hlt
push
enter
jecxz
aas
dec
sbb
aad
lahf
inc
jnp
pop
ret
std
cmp
dec
enterw
cmp
jno
ja
hlt
jno
inc
or
xchg
push
lret
js
mov
lahf
add
sahf
dec
aad
or
test
enter
mov
xlat
or
pop
mov
mov
sbb
sub
dec
inc
mov
pop
cs
and
fisubrs
sti
push
add
xor
xor
div
mov
sub
cmp
jmp
inc
shll
out
outsl
leave
js
std
jo
das
add
add
pop
add
adc
add
xchg
mov
xor
negl
or
push
inc
xchg
int3
lea
sub
mov
pop
andb
ljmp
inc
arpl
stc
or
lahf
mov
insb
sbb
mov
xlat
aam
mov
mov
push
mov
cmpsl
dec
xor
lock
xchg
jb
out
sub
pop
cld
mov
push
or
push
mov
jg
iret
in
imul
lcall
sub
dec
std
pop
cwtl
add
jg
out
cli
call
cmc
mov
adc
xor
add
or
cmp
test
add
jmp
out
clc
outsl
inc
jg
out
clc
rcll
pop
mov
mov
add
adc
das
xchg
stos
stos
jge
add
lods
and
push
cmp
push
mov
jno
sbb
pslld
pusha
jl
pop
cmp
pop
jge
inc
fidivs
addl
jle
or
les
scas
mov
jae
in
imulb
pop
lods
push
scas
fisubrl
xchg
int
mov
adc
cltd
cmp
sbbb
pop
bound
dec
test
out
inc
jnp
pop
adc
stos
outsl
mov
add
out
push
ss
pop
jmp
mov
mov
pop
stos
dec
inc
pop
xchg
jp
shlb
pop
clc
sub
pusha
mov
int
mov
pop
inc
pushf
mov
mov
imul
and
mov
mov
mov
imul
jmp
inc
fists
fcmovu
cld
ret
jnp
mov
inc
inc
add
mov
add
fiaddl
xlat
jbe
push
xchg
xchg
inc
lea
ds
jae
sbb
fisubrs
fnstenv
xchg
adc
pop
push
dec
int
and
call
mov
and
xchg
popa
inc
sbb
rep
mulb
mov
jb
lods
mov
test
jnp
sbb
popa
jb
sbb
xchg
xchg
ret
xchg
sbb
lahf
cmp
hlt
jns
test
or
subb
mov
addl
push
xor
and
sahf
adc
jecxz
jb
je
push
pop
and
pop
cmp
cmp
sub
mov
and
mov
jmp
cmpsb
ret
idiv
out
ffreep
into
push
ret
mov
inc
add
mov
add
jle
test
test
pop
xor
out
leave
in
mov
outsl
ret
cltd
mov
rclb
jnp
inc
call
in
sbb
pop
sti
ljmp
inc
ret
push
add
loopne
insb
addb
imul
jns
xchg
insl
jp
test
mov
mov
xchg
dec
mov
insb
sub
and
inc
pusha
xchg
push
cwtl
mov
clc
push
stos
fistps
lea
enter
popf
dec
adc
jne
xor
je
and
push
fcmovnu
or
or
iret
xchg
jno
inc
adc
iret
test
aad
mov
xor
jmp
adc
adc
adc
fstp
xlat
subl
inc
add
mov
add
in
nop
js
push
shrb
mov
mov
fwait
into
aas
shll
inc
repz
daa
sbbl
cltd
jne
out
adc
loopne
fwait
sbb
jno
cmpb
and
cmpb
xor
mov
mov
popf
fiadds
dec
jge
adc
xchg
loope
cmp
sti
mov
cmp
leave
cs
stc
jge
cld
xor
inc
cmp
aam
es
xchg
out
mov
aaa
fucomp
xor
add
daa
xchg
loopne
cli
insl
pop
pop
out
mov
mov
insl
pop
mov
pop
inc
sbb
jecxz
dec
adc
imul
push
or
xor
mov
mov
jmp
sti
dec
out
inc
jmp
sti
ljmp
and
inc
add
mov
add
mov
loop
cs
les
std
sbb
scas
xchg
cmp
cmp
insl
fdiv
add
mov
jae
mov
mov
cltd
lcall
cmp
mov
loop
cmpsl
addb
aad
test
jb
and
sub
xchg
jno
add
rolb
xor
push
xor
lcall
cmpl
fadds
push
mov
or
lahf
xorl
dec
hlt
cmp
mov
and
mov
lock
dec
lcall
lds
mov
pop
sub
mov
jmp
jp
pusha
scas
stc
scas
push
lods
sbb
imul
add
add
outsb
xchg
into
mov
cmpsl
cmpsl
and
and
pushf
mov
dec
cmp
insb
int3
cmpsb
xor
gs
arpl
imul
fadds
adc
out
pop
lret
ret
dec
std
or
cmp
out
js
das
idiv
arpl
mov
sub
sub
jnp
out
jns
lcall
adcl
or
mov
aas
lret
xor
mov
mov
mov
xor
xchg
xchg
push
in
sbb
lock
into
sub
ljmp
addr16
add
jmp
out
cwtl
mov
or
and
inc
add
mov
add
xchg
fidivrl
adc
jmp
add
enter
mov
add
aas
js
cwtl
in
mov
ret
or
movsb
sbb
mov
ss
jne
adc
popa
add
xor
lahf
and
scas
sbb
xor
subl
mov
fldl
sbb
mov
iret
out
icebp
jbe
or
push
jg
xor
and
adc
mov
inc
cli
cmp
push
sbb
outsl
pop
pop
mov
jb
push
sub
mov
cmp
mov
sbb
jecxz
fsubrl
dec
test
jle
es
sub
jo
enter
mov
mov
add
jmp
sub
js
std
das
ljmp
int3
add
mov
mov
dec
add
mov
add
rcrb
dec
les
mov
mov
inc
test
jae
xchg
mov
or
mov
push
or
into
add
repnz
xchg
push
or
fwait
aas
test
rclb
popa
xchg
rclb
mov
es
sbb
xchg
sbb
arpl
out
mov
jmp
lea
jno
push
adc
inc
mov
mov
nop
icebp
sahf
jmp
mov
sti
inc
mov
jne
mov
or
cs
les
subb
xor
add
mov
mov
loope
sbb
leave
addb
cmp
jle
add
leave
add
add
fstp
and
mov
sbb
add
mov
fcompl
dec
push
aas
iret
ljmp
mov
xorb
jmp
adc
cltd
ret
out
fs
and
sbb
pop
xchg
pusha
inc
sub
jns
adc
add
stos
sub
push
or
je
ret
in
pop
cwtl
mov
adc
dec
jl
mov
imul
and
mov
not
adc
add
push
pop
ss
jb
jbe
jle
imul
sub
rep
js
sub
pop
stos
pop
movsbl
data16
aas
dec
mov
int
sbb
shlb
add
cmp
je
jmp
xor
lods
jg
dec
or
push
add
mov
add
xchg
push
ss
aam
das
out
add
aaa
xchg
cmp
call
mov
out
xchg
lret
mov
aaa
cmp
iret
fs
push
xchg
xor
ret
xchg
xor
daa
cmc
mov
in
sbb
aaa
mull
xchg
mov
or
adc
cwtl
enter
movsl
sti
aas
adc
push
xchg
insb
cmpl
sbbl
pop
dec
sbb
shll
aaa
inc
jg
push
fs
or
outsl
je
jmp
jmp
dec
xchg
popa
lods
mov
mov
or
das
inc
mov
jmp
mov
mov
sub
mov
jmp
or
in
in
cmc
or
in
or
inc
push
pop
gs
add
mov
add
insb
loopne
push
or
jmp
mov
inc
mov
nop
push
fisubrs
inc
mov
jle
and
mov
add
dec
dec
aam
inc
mov
loope
inc
mov
lahf
add
cli
lods
fldt
mov
pop
adc
push
xchg
int
inc
es
fidivrs
mov
xchg
cwtl
jecxz
outsb
push
xchg
out
push
repnz
jmp
loope
inc
xor
mov
dec
push
bound
pop
gs
subb
and
data16
sub
shrl
jp
mov
into
xchg
lret
sub
in
shrl
icebp
add
add
inc
or
add
add
dec
push
add
add
xor
jmp
and
adc
mull
out
jge
or
cmp
sub
add
add
cltd
or
scas
mov
fldenv
lds
test
cmc
incl
popa
rclb
out
stos
orb
into
xchg
cmp
adc
push
push
xchg
mov
les
xchg
cltd
add
jmp
call
dec
in
repz
mov
mov
sub
ja
dec
fmul
test
hlt
aam
inc
push
xlat
cwtl
lea
xor
je
mov
in
daa
jge
mov
lock
insl
mov
xor
jle
and
daa
lret
mov
enter
sub
mov
div
sub
pop
leave
ret
push
mov
jmp
out
cmpsb
xor
jp
addr16
lahf
fimuls
add
mov
mov
add
push
and
sbb
dec
mov
out
push
sbb
das
fcompl
mov
xchg
xor
push
or
aaa
fcoml
adc
addr16
add
and
insl
lods
stc
mov
pop
ja
arpl
cmp
fldcw
adc
mov
mov
orl
jmp
xchg
cwtl
mov
ret
pop
gs
imul
jb
fistpll
popf
mov
cmc
pop
popa
xchg
jp
add
ret
pop
sub
lea
inc
and
sbb
and
adc
jmp
lock
inc
xchg
out
hlt
jbe
pop
mov
xchg
mov
scas
add
add
xor
in
in
je
mov
sub
mov
movsl
and
fists
jmp
aad
pop
dec
in
mull
insl
daa
insb
push
and
add
jnp
adc
fs
dec
out
pusha
mov
and
loope
rolb
int3
sti
sub
icebp
pop
jo
cmp
or
ffreep
push
iret
lcall
mov
lret
lcall
sbb
push
bound
cmp
push
fwait
mov
jmp
fadds
rcrb
imul
ds
add
lea
adcl
mov
mov
cmpl
ja
sbb
jmp
push
call
mov
jmp
subb
sub
adc
dec
add
scas
add
add
xchg
and
movsb
out
cmp
inc
in
imul
inc
iret
addr16
xchg
punpckldq
jmp
popa
frstor
loop
jno
aam
dec
loop
imul
mov
and
js
rorb
xchg
test
addr16
shll
cli
mov
cli
outsb
push
mov
push
inc
or
add
fcmovb
add
jne
loope
or
jg
nop
mov
in
enter
lret
lea
outsl
inc
ret
in
out
or
mov
jg
push
pop
cmpsb
jmp
mov
jmp
sbb
hlt
xchg
idiv
jnp
push
mov
psubsb
add
das
dec
dec
pop
sahf
cmp
push
mov
mov
popa
cmp
loopne
inc
es
push
mov
and
loope
in
add
xor
in
mov
mov
dec
mov
dec
push
imul
pop
mov
adc
cmp
cmp
data16
pusha
sbb
add
sbb
pusha
fdivr
out
rcrl
jne
adc
out
bnd
pop
sbb
push
mov
jae
stos
shlb
mov
insb
gs
mov
push
fistpll
fldl
insl
add
or
push
add
inc
and
orl
andl
orl
lea
jmp
pusha
mov
inc
jmp
in
inc
andl
dec
add
scas
add
add
imul
pop
inc
inc
into
lret
add
negb
cmpb
pop
pop
mov
lods
out
or
inc
es
gs
int3
lods
aad
test
lret
dec
test
mov
pop
sbb
adc
push
inc
into
daa
mov
andb
mov
jle
jbe
sahf
mov
incb
lock
push
ret
xchg
push
jg
lea
jno
adc
dec
sbb
repnz
stos
add
loopne
inc
in
inc
sbb
dec
mov
movsb
xchg
hlt
out
pop
les
sub
mov
push
or
push
sbbl
lea
push
xorl
jmp
sti
xchg
js
jge
decl
arpl
inc
dec
add
scas
add
add
sbb
ret
inc
das
push
aam
imul
leave
push
pop
loopne
ret
or
push
push
imulb
aas
sub
xchg
arpl
shl
push
stos
adc
or
lret
and
sahf
pop
sbb
sub
clc
into
bound
and
add
mov
ret
in
in
mov
setg
dec
hlt
icebp
mov
cmp
pop
sub
mov
hlt
adc
mov
pusha
sbb
fnstsw
gs
inc
xor
jl
inc
xchg
xchg
adc
insl
ret
cmp
xor
adc
lret
sbb
mov
jmp
iret
inc
jbe
cmp
repz
mov
repnz
add
scas
add
add
insl
or
cli
adc
push
fwait
ljmp
sti
xor
mov
xor
sub
dec
insl
mov
fs
mov
jge
jl
les
notl
mov
fwait
pop
add
outsl
inc
xchg
dec
pop
push
repnz
pop
out
lea
and
sbb
adc
stos
pop
jecxz
xor
adc
push
adc
or
add
add
fisubrl
insb
fsubs
pop
xchg
dec
pushf
inc
rorl
lock
sub
adcb
fildll
inc
mov
into
sbb
xchg
and
fmul
jmp
adc
mov
mov
add
mov
pushl
mov
jmp
lcall
idiv
mov
insl
into
jge
xor
add
add
mov
pop
test
or
or
jecxz
cmp
add
dec
es
pop
test
in
xor
dec
stos
repnz
lods
sbb
sbb
sub
and
or
je
je
out
lea
pop
call
daa
roll
pop
dec
insl
ss
dec
xchg
int
shlb
pop
push
or
jge
xchg
mov
outsl
inc
pop
push
je
mov
hlt
and
not
add
in
jnp
lahf
cmpsl
outsl
clc
mov
jno
pushl
lea
pushl
pushl
pushl
pushl
push
pushl
jmp
lods
push
clc
mov
scas
std
ja
inc
mov
or
scas
add
add
add
mov
or
popf
or
jno
cmc
push
sbb
mov
jp
test
adc
fwait
adc
sbb
mov
mov
in
std
inc
into
iret
push
push
or
mov
or
call
adc
xor
mov
xchg
cmp
test
stos
jns
dec
loope
divb
test
sahf
arpl
andl
sbb
in
repz
push
pusha
pop
ret
ret
dec
loop
loope
push
imul
loop
push
lret
dec
lods
jp
push
cmp
pavgw
pushl
call
pop
mov
pop
ret
push
mov
sub
jmp
mov
or
mov
jo
mov
xor
push
add
scas
add
add
orb
jno
sahf
loope
ret
jg
fcompl
adc
lods
aad
mov
dec
or
out
in
jnp
xor
inc
sti
xchg
mov
add
nop
fxch
movsl
xor
dec
push
inc
into
insl
mov
cli
mov
adc
ja
and
in
pop
and
ficoms
out
xor
pop
rolb
cmp
push
outsl
lcall
jle
daa
cmp
mov
sub
jg
mov
sub
push
adc
inc
sub
aam
xchg
push
js
loop
push
int
arpl
inc
movl
movl
movl
movl
movl
jmp
cmp
jge
sub
pop
std
cmp
add
add
push
pusha
push
mov
daa
mov
push
inc
sbb
das
int3
fstl
sub
stos
insl
mov
and
push
mov
push
scas
out
sub
dec
lods
popa
or
or
xor
jle
mov
dec
jp
into
xor
xchg
mov
sub
sbb
dec
iret
inc
xchg
and
dec
or
or
xchg
dec
divl
stos
cmc
filds
cwtl
popa
sar
sub
test
cmp
clc
out
in
jae
lock
lds
jmp
jno
add
shrb
cltd
and
lods
pop
mov
mov
aaa
int
movl
movl
movl
movl
movl
movl
movl
movl
jmp
or
hlt
into
hlt
iret
cmp
add
or
ret
pop
push
add
scas
add
add
mov
loopne
jb
push
xchg
push
lret
and
dec
test
je
push
or
test
jp
push
stos
jp
mov
js
jmp
in
xchg
cld
fwait
add
xorb
sar
add
pop
stos
rcr
das
and
aas
movsl
mov
push
pop
push
shrb
rclb
cmp
pop
lahf
fldenv
out
mov
in
add
pop
lcall
repnz
lcall
inc
repnz
mov
push
fisubs
movsl
pop
fldcw
inc
leave
test
adc
mov
add
call
mov
add
jmp
adc
mov
fistpll
sbb
sbb
add
push
add
scas
add
add
leave
test
ret
xchg
sbb
xchg
fs
xchg
imul
inc
in
in
les
pop
mov
ss
insb
sbb
das
lret
pop
jl
mov
ficompl
test
jno
scas
test
adc
fldt
or
outsl
inc
push
jge
push
dec
out
add
lret
outsb
movsl
sub
cmc
mov
push
adc
jl
pop
xchg
ljmp
fmull
xor
out
outsb
mov
add
pop
je
aam
nop
shlb
jp
sbb
pusha
sbb
fs
pop
cmp
fmull
sarl
enter
push
push
movl
xor
movl
jmp
pop
divb
mov
sahf
cmpsl
fisttpll
mov
add
add
mov
cmp
fimull
add
cwtl
jmp
cmp
inc
or
test
push
sti
ljmp
rcrl
mov
jecxz
pop
pand
push
push
mov
ds
cwtl
out
aam
xchg
inc
and
sbb
xchg
repz
out
jmp
jbe
std
incl
pop
mov
xlat
inc
lahf
jmp
inc
cmp
decb
scas
in
cmp
sub
add
arpl
xor
add
ficomps
sub
lds
mov
jge
mov
xor
adc
mov
jl
add
inc
hlt
in
add
jmp
push
mov
push
jae
or
addr16
add
scas
add
add
mov
xor
fistpl
es
adc
fcompl
jle
int3
scas
dec
out
scas
nop
mov
xchg
jns
xor
leave
mov
add
and
fisubrs
mov
xorb
add
sub
test
call
arpl
fs
sub
sahf
fldpi
je
xlat
ja
ficomps
jae
push
scas
add
or
mov
es
iret
push
mov
or
dec
mov
pop
sbb
dec
rol
pop
out
sub
adc
mov
cmp
sub
rorb
insl
sbb
cmp
xlat
movl
mov
push
pop
div
mov
mov
or
mov
mov
and
xor
div
mov
mov
sub
xor
mov
jmp
mov
mov
int
mov
aas
push
push
add
scas
add
add
les
les
enter
push
mov
cmp
test
jns
rcrb
cmp
in
and
imul
hlt
mov
xchg
adc
sub
addl
ret
jb
sub
std
inc
pop
pushf
sarb
sbb
push
push
jnp
sbb
push
add
jb
mov
pop
ror
cmp
pushf
outsl
xchg
push
mov
fisttpl
cwtl
imul
movsb
and
ja
stos
add
or
inc
mov
faddp
jp
push
cwtl
ss
fildll
adc
leave
in
and
xor
sarb
rorb
cld
mov
mov
jmp
and
jmp
pop
mov
test
push
add
scas
add
add
jle
dec
xchg
fadd
int3
push
notl
sbb
js
movb
inc
sub
and
in
or
push
pusha
sbb
stos
jne
dec
mov
sbb
sahf
leave
inc
pop
enter
sbb
xor
out
aad
sbb
loopne
in
xor
mov
sbb
jo
out
push
subb
enter
push
inc
enter
jmp
jo
cmp
inc
pop
mov
jecxz
lods
shr
andnps
aad
push
andb
xchg
mov
mov
stos
push
cmp
ljmp
jmp
adc
jae
ja
ja
pop
sbb
mov
je
add
scas
add
add
mov
aas
adc
fwait
jnp
gs
arpl
mov
cwtl
je
xor
int3
in
lea
push
sub
push
addr16
lret
mov
sti
mov
sub
fsubrs
cld
nop
jle
scas
jecxz
sub
mov
pop
aad
inc
leave
jle
sahf
call
lea
mov
mov
add
mov
mov
sbb
xor
jg
ljmp
in
push
and
lods
vmovss
push
es
xchg
push
mov
xlat
fcompp
jge
pop
inc
mov
dec
outsb
cld
imul
mov
inc
call
add
loop
fs
hlt
ds
in
scas
push
bsf
insl
and
add
icebp
test
js
xchg
repnz
jecxz
jb
fisttps
jmp
jp
pop
xchg
jge
or
psubusw
and
mov
push
loope
inc
push
inc
shl
cmp
sbbl
xor
test
bound
aam
push
jb
nop
xchg
adc
std
stc
mov
je
popa
dec
push
dec
bound
mov
adcl
dec
sub
jne
ficoml
arpl
sub
sub
push
dec
dec
fisubl
lret
test
das
jo
push
js
fdivl
mov
scas
add
mov
sub
mov
imul
jmp
out
int
out
pop
idivl
in
jns
jo
pop
add
scas
add
add
or
and
scas
ret
inc
add
push
clc
stc
idiv
mov
aad
cli
mov
adc
repnz
sbb
push
sub
sahf
pop
dec
xor
jl
outsl
fmuls
sub
shll
insl
loope
pusha
add
cltd
int3
xchg
test
pop
out
mov
xchg
sbb
pop
or
fcmovbe
stos
stc
test
outsb
add
sti
jbe
cmpsl
loop
jmp
notl
xor
inc
mov
jae
negb
adc
cmp
jb
jl
sub
or
or
sbb
imul
xor
jmp
jecxz
out
out
xchg
ja
fidivl
pop
add
sbbl
add
movsl
mov
mov
pushf
jns
shl
movsl
cmp
cld
dec
sahf
adc
inc
mov
mov
out
out
and
fisubrs
inc
fxtract
pop
in
rcll
add
inc
mov
and
bound
sbb
cltd
cmp
xor
nop
jp
out
add
fs
aaa
mov
dec
xchg
fisubs
sbb
lret
lahf
xchg
popa
push
jg
xchg
test
jle
ljmp
nop
and
jmp
outsl
ret
cmpsl
add
imul
fwait
pop
jae
fs
into
cmc
daa
jnp
jbe
pop
fsubrl
sbb
push
fmull
add
add
jp
jmp
jg
jg
xor
and
mov
scas
add
add
movsl
call
int3
clc
mov
mov
sarb
sbb
scas
mov
incb
sbb
ss
sbb
test
add
jnp
add
into
loop
dec
pushl
push
adc
xor
mov
int3
sub
cs
or
ret
or
push
xor
jae
pop
out
dec
xor
or
sbb
mov
cmp
push
ret
pop
mov
orl
iret
sbb
iret
mov
imul
mov
sbb
lcall
push
adc
mov
int3
sbb
aas
xchg
or
adc
call
repnz
insb
push
xor
jmp
inc
stc
ss
incl
les
cmp
push
adc
pop
add
scas
add
add
and
mov
loop
lock
xchg
in
xor
mov
inc
adc
inc
dec
lea
fistpl
mov
sbb
ja
aas
movsl
xor
xlat
sti
sbb
fsubr
outsb
out
scas
rol
sub
pop
mov
mov
shrl
push
shlb
push
cmp
jl
jbe
cs
jb
sub
pop
and
daa
addr16
inc
pusha
and
test
mov
sub
push
cld
addr16
mov
cld
inc
insb
push
shlb
lock
pop
add
daa
xchg
cwtl
pop
mov
add
mov
shr
or
mov
imul
xor
jmp
jmp
adc
pushf
ja
decl
sub
cmp
mov
scas
add
add
inc
addr16
and
pop
test
sub
cld
movl
cmp
push
dec
mov
add
in
sbb
dec
sbb
cmp
sub
mov
sbb
push
add
test
mov
cwtl
xchg
clc
ljmp
cmp
adc
lahf
jns
jne
stos
adc
cmpsl
adc
mov
imull
popa
xchg
xchg
sub
mov
rorb
dec
jo
mov
mov
ret
jg
cld
adcb
stc
push
out
int3
mov
div
jmp
adc
dec
jo
jle
addr16
dec
mov
mov
pop
add
scas
add
add
mov
push
ljmp
movsb
sbb
std
jecxz
or
fidivl
mov
insl
push
je
lahf
xchg
lods
ljmp
cltd
movsl
sbb
lcall
loopne
movsl
sbb
sub
jb
popa
push
add
pop
hlt
out
enter
xchg
cmp
je
jle
cmp
imul
stos
pop
in
xor
pop
mov
scas
es
insb
nop
arpl
bound
sbb
xchg
in
xor
fistpll
rclb
push
push
cmp
sahf
pop
jmp
mov
adc
out
cmc
mov
jmp
mov
mov
mov
xchg
jp
dec
in
pop
add
scas
add
add
das
js
and
dec
and
bnd
mov
imul
scas
jmp
inc
pop
lods
orl
ret
adc
aad
cmp
cs
fsub
lcall
ror
push
loopne
orl
mov
push
shlb
sbb
into
pushf
imul
arpl
es
cmp
xchg
pop
sti
and
sbb
lock
in
xchg
cltd
cmp
mov
pop
push
rorb
aaa
std
mov
cmp
mov
loopne
cli
movsb
repnz
pop
bnd
mov
mov
adc
xor
sub
mov
sub
jmp
data16
xchg
fstpl
cmpsl
xlat
add
pop
add
scas
add
add
enter
jge
outsb
shrb
push
call
mov
sub
mov
in
xchg
xchg
sar
mov
lds
ret
outsl
push
dec
push
or
inc
rcl
cmc
adcb
popa
jnp
pushf
push
in
and
jnp
or
movsb
jnp
or
ja
mov
out
jb
xchg
jnp
das
ds
sbb
pop
xchg
mov
ljmp
setge
ror
adc
or
ret
movsb
aad
sub
sub
mov
out
fidivl
push
scas
inc
cmc
dec
insb
test
int
mov
imul
div
mov
add
lea
jmp
xor
divb
divb
xor
lret
adc
add
in
dec
cmpsl
sub
pop
inc
pushf
dec
cmpsb
add
dec
mov
aam
xor
data16
and
cld
dec
sahf
aam
ss
mov
and
inc
daa
dec
or
sarb
scas
mov
pop
cmp
subl
xchg
push
ficoms
fidivl
mov
shlb
mov
mov
mov
in
add
push
jge
inc
dec
sub
out
cld
xchg
xor
jb
pushf
push
inc
sub
mov
out
popf
scas
in
mov
pusha
hlt
adc
push
out
sub
cli
cmpb
add
add
or
cmp
in
div
xchg
cltd
cmp
mov
add
pop
pushf
jmp
imul
dec
scas
mov
out
xchg
inc
jmp
adc
pop
mov
ret
mov
imul
jp
stos
jns
sub
stos
or
sbb
loope
jl
sbb
test
movsl
and
aaa
imul
jnp
addr16
cmp
ljmp
je
mov
leave
nop
xchg
test
lods
lret
jns
mov
inc
xchg
mov
sub
rorb
jne
lret
mov
outsb
jp
movsl
mov
adc
xchg
test
mov
fcmovnu
hlt
fdivs
jne
mov
add
shr
movl
rcrl
jmp
int
test
add
scas
add
add
cltd
mov
fisttpl
jns
push
jae
loope
xchg
mov
mov
les
arpl
xor
mov
ljmp
mov
cmc
sbb
data16
fldcw
iret
xchg
push
inc
add
push
jecxz
cmp
lret
mov
jp
lods
jecxz
mov
mov
or
xchg
mov
pop
in
cmpsl
mov
cld
iret
lods
or
inc
xchg
loopne
dec
pop
aam
jp
mov
add
adc
lret
cmp
pop
hlt
jo
sbb
test
div
insl
xchg
out
nop
add
and
cmp
jbe
jmp
les
rcr
fists
insl
fcoml
push
pusha
add
scas
add
add
inc
push
add
or
call
xor
dec
sub
imul
xchg
ficompl
cmp
into
sbb
emms
pop
aam
dec
pop
subb
dec
inc
add
std
adc
testl
insb
pop
sbb
mov
nop
lock
in
and
ljmp
cmp
lahf
insb
inc
insb
scas
pmuludq
sbb
push
adc
jmp
add
cmp
mov
jmp
pop
lods
inc
sbb
inc
dec
jecxz
loope
mov
add
pop
leave
ret
push
mov
jmp
sar
out
cmp
adc
lret
lahf
push
popa
add
mov
add
call
shlb
cmp
mov
les
shll
fdivrs
mov
jns
popa
push
sub
inc
pusha
mov
mov
adc
or
push
imul
dec
sbb
or
call
movsl
and
mov
movsb
push
mov
lods
rcll
repz
test
xor
rorb
inc
inc
sub
pop
mov
leave
cmp
dec
popa
fldt
enter
in
enter
icebp
ret
out
icebp
das
sub
das
lss
cmc
mov
cmpl
shl
sbb
fmuls
sub
mov
movzwl
adc
mov
mov
subl
push
cmpl
jg
xorl
mov
and
jmp
call
push
jmp
in
cmpl
std
out
repz
fidivs
add
add
cmpsb
jno
test
jecxz
ret
dec
and
jae
repz
mov
out
enter
das
or
sbbl
pop
arpl
inc
enter
lahf
sti
gs
inc
adc
inc
cwtl
cli
dec
cs
test
sub
das
add
mov
or
data16
cltd
dec
outsb
test
push
or
add
xchg
add
inc
inc
mov
arpl
ret
push
cmc
sub
or
cld
cmp
and
xchg
scas
mov
mov
insl
fidivrs
adc
cs
test
lcall
leave
add
add
sarl
dec
mov
add
mov
add
jo
adc
push
pop
cli
or
lahf
xchg
lods
decl
dec
fiadds
mov
inc
jge
arpl
movsb
push
pop
andl
imul
push
xor
addl
arpl
mov
xchg
popa
xchg
mov
movsb
ljmp
push
mov
jg
inc
dec
in
aad
lods
ja
add
lret
mov
std
decb
ds
pop
jmp
invd
mov
mov
pop
sub
xchg
fstps
in
sbb
mov
out
xchg
repz
call
mov
mov
aad
sbb
aad
stos
mov
or
xor
push
mov
and
sub
not
mov
jmp
ficoml
push
add
xchg
aaa
sbb
add
js
xor
test
insb
or
cmp
cmc
sarl
mov
mov
inc
sbb
cltd
sub
xchg
mov
nop
mov
inc
sub
test
into
test
or
sbb
in
sahf
scas
inc
xchg
shlb
pusha
lret
ret
jle
ret
cmp
or
ss
add
and
lahf
mov
jb
xor
cmp
cmp
pop
adc
movsl
lods
add
sbb
adc
and
and
sarb
sbb
sbb
and
lds
adc
push
dec
xor
or
sbb
inc
or
fisttpl
insb
xor
add
xor
sub
sbbl
mov
jmp
or
scas
idiv
push
mov
loope
imul
add
add
and
lock
sbb
mov
and
inc
scas
pusha
mov
jo
cmc
push
fdivl
aad
sbb
and
inc
adc
inc
jle
data16
dec
push
pushf
add
mov
sub
cmc
scas
cmp
js
dec
aam
xor
test
push
push
xchg
push
fsubrs
fmuls
adc
out
lods
mov
pop
sahf
icebp
mov
sub
mov
xor
in
popf
in
das
jmp
mov
or
outsl
pop
hlt
pop
fcom
jo
sbb
enter
pop
insl
pop
jmp
movsb
lock
xor
inc
add
shr
add
add
and
out
mov
movb
jnp
add
mov
add
xor
sub
pop
in
jle
pop
or
cli
push
cmp
or
jmp
das
sbb
stos
xchg
sahf
dec
ret
lcall
dec
out
lods
mov
mov
xchg
jae
fwait
imul
insl
fiaddl
sbbl
test
jp
cmc
push
cmp
test
repz
out
fsubs
mov
mov
arpl
jae
imul
push
out
push
pushf
mov
cmp
cwtl
adc
mov
les
je
call
inc
ss
xor
adc
sbb
call
sub
loope
popf
mov
inc
add
or
mov
mov
mov
adc
xor
orl
add
jmp
and
mov
imul
add
mov
add
stos
pop
loop
jne
xor
sub
mov
push
jno
sbb
adc
mov
mov
push
cltd
or
pop
fstpl
mov
mov
lock
adc
mov
pop
cmp
and
cmp
shrl
pop
xlat
sub
lahf
iret
sbb
int
sti
mov
pop
fcomp
jmp
cmp
xchg
mov
sub
aas
dec
xchg
or
push
fwait
jb
test
adc
push
ficomps
hlt
stos
insb
insb
or
xor
dec
xor
in
mov
lret
leave
mov
and
mov
xor
cmpl
jle
or
jmp
pushl
call
mov
mov
mov
xor
jmp
shlb
mov
sbb
or
frstor
add
xor
push
aad
jne
pop
lea
pop
jp
adc
sbb
ficoms
lret
sub
sub
fmul
jae
push
iret
push
ljmp
jne
xor
shl
fwait
mov
sbb
cmp
lret
pop
sub
cmp
icebp
add
mov
sub
dec
les
inc
mov
add
in
xor
jae
arpl
dec
sahf
mov
cmpsl
dec
mov
les
dec
and
sbb
cli
dec
push
in
test
cltd
push
rcrb
int
pop
test
fldl
or
inc
loopne
stc
popa
into
mov
movl
jmp
enter
mov
out
push
pop
xchg
mov
add
jmp
sub
aad
dec
int
sbb
pop
and
xor
xchg
outsb
fdivrp
jge
xor
adc
jne
inc
out
das
mov
add
std
daa
daa
pop
mov
and
arpl
push
dec
mov
xlat
adc
jns
mov
add
into
outsb
pop
pop
add
xchg
pop
sbb
pusha
xor
xchg
repz
jne
xor
popa
xor
mov
stc
js
test
jecxz
cmp
out
sbb
push
cvtdq2ps
push
mov
dec
jmp
dec
sarb
add
sbb
repz
enter
sub
jmp
mov
mov
cmp
movl
jne
movzwl
mov
cmp
je
mov
incl
jmp
mov
or
fimull
pop
sbb
mov
add
movsl
mov
jecxz
mov
push
sub
inc
jae
aam
aam
sub
adc
fimull
orb
inc
xor
stc
aam
inc
stos
out
mov
shrl
push
mov
xor
pushf
mov
movsl
mov
ljmp
push
xor
fnstcw
cmp
sarl
push
daa
hlt
test
icebp
lcall
add
sub
pop
es
fildll
out
mov
jge
sub
mov
adc
lds
jmp
test
ret
loop
dec
fstpl
shr
leave
add
add
pop
pop
insl
mov
ljmp
push
mov
lock
mov
add
mov
lret
xlat
xchg
cli
mov
iret
jle
sub
cmp
arpl
xlat
cltd
cmpsl
push
mov
mov
stos
sar
stc
out
sbb
jae
xor
sti
fisubrs
jmp
inc
pusha
outsb
add
inc
pop
jecxz
push
xchg
adc
test
and
nop
scas
and
dec
cmp
in
out
test
sbb
cmp
mov
xor
fimull
cltd
lock
cmpsl
mov
jp
xchg
ficoml
mov
mov
pop
push
mov
les
push
add
movl
adc
xorl
jmp
je
adc
out
mov
jns
mov
add
add
clc
sbb
adc
sub
push
data16
add
add
loop
es
jmp
bound
xchg
leave
mov
in
loope
popf
cmpsb
out
test
clc
or
adcb
lock
add
mov
repnz
scas
cmp
jbe
xchg
fldl
or
mov
jo
testl
mov
pop
adcb
xchg
movsl
pop
ja
rclb
arpl
push
loop
inc
jge
mov
adc
and
idivb
orl
arpl
push
lods
mov
mov
sbb
xor
adc
jmp
mov
mov
lret
fidivrs
bound
push
imul
add
pop
xor
mov
fbld
sbb
dec
add
mov
out
pop
jmp
and
es
loopne
in
fisttpl
std
pop
or
test
popa
and
fdivs
mov
sbb
filds
cmpl
mov
dec
inc
minps
cmpsb
dec
sbb
push
or
fwait
cmpsb
jno
xor
adc
loop
lcall
mov
mov
or
mov
fs
mov
dec
div
cmp
push
sub
mov
js
cmp
mov
xchg
mov
cmp
iret
sahf
mov
andl
mov
or
jmp
xchg
or
aas
adc
jnp
xlat
add
add
stos
jge
ret
mov
arpl
push
imul
xchg
inc
sbb
jmp
lods
add
cwtl
arpl
add
cmp
int
lock
pusha
lock
or
je
mov
jl
cli
mov
jne
ss
jle
cmp
das
aas
ds
pop
jb
cmp
aad
mov
xchg
cmpsl
mov
icebp
xchg
xor
repz
xlat
insl
loope
mov
add
jge
test
sub
sbb
add
xchg
pushf
xchg
mov
pop
in
push
jecxz
out
pop
sub
and
xchg
stos
repnz
push
xchg
or
add
iret
inc
add
xor
movl
jmp
xchg
sub
jg
in
add
leave
and
jo
push
add
scas
dec
and
mov
aaa
stos
test
imul
out
push
xor
xchg
inc
lds
mov
out
cmp
xchg
testb
jnp
mov
std
mov
cs
jae
cmp
fwait
sbb
loopne
dec
push
add
sahf
data16
repnz
push
lret
call
push
sahf
fstl
xchg
jb
dec
mulb
cmp
push
dec
adc
sub
addr16
orl
repnz
push
add
push
mov
aad
xchg
sbb
movsl
enter
repnz
pop
mov
cmp
add
sub
loope
jae
dec
int3
movl
cmp
movl
jmp
and
sti
aas
cmc
cld
call
mov
mov
add
xor
xor
or
dec
or
sbb
fmuls
sbb
nop
dec
push
popa
sub
icebp
leave
or
sbb
xchg
pop
sub
xor
sbb
mov
inc
add
popa
test
adc
jp
adc
pop
popf
inc
test
dec
bound
dec
addr16
repnz
jge
iret
stc
imul
lock
jp
out
lods
out
ja
dec
addr16
repnz
fwait
mov
inc
cld
clc
roll
sub
sbb
loopne
and
sahf
jo
adc
stos
pop
ss
ret
popa
jle
cmp
pop
std
xchg
hlt
ja
pushf
dec
ja
imul
sbb
add
movl
cmp
movl
je
cmpl
jb
add
jmp
pushl
push
push
push
pushl
call
jmp
arpl
xchg
push
mov
out
hlt
mov
aas
sub
adc
mov
add
mov
loop
js
sti
pop
dec
int3
mov
lcall
dec
or
jns
adc
fidivrs
les
jb
xor
xchg
shll
repz
cltd
scas
jmp
leave
gs
cltd
sbb
xor
sub
mov
jecxz
fnstcw
jb
jno
ja
mov
push
fdivrs
negb
and
icebp
pop
test
mov
xlat
out
or
test
stos
jle
adc
orb
jne
leave
imulb
lcall
mov
and
add
fnstcw
add
loope
inc
in
dec
in
lret
sub
xor
shr
orl
xor
shl
mov
and
or
cmpl
jbe
movzbl
and
jmp
pushl
pushl
pushl
pushl
call
jmp
das
jnp
inc
std
scas
jg
xor
jecxz
sub
insb
add
mov
add
cs
mov
xor
push
sub
imul
dec
or
sti
enter
and
into
lahf
adc
cmp
cmp
enter
dec
sbb
mov
xor
popa
adc
rcll
movsl
jns
inc
mov
iret
bound
repnz
andb
cmc
mov
out
lcall
adc
mov
mov
loopne
jo
pop
xor
push
clc
test
xchg
ret
mov
jbe
in
pop
outsl
add
jg
stos
jno
dec
xlat
repz
outsl
lret
sub
out
shlb
jne
sub
jmp
adc
mov
fsubs
lahf
jne
js
add
mov
add
add
sbb
mov
adc
clc
iret
cmp
mov
mov
ret
arpl
ds
cmp
and
pop
cli
call
push
adc
cs
adc
mulps
cmc
div
dec
cmpsl
notl
lret
lahf
jnp
pop
pop
jge
add
negb
imul
pop
mov
pusha
mov
jge
icebp
nop
mov
fwait
push
dec
xor
push
out
mov
fldenv
nop
dec
ljmp
addr16
cmc
imul
or
stc
ret
jle
or
push
lds
fisttpll
xor
mov
jmp
icebp
rcrb
fcomip
fisttps
jmp
sub
add
mov
push
jno
sub
and
pop
cmpsb
je
mov
into
aas
out
inc
jge
repz
inc
std
mov
adc
repnz
js
pop
and
or
dec
fisttpll
in
pop
repnz
or
inc
rorb
call
les
inc
popf
xchg
test
gs
add
pop
mov
mov
adc
sbb
dec
mov
les
mov
dec
stos
add
xchg
lods
jle
fidivs
std
imul
or
int3
and
cmp
sub
jecxz
dec
jle
scas
and
lret
mov
inc
in
inc
in
leave
add
add
dec
pop
cwtl
pop
gs
lahf
ja
add
fisubrl
add
call
push
sbb
pop
cwtl
out
mov
xchg
adc
dec
in
test
sbb
negb
rolb
or
testb
push
push
icebp
sbb
pop
popa
cmp
xchg
insl
pusha
inc
mov
leave
inc
in
cltd
jecxz
gs
or
dec
idivb
xchg
sub
add
mov
mov
push
sbb
sbb
lahf
mov
sbb
jns
or
jge
pop
mov
mov
push
mov
xor
les
cmp
inc
cmc
push
xchg
mov
ds
inc
pop
int3
dec
imul
lahf
xchg
lret
das
mov
dec
jg
push
pop
movzwl
sub
sub
add
cmpl
ja
movzwl
or
adc
jmp
push
push
call
mov
movl
jmp
add
dec
push
pop
pop
dec
mov
popf
push
sbb
outsl
add
mov
add
iret
push
pop
lods
cld
sub
mov
cmc
outsb
ds
lcall
mov
shll
jno
xchg
dec
dec
sub
mov
lea
aam
dec
jle
or
lods
lea
pop
xor
cwtl
push
lcall
add
sbb
inc
cltd
test
cltd
iret
test
bound
stos
dec
ficompl
xchg
dec
adc
jg
or
pop
push
adc
in
xchg
dec
pop
or
jne
push
fildl
dec
adc
ljmp
movsb
push
shlb
mov
int3
movsb
add
imul
mov
mov
mov
and
mov
jmp
mov
out
xor
fisubrl
mov
add
mov
add
push
jne
xor
mov
orl
sbb
add
cltd
mov
push
xor
insb
dec
jae
outsb
and
sub
pop
setb
popa
es
loope
je
xor
mov
sbbb
in
inc
and
pop
mov
sbb
popf
and
mov
push
out
das
clc
adc
cmpsl
cmc
out
mov
jno
mov
loop
popa
dec
mov
mov
nop
insb
call
cmp
dec
add
xchg
inc
add
inc
cmpsl
shlb
xchg
movsl
jecxz
cmpl
mov
cltd
cmp
imul
mov
pop
ss
add
leave
add
add
lret
cmp
js
cmp
adc
add
mov
mov
hlt
cmp
fwait
aas
loope
test
stc
push
mov
cwtl
orb
into
rclb
fcmovne
cs
and
push
xchg
jl
mov
xchg
pop
xor
push
mov
mov
pop
mov
ja
clc
jno
xor
outsb
and
test
pushf
fldl
or
dec
adc
push
mov
mov
int
and
cld
jo
imul
in
in
and
mov
das
push
jl
popa
fnstcw
outsl
pop
imul
mov
xchg
and
mov
jmp
dec
stos
nop
cmpsl
lock
mov
or
mov
add
mov
aad
pop
lods
jae
arpl
or
js
flds
push
jmp
jno
xor
mov
inc
int3
cmp
and
loope
mov
mov
xchg
xor
xor
mov
cmp
bound
bound
add
lret
orb
mov
sbb
repnz
mov
mov
xchg
fmulp
rol
xchg
divl
orl
stc
sarb
push
in
fisttpll
mov
fwait
dec
sub
std
cld
sub
jmp
sti
scas
sbb
mov
xchg
or
push
mov
mov
add
mov
xor
andl
mov
xor
jmp
pop
sbb
negl
jae
mov
add
popa
sbb
xchg
cmp
dec
fstl
adc
into
or
cli
pop
mov
jb
and
popa
sbb
cwtl
jnp
mov
jle
outsl
xchg
pop
pop
jmp
test
and
cwtl
xor
jns
pushf
mov
inc
inc
pushf
mov
cld
inc
dec
add
sub
push
or
jmp
jg
rorb
in
mov
lea
jae
push
pop
and
sub
mov
jae
cmp
mov
sbb
cmpl
add
jl
mov
xor
cltd
out
xor
iret
sbbb
push
mov
mov
inc
rorb
xor
add
sub
sub
cmpl
jb
neg
jmp
push
push
call
jmp
sub
adc
jp
loope
push
aad
add
add
add
mov
minps
sub
daa
inc
fildl
popf
data16
leave
cmpxchg
dec
jp
fnstenv
jecxz
mov
sbb
jl
push
mov
sysret
inc
or
push
test
adc
mov
incb
dec
mov
add
fistl
adc
pop
xchg
icebp
mov
imul
jge
xchg
dec
push
or
jbe
pop
aam
adc
outsb
pop
cmp
xor
cmp
aam
xchg
dec
sbb
pusha
frstor
push
sbb
js
pop
jg
add
sbb
sub
popl
pop
fiaddl
loop
shr
xor
jmp
int
ret
cli
std
jmp
cmp
addr16
add
mov
add
xchg
ror
push
cmc
mov
xchg
jnp
mov
jmp
cmc
mov
pop
jmp
into
jmp
icebp
mov
adc
adc
sbb
divb
mov
cld
repnz
stc
cmp
repz
pop
mov
enter
mov
addr16
fs
inc
movsl
mov
aaa
aas
loopne
push
pop
add
ficomps
add
mov
add
lret
push
jg
sahf
hlt
in
jbe
mov
push
mov
xor
out
fmull
mov
clc
arpl
lods
mov
shl
or
jmp
pop
scas
and
neg
sti
scas
mov
push
xor
add
mov
add
mov
push
in
sbb
or
enter
pop
sahf
xor
pop
xor
fnstsw
xchg
push
scas
xor
ss
icebp
ret
mov
dec
daa
sbb
aad
insl
adc
aaa
dec
jnp
or
pop
testl
inc
aad
xchg
jbe
push
pop
pushf
and
mov
mov
hlt
cli
repz
mov
inc
sbb
inc
pop
gs
aas
mov
cmp
aad
ljmp
mov
mov
aam
arpl
push
mov
mov
insb
in
xchg
fistl
inc
push
lret
lea
mov
cmpl
jl
jmp
push
call
jmp
repz
pop
out
out
repz
out
xchg
mov
adc
add
add
push
lds
popa
push
cs
push
jbe
pop
sbb
repz
popa
sbb
pushf
jmp
sbb
aaa
mov
cmp
mov
xlat
icebp
fcompl
lret
push
xchg
mov
push
js
push
lods
nop
sub
mov
jnp
pop
das
pop
imul
fdivrl
leave
mov
ds
std
int3
or
fstl
dec
lds
dec
cmp
daa
adc
jbe
aaa
fistl
je
les
pop
ficoml
cmpsl
sbb
push
cld
mov
xchg
lea
arpl
daa
mov
test
les
loope
push
jo
or
mov
jmp
movsb
ret
jle
inc
dec
stos
in
mov
in
jne
add
sbb
clc
stos
popa
mov
addr16
mov
mov
pop
xor
adc
clc
mov
mov
pushf
sub
cmp
rorb
inc
xlat
sub
cmp
jmp
test
xor
xorl
inc
fsubr
adc
mov
cwtl
scas
add
shlb
sti
add
dec
mov
mov
stos
scas
jmp
pushf
pop
repz
pop
adc
fs
push
fwait
push
and
dec
dec
sub
imul
repnz
push
lods
pop
aad
inc
push
mov
scas
lret
shl
jo
push
mov
xor
les
sub
mov
xor
add
adc
jmp
pop
icebp
dec
movsl
out
mov
rorb
test
or
mov
add
push
jle
mov
mov
jl
xor
fdiv
bound
xchg
outsb
sbb
rclb
fisubl
or
jmp
js
loope
pop
dec
shr
daa
mov
jl
fcmovbe
inc
sub
leave
or
mov
mov
outsl
mov
roll
clc
adc
add
or
mov
cmp
rcrl
scas
xchg
sub
xorps
jge
jnp
filds
jle
xchg
sbb
arpl
aad
lods
lret
adc
or
jbe
loop
push
popa
mov
fcoml
ret
int
cmp
add
sbbb
add
lret
adc
jmp
push
pushl
push
call
mov
mov
mov
mov
xor
jmp
lahf
dec
sahf
add
rcrl
ljmp
mov
add
mov
test
adc
pop
shl
push
adc
cmp
xchg
loope
mov
cmp
imul
mov
mov
mov
rclb
push
sar
dec
fs
shlb
push
sub
add
and
sbb
jg
jnp
shlb
cmp
and
xor
adc
cli
jmp
mov
ljmp
dec
shrl
jae
ficoml
add
leave
sub
add
pop
lods
pop
push
inc
icebp
push
dec
ret
xor
inc
sbb
mov
sbb
ret
out
arpl
xchg
and
movb
mov
jmp
lret
ror
lret
rcll
aaa
xchg
filds
xlat
ja
add
mov
pop
fucom
cli
sbb
xchg
xor
cltd
fbld
loopne
mov
dec
js
add
rorb
cs
lret
out
mov
xor
je
divl
lret
fidivrl
in
jns
stos
and
cld
and
mov
bound
dec
pusha
mov
out
les
cmp
jp
xchg
cmpsb
imul
aam
sub
loope
call
enter
and
lds
push
inc
push
sbb
fstl
dec
inc
nop
sub
addl
add
mov
out
rorl
mov
push
adc
jmp
stos
mov
scas
sti
sub
jmp
lahf
mov
add
cmp
rcrb
fstps
xor
sti
mov
icebp
cmp
and
sbb
les
add
xchg
out
jmp
jge
dec
push
push
imul
sahf
or
icebp
cmp
lock
aam
int
mov
push
dec
stos
cwtl
mov
out
cmp
pusha
stos
cmp
jne
or
and
insb
mov
jb
movsl
mov
jno
shll
setg
insl
fildl
push
rolb
rcrb
test
jmp
jmp
data16
jnp
mov
outsb
pop
xor
cmpl
jle
movzbl
and
jmp
pushl
call
add
lea
mov
mov
mov
sub
sub
add
mov
sbbl
sub
addl
jmp
jae
lahf
fistpll
adc
nop
push
add
jns
add
sub
shr
mov
movsb
lea
cmpsb
and
mov
addr16
stc
hlt
negl
test
mov
push
aad
stos
xlat
repnz
sbb
xor
pop
cld
cmp
sbb
sbb
pusha
xchg
in
push
add
add
cmpb
push
stos
sbb
aas
das
dec
call
fdivrl
pop
repnz
out
jno
cmpsl
cmp
adcl
pop
sub
jp
pop
xchg
call
inc
pop
aad
push
dec
imul
idivl
cmp
leave
sbb
mov
stos
xchg
leave
cli
xorb
icebp
add
loop
andl
shl
jmp
cmpl
mov
test
add
mov
add
sarb
mov
daa
push
cmp
in
cwtl
push
mov
cwtl
lods
add
sti
ret
addl
xchg
mov
sub
add
les
and
js
ret
sbb
push
aas
imul
cwtl
ret
and
push
mov
pop
cwtl
jns
mov
ret
cmp
push
dec
push
or
push
mov
loop
imul
jmp
testb
push
out
outsb
add
jbe
lock
mov
jecxz
es
xchg
jnp
pop
fcomps
mov
cmpsl
arpl
loop
shr
or
movl
sub
xorl
jmp
xchg
lcall
cmp
fistps
push
dec
cmp
add
mov
add
sbb
adc
fbstp
xchg
and
jno
test
or
push
idivb
ds
pop
mov
xchg
adc
aas
call
xchg
mov
ds
arpl
pop
daa
xchg
loop
cld
and
sbb
mov
call
push
stos
pop
arpl
or
out
sarl
into
outsb
cmpb
or
mov
jns
pop
clc
gs
cltd
push
cmp
lcall
sbb
xchg
or
hlt
int
adc
ret
test
sub
adc
int
loopne
leave
dec
divb
jo
jmp
or
cmp
cmp
into
testl
jnp
add
add
aas
cmp
pop
xchg
cmp
lock
dec
cmpsl
and
outsb
mov
sub
enter
push
inc
and
into
int
sahf
push
popa
pop
inc
inc
fidivrs
push
jle
push
mov
push
pusha
jnp
adc
mov
aaa
mov
or
xlat
adc
in
mov
jmp
decl
pop
push
add
repnz
loopne
pop
sbb
pop
xchg
jp
imul
xor
xor
or
popf
or
push
movsb
cmpsb
fimull
movsl
adc
jle
xor
adc
enter
imul
sar
cmc
addr16
movsl
jmp
cmp
in
ss
add
ss
add
leave
add
add
jo
inc
ljmp
imul
jnp
add
push
xchg
jne
pop
xlat
xchg
sbb
mov
xchg
aas
jo
sarl
ffree
test
mov
lods
dec
mov
or
sub
data16
pop
outsl
outsl
sbbb
int3
dec
mov
xor
xchg
movsl
push
sbb
lea
jle
leave
mov
mov
pop
cmpsl
pop
mov
dec
push
adcb
aas
setp
cmp
test
xor
push
mov
lret
in
dec
jle
mov
push
jno
or
in
testl
js
imulb
int3
inc
stos
jge
dec
addr16
xor
lret
daa
dec
rcrb
pushf
mov
xorl
mov
xor
or
sbb
mov
andl
xor
jmp
inc
pop
movsb
xor
mov
add
scas
jl
add
cmp
fadd
jle,pt
lods
jns
adc
cmp
ljmp
daa
data16
shll
daa
xchg
jle
lods
dec
jmp
cld
push
pop
push
pusha
or
cmp
lret
pop
loopne
jns
shrb
sti
test
fs
mov
movsb
sub
adc
es
pusha
popa
fucomp
or
aaa
lods
xlat
cmpsb
shrb
iret
mov
jecxz
fisttpl
leave
test
pushf
mov
fldenv
mov
push
cmp
negl
jp
in
jae
insb
xor
leave
xor
fstps
setge
out
int
mov
loopne
mov
mov
leave
add
add
stc
push
ficompl
call
lahf
cld
sbb
add
mov
add
xor
bound
cmpsl
add
and
enter
scas
and
xchg
aaa
sub
xor
clc
mov
pop
enter
adcl
lods
jae
cmp
xchg
xor
int3
mov
push
lea
adc
cmp
dec
roll
pop
pop
ds
push
ds
insb
push
push
fsubr
cmp
adc
mov
pushf
adc
cmp
out
sbb
divb
loopne
xor
flds
iret
test
stos
sahf
or
out
push
lock
test
movsb
or
mov
lods
insb
test
add
rcll
aam
inc
add
xor
andl
pushl
subl
jmp
sbb
cmp
icebp
inc
or
es
sbb
jle
add
cmp
mov
mov
or
pop
push
inc
cmp
adc
shl
inc
and
adc
xchg
sub
loopne
test
mov
xor
inc
std
iret
scas
lahf
mov
notb
divb
adc
inc
test
test
push
cmp
std
dec
pop
pop
arpl
ljmp
push
push
leave
rcll
es
sub
and
sti
sbb
lcall
mov
inc
xchg
xchg
loopne
flds
push
add
fcoms
and
push
icebp
mov
leave
jg
lret
leave
les
mov
dec
dec
xchg
jno
or
xchg
movsl
call
adc
mov
cmpl
jb
jmp
push
push
call
mov
mov
jmp
insl
shrb
mov
pop
pop
mov
jle
add
mov
and
outsl
repnz
mov
into
mov
mov
or
enter
shrl
out
push
jb
mov
lcall
jl
adc
movsb
jmp
aas
sbb
sub
mov
shl
cmp
xorb
jmp
add
xor
dec
test
pop
jecxz
cmp
fcoml
lret
or
mov
or
mov
cwtl
in
scas
push
add
dec
test
mov
enter
push
mov
push
mov
fisubl
xlat
push
loopne
loope
mov
imulb
push
add
push
dec
jmp
xor
mov
xor
add
mov
jmp
call
out
cs
inc
ror
mov
mov
jg
add
xchg
fwait
add
into
add
push
mov
pop
xor
push
movsl
xchg
movsb
das
mov
sar
xor
lahf
xor
out
jbe
xchg
fidivl
lcall
lea
push
add
fnstsw
test
jo
test
and
inc
mov
addr16
idivl
mov
push
and
inc
rcrl
jo
and
mov
add
ret
fwait
popa
or
cmp
ljmp
iret
sbb
cs
loope
addr16
inc
adc
test
sti
cli
sub
pop
adc
shl
jmp
sub
adc
jl
cmp
push
ret
and
add
sub
fs
cmp
ljmp
scas
push
adc
loope
pop
nop
push
lahf
mov
in
mov
in
popf
jecxz
mov
fdivs
std
xchg
into
in
outsb
cltd
jae
in
dec
std
les
shufps
loop
bound
cmpsl
mov
sahf
mov
cmpsb
ljmp
pop
out
or
loopne
xchg
sahf
mov
int
fimull
test
stos
das
sbb
inc
dec
dec
and
inc
mov
lcall
adc
push
in
mov
pop
jle,pn
pop
or
lock
inc
mov
xor
mov
sub
sbb
movb
push
jne
cmp
leave
add
add
mov
pop
iret
xlat
lcall
and
mov
add
pop
sti
xor
mov
test
int
fidivrl
scas
mov
insl
jo
cmc
rcrb
gs
pop
sbb
jg
mov
int3
push
mov
movsl
data16
cmc
out
scas
out
loope
test
sbb
inc
je
jbe
inc
jmp
push
jp
xor
popa
sub
sbb
cli
hlt
pusha
in
out
jo
ret
stc
scas
cmp
cmp
hlt
sbb
fbld
push
jnp
xlat
or
mull
and
lods
jne
mov
xchg
icebp
push
mov
jl
cmpb
mov
push
shr
xorl
or
xor
addl
add
movl
jmp
xchg
in
addr16
mov
dec
leave
repz
mov
add
sbb
addr16
cwtl
cmc
ret
imul
jnp
pop
adc
popa
mov
call
mov
mov
pop
xchg
aam
sbb
jno
mov
aaa
mulb
jno
xchg
xor
enter
in
dec
mov
xchg
mov
test
xor
fsubrs
push
jg
push
jnp
es
lahf
jg
mov
push
cmc
scas
sub
mov
xorb
push
jo
cmp
sahf
xchg
xor
pop
cmp
add
pop
sti
pop
scas
adc
int3
xchg
mov
nop
movsl
sub
inc
dec
movl
jmp
lahf
sbb
jnp
jbe
fisubl
add
lahf
addb
mov
add
cmp
leave
cmp
ljmp
lds
fidivl
cld
test
mov
enter
repz
lods
jge
pushf
fdivl
rcrl
popf
xchg
sub
and
sbb
mov
jmp
cwtl
cmpsl
push
xor
in
mov
int3
push
cmp
sub
insb
mov
mov
sahf
sbb
shrb
push
add
and
mov
fstl
aas
mov
sbb
sub
fwait
ret
cmp
dec
outsb
lods
enter
cmpsb
jmp
adc
rcll
in
addb
outsl
push
and
repnz
cs
je
mov
andl
jmp
mov
repz
std
jle
dec
and
out
add
mov
add
sub
aad
lds
fistps
fstpt
cwtl
sub
addb
dec
rcrb
rcll
int
dec
in
test
jno
cmp
sbb
pop
xor
cmpsb
hlt
movsb
jne
push
sub
xchg
jle
push
mov
sbb
mov
xchg
jno
jbe
ret
shlb
sbb
xor
lods
mov
dec
lock
inc
mov
push
fwait
movsb
dec
imul
sub
movsb
push
mov
dec
cltd
cmpsl
es
icebp
adc
jg
stos
and
lds
pusha
leave
mov
sbb
pop
fmuls
add
stos
mov
rsqrtps
rclb
add
inc
in
js
add
cmpl
ja
jmp
push
pushl
push
push
pushl
pushl
pushl
pushl
call
jmp
mov
pop
mov
in
xchg
mov
cwtl
addl
mov
add
fisubs
sbbb
inc
push
jno
ja
and
cmp
add
cmp
jmp
push
dec
clc
xchg
xchg
je
cld
sahf
push
jbe
cli
insl
es
and
fwait
ror
ja
lods
cmc
movsl
xor
cmp
arpl
mov
sarb
andb
inc
sbb
jl
ljmp
loopne
jp
pop
xchg
fdivrl
sti
mov
mov
cmpsl
fucomi
cmpsb
mov
jae
pushf
das
pop
js
icebp
mov
cmp
int
push
fwait
sbb
sbb
loope
mov
ret
int
imul
or
add
add
add
int3
stc
lret
stc
push
jns
dec
xor
test
add
je
or
xchg
mov
cwtl
xchg
add
pop
jae
cld
pop
cmp
cmp
dec
cmpb
or
cmp
fwait
dec
cmp
testl
fldl2e
or
jle
sub
jnp
jmp
xor
lock
imul
push
sbb
or
push
outsb
xlat
imul
xor
adc
adc
sub
mov
add
popf
es
xchg
stos
and
jnp
shlb
mov
fstpl
adc
bound
xchg
adc
fucom
push
inc
data16
sti
xor
mov
out
push
mov
mov
inc
lods
mov
in
jmp
jg
xchg
jle
jg
mov
aad
cli
test
add
in
xor
mov
sbb
int
mov
adc
jne
adc
jns
mov
in
movl
mov
inc
mov
cmpsb
add
cmp
pop
or
mov
mov
nop
lds
dec
adc
xor
jg
cwtl
stc
pushf
jno
add
jne
xor
fisubl
out
mov
stos
int3
bound
ja
mov
loopne
pop
bnd
xchg
outsb
lret
mov
adc
lcall
inc
adc
and
fs
mov
dec
negl
or
jmp
insl
and
sbb
ljmp
imul
cmp
cmpsb
sbb
adc
daa
dec
fiadds
hlt
call
jge
push
aam
loopne
mov
scas
jnp
sbb
jnp
in
cmc
push
popf
mov
mov
adc
loopne
push
pop
add
jg
ss
xchg
push
adc
add
dec
and
lret
hlt
in
gs
push
mov
insl
push
std
dec
sbb
imul
mov
popf
sbb
xor
pushf
pop
mov
mov
orl
nop
cmp
pop
pop
sub
mov
xor
xor
and
dec
jmp
aam
dec
das
ljmp
sti
decb
sbb
adc
ret
pop
xchg
add
inc
xchg
call
pop
jb
sbb
lds
mov
fisubrl
pop
sbb
dec
out
lea
lahf
and
cmp
push
addb
addr16
xchg
pop
inc
movsb
scas
mov
cltd
dec
jg
inc
fisubl
mov
insl
pop
mov
ficoms
test
jb
jp
mov
scas
xchg
jb
nop
inc
adc
sbb
mov
dec
pusha
dec
jae
sbb
out
xrelease
in
insl
aad
jo,pn
jae
and
cmp
pop
sti
sub
push
and
dec
cli
and
push
fistpll
cmp
pcmpgtw
and
mov
mov
mov
sub
and
movl
movl
orl
mov
mov
mov
cmpl
ja
subl
jmp
push
call
jmp
ss
and
cmpsb
cld
fisubl
adc
pop
mov
add
mov
add
in
jecxz
outsl
add
daa
adc
pop
mov
jbe
outsl
dec
mov
loopne
orb
cli
sub
sbb
jo
xor
ret
add
cmp
or
mov
loopne
sbb
push
aaa
mov
xor
mov
xchg
pop
mov
adc
into
mov
jmp
add
or
js
mov
cmp
fimull
and
pop
sub
fcomps
imul
xor
stos
jecxz
movb
and
jg
loop
or
stos
jb
inc
das
in
fildl
cmp
lahf
mov
fmull
test
movsl
jbe
call
mov
jmp
pop
jno
sti
cld
sti
pop
idivl
popa
mov
stos
testl
add
adc
mov
sbbb
jbe
test
dec
fsubl
imul
mov
cltd
push
sub
xchg
xchg
nopl
add
aas
movsl
popf
movsl
insl
mov
bound
push
rcpps
repnz
fistpll
lods
jp
jg
imul
cmpsb
cwtl
arpl
mov
in
or
popf
push
adc
push
push
shr
cld
mov
lods
cmp
aad
push
jb
add
jo
dec
mov
insb
int3
jo
sub
jecxz
mov
enter
push
rcrl
xor
mov
shlb
shl
mov
cmp
movl
jae
jmp
pop
mov
lock
std
pop
mov
mov
imul
add
leave
pop
inc
mov
push
inc
data16
ficoms
cmpsb
and
outsl
lret
xor
mov
sbb
push
out
or
sbb
gs
lock
lds
xchg
stc
cmp
filds
dec
or
jp
mov
inc
out
fmull
and
test
jae
test
inc
jo
pop
mul
cli
push
test
add
stc
push
fnstenv
iret
leave
dec
jmp
and
cmp
push
fidivl
arpl
mov
sbb
repnz
cli
icebp
xchg
iret
in
test
or
push
inc
daa
pop
insl
cmp
jg
xchg
pushl
mov
clc
loop
add
add
movl
add
jmp
adc
cmp
push
fildll
sbb
test
xor
mov
add
hlt
popa
mov
jns
cmp
js
insb
fs
jg
insb
cmp
lcall
xor
sub
pop
mov
push
xlat
aad
mov
aad
mov
in
loopne
scas
pop
xlat
push
out
ss
push
jp,pt
cmp
adcb
repz
sub
dec
gs
pop
sbb
shll
insl
mov
jg
iret
data16
mov
mov
inc
dec
pop
jbe
sub
ljmp
ss
push
rcrb
imul
mov
fxrstor
fs
jbe
pusha
pop
pop
and
movl
add
movl
cmpl
jge
orl
jmp
push
call
movl
mov
mov
jmp
mov
idiv
pushl
mov
ret
rorl
add
sbb
pop
test
mov
mov
shl
sbb
push
in
adc
repnz
jp
cmpl
pop
and
sbb
push
insl
je
js
and
out
and
jb
popf
outsb
pop
das
data16
pop
lcall
cwtl
xchg
jmp
sub
pop
daa
mov
insb
popf
out
je
scas
cmp
jge
loope
icebp
fdivrl
push
movsl
sub
rcll
int3
das
cli
es
mov
mov
rcrl
fldl
lods
loope
in
and
pop
or
cmpsl
mov
fimuls
add
sub
sub
mov
xor
mov
sub
imul
mov
and
jmp
push
xchg
ljmp
and
filds
add
mov
add
pop
roll
in
call
in
arpl
sub
cmp
inc
inc
push
jnp
push
adc
dec
aam
cmp
mov
xor
sbb
cmpsb
je
loopne
cmpsl
mov
sub
push
out
js
xchg
sub
pop
stos
push
dec
add
fistpl
jns
push
pop
jg
and
cmp
jge
push
mov
insb
imul
enter
pop
dec
push
pop
loope
test
imull
int3
inc
rcrl
enter
rolb
mov
bound
jne
lods
push
iret
stos
out
cmp
test
mov
pusha
inc
mov
push
int3
mov
jmp
pop
or
mov
nop
pop
pusha
or
xor
add
addr16
push
lds
push
xchg
cmpsl
mov
mov
or
mov
std
ret
xor
mov
movsb
xchg
out
push
outsl
mov
ja
aad
mov
mov
lahf
mov
pop
adc
and
in
cmp
dec
js
xor
div
push
push
push
jecxz
or
add
cld
add
insl
xchg
mov
push
jp
push
mov
jne
test
sbb
lcall
cmp
inc
mov
cltd
mov
out
fidivs
mov
push
adc
in
lret
mov
mov
pop
sti
push
cmp
jbe
add
mov
mov
movl
jmp
shll
out
jg
cmp
and
add
mov
add
pop
es
enter
movsl
and
xchg
lcall
xchg
fwait
aam
mov
jo
jmp
cmp
out
or
sahf
mov
out
xchg
push
mov
jp
jno
and
fdivp
jl
scas
jb
jb
popa
jmp
jg
mov
push
and
mov
sub
or
adc
outsl
insb
and
inc
mov
popf
xor
or
xor
lods
pop
cmpl
ljmp
cmpsl
in
loopne
jmp
cmp
inc
jecxz
mov
mov
sub
xor
push
sbb
inc
inc
clc
dec
or
add
leave
add
add
fs
mov
fldenv
jo
mov
add
std
insb
imull
je
test
inc
dec
adc
push
mov
mov
and
outsb
dec
add
shlb
cmc
out
jb
lock
mov
lcall
and
cs
adcl
jge
sahf
test
pop
jp
add
inc
rcrb
fnstenv
xor
fcmovnb
lods
int3
jbe
push
outsb
sub
imul
or
outsl
xchg
sub
push
mov
add
jg
sub
jmp
push
or
jmp
nop
add
lods
sub
hlt
push
test
push
lea
mov
mov
mov
jmp
inc
push
or
sbb
std
adc
xor
add
mov
add
push
stos
flds
insb
out
sbb
lods
punpckhwd
aas
dec
mov
inc
jecxz
mov
and
mov
dec
dec
dec
repz
jbe
pop
sbb
cmp
inc
jns
stc
lods
call
cli
and
das
and
in
xchg
xchg
outsb
lret
adc
dec
test
lret
adc
scas
cmpb
cmpsl
mov
jecxz
jbe
push
iret
in
es
ret
in
jmp
mov
testb
in
adc
xchg
enter
ret
or
cmp
and
and
mov
movsb
enter
and
pop
nop
inc
ret
cs
add
and
jmp
add
xchg
iret
lahf
push
fbstp
or
testl
sub
sbb
stos
jae
inc
sarb
push
fnsave
pop
pop
pop
jno
movsl
pop
mov
push
xor
daa
es
daa
push
lds
dec
jbe
fcom
sbb
xchg
fiadds
xor
xlat
fcmove
mov
je
je
addl
push
rorl
pop
xorb
dec
pop
push
loop
lret
jbe
aam
js
aaa
sub
pusha
jne
dec
and
cmp
insb
jl
outsb
adc
and
pop
sbb
add
js
addr16
outsb
pop
fwait
jmp
dec
movsb
xchg
dec
sub
add
mov
movl
movl
jmp
sbbb
in
jle
ljmp
test
add
mov
add
pop
aam
sub
int
jbe
add
cmp
test
call
lret
je
mov
in
xor
outsl
mov
cmp
cltd
jl
mov
insb
mov
js
lds
pop
loop
pop
setns
sbb
jl
push
pop
das
and
icebp
into
add
and
mov
sub
ja
rcll
orl
adc
inc
fimuls
scas
push
inc
scas
clc
sub
jge
mov
dec
scas
and
icebp
jns
inc
or
pop
mov
insl
mov
fsubrs
stos
jecxz
sbb
hlt
and
jmp
lds
inc
fstpt
aas
sbb
and
icebp
addr16
popl
add
lea
loopne
movsb
lea
into
addps
and
sbb
pushf
jp
nop
add
mov
sbb
orb
mov
sbb
mov
xchg
add
sub
icebp
sbb
out
sbb
loop
dec
pusha
nopl
mov
call
dec
mov
out
sahf
int
xchg
sbb
rcrb
adc
into
dec
sbbl
fisubrs
ja
push
test
or
sub
call
sub
mov
in
mov
in
push
lret
push
mov
insb
push
movsb
mov
lcall
test
div
mov
cmp
jae
movl
jmp
pop
js
movsl
jbe
sti
mov
pop
dec
imul
add
add
jne
mov
rcrl
and
dec
lock
sarb
mov
std
hlt
push
xor
xchg
fwait
add
cs
push
test
mov
xor
ja
xchg
push
leave
stc
fistl
mov
mov
add
jae
jl
mov
push
push
fs
test
add
xchg
je
jbe
and
xlat
adc
stos
xchg
xlat
shlb
idivb
ss
cmp
jle
popf
mov
fdivr
xchg
dec
das
rclb
jle
xor
cmpl
fildll
pop
pop
inc
xor
mov
adc
std
ds
dec
movl
movl
movl
movl
mov
mov
sub
mov
xor
mov
sub
imul
mov
and
mov
jmp
mov
mov
sti
test
out
int
lds
add
js
mov
inc
clc
cmp
jge
add
out
sbb
dec
dec
lods
sub
ja
pop
mov
sub
xchg
jae
jl
test
scas
fstpl
cltd
mov
mov
mov
aas
adc
imul
jno
xchg
aam
inc
pop
cmp
test
call
fwait
sti
and
pop
push
xor
mov
lea
bound
cmpsb
sub
xor
pop
xor
cmp
mov
inc
sbb
pop
ret
mov
sub
jne
aad
aaa
and
sub
movl
movl
mov
jmp
mov
ss
mov
sbb
je
xchg
add
mov
add
push
out
or
pop
inc
sub
fadds
pop
dec
jecxz
inc
lods
fs
ret
adc
icebp
mov
xchg
std
aaa
fisubs
cmp
jg
pop
pop
sti
lods
sbb
pop
adc
lret
repnz
jne
inc
mov
or
test
pop
lret
push
mov
cmpl
or
mov
add
stos
mov
jl
sbb
mov
mov
adc
push
int3
xor
and
dec
popf
jmp
test
adc
xchg
notb
cs
mov
or
jmp
dec
daa
pop
aam
dec
mov
iret
mov
add
mov
in
mov
mov
dec
cmp
lods
or
dec
jmp
mov
inc
pop
aaa
fildl
mov
cmp
hlt
lcall
xchg
add
mov
neg
xchg
push
pop
lock
and
loop
or
addr16
or
ds
sarb
dec
mov
ja
mov
xor
and
add
fstl
jno
pop
and
sbb
mov
sub
sbb
popa
nop
jecxz
mov
or
mov
fldl
xor
inc
jnp
repz
mov
add
xor
jmp
enter
pop
xlat
fmull
jl
mov
into
xchg
add
mov
add
insb
lods
xchg
mov
cli
push
movsb
jb
push
loop
sub
or
adc
jno
test
mov
out
jge
pushf
loope
pop
inc
pop
or
xor
and
cmp
mov
cmc
inc
inc
xlat
add
and
xchg
push
push
or
add
ljmp
mov
lret
xor
cmp
jnp
sbb
shll
aad
push
ja
fbstp
jno
xchg
xor
ret
xchg
clc
dec
mov
subl
xchg
sti
notl
mov
std
or
sub
ficompl
cmp
xchg
std
mov
and
and
mov
mov
movl
mov
mov
jmp
mov
xor
scas
mov
rcrb
mov
jg
add
mov
add
push
insb
stc
push
cmp
addr16
mov
xchg
loope
ret
jbe
xor
push
or
stos
lret
pop
fidivrs
push
lds
inc
fnstcw
daa
sub
jnp
mov
xor
loopne
dec
and
rol
divb
ss
sub
shll
mov
and
sbb
pop
inc
xchg
jnp
ret
decb
fwait
or
cmpsl
mov
test
inc
push
inc
test
sbb
in
push
push
in
mov
jg
and
cmp
cltd
mov
and
jmp
icebp
push
ret
cmc
pop
xchg
mov
lret
xchg
add
mov
add
inc
cmpsl
sbb
inc
movsl
addr16
mov
imull
ret
adc
movlps
xor
mov
sbb
outsb
push
imulb
aaa
dec
xor
lods
and
fists
es
test
mov
jmp
adc
fiadds
adc
orl
push
xor
nop
imul
aam
test
popf
pop
mov
decb
dec
repnz
incb
jne
push
pop
sub
pop
mov
cmpsb
int
cs
sbb
mov
fsubrl
mov
mov
dec
dec
ss
scas
test
add
shlb
shl
mov
cmp
jae
movl
movl
jmp
mov
mov
dec
push
push
sub
loope
add
mov
add
mov
adc
sbb
inc
sub
xchg
hlt
outsl
hlt
sarb
incb
fwait
jns
lret
jns,pt
fwait
pop
xor
inc
test
icebp
push
sarb
cmp
sub
add
ja
fdivl
sbb
mov
jns
push
pop
pop
and
lret
inc
inc
xchg
loopne
loop
or
jb
push
pusha
xor
dec
inc
sub
aaa
pop
addr16
hlt
jb
ret
or
leave
inc
mov
push
sahf
sahf
ljmp
adc
and
mov
jg
shrl
mov
jle
xor
jmp
iret
mov
push
insb
inc
std
add
pop
dec
movl
movl
movl
jmp
fsubr
fwait
mov
cmp
lahf
int3
adc
add
popf
push
subb
sub
or
sti
xor
add
dec
sub
inc
push
add
icebp
stc
inc
push
and
dec
fcomip
xor
popl
pop
inc
mov
xor
xchg
sub
dec
pop
or
add
pxor
pop
mov
ds
pop
or
aas
and
pop
add
jno
aaa
inc
sub
bound
inc
lds
in
mov
dec
push
push
sub
add
dec
scas
xchg
mov
push
pusha
je
sti
add
cwtl
pop
mov
out
dec
and
fs
and
adc
mov
sub
mov
xor
mov
sub
jmp
pop
lods
fidivs
jae
out
pop
sbb
or
inc
xchg
add
mov
add
pop
jae
ret
dec
mov
iret
inc
cwtl
fbld
ficoml
loop
outsb
push
or
xchg
iret
xchg
outsl
fs
sub
cwtl
mov
aas
mov
mov
ret
pop
mov
dec
pusha
rclb
jp
mov
or
ds
fcmovnu
pop
sbb
add
lods
out
xlat
repnz
or
pop
ss
xchg
ja
rcrl
push
cmp
rcrl
lret
sub
mov
inc
sbb
test
mov
nop
or
jnp
in
fmul
jge
xchg
mov
mov
and
inc
loopne
fdivrs
hlt
fcoml
jnp,pn
dec
xchg
fmul
fstp
lds
dec
imul
jmp
loope
fwait
pop
mov
out
sbb
fisubl
aas
hlt
xchg
add
mov
add
lahf
aaa
shl
jns
addl
insl
xchg
lahf
push
imul
stos
cmp
and
lods
hlt
out
and
jo
mov
add
jmp
sub
es
dec
and
aad
inc
and
push
xchg
jae
sub
cmp
pop
stc
pop
cmpsb
mov
cmpsb
aas
mov
out
stos
mov
dec
jl
ljmp
dec
rorl
movsb
testl
movsl
sub
out
xor
insb
mov
movsb
mov
push
inc
mul
js
lahf
lcall
fmulp
push
inc
mov
and
aad
mov
and
mov
movl
jmp
daa
pop
push
jnp
imul
add
das
xor
das
mov
lds
jne,pt
aad
inc
xor
push
imul
ja
sbb
cltd
mov
push
mov
lods
test
call
push
mov
pusha
adc
stos
out
das
lahf
pushf
jae
adc
or
lret
shlb
les
add
mov
mov
jae
mov
mov
push
xor
dec
gs
xchg
mov
xor
fildl
xor
adc
push
or
in
mov
xor
xor
cli
addl
fmull
add
mov
jmp
or
aam
aad
pushf
fnop
out
xchg
sbb
es
dec
push
cwtl
add
mov
add
in
mov
fisttpl
xor
xor
inc
jbe
dec
mov
fldl
icebp
inc
mov
sub
in
jp
int
js
cmp
test
cld
int3
rolb
xchg
ret
pop
inc
sbb
outsl
mov
popa
add
pop
lret
int3
ja
dec
jne
imul
out
dec
loopne
nop
mov
jmp
pop
mov
lret
mov
jl
sbb
pop
shl
or
inc
hlt
daa
orb
loopne
cmp
xchg
or
xor
xchg
push
lea
ret
subl
fwait
testl
add
add
xor
and
jmp
dec
imul
pop
addr16
sub
pop
cltd
add
mov
add
rcll
adc
lret
into
popf
xlat
mov
scas
in
dec
sbb
data16
ds
jl
inc
lret
pushf
xchg
add
adc
int3
lea
popa
mov
sbb
or
jnp
sub
push
xorb
or
and
jae
mov
cmp
cmp
jne
mov
std
and
mov
pavgb
inc
les
pop
mov
mov
xchg
neg
fisttpl
and
cld
inc
push
jg
xor
mov
push
jmp
fldl
dec
aas
push
xor
mov
jns
dec
cli
fwait
insb
push
mov
add
mov
mov
movl
mov
mov
and
jmp
jb
jnp
jg
repnz
shl
int3
mov
add
mov
add
add
sub
popa
test
jl
cmp
jb
mov
sbb
or
xchg
mov
pop
push
mov
cmp
inc
repnz
insb
movsl
sbbb
pop
add
pop
and
xor
push
mov
addb
dec
fcompl
daa
int
mov
scas
cmp
int3
push
sahf
sbb
adc
cmpsb
and
inc
sarl
xchg
loopne
jge
mov
subb
pop
scas
into
nop
push
mov
mov
sub
das
add
ljmp
in
sub
movsb
les
ss
mov
clc
pop
mov
div
mov
addb
cmp
jmp
imul
std
mov
jg
mov
mov
add
pop
cli
push
nop
mov
sub
cli
xor
divb
imul
bnd
int3
test
call
shrb
hlt
and
push
iret
ret
cld
roll
pushf
jge
clc
and
mov
div
movl
imul
sub
lret
sub
adcb
xor
stc
inc
dec
aam
in
sub
add
loop
cld
add
mov
into
jmp
in
dec
addr16
push
lea
sub
xor
or
mov
int
sbb
rolb
cwtl
add
pop
mov
jae
movl
movl
jmp
or
int3
mov
jmp
imul
add
add
ret
mov
mov
pop
mov
mov
jne
inc
rcrl
bts
mov
lock
ljmp
xor
lahf
sbb
into
pop
cmc
popf
arpl
and
mov
pushf
and
sbbb
shrb
xchg
mov
pusha
insl
inc
aad
jmp
mov
aas
xchg
pusha
stc
push
ds
out
daa
aad
mov
jl
pop
dec
cltd
in
sbb
rcrl
fcomps
lcall
movsl
lcall
ss
stos
sbb
sub
mov
je
div
movl
jmp
xchg
not
fyl2x
lcall
sbb
imul
imul
add
add
outsb
push
sub
cmp
mov
mov
aad
into
js
inc
cmpb
inc
dec
stc
inc
in
cmp
pushf
xchg
fcmovne
dec
dec
hlt
mov
fwait
mov
int
xchg
or
rorl
int
adc
sub
das
out
push
pop
negb
sub
xor
sbb
test
xor
dec
out
xlat
dec
in
insl
push
cwtl
test
mov
mov
or
inc
into
sbb
lret
sbbb
das
push
mov
inc
mov
fwait
pop
andb
nop
add
adc
inc
clc
push
jl
add
inc
fmull
imul
mov
jmp
shlb
fcomip
mov
iret
outsb
je
pushf
add
mov
add
jge
or
sub
sbb
nop
mov
mov
cmp
adc
inc
xor
push
cmp
ret
lcall
mov
jo
in
scas
pop
jns
dec
add
push
scas
jo
stos
lahf
xor
cld
jl
pop
add
xlat
jp
iret
xchg
fcomps
cs
dec
test
out
aas
mov
pop
add
imul
push
mov
fistps
lods
sbb
mov
mov
sarl
adc
push
jmp
mov
stc
sbbl
cmp
rorb
mov
sub
imul
jmp
lock
ret
sti
jae
push
daa
dec
sub
add
add
mov
cmp
stc
orl
xchg
imul
lods
sbb
repnz
imul
adc
inc
dec
mov
ret
sahf
or
repz
nop
mov
test
outsb
aad
bound
or
jg
scas
aad
fiadds
push
pop
mov
roll
jmp
xor
int
fadds
js
inc
shlb
dec
adc
inc
jae
fnstsw
xor
push
add
cmp
sub
adc
dec
cmp
mov
es
push
lret
shrl
sahf
sub
mov
xchg
cmc
dec
mov
and
jmp
lahf
mov
sarl
popf
push
pop
in
inc
or
mov
add
in
pause
cmp
rorl
adc
inc
pop
ljmp
repnz
popf
fldenv
adc
pop
pushf
dec
xorb
neg
push
bound
aaa
and
cmpsb
dec
fs
in
stos
mov
xor
pusha
push
push
imul
push
mov
mov
rcl
cmp
dec
ja
xchg
inc
roll
popa
push
shrl
add
dec
jnp
or
cli
push
outsb
push
stc
mov
hlt
mov
clc
adc
add
js
cld
push
cmp
and
in
push
sar
jns
sub
les
mul
or
add
leave
add
add
jg
pushl
imul
add
add
stos
in
stc
dec
in
cmpsl
ss
jae
add
jl
repz
cmp
jl
adc
leave
add
inc
push
mov
cmp
cld
push
in
les
add
test
fistps
sbb
or
push
cmp
push
xor
xor
flds
dec
cmp
add
push
ss
xchg
clc
cmc
and
aad
fcmovu
jmp
adc
xchg
sbb
mov
aam
dec
xor
fidivrl
popa
imul
aad
leave
imul
xchg
push
loopne
std
xlat
mov
int3
jmp
xchg
rcrb
aad
arpl
sbb
xchg
pop
jo
inc
lahf
add
mov
add
sub
stos
lret
out
xchg
imul
jbe
aas
inc
test
icebp
xchg
dec
test
mov
std
adc
push
add
leave
jo
or
cli
mov
shrl
sbb
push
jg
insb
fisubrl
repnz
mov
push
and
test
cli
in
je
jnp
inc
jle
jg
xcrypt-ctr
cmpsl
pop
neg
roll
arpl
jmp
hlt
adc
xlat
dec
mov
std
sub
or
ffree
pushl
pop
ljmp
push
xor
adc
adc
sti
push
test
popf
nop
mov
out
xchg
out
jnp
push
jmp
movl
pop
imul
add
mov
add
sbb
push
in
pop
mov
pop
pusha
pop
ds
sub
jl
inc
cli
int3
hlt
push
std
nop
nop
stos
xor
mov
and
mov
push
subb
add
les
mov
cmp
fldl
pop
and
aaa
mov
popa
es
mov
jne
jae
mov
popf
sti
inc
fstpl
shll
rcrl
pop
sub
xchg
subb
inc
icebp
xor
pop
mov
int3
hlt
mov
jb
sbb
lock
add
add
adc
adc
add
add
std
fbstp
and
mov
add
add
scas
adc
fincstp
nop
pop
dec
cmp
inc
or
cmpl
mov
loop
rcl
out
test
push
xor
or
bound
stos
outsl
nop
sahf
inc
lock
jecxz
fidivl
or
push
add
in
xchg
fdiv
daa
ret
xchg
xchg
mov
scas
mov
popf
test
inc
pop
out
shrb
inc
and
and
cld
fistl
popf
or
push
jge
mulb
outsb
arpl
push
mov
xchg
call
push
test
test
sbbl
sub
push
loopne
in
mov
xor
sub
stos
inc
jmp
xor
jnp
jnp
jnp
hlt
xchg
dec
jmp
xchg
push
mov
add
adc
adc
xor
sub
out
repnz
dec
mov
mov
add
inc
and
nop
xchg
test
mov
and
sbb
subb
out
jg
mov
adc
lods
dec
or
cmp
cs
xor
sbb
and
mov
movsb
mov
fcmovu
jecxz
rclb
xchg
and
sbb
inc
jo
scas
xor
mov
imul
lods
jnp
and
inc
sub
mov
lcall
dec
xchg
cmpsl
ljmp
jmp
mov
mov
add
ficoml
mov
add
lret
adc
dec
vmwrite
mov
fmull
test
scas
or
mov
pusha
xor
fldenv
flds
sahf
mov
adc
mov
sub
in
inc
xlat
jmp
pop
lret
mov
add
xchg
insb
dec
mov
jb
push
sub
notl
scas
push
leave
push
je
cmp
adc
lea
cltd
xlat
in
xchg
jo
mov
push
jp,pt
push
jp
push
push
aas
iret
jecxz
lods
test
inc
or
fdivs
sbb
ja
mov
sbb
xchg
and
dec
lret
cld
loope
sub
jae
jb
jmp
cli
das
pushf
fcomp
sti
das
cmpsl
or
ss
pop
fidivs
add
add
and
and
or
loope
xchg
mov
jg
pop
int3
imul
cmp
jae
jb
mov
test
sbb
mov
add
mov
icebp
mov
subb
mov
stos
xor
add
jmp
out
popl
and
daa
or
mov
push
aad
out
into
in
jle
cmp
lret
std
cmp
push
pop
outsl
mov
mov
cwtl
xchg
cmp
push
dec
lea
xchg
movsl
xchg
sub
xchg
negb
pop
dec
sbb
sub
mov
mov
or
or
push
lea
push
lea
push
call
jmp
xor
aaa
or
ljmp
inc
bound
add
dec
jle
cmc
fs
aam
aam
mov
pop
add
mov
cmp
dec
test
mov
adc
scas
adc
enter
push
movsl
fs
leave
out
call
pop
loop
cltd
decl
lods
stos
shl
dec
xor
xor
imul
ret
jmp
sbb
rorl
js
lahf
test
push
jge
sbb
scas
pop
mov
jmp
add
pushl
push
adc
jb
mov
xchg
aam
add
inc
or
inc
insb
fisttps
add
adc
hlt
xlat
les
adc
add
negb
inc
adc
lea
push
push
mov
mov
xor
lea
push
call
push
lea
push
jmp
pop
adc
decl
sub
pop
dec
sub
add
mov
add
cmpb
mov
pop
pop
jl
mov
dec
adc
fistl
and
dec
ja
hlt
lret
sarl
push
jg
out
cmp
cmp
jmp
sbb
sbb
adc
cmp
cmc
inc
xchg
sahf
lcall
rcr
xchg
xor
shlb
shll
sbb
inc
mov
lods
mov
dec
and
movsl
pop
xor
jb
and
cmp
adc
jns
or
movsb
xor
push
std
or
aam
push
outsl
cs
std
mov
or
add
adc
lea
push
call
mov
jmp
mov
jg
int
icebp
and
addl
add
add
cltd
lcall
inc
insb
andl
lods
ds
dec
jno
std
inc
aad
pop
adc
or
mov
dec
mov
xor
mov
icebp
push
xchg
lock
js
loope
sarb
stos
call
cltd
ljmp
fmull
mov
pop
mov
add
push
sub
sub
int
or
cmp
popa
or
iret
repz
add
push
fistps
push
pushf
pop
pop
pop
shlb
stos
and
stc
pop
inc
sahf
adc
loopne
test
scas
mov
dec
mov
sub
leave
add
add
pop
or
lea
jns
add
mov
add
sub
inc
cmpsb
push
xor
mov
popa
roll
xor
dec
lds
out
aaa
call
popa
out
sub
das
test
xchg
inc
insl
pop
push
xchg
and
mov
cmp
lahf
sub
mov
adc
enter
gs
hlt
push
das
adc
enter
ret
jecxz
pop
pushf
movsl
ss
push
gs
cs
mov
jne
out
xor
jbe
mov
dec
daa
clc
xor
sahf
add
adc
sahf
jl
pushf
fisttpll
jnp
mov
pop
testb
inc
push
loop
jmp
adc
sub
pop
pop
pop
leave
ret
xor
or
or
mov
push
sbb
push
sbbl
mov
or
movl
jmp
jp
inc
rcrb
in
add
imul
cmpsb
add
mov
dec
fdiv
enter
or
scas
lods
ret
pop
into
mov
inc
mov
and
dec
mov
into
inc
or
in
out
adc
andb
jecxz
mov
aaa
addr16
cwtl
jle
and
jmp
pop
sbb
xlat
cld
pop
mov
xor
pushf
leave
xchg
stos
ja
daa
mov
pusha
mov
inc
fildll
iret
dec
mov
mov
mov
adc
inc
xchg
popa
les
aas
inc
ret
je
lcall
xchg
loopne
int
dec
mov
mov
jb
outsb
or
cmp
push
jne
mov
mov
movzwl
sub
mov
xor
cmpl
jge
xor
jmp
pushl
pushl
pushl
push
call
div
jmp
lock
out
and
dec
arpl
xchg
int
dec
in
cmpsb
add
mov
rcll
in
insl
jb
outsb
mov
add
out
sub
repnz
in
in
decb
ret
stos
out
and
fwait
push
iret
hlt
add
ja
and
leave
xchg
cmp
jb
scas
mov
rorb
pop
and
mul
lret
push
mov
adc
lahf
sahf
lcall
cmp
mov
mov
or
pop
jmp
aam
call
out
nop
mov
and
inc
out
xor
add
mov
mov
sbb
inc
adc
pop
ret
aaa
data16
mov
jmp
hlt
and
out
push
push
or
mov
loopne
xor
lcall
leave
mov
sbb
ret
popf
or
dec
pop
iret
jno
push
inc
add
lods
push
loop
cld
ljmp
push
icebp
sahf
jb
sub
mov
fcmovu
push
pop
jne
lcall
mov
ja
lret
lods
das
jo
orl
in
lret
sar
stos
dec
orl
xor
jl
fst
mov
js
inc
data16
pop
dec
jne
movsl
jge
adc
leave
dec
and
mov
dec
push
fidivl
jge
xchg
scas
in
mov
pop
ja
inc
sub
mov
jmp
fimuls
clc
cltd
std
sti
decl
fsubrl
fisubs
mov
pop
test
add
cwtl
dec
incb
push
sub
xchg
xor
mov
push
std
mov
popf
inc
dec
xlat
test
push
push
scas
shr
addr16
xchg
bound
add
sbb
fisubl
sbb
pop
lret
fldenv
xor
xor
mov
sbb
aad
xor
sub
and
out
loop
adc
cmp
out
movsb
popa
loopne
clc
add
in
imul
and
cmp
cmp
int
jne
out
mov
test
lods
jns
inc
inc
pop
adc
xchg
push
ret
mov
popa
pop
daa
std
sbb
sar
rclb
jmp
mov
sub
mov
mov
or
jmp
and
dec
sub
mov
fistpll
ror
divb
adc
add
xor
fstps
or
mov
sub
iret
pop
push
jo
mov
sub
jl
aad
xlat
push
jno
add
arpl
mov
mov
aad
fwait
and
scas
mov
pop
popf
sbb
inc
push
inc
or
mov
dec
pop
adc
mov
cmp
xchg
lods
push
lds
pusha
xchg
fsubrl
or
scas
sub
scas
iret
daa
sbb
outsb
je
movsl
repz
adc
int3
adc
xor
cmp
mov
popa
mov
adc
aas
sarl
in
fcomps
out
shll
ja
pop
push
pop
jg
stos
aad
mov
das
icebp
test
cmpsb
iret
and
das
mov
addl
shr
movl
rcr
shr
jmp
imul
jbe
jle
call
and
test
add
push
push
sahf
leave
mov
dec
shll
push
std
mov
popf
add
or
jmp
call
mov
inc
push
xor
rolb
xchg
into
pop
xor
pusha
jp
stos
xlat
add
xchg
jle
ss
inc
in
and
and
push
adc
in
mov
mov
divb
adc
call
or
shl
popf
stc
lret
mov
mov
lret
scas
andl
xor
lock
and
jne
std
shrb
dec
rcr
or
jne
div
jmp
xor
mov
mov
jecxz
icebp
ret
xchg
add
pop
inc
iret
inc
inc
jg
push
mov
sbbl
popf
mov
dec
cmp
jbe
jmp
fwait
xorl
mov
pop
mov
aad
fcoml
mov
pop
mov
or
and
lock
clc
cltd
in
cmpsl
jp
loopne
sbb
idivb
les
cmpsl
push
xor
cmp
into
call
add
pop
sub
push
inc
jmp
sbb
sub
pop
cmp
cwtl
sbb
sub
xlat
jmp
xor
out
cmc
out
mov
mov
dec
mov
and
dec
nop
cmp
jmp
nop
fs
jge
cmp
xor
and
add
and
es
aad
out
daa
movsb
out
mov
sub
or
aad
shll
sbb
jne
pop
cwtl
or
imul
mov
lds
pop
inc
mov
out
int3
push
and
dec
clc
aas
push
and
pop
add
imul
mov
xchg
insb
mov
xchg
fs
jge
xor
jle
and
dec
jecxz
add
mov
cmpsb
sbb
fnsave
test
add
adc
pop
scas
mov
lods
call
mov
fisttpll
jecxz
imul
loop
mul
dec
pop
jmp
cltd
cmp
adc
mov
mov
sub
sbb
adc
out
rorl
or
add
cmp
jmp
enter
mov
jne
mov
cli
stos
add
mov
mov
insl
clc
push
cmpsl
jo
nop
add
or
leave
push
dec
and
cmp
xchg
ss
sbb
test
push
and
jle
dec
hlt
leave
mov
jmp
js
in
insl
iret
in
fs
mov
fimull
shll
jmp
out
repnz
test
sub
and
jp
stos
xchg
inc
adc
xchg
fimull
mov
inc
test
mov
popf
and
mov
mov
add
iret
or
mov
fadds
push
xor
inc
adc
inc
push
loopne
xlat
mov
scas
mov
ja
jmp
enter
mov
orl
cs
or
mov
js
mov
sbb
jle
jecxz
es
pushf
adc
cs
nop
mov
xlat
les
ficomps
fiadds
mov
cld
popf
les
scas
xor
inc
popa
sbb
fs
pop
push
xchg
leave
or
mov
cmp
xchg
test
enter
je
jno
push
lea
loope
add
in
jmp
xorl
dec
jno
lds
es
mov
cmc
mov
add
lahf
icebp
mov
push
inc
sbb
mov
xlat
jle
mov
scas
cmp
lock
and
fldl
jb
cmp
jbe
dec
xor
jmp
scas
push
mov
jae
pushf
loopne
loopne
adc
outsb
lods
add
mov
pop
dec
cmp
mov
nop
enter
repz
sub
sub
stc
insb
loopne
jl
int
sbb
push
xlat
jb
mov
xchg
clc
xor
sarb
ret
das
and
add
add
test
jne
clc
jl
pop
ds
mov
int3
mov
ss
adcb
mov
and
mov
jge
bound
shlb
lods
pop
mov
movsb
xchg
rclb
cmp
and
cmp
es
dec
es
cmp
fistpll
ficomps
or
out
mov
mov
sub
fstps
mov
jmp
iret
fstps
nop
pop
ror
push
xor
outsb
sub
add
cmp
mov
dec
sub
or
jno
or
loopne
std
shll
call
or
mov
cmpsb
push
push
scas
add
iret
mov
gs
shll
and
xorl
push
je
xlat
hlt
pop
outsl
xchg
jecxz
adcl
jl
mov
fsubr
cmp
call
mov
sahf
sbbl
push
mov
xchg
loope
mov
imul
cmp
xor
cmpsb
sarl
push
out
out
lret
daa
add
and
test
xchg
xchg
sbb
or
lds
sahf
adc
jne
pop
mov
pop
jmp
sub
mov
lds
and
loop
add
mov
roll
mov
jns
scas
movsb
push
jae
mov
popa
jae
lods
adc
fwait
jno
leave
add
mov
mov
dec
fstpt
out
mov
and
js
xor
cwtl
or
pop
lock
dec
pop
scas
mov
fildll
mov
and
out
dec
adc
jp
stc
lahf
dec
movsb
or
inc
ret
pop
fwait
aad
addr16
daa
inc
mov
arpl
or
or
mov
loopne
mov
pushf
mov
lret
outsb
push
sbb
js
cs
movsl
and
add
mov
mov
out
std
les
lahf
ficoms
mov
ret
push
mov
sub
push
jmp
or
inc
out
stos
int
cli
stos
mov
pushf
scas
add
test
add
movsb
sbb
xchg
push
fwait
push
jl
in
insb
imulb
pop
std
sub
and
mov
mov
pop
xor
sub
xor
xor
and
cmp
insb
test
cmp
repnz
in
jp
outsb
in
call
xchg
fmull
fsubr
out
and
xchg
dec
add
cli
sbb
push
mov
mov
add
call
scas
mov
int3
mov
xor
lods
mov
loopne
ja
xlat
and
lahf
sbb
lds
pushf
cli
std
or
ja
sbb
sbb
insb
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
jae
cmpsl
cmp
mov
mov
add
ja
jb
or
shrb
ss
mov
xchg
mov
jecxz
inc
jne
in
clc
mov
pop
leave
in
cs
push
jl
stc
push
shll
inc
cwtl
aaa
sub
mov
push
loop
rep
insb
and
or
push
cltd
insl
cmpsl
in
mov
mov
add
push
fdivrp
xchg
lcall
jne,pt
repnz
push
jnp
out
les
push
inc
shll
xor
fmull
pusha
mov
shll
je
add
jle
loopne
and
sbb
adc
xor
lret
push
dec
inc
adc
inc
rclb
add
add
inc
aam
and
add
inc
fcom
add
add
rolb
add
mov
ja
lret
loope
and
in
mov
add
das
adc
mov
xchg
iret
sub
fsts
data16
jne
vpmulhuw
inc
cmpb
mov
jo
xor
jmp
es
fs
sbb
cld
cli
sub
mov
ficompl
xchg
sbb
je
in
add
in
in
cmp
pop
int3
andl
dec
or
jbe
cmp
push
jg
lret
call
mov
out
mov
mov
xchg
aad
mov
repz
jbe
inc
fsubl
rolb
add
mov
pop
mov
std
adc
outsl
push
pop
lahf
xchg
mov
add
jne
mov
ljmp
aad
add
push
sbb
mov
test
rorb
insb
adc
dec
iret
add
scas
jnp
data16
ret
fdivrs
nop
cli
in
icebp
xor
sub
inc
pop
add
shrb
push
cmp
adc
xchg
rorb
and
shl
iret
dec
fxch
xor
mov
pop
mov
ss
jne
mov
inc
add
push
icebp
jne
mov
jo
xlat
push
fnstenv
aas
xchg
mull
push
mov
jmp
cwtl
add
cmpl
mov
test
add
or
mov
pop
das
adc
cmpl
xchg
scas
mov
mov
dec
aaa
rcrb
insb
sub
in
xor
aaa
sbb
add
jp
pop
cmc
push
in
adc
in
pop
fwait
mov
testl
adc
loopne
sub
jb
ljmp
int3
mov
in
in
xchg
cld
int3
mov
sub
es
mov
sbb
mov
jnp
fimuls
aad
and
mov
imull
test
daa
gs
les
test
ljmp
enter
jmp
daa
repz
repz
andl
int
mov
add
inc
xchg
xchg
fisubrs
dec
in
or
cmp
lock
sub
xchg
mov
imul
mov
cmp
adc
lds
xor
cltd
loop
cmp
ret
enter
mov
sub
push
mov
inc
fsts
mov
adc
lret
jl
cmp
inc
sub
pop
lret
push
xchg
mov
push
ds
jb
mov
jmp
pop
in
pop
mov
mov
scas
jae
sti
mov
rol
dec
shll
insl
mov
push
mov
popa
mov
mov
and
das
push
push
clc
imul
mov
sub
add
jmp
xchg
push
fbstp
inc
in
je
add
add
test
add
jl
popf
jae
cld
gs
adcb
lahf
outsl
pop
mov
push
xchg
mov
nop
insl
movsl
dec
jno
sub
das
and
dec
outsl
sbb
mov
jae
mov
lock
and
inc
out
roll
dec
jle
xor
mov
lds
sti
outsb
or
pop
push
push
int
adc
mov
xchg
sbb
nop
sbb
jo
mov
push
rolb
add
push
popf
xor
popf
push
sarl
aaa
shrl
nop
scas
loopne
cmpl
out
xchg
das
sbb
inc
dec
adc
adc
xor
div
and
mov
jmp
dec
ret
dec
xchg
lret
push
sub
cmp
or
ret
xor
add
test
add
dec
mov
ret
pop
and
adc
jne
and
xor
mul
test
mov
xchg
dec
rclb
dec
xchg
ret
pop
lds
lea
mov
sub
dec
or
mov
inc
stos
out
sahf
mov
sbb
pop
imul
pop
out
cmpsl
incl
mov
add
adc
cmp
mov
xor
dec
pushf
pop
loope
mov
push
mov
hlt
clc
mov
out
sbb
jae
xchg
jg
movsl
shrl
adc
pop
loopne
int3
inc
inc
lods
mov
push
and
or
xor
mov
sub
mov
mov
or
xor
mov
jmp
jmp
cmp
jge
into
jge
mov
fdivl
add
jl
ret
shl
out
shlb
dec
mov
addb
push
push
and
std
cmc
insb
jno
mov
adc
sub
cmp
add
xchg
cmp
in
int
fistpl
jg
mov
pop
xlat
inc
jmp
adc
aam
pop
sub
push
in
enter
lods
inc
push
mov
jecxz
out
or
cpuid
push
mov
int3
mov
dec
push
repnz
add
adc
jae
mov
sbb
mov
mov
das
je
jmp
xchg
shrb
popa
jge
mov
mov
jae
movl
movl
movl
mov
mov
sub
or
jmp
jo
mov
fildl
adc
data16
in
test
add
stc
pop
add
pop
dec
loopnew
negb
jnp
mov
xchg
sarl
sub
shll
xchg
dec
cmp
inc
mov
sbb
mov
call
in
dec
insb
repz
pop
sarb
call
andl
cmpsb
push
addl
xchg
sbb
loope
in
loop
add
xor
inc
lahf
or
fdivrs
fdivrs
aam
push
add
mov
or
xchg
ret
dec
dec
adc
incb
out
jbe
xchg
lods
xchg
je
mov
xor
jg
mov
xor
jmp
nop
sub
lods
fwait
dec
fidivrs
push
sub
add
test
add
jnp
nop
test
sub
adc
sub
mov
sti
stos
xchg
sub
adc
fwait
sahf
mov
xchg
add
fldl
or
andl
mov
xchg
xchg
mov
insl
mov
pop
shl
jae
shll
xchg
xchg
aas
fcmovnu
xchg
inc
mov
das
into
mov
lret
aas
mov
xchg
pop
outsb
pop
pop
orl
mov
loope
or
adc
pop
xchg
ret
jns
jl
mov
stc
sub
jle
add
add
cmp
add
mov
sub
add
mov
mov
mov
imul
jmp
test
std
fstpt
ret
adcb
aas
aam
add
test
add
xchg
shrl
sbb
dec
bound
aas
andb
cmp
arpl
xchg
lcall
mov
cmp
xchg
sbb
adc
ss
xor
cmp
mov
sbb
ret
std
or
out
decb
pop
jg
pop
rcrb
ret
ficompl
sahf
mov
dec
sub
test
jle
lock
aam
nop
mov
sahf
stos
das
adc
or
aaa
mov
push
push
test
shll
cmp
enter
das
stos
out
jo
push
addr16
fbstp
shl
repz
pop
aam
and
loopne
les
mov
add
push
pop
movsl
xor
roll
test
cld
aad
mov
xchg
int3
jmp
jle
enter
dec
pop
out
mov
movsb
mov
imul
imul
pushf
testl
repnz
sahf
das
mov
iret
cmc
inc
mov
arpl
imul
pop
push
mov
shl
lods
test
pushf
leave
mov
mov
es
mov
push
push
mov
ljmp
cmp
inc
sbb
mov
stos
sbb
test
push
aam
rolb
add
fs
pushl
aam
lahf
add
jno
and
add
test
add
jne
int
dec
sbb
mov
lock
mov
push
lock
push
pop
pop
stos
push
adc
ljmp
cmc
subl
int3
push
push
scas
in
jns
lea
stos
sbb
inc
dec
mov
scas
cmp
xor
sub
aaa
movsb
mov
cld
cmp
paddusw
pusha
ss
or
shrl
push
das
iret
xchg
sbb
push
lret
xor
pop
fxch
xor
cli
xor
sbb
jp
rcr
mov
stos
inc
repz
or
jb
xchg
inc
scas
sbb
adc
pop
or
rolb
add
xlat
xchg
rcrl
mov
jo
mov
add
int3
lcall
pop
rcrb
inc
adc
xor
adc
mov
repz
dec
xchg
add
push
incb
fbstp
jmp
jmp
xor
or
xchg
xor
pop
lret
cmp
mov
push
mov
pop
xchg
repz
shl
mov
xchg
pop
pop
insb
loopne
movsb
and
jp
jns,pn
jns
or
js
pop
lods
lock
jne
mov
mov
cwtl
cmc
movsb
inc
jb
cmpsl
jns
fimull
imul
and
fsubs
lret
cmp
ljmp
rolb
add
mov
stc
lahf
fstpt
je
add
test
add
cwtl
cs
test
lret
adc
int3
aas
pop
rorl
cmpsl
out
repnz
ret
int
mov
add
xchg
pop
adc
push
popa
mov
pop
dec
xor
loopne
adc
xchg
in
mov
mov
xor
cs
mov
call
lods
inc
xchg
sbb
sbb
rorl
repz
call
dec
fldt
sti
add
fwait
cmp
stos
sbb
push
popf
xchg
adc
jb
or
lods
and
cmpsb
jb
jl
push
push
xchg
add
inc
or
add
mov
mov
jmp
mov
xchg
add
std
mov
stos
xchg
xchg
sbb
sbb
add
cmc
sbb
icebp
arpl
je
xchg
sahf
arpl
inc
jmp
cmp
shr
and
adc
roll
xchg
sub
pop
gs
push
lcall
sbb
sbb
cmp
les
mov
pop
dec
enter
mull
enter
adc
fs
pop
aas
push
xchg
mov
pop
aaa
adcb
sub
push
push
sbb
mov
subb
in
add
fbstp
mov
shlb
hlt
inc
lret
push
loop
inc
pop
mov
scas
popf
xor
shl
repz
jmp
sub
mov
push
das
std
insb
ret
divb
shlb
add
test
add
inc
test
dec
add
jns
sbb
call
fs
mov
push
or
aaa
pop
call
movsl
nop
mov
sub
shll
mov
or
and
iret
dec
mov
mov
stos
xor
das
mov
cmp
mov
rcll
mov
jb
or
cmpsl
mov
pushf
mov
pop
jns
loope
xorl
dec
adc
int
jae
xlat
add
add
mov
adc
cmp
lock
mov
pushf
rcll
test
inc
rcrb
jmp
ret
adc
add
enter
mov
imul
mov
sub
add
xor
div
mov
jmp
mov
fcoml
or
lahf
inc
sub
add
or
jle
lods
sbb
imul
not
out
cmp
sbb
xchg
add
cmp
inc
es
and
xchg
stos
dec
out
dec
pcmpgtb
pop
les
pop
xchg
sbb
stc
sub
mov
inc
add
ror
mov
aas
test
out
or
or
push
cmp
hlt
dec
movsb
rcr
shrl
mov
aad
je
xor
aaa
mov
pop
call
push
xchg
mov
dec
mov
cmp
push
or
mov
stos
shrb
jmp
stc
sbb
fistl
add
inc
xor
insl
pop
ret
pop
mov
inc
lock
jmp
lret
dec
jg
mov
dec
pop
adc
loope
adc
add
test
add
ljmp
imul
pop
scas
inc
push
xor
dec
lds
sbb
out
cmc
adc
xor
adc
cmp
jmp
int
xor
popf
icebp
fistl
mov
cmp
xor
subl
adc
xchg
out
lcall
imul
mov
cmp
pop
mov
inc
or
add
ja
mov
ret
ljmp
rorb
push
lods
loop
rorb
or
lahf
push
push
outsb
mov
ljmp
add
jmp
dec
push
ror
pop
jnp
cmp
inc
or
mov
add
add
push
add
push
test
jnp
mov
jno
fistpll
ret
loopne
lcall
das
bound
popa
jne
rcll
push
push
imul
test
dec
icebp
into
ss
mov
insb
loopne
adc
fs
xlat
rolb
fidivrs
loopne
gs
or
mov
hlt
cmp
adc
sbb
adc
fcoms
mov
inc
call
push
inc
stos
pusha
adc
mov
je
add
or
mov
sub
add
cmp
jbe
jmp
shrl
sbb
insl
xchg
xchg
movsl
cmp
popf
xchg
fs
add
jae
lcall
ss
mov
ffree
shrl
ret
rorl
lcall
mov
jns
in
xorl
shl
mov
cmp
mov
mov
mov
inc
mov
mov
daa
scas
jbe
sub
pop
mov
inc
rorl
mov
mov
xor
push
inc
dec
and
or
cmp
jg
push
mov
test
movsl
mov
mov
call
pop
push
roll
mov
jo
dec
shl
mov
out
mov
xor
movsl
jbe
sbb
jmp
aad
mov
negb
ror
inc
addl
add
push
mov
xchg
hlt
mov
movl
outsb
cltd
std
mov
out
mov
bound
int3
sbb
orl
cmc
mov
add
sub
test
adc
and
cs
cmp
pop
jecxz
enter
pop
pop
shrb
lods
std
in
xchg
xor
mov
push
test
dec
mov
es
lods
loop
pop
insl
pop
sub
and
nop
bound
xchg
daa
push
leave
sub
xchg
icebp
arpl
and
sbbb
inc
lahf
adc
jmp
push
push
jl
pop
pop
leave
ret
push
mov
jmp
stc
lods
call
jmp
mov
xor
jb
mov
add
add
pusha
dec
fsts
adc
dec
sti
mov
dec
fildll
fistpll
movsb
pop
xchg
sbb
movsb
mov
icebp
data16
cs
inc
orb
add
push
pop
cmp
dec
pop
dec
inc
xor
pop
adc
arpl
adc
inc
xlat
nopl
xor
es
in
mov
fwait
mov
pop
sar
inc
addr16
sbb
in
pop
in
cmc
ss
xor
inc
jae
mov
ja
xor
dec
mov
mov
mov
or
push
xlat
into
or
sbb
add
push
and
mov
dec
std
incl
sub
jmp
popa
jns
xchg
mov
xor
push
add
add
add
lock
icebp
ds
cli
push
divl
daa
jl
jg
pushf
jmp
fs
mov
es
mov
sub
rorl
adc
out
mov
xchg
and
cmpsb
xlat
cmp
popf
dec
shl
or
scas
in
pop
lock
and
push
nop
shrd
loopne
adc
sub
int3
dec
lds
cltd
jl
jge
cmc
lret
mov
nop
cmc
lods
or
scas
ds
or
xchg
insb
in
dec
movsl
xchg
fs
mov
ret
jl
outsl
sar
pop
int
cmp
testl
mov
push
push
jmp
xor
movsb
sub
scas
mov
int
jnp
aas
cmp
add
ret
add
add
je
and
lret
movd
gs
xchg
add
pcmpgtd
fsub
mulb
hlt
pushf
rolb
fildl
xor
scas
dec
mov
shr
sbb
ja
ss
add
dec
or
clc
rcrl
ret
or
sub
out
dec
pop
or
adc
xor
lods
cmp
push
and
pop
add
mov
xchg
fs
aam
jns
out
mov
add
mov
sub
imul
push
dec
movsl
cmp
sbb
fs
movsb
es
jg
xor
xlat
stos
loop
sbb
data16
push
dec
add
adc
cmp
or
dec
sub
jnp
dec
lret
ja
rclb
adc
out
push
push
jmp
sub
std
mov
sub
xor
fs
rolb
ret
add
add
adc
loop
cltd
es
mov
mov
ret
xor
xor
out
jnp
xchg
mov
jmp
lahf
mov
inc
mov
sar
push
and
mov
sub
pop
adc
adc
inc
notl
or
push
fwait
shl
pop
sub
mov
fucomi
xchg
dec
push
les
xor
cmp
adc
mov
js
jg
ds
call
inc
outsb
pushf
or
insl
out
add
jns
jmp
stos
and
insb
cmp
and
pop
or
sub
inc
test
ds
mov
imul
jp
repz
out
pop
test
movsl
push
mov
mov
inc
xchg
mov
jmp
push
call
imul
ret
or
rol
add
add
add
data16
into
mov
xchg
xor
add
outsb
pop
inc
addr16
or
add
mov
sbb
xchg
and
repz
sbb
cwtl
mov
jp
dec
xor
in
aad
xchg
enter
outsb
data16
pop
xchg
push
pop
out
mov
sub
xor
push
jo
push
jne
push
pop
adc
rol
mov
ljmp
sub
or
lods
fwait
add
gs
sti
adc
test
cwtl
addb
out
ret
mov
arpl
jge
jns
test
gs
mov
or
orl
sar
shlb
ja
push
push
call
mov
cmp
je
xor
inc
jmp
andl
push
addl
lea
sbbl
push
call
movl
mov
cmp
movl
jne
jmp
inc
mov
inc
decl
movsl
mov
dec
mov
ret
add
add
mov
cmp
call
leave
or
enter
push
pop
test
push
pop
mov
lea
lahf
out
cmp
ja
pop
movsl
dec
loop
ss
js
shlb
cbtw
lea
jg
popa
xor
jb
xchg
test
xchg
add
sbb
sbb
inc
ds
sub
xor
fcoml
mov
xchg
mov
pop
jge
icebp
xor
cli
xchg
mov
hlt
push
test
mov
adc
push
aas
pop
insb
push
or
pop
in
fdivl
lods
call
cltd
lcall
pushw
out
adc
test
push
xor
rolb
jge
pusha
int
movl
jmp
sbb
push
sahf
fistps
les
test
ret
add
add
jmp
andl
bound
sbb
pushf
cld
ret
ja
ret
aad
inc
jl
in
xor
xchg
test
shrl
push
iret
jae
and
mov
repnz
push
push
test
sub
inc
push
ds
nop
dec
movsb
push
mov
xchg
jmp
dec
out
ss
adc
cmp
in
addb
xchg
mov
xchg
mov
mov
mov
imul
mov
das
ffree
cmp
call
test
xchg
imul
or
cmp
cld
dec
jecxz
pop
in
dec
cmp
jmp
stos
jae
push
mov
loope
pushf
call
incl
add
jl
adc
jmp
pushl
call
mov
movl
mov
lea
jmp
lret
push
mov
out
pop
dec
push
les
add
add
add
ds
rolb
xor
mov
xchg
jl
mov
mov
pop
rdmsr
mov
sbb
xor
inc
out
imul
fldl
mov
sbb
mov
scas
into
jg
iret
add
jo
push
in
sbb
sub
xor
push
mov
sbb
and
inc
adc
decb
inc
mov
sbb
hlt
xor
insl
fsubl
and
jle
nop
rcrl
cmp
test
push
dec
jp
cmp
xlat
popa
add
test
cmpb
inc
xor
cli
lods
or
sbb
pop
fisubrs
in
mov
orb
xor
and
jne
xchg
inc
and
mov
jmp
aaa
jae
push
je
aaa
ja
out
or
add
les
add
add
add
adc
fwait
cmpsb
hlt
jo
inc
scas
cltd
inc
int
sbb
in
or
imul
inc
jecxz
stos
pop
lahf
cmp
ja
repnz
scas
push
cltd
push
ja
mov
xor
leave
fisttps
shrl
sub
cmp
rcrb
push
aam
xor
aad
cmpsb
test
adc
data16
mov
mov
outsb
ljmp
cmc
les
add
inc
popf
out
js
rcll
scas
jp
jg
jle
push
xor
mov
xlat
jecxz
sub
lcall
cmp
iret
loop
or
pushf
push
add
add
xorb
andb
xor
mov
stos
cmp
test
inc
mov
dec
mov
mov
mov
sub
sub
jmp
add
ss
ja
jg
adc
into
bound
pop
add
ret
add
add
mov
out
je
or
xchg
cmc
xor
pushf
mov
dec
fidivs
es
fnstcw
cltd
xchg
scas
stc
stos
inc
sbb
xchg
xchg
adc
lea
shll
and
sbb
fwait
push
mov
jl
xor
rcll
and
dec
sub
test
daa
adc
sub
outsb
mov
repnz
call
inc
movsb
mov
cmp
lcall
or
mov
mov
cmp
jne
sahf
mov
jbe
movsb
shlb
fadd
and
push
pop
xlat
mov
ret
ljmp
add
add
mov
ret
cmpl
ja
xor
jmp
push
push
pushl
push
push
push
pushl
push
call
add
shl
xor
jmp
cmp
mov
mov
sub
ficoms
add
ret
add
add
push
into
int
in
mov
fnsave
push
in
rclb
test
and
cmpl
repz
and
in
sarl
mov
fdivrl
fbld
mov
cmp
push
mov
sub
inc
hlt
xchg
test
fs
add
pop
lock
popa
imul
hlt
xchg
dec
jne
and
push
jle
push
jno
inc
bound
inc
into
inc
outsl
mov
mov
jecxz
dec
xor
and
jg
xchg
and
inc
sbb
mov
jl
push
pop
jno
cltd
cmp
sbb
out
shll
mov
add
leave
pop
jmp
inc
mov
jns
stc
pop
mov
sti
jl
dec
adc
add
add
fmull
sub
es
xlat
into
jl
push
mov
in
mov
jne
lcall
mov
adc
int3
cmpsl
fistpll
jno
sub
cmp
mov
ja
stos
xor
movsl
pop
mov
movsb
mov
add
mov
mov
jo
mov
dec
fiaddl
add
leave
out
cld
aas
sbb
inc
adc
mov
out
push
cmp
lret
mov
loop
sub
loop
jo
cmc
push
test
les
lret
jo
mov
enter
loop
shl
pop
push
pop
shrl
mov
mov
ret
fstl
sub
inc
lea
jnp
icebp
das
pop
pop
jb
jmp
cmp
add
mov
add
add
mov
mov
add
jmp
pushl
push
push
pushl
push
pushl
call
mov
jmp
fnstcw
sti
inc
and
adc
fadd
add
ret
add
add
push
xchg
imul
jle
add
subb
mov
fsts
pop
pop
sbb
enter
shlb
out
xchg
insl
fwait
xchg
lods
jbe
sub
mov
mov
xor
mov
cmp
pop
push
sub
mov
xor
jl
dec
sub
repnz
xchg
jo
ja
lock
push
ljmp
pushf
push
push
fisttpll
test
cs
ret
xchg
sub
mov
fwait
or
push
popf
lock
inc
in
adc
insb
std
inc
mov
push
flds
cltd
adc
cli
gs
xor
imul
sbb
mov
sub
jmp
cmc
ret
sub
out
cmc
sti
xchg
sarb
dec
fwait
enter
add
add
ds
dec
push
je
cmp
sbb
leave
pusha
cmc
imul
cli
add
sbb
push
iret
insb
pop
js
enter
nop
inc
jno
lock
pop
pusha
cli
dec
sbb
enter
sub
jo
mov
jae
stc
or
mov
imul
dec
out
adc
xchg
in
jo
cwtl
jo
push
push
ret
jecxz
clc
dec
mov
pushf
into
sbb
xor
push
push
inc
cltd
scas
es
xlat
ret
out
test
jnp
xlat
sub
popa
add
jecxz
add
in
cwtl
or
add
pop
nop
pop
jo
push
roll
fildl
add
sbb
jmp
out
dec
or
lods
out
pop
leave
add
ret
add
add
in
in
and
shrl
aam
cmc
lahf
pusha
inc
loope
mov
add
xchg
movsl
push
inc
jp
mov
lods
add
mov
push
ret
sbbl
lahf
mov
dec
cld
mov
push
outsb
jo
mov
xlat
push
pop
cmp
nop
mov
cmp
sbb
sbb
add
add
mov
and
call
push
out
movsl
cmc
push
adc
popl
les
clc
and
pop
push
mov
adc
inc
leave
mov
jle
lret
sbb
mov
or
mov
in
pusha
jo
stos
movl
movl
xor
xor
mov
sub
sub
mov
cmpl
jg
sbb
jmp
pushl
call
mov
xor
sub
mov
movl
movl
xor
movl
addl
jmp
adc
pop
mov
repnz
mov
add
lret
ret
add
add
add
sub
mov
pusha
call
in
decl
add
or
jne
mov
pushf
cmp
jns
push
icebp
xchg
insb
stc
ret
jo
add
jp
es
movsb
adc
push
jge
mov
js
rorl
push
cmp
adc
clc
mov
cmp
jns
stos
xor
jl
jns
cmp
mov
fdivs
jmp
shlb
xor
cmp
imul
push
ret
aad
and
shlb
mov
cmp
sub
xlat
cltd
outsl
fadd
or
sub
mov
fiaddl
out
fldenv
pusha
stos
xor
jl
mov
jbe
inc
and
push
jbe
add
add
inc
and
andl
mov
cmpl
ja
jmp
push
call
jmp
dec
cmp
int3
stc
in
pop
mov
xor
pshufw
add
ret
add
add
ljmp
ret
repnz
dec
or
jbe
out
pop
sbb
sub
rolb
loop
dec
testb
or
xor
cmpsl
call
sbb
mov
xor
iret
negb
lods
in
arpl
pop
fisubl
mov
stos
and
addr16
and
rcl
and
cmp
repz
lea
mov
fstps
sbb
loopne
cmc
or
add
push
dec
mov
mov
push
cmp
jb
insb
lahf
cltd
pop
xchg
pop
xor
jmp
aam
fwait
pop
push
sti
shll
test
mov
sub
int
or
or
jmp
fwait
movsl
fs
aaa
xchg
int3
inc
sub
cmpsl
lret
add
ret
add
add
js
aas
ja
xchg
mov
sub
dec
jcxz
xor
adc
inc
add
jbe
push
xor
loop
sahf
cld
icebp
and
mov
in
jnp
push
imul
call
push
inc
ja
nop
pusha
sbb
cmp
popa
js
mov
jg
sar
lds
pop
or
enter
aas
mov
les
lods
std
add
jne
stos
js
insl
out
xorb
jno
mov
and
inc
fisttps
nop
xor
jb
js
sub
add
pop
das
hlt
xchg
roll
mov
test
stos
xor
rcrl
aaa
cs
lods
popa
and
xor
mov
or
mov
jmp
outsb
jae
gs
mov
js
push
add
ret
add
add
aas
inc
mov
pusha
and
out
add
sub
xor
xchg
fbld
jbe
xor
js
jecxz
mov
decl
jle
push
fiadds
sbbl
cmc
mov
icebp
das
sbb
stos
repnz
and
shll
mov
xor
xchg
daa
pmaxub
je
mov
movsl
xor
into
push
aaa
pop
and
sbb
push
subb
lret
xor
bnd
bound
adc
sti
push
mov
int
dec
dec
ds
out
movsl
push
sbb
push
or
sbb
bound
nop
loop
gs
les
movsb
sub
xor
div
movl
mov
mov
mov
movl
cmp
movl
ja
mov
mov
jmp
or
scas
push
mov
and
nop
lods
mov
sub
add
add
mov
and
stos
or
jo
jno
cmp
mov
mov
jl
add
mov
sti
xchg
cltd
add
xchg
scas
loopne
jl
xor
and
dec
dec
jns
mov
dec
addr16
sti
mov
gs
xchg
lods
mov
xchg
xchg
xchg
mov
ret
xchg
pop
insl
jmp
icebp
jp
fwait
dec
sbb
xor
popa
enter
mov
push
sub
orb
mov
sbb
arpl
xor
push
mov
xor
cwtl
fcoml
adc
pop
arpl
addr16
loopne
dec
push
leave
stc
xchg
lods
fbstp
mov
movsl
addr16
mov
mov
ss
add
aaa
add
jne
mov
mov
cmpl
jbe
andl
addl
jmp
call
mov
mov
jmp
repnz
jg
sub
and
ret
add
add
jecxz
aaa
ja
shr
sub
pop
jl
push
sub
testl
ja
stc
lret
add
mov
call
cld
rcrl
lahf
dec
push
shlb
xor
loope
inc
jl
jecxz
mov
xchg
data16
pushf
outsb
je
fldenv
push
xchg
pop
sahf
shr
jbe
pop
or
fsubs
cmp
test
and
ds
push
xchg
mov
and
pop
pop
adc
data16
rcll
jbe
les
or
pop
aas
jb
add
add
sahf
mov
std
insl
nop
sbb
mov
pop
push
out
stos
xor
sub
jmp
clc
movsl
cmp
mov
dec
iret
jo
fnstcw
cmp
add
add
push
out
pop
test
dec
ljmp
sbb
dec
jp
pop
xchg
es
push
ljmp
test
pop
sti
pop
hlt
iret
mov
sub
pop
in
daa
out
sbb
jns
xor
int
jmp
and
fwait
and
out
ret
stc
iret
lds
pop
mov
dec
mov
sahf
mov
addr16
inc
and
ds
xchg
icebp
adc
mov
pop
cmp
mov
adc
adc
xchg
pop
dec
mov
inc
push
push
inc
or
push
sbb
in
cs
sbb
jecxz
pushf
mov
cmp
mov
sbb
mov
or
jmp
cmp
out
jge
inc
js
xchg
scas
inc
outsb
or
ret
add
add
mov
push
fisubrs
and
jno
cmp
fldl
xor
jl
mov
or
outsl
add
mov
mov
rolb
cmp
push
lds
push
dec
loopne
or
sbb
ljmp
xor
mov
ss
dec
lcall
cld
add
mov
xchg
hlt
shrl
adc
jno
in
daa
test
or
str
mov
xorb
ret
std
js
mov
scas
daa
testb
ja
movsb
mov
scas
imul
and
xor
xor
cmpl
jle
or
jmp
push
push
pushl
pushl
pushl
call
sub
jmp
lods
cs
out
lods
outsb
inc
sub
sbbl
cmp
add
ret
add
add
dec
cmp
mov
pop
and
push
jl
je
dec
mov
dec
nop
mov
mov
pop
fucomp
jp
out
pop
das
pop
ret
std
adc
mov
lock
add
push
test
scas
fisttps
testb
push
xchg
loope
ret
jl
arpl
test
jbe
int
inc
pop
mov
push
ss
and
inc
pushf
or
lcall
sbb
add
inc
rcrl
dec
lods
cmpb
xor
xor
outsl
iret
mov
divb
sti
add
cmp
dec
inc
push
cmpsb
and
sysenter
push
pushf
push
sub
cmovp
rcl
mov
fdivl
inc
add
fildl
add
sbb
idivb
lahf
out
mov
adc
jmp
rolb
add
add
add
inc
adc
mov
jae
roll
sahf
sub
fcmovbe
rclb
outsl
sti
cltd
das
lods
xchg
cmp
push
dec
adc
leave
jmp
scas
stos
movsl
ljmp
repz
call
or
adc
and
movsl
iret
mov
xorl
in
test
jns
mov
outsl
mov
scas
out
ss
jb
fwait
stos
xor
into
jle
iret
sub
xchg
inc
imul
and
pop
cmp
icebp
mov
push
mov
movsb
jge
pushf
cld
sub
xor
push
mov
mov
fidivl
mov
mov
and
mov
xor
sub
add
mov
xor
add
xor
xor
sub
and
movl
movzbl
xor
mov
adc
mov
orl
jmp
lods
add
idiv
adc
les
add
add
filds
and
les
sbb
pusha
rcrb
scas
jbe
outsl
xchg
mov
roll
xchg
xchg
movsl
pop
lock
mov
or
std
stc
lahf
notb
data16
and
jecxz
sub
cmp
lcall
xchg
mov
jge
inc
sbb
sub
dec
mov
subb
in
movsl
jp
sub
or
xor
or
mov
jge
push
sub
mov
push
inc
lret
add
cmp
fcoml
mov
cmp
call
mov
sbb
data16
inc
jnp
or
jnp
add
mov
and
decl
xor
subl
sub
addl
push
mov
andl
jmp
loop
push
xchg
ljmp
in
lahf
adc
add
add
add
cmp
jb
leave
dec
aad
jnp
sub
rorl
int
pop
stos
add
sub
dec
push
push
xchg
rcrb
cli
sbbl
sbb
inc
out
mov
mov
mul
out
cmp
aad
imull
divb
loopne
ret
xchg
ret
mov
cmp
arpl
mov
inc
mov
mov
lods
loope
pop
in
sub
nop
dec
call
xchg
test
mov
jb
js
dec
idiv
sbb
imul
adc
xchg
pop
add
lret
add
dec
push
mov
sub
rcll
sbb
mov
add
add
add
inc
adc
add
add
adcl
jmp
out
jns
sub
mov
adc
lods
inc
pop
inc
roll
add
add
add
es
inc
ss
jmp
push
aam
loopne
push
decb
daa
aas
and
in
inc
mov
adc
dec
bound
cmpl
push
pop
das
or
imulb
sbb
xchg
aad
push
cmp
idivb
loop
pop
push
ja
add
shrl
pop
mov
idivb
mov
xchg
std
inc
loop
xor
sbb
xor
rorb
js
js
xchg
mov
test
push
dec
push
pushl
out
cmp
sti
cmp
dec
repnz
addb
pop
cs
sarb
popa
std
bound
mov
test
aad
pop
push
jmp
in
push
loopne
cli
out
ja
ret
adc
add
ret
add
add
mov
in
daa
push
lret
push
mov
testl
aaa
lods
pop
dec
stos
jno
adcb
dec
push
mov
ss
sub
jae
aaa
add
ret
xor
lret
popa
stc
aaa
test
xchg
inc
jge
mov
pushf
clc
mov
push
mov
dec
jl
in
cltd
or
inc
dec
sbb
sbb
cmp
lret
into
sar
js
jge
sbb
pop
rcr
imul
daa
jno
flds
sahf
rcrb
sub
jmp
sub
orl
es
imul
ret
stos
shll
popl
jmp
jp
ja
xor
pop
jae
int3
push
call
mov
sub
jmp
aad
repnz
test
sub
jp
aam
add
add
add
mov
mov
mov
adc
test
push
aas
shr
out
sahf
jb
push
xor
inc
mov
and
inc
push
pop
fidivrl
movsb
pop
mov
xor
jb
daa
and
mov
cwtl
xchg
dec
adc
sti
lret
out
lret
mov
mov
loop
add
push
cli
js
push
idiv
push
loop
mov
iret
scas
notl
dec
subl
dec
sbb
sub
push
sbb
inc
push
call
pushf
push
pop
jl
adc
sahf
mov
pop
repnz
outsb
pop
pop
cmp
push
int3
mov
mov
sbbl
jmp
push
sti
inc
out
sti
mov
test
add
add
add
fs
pusha
js
pushf
xchg
sub
pushf
mov
fwait
stc
cmp
adc
jle
mov
lods
cmp
and
addr16
push
lds
sbb
jecxz
aam
xchg
out
data16
fcompl
pop
int3
jo
xlat
ret
jecxz
cmp
mov
push
mov
icebp
xchg
mov
xor
inc
jae
push
jecxz
fldl
jl
aaa
pop
ret
mov
inc
lcall
lret
inc
pop
cmpsb
enter
cmp
dec
cmpsl
adcb
dec
adc
jecxz
movsb
mov
mov
cmp
pop
paddq
lods
rorb
pop
push
push
inc
push
adc
sbb
sbb
loopne
inc
add
fildl
add
popa
mov
stc
movsl
and
xchg
sbb
mov
ret
add
add
sbb
aad
mov
fidivrs
jmp
mov
mov
andl
cltd
jmp
hlt
out
jmp
lods
push
popf
cmp
xchg
xor
aas
and
or
call
mov
aaa
ret
in
inc
inc
jbe
cmpsb
adc
cli
cmpsl
stc
push
adc
lcall
inc
cmp
push
clc
and
or
sub
aad
fsubl
mov
push
pop
xor
add
cwtl
or
lods
add
cltd
sbb
pop
mov
xchg
inc
fwait
sub
popa
mov
cli
inc
std
cld
pop
inc
pop
lretw
sbb
std
mov
mov
jmp
adc
push
cmc
testl
pop
in
xlat
add
ret
add
add
or
outsl
jmp
scas
int3
enter
sub
dec
jecxz
mov
sarl
adc
sub
icebp
leave
lcall
inc
jb
es
cmp
out
push
int
or
and
movsl
push
pop
test
sub
jg
pop
pop
mov
fistps
add
insb
adc
movsb
mov
pop
ret
test
in
mov
scas
gs
jmp
mov
and
jne
push
push
inc
mov
pop
std
in
lea
cmp
hlt
ficoml
mov
mov
arpl
daa
xchg
movl
test
xchg
lea
movl
push
orl
lea
jmp
sub
out
adc
push
xlat
xlat
add
ret
add
add
or
or
das
mov
bound
push
ds
std
pushf
adc
push
sub
pop
ror
jnp
jo
pop
sub
in
movsl
ljmp
and
mov
xor
push
fs
dec
jge
sub
push
or
or
pop
pop
pop
push
insl
adc
adc
repz
cmpsl
sbb
inc
enter
push
and
sbb
idivb
pop
ret
sub
call
push
shl
mov
jns
stos
and
or
out
fdivs
and
in
cmpb
inc
push
xchg
jae
pop
arpl
push
jmp
jo
cmp
imul
rorl
ret
add
add
gs
sub
call
push
out
xor
add
out
into
sub
and
jnp
scas
outsb
in
pop
mov
pop
mov
sub
xchg
movsl
popf
push
jo
stc
sbb
xchg
fucomi
jnp
xor
mov
sub
aad
aaa
aad
scas
jae
or
jns
in
inc
daa
scas
lcall
mov
nop
inc
adc
add
jb
fldcw
adc
pop
cmp
mov
ret
adcb
inc
call
pop
lahf
loop
stos
and
out
imul
test
xchg
das
popa
leave
les
dec
sub
shll
inc
or
add
ss
add
fildl
add
rolb
jns
sti
testl
fsubrs
add
add
add
leave
push
xor
iret
ja
scas
ror
ja
mov
sbb
iret
out
fisttpll
les
aas
aaa
test
jecxz
xchg
push
mov
cmp
inc
jb
dec
fcmovne
ljmp
lea
mov
daa
and
sarl
or
outsl
xor
mov
push
add
xchg
dec
out
loope
and
push
push
sub
pop
mov
mov
outsl
jmp
jg
mov
push
inc
adc
push
mov
dec
cwtl
xor
xchg
mov
push
ljmp
fidivrs
xor
and
adc
rcrl
add
push
sub
incl
add
add
add
les
add
add
in
xlat
jg
sahf
jnp
lahf
inc
in
and
add
ret
add
add
lea
fistps
outsb
call
and
dec
pop
in
sub
jno
xor
shll
lods
jecxz
cmp
xor
push
inc
mov
dec
in
mov
push
into
sub
std
pusha
sti
leave
push
add
dec
aam
mov
ss
scas
lods
rcll
addr16
or
adc
enter
push
cli
in
pop
test
inc
rolb
lret
test
push
add
mov
push
push
aad
pop
dec
scas
xchg
push
push
lds
bound
imul
xchg
je
sbb
or
and
lcall
cmp
inc
add
add
and
movl
call
mov
movzwl
or
mov
mov
xor
mov
mov
sbb
add
cmpl
jb
jmp
push
push
call
shl
mov
add
jmp
imul
movsl
jg
jmp
js
shlb
fiaddl
add
add
add
pushf
mov
test
cmpsl
out
cmp
std
inc
shufps
idivl
mov
xor
mov
inc
adc
or
jb
movsb
aad
mov
mov
jns
jbe
and
push
xchg
inc
out
or
cmc
xor
xor
stos
jmp
aam
bound
xchg
test
push
jb
shrl
lcall
sub
cltd
leave
adc
jb
lret
inc
sbb
inc
mov
in
popf
out
jno
jbe
das
mov
addr16
xchg
ficompl
fstl
test
mov
test
xchg
sub
icebp
push
or
mov
inc
in
push
mov
aaa
mov
or
adc
lret
leave
pop
loop
add
sub
mov
mov
xor
mov
xor
lea
neg
mov
and
lea
and
jmp
cmp
mull
addr16
pop
insl
aad
ret
cmpsb
fildl
add
add
add
cmp
fisttpl
add
jecxz
stos
push
pop
sbb
pop
sub
xchg
or
insb
jg
and
lock
jmp
pop
sbb
in
out
sarl
cmp
push
xchg
test
inc
cs
les
and
rcrl
pop
mov
movsb
cmp
cmpsl
sahf
dec
out
xor
sbb
daa
aas
sbb
hlt
data16
imul
mov
xor
jno
cmpsl
push
push
out
xchg
jle
cld
add
adc
push
mov
test
ret
loopne
jecxz
das
in
sbbb
lods
sbb
push
mov
outsb
mov
sub
pop
jp
movsl
cli
rolb
fdivs
popf
mov
mov
adc
mov
addl
xor
orl
jmp
jno
dec
nop
out
fdivrp
cmc
push
stos
sub
imul
add
frstor
int3
push
lahf
lahf
lea
cwtl
stos
add
outsl
xor
out
dec
outsl
jecxz
and
into
jecxz
sbb
sub
mov
subb
into
adc
pop
enter
mov
scas
iret
cmp
sbb
fs
iret
addr16
lcall
or
mov
mov
fs
clc
fs
lods
hlt
xchg
mov
mov
cltd
push
pop
xchg
js
dec
leave
dec
adc
and
ds
and
xchg
push
add
in
cli
xor
xchg
jae
push
mov
nop
pop
mov
aaa
mov
cmp
mov
or
jecxz
pusha
and
mov
lea
xor
or
mov
movzbl
or
mov
movl
mov
subl
mov
and
jmp
sbb
repz
mov
std
dec
pop
in
mov
ret
add
add
or
cmp
test
in
jo
mov
pushf
fisubs
mov
add
data16
test
in
mov
cltd
lods
jge
test
xchg
xor
sarl
inc
fdivs
push
popa
lods
and
cmp
jae
xlat
pop
sarl
fimull
inc
push
addr16
es
and
lods
add
mov
jp,pt
clc
aam
mov
jnp
out
cwtl
hlt
aas
and
xchg
fdivl
cmp
dec
push
stos
push
mov
enter
add
jne
aaa
movsb
jnp
xchg
cmp
add
inc
mov
xor
cld
jno
mov
cmpl
jb
xor
jmp
pushl
push
push
pushl
call
mov
mov
mov
movzwl
movzwl
jmp
pusha
xchg
inc
and
mulb
pop
xor
out
fldl
add
add
add
or
in
or
sub
ficoml
test
push
nop
push
lds
jmp
or
mov
and
pusha
ds
lods
jno
jb
bound
fsubl
repz
or
jnp
xchg
out
lea
mov
int3
or
mov
adc
clc
push
jmp
mov
imul
adcb
in
jge
inc
iret
add
in
mov
or
icebp
cmp
mov
hlt
jg
lock
jo
aad
or
repz
aad
adc
lcall
mov
pop
out
sbb
and
mov
sub
sub
xor
roll
movzwl
adc
jmp
mulb
dec
fcmovnu
sti
imulb
fs
dec
imul
fiadds
add
add
add
dec
dec
xor
mov
lahf
popa
subb
lea
in
in
xchg
adc
cs
dec
jp
adc
rcrb
int
aas
pop
mov
jbe
and
gs
fildl
add
sub
pop
push
xor
stc
lcall
stc
xor
mov
mov
adc
fdivs
xchg
test
shrb
or
in
cli
rcrl
movl
mov
js
jp
pop
mov
out
jbe
push
inc
dec
sbb
adc
mov
adc
cmp
clc
inc
mov
dec
sahf
mov
repz
gs
push
imul
movzwl
orl
or
or
addl
jmp
cmpsb
inc
dec
xchg
out
sahf
pushl
sub
les
add
ret
add
add
leave
sub
enter
into
lahf
push
inc
add
pop
in
cld
in
jb
and
into
xchg
std
sub
push
inc
ret
addr16
mov
es
or
push
shr
mov
mov
test
lock
inc
fbld
adc
mov
dec
testb
inc
xchg
or
mov
xchg
dec
repz
mov
pop
and
mov
sub
gs
or
imul
adc
iret
sbb
mov
sti
shll
push
outsl
pop
jl
cmp
xor
lret
xor
adc
jns
inc
enter
das
inc
jl
cmp
jae
inc
icebp
or
rorl
add
cmp
sbb
inc
and
mov
andl
mov
mov
adcl
mov
mov
adc
mov
mov
mov
xor
add
mov
xor
mov
addl
mov
decl
mov
xorl
mov
movzwl
adcl
jmp
cmp
sbb
fcomi
in
test
pop
aaa
cmp
pop
cmp
add
ret
add
add
push
std
cmp
fldl
arpl
cld
cmc
sub
xchg
mov
popf
aas
or
mov
and
testl
add
pop
xchg
add
mov
mov
idiv
cmc
xchg
inc
outsl
in
fstpl
inc
cmc
daa
pop
mov
cmp
push
icebp
mov
cmp
mov
or
lock
push
inc
or
cmp
cmp
int
mov
aas
in
outsl
cmp
outsb
mov
lcall
jg
mov
jle
xchg
fwait
mov
shrb
cld
or
js
into
cmp
mov
and
mov
jmp
aas
or
aas
mov
insl
int
clc
push
jo
loopne
add
add
add
cmp
mov
loope
jne
out
js
ficomps
jno
insb
xchg
sbb
jbe
rcl
loopne
in
cltd
filds
cmp
xchg
dec
sbb
ficomps
out
shlb
hlt
push
sub
lock
insb
ret
notb
and
dec
call
cmpsb
imul
daa
fs
lcall
or
xchg
jae
add
stos
dec
into
gs
lahf
cmpsl
add
mov
nopl
nop
scas
rcr
jmp
mov
iret
inc
xor
stos
dec
xchg
rolb
or
in
ljmp
dec
cmp
xchg
fwait
or
mov
jmp
daa
bound
pop
out
repnz
ror
mov
add
add
inc
leave
dec
add
and
xor
shr
popa
rcl
xor
inc
andl
sub
enter
mov
cmpsl
pop
adc
int3
dec
xchg
add
cmp
mov
inc
fnstcw
lcall
push
mov
aas
les
cmpsb
mov
sub
jle
dec
mov
or
clc
jmp
nop
cmpsb
movsb
add
pop
hlt
push
fildl
jb
outsb
adc
ret
lods
jle
data16
add
pop
movsl
mov
or
fs
dec
and
pop
jge
popf
pop
imul
nop
or
stos
or
cmpsl
stos
add
jnp
or
test
mov
inc
push
pop
imul
orb
scas
roll
test
dec
and
imul
jmp
lea
lcall
xlat
aas
ret
fiadds
add
add
arpl
enter
pop
lods
sbb
mov
loope
xchg
ja
adc
stos
add
and
mov
sbb
dec
dec
jge
popf
pop
jnp
sub
sti
pop
push
jno
sub
push
es
cmc
mov
dec
lahf
xchg
mov
dec
rol
xor
lcall
and
and
daa
inc
cs
sub
adc
sub
scas
mov
sbb
sub
outsl
pop
jmp
movsb
and
test
cli
ss
cwtl
cltd
clc
rcr
xchg
int
sbb
mov
push
mov
xchg
mov
mov
push
scas
rcr
mov
mov
xor
xor
aad
mov
pinsrw
mov
movl
jmp
push
mov
jp
cmpsb
rclb
daa
lret
jecxz
add
add
add
jne
pop
int3
and
mov
jmp
jecxz
add
leave
stos
sub
adc
or
les
movswl
dec
rolb
dec
addr16
adc
adc
pop
fisubs
pop
jns
enter
pop
adc
mov
les
pop
add
pop
push
adc
pop
xchg
jle
adc
arpl
jb
sub
or
popf
decb
mov
sti
mov
jns
idivb
and
cmp
sbb
pop
xlat
ds
cwtl
mov
fstl
imul
pop
jmp
sahf
and
mov
lock
and
movl
mov
jmp
sbb
jne
jge
cltd
jae
mov
in
add
add
add
ret
gs
nop
jmp
jnp
mov
movsb
pop
pop
pusha
push
push
les
iret
mov
loopne
mov
jecxz
icebp
mov
lret
addr16
jno
push
and
sub
xor
hlt
test
sub
dec
lods
add
nop
ja
mov
stos
fimuls
repz
xor
mov
adc
inc
icebp
or
adc
andb
enter
inc
inc
rcll
or
pushf
ja
nop
ss
pop
cmp
push
cmc
xchg
xlat
cwtl
sub
push
fbld
and
andb
cld
cli
mov
dec
jno
sbb
daa
std
cmp
mov
je
lods
insl
sub
mov
dec
sub
xchg
leave
movl
cmp
jg
movl
jmp
push
int
dec
stc
outsl
fildll
mov
mov
ret
add
add
mov
dec
xchg
mov
clc
outsl
cmp
jg
imul
jns
fs
xchg
repz
fs
shl
or
xor
setge
mov
xchg
sbb
imul
outsl
adc
ljmp
and
mov
lahf
std
cwtl
mov
fdivs
negl
inc
xlat
cld
add
xchg
shlb
es
dec
fistpll
sub
adc
inc
cwtl
insb
jo
aaa
inc
xchg
add
dec
insb
xchg
inc
filds
imul
mov
adc
mov
aaa
push
js
out
dec
inc
rcll
sub
or
shrb
outsb
inc
push
inc
icebp
aam
pop
movl
jmp
sbb
cmc
jae
movsl
les
add
ret
add
add
fiaddl
insb
sub
call
add
inc
ds
xchg
cmpsl
pop
shl
lods
addr16
push
sub
ret
and
xchg
cmpsl
or
jae
lods
add
out
in
imul
sub
shl
and
leave
pop
push
and
imul
lods
sub
jae
sbb
pop
call
and
sahf
inc
jo
jns
ret
cmp
mov
mov
mov
push
mov
mov
sub
jmp
pop
cltd
mov
lods
push
mov
leave
cmp
ficomps
jno
jno
lods
aad
push
nop
test
leave
add
push
jecxz
test
lret
les
dec
movl
add
movl
adcl
movl
jmp
imul
lret
test
mov
ret
add
add
insl
or
sarb
sub
lsl
int
or
sti
and
xchg
call
cmpsb
push
int
ffree
in
lahf
sahf
and
and
fs
mov
inc
in
js
xchg
inc
mov
imul
pop
popf
mov
stos
cli
dec
inc
push
lods
ljmp
sub
and
lcall
jge
fs
adc
dec
lahf
cmc
push
mov
ficoml
cmp
shl
loop
imul
and
out
outsl
mov
push
nop
insb
mov
fildl
fisttps
xchg
cmp
cmpsl
jne
xchg
sbb
lods
mov
clc
fld
inc
and
or
add
movl
cmpl
jg
jmp
push
push
call
movl
mov
mov
mov
jmp
and
lahf
sti
lahf
lcall
stos
in
cwtl
testb
out
add
add
add
push
popa
jo
faddl
adc
cmp
xchg
scas
push
les
aad
xchg
cli
pop
les
push
in
push
jecxz
add
lds
fbld
jge
fildl
mov
add
aad
insl
jo
repz
cmp
stos
and
repz
std
int3
or
cmp
daa
loopne
sahf
clc
ja
sbb
dec
adc
fldenv
inc
or
jne
addr16
ret
negl
jnp
jno
sbb
cld
cmc
movsb
scas
ret
cmp
enter
jne
cmpsl
mov
cmp
mov
xor
mov
adcl
xor
or
mov
orl
push
push
decl
push
push
adcl
call
addl
mov
subl
mov
xor
cmpl
jge
movl
jmp
push
pushl
call
jmp
cmpsl
js
inc
inc
mov
or
out
add
add
add
fstpl
imul
stos
pop
fnstcw
lahf
push
shrl
inc
push
dec
nop
pop
adc
and
fs
in
xor
dec
jno
xor
xor
addr16
lock
add
imull
cmpsb
shrl
imulb
inc
bound
mov
aas
add
aaa
or
sbb
inc
push
test
jle
push
rep
xor
mov
aam
out
sub
jge
outsb
and
jp
mov
jae
inc
mov
mov
and
lcall
hlt
fdivl
lods
je
shlx
cmpsb
jbe
dec
mov
push
pop
push
mov
jb
sbb
xlat
stc
lods
lcall
add
mov
and
jmp
pop
mov
sar
bnd
rcrb
fnsave
call
add
sbb
fnstsw
orl
push
std
cli
push
test
inc
divl
adc
pop
xchg
sti
pushf
jns
in
loopne
and
cltd
dec
xchg
fcomp
ss
addr16
lods
iret
push
fidivl
je
call
inc
cmp
push
xorb
dec
fwait
jbe
and
dec
fistps
fnsave
dec
in
stos
lcall
mov
std
movsb
dec
mov
xchg
lret
inc
cmpsb
pop
and
scas
scas
pop
mov
lcall
mov
lods
lret
nop
movsl
icebp
mov
out
pop
xor
aaa
into
mov
or
or
cmp
scas
bsr
mov
sub
mov
movl
mov
mov
sub
and
jmp
outsb
js
cmc
ds
sti
mov
movsb
daa
mov
ret
add
add
pop
mov
lds
inc
adc
sti
xchg
dec
sub
adc
jl
mov
daa
jo
das
cmpl
repnz
arpl
cmpsl
lahf
jb
xchg
push
xor
movl
sub
push
dec
jle
pop
pop
and
mov
sbb
lock
mov
cltd
push
cmpsb
iret
loop
inc
andb
add
add
pop
push
xchg
insl
in
in
pop
jecxz
in
and
shr
dec
xchg
jle
and
cltd
add
mov
sti
mov
dec
outsl
sub
push
push
adc
je
mov
push
mov
outsb
lods
jmp
imul
out
mov
lahf
jae
xor
sbbl
movl
cmpl
ja
sbb
jmp
pushl
call
movl
movl
jmp
inc
mov
jb
xchg
repnz
sbb
fdivs
ljmp
subl
mov
push
push
pop
jle
or
loope
into
loopne
mov
mov
mov
ljmp
sbb
loopne
mov
movsb
out
mov
xchg
or
jge
and
or
mov
ljmp
pop
xor
cmp
mov
cmpsl
imul
sbb
lahf
pop
mov
xchg
xor
js
enterw
push
xchg
imul
add
sbb
add
push
test
and
call
xor
pop
aad
jle
clc
mov
jbe
leave
sbb
clc
push
and
mov
fildl
add
aas
in
sbb
hlt
xor
mov
loop
add
ret
add
add
pop
popa
jb
push
dec
sbb
push
aaa
jl
sub
leave
xchg
mov
andl
pusha
inc
addr16
in
out
test
sub
int3
mov
jnp
sbb
lea
cmp
shl
call
cmc
jl
cmp
jmp
lods
sti
mov
es
mov
adc
in
arpl
xchg
scas
test
in
push
adc
xor
in
int3
inc
mov
cmp
gs
pop
and
in
cmp
push
xor
mov
out
enter
fsubrs
jns
into
pop
and
adc
xlat
inc
negl
mov
cmp
cld
movsl
sub
and
scas
dec
add
mov
mov
cmpl
jg
jmp
pushl
call
jmp
mov
push
insb
pop
cld
mov
or
movsl
jmp
add
add
add
pushf
pushfw
aam
sbb
mov
or
push
fisttpll
mov
arpl
repnz
xchg
cltd
and
pop
cmpsb
and
push
jae
fidivrs
stos
lock
rcrb
sub
jle
adc
lods
cmp
xchg
xor
rolb
mov
repz
ljmp
jno
js
fsts
dec
mov
inc
clc
cwtl
mov
adc
ds
imulb
cld
sbb
idiv
dec
push
in
repnz
mov
jecxz
or
repz
test
jge
int3
dec
shl
popf
mov
mov
push
mov
pop
mov
cli
sbb
xor
arpl
sbb
push
and
mov
xor
xor
sub
mov
sbb
cmpl
jge
jmp
push
call
jmp
sub
das
das
sub
or
lahf
xlat
mov
lahf
push
add
add
mov
jmp
pop
fstps
xlat
sbb
cmc
jns
ljmp
and
and
jl
stos
xorl
and
insb
lods
pop
int3
push
dec
push
pop
out
mov
imul
add
adc
jmp
xor
pop
jg
insl
xchg
and
fwait
into
cmp
sub
pop
sbb
in
inc
xchg
sbb
incl
dec
or
mov
and
push
inc
fadds
cmc
xchg
jnp
cmpsl
adc
aam
add
mov
jg
fildl
loope
adc
lea
mov
inc
es
sbb
ljmp
mov
jmp
push
into
or
lahf
pushl
addr16
mov
sub
add
ret
add
add
stc
aad
std
out
jns
in
push
sahf
pop
jl
leave
adc
cmp
mov
call
scas
mov
test
mov
dec
inc
icebp
mov
lds
add
cltd
mov
xchg
dec
xchg
push
ss
mov
rorl
lea
sub
inc
push
jg
rcrl
hlt
je
arpl
fwait
mov
xchg
movsl
addl
mov
outsb
sbb
sti
pop
cmp
inc
dec
int3
loope
lods
jae
or
loopne
jo
ret
or
push
cmp
ja
test
dec
shll
clc
cmpsl
stos
pop
push
je
ret
and
sbb
mov
jmp
inc
leave
push
rcr
ror
sbb
jo
neg
dec
out
in
add
ret
add
add
addr16
les
cmp
mov
jns
and
xchg
and
hlt
scas
inc
dec
xchg
cmc
jo
bound
xchg
cmp
cmpsb
sub
insb
es
pop
pushf
ja
rorb
aad
enter
imul
hlt
cmp
mov
sbb
enter
stc
cli
jne
pop
lret
and
pop
fldcw
xchg
clc
mov
es
ds
add
pusha
pop
outsb
lds
pop
scas
clc
daa
je
push
out
jb
jae
or
sub
mov
add
jp
sub
pusha
iret
aad
push
data16
add
adc
movl
jmp
xchg
jp
inc
decb
cli
ss
mov
mov
add
ret
add
add
push
mov
mov
pop
xchg
std
repnz
jmp
aad
enter
and
ds
push
es
icebp
shlb
scas
pop
dec
cltd
cltd
add
sub
orl
or
cld
fisttps
add
sub
popf
les
mov
cwtl
lcall
fstl
push
mov
dec
in
cmpsb
popa
sub
test
mov
lahf
test
clc
or
stc
mov
je
clc
jo
pop
and
xchg
or
out
out
adc
push
mov
xor
das
or
in
dec
out
flds
push
lock
xor
add
std
fs
or
adc
mov
ret
or
inc
add
sub
add
test
add
add
lret
je
mov
jmp
jns
lret
mov
pushl
mov
inc
cmc
sbb
out
add
ret
add
add
sbb
xchg
xchg
push
jno
dec
sti
mov
adc
mov
stos
je
daa
sub
daa
xchg
fs
pop
push
js
adc
aas
shrb
sbb
out
mov
push
sub
cli
call
cmpl
cwtl
sub
pop
cmp
xchg
inc
sub
pop
push
adc
in
pusha
stc
inc
movsb
enter
mov
sub
out
xor
mov
out
add
js
pop
jg
and
ret
mov
push
repz
xchg
in
imul
mov
lods
mov
push
loope
xchg
cmp
lret
mov
cmpsb
aas
mov
add
jmp
insl
shrb
ljmp
fnstcw
xor
add
add
ret
add
add
pop
dec
inc
sub
pop
mov
sub
jmp
pop
neg
pop
out
push
hlt
ja
iret
xchg
add
inc
push
in
lret
dec
lret
pop
lock
mov
jle
or
mov
mov
and
andl
sbb
imull
sbb
add
jne
in
xor
push
jno
mov
aad
sahf
xor
pusha
lcall
leave
jo
repnz
jbe
sahf
add
pop
stos
cmpsl
mov
popa
mov
pop
out
scas
or
jecxz
sbb
into
repnz
dec
in
das
cmp
loopne
cmp
int
mov
jmpw
repnz
xchg
jmp
fwait
popaw
xchg
std
xchg
ljmp
lcall
cli
lock
ret
add
add
scas
xlat
popa
dec
jl
lcall
popa
push
inc
jno
rorb
xchg
inc
cvtps2pd
cmp
jle
sahf
aas
into
pop
lods
in
test
mov
fbld
insb
mov
shrl
lds
lds
sbb
inc
dec
test
dec
jp
adc
das
lock
mov
and
inc
jnp
in
or
cmp
push
pusha
inc
pushf
push
adc
aam
fs
xchg
mov
ret
mov
dec
inc
mov
push
fildll
in
xchg
movsl
cmpsl
adc
fmuls
mov
icebp
movsl
les
lret
cld
sub
pop
push
push
push
arpl
shr
fildl
add
adc
jnp
rcll
mov
mov
add
add
lds
adc
xor
outsb
popf
pop
in
and
ds
mov
jae
sahf
pop
inc
mov
add
mov
cmp
clc
cmc
dec
and
xor
movsb
imul
xchg
repnz
jno
dec
into
repz
cmp
enter
or
cli
aas
lods
mov
ss
dec
or
mov
jg
bound
inc
inc
aas
test
icebp
divl
sti
andb
aas
xchg
enter
lods
stos
xchg
jge
leave
cmpsb
pop
push
add
xchg
adc
ja
cs
call
mov
pop
icebp
push
mov
xchg
inc
mov
lods
lods
sub
xchg
sub
add
fildl
add
sub
and
jge
xchg
mov
mov
ret
add
add
mov
lods
gs
das
outsl
cmovns
bound
sbb
inc
or
clc
shr
and
dec
leave
adc
addr16
imul
mov
lea
loope
adc
cld
addr16
fnsave
mov
mov
loope
jg
mov
pop
pop
gs
out
pushf
sbb
add
mov
icebp
xchg
add
out
rcll
jne
pop
sbb
into
imull
mov
cmp
dec
movsb
int3
frstor
in
push
bt
rorb
mov
jl
clc
mov
push
repnz
in
or
nop
mov
add
xor
stc
adc
test
push
scas
fsubrs
xchg
or
out
mov
rorl
push
and
mov
jmp
mov
or
out
mov
jl
call
repz
ret
add
add
lret
xlat
movsl
jbe
mov
test
sub
mov
or
popa
adc
clc
ret
adc
fwait
pop
inc
cltd
pushf
dec
xchg
or
push
jb
int3
stos
or
addb
lds
xor
mov
push
cli
scas
roll
scas
addr16
dec
mov
cmp
loop
push
ret
cmp
jp
mov
popa
iret
repnz
inc
adc
push
add
cmpsl
xor
push
push
mov
xchg
pop
pushf
cmp
push
jge
xchg
pop
rorl
jnp
in
and
xlat
sbb
jnp
xorl
mov
aam
dec
into
out
add
insl
fidivrs
lahf
xchg
pop
xor
or
mov
cmp
jne
mov
cmp
je
mov
jmp
movsl
cmp
movsl
lahf
mov
cmp
std
inc
add
hlt
add
ret
add
add
aaa
jge
jae
addr16
jns
add
adc
hlt
sti
and
gs
xorl
inc
fbld
push
adc
into
inc
add
sbb
mov
push
jb
add
shl
push
insl
insb
outsl
jg
popa
jg
sar
jmp
pop
jns
pop
mov
pop
mov
fcompl
push
and
mov
mov
sub
jae
cmpsb
xor
outsb
pop
and
shl
test
sbb
mov
pop
add
enter
test
jb
or
jae
push
sub
movb
cmp
sbb
cltd
negl
int3
sbb
add
sbb
scas
xchg
jle
xor
cmpsl
push
jecxz
lds
es
pop
movsb
sbb
movl
and
sub
jmp
sub
in
pushl
jne
aad
mov
leave
hlt
add
ret
add
add
dec
or
pop
pop
mov
mov
add
mov
movsb
ret
adc
cltd
push
dec
push
sti
rcrb
adcb
test
cmp
jno
repz
and
testl
sbb
lea
mov
daa
clc
push
test
mov
iret
cwtl
adc
cmp
mov
inc
sub
mov
pop
leave
nop
arpl
dec
adc
mov
into
outsl
pushf
in
mov
inc
stc
jg
and
jecxz
jno
jae
das
aas
sbb
jmp
or
out
xchg
nop
push
cmp
int3
sub
mov
nop
sbb
jo
pop
xchg
sub
xor
xor
shr
shl
or
add
xor
jmp
and
int
lock
jns
mov
add
ret
add
add
call
stc
ja
sub
mov
scas
fdivrs
movsb
add
mov
fidivrl
rclb
clc
mov
pop
enter
test
sub
xchg
in
popa
and
jbe
in
mov
adc
int3
ret
inc
pop
aas
aas
mov
hlt
adc
call
sub
adc
xlat
push
mov
rdmsr
push
shll
lea
pop
cmpsb
pop
sahf
xchg
jns
aad
dec
add
cmp
imul
and
xlat
lret
xchg
fs
mov
and
inc
adc
cwtl
push
mov
jb
mov
stos
xor
adc
push
add
adc
xor
xor
jmp
pop
lds
xor
jnp
dec
int3
mov
int
testb
ret
add
add
xchg
or
aad
call
mov
pop
or
repz
in
or
push
mull
push
negl
mov
in
out
xor
std
mov
ficoms
pushf
jne
xor
sbb
ljmp
xchg
xchg
dec
fnstenv
push
pushf
aaa
cs
push
addr16
imul
out
leave
xor
in
inc
shll
sbb
adc
iret
lea
or
rcrl
imul
jge
imul
in
sub
loope
inc
dec
fucomip
dec
jb
pop
cmp
inc
cli
out
mov
aad
popf
loopne
fs
je
cmp
jne
jmp
sti
mov
mov
xchg
add
add
add
loopne
movsb
mov
scas
sub
jle
sahf
test
aaa
sub
xchg
andl
int3
pusha
sbb
js
out
lea
pop
pushl
xor
out
push
xchg
xchg
int
cmp
sub
and
adc
cltd
mov
in
pop
dec
push
orl
jo
test
mov
jle
xchg
cmc
pop
xor
cltd
or
loope
mov
out
push
leave
push
data16
movsl
daa
inc
mov
mov
mov
fs
cltd
cmp
mov
loopne
pop
jno
mov
xlat
nop
mov
lea
leave
popa
push
lods
xor
jle
cli
decl
test
add
mov
cltd
jmp
cmpsl
push
pop
mov
push
pop
adc
mov
add
ret
add
add
jge
fwait
xor
dec
fbstp
lea
jae
js
xor
ret
jmp
inc
dec
xchg
jns
mov
mov
cs
fcmovb
dec
cltd
mov
test
sub
xchg
aaa
sub
sbb
imul
jl
clc
and
jg
fstps
xchg
inc
cmp
sub
xchg
xchg
mov
aas
dec
clc
jp
push
lock
mov
jnp
and
daa
cmp
inc
xchg
cmpsl
into
cltd
sbb
or
pop
jns
and
sti
scas
inc
push
loopne
mov
lods
clc
and
shrb
sub
jae
fdivrp
mov
adc
xor
jmp
dec
and
dec
std
stc
frstor
hlt
sub
aaa
pop
sarb
add
add
addb
jg
mul
test
int
das
pop
add
stc
insb
and
mov
xor
idivl
push
ror
push
jl
mov
sbb
xor
icebp
mov
push
and
rol
push
hlt
mov
aaa
in
ljmp
pavgb
jae
test
lea
test
inc
fisubl
dec
cmpsb
fiadds
leave
movb
push
cmpsl
mov
push
pop
ja
sub
sub
inc
add
pop
xchg
adc
push
pop
imul
xchg
xor
jmp
test
dec
mov
lret
inc
not
and
and
push
and
mov
jmp
pop
xor
push
fdivr
xor
andb
add
add
add
xchg
add
sub
roll
fcoms
adc
movsb
fnsave
inc
pop
pushf
pop
mov
mov
mov
in
ja
dec
and
mov
nop
inc
mov
popf
sub
or
cmp
rcrb
push
outsl
inc
loope
loopne
xchg
adc
nop
mov
push
in
scas
arpl
inc
mov
repnz
out
mov
cmpsb
dec
dec
lret
xor
and
and
jnp
push
push
inc
stos
icebp
add
and
inc
fmul
sub
and
dec
addl
mov
mov
push
and
jmp
push
sbb
xlat
std
ljmp
dec
push
cli
add
ret
add
add
push
jne
xchg
push
inc
shl
sarb
inc
adc
lret
sub
mov
les
or
push
sbb
sub
movsb
inc
inc
ds
lret
bound
lahf
ror
mov
das
dec
sahf
dec
cmp
mov
fisttps
dec
arpl
out
mov
and
push
sub
lret
gs
xlat
insb
ja
fldenv
stos
ret
sbb
pop
xchg
cmp
ss
in
addr16
testl
mov
es
mov
out
push
cmpb
jo
ror
sub
in
mov
popa
fmulp
xor
mov
jmp
arpl
sbb
jecxz
xor
loope
add
ret
add
add
in
mov
adc
nop
and
pusha
lods
mov
sahf
inc
sbb
cmp
push
push
fnstsw
cmpb
sub
add
push
jb
xor
repnz
stos
pop
insl
mov
sbb
cmp
fisubs
inc
push
adc
test
xchg
testb
es
ret
add
mov
push
add
test
xchg
push
mov
fiadds
fs
fcmovnb
mov
mov
je
push
jno
imull
and
fs
adcb
sti
jb
push
enter
and
or
subb
in
cmp
jne
mov
jmp
jg
and
jg
pop
stc
divb
pop
lds
ret
movsb
sti
add
ret
add
add
in
and
gs
mov
jg
inc
xchg
xchg
out
fcmovnbe
pop
jmp
fs
add
mov
cltd
mov
daa
out
xchg
sbb
shrb
sbb
pop
xchg
mov
int3
ljmp
xchg
bts
fwait
iret
sub
push
pop
mov
inc
mov
stos
mov
or
gs
inc
pop
jo
loop
outsl
std
pop
jb
rorl
mov
dec
pop
adc
roll
adc
into
or
adc
fnstenv
scas
sahf
pop
xlat
mov
in
rcr
jo
pop
inc
xchg
or
shlb
stc
lcall
cmp
xchg
cmp
jne
movl
movl
mov
xor
add
adc
mov
mov
mov
xor
jmp
add
push
dec
push
lret
mov
cwtl
or
ret
add
add
cmp
pop
push
pop
push
xor
mov
imul
xchg
inc
mov
gs
pop
pushf
add
xor
clc
sbb
mov
into
mov
out
xchg
cltd
ret
jge
push
movsl
and
push
gs
jmp
fs
inc
jmp
dec
jp
jbe
aam
mov
mov
outsl
mov
mov
or
fstpl
imul
addl
and
add
sarb
lret
sbb
xchg
ds
cmp
dec
into
mov
test
xor
xor
push
or
fcomp
icebp
orl
pop
fld
leave
fstl
fnsave
lret
mov
cmp
jne
jmp
jae
push
inc
sahf
out
jg
rcl
or
sub
add
ret
add
add
sti
outsb
xchg
xchg
mov
mov
push
test
aam
mov
inc
fdivrp
dec
insb
jmp
mov
fst
int3
pop
stc
add
or
or
jg
pop
ret
dec
test
dec
imul
call
mov
ret
or
mov
outsb
cmpsl
mov
rcll
fstpt
loope
jae
mov
cmpsb
stos
inc
cs
test
or
repnz
cmpsb
mov
jge
add
pop
leave
cmc
movsb
push
loope
lcall
mov
add
mov
add
fildll
push
sub
lret
loop
inc
mov
js
dec
mov
and
inc
idivb
mov
stos
xchg
mov
fstpl
test
add
jmp
pop
and
push
jnp
pop
sub
dec
hlt
push
ret
in
std
add
ret
add
add
out
push
sbb
mov
jl
jne
xchg
lret
push
sahf
jbe
push
imul
add
test
fsubrs
jne
xlat
in
pusha
add
mul
adc
sbb
das
andb
cmp
cwtl
mov
dec
and
cmp
mov
lahf
ja
stc
push
jbe
xchg
das
pop
xor
loope
jge
pop
dec
mov
lret
sub
mov
add
nop
push
mov
mov
sub
ljmp
imulb
in
sarb
dec
test
inc
cmp
push
xchg
fldenv
fcmovbe
fsts
mov
enter
jmp
data16
push
std
out
ss
lock
add
add
add
ljmp
dec
hlt
out
xchg
test
add
xor
lea
mov
sub
pop
push
sub
out
push
lahf
sbbl
and
sahf
dec
in
fs
jge
adc
dec
ss
stos
add
pop
push
mov
sbb
jb
xor
testb
cmp
adc
sub
leave
or
arpl
imull
into
subl
jmp
imul
or
jl
sbb
repz
push
mov
movb
imul
inc
push
sti
lcall
fucomi
add
mov
not
popa
mov
clc
mov
mov
and
mov
mov
mov
jmp
fmull
adc
dec
adc
mov
incl
add
add
add
aam
pop
push
and
test
das
mov
ja
daa
std
popf
xchg
mov
dec
adc
movsl
sbb
and
repz
mov
mov
fisttpl
ds
jae
loope
or
push
adc
pusha
push
les
fisubl
xchg
inc
popf
xor
mov
mov
xor
mov
adc
jno
stos
popa
and
sub
sbb
fistps
mov
mov
add
sub
jle
xor
add
mov
xor
or
jne
xchg
out
gs
jmp
jge
jle
scas
adc
dec
and
jmp
push
xor
jl
cmp
add
add
add
add
add
inc
data16
sbb
jl
push
fldl
test
sbb
pop
test
jg
mov
xchg
insb
ja
or
mov
pop
mov
test
mov
scas
ret
cltd
scas
loope
mov
leave
imul
lret
data16
jae
nop
adc
out
and
add
jne
pop
xchg
out
adc
lea
push
js
into
adc
shl
imul
or
pop
imul
jb
jb
or
dec
jae
inc
push
fistpl
das
imul
lods
push
cld
lds
lea
cmp
rcrb
push
push
xlat
cmpsl
sbb
bound
fildl
add
daa
ror
daa
aas
out
rol
lock
xchg
imul
add
add
mov
in
jno
adc
fnsave
add
jb
lret
adc
xor
xor
sbb
daa
iret
sar
movsb
mov
cmpl
jae
cmp
sub
or
push
push
sbb
inc
int3
cld
test
in
lds
or
aam
sahf
pop
test
enter
xor
sbb
stos
cltd
lret
in
imul
jns
inc
dec
iret
cmp
sbb
aaa
xchg
and
mov
aad
pop
jl
ja
push
add
in
sub
out
pop
jbe,pt
inc
lret
js
addr16
in
testl
mov
or
mov
pop
jmp
adc
mov
mov
add
mov
mov
xor
jmp
cmp
sar
mov
sbb
mov
ret
add
add
arpl
adc
jb
pop
push
fcomp
inc
sub
loop
shll
les
mov
lret
in
xor
inc
outsb
lock
sti
pop
lods
js
inc
or
test
mov
and
les
sub
shll
sbb
mov
ret
mov
mov
rcr
add
cmp
pop
cmp
iret
or
add
xor
fs
xchg
push
das
sub
pop
lcall
inc
mov
inc
and
jg
push
movsl
dec
and
ret
aam
push
dec
jne
inc
sahf
and
cmp
mov
cs
stos
mov
fnstcw
insb
sub
push
jmp
inc
dec
jae
jnp
inc
jg
adc
jg
add
ret
add
add
xchg
mov
outsl
cmp
popf
jge
or
ret
ja
and
xchg
mov
mov
mov
loopne
es
ja
mov
ja
icebp
add
and
repz
clc
mov
inc
and
dec
jae
lret
jnp
dec
xor
push
xchg
jmp
nop
cmp
sbb
ljmp
mov
loopne
movsb
push
outsl
mov
pusha
dec
push
jle
pop
aas
and
addb
lcall
mov
lea
enter
outsl
loop
ss
dec
jae
jmp
mov
ljmp
test
test
nop
lcall
test
xchg
out
dec
mov
ljmp
dec
jmp
lea
jmp
int
mov
mov
nop
adc
add
ret
add
add
adc
stos
mov
mov
sub
dec
lock
fidivrs
fidivrl
negb
int3
mov
adc
loope
fs
daa
lahf
jg
pop
cmp
or
insl
lret
sti
push
adc
push
xor
movsb
pop
and
jbe
push
push
pop
xchg
test
lods
lcall
je
test
add
arpl
pop
dec
dec
add
or
push
push
mov
xor
push
and
sbb
mov
push
shlb
rorb
hlt
or
xchg
fsubp
jp
lahf
sahf
or
loope
loopne
leave
fcompl
sarb
fcmovu
pop
cwtl
fsts
add
or
and
stc
adc
pushl
pushl
pushl
jmp
lcall
into
dec
jp
or
ret
add
add
addb
divb
pop
bound
les
in
dec
mov
out
aaa
pop
cmp
shr
mov
mov
push
adc
test
in
out
loope
cmp
sub
mov
fdivrs
icebp
repz
or
fnstcw
xor
mov
cmpsl
mov
adc
jmp
xor
add
sub
mov
and
icebp
das
xchg
push
jnp
pop
jl
mov
jge
imulb
pop
popf
inc
jns
mov
lahf
inc
subb
fiaddl
hlt
mov
jae,pt
test
sbb
popa
pop
and
adc
out
cltd
push
cmp
inc
daa
pushl
call
mov
mov
mov
xor
add
jmp
xor
outsl
fnsave
gs
mov
add
add
add
add
out
adc
inc
sbb
lds
mov
out
pop
mov
cmp
aam
in
and
fs
push
cmp
fildl
inc
sbb
mov
mov
or
push
call
out
push
or
shlb
fstp
ficoms
ret
xlat
in
pop
jne
mov
shrb
inc
jbe
dec
add
xor
inc
dec
dec
mov
inc
out
add
dec
fldenv
aas
leave
test
jae
jb
push
imul
mov
and
rolb
mov
mov
movsl
in
les
sub
mov
adc
lods
sbbb
inc
inc
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
cmp
jmp
lock
jae
ljmp
mov
inc
add
or
ret
add
add
mov
fadd
in
inc
cmp
cli
push
outsl
iret
cmp
loope
enter
enter
out
jnp
jge
lea
movsb
xor
cwtl
lahf
scas
push
pop
mov
mov
xor
call
xchg
repnz
loopne
cmpsl
fstpl
orl
out
insw
es
loop
mov
repnz
pop
in
pop
mov
movsl
sbb
repnz
call
mov
lret
and
dec
outsl
push
stos
negl
sub
lahf
dec
push
and
xchg
mov
int
mov
xor
mov
dec
mov
pop
ja
jo
mov
jmp
lock
fwait
sub
mov
sbb
mov
cmpsb
push
adc
imul
add
dec
and
mov
cmp
jne
mov
jmp
ss
not
ss
mov
jns
dec
push
add
ret
add
add
mov
pop
xor
cmp
iret
mov
addr16
or
addr16
je
into
dec
xchg
push
popa
call
xlat
xchg
sbb
pusha
pop
cmpsl
sbb
rolb
inc
shlb
mov
test
jb
and
lcall
ja
daa
jns
xchg
dec
out
cmp
or
popl
pop
jle
inc
mov
test
ret
push
jne
insl
push
adc
dec
dec
mov
pop
dec
lcall
mov
fsub
aaa
rorb
lock
in
cmp
xchg
pop
sbb
jnp
push
and
mov
xor
xor
add
jmp
dec
cmp
outsb
cmp
fcmovnu
cmpsb
jo
pop
add
ret
add
add
outsb
pminub
sti
lcall
int3
or
mov
push
or
gs
dec
jge
mov
int3
sub
xchg
insb
pusha
cmp
adc
jb
push
pusha
es
int3
push
push
pop
cmpsb
pop
scas
dec
aaa
jle
push
rcll
jne
leave
shll
icebp
mov
xchg
xchg
call
adc
or
fcos
inc
mov
loope
outsb
in
call
sbb
xor
repnz
les
adcb
xlat
sub
stos
xchg
add
mov
inc
xor
ss
add
subl
insl
into
pop
pop
inc
hlt
data16
std
xchg
pop
test
sarl
cmp
es
mov
rcr
lea
add
fildl
add
mov
jno
jge
inc
push
aam
add
ret
add
add
mov
mov
leave
das
lcall
mov
int3
dec
dec
cwtl
xchg
insl
rcrb
decl
sbb
testl
cld
sub
and
idivl
mov
add
mov
xchg
adc
fisttpll
inc
sti
outsb
sarb
jmp
rcr
or
push
jae
jg
rorl
pop
rorl
add
adc
fdivr
mov
loop
sbb
mov
pop
mov
push
push
faddp
cld
mov
mul
add
movsb
ss
push
sub
rcll
mov
pop
dec
xor
jo
add
cltd
mov
popa
mov
rcr
aam
adc
mov
stc
fnstsw
jne
jmp
jno
inc
adc
ss
lock
in
cmp
jo
or
add
add
add
out
sbb
enter
push
dec
in
inc
pop
lock
xlat
dec
enter
fwait
mov
aam
mov
or
add
fisubrl
pushf
mov
rolb
push
call
pop
shrl
lret
sarb
out
adc
movsl
sbb
mov
adc
mov
les
xor
fnstsw
enter
movsb
jl
out
and
or
xchg
dec
and
sub
stos
push
mov
push
inc
test
jle
sbb
dec
jl
and
test
dec
and
out
cmp
or
jbe
cmp
icebp
je
jmp
mov
sti
out
sbb
push
fimuls
pop
arpl
ret
add
add
mov
out
outsl
push
jns
inc
push
popa
call
inc
jo
xlat
inc
hlt
xor
or
lock
repnz
ret
push
push
fsubl
ljmp
ret
add
jo
ret
shlb
push
or
vmovsd
push
nop
push
movsl
loopne
xchg
push
push
xor
dec
ret
xchg
test
jmp
ds
ljmp
inc
xor
and
es
inc
test
das
xchg
sti
cmp
mov
fnstcw
sahf
hlt
dec
mov
pop
movsb
hlt
jae
int
outsb
je
enter
adc
out
popf
xor
add
into
dec
outsl
adc
orb
jnp
add
jmp
imul
add
iret
jnp
call
mov
cmp
add
add
xor
data16
cmp
aaa
jb
mov
cltd
mov
adc
inc
test
into
fstpl
cltd
mov
ss
xchg
xor
mov
pop
and
add
add
xchg
push
mov
fdivrs
pop
ss
pusha
mov
outsl
pop
mov
dec
mov
lods
lret
jmp
push
out
mov
fstl
cmp
lret
xchg
out
cmpsl
mov
cmp
or
outsb
pop
sbb
popf
daa
loope
sbb
cmp
popa
pop
pop
loope
popa
cwtl
jns
add
xorb
clc
pusha
inc
mov
inc
add
sbbb
das
mov
loopne
out
fldenv
clc
mov
mov
mov
mov
mov
movzwl
movzwl
jmp
mov
mov
call
mov
int
or
add
add
add
dec
jp
shr
pop
xor
inc
sub
cmp
mov
popa
or
pusha
jecxz
ret
into
mov
in
ficoml
jg
mov
lcall
mov
jge
add
xchg
scas
ja
mov
scas
or
cltd
xor
jb
mov
push
sbb
mov
outsb
cmpsl
mov
cmp
shrb
sti
fld1
in
mov
cmp
xchg
or
popl
and
int
adc
jo
push
fiaddl
lock
test
or
aam
ljmp
adc
sbb
idivl
mov
mov
xchg
add
ret
cmp
sbb
mov
jl
rorl
dec
and
or
jmp
mov
out
stos
outsl
and
mov
add
add
jo
sbb
xor
scas
mov
mov
mov
in
stc
jmp
push
filds
addr16
dec
cmp
ret
testl
loop
pop
adc
cmpsl
scas
lret
mov
adc
dec
pop
pop
movsl
or
outsl
sbb
push
insl
and
sbb
fnstcw
out
sub
push
mov
push
sbb
popa
aas
pop
pushf
pop
sbb
cmp
fistps
or
outsb
sub
mov
xor
insl
stos
leave
jge
pop
xor
enter
add
lret
inc
mov
mov
pop
inc
dec
lea
out
ret
push
popf
mov
mov
adcl
dec
sub
jmp
add
inc
stos
sti
mov
push
cmp
add
ret
add
add
stos
pop
mov
test
or
cmp
inc
mov
dec
iret
mov
cltd
cmpsl
out
xchg
inc
orb
pusha
dec
mov
movsl
mov
in
dec
sub
mov
popa
pop
xorl
xlat
in
add
fnstcw
mov
ret
movsl
gs
dec
mov
xchg
add
pusha
call
inc
repz
fwait
push
mov
in
cmp
push
in
ds
fsub
push
cmc
cld
mov
cmp
add
and
inc
cmpsb
adc
mov
sbb
or
inc
dec
data16
jmp
mov
mov
jmp
and
sub
shll
sub
add
pop
xchg
out
jbe
add
in
ds
mov
xor
inc
ja
test
jl
int3
out
jecxz
dec
in
loop
pop
xor
xchg
add
mov
or
or
add
arpl
push
cmc
add
mov
sbb
adc
stc
jecxz
fcoml
mov
push
outsl
aam
cltd
loopne
outsl
incl
sub
cwtl
stc
out
pop
inc
xor
mov
jmp
xchg
ljmp
mov
fimuls
jl
add
pusha
sbb
in
or
aad
xchg
lahf
mov
push
repnz
dec
add
mov
movzwl
mov
add
jmp
push
jle
gs
cmc
sti
jle
and
add
or
add
cmp
fwait
or
shrl
push
clc
repz
mov
push
mov
jb
xchg
sub
push
push
inc
inc
bound
pop
xor
push
lret
sub
sbb
addr16
mov
cmpsb
fs
cmc
inc
sbb
into
push
xor
sub
mov
cwtl
xchg
push
sub
mul
in
sarl
xchg
mov
repz
pop
shl
ss
jge
aad
cwtl
xchg
scas
jmp
stc
cmpsl
xchg
mov
das
dec
mov
add
xor
dec
mov
mov
jle
stos
cli
testl
mov
lds
lret
and
sbb
cmp
fsubrp
inc
movzwl
and
jmp
mov
cld
std
std
jne,pt
lahf
aaa
xor
je
push
add
ret
add
add
dec
mov
jae
les
out
cld
kunpckbw
test
dec
adc
cmpsl
pop
jns
and
mov
rorl
lock
xchg
or
pop
mov
incl
call
out
loop
push
test
je
push
aaa
jne
jo
jbe
and
xchg
push
push
jg
push
push
mov
lds
stos
push
push
shll
iret
iret
scas
mov
xor
xchg
sub
xchg
lods
scas
inc
push
mov
ret
ja
cmpsb
stos
sbb
out
sub
xor
andnps
dec
cmp
jg
jmp
sbb
push
mov
out
lcall
xor
fidivs
add
ret
add
add
xchg
add
aam
pop
mov
int
push
mov
jae
icebp
and
cmp
jl
arpl
push
jo
dec
lea
xor
outsl
xchg
ljmp
and
mov
nop
repz
inc
pop
xchg
in
in
lea
data16
icebp
lods
je
in
pop
in
sbb
cmp
jp
dec
jne
pop
outsl
pushf
push
ja
cmp
pop
pop
dec
xor
push
push
xchg
push
inc
dec
sbb
xchg
mov
jno
cwtl
mov
mulb
lret
pop
call
pop
iret
inc
arpl
js
sub
mov
jno
dec
add
lea
push
lea
call
jmp
jmp
rcll
repz
xor
mov
sbb
adc
add
add
add
inc
pop
cltd
aam
scas
cli
sub
out
roll
or
xchg
fistl
mov
xchg
dec
pop
iret
mov
scas
fdiv
hlt
test
ds
mov
mov
aad
or
dec
cmp
xor
movsl
test
pop
sbb
jnp
rcrl
jnp
fcoml
jns
sbb
add
clc
dec
mov
dec
jne
or
mov
lods
incl
xchg
and
push
push
sarl
popa
jecxz
hlt
xorb
pop
loopne
inc
cmp
dec
cmp
mov
sub
mov
icebp
in
mov
mov
jp
fsubl
sbb
jg
call
je
movsb
xor
mov
jmp
inc
mov
jge
jg
mov
sub
mov
ret
add
add
call
cmp
in
jae
lds
cmp
pop
mov
test
push
ret
out
push
mov
pop
in
addl
and
frstor
mov
push
jg
push
jmp
sub
inc
call
or
mov
xchg
lods
mov
data16
inc
mov
arpl
gs
fadds
add
dec
icebp
push
lods
jbe
add
pop
pop
adcl
and
aam
clc
push
addl
pop
nop
lea
xchg
xlat
xor
daa
ret
call
dec
adc
dec
and
mov
jmp
and
jno
sahf
and
add
add
ret
add
add
mov
xchg
and
jmp
es
cwtl
in
and
add
mov
mov
push
repz
jns
add
mov
sub
adc
mov
rol
or
pop
js
aas
push
cmpl
sbb
int
dec
cmp
push
xor
push
stos
mov
inc
sub
lods
xor
xchg
sub
inc
or
and
sbb
iret
pop
jb
adc
sub
sbb
outsl
inc
mov
outsl
push
sbb
ret
mov
or
pop
mov
fildl
lret
xor
fadd
test
cmp
stos
sti
mov
or
int3
scas
stos
jbe
mov
add
jmp
mov
fnstsw
xchg
jge
mov
add
add
add
cltd
add
nop
mov
das
dec
lahf
pop
and
xchg
lret
mov
cmp
add
shl
gs
lods
out
mov
sbb
mov
movswl
jmp
xchg
mov
leave
jecxz
dec
sub
sbbl
and
aaa
adc
push
cld
dec
jecxz,pn
mov
mov
mov
mov
test
pop
xchg
cmp
lock
push
mov
stos
shll
in
fistpl
ficomps
push
sub
in
xor
jbe
icebp
ret
lahf
mov
nop
scas
neg
pop
cmp
mov
or
stc
daa
xlat
je
scas
adc
mov
jmp
inc
lcall
mov
mov
aas
inc
adc
add
add
add
pop
into
sbb
inc
fisttpl
stos
add
addr16
lahf
sti
cli
inc
add
push
andl
out
int3
sbb
movl
test
sub
add
pop
inc
lret
push
pushf
ror
sarb
or
hlt
mov
push
jns
jmp
lock
movsb
sub
adc
adc
jl
out
aad
out
pop
add
test
das
and
pushf
jo
inc
lock
sub
mov
push
inc
or
jns
inc
js
push
ja
dec
mov
sub
mov
xor
push
jmp
adc
or
add
mov
fwait
sarb
mov
jmp
jmp
dec
incl
cmc
mov
je
mov
adc
add
add
add
pusha
dec
cmp
adc
aad
xchg
mov
cmp
push
stc
stos
xchg
cmpsl
mov
dec
orl
sti
or
ret
inc
mov
pushf
sbb
inc
sub
shlb
mov
jecxz
rorb
in
popf
sbb
inc
sub
jne
loop
rcr
xchg
cmp
mov
add
cmp
aas
dec
fadds
xor
jo
mov
frstor
daa
cwtl
and
dec
hlt
xor
dec
and
xor
jmp
mov
shrl
add
pop
inc
mov
scas
xchg
int
jmp
dec
std
dec
cmpsb
xor
mov
push
push
push
lea
push
call
mov
jmp
cmp
or
das
sbb
xchg
dec
addb
ret
add
add
adc
lea
stos
std
into
jae
jg
pop
and
adc
pop
add
xor
cmpsb
mov
mov
dec
lods
lret
pop
mov
cs
pop
andb
dec
ja
pop
fcmovnu
sub
push
mov
xchg
push
leave
mov
lods
xchg
sbb
dec
sbb
or
ror
insl
xor
mov
inc
sbb
ret
mov
xchg
dec
sub
pushf
jecxz
stc
add
nop
sbb
and
in
fnstsw
movsl
mov
mov
fisubrs
pushf
dec
int
push
add
sbb
dec
xor
cli
mov
sub
push
lds
sti
pop
jl
cmp
mov
inc
dec
push
pushl
lea
push
call
mov
mov
mov
mov
jmp
stos
jne
xchg
lcall
cmp
cmc
jne
movsl
mov
add
jnp
push
push
dec
sbb
loop
call
and
fmull
push
stos
xchg
in
fimuls
sbb
lds
loope
test
jb
out
sbb
mov
lods
ljmp
xchg
mov
repnz
into
cmp
jp
loopne
fstpt
adc
ds
loopne
mov
cli
shrl
dec
stos
mov
jns
scas
sbb
add
jecxz
inc
inc
mov
out
ljmp
sbb
jns
dec
xchg
lcall
sbb
test
mov
dec
add
push
push
lret
aad
cmp
push
xchg
xor
loope
into
mov
jmp
and
sub
mov
push
aaa
int
fcoml
dec
push
add
ret
add
add
pop
xchg
shlb
mov
sbb
and
lods
mov
dec
scas
scas
fstps
cwtl
adc
add
test
jmp
xchg
xchg
addr16
dec
imul
inc
rclb
mov
dec
test
icebp
sbb
lods
popa
xor
loopne
jno
loopne
or
add
adcb
outsl
jp
loope
icebp
cwtl
mov
into
add
sub
sti
sub
xchg
add
lds
enter
mov
xor
fs
mov
add
imul
mov
insb
int3
test
jno
sub
dec
in
xor
in
dec
inc
mov
mov
lea
jmp
aas
sub
inc
cmc
fstpt
outsb
adc
add
add
add
scas
addr16
xor
cmp
sub
jbe
scas
push
rorl
iret
mov
stos
pop
notb
inc
push
mov
cmp
mov
les
and
push
into
ret
mov
push
sub
popf
sahf
fst
lret
pop
mov
jbe
outsb
repnz
das
les
dec
add
or
xchg
daa
sub
xchg
nop
and
jae
and
popa
fs
cli
xor
shr
adc
jl
rclb
sar
or
iret
xchg
sbbl
out
mov
decl
ds
call
dec
cltd
dec
fnstcw
adc
cmp
and
sub
mov
add
pushl
pushl
mov
jmp
mov
cmp
mov
leave
cmp
add
add
add
rorb
xor
jp
add
repnz
xchg
xor
test
icebp
out
test
leave
push
repnz
mov
dec
mov
xchg
sbb
sti
dec
pop
aas
inc
jb
mov
mov
fst
adc
sbb
inc
in
mov
pop
sbb
adcl
pop
out
ljmp
rcrl
cmp
jnp
jl
ds
andl
sub
xchg
ss
fbld
fisttpll
adcb
mov
pop
or
subl
jbe
lock
insb
jb
movsb
int3
cmpsb
jnp
pop
test
out
cmp
lcall
aaa
in
pop
xchg
mov
and
arpl
neg
push
inc
pop
ret
adcb
add
xchg
mov
in
mov
lahf
xchg
sbb
add
add
add
test
jae
fwait
ja
cmp
repnz
scas
mov
cmp
sub
pop
in
test
jno
jno
mov
movsl
pushf
icebp
jmp
pusha
mul
sbb
popa
pop
push
jmp
aam
dec
into
lcall
es
in
int
popf
dec
in
push
ljmp
lock
loopne
pop
jb
and
xchg
sbb
dec
xchg
jmp
inc
ret
mov
lret
push
std
adc
das
ret
dec
mov
push
mov
ret
mov
fs
hlt
xchg
decl
mov
cmc
add
lret
push
inc
pushl
mov
jmp
lods
fadds
xchg
arpl
pop
sbb
add
add
add
adc
andl
int3
mov
pop
mov
dec
xor
mov
cwtl
lcall
ret
adc
mov
sbb
stos
xchg
xchg
je
dec
inc
jge
jg
dec
mov
fadd
sub
incl
mov
cmp
dec
xchg
inc
xlat
repz
pop
call
dec
xchg
push
fsubl
dec
sbb
cmpb
xchg
test
mov
xor
dec
sub
adc
jmp
in
js
and
loop
push
adc
movsl
je
shlb
jbe
dec
mov
xchg
xchg
ret
xor
leave
mov
or
call
mov
jmp
rol
daa
xchg
ja
out
movsb
test
sub
add
add
add
cmp
clc
js
das
mov
xchg
push
adc
cli
push
test
add
imul
cmpsl
mov
adcl
lock
into
jbe
xchg
faddl
pop
jo
mov
je
jnp
lods
shrb
fld
out
ss
cmp
cmc
loopne
call
js
push
xor
xchg
mov
mov
push
or
mov
add
adc
mov
add
and
in
push
imul
push
sti
mov
or
or
in
out
inc
pop
int3
test
jne
pop
jns
push
inc
xor
dec
sub
dec
dec
mov
jmp
call
fucomip
lcall
addr16
mov
add
add
add
cmp
adcl
sub
inc
jo
or
inc
inc
xchg
aaa
pop
pop
flds
push
enter
stos
jbe
and
call
cltd
cmpsl
pop
adc
xchg
push
mov
push
out
and
imul
mov
fidivs
cwtl
lcall
insb
and
add
std
in
cmp
rclb
sti
dec
in
jae
cs
mov
push
mov
or
fdivr
push
pop
and
scas
aad
cmp
xor
aaa
jo
pop
imul
movsb
pop
pop
xlat
ss
sub
jmp
sub
loope
ja
xor
mov
dec
dec
jle
lds
subl
push
mov
jl
mov
xor
inc
add
fildl
add
push
out
mov
xchg
ret
mov
sbb
add
add
add
jbe
jp
call
mov
imul
cmp
mov
pop
sub
enter
scas
sub
or
movsl
je
or
mov
jno
jmp
loope
fcoms
jno
in
jb
pop
sub
testl
aad
insl
stc
pop
inc
mov
arpl
mov
pop
dec
add
insb
xchg
push
mov
roll
inc
xor
outsb
mov
pop
push
push
push
push
and
cmp
and
mov
ja
ja
sbb
jb
out
fs
sub
xor
decl
cs
add
add
fildl
add
ret
or
insb
pop
mov
gs
add
add
add
jae
or
push
push
xchg
clc
or
bound
cmpsb
adc
mov
push
push
dec
jne
in
mov
add
xchg
mov
dec
mov
cmpsl
jle
cmp
out
stos
shlb
or
mov
mov
sub
das
nop
jb
mov
enter
xor
jmp
jae
or
out
lahf
clc
push
xor
lods
mov
xchg
adc
loope
mov
mov
mov
jge
mov
or
jmp
popf
or
sbb
outsb
fldcw
inc
jae
dec
imul
loopne
imul
jbe
push
or
push
push
jmp
dec
in
scas
mov
cmp
jae
cmpsl
sub
add
faddl
jb
cmc
and
clc
cmpsb
insb
mov
cmpsl
in
pop
ficompl
push
push
and
movsl
dec
mov
insl
inc
mov
subl
rcrl
jg
xchg
enter
mov
inc
jge
into
add
jg
loopne
fdivl
mov
xor
dec
jl
jp
aam
fldl
aam
jl
adc
mov
cmc
rolb
pop
pop
jg
jmp
sub
insl
xchg
dec
inc
push
loopne
inc
into
add
inc
xlat
xchg
mov
into
push
repnz
sbb
je
adc
outsb
enter
addb
sub
mov
jle
out
pop
jle
xchg
adc
mov
sub
fsts
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
cmpl
jle
jmp
push
pushl
push
pushl
push
push
push
pushl
call
push
push
push
movl
mov
jmp
lea
pop
fdivrp
decl
xor
mov
jmp
add
rolb
add
leave
into
iret
cmp
pop
fiadds
add
int
adc
das
jge
stos
mov
shr
add
cmp
adc
fcom
test
push
lods
scas
scas
dec
scas
xor
js
inc
lds
inc
inc
daa
cmc
sbb
jb
cmp
mov
movb
in
pop
xor
mov
mov
cmp
pop
lea
cmpb
mov
scas
sbb
iret
jmp
int3
pop
push
pusha
mov
jge
test
test
jae
cmpsb
mov
shll
pushf
scas
dec
lods
sbb
or
cmp
fwait
push
sbbl
jle
or
out
fldcw
test
inc
call
or
jmp
and
push
repnz
mull
movsl
xchg
mov
je
push
add
rolb
add
dec
fwait
sbb
lock
je
xlat
jbe
cmpsl
dec
pop
inc
ss
dec
hlt
mov
cmpsb
cmc
and
jle
je
xchg
lahf
sbb
lahf
arpl
test
jle
xchg
cmc
lret
pop
nop
xor
cmp
fsubl
fldcw
fidivrl
les
mov
fsub
insw
das
ffreep
xchg
jge
or
mov
test
pop
mov
sbb
out
pusha
dec
push
cmp
into
sub
xor
sbb
iret
call
pusha
adc
sahf
mov
cmpsl
mov
ja
push
jae
jne
mov
aas
and
add
js
push
xor
iret
mov
xorl
jmp
add
sar
fnsave
cli
jecxz
xor
xlat
in
pop
add
rolb
add
int
js
inc
jno
jns
loopne
in
js
fcmovnu
clc
out
ficoml
cwtl
sar
xor
rcrb
xchg
arpl
adc
stos
int
xchg
movntq
adc
sub
adc
sub
loope
jp
dec
inc
jns
xchg
inc
xchg
jnp
xchg
out
fs
adc
repnz
scas
dec
jno
dec
xor
adc
stc
shll
jg
push
xchg
pop
mov
sub
sti
cmp
jb
in
ja
bound
push
andl
stos
iret
gs
sbb
jl
mov
xchg
adc
sbb
daa
fmull
sbb
jnp
aaa
divb
mov
mov
add
mov
jmp
scas
mov
sub
jp
mov
cmp
repnz
add
rolb
add
daa
orl
popa
mov
sub
les
lret
mov
push
push
js
sub
ja
cmp
cmpsl
pop
je
aad
ljmp
in
xor
mov
inc
mov
test
sub
xchg
and
ss
and
ljmpw
sti
pop
imul
and
xor
in
dec
loopne
pusha
add
jno
pusha
sti
shll
std
inc
add
pop
jg
mov
imulb
dec
fldcw
xor
sbb
xor
xchg
mov
sbb
les
call
pop
inc
or
and
lret
or
adc
mov
and
add
addl
mov
jmp
mov
mull
xchg
decb
add
rolb
add
cli
sbb
mov
shll
scas
add
das
sbb
add
jmp
xor
add
push
mov
mov
cmp
sub
popf
mov
xor
push
aas
mul
ljmp
adc
dec
adc
leave
fs
and
xchg
xor
clc
cwtl
mov
inc
and
push
push
lods
mov
popa
mov
pop
fucomi
pop
mov
push
mov
push
add
into
mov
cmp
sbb
jmp
lret
nop
out
in
scas
and
xor
or
fcmovne
movl
imul
xorl
movzwl
adcl
shr
incl
movzwl
orl
or
and
mov
mov
not
mov
jmp
fnstenv
dec
dec
rcr
aas
push
dec
imul
mov
movsb
outsl
cmp
je
sub
scas
add
mov
outsl
fbld
dec
inc
pop
xor
cmp
inc
inc
ljmp
push
add
xor
xchg
fists
xchg
cmp
hlt
push
dec
mov
mov
int
nop
push
arpl
test
sub
aaa
enter
popf
push
es
sbb
out
or
es
mov
std
or
int
or
cltd
push
cmpl
in
shl
mov
popa
add
jmp
daa
jb
mov
sbb
xlat
dec
adc
inc
in
shll
add
data16
pop
out
idivb
je
decb
xor
sbb
lods
pop
mov
add
cld
xor
add
add
jbe
jle
push
aas
lods
push
cmp
and
add
add
add
or
mov
and
aam
or
or
push
cmp
cltd
les
pop
xor
aad
pop
xchg
arpl
jmp
in
out
inc
iret
and
xchg
lret
lahf
fwait
cltd
les
mov
jb
sub
jns
test
xor
js
mov
ret
lds
pop
cmp
pop
fnstenv
gs
lsl
pop
inc
push
jg
jns
imul
sti
jecxz
je
xor
mov
hlt
add
mov
aas
pop
xor
xchg
push
sub
cli
test
mov
xor
sbb
sahf
cmp
push
xchg
out
shll
push
sti
pop
mov
sarb
loope
mov
pop
rcl
add
subl
movzbl
push
negl
lea
subl
push
call
xor
mov
mov
and
mov
xor
mov
and
xor
not
jmp
inc
sub
sti
int3
icebp
popa
dec
push
and
add
add
add
or
lcall
adc
aas
jge
stos
dec
subb
dec
xchg
pushf
xchg
aas
sbb
in
ljmp
or
clc
gs
arpl
decl
fadd
and
test
ret
bound
pmullw
repz
mov
adc
or
xor
loope
jne
push
cmp
pop
cwtl
sti
lods
add
aas
cli
movsb
inc
sarb
adc
stc
mov
dec
addr16
icebp
lret
and
push
lea
cli
aaa
adc
xchg
nop
jb
push
jae
add
xchg
inc
je
cld
jl
out
enter
call
sbbl
cwtl
and
inc
xorw
add
jmp
cmpsb
add
jae
incl
stos
push
xor
and
add
add
add
icebp
dec
sbb
iret
addr16
popf
xchg
jecxz
cs
call
add
scas
sbb
push
ffreep
rorl
jg
aad
push
outsb
pop
add
lret
pusha
inc
cld
popa
mov
out
sub
das
adc
dec
xor
push
cmpsb
mov
repz
or
jno
outsl
les
cmp
stc
or
insl
in
inc
sub
fwait
sbb
das
and
addr16
lret
sbb
gs
scas
jle
jbe
std
imul
pop
out
in
dec
push
pop
pop
and
addr16
jle
scas
push
aam
or
inc
mov
mov
push
in
sub
movl
jmp
push
mov
fdivrp
jbe
repz
arpl
scas
fisttps
mov
rolb
add
jno
or
pushf
inc
aaa
popf
sbb
repnz
mov
cmp
dec
in
mov
jge
out
cld
push
or
jno
cmpsl
cs
fnstsw
divb
loope
mov
dec
jle
test
xchg
les
mov
adc
mov
in
addr16
adc
push
pop
cld
jmp
lock
es
or
or
outsb
and
xchg
dec
mov
xchg
fdivs
pop
jns
cld
das
lods
xchg
xorb
xor
add
lea
jmp
int
xor
les
fwait
lods
pop
lds
add
cwtl
xor
jle
idivl
ret
jo
inc
add
test
add
mov
cmpl
jge
mov
mov
sub
sub
jmp
pushl
pushl
push
pushl
call
mov
jmp
mov
mov
out
mov
jnp
imul
add
sub
ret
or
insl
inc
mov
push
fwait
popa
or
ds
repnz
or
xchg
push
sbb
push
out
cs
or
or
cs
mov
cmp
pushl
fcoml
lods
cld
add
jno
fcmovnu
cmp
stos
shll
shrb
mov
cmp
in
or
adc
dec
aad
inc
fistpl
in
gs
pusha
je
sahf
adc
or
loop
sub
std
aad
cmp
aam
daa
int3
int3
test
push
sbb
jae
sbb
es
jne
lcall
imul
mov
jmp
push
cmp
dec
push
pop
cmp
lods
adc
xchg
bound
sub
add
rolb
add
push
add
lods
sub
repnz
pushf
push
jmp
xchg
roll
jg
aad
and
leave
test
and
movsl
leave
adc
add
std
xchg
add
pop
dec
call
mov
std
popf
fcoms
pop
outsb
push
int3
xor
xchg
addb
sbb
out
and
mov
adc
adc
or
mov
les
inc
addl
jg
movsb
and
insl
jns
cltd
test
out
pop
pop
lds
sbb
mov
pop
ret
adc
mov
or
faddl
or
sbb
and
cmpsl
mov
xchg
icebp
shr
sbb
mov
add
cmpl
jge
jmp
push
push
push
push
pushl
pushl
pushl
pushl
call
jmp
fimuls
add
jle
fucomi
push
js
pop
dec
mov
rolb
add
shr
add
jne
fstpl
jnp
push
pop
cmc
lahf
repnz
test
daa
jae
push
imul
lods
dec
mov
mov
fcomps
loope
xor
fwait
xchg
pop
decb
out
inc
xor
rclb
std
loopne
inc
inc
fiadds
negl
clc
push
push
imul
es
mov
aaa
pop
mov
test
sub
test
lods
fs
ret
nop
iret
lret
or
dec
aaa
mov
scas
and
jl
jl
gs
inc
mov
pop
sbb
jno
jmp
xor
xchg
scas
sub
ficoml
movsl
sub
push
in
mov
movzwl
shr
jmp
test
add
hlt
scas
ficomps
push
pop
adc
sub
daa
add
rolb
add
cmp
cmp
mov
ljmp
enter
mov
loop
inc
fdivr
mov
cmp
fnstcw
jl
jl
ret
dec
xor
std
mov
mov
mov
jns
pushl
cli
cmpsb
sub
mov
ss
pusha
pop
aaa
inc
or
sbb
aas
insb
into
fs
inc
aaa
inc
mov
lret
jb
inc
dec
ficomps
in
or
sub
pop
icebp
add
push
and
imul
lods
and
lret
sub
test
stos
dec
sub
stc
data16
mov
dec
mov
scas
mov
mov
mov
mov
add
adcl
jmp
cs
mov
fcmovnb
dec
out
dec
repnz
aas
imul
add
add
add
pop
add
and
fnsave
cmp
mov
add
stos
dec
pop
xor
daa
dec
aad
jmp
in
fsubs
jg
popf
fnsave
jb
dec
dec
jmp
and
xchg
pop
mov
fwait
cli
and
xlat
outsl
sub
dec
pop
enter
lods
loopne
test
dec
mov
sbb
xchg
mov
in
outsb
repnz
shrb
mov
xor
jnp
xor
in
nop
ljmp
mov
hlt
add
insl
sub
mov
jns
jo
lds
inc
push
adc
jnp
testl
in
pop
mov
scas
aad
xchg
xchg
subb
imul
add
movzwl
sbb
or
jmp
sbb
cmpsl
jle
sti
sbb
das
in
les
sub
add
add
add
and
xor
pushf
inc
push
in
dec
cltd
repnz
pop
movsb
hlt
fisubrl
iret
xchg
push
dec
call
rcr
push
jmp
sub
lahf
lcall
repz
je
sub
lahf
mov
cmpl
push
dec
cmpb
repz
cld
mov
mov
xchg
xor
xor
mov
repz
sahf
ljmp
dec
sub
inc
scas
cmc
inc
aas
pop
out
push
xchg
jg
stos
pop
fadd
pusha
fstps
xchg
xchg
or
fistl
mov
jne
and
aam
xchg
popf
xchg
popa
mov
add
dec
call
add
jns
test
xchg
mov
cmpl
jb
dec
jmp
pushl
push
push
push
push
pushl
call
mov
jmp
ljmp
jmp
inc
pop
jne
lock
rolb
add
cmp
addr16
into
loop
ficompl
cmc
add
packsswb
push
mov
push
std
push
add
cltd
outsb
mov
inc
iret
cmp
jp
call
in
push
outsl
mov
add
addb
xor
mov
iret
neg
lret
jnp
in
push
jae
cmp
js
sub
cmpsb
inc
fs
sub
pop
cwtl
aaa
hlt
sub
add
aas
lahf
or
fistpl
scas
push
and
pop
out
xchg
mov
rclb
movsbl
and
xor
cmp
sub
jmp
sub
push
xchg
out
xor
cmpb
pop
push
mov
jmp
push
in
and
mov
popf
imul
sub
add
add
add
add
dec
insl
stos
cmp
outsb
or
lcall
shl
pop
and
pop
subb
pop
add
pushf
js
bound
mov
out
push
mov
push
movzwl
stc
jp
pop
xor
fadds
cmp
cmpsb
cmpsb
ret
jle
test
mov
sub
loop
ret
jmp
fisttpl
or
test
cs
and
dec
cmpb
push
je
sbb
cmp
and
test
ftst
movsl
shlb
sti
dec
push
stos
xor
fstps
scas
outsb
jmp
sbb
mov
pop
jg
sub
add
addr16
clc
jbe
push
pop
add
mov
movzwl
shr
andl
mov
mov
andl
jmp
mov
out
mov
mov
imul
add
add
add
adc
test
push
into
jne
lahf
push
pop
call
repz
xchg
and
dec
push
mov
test
mov
out
mov
cmp
xchg
mov
pop
mov
call
testb
cmp
addr16
or
jmp
js
pop
sbb
hlt
add
in
scas
and
add
enter
pop
sar
adc
aam
xor
out
push
xchg
out
mov
pop
aaa
pop
cmp
xchg
xor
cmp
or
xchg
sub
fcoml
add
fnclex
push
mov
and
mov
gs
inc
ljmp
xchg
movzwl
mov
sub
jmp
cmpsl
xchg
mov
mov
sahf
mov
sub
add
add
sub
fs
bound
or
push
clc
mov
mov
mov
xor
lea
mov
cmp
jne
mov
mov
mov
xor
sub
mov
jmp
mov
xor
add
adc
xor
mov
xor
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
add
adc
or
jne
mov
mov
xor
sub
pop
pop
pop
leave
ret
mov
mov
jmp
mov
mov
ret
sbb
mov
mov
adc
mov
orl
or
mov
mov
jne
andl
mov
andl
mul
ret
subl
push
mov
adc
mul
mov
mov
mull
add
mov
mul
add
pop
ret
dec
push
dec
pop
ss
aaa
xor
pop
xor
pop
xor
push
inc
add
dec
pop
xor
dec
dec
add
inc
ss
dec
dec
dec
pop
xor
pop
pop
push
inc
xor
add
inc
pop
push
xor
dec
pop
xor
dec
inc
ss
inc
dec
xor
inc
inc
inc
pop
xor
aaa
xor
inc
pop
push
pop
dec
inc
cmp
pop
push
push
pop
xor
pop
push
pop
add
xor
cmp
inc
cmp
add
xor
cmp
pop
inc
xor
push
inc
xor
pop
pop
pop
xor
dec
push
pop
push
pop
add
dec
xor
pop
dec
ss
xor
pop
push
xor
dec
dec
xor
push
inc
dec
pop
xor
inc
dec
push
xor
push
inc
inc
pop
xor
add
push
pop
xor
xor
xor
inc
inc
add
dec
pop
dec
xor
push
xor
push
pop
inc
pop
push
inc
inc
inc
add
xor
push
xor
inc
add
inc
xor
aaa
push
pop
add
xor
xor
push
xor
xor
add
xor
xor
pop
dec
xor
cmp
xor
cmp
add
pop
add
cmp
xor
cmp
pop
add
add
add
add
cmp
dec
add
add
xor
push
add
add
push
add
xor
dec
add
add
inc
add
pop
add
add
xor
cmp
pop
add
push
add
cmp
add
push
add
add
pop
add
inc
add
pop
add
inc
add
dec
add
add
push
add
add
push
add
xor
pop
add
add
dec
add
add
add
pop
add
add
push
add
add
cmp
inc
add
add
dec
add
xor
add
pop
add
add
dec
add
add
pop
add
xor
dec
add
cmp
add
inc
add
pop
add
inc
add
push
add
inc
add
add
inc
add
push
add
xor
inc
add
aaa
add
add
add
inc
add
pop
add
add
dec
add
xor
add
add
add
push
add
pop
add
pop
add
cmp
xor
pop
add
add
