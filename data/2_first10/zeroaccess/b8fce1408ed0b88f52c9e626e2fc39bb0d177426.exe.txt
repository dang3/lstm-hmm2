push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
bswap
mov
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
pop
insb
stc
jecxz
xor
fldl
inc
repnz
cmp
es
arpl
pop
cmc
adc
push
mov
push
out
or
fsubl
mov
xchg
lods
lds
sbb
cmc
imul
push
inc
iret
je
fiadds
mov
xlat
clc
cmp
cmpsb
js
and
leave
mov
mov
test
dec
daa
test
inc
mov
jae
jo,pt
es
loopne
outsl
js
push
pushf
stos
pusha
aad
addl
jmp
push
push
push
std
insl
cli
fisttpl
inc
loope
pop
adc
addr16
sbb
ds
and
ret
mov
sub
cli
dec
adc
jge
ret
jbe
inc
ret
je
xor
push
sbbb
or
fdivrs
cmpl
sahf
cmc
cwtl
lock
dec
filds
jnp
cmpsb
and
push
fidivl
adc
loop
sub
mov
push
stos
jl
fdivs
mov
ss
and
mov
lods
dec
leave
and
mov
xchg
mov
lds
std
add
pop
fmul
sub
fmulp
test
stos
pop
aam
fbld
sbb
xor
cmpsb
movsb
or
fimuls
mov
mov
or
pop
pusha
xor
or
mov
dec
test
inc
mov
ja
and
fdivrl
sub
or
and
push
jg
in
lock
test
xchg
nop
adc
xor
aas
adc
xchg
push
jecxz
das
fcoml
sti
shlb
xchg
mov
cmp
cli
dec
cmpsl
add
div
in
repz
imul
fmul
pop
cmpsb
inc
pop
mov
ret
loopne
jge
push
popa
insb
or
xchg
hlt
inc
add
loope
jo
mov
adc
pop
icebp
sbb
shll
mov
sbb
cli
push
and
les
dec
pop
rorb
pop
aad
cmp
stos
adc
out
inc
inc
adc
mov
test
movhps
cltd
movb
sbbb
push
xchg
sbbl
shll
bnd
pop
xchg
gs
sub
aas
mov
add
lcall
std
jp
icebp
stos
sub
subl
stos
pop
jl
stos
push
cltd
shl
xor
mov
dec
js
push
mov
or
mov
mov
inc
mov
xlat
stos
sbb
cmp
dec
out
jge
in
popf
jo
mov
insb
enter
inc
jecxz
adc
daa
jp
mov
sub
popa
xlat
jnp
jmp
push
aam
aad
pop
daa
push
sti
and
rcl
jp
push
das
adc
add
enter
movsl
dec
adcl
sahf
imul
mov
push
popa
and
dec
cld
daa
dec
pop
popf
movq
es
and
gs
cmp
add
loope
nop
loop
mov
iret
inc
loope
mov
push
dec
mov
pop
sarl
jle
mov
decl
jae
test
movl
fdivl
dec
idivb
push
xchg
jbe
enter
jl
into
inc
std
dec
mov
imul
fistl
call
aas
sarl
pop
xchg
add
out
sub
mov
push
mov
jns
xorb
mov
seto
jmp
aaa
mov
out
dec
stos
cs
or
hlt
adc
xor
cmp
sahf
xor
sub
jns
int3
out
es
inc
movsb
sbb
fndisi(8087
enter
stc
out
add
aad
dec
inc
cmc
fldenv
xor
dec
jnp
mov
push
add
js,pn
jle
adcb
pop
cmp
xor
gs
out
jbe
dec
sti
test
jbe
ds
jmp
je
test
lret
mov
jbe
xor
or
lahf
lret
cmp
xchg
and
push
mov
mul
pop
rcl
or
inc
test
push
shl
jb
rcll
shlb
cwtl
lret
mov
popa
and
movl
mov
mov
jnp
inc
xor
xchg
cld
loopne
out
cld
scas
popl
xor
xor
sbb
mov
aas
idiv
mov
dec
inc
inc
call
leave
mov
pop
jno
or
in
cmp
add
test
repz
popf
xchg
push
fstps
or
push
xchg
jl
in
mov
adc
push
dec
lds
cltd
pop
dec
iret
lods
adc
fisttpl
cmp
xchg
cmp
sub
mov
inc
in
loop
ja
xchg
xor
inc
loop
pop
xchg
ret
test
scas
push
sbb
popa
mov
and
ss
sub
xchg
mov
outsb
cmp
mov
rol
xor
std
in
xchg
movsb
mov
cltd
sub
and
rcll
clc
lods
flds
in
jl
cwtl
int3
jo
sbb
test
xchg
jl
mov
dec
enter
and
rorl
aaa
in
push
mov
mov
mov
inc
repnz
test
xchg
outsl
outsl
pop
pushf
mov
sti
jp
jmp
adc
cld
add
push
enter
mov
mov
shlb
mov
jno
inc
inc
inc
adc
lahf
sub
pop
xor
hlt
adc
push
lods
mov
or
pop
lret
pushf
fldenv
iret
push
iret
cmp
mov
or
je
sbb
cltd
in
out
sbb
ja
mov
inc
jne
mov
cwtl
dec
add
negl
push
jmp
mov
push
dec
mov
add
push
dec
sbbl
xchg
pop
ja
cmpsb
or
cmp
xor
sub
sub
mov
aaa
pop
mov
jno
sbb
hlt
testb
xor
lods
outsb
adc
addr16
cmp
dec
sbb
or
arpl
xchg
pop
outsl
in
leave
pop
push
pop
mov
pusha
lahf
dec
cmp
repnz
cli
ja
sub
cwtl
fwait
pop
rorl
sbb
imul
mov
xor
pop
inc
and
jae
adc
arpl
popf
scas
mov
mov
incl
inc
push
orl
xchg
mov
xchg
arpl
xchg
int
int
pop
add
popf
push
inc
pop
add
loope
lea
outsb
nop
das
lods
sub
mov
repz
dec
insb
jne
cmp
jmp
or
cmpsl
push
xchg
inc
push
sarb
ret
out
ret
xor
sbb
mov
in
push
and
or
sub
mov
adc
mov
sahf
dec
test
mov
adc
mov
cmc
js
inc
test
fnstenv
sbb
pop
cld
aaa
movsl
dec
jp
sahf
cmp
repnz
test
stos
jmp
aad
and
and
push
stos
mov
jmp
and
mov
and
pop
lahf
sub
in
addr16
fbld
add
and
adc
cli
pop
subb
or
sbb
bound
aad
jp
cmp
lahf
call
lahf
inc
jmp
data16
pusha
jmp
lea
shrl
das
xor
sbb
add
inc
lahf
pop
jae
frstor
jne
iret
mov
das
xorl
test
cs
into
jge
fimuls
jnp
lahf
mov
lock
mov
xor
sti
fmull
out
fnsave
inc
sub
push
pop
icebp
out
aas
sub
bound
cmp
dec
ret
dec
push
jae
aas
scas
pop
push
ror
mov
lret
mov
ret
addl
int
fcompl
insb
shl
stos
adc
xchg
jmp
sar
add
sarl
inc
push
xor
in
jle
shr
and
sub
push
rolb
pop
sub
pop
rep
arpl
pop
fnstcw
xchg
scas
outsl
clc
jb
cld
lcall
imul
jnp
ret
xor
imull
mov
test
daa
mov
repz
mov
push
mov
jno
sub
outsb
out
push
mov
inc
mov
jb
mov
lea
jne
mov
sub
xchg
and
add
lcall
pop
push
sbb
and
in
adc
push
inc
cmpsl
popf
cmp
mov
add
sbb
sub
mov
scas
fucom
stc
inc
mov
sbb
sub
sub
loopne
mov
jne
or
repnz
add
pop
inc
imul
movl
rorb
pop
repz
xchg
pop
cmp
push
int3
std
xor
nop
or
or
ja
stos
pushf
lods
ror
rol
jne
mov
push
scas
dec
push
mov
dec
cwtl
movsl
add
jnp
jmp
outsl
jb
out
arpl
icebp
xor
clc
lods
or
jge
mov
xor
gs
call
je
mov
aam
enter
sub
insl
outsl
aas
dec
xchg
andl
xor
mov
or
mov
ljmp
lret
and
popf
cmpsl
lds
mov
cmc
in
cli
jmp
xchg
cmc
mov
fwait
sub
inc
clc
lahf
ljmpw
das
sbb
outsl
gs
pop
push
lcall
daa
jae
push
mov
dec
sbb
and
arpl
inc
andb
pop
cltd
dec
adc
cmpsl
mov
adc
push
leave
bound
nop
pop
pop
ds
adc
aam
hlt
jb
jne
mov
aas
pop
push
adc
adc
push
pushl
pop
xor
fsubrl
sbb
xor
gs
adc
ss
fisubrs
scas
stc
mov
mov
xchg
aas
stc
popl
push
aad
je
jg
int3
cld
cltd
js
lds
mov
mov
sbb
iret
pop
aam
nop
fldt
mov
clc
negb
loop
jle
xchg
push
and
enter
push
inc
outsb
mov
xor
shll
int3
add
mov
loopne
jno
in
pop
mov
aaa
mov
cmp
outsl
jbe
imul
or
jne
jge
cmpsb
jg
shlb
xor
cli
sbb
add
xor
mov
cltd
insb
jae
mov
rolb
ret
outsb
daa
daa
hlt
movsl
adc
xlat
mov
cltd
push
add
xchg
int
leave
fwait
push
arpl
push
enter
lret
mov
xlat
mov
push
and
scas
das
dec
into
popf
and
xchg
push
mov
mov
lcall
add
mov
fildl
or
xchg
aad
lock
loopne
js
in
xchg
jg
mov
xchg
mov
lods
inc
aaa
cmc
push
or
fisubs
push
in
sbb
inc
push
mov
repnz
cwtl
mov
call
repz
dec
cltd
mov
dec
mov
pop
es
and
leave
inc
jge
insb
addr16
jne
push
sti
xor
sbb
mov
sbb
int3
loop
sub
cli
out
mov
jp
xor
cmpsl
jg
xor
mov
ret
push
xchg
fdivl
adc
dec
pop
sbb
into
pusha
xchg
sarb
hlt
data16
or
or
cmp
repz
push
fisubl
sub
ret
xchg
adc
test
movsl
inc
jg
mov
sbb
jg
stos
lea
ds
cld
add
loope
xor
test
iret
add
enter
dec
pop
bnd
sub
scas
inc
push
pop
loop
pop
xor
sub
fcmovu
adc
fdivrl
and
sbb
stos
or
rolb
lcall
test
ret
fs
icebp
lret
inc
call
bound
xor
repnz
cmc
outsl
imul
test
sahf
fdivl
arpl
push
or
mov
loope
pop
mov
adc
shll
lret
aam
or
pop
cmp
pop
add
jle
cld
inc
push
and
inc
jns
cmp
sbb
int
cmpsl
fs
cmp
push
mov
mov
cli
jl
push
adcl
cmp
sub
sbb
test
out
xchg
es
clc
int3
pop
add
xchg
test
jmp
or
or
repnz
push
testb
push
rclb
jl
xlat
mulb
sbb
and
mov
iret
add
xchg
sub
sbb
and
mov
cmp
int
push
rorb
imul
jmp
mov
pop
fidivs
mov
insl
insb
test
les
push
prefetcht0
mov
add
mov
mov
stos
std
adcb
mov
lret
cwtl
cmpsl
pop
movsb
and
cmp
popf
xchg
lahf
cmp
jns
inc
scas
mov
xor
pop
inc
mov
jno
leave
adc
push
xor
cwtl
adc
and
push
movsb
mov
out
mov
test
push
aaa
mov
inc
or
iret
ss
mov
jb
test
jne
into
inc
jbe
daa
or
ror
sbb
outsb
jae
inc
mov
mov
dec
pushf
sub
sub
xchg
fstl
xor
sbb
add
xchg
adc
mov
ljmp
sub
dec
inc
and
sbb
adc
ret
xchg
shl
nop
test
sub
inc
jmp
fdivr
lahf
mov
push
rcrl
add
fsubs
dec
xchg
cmp
pop
jmp
fwait
lods
nop
jae
adc
or
cltd
outsb
or
inc
jno
or
push
xor
adc
push
mov
push
add
scas
mov
push
and
dec
aam
pop
dec
push
push
push
sub
notl
sub
in
jb
out
movsb
sub
xor
push
dec
stos
xor
fnstcw
cmp
fistpl
push
push
vmovapd
sbb
rolb
mov
int3
cmp
add
mov
lods
pop
mov
mov
rcrl
sti
popa
pusha
jo
push
mov
out
daa
dec
push
cmp
stc
insl
jb
mov
mov
sbb
adcl
jae
push
arpl
sbb
push
pop
bnd
sub
jno
dec
movsb
test
test
in
repz
subb
xorb
fcmovnu
enter
fprem
push
out
js
jmp
int
jmp
push
xlat
push
jle
leave
add
lret
insl
jbe
mov
jl
pop
cmpsl
test
inc
push
popa
and
stos
das
mov
adc
mov
cld
stos
pusha
xchg
or
sti
or
hlt
cmpsb
xor
popf
or
pop
xchg
popf
xor
push
xchg
testb
xor
pop
enter
test
stos
sbb
adc
xor
fld
dec
sub
and
test
into
mov
arpl
fisttpl
loope
mov
test
fs
movsb
xor
ja
enter
bound
repnz
dec
xchg
ret
je
jg
xchg
call
push
mov
clc
int
mov
out
popa
mov
popa
icebp
aad
and
cmp
push
jg
pop
pop
sbb
sbb
xchg
test
mov
es
add
inc
push
sub
cmp
test
test
scas
sub
pop
and
inc
and
xor
mov
mov
in
push
jg
pop
jo
mov
data16
or
dec
sbb
iret
xchg
or
pop
pop
push
rcl
adc
push
outsb
push
mov
out
ja
cmp
std
mov
mov
dec
push
cmp
inc
add
shrb
mov
dec
and
cs
lods
aaa
mov
sub
add
in
stc
pop
test
cmp
push
das
decl
sub
in
push
imul
enter
mov
pushf
mov
xchg
pop
call
pop
icebp
mov
inc
lret
test
lea
mov
mov
fnstcw
popf
push
dec
mov
inc
mov
pushl
cmove
mov
inc
fldcw
inc
stos
sbb
dec
pop
xchg
pop
mov
repz
popa
pop
and
lahf
in
or
imul
dec
lods
decb
daa
cmp
loope
ficomps
call
ss
xor
inc
sub
jbe
pop
cmc
rcrb
or
jp
ret
or
ret
ror
movsl
inc
jbe
fwait
inc
xor
loop
mov
fidivl
xor
jmp
dec
pop
nop
cltd
cld
or
inc
sbbl
push
loopne
pop
movsb
jl
gs
lahf
mov
mov
loope
and
cs
adc
and
outsl
cs
inc
int
adc
sub
fistpl
mov
fbstp
jne
dec
sub
movsb
std
sub
out
jo
or
gs
sarl
add
les
dec
andl
push
pusha
push
test
jb
rol
sub
inc
cmp
and
mov
xchg
mov
mov
dec
jg
out
pop
xor
push
loopne
mov
sub
mov
inc
lods
stc
inc
mov
movsl
clc
dec
ja
cli
mov
jl
mov
add
xchg
cmp
xor
fwait
cwtl
das
addl
fiadds
cmp
mov
push
out
cld
lock
xor
lock
mov
push
mov
pop
mov
push
mov
push
dec
mov
repz
inc
int
mov
push
outsb
leave
fnclex
shrl
and
sub
and
xor
xor
add
xchg
loope
sub
scas
xor
stos
push
daa
push
xor
aam
push
stos
loope,pt
jp
sbb
mov
mov
jnp
mov
fiaddl
jle
fidivrl
inc
sbb
mov
jmp
push
fildll
outsb
sbb
fstpl
icebp
dec
or
cwtl
in
pop
shlb
je
aam
repnz
cmp
mov
lds
or
enter
imul
jns
xor
pop
pop
add
or
jns
xor
mov
test
jmp
push
jle
pop
fsubrs
mov
push
fisttps
cmp
not
mov
dec
loope
lcall
sbb
mov
xlat
xchg
pop
sbb
imul
shrl
loopne
or
cmp
sbbb
pop
sub
or
je
leave
mov
sub
repz
pop
test
call
aas
sub
scas
jae
fwait
add
insb
push
cmp
fnstsw
and
adc
mov
xlat
fisubs
push
cmp
mov
xchg
or
and
or
cmpsl
arpl
cwtl
push
cmp
rcrb
add
mov
mov
js
dec
subl
ror
jo
dec
xchg
adc
pop
loopne
hlt
mov
mov
bound
leave
pushf
fisttpll
fistps
in
mov
mov
aaa
push
cmp
scas
sub
add
xchg
dec
cmp
repnz
dec
xlat
cmp
rcr
xchg
sbb
cs
out
stc
enter
jp
xchg
jo
cmpsl
into
roll
dec
sub
stc
ss
out
inc
xor
stos
xchg
xchg
mov
push
rcr
lea
mov
dec
add
jp
shlb
jb
jecxz
xchg
sbb
mov
or
jl
lret
fnstenv
popaw
insb
sub
repz
cld
icebp
xchg
dec
lea
xor
mov
mov
cmp
int3
sub
xlat
fwait
insl
xchg
sub
into
push
je
add
sbb
push
mov
xor
stos
fisubl
std
or
pusha
inc
inc
aaa
push
das
test
fnstcw
arpl
hlt
push
sbb
cmpb
mov
repz
mov
sub
adc
outsb
jp
dec
push
imul
or
ficoml
cli
push
xor
mov
add
jecxz
dec
lret
roll
dec
into
into
and
int
pop
xchg
inc
push
xchg
xor
cmpsl
inc
xor
fnsave
out
adc
out
cmp
pop
cmp
sub
into
adc
cmp
aaa
add
jp
mov
pop
lods
dec
cmp
les
xchg
xor
add
pop
mov
push
shlb
mov
xor
sub
test
add
mov
and
push
fdivrl
adcb
xchg
jo
xchg
movsl
aaa
call
jp
mov
insb
dec
nop
cli
adc
fmul
pop
xchg
cmp
xchg
cs
push
mov
enter
jbe
ljmp
sarl
aas
push
and
sbb
call
push
pushl
dec
jecxz
fwait
iret
xchg
mov
jbe
dec
leave
js
aaa
lea
push
lcall
stos
out
cs
fwait
cli
movsb
adc
lods
dec
sub
sbb
sub
jge
mov
cmp
sarb
mov
jle
dec
fisubl
sbb
popf
jo
ret
sub
and
sbb
sbb
xor
add
cli
rolb
lods
lcall
dec
push
mov
insl
repnz
cs
test
dec
mov
neg
pop
sub
adc
nop
jp
and
jmp
pop
mov
cmp
movsl
shll
add
adc
xchg
xlat
es
cli
fucom
cmc
mov
out
inc
push
inc
push
loopne
nop
sub
repz
pushf
xchg
filds
adc
in
or
out
out
dec
push
shrl
arpl
mov
stc
ret
mov
stc
mov
cli
cli
adc
test
jnp
mov
cmp
mov
adc
dec
loope
xchg
fwait
pop
pusha
loope
mov
lods
mov
out
repz
icebp
and
or
dec
adc
or
loope
cmp
sub
adc
aam
cmp
fcmovu
or
or
repnz
int
mov
push
cltd
sub
sti
or
lahf
cli
sub
push
repnz
mov
push
rol
fidivl
in
mov
mov
int
lret
mov
sbb
daa
pop
test
pushw
pop
das
pusha
loop
mov
lret
adc
repnz
div
repnz
add
pop
xor
call
je
out
jmp
adc
xchg
jp
jb
lret
add
sub
jno
loop
add
inc
or
cmp
add
lea
mov
aas
outsl
inc
add
pop
ja
xor
es
add
movb
sub
addr16
xchg
lea
sbb
cli
xor
sub
and
andb
sbb
sarl
dec
sbb
ljmp
mov
cld
xchg
test
push
test
push
push
adc
xlat
pop
inc
pop
iret
and
mov
cmp
or
into
je
ss
adc
mov
stos
jp
inc
inc
mov
sub
pop
fmul
and
cmpsb
or
push
xchg
mov
mov
add
insl
subb
movsl
sahf
sahf
ret
cmp
mov
popa
cltd
repz
add
insb
dec
into
jmp
in
std
stos
fwait
in
xchg
cmp
dec
js
xor
rcl
int3
sbb
shll
push
or
jge
es
dec
sbb
inc
xchg
int3
cmp
jle
fidivrs
adc
add
add
pop
pop
gs
jbe
add
int3
mov
push
mov
pop
cld
cmp
pop
xchg
loopne
xchg
and
lods
fisubs
xor
jae
dec
mov
mov
mov
jg
adc
ja
push
cmpsb
add
ret
fs
xor
jno
sbb
test
jo
push
sti
jge
mov
jb
mov
aas
shlb
dec
jno
push
and
lods
dec
cmpsl
rcl
test
and
ficomps
fs
sbb
icebp
adc
test
mov
je
pop
adc
cmpsb
cld
pop
fwait
inc
lret
push
sub
orl
jno
out
xorl
inc
sbb
dec
inc
jno
jg
xchg
xchg
xchg
add
jno
in
lcall
jb
xor
pop
clc
xor
pop
add
ja
in
lret
adc
test
data16
in
pop
add
jle
mov
lods
rcrb
in
and
insl
popa
das
mov
dec
cmp
xor
out
add
decb
fs
mov
jp
cmp
push
in
dec
into
scas
push
nop
jb
stos
mov
jle
divb
or
fidivs
sbb
inc
mov
outsb
jecxz
in
jns
add
add
subb
pop
lock
scas
mull
inc
xchg
mov
test
xchg
cmc
fbstp
push
out
jo
aas
ret
std
js
sbb
lods
arpl
clc
movsl
nop
mov
cmpsb
adc
jecxz
lret
cmp
test
pop
and
mov
cmpsb
cltd
mov
and
insb
shrl
lds
das
lock
iret
push
xchg
das
repz
filds
lock
xor
ss
xor
mov
add
push
sub
sti
add
inc
in
xlat
dec
incb
mov
xor
fldl
cmp
loop
arpl
int
jle
jne
push
pushf
imul
push
mov
rep
inc
sti
int
dec
out
mov
inc
ss
lret
cld
mov
cmp
test
push
cmpsl
jbe
add
in
lods
xor
cld
inc
std
add
mov
adc
fcoms
xlat
stos
push
leave
pop
mov
hlt
loop
and
rcrl
sbb
pushf
cmp
sub
adc
xchg
movsl
je
lcall
ret
stos
call
mov
sub
test
mov
mov
scas
scas
jmp
xchg
push
dec
push
inc
shll
rcrb
cmp
sub
mov
cli
cmp
insb
xchg
lock
mov
jb
nop
scas
test
mov
pop
xlat
gs
add
jno
into
add
cmp
sub
mov
je
mov
sbb
mov
cld
sub
lea
sbb
and
lret
xorb
mov
sbb
and
sti
mov
jb
lret
adc
mov
rorb
pop
cli
pop
addl
inc
call
shr
add
nop
cmp
data16
push
mov
int
repnz
decl
mov
xor
inc
xor
dec
sub
and
xchg
fwait
lds
repnz
mov
cwtl
mov
mov
stos
mov
dec
mov
in
cld
add
ret
xlat
xchg
lods
movsb
leave
sti
pop
mov
out
insl
dec
jp
mov
sub
loop
push
in
mov
ret
fldenv
and
push
lcall
sarl
push
or
jl
xor
sbb
and
dec
and
jle
push
dec
adc
mov
dec
pop
test
lcall
push
fnstenv
inc
jne
fsubp
pop
mov
scas
pop
int3
pop
inc
pop
mov
ret
nop
inc
push
add
mov
imul
jns
cmp
das
les
xchg
and
inc
push
insb
and
add
adc
adc
jnp
data16
loop
or
mov
lods
lock
lret
fcompl
pop
inc
call
cmp
cmp
pop
lahf
cmpsl
test
jecxz
shlb
stos
sub
jge
push
rol
inc
mov
rol
mov
cmpsl
adc
aas
out
inc
cltd
push
cmp
stc
in
out
sbb
jnp
ficoml
std
push
mov
in
pop
imul
out
mov
adc
pop
push
xor
repz
cli
cmp
mov
popf
pop
in
pop
dec
dec
add
je
pop
test
cmp
dec
movb
xor
add
sub
stos
test
sbb
cwtl
lret
push
mov
jg
stc
mov
sbb
int
mov
adc
cmp
sbb
and
mov
push
jle
movsb
and
cld
pop
push
mov
scas
pop
lret
imul
stc
add
fidivrl
lcall
and
testb
and
jl
push
nop
mov
outsl
lret
cmp
idivb
and
das
mov
xlat
test
sub
mov
inc
sbb
mov
sub
cmp
push
mov
jb
cmp
repz
test
push
mov
push
je
jns
sbb
xor
mov
mov
dec
fcompl
mov
andl
std
mov
mov
stos
mov
rcrl
repz
in
aaa
and
sahf
push
sbb
aas
cmp
xor
movntps
in
ret
or
inc
sbb
outsl
jnp
and
sbb
lahf
in
cs
sub
aad
add
dec
xor
out
jo
add
mov
mulb
xchg
test
scas
mov
insl
lcall
adc
icebp
mov
jb
mov
stos
stos
dec
lds
jl
loop
pop
pop
or
mov
mov
add
cltd
push
sbb
xor
xor
hlt
mov
mov
aad
aad
fstl
adc
xchg
pop
cmpsb
adc
daa
mov
push
push
mov
test
stos
xchg
ror
in
leave
mov
jmp
shlb
loope
pop
movsl
inc
sbb
pop
adc
outsl
cld
and
cwtl
out
int3
or
inc
addl
xchg
push
push
or
xchg
xchg
mov
add
mov
inc
lcall
xor
push
out
movsl
mov
enter
pushf
dec
imul
sub
mov
xlat
stos
and
add
stc
push
cwtl
inc
and
ret
es
ficoml
pop
enter
fwait
stos
adc
and
rol
pusha
arpl
inc
sbb
fsubrp
insl
and
int3
int
dec
stos
inc
push
push
fmulp
stos
adc
mov
xchg
movsl
ljmp
push
test
aam
or
fistps
cmpsb
sbb
mov
cmc
repnz
or
clc
popa
jg
add
mov
cs
lock
xchg
push
cmpsb
insb
rcl
js
inc
mov
cmc
sahf
cmc
cmp
push
dec
inc
mov
in
cltd
cmp
xchg
jmp
mov
test
dec
sbb
xchg
mov
enter
daa
rolb
hlt
dec
cmp
inc
shlb
ror
pusha
cld
adc
hlt
cmc
fdivl
jecxz
mov
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
or
aaa
pop
jp
jo
cmp
loopne
fstpl
movsl
cmp
mov
idiv
pop
insb
rcr
jb
loopne
or
jne
dec
iret
sbb
xchg
in
lret
push
movsb
mov
fdivrs
jge
jmp
clc
xor
fistpl
xchg
push
add
add
add
cmp
fsubrp
sub
jge
loop
movsl
filds
popa
or
pop
xor
dec
je
lods
daa
into
mov
adc
fistpll
jnp
negb
cmpb
pop
dec
roll
add
pop
ss
mov
scas
inc
sti
mov
sbb
dec
push
test
push
sbb
je
xor
test
rcrb
insb
sar
push
mov
in
stos
adc
cmp
add
cmpl
in
js
sub
ficoms
test
push
movsb
mov
lds
fnstcw
mov
add
sub
push
push
xor
aam
frstor
jnp
push
enter
in
push
sub
and
and
push
inc
nop
leave
add
test
xchg
push
fdivs
jae
addb
lcall
icebp
mov
insl
inc
je
jmp
cmp
std
sbb
sbb
shll
das
bnd
push
lock
sub
mov
loop
movsb
mov
push
lods
xchg
mov
push
inc
add
pop
sub
push
push
outsl
fnstenv
cld
dec
les
pop
fistps
adc
arpl
outsb
adc
jae
jae
push
xchg
lods
sbb
mov
sbb
or
push
cwtl
ja
lea
sbb
lock
inc
push
adc
and
addl
xchg
push
xor
fldenv
mov
and
cli
test
mov
ret
cltd
inc
inc
ljmp
xlat
mov
jb
aas
adc
daa
iret
or
and
dec
adc
adc
jmp
jp
aas
pop
loopne
xlat
enter
imulb
rcl
add
push
xchg
les
sahf
adc
jmp
cli
and
push
cmp
lea
test
dec
inc
mov
lods
and
std
pop
fsubs
or
inc
adc
inc
cmp
push
int
imull
xchg
lcall
cltd
xchg
test
aam
xchg
imul
notl
mov
jbe
inc
pop
sbb
mov
mov
insb
jle
test
loope
cmpl
aam
cmp
cmp
fwait
test
call
mov
nop
mov
movd
gs
and
dec
inc
push
mulb
popf
jge
xchg
addl
mov
xchg
pop
shlb
sarl
jmp
push
lods
out
fidivs
pusha
dec
jbe
fs
mov
jae
jmp
test
popf
mov
stos
aaa
pop
dec
xor
ja
jmp
push
popa
aam
aas
xor
aas
das
cmp
xchg
loop
mov
clc
cmp
jno
cmp
aas
in
adc
adc
cmpsb
add
xchg
imul
xchg
or
push
call
mov
test
test
adc
sbb
mov
or
jg
jp
fistps
es
jge
sti
das
jno
popa
rorl
in
mov
shl
xchg
mov
xchg
xchg
xchg
int3
xchg
das
cmp
push
mov
or
and
xchg
ret
mov
call
lods
pop
out
in
out
scas
fs
xor
pop
ljmp
cld
push
test
mov
and
cwtl
repnz
pop
dec
pop
and
jecxz
aaa
or
sbb
iret
movsb
pop
lods
dec
fs
sbb
fsub
push
insl
movsl
mov
cmp
int3
and
add
stos
outsb
dec
movnti
and
test
add
jae
das
loopne
cmc
lods
push
mov
jmp
push
pop
rclb
mov
mov
inc
lret
pop
inc
dec
jg
movl
arpl
or
cmc
shl
push
jb
mov
movsb
std
dec
hlt
lea
jle
lods
lahf
push
mov
cmp
adc
ret
shrl
push
stc
out
movsl
jp
ljmp
sub
jns
mov
ss
push
cmp
pusha
mov
fldenv
ror
out
fnstenv
jno
fadd
adc
fsub
hlt
sbb
pop
in
xchg
cmp
in
mov
lret
gs
mov
bound
or
outsb
fisttpl
pextrw
loopw
out
cld
mov
xor
jnp
je
sub
and
mov
movsb
fs
stos
mov
movsb
mov
mov
dec
aaa
es
adc
and
push
daa
cmpsl
push
inc
scas
xchg
cmp
ret
pop
arpl
ss
lret
lea
or
cmp
inc
xor
push
pop
dec
das
cmp
lret
cs
pusha
pop
je
lods
imul
sarb
mov
mulb
sbb
mov
mov
inc
cmp
sbb
outsb
aad
xor
push
pop
out
xchg
mov
sub
shll
or
sti
and
inc
add
and
jns
lahf
std
pop
shlb
loop
adc
lock
mov
lea
imul
jecxz
inc
jge
test
test
jmp
out
lds
xchg
test
clc
data16
cmp
cmp
inc
repz
push
push
mov
movsl
pop
inc
pop
mov
call
outsb
lcall
insb
or
mov
dec
xchg
mov
pop
jge
inc
add
pop
test
and
or
arpl
outsl
fdivl
gs
idivb
ljmp
rolb
and
push
sbb
arpl
mov
add
push
push
push
and
dec
mov
and
jmp
cld
je
das
adc
mov
xchg
rorb
add
fsubrl
andb
pop
mov
mov
mov
lidtl
bound
outsb
and
pop
cmpsl
mov
gs
mov
inc
jnp
jg
dec
in
jecxz
add
lret
or
cmc
jae
sbb
adc
incl
icebp
push
sub
stos
mov
js
mov
xchg
adc
rcrl
ficoml
loop
xor
cmp
mov
xchg
cli
ss
out
and
push
pusha
cmpsb
sti
cltd
xor
outsb
test
leave
sarb
mov
jge
xchg
clc
pop
fs
add
jmp
clc
sti
adc
push
xchg
stos
lods
into
push
test
packsswb
out
mov
sub
mov
mov
mov
fdiv
jae
add
fs
lea
mov
mov
aad
xor
movsb
cmpsb
ret
xchg
loope
enter
push
sbb
nop
xor
cld
push
mov
mov
mov
adc
idivb
lahf
nop
ja
jp
cwtl
inc
gs
nop
push
sub
mov
cmp
out
lret
mov
lea
cltd
cld
mov
mov
cmp
cmc
push
lret
jg
lahf
mov
arpl
or
inc
cld
cmp
enter
and
nop
xchg
and
mov
pop
jmp
das
fisttpll
out
mov
push
add
xlat
jnp
jl
xchg
or
xchg
mov
shrb
or
stos
fidivl
mov
mov
cmc
or
mov
mov
cli
pop
movsb
daa
and
loopne
mov
pop
xchg
adc
mov
sbb
fnsave
imul
mov
out
adc
cmp
cmpsl
int
pop
mov
fcmovne
adc
inc
xchg
sub
xor
adc
xchg
jmp
es
add
inc
xchg
sbb
mov
add
add
popa
lods
dec
adc
or
call
dec
lods
movsl
sahf
inc
sbb
jp
xorb
mov
in
sbbl
pop
mov
push
lret
mov
out
jo
aam
push
sub
mov
jge
sub
outsb
xchg
pop
xor
aaa
and
adc
lret
dec
sub
fsts
notl
incl
push
xor
xor
pop
cmp
repnz
pop
add
pop
lcall
and
sbb
pop
jnp
dec
ret
divl
call
fstl
mov
loopne
les
test
jmp
hlt
cmpsb
sahf
jl
jno
popa
add
test
mov
popl
mov
insl
repnz
jle
sub
or
aaa
xor
lcall
sahf
and
pop
cwtl
push
fs
lahf
mov
sbb
or
push
nop
mov
jg
xor
dec
push
fbstp
sub
push
mov
jecxz
loopne
push
sub
repz
pusha
jl
les
call
stc
sub
jle
push
lret
dec
aaa
out
test
xor
or
mov
mov
movb
ljmp
arpl
stos
inc
sub
lahf
fimuls
rorl
jmp
and
sbb
adc
aad
xchg
loop
mov
lds
insl
push
add
sbb
or
and
addr16
sub
addl
push
cmpsb
inc
cmpsl
repnz
lods
sbb
cltd
loop
xor
iret
mov
inc
or
loopnew
dec
pop
sub
scas
and
adc
movsl
sub
inc
lret
sarb
mov
mov
ficomps
dec
pop
xchg
inc
mov
dec
pop
add
inc
push
lods
inc
or
int
lods
mov
arpl
sub
test
dec
push
movsl
mov
xchg
xchg
sub
xsaveopt
test
add
xchg
and
xchg
in
cmpsl
bound
clc
mov
gs
jns,pt
ret
pushl
add
and
or
dec
dec
movsl
push
sub
adc
jbe
pop
add
inc
adc
stc
testb
jmp
sbb
aaa
push
leave
sbb
popa
pop
sahf
stc
pushf
arpl
jae
xlat
mov
call
cmp
push
pop
jmp
push
jns
xlat
fistpl
jle
inc
cld
orl
cli
dec
filds
push
mov
or
mov
and
repnz
rorl
push
add
jne
scas
pusha
gs
cwtl
icebp
stc
cwtl
fcmovb
sub
fwait
inc
mov
pop
push
dec
aas
xor
push
or
incl
pop
inc
fisubrl
es
mov
imul
scas
mov
loope
sub
mov
sbbl
jb
mov
and
ficompl
pop
push
mov
mov
int3
stc
jns
aam
sbb
test
inc
lea
sbb
out
test
loope
imul
popa
dec
mov
xlat
push
xchg
pop
int3
iret
hlt
jns
pop
or
aas
sub
push
xchg
nop
push
jnp
push
fwait
mov
mov
or
sub
mov
lea
pop
mov
fisttpll
cmp
out
xchg
popa
lock
fsubp
sbb
aad
outsl
aad
mov
or
pop
and
cld
in
pop
sbb
mov
lret
pushf
out
mov
iret
push
lock
sbb
in
push
int3
xchg
adc
cmp
push
out
pop
loope
sti
and
inc
cmp
sbb
sub
xor
and
adc
lret
sub
testl
mov
std
jb
out
mov
push
out
mov
test
cld
stc
mov
mov
jne
jno
pushf
scas
mov
daa
lahf
lcall
or
adc
scas
call
popf
cltd
xlat
pop
test
cmc
insl
ret
loope
insl
ljmp
pop
pop
stos
mov
inc
out
jg
adc
xor
and
sub
mov
push
mov
not
in
fcmovnu
inc
insb
mov
mov
jae
mov
cltd
add
popa
sar
adc
dec
outsl
sub
or
jb
sub
inc
cld
jle
and
lock
adc
frstor
imul
push
roll
adc
mov
or
xchg
jo
addr16
inc
scas
jnp
xor
dec
pop
lods
push
sbb
lret
rcll
daa
push
adc
fs
and
add
sub
sbb
xchg
cmpsl
in
xor
testl
mov
sbb
imul
pop
lcall
mov
das
pop
dec
pop
mov
mov
popf
int
in
mov
or
mov
pop
dec
cmp
sub
ret
add
cmp
inc
imulb
mov
mov
or
sbbl
xchg
jne
mov
dec
inc
pop
sub
push
xchg
ljmp
xor
cli
mov
mov
sbb
in
push
test
dec
cmc
pop
jb
mov
adc
test
jnp
cld
xchg
add
adc
ficoms
push
test
jl
cmpsb
inc
sbb
add
push
or
shll
mov
xchg
and
movl
int3
cmp
sbb
pop
pop
cmpsl
inc
xchg
jp
mov
lahf
aaa
jg
lret
cmp
pop
sbb
cli
ret
or
jo
aaa
test
jecxz
fistpl
mov
stos
jo
ja
dec
fwait
test
movsl
mov
mov
add
cmp
dec
out
mov
outsl
sti
mov
ret
jne
pop
or
hlt
je
dec
lock
push
push
push
sbb
adc
clc
add
faddl
hlt
adc
std
pushf
test
enter
enterw
sbb
add
lcall
sbb
inc
aad
inc
jp
pop
xchg
adc
mov
pusha
inc
std
ret
notb
xchg
aad
and
mov
call
pop
xor
mov
into
mov
cmp
shlb
orb
dec
imul
mov
cmpsl
adc
stos
ret
dec
repnz
je
push
jno
and
insb
mov
push
inc
xor
enter
or
jns
push
sbb
pop
adc
pop
cltd
int3
fwait
testb
push
out
or
cltd
mov
mov
sbb
dec
repz
mov
cmp
test
push
inc
jmp
sbb
mov
pop
scas
dec
add
dec
lock
jb
xchg
and
lea
jmp
cmp
sub
jb
cld
cmp
dec
mov
dec
dec
cmp
add
push
fldcw
divl
into
and
and
mov
mov
push
mov
mov
leave
lahf
jo
daa
push
dec
ss
nop
loope
insb
shlb
add
setne
or
dec
xor
pop
sbb
insl
add
mov
fdivp
fcompl
jb
fiadds
fld
imul
push
rorl
xchg
xchg
jno
add
mov
imul
int
sbb
xchg
inc
push
xchg
lock
cmc
fsubrp
mov
das
mov
inc
inc
inc
subl
aas
dec
mov
fistps
or
push
pushf
ds
shl
out
sbb
scas
notl
rcl
inc
xor
jle
sbb
notl
sub
scas
xchg
test
jmp
sub
subl
or
and
jg
pop
je
lods
cmp
cmp
push
mov
aas
lret
mov
add
loopne
ret
mov
lock
jg
xchg
popf
nop
in
mov
or
mov
dec
push
inc
cmpb
push
add
sub
enter
or
push
nop
jecxz
pushf
sbb
int
cmp
addr16
add
je
mov
int
mov
mov
ret
mov
jecxz
gs
testl
out
jmp
jp
fmull
popa
dec
push
mov
dec
dec
cltd
js
push
adcb
jo
mov
dec
pop
enter
mov
pop
ficomps
push
pop
out
pop
mov
push
jae
cmp
out
lcall
or
cwtl
xor
in
lret
fisubl
mov
shl
jle
pop
adc
mov
femms
mov
jnp
rolb
xor
cmp
je
xor
test
mov
cs
cwtl
jmp
inc
or
ror
dec
imull
addl
xor
cli
es
in
and
mov
jae
mov
out
outsl
mov
mov
mov
mov
fsubr
clc
ss
cmp
lock
pop
outsb
bnd
bound
lret
mov
xchg
movsb
mov
psrlq
aaa
sbb
stos
orb
fisttps
or
shrb
js
and
sbb
inc
mov
in
and
test
rorl
icebp
aaa
cmp
sub
dec
push
push
sti
and
dec
mov
jo
aad
dec
inc
lret
sub
jo
cmp
test
or
cmp
dec
pop
addb
jge
insb
push
pop
andb
in
cmpsb
scas
mov
jg
xor
pop
scas
cmovb
xorl
stos
fiaddl
lods
arpl
inc
in
loope
mov
pop
push
adc
stos
inc
fwait
ja
sti
lret
xchg
leave
insb
enter
insl
stc
outsl
push
repz
aas
and
cmp
mov
movsl
outsb
ret
sarb
fwait
dec
mov
mov
cld
jnp
mov
xchg
add
movl
jns
mov
xchg
mov
xor
dec
or
cmp
aad
fdivs
sbb
popf
arpl
jmp
jns
cmp
popf
xor
sti
call
fwait
fs
mov
or
insb
or
iret
or
mov
int3
ret
cmp
push
jb
aaa
jns
aam
mov
xor
xchg
and
popa
es
sti
sarb
adc
add
loopne
pop
pusha
rolb
pusha
sti
pop
jae
movsb
sti
jl
loopew
jg
mov
cmpsl
inc
xchg
pusha
mov
out
outsb
std
lds
or
js
or
ret
lret
repnz
pop
ja
in
add
or
mov
outsl
inc
repz
rcll
lock
xor
fwait
scas
mov
lahf
push
inc
ret
dec
mov
or
cs
mov
xchg
jp
rcrb
sahf
cli
xchg
test
inc
fstps
adc
ljmp
bound
in
mov
jle
sub
mov
xor
aaa
dec
dec
cmp
in
mov
aas
add
mov
scas
mov
jl
cli
ret
in
insb
test
jne
pop
jbe
rcrl
mov
pop
pop
je
xchg
les
jle
aam
mov
sti
pop
xchg
xor
dec
mov
outsl
lret
mov
das
outsb
mov
and
idivb
dec
pop
xor
mov
and
cmp
in
push
inc
rcrl
dec
movsl
addl
sbb
je
pop
aad
mov
jge
ljmp
xchg
aad
sub
flds
xchg
sbb
cmc
popa
aaa
ds
mov
pop
repz
loop
lahf
jp
stos
psrad
fnstcw
push
fadds
mov
lcall
out
repz
jl
hlt
mov
push
cmp
jnp
lea
push
out
pop
fbstp
fisttps
push
mov
xor
lock
adc
loopne
cld
cmpsb
xor
test
sub
jmp
or
lret
xor
int
mov
sub
push
and
sbb
sub
adc
xchg
icebp
sbb
pop
xor
ljmp
pop
push
ret
lret
test
fstps
jge
pop
dec
cmp
cmpsl
mov
sahf
imul
fstl
pop
dec
fwait
int
mov
shlb
lock
in
rcr
sti
neg
xor
cmp
and
push
cmp
aaa
ja
xor
sbb
and
push
xor
push
xchg
insb
into
je
push
cmp
inc
movsl
cwtl
es
add
mov
add
inc
ds
aad
addb
outsb
loope
mov
lret
sbb
mov
jne
add
in
adc
fiaddl
fcompl
mov
push
cmc
sub
and
adc
mov
dec
mov
cmp
stos
dec
out
adc
fisubl
addr16
test
jb
push
mov
pusha
jns
cmp
mov
loope
pop
outsb
fdivrp
movd
leave
adc
popf
mull
or
xchg
sub
aaa
aas
cmp
in
pop
sub
adc
cli
sbb
push
add
mov
push
fsts
fistl
or
xchg
mov
sub
jge
and
insb
adc
pop
add
out
fisttps
idivl
div
add
test
movsl
shll
mov
sub
in
cli
mov
lds
jo
hlt
cmc
xrelease
lds
aad
call
arpl
hlt
push
addb
fsubrs
pop
test
outsl
adc
and
fsubl
clc
stos
daa
push
sbb
fmuls
aad
adc
movsl
push
dec
dec
and
sbb
mov
or
divl
cwtl
and
xlat
mov
dec
in
cmpsb
jo
loopne
sti
outsl
mov
jle
in
ficomps
xchg
pop
mov
xchg
ljmp
xor
rcll
xchg
xchg
cmp
movl
mull
dec
sbb
add
lods
adc
into
jb
push
outsb
aam
push
int3
mov
test
jnp
fwait
mov
adc
mov
inc
mov
jecxz
push
cmp
jp
ja
mov
sbb
sub
rorb
mov
pop
push
cwtd
cli
xchg
imulb
add
stc
in
shll
imul
jp
daa
jnp
and
lock
sbb
fmulp
dec
nop
adc
add
cmp
cwtl
xor
pop
imul
jg
cmpl
out
xor
scas
gs
sahf
lcall
adc
and
sbb
test
mov
test
cmpsb
xor
mov
pop
mov
ss
mov
stos
scas
dec
and
inc
shlb
adc
aam
adc
adc
and
dec
and
out
inc
leave
cmp
sbb
jmp
jp
xor
xor
mov
xchg
inc
jb
out
xchg
mov
mov
jmp
mov
out
add
cwtl
and
or
and
daa
jno
hlt
cmp
mov
loopne
sbb
or
out
ds
pushf
inc
add
lea
jns
dec
mov
pop
add
jno
lds
pop
rorl
out
xchg
pushf
test
lret
jge
mov
or
push
add
mov
dec
test
dec
add
in
lods
subb
adc
lret
mov
mov
and
ja
jle
cmp
lcall
bound
mov
mov
cmp
popf
inc
icebp
stc
pop
sbb
dec
rorl
cmp
call
fstl
call
inc
rol
xor
jecxz
test
dec
lock
xor
mov
or
push
imul
mov
xlat
mov
insb
jge
mov
test
push
add
jns
pop
mov
or
xchg
imul
mov
mov
adc
sti
cld
sahf
jmp
fidivl
aaa
sbb
sub
cmp
xor
jnp
mov
adc
inc
mov
cltd
fstpl
pop
dec
pop
jecxz
xchg
stos
stos
sahf
test
hlt
cmp
cwtl
jo
pop
mov
arpl
xor
notl
in
insb
xor
int3
inc
int
andb
dec
je
sahf
daa
inc
pop
push
out
imul
cwtl
rolb
aam
push
or
xchg
or
sbb
mov
pop
dec
sti
dec
in
mov
in
xchg
pop
mov
ljmp
sbb
roll
roll
iret
xor
sub
out
jae
cli
fisubrl
fists
leave
sub
stos
add
push
sbb
push
push
pop
in
loop
aas
or
aad
sbb
sub
mov
hlt
push
xor
and
add
jl
in
ljmp
flds
out
fs
adc
jnp
sbb
inc
push
js
fistpll
xchg
out
dec
and
ret
mov
std
mov
xchg
dec
pop
aam
lods
jp
adc
lods
in
in
arpl
dec
pop
lea
add
xorb
xchg
add
ja
jne
hlt
dec
subl
pop
mov
xchg
mov
and
xor
jo
mov
fstps
xchg
mov
pop
cmpsb
xchg
cmp
pusha
cmpsl
push
jecxz
rol
int
add
subb
lahf
out
aad
add
mov
sbb
daa
mov
sbb
subl
or
lock
xchg
push
loop
cmp
push
in
out
sbb
outsl
ret
aaa
pusha
inc
fildl
pushf
popf
sbb
or
mov
repz
imul
inc
movsl
cmp
rep
xchg
add
xchg
or
xor
ds
pop
in
adc
cwtl
or
aaa
das
mov
mov
pop
mov
stos
pop
nop
dec
enter
jmp
rcl
pop
lea
into
mov
push
xchg
in
sbb
jae
sbbb
ja
pop
mov
xlat
aaa
and
movsl
push
push
push
out
in
and
inc
lods
cmp
outsb
jge
lcall
cmp
decb
cwtl
fldcw
xchg
fdivl
int
ret
lods
mov
out
ja
arpl
insl
sbb
aaa
lods
cmc
fcoms
filds
sub
ja
sub
cltd
ficomps
pop
sbb
ret
pusha
lods
sbb
in
push
jle
inc
nop
into
mov
add
in
sbbl
jnp
gs
lods
xchg
xor
ret
xchg
push
ja
arpl
aaa
lods
pop
stos
das
stos
js
scas
repz
jge
mov
out
dec
jge
js
mov
cmc
popa
push
scas
cmpsb
push
add
or
int
scas
test
out
pop
sahf
push
pop
aam
cltd
paddd
in
mov
push
xchg
sbbb
or
pop
sti
int3
mov
pop
outsl
mov
mov
and
fsubp
subl
cld
inc
bound
lahf
mov
aaa
mov
inc
data16
mov
test
shrb
ja
mov
aam
jmp
jmp
pop
rclb
lds
jge
mov
lret
xlat
out
and
add
adc
sbb
adc
and
xlat
jbe
mov
daa
add
dec
sbb
aas
adc
xorb
pop
xchg
cli
sub
mov
cmp
mov
iret
mov
push
divb
and
jnp
mov
xchg
mov
js
or
dec
mov
jle
cmpsl
xchg
sub
inc
imul
jge
lds
aaa
loope
out
inc
cmp
in
mov
mov
pop
push
ds
clc
cmpsl
addr16
pushf
cli
fiadds
andl
mov
in
pop
sub
loopne
jmp
xor
xor
mov
pop
lahf
mov
mov
pop
cmpsl
jnp
or
jae
rclb
adc
cld
push
xor
push
add
jae
inc
and
sub
je
xchg
sbb
or
pop
pop
fimuls
rcr
test
in
bound
xchg
sbb
mov
es
aad
dec
add
dec
pop
mov
mov
add
push
test
mov
cwtl
int3
add
cmp
cli
inc
mov
cmp
arpl
fdivs
lds
loop
add
sahf
addr16
cmpsb
pop
andl
mov
pop
vcmpss
mov
pop
jns
jnp
mov
shll
inc
sbb
mov
lret
in
jp
push
adc
out
imul
add
lcall
pop
xlat
scas
ret
sbb
push
aam
adc
shrl
dec
in
mov
pop
and
adc
jp
sarl
in
inc
pushf
rorl
aas
jo
add
outsb
mov
andl
test
mov
iret
js
fcoms
cltd
inc
std
mov
andb
ljmp
jno
jns
scas
dec
fs
pop
lods
xchg
movsb
jb
sbb
mov
fwait
jle
int3
mov
je
int
inc
insl
repz
mov
ret
pusha
stos
dec
pop
xor
inc
jp
pop
dec
lds
inc
fldcw
xorb
mov
push
in
out
pop
jbe
xor
rcll
pop
jecxz
xchg
jg
repz
push
ret
xchg
cmp
add
fsubr
adc
in
xchg
xchg
dec
xor
push
dec
mov
lods
cmpb
mov
mov
movsb
iret
mov
test
stc
adc
inc
adcb
sub
out
sbb
xchg
pop
jmp
fbld
xor
das
inc
mov
sahf
ds
cmp
cmp
mov
push
out
sti
xchg
push
xor
inc
pop
cs
out
lods
test
scas
and
imul
jle
cmpsl
push
cmpsb
lea
outsb
inc
mov
or
and
stos
push
jno
sbb
dec
mov
das
sbb
roll
repz
pop
push
ret
es
fwait
ja
cmc
mov
jb
addr16
add
std
push
test
jnp
xchg
xchg
cmp
lea
popa
inc
lret
stos
rcl
xor
xlat
adc
scas
lds
push
inc
shll
test
mov
mov
aam
shrb
bound
mov
jnp
xchg
cmpl
out
dec
dec
js
sub
shrb
aaa
popa
jns
xchg
mov
sbb
jne
dec
push
or
add
adc
sub
fs
insb
dec
mov
jmp
cld
mov
icebp
lret
jecxz
jp
pop
and
or
into
pop
mov
pop
adc
pop
lcall
shll
test
lds
dec
gs
cmc
cmpsb
pusha
adc
cld
sub
pop
fnstcw
sbb
shl
mov
sub
cmp
js
or
or
les
repz
aad
dec
les
cmp
push
pop
je
shlb
into
push
ljmp
cltd
xchg
or
lock
gs
clc
and
daa
and
mov
mov
sti
loope
jae
test
jno
insl
insb
push
cmpsb
outsb
rcll
adc
pop
or
mov
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
push
ficoms
icebp
sub
stc
mov
cmp
cld
fistpll
adc
in
iret
subl
and
mov
dec
or
shl
pop
fwait
adc
mov
sti
jp
xchg
push
cmp
enter
aad
stos
xchg
pop
pop
sub
arpl
fisttps
aas
sbb
jne
or
in
test
adc
out
push
mov
sub
add
das
cwtl
mov
sbbb
in
mov
cld
inc
hlt
cmp
mov
outsb
ror
dec
mov
arpl
popa
jg
mov
ss
test
test
mov
and
jns
xor
push
movsb
cli
enter
mov
jbe
fwait
loopne
mov
subb
dec
fmuls
lock
xlat
bound
lahf
xchg
inc
scas
sahf
cltd
push
cmp
movsl
mov
fstl
les
adc
sbb
cmp
adc
fstpt
fdivr
mov
inc
add
mov
in
fs
rclb
loop
in
sub
push
jno
andl
es
xor
cmp
mov
pop
cmp
leave
shlb
popa
jns
aad
lods
mov
adc
or
imul
dec
nop
cmpsl
cwtl
arpl
addr16
dec
repnz
push
outsl
mov
addr16
stc
mov
lahf
mov
xchg
movsb
xchg
lds
adc
mov
xchg
mov
pop
add
ret
addr16
testb
mov
lret
sub
push
faddp
int3
repnz
ljmp
mov
add
cmp
mov
call
jecxz
and
push
lods
xor
inc
rcl
push
ret
mov
lcall
fxsave
pop
add
xor
cmpsb
jecxz
dec
data16
loopne
pop
ret
pop
push
addr16
mov
cmpsl
jecxz
int
testl
pop
inc
sbb
mov
mov
mov
and
push
movl
fidivl
frstor
mov
js
inc
pop
mov
mov
out
dec
cmpsl
outsb
sub
les
inc
lret
push
xchg
in
xor
dec
xlat
jle
push
mov
cmp
das
ljmp
jmp
test
ret
mov
int
sub
cs
jle
scas
mov
outsb
add
loopne
aas
out
push
icebp
and
xor
add
jp
fsts
or
xor
dec
loope
or
cmp
jnp
scas
pop
imul
jle
insb
sub
jecxz
imul
test
clc
pusha
dec
loop
dec
jo
sbb
cli
into
dec
add
pop
add
out
test
js
add
jecxz
out
aaa
or
sub
sbb
sbb
je
xchg
pushf
inc
pop
pop
dec
inc
repnz
sarl
es
lods
testb
aad
inc
xor
inc
mov
loopne
out
stos
add
adc
sbb
out
push
xchg
adc
mov
sub
and
jne
lea
pop
cmp
and
flds
jg
mov
out
push
jge
int
sbb
jl
adc
outsb
iret
cli
ret
lret
inc
mov
inc
popf
and
sbb
pop
pusha
mov
gs
in
sub
fstl
and
mov
inc
lcall
cmpsb
jnp
ljmp
cmp
psraw
inc
in
flds
inc
add
adc
cmc
jb
test
test
pop
addl
adcl
dec
sbb
push
mov
fidivrl
add
and
and
jb
cs
scas
mov
dec
add
sbb
add
xorb
sarb
push
mov
xor
mov
gs
out
shll
shrb
enter
imul
aad
xor
ja
popf
jno
and
cmp
adc
in
cld
push
iret
inc
dec
enter
push
add
cltd
fscale
aas
fidivrl
mov
frstor
mov
push
cmpsb
add
mov
inc
test
cltd
lods
ja
fistpll
sub
imul
push
jnp
mov
mov
fdivs
movsb
mov
sahf
mov
or
or
mov
loopne
inc
aad
fisubl
cmp
mov
outsb
sub
and
decb
pop
scas
mov
test
clc
push
cmpsl
sbb
scas
mov
dec
notl
fmul
push
cmp
fdivrs
lds
dec
dec
adc
jl
adc
mov
gs
xlat
mov
push
cmpsb
fisttpl
cmp
add
ljmp
jns
adc
fstps
adc
clc
cli
insl
cmp
inc
mov
pop
add
fs
dec
das
adc
addr16
popf
cmp
sub
xor
clc
repnz
arpl
daa
idivl
push
inc
xchg
mov
dec
repz
add
and
test
clc
xor
or
enter
sub
sub
sub
jge
ds
jne
lods
jg
aam
scas
ja
cld
xchg
mov
fisubs
sbb
or
mov
and
sbb
pop
lea
call
mov
mov
adc
aad
mov
and
insl
aam
mov
imul
mov
jno
push
push
ljmp
test
sbb
xor
or
inc
shll
adc
push
sub
pop
xor
fmul
stos
and
pop
mov
movl
xchg
mov
in
sarb
mov
and
fiaddl
mov
adc
cmpsb
insb
push
inc
popf
mov
lret
xlat
dec
push
test
movsl
cli
cmp
sub
push
cmpsl
push
popa
adc
pop
clc
cmp
popa
adc
cld
icebp
push
pop
test
push
ds
xchg
jbe
or
mov
jbe
mov
inc
sub
popa
aaa
adcl
pushf
pop
sbb
js
leave
lods
dec
xchg
shlb
andl
pop
testl
mov
outsb
fisubl
call
add
jge
jnp
movb
mov
or
cmp
enter
scas
imulb
jl
xor
add
in
jle
xchg
rorl
test
imul
push
repz
dec
mov
push
enter
adc
outsl
into
mov
loope
xor
mov
and
mov
jb
rcll
jl
jb
jle
shlb
inc
and
xchg
fs
mov
cwtl
xchg
sbb
lock
add
data16
pop
pop
js
pop
imul
js
dec
xlat
iret
or
test
bound
cs
or
ret
rolb
xor
xchg
push
mov
dec
dec
xchg
imul
jne
fpatan
roll
arpl
repnz
pop
hlt
lret
mov
and
imul
fidivs
outsb
inc
int
and
ljmp
pushw
and
lods
repnz
or
outsl
mov
movl
push
insb
aaa
jae
or
or
sti
aam
xorl
pop
pop
scas
adc
xor
leave
sub
inc
in
cmp
hlt
cmpb
js
stc
mov
pop
inc
out
in
mov
add
dec
ret
fldenv
out
in
popf
push
mov
pop
outsl
test
and
push
mov
mov
adc
popf
cmp
inc
int3
pusha
lcall
insl
cmp
mov
testb
stos
jmp
lahf
stos
or
test
icebp
subb
out
adc
ljmp
mov
loop
pop
jp
in
rorb
pusha
lods
jnp
mov
push
xor
test
stos
jnp
pop
jecxz
subb
mov
mov
cmpsl
lods
adcl
ja
mov
ficompl
jns
add
jae
jg
push
push
cld
xor
adc
sti
adc
cmpsl
add
lods
stc
gs
mov
sub
xor
mov
mov
pop
push
stos
mov
cmp
popf
imull
pushf
ljmp
sti
xchg
xor
addb
jecxz
pop
sub
mov
push
imul
sub
inc
adc
call
cmpb
cmc
mov
sbb
inc
cli
outsb
and
fcoml
les
xchg
out
cli
sub
mov
mov
insl
in
push
xor
scas
sbbl
push
add
and
mov
add
push
and
adc
in
lret
repnz
jg
loope
cmp
incl
enter
stos
pop
rol
jl
int3
dec
enter
icebp
jno
inc
leave
cmc
fstl
lret
aaa
lds
cmp
pop
leave
lea
lcall
jecxz
xor
sahf
jbe
push
popa
std
adc
stos
idivb
jbe
fdivrs
call
fildll
ljmp
pop
aas
or
mov
lret
fs
adc
vorpd
push
cmp
xchg
inc
or
ljmp
mov
xchg
in
outsl
pop
pushf
repnz
and
movsb
dec
cltd
cmp
aaa
out
sbb
jne
iret
adc
mov
adc
or
push
into
fcompl
fsubrl
hlt
mov
ret
mov
loop
and
pushl
xchg
mov
mov
jl
ja
int
sti
out
hlt
xchg
mov
mov
lods
cmp
dec
mov
je
aad
clc
mov
add
repz
adc
xor
inc
inc
repz
adc
jnp
cwtl
push
std
push
je
sar
lret
lahf
xchg
sti
jns
xchg
mov
subl
movsl
loopne
dec
add
push
cmc
add
out
mov
out
bound
fwait
push
xor
cmpl
xor
repz
sub
das
leave
xor
jnp
enter
sbb
xor
fidivrl
add
lret
jae
jae
fwait
and
xchg
rorl
loopne
xchg
sub
enter
int
cmp
test
int3
sbb
mov
jmp
in
dec
imul
or
mov
orl
add
inc
aaa
loopne
sbb
mov
mov
test
and
inc
mov
pushf
jae
add
xor
cmp
cltd
add
sub
aam
rcr
mov
xor
insb
pusha
cmp
add
and
popf
jecxz
mov
pusha
add
or
mov
int
pop
cmp
xchg
mov
cmp
push
fldenv
push
dec
or
xor
loop
fwait
cmp
mov
or
outsl
cmp
aam
push
shlb
call
push
pop
cwtl
sahf
test
in
clc
lahf
pop
or
dec
lods
push
into
lea
jae
push
out
leave
mov
sub
xchg
test
jge
decl
and
xor
adc
ds
xorb
sbb
sub
and
xchg
rolb
xchg
dec
sbb
cmpl
push
mulb
dec
cltd
jp
ret
rorb
fwait
jbe
xchg
push
sti
lret
push
adcl
ja
cmc
mov
lea
push
call
cmp
pushf
push
push
pushf
mov
jb
out
call
divl
in
in
inc
jae
jo
andl
pop
fwait
shlb
or
inc
mov
mov
pop
repz
jnp
in
sub
imul
outsb
lea
cld
outsl
hlt
lahf
mov
jnp
lea
push
data16
popa
mov
gs
sbb
xlat
loopne
lea
leave
fidivs
out
pop
lock
jnp
sarb
stc
outsl
std
sub
push
hlt
jne
adc
sbb
add
cs
jns
jne
shl
lea
pop
cmc
mov
adc
cmp
xchg
sbb
or
pop
fadd
mov
jp
fs
push
das
fisubrs
push
push
xor
in
cli
push
int
cmc
sub
cmp
arpl
addr16
inc
pusha
mov
mov
mov
out
xchg
std
insb
adc
adc
cmp
xor
sub
jmp
testl
je
mov
mov
mov
xor
xor
sub
pop
gs
lahf
inc
imul
xchg
pusha
aam
add
sbb
inc
pop
dec
dec
push
into
inc
imul
sar
int3
xchg
int
mov
pushf
cltd
add
lea
ret
icebp
sbb
ret
adc
data16
cli
dec
subl
sbb
inc
adc
int
sub
leave
xchg
inc
and
cmp
insl
int3
cli
jno
sbb
xchg
lcall
dec
cwtl
cmp
pop
mov
add
cmpsl
movl
xor
dec
lods
sub
shll
ja
lahf
popf
xor
jp
or
push
adc
inc
add
inc
pop
adc
and
inc
lock
sub
or
pushf
adc
imulb
outsl
xchg
aam
pop
adc
sti
scas
bsr
jnp
sub
sub
popf
mov
and
cmp
xor
stc
test
dec
mov
aaa
or
jmp
stc
xor
loop
fistpl
test
push
cmp
test
addl
dec
std
iret
mov
bound
sahf
mov
loope
popa
jg
push
adc
dec
pop
mov
ret
push
inc
sbb
mov
mov
xchg
scas
jp
and
lret
repnz
sbb
mov
push
xchg
iret
je
les
popf
dec
and
shll
fdivrs
mov
into
test
dec
pop
xor
imul
cmc
inc
dec
int3
mov
subb
shrb
jo
lret
pusha
adc
add
add
jo
mov
mov
sar
dec
dec
addr16
test
test
xlat
shll
and
push
mov
scas
mov
lret
lds
fbstp
testl
cmp
or
sbb
out
cltd
jge
mov
add
jl
pop
push
aad
ficompl
repnz
loopne
adc
in
dec
jnp
adc
pop
icebp
adc
lret
cmpsl
pop
sbb
inc
jne
jecxz
jae
add
sub
nop
inc
in
inc
xchg
pop
clc
sti
movb
lahf
imul
out
int3
jae
mov
rorl
lahf
movsb
lcall
fs
repnz
lods
pop
roll
iret
aas
xor
push
xchg
jg
cmp
data16
mov
adc
inc
dec
sti
mov
or
and
into
ficompl
or
lahf
rclb
rcl
pop
cs
repz
pop
cs
dec
mov
sarb
es
daa
stos
pop
or
jmp
add
mov
lret
jae
testl
clc
nop
dec
fs
shlb
repz
loope
int3
xchg
arpl
xor
and
fistpl
fistpl
and
mov
cmpsb
xor
jae
or
stc
clc
into
mov
mov
pusha
inc
roll
mov
lret
add
test
jae
test
movsb
add
jns
test
mov
lea
pop
cli
dec
mov
mov
std
stc
jg
and
jmp
inc
sub
jmp
and
test
imul
jge
popf
xchg
pop
adc
pop
pop
aam
pop
mov
adc
dec
addr16
les
fnstcw
arpl
sbb
lods
mov
mov
jae
lahf
push
jg
push
rcrl
icebp
inc
mov
jge
jge
or
cmc
mov
lods
mov
pop
lret
add
imul
pop
test
enter
hlt
or
leave
enter
push
loopne
sti
pop
sub
insl
lcall
cmpl
sbb
lcall
imul
mov
icebp
mov
cld
jg
jb
mov
cwtl
lods
sub
dec
mov
jb
jp
mov
psubq
cmp
decl
mov
xchg
outsb
inc
in
jo
mov
rcr
jg
rorl
hlt
imul
gs
int
aas
mov
aam
mov
pop
les
or
jl
rorb
jle
sahf
lods
cltd
lea
imul
pop
insb
insl
add
or
jno
stos
mov
incl
jmp
rclb
inc
add
push
cli
and
je
or
mov
repz
inc
add
inc
icebp
ss
push
xchg
cmp
out
inc
aam
out
jns
sub
pop
mov
push
les
in
outsl
ss
push
imulb
mov
mov
mov
mov
cwtl
push
mov
aas
inc
imul
sbb
call
andb
pop
call
mov
or
iret
lds
mov
and
xor
pop
sbb
xor
lcall
ret
fidivrl
lods
je
sbbb
icebp
push
popa
adc
aas
or
mov
repnz
lds
sub
ja
adc
int3
divl
add
ret
mov
sub
shrl
mov
outsl
into
push
fs
or
cmp
or
push
push
adc
test
das
sbb
or
out
sbb
inc
mov
ret
dec
pop
shl
sbb
insb
enter
jns
sub
or
lahf
cld
dec
fists
repnz
pusha
rorb
int
add
jb
cld
inc
int3
push
push
add
sbb
jmp
push
inc
or
in
pop
imul
sub
lahf
xchg
sbbl
jae
rorl
inc
and
fwait
repnz
and
jmp
ret
xchg
clc
cmp
inc
in
pop
sbb
mov
inc
imul
aam
call
mov
sub
xor
popa
sub
mov
fbld
dec
out
jne
push
or
mov
push
loop
mov
sub
ds
push
js
arpl
mov
add
push
mov
outsb
leave
lea
dec
jle
scas
push
in
cmpsl
xor
cmp
fistpll
test
imul
cmp
xor
xor
push
ljmp
loop
xor
mov
pusha
aaa
aad
mov
jnp
test
test
pop
lea
popf
xlat
cmp
test
movsl
sti
je
and
enter
and
adc
inc
aas
roll
push
mov
pop
mov
cmp
sbb
or
fcoml
add
pop
leave
daa
addb
movsb
pop
xor
dec
rcrb
jae
push
sub
jmp
fcom
fcomps
dec
adc
scas
add
rcll
jecxz
aaa
pusha
adc
mov
into
pop
sub
in
inc
dec
pop
mov
orl
nop
push
loopne
sub
hlt
and
jle
sub
fbstp
loop
rcll
jno
lods
xchg
add
sti
or
call
orb
push
xor
adc
gs
int3
sub
xlat
adc
fisttpll
addr16
or
or
fstpl
lock
jge
jno
jbe
ficomps
aas
nop
dec
ret
jle
lahf
out
int3
dec
xchg
cltd
test
enter
cmpl
sti
jmp
std
mov
notl
mov
cmpsb
iret
ja
and
mov
push
jbe
out
xor
adc
outsl
imul
imul
insl
jmp
stc
push
mov
loop
movsb
int
dec
out
lods
jns
aad
sbb
repz
in
cmp
neg
cmpsl
mov
lcall
cmp
mov
dec
inc
xlat
push
cmpsb
push
aas
imul
sub
push
xorl
dec
xchg
aam
aam
cmp
cli
es
inc
shlb
or
mov
push
or
aaa
mov
sbb
mov
stos
add
push
stos
es
test
and
or
push
xor
add
loopne
std
in
sbb
push
add
nop
frstor
or
inc
cwtl
fistl
push
nop
icebp
jno
cmpsb
out
cmp
outsl
enter
gs
xor
pop
mov
daa
sub
fnstsw
or
push
mov
or
rolb
stos
out
shll
push
sub
xchg
pushf
jnp
push
push
jecxz
jle
inc
das
sbb
movsb
in
lea
push
mov
aad
push
jge
fwait
cli
cli
xchg
fsts
xlat
push
cmp
pop
movsb
pop
scas
mov
add
nop
das
imul
outsb
xor
sub
dec
mov
cmp
mov
and
fcoms
js
or
adc
out
push
sub
jmp
xchg
mov
pop
mov
scas
push
outsl
mov
subb
rorl
mov
shl
mov
jg
jnp
jle
jl
sbb
lds
pop
inc
xchg
jle
and
repnz
fyl2x
sti
fcmovnu
adc
hlt
icebp
pop
add
imul
loopne
sbb
inc
aam
clc
and
pusha
push
dec
or
add
out
sub
dec
jns
je
iret
mov
adc
fdivl
mov
push
pop
mov
mov
enter
xchg
adc
sbb
or
push
xchg
push
outsl
add
cmpsb
lods
in
out
fsubrs
cmp
add
jg
out
xor
rcrb
in
les
les
in
sub
adc
push
pushf
push
addr16
sub
arpl
jbe
lods
jl
and
aad
xor
dec
mov
inc
std
mov
aaa
push
jle
xorb
inc
xor
push
call
sbb
rcll
movsl
in
loope
cli
jmp
ss
jp
in
jns
inc
pusha
push
enter
add
push
shl
push
shrl
cmp
imul
rclb
repz
data16
movsb
pop
pop
imul
icebp
pop
inc
outsl
dec
mov
dec
addr16
push
mov
sub
dec
icebp
sbb
leave
scas
cmp
outsb
imul
push
and
cmpsb
push
push
mov
sbbb
and
mov
push
sbb
xchg
sub
sub
jecxz
and
dec
xchg
push
aaa
movsl
xor
mov
add
aaa
and
es
js
arpl
inc
xchg
jbe
ds
or
jb
pop
mov
mov
dec
mov
push
inc
add
cmp
push
pop
xlat
or
jge
test
fnstcw
enter
sbb
aaa
jge
in
pop
pop
and
mov
sbb
mov
dec
inc
push
mov
rolb
push
ja
mov
adc
lahf
fistpl
xor
mov
pop
das
ss
test
movsb
fs
or
cmpsb
shll
pop
cmp
sub
mov
xchg
nop
cmpsb
cmp
mov
xlat
addr16
sub
adc
into
shr
loop
and
fisubrl
lock
adcl
mov
dec
dec
xor
add
sub
xor
in
xchg
insl
mov
cmp
xchg
jmp
mov
mov
in
jmp
bound
call
cmpsb
push
data16
xlat
insl
loop
push
testl
bound
jmp
in
test
subl
push
lock
insb
scas
lds
push
lds
pop
aad
lahf
ss
addr16
fidivs
cwtl
les
ret
pop
jge
mov
gs
add
aaa
xchg
xor
stc
testl
dec
rorl
sub
mov
icebp
xor
pop
and
pop
jmp
loop
retw
out
loope
enter
xchg
jmp
push
cmp
cmp
xchg
cwtl
lret
push
adc
jmp
mov
clc
ja
push
loop
fmull
or
cmp
inc
adc
sub
cmp
fstpt
into
mov
ret
adc
int3
jnp
add
popf
daa
xchg
rcrl
enter
pop
fwait
mov
or
jb
ss
scas
push
mov
pop
mov
dec
xor
pushl
sbb
mov
xchg
fdivrs
xchg
ss
cld
pushl
inc
loop
adc
aaa
jl
xor
out
pop
out
loopne
outsb
sbb
push
xchg
add
or
bnd
shl
out
pop
shll
dec
push
movsl
ljmp
daa
inc
inc
or
cli
xor
pop
add
cmp
jge
push
mov
or
jnp
push
dec
es
mov
mov
test
fsubr
mov
sti
fldt
mov
and
mov
pinsrw
lret
jo
sti
iret
nopl
rcl
insb
in
movsb
mov
clc
lea
or
push
ja
add
mov
in
adc
jmp
push
mov
in
sahf
mov
pop
add
subb
jbe
cld
pop
cwtl
jp
movsb
bnd
sbb
cmpb
pushf
sbb
xlat
movsb
pop
scas
mov
stc
mov
int
inc
ds
mov
jmp
mov
mov
cmp
push
xchg
in
sahf
mov
push
xchg
in
cltd
mov
jle
mov
pop
sub
mov
rcl
aad
out
pop
pop
test
mov
inc
cmp
ja
dec
push
roll
jns
xchg
sub
mov
ret
fists
push
mov
mov
cli
je
arpl
shrl
cmp
or
mov
push
shrb
jmp
and
fistpll
jl
fisttps
mov
sbb
ficoml
inc
mov
repz
cwtl
stc
out
ljmp
xchg
push
shlb
push
and
lahf
xchg
push
insl
push
cmc
push
js
divps
das
jbe
aam
mov
scas
jg
or
push
adc
iret
dec
fsub
push
push
jbe
in
jecxz
hlt
lock
or
fucomi
fadds
clc
dec
mov
jge
mov
jbe
test
out
adc
mov
mov
ljmp
sbb
sub
lahf
pop
imul
or
insl
sub
jae
add
leave
adc
or
sbb
lds
cltd
adc
fmull
cmp
lret
xchg
or
xchg
xor
std
loopne
push
clc
mov
das
xchg
jmp
int
mov
adc
cmc
mov
nop
pusha
and
sbbl
xchg
dec
int3
mov
hlt
adc
pusha
push
arpl
push
or
aam
push
mov
sbb
into
roll
out
aad
test
cld
imul
add
scas
cmp
stos
dec
lods
jg
stc
xor
data16
test
or
shlb
xchg
out
aas
popf
lcall
nop
jmp
mov
in
sub
mov
jmp
mov
push
mov
jle
push
pop
jge
outsb
divl
mov
rcrb
xchg
mov
out
insb
hlt
arpl
mov
dec
adc
mov
pushf
jb
xor
call
sub
jecxz
jmp
mov
ss
push
aaa
jmp
icebp
call
test
mov
lock
mov
jmp
dec
sbb
cmovnp
stc
inc
cmp
cmp
fbstp
add
imul
cmp
xor
aad
inc
cltd
push
pop
and
sarb
or
or
inc
push
cwtl
mov
movsl
jnp
das
aad
sarl
lock
lret
leave
cmpsl
lret
fcomp
ret
data16
adc
in
outsl
movsb
js
imul
mov
popf
push
push
xor
inc
inc
shrb
cwtl
imul
pushf
or
stos
ret
loope
jle
xchg
xor
mov
pop
ljmp
jns
pop
mov
clc
and
repnz
jo
add
dec
sbb
popa
xor
jecxz
sub
flds
sub
xor
sub
rcrl
loope
dec
xor
out
bnd
mov
pop
inc
lds
inc
sub
pop
xor
out
dec
ljmp
in
fs
inc
pop
nop
ret
push
pushf
sbb
add
cmp
xchg
and
ds
and
mov
rclb
jno
jns
jmp
out
fcomps
xor
test
dec
xorb
out
mov
mov
out
sbbb
cli
and
adc
dec
in
mov
out
lods
adc
push
pop
shrl
insb
popa
mov
sbb
cli
push
mov
enter
and
outsb
dec
cmp
lods
jmp
or
push
push
xchg
sbb
xor
imul
ret
jg
sub
cmp
mov
push
and
jno
jg
jle
jne
mov
jle
fmuls
test
mov
inc
in
bound
jns
pusha
mov
out
jnp
dec
mov
sahf
test
std
xor
das
push
push
add
push
sub
mov
mov
jg
nop
mov
push
leave
xor
clc
popa
jl
das
in
icebp
jle
repnz
scas
jb
stos
inc
aaa
mov
mov
mov
sub
mov
into
pop
or
call
xchg
and
pop
push
add
ret
out
mov
insl
repz
dec
mov
xor
cmpsl
jne
decl
cmpb
arpl
mov
push
mov
or
xchg
sahf
xor
lods
add
cwtl
sbb
jns
sbb
lahf
xor
lret
jno
dec
ret
pop
cltd
in
sbb
or
mov
xor
iret
sti
nop
jmp
pop
cmp
lds
icebp
fmuls
cs
push
cmp
push
mov
jae
movsb
add
in
mov
inc
shl
add
xchg
lret
or
mov
push
dec
lds
test
testl
punpcklwd
and
jno
adc
sub
xlat
cmp
ret
scas
pushf
adc
jns
clc
iret
insb
jp
stos
dec
and
lock
adc
adc
push
movsl
pop
lahf
jp
sbb
or
test
in
lds
inc
cmp
cmp
ret
js
sahf
movsl
outsb
pop
cmp
jo
loopne
jg
xchg
push
call
ds
lds
fwait
inc
mull
aas
xchg
mov
mov
jl
addb
xchg
pop
or
data16
arpl
dec
fucomi
popa
imul
cmp
lds
jge
xor
bound
xchg
pop
cmpsl
ljmp
mov
xchg
cli
mov
and
mov
leave
call
mov
mov
dec
mov
call
cmpsl
outsb
insl
fwait
xor
mov
push
jecxz
mov
shl
sbb
stos
dec
xchg
mov
aas
or
push
push
cmpb
xchg
cmp
cwtl
xor
ds
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
hlt
xchg
add
jp
pop
jp
ljmp
mov
add
dec
add
sti
sarl
jbe
cmpsl
scas
popa
xchg
ljmp
loop
dec
dec
xchg
adc
dec
push
outsl
pop
movsl
imull
push
dec
mov
jecxz
mov
in
xchg
and
cwtl
xchg
loope
mov
frstor
ret
stos
jl
pop
insl
pop
icebp
mov
cmp
fldt
inc
fwait
cmc
mov
and
or
dec
mov
imul
popa
xlat
and
and
out
sub
sbb
data16
fstpt
mov
daa
dec
addr16
lds
inc
inc
and
popa
insb
adc
inc
inc
xor
dec
push
jb
out
dec
jg
add
test
das
mov
stc
mov
iret
stos
pop
cmc
test
dec
addr16
push
pop
loope
or
push
cmc
push
test
mov
push
mov
inc
push
xchg
and
fldt
mov
mov
adc
scas
sarb
mov
mov
and
lcall
es
add
or
outsb
xor
cmpsl
out
dec
inc
arpl
cmp
stos
in
push
mov
adc
in
pop
cwtl
push
or
mov
jmp
int
pop
adcb
btcl
mov
sbb
mov
jo
jmp
dec
xor
jbe
jo
add
cmp
ds
rorl
inc
into
inc
xchg
shlb
fdivs
push
outsl
out
test
aaa
mov
stc
mov
jno
sub
lcall
test
daa
jge
push
xor
jge
push
lods
test
leave
xchg
shr
mov
inc
ds
movsl
jge
sub
cmp
insl
or
jnp
fstl
cltd
jne
and
mov
in
push
cmp
test
cld
cmpsb
dec
cmc
xor
repnz
cmc
add
push
in
xchg
and
int
clc
in
sbbb
adc
pop
dec
sub
ror
stos
pop
add
insb
push
test
cltd
nop
cmp
or
mov
inc
cmp
sahf
adc
cmp
mov
fisttpll
cmpb
jb
in
dec
or
adc
ret
mov
and
int
and
add
inc
mov
fs
scas
xor
mov
les
push
pop
adc
subb
ret
sbb
movsl
fisttpl
xor
mov
pop
les
cmpsb
jnp
cmp
inc
into
lcall
call
imull
sbb
scas
jns
call
xchg
pop
cltd
dec
pusha
enter
int3
ja
jno
sbb
stos
rolb
add
movsb
pop
mov
nop
ret
call
daa
scas
mov
cmp
cmc
das
clc
mov
push
repz
andl
repnz
pop
jmp
jge
or
gs
and
shll
cmpsb
mov
inc
push
mov
scas
imul
outsb
les
ds
cmp
cmp
fmuls
push
lahf
and
popa
testl
cltd
jl
lods
push
cmc
dec
dec
iret
je
jg
jae
hlt
ret
inc
loop
call
mov
pop
roll
jp
stos
or
fsubrl
sti
or
inc
xlat
sbb
ret
fs
es
sbb
dec
xor
mov
imul
ja
loop
cli
pop
test
mov
jb
inc
mov
mov
cmpsl
mov
pop
jecxz
mov
mov
bound
int3
ret
rcll
and
mov
add
jb
add
aad
jge
pop
jne
movsl
ret
shrb
cmp
imul
sti
lcall
mov
fidivrl
dec
dec
push
mov
jae
cmp
out
addl
lret
and
addr16
jb
mov
fidivrs
out
pandn
jge
or
pop
ret
sarb
addb
or
pop
out
fstps
inc
mov
mov
mov
jle
aaa
jge
and
inc
push
pop
enter
lahf
addr16
insb
rcrb
fisttpll
icebp
cli
jbe
rolb
inc
scas
dec
jnp
cmc
adcb
fists
and
and
inc
xor
xor
jbe
push
cwtl
repz
inc
into
inc
test
je
rclb
out
mov
into
inc
xchg
std
inc
push
mov
mov
mov
xor
add
push
hlt
lea
pop
not
sub
leave
inc
and
ja
sbb
jmp
dec
inc
inc
sti
cmp
dec
daa
mov
fsub
sub
int
push
cmc
dec
movsb
sahf
dec
fdivr
sbb
mov
stc
shll
jp
xor
jb
ljmp
lret
ud2
dec
outsb
xchg
not
adc
cmp
fdivl
sbb
sarb
push
lock
mov
and
jo
push
fstps
lods
mov
andb
and
stc
pop
lcall
lods
mov
test
cmpsl
mov
push
inc
sub
mov
sub
mov
lods
adc
sarl
hlt
mov
adc
pushf
outsl
cli
mov
xchg
pop
push
push
bound
das
push
mov
xor
iret
ljmp
mov
add
pop
enter
das
sbb
mov
inc
fcomip
mov
mov
pop
lods
push
lock
orl
stc
mov
push
cltd
lock
pop
pop
je
lods
das
sub
pop
dec
data16
sbb
inc
jae
je
lds
push
loope
xchg
xchg
in
xchg
dec
testl
das
jle
push
push
stc
jmp
out
int3
inc
scas
lds
jl
imul
test
mov
adc
loope
clc
loope
dec
dec
mov
les
inc
lret
xor
out
nop
push
cmp
mov
lds
add
jge
jg
mov
jns
sub
mov
push
cmp
pop
pop
cmc
xchg
mov
inc
adc
js
xchg
and
xchg
fistpll
sahf
nop
subb
mov
mov
mov
sbb
lock
seto
add
mov
stos
ret
pop
mov
jnp
xor
addr16
sti
fimull
out
sbb
scas
fsubrs
push
loopne
lods
cmp
nop
pop
xchg
sbb
adc
fucom
sbb
inc
and
ret
std
ret
in
scas
or
xchg
sti
das
out
inc
mov
fs
adc
sbb
fcoml
cmp
mov
push
pop
popf
imul
fsts
sahf
shrl
addb
inc
xchg
es
enter
add
imul
or
ja
shl
testb
cmp
icebp
int
xchg
push
sbb
ss
fsubrs
aad
loop
bound
arpl
xchg
pop
je
or
repz
jnp
imul
and
jp
negl
and
and
mov
test
xchg
in
sub
push
out
mov
arpl
dec
into
cmpb
fmull
out
test
jnp
fucomp
mov
inc
shll
into
or
int3
paddw
inc
ret
xchg
insl
test
or
or
lea
call
xchg
std
popa
loopne
jle
pop
int
repnz
mov
pop
inc
and
or
outsb
stos
jp
pop
mov
or
cmp
xor
inc
je
in
pop
xchg
sbb
cmpsl
pop
insl
push
and
push
xchg
lock
dec
xchg
jnp
shlb
inc
push
inc
and
xchg
cmpl
fstpl
dec
push
push
and
push
outsb
mov
add
push
xchg
dec
dec
call
mov
inc
iret
mov
cmpsl
in
test
add
popf
xor
scas
push
or
cld
idiv
in
movsb
sbb
adc
inc
mulb
push
lea
add
dec
pop
fstpl
dec
push
js
jb
mov
or
cmpsb
popf
imul
rorb
pushl
inc
xchg
ret
jae
sub
rcrb
iret
in
sbb
mov
insb
adc
pop
test
fnsave
inc
lock
arpl
ret
jnp
loop
sbb
in
and
test
mov
add
dec
in
xor
sbb
and
hlt
leave
push
test
fisttpll
outsb
push
jl
cmpsb
fs
push
fdivs
xor
shlb
pop
ljmp
xchg
in
dec
add
mov
inc
mov
sub
movsb
mov
inc
lds
push
and
cwtl
frstor
aad
and
cmp
inc
cs
hlt
jp
add
inc
sbb
inc
pop
jo
repnz
pop
std
xor
cltd
inc
mov
inc
mov
imull
jbe
xchg
test
test
out
loopne
mov
push
add
lock
enter
push
adc
stos
aaa
pop
iret
mov
jp
lcall
sub
push
sbb
cmp
fsubrl
pushf
jmp
clc
ret
xor
imul
push
jmp
stc
and
push
push
push
dec
mov
test
js
fcmovu
mov
add
sbbb
push
cmp
dec
insb
js
cmpsb
xchg
bound
cltd
push
test
cli
pop
into
popf
or
fiadds
pop
leave
mov
aas
les
push
xor
mov
arpl
jge
addl
js
dec
push
cld
adc
stc
xchg
mov
lea
sti
aas
sahf
fcoml
or
mov
mov
push
inc
ja
mov
mov
mov
dec
add
xchg
adc
jmp
enter
inc
pushf
xchg
sub
es
jg
jl
lcall
pextrw
dec
fbstp
jb
into
jnp
test
pushf
add
aam
push
imul
mov
mov
ret
out
hlt
mov
adc
roll
int3
jmp
js
jne
repz
and
xchg
arpl
mov
inc
push
inc
push
mov
sub
popl
mov
and
cltd
daa
mov
mov
stos
imul
cmp
rolb
in
dec
scas
inc
jge
sub
xor
mov
xor
or
into
and
mov
dec
mov
and
xor
pop
out
leave
lock
sti
pop
fwait
notb
imul
pop
jae
call
pop
addr16
fstpl
mov
adc
imul
mov
or
sub
cli
popf
mov
mov
lock
filds
xor
push
push
jo
add
loope
mov
std
push
shlb
mov
adc
or
movsl
fldcw
insl
fstpl
pusha
arpl
adc
in
mov
aas
adc
push
sbb
stos
sbbl
sarb
scas
or
mov
stos
aas
mov
dec
push
dec
push
mov
push
movb
hlt
xchg
sti
adc
inc
ds
jp
fimull
lods
aam
sub
ret
shrb
in
mov
sub
loop
mov
fisubs
shl
lret
movsb
mov
scas
lods
jp
xchg
mov
mov
and
jb
push
sahf
pop
cmpsl
sbb
mov
xchg
dec
les
sbb
mov
push
inc
popf
out
mov
movl
sbb
mov
daa
push
loopne
pushf
adc
fisttps
bound
inc
pop
jecxz
fisttps
into
inc
push
sbb
arpl
sbb
cmp
outsl
mov
push
inc
aad
iret
test
mov
push
in
mov
pop
and
fmull
imulb
fisubl
dec
call
mov
ljmp
push
std
sbb
mov
adc
push
dec
outsb
test
ret
pop
jb
cwtl
iret
lods
xor
xchg
popf
jne
icebp
movsb
hlt
push
mov
shlb
mov
jp
lods
dec
jne
inc
adc
mov
sbb
push
imul
and
pusha
scas
stc
mov
data16
packsswb
cmp
jbe
cmp
jp
into
out
inc
inc
sbbb
ret
sbb
mov
mov
lods
cmp
mov
test
pop
fsubs
push
xchg
fwait
scas
or
mull
cmpsl
mov
jbe
enter
pop
sbb
bound
add
sti
iret
into
pop
push
loope
sbbb
add
movsl
movsl
das
sbb
mov
in
or
xchg
mov
push
nop
ss
fst
mov
imul
es
stos
mov
loopne
jnp
push
xchg
shlb
mov
stos
repnz
in
int
mov
cmc
xchg
pushf
sbb
dec
and
fildl
je
inc
or
mov
fmul
test
sub
pop
out
daa
mov
and
in
push
mov
lods
and
jno
movsl
movsl
movsl
push
mov
out
outsl
mov
test
dec
ljmp
pushf
push
push
cmpsb
outsb
leave
call
add
testb
out
fwait
or
adc
repnz
xor
test
adc
cmp
punpckhwd
shll
cmp
xchg
andb
je
sub
pop
inc
sti
mov
or
xor
add
mov
repnz
out
inc
mov
add
mov
mov
mov
rolb
fs
add
mov
push
mov
xor
ljmp
fwait
add
sbb
dec
loopne
ss
int
imul
adcl
or
in
xchg
dec
enter
cs
negl
lds
icebp
popa
out
or
imull
call
jno
nop
xor
lahf
push
fiaddl
test
jmp
mov
xor
and
jne
push
fnstsw
lahf
call
inc
pop
push
sub
cmp
jo
popa
mov
bound
cmp
in
and
lods
mov
jmp
imul
enter
jnp
out
jne
data16
in
cmp
pause
xchg
loopne
les
fldpi
mov
je
ss
mov
dec
leave
jl
lods
lock
inc
and
mov
das
dec
mov
out
test
hlt
mov
pop
movsw
adc
shll
mov
jno
add
stos
push
xchg
dec
mov
adcl
push
outsb
loope
cmc
push
in
out
scas
nop
cmp
jnp
sbb
dec
adc
mov
jp
sub
jge
or
jbe
jecxz
adc
adc
outsb
jbe
cwtl
scas
shr
cli
push
repnz
or
repz
add
out
push
cmpsl
mov
repz
out
cmp
jbe
fwait
cmp
in
jno
xor
shll
inc
push
push
or
out
dec
test
ljmp
dec
xor
dec
and
ja
ds
test
enter
mov
fmuls
mov
repnz
pop
popf
fists
inc
sti
xor
hlt
xchg
mov
adc
inc
add
add
or
cmp
clc
fists
jmp
lahf
push
cmp
in
into
pop
add
sbb
add
dec
movsl
add
pop
scas
add
es
adc
arpl
clc
dec
into
sbbb
pop
dec
sbb
sbb
inc
mov
inc
jge
mov
jle
sub
subb
xor
fidivrl
push
jp
lret
xchg
dec
popf
in
dec
pop
jge
loop
sbb
or
sub
xor
nop
jne
push
int
xor
lea
leave
jle
add
cs
mov
mov
sub
sbb
push
jge
mov
mov
cmp
sbb
add
out
xchg
lock
cmpsl
xchg
adc
rolb
insl
lock
das
push
xor
ss
pop
push
repz
xchg
hlt
inc
insb
les
sub
xor
imul
jge
cmc
call
test
xchg
inc
movl
and
dec
pop
and
push
dec
xor
mov
scas
mov
cmp
fwait
adc
xchg
rolb
pushf
in
pop
mov
movsl
pop
sti
or
mov
je
mov
daa
in
test
cmpsl
jbe
xor
inc
jp
ljmp
jmp
out
loopne
je
xlat
bound
push
pop
mov
out
outsl
js
pop
adc
std
movsb
mov
movsl
cwtl
xchg
jecxz
xor
adc
pop
imul
fwait
pop
les
pop
or
nop
inc
pop
std
pop
cli
setno
ss
fildl
sbb
push
push
xchg
das
es
cwtl
jp
test
arpl
cmp
lods
testl
jecxz
insl
add
push
lret
pop
test
cld
fldt
mov
test
mov
cmp
in
sub
lret
sbb
or
mov
inc
add
push
xor
psrld
clc
cmp
jl
inc
push
inc
dec
adcb
inc
xchg
insb
jmp
iret
mov
lea
test
outsb
xchg
xchg
push
jle
rcrb
fisubs
or
push
enter
sub
add
sub
push
loope
orb
or
mov
mov
xchg
inc
aad
add
and
scas
mov
fsubrl
stc
pop
push
movsl
mov
js
push
pop
add
fmull
mov
cmp
adc
test
xchg
shlb
adc
xor
mov
je
mov
aad
dec
cmp
push
mov
add
rcll
mov
pop
mov
jecxz
xlat
jecxz
sub
mov
xchg
pop
js
dec
test
pop
adc
mov
add
push
or
mov
rcl
stos
or
in
test
mov
mov
cld
cmpsb
fisubrl
scas
cmp
leave
and
ja
mov
inc
insl
repnz
into
mov
outsl
loop
aaa
sbb
adc
clc
popl
xor
std
mov
cltd
or
andb
push
jns
das
insb
pop
push
test
scas
out
or
push
mov
mov
rcrl
xchg
daa
xchg
stc
jp
push
dec
or
mov
or
jo
insl
dec
fstpl
stc
fistpll
cmpsb
cmp
scas
inc
je
xchg
fwait
mov
add
cs
cmp
xchg
popf
stc
fcmovnbe
mov
aam
fdivrl
orl
out
mov
lcall
lret
insb
inc
lret
popa
pop
mov
push
sbb
or
scas
fnstsw
sbb
aam
sbb
jnp
sbb
inc
mov
daa
cltd
jae
int
cmp
stc
in
ljmp
fdivrl
sbb
scas
push
jae
test
add
sahf
xchg
sub
sbb
adcl
cld
mov
int
push
xchg
adc
jae
fsubl
push
rorl
jmp
jns
jle
repnz
cmp
mov
sbb
pop
call
mov
inc
loop
mov
push
lds
adc
sub
mov
movsl
sbb
mov
mov
into
mov
adc
xchg
push
and
jns
out
idivb
test
jb
mov
jne
roll
sarl
aas
add
add
stos
cmp
gs
pushf
lahf
enter
mov
mov
das
or
int3
inc
aas
ret
loopne
gs
dec
cmc
xchg
data16
inc
jl
fisubs
cmp
jo
ret
jge
stos
mov
hlt
mov
inc
in
pop
mov
lea
mov
or
jbe
mov
movsl
inc
scas
cld
push
pop
int
test
dec
dec
inc
enter
jge
push
and
mov
or
cmpsl
dec
xor
mov
adc
dec
cmp
push
jb
arpl
mov
sbb
or
call
sbb
jl
adc
int3
cmpsl
and
mov
call
iret
xchg
xchg
dec
fstps
push
sbb
inc
push
pop
gs
mov
fadds
xor
xchg
lcall
mov
lods
scas
jbe
insb
lret
lea
sbb
out
add
ret
testb
adc
fdiv
add
pusha
movsl
mov
or
mov
outsl
mov
fst
jp
fldt
inc
xor
cmp
cmp
int3
cmp
paddusw
cmpsb
ret
mov
sub
ret
jo
ds
sub
mov
mov
cmp
jns
mov
sub
cmp
dec
mov
ljmp
rolb
add
cmc
mov
dec
xlat
xchg
pop
add
aad
sti
fcmovnu
das
mov
int3
sub
daa
sar
xor
mov
into
sub
push
pop
in
cwtl
scas
add
aam
sbb
imul
xchg
jno
mov
cmpsl
xchg
hlt
mov
sub
fsubs
xlat
sbb
xor
hlt
ret
sbb
dec
mov
xor
inc
outsb
push
add
sahf
cwtl
or
cmp
das
xlat
repnz
fcoms
out
mov
ds
jae
test
dec
add
aam
fisubl
inc
mov
inc
dec
icebp
cwtl
int
inc
jmp
push
xchg
sbb
mov
fbstp
roll
push
cmp
fdiv
cmp
mov
push
push
addr16
and
fldcw
jp
mov
sub
int3
jb
xor
ffree
adc
sbb
outsl
imul
pop
loope
sub
inc
pop
mov
int
push
cmc
and
nop
and
adc
mov
fimuls
adc
jmp
push
pop
add
sub
dec
push
and
icebp
lahf
xchg
fstpl
sbb
dec
mov
addr16
call
repz
sbb
popf
es
xchg
inc
sbb
mov
and
fsubl
pop
dec
notb
add
dec
in
mov
push
fists
pop
pop
push
mov
jg
ja
push
dec
inc
inc
xchg
out
xchg
xchg
mov
sbb
out
add
jns
enter
shlb
sub
aaa
inc
ret
sbb
iret
lea
subl
sub
xchg
xchg
sahf
repz
outsb
cmp
sti
push
cmp
les
sub
jge
lods
ljmp
xor
fstpt
xchg
cmc
sub
inc
dec
scas
sahf
rorb
jne
xor
jae
mov
int3
daa
inc
sub
pop
mov
movsl
imul
les
adc
mov
imul
icebp
and
cmpsb
mov
xchg
xchg
jle
repnz
lds
fs
sub
pop
pop
out
cmp
cltd
sti
xchg
or
sbb
push
or
nop
inc
mov
xlat
jmp
stc
es
sub
mov
fdiv
xchg
inc
inc
clc
mov
addl
int3
ds
sub
int
mov
mov
inc
xchg
sbb
arpl
inc
call
fdivl
mov
lret
mov
shlb
xlat
push
xchg
push
dec
mov
call
into
cmp
and
xor
xsha1
cmpsb
lret
je
inc
jno
or
fninit
add
and
rcrb
outsl
xor
lcall
lds
push
repnz
int
cmp
aaa
cmp
cs
push
mov
push
add
dec
or
mov
push
out
addr16
shl
xchg
push
adcb
imul
or
dec
pop
dec
sarl
cmp
mov
cmp
cld
popf
inc
mov
imul
cmpsb
rep
idivb
insl
xor
out
jae
rcll
mov
cltd
add
cmp
mov
adc
cmp
cwtl
xchg
xchg
lretw
andl
inc
pop
lahf
ja
push
nop
gs
sbb
dec
jge
ljmp
adc
ds
rclb
cmpsb
sbbb
cld
and
sub
jo
mov
lahf
mov
pop
inc
loopne
cwtl
fcompl
mov
or
inc
testl
pop
iret
scas
cmpsl
jns
movsl
or
lods
ret
mov
mov
mov
mov
and
popa
pop
scas
jecxz
or
insb
stos
test
xor
stc
scas
jno
add
icebp
imul
xchg
mov
jno
and
inc
testl
shll
jmp
das
inc
add
call
jns
mov
inc
hlt
dec
sti
stos
filds
std
jmp
loopne
mov
loopne
icebp
nop
sub
in
mov
mov
pop
out
mov
loope
pop
mov
xchg
iret
stos
into
xor
test
or
cmpsl
xorl
mov
adc
lcall
call
test
inc
mov
adc
push
push
insl
orl
and
mov
sub
adc
leave
and
ret
je
in
test
dec
leave
in
mov
adc
cmp
pop
movsb
stos
repz
fsts
repz
pop
in
pop
lahf
decb
sub
daa
mov
jmp
in
iret
or
ret
pushf
rcrb
movsb
sub
rcr
mov
les
test
pop
xor
pop
aad
pop
add
orl
rcll
shll
adc
repz
stos
jp
jl
adc
fnstsw
lcall
sub
dec
jp
mov
jo
inc
push
add
lods
push
dec
add
shll
sbb
cs
adc
jl
sbb
lret
scas
in
hlt
jl
mov
cltd
ljmp
add
incb
test
dec
cmp
aad
mov
and
repz
dec
and
mov
arpl
fs
pop
cwtl
and
jl
ret
iret
shlb
rolb
xchg
sbb
dec
addr16
data16
rolb
in
pushw
and
push
popa
add
adc
lods
lret
inc
mov
push
xchg
cmp
pop
into
push
or
mov
xchg
inc
lods
jg
lock
jne
pop
insl
mov
sub
cmp
lret
aam
loope
divb
push
push
sbb
sbb
inc
jge
fcomps
ja
xchg
daa
lock
jnp
xchg
rorl
add
push
sbb
mov
out
dec
add
fwait
sub
mov
mov
cmp
jge
xor
pop
pop
fsubs
out
sbb
ja
sub
adc
pop
mov
les
pop
push
insb
sbb
adc
add
and
jle
xchg
add
cltd
movsb
aam
and
mov
xor
scas
inc
lret
hlt
lods
cmc
inc
mov
movsb
loope
add
push
cmp
dec
fs
outsb
adc
sbb
lods
fcomps
outsl
pop
fldl
lahf
adc
push
ljmp
adc
xchg
cmpb
mov
scas
dec
push
nop
mov
nop
pushf
mov
push
arpl
lods
shll
enter
movsb
add
mov
ss
out
jb
sub
shrb
das
cmp
sbb
sbb
addr16
pop
mov
mov
xchg
push
dec
and
dec
lcall
xlat
push
ret
fidivrl
fdivr
aas
lods
fbld
aaa
fisubrl
dec
jecxz
std
dec
cmp
cmc
pusha
fsub
movsb
sbb
xor
dec
sbb
mov
fwait
inc
inc
test
pop
outsb
jb
imul
in
jle
std
sub
xchg
jle
stos
sbb
stc
fwait
imul
shl
roll
cmp
cmp
in
adc
push
xlat
lods
aaa
push
cmp
nop
xchg
iret
in
add
jecxz
add
dec
mov
loope
cmc
or
sub
cmpsb
ret
fsubl
js
push
adc
xlat
and
inc
icebp
xor
repnz
fsubp
add
leave
mov
rclb
int3
inc
fildl
shll
jne
adc
psllq
push
add
cmc
out
movsl
out
mov
inc
test
dec
add
arpl
pop
idivl
inc
insb
or
cmpsb
fs
add
arpl
or
adc
add
pop
and
rcrl
xor
ret
daa
repz
add
xchg
or
aas
add
outsl
sbb
mov
sub
inc
and
adc
cmp
mov
jmp
jb
inc
pop
mov
xchg
ja
xchg
xchg
popa
sub
add
push
rcr
shr
cmp
leave
ljmp
lcall
shrb
cmc
test
jecxz
sar
inc
fildll
pop
outsb
mov
lret
sub
sti
scas
and
mov
dec
sub
push
dec
jl
lahf
mov
decb
aad
adc
in
inc
adc
mov
mov
inc
dec
mov
out
xchg
adc
stos
jno
repnz
js
or
or
dec
lock
pop
sarb
xchg
jbe
jmp
std
mov
inc
lret
orl
pop
faddl
fcmovne
inc
call
inc
lret
repz
xchg
imul
fwait
jge
cmc
and
mov
pop
xor
ja
mov
mov
popf
inc
pop
icebp
pusha
dec
xor
sub
mov
push
in
jp
cmpsl
ret
enter
inc
and
xor
sbb
and
sbb
out
pushf
sbb
xchg
jecxz
mov
xlat
rcl
and
sbb
js
cmp
mov
push
repz
fiaddl
cwtl
jnp
add
repnz
adc
mov
mov
and
sub
outsb
adc
and
add
add
inc
inc
mov
loope
lods
mov
arpl
inc
push
mov
dec
popf
ficompl
mov
sbb
inc
aam
xor
mov
adc
cmp
popa
fldl2e
jge
xor
fcomi
mov
mov
aaa
sbb
push
push
mov
cs
jg
cmp
cwtl
fwait
fs
dec
dec
ficompl
or
inc
faddl
nop
inc
xlat
fsub
jmp
lahf
jne
inc
or
cld
xor
mov
add
addr16
mov
cli
push
ficompl
addr16
add
add
pop
in
jae
xor
jne
inc
lods
mov
mov
sahf
and
stc
xchg
ret
pushf
js
cmpsl
mov
xchg
idivl
icebp
push
int
insb
lods
mov
clc
pop
sub
mov
fmuls
adcl
sbb
fs
mov
push
push
mov
cs
imul
imul
insl
scas
int
add
push
ja
popf
sub
mov
shll
scas
shll
mov
sbb
jge
and
test
push
xor
push
mov
cwtl
dec
fdivs
jno
jbe
fiaddl
insw
cmp
sbb
cli
jg
arpl
mov
mov
imul
addr16
aas
mov
insb
inc
pop
outsl
sub
std
aaa
test
scas
sub
dec
push
bound
xor
adc
pop
xchg
mov
sbb
sub
adc
pop
outsl
fadds
sbb
clc
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
repz
cmc
xor
js
pop
in
inc
dec
test
push
push
sti
scas
mov
add
out
stc
sahf
movsb
movl
out
mov
test
and
cmp
loope
xor
loope
stos
adcb
and
xchg
pop
pop
xorb
mov
lods
xor
div
or
setb
mov
mov
pop
and
ja
sub
cwtl
xchg
push
sbb
cmp
mul
out
mov
addr16
mov
fmulp
or
sbb
repnz
sub
fcomps
sbb
loopne
xchg
xor
fbstp
outsb
je
add
imul
inc
test
in
outsb
xorb
adc
xor
cs
jge
dec
test
fcoml
nop
hlt
int
into
shl
push
cld
notl
stos
icebp
jl
mov
fs
loopne
movsl
xchg
dec
pop
cmpsb
out
jae
insl
sub
imul
in
outsl
sahf
in
sti
and
daa
sbb
outsb
cld
call
scas
fs
outsb
int
inc
in
mov
and
fstpt
jbe
test
inc
sub
icebp
mov
jmp
cs
bound
movsl
inc
inc
adc
arpl
xchg
dec
jnp
add
xchg
fistpll
mov
pop
jnp
repz
xor
pushf
lock
int3
shr
in
clc
pop
jae
xchg
popf
push
jne
in
leave
or
ds
cmp
xchg
mov
fadds
inc
pop
mov
mov
cmp
imul
inc
mov
mov
pop
repz
insl
pop
inc
cmp
repz
mov
enter
stos
xchg
cs
frstor
stc
adc
sbb
jl
mov
push
sahf
sub
jge
cmp
jmp
iret
ficoms
dec
aas
ja
mov
pop
test
sbb
pop
pop
xchg
lock
pop
int3
stc
or
adc
loope
mov
xor
sub
xor
sub
mov
call
data16
push
adc
cld
xchg
mov
out
ficompl
leave
and
sbb
mov
sbb
cld
adc
or
repnz
xor
imul
pop
dec
lods
cmp
in
loop
ds
mov
scas
jae
cmp
stc
mov
jo
mov
adc
cli
mov
cmp
mov
cltd
andl
scas
frstor
mulb
or
push
mov
cmp
xchg
dec
fsubr
push
xchg
push
push
das
icebp
stos
sbb
push
js
dec
loope
into
sbb
leave
xlat
lods
xchg
insl
add
mull
xchg
pop
repnz
fs
sub
xlat
mov
pop
pop
sti
cmpsb
cwtl
shrl
lock
aad
data16
jmp
lcall
adc
imul
adc
std
dec
inc
adc
shrl
or
mov
int
psllw
ljmp
out
fmuls
xchg
out
inc
sub
push
push
mov
call
xchg
push
lahf
in
pop
pusha
movsb
jg
or
movsl
mov
cltd
out
push
daa
loop
pop
hlt
pop
inc
mov
fwait
jne
jnp
sub
adc
stos
jae
sti
xchg
test
pop
xlat
mov
das
inc
pop
mov
mov
inc
xchg
mov
mov
pop
cmp
sub
ret
jle
jno
aas
aaa
push
div
jecxz
or
and
jle
dec
and
jg
cld
jae
addl
mov
xor
push
adc
mov
arpl
adc
jnp
lods
ffreep
dec
jmp
xor
pusha
test
fbstp
cli
inc
add
scas
push
int3
pop
xlat
jg
inc
repz
std
jns
int
mov
xchg
out
sti
mov
stos
mov
test
push
es
sahf
cli
imul
sti
xorl
mov
pop
inc
cld
cmpsl
out
mov
or
sub
out
orl
sarb
rcl
or
imull
mulb
ficomps
in
jae
cli
xchg
xchg
test
daa
xlat
and
and
xchg
outsb
xchg
ja
xabort
mov
push
xchg
daa
xor
cmc
cmp
jecxz
mov
xchg
sub
add
xor
pop
cwtl
fnstsw
jno
jle
and
pop
int
inc
jecxz
out
xchg
clc
dec
jle
es
cmpsb
es
insb
push
mull
popf
adc
out
fistl
test
mov
cmp
add
outsl
imul
mov
jge
pop
aad
mov
mov
psraw
push
in
enter
clc
mov
cmp
hlt
add
ds
mov
push
rorb
ret
push
adc
js
notb
mov
xchg
jp
adc
fdivs
mov
jl
fwait
ljmp
pop
shlb
push
enter
cli
std
inc
stos
pop
shrl
pop
seta
inc
lods
push
push
mov
sbb
sti
out
inc
les
outsl
subl
shll
mov
or
testl
sti
lcall
pop
mov
add
cli
int
jmp
dec
shrl
mov
push
repz
xchg
loopne
ljmp
add
lds
jge
dec
xor
nop
sbb
out
adc
xor
mov
int3
cmp
add
or
fsubp
outsb
xor
aaa
sbb
rclb
cli
shlb
cld
stos
jmp
les
pop
bound
sub
lret
pop
inc
xchg
push
data16
dec
xor
aam
daa
out
and
imul
and
int
jne
js
outsb
or
es
sbb
jbe
dec
pushf
aas
jmp
jg
mov
dec
outsb
fnstenv
leave
sbb
les
les
adc
les
sub
mov
imul
shrl
arpl
push
cltd
call
cld
sar
cmp
lcall
pop
imul
xchg
lods
mov
jmp
iret
aam
sbb
cmp
push
sub
jae
mov
lods
mov
pop
pushf
jns
push
ret
in
insl
push
xchg
sbbl
fistpl
or
and
xorb
sbb
push
mov
das
outsl
mov
cs
lcall
mov
leave
mov
push
jecxz
inc
fstpl
xor
jne
xor
test
sbb
and
daa
sub
adc
add
mov
adc
dec
push
lcall
jmp
movsb
lret
stc
sbb
push
ja
xor
sub
lods
pop
xchg
test
rol
lret
xchg
cmp
or
sub
nop
cmp
sub
pop
push
ret
mov
aas
pop
cmp
add
and
jmp
test
lock
inc
lds
sub
dec
das
clc
jge
adc
cmp
roll
repz
pop
loope
out
add
or
pop
dec
inc
sbb
mov
lods
icebp
xchg
jbe
call
leave
sbb
xor
and
sbb
and
push
pop
pop
stc
fs
adc
or
ret
cmp
test
mov
lret
faddl
test
dec
push
adc
or
ja
cmpb
xor
pop
add
and
jne
push
pop
cmp
mov
addr16
and
insb
fildl
push
adc
clc
adc
mov
add
enter
inc
mov
xchg
mov
mov
cmp
fildl
pop
nop
pop
pop
jmp
push
mov
jmp
loopne
cmp
in
out
push
fs
push
jg
mov
pop
imul
inc
jnp
jecxz
aam
fnstsw
popf
fcomps
mov
shll
pop
ja
and
mov
sti
fcoml
out
mov
icebp
cmp
fcomps
fs
xor
lret
jo
xchg
mov
adc
and
in
out
sbb
arpl
inc
xlat
mov
cmpsb
add
hlt
xlat
lea
adc
roll
icebp
insb
cmp
or
cwtl
imul
xor
in
jb
lahf
or
pop
pop
repnz
fs
jl
cmc
adc
orl
sbb
lahf
and
dec
mov
imul
xchg
mov
adc
faddl
ja
inc
and
icebp
aad
and
jg
pcmpeqd
mov
sti
adc
bound
stos
xor
test
sub
in
lret
mov
jge
vpshufd
sbb
test
pushf
sarb
mov
out
out
jl
lcall
push
pop
adc
repz
xchg
in
xchg
xchg
dec
xchg
outsl
push
testl
loope
negl
adcb
fiaddl
cmpsl
xchg
imul
test
out
cmp
add
shll
jae
lret
and
xchg
sub
or
add
and
inc
and
ljmp
sahf
int3
cmp
fdivs
sahf
icebp
sbb
pop
loope
jmp
insl
push
test
push
push
pop
int
jl
ds
orl
test
inc
mov
scas
iret
xor
fldcw
out
mov
mov
popa
xchg
insl
adc
cmp
mov
mov
jne
test
andl
popf
enter
cmp
pop
test
mov
jns
loope
out
jmp
ds
mov
jg
jmpw
sahf
sbb
test
movsb
ss
mov
lahf
jbe
pop
and
jg
jns
andb
icebp
ds
dec
loopne
cli
cmp
repnz
faddp
push
dec
rcl
popa
xor
mov
sub
lods
sub
pushf
push
fwait
ljmp
arpl
adc
mov
cmp
xchg
xor
popa
mov
mov
rcrb
sahf
sti
shrl
in
mov
jae
push
in
pop
inc
sub
xlat
adc
ss
shlb
or
mov
mov
hlt
push
daa
cmp
or
push
lahf
rol
mov
loop
ja
inc
bound
pushf
or
test
xchg
ds
fbstp
aad
push
fimull
dec
int3
out
lcall
ds
pop
sub
sub
xor
outsl
inc
xchg
std
ljmp
test
dec
jb
fdivrs
in
inc
lahf
push
in
sub
sub
popa
pop
lret
loop
scas
int
cltd
dec
das
fistpl
scas
xchg
dec
pop
iret
imul
test
out
dec
lahf
inc
mov
loop
aam
xchg
aad
dec
jmp
aas
or
mov
test
lock
out
cwtl
cld
sbb
mov
lea
mov
addr16
xor
rcrb
adc
getsec
stos
adc
jae
pushf
js
and
out
mull
repz
addr16
cmp
mov
bswap
das
inc
shlb
add
ljmp
push
and
adc
mov
gs
xchg
loopne
sub
xchg
into
les
push
call
jns
add
jns
dec
cld
in
outsb
iret
sub
subl
and
push
pop
pop
mov
jg
int3
loope
dec
lods
cmpb
pop
push
xchg
test
pop
sbb
xlat
pop
loopne
pop
cld
push
mov
cmp
xchg
lret
pop
xchg
sti
pop
into
mov
jmp
and
pushf
add
adc
mov
inc
sub
out
push
sub
bound
addr16
mov
int
sub
and
pop
fistl
mov
jne
mov
pop
or
fs
push
jb
and
cmp
mov
mov
ljmp
out
mov
das
popa
aam
dec
mov
push
subl
add
dec
mov
and
inc
mov
or
cmpsl
mov
cmp
push
test
gs
jmp
lahf
push
popf
cmpsb
sbb
rcll
rclb
icebp
dec
frstor
cmp
mov
nop
inc
inc
jbe
ret
mov
push
stos
and
xor
inc
dec
rcrb
negb
stc
pushf
jp
inc
call
jmp
stos
pop
cwtl
insl
push
sar
iret
sub
xchg
adc
shlb
cmp
ret
mov
push
sbb
into
es
insb
push
xchg
mov
stos
aam
pop
jp
xor
and
lret
punpcklbw
hlt
clc
sub
pop
jnp
xchg
xchg
inc
push
div
jo
test
inc
fiaddl
mov
jge
jg
jbe
loopne
xchg
cld
test
mov
ljmp
pop
into
out
les
inc
fcom
lret
inc
nop
mov
enter
adc
jg
in
iret
mov
pop
mov
bound
in
cs
dec
mov
sub
pushf
outsl
mov
mov
push
insl
addr16
dec
push
into
cmc
shlb
repnz
lret
adc
ret
aam
decl
cmp
into
call
repnz
add
je
outsl
mov
les
movsb
cmp
rol
xor
data16
or
mov
or
sub
lret
inc
mov
sti
cld
leave
pop
jnp
iret
jns
sbb
outsl
sbb
cmpsb
jb
inc
test
pop
adc
push
test
inc
xchg
mov
mov
xchg
fidivl
rclb
ret
and
mov
ror
popf
cmc
loopne
mov
dec
sti
lock
test
iret
and
rorb
int
dec
mov
inc
out
es
in
popa
sbb
sub
jmp
xor
leave
unpcklps
mov
adc
push
ljmp
repz
mov
inc
xchg
mov
arpl
test
jns
cltd
paddusb
mov
inc
inc
mov
xlat
adc
out
sub
es
lret
addr16
aas
mov
stos
jae
int3
imull
mov
decl
push
sub
cmpsb
adc
push
movsl
bound
inc
xchg
pop
push
cmp
xchg
push
inc
xchg
dec
jp
jecxz
test
mov
fidivl
jmp
int
cmp
xor
out
xchg
dec
push
pop
fs
mov
jbe
cmp
mov
jno
pop
enter
jno
int
lret
xbegin
push
adc
pop
ds
push
push
adc
and
xchg
push
mov
rcr
push
jmp
out
cmp
cmpsb
mov
mov
test
xchg
repz
les
cmp
mov
hlt
ret
jg
xor
mov
jnp
xchg
data16
mov
push
sub
inc
repz
lock
mov
and
xlat
outsb
out
movsl
push
imul
push
add
xor
lods
sub
push
pop
sub
push
dec
test
fcoml
dec
cmp
cmp
jnp
clc
stos
fdivr
in
ljmp
filds
inc
out
lock
outsl
fsubs
push
test
mov
test
ss
test
pop
je
dec
shrb
jns
jp
push
dec
push
pop
adc
mov
pop
mov
dec
pop
mov
ret
test
dec
push
loopne
xchg
sub
outsb
and
inc
subl
xchg
test
ss
cli
fidivrs
into
mov
sbb
into
es
out
sbb
mov
cmp
mov
and
stos
aad
insb
dec
cmp
jge
cmpsl
sbb
addl
lods
pop
les
add
fwait
or
fs
data16
jg
dec
test
nop
adc
mov
jns
jmp
xlat
push
jp
daa
push
gs
pop
iret
cmc
mov
push
imul
shlb
orl
fldt
mov
mov
ret
fdivr
mov
arpl
icebp
dec
sbb
fldl
xor
xor
ss
repnz
cmc
je
and
lods
cmc
clc
aad
and
int3
push
sub
mov
mov
cmc
shr
xchg
xchg
jo
push
push
sub
xlat
xchg
cmpsb
lahf
inc
xlat
xchg
dec
mov
lods
and
inc
inc
add
push
insl
push
into
dec
and
cmpsl
scas
jae
cmc
mov
cmpl
jnp
jno
xchg
mov
outsb
scas
rclb
cmp
dec
lods
sbb
aad
pop
cmp
leave
mov
dec
mov
inc
mov
les
dec
mov
dec
mov
iret
jecxz
stos
sub
cld
test
out
ss
popf
mov
sbb
pop
fwait
popa
sbb
popf
mov
and
mov
insl
push
loopne
adc
ss
jle
shrl
lret
xor
popa
notb
lods
les
bound
pop
xor
adc
adc
or
lea
enter
push
or
fwait
inc
fiadds
jp
movb
mov
ja
xor
jns
sti
sbb
mov
mov
jns
sbb
add
sbb
push
lods
mov
rcl
xchg
inc
popf
mov
movsl
lock
fdivl
sarl
jbe
imul
cmp
bound
lock
sub
jbe
rcrb
and
cwtl
mov
cmp
mov
hlt
add
pop
lret
xchg
ret
ffree
data16
imulb
test
pop
dec
loope
cmp
shl
jp
fnsave
mov
or
fstpt
inc
out
pop
lds
xor
pop
push
jecxz
ja
add
loopne
out
popa
inc
out
or
push
test
arpl
xrelease
incl
fstl
inc
sub
jb
scas
iret
xchg
data16
inc
int3
lods
sbb
mov
jnp
lret
incl
sbb
cmp
imul
popf
lods
cmp
fincstp
jns
fdivrs
arpl
dec
sub
mov
push
push
mov
outsb
xchg
mov
pop
stos
test
xchg
je
cmpsb
shrb
mov
push
das
in
adc
jae
xchg
dec
fstps
jle
rclb
loope
add
jmp
and
je
test
inc
add
les
adc
hlt
jno
mov
nop
cmc
out
into
aad
adc
cmp
sub
pop
push
sahf
adc
or
lret
fcomps
arpl
jl
pop
ret
cwtl
es
inc
push
and
test
add
into
mov
xchg
push
jge
cmp
cmp
xor
shl
clc
insb
mov
dec
push
test
lods
dec
imul
dec
and
dec
xor
aad
cmp
stc
sbb
pusha
push
push
xor
sbb
jmp
loope
mov
sbb
ret
test
jl
mov
mov
outsb
add
dec
mov
dec
lods
xor
jae
jns
pop
jbe
scas
frstor
and
xchg
push
je
arpl
xchg
push
xor
xchg
lret
jmp
das
lret
fwait
pop
in
jmp
mov
js
shrb
push
cmp
rcll
scas
mov
xchg
jecxz
dec
push
std
sbb
sub
fwait
rolb
scas
xchg
inc
adc
xchg
sbb
push
add
lcall
and
pop
sbb
cld
out
repz
outsb
aas
and
push
mov
out
jae
in
data16
leave
jae
xor
inc
xor
out
add
inc
repz
fstps
ret
cmp
out
subl
mov
ret
leave
sub
xor
dec
enter
dec
leave
push
pop
cmp
jae
iret
and
cmc
dec
inc
inc
ret
lahf
sbbl
xor
enter
cmovne
push
enter
jmp
mov
dec
loopne
mov
mov
xchg
xchg
shlb
push
xor
mov
push
jae
in
sub
outsb
fmull
push
dec
sbb
add
or
scas
jle
lret
xchg
mov
jmp
sbb
clc
subl
cli
sub
jp
stc
les
mov
push
xlat
es
out
je
addr16
inc
ljmp
subb
push
push
mov
cwtl
dec
arpl
push
insl
fnstsw
rcll
mov
sbb
daa
orl
inc
mov
mov
and
adc
icebp
lods
out
in
xchg
fs
add
pushf
in
mov
pop
loop
jl
and
xchg
push
lods
dec
sbbb
add
jo
pushf
inc
outsl
or
sbb
dec
adc
add
jae
and
inc
stc
nop
inc
fstl
dec
inc
cmpsb
enter
loop
pusha
mov
pop
jb
lds
adc
cmpsl
push
mov
push
int
jmp
push
pop
pop
adc
or
cmc
inc
pop
ljmp
rclb
in
out
or
or
jg
mov
jmp
sub
jge
or
test
mov
test
out
sub
cs
cld
lock
and
cmc
mov
inc
jmp
and
adc
ljmp
and
dec
sbbl
cmpsl
pusha
shll
jnp
or
cs
ds
xchg
loopne
cmp
sbb
rorl
jne
sub
mov
dec
mov
and
fnsave
aaa
pop
lahf
addr16
cmc
aad
nop
dec
call
movsl
imul
mov
xor
movsl
adc
dec
adc
cmc
clc
js
push
stc
cmp
fistpll
shlb
or
ja
inc
xor
lods
decb
cmp
lock
jecxz
xchg
or
sbb
xchg
fwait
jns
pop
add
mov
arpl
dec
xor
dec
sub
dec
inc
sbb
push
mov
sub
or
icebp
xchg
pop
ror
add
decb
popa
inc
jle
dec
lock
adc
mov
arpl
jae
cmp
inc
call
pop
sbb
lcall
inc
xchg
mov
inc
daa
shlb
xchg
dec
pop
inc
push
ret
mov
ret
lret
xchg
lock
push
test
xor
mov
jne
aaa
fisubrs
push
pop
xchg
jbe
push
fbstp
sbbl
cmp
fidivrs
jle
dec
in
fdivr
dec
push
xchg
rolb
and
xlat
cmpsb
dec
xchg
adc
mov
mov
pop
dec
dec
lea
imul
lahf
ds
add
sbb
or
add
or
xchg
nop
scas
mov
aaa
mov
paddusb
outsb
sub
add
out
and
in
aam
or
pushf
lods
sbb
outsb
xor
sbb
lea
aas
push
adc
cs
sbb
repnz
and
xlat
pop
jae
pop
insl
das
movsl
xchg
in
jecxz
sub
xchg
xor
aaa
jecxz,pn
sub
and
inc
xchg
sub
push
mov
mov
pop
sbbb
pop
and
mov
test
stos
faddl
int3
enter
das
adc
repz
inc
pushf
push
sbb
sub
inc
push
push
inc
cli
dec
sub
lods
pop
int
ljmp
inc
jmp
adc
jno
adc
decb
mov
movsb
cmpsl
xor
xlat
xchg
fiadds
scas
jns
push
dec
and
hlt
mov
adc
std
daa
mov
xchg
in
scas
pop
call
push
test
jmp
jae
neg
cmp
jno
xor
cld
lock
mov
pop
sub
popa
push
cli
xor
data16
mov
push
mov
shl
push
xor
lcall
aad
iret
push
xor
mov
scas
cli
adc
les
jbe
mov
aam
pop
mull
test
cwtl
jo
mov
mov
and
repz
mov
mov
cs
or
cmpsl
adc
and
cld
mov
cwtl
int
bound
jle
lea
leave
xchg
movsl
inc
cli
push
inc
jecxz
or
pushf
test
inc
adc
mov
xor
pusha
lods
sub
push
or
fcomp
push
mov
lock
pop
movsb
dec
ljmp
adc
mov
mov
pushf
adc
pop
fisubl
jnp
outsb
into
xchg
sbb
mov
inc
xchg
in
cmp
push
dec
sub
mov
cs
xchg
in
lahf
and
dec
in
aaa
xchg
jb
cmp
or
loope
jae
aaa
and
test
in
or
dec
pushf
jnp
imul
cmp
inc
add
add
push
out
sqrtps
dec
push
push
jnp
leave
xchg
hlt
test
sbb
sahf
out
and
repnz
test
and
pushf
fstpl
xchg
jge
sub
fldcw
sarl
lds
jl
mov
dec
xchg
cmp
or
ds
pop
push
and
jns
xchg
shll
pop
cld
xlat
lock
imul
add
or
mov
pusha
aad
js
sub
test
sub
mov
mov
xchg
add
mov
in
sub
fists
cwtl
push
inc
fwait
enter
sub
fcoml
dec
mov
lret
or
popf
xchg
imul
inc
cmp
jg
xor
mov
sbb
in
cmpl
dec
scas
mov
fmuls
insl
fists
aam
js
je
pop
lea
leave
stos
mov
sar
aas
pushf
sbb
xlat
xchg
out
adc
inc
iret
les
add
shlb
add
cmp
shll
mov
testb
sbb
pop
test
mov
push
nop
pop
mov
jmp
or
test
xchg
test
jb
pop
outsl
cmpsl
shlb
and
andl
aaa
mov
sub
mov
or
adc
xchg
ja
punpckldq
int3
xlat
mov
mov
mov
aas
pop
sub
xchg
push
mov
imul
mov
sbb
sub
dec
mov
xor
gs
jp
stos
push
lahf
rcrb
push
adc
ja
mov
call
mov
adc
mov
xchg
enter
inc
iret
push
sub
mov
jo
js
inc
add
std
mov
std
pop
outsb
jo
jne
dec
adc
add
cmp
lret
pcmpeqw
sbb
push
ljmp
out
jno
jl
and
arpl
cmpsl
dec
sbb
dec
aas
sbb
jo
or
pop
and
cwtl
or
xchg
dec
std
mov
jge
divl
add
or
lods
js
lret
dec
jg
data16
sub
jg
xchg
sub
mov
clc
sbb
sarb
sub
popf
and
sbb
dec
data16
incl
push
jne
sahf
pop
inc
aaa
jns
mov
jmp
cmpb
lret
jb
jae
jnp
inc
xor
jmp
or
mov
push
dec
pop
jb
popa
sbb
cld
bswap
lret
pop
les
mov
mov
out
fs
dec
cmp
mov
xchg
sub
xorl
dec
rcll
loop
test
inc
cltd
shll
stos
inc
iret
test
and
mov
js
pop
rorb
and
popa
mov
xchg
push
sti
inc
mov
dec
das
ds
popa
imul
mov
pop
or
dec
aad
mov
loope
sbb
mov
cmp
pop
loopne
enter
stc
movsl
adc
hlt
jbe
xchg
leave
out
xchg
imul
shr
cmc
stc
fstpl
jne
stos
pop
inc
mov
xchg
dec
bound
cmp
fcmovnbe
mov
mov
pop
cmp
rol
and
dec
les
ret
int3
xlat
adc
dec
push
stos
pop
jg
cmp
sahf
xor
iret
mov
sar
mov
jmp
xchg
xchg
data16
sbb
inc
pop
insb
sbb
test
aas
cmp
bound
inc
jnp
push
jmp
ss
sbb
push
lds
xchg
iret
clc
lcall
lahf
scas
sub
mov
js
stos
mov
push
push
jo
fdivp
cmp
mov
xor
mov
mov
addb
mov
jge
call
jle
xorl
inc
mov
loop
ret
hlt
xor
jp
jle
mov
fcoml
aam
das
adc
test
xchg
fiaddl
test
leave
fwait
mov
lret
fbld
push
add
fdivl
jb
pushf
or
xor
lea
sbbb
aas
or
pushf
jg
pop
inc
or
fsubrp
outsl
lret
fs
outsl
jge
ja
xor
incb
adc
lea
test
popa
mov
ds
adc
push
add
in
ret
xorl
dec
bound
jecxz
test
fsubl
pop
mov
mov
add
stc
cli
xchg
fiaddl
fsts
cli
and
ds
xlat
xchg
mov
dec
mov
pop
loopne
loopne
popf
call
mov
ja
hlt
and
sbb
stos
inc
clc
dec
cltd
inc
pop
sbb
mov
cli
hlt
ds
movsb
jo
adc
sub
clc
fcomi
out
gs
push
cmp
cmpsb
and
pop
cwtl
shlb
pop
faddl
arpl
adc
xchg
sub
in
sahf
insl
aaa
into
pop
fstpl
cmp
mov
sarl
aaa
xor
lret
adc
lret
dec
lods
mov
inc
adc
int
dec
mov
inc
mov
rclb
leave
outsl
mov
xchg
fmul
cmpsl
je
stos
or
pop
push
mov
push
aas
clc
push
inc
jo
fwait
cmp
aas
iret
sbb
sub
push
lret
loop
arpl
jmp
loop
sbb
pop
or
jle
js
jge
fcomi
stos
lods
fiaddl
lods
mov
test
les
stos
mov
outsl
mov
dec
pop
mov
sub
jle
cld
pop
mov
insl
sarl
mov
fwait
test
bound
out
add
push
ret
test
adc
mov
outsl
jb
cld
leave
shl
mov
jle
aas
jge
lods
mov
and
shlb
mov
cmpsl
and
sahf
mov
cmpsl
sahf
mov
imul
xchg
fistps
add
adc
inc
jmp
jo
pop
mov
inc
jo
pop
insb
gs
out
jbe
dec
mov
inc
loopne
testl
jnp
mov
lretw
lds
stos
add
sbb
les
aaa
cmp
mov
jbe
call
lcall
mov
and
jo
mov
pop
ffree
or
add
cmp
test
push
leave
ficomps
mov
pusha
add
xor
push
cmpsl
test
fcoml
fildl
cld
push
pop
mov
and
cmp
into
repnz
jns
gs
add
jmp
pop
or
add
cmp
inc
das
push
pusha
mov
dec
or
scas
and
fisttpll
inc
sbb
xchg
in
cmp
jle
inc
cmp
sbb
dec
pop
sbb
gs
mov
icebp
add
adc
aas
and
push
inc
movsl
lea
mov
cmp
jne
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
cld
cmp
mov
sti
pop
jp
ss
data16
mov
xchg
sti
or
call
std
xchg
ret
adc
mov
dec
rcr
je
scas
daa
dec
pop
jo
sub
mov
test
pushl
add
mov
aaa
sbb
xchg
mov
mov
mov
jo
push
shrl
inc
push
jb
outsb
push
rclb
pop
mov
insl
dec
lahf
cwtl
pop
xor
fs
nop
leave
add
xor
int3
sub
sub
inc
or
aaa
call
daa
or
push
push
cmp
insl
in
aas
mov
xor
or
jns
aad
fdivrs
js
fwait
xchg
cmpsl
ds
xchg
icebp
and
jmp
push
jp
ret
and
cmp
push
popf
xor
mov
imul
or
xchg
loopne
clc
jp
cmc
dec
jo
cwtl
es
inc
xor
pop
cld
mov
adc
xor
add
add
je
jg
and
sub
enter
fdivrl
mov
aad
sbb
mov
xor
in
pop
ret
sub
fsubr
push
jl
scas
pop
ss
mov
sbb
mov
pop
mov
xchg
in
mov
popf
popf
call
and
stos
out
test
fprem1
jnp
push
jge
cmpsb
mov
cli
cli
cmp
sub
and
ljmp
xchg
mov
mov
popf
adcl
in
push
mov
mov
aad
movsb
mov
mov
dec
mov
sbb
xchg
jg
mov
lret
xor
dec
sahf
jae
mov
add
aam
lock
mov
outsb
add
inc
leave
inc
fiaddl
sub
pop
xorb
ljmp
jae
pop
fisubrs
repnz
jno
fcoms
outsl
lret
add
inc
xor
std
cmp
adc
mov
fcoml
cmp
push
into
lret
adc
aaa
xor
imul
cmp
bound
pop
inc
mov
pop
insb
sub
pushf
in
pop
outsl
adc
lea
fcomip
fbstp
sub
fldenv
jg
cwtl
jb
sbb
es
mov
mov
push
dec
mov
insl
sbb
jle
aam
popa
lret
fsubl
cld
jg
idivb
sbb
jp
xor
mov
lock
mov
cli
pusha
je
jnp
popa
sub
dec
jb
bound
add
fwait
pusha
rcrb
mov
xor
out
aad
push
mov
aad
int
movsl
rolb
pusha
xlat
fimull
and
dec
mov
cmp
cmpsl
insl
xchg
ja
xchg
push
mov
aas
push
test
sahf
shrl
add
out
lock
mov
outsb
and
outsb
icebp
ret
pop
adc
imul
mov
add
pop
and
in
dec
push
push
add
inc
pop
incl
iret
xor
insb
pop
mov
fcmovb
scas
cs
mov
mov
data16
adc
and
mov
xor
fcoms
xor
push
shl
mov
pop
xchg
shlb
in
and
xlat
lock
ds
xchg
test
cld
xchg
rcl
mov
out
or
test
sbb
push
aad
xlat
or
mov
sbb
mov
xchg
sub
aad
and
loopne
gs
mov
insl
jno
push
adc
je
lods
sbb
inc
mov
dec
lcall
mov
js
or
sbb
jns
mov
pushw
xchg
clc
inc
sub
dec
pop
jg
xchg
adc
iret
aaa
push
test
push
push
lock
fildl
push
dec
inc
test
xorb
repz
cmp
adc
jp
mov
mov
xor
adcl
pop
jg
adc
bound
ret
rcl
pop
fldz
and
push
xorl
repnz
outsb
movsb
or
jmp
mov
ds
and
pop
and
push
mov
xchg
push
insl
rcrb
icebp
js
cmp
sub
test
popf
es
loop
fdivrp
movsl
outsl
das
arpl
mov
add
divl
mov
stos
adc
fildl
fwait
popa
sarb
jmp
push
jl
xor
fmuls
call
and
rol
cmp
xor
mov
fcmovbe
sub
int
dec
push
jno
add
rclb
test
dec
cltd
ret
dec
stos
mov
pop
call
clc
xor
test
add
pop
sbb
inc
insb
test
jns
mov
movsl
mov
inc
mov
pushf
incb
push
call
jns
stos
cld
push
out
adc
idivb
stc
mov
or
xchg
test
enter
shlb
outsl
push
dec
jl
jno
divl
lahf
ret
sub
adcl
xor
into
xchg
xor
xchg
repnz
fisubs
clc
ja
push
cmpsl
fistpl
lods
cmc
push
and
js
cmc
stos
add
mov
stos
clc
pushf
mov
sub
sbb
or
jae
mov
mov
push
test
jae
xchg
imul
xlat
aad
jp
adc
test
inc
sahf
hlt
or
stos
std
movsl
inc
loop
das
mov
hlt
pop
mov
and
dec
inc
data16
dec
xchg
mov
fidivs
jecxz
ds
mov
xchg
jle
stos
push
in
adc
jmp
sub
adc
jnp
cmp
cs
xchg
test
sbb
push
gs
ret
inc
mov
push
jp
inc
pop
sub
ret
lods
jnp
fistpl
xor
int
out
insl
mov
mov
push
mov
sub
sub
adc
xchg
arpl
cmp
adc
decl
in
inc
stos
aaa
loopne
and
call
js
jo
les
add
or
mov
sub
and
imul
add
pop
adc
mov
push
into
test
in
cmp
mov
loopne
fwait
xchg
add
push
jecxz
fwait
in
mov
xor
shl
inc
mov
cmp
sbb
sub
std
sbb
mov
sub
leave
mov
enter
push
mov
mov
in
andb
mov
mov
dec
mov
push
add
popa
adc
cmp
mov
add
jo
cmp
adc
std
add
das
addr16
dec
cmpsl
mov
mov
adc
adc
popf
xor
and
andb
pop
not
mov
ds
push
mov
mov
imul
pop
shlb
ljmp
sub
int3
sub
mov
js
out
pop
xchg
imul
lret
popf
push
hlt
fdivrl
cmp
mov
fadds
shrl
or
pop
je
add
repnz
push
movsl
jae
lock
sbb
lahf
mov
das
mov
inc
jnp
fsubrl
mov
pop
iret
ret
or
dec
cmpsl
cltd
clc
sub
jmp
pop
inc
in
je
dec
adc
loope
cmpsl
cmp
xchg
stos
int
adc
jmp
lahf
pop
test
xor
xor
pop
push
sahf
ret
loope
sub
cmp
cltd
push
xchg
xlat
ds
int3
push
mov
sub
lds
shlb
loope
daa
push
mov
jp
lahf
outsl
call
mov
dec
call
jl
sbb
cmp
mov
push
xchg
nop
pop
xchg
mov
pop
or
js
scas
cmpsb
sub
xlat
insb
mov
sub
push
outsl
stos
push
out
pop
adc
cmpsl
mov
jnp
pop
push
adc
mov
in
mov
inc
xor
mov
out
cmp
das
fcmovne
and
ror
leave
xchg
out
xor
aam
adc
sub
jle
hlt
ljmp
aas
xlat
sbb
adc
stos
dec
mov
lock
sub
lods
std
sbb
cmp
lret
call
jnp
lahf
xor
and
push
mov
add
jae
add
sbb
inc
scas
outsl
mov
cmp
out
scas
mov
outsb
dec
rcll
xor
xor
and
or
xchg
pop
lds
sub
std
jge
into
sub
inc
mov
call
gs
lods
mov
adc
sbb
lret
adc
fstpt
push
test
jb
outsl
mov
fmull
or
xchg
leave
outsl
sub
pop
add
imul
cmp
movsl
push
and
je
pop
dec
in
inc
mov
repnz
imul
fwait
adc
rorb
test
cli
addr16
cli
jl
push
fdivp
sarl
insl
pop
fs
cltd
mov
xlat
test
push
out
xchg
ds
add
pushf
mov
pop
in
pop
xchg
jno
out
jno
push
push
fistpl
inc
bound
add
js
xor
push
jo
clc
gs
inc
in
shr
lods
into
out
je
xchg
shl
enter
mov
pop
dec
jnp
inc
push
sarb
fisttpl
out
xchg
outsb
sub
ficomps
add
addr16
jle
xor
jp
mov
fisttpll
jg
clc
int
ss
xchg
jbe
jmp
jle
loop
jbe
out
les
jmp
lahf
fbld
jb
mov
loopne
xor
xlat
es
stc
popf
cmpsl
test
test
je
enter
stos
xchg
mov
mov
add
or
cld
push
pop
popa
shll
xor
in
pop
or
mov
jb
sbb
shl
cmp
or
scas
push
xchg
loopne
xlat
xchg
ud2
ret
leave
mov
cli
insl
arpl
test
cmp
ds
sbb
roll
es
pop
dec
xor
mov
mov
xchg
mov
xor
ss
imul
xchg
jno
jno
or
mov
dec
out
cltd
inc
cld
ss
or
sbb
jns
mov
js
ss
pop
ffreep
pop
pavgw
add
push
xchg
popf
sub
and
fwait
lea
push
lea
mov
popf
enter
inc
push
jp
and
ds
dec
xchg
insb
shlb
into
push
sub
shlb
add
sub
lods
mov
xorb
mov
xchg
loopne
inc
push
mov
pop
and
push
ds
push
lahf
movsb
insb
fiaddl
arpl
and
inc
cld
sahf
pop
divb
push
cld
sbb
adc
lret
mov
rcrb
hlt
ds
repz
sbb
out
je
ret
out
das
fsubrl
and
and
rcrl
xchg
int3
push
dec
push
notb
adc
inc
jecxz
data16
mov
pop
push
cmpsb
hlt
xchg
xorb
xchg
xor
lret
cmp
stc
test
xorl
js
xor
dec
hlt
sbb
mov
inc
inc
mov
mov
push
mov
jae
cmpsl
fbstp
aad
loopne
sbb
pusha
mov
mov
cmp
aas
push
dec
lret
fsubl
mov
lcall
push
sub
sbb
loop
jl
jo
xchg
mov
push
and
jmp
es
incb
test
ljmp
inc
push
inc
push
xchg
push
in
adc
and
loopne
mov
iret
fcmovnb
shlb
sbb
mov
orb
ja
inc
or
dec
pop
cmpsl
enter
js
test
cli
jp
mov
insb
in
sbbb
mov
push
mov
stc
sub
mov
xchg
enter
push
jb
je
sahf
ficoml
inc
ja
push
in
rorb
aaa
lods
dec
nop
add
xchg
sarb
lods
icebp
add
cltd
lea
stc
scas
jno
inc
mov
mov
cmc
int3
push
jns
outsb
hlt
hlt
pushf
push
cmp
mov
leave
inc
xor
test
mov
mov
cmp
xorl
pop
and
sub
outsl
sbb
xchg
inc
shlb
inc
add
push
dec
mov
stc
add
xchg
jl
dec
xor
add
adc
jg
sub
or
cwtl
mov
xor
aam
bound
pop
xchg
push
arpl
cmp
arpl
sub
cmpsl
pop
faddl
jl
pop
ret
pop
lds
sub
pop
rcrb
add
enter
test
out
dec
and
rcll
sti
stos
pushf
dec
mov
cmp
ljmp
lea
push
mov
inc
ret
imul
jae
cmpsb
rorb
test
pop
je
pushf
gs
mov
inc
jecxz
data16
sbb
push
fists
repnz
push
push
aam
loope
jo
push
bound
inc
mov
push
jno
out
lcall
add
mov
xchg
jmp
add
mov
or
jge
notb
ficoms
cltd
add
push
orb
xlat
pop
or
fisttpl
je
std
sub
ljmp
ss
jmp
mov
inc
jp
clc
in
inc
enter
sub
xchg
or
xlat
mov
test
xchg
fisubrl
les
fstp
iret
sbb
scas
xor
pushf
adc
mov
pusha
shll
out
sbb
and
adc
pop
mov
movsb
xchg
notl
stos
cmp
push
dec
outsl
pop
mov
xchg
outsb
sbb
dec
outsl
mov
cmp
add
dec
and
ret
imul
sti
pop
lret
subl
movsl
std
or
mov
inc
ret
inc
pop
xchg
mov
nop
push
call
cmc
push
and
cld
icebp
gs
or
test
shll
sub
or
nop
js
das
and
xor
test
gs
arpl
rcrb
jge
xchg
add
mov
popf
std
and
cmc
add
repz
sub
mov
movsb
rorl
adc
mov
cs
fnstenv
nop
jbe
push
mov
mov
imul
idivl
int3
jp
cmp
jle
cmp
jnp
in
loope
pop
xchg
out
or
aas
push
jae
adc
jle
incb
int3
xchg
fldenv
mov
gs
xchg
add
or
es
xor
dec
loop
adc
je
int
sbb
enter
enter
pop
in
pop
cli
sub
xchg
jne
mov
inc
pop
aas
mov
data16
repnz
mov
insl
jmp
sbb
inc
mov
and
rcrb
sti
outsl
lahf
dec
pop
lret
add
call
mov
sbb
pop
sti
sarl
mov
sarl
mov
jg
repnz
mull
ds
shll
fisubs
pop
out
ss
mov
roll
or
stc
ret
push
lods
out
xchg
sbb
dec
incl
inc
aam
decl
jo
sub
dec
or
jge
sbb
pop
ds
jnp
inc
cmp
xor
subl
inc
stc
scas
dec
dec
adcb
lea
mov
and
cmp
dec
aaa
or
add
dec
xor
scas
fimuls
or
roll
cwtl
xor
xchg
fcoms
scas
aaa
jp
jp
movsb
mov
and
adc
inc
or
lret
cmp
xchg
lcall
ds
mov
sbb
in
fidivrs
dec
pop
push
movsb
mov
add
cmp
fcomi
sbb
ret
insb
test
arpl
pop
push
ja
lcall
sbb
fistps
xor
lds
xchg
mov
mov
xchg
lock
enter
jbe,pn
mov
add
fadd
inc
ficoml
shll
xor
mov
dec
pop
cmp
das
push
vmread
lock
fcom
test
jnp
sbb
jle
jnp
dec
ss
pusha
mov
je
shlb
adc
iret
lods
dec
pop
push
dec
xchg
xchg
mov
mov
in
push
pop
cmp
js
rorb
inc
daa
xor
lahf
xchg
lret
jg
mul
add
bnd
loop
into
ret
repz
or
ljmp
test
pop
fwait
jno
insl
cmp
andl
gs
push
mov
fidivrs
push
sbb
sbb
shrl
pop
fimuls
dec
clc
pop
test
jge
or
lea
sub
movsb
mov
cli
ret
and
fwait
out
outsb
cmp
std
sbb
jne
inc
cwtl
and
dec
addr16
inc
jo
cmp
ret
mov
stos
sti
addr16
jmp
movsb
pop
adc
clc
fadd
lods
sub
movsb
adc
xchg
imul
outsb
xlat
mov
xchg
pop
xchg
mov
dec
repz
insl
jns
or
xchg
movsl
in
clc
and
fneni(8087
push
aaa
out
in
dec
pushl
xor
idivb
and
and
mov
push
cmp
pushf
insl
jmp
jbe
scas
or
fwait
mov
cmp
push
dec
outsb
xchg
and
xchg
les
aam
sub
insb
stos
push
lret
push
les
in
lcall
mov
lods
pop
shrb
push
sub
mov
testl
sub
add
mov
rcl
insb
push
iret
aad
cmpl
pushf
repz
cld
xchg
push
lret
ret
jg
push
sub
xor
mov
sbb
inc
mov
aaa
fidivrl
cwtl
cmpsl
jmp
pop
mov
fs
shll
hlt
or
sbb
sti
mov
mov
cmp
mov
xor
loope
cmp
xor
dec
shlb
shl
adc
gs
call
sbb
xchg
jg
lock
nop
jbe
loope
popa
fs
sbb
jge
lea
out
sbb
or
xchg
push
int
gs
pop
call
or
or
fnstsw
dec
cmpsl
mov
int3
popf
jp
in
jne
sarb
cmp
ss
aaa
xchg
dec
out
jae
sti
cmp
xchg
adc
pop
jb
stos
sub
push
and
pop
cmp
scas
sub
adc
or
xchg
sahf
fimuls
push
lods
and
mov
jecxz
repz
adc
push
push
loope
sbb
aas
aaa
sub
sbb
divb
popf
lret
add
int3
mov
mov
lods
and
repz
lods
push
imul
add
and
dec
add
xchg
pop
mov
jl
cmp
mov
dec
pushf
mov
sti
dec
add
sarb
lcall
in
shl
and
jo
mov
inc
mov
cwtl
cmpsb
frstor
leave
sbb
inc
pop
jnp
or
pop
aaa
out
inc
xchg
xor
mov
jl
out
or
pop
xchg
imul
xor
clc
sti
push
push
mov
push
scas
in
adc
sbb
adc
test
pop
mov
xchg
ds
outsl
fldcw
dec
adc
mov
movsl
ja
orl
insb
pop
xor
stos
jno
xor
xchg
repnz
test
gs
js
mov
inc
imul
jg
cld
fwait
imul
das
sbb
aad
faddl
leave
jo
pushf
xorb
ror
adc
adc
mov
and
cmpsb
pop
fsts
dec
dec
sbb
pushf
int3
cli
adc
add
xor
mov
adc
das
push
subl
arpl
mov
jbe
out
lret
xchg
and
enter
mov
adc
addl
lret
loop
mov
lahf
cmp
push
movsl
jae
adcb
in
mov
jmp
mulb
movsl
dec
aam
std
iret
ss
enter
inc
lods
out
or
cmp
jmp
out
das
push
out
ja
scas
ds
aam
rclb
mov
bound
ret
shlb
sbb
movsb
add
ja
xchg
mov
loope
mov
js
int3
in
sbb
add
lahf
push
and
sub
shrb
jmp
fbld
mov
push
inc
mov
cmpsb
sbb
test
iret
add
lahf
iret
sbb
cs
sbb
pop
hlt
test
aam
cmc
loop
cmp
movl
xchg
testb
jno
or
out
add
mov
stos
mov
xchg
aam
rorl
jae
cmp
test
adc
aas
pop
movsl
pop
stos
and
or
push
cmp
dec
out
movsb
jnp
movsl
out
mov
icebp
sub
imul
out
xchg
xchg
jp
adc
jge
xor
fldpi
stc
lds
stos
dec
push
cmp
jne
jns
aas
jmp
adc
cmpsl
out
icebp
test
cmp
pop
cmc
push
mov
push
outsl
cmp
or
in
push
imul
inc
aad
and
mov
sbb
rcrb
test
or
lods
fwait
jns
std
leave
xor
xchg
lock
sti
jmp
cmp
in
add
inc
inc
push
call
cmp
cmpsb
clc
jp
dec
insl
bound
in
or
push
jmp
jae
lret
pop
gs
pop
sub
mov
cmp
dec
xchg
xchg
adc
and
fisubl
lds
pop
popa
cli
sub
bound
pop
sbb
out
dec
mulb
inc
cmp
mov
outsl
pop
jno
dec
inc
adc
and
and
daa
add
mov
les
inc
stos
leave
mov
xor
sub
cmp
adc
sbb
push
mov
bound
ds
inc
push
mov
xchg
xor
sbb
ljmp
and
xor
dec
sbb
mov
in
and
add
or
xchg
lds
bound
mov
adc
sbbb
fists
xor
inc
or
adc
pop
lret
shlb
sbb
popf
push
cld
jnp
ret
sbb
jl
mov
push
popf
mov
xor
push
push
repz
aas
fs
push
jp
and
push
loope
ret
dec
push
stc
dec
lea
mov
xchg
repz
add
sub
push
stos
repz
cmp
negl
mov
or
or
mov
mov
sub
cltd
pop
cmp
inc
cwtl
add
movl
test
jbe
loopne
fildll
and
push
lock
out
xchg
fildl
pop
shll
test
inc
sbb
mov
dec
adc
xchg
pusha
dec
aam
mov
or
cmp
jbe
jge
hlt
jle
pop
cli
repnz
push
jle
xor
pop
adc
push
in
into
inc
mov
hlt
mov
nop
out
and
push
xor
daa
clc
test
stos
je
inc
inc
dec
cmpsb
jno
int
add
shl
and
cli
pop
xchg
jle
cld
xlat
mov
test
dec
adc
adc
icebp
jb
xor
add
mov
sub
mov
in
xchg
jo
cmpsb
aas
inc
lods
push
xchg
lcall
jg
out
shlb
fcmovnb
xlat
repz
pop
and
sbb
xchg
xchg
ja
cltd
js
add
cmp
mov
or
aas
or
mov
inc
mov
data16
shll
shrl
outsl
frstor
lret
fstps
add
fcmovu
pop
fsubs
push
mov
jno
clc
test
jmp
fidivs
repz
xor
rcl
mov
dec
cmp
dec
push
adc
add
js
fsubrl
das
fs
and
adc
jp
mov
cmovne
movsb
pop
and
les
movsl
orb
adc
mov
loopne
lcall
mov
mov
lret
in
mov
jmp
nop
xchg
add
clc
int3
movsb
mov
rcll
jle
pop
jmp
std
into
add
imul
leave
es
add
aaa
loope
dec
sub
popf
sub
jmp
test
lea
ja
sbb
adc
pop
inc
and
xor
and
fnsave
das
xchg
xchg
mov
and
mov
out
xor
mov
aam
xchg
and
pop
and
xchg
push
jle
lret
std
dec
rcrl
das
jg
mov
jmp
dec
pop
or
jo
cmp
fldz
movsb
sbb
and
stc
xor
mov
inc
je
mov
push
adc
sbb
sbbl
fimuls
mov
lret
mov
adc
aaa
out
mov
aad
mov
cs
in
aaa
ret
xor
cmc
aaa
dec
lahf
dec
movsb
ljmp
out
pop
cmp
cltd
xor
push
xchg
add
dec
out
cmp
lds
or
adc
rcl
inc
lock
icebp
outsb
dec
mov
sub
ljmp
hlt
lea
jo
mov
jge
pop
sub
int
roll
das
inc
addr16
std
push
ret
inc
xchg
jns
mov
sti
leave
sub
js
lcall
adc
sbb
cs
inc
sbb
pusha
stc
dec
pop
movsl
mov
push
or
orl
or
fists
in
pop
pop
push
shrb
test
movsl
nop
leave
out
addr16
inc
shrl
lret
or
mov
scas
and
push
in
xchg
jno
test
pop
jne
sbb
mov
shl
cltd
add
rcll
fs
add
jle
xchg
sbbl
js
push
int3
dec
push
ret
aaa
cmp
movsb
sub
xchg
jl
push
mov
rcl
jmp
sahf
mov
cltd
out
dec
loope
sub
dec
jno
int3
cld
cmp
loopne
adc
iret
sbb
cwtl
mov
ja
movsb
mov
mov
inc
push
call
loopne
daa
mov
push
inc
xor
call
xor
shl
and
stos
test
hlt
fcmove
fistpl
xor
outsl
das
mov
sub
and
cmp
mov
sub
push
mov
pop
push
pop
cltd
lds
dec
stos
arpl
sbb
shrl
mov
addr16
adc
mov
xor
lock
test
out
or
xor
je
add
inc
fstpt
ja
aad
insb
sub
add
rcl
sbb
rorb
and
mov
mov
sti
dec
popa
aad
push
inc
repnz
sbb
or
and
push
stos
dec
push
lret
cmpsb
punpckldq
sub
cld
inc
lock
fs
loop
sbb
xchg
jmp
or
or
popf
inc
lds
cld
rorb
imul
ficoml
fidivrl
xchg
stos
in
pop
and
cld
mov
dec
and
add
outsl
sub
mov
fmul
dec
add
daa
repz
and
dec
je
pop
jns
jbe
nop
jmp
sub
cmpsl
js
inc
dec
dec
in
or
jp
adc
xor
in
sub
jb
jae
cwtl
inc
jno
xor
mov
pop
xor
push
lds
cltd
dec
ret
shrl
incl
xor
jb
in
or
test
stc
mul
scas
fidivrs
jae
jnp
and
in
adc
xor
subl
arpl
lret
jge
jnp
pop
dec
xor
pop
push
cmp
pop
mov
mov
add
stc
data16
loopne
mov
xchg
sbb
int3
ds
popa
sahf
rcrb
js
mov
lock
jmp
cwtl
lcall
test
loope
jnp
mov
int
sub
jmp
mov
and
addr16
loopne
pop
sahf
sub
mov
jl
jno
fimuls
in
ss
mov
clc
cmp
mov
sbb
aaa
sti
negl
sahf
xchg
and
sbb
push
dec
mov
mov
rcrb
ret
std
sub
xchg
push
outsl
lea
cmp
cmp
push
pop
test
fldcw
push
jne
leave
jno
lea
rdmsr
or
gs
in
icebp
sbb
xchg
roll
ss
sub
or
and
mov
iret
mov
push
and
imul
cltd
xchg
lahf
cs
jp
bound
sub
adc
mov
push
add
sbb
pop
pop
dec
xor
test
xchg
adc
pop
sbb
adc
sbb
fucomip
fs
bound
out
xchg
and
lods
xchg
shrb
mov
pop
add
jno
fcomip
add
and
push
call
push
jl
insl
mov
xor
push
lahf
jl
inc
insl
xlat
sbb
jle
test
inc
fstpl
arpl
push
mov
jg
or
inc
cmp
cmpsb
into
test
es
or
xor
and
add
in
pop
and
icebp
inc
jg
jp
jno
xor
rcrb
out
mov
call
nop
push
adc
bound
out
jb
add
jo
push
jns
sbb
clc
jne
jmp
pop
call
icebp
jbe
add
jle
xor
adc
loope
adc
lds
mov
clc
xchg
dec
pop
mov
mov
mov
dec
cltd
mov
lds
and
out
add
sub
cltd
scas
test
cwtl
push
je
adc
jp
pop
rcrl
mov
push
dec
dec
ror
push
scas
or
sub
jge
pop
push
pusha
pushf
stos
jl
sbb
jl
mov
call
push
push
stc
mov
mov
shll
sub
push
lahf
or
jbe
push
rcr
loope
pop
into
adc
andl
and
cmp
test
out
cwtl
xchg
push
repnz
cwtl
idivl
das
lods
bound
cmp
push
test
pop
sub
add
mul
leave
stos
std
clc
fsubl
daa
xchg
sbb
call
std
push
adc
jnp
loope
lcall
add
adc
or
pop
pop
dec
sbb
movsb
scas
jae
fisubs
xor
or
subb
test
xor
xchg
or
cmpsb
inc
mov
xor
ret
arpl
jle
and
sbb
and
jecxz
sbb
or
jmp
or
xchg
int
cmp
and
cmp
nop
push
pop
imul
push
mov
pop
rorl
fxch
leave
loopne
jmp
pushf
cld
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
in
pop
sbbb
ret
imul
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
mov
lds
cmc
add
add
std
mov
stos
pop
mov
and
rclb
clc
ficoms
pcmpeqd
rcll
ret
test
in
sub
sub
mov
cmc
insl
fcmovnb
movsb
lods
push
jbe
jbe
xchg
xor
arpl
cmp
shr
shl
sbb
jg
sahf
add
xor
bound
jecxz
imul
add
xchg
sub
adc
xchg
daa
cmp
jae
mov
xor
or
pop
add
fs
push
jns
inc
fdivrl
addr16
loope
add
adc
mov
mov
push
sub
mov
movsl
pop
ds
subb
iret
hlt
test
stos
jbe
hlt
subl
int
lock
dec
scas
loopne
or
mov
add
pop
add
pop
fcomps
clc
push
das
push
dec
xchg
pop
lock
insb
cmp
adc
std
mov
adcb
dec
mov
lock
orb
xchg
xor
lahf
pop
push
lret
and
shll
xor
mov
lea
aaa
addr16
sub
icebp
cmp
lcall
cmp
cwtl
popf
inc
daa
das
das
negb
loopne
out
sbb
rclb
jmp
xor
dec
xchg
into
stos
lret
pop
sub
hlt
cmpsl
adc
and
int3
or
ss
adc
push
mov
jp
pusha
orl
pop
push
xchg
pop
in
cmp
stos
jb
aam
pop
xor
icebp
xchg
pop
outsb
adc
xor
lret
adcb
imul
push
mov
sub
in
push
cmpsl
sti
bound
lock
xlat
xlat
aaa
jnp
ret
dec
cwtl
rcll
test
sub
cltd
arpl
xchg
stc
aam
loop,pt
pop
jae
adc
xchg
mov
sub
aam
shll
or
and
popf
pop
fists
mov
cmp
call
lret
push
mov
push
test
dec
mov
out
adc
jle
dec
data16
adc
pop
pop
popf
pop
fstpt
pop
mov
add
push
push
mov
cmpsl
int
mov
outsl
dec
addb
inc
adc
cmp
loopne
add
mov
xchg
add
adc
pop
dec
lahf
ljmp
mov
dec
hlt
sbb
push
sub
int
jae
sub
pusha
adc
outsb
adc
jae
sbb
cmp
push
jl
outsb
and
aas
jbe
push
xchg
mov
fwait
pop
sub
or
xor
lods
ret
adc
dec
jnp
ret
mov
or
sub
jl
outsb
aam
jne
enter
dec
inc
adc
sub
mov
dec
dec
or
mov
sub
rcrb
mov
addr16
or
cmp
xchg
ficoml
stos
fisubl
shlb
mov
xchg
dec
rcll
repz
repnz
xor
mov
dec
dec
push
push
mov
cltd
call
cmp
xlat
mov
cmp
dec
sbb
or
sbb
add
mov
ret
sbb
rclb
dec
sub
push
mov
mov
mov
xor
dec
pop
nop
sbbl
loopne
xchg
fdivrs
fcmovbe
adc
mov
pop
or
mov
inc
clc
iret
jmp
fcmovnbe
faddl
fcoms
pop
cmp
popa
jge
out
lds
cmp
cld
adc
xchg
test
or
mov
adc
xorb
icebp
lds
xchg
mov
sbbb
shll
in
fcoml
clc
mov
jge
mov
sbb
sbb
notb
cld
jmp
cmpsl
and
cli
dec
sbb
push
push
movsl
xchg
in
dec
jl
out
nop
jmp
pop
int
pop
outsb
mov
xchg
and
mov
sbb
jmp
rcrb
xchg
add
pop
pop
sub
mov
pop
push
pop
push
les
cmp
fistl
addr16
or
cmp
pop
cld
mov
pop
js
xor
push
out
aad
jmp
push
sti
jo
stos
adc
fadds
sbb
sbb
test
jle
insl
push
ljmp
dec
mov
add
xor
sub
cs
cmpsl
cli
add
hlt
fs
mov
not
push
int3
mov
add
add
push
sbbb
fistpl
adc
jecxz
outsb
flds
add
add
add
adc
mov
pusha
hlt
lret
mov
or
outsl
cltd
lahf
aam
and
push
mov
popf
and
movsb
jno
add
cmp
cmp
pop
adc
pop
pop
ja
xchg
mov
push
mov
jmp
dec
mulb
push
push
mov
push
stc
jnp
mov
pop
mov
push
xchg
scas
insb
or
scas
xchg
test
lods
fidivrs
rolb
add
out
in
cmp
ds
mov
fsts
hlt
dec
negl
lea
int
call
mov
sbb
jne
mov
cltd
mov
or
inc
ret
or
imul
pop
mov
sahf
test
push
rol
frstor
cld
inc
cmpsl
push
mov
inc
jns
fistpll
push
cli
fnstenv
popf
jge
ja
and
movsl
lahf
lock
jbe
push
ret
sti
enter
outsb
push
add
pusha
dec
pop
add
push
jo
cmp
jmp
xchg
dec
inc
xor
mov
and
repnz
push
pusha
sub
and
aad
mov
mov
jmp
inc
fistl
sbb
daa
stos
push
ljmp
mov
notl
fldz
mov
xor
out
jp
inc
aas
sub
pop
outsb
inc
out
pop
xor
add
or
pop
adc
aaa
dec
mov
pop
jbe
mov
lahf
xor
pop
movsl
mov
mov
mov
dec
mov
inc
jne
sbbb
push
mov
stos
xchg
mov
inc
in
in
aaa
push
fwait
cmpsb
mov
jmp
std
repz
shlb
sbb
jecxz
jecxz
jns
adcb
in
adc
push
push
ljmp
repnz
push
repnz
call
cmp
out
jne
push
outsb
into
nop
dec
pop
xor
dec
sbb
mov
cli
movsl
mov
faddl
and
xlat
lds
movsb
mov
in
fcmovu
add
dec
cld
cs
adc
ret
fwait
pop
pop
fwait
mov
loop
dec
dec
jno
adc
xor
mov
mov
add
mov
fmuls
lods
loop
add
mov
inc
stc
and
jl
testl
lahf
inc
inc
mov
jmp
movsl
lret
into
jecxz
lret
pop
cmp
mov
lea
xor
call
lock
rcrl
shlb
jmp
sub
inc
sbb
dec
inc
push
and
and
inc
cwtl
jae
jno
pop
or
nop
insb
scas
push
aad
mov
jns
or
hlt
lea
adc
mov
das
pop
loopne
jb
sbb
fwait
lds
pop
sti
and
fdivs
mov
mov
add
call
jmp
movsb
dec
sbb
cwtl
push
cld
lahf
mov
xchg
mov
addr16
popa
cmpsl
outsb
xor
adc
xchg
int
mov
push
inc
leave
and
jo
or
mov
stos
adc
mov
scas
iret
pushf
add
jb
ja
mov
pop
movsl
test
dec
mov
es
outsl
aaa
sub
faddl
mov
push
mov
daa
mov
xchg
shrb
stos
jmp
mov
adc
xchg
or
pop
scas
repnz
mov
push
adc
into
pop
mov
pop
or
add
sub
cmpb
xchg
movsb
cmp
xchg
pop
cmp
lods
inc
mov
cmpsl
jae
jmp
or
pusha
mov
xchg
sbb
push
adc
and
js
push
fwait
inc
push
xchg
mov
dec
bound
daa
loope
sub
sbb
dec
pop
ljmp
data16
into
cs
movsb
sti
jmp
mov
dec
fsubs
push
ret
in
dec
fimull
test
pop
cs
xor
jp
jmp
or
dec
int
call
sbb
mov
shll
pop
pop
daa
repz
std
push
xchg
andb
or
jne
inc
mov
lock
aas
jns
mov
ret
sub
jg
push
inc
cmpsb
cmc
sbb
fwait
adc
int
fistps
ret
jecxz,pn
dec
sbb
pop
add
sbb
add
or
aam
cmp
enter
or
aaa
or
adc
adc
push
xlat
popf
mov
insb
mov
adc
fcomi
lahf
dec
lahf
sbb
jmp
shl
dec
mov
jmp
inc
and
test
stc
or
fadds
xchg
into
aas
bound
pop
jo
fisubrs
cltd
add
add
jne
cmpsb
jg
mov
jae
out
or
arpl
add
cmc
add
add
lret
mov
push
mov
lret
mov
mov
test
sbb
lock
jns
jnp
xchg
insb
push
dec
mov
mov
int3
add
jo
iret
sub
pop
imul
js
loope
xchg
ja
sbb
dec
jg
jecxz
inc
add
jmp
mov
xor
dec
ret
dec
xlat
test
adc
mov
jo
shr
adc
rolb
in
inc
mov
inc
cld
dec
push
testb
mov
add
imul
lds
inc
sub
aas
or
or
jne
and
jge
imul
or
push
jns
stos
or
je
add
and
pop
adc
adc
sbb
mov
dec
insb
popa
lea
add
sbb
add
popa
jecxz
or
test
sarl
les
popa
adc
inc
pop
das
aam
out
inc
outsb
xchg
and
leave
push
and
mov
fldt
mov
sahf
popa
jecxz
adc
mov
popf
sbb
stos
sbbl
lods
ljmp
cmc
aad
daa
incl
or
lods
scas
cs
aas
push
xchg
arpl
sub
sarl
push
push
sbb
mov
in
mov
push
aam
lahf
adc
fucomp
sbb
dec
cwtl
imul
jmp
sbb
sub
jb
mov
mov
xchg
jno
loop
cli
insb
test
jb
dec
or
loopne
nop
xor
scas
repz
cwtl
push
mov
out
xor
int3
das
ja
dec
dec
jb
xlat
mov
cmc
inc
jno
roll
pushf
stos
pop
cmp
fildll
and
adc
repz
sub
gs
loope
pusha
test
mov
xchg
les
cld
movsb
pusha
inc
orl
mov
cmpsb
divl
in
sbb
push
lret
ja
mov
dec
mov
jb
xchg
cmp
xor
add
xchg
and
or
inc
xlat
xlat
std
mov
test
jbe
int3
jns
adc
mov
in
rcrl
and
repnz
int3
into
pop
dec
cmp
inc
or
cmp
outsb
jnp
andb
test
je
popa
mov
or
imul
or
mov
push
mov
adc
insl
lcall
sbb
inc
or
ss
repz
in
into
jl
pop
cltd
or
shrb
mov
rclb
mov
shl
jne
push
xor
push
mov
xor
jp
in
jno
cmc
mov
pop
sbbb
addl
jg
jns
fstpl
pop
mov
aam
jl
xor
xchg
iret
mov
ret
negb
dec
pop
popf
push
gs
cmp
jnp
push
push
dec
das
pop
dec
xorl
movsb
or
jne
repz
mov
shlb
jp
dec
into
outsb
and
orb
xor
bound
repz
cmpxchg
es
lret
les
lret
dec
into
je
test
dec
cli
je
enter
mov
arpl
insl
addr16
cmp
or
mov
mov
push
loope
cmp
mov
call
jbe
mov
addr16
js
into
lds
dec
outsl
lock
mov
loopne
leave
sbb
lock
jo
pop
insb
je,pn
out
and
xchg
sub
push
xor
mov
movsb
add
sub
push
push
pusha
push
adc
call
adc
push
add
mov
pushf
sub
scas
jg
cs
xchg
shl
xchg
cmp
add
leave
mov
pop
xchg
mov
xchg
push
mov
negl
inc
dec
dec
add
jnp
les
dec
loop
fidivl
sub
dec
push
cmp
pop
mov
pop
shlb
xor
test
dec
leave
je
cmp
sub
or
pop
or
cld
mov
and
adc
jg
dec
sahf
mov
lcall
or
sub
out
push
fsubl
insl
jmp
aam
shll
mov
imul
sbb
or
pop
cmp
dec
push
push
ljmp
insl
jae
fnsetpm(287
xchg
mov
icebp
push
bound
shrb
jb
mov
adc
imul
je
and
mov
push
dec
fnstsw
push
fs
xchg
push
adc
les
mov
xchg
fwait
ljmp
cmp
add
add
pminsw
idiv
repz
lret
and
pop
pop
jecxz
add
add
add
sbb
in
xor
adc
or
int
fldcw
test
fs
push
test
lahf
repz
cmp
cli
adc
push
mov
pop
mov
cmp
lret
add
mov
dec
jmp
xchg
ret
pushf
jae
fldt
dec
and
out
pushf
popl
inc
fists
mov
ljmpw
mov
adc
ja
cmp
mov
repnz
es
dec
mov
rcr
mov
cmp
cmovae
jb
inc
test
add
push
inc
out
mov
js
cld
bound
jae
nop
sub
adc
enter
inc
cs
jle
test
out
fadd
dec
push
cmp
scas
shll
lret
je
xchg
loop
call
fucom
push
lods
into
aas
or
xor
movsl
add
push
mov
lds
or
les
stos
inc
iret
mov
arpl
dec
nop
out
call
inc
and
sahf
ja
adc
sub
xchg
mov
xchg
call
cmp
cmp
add
sbb
ja
inc
stos
jbe
std
call
jbe
push
int
xor
mov
lcall
stc
cltd
call
inc
ret
pop
fisubrs
nop
pop
jecxz
mov
out
popa
aad
movsb
cmp
les
stos
push
jp
addr16
jno
in
adc
cwtl
and
aaa
xor
pop
pushf
mulps
bound
dec
mov
arpl
push
dec
push
mov
sbb
adcb
imul
push
xchg
jge
dec
iret
jno
dec
movsl
cmp
xlat
dec
cltd
mov
jmp
outsb
rorb
into
scas
xchg
push
aam
add
jmp
loopne
mov
jge
push
jmp
pop
push
xchg
push
lcall
pusha
gs
mov
je
scas
scas
bnd
cmpb
mov
pushf
mov
repnz
sbb
jns
push
push
xlat
and
mov
mov
int
aam
inc
out
and
jg
rcr
cs
mov
adc
mov
inc
cmp
mov
ret
mov
adc
cmpsb
mov
ftst
pop
push
mov
and
mov
xlat
xchg
pop
fisubl
pop
into
jbe
hlt
daa
jns
inc
in
or
jnp
insb
fldl2e
lock
sbb
ds
ja
fwait
lock
inc
mov
mov
inc
ss
fistpll
sbb
lods
lods
pop
sahf
pushf
push
mov
inc
mov
jns,pt
sub
jge
pushf
xor
xor
or
popl
notl
popf
enter
in
outsb
push
lods
incb
scas
adc
stos
cmp
jg
out
inc
iret
jns
sub
sub
mov
imul
mov
adc
outsb
or
shr
insb
inc
cmc
in
dec
push
dec
mov
imul
pop
out
jmp
and
sub
or
sbb
sbb
push
xchg
dec
mov
in
test
jmp
loopne
sbb
jge
pop
adc
call
adc
cmpsl
inc
mov
pop
sub
aas
or
jecxz
mov
jb
adc
mov
add
xor
arpl
dec
adc
sahf
xchg
scas
jno
rclb
or
cmp
stos
out
rcl
inc
out
test
fwait
mov
xor
xchg
xchg
das
xor
jo
aas
scas
ret
cli
xchg
ret
gs
xchg
scas
add
xchg
test
fwait
pushf
and
jae
jne
mov
ss
and
arpl
loop
fildll
jbe
das
adc
jl
dec
pop
push
test
js
push
adc
mov
add
nop
popa
and
add
and
mov
aam
pop
fiadds
or
test
test
xchg
and
rorl
insl
add
mov
lret
xlat
cmpl
stos
cltd
popf
xchg
arpl
add
testl
adc
out
iret
movsl
dec
out
cmp
inc
xor
push
scas
xchg
icebp
daa
iret
fiadds
decl
fldt
div
out
pop
xlat
and
dec
movsl
adc
pushf
outsl
dec
adc
pop
scas
inc
rep
mov
sub
cmp
mov
add
call
jnp
sarl
xchg
into
ret
add
cmc
add
add
stc
out
jae
fucomi
fs
mov
call
lcall
cmc
lods
mov
pushf
xor
inc
mov
mov
push
pop
in
arpl
popf
addl
adc
outsb
out
sub
or
mov
mov
cltd
jmp
loopne
insb
push
aas
cmp
cmp
push
shl
ret
sbb
jne
icebp
push
push
loop
ss
inc
cmp
xchg
push
jp
test
dec
mov
mov
and
lea
mov
or
jg
movsl
mov
rclb
sbb
push
xchg
xchg
cmp
fstpt
jg
or
mov
sbb
dec
cmc
imul
inc
or
jmp
cltd
jo
les
mov
xchg
jg
mov
iret
mov
xchg
imul
popf
or
mov
mov
andl
push
outsl
jp
jb
rolb
js
ja
in
dec
xor
cmpsb
mov
jp
cld
cmp
or
sbb
inc
dec
adc
mov
scas
pop
xchg
or
test
mov
adc
inc
push
cli
stos
xchg
or
and
hlt
ljmp
pushf
sub
fisubl
jp
add
sub
fwait
cmp
sbb
pushf
pop
in
inc
jnp
sahf
sub
ficomps
add
psubb
rolb
lds
pop
sub
sahf
adc
mov
inc
inc
dec
int
inc
es
pop
lods
xor
xchg
inc
insb
aam
sahf
fdivrp
rcll
jb
mov
push
pop
mov
lahf
or
mov
pop
add
and
test
faddl
ret
or
iret
push
aad
jle
xorl
orb
lret
add
and
push
aam
jnp
cmpsl
unpcklps
das
xor
xchg
stos
jb
cs
mov
xchg
imul
int
jnp
or
loop
out
sbb
pop
aad
dec
stos
adc
andb
push
adc
daa
sub
test
fcomip
rolb
or
jno
es
hlt
enter
sub
pop
jp
clc
mov
inc
sub
lds
repz
pop
jecxz
int3
sbb
push
mov
inc
int
jge
dec
lods
insb
js
test
fcoml
cli
sub
mov
pop
or
sbb
sbb
xor
addb
mov
movsl
stos
cli
xchg
pop
in
xchg
daa
sub
lds
lods
dec
push
lock
sbb
inc
jecxz
aad
inc
mov
xrelease
insb
sub
loop
xchg
lods
jno
sub
xchg
shll
out
clc
xchg
cmp
out
jge
lcall
aad
cmc
sub
stc
ja
aaa
sbb
imul
loopne
cli
popa
scas
pop
rclb
fcoms
in
cmp
sbb
inc
test
dec
aaa
cmp
inc
imul
repz
sbb
jmp
daa
testb
add
fadd
mov
dec
lcall
sub
xlat
jmp
fldl
repz
out
mov
sti
stos
fs
pop
sti
inc
fnstcw
scas
fsubr
inc
xchg
cmpsb
sahf
adc
test
xchg
lods
and
add
daa
push
xchg
xor
and
sub
pmuludq
cwtl
lods
cmp
mov
test
dec
mov
push
pop
sub
xor
das
test
xchg
insl
sub
in
sbb
rclb
mov
cmp
popa
sub
popf
call
jg
adc
pop
vmwrite
fnstcw
jno
nop
mov
call
test
mov
imul
push
int3
adc
incb
roll
outsl
mov
xchg
subl
fldpi
dec
cmp
scas
add
inc
jb
js
jne
mov
sbb
xchg
in
sub
pusha
stc
sub
dec
fidivrl
push
fwait
pop
mov
addr16
cltd
jbe
sub
shll
ljmp
ficompl
inc
pop
jo
movsb
out
xchg
jnp
scas
outsb
mov
mov
xor
out
dec
bnd
xor
lahf
mov
mov
clc
int
loopne
mov
clc
push
stc
das
hlt
cltd
nop
push
mov
xchg
mov
popa
pop
and
lret
test
mov
add
pop
test
adc
mov
inc
in
add
cmc
add
add
pop
or
ret
lock
cs
into
add
ret
icebp
ljmp
cmp
inc
mov
lods
xchg
fiaddl
mov
push
xlat
test
movsb
ret
outsb
jmp
je
and
outsl
dec
jl
imulb
ss
fwait
mov
xlat
and
pop
lods
mov
cli
pop
cmc
mov
xchg
pushf
push
cltd
push
popf
and
sub
push
mov
push
xor
cmpsb
inc
imul
out
and
add
push
fcomp
xchg
mov
sbb
mov
add
mov
jno
fucom
xor
testb
mov
mov
or
xchg
pop
mov
xor
xchg
lcall
lret
and
push
fsubr
add
sbb
lret
ja
mov
nop
mov
sahf
and
adc
mov
add
fidivl
mov
dec
push
xor
shll
cmpsb
jb
ljmp
jl
xchg
jns
jl
inc
hlt
fsubs
ficoml
movb
sti
and
sub
jno
leave
and
dec
lcall
and
jno
inc
hlt
mov
in
mov
ja
stc
xchg
sub
jne
mov
into
aad
lcall
push
mov
dec
sbb
xor
dec
dec
fdivrl
pushl
xor
add
mov
nop
cld
setp
push
andl
sub
xchg
sub
sub
rcr
loope
push
cmc
mov
loope
ficompl
fistpll
cmpsl
loop
ds
mov
inc
jp
cmp
rcl
xchg
ljmp
xchg
rcrl
push
pop
jge
test
daa
out
lcall
pop
and
sbb
dec
sahf
jmp
test
aam
mov
aas
or
mov
paddsw
mov
xchg
cmpsl
jecxz
pop
push
xchg
stc
dec
pop
mov
push
insb
sar
loop
test
cmp
xlat
jns
cmp
or
xchg
xchg
adc
adc
mov
bound
subb
add
cvtps2pi
or
mov
dec
js
dec
lods
xchg
xor
jp
ja
imul
in
pop
jge
enter
bound
int3
addr16
jle
aas
aas
jle
leave
rcrb
xor
out
inc
imul
scas
mov
aam
imul
leave
subb
mov
stc
mov
lods
out
mov
xchg
adc
rcl
insl
movsl
inc
dec
imul
stos
jnp
das
das
lahf
jae
mov
aas
decl
lcall
mov
mov
adc
adc
mov
cmp
xchg
xchg
dec
aam
sbb
clc
xchg
dec
decl
adc
lods
in
outsl
push
mov
xchg
aam
sbb
cmp
andb
mov
jb
sbb
mov
div
loope
out
movsb
enter
jecxz
or
ret
lcall
outsl
out
mov
lods
dec
xchg
and
lds
jg
xrelease
push
cmc
xchg
add
dec
shrd
dec
adc
cmpsl
dec
and
imulb
nop
lea
gs
das
inc
xchg
jle
jnp
loope
aaa
adc
lahf
adc
mov
mov
lcall
or
jbe
out
dec
mov
jg
and
enter
pop
outsb
call
test
rcrl
adc
mov
xchg
popa
sbb
sbb
inc
xor
adc
test
int3
test
ret
icebp
lcall
sar
adc
push
fmuls
xor
out
cmpl
sbb
sbb
movsb
out
push
jne
hlt
mov
fdiv
mov
cmpsl
lret
add
in
xor
mov
stos
inc
ja
js
js
mov
cmp
inc
xchg
stos
mov
inc
push
rcll
pop
push
pusha
cwtl
stos
sbb
mov
fs
roll
mov
fists
push
clc
push
jb
mov
cmp
std
pop
aas
adcb
pop
lea
add
dec
insb
rclb
out
jmp
in
sbb
pop
xor
cwtl
and
stc
movb
movsb
outsl
xchg
mov
inc
pop
mov
or
mov
or
ret
imul
push
add
add
dec
lcall
adc
lret
mov
aaa
repnz
cmc
add
add
jns,pn
add
cmp
inc
shrb
jecxz
xlat
dec
cltd
jl
pop
adc
nopl
xlat
cld
push
mov
xchg
adc
jnp
dec
lahf
cwtl
jo
in
pop
jg
imul
cmp
enter
stos
xchg
and
inc
dec
push
pusha
jmp
leave
xchg
out
mov
sbb
icebp
scas
jbe
and
sti
add
fisttpl
push
push
ja
jecxz
and
push
mov
pushf
sub
lods
shr
mov
inc
out
and
jnp
decb
imul
sbb
sbb
out
push
pop
push
cwtl
lahf
outsl
adc
push
adc
lods
out
mov
aas
push
push
int
mov
out
jle
cld
aaa
test
fs
sbbb
and
push
push
xchg
mov
pop
push
fidivrs
sub
repz
gs
inc
dec
cld
push
arpl
cld
and
sub
dec
test
jg
loopne
int
dec
sub
popa
jb
and
popa
push
sub
loope
rol
add
ror
and
stos
jae
cmp
or
loop
mov
in
cmovno
aam
add
enter
mov
out
inc
mov
in
mov
push
xor
rorb
mov
dec
xor
shll
out
push
jp
movsl
xor
or
cltd
adc
inc
mov
inc
daa
out
jns
daa
push
xchg
pop
dec
iret
sbb
mov
xchg
xchg
imul
movsl
pop
rclb
addr16
inc
outsl
push
add
pushf
push
xchg
cli
cli
and
aad
inc
push
add
sub
push
jle
adc
xlat
dec
mov
mov
mov
add
xchg
into
push
cmp
mov
lock
xchg
les
push
xchg
jl
or
sub
add
push
imul
xor
loop
shlb
outsb
jg
stos
xor
mov
sbb
loop
jno
pop
pop
push
fmull
adc
mov
xchg
test
fnstcw
fdivrs
lret
arpl
mov
loop
orb
inc
adc
enter
add
pop
ret
andl
enter
xchg
pop
int3
call
mov
mov
mov
neg
mov
push
cld
sbbl
ret
jge
mov
mov
mov
sahf
mov
add
cmp
jbe
jno
loop
jecxz
jp
and
test
inc
inc
ffree
sub
xchg
stos
push
fsubs
mov
dec
std
pop
pop
scas
xor
cmpsl
pop
or
int
cmp
and
aaa
loop
mov
and
add
xor
cli
inc
push
xchg
jae
sarl
fistl
push
add
fwait
mov
or
stc
dec
sub
jo
sarl
dec
fldl
mov
mov
inc
pop
xor
and
adc
add
xor
pop
push
int
lret
mov
and
or
xchg
mulb
sbb
jl
add
in
add
mov
inc
js
mov
cmp
push
lods
mov
and
add
ret
cmc
sub
mov
arpl
inc
mov
scas
test
inc
push
fucomp
mov
ljmp
xchg
jno
jge
lret
sbb
and
dec
arpl
in
mov
fsubrl
aas
xchg
pop
pushf
out
cmp
or
push
int3
popf
dec
jno
or
rorb
cwtl
dec
fcoml
dec
gs
dec
cmp
pop
inc
cmc
sbb
push
lods
test
mov
dec
or
stc
xchg
mov
adc
ljmp
daa
daa
in
fistl
adc
lcall
ja
sub
nop
jg
jae
orl
cmp
mov
xchg
imul
inc
push
mov
xor
cmpsl
xchg
xchg
je
push
push
hlt
pop
mov
inc
dec
sbb
xchg
outsb
xchg
ss
lock
inc
fdivrs
imull
dec
pop
sub
and
cwtl
push
movsb
test
xchg
and
mull
inc
add
inc
pop
scas
mov
outsb
xchg
xchg
call
std
jp
and
out
notb
cld
dec
push
es
mov
loope
outsl
xor
stos
sub
pushf
shll
popa
sbb
add
add
mov
jno
cmc
divl
mov
ljmp
add
pop
xchg
js
push
mov
out
mov
jg
ficoml
add
pop
enter
mov
test
add
ljmp
and
adc
fidivrs
add
dec
cli
cmp
dec
mov
pop
ja
imul
fs
sbb
jmp
and
inc
sbb
sub
add
mov
xor
aaa
gs
rclb
add
inc
jmp
and
les
sahf
es
cmp
testb
pop
out
push
mov
outsb
adc
pop
or
scas
aam
stc
dec
lcall
das
ret
mov
jns
jns
cmp
fiadds
dec
jnp
mov
mov
inc
push
dec
mov
adcl
gs
test
jmp
cli
mov
mov
xlat
xchg
int3
xchg
lcall
pop
jg
mov
imul
push
sbb
pop
mov
fbld
mov
addr16
out
adc
pop
jecxz
xor
lcall
sbb
lret
nop
fsts
cmp
mov
prefetch
cli
push
outsl
sahf
popa
sbb
sbb
and
ljmp
mov
int3
lods
jmp
push
ret
repnz
push
cwtl
movsl
adc
int
dec
pop
xor
into
sbb
mov
lret
jl
in
into
and
in
push
mov
sub
lods
cli
mov
test
test
jle
loopne
sbb
pop
lahf
add
addr16
shl
jae
aaa
ljmp
inc
or
scas
je
push
cltd
das
push
cmc
inc
pop
or
gs
stc
cmpsb
orb
fxch
ljmp
loope
and
and
movsb
fstps
mov
je
inc
mov
push
mov
mov
ret
rorl
push
cmp
sub
dec
lods
cwtl
add
add
ret
jne
test
pushf
dec
mov
jg
jl
in
and
cmp
push
pop
dec
clc
and
xlat
mov
pusha
add
aam
sbb
mov
test
xor
sub
adc
cmp
imul
aam
push
fwait
imul
enterw
into
lret
push
mov
loope
cltd
pop
sub
fistpl
pop
outsb
lret
in
in
ret
lods
js
test
test
lods
popf
mov
pop
push
jns
push
mov
mov
shl
repz
repz
push
adc
lods
loope
cltd
aaa
cmp
xchg
int3
lods
in
jp
pop
imul
xlat
xor
inc
int3
xchg
pop
popa
into
jl
mov
ss
adcb
xchg
push
xchg
adc
cmp
inc
insl
lahf
cmp
xchg
repz
rcll
jmp
sbb
int3
or
lahf
out
jecxz
movsb
lods
fs
mov
sbb
xchg
mov
adc
mov
hlt
aam
fidivrs
shl
adc
xchg
or
mov
sbb
lds
nop
add
sub
stos
iret
ret
add
pop
push
jno
push
mov
cmp
pop
xor
xchg
dec
dec
xlat
nop
aam
lds
out
cmp
stc
ret
inc
shll
add
dec
outsb
aad
jl
mov
dec
or
push
jne
pop
push
cwtl
mov
popf
pushf
lret
das
scas
int
jae
pop
and
mov
xchg
and
arpl
xchg
or
mov
sub
cmpsb
mov
les
jo,pt
push
xchg
incl
push
jp
cwtl
xor
mov
notl
mov
cmp
test
fs
adc
xadd
test
sbb
pop
shlb
mov
and
popf
lods
shlb
inc
cld
xor
aas
lods
movsb
sbb
lcall
in
imul
xchg
pop
scas
mov
mov
jae
popf
addl
dec
imul
and
jmp
bound
push
cmp
xor
je
jb
loopne
mov
mov
sti
inc
mov
scas
jle
jne
insb
pop
jmp
loop
jae
push
add
sbb
adc
mov
test
cld
loop
idivb
add
ret
inc
fisttps
lahf
int
push
nop
jne
and
add
cmc
add
add
xorb
roll
dec
xchg
orl
mov
or
xor
inc
mov
mov
jnp
aas
imul
stc
sbb
fcompl
clc
inc
loope
inc
addr16
inc
or
ds
cli
pop
sub
xchg
xchg
adc
add
push
shlb
fwait
cmp
stc
push
xor
or
push
dec
sbb
add
sbb
jp
icebp
xor
loope
xchg
roll
mov
mov
pop
add
sub
cld
nop
ljmp
rolb
adc
push
xchg
inc
add
iret
idivb
ret
sbb
mov
hlt
out
mov
mov
stos
cli
in
andb
push
adc
cmc
int
xchg
jge
mov
push
das
lahf
je
or
outsl
sarl
pop
pop
mov
in
jmp
add
jmp
mov
daa
xor
stc
jg
sub
mov
lahf
mov
xlat
ret
jb
clc
notl
mov
int3
jne
xor
adc
sub
mov
pop
aas
dec
fadds
ret
repz
daa
test
and
cmp
dec
les
fisttpll
test
adc
dec
add
movsb
push
int3
mov
mov
std
cwtl
jae
mov
dec
lea
leave
mov
push
out
cmp
je
xchg
in
push
sarb
enter
out
push
or
inc
sti
repz
cli
sub
mov
jge
gs
push
sub
mov
dec
cwtl
in
pushf
lahf
out
or
out
js
das
and
movsl
cltd
sbb
stos
aas
jne
sub
aad
fstpl
testl
inc
add
add
ret
cwtl
sub
arpl
jne
es
jmp
push
dec
mov
jp
xor
cwtl
clc
dec
imul
sbb
in
cmpsb
cmp
or
or
mov
and
js
push
orl
fwait
xlat
mov
jns
xchg
outsl
jne
pop
inc
mov
mov
inc
fcompl
into
inc
dec
adc
mov
pop
jns
out
cmpsl
sbb
out
mov
icebp
rclb
loopne
or
sub
jae
xor
mov
pop
ror
decb
pop
mov
cltd
mov
fwait
clc
insl
inc
scas
xchg
enter
push
not
xchg
or
cwtl
fcmovbe
push
stos
mov
dec
stc
scas
xor
xchg
jno
cmp
push
in
addl
adc
inc
mov
hlt
xorl
repz
sub
jno
push
jbe
xor
das
fldt
clc
sbb
imul
pop
shlb
je
dec
xor
push
lcall
jge
sar
add
adc
mov
jnp
ficoms
sti
loop
add
mov
pop
fisubs
sti
xor
lcall
out
and
xor
mov
push
outsl
cmp
call
pop
ret
sub
ret
cs
sub
add
xchg
cmp
mov
loop
mov
test
pop
les
mov
mov
fiaddl
ss
hlt
push
lock
push
xor
into
push
out
into
push
pop
mov
aad
hlt
movsb
shrl
lds
adcl
add
fs
and
cmp
sarl
xor
sar
popa
in
ds
imul
add
icebp
je
cwtl
enter
push
cs
xor
fwait
jg
cld
leave
and
xchg
sub
mov
inc
pop
push
xlat
ds
ljmp
xchg
out
insb
jmp
insl
xchg
loope
out
shll
push
xorl
icebp
mov
or
push
push
inc
pusha
sub
pop
add
cmpsb
int
mov
mov
outsl
add
js
aad
popa
lcall
xor
cli
sahf
xor
mov
pop
xchg
xor
leave
enter
mov
xchg
add
sbb
jmp
push
sub
sub
cmc
mov
das
fnstsw
addr16
jmp
jne
popf
push
xorb
cwtl
neg
outsb
sbb
push
daa
dec
fisubl
adc
push
sbb
lds
jbe
into
repz
mov
hlt
cltd
call
jmp
add
out
jge
add
add
call
aas
popa
adc
adcl
add
cmc
add
add
dec
out
ds
mov
push
xor
dec
adc
sub
loop
loop
shll
popf
mov
imul
data16
jp
jo
pop
lea
dec
fadds
jbe
repnz
xchg
sub
cmp
pop
jnp
and
xchg
mov
xchg
sti
or
add
adc
daa
sub
cmc
testb
jb
shrl
dec
fsubrl
imulb
cmp
mov
fnstsw
xor
jp
add
dec
ljmp
rol
cmp
push
dec
mov
fwait
cmc
lods
stos
pop
or
out
cld
sbb
mov
insb
mov
les
inc
fldl
test
push
stos
dec
fstpl
or
or
adc
xor
pop
stos
push
loop
xchg
lock
push
lods
daa
mov
jnp
lock
sbb
and
lods
or
icebp
sub
xchg
mov
cmpsl
push
aam
mov
adc
adc
shrb
add
adc
jb
out
mov
xor
dec
scas
add
les
push
pushf
mov
movsl
call
and
push
jno
int
xlat
jae
icebp
lods
pop
mov
notl
ret
sti
adc
repnz
dec
popf
inc
xchg
pop
pop
iret
or
add
outsl
sub
das
aas
in
mov
jg
adc
add
cld
in
data16
adc
lcall
mov
sbbl
in
stc
ret
sbb
mov
xchg
mov
fwait
aad
sahf
popl
mov
jns
dec
mov
aam
jo
inc
and
cmp
jae
cld
sub
aaa
addr16
in
lcall
dec
enter
sub
aam
js
int
mov
and
fsubrs
int3
push
mov
ret
pop
xchg
inc
dec
cs
fxch
outsb
push
jnp
fisubrl
push
imul
dec
rcrl
rol
push
repz
fdivs
pop
mov
xchg
adc
fs
dec
jp
and
hlt
jg
xchg
fs
xchg
jl
jns
dec
movsb
andl
cld
xchg
cmp
les
rcr
cltd
frstor
mov
sbb
mov
inc
loope
pusha
pushf
mov
mov
mov
push
sarl
test
cmp
out
cltd
pop
mov
xchg
xor
cld
iret
sub
daa
popl
mov
mov
xor
push
or
jecxz
mov
es
xorb
mov
test
stos
fisubrs
iret
ja
data16
push
inc
dec
mov
mov
push
adcl
test
cmp
sbb
das
sar
in
inc
leave
jns
xchg
popf
outsl
fisubrs
inc
cwtl
aaa
dec
xor
fdivrl
jne
add
test
adc
push
call
dec
hlt
pop
shr
loope
mov
stos
bound
mov
int
mov
stc
insb
jle
dec
cmc
mov
mov
dec
mov
hlt
dec
ds
mov
stos
mov
in
imul
pop
aas
bound
dec
lret
push
shrl
ja
mov
test
out
imul
lods
lcall
jle
cli
push
mov
push
inc
mov
divl
test
fistpl
or
sbb
in
xor
rolb
pop
sub
push
adc
jg
cmp
pop
icebp
xchg
mov
mov
add
stos
and
push
sahf
daa
add
arpl
daa
push
leave
xor
in
sbb
xchg
in
push
adc
cmc
mov
cwtl
incb
add
xchg
xchg
leave
sub
adc
jg
xchg
mov
fs
pop
sbb
mov
daa
cld
mov
xchg
inc
daa
mov
shll
jo
int
jg
add
xlat
add
jae
sahf
cmp
test
mov
rcrb
or
leave
clc
and
xor
jb
repnz
adc
dec
je
das
sbbl
add
test
data16
xchg
push
mov
imul
insl
xor
and
out
add
or
push
xor
cmp
inc
mov
pop
cmp
adc
mov
movb
add
add
sahf
insl
not
neg
mov
int
inc
fsubrp
or
add
cmc
add
add
adc
enter
dec
cmp
push
lds
cmp
mov
ror
dec
fwait
sbb
jl
jmp
movsb
pslld
inc
aaa
add
sbb
add
and
mov
jo
cmp
xor
dec
xchg
fstps
popf
ret
sbb
pop
imul
movsb
cmp
push
push
ds
bound
movsb
shr
rcl
adc
pop
dec
push
add
mov
lods
in
sbb
adc
inc
loope
mov
mov
stos
push
clc
hlt
ljmp
inc
or
cwtl
shlb
icebp
leave
mov
cwtl
push
xchg
addb
scas
push
cmp
repz
mov
sbb
sub
sahf
or
add
pop
and
mov
test
sbb
cs
ror
jge
mov
and
push
inc
or
push
jb
or
loope
xor
sysret
lahf
sub
and
lret
jp
ss
clc
inc
jns
ret
add
jg
jmp
mov
xor
sbb
mov
dec
andb
in
add
xchg
pop
adc
adc
in
add
loop
jecxz
pop
or
sbb
icebp
pop
xor
and
mov
roll
lods
dec
mov
jmp
sub
sub
push
mov
insb
sbb
sbb
xor
fistpl
aam
cs
stos
fs
js
inc
loope
pop
in
push
cli
jge
mov
pop
stc
aam
repz
push
dec
mov
ljmp
fcomps
jbe
iret
xlat
ss
adc
mov
xchg
sub
xlat
nop
mov
decl
sub
int
js
xor
mov
cli
sbb
xchg
test
js
andl
test
jp
adc
daa
loope
pop
std
fcmovb
cmpsb
scas
inc
repz
movsb
sub
int3
scas
andl
imul
push
xchg
enter
ret
add
cwtl
test
scas
xchg
repz
popf
mov
pop
fisubrl
cld
jb
mov
and
pop
notb
lahf
call
rcrb
lahf
xchg
int
enter
mov
fmuls
sub
pop
pop
pop
enter
ljmp
push
inc
rep
push
stos
mov
pop
add
and
std
pop
pop
xlat
inc
mov
mov
pop
dec
outsl
push
pop
test
cli
mov
std
std
xchg
rclb
mulb
xchg
mov
sub
and
jge
mov
xchg
xor
jmp
dec
loope
add
cmp
jmp
cmp
xchg
lcall
cmp
cltd
and
sahf
iret
xchg
sbb
adc
das
mov
cmpsb
ljmp
hlt
cld
add
fsubrs
xor
scas
int
jg
js
pop
daa
sub
lock
add
mov
jg
subb
cmp
or
inc
lcall
cmc
or
push
xor
into
add
pop
mov
das
push
dec
and
mov
adc
mov
stc
xor
or
add
aas
sti
mov
rcr
mov
or
out
mov
add
cwtl
pop
pop
lcall
imul
mov
xor
add
cmp
xchg
cmp
adc
and
sti
dec
testl
lds
cmpsl
sahf
add
daa
test
test
or
ljmp
fwait
test
popa
stc
popf
push
fs
pcmpeqd
cmp
adc
out
imul
enter
push
shlb
cmp
dec
inc
pop
jge
unpcklps
movl
sub
xlat
mov
in
inc
lock
push
push
loopne
mov
inc
in
push
dec
ds
frstor
add
pextrw
imul
fwait
or
xchg
ja
xchg
mov
mov
mov
mov
in
pop
xchg
loope
mov
push
adc
mov
ror
imul
sub
sbbl
cltd
cmp
or
add
sahf
cwtl
popa
xchg
outsb
dec
outsb
add
inc
xor
add
adc
popf
andb
sbb
dec
imul
inc
mov
jl
movsl
out
xor
push
sbb
mov
hlt
popf
daa
sbb
dec
cmp
push
cltd
push
aad
push
lock
mov
int3
inc
fwait
adc
add
add
std
mov
push
jg
mov
add
add
cmc
add
add
add
add
inc
sbb
movsl
xor
xlat
jmp
stos
jmp
or
add
lahf
mov
les
mov
dec
jl
push
ror
sbb
jge
lret
or
pop
aad
test
call
lahf
add
bound
mov
add
sub
xor
sahf
xor
adc
sub
das
icebp
fyl2xp1
aas
scas
add
call
out
mov
pop
addr16
rclb
xor
push
call
push
adc
ja
xor
sub
loopne
mov
sbb
push
sbb
mov
iret
sbb
dec
and
xor
mov
arpl
scas
fwait
push
xchg
aas
mov
xor
push
push
popa
xchg
pop
pop
mov
mov
out
stc
sbb
add
rorl
add
cmp
leave
or
pop
data16
xchg
pop
mov
ds
pop
pop
scas
ss
lods
aam
movsl
mov
test
mov
outsb
popa
xchg
insb
mov
test
push
stc
call
fdivrl
add
insb
inc
outsb
inc
repnz
clc
sbb
pop
push
pop
mov
outsl
cmp
jl
test
rcrb
je
shlb
insb
push
lock
adc
pop
and
push
aas
out
adc
out
sbb
pop
cwtl
hlt
rcrb
xor
out
popa
mov
int3
xchg
dec
mov
pop
call
imul
push
imul
jo
adc
out
scas
mov
push
cmp
cs
push
hlt
sub
sbb
les
or
pop
mov
mov
cmp
sbb
arpl
movsl
ret
sahf
sbb
mov
or
jnp
arpl
das
xor
mov
pop
xchg
pop
adc
fwait
pop
sarl
mov
std
pop
int3
iret
inc
inc
add
mov
insl
add
pop
int
lea
lds
add
mov
fwait
test
dec
imul
leave
fs
cli
push
mov
sub
mov
jb
or
push
xchg
adc
mov
lds
ficoml
in
cs
adc
test
arpl
scas
rol
cmpsl
cmp
sarb
psraw
jge
mov
sub
jmp
ret
cmp
pop
or
filds
pushf
mov
cmp
dec
pop
ja
inc
xchg
or
enter
mov
stc
test
ret
add
bound
dec
into
xchg
push
xchg
xor
nop
jb
push
dec
rolb
repnz
inc
es
outsl
cmc
and
mov
xor
hlt
pop
xor
cmp
or
lret
mov
push
dec
pusha
mov
out
sub
dec
mov
add
inc
imul
cmc
fcom
pop
jns
xor
popa
inc
rorb
js
stos
aam
and
or
sbb
cmp
push
pop
in
sbbl
divl
inc
pop
inc
lcall
lock
push
push
fiadds
inc
lds
xchg
lea
daa
lock
out
xchg
mov
xchg
pop
inc
ret
fsubr
xchg
sub
xchg
mov
jae
addr16
or
and
push
mov
popf
xchg
xor
movsb
data16
mov
push
xor
ret
xchg
add
scas
lret
rcrl
jae
and
int3
push
loopne
dec
fildll
fldl
fwait
andb
jle
xchg
int3
loop
ljmp
sbb
mov
nop
rclb
lock
sub
mov
fsubrs
imul
xchg
cmp
cmp
push
movsb
mov
mov
dec
xchg
ret
es
dec
aad
loope
fdiv
push
mull
pop
xor
pop
inc
fists
dec
int
mov
adcb
mov
push
das
in
cltd
sub
iret
aad
insl
push
mov
xchg
mov
jecxz
aas
cltd
xor
cwtl
push
enter
icebp
cwtl
inc
push
mov
xchg
push
and
fisubrs
dec
xor
and
nop
pop
out
scas
xor
scas
mov
test
daa
xchg
dec
or
mov
test
dec
pushf
icebp
mov
sub
loopne
mov
cs
fimull
sub
or
cmp
mov
js
and
insb
mov
leave
rcrb
jno
out
xlat
fs
fwait
scas
enter
mov
add
jb
mov
loope
lret
cld
cld
ret
pop
or
pop
xor
xlat
std
addr16
jl
push
adc
pop
cltd
fcompl
or
add
inc
push
lret
in
out
dec
add
movb
add
add
hlt
leave
inc
aad
es
lea
rcl
lock
push
rorl
mov
je
lcall
pop
es
mov
dec
loop
lods
push
xchg
jmp
adc
data16
xor
adc
pop
jne
xchg
mov
sti
sbb
adc
pop
pop
icebp
or
mov
movsb
mov
push
prefetchw
or
in
mov
in
out
pushf
inc
inc
cmp
lcall
or
sub
push
frstor
lea
lea
add
push
jge
stos
pop
dec
movsl
sbb
loopne
imul
ja
outsl
xchg
andl
out
xchg
mov
shl
lcall
mov
out
rclb
xchg
push
insb
jle
test
in
ja
cltd
sub
xchg
in
dec
push
pop
inc
push
ret
sahf
es
sbbl
mov
fildll
push
cmp
lods
sbb
aad
dec
or
stc
jb
ss
xor
and
andb
in
mov
jg
push
mov
mov
ljmp
pop
add
jg
sbb
sub
imul
jb
fbld
or
cmpsl
stc
inc
push
mov
sub
data16
outsb
sbb
jne
cwtl
aaa
addr16
pop
mov
daa
test
sbb
cmp
out
pop
jb
vcvtsd2ss
and
imul
or
jg
xor
fs
mov
inc
call
fmuls
dec
sub
into
vmovsd
adc
mov
xor
lods
lea
cwtl
inc
push
pushf
outsl
repz
lret
data16
mov
enter
mov
jns
lds
insb
dec
push
adc
popf
xor
sbb
fs
and
cmp
andl
loopne
movsl
fwait
test
dec
jbe
jmp
in
cmpsl
adc
popa
loopne
inc
in
xchg
mov
jle
mov
dec
aam
mov
jmp
sub
pop
dec
das
negl
lock
jl
stos
push
cli
out
rcll
cmp
fistps
sbb
jp
mov
out
rcrb
nop
ret
adc
push
test
cs
lcall
jbe
call
fxam
mov
es
pop
outsl
lods
outsl
data16
push
push
loop
fisttpl
or
xchg
add
push
subl
lahf
test
rcr
cltd
hlt
test
dec
int3
mov
cmpsb
inc
rolb
frstor
sub
mov
imul
sbb
repz
adc
loopne
int3
xor
cltd
and
mov
sbb
push
in
jbe
jmp
xor
xchg
push
insb
or
jb
clc
mov
cli
les
cmpsb
xchg
fsubrs
mov
stos
push
xchg
jnp
stos
and
fwait
leave
fcoml
jno
jl
enter
push
add
js
sub
lahf
fistl
ja
fmul
movsl
sub
pop
bound
andb
mov
xlat
lret
fldt
shlb
jge
lcall
sub
pusha
cmpsl
push
rcrl
pushf
into
js
test
mov
cli
jae
inc
mov
sbb
pop
pop
inc
subb
imul
cmp
les
cwtl
and
in
nop
dec
repnz
xchg
addl
ret
and
inc
test
insb
mov
cmp
in
xchg
mov
out
movsb
add
in
icebp
push
je
sbb
hlt
fwait
mov
stos
push
loopne
js
sbb
add
adc
call
stos
cmp
test
iret
jae
mov
adc
or
adc
mov
decb
inc
dec
les
inc
cld
xchg
sbb
push
add
inc
out
or
jle
clc
fiadds
icebp
popa
mov
into
lods
xchg
out
cltd
adc
pop
or
push
inc
pop
std
cmp
je
scas
sub
push
ret
mov
jae
or
scas
mov
jge
test
dec
jg
push
or
inc
and
xchg
inc
jecxz
es
test
dec
icebp
push
dec
mov
icebp
xlat
rclb
test
mov
movb
daa
cli
jg
dec
sbb
push
aam
mov
adc
aad
call
push
mov
fdivrl
pop
ljmp
push
filds
cmpsb
bound
sahf
xor
lods
cmp
add
push
mov
stos
add
cmp
cmpl
xlat
push
sbb
sbb
icebp
dec
hlt
int3
push
add
je
std
mov
rcrb
pop
ljmp
add
lods
adc
push
sti
stos
movsl
and
pop
aas
xchg
enter
cmp
adc
mov
mov
lahf
mov
movsb
xchg
cmp
dec
int3
inc
xchg
test
lods
roll
pusha
mov
fidivrs
test
fdivl
sub
mov
push
sbb
sarb
popa
insb
sbb
adc
outsb
mov
scas
lock
ficoml
pop
and
stos
xchg
mov
jp
adc
in
sub
iret
dec
popf
dec
xchg
xor
mov
inc
shll
push
psubd
sub
lcall
test
insl
xor
int3
insl
orl
les
call
cwtl
adc
repz
cld
cmp
andl
imul
pop
adc
fcmovnu
mov
psrld
test
jbe
mov
xchg
cmpsl
dec
inc
xor
fiaddl
mov
mov
mov
lods
xchg
and
ret
xor
push
adcb
je
pop
fdivrl
pop
xchg
mov
gs
fldenv
adc
or
jl
cwtl
push
loopne
loopne
pop
sub
cmp
into
stos
outsb
dec
jmp
adc
leave
test
rcll
hlt
push
lcall
sahf
std
lock
adc
imul
lahf
gs
jle
push
xor
and
mov
inc
ret
cmp
stc
add
es
xchg
mov
fdiv
outsl
fsubrl
adc
jl
cmp
mov
scas
mov
add
xchg
mov
cli
xchg
pop
lret
ret
mov
mov
sahf
nop
inc
sbb
stc
push
addr16
sub
dec
fwait
insl
popf
jge
mov
push
je
adc
dec
mov
stos
xor
adc
clc
dec
in
mov
pop
std
cmp
jmp
push
adc
adc
shrl
add
add
inc
jle
or
xchg
dec
sub
pushf
inc
jle
mov
jno
mov
pop
add
outsb
jle
pop
cmp
sbb
scas
push
push
add
pop
push
les
add
repnz
cwtl
ja
in
aas
aam
in
jmp
repnz
add
loopne
std
test
or
jbe
hlt
add
nop
std
jmp
adc
cmp
lret
in
repnz
popf
inc
ja
add
bnd
xor
push
push
ret
arpl
jns
jne
das
rclb
sbb
adc
pop
xor
icebp
sbb
arpl
and
decl
cmp
jae
mov
clc
cmp
inc
imul
mov
sbb
stos
test
xchg
dec
pop
lret
iret
xor
andl
or
pop
into
jns
lea
and
rolb
outsl
jmp
lods
in
pushf
repnz
outsb
lahf
pop
daa
icebp
jb
push
outsl
and
pop
dec
push
jg
inc
mov
push
xor
idiv
jl
inc
loopne
mov
pop
add
jno
fimuls
and
add
pop
or
fwait
notb
mov
in
mov
out
mov
xchg
das
fldt
sub
movsl
cmpb
aaa
mov
or
cltd
cltd
inc
loopne
push
cmp
mov
mov
cld
outsl
loope
jno
call
push
or
or
mov
clc
dec
repz
mov
je
xchg
xchg
cmp
dec
mov
sahf
stos
add
mov
push
mov
sbb
addb
xor
or
cmpsl
faddp
or
mov
cltd
ds
push
mov
inc
dec
sbb
test
shll
lods
dec
stos
adcb
jo
pushf
or
loope
gs
insb
jo
fdecstp
in
fwait
popf
cmp
int3
sbbb
add
add
lahf
fisubs
adc
imul
push
xchg
fwait
cmp
xchg
ror
aaa
lcall
test
jno
sbb
clc
dec
xchg
mov
decb
adc
or
clc
aas
jne
dec
les
mov
shrl
nop
inc
lock
sub
mov
push
jno
lret
lahf
dec
inc
int3
jnp
fdivrs
push
lret
aam
inc
sbb
fildll
fs
xchg
and
enter
fwait
es
stos
cmpl
sub
in
jmp
jbe
lock
mov
rep
or
add
stos
mov
and
push
xchg
stos
mov
sahf
pop
push
push
adc
add
mov
fs
lods
in
or
popf
rcr
sbb
add
add
add
add
push
jl
incb
mov
nopl
mov
add
cmpsl
test
xor
inc
jo
dec
mov
mov
dec
insb
lea
fsubrs
xor
jno
out
ljmp
mov
pop
hlt
mov
mov
aam
movsl
xchg
sar
pop
stc
sbb
fiadds
cmp
sysenter
push
add
movl
and
adc
sbb
cli
shll
pop
call
and
adc
cmpsb
nop
or
dec
enter
int3
pop
inc
push
cli
pop
test
xor
es
dec
and
imul
bound
dec
pop
xchg
ds
or
ds
notb
roll
into
pop
inc
xchg
jbe
out
and
in
add
dec
xor
test
test
dec
insb
ret
or
mov
push
inc
cwtl
push
cmp
or
aad
fwait
out
sub
scas
stos
in
xchg
push
pop
arpl
lods
dec
xchg
addr16
jns
hlt
adcl
fldlg2
xlat
dec
insb
sub
sub
out
pusha
xor
inc
mov
inc
and
xor
add
or
or
push
push
loopne
test
and
jmp
js
hlt
clc
icebp
stos
xor
xchg
insl
stc
js
repnz
and
mov
sub
daa
dec
repnz
call
xchg
xlat
mov
dec
sbb
ljmp
xchg
xchg
add
push
jb
jno
mov
pop
out
pop
sti
mov
xlat
xchg
xor
in
cmp
and
repnz
fs
das
push
adc
cmp
rclb
adc
mov
jmp
or
or
dec
xor
lahf
mov
adc
cli
out
cld
sbb
xchg
idiv
cs
stos
inc
push
aad
cmpsb
cs
jns
mov
cmpb
out
cmp
loope
mov
cwtl
js
loopne
sub
or
out
fdivrp
inc
xchg
mov
sbb
test
xchg
in
or
mov
inc
cmp
ret
leave
mov
jl
cmp
lods
lock
iret
addb
mov
ja
xchg
pop
mov
lds
mov
push
popf
mov
mov
imul
mov
push
test
cmp
aam
dec
inc
lea
sahf
jno
mov
test
and
sub
sub
movsb
mov
pop
iret
cmp
lds
es
fistpll
imul
fcompl
addr16
in
in
mov
shrb
rcrb
mov
jmp
test
xchg
out
add
adc
and
test
popf
icebp
jecxz
data16
xor
stos
inc
cmp
notb
insb
test
xchg
jmp
xor
popa
hlt
notl
mov
cltd
mov
sbb
ss
subb
jecxz
add
jnp
xchg
in
mov
scas
xor
movsl
fisubl
subl
ljmp
shll
lock
xchg
dec
mull
push
or
inc
iret
ds
mov
das
jbe
pop
adc
push
and
cltd
and
inc
outsl
xlat
mov
repnz
aad
imul
adc
je
sahf
xor
inc
adc
std
cltd
fimull
enter
pop
ja
je
andb
xchg
dec
dec
mov
mov
adc
movsb
sub
rcl
and
dec
add
mov
scas
push
xor
lods
enter
test
test
das
pop
adc
mov
push
js
mov
adc
dec
or
popa
ljmp
sti
mov
pop
push
push
cmp
dec
xchg
mov
shr
fdivrl
sub
jl
loop
mov
mov
scas
pop
sbb
cwtl
call
xchg
cmpsl
dec
loope
sbb
ret
or
mov
push
cmpsb
xchg
aaa
mov
xchg
idivb
shl
pop
ds
jb
lret
push
pop
and
mov
int
mov
jmp
dec
xchg
dec
jmp
push
test
inc
or
inc
imul
dec
pop
pop
xchg
xor
inc
sub
xchg
xchg
ja
lcall
scas
sub
call
push
and
cmp
js
cmp
scas
add
sbb
sub
mov
add
sbb
add
lods
test
gs
inc
arpl
push
add
cmc
add
add
fmul
fdivrs
stos
hlt
imul
and
sbbb
mov
mov
pop
sbb
out
iret
push
pop
in
jle
mov
leave
add
aaa
rclb
add
in
add
xor
push
test
mov
pop
int3
fildl
jae
push
mov
insb
add
xor
dec
sbb
xchg
push
jmp
mov
cmp
scas
cmp
cmp
adc
push
stc
add
loope
add
mov
mov
test
xchg
call
aaa
jg
xor
push
aas
add
xchg
adc
inc
imul
fstl
adc
nop
call
inc
xchg
sbb
out
jo
xor
adc
bound
aad
jmp
mov
cmp
int
int3
inc
in
into
push
lea
aad
mov
loopne
pop
inc
rolb
mov
clc
aas
movsl
xchg
jnp
ss
jne
xchg
xor
sub
inc
hlt
xor
enter
fidivrs
loope
jecxz
jnp
js
imul
addr16
sbb
sbbl
stos
outsb
ja
stos
sbb
mov
sub
icebp
cmp
push
adc
or
mov
out
pop
test
stos
hlt
test
jno
rorb
lret
ret
clc
ret
in
movsb
or
inc
aam
je
and
std
leave
das
stos
xor
cmp
add
adc
jbe
testb
xorl
fmull
pop
xchg
jmp
or
xor
pop
pop
jg
out
or
cmpsl
lret
xor
popf
sbb
push
adc
loopne
mov
or
inc
and
or
pop
pop
shr
loop
add
out
jle
movsl
pop
or
mov
fists
pop
xchg
xchg
pop
xchg
sbb
mov
leave
and
sbb
mov
xchg
pop
push
lea
cmpsl
lods
outsl
jle
mov
sub
scas
shrl
or
push
push
leave
rep
addr16
rcrl
xchg
xchg
jno
inc
adc
xchg
xorb
push
repnz
mov
aas
clc
pop
lret
hlt
sbb
cli
jns
inc
xlat
and
stos
ss
loop
aam
jp
mov
mov
scas
fs
push
push
mov
cs
add
dec
adc
xchg
or
xor
shrl
lcall
pop
enter
inc
push
aaa
cltd
pusha
fcmovne
mov
mov
cltd
test
dec
out
cld
test
add
or
fistpl
pop
movsl
movsl
leave
jne
push
insb
mov
jb
xchg
jno
stos
lcall
cmpsb
cmp
jbe
dec
out
add
scas
cmp
cmp
xchg
xchg
sub
sti
fiadds
and
sarb
in
popa
push
stos
popa
or
lahf
lock
orb
xchg
dec
jmp
push
dec
xor
stos
xchg
cmp
fidivl
xchg
inc
inc
or
mov
fs
sarb
cld
addl
sbb
outsl
std
fcomps
fucom
fisubrl
mov
enter
pushf
xlat
xchg
mov
push
jle
clc
and
mov
lea
into
insb
rcrb
lock
cmp
and
fisubrs
dec
fidivrl
out
movsl
mov
mov
sub
scas
scas
jno
imull
xchg
fbld
int
psllq
mov
dec
nop
mov
push
sub
fdivl
cld
jne
xchg
stc
jb
mov
or
loop
icebp
mov
leave
mov
fadds
ljmp
movsl
in
loopne
add
pushf
popl
and
mov
mov
sti
mov
mov
nop
add
cmp
pushf
xchg
lds
and
cltd
mov
or
push
data16
inc
xor
adc
into
out
mov
sub
mov
fs
cmp
pop
jbe
fmuls
jbe
clc
ja
sarb
adc
mov
test
push
sbb
stc
or
rcll
mov
addr16
pop
fstps
testl
cs
mov
mov
and
loope
jae
addr16
pop
xor
jecxz
in
push
xchg
mov
adc
jae
aad
icebp
rcl
test
pop
cmc
jge
add
dec
outsl
je
jne
pop
outsl
out
aaa
jae
mov
add
add
add
add
lret
adc
stos
fnstsw
mov
int
test
jne
cmp
mov
push
sub
mov
shr
add
add
mov
fidivrs
dec
push
rcrb
or
adc
cmpsb
push
xchg
push
ljmp
mov
fwait
xlat
cmp
dec
sub
mov
ljmp
lcall
je
xlat
jg
cmp
mov
in
jno
stos
aam
mov
xlat
cwtl
pop
cld
shl
cld
aad
mov
mov
mov
stos
cmp
push
loopne
mov
stos
sar
mov
ja
or
xor
imul
test
fwait
mov
ja
jne
push
nop
mov
sbb
push
jnp
cwtl
pop
fcmovb
inc
or
add
or
iret
fsubs
dec
adc
adc
shll
sbb
imulb
pusha
jmp
push
mov
mov
dec
sub
mov
pop
sub
mov
int3
push
mov
xchg
sti
xchg
bswap
cmpsl
cmp
push
sub
jne
mov
out
test
loop
xchg
cmpsb
in
imul
leave
std
dec
dec
mov
std
mov
es
mov
push
sahf
mov
imul
inc
scas
in
cld
sub
int
je
fcmove
cmp
arpl
lds
mov
cmp
mov
pop
sbbb
sti
bound
stos
mov
inc
add
or
loope
pusha
dec
test
inc
sbb
push
mov
aaa
inc
cwtl
stc
mov
outsl
mov
iret
dec
mov
fcmovb
cmp
hlt
ja
mov
adc
pop
hlt
aad
mov
mov
and
pop
pushf
adc
dec
xorb
iret
xchg
aam
cs
iret
sbb
scas
xor
idivb
or
sbb
inc
imul
inc
sahf
gs
pop
jmp
pop
jge
cmpsl
inc
popa
cli
sahf
adc
test
ds
sub
loope
fistps
daa
fimuls
and
mov
test
test
jnp
pop
push
int3
fs
enter
aas
adcb
cmpsb
lahf
test
and
scas
test
mov
in
nop
mov
outsb
bound
into
cmp
dec
into
lds
lods
enter
or
sub
xor
out
dec
insl
negl
xchg
movsb
pop
push
pop
push
jl
mov
int
jecxz
and
pop
cwtl
cmp
cmp
into
cmp
dec
stc
fidivrs
bnd
xor
cmpsl
pop
ficompl
push
js
sub
rorl
sbb
dec
cmp
cmc
ds
mov
pop
lds
sbb
stos
cmp
pushf
imul
test
insb
popa
mov
jae
jae
pushf
xchg
lods
cmp
imul
and
lea
call
sbb
daa
jle
xlat
push
mov
js
pop
icebp
mov
iret
pushw
xor
adc
add
fidivrs
into
mov
cmpb
test
in
jbe
mov
xchg
mov
or
fisubrl
jp
jne
incl
xorl
inc
shl
cmpsl
jo
xlat
mov
mov
jne
aas
popl
enter
movsl
out
push
sbb
add
sahf
outsb
mov
les
mov
jnp
fisubrs
adc
lods
xor
xchg
or
mov
dec
scas
mov
sbb
xor
mov
into
shlb
test
fstpl
out
test
je
lcall
or
test
out
mov
add
mov
sbb
or
das
in
fwait
roll
sbb
and
jmp
out
cmp
ja
and
shll
cmp
fsubrs
scas
xchg
loopne
jae
and
lods
movsl
lret
jb
sbb
adc
hlt
popf
and
in
fidivl
loope
test
loop
jle
insb
dec
push
call
inc
mov
or
cmc
rolb
imul
movsl
pop
fildl
or
push
cmp
and
and
mov
mov
outsl
dec
ret
mov
sub
cli
roll
pop
ret
mov
jne
mov
mov
push
es
popa
mov
jl
cli
dec
push
dec
and
cltd
or
dec
fnstenv
cmp
push
mov
or
pop
add
sbb
dec
ss
std
iret
cmp
cld
or
add
cmc
add
add
outsl
call
fnstenv
enter
ret
arpl
out
sbb
jbe
loope
push
mov
in
jle
or
daa
or
sbb
je
add
sub
dec
cmpsb
loopne
inc
mov
jns
xlat
imul
aad
push
ja
sbb
sub
xlat
xor
adc
aaa
stos
inc
leave
cmpsb
sbb
xchg
fbstp
cmp
repz
add
xchg
and
dec
fidivrl
fmul
jmp
test
cmp
mov
out
das
push
xor
push
pop
sbb
dec
scas
sbb
mov
mov
int
sub
jge
data16
cmpsb
sbb
outsb
rcll
sbb
mov
pop
aad
mov
mov
sbb
cli
pop
cwtl
and
and
mov
fcomi
test
aam
xor
lret
fst
push
adc
jno
mov
push
jae
cld
jp
in
mov
movsl
sbb
lods
movsb
mov
push
arpl
repnz
mov
loopne
pop
jge
lea
mov
cmp
mov
push
lea
and
enter
js
jg
ljmp
pop
clc
outsb
fwait
and
in
int
push
mov
cmp
cmp
daa
lret
xchg
xor
inc
shll
in
test
out
inc
pop
aaa
mov
cmpsb
xor
push
xchg
movsb
rcl
in
pop
stos
mov
push
or
inc
adc
xchg
roll
imul
sub
dec
cmp
jmp
sub
or
loope
scas
outsl
call
push
jns
sarb
mov
push
mov
sbb
inc
insl
cmp
aam
push
repz
in
sbb
mov
xor
mov
mov
and
imul
es
nop
pop
sahf
movsl
popf
popa
negl
add
fwait
dec
aad
jbe
addr16
fwait
jmp
mov
in
dec
push
jecxz
cmpsl
fidivs
cmp
pop
cmpsl
outsl
xlat
movsl
dec
sub
mov
stos
jge
lahf
adc
pop
lret
es
int3
notb
push
ret
sbb
or
sbb
jge
xchg
repz
nop
rcr
dec
out
fcmovbe
cld
out
adc
xchg
fstpl
or
stos
out
pushf
mov
pop
ds
fwait
ja
lods
nop
inc
sbb
jbe
xor
xchg
sub
push
shll
add
loope
icebp
lods
pop
mov
jbe
nop
cld
xor
clc
pusha
and
push
imul
push
data16
xor
loop
inc
out
call
or
mov
inc
lcall
imul
je
leave
lcall
pop
mov
cwtl
cmp
or
jecxz
les
shll
insl
fstp
lahf
enter
sub
push
mov
pop
outsl
ret
pop
insb
and
imul
fnstenv
lock
out
xchg
dec
fs
mov
stc
xchg
repnz
loop
jb
insl
jno
daa
rcll
xor
jp
dec
mov
jle
dec
repnz
stc
adc
cmp
or
icebp
sarb
pusha
cmp
inc
lret
and
xchg
and
mov
mull
flds
xchg
push
aas
xor
xor
inc
cmp
sub
push
add
out
std
jmp
adc
dec
jle
pusha
bound
mov
aad
inc
mov
xchg
sub
das
sbb
out
push
inc
movsl
add
sub
gs
jnp
fbstp
insb
incb
fsubs
ret
mov
lea
and
and
and
into
xor
cmp
adc
cmp
inc
inc
xchg
lods
mov
fs
mov
push
arpl
pop
jle
fs
pop
jae
cmp
mov
pushf
in
insl
out
mov
adc
sbbb
mov
xor
stos
push
lods
push
jae
sub
jb
std
imul
loop
jae
mov
leave
test
cltd
into
cmc
adc
pop
or
mov
cmp
js
aaa
cmp
add
cltd
call
pop
pop
daa
sbb
jnp
divb
pop
aaa
insb
test
aas
icebp
in
call
adc
jns
adc
sbb
add
pop
fmull
add
add
es
mov
jmp
fdivrp
ret
xor
cmc
add
add
je
cmpsl
jns
les
out
xchg
je
stos
xchg
xor
fucomip
insb
lods
into
nop
in
add
pop
add
push
push
dec
dec
outsl
xor
movsb
mov
mov
test
imul
push
sub
rcll
xlat
sub
out
ja
jge
gs
add
sbb
push
xor
loop
pusha
pop
out
lods
fstps
jl
cmpb
fdiv
out
jns
outsl
xchg
push
in
sub
pop
add
movsb
lahf
lahf
inc
sbb
aam
hlt
scas
ret
shrb
add
xchg
push
data16
pop
jp
pop
jbe
push
mov
cmp
out
push
add
jl
or
add
das
lret
fcoms
dec
and
lock
mov
xchg
test
leave
xor
idivl
jp
outsl
std
leave
xor
pop
add
and
xchg
aad
mov
adc
clc
mov
arpl
lock
gs
aas
cmp
mov
jb
inc
fiadds
xor
or
mov
mov
sub
and
adc
xchg
mov
daa
xchg
mov
loop
gs
xor
jecxz
jno
and
dec
jno
outsb
dec
shr
xor
into
or
ret
mov
paddw
iret
fwait
scas
insb
mov
pop
sub
mov
mov
inc
movsl
push
and
cmc
fld
data16
sub
mov
out
inc
mov
lcall
ret
and
mov
arpl
sub
pop
adc
mov
mov
into
repz
sar
dec
or
adc
iret
aas
lea
adc
es
push
inc
enter
mov
add
mov
mov
hlt
jns
repz
dec
jns
cld
imul
cmp
fdivrl
das
push
das
cli
in
push
cli
lret
xchg
inc
mov
or
xor
cmp
roll
sub
rcr
mov
out
in
sbb
loope
flds
inc
pop
mov
aas
std
and
jb
xchg
stos
mov
mov
sub
and
sub
or
repz
lret
out
dec
mov
push
and
fyl2xp1
test
imul
sbb
in
fiaddl
adc
leave
call
adc
sub
xor
mov
or
aad
nop
enter
loop
xchg
inc
sub
sub
mov
fs
inc
ds
sahf
push
push
jns
pop
mov
lahf
divl
cmp
out
mov
adcl
lcall
pop
in
rep
out
jge
push
add
jl
mov
cmpsl
jl
adc
adc
les
test
sbb
mov
or
xor
cmpsl
inc
out
mov
jnp
mov
cmpsl
push
inc
test
test
aam
push
cmpsl
sbb
in
into
out
or
mov
push
sub
arpl
push
or
scas
clc
push
mov
cmpsb
negb
xlat
or
cwtl
dec
cmp
inc
jg
imul
insl
sbb
push
mov
roll
inc
ret
mov
mov
cmp
mov
jle
daa
mov
mov
adc
scas
inc
xchg
mov
xchg
aam
mov
lock
push
push
fs
mov
je
mov
cwtl
repz
in
movsl
mov
jmp
push
inc
push
scas
adc
jle
aam
push
popf
shl
movsl
cmp
xchg
mov
push
loope
ds
and
stos
jg
repz
out
movsb
test
fnstsw
sub
cmc
scas
loopne
ljmp
inc
fs
pop
fs
fcoms
stos
sbb
aas
sub
iret
rorl
xchg
mov
and
cmp
pusha
mov
fldt
lea
scas
xchg
fstpl
add
or
daa
xchg
pop
out
lds
mov
pop
insl
mov
xor
xchg
ret
pop
adc
cmp
rorb
mov
int
pushf
mov
test
lret
dec
movsl
and
jae
mov
xchg
hlt
mov
jns
and
scas
fldcw
cwtl
or
lock
sub
pusha
stos
inc
mov
fwait
std
pop
outsb
imul
scas
jno
das
pop
imul
mov
adc
add
aaa
sti
addr16
out
fidivs
icebp
add
add
add
add
cmp
cmp
fsub
or
aas
pop
lahf
jg
mov
sbbl
sbb
aaa
psrlw
lock
fcoml
popa
push
sbb
adc
lock
subl
inc
test
sbb
jnp
mov
out
xchg
movsb
imul
dec
dec
mov
push
in
dec
test
xchg
jno
pop
xchg
add
rcll
mov
xchg
arpl
icebp
mov
xchg
lcall
cmpsb
xchg
sbb
jge
ljmp
xor
and
mov
loopne
in
movsl
xlat
popa
sbb
inc
add
push
mov
mulb
mov
outsl
inc
faddl
loope
xchg
and
push
imul
jl
or
sub
out
out
cmp
jb
adc
arpl
enter
mov
add
sub
orl
sub
lcall
adc
cli
push
stos
cmpsb
icebp
inc
adc
xor
ret
movsl
and
xor
mov
jne
jge
jb
lds
hlt
imul
shlb
mov
pop
scas
mov
and
mov
and
jo
pop
and
cld
outsl
arpl
mov
ljmp
lods
mov
les
ljmp
cmc
jp
sub
and
pop
mov
push
push
and
mov
std
jl
movsb
pop
mov
in
pop
mov
mov
dec
jbe
xchg
repnz
loope
aad
sub
jmp
test
outsb
gs
mov
inc
mov
daa
call
pushf
push
mov
pop
lahf
addr16
push
mov
lahf
clc
movl
jo
inc
sbb
push
in
pop
sbb
popf
and
cld
add
xchg
jecxz
int
sbb
push
mov
es
test
adc
cmp
mov
add
xchg
cmpsb
jbe
xchg
dec
imul
addr16
push
jbe
call
jnp
lcall
pop
outsl
mov
cmp
sub
mov
sub
pop
sub
cld
fadd
dec
fisttpll
mov
pop
add
jae
dec
fcompl
jmp
mov
mov
inc
into
popa
and
aad
xchg
and
xorl
pop
fisubrs
iret
lods
jae
and
sbb
mov
repnz
dec
js
sub
dec
xor
mov
sub
movsb
push
cmp
push
jl
jbe
dec
movsb
dec
pop
movsb
mov
fucomi
jg
jmp
xchg
addr16
dec
aad
into
pop
addr16
inc
dec
mov
add
mov
push
sbb
mov
leave
xor
mov
out
push
lods
pop
jno
xchg
pop
adc
xchg
dec
mov
lcall
mov
arpl
lea
rcl
and
add
mov
ds
shl
and
inc
and
cmpsl
push
xchg
out
and
ret
in
movsl
pop
aad
fucom
ret
setg
inc
add
bound
aas
add
xchg
jb
and
push
push
adc
ds
pop
out
inc
call
leave
pop
sub
je
outsb
cs
cmp
outsl
sbb
cmpsl
ror
bnd
cltd
and
movd
rcrb
lods
push
pop
in
push
frstor
aam
popa
mov
ret
lret
add
mov
and
adc
push
idiv
dec
scas
popa
adc
pavgw
cld
cld
insb
xor
pusha
add
mov
mov
sbb
mov
test
add
mov
lock
nop
shrb
xor
aad
mov
jb
pop
ja
pop
push
and
fcmove
sub
pusha
lret
or
inc
xchg
push
out
sub
adcl
push
pop
jmp
sbb
push
mov
push
push
add
dec
inc
leave
push
cmp
dec
mov
xchg
cmp
ret
ret
mulb
fadd
jmp
into
ret
mov
mov
add
addr16
js
movsl
outsb
add
xchg
cmpsb
inc
jno
push
daa
out
and
pop
dec
sbb
pop
jp
jle
pop
mov
imul
pop
cmpsb
cli
xor
push
loop
push
add
add
inc
sbb
repz
fiadds
aaa
add
cmc
add
add
movsl
subl
sti
in
mov
or
mov
xchg
mov
adc
ss
inc
in
aam
out
xchg
repnz
fisubrs
sbb
ja
icebp
add
mov
leave
xor
sub
sub
jl
push
aaa
push
cltd
mov
nop
js
mov
lret
addr16
push
mov
xchg
jecxz
cmp
rclb
fsubs
inc
hlt
xchg
dec
fists
sbb
inc
mov
dec
push
xchg
repnz
pop
pop
pusha
shlb
aam
cs
icebp
int
cwtl
mov
mov
xchg
gs
test
mov
je
ret
repnz
insl
hlt
and
lock
jno
rclb
loope
arpl
jae
push
and
and
sub
lods
sbbl
push
icebp
xlat
into
pushf
ret
lea
mov
sub
scas
xchg
mov
iret
popf
rol
negb
mov
xor
fiadds
add
sub
mov
jp
jno
ficoms
lret
repnz
fnstenv
dec
inc
mov
into
mov
jp
jo
lcall
dec
out
aas
jg
adc
imulb
push
sbbl
xchg
jno
stos
mov
lea
jg
fisttps
sarb
inc
testl
mov
push
pop
hlt
pop
popa
cli
sahf
cmp
shll
sbb
add
mov
lahf
mov
or
lods
pop
mov
testb
jnp
fildll
in
popa
mov
jecxz
mov
iret
xchg
sub
daa
or
es
cli
push
push
test
xchg
inc
loopne
adc
xorl
cmpsl
jae
sbb
pushf
mov
fldlg2
push
mov
jbe
and
xor
jle
sti
xor
addr16
add
test
inc
xor
jle
fabs
or
and
popf
adc
xor
push
cmp
loopne
inc
in
push
sarl
jp
adc
fildl
sbb
cmp
pop
sbb
mov
test
adc
push
aam
fidivrs
in
xchg
int
lahf
and
sbb
push
cmp
mov
out
daa
or
fnstenv
aaa
iret
dec
fidivl
or
or
adc
sub
stos
mov
mov
or
sbb
sub
jp
adc
jl
iret
xor
add
push
cmc
fs
dec
stc
fisubrs
cmp
or
pop
fcompl
adc
mov
push
dec
jl
fldt
xorl
mov
jne
mov
ljmp
add
movsl
cmpsb
mov
sbb
loope
sub
and
orb
push
xchg
inc
sub
mov
aam
or
ret
idivl
loopne
dec
sub
cmp
or
repz
inc
je
xchg
jmp
dec
jecxz
outsl
loopne
popf
mov
xchg
xor
stos
dec
xor
mov
or
mov
cmc
and
and
ljmp
jno
shr
dec
inc
ret
cmp
push
adc
pop
and
pop
sub
xor
std
imul
jns
cmp
pop
xchg
cmp
outsb
jg
int3
sbb
push
out
add
push
or
push
repz
stos
mov
jmp
movsb
jae
je
sbb
mov
call
push
inc
xchg
insb
mov
bound
mov
and
cmp
add
lret
aas
mov
pop
push
mov
sbb
lret
jecxz
loopne
lret
jb
add
xor
push
push
dec
lret
ret
mov
nop
repnz
lret
cmp
daa
test
call
fnstenv
mov
sbb
sub
push
mov
or
lret
inc
inc
sti
push
xchg
jb
scas
mov
stos
ljmp
and
test
and
mov
pop
stc
ja
pusha
imul
loop
inc
out
data16
mov
arpl
add
sub
xchg
popf
mov
mov
xchg
fwait
push
and
mov
add
push
inc
loope
adc
daa
lea
pop
stc
cmc
jmp
dec
mov
out
adc
jb
jb
idivb
fdivl
cmp
mov
insl
sub
test
sbb
loopne
test
aas
popf
mov
pop
addb
xor
add
add
mov
xlat
sbb
cmc
add
add
add
cmp
pushf
jecxz
jge
stc
int3
daa
mov
mov
in
int3
cmpsl
loop
jg
pop
pusha
pop
adc
scas
add
in
jg
test
ret
negl
shr
add
cmpsb
lods
aam
jno
aaa
xchg
cltd
and
pop
lret
idivb
xacquire
xor
sub
pop
pop
in
decl
cli
sub
mov
and
sbb
adc
mov
sub
mov
jmp
push
je
mov
inc
out
cmp
push
push
mov
xchg
xor
dec
xchg
cmp
arpl
movsl
std
scas
dec
ss
aas
mov
sbb
imul
pop
inc
mov
lock
bound
push
cld
addr16
lods
dec
or
lret
es
decw
xchg
mov
and
fnstcw
mov
mov
pop
sbb
stos
imul
mov
and
xor
xchg
adc
or
orl
jbe
mov
mov
push
rcrb
dec
xchg
cmpb
sub
loop
fldcw
popf
movsl
cmpsl
dec
jo
mov
sarb
push
mov
jnp,pn
insb
aad
stc
xchg
out
mov
cmp
mov
outsb
mov
mov
mov
xchg
icebp
xchg
inc
pop
sbb
dec
adc
lahf
mov
bound
push
mov
cmpsb
mov
mov
test
jo
test
add
fldenv
sub
inc
inc
fcmovne
movsl
sub
sbb
mov
jae
sti
xor
xchg
inc
dec
mov
fwait
ljmp
mov
mov
shrb
das
cwtl
sbb
je
mov
jmp
mov
scas
fdiv
out
repnz
or
mov
mov
mov
loope
ds
dec
out
push
xchg
out
mov
out
adc
rcrl
xor
sbb
cmp
iret
dec
inc
out
hlt
das
fdivs
mov
push
mov
cmp
ficoms
movsl
adc
test
cld
sbb
adc
and
jnp
or
fdivr
sbbb
xchg
dec
enter
add
xchg
pop
mov
jnp
pusha
sub
mov
cmp
lea
add
test
jae
add
fsubr
xor
popa
push
push
cmpsl
insl
mov
lahf
sub
hlt
rcrb
cmp
out
fyl2xp1
sbb
jge
out
test
ds
rcrl
inc
cmp
or
pop
scas
sbb
cld
push
in
xor
out
xor
push
dec
xchg
xchg
ret
push
lret
test
xchg
addr16
adc
push
incl
push
xchg
mov
mov
and
pop
jle
test
loop
frstor
outsl
repz
xchg
cld
lds
jno
test
js
and
ret
mov
lret
popf
mov
cmc
ljmp
xor
out
cmp
adc
test
mov
dec
xor
pop
push
jb
mov
add
push
dec
arpl
es
or
aam
mov
out
xor
jl
mov
sti
xchg
adc
xor
clc
out
jg
test
je
push
js
cs
lahf
sbb
jbe
and
push
mov
mov
or
xchg
mov
xor
xorl
in
sbb
loopne
cmpsl
add
cs
sub
sti
ljmp
push
cltd
xchg
lahf
xchg
push
fists
push
cs
jp
jecxz
ficoml
scas
aaa
out
dec
outsl
popf
and
addl
test
mov
xchg
pushf
lret
push
nop
adc
inc
dec
insl
ds
and
daa
stos
popf
notb
lcall
xor
rcll
xor
mov
cmp
das
lcall
add
xchg
adc
xor
push
and
lods
xor
les
push
lds
test
or
loop
mov
xchg
or
insb
or
test
mov
xlat
orb
push
outsl
ds
cmp
jle
lods
in
out
mov
out
cmp
fidivl
or
ret
ds
jmp
sub
push
mov
leave
xor
xchg
shll
dec
cmc
jae
push
mov
push
xor
mov
fsubrl
out
cld
call
add
in
pop
dec
negl
mov
iret
sbb
dec
xchg
add
add
add
lods
outsl
adc
ret
mov
or
fdivrs
or
cld
dec
mov
lods
scas
push
sbb
sub
insb
out
mov
sarb
imul
in
lods
add
and
int
aaa
mov
add
std
cmpsb
loopne
and
jg
jae
mov
mov
or
aad
insl
lds
and
xchg
lahf
ljmp
cmp
mov
sbb
pop
xchg
jp
int3
mov
ret
add
lock
pop
jge
sub
xor
movsl
xor
xor
push
pop
mov
inc
sbb
test
and
out
jecxz
das
xchg
inc
and
leave
cmpsb
aad
push
dec
pop
test
test
xor
fs
std
add
outsl
push
fimuls
and
jnp
xlat
rclb
ret
push
dec
cs
or
call
fsubrs
cmp
and
mov
xchg
push
jmp
out
loope
add
adc
sub
xchg
push
movsl
mov
dec
mov
adc
dec
cmpsl
push
jbe
leave
sbb
cmp
orl
jns
lods
push
inc
rorb
mov
cmp
in
jno
int3
xchg
mov
sbb
insl
out
mov
or
test
xchg
jne
xchg
xor
out
xchg
mov
or
xor
movb
adc
push
cld
je
push
lods
mov
mov
jecxz
out
shll
fs
aam
or
xchg
mov
xchg
in
insl
aas
and
adc
pop
dec
xor
mov
es
imul
add
adc
in
les
popf
jae
xchg
and
es
mov
and
push
fwait
scas
xchg
loopne
mov
push
push
mov
lret
sti
adc
dec
hlt
repnz
mov
and
adc
fbstp
test
out
inc
and
ljmp
xchg
ja
add
fldt
adc
mov
push
stc
and
out
pop
hlt
cmp
pop
sub
cwtl
lea
cwtl
inc
pop
push
and
fs
xor
mov
xchg
mov
inc
scas
mov
je
mov
imul
cs
rcrb
iret
or
iret
jge
sub
jmp
cmp
dec
cmpsb
adc
cwtl
testb
push
test
rcrl
push
in
stc
repz
mov
pop
outsl
test
xor
mov
stos
addr16
adc
iret
les
scas
nop
pop
jg
fsubl
jne
jl
xor
test
jb
lea
adc
xchg
loopne
push
daa
aam
pop
jae
mov
push
sub
push
stos
sbb
roll
je
mov
movsl
sarb
ds
and
pop
push
or
sahf
cs
in
xchg
jle
inc
out
inc
repz
notl
mov
pop
gs
imul
xchg
xor
mov
imul
dec
hlt
rorl
inc
jnp
mov
fs
stos
and
pop
mov
les
negb
fcmovnbe
enter
sub
jae
jmp
imul
and
mov
adc
test
ror
pop
dec
and
jne
es
push
fsubs
push
inc
pushw
rcrl
push
mov
mov
addr16
xchg
lcall
xlat
add
mov
shlb
mov
pop
dec
outsb
das
movsl
nop
rolb
adc
loopne
add
lock
pop
cltd
push
rolb
jg
pushl
adc
mov
jo
or
push
mov
insb
sbb
aaa
cs
in
sub
test
ds
pop
mov
mov
aaa
xchg
into
cmp
mov
ss
pop
adcl
cli
fiaddl
popf
mov
lcall
pop
jb
pop
daa
sbb
push
out
movsb
call
in
sbb
popf
sbb
sbb
loopne
dec
aad
test
sub
xlat
add
leave
push
and
fisubl
dec
or
inc
out
sbb
es
inc
pop
inc
aaa
and
cli
jae
adc
adc
mov
into
rorb
in
sub
out
in
sbb
lcall
push
pop
mov
jnp
push
jne
jmp
push
movb
movsb
or
jle
xchg
popa
lea
xor
jmp
mov
push
sbb
gs
add
imul
insl
shll
fisubrl
repnz
push
xor
sub
jo
cmp
jno
pop
xchg
imulb
aad
data16
ds
fdivp
cld
ds
daa
cmp
adc
add
add
add
push
nop
dec
scas
das
fiaddl
scas
cmc
nop
dec
scas
ljmp
testb
ja
xor
or
mov
pop
mov
insl
jo
jb
jle
subl
cwtl
dec
imul
loope
jmp
aad
inc
into
out
repnz
mov
fisubrs
inc
pop
pop
inc
popa
inc
fcoml
pop
add
pop
or
cmp
and
push
mov
aas
mov
fildll
rclb
jecxz
sahf
dec
pop
ja
out
sbb
lret
push
sbb
push
and
xor
leave
es
fsubrs
int
lcall
mov
int
ret
divl
xchg
sub
sti
jecxz
imul
push
loop,pt
or
sbb
clc
xlat
repnz
es
mov
out
ds
outsb
mov
outsl
xchg
aad
testl
cmp
xor
adc
les
adc
sub
ror
push
mov
out
adcl
jecxz
aam
movsb
out
mov
std
or
fdivr
lock
mov
mov
push
fists
leave
enter
daa
inc
fdiv
inc
mov
icebp
and
xchg
add
inc
mov
jecxz
inc
pop
repz
sub
jmp
adc
loop
enter
xchg
push
in
and
mov
leave
jnp
stc
cs
push
push
mov
in
or
adc
in
pusha
insb
fsubrl
dec
test
cmp
dec
inc
call
push
inc
std
mov
cli
add
and
aad
aam
das
mov
test
insl
ljmp
je
mov
in
pop
imul
ss
mov
sub
or
icebp
xor
or
jb
jecxz
xchg
mov
pop
out
repnz
stc
xchg
repz
dec
pop
cwtl
inc
cmp
hlt
jl
test
cmp
pushw
mov
subl
lahf
loop
xchg
fwait
pushf
shl
aas
shr
lock
popf
out
fsts
out
mov
jnp
sub
dec
pop
jg
insl
jmp
mov
xor
test
mov
pop
pop
cltd
enter
cmc
in
mov
cmp
jmp
add
sahf
ss
shl
cli
scas
mov
ret
jge
in
pop
fdivrl
lea
sahf
xchg
jns
iret
xlat
and
adc
ljmp
xlat
sub
dec
int
add
fisubl
add
xor
xorb
and
mov
lods
mov
jns
jle
loope
inc
jno
adc
je
fcmovnbe
sub
stc
jae
inc
pop
mov
imul
jne
mov
and
cmp
orb
jnp
cmc
mov
lds
mov
xchg
mov
mov
inc
adc
add
ljmp
or
hlt
aam
mov
dec
sbb
sub
mov
in
stos
testl
dec
scas
ss
jp
and
lcall
jae
mulb
fcmovnb
cwtl
sti
fcomps
xor
or
fimuls
xor
xor
mov
aas
ja
adc
je
push
xorb
jmp
imul
mov
xchg
inc
mov
jg
stos
fistpl
jle
dec
xor
orb
fucomp
lret
add
iret
add
es
hlt
jbe
enter
xchg
dec
sbb
xor
cwtl
cmpsl
or
notb
pop
cmpsl
loopne
je
cli
xor
repz
add
jg
mov
inc
cs
fstps
or
xor
or
sub
rorl
dec
pushf
jmp
in
mov
aaa
fldenv
nop
lcall
pop
or
lods
cmpsl
jae
ret
outsl
sti
push
dec
adc
fmull
or
cli
adc
arpl
in
lods
xchg
mov
jp
mov
fisubrl
and
std
sbb
fdiv
adc
int3
in
aam
add
push
mov
inc
inc
xor
mov
dec
inc
andl
shl
mov
dec
imul
arpl
fucom
sbb
ljmp
sti
ljmp
xor
mov
sub
pop
jg
movsb
aas
sub
imull
clc
pop
icebp
shrl
sub
jg
cmp
fcoml
add
jnp
xor
jg
sbbl
jno
add
cmc
add
add
jnp
adc
push
push
mov
jb
sub
aam
stos
loope
sub
cld
inc
loope
push
stos
sub
jl
cmp
iret
std
imul
data16
in
add
fdivs
fs
inc
aaa
in
cs
shlb
test
fxch
dec
mov
movsb
xchg
cmp
pop
or
jno
pusha
inc
mov
add
and
xchg
hlt
mov
pushf
icebp
mov
push
imul
or
push
in
testl
popf
sbb
and
divb
xchg
xchg
mov
scas
shlb
xorl
push
imul
mov
inc
mov
push
push
data16
push
in
mov
in
inc
in
inc
mov
cmp
xor
ror
xchg
mov
ret
lahf
les
mov
adcb
shrb
xor
adc
iret
popa
fisttps
pop
add
icebp
sahf
sti
inc
test
repnz
jle
leave
dec
cs
xchg
pop
sar
lods
xorl
fcomps
jmp
mov
imul
mov
cli
jnp
ljmp
add
out
ret
cwtd
jb
or
mov
dec
jle
pop
push
stc
cmp
mov
pop
cmp
shrl
pop
movsl
inc
pop
push
in
mov
dec
inc
push
shll
jge
pop
xor
test
ss
fidivrs
mov
pop
inc
push
cmp
cli
stos
and
sahf
mov
ret
push
or
push
mov
jmp
arpl
jnp
sub
fstpl
dec
ja
sub
or
or
inc
inc
in
mov
test
add
mov
pop
push
add
in
cmc
xchg
cmp
out
jnp
ret
lock
sbb
addr16
pop
stos
ffree
mov
fidivrs
test
mov
pop
stc
push
push
jns
into
mov
pop
icebp
pop
scas
jne
adc
repnz
ret
bound
xlat
les
push
adc
mov
into
enter
xchg
dec
ss
lcall
inc
or
inc
ss
frstor
fucomi
icebp
test
sub
xchg
xor
ficoms
out
std
rcll
test
dec
sub
jnp
xchg
sti
testl
je
sbb
mov
jnp
dec
or
or
jmp
push
pop
mov
sub
addr16
pop
cmp
pushf
leave
mov
imul
in
hlt
lret
cmpl
push
inc
mov
dec
and
jo
pop
add
and
cmp
jbe
enter
sti
adc
fldl
mov
mov
out
or
adc
adcl
notl
dec
mov
jne
jge
jae
push
inc
hlt
push
int
pop
sbb
jl
cmp
jae
dec
mov
loope
cmp
sub
loopne
stc
sub
das
mov
xchg
pop
inc
push
cli
hlt
in
es
mov
out
mov
aas
dec
and
sarb
cld
outsl
xlat
sbb
sbb
negb
add
xchg
rcll
aas
cmp
cmpsb
mov
mov
call
jb
in
clc
testl
fidivrs
iret
fisubs
inc
mov
xor
and
mov
sub
popa
pop
cmp
mov
fs
sbb
sub
movsl
cmp
jmp
jno
in
fidivrs
push
test
lret
sub
jno
xchg
jns
pop
push
pop
out
imul
jg
aam
jp
sti
testl
jg
test
imul
js
jns
pop
sbbl
loop
addr16
push
ljmp
into
out
mov
push
push
and
icebp
dec
ret
inc
and
insb
and
scas
adc
imul
stos
adc
jno
lret
dec
adc
loop
sub
in
loope
lods
int3
jb
popf
into
jnp
loope
fisttpll
ficoml
xchg
mov
repz
rclb
stos
fst
push
test
and
arpl
lea
fwait
iret
adc
inc
data16
mov
mov
dec
stc
adcl
and
in
push
icebp
sbb
adc
testb
add
insl
cmpsl
mov
loope
movsb
push
lods
and
xchg
lods
rcl
inc
arpl
add
add
or
xchg
jmp
adc
pop
xor
insl
ret
add
cmc
add
add
mov
pusha
or
popa
dec
ret
xor
cmp
mov
fs
push
cmpsb
sbb
int3
sbb
inc
xchg
mov
fldl
add
int3
jp
xchg
fadd
insl
insl
or
fisubrl
inc
or
repnz
push
orb
or
pop
sub
inc
cltd
push
jnp
mov
enterw
and
cmpsl
fnstenv
add
sbb
adc
test
xor
lock
push
adc
lods
mov
sub
add
jne
dec
imul
test
mov
in
xor
cmp
gs
daa
sbb
push
es
in
subl
dec
mov
outsl
loop
mov
jns
dec
fsave
cltd
loopne
dec
adc
xchg
dec
adc
shl
pop
clc
xchg
sbb
mov
mov
jb
sub
hlt
fs
mov
mov
js
call
fwait
mov
out
push
sub
dec
push
ljmp
stos
shll
dec
mov
test
xor
ucomiss
aam
shlb
std
push
mov
in
nop
cli
inc
mov
mov
mov
loop
sub
dec
call
jmp
xchg
daa
dec
push
scas
push
sub
out
mov
roll
fs
mov
inc
jns
cmp
add
inc
stos
or
xor
rcr
pop
pop
add
add
iret
leave
pop
mov
ds
mov
xor
lods
lcall
lret
cmp
daa
aas
test
jmp
add
pop
jns
stc
add
inc
repnz
adc
push
test
jne
xor
cmpxchg
loop
hlt
xorl
das
mov
xor
data16
inc
lds
mov
outsb
adc
xchg
je
fisttps
inc
std
adc
mov
or
jg
rorb
xchg
hlt
sub
ds
jnp
adcb
nop
pop
cmp
clc
ja
or
jmp
adc
or
cmc
das
xchg
ja
aam
mov
or
and
jb
mov
in
add
cmp
les
cmpsl
sar
ret
fwait
pop
xor
repnz
mov
rol
xchg
push
das
sbb
loopne
enter
cmp
jns
dec
sbb
fisttpll
or
and
pop
fidivrs
lods
test
push
xor
cld
push
inc
cmp
cwtl
shlb
pop
jne
add
ret
int3
incl
jmp
sub
or
mov
add
std
lods
push
dec
je
out
clc
push
cwtl
incb
jne
cmp
mov
aas
outsb
mov
sahf
flds
mov
imul
mov
ss
inc
inc
cmp
pop
and
mov
push
loope
aas
cmpsl
jo
inc
dec
inc
pop
adc
ja
imul
push
das
divb
dec
cmpsl
cltd
repnz
sub
cmp
jbe
jne
aaa
pop
jnp
mov
and
xor
std
mov
sub
dec
push
xlat
addr16
testb
sbb
mov
lock
jp
mov
push
xchg
movsl
or
aad
jo
cs
into
imul
xorb
sahf
cld
mov
les
and
add
xchg
fistl
lods
ja
jnp
les
cmpsb
sub
stos
adc
or
ja
rclb
jl
push
and
sub
push
mov
or
add
lret
inc
jnp
xor
pushf
jne
nop
xchg
mov
mov
xor
and
in
xchg
out
pop
movsb
lea
out
ds
stc
ja
test
jb
fcomps
jne
lret
sbb
add
xor
stos
repz
push
in
sub
pop
cmp
and
mov
test
or
jnp
int
lret
pop
pop
bound
nop
into
cs
fadd
subl
sub
xlat
in
lds
mov
jg
iret
inc
cmpsb
jmp
aam
pop
dec
adc
pop
test
scas
and
sub
sbb
jg
pop
fwait
mov
push
mov
inc
std
pop
dec
dec
imul
adc
das
in
push
clc
hlt
mov
jb
mov
outsb
pop
and
es
dec
xor
xchg
inc
push
xor
push
pop
aad
adc
add
cmp
test
shlb
adc
je
fs
push
outsl
std
das
mov
popa
xor
out
xchg
rcll
movsl
add
add
loope
loope
fistpll
adcl
mov
push
add
cmc
add
add
xor
xlat
lret
lahf
nop
das
lahf
sti
negb
sti
xchg
push
ret
in
rcll
jg
dec
cmp
and
imul
xchg
add
mov
ljmp
fimull
and
xchg
push
sub
int
pop
jo
cmc
addr16
or
scas
aaa
jmp
add
scas
dec
mov
add
and
ds
push
pop
cmp
jecxz
pop
xor
cmp
push
daa
dec
and
cmpb
lods
xlat
adc
loop
xor
push
aas
push
aaa
push
add
mov
push
clc
ficoml
inc
lods
lret
sub
pushf
pop
add
jecxz
inc
and
mov
and
adc
iret
sbb
mov
sub
adc
cld
sbb
dec
xor
and
fmull
inc
push
xor
repnz
pop
pop
std
jns
pop
xchg
std
adc
icebp
jbe
mov
adc
sbbb
and
and
test
popf
pop
rcl
push
dec
sub
hlt
cltd
mov
sub
lar
push
jl
mov
loop
lds
mov
xchg
lahf
push
cmp
add
jbe
adc
cld
mov
xor
shlb
mov
push
jns
fiadds
fisubrl
adc
xchg
jno
test
out
es
lea
lock
not
xchg
sub
lods
push
lds
rorb
loope
and
push
not
call
add
stos
into
out
and
call
test
push
jle
or
jge
and
add
and
sbb
mov
bound
scas
jns
or
dec
mov
jp
sub
mov
cmp
out
mov
cmp
in
or
pop
imul
cmp
arpl
lods
sbb
pusha
push
mov
fstl
fdivs
pushf
das
mov
repz
jecxz
fcoms
sbb
pop
lahf
xchg
call
sbb
hlt
movsl
popf
daa
xor
and
stc
inc
popf
sub
lea
push
xor
imul
psubusw
mov
loope
in
daa
aad
out
test
cmp
out
repz
ret
mov
fadds
xchg
fld
adc
scas
or
aas
xor
mov
pop
mov
xchg
imul
add
adc
xchg
sub
inc
jle
ljmp
popa
push
xlat
push
inc
jo
xor
dec
push
nop
ficoms
mov
jmp
adc
and
dec
shr
pop
outsb
cltd
inc
add
lret
arpl
xor
and
cmpb
cmpsl
ljmp
and
jo
pmulhuw
push
inc
sti
sub
cwtl
xchg
push
subw
inc
nop
lods
sti
add
adc
test
fwait
sub
push
jg
xchg
imul
inc
imul
xchg
nop
or
add
arpl
fstl
shlb
fiadds
mov
push
xchg
scas
inc
lret
pop
stc
dec
push
sub
pop
repnz
mov
jbe
outsb
cli
repnz
dec
jne
es
cmp
mov
in
jns
mov
inc
outsb
aad
xchg
push
sub
xchg
inc
jl
jb
les
clc
dec
xchg
sbb
inc
xchg
mov
pushf
mov
mov
xor
jb
push
ja
icebp
mov
add
sub
xor
js
aaa
jbe
add
push
mov
imul
or
fmull
test
fisttpll
jbe
sti
jl
div
loop
inc
xchg
dec
mov
pop
xchg
scas
lret
cli
pop
dec
enter
cltd
aam
xchg
mov
pop
scas
sub
push
push
scas
scas
inc
lahf
mov
inc
pop
add
fs
arpl
xorl
insl
into
sbb
loop
into
push
jle
jno
jo
ficoms
jnp
push
shrl
sub
xor
shr
jns
push
sub
sbb
mov
repnz
cmp
mov
int3
adcl
jbe
dec
iret
ds
push
cmp
adcb
ljmp
orl
scas
sbb
dec
lock
jne
sub
cmpsb
in
push
test
push
call
xchg
sbb
mov
add
lea
aas
xlat
scas
iret
movsl
push
xor
je
adc
cmp
loope
xchg
out
notl
fbld
push
pop
add
cmc
add
add
sbb
pop
push
mov
xchg
test
fs
daa
imul
jmp
mov
sbb
xchg
xlat
mov
jl
mov
lahf
cmp
jns
outsb
outsb
jb
stc
iret
jmp
jmp
rcl
mov
xor
mov
mov
sbb
and
sti
xchg
out
stos
dec
sahf
ljmp
jge
xor
loop
pop
roll
jg
addr16
push
adc
popa
push
arpl
add
mov
lcall
push
sub
cs
insl
addr16
arpl
xor
push
and
roll
mull
add
sahf
xchg
in
cmp
adc
push
bound
or
inc
mov
test
and
loopne
inc
push
mov
sti
test
push
mov
add
sahf
push
pop
cmp
in
jne
pop
leave
push
iret
mov
xchg
out
sbb
pop
xchg
push
mov
leave
movsl
pop
push
add
jo
shlb
in
jp
and
stos
mov
pop
jge
jo
mov
pop
rcrl
in
cmpb
pop
data16
adc
add
dec
jbe
stc
mov
rorb
pushf
push
jnp
mov
pop
push
and
mov
mov
scas
cwtl
mov
jno
ljmp
fisttps
cli
pop
nop
jae
adcb
sbb
test
mov
or
jns
cwtl
popf
inc
pop
or
mov
into
or
mov
and
xchg
jae
fldt
mov
mov
filds
cld
lock
pop
and
adc
mov
xlat
mov
xchg
test
insb
xchg
call
and
dec
test
pop
xor
push
jge
inc
pop
xor
repz
add
mov
sbb
lods
loopne
sbbb
push
sbb
aaa
cli
jo
xchg
mov
pop
sub
es
cmp
dec
les
loop
inc
shrb
xor
mov
cwtl
inc
xchg
das
out
les
cwtl
je
mov
xchg
mov
cld
mov
dec
std
outsb
es
xchg
mov
dec
or
push
outsb
ljmp
setnp
xchg
xchg
xlat
lods
lods
mov
bnd
fisubl
iret
sub
cmpsl
mov
jb
hlt
lock
in
push
movsb
data16
cld
mov
and
shr
or
rol
nop
into
pop
ror
cmp
push
inc
inc
mov
xchg
adc
popa
mov
popf
stos
cmp
dec
xchg
or
jmp
xchg
mov
or
loop
dec
fs
jb
mov
ret
cmp
dec
pop
dec
fcoml
xor
cld
or
mov
ja
mov
mov
sub
xor
stos
mov
jg
adc
enter
bound
out
aad
out
mov
cmp
xchg
pushl
dec
jnp
aam
iret
push
jmp
sbb
xor
inc
mov
scas
mov
dec
test
mov
out
lea
mov
inc
ret
push
cwtl
push
scas
into
andb
fcmove
xchg
jbe
and
sub
lcall
and
imul
jo
inc
lods
in
or
into
mov
int
mov
idivl
sbb
pusha
pop
and
rcl
or
sbb
sti
popa
repz
xor
pop
cs
pop
in
pop
sbb
and
cmp
adc
cltd
push
dec
shll
cltd
mov
pop
mov
ficomps
loopne
jp
add
mov
jnp
or
pop
icebp
and
dec
add
into
cmp
fbld
aam
mov
repz
xchg
shrl
adc
scas
rcr
sahf
cld
push
cmpsl
dec
pop
addl
ds
mov
icebp
mov
nop
push
loopne
hlt
fistl
dec
fs
adc
xor
faddl
or
xchg
xor
mov
push
pop
cld
pop
insl
sub
xor
mov
mov
sbb
aam
movsb
in
xchg
outsb
mov
aas
sub
addr16
fbstp
idivl
adc
mov
fiadds
push
inc
and
fcomps
or
decl
or
adc
out
lods
push
repz
sar
mov
cmp
in
das
mov
bound
out
in
adc
dec
jae
int3
lods
sub
jno
push
aaa
pshufw
jmp
cli
mov
push
push
test
adc
data16
fidivrs
scas
aaa
xchg
scas
xchg
cld
test
add
cmp
loope
mov
rorl
add
cmc
add
add
mov
mov
aas
mov
mov
pop
loope
sbb
sbb
xlat
inc
push
test
inc
pop
sbb
ljmp
mov
inc
icebp
scas
in
ja
xor
jl
and
js
and
test
mov
hlt
pop
or
test
jle
in
lods
sub
push
out
stos
push
test
sbb
inc
push
cmp
mov
mov
stos
test
inc
pop
jnp
adc
sub
inc
iret
sahf
inc
inc
pop
leave
pop
data16
inc
and
xor
sbb
hlt
rolb
adc
mov
lcall
jae
cmp
out
adc
xchg
add
scas
mov
fiadds
iret
sub
cmp
out
out
mov
sbb
push
dec
shll
pop
aas
cltd
dec
jmp
ret
sti
andb
in
inc
ljmp
adc
xor
add
das
cmp
jb
ljmp
inc
out
std
loop
pushf
xchg
mov
pop
xchg
push
dec
std
xor
andl
mov
pop
add
push
outsl
arpl
stc
sbb
aam
call
test
sti
ret
mov
cmpsb
add
lods
fbld
ja
aas
adc
das
pop
outsb
ss
iret
cld
cli
mov
pop
pop
es
les
mov
or
or
lret
jl
mov
imul
and
popf
jmp
loope
mov
addr16
cmp
or
divl
orb
movsl
xchg
mov
mov
dec
cltd
add
add
xor
or
rol
jecxz
clc
pop
sbb
sub
or
push
subl
or
rcrl
sub
mov
jae
jge
dec
sbb
xchg
adc
add
inc
js
addr16
mov
loopne
lret
aaa
cmp
test
lahf
xor
inc
pop
cmc
cmp
push
fisttps
mov
imul
inc
push
xchg
cmpsb
ljmp
jne
push
mov
mov
xor
jp
or
jge
out
aas
call
inc
repz
xchg
insl
add
out
mov
cmp
xor
in
push
pop
adc
in
jl
sbb
data16
out
mov
lock
lods
push
dec
imul
sahf
ljmp
pop
jle
aaa
outsl
test
stos
adc
pusha
gs
ds
rorl
cmp
or
aaa
cmpb
loope
dec
mov
les
mov
mov
andl
add
sub
addb
out
sbb
dec
stc
out
add
jmp
clc
xor
and
rol
pusha
loope
sub
fcompl
je
add
jmp
in
rcrb
mov
out
adc
pusha
mov
pop
sbb
push
sub
jo
xchg
mov
hlt
cmc
fsubl
jg
adc
inc
jne
out
pop
jnp
pop
test
mov
or
rorb
xor
scas
jg
adc
dec
sub
adc
xchg
icebp
dec
and
bound
pop
in
mov
sbb
push
mov
and
sbb
dec
sbb
loopne
insb
test
xor
jbe
and
aam
add
dec
ret
outsb
pop
dec
out
cmp
fwait
and
ljmp
test
xchg
push
dec
or
mov
arpl
push
mov
push
mov
fdivp
nop
loope
cmp
dec
xchg
cmp
mov
rolb
lods
dec
adc
rcr
imul
test
aad
push
sti
cmpsl
push
jecxz
inc
pusha
mov
test
iret
push
fldenv
insw
loop
adc
add
test
push
ficoms
bound
cld
adc
adc
mov
sbb
bnd
fdivs
fwait
and
cmpsl
jp
mov
xor
mov
out
cwtl
pop
jp
jg
or
js
sbb
mov
negb
or
stos
loope
cmp
dec
xchg
imul
fstps
push
icebp
hlt
pop
add
pop
cld
fdivrp
stos
lret
adc
lock
pop
jne
xchg
inc
mov
pop
cltd
test
shrb
lret
mov
adc
jge
mov
and
outsl
out
sbb
add
jg
mov
jp
ret
sbb
loope
add
cmc
add
add
xchg
dec
int3
adc
insl
mov
xor
es
scas
pop
jge
add
loopne
ss
mov
loope
daa
scas
inc
sti
notb
cmp
fsubrl
idivl
jo
scas
xor
jg
mov
sbb
aam
sbb
sti
fdivs
enter
pusha
or
push
push
jl
xor
mov
outsb
pop
jmp
out
fldt
call
les
pusha
fs
xchg
in
and
test
pop
and
in
and
repz
shr
cmp
jecxz
jo
jns
add
inc
fisttpll
shl
dec
and
je
add
lods
aad
imul
and
mov
pop
push
insl
mov
ret
cmp
and
sahf
mov
fs
inc
daa
jae
cld
popf
enter
push
pop
dec
adc
pop
int3
pop
inc
cld
add
jmp
mov
add
sbb
mov
mov
out
or
pop
je
or
fwait
inc
sbb
cmp
xchg
dec
dec
aad
mov
sub
push
stos
mov
jne
sub
stc
shr
xor
out
xor
in
cwtl
and
add
cmpsl
or
out
or
gs
push
mov
or
mov
push
mov
add
scas
aad
dec
popl
and
cmp
push
js
std
pop
pop
lret
push
mov
stos
cmp
in
clc
inc
xchg
xchg
data16
pop
dec
and
stos
mov
sbb
xlat
and
push
jae
adc
and
cmp
cmpl
sahf
jbe
popa
fcompl
sub
xor
sti
insb
jae
insl
lods
xor
in
icebp
mov
mov
fists
aas
outsb
repnz
pop
into
sti
jp
dec
inc
pop
movsb
ds
inc
cmp
jae
mov
icebp
push
jae
test
pop
pop
pop
sub
fiadds
dec
loopne
cmpsb
lahf
enter
xchg
dec
outsb
sub
adc
jg
mov
js
test
lcall
xchg
enter
sbb
mov
jo
push
jb
xchg
sub
mov
and
dec
mov
insb
mov
loope
aaa
mov
sub
out
and
jnp
leave
mov
arpl
mov
dec
in
imul
lahf
jnp
cmp
adc
cmp
adc
add
ja
xchg
adc
cmp
jl
loop
fistps
pop
sbb
sub
int
mov
daa
or
mov
push
lcall
xor
add
mov
mov
fst
add
lods
jmp
adc
mov
pop
xlat
lret
mov
in
sub
sti
xchg
rclb
add
jno
push
mov
xchg
repnz
xchg
out
movb
stc
insl
mov
push
adc
sbb
arpl
rcrl
xor
mov
fdivs
add
jbe
xor
int
stos
push
ret
jge
jbe
ds
in
jge
jmp
lret
mov
mul
add
xor
insl
mov
mov
ljmp
imull
xchg
out
jno
in
xor
adc
adc
add
test
mov
mull
cmp
out
cltd
dec
andb
insb
cli
ss
imul
pop
pop
xchg
dec
cmp
xchg
and
push
cmp
inc
call
insl
cwtl
xor
and
es
inc
mov
loope
jle
xor
dec
mov
int3
mov
mov
test
lods
or
mov
fildll
andl
xchg
xor
pushf
lock
fdiv
add
test
dec
flds
fldcw
cmp
test
mul
movsl
je
cs
lods
pop
lods
pop
jb
call
test
xchg
mov
jno
inc
sub
jae
mov
cmc
cmp
lret
jae
xor
sbb
push
loope
popf
popf
or
or
repz
pop
fnsave
cmp
scas
lds
int3
in
jns
push
xchg
jno
lret
in
test
add
dec
dec
faddp
xchg
add
xor
ljmp
xchg
jbe
fs
jnp
hlt
nop
je
cmp
ss
sahf
inc
mov
cmp
xor
int
loop
cwtl
mov
loop
or
sbb
cmp
sbb
les
pushf
add
add
cmp
cmp
push
pop
mov
lahf
and
imul
add
jl
xor
or
lds
xorb
dec
inc
jne
dec
xor
inc
sahf
mov
jb
inc
testl
mov
mov
dec
jmp
mov
pop
jae
enter
xchg
call
mov
mov
sti
add
sbb
pop
orl
mov
xchg
ret
aad
subb
push
cmc
dec
sti
mov
fistpl
cmpb
mov
aam
decb
add
jns
dec
sbb
xor
jo
xchg
sbbl
xor
mov
cmpsb
cld
in
gs
rorl
xchg
mov
jb
cmpsb
mov
in
jp
sar
subb
fsts
mov
sub
loop
pushf
hlt
pop
or
mov
sbbb
aas
pop
gs
adc
pop
mov
cmp
inc
mov
cmpsl
scas
pop
xchg
scas
fisubl
dec
cs
cld
enter
mov
jp
lahf
cmpsb
jnp
dec
inc
mov
test
icebp
or
add
imul
push
ljmp
mov
loopne
sbb
jbe
mov
mov
or
pop
add
out
lods
lock
ljmp
aad
mov
test
add
inc
icebp
xor
pop
pop
into
cld
jg
les
les
lcall
mov
pop
jl
orl
ret
test
push
sub
imul
jmp
std
arpl
outsb
es
mov
ss
lods
adc
xchg
sbb
std
ret
sti
sub
es
movsl
fs
push
movsl
xchg
mov
test
xchg
or
inc
add
rcl
stos
sub
push
mov
ret
out
cmpsl
test
cmp
sbb
decl
pop
iret
add
js
fucomp
or
pushf
incb
pop
mov
and
pusha
lods
sbb
lods
add
int
dec
inc
dec
cmp
cmpsl
lea
cmpsl
outsb
jle
dec
sub
shlb
cmp
sbb
xchg
je
xchg
pop
xlat
iret
aas
add
enter
cwtl
mov
mov
cmp
mov
inc
sub
data16
cmc
in
dec
je
sbb
mov
dec
and
in
add
or
or
mov
xchg
fwait
xchg
jg
addr16
xor
fcoms
pop
scas
or
xor
test
jbe
pop
ror
insb
ret
pop
mov
inc
add
outsl
punpckhwd
hlt
mov
inc
sub
mov
jecxz
andl
aaa
add
mov
test
jo
adc
hlt
and
outsb
mov
icebp
push
mov
adc
pop
std
lds
cmpl
pop
xorl
and
ror
filds
sbb
jb
mov
or
sub
iret
mov
popf
sti
cld
add
scas
std
cltd
xor
in
addr16
mov
icebp
and
or
add
std
lret
xchg
shrl
aas
lods
hlt
add
mov
jg
pop
push
or
jne
xchg
test
jo
and
sub
cmp
imul
adc
aad
subl
pop
xchg
nop
repz
inc
imulb
push
jmp
xchg
jbe
lcall
pop
mov
pushf
mov
add
ja
cmp
dec
fsubrs
lcall
sbb
or
inc
movsb
dec
mov
not
fldl
xchg
shrb
iret
std
mov
into
add
sbb
cmp
cmpl
fidivl
mov
mov
adc
std
ret
mov
push
jmp
rcll
adc
mov
lock
add
mov
ds
mov
inc
dec
pop
jo
jecxz
fildl
int
loopne
call
xor
xchg
shlb
negb
lods
in
repz
test
stos
fiaddl
les
inc
lds
sti
inc
imul
pop
pop
imul
es
stc
dec
jp
jns
mov
mov
xchg
push
shll
xchg
dec
gs
stos
adc
sahf
pushf
push
pop
or
stos
adc
out
jmp
xchg
lds
lods
and
rorl
enter
lock
push
jae
repz
add
sub
jg
test
out
or
lods
in
outsb
add
cmc
add
add
rclb
jb
pop
out
and
or
aaa
dec
or
dec
ljmp
xchg
cmp
mov
fcoml
push
jo
sub
cmp
pop
push
dec
mov
aaa
inc
sbb
mov
push
lds
mov
int
sbb
xchg
mov
mov
fcoml
cmc
pop
lcall
rorb
jmp
sbb
addr16
xlat
or
mov
pop
aaa
test
push
movsl
cs
lcall
mov
push
pusha
lcall
call
test
cmp
dec
dec
outsb
loopne
push
add
std
jge
movsl
fs
mov
ret
or
in
mov
adc
push
dec
loopne
into
cmpb
stc
pushf
sbb
add
jnp
mov
pop
lea
mov
adc
cmpsl
dec
mov
das
cmp
and
push
ds
aas
xchg
outsl
inc
loope
jg
popf
pop
sbb
sti
or
stos
popa
sbb
push
inc
rclb
rol
push
inc
ljmp
insl
sti
mov
push
data16
and
cltd
mov
rorb
clc
mov
dec
cmpsb
inc
test
cmp
lea
out
and
aad
xor
popf
xchg
inc
pop
lret
mov
repnz
jge
cmpsb
pop
fmull
add
movsl
push
dec
mov
int
jo
jl
and
xchg
hlt
ljmp
sbb
sahf
std
inc
out
sti
decb
adc
stc
mov
inc
dec
out
or
cmpsl
or
pop
cmp
xchg
jmp
mov
data16
or
mov
ror
push
xlat
sahf
push
xchg
xchg
clc
daa
shlb
pop
pop
les
out
dec
push
stos
xchg
addr16
xchg
mov
mov
cmp
popf
jbe
and
into
out
lahf
pop
sti
push
jnp
fstl
ret
aas
insb
lds
lcall
mov
cmp
insl
and
pop
pop
cmp
cmpsb
add
cmp
cwtl
enter
rcrb
xchg
pop
popf
mov
les
or
mov
fdivr
sbb
mov
jo
test
push
rcrb
xchg
pop
cmp
and
ljmp
call
pop
jne
rorb
jmp
jb
add
out
push
adc
cld
push
mov
test
or
rcrl
dec
xor
stos
fildl
mov
pop
dec
add
in
dec
mov
mov
or
lret
or
sahf
aas
es
cmc
les
adc
mov
js
in
pop
jecxz
add
jno
sbb
fistps
aas
rcrb
int3
mov
lcall
orb
imulb
jp
lret
sub
repz
insl
aam
push
lock
js
xsha256
cmpsb
pop
adc
xor
add
aas
or
push
leave
mov
sahf
cs
inc
dec
inc
mov
les
xor
push
jno
setns
inc
add
fwait
push
push
mov
pop
rcll
imul
xor
pop
mov
and
xchg
sbb
call
push
lret
inc
jno
xchg
push
fisttpll
cmpsl
rorb
pop
inc
mov
jg
pop
adc
ror
fnstsw
cmpsl
add
xorb
xor
dec
push
std
daa
xor
mov
sbb
cld
sbb
xor
mov
and
clc
cwtl
push
pusha
inc
test
and
inc
pop
pop
xchg
mov
push
mov
jns
pop
or
add
cmc
cld
stos
mov
push
dec
sub
add
xor
jnp
adc
mov
icebp
popf
mov
mov
sub
sub
cmc
fsubrl
lcall
mov
mov
pop
sbb
sbb
push
punpcklwd
inc
test
dec
rorb
outsl
mov
jae
sbb
scas
in
nop
rcll
sub
push
insb
jg
add
push
mov
mov
xchg
cltd
dec
loope
mov
and
adc
xchg
push
mov
lret
adcb
jno
lods
insw
movsb
cmpb
push
into
xchg
outsl
mov
pop
aad
xor
lret
repz
or
into
es
xchg
sub
jecxz
or
imul
jmp
adc
add
mulb
repnz
out
add
cld
sbb
add
add
add
cmp
insb
shrl
movsb
out
mov
into
imul
jge
or
adc
adc
or
sub
notb
ret
cwtl
and
inc
stos
dec
loope
in
in
sbb
jb
sbb
mov
fnsave
int3
fucomip
push
xor
pop
fisubl
xchg
mov
xlat
push
data16
cmpsl
insb
jmp
lret
psubusw
test
sbb
test
rcrb
push
shrl
leave
cli
inc
insb
in
jg
jbe
add
sbb
aas
movsl
dec
xor
lds
cmp
push
and
jmp
cs
fidivs
cmpsl
fs
fsubrl
movsl
fisttpl
add
xchg
test
xor
out
gs
xchg
pop
push
sbb
arpl
cmp
gs
sbb
xor
sbb
loope
add
jle
lret
sbb
shlb
and
adc
pop
decw
cmp
incl
stos
lock
scas
mov
push
pop
mov
ja
addr16
int
mov
aaa
inc
pop
loopne
jns
in
sbb
sbb
jnp
or
movsb
mov
dec
fimull
fcom
adc
ja
sbb
ret
das
int3
xor
push
cmpsl
and
inc
mov
fs
loope
xchg
inc
mov
out
push
lods
lods
test
lods
imul
lods
cwtl
push
dec
sbb
roll
jmp
jno
adc
sub
aaa
push
mov
lods
adc
pop
lods
mov
or
lods
notb
xor
push
stos
push
add
fs
push
jl
xchg
cwtl
cmp
push
out
shll
outsl
xor
repz
adc
in
in
cmp
inc
push
addr16
xor
and
push
arpl
add
xor
inc
pushf
mov
dec
rolb
xchg
out
loope
movl
push
or
push
push
sub
shll
enter
add
outsl
xchg
xlat
daa
lock
sub
movsb
adc
je
ret
sub
aas
dec
repnz
repnz
adc
mov
fsubrl
push
and
xor
rol
fbstp
mov
sub
imul
mov
lds
sbb
stos
sahf
mov
jbe
mov
xchg
lret
insb
mov
xchg
call
test
jle
mov
xchg
lea
sub
adc
in
mov
sbb
mov
push
mov
lret
cld
and
ds
mov
pusha
jne
aam
das
out
jo
cmc
mov
pop
xor
test
aaa
in
pop
ljmp
xchg
int3
orb
sub
add
int
dec
insb
jmp
push
push
addr16
cltd
dec
ljmp
mov
jmp
in
js
mov
push
cmp
add
xor
inc
xchg
dec
test
add
leave
out
xor
and
out
mov
pop
gs
in
mov
cmp
pop
pop
and
in
icebp
lea
std
movsb
loopne
add
add
sti
faddl
scas
cld
or
loopne
loop
rorl
pop
and
rorl
in
pop
dec
lods
lock
xor
and
in
jl
xchg
insl
shlb
adc
pop
xor
fwait
dec
jmp
divl
cs
int
je
fwait
inc
adc
xchg
jg
int
jg
std
rcr
test
shll
dec
xchg
xor
lods
andb
xor
pop
add
rcrb
jne
cmp
stc
jp
incl
push
into
cltd
shrb
dec
outsl
cmp
stos
lahf
push
imul
xor
sbb
cmpb
cmpl
xor
and
adc
inc
cmp
adcl
pop
push
repnz
dec
pushf
pop
xchg
les
push
shrl
pop
xor
jb
xlat
jae
adc
jle
cmpsl
jnp
lock
dec
test
aas
sbb
add
mov
adc
pop
jno
xor
aam
sarb
aam
add
jne
or
jl
sbbl
int
insl
arpl
push
loope
jg
jg
and
arpl
inc
dec
imul
jae
inc
jle
popf
cs
push
jmp
and
aaa
push
inc
jge
adc
lret
mov
popf
aaa
jnp
insl
cli
mov
jo
fbstp
je
les
in
clc
xchg
add
add
mov
mov
add
rorb
js
add
add
add
mov
stc
cmpsl
jo
jmp
popa
mov
stc
rclb
dec
dec
and
jp
and
faddl
ficoms
pop
dec
lret
rcrb
jno
gs
or
mov
pusha
mov
pusha
je
out
imul
lcall
xchg
inc
inc
sub
cmpsl
fldenv
les
es
clc
dec
dec
icebp
fwait
insl
inc
pop
lods
aad
and
mov
jp
mov
jo
dec
mov
cwtl
sahf
into
loopne
lds
mov
ret
mov
sub
jo
int
ret
adc
mov
mov
adc
inc
mov
push
mov
jb
sub
jge
sbb
pop
adcb
xchg
test
in
jmp
imul
loopne
int
sti
adc
ss
push
inc
jl
sbb
cltd
iret
sbb
daa
mov
icebp
aad
scas
enter
xlat
sahf
int3
mov
pop
fdivrs
fldcw
data16
ja
dec
pop
sbb
sarl
dec
push
push
jae
dec
dec
loope
fwait
pop
push
fldt
scas
stos
jg
lahf
sti
or
in
add
pop
stos
sti
cmpb
mov
stc
xor
fwait
mov
je
and
mov
cli
adc
mov
push
pop
cwtl
sbb
das
jns
cmc
lock
xchg
test
ror
popf
jmp
scas
incb
aam
jnp
adc
dec
inc
insl
push
lock
mov
test
mov
push
clc
dec
sarb
push
pop
inc
xchg
xlat
pop
popa
das
inc
fisubrs
sub
movsb
fsubrs
mov
xor
pop
pusha
xchg
xchg
divl
cmp
into
mov
fmul
dec
cmpsb
inc
mov
gs
add
inc
mov
cmp
mov
pop
add
cli
sarl
push
adc
jmp
lea
fdivrs
int
push
es
cld
adc
or
and
bound
adc
inc
sub
dec
ds
ret
add
rclb
push
call
out
mov
out
jne
jg
jbe
xor
mov
ftst
int3
adc
fisubl
mul
cwtl
in
jnp
cmp
cld
test
sbb
xchg
fisttpl
lret
mov
jae
lret
lret
js
fs
fmuls
cmp
fistps
es
xchg
out
mov
repnz
imul
cmp
test
ljmp
mov
jbe
ffreep
ljmp
mov
fnstcw
iret
jnp
cld
jp
dec
scas
push
inc
sahf
fistps
or
jecxz
xor
mov
hlt
scas
jne
in
mov
jne
in
mov
jl
and
adc
fiadds
xchg
xchg
jl
int3
dec
ljmp
mov
arpl
push
ret
fimuls
inc
nop
jb
int3
dec
jmp
push
sahf
pop
outsl
inc
adc
lcall
jb
adc
jbe
and
fmuls
inc
gs
jle
pop
loop
lret
xor
std
repz
mov
fistpl
fwait
inc
dec
stos
cli
mov
adc
xor
jno
cmp
jns
lods
aad
cmp
leave
dec
fs
cmp
fiadds
insb
rcrb
jp
aad
pop
adc
int
cmp
cmp
and
push
ret
mov
inc
mov
movsl
in
pop
cs
ret
cwtl
dec
jae
jge
xchg
jae
mov
aaa
add
ret
xchg
out
xchg
imul
popl
or
sbb
adc
jnp
sbb
stc
cli
pusha
addb
mov
mov
xor
dec
push
adcb
shll
mov
mov
ja
lcall
mov
aam
rcrb
mov
cmp
sbb
adc
lret
insb
cli
xchg
xor
nop
scas
cs
scas
xchg
fmulp
sti
sub
pop
inc
mov
popa
sub
push
cmp
jmp
repnz
jns
dec
cmp
jecxz
fldl
icebp
int
mov
xchg
cld
sbb
nop
shrl
mov
dec
aas
xchg
loope
rcrb
cmp
push
cs
jae
and
xorb
lods
loop
in
lret
push
xor
cmp
into
pop
imul
sbb
inc
push
fidivl
push
leave
pop
pop
or
push
add
movsb
sbb
mov
jne
bound
lret
xchg
adc
call
add
xchg
test
push
mov
and
das
fs
add
add
add
add
push
sub
sahf
call
sub
mov
jb
fincstp
lods
dec
xor
repz
aas
dec
lret
dec
mov
mov
xchg
xchg
jp
imul
sub
lods
or
cmpsl
es
mov
stos
negl
aam
test
xchg
pop
mov
imul
mov
mov
daa
push
ja
push
je
movsb
xchg
sbbl
xchg
mov
mov
pop
int3
gs
mov
jb
adc
repnz
ret
cli
movsb
out
ds
jno
mov
pop
es
inc
fsubrp
popf
icebp
push
jae
inc
arpl
dec
push
push
jne
pop
mov
fcom
jle
sbbb
mov
cld
inc
dec
into
mov
jbe
dec
sbb
adc
jg
out
push
mov
aas
jg
cmp
push
cmp
xchg
bnd
xchg
jge
test
arpl
inc
mov
mov
enter
cld
test
enter
fidivrl
xor
inc
xlat
outsl
out
adc
push
xchg
insl
std
in
inc
sbb
mov
aaa
xor
or
push
cmp
push
mov
add
sbb
add
loopne
icebp
sbb
aas
push
add
adc
roll
jecxz
movsb
pop
shl
mov
cli
fistpll
sbb
xchg
ret
lods
repz
mov
aaa
fldl
inc
scas
adc
mov
xlat
add
push
fstl
shlb
xchg
pop
ss
push
test
in
inc
add
ljmp
fstps
xchg
and
xor
cmc
lcall
jne
mov
xor
pushl
cmpsb
rclb
push
xor
mov
jno
daa
mov
sub
jne
insl
or
jnp
xchg
outsl
scas
movsl
xchg
out
xchg
aas
loopne
xor
xchg
stos
adc
rorb
add
add
cmpsl
xchg
fwait
ljmp
enter
arpl
lret
cmp
jmp
xlat
adc
gs
cmp
jne
arpl
xor
int
adc
adc
jnp
dec
xor
das
sub
std
filds
fst
jnp
adc
fldcw
sbbl
call
pop
jno
repz
lods
mov
mov
shl
pop
test
cli
jb
int3
dec
adc
lcall
inc
test
jl
loopne
dec
ret
out
in
jne
mov
popa
dec
pop
cmp
push
xchg
bound
out
insb
inc
outsb
mov
test
sbb
or
es
popa
inc
sub
and
daa
sahf
pop
xor
pusha
add
mov
enter
mov
nop
test
adc
and
mov
ret
dec
jno
outsl
inc
adc
mov
mov
and
adc
addps
loop
mov
lods
jecxz
add
push
jl
sahf
dec
stos
aad
stc
sub
or
lahf
sbb
and
dec
insl
lfs
mov
sub
stos
push
jl
lret
sub
jnp
or
movsl
xchg
and
outsb
add
push
or
addl
sti
mov
cld
fbstp
mov
lds
or
cmpsb
orb
push
push
or
xor
inc
fsubrp
xchg
outsl
into
lret
ss
repnz
icebp
jnp
push
mov
pushf
pop
movsl
lcall
imul
cltd
mov
addr16
inc
jecxz
add
cmp
jecxz
stos
int3
dec
sub
dec
fimull
imull
dec
inc
mov
sub
sub
pop
test
pushl
inc
in
push
arpl
in
cmpb
fidivl
add
xor
lret
cs
ja
cld
add
lret
cltd
mov
lahf
aam
das
add
mov
and
fdivr
mov
cmp
insl
and
inc
das
push
dec
jnp
aas
push
dec
fadds
inc
out
insb
xchg
jnp
jae
mov
stc
sbbl
xor
decl
lds
es
inc
out
mov
mov
repz
movsb
xor
push
push
dec
mov
xchg
sahf
xchg
test
nop
jg
pop
mov
out
dec
sub
xchg
addr16
rorb
pushf
subl
sbb
push
xor
sub
ret
lods
cmp
inc
rcl
movsb
cwtl
inc
imul
stc
lret
sbb
mov
mov
ljmp
push
inc
sti
aas
jb
add
testb
clc
addl
add
cmp
mov
xor
lahf
ficoms
adc
mov
imul
mov
sub
adc
leave
mov
andl
shrb
xor
dec
in
out
out
cmc
xchg
inc
and
mov
mov
pop
inc
popa
loope
sub
stos
mov
mov
inc
mov
xchg
movsb
roll
jnp
and
inc
movsl
ret
adc
pop
fwait
inc
push
sub
inc
dec
aam
dec
enter
les
imul
sbb
mov
call
pop
push
imul
mov
stc
pushf
sub
and
xor
inc
loopne
popa
fildl
in
cmp
push
push
in
shrb
push
jecxz
scas
pop
bnd
jbe
xchg
lret
popa
xchg
mov
cmp
or
hlt
lcall
sub
xor
sub
sbbl
mov
dec
cmc
clc
shl
cltd
and
xor
fs
int
int3
sub
lret
sbb
incb
and
std
dec
lods
jns
fdivrl
flds
sub
or
rcr
bound
lret
scas
rcrl
sbb
add
cmp
dec
push
enter
les
dec
dec
mov
fs
leave
out
mov
mov
ret
fsubs
sbb
push
popa
call
xor
lock
rcr
inc
push
fisubrl
push
imul
jle
push
jmp
ja
push
sbb
popf
lock
mov
sbb
test
push
lods
pop
adc
ja
jns
test
cmpsl
xor
out
sti
sub
cmp
sbb
adc
lcall
mov
int3
sbb
cmpsb
imul
and
adc
test
lea
iret
ret
and
jp
loop
adc
int3
and
pop
xor
jne
xor
adc
ds
mov
or
push
int
hlt
mov
mov
daa
test
enter
dec
les
ret
pop
xor
stos
push
xchg
xchg
inc
cmpsb
fcomps
ret
cmpsb
sbb
mov
imul
cmpsb
jb
push
scas
cmp
xor
imul
stos
jno
cmp
sbb
jl
clc
aaa
arpl
xor
ss
mov
mov
call
sbb
ds
mulb
xor
repnz
xor
int3
pusha
jmp
xor
jg
add
stos
xchg
mov
sub
mov
fildl
add
das
nop
icebp
adc
pop
sahf
mov
inc
sbb
insb
mov
push
test
lcall
cmpsb
mov
cs
add
pop
je
notl
stos
mov
mov
pop
vmovq
sub
sahf
sti
cmpsl
and
and
jmp
adc
inc
jle
mov
mov
or
mov
and
aad
pop
int3
mov
xchg
and
cmpsl
es
and
xchg
xchg
outsl
pop
adc
xchg
jmp
sub
fwait
jo
adcl
push
push
push
cmp
out
or
pop
push
ret
addr16
dec
movsl
les
xchg
push
int
jns
push
jns
xor
scas
in
and
push
or
sbb
and
xor
adc
or
push
mov
jl
andb
xor
xor
das
mov
pop
push
ret
mov
jb
mov
jns
xchg
scas
shlb
jne
cmp
xchg
xchg
push
cmp
push
mov
adc
cmp
mov
pop
push
das
sub
and
add
rclb
in
xor
in
lret
or
ds
js
hlt
mov
aam
xchg
push
setbe
mov
fstpl
iret
in
pop
jnp
mov
inc
mov
push
dec
cmpb
clc
or
insl
pop
xchg
dec
and
test
xchg
xchg
pop
bound
xchg
sbb
clc
mov
test
sbb
stos
into
rolb
sbb
loope
pop
mov
ja
push
pop
stc
imulb
out
xchg
ret
imul
mov
iret
mov
frstor
add
jb
xchg
push
int
add
js
aas
sarl
fs
or
idivl
cmp
js
ljmp
adc
inc
shrl
cmc
pop
dec
add
add
jge
mov
or
test
cmc
add
add
rorb
lods
fs
adc
das
ret
cmpsb
cli
adc
adc
push
dec
movsl
insl
or
lods
lods
xchg
scas
push
test
jae
add
notl
dec
andb
xor
mov
pop
cltd
inc
fsubrs
ret
push
ss
jnp
and
dec
jg
push
jmp
xor
mov
sub
inc
xchg
mov
pop
pop
aas
imul
mov
push
cmp
xchg
cmp
mov
dec
mov
sub
loopne
call
add
mov
rcrl
dec
das
clc
mov
cmpl
pop
pop
sub
pop
xchg
inc
in
push
pop
mov
gs
cmpsl
push
stc
imul
xchg
daa
sbb
addl
mov
out
adc
pop
mov
lahf
jae
cmpsb
push
xchg
mov
mov
nop
ds
loope
mov
bound
adc
rolb
out
decb
fisttpl
fistpll
mov
adc
jmp
pop
or
and
adc
movhps
fwait
gs
jecxz
fldcw
push
pop
cwtl
lea
shrl
pop
es
add
xchg
pop
sub
xchg
aad
loop
xor
movb
in
popa
sub
std
pop
mov
cmp
mov
pop
movq
loopne
iret
or
fsubl
ds
mov
xor
sahf
mov
xor
and
sub
jp
fdivl
sti
xchg
jmp
cmpl
mov
pop
dec
or
andl
add
lahf
popf
out
pop
cltd
into
push
clc
das
adc
push
add
stos
lock
cmp
aas
jbe
scas
adc
addr16
pop
dec
ss
cmpsb
mov
cld
ud1
jns
pop
sbb
pop
cmp
enter
in
cmp
sti
push
test
push
lret
mov
sbb
les
cltd
cmp
and
push
leave
aam
cmpsb
pushf
adc
lret
test
push
or
loopne
xchg
out
lock
cmpsb
xchg
imul
outsl
inc
xchg
cmpsl
dec
mov
dec
xchg
outsb
jb
das
xor
or
fdivrs
push
adc
js
dec
sub
pushf
repnz
inc
call
sbb
popf
jmp
pop
mov
jmp
call
fcmovbe
xor
sbb
add
push
clc
pop
mov
lea
out
sahf
shrb
icebp
lods
call
jle
dec
push
enter
out
inc
lret
je
shl
dec
and
loop
imul
sbbl
push
in
push
mov
jmp
ret
jmp
adc
stc
fs
pusha
int
mov
addr16
lods
add
xor
pop
push
sub
andl
sbb
aam
jnp
pop
je
int3
mov
cs
aaa
test
fcoms
jecxz
xchg
xchg
imul
or
jecxz
lahf
in
pop
loopne
lcall
fdivp
cmpl
cmpsl
add
gs
in
outsb
lret
incl
jbe
rclb
mov
repnz
cli
test
lahf
cmp
in
add
ret
mov
stc
xchg
lods
nop
call
push
push
inc
cmpl
mov
add
mov
sub
fs
xchg
mov
inc
mov
mov
sbb
dec
mov
int
fdivrl
xlat
or
jne
adc
mov
jg
xchg
stos
pop
ss
jbe
fwait
xor
mov
adc
xchg
aaa
xchg
clc
adc
lods
adc
mov
clc
xchg
cli
cmpl
ljmp
fmuls
pop
cmp
cmpsb
sbb
fisttpll
mov
push
rcl
sub
jle
fsub
xor
adc
enter
mov
dec
push
rol
cmp
mov
cli
adc
movsb
sbb
movsl
std
xchg
fnstsw
mov
xor
mov
push
pop
xchg
adc
jbe
pop
jb
cmp
enter
push
inc
mov
dec
sub
or
xchg
mov
cs
and
mov
loope
pusha
dec
loope
push
xchg
push
dec
lahf
and
and
xor
iret
adc
pop
mov
cmp
mov
add
add
add
dec
add
lea
pop
add
pop
aas
add
mov
dec
add
xor
shll
pop
or
xchg
cmp
cltd
sbb
out
or
out
int3
jb
test
pop
xchg
sahf
lods
jmp
add
push
cmp
jl
pop
les
xchg
scas
cmp
lds
repz
pusha
mov
pop
iret
or
test
inc
mov
xor
sub
in
fwait
or
incb
popa
ljmp
je
push
or
mov
hlt
dec
mov
sub
jbe
js
divb
xor
xor
mov
dec
inc
sub
xchg
out
jl
push
and
cltd
adc
mov
jne
fcmovnu
mov
sub
pop
and
or
xchg
in
xchg
leave
test
je
cld
jns
mov
push
rorb
adc
ret
jns
ja
sbb
inc
sbb
and
dec
push
cmp
daa
divb
push
and
add
test
sub
int3
insb
inc
fs
rclb
pop
das
pop
inc
mov
add
fisubrs
or
fisttpll
shr
adc
and
mov
cmp
movsb
xlat
jg
fnstcw
imul
add
andl
jp
nop
ljmp
dec
jne
bound
aam
ficoml
xor
ret
mov
pop
rolb
or
sahf
outsb
or
sbb
and
movb
arpl
arpl
and
mov
push
jo
mov
pop
roll
sub
outsb
int
out
or
and
adc
wbinvd
push
or
test
pop
ret
cmpsb
cmovae
imul
inc
jb
push
push
jns
mov
dec
test
cmpsl
add
cmp
cmpsb
sbb
add
leave
fdivl
jnp
jge
dec
xchg
loope
xchg
or
sub
lods
negb
nop
cmp
test
es
sub
mov
xor
cmp
es
mov
add
std
leave
and
xor
test
or
fadd
hlt
add
movsl
add
adc
mov
shll
jmp
stos
das
loop
arpl
cltd
and
adc
mov
jge
mov
dec
scas
call
and
and
and
or
sbb
pop
mov
fmull
and
add
sub
popf
fbld
sbb
in
mov
xor
pop
sbb
in
xchg
cmp
pusha
push
mov
mov
mov
jle
ret
out
sahf
cld
imulb
jb
jno
inc
push
fstpl
cmp
push
int
mov
popa
inc
add
lods
pusha
pop
pop
xor
xchg
popf
sbb
lea
loop
shrb
popf
hlt
test
jmp
push
pop
mov
rorb
stc
cmp
or
xchg
addr16
sti
cwtl
and
lea
lret
movsb
jmp
dec
xchg
leave
ret
icebp
bound
sarl
incb
push
loopne
and
xor
mov
xchg
cmp
xor
adc
and
sbb
dec
inc
cmp
or
test
cs
or
leave
push
aam
lahf
cwtl
sub
aas
xlat
daa
sub
xor
cli
mulb
jmp
fildl
add
daa
test
mov
fs
sbb
xchg
lods
fmuls
out
lea
dec
xor
adc
mov
test
and
aaa
mov
into
push
cmc
aam
ret
rcrb
xchg
pop
ja
add
cwtl
pop
fdivr
mov
add
arpl
xchg
loop
sbb
xchg
test
and
add
and
pop
pop
aas
xor
pop
sub
hlt
clc
das
orl
das
cmp
movsl
inc
dec
cmp
and
clc
sbb
cwtl
notl
sub
loope
push
mov
nop
sbb
adc
pop
scas
aad
mov
in
push
xchg
inc
jbe
add
or
jg
in
repz
fldl
and
fbstp
rolb
mov
jbe
jbe
adc
inc
in
jle
adc
les
jl
or
daa
pop
out
xor
test
add
sti
and
es
sti
std
sbb
adc
xchg
xlat
nop
add
cmc
add
add
fnclex
or
dec
xor
xchg
jl
add
divl
in
ret
or
aam
hlt
jle
sbb
xchg
jle
ljmp
fisubl
bound
jge
movsb
jns
pop
test
loope
cld
test
add
jb
pop
fildll
adc
add
cmp
loope
cld
xor
pop
hlt
out
push
mov
inc
xchg
inc
fisttps
popa
dec
leave
push
pop
cmpsb
jae
insb
push
or
adc
sbb
xchg
adcb
push
test
ss
call
test
mov
daa
mov
and
xchg
gs
pusha
ja
out
popa
fstpl
mov
cld
push
mov
das
cwtl
aam
lcall
shr
lret
pop
and
mov
pop
sub
mov
nop
in
fcoms
gs
sbb
into
repz
jo
lods
xor
mov
jo
fcompl
std
xchg
in
sbb
push
scas
pop
and
stc
jbe
cmp
jmp
cli
cs
ror
fstps
sub
mov
or
sub
mov
sbbl
dec
mov
pop
shr
dec
sub
pop
call
adc
xchg
cmp
cld
jae
sbb
lret
ja
repz
push
sbb
cmp
push
push
loope
or
into
push
cmp
lret
sbb
sahf
cs
inc
xor
lds
jne
repz
shlb
popf
xchg
fs
js
lock
push
aam
pop
sbb
dec
gs
mov
insb
fisubl
addr16
jp
mov
in
ljmp
repnz
pop
fisttps
mov
and
cmc
dec
mov
pop
je
jg
dec
rcrb
cld
dec
adc
insb
movsb
push
lods
cmp
mov
push
cmpsb
daa
adc
pop
sahf
pop
push
mov
pop
ja
mov
lods
fnstsw
ret
adc
xor
jmp
or
inc
repz
cmp
mov
fdivs
pop
mov
lcall
xchg
jns
xchg
aam
mov
shll
mov
or
dec
lahf
das
das
test
xor
ss
jge
addr16
push
sahf
imul
add
sbb
test
add
cmc
stos
fstpl
inc
push
stos
enter
xor
jl
loop
clc
movlps
loope
inc
mov
je
jno
je
clc
push
push
dec
jae
pushf
test
xchg
and
cmp
add
lods
shl
lock
into
inc
cmove
inc
cs
pop
jmp
pop
sbb
data16
push
shlb
outsb
aaa
sbb
or
sub
stos
mov
mov
movsb
hlt
xor
jg
xor
popf
xchg
insb
test
inc
lods
or
xchg
arpl
mov
in
mov
repz
dec
jns
pushf
sub
jb
jp
cs
js
sbb
sub
sbb
test
pop
sub
fdiv
xor
inc
shrl
push
inc
dec
xor
out
jb
notl
cmp
xchg
lret
rolb
inc
jg
pop
mov
sbbl
and
scas
sub
testb
cld
cmpsl
mov
imul
adc
fs
add
fisubrs
inc
mov
loope
sub
inc
decl
pop
outsb
xchg
cmp
fsubs
sub
mov
cs
dec
scas
mov
xchg
pop
adc
out
dec
fstp
inc
xchg
dec
rol
mov
in
pushf
sub
cmp
jnp
jno
js
cmp
add
and
sbb
mov
jbe
push
and
test
or
or
sbb
sub
rclb
sti
or
jmp
cmp
cmpsl
mov
mov
xchg
addb
imul
enter
repnz
fcoms
lods
and
out
add
or
jmp
icebp
jle
sbb
sbb
cmp
scas
stc
insl
xor
lods
cmp
lds
mov
cmc
add
mov
lods
add
push
lret
xor
ret
cmp
push
add
addl
js
sbb
repnz
cmpsb
pushf
add
sub
mov
adc
ds
mov
out
out
arpl
jb
cmp
inc
outsl
lcall
adc
sbb
int
push
cmp
fdivrl
out
mov
mov
rolb
sbb
andl
jb
inc
cmp
lret
push
lret
in
ds
and
add
sbb
jg
lcall
int3
xchg
add
cmc
add
add
call
ds
sub
and
ja
push
sub
pop
or
mov
push
shr
push
mov
mov
add
xchg
pop
in
mov
and
jne
cli
shrb
jnp
jp
iret
test
xchg
pop
cmpsl
jmp
ss
mov
sbb
xor
jo
dec
push
insl
jecxz
scas
int3
and
iret
mov
inc
push
dec
mov
inc
repnz
xlat
ficompl
call
or
inc
mov
mov
pop
xchg
out
imul
insl
les
fisttps
movsl
sub
cltd
dec
ja
pop
lcall
movsl
push
xchg
mov
jmp
push
scas
int3
mov
dec
in
sbb
scas
repz
mov
in
or
mull
inc
aas
pop
jl
mov
nop
or
adcl
decl
sbb
push
cmp
adc
sbb
mov
mov
popf
jmp
sbb
testl
repnz
lods
sub
repnz
lahf
mov
test
sahf
aad
jb
mov
mov
mov
es
xor
orl
cmc
sub
push
inc
mov
out
daa
jmp
and
loope
inc
test
sub
loope
inc
js
mov
adc
test
es
gs
in
mov
jp
bound
insb
dec
in
inc
mov
or
adc
lahf
adc
and
mov
jge
mov
adc
mov
sbb
jae
movsb
jbe
cld
jae
daa
arpl
mov
inc
mov
xor
call
sbb
xor
mov
jle
jge
and
and
insb
ss
and
and
jo
mov
mov
jg
cmc
push
or
out
ss
into
pop
mov
fcomp
push
xor
dec
pushf
jae
in
clc
repnz
pop
sahf
js
leave
xchg
inc
mov
movsb
xchg
fimuls
pop
cmp
cmpsl
or
push
iret
push
addr16
in
sahf
xchg
xchg
or
out
cmp
adc
movsl
jle
loope
push
jns
and
xor
cli
stos
sbb
xor
ljmp
or
add
sbb
pop
inc
decb
not
jno
mov
cltd
popa
orl
es
mov
test
xor
or
xchg
add
icebp
je
dec
pop
loopne
std
ss
rcll
popa
enter
add
shlb
mov
outsb
mov
mov
lock
je
test
sub
fidivrs
push
movsb
test
aad
xor
insl
cwtl
mov
cmp
ficoms
hlt
xchg
push
pop
jns
add
mov
test
jge
pop
dec
mov
xor
gs
xchg
fdivrs
push
out
mov
push
outsb
jl
enter
scas
jbe
mov
and
jnp
mov
xchg
repz
mov
les
push
jl
fldl2e
push
or
sub
decb
outsl
xor
mov
jno
jle
cmc
xlat
ret
movsl
dec
add
xchg
adc
push
cmpsl
mov
popa
out
mov
mov
repnz
mov
mov
sarb
and
mov
shll
dec
xor
xor
cmp
stos
xor
insl
cmc
mov
mov
out
ss
xchg
fucomip
mov
mov
dec
ljmp
ret
fs
xor
push
out
movsl
mov
cmp
loope
pop
lods
xchg
and
test
xor
mov
outsl
xor
adc
aam
call
int
inc
das
xor
ficompl
push
jbe
pop
sub
icebp
or
pop
and
inc
ret
cld
push
inc
dec
lret
aaa
pop
jp
mov
inc
stc
popfw
sbb
mov
notl
adc
adc
add
lcall
jae
adc
push
and
mov
inc
movl
hlt
dec
nop
nop
mov
nopl
jle
fnsave
xor
push
div
sub
mov
mov
pop
mov
sub
jnp
cmp
daa
cmp
pop
or
dec
jb
jmp
stos
jbe
icebp
mov
sbb
xchg
lcall
arpl
sbb
dec
mov
add
sbb
xor
sub
pop
pop
pop
addl
test
punpckldq
xchg
fiadds
test
mov
cmp
add
cmp
pop
sub
stos
jns
dec
sub
aad
lods
xor
cmc
add
add
sub
daa
ficoms
pop
test
push
in
push
movsb
mov
out
or
add
enter
sbb
inc
dec
in
and
fwait
aad
mov
loopne
cmpsb
or
mov
in
adc
cmp
fistpll
mov
inc
add
int3
adc
hlt
in
xor
fcompl
mov
mov
mov
scas
in
jmp
cmp
imul
or
movsb
inc
mov
jge
stos
popf
xchg
movd
test
mov
push
dec
or
push
fs
repnz
push
jne
adc
inc
lods
xchg
bound
and
jmp
and
sub
out
andl
mov
push
cmp
dec
cmpsb
push
pop
pop
push
sbb
xchg
cmpl
jno
test
mov
cmp
rorb
or
mov
es
adc
jno
or
push
setns
ss
and
mov
xchg
mov
rclb
mov
sarb
push
jo
neg
cmp
sti
int3
mov
jecxz
pusha
mov
push
outsl
inc
movsb
mov
sbb
loopne
jns
xor
test
hlt
adc
dec
mov
sbb
sbb
out
in
jb
push
mov
outsb
cltd
test
insb
mov
gs
cmp
lea
in
push
sbb
push
ljmp
jmp
or
fucom
inc
fs
mov
leave
js
mov
inc
mov
addb
cmp
sub
adc
cli
cmp
test
jle
les
jg
jns
pusha
mov
dec
mov
pop
cwtl
or
inc
or
push
mov
movsl
xor
push
dec
mov
inc
cmp
mov
shl
aas
sahf
dec
lcall
or
cmp
mov
int3
fsubl
aad
je
shlb
inc
sbb
push
insb
jmp
xchg
cmc
inc
sub
dec
jle
xchg
inc
sub
xchg
jae
std
arpl
add
pop
fcmove
enter
mov
and
pop
mov
loope
xchg
stos
mov
xchg
ljmp
test
stc
pop
mov
sub
aaa
mov
scas
mov
cmp
cld
scas
cmp
inc
add
cmp
mov
mov
add
andl
or
lea
jo
dec
test
leave
in
sub
cmc
loop
inc
cs
dec
add
mov
push
mov
mov
lahf
scas
mov
shl
pop
sub
mov
dec
inc
xchg
cltd
cmpb
sarl
je
inc
sub
das
push
icebp
sbb
mov
nop
mov
pop
inc
mov
test
inc
rcll
pushf
and
daa
jle
repnz
std
push
ds
sbb
outsl
xchg
cmpsb
mov
xor
es
lods
or
or
push
lret
std
stos
cmp
xchg
sub
into
adc
test
cltd
inc
sub
mov
xchg
fisttps
mov
or
sbb
and
mov
lea
fistps
sub
pop
andl
inc
fldenv
lret
addr16
or
and
sbb
push
xorl
cmp
fsubrl
popa
insl
xor
out
pop
rolb
rcrl
mov
xchg
ds
movsb
hlt
sbb
lcall
in
xchg
cmp
popf
jg
xchg
int3
xchg
pop
notl
sub
aam
sbb
adc
icebp
add
aas
dec
out
out
cld
mov
int
pop
sbb
cmp
mov
clc
gs
aaa
jno
es
scas
push
jle
lahf
xorl
popf
adc
inc
fldcw
push
push
push
sbb
push
inc
jl
mov
pop
mov
pushf
scas
int
aaa
dec
int3
inc
push
jmp
or
sub
cli
xor
cmp
sub
mov
sbb
inc
jmp
aas
enter
lret
rolb
mov
fcomp
bound
lret
outsb
xchg
out
sub
add
pop
inc
cmp
pop
out
or
inc
mov
cmpsb
enter
lret
add
ss
subb
adc
jl
inc
pusha
pop
xchg
xor
pushf
add
imull
pop
jae
add
add
adc
dec
jge
xchg
outsl
jge
lcall
add
cmc
add
add
pop
or
push
scas
xor
dec
pushf
sub
in
stos
ja
outsl
sub
jl
push
and
pop
rolb
lret
insl
hlt
test
out
test
aam
jae
inc
adc
xchg
rorb
ficoms
orl
into
mov
stos
sub
inc
aaa
aas
or
add
stos
sbb
mov
mov
lds
fists
mov
jg
push
nop
lods
insl
push
mov
mov
cmp
add
lahf
out
nop
movsl
dec
outsb
test
test
mov
popa
call
out
mov
pop
adc
mov
je
add
add
rol
add
push
mov
xchg
mov
xchg
ret
xor
push
loope
adc
mov
cmp
dec
and
cmpsl
push
add
mov
pusha
push
clc
push
xlat
mov
xchg
cmp
imul
cmp
cmp
fadds
xlat
fldl
std
xor
or
call
jno
mov
arpl
cmc
int
cmpsb
cwtl
bound
out
push
js
mov
test
shr
sub
push
mov
pop
jo
jo
mov
jmp
out
cmpb
mov
push
mov
outsb
cmp
pop
imul
jb
sbb
pop
adc
add
loopne
xchg
movsl
push
sub
cmp
add
pop
mov
push
pop
push
push
push
aad
das
jmp
das
loope
dec
ret
ret
push
and
xor
push
test
bound
and
popf
sti
aam
rclb
fdivs
imul
lahf
dec
subb
xchg
in
xchg
sahf
aas
cmpsl
mov
dec
std
out
xchg
out
popf
lock
jmp
mov
daa
mov
mov
mov
scas
sub
cmp
subb
add
xlat
mov
push
movsb
mov
jge
fbld
add
shr
jnp
orl
jg
mov
in
lret
psllw
mov
hlt
loop
xor
enter
jmp
adc
ss
or
int
xor
ja
shlb
fisttpll
gs
mov
push
sub
xor
cmp
sub
xor
xor
bound
and
or
loopne
inc
cmp
inc
mov
nop
clc
mov
jecxz
addb
xchg
test
dec
insl
jo
ficoml
xor
push
mov
sbb
dec
lcall
sbb
lret
jmp
dec
push
jbe
xchg
inc
inc
push
push
sar
popa
nop
xor
into
jle
adc
and
daa
movsb
inc
push
and
jno
xchg
dec
shlb
mov
and
add
outsb
add
dec
ror
lret
add
clc
dec
shrb
leave
hlt
push
fcmovne
bound
add
fcmovnu
cmpsb
or
test
or
push
std
mov
negb
xor
into
pop
lods
loop
pop
fadds
jecxz
pushf
push
mov
xchg
push
or
cmp
sub
push
push
push
icebp
pop
jmp
hlt
enter
loope
scas
mov
jecxz
pop
add
stc
fsts
xchg
jg
addr16
dec
out
adc
pop
jecxz
push
mov
aas
push
stos
jmp
stc
mov
mov
in
iret
out
mov
loop
mov
xchg
cmpb
pop
push
push
mov
sub
mov
aaa
das
add
out
je
jecxz
push
mov
mov
inc
mov
call
dec
mov
adc
sub
push
test
push
add
push
pop
mov
lods
mov
or
mov
add
ret
lahf
and
stc
popa
orl
std
pushf
fnstcw
into
and
jp
mov
jl
call
das
mov
xchg
dec
pop
jle
mov
sbb
add
inc
into
or
loop
sub
inc
leave
and
cmp
cwtl
popa
aas
mov
out
cmp
dec
add
js
mov
dec
push
push
aaa
clc
or
dec
fwait
sub
rolb
icebp
hlt
mov
in
mov
orb
and
out
sbb
jne
push
dec
pop
int3
jae
pop
aad
sub
jbe
sahf
jmp
push
rep
mov
push
or
shrb
popa
lods
insl
lea
mov
mov
in
sub
fnstenv
or
mov
aaa
outsl
push
mov
shll
dec
jl
jmp
and
jnp
add
xlat
hlt
push
ljmp
sub
cmp
stos
movsb
add
cmc
add
add
xchg
push
rorb
lcall
mov
inc
call
movsb
sbb
data16
mov
test
leave
push
jmp
icebp
push
jbe
jb
xor
jns
jg
sahf
xchg
or
jle
ret
and
lods
jp
loop
stos
fcomps
stc
push
cmpsl
push
push
imul
inc
mov
mov
outsl
rcl
in
cmp
fdivl
in
movsb
mov
xchg
aas
js
push
popf
jle
movsb
lcall
loop
mov
scas
ja
mov
in
cmp
xor
add
cmpsl
daa
xor
push
pop
push
or
dec
iret
mov
mov
pop
outsl
push
lods
pop
std
jnp
inc
xchg
jae
inc
dec
and
lahf
and
cmp
push
mov
daa
roll
stos
pop
jnp
sbb
shrb
fnstsw
or
or
mov
push
dec
push
je
fsubrl
mov
repz
sub
adc
push
xchg
inc
fstpt
movsl
mov
pop
mov
jge
scas
cmp
cmc
sub
insl
cmp
std
dec
scas
push
xor
mov
jg
sbb
dec
ljmp
sub
aad
jb
out
fldenv
adc
dec
fnstsw
mov
push
xchg
imul
xor
sbb
jecxz
ss
push
lods
aam
mov
inc
dec
in
sub
popf
sar
sub
fcomps
jmp
dec
mov
sub
frstor
movsb
shll
add
cmp
jg
test
outsb
lock
enter
jb
or
je
lcall
test
mov
repnz
ljmp
testl
cmp
push
dec
push
or
sub
inc
mov
mov
repz
mov
sbb
popa
mov
mov
mov
loop
and
xor
xchg
mov
pusha
xor
mov
inc
and
add
cmp
popa
and
pusha
jp
fistl
stos
add
xchg
and
test
lcall
jb
flds
pop
test
jmp
nop
fdivrs
push
add
mov
and
mov
scas
xor
dec
pop
pop
lods
pop
ret
pusha
je
jae
ja
sub
sbb
add
jecxz
test
loopne
js
sub
adc
inc
loope
jecxz
cs
push
sbb
push
fnstcw
in
mov
mov
mov
xchg
pop
icebp
jg
and
push
dec
inc
movsb
push
jp
cmp
inc
cmp
dec
pop
push
subb
mov
lods
cli
jns
cwtl
mov
push
cmc
jecxz
sbb
push
repnz
pop
sarl
sarb
fistps
cmc
int
push
jl
xchg
arpl
nop
add
inc
in
repnz
push
xorl
popf
cmp
fwait
shl
cmpl
jecxz
xchg
cmp
mov
test
cmp
xor
push
fistl
adc
popf
dec
fs
scas
cli
jae
inc
imul
xchg
movsb
sbb
push
frstor
jge
pop
je
adc
test
mov
pop
leave
mov
mov
das
mov
stos
xchg
inc
sub
sub
mov
dec
daa
clc
movsb
aam
jo
imul
es
int3
icebp
loopne
mov
xchg
and
popf
nop
js
in
sbb
imull
mov
dec
pop
sbb
sarl
rclb
jae
int
inc
pop
push
cmp
jnp
mov
mov
add
ds
inc
movsb
shrb
repnz
ror
sbb
fdiv
cmpsl
pop
inc
inc
adc
les
mov
inc
cmc
sbb
sbb
xchg
mov
mov
jno
inc
cs
divl
divl
xor
xor
sbb
adc
mov
js
lret
outsb
sub
xchg
fstps
addr16
insb
mov
cmpsb
outsl
mov
arpl
pop
pop
or
stos
mov
pop
jmp
loope
les
pushf
cmp
and
test
in
outsb
sbb
mov
jbe
add
xchg
xchg
scas
pusha
push
adc
xorb
mov
mov
idivl
fstpt
dec
sub
push
imul
pop
add
push
or
scas
pop
cmc
jne
sbb
xor
repz
pop
adc
jno
in
push
mov
mov
jo
inc
std
fadds
add
cvtdq2ps
dec
sar
adc
mov
add
add
add
rcll
mov
sbb
inc
cmp
sub
push
sbb
cmp
cmpsb
mov
insl
mov
int3
decl
push
std
in
or
cmp
pop
xor
mov
mov
arpl
xchg
outsl
xor
mov
push
daa
and
mov
mov
sub
aaa
vhaddpd
mov
sub
and
enter
cld
pop
add
rcll
popf
clc
ja
xchg
cmp
in
mov
mov
subb
pop
int3
push
dec
xor
pop
js
inc
lret
push
mov
xchg
cmpsl
mov
or
je,pn
aam
push
cmp
into
xchg
lods
mov
testb
in
lods
mov
pcmpeqw
push
lock
adcl
shl
add
jb
popf
std
nop
dec
or
fldenv
jecxz
inc
push
negb
lahf
jo
mov
inc
fcmovnu
pop
cmp
inc
lods
jns
lret
jle
in
stos
mov
jl
popa
xchg
les
sti
pushf
inc
add
inc
pop
scas
fcmovne
movsl
sti
sahf
mov
loop
xchg
xor
daa
cmpsb
sahf
insb
pop
iretw
repz
rorl
imul
cmp
stc
mov
out
dec
sub
xor
aad
imul
stos
mov
stos
pusha
mov
jg
movsl
jo
fildll
ret
lods
adc
into
xchg
inc
lret
pop
push
repz
int3
or
and
mov
inc
cmpsb
in
scas
cs
cmp
cld
xor
stc
add
pop
pop
icebp
sahf
into
iret
and
push
mov
mov
lods
jl
pop
iret
jb
xchg
xchg
pop
daa
push
cmp
lahf
ret
xchg
aad
jbe
pushf
sub
les
test
push
inc
push
clc
mov
js
jne
mov
xorb
stos
ret
push
adc
push
dec
jmp
pusha
fs
mov
inc
lods
shrl
xor
lds
fisubrs
das
adc
mov
test
inc
stos
leave
into
fiadds
loop
xor
int
rcl
or
lcall
cwtl
pop
and
xor
call
mov
xchg
bound
lds
xchg
cmp
test
push
test
jae
xchg
cli
movsb
popf
jno
ljmp
andl
mov
xchg
insb
testb
lea
clc
push
and
leave
pop
push
jns
fmull
sub
inc
push
rolb
scas
xchg
xchg
sbb
sbb
push
push
fidivs
adc
and
into
mov
call
add
mov
shufps
xor
xor
push
mov
xchg
in
xor
mov
syscall
sub
sahf
int3
in
dec
jmp
pop
mov
mov
xchg
pop
lock
push
add
test
jmp
sti
imul
arpl
andb
call
add
push
mov
lds
pop
cwtl
repnz
loope
mov
cmp
roll
mov
test
push
aad
and
adc
arpl
push
xchg
push
mov
das
sub
dec
shlb
jnp
imul
pop
add
pop
je
and
scas
push
sbb
cmp
clc
out
push
shll
fsubl
sbb
loope
in
push
cs
js
call
aad
mov
push
fildl
jp
sbb
shl
out
sub
and
loope
xor
or
cmc
js
jo
pop
inc
jmp
nop
ret
pop
imul
repz
sub
jb
les
mov
add
adc
pop
enter
sub
orb
and
mov
das
adc
daa
adc
and
xchg
push
stos
lahf
idivl
mov
lea
in
or
pop
push
adc
das
stc
das
pusha
pop
das
mov
xor
daa
adc
out
fiadds
jo
ret
mov
add
xor
inc
xchg
xor
xlat
mov
scas
jecxz
rorl
push
cmp
cmc
or
cmp
pop
cli
jg
jnp
sbb
cmp
ljmp
xchg
push
dec
push
icebp
xchg
sub
pop
inc
inc
jns
adc
push
mov
xorl
adc
jge
das
out
into
xchg
pop
mov
jp
xlat
or
jno
fnstsw
mov
lds
sbb
incl
jecxz
clc
out
jl
or
orb
or
add
add
push
push
lret
mov
dec
scas
out
xchg
scas
add
cmc
add
add
fstpt
mov
int
xor
icebp
mov
adc
xor
add
test
or
sbbl
iret
push
out
cmp
sub
lret
icebp
sbb
mov
cwtl
mov
mov
popa
sub
sub
loopne
adc
addl
je
push
inc
add
sbb
fstl
aad
dec
jecxz
popf
xchg
orw
decb
mov
leave
aaa
ja
push
and
leave
mov
shlb
sbb
lret
or
loop
testb
pop
dec
sbb
in
test
add
sbb
aaa
cmpsl
loope
mov
xchg
xor
aam
pop
cmp
sub
jle
shr
mov
cmp
jo
mov
mov
pop
aas
sbbl
fs
and
loopne
repz
dec
xlat
rcll
sbb
call
test
std
xchg
pop
inc
push
mov
or
adc
loopne
movsb
rolb
push
push
pushf
lea
je
cmp
pop
dec
mov
leave
cli
inc
mov
push
int
fidivs
jge
sbb
arpl
adc
in
lds
jecxz
rcrl
cmp
pushf
inc
and
dec
pop
nop
imul
mov
mov
fwait
sbb
fcoml
push
lcall
ja
push
dec
aaa
pop
je
outsl
ljmp
push
adc
aad
fdiv
outsl
loopne
sbb
lock
test
add
pop
mov
dec
scas
fnsave
jbe
push
cmp
jmp
popl
pop
jl
bnd
movsl
mov
lds
jmp
rorl
outsl
push
call
mov
jae
ss
pop
sub
push
dec
sbb
sub
je
fdivr
insl
ds
jge
push
pop
xchg
movsb
xor
mov
fsubs
aad
rcrl
lea
test
jnp
xchg
gs
jg
mov
sub
pop
jl
push
lods
sub
movsl
mov
sub
ss
pushf
mov
ficoms
xchg
sbb
jmp
or
cwtl
fisubl
movsl
repnz
xor
cmp
pushl
dec
in
dec
fmull
rcpps
lcall
push
pop
arpl
sti
sti
out
rolb
cmp
push
ds
add
jp
add
mov
sbb
in
imul
mov
push
sbb
xor
dec
cmp
cmp
and
mov
out
imul
mov
dec
push
push
out
out
daa
inc
mov
mov
call
adc
stos
test
fwait
sbb
jbe
mov
shrl
jns
mov
daa
in
cmp
push
rcrl
lods
sub
je
xchg
mov
dec
add
data16
fistps
push
xchg
pusha
int
jmp
or
pop
rcrl
lret
in
fstl
mov
pop
stc
pushf
adc
clc
and
sub
mov
pop
arpl
jecxz
pop
jmp
rcll
rol
in
cmpsl
rclb
insl
jb
scas
push
pop
sahf
sub
sbb
add
jecxz
sub
xor
lock
and
xchg
test
dec
fcomp
int
hlt
pop
dec
and
mov
cli
inc
js
outsl
ds
mov
jg
jmp
xchg
push
andb
repz
in
not
dec
jo
sbb
arpl
repz
divb
jo,pn
inc
mov
cmp
mov
xor
jo
test
jle
test
sarl
mov
sbb
cltd
push
jne
jb
adc
mov
mov
inc
mov
dec
aad
repnz
lods
divl
enter
cltd
pop
push
or
ret
mov
add
cwtl
cmpsl
and
sub
push
inc
xchg
mov
adc
ja
mov
mov
mov
test
jecxz
inc
sbb
lods
lods
sub
out
fstpt
jg
jbe
movsl
fs
hlt
push
lods
inc
das
add
cmp
push
outsb
xchg
faddl
add
and
iret
cmc
fidivl
jbe
fcmovne
or
cld
and
gs
repz
mov
add
pop
lret
or
in
jge
shr
fwait
dec
add
jmp
mov
pop
sub
jne
add
add
daa
cmp
mov
and
mov
add
lock
out
fucomp
arpl
nop
sub
jmp
jl
pushf
test
xor
cmc
mov
ficompl
in
pop
dec
xchg
subl
sbbb
rolb
inc
ja
push
xor
stc
test
cld
jle
push
shrb
lods
dec
mov
add
cmp
dec
loopne
movb
sbb
cmpsl
pop
fldenv
mov
xor
jne
inc
xchg
lcall
and
jle
lahf
or
and
adc
cmp
data16
js
and
mov
mov
push
fs
inc
adc
inc
push
and
xor
add
jbe
fimull
fisubrs
fisttpl
loopne
gs
add
aam
or
fdivrs
test
mov
hlt
int
xor
jmp
cmp
dec
push
push
adc
jge
or
push
xchg
pop
cmc
outsl
mov
dec
or
pusha
hlt
push
xchg
orl
imul
inc
arpl
cltd
push
lea
mov
pop
add
pop
std
pop
sbb
push
sbb
loope
inc
or
cmpsb
out
mov
xor
sub
clc
rorb
pop
imul
jge
add
sub
mull
icebp
jg
pusha
iret
adc
mov
rcll
lret
sahf
dec
xorl
xchg
cmp
popa
xchg
in
movsl
adc
fadd
test
push
nop
mov
mov
js
out
push
push
out
xor
jmp
mov
mov
pop
inc
icebp
mov
out
mov
enter
mov
imul
das
or
loopne
jbe
cmc
les
mov
adc
jp
popa
pop
aad
pop
in
jecxz
mov
sub
or
pop
and
adc
pop
nop
xlat
push
movsl
mov
cmp
loope
pop
ss
sub
sbbb
lret
cmp
ja
test
push
js
and
xlat
lret
mov
xor
sti
sbb
mov
lret
mov
outsl
shlb
loop
pop
and
push
xchg
outsl
ds
mov
pop
repnz
push
sub
pop
imul
sarb
adc
pop
andb
stos
push
shrb
xchg
jge
mov
add
or
jns
jb
jg
dec
arpl
mov
pop
clc
inc
popf
mov
sub
dec
aas
mov
fiaddl
in
dec
dec
scas
loop
mov
pop
repz
xchg
cmp
jno
ret
mov
jp
pop
mov
in
cmp
push
adc
ja
push
cwtl
jmp
xlat
mov
rcrl
and
out
imull
hlt
popa
orl
mov
rolb
inc
leave
clc
or
dec
jbe
add
dec
loope
in
icebp
sar
mov
cmc
mul
pushf
cmp
xlat
sbb
xor
push
cli
cs
dec
cld
loopne
jne
sbb
push
adc
rclb
jno
call
dec
or
sbb
mov
sbb
xor
dec
aam
sbb
les
lahf
push
call
insb
lcall
adc
cli
push
out
test
xchg
scas
cmpl
jno
inc
mov
das
adc
sbb
inc
loopne
xchg
jbe
lretw
and
add
mov
out
mov
add
xchg
in
fsubl
mov
sub
sbb
scas
mov
xchg
mov
popa
pop
xchg
jns
aaa
cmp
dec
dec
sub
xor
out
cmpsb
sarb
xchg
mov
lock
repz
jecxz
fsub
xchg
test
lahf
or
insl
sub
push
mov
xchg
fdivrl
sti
icebp
dec
nop
lret
pop
add
aam
nop
not
stc
out
lds
pop
adc
mov
lahf
xchg
out
cmp
shrl
sti
mov
jo
sbb
mov
cltd
jns
das
pusha
mov
outsb
aad
mov
aas
lret
loope
jle
mov
repz
or
and
sbb
inc
cmp
jne
stc
fidivs
cli
cs
jge
sub
mov
dec
xchg
sarl
dec
notb
inc
dec
fwait
ret
test
pop
aaa
scas
jmp
jo
pushf
jno
jbe
je
pop
xchg
lea
lea
sub
jbe
repz
adc
ss
push
jmp
mov
add
inc
in
test
or
add
sar
data16
mov
out
fcmovb
adc
adc
add
cmc
add
add
mov
push
mov
insl
sbb
inc
cmpsb
popf
insl
sub
sbb
jl
dec
cmp
xor
shrb
fwait
sub
scas
lock
xchg
out
pushf
mov
loopne
lcall
fnstcw
popf
in
aas
sub
jmp
xchg
cwtl
and
cmp
negb
inc
subl
xor
xchg
sti
inc
repz
out
inc
fbld
shll
ds
bound
jmp
popl
test
adc
pop
xchg
ljmp
cli
xchg
mov
pop
std
add
idiv
mov
repz
pop
test
movsb
inc
clc
out
je
outsb
pushf
cmpsl
adc
mov
into
js
insb
dec
leave
hlt
add
add
jns
sahf
add
and
jae
movzwl
rorl
or
movsb
mov
in
mov
lea
sub
push
push
sbb
jg
fsubrs
push
inc
arpl
pusha
pop
lods
xchg
fnstenv
lods
data16
js
stos
inc
xorl
sub
imul
push
aad
sub
mov
rcrb
jmp
lods
and
mov
pop
shll
mov
ljmp
int
mov
js
dec
testl
add
and
push
jl
sbb
dec
orl
enter
mov
xchg
sbb
push
sahf
aam
mov
loope
gs
jnp
js
jno
xor
sbb
stos
je
test
ja
loop
cmovp
pushf
rcrb
cmc
cmp
xor
in
jo
xchg
pop
imul
add
push
sbb
rcrl
sbbl
movsl
cli
mov
lcall
cmp
mov
xor
int
and
push
mov
mov
adc
xor
test
andb
jne
cmpsb
jp
scas
pop
xchg
sbb
push
push
cltd
adc
push
ret
xchg
mov
jbe
test
push
ficoms
mov
aam
xor
xor
icebp
dec
cmpsb
iret
call
jns
ret
fldt
inc
mov
movsl
incl
out
lret
sbb
and
add
clc
and
orl
movsb
rorl
js
push
sbb
inc
pop
in
dec
pop
xor
inc
add
push
push
pop
or
add
xor
fiadds
outsl
adcb
fimuls
clc
xor
jmp
push
sub
sahf
adc
mov
aaa
pop
call
cmpsl
jge
inc
adc
mov
sti
lret
popl
in
sbb
pusha
add
hlt
imul
outsb
cmp
fsts
mov
inc
cmp
popa
dec
insl
sahf
push
xchg
dec
jg
int
sub
inc
xchg
arpl
mov
shr
aam
in
mov
or
fldl
xchg
jo
lock
push
push
sub
repz
pushf
cmp
xchg
jmp
push
jmp
xchg
cltd
cmp
sub
data16
loopne
pusha
inc
or
cltd
inc
lret
xor
lds
popf
outsl
xchg
dec
movsl
das
pop
sbb
add
pusha
lods
test
test
test
xchg
adc
repnz
cwtl
inc
push
in
mov
inc
bound
xor
xor
ja
nop
push
or
and
mull
lret
mov
pop
fnstenv
push
ja
sbb
adcb
lret
pop
sub
test
pop
pop
adc
fimuls
or
loopne
leave
xchg
push
pop
mov
add
cwtl
pop
mov
jecxz
push
icebp
xor
mov
mov
xor
inc
push
dec
dec
lea
stos
push
dec
cltd
adc
popf
adc
mov
xchg
cltd
fimull
pop
inc
out
jne
xor
mov
pop
aas
sahf
jno
sub
pusha
or
inc
pushf
pop
inc
jo
out
fwait
push
push
xchg
lret
cltd
push
inc
imul
pop
pop
sbb
out
out
mov
mov
push
mov
orl
jb
ficoml
sub
inc
sbb
jp
scas
ret
pop
cmp
or
iret
std
lahf
xchg
xor
sub
negl
jnp
rcl
lcall
shll
inc
pop
sub
push
mov
push
inc
jg
cmp
push
in
decl
int
sub
pop
loope
mov
dec
mov
cmp
adc
sahf
add
add
iret
cmp
outsl
jecxz
push
insl
jmp
adc
je
add
cmc
add
add
xchg
adc
hlt
xchg
add
and
and
dec
inc
cmpl
cmp
fwait
adc
repz
aad
push
or
out
cs
or
divl
jns
fistl
mov
xchg
lods
dec
bound
jge
pop
pop
pop
ja
cmpsb
push
les
cmpsb
lds
js
lea
loope
lods
xor
mov
pop
jb
leave
in
daa
jmp
aas
xor
roll
jb
dec
cs
fildl
rcrl
dec
outsb
push
fcoml
dec
js
adc
rorl
movb
lea
jbe
jae
push
es
imul
enter
add
sub
jmp
inc
push
pop
push
jle
jecxz
mov
mov
xor
clc
out
xchg
mov
xor
into
ljmp
cmp
jnp
cld
xor
popa
xor
fistpl
lret
lock
xor
popa
or
mov
adc
mov
sbb
cmp
adc
cwtl
inc
aas
cmpsl
shr
push
aam
mov
int3
addb
add
xor
mov
mov
ret
and
jbe
in
int
cmp
add
lds
out
pop
icebp
sti
aad
dec
mov
insl
and
sub
jmp
std
into
sbb
in
mov
inc
adc
fldcw
jns
add
fs
shll
fisubs
sbbb
shlb
mov
sub
in
mov
cmp
xchg
jno
fs
cmp
jecxz
scas
test
push
pop
shr
adc
sbb
xchg
repz
pop
xor
sbb
leave
and
cwtl
xor
jo
imull
into
or
sub
pop
jne
pop
adc
shl
jmp
jmp
ljmpw
and
scas
mov
scas
arpl
mov
fstl
jno
sbb
cmc
mov
sbb
inc
fstpl
bound
mov
mov
jbe
jle
popl
mov
and
xchg
mov
lea
mov
xor
xchg
movl
jle
lcall
pop
dec
repnz
push
mov
mov
xchg
mov
lret
icebp
cmp
mov
popf
std
xchg
sbb
addl
xchg
mov
mov
sub
mov
subb
iret
and
movsl
add
aaa
test
fisubrs
lahf
or
pop
aaa
leave
pop
dec
inc
pop
pop
xchg
call
xor
mov
jnp
lret
mov
jp
les
dec
stos
xchg
mov
mov
pop
cmp
loop
enter
cwtl
cmc
and
adc
xor
ss
inc
lret
test
sub
hlt
nop
cwtl
mov
mov
pushf
jno
aad
jo
adc
xchg
test
cmp
test
sbb
outsb
lock
jo
lock
cmp
rcr
or
fldenv
xchg
add
cmp
scas
fwait
mov
add
cmpb
lcall
jbe
loope
jb
mov
in
cmpsl
bound
lods
or
xchg
jbe
stos
popa
mov
lds
or
cmp
or
add
mov
stos
push
adc
lods
ret
lock
popf
add
fnstenv
jbe
pop
in
mov
les
insl
aam
sbb
push
jno
mov
sahf
mov
lret
dec
mov
enter
daa
xchg
mov
push
or
sub
mov
aam
jmp
loopne
sbb
sbb
cmp
sbbb
and
sbb
adc
fsts
int
xchg
rclb
xchg
outsb
movsl
mov
ja
das
iret
mov
mov
rclb
cmpsb
mov
bound
pop
mov
dec
pop
pop
ljmp
inc
pop
xlat
addr16
pop
cld
arpl
arpl
hlt
sbb
sbb
cmpsl
add
mov
inc
sarl
dec
add
pusha
inc
call
xor
movsl
out
xchg
mov
xorb
add
dec
xchg
sub
push
pop
pop
ds
fidivrl
int
pushf
fmull
xchg
mov
shl
push
je
cmp
sub
pop
and
scas
adc
in
stc
int
sbb
push
jge
mov
xor
out
cmp
pusha
jbe
adc
out
xchg
movsl
add
add
lea
imul
fcmovnb
jmp
adc
add
cmc
add
add
fcomip
rolb
test
jne
lcall
je
xchg
in
push
das
jb
popf
mov
scas
cmp
push
jg
pop
inc
push
mov
mov
mov
cmpsl
lret
stos
dec
xchg
mov
je
ljmp
inc
mov
aaa
xchg
mov
lcall
cli
lret
sub
sub
mov
shrl
shl
jns
jecxz
inc
pop
sbbb
popa
scas
lds
movsl
and
pop
or
add
loope
mov
push
lods
adc
insb
xchg
lods
stos
orl
fs
lcall
cmpsb
push
jne
mov
dec
jae
sahf
loope
jo
inc
stc
ja
cmp
in
cmpsl
hlt
test
and
pop
add
cwtl
lcall
lds
orl
fcmovnb
leave
cmpsb
rcrl
js
sbb
in
adcb
dec
push
mov
sub
cmpsl
cmp
and
shl
lea
dec
fdivr
fisubl
sbb
ljmp
out
ja
rolb
into
push
dec
cmp
cmp
jns
jno
test
test
dec
mov
dec
adcb
roll
mov
call
cmp
xchg
fnstenv
int3
dec
inc
lret
adc
push
adc
aam
stos
leave
incb
dec
faddl
pushf
adc
fstl
imul
bound
in
ss
scas
inc
xor
insl
cmp
cmp
hlt
dec
and
sub
or
xchg
sub
mov
lahf
filds
repz
inc
mov
push
mov
outsb
dec
adc
movsl
daa
and
pop
pusha
ljmp
mov
flds
cmp
add
jbe
scas
leave
xor
mov
cld
cmp
push
sub
lahf
push
jp
je
xchg
movsb
shrb
pop
sub
pop
mov
pop
mov
and
inc
add
stos
cmp
lret
js
sub
dec
bound
jne
mov
lcall
jge
ror
js
add
iret
xlat
add
and
jmp
mov
mov
in
inc
inc
xorb
inc
ficoml
out
imul
pop
fstpt
dec
xchg
test
mov
sbb
push
cmp
push
pop
insb
sbb
js
mov
jne
and
inc
lods
stos
xchg
dec
aam
dec
jno
pop
cmp
stc
xchg
fcomps
iret
insb
pop
popf
ret
cmp
fdivl
stc
repnz
sbb
jae
mov
xchg
rol
inc
imull
out
out
or
sti
sub
jo,pn
data16
outsl
mov
nop
push
mov
je
cmc
outsb
mov
sub
xchg
sub
mov
and
gs
rorl
rol
push
cmp
sbb
lcall
int3
in
call
jno
outsl
mov
dec
mov
lea
pushf
cmp
push
lock
cli
bound
xchg
mov
inc
movsl
jp
inc
sahf
addr16
dec
in
jge
jge
mov
out
jb
mov
popf
std
daa
mov
imul
or
mov
stos
sub
inc
test
je
mov
cmpsl
mov
cltd
lcall
cld
dec
repnz
jle
xor
mov
daa
out
push
dec
cmp
ss
addr16
xchg
sub
test
or
test
ret
jg
in
lahf
roll
mov
inc
mov
adc
stc
lret
stos
xor
add
ss
adc
sub
ss
jb
push
sbbb
mov
or
shrb
add
mov
test
pop
repnz
in
cmp
inc
xchg
jg
pusha
data16
popf
in
sbb
and
and
stc
xchg
jge
mov
xchg
fimull
out
into
orb
add
jb
xchg
push
xor
xor
adc
jl
shrl
popf
cmp
shrb
or
xor
std
aad
sub
rol
sub
clc
sub
jae
inc
imul
mov
xlat
ja
inc
inc
les
xchg
jbe
ljmp
xlat
stos
fstl
mov
dec
cwtl
push
jbe
movsb
and
push
ds
inc
pusha
add
or
sbb
push
mov
test
into
mov
rcrb
aas
je
movsl
jg
add
addb
bswap
test
dec
or
movl
add
push
pop
push
mov
outsb
mov
test
and
sahf
ret
outsl
adc
insl
bnd
subb
insb
pop
xor
mov
gs
sbb
subb
sub
jo
out
pop
jmp
mov
rcrl
loopne
and
cmp
pop
pop
push
add
rcrl
sar
imul
xchg
call
int
lea
adc
ljmp
inc
repz
add
or
xor
mov
jecxz
xchg
push
leave
mov
adc
in
pop
int
mov
inc
arpl
repnz
xor
fdivs
ret
inc
nop
lods
loopne
jae
stc
push
shrl
fbstp
sarb
and
adc
sub
mov
jl
clc
out
leave
mov
push
lea
fcmovu
in
js
call
add
mov
xchg
cmpsl
ret
dec
shrb
nop
mov
cmpsb
movb
sti
cli
cmp
bound
pop
jnp
xchg
nop
aaa
rclb
mov
push
adc
sub
jae
insb
insb
adc
aam
sub
xchg
das
xor
nop
sub
mov
mov
push
xchg
mov
arpl
in
sbb
add
cmp
addr16
pop
int
lcall
push
sub
inc
and
xor
adc
fnsave
daa
adc
jl
jmp
xchg
jns
sbb
ljmp
mov
jl
xchg
and
or
outsl
nop
jbe
cwtl
xor
movl
sub
push
mov
xor
mov
inc
mov
fs
loop
mov
int3
xchg
mov
mov
dec
outsl
lods
jmp
adc
xlat
sub
fbstp
sbb
gs
sbb
hlt
sbb
rcr
lds
xchg
cmp
daa
sbb
cmpsb
data16
inc
jns
stc
shrl
xor
pop
dec
loop
mov
mov
gs
add
stos
xorl
mov
ret
les
dec
dec
repz
cltd
testl
roll
cld
mov
mov
ljmp
cmc
lods
sub
mov
out
mov
popf
push
add
xor
cld
ljmp
lea
ret
jns
data16
inc
popa
stos
rorb
jae
mov
pop
adc
cmpl
mov
xchg
jp
scas
lret
jl
add
xor
lds
or
mov
xchg
js
repz
es
lahf
add
sti
xchg
int3
leave
cmpsb
lds
cmpsl
push
out
iret
les
cmpsb
push
sbb
xchg
cld
sub
fnstenv
andb
dec
inc
call
sub
and
sbb
scas
inc
mov
fneni(8087
out
jne
rcl
bound
mov
add
adc
sbb
sub
mov
scas
adc
adc
adc
add
inc
mov
insb
mov
stc
cld
adc
or
pop
icebp
jge
push
mov
mov
iret
rorl
int
mov
aas
pop
mov
pop
shlb
jg
out
insb
shrb
jbe
adc
scas
sub
inc
and
fwait
xor
enter
adc
cmp
push
cli
dec
pop
or
ljmp
add
xor
inc
inc
cmc
stos
and
daa
fbld
xchg
or
or
out
and
clc
pop
add
xchg
icebp
call
test
arpl
lcall
xor
in
cmp
sub
lret
lcall
adc
push
call
fiadds
xchg
pop
mov
mov
mov
push
test
test
inc
dec
inc
push
mov
test
sti
repnz
mov
movups
mov
xor
jae
pop
insb
or
cmc
insb
popa
xor
and
mov
xor
mov
mov
mov
xor
hlt
outsl
insb
sub
mov
add
push
call
test
ret
and
pop
cmp
or
rcrl
mov
pop
imulb
mov
aam
mov
push
insb
push
sbbl
jb
or
fcomps
mov
std
cmc
nop
cmp
inc
push
inc
and
js
or
mov
push
call
or
mov
cmp
in
into
add
xor
cmp
adc
push
stos
ficomps
add
fwait
push
pusha
outsl
out
jg
cmc
or
inc
add
sbb
cmc
add
add
sbb
push
stc
aaa
out
mov
adc
push
iret
scas
es
mov
mov
add
adc
std
mov
outsb
cltd
jle
or
adc
add
adc
cld
shrb
scas
mov
dec
pop
mov
dec
into
adc
xchg
push
cli
insb
loopne
sbb
push
lahf
mov
stc
adc
fnstenv
dec
out
scas
out
lods
cmp
shll
lahf
rcll
cmp
xchg
dec
add
push
dec
pop
sbb
xchg
addr16
and
and
mov
insl
iret
sub
mov
data16
mov
cmp
cmp
bsf
add
fcomps
or
mov
dec
xchg
test
lods
jnp
push
daa
mov
addr16
jb
pop
pushf
mov
inc
and
iret
and
dec
xchg
push
insl
stos
scas
sti
jg
xor
leave
lcall
jns
xchg
out
lret
sar
mov
mov
push
fnstenv
rcrb
inc
add
repz
cmpsl
imul
xchg
jne
daa
xor
lods
stos
iret
ss
mov
cmp
sbb
jl
mov
cli
jne
pop
jnp
hlt
jne
aaa
sti
dec
ss
call
cmpsl
cwtl
ja
outsb
leave
icebp
xchg
shll
popf
xor
dec
sarb
iret
cmp
je
fisttps
adc
cltd
add
adc
mov
loopne
xchg
std
movsb
adc
or
inc
adc
outsl
add
sub
push
popf
add
pusha
loop
xor
aas
mov
insb
or
mov
dec
jae
mov
mov
mov
mov
movl
mov
addl
pop
xchg
pop
and
mov
pop
and
xor
mov
dec
rorb
test
aad
rcll
or
jns
pop
inc
outsb
add
rolb
repnz
cld
mov
shll
lahf
lcall
mov
pushf
pop
inc
cmpsb
inc
stos
and
lea
push
pop
pop
push
call
dec
xchg
or
mov
cmp
ja
xchg
popa
mov
ss
call
jno
mov
mov
scas
aaa
xlat
shlb
mov
pop
pushf
pop
inc
shlb
nop
scas
lea
inc
mov
cwtl
dec
ret
jb
and
outsb
addr16
ret
es
sarb
pusha
das
push
push
push
scas
xor
jae
mov
jecxz
icebp
sub
bound
xchg
lea
cmp
xor
dec
mov
xchg
negb
adc
adc
int
xchg
and
or
xchg
cmp
and
xchg
push
pop
lock
movsb
sbb
jo
and
push
sbbl
aaa
add
add
movsb
pop
out
pop
mov
mov
out
push
lods
sahf
in
jmp
add
aam
inc
scas
mov
pop
push
rorb
mov
das
mov
mov
dec
xlat
icebp
xchg
lds
jp
cmp
mov
lds
add
jb
dec
out
ds
or
je
push
mov
xchg
pop
int
enter
mov
enter
fwait
sbb
jae
sahf
incb
sahf
add
insb
jbe
push
cmp
xlat
sbb
sub
fcomi
sub
in
or
push
xorl
mov
orl
arpl
loope
insb
cmpsl
pop
push
cmp
int
ficomps
inc
cmpsl
scas
sar
sub
add
insl
aad
or
and
inc
dec
xlat
jge
pusha
inc
shrl
sbb
adc
mov
xor
sbb
jmp
dec
roll
pop
and
jae
mov
push
shrl
inc
mov
jae
rep
jge
dec
out
push
je
mov
nop
clc
dec
stos
sub
cmp
test
aam
in
push
imul
je
and
rcl
pop
decl
jmp
xchg
push
cmp
jecxz
inc
xchg
je
mov
imul
sbb
fdivrl
jmp
repz
mov
fcompl
sbb
sbb
mov
pop
lock
test
aam
jne
adc
xor
fildll
xor
sarb
pop
in
xor
push
das
jne
dec
test
sbb
gs
rcll
clc
pop
sub
popa
in
add
add
outsb
out
lds
clc
clc
mov
roll
add
add
add
push
in
movsb
and
or
jecxz
xchg
pop
sarl
xor
aas
xchg
jbe
outsl
test
adc
aas
push
outsb
jae
pop
push
and
jp
rcrb
mov
gs
mov
std
push
sbb
xor
hlt
sub
rorb
add
pop
jp
cmp
push
addr16
mov
pop
cmc
sub
push
and
jle
hlt
or
cmc
jnp
jbe
inc
pop
sub
insb
add
mov
jge
adc
xchg
sbb
or
xchg
in
mov
jbe
in
ds
push
les
pop
mov
add
and
sub
cmpsl
fucomi
idivb
shlb
lret
jp
push
inc
je
jnp
std
mov
imul
sub
cmp
ja
mov
stos
jae
lcall
mov
cld
fsub
cmpsl
lods
push
xchg
and
js
cmc
mov
arpl
enter
testb
cli
push
add
xor
add
mov
loop
pop
jmp
outsb
enter
xchg
or
mov
gs
repz
in
jle
mov
dec
pop
mov
out
lcall
shll
dec
gs
push
mov
stc
test
cmpsb
push
rcll
mov
repnz
addr16
aam
inc
sub
xchg
ljmp
cmp
stos
lds
outsb
out
ja
jbe
and
out
call
shll
in
adcb
jb
lds
sbb
dec
inc
pushf
push
cmpsl
std
bound
leave
inc
mov
sub
call
fnstcw
clc
xchg
adc
pushl
dec
jne
jl
loope
mov
xchg
imul
les
clc
stos
lock
bsf
int
fildl
jge
push
and
into
aaa
sbbl
or
push
dec
cld
mov
dec
cld
pop
adc
test
dec
jp
sbb
fs
jmp
ja
push
int3
cs
mov
xchg
jge
pop
test
or
mov
jmp
pop
dec
xchg
or
imul
sahf
adc
loopne
loope
cmpb
mov
sti
sar
nop
mov
mov
pop
aas
mov
hlt
and
jnp
sbb
or
iret
sub
scas
je
jle
dec
sub
inc
mov
icebp
xchg
lock
lea
add
xor
enter
push
xchg
inc
inc
in
sbb
push
xor
jecxz
jecxz
pop
add
cmp
lock
xchg
and
pslld
dec
jmp
insl
add
iret
pop
jmp
ret
mov
xchg
call
subl
xor
out
cmpsb
cltd
cmp
rcrl
add
inc
test
stc
sub
mov
or
push
or
das
sar
test
pop
inc
addr16
add
pop
inc
bound
into
sahf
sbb
cmp
jecxz
xor
addr16
movl
or
dec
adc
sub
loopne
ljmp
test
pop
and
add
fwait
cmpsl
cmpsl
push
loope
jbe
sub
jp
stos
dec
sbb
push
cmp
xchg
je
xor
push
or
outsl
adc
xor
mov
es
inc
std
data16
sahf
mov
pop
mov
js
jl
dec
in
fcmovnu
shll
popl
fsts
shr
lret
xchg
repnz
in
and
mov
nop
into
push
fistl
cld
jmp
mov
mov
xor
lods
lods
mov
dec
mov
pop
aaa
dec
fadd
in
pop
loop
jmp
inc
xorl
xchg
je
push
xchg
pop
push
je
rolb
out
sub
jo
push
xchg
sbb
adcb
xchg
aaa
mov
nop
fisubs
sbb
or
jp
jl
js
sahf
adc
aad
les
pop
ljmp
divl
xchg
sti
and
cmp
lds
push
mov
sti
pop
xchg
push
dec
mov
pop
cmpsb
mov
cld
loopne
sbb
test
cmp
je
inc
pop
imul
jo
mov
add
bound
mov
enter
xorb
and
loop
inc
repnz
pop
flds
mov
mov
lods
xlat
sti
mov
xchg
cmp
add
add
data16
cwtl
pushf
xchg
out
push
cwtl
stos
cmpsb
loopne
pop
jle
inc
popa
fisttpll
dec
push
xchg
or
jo
jp
xor
call
cmc
sbb
sarl
in
dec
pop
sub
loopne
pop
lcall
jae
push
xchg
push
pop
inc
push
jl
cmpsb
sahf
xor
xchg
pop
dec
fists
lea
push
imul
pop
movsb
jb
test
adc
fcoms
push
cmpsb
int
fldenv
sub
jp
mov
and
xchg
xor
xor
fnstenv
sub
aaa
pop
jb
sbb
dec
lea
rcrb
xor
mov
lea
roll
cwtl
xchg
test
add
cmp
stc
sbb
push
imul
xchg
cmp
cvttps2pi
subb
ljmp
cmpsl
cmp
leave
xchg
stos
cmp
sub
mov
adc
dec
int
xchg
mul
xchg
sub
xchg
aas
or
ret
test
les
mov
inc
ja
inc
sbb
adc
shlb
shrl
cld
jp
pop
add
lret
movsb
js
sub
jnp
mov
mov
shrb
sub
push
xor
out
enter
out
popf
cmpsl
or
jae
pop
jno
push
jmp
cmp
into
mov
mov
mov
enter
mov
test
and
adc
xchg
mov
aam
int
sub
xchg
icebp
aas
xor
repnz
sbb
test
popa
xchg
adc
aaa
fsubrl
and
push
cld
fstpl
push
pop
or
popa
popa
cmp
aam
and
out
jns
xchg
jl
xorl
fsubrs
mov
cmp
fsts
or
repz
enter
pop
cmp
pop
xor
orl
lret
cmp
xor
mov
jae
push
fcmovbe
xor
mov
dec
or
into
inc
popa
dec
popa
loope
sbb
jne
loop
or
int
daa
aaa
mov
cmp
mov
jmp
jbe
cmp
cwtl
js
xor
sahf
fwait
adc
js
jge
pushf
xchg
pop
cwtl
or
jnp
cmp
aam
push
imul
cmp
mov
orb
js
dec
jecxz
fcomps
stc
pop
xchg
push
cmp
pop
loope
cli
jne
movsb
aad
inc
fs
mov
xor
fdiv
mov
les
mov
jns
xchg
inc
movsl
lahf
xor
xor
push
mov
sbb
jmp
xchg
sbb
mov
dec
loopne
into
loopne
dec
jp
mov
pop
icebp
mov
lret
adc
push
mov
in
int
xchg
push
in
in
push
pcmpgtw
mov
stos
push
jne
test
push
rclb
imul
cmc
ja
int3
outsl
fisttps
shll
add
rcl
mov
push
sbb
pusha
xor
ss
test
inc
jae
andb
movsl
push
cmc
stc
js
pop
repnz
mov
xlat
fistpll
daa
adc
aad
jp
daa
ret
add
je
stc
or
loope
outsl
mov
jns
adc
mov
outsl
imul
push
xor
mov
sbb
inc
add
frstor
or
aaa
fiadds
fwait
jp
cmc
pop
push
in
and
push
xchg
ljmp
mov
fbld
faddl
pushf
xchg
adc
aas
push
mov
pop
mov
test
pop
add
cmp
xor
jge
in
aam
adc
mov
add
fiadds
movb
f2xm1
xchg
insb
cmp
fstp
pusha
mov
imul
xor
sahf
jb
repnz
cli
xchg
icebp
popa
adc
jbe
aad
daa
mov
arpl
rcll
add
jnp
mov
pop
test
iret
mov
data16
mov
nop
cli
or
gs
push
and
inc
adc
pusha
pop
push
jb
out
shll
mov
jmp
cli
jno
inc
mov
push
xchg
adc
xchg
mov
enter
idivb
clc
fstpl
jle
loopne
test
mov
es
jns
jle
adc
clc
cmp
mov
sbb
data16
push
pusha
std
rclb
push
fdivrs
stos
insl
aad
pop
ss
lcall
xchg
lods
fwait
out
add
add
loop
bnd
fcomi
mov
es
xor
add
cmc
add
add
test
push
jg
fistl
push
popf
adc
in
pop
mov
rorl
mov
and
roll
pop
mov
mov
iret
loope
xor
inc
fmuls
into
hlt
adc
mov
in
pop
fldenv
mov
lds
xchg
xchg
call
lods
stos
or
xchg
aaa
mov
imul
addr16
mov
add
jmp
jl
aas
aad
sub
dec
mov
into
jp
cmp
mov
iret
and
and
mov
and
ret
in
add
and
in
mov
push
or
shrb
cmp
lahf
xchg
pop
ljmp
lret
jbe
mov
scas
sub
dec
sub
jl
mov
ret
int
mov
jge
dec
push
push
fs
fsubrp
sarb
outsb
mov
enter
sarb
sbb
mov
mov
fistl
jp
mov
mov
xor
mov
mov
icebp
loope
popl
or
sub
push
test
adcl
pop
jg
leave
push
fsubp
or
jns
add
lret
in
sbbl
cmp
push
dec
mov
pop
ja
negb
imul
ja
lods
outsl
ja
mov
inc
das
repz
out
inc
sbb
outsb
and
inc
cmp
subl
repz
test
push
ds
lds
jnp
pop
dec
push
sub
int3
mov
xchg
ret
addr16
stos
mov
scas
call
dec
add
xor
pavgb
jecxz
fldl
xlat
xchg
cmpsl
pop
and
repnz
or
ret
dec
cwtl
pop
int3
inc
stc
or
insl
inc
dec
jge
xchg
add
xchg
es
pop
jns
out
add
repnz
mov
rol
pop
cld
push
mov
xor
lods
out
shll
das
jl
outsb
pop
lret
sti
mov
sbb
or
ja
mulb
dec
sub
cs
shlb
pop
jns
push
cld
xor
inc
and
test
lock
and
dec
mov
mov
in
movsl
mov
or
fadd
out
inc
clc
bound
mov
mov
dec
inc
add
test
pop
aad
fisttpl
sarl
ror
mov
subb
jmp
cmp
adc
sub
outsl
into
fstpt
inc
xor
aaa
out
fwait
dec
sub
js
js
fbld
jb
mov
jmp
jb
in
arpl
dec
pop
or
adc
adc
test
mov
push
sbb
push
leave
jae
or
xchg
es
add
xor
ljmp
add
jb
mov
jge
xchg
fdivrs
mov
sub
push
inc
or
pop
inc
cmpsb
jp
adc
adc
nop
cmp
test
or
jae
loop
push
cmp
jne
adc
pop
stc
addr16
dec
bound
popf
loopne
xor
add
or
pushf
rcrb
push
push
movsb
adc
lcall
inc
lds
movsb
bound
xchg
adc
outsl
insl
xor
sub
jnp
or
push
in
push
cmp
daa
inc
outsb
into
hlt
fstpt
js
aad
lcall
insl
sar
or
test
test
cmp
and
pop
mov
pop
and
push
mov
repnz
lret
test
icebp
cltd
sahf
std
arpl
mov
insb
imul
fisttpl
and
push
ud2
xchg
les
ljmp
js
cld
das
sub
lods
fs
dec
pop
mov
leave
icebp
sbb
scas
dec
and
adc
pusha
push
xor
nop
push
ror
out
andl
test
mov
rcr
iret
pushf
test
out
cmpl
xchg
test
loopne
call
dec
pop
xor
fists
fs
cmpsb
mov
es
adc
mov
and
mov
inc
xchg
fs
mov
stos
xchg
jae
sbb
je
lods
push
mov
mov
arpl
aas
addb
push
mov
repnz
ljmp
jo
mov
xor
scas
sub
dec
add
cmp
jmp
and
xchg
in
ss
in
inc
cmc
pop
nop
shlb
loopne
add
add
add
mov
jp
dec
inc
lods
decl
xor
and
mov
sbb
jmp
xlat
pop
xor
fldenv
xor
sub
push
popa
popa
clc
and
lcall
jmp
shll
xchg
mov
mov
aam
stc
xchg
loope
xchg
das
cmc
and
push
ss
scas
mov
das
shlb
mov
pop
jbe
call
mov
inc
cmp
in
mov
pop
xor
call
pop
jno
ljmp
in
push
adc
pusha
sar
pop
push
divl
or
xorl
jb
inc
iret
and
pop
enter
jno
scas
sarl
mov
shr
and
mov
arpl
adc
movsl
jg
sub
roll
mov
clc
jmp
lock
cmp
fcomi
sbb
xchg
in
in
and
xchg
dec
gs
push
add
out
sub
cld
cmpsl
inc
insb
push
loop
sub
fwait
popf
pusha
pop
xor
loopne
lods
cmp
fstpl
lret
in
inc
jae
add
and
and
xchg
sbb
ljmp
cli
dec
aas
mov
push
loope
dec
aad
aas
cmc
inc
adc
push
sti
cmpsb
and
sub
inc
push
stos
pop
fsts
arpl
xchg
das
ret
stos
push
sub
inc
xchg
repz
inc
push
iret
leave
ret
test
stos
pushf
into
xchg
andb
fwait
sub
mov
out
test
dec
addb
ja
rcr
lock
xchg
jl
and
clc
xchg
testb
sbb
js
cld
daa
out
out
sub
fstps
imul
pop
mov
sbb
cli
adc
ja
sahf
data16
fwait
or
adc
in
mov
xchg
mov
mov
pop
jg
ret
jnp
mov
pop
adc
imul
mov
inc
aaa
mov
cld
insl
mov
jo
test
arpl
cmp
lahf
imul
enter
test
cmp
inc
adc
mov
sub
mov
popa
shll
out
popa
or
call
adc
mov
add
mov
xor
inc
dec
xchg
mov
int3
sbb
sahf
lret
ret
jmp
pop
les
lock
push
push
push
sub
jno
cmp
test
rcll
xlat
jbe
xchg
sbb
sbb
jmp
shr
inc
jae
idiv
nop
out
cwtl
cmp
test
enter
cmp
push
lods
dec
jge
jnp
lods
repnz
sahf
dec
outsb
ret
push
sbb
inc
jo
jns
and
iret
test
or
mov
sti
xchg
xchg
fldenv
inc
test
test
pop
adc
int3
mov
insb
insl
adc
pop
out
cmp
ja
test
mov
mov
outsb
mov
and
movsb
cld
push
cli
test
cltd
sub
cmp
stc
shrl
andb
insl
ss
and
repz
pusha
or
notl
movsl
or
mov
xchg
in
fadds
cld
jns
sbb
sahf
push
sbb
lock
cwtl
and
adc
mov
ss
gs
clc
dec
ds
fldt
cs
scas
ds
mov
enter
xchg
shlb
outsl
xor
stc
scas
push
xchg
mov
lcall
add
pop
jbe
xchg
shlb
xchg
insl
and
fmulp
mov
xchg
mov
lea
hlt
pop
push
jge
jecxz
std
push
jmp
out
lods
loop
outsl
xlat
sarb
lcall
mov
or
rol
pushf
or
popa
lods
arpl
shll
out
scas
lods
mov
adc
dec
cmp
mov
stos
cmp
xchg
loop
lock
test
xchg
fstl
jge
movsb
cltd
sbbb
mov
hlt
mov
adc
addr16
test
jle
pmaddwd
fisubrs
mov
movsl
arpl
cmp
and
imul
retw
push
fbld
xchg
jge
outsb
fwait
sahf
stc
in
popf
lea
inc
lods
sbb
cltd
sbb
pop
movsl
mov
sarb
pop
or
push
pop
and
mov
imull
pop
and
add
dec
ja
stos
popa
inc
add
test
and
mov
fidivl
cmc
fwait
mov
dec
mov
in
imul
add
xchg
rcrb
pop
roll
repz
sbb
add
cmc
add
add
adc
daa
sub
xchg
inc
dec
adc
or
xorl
leave
fisubrl
call
cmp
mov
es
mov
cs
xlat
jns
fdivs
cmpsl
xor
lea
fistpll
dec
adc
in
lods
xlat
inc
and
xor
test
lahf
jo
aas
sub
inc
insb
cmpsb
mov
dec
mov
cmp
subl
mov
repz
cmpsl
pop
in
sarb
mov
das
cli
dec
repnz
frstor
xchg
dec
ret
mov
out
xlat
or
mov
push
aam
lods
or
sbb
inc
stos
faddl
xor
lret
and
and
nop
and
scas
ficompl
notl
outsl
push
dec
mov
cli
push
and
jl
xchg
insl
ja
sub
stos
ss
jle
mov
inc
jmp
into
sub
iret
rol
flds
out
add
pop
fistpll
inc
test
and
les
cld
popa
adc
push
sub
dec
leave
mov
fistpl
dec
jg
enter
and
mov
cmpsl
pop
jne
add
mov
nop
into
fs
jbe
es
cmpsb
dec
sbb
mov
rorb
in
int
cmpsb
out
mov
mov
add
les
fbld
cmp
cmc
xchg
mov
jno
aam
and
sub
cmp
clc
push
cltd
loopne
in
outsb
push
push
lahf
aaa
dec
xor
mov
cltd
fcompl
lods
mov
pop
incl
addb
pop
add
mov
sti
xorl
xor
clc
outsb
sbb
insl
or
push
scas
sbb
stos
dec
mov
jns
test
std
ret
roll
pop
xor
test
cld
int
aaa
pop
jb
outsb
ljmp
mov
adc
or
scas
jbe
fistpll
test
jge
ficompl
movsl
mov
add
cmc
pop
out
ljmp
add
icebp
icebp
fldcw
femms
cmp
jnp
cmp
or
dec
loope
fs
popa
mov
in
xor
push
mov
sbb
push
push
push
xor
inc
test
repnz
shrb
dec
cmpsb
mov
inc
xchg
pop
jae
fwait
loopne
mov
xor
and
xor
pop
clc
pop
mov
ss
mov
es
into
jne
mov
inc
lret
push
cmp
dec
xchg
inc
or
or
cmp
xor
out
pop
loopne
xchg
rcl
aad
jae
insl
jmp
or
aam
pop
jno
mov
xchg
daa
push
rcrb
sub
mov
mov
movsb
shl
call
xchg
lret
jl
clc
mov
mov
ljmp
das
xchg
es
jl
leave
lcall
js
and
pusha
dec
push
das
add
data16
pop
popw
jae
movl
das
outsl
adc
push
test
lret
push
das
pop
addr16
sub
xchg
data16
movsl
cmpsb
pop
pop
cmp
adc
pop
dec
dec
cmc
cli
dec
pop
cmpsb
sbb
into
icebp
or
stc
test
js
mov
fstp
aam
adc
sbb
es
movsb
dec
lea
push
sbb
adc
xchg
nop
pusha
cltd
pop
xchg
sbb
mov
lret
ret
mov
adc
icebp
enter
xorl
xor
inc
mov
xor
jb
mov
pop
xchg
stos
xchg
xchg
roll
insl
mov
in
push
xchg
incl
mov
andb
js
cmp
mulps
dec
je
pusha
pop
fcomps
xor
push
pop
inc
ret
dec
jle
cmpsb
ljmp
loope
xchg
inc
andb
mov
or
mov
mov
fcmovnu
mov
add
add
pop
out
scas
movlps
shrb
mov
rcll
sahf
fcom
ljmp
movsb
in
mov
pop
and
xor
mov
lret
int3
and
test
inc
dec
in
xor
jle
jo
mov
push
es
das
inc
cmp
loop
mov
sbb
push
lahf
sub
jnp
fwait
cmp
sahf
test
nop
sub
sbb
shrl
clc
cmp
mov
ljmp
jne
mov
jo
mov
clc
add
adc
sar
add
add
xchg
std
repz
inc
dec
push
xchg
adc
ljmp
negb
xlat
cltd
and
ds
fdivrl
shll
fimull
jns
jbe
rorl
cmpsl
lock
push
es
cmp
jl
mov
sub
push
gs
icebp
ficoms
rcll
sti
push
mov
or
sbb
scas
dec
adc
mov
xor
adc
mov
mov
outsl
sbb
data16
out
dec
mov
in
mov
dec
jp
out
mov
push
pop
mov
dec
cli
in
loopne
popa
testl
fucomp
lea
xchg
sub
jnp
movsb
pop
mov
hlt
jb
and
fcoml
mov
xor
enter
mov
cmp
cltd
mov
dec
jb
mov
rdpmc
xchg
fsubl
mov
in
hlt
sbb
xor
xorl
dec
mov
or
dec
jo
jg
dec
out
xlat
mov
imul
insl
and
cmp
or
mov
sub
pop
enter
push
nop
popf
mov
into
inc
int
ret
and
imul
mov
mov
data16
addb
outsl
inc
mov
adc
bound
sub
popf
test
mov
dec
into
mov
nop
loope
cs
in
or
jmp
pop
jmp
dec
bound
sub
or
cmp
out
es
fscale
pop
aam
out
push
dec
pop
out
xor
jl
jecxz
insb
gs
in
push
jb
mov
shl
es
scas
arpl
stos
mov
adc
cs
leave
cmp
nop
aam
movsl
jae
dec
enter
cltd
repz
es
lods
and
inc
cmp
or
push
in
dec
or
popa
jecxz
jp
mov
dec
in
fstpt
xchg
xor
and
pop
xor
lds
mov
mov
into
ret
dec
jae
jle
repz
xor
push
iret
sub
cli
push
frstor
sub
filds
sub
and
mov
repnz
jmp
fistpll
and
add
cmp
aad
call
jp
pcmpeqw
cli
mov
jnp
pop
inc
fs
imul
enter
imul
stos
sub
loop
xchg
inc
inc
scas
mov
cmpsl
popf
cmp
outsb
ret
lret
fldl
repnz
sub
cs
xlat
and
push
push
in
shrl
cmp
mov
cmpsl
divl
sbb
push
push
add
sbb
mov
inc
popa
or
cmp
mov
pop
arpl
cmp
sahf
fldenv
add
fdivl
orb
out
push
loop
int3
ss
xor
sub
jnp
sbb
mov
sub
mov
mov
mov
or
xor
sub
rcll
xchg
ja
mov
lret
mov
jp
imul
add
test
das
and
adc
aas
lret
pop
adc
push
aad
clc
popa
je
arpl
lret
dec
je
mov
xor
test
sarb
sub
push
daa
mov
xchg
mov
sti
lods
mov
repz
sub
or
pop
inc
mov
mov
add
sbb
repz
dec
cmpsb
add
dec
mov
sbb
adc
mov
pushf
test
in
popf
popf
and
js
pop
scas
lcall
adc
lahf
das
jbe
mov
jo
adc
mov
mov
sbb
cvttps2pi
or
lods
or
mov
and
xchg
mov
jae
jl
xchg
push
fs
int3
aam
je
je
mov
std
inc
sub
js
in
inc
mov
inc
clc
xchg
es
loope
xor
adc
cmpsb
fbstp
lock
pop
sbb
jae
lea
sub
inc
mov
mov
mov
push
mov
xor
sbb
and
loopne
mov
mov
push
jg
jmp
push
std
push
pop
cld
add
test
jo
push
jno
arpl
adc
lret
pop
push
imul
fisubl
out
les
jmp
pop
into
pop
data16
mov
mov
jb
push
pop
mov
shrl
bswap
sub
add
add
or
mov
std
mov
push
js
push
out
add
cmc
add
add
mov
lahf
jge
jnp
outsb
out
ljmp
loopne
cmc
les
add
rep
push
and
mov
or
mov
lods
push
cmpsl
jne
cli
cmp
mov
outsb
mov
ja
adc
call
ret
xchg
aas
das
mov
push
nop/reserved
pop
fildll
pop
ret
fcom
mov
sbb
imulb
and
or
mov
mov
or
jp
int3
cmp
cmp
pushf
daa
xor
xchg
mov
imul
cld
or
pop
xchg
or
jbe
jge
lcall
and
dec
jnp
das
inc
or
scas
mov
aad
stc
into
xor
jmp
or
adc
cli
mov
push
dec
hlt
mov
sbb
ret
and
repnz
push
jbe
bound
lods
and
addr16
pop
lret
xchg
je
pop
incl
push
andl
push
sbb
rcll
outsb
pop
inc
xchg
push
mov
sbb
sub
push
lret
xor
or
addr16
aad
ds
jp
adc
repnz
out
mov
xchg
mov
mov
pop
pop
leave
enter
ljmp
mov
push
les
inc
mov
inc
xor
pop
fcompl
cmp
push
sahf
int
sub
cmp
inc
or
sub
outsl
fwait
push
fstp
rclb
cmpsb
stc
call
xor
mov
dec
popf
ret
xor
sbb
enter
fstpt
adc
shrl
aas
inc
push
mov
pop
das
inc
test
lahf
cmp
ljmp
mov
js
sub
push
mov
fistl
jmp
push
pusha
test
hlt
enter
push
mov
mov
and
xchg
out
xchg
divl
in
rol
cltd
jno
mov
push
jmp
loop
enter
mov
jo
xchg
call
into
or
add
std
aaa
xchg
outsl
push
lock
lret
gs
and
pusha
fildl
jecxz
xchg
and
fiaddl
xchg
add
pop
inc
in
jo
das
jmp
push
mov
inc
cmpl
or
stos
popa
mov
sti
fdivs
push
cld
clc
sub
pop
jb
outsb
rorl
sbb
jo
movsb
insb
inc
add
cmp
dec
aas
mov
gs
adc
jle
xlat
call
cmp
imul
cli
xlat
aad
sbb
das
jg
xchg
notb
mov
rolb
fldl
dec
inc
mov
xor
adc
out
sbb
mov
or
lds
cmp
stc
pop
or
dec
adc
jmp
fildl
cmp
out
sub
js
pushf
jmp
stos
mov
add
mov
icebp
pop
cmpsb
jne
xor
fdivrl
xor
test
into
xchg
imul
dec
mov
pop
into
push
aas
mov
aas
test
xchg
add
adc
jbe
or
cmp
fs
pop
jl
in
or
enter
ds
hlt
lret
cmp
stos
orl
inc
lods
xor
inc
ds
xchg
xor
push
pop
pop
out
push
push
lret
divb
xchg
inc
es
lea
insb
aad
out
xchg
mov
dec
icebp
jne
stc
lret
outsl
push
jl
xchg
mov
or
push
fbld
iret
add
jg
mov
mov
jnp
cwtl
pop
pop
jp
mov
loope
ret
push
and
jecxz
mov
lock
push
fisubl
fidivl
jns
pop
dec
fsub
scas
data16
decb
pop
aam
sub
and
push
cld
mov
lcall
fidivrs
mov
pop
in
mov
rcll
loopne
adc
sbb
pop
icebp
push
loope
ljmp
aas
xchg
jnp
loop
push
sbbb
dec
add
insb
xchg
jp
or
imull
mov
jge
sub
mov
dec
dec
movsl
mov
xor
or
in
imul
mov
das
dec
fdivs
aaa
sbb
sahf
out
mov
aad
aaa
in
mov
xor
fwait
xchg
jnp
mov
or
cmp
imul
mov
loop
push
bound
stc
add
pop
pop
jo
and
out
mov
mov
mov
cmp
fwait
dec
jb
add
add
push
dec
shr
jg
push
mov
and
add
cmc
add
add
negl
or
mov
in
scas
pusha
xchg
sub
dec
sub
inc
cmp
outsb
cmp
insl
mov
outsb
mov
data16
movsl
rcr
arpl
repz
aaa
loopne
cmp
jmp
out
rcr
fwait
jle
add
cmp
push
jae
cmp
fnstenv
adc
out
fldenv
sub
out
roll
cwtl
std
mov
jmp
adc
inc
popa
ja
mov
push
inc
sbb
je
pop
jl
loope
xchg
push
push
cli
loop
js
jmp
cli
imul
fs
clc
xlat
cmpsl
inc
in
pop
sahf
pop
fmull
dec
cmp
inc
sbb
scas
sbb
imul
rcl
in
stos
arpl
not
add
mov
sbb
repnz
dec
cmc
bound
cmp
fidivl
sub
sub
xchg
push
push
cmp
inc
sbb
mov
and
fisubl
insb
push
arpl
lods
cmp
in
movsl
pop
inc
loopne
mov
adc
cld
mov
addr16
pop
arpl
jno
cmpsl
pop
call
add
pop
bound
inc
ret
sub
lret
mov
lahf
inc
mov
and
add
xchg
aad
sub
mov
pop
fwait
xorb
sbb
push
xchg
aad
inc
sbb
jge
sub
add
sub
add
mov
enter
cld
add
mov
aaa
cs
jmp
or
lods
adc
xor
dec
xchg
mov
lds
mov
or
ja
dec
stc
xor
mov
and
test
sub
inc
lret
dec
lock
push
or
pop
movsl
out
jns
sti
fwait
cmpsl
and
xor
and
aam
mov
sub
mulb
xor
shrb
dec
std
mov
aad
xor
lds
rcr
cmc
mov
loopne
push
jno
fs
xor
sbb
push
stos
push
xchg
xchg
or
orb
gs
out
push
sub
push
pop
lock
nop
test
shl
push
lahf
rcrl
cmpsl
or
xchg
popf
sbb
adcb
push
push
sbb
pop
add
cmp
faddl
xchg
jbe
ss
test
jb
scas
ja
pop
out
ss
in
iret
out
sub
dec
push
lods
mov
ja
jns
or
fbstp
sbb
dec
pusha
sbb
stc
icebp
stos
fsts
pop
aad
inc
lock
sbb
mov
jle
ret
mov
sub
fdivrs
cmp
fs
lea
cmp
lds
inc
outsl
mov
or
repnz
int3
push
movsl
faddp
xchg
mov
lcall
insl
movsb
lods
or
adc
xchg
fldt
ja
popf
lods
cmp
xchg
mov
jo
mov
xchg
call
shrl
mov
push
in
lret
shrb
aad
andl
sub
iret
mov
stos
xlat
scas
jno
stos
push
leave
sti
jmp
repnz
ljmp
jge
ljmp
fsubr
int3
mov
sbb
jae
xor
inc
jnp
imul
xor
std
in
cld
popa
mov
stos
mov
adc
imul
jge
lret
lds
mov
mov
mov
jae
leave
inc
sbb
fstpt
xchg
ds
adc
sbb
iret
hlt
push
dec
lods
lods
imul
lret
call
inc
jle
popf
xchg
mov
gs
pushf
insl
xor
xchg
fistpll
jnp
aad
add
jle
push
cmp
sub
sbb
cltd
pop
and
jmp
push
inc
push
xor
or
in
repnz
clc
jp
fwait
mov
icebp
dec
adc
std
mov
dec
xchg
sahf
hlt
xchg
sbb
out
pop
mov
jb
pop
xchg
fstl
sahf
mov
xor
dec
outsb
cmp
fwait
sub
lods
fs
xor
popa
lock
mov
test
fwait
jmp
pop
xor
in
stos
and
push
aad
sbb
dec
and
add
pop
fdivs
push
stos
mov
aaa
xchg
push
sbb
pop
sbb
loop
inc
cmp
adc
sub
arpl
inc
cmp
imul
into
mov
or
movsl
push
movsl
shl
divl
jne
push
lock
add
out
add
inc
jp
jno
out
dec
xchg
adc
xor
push
subb
pmaxub
scas
in
mov
jnp
xor
and
cmp
push
loope
adcb
test
xorb
call
jb
jge
out
mov
adc
mov
gs
mov
test
jle
cmp
and
hlt
pop
int3
fimuls
sub
fadds
test
int3
jae
repz
cmp
mov
xchg
mov
in
int3
sub
mov
or
pop
sub
push
ret
test
stc
mov
insl
ljmp
gs
cld
mov
inc
repnz
fmuls
push
push
and
jl
testb
jl
push
dec
repz
incl
sub
out
mov
pop
push
test
mov
inc
add
sbb
movb
imull
sub
or
ret
idivl
test
iret
into
push
sub
add
sbb
subl
ret
or
in
cmpsl
mov
enter
outsb
push
or
dec
or
push
lcall
xchg
outsl
in
outsb
sbb
inc
stos
lods
sub
movsb
mov
incb
add
insb
cmp
jbe
inc
ljmp
ja
loopne
pop
jmp
andl
sub
cli
sahf
ret
push
xchg
paddusw
mov
inc
scas
inc
xor
pop
hlt
cli
or
xchg
into
add
xor
pop
fists
jl
je
sti
adc
or
stos
gs
mov
and
int
dec
les
xorb
ljmp
pusha
ja
sbb
lret
stos
ja
push
call
dec
pop
cwtl
inc
adc
sbb
dec
mov
and
jbe
lahf
and
adc
int
dec
pop
mov
xchg
sub
in
pop
dec
fstpt
les
dec
pushl
out
cmp
sbb
leave
xor
mov
sbb
xchg
scas
push
and
shrb
jne
sub
scas
xor
bound
sub
dec
in
out
call
aas
dec
popf
xor
pusha
jl
ss
inc
pop
mov
mov
mov
push
mov
cld
mov
and
mov
int
mov
cmp
jno
jns
jnp
movups
mov
outsb
cmc
push
std
sbb
pop
pop
adc
out
xor
nop
add
adc
ret
ret
push
iret
clc
mov
cmp
mov
idivl
add
dec
in
test
mov
enter
and
in
pusha
jno
jp
push
xor
and
in
xchg
addr16
cmp
outsl
scas
xchg
push
testb
mov
pop
repz
iret
cmp
sbb
test
inc
dec
stos
into
lret
sub
mov
das
fbld
xchg
adc
dec
rorb
cmp
cmova
inc
sub
jno
int
loopne
add
sti
dec
xchg
sbb
mov
adc
sbb
sti
in
add
and
aad
mov
push
xchg
shl
out
jne
dec
fisubs
xchg
or
mov
stos
mov
xor
testb
fcomps
shlb
dec
inc
mov
jno
addr16
sar
pop
pop
push
arpl
cli
popa
enter
movsl
pop
loopne
stos
pop
dec
push
cmp
and
xor
sarb
sbbb
das
push
pop
and
mov
inc
lock
bound
pushf
fimuls
int
inc
lods
or
es
add
in
push
shll
mov
pop
insb
pop
icebp
or
mov
add
repz
cmp
dec
lea
mov
pusha
stos
or
in
add
stos
in
xchg
push
fisubrl
rcll
lcall
xchg
sub
fstps
and
dec
nop
sub
std
std
add
adc
cmp
movsb
pop
xchg
pop
fisubrl
es
sahf
cmp
gs
data16
pop
ljmp
in
loopne
push
scas
dec
pusha
repnz
xor
pop
je
popl
xor
mov
dec
test
jle
ret
mov
or
ljmp
cs
fsubrp
filds
fists
subb
jbe
repnz
lds
mov
jmp
