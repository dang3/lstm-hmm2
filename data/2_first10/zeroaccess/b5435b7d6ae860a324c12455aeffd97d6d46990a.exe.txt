push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
jmp
out
add
outsb
sbbl
hlt
mov
bound
lret
bound
sub
pop
add
pop
jne
xchg
inc
jb
jno
iret
lret
hlt
inc
aam
cltd
add
pop
jno
mov
daa
mov
shrb
adc
and
dec
fbstp
mov
jo
dec
pushf
pop
jae
sti
push
push
pop
cmp
add
push
jge
mov
mov
stc
inc
popf
xchg
in
fstpl
jg
cmp
mov
dec
loop
inc
orb
inc
pop
mov
xor
sbb
inc
add
dec
nop
xchg
dec
mov
pop
les
sub
vpsubusw
mov
test
bound
in
push
subl
imul
inc
inc
jp
addb
mov
add
or
imul
jns
repnz
sbb
inc
insl
loop
mov
xor
dec
dec
ret
dec
pop
in
or
pop
out
lods
aas
mov
das
lahf
jne
stos
adc
xchg
and
or
mov
mov
and
push
dec
addb
pusha
pop
mov
loope
jmp
fnstsw
and
sarb
pop
dec
int
push
push
mov
outsb
aas
imul
test
enter
les
mulb
push
je
cmp
jno
sbb
sbb
and
push
adc
sub
xchg
jl
push
cltd
mov
cmpsl
imul
or
mov
daa
notb
add
fistl
jnp
pop
data16
data16
outsl
push
cmpsb
jmp
mov
add
leave
js
pushf
cmp
out
mov
jae
xchg
jecxz
cwtd
mov
movsb
xchg
or
mov
mov
popa
arpl
cltd
aad
xchg
fcoms
pop
adc
ficompl
add
cmpsb
mov
outsl
aaa
fbstp
negl
sub
or
cmpsb
push
out
fildl
dec
stos
imul
movsl
ja
push
pop
push
ret
add
inc
and
cmp
popa
sub
mov
sahf
xor
or
sarb
cwtl
and
push
mov
mov
pop
cmp
pop
jns
into
loopne
stos
sub
je
mov
sbb
sbb
je
add
mov
stos
cmp
shll
push
pop
sub
sub
loopne
mov
dec
xor
rclb
shr
xor
xchg
jg
aam
xor
xor
rcrb
push
popf
orl
jle
fadds
stos
xlat
xchg
cmc
mov
pop
xchg
jmp
fwait
je
mov
rcrb
push
and
pop
and
inc
sub
mov
rcll
dec
dec
xor
push
js
repnz
in
loope
push
mov
cs
leave
xchg
pop
pop
xchg
dec
repnz
pop
add
push
out
add
push
ret
stos
test
mov
int3
xor
xor
mov
stc
inc
jae
xchg
aam
pop
enter
rorl
and
jns
mov
and
jb
mov
into
jmp
adc
shrb
sub
fistpl
or
out
dec
pop
cmp
rol
xchg
insb
roll
push
sbb
fdivs
xor
std
test
in
outsb
sbb
push
nop
aas
mov
and
pushf
inc
shl
fdivl
adc
dec
jbe
adc
adc
ja
cli
jmp
xchg
vpaddusb
mov
nop
jo
jp
mov
mov
cwtl
jmp
push
stos
xor
add
into
data16
mov
cmp
and
pusha
mov
nop
out
cmp
popf
divl
xchg
jp,pt
inc
xchg
pop
stos
add
adcb
sub
xor
mov
xchg
dec
mov
bound
or
test
movsl
push
popf
mov
ret
int3
pop
sbb
push
jo
lods
aaa
stc
sub
xchg
repz
and
test
cli
call
in
shll
sbb
sti
push
xor
xor
adc
and
shlb
xchg
jae
sub
roll
outsl
mov
fldenv
fdivrl
xchg
lret
push
xchg
hlt
push
stc
fdivrl
or
xchg
mov
jg
std
inc
mov
andl
enter
xor
cmp
ret
mov
cwtl
out
cltd
das
es
xor
adc
dec
iret
mov
xlat
out
add
aas
movsb
sub
sub
adc
lds
add
xchg
icebp
and
inc
fxch
outsb
push
sar
hlt
scas
or
jle
sbb
stc
cmp
pusha
ret
and
mov
lods
or
sub
xchg
cmp
aas
fmuls
call
outsl
mov
sub
adc
movsl
flds
and
into
das
xor
stos
sub
pop
cmp
cmc
fistpl
push
inc
push
mov
push
lea
cmc
mov
xchg
shrl
test
xchg
lods
mov
sub
aam
pop
mov
rolb
push
lcall
xchg
xchg
and
and
push
sbb
data16
or
fistpll
shlb
test
xor
lods
stos
out
jecxz
mov
divl
movsl
clc
sub
in
loopne
mull
shll
ror
outsl
test
popa
pop
jns
cmp
hlt
mov
xchg
jne
test
sahf
xor
mov
enter
push
sbb
hlt
mov
xchg
adc
jecxz
mov
or
mov
cld
hlt
xchg
push
stos
adc
faddl
sbb
fldcw
mov
ds
xor
mov
out
inc
mov
loopne
ljmp
int3
mov
inc
xchg
ret
je
icebp
dec
sub
xor
mov
sarl
or
pusha
sub
fxtract
push
dec
fisttpll
stos
mov
xchg
push
ret
pop
outsl
rcl
in
xchg
dec
fstl
lret
dec
and
mov
addr16
in
fmull
mov
adc
push
rcl
aaa
cmpsb
leave
mov
mov
fmul
jp
and
imul
or
ss
add
sub
add
fwait
aas
add
or
leave
lahf
loop
inc
insb
out
les
push
cmpsl
stos
lret
inc
popa
fldenv
mov
sbb
mov
push
dec
dec
mov
cld
cmc
mov
fdivrl
add
dec
mov
jl
mov
in
cmc
data16
inc
sysenter
lcall
and
dec
jns
mov
fisttpll
jl
test
in
ret
mov
ret
xchg
mov
icebp
mov
sbb
arpl
add
adc
push
stc
inc
pop
imull
add
pusha
mov
cld
push
sar
push
js
stc
fcoml
mov
pop
inc
pop
sbb
stos
xchg
lcall
inc
dec
inc
or
movl
inc
popf
lock
xchg
mov
xor
xor
jge
inc
xlat
movsl
and
hlt
jbe
push
xchg
sbb
sbb
pop
pop
repnz
out
dec
in
adc
adc
call
fucompp
out
cs
xchg
in
xchg
push
xor
jnp
add
pop
dec
fistpl
jmp
les
out
shll
rolb
xor
loop
inc
xchg
pop
mov
scas
fisubs
cmp
mov
cmp
push
out
mov
xorb
insl
sub
cmp
and
in
out
pop
and
jg
daa
pushf
dec
xchg
mov
lea
icebp
dec
mov
into
dec
std
notb
enter
xchg
popf
jbe
sub
xchg
mov
push
lds
mov
or
sbb
inc
jg
mov
pop
es
das
test
pop
shll
add
pop
jno
xor
pop
lods
lock
and
dec
inc
cld
scas
mov
jno
fisttpll
pop
mov
cmc
jmp
popa
enter
pop
loope
dec
inc
call
lret
mov
test
mov
mov
add
mov
ffree
cs
push
or
pushf
stos
loope
add
in
movsb
sbb
jae
scas
push
jecxz
stc
jo
dec
stos
jae
stos
aam
inc
jae
lds
cmpsl
int3
jecxz
dec
xchg
in
inc
mov
fildll
mov
push
insl
repz
int
jae
or
jae
mov
mov
cld
xor
mov
out
andb
popa
repnz
or
or
int3
xchg
inc
das
loop
aas
push
out
cmp
jnp
add
jne
sub
and
mov
scas
stc
and
cmp
sub
bound
mov
adc
in
aaa
xor
enter
xlat
mov
es
into
call
lock
dec
js
enter
mov
mov
lds
xchg
pushf
push
inc
sbbl
inc
adc
xchg
adc
add
sbb
aas
test
pop
or
pop
pusha
pop
and
shl
mov
jg
dec
into
addr16
in
cmpsb
xchg
push
lcall
add
aaa
mov
test
add
xor
imul
test
jle
inc
and
dec
out
sbb
aaa
es
push
push
jb
sbb
push
jnp
movsl
mov
mov
icebp
push
fs
fsubr
mov
stc
xchg
jg
xchg
dec
iret
cmpsl
mov
sub
insb
add
add
jle
add
mov
shlb
push
pop
adc
sub
popa
xor
mov
mov
outsb
cmp
lods
or
sbb
add
ror
int
divb
cmp
divl
ss
mov
cld
mov
push
aas
sarb
shlb
xchg
pmuludq
dec
in
cltd
mov
scas
data16
sbb
fwait
push
mov
sbb
pop
aad
in
stos
inc
ljmp
add
loopne
dec
sub
sti
push
add
jmp
repnz
jecxz
scas
cmpsb
cs
insl
jl
ret
faddl
push
leave
iret
inc
test
bswap
push
jno
stos
pop
cwtl
cmpsl
mov
lahf
xchg
push
js
pop
inc
push
imul
mov
and
mov
cmp
ds
inc
push
hlt
or
addr16
inc
sub
sub
push
data16
mov
inc
fwait
dec
test
iret
dec
xor
cmpsl
cli
gs
cmpsl
or
loope
mov
pop
push
push
and
inc
xor
mov
and
imul
loope
pop
data16
lahf
cs
and
arpl
mov
jle
push
rclb
xchg
mov
jno
mov
jbe
fisubs
or
daa
sub
lret
sbb
jmp
xchg
les
cmp
cmpsb
imul
test
aad
jg
jg
aad
mov
repz
mov
hlt
aad
mov
push
jmp
xlat
scas
pop
inc
imul
and
dec
add
rcrb
or
loope
mov
mov
and
fidivl
repz
aas
cld
ljmp
push
mov
data16
scas
mov
xchg
and
insb
xchg
mov
lahf
cli
mov
andl
je
in
enter
pop
sub
insl
rcll
in
test
jnp
jno
sbb
cmp
pop
out
mov
lcall
jg
idiv
gs
cmp
xchg
cmp
inc
lret
daa
into
xchg
mov
inc
xor
push
stos
sub
icebp
inc
dec
imul
push
mov
ror
jo
xchg
ficoms
sbb
sub
in
mov
jmp
jmp
in
mov
jae
ds
pop
sub
sbb
jno
mov
into
icebp
xorb
and
mov
inc
add
scas
rcrl
arpl
fbstp
lds
mov
out
add
into
mov
sahf
sub
sub
cmp
or
or
jae
dec
lds
repz
cmpl
cli
into
adc
jae
gs
sbb
push
pop
mov
seto
pop
pop
int3
nop
jbe
jmp
je
hlt
inc
fnstenv
pop
inc
mov
jp
mov
xchg
mov
dec
and
push
push
jne
int3
cmp
pop
jb
add
or
rcrl
xchg
insb
sub
jmp
fdivrs
dec
mov
sbb
iret
outsl
lcall
pop
jl
subb
push
mov
in
sbb
jnp
ret
outsb
orl
out
negl
rcrl
sahf
lods
adcl
loop
push
mov
mov
xor
pop
arpl
mov
outsb
xor
xchg
jmp
mov
mov
in
enter
pop
xor
cmp
sbb
imul
out
push
lods
jle
push
sub
ss
popa
lods
out
cmp
fwait
dec
in
rcrl
cld
adc
outsb
mov
ja
or
jge
test
mov
aas
cmp
or
out
inc
sub
lret
xchg
sbbw
in
leave
dec
xchg
das
jb
mov
push
xchg
out
out
roll
movsb
dec
and
ljmp
addr16
int
int3
xchg
fadd
dec
adc
mov
sub
sub
pop
scas
lock
mov
shrb
popf
lods
push
push
cmp
fcoml
push
lret
inc
testb
pop
arpl
out
dec
sub
dec
mov
out
add
dec
mov
push
in
push
fxch
jecxz
mov
popf
and
mov
rorl
jmp
xchg
fwait
cmp
mov
iret
add
pop
mov
js
ds
test
popf
in
dec
iret
and
cmpsl
mov
out
dec
mov
cld
mov
insl
outsb
ds
pop
andl
pop
xchg
push
and
cmc
sti
xchg
pop
xor
dec
dec
xchg
cmpl
popa
inc
in
mov
mov
ss
roll
std
xor
cmp
lock
sahf
xor
xor
xchg
add
out
inc
push
jge
repz
cltd
ds
mov
cltd
mov
cmc
stos
sbb
and
jo
lahf
pop
les
out
sbb
lock
sbb
flds
ljmp
dec
and
dec
ss
int
push
add
int3
clc
add
pop
xchg
aas
push
cmp
out
mov
loope
add
xorb
sub
stos
into
or
clc
out
roll
and
mov
fwait
pop
add
das
and
add
cli
mov
adc
pushf
imul
mul
adc
repnz
orb
xor
in
push
and
add
push
mov
aas
rcll
mov
sub
push
daa
ficoms
push
bound
adc
cmc
in
adc
lret
xor
xor
or
lds
sbb
or
push
jle
sbbl
sbb
or
hlt
out
aam
rolb
cmpl
mov
cmp
gs
hlt
mov
cmovge
int
jle
mul
fucomi
pop
add
aam
test
fwait
inc
jnp
sbb
rorb
int3
sbb
ret
xchg
and
rclb
sahf
out
mov
jl
mov
out
mov
fistps
xchg
sar
and
stos
into
sbb
pop
xor
jbe
mov
scas
imul
lock
fiadds
jbe
xchg
dec
push
sbb
adc
dec
setae
jmp
pop
test
xchg
xchg
lcall
mov
inc
add
mov
xchg
ss
aaa
inc
lock
dec
mov
movsb
cmp
bound
out
mov
lock
es
out
inc
int
stc
or
aam
pop
cmpsb
std
mov
fcompl
or
lods
test
imul
sbb
test
outsb
jmp
mov
insl
jg
or
loop
popa
scas
lcall
pop
lret
dec
dec
arpl
dec
xor
int
iret
int3
lock
ds
mov
arpl
aam
and
push
inc
inc
xlat
add
push
push
lret
push
les
adc
and
das
fmul
push
inc
inc
enter
roll
insb
jge
mov
out
inc
lds
mov
outsb
and
cld
shl
xchg
dec
dec
mov
pop
jbe
sbb
cmp
sub
dec
pop
loope
jl
sbb
and
out
mov
out
jno
sub
adc
dec
je
jae
mov
jle
xchg
or
rorb
pop
xchg
fcoms
push
test
repz
xor
adc
int
dec
adc
push
sbb
data16
adc
inc
int
push
shl
pop
ficomps
scas
mov
jle
into
sub
aam
test
jle
fsts
jge
cmpsl
dec
mov
xchg
scas
movsl
add
jg
dec
leave
stos
inc
pusha
fnstcw
fisttpll
sahf
popf
int
or
or
and
out
and
lret
mov
mov
dec
insb
out
cltd
pusha
add
cmp
test
lret
jl
hlt
int
rcrl
xchg
jae
mov
mov
fcmovnb
mov
add
sub
int3
xchg
sahf
cmp
mov
les
pushf
xlat
inc
in
inc
lods
and
lods
int
adc
and
inc
aaa
jnp
sub
push
cmp
mov
aaa
jle
pop
xchg
roll
jg
adc
add
or
mov
test
loop
dec
shll
add
cmp
in
mov
add
popa
mov
imul
or
dec
int
mov
shl
test
and
pop
lds
pushf
fwait
sbb
insb
mov
xchg
inc
popf
pop
in
das
mov
adc
mov
sti
mov
mov
cmp
lret
lock
rcll
sar
fst
aas
adc
jl
dec
lock
lahf
ret
aas
lret
pop
sbb
add
mov
mov
cmpsl
inc
jp
lcall
enter
mov
js
testl
mov
mov
subl
xor
or
faddp
pop
and
test
dec
jb
dec
inc
outsl
adc
xchg
pushf
pushf
outsl
cli
in
stos
out
cwtl
lods
icebp
fistpll
push
mov
test
js
and
pop
fsubrl
fcompl
shl
insb
clc
push
aaa
jmp
pop
outsl
xor
sbb
jno
test
inc
pushl
mov
inc
sbb
test
fs
popf
imul
jns
movsb
cmp
jae
xchg
xor
mov
mov
out
push
dec
mov
mov
orl
dec
stos
stos
mov
loope
clc
ja
push
and
mov
and
nop
mov
cwtl
pusha
jb
pop
data16
fwait
cmpsl
decl
lret
cltd
sbb
jl
adc
push
add
add
mov
test
test
ds
ja
inc
mov
sbb
jecxz
lods
mov
aad
sarl
xor
pop
aam
lret
push
pop
or
cmp
arpl
mov
fmull
cwtl
subb
xchg
popf
or
inc
into
push
xor
cmp
cmp
ds
pop
mov
fs
mov
dec
xchg
xchg
and
aad
out
xor
dec
outsl
mov
adc
out
xchg
sbb
ret
pushf
out
pop
jp
cli
aad
shl
lcall
popa
push
mov
sub
mov
pop
cltd
xor
mov
into
adc
fiadds
aad
scas
cmp
loopne
sahf
mov
gs
push
fwait
mov
xchg
pop
gs
sbb
jae
or
jmp
data16
mov
mov
dec
adc
pushf
mov
dec
sub
cli
mov
and
popf
xchg
cmp
sub
dec
add
out
andl
push
jb
and
xorb
popf
dec
iret
mov
and
mov
addr16
mov
mov
int
scas
out
inc
mov
xchg
shlb
and
addr16
inc
rcl
mov
xchg
add
inc
shll
shlb
sub
jg
lods
stos
xchg
pop
cmp
mov
fildl
inc
aaa
mov
ficomps
addr16
push
stc
in
repnz
test
cwtl
gs
mov
and
ds
mov
lret
cmp
mov
or
add
in
hlt
jae
movsb
fldcw
dec
sbb
xchg
cwtl
cmp
xchg
xchg
lcall
shll
and
movsl
add
mov
fimull
gs
xor
lret
and
inc
insb
jmp
out
adc
outsl
dec
mov
sub
in
dec
adc
rcr
out
ja
or
and
lods
call
inc
ss
push
add
sbb
cmovg
fisubrs
adc
shlb
scas
xchg
dec
inc
push
jmp
pop
in
das
out
mov
sbb
mov
add
lods
mov
setne
lea
pop
iret
rcll
loopne
jmp
les
bound
pop
inc
imul
mov
dec
enter
cltd
cmp
push
lea
xchg
adc
repnz
pushf
aaa
mov
mov
or
int3
jg
xlat
nop
cs
pop
enter
fidivl
movsb
idivb
aas
sbb
push
xor
fdivl
cld
call
adc
adc
or
cmpsb
out
stc
xchg
sbb
negb
jne
mov
stc
inc
ret
push
outsb
jg
pop
lods
aam
inc
loop
ret
cltd
gs
cmp
push
lahf
sub
test
ret
mov
jo
test
xchg
leave
aad
dec
jns
xchg
push
fidivs
test
dec
xor
and
popa
stos
mov
inc
loopne
xor
pop
pop
les
mov
mov
lret
outsb
call
jae
fwait
das
mov
bound
mov
call
clc
sbb
mov
ljmp
xor
and
add
nop
jae
loopne
mov
aas
sahf
xchg
push
sbb
xchg
sbb
jge
pop
test
shll
push
inc
hlt
jns
add
hlt
mov
jle
mov
or
rolb
das
cltd
shr
push
xor
push
ds
push
out
fdivrl
cmp
popf
sbb
fimuls
sbb
sub
mov
xchg
jo
sub
mov
push
jge
jbe
dec
popf
pop
mov
jg
cltd
mov
roll
mov
insb
jo
lods
inc
insl
mov
outsb
xlat
jecxz
popf
lock
cmpsb
xchg
add
loop
mov
sbb
fs
pop
mov
pop
jae
jmp
jbe
mov
fs
inc
outsl
add
pop
orl
xchg
data16
jne
and
push
sbb
mov
stos
mov
jg
mov
push
jno
jbe
mov
mov
sti
sub
cmpsb
xchg
lods
mov
stc
add
pop
fistps
sbb
test
les
mov
cmp
or
jns
mov
imul
lods
outsl
andb
or
jne
outsb
lods
sbb
pop
xor
mov
lea
xor
aad
aam
inc
pusha
cltd
cld
in
std
mov
lds
int3
pop
lock
test
cwtl
xchg
insl
pop
dec
mov
andl
rcrb
mov
mov
add
push
fstpl
adc
and
fs
adc
push
jge
inc
mov
pusha
bound
out
cmpsb
mov
adc
sub
stos
cmp
and
test
push
mov
dec
push
jo
mov
fimull
mov
cmpsb
mov
movsb
cmp
int3
inc
enter
test
inc
dec
jnp
ret
inc
pusha
pop
ss
cmp
movsb
xchg
xor
xchg
outsl
adc
aas
std
shlb
push
adc
pushl
inc
addr16
adc
jecxz
es
std
nop
inc
lahf
fsubs
xor
jl
inc
faddp
pushf
mov
insl
dec
or
dec
pusha
mov
inc
int
push
add
mov
aam
aaa
clc
mov
je
push
leave
jno
imul
int3
rcl
jg
or
jle
lahf
scas
lds
sub
push
mov
sub
popf
push
or
inc
pop
leave
std
mov
cmp
mov
out
fld
cmp
push
hlt
cwtl
leave
sbb
push
call
pop
or
sbb
int
insb
stc
sub
jg
jle
fldl
arpl
mov
nop
imul
inc
fistl
test
adc
add
sub
jge
sahf
fisttps
push
adc
outsl
fistps
xor
adc
mov
cwtl
mov
lods
sbb
sbb
or
shll
jmp
rorl
xchg
icebp
lock
movsb
fidivs
cmp
lods
imull
data16
mov
adc
cmp
repz
cli
test
bound
test
pusha
cmp
sahf
or
cmpl
sbb
push
iret
pop
xor
cmc
cmpsb
xchg
mov
mov
inc
in
and
insb
add
cmc
push
popf
push
or
pusha
outsb
sbb
inc
das
xlat
in
arpl
xlat
and
inc
cmp
jnp
or
mov
pop
jbe
inc
xor
jmp
bound
mov
or
arpl
push
push
and
xor
jecxz
pop
imul
and
cmp
mov
adc
xchg
lods
pop
outsb
loop
sahf
sub
nop
loope
rorb
xlat
mov
push
ja
pop
pusha
and
sub
insl
mov
fsub
add
mov
add
push
cs
lods
dec
add
pop
fstl
stos
pusha
iret
aad
sub
cli
push
sub
fadds
xlat
cltd
sahf
xchg
por
out
adc
in
push
mov
pop
imul
push
arpl
sub
inc
testb
push
mov
or
out
pop
lea
test
inc
dec
jmp
lcall
dec
lea
push
dec
mov
dec
jle
mov
jnp
iret
push
mov
or
cmp
pop
ss
pop
loopne
jle
mov
sbb
pop
iret
mov
call
or
js
mov
pop
call
outsl
outsb
push
lret
popl
cmp
cld
cmc
lea
add
andl
mov
ljmp
rolb
fistl
popf
push
daa
cld
aas
stos
jge
sarb
sarb
jmp
clc
lret
mov
lcall
out
mov
xor
add
jae
shl
movsl
or
imul
xlat
outsb
push
xchg
or
cltd
xchg
ja
js
je
dec
pop
xchg
cmp
pop
jns
mov
dec
xchg
mov
in
xor
movsl
and
sub
sub
mov
lret
mov
subb
mov
or
inc
rcll
mov
ss
jmp
lcall
jecxz
out
sub
add
cs
into
les
ret
xor
shrb
mov
test
xchg
inc
mov
add
mov
mov
scas
pop
jns
testl
pop
fnstsw
imul
sbb
jne
jno
jecxz
mov
add
inc
cmp
mov
push
jns
and
in
sub
and
and
jno
push
adc
fnsave
mov
pop
iret
cli
xlat
imul
add
mov
add
rcrl
dec
mov
xchg
or
lcall
sbb
dec
ds
push
scas
hlt
fdivrs
dec
popf
jle
pop
pop
mov
fdivs
ret
pop
mov
repnz
das
testl
sub
dec
fsts
push
je
test
xlat
das
mov
js
cmp
je
cmp
test
int
xor
lret
mov
into
aas
dec
shll
jg
fcmovnbe
jne
dec
push
loop
adc
xchg
test
mov
hlt
hlt
xor
sti
enter
sub
add
scas
in
mov
nop
arpl
push
fldenv
jmp
jl
inc
fs
sbb
stos
jmp
scas
sub
in
mov
mov
mull
pop
sbbb
mov
fwait
gs
pop
pop
add
test
cli
in
fisubrl
clc
pushf
push
mov
inc
jmp
lods
fs
repz
or
xlat
jl
xchg
iret
xchg
jmp
sahf
push
jp
sbb
sub
andb
fistpll
cmp
jl
fiaddl
add
pusha
jb
es
out
iret
mov
rolb
fidivrs
mov
cmc
mov
xor
add
inc
fisubrl
mov
add
push
or
lfs
add
stos
inc
jbe
fistpll
fs
gs
mov
lock
mov
imul
and
ds
or
sbb
xchg
test
call
xchg
sahf
int
cmp
or
mov
sbb
mov
mov
lods
xor
mov
sti
inc
fildll
jl
mov
push
push
stos
xor
xor
mov
movsb
xor
aaa
aas
popa
iret
loop
or
das
rorl
and
aaa
mov
jb
test
arpl
ljmp
or
xchg
fidivrl
and
fstl
popa
sub
inc
mov
int
jg
mov
ljmp
or
lods
loop
sti
test
addb
mov
mov
call
fisubrs
ljmp
test
lock
and
cwtl
push
mov
add
sbb
fsubrl
push
dec
das
imul
mov
les
and
insl
scas
dec
stos
push
adc
out
imul
dec
pop
lods
sbb
js
mov
data16
mov
fadds
xor
sbb
sar
jecxz
scas
in
addr16
loope
push
fidivs
js
ret
sub
int
test
xor
xor
divb
push
pop
in
pop
mov
xor
inc
out
imul
cmp
push
repnz
outsb
outsl
shlb
pop
in
addr16
data16
add
es
leave
lcall
jle
clc
repz
ja
xor
cmpsb
xchg
test
ficompl
mov
popf
dec
xchg
insb
out
imul
jmp
jge
xor
aam
ret
pop
cltd
loopne
xchg
leave
pop
out
fmull
lock
xchg
fcmove
or
mov
add
cmc
xchg
imul
outsl
lods
andl
dec
adcl
out
xor
imul
xchg
and
aam
cwtl
push
ret
sub
jno
add
mov
ds
aad
mov
outsl
lahf
dec
push
scas
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
jmp
fnstenv
xchg
gs
test
sbb
bound
pop
bound
inc
jae
inc
jecxz
push
std
pop
iret
mov
hlt
dec
nop
and
or
dec
outsl
stc
xchg
ljmp
jg
es
lahf
dec
pop
in
xchg
ljmp
and
inc
out
xchg
pop
fldenv
jmp
cmp
data16
scas
inc
sub
shlb
jnp
divl
outsb
push
push
push
sti
or
fnstenv
jg
push
or
in
pop
mov
outsl
into
mov
sbb
push
lea
mov
pusha
inc
cmp
jne
mov
sub
fisubrs
out
push
imulb
lcall
push
pop
imul
adc
movsb
into
mov
imul
mov
or
daa
dec
cwtl
sub
xorl
notl
in
xorb
scas
push
outsb
and
scas
lret
ret
mov
daa
out
popa
fcom
shrl
mov
push
loopne
popa
dec
fisttpl
xchg
sub
sbb
sahf
dec
xchg
fmuls
insb
and
aaa
into
or
hlt
bound
mov
mov
ror
std
mov
test
mov
movsb
pop
cmpsl
xor
xchg
icebp
mov
push
dec
adc
xor
dec
mov
pop
les
add
addr16
or
pop
loope
ss
in
inc
or
lea
push
dec
sbb
push
xchg
arpl
clc
lret
xchg
lock
inc
pop
cli
mov
test
jns
mov
iret
popf
push
loope
dec
pop
lods
and
mov
unpckhps
push
cwtl
in
icebp
push
push
and
popa
pop
mov
ljmp
push
cmpsl
cmp
mov
repnz
sub
sbb
insl
lcall
out
jbe
dec
sbb
rcll
and
mov
out
lea
into
jle
cmp
mov
mov
imul
cmp
fsubs
push
xchg
sub
push
push
xchg
jge
ja
dec
bound
inc
stos
lret
xchg
xchg
lret
push
into
push
aas
pushl
rclb
jg
adc
daa
jne
push
test
push
push
bound
jo
pushl
bound
jbe
add
sub
cli
out
les
mov
xchg
inc
sub
fildl
les
sahf
fadd
jo
lods
inc
lcall
movsb
xchg
test
lret
and
mov
and
int
aas
jae
mov
add
ss
shll
int3
add
sbbb
xchg
adc
mov
mov
and
iret
add
adc
lret
mov
pop
pop
cwtl
or
mov
cmpb
popa
and
mov
sti
mov
sbb
stos
mov
rcrl
out
into
inc
ficomps
xor
ja
movsl
mov
stos
jmp
cld
dec
sbb
sbb
mov
add
xlat
bound
sub
pop
test
add
xor
rcll
xchg
movsl
lea
xor
push
js
mov
add
scas
adc
dec
icebp
jnp
ds
dec
push
cmp
sbb
into
dec
sub
cmp
mov
jno
mov
inc
jnp
sahf
lea
or
xchg
cwtl
xabort
lret
pop
inc
std
add
jo
daa
loope
mov
push
cwtl
ljmp
movd
cmc
cli
in
push
insl
adc
mov
and
dec
xor
xor
addr16
cmp
sub
es
sub
arpl
nop
mov
lret
xchg
xchg
aas
ficoml
sub
xchg
push
lret
jg,pt
push
fmuls
test
cmp
push
jmp
mov
push
adc
lock
cmc
into
mov
dec
push
jne
sub
jge
inc
and
iret
xor
daa
mov
cmc
mov
cmp
mov
add
add
fstpl
dec
xor
fldl
or
add
leave
sbb
bound
call
into
gs
pop
std
fwait
and
ret
aaa
and
mov
dec
jecxz
aas
add
xor
push
fwait
outsb
test
xchg
xor
pop
je
add
fsubl
icebp
pop
xchg
xchg
stos
mov
ja
dec
fucomip
cmp
cltd
cwtl
adc
inc
jle
pusha
push
call
fs
jns
cmpsl
push
test
lds
sbb
dec
mov
decl
mov
je
xor
push
lods
loop
ret
jp
pop
shr
mov
pop
jg
or
pusha
insb
lcall
neg
or
lods
adc
das
mull
subb
push
mov
xor
pop
jge
divl
jo
xchg
enter
jl
xor
dec
out
mov
outsb
jecxz
adc
into
bound
xchg
xchg
and
cmc
pop
in
push
inc
push
and
or
lea
repnz
and
xchg
mov
sbb
mov
lods
rorb
test
mov
test
mov
idiv
cltd
adc
cwtl
ss
fmulp
push
cltd
adc
push
mov
pop
xor
dec
adc
mov
pop
push
loope
scas
aaa
lock
and
stc
les
iret
mov
fiaddl
push
sub
sbb
daa
popf
adc
pop
mov
pop
and
pop
es
gs
and
jae
inc
inc
es
jmp
bound
or
adc
xchg
push
dec
xchg
iret
data16
loope
dec
inc
repz
jo
cs
cmp
fsubl
push
in
jecxz
mov
loope
mov
mov
es
iret
pop
push
out
mov
in
sbb
pushf
loop
or
cwtl
xor
stc
mov
dec
jno
repz
xor
sbb
mov
dec
push
addb
je
daa
xor
pop
mov
cmp
cmp
add
repnz
xor
sub
test
iret
outsb
daa
aaa
mov
push
sbb
xlat
pusha
and
cmp
lods
lds
ljmp
sub
mov
mov
out
outsl
in
and
sahf
loopne
icebp
sahf
dec
and
push
cmp
pop
enter
sbbb
and
push
jp
arpl
cmpsl
mov
mov
fs
push
lahf
or
addb
pop
inc
outsb
addb
sub
into
jp
xchg
dec
je
test
imul
push
cld
pusha
xor
ss
imul
mov
mov
aaa
xor
pop
mov
xchg
pop
cmp
stos
xchg
sub
mov
mov
hlt
sbb
push
int3
repz
rcll
and
pusha
sbb
cmp
aam
rclb
lea
inc
fistps
sti
push
mov
scas
ret
stc
aaa
push
cmpsb
push
jnp
shrb
test
jae
or
imul
out
add
scas
data16
dec
mov
arpl
repz
pop
iret
movb
in
pop
xor
shlb
jl
and
dec
push
push
mov
lods
adc
gs
mov
cs
pop
pop
inc
xchg
or
xor
sbb
mov
scas
pushf
int3
daa
mov
mov
addr16
lcall
add
mov
xchg
push
test
jnp
or
lret
stc
and
daa
xlat
repnz
push
dec
in
mov
ficomps
and
scas
xchg
dec
hlt
cmpsb
mov
mov
movsb
hlt
sahf
push
out
and
popa
je
out
jg
out
xor
mov
xchg
sti
mov
pop
je
sarb
sbb
jno
leave
xchg
aaa
inc
xorb
mov
fistpl
push
add
popa
sbb
int
addr16
mov
scas
mov
out
inc
call
in
pop
addr16
sbb
or
das
xchg
and
mov
sahf
jle
mov
fildl
push
sub
ljmp
stos
loope
inc
ret
cmp
nop
push
mov
mov
movsl
mov
add
mov
pop
pop
mov
sahf
dec
lcall
push
and
shrl
pop
push
cmp
out
mov
aam
in
in
lahf
dec
nop
lods
data16
push
fiaddl
icebp
negl
popf
idiv
mov
cmpsl
mov
pop
dec
lret
or
repz
sti
and
fidivrs
sbb
bound
mov
jae
aad
ret
bound
ss
mov
push
es
in
dec
mov
fildll
pop
mov
push
jmp
mull
pop
imul
inc
scas
in
push
xlat
in
cwtl
into
bound
sub
out
mov
into
loop
push
cmpsb
mov
cld
test
stos
jle
shrb
cmc
jmp
pop
imul
or
or
popa
jns
sub
fidivl
repz
xchg
mov
jmp
cmp
pop
jo
fwait
mov
fstpl
mov
mov
imul
pop
out
push
push
data16
mov
ja
sbb
mov
jmp
dec
clc
paddw
mov
add
and
outsb
dec
in
test
xor
ss
lock
and
les
add
mov
ljmp
cltd
mov
or
flds
xor
mov
addr16
test
filds
js
inc
aam
dec
mov
inc
cltd
daa
jne
loopne
mull
shrl
mov
add
es
imulb
scas
inc
inc
mov
ja
stos
mov
aad
iret
aaa
neg
shrb
dec
add
adc
and
testb
dec
ret
cwtl
loopne
adc
movsl
and
push
test
rorb
fwait
arpl
mov
dec
dec
sbb
data16
out
sbbb
ja
popa
jl
push
cmp
mov
add
lods
push
jne
pop
movsl
ja
push
shl
cltd
cmp
add
dec
mov
jmp
loop
mull
aaa
fs
inc
xchg
data16
int3
aas
xor
stc
lds
jg
mov
call
stos
bound
fisttpll
xchg
jmp
sub
cmp
arpl
roll
cli
and
inc
je
add
dec
lcall
inc
adc
cli
xor
insl
shlb
jg
xor
and
outsl
sbb
sub
popa
jne
ss
inc
pop
mov
fidivs
xor
loopne
mov
mov
or
iret
cwtl
xchg
adc
shr
in
mov
sub
outsl
sbb
insl
popa
cmp
les
lods
xor
inc
mov
pop
push
movsl
inc
cmpsl
fists
pop
scas
inc
dec
das
lret
xor
add
in
les
sbb
hlt
add
cmp
mov
inc
pop
sbb
pop
lods
push
add
roll
xchg
dec
fidivl
add
out
out
push
aas
imul
cmp
ret
lret
lahf
icebp
or
jmp
sarl
cmpsl
out
xor
push
fstps
sub
sti
cmc
sarb
cmp
pushf
imul
cmp
push
and
fmull
das
in
inc
xchg
xchg
adc
dec
xor
addl
lods
adc
es
sarb
push
dec
and
imul
xchg
xchg
insb
shl
adc
adc
cmp
cmp
ret
dec
out
and
mov
pop
mov
rolb
mov
jae
dec
xchg
cmp
enter
into
fnstsw
repz
cltd
stos
or
imull
push
into
pop
cmpsl
mov
dec
mov
fbstp
mov
das
mov
loopne
sbb
adc
cmp
push
push
jp
out
sub
fisttpll
jg
mov
int3
aad
lret
and
ljmp
popf
popa
cmp
mov
xor
jb
ret
fistps
or
scas
enter
lret
mov
popa
nop
or
jnp
add
mov
sub
push
add
les
in
movsl
pop
mov
out
in
call
push
sbb
jbe
lret
loope,pt
lods
fadd
ret
pop
xchg
fnstcw
fdivl
test
xchg
cltd
mov
push
jb
mov
pop
shrb
bound
mov
sbb
cmp
mov
mov
es
dec
mov
hlt
aam
shll
push
jbe
fcompl
pushf
xchg
enter
sub
push
xor
lret
out
mov
dec
xchg
adc
pop
sbb
orb
xchg
pop
bound
lock
clc
lahf
dec
dec
movsl
pop
push
inc
lods
repnz
lods
std
loopne
jmp
pop
xor
enter
lock
jae
push
cmpl
jecxz
xchg
dec
decl
mov
xchg
sbb
mov
cmp
pop
sub
sti
lret
icebp
fcomip
mov
add
sahf
or
sub
out
adc
cmp
pop
push
xor
movsl
mov
pop
or
inc
inc
pop
in
cmpsb
mov
and
cwtl
fprem
cltd
stc
cwtl
jo
add
pusha
mov
cmp
jle
mov
mov
sub
cmp
lcall
cmp
xchg
jae
out
xor
dec
sti
jge
daa
xchg
pushf
mov
dec
iret
lea
dec
and
xchg
addr16
mov
pop
in
loopne
sub
nopl
push
ja
movnti
push
inc
jmp
xchg
in
adc
sub
aaa
lods
inc
jb
mov
jmp
cmp
mov
dec
jp
jae
and
ret
aad
adc
sub
sarl
test
repnz
xchg
dec
jg
lods
js
test
mov
aas
sub
xchg
jno
in
test
ljmp
jecxz
add
xor
jo
pop
mov
xor
cltd
mov
testl
or
dec
push
mov
adc
mov
les
ja
std
push
adc
cmp
pop
cmpsb
std
cld
sub
sbb
int
pop
sbb
imul
es
add
and
cmp
rorl
dec
mov
mov
shlb
inc
cmpl
into
test
arpl
push
jb
test
push
out
cld
and
stos
mov
push
inc
fdivrp
outsl
outsl
push
mov
daa
addr16
aaa
fisubl
jg
lahf
call
add
mov
mov
sub
cmp
push
fucomp
cmpsl
bound
mov
icebp
cmp
imul
hlt
mov
fs
loop
scas
lds
pop
fisubrs
jae
arpl
enter
and
push
fidivl
dec
sub
lcall
mov
cmp
cmp
paddusb
mov
add
jecxz
in
outsl
lods
jbe
mov
jne
xor
out
ja
les
fistpll
movsl
dec
cli
and
xacquire
mov
adc
in
mov
push
sbb
pop
out
rolb
jb
insl
cmpsl
lcall
push
or
push
add
clc
imull
fistps
add
push
xchg
mov
ljmp
fnstenv
enter
add
push
mov
inc
jmp
out
adc
mov
inc
and
outsl
ljmp
cwtl
out
pop
insl
mov
ffreep
xchg
mov
push
test
xchg
inc
add
sbb
xor
cld
clc
stc
loopne
out
rolb
rorl
out
add
lea
in
cs
insb
iret
sar
cltd
push
cmp
leave
xor
pop
hlt
adc
dec
sub
mov
and
iret
and
jmp
add
in
mov
cli
into
imul
fdivrl
mov
xchg
fistpl
nop
test
test
push
shrl
pushf
lds
rorb
jno
inc
or
mov
sub
shl
pop
sbb
adc
lahf
mov
mov
rorb
out
cmpsl
mov
pop
leave
fcomps
push
cld
cmp
pop
insb
in
adc
pop
mov
addr16
inc
fldcw
inc
scas
out
lret
popf
mov
lods
mov
fidivrs
xchg
inc
stc
pusha
jmp
push
lahf
xchg
sub
ljmp
cmpsb
sbb
scas
call
adc
imul
add
and
fcmovne
and
jb
mov
mov
sti
addr16
lret
or
dec
pushf
jg
mov
ds
cltd
movsb
shl
xchg
push
pop
cmpsb
push
jmp
jns
dec
xor
pop
iret
dec
gs
inc
mov
xor
sub
outsb
fpatan
les
imul
mov
add
dec
pop
test
stos
push
pop
lcall
pop
ret
jno
mov
push
and
daa
inc
jl
lods
outsl
mov
fdivrl
adc
dec
lcall
scas
jge
add
cwtl
adc
sbb
sbb
adcl
pop
cli
je
out
dec
mov
dec
xchg
je
sub
inc
and
cmpsl
aad
int
mov
pop
inc
xor
push
push
dec
inc
out
lret
push
xchg
notb
iret
or
data16
xor
pop
inc
insb
mov
fucomp
inc
mov
inc
cli
dec
std
jno
test
mov
mov
cmpl
mov
xor
push
xor
pop
or
lods
fistl
ljmp
push
aam
testl
ljmp
aad
aas
aas
or
movsl
mov
push
fnstcw
popf
jecxz
bound
outsl
ss
loope
fwait
push
cs
popa
xor
dec
sub
call
jg
xchg
add
fisubrs
dec
sbb
push
pop
or
sub
cs
aaa
test
jns
daa
sbb
jmp
or
adc
insb
out
inc
push
push
outsl
lods
push
orb
sbb
mov
mov
pop
add
or
adc
sbb
movsl
cmp
pop
rorl
xor
stc
mov
sub
pop
push
jg
mov
sahf
ljmp
mov
xor
ret
std
outsl
stos
rorl
daa
pop
mov
cmp
adcb
inc
push
ss
jne
movsb
fbld
inc
js
mov
dec
cwtl
pop
xlat
add
jns
xor
pusha
incb
shlb
clc
loope
mov
lods
push
pop
insl
pop
jb
push
dec
adc
fwait
movsb
xchg
adc
xor
fidivl
sbb
rcrl
pop
in
lcall
scas
outsb
push
sbb
and
or
cwtl
adc
nop
jge
mov
fcmovb
inc
jl
mov
or
imul
mov
insl
jbe
fstpt
jns
movsl
es
daa
cli
mov
add
sbb
cwtl
out
and
adc
pop
pusha
jl
sub
cmp
inc
stos
jecxz
icebp
mov
adc
and
dec
test
fs
jns
add
sahf
or
or
sub
dec
fstp
popa
jb
sub
loope
outsl
mov
cltd
inc
popa
or
insb
sub
out
ds
ret
test
push
aaa
xchg
jmp
filds
sbb
or
inc
addr16
fcoml
cmp
adc
pusha
outsb
push
add
hlt
dec
mov
dec
out
sub
adc
and
hlt
xlat
mov
mov
push
or
jb
scas
xchg
jno
pop
xchg
out
mov
mov
jo
add
std
lods
pop
cmp
mov
lret
dec
mov
xor
hlt
push
loope
pop
movsb
mov
pop
mov
cmp
fildl
popa
xor
sub
push
shlb
hlt
inc
pop
push
push
mov
lahf
rclb
daa
lret
repz
shlb
cli
testb
je
pop
push
xchg
mov
adc
add
cmpsb
and
fs
mov
gs
movsb
test
mov
aam
xor
loop
mov
mov
loop
ds
rclb
fs
lea
aaa
call
or
inc
enter
ds
loop
cmp
mov
xor
mov
pusha
sahf
mov
add
clc
pop
dec
jecxz
cmpsl
mov
cs
dec
inc
mov
sbb
loope
sbb
cmp
pop
add
mov
mov
mov
sbb
or
xor
adc
pusha
mov
clc
cmpsl
call
clc
insb
dec
push
dec
xor
mov
push
jae
pop
jns
push
dec
mov
fldt
adc
mov
mov
sbb
pushf
lods
ret
pop
std
cmpsl
loope
cmc
and
rolb
sbbb
out
and
js
mov
iret
stos
popa
nop
movl
adc
cmpsl
pop
ret
cmp
mov
sbb
int
outsl
lods
pop
jecxz
test
pop
or
xor
ret
insl
xor
imul
test
icebp
stos
mov
imul
push
dec
aaa
outsl
fwait
jo
aam
shl
cwtl
mov
cmp
xor
je
aas
jp
call
fstp
push
or
cltd
shlb
dec
iret
lea
jp,pn
ja
leave
loope
jmp
pop
sub
testb
xchg
subb
rorb
push
xchg
pop
xchg
cmp
xor
dec
iret
lea
xor
pop
jg
push
into
add
xor
pop
jecxz
fs
xlat
cli
imull
ds
pop
es
repz
cmc
mov
xor
pop
push
xchg
fbstp
mov
clc
xchg
fcoms
out
pop
int
mov
pop
cwtl
sub
mov
jns
mov
pop
push
sbb
sbbb
pop
ljmp
mov
adc
push
adc
xchg
arpl
pop
mov
sub
addl
scas
popl
out
inc
lods
mov
inc
xchg
add
lods
fs
mov
inc
test
push
clc
adc
je
clc
pop
pop
pop
push
fstl
lods
inc
cmpl
dec
cmp
inc
cmpsl
add
push
ret
or
rcrb
sub
push
jge
enter
or
ret
das
pusha
mov
jno
inc
cmp
cmpb
pop
xor
and
insl
pop
repz
or
mov
pop
jmp
mov
inc
mov
ss
or
sub
sbb
adc
mov
fsubrs
pop
ljmp
pushf
fidivrs
repz
out
rcrl
leave
xor
into
ljmp
test
repz
pop
mov
add
xor
mov
je
inc
in
stos
rclb
sub
testb
mov
dec
xchg
and
mov
das
shl
adcb
push
mov
jp
lcall
or
je
clc
mov
dec
add
dec
pop
mov
cmp
cmp
mov
jb
add
sbb
arpl
jp
push
leave
das
jb
mov
lds
fwait
push
lcall
std
ret
jmp
mov
dec
sbb
aad
sub
mov
je
sub
xor
pop
nop
arpl
sbb
push
mov
ja
jl
or
sub
add
into
fcomps
ret
mov
xchg
push
fnsave
mov
mov
int3
or
sbb
insl
addr16
xchg
pop
in
das
pop
fwait
xor
xchg
xlat
insb
incl
push
cld
inc
dec
pop
nop
xor
pop
sbb
in
bswap
mov
out
lods
mov
mov
cmp
jno
xchg
repz
out
test
and
popa
cmp
xor
arpl
lock
sahf
mov
imul
imul
ret
jno
inc
dec
inc
andb
add
dec
lret
and
dec
lahf
xchg
fidivs
scas
scas
inc
mov
cmp
xchg
loopne
out
mov
xor
inc
cmp
cwtl
sbb
lret
cmova
pop
pop
imul
hlt
and
pushf
push
jae
sub
lock
cwtl
jg
in
jecxz
cli
push
adc
test
dec
movsl
and
lahf
add
or
bound
cmpsb
push
enter
in
les
or
jbe
inc
sub
sub
ds
fwait
sti
fbld
out
dec
inc
sub
cmpsl
mov
xor
push
insb
fistpll
cltd
xchg
sub
xor
pusha
ret
scas
push
jbe
jmp
loopne
pop
sbb
push
cmp
sbb
lcall
xchg
mov
cmp
fwait
sub
jmp
mov
cmpsl
jg
xor
inc
xlat
int3
push
lret
mov
out
call
inc
clc
les
and
mov
dec
popf
ljmp
inc
in
xchg
sub
neg
xor
mov
push
xchg
js
or
xor
sub
or
push
adc
pop
xchg
cltd
aad
das
repz
rcrb
lea
cmp
andb
xchg
or
adc
xchg
adc
inc
sarb
shll
sbb
mov
cs
sti
lret
xchg
inc
aaa
jecxz
jge
outsl
sbb
mov
cli
mov
leave
sbb
mov
test
sbb
adc
aas
gs
in
pop
mov
xchg
push
lcall
sbb
cs
loop
mov
aam
cs
inc
das
xlat
icebp
push
cltd
mov
das
cmp
dec
lahf
add
dec
add
je
push
push
pop
sahf
je
das
les
imul
js
leave
push
loopne
cld
cwtl
xchg
js
mov
icebp
orb
push
imul
push
inc
std
mov
out
mov
fdivrs
or
notb
test
mov
fwait
leave
shll
adc
loope
adcb
jo
push
sbb
iret
add
in
add
roll
xchg
cwtl
or
xor
stc
or
xor
and
sub
mov
mov
add
ds
dec
mov
out
xor
jg
mov
dec
inc
mov
mov
jo
in
add
cmp
sbb
xchg
pop
roll
out
ds
hlt
jg
mov
push
mov
lods
jle
test
dec
xchg
mov
add
xor
add
es
jne
cmpsl
outsl
stos
add
int
mov
push
ret
inc
sub
and
aad
mov
out
xchg
aaa
dec
je
nop
shl
dec
push
imul
pop
jo
lods
out
je
test
call
push
adc
daa
into
pusha
cmpsb
mov
jl
jbe
xchg
and
movsl
or
lods
add
pop
cmp
fsubs
inc
mov
enter
adc
stos
adc
inc
mov
inc
xor
movsb
cmp
mov
mov
pop
repz
inc
enter
rcrb
jbe
jmp
jbe
or
dec
mov
test
sbb
push
and
sahf
in
xchg
movsl
xchg
in
fsubrs
jne
jge
pop
outsb
inc
fisubs
inc
sarb
ficoml
jae
cmp
sbb
mov
pop
push
sbb
jmp
mov
rcr
shll
xor
inc
es
fstl
popf
js
push
or
sbb
and
clc
xchg
xor
cltd
cmpsb
pop
movsl
mov
push
out
sbb
jmp
push
movsl
mov
add
rorb
enter
cltd
cvtpi2ps
js
lret
stc
pushf
push
pop
insl
pop
xchg
jmp
mov
insb
xor
jmp
cmp
cmpsb
mov
repz
daa
fs
xchg
cwtd
pusha
insb
pop
cltd
ret
ret
jns
and
rcll
lock
or
pop
and
adc
pop
arpl
ds
pushf
mov
jno
sbbl
push
xchg
inc
outsl
aad
push
aad
and
xchg
cwtl
cmp
cmp
jp
inc
push
insb
scas
jnp
notb
test
and
mov
jno
fsubs
push
or
repnz
adc
out
adc
jecxz
cmp
fidivrl
jg
mov
into
jl
sbb
cwtl
sub
and
shl
fmul
cmp
int3
and
in
icebp
test
in
dec
repz
repz
and
add
mov
scas
test
cltd
test
imul
xchg
sbb
cs
in
into
dec
call
cmp
pushf
lret
jno
mov
out
rcrb
adc
xchg
or
out
mov
pop
testl
sbb
cmp
or
incb
stos
out
jnp
aas
xchg
pop
xchg
aam
jge
rolb
dec
pop
lea
xchg
lahf
je
sub
lods
mov
cld
mov
in
in
mov
dec
sub
xor
push
stos
push
xor
das
shl
push
lods
daa
loopne
mov
adc
or
xchg
jne
in
shl
rdtsc
outsb
dec
shll
mov
addr16
lea
pop
or
js
shlb
loope
and
jo
pusha
cmp
fadds
icebp
daa
jb
inc
movsl
cmpsb
pop
iret
mov
and
add
fiadds
inc
mov
mov
testb
arpl
or
lds
or
mov
mov
push
pop
mov
xchg
mov
or
and
xor
adc
mov
pusha
xchg
xchg
inc
xchg
mov
inc
dec
test
mov
mov
jmp
iret
xchg
mov
mov
sub
sti
in
mov
out
ds
mov
std
sti
jmp
lret
aam
mov
jo
clc
pusha
repz
lret
ja
push
mov
pop
xchg
cmp
mov
pop
int
or
test
jecxz
pop
push
int3
aam
adc
or
or
dec
out
lea
mov
add
push
cmp
push
adc
nop
xchg
mov
jmp
sti
adc
imul
xchg
jae
sub
and
insb
jo
pushf
out
cwtl
push
fcmovb
inc
ret
mov
les
aam
loop
jns
sbb
movsl
xor
cmpsl
ret
in
adc
cmp
test
shr
out
and
pushf
mov
push
roll
fldl
push
mov
and
pop
je
jecxz
leave
inc
jb
cld
ror
jne
cli
mov
in
sbb
or
sbb
mov
push
inc
popa
sub
and
jae
icebp
in
inc
push
or
repz
daa
jb
lods
push
cmc
pop
or
ds
mov
cwtl
sbb
pop
test
jbe
aam
and
push
inc
pop
xchg
fcoms
inc
xor
test
cmp
arpl
mov
mov
cmpsb
push
sub
loope
sub
lea
mov
push
in
lret
bound
repnz
iret
lods
addl
push
stos
sarb
cmpsl
stc
inc
inc
lcall
out
fimuls
sbb
jl
dec
push
cmc
add
mov
cmp
fidivs
outsl
cmp
call
pop
cmpsl
dec
pop
add
push
fldenv
divl
nop
pop
cmc
out
cs
hlt
mov
xchg
mov
in
popf
jg
jp
sbb
lcall
int3
shlb
jp
fisubrs
iret
aaa
cltd
fninit
test
xchg
inc
cmp
stos
sub
and
outsl
mov
lret
aad
inc
ljmp
xor
shlb
xchg
push
fcomps
pop
adc
sub
jmp
movsl
mov
sub
mov
mov
xchg
mov
pop
mov
js
xchg
mov
sbbb
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
jmp
jecxz
cmp
sbb
filds
push
cmp
negl
bound
ror
xchg
and
push
lret
mov
gs
lock
popf
cmp
adc
int3
js
mov
aaa
cmc
ja
inc
pop
push
lahf
jge
and
xchg
les
and
out
inc
clc
les
loope
jne
jmp
push
cmc
adc
outsl
add
sbbb
cltd
inc
push
push
xchg
push
dec
sarl
jae
icebp
jno
add
fadd
push
jnp
stos
mov
jl
loop
push
fwait
inc
lahf
dec
push
in
push
rorb
inc
mov
adc
push
mov
mov
xlat
inc
jae
add
sti
out
in
into
test
andb
push
stos
or
ljmp
dec
fbld
xchg
sub
pop
jp
dec
pop
jle
pop
mov
imul
or
mov
nop
mov
outsb
pushf
rclb
rcr
pop
dec
and
fcomi
jp
ljmp
cmp
xchg
dec
cld
shufps
or
xchg
pop
pop
repz
jecxz
nop
cmp
pop
popf
test
aas
rolb
xchg
inc
pop
jmp
ret
xlat
sbb
bound
push
jp
addr16
lea
push
sti
inc
fildl
mov
xchg
pop
push
mov
std
sub
in
gs
mov
movsl
movb
mov
push
mov
xchg
cmc
sub
inc
add
mov
outsb
pextrw
test
xor
fwait
dec
into
xchg
lahf
mov
nop
jecxz
pop
xchg
xor
cmp
push
shrl
je
mov
push
mov
mov
dec
jb
cmp
pop
push
in
mov
cmpsl
jne
push
push
adc
aam
push
mov
cmp
nop
and
bound
and
clc
scas
call
mov
push
or
jle
dec
aaa
add
xor
pop
call
iret
push
stc
je
pop
cmp
sbb
js
test
fisubs
sub
jl
dec
inc
sub
jns
push
enter
xchg
cmp
nop
xchg
xor
test
push
loopne
insl
dec
inc
adc
xchg
push
push
jne
jmp
add
ror
outsl
push
loopne
aad
shrb
pop
pop
inc
scas
pop
lods
jbe
cltd
mov
inc
jbe
cmp
adc
sub
adc
in
lahf
aaa
sbb
cmp
lret
fldenv
jno
addr16
xor
mov
pop
test
or
push
lods
and
cmpsb
jns
mov
inc
jmp
add
jne
ficoml
mov
clc
repnz
cmp
sub
mov
cmp
scas
fisubs
add
mov
mov
or
lea
lcall
fdivs
aas
das
adc
pop
mov
push
xor
lret
dec
movsb
clc
xchg
cmp
stos
test
in
out
sbb
xor
inc
daa
ret
xchg
xchg
dec
addr16
les
pushf
xchg
lea
mov
idivb
and
shlb
lods
and
pop
and
mov
mov
adc
cmc
arpl
xchg
xchg
pushf
mov
add
fistps
mov
lea
stos
fdivs
mov
lds
out
cmp
mov
in
inc
cltd
inc
shr
mov
sbb
arpl
pushl
jg
shll
pushf
test
fsts
scas
insl
into
xchg
jp
jbe
fistl
rorb
lock
sbb
int3
pop
cli
xchg
xor
mov
jmp
std
out
sbb
mov
jge
out
jbe
pop
mov
mov
imull
decb
int
jo
aad
rorl
lcall
repnz
sbb
xchg
outsl
ja
popa
pop
jge
int3
mov
cmp
cltd
pop
or
adc
outsb
xlat
les
insb
cmp
ret
and
dec
mov
lret
scas
jno
sbb
aas
aad
inc
xchg
imul
jecxz
mov
adc
cmpsb
xchg
lret
xchg
inc
xor
mov
stos
jmp
xorl
jmp
leave
jge
call
and
xchg
lock
ds
mov
jmp
or
jbe
stos
enter
bound
inc
xor
ret
insl
push
or
dec
in
jo
fadds
sbb
into
or
dec
popf
mov
mov
mov
fdivl
jno
xchg
or
es
out
test
xchg
test
mov
subl
loope
xchg
pusha
inc
xor
icebp
pop
imul
lock
jb
push
insb
stos
xor
scas
inc
push
and
sbb
cmp
jg
push
mov
cmp
fsubrp
adc
test
movups
mov
insb
mov
jno
pop
mov
inc
repz
enter
shll
push
jecxz
push
mov
fidivrl
and
and
xchg
xlat
sub
add
clc
cmp
pop
or
xchg
sbb
daa
pop
push
jno
call
inc
outsb
ds
test
jp
loop
mov
mov
dec
pop
movsl
jno
mov
ss
es
iret
mov
les
into
lcall
rep
push
orl
out
fldenv
sbb
bnd
pushf
in
jae
xchg
popa
cmpl
cmp
scas
jmp
xchg
push
into
lods
sub
imull
cmp
das
mov
mov
pop
shll
dec
dec
push
cld
shl
mov
data16
psllw
mov
cmc
stc
fists
mov
andb
ljmp
movsb
adc
sbbb
push
xchg
adc
xlat
fs
lods
xchg
inc
sub
lods
jae
aas
mov
jnp
sbb
cltd
shrb
push
jl
xor
xor
test
jae
pop
or
cld
fsubr
jge
mov
mov
xchg
shrl
sbb
sub
adc
or
mov
movsb
mov
mov
pop
das
scas
mov
xchg
xchg
xor
daa
je
xchg
adc
inc
xchg
call
xchg
cmp
cmp
sub
pop
adc
dec
and
mov
daa
cmp
cmpl
mov
das
test
dec
pop
stc
addr16
lds
andl
andl
xchg
and
inc
insb
pop
subb
ja
or
mov
xchg
cs
outsb
test
pavgw
pop
mov
loopne
shlb
lret
imul
stc
test
mov
les
rcr
jbe
fs
and
lock
push
jns
push
mov
scas
mov
ror
test
push
mov
xchg
cmp
repz
mov
mov
mov
inc
push
cmp
ss
loopne
pop
scas
xchg
pushf
push
cmpsb
rcrb
or
fcoms
push
mov
sbb
sar
enter
pusha
dec
les
xchg
cld
bound
sarl
xchg
sbb
xor
cld
lods
fildll
imul
sbb
fsubrp
mov
pop
rcrl
cmp
lret
ja
push
loopne
mov
mov
rorb
lret
fidivs
lds
mov
cltd
sbb
outsl
inc
scas
cltd
loop
jnp
and
cli
subl
jnp
rclb
das
push
jp
and
lret
pop
lcall
xchg
push
pmullw
jmp
ret
add
filds
pusha
xor
push
ret
jo
mov
inc
push
jl
xchg
icebp
loope
xor
xlat
out
adc
push
loop
enter
sbb
push
insb
into
pop
mov
inc
lahf
imul
addl
cmp
sbb
push
xor
add
pop
cld
shl
fisubrl
pushf
cmp
outsb
cmp
test
insl
pop
xor
cmpsb
pop
pop
in
aas
adc
addb
mov
mov
add
and
fstl
popf
stos
popa
or
sbb
jg
pop
add
outsb
and
dec
add
push
in
mov
pop
in
les
loopne
push
lcall
bound
subl
clc
out
mov
mov
cmp
test
es
aas
addb
jmp
pop
or
je
mov
aad
xchg
sbb
cli
out
jle
cmp
push
xor
push
sub
sarb
lods
push
fcomps
fildl
sub
and
das
mov
cmp
decb
inc
inc
mov
insl
pop
or
mov
sbb
arpl
mov
insl
or
imul
loope
outsl
push
ret
mov
loop
xor
add
dec
xor
aas
stc
adc
popa
inc
loop
daa
cmp
xor
aad
sub
loope
fstpt
out
pop
add
xchg
pop
lret
mov
add
pop
jbe
jo
out
mov
and
push
fstl
mov
stos
pop
frstor
ror
clc
int
ret
xchg
xor
cmc
cmp
cmp
std
and
lret
daa
std
push
jl
enter
sub
xchg
stos
out
test
sbb
inc
sbb
push
adc
rol
bound
stos
mov
xchg
jl
jae
and
ds
into
pop
adc
push
lods
xchg
cmp
mov
loope
test
ja
dec
popf
cmpsb
push
scas
lcall
or
mov
xchg
pop
pop
scas
mov
xor
ja
pop
mov
push
push
int3
or
insb
pop
or
hlt
add
in
or
adc
jmp
fdivr
push
nop
rolb
or
sahf
fcompl
aad
icebp
aam
xrelease
cmpsl
in
movsb
fsubs
cmp
loop
xchg
xor
mov
xor
push
cmpsl
adc
iret
dec
mov
clc
mov
jmp
pushl
lahf
insb
out
daa
pop
testb
outsl
sbb
mov
mov
test
mov
mov
cmp
stos
or
xor
mov
stos
ja
loopne
or
dec
xchg
lret
outsl
jl
cmp
mov
and
pop
or
mov
out
dec
aaa
xor
movsb
stos
bound
push
movsl
ljmp
cli
icebp
insb
and
push
loop
cmc
pop
aaa
cmp
push
jecxz
jmp
push
outsb
insb
jo
jg
shl
in
dec
cld
scas
rcrb
mov
hlt
xor
jbe
or
adc
lods
sti
pop
xchg
sub
lea
fldenv
push
and
push
xor
icebp
aam
inc
push
jns
jle
pop
pop
and
je
sub
iret
adc
pop
jnp
xchg
add
sub
aaa
pushf
notl
cmp
dec
push
bound
popf
push
mov
lea
fdivl
imul
popa
gs
add
dec
ds
dec
je
sahf
xchg
push
mov
ss
pop
pop
sub
imull
scas
leave
test
rcrb
cmp
pop
dec
pop
call
xor
cmp
call
movsl
popa
das
std
loopne
and
mov
sbbl
jp
adc
sub
dec
lods
bound
frstor
dec
scas
add
subl
inc
mov
inc
dec
jno
dec
mov
adc
clc
vbroadcasti64x2
imull
in
js
jge
lcall
subb
sbb
mov
pop
add
inc
outsl
aam
aam
jae
pop
bound
loop
sbb
cli
sub
mov
dec
scas
push
push
inc
jge
mov
inc
pop
in
xor
push
out
sub
or
xchg
bound
sqrtps
lcall
push
add
addb
outsl
sub
inc
pop
mov
and
in
addr16
push
clc
xchg
mov
sub
jp
cmp
pop
clc
nop
imul
mov
mov
pop
lods
addr16
in
pop
sahf
negl
jl
divl
cmp
mov
xor
lock
out
cs
sbb
cmp
test
icebp
dec
sub
cmpsl
daa
mov
and
testl
xor
int
test
xchg
mov
mov
lret
and
mov
insl
imul
adcl
pusha
ficoml
mov
xor
mov
das
mov
or
adc
push
mov
inc
jbe
dec
adc
stos
enter
cmp
pop
mov
jecxz,pn
fbld
fcmovbe
xorl
or
dec
mov
sub
lahf
sbb
xor
sbb
inc
loop
xor
sub
std
pop
pop
sub
sub
mov
loop
sti
shl
daa
fildl
test
out
mov
cs
xchg
mov
cmp
cmp
mov
jmp
int3
cmp
les
js
std
mov
fnstenv
addr16
inc
push
jp
inc
sbb
xor
sub
or
fidivrl
test
js,pn
or
mov
sahf
sbb
jecxz
mov
sbb
outsl
mov
cmp
mov
jge
insl
inc
repz
mov
cld
movsb
jmp
cs
mov
jbe
xor
stc
jo
add
jnp
mov
and
dec
aam
cmp
fnsave
cld
mov
popf
rcrb
mov
and
cmp
inc
inc
insb
test
or
shlb
mov
pop
lods
xchg
xchg
xchg
xlat
lret
adc
imul
xchg
pop
or
inc
push
es
incb
add
cmpsb
iret
mov
jg
aam
jmp
sub
movsl
xor
std
mov
movsb
mov
or
add
fsubs
pop
cmp
push
adc
hlt
cmpsl
adc
push
mov
sti
fidivs
and
in
outsb
mov
sub
dec
sbb
ret
or
sbb
scas
add
jle
push
push
ds
ret
cmp
pop
inc
mov
xor
mov
jo
imul
cmp
dec
clc
xchg
outsb
je
mov
insl
inc
pop
and
jb
out
addr16
std
xor
pusha
jle
pop
sbb
mov
cwtl
xor
ja
mov
int
pop
cmp
push
arpl
nop
cwtl
rcrb
cltd
ret
push
sbb
fimuls
test
jae
adc
mov
aaa
arpl
jno
sub
into
xchg
lahf
loope
ds
cld
fcoml
cs
xchg
add
mov
sbb
aam
mov
ficoms
mov
and
mov
addl
inc
mov
jo
mov
sub
sub
aad
pop
mov
pushf
dec
adc
jae
inc
sti
in
cltd
stos
pop
out
sti
into
loope
cmp
xor
notl
outsb
ss
dec
jb
loopne
stos
sbb
jge
sub
adc
sub
iret
pusha
stos
cs
test
dec
jge
sti
or
add
jae
cld
xchg
mov
jae
out
jnp
mov
dec
in
pop
out
add
insl
xchg
xor
jbe
jge
arpl
mov
and
and
pop
scas
jp
sub
jp
mov
fisttps
test
dec
push
icebp
dec
outsl
pop
out
rcr
dec
out
das
xlat
shl
mull
stc
push
dec
and
jae
mov
dec
in
push
mov
pop
in
fisttpll
test
stc
imul
lcall
inc
cmc
add
xor
pop
add
cmp
adc
jns
filds
push
jns
and
and
pushf
and
adc
mov
mov
push
rorb
cmp
lret
and
mov
jns
lods
pop
pop
int3
push
jnp
pop
mov
dec
xor
in
mov
fwait
mov
imul
movsl
lds
test
push
mov
cmp
test
xchg
pop
adcl
dec
lret
or
imul
fadds
repnz
or
jge
jge
jne
or
cwtl
jl
or
stos
pop
ljmp
pop
add
bnd
or
hlt
mov
sbb
xchg
xlat
xchg
jb
addb
sbb
fdiv
fiaddl
rol
push
gs
scas
inc
outsl
data16
xchg
outsl
push
push
out
fnstcw
add
orl
xor
out
fisttpll
cmp
or
dec
repnz
or
mov
mov
das
bound
jl
mov
int
lock
jbe
mov
add
inc
push
clc
push
lret
xor
pop
mov
and
dec
bound
and
sub
notb
test
push
xor
loope
bound
dec
mov
xor
lea
sub
icebp
ret
mov
dec
orb
mov
dec
add
and
and
daa
leave
mov
jo
lods
data16
data16
hlt
or
add
jae
nop
push
push
repz
fmulp
xchg
arpl
fmull
and
jb
jnp
inc
scas
xor
push
pushf
aad
dec
sbb
cmp
das
outsb
pop
inc
cmpl
das
aas
popf
ret
outsl
fildll
pusha
adc
mov
push
rol
stos
pop
divl
movsl
cmp
lahf
dec
orb
test
or
pop
jnp
push
pop
sub
fstpl
fsubp
shrl
sbb
xor
jb
xlat
dec
data16
jmp
pushf
mov
mov
mov
je
or
hlt
loop,pn
mov
mov
shl
mov
dec
aaa
notb
iret
xor
pop
or
rorb
adc
aas
dec
loopne
sbb
push
cmp
mov
pop
fsubr
sbb
movsl
dec
and
sub
rcr
pop
lods
cmp
inc
iret
lret
out
cmp
mov
cmpsb
adc
call
dec
or
fwait
dec
jg
mov
out
adc
iret
test
push
or
mov
pop
mov
push
cmc
dec
jno
and
jg
dec
or
jge
loopne
ret
outsl
les
jno
add
and
mov
push
sub
leave
xor
popa
fwait
sbb
out
sbb
mov
test
mov
lahf
mov
imul
xchg
jbe
test
fnstsw
xor
les
or
jns
push
incl
aam
add
cld
out
cmp
xchg
jl
or
dec
int3
inc
inc
ss
push
xchg
bound
iret
lea
xchg
les
jbe
push
add
pop
das
test
sub
sbb
and
mov
lea
mov
inc
push
cwtl
fidivl
adc
and
push
fs
arpl
mov
int3
adc
pop
and
xlat
dec
aad
enter
ja
dec
dec
imul
lods
daa
sbb
pop
sbb
push
loope
jg
xor
pop
insb
ret
sbbb
mov
int3
push
push
sub
fsubrs
es
xor
fcompl
fstl
add
outsb
push
pop
add
shrb
je
or
cmpb
std
sub
loopne
jle
mov
sub
lods
jmp
add
xlat
fistl
bound
jne
fisttps
bound
cmp
orb
jns
stos
cmc
jecxz
xchg
jge
insl
nop
mov
test
out
jbe
decb
cwtl
lock
outsl
loopne
hlt
stos
adc
mov
cwtl
pop
jmp
add
and
mov
mov
xchg
xchg
or
fwait
test
repz
push
fstpl
mov
jae
mov
inc
aaa
pop
mov
test
cld
dec
movsb
jo
sahf
mov
out
add
fldcw
into
stos
loop,pn
push
pusha
out
jno
int
daa
out
adc
xor
jle
stc
in
in
inc
dec
sarl
xor
out
lcall
mov
lods
imul
push
lcall
andb
jne
icebp
lock
dec
fwait
xchg
jecxz
sub
test
mov
jge
out
scas
jb
add
cwtl
test
rcrb
sbb
mov
pop
fildll
or
pop
add
data16
xchg
movsl
jp
xor
imul
out
repz
divb
pop
mov
into
call
sbb
mov
xchg
clc
mov
loopne
jecxz
ja
sti
dec
fnstcw
xchg
out
test
fisttpl
lds
sub
cld
sbb
fwait
push
ja
push
ret
jp
and
ja
push
ds
push
mov
mov
adc
jae
call
sbb
aas
push
and
and
or
pop
push
mov
ljmp
mov
jmp
xor
jmp
adc
xchg
or
outsb
or
or
cmp
pop
mov
inc
dec
je
pop
movsl
pop
rcl
adc
rorl
xor
dec
ljmp
mov
xor
int3
push
xchg
or
dec
pop
imul
fcomps
outsl
movsb
movsl
mov
cmp
push
dec
and
xchg
pushf
out
cmp
dec
cs
push
sarb
jp
mov
test
out
sub
inc
rol
mov
dec
cmp
aam
adc
mov
je
add
or
es
iret
pop
or
stos
insb
hlt
fstl
xchg
dec
pusha
data16
filds
mov
xchg
jne
mov
pop
leave
mov
dec
in
lcall
lds
mov
in
sbb
inc
cmp
icebp
sub
sub
push
jecxz
aas
push
mov
or
sub
enter
or
in
outsl
pop
lcall
mov
ds
mov
imulb
jmp
sub
push
clc
fs
cmp
movsb
xchg
jne
repz
add
ljmp
sbb
mov
mov
push
fnstcw
stc
mov
dec
xchg
adc
insb
outsl
pop
idiv
cmp
sbb
adc
lea
gs
out
cmp
jb
xlat
push
sahf
dec
inc
or
push
xor
adc
sar
rcrb
daa
add
xchg
sbb
test
repz
test
subl
int3
jge
xchg
js
repnz
imul
and
rol
movsl
data16
adc
inc
ja
push
fistl
inc
push
out
sub
jge
mov
clc
cmp
stc
pop
fisubrs
pop
ds
sub
rorl
xor
cmpb
cmc
inc
push
mov
cwtl
hlt
sti
inc
cbtw
aas
or
data16
inc
add
or
jg
fdivl
push
mov
add
out
xor
mov
lahf
lret
and
les
pushf
pop
dec
mov
mov
arpl
insl
call
fsubrs
clc
enter
in
sbb
fistpl
sub
pop
int
or
push
ror
inc
and
mov
les
in
out
jbe
test
out
mov
adc
mov
leave
popa
sub
jo
xchg
fcmovu
push
cmp
fwait
mov
test
daa
and
jmp
xor
inc
add
xchg
push
js
out
cli
inc
xchg
fnstsw
cmp
cli
xchg
push
lret
ss
sahf
loop
stc
mov
mov
cld
jnp
shlb
arpl
jge
push
cmp
cli
push
fistpl
addr16
sbb
lcall
add
mov
add
xor
int
add
jle
jb
shr
pop
loope
mov
bndldx
in
push
push
or
dec
mov
sub
dec
das
lods
test
mov
out
lret
stc
aad
repz
mov
push
mov
push
fisubrl
cmp
push
stos
mov
test
gs
mov
jmp
loop
inc
xor
xor
mov
lahf
xor
xor
jne
push
clc
nop
or
add
mov
adc
stos
jle
insb
pop
fldenv
cmp
out
or
sub
add
adcb
mul
lds
scas
inc
cs
lret
and
fadd
mov
and
pop
inc
outsb
cmp
push
and
jnp
mov
cmpsb
xchg
xor
fcomps
mov
jmp
movsl
je,pn
lret
fsubr
jo
xchg
add
out
ja
test
mov
push
shlb
xchg
add
je
sub
incl
icebp
aam
adc
or
mov
imul
daa
xchg
mov
jnp
enter
ljmp
ds
sub
lret
adc
mov
adc
orl
dec
test
ds
enter
sbb
nop
sub
stos
outsl
pusha
rclb
push
or
jle
dec
jo
ja
pop
jne
jp
dec
pop
arpl
decl
xor
rorb
pusha
inc
sub
lret
sub
jbe
imul
dec
in
dec
jp
pop
pushw
mov
in
mov
in
shl
xor
sti
mov
push
xchg
dec
jns
xchg
pop
pop
out
jno
in
dec
mov
jo
push
call
adc
jle
xchg
cmp
inc
or
rclb
push
mov
icebp
out
icebp
aaa
fdiv
lock
sub
scas
cmc
mov
cltd
adc
mov
pusha
and
sub
or
imul
push
testb
aam
stos
or
js
add
mov
dec
pusha
fs
mov
lds
xor
add
stc
ficoms
mov
stos
cmp
add
jo
adc
xchg
rorb
orb
push
pop
add
adc
stos
imul
imul
addb
inc
and
out
mov
mov
fsubr
xlat
popf
xor
push
cld
cmp
iret
scas
je
xchg
insb
loop
cmp
arpl
push
cltd
mov
sub
fs
fs
lcall
xor
inc
xlat
daa
mov
sahf
inc
call
je
int
insb
mov
lcall
mov
jl
int
incl
add
sub
shrb
out
jge
loopne
aas
xchg
pop
sti
xchg
dec
lret
and
outsb
ret
cmp
inc
push
adc
mov
jae
movsl
sbb
clc
lcall
shlb
pop
hlt
pop
loop
jnp
out
in
into
push
jmp
in
mov
daa
insl
pop
dec
nop
flds
adc
fmulp
lcall
or
mov
push
add
cs
out
test
cwtl
xlat
or
sbb
call
icebp
inc
leave
je
call
cmc
jne
sbb
adc
dec
iret
push
push
in
sbb
mov
scas
das
adc
fstpl
mov
jmp
mov
xchg
lea
lahf
das
mov
mov
fs
sbb
push
test
gs
fisttpll
sub
mov
lea
fs
lahf
sub
mov
imul
daa
push
psubq
jp
fwait
test
in
mov
mov
loopne
inc
lret
out
cmpsb
push
icebp
inc
cmp
shrl
out
and
add
lret
les
push
cmpsl
push
in
and
js
inc
adc
aas
mov
jnp
outsl
sbb
mov
in
leave
es
aam
mov
sbb
sbb
pop
sti
cmc
test
jns
in
mov
xbegin
xchg
daa
xor
sub
rcr
xchg
mov
dec
push
int
push
incb
pop
sbb
stos
jne
sub
lret
add
cmp
xor
dec
add
push
insl
xor
sub
in
or
mov
leave
add
jo
sbbl
sub
fmull
push
jae
mov
dec
xchg
mov
sub
mov
test
enter
lds
or
bound
mov
mov
arpl
and
adc
adc
cmpsl
add
jp
or
int
clc
pop
lock
cmc
mov
cs
pop
mov
cmp
scas
fstpl
or
xchg
cs
jne
in
inc
scas
dec
je
jbe
lret
pop
sub
xor
in
lock
gs
pop
cmpl
fimuls
in
inc
dec
pop
mov
xchg
sbb
leave
outsl
push
adc
jecxz
test
fwait
mov
test
xor
fsubs
mov
mov
stc
fwait
std
jge
mov
push
ficompl
mov
mov
loopne
sbb
sub
add
out
stos
xchg
lods
fmul
mov
idivl
dec
ret
lcall
jb
in
push
mov
enter
mov
pop
push
push
incl
or
add
mov
outsb
nop
adc
pop
xor
pop
loop
pop
dec
cmp
shll
mov
mov
int
push
adc
scas
roll
aam
cltd
dec
out
aaa
cli
pop
dec
movsl
pop
adc
stc
xor
xchg
into
loope
pop
loop
outsb
xchg
mov
dec
mov
hlt
adc
ljmp
or
inc
jns
iret
push
cmpsl
fsts
mov
adc
icebp
rcl
pop
and
mov
test
dec
sti
dec
sbb
sbb
xor
sbb
arpl
mov
jl
cmp
rolb
outsb
in
and
adc
filds
aas
stos
popf
cmp
call
dec
inc
inc
cmpsb
mov
add
xor
mov
push
jb
pop
push
adc
repz
jo
sbb
imul
or
movsl
lcall
adc
enterw
clc
ret
lret
cltd
es
fs
int3
fisttps
loop
mov
cmp
xchg
lret
icebp
push
cmp
pop
sub
in
test
cld
lods
inc
jmp
lds
movsl
js
lahf
sbb
cld
leave
mov
and
aaa
insb
aaa
test
jno
dec
ja
xor
mov
leave
lahf
gs
call
mov
jmp
mov
lods
ret
insb
andl
push
sbb
test
xor
xor
ja
push
lods
jno
xchg
js
outsb
pop
dec
fwait
jle
xchg
fmul
pop
and
dec
sbb
push
push
add
inc
leave
xor
adc
jle
popa
jne
inc
xchg
rcr
jge
cmc
xchg
xor
lret
mov
testb
in
fnstsw
jecxz
in
jnp
jne
in
call
inc
jge
sti
into
fsubs
add
loope
sub
inc
jle
add
outsb
jb
aam
adc
mov
rolb
add
addl
js
push
mov
pop
fidivrl
sarb
pop
loopne
ret
mov
cwtl
sahf
push
sbb
jo
xor
lea
xchg
fnsave
push
jo
jg
cmc
xchg
push
stos
pop
jle
sub
loop
push
inc
lret
loope
movsl
and
ss
and
sub
add
mov
inc
aad
loopne
xlat
push
sub
or
scas
test
xchg
dec
std
scas
xor
xchg
out
daa
les
lcall
cltd
mov
jecxz
movsl
cs
sub
out
outsb
mov
dec
call
inc
sub
cmp
add
sub
jp
cmp
outsb
cmp
sub
or
and
cmpsb
andl
out
xor
xor
push
xchg
jl
pop
and
dec
inc
xchg
outsl
sbb
sub
mov
roll
into
aad
data16
outsl
outsb
loope
bound
xchg
cld
xchg
mov
pop
out
cmc
and
and
sarb
lods
std
mov
pop
or
sbb
inc
add
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
jmp
mov
enter
imul
out
in
dec
cmpsl
sbb
or
bound
outsl
insb
jecxz
insb
pop
inc
mov
mov
xchg
push
xlat
rorb
loope
push
jmp
mov
jle
loopne
or
push
push
mov
bound
and
rcr
mov
addr16
scas
inc
outsl
xor
mov
or
out
pop
push
mov
xchg
mov
sbb
add
add
ret
nop
loopne
cltd
xor
mov
icebp
popf
div
dec
mov
push
frstor
lods
mov
fldl
minps
add
xor
pushf
fstl
popa
mov
lahf
dec
or
cmp
jg
sbb
add
push
sbb
inc
push
fcomp
and
or
sbb
push
mov
or
adc
mov
rdmsr
call
jae
mov
xor
push
cli
jns
nop
aas
dec
push
xchg
fistl
out
jge
dec
out
test
lods
mov
mov
xor
imul
iret
mov
xlat
jmp
insl
lods
pop
pop
data16
adc
sub
repz
lods
andb
mov
push
repz
jb
stos
arpl
nop
sbb
sbbl
pop
scas
add
insl
xchg
ficompl
in
jp
dec
insb
cld
mov
sarl
mov
fsts
push
cs
adc
shld
adc
aam
cmc
popf
pop
and
pop
jo
xchg
push
stos
es
dec
mov
call
scas
xchg
sub
inc
cmp
inc
inc
xchg
inc
mov
mov
inc
lret
mov
lahf
push
cs
popf
jle
dec
dec
or
fdivl
in
ret
xor
inc
sar
clc
test
inc
inc
jg
es
mov
cltd
fisttps
scas
dec
fsubs
mov
cltd
je
insb
loope
lods
pop
mov
inc
call
add
pop
sbb
xor
addr16
add
cmp
add
jns
addb
or
fildl
and
jmp
ss
aas
imul
leave
vpsubsw
cmp
push
ljmp
ja
dec
in
adc
xor
scas
lock
mov
push
adc
imul
lds
hlt
std
or
fsts
repnz
sbb
xor
pop
arpl
lret
inc
adc
loope
push
movsl
cmp
jmp
insl
loopne
lds
ljmp
cltd
mov
stc
fldl
push
int3
fcmovu
pop
das
dec
push
jmp
and
in
jno
scas
out
es
xor
das
call
test
aad
and
cs
out
mov
aaa
xchg
cmpl
add
dec
test
in
in
sbb
filds
mov
jne
aam
jns
rclb
xor
test
sahf
xchg
jb
inc
aam
imul
mov
rcrb
das
setb
mov
int
in
ljmp
daa
push
jne
push
rcl
out
xor
roll
int3
cmp
shl
aad
inc
test
mov
les
cmpsl
dec
jecxz
or
jb
mov
cld
loope
stos
out
lcall
into
jge
outsl
cmp
adc
adc
mov
mov
shrl
sahf
and
jge
les
sub
cmc
bound
lds
enter
push
aaa
in
fdivl
jae
ret
dec
pop
nop
cmp
cmp
andb
ljmp
jae
pop
cmpsl
mov
out
je
sbb
and
ds
cmp
outsb
mov
push
cmp
aaa
mov
pop
rclb
adc
xchg
lea
adc
mov
pop
cld
add
mov
lds
or
aas
mov
iret
xchg
ret
stos
pop
test
push
mov
out
push
dec
ret
add
jns
xchg
loopne
scas
jae
ss
lret
popf
jne
mov
xchg
cmp
stos
push
imul
sub
es
push
xchg
pop
sbb
nop
std
jae
dec
adc
lods
insb
pop
dec
push
arpl
daa
inc
stos
mov
call
or
mov
pop
lods
lahf
sub
cmpsb
pop
jbe
adc
inc
inc
sub
stos
jg
and
inc
pop
xor
pop
xchg
sub
sub
xchg
lea
mov
movsl
jge
jmp
sbb
add
push
lds
aas
stos
pop
int
jne
add
dec
aam
inc
cmp
std
and
inc
loope
add
or
flds
xor
jmp
push
cltd
add
add
adc
das
mov
xchg
imul
ds
aad
enter
jo
aas
jne
clc
ja
rcll
mov
mov
andl
les
js
pop
add
sub
or
push
das
outsl
xchg
cmpsl
dec
sub
jg
aad
mov
orb
add
mov
xchg
clc
icebp
sarb
test
sub
call
add
adcb
in
dec
aaa
push
xor
sbb
fwait
add
aam
dec
dec
int
scas
scas
sub
test
addr16
xchg
das
mov
stos
xor
cltd
movsl
jge
or
dec
and
mov
repnz
and
cmp
jg
dec
sub
test
pop
and
add
xchg
lea
repz
cmp
and
cmp
std
xor
pop
sbb
sarl
repz
add
leave
fyl2x
pusha
mov
adc
loope
loop
mov
xor
cli
mov
daa
sbb
push
mov
mov
inc
mov
arpl
popf
popa
stc
insl
dec
iret
call
repz
pop
jg
push
fistpl
and
pmovmskb
mov
mov
and
sbb
xchg
mov
pop
jb
jb
mov
xor
mov
ret
mov
mov
fbstp
jnp
xchg
pop
sub
mov
adc
mov
fisubs
pushf
inc
jmp
movsb
aas
inc
aaa
clc
enter
out
cs
dec
scas
loopne
jb
test
andb
inc
add
pop
sbb
dec
aaa
jns
into
cmp
push
mov
out
rolb
add
es
loopne
aam
mov
lret
mov
bound
movsl
cmp
dec
stos
imul
data16
cmp
imul
les
rorb
insl
cwtl
pop
sub
pop
mov
xchg
fmulp
scas
in
aas
inc
test
jmp
ss
sbb
pop
dec
loope
add
fs
sub
push
cmpb
daa
sar
pop
out
push
mov
pop
leave
lods
mov
mov
in
sub
lea
mov
xlat
adc
fcmovbe
sub
add
fcmovne
test
hlt
outsl
ds
xchg
sub
pop
das
jle
sbb
subl
inc
xchg
adc
mov
call
mov
sub
loop
mov
ljmp
lea
cltd
hlt
shrb
fldcw
std
dec
mov
andb
mov
gs
xchg
jnp
std
mov
sub
push
pop
sbb
add
subb
mov
sbb
jmp
mov
xor
mov
imul
ja
mov
mov
mov
pop
push
pop
aad
jbe
add
xchg
adc
xor
jecxz
pop
mov
scas
mov
mov
sbb
loop
mov
aaa
xchg
idiv
mov
sub
dec
aad
popa
arpl
jge
stos
in
mov
jmp
mov
pop
sbb
fwait
nop
lds
inc
sub
mov
xchg
sbb
cmp
mov
add
inc
cli
aad
xchg
jg
sbb
pop
ja
jl
or
xchg
xorl
jno
sub
mov
sar
outsl
inc
in
mov
in
mov
sub
cwtl
xchg
cmp
mov
mov
gs
std
xchg
mov
test
or
jmp
or
add
add
shl
xor
outsb
fisubl
dec
push
mov
mov
jae
adc
mov
test
mov
test
add
inc
mov
test
add
cmp
fcomps
outsl
les
lock
pop
inc
int3
fiaddl
pop
jg
sar
mov
in
adc
fbstp
rclb
ljmp
lods
mov
mov
pop
mov
adc
adc
lods
pop
iret
adc
push
lret
jmp
adc
pop
jmp
push
lcall
push
lahf
push
jo
int
xor
das
pop
jp
orl
cltd
adc
jmp
subl
jb
add
sub
addr16
fdivs
and
pop
and
call
rolb
in
aaa
push
lea
scas
andl
mov
aas
dec
xchg
jecxz
fcoml
lods
gs
or
aad
rorl
cmp
aaa
pop
mov
std
loope
push
or
pusha
rcl
and
jbe
push
loop
aaa
pop
and
inc
lods
mov
iret
fldenv
push
sti
mov
xor
mov
sbb
xchg
pop
jbe
in
les
xor
subl
bound
sbb
cmp
or
xchg
add
mov
and
scas
or
and
xorb
loop
jmp
adc
lods
sub
add
enter
cmpsl
xlat
fistpll
xchg
and
sahf
imul
fs
and
dec
shl
mov
pop
jo
je
in
fstpl
inc
add
dec
leave
inc
fsincos
js
xor
imul
icebp
out
dec
xchg
test
inc
push
ss
test
or
cmp
rcrb
into
push
cmp
lds
cwtl
mov
in
stos
mov
add
jno
sar
adc
stos
add
mov
shll
mov
dec
ret
loopne
das
jo
or
push
in
fcomps
mov
insl
iret
ret
arpl
movsb
sub
mov
pop
aad
add
fnsave
loop
mov
push
cwtl
pusha
push
xchg
in
pop
ret
adc
dec
xor
inc
xchg
xchg
cmpsl
insl
mov
punpcklbw
loope
cmpsl
xor
stos
mov
mov
in
in
adc
addr16
mov
adc
xchg
add
pop
jecxz
fisttps
push
test
data16
or
cmp
js
repnz
xchg
gs
xor
loop
add
adcb
inc
or
lea
lahf
test
js
cmp
adc
push
fidivl
cmc
in
sbb
or
and
pop
sub
cltd
nop
push
adc
rorb
std
rorb
pop
stos
push
and
stos
in
les
pop
cmp
ss
inc
add
sub
fisttpl
stc
cld
jg
xchg
push
ss
sahf
pop
push
rdpmc
dec
mov
lret
sar
mov
cmpsl
leave
add
adc
and
in
sub
pop
lods
std
adc
outsl
xor
xor
adc
xchg
loope
movsl
jns
lcall
mov
cmc
mov
int
mov
pop
jo
fildl
xor
dec
pop
arpl
and
stos
adcb
pop
cmp
mov
outsl
inc
sbb
push
jge
xchg
icebp
lcall
mov
or
push
iret
sbb
cmp
lret
js
jb
or
aaa
sub
mov
orl
pop
shlb
add
jmp
imul
enter
xchg
mov
rcrl
inc
scas
test
movsl
mov
test
sahf
lret
xlat
leave
hlt
pop
jbe
js
xchg
les
sbb
add
xor
ljmp
insl
xor
es
mov
aad
ljmp
xchg
mov
push
lret
fisubl
out
popf
popf
or
movsb
outsl
and
jmp
xchg
lods
pop
mov
mov
adcl
rcll
xchg
jne
cmc
fistpl
adc
out
pop
lret
test
dec
lcall
sbb
adc
cwtl
fmuls
adc
les
ljmp
push
jb
lods
adc
repnz
xchg
dec
xchg
dec
ss
jl
mov
xorb
xor
hlt
mov
xor
pop
pushl
push
test
dec
ja
or
and
dec
xchg
push
in
into
lcall
adc
lock
bound
adc
mov
mov
jb
pop
nop
movl
push
adc
push
mov
add
sahf
pop
mov
divb
mov
dec
lds
loope
sub
mov
ret
push
scas
out
sbb
test
fists
insl
and
inc
mov
lea
ret
cmp
xor
jno
ds
mov
fcomp
syscall
ja
sub
daa
jo
adc
mov
pop
fldcw
fwait
cmp
mov
es
add
hlt
int
mov
cmp
std
sub
aas
xchg
ss
mov
cmp
fsubp
add
addr16
lcall
mov
movsl
lret
outsl
pop
dec
jmp
mov
adcb
jecxz
add
adc
add
arpl
mov
scas
out
incb
jns
rorb
or
test
jle
scas
adcb
out
xor
sub
into
mov
mov
cmpb
mov
lock
pop
dec
mov
sti
mov
push
jmp
pop
xchg
cmpb
jbe
inc
clc
inc
xor
out
imul
lock
xchg
dec
scas
jb
xchg
jg
mov
mov
sub
jbe
mov
fwait
sbb
jle
or
jecxz
adc
ret
das
test
inc
popf
in
push
call
lods
jae
lea
into
sub
dec
mov
pop
add
imul
push
lret
sub
push
scas
cmp
inc
outsb
inc
mov
pushf
into
pop
rol
pop
and
push
cwtl
icebp
rorl
adc
pop
pop
push
and
xor
inc
inc
jg
neg
sub
sub
dec
sbb
push
jp
push
xor
stos
adc
jnp
sbb
xor
js
xchg
stc
sbb
mov
int3
add
push
inc
jmp
jge
mov
test
cwtl
sahf
fidivrs
push
test
ror
cmp
leavew
or
notb
insb
outsl
lcall
movl
xchg
xchg
je
sahf
leave
mov
adcb
icebp
jbe
add
imul
sub
mov
testb
ret
pop
xor
dec
cmpsl
sub
adc
dec
mov
inc
fwait
aam
xchg
nop
std
aas
cmpsb
cli
lret
sub
xchg
add
dec
jmp
add
jbe
or
ja
fmull
data16
pop
mov
rcrl
lock
lods
imulb
cmp
adc
sbb
adc
mov
adc
movsb
mov
cmp
xchg
and
adc
ja
jnp
fdivrs
jl
cltd
js
lahf
jmp
mov
int3
xchg
add
mov
aad
fisubrs
mov
stos
mov
lahf
pop
shrb
ret
mov
adc
adc
nop
push
mov
cmc
inc
fdivp
cwtl
jnp
fwait
pop
fiadds
ds
inc
insb
outsb
jbe
pop
or
pop
push
leave
ret
outsb
gs
inc
aam
xchg
repz
shlb
in
pop
add
fnsave
push
fldcw
ljmp
cmpsl
out
xchg
faddp
gs
addr16
jae
shlb
and
and
pop
fs
aad
movsl
cld
xorl
mov
bound
es
jg
adc
xor
push
paddd
pop
pop
mov
pop
pusha
shlb
adc
jno
sub
enter
shrb
popa
mov
insl
mov
lcall
or
pop
icebp
xor
pop
mov
push
jb
jb
ret
inc
iret
dec
and
scas
les
in
mov
mov
je
xor
mov
mov
or
jmp
mov
jp
xor
pop
insl
dec
test
ljmp
call
cmp
xor
aam
dec
ret
jo
jl
or
or
arpl
sub
fcomps
cltd
jmp
xchg
cmp
cs
outsb
or
mov
mov
dec
push
fsub
sub
insb
sbb
ret
and
inc
mov
or
ljmp
shll
in
adc
mov
mov
push
cmpsb
and
sub
mov
sub
popa
mov
mov
repnz
push
xor
punpcklbw
mov
jmp
xor
in
incl
sbb
push
pusha
in
dec
inc
cmpsl
xor
repz
sbb
push
out
pusha
and
pop
dec
ret
repnz
push
jl
pop
call
mov
mov
xchg
and
fs
lret
sbb
add
mov
push
mov
lahf
ret
dec
push
xlat
adc
cmpb
mov
mov
inc
mov
lahf
push
jl
test
mov
sbb
or
mov
sub
les
mov
inc
mov
mov
xor
pop
vmovmskps
dec
nop
out
xor
push
subl
or
inc
dec
test
sarl
aam
xchg
mov
ret
cld
sub
inc
sub
jmp
fdivr
movsl
pushf
pop
pop
jbe
jle
mov
mov
rcrb
xorb
cmpsl
push
mov
pop
sarb
adc
filds
pop
sub
lods
ss
int3
dec
sub
mov
cmp
cmp
or
and
cmp
dec
or
push
sbb
inc
std
mov
push
fsub
mov
mov
inc
ds
aad
sub
jecxz
iret
inc
and
pop
sbb
xorb
xlat
add
or
inc
pand
adc
dec
loopne
icebp
out
fwait
rcll
adc
mov
jne
scas
xor
test
das
mov
test
std
inc
insl
mov
pop
add
std
adc
sub
stc
dec
mov
sub
aaa
mov
mov
adc
popw
pop
lcall
mov
cmp
xor
loopne
fcomps
es
mov
push
dec
dec
pop
sahf
movsl
int
or
into
shrl
push
test
rcrl
test
dec
mov
lods
lods
sar
inc
aam
lods
push
pop
sbb
pop
dec
lcall
pop
xor
add
insl
mov
mov
and
mov
movsl
in
inc
out
in
rclb
out
enter
and
out
out
pop
fdivrl
or
jecxz
dec
stos
outsb
push
mov
insb
inc
aad
mov
add
dec
jmp
lea
jecxz
scas
das
in
into
lret
sarl
call
sbb
adc
hlt
int
sub
add
add
pop
lock
out
out
cmc
xor
test
jo
and
mov
add
aad
lahf
pop
test
cmp
out
mov
xor
and
scas
push
or
dec
popa
sub
lahf
cmpsb
cmp
sub
jmp
jmp
lods
fildll
in
lods
or
sub
es
push
sub
imulb
or
fs
lock
clc
sbb
rcrl
mov
lods
and
mov
imul
jl
in
sub
fs
mov
repnz
hlt
pop
imul
xor
dec
xchg
pusha
jle
fistpl
sbb
add
jno
inc
jns
xchg
pop
loop
mov
mov
rorl
push
subl
mov
dec
xchg
sbb
test
fcmovnb
mov
and
les
mov
lea
imul
ljmp
push
jp
fbstp
jecxz,pn
cmp
push
push
lret
stc
push
insl
sub
sbb
lea
cmc
and
popf
lock
lods
call
push
sub
daa
jl
shll
dec
je
jge
xor
xlat
inc
testb
inc
movsb
pop
xor
fwait
sub
hlt
dec
and
adc
std
xchg
loop
add
or
push
js
dec
rclb
push
lods
fisubrs
testb
jg
and
sub
aad
out
insb
lea
test
jg
fdivrp
add
adc
bswap
leave
pop
outsb
insl
jp
mov
dec
outsl
dec
icebp
pop
xor
mov
xlat
fidivrl
cmp
je
cltd
push
cmpsb
inc
fwait
loopne
inc
dec
adc
inc
fsts
mov
das
ljmp
out
rclb
xor
nop
mov
add
aaa
popa
inc
movsb
shlb
mov
fcompl
std
js
adc
push
jns
add
int3
add
and
mov
adc
es
dec
xchg
gs
and
jge
shr
ficomps
mov
ds
rol
fxch
out
or
lret
jp
dec
inc
loop
adc
rcr
sub
popf
imul
lock
pop
scas
aaa
int
xor
pop
in
mov
mov
pop
lods
push
mov
lahf
or
icebp
cmp
xchg
sbb
test
xchg
mov
inc
cli
lea
sbb
pop
push
mull
sub
cmpsb
sbb
add
pop
cmpsb
push
jae
xchg
test
push
mov
into
addl
loop
sub
push
push
jmp
mov
sbb
inc
fldenv
jecxz
fistl
push
or
cld
idivb
sub
xor
sbb
xchg
ret
fsubrs
out
mov
add
push
pop
pop
xor
pop
push
adc
mov
movsb
push
neg
fcomps
int3
cmp
loopne
jge
in
pop
jbe
mov
inc
movsl
cmc
dec
jnp
jb
pop
push
and
mov
hlt
call
and
xor
cmp
cmp
pop
and
pop
int3
rcr
jbe
hlt
sbb
ljmp
pop
push
addr16
add
std
ja
out
jl
sub
orl
shll
mov
int3
dec
test
cmp
add
mov
ret
idivb
xchg
jl
sbb
flds
dec
lea
testb
divl
inc
repnz
fisttpll
cmp
cmp
scas
outsb
add
pop
dec
invd
mov
orb
cs
pop
sub
stc
loop
pop
jle
je
xor
pop
stos
jmp
xchg
sbb
sar
inc
mov
adc
or
int3
aad
sub
dec
popa
outsl
cltd
adc
pop
ljmp
shrb
fsubrs
sbb
into
sbb
cmp
inc
cmp
clc
or
pop
cmp
push
xchg
mov
add
lds
push
mov
mov
ds
pop
inc
xchg
in
pop
sbb
or
xchg
out
lods
sub
inc
bswap
rcrl
jae
insl
enterw
outsl
std
fsts
xchg
inc
fists
stos
cmpsb
mov
and
ds
lock
sub
or
insl
leave
mov
loopne
arpl
push
out
mov
pop
std
stos
std
jae
xchg
push
cld
dec
testl
xchg
cmc
paddusb
orb
test
das
xor
imul
mov
sarl
mov
and
adc
shll
and
mov
push
pushf
jae
jecxz
mov
inc
dec
lahf
jg
and
ficoml
xor
xor
orl
enter
dec
fs
cwtl
lret
xor
xorb
mov
push
xor
cmp
aas
push
icebp
adc
leave
adc
xorb
arpl
stc
sub
adcl
and
cmp
imul
lret
add
aad
lock
cltd
mov
xchg
pop
and
pushf
push
mov
outsb
adc
and
in
add
or
repz
ss
fisttpll
rolb
adcl
mov
xor
lret
push
movsl
ret
sbb
sti
push
std
cmpsl
insb
rolb
or
call
repnz
xchg
adc
adc
mov
shlb
rorl
div
test
jmp
insb
mov
mov
lock
cmp
fwait
test
fistl
ja
xor
leave
mov
push
sarb
ret
cs
sub
mov
push
inc
imul
adc
jbe
sahf
test
aas
pop
fidivrl
das
gs
stc
mov
iret
pop
je
push
fiadds
inc
and
mov
cmpsl
mov
jmp
dec
jle
lds
jns
daa
cmpsl
dec
mov
cmc
hlt
pop
cmp
shl
mov
dec
push
inc
scas
dec
push
pusha
cmc
test
sbb
in
jle
or
sub
insb
xchg
adc
jge
rcl
cwtl
mov
icebp
out
fistpll
xor
cld
sub
cs
test
cmc
std
mov
fisttpl
xchg
pop
shll
test
fdivl
pop
ljmp
js
add
push
mov
mov
bound
jp
test
das
cmpsl
pop
lock
push
lods
in
ror
sub
pop
mov
or
outsl
sbb
addl
push
sub
test
xor
fs
pushf
or
loopne
mov
ss
psrlq
dec
mov
push
int
push
mov
push
loope
sbb
fstpt
sbbb
inc
cli
and
xchg
mov
outsl
mov
mov
loope
ret
push
in
mov
fadds
divb
imul
cmp
mov
sub
rcr
dec
out
push
cmpsb
dec
shll
mov
outsb
out
push
xchg
or
dec
sahf
jp
push
sbb
mov
imul
fadds
sub
jecxz
sbb
test
ja
mov
pop
es
xchg
and
pop
lock
jmp
fs
pop
jno
pushf
cmpsb
xor
cmp
xchg
test
jnp
stc
icebp
and
jecxz
sahf
in
inc
mov
add
call
stos
push
sbb
cmc
mov
lods
and
add
mov
cli
and
xchg
adc
push
es
add
js
addr16
cs
mov
pop
jecxz
mov
ret
cmp
sub
pop
aaa
fsubl
pop
adc
dec
lret
sbb
fadd
hlt
pushf
xlat
loopne
and
push
pop
ss
mov
aaa
stc
pop
cld
in
xor
mov
movsl
xchg
stc
dec
jg
hlt
cmp
lcall
sbb
daa
jns
ret
push
inc
movsb
les
out
movsb
jmpw
lcall
inc
and
dec
or
ja
push
subb
mov
lock
sbb
std
scas
cli
mov
push
mov
jle
loop
aad
js
or
pop
push
out
sub
push
call
adc
lds
sub
nop
fldenv
fbstp
push
scas
sbb
or
mov
adc
not
repz
jno
mov
push
mov
aad
outsb
pop
add
mov
xor
out
xlat
mov
mov
gs
and
inc
ss
add
hlt
stc
inc
iret
cmp
int3
mov
xor
loopne
scas
out
and
push
pop
inc
and
push
leave
lcall
int
popf
into
push
jne
je
xor
cmp
rorb
ror
and
cld
and
xor
cmp
sahf
adc
xor
adc
pusha
or
xchg
xor
mov
call
sbb
test
stos
cli
pop
dec
sub
sbb
mov
in
push
loop
lods
xchg
movsb
cmp
push
pusha
daa
pop
outsb
xlat
ja
or
jle
nop
inc
xor
jne
repz
sub
mov
loope
push
gs
and
mov
or
pop
mov
sub
mov
fisubrl
mov
leave
pushl
insl
push
pop
lret
rorl
mov
in
out
out
xor
mov
mov
sub
cld
jmp
add
leave
and
out
jmp
repz
nop
lahf
mov
push
sbb
cmc
sbb
adc
out
arpl
inc
xchg
xchg
pop
aad
insb
repz
and
jno
fiaddl
negb
dec
fstp
mov
pop
mov
or
les
xor
loop
xchg
aam
lods
cmp
mov
adc
dec
push
push
sti
int3
aaa
fnstenv
pop
sbb
mov
jae
push
mov
out
jnp
dec
in
mov
adc
xor
loop
xor
sahf
js
xor
lcall
jo
push
lock
push
pusha
xchg
dec
scas
subl
pop
clc
imul
addr16
jp
ds
sub
shlb
mov
stos
outsb
push
push
sti
ficoml
xchg
scas
lods
mov
js
dec
adc
mov
js
cwtl
mov
subb
jle
enter
nop
lock
add
adc
out
adc
cmp
mov
adc
and
ds
inc
dec
or
sbb
repnz
add
repz
std
xchg
mov
repz
lret
push
sahf
test
aam
jle
push
jmp
inc
jnp
push
les
mov
clc
movsb
imul
ret
shl
imul
xchg
decl
ror
and
push
popa
mov
out
lahf
push
push
popa
addr16
cwtl
xchg
mov
jecxz
jecxz
mov
roll
pop
sbb
or
rorb
ss
inc
fisttps
sub
test
fsin
mov
pop
scas
push
dec
dec
xor
fmul
mov
out
loop
ss
pop
out
xor
lret
mov
sub
xchg
jp
jp
and
xchg
cwtl
jae
test
pop
fwait
jle
das
sti
call
les
fucomp
xor
int
jo
scas
shl
add
push
mov
sub
pop
aad
pop
xor
xchg
out
into
xor
repnz
pop
adcl
std
rorb
pop
sbb
sub
cmp
xor
xor
stc
lock
stc
scas
dec
mov
dec
scas
in
push
shl
jmp
mov
imul
lcall
add
adc
ret
outsl
pop
imul
sub
ss
movsl
xor
sub
sbb
fidivs
aad
ud0
test
iret
sbb
xor
mov
or
lock
test
pop
lret
sub
push
andb
adc
jp
clc
dec
add
sub
dec
cmc
adc
bnd
inc
mov
int
jmp
xlat
fistps
in
pop
cwtl
jno
dec
pushf
xor
jae
frstor
fs
test
pop
push
sahf
imulb
stc
imul
xor
es
dec
dec
cs
fistl
mov
lea
subl
lret
subb
cmp
aad
lods
shlb
fs
call
mov
xchg
mov
dec
pop
pop
outsl
cmp
xor
enter
sbb
outsb
jecxz
sbb
dec
cmp
add
jle
push
mov
sub
add
cmp
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
jmp
cmpsb
or
imul
or
dec
hlt
bound
pop
bound
push
dec
fucomip
jl
lds
and
sbb
jl
push
out
mov
jmp
sbb
lds
sahf
add
add
mov
sub
pop
mov
ja
fdivrl
ret
and
mov
jae
dec
sub
cmp
push
fcoms
aam
jno
cwtl
push
lods
dec
or
mov
aaa
jae
outsl
aad
bndstx
cmpsl
fisubrs
enter
jno
movsl
lock
sub
mov
cmp
add
das
adc
mov
stc
or
fxtract
jl
add
in
adc
sub
jns
js
insb
xlat
xor
and
cli
sub
int
lret
cli
in
popf
jle
adc
in
mov
mov
dec
adc
jns
clc
jmp
add
mov
inc
mov
cmpsl
xchg
inc
mov
mov
in
jmp
add
xchg
sbb
jbe
jb
fbstp
jmp
jl
push
or
out
mov
sti
sbb
int
adc
ljmp
cmpsl
lock
sbb
daa
or
xchg
dec
cmp
sti
add
xor
xchg
outsl
jg
mov
adc
xor
add
jnp
lea
adc
jmp
jp
dec
iret
fdivrs
icebp
aad
xchg
mov
inc
and
adc
les
fwait
popf
lods
scas
ficomps
daa
lahf
mov
pop
les
aas
sahf
test
jno
dec
ja
lret
and
das
adc
enter
insb
aam
or
lods
push
mov
test
ss
ja
mull
dec
popf
cmp
rcll
dec
ret
add
sar
xchg
dec
mov
adc
sub
mov
cld
xchg
shlb
mov
jmp
outsb
daa
loop
cld
into
ljmp
sbb
movsb
sub
mov
jns
je
fucomip
add
mov
adc
pushf
addr16
and
mov
pushf
sub
sarb
pop
leave
fistps
ljmp
and
pop
lods
add
adc
xor
add
add
pop
mov
xchg
shll
rcr
add
xchg
pop
jg
data16
jecxz
xor
test
inc
fcomip
sahf
mov
xchg
pusha
xor
hlt
jb
push
icebp
test
mov
xlat
cmp
adc
cld
mov
sub
jns
pop
and
hlt
pcmpeqw
jno
pushf
loop
popf
and
push
inc
aam
or
push
and
pop
cmp
pop
xchg
jg
or
iret
cmc
ja
mov
lock
and
mov
dec
les
dec
push
add
test
dec
fucom
fcomps
enter
inc
sahf
ret
call
shlb
inc
xchg
lock
pop
stos
or
mov
insb
lret
outsl
or
mov
and
mov
add
sbbl
xor
fsubrs
xchg
dec
mov
and
lcall
mov
xor
push
push
int3
xor
cmp
jne
test
sub
dec
push
mov
jl
adc
cmpsl
pop
xchg
mov
fs
hlt
xor
or
dec
push
repnz
xor
mov
mov
or
nop
push
dec
fstps
and
mov
cmp
cld
outsb
cmc
negl
inc
fcmovnu
rclb
fstpt
sub
clc
xchg
loop
je
push
xlat
in
jne
xchg
xchg
lock
xchg
xorl
xchg
bound
mov
inc
add
sub
xchg
fdivl
push
in
mov
push
adc
les
dec
ja
imul
test
aad
jg
sbbl
push
lock
inc
js
int
mov
jge
push
pusha
out
push
xchg
and
outsl
inc
int3
fwait
lock
notb
dec
mov
fdivs
sub
ret
jno
pop
dec
fwait
lock
and
cmp
daa
push
adc
mov
xor
mov
xor
push
and
lret
xchg
push
push
push
jmp
or
fstpl
jl
decl
cmp
andb
ja
inc
pop
add
mov
cmp
out
lock
and
mov
clc
jne
andb
push
pop
pop
and
inc
sub
rcll
mov
loop
loop
mov
inc
enter
filds
pop
mov
pop
dec
push
xchg
out
or
incb
lcall
mov
fcoms
jb
js
mov
faddl
push
mov
arpl
leave
cmp
test
repz
in
loope
pop
inc
imul
push
cs
sbb
movsb
sti
loop
add
pushf
push
push
inc
fimull
das
hlt
imul
inc
test
ffreep
dec
cld
inc
push
add
mov
nop
cmpsl
sub
je
jmp
cmp
inc
lds
lret
cmp
mov
fidivl
and
adc
nop
xchg
push
jae
notb
jno
nop
pop
pop
addr16
in
out
xorb
mov
je
cmpsb
mov
or
dec
push
pushf
xchg
fsts
test
sbb
rorb
gs
xor
jg
lock
xor
jl
sarl
pop
jb
pop
pop
pop
scas
dec
jno
mov
js
dec
sub
xchg
xchg
mov
mov
sbb
pushf
in
xchg
popa
dec
inc
test
xchg
push
mov
popf
stos
jmp
in
in
xor
pop
dec
insb
in
mov
in
int3
das
cld
pop
mov
fstpt
lds
mov
aam
arpl
pop
fisubrs
shll
adcl
cmp
push
scas
push
imul
inc
call
sub
or
jg
aaa
lds
call
jo
sbb
xor
into
aam
and
sbb
ds
mov
adc
add
xor
xor
inc
jg
mov
shlb
in
push
clc
mov
adc
adc
rcll
jae
test
sbb
lods
nop
in
lret
push
outsl
and
fcompl
test
mov
push
leave
fstp
roll
jns
in
test
sarl
orl
scas
push
test
adc
xor
fmuls
xorb
pmulhuw
mov
les
fcom
xor
cmpsb
xor
add
sub
daa
add
orl
sub
push
dec
stos
loop
cmp
mov
test
imul
mov
movsl
test
push
pop
lods
mov
mov
adc
hlt
clc
add
xchg
popa
stos
bound
xor
mov
mov
and
sbb
mov
add
dec
mov
ja
dec
pop
mov
push
or
cli
jmp
mov
fwait
mov
push
push
popa
or
sbb
inc
mov
push
repnz
push
adc
pop
fcom
pop
mov
jo
fwait
mov
jp
int3
cmp
test
popf
cmp
ror
mov
pop
cli
and
and
push
sub
push
sbb
sbb
adc
pop
mov
repnz
pop
push
mov
push
pop
mov
insl
fldcw
mov
cmp
fstpl
push
rcll
jo
cmpsl
adc
pop
fnstcw
loope
add
loop
fsubl
int
loopne
cmp
pop
cwtl
sbb
dec
insl
test
mov
out
aaa
jbe
addr16
cmc
lahf
lret
push
or
pop
mov
xor
add
jne
andb
clc
mov
scas
mov
xor
mov
aam
add
xchg
push
imul
int
sbb
cltd
jg
aam
dec
inc
mov
aaa
rcrl
mov
jb
pushf
mov
sub
push
dec
mov
mov
popf
xor
jecxz
sbb
inc
mov
hlt
adc
std
fisubrs
mov
shl
adc
cmpsb
sub
aaa
lock
loope
imul
std
add
test
ss
not
pop
hlt
add
inc
pop
scas
sbb
aaa
sub
rclb
fnstcw
fstpl
ds
sub
pop
out
out
aam
mov
int
lods
push
dec
cmp
mov
mov
xchg
clc
orl
mov
cmpsl
push
adc
push
leave
lret
jmp
outsl
out
mov
aam
or
sbb
in
jl
xchg
and
outsb
std
fsub
clc
dec
sbb
movsb
pop
xchg
loopne
sub
fidivl
cmp
sarb
test
mov
cmp
pop
fldt
data16
repz
test
arpl
cmp
push
je
mov
aas
mov
dec
inc
cmp
pop
insl
insb
cmp
mov
xor
out
push
pop
mov
pop
jge
stos
stos
es
imull
out
pop
fdivrl
les
aad
sti
and
cmp
lret
inc
pinsrw
add
fdivl
add
xchg
xor
push
mov
push
add
xor
jmp
movsb
xor
mov
dec
inc
or
movsl
cmp
jae
std
jg
cwtl
or
dec
pop
hlt
daa
xchg
mov
dec
push
js
insb
inc
pop
and
daa
nop
inc
xor
cltd
adc
xchg
out
sbb
sarl
xchg
insb
sub
mov
bound
stos
ds
jne
mov
fistps
xchg
add
push
sbb
fcoms
lods
and
arpl
jae
aam
mov
in
adc
lods
pop
push
jp
xchg
adc
rcll
add
rorl
cmp
pop
sbb
push
fdivrs
mov
addb
inc
push
fistpl
dec
mov
jp
fmull
jge
iret
fdivl
adc
xchg
or
icebp
aaa
lret
add
xlat
adc
stos
shlb
subb
fwait
insb
mov
sbb
and
and
test
push
adc
add
in
jae
icebp
mul
xchg
out
or
movb
cmp
shll
pop
sbb
sbb
in
xchg
inc
incb
cmpb
shrb
scas
push
in
and
sbb
repnz
or
dec
push
adc
jb
push
push
js
xchg
xchg
push
adc
jp
mov
jle
clc
scas
push
mov
leave
mov
xor
mov
call
adc
dec
and
aam
pop
sbb
outsl
je
mov
hlt
jp
lock
icebp
pop
pop
ss
cmp
jge
jmp
test
mov
iret
mov
aam
aas
sahf
and
outsb
or
aas
js,pt
push
negb
adc
xor
imul
xor
lahf
lods
arpl
sub
rorl
push
ljmp
inc
or
push
shlb
int3
mov
fwait
mov
movsl
rolb
jne
push
fsubp
sti
lcall
xor
push
mov
sbb
xor
lods
push
jge
xlat
push
mov
sbb
inc
out
aas
popa
xchg
mov
bound
inc
xorb
fstpl
testb
mov
jmp
push
push
dec
bound
dec
adc
mov
xchg
inc
pop
sbb
pop
inc
or
push
sbbb
xor
xchg
dec
lds
mov
mov
out
movsb
aad
or
mov
out
push
scas
pop
movsb
mov
das
subb
cltd
sub
pushf
push
les
js
aaa
in
int3
mov
adc
addr16
jo
mov
jo,pn
dec
idiv
dec
push
sarb
push
repz
inc
jnp
mov
imul
pop
pop
cmp
xchg
lret
pop
lea
repnz
outsl
pop
and
test
repnz
int3
iret
fs
imul
xchg
cmp
mov
jl
jmp
cmp
pop
adc
dec
imul
cmc
adc
enter
mov
inc
mov
or
in
je
lea
outsl
push
call
add
and
cmp
popa
inc
into
sub
insb
pushf
popa
cs
push
push
inc
xchg
dec
loop
xlat
and
test
and
jp
adc
rol
xor
lcall
fwait
cwtl
gs
fnstsw
aam
enter
xor
sbb
addl
add
jno
cmpsl
xchg
lcall
dec
stos
int3
push
fsts
cld
push
jbe
cld
sar
cmp
pop
mov
lret
pop
pop
out
out
fwait
push
jo
repnz
cli
cmp
daa
loopne
idivl
gs
sarl
cltd
scas
cmp
mov
and
add
mov
jmp
je
or
adc
or
incb
sub
cli
sbb
lea
inc
popf
xchg
xor
aas
xchg
mov
dec
push
notl
xchg
cs
mov
les
xor
xchg
loope
xor
int3
xchg
ljmp
mov
mov
xchg
push
mov
movsb
jae
add
cs
lahf
jg
and
sub
mov
mov
jg
in
sbb
out
pop
mov
push
ds
popa
cmp
sbb
mov
jp
in
andl
jge
xchg
jmp
out
fwait
jmp
mov
mov
bnd
ljmp
xor
xor
insl
adc
stos
pop
outsl
cmp
std
jo
mov
xchg
ss
inc
mov
or
push
xchg
jbe
lcall
cmpsb
push
out
insl
cli
pop
lock
and
jmp
add
dec
repz
je
fmull
int
fwait
pop
add
scas
push
cmp
and
mov
imul
push
pop
lds
stos
add
popa
inc
testb
sub
add
mov
shlb
call
roll
testl
lcall
cmp
repz
jno
nop
sbb
inc
push
jb
jb
inc
xchg
cmpb
ljmp
dec
stos
sub
cmp
loope
push
inc
inc
cmpsb
ret
xlat
push
nop
or
pop
jp
shll
push
fs
int3
sarb
loopne
imul
jmp
sahf
mov
sbb
jno
pop
adc
cmpsb
clc
mov
aam
cmp
or
bound
push
ror
mov
and
dec
repnz
pop
ds
daa
and
cmc
cmpsb
lahf
cwtl
jbe
les
lahf
pop
fwait
js
cld
add
lds
pop
jne
sbb
in
rorb
cltd
or
mov
mov
loope
dec
movsl
mov
aam
es
nop
jmp
adc
call
daa
movsb
mov
adc
repnz
popf
pop
jp
daa
and
dec
fmulp
or
into
push
into
ljmp
lock
add
lahf
and
pop
cli
lahf
fildll
cmp
lods
aaa
out
adc
pop
jbe
or
sub
or
call
popf
loopne
repnz
aaa
pop
push
mull
dec
sbb
test
sahf
push
xlat
loope
test
dec
clc
sub
cmpsl
arpl
xchg
jae
pusha
call
dec
push
mov
mov
call
or
xor
repz
mov
inc
xorl
xchg
pop
lret
aad
push
std
push
jge
xlat
sbb
or
iret
xor
pop
jbe
rcll
pop
add
pop
scas
sbb
inc
pop
mov
arpl
jle
scas
sub
pop
adcl
lods
push
repz
pushf
repz
xor
inc
mov
inc
inc
and
and
test
lcall
jecxz
adc
push
push
add
push
jle
hlt
ret
xchg
sbb
jns
lret
sbb
iret
and
inc
mov
jb
shll
xchg
lahf
enter
jp
fisubs
ds
stos
cmp
and
jnp
repz
or
aas
in
xlat
icebp
mov
inc
rcrb
enter
nop
xchg
push
fs
rcrl
sbb
push
cwtl
cmpsl
movsb
cmpsl
mov
outsb
push
xor
pop
sub
mov
hlt
iret
subb
xor
add
das
sub
icebp
xor
jae
in
push
mov
inc
fwait
pop
leave
xchg
lock
push
cwtl
scas
test
push
mov
xchg
movhps
pusha
lock
fcoml
mov
push
fcoms
and
mov
and
xor
pop
les
or
addr16
jge
dec
push
mov
ret
inc
mov
mov
pop
mov
sub
pop
cmp
mov
push
lea
sbb
aam
rcrl
icebp
xor
xchg
repnz
push
sbb
add
xchg
jae
lret
ss
lcall
mov
shll
in
mov
jl
mov
fs
stc
icebp
loope
xor
je
aaa
jae
mov
pop
xorl
inc
mov
jmp
pop
repz
lods
rol
mov
pop
dec
daa
push
lahf
xorb
sti
jmp
into
jl
or
mov
icebp
xlat
jb
jle
test
pushf
pop
das
mov
adc
mov
pusha
pop
adc
ds
sub
dec
jp
popa
lahf
sbb
aad
enter
push
in
jmp
aam
xor
pushf
out
jge
sahf
int3
mov
sbb
js
stc
push
mov
lods
pop
std
iret
addb
lret
add
addb
lret
jo
stc
clc
jno
sub
mov
cmp
mov
mov
mov
sub
push
add
dec
mov
jns
mov
ret
adc
sub
iret
aad
fisubl
xor
scas
andl
repnz
mov
adc
je
fucomp
ret
in
mov
and
inc
cmp
ss
stos
add
in
cmp
ficoml
xchg
shlb
mov
imul
clc
mov
jge
dec
xor
or
out
loop
loope
mov
mov
out
sub
xor
mulb
shrl
push
jae
sbb
fwait
jb
out
push
imul
and
scas
imul
and
mov
test
push
sti
push
adc
loop
shll
fwait
int
arpl
aas
aaa
lcall
jmp
shll
xchg
adc
cmp
cli
test
sub
sub
mov
imull
add
and
sbb
scas
lret
mov
push
cli
mov
dec
pop
adc
stos
or
sti
aas
xor
jl
mov
dec
mov
xor
cld
shlb
cmp
pop
and
aas
xor
mov
mov
mov
js
test
sub
add
jnp
insl
sub
cmpsb
push
mov
mov
dec
movsb
or
pop
aas
je
and
inc
cmc
ficoms
xor
movsb
push
push
mov
out
adc
popf
xor
popa
icebp
ljmp
int3
cmpsl
xor
push
into
mov
and
jle
add
fildll
cmpsb
aam
testb
dec
inc
adc
cwtl
fistpl
add
pusha
fidivs
inc
xor
pop
adc
mov
inc
faddl
adc
or
imulb
insb
jno
pop
inc
add
push
outsb
inc
loopne
loop
xor
push
ret
lods
or
and
xchg
jae
popl
jle
adc
push
mov
out
gs
xchg
pushf
loopne
push
and
xchg
in
testb
enter
mov
sub
adc
ffree
insb
fsubrs
mov
lods
cmpsb
pop
mov
mov
data16
mov
or
xor
into
sub
out
dec
or
mov
xchg
cmpsl
clc
xor
mov
out
cmpsb
subb
pop
xchg
jns
inc
xor
mov
adc
test
jmp
clc
subl
loopne
jge
mov
xchg
sub
dec
enter
mov
or
push
xchg
jb
add
mov
sbb
xor
call
adc
jb
insl
dec
test
adc
xor
cli
cmpl
pop
cmp
xor
lods
cs
into
jno
pop
gs
or
inc
jae
ljmp
mov
jl
mov
and
cmp
int
lcall
or
test
mov
js
sub
mov
jae
sub
idivb
in
movsl
insb
gs
imul
inc
adc
ret
mov
add
shrl
in
aam
xchg
push
push
adc
pop
xor
adc
sub
jo
inc
mov
arpl
sbb
jnp
mov
adc
adc
shll
or
pop
enter
repnz
cmp
sub
push
pop
cmc
cltd
cs
mov
fcmove
cld
js
insb
mov
popf
fldenv
xchg
mov
mov
shll
rorl
sahf
andb
cmpsl
xchg
push
push
adc
pop
dec
add
jno
imul
lahf
jb
leave
divl
nop
cmpsl
xor
call
aad
cmp
fidivrl
mov
out
jge
jb
pusha
mov
inc
inc
sub
mov
fwait
sub
and
nop
subl
push
cmpsl
mov
in
inc
dec
add
push
out
sub
push
xchg
sbb
movntq
fstpt
bound
mov
or
pop
fwait
mov
inc
mov
xlat
cmpsb
push
dec
daa
and
mov
test
call
adc
loopne
fcoml
cmp
sub
dec
mov
imul
jmp
icebp
jae
push
rcll
xchg
or
push
and
cltd
push
sti
repnz
adc
xor
or
stos
push
inc
test
xchg
inc
mov
arpl
and
aad
add
std
ss
sbb
add
insl
rcrb
scas
xchg
mov
mov
xor
int
or
nop
negl
mov
movsb
fimull
cmp
das
addr16
xor
gs
push
adc
ds
fstp
fstps
adc
sub
push
enter
mov
fdivrl
or
jg
xor
subl
dec
adc
sti
cmp
ja
rorb
xor
xor
pop
push
rsm
cmp
imul
or
adc
shlb
loopne
inc
or
clc
cmc
fdiv
lcall
adc
mov
push
mov
xchg
out
out
mov
addr16
hlt
out
clc
outsb
mov
mov
xchg
jno
sbb
push
cmpsb
fstpl
lret
es
ret
test
push
fsubrl
add
mov
mov
lods
enter
mov
sbb
mov
aad
call
out
loopne
imul
push
xor
pop
mov
aas
and
pop
adc
dec
sbbl
popa
aam
mov
pop
xchg
jae
xchg
and
jg
push
lcall
dec
mov
loope
test
mov
bnd
loope
mov
push
mov
push
fsubrl
cltd
flds
enter
dec
lea
mov
decb
out
mov
dec
add
into
mov
lds
fisubrs
out
jmp
push
push
insl
aas
xor
sub
les
xchg
aaa
xchg
push
xchg
mov
xor
sub
xor
aam
cwtl
xchg
lret
popf
insb
gs
or
lcall
pop
mov
xchg
testl
dec
lcall
cltd
mov
mov
imul
fiaddl
or
aad
mov
dec
pop
mov
andl
adc
movb
mov
mov
mov
xchg
mov
xor
dec
dec
ja
addb
and
cli
fldl
out
xchg
jp
jno
js
iret
cmc
jecxz
cmp
das
mov
push
jnp
iret
addr16
push
inc
jmp
xchg
popa
imull
int3
in
sub
push
add
mov
pop
xchg
fdivs
into
push
push
ja
test
shl
sbb
add
call
popf
cmp
ret
das
sti
xor
sub
popf
mov
cmp
mov
roll
in
in
or
cmpsl
jo
push
sbb
lock
stos
cmp
xchg
sbb
cltd
jecxz
arpl
lcall
cs
sub
xorb
adc
mov
pop
pusha
add
and
jecxz
xor
cmp
cmp
jne
cmp
push
fdivl
stos
imul
lret
xchg
je
js
mov
call
jbe
inc
inc
icebp
dec
jl
pop
aas
jno
lods
fdivr
jecxz
inc
add
dec
imull
inc
xchg
call
imul
or
mov
add
das
dec
jmp
fadds
out
enter
cld
push
popa
add
sbb
mov
test
ds
sub
push
xor
mov
pop
mov
mov
jl
dec
xor
insb
imul
adc
jbe
adc
push
pop
insb
ss
jmp
xchg
mov
bound
lds
rolb
mov
in
shl
shrb
pop
sbb
aas
dec
cli
jl
mov
push
pop
mov
packuswb
arpl
and
fdivs
push
mul
scas
scas
aad
dec
fucomp
inc
push
ret
push
sti
insb
dec
sti
ja
iret
cli
enter
lcall
lods
jnp
push
test
jo
cs
leave
mov
sar
ja
cmp
mov
stos
stc
in
mov
fs
imul
rcll
mov
mov
dec
adc
xor
lds
cwtl
sbb
leave
lret
cmp
fisttps
lods
xor
mov
repz
rol
in
scas
lods
lea
jo
cmp
sub
sahf
xor
cmp
icebp
dec
out
sub
push
addr16
dec
shrb
clc
mov
jle
sbb
mov
loope
shll
xor
and
sti
test
or
popf
cmc
add
xchg
xor
orl
mov
scas
int
subl
and
js
or
push
dec
test
cmpsl
addr16
in
loop
adc
fcomps
lock
jmp
sbb
xchg
add
popa
int3
or
cmp
sbb
sbb
mov
inc
push
cmp
push
jnp
test
std
inc
notl
je
fbstp
jns
lret
dec
daa
ss
bound
pop
cmpsl
out
out
fistpll
ret
ds
aad
scas
cmp
sbb
pop
lret
dec
dec
xor
addr16
mov
ret
pusha
adc
test
paddw
jno
loopne
mov
pop
mov
and
repnz
inc
aaa
mov
loope,pn
xor
adc
mov
int
sbb
cld
xchg
jb
int3
pop
mov
fs
sub
cmpsb
int
pop
sub
jns
mov
loope
xchg
outsb
iret
inc
daa
and
cmp
push
jae
add
and
filds
xchg
push
mov
lea
test
push
movsb
push
sub
xchg
in
movsl
mov
rcrl
int
push
jb
jg
or
fmuls
int3
inc
stos
push
adc
iret
pop
scas
mov
pushf
push
mov
mov
hlt
sub
ljmp
dec
mov
inc
leave
jnp
mov
xchg
inc
cmpsl
add
sub
jo
jo
and
add
out
xchg
inc
and
std
cmpsl
mov
add
sbb
stc
xchg
inc
fsubr
or
loopne
mov
push
pop
int
incl
push
cmpsb
sti
adc
inc
adc
daa
adc
jl
lods
pop
mov
lret
lock
pusha
mov
fwait
dec
or
cwtl
add
sbb
addl
aaa
push
into
int3
out
cmp
add
sarl
pop
mov
xchg
sysret
clc
push
stos
xchg
adc
jge
cmp
jle
lods
decb
cmp
pop
dec
adc
and
subl
xlat
sub
jge
jnp
mov
push
je
rorl
cmc
push
inc
xchg
gs
jae
xchg
int3
out
inc
jl
inc
cmp
shll
xchg
pop
mov
fcmovnu
add
test
pop
fists
adcb
lcall
sbb
orl
jae
bound
dec
lret
adc
mov
or
mov
jbe
jb
cli
lods
inc
xchg
xchg
xchg
in
dec
xchg
adc
cmp
aaa
fprem
mov
lock
clc
xchg
jge
addl
ret
push
xlat
xchg
ret
test
xchg
mov
and
mov
test
mov
into
inc
xor
push
jle
int
enter
stos
test
lret
dec
out
xor
cmp
inc
cld
add
icebp
aaa
stc
pop
mov
or
pushf
mov
in
mov
cmpsb
leave
mov
dec
pop
jae
cltd
add
mov
cmpsb
mov
sub
adc
shrl
sbb
ficompl
add
add
ret
dec
mov
jg
mov
xchg
pop
lds
int
sbb
pop
int3
aam
cmpsl
push
aaa
mov
mov
cmp
inc
mov
rclb
dec
sbb
cld
or
dec
inc
xchg
xchg
push
ja
xchg
pop
sub
fidivl
hlt
or
rorl
mov
out
mov
sub
das
jae
mov
stos
mov
cmp
mull
subl
arpl
jecxz
out
sti
push
adc
cmpsl
mov
mov
jnp
dec
xchg
cwtl
movsl
jno
inc
push
adc
bound
dec
push
in
pop
jp
ja
or
mov
mov
cwtl
lret
xor
pop
mov
lret
mov
lock
shrb
call
mov
ret
negb
adc
in
jmp
mov
adc
bound
imul
push
inc
jle
lcall
or
fcomps
dec
cmpsb
lret
push
fcmovnu
pop
clc
dec
push
inc
sbb
rcrb
xchg
lock
pop
lret
cmp
or
dec
jns
imul
xchg
lods
fldenv
ja
cmp
add
idiv
in
fidivl
pop
ret
mov
push
int3
pusha
je
lcall
icebp
mov
jp
adc
mov
hlt
pop
push
outsb
shlb
mov
mov
into
ss
add
sti
pop
mov
or
iret
imul
ds
arpl
pop
xchg
lret
mov
jae
popf
or
inc
inc
or
and
mov
dec
fldcw
xlat
cmpsl
pop
inc
daa
mov
andb
daa
insl
rolb
inc
jb
cmp
or
aaa
pop
lea
jp
loop
cwtl
cmpl
add
fnstsw
cmc
je
mov
xor
popf
sti
pop
sahf
dec
out
and
in
cltd
jae
cld
dec
stos
cmpb
pusha
and
or
mov
arpl
xchg
clc
pop
cmpsl
push
rolb
and
xor
jg
sub
cli
cmc
mov
sub
adc
into
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
jmp
and
scas
jecxz
arpl
jns
cmp
notl
fsts
shll
or
cli
ja
dec
lock
leave
push
sbb
pop
js
dec
push
sub
shr
push
movsb
pop
adc
lcall
pop
xchg
leave
xchg
sarl
ja
cmp
and
jae
out
push
je
sub
repz
sub
push
into
push
pop
jae
sub
pusha
lcall
jno
cld
xchg
push
iret
cmp
push
pop
es
sub
scas
push
xor
jle
sbb
dec
aaa
idivb
xchg
jbe
cs
and
and
push
add
fistpll
inc
fldl
je
imul
ljmp
es
js
mov
push
and
jbe,pt
dec
test
inc
or
scas
xor
mov
and
pop
mov
in
mov
and
mov
jne
add
sub
jbe
inc
cwtl
iret
idivl
jmp
mov
pop
call
shr
jb
ret
jecxz,pn
or
cmp
sbb
sbb
sahf
add
xor
xchg
mov
jle
ss
inc
test
outsb
test
xchg
js
mov
dec
enter
or
add
mov
push
lret
fs
aam
pop
inc
fimuls
xor
iret
mov
je
inc
mov
shl
xor
and
imul
push
ja
test
stos
fsubl
mov
sbb
fadds
cwtl
mov
pop
pop
in
fldt
cmc
pop
mov
pushl
movl
lahf
es
sub
in
pop
jecxz
pop
cwtl
clc
aad
int
cmp
jmp
and
push
bound
pusha
and
dec
jnp
jecxz
dec
test
pop
add
xor
mov
std
subl
daa
jmp
dec
dec
fdivrp
and
push
mov
pop
or
sub
insl
out
or
fbstp
jo
inc
call
fucomp
in
sbb
ficomps
aad
sbb
addl
fsubrp
stc
in
int
pop
pop
loopne
in
or
mov
les
test
jl
push
add
cmp
dec
cmc
jae
add
mov
mov
mov
lods
pushl
sbb
pushf
mov
jo
mov
insb
fsts
sbbl
mov
test
daa
leave
sbb
inc
enter
push
mov
ret
stc
adc
int3
cs
pop
das
pushf
loope
repnz
mov
xchg
cmpsl
rcrb
adc
add
rcrb
call
mov
loop
cmc
jbe
jnp
xchg
push
fwait
pushf
pop
lahf
push
or
sub
pop
jmp
cmp
jbe
pusha
jno
jo
sbb
enter
sti
outsl
sahf
repnz
lcall
stos
lahf
sahf
movsl
xchg
push
pop
aad
sbb
xlat
fimull
fisubl
daa
jns
mov
pop
push
push
js
les
jne
jl
inc
mov
cltd
jmp
mov
js,pt
mov
or
pop
lock
stc
pcmpeqd
mov
shlb
lods
mov
ja
sub
mov
aas
popa
loop
jnp
call
call
mov
sbb
out
push
push
mov
jle
fstpl
es
push
stos
xchg
clc
sub
cmp
jp
mov
test
jnp
jg
push
test
mov
push
jmp
sbb
mov
add
stc
roll
loop
xor
adc
sub
push
in
sbb
setl
cmp
and
adc
outsb
cmovb
lds
jo
stc
dec
jno
inc
ret
ja
jbe
into
shl
xchg
fisubs
scas
out
subl
add
mov
lcall
push
pop
pop
add
lcall
pop
push
cmp
test
shll
je
js
jge
xlat
or
aaa
jl
xor
push
icebp
das
add
loope
pop
or
enter
sub
inc
and
xchg
loope
mov
pop
mov
outsl
adc
inc
pop
idivl
push
xchg
cmpsb
jo
pushf
rcll
jb
frndint
lods
sahf
inc
lods
out
popa
out
mov
adc
cmpsl
bound
adc
mov
stc
cld
xlat
mov
jnp
jne
jmp
push
cmp
xor
idivb
cltd
push
mov
xchg
outsb
xor
jnp
cmp
mov
mov
and
and
pop
cmpl
lret
aad
mov
xchg
test
sbb
push
pop
xchg
cmp
call
and
jno
sub
xchg
xor
shll
adc
popa
scas
xchg
pop
pop
xchg
das
stc
ljmp
xor
sahf
xchg
into
xabort
or
cmp
lock
lea
int
rclb
inc
fidivs
xchg
xchg
sbb
jg
sub
mov
xor
adc
js
mov
sub
in
leave
and
cmp
shlb
bswap
sub
sbb
pusha
mov
xchg
add
sub
lcall
and
push
push
dec
pushf
scas
adc
in
or
test
mov
aaa
sub
pop
in
push
xor
add
fiaddl
mov
icebp
insl
jp
pop
dec
xchg
inc
add
jo
or
dec
mov
pusha
pop
mov
pushf
shlb
cmpsl
push
ja
cs
jl
xchg
lds
sub
sub
xor
test
repz
push
fdivs
adc
insl
mov
lds
xchg
stc
jae
clc
icebp
testb
mov
mov
jb
mov
outsb
mov
mov
pop
repnz
push
mov
lds
pop
xchg
jb
arpl
xor
mov
les
mov
test
push
mov
mov
lea
movsl
divl
xchg
inc
xor
xor
ja
and
fmull
pop
sub
mov
scas
fidivs
or
push
sub
cmp
outsb
or
clc
add
push
mov
dec
jnp
icebp
mov
push
jg
aam
mov
mov
es
dec
in
xchg
xchg
cmpsl
imul
sub
xchg
sbbl
int
loop
dec
push
jno
scas
gs
dec
push
mov
jmp
xchg
pop
xorb
sarl
pop
fwait
cmpsb
aas
mov
and
js
movl
fstps
push
sarl
mov
in
test
inc
and
or
dec
adc
in
push
dec
adc
xchg
mov
push
mov
mov
notl
stos
in
aam
add
sbb
jno
jl
add
cs
mov
orl
adc
test
dec
xor
xchg
mov
mov
lods
jge
pop
mov
add
push
imul
pop
cmp
cmp
ret
sbb
sub
cmovp
add
pop
popl
mov
jecxz
xor
adc
daa
and
js
push
test
mov
stc
movsl
mov
dec
mov
mov
jle
cmp
fs
out
cmpsl
sahf
sti
faddp
jb
insb
sbb
fidivl
pop
pusha
loopne
sbb
jmp
mov
je
ds
jle
cwtl
cld
fidivrl
sub
mov
cld
xchg
test
sub
ja
out
pop
lcall
sub
inc
mov
into
push
mov
adc
xchg
sarb
or
xor
xchg
xchg
scas
outsl
fbld
jmp
js
pusha
or
jbe
fwait
ja
out
cmp
in
mov
xor
cli
imul
loop
int3
mov
icebp
idivb
sahf
cmp
insb
push
imul
xchg
fs
fisttpll
std
xor
mov
lds
fbld
xchg
xchg
popf
inc
or
xor
jg
imul
xchg
xchg
inc
notl
mov
cmp
das
cmp
cmpsb
jnp
or
sub
ds
pop
sahf
pushf
or
xchg
dec
cmp
pop
call
fisubs
das
push
stc
jne
inc
fsubs
add
aaa
mov
in
loopne
push
mov
arpl
fisubl
jl
fldcw
sti
rol
mov
or
mov
mov
mov
adc
mov
daa
loope
popf
gs
es
cld
cld
fdivs
hlt
lcall
in
ds
jecxz
es
xchg
xchg
lret
imul
lret
fbstp
arpl
push
pop
sahf
loop
imul
or
sbb
stc
add
adcl
xchg
sub
sti
xchg
aad
jb
dec
sbb
in
add
flds
xchg
shll
pop
mov
cmp
dec
and
jno
ja
mov
or
pop
cmovb
aas
mov
pop
inc
ja
insb
jno
xor
dec
inc
inc
mov
dec
jbe
into
adc
add
sahf
lea
jne
sub
pop
jg
mov
neg
lea
xchg
lret
movsl
dec
insb
mov
add
xchg
gs
xchg
test
insl
mov
cwtl
cmp
das
cmp
push
sub
enter
mov
and
cmp
popa
test
mov
inc
mov
lahf
or
mov
or
xchg
cld
dec
mov
mov
cmpb
jge
shll
adc
inc
test
cmc
xor
std
push
push
inc
inc
add
sub
jp
mov
push
int3
dec
inc
cwtl
mov
and
ficoms
rolb
push
insb
pushf
ja
addb
mov
leave
push
imul
lea
xor
jae
mov
dec
sbb
pusha
mov
mov
lods
mov
or
mov
jo
mov
outsb
inc
arpl
lahf
sub
in
inc
imul
xchg
add
imul
std
mov
sbb
add
test
jl
adc
cs
add
push
mov
lret
jp
and
pop
push
pop
nop
js
jmp
ret
test
push
mov
pop
lods
loopne,pn
addl
dec
xchg
push
lcall
repnz
and
jp
movsb
dec
movsl
sbb
add
xchg
cmc
icebp
inc
inc
nop
call
mov
or
test
adc
mov
ss
leave
xor
xchg
mov
cmp
fmuls
push
adc
dec
mov
pop
pop
push
je
mov
push
les
rcpps
rol
fmull
or
jo
leave
call
fadds
pop
pop
xchg
rorb
jnp
mov
xor
xor
or
test
fs
push
mov
jl
mov
icebp
and
lret
xchg
jge
inc
mov
mov
inc
pop
jl
filds
sbb
xchg
addr16
ljmp
insl
sahf
push
lock
ja
incb
mov
and
and
pop
push
ss
mov
push
fbld
lds
scas
or
jge
popa
insl
sbb
lahf
aaa
sub
cli
push
les
dec
sub
mov
pop
adc
loop
and
mov
fisttpl
negb
pop
push
mov
dec
mov
sti
test
sub
adc
mov
or
pop
in
inc
pushf
out
lods
xor
push
xchg
add
iret
lea
xor
mov
mov
pop
inc
in
push
xchg
cmp
cmp
pop
jbe
dec
es
xor
fisttpll
addr16
pop
or
stos
call
jne
jns
ss
mov
insl
hlt
pop
fisttpl
popa
loop
pop
xchg
xchg
dec
cmc
pop
cmp
fnstenv
xchg
sbb
stos
jp
inc
and
jo
push
ret
int
pop
mov
pop
fnsave
dec
cmp
fcmovne
mov
not
dec
stc
cmpsl
push
pop
jbe
xor
aad
test
mov
jge
sbb
xchg
test
cmp
pop
xor
je
sbb
insb
repnz
shlb
mov
ffree
mov
fistpll
xor
sub
fadds
aad
movsb
test
cmpsb
dec
jg
in
sbb
enter
sbb
sbb
dec
cwtl
pop
dec
xchg
sbb
dec
sub
lret
xlat
gs
cmp
push
push
orl
pop
or
js
sbb
sub
mov
lods
add
mov
fisttps
lahf
sbb
mov
data16
lret
mull
jb
mov
xlat
aas
mov
les
out
xchg
and
push
shrb
add
push
loope
add
jl
cli
sub
jnp
mov
jbe
call
rcrb
jge
cs
pop
shlb
pop
cwtl
cld
negl
jg
sub
rcll
xor
and
adc
jns
movsl
les
ret
mov
ja
mov
mov
dec
hlt
nop
lds
push
arpl
mov
rclb
mov
and
push
insl
icebp
mov
xchg
clc
fwait
out
mov
mov
push
xchg
fwait
lret
in
and
mov
or
jp
out
inc
push
das
jl
mulb
sub
repz
mov
xchg
cmp
and
pusha
xchg
clc
push
push
inc
jg
sbb
pushf
push
xlat
mov
sub
cmpsb
mov
push
outsb
mov
lret
adc
das
push
cmp
shlb
or
hlt
add
push
dec
popf
imul
or
and
xor
dec
sbb
aaa
jp
les
data16
mov
mov
pop
xor
jp
mov
mov
scas
dec
xor
pop
loope
bound
std
subb
lea
lahf
shrb
sub
cmp
mov
mov
add
fstps
sub
pop
push
data16
dec
push
cmpsb
and
mov
push
ficomps
pushf
push
js
pop
ljmp
stos
mov
mov
sbb
das
inc
data16
jbe
outsl
sbb
int
or
dec
jo
insb
pop
mov
mov
sub
repz
out
dec
lods
movsb
sbb
jmp
inc
sbb
adc
inc
xor
jb
lods
iret
mov
jb
adc
pop
cmpsl
push
cmp
mov
cmp
outsb
cmp
test
push
sub
leave
pusha
or
or
mov
adc
in
sar
data16
mov
daa
jae
pop
xor
sahf
into
inc
lds
test
mov
sub
pop
lods
xor
pop
movaps
cmc
sub
and
cltd
pop
xchg
mov
lods
fdivr
pop
push
inc
pop
mov
outsb
leave
lds
mov
mov
sbb
push
stc
ret
pop
pusha
cmp
jno
cld
hlt
lods
inc
movsl
add
mov
shll
adc
sub
movl
mov
add
loopne
mov
rcll
dec
cltd
mov
dec
lahf
jo
call
add
adc
int
fsubr
mov
cmp
popaw
cltd
pusha
mov
adc
fxtract
jb
xor
popf
xchg
mov
in
sub
xchg
xchg
adc
rorl
movb
push
jge
sub
ret
jae
pop
lods
mov
cmp
push
xchg
jg
cmp
xor
je
ja
dec
add
outsl
mov
lahf
cmp
or
sub
sub
add
subb
in
jle
and
addr16
mov
sbb
leavew
les
jae
sahf
ljmp
call
repz
pop
pop
xor
std
rorl
jecxz
cmp
call
enter
in
andl
cmp
rorb
add
push
cwtl
dec
pop
xor
fisubs
mov
mov
leave
push
jbe
lret
jg
push
mov
mov
inc
push
mov
jmp
fldt
and
mov
sub
lods
xor
jmp
mov
shl
push
dec
rcll
outsl
das
stos
mov
xchg
mov
sub
xchg
inc
xchg
lahf
sahf
dec
daa
loop
mov
sbb
xor
dec
push
dec
cmpsl
jmp
dec
icebp
adc
jecxz
clc
hlt
cmpsl
lods
push
push
int3
fisubl
pop
mov
flds
in
sub
mov
adc
push
mov
jo
push
orl
xor
or
jno
cs
stc
into
jno
stos
mov
out
rorb
out
imul
xlat
pop
lds
add
fwait
loop
push
sub
aaa
inc
mov
push
push
pushf
cld
in
mov
xor
jecxz
mov
inc
mov
scas
add
bound
mov
es
popf
paddsb
sub
xchg
lahf
mov
jbe
sarl
sbb
lret
xchg
adc
inc
sahf
fnsave
hlt
mov
push
and
inc
int3
sbb
sub
push
xchg
mov
xchg
push
xor
inc
xchg
lods
cmp
jae
pop
mov
das
sbb
mov
add
xor
incb
lret
jmp
xlat
mov
inc
fbld
dec
fcom
mov
and
jns
cmp
mov
test
mov
fadd
push
test
js
sbb
or
cmpsb
mov
ds
cmpsb
sub
add
rcll
insb
dec
xchg
out
inc
mov
imulb
pop
inc
pop
cmp
mov
xchg
cmp
pop
jmp
sub
add
jp
ds
push
cmp
xor
cmp
or
add
ja
xlat
inc
mov
cmp
das
inc
mov
push
mov
movsb
cltd
add
dec
cmp
push
adc
sbb
sub
es
imul
into
dec
loope
push
mov
xor
jns
out
call
adc
inc
shlb
sbb
dec
and
mov
cmpsl
and
mov
xchg
mov
stos
ficoms
add
loopne
cmp
cmp
lret
lods
push
mov
bound
test
cmpsb
inc
sub
dec
test
aas
jge,pt
lds
les
mov
insb
leave
jecxz
fwait
ret
in
loopne
push
push
rol
inc
std
jns
pop
xor
test
jbe
js
jno
mov
movd
dec
pop
repnz
outsb
inc
xchg
incl
loopne
ss
mov
subb
mov
adc
or
xor
mov
lret
mov
cwtl
lods
into
sub
or
out
outsb
xchg
xor
cld
add
lahf
sbb
fstp
and
leave
dec
popf
fisubs
adc
sub
pop
std
enter
sbb
cmp
xor
jl
fdecstp
cli
fcmovnbe
add
jg
aas
push
scas
cmc
not
mov
and
divl
dec
jmp
or
push
inc
mov
adc
mov
scas
cmpsl
xchg
lret
popf
sub
mov
gs
lahf
cmp
push
mov
jp
movsl
inc
aam
xchg
sbb
mov
sbb
in
inc
rorl
iret
xchg
loop
mov
push
sub
call
dec
pop
and
inc
daa
pop
jl
and
fmulp
rolb
out
subb
dec
jg
push
ljmp
cwtl
add
int3
int
sub
lods
pop
inc
or
lods
xchg
in
insl
pop
lret
hlt
nop
dec
shlb
icebp
test
xchg
test
cmp
roll
pop
aaa
jo
cld
gs
fldenv
xor
lret
push
mov
and
mov
les
adc
push
push
dec
pop
inc
jecxz
negl
lds
mov
lret
call
out
lods
mov
mov
addb
push
push
loope
and
cwtl
iret
bnd
mov
es
ret
mov
and
and
cmpsb
lock
or
sbb
and
dec
jl
hlt
xchg
movsb
sub
popf
aaa
mov
das
sbb
je
arpl
adcb
jle
and
int3
dec
rcrb
or
fs
xlat
mov
fcmovnu
outsb
dec
pop
pop
mov
inc
gs
mov
insl
sbb
fwait
jg
sub
dec
outsb
inc
jns
jmp
or
adc
pushf
adc
add
inc
inc
or
cmp
inc
lret
sbb
pop
sub
mov
loop
cmp
mov
idivl
shufps
xor
and
cltd
sbb
das
hlt
cmp
addr16
sbbb
test
and
and
movsb
push
int3
cmp
push
or
sbbl
cld
inc
adc
imul
mov
xor
aam
xchg
stos
mov
dec
loope
fcmovne
jae
mov
dec
mov
js
sub
mov
test
es
repnz
xchg
mov
adc
xchg
gs
out
xchg
sub
lcall
mov
icebp
adc
out
push
pop
cmp
dec
and
add
mov
pop
xor
inc
sar
inc
mov
js
or
adc
mov
pop
sbb
xchg
stos
mov
out
sahf
cmp
mov
xchg
adc
push
jae
pop
int
in
jle
or
sbb
popa
jl
iret
add
repnz
test
mov
mov
and
add
test
xor
lock
inc
repnz
dec
dec
imul
cmp
loopne
ret
sbb
or
popa
add
gs
int
inc
xor
sahf
fwait
add
iret
dec
add
and
dec
fmull
es
loope
insl
stos
inc
xchg
xor
cli
imul
jnp
push
mov
xchg
mov
js
scas
pop
cmp
clc
add
pushf
pop
pop
xor
mov
test
outsb
cmp
jo
in
fs
jnp
out
fmull
loope
xchg
xor
or
xchg
push
sub
add
mov
leave
popf
imul
jae
sub
negl
addr16
subl
jnp
loop
push
lods
cmp
test
dec
in
push
nopl
xor
mov
pop
fidivrs
hlt
mov
push
scas
pop
inc
jo
mov
inc
fidivs
hlt
jmp
cld
stos
sbb
fisubrs
sahf
xchg
loop
pop
outsb
jmp
out
xchg
adc
jmp
test
jne
adc
rcrl
sbb
in
mulb
js
xchg
fs
sbb
inc
jne
arpl
cmp
pusha
dec
ret
mull
mov
fldt
pop
imul
sbb
pop
in
xchg
inc
imull
push
aaa
sbb
rcrb
bound
into
push
cld
or
sbb
add
inc
shlb
out
push
mov
mov
jae
xor
pop
cltd
cmp
shl
shrb
mov
sub
jb
cld
in
adcl
movsb
or
inc
sub
cwtl
enter
cmp
jg
adc
mov
dec
sti
iret
hlt
ljmp
mov
cmp
inc
and
enter
cmp
ja
sub
in
dec
int
stc
cmp
cmp
call
rep
in
add
sbb
lahf
test
adc
jns
xchg
xor
push
in
mov
sub
sbb
shll
or
daa
mov
hlt
cmp
and
xor
ss
imul
int
call
push
mov
xor
dec
push
sahf
fcomps
aaa
pop
test
pop
mov
fstpl
and
push
pop
repnz
outsl
psubsb
addl
lret
add
xchg
jmp
iret
inc
int3
dec
cmpb
sbb
xchg
xlat
jbe
inc
fsubrs
jbe
mov
inc
mov
xor
sub
lods
mov
inc
dec
xchg
push
data16
mov
sub
or
push
mov
fistpl
bound
sbb
call
adc
fisubrs
cltd
mov
sub
sbb
outsb
lods
and
push
aam
and
pop
hlt
sub
test
mov
dec
in
inc
cmpb
rolb
ret
xor
sbb
out
dec
cmp
bound
push
dec
jle
adc
fwait
sbb
and
mov
dec
pop
sbb
jno
mov
in
adc
jnp
push
movsb
out
cwtl
stos
sub
nop
and
js
into
mov
lock
add
jp
loopne
jae
mov
and
and
jnp
mov
in
int3
mov
and
adc
cld
cmc
push
jp
mov
cmp
cmpsb
aam
mov
lock
and
add
sahf
jae
rcll
adc
mov
lea
ret
insb
inc
push
push
and
lods
push
js
stos
popf
add
inc
xchg
dec
mov
or
jns
aas
cmp
imul
mov
add
jecxz
popf
cs
push
adc
insl
gs
out
xchg
stc
in
loopne
fiadds
xor
adc
pop
inc
pop
mov
mov
outsl
rolb
dec
jb
outsb
iret
sub
push
out
pushl
mov
sub
or
or
xchg
shr
pop
rorb
mov
lea
sbb
inc
jae
cwtl
cld
or
movsl
scas
ljmp
and
fwait
scas
nop
int3
inc
xchg
mov
fwait
call
fisubrl
xchg
aam
xchg
pop
test
loopne
xor
stos
or
std
adc
scas
dec
dec
or
mov
xchg
ss
lock
mov
xor
cld
and
lods
xchg
mov
sub
or
mov
outsb
rcrb
in
les
in
mov
lret
loope
dec
adc
sahf
dec
sub
rcrb
pop
cltd
mov
rorb
dec
stc
mov
dec
mov
add
lds
mov
sbb
les
scas
je
aas
outsl
and
adc
aas
mov
push
adcl
leave
lahf
stos
ret
mov
add
inc
jbe
out
addr16
ret
adc
sub
into
int3
xchg
push
sub
sub
adc
mov
push
mov
push
mov
dec
xchg
ret
je
popa
dec
pushf
adc
sub
push
popa
mov
mov
sar
sbb
or
in
sti
cmp
push
xchg
fisttpl
sub
sbb
adcb
pushf
scas
cmc
cli
inc
stos
ret
xchg
or
and
cmp
cltd
cmpsl
add
lea
iret
push
mov
sbb
cmp
sbb
mov
jecxz
mov
loop
cmp
pop
imul
pop
ljmp
movsb
cmpb
notl
adc
push
sub
orb
and
mov
dec
dec
inc
arpl
xor
sbb
iret
lods
push
leave
mov
xchg
icebp
or
test
out
scas
push
pop
jmp
stos
mov
dec
mov
mov
outsl
imulb
push
add
add
adc
and
dec
repnz
orl
ljmp
repz
into
inc
mov
xor
loop
int3
inc
cwtl
out
pop
pop
lret
ds
out
pop
out
push
mov
xor
pop
and
and
pop
out
in
pop
jo
mov
sbb
stos
repz
inc
scas
daa
sahf
mov
push
xor
in
fldl
mov
test
xor
imul
sbb
orb
cmp
push
xchg
out
xchg
jb
mov
cmp
dec
mov
mov
push
mov
jge
popa
sbb
ret
fisttpl
cmpsl
imul
inc
repnz
out
mov
in
out
mov
mov
sub
cmpl
sub
jne
out
cmpsl
cli
andb
lds
int
adc
xor
xor
test
or
movsl
lock
les
inc
je
aad
push
jle
cwtl
fisubrl
inc
loopne
inc
pop
pop
loope
in
jbe
inc
push
xchg
sbb
fldt
out
mov
dec
stc
nop
call
lds
and
pusha
lret
scas
shr
jle
jno
add
loop
adc
test
dec
push
pop
cs
ss
jno
jl
repnz
xlat
sub
mov
ret
in
loope
mov
add
addr16
xor
in
enter
setno
xor
pop
lds
scas
loope
inc
and
sti
add
pop
xor
or
push
pop
stos
repz
scas
pushf
and
or
int
ret
leave
push
or
lret
daa
leave
xchg
pop
fists
sub
pop
xchg
lcall
js
stc
andb
and
out
xchg
cli
jbe
adc
clc
jle
int
cmc
neg
xchg
xor
imul
popf
sti
stos
xchg
mov
pop
inc
jno
and
loop
mov
ljmp
movsb
push
push
xor
or
push
in
add
xor
cmp
std
std
inc
out
jmp
popf
shlb
hlt
outsl
push
data16
mov
in
out
pop
xor
jp
sub
jmp
cltd
fadds
jne
mov
push
rolb
cmp
add
xor
les
dec
fistpll
out
jp
add
dec
mov
xchg
or
push
xchg
sbb
xor
push
adc
out
mov
adc
js
mov
popf
or
jg
pop
mov
jmp
push
mov
jae
sub
outsl
scas
jbe
xchg
mov
fadds
ftst
call
or
pop
rorl
aam
jge
mov
shl
js
adc
mov
xchg
push
ljmp
out
sbb
fistpll
rep
jle
pop
daa
adc
cli
mov
in
iret
jnp
int
icebp
jmp
sbb
cmp
pop
ljmp
enter
icebp
mov
push
aad
jp
and
int3
les
add
cltd
cld
mov
fistl
icebp
and
cmp
push
shlb
dec
movsl
cld
jae
sbb
xchg
cld
or
mov
loopne
jle
cmp
data16
fs
lock
test
sub
outsl
pop
jno
push
push
pop
adc
mov
aaa
cmpsb
cmpsb
lods
pop
test
mov
inc
test
push
or
imulb
mov
adc
movsl
jle
mov
mov
and
scas
and
repnz
subb
gs
xor
test
loop
loope
inc
cmp
js
inc
or
jb
mulb
dec
add
mov
adc
push
and
inc
aad
xchg
xchg
sbb
xchg
mov
cmp
cmp
dec
daa
adc
fidivrl
loop
cli
lahf
push
jecxz,pn
xchg
cmp
lock
in
test
xchg
std
and
sbb
and
push
mov
xor
mov
sub
mov
es
pop
lret
int
push
dec
add
add
or
mov
mov
out
jae
xor
cwtl
xchg
cmp
adc
movsb
mov
or
mov
sbb
fbstp
int3
adc
cmp
push
mov
and
insl
inc
or
movsb
and
fiadds
mov
scas
ret
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jmp
lods
jbe
loop
jmp
into
cmp
mov
or
lock
pop
mov
pop
inc
repnz
stos
jae
iret
in
shlb
cmp
pop
stc
sbb
pop
pop
lock
pop
out
into
sbb
push
dec
or
pop
dec
sbb
xor
cli
inc
xlat
aam
bound
pop
dec
cltd
les
xchg
movsl
movl
xor
gs
cmc
jne
inc
jmp
mov
mov
popa
cld
imul
and
mov
pop
insl
pop
ljmp
popf
je
sub
inc
insl
nop
xchg
push
es
push
cmpsb
adc
dec
mov
in
sub
fcomp
mov
outsb
push
inc
xchg
or
sub
mov
push
push
dec
repz
out
or
dec
sub
movsb
shrl
add
repnz
sahf
xor
cli
fiadds
push
mov
add
mov
mov
mov
mul
sub
mov
add
and
mov
pop
repz
xor
adc
dec
popf
int
adc
cmp
cmpsl
jmp
call
jmp
or
pop
addl
aam
mov
leave
add
cmp
in
add
mov
push
in
push
stos
ljmp
clc
sbb
xor
out
ret
cli
stos
sarl
andnps
pop
adc
mov
jnp
cmp
ljmp
or
das
mov
sbb
cli
rorb
insb
mov
js
jne
add
dec
enter
dec
data16
mov
popf
xor
psubd
jp
push
out
adc
lods
adc
scas
pop
lcall
jp
xchg
mov
or
sbb
fstpt
int3
xchg
fildl
push
dec
inc
inc
mov
lods
push
aaa
dec
loopne
test
pop
fnstcw
fistps
jne
pop
cmp
lahf
push
inc
jl
repz
add
stos
push
xchg
aaa
xor
mov
push
sub
js
loope
push
and
ss
insl
out
jecxz
adc
add
push
jl
mov
pop
enter
lds
loope
xchg
mov
dec
jg
cmp
and
and
int
inc
mov
sub
xchg
cltd
pop
into
int3
leave
jmp
notl
xchg
jne
nop
and
cvtdq2ps
push
cli
xor
fldenv
inc
shll
mov
cmpsl
mov
or
cs
mov
mov
jns,pn
sub
pop
stc
in
jno
or
adc
jle
and
xor
into
push
dec
stos
shlb
push
mov
dec
push
mov
ss
xchg
in
jns
pop
fisubs
out
mov
arpl
out
in
add
and
xchg
imul
pushf
hlt
cmp
pop
adc
xor
iret
cmp
jns
cmp
jnp
jle
fisubrl
mov
bound
jno
add
pop
lods
mov
push
jb
pushl
test
fnstcw
test
scas
fdivrl
xchg
int3
imul
and
movsl
and
stos
out
cltd
add
mov
jge
sub
jle
popf
fstps
sub
mov
dec
out
dec
jnp
or
nop
mov
je
xchg
mov
mov
mov
out
fisubs
or
jae
lahf
sub
ss
nop
xor
lock
loope
jns
pushf
push
arpl
out
push
mov
xchg
addr16
push
jo
xor
pop
push
iret
lds
pop
xor
outsb
push
sti
dec
test
xor
inc
loope
mov
loope
rcll
sub
mov
rorl
fstps
imul
cmp
pushf
lods
xor
inc
popl
movl
aaa
mov
push
jnp
cmp
call
loope
push
sarb
dec
pop
mov
negl
out
pop
mull
shrl
sbb
add
movsb
mov
inc
imul
inc
cltd
push
xchg
sbb
lret
xchg
sub
divps
sbb
jns
xchg
cmp
inc
jecxz
das
cs
aam
push
add
inc
jg
sub
fstps
aaa
xorl
fmuls
rolb
push
jb
insb
and
mov
mov
xor
xlat
cmp
add
pop
in
div
inc
iret
mov
jo
xor
imul
iret
push
shll
aaa
subl
jg
stc
mov
cmp
int3
rclb
iret
xor
inc
addr16
cmp
and
and
push
leave
lea
lret
das
pop
adcb
jo
lea
mov
loop
mov
jns
sub
mov
sbb
addb
enterw
mov
gs
addr16
adc
mov
add
or
xchg
nop
lret
jp
mov
jns
xchg
xor
stos
ss
cmp
inc
rolb
sub
xchg
decl
stos
mov
in
mov
fwait
mov
shll
idivb
jbe
pop
push
xchg
in
test
sub
in
mov
and
fmull
jb
pop
ret
nop
in
mov
add
clc
lea
add
jbe
std
and
mov
inc
mov
push
jno
cmp
scas
lea
mov
push
pop
fidivs
rorb
pushf
in
pop
dec
add
pop
adc
dec
pop
lods
and
lods
into
lds
jg
out
pop
xor
xorb
stc
fsubrp
pop
jg
xchg
jne
mov
int3
jle
lds
cwtl
sub
dec
mov
inc
xorb
pop
movsb
dec
cmp
pop
ss
mov
and
mov
lret
ja
xor
add
js
push
outsl
daa
xor
xor
xchg
add
push
jle
add
sahf
rcrl
dec
lret
aam
in
scas
inc
icebp
xor
pusha
or
pop
push
dec
andb
pusha
dec
mov
inc
sahf
test
ja
ret
xchg
sbb
push
imul
fwait
cmp
sbb
in
js
inc
outsl
mov
icebp
pop
and
int3
sahf
inc
fadd
cli
int3
iret
enter
or
push
sbb
call
dec
repnz
jmp
pushf
fidivl
cmc
jnp
in
inc
cmp
in
pop
cwtl
mov
pop
aaa
subb
movsl
jp
xchg
ja
test
ljmp
sub
lahf
sbb
sbb
out
inc
scas
ds
pushl
clc
xchg
cmpsl
mov
xchg
in
std
in
inc
jno
push
inc
inc
xor
push
test
xchg
bound
push
dec
aaa
dec
loope
fisttpl
in
sbb
sub
cmpsl
cmpsb
push
sbb
fs
cltd
aas
mov
cmp
dec
fs
mov
inc
sbb
std
cmp
mov
test
aaa
jns
mov
mov
and
pusha
sub
fisttpll
jnp
ja
and
cld
jb
jae
and
out
addr16
addr16
jge
mov
mov
sub
jno
cmp
sti
sub
fiadds
mov
pop
fcoml
repnz
mov
mov
pusha
add
dec
sti
xchg
inc
aas
loop
mov
add
mov
jns
mov
ret
scas
or
or
sub
les
inc
jl
add
jne
add
out
in
dec
inc
push
lahf
stos
mov
add
fldlg2
shll
mov
popf
adc
test
sbbb
cmp
and
aam
sti
push
mov
jo
xor
push
adc
sub
aaa
sbb
out
pop
std
sbb
mov
xchg
inc
inc
out
cmp
cwtl
aaa
and
cs
rol
adc
adc
mov
sub
inc
test
arpl
mov
arpl
pushf
push
filds
sub
dec
push
pop
fwait
sub
mov
pop
data16
sub
xor
das
jae
ljmp
mov
mov
mov
les
sbb
xchg
mov
lcall
dec
call
fisubrs
cmp
std
jl
inc
mov
scas
xchg
xchg
mov
aad
dec
mov
je
sti
sub
jae
xor
into
push
movsl
mov
xchg
add
or
das
inc
test
into
inc
dec
imul
fdivl
xor
push
adcb
adc
call
mov
push
cmpsb
pop
mov
pop
mov
mov
in
jns
push
push
pop
aas
push
leave
imull
xchg
int
push
mov
or
sbb
mov
inc
mov
push
dec
jmp
std
sbb
adc
dec
rcll
lock
mov
loop
cmp
ljmp
lods
cmp
int3
mov
xor
stc
inc
fs
lea
sahf
mov
subl
pop
movsb
dec
sbb
fildl
iret
mov
or
xchg
lods
test
and
sbb
data16
mov
outsb
sub
dec
xor
dec
jns
pop
ficompl
and
push
stos
or
mov
cs
je
dec
adc
dec
scas
add
jbe
cmp
call
jge
or
test
out
je
xchg
outsl
sbb
or
push
pop
or
hlt
or
movsb
aas
mov
popa
xchg
dec
xor
mov
stos
jg
aas
aad
add
mov
adc
pop
xlat
or
rcr
popf
xchg
pop
xor
mov
cltd
jae
jb
out
orb
mov
fidivrl
lds
xchg
push
or
push
pop
and
rclb
call
scas
roll
mov
pop
jg
and
or
mov
sbb
mov
aam
pop
out
sbb
je
add
sbb
shl
arpl
mov
int
sahf
sarb
loope
lret
das
mov
xchg
sbb
adc
pop
ret
sbb
sbb
push
xchg
mov
push
cmp
mov
dec
ret
jns
mov
push
mov
int3
sar
clc
add
mov
or
ja
fldl
aad
das
cmp
icebp
cmc
pusha
xor
dec
pop
cmp
cwtl
icebp
ja
mov
orl
adc
insb
sub
sbb
in
cmp
rorb
aam
fwait
insb
pop
addl
push
dec
decl
inc
cmp
cmp
imul
adc
subl
add
add
out
mov
or
or
push
fdivs
push
push
loopne
pop
xchg
sbb
in
pop
or
cmp
leave
ficompl
ljmp
rclb
dec
mov
xor
pop
iret
and
mov
jge
std
jb
mov
int3
lea
dec
out
mov
loope
push
and
aaa
adc
int3
test
push
xchg
lods
and
dec
xor
mov
pop
mov
add
bound
xchg
jg
pop
add
dec
xchg
sbb
and
xor
add
aaa
pop
shlb
sbb
pop
jmp
or
xchg
jne
enter
ja
sbb
and
popf
lcall
xchg
test
cmpsb
push
scas
je
jbe
inc
fiadds
or
jg
stos
cmp
jecxz
sahf
jmp
inc
jp
jl
aas
sbb
fistl
es
and
stc
add
mov
jge
jecxz
jns
lea
cmp
in
pop
scas
push
jno
mov
out
jge
or
mov
push
movl
ja
cmpsb
outsb
xor
mov
in
cli
shll
lea
aad
sahf
jae
mov
pop
pop
loop
xchg
mov
addr16
push
push
cld
jo
stos
imul
xchg
jmp
and
out
inc
cmpsl
mov
rclb
test
fsubs
ficoml
push
sbb
nop
daa
out
push
or
mov
fwait
jne
in
jp
fisttpl
nop
xchg
mov
dec
jle
lds
jbe
or
xchg
jne
sbb
cwtl
push
hlt
iret
fdivrs
loope
pop
or
push
pop
std
xchg
or
rclb
pop
inc
cmp
pushf
inc
dec
or
mov
bound
jne
stc
shlb
adc
in
adc
sbbb
in
xor
xchg
out
daa
addb
mov
jb
xchg
lods
cld
imul
das
pop
int3
fdivr
and
notl
jp
das
jle
mov
popa
cmp
divb
sbb
sbb
push
mov
sbbb
ja
mov
stc
inc
test
sub
cmp
repz
xchg
inc
scas
or
mov
xor
push
cmpb
fisubl
xchg
jae
add
ror
and
mov
loop
fsub
push
lahf
mov
stos
mov
sub
int3
and
cmpsb
stos
jnp
mov
in
leave
mov
ljmp
pushf
daa
dec
pushl
sbb
imul
mov
icebp
scas
xchg
iret
movsb
or
mov
in
repz
or
loope
inc
push
popf
sbb
loop
sub
js
cmp
sti
fstl
scas
pusha
mov
addr16
ret
mov
dec
inc
fisubl
fwait
insb
and
arpl
movsl
adc
lods
pusha
fistpl
add
sbb
pop
xchg
cmp
leave
mov
dec
push
dec
arpl
push
stc
sbb
dec
pop
call
lret
dec
xchg
and
pop
jl
push
lock
jle
lahf
mov
mov
arpl
lahf
fdivl
inc
adc
incl
mov
jbe
xchg
test
popl
fistl
int3
outsl
xchg
mov
fwait
rcll
mov
icebp
loopne
pop
or
mov
mov
shrb
inc
clc
insb
mov
jo
push
aad
add
or
mov
add
outsb
pop
lret
mov
arpl
testb
xor
xor
jae
lret
nop
aas
add
shld
pop
pusha
sub
mov
in
fdivrl
inc
jns
fnsave
mov
sub
outsb
push
cli
mov
add
jecxz
js
out
leave
pop
int3
inc
sti
sub
cs
push
sub
sub
gs
mov
xorb
cmp
loop
in
push
or
shrl
das
mov
sub
jmp
ret
add
jg
inc
add
add
mov
in
roll
mov
clc
and
inc
push
in
lods
sub
ret
arpl
mov
aas
imul
sbbl
data16
jmp
push
dec
xor
dec
and
jae
pop
fs
mov
push
push
cmc
std
add
cli
shll
test
sbb
xchg
xchg
les
call
push
jb
lds
out
mov
pushf
cs
arpl
and
loopne
mov
inc
push
fistps
mov
insl
popa
sbb
loop
xchg
repz
sbb
cwtl
mov
fildl
dec
and
stos
popf
in
push
fisubs
out
inc
inc
ds
loopne
cld
or
out
je
inc
inc
data16
hlt
into
mov
ret
shrb
fdiv
add
adc
dec
xor
aam
mov
insl
and
ficoms
mov
mov
cwtl
aad
push
mov
or
mov
popa
pusha
lods
movsb
orb
andb
or
dec
js
mov
test
and
stos
repnz
movsb
test
int
or
mov
stos
mov
bnd
mov
xchg
pop
xchg
es
aas
pop
call
mov
mov
lods
cmp
out
xchg
inc
pop
sub
test
bound
hlt
lret
popa
orl
xor
es
jnp
and
mov
stos
fistpll
or
xchg
add
lret
pop
xchg
lds
and
out
mov
pop
sbb
stos
pop
insl
pushf
and
dec
xchg
test
add
sti
mov
mov
into
cs
adc
stos
adc
jno
adc
jno
jl
mov
xchg
in
cmp
cli
sub
jo
jg
pop
shll
loop
mov
inc
xlat
dec
inc
bound
and
xor
gs
sbb
push
dec
das
dec
push
fsubrs
call
sbb
lahf
pop
out
ss
dec
addr16
xchg
adc
sub
xorb
popf
cmp
repz
bnd
shrb
iret
lods
hlt
mov
adc
and
or
daa
js
xchg
repz
push
imul
movb
or
test
and
ss
push
in
adc
xchg
andl
rorb
bound
iret
adc
push
pusha
loopne
pop
mov
sbb
sbb
lcall
into
add
aas
sub
popl
rcr
imul
mov
pop
xchg
push
and
ret
pusha
inc
iret
filds
ror
out
dec
sub
es
loope
rcr
dec
test
into
iret
mov
mov
fsubrl
movsb
outsl
mov
cli
movsb
cmpsb
insl
push
imul
fidivrl
sarl
jl
push
imul
jecxz
dec
pop
fs
sub
mov
pop
pop
and
std
sahf
icebp
iret
xor
pop
jl
mov
cwtl
pop
sbb
rolb
mov
loope
pop
add
add
arpl
out
int
xchg
es
ljmp
cmp
fwait
in
adc
jb
pop
push
and
test
in
push
pop
lahf
mov
shll
inc
push
iret
xor
sub
ret
shrl
sarl
mov
sub
enter
dec
icebp
jecxz
pop
mov
dec
sahf
in
adc
lcall
jne
inc
leave
icebp
out
sub
or
sub
out
les
gs
imul
insb
repz
xchg
divb
ret
mov
sbbl
dec
push
cmp
cltd
xor
mov
jno
mov
pop
fwait
xor
cs
scas
daa
insb
push
lret
push
mov
inc
push
je
stc
jge
pop
ja
cmpsb
ss
pop
aad
fs
int
xchg
cmp
and
pop
xor
xorb
jecxz
fstl
push
push
cld
jl
pop
pop
xor
scas
sti
bound
adc
pop
xchg
mov
in
cmp
dec
sbb
push
cmpsb
mov
pop
cmp
imul
in
pop
xchg
lret
pop
ljmp
insb
ret
clc
fs
xor
add
dec
xchg
cmp
mov
or
mov
repnz
dec
repnz
xchg
imul
mov
outsb
push
lret
aaa
push
sarl
sbb
mov
xchg
sub
xor
loopne
aas
jl
push
xchg
dec
add
and
mov
ss
insb
lods
bsf
aam
push
sub
cwtl
data16
cmpsl
push
outsl
mov
cmp
fldcw
sbb
sub
sahf
insb
das
outsl
ljmp
sbbl
sbbb
roll
mov
dec
negl
daa
out
jno
fs
in
push
ss
xchg
or
inc
dec
mov
aam
cmpsb
mov
bound
mov
jmp
sahf
and
cmp
or
push
scas
int3
mov
stos
push
js
pusha
testl
roll
mov
mov
push
dec
mov
adc
pop
mov
fwait
int3
hlt
fidivs
xchg
mov
bound
sub
ret
adc
xchg
mov
and
mov
int
push
fs
in
aam
inc
in
xlat
inc
lea
out
pop
into
int
popa
mov
mov
lcall
addr16
pop
or
dec
mov
pop
jno
dec
push
dec
enter
packsswb
enter
imul
sbb
stos
lds
mov
fadd
xor
inc
jnp
pop
pop
mov
inc
cmp
arpl
inc
cmp
dec
mov
dec
xorb
divb
add
inc
nop
push
mov
rorl
pop
xor
or
adc
cmp
dec
mov
pop
mov
dec
cmpsl
mov
mov
jbe
or
pop
jnp
rcr
jns
push
mov
int
and
mov
leave
mov
lods
aam
shlb
fldl
push
popf
and
ss
in
mov
ja
mov
xchg
popf
pop
cli
int3
orl
sbb
push
stos
push
cmc
sar
outsb
sub
xor
int
mov
mov
sbb
lahf
jg
addr16
popa
loope
pop
add
mov
push
mov
insb
mov
cmp
mov
outsl
incl
pop
in
fstpt
aaa
mull
mov
mov
push
lock
push
call
loopne
and
mov
lret
or
nop
adc
xchg
or
xlat
addr16
fcmovbe
push
rcrb
add
into
mulb
pushf
test
and
push
jmp
insl
xor
xor
push
sub
inc
cmc
sub
cld
sbb
int3
sub
pop
arpl
int3
mov
daa
pop
sub
nop
in
fimull
pushf
mov
cmpsl
lret
add
xchg
in
pop
pusha
rorl
mov
dec
enter
or
movsl
repz
outsb
mov
sahf
inc
ds
push
xchg
push
cli
out
jmp
lret
jl
int3
ret
sbb
fstpt
and
mov
jo
sahf
adc
adc
aad
ja
push
int3
xchg
pushf
gs
push
jo
push
dec
popf
std
test
pusha
lahf
lods
or
lahf
jle
jmp
ljmp
push
frstor
aaa
pop
cmpsb
mov
shl
xor
sub
cmp
outsl
and
add
movsl
xor
xchg
testl
sub
sahf
jecxz
jmp
and
xlat
mov
push
mov
sbb
ss
dec
std
lcall
fidivrs
mov
xchg
test
push
data16
aam
sahf
push
xchg
xchg
inc
rol
rcr
fcoml
test
stos
push
data16
jno
vunpckhps
add
push
jnp
arpl
jl
fdiv
xchg
jns
iret
imul
push
push
push
nop
adc
xchg
call
pop
shl
jmp
call
fwait
scas
xor
push
clc
add
ljmp
mov
loop
insl
or
mov
imul
adc
mov
fsubs
ja
lret
in
addl
nop
into
and
call
and
outsl
icebp
sbb
pop
inc
inc
rcr
sarb
sub
hlt
push
ret
and
testb
sbb
rcrl
mov
stc
lock
test
mull
cmp
jge
sbb
lods
push
int3
js
xor
rcrb
mov
hlt
inc
fnsave
cs
mov
dec
aam
das
pop
daa
iret
push
stos
mov
mov
and
loopne
test
or
push
les
clc
call
or
outsl
mov
and
mov
addr16
push
repnz
push
rclb
or
ret
sahf
es
cmpsl
mov
mov
push
or
insb
sti
jecxz
enter
xchg
lret
cmp
test
xchg
xchg
add
fldt
loope
pop
xchg
mov
push
jg
shlb
lcall
mov
xor
into
pop
pop
mov
fdivr
popf
push
repz
in
sub
jmp
xchg
ss
in
or
push
addb
test
jne
push
mov
test
in
sub
push
xchg
movsb
push
fisttps
jp
movb
mov
rcl
dec
movsb
sub
scas
sbb
ss
jge
push
pushl
ljmp
push
or
pop
mov
icebp
mov
pop
nop
fdivrl
lahf
lods
or
mov
in
cmpsl
rcrb
out
nop
sbb
rclb
adc
mov
movsb
mov
loope
xchg
jp
jp
shlb
push
mov
xor
sbb
cmpsb
jno
inc
inc
cmp
ror
pop
fdivrp
adc
js
and
push
shlb
xlat
je
xchg
cmp
test
pop
mov
aaa
test
cmp
imul
cli
push
inc
mov
mov
repz
mov
mov
fisubs
adc
mov
in
mov
and
jae
test
inc
or
dec
sar
xor
ret
out
pop
addr16
pop
loop
lahf
push
lea
sub
and
loop
adcb
ret
adc
lret
out
shrl
aas
mov
or
cmpsb
and
fsubrs
pop
in
and
mov
and
lret
and
gs
dec
mov
push
and
lahf
adc
dec
gs
cmpsb
inc
add
ret
aaa
sbb
es
jo
mov
push
jno
cwtl
mov
add
and
xchg
in
sbb
inc
cmp
pop
cmpsl
push
fbstp
sahf
and
add
push
or
cmp
and
nop
stos
fdivrl
dec
jno
inc
fs
mov
in
cmp
mov
xor
pop
mov
fwait
pop
pusha
insb
ljmp
adc
cmp
mov
in
mov
push
xor
adc
rcr
mov
out
mov
jo
cmp
push
ret
or
cmp
inc
mov
iret
scas
push
inc
fwait
inc
mov
test
aam
jge
pop
data16
movsb
imul
lahf
in
cld
jb
lret
adc
loope
or
popa
std
pop
xchg
cwtl
push
xchg
and
ficompl
dec
stos
ret
int
push
pop
and
sbb
and
fidivs
je
pop
repnz
adc
sarl
sub
sti
subb
fwait
xchg
add
mov
cli
add
iret
popf
push
call
test
loope
add
mov
out
mov
xlat
jl
xchg
or
pop
subl
cmpl
aam
pop
out
shrb
repnz
imul
movsb
sub
push
jne
hlt
push
push
sub
add
movsb
xor
mov
mov
aaa
pop
loopne
and
lret
test
pop
sbb
or
fldt
pop
or
out
outsb
mov
cltd
jb
add
out
sahf
add
fs
jne
jg
inc
and
sbb
xor
mov
or
or
es
shlb
cmpsl
add
cmpsl
push
ljmp
movsl
scas
cmp
lret
or
jb
and
out
add
mov
sbb
cmpsb
test
addr16
pop
cmp
mov
inc
dec
repz
sub
ds
inc
mov
cli
inc
add
dec
or
imul
leave
dec
mov
jl
shl
cmp
push
shlb
sub
test
dec
push
jp
sbb
or
sub
jo
lds
jle
into
mov
xchg
ret
or
mov
or
enter
repnz
push
pop
jmp
jge
add
cmpsl
jg
mov
jnp
outsb
adc
fbstp
les
dec
jle
push
push
fstps
enter
cmp
fildl
ljmp
pop
add
scas
ss
imul
clc
imul
test
ds
xchg
push
scas
add
rcr
xor
xchg
int3
dec
and
into
stc
push
mov
jno
sbb
lea
scas
or
jne
xor
lock
int3
das
and
movsb
xchg
ljmp
add
lds
cli
mov
call
mov
into
dec
mov
fidivrs
popa
jmp
mov
sti
cmp
xor
bound
pop
outsl
loope
mov
xchg
mov
push
insb
scas
mov
push
shlb
sbb
sub
imul
enter
sbb
bound
pop
sbb
imul
bound
loope
outsb
mov
xchg
push
mov
cmpsb
fwait
push
push
adc
mov
loope
xchg
cltd
andl
popa
dec
pop
cmc
icebp
out
scas
jle
xor
ja
sbb
jae
jle
stos
push
jecxz
pop
mov
lods
mov
cmp
subl
xchg
icebp
insb
push
xor
mov
sbb
pop
mov
out
out
xor
pmaxub
cs
and
dec
sbb
fcoms
and
and
jecxz
addr16
or
or
xor
test
in
out
leave
loope
mov
mov
jbe
pop
or
daa
sub
aas
in
ficoml
addl
add
push
dec
mov
lods
fs
cmp
ret
mov
push
clc
mov
ljmp
testb
xor
mov
lds
enter
sub
std
int3
xchg
mov
lea
pop
inc
pop
ljmp
rcl
cmp
mov
and
jmp
ss
ja
sub
test
pop
test
jg
sub
iret
ucomiss
inc
stos
dec
sub
cmpsb
xor
dec
rclb
xor
bound
xchg
xchg
pop
shlb
cmp
jae
add
cmp
fstps
push
pusha
out
aam
scas
add
orb
aam
mov
cmpsb
or
push
fildl
ja
mov
insb
jle
push
dec
or
jae
movsl
cmp
dec
xchg
sbb
repz
mov
or
movsl
and
jge
fstpl
mov
inc
out
xchg
adc
or
push
dec
push
adc
xchg
pop
fwait
ret
jb
jne
rcll
pop
or
sbb
imulb
stos
xchg
cs
fbstp
movsl
or
std
pop
xor
jl
jbe
cld
or
xchg
inc
loopne
mov
insb
xor
or
mov
cld
cmp
in
dec
jl
arpl
mov
xor
stc
aaa
dec
int3
or
mov
ljmp
inc
mov
dec
cmp
xchg
jg
inc
iret
test
jmp
or
mov
adc
sub
and
mov
mov
fisttpl
push
mov
nop
dec
push
or
pop
dec
jg
mov
dec
outsb
adcb
sub
dec
add
inc
pop
mov
cld
je
add
mov
jae
cltd
push
cld
push
popl
inc
mov
stc
inc
inc
push
sub
aas
add
repnz
test
push
xadd
shll
sqrtps
xchg
test
mov
pushf
push
mov
out
sub
mov
jecxz
loope
push
test
mov
popw
pushf
fisubrs
pusha
jle
push
and
jbe
lret
enter
mov
mov
fmuls
pop
in
cmp
enter
mov
cmpl
or
jne
pusha
mov
push
cmp
mov
ret
sti
addr16
orb
aas
sbb
inc
pop
push
imul
push
jo
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
jmp
sbb
sbb
push
mov
mov
push
in
incl
bound
pop
bound
in
add
sbb
and
pop
popf
scas
and
hlt
jo
pop
addl
cmp
inc
js
fcompl
insl
lret
repz
or
lea
pop
test
cmp
ficompl
xchg
and
cmp
push
mov
push
dec
mov
aas
lret
sahf
or
fwait
lods
pop
lds
in
ret
pop
andl
inc
fsubrl
jo
lock
insl
lret
mov
popa
xchg
jo
dec
ffreep
jl
adc
jne
and
sub
cwtl
sub
or
testb
dec
jg
cmpsl
mov
push
lods
sub
inc
call
filds
fdivr
imul
fnstcw
jnp
hlt
ja
loope
sub
roll
xor
sub
or
cmp
pop
adc
adc
daa
mov
ljmp
or
insb
push
xchg
mov
mov
fsubl
fcoms
pushf
push
notb
adc
repnz
pop
dec
pop
mov
icebp
dec
add
sbb
jp
jne
adc
push
jecxz
cwtl
arpl
or
and
je
callw
push
cmp
jnp
lret
imul
pop
cmpsl
xchg
sbb
lret
insl
dec
stc
inc
mov
insl
loop
mov
mov
push
repz
mov
stos
ret
pop
test
std
adc
cltd
xlat
jmp
mov
imul
xor
mov
loopne
mov
add
inc
loopne
cld
xor
invd
nop
push
cmp
inc
rcrb
nop
jnp
xor
fdivl
pop
dec
push
mov
aam
fldenv
mov
xchg
cmp
rcrb
jecxz
mov
mov
loopne
xlat
pop
ja
shlb
into
or
je
fcomp
jns
das
lods
dec
mov
ret
out
out
lret
lcall
push
js
dec
mov
out
rcll
icebp
or
sbb
inc
lds
adc
repz
and
stos
or
mov
or
and
mov
dec
sub
sub
and
mov
sbb
or
xorl
add
addr16
shrd
mov
mov
pop
push
jno
stos
insl
daa
insb
mov
pop
lahf
out
xchg
loopne
xchg
sbb
addr16
cmp
and
call
fcoml
mov
mov
push
ret
pusha
icebp
es
dec
xor
aaa
xor
lcall
pop
mov
lcall
shrb
adc
xor
cmp
sub
iret
stos
movsb
pusha
ljmp
push
xor
test
pop
inc
mov
or
xor
jne
into
and
add
xchg
stos
inc
mov
pop
fsubp
subl
xchg
dec
lods
sbb
popa
mov
popa
jge
mov
into
hlt
bound
int
push
je
jp
jae
ret
inc
into
mov
xor
je
mov
pop
ret
aaa
mov
adc
mov
lods
or
sbb
in
andb
ljmp
xor
jnp
add
imul
and
int3
dec
loopne
sbb
sbb
cmp
inc
mov
dec
dec
mov
pop
mov
lret
lds
sub
loopne
sub
jmp
pop
dec
pop
orb
aam
into
push
sub
add
popa
mov
xlat
aaa
call
addr16
push
je
mov
scas
insl
add
lea
faddl
or
cmc
arpl
sbb
sbb
lahf
or
push
jecxz
pop
and
lock
test
jnp
pushf
ljmp
leave
movsl
dec
mov
cmp
adc
popa
aam
mov
gs
push
adc
insl
xor
imul
lcall
clc
arpl
add
lcall
lea
inc
push
jns
jnp
mov
sahf
push
les
adc
leave
imul
lahf
mov
iret
mov
hlt
lahf
iret
xlat
push
sub
insb
pop
rcll
mov
xchg
xor
dec
popl
mov
sub
stos
mul
into
aaa
push
inc
out
mov
hlt
and
in
or
or
inc
xchg
jle
mov
dec
fnstcw
sbbb
repnz
inc
repnz
test
push
imul
inc
inc
movsb
or
fidivrl
and
sub
adc
sahf
lea
push
mov
dec
cmp
rcrl
xor
push
call
jle
sub
scas
call
jnp
outsl
jnp
popf
call
or
outsl
enter
stos
lahf
xor
test
cmp
lea
sbb
ds
sub
out
ja
mov
mov
lods
arpl
add
sti
imul
inc
mov
mov
sbb
jbe
add
in
outsb
ja
arpl
adc
hlt
push
out
or
shrb
mov
sub
mov
add
mov
sub
dec
into
outsb
pop
leave
mov
sti
ss
lret
ror
xchg
pusha
xchg
test
xor
mov
xchg
in
and
mov
ficompl
push
loop
in
pop
sbb
out
xchg
cmp
add
loope
dec
sub
inc
nop
cld
out
sub
mov
add
adc
inc
mov
fmul
push
and
in
mov
mov
mov
sbb
mov
jo
aam
aas
pop
dec
fisttpll
fsubl
push
sbbb
addr16
lret
add
roll
cmpb
xchg
sbb
bound
inc
in
ds
push
inc
mov
cmpsl
push
daa
lods
mov
jecxz
fists
ret
mov
popf
gs
mov
test
inc
hlt
fidivl
pop
cmpsb
jns,pt
mov
call
rol
xchg
jae
or
xchg
xchg
fildll
dec
mov
sub
je
pop
incb
in
xor
shlb
lods
scas
jb
subl
dec
fxch
sbb
adc
dec
movl
cwtl
and
add
leave
mov
gs
imul
out
lods
int3
lods
movl
fsubrs
stos
movsl
psrlw
mov
nop
adc
adc
cmp
add
imul
mov
call
loop
xchg
and
les
and
sub
push
insb
arpl
mov
cwtl
sbb
insb
test
push
outsl
out
jmp
push
fs
or
loopne
push
xor
xlat
inc
push
fstps
dec
or
addr16
cwtl
sbb
lods
pop
daa
sti
adc
xor
dec
shrl
xor
xchg
into
xor
mov
sub
fstl
jmp
ja
fistpll
cs
lahf
ss
faddp
inc
lds
cltd
sub
or
out
daa
cwtl
iret
inc
adc
push
dec
xlat
decl
sbb
push
out
dec
ficompl
xchg
xchg
cmp
test
roll
das
ret
mov
or
hlt
arpl
xlat
nop
or
mov
repnz
adc
test
push
shl
xchg
dec
push
mov
mov
push
mov
or
lods
jne
jbe
jae
stos
loope
in
mov
or
xor
fsubp
scas
fidivs
adc
or
inc
xchg
std
and
inc
and
pushf
lock
stc
cwtl
ror
push
in
call
rol
stos
add
out
push
add
xor
mov
add
xchg
mov
call
popf
pop
mov
cmc
push
adc
push
lods
movsb
jp
xchg
int
mov
push
je
std
inc
std
jmp
inc
jmp
sub
mov
push
mov
movsb
and
mov
mov
arpl
clc
xchg
xchg
lods
sbb
aas
movsb
xlat
pop
mul
inc
out
mov
xchg
and
fdivrl
mov
xchg
mov
dec
pop
lahf
xchg
adc
mov
and
out
cmp
mov
push
sub
shr
xlat
call
outsl
xor
jp
and
mov
dec
cli
shl
sub
inc
scas
adc
aam
mov
dec
fwait
pop
fstpl
dec
xlat
pop
or
out
jno
cltd
adc
movsl
out
inc
add
pop
lea
aam
inc
add
lods
ficompl
adc
ljmp
jecxz
out
stc
xor
pop
into
pop
or
lods
js
adc
push
scas
out
add
sti
dec
dec
xor
add
push
notl
movsb
pop
jnp
leave
push
aad
fs
and
sbb
clc
inc
call
adcl
or
adc
fmull
lods
jle
ror
mov
or
mov
jecxz
ficoms
lods
xlat
xor
ret
outsb
nop
lret
mov
cmpsb
orb
loope
xor
jb,pt
sbb
roll
mov
or
in
cmp
loope
fmull
add
xor
scas
fsts
dec
xor
push
stos
daa
pop
pop
xchg
lcall
cmc
call
mov
jno
sti
out
push
mov
aaa
imul
movsb
arpl
cwtl
cmp
adc
mov
mov
sbb
aad
repz
xchg
pop
push
fmuls
cmp
sbb
rolb
push
jle
xchg
sarl
and
xor
jne
daa
pop
sub
cmpsb
sbb
orl
pop
mov
sbb
rclb
mov
or
popf
pop
pushf
jp
sahf
sti
push
mov
sahf
xchg
call
lret
xchg
and
adc
popf
pop
jne
inc
xchg
mov
fcomps
int3
insb
inc
ret
outsl
rcrb
xor
test
xchg
sub
add
push
cmp
cmpsl
pop
scas
xor
dec
and
jecxz
fwait
nop
push
sub
add
xchg
mov
cmp
sub
cmp
das
nop
and
pop
pusha
addr16
xor
inc
in
daa
sti
test
mov
and
xor
mov
scas
iret
or
push
out
ja
out
xor
mov
xor
adc
lcall
xchg
push
sti
inc
xchg
das
sub
pop
insl
fld1
jecxz
les
xor
jae
add
rorb
sahf
rcl
fidivrs
les
pop
sbb
and
xor
inc
sub
xchg
rcr
leave
adc
fbld
sub
inc
es
les
add
cmp
jp
sarb
into
lret
ljmp
sbb
push
push
and
lds
cmp
leave
scas
cmp
aam
jo
mov
imulb
imul
jne
adc
outsb
dec
testl
add
push
or
pop
push
xor
and
jmp
jo
arpl
mov
sbb
enter
mov
push
arpl
mov
sbb
outsl
cmpsb
mov
cmp
daa
push
shrb
xchg
stc
mov
and
xor
sub
cltd
fcmovnbe
pop
mov
sbb
aas
add
popf
xor
pop
pop
outsb
mov
xchg
mov
jno
inc
sbb
sbb
jne
push
push
call
mov
mov
fdivp
les
mov
ds
mov
and
gs
pop
pop
jmp
out
imul
vcvtdq2pd
jmp
mov
dec
addr16
push
cmp
lods
jne
mov
daa
jo
inc
cli
sub
jmp
cmp
cmp
leave
adc
mov
inc
xor
int3
testb
inc
pop
mov
adc
sub
fcomps
int
aaa
je
push
or
mov
out
pushf
cli
fldt
stos
int
mov
cli
fs
popf
cmp
out
push
roll
stos
in
popf
jne
or
dec
dec
mov
jb
popf
mov
pop
repnz
pop
stos
addl
pop
nop
movntps
adc
xor
xor
jmp
insl
mov
sbb
in
leave
sbb
aas
popf
jae
scas
test
adc
add
sbb
jnp
push
pop
ficompl
pop
xchg
cmp
dec
or
add
leave
inc
sub
mov
add
test
push
sar
jg
push
sbb
arpl
cli
sbb
adc
jns
inc
dec
iret
adc
in
inc
shr
mov
and
add
jae
sub
xlat
fs
xchg
arpl
andb
sbb
jle
jno
std
ret
adc
sbb
pop
pop
xchg
pop
repz
pushf
adc
in
lahf
int
sub
lock
add
pop
fcmovbe
ss
and
xchg
mov
rclb
loope
fimull
into
imul
mov
cwtl
decb
dec
mov
in
mov
add
sub
iret
mov
repnz
test
mov
adc
cmp
mov
sbb
sahf
add
in
mov
mov
rep
outsl
int3
mov
jb
iret
cwtl
cmp
push
mov
adc
mov
mov
aad
mov
pop
mov
enter
xor
in
jnp
mov
push
mov
nop
cmpb
test
scas
cmp
jnp
mov
arpl
mov
fwait
sub
mov
xchg
out
or
cmc
add
xchg
and
inc
pop
cmp
jnp
je
inc
loope
xor
sub
and
daa
andb
lods
inc
xchg
dec
sbb
adcl
add
mov
mov
cmc
fwait
jo
int
inc
mov
ret
cmp
dec
sbb
mov
jnp
sbb
imul
test
cwtl
ja
jnp
adc
into
push
dec
int
push
pusha
mov
push
sub
testl
std
xor
inc
jns
add
incl
xchg
mull
ret
mov
and
push
mov
js
lcall
push
fisubs
cwtl
fwait
fwait
sbb
out
xor
cltd
push
popa
xchg
mov
add
movsb
in
add
push
aad
dec
and
adc
cmp
adc
psubsw
popa
stos
lods
inc
jnp
std
xchg
stc
mov
push
sub
sbb
ljmp
cld
scas
mov
aad
into
mov
adc
ss
add
int
aas
adc
clc
rorb
mov
sbb
mov
notl
pop
aam
push
cwtl
test
mov
or
cmc
cmp
sbb
imul
add
mov
inc
popa
sub
stos
lea
mov
out
mov
sbb
loopne
loope
sbb
xchg
cmp
cmp
dec
stos
pop
mov
push
adc
dec
sbbb
call
popf
lods
ss
movsl
jbe
lea
jg
rolb
pop
lods
iret
add
sub
fdivp
mov
xchg
jg
mov
pusha
mov
cwtl
xchg
inc
das
pop
push
sub
pop
insb
xorl
mov
adc
in
test
outsl
mov
add
add
inc
pop
std
push
stc
mov
dec
subb
mov
push
mov
mov
lds
cwtl
mov
out
out
pop
push
cltd
add
push
scas
or
jl
add
jne
fdivrs
cli
shll
stos
lcall
add
mov
jbe
js
repnz
inc
add
lods
dec
xorb
xlat
push
sub
loope
iret
adc
or
sub
pop
cmp
mov
pop
mov
pop
add
mov
and
icebp
outsl
iret
aaa
adcl
cmp
out
test
xchg
pop
repnz
int3
sbb
sbb
fadds
imul
outsl
std
and
stos
sarb
adc
outsl
arpl
adc
int
cld
inc
or
mov
int
push
xor
lock
sbb
das
and
pop
div
adc
cwtl
push
pop
rolb
push
or
adc
inc
mov
sbbl
jb
ja
push
imull
or
divl
jg
adc
mov
loope
xorl
in
popf
aas
push
add
imulb
out
sahf
sarb
das
ss
stos
adc
jne
cmp
sub
jns
rorl
mov
imul
out
sbbl
out
dec
push
insl
mov
mov
test
sbb
push
iret
sub
jmp
mov
xchg
or
lods
push
int
mov
ja
mov
jge
in
and
mov
mov
lods
aam
pushf
inc
adcb
mov
ret
jecxz
jb
loop
outsb
xchg
leave
movsb
nop
outsl
insb
sbbl
int3
jno
adc
mov
mov
xor
cmp
and
shll
imul
push
popl
loopne
je
imul
mov
imul
pop
and
les
xor
mov
stc
dec
pop
out
dec
ljmp
out
inc
xorb
ror
sbb
les
andl
push
jns
xchg
mulb
cltd
sub
jnp
rorl
cmp
inc
cmpsb
inc
cmp
in
lahf
scas
push
pop
mov
mov
repnz
addr16
stos
into
aaa
push
or
xchg
ja
add
inc
push
dec
xchg
je
int
push
hlt
push
sbb
test
ja
inc
sub
push
test
mov
xor
or
pop
loope
jg
sbb
arpl
push
adc
jp
ret
mov
popf
in
lock
mov
push
sbb
push
idivl
mov
dec
dec
push
shr
push
stc
mov
mov
push
in
adc
outsb
jns
xchg
in
push
dec
and
jns
xorl
jle
mov
stos
xor
movsb
loopne
inc
pop
aam
je
mov
iret
xchg
push
mov
aad
mov
lock
imul
stos
insb
jecxz
fisttpl
daa
idivl
fimull
fstpt
inc
jl
sti
xor
mull
nop
mov
pop
sti
and
gs
aad
jnp
cmp
loopne
sti
add
into
xchg
sbb
fldt
xchg
and
pushf
push
jne
sub
xchg
in
fbld
jnp
jb
add
dec
and
loopne
mov
in
test
mov
push
jge
pushf
hlt
or
xchg
mov
mov
sub
out
pop
iret
mov
loop
cmp
sbb
jnp
aaa
cli
push
add
ljmp
popa
push
mov
pop
fildll
cmp
sti
push
jg
ret
dec
lds
dec
aam
scas
xchg
adc
jo
shrb
notl
sub
sbb
pop
push
pop
iret
fdivrs
add
xor
mov
rclb
xor
dec
xor
je
int
imul
faddp
fmulp
mov
das
loopne
sqrtps
nop
cli
test
imul
aaa
mov
mov
aad
mov
jg
or
inc
dec
and
push
cli
hlt
push
xchg
movsl
mov
jle
jl
sbbl
xor
xor
dec
adc
sub
negb
xor
sbb
jb
inc
mov
popa
sbb
test
cmp
call
ljmp
pop
es
mov
xor
in
push
jge
into
popa
xchg
rorb
data16
lret
sahf
sbb
adc
cmpl
iret
mov
sarl
dec
mov
je
jb
inc
into
mov
movsb
aam
or
mov
mov
xchg
jae
mov
mov
inc
xor
lods
cwtl
loopne
dec
ret
jg
add
mov
cmpsb
arpl
sbb
jmp
add
pextrw
sbb
push
ror
rolb
into
push
inc
stos
clc
inc
in
jp
fsts
xchg
sub
sub
mov
dec
jecxz
or
mov
les
sbbb
fnsave
sub
enter
psubq
imul
mov
sub
pop
push
shlb
mov
pop
mov
ficompl
mov
inc
push
fldcw
xor
adc
add
lahf
nop
mov
jle
dec
mov
add
in
and
dec
lret
std
jo
jne
stos
and
inc
cmpsb
jae
and
mov
jp
or
xor
mov
pop
out
inc
adc
push
lcall
out
inc
test
and
push
add
arpl
and
xchg
std
lret
aam
cmp
dec
mov
push
pop
adcl
dec
jns
fcmovnbe
jl
cwtl
loop
and
or
jecxz
sbb
sbb
push
mov
pop
cmc
loopne
test
or
int3
test
jo
cli
jns
push
ret
dec
mov
mov
sub
lea
sub
rclb
dec
sbb
or
push
jno
xor
inc
inc
xor
add
mov
test
push
cmp
stos
push
std
xchg
mov
and
pop
lea
jnp
mov
bound
cmp
insl
shlb
jae
movb
mov
testb
rcrl
dec
sbbb
xor
dec
shl
cmc
mov
loop
adc
jmp
inc
adc
out
out
cmpsl
shll
stos
mov
ror
add
add
addl
sub
cmpl
dec
push
push
push
xchg
shl
push
movl
push
ljmp
adc
out
pop
jle
mov
ficomps
imul
icebp
in
mov
inc
xchg
shll
repnz
test
outsb
stos
or
cmpsb
pusha
push
and
das
cltd
shl
rcll
dec
jbe
adc
mov
lds
stos
insb
jns
jno
divb
jb
nop
dec
mov
int
cmp
mov
jns
mov
loop
sbb
lcall
push
popa
je
jl
fistps
cmc
out
pushf
mov
xor
sti
cmpsb
dec
push
pop
test
push
mov
fwait
dec
cmpsl
cmp
int
mov
ljmp
mov
pusha
stc
inc
jnp
je
pop
cmpsl
and
cmp
cmp
add
xchg
dec
rolb
int
stos
push
stos
sbb
lret
out
adc
lret
mov
fidivs
mov
or
in
std
sbb
jae
popa
jnp
and
sti
jmp
or
incl
cmp
stc
fcmovnb
sub
or
jnp
sbbl
sbb
notl
sub
popf
push
jnp
add
cmpsl
mov
aam
xchg
cltd
dec
mov
add
popf
cld
inc
lret
xchg
xlat
in
push
mov
lcall
cmc
fs
jp
push
mov
mov
push
idiv
lcall
mov
mov
gs
dec
pop
mov
push
jp
sub
addr16
pop
mov
in
and
pop
ljmp
std
jecxz
mov
scas
cmp
sbb
push
arpl
cmp
in
jl
incl
xchg
pushf
addr16
int3
cmp
jns
sar
out
inc
adc
add
xchg
add
cltd
aas
xchg
insb
cld
mov
iret
loopne
xchg
in
mov
and
test
sbb
push
ljmp
mov
hlt
loope
or
nop
out
mov
xor
stos
add
pop
popa
outsb
xchg
sub
movsb
dec
faddl
aaa
inc
scas
push
rcll
push
cli
negl
fcmovnb
nop
push
cmp
cld
lock
das
scas
jne
inc
shrb
cmpsb
or
hlt
lret
movsl
add
test
fdivrl
push
dec
sbb
lcall
sub
int3
test
pop
repnz
insl
sarb
lods
mov
js
sbb
pushf
outsl
lret
mov
mov
xor
sahf
push
push
mov
or
mov
lods
pusha
clc
popa
adc
enter
jnp
jae
fisttpl
in
cltd
jb
test
xchg
cmp
lds
cmpb
mov
daa
dec
sbb
sub
ror
lahf
and
or
aad
int
push
mov
fcomps
insl
stos
pop
lahf
ss
ljmp
jp
sub
insl
pushf
sub
fdivrs
icebp
ja
pop
fistpl
add
jnp
dec
mov
addr16
pop
push
loop
and
ficomps
in
sbb
out
push
addl
xchg
jmp
mov
dec
lcall
xchg
arpl
mov
shl
pusha
jns
dec
inc
cmp
ret
insb
adc
movsl
es
fiaddl
popf
push
mov
loopne
icebp
and
fcoms
xchg
jle
add
loopne
rcrb
dec
icebp
sbb
clc
ds
push
and
dec
jb
or
push
inc
or
push
sbb
pop
fwait
int3
aaa
xchg
jnp
xor
push
pop
or
sbb
dec
jmp
pusha
mov
imul
shll
lods
movsb
or
and
rorb
stos
and
xchg
jns
add
cld
mov
pslld
inc
lahf
pop
xchg
popf
addb
mov
sub
js
out
mov
push
cwtl
dec
dec
jg
aaa
in
aad
xchg
cmpsb
mov
and
sub
daa
mov
pushf
push
adc
pop
notb
clc
mov
or
sbb
xor
push
cld
and
adc
rorb
fidivrs
fcmovb
mov
imul
int
sbb
fsubs
xlat
cli
out
mov
in
xchg
addb
dec
dec
adc
mov
adc
inc
xor
leave
addr16
subl
scas
bound
push
ret
mov
inc
jp
mov
enter
ss
mov
dec
sbb
pop
or
jne
aad
int3
cmpsl
xlat
jl
push
or
scas
and
mov
lret
int3
iret
out
cmp
repnz
dec
in
fistpll
scas
xor
mov
iret
les
into
pop
pop
sub
mov
arpl
cmc
inc
inc
pop
stc
sar
lahf
fcoms
cmpsl
cwtd
push
das
dec
jae
xchg
push
hlt
jns
pop
cmpb
dec
cmp
pop
adc
and
lret
out
xor
jne
sti
lcall
push
sahf
xor
push
xchg
inc
jecxz
bound
mov
jno
sahf
adc
mov
jl
stos
fcmovnb
pop
aas
fiaddl
inc
inc
test
int
and
in
xchg
popf
test
leave
or
movsl
pushf
repz
add
shld
xor
push
das
je
ret
mov
xchg
outsl
cltd
lods
sbb
out
test
mov
lea
sarb
lds
test
sti
mov
xor
cltd
scas
push
outsl
sti
mov
or
or
les
sub
xchg
sbb
jne
push
xchg
arpl
fistl
mov
pop
jmp
das
imul
xchg
nop
adc
fstpl
add
addl
sub
cmpsl
les
xchg
mov
adc
sbb
inc
add
in
xor
test
xchg
outsl
sub
jae
int3
ja
ja
mov
xor
je
cmp
pop
js
ss
rorl
xchg
imul
cmp
sub
or
push
mov
mov
xor
push
xor
push
mull
mov
call
sub
push
adc
cmp
ficomps
pop
adc
cmp
mov
sahf
add
add
push
jae
lds
add
imul
ljmp
jmp
outsb
add
dec
clc
adc
mov
stos
mov
popa
or
cld
fildll
pop
pop
ret
jbe
mov
pop
mov
xor
push
xchg
dec
cli
sbb
and
jbe
ret
adc
inc
xorl
add
jb
jmp
fsubrs
sahf
cld
mov
push
shlb
mov
sub
xchg
adcb
mov
cs
das
jmp
popf
stos
jb
jbe
scas
scas
outsb
and
call
jmp
xor
arpl
cmp
push
push
push
test
cmpsb
iret
lea
add
cmp
and
pushf
ss
das
and
cld
lods
inc
jmp
jg
fsts
imul
outsl
arpl
leave
mov
shll
mov
jne
add
iret
aam
loop
jge
mov
scas
push
roll
mov
sti
jbe
pop
stos
pusha
push
in
loope
jmp
int3
adc
imul
and
aaa
xor
insb
out
jo
push
aad
jl
sub
and
mov
push
pop
pop
mov
data16
jg
mov
push
leave
lret
lcall
sub
insl
ss
fisubrl
mov
in
arpl
popa
dec
adc
rolb
mov
push
adc
mov
jnp
and
mov
and
jns
shlb
fs
rolb
and
clc
and
inc
dec
pop
inc
dec
jle
out
rcl
push
and
mov
lcall
aam
add
insb
lea
push
mov
sub
fbld
testl
mov
arpl
or
add
mov
and
mov
adc
dec
adc
inc
pop
adcl
sbb
push
push
sbb
lcall
cmpsb
mov
xor
les
and
fs
sub
subb
mov
xor
jns
push
in
ret
jp
cmp
pop
xchg
jae
sahf
sub
fdiv
push
dec
call
add
fnstcw
xlat
inc
pop
mov
inc
mov
repnz
inc
inc
jo
sub
adc
sub
in
sahf
fimull
mov
lcall
jmp
pusha
sti
mov
fcoms
xchg
adc
sbb
and
lds
callw
cmpsb
push
or
pop
mov
cmp
dec
in
stos
insb
mov
push
xor
mov
fdivr
add
push
sub
pop
in
ret
aam
xor
mov
sbb
cmpsb
xchg
ficoms
rolb
add
notl
xor
adc
ret
ljmp
lret
jnp
or
clc
adc
or
jae
scas
xor
and
es
ret
jg
mov
bound
and
pusha
lcall
jg
popa
pop
test
mov
cs
sbb
je
insl
fsubrs
in
fcoml
fadds
add
lock
call
mov
iret
mov
pop
lahf
and
lret
mov
and
lods
jbe
ss
xchg
mov
xchg
sub
shlb
jbe
mov
pusha
xor
cmp
jo
mov
loopne
sub
jmp
cmpsb
xchg
lret
dec
mov
movsl
xchg
dec
mov
and
sbb
inc
popa
bound
pop
bound
adc
dec
jnp
mov
xchg
stos
xlat
mov
rcrb
mov
imul
sti
movsb
lret
adc
shr
sahf
cli
pushf
mov
jl
mov
or
cmp
mov
shrb
add
fstp
aas
les
xlat
mov
aad
mov
mov
fwait
jge
pop
mov
dec
xchg
xlat
cld
into
int
cmpsl
mov
fnsave
mov
mov
int
pop
hlt
mov
scas
loop
push
in
aaa
pop
push
dec
loop
pusha
mov
js
arpl
loop
cltd
cmp
and
mov
jb
loop
mov
daa
xor
push
andl
jmp
xorb
push
dec
mov
js
jecxz
sbb
dec
inc
sti
pop
pop
xor
jge
mov
out
push
push
mov
xchg
pop
std
imulb
ffreep
ds
push
sub
dec
aaa
sub
jb
mov
dec
pop
cmc
dec
into
data16
mov
push
and
dec
test
fwait
lret
dec
repz
cld
lods
sbb
add
mov
in
mov
out
jge
sbb
mov
jp
sahf
xchg
fcos
dec
je
repnz
leave
xchg
icebp
pop
repz
and
imul
rcl
add
jb,pn
cmp
push
push
inc
or
insb
int
pop
js
aad
push
and
or
enter
cli
fstl
aaa
stos
pusha
inc
mov
sub
cmp
mov
subl
test
mov
add
iret
push
add
xor
adcb
mov
out
lahf
and
and
xchg
int3
insl
adc
inc
ljmp
sbb
test
lods
in
stos
dec
aaa
adc
sub
mov
scas
add
sar
mov
cmpsb
add
cmp
xchg
hlt
dec
jl
cmp
mov
push
xchg
adc
add
push
ud0
add
xchg
cmp
mov
adc
xor
es
or
insl
mov
je
fsubrs
push
cmp
cmc
jmp
imul
dec
or
inc
mov
hlt
and
inc
jb
mov
add
ds
adc
addr16
jne
push
pop
fwait
xor
cmp
aaa
sub
icebp
fcoml
orl
xor
and
repz
jg
popa
lahf
jb
and
punpckhdq
pop
lret
and
sub
andb
leave
ficoml
sbb
adc
repz
in
push
or
xchg
add
lock
ds
cmpb
aam
ss
aam
push
inc
xor
cmp
push
mov
sbb
mov
mov
xchg
xlat
pop
les
idivl
mov
mov
test
push
or
scas
dec
cmp
add
inc
rorl
lret
jp
sbb
ja
pushf
sub
jne
cmpsl
ss
or
mov
scas
add
mulb
jnp
repz
rorb
adc
or
lods
lret
ja
push
jp
cmp
sbb
xor
std
or
cwtl
mov
mov
test
xchg
enter
pop
and
inc
jmp
loop
pcmpeqd
orl
xor
mov
outsb
add
stos
inc
cmpsb
scas
ljmp
jecxz
mov
xchg
jmp
or
mov
sub
add
and
jmp
push
repz
sub
push
add
mov
pop
arpl
cmpsl
int3
std
xor
ret
cmp
incb
push
sub
push
push
ror
mov
adc
outsl
sarl
or
cmp
inc
lahf
sbb
repz
addr16
sbb
insb
jb
mov
int
sbb
mov
and
adc
repnz
and
in
xchg
mov
fdivrl
lret
test
xchg
scas
xchg
insb
jge
insl
bound
inc
mov
mov
jg
lods
pop
xchg
and
lret
inc
cmc
xchg
cltd
or
jg
pusha
rol
movsl
fbld
inc
cmp
and
aas
dec
cmp
int3
mov
pop
sbb
pop
lock
shlb
ljmp
jmp
sbb
incl
ja
or
sbb
js
or
push
and
jbe
sub
sahf
xor
pusha
cmp
and
sub
in
jge
leave
mov
sbb
lods
xchg
dec
jp
pushl
gs
dec
mov
loop
roll
sbb
test
adc
sarb
sti
fnstsw
divl
mov
dec
cmc
mov
mov
mov
shrl
je
ds
cmp
add
cmp
jo
adc
mov
outsb
jp
and
dec
cld
xchg
mov
jae
hlt
out
jno
cmpl
jp
mov
in
pushf
out
jge
loop
cmp
xor
js
jmp
test
test
mov
sub
pop
mov
and
repz
lcall
fs
cmpsl
mov
lahf
fcoml
and
xchg
lods
arpl
mov
jb
out
into
out
andb
imul
or
sub
lahf
aad
sub
add
les
dec
arpl
aaa
push
popa
je
xor
mov
xchg
add
ffree
xchg
setbe
ret
aam
test
jmp
xchg
adc
add
call
adc
aas
push
movsb
gs
pop
aad
imul
fisttpl
mov
stos
movsb
daa
sahf
xchg
or
or
fisubrl
ret
es
or
jbe
cmc
sub
rcrl
ret
cwtl
jg
and
scas
loop
push
mov
xor
mov
sahf
xchg
add
in
mov
adc
fbstp
xchg
mov
das
jb
jnp
push
ja
out
arpl
jge
dec
adc
cmp
xor
arpl
outsl
dec
mov
imul
pop
fwait
or
inc
xor
dec
leave
dec
andl
outsb
pop
mov
add
and
loope
test
popf
add
insb
outsl
mov
adc
jo
cmpsl
cld
xchg
cli
push
jp
push
add
add
and
jnp
mov
inc
push
sbb
mov
shr
pop
dec
pop
call
mulb
add
pusha
mov
in
out
sti
or
cmc
icebp
cmp
add
xlat
mov
loop
mov
arpl
addl
jl
cltd
stos
pusha
cmpb
mov
push
test
mov
es
cmp
jne
jbe
cli
sub
imul
inc
fwait
jnp
cmp
mov
arpl
mov
adc
mov
lock
lods
ss
mov
jge
fnstsw
incl
shll
cmp
push
and
test
pop
sub
arpl
test
cld
sbb
jno
pop
xor
aas
sub
cmc
js
sti
mov
or
in
inc
jl
mov
xor
in
cs
push
mov
or
add
sbb
aaa
jae
and
out
mov
inc
add
sbb
cmp
imul
push
adc
dec
xbegin
xor
rol
sbb
sahf
push
out
add
aad
lock
int
inc
nop
repz
xchg
and
repz
test
popa
adc
inc
or
sub
jae
jle
popf
cmpsb
dec
sbb
dec
fdivrs
xchg
mov
pop
xor
aaa
aam
mov
mov
cmp
sub
sbb
das
xchg
or
cmpb
push
movsb
inc
out
mov
cwtl
lds
mov
pusha
rcr
lea
adc
xor
stos
cmp
xchg
pop
jecxz
stos
inc
ja
dec
cli
jno
cmp
je
shll
lds
cwtl
adc
ds
dec
xor
push
cmpsl
add
xchg
jae
or
out
sbb
loope
cli
mov
ret
add
fstps
gs
sbb
in
inc
jne
xchg
in
sbb
sub
sbb
pop
mov
jl
dec
fdiv
mov
aaa
scas
dec
push
gs
adc
sbb
push
imul
iret
add
pop
lcall
rolb
mov
in
stc
scas
jecxz
push
mov
mov
lods
gs
cmp
roll
gs
jmp
mov
stos
pop
into
shlb
jecxz
cwtl
mov
adc
inc
jmp
inc
arpl
mov
imul
jmp
not
repnz
rolb
imul
subl
pop
sbb
test
lock
push
orl
and
inc
dec
movsb
lahf
push
add
loop
fmuls
call
test
ds
test
sbb
cmp
mov
push
arpl
mov
lock
ret
lods
mov
mov
lods
xchg
dec
xchg
jne
movsl
sbbb
lret
cmp
mov
xor
xor
push
mov
pop
dec
repz
pcmpgtb
add
dec
lret
xchg
jns
add
fsub
in
iret
loope,pn
popf
pop
xchg
sbb
int3
mov
jg
lods
mulb
xchg
mov
lret
lods
gs
in
fnstcw
push
xchg
insb
fbld
dec
outsb
dec
int3
dec
nop
dec
lea
icebp
mov
pop
out
dec
rcl
shrl
xchg
adc
test
ja
ret
ss
into
xor
xor
movsb
adc
sbb
shll
mov
inc
sub
mov
xchg
dec
repnz
icebp
pop
je
jnp
add
jmp
adc
popa
test
cmp
jae
call
mov
pop
dec
and
into
or
adc
jmp
and
jle
enter
push
test
cld
xchg
in
jl
adc
mov
out
push
lods
sbb
loop
int3
das
insb
sbb
push
inc
xchg
fdivrl
xor
mov
inc
mov
faddl
xchg
jnp
aad
mov
cmovns
cltd
icebp
pop
jae
cwtl
jp
sub
cs
jae
xchg
cmp
dec
dec
add
dec
cmpsl
add
pop
int
or
scas
test
adc
cmpsl
cmp
aad
xchg
out
in
nop
pop
loope
outsl
hlt
icebp
or
mov
out
mov
pop
mov
insl
sbb
int
pushl
jp
mov
inc
sbb
jo
pop
fld1
rclb
fxch
dec
cmpsl
fldl
icebp
push
sbb
adc
imul
push
insl
cwtl
test
adc
push
inc
pop
add
mov
pop
leave
popa
jo
pusha
cmc
inc
mov
inc
sbb
cmc
subl
repnz
jmp
mov
sti
sbbb
dec
pop
in
mov
push
scas
adc
popa
enter
mov
cmp
xchg
dec
ret
inc
andb
shll
sub
fs
jl
shr
xor
pop
movsb
test
pop
stos
inc
aas
add
dec
stc
dec
int3
adc
cmp
xlat
mov
scas
inc
adc
adc
or
mov
lea
jno
subl
push
sbb
les
or
scas
pop
loop
lret
or
jae
popf
add
sub
push
inc
in
mov
or
lods
inc
cld
or
push
popfw
mov
mov
sub
jle
shrl
fs
mov
sub
xchg
dec
push
cltd
ja
lret
dec
xchg
aas
add
xor
mov
push
sbb
mov
lcall
rorb
sub
fs
sbb
sbb
jbe
fsub
xchg
mov
fdivrl
pop
xchg
jge
add
sbb
cmp
lahf
pusha
adc
xchg
cmpsb
mov
or
rcr
cmp
cmc
imul
lds
in
add
outsl
mov
outsb
mov
sbb
xor
xchg
ret
stos
mov
push
lods
test
dec
rol
into
mov
clc
addr16
xchg
and
lods
push
fs
push
inc
inc
pop
gs
push
xor
mov
mov
jbe
sahf
mov
repz
pop
out
sbb
mov
mov
cmp
jbe
cmp
or
int3
dec
test
cmc
mov
enter
test
hlt
loope
popa
stos
push
push
cmp
xchg
mov
aad
add
sbb
xchg
in
ror
lea
scas
inc
daa
insb
call
dec
adc
adc
mov
adc
insb
sub
int
xchg
add
out
sbb
aas
adc
dec
dec
in
xchg
sbb
js
mov
sbb
cltd
fsubl
mov
test
daa
lea
das
cltd
cltd
and
out
movsl
jl
mov
mov
aas
insl
decb
fimull
mov
jno
pushf
jae
mov
les
xorl
push
jne
xor
in
or
inc
popf
stos
cmp
aas
lods
popa
pop
mov
mov
pop
insl
into
daa
or
pop
stos
jmp
pop
cmpsl
push
fcompl
andb
pop
jae
rolb
xor
or
subb
xor
stos
xor
xor
push
leave
dec
out
cmp
push
push
pop
xchg
movsl
frstor
push
das
outsl
subb
loope
repnz
cmpsb
int
mov
jle
mov
repnz
inc
cs
xor
iret
lret
hlt
ljmp
and
les
xchg
cs
cltd
roll
xor
stc
add
fimull
lods
jne
xchg
jecxz
mov
adc
pop
lods
cli
xor
aaa
mov
test
sbb
xchg
sbb
push
cmpsb
cwtl
inc
push
push
sbb
in
hlt
pop
sar
jg
nop
or
add
jge
xchg
inc
outsl
mov
jle
in
jp
and
mov
loop
out
xchg
cli
divb
dec
out
fcmovnu
dec
push
movsb
les
cmpsl
sbb
icebp
push
aad
lret
stc
out
insb
and
pop
addr16
dec
pop
fsts
cmp
mov
cmp
imul
mov
xor
scas
lds
sub
mov
xchg
xor
dec
bound
lret
mov
add
and
imul
jns
mov
add
sub
or
fmul
mov
test
mov
mov
pop
dec
in
aam
das
mov
cmp
dec
add
stos
fcomp
cmp
fxch
inc
mov
div
push
jg
mov
jno
in
lock
pop
test
pop
dec
fcompl
push
into
cwtl
mov
adcl
repz
cmpsl
sbbb
and
xor
rcrb
xchg
stos
xchg
mov
sub
lret
cli
divl
jno
sub
and
adcb
sti
add
ja
push
fstpt
enter
rcrl
movsb
mov
mov
sub
xchg
mov
jmp
and
scas
lods
adc
mov
hlt
sbb
cld
fdivs
mov
adc
sbb
xchg
aam
out
sahf
rcrl
jne
int
pushf
jnp
iret
fs
daa
and
lock
jne
js
jge
xchg
adc
ja
fsubrl
adc
adc
ret
insl
or
mov
leave
xlat
es
push
aam
push
or
and
xchg
push
add
ret
jbe
jle
inc
sub
or
popf
pop
dec
inc
pop
cli
jne
insb
in
adc
fsubs
hlt
add
adc
add
clc
fsubs
insl
jmp
je
shl
lock
sti
movsb
xor
push
adc
and
outsl
fwait
in
mov
mov
sbb
cli
je
cltd
lods
inc
cs
pop
movsl
ret
lds
test
fs
gs
and
cmp
outsb
mov
pop
mov
movsl
cli
inc
mov
push
mov
cmp
push
sub
pop
ficoml
inc
lret
jns
jb
adc
push
and
xchg
xchg
scas
or
std
add
sarl
pushf
sub
lcall
jg
pop
iret
adc
loop
sub
ja
jmp
cwtl
imul
push
sub
in
add
or
daa
imul
mov
dec
fistl
int
out
jbe
in
ljmp
lahf
dec
mov
loopne
outsb
rclb
inc
enter
mov
mov
out
push
xchg
test
adc
je
fs
xor
fsubrl
or
cmp
push
mov
sbbb
or
fsubl
stos
adc
xchg
cmpsl
inc
mov
outsb
push
out
iret
gs
out
sub
fsubrl
and
jbe
movsb
pop
dec
jbe
pop
js
std
xor
pop
inc
add
loope
divb
stos
aaa
push
xchg
scas
int3
cmc
push
lret
lods
xchg
cmpsl
jne
idivl
mov
push
push
sbb
divl
mov
loop
sub
ljmp
aam
fwait
jno
gs
and
xlat
fwait
clc
fisubl
loopne
cld
repz
aad
push
jne
sbb
mov
or
sub
add
or
push
das
inc
aas
sbb
xlat
jmp
popa
push
jg
mov
aad
cmc
adcl
cli
and
cmpsb
mov
lods
mov
sahf
push
fldt
cmpb
xchg
lahf
das
dec
jno
sbb
rcr
adc
lret
mov
lock
ret
lret
dec
andb
imul
mov
dec
mov
mov
insb
int
cmp
mov
cmp
push
mov
stos
and
fwait
push
ja
xchg
cmp
inc
out
cli
in
insb
mov
add
sbb
lret
test
pop
stc
pop
popf
ljmp
xlat
gs
pop
fcmovu
sbb
inc
vmread
in
jle
pop
jo
and
outsb
sub
mov
icebp
xchg
cmp
jg
xor
or
mov
cmp
test
negl
in
imulb
sub
into
sbb
cmp
cs
cwtl
and
push
mov
inc
ja
cmp
daa
lods
xchg
lods
inc
out
mov
mov
mov
testl
add
or
jo
mov
push
inc
repnz
push
and
xor
fisttpl
rep
out
add
jnp
cs
fnsave
test
shlb
xchg
dec
sti
mov
jge
std
jp
ret
and
mov
sbb
add
aas
daa
jge
push
dec
pop
xchg
sbb
cmp
push
pusha
imul
mov
lret
pop
in
pop
pop
enter
leave
cmp
inc
sub
and
fidivrl
mov
repnz
mov
adc
jmp
mov
push
push
out
fcmovbe
xor
fstcw
outsb
or
add
jae
xchg
leave
xlat
outsl
inc
les
mov
mov
sub
jae
mov
into
add
xchg
inc
push
jmp
mov
lahf
arpl
inc
pop
stc
test
add
movsl
shrl
mov
jne
jg
cld
inc
push
lock
jae
daa
add
shrb
ret
pop
or
loop
test
inc
xchg
lcall
in
jb
fcmovb
sbb
pop
adc
jge
fstpt
sub
mov
sbb
mov
cmp
cmp
mov
push
mov
orb
in
mov
js
mov
and
push
inc
push
cmp
mov
js
sub
dec
sbb
cwtl
push
add
cltd
cwtl
sub
pop
test
pop
in
repnz
and
stos
pop
stc
in
jb
popa
adc
sbb
repnz
stos
push
je
fbld
pop
mov
scas
dec
inc
xor
ret
xor
loop
fildll
jg
inc
insb
aad
das
std
mov
cmpsb
push
xchg
mov
cmp
dec
repz
pop
imul
les
test
or
xor
inc
cmp
ficoml
and
jnp
fisubrl
add
shrb
pop
jecxz
jae
loope
insb
popa
in
sti
ret
xlat
or
jae
dec
icebp
in
pop
aaa
xor
cmp
pop
dec
sub
dec
nop
addb
sub
or
push
jno
mov
dec
test
mov
outsl
fmulp
ds
out
fucomip
push
flds
or
push
mov
add
fisubl
push
dec
pop
jno
sbb
movl
js
pusha
ja
in
dec
jl
int3
shll
dec
lret
dec
ret
push
sub
movsb
nop
inc
jle
sbb
cmp
push
fistl
cwtl
dec
cmpsb
into
jg
cmp
lahf
cmc
fwait
js
push
cmp
dec
jl
lods
imul
inc
inc
mov
fs
jecxz
das
std
popf
or
add
adcb
pop
enter
loop
iret
pop
imul
dec
ljmp
sar
inc
xor
imul
xlat
lds
gs
push
std
jo
sbb
pop
mov
icebp
in
xor
xlat
inc
or
test
cwtl
jmp
fst
pop
mov
and
addb
rcll
mov
cmp
jae
in
add
addb
test
mov
mov
or
xchg
jle
fst
inc
stos
je
imul
rorl
cld
mov
jne
xor
popa
adc
ss
sahf
negb
xchg
mov
cmp
mov
js
xchg
test
icebp
xchg
jmp
inc
popa
dec
fisubrs
mov
or
adc
mov
repz
lods
popf
mov
xor
cmp
xchg
popl
jb,pn
xlat
test
repnz
pop
ljmp
insb
pop
xchg
notb
and
lcall
iret
orb
mov
inc
outsb
sahf
jg
pop
sti
jno
gs
ret
mov
lds
xchg
add
add
mov
loop
cwtl
xlat
cmp
or
loopne
sahf
loope
pop
stc
add
mov
inc
mov
out
out
hlt
push
shll
jb
ds
jno
xchg
pop
pop
testb
out
add
or
and
lret
icebp
test
or
stos
mov
jl
shll
inc
je
test
dec
ret
gs
mov
mov
loope
fistl
stos
cli
ja
pop
add
lcall
pop
inc
mov
and
pop
sahf
test
out
jg
arpl
pop
xchg
or
xor
mov
test
ljmp
bound
test
in
mov
loop
xchg
lcall
hlt
jne
repnz
pop
popf
mov
ss
push
ret
iret
sbb
aaa
loop
ss
jae
cmp
cmpsb
mov
fstl
js
call
cmp
fcomps
imul
push
push
jns
cmp
js
adc
lods
es
pop
sbb
dec
pop
jne
fimull
adc
in
or
inc
sbb
sbb
sahf
or
cli
ja
int3
cmp
fcomip
cli
cmp
add
sarl
repnz
mov
push
imul
fiadds
insb
sbb
xchg
xchg
fwait
xchg
adc
and
pop
lcall
gs
lret
and
add
or
cmpsl
inc
push
orb
xor
mov
xor
jns
cs
aad
insl
sub
cld
add
mov
sbb
jp
call
dec
stos
mov
mov
and
dec
loopne
fwait
imul
and
mov
add
xchg
add
dec
int3
and
std
imull
leave
jbe
std
das
sbb
mov
mov
add
jns
push
dec
jle
push
or
insb
sub
aad
jbe
jbe
jle
mov
arpl
mov
mov
aas
add
scas
mov
pop
mov
in
mov
addr16
sarl
cmp
and
mov
push
cwtl
and
loop
cmpsl
cmpb
sbb
sbb
pop
sarl
aas
add
adc
xchg
xorb
cmp
cmp
loopne
push
in
add
mov
sub
lods
mov
cmp
mov
inc
outsb
out
pop
in
adc
testb
add
mov
xchg
outsl
or
rcll
xor
andb
je
add
xchg
out
fisttps
scas
xor
sub
incb
fs
dec
dec
repz
inc
sbb
cltd
xor
pop
fpatan
orl
add
aaa
sub
jp
into
sbb
cmp
add
pop
inc
test
pop
jno
dec
popf
xor
nop
daa
mov
pusha
xchg
push
in
jns
sahf
add
xchg
add
fcomps
push
mov
push
dec
cmp
pop
jle
movsl
pop
pop
adc
leave
popa
pop
mov
mov
push
popa
adc
fdivrs
insb
jo
mov
push
nop
inc
inc
notl
push
cmc
pushf
jge
fs
adcl
push
jle
loope
inc
fsubr
inc
inc
sbb
lret
pop
or
js
jp
add
test
mov
fs
jbe
js
dec
out
cmp
sub
mov
leave
mov
stc
lret
xchg
sarb
pop
jbe
and
push
cmp
mov
dec
sub
ror
test
push
sbb
lods
inc
dec
shrb
and
xor
push
adc
xor
jae
xchg
out
xor
jp
test
aas
add
scas
rcrb
mov
sbb
roll
cmpb
xchg
das
inc
repnz
adc
dec
jbe
test
out
mov
sub
rol
stc
fidivs
xor
fs
flds
leave
inc
cmp
rclb
pop
js
add
movsl
out
jmp
mov
icebp
adc
popf
notb
test
sub
mov
cmp
dec
sbb
xor
and
sub
inc
jbe
xlat
nop
cmp
in
out
lods
adc
jae
fstps
aas
loop
insb
add
mov
stos
dec
or
loopne
lcall
ret
fstpt
or
jmp
adc
push
and
sub
popa
cmp
popf
test
sarl
dec
movsl
mov
lret
addr16
mov
add
enter
ficoms
clc
ljmp
xchg
mov
fidivl
sub
cld
jns
cmpl
dec
std
mov
jp
mov
cmp
push
pop
lock
xor
and
fldenv
push
adc
rolb
icebp
adc
cmp
cwtl
in
sti
pop
fiadds
sub
fwait
push
pop
push
std
fldt
push
div
mov
mov
sub
mov
xor
gs
or
pop
sar
pop
insb
lret
push
add
pop
pop
orb
push
jle
rcr
scas
xchg
mov
pop
rcrb
mov
popa
jb
cwtl
inc
rol
ds
loope
xor
dec
adcb
push
lret
icebp
fiaddl
cmpb
pop
jecxz
push
in
aam
daa
daa
es
and
ret
cmp
out
pop
aad
jno
mov
adc
sbb
inc
xchg
push
inc
adc
das
push
jl
add
aaa
add
jb
ffreep
fdivl
pop
outsb
pop
popf
into
inc
xchg
movb
call
dec
imul
das
adc
das
mov
outsb
outsl
mov
jmp
out
sub
loope
add
pop
xchg
pop
loope
adc
push
stos
sbb
stc
cmp
fmuls
add
pop
cmp
dec
divl
hlt
lcall
inc
inc
jbe
xor
xlat
stos
xchg
scas
out
xchg
xlat
insl
into
and
into
push
aam
jbe
shrb
cmp
mov
jne
push
or
jge
into
dec
add
or
push
movsl
inc
cmp
imul
mov
ss
enter
cmp
lcall
mov
dec
mov
pop
lods
in
xchg
out
repnz
or
cmp
fldl
stc
shr
sbb
add
jo
loop
jecxz
mov
mov
nop
sub
stos
movsb
aad
xchg
shrb
cmpsl
xor
filds
mov
test
cmp
sub
sub
shrb
pop
adc
add
pop
fs
mov
push
insb
cld
fwait
sbb
mov
inc
sub
mov
rcrb
ds
mov
jg
jne
rclb
loopne
mov
int
mov
int
sub
mov
test
mov
mov
adc
scas
and
test
sbb
sub
cmc
inc
fldl
or
cmp
lahf
sbb
les
cmp
ficoml
push
fisttpl
push
push
ss
add
outsb
cmp
push
enter
cli
lret
nop
test
xor
lcall
outsb
lods
test
jb
lock
push
sbb
xchg
iret
lds
and
sbb
int3
mov
mov
sbb
rclb
test
into
jle
out
sub
jne
repnz
stos
pop
test
nop
into
jno
jne
imul
popl
mov
jle
adc
lods
sahf
fs
add
mov
and
out
inc
aas
scas
jp
push
jo
fwait
paddq
mov
mov
in
das
js
icebp
addr16
int3
ret
out
ss
dec
insb
or
xlat
sarl
les
sub
test
or
mov
aaa
lret
sub
cmpsl
push
jb
sub
jg
sbb
sub
xor
mov
lret
loop
xor
iret
jbe
or
adc
clc
dec
in
nop
lea
mov
pop
push
mov
bound
jmp
cmpl
es
add
xchg
fwait
inc
mov
adc
cmp
xor
ja
pop
fs
bound
pop
or
incb
adc
adc
cmp
push
imul
sbb
popa
loopne
mov
mov
inc
or
stos
dec
stos
push
cmpsl
sub
lret
dec
loop
scas
or
push
sbb
jmp
dec
xchg
outsl
dec
xchg
sar
ljmp
adc
xchg
mov
int3
pop
addr16
lds
mov
push
jle
icebp
clc
fs
xchg
push
sub
mov
loope
daa
xor
sarl
fstps
mov
ret
sti
sbb
rorb
and
push
pop
mov
mov
mov
dec
and
or
jmp
aam
aam
jle
pop
hlt
inc
daa
xor
shrl
ss
call
sti
adc
or
mov
aad
lret
sub
cwtl
fildl
mov
hlt
xchg
insl
mov
cmp
xor
jmp
fbld
aad
ss
sub
in
bound
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
push
ja
cmp
add
adc
xchg
push
mov
or
jno
and
bound
pop
bound
pop
xor
ss
push
loope
dec
pop
loopne
jle
sbb
xchg
or
xor
das
cmpl
stos
ror
lods
scas
sbb
stos
jecxz
xchg
push
stos
dec
mov
inc
aaa
mov
addr16
nop
sarl
pusha
mov
outsl
dec
outsl
jl
out
inc
insl
jno
test
outsl
ds
xor
les
mov
or
out
push
mov
and
cmpsb
dec
pop
bound
lahf
mov
sti
or
mov
test
shrl
sti
clc
add
and
pop
push
mov
aam
jp
mov
lret
inc
cmpsl
xor
mov
sbb
pop
xchg
mov
xor
cmp
outsl
int3
es
loopne
cltd
and
push
and
mov
and
inc
mov
aas
pusha
jg
or
lahf
inc
push
addr16
sub
mov
lcall
add
in
mov
jg
mov
movsl
cmpl
xchg
sbb
jne
sbb
ret
daa
testb
mov
mov
push
xor
xchg
rcrl
in
sub
cmp
sbb
cmp
mov
jg
mov
xchg
mov
push
pop
mov
mov
mov
sub
mov
push
orb
jg
insl
or
rol
fcoml
dec
or
jb
inc
es
inc
rol
aam
leave
out
adc
pop
and
xor
mov
repz
sbb
dec
inc
std
or
dec
enter
inc
mov
jns
or
loopne
mov
jl
jns
pop
movsb
mov
dec
fwait
push
cmp
adc
sahf
pop
call
cmp
or
aaa
dec
popf
dec
push
sub
in
rcrl
xor
leave
out
sbb
mov
mov
sarl
sub
cld
pop
inc
add
sahf
cld
add
push
pop
ss
lahf
jne
negb
mov
shrl
jbe
xor
jg
je
xchg
mov
mov
aas
std
pop
push
lods
cmpsl
imul
jecxz
and
adc
test
outsl
loope
sarl
or
mov
sbb
lea
roll
mov
jb
rcrb
add
ss
aaa
je
pusha
lds
les
add
inc
lret
fdivl
int
lods
sub
shrl
out
inc
hlt
decl
add
test
adcl
cmp
loope
push
or
cmp
push
jge
or
fldt
es
push
movsl
jbe
push
cmpsb
inc
sbb
fstps
add
mov
push
push
pop
arpl
test
roll
fs
fwait
arpl
sub
jp
mov
ficoml
add
jp
mov
ja
mov
push
xchg
sbb
jecxz
push
mov
push
add
cmp
enter
loopne
lds
adc
fsub
dec
pop
xor
add
pop
mov
ds
loope
xchg
rcll
lods
mov
sub
jbe
jb
pop
pop
icebp
sub
push
pop
ror
jmp
dec
dec
pop
jo
fwait
jae
dec
imul
jne
cmpb
gs
adc
push
mov
shlb
ss
icebp
inc
addr16
das
mov
nop
xor
xor
mov
cwtl
loop
fdivs
rcl
sti
mov
xchg
mov
rorb
in
inc
and
add
adc
dec
aad
iret
hlt
xorl
jne
jae
inc
sbbb
push
stos
push
cmp
inc
gs
and
ja
dec
sbb
cli
sbb
or
pop
insb
pop
sub
scas
roll
sbb
jb
push
in
imul
adc
fdivl
jp
mov
push
jnp
aad
nop
xchg
mov
push
xchg
call
xor
call
push
aaa
xchg
xor
aad
mov
dec
into
or
pop
mov
leave
enter
outsl
mov
sti
leave
pusha
mov
xchg
aaa
iret
inc
popa
roll
cld
push
call
push
mov
outsb
andl
add
aas
push
mov
in
movsl
iret
inc
cmpsl
imul
loop
xlat
sub
xchg
rcrl
inc
xchg
call
loope
fimull
movsb
add
adcl
xor
mov
xchg
test
icebp
or
cmp
out
sbb
inc
mov
mov
add
adc
mov
pop
dec
je
adc
push
mov
or
enter
inc
mov
mov
add
and
int3
push
sbb
fildl
fnstenv
popa
xor
push
in
cmp
xor
sub
sbb
fiaddl
data16
sbb
popf
or
sbb
xchg
inc
repz
shrb
out
xchg
mov
jle
cwtl
and
mov
lahf
nop
loop
repnz
pop
xor
insb
in
icebp
stos
div
xchg
sbb
enter
pusha
out
sbb
mov
loop
enter
inc
cmp
mov
mov
xchg
daa
pushf
popf
lods
mov
sbb
out
xchg
mov
lahf
dec
jge
push
pushf
push
dec
movsb
pushf
int
aad
jo
cmp
and
mov
mov
repz
js
pop
fisttps
inc
clc
pop
jae
sbb
add
aaa
mov
lods
add
loope
fnstcw
pop
sub
mov
mov
pop
inc
mov
sub
xchg
ss
repnz
test
mov
jmp
add
mov
daa
aam
xchg
pusha
xlat
push
xor
addr16
jge
aaa
xor
in
mov
loop
arpl
xor
xor
int
adc
outsl
sub
scas
fmull
xchg
xchg
and
add
sarb
lret
xorl
jb
jne
sbb
out
pop
xlat
xlat
push
rcr
test
lea
push
cld
xor
xchg
jg
cli
cmc
fisttpll
mov
push
sub
in
jle
lds
push
out
insl
jo
sahf
icebp
pop
inc
imul
aaa
mov
push
in
sub
inc
lret
arpl
cs
stos
xchg
mov
push
std
aam
addr16
lea
lahf
mov
sbb
aas
cmp
lret
cmp
insb
jb
sahf
popa
lock
shlb
mov
and
mov
les
pop
andl
xor
fimull
sub
mov
sub
iret
stos
and
mov
pop
pop
or
das
mov
aam
mov
pop
inc
xchg
aam
jne
aam
das
dec
dec
cmpsb
mov
and
fs
or
mov
movsl
roll
xor
xchg
inc
lods
xchg
adc
mov
gs
mov
aad
sbb
sub
jl
mov
pop
push
xlat
inc
dec
sbb
inc
jge
outsb
fdivl
repz
dec
pusha
fcompl
and
sub
les
cmp
imul
dec
dec
stos
lock
and
nop
test
iret
loop
cld
enter
fisttps
or
and
insl
jp
popa
jb
pop
mov
and
pusha
or
popa
and
insb
xchg
outsb
cwtl
cmpsb
int3
push
add
outsl
push
gs
jno
dec
inc
mov
call
popa
jle
pop
popf
lret
sti
cmp
jp
mov
xchg
and
sub
adc
mov
out
cld
mov
fildl
loope
pop
test
add
xchg
add
mov
cmp
jnp
pop
cmp
in
js
mov
mov
addl
jg
mov
outsl
jp
mov
lods
cmc
scas
addr16
lret
fldl
in
iret
inc
bound
sub
adc
insl
fmuls
leave
push
xchg
mov
stos
or
push
mov
ret
inc
xor
in
mov
insl
jg
xor
lcall
pop
sbb
mov
mov
fildl
stc
jo
jg
add
bound
jmp
in
popf
mov
cmp
stos
aaa
lods
gs
add
mov
mov
jbe
push
pushw
cmc
or
das
imul
sub
add
sub
sbbl
pop
out
icebp
adc
mov
adc
les
ljmp
orb
inc
dec
and
inc
sub
cmpsb
mov
mov
push
cld
xlat
ljmp
iret
faddl
rolb
std
dec
adc
mov
sbb
mov
mov
jmp
xchg
sbb
push
jge
pop
clc
sub
jb
xchg
je
mov
mov
inc
popf
shr
cmp
xchg
xor
jmp
cmp
mov
jnp
sbb
aad
push
pusha
in
ljmp
mov
and
addr16
sbb
mov
dec
clc
sbb
pop
push
pop
in
pop
mov
jecxz
inc
das
in
stc
inc
repnz
mov
call
inc
sbbb
jge
dec
add
pop
in
cmp
jmp
lcall
add
jns
pop
fdivl
mov
ret
mov
pop
xchg
jge
out
push
popf
pop
xchg
addr16
xor
negl
test
push
mov
lret
outsl
mov
dec
nop
xor
push
cmp
adc
mov
xorb
mov
adc
outsb
mov
test
sub
jmp
testb
in
sbb
in
push
adc
subb
out
xor
loop
frstor
cmpxchg
int3
pusha
imul
adc
pop
jbe
push
mov
jg
mov
aad
pop
push
out
xchg
loop
iret
loop
in
repnz
jecxz
fildl
inc
fistl
jbe
or
rorb
cmp
xchg
sub
inc
sub
mov
pop
fs
mov
sub
in
call
cmc
and
addr16
aam
loope
add
mov
adc
xchg
pop
mov
add
stos
jle
mov
fstps
out
jbe
insl
out
stc
push
push
in
enter
cmc
in
xor
pop
lock
push
cvttps2pi
pop
jnp
dec
mov
addr16
test
leave
clc
mov
inc
loop
je
movsl
or
mov
frstor
push
ss
mov
in
imul
inc
cli
fsts
loope
inc
xchg
jp
out
jp
comiss
sub
adc
movsb
jmp
lret
std
fwait
xchg
sbb
pop
lret
push
or
jbe
loopne
push
gs
cmp
popa
loopne
mov
cmp
jge,pt
inc
fisttpll
lret
negl
sarb
test
pop
push
lock
cmp
lods
mov
arpl
jg
pop
out
clc
or
stos
mov
aad
cmp
push
test
mov
add
adc
mov
mov
cmp
pop
cmp
push
fadd
mov
shl
xchg
mov
int3
inc
adc
cmp
insl
push
mov
and
loope
fsubrl
insb
xchg
lds
mov
and
sub
les
inc
shll
cld
mov
lea
add
or
int3
int
xlat
adc
rcll
mov
stos
mov
pop
scas
repz
in
pop
pop
mov
mov
sti
xchg
push
xchg
lock
fwait
lahf
xchg
daa
nop
nop
popa
mov
adc
or
cwtl
mov
ret
mov
mov
call
add
dec
jecxz
sbb
cltd
sub
dec
lods
mov
jge
imul
sarl
and
and
dec
and
stos
push
fcomip
mov
push
jg
adc
sub
imul
pop
inc
nop
popa
cs
insb
pop
scas
sub
int
addr16
jae
jmp
lea
dec
dec
mov
mov
out
ja
mov
lods
dec
jns
xchg
mov
adc
bound
int3
leave
lods
xlat
sarl
and
mov
js
push
mov
ds
push
and
mov
subl
dec
push
mov
or
dec
mov
jbe
mov
fwait
test
pop
in
aad
xor
fimuls
lret
stos
add
lds
fsub
pop
jno
pusha
xchg
sub
mov
pushl
adc
jmp
cmpsb
or
outsb
mov
xor
and
xor
fmull
out
in
adc
rcrl
in
xor
adc
xchg
daa
push
xchg
and
mov
roll
cmp
sub
out
xor
outsb
mov
test
js
icebp
out
imul
aaa
pop
xchg
mov
and
mov
push
pop
and
add
mov
gs
or
push
icebp
mov
adc
jge
addr16
les
in
pop
jo
jo
lds
pusha
je
cli
xor
pop
add
dec
lcall
aas
pop
lret
stos
stc
mov
das
cmp
sbb
push
inc
or
pop
arpl
dec
icebp
popf
dec
sbb
pop
xchg
insl
mov
jne
lock
pop
roll
jg
shrl
mov
popf
test
mov
push
out
adc
clc
les
es
fdivrl
lcall
inc
inc
jg
pop
fcmovnu
xor
mov
and
outsl
rolb
jmp
imul
stos
rcll
imul
adc
lcall
mov
pop
mov
es
mov
andb
scas
aam
shll
xchg
lds
pushf
inc
insl
test
addr16
mov
jmp
adc
push
fstpl
inc
push
xor
out
out
jl
cmp
cltd
stc
fstp
outsb
daa
shrl
mov
jp
cs
xor
into
dec
in
or
movsb
cs
mov
mov
daa
push
jb
jecxz
or
dec
mov
leave
mov
in
or
xchg
or
into
enter
loop
sbb
dec
shlb
mov
xchg
or
sbb
movsl
orb
stc
cmp
sub
jb
lods
repnz
xchg
test
xchg
pop
sbb
loopne
jnp
mov
ljmp
dec
pop
add
sbb
ds
mov
xor
push
cmp
inc
push
data16
mov
add
repnz
fsubr
inc
pop
xlat
int
out
and
test
lds
fidivrl
mov
imul
out
fisubl
dec
sbb
popa
leave
push
sub
sub
inc
das
sbb
lret
or
push
pop
outsb
adc
addr16
xor
dec
rolb
dec
mov
or
push
dec
sub
sahf
outsb
dec
pop
shrl
mov
insb
dec
mov
sbb
ror
js
push
xor
lock
js
sub
push
sbb
stos
es
enter
sbb
les
or
out
push
lret
mov
popf
push
stos
cltd
out
cmp
cmp
daa
mov
xchg
push
push
jmp
in
bound
cmp
xor
leave
aaa
orb
cli
or
mov
xchg
or
repz
dec
ds
push
push
dec
pop
push
pop
enter
and
push
add
fadd
push
push
imul
mov
adcb
arpl
repnz
aaa
or
or
push
mov
mov
cmpb
cmp
xlat
sbb
xchg
fisubrs
pushf
cli
rcll
mov
stc
xor
aaa
mov
push
stos
xchg
mov
scas
in
mov
inc
mov
fnstsw
xor
push
push
mov
add
addr16
movswl
cmp
or
scas
ja
and
xchg
aas
push
xor
and
cmpsb
sub
push
dec
stc
push
leave
pop
inc
aad
jb
dec
imul
jle
jno
mov
mov
addr16
js
cmc
fstpl
mov
mov
jne
sbb
cmp
stc
aam
mov
push
jmp
mov
mov
adc
call
inc
out
xor
xchg
int
cmc
cld
pop
in
mov
cs
out
sbb
insl
cs
pop
imul
inc
mov
push
dec
mov
stos
movl
sbb
mov
es
test
les
sarl
jge
and
fsubrl
lcall
ja
push
xor
mov
sbb
and
jbe
cli
repz
test
rcr
imul
insl
mov
and
clc
adc
lods
cmp
fsubrl
pop
aam
into
jle
or
leave
fisubrs
mov
adc
xchg
xchg
sub
jg
subl
addl
mov
and
push
mov
cmc
lret
xchg
mov
adcb
and
jb
movsb
test
ret
test
xchg
popf
add
inc
mov
jp
test
dec
add
fstpt
lods
sub
mov
push
push
arpl
mov
rcrl
xchg
add
into
pop
adc
js
sub
xchg
into
aas
mov
fnstenv
aam
insb
cmp
aas
sbb
jno
mov
lret
inc
out
xor
cmc
jg
fiadds
jp
ja
jle
sbb
lods
out
outsl
fs
mov
mov
inc
or
fcomps
push
xchg
stc
out
and
in
xchg
cmpsl
inc
mov
pop
sti
cmc
sbb
pop
xchg
test
stc
fstl
aad
test
negl
dec
addr16
jne
loop
and
in
daa
andnps
push
and
icebp
xchg
faddl
adc
sbb
xchg
ret
lcall
mov
xchg
or
stc
int
cmp
mov
cmp
or
inc
cmc
imul
lahf
mov
inc
inc
lahf
and
ljmp
and
or
inc
ss
cmp
jns
in
aam
addr16
pop
bound
loop
lock
or
out
mov
mov
mov
mov
mov
loope
xchg
jmp
fdivrs
bound
push
pop
push
or
push
adc
addr16
ss
std
fisubrs
xor
aas
test
add
mov
push
pop
scas
loopne
out
jo
leave
fdivrl
call
jecxz
ret
mov
stc
dec
or
or
mov
in
in
inc
mov
lret
in
sahf
or
das
mov
int3
sbb
mov
inc
jg
mov
add
cli
mov
sbb
inc
add
fsubrl
lret
nop
mov
ret
mov
inc
sbb
in
xlat
lahf
stos
push
daa
push
aas
jb
sbb
lret
dec
subb
cmp
xor
fwait
lahf
lds
stos
push
sbbb
dec
pop
shlb
fbld
adc
jmp
addr16
pop
mov
fcomps
je
xlat
mov
jp
dec
mov
cmp
fsubrp
sete
push
cwtl
lods
aad
push
xchg
cmpsb
test
pop
icebp
xor
and
lahf
mov
pushf
jl
int
mov
ficoml
xchg
pop
stos
xor
pop
data16
pushl
sub
idiv
mov
pop
push
fisttpll
or
or
rcrb
call
adc
adc
add
push
imul
in
cs
or
jo
sub
pushf
orb
push
jb,pn
mov
mov
out
cs
push
ds
inc
mov
sub
sub
rclb
out
lods
cmc
cmp
lea
push
or
aad
data16
mov
add
or
movsb
jno
and
dec
rorb
fldl
mov
dec
lods
xor
cld
je
jmp
mov
mov
idivl
iret
pop
roll
mov
leave
pop
push
pop
mov
inc
mov
loope
in
mov
sub
jbe
lods
dec
mov
aas
push
sti
jns
xor
xchg
iret
fs
xchg
mov
scas
mov
sbb
rorl
shlb
test
jge
rclb
add
jo
cli
mov
stos
or
lods
aad
xchg
adcb
adc
test
and
mov
pop
pop
icebp
sub
movsb
shlb
mov
cltd
mov
sub
outsb
ret
jae
outsl
aam
out
jbe
pusha
add
pop
push
pop
lods
inc
jbe
jge
aas
setge
adc
jb
push
xchg
ret
lcall
sbb
xor
hlt
sbb
dec
imul
ss
adc
adc
mov
js
scas
mov
push
cmpsb
sub
rcrl
or
pop
adc
fcoms
das
mov
push
sarb
fincstp
rcrb
pop
call
jp
push
pop
data16
cmp
daa
vpaddb
and
fwait
jmp
clc
setge
mov
test
jp
daa
stc
test
decb
or
add
push
and
mov
repnz
or
cmpsl
or
sti
pop
ds
mov
lcall
push
cmp
jp
mov
push
lock
mov
xchg
and
jl
xchg
push
mov
xchg
es
inc
lret
xchg
pop
xor
add
lock
mov
icebp
outsl
push
pusha
insl
repz
pop
nop
mov
or
pop
jmp
xchg
std
jne
mov
sbb
pop
xorl
daa
dec
enter
leave
sbbl
sub
jecxz
das
push
inc
xchg
xorl
lea
mov
pop
call
adc
imull
and
sbb
add
leave
add
test
mov
adc
xlat
cmp
cltd
popf
and
dec
inc
sub
add
push
je
addr16
mov
xlat
mov
incb
mov
jae
sbb
jnp
adc
sti
icebp
xor
mov
dec
sub
mov
rolb
sbb
inc
fucomip
adc
xchg
sar
jp
arpl
repnz
inc
cmp
mov
loope
xchg
jle
mov
add
pop
cmpsb
fistps
out
es
shr
imulb
frstpm(287
mov
cmp
push
xor
ds
aad
sub
and
in
push
cmp
std
test
imul
aaa
fs
pop
mov
jno
cmp
out
cmp
lret
mov
ja,pt
mov
repnz
adc
cmp
out
xchg
addr16
outsl
mov
dec
lret
stos
cli
sbb
imul
jge
lods
xlat
xchg
adc
les
inc
jle
cld
xlat
lcall
jle
lds
push
in
sahf
xchg
xchg
push
lcall
jno
adc
jp
clc
insl
xorl
movsl
cli
rolb
ljmp
jno
iret
mov
push
je
test
mov
mov
jecxz
cmp
xchg
cmpsl
movsl
rclb
sahf
imul
pop
cwtl
push
outsb
mulb
xor
mov
pop
ss
inc
addr16
and
add
jns
xor
add
pop
xchg
and
jp
repnz
scas
sub
ficompl
test
test
cmc
jno
jle
mov
add
cld
dec
mov
outsl
imul
and
mov
push
mov
inc
xchg
idivb
ja
xor
sti
notl
adc
scas
jno
es
lods
dec
addb
ret
cmpsl
and
dec
pop
rorb
cmp
mov
pop
das
pop
jbe
add
hlt
adc
and
pop
jbe
push
test
sbb
shl
jnp
adc
fucom
cwtl
hlt
xchg
popa
sar
arpl
dec
xor
test
data16
es
inc
cwtl
popa
rorb
xchg
pop
ljmp
arpl
scas
add
call
rcrb
jae
test
add
movsb
lcall
dec
jp
int3
addr16
aam
lods
repnz
pop
jecxz
inc
int3
sbb
loopne
out
inc
cld
in
dec
repz
pop
xchg
mov
test
mov
js
jb
orl
shrb
pop
scas
jo
out
in
cmp
inc
inc
dec
or
leave
les
inc
adc
mov
inc
arpl
or
push
mov
daa
loopne
adc
popf
adc
pop
jmp
inc
xlat
jge
adc
cmpl
call
clc
inc
and
inc
sbb
pop
sbb
lods
cmpsb
pop
test
xor
jecxz
sti
ret
andb
xor
or
push
jg
pushf
adc
int3
mov
pop
jae
inc
popa
or
sarl
xchg
jno
sarl
push
and
insb
test
push
cld
inc
lock
popf
jbe
pop
inc
mov
and
arpl
repnz
cmp
js
stc
lret
mov
pop
push
jae
and
jge
pop
dec
rolb
sub
dec
repnz
xor
sbb
jmp
xor
jo
sahf
dec
mov
xchg
imul
ss
sub
adc
sbb
lcall
push
pop
xchg
mov
add
hlt
iret
or
inc
or
sbb
mov
addr16
mov
loopne
jp
xchg
hlt
out
push
stos
sbb
lret
scas
xor
outsl
sub
scas
es
sub
jne
mov
fldl
inc
pop
popf
fs
nop
or
repnz
inc
cmovl
inc
push
je
insl
movsl
dec
subl
inc
aam
mov
xchg
pop
test
add
jg
sbb
lock
mov
add
leave
stos
fldt
lods
pop
dec
aaa
and
pop
pop
pushf
popf
mov
xchg
loop
mov
jl
insb
inc
jbe
cmp
pop
xor
loop
in
cli
out
fdivp
insb
sbb
mov
sub
popa
sub
pop
imul
mov
cmp
sub
jge
pop
sbb
push
jno
in
std
add
aad
cmp
mov
pop
lds
sarb
inc
cmpb
popa
add
cmp
mul
lahf
dec
xchg
testl
mov
mov
jne
xor
clc
into
pop
mov
push
sbbl
xchg
push
push
in
mov
jnp
xchg
pop
jo
and
xor
popa
mov
sub
jp
pop
lahf
mov
cmpsl
push
test
outsb
jno
or
fwait
bound
js
mov
jle
inc
add
cmpsb
popa
jmp
out
scas
inc
pop
cli
loop
lea
fdivs
xlat
mov
insb
orl
pop
jns
adc
jecxz
jnp
cmpsl
enter
in
pop
in
adc
fstps
xor
aas
imul
test
and
add
lods
sub
shl
pop
xor
cs
mov
arpl
stos
mov
sub
cwtl
in
cli
jecxz
sbb
jnp
aad
lods
push
jl
jns
sub
mov
test
pop
fisttps
cld
add
xchg
or
jp
push
adc
enter
movsl
aam
xchg
shrl
mov
adc
clc
imul
xor
icebp
dec
pop
dec
aad
adc
sub
mov
adc
out
mov
pop
jl
out
jge
and
std
cmp
mov
ret
jbe
mov
cli
mov
test
push
mov
sub
mov
test
push
mov
fstpl
cmpsl
or
mov
pop
cli
mov
out
sbb
movsb
mov
jg
jl
push
ljmp
jne
repnz
ss
jbe
test
rcrl
sbb
in
dec
int
fcoml
sbbb
fcmovu
cmp
cmpb
cmpsl
scas
fnstenv
pop
sarb
push
js
call
loope
add
lahf
cmpsb
arpl
dec
stos
dec
das
cmpsb
mov
sahf
call
cmc
aas
jle
or
divb
je
outsb
mov
mov
push
mov
adc
adc
les
sbb
test
mov
popa
mov
adc
cmc
mov
pop
aaa
pushf
int3
mov
fldenv
sub
dec
iret
mov
pop
and
in
lds
jne
jo
add
test
popf
repnz
pop
and
mov
stos
mov
sbbl
sub
insb
pop
sbb
lcall
and
pop
xchg
or
xor
jge
jne
push
inc
lret
mov
insb
mov
xor
cmp
hlt
loopne
imull
jle
xchg
cli
inc
pop
cmpsl
lods
or
dec
test
pop
xchg
int3
loopne
dec
push
mov
sbb
aas
dec
enter
mov
or
and
add
call
mov
rcll
sub
fidivrs
int
fidivs
pop
jecxz
lock
fdivl
adc
jecxz
mov
je
jp
cmp
xchg
js
push
mov
push
sbb
mov
nop
xchg
inc
inc
das
scas
int
sub
jmp
adcl
dec
jbe
aas
xor
cld
clc
test
fcomip
dec
lea
fldcw
inc
out
mov
movsl
ret
iret
or
aaa
push
pop
stos
rclb
mov
jle
enter
xor
ret
mov
dec
fcompl
repz
pop
je
mov
mov
jmp
test
sub
jge
adc
arpl
popa
inc
into
or
lret
jae
lret
cli
or
dec
cmp
and
scas
xlat
psraw
cltd
out
adc
inc
xlat
jmp
subps
cmp
dec
push
jmp
pop
lret
adc
xchg
cmp
lock
inc
jg
adc
loop
imull
push
inc
inc
lret
adc
mov
xchg
jmp
add
loop
test
mov
jne
sbb
push
sub
mov
movsl
add
sbb
xor
push
daa
mov
popa
into
ljmp
mov
mov
aad
scas
push
ss
pop
rcll
sub
cltd
pop
push
mov
jns
rcr
popa
gs
jae
adc
xchg
cld
js
dec
add
mov
or
push
xchg
jg
mov
sbb
mov
dec
punpckhbw
cmp
stc
fsubs
jnp
bound
xchg
push
xor
pushl
aas
lret
sarl
test
sub
dec
jb
cmp
aas
xor
iret
mov
sub
sbb
fists
add
scas
lahf
out
or
sbb
cmp
sbb
shll
int3
or
enter
mov
cltd
stc
lcall
repnz
cmp
ss
popl
test
cmpsl
scas
and
imull
cmp
cmpsb
jl
jp
inc
cmp
adc
sbb
or
std
push
lret
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
mov
movl
cmp
movl
jne
movl
adcl
pushl
andl
pushl
pushl
orl
call
xor
mov
or
mov
mov
mov
sub
movl
lea
mov
adc
lea
notl
mov
mov
mov
sub
and
mov
mov
mov
and
mov
mov
xor
mov
add
movl
mov
movl
mov
movl
cmp
movl
jne
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
sbb
mov
andl
mov
movzwl
add
xor
add
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
and
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
orl
add
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jb
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
mov
mov
mov
xor
add
mov
sub
add
mov
notl
mov
mov
neg
mov
sbbl
mov
sbb
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
inc
mov
subl
xor
xor
andl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
add
mov
subl
xor
orl
xor
add
movl
lea
mov
mov
mov
cmp
ja
or
mov
add
xor
lea
addl
mov
adc
mov
inc
xor
lea
xor
add
mov
or
mov
mov
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
decl
mov
adc
movl
adc
mov
mov
sbb
mov
xor
sbbl
add
cmp
movl
je
mov
movl
mov
xor
orl
xor
subl
add
sbbl
add
adc
xor
sbbl
xor
mov
mov
or
mov
xor
mov
add
adc
xor
xor
movl
mov
movl
mov
movl
cmp
jne
mov
cmp
movl
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
mov
sbbl
xor
sbb
mov
add
not
movzwl
mov
movb
sub
lea
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
sub
mov
xor
adcl
sub
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
inc
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
sub
mov
xorl
push
andl
mov
xor
mov
push
add
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
sbb
mov
decl
xor
add
movl
jmp
mov
jmp
ud1
mov
std
scas
xor
pop
add
add
bound
shlb
test
xlat
push
mov
outsl
cli
les
mov
stos
lock
test
sbb
sarb
sbb
fbld
dec
into
int
scas
packuswb
mov
icebp
mov
jb
mov
pop
sbb
add
js
out
inc
daa
fmul
andb
pop
adc
sub
in
cs
mov
push
lds
add
sub
push
inc
pop
xchg
out
or
mov
popa
mov
mov
jge
loop
xchg
mov
push
pushf
push
push
in
or
pop
mov
nop
arpl
cmp
cmp
mov
lock
out
roll
imul
ret
rcrb
out
mov
add
dec
adc
and
js
fs
adc
fcompl
adc
push
xor
add
les
xor
xchg
pop
sub
insb
leave
out
xor
ret
adc
dec
push
lods
xchg
addr16
sub
mov
push
scas
jp
mov
inc
inc
xor
stc
outsb
sub
ljmp
mov
rclb
int
lea
ja
mov
popf
inc
pop
adc
dec
ss
aaa
je
sbb
aam
mov
mov
movsb
insl
js
lcall
repnz
xchg
dec
mov
xchg
cmpsl
sbb
xor
sub
add
and
sar
mov
sub
and
push
adc
scas
adc
or
pop
ljmp
jns
scas
cs
lahf
int
mov
jmp
insl
dec
xor
stc
jnp
and
mov
sub
lock
lock
lcall
loopne
cltd
outsb
movb
dec
cs
inc
popf
iret
dec
in
arpl
and
xchg
mov
sbb
jmp
in
adc
sub
sti
loope
inc
add
stos
iret
mov
jnp
add
or
es
cmp
ja
mov
jecxz
ljmp
pop
cmp
push
dec
aaa
mov
add
in
out
adc
sahf
ret
or
in
sahf
std
scas
inc
jmp
imull
sahf
outsb
adc
mov
es
pop
xor
xchg
imul
mov
lret
dec
fistps
dec
fbld
xchg
xchg
shll
lea
sub
fcompl
mov
adc
sub
pop
sbb
and
mov
xchg
lret
sbb
scas
insl
sbb
sarb
aad
mov
or
arpl
imul
dec
out
mov
imul
loopne
xchg
in
pop
pop
test
enter
addb
enter
fidivrl
or
fmull
cwtl
scas
push
movsl
inc
lods
sbb
lcall
jmp
inc
aad
jo
sub
and
fbld
jl
incl
mov
sub
cmp
sub
jmp
mov
push
iret
or
jnp
aam
loop
int
repz
inc
psrld
mov
addb
mov
icebp
sub
lret
pop
jb
mov
pop
movsb
xchg
adc
xor
and
out
push
inc
mov
inc
inc
pop
outsb
add
test
pop
mov
xlat
outsb
adc
in
dec
adc
adc
jb
pop
xchg
push
push
mov
mov
cmp
dec
ss
pop
loop
xchg
ror
pusha
loope
push
fists
push
jno
push
fistl
in
xchg
cmp
inc
mov
fcomps
pop
loopne
in
fisubl
xchg
pop
cmp
cltd
push
jg
ds
jne
gs
push
adc
and
out
scas
roll
jmp
dec
repz
mov
sbb
cmp
outsb
mov
pop
xorl
call
outsl
xchg
xchg
out
imul
push
mov
push
inc
dec
insb
sbb
loopne
push
bound
xchg
pushf
andb
clc
push
es
inc
iret
aad
cmc
rorl
inc
int3
orb
add
lcall
mov
repz
xor
data16
mov
mov
jbe
xor
sahf
lret
pop
cwtl
sub
jbe
xor
iret
add
push
dec
lcall
adc
mov
inc
xlat
pop
les
std
cmp
sbb
imul
or
or
repnz
xchg
sub
mov
pusha
iret
movsl
dec
cmc
mov
sbb
pop
push
mov
push
mov
sub
and
mov
notl
and
cltd
mov
xor
dec
icebp
aaa
clc
mov
fnstenv
jg
xchg
mov
pop
loopne
ficompl
inc
pop
xchg
jge
or
clc
mov
sahf
fnstenv
scas
cmp
lcall
test
insb
shlb
jnp
add
ret
ds
fcompl
push
cmpsl
ss
jle
mov
xchg
push
ret
cld
std
fidivrs
dec
iret
andl
inc
sbb
lea
lret
daa
loop
rcrl
into
lea
sub
xor
mov
and
cmp
and
pusha
clc
and
arpl
jg
scas
pop
lock
xchg
mov
jge
std
mov
loopne
inc
popa
and
and
out
enter
jg
nop
inc
cmp
or
popa
push
pushf
rorl
into
dec
cmpsl
inc
popa
lcall
push
jmp
cmc
stos
js
mov
fnsave
push
mov
dec
sub
sub
mov
add
lods
xchg
pop
outsw
adc
push
jbe,pn
sub
lahf
inc
out
sub
and
mov
loope
mov
insl
dec
pop
mov
ret
fstpt
lods
pusha
movsb
cmc
lock
dec
pop
shl
bound
and
sub
xchg
sbb
pop
or
jle
repnz
sub
nop
xchg
jnp
mov
lods
pop
insb
ret
jb
pop
adc
sub
mov
imul
mov
sub
imulb
xchg
mov
cmpsb
or
lods
test
loopne
mov
lcall
ss
lcall
xor
jmp
pop
pop
and
call
xor
out
mov
mov
sarb
adc
addb
mov
rcll
in
adc
add
fnstenv
pusha
push
add
mov
daa
mov
mov
sti
testb
and
jo
popf
xchg
mov
lret
out
int3
stos
sbb
insb
mov
cmp
jmp
lods
or
dec
test
imul
pop
jecxz
pushf
data16
call
data16
mov
xchg
push
ljmp
xchg
int
push
outsb
repnz
insb
cmp
js
das
filds
imul
xchg
arpl
jp
shll
xchg
int
mov
cmpsl
jne
lcall
sbb
sbb
rorb
mov
aaa
icebp
add
mov
mov
mulb
mov
pushf
lock
bound
ljmp
push
les
push
pushf
adc
iret
js
cmp
leave
shr
push
pop
shll
and
shll
mov
xor
or
mov
arpl
dec
mov
jge
pop
push
clc
iret
test
test
xor
jae
fdivs
lcall
loope
xor
cmp
mov
push
xor
and
mov
pop
es
pop
or
out
iret
jp
dec
adc
pop
push
shrd
and
pop
and
cmp
adc
hlt
enter
outsl
cltd
test
mov
adc
jo
cmp
add
leave
or
ss
push
push
pop
loope
inc
adc
shl
neg
mov
outsb
or
clc
push
jno
cld
dec
dec
into
and
out
das
aaa
pop
xor
jecxz
fisubrl
in
adc
xchg
insl
mov
sbb
add
xorl
mov
out
out
cmp
pop
jp
sub
cltd
aad
xchg
or
lahf
lcall
pop
and
jnp
mov
loope
test
xchg
xchg
arpl
mov
bound
std
xor
ret
scas
dec
add
jl
aad
add
ljmp
adc
push
xchg
sub
mov
jmp
jb
cmp
mov
add
fs
fstl
lret
cmc
adc
pop
loopne
std
les
mov
mov
movsl
pop
lods
sar
or
in
fistps
adc
out
mov
cltd
inc
xor
repnz
inc
loope
and
cmpb
jb
pop
jns
mov
push
fnstenv
and
mov
hlt
sub
jbe
outsl
cmp
les
test
xchg
fimull
outsl
into
sbb
ret
dec
mov
adc
cmpsb
cmp
lcall
mov
and
aaa
and
nop
in
xchg
push
xor
cmp
jbe
popa
gs
pop
dec
insb
or
pusha
movsb
jnp
data16
mov
arpl
jnp
aaa
push
mov
mov
or
ss
adc
hlt
pop
aaa
jmp
pop
out
xor
mov
outsb
enter
push
push
push
insl
test
loop
adc
cltd
xchg
mov
iret
and
inc
xchg
std
icebp
js
sarb
insb
dec
add
imul
xchg
scas
pushf
mov
mov
mov
push
bound
push
ss
rclb
push
push
loope
fcomps
mov
stos
pop
iret
incl
lock
icebp
test
sbb
test
xor
cmp
jbe
test
sbb
push
pop
dec
xor
fldenv
push
or
mov
pop
jno
mov
add
pop
jb
pop
lret
add
jp
push
roll
pusha
jp
xor
dec
jbe
jmp
inc
push
iret
out
xor
and
mov
jle
and
mov
and
cmpl
push
negl
in
push
push
push
out
inc
cmpsl
loop
and
jnp
daa
adc
out
mov
jp
outsl
and
push
outsl
and
cmp
jns
or
dec
test
stc
mov
adc
loope
add
jnp
stos
aam
lods
mov
mov
inc
or
shlb
repnz
dec
inc
ret
out
repnz
ljmp
xchg
stos
mov
sbb
mov
cltd
fisubl
add
es
adc
mov
sbb
imul
dec
xchg
or
inc
test
dec
pushf
inc
cs
aaa
add
xor
out
shlb
shl
push
dec
iret
adc
lret
cmp
jl
cmpsb
mov
jae
jbe
add
add
push
push
repnz
jg
rcr
and
add
popa
or
jge
fnstenv
loop
loope
xor
repz
loopne
lret
rolb
aaa
mov
ret
lret
ret
test
cmp
aam
adc
fnsave
ds
in
test
popa
mov
out
test
movsb
nop
pop
mov
xchg
mov
lret
les
mov
fsubs
and
push
sub
aad
mov
inc
mov
inc
and
jmp
fs
incb
shr
arpl
wrmsr
orb
or
add
jo
push
out
call
divb
lock
pop
mov
ja
xor
aas
sbb
gs
nop
sbb
sbb
fsubrl
sub
sbb
inc
cmpb
loopne
sti
xor
nop
lahf
ja
lods
into
sbbl
push
or
mov
cmpsb
push
or
mov
loop
sub
xor
addr16
mov
dec
aad
jmp
sub
nop
mov
subb
loopne
or
pop
inc
popl
bound
sbb
out
cmpsb
fbstp
enter
es
xchg
std
sbb
jp
cmp
out
xchg
add
shrl
mov
mov
push
cmp
popa
loope
push
out
add
hlt
pop
lea
ja
or
popf
add
mov
aad
cmc
into
xchg
pop
data16
jnp
jnp
js
repz
fwait
imul
mov
aaa
daa
or
and
pop
fadds
mov
inc
orl
repnz
or
xorl
push
roll
insb
insb
push
mov
pusha
pop
mov
pop
sub
jae
mov
sub
mulb
outsb
mov
insl
lods
shr
lret
dec
xchg
faddp
repnz
adc
mov
jno
sti
xor
pop
movb
scas
or
pop
dec
xlat
sti
mov
fcomi
leave
int
dec
push
cmp
in
lahf
es
add
loope
ret
and
mov
fldenv
out
test
adc
call
xor
bnd
mov
jmp
cli
loop
cs
xchg
and
pop
sarb
adc
in
inc
mov
test
daa
lcall
inc
jo
mov
inc
dec
stos
sbb
inc
mov
cmp
enter
jmp
shrl
inc
hlt
call
inc
inc
lods
mov
inc
add
hlt
mov
outsl
pop
clc
adc
in
in
mov
inc
mov
cmpsl
sbb
xor
or
aad
mov
jo
jle
ficompl
sti
stos
push
dec
inc
xor
gs
add
sub
test
loop
xchg
and
lods
outsb
mov
push
stc
xchg
ror
jae
mov
or
and
repz
aam
in
popw
roll
xor
pop
jnp
mov
push
mov
xchg
ljmp
mov
fldenv
add
out
lret
and
mov
pusha
inc
cmc
and
addr16
adc
scas
mov
xchg
mov
inc
sarl
pop
stos
orb
add
out
rclb
lret
sbb
rorl
xchg
mov
and
inc
adc
jmp
push
aas
mov
ljmp
xchg
sbb
sbb
daa
lahf
in
sti
cmpsb
ret
push
in
pop
mov
mov
cs
jb
adc
gs
lcall
je
adc
adc
sbb
lret
push
add
mov
add
dec
out
movsb
popa
push
cmpsb
je
cmp
xchg
jle
sbb
pop
out
xor
lock
js
daa
outsb
push
rcll
and
xchg
in
inc
orl
lea
pop
cmp
test
pop
lret
adc
addl
mov
outsl
push
xor
xor
mov
mov
xor
jmp
insl
stos
enter
lock
daa
in
inc
mov
lret
cltd
sub
ljmp
roll
sahf
outsb
rcrb
xchg
xchg
pop
cmpsl
shr
addr16
xchg
mov
adc
imul
jecxz
jae
stc
scas
fdivrl
ja
mov
inc
loope
xchg
std
scas
pop
xlat
out
mov
and
pop
divl
sbb
int3
mov
push
call
cmp
jns
adc
js
scas
jns
mov
ss
mov
sub
inc
sbb
push
mov
lahf
leave
mov
adc
in
mov
dec
imul
loope
mov
icebp
pusha
ret
addr16
aam
ss
jb
lret
mov
dec
adc
int3
mov
cmp
xor
mov
adcb
mov
or
out
adc
dec
sbb
sbb
cmpsl
cmp
sub
push
mov
ss
popa
ja
pop
out
inc
mov
cmpsb
mov
leave
arpl
mov
mov
leave
add
or
and
cmp
push
imul
and
fldcw
mov
mov
mov
test
lret
push
cld
dec
pop
repz
dec
mov
movsl
icebp
sbb
aas
or
pop
es
sarb
sub
outsb
cmp
cwtl
scas
faddl
adc
push
fcoms
sub
enter
sbb
dec
mov
js
in
mov
lods
jp
outsb
xchg
loopne
adc
inc
add
in
bound
adc
xchg
mov
lods
jo
frstor
in
cmpsb
and
aad
sbb
ficoml
scas
and
rorl
sub
mov
cmp
xchg
fs
xchg
lds
mov
fwait
aaa
or
push
sub
or
insl
push
mov
orb
aam
jl
sbb
fwait
and
les
movsb
mov
fldl
in
adc
sbb
jne
outsb
dec
xor
test
lret
jb
adc
cld
xchg
movsb
dec
xchg
ds
sti
mov
inc
xchg
out
aad
adcl
mov
xlat
lock
andb
icebp
inc
xchg
sti
xor
movsl
sub
out
movsb
int3
clc
ficoml
or
xchg
jnp
ja
or
lock
mov
bound
ja
jae
ret
hlt
inc
aas
or
stos
sahf
ds
rclb
mov
lock
push
movsl
dec
in
jp
and
lret
add
out
jg
sbb
or
pop
and
call
out
sbb
sub
cmp
cwtl
pop
lock
mov
jo
addr16
scas
aad
mov
push
add
in
mov
dec
cmp
lret
jl
loopne
jns
jns
xchg
movsb
mov
or
add
dec
jne
cmp
xchg
xchg
jno
outsb
push
insb
fisttpll
inc
loope
mov
mov
jae
mov
sub
pusha
jne
adc
jmp
out
cmc
aad
daa
addr16
pushf
xchg
pop
xlat
fstl
fsubrl
ret
aas
es
bound
jmp
xchg
mov
pop
iret
cmp
xor
add
repnz
push
cmp
add
mov
cmp
xchg
sti
sar
fadds
adc
mov
pop
fcomps
movsl
loopne
sub
clc
imul
mov
push
mov
jbe
imul
add
js
loope
jo
cmp
cmp
in
xchg
xchg
neg
in
xchg
jecxz
imul
jnp
loop
test
imul
inc
mov
fsubp
and
mov
jl
sub
call
lods
cmp
loopne
pop
add
adc
sub
mov
aam
mov
lahf
ret
clc
in
cmp
sarl
mov
and
in
dec
dec
mov
dec
cmove
ret
nop
jno
aam
or
xor
mov
addr16
rcrb
pushf
hlt
mov
lock
xlat
ja
xchg
js
push
inc
jae
jae
mov
repz
sub
add
mull
pop
xchg
cli
mov
jg
cmp
xor
push
mov
inc
int
xchg
fidivl
sub
les
lret
pushf
mov
dec
add
push
fwait
push
mov
aaa
dec
out
repz
xchg
mov
xchg
and
int3
roll
incb
jle
xchg
insb
test
sbb
cli
xchg
cmp
cmc
inc
cmp
loop
cmpsb
insl
pop
push
add
jl
int3
dec
jb
mov
out
leave
dec
idivl
icebp
outsl
outsb
mov
adc
data16
in
add
mov
sbb
or
gs
push
loope
iret
shll
pop
mov
cli
lahf
clc
sarb
scas
aas
mov
lret
mov
lret
pop
pop
jb
sbb
shlb
setno
inc
dec
and
and
stos
jg
and
and
ret
and
idivb
xchg
mov
push
inc
imul
pop
mov
je
mov
cmp
nop
add
pop
nop
mov
repnz
lods
lods
push
mov
inc
lcall
cmp
pop
sub
xchg
or
in
lock
notb
or
fcoml
fs
mov
test
mov
cmc
popa
mov
and
lfs
dec
mov
cld
push
push
popf
subb
lea
jge
adcb
inc
xchg
dec
pop
loopne
mov
in
add
fisttps
mov
inc
popa
arpl
cmpsl
jmp
shrb
in
js
jle
cmp
add
mov
pop
outsb
cmpsl
fwait
jmp
mov
das
xor
and
add
jne
cs
sbb
jo
inc
clc
sahf
xchg
jae
sub
add
sub
sub
test
loop
lods
aad
enter
push
mov
popf
and
pop
icebp
das
dec
orl
push
call
loopne
mov
cmp
imul
jl
pop
shrb
and
shrb
mov
jbe
pop
add
insb
and
jg
adc
push
sar
pop
in
into
data16
jge
mov
scas
loope
jb
xor
pop
js
lahf
fldt
out
jge
or
dec
jno
push
add
sbb
je
out
cmp
cmc
test
push
cmp
inc
push
fcmovb
inc
cmp
ret
adc
leave
insb
add
iret
mov
mov
scas
jb
rol
stc
dec
imulb
push
mov
jp
push
ja
sub
js
movsl
adc
xchg
ret
xor
and
lock
push
or
lret
lahf
jp
subb
mov
and
pusha
jg
rcrl
push
popf
add
fcoml
and
cwtl
inc
enter
jle
dec
cmp
stos
fwait
stc
sub
xchg
sti
push
adc
pop
dec
lahf
push
leave
out
mov
and
jb
ja
xchg
sarl
xor
push
repz
sbb
lahf
mov
cs
xchg
sub
ret
out
pop
out
enter
fs
cmp
cmp
fiaddl
mov
stos
push
adcb
ja
xorl
pop
xchg
xor
ret
and
outsl
sub
stc
daa
inc
and
add
cmp
shrl
pop
ret
test
scas
pop
or
push
push
test
pop
xchg
mov
mov
mov
sarb
arpl
pop
mov
dec
push
js
sub
dec
inc
or
xor
xchg
test
inc
sbb
mov
add
or
and
or
jb
repnz
pop
push
cmp
xlat
xchg
and
lods
out
and
cmp
ret
push
pop
sub
popa
cmp
in
lret
sub
frstor
cmpsb
push
insl
sahf
pusha
cmp
adc
ficomps
pop
jg
add
xchg
sub
ss
ret
out
mov
idivl
pop
push
inc
pop
ret
xchg
jmp
xor
stos
xor
lret
out
insl
pop
and
jo
xor
sbb
xchg
cmp
sub
aad
pop
add
scas
imul
push
adc
in
mov
jl
sub
inc
lahf
leave
shlb
xchg
lods
cmp
dec
pop
ljmp
addb
mov
jge
insb
mull
fsqrt
inc
pusha
adc
lahf
lret
popf
loop
mov
xor
shrb
cmovae
fimuls
shrl
rcll
lret
mov
movsl
aad
push
xchg
inc
push
mov
out
xchg
jl
je
sub
xor
adc
mov
lret
mov
cmp
gs
cmp
mov
push
inc
and
in
mov
xchg
sbb
push
inc
inc
test
sbb
jge
dec
mov
mov
xor
sub
lock
mov
ljmp
inc
into
pop
stc
fsub
add
cltd
xorl
lahf
pop
push
xor
mov
xchg
inc
jp
pop
in
jb
testl
add
mov
cs
sub
or
inc
leave
inc
test
es
outsl
pop
enter
push
popf
lret
movsb
mov
pop
lods
into
xlat
scas
inc
imul
dec
rcll
ret
dec
xchg
and
sub
negb
dec
and
mov
pusha
int3
into
dec
adc
add
adc
xor
pop
mov
ja
and
sub
enter
mov
sahf
mov
xchg
dec
testl
cld
ret
sbb
insb
fwait
and
jae
repz
loope
mov
jno
in
mov
xchg
jo
jns
addr16
gs
dec
insl
mov
pop
shll
fsubs
and
xlat
lea
add
inc
push
sar
mov
test
xchg
xlat
sub
cmp
sar
jae
les
fdivs
lcall
add
loopne
jge
int
mov
fldl
and
sbb
stos
xchg
loopne
mov
ds
xchg
inc
pushf
int3
cmp
push
aad
push
iret
mov
pop
lea
jl
mov
inc
sbb
cmpsl
int3
insb
xchg
add
dec
or
int3
cltd
adc
xchg
xor
imul
dec
adc
mov
mov
jae
push
fcompl
jl
cmp
push
sub
add
cmp
gs
xchg
pusha
xlat
mov
cmp
into
sub
je
xor
lock
mov
fnstsw
adc
mov
xchg
dec
push
addb
mov
pop
mov
pop
mov
cltd
outsl
fidivrs
mov
inc
cmp
lret
mov
inc
jno
jns
mov
psubb
inc
dec
inc
dec
xchg
adcl
inc
ljmp
movl
enter
outsb
mov
pop
lds
push
in
xchg
dec
ljmp
and
cltd
pop
sub
clc
fmull
push
mov
test
push
sub
fwait
sahf
gs
sahf
xor
movsb
outsl
jnp
xchg
into
fisttpl
dec
fists
shll
sub
shll
jo
mov
pop
push
cmp
addr16
test
movsl
insb
pusha
mov
lods
mov
ja
adc
fdivrl
xor
mov
cmpsb
out
dec
cmp
xchg
cmpsl
push
xchg
in
mov
aam
and
xchg
test
pop
mov
adc
pushf
test
sub
lret
dec
mov
cs
outsl
sbbl
ja
mov
sbb
cmp
jbe
mov
daa
icebp
lret
test
jecxz
rclb
scas
add
pop
push
pop
sahf
sahf
push
sti
sbb
sub
adcl
mov
in
scas
adc
inc
and
mov
add
ljmp
jbe
and
xchg
stos
xor
fidivrl
call
scas
mov
mov
jmp
das
mov
sti
pushf
jg
in
mov
jbe
scas
mov
dec
xor
pop
mulb
jne
mov
cld
test
mov
xor
das
xor
fwait
lds
add
into
popaw
add
and
xorl
ds
arpl
leave
pusha
sbb
push
push
xor
mul
push
orb
xor
shll
int
loope
or
and
adc
shrl
into
sub
mov
sar
fcmove
lcall
inc
xchg
fidivl
inc
push
mov
pusha
push
fisubrs
pop
out
and
popl
sbb
inc
ss
lret
lock
ss
mov
shl
outsb
stc
insb
add
jb
pop
push
mov
adc
movd
pop
mov
mov
test
enter
icebp
and
in
mov
push
out
cs
push
pop
dec
ret
lock
jge
sbb
push
pop
push
lds
xor
pop
das
lea
out
sub
dec
fadds
mov
movb
mov
shlb
xchg
adc
fistl
scas
xchg
aad
fcompl
dec
fadd
jo
imulb
adc
cmp
add
sub
add
sub
cli
push
roll
cltd
pop
aad
pop
mov
cmpsl
push
xchg
cltd
mov
lret
clc
xor
push
and
sub
pop
mov
xor
mov
fwait
cwtl
leave
daa
inc
cmpsb
cltd
xlat
outsb
sti
repnz
mov
adc
xlat
mov
neg
mov
aad
push
roll
loopne
out
mov
mov
jg
mov
xchg
xor
clc
movsl
adc
repnz
jae
mov
dec
mov
cli
mov
test
stos
ds
repz
loopne
lods
into
mov
arpl
jle
cmp
aad
dec
and
pop
inc
pusha
sub
xor
pop
dec
shlb
inc
int3
push
pop
call
stos
and
shll
loopne
outsb
sub
xor
push
ret
cmp
aaa
xor
fisttpl
cld
adc
das
imul
or
fimull
mov
inc
sbb
push
sub
or
dec
pusha
or
jg
dec
call
pop
lock
fsubrs
add
out
inc
sub
xchg
xor
sbbb
jg
adc
cmp
sahf
ret
popa
int3
sahf
push
dec
cmp
adc
test
shr
fistpll
push
icebp
in
jle
bound
es
adc
adc
stc
mov
fiadds
and
das
adc
dec
sti
pusha
jno
rorl
sahf
insl
iret
mov
dec
sub
dec
cmpsl
xchg
jmp
clc
xchg
sbbl
cmpsb
or
or
jmp
in
push
push
test
sub
cmc
aas
or
in
mov
dec
mov
push
loope
add
jo
lcall
sub
fstl
out
add
repnz
add
adc
cs
cld
xchg
cmp
cmpsl
add
jne
ss
rol
and
fistpl
jp
push
adc
cmp
enter
xchg
insl
sarb
es
arpl
ret
fistps
adc
dec
lret
cmp
mov
andb
mov
into
in
push
xchg
movups
jmp
aam
cmp
mov
fldenv
sub
push
mov
xchg
pop
dec
sbb
lods
rolb
mov
cmc
mov
call
adc
lods
shl
sbb
mov
subl
add
imul
lods
cmp
cmpsb
dec
cltd
mov
add
sub
dec
sub
ret
xchg
sarl
fs
ret
sar
jle
push
mov
outsl
or
mov
dec
enter
sub
loop
push
add
enter
inc
xchg
fadds
push
push
mov
xlat
xchg
aaa
aam
lcall
adc
cmpsl
inc
and
cs
push
leave
sbb
and
sub
fsubrp
hlt
jp
daa
pop
je
or
dec
xchg
jne
xor
and
xor
pop
push
orb
dec
pop
into
cwtl
cmpps
int
mov
rcrl
mov
hlt
andb
leave
in
mov
add
test
fwait
mov
daa
mov
push
rcl
jmp
jecxz
lea
lods
xchg
push
icebp
inc
andb
js
rcrb
pop
sub
cmpsb
into
dec
xchg
push
movsl
xor
nop
xor
fidivl
jae
ret
notb
xchg
mov
loope
add
jg
fsubs
jno
adc
add
mov
mov
movsb
adc
stos
lock
dec
xchg
cmp
pop
test
mov
dec
xlat
sbb
scas
push
das
out
test
or
inc
add
inc
add
dec
xchg
add
add
add
mov
addl
add
andl
movzwl
notl
mov
and
mov
movzwl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
mov
add
mov
xor
addl
add
mov
or
mov
xor
add
mov
movl
movl
movl
movl
movzwl
mov
mov
jmp
mov
add
mov
sbb
mov
orl
xor
xor
adcl
sub
adc
sub
movl
xor
mov
and
mov
or
mov
lea
mov
orl
mov
movzbl
xor
mov
lea
not
mov
xor
or
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
pushl
call
cmpl
jb
orl
mov
sbbl
lea
and
mov
and
mov
mov
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
adcl
lea
mov
not
mov
mov
and
mov
mov
sbbl
lea
orl
mov
mov
xorl
xor
sbbl
add
jne
jmp
xor
add
mov
sub
and
mov
subl
mov
xor
orl
xor
sub
sub
xor
mov
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
add
adc
mov
mov
mov
sbb
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
rcrl
imul
sub
popa
bound
bound
gs
or
sub
mov
adc
pop
push
mov
mov
call
mov
cld
mov
lds
ja
and
loope
sbb
inc
adcb
inc
into
shrb
je
hlt
mov
dec
sub
es
repnz
cmp
fcoms
pop
daa
push
jo
mov
jo
sar
or
enter
push
std
push
mov
xor
cs
ret
or
rcl
cmp
mov
sub
mov
inc
mov
sarl
lahf
repnz
inc
les
lret
mov
ja
mov
mov
imul
pop
cld
mov
rorb
orb
loop
lcall
add
scas
rcr
mov
jl
push
leave
mov
pop
mov
xchg
dec
push
outsl
pop
cltd
and
push
push
push
mov
jne
lcall
ss
repz
pop
pop
adc
cmp
stc
test
cld
cmp
fs
fnstenv
xor
jo
fmul
cmp
pop
inc
jge
or
enter
jae
fcmovnb
sub
jmp
movsl
fstpt
hlt
ljmp
xchg
leave
push
push
adc
jo
jg
pop
stos
mov
or
push
stos
aas
sbb
mov
outsl
in
mov
cmpsl
dec
inc
sbb
loopne
shrb
popf
cwtl
and
fisubs
push
mov
aaa
xorl
jl
sub
xor
push
test
leave
fucomi
xchg
lret
push
idivb
movsb
pusha
bound
push
sub
xchg
inc
inc
cs
test
xchg
fwait
xchg
aad
test
mov
bound
jl
lret
jns
mov
cmp
xchg
sbb
fidivrl
dec
test
popf
push
mov
inc
mov
loop
lcall
jl
dec
in
shlb
aaa
xchg
sub
fstpt
out
test
mov
and
loopne
das
nop
adc
inc
int
push
inc
hlt
dec
std
in
push
in
jecxz
not
push
cmp
ss
pushf
bnd
jb
or
cltd
cmpsb
push
nop
push
movsb
pop
jbe
push
out
cltd
gs
mov
cwtl
fcoml
movsb
xor
pop
or
imul
std
mov
jl
lret
mov
cmpsl
fwait
mov
je
out
cltd
pop
dec
popa
push
cmp
xchg
ds
sub
push
mov
push
movsl
lcall
push
cltd
out
ret
in
stos
and
jl
cld
js
cmp
clc
mov
shll
or
outsl
jle
cld
pop
stos
rorb
out
jmp
inc
xor
jnp
rcr
and
icebp
pop
xchg
sahf
pop
xlat
mov
fidivrl
pop
lret
jnp
ljmp
mov
test
mov
mov
jo
add
mov
stos
sbb
loopne
in
cwtl
bound
xor
iret
int
in
sarl
lcall
xor
dec
xchg
repnz
loope
hlt
adc
icebp
int3
and
js
std
push
cmp
int3
repnz
lret
cmp
jb
aam
adc
loope
stos
stc
jo
lret
and
leave
ror
push
sbb
dec
adc
jp
push
mov
add
mov
xor
movb
in
jl
adc
push
loopne
mov
test
stos
mov
das
push
mov
pop
js
imul
cmp
add
in
out
movsb
lds
pop
clc
add
loope
mov
lahf
lods
xchg
sbb
inc
sbb
cmp
adc
mov
das
push
lahf
int3
xor
test
leave
out
fistps
movsl
push
push
cli
add
mov
pop
lods
iret
clc
movsl
mov
jmp
push
sub
inc
outsl
mov
mov
shl
je
mov
in
aas
ljmp
mov
sti
cld
out
inc
pop
lods
sti
outsl
ja
les
cltd
in
stos
das
add
fcmovnb
cld
mov
push
mov
mov
pop
out
in
push
shll
lods
aam
gs
aas
fwait
add
dec
popa
add
outsl
aaa
jae
movsl
jp
mov
subl
or
inc
adc
dec
and
lds
shlb
mov
gs
mov
lods
sub
fists
arpl
mov
or
das
jmp
mov
repz
leave
daa
ret
mov
sbb
mov
xor
data16
hlt
jns
sti
sbb
arpl
ds
out
push
inc
xor
xor
insb
push
jg
inc
or
pop
lods
icebp
gs
sub
cld
push
es
sbb
inc
or
mov
aas
movsb
and
push
rol
mov
xchg
inc
addr16
std
sarb
push
jae
ljmp
imul
pop
dec
adc
and
ds
mov
repz
jge
les
mov
aad
es
mov
sbb
inc
sbb
push
cmp
mov
or
sub
jne
jl
dec
scas
sti
movl
or
pusha
jp
sub
xor
pop
pop
scas
out
jno
mov
push
cmp
xchg
mov
pop
mov
rcrb
inc
push
jmp
mov
incb
bound
dec
jmp
es
popf
sub
movsl
je
mov
inc
or
adc
mov
pusha
cmp
cli
pop
out
aaa
jno
xor
xor
inc
mov
in
pop
sub
ljmpw
cmpsl
pop
jle
stc
ss
enter
imul
mov
push
lret
movsl
xchg
xchg
add
xor
imull
out
mov
add
push
push
push
and
sbb
es
sub
subb
cmp
btc
repnz
mov
jbe
fs
aam
xchg
addb
test
mull
aad
xor
mov
inc
call
out
sub
xor
add
cli
push
mov
add
push
int
leave
dec
lock
and
in
enter
popa
ss
repz
cwtl
leave
in
push
mov
out
es
ljmp
jmp
faddl
jmp
stos
mov
pop
pop
mov
jno
or
or
cld
les
in
push
sbb
imul
inc
js
and
insl
push
push
push
mov
mov
pop
sarb
ret
pop
inc
scas
cld
pop
faddl
mov
movsb
mov
lods
xchg
mov
out
lods
dec
push
test
push
mov
addb
push
mov
popf
jae
and
out
bound
ja
sub
test
roll
notl
data16
mov
dec
adc
in
sbb
inc
push
loop
out
mov
xchg
int3
adc
sbb
and
sbb
add
xor
adc
mov
jl
pop
std
fs
in
cmp
mov
pusha
xor
shll
xor
movsb
dec
mov
push
stos
daa
stc
je
cmp
xor
das
mov
es
test
xor
loop
mov
mov
loopne
cltd
fldcw
scas
mov
dec
mov
mov
lret
jno
stos
push
mov
xor
or
xchg
xor
push
lret
frstor
jle
ss
imul
rorb
movsl
popf
cmp
and
sub
mov
fnstenv
lahf
cmp
out
push
push
dec
arpl
mov
fwait
ljmp
mov
jg
gs
gs
cmc
pop
std
cmp
xor
jecxz
outsl
cvtpi2ps
push
mov
and
ja
or
jb
mov
test
das
xchg
inc
fdiv
fs
inc
scas
or
jno
inc
hlt
cmpsl
push
inc
add
sarl
pop
fwait
jecxz
adcb
inc
jns
stc
dec
fstpt
sbb
jmp
fisttpll
decl
lods
or
imul
mov
scas
jge
xorb
int
cmp
jmp
push
in
das
jbe
stos
xor
cs
push
int
lock
lahf
adc
xor
mov
dec
add
pusha
xchg
iret
les
jne
jg
or
lcall
adc
dec
cmp
arpl
pop
scas
pop
shlb
inc
enter
cs
add
mov
stos
adc
sbb
ret
xor
outsb
inc
dec
inc
test
lods
pop
loopne
mov
jecxz
xor
jbe
stc
push
lock
mov
push
insl
daa
rcll
pop
add
cmp
std
or
popa
cltd
cmpsb
and
jg
scas
call
pushw
je
rep
cmc
mov
push
les
mov
or
fcompl
add
cltd
movsl
and
adc
mov
aam
pop
ds
cmp
jnp
mov
dec
sub
aas
out
jae
adc
or
mov
push
sub
add
add
cmp
and
int3
daa
inc
sub
mov
shr
xor
movsl
pop
sub
das
jae
aaa
dec
push
jne
xchg
mov
mov
xchg
push
scas
xchg
push
ds
cmp
add
loopne
inc
sub
pop
xchg
cmc
adc
xchg
cmpsb
xlat
xchg
repz
ja
inc
inc
xor
pushf
fucomi
enter
ret
fsubr
notl
inc
mov
xchg
lods
mov
xchg
add
sub
push
fists
repz
insb
mov
inc
lock
daa
adc
xchg
xchg
cmc
data16
lret
popa
mov
xlat
sub
ss
xchg
in
inc
outsl
inc
sahf
inc
clc
in
test
jle
in
aaa
mov
aam
inc
cmp
in
mov
test
cmpsl
shrb
sub
and
push
adc
xor
pop
pushf
loopne
call
push
es
dec
fisubrs
ljmp
sub
mov
xchg
pop
shlb
cmp
cld
adc
sbb
inc
stos
int
xlat
xchg
inc
dec
in
sbbl
pushf
call
sbb
dec
hlt
repnz
das
imul
rol
mov
push
dec
push
dec
cmp
into
xchg
scas
pop
popf
nop
cmp
push
mul
clc
inc
lds
mov
xchg
lods
je
fcomi
mov
sarl
or
testl
push
aad
in
push
imul
loopne
insl
fs
insl
lahf
out
push
cmp
dec
cli
cwtl
jae
adc
lods
cmc
dec
sub
icebp
push
adc
in
flds
ljmp
inc
aad
imul
daa
test
push
add
pop
lds
popa
imul
pop
aaa
and
les
sub
repnz
cmp
ja
xor
das
in
loopne
mov
cwtl
or
push
dec
ficoml
xlat
test
sbb
mov
int
sti
xor
sahf
xchg
js
push
movsb
faddp
shlb
and
pop
push
jne
mov
cwtl
push
scas
inc
mov
sti
xchg
push
loopne
das
push
imulb
or
iret
cmp
jmp
in
jne
jge
imul
fs
cs
stos
js
jge
push
imul
imul
pop
xlat
testl
mov
gs
sub
xchg
js
gs
pop
sub
pop
dec
xor
and
pop
add
repz
dec
fcmovb
mov
ret
cmp
in
pop
pop
lret
je
repnz
push
cmpsl
test
jecxz
add
cmpsb
pop
bound
xchg
sub
lea
mov
das
mov
sub
cmpsb
jge
adc
pop
call
rcrl
outsb
jmp
ret
lods
loope
mov
in
jecxz
and
insb
js
sti
xor
lret
mov
adc
push
pop
movsl
data16
ljmp
or
lcall
ficompl
add
test
gs
lret
das
xchg
outsb
scas
xchg
pop
mov
cmp
es
add
pop
div
add
out
push
das
and
sbb
ret
sbb
test
stos
xchg
test
mov
mov
stos
mov
jnp
out
fisubl
sub
mov
rorl
das
push
lock
push
icebp
arpl
add
ja
sbb
mov
mov
cwtl
outsl
bound
or
mov
cmp
xor
mov
rcl
pop
aam
js
inc
adc
cltd
aam
jne
sbb
inc
aad
push
leave
xlat
jno
je
jmp
dec
adcb
xchg
cwtl
movsb
loope,pt
mov
sub
call
jns
ss
jb
es
xor
mov
ret
lods
mov
xor
pop
pop
xchg
jns
jb
fists
lahf
jo
xchg
das
add
or
jge
push
pushf
add
stos
rorb
lods
pop
sub
outsl
test
jae
or
std
or
lret
leave
cmp
fucomp
int3
lea
xlat
xchg
cltd
xchg
cli
xor
inc
out
jp
xlat
cmp
push
cmc
dec
out
daa
je
mov
nop
mov
sbb
clc
stos
adc
movsb
out
jnp
cmp
and
jno
xchg
aam
pop
in
jns
and
mov
push
cmp
cmpsl
xchg
sbb
iret
xlat
sub
imul
loopne
ljmp
add
inc
inc
call
jne
sbb
fs
sbb
sbb
mov
lret
stos
shl
sbb
aaa
notb
rcrl
pushf
pusha
push
jecxz
jmp
mov
dec
ds
or
pop
orb
rcll
mov
testb
test
or
cld
or
out
jp
sarl
or
push
add
imul
cmp
ror
jns
or
add
mov
fildll
mov
cwtl
into
sbb
leave
je
subb
xor
outsl
add
cli
andb
gs
mov
movsl
xchg
jae
mov
cmp
outsl
pop
adc
ja
sub
mov
adc
cmpsl
mov
and
movsl
lret
test
lods
xor
loop
imul
pop
cmp
fldl
push
std
add
inc
xor
ret
and
jo
inc
fildll
xor
jns
pop
cmp
xor
jmp
jno
xchg
outsl
xchg
adc
in
lods
cld
adc
adc
fmulp
add
mov
sub
orl
jne
mov
mov
js
ss
dec
popf
xchg
lods
xchg
aaa
dec
ss
sbb
popf
lock
add
mov
add
adc
aam
lret
outsl
mov
xchg
push
jmp
adc
cmpb
rcll
lock
xchg
xor
test
je
or
stos
dec
jns
jno
test
jns
xor
sub
hlt
mov
add
and
in
sbb
andb
mov
xor
daa
push
dec
xchg
enter
push
je
mov
cmp
mov
mov
rolb
xchg
popf
mov
pop
add
dec
pop
sbb
xchg
inc
adc
lret
inc
xor
imul
mov
aam
jecxz
xchg
xor
repz
mov
xchg
mov
imul
add
adc
sub
jne
mov
mov
mov
shlb
ljmp
pop
cmp
jnp
movsl
mov
mov
mov
jo
test
or
out
and
pop
sti
fdivrs
insb
inc
mov
or
mov
add
sbb
sarb
mov
enter
dec
cltd
in
nop
mov
lea
jle
jmp
pop
mov
scas
call
cltd
jno
xchg
dec
in
lret
pop
xchg
addl
addr16
leave
arpl
mov
adc
aas
lock
shrl
xchg
pop
pop
cltd
inc
out
stc
clc
cmp
dec
and
cwtl
mov
cmp
dec
scas
sub
nop
ljmp
popf
das
xchg
push
movsl
sarb
ret
pop
push
add
mov
jbe
lret
mov
call
inc
subb
jno
push
hlt
pop
enter
mov
cmp
add
jge
scas
inc
cmc
icebp
add
mov
push
and
jbe
movsl
bound
aas
jmp
cmp
cmp
shlb
lods
movsb
test
out
andl
sbb
int
xchg
dec
sbb
sti
jle
or
outsl
movsb
enter
xor
icebp
lret
testl
and
adc
nop
and
call
sbb
into
push
mov
push
in
imul
cmp
pop
cs
and
dec
sub
add
shlb
mov
outsb
cmp
xchg
lea
mov
push
mov
or
jns
mov
cmpb
cmc
xor
mov
stos
xor
shr
jno
aam
insb
fbstp
xor
push
in
lret
xchg
fistl
cmpsl
movsl
jge
push
or
adc
mov
mov
and
jnp
int3
sub
loopne
cmp
sbbb
insb
xchg
movsb
std
push
addl
inc
cli
xchg
aaa
mov
inc
pop
imul
jg
mov
jb
adc
js
mov
jp
push
je
addb
ret
sbb
lret
mov
mov
xlat
adc
fsubl
popa
mov
ret
push
cmpsb
test
mov
pop
jecxz
mov
jl
push
aad
mov
cmpsb
repz
fs
push
add
out
lea
and
cmc
movsl
aad
lods
repnz
call
sti
inc
jmp
jecxz
pop
sbb
pop
push
and
sbb
sub
out
gs
fs
int
sub
nop
ds
xchg
pop
inc
outsl
dec
cmc
mov
mov
test
xchg
xlat
sub
fwait
mov
add
cmp
add
dec
imull
into
and
negb
sbb
xor
mov
cmp
out
add
push
and
pop
ja
lock
gs
fstps
push
jle
lods
in
nop
lahf
int
add
xor
cmpsl
mov
sub
nop
dec
xlat
adc
jle
mov
testl
into
adc
lock
cs
pop
cmpsl
jb
jg,pn
add
jbe
xchg
mov
jecxz
sub
hlt
mov
mov
outsl
adc
repz
test
jae
in
mov
push
jb
cwtl
dec
jge
sbb
add
add
pop
inc
pop
int
sbb
cmpsl
xchg
or
push
arpl
cmc
dec
out
cltd
rorb
cmpsl
das
addr16
fmull
rorl
hlt
add
stc
mov
jnp
xor
push
or
dec
xchg
inc
adc
mov
cmp
or
push
jb
sbb
aas
pop
les
sbb
dec
test
xor
or
push
cwtl
lahf
xchg
aad
divl
insb
mov
cmp
iret
inc
adcl
mov
push
pop
inc
mov
jns
jecxz
xchg
jne
jbe
dec
in
push
int
pop
mov
adc
fnstenv
mov
mov
sbb
cmp
loopne
decb
or
mov
shr
cmpsl
fimull
ss
iret
mov
out
xor
ljmp
and
push
loop
sub
lds
cli
xchg
mov
mov
shll
pop
movsb
adc
insl
adc
jbe
sub
jmp
mov
loope
roll
mov
jno
daa
push
div
repz
fiaddl
lock
cmp
inc
cmpsl
popa
daa
aaa
sbb
ret
ror
pop
jl
stc
nop
xchg
mov
or
fidivrs
push
enter
loopne
sub
call
jb
test
mov
push
stos
outsl
or
inc
xchg
mov
cld
cmp
inc
mov
sub
mov
pop
pop
add
pop
adc
je
add
add
push
int3
push
xchg
cmp
sub
xchg
pop
popfw
incb
xchg
xor
mov
ja
dec
movsl
jo
cli
rolb
xchg
or
or
add
into
dec
scas
bnd
leave
aad
aas
xchg
dec
mov
shlb
mov
cmc
xor
and
sbb
jg
movsb
test
push
rcrl
dec
js
and
std
lds
sti
and
aas
scas
dec
andl
fdivr
inc
repnz
stc
jl
aam
fwait
aaa
cltd
dec
sub
adc
dec
out
xor
xchg
adc
rcrl
mov
mov
sbb
mov
jns
inc
inc
shl
pop
push
cmp
lcall
adc
test
push
out
js
subb
aad
clc
lahf
aaa
mov
rclb
inc
mov
mov
xchg
mov
and
sahf
pop
pop
mov
minps
mov
fcoms
cmc
mov
push
mov
daa
cmp
pop
in
cmpl
shll
adc
cmpsb
repnz
imul
fcompl
and
xchg
addr16
push
outsb
push
xchg
push
mov
sbb
mov
add
out
fmuls
hlt
cmp
fucomi
push
or
xchg
fadds
popf
addr16
test
mov
psrlw
aaa
lret
in
in
sbb
push
mov
or
jl
orb
lds
sub
adc
ja
lock
mov
xchg
push
dec
mov
adc
aaa
outsl
mov
sti
mov
sbb
mov
mov
sti
push
push
pop
lock
ror
pop
cmc
mov
fnstenv
pop
mov
push
lods
lcall
xchg
addr16
mov
les
inc
test
inc
mov
into
xchg
in
inc
insb
mov
lock
movsb
popa
pop
xchg
addb
mov
sbb
into
mov
lods
dec
jecxz
xor
jge
inc
int
out
push
ret
sub
add
adc
and
cli
rcll
daa
jp
cmc
fisubl
enter
aas
jl
cmc
lods
enter
jle
xchg
bound
or
dec
pop
inc
adc
fdivs
repz
and
cmp
dec
sbb
in
std
imul
dec
lods
xchg
loop
or
insb
adc
data16
pop
sub
call
mov
mov
cmp
dec
shl
and
mov
nop
iret
mov
sub
cmp
lods
nop
cmp
dec
jno
out
mov
xorb
mov
add
sbb
shr
jns
push
aaa
rorb
or
mov
push
mov
lods
cmpsb
loope
and
jne
test
adc
push
loope
jmp
scas
addr16
adc
movsb
gs
mov
inc
xorl
jo
lcall
xor
cmp
out
push
xor
fcomi
xchg
aaa
out
into
scas
out
outsb
out
std
sub
cmp
daa
lock
aad
cmpsb
lcall
scas
jl
mov
mov
fidivrl
xor
sub
cld
push
das
adc
inc
sti
mov
jb
xlat
ljmp
jb
mov
mov
pop
cmpsb
rol
or
jp
mov
lock
mov
sub
js
mull
jle
lods
push
adc
xchg
test
orl
arpl
push
xchg
pusha
mov
aaa
mov
pop
imul
push
stc
mov
gs
sub
inc
shlb
and
repnz
push
test
sti
test
add
dec
orb
push
xchg
cwtl
sub
dec
les
xchg
mov
js
or
gs
inc
xchg
xchg
inc
cli
pop
cmp
push
out
fimull
sti
movsb
jbe
pop
xchg
cld
jne
pop
out
jne
int
and
ds
shlb
pop
xor
movsl
les
mov
or
int3
xchg
cs
lahf
sbb
fadd
and
sahf
inc
lods
fwait
int3
sub
mov
sbb
hlt
pushf
pop
jp
pop
sub
inc
fdivs
cwtl
inc
dec
insl
stos
call
pop
cmpsb
imul
mov
loopne
fidivrs
pop
in
filds
add
mov
js
and
arpl
add
rorl
xchg
imul
in
xor
push
push
sbb
lret
mov
jmp
inc
inc
jmp
adc
and
mov
inc
mov
dec
jbe
sub
mov
sbb
xchg
sbb
push
mov
cmp
mov
stc
adc
scas
hlt
push
rcrl
dec
mov
repnz
mov
aam
pop
jge
add
jg
test
cmp
mov
push
push
movsl
pusha
pop
addr16
pop
dec
hlt
dec
loope
sti
cmp
cmp
sub
enter
negb
push
xchg
sbb
in
or
sub
xchg
imul
arpl
pop
push
sarl
pop
hlt
arpl
test
int
ret
cmp
xor
adc
stos
add
fisubl
iret
mov
lods
fwait
call
mov
mov
rcrb
push
sub
jne
push
push
sbb
sbbb
stos
dec
xchg
pop
xor
push
adc
pusha
dec
sar
and
jp
shlb
orl
cmpsb
dec
push
loop
dec
pop
loopne
je
aaa
in
push
les
jns
sbb
mov
add
xor
cld
fstps
sub
sub
idivb
mov
insb
stos
stc
fisttps
fs
pop
xor
jns
lret
gs
daa
or
dec
pop
clc
mov
push
xor
loop
lret
and
sub
leave
push
mov
or
nop
fwait
enter
adc
lahf
insl
push
movsbl
jl
enter
ret
rcr
adc
sub
inc
popf
cmp
sbb
cli
call
mov
mov
and
mov
out
dec
test
and
sbb
sub
stos
insb
sbb
fcoms
mov
and
loopne
mov
jae
and
stos
loop
mov
stc
ret
jae
in
pop
sub
data16
add
scas
adc
jmp
pop
cwtl
cmp
inc
sarl
leave
fisttpll
lods
scas
mov
stos
lds
test
fnstenv
mov
add
enter
data16
push
adc
jo
repz
adc
cmpsb
cmpsb
xor
mov
into
mov
jmp
clc
pop
dec
cmp
je
xor
ds
mov
loope
adc
mov
std
mov
mov
out
inc
push
sarl
push
add
sub
insb
push
xchg
scas
push
cmpsl
in
mov
loope
loope
cmp
pop
rorb
xor
push
mov
aam
scas
add
sbb
popf
loope
xor
mov
or
push
xor
pop
dec
add
adc
int
inc
cmc
sub
mov
pop
inc
pop
jmp
pusha
cld
adc
aam
cmc
sti
xor
in
sub
rcl
dec
or
daa
out
or
cmp
decb
ja
stos
xor
mov
outsb
inc
jno
cmc
imulb
dec
aad
neg
out
nop
lods
and
loop
daa
jmp
xchg
lods
rcr
cmp
jle
push
gs
mov
aad
pop
insl
xchg
pusha
and
push
dec
jmp
aad
sub
mov
pop
subb
ds
cmp
andb
stos
sub
loopne
std
cld
cmpsb
xchg
jg
push
jne
xchg
mov
pusha
fnsave
popa
sbb
sahf
inc
mov
lret
cmp
mov
fstpt
fbstp
push
dec
mov
int
jmp
lock
jmp
pusha
push
lcall
fstps
add
leave
cmp
cmc
jecxz
scas
and
in
sub
fisttps
test
lcall
push
push
cmpb
mov
lods
pop
jg
jg
or
inc
in
xchg
pop
mov
pusha
dec
fwait
adc
jmp
repnz
in
xchg
jmp
cmp
xor
lea
pushf
inc
mov
add
dec
push
xchg
out
lods
mov
mov
mov
ljmp
in
xor
lcall
ret
mov
gs
xor
xchg
cwtl
mov
repz
ss
push
es
jl
cmp
mov
les
sub
cmpsb
lcall
mov
jp
ret
sub
sti
push
or
addr16
je
scas
mov
nop
cmc
jne
jmp
mov
cmpsb
pop
jb
mov
jb
and
mov
mov
mov
mov
test
repz
out
dec
in
and
jno
xor
std
mull
movsl
xchg
test
dec
js
fstpl
jmp
mov
mov
lods
aad
fs
mov
adc
stos
push
push
dec
into
add
cmp
adc
xor
inc
pop
sbb
fimull
cmpsl
leave
aam
loope
push
xchg
mov
cmp
push
xor
hlt
fsubr
adc
cmp
sbb
xor
push
ljmp
test
iret
push
mov
jo
adc
mov
add
and
in
lods
sub
imul
cmp
inc
fistpl
cmp
shrl
out
jl
hlt
movsb
or
shlb
adc
xlat
pop
pop
push
or
inc
adc
aam
dec
jmp
lret
xor
inc
mov
leave
push
add
cs
aas
xchg
ret
mov
cmp
adc
xchg
outsl
dec
stos
cltd
cmp
in
mov
fwait
sub
and
mov
pop
add
push
mov
in
cld
dec
xor
insb
or
sbb
pop
mov
shrl
mov
jge
jnp,pn
pop
daa
incb
inc
xchg
dec
ret
dec
pop
js
fidivrl
inc
push
nop
pop
push
into
imul
out
xor
js
in
je
and
iret
xlat
adc
lock
pop
pusha
push
add
sub
or
push
cld
jp
dec
cmp
aad
and
jns
call
test
adc
lds
push
sbb
ds
mov
test
shlb
push
jno
cmp
push
jb
jae
mov
lcall
out
cwtl
ret
aad
adc
and
in
scas
out
es
xor
mov
push
lea
shlb
sbb
dec
adc
sahf
jae
sub
ljmp
jl
outsb
mov
fcmovne
int
ss
and
mov
jne
shlb
lds
sahf
pop
fdivp
sbb
dec
int3
mov
xchg
pop
mov
pop
sub
mov
jmp
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
jmp
dec
xor
test
mov
pop
xlat
test
add
bound
jne
test
dec
loop
lret
aad
cwtl
mov
cmp
aam
xchg
adc
test
jp
fwait
add
sbb
fwait
dec
sbb
aaa
mov
or
add
cmpsl
sub
lock
divl
in
js
and
cltd
cmpsl
mov
pushf
mov
insl
neg
jo
aam
repnz
addb
mov
dec
inc
adc
xchg
ljmp
inc
in
loop
sahf
mov
andb
clc
jle
sub
imul
pop
je
push
pop
insb
push
pop
cmp
and
mov
sbb
lock
insl
imul
test
roll
jae
xchg
pop
mov
pop
inc
push
mov
jp
jbe
add
push
inc
xchg
stos
mov
xor
popa
cmpb
pop
or
lock
sbb
xor
in
popa
xor
incl
mov
push
mov
push
sbb
les
jmp
inc
xchg
test
mov
xor
outsb
mov
pushf
mov
xchg
in
pusha
cmp
das
cltd
scas
into
call
add
roll
lods
repnz
sub
in
and
subl
pop
mov
es
jns
sub
push
imul
adc
or
adc
into
xchg
adc
push
leave
sar
push
xor
lret
leave
and
xchg
cmpsb
xchg
add
adc
loope
add
cmpsl
outsb
scas
push
rol
fs
pushf
adc
xor
adc
xlat
adc
mov
xor
mov
or
pop
enter
xchg
aas
mov
stos
inc
loope
xchg
pop
mov
jge
cmp
adc
jb
dec
int3
mov
stos
or
mov
mov
out
fstps
mov
int
gs
loope
aas
inc
mov
mov
in
ds
mov
cmp
inc
jno
mov
jmp
xor
sub
or
xchg
sub
outsl
jno
pop
addr16
jbe
ret
jnp
jb
mov
popf
call
mov
mov
imulb
rcr
ja
jp
cmp
lret
jnp
ret
in
sub
xlat
and
scas
aam
les
ljmp
pop
xchg
ds
fld
jl
adc
dec
gs
les
xor
push
inc
dec
das
push
xor
mov
mov
insl
incb
insl
lods
lret
or
data16
xor
mov
fstps
jle
or
pop
mov
fdiv
sub
hlt
adc
jmp
sti
dec
push
push
test
mov
mov
xor
test
pusha
stos
adc
movsl
add
mov
mov
sub
popa
add
daa
pop
fiaddl
mov
ret
adc
pop
lea
jecxz
xor
orb
xor
aam
je
hlt
clc
xchg
sbb
fnsave
jno
dec
jecxz
pop
insl
mull
repnz
jmp
jno
mov
mov
gs
pop
movsb
or
test
and
lock
xor
and
xor
pop
sbb
jb
loop
sbbb
cltd
ja
imul
lea
mov
push
mov
int3
or
fwait
mov
fisubrl
cmc
mov
inc
mov
push
arpl
mov
jnp
in
mov
xchg
je
sub
mov
nop
or
sti
nop
sti
or
sti
xchg
jmp
jbe
xor
inc
sbb
sub
xchg
ret
or
xor
in
sbb
in
les
sub
push
push
sbb
out
push
cmp
cmc
add
push
fimull
cmpsl
ficomps
loop
jo
jnp
sub
jp
push
test
cli
movsl
loope
call
arpl
pop
inc
sbb
xlat
xchg
sub
fs
sbb
pop
or
es
orl
mov
int
lret
jbe
shll
cli
loopne
dec
aas
mov
jle
fs
fxch
loope
or
sub
mov
jb
mov
jo
leave
sbb
xchg
ja
sbb
cmp
or
scas
std
mov
into
sarb
mov
sbb
pop
fildl
jg
cmp
mov
sbb
dec
in
scas
movsl
fsubs
pop
mov
lahf
mov
dec
mov
movsl
fiaddl
sti
ds
jp
movsb
pop
loop
cltd
cmp
leave
add
stc
inc
fildll
addl
cmp
fldenv
daa
mov
mov
xor
lret
cld
stos
xchg
add
cli
adc
pop
stc
movsb
insl
scas
cli
sub
stc
rclb
lods
mov
xor
mov
imul
fcoml
xchg
mov
bound
sbb
jmp
test
lods
jecxz
leave
cld
and
lods
push
mov
popa
pop
fsubrl
jnp
sbb
icebp
test
jge
sti
gs
jmp
mov
filds
jp
add
out
pop
mov
popf
pop
jae
push
jae
pop
nop
fimull
xchg
mov
les
verw
test
xor
or
sti
sbb
lock
or
iret
jbe
cli
lret
xor
xchg
mov
mov
gs
mov
dec
push
xchg
test
dec
int3
sbb
in
mov
and
and
scas
test
mov
addr16
jno
add
dec
imul
test
or
in
icebp
jmp
mov
hlt
mov
call
inc
in
mov
lret
gs
jbe
xorb
pop
sub
mov
and
fcmove
cmpsl
lock
adcb
in
xor
push
cmp
pop
dec
push
dec
andl
mov
aas
adc
daa
ret
addb
in
mov
pop
or
es
push
out
sarl
loopne
pop
mov
aam
cmp
lret
pop
subl
sbb
int
std
jmp
sub
dec
cwtl
insb
xor
xchg
mov
ss
push
out
adc
mov
and
cmp
push
imul
mov
cwtl
jle
inc
faddp
getsec
sub
lock
inc
outsl
outsl
jmp
inc
and
dec
scas
pop
sbbl
sub
add
loope
pop
add
pop
sbb
jne
mov
repz
dec
xor
test
fs
xchg
rcl
out
xor
push
mov
cmp
cmc
sbb
mov
pop
sar
mov
lret
xor
dec
in
ja
adc
es
mov
cmp
test
xchg
fwait
addr16
cltd
maxps
int3
push
cmp
mov
jo
in
mov
mov
movsb
or
mov
test
hlt
jne
xlat
stc
dec
inc
and
jae
and
mov
scas
inc
lcall
mov
icebp
mov
sub
add
movsl
fistl
pop
hlt
in
sub
loope
mov
and
mov
mov
jnp
mov
inc
fists
imul
jecxz
push
aad
test
inc
loope
add
pop
sbb
xor
arpl
loope
mov
mov
fsts
scas
and
jbe
rcrb
adcb
or
sub
repnz
aad
mov
add
lcall
sbb
stc
sub
and
icebp
idivl
jge
filds
jl
pcmpeqd
lahf
lea
std
addr16
das
outsb
push
jno,pt
or
mov
pop
or
jns
lret
dec
scas
aam
out
cli
negl
iret
and
add
bound
sub
out
les
xor
and
movsb
orb
mov
push
and
and
mov
sub
pop
jno
jns
mov
xchg
sub
xchg
fistpll
enter
jns,pt
push
pop
cli
loope
test
xchg
or
inc
les
out
jb
or
pop
std
mov
shr
adc
push
add
ja
ljmp
or
dec
mov
mov
and
pop
testb
int3
jecxz
push
insl
push
lods
xor
fwait
les
je
sbb
xchg
mov
mov
scas
and
fisttpl
xchg
out
adc
mov
adc
sbb
lods
fidivrs
sub
jns
xlat
test
push
xor
jbe
inc
inc
dec
mov
daa
movq
pop
ret
add
sbb
stos
out
subb
pop
sbb
jle
mov
hlt
push
fstp
cmpsl
pop
adc
pop
sub
jp
repnz
mov
cmp
adc
lret
xchg
cmp
xchg
xor
cmp
add
push
mov
pop
and
mov
sti
data16
sub
mov
push
pop
xor
inc
jmp
pop
xor
push
push
jecxz
sahf
jo
pop
into
push
mov
into
inc
jo
mov
rorl
lret
mov
xchg
cmp
cmpsb
out
repz
sbb
push
adc
mov
xchg
mov
add
mov
cmp
ljmp
cmpsb
outsb
call
inc
sub
outsb
jl
adc
int
lods
inc
sti
mov
jmp
sarl
ja
adc
mov
js
mov
push
mov
cmpsl
pop
sbb
stos
mov
sub
aam
push
bound
int
out
dec
dec
into
das
xchg
ret
dec
pop
mov
scas
ret
sahf
xchg
clc
std
daa
or
data16
inc
loopne
jno
push
inc
cmp
cmp
movsl
xor
sti
sbb
and
push
push
movsb
push
outsb
xor
adc
inc
inc
outsb
das
out
push
movsl
test
jno
mov
add
mov
pushf
icebp
sub
pop
in
push
mov
jecxz
sbb
cmc
jge
xor
sub
push
and
cld
fwait
sub
mov
add
mov
pop
outsb
xor
mov
xchg
mov
imul
mov
jne
inc
cmp
push
call
push
push
inc
clc
push
sub
pop
fwait
shlb
insb
push
sti
es
mov
jo
xchg
jne
xchg
or
loopne
push
push
xor
scas
dec
bound
repnz
data16
push
mov
cli
sub
out
adc
int
or
test
push
sub
sub
jbe
ffree
sti
sbb
daa
aad
push
aad
lret
inc
jecxz
push
lahf
dec
mov
inc
xchg
outsb
mov
fwait
rolb
fcoms
fcomp
scas
mov
xchg
addr16
xchg
mov
lock
aam
inc
and
les
test
push
add
scas
sbb
sub
fs
jp
pop
je
sbb
nop
inc
movsl
push
push
dec
xchg
pop
jbe
pop
aam
testl
sbb
push
sbb
nop
mov
mov
cmp
mov
sbb
or
shlb
arpl
xchg
ljmp
popf
sub
adc
ds
xchg
ljmp
into
ret
push
mov
jae
loopne
dec
sbb
mov
loop
add
or
insl
call
jo
pop
and
xchg
sbb
mov
lea
fistl
push
adc
mov
jge
call
mov
cmc
std
jb
or
in
push
bound
les
push
adc
inc
cld
in
mov
add
imul
in
mov
push
mov
in
xor
jns
in
pop
jecxz
mov
test
xorl
adc
icebp
fldenv
lcall
lods
xchg
sbb
outsb
loope
dec
hlt
lea
popf
sub
icebp
sbb
and
aaa
cmp
pop
xor
out
inc
mov
fistpl
push
sbb
add
ja
mov
adc
aaa
lret
movsl
aaa
bound
cld
in
out
neg
fucomp
cmp
xchg
fld
xchg
pop
scas
cmp
aas
jle
push
jne
xchg
sub
or
insb
pop
cmp
and
jp
std
add
data16
fldenv
mov
cmc
stos
stos
lcall
sti
insb
sbb
lret
icebp
inc
loope
int3
aad
pop
cmpsb
push
cmp
mull
das
enter
cmp
xchg
test
movsl
pop
scas
and
or
mov
subl
scas
rcrb
stos
cs
ds
sbbb
or
jb
in
lock
inc
dec
jmp
dec
jge
mov
dec
mov
repz
out
add
mov
in
inc
mov
cmpb
mov
mov
arpl
sub
arpl
and
push
mov
dec
xchg
xadd
ret
or
enter
cmp
test
jge
xor
pop
mov
pop
add
or
movsb
sar
xchg
ret
push
jns
in
jl
mov
or
lods
xchg
nop
insb
adc
leave
xlat
loopne
or
pop
push
les
aas
adc
jb
xor
mov
xor
xor
add
add
ret
decl
pop
jne
lcall
in
mov
mov
inc
ljmp
loop
test
add
mov
xor
jge
xchg
rcl
cwtl
inc
ret
push
stos
xchg
in
aam
rorl
lahf
shll
xor
xor
out
pushl
add
cli
jae
jns
aas
insb
jecxz
add
xchg
jmp
or
cld
mov
stos
sbb
movsb
and
outsb
sub
xchg
sbbl
lahf
adc
jmp
xchg
and
adc
pop
test
mov
fisubs
test
push
rolb
gs
daa
outsl
mov
jmp
aad
cmpsl
pop
imul
popf
fs
call
or
adc
push
sbb
xor
sub
xlat
inc
jb
in
or
pop
and
push
rcll
cs
fsubs
add
loope
shl
add
or
daa
jecxz
mov
add
and
outsb
cmpl
jns
lods
leave
sbb
roll
inc
add
loope
xor
les
cmp
add
imulb
popa
call
lcall
jmp
out
xor
lcall
pop
push
scas
sbb
sub
sahf
push
mov
pop
mov
jbe
mov
push
push
gs
mov
int3
mov
push
jns
popf
mov
push
pop
xchg
outsl
sbb
shl
stc
pop
sbb
pop
sbb
sarl
mov
lds
push
data16
xor
sti
fnstcw
outsl
cld
sub
cs
scas
sbb
out
test
pop
fdivrp
lods
inc
leave
cwtl
data16
and
scas
cs
pop
lret
push
push
ret
push
xchg
stos
and
cmp
mov
dec
cmp
ret
add
dec
jae
push
fisttpl
int3
jae
test
xor
mov
and
jp
sbb
out
mov
and
adc
leave
pop
shrb
push
popf
ja
enter
adc
dec
xchg
sti
ficompl
loope
inc
sub
ja
hlt
nop
inc
push
mov
pop
mov
addr16
xor
fs
xor
mov
shll
fsubp
arpl
xchg
flds
adc
mov
xchg
and
stos
lret
jle
in
inc
sub
dec
adc
pop
cmp
test
add
fwait
jmp
or
inc
xchg
push
adc
fiaddl
mov
inc
sbb
mov
pop
sbb
int
add
aam
xchg
popa
adc
out
mov
sbb
add
scas
cmp
mov
bound
cmp
jae
push
movsl
jl
mov
xor
xchg
xor
lods
enter
mov
lea
or
sub
fnstcw
cli
out
jnp
and
mov
addl
dec
fs
pushw
loopne
int
pop
das
sub
mov
testb
aad
clts
push
test
jae
jmp
inc
dec
xorb
mov
pop
ret
in
out
pop
arpl
xor
lods
cmp
push
adc
push
mov
xchg
cltd
iret
jo
fnstcw
stos
mov
int3
jecxz
and
sbb
jnp
movsb
dec
aad
ja
pop
icebp
dec
cmpsb
mov
or
adc
test
les
push
xchg
daa
jae
inc
jl
inc
fisubrs
cmp
stos
pop
and
aaa
fbstp
mov
repz
loopne
pop
xchg
xchg
adc
cmc
lahf
aaa
sbb
movsb
data16
sarl
fwait
decl
mov
and
out
pop
fildl
jno
adc
sub
push
enter
mov
in
jo
xchg
xlat
jnp
cs
sub
cwtl
or
pop
movsl
das
and
in
ficompl
ret
xor
pop
xchg
pop
ret
ss
and
pop
in
enter
idivb
inc
mov
shrl
mov
push
into
ljmp
jmp
and
subl
adc
push
push
nop
mov
loope,pn
test
leave
or
in
shlb
jmp
sub
imul
je
sbb
cmc
lret
pop
mov
dec
ljmp
into
sbb
icebp
fnsave
daa
pop
inc
sbb
mov
mov
jno
movsb
inc
sbb
cmp
mov
fidivrl
scas
stc
scas
inc
subl
stos
add
test
rcrb
push
xorb
or
iret
adcl
fwait
jle
pop
mov
jmp
imul
ja
dec
mov
fldenv
add
or
jg
addr16
push
ja
xor
mov
mov
dec
nop
cwtl
jne
cmp
mov
jne
pushf
push
popa
adc
inc
test
cld
dec
xor
xor
adc
push
pop
fwait
setg
aam
movsl
clc
push
addl
leave
mov
cmp
sub
xchg
push
push
in
pop
subl
and
dec
fsubs
es
call
inc
rorb
xchg
mov
push
jo
xrelease
mov
outsl
test
test
and
dec
mov
add
les
cld
ss
add
adc
repz
pushf
dec
sahf
cli
bound
aad
pop
pop
lea
test
cmp
gs
rorl
mov
test
out
test
inc
mov
stc
test
mov
dec
pop
leave
cmp
pop
mov
scas
mov
and
push
dec
push
int3
mov
dec
or
fcmovnbe
jmp
rcll
mov
stc
xchg
mov
mov
aas
xchg
push
lods
popf
test
adc
fs
xchg
sbb
leave
aas
inc
jg
iret
cmc
add
fcompl
leave
pop
loopne
aad
push
inc
pushf
pop
repnz
push
mov
jmp
and
int
mov
xchg
popf
sbb
pop
int
ljmp
frstor
ret
jg
xchg
mov
mov
in
mov
pop
jno
lea
mov
inc
or
testb
or
iret
xor
pushf
mov
test
int
out
jnp
inc
lods
inc
pop
lods
clc
sbb
pop
prefetcht0
mov
aam
cmc
aas
mov
push
adcl
rcll
xchg
out
cmp
cld
dec
mov
ret
push
test
dec
pop
stos
sub
inc
jno
push
or
cmp
addr16
rclb
push
nop
mov
pusha
mov
in
loopne
cmp
repnz
aad
mov
push
lods
push
in
into
sbb
mov
cld
and
lea
inc
pop
scas
out
shlb
dec
insl
xlat
out
jp
pop
loop
push
or
mov
popf
inc
jp
pop
cld
lahf
pushf
mov
cmp
ret
pop
lret
test
push
test
inc
mov
mov
or
enter
push
test
jge
inc
inc
adc
cmp
in
scas
dec
xchg
iret
jb
jbe
sbb
stos
pushf
je
xor
add
xchg
xchg
xchg
jns
cmp
mov
jle
int
and
and
pusha
out
insb
js
int3
js
mov
aaa
cmp
lods
sub
mov
subl
sub
loop
ja
setnp
xchg
cltd
or
ret
or
mov
shll
xchg
lret
pop
loope
mov
ds
mov
xchg
sbb
push
cmp
adc
push
push
inc
ljmp
pop
sbb
sahf
int3
sarl
or
insl
fisubrl
pop
xchg
xchg
add
das
sbb
mov
lret
sbb
pushf
jl
ret
and
and
cmc
nop
insl
add
pop
out
sbb
mov
xchg
sbb
movsb
sbb
mov
mov
or
int
out
jb
add
into
mov
push
cli
push
popf
rolb
cmp
inc
jge
xchg
js
add
dec
je
movsb
sbb
js
inc
js
jg
xor
insl
pusha
vcmppd
jo,pn
push
popf
push
dec
int
add
jbe
jbe
out
insl
fidivrs
jne
or
xor
xchg
push
les
mov
mov
pop
mov
push
lds
push
sbb
mov
shll
jle
aas
daa
dec
ljmp
cmp
and
ljmp
mov
and
xlat
in
gs
xor
aas
xor
test
bound
int3
sub
leave
cmp
mov
sarl
fsubl
out
and
fs
add
dec
mov
pop
aaa
in
cmp
sbb
adc
or
pushf
mov
pop
inc
negb
shrl
icebp
scas
pop
filds
mov
sub
out
pop
push
xchg
hlt
lahf
fistpl
adc
sbbb
stc
lcall
pop
repz
out
mov
jno
lea
mov
add
xchg
mov
adc
add
sbb
insl
xor
clc
mov
sub
pop
xchg
ret
rolb
mov
xchg
jge
sbb
sbb
adc
pop
or
cmp
fisttps
sar
dec
in
je
and
mov
mov
or
sub
js
push
fisttpll
iret
fcmovnbe
mov
sbb
shlb
mov
mov
mov
add
cltd
mov
xor
mov
push
ficoms
xchg
outsb
jl
push
inc
jbe
jecxz
cmp
dec
push
lcall
mov
add
mov
ljmp
or
add
not
lds
xor
sbb
arpl
fildll
jg
jle
out
dec
cs
add
fists
add
sahf
aaa
mov
mov
inc
push
xchg
leave
fcoms
rolb
push
xlat
and
outsl
sbb
leave
adc
in
pop
sahf
std
mov
jmp
lds
orl
ucomiss
jae
dec
jge
jecxz,pn
mov
xchg
out
divl
sbb
cwtl
ds
mov
mov
sbb
inc
outsb
xchg
rcrb
bound
adc
dec
mov
xlat
fwait
movsb
hlt
mov
mov
ja
mov
add
dec
mov
cmp
out
fcompl
loopne
sub
rcl
xchg
sbb
jne
out
or
mov
cmp
imul
mov
stos
je
sbb
push
jl
sub
ds
arpl
and
stos
cmp
jmp
lret
push
lods
mov
fiadds
fists
dec
jo
sahf
dec
push
adc
adc
bnd
mov
cmp
jecxz
inc
into
fcomps
shl
in
or
rorb
imull
fs
pop
cwtl
and
jae
push
scas
std
sub
push
ss
inc
mov
iret
sub
xchg
xorl
pusha
mov
dec
cmpsl
jno
push
xchg
lret
cmp
pop
xchg
inc
lret
repz
mov
jmp
add
bound
mov
mov
jg
xchg
xor
jecxz
cmp
pop
test
or
inc
add
mov
daa
mov
and
mov
js
cmpsb
scas
popa
mov
xlat
ret
push
rcrb
push
dec
loope
push
fwait
mov
mov
scas
xor
jp
ds
adc
std
data16
push
popa
xchg
mov
add
add
clc
lods
mov
lret
sbbb
mov
jle
loop
xrelease
jns
cli
adc
test
inc
mov
sub
aam
jo
jno
add
testb
xor
into
or
arpl
mov
shl
add
cmp
les
jb
dec
inc
cmp
cmp
adc
test
mov
lcall
inc
sbb
leave
lahf
into
dec
dec
mov
adc
popa
or
lret
leave
push
sarl
mov
fists
and
dec
xor
and
adc
xchg
sub
xchg
mov
adc
pop
shl
cmp
add
jecxz
cmp
mov
adc
adcl
inc
mov
stc
sbb
sub
movsb
in
xchg
int3
pop
push
adcb
sub
mov
imul
mov
dec
int
cltd
ss
lods
jne
push
mov
push
jae
and
add
in
lods
sub
scas
fst
sbb
pop
pop
dec
js
xchg
lea
les
mov
and
rclb
test
push
jae
mov
hlt
pushf
das
cs
sahf
sbb
jmp
hlt
scas
inc
rcrl
mov
rcl
adc
addl
lods
pop
data16
sahf
shrl
cmpb
cld
push
test
jae
xor
pop
adc
ja
ret
mov
jb
cmp
mov
mov
nop
add
sub
xor
mov
push
arpl
and
popa
sub
cmpsb
xor
outsl
mov
stos
in
in
ret
movsb
mov
or
mov
out
adc
mov
cli
repnz
insb
add
movsb
shr
cmc
or
test
jecxz
cmpsb
mov
xchg
out
std
js
jge
add
pop
and
popa
aad
push
pmullw
loope
adc
xchg
enter
mov
cltd
lahf
cmpsb
mov
jns
ds
repz
pop
add
cmpb
dec
ja
inc
int3
fistpll
mov
sbb
cmp
mov
fcom
xchg
faddl
outsl
fcos
pop
pop
rol
xchg
mov
iret
int3
fnsave
mov
fidivs
orl
shll
or
xchg
lret
bound
push
ljmp
mov
xchg
sub
roll
sti
add
xor
test
cmpxchg
clc
je
dec
dec
push
xor
xchg
and
cmp
test
dec
pop
mov
cmpsl
sub
fisttps
jp
and
dec
gs
sti
cmp
hlt
add
mov
sbb
adc
add
out
xchg
mov
add
imul
cmp
xchg
loopne
pop
and
inc
xor
fnstcw
sbbl
insl
lcall
sbb
xchg
jns
in
fisttpl
add
add
xchg
int
repnz
es
loopne
cs
xchg
aaa
lods
ja
inc
pop
arpl
push
std
xchg
xchg
inc
sti
add
inc
lds
cmp
sub
push
push
add
pop
movsl
sbb
lret
add
mov
jns
in
pop
rsqrtps
jecxz
fst
aad
jo
lock
out
xor
xchg
movd
jg
imul
mov
xchg
in
push
aas
push
cmpsl
shll
ds
leave
mov
cltd
push
push
adc
test
roll
in
mov
ret
gs
push
insl
push
mov
je
ret
jmp
cld
repnz
int
nop
inc
mov
cmpsl
sub
lret
dec
je
int
xor
push
jmp
pop
pop
bound
test
mov
fldt
jl
mov
rcrl
adc
data16
sub
je
icebp
ljmp
ljmp
insl
jne
addr16
jge
mov
add
mov
repz
xchg
test
sbb
xor
xor
sub
pop
add
mov
jmp
lds
call
mov
ljmp
enter
mov
ret
pop
in
adc
mov
lea
lods
push
lret
jnp
testl
inc
scas
ret
sub
inc
mov
fldt
int3
pusha
pop
es
cmp
jno
dec
aad
sbb
dec
cli
int
pop
xor
and
fadd
add
xor
cmp
loope
scas
andb
dec
push
and
data16
jge
pop
mov
adc
mov
nop
scas
pop
lret
std
stos
scas
mov
test
mov
pop
inc
sub
lcall
stc
cmp
and
mov
adc
shll
fsts
dec
dec
pop
push
xchg
jge
sbb
pop
mov
lock
adc
and
out
dec
sbb
pop
mov
add
bound
shrb
mov
cwtl
mov
in
dec
inc
or
jle
inc
pop
sarb
ret
loope
mov
add
adc
insl
out
into
in
popf
bound
and
in
lea
je
clc
sub
mov
insb
fildll
sub
cld
jne
jg
inc
sbb
mov
or
adcb
dec
mov
sub
sub
cmpsb
js
mov
pop
jb
jo
pop
dec
rolb
jl
insb
sbb
xor
mov
in
cmp
mov
call
xchg
aaa
out
jbe
dec
dec
aas
mov
lock
inc
js
ss
jg
xchg
cwtl
pushf
dec
mov
imul
pop
mov
push
and
mov
jo
mov
xchg
or
sub
fistps
push
sbb
fwait
sub
lock
outsl
cld
rol
dec
add
sbb
xlat
pop
add
lahf
add
test
test
xchg
jle
mov
fwait
dec
jmp
xchg
cmp
fstps
cmp
xor
fnstcw
add
sub
mov
in
jp
jge
mov
add
push
jle
dec
insb
loop
pop
lods
fdivs
sahf
sbb
movsb
pusha
jb
push
xchg
push
jl
imul
push
lret
scas
movsl
sha256msg2
shll
pop
and
xor
cmpsb
push
bound
ja
addr16
mov
push
cmp
outsl
xchg
pop
pushf
xchg
pop
mov
subb
cmpsl
fistpll
mov
lock
aas
ss
rolb
ret
test
jae
xlat
lods
imul
test
inc
lds
dec
cmp
xchg
cs
ficomps
icebp
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
pushf
pop
cmp
add
add
pop
aad
mov
in
jns
imul
inc
lret
xchg
ret
subb
add
lea
cmpsl
mov
loopne
xchg
imul
dec
test
out
mov
out
cmp
or
pop
cs
fwait
in
dec
cwtl
aad
dec
mov
dec
addb
add
add
add
add
sub
adc
cmp
out
pop
xchg
push
sahf
int3
add
popa
add
add
dec
xor
gs
aam
mov
jp
dec
inc
cwtl
mov
imul
test
mov
bound
movsb
xchg
push
xlat
and
lcall
mov
dec
or
aaa
push
sete
pushl
xchg
out
sub
clc
movsl
jle
dec
mov
fiaddl
push
add
add
pop
sub
sub
addb
int3
add
popa
add
add
daa
movsl
loopne
aaa
pop
jecxz
mov
xor
mov
and
in
iret
and
fcoml
add
out
or
mov
stos
js
loop,pt
sub
inc
pop
out
jle
push
bound
add
cld
dec
loop
cld
in
push
fs
push
jg
inc
cld
sti
cmc
or
lret
mov
mov
sbb
add
add
add
add
and
aam
aam
ljmp
je
out
idivb
popa
add
add
xor
lcall
sbb
push
or
add
fisttpl
mov
mov
test
jg
xchg
xchg
imul
push
xor
cs
stos
bound
inc
inc
push
mov
icebp
and
shlb
or
dec
lahf
pushf
add
add
add
add
mov
sti
cmpsl
mov
dec
mov
ror
add
add
push
pop
jmp
adc
xchg
mov
pop
jno
add
mov
popa
cmp
daa
out
jnp
inc
test
pop
leave
pop
mov
inc
fldcw
push
jbe
jp
jnp
cmpsl
push
jl
dec
mov
inc
dec
test
mov
pop
test
sub
popa
pop
pop
pop
fldl
add
add
add
out
lods
cmp
stc
stc
icebp
inc
push
fldenv
into
add
popa
add
add
in
daa
std
and
xchg
lock
dec
xor
pop
add
xor
ja
add
aas
inc
or
adc
pop
xor
mov
jge
xchg
lock
jmp
iret
filds
cmp
mov
sti
dec
cmp
int
in
jbe
loop
push
add
sahf
mov
lret
idivl
add
add
add
push
xor
gs
aaa
push
or
or
add
add
cmp
leave
iret
cmc
cmpsb
pop
add
pusha
jl
repz
fldenv
add
pop
dec
in
outsl
and
scas
les
mov
dec
fistps
mov
xor
sub
popf
mov
fimull
xchg
daa
mov
pop
movsb
sbb
das
bound
into
icebp
mov
std
clc
mov
jns
in
shll
add
add
add
adc
push
adc
cwtl
out
repz
adc
add
popa
add
add
add
xchg
ret
out
imull
push
mov
out
bound
lret
int3
jp
js
push
fistps
ficoml
inc
adc
sahf
add
xchg
ffreep
mov
sti
sar
dec
dec
push
xor
ss
les
pop
jno
or
cmp
cwtl
mov
cwtl
mov
imul
jp
out
xchg
mov
add
add
sub
das
jle
jg
imul
outsb
call
add
popa
add
add
fwait
out
xchg
pushf
mov
cwtl
pushf
and
sub
push
stos
dec
les
pop
imul
push
out
clc
sti
into
mov
jmp
loop
lods
mov
hlt
sahf
out
idiv
jns
mov
je
sbb
mov
in
xlat
mov
add
xchg
call
mov
add
add
add
add
and
mov
mov
lock
loope
add
add
pop
inc
inc
out
jmp
pop
stc
add
xchg
cltd
xchg
sub
dec
pop
popa
add
mov
repnz
adc
fcomi
jecxz
dec
lret
jecxz
adc
mov
scas
and
lret
in
and
inc
insb
cmp
addl
mov
add
sbb
add
add
ret
or
ret
lods
sub
mov
dec
aaa
loop
add
add
shr
push
sbb
in
or
and
movsb
mov
xchg
push
js
out
jge
add
or
imul
mov
call
or
push
or
push
or
fldenv
xchg
jae
out
dec
add
adc
add
movsb
xchg
mov
cmp
in
mov
inc
sub
inc
into
push
cmpsb
and
lcall
add
ret
pop
iret
fst
enter
dec
sub
add
add
push
in
jp
jne
push
mov
mov
push
icebp
cmp
mov
addl
ljmp
idivl
sarb
add
inc
je
enter
je
inc
cmp
stos
jns
popa
fnstenv
addr16
insb
nop
movsl
in
repz
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
sbb
mov
inc
add
sbb
out
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ljmp
add
sbb
mov
inc
add
sbb
jle
inc
add
sbb
lret
add
inc
add
sbb
or
mov
inc
add
sbb
rcrb
inc
add
sbb
sbb
inc
add
pop
inc
add
sbb
sub
inc
add
test
out
sbb
adc
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
dec
or
add
pop
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
into
sbb
xor
inc
add
in
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
pop
cmpsl
xchg
aad
add
add
les
dec
mov
adc
and
outsl
dec
sbb
jno
pop
or
jp
lds
inc
lret
test
icebp
jg
lret
add
cmp
cmc
divb
sub
xchg
repz
std
sbb
aas
dec
outsb
insb
mov
inc
in
iret
push
mov
add
add
mov
push
mov
xlat
push
cmp
aad
pop
add
popa
add
add
jmp
xchg
adc
icebp
cmpsb
movsl
ljmp
icebp
push
mov
push
sahf
lods
stos
push
hlt
call
outsb
lods
mov
sahf
jg
hlt
sub
add
je
push
dec
sbb
mov
fidivrl
mov
dec
jbe
push
addr16
daa
lock
cmp
cltd
or
add
add
add
mov
jg
ljmp
push
cld
js
add
popa
add
add
out
add
lods
and
jne
in
and
mov
push
and
ljmp
out
scas
stos
mov
pushw
inc
dec
ret
insl
push
scas
inc
subb
jle
xor
cmc
mov
das
and
pop
fdivrp
in
ret
ret
or
dec
mov
and
xchg
cmc
mov
adc
cmp
popf
pop
aas
cmpsl
xchg
add
add
add
add
cmp
in
fimuls
sarl
add
add
int
dec
sbb
adc
int
mov
iret
sub
lock
xchg
xor
pop
fsts
js
sti
and
leave
push
repz
pusha
aaa
xor
inc
inc
mov
xchg
addr16
sarl
sbb
push
mov
clc
lds
ret
inc
and
call
add
add
fnstenv
std
negb
sub
test
cmp
cmp
add
popa
add
add
mov
out
pop
stos
std
lock
xchg
push
leave
popa
cmp
adc
dec
mov
clc
or
xor
ficoml
shll
vfnmadd132ss
fcmovbe
leave
xor
and
jae
sbb
ficoml
add
stos
and
nop
outsb
and
mov
add
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
or
add
add
bnd
and
in
fstps
adc
pop
orb
pop
or
aas
dec
xor
shl
adc
push
cs
push
push
pop
adc
int
adc
jp
loop
mov
clc
and
mov
push
xchg
mov
mov
xlat
scas
les
outsl
push
pop
xchg
dec
push
sar
popa
lods
fmuls
push
add
add
add
add
add
pop
sub
cmp
xlat
add
popa
add
add
xchg
pop
inc
push
push
cli
lret
data16
or
mov
xchg
cmp
gs
dec
cmp
leave
pop
fwait
pop
pop
jp
test
mov
sbb
jg
xchg
scas
lock
sbb
inc
das
xchg
cmpsl
cld
push
jl
loopne
stos
sub
sbb
imul
add
add
add
mov
aam
xor
and
pop
fadds
add
add
inc
fsubrs
mov
andb
or
push
push
xchg
scas
lock
outsb
xor
out
daa
sti
into
js
stos
out
and
hlt
in
pusha
nop
sbb
clc
scas
movsb
add
adc
in
test
xchg
out
pop
stos
mov
addr16
inc
sub
out
scas
into
inc
dec
ljmp
outsb
push
cmp
stos
mov
add
add
cmp
add
mov
out
cmp
adc
add
add
aad
les
sbb
jb
jnp
jae
mov
cmp
and
dec
ds
outsl
inc
push
cmp
pop
ljmp
pop
push
push
popf
cld
aad
mov
jle
cmp
jmp
push
mov
addr16
imul
push
in
fwait
cmp
sub
ficoms
mov
xor
add
add
add
add
mov
jmp
fimull
fsubr
mov
pop
flds
add
add
aad
les
mov
add
cmp
jno
mov
mov
mov
jb
inc
cmp
push
cltd
mov
out
pop
mov
and
and
gs
push
ds
add
int3
je
repnz
adc
sub
fildll
pusha
cld
mov
xor
xchg
clc
or
xor
add
add
add
add
pop
iret
pop
aad
ss
dec
cmpsl
into
pop
mov
popa
add
add
inc
jecxz
cmp
or
sbb
sarl
jge
je
int3
dec
add
push
das
mov
push
mov
fldl
arpl
adc
sbb
rcrb
test
lret
mov
das
push
or
lahf
out
mov
scas
out
loopne
mov
stc
in
enter
icebp
std
add
add
add
add
cld
int3
pop
bound
add
popa
add
add
fwait
decl
inc
mov
lret
fbstp
lock
ja
lret
loope
pop
idivl
rcrl
fmuls
and
fcompl
loopne
daa
js
push
cmc
sti
movsl
sub
inc
cmp
test
ss
aam
aas
xor
xchg
add
mov
mov
in
ja
mov
inc
add
add
add
add
lock
jle
repz
add
popa
add
add
fsin
mov
enter
lods
or
xchg
xor
mov
pop
lea
mov
mov
sahf
shll
push
int3
or
loop
pop
xchg
dec
movsl
in
sbb
sub
pop
cwtl
pop
mov
adc
xor
mov
add
add
add
add
cmc
adc
adc
mov
lds
mov
add
add
into
movsb
imul
insb
sarb
sub
addb
pusha
mov
inc
das
fidivrs
out
dec
addl
rol
je
shlb
mov
pop
mov
cli
dec
imul
shrb
adc
inc
std
inc
mov
add
jmp
add
cmp
jl
mov
sbb
sti
leave
adc
add
add
add
add
mov
lock
mov
rcr
jmp
add
add
out
cmc
adc
imul
aas
dec
cs
jp
sbb
rcll
or
or
pop
stc
mov
cmp
out
sahf
xchg
out
pop
cmp
xor
add
sub
mov
aaa
jmp
mov
pop
mov
shll
fstps
push
pop
jmp
mov
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
dec
out
mov
fildl
add
add
mov
test
push
dec
fdivs
sub
cld
repz
mov
mov
out
outsb
ljmp
paddw
pusha
aaa
pop
sub
ja
jb
dec
xchg
ficoml
sbb
inc
imul
out
sbbb
mov
pop
adc
xchg
adc
das
jge
out
add
add
add
add
sub
fildll
or
sbb
fildl
add
add
add
fidivl
adc
fldt
scas
xor
cmc
inc
call
lret
or
lds
bt
sbb
xchg
cli
sub
and
pop
sti
out
mov
ret
add
push
into
int3
xchg
loop
cld
mov
push
push
les
pop
addr16
rcll
in
xchg
add
add
add
add
fs
testl
or
daa
faddl
add
add
shl
add
divb
mov
mov
cmp
repz
insl
sub
pop
mov
mov
jns
jg
insb
or
call
or
aas
movsl
rolb
les
fsts
cwtl
mov
stos
out
pop
insl
add
fmull
add
jns
add
add
add
add
add
jne
jg
clc
cs
push
in
add
popa
add
add
lods
loopne
test
jns
and
mov
mov
into
fxam
js
aaa
inc
inc
mov
mov
xor
xor
lahf
int
popa
loopne
add
ljmp
lahf
aas
sbbb
xor
xchg
faddp
shl
dec
adc
sub
cli
popa
rcrl
jle
jp
jg
add
add
add
or
dec
mov
je
lcall
add
popa
add
add
dec
cmovne
out
push
jns
std
add
inc
cmp
ret
mov
push
frstor
insl
mov
pop
xchg
xchg
cmp
aas
test
in
aam
mov
mov
outsl
mov
ret
lea
add
mov
rorl
push
mov
add
add
fists
dec
mov
xchg
adc
mov
ja
iret
add
popa
add
add
pop
scas
into
pop
test
mov
addb
negb
std
dec
add
adc
add
push
lods
jge
adc
or
push
dec
or
xor
shrl
jmp
or
mov
mov
add
sub
notl
add
add
add
add
fisttps
push
repz
cli
addb
add
popa
add
add
inc
gs
sarb
adc
mov
aam
push
movsb
rcr
pushf
test
stos
lret
cmp
mov
shl
clc
mov
sub
call
mov
mov
and
jle
jae
push
icebp
popf
or
add
add
add
lahf
arpl
std
jle
out
sbb
mov
rolb
add
add
mov
pushf
loopne
adc
je
ret
xchg
mov
lds
adc
scas
adc
cs
test
jno
or
es
xchg
ret
cltd
les
ror
lods
sub
shlb
fistl
jl
mov
sahf
jne
sub
ss
icebp
sbb
inc
leave
push
mov
add
add
add
jo
and
cmp
leave
push
test
popa
add
add
fwait
outsl
pop
push
mov
mov
les
shll
das
inc
mov
hlt
cmpb
enter
outsl
fildl
push
sub
jne
mov
push
xchg
jno
stos
fidivs
jl
xchg
xor
sub
mov
leave
and
inc
lock
adc
and
mov
or
fs
add
add
add
add
popf
aam
sub
add
popa
add
add
mov
mov
jb
mov
test
stos
jb
call
adc
lods
icebp
add
inc
mov
mov
push
mov
push
and
jmp
test
outsl
jmp
jmp
inc
xchg
ret
sbb
popf
ja
bound
and
rcrl
add
add
add
hlt
mov
jbe
hlt
mov
and
cmpsb
iret
xchg
popa
add
add
gs
inc
xor
mov
call
or
push
ljmp
or
popf
test
add
fsubrl
cmp
or
lea
add
push
adc
mov
imul
adc
mov
out
hlt
mov
add
add
add
ror
mov
sub
out
sbb
test
add
add
push
rolb
xor
jno
lret
sbb
sbb
push
push
mov
jno
dec
dec
xor
xor
push
ret
mov
pop
xor
inc
inc
xchg
and
in
addl
sbb
call
in
ljmp
lds
mov
fyl2xp1
enter
add
add
fucomi
outsb
and
pop
mov
dec
rolb
add
add
mov
das
dec
mov
jne
fstpl
pop
cmp
call
clc
call
adc
xchg
or
push
movsl
add
repz
xchg
fcmovnbe
mov
jg
mov
xor
outsl
mov
pop
sub
pop
dec
push
sub
xchg
add
add
add
mov
and
aam
rolb
add
add
cmpsl
mov
jnp
jl
int3
push
arpl
scas
xchg
mov
sub
inc
stc
lods
push
adc
out
pop
pop
aam
repnz
and
mov
mov
flds
fisttpl
mov
xor
mov
lods
test
mov
ret
clc
in
dec
xor
cmp
push
inc
add
data16
add
add
add
stc
call
into
inc
mov
jns
mov
popa
add
add
cmp
jne
push
sub
push
xor
shlb
rcl
popf
mov
je
shlb
pusha
push
xlat
add
mov
loopne
cwtl
fisttpl
outsb
stos
add
sbb
insl
movsb
add
rcr
test
or
inc
cmp
and
dec
inc
aad
jbe
add
add
add
fisubrs
cwtl
sar
repz
push
data16
jo
add
popa
add
add
push
sbb
iret
loope
lcall
jne
pop
rcll
ret
or
in
inc
aaa
pop
std
cmp
fldt
into
inc
mov
mov
sbbb
popw
cmpsb
dec
dec
fimuls
push
lcall
xchg
jb
fs
sub
std
pop
mov
inc
add
add
add
add
int3
sbb
out
loopne
lods
iret
ret
rcl
add
popa
add
add
or
jge
sub
pop
fs
nop
loope
mov
dec
xor
imul
mov
cmp
push
or
mov
in
incl
dec
ds
xorb
cwtl
inc
cmp
adc
jg
and
push
fcmovne
sbb
filds
mov
xchg
and
orl
push
test
fildll
les
add
popa
add
add
jge
and
push
jno
push
ret
mov
pop
inc
lret
inc
mov
dec
push
in
scas
popf
outsb
mov
mov
frstor
cltd
mov
jno
mov
xlat
scas
jno
stos
mov
pop
roll
enter
xor
xchg
xchg
dec
fnstcw
mov
add
add
add
add
lods
fcomi
sarb
add
aam
add
add
push
int
xchg
ljmp
mov
mull
lcall
mov
inc
sub
jecxz
ret
pop
std
dec
lret
pop
stc
and
xorl
inc
sti
jb
xchg
dec
test
in
push
cmp
scas
adc
sbb
sub
push
out
clc
dec
lock
dec
adc
clc
js
pusha
add
add
add
add
divl
dec
cmp
dec
stc
dec
fmull
hlt
aam
add
add
xor
stc
and
pop
icebp
adc
adcl
test
aam
push
jmp
jbe
mov
add
jl
nop
push
out
jno
and
stos
imul
push
sub
shrl
sbb
shlb
jnp
adc
add
jb
out
daa
pusha
rcrl
test
mov
add
add
arpl
jge
mov
daa
xor
dec
push
push
aad
add
add
cmp
repz
add
fidivrs
jecxz
paddusw
fimull
xor
xchg
lret
lret
dec
loope
and
add
mov
xor
cltd
pop
pop
jno
popa
out
ljmp
dec
shrb
adc
js
idivb
sub
lea
sub
test
cmp
add
add
add
daa
push
imul
push
out
sub
faddl
add
add
xchg
add
xlat
jge
xchg
cwtl
lret
sbb
nop
inc
popf
push
rorb
cmc
movsl
leave
test
sub
mov
jge
jne
cmp
sub
imul
sub
mov
xchg
gs
mov
push
push
jno
in
cmpsl
insb
inc
or
in
pop
repnz
add
add
add
ss
xor
and
cmpsb
enter
add
add
sub
mov
repz
mov
test
popf
in
rol
out
sub
in
cmpsb
lahf
outsl
cmpsl
ror
stos
popf
pusha
ja
mov
inc
add
inc
les
or
cli
lods
cld
and
adc
out
or
pop
push
shlb
ja
add
jle
pop
leave
xor
jns
call
push
adc
sbb
ljmp
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
dec
fldl
add
add
adc
mov
mov
fcomip
subb
jne
xchg
dec
std
adc
xor
enter
or
sbb
inc
aam
cmp
jmp
popf
jns
call
clc
lods
ret
icebp
shr
mov
test
mov
in
loop
inc
ja
test
mov
or
and
add
add
add
push
aad
out
fucomip
ss
cmp
xor
stos
fldl
add
add
cmpb
jecxz
xor
xchg
ret
cmp
loopne
loopne
adc
push
popa
mov
repz
stc
adc
jo
push
mov
pop
sbb
rcrb
jb
sbb
sahf
lcall
add
dec
jl
pop
mov
stos
sbb
or
ja
orl
cmp
jge
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
or
add
popa
add
add
or
xchg
push
das
test
mov
ds
dec
xchg
jns
adc
mov
mov
dec
sarl
cld
pop
lds
inc
sbb
mov
in
movsl
xorb
inc
call
sbb
lcall
jg
or
ja
jbe,pn
pop
inc
sub
add
add
add
cmp
paddsb
nop
shll
fiadds
add
add
add
jle
aad
xlat
fcomi
adc
push
dec
push
jae
clc
adc
mov
loop
cmp
aaa
mov
cmpsb
dec
sar
andl
in
mov
out
ror
xor
mov
or
loop
cmp
in
mov
or
mov
or
in
add
add
add
add
jle
call
cli
lcall
add
popa
add
add
xchg
xchg
insb
adc
jns
mov
fnstcw
mov
cmp
dec
stc
push
pop
les
out
int
dec
mov
pushf
pushl
jns
ds
sbb
jns
cld
ljmp
dec
and
sub
adc
push
popa
pop
cli
jl
push
clc
mov
arpl
mov
std
lock
add
add
add
test
and
pop
dec
add
popa
add
add
popf
push
sub
add
nop
xchg
das
jno
jmp
imul
cmp
insw
cmpsl
lods
std
sub
sbb
fs
fiadds
push
adc
into
mov
aam
mov
pop
int3
or
mov
push
sbb
imulb
stos
push
push
test
dec
outsl
jge
lock
push
shr
add
add
add
add
aam
fnstsw
out
fcmovu
in
pop
out
ja
filds
add
add
mov
or
inc
push
inc
jns
lret
inc
xchg
dec
mov
mov
cmp
lods
jg
test
loopne
das
mov
and
pop
mov
mov
xchg
jp
imul
rclb
mov
popa
repz
pop
pop
dec
cmpsb
inc
xor
rclb
xlat
fcomp
push
lods
jns
xor
add
add
add
add
sbb
inc
jecxz
mov
icebp
push
clc
icebp
filds
add
add
shll
fs
nop
mov
test
mov
repz
sbb
sub
cmp
xchg
ficompl
xor
fstpl
dec
inc
shrb
mov
stc
xor
cmp
mov
add
dec
pop
sbb
leave
rclb
or
sbb
stos
int3
xchg
sbb
repnz
jnp
mov
add
add
add
mov
mov
icebp
and
into
aad
loopne
add
add
push
add
or
jno
sbb
in
in
dec
das
flds
cmpsb
push
fs
xchg
mov
mov
jbe
paddd
pushf
lea
jno
incb
push
push
lea
dec
imul
aam
mov
or
push
fmulp
ds
dec
gs
rcll
add
add
add
add
xlat
repz
das
cli
fists
dec
es
pop
jg
dec
mov
add
popa
add
add
mov
out
cs
sbb
push
lret
push
sub
fnsave
test
clc
cmp
mov
std
mov
cli
mov
imul
leave
fsubr
into
rcr
xchg
idivb
out
and
dec
stos
addr16
pop
and
lea
mov
imulb
daa
mov
push
frstor
or
in
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
xor
ja
add
add
add
add
add
add
add
add
add
add
clc
aaa
add
cld
aaa
add
add
add
daa
mov
add
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
